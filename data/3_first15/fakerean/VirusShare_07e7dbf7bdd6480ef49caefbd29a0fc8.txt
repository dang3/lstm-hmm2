sbb
add
std
mov
outsl
mov
stos
xor
ret
lods
cwtl
mov
mov
sbb
mov
push
insb
ret
std
scas
mov
mov
sbb
gs
dec
out
daa
dec
sti
insl
inc
xlat
adc
pusha
mov
data16
es
repnz
jg
pop
xchg
push
loopne
test
xchg
dec
pusha
pop
sub
test
or
loopne
cmpsb
enter
and
push
loop
out
push
xchg
pop
mov
cmpsl
cmp
scas
mov
rdtsc
and
mov
out
repz
fldz
pop
push
xchg
sub
or
pop
stos
xchg
push
ja
dec
into
das
jmp
fidivl
sub
or
sbb
inc
pop
lret
or
in
mov
push
and
pusha
movsl
mov
xchg
insl
imul
clc
repz
and
fwait
loope
icebp
js
mov
mov
pop
sub
xchg
out
mov
fiadds
test
mov
das
sbb
push
je
sbb
inc
jns
or
addl
dec
sbb
inc
andps
jno
cmp
xchg
ret
test
xchg
nop
call
fcomps
out
test
inc
fisubrl
bound
loope
pop
pushf
stos
subb
or
sub
sti
add
pop
jb
push
pop
cmpsb
mov
jg
xchg
jg
lods
rcrl
adc
pop
clc
xchg
pop
clc
mov
fists
jl
int3
sbb
pop
subb
cltd
push
ja
loop
pop
rclb
es
stos
imul
enter
dec
xchg
mov
mov
dec
adc
shll
jg
and
xchg
jo
sbb
out
adc
jle
sbb
jae
push
dec
lods
mov
or
pop
subl
jb
mov
loopne
in
mov
test
repnz
pushf
loopne
popa
shrl
scas
mov
clc
jno
dec
push
addr16
std
jmp
xor
gs
and
dec
xor
aad
sub
mov
jl
mov
pop
mov
cli
bound
push
cmp
in
and
dec
jne
inc
loopne
dec
pushf
ljmp
pop
out
mov
and
jne
sub
pushf
jmp
ja
insl
sbb
repnz
add
jg
icebp
sbb
push
hlt
mov
pop
lea
add
scas
leave
mov
pushf
and
cmp
jb
shlb
pop
movhps
leave
stos
adc
ret
push
dec
psubd
rolb
sbb
push
std
roll
add
pop
jno
jle
mov
cmp
inc
inc
stos
ret
and
jp
in
test
xchg
dec
idiv
lods
adc
out
incl
pop
cli
repnz
aaa
shrb
loope
lods
or
pop
xor
ja
sbb
add
call
lods
out
gs
dec
mov
push
jp
adc
adc
ss
pop
mov
mov
in
adc
in
adc
jge
jbe
add
cmp
faddl
shll
cmp
add
lcall
stos
or
dec
outsb
lock
in
and
stos
iret
je
dec
jmp
jno
jae
icebp
ds
int3
or
hlt
dec
shrl
xchg
mov
cli
outsb
sti
cmp
jg
js
in
ficoms
adc
jg
sbb
adc
fistpll
icebp
xchg
xchg
ja
call
addr16
push
cmc
xchg
fsts
cmpl
adc
or
aam
sahf
and
mov
pop
sub
cltd
adc
jns
sub
dec
mov
test
add
pop
lods
cmp
hlt
xchg
fisubl
jp
mov
sub
ss
les
xor
and
movb
daa
cmpsb
insl
mov
cwtl
inc
pop
sbb
hlt
xchg
lcall
push
repnz
cmpsb
aaa
in
jne
bound
mov
ds
lds
fnsave
imul
idivb
jle
mov
rclb
add
mov
cmpsl
pop
inc
adc
negb
shrb
push
mov
sbb
pop
cltd
incl
or
and
loopne
mov
mov
arpl
ret
mov
dec
xor
scas
xor
xlat
std
aam
xor
pop
in
out
cmc
aam
sbb
sbb
repnz
mov
out
sbb
adc
aad
xchg
std
sahf
leave
mov
mov
out
cmp
cmp
xor
jecxz
scas
sahf
xor
or
int3
gs
push
stos
push
jne
das
ret
and
out
bound
push
repnz
xlat
std
fiaddl
adc
mov
insl
insb
mull
and
jne
loopne
xlat
jne
sbb
mov
inc
in
mov
and
mov
sub
jns
loope
pop
pop
push
xlat
jecxz
outsl
out
fcom
push
jmp
add
ret
xlat
push
mov
dec
aam
sub
push
and
insb
int
lahf
mov
push
lret
lahf
inc
fcmovnu
add
adc
cmc
sarl
je
mov
dec
sub
cmp
xchg
push
dec
pop
pop
loopne
shlb
inc
shlb
stc
pop
push
mov
or
pop
nop
or
mov
lods
mov
shlb
dec
or
dec
ss
out
jnp
jae
or
jmp
xchg
adc
nop
out
lahf
mov
aas
ds
out
arpl
int3
push
lods
mov
push
nop
out
push
pop
xchg
xchg
outsb
or
nop
jnp
dec
jae
jbe
insl
jge
pop
adc
ljmp
cwtl
pusha
or
adc
jb
push
jp
lret
arpl
push
in
jno
adc
loop
sbb
xchg
cmp
inc
pop
test
jb
jae
jno
adc
pop
lods
mov
cmp
pop
sub
repnz
mov
push
lea
mov
jmp
or
shrb
dec
mov
xchg
jb
aad
das
in
adc
fistl
jb
and
mov
imul
ret
push
mov
pop
stos
jmp
adc
inc
test
mov
jo
inc
movsl
fimuls
adc
adcb
in
movsl
jle
in
pushf
sub
mov
jg
scas
pop
or
jo
inc
popf
aam
mov
fsubl
stc
stos
mov
sbb
fucomip
aad
xchg
mov
adc
in
insl
das
negb
loop
push
std
frstor
cmp
xor
add
xor
stc
dec
cmp
pop
repnz
out
sbb
je
xor
lds
insb
add
jnp
cmp
fs
icebp
gs
loop
dec
mov
les
pop
in
pop
xor
mov
lods
icebp
add
dec
enter
sti
or
clc
jge
pop
push
push
inc
sbb
push
cmpb
xchg
pop
add
sbb
stc
fstpt
cld
adc
cmp
cmpsl
addr16
out
pop
or
pop
add
rorl
ret
jo
cmp
cmp
xchg
int3
jno
sahf
in
lock
or
popa
add
pop
lds
fisubrs
pop
aam
in
sub
int
jnp
in
pop
xor
mov
mov
push
inc
mov
jb
in
jge
icebp
pop
or
js
bound
mov
es
push
jae
pop
in
lret
leave
push
and
dec
repz
cwtl
inc
add
pop
roll
xchg
jno
lods
or
xchg
inc
jecxz
pop
cmp
mov
ja
jo
gs
aad
xchg
mov
iret
xchg
xchg
cld
insl
jg
push
jae
push
sarb
jb
lods
add
daa
push
std
xor
sbbl
js
lahf
cld
decb
inc
push
mov
sbb
bound
push
in
insb
pusha
into
push
mov
adc
add
pop
mov
jp
insl
addr16
push
pop
add
lret
insb
push
fidivrl
mov
mov
jl
lods
mov
icebp
lcall
xchg
or
repz
in
fisubrl
das
mov
sbb
ja
adc
push
adc
cmovns
ret
sbb
popa
pop
sbb
push
scas
pop
cmp
and
pop
test
jp
dec
adc
icebp
jne
jno
push
cs
mov
mov
push
das
and
das
lret
xor
es
dec
jecxz
int
mov
mov
pop
mov
or
jb
push
imul
dec
xchg
pop
fmull
push
push
stc
rcrl
loopne
xchg
aaa
cmpb
mov
into
and
jl
jb
or
add
ss
dec
aas
xchg
scas
xrelease
jecxz
in
or
mov
xchg
or
pop
cwtl
add
inc
call
jno
adc
outsb
jle
fwait
pop
mov
iret
outsl
sbb
xchg
mov
pushf
cmpl
push
mov
mov
int
push
inc
jle
pop
add
mov
or
mov
jp
sti
push
adc
aaa
mov
cli
mov
mov
fscale
cmp
push
fiadds
xchg
fs
shlb
cmpsl
pop
test
dec
repnz
popa
pop
jo
ret
mov
mov
or
mov
sub
adc
push
dec
cmp
push
fistpl
lcall
or
in
das
dec
push
leave
xchg
xor
push
xlat
int
push
das
lahf
jno
mov
cld
aaa
test
ret
pop
pop
lahf
pop
mov
out
adc
push
scas
xchg
mov
cmc
sarl
test
popf
or
rorb
je
adc
adc
cmpsl
push
mov
xor
mov
push
dec
push
mov
mov
inc
fsubrl
push
add
test
or
int
mov
or
pop
or
repnz
pop
push
rorb
pop
add
mov
in
xor
xor
adc
data16
not
cmpsl
xlat
or
inc
movsb
fildl
lds
or
or
lods
dec
sbb
dec
jne
or
jb
mov
std
and
pop
fisttpll
sbb
pushf
sub
xchg
push
repnz
out
pop
add
mov
in
adc
jnp
sub
mov
xor
jae
lahf
rolb
in
xchg
and
inc
shl
xchg
fstp
sub
or
xor
and
jl
sahf
ja
xchg
pop
cli
test
xor
outsb
mov
and
pop
xchg
mov
add
lea
mov
mov
es
aad
xor
in
jmp
retw
xchg
dec
aad
inc
push
inc
jl
mov
inc
int
inc
sbb
cmp
mov
inc
dec
push
push
stc
movsb
outsl
sbb
mov
dec
xchg
add
stos
cli
fstl
cltd
mulb
xlat
enter
xor
dec
fsts
cmpsb
in
push
hlt
sbb
aaa
addr16
sbb
xchg
in
push
ret
bound
xor
xchg
mov
push
jae
dec
scas
loop
fs
rorb
mov
dec
fiadds
xor
fisubrs
mov
mov
out
sbb
mov
xor
jge
push
lds
repz
outsl
pushf
push
xchg
adc
fucomi
pop
sub
jle
adc
sbb
and
adc
mov
out
bound
cmp
pop
shlb
adc
shl
mov
in
mov
js
sub
push
push
idivl
aad
jecxz
fdivs
push
insl
int
loop
jmp
push
mov
xchg
fisubrl
stos
sub
dec
or
sti
push
jge
out
mov
pop
rcrb
mov
cli
mov
fs
jecxz
rcr
push
sub
call
sub
cs
cmpsb
or
ret
mov
or
xor
hlt
cmpsl
adc
daa
mov
adc
or
imul
mov
sbb
or
mov
mov
xor
or
inc
repz
mov
adc
cmp
adc
aaa
add
rcrb
mov
std
xchg
and
sar
push
jmp
or
arpl
and
movsb
inc
lret
pop
xchg
mov
fidivl
testl
fcompl
sub
inc
pop
inc
and
loopne
xchg
jae
cvtps2pi
les
jle
pop
inc
lds
inc
dec
fwait
jle
xchg
lcall
pop
cmpb
cmp
dec
mov
xor
mov
divl
jp
sbb
cmp
int
iret
push
xchg
push
sub
ret
clc
dec
mov
ss
jg
scas
mov
inc
push
mov
bound
sbb
mov
mov
daa
or
mov
lock
loop
jl
mov
xor
mov
mov
mov
ret
sub
push
pop
jae
jg
das
adcb
jbe
lret
cmp
cwtl
push
inc
js
inc
ds
daa
into
or
scas
fstpt
xor
xor
dec
push
jne
xor
pop
mov
fiadds
out
sub
add
in
mov
push
jns
add
pop
cmp
push
stos
add
inc
jl
mov
bound
dec
out
inc
fucomp
rcrl
test
add
ljmp
mov
nop
sahf
ja
cmp
cmp
into
cli
arpl
nop
push
xchg
sti
add
or
sahf
aad
or
xchg
inc
fcos
xor
mov
mov
fucom
arpl
std
sub
jno
jno
cmp
and
ret
cmp
mov
lock
pop
je
sbb
daa
test
mov
pop
fiaddl
imul
adc
sub
mov
addr16
es
push
push
pop
jmp
ja
inc
hlt
nop
mov
arpl
or
movsl
call
aas
arpl
add
cmp
arpl
or
lock
xchg
fidivrs
pop
es
inc
xchg
vphadduwd
jo
xor
in
mov
out
inc
sahf
enter
mov
sub
ds
lea
outsl
add
repnz
lds
test
adc
mov
dec
xor
xor
inc
pop
fmuls
pop
mov
jbe
push
fdivl
mov
xor
aam
xor
dec
and
xor
adc
jbe
inc
cmpb
cmpb
icebp
xor
or
mov
jns
stos
dec
adc
xorl
sbb
es
fldl
jbe
ja
or
pusha
ds
sti
jp
jbe
movsl
in
ja
mov
dec
sti
das
notl
mov
test
ljmp
mov
mov
push
repnz
and
xchg
loop
jle
xor
lods
fdivs
stc
data16
scas
push
pop
cmp
inc
addr16
js
mov
aam
sti
cmp
stos
std
clc
mov
cmpsl
cld
stc
inc
and
dec
ret
and
outsb
faddl
repnz
xchg
popf
sbb
adc
push
push
insb
sbb
push
or
or
add
xchg
nop
xchg
in
ds
sub
repz
addr16
sahf
push
pop
ret
addr16
xor
int3
mov
ret
in
mov
je
ret
stos
push
push
xlat
loope
or
mov
gs
fwait
mov
cmpsl
push
fistpl
or
and
insl
mov
xchg
jge
insl
arpl
jl
cltd
or
mov
adc
xchg
stc
lcall
sahf
loope
xchg
mov
mov
push
and
xor
idivl
aaa
fdiv
imul
adc
jmp
in
pop
test
fs
mov
stos
loop
cmp
ja
xlat
or
in
and
imul
fcoms
iret
dec
jo
loop
test
mov
mov
es
push
js
mov
insb
or
pop
pop
push
aas
repz
addr16
cmp
dec
inc
inc
test
dec
push
loopne
pop
fbstp
mov
pop
push
insb
xchg
cs
in
jp
cmp
mov
mov
mov
popf
or
leave
inc
scas
jno
insb
lret
popa
cmpsb
sub
inc
call
sub
pop
push
mov
lcall
dec
leave
add
aam
push
or
mov
and
scas
sub
pop
dec
xlat
fcmovnbe
lcall
or
mov
stc
jae
or
xor
mov
cmp
das
orb
inc
shll
shll
sbbb
jnp
mov
and
aam
fisubs
lcall
jp
fsubrl
jecxz
push
jl
sub
cmpsb
fdivp
mov
adc
pop
adc
xchg
jb
jge
test
lea
xor
dec
mov
std
push
cmp
and
adc
inc
inc
cmpb
out
test
mov
loopne
push
and
fstps
push
sahf
mov
add
repz
in
loop
out
add
rcrl
adcl
mov
jle
inc
das
stos
sub
inc
cmp
sbb
xchg
push
scas
mov
mov
add
jns
and
lret
imulb
adc
push
popf
cmpsl
cmp
dec
int
jecxz
mov
push
fs
fnstcw
loope
dec
fisubrl
sub
test
mov
fdivrl
popa
cmp
aam
xlat
imul
xchg
lcall
js
testb
insb
mov
inc
sub
ja
pop
out
insb
adc
arpl
out
inc
nopl
sbb
push
xor
mov
scas
aaa
ljmp
cmp
jecxz
push
jo
jl
push
jl
xchg
cld
sarb
xchg
jnp
sti
push
cltd
mov
mov
test
lcall
jl
mov
loope
mov
cmp
jmp
ffree
push
popw
sbb
out
lods
cmp
hlt
call
aaa
inc
sbb
mov
arpl
movsl
jae
ret
in
cmp
pop
stos
ja
mov
inc
orl
sahf
les
xor
xchg
rcll
inc
mov
push
clc
out
push
xchg
and
push
lods
and
stc
scas
stos
xlat
xor
stos
dec
repnz
jp
sarl
fcmovnb
dec
jne
mov
lods
push
pop
or
lea
hlt
mov
pop
fucomip
cmp
xchg
cltd
sti
ja
push
pop
addl
adc
insb
dec
and
loope
out
mov
cmp
push
dec
cmc
and
cli
dec
xchg
push
loope
xor
insl
lret
xchg
xor
mov
inc
cmp
les
fcomps
xor
xchg
nop
xchg
and
scas
pop
inc
cli
loopne
or
dec
gs
dec
stos
adc
sbb
leave
xor
scas
repnz
ret
mov
in
lock
pop
push
xchg
hlt
je
jp
mov
in
push
adc
mov
xchg
xchg
add
fildll
xor
pop
stos
fildll
sub
idiv
add
por
mov
lcall
pop
add
mov
push
mov
adc
scas
mov
mov
repnz
les
mov
hlt
cwtl
iret
inc
push
jl
xor
jecxz
and
cmp
or
mov
cmpl
in
pop
jl
sbb
mov
pushf
pop
cmp
jnp
loop
mov
cmp
xor
xor
fidivl
rolb
cvtpi2ps
in
dec
cmp
mov
cmp
ret
and
jno
cwtl
outsl
aas
daa
dec
mov
or
sti
je
sbb
dec
adc
dec
sbb
pop
push
dec
or
dec
nop
pop
pop
cmp
lea
push
addr16
repnz
repnz
inc
sbb
adc
pushf
movsb
dec
push
mov
add
and
and
jmp
pop
pop
add
or
stc
pop
and
in
jg
sbb
js
inc
sar
push
mov
js
in
imul
pop
nop
arpl
icebp
mov
shrb
enter
push
xor
iret
ja
bound
fsubs
into
mov
mov
xchg
loope
outsb
cwtl
mov
ret
sbb
shll
adc
fiadds
add
and
xlat
lock
repz
cmp
mov
xchg
stc
push
imul
arpl
push
jno
push
cld
movsb
out
arpl
in
jmp
cmp
fnsave
inc
lcall
lret
out
lcall
sub
cmp
xor
ret
jecxz
das
pop
mov
pop
or
pop
hlt
scas
dec
in
dec
mov
loop
mov
lea
jnp
mov
sti
jne
cmp
cmpsl
xlat
xchg
push
push
es
or
enter
negb
push
das
jnp
jg
sbb
xchg
aaa
dec
nop
sar
adc
cmp
out
inc
out
mov
inc
hlt
pop
cmp
push
icebp
clc
sbb
daa
xchg
mov
adc
push
pop
insb
jmp
pop
xchg
mov
adc
pop
lret
cmp
imul
sub
xchg
pop
xchg
xchg
cmp
jns
dec
or
jg
arpl
pop
mov
inc
push
or
es
pop
scas
sub
stos
and
mov
lea
lcall
enter
lret
adc
pop
test
jge
cmp
sub
outsl
xchg
adc
adc
idivb
std
pop
adc
or
addr16
out
pop
xchg
push
lds
cmc
and
dec
jno
pusha
or
out
dec
dec
mov
mov
inc
xchg
and
pop
dec
sarb
adc
sub
enter
dec
mov
fldt
mov
sbb
or
fdivrl
sub
out
negl
pop
fsubrs
xchg
cmpsb
mov
into
add
pop
gs
imul
add
xchg
cwtl
ss
dec
and
bound
add
mov
inc
or
jge
add
in
jo
mov
and
lods
pushf
test
jle
sub
test
pop
lcall
stos
xchg
or
or
mov
lahf
mov
cmp
es
cmpb
xchg
jns,pt
jae
jmp
fmuls
fmull
sbb
test
pushf
scas
movsl
push
adc
rcl
xor
mov
pop
stos
and
mov
push
andl
ja
das
div
mov
insb
inc
imul
inc
lret
add
test
leave
orb
and
pop
cli
mov
sbb
rcr
inc
xor
pop
cmc
xchg
cld
into
and
mov
jp
rol
js
shlb
and
add
push
mov
sbb
mov
xchg
dec
pop
cmpsb
sbb
stos
jae
aam
or
mov
iret
and
mov
jne
fs
fldln2
pop
ret
adc
jne
shlb
dec
in
mov
add
mov
add
jge
pusha
repz
stos
dec
jns
and
fwait
push
incl
dec
xchg
sahf
cld
cwtl
sahf
imul
dec
push
pop
or
ret
add
xchg
cmp
int
jg
push
xchg
jge
sbb
or
out
lods
and
add
mov
sbb
push
mov
xchg
or
push
shlb
add
mov
int3
xchg
cli
ficoms
jne
adc
daa
repz
outsl
clc
mov
mov
dec
popf
insb
mov
mov
arpl
xchg
repnz
aad
in
out
sbb
out
mov
pop
ss
sbb
xchg
rorl
adcb
ja
xchg
popa
dec
xor
fldl
cmc
sub
inc
mov
xchg
cli
fldt
pusha
nop
sbb
shll
jne
in
cmpsb
outsb
cmp
loopne
mov
data16
push
fisttps
pop
imulb
nop
adc
iret
add
fistps
mov
stos
fnstcw
adc
push
cwtl
fcmovbe
insb
sbb
out
insb
inc
faddl
cltd
fwait
enter
bnd
out
jg
add
xchg
jmp
ljmp
scas
inc
enter
nop
xchg
dec
cmp
dec
xor
in
out
dec
pop
aam
cmp
or
add
push
or
push
jne
mov
inc
jp
pop
icebp
or
pop
sub
in
dec
push
rorl
insl
or
xlat
cli
fnsave
pop
or
sub
enter
fs
xchg
push
jg
pop
pop
mov
aad
daa
xor
sub
mov
push
enter
mov
jmp
rorl
cmc
nop
xor
fcmovne
adc
or
rclb
ret
loope
or
std
mov
nop
inc
call
dec
mov
test
cmp
mov
push
mov
ret
xor
test
loop
repz
push
test
ss
push
into
out
cwtl
pop
push
add
out
icebp
jno
outsl
xchg
shlb
or
icebp
insb
and
sub
aas
mov
push
add
jb
sarb
adc
jmp
adc
mov
pop
shll
dec
bound
xor
xchg
orb
mov
rorl
push
repz
daa
mov
or
jmp
pop
ror
nop
mov
repz
sbb
pmulhuw
outsb
xor
inc
fsubrs
lods
cli
adc
jae
jo
push
jle
sar
mov
pop
xchg
add
dec
adc
pop
push
sbb
icebp
xlat
jns
mov
jbe
repnz
xchg
sbbb
rcr
lds
xor
inc
std
stc
test
imul
sbb
sub
popl
in
stc
and
lcall
jmp
pop
push
mov
fwait
mov
push
or
or
mov
add
sar
or
ds
push
daa
push
loope
jp
xor
jl
ljmp
test
jecxz
sbb
rcr
js
xchg
push
pop
adc
mov
cmp
stc
pushf
loopne
add
push
es
ljmp
adc
cmp
xchg
repz
pop
pop
push
sti
xor
dec
cs
outsl
add
notb
in
sbb
xlat
push
cs
sub
aam
out
sub
pop
enter
jle
popa
shrl
outsl
test
add
dec
push
cwtl
mov
out
adc
jae
xchg
addb
or
scas
enter
jno
cmp
jae
mov
cmp
jne
sarl
dec
jmp
cld
dec
std
stos
or
movsl
sbb
add
pop
ds
and
pop
push
je
lods
vsubps
pop
pop
or
stos
test
dec
movsb
lock
faddl
out
sbb
cmp
dec
aam
sbb
and
adc
addr16
jnp
and
cmc
xchg
xlat
ss
cmp
or
mov
dec
mov
add
repnz
or
jp
das
xchg
fdiv
sbb
dec
cmpsl
sbb
aad
or
int3
or
in
js
stc
int
insl
jle
lds
pop
gs
mov
lret
cmp
inc
lods
mov
adc
mov
mov
fists
sbb
int
popf
lret
cmc
std
mov
das
adc
xchg
les
and
cltd
ficoml
pop
cwtl
aam
inc
dec
fidivrs
inc
ljmp
sbb
mov
xchg
fsub
arpl
adc
xchg
push
lea
xchg
xor
push
into
add
leave
rol
push
fisubl
ds
sub
xor
in
mov
in
inc
sbb
inc
lods
mov
rorl
data16
test
sbb
push
fbstp
lret
xor
sbb
inc
movsl
mov
lcall
pop
cli
outsl
and
mov
pop
push
push
mov
aaa
fists
and
fcomip
mov
insb
add
xor
pop
into
scas
mov
mov
stc
enter
xchg
jbe
in
cmpb
mov
or
or
ret
pop
loope
add
cltd
xchg
insl
xlat
cmpl
xchg
clc
insl
movsl
mov
inc
lods
fisttps
popf
mov
mov
push
cmpsl
xlat
popf
movsb
outsl
jae
inc
leave
les
je
push
xchg
adc
cwtl
sbb
fidivs
cltd
sbb
sub
fdivs
cmp
sub
test
lods
jle
or
test
pushl
gs
jmp
icebp
insl
push
ret
jmp
jl
test
nop
lret
sarb
shlb
inc
adcl
add
pop
loopne
sub
or
das
adc
mov
inc
mov
out
pop
sbb
adc
hlt
dec
adc
jle
aad
insl
mov
pop
jbe
sub
scas
lods
mov
test
jnp
ret
out
into
mov
fnstenv
frstor
and
or
push
sbb
iret
xor
push
fistpl
pop
inc
push
leave
mov
pop
mov
psadbw
hlt
rcrl
jl
cmpsl
push
push
dec
movb
scas
add
fisttpl
jmp
aas
jle
jl
adcl
add
mov
fbld
outsb
push
push
pushf
pop
mov
push
fidivs
push
mov
sahf
or
add
pop
jle
push
std
bound
movsb
xor
mov
outsb
mov
jecxz
shll
cmp
sub
xchg
outsb
or
filds
loopne
int3
xchg
mov
sub
je
jno
daa
imul
inc
scas
mov
or
xor
ficomps
push
mov
mov
ja
aad
adc
pop
cwtl
jae
lahf
out
das
bndldx
mov
faddp
xor
cmpsl
mov
sbb
mov
shlb
pop
in
mov
jnp
jge
xchg
icebp
and
imul
mov
stos
dec
pop
iret
push
ret
test
call
loope
ja
inc
xor
enter
or
mov
outsl
cld
ss
mov
sub
unpcklps
jmp
sbb
fldt
cmpl
out
adc
dec
jo
push
fstpt
cmc
xchg
mov
test
paddsw
xor
loopne
rorb
cmpsl
imul
mov
add
or
jecxz
bound
jo
test
push
cwtl
xorl
mov
icebp
push
dec
add
aad
xchg
in
fsub
clc
lret
pop
cwtl
aas
lock
out
add
cmp
or
or
rcrb
xchg
jnp
push
mov
jnp
jae
cmp
or
xchg
mov
ficomps
jg
insl
xchg
shrl
xor
clc
sub
jbe
fisubrs
xor
pop
adc
dec
pop
shrb
out
lcall
sub
nop
inc
dec
fistl
dec
sbbl
inc
ret
jmp
in
imul
jmp
pop
aam
adc
pop
cli
cltd
movsb
cmp
jo
pop
sub
aad
je
mov
pop
insb
push
add
pop
jl
inc
adc
mov
xchg
iret
dec
mov
push
jl
xlat
mov
jmp
xchg
das
push
push
sub
mov
xor
cs
jecxz
mov
scas
pushf
imul
adc
xchg
std
push
test
data16
andb
imul
pusha
push
mov
pop
push
push
jle
into
cmpsl
add
je
rol
inc
hlt
daa
jnp
xor
pop
imul
inc
gs
movsl
jns
popa
test
pop
pop
mov
inc
sbb
mov
jne
xchg
add
inc
aas
jg
push
cmp
pop
fcompl
mov
xchg
jge
lock
out
adc
lock
insl
pop
dec
mov
xlat
fiadds
fwait
mov
mov
xchg
test
jmp
adc
mov
jge
mov
or
dec
mov
add
xor
out
sub
sub
jne
loope
loop
pop
add
xor
insl
sub
cvtpi2ps
adc
jno
sbb
adc
sub
add
dec
mov
xor
push
lcall
cltd
cwtl
ljmp
fists
pusha
add
dec
cmc
jnp
xchg
fildll
jle
xchg
mov
add
dec
loop
lods
add
jge
adc
pop
lods
fisubs
loop
push
sbb
jnp
add
rclb
std
xchg
jl
imul
cmp
fistpl
dec
clc
jno
and
cs
or
fistps
shl
xor
mov
ja
mov
leave
mov
ja
mov
jmp
filds
leave
scas
sbb
inc
xor
sbb
pop
dec
js
inc
dec
repnz
int3
subl
or
dec
pop
mov
add
sub
sbb
pop
jns
push
negb
pop
xor
andb
and
mov
lock
shll
xchg
and
jp
fstpl
dec
cmp
int
xchg
out
jg
push
outsl
push
lcall
inc
std
mov
inc
xchg
push
and
dec
in
add
loop
sbb
or
lret
pop
cmp
jge
dec
lods
out
dec
cmp
jle
movsb
pop
mov
inc
and
push
in
sub
ret
jmp
enter
mov
mov
cwtl
jns
or
ss
pop
adc
pop
or
test
movsb
outsl
in
pop
push
xor
popf
and
sub
in
cmp
sbb
fs
mov
leave
or
icebp
je
scas
test
mov
test
mov
or
faddl
mov
mov
out
cltd
jno
mov
jl
xor
daa
add
push
lods
mov
mov
lcall
sub
nop
bound
test
repnz
push
mov
outsb
jnp
push
divl
sarl
rcrb
dec
nop
push
ffree
lahf
or
xor
in
dec
inc
es
jb
std
sahf
sbb
lahf
adc
mov
testl
inc
xchg
mov
push
fcmove
fnstenv
pop
sbb
cwtl
jb
out
or
into
mov
gs
xor
mov
pop
pop
mov
lret
xchg
out
xor
in
jl
outsb
push
or
pop
jle
sub
cld
cmp
and
mov
sub
mov
xor
sub
orb
sub
mov
push
dec
mov
pop
pop
pop
cmp
insl
hlt
into
sub
mov
xchg
add
icebp
pop
out
sub
or
dec
sub
mov
add
lock
test
xor
aaa
dec
sub
inc
ficoml
int3
dec
add
int
lret
sarb
lret
outsb
xchg
mov
xor
imul
pop
lret
or
dec
loopne
data16
pop
mov
sub
mov
cmpsb
xchg
leave
push
sarb
aam
cmp
aaa
fucom
push
test
mov
inc
leave
sub
mov
fcoms
repz
in
cmp
pushf
dec
jmp
fsubr
dec
dec
jo
cmpsb
popa
mov
sub
out
hlt
sbb
fsts
cld
mov
scas
jne
invd
loop
scas
jp
loopne
cmp
fisttpll
leave
mov
mov
or
jle
adc
hlt
pusha
cmpl
je
mov
mov
adc
stos
cltd
cltd
shlb
call
jb
add
push
sbb
or
iret
sbb
mov
sub
mov
inc
test
push
push
jge
mov
mov
mov
xor
enter
icebp
dec
jb
cmp
sub
cld
push
data16
push
mulb
pushf
insb
dec
aam
mov
and
push
adc
add
mull
adc
or
scas
pushf
jp
cmpsl
sub
loope
cmp
loop
dec
jnp
pop
das
lret
cmpsb
testl
test
nop
ljmp
lahf
sbbl
jnp
jle
cmp
xchg
mov
jge
sub
out
shlb
das
stos
mov
popf
xchg
xchg
mov
mov
test
in
mov
and
pop
pop
xchg
sub
aad
pop
jmp
jnp
jo
js
outsl
fyl2x
or
sub
mov
repnz
dec
addr16
inc
test
inc
cmp
js
inc
cmp
adc
aas
outsb
add
mov
jle
fistl
bound
xor
adc
fucomp
mov
loopnew
gs
inc
push
lcall
call
and
jl
and
daa
nop
shlb
cli
mov
mov
push
rclb
jo
add
fwait
xlat
mov
and
xchg
inc
and
inc
and
jb
lds
dec
and
iret
test
sbb
insb
test
imul
int
and
push
pop
pop
cs
adc
xchg
popf
xchg
mov
daa
push
and
pushf
ret
push
outsl
jnp
lahf
sahf
dec
xchg
shlb
mov
fs
fmull
stos
push
out
js
add
stos
xchg
aas
addb
decb
popa
mov
and
adc
hlt
dec
shlb
gs
pusha
testb
sub
stc
jnp
mov
jno
pop
pop
pop
scas
push
xor
sub
clc
loop
lods
int
pop
xor
nop
mov
jge
sbb
ljmp
pop
xchg
adc
mov
fstl
cmpsl
push
outsl
ret
inc
mov
jbe
mov
push
and
sbb
test
jle
mov
and
mov
arpl
mov
dec
das
xchg
add
push
cld
test
testl
cld
xor
jnp
push
in
add
popa
inc
push
or
inc
shrb
or
dec
mov
mov
out
mov
cs
inc
push
mov
aaa
sub
xchg
mov
ffree
mov
mov
pop
sbb
sub
pushf
fdivrp
jnp
cmp
inc
sbb
push
fstpt
mov
je
mov
xchg
lea
cmpsl
cmp
and
iret
inc
mov
loopne
and
and
dec
fnstenv
mov
pop
mov
sub
push
add
cmpsl
fcoms
and
push
imul
adc
out
cwtl
sbb
push
ljmp
mov
cmp
movsl
ja
lock
js
lret
data16
push
call
mov
push
pop
xor
and
std
adcb
stos
inc
and
aam
push
push
jp
test
out
sub
and
jb
xchg
icebp
xchg
pop
mov
pushf
push
js
xor
mov
lcall
dec
xchg
sbb
inc
push
fwait
fs
and
iret
xor
jg
pop
push
rcrl
cmp
rclb
mov
mov
rorl
std
mov
scas
mov
xor
insl
mov
mov
js
inc
adc
jmp
shrb
rcll
and
pop
repz
push
int3
lcall
nop
iret
dec
mov
inc
pop
test
out
pushf
push
imulb
mov
inc
inc
repnz
push
inc
add
mov
les
mov
or
pushf
xlat
add
lods
mov
je
mull
int
inc
das
mov
vcvtsi2sdl
push
test
and
jl
fidivrl
mov
aam
or
addb
mov
xchg
pop
jbe
xchg
inc
xlat
and
ljmp
pop
sub
div
mov
add
add
or
dec
out
add
mov
push
dec
pusha
movsl
dec
jne
jnp
inc
clc
movsb
imul
pushf
imull
or
sbb
addr16
and
into
or
rol
lods
pusha
fwait
iret
sub
aas
and
mov
movsb
negl
dec
and
pop
jl
jns
outsl
ds
pop
pop
jns
adc
je
movsl
jnp
mov
call
xchg
pusha
cltd
inc
jnp
in
xor
jmp
push
xor
jge
enter
push
outsb
mov
movsb
mov
mov
test
xor
loope,pn
mov
sarb
or
jg
xor
fsubp
adc
cwtl
cmp
test
push
dec
and
fwait
out
pusha
je
push
mov
mov
push
cmpsl
ds
jno
xchg
adc
test
jecxz
movsl
inc
add
mov
ljmp
in
jae
pop
add
xor
mov
cld
std
ja
jae
ja
test
cmp
rclb
mov
stc
inc
data16
push
cmpsb
or
insb
roll
cmp
in
push
in
in
fcomi
mov
jns
add
push
cltd
xor
daa
xor
cs
push
pushf
inc
nop
mov
xor
in
addl
roll
leave
xchg
pop
pop
or
cmp
stc
add
mov
bound
dec
pop
ljmp
cbtw
cld
xor
pop
enter
jb
push
mov
mov
into
fst
xchg
ss
call
loop
test
call
pop
repz
mov
push
cld
mov
lds
psrld
mov
jne
mov
fsubl
sub
jns
xlat
mul
jmp
out
adcl
and
pop
stos
leave
xchg
rsqrtps
fsubrs
sbb
sub
aas
loop
mov
push
jae
xor
sbb
xor
add
pusha
icebp
and
stos
nop
push
lods
dec
adc
mov
cltd
xor
jp
stc
push
cwtl
mov
push
xchg
add
aam
push
sbb
cld
jle
dec
jbe
pop
lret
mov
push
push
adc
shlb
add
mov
adc
lret
and
cld
sbb
stc
divb
mov
testl
pop
mov
and
jle
daa
loopne
and
add
arpl
in
movsb
xchg
andl
jb
cmp
and
lcall
fdivrs
sbb
mov
leave
adc
and
jle
mov
mov
dec
clc
test
and
mov
in
and
and
cltd
xchg
sub
xchg
xchg
xlat
lods
sub
hlt
aaa
fiaddl
xchg
daa
mov
adc
dec
flds
inc
cwtl
cmpsb
xor
pusha
jno
enter
popf
enter
pop
mov
push
lahf
add
shll
stc
push
cmpsb
or
out
dec
hlt
mov
imul
lock
insb
jbe
jle
lea
fildl
repz
addb
mov
pop
aaa
or
adc
ss
xor
out
dec
imul
clc
in
ss
fdivr
xchg
sub
pop
mov
sub
jne
sbb
ss
jg
mov
inc
js
cmp
lahf
jnp
stos
fst
sub
fisubl
push
pushf
sbb
sub
mov
mov
xchg
imul
jp
outsl
fimuls
pop
mov
jne
pop
test
jmp
int
aam
into
test
fwait
iret
jle
fstps
jecxz
nop
mov
fldt
stc
cmp
jbe
stos
hlt
jo
in
mov
adc
mov
dec
jnp
cmpsl
test
jne
enter
mov
xor
jg
lret
and
add
push
cmp
inc
and
imul
cmp
mov
pop
inc
jae
mov
sub
and
and
insl
loopne
dec
hlt
mov
daa
mov
sti
hlt
cmc
out
in
cmpsb
rcrb
and
mov
jg
pop
sub
out
repnz
stos
sbb
loopne
dec
dec
or
enter
cmpsb
and
jne
test
stos
xchg
xchg
mov
int
mov
repz
jo
pushf
jbe
add
mov
fs
xchg
add
jb
add
mulb
dec
xor
push
scas
xor
push
sbb
fnstsw
adc
pop
cmc
or
and
push
movsb
mov
jnp
xchg
xor
push
xor
fs
ret
mov
shl
dec
lret
sbb
pop
icebp
xor
push
cmp
scas
out
out
inc
bswap
nop
push
mov
sbb
mov
notb
call
test
ss
pop
int3
inc
xchg
push
movsb
in
or
push
sbb
jecxz
jns
jg
cli
stos
shl
or
and
call
and
cld
xor
fs
jg
cmp
and
mov
adc
and
sbb
add
jnp
pop
jle
sub
jge
nop
jns
out
mov
xor
pushf
enter
out
sub
pop
outsl
and
dec
pop
and
or
dec
inc
cmp
shr
sbb
xor
shll
nop
addb
xor
neg
das
mov
popf
pop
mov
sbb
pop
lret
lds
inc
xchg
xlat
pop
inc
mov
lret
cmp
arpl
xlat
fadd
jae
lahf
pop
push
iret
push
mov
or
int3
ret
mov
adc
sub
icebp
mov
adc
in
pop
ss
jp
int
orl
xor
sub
icebp
ja
cmpb
rorl
cld
das
pusha
fidivrl
ljmp
frstor
nop
jmp
je
xor
aaa
dec
pop
das
cmp
aas
popa
iret
xchg
sbb
daa
shlb
les
ss
xchg
popf
mov
pop
lret
jno
jns
adc
aaa
sub
push
and
lds
leave
mov
xor
xor
pusha
sbb
icebp
add
test
sub
xor
inc
pop
sub
push
ret
cmp
jmp
fs
dec
pop
mov
jns
push
mov
xchg
das
dec
aad
jecxz
push
stos
push
cmp
jnp
pop
or
shr
enter
shlb
xor
repz
jp
push
and
cmc
push
lcall
or
stos
jle
fwait
out
add
arpl
testl
pop
test
pop
loopne
xor
mov
push
std
dec
adc
leave
push
shll
enter
cmp
inc
sub
outsl
sahf
jmp
push
icebp
movsl
testl
mov
xchg
clc
jp
jl
cs
test
jo
fisttpl
iret
jp
hlt
push
lea
dec
xlat
cmp
sub
lods
dec
and
sub
dec
cwtl
mov
daa
es
fmuls
mov
push
mov
stos
fdivrs
hlt
test
mov
dec
cmp
test
shlb
lret
enter
call
sub
xor
cmpl
faddl
push
jb
mov
xor
pop
sbb
roll
std
out
aas
xchg
cltd
outsl
imul
sub
cmp
scas
scas
stos
out
ds
mov
sbb
movsb
sti
sub
xor
pop
mov
xor
popf
mov
sub
popf
cmpb
lret
add
and
pop
adc
cs
push
cmpsl
push
sub
mov
stos
mov
shll
sub
and
mov
dec
rorl
insb
push
pop
shrl
sarl
or
ret
adc
lahf
test
cmp
mov
push
inc
mov
mov
sbb
popf
cs
jge
and
test
mov
icebp
cltd
icebp
inc
rcl
sub
popf
arpl
bswap
push
mov
lock
sbb
cmp
xchg
and
mov
loop
bound
aaa
insb
dec
gs
inc
jns
jg
inc
test
mull
or
out
dec
mov
movsl
mov
std
dec
adc
je
sbb
rcll
lds
mov
xchg
in
outsl
sub
imul
loope
fs
push
sbb
sub
sub
adc
ret
mov
bound
add
mov
lret
pusha
inc
test
sub
mov
lcall
xor
push
stc
hlt
call
scas
lods
pop
lahf
lret
in
jo
sahf
pop
fdiv
icebp
dec
insb
data16
nop
mov
fstl
daa
test
pushf
mov
loopne
cli
xor
lock
mov
data16
cmc
out
mov
sbbl
inc
add
rol
cmp
xchg
inc
mov
mov
dec
js
and
add
lods
sarb
inc
add
jbe
iret
cmpsl
fwait
xchg
lock
and
push
pop
popf
fwait
int3
clc
test
roll
cli
in
icebp
pop
lock
and
xchg
push
clc
adc
cmpsb
lcall
inc
icebp
movsb
dec
testb
push
push
outsl
jno
sbb
inc
and
sbb
pop
cli
sbb
add
mov
sub
imul
mov
cmc
jnp
fldenv
xlat
lods
pop
pop
pop
cs
lods
push
repz
mov
imul
ret
pop
js
xchg
mov
test
jae
dec
insl
ljmp
shrd
dec
add
std
jg
or
inc
out
lret
inc
popf
in
or
jne
outsb
inc
mov
mov
adc
stos
jo
gs
stos
adc
cwtl
js
clc
add
fucomi
cmc
inc
xchg
mov
int
addr16
xchg
jl
scas
lcall
jnp
stos
adc
sub
mov
xor
jno
xchg
test
fs
sbb
inc
bound
xchg
int3
sahf
and
jnp
lods
jno
and
mov
jb
adc
int3
add
mov
js
xchg
enter
cmc
pop
dec
dec
mov
lea
daa
shll
out
or
xor
in
pop
enter
sub
hlt
rcll
and
in
adc
xchg
mov
in
jle
mov
ret
mov
cmpsb
lret
test
dec
jae
dec
jecxz
xor
xlat
adc
roll
insb
enter
arpl
xlat
lahf
add
sbb
leave
addl
lcall
into
push
test
xor
mov
imul
negl
cmp
insl
cli
ficoms
and
mov
mov
adc
push
mov
into
out
push
push
inc
add
lahf
bound
gs
jge
clc
icebp
out
adc
add
or
jmp
arpl
out
xor
inc
and
sub
maxps
mov
mov
popf
int3
fistpll
pop
mov
pop
subb
aas
fnstcw
xchg
sti
aas
xor
push
inc
push
call
das
imul
and
pop
dec
mov
ja
mov
fcoml
fistl
mov
add
clc
mov
cld
adc
nop
fdivrp
int
add
xor
push
mov
cld
jmp
sarl
sub
and
or
enter
mov
movsb
push
or
clc
scas
jecxz
lcall
cld
cmpsl
mov
push
inc
es
lods
and
xor
push
sbb
aad
jle
in
insl
pop
cmpsl
fwait
sub
sub
shll
jl
push
insl
cs
or
data16
aam
pop
pop
jno
push
add
jbe
loopne
cmp
hlt
aam
emms
divps
in
or
push
or
pop
push
lea
pop
inc
loop
push
pusha
adc
jg
fwait
jnp
aas
jns
negb
es
leave
cmp
xor
jno
adc
movsb
xchg
scas
lahf
xchg
inc
jmp
fisttpll
shl
sarb
ljmp
or
push
ljmp
xor
insb
enter
les
push
push
cld
push
outsb
int3
xchg
jp
add
inc
loop
das
and
mov
adc
pop
test
lret
xor
lret
sti
lahf
jb
xor
lret
sahf
dec
call
jle
dec
xchg
fsub
push
aaa
pusha
lahf
repnz
decl
lods
xchg
mov
mov
ds
es
or
mov
das
add
cmpsl
scas
test
jne
in
fcmovu
xchg
insl
mov
adc
push
lcall
movsl
es
inc
xchg
push
jne,pn
hlt
jg
jbe
pop
imul
popfw
cs
mov
lods
mov
mov
negl
in
ficoms
sub
imull
imul
jo
push
pop
in
inc
xchg
pop
xor
outsl
aam
jge
test
cmp
pop
cld
mov
jb
mov
cwtl
outsl
das
ret
movsb
add
jg
repz
and
push
sub
pop
pop
shrb
movsl
mov
pop
fcomip
daa
mov
sub
jg
imul
mov
jmp
cld
add
les
pop
inc
xchg
adc
push
cltd
sub
jae
std
push
adc
push
adc
sbb
repnz
fs
or
jp
mov
dec
add
pushf
lahf
test
push
cmp
sbb
in
pusha
sub
fucomi
xor
lods
stc
pop
add
ss
loopne
and
inc
pop
mov
rcrl
push
sub
sub
ret
push
cs
and
jo
dec
add
fucomi
jnp
mov
fiadds
pop
call
daa
sub
xor
xchg
test
ljmp
adc
mov
stc
hlt
fs
cmp
icebp
fidivl
push
test
mov
adc
pop
mov
pop
pushf
dec
sbb
inc
stos
test
push
lcall
out
mov
mov
mov
call
cld
addl
in
test
shl
test
mov
jbe
add
out
aad
nop
rcrl
mov
int
call
mov
xchg
fsubrs
jmp
in
iret
cmp
das
push
fistpll
testb
sbb
jo
fsubrs
pop
or
jmp
popf
xor
lea
cmp
enter
jo
das
leave
mov
lods
test
mov
jge
in
push
sbb
pmaxsw
xor
lahf
and
popa
sbb
jecxz
dec
sbb
and
cmc
stos
or
inc
cs
dec
cs
sub
bound
sbb
sbb
pop
or
mov
adc
mov
fscale
sbb
jp
mov
insb
cmp
pop
lods
sahf
cmp
int
pushf
jne
inc
add
rol
pop
jmp
fidivs
mov
ljmp
in
in
sbb
cmp
movsb
ret
mov
add
stos
iret
out
arpl
push
push
pushf
xor
mov
cmpsl
add
sub
cs
jnp
popa
scas
dec
xchg
cmp
mov
hlt
jl
pusha
or
movsw
inc
movsl
rorl
adc
lret
stc
mov
push
mov
push
xor
ds
push
add
inc
adc
jle
cmc
ret
mov
addl
ret
jns
lret
pop
dec
movsl
mov
mov
inc
xchg
lock
push
sbb
icebp
cmp
push
add
mov
lret
notb
mov
repnz
jae
icebp
sub
push
mov
adc
pop
mov
pushf
jle
and
scas
lds
add
push
cmpsl
pop
je
dec
lods
imul
int
pop
and
sahf
push
inc
sahf
mov
xchg
fbstp
mov
ret
mov
inc
pop
mov
add
sbb
xchg
add
ja
pop
das
jno
hlt
stc
lahf
in
icebp
add
sbb
and
rcll
mov
pusha
push
cmp
jae
push
iret
pop
mov
negb
loope
mov
idiv
cli
leave
push
ret
mov
lret
jg
fnsave
inc
out
sarl
cltd
xor
sbb
inc
jl
push
jl
mov
pop
push
iret
inc
pusha
jmp
addr16
xchg
xor
dec
xchg
lods
inc
sbb
or
push
idivb
push
idiv
rcrl
fiaddl
mov
popa
pop
cmp
xchg
push
cmp
stos
fiaddl
fs
loop
and
movsb
pushl
push
xchg
test
cmc
enter
inc
dec
lahf
sbb
repz
jge
mov
sbb
fldt
outsl
jmp
or
or
mov
xchg
or
sub
repz
popa
sub
aaa
pop
xor
jg
adc
incb
push
repz
int3
pop
mov
fildl
aas
jno
imul
ret
inc
js
outsl
pop
fbld
movl
shrl
mov
jno
cwtl
add
add
arpl
arpl
stc
dec
ljmp
jge
xor
jl
jmp
adc
test
dec
idivl
mov
dec
cwtl
inc
or
aas
xor
lods
mov
inc
push
mov
jae
popf
mov
movsl
jo
addr16
cld
sbb
out
lods
cmpsl
adc
mov
idiv
sbb
inc
gs
sbb
dec
leave
andb
test
js
imul
jae
out
push
mov
dec
clc
add
mov
push
cli
out
mov
mov
sbb
mov
lret
jle
jg
aas
jne
and
sbb
sub
add
mov
mov
std
lahf
xor
dec
shll
dec
add
cli
ficoms
sub
add
outsb
stos
movsb
out
inc
sbb
shll
aas
adc
scas
daa
add
daa
mov
push
pop
push
mov
dec
clc
cmp
mov
push
insb
xor
add
ds
rolb
xchg
jo
xor
int3
lock
roll
fimull
adc
jp
lret
jp
jno
add
cwtl
xchg
jno
or
out
jnp
sbb
mov
xchg
xchg
dec
adc
push
push
dec
add
add
cs
sub
jo
repnz
ljmp
sahf
in
or
bound
stc
sahf
movb
loop
cwtl
gs
arpl
inc
addps
dec
ret
out
pop
jae
sub
inc
xor
test
loopne
imul
xor
cmpsb
add
in
lds
movsb
mov
inc
in
addr16
shrl
ljmp
sbb
mov
cmp
je
and
or
addb
xchg
and
gs
mov
pop
xchg
aam
arpl
xchg
and
shrl
pop
mov
test
nop
out
sbbl
aas
icebp
mov
shr
ja
cmp
scas
xor
leave
xor
push
mov
jmp
icebp
push
push
add
shll
xor
xlat
stos
xchg
mov
into
add
pop
lods
mov
scas
push
fldcw
jg
xchg
mov
insl
mov
jne
and
ljmp
aas
in
pop
pop
adc
lret
mov
fs
and
sbb
cmpsl
andb
cwtl
mov
pop
out
mov
notl
mov
dec
repnz
push
xchg
mov
xchg
push
out
adc
test
push
imul
dec
out
mov
out
daa
push
mov
out
sbb
shrl
cmp
fsubs
lods
mov
mov
dec
push
jle
cltd
pushl
xchg
pop
pop
daa
imul
sub
out
mov
mov
sbb
and
sub
clc
enter
out
dec
cmpsb
fldenv
xchg
dec
jae
jle
push
mov
insl
xor
inc
or
cmpsb
jbe
xchg
test
mov
ss
mov
add
push
test
and
addr16
lcall
popa
sub
imul
sbb
clc
sar
subl
mov
aam
mov
dec
jo
comiss
inc
and
int3
out
adc
mov
push
or
imul
scas
mov
dec
xor
jae
sub
adc
add
shrl
psubusw
add
mov
icebp
ljmp
fadd
outsb
jl
cmp
scas
push
jnp
jle
jae
sysenter
rcrb
dec
jne
xchg
lods
arpl
sbb
cmp
out
or
movsb
loopne
lds
fistl
sub
gs
out
hlt
cmc
jne
nop
xor
aad
jns
movsb
cmp
and
je
mov
jecxz
add
sti
xchg
lret
hlt
loope
push
mov
xchg
int3
testb
jne
jg
xor
push
pop
pop
xchg
rcl
sbbl
push
push
lock
insb
push
and
div
inc
pop
ret
insb
sbb
mov
or
sbb
mov
fs
mov
adc
mov
repnz
insb
cmp
into
sub
rcrl
aad
lret
or
cli
lods
mov
mov
popa
in
out
mov
test
pop
ret
mov
subb
pop
adc
jae
orb
and
addl
jecxz
orl
aam
scas
out
imul
jge
addr16
and
pop
adc
out
adc
pushf
outsl
nop
jo
push
loopne
push
aad
or
lahf
fnstenv
movsl
mov
icebp
cmpsb
dec
cmp
add
shlb
es
scas
pop
insl
fmulp
insb
mov
loope
pop
lods
aas
clc
inc
jg
dec
imul
mov
icebp
push
aaa
sub
inc
fsubs
adc
scas
mov
fidivl
xchg
int
hlt
nop
inc
cmp
inc
dec
xor
adc
xor
or
je
cmpsl
hlt
movsb
dec
rorb
sbb
push
and
jne
call
jge
push
push
push
aas
stos
in
mov
lcall
cmp
into
daa
cmp
push
xlat
and
cs
push
sbb
icebp
orl
sti
rcr
or
movsl
imul
sbb
outsl
cmp
xchg
or
push
dec
pusha
sarb
mov
fnstcw
imul
gs
rorb
icebp
popa
mov
movsb
jge
es
adc
dec
pop
in
xor
mov
pop
repnz
jns
mov
fwait
aad
daa
arpl
stos
jg
aaa
std
pop
sbb
addl
ds
mov
adc
jb
and
mov
dec
inc
fcompl
sbb
push
pop
sbb
cmp
adc
sbbl
subb
pop
xchg
mov
jo
mov
jl
les
cli
ret
jmp
or
test
lret
mov
dec
gs
cwtl
jb
hlt
rcrl
cld
insb
adc
mov
add
lds
mov
clc
js
push
lahf
xchg
loop
repnz
xor
or
nop
xchg
push
hlt
push
xor
stc
xchg
cwtl
enter
mov
pop
mov
dec
outsb
or
cwtl
adc
popa
fisubl
lea
jge
push
int
lahf
cmc
addr16
loop
jnp
sub
movl
add
test
cmp
add
rcll
repz
pop
dec
aam
mov
shlb
push
push
cli
mov
mov
inc
int
sub
mov
pop
bound
popf
les
mov
sbb
shll
not
jo
les
fmul
shlb
decl
cmpl
into
and
idivl
cld
sub
push
push
add
xchg
xor
out
jo
aas
pop
mov
push
mov
sub
jp
jne
mov
cmpsl
clc
repnz
lods
add
mov
stc
mov
int3
cwtl
inc
lods
lret
and
adc
mov
or
sbbl
sub
mov
dec
mov
ss
inc
leave
cmpsb
cmp
push
jmp
cwtl
out
jo
sub
mov
scas
std
dec
jbe
scas
xchg
push
lds
mov
and
jp
cmp
inc
fisttps
movsl
hlt
int
ret
or
sbbb
jo
bound
pop
negl
xor
ss
push
xchg
add
mov
xchg
lods
shrl
outsb
stos
mov
inc
cs
jb
cmp
mov
mov
js
xchg
movsb
jmp
sub
fs
xchg
leave
scas
call
pop
fwait
mov
push
lea
push
jo
inc
push
hlt
mov
cld
mov
or
addr16
aad
add
sub
adc
repz
leave
push
aaa
xchg
repnz
daa
aas
inc
ret
fbld
ficompl
mov
leave
mov
sarb
xchg
stos
jecxz,pn
addb
daa
repnz
adc
aaa
lret
movsl
sub
pop
mov
and
sbb
mov
sub
fimuls
inc
loop
insl
sbb
imull
add
out
setnp
and
ja
add
sbb
addr16
mov
into
or
sub
ljmp
jae
mov
iret
fbstp
mov
test
cwtl
aas
sti
test
stc
xchg
mov
pop
repnz
outsb
xchg
dec
and
sti
sbb
inc
jne
pop
cmpsb
bound
inc
lock
lds
cmp
push
mov
aam
fimull
out
daa
shrl
loop
and
int
ret
sub
push
push
shll
fwait
sub
jae
or
jle
xchg
out
cmpsl
xchg
jo
int3
ds
ficomps
jmp
dec
mov
pop
mov
mov
scas
jb
lock
movsl
into
insl
sbb
fcmovb
push
inc
xchg
inc
xor
xor
dec
out
mov
repz
pusha
dec
mov
xchg
adc
xchg
pop
in
mov
mov
inc
mov
ljmp
add
imul
pop
push
in
jbe
adc
push
clc
adc
sbb
and
dec
sbb
cmp
mov
dec
jne
xchg
in
dec
cli
dec
test
sbb
ljmp
sarl
mov
das
and
fisubs
sub
popa
insb
mov
pop
dec
pop
sub
roll
frstpm(287
std
adc
xchg
push
jle
shrl
mov
xchg
add
scas
ljmp
imul
and
std
jne
lods
mov
pusha
adc
test
xchg
mov
xchg
cmc
int
push
push
enter
and
pop
cmp
int3
push
stc
lds
adc
fdivs
test
aas
and
pop
call
mov
mov
cli
sti
xchg
push
pop
sbb
insb
sub
imul
ljmp
cli
push
xor
orl
call
mov
lea
xchg
or
mov
ret
icebp
mov
jle
mov
jg
dec
leave
jno
pop
stos
adc
jle
call
xchg
lds
xlat
test
sti
lret
pop
add
dec
xlat
movsb
inc
mov
movsl
movhps
and
nop
cmpsl
xchg
mov
jae
mov
shll
cmp
xor
pop
fwait
decl
add
js,pn
mov
enter
cmp
call
sub
cmp
dec
mov
sub
pop
xchg
or
cmpsb
sbb
shrl
jle
dec
mov
test
sbb
push
addr16
jecxz
leave
xor
xlat
fidivrl
add
sbb
mov
cli
iret
addr16
fst
pop
mov
stc
and
stc
arpl
xor
jnp
int
inc
xchg
dec
mov
dec
add
or
xor
mov
shlb
rorb
push
int
dec
icebp
sbb
adc
jno
or
xchg
xor
imul
inc
lods
fcom
fimuls
xchg
xchg
cld
scas
adc
sahf
jecxz
fisttpll
je
mov
sbbb
pop
adc
stc
mov
add
xor
das
xchg
adc
sbb
mov
pop
cltd
sti
mov
pop
mov
call
adc
icebp
cmpsb
mov
call
dec
enter
stos
dec
add
mov
adc
das
and
adcb
fwait
int3
inc
out
cmp
mov
sbb
addr16
adcl
ficomps
xor
pop
xor
clc
psubq
dec
mov
lret
xchg
add
adc
loope
push
in
dec
mov
clc
pop
movsl
out
mov
sbb
xchg
or
test
or
cld
fsub
xor
fidivs
mov
into
or
jmp
mov
mov
loope
push
dec
mov
adc
std
sbb
mov
sub
sbb
int3
and
addb
fwait
iret
in
jmp
xor
sbb
lock
ja
scas
jp
mov
adc
or
push
mov
int
pop
or
lds
xchg
pushf
iret
test
mov
sub
and
data16
out
in
popa
loop
mov
pop
scas
jbe
lods
dec
out
add
scas
xorl
or
movsl
xchg
data16
pop
fimull
ja
in
loope
mov
daa
cmp
loop
test
jo
mov
dec
les
xchg
decl
xchg
lret
das
ss
dec
es
mulb
mov
jp
stos
shlb
repnz
xor
mov
rorb
popa
ss
nop
push
dec
mov
jmp
notl
sbb
int
dec
js
mov
jne
pop
test
mov
cltd
sub
cmp
pop
in
pop
xorb
jnp,pt
arpl
sub
outsb
dec
les
push
int3
cmp
sti
and
mov
xor
imul
add
ficomps
or
jecxz
mov
push
out
stc
pop
iret
cwtl
push
loop
xor
mov
push
das
and
call
sti
fcoms
mov
cwtl
dec
jle
pop
in
jmp
inc
and
aad
mov
mov
mov
pop
jp
push
cmp
adc
negl
ljmp
mov
pop
pushf
xchg
lds
lock
imul
call
lea
dec
wrmsr
mov
inc
mov
dec
fsubrp
xor
scas
je
or
out
int
iret
fldl
ret
inc
subb
and
dec
loop
stos
push
cltd
shlb
test
mov
cmp
sbb
xor
imul
jne
test
sbb
jmp
lahf
sbb
and
int3
and
mov
pusha
repz
dec
inc
xor
sub
xor
and
inc
out
jnp
je
pushf
cltd
xchg
lock
mov
adc
aam
push
add
stos
sub
movsl
mov
fimuls
je
jns
inc
and
test
jmp
or
xchg
mov
cli
mov
scas
push
js
mov
mov
aaa
cwtl
xchg
mov
push
or
sub
shlb
push
dec
mov
sahf
or
lcall
cmp
push
sti
pop
cmp
cli
subb
sti
add
xchg
xchg
mov
lret
stos
jns
xchg
and
mov
adc
cmp
pop
push
jnp
loope
cmp
stc
or
adc
pop
adc
xchg
aam
add
fstp
sbb
mov
pop
stc
dec
and
xor
lret
or
mov
das
sbb
iret
pop
mov
mov
ss
xchg
mov
lret
mov
xor
mov
push
insb
rorb
cmp
lock
jmp
aaa
add
mov
das
cmp
test
in
mov
cld
mov
int
xchg
adc
sub
loop
arpl
cld
cmpsb
rol
and
mov
mov
shlb
xlat
cltd
adc
mov
push
stc
ret
aaa
cmp
mov
inc
xchg
andb
gs
mov
fbstp
negl
sti
std
dec
or
addb
aam
jb
cmovne
dec
jb
push
mov
arpl
outsb
pop
mov
in
push
ljmp
mov
and
xchg
mov
lods
cmp
cld
sub
jae
sarl
cltd
and
cmp
test
shr
adc
sbb
rclb
out
mov
cmp
sbb
lahf
jmp
push
dec
xor
repz
mov
icebp
mov
fildl
lcall
dec
or
sbb
repz
in
enter
xor
xor
imul
aad
cmp
xchg
shlb
test
jno
loope
test
or
sub
mov
test
cmp
lret
addr16
test
xor
hlt
ja
shlb
dec
pop
mov
subb
or
and
jo
push
jle
lahf
mov
mov
mov
jae
mov
jg
fwait
pusha
sub
lea
nop
jge
outsl
fidivrs
call
fucom
ret
pop
mov
add
loop
add
mov
fsubl
enter
nop
or
xchg
xchg
lcall
mov
andl
das
es
jo
repnz
out
aas
pop
lods
test
add
es
cmp
push
mov
inc
addr16
dec
dec
xchg
mov
mov
or
mov
movsb
xchg
adc
icebp
add
cmp
xchg
sbb
insl
push
lea
popa
fldenv
mov
mov
cmp
data16
jns
xchg
mov
enter
lea
int
cmc
inc
inc
mov
mov
or
or
sub
pop
outsl
mov
enter
stos
rcl
lcall
jg
fdivs
jmp
and
outsl
fcmovu
in
idiv
lahf
test
sub
icebp
push
fdivrp
pop
out
pop
cmp
loope
inc
lea
sbb
xchg
sbb
xor
out
or
xchg
dec
out
add
lock
movsl
inc
mov
ficomps
sub
inc
nop
pop
les
jecxz
mov
dec
and
pop
pop
scas
xchg
pop
mov
std
push
js
arpl
mov
add
or
ss
sub
loope
scas
ds
ret
in
and
cmp
outsb
pop
stos
pop
out
mov
sub
xchg
clc
loop
pusha
lcall
out
popa
aas
inc
movl
push
pop
pop
lret
mov
xchg
pop
shlb
stos
repnz
fbstp
lcall
jmp
mov
inc
cmc
ljmp
and
pop
mov
mov
cmp
add
ja
cmp
pop
inc
adc
mov
lret
push
iret
jne
popa
push
int
and
loope
add
mov
dec
movsl
inc
aaa
inc
lock
sub
ret
fucomp
or
or
push
add
jae
fisttps
push
sti
lods
incl
aaa
mov
daa
inc
lahf
iret
aas
push
cmp
lcall
or
mov
mov
jno
push
xor
mov
mov
shl
sub
pushf
xor
xor
fs
jg
enter
mov
pop
loopne
push
dec
imul
push
push
and
dec
sub
pop
mov
sub
jb
sbb
cmp
addl
enter
aaa
add
xor
or
mov
out
mov
shr
in
jo
int3
mov
sahf
outsl
pop
clc
inc
dec
lret
test
mov
and
sub
jp
cmp
inc
xor
lods
outsb
sti
pop
or
pusha
dec
xor
push
cltd
add
fsubrs
adc
xor
call
mov
and
push
fwait
cmp
mov
outsl
repz
in
icebp
xor
jmp
pop
jg
fldenv
jne
pop
xor
int
dec
ds
fadds
icebp
pinsrw
fidivs
inc
dec
dec
mov
jbe
inc
popl
movsl
clc
push
insb
shr
adc
decl
test
cltd
sub
inc
mov
push
sub
inc
std
xorb
inc
pop
mov
aas
mov
sub
aaa
aas
sbb
repz
pop
jns
sub
ljmp
arpl
movsl
lock
jmp
jnp
out
lock
loop
mov
int
mov
push
lahf
jle
mov
stc
jbe
sub
rorb
cmp
jb
dec
arpl
scas
enter
cmpsb
mov
pop
test
push
xor
test
or
adc
xchg
cmpl
inc
mov
std
jmp
ret
aaa
lock
mov
call
push
push
data16
cmp
or
mov
ja
loop
or
and
data16
dec
push
and
jecxz
loop
das
dec
bnd
sub
jmp
leave
wrmsr
adc
push
inc
adcw
scas
push
es
mov
mov
shll
lea
test
lcall
inc
sbb
into
cmp
push
pop
sarl
push
mov
test
into
mov
jecxz
sbb
jne
scas
push
test
xchg
hlt
mov
and
jecxz
addr16
arpl
imul
sbb
mov
leave
int
jge
push
inc
sbbl
mov
into
repz
dec
fisubs
jbe
imul
push
xchg
int
add
out
xchg
bound
lcall
ss
inc
adc
cmpsb
cmp
gs
mov
jnp
inc
pop
pop
xorb
sbb
rolb
in
std
js
rorb
inc
mov
xor
rcr
adcb
outsb
cli
test
iret
fcmovu
shl
lock
lds
push
ljmp
jae
push
mov
xchg
bound
js
lea
aas
pop
adc
fistl
stc
daa
jae
push
jo
xchg
xor
imul
jp
mov
ret
fwait
mov
das
xor
out
jnp
xlat
decb
jne
les
fidivs
adc
aad
aaa
movsl
cli
xor
mov
jae
stc
dec
mov
mov
lock
sbb
jge
or
sbb
jmp
push
or
clc
sbb
fwait
pop
inc
bnd
add
push
sub
and
lcall
idivb
mov
push
daa
scas
jecxz
sarb
stos
lret
mov
test
test
addr16
pop
and
pop
add
icebp
sbb
xchg
and
jo
inc
faddp
cld
out
add
fmuls
mov
sbb
dec
add
insl
mov
inc
push
fimuls
jecxz
add
push
cmpsl
xlat
pusha
outsl
and
rcrl
sbb
mov
fmull
roll
push
das
cmp
push
rclb
popl
stc
pop
and
mov
js
or
sbb
jno
mov
mov
flds
stos
adc
mov
orb
aas
test
aaa
xchg
lcall
call
push
push
pop
jg
sti
inc
jnp
jne
lock
inc
cmp
mov
xchg
into
test
inc
test
mov
test
cli
and
inc
test
xchg
lods
jbe
mov
cmpsl
dec
xor
stos
fmulp
lock
test
cmp
in
push
les
imul
jge
xchg
ret
pop
or
push
pop
in
cmp
loop
mov
pop
mov
push
test
test
mov
xor
push
ret
dec
mov
js
daa
push
jle
sbb
pushf
cli
bound
in
jg
xchg
xchg
pop
xchg
sbb
outsb
sub
mov
push
inc
mov
add
popf
adc
sbbb
lret
sub
adc
and
mov
call
dec
mov
jno
cmp
jecxz
pop
orl
mov
dec
repz
adc
adc
sahf
jge
mov
jno
daa
pop
or
sbb
cmp
inc
rep
pop
mov
sbb
call
mov
add
lock
jbe
fucomip
enterw
adcl
outsb
fnstsw
push
icebp
popf
sbb
rorl
jne
xor
rcl
popf
pusha
cmp
push
daa
sub
out
lahf
int
push
lcall
cmp
enter
testl
repnz
enter
mov
adc
outsb
mov
adc
push
mov
adc
iret
outsb
pop
jbe
and
popa
test
call
in
hlt
cli
mov
rorl
aas
les
cmpsb
inc
repnz
xor
adc
inc
adc
std
aas
inc
lods
aas
pushf
aad
jle
outsb
stos
addr16
xchg
fnstenv
int3
les
rorl
jp
insl
loop
or
push
jp
pop
cmp
jno
xor
clc
pusha
fistpll
inc
pop
xor
jno
cltd
rclb
into
arpl
mov
in
repz
int
xor
lcall
push
pop
push
inc
imul
int3
loope
jle
dec
in
insb
movsl
cmp
mov
mov
lods
xchg
cmpsl
push
ffree
stos
xor
pushl
jl
mov
and
sbb
push
sub
push
test
mov
xchg
mov
mov
adc
xor
sbb
popa
fisubl
cld
xor
sti
mov
sub
inc
xor
frstor
adc
push
or
sarl
jl
sbb
stos
or
xchg
repnz
orl
mov
call
dec
hlt
lods
lcall
iret
mov
movsl
dec
xor
inc
pop
mov
out
fstl
dec
rcrl
in
pop
jge
sbb
push
push
nop
test
mov
outsl
cmp
cwtl
push
mov
in
pop
lods
ret
jnp
outsb
xchg
mov
loopne
rorl
es
jb
push
cmp
aaa
insb
mov
sub
push
jg
push
les
mov
repz
in
inc
mov
std
dec
sahf
pusha
in
inc
test
adc
mov
orb
lret
mov
lds
shll
and
jnp
inc
pop
pop
fsubrl
dec
sbb
jmp
popf
testb
lds
jmp
jae
movsl
mov
push
dec
pop
rolb
sbb
sti
pushf
and
sub
fimuls
fwait
sar
cmp
xchg
enter
jmp
mov
into
arpl
or
insb
les
xchg
insl
xchg
ds
lahf
pop
shll
nop
iret
cmp
dec
pop
mov
sub
jno
aad
jmp
aad
out
jp
and
rcrb
test
out
xchg
lret
mov
xor
pop
inc
aad
sbb
or
in
icebp
or
out
push
mov
dec
or
inc
call
inc
leave
sbb
and
icebp
sahf
data16
mov
icebp
push
xchg
push
adc
and
xor
sub
push
scas
rcrl
inc
shlb
pop
mov
loope
push
lock
jnp
jae
and
sti
ljmp
fstp
push
lock
leave
adc
cmp
or
daa
dec
jg
push
push
scas
jo
mov
popf
in
gs
fdivrs
out
xor
and
xor
xor
popl
dec
cs
test
insb
lret
fdivrp
and
lret
push
jle
dec
test
ret
xchg
aad
add
loop
pop
cld
imulb
das
dec
mov
test
xchg
xchg
icebp
or
adc
rcrb
psraw
mov
jno
push
shrb
fisubl
sub
les
jmp
stos
pop
and
flds
adc
push
mov
dec
scas
lahf
mov
mov
in
lret
sbb
cmp
xchg
adc
jecxz
mov
mov
inc
add
adc
jno
sbb
nop
daa
call
xor
pop
jo
xor
rorl
dec
mov
ds
xlat
inc
adc
lret
xor
mov
repnz
les
arpl
jnp
je
repnz
and
sub
arpl
adc
rclb
xchg
mov
cmp
add
adc
or
push
mov
imul
bound
lds
jmp
and
repnz
mov
adc
mov
lret
ss
fstp
xor
jg
push
shrl
cld
mov
inc
sahf
mov
cltd
into
cmp
pushf
cmp
int
ret
out
mov
and
jle
movsl
sub
xchg
mov
adc
add
insb
jl
add
bound
jbe
fnstcw
push
out
in
pop
pop
rol
cwtl
rol
hlt
jb
out
add
fdivl
jbe
or
jp
mov
inc
stos
xchg
push
fnstcw
sub
fmull
iret
inc
sub
dec
mov
mov
and
push
shlb
adc
insl
iret
ret
lahf
cmp
and
or
sbb
xor
fwait
das
mov
out
jo
int
sub
hlt
mov
imul
pop
test
shll
cs
test
sahf
sub
mov
test
arpl
inc
inc
stos
movsl
add
adc
fiaddl
xchg
pop
int3
ds
pop
mov
push
in
in
popf
and
mov
int
test
hlt
mov
dec
jmp
xor
push
sahf
shl
mov
les
pushf
sub
aad
push
push
rorl
ret
cmp
xor
addb
sbb
shrb
mov
stc
push
lcall
xor
push
push
and
test
sub
jb
dec
add
punpckhbw
lahf
stos
mov
xchg
and
in
stos
shrl
cmp
xchg
lods
mov
pop
ss
scas
outsl
xor
sbb
mov
dec
dec
sbb
mov
into
pop
xor
cmp
stc
mov
call
cld
dec
fidivrs
jp
mov
push
cmp
shlb
cld
cld
test
dec
cltd
out
add
sub
mov
jnp
adc
cwtl
and
test
stos
and
ret
outsb
addb
stos
fsubp
sti
sbbl
addr16
outsl
movsb
xchg
jmp
push
pop
out
inc
scas
pop
rcr
in
push
aas
ret
and
sbb
out
shrb
push
mov
sub
stos
sub
popf
and
insl
cmp
xchg
adc
push
imul
mov
jbe
lret
inc
in
outsb
pop
jg
dec
clc
insl
add
std
fcom
adc
movnti
push
dec
jmp
gs
jg
scas
inc
fadds
int
pop
sbb
sub
add
and
jae
jge
sahf
or
lds
fistpl
cmpl
fidivrs
les
lret
mov
fcom
stc
mov
repnz
xor
and
mov
scas
subl
push
insl
loop
xor
push
jnp
dec
cmp
sub
dec
mov
addr16
inc
imul
ret
imul
out
mov
repz
mov
jbe
sub
mov
ja
aam
cmp
mov
cwtl
or
or
lea
dec
rolb
cmp
xchg
jbe
insl
das
or
out
fildl
pop
push
pop
adc
fstpl
mov
xor
xchg
mov
push
jl
xchg
mov
xor
ja
lds
ret
inc
xchg
out
mov
pop
roll
les
jnp
push
ficomps
jmp
into
popf
sub
test
inc
and
pop
mov
stos
mov
div
popa
xor
clc
jp
mov
xchg
rcr
sbb
ret
xchg
bound
les
fcompl
idivl
inc
push
mov
and
dec
imul
roll
cmp
cld
xchg
testb
jo
daa
pop
aas
insl
jne
push
and
test
popa
cli
mov
mov
xchg
je
cmp
outsl
mov
outsl
push
mov
and
push
mov
sbb
jne
repnz
in
ds
push
xchg
or
sub
and
fists
loop
cmpsl
stos
add
dec
sub
cld
inc
movsl
mov
test
ret
int3
nop
ds
xchg
adcb
ljmp
pop
je
cmpsb
cmpsb
out
rorb
dec
sbb
pop
adc
aas
add
dec
jno
mov
push
jge
mov
or
test
xchg
adc
pop
and
movsb
daa
add
mov
testl
fadd
add
inc
xchg
icebp
lods
push
push
cmp
outsb
xor
aas
xor
mov
daa
xchg
rorl
inc
dec
bound
xchg
aaa
add
mov
sub
pop
int3
insl
pushl
sub
outsb
inc
inc
lcall
mov
cs
into
lock
mov
adc
into
adc
adc
pop
adc
lret
iret
cmpsl
andl
push
stc
adc
cmp
adc
outsl
add
dec
push
or
js
std
mov
xor
xchg
je
or
pusha
icebp
roll
push
mov
data16
lock
test
fadd
lret
jge
repz
pushf
fmull
scas
ja
sbb
mov
ret
push
mov
int3
push
fs
mov
xchg
dec
lahf
icebp
test
or
pop
inc
or
popa
fs
lret
push
xor
mov
dec
je
leave
cmp
push
mov
leave
test
movsl
inc
addr16
ljmp
jmp
cwtl
fldenv
std
clc
fucom
imul
fistl
xor
mov
cwtl
pcmpgtd
xchg
fdivrp
mov
cli
ljmp
mov
dec
xchg
xor
xor
mov
jno
inc
xchg
lcall
mov
sbb
sub
mov
xor
jg
xor
push
xchg
sbb
orb
into
pusha
les
mul
dec
in
add
ret
lods
loop
inc
fdivr
xchg
lods
sbb
push
fmuls
push
in
jg
jb
cwtl
fcomps
pop
adc
in
fidivrs
nop
rcll
out
cmc
xor
xchg
push
je
mov
mov
push
pop
and
in
jge
aaa
movsl
in
jp,pn
xchg
je
or
int3
iret
arpl
aad
or
gs
xor
ret
pop
lea
lret
jbe
xchg
test
imul
pushf
test
sub
adc
and
ss
jno
ret
pop
in
inc
xabort
pop
mov
aas
outsb
in
les
push
cwtl
popf
jge
or
enter
cltd
cli
mov
aaa
dec
push
test
mov
icebp
out
adc
inc
push
xchg
jge
test
nop/reserved
sub
xchg
xchg
insl
jbe
xchg
daa
shrb
lock
hlt
sbb
out
cmp
push
rcl
add
movsl
cs
outsl
aad
subl
out
inc
xor
xchg
xchg
fdiv
xchg
imul
f2xm1
shr
cmp
sbb
mov
dec
outsb
xchg
scas
movsb
movsb
ss
xor
cmp
stos
push
mov
pop
ljmp
mov
add
jmp
and
outsl
jae
mov
lcall
cmc
push
std
dec
xor
cld
push
sbb
mov
push
fnstsw
jecxz
mov
test
sbbl
add
or
lret
in
pop
in
sub
xor
jb
sub
iret
and
pop
sbbb
jecxz
push
cwtl
sbb
xor
fs
stc
lods
jmp
loopne
aam
loopne
int3
mov
push
dec
xlat
lret
xor
and
inc
lods
sahf
shll
or
in
xchg
rolb
and
jl
inc
jo
jle
aad
inc
test
pop
cmp
aaa
dec
call
shlb
xlat
sahf
std
in
std
jge
out
js
fldenv
int
ja
jns
lcall
lds
dec
or
icebp
pushf
test
call
sbb
mov
lcall
ds
scas
mov
cmc
loopne
cmp
rorl
sbb
rcrb
mov
mov
xchg
movsb
xor
dec
ret
and
xor
xchg
jne
mov
dec
mov
xchg
loopne
ja
jns
mov
outsl
aad
popf
or
idivb
mov
xchg
or
cld
cmpsl
adc
loope
adc
loop
mov
hlt
adc
int3
mov
adc
pop
pop
pop
pop
pushf
ret
cli
xor
inc
lea
test
and
jbe
fdivrl
packsswb
dec
call
jbe
lahf
mov
sti
xor
call
std
fmul
in
lahf
cmp
jo
fbstp
mov
bnd
sbb
cs
sbb
sbb
or
inc
jmp
leave
xchg
insb
shll
push
fistpll
mov
and
dec
mov
or
jl
push
cmp
inc
jp
lods
dec
in
cs
jbe
ret
jg
mov
mov
mov
or
adc
adc
jb
out
lods
xchg
jns
outsb
inc
xchg
data16
jge
pop
xlat
aaa
sub
insb
sub
popf
das
insl
xchg
daa
pushf
cli
pop
xor
pop
adc
xchg
or
inc
mov
fisttpl
add
adc
jmp
loope
fmull
popa
into
mov
cwtl
push
lmsw
or
scas
lret
fsubp
add
dec
rorl
jg
xchg
xchg
adc
cltd
aam
sub
addr16
dec
xor
mov
jle
insb
lds
pop
sub
in
stos
and
iret
or
scas
fs
aad
adc
loopne
out
xchg
in
xchg
cmp
fcoms
addr16
push
lock
out
cmp
adc
mov
or
adc
loopne
ja
cltd
cwtl
or
rcl
rcl
jb
sbb
pop
sahf
lea
push
negl
lock
repz
and
adc
mov
shll
add
enter
push
xor
adc
mov
add
sbb
clc
je
cmp
push
mov
xor
mov
fcoml
mov
cmpsb
inc
mov
pop
push
or
bound
inc
mov
icebp
xor
add
cmpsb
mov
mov
enter
pusha
mov
mov
leave
and
pusha
mov
repz
xchg
clc
lods
inc
rorb
dec
xchg
test
or
cmc
mov
sbb
inc
cmp
dec
mov
add
hlt
mov
stc
lahf
xchg
cmp
and
sub
add
xor
hlt
xor
stc
fs
out
addr16
fwait
inc
xorl
add
lea
test
mov
jb
icebp
mov
pushf
adc
sbb
inc
das
aas
sub
inc
pop
mov
pusha
inc
scas
lods
shr
xchg
push
jle
sub
pop
inc
sbb
das
xchg
sbb
and
imul
push
in
sub
jp
or
or
xor
nop
xor
cmp
popa
and
es
push
outsb
stos
mov
test
inc
nop
fsubl
test
jge
ret
notb
inc
fisubl
fsubrl
jae
push
out
add
lret
movb
aaa
pop
int3
xchg
push
nop
out
rorl
insl
add
int
sbb
push
jae
mov
repnz
lock
pop
movb
les
adc
fs
pop
xchg
pop
into
enter
mov
loopne
or
xchg
xchg
loopne
in
jae
fidivrl
sbb
cmpsl
inc
or
cmp
aaa
push
cli
sbb
inc
pop
push
es
fildl
mov
mov
je
cs
inc
jge
cli
iret
push
sub
imul
ljmp
push
cld
inc
sub
xor
add
aam
push
ret
mov
mov
insb
daa
adc
xor
jbe
cmp
mov
xchg
les
jmp
fsubs
xchg
sbb
mov
into
or
icebp
xchg
and
dec
push
dec
mov
shlb
lret
sbb
mov
sub
insb
popa
or
pop
enter
cwtl
gs
mov
mov
dec
xchg
sbb
mov
sub
push
xchg
add
test
pop
xchg
xor
xchg
imulb
cld
ljmp
in
ficoml
fldenv
sbb
int
or
loop
mov
scas
sub
pop
sub
jmp
lea
mov
xor
adc
sbbb
cwtl
jb
lds
popf
lahf
mov
sarb
push
negl
sahf
push
fidivrl
push
in
es
ja
jns
lock
xor
sbb
repnz
mov
leave
or
bound
jle
shr
fsts
cmpsb
cli
add
mov
cltd
xchg
aam
loopne
punpckhbw
nop
imul
nop
or
xor
push
add
dec
jmp
jle
mov
stc
mov
xchg
xchg
sbb
int3
inc
xchg
and
push
lcall
or
stos
xorb
sub
mov
lods
loope
dec
jb
push
jle
hlt
jns
sarl
std
mov
lahf
pop
arpl
mov
jg
xlat
pop
dec
out
adc
cltd
das
dec
sub
or
xor
test
pop
jle
lahf
lahf
imul
mov
sbb
cmp
push
mov
adc
les
sbb
mov
or
invd
xorb
jne
cltd
test
adcb
fmul
lret
lret
stc
xchg
or
mov
es
push
rorb
nop
shlb
loopne
out
push
mov
adc
mov
cmpsb
jecxz
out
test
das
pusha
daa
adc
sbbl
xlat
pusha
loope
rcll
pop
rcrl
sbb
js
lds
inc
xchg
xor
popa
std
xor
jne
mov
enter
arpl
pushf
mov
or
arpl
pop
adcb
fucom
lock
pushf
ror
insl
fiadds
sarl
push
pop
scas
push
push
clc
mov
ret
adc
lock
cltd
rolb
mov
fwait
push
dec
push
xor
pop
push
aam
lret
dec
pop
leave
nop
cmp
xor
loope
scas
scas
jno
cs
nop
adc
shrl
adc
shlb
push
cmpsb
lds
popa
and
sbb
jmp
cmp
sbb
dec
xor
ficoms
push
dec
mov
iret
or
sahf
cmp
incl
xchg
mov
aaa
and
int
cmp
int3
imul
sbb
imul
loopne
aas
jle
mov
andb
dec
inc
dec
cmp
out
inc
jp
dec
and
stos
rcrb
lret
stos
in
stc
cli
popf
inc
clc
repnz
test
fcmovnu
dec
gs
jle
adc
pop
mov
pop
dec
xor
lahf
sub
fisttpl
push
mov
repz
call
sub
xchg
roll
xor
xchg
or
or
xor
push
xchg
in
clc
add
add
pop
cmpb
sahf
adc
in
dec
mov
fcoml
gs
fsubr
inc
adc
dec
pop
mov
fstpl
jge
pop
or
mov
pusha
jo
sbb
inc
xor
jmp
adc
xlat
fcoms
add
test
cs
test
add
and
pop
rcrb
xchg
cmp
inc
lods
jl
sbb
shll
addb
lret
mov
push
dec
and
cmp
or
dec
add
sbb
icebp
mov
sub
pushf
clc
xor
mov
call
ret
jecxz
sahf
addr16
ss
sbb
xchg
out
in
jo
scas
push
mov
scas
fnsave
cmp
mov
mov
cltd
push
int3
ja
pop
es
jl
xchg
fwait
cmp
in
pop
nop
xchg
rorl
test
fsts
push
insb
leave
sbbl
mov
push
dec
clc
pop
out
vmread
scas
sti
lock
daa
imul
pop
sub
aam
sbb
iret
mov
sti
and
dec
mov
fwait
inc
cmp
add
jae
xor
and
xchg
addr16
and
bound
or
imul
cmp
movb
repz
imul
aam
mov
stc
fs
jns
xchg
stc
dec
mov
shll
jnp
fbld
xor
jecxz
jnp
pop
mov
push
es
mov
xor
jp
add
ret
and
pop
xchg
jns
pusha
in
ret
sbb
lods
mov
aam
jmp
jo
mov
xlat
lds
ret
addr16
fldcw
rclb
pusha
out
sub
arpl
sahf
das
mov
dec
fs
xchg
cld
mov
jne
push
aaa
mov
inc
xchg
push
jb
sbb
push
add
and
loopne
fimull
mov
adc
sbb
sti
cmp
mov
pop
jns
inc
push
test
jbe
add
ds
lret
adc
lock
jl
jne
mov
cmpb
movsl
or
inc
dec
xchg
pushf
in
mov
cld
shr
cmc
jb
xchg
sbb
fnsave
int3
mov
adc
cmp
inc
scas
fstl
jo
or
andl
std
lahf
inc
pop
adc
test
addr16
sbb
std
jl
scas
pop
dec
and
dec
repnz
jb
sti
mov
and
xchg
mov
xchg
andb
jecxz
fs
cmp
clc
test
test
xchg
outsl
and
and
jne
or
xor
insb
or
rcr
jl
pushf
or
lcall
mov
pop
fdivp
sar
push
notl
push
push
test
adcb
mov
adc
adc
add
and
push
and
mov
mov
push
pop
sahf
xchg
jmp
sub
cli
lods
fnstcw
sarl
adc
dec
jg
cmp
fisubs
cli
sbb
cmc
test
mov
movsl
shl
jl
mov
fsubrs
push
repnz
sub
fs
in
hlt
insb
daa
xor
int3
cwtl
add
int3
int
and
fs
cmp
inc
push
outsb
imul
mov
pop
sub
jbe
addr16
push
xor
stc
cmp
push
outsl
mov
or
push
aam
ja
push
jns
mov
or
fbstp
jge
scas
popa
jmp
stos
mov
rorb
mov
jge
lcall
jns
dec
dec
fstl
repz
xor
addr16
inc
or
push
sub
mov
sbb
add
mov
shl
cmp
or
fwait
xor
insb
cwtl
mov
data16
xor
mov
pop
xchg
mov
pushf
mov
mov
mov
xlat
js
jne
dec
adc
sbb
pop
mov
inc
pop
inc
lea
int3
or
mov
in
js
dec
inc
roll
and
xor
pop
jmp
push
in
and
repz
pop
inc
push
mov
jo
cmp
fcmovne
jle
pop
fcmovnu
cmp
int3
ret
jl
jns
or
in
ret
dec
jmp
adcb
mov
js
mov
jno
sbb
push
imul
shlb
test
mov
inc
out
into
fistpl
xchg
ret
in
mov
std
subl
add
push
add
mov
int3
aad
xlat
sbb
add
jmp
cmp
cltd
sub
aam
jno
push
dec
daa
les
or
push
aam
jecxz
ret
dec
push
pop
adc
lock
lock
lea
rcr
shr
clc
and
and
fisubs
cmc
out
mov
sbb
fiadds
aas
and
push
fcomps
lock
fistpll
or
fcmovu
fildl
daa
ljmp
push
xchg
or
fiaddl
inc
mov
or
xor
dec
enter
lahf
xchg
push
mov
iret
xchg
adc
dec
inc
aaa
dec
out
sub
or
rorl
jnp
jle
cs
xchg
xorl
add
adc
pop
sbb
data16
mov
push
jle
divb
pop
cwtl
dec
add
mov
add
out
inc
pop
incb
ss
push
scas
test
pop
int
dec
pop
jp
push
and
jbe
mov
dec
cmpsl
push
push
or
shlb
or
xor
jle
adc
inc
ret
insb
jno
pop
mov
mov
outsb
scas
mov
sbb
notb
unpcklps
movsl
adc
enter
jnp
pop
xchg
jnp
dec
aaa
int
aas
sbb
adc
mov
mov
iret
popa
popa
sub
imul
nop
push
jge
mov
or
notl
movsb
adc
daa
push
loop
in
mov
cmp
ja
jae
add
push
mov
aad
psrlq
arpl
add
out
cmpsb
int3
popf
push
inc
pop
jge
lcall
sub
jecxz
out
lods
cltd
enter
mov
add
repnz
rolb
inc
jne
aam
mov
dec
dec
loopne
push
mov
mov
cltd
fbstp
das
sbb
add
and
rcr
push
lret
stc
repnz
adc
mov
repz
mov
jns
xchg
aas
stc
xorb
call
and
mov
xor
push
filds
xor
nop
dec
mov
mov
sti
icebp
idivl
sbb
xor
jno
xor
aaa
cmp
sti
mov
sub
mov
shr
inc
adc
lock
das
lcall
imul
xchg
out
mov
mov
pop
pmullw
push
jecxz
mov
sbb
push
pop
into
inc
jb
add
sub
add
mov
jno
mov
gs
lds
mov
mov
jns
mov
push
push
cmp
ja
mov
into
out
push
sbb
lret
push
aaa
adc
and
dec
push
jge
cmpb
jae
push
sub
adc
iret
cmpsl
cmp
lock
scas
sub
push
cmp
mov
je
and
mov
fdivrl
popa
xor
xchg
add
icebp
out
mov
cmp
seto
stc
sbb
cwtl
subb
xor
dec
je
xchg
stc
out
cli
inc
add
jbe
outsl
stos
xor
adc
fdivrs
rclb
lret
rcrl
scas
pop
enter
add
cmp
bound
pop
lcall
ret
daa
nop
data16
enter
pop
test
pop
rorb
mov
daa
cmp
stos
sub
bound
mov
mov
and
pushf
sbb
mov
test
sbb
mov
ret
rcll
fcmovnb
push
xor
sbb
adc
sbb
jnp
icebp
stc
inc
push
cltd
and
aam
sub
sbb
jg
ds
jne
sahf
inc
inc
jno
or
mov
sti
rcrl
in
push
push
je
push
sbb
push
mov
push
xchg
leave
push
dec
jle
xor
pop
inc
pop
xor
mov
movsl
cmp
rorb
push
jmp
push
in
xor
shlb
stos
push
xor
ljmp
adc
scas
lret
xchg
pop
and
test
nop
xchg
addr16
xor
aad
mov
fisubrl
sti
xlat
or
sbb
leave
mov
sbb
sub
cmp
fcomps
or
dec
mov
imul
loope
enter
clc
inc
ljmp
add
mov
aam
rolb
sub
mov
dec
inc
pop
push
or
xchg
xchg
xchg
lret
fisubl
sti
sahf
cmp
mov
lds
data16
out
fmuls
cwtl
in
push
mov
push
stos
jl
mov
enter
lret
imul
pop
in
fsubs
cmp
test
in
into
pop
rolb
sub
ret
scas
aad
test
pop
or
push
mov
and
daa
cli
xchg
inc
dec
xchg
ja
ret
lods
and
and
dec
cmp
cltd
push
jmp
push
icebp
movsl
sbb
or
or
inc
shrb
sub
out
push
mov
add
fsubl
pop
jns
dec
mov
icebp
nop
lock
lcall
cmp
push
mov
rclb
jnp
daa
out
jae
dec
xor
or
xlat
imul
aam
or
mov
in
imul
xchg
cld
dec
test
adcb
jae
jle
ja
add
cmp
mov
ljmp
adc
mov
cli
imul
das
jo
mov
jae
push
ud1
movsb
aad
or
jp
out
xorb
and
icebp
cli
hlt
sbb
cli
jmp
pop
mov
out
ds
adc
adc
scas
adc
cmpl
pushf
subl
pop
pusha
aaa
clc
sbb
or
pusha
idiv
adc
mov
fwait
lods
test
jbe
inc
js
xchg
lock
fs
sbb
stc
imul
adc
mov
repz
mov
inc
gs
and
gs
lret
inc
aaa
sub
push
inc
sub
ficomps
pop
cltd
out
lods
out
sahf
leave
orb
dec
int
xchg
pop
icebp
mov
or
pop
adc
cmp
call
xchg
cmp
ljmp
clc
mov
adc
add
cwtl
push
clc
mov
jecxz
test
lods
adc
into
ret
fwait
ret
fwait
add
pop
jge
popf
lods
pop
stc
mov
iret
in
test
jmp
insb
push
mov
pop
xchg
ret
jmp
loope
ret
in
mov
pop
aaa
pop
and
sub
add
es
adc
push
push
mov
xchg
push
out
jnp
inc
cmc
in
fistps
mov
mov
aas
lcall
rolb
sbb
aas
frstor
mov
and
js
pop
adc
mov
push
leave
es
sub
syscall
and
push
icebp
inc
lock
xor
mov
lods
add
sbb
jb
adc
add
dec
mov
test
push
cli
sub
insb
es
xor
ds
push
inc
addr16
pop
mov
jne
in
lods
int3
jecxz
mov
test
imull
rcrl
or
mov
xor
sbbl
cli
nop
lods
pop
je
imul
jp
jo
jo
pop
jle
fnstenv
or
arpl
int3
inc
push
mov
scas
shlb
adc
out
gs
push
inc
cmp
pushf
jno
xor
mov
fdivrl
pop
and
pushf
pop
jg
rcrl
lods
ja
push
jnp
jae
lods
push
sub
sub
fisttpl
or
add
push
fdiv
mov
cmpsb
pop
cwtl
cmp
ficomps
push
in
int3
adc
aad
rcrl
fimull
popa
imul
int3
dec
insl
jmp
and
jno
sub
into
push
ret
lret
lret
mov
sbb
jno
jl
lret
loope
sub
gs
mov
out
pop
push
es
add
sbb
mov
inc
pusha
xor
mov
movsb
jbe
pop
out
sahf
sarl
xor
cmc
push
dec
push
leave
insl
ret
aad
ja
fdivrs
fwait
inc
mov
mov
or
inc
sbb
mov
cmc
jecxz
cmp
notl
jbe
adc
cld
pop
xchg
xchg
push
mov
cli
sbb
cli
rcr
movb
mov
xor
test
fs
stc
pop
jp
call
push
xchg
sti
lcall
cmpsl
cmp
xchg
inc
add
jnp
inc
fadd
rcrl
and
shrb
adc
insb
arpl
pop
outsb
in
mov
cmp
xlat
clc
inc
repnz
xchg
or
mov
fiadds
das
repz
lods
into
cmp
cli
mov
stos
insb
int
dec
dec
cmp
aaa
xchg
nop
rorl
xor
aaa
mov
pop
dec
xchg
xchg
jg
fisttpll
pop
xchg
add
call
mov
or
cmp
lahf
inc
xchg
js
xchg
add
adc
xor
stc
enter
inc
shl
stos
repz
adc
dec
xchg
repnz
mov
dec
sub
mov
insl
cmp
jb
add
jns
retw
mov
lret
outsl
jb
or
sbb
stos
movsb
mov
adc
cmp
cmpsb
cmc
fistpll
mov
sbb
pop
xchg
jge
sbb
cmp
mov
add
pop
dec
add
aad
sbbl
xchg
mov
push
jecxz
push
iret
loopne
mov
mov
push
stos
inc
push
sbb
testl
or
xchg
push
fs
mov
jo
dec
test
mov
aam
and
fwait
sti
mov
cmpb
clc
inc
andl
mov
jns
pop
aas
mov
jp
sar
dec
mov
or
popa
sbb
fnstcw
cmp
or
loope
jmp
push
ret
jno
xor
mov
scas
mov
iret
adc
fdivrs
inc
jp
mov
add
ljmp
cmc
xchg
pop
int3
mov
dec
lahf
sub
imul
mov
loop
cmp
not
jb
and
andb
enter
inc
xlat
push
mov
call
inc
test
clc
xor
jg
push
inc
mov
mov
jl
jg
cltd
mov
jno
push
rorl
jle
fists
ss
stos
jecxz
dec
xchg
iret
das
jle
cmp
rcrb
scas
pop
fmul
add
adc
fwait
decl
or
mov
cmp
lahf
xchg
pop
pop
inc
in
int
mov
pop
daa
adc
shll
aad
fidivs
inc
pushf
pop
and
xchg
push
daa
insl
outsb
aaa
jecxz
lahf
cltd
fs
mov
sbb
out
repz
lods
movsb
add
scas
ljmp
pop
aas
mov
orb
movsl
add
sub
fs
inc
mov
insb
mov
dec
push
test
pop
int
xchg
arpl
pop
fs
cmp
shlb
lahf
sbb
mov
pop
loope
sbb
test
into
inc
outsb
jge
mov
push
in
sbb
testl
mov
loope
aad
xor
lcall
mov
mov
je
push
test
mov
lock
stc
in
mov
lcall
and
scas
in
pop
cmc
xchg
loop
aam
andb
push
mov
ficompl
jns
xlat
mov
or
shlb
push
testb
test
sbb
test
xchg
inc
or
jle
rcll
sub
add
inc
cmc
mov
add
enter
std
mov
and
sahf
jp
call
in
outsl
es
out
je
cmpsl
popa
sbb
stc
inc
test
sbbl
lahf
mov
inc
sub
sub
add
push
mov
inc
adc
cli
xchg
clc
das
nop
mov
jp
sub
loope
sub
inc
hlt
ja
cwtl
repz
mov
push
les
loop
outsb
dec
adc
mov
sbb
neg
shll
adc
nop
decb
jle
out
ds
push
inc
pop
push
push
dec
add
lds
cmpsb
push
push
subl
inc
mov
mov
test
xchg
sbb
pop
dec
insb
pop
add
push
out
adc
push
out
sub
in
and
sahf
mov
or
mov
popf
scas
push
mov
adc
sub
sub
jns
lahf
push
and
leave
inc
stos
ljmp
inc
pop
jno
or
daa
or
push
testb
jg
adc
aam
insb
inc
fisubrs
lea
jl
jbe,pt
jle
sbb
push
and
es
cld
int3
lock
std
imul
jno
sub
mov
add
call
loope
pop
inc
pop
jns
insl
pushf
ret
rol
xchg
bswap
fs
jbe
dec
ds
jnp
jbe
dec
sahf
dec
or
jbe
xchg
inc
inc
sbb
gs
sbb
sti
adc
xor
mov
fcoml
pushf
mull
jae
mov
dec
fimull
out
jge
je
push
int3
mov
stos
lods
dec
sub
in
xchg
mov
mov
mov
mov
xchg
pop
stc
shl
fcoml
jno
fcmove
fmuls
cmp
leave
mov
jns
jae
fmuls
ret
xlat
mov
or
push
es
in
outsl
je
fistpl
std
in
mov
js
sbb
push
mov
sbb
sahf
clc
push
test
fstpt
pop
pop
js
or
cltd
jp
cltd
xchg
xor
outsb
push
mov
and
mov
fisubrl
adc
jmp
or
cmp
sub
push
push
xchg
movsl
and
mov
or
sub
dec
xchg
inc
dec
xor
lods
jge
mov
cmp
icebp
pop
and
sub
cmp
lock
ret
push
or
arpl
lcall
jo
or
xchg
cmp
leave
push
in
fcmovnu
lret
cmp
cmp
daa
jbe
call
sahf
pop
jo
adc
mov
jecxz
jl
or
xchg
pop
scas
repz
out
daa
push
or
movsl
adc
or
fildl
jbe
jnp
popa
dec
adc
adc
js
cmpsl
bound
push
in
std
mov
lock
dec
inc
inc
into
sub
stos
js
into
inc
xchg
mov
sbb
cmp
push
mov
in
xor
stos
pop
xchg
cmpsb
adc
shlb
cltd
and
pushf
mov
jl
jecxz
pop
insb
daa
add
fwait
cmp
stc
mov
jns
dec
sarl
js
ktestw
fwait
adc
lahf
std
push
clc
loope
stos
pusha
test
mov
dec
pop
shrl
push
and
push
push
mov
loopne
les
adc
js
cmp
es
stos
sbb
cmp
test
out
cltd
out
loope
ds
dec
and
pop
js
mov
rcrb
cmpsl
xchg
daa
mov
rcr
ficompl
stos
push
jnp
icebp
dec
push
aas
stos
cmp
dec
xchg
cmp
push
push
lahf
aam
mov
sbb
fcomps
mov
clc
and
scas
sub
mov
mov
stos
sbb
sub
pop
mov
scas
cmp
enter
jl
pop
imul
jns
sub
std
iret
cmpsb
movsb
cmc
pop
out
imul
mov
xchg
dec
jnp
leave
sub
adc
and
add
mov
mov
lock
inc
icebp
jge
push
add
xor
xchg
pop
or
xor
and
bound
ja
xchg
sub
sbb
pop
sbb
push
fs
fs
repnz
cmp
xchg
sub
xchg
sub
in
cld
cmpsb
inc
es
push
mov
cmp
shrl
fs
stos
push
jne
adc
test
js
lock
je
arpl
mov
xor
arpl
outsl
ret
fcoms
xchg
adc
jno
fisubs
mov
notl
pop
in
xchg
in
cmp
imul
fst
cmp
pop
jmp
dec
lcall
into
insl
xchg
negl
push
dec
push
cmp
mov
lds
jmp
jmp
test
je
cmp
and
cmp
sti
bound
pop
jnp
inc
fdivs
add
or
jecxz
rclb
mov
mov
ljmp
aaa
adc
lcall
mov
inc
out
loope
test
lea
xor
push
mov
loopne
push
leave
inc
and
push
scas
loope
push
xchg
jp
outsl
imul
sub
shrb
inc
xchg
jmp
push
adc
inc
sahf
int3
cmp
mov
or
xor
dec
push
cmp
lcall
and
pop
jg
cmpl
inc
mov
cmpsl
mov
xchg
movsb
fwait
add
mov
sub
stc
or
jo
lods
inc
out
pop
nop
stc
ret
pop
cmpsl
mov
pop
into
shr
daa
jb
mov
sbb
mov
jle
push
fiadds
in
cwtl
stos
lods
jns
add
ror
and
lock
mov
das
lret
nop
stos
js
dec
mov
fadds
in
jmp
mov
sub
mov
and
xchg
dec
sti
add
sbb
and
out
push
pop
sbb
xor
jnp
jecxz
mov
mov
inc
adc
daa
pop
icebp
lds
adc
add
in
and
jle
mov
xor
push
push
cld
jo
add
lods
inc
and
scas
pop
mov
imul
movsl
mov
cmp
bound
cmpl
lods
mov
cmp
cmpsb
test
jmp
pop
or
jge
iret
pop
pusha
mov
rol
enter
fsub
out
pcmpgtd
pop
push
and
sub
stc
cmp
imul
xor
jmp
xlat
and
xchg
ds
push
xchg
loop
xor
iret
and
mov
js
xchg
dec
icebp
push
mov
popf
xlat
jo
arpl
inc
aaa
push
add
add
aam
pop
xchg
lods
mov
aad
scas
adc
or
add
jo
mov
fisttps
nop
inc
add
lock
or
mov
sarl
jnp
fs
mov
add
and
subb
adc
loope
sbb
popf
sub
dec
aad
xchg
out
mov
jno
mov
into
dec
xor
addb
mov
pop
lods
mov
and
ss
xor
push
push
mov
mov
enter
sbb
mov
xchg
outsb
pop
jp
sbb
fwait
js
push
jge
nop
leave
loope
shll
out
insl
mov
mov
adc
xchg
xchg
inc
gs
les
sub
fdivr
pop
inc
jno
jmp
add
or
scas
mov
jnp
xchg
jge
mov
shrb
aas
pop
or
faddp
jp
jle
sbb
pop
int3
roll
mov
int3
enter
fmulp
pop
mov
rclb
mov
cmp
or
cmp
and
mov
dec
or
mov
lock
outsl
ror
outsl
adc
sbb
mov
xchg
mov
popa
add
pop
test
lds
sahf
sbb
xlat
mov
mov
insb
or
lods
rorb
sub
jmp
cmc
jmp
popf
pop
mov
je
aam
dec
into
decl
fsub
pop
mov
addb
std
pop
mov
test
and
and
push
insb
pop
js
ret
cmp
or
insl
cmp
ret
movsb
aad
cmp
xchg
mov
xor
insl
inc
jo
ret
pop
mov
nop
fwait
adc
sub
mov
enter
sbb
jl
out
repz
mov
imul
lods
xor
das
icebp
test
test
iret
sub
inc
mov
call
repnz
int3
ror
cmpb
jo
mov
ret
gs
cwtl
mov
jg
stos
rol
adc
jecxz
in
outsl
inc
fsubs
and
shrl
das
and
sub
xor
cmp
pop
adc
mov
xchg
and
cli
cmp
out
gs
push
pop
enter
imul
or
push
shll
lock
mov
add
mov
icebp
adcb
jns
loop
fs
setnp
xor
xchg
cmp
jge
sbb
xchg
jmp
xchg
daa
xchg
mov
cld
jns
inc
in
push
cmp
push
cmpsl
xor
pop
insl
xchg
xchg
test
inc
cld
xchg
in
imul
jo
js
addr16
jge
imul
push
inc
mov
imul
sarb
mov
jmp
dec
mov
or
ret
jmp
mov
mov
inc
in
icebp
dec
xor
stos
popf
mov
out
jl
aaa
add
fsts
lcall
scas
jno
jns
ret
sbbb
or
push
test
fsubrs
jns
xlat
pop
mov
mov
pop
xchg
ret
pushf
loope
lcall
in
mov
jne
repz
stos
or
pop
dec
repz
push
in
into
out
and
rcl
fs
into
mov
loopne
and
inc
out
ret
add
cmpsb
or
lock
xor
aam
cs
cmp
outsl
xlat
arpl
stc
cmpsl
add
out
lret
pop
je
adc
jle
outsb
mov
cmp
imul
mov
mov
add
icebp
cwtl
dec
gs
jae
sub
sbb
and
xor
pop
movsb
xor
cmp
sub
push
imul
push
jg
pusha
sub
inc
dec
addl
cld
sbb
les
movl
jmp
pop
lcall
in
sbb
push
mov
lcall
inc
ret
fwait
and
and
push
and
inc
xchg
or
or
adc
push
stc
cmp
xchg
jbe
or
mov
pop
push
sub
xchg
sub
orb
xor
xchg
les
stos
movsb
jp
fidivl
es
xchg
shl
jb
and
adc
clc
cmp
push
xchg
sbbb
jmp
outsb
pop
shlb
dec
out
imul
or
pop
in
aas
into
dec
icebp
jnp
insl
or
cmp
xlat
repnz
test
das
std
sub
test
and
pop
or
mov
mov
push
inc
fwait
aad
or
insl
aam
mov
nop
std
adc
fs
jg
rcr
ja
push
sub
fcmovnb
xchg
sub
mov
cmpsb
mov
cmp
adc
jb
movsl
cmp
adc
fisttpl
jbe
cmp
cmp
stos
jmp
movsl
adc
popa
insb
inc
cmp
jecxz
xor
nop
fstps
mov
in
add
in
mov
push
push
imul
adc
xor
repz
mov
and
inc
sbb
js
fs
xchg
outsb
leave
xchg
adc
neg
inc
cmovno
ljmp
sbb
mov
mov
mov
or
or
pmaxub
fmul
or
mov
mov
push
pop
icebp
js
movsl
sarl
add
test
xlat
or
repnz
orl
push
jno
xlat
dec
add
int3
jmp
jmp
xchg
push
mov
push
push
out
fadd
lret
push
setnp
pop
roll
adc
add
adc
loopne
pop
jp
cmpsl
cmp
mov
popf
push
daa
push
jo
test
aaa
mov
iret
leave
pop
sub
cwtl
sub
repz
sahf
jge,pt
aaa
mov
dec
pop
aaa
sub
cs
roll
and
sbb
cmpsl
jle
sub
push
add
insb
mov
cltd
sahf
leave
lods
mov
movsb
lods
mov
test
insl
inc
rorl
xchg
jmp
inc
mov
jae
xchg
shrb
jns
call
xchg
or
aas
fwait
out
into
outsb
sub
lahf
mov
fsubrl
lret
cs
inc
push
sub
iret
mov
adcb
adc
shl
mov
outsb
in
orl
mov
inc
jle
aam
mov
ficoml
jnp
lret
pushf
mov
mov
jno
mov
jno
or
out
std
sub
sbb
stc
xor
sub
es
jl
cwtl
jns
leave
jmp
repnz
or
mov
mov
push
cwtl
push
dec
inc
test
sub
fcmove
call
jmp
xchg
mov
sbb
popa
mov
shl
mov
mov
xchg
cmp
mov
xor
and
dec
xchg
cmp
fistps
fwait
xchg
les
data16
inc
and
outsl
jne
out
ja
add
pop
mov
mov
nop
cmc
ja
and
loopne
mov
cmp
addr16
arpl
mov
pop
dec
cld
addr16
inc
mov
cmpsb
dec
sbb
movsb
and
cli
rcr
push
push
je
leave
pop
push
setne
dec
or
push
sbb
lcall
iret
xchg
mov
aad
stos
fsubl
int
stos
and
mov
shlb
jbe
lcall
and
pop
sub
jle
rcrb
mov
sahf
mov
push
or
out
push
data16
jle
in
stc
jae
jle
mov
mov
call
les
adc
pop
neg
mov
pop
leave
adc
insl
sub
cmpsb
xorb
xchg
or
fmull
stos
je
mov
cmp
xlat
push
mov
repz
cld
insb
divb
or
rclb
dec
xor
add
adc
jae
enter
mov
incl
pop
push
jp
int3
in
aaa
pop
adc
inc
or
rol
int3
mov
xchg
int
scas
aam
fwait
cld
push
mov
and
jp
mov
sub
popa
dec
add
mov
popa
in
mov
fdivr
fs
inc
icebp
outsb
add
fsubs
xor
jl
pop
and
or
inc
mov
mov
and
mov
pop
xor
add
push
lods
cwtl
clc
mov
loopne
jge
jmp
or
mov
jb
aad
loope
inc
pop
mov
mov
pop
gs
jmp
popf
lds
or
js
inc
lods
cwtl
mov
repnz
aam
fwait
and
cmpsb
xor
negb
out
sbb
xor
mov
cmc
pop
push
test
cmp
pop
mov
mov
inc
ret
loope
cli
mov
dec
jle
loopne
ret
inc
in
cmove
xor
cmp
dec
mull
or
shlb
push
inc
xchg
jno
or
xor
lahf
jnp
push
rolb
stos
push
xchg
mov
dec
loopne
mov
dec
mov
or
imul
lods
outsl
xor
mov
ret
mov
neg
cmpsl
mov
stos
sbb
sub
dec
imul
fistl
shl
mov
or
dec
mov
imulb
repnz
rolb
arpl
fiadds
cmpb
sub
leave
push
inc
inc
xchg
repnz
cmp
pop
fnstsw
adc
gs
out
shll
add
adc
insl
mov
jge
and
jae
adc
add
mov
rclb
test
dec
into
xor
add
inc
jae
or
push
test
mov
sbb
pop
sbb
adc
insb
mov
dec
fdiv
jmp
in
mov
add
dec
repnz
push
xor
cmpsb
xchg
push
and
xor
sub
adc
push
aas
mov
xchg
mov
cmc
fs
pop
out
stos
mov
jb
push
xchg
cmc
fisttps
pop
clc
sbb
sbb
js
push
popf
rcl
or
jbe
xor
mov
ret
xchg
push
sbb
loope
nop
inc
xchg
stos
pop
addr16
xor
add
push
std
adc
lcall
aad
pop
sbb
xor
andl
js
ret
out
cltd
and
jno
xchg
mov
xor
sbb
mov
adc
and
dec
fiadds
pop
and
dec
cltd
sbb
out
push
ja
jae
aas
or
bound
mov
fnstcw
sub
sub
or
dec
inc
movsb
cmp
mov
and
jp
xchg
cmc
cmp
rolb
push
cs
mov
ds
adc
rcr
mov
jg
pop
mull
daa
cmp
ficoml
mov
sub
gs
pop
or
push
leave
fisttpl
jns
clc
mov
lods
jl
mov
in
push
push
shrl
adc
lock
mov
aad
lret
out
push
dec
icebp
or
shrb
lods
in
adc
mov
add
mov
xchg
sbb
mov
sbb
xor
pop
ljmp
mov
cmpsb
sub
lea
jb
push
xor
dec
call
mov
cltd
cli
mov
sahf
idiv
adc
adc
jae
cmp
pop
aaa
mov
repz
call
pop
jae
jae
cs
stos
add
adc
fimull
call
lods
dec
xor
inc
sbb
add
mov
or
call
insb
xchg
and
cmc
xor
jne
mov
jl
or
sbb
jl
xor
lods
in
sub
loopne
cmp
sub
in
notl
movsb
stc
fldt
leave
mov
lds
push
int
lcall
cs
ds
xor
dec
sub
sti
jmp
mov
push
and
fisubs
xchg
pop
shll
pushf
and
sbb
mov
xchg
clc
sub
test
aaa
and
xchg
stc
imul
loopne
popf
iret
aam
adc
aaa
sahf
and
cltd
ja
std
xor
mov
scas
mov
into
shll
sti
test
xchg
pushf
movsbl
mov
pop
stos
pop
popf
or
ljmp
mov
push
mov
pop
push
adc
mov
inc
add
xchg
daa
add
dec
fstpl
mov
jecxz
sub
ret
mov
adc
das
jno
shl
xchg
inc
inc
addr16
xor
dec
mov
cmpsl
sub
mov
gs
or
in
int3
into
pop
mov
jecxz
int3
outsb
or
cmp
or
add
sarb
adcb
dec
rcrl
or
popf
lret
or
xchg
cmpsb
clc
ja
imul
leave
push
mov
imul
hlt
sub
sub
fldenv
inc
test
push
cmp
jb
xchg
pop
push
sub
or
mov
in
ret
insl
cmpsl
mov
test
and
sbb
scas
push
bound
lcall
jl
pop
test
hlt
jb
inc
mov
mov
dec
or
mov
hlt
test
xor
es
lret
imul
call
dec
add
rcrl
or
cmpsb
pop
cmp
into
insl
mul
mov
jecxz
mov
sub
rorb
pop
dec
xlat
push
pop
les
dec
or
jo
lea
into
ja
adc
xor
stos
lret
out
popf
pop
xor
test
add
aad
shl
cmp
xlat
movsb
leave
cwtl
scas
popf
dec
je
fistpll
inc
ss
lods
ja
sti
aas
pop
std
movsb
push
les
cmp
aaa
ret
push
mov
ds
ror
adc
add
xchg
lock
add
push
jmp
lret
aad
mov
repnz
pop
add
arpl
cmp
ss
mov
push
pop
push
and
jbe
call
add
or
scas
mov
inc
bound
push
popa
sbb
das
mov
cmpsl
outsb
inc
test
icebp
hlt
dec
clc
movsl
push
sahf
leave
sbb
repz
cmp
adc
mov
or
cmp
or
fisttps
mov
outsb
sub
out
xchg
xchg
scas
dec
sbb
daa
pop
fldenv
xor
ja,pn
mov
inc
mov
cmovb
or
ret
into
shll
arpl
mov
mov
out
es
cli
and
push
pop
dec
dec
xchg
or
cmpsb
push
cmpsb
mov
insl
lock
out
sub
movsb
popa
push
push
nop
cmp
cmpsl
notl
test
xchg
xchg
push
stos
mov
into
and
stos
leave
hlt
xor
sub
mov
lcall
mov
shr
and
or
pop
adc
jnp
gs
loope
mov
xor
jp
dec
jne
ret
sub
fstpt
dec
sub
in
aas
les
das
lret
popf
pop
and
xor
aam
add
mov
xor
mov
mov
in
cmp
outsb
mov
ffreep
fcmovnu
sti
push
or
add
xor
jle
test
sahf
imul
push
adc
mov
mov
pop
jae
dec
inc
test
mov
dec
sahf
pop
xor
loopne
lds
xor
mov
pop
aad
xor
sahf
repz
pop
fcmovnu
fiaddl
sub
push
aas
cmpsl
mov
inc
push
pusha
movsl
iret
cs
pop
adc
out
mov
fmuls
stos
or
jl
subb
into
pop
jmp
aas
push
adc
sbb
xchg
and
adc
push
and
sub
sub
js
ljmp
orl
sub
fildll
sbb
scas
imul
dec
pop
int3
mov
fstl
mov
cli
mov
idiv
jns
push
push
cmpsl
outsl
mov
add
xchg
test
sub
dec
add
imul
fisubrs
sahf
cmpsl
pop
xchg
mov
and
push
ret
sbb
jge
cmp
testb
mov
outsb
push
pop
xchg
jl
mov
jns
das
repz
add
cmp
or
mov
int3
pusha
and
mov
sbb
jne
fmulp
cmp
in
pop
roll
int
ficoms
pop
or
test
dec
mov
loop
lds
clc
xor
mov
lret
dec
lret
sbb
ljmp
or
mov
mov
jle
jecxz
call
xchg
imul
inc
cmp
lret
mov
push
lods
mov
movsl
fnstsw
cwtl
outsb
scas
out
add
out
mov
pop
iret
sti
dec
fbld
xor
inc
mov
and
pop
jnp
fbld
add
push
inc
inc
pop
mov
jbe
aas
les
shlb
ret
fimull
jl
sbb
push
rcr
cld
lret
jno
mov
out
mov
add
fptan
loop
addr16
and
mov
lods
je
mov
ret
mov
cmp
rcll
ffree
sbb
push
cmp
or
jmp
sbb
push
pop
sub
orb
arpl
or
lock
fistpl
jne
je
jg
push
mov
icebp
fwait
mov
enter
lcall
lods
or
js
loop
shl
ljmp
cmpl
mov
divl
das
xor
aam
lods
cmp
shll
icebp
les
movsb
pushf
int
cwtl
repz
mov
shll
lods
insl
fldl
lea
sub
dec
shrl
mov
aaa
inc
jp
shll
ljmp
mov
dec
fistpl
iret
jmp
push
loope
dec
sbb
jle
outsb
out
fildll
lcall
push
lret
cmc
ja
dec
pop
mov
loop
fdivl
cltd
add
sbb
sahf
insb
mov
xchg
pop
aas
jge
cwtl
jl
jae
push
mov
je
and
xchg
xlat
and
daa
sbb
rorb
dec
out
loop
cmp
or
pop
lock
sub
scas
dec
lret
movsb
mov
lret
jecxz
daa
ret
adc
call
movsb
adc
push
fimull
xchg
mov
pop
stos
dec
inc
xchg
mov
adc
imul
cmpsb
xorb
adc
mov
pop
push
popa
pop
adc
mov
dec
psubusb
sub
and
jge
cmpsb
cmp
sbb
jecxz
fsubs
xchg
add
mov
sbbb
jae
jle
mov
push
in
sbb
das
stos
clc
out
movsl
sbb
inc
sbb
mov
push
outsl
dec
ret
inc
mov
out
daa
xchg
out
push
shlb
insl
push
inc
loop
pop
dec
mov
outsl
mov
fnstsw
and
les
cmp
aaa
dec
inc
jl
push
cvtps2pi
shll
sbb
cmp
and
add
popf
xchg
movsb
xchg
jp
or
cmpb
rorl
sarb
adc
cmp
mov
stc
mov
dec
jo
xlat
jae
les
loopne
sbb
sbb
repz
cli
inc
adc
or
xchg
sbb
imul
push
dec
jns
lret
mov
lea
pop
xor
dec
jle
iret
ljmp
mov
pusha
popf
imul
cmp
xor
mov
js
mov
xchg
xor
popa
cmp
push
in
aam
insl
dec
sbb
rcl
add
cltd
fisubrs
loopne
mov
add
xlat
bound
or
and
sub
or
fiadds
or
cltd
fwait
dec
jbe
inc
add
shll
push
lret
mov
cltd
das
mov
dec
dec
sbb
in
aad
pop
cmp
add
push
mov
push
cmc
loope
xchg
lds
mov
adc
icebp
in
pop
clc
adc
insb
cli
or
push
xor
push
cld
je
lds
and
into
push
jle
pop
int3
cmp
dec
and
jns
call
pop
add
leave
mov
mov
fwait
ret
sub
rclb
jle
add
push
xchg
or
data16
outsb
pusha
xchg
arpl
inc
mov
adc
cmp
stos
add
notb
xchg
push
and
addl
sub
ljmp
fwait
pop
fstps
push
push
ja
outsb
test
popa
icebp
dec
cli
cltd
andl
loope
push
leave
cmpsl
ljmp
xlat
mov
pop
cmpsb
movsl
fnstenvs
outsb
push
cmp
xor
or
adc
mov
das
pop
test
lock
sub
movsl
scas
push
add
push
jp
addl
dec
adc
fs
mov
pop
mov
hlt
sub
lods
ret
dec
and
imul
xor
jmp
jb
and
mov
aas
dec
jp
xchg
sub
ss
cs
jne
cmpsb
and
scas
test
test
cmp
pop
jmp
ret
sub
rcll
and
arpl
arpl
xchg
and
push
inc
data16
das
in
and
xor
xchg
push
dec
jmp
shlb
mov
sub
dec
nop
mov
bound
adc
mov
insb
rclb
sub
jbe
ret
xchg
or
pop
mov
add
lock
push
adc
add
sub
adc
xchg
in
mov
dec
push
ficomps
jne
in
inc
or
loopne
scas
push
mov
stos
lahf
push
add
and
dec
sub
insb
dec
je
inc
cmp
insl
call
jbe
out
mov
mov
cmp
out
shrb
outsb
jmp
xchg
inc
dec
int
scas
sbb
test
or
fsubr
push
cs
dec
scas
sti
mov
sub
mov
xor
mov
pop
pop
outsb
adc
sbb
insl
sbb
mov
cmpsl
add
repnz
repz
ja
pop
push
fs
inc
add
scas
testl
fisttpl
test
xorb
cmp
pusha
stc
jg
inc
push
and
test
inc
inc
roll
sub
adc
jg
in
addr16
inc
push
xor
adc
popf
rol
or
dec
repnz
xorb
adc
sbb
and
imul
mov
pop
out
xchg
inc
sub
popf
or
pop
cmp
leave
jge
sub
jecxz
dec
icebp
addr16
mov
popf
dec
int
negb
mov
leave
scas
inc
in
sub
mov
pusha
lret
xor
push
mov
mov
xchg
rcrb
fbld
jo
mov
mov
xchg
pop
xor
mov
not
sbb
ss
adc
insb
outsb
pusha
or
inc
or
test
sub
into
or
mov
scas
movsl
cmp
sub
stc
insb
pop
mov
in
faddl
std
sbb
test
test
lahf
fs
mov
test
pop
fisttps
sub
and
push
cmp
into
xor
subl
ja
lahf
fldl
ljmp
lods
mov
out
ljmp
sub
dec
xor
xor
pop
es
mov
lods
cmp
and
sub
push
jbe
xor
ret
ret
fwait
je
in
stos
cld
das
lret
out
push
jae
dec
add
sub
stc
or
xor
add
cwtl
pop
xor
jb
leave
in
ret
popf
jne
int
loopne
xor
into
cmp
sub
das
mov
mov
pop
imul
lcall
xor
aas
sub
testb
cmp
sbb
push
fnstenv
mov
dec
mov
cmpsl
enter
stos
xchg
xchg
jp
push
js
jo
xchg
lret
pop
mov
cld
sub
call
fs
cld
test
adc
add
push
in
nop
cmp
or
jne
daa
adc
rcr
dec
push
cmp
fisttpll
mov
out
push
rorb
sub
cmp
or
pop
rcll
push
stos
ss
nop
cmp
inc
inc
in
jp
sub
mov
xchg
je
inc
add
fcmovne
sub
xchg
popf
bound
xor
push
loopne
cltd
and
cltd
popf
in
out
or
hlt
sbb
dec
sbb
daa
popa
mov
pushf
xor
inc
dec
sub
in
repnz
xchg
mov
xor
mov
jno
sti
jge
add
das
mov
mov
lret
ss
dec
addr16
sbb
or
pop
lods
xchg
imul
adc
sbb
push
loope
imul
add
xor
fdiv
push
iret
int
insl
out
mov
sub
call
stos
pop
rcr
outsb
daa
add
mov
rorl
sub
arpl
or
std
cmp
xor
and
xchg
mov
push
mov
inc
nop
and
xchg
mov
add
shll
shl
push
mov
push
lods
ss
out
xor
or
mov
mov
ret
notb
xchg
fists
bnd
mov
call
adc
mov
or
int
movups
mov
jg
xchg
popf
xchg
cmp
xchg
pop
pop
mov
std
in
or
jno
cmpsl
dec
test
mov
push
aas
imul
movsb
dec
int
repnz
mov
adc
jp
arpl
orl
lcall
cmc
push
es
ret
sbb
inc
and
adc
enter
xor
popa
dec
pop
jle
daa
inc
push
daa
push
adc
leave
or
xor
inc
cltd
add
addb
enter
fcomi
dec
pusha
mov
stc
lds
and
in
loopne
pop
sub
jmp
js
es
mov
sbb
push
pop
push
pop
xor
mull
jg
sbb
ret
jno
add
out
inc
push
pop
push
and
testl
popf
cmp
sub
cmp
leave
xchg
xor
nop
fdivs
lods
push
xor
fadds
cmc
push
pop
out
loop
sub
dec
int3
fst
aad
cs
out
loop
clc
xor
or
call
rcr
push
popf
inc
and
adc
shrb
jp
jae
sar
sub
lea
cmp
bound
xlat
nop
bound
push
addb
repz
xor
mull
std
sti
sub
pushf
sbbl
push
xchg
mov
pusha
ret
xchg
cmp
jp
adc
outsb
jp
sub
pop
xchg
jmp
testb
push
mov
imul
or
notb
mov
pop
mov
adc
call
pusha
outsb
jo
pusha
pop
sub
mov
dec
lock
outsb
orb
int
ds
or
jnp
imul
fstps
stos
push
sub
mov
das
dec
mov
inc
ret
xchg
addl
inc
and
or
cmp
repnz
cli
dec
dec
and
sbb
push
out
hlt
dec
sub
test
jne
pop
xor
mov
inc
ret
pusha
imul
xor
add
mov
add
and
jmp
pop
lods
xchg
aad
mulb
add
mov
cld
jo
mov
and
mov
pushf
push
enter
sbb
jae
jp
push
jae
inc
or
hlt
and
mov
mov
xchg
push
sti
cwtl
adc
xchg
imul
add
or
adc
inc
test
jle
outsl
adc
out
fwait
jb
cmp
mov
or
testl
call
xchg
dec
es
cmp
cmpsl
stos
and
out
bound
cwtl
adc
lret
mov
cmp
pop
and
les
and
xchg
jnp
vunpcklpd
fcmovb
push
movsl
cmpsl
mov
std
xchg
inc
jnp
push
stos
dec
insb
sub
std
xor
jmp
sub
mov
outsb
ljmp
add
lock
mov
mov
out
cmp
xchg
or
inc
in
inc
sarb
jle
and
lods
loop
stos
fdivl
or
mov
xchg
add
sarb
mov
int3
pop
in
mov
ja
xlat
imul
cmpsl
and
push
mov
ja
push
cmp
dec
daa
mov
add
stc
movsl
cs
and
add
enter
out
or
in
cmp
dec
sub
loope
roll
pop
sbb
lcall
cmp
mov
jle
dec
insb
jg
dec
jle
inc
push
xor
call
pop
mov
loope
ret
scas
fwait
jb
lock
mov
add
and
shl
inc
fs
stc
movsl
loope
jl
clc
loop
jnp
fdivr
inc
adc
mov
mov
ret
jl
and
outsl
stos
xchg
nop
addr16
sbb
add
xchg
ficoml
outsl
jl
dec
mov
stc
mov
mov
pause
imul
push
push
jne
popf
fisubrl
addr16
dec
xchg
ljmp
fdivl
stos
popa
pop
xor
push
or
out
sti
mov
push
adc
and
js
jo
lcall
sbb
inc
or
cld
gs
fdivs
xor
cltd
jnp
fisttpl
test
sub
scas
pop
ja
das
dec
loop
scas
ljmp
mov
add
jecxz
cli
call
add
xchg
insb
mov
push
aad
jo
js
jg
inc
xchg
cmp
sub
dec
mov
sub
inc
jge
stos
dec
in
push
fldln2
dec
mov
test
movl
push
ja
ret
push
lods
jnp
or
clc
pop
stos
or
lahf
add
xchg
loopne
clc
jmp
pop
icebp
and
arpl
icebp
sub
mov
repz
inc
dec
push
outsb
imul
mov
int
pop
pop
mov
cmp
xchg
inc
and
pop
dec
mov
inc
mov
adc
shl
outsb
xlat
jb
cmpsl
repnz
js
cmp
cli
mov
xchg
adc
aam
jns
and
outsl
loope
push
jecxz
test
mov
out
clc
mov
enter
clc
int
xchg
sbb
mov
pop
test
or
mov
cli
mov
and
mov
jae
fs
rorl
shl
neg
test
sbb
mov
imul
mov
sahf
inc
int
xchg
mov
test
outsl
adc
lahf
jb
ljmp
add
es
mov
xchg
and
subl
jns
fists
sti
pop
mov
icebp
mov
mov
xor
pop
or
cwtl
addl
stc
hlt
sahf
mov
xor
sub
push
dec
dec
popa
cmp
rcl
xchg
test
test
repnz
dec
jle
cmc
imul
pop
xor
sub
and
jns
in
ret
test
ret
dec
test
movsl
rcl
jl
iret
aad
imul
mov
xor
inc
pop
cmp
in
xor
pop
loop
iret
inc
test
mov
mov
add
ds
mov
push
pop
inc
adc
adc
mov
mov
push
fcoms
out
or
or
mov
lea
adc
out
add
gs
push
fldln2
or
pop
push
push
jns
lret
inc
adc
es
cmp
into
sbb
mov
fcoms
lahf
xchg
xchg
out
cmp
and
mov
popa
ss
in
xor
je
or
push
sbb
pop
pop
or
out
dec
filds
adc
dec
pop
ss
cmp
cmp
pop
add
test
pop
out
mov
fldt
xchg
inc
xchg
lahf
cmp
dec
ror
mov
out
popf
repnz
jb
jg
es
hlt
shlb
scas
hlt
testb
add
out
mov
mov
mov
add
push
in
mov
in
nop
pop
leave
out
fwait
dec
test
push
adc
push
repnz
fisubrl
ret
int3
sub
das
jp
dec
stos
sbb
cld
mov
in
or
inc
lea
cmp
add
mov
inc
dec
jne
mov
inc
pop
popa
notb
data16
cmpsb
movsb
mov
in
inc
mov
lock
sbb
in
inc
cmp
jno
dec
dec
mov
mov
in
adc
mov
xchg
push
arpl
or
push
insb
push
nop
mov
sbb
fsubl
enter
mov
aad
jb
leave
sub
and
xchg
int
jnp
cmc
push
xchg
std
mov
xlat
jnp
push
and
fcmove
xchg
cmp
test
test
pop
mov
add
aas
clc
pusha
mov
and
xchg
incb
pop
jne
pushf
test
das
std
scas
mov
dec
xchg
jne
sbb
stos
pop
push
xor
and
dec
loop
mov
nop
adc
xor
xchg
rclb
and
jo
inc
ds
mov
mov
push
hlt
and
add
je
or
push
inc
adc
scas
out
roll
push
xlat
xor
aas
mov
test
pop
imul
sti
sbb
add
push
cld
cmp
vmwrite
xor
lahf
sbbl
mov
adc
outsb
dec
imul
cmpsb
mov
or
je
xor
cmp
mov
inc
push
arpl
add
xchg
icebp
xlat
lea
inc
mov
nop
cmp
jnp
inc
test
pop
jle
fstps
std
dec
sbb
rolb
out
inc
cmp
or
decl
repnz
mov
xchg
loop
test
dec
push
sbb
nop
outsb
adc
lock
inc
test
cli
out
in
test
clc
push
xchg
aas
pusha
xlat
out
xchg
mov
test
or
aam
fs
cmp
inc
sbb
outsb
push
pop
xlat
mov
xlat
aas
aaa
mov
sub
cmpl
mov
aad
ret
fxtract
ret
or
jbe
or
out
mov
lea
aam
hlt
dec
inc
lea
push
fwait
pushf
sub
iret
shl
inc
jge
jno
mov
mov
xchg
cmpsl
cmp
adc
jbe
pop
cmp
push
scas
mov
outsl
das
push
scas
mov
push
mov
dec
jmp
cmp
jo
sbb
mov
jecxz
jecxz
mov
insl
div
cmp
scas
sub
pop
sahf
addr16
stos
stos
sbb
pop
pop
inc
jl
je
out
jb
int3
mov
daa
pop
xchg
pushf
adc
sbb
and
sbb
out
loope
xlat
cmpsb
sub
bound
jbe
and
test
mov
mov
out
mov
mov
shlb
adc
sti
pop
lcall
dec
loope
repnz
add
lods
xchg
pop
scas
iret
sti
outsb
dec
stos
in
js
stos
mov
push
xor
inc
dec
iret
pushf
push
repnz
pop
dec
cli
sub
mov
ljmp
inc
scas
fs
lret
dec
imul
sti
inc
xchg
mov
inc
fsubr
jp
push
das
add
cltd
jno
div
pop
arpl
scas
rolb
aaa
push
inc
sahf
sbb
or
adc
add
imulb
ljmp
jg
push
cmp
mulb
inc
and
mov
sub
cmp
scas
loopne
add
ja
popf
mov
mov
loope
cwtl
push
arpl
sarb
xchg
pushfw
inc
sbb
icebp
adc
insl
fmull
mov
sub
shr
gs
push
dec
aaa
mov
fistps
mov
mov
ret
jmp
out
or
das
sahf
xchg
push
in
mov
fildl
leave
insl
jnp
test
sub
mov
mov
mov
sbb
mov
repz
icebp
js
aaa
pop
jmp
fmul
xor
in
jmp
adc
nop
lcall
add
fs
dec
rclb
xchg
and
test
lret
mov
cmpsl
fcoml
and
arpl
jmp
pop
sub
push
and
cli
and
mov
xor
out
fcoml
js
lahf
and
out
cmp
in
add
jno
sbb
aam
fdivrs
out
sbb
push
adc
enter
insb
in
mov
in
cmp
in
add
insb
xor
dec
jne
mov
push
jle
test
popf
pop
pop
jecxz
cmp
xor
xlat
push
mov
cmp
mov
les
inc
pop
es
push
adc
jmp
bound
add
cmp
roll
lock
mulb
adc
lahf
mov
in
or
xor
and
dec
push
mov
loop
and
jecxz
in
pop
dec
fs
orl
stos
pop
push
cmpsb
adc
arpl
int
cmp
sarl
fidivl
adc
sub
leave
scas
sbbb
adc
test
mov
mov
pushf
mov
cmpsb
push
xchg
dec
cs
pop
ss
inc
sub
test
jmp
imul
mov
int
pop
cmp
test
jo
mov
inc
sub
jno
decb
mov
sub
cmpsl
call
mov
ja
mov
pop
sbb
push
xlat
push
mov
mov
add
cmpsb
inc
je
xchg
es
or
adc
sbb
sub
adc
stos
jge,pn
lods
push
mov
mov
andb
fisttpl
inc
cmp
ret
mov
mov
movsb
rcrb
adc
insl
xchg
cmp
sub
xchg
mov
sbb
inc
jl
and
xor
and
xchg
ret
and
insb
out
sbb
mov
roll
lds
mov
jmp
js
mov
filds
inc
cmpsl
inc
mov
push
pop
faddl
inc
ja
loopne
or
jmp
aam
pop
leave
jg
sbb
rcrb
hlt
mov
leave
repnz
push
push
pushf
jmp
aaa
add
xor
add
pop
xor
bound
rcrb
mov
stos
pop
jnp
dec
das
and
gs
ret
dec
out
outsb
push
scas
jl
adc
jnp
jle
daa
lahf
inc
and
in
jbe
and
jmp
cmp
aas
jp
sbb
sarl
sbb
adc
sub
hlt
xor
mov
adc
adc
push
lcall
lahf
cmc
repz
and
cmc
mov
xchg
shll
repz
adc
iret
inc
xor
cmp
mov
cltd
cmp
push
pop
out
push
dec
icebp
or
adc
cmpb
addb
ffree
stos
test
repz
mov
enter
stos
inc
dec
std
test
out
or
insb
cmp
pop
push
adc
es
aaa
out
jb
xlat
push
sbb
stos
addl
ljmp
mov
push
cli
cmpsb
out
iret
int
aad
push
pop
mov
pop
mov
mov
adc
sub
aas
les
loopne
mov
xchg
mov
std
fwait
into
in
xor
xchg
fnsave
add
add
aad
xor
sti
xchg
daa
imul
mov
jns
movsb
lahf
or
sub
shll
in
dec
dec
push
xor
jmp
cs
scas
dec
cmp
sbb
sbb
cli
mov
imul
push
push
mov
test
sbb
movhps
sar
subb
pusha
pop
in
xchg
test
in
pusha
xchg
divb
xlat
sub
xchg
cli
mov
sbb
mov
fstpl
push
mov
inc
sahf
xchg
cld
xor
jne
mov
bndstx
sbb
jo
mov
jns
fsubs
loop
jle
jne
adc
inc
outsb
leave
imul
notb
dec
aas
xchg
out
icebp
dec
imull
or
int
ficompl
cmpsl
xor
pop
stos
adc
jle
adc
and
mov
scas
movb
flds
jp
cmp
push
inc
pushf
pop
lock
dec
and
add
popw
mov
adc
mov
fstl
pop
xchg
xchg
cmc
jg
cltd
out
jbe
xchg
ds
sbb
test
mov
or
push
popf
bound
mov
mov
enter
roll
jp
or
dec
rclb
dec
push
test
std
mov
insb
jo
pushf
pusha
ficompl
lcall
dec
jns
sahf
ret
jle
lcall
pop
cmp
add
sbb
ret
cmp
sbb
fnstsw
inc
dec
movaps
inc
sub
js
mov
in
scas
jle
mov
in
push
iret
sub
xchg
enter
jns
mov
test
fsin
data16
into
repnz
push
xchg
stos
xchg
pop
mov
mov
inc
adc
mov
lret
lret
loop
xchg
popa
in
lods
inc
inc
inc
pop
cli
scas
jge
js
lea
les
movsl
aas
repz
mov
lahf
movsb
sbb
sti
test
popa
pop
or
dec
mov
movsb
jmp
and
ja
gs
dec
dec
push
fisubs
cmp
mov
jae
cs
mov
mov
inc
shll
jo
stos
out
ljmp
test
inc
call
jae
ret
nop
mov
pop
inc
push
jge
stos
cmp
fsubrl
pushf
les
ds
jne
mov
push
sub
or
imul
mov
xchg
fwait
int3
push
addr16
cmp
sbb
jns
stos
lahf
xor
jae
adc
movb
aam
jnp
arpl
leave
ljmp
xorb
ds
std
and
scas
mov
adc
cmpsl
xor
in
cmp
pop
into
lods
and
les
push
in
aad
scas
popf
loope
fmuls
sbbb
push
and
jae
imul
or
mov
cmp
pop
repnz
cld
int3
push
sub
fistps
ret
push
jo
pop
pop
inc
fdiv
push
pop
mov
in
fucomip
sbb
push
stc
sti
add
lods
addr16
dec
mov
hlt
adc
lcall
fmuls
ret
push
cmpsb
fisubrl
or
pop
ret
pop
or
cmp
dec
pop
add
dec
ss
in
out
das
outsl
mov
mov
cmp
mov
and
lret
xchg
jnp
push
jo
sbb
push
mov
jp
repz
and
fistpll
or
push
xchg
jp
shrb
pop
mov
add
push
adc
xchg
mov
mov
faddl
push
xchg
and
adc
sub
ret
mov
push
mov
pop
push
or
nop
popa
dec
test
inc
test
xchg
repnz
ljmp
or
sbb
mov
dec
and
xchg
xor
mov
and
fbld
addr16
lcall
xor
cmp
pop
jnp
and
push
add
ficompl
and
and
fbstp
xor
push
popa
dec
popf
hlt
inc
or
xchg
test
lret
mov
xor
dec
sub
fs
lock
ljmp
xor
mov
jmp
cmp
pop
xchg
mov
ja
push
inc
mov
loope
cmpsb
sbb
fsubrs
test
out
pushl
mov
sub
sbb
dec
mov
in
adc
aad
sbb
sub
fldcw
xor
mov
add
add
outsl
mov
add
sub
adc
jae
stc
es
aas
int3
dec
jbe
sub
lea
into
popf
pusha
add
pop
adc
jmp
inc
inc
stc
mov
xchg
pop
and
xor
mov
mov
mov
pop
mov
lcall
pop
lcall
pop
movsl
rcrl
fdivs
mov
insb
xchg
aad
lcall
das
adc
lea
mov
les
push
xchg
imul
dec
push
stos
cmp
cmc
movsl
hlt
in
out
js
xor
cmp
jmp
mov
dec
inc
jmp
ret
es
push
cmp
cwtl
cmc
ss
cmp
loopne
aas
jp
push
sub
fstps
ret
xchg
lock
pop
or
add
jmp
enter
or
out
scas
mov
pop
stc
push
add
mov
int3
cld
sub
mov
or
cwtl
sub
shll
fwait
adc
adc
popf
ds
jo
cmp
rcrb
in
pop
or
in
push
insb
and
mov
test
lods
loopne
fcoms
sbb
mov
add
mov
xlat
sbb
sbb
loope
lahf
push
inc
pop
ror
sub
and
xchg
int3
sbb
arpl
pop
lods
cs
sub
sahf
mov
nop
lret
fnstcw
mov
in
mov
mov
aad
adc
mov
mov
hlt
sub
popf
int3
jp
test
enter
fiadds
lret
push
scas
pop
ss
imul
ja
fcmovb
xchg
stos
out
loopne
cmp
inc
loop
push
xchg
ret
pop
mov
insl
fcom
sbb
adc
and
pop
mov
jg
mov
sti
lret
cs
insb
mov
push
test
mov
mov
push
sarl
jecxz
sbb
pop
or
jg
mov
sbb
and
pop
sbb
loope
and
lods
jae
push
sbb
cwtl
cmc
js
mov
mov
xchg
aaa
stos
repz
jmp
mov
les
sbb
cmp
cmpsb
or
sar
in
lea
out
mov
cmp
fucomi
pop
pop
arpl
dec
iret
aaa
pushf
pop
jnp
lock
pop
jmp
xchg
mov
jmp
or
int3
mov
mov
add
cmpsl
gs
loopne
mov
cmp
xchg
xchg
cmp
push
xchg
out
mov
or
rcrb
aaa
xor
or
mov
lods
inc
mov
test
push
sbb
sub
mov
aaa
push
pop
lret
fiadds
mov
dec
xchg
mov
outsb
shrl
push
inc
test
add
and
in
test
lcall
xchg
rorb
mov
into
sbb
cmp
xchg
pop
lret
lods
xchg
jmp
jp
adc
cmp
mov
dec
fcmovnb
mov
shr
je
out
ljmp
and
out
arpl
push
in
jo
jns
insl
psraw
mov
scas
jne
sub
lds
into
push
push
push
mov
adcl
mov
in
aad
cld
cmp
xchg
imul
ss
repz
dec
ss
inc
add
fnsave
add
nop
icebp
aad
jge
bound
adc
sbb
js
fdivs
rcl
mov
cltd
mov
adc
loop
push
sbb
insl
pop
sti
push
jb
addr16
aas
dec
mov
mov
in
or
shrl
push
mov
add
in
pop
and
fdivl
and
xor
insb
pop
dec
test
or
xchg
mov
xchg
cmpsl
fistps
or
cltd
enter
jnp
pop
inc
xchg
pop
sar
dec
push
repnz
ljmp
sub
push
test
loopne
pop
sub
mov
pushf
jno
push
stos
sub
sbb
pop
xchg
fnstsw
aaa
mov
jle
lods
xor
ficoms
and
loope
fnsave
dec
icebp
arpl
xor
fisubrs
add
iret
mov
mov
xor
in
and
ljmp
pop
addr16
cmc
and
xor
hlt
or
ja
std
xor
or
jl
and
hlt
clc
cld
mov
sbb
jno
outsl
ret
movsb
xchg
mov
rclb
jmp
movsl
cli
test
nop
js
sahf
fldt
les
movsl
arpl
sbb
sbb
pop
daa
push
mov
cld
xor
cmovg
test
push
push
daa
out
sub
sbb
mov
fstpl
jmp
and
pusha
mov
mov
mov
pop
pop
les
in
mov
decl
in
pop
call
icebp
pop
cli
xchg
xchg
adc
test
shrb
pop
jle
jle
in
std
or
lcall
divl
pop
mov
gs
dec
cmp
insb
jo
dec
jb
imul
test
jns
dec
stc
jo
sbb
mov
lock
outsb
in
mov
jne
add
mov
xchg
push
add
ja
mov
je
dec
movsl
std
and
mov
pop
and
pushw
int3
or
mov
xchg
mov
or
stc
adc
lods
adc
sub
cmp
addl
das
sub
mov
ja
cmp
fstpt
pop
push
mov
rorl
js
shl
sub
idivb
inc
int3
aad
adcl
push
shrl
push
bndldx
xchg
in
insl
negl
fisttps
adc
std
sub
add
dec
adc
mov
stos
push
clc
pop
pop
fxch
cmpsb
pop
outsb
inc
dec
dec
push
fists
fisubs
push
mov
xchg
pop
leave
stc
cld
xorl
adc
pop
popa
loopne
dec
fnsetpm(287
aad
in
out
jl
subl
shl
mov
xor
add
mov
mov
jno
inc
sbb
popa
clc
popf
ljmp
mov
dec
leave
gs
jmp
in
sti
cmp
dec
in
mov
movups
sbb
mov
daa
and
push
push
or
or
or
stos
aaa
dec
adc
mov
test
movl
scas
fmuls
mulps
or
setns
or
mov
fcompl
cvtps2pd
pop
fcomp
loop,pn
xor
out
xchg
and
addr16
push
add
in
cwtl
cmp
pop
mov
jae
push
repnz
outsb
push
stos
cmp
mov
insb
pop
xchg
add
mov
pop
shlb
add
daa
pop
in
mov
sub
sbb
sbb
cmp
mov
pop
pusha
inc
sbb
ficomps
addr16
enter
popf
xchg
les
fldenv
loopne
icebp
or
jae
adc
movb
repnz
sbbb
loop
cmp
inc
mov
test
lret
fs
mov
dec
cld
bound
imul
mov
lea
bnd
loope
xchg
repnz
mov
and
cmovs
sbb
and
mov
mov
xor
dec
cmp
or
sub
fsubl
xchg
sbb
sub
outsb
fdivl
pushf
hlt
shrb
das
and
jo
adc
sbb
dec
ror
out
in
sar
in
and
mov
aam
add
add
shll
arpl
es
xor
jno
aad
or
jp
lods
push
pop
sti
enter
loope
inc
or
xor
fsubrl
dec
push
aad
jg
shrb
and
rcrl
mov
mov
cmp
cli
pop
xor
stc
xchg
jg
mov
out
adc
ds
ret
jp
and
xor
push
or
test
mov
aaa
push
pop
cmp
outsl
and
adcl
dec
jecxz
ret
push
cwtl
mov
jmp
sbb
test
push
push
add
and
push
nop
outsl
mov
mov
in
adcl
xchg
and
dec
sub
imul
js,pn
xchg
sub
mov
gs
pop
hlt
gs
icebp
mov
dec
negb
pop
sub
inc
test
cmp
sbb
and
pop
add
add
ds
jmp
cmp
test
or
add
xor
pushf
cmpsb
outsl
fcompl
stos
add
out
sti
lds
add
iret
movsb
pop
add
mov
idivl
xchg
lods
inc
xor
push
mov
push
pop
mov
jge
sbb
push
and
fadds
jo
cmpl
cmp
sbb
in
outsb
jl
inc
and
xor
and
xchg
pop
int3
lahf
mov
loopew
outsl
sahf
or
out
lret
fstpt
loope
dec
jo
stos
in
in
loopne
adc
inc
pop
data16
mov
mov
add
sub
lahf
inc
aas
xlat
imul
mov
inc
fistps
xor
scas
xchg
nop
jb
jg
push
adc
mov
int3
in
mov
dec
hlt
rorl
or
je
hlt
push
inc
or
jp
pop
jg
dec
or
sbb
inc
adc
xlat
ja
jae
out
xchg
insb
jae
sub
adc
ret
dec
mov
mov
repnz
and
xor
cmp
sbb
pop
repz
push
and
mov
mov
cli
xor
pop
sbb
dec
adc
sahf
outsb
insl
mov
xorb
idivb
pop
add
mov
push
jg
jl
dec
xor
ret
mov
cmpsb
mov
lods
nop
insl
imull
enter
sub
cmp
out
data16
mov
mov
lret
jmp
in
testl
push
fs
sub
jno
dec
fiaddl
dec
roll
jno
lcall
ds
shrb
stc
int3
add
cmp
push
mov
int3
sub
xor
inc
lods
mov
sub
pop
fwait
mov
call
mov
dec
adcl
lods
mov
xlat
fs
sub
xor
adc
adc
das
dec
ret
cmc
jbe
les
lods
lret
and
mov
lds
jmp
or
fcoms
mov
outsb
mov
xor
cmpsb
cld
mov
out
push
dec
je
jo
js
in
jp
pop
sbb
mov
andb
comiss
adc
sbb
mov
mov
stc
insl
shlb
xor
jae
or
in
push
je
lea
pop
add
int
and
pop
idivb
adc
add
sub
pop
repnz
jl
scas
adc
sub
or
dec
xor
fwait
jge
hlt
icebp
cmp
aad
sub
and
and
push
cwtl
jmp
fwait
js
loope
push
lret
or
sub
add
jp
dec
sub
xor
insb
movsb
out
cs
test
hlt
insb
rclb
mov
or
inc
mov
fildll
add
add
int3
ret
das
lret
leave
xchg
nop
pop
mov
je
in
adc
dec
pusha
or
cli
add
notb
jo
add
sub
into
ja
mov
fdivr
push
sub
ficoms
lods
xor
mov
pop
xor
xor
out
sar
sbb
fcoms
and
cmp
sahf
adc
xchg
sbb
jne
das
adc
mov
imull
pop
push
mov
lea
and
dec
and
dec
jmp
cwtl
add
xchg
add
sub
dec
sbb
fs
jae
lret
sub
in
icebp
mov
mov
cmp
push
and
mov
fwait
das
xchg
in
xchg
pusha
add
cld
loop
xchg
sub
ja
lret
push
out
paddw
sbb
inc
daa
pop
movsb
cli
and
jmp
dec
jg
rcrb
imul
cmp
cwtl
divl
rcrb
ret
sub
jns
addl
xchg
daa
mov
push
test
mov
fnstsw
ret
jnp
jge
repnz
mov
aas
xchg
ret
add
sub
clc
out
or
sarl
adc
sub
ds
inc
mov
xchg
insl
push
sbbl
arpl
daa
lods
cld
addr16
sbb
std
mov
jne
jge
or
sub
ja
in
mov
inc
or
add
push
jmp
cmp
jp
jle
pop
cld
xchg
or
xor
fcomps
mov
pop
and
or
add
mov
clc
sbb
pop
out
mov
jo
mov
and
sbb
or
mov
sub
cli
loopne
cmpl
adc
sbb
fninit
ss
bound
aam
mov
sbb
push
pop
sbb
sub
mov
les
adc
aad
mov
gs
subb
cmc
xchg
movsb
mov
pop
cmpsl
cmp
je
fistl
jl
xor
cmp
testl
enter
cmp
subl
jbe
xor
cmc
ror
cmc
sahf
inc
and
or
cmpb
testl
cmp
daa
mov
jmp
push
add
or
pop
stc
push
sub
inc
shrl
rcll
xchg
clc
rorl
mov
or
inc
dec
cli
xor
inc
mov
icebp
in
xor
and
jbe
popa
jno
adc
jno
xchg
mov
in
sbb
data16
mov
inc
sbb
sub
incb
cmp
adc
xchg
mov
mov
push
outsb
fcoms
je
xor
cmpsl
or
add
xor
test
adc
cmpsb
inc
or
xor
fiaddl
inc
gs
pusha
call
subl
es
pop
loopne
and
mov
and
lret
or
add
mov
test
mov
jnp
stos
in
jmp
mov
aam
dec
addr16
push
cmp
pop
or
mov
mov
outsb
mov
js
adc
pop
cmp
in
dec
nop
inc
movsb
hlt
xor
mov
ja
sub
inc
xchg
andb
repnz
jno
adc
ret
daa
scas
adc
icebp
fsub
fs
xor
inc
sbb
jo
push
inc
cmp
jno
call
ds
aas
insb
mov
jnp
dec
lcall
lahf
cwtl
push
gs
in
inc
ja
es
push
outsl
cltd
add
cmc
push
enter
pop
mov
aam
jo
push
xchg
stc
dec
push
out
cmp
inc
mov
sbb
leave
mov
mov
xchg
test
and
or
cli
xor
jp
loopne
shl
sub
ret
mov
cs
mov
int3
mov
and
cltd
cwtl
lock
ficoml
cmpsl
add
aam
add
test
es
cmpsb
mov
push
add
xchg
xchg
push
dec
test
popa
mov
test
out
jle,pt
add
mov
cmp
adc
sbb
cmp
test
xchg
in
cmp
push
xor
lahf
xchg
add
mov
dec
push
jg
insb
xchg
inc
mov
icebp
pop
or
fdivs
les
out
sahf
or
rcrb
out
push
pop
int3
dec
or
fs
outsl
repnz
xchg
in
lahf
inc
push
sub
stos
adc
std
add
dec
loopne
insl
xor
adc
icebp
dec
stos
outsb
inc
cltd
bnd
mov
mov
xchg
enter
insb
movsl
imul
sub
pop
addr16
lds
xchg
mov
movsl
fisttpll
ret
lods
arpl
pop
js
call
mov
popf
add
dec
pop
loope
loope
clc
dec
shr
inc
jg
inc
incb
in
cli
cmpsl
data16
arpl
enter
data16
or
jmp
stos
add
fldcw
sahf
jmp
fistpl
jmp
les
cs
movsb
in
test
inc
mov
pop
mov
iret
mov
aam
ret
pop
ror
adc
mov
xor
fdivrl
mov
mov
call
negb
mov
je
fucompp
dec
dec
dec
loopne
ret
ljmp
inc
ds
cmp
cmpsb
push
outsl
xor
pop
push
and
shrl
mov
cli
es
andb
test
js
inc
pop
loope
pop
mov
and
clc
stos
xor
lret
jp
shr
sub
outsb
xor
gs
or
mov
les
dec
xchg
pop
or
jbe
popf
inc
adc
jo
mov
mov
xlat
outsl
cli
xchg
jns
pop
push
bnd
popa
cmpsl
mov
sub
push
lds
mov
xchg
fsubrl
mov
out
imul
mov
add
mov
dec
fiadds
in
jl
loope
addr16
ljmp
push
sbb
stos
jne
jne
add
cmp
std
sub
jecxz
popl
mov
loope
fimull
fimuls
loopne
add
lods
mov
dec
into
cmpb
mov
cwtl
cmc
pop
push
mov
cmpsb
addb
xlat
cmp
or
xchg
fstps
and
xchg
cld
pop
sub
mov
pop
rcrb
mov
clc
pop
cwtl
xchg
xchg
cwtl
roll
mov
jnp
das
stos
ret
push
sbb
arpl
in
mov
ljmp
pop
jmp
jle
mov
aaa
push
xor
or
jo
outsb
dec
out
das
int
cmp
push
push
loop
mov
dec
js
mov
mov
iret
push
cmc
jecxz
fwait
sub
or
xchg
sub
out
inc
scas
adc
xor
cltd
dec
decb
in
push
adc
add
icebp
dec
pusha
movsl
mov
jae
add
aaa
xchg
lcall
ret
lds
jnp
insl
mov
cwtl
sbb
aam
rep
fldcw
stos
xchg
cmp
mov
or
fsts
mov
push
iret
hlt
and
add
xor
leave
jb
rcrl
cmc
imul
sub
mov
int
mov
bound
mov
and
mov
into
mov
lods
cmp
mov
jg
test
or
int
xor
in
movsb
sbb
scas
xchg
xchg
iret
mov
jmp
push
add
fstpt
shlb
xchg
ja,pt
mov
stos
int
outsb
xor
bound
jg
jbe
ljmp
ljmp
into
shrb
xorl
or
imul
mov
ss
pusha
push
cmp
jnp
mov
jb
mov
mov
inc
nop
mov
xlat
inc
fcomi
push
add
adc
out
sub
cmp
pop
icebp
dec
pop
jne
enter
pop
xchg
mov
xchg
sub
adc
jbe
outsl
mov
ret
pop
sub
xor
mov
cltd
sbb
push
mov
ja
test
std
lret
push
pop
cmp
xor
fwait
xchg
mov
add
call
push
mov
int
outsl
insb
leave
pop
xchg
lcall
pop
scas
int3
jle
push
cltd
sahf
xchg
in
pop
cltd
cmpsl
sub
dec
and
and
imul
push
pop
sbb
add
push
jae
fwait
stos
sbb
cmp
je
movsb
sbb
pop
test
add
inc
pop
stc
cmp
sti
cli
cmpsb
pop
test
pop
popa
movsl
pusha
loop
push
jmp
push
xor
and
arpl
loope
inc
test
mov
and
cmp
in
mov
data16
mov
sbb
inc
fstpt
outsl
int
adc
jg
cltd
movsl
sbb
xor
stos
push
es
sub
insl
add
xchg
dec
test
jg
xchg
dec
dec
cwtl
mov
stos
lret
jmp
sub
or
hlt
lds
fiadds
jo
jp
fbld
mov
jnp
push
sarb
mov
fs
test
pop
push
test
loope
fnsave
adc
shl
lods
insb
roll
jb
or
and
cmp
jmp
jno
mov
fadds
movsb
xchg
repnz
or
inc
dec
xchg
icebp
push
and
int
inc
imul
mov
or
ret
push
pop
enter
adc
orl
test
or
movsb
sbbl
dec
dec
mov
insb
fucomi
test
and
push
jle
dec
xchg
inc
test
xchg
les
xlat
addr16
roll
jno
inc
dec
repz
mov
rorb
push
push
xor
std
and
in
cmp
in
pop
lods
cmp
pop
or
sub
mov
lcall
std
mov
sub
mov
fsubrs
inc
xchg
into
int
sarl
pop
add
fcmovnb
and
pop
and
btr
pop
arpl
push
sub
jle
aad
mov
and
subb
mov
inc
sub
adc
dec
xor
mov
rcl
inc
lret
and
sbb
inc
std
mov
sahf
mov
int3
cmp
add
cmp
sbb
mov
cmp
jne
ret
sbb
mov
es
adc
fldenv
and
icebp
fistl
and
pop
mov
and
loope
shll
push
or
aaa
jg
int
sub
xchg
cwtl
mov
push
aad
or
clc
dec
testl
jb
fmull
or
addr16
mov
in
xlat
sbb
lret
pop
out
sbb
pop
popw
fisttpl
bound
not
push
int3
xor
xchg
xor
add
stc
out
mov
int
mov
lea
jno
decl
sbb
xchg
in
pusha
roll
shrl
cltd
mov
sbb
adc
rcrl
adc
cwtl
fs
loopne
pop
push
jmp
test
push
in
xchg
sbb
mov
gs
dec
fisubs
push
fidivrl
jmp
test
cltd
ja
inc
sub
out
xor
jno
loope
cmpsb
fdivr
xor
std
add
xchg
jbe
bound
call
jns
sbb
lret
mov
test
inc
mov
xchg
mov
mov
loope
les
stos
add
mov
filds
aas
movb
sti
push
mov
sbb
mov
pop
cmpsb
inc
and
add
orb
fadds
mov
and
popa
jns
movhps
dec
push
and
imul
jnp
aaa
adc
leave
cs
les
movaps
dec
xchg
js
fdivl
jb
outsb
pop
mov
cmpsb
inc
push
rclb
ss
push
lret
cs
rcll
or
loope
xor
push
es
adc
xchg
adc
xor
cmp
xchg
cmp
fmull
xor
lds
sahf
jbe
hlt
adc
adc
cmp
dec
test
add
xchg
out
clc
mov
push
fimuls
xlat
mov
nop
sbb
push
add
in
xor
and
cmp
jno
div
test
mov
rcrb
jno
push
addl
push
loope
imul
inc
sbb
cmp
lea
mov
push
daa
imul
mov
push
aas
test
push
lds
push
fldl
movsl
adc
jns
lret
das
repz
pop
mov
cld
cmp
cmc
clc
les
cmp
sbb
pop
jge
xor
and
sbb
int3
aad
sub
movsl
lret
xor
and
mov
sysret
mov
or
rclb
xor
adc
aam
inc
lock
int
cwtl
add
cmp
and
pop
pusha
rolb
ljmp
add
fbld
mov
xorl
sarl
add
push
ficomps
stos
movsb
fsubrs
mov
jg
movsb
dec
shrb
movsl
cmp
shrl
arpl
fwait
in
popf
loop
lret
pop
and
scas
xchg
adc
push
int
cld
adc
out
push
mov
aad
mov
mov
out
add
mov
outsl
nop
roll
fidivs
imul
mov
out
dec
fdivrl
repz
push
cwtl
or
jmp
and
das
sbb
jo
cli
inc
mov
dec
or
and
mov
mov
pop
ljmp
dec
adc
adc
and
out
and
or
sbb
scas
mov
jae
cmp
inc
xchg
or
movsl
adc
imul
jb
lea
xor
in
enter
in
jge
xchg
jecxz
sub
lods
cmpl
rcr
xor
out
cmpsl
jmp
mov
stos
dec
ja
push
dec
pop
dec
xchg
push
pop
lcall
cltd
addr16
or
ja
pop
sbb
mov
notl
loopne
shll
or
mov
add
add
push
fst
rorl
in
dec
xor
je
pop
in
mov
adcl
jae
mov
xchg
loopne
clc
cs
repnz
sub
in
jo
jmp
outsl
les
in
sbb
sbb
mov
fiadds
pushf
int
sbb
pop
out
dec
xchg
or
fiaddl
push
stos
je
xor
pop
loopne
in
cmpb
ja
and
inc
mov
lret
sti
sahf
ja
push
fdivrl
shrb
mov
mov
inc
mov
push
int3
jle
sarb
xchg
pop
outsb
mov
sub
pop
push
sti
adc
and
cmc
and
aad
xor
fst
push
mov
lret
push
mov
add
dec
aaa
outsl
out
or
cli
sub
aas
jno
scas
xor
mov
adc
adc
popa
stos
imul
mov
adcb
mov
cltd
jne
fisubl
jp
imul
stos
pop
out
icebp
daa
cmp
xchg
lcall
sub
daa
dec
jno
movsb
out
fiadds
and
lahf
mov
push
and
loope
lcall
mov
je
stos
je
push
jg
fcmovb
dec
shlb
or
xchg
aam
int
lds
test
arpl
shll
in
mov
loope
xorl
les
fisubl
jg
roll
outsb
sub
call
je
push
push
ret
fs
insb
push
mov
push
pop
sub
pop
mov
mov
shlb
and
movsb
mov
or
in
cmp
cmp
push
xchg
pop
xchg
shrl
lock
bound
loopne
gs
push
xchg
ret
pop
insb
sub
sbb
sub
out
push
mov
sub
and
int
sbb
xchg
out
inc
sub
jbe
push
jae
mov
es
into
jbe
xchg
movsl
jne
or
out
pop
jb
movsl
repnz
mov
jo
sahf
rcrb
cmp
lcall
cmp
test
jmp
mov
mov
jne
fwait
aaa
and
icebp
xor
mov
dec
cmpsb
jnp
xchg
cld
xor
fsubrl
jecxz
jae
pushf
xchg
mov
lcall
imulb
and
out
or
inc
push
mov
loopne
adc
ret
enter
xor
xchg
ljmp
mov
and
add
jge
stos
sbb
fs
xchg
stc
movsb
jle
push
pop
test
cmpsl
push
test
test
pusha
xor
sbb
sbb
fs
adc
je
cmp
dec
stos
pop
cld
ljmp
ja
or
fstpt
mov
mov
adc
xor
adc
ds
xchg
sub
mov
clc
ficoml
xor
loop
mov
hlt
push
sub
jno
push
dec
call
or
int
push
rorb
pop
push
into
xor
sti
scas
mov
stos
xor
sub
xchg
cli
or
cmp
lods
daa
jecxz
andl
out
push
and
aam
cmpsl
imul
in
add
mov
pushf
cli
aaa
inc
stos
or
jp
dec
or
mov
sub
mov
xchg
push
jnp
jmp
aas
test
mov
mov
xchg
jp
pusha
cs
pop
mov
or
push
hlt
mov
mov
push
rorb
lods
fnstsw
cmp
paddd
out
fdivrs
dec
stc
sbbl
mov
dec
and
mov
out
loope
cmpsb
cmp
sbb
mov
dec
pop
sbb
and
push
jp
cs
jb
mov
xchg
je
adc
jl
lods
dec
jns
inc
jge
insl
aad
jmp
movsl
add
movsb
mov
cld
insb
or
mov
xor
pop
sahf
and
cmp
mov
inc
pop
mov
js
inc
dec
sbb
cmp
je
lods
adc
xchg
dec
xor
lahf
inc
dec
adc
jnp
adc
xchg
jmp
into
lcall
sbbb
add
cmpsl
lcall
cmpsl
inc
loope
lods
pop
xchg
cli
xchg
adc
add
xchg
mov
or
or
xchg
mov
mov
push
mov
sub
mov
cmp
es
test
jns
dec
lret
adc
add
insl
fsubrs
jns
dec
mov
pusha
enter
mov
mov
fimuls
pop
mov
aad
and
jle
movsb
jecxz
mov
jmp
sahf
mov
sub
test
shlb
movl
jo
loopne
mov
xchg
sbbb
lahf
stc
mov
cmp
mov
ret
mov
cld
jl
shl
xchg
mov
cs
xor
sti
rolb
call
sub
inc
or
xor
adc
add
imull
ret
idivl
fstl
inc
ljmp
test
add
aaa
pushf
pop
sbbl
and
push
dec
cmp
ret
ds
pop
mov
mov
fwait
daa
insl
adc
jo
xchg
push
xchg
mov
clc
xor
sti
repnz
dec
hlt
repnz
outsb
test
pop
mov
push
pop
add
mov
sub
movsb
into
mov
push
sub
cmp
in
and
jecxz
lahf
dec
lock
push
out
pop
push
roll
cmp
in
mov
aas
jne
dec
jno
ret
push
jno
aad
add
xchg
cwtl
hlt
repnz
pusha
pusha
push
cwtl
sub
lods
into
mov
pop
dec
or
cmp
popa
cmc
and
loopne
inc
loope
mov
push
xor
scas
cmp
bswap
inc
loop
jnp
stos
aas
bound
mov
jnp
add
je
scas
pop
xor
push
shrb
movb
fcomps
xchg
sub
negl
inc
aad
add
mov
outsl
pop
shlb
dec
pop
jge
insb
sbb
and
jne
push
pop
cmp
xchg
cmpl
push
xchg
push
test
inc
cld
lods
stos
inc
imul
jnp
pop
andb
sbb
stc
mov
lea
xor
shrb
cmpsl
cld
xor
adc
sbb
jle
pop
xchg
in
rclb
add
fucom
and
lods
stc
lahf
out
fwait
adc
sub
inc
fstpl
arpl
xor
inc
push
shlb
push
testl
push
xchg
dec
adc
arpl
cwtl
dec
jmp
and
clc
lret
cmpsb
mov
mov
xor
mov
cmp
inc
lea
sub
mov
sub
popa
stc
mov
cmp
dec
test
ljmp
mov
adc
push
cmp
mull
inc
fcomp
popf
or
mov
dec
cs
push
sub
addr16
xor
rolb
add
jne
lret
jb
xchg
adc
sub
lods
and
sub
and
inc
xchg
and
sbb
inc
fwait
xchg
inc
inc
mov
jp
xchg
adc
xor
push
sbb
lods
outsl
bound
jb
dec
out
xchg
loopne
dec
mov
sub
cmp
mov
lods
je
mov
inc
inc
jecxz
pop
adc
mov
pop
fwait
jae
mov
push
and
ljmp
lahf
stos
into
lock
fucomp
xchg
lahf
or
xchg
ret
enter
inc
dec
ret
js
daa
xchg
test
dec
addr16
cwtl
add
cmp
notl
test
sub
adc
push
fcompl
repnz
test
das
push
pop
hlt
sbb
sub
leave
fldt
in
mov
in
fists
mov
in
mov
cmp
scas
shr
xchg
lds
orb
insl
jnp
popa
mov
jno
sti
push
sti
add
and
or
mov
push
jmp
pop
stos
aam
cmpsl
data16
mov
nop
push
jp
or
popf
sbb
xchg
push
mov
clc
mov
push
xor
cmp
pop
sti
jb
inc
and
js
ljmp
in
sub
jnp
xor
dec
mov
shll
std
insl
sub
imul
cmpb
push
rcll
cmp
ja
xchg
insl
fst
mov
pop
jbe
ret
add
pop
test
incl
push
daa
inc
pop
movsb
add
mov
adc
mov
xor
insb
mov
sub
mov
or
lcall
or
mov
push
rorl
into
adc
jg
outsb
or
nop
pusha
mov
jmp
mov
imulb
and
stc
jb
add
jno
hlt
enter
fidivs
aam
xlat
push
mov
fistl
mov
lods
jno
mov
hlt
cld
ret
leave
nop
mov
out
daa
mov
nop
or
fstpl
imul
lock
inc
inc
fldl
jmp
aad
xor
loopne
inc
ss
and
push
subl
xchg
enter
and
scas
xchg
shl
sar
xor
test
xor
repnz
fcmovb
movb
js
fisubrs
lds
add
in
and
inc
in
inc
jnp
push
pop
lret
cmp
fs
jge
sbb
rorb
loope
repnz
scas
xor
sub
dec
push
in
cmp
xor
mov
push
push
stc
mov
jg
inc
fiaddl
cltd
pop
pop
fcoms
lock
push
test
aam
sub
cmp
or
fcmove
and
ljmp
xchg
pop
icebp
cmp
cmc
pop
sbb
lods
in
adc
mov
xor
int3
mov
push
int
inc
mov
xor
ret
rolb
sbb
psubusb
xor
or
pop
aas
fcmove
inc
cmp
lahf
inc
lds
scas
mov
xchg
push
xor
loopne
lds
sub
fcmove
movq
push
mov
ljmp
dec
push
cmp
sub
cmp
sbb
popl
out
xor
cs
cmc
aaa
add
push
stos
xlat
jg
int3
mov
test
or
stos
les
mov
xchg
cmp
in
cs
xchg
cld
xchg
les
lret
fsubs
or
mov
in
jne
out
pop
nopl
int3
cmpsl
adc
jg
sbb
aas
lret
movsb
dec
inc
mov
lods
jp
dec
cmp
jo
into
in
fstps
sar
daa
xlat
or
cmp
xlat
cmpl
sbb
pop
loope
out
clc
lods
dec
push
mov
out
hlt
mov
cltd
stos
shrb
xchg
pop
fnstcw
inc
enter
rorb
cld
imul
or
bound
mov
jae
add
popf
dec
aaa
bound
dec
push
xor
int
jo
js
mov
pop
pop
jno
fldt
lcall
in
mov
mov
movsl
cmp
lret
imul
data16
es
cmp
imul
movsb
inc
leave
popf
divb
mov
jecxz
and
icebp
and
xor
rcrl
cmp
push
shrd
pop
bound
insl
xchg
dec
fdivr
aam
pop
or
mov
aad
add
orl
fcomps
adcb
pop
and
sbb
outsl
daa
idiv
out
popf
adc
push
sbb
ret
mov
sbb
repnz
cltd
int
xor
jae
or
inc
in
mov
aam
leave
stos
dec
inc
push
ljmp
mov
push
inc
data16
sub
lods
and
xchg
out
pop
mov
mov
mov
push
fs
pop
xor
mov
imul
stos
xchg
scas
fstps
les
mov
pop
shl
jno
imul
mov
pop
jp
adc
push
mov
push
sbb
inc
ret
loope
rcrb
push
pop
push
mov
js
ror
mov
xor
pop
or
jmp
or
test
test
xchg
inc
or
out
ja
mov
push
leave
mov
sbb
shlb
and
mov
test
push
cld
out
shl
test
xchg
cmp
loop
push
or
fnsave
xchg
xchg
mov
rclb
iret
popa
dec
lret
or
sbb
jle
je
push
cld
pop
les
sub
adc
ret
shll
cmovl
jb
mov
insl
outsl
arpl
js
mov
xchg
mov
mov
inc
push
inc
jo
add
std
and
aad
in
ret
shll
cli
in
xchg
mov
clc
and
jge
inc
mov
movsb
aas
fcompl
fmuls
cltd
jg
and
sub
sahf
adc
out
lods
mov
rolb
mov
mov
mov
sub
loope
loope
or
repnz
pushf
add
pop
or
push
lds
jle
sbb
fdiv
ss
out
sub
divl
test
inc
adc
adc
popf
dec
sbb
inc
inc
pop
or
jnp
cmpsb
cwtl
pop
pop
cmp
flds
sbbl
pop
mov
jecxz
jl
or
clc
into
cmp
sbb
adc
test
je
xor
pop
pop
xor
lods
xor
popa
xchg
dec
pop
pop
js
aaa
shll
pop
inc
mov
xor
je
and
mov
jb
dec
ror
inc
add
scas
pushf
call
hlt
outsb
fdivrl
cwtl
push
into
cltd
notl
imul
orb
dec
fdivr
addr16
mov
popf
xchg
int
add
outsb
and
mov
mov
fwait
xor
mov
insl
xor
ljmp
push
or
paddq
mov
mov
sarb
cli
push
jo
das
mov
dec
lahf
lods
incb
xchg
inc
ficoms
ss
mov
mov
dec
cmp
mov
cs
mov
sub
jg
mov
inc
movsb
cmpl
cmp
cltd
mov
clc
sti
push
sub
mov
xor
ja
xor
lcallw
outsl
mov
lock
out
xor
in
lahf
adcl
xor
mov
enter
into
pop
xchg
push
jb
loopne
xchg
es
hlt
inc
ficomps
push
dec
xchg
shr
loope
cmpsb
pop
mov
out
jno
dec
mov
mov
add
and
inc
aaa
loopne
mov
jno
lea
cmpsb
mov
adc
stc
push
push
das
adc
mov
jge
out
std
sub
inc
scas
xor
imul
xchg
cmp
mov
ror
xor
sub
cmp
stos
in
pop
int3
jmp
and
inc
stc
mov
mov
lcall
xor
ss
xor
fcompl
jns
popa
lahf
pop
jae
loopne
inc
dec
scas
lcall
leave
adc
outsb
pop
fisttps
or
shrl
jmp
add
lahf
ficomps
dec
pop
xor
adc
cmp
dec
shll
push
das
push
daa
inc
cmp
fwait
jmp
add
jmp
cli
mov
inc
push
mov
jmp
decb
or
cmpsl
and
mov
stos
pop
test
pop
out
je
rolb
ss
add
ret
push
jmp
sub
cli
sbb
std
pop
insb
mov
xchg
sub
jg
inc
pop
xor
imul
data16
movsb
in
push
sbb
pop
mov
mov
scas
xchg
add
sbb
mov
jg
fidivrl
xchg
mov
repnz
ja
inc
ret
scas
xchg
fdivl
fisubl
xor
pop
or
mov
sbb
pushf
int
jp
lock
jmp
mov
outsl
xor
mov
mov
imul
out
outsl
adc
lret
mov
jbe
jb
dec
in
loopne
addr16
jno
xlat
and
mov
push
xchg
xchg
cmp
test
outsl
pop
fwait
imul
stos
mov
stos
rolb
imul
lea
cld
cltd
pop
mov
add
scas
out
cwtl
sbb
insb
push
in
movsb
out
dec
push
adc
fisubl
xchg
in
jp
jp
push
pop
and
inc
popf
mov
pop
aas
jo
dec
push
mov
pop
inc
or
out
push
add
xchg
in
popa
jl
mov
aaa
push
adc
jge
fsub
das
pop
mov
pop
mov
mov
push
scas
lods
lea
sub
push
add
cmpsb
sahf
fs
and
push
out
lea
ss
fwait
xchg
push
inc
frstor
andl
lock
fwait
gs
icebp
shrb
push
inc
out
adc
out
and
pusha
cmp
mov
repnz
dec
dec
or
xchg
add
mov
int
data16
mov
pop
mov
xchg
sub
loope
in
test
pop
out
inc
xchg
sub
sbb
jg
lock
jmpw
dec
mov
stos
push
cld
dec
inc
fcoms
mov
pop
shll
xchg
data16
dec
pop
mov
ret
cmp
mov
test
cmp
jle
lcall
das
push
stos
cli
cmp
ud2
into
lods
adc
fists
or
mov
cmp
div
pop
in
mov
mov
xchg
arpl
mul
or
loop
test
mov
push
and
and
inc
push
hlt
mov
js
gs
jno
lahf
ja
mov
and
or
fsubs
adc
inc
dec
mov
gs
xor
or
inc
nop
adc
nop
jl
add
xchg
sbb
mov
xor
imul
jae
test
subb
std
cmp
add
push
in
js
jmp
movsl
incl
jp
test
cmpsl
stos
pushf
das
icebp
dec
ss
out
cmp
insb
insl
xchg
jae
cli
sub
xchg
aas
and
test
xchg
stos
sbb
insb
mov
mov
dec
data16
mov
mov
adc
mov
xor
movsl
and
aas
repz
and
std
sbb
cwtl
sbb
inc
ficoms
out
sbb
push
inc
test
inc
js
fimull
in
jle
arpl
inc
out
cmc
rcrb
jecxz
cmp
mov
in
xor
cmp
jg
and
sbb
mov
mov
and
repnz
imul
adc
push
es
out
pop
jns
pop
xor
icebp
xchg
xlat
aad
inc
gs
xchg
or
aad
add
or
sbb
jmp
inc
jecxz
push
fdiv
mov
mov
inc
push
mov
int
lods
stos
inc
jecxz
test
dec
xlat
or
pop
mov
jae
mov
out
pop
fcmove
xchg
incl
xchg
push
xchg
sub
and
leave
sbb
jg
sbb
mov
out
rclb
sti
push
xchg
or
push
jp
mov
fistpl
push
push
mov
ljmp
push
sbb
lea
mov
je
mov
hlt
mov
ds
add
lods
nop
mov
in
or
lahf
js
lret
mov
mov
jp
pop
add
push
jbe
cmp
out
push
mov
out
lods
dec
subl
dec
je
fs
push
jge
push
or
clc
popf
imul
iret
stos
popa
adc
lcall
fbld
into
punpckhbw
fidivrs
in
enter
inc
test
mov
in
dec
dec
xor
adc
jnp
stos
into
pop
xor
arpl
fisubrl
lods
mov
lahf
fiadds
in
cmp
push
xchg
cli
inc
pop
ror
adcb
nop
push
pop
mov
test
das
dec
aam
mov
rcr
into
jg
lret
xchg
mov
dec
lods
push
rcrl
insb
test
jge,pt
gs
pop
out
mov
hlt
fwait
in
ret
jecxz,pn
cmp
cmpsl
jge
mov
pop
cld
mov
mov
dec
loopne
add
lods
les
dec
cmc
sbb
cmpl
hlt
xlat
lahf
scas
lods
jge
sbb
mov
idivl
mov
sahf
push
xchg
sub
adc
rcll
mov
movsb
add
cmp
int3
repz
movsb
adc
mov
sbb
cmp
insb
gs
mov
repnz
mov
or
mov
aaa
lcall
inc
push
pop
mov
pop
push
sub
jg
fmuls
push
cmc
cmp
ljmp
sbb
movsb
clc
mov
and
scas
xor
fistps
mov
sub
mov
les
cli
lea
lret
aam
pop
cltd
sbb
cmp
cmpsb
sbb
movsl
sbb
shl
jmp
call
jmp
adc
dec
or
cli
and
sarl
sub
mov
out
xchg
test
jmp
mov
shrl
ljmp
push
and
popl
lret
aas
or
in
sbb
jmp
or
insl
inc
scas
mov
aas
lret
jecxz
negl
test
int3
inc
rorl
test
sahf
push
pop
sbb
scas
mov
cmpsb
or
xor
and
inc
test
dec
mov
mov
mov
insb
dec
xor
stos
shlb
mov
mov
lods
cwtl
push
cld
in
xchg
ss
lock
lret
push
xor
pop
mov
rcrb
inc
add
push
xor
mov
sbb
add
inc
fs
test
xor
shll
test
orl
loope
in
jg
push
adc
cmp
pop
pop
ds
push
aad
mov
fstp
nop
lret
sub
inc
sbb
cmpsl
out
enter
pop
ss
jne
inc
adc
xor
inc
xor
cmp
adc
subl
addr16
push
aas
fbld
pavgw
jge
jle
adcb
mov
jp
cmc
cltd
push
mov
pusha
pop
mov
push
inc
leave
sub
jnp
jp
jbe
add
xlat
in
call
xchg
aam
sti
pop
pop
movsb
jo
fnstcw
mov
jl
in
lea
jnp
lock
ja
pusha
pop
aas
jecxz
pop
dec
and
mov
adc
pop
and
icebp
in
inc
inc
scas
mov
push
ret
les
rorl
and
popf
dec
fidivrl
ljmp
gs
loop
sarl
sbb
cld
orl
icebp
fsts
loop
popa
mov
mov
movsb
ljmp
xchg
cld
fidivs
inc
outsb
loop
mov
gs
js
loop
shlb
mov
repz
rcr
push
shll
icebp
inc
aaa
dec
mov
mov
inc
mov
adc
aam
aaa
aam
push
mov
pop
jno
cli
inc
scas
adcb
std
lds
mov
hlt
and
sbb
add
jmp
add
xor
imul
push
push
xor
sahf
push
and
pop
jmp
dec
aaa
mov
and
sub
mov
jge
dec
inc
aas
mov
scas
xchg
xlat
sub
movsb
cwtl
mov
and
ss
mov
sahf
add
pop
call
rorl
jne
lds
aas
mull
add
adc
sahf
outsb
or
mov
cltd
mov
push
das
mov
xchg
cmc
and
in
push
jp
test
sub
add
mov
pop
ja
out
test
out
add
pushf
js
push
pop
mov
movl
std
ss
xchg
push
pop
sub
dec
in
mov
sub
iret
jns
ds
sub
popf
test
in
jb
sub
fstpt
enter
inc
call
dec
pop
mov
sbb
jne
adcl
xchg
and
inc
adc
imul
arpl
ss
out
pop
ljmp
arpl
and
imul
in
xorb
aad
lcall
jne
inc
push
gs
aas
repz
rolb
aad
jns
push
lea
jmp
pop
and
daa
bnd
jl
push
push
xchg
mov
dec
jbe
notl
shl
xchg
ja
sub
xchg
pop
mov
dec
repnz
dec
ret
push
jmp
pop
cmp
push
add
push
or
pushf
scas
mov
xor
nopl
mov
das
clc
movsb
scas
rclb
jb
dec
xor
push
add
mov
aas
and
aas
out
xchg
lods
inc
cltd
jl
cld
push
test
push
sbb
mov
sub
push
push
aam
and
jno
dec
sub
mov
inc
bnd
or
xchg
adc
loopne
fs
movsl
cmpsb
popf
or
pminub
gs
sbb
push
jge
mov
jle
incl
sub
test
call
mov
dec
and
test
subb
and
movsb
mov
das
int
dec
jl
cmp
stos
daa
fistpll
loop
cmc
or
inc
jmpw
inc
inc
int
das
or
or
pop
jno
push
ret
dec
sarb
das
cmc
shlb
mov
es
push
push
nop
daa
loopne
je
add
arpl
cmp
add
pop
or
mov
pop
cmpsb
or
in
ret
inc
es
fnstsw
test
inc
add
mov
sbb
sub
andb
cmc
insb
inc
and
adc
sub
out
incl
rcrl
leave
fsubrl
jmp
mov
fmuls
mov
sub
in
dec
jo
sbb
cli
je
or
aam
mov
out
jo
out
fildll
lret
or
aaa
add
cmp
mov
fwait
gs
pop
dec
adc
bound
inc
mov
in
aam
lods
mov
addb
subb
sbb
orl
out
in
sbb
mov
cmpsl
cli
mov
clc
pop
stos
arpl
imul
sub
push
loopne
or
ret
lahf
test
adc
push
arpl
btc
into
adc
loope
fwait
pop
mov
ds
mov
insb
nop
mov
sub
imul
mov
pop
mov
fs
pop
fistpl
sub
push
les
pop
rolb
cmpsl
xor
jns
test
jmp
add
pop
cmp
pop
and
add
lock
mov
stos
cmp
or
jbe
or
push
fisttps
inc
les
push
jne
sbbl
bound
mov
cld
loope
mov
stc
xchg
mov
jle
test
test
inc
in
xchg
push
or
push
or
cmp
xor
push
inc
pop
clc
mov
push
pop
and
jb
mov
jae
push
sbb
and
pop
dec
aaa
fs
mov
lods
pslld
adc
repnz
jae
mov
adc
cld
call
sbb
lods
fsubs
pop
cmpb
enter
push
sti
push
subl
or
xor
xor
dec
lds
stos
mov
lods
add
test
push
stos
add
scas
popa
std
lret
sub
jge
xor
mov
shll
dec
mov
fwait
add
pop
lods
sub
mov
mov
cmp
inc
jno
and
xor
and
das
push
pop
cmp
fisubs
adc
dec
js
push
add
pop
push
test
inc
sub
cmc
push
push
adc
cs
xlat
cmpsl
loope
negl
jae
ljmp
add
inc
xlat
cmpsl
cmp
jle
sub
testl
inc
popf
lea
movsl
mov
push
mov
jp
sub
popf
xchg
sbb
imul
jb
fwait
and
das
inc
xchg
shr
add
cwtl
cmc
ja
inc
scas
mov
leave
arpl
outsl
insl
cmc
xor
fwait
repnz
xor
push
jnp
mov
hlt
sub
outsb
pop
aam
stc
divb
or
sbb
mov
and
add
push
out
icebp
jmp
fcmovbe
cmpb
shll
fsts
shrb
mov
pop
into
cwtl
add
fimuls
fs
sbb
dec
aaa
addr16
imul
xor
jg
xor
xchg
iret
add
aam
and
mov
pop
lcall
inc
insb
push
jg
ret
mov
cmpsb
add
or
pusha
jnp
sub
or
jno
into
push
stos
pop
stos
and
out
ret
dec
negb
lods
rclb
pop
push
hlt
sbb
add
lock
inc
inc
std
sbb
aas
sti
loope,pn
sbb
pop
adc
daa
pinsrw
pop
lcall
and
cmp
fnstsw
sub
push
shrb
jno
cmp
leave
popf
dec
xlat
fmul
out
fs
movsb
lret
lcall
push
push
aas
ds
fnstenv
add
cmc
adc
xchg
or
adc
and
loope
in
inc
xor
inc
dec
inc
mov
ret
nop
inc
pop
mov
sbb
insl
popf
aam
jo
fwait
push
xchg
xor
jmp
cmp
aad
jb
push
push
and
out
mov
enter
push
rcr
lahf
mov
and
add
lods
mov
bound
xchg
pop
es
add
jns
or
outsl
push
and
jae
fsubr
out
shlb
gs
xor
add
daa
pop
pushf
jnp
lea
mov
sub
in
or
xchg
dec
ret
jge
cmp
jnp
insb
xchg
aam
insl
movsb
sub
xchg
call
mov
or
xchg
pop
push
xlat
sub
mov
call
adc
aad
hlt
xchg
mov
push
xchg
test
mov
dec
je
fidivl
fs
inc
pop
xchg
out
sub
adc
add
adc
and
es
push
or
movsl
stos
sub
inc
adc
mov
push
mov
mov
dec
cmc
pop
xor
repnz
sbb
aad
mov
adc
xchg
addr16
outsl
cmc
push
push
fsubl
adc
rorb
notb
adc
mov
push
xchg
shlb
fdivrs
nop
popf
iret
sbb
cmp
sub
xchg
sub
lret
push
adc
sbb
fmuls
xor
jle
dec
les
jg
aam
and
inc
push
cmc
cwtl
loope
and
xor
add
fcmove
mov
xor
ljmp
push
inc
ds
es
imul
mov
inc
jbe
out
addr16
sub
fs
or
add
push
mov
shl
in
cmp
in
or
fimull
dec
daa
call
lahf
popf
jnp
addl
das
push
xchg
popf
data16
adc
sbb
mov
adc
jo
or
sbb
or
lds
cmp
lcall
int
pusha
imul
hlt
leave
or
arpl
and
fs
push
pop
pushf
je
inc
repz
mov
adc
dec
clc
notb
loopne
dec
xchg
mov
sbb
sarb
xlat
andl
shl
or
pusha
sbb
test
add
out
mov
sub
mov
insb
xor
mov
and
sahf
sub
shrl
pushf
cmp
push
scas
in
mov
cwtl
pop
xor
pop
cmc
adc
jp
dec
or
adc
popa
mov
xchg
scas
sbb
sub
sbb
push
or
dec
fmull
sub
mov
das
gs
iret
iret
push
sbb
out
xchg
popa
mov
sub
dec
xchg
sti
clc
ficoms
fwait
aam
arpl
xor
adc
dec
loope
fs
add
outsb
pop
xchg
cs
xorl
mov
pop
xchg
repz
cwtl
xchg
jecxz
cld
jbe
sahf
test
aas
push
pop
pop
fcompl
sbb
ds
push
shrb
cmp
push
adc
mov
cltd
mov
pop
pop
dec
in
sbb
adc
lock
fs
orl
add
mov
xchg
dec
ret
xor
cmpsl
cltd
repz
xchg
fucomi
call
push
sub
aaa
inc
out
and
or
sbb
or
pop
data16
imul
gs
mov
jno
fmull
jmp
out
cmp
inc
adc
push
xchg
or
mov
es
insb
mov
mov
jp
push
xchg
xor
cmp
adc
or
inc
movsb
push
shll
roll
sub
xor
mov
bound
shll
xchg
xor
out
jl
xlat
mov
out
mov
push
ljmp
fmuls
pop
sarl
lods
push
mov
in
cmpl
aad
fsubrs
mov
or
in
out
repnz
out
sub
in
fldenv
cmp
or
aas
stos
jle
push
inc
scas
dec
es
lock
cmp
outsl
sahf
fldenv
inc
or
fisubl
cmp
dec
inc
fistpl
xchg
xchg
jb
or
imul
test
lcall
outsb
out
sbb
mov
fxch
shll
lret
and
add
sbb
add
inc
aaa
les
adc
push
push
push
rep
inc
std
popf
cli
ffreep
jns
pusha
xchg
fcomps
dec
enter
or
shll
iret
inc
scas
lds
shl
cmpsb
add
jl
and
mov
out
pop
popf
std
ljmp
push
sahf
or
mov
lret
xor
adc
mov
push
jo
sbb
mov
mov
fistpl
inc
repz
jecxz
out
nop
mov
dec
es
aam
mov
xchg
jno
fwait
fstpt
mov
cmp
add
je
cmp
adc
cmc
ljmp
test
test
dec
test
sbb
cmpl
pop
data16
jo
pop
jmp
pop
jnp
pop
cmpsl
jbe
and
lret
cmp
imul
pop
mov
test
add
push
add
aaa
xlat
mov
sti
test
bound
fsubl
cmpb
push
sarb
cli
enter
inc
dec
mov
jo
pop
cmc
push
fdivrl
sahf
data16
fidivs
lahf
sub
repz
xchg
jo
mov
das
adc
mov
xchg
push
add
jno
test
mov
cltd
sub
push
in
sbb
arpl
inc
inc
xchg
cmp
in
lret
xor
inc
stos
je
ds
repnz
out
inc
adc
sub
push
test
sti
icebp
lret
and
sti
adc
fadds
pop
inc
sub
sbb
imul
int
sbb
popf
xchg
pop
call
push
ficomps
and
adc
jmp
inc
test
daa
push
xchg
movsl
xor
fisubrl
outsb
and
push
cmpsl
outsb
mov
std
mov
xchg
fisttpll
cmpsb
data16
inc
test
jns
test
scas
aas
lds
sbb
insl
lea
cmp
xchg
mov
stc
into
xchg
incl
and
mov
test
xor
pop
mov
and
or
inc
inc
decb
jle
fstpt
mov
mov
out
negl
xor
fistps
jle
int3
mov
sub
sub
mov
xchg
aaa
jg
pop
xor
inc
xchg
loope
cmp
mov
movsl
mov
xchg
and
xchg
ror
js
pop
aam
shll
cmpsb
es
cmp
adc
inc
jg
stos
dec
mov
scas
iret
mov
mov
es
mov
add
jge
insb
push
jg
fxch
int
jle
xor
sub
idivb
arpl
push
add
xchg
lods
sub
imul
jnp
movsl
sar
leave
ja
xchg
xchg
sar
push
add
ret
mov
sahf
inc
pusha
nop
pop
icebp
xchg
aaa
cs
rorb
push
jle
sarb
divl
lds
rcl
jo
icebp
shrb
jbe
push
pop
sub
mov
pop
loop
and
push
repnz
or
push
push
scas
xor
hlt
xor
jge
out
in
and
out
popa
pop
sbb
jl
push
push
sar
pop
lret
lock
pop
xchg
inc
sub
mov
out
dec
fisttpl
ds
adc
ljmp
in
ret
data16
jno
mov
cmp
xor
sub
ja
sub
fstpt
push
loop
imul
lock
xchg
sub
and
sahf
mov
mov
mov
in
push
push
idivl
mov
cs
es
insb
aaa
arpl
mov
inc
out
inc
sub
mov
lods
or
decb
lods
adc
jae
es
pop
mov
aaa
jp
cs
aas
aas
lcall
cmpsl
xor
hlt
int3
jns
cli
push
pop
ret
rep
xor
fdiv
imul
sub
test
jecxz
and
notl
imul
jmp
push
pop
outsb
sbb
scas
pop
aas
and
xchg
mov
pop
jle
inc
lock
inc
andb
stos
sbb
lea
sbb
jg
adc
in
pop
mov
stos
stc
daa
popa
xchg
mov
leave
dec
lahf
stos
cmpsl
xor
int
cmp
xchg
lock
dec
lret
and
xor
jno
jno
divl
aaa
dec
add
pusha
sbb
jle
call
insb
pop
mov
sti
or
fdivs
adcb
addl
mov
aas
xor
mov
push
mov
repnz
sub
stos
inc
insb
out
cmpsl
sbb
jle
pop
or
daa
packuswb
mov
stos
rcrb
dec
das
dec
mov
enter
ds
mov
sub
daa
sti
pusha
jno
iret
out
add
mov
pop
orl
popa
pcmpgtw
jae
sbb
and
rcrb
ffree
mov
mov
lods
les
dec
inc
jle
stos
cmp
cmp
mov
pop
fistps
mov
decl
jmp
mov
fildll
pop
das
mov
iret
xlat
popl
add
imulb
lock
imul
fidivl
cmpsl
lahf
mov
cmp
icebp
mov
sbbb
cmp
dec
aam
and
insl
cmp
js
or
mov
cld
xchg
stos
and
arpl
add
pop
and
mov
push
das
adc
jnp
das
fbld
loop
inc
and
sbb
adc
test
xchg
imul
push
xchg
add
inc
pop
imul
pop
fwait
jecxz
loope
cmp
lcall
jne
gs
mov
in
int3
loopne
daa
cmp
xchg
rcrl
ljmp
adc
cwtl
and
test
mov
loop
sub
xor
push
roll
lods
xor
mov
jge
or
stos
jo
jno
adc
call
std
js
fcom
pop
daa
loopne
shll
jns
sahf
pop
pop
push
inc
jbe
loopne
push
nop
call
repnz
pop
in
outsl
lea
test
xor
pop
pushf
xor
sbb
jnp
leave
outsb
sbb
lret
mov
xchg
cmp
out
and
std
jo
xor
lds
mov
imul
dec
test
scas
fwait
push
fadds
or
gs
subl
pop
out
insl
cmpsl
data16
jbe
ss
idivl
add
pop
jmp
fcmovb
mov
xchg
pop
test
out
mov
xchg
lahf
jnp
in
pusha
jae
das
mov
lds
arpl
push
xchg
aad
sbb
stos
das
sub
inc
xchg
fistps
pusha
sub
mov
in
jecxz
push
fildll
bound
push
andb
add
push
std
push
hlt
ljmp
aam
iret
lret
mov
bnd
xchg
clc
dec
sarb
sbb
lret
cmpsb
xlat
leave
lcall
jmp
or
dec
out
sub
test
test
jno
push
cmp
push
jp
jecxz
inc
sbb
cli
cmp
mov
mov
mov
sar
stc
std
push
rcll
fcmovne
fiaddl
mov
sahf
jmp
outsl
jle
sub
ss
fs
cmp
leave
iret
mov
cmp
pop
repz
xchg
test
pop
lret
or
test
inc
mov
add
inc
out
xchg
jge
inc
mov
push
sbb
pop
ja
call
cs
scas
jecxz
pop
clc
push
dec
mov
mov
test
xor
adc
andl
pop
test
push
jne
push
xchg
xor
fstps
lret
inc
xor
cli
inc
xor
push
or
pushf
stos
mov
sub
call
push
pusha
nop
adc
dec
js
jl
test
mov
fwait
and
sti
fldt
out
adc
repnz
sbb
imul
lods
add
in
cli
std
in
mov
andb
mov
add
xchg
enter
icebp
xor
pop
lcall
and
fwait
jns
faddl
cmp
stos
jle
mov
push
jp
fcompl
ljmp
cmc
adc
adc
and
push
sbb
push
push
jnp
sbb
loope
in
popa
stc
or
dec
fnsave
and
sbb
or
dec
aad
push
popf
xor
and
xor
jmp
mov
cs
jg
push
in
negb
inc
repz
out
fsts
pop
inc
es
loopne
gs
movsb
scas
and
pop
out
push
or
xor
push
pop
mov
lock
xchg
jge
clc
adc
xchg
cli
scas
pusha
ret
popa
lret
lret
test
cmpsb
cmc
cmp
push
pop
xchg
jg
jb
mov
inc
mov
adc
xor
leave
jns
stos
cmp
cmp
scas
rcll
clc
stos
ret
out
mov
mov
xchg
mov
sbb
pop
popa
xor
cs
dec
mov
popf
pop
cs
xorb
test
test
inc
push
xor
mov
mov
test
subl
addb
or
pop
push
scas
fmul
ret
call
sub
adc
nop
xor
push
sub
xor
lahf
in
push
sbb
xchg
pushf
jo
sbb
cmp
rorl
pop
test
aad
test
out
push
ficomps
enter
add
xchg
out
lods
xchg
jl
push
scas
addr16
push
mov
sub
sbb
ror
ds
xchg
adc
sub
jg
xchg
dec
aam
mov
ret
pop
or
les
push
push
pushw
push
bound
enter
mov
orb
pmaxub
sub
dec
rcrb
mov
into
mov
adc
popf
xchg
sub
dec
sub
inc
push
pushf
inc
push
ljmp
inc
movsb
aaa
jo
ret
test
stos
cmpsl
fimuls
pusha
mov
es
lahf
cmc
dec
hlt
inc
sbb
dec
mov
dec
sbb
jnp
pusha
insb
sub
fstpl
stc
push
cmp
cmp
xor
inc
shrl
cli
out
dec
or
jecxz
stos
and
inc
sub
adc
das
adc
cmpsl
aas
dec
loop
imul
sub
push
mov
push
out
repz
cs
jl
fs
test
out
out
fwait
icebp
leave
int3
dec
push
mov
in
insb
mov
mov
insb
mov
out
pop
fucomp
pop
and
or
ss
jno
pop
cmp
or
mov
sbb
push
inc
lock
out
pop
out
data16
cmp
xorl
jmp
dec
pop
inc
leave
jnp
mov
add
out
insb
orl
mov
pop
aas
inc
lock
jecxz
jo
inc
pop
ret
push
lea
rclb
shll
sub
mov
mov
sbb
pop
sbb
jl
ucomiss
test
fwait
enter
shll
cwtl
dec
cmpsb
sub
fwait
jl
adc
pop
lret
cmpsl
add
and
arpl
jns
lea
in
repnz
mov
add
pop
and
push
and
or
push
sbb
inc
sub
out
dec
insb
fcmovbe
inc
sub
sbb
mov
push
loopne
shlb
gs
jns
fmull
inc
and
stos
push
out
lret
sub
or
inc
cmc
imulb
mov
push
fcomps
inc
ret
xchg
icebp
xchg
push
xchg
call
out
or
sbbb
push
out
shll
jno
pop
test
in
sub
lret
pop
xor
dec
data16
fimull
push
push
push
xchg
and
mov
pop
iret
into
sbbb
xchg
jecxz
out
clc
and
inc
mov
lret
in
movsl
or
daa
stc
xchg
add
dec
cmpsl
and
loopne
std
ss
and
push
into
test
inc
adc
dec
into
inc
xchg
mov
add
pop
sbb
jp
push
mov
dec
push
enter
inc
pop
test
stc
shll
mov
icebp
mov
pop
pop
lahf
jmp
pop
sbb
and
mov
aad
pop
cli
imul
pop
xchg
xchg
xchg
cltd
shll
cmp
mov
pop
lahf
mov
out
and
andl
daa
jle
push
fst
sub
out
icebp
arpl
hlt
and
sbb
mov
push
jle
push
dec
or
test
fisubrl
pop
and
or
arpl
add
mov
lret
or
shrl
call
sbb
les
inc
stos
inc
push
mov
into
fwait
aad
dec
or
mov
es
mov
in
xor
mov
xchg
repz
subl
add
and
mov
test
mov
out
sar
push
test
addr16
mov
fwait
jmp
sbb
jp
les
sub
adc
jp
sbb
test
push
in
and
into
and
mov
fwait
mov
das
xor
cmp
jb
mov
gs
popf
movsb
cmp
pop
fidivrs
fimuls
inc
mov
jp
cwtl
inc
jbe
dec
cmp
xchg
mov
imul
lods
test
or
sbb
and
stc
ret
ret
fucom
dec
test
sbb
inc
hlt
push
or
push
or
cmpsl
dec
dec
sub
or
outsb
rcrb
xor
ret
jnp
pop
xor
pop
aad
fidivl
mov
out
mov
and
cmp
push
cmc
mov
mov
hlt
add
xchg
xlat
xor
mov
imul
dec
aaa
int3
push
dec
test
inc
leave
push
or
js
popf
mov
dec
add
lcall
or
pop
pop
mov
dec
inc
jmp
cwtl
mov
je
sub
mov
adc
bnd
movsb
mov
je
int
sub
popa
adc
mull
andb
dec
inc
nop
test
rorb
push
stc
pushl
mov
addl
outsb
in
fs
addr16
clc
cmpsl
xchg
jbe
adc
in
popf
xchg
mov
mov
ror
xor
stos
sahf
mov
lret
push
in
test
in
cmp
inc
add
sbb
dec
shrb
iret
sub
cwtl
xchg
insl
cmp
pop
popl
mov
out
mov
push
test
dec
ja
loope
xchg
add
inc
mov
sbb
jbe
test
shl
pop
xor
cmp
xor
xchg
dec
imul
dec
jp
std
push
adc
and
xchg
or
and
jecxz
cmp
fwait
and
or
ds
mov
je
dec
fsubs
pop
pop
jb
xchg
inc
xchg
dec
jmp
mov
mov
stc
jg
pop
push
ja
xchg
mov
cli
jb
cld
mov
inc
test
xchg
cwtl
mov
aaa
xlat
or
stc
pop
shll
aam
adc
les
sarl
xchg
mov
ds
sub
mov
mov
sbb
jmp
stos
mov
jo
lods
jnp
iret
ljmp
leave
pop
cmpsl
out
cmp
push
inc
enter
xchg
inc
mov
and
je
xchg
popa
jb
pop
in
add
add
add
stc
stos
xchg
stos
call
adc
lods
xor
jp
int3
or
stc
push
sbb
lods
test
cmp
xchg
cmpsl
fs
push
push
sbb
loope
push
cli
push
es
insl
inc
fstps
mov
or
rol
daa
inc
inc
lods
dec
mov
inc
in
jbe
loope
mov
lcall
xlat
sbb
scas
mov
int
aas
out
dec
fidivrl
or
push
psubd
mov
cld
in
add
int
inc
imul
mov
je
cs
lcall
out
xchg
icebp
push
inc
cmp
mov
adc
adc
popa
xchg
sub
mov
into
lds
cs
clc
push
pop
imul
repnz
fwait
lahf
or
mov
mov
stc
rcll
push
mov
je
add
mull
pusha
out
fldenv
sub
and
dec
cmp
mov
adc
bound
sbb
pop
adc
xor
cmp
xchg
iret
inc
push
stc
mov
mov
sahf
sub
jge
inc
fadds
dec
imul
dec
sub
sub
int
cld
call
and
inc
in
jb
sbb
pop
jo
ss
push
xchg
or
in
scas
xchg
mov
push
subl
ja
cs
inc
imul
inc
sbb
inc
xchg
xorl
dec
mov
sub
into
sbb
imul
pusha
or
lock
rcrb
js
mov
mov
jne
inc
sbb
sbb
mov
enter
or
cli
pushfw
xorb
xor
lds
repz
sub
add
stos
rorl
leave
fnstsw
les
and
test
push
int
int3
imul
mov
and
insl
mov
int
and
ja
and
outsb
lds
push
xchg
sub
and
adc
or
out
or
inc
fidivrs
mov
jp
lea
out
mov
ss
push
push
sbbb
mov
pop
mov
adc
mov
out
ja
mov
push
stc
sub
mov
and
lods
dec
jmp
cld
idivb
dec
jb
ds
fmulp
lcall
mov
idiv
stc
test
imul
push
sti
push
xchg
xor
gs
in
ljmp
sub
adc
or
add
repnz
mov
ret
mov
mov
lahf
adc
int3
mov
gs
mov
xchg
sarb
mov
outsb
repz
mov
jg
ja
jns
mov
mov
xlat
xlat
outsl
and
xor
pop
adc
stc
cmpsl
test
mov
adc
pop
test
add
push
ret
cli
push
pop
mov
in
xchg
adc
std
push
adc
jb
shll
inc
fxam
testl
aaa
rcrl
popa
data16
popf
addr16
mov
push
aaa
mov
in
test
stos
arpl
fs
mov
lods
mov
in
rcrb
and
popf
or
sbb
inc
xchg
push
jp
rcrl
icebp
into
nop
out
jecxz
jg
imul
clc
fcmovu
and
mov
shlb
xor
xchg
sarl
shl
pop
nop
push
shll
lods
xchg
test
jmp
mov
pop
jbe
lret
movsl
es
mov
sbb
mov
add
es
pushf
pop
popf
jp
adc
pop
adc
adc
mov
popf
or
outsl
mov
scas
xor
adc
xlat
cmp
sbb
jno
pop
mov
mov
xor
jb
and
lock
pop
dec
sub
ficompl
testl
dec
mov
inc
cmpb
dec
js
mov
inc
pushf
bound
cmpl
jno
lds
dec
jb
jns
or
push
mov
xor
popf
cmp
cmp
inc
rcrb
pop
and
pop
and
inc
hlt
sub
cmc
push
in
jo
jbe
cs
jne
divl
stos
aam
sub
or
in
and
outsl
loope
cmp
add
in
icebp
into
cwtl
out
jecxz
lret
mov
pop
mov
push
mov
mov
imul
or
inc
dec
xchg
nop
hlt
or
cld
popa
das
push
cld
nop
pop
push
adc
pop
inc
sbb
inc
sub
add
hlt
mov
stos
dec
pop
loop
and
pusha
dec
add
loop
push
movsb
es
xor
xor
sub
imul
aam
cmp
out
push
repnz
add
lods
sub
cmp
fistpl
sti
iret
outsb
mov
in
cmp
mov
int
push
fs
into
sbb
xorb
incl
add
fldl
xchg
aaa
pop
negl
pusha
push
cmp
aam
inc
push
sub
jp
das
dec
adc
sbb
adc
sbb
cmp
jp
cld
or
or
inc
xor
popa
popa
lret
std
mov
sub
xchg
or
push
mov
and
stos
dec
cs
mov
gs
and
lcall
add
rorl
cwtl
sub
jg
adc
ffreep
lods
xor
stos
pop
lret
pop
fldenv
xchg
xor
jmp
fildl
dec
aam
idivb
je
inc
sbb
ret
add
gs
cs
das
pop
jno
inc
and
ja
pop
test
push
add
call
loop
popf
xor
out
out
imul
call
imul
jbe
subb
jle
or
pusha
pop
fsubrs
pop
pop
jmp
jno
scas
stos
mov
xor
xor
fwait
add
mov
xlat
jl
mov
or
mov
mov
mov
fsqrt
fnsave
mov
pop
xchg
add
mov
push
fisttpl
stos
cld
pop
and
out
fadds
mov
jp
xchg
mov
push
aad
xchg
pushf
adc
aam
mov
hlt
stos
mov
mov
cmp
xchg
jb
jnp
test
mov
push
jl
outsb
pop
fsubrp
in
mov
stc
ja
jne
push
inc
add
fwait
ret
and
arpl
shlb
iret
push
dec
lds
std
std
pop
mov
test
arpl
sbb
sarb
ja
sub
daa
iret
push
pop
imul
les
jle
cli
enter
mov
mov
xlat
movsb
jae
mov
mov
rclb
mov
and
je
and
and
test
pushf
xchg
pop
shlb
call
gs
pop
int3
add
sub
add
inc
in
pop
aam
push
mov
popa
in
xchg
idiv
push
adc
aaa
ja
jmp
mov
shl
mov
fidivrs
pop
fnstsw
in
addb
mov
jae
sub
push
add
stc
outsb
mov
fistpl
cmpsl
inc
xchg
jl
adc
mov
mov
mov
lahf
test
idiv
test
addr16
cwtl
fisttpll
pop
insl
out
jnp
pop
sbb
in
sti
sub
fs
xchg
xchg
icebp
jp
mov
xchg
xchg
mov
push
push
dec
insb
scas
rep
or
dec
cmp
nop
mov
popf
push
dec
arpl
in
dec
xchg
rcrl
pop
or
and
out
dec
mov
xor
jae
popf
and
push
movsb
xchg
jmp
pop
adcl
or
outsl
jle
and
push
jl
jle
or
mov
aas
add
cmc
pop
mov
pop
insb
pushf
jp
idivb
lods
insl
push
call
jb
jae
mov
cs
ljmp
aad
rcrl
cli
and
cli
cmpsb
fidivl
mov
push
add
xor
cld
pop
sbb
pop
psraw
inc
jb
pushf
mov
inc
dec
mov
xchg
sub
xor
shrl
lea
push
in
xchg
mov
pusha
jb
imul
fidivrl
subb
sub
xchg
aaa
test
dec
fwait
cmp
int3
out
jmp
sbb
ds
xlat
movsb
pop
xor
aas
imul
dec
mov
sub
popf
xor
and
rorb
rolb
insl
aam
cltd
dec
inc
jb
push
mov
xchg
inc
ret
scas
cwtl
push
pop
or
xchg
push
pop
or
cmpsl
fisubs
xlat
enter
mov
clc
outsb
mov
fisubl
jae
pop
jbe
in
adc
int3
add
xchg
xchg
sbb
xchg
cmp
xchg
test
jb
inc
dec
jo
jne
movsl
jmp
les
or
and
sbb
pop
adc
sub
loope
gs
outsb
data16
ret
nop
addr16
xchg
dec
sbb
cmp
jns
jecxz
daa
cltd
insl
inc
cli
arpl
lds
jecxz
imul
adc
sbb
lret
daa
lods
cld
xlat
inc
idivb
sub
lahf
ss
pusha
test
int3
int3
mov
sarb
or
cmp
jecxz
pop
fwait
mov
adc
aaa
hlt
fadd
test
cmp
and
add
imul
sub
outsb
movsl
lods
loopne
or
lds
in
std
ds
jo
push
dec
jnp
jmp
icebp
xor
sbb
movsl
jmp
and
enter
mov
pusha
jg
and
rcrl
arpl
mov
pminsw
xchg
out
cmpsb
push
adc
fistl
aas
inc
jne
mov
mov
cmpsb
cli
xor
fwait
jne
cmc
imul
lahf
jmp
adc
stos
test
jo
mov
insl
cmpsb
push
sti
out
xchg
and
push
xlat
testl
or
ds
add
scas
add
movsb
adc
les
mov
jp
xchg
bound
jae
clc
je
dec
push
fwait
into
cmp
add
cmpsb
jecxz
sbb
test
add
push
mov
imul
push
mov
adc
push
test
ret
sbb
sbb
loop
jne
sub
xor
mov
dec
push
cwtl
sub
scas
xchg
or
or
lods
sub
pop
inc
or
subb
call
pop
add
push
out
jb
loopne
mov
mov
icebp
fistl
xlat
xchg
mov
lret
es
or
or
mov
jg
pop
add
push
lea
sahf
adc
pop
and
mov
sbb
aad
mov
sbb
lods
mov
fstps
lret
add
aad
insl
in
sub
mov
fnop
push
xchg
and
test
rorb
lcall
sbb
arpl
inc
daa
jecxz
mov
and
stos
pop
adc
push
out
push
outsb
loope
mov
das
jp,pt
test
mov
cltd
nop
jge
xchg
xlat
push
mov
imul
repz
sbb
mov
push
test
jecxz
xchg
sub
stos
mov
bt
pop
into
daa
xor
push
xor
dec
push
shrl
dec
xor
xor
and
and
adc
test
inc
and
out
mov
or
jg
in
xchg
inc
mov
jne
mov
adc
sub
sub
enter
jmp
cmpsl
rcrl
mov
js
repnz
pop
movsb
lahf
sub
xchg
lock
add
outsb
mov
push
push
jecxz
and
xchg
stos
mov
jecxz
sub
push
mov
cmp
lods
add
mov
lret
inc
jg
jecxz
sub
mov
push
stos
popa
adc
mov
test
pop
add
xchg
cmp
fdivl
mov
sub
iret
sbb
fldenv
fsts
les
shlb
insl
pop
lcall
mov
outsb
dec
imul
lods
and
inc
jmp
js
add
sub
sub
cmp
push
fisttpll
into
negl
mov
lahf
loop
xchg
xchg
pop
orb
je
insb
sahf
xchg
cmp
pushf
inc
adc
cmp
dec
push
push
xor
mov
mov
popf
mov
stos
xchg
outsb
push
ljmp
push
mov
cmp
and
mov
popf
into
inc
add
ds
mov
or
adc
mov
mov
xor
mov
dec
or
insb
js
nop
and
mov
jg
mov
rolb
mov
dec
in
and
lods
cmpsb
jle
stos
jno
addr16
ret
ds
mov
push
xor
pop
mov
jp
mov
push
arpl
out
test
outsb
jle
mov
inc
ljmp
int
xor
jge
es
xchg
add
jo
lret
push
mov
sub
push
xchg
je
shll
stos
out
fcoml
aad
in
stc
ss
out
dec
inc
ret
push
sub
nop
push
cmp
pop
cmpb
push
sub
mov
sub
jmp
or
jle
xchg
adcb
xlat
mov
subl
add
gs
push
inc
mov
push
call
movsl
frstor
dec
fs
in
xor
xchg
or
iret
push
and
mov
mov
cmp
push
or
fs
cmp
movsl
cmpsl
sbb
mov
mov
xchg
inc
pop
lea
xchg
sub
mov
push
scas
dec
nop
mov
inc
cmpsb
leave
loope
out
std
in
adc
fstps
adc
mov
dec
mov
ds
shrl
into
pop
lcall
pop
leave
fcompl
pop
jbe
jbe
nop
pop
adc
in
cmp
inc
jl
xchg
adc
enter
and
and
jl
inc
add
mov
jmp
sbb
int3
bound
pop
jno
cmp
in
cmpsl
xchg
push
lods
inc
pushf
pop
popf
bound
in
lds
fiadds
mov
xor
cmp
je
pusha
pusha
cmc
cmp
sbb
out
addl
mov
leave
iret
scas
push
shr
clc
xor
adc
inc
enter
xchg
mov
aas
pop
and
cmp
ljmp
rclb
adc
or
imul
mov
movsb
mov
in
fnsave
jle
sbb
cwtl
add
adcl
push
sbb
cmpsl
jae
mov
mov
test
mov
sub
je
mov
push
frstor
mov
push
pop
std
outsl
jb
xor
lds
adcb
stc
and
sub
ret
xchg
cmp
inc
pop
sbb
clc
add
mov
insb
pushf
lock
mov
cmp
insl
push
adc
stos
mov
pop
aad
push
and
out
cmp
push
pop
jne
das
out
sbb
and
sub
xchg
cmpsb
ds
inc
pop
ss
lock
pusha
jo
adc
fs
mov
sub
es
pop
stos
mov
into
movsl
addr16
inc
adc
jns
daa
in
add
aad
rclb
and
cmp
xchg
test
addr16
mov
cld
gs
shlb
out
mov
rolb
mov
sarb
sahf
mov
jge
pop
sbb
inc
or
sbb
in
pop
mov
sti
jecxz
pop
jno
or
test
push
inc
mov
and
push
mov
xchg
in
stos
data16
sbb
xchg
adc
add
inc
dec
mov
js
cli
cs
js
stos
sti
sti
lods
call
rol
push
fucomp
jg
insb
jne
aad
jnp
int3
insb
mov
in
mov
dec
mov
mov
sbb
scas
mov
mov
pop
clc
adc
into
pop
adc
or
sahf
ja
scas
jnp
mov
xchg
mov
jne
sbbb
ljmp
test
movsb
clc
dec
int3
sbb
push
cwtl
movsl
mov
mov
test
cmp
int
leave
mov
adc
mov
mov
hlt
mov
push
cmp
inc
xchg
cmp
or
sahf
add
lea
lea
sbb
xor
div
inc
dec
push
insb
mov
jmp
add
inc
fs
lret
xor
std
or
rcl
je
mov
andl
int
lods
sub
jnp
cltd
ljmp
js
stos
or
enter
add
idivl
fldenv
idiv
aas
bound
add
xor
dec
xchg
enter
icebp
dec
stos
cmpsb
cmpsb
push
cmpl
sub
cmp
ret
lock
sti
cs
cmp
iret
push
xchg
sub
enter
repz
pop
dec
ficomps
dec
dec
rolb
sub
and
push
pop
ss
cmpb
clc
dec
fadds
mov
lods
icebp
add
sub
or
and
pop
into
aad
cltd
mov
daa
popa
cmp
pusha
cld
mov
xchg
mov
popa
scas
pop
and
jle
adc
loop
lods
inc
push
jle
push
pop
bnd
jne
sahf
inc
push
into
mov
pop
dec
cltd
in
fldcw
cmp
dec
lods
or
xor
js
dec
inc
int3
mov
repz
xor
stos
mov
mov
mov
mov
je
ljmp
mov
cli
or
repnz
loop
mov
jae
out
pop
push
adcb
pop
rclb
cmp
pop
daa
orb
or
loope
push
insb
inc
sub
call
dec
into
xor
scas
daa
push
mov
mul
inc
fidivrl
mov
out
insb
add
stc
jmp
cmc
adcl
lds
xchg
pop
push
jle
in
movsb
ret
sbb
out
mov
inc
jp
cld
popf
sub
test
shr
cli
sbb
loop
bound
pop
and
sbb
hlt
test
mov
cltd
call
mov
int3
imul
cld
sub
inc
sbb
pop
adc
cmp
add
mov
mov
into
movsl
dec
aaa
movaps
ds
and
push
mov
cmp
sbb
and
mov
pop
gs
cltd
push
mov
cmpsl
shll
sbb
pop
inc
xchg
iret
shl
fidivrs
ja
sbb
adc
dec
lods
xor
push
mov
xchg
jae
loop
or
ror
fnsetpm(287
sub
push
lds
lahf
adc
cmp
add
push
data16
inc
pop
add
lock
loop
mov
push
adc
or
inc
in
cmp
xlat
out
ficompl
sub
sahf
fsubrs
repz
ds
test
push
subl
icebp
mov
enter
pop
outsb
ds
or
sub
mov
fildl
pop
cmc
rolb
sub
pop
inc
outsb
movsl
fdivp
dec
test
xor
jae
dec
or
cmp
push
out
adc
jo
mov
movsb
xchg
pop
ds
dec
jle
cmp
stos
daa
sbb
pop
ljmp
mov
push
mov
jb
inc
test
outsl
adc
imul
push
cmp
enter
leave
and
jns
jecxz
xor
pop
mov
das
xor
inc
ja
lahf
mov
insl
rclb
jmp
jmp
mov
push
int
lock
mov
outsl
cmp
roll
shrl
shr
mov
mov
mov
pop
jg
xchg
push
pop
dec
inc
or
pop
jb
mov
iret
dec
push
pushf
xor
or
cmp
xchg
rolb
jne
sbbl
stos
pop
xchg
push
std
sbb
outsl
push
push
mov
sbb
fwait
pop
icebp
testl
mov
xchg
ss
dec
inc
mov
idivl
jnp
mov
push
sbb
inc
mov
sub
data16
mov
and
jnp
data16
js
icebp
pop
jp
push
push
ret
sbb
fildl
cltd
or
jne
xchg
icebp
ss
add
xchg
sahf
inc
xlat
and
push
jno
addb
xor
sub
cmpsb
mov
push
je
imul
or
sub
and
sbb
xchg
inc
aad
dec
pusha
mov
cmp
mov
or
iret
or
mov
add
or
jae
cwtl
cltd
xchg
or
push
xor
subl
out
outsb
insb
sti
ja
fiaddl
call
pop
idiv
jbe
mov
or
add
add
cltd
idivl
out
ss
add
inc
xchg
push
sbb
mov
sbb
xchg
ret
add
ss
pop
fsubr
cs
jge
mov
test
xchg
push
lret
mov
dec
dec
shlb
mov
xor
jmp
int
mov
test
xor
adc
aas
sub
adc
js
idivl
xor
dec
inc
mov
iret
mov
pop
push
data16
and
mov
sbb
adc
sub
mov
ret
pop
shlb
cmp
imul
adc
cmpsb
xor
inc
shr
insb
les
inc
insb
stos
dec
movsl
add
mov
scas
xlat
in
sub
into
or
lahf
mov
call
popl
pop
mov
mov
lods
imul
aam
jge
stos
mov
sub
dec
shlb
stc
insl
push
out
push
pop
sbb
and
pop
leave
cli
mov
imul
dec
je
pop
jmp
push
iret
int3
and
adc
mov
inc
jb
xor
loop
and
push
loopne
push
data16
scas
jno
pop
ljmp
call
mov
stos
es
int3
sub
or
enter
mov
push
out
std
out
imul
mov
push
or
xor
cltd
xchg
into
dec
and
and
sbb
xor
arpl
mov
in
jle
or
icebp
popf
push
scas
dec
lahf
sub
xchg
mov
adc
xor
sub
push
data16
insl
add
mov
jge
cmpsb
popa
outsb
inc
push
xor
xor
add
sub
push
sbb
xor
nop
and
fsubp
xor
lods
loope
xchg
lods
adcl
into
adc
pop
imul
inc
cmp
in
scas
aam
popfw
sub
xor
test
cmp
adc
rolb
popf
movsb
inc
scas
mov
dec
sub
pop
outsb
jne
add
adc
pop
dec
test
sbbl
pop
mov
outsl
dec
jo
sub
dec
lods
mov
adc
cmp
or
adc
rcl
lret
dec
in
pop
mov
xlat
push
mov
sub
rclb
dec
pop
and
pop
pop
outsb
pop
push
and
push
pop
dec
loopne
and
nop
arpl
push
pop
mov
pop
out
aas
and
or
mov
xor
inc
and
in
jno
ret
pop
mov
das
xchg
aaa
pop
cld
outsl
sub
lcall
add
pop
add
mov
push
aad
repnz
rclb
pusha
sbb
push
mov
loop
les
ljmp
xor
mov
addl
mov
pop
cmp
jns
notl
pop
bound
xor
int3
xor
xor
pop
aad
cmp
xchg
cli
cmp
or
lahf
dec
xor
push
mov
outsb
fisubs
orb
fcompl
imul
pop
dec
mov
lret
es
sbb
fstpl
or
outsb
inc
pop
xchg
scas
mov
xorl
lea
repz
jns
pop
push
or
fcmovbe
lahf
xor
je
ja
aad
mov
dec
jns
push
lods
ficoml
pushw
movsb
and
push
mov
add
sar
adcb
scas
addr16
imul
test
insl
dec
push
and
xchg
dec
repnz
jae
inc
lock
mov
inc
add
cli
cli
test
test
in
adc
imul
jle
xchg
sti
dec
mov
jmp
call
dec
adcb
mov
shlb
mov
sub
and
jmp
xchg
cmc
cli
lock
lods
inc
mov
jns
out
stc
adc
or
add
mov
xor
xor
inc
cmp
cmc
or
jge
or
shrl
mov
popf
sub
rcl
xchg
int3
add
loopne
jno
xor
test
arpl
ss
leave
cmp
and
adc
ljmp
sahf
dec
sub
mov
int3
adc
mov
test
shll
adc
pop
pop
cmp
jns
lods
inc
xchg
sub
shll
imul
jbe
es
scas
cmp
inc
lret
push
mov
sar
pushf
pop
pusha
cmp
xor
push
bound
int3
into
mov
lahf
roll
xchg
cwtl
push
sbb
jmp
icebp
mov
test
jne
lea
or
insb
mov
lahf
cs
and
add
push
testb
dec
jp
jmp
jae
js
pop
cmpl
popf
sahf
pushf
xor
in
pop
scas
das
iret
out
mov
rorb
jnp
mov
xchg
pusha
repnz
jle
idiv
dec
scas
dec
ljmp
in
aad
cmp
adc
outsl
in
arpl
lret
in
dec
fdivl
add
cmpsb
dec
rcrb
fnstcw
es
fisubrl
jb
or
sbb
pop
loope
sub
psubsb
jle
mov
xchg
pop
insl
and
mov
aad
stos
pusha
xchg
add
cmp
push
push
ja
fiaddl
xor
outsl
loope
inc
mov
pop
sbb
int3
push
mov
push
mov
out
or
mov
jp
sbb
or
not
dec
mov
bound
stos
jp
ret
and
aaa
xchg
push
aad
mov
les
add
push
bound
inc
push
cmp
pushf
pop
cmp
cmp
and
pop
ret
pop
fsincos
popl
xor
ds
out
adc
flds
push
jecxz
or
jge
test
in
adc
sarl
dec
ss
lcall
out
shl
pushf
push
mov
das
rorb
pop
lret
dec
movsl
mov
add
jmp
mov
ja
aad
loop
sbb
cmc
dec
cltd
inc
pop
xchg
and
test
xchg
inc
lret
lds
ss
mov
cmp
in
test
leave
pop
push
or
mov
sub
or
mov
fldenv
orl
aam
inc
dec
push
daa
jge
daa
pop
push
les
packsswb
loope
dec
lods
cmp
jae
xor
cs
insb
jae
jg
or
sbb
mov
jp
test
or
adc
ret
es
jne
lods
pop
jle
add
inc
dec
sub
pop
or
mov
inc
pusha
add
testl
jo
inc
sub
scas
fcmovnbe
test
push
xor
push
lret
sub
mov
fwait
bound
add
and
add
icebp
jp
into
shrl
das
rorb
jle
iret
mov
sbb
dec
mov
dec
dec
cmp
xor
cwtl
jb
adc
or
mov
out
xchg
mov
in
jge
out
jge
cmp
cmp
not
dec
push
or
ja
mov
push
aas
es
inc
sub
inc
roll
pop
or
cmp
mul
dec
mov
call
xlat
repz
mov
loope
inc
push
cmp
jae
int
adc
bound
mov
scas
xchg
pop
enter
mov
int
fstpt
sub
jnp
sbb
shll
jge
lret
xor
and
cmp
or
mov
or
lea
fsubrl
test
mov
pop
stos
cltd
mov
push
rcr
push
cwtl
loope
and
arpl
lahf
aam
or
fisttpll
pusha
mov
cld
mov
ds
ret
add
insb
jle
in
pop
dec
gs
adc
sarl
sub
mov
cltd
fstpl
pop
xor
mov
dec
into
insb
cwtl
out
xor
movsl
repnz
xchg
xchg
pop
mov
sbb
leave
lret
xchg
jo
test
aad
repz
sahf
cmp
xor
cmc
inc
or
mov
pop
loope
and
adc
loopne
and
stos
dec
mov
mov
mov
push
std
mov
mov
fmuls
jge
loop
or
push
dec
mov
mov
sub
stc
xor
std
xchg
cmp
enter
sub
repz
sub
mov
xor
or
sarb
mov
in
imul
xchg
jnp
ret
mov
mov
and
lar
fiaddl
popl
jno
push
mov
daa
add
ficompl
cmpl
call
into
add
or
lcall
es
arpl
xchg
pop
movsb
bswap
inc
jecxz
ljmp
and
cmp
mov
mov
push
push
dec
or
sbb
je
lds
or
or
test
imul
mov
std
or
add
xor
push
add
lret
push
mov
xchg
gs
adc
xchg
jle
sbb
sbb
pusha
clc
daa
dec
or
out
enter
daa
and
mov
ret
mov
sub
stos
pop
add
lahf
lds
rcrb
pop
pop
push
sbb
enter
nop
shlb
dec
enter
sbb
fwait
add
lea
sub
inc
insl
pop
sbbl
push
sub
jns
decl
fs
out
add
data16
icebp
aad
data16
out
bound
sub
mov
into
sarb
mov
jno
aad
push
xchg
aad
test
and
mov
jo
mov
jno
or
enter
mov
subl
adc
lret
in
int3
les
pop
iret
xchg
cltd
outsb
iret
ror
cltd
movsb
mov
push
cs
mov
ljmp
test
arpl
inc
mov
mov
out
popf
sahf
cltd
test
sub
mov
pop
loop
and
or
dec
inc
testl
ljmp
test
addr16
push
popa
iret
repnz
mov
mov
mov
add
aam
outsb
fmull
adc
push
and
insb
jge
rorb
push
test
mov
shrb
push
and
imul
dec
fcoml
add
fidivs
inc
pop
loope
in
ret
xor
stc
rcrb
aaa
sub
mov
bound
pop
push
mov
repnz
iret
je
push
test
test
data16
jg
cs
int3
or
lcall
xchg
push
lds
ret
ljmp
stos
cmpsl
adc
les
inc
jg
sub
outsb
pop
mov
and
mov
fisttpl
jne
mov
jg
mov
push
arpl
shrl
mov
cmp
adc
outsb
sbb
shlb
ret
addl
popa
mov
lret
adcb
out
addr16
test
sub
cmp
add
les
mov
xchg
add
xchg
clc
jp
dec
mov
mov
daa
lods
mov
xchg
sbb
andl
jns
out
dec
outsl
stos
push
pop
xchg
or
pop
nop
bound
loopne
lahf
push
jge
cmp
mov
scas
mov
into
or
push
pop
add
pop
inc
mov
xchg
dec
or
int3
or
push
and
jb
loop
aam
dec
rcrb
cmp
adc
lock
lret
xchg
aaa
mov
and
or
movsb
and
xor
into
push
test
cmp
jge
dec
dec
dec
pop
sbb
test
mov
xchg
mov
pop
rcrb
out
icebp
xchg
dec
xor
lcall
out
out
push
mov
aas
mov
loop
pop
xor
xchg
xor
adc
test
in
mov
push
sbb
test
push
lods
scas
jp
iret
fidivrl
add
jp
push
add
arpl
andb
rcll
mov
ret
xchg
mov
pop
add
xor
or
jo
fstpl
xor
and
scas
int
xchg
aas
mov
mov
into
scas
movsb
pop
dec
add
cli
add
inc
mov
ret
aam
dec
add
mov
mov
das
mov
mov
cmp
jmp
enter
pop
out
dec
mov
test
mov
dec
inc
cmpsb
jge
push
jo
sub
xor
or
cmp
lret
push
mov
fcoms
pop
sbb
aas
enter
ret
adc
dec
cli
cs
cmp
sti
in
movsb
jo
in
mov
pop
ret
pushf
xlat
test
xor
lahf
hlt
es
iret
add
out
jge
mov
dec
mov
into
mov
rcr
mov
add
sub
aas
test
leave
jo
xor
and
std
pop
mov
ljmp
xchg
lret
ja
stc
je
inc
stos
lea
cli
inc
fnstcw
enter
sarb
pop
sub
stos
ja
xor
imul
in
mov
push
dec
pop
cmpsb
faddl
test
jae
stos
out
jp
ja
jp
les
pushl
int3
add
jns
inc
dec
subb
test
inc
mov
sbb
int3
inc
scas
pop
leave
shrb
cmpsb
xor
mov
mov
or
call
mov
sbb
jmp
xchg
jbe
and
rclb
cmc
imul
xor
shll
sbb
loopne
xor
lea
scas
addl
inc
cmp
dec
add
jae
cmp
out
sarb
imul
mov
dec
aam
cmp
and
inc
pop
pop
pop
test
jle
push
push
adc
testb
pop
dec
cmc
sti
sarb
ror
pop
pop
jne
push
lret
and
loope
movsl
inc
in
push
fwait
mov
or
add
push
cmp
jle
dec
sbb
push
or
push
imul
ret
add
enter
ja
pusha
pop
addl
mov
aad
ss
cmp
adc
enter
nop
add
aas
daa
ja
push
in
cmp
gs
lret
mov
fsubl
adc
xchg
or
loopne
xchg
and
push
int
insl
out
and
sub
push
xorl
push
mov
data16
xorb
inc
rolb
dec
adc
jmp
test
iret
and
and
mov
loop
bound
cmp
imul
xor
and
and
xor
mov
push
adc
lock
push
xor
es
adc
jp
inc
mov
shlb
inc
sub
out
push
sbb
loopne
ja
mov
add
push
stc
in
stos
mov
pop
mov
or
test
aam
icebp
dec
loope
push
jle
jge
cwtl
xchg
addr16
pop
mov
cmc
test
stos
imul
outsl
cld
rcr
sbb
iret
fnsave
lods
aaa
adc
fildll
add
sbb
int
out
stos
testl
call
hlt
fisttps
sar
mov
cmp
mov
loopne
jno
dec
pop
int
jne
pop
pop
inc
xor
addr16
mov
cmpb
cmp
in
pop
test
xchg
enter
insb
mov
jmp
xchg
adc
xchg
push
inc
xchg
adc
and
mov
lea
pop
fstl
scas
faddl
fisubl
jns
jae
mov
rcrb
mov
test
pop
fbld
push
push
or
outsb
inc
ffree
popf
sarb
pop
pop
ret
rorl
mov
enter
and
sub
lea
cltd
imul
xchg
adc
and
jo
sub
jle
lret
loop
test
cltd
dec
out
push
and
mov
adc
add
sub
cmpsl
shll
arpl
sub
out
pop
inc
repnz
fs
push
jnp
jl
je
mov
out
idiv
cmp
lea
daa
in
int3
jbe
jl
subb
lcall
lds
pop
popa
adc
sti
mov
sbb
cmp
add
inc
bound
xor
rcll
mov
add
sub
sub
and
mov
in
mov
xor
add
sub
in
mov
enter
fstpt
pop
sbb
jno
das
dec
inc
push
push
das
jmp
push
hlt
gs
shrl
and
cmp
std
inc
sub
adc
jmp
mov
push
imul
add
xchg
add
sbb
fwait
push
orb
rolb
out
inc
into
sbb
dec
adc
movsl
sbb
adc
daa
and
rolb
idivl
push
movsb
loop
cmp
push
pop
dec
fstpl
insb
mov
cmp
push
mov
mov
add
stos
in
iret
mov
dec
push
mov
popa
stos
or
testl
subb
sub
jbe
nop
int
inc
bound
mull
popf
js
adc
push
ss
subl
and
jle
jnp
xor
das
inc
pand
decb
aas
sub
sahf
jecxz
push
jp
xchg
sbb
out
test
mov
lret
xchg
push
sbb
in
aam
jp
sbb
jge
pusha
or
je
and
call
mov
jb
xor
in
pop
sbb
test
push
enter
out
sub
sbb
lcall
cs
scas
sar
lock
fisubs
sub
test
sub
cmc
add
mov
and
mov
mov
int3
das
adc
pop
jmp
es
ret
add
or
add
aaa
xchg
arpl
push
pop
loope
pop
pusha
in
rolb
notb
push
inc
inc
and
in
and
add
es
jge
out
xrelease
and
lock
in
mov
test
popa
cmp
cmp
lret
mov
imul
or
in
aam
cmp
aas
shl
and
xorl
shrl
dec
push
jns
inc
dec
stos
inc
ss
rcr
inc
hlt
sarl
idivl
fsub
es
jle
push
push
iret
mov
mov
mov
stos
push
or
pop
and
dec
int
xor
rclb
lods
shrl
pushf
aas
arpl
test
rcpps
mull
movsl
lods
inc
adc
out
or
xchg
push
enter
les
ljmp
push
pushf
jns
nop
iret
jne
sub
push
xchg
bound
jns
cmc
loop
mov
outsb
pop
push
inc
or
pop
inc
and
dec
lds
ja
iret
stc
int
js
jg
in
mov
push
sub
mov
addb
ret
clc
xchg
out
sub
push
mov
xor
inc
testb
cli
and
out
jle
and
addr16
xchg
les
loope
stc
stos
and
in
lret
or
pusha
aam
sbb
out
mov
jmp
fwait
cmp
in
jl
repz
rcr
inc
xchg
pop
out
divl
xor
scas
xlat
popa
sub
popf
ds
pop
lret
sti
xor
aas
mov
data16
outsl
mov
xor
lea
push
and
pushf
mov
or
lock
es
out
andb
test
out
adcb
repnz
jg
ret
mov
sub
in
sbb
hlt
aam
push
pop
adc
adc
cmp
lcall
mov
dec
mov
fistpll
and
clc
inc
mov
sarl
and
push
jecxz
fldcw
or
leave
mov
pop
pop
int3
push
aad
pop
sbb
or
dec
jl
pop
or
fldcw
or
icebp
aas
sbb
sbb
add
jne
cmp
loopne
arpl
ljmp
pop
or
dec
lret
sbb
loopne
push
outsl
cli
scas
push
push
inc
pop
gs
mov
mov
xchg
fcompl
xor
sbb
sbb
push
in
lock
nop
jne
sbb
mov
add
jbe
dec
mov
sbb
add
shrb
xchg
xorb
loopne
dec
sub
xchg
jne
lea
cmpsl
bound
movsb
and
nop
test
add
mov
and
fdivs
sub
jae
stos
mov
push
in
or
scas
loopne
mov
mov
mov
addb
sub
mov
push
decl
icebp
or
shll
cmpsb
adc
int
or
faddp
js
sub
ljmp
pop
pop
std
pop
lahf
push
and
out
dec
in
outsl
adc
shlb
jg
sbb
pushf
lock
mov
add
std
cmp
jnp
cmovne
xchg
test
popl
stos
data16
jge
outsb
test
xor
sbb
clc
stos
fldlg2
pop
pop
sbb
bound
cltd
call
xor
mov
insl
dec
lods
push
and
nop
push
inc
icebp
das
lods
into
lea
fdivr
xchg
ret
fstl
cmpsl
dec
cmp
loope
xor
push
add
insl
inc
or
in
stc
sbb
pop
out
sbb
xor
aas
or
out
push
mov
and
push
dec
in
mov
inc
cmp
fidivrl
cmp
imul
pop
add
xlat
cmp
or
in
and
xchg
inc
mov
push
jle
inc
jnp
fbstp
cld
lock
movsl
jmp
iret
repnz
pop
aad
icebp
repnz
sbb
imul
cmp
or
fnstenv
cmp
ds
or
mov
mov
cmp
and
lods
adcl
pop
mov
mov
stos
mov
int3
lock
rolb
dec
cmp
popf
mov
ret
out
inc
and
fstl
sahf
roll
or
pop
cmpb
pop
add
pop
pop
sub
gs
mov
sbb
cmc
mov
ds
jg
xchg
dec
adc
movsl
xchg
push
xchg
insl
iret
ss
and
and
sbb
xchg
push
jl
stc
lret
imul
cmp
cli
sbb
iret
adc
addr16
aam
pop
or
sub
in
xchg
xchg
push
lea
ds
js
dec
fsubr
jecxz
sub
mov
lret
adc
cli
add
mov
mov
jnp
xchg
faddl
mov
and
push
push
mov
cmp
pop
aam
xor
cmp
out
xchg
jmp
das
imul
movsb
arpl
mov
inc
rcrb
xor
dec
mov
sbb
mov
jmp
std
sub
xchg
jbe
cmp
push
insl
pop
into
stc
gs
rcl
mov
add
lock
push
push
ret
push
test
add
jne
sbb
in
out
out
and
push
pushf
lret
jmp
je
imull
xchg
in
or
cmc
dec
out
clc
xchg
lret
xchg
movsb
es
repz
lret
scas
lret
jbe
cmp
enter
addr16
push
out
push
out
repnz
dec
cmp
idivb
add
cld
and
ljmp
push
jb
push
fsubr
cmpsb
int
or
in
std
shrb
movsl
shl
or
xlat
out
pop
cmp
dec
lret
xorl
inc
jge
pop
rcl
repnz
and
inc
scas
pop
sahf
pop
sub
cmp
dec
rcl
les
mov
repnz
lret
dec
js
mov
out
mov
nop
add
lretw
or
mov
sub
xchg
mov
add
cwtl
jl
push
push
pop
inc
int
push
dec
or
xor
lock
mov
cmp
adc
and
mov
in
iret
mulb
shl
mov
test
cmpsl
xor
mov
pop
mov
mov
mov
xor
adcb
ds
lods
mov
imul
dec
inc
imul
fisubrl
loope
mov
push
sbb
daa
jl
add
mov
dec
gs
dec
add
xor
aam
adc
or
addl
pop
or
push
cmpsl
out
rcrb
sub
or
popa
in
mov
pop
cmp
cltd
test
cld
mov
dec
mov
lret
cmp
mov
push
lods
sti
aas
xchg
imul
fsubr
and
pusha
cmpsl
mov
pop
dec
ss
add
dec
inc
test
outsl
roll
lcall
pop
push
ds
pushf
mov
push
push
add
pop
adcl
sub
or
mov
push
out
jg
repz
fdivrs
in
push
test
jb
mov
cmp
addr16
adc
enter
push
fdivr
cs
jmp
mov
in
in
inc
cmp
cmp
add
and
rcrb
cli
mov
mov
lret
sbb
add
adc
cmp
fimuls
icebp
shll
mov
push
hlt
xchg
xchg
daa
inc
outsb
push
loope
jl
in
iret
xor
dec
andl
xchg
ss
pop
movsl
or
and
and
stc
sub
jp,pn
jno
sarb
test
repz
xor
mov
xor
push
mov
xchg
aad
mov
jmp
shrb
push
int3
pushf
gs
jns
repz
movsl
out
mov
pop
rcrb
add
clc
dec
lret
jno
ficoms
scas
decl
inc
push
lret
push
por
push
loope
lods
xor
enter
pop
mov
mov
push
clc
outsb
jg
pushf
jge
insl
or
jns
mov
mov
or
inc
xchg
ljmp
sti
jle
push
mov
or
sbb
adc
push
xchg
inc
push
push
int
mov
test
stos
dec
fs
repz
scas
daa
fisubrl
sahf
mov
jae
pop
pushf
and
xorb
stos
and
das
fs
xchg
mov
rcrl
add
out
enter
cmp
mov
cli
fnstenv
in
out
inc
cs
add
xchg
mov
xchg
jecxz
add
call
out
adc
mov
or
leave
hlt
and
jb
add
dec
pop
inc
push
push
xor
add
lcall
cmpl
inc
fsubl
in
inc
fcoms
ljmp
push
or
fmuls
in
in
or
decb
xchg
push
inc
push
insl
or
sahf
inc
sahf
mov
pop
dec
flds
mov
dec
cwtl
es
int
push
push
xor
sbb
jnp
mov
pusha
push
mov
int3
add
insl
sub
add
jns
pop
pop
xchg
push
xor
xor
clc
mov
movsb
lock
sub
orb
movsl
mov
and
pop
xchg
das
cltd
or
dec
xor
movsl
cmc
pushf
arpl
xchg
daa
enter
push
pop
in
inc
lods
or
dec
pop
sub
sub
out
mulb
push
scas
and
cmp
data16
daa
mov
sti
test
lea
call
and
addr16
out
and
imul
xor
sub
daa
pop
fisttpll
inc
jle
push
dec
push
pop
and
xor
mov
xlat
mov
inc
inc
pop
insb
xchg
pop
loope
push
adc
inc
dec
push
ficomps
aad
and
mov
add
in
das
shrl
mov
mov
lea
test
fidivrs
xor
sbb
mov
sbb
psrlq
cmpsb
in
push
fcompl
test
js
xchg
sub
imul
shl
mov
mov
mov
sub
xor
pop
int
clc
arpl
sbb
adc
int3
add
loope
and
mov
cmp
jb
mov
push
adc
outsb
sbb
or
das
xchg
xor
and
and
mov
push
xchg
repnz
jle
mov
push
fs
scas
fisubs
dec
push
xchg
mov
jp
lods
repz
mov
test
xchg
fnsave
test
je
pushf
add
fstpt
inc
aam
mov
sbb
incl
or
adc
sbb
repnz
mov
dec
ja
stc
dec
addb
das
das
mov
sbb
fstps
les
cs
pop
xor
leave
pop
cmpsl
jb
je
clc
call
jns
and
enter
mov
jno
stos
adc
insb
pop
test
sbb
lcall
mov
or
leave
sub
mov
outsl
ljmp
negb
pop
aas
aad
int
and
mov
frstor
sahf
sub
fnstsw
sti
mov
xchg
lods
jo
mov
xor
cwtl
push
inc
stos
sub
sub
sub
lods
push
mov
lock
lods
imul
jns
dec
and
ret
or
add
cltd
stos
pop
jecxz
js
adc
cmp
enter
ljmp
xor
in
mov
mov
outsb
pusha
sub
jl
stc
dec
push
rclb
clc
test
mov
cmpsl
and
mov
aad
lahf
or
repz
decl
or
cmp
xchg
psubsw
push
fnsave
add
iret
lock
leave
dec
mov
scas
mov
push
pop
adc
popf
out
sub
out
and
or
adc
xor
push
dec
lahf
imul
ja
mov
das
scas
cmp
mov
xchg
fs
jo
inc
aaa
or
mov
outsl
ss
out
icebp
dec
jbe
repnz
add
mov
lea
cwtl
test
push
arpl
pop
es
arpl
and
repz
pushf
mov
lea
pop
mov
xchg
aaa
or
inc
gs
pushf
mov
pop
loope
mov
loope
flds
mov
xchg
lret
repnz
fstpt
sbb
sahf
add
mov
xchg
aad
jmp
or
in
imul
push
mov
lock
pop
aad
outsl
loopne
dec
push
rep
or
xor
fistps
sbb
and
dec
fidivl
xchg
pusha
mov
cmp
cmc
mov
inc
notl
xchg
ja
push
xchg
cmp
lods
xchg
pop
xor
mov
jne
jle
jle
jl
and
fwait
jmp
push
push
sahf
jae
out
ja
into
pop
cmp
push
mov
loope
insl
hlt
push
lock
push
pop
cmc
mov
dec
ret
das
sahf
jns
add
call
dec
sub
mov
sbb
fcoml
ret
push
jo
xor
sub
mov
lods
dec
xlat
jl
adc
mov
push
mov
rorb
mov
test
stc
scas
push
cmp
lds
cli
mov
mov
cwtl
jmp
mov
adc
shlb
lods
jmp
mov
pop
pop
sub
and
lea
sti
js
push
pop
jno
mov
fwait
pop
push
mov
inc
and
push
loope
fnstcw
jae
xor
mov
std
adc
scas
cmp
add
add
ret
pop
pushf
scas
mov
xor
scas
stos
std
mov
xor
je
js
jae
xor
add
push
bswap
and
sub
cmp
xor
std
sbb
test
push
pop
mov
lcall
shlb
loop
sbb
lods
push
push
ds
xor
mov
in
inc
fisttpl
mov
aaa
pop
sub
lret
push
fs
inc
inc
pop
lret
pop
loop
jne
cmp
nop
in
or
inc
ds
mov
add
adc
cltd
arpl
xor
adc
jnp,pn
mov
sahf
stos
shlb
cwtl
ret
cwtl
or
xor
leave
push
cltd
imul
sub
in
push
sub
inc
outsl
jp
inc
fdivrp
insb
sub
pop
sbbl
push
sti
lcall
jns
mov
xchg
push
aad
dec
daa
mov
rclb
adc
xor
xchg
mov
dec
and
dec
testl
rorl
mov
in
mov
jb
mov
xchg
mov
cmp
dec
or
push
sbb
imul
mov
inc
lret
or
imul
bound
mov
ja
fbld
ret
pop
adc
pop
jno
pop
leave
sahf
jecxz
pop
dec
mov
adc
and
fcoms
rcll
and
mov
aad
ret
pop
ret
das
xchg
clc
adc
arpl
jae
in
inc
adc
xchg
dec
mov
or
dec
fs
in
xchg
push
mov
ja
inc
in
add
loopne
pop
lahf
bnd
mov
mov
cmp
mov
and
lcall
xor
push
pop
push
roll
xchg
push
test
sbb
sub
push
bound
std
repnz
sub
mov
push
mov
dec
sahf
clc
sbbl
mov
push
mov
imull
int3
sahf
lods
and
out
ljmp
mov
add
pop
orps
sbb
adcb
jb
cs
and
divb
xchg
lea
ret
push
xchg
mov
push
imulb
push
and
or
or
push
mov
fs
aaa
loopw
test
in
scas
sbb
push
shrb
pop
sub
cld
in
fisubl
cmp
es
inc
int3
les
test
jo
sbb
push
jmp
movsb
xchg
and
jl
enter
fwait
dec
mov
push
lcall
sub
daa
and
popf
pushf
jl
mov
mov
jge
mov
mov
jns
lret
dec
pop
xchg
jmp
cmpsl
mov
test
negb
sbb
popf
mov
fdiv
fistps
add
mov
add
cmp
roll
xchg
ffree
or
pop
sub
subb
xchg
inc
xor
fdivrp
int
scas
pop
cli
push
mull
jns
sti
ljmp
xorb
sub
lahf
ljmp
xchg
xor
xchg
push
and
loopne
fiadds
lods
sub
ror
mov
or
pop
and
sbb
lret
mov
inc
sub
adc
pop
stc
sbb
das
popf
sti
add
push
sti
push
sub
aas
jmp
mov
mov
jns
loop
mov
sbb
push
in
push
jmp
sbb
fsts
loopne
mov
mov
inc
add
xor
out
and
dec
xor
js
lcall
adcl
mov
out
adc
insl
lcall
adc
mov
mov
cs
das
stc
push
arpl
dec
xchg
jmp
push
fsts
fwait
mov
or
orb
mov
xchg
lret
fidivrs
out
inc
lret
loop
jne
arpl
stos
mov
cmp
mov
lea
std
xchg
xchg
cmpsl
iret
adc
ss
cmp
repz
shll
inc
or
push
push
or
ljmp
pop
adc
lret
cli
jg
xor
or
lods
nop
loopne
in
or
int3
lods
mov
xchg
push
lock
les
add
outsl
mov
lock
es
clc
xor
shrb
jl
sahf
sbb
mov
pusha
lods
jns
movsb
push
inc
jl
mov
add
and
test
loope
shl
mov
jno
jp
and
pop
adc
addr16
push
jmp
ja
lahf
or
ja
dec
iret
or
sbb
dec
scas
sub
call
xchg
xor
xchg
dec
mov
fidivs
and
fs
adc
les
cltd
gs
aas
or
aam
mov
loop
fstl
push
and
add
adc
xchg
adc
in
adc
jle
scas
sbb
mov
mov
in
lcallw
hlt
in
pop
dec
cmpsb
push
and
stos
ret
push
aam
inc
les
int3
push
fnstcw
mov
loope
mov
mov
jne
shll
mov
imulb
lods
loopne
aam
lock
and
add
icebp
add
loope
lds
jp
data16
dec
out
fimull
in
clc
scas
xchg
cwtl
cli
mov
push
add
clc
jle
and
and
fimull
jle
xor
pop
xor
push
cmp
int3
jbe
clc
pop
stos
add
inc
das
lret
jno
mov
jp
in
aaa
inc
add
fistl
pop
xchg
cmp
ror
adcl
push
lds
dec
ret
imul
jge
xchg
push
into
in
jg
mov
jle
inc
xor
cmp
into
adc
mov
sbb
outsl
roll
cmc
pop
mov
dec
lds
push
aam
mov
dec
jle
pop
xchg
xchg
push
pop
and
and
movsb
into
jle
mov
inc
xchg
inc
icebp
mov
es
xor
mov
call
push
cld
test
dec
xor
jge
addr16
cli
and
xchg
dec
dec
dec
das
mov
loop
push
insl
lret
in
lods
mov
addr16
lahf
xor
shll
push
sbb
mov
add
insl
rorl
sbb
push
out
ljmp
xchg
add
mov
cmp
inc
ljmp
lret
xor
test
pop
scas
xor
test
xchg
jbe
pop
xchg
cltd
in
mov
nop
dec
adc
imul
or
push
movsl
xor
clc
xor
adc
jle
cwtl
lret
es
js
xor
mov
call
adc
dec
and
sbb
aaa
pop
outsb
cmp
add
push
stos
dec
imul
adc
popa
and
test
cltd
sti
je
sub
jl
jg
inc
pop
jg
cmc
jge
inc
xchg
dec
push
jae
jnp
inc
xor
jb
cmpl
sbb
pop
cmpsl
fildll
addr16
xor
jo
jl
mov
push
loop
clc
pop
sahf
arpl
arpl
jmp
ljmp
int3
cmpsl
mov
daa
pop
cmp
dec
cltd
jo
mov
add
mov
shlb
aad
sub
xchg
insl
and
xor
adc
xor
cmpsb
xchg
flds
jno
test
lea
mov
stc
sub
dec
add
or
xchg
ficoml
inc
sbb
mov
add
and
sbb
test
outsb
or
xchg
ja
pushf
adc
cltd
iret
sub
popf
das
adc
sub
jp
mov
or
imul
jl
add
xchg
lret
dec
test
adc
jae
cmp
in
repz
add
imul
sbb
aaa
in
mov
icebp
and
adc
pop
inc
stos
mov
mov
jbe
test
jmp
push
jge
jmp
test
jle
push
cli
cli
mov
mov
jle
inc
ret
pop
rcrl
imul
out
jl
mov
sbb
out
mov
fistps
fadds
jl
pushf
cli
lods
mov
out
and
out
pop
leave
and
sub
push
push
sbb
out
mov
pushf
jp
fdivs
subb
out
js
sbb
and
fisubl
xor
rcrl
jne
fdivl
in
mov
notb
xchg
test
data16
jg
icebp
imul
int3
push
dec
jae
ja
push
dec
mov
roll
push
adc
mov
fstl
adc
mov
in
jb
call
add
test
shrb
pop
aad
sub
dec
dec
imul
push
xorb
into
gs
xchg
jmp
aam
push
push
data16
cmp
lock
dec
sahf
mov
cmpsb
mov
pusha
jae
jae
lds
pusha
sti
xor
xor
mov
js
or
nop
test
xchg
ret
adc
mov
inc
and
push
mov
scas
aad
xchg
test
fwait
adc
dec
mov
lock
sub
jl
pop
arpl
fstpt
aaa
loopne
int
sarb
movsb
pop
cmp
mov
movnti
cltd
and
sub
stos
push
iret
mov
test
adc
push
out
popf
or
in
scas
xor
in
insb
pop
pop
icebp
addr16
add
fstps
bnd
mov
fbstp
cmp
mov
cwtl
push
sbb
sbb
popf
rcrb
ret
sarb
mov
cmp
inc
fstpl
jecxz
mov
jmp
jge
dec
popa
stos
inc
inc
cmp
mov
or
adc
leave
push
rcll
lahf
das
fnsave
mov
dec
repnz
imul
es
ljmp
pusha
call
jnp
mov
sbb
mov
jo
push
or
xchg
jmp
inc
dec
ss
hlt
sbb
jmp
inc
faddp
out
fimull
test
push
and
push
xchg
mov
mov
rep
cmp
lahf
mov
push
cmp
das
in
pmaxsw
dec
subl
pop
sti
fcomp
add
icebp
iret
jg
out
add
mov
fstpt
je
negb
mov
inc
push
std
bnd
xor
dec
pop
cmpsl
lds
js
cwtl
dec
mov
mov
cmp
mov
push
shll
dec
sbb
aas
sub
push
mov
xchg
fstps
pushf
mov
leave
inc
fmull
cld
jb
push
sbb
fisttpl
out
lret
or
das
sbb
jns
lea
jmp
push
mov
xor
int
je
out
sub
popf
iret
movl
lret
pop
movl
daa
push
push
mov
xor
xor
mov
lcall
fisubs
pusha
outsb
xchg
mov
lods
insl
mov
mov
mov
xchg
test
sbb
push
cmpsb
xor
pop
mov
sahf
stos
call
pop
push
pop
cs
push
je
notl
lahf
cmp
push
out
ret
outsb
movsb
inc
cmp
adc
dec
sti
stos
mov
fdivs
mov
cwtl
mov
stc
xorl
jbe
jns
xor
jne
mov
pop
cltd
jmp
fidivrl
ror
cli
bnd
pop
pop
test
lods
xchg
jmp
cmp
stos
aad
inc
jge
scas
inc
mov
int
mov
insb
sub
or
test
fsubrs
stc
pushf
shrl
out
cmp
out
push
ret
jl
push
push
push
mov
inc
add
jb
mov
repnz
cmp
jp
add
add
ja
mov
inc
push
int
cmp
std
mov
pop
mov
inc
mov
mov
mov
add
fistps
xchg
mov
aam
mov
and
mov
pop
xor
pop
es
int3
and
mov
ret
sub
hlt
pop
push
sbb
xor
sbb
imul
mov
pop
jle
mov
ss
and
lock
divb
add
pop
mov
pop
pusha
fimuls
adc
add
xor
test
push
push
dec
inc
mov
mov
push
dec
jae
xchg
dec
fcoms
clc
mov
stos
cli
mov
and
inc
leave
lret
and
add
les
sti
test
fldcw
push
cmc
stos
in
in
pop
test
nop
mov
popf
pop
shll
fs
mov
dec
mov
clc
hlt
xchg
sbb
adc
ljmp
addr16
xor
jae
add
add
xor
fbld
scas
ljmp
stc
pop
mov
jno
cmp
push
in
sbb
pushf
jne
add
dec
pushf
js
cmp
jmp
mov
cmc
dec
into
add
mov
das
mov
mov
loope
adc
int3
int3
rcrb
dec
jge
test
mov
ljmp
insb
lret
pusha
xor
lods
lea
jno
jae
rcrl
fists
mov
inc
popl
pop
ljmp
dec
jb
daa
cmp
cmp
cmc
and
mov
test
xor
in
push
mov
add
sbb
test
sub
mov
xorl
repnz
push
outsl
add
push
mov
sbb
sub
subb
xor
stos
jno
jg
in
or
mov
lea
jne
xor
xor
cli
adc
push
gs
lods
movsb
jbe
cmp
aaa
push
andb
loopne
mov
rcrl
mov
mov
mov
pop
lret
or
int
cwtl
out
sahf
mov
enter
repz
sbb
adc
fmul
and
movsb
fdivl
test
xchg
fstpl
sahf
pushf
outsb
stc
les
iret
out
lret
pusha
imul
les
insl
sub
shlb
mov
je
adc
rcrl
rclb
cmp
seto
or
neg
popa
in
or
lret
repz
xchg
je
ror
js
sbb
inc
fs
sbb
push
ja
sub
cld
sub
mov
xchg
hlt
hlt
mov
jle
sub
xchg
jne
leave
hlt
mov
loop
cmpsw
fwait
outsl
xlat
out
cwtl
addl
sub
gs
fidivrl
jl
push
xor
repz
jbe
sub
mov
repnz
sub
in
lods
jp
addb
or
jge
fwait
in
sbb
xor
mov
xchg
pop
cmpsl
ja
pop
xchg
mov
mov
hlt
test
inc
movsb
jg
push
lods
jno
jo
out
test
rcll
shlb
lret
sar
mov
add
sub
int3
loope
aaa
and
sub
lea
fmuls
imul
bound
js
stc
mov
test
mov
test
xchg
rolb
cwtl
dec
or
cmp
test
das
jb
orl
or
fisubs
adc
idivl
movsl
lret
lods
or
push
test
push
xchg
xchg
insb
dec
iret
inc
js
out
fsubrs
mov
scas
aam
iret
pop
je
gs
test
inc
ret
cld
pop
xchg
sahf
sbb
mov
mov
sbb
imul
pop
aam
xorps
jo
dec
lcall
cmp
sub
push
loopne
fdivrs
in
xchg
jle
jl
lock
jecxz
jge
or
cmp
movsb
in
dec
ror
jle
sarb
xchg
inc
xchg
clc
ret
pop
fsubl
inc
sub
roll
sahf
int
xchg
cmc
sarl
cmc
xchg
or
jmp
daa
adcl
lds
inc
inc
cmc
or
loopne
inc
add
push
addr16
cmpsl
mov
pop
mov
pop
outsb
inc
cmc
fcmovnu
adc
loope
pop
cs
adc
push
sub
and
dec
adc
jo
sub
xor
cmc
push
mov
lods
push
sub
sub
addr16
cs
jg
cmp
ss
inc
sbb
xchg
jmp
mov
adc
in
pop
or
shll
dec
or
movsb
sti
adc
jp
xor
ret
dec
mov
and
jns
cmp
mov
cltd
pop
push
xchg
in
xor
cs
sahf
cmp
dec
xor
mov
addl
dec
nop
sbb
sub
adc
mov
jnp
xchg
insb
cmp
aaa
rcrb
outsl
fwait
cmc
in
cmp
inc
les
cltd
jae
std
test
dec
jbe
or
push
enter
inc
sub
popf
icebp
mov
incl
add
loope
jl
jbe
das
fidivrs
cmpsb
sbb
pop
rolb
sahf
add
test
mov
xchg
xchg
pop
push
or
iret
jbe
mov
sub
cmp
aas
and
lock
jnp
xchg
ret
aam
jmp
xorl
inc
ficoml
xchg
rcrb
aas
test
xchg
add
loopne
loopne
movsl
xor
cmpsl
add
shll
and
nop
mov
push
fsubrl
adcb
sub
das
ds
mov
inc
test
ljmp
mov
pop
mov
int
lods
icebp
sbb
int3
std
js
mov
movsb
xchg
mov
push
cmp
mov
mov
xchg
xchg
dec
jmp
pop
shll
push
fmul
je
gs
adc
sarl
out
loop
and
mov
lods
mov
mov
add
xchg
sbb
and
movsl
jl
fbstp
push
test
mov
pop
insl
dec
add
daa
sub
leave
cmc
jno
nop
les
movsl
jo
test
fcomip
stos
sbb
and
or
je
sub
sbb
je
xor
or
mov
aad
fsubrl
mov
xor
sbb
inc
rcrb
and
mov
pop
dec
mov
dec
daa
out
inc
inc
cs
xor
outsl
sbb
xlat
push
int3
fwait
and
mov
and
inc
scas
add
fldenv
mov
je
arpl
in
cmpl
sahf
jmp
mov
addr16
mov
loope
sbb
inc
dec
stos
pop
mov
sub
xor
dec
rcrb
subb
push
fld
jb
lods
into
sbb
ja
pop
hlt
divl
sbb
pop
xor
xchg
sbb
pop
or
mov
mov
adc
add
cld
fldl
jbe
xchg
lods
jno
fcompl
sub
push
imul
stos
in
pop
add
pop
cli
pop
jp
insb
std
jmp
cmc
pop
fisubl
ss
fsubrl
xor
or
clc
mov
lea
fisttpll
lods
mov
push
iret
push
aas
popf
xor
cs
lahf
cltd
sbb
cmp
push
jecxz
inc
mov
out
scas
int3
xor
mov
je
popa
cs
and
loopne
mov
cmp
push
jge
fisttpl
outsb
xlat
fcmovnu
xchg
and
or
add
cmp
into
xchg
dec
mov
adc
ret
dec
fsin
or
dec
adc
add
fstps
stos
add
das
xor
inc
out
cltd
mov
mov
out
add
ss
and
adc
xlat
xchg
bound
cmpsl
call
mov
pop
scas
outsb
push
hlt
or
adc
lcall
lods
cmp
push
pop
ficompl
push
xchg
sub
push
test
cs
adc
push
inc
sub
jnp
cmp
fwait
xor
lods
mov
in
cmp
mov
jg
adc
lods
and
jo
sub
fadd
test
adc
sbb
lods
fnstsw
lods
je
js
movsl
aaa
int3
jb
push
dec
cltd
test
sbb
pop
arpl
popa
inc
testb
mov
pop
aam
fisttpll
xlat
xor
in
jae
xchg
fisttpll
push
push
add
dec
inc
mov
adc
testl
sub
xchg
lahf
sbb
mov
jle
push
movsl
into
sbb
iret
repnz
xorb
popf
xchg
sbb
mov
adc
testb
test
adc
mov
insl
jo
push
or
lret
outsl
xor
cmp
pop
push
lds
loop
fimuls
leave
xor
inc
je
mov
movb
lahf
push
iret
popl
or
xor
jbe
cld
and
xchg
fidivs
stc
and
mov
in
movsl
push
iret
fdivl
jmp
lret
ss
out
mov
inc
hlt
fdivrl
lock
and
mov
or
enter
lret
xchg
pop
inc
inc
or
sub
int3
out
or
clc
mov
mov
fs
ret
ja
subb
mov
xchg
iret
lcall
xchg
inc
mov
mov
hlt
std
cli
push
sub
roll
cmpb
fnstenv
movsl
cs
and
adc
cmpsl
adc
and
adc
jns
adc
mov
dec
mov
pop
push
cmpsl
cmp
mov
inc
push
out
add
jno
outsb
xchg
sub
dec
scas
inc
add
pop
add
xchg
jg
pop
es
push
jno
fnstenv
mov
mov
add
push
lea
add
jbe
xor
in
dec
sbb
cmp
push
xchg
push
call
bnd
dec
aad
add
mov
adc
filds
outsl
and
hlt
or
mov
imul
mov
imulb
or
int3
adc
ja
aaa
xor
pop
aas
add
out
aam
sbb
nop
movsl
test
sgdtl
repnz
and
xor
aaa
pop
inc
mov
lret
mov
jl
dec
dec
es
dec
outsb
dec
or
pushf
push
repnz
bound
cmpsb
repz
xchg
loop
bnd
sbb
add
mov
arpl
xchg
out
js
inc
push
and
jecxz
popf
cmp
mov
mov
loopne
xchg
movb
fisttps
push
rcll
xchg
sbb
divl
jecxz
push
mov
cmp
dec
pop
dec
cli
fiaddl
cmp
inc
dec
mov
or
insl
inc
xor
or
jns
data16
jb
lods
xor
out
xor
lods
mov
sysenter
mov
and
add
jb
fwait
add
cltd
ja
jp
daa
mov
lret
hlt
fildl
or
loope
sbb
push
fistpll
cmp
jg
jg
xchg
mov
test
push
mov
cmpsl
sbb
lds
xchg
adc
int3
fs
push
gs
push
mov
stc
mov
jecxz
fistpll
dec
adc
mov
leave
mov
js
pop
inc
mov
shll
jecxz
jecxz
sahf
nop
xchg
int3
cmpsl
cs
push
lock
adc
jge
repz
push
cld
mov
clc
js
movsl
jno
or
lahf
outsb
pop
add
ret
lret
into
or
mov
jecxz
add
outsl
dec
stos
int3
adc
xor
lods
and
pushf
inc
fucomip
inc
mov
mov
cmpsl
incl
mov
add
rdpmc
add
mov
and
loopne
sub
aam
mov
xor
pop
int
fwait
lcall
test
push
mov
icebp
rorb
push
test
repz
push
mov
pop
daa
addr16
mov
sahf
adc
jle
rcr
jo
repz
pop
mov
out
aad
jge
and
daa
add
jno
and
das
pusha
mov
sub
mov
aaa
daa
stos
mov
jecxz
mov
lahf
inc
out
sbb
dec
popa
fisubrl
loopne
xchg
les
cmp
outsb
or
movsb
cwtl
mov
inc
icebp
hlt
mov
inc
pop
lcall
pop
in
xchg
sbb
mov
and
fwait
adc
dec
mov
pop
xchg
adc
lret
stos
sbb
movl
sbb
fwait
imul
mov
stos
rolb
pop
mov
ss
ret
pusha
sub
sub
imul
inc
cmp
es
mov
dec
push
cmp
push
xchg
inc
push
shl
std
das
xchg
or
adc
mov
mov
lcall
repz
sarb
cmp
xacquire
jb
shll
sbbb
or
cwtl
idiv
mov
xchg
pop
out
mov
aam
stc
jo
or
mov
add
repz
xlat
mov
or
or
test
push
jecxz
popf
pop
movsb
jg
arpl
dec
xor
fs
pop
pop
lret
mov
sub
enter
in
inc
cs
in
outsb
mov
test
xor
xor
cs
fisttpll
inc
addr16
dec
adc
sbb
and
sbb
push
repz
jb
adcl
jo
out
cmpsb
mov
and
cmpsb
outsl
icebp
cmpsb
cs
push
sbb
cwtl
dec
mov
push
xor
xchg
mov
loopne
adc
out
cmpsb
pusha
fs
cmpsb
loopne
cmp
xor
adc
arpl
cmp
sbb
outsl
fstp
xor
inc
mov
lea
subb
push
dec
mov
jne
insb
addl
push
lcall
lret
sbb
lcall
scas
andb
stos
lea
or
stos
xchg
rolb
aam
ja
xor
in
ss
arpl
inc
xchg
jo
add
pop
pop
mov
fs
mov
cmc
mov
shll
fcomps
ret
dec
stos
mov
or
hlt
xchg
popf
push
outsb
pop
rcll
iret
in
ljmp
or
loopne
les
add
mov
push
xchg
jl
repz
mov
dec
pop
lods
adc
in
xor
lcall
lahf
call
addl
push
int
ret
xchg
cld
pop
int3
jmp
sahf
xchg
fiadds
pusha
out
enter
mov
bound
push
dec
mov
repnz
ror
mov
fnstenv
mov
mov
lcall
fsubrs
cmp
ljmp
inc
in
imul
jb
ja
test
push
mov
pop
lahf
sub
aaa
add
notb
sub
dec
adc
int
mov
out
lahf
lods
adc
js
pop
ret
sbb
mov
jo
adc
sbb
jb
cmp
sbb
scas
dec
sar
test
and
outsb
push
sahf
pop
imul
addw
stc
daa
mov
outsl
add
out
pushf
imul
out
pop
in
mov
xchg
mov
addr16
dec
jle
repz
je
dec
jmp
dec
inc
fsubl
outsl
xchg
loope
mov
sub
test
dec
inc
stos
scas
sbb
popf
subl
mov
push
lea
xor
xlat
mov
inc
add
hlt
and
mov
dec
loopne
fisttps
aas
mov
mov
push
pop
stos
sti
add
dec
popa
in
mov
mov
or
shll
lods
sub
aam
mov
mov
inc
adc
dec
dec
dec
fs
fstl
shll
imull
jp
andl
cmpsl
test
lea
adc
hlt
jnp
repnz
je
cmp
inc
mov
test
push
mov
adc
push
add
cmp
icebp
fadds
sub
test
int3
out
out
stos
movsl
add
ja
dec
jae
sarl
push
setae
notb
imul
or
cmp
inc
les
fbstp
xor
push
xchg
filds
pop
dec
or
pop
popf
mov
push
add
mov
push
in
dec
fneni(8087
cmp
mov
push
loop
cs
lahf
or
lahf
mov
or
sbb
fs
rclb
int
dec
and
cmp
push
stos
dec
not
lock
aas
cli
mov
adc
pusha
add
jno
popa
adc
outsb
stc
lea
add
xor
dec
pop
aaa
mov
mov
or
mov
push
pop
and
sbb
mov
cmp
jne
popa
xor
mov
or
pusha
mov
xchg
daa
ss
dec
mov
cmpsl
or
aas
ja
out
add
les
rorb
aam
push
xor
and
xor
lds
or
loop
mov
popl
or
fiaddl
repnz
scas
mov
cmp
pop
sbb
and
aas
or
mov
mov
mov
pop
jecxz
popa
fcoms
or
rorb
in
aaa
pop
mov
mov
fcomps
sub
int
mov
aam
jmp
lods
les
xlat
sub
hlt
or
sbb
das
movsl
in
clc
mov
scas
andb
jno
scas
lds
adc
jp
loopne
cmp
pop
rolb
aam
sub
cmp
mov
mov
loope
stos
aas
stc
test
jo
inc
inc
cmp
push
inc
dec
adc
adc
adcb
popf
inc
xchg
dec
loopne
or
inc
inc
rorb
xchg
fistps
jns
or
adc
adcl
pop
fnstenv
xor
mov
mov
or
dec
cld
loopne
xchg
in
adc
test
addb
addr16
nop
mov
adc
repnz
mov
push
js,pn
mov
sahf
mov
inc
mov
sbb
les
cld
or
idivl
outsb
stc
ljmp
imul
cmc
movsl
shl
inc
jno
shlb
cld
cmp
jno
dec
arpl
and
mov
dec
popa
data16
mov
dec
or
cmp
insb
pop
cs
inc
ret
mov
jmp
popf
scas
push
int
xor
div
nop
fsubrl
daa
jmp
push
cmp
jp
mov
out
pop
push
xchg
pop
cmpl
rcrl
daa
out
cs
lock
mov
in
pop
and
arpl
dec
test
add
aam
call
aad
jl
cmp
and
dec
sbb
cmp
and
frstor
sbb
pop
je
fcomp
sub
add
xchg
adc
mov
sbb
mov
pop
in
insb
cmpsb
pusha
inc
xlat
shll
dec
push
xchg
pop
or
mov
pop
cmp
je
jbe
jl
in
aam
sub
cmp
in
jb
mov
mov
scas
jl
jbe
int3
inc
je
ret
pop
pop
xchg
insb
cmp
lods
lods
mov
and
outsb
lods
mov
mov
test
gs
loop
rorl
pop
imul
jmp
cs
cmp
mov
add
and
xor
fistpll
rol
jl
orb
insb
cmp
or
push
mov
cmp
insl
sub
dec
icebp
push
insl
pop
and
mov
push
lahf
sub
cmp
jno
inc
cmc
xchg
jnp
test
cli
pop
shrl
jb
gs
cmp
jbe
add
sub
or
fdivr
pop
fisubl
roll
xchg
ficompl
jecxz
test
push
mov
inc
dec
out
imul
pop
push
shrb
jge
push
push
stc
fs
and
fisttps
mov
out
jnp
jb
push
outsb
imul
gs
and
sub
mov
hlt
iret
fldcw
mov
mov
jb
dec
lock
adc
mov
push
jno
aas
ljmp
aad
sbb
nop
test
aas
dec
hlt
test
mov
stos
fcmovbe
dec
xchg
testb
dec
sti
stos
js
mov
ret
pop
xchg
rorl
sub
mov
arpl
add
lahf
ret
mov
add
in
cwtl
xor
dec
lods
add
sbb
mov
sbb
mov
xchg
push
fstl
jo
lret
iret
push
imul
add
dec
push
jmp
xor
mov
imulb
mov
mov
outsl
adc
push
adc
adc
daa
mull
or
sub
cmp
cmpsl
jo
rol
mov
dec
test
repnz
rorb
pusha
fdiv
jns
xchg
test
lahf
pop
xchg
add
rorb
mov
out
and
mov
xchg
jge
bound
popl
mov
and
lea
sbb
cmp
test
push
pop
mov
jnp
xchg
daa
scas
ss
jae,pn
xchg
fisttpll
fsts
insl
and
pop
sbb
int
pushf
xchg
ret
mov
sbb
fsubr
leave
lret
popl
sbb
pushf
dec
out
mov
stos
jecxz
adc
cmp
testl
cmp
pop
adc
sub
push
movsl
cld
jmp
and
and
rcrb
or
sub
or
push
jbe
std
mov
cli
xorl
std
jnp
and
fisttps
test
xlat
mov
fistl
aas
out
xchg
push
push
mov
jge
dec
dec
cmp
inc
xor
and
fldl
fs
ds
or
push
xor
and
iret
sbb
sub
loope
fwait
ret
ret
loopne
cmp
mov
out
sub
push
push
jg
add
jb
inc
loop
adc
fs
lods
cli
mov
repz
lds
adc
mov
jmp
in
dec
jmp
dec
dec
inc
loopne
fcomps
in
loop
mov
xchg
popf
cmp
adc
push
mov
es
push
pushf
loope
cmpsl
daa
int
adc
jae
imul
jae
sbb
jmp
jmp
iret
or
iret
cltd
mov
or
add
fmulp
adc
xchg
inc
cmp
lcall
adc
sbb
clc
adc
mov
add
inc
push
sahf
out
xchg
sub
sub
cmc
jp
push
int3
decl
dec
mov
mov
mov
roll
insb
cli
subl
mov
icebp
push
cmp
sub
inc
stc
pop
push
subl
pop
sbb
into
cmp
pop
push
xchg
sbb
or
jno
mov
mov
jp
lret
cmp
test
pop
push
outsb
jle
xor
push
gs
in
push
inc
add
sbb
fwait
pushf
and
hlt
xor
je
in
mov
xchg
and
pop
ret
xor
aam
push
dec
shlb
xor
mov
lahf
jne
push
bound
fld1
out
test
insl
mov
push
lods
pop
shlb
dec
les
adc
adc
in
lods
xchg
es
leave
and
sti
jecxz
xchg
je
xchg
jle
test
and
inc
adc
mov
mov
ror
loop
push
push
mov
cmp
sahf
push
sbb
es
fdivrs
adc
pusha
pushf
mov
jae
cld
cmp
push
jp
mov
roll
aad
cmpsb
pop
xor
in
add
mov
ret
and
lret
mov
add
fisttpll
adc
out
cmp
jnp
std
sub
sub
xorl
push
lods
fnstcw
stos
bnd
push
jmp
add
sbb
es
lea
mov
movsl
out
nop
push
xchg
cs
cli
or
sbb
sbb
add
push
xlat
sbb
fstpl
loopne
xchg
aam
sti
mov
gs
jmp
add
mov
in
aam
out
scas
popf
pop
xchg
mov
mov
and
dec
sbb
imul
icebp
sahf
enter
shll
mov
mov
addr16
adcl
sbb
jno
lea
lea
fcomp
jo
mov
test
mov
pop
ja
push
sbb
and
shlb
ja
xor
shll
xlat
ss
divb
lods
add
dec
xor
push
fists
dec
in
mov
or
int
xchg
cld
jecxz
int3
xchg
and
lods
adcb
add
pushf
jecxz
xchg
popa
out
aas
jae
rol
sbb
popa
mov
js
mov
pop
repnz
or
and
cmc
fwait
or
push
pop
cwtl
jb
daa
sub
mov
mov
add
cmc
gs
cmp
popa
dec
in
aas
inc
xchg
scas
inc
ss
fsubs
push
xor
test
ja
mov
rorb
lcall
loope
pop
push
nop
jb
aam
jle
scas
popf
dec
lock
movsl
sarl
leave
xor
adc
adc
repnz
mov
mov
in
jle
insl
push
lds
jb
jmp
cli
pop
scas
jg
push
and
imul
fisubl
arpl
add
push
sbb
fisttpl
jb
jecxz
insb
xor
pop
and
add
cli
hlt
dec
push
jne
sbb
add
adcb
sbb
mov
mov
mov
mov
dec
xchg
stos
sete
sub
xor
mov
imul
in
insl
lahf
xchg
adc
lret
lods
jecxz
mov
lahf
loopne
jbe
and
loope
imul
or
movsb
loop
xor
test
fidivrs
mov
sbb
add
scas
push
les
fmuls
hlt
jl
mov
push
cld
fstl
bound
shlb
jns
pop
mov
test
fwait
loopne
aad
xor
pop
cmp
push
out
lret
mov
mov
or
dec
xchg
mov
sub
add
sbb
xchg
sbb
add
xor
xor
ds
ja
mov
add
push
test
pop
mov
sbb
and
pop
leave
aad
sub
lret
loop
jl
mov
sub
je
pop
mov
pop
inc
mov
dec
mov
insb
mov
sub
setg
dec
cli
cmpsl
daa
xor
cltd
daa
imul
push
pop
cmp
cmpsb
add
bound
cmp
and
sbb
out
xor
gs
ja
arpl
ljmp
xor
cltd
lcall
sbb
pop
testb
daa
mov
xor
ljmp
ficompl
jmp
mov
and
jp
sahf
jmp
cmpsl
add
add
inc
add
xlat
pop
cwtl
movsb
movsl
cmpsl
jge
xchg
adc
jo
add
addb
in
mov
mov
lret
adc
ret
cmp
xchg
xor
mov
ret
xlat
jmp
sub
call
add
push
lret
insl
mov
dec
push
orl
hlt
mov
cmp
fiadds
rcrl
mov
outsl
leave
cld
je
jns
push
daa
push
int3
xchg
xchg
cmp
jbe
imulb
lret
push
nop
int
int3
sbbl
arpl
mov
and
dec
pop
shrl
int3
pop
scas
add
bnd
push
add
pop
push
cmpsb
aam
arpl
cwtl
xchg
xor
iret
repz
clc
push
mov
dec
pop
aaa
popf
sbb
or
mov
pop
xchg
cmpsl
sub
clc
mov
pop
fstpl
mov
jmp
popa
rcrb
stos
lcall
xchg
adc
jmp
mov
out
cli
sbb
in
and
std
xor
jp
aam
lret
dec
adc
hlt
push
pop
lea
fdivrp
mov
jns
push
push
jmp
lea
in
insb
inc
lock
js
lret
fsubrp
jl
inc
div
sub
push
sbb
aad
add
mov
push
push
fs
fnstsw
or
xor
lods
rol
xchg
mov
outsb
mov
mov
mov
or
iret
jne
gs
xlat
rorl
push
mov
inc
xchg
dec
lods
and
ret
andl
push
fidivs
mov
stc
int
and
aas
ret
or
roll
ficoml
les
pop
push
mov
mov
sub
jb
scas
add
sarl
xchg
inc
sbb
inc
test
lahf
inc
add
mov
cmp
and
ret
dec
dec
cmc
cli
cmpsl
jecxz
mov
fisubs
sbb
sbb
jl
jns
insb
mov
int3
out
loop
jnp
sub
add
adc
pusha
lods
sub
xor
icebp
sahf
mov
ljmp
ds
popa
and
leave
push
jno
cmp
out
pop
pop
jnp
in
sub
sub
and
movsb
in
sbb
std
fsubs
inc
add
clc
data16
out
addb
pop
push
mov
ret
mov
out
mov
loope
push
test
rcrl
shrb
mov
push
jecxz
sbb
test
lahf
push
ja
push
call
push
dec
lds
sbb
pop
mov
xchg
ficoml
fnsave
jg
iret
or
cmp
sub
jns
pop
fs
lods
rcrb
xor
popa
pop
cltd
test
adc
das
pop
out
xor
aas
sbb
fbld
jecxz
loop
push
not
xchg
loop
adc
mov
lea
fiaddl
js
inc
xor
or
mov
and
xorl
sub
nop
jne
xchg
mov
sbb
les
rcr
je
imulb
dec
jno
popa
out
sahf
dec
imul
dec
orb
gs
cmp
fcomps
lock
incl
mov
xchg
push
pop
daa
pop
xchg
inc
pop
dec
ja
sbb
sub
ret
lret
jmp
jmp
rcll
notl
insl
jp
fcomps
fidivs
sar
xor
sbb
in
ret
push
rcl
in
inc
add
cwtl
or
lret
leave
addl
lea
sub
mov
test
in
cmpb
fisttpll
das
lret
xor
xchg
int
pusha
adc
loop
adc
ret
sbb
push
jb
mov
cmp
adc
push
test
sbb
mov
push
add
mov
dec
aas
loopne
sbb
inc
stos
stc
sbb
divl
mov
sbb
sub
jl
push
test
imul
inc
in
scas
pop
clc
mov
push
cmp
xorl
mov
sahf
inc
imul
push
fcomp
xchg
stc
push
les
adc
imul
push
sbb
mov
cmpl
add
fistl
test
stos
fcmovb
repnz
aaa
add
jp
aam
jbe
xchg
popa
std
aad
xchg
jecxz
stos
inc
mov
adc
stc
mov
leave
gs
jge
sbbb
jno
mov
cmc
cmp
push
lea
decl
test
jl
call
in
ss
scas
push
mov
cmp
lcall
in
inc
pop
insb
dec
pushf
xchg
add
pop
adc
and
testl
pop
add
xchg
adc
sbb
cmp
sti
sbb
push
xorb
cmp
mov
out
dec
fdivs
dec
dec
insb
in
fwait
xchg
mov
inc
repz
adc
push
outsl
clc
gs
es
jo
leave
pop
push
mov
mov
cmc
mov
loope
imul
jge
mov
cwtl
test
imul
lock
sub
xor
push
je
push
mov
cli
push
xchg
flds
aaa
cli
dec
mov
mov
dec
xor
jb
sub
or
shll
adc
add
sub
push
nop
inc
adc
xor
jne
adc
scas
pop
adc
sub
ja
jg
mov
fadd
ljmp
sbb
leave
cmc
rcll
jbe
gs
out
negl
inc
out
fistps
nop
aaa
lds
and
out
push
xchg
push
in
inc
pop
lds
arpl
test
negb
and
cltd
pop
insl
psrld
sbb
ja
mov
cmpsl
scas
add
fnstcw
int3
lret
pop
pop
sbbl
add
sbb
jo
imul
cltd
sub
imul
xchg
adc
xor
fwait
hlt
jns
outsb
pop
push
sub
ja
and
insb
pusha
and
dec
or
cmp
push
fstps
add
mov
push
mov
mov
mov
pop
dec
cmc
int3
cltd
xor
fwait
sti
je
int
push
cmp
xor
adc
aam
dec
lods
push
sti
out
add
inc
jno
dec
rcrl
stos
mov
aad
add
out
pop
test
movsb
sahf
or
xor
repz
inc
inc
jo
mov
mov
inc
movntq
stos
jmp
sub
outsb
xchg
out
idiv
xchg
roll
pop
out
divl
aas
rorl
test
push
test
rcr
int3
pop
aam
xchg
into
mov
ja
out
mov
shlb
and
outsb
jmp
movsb
dec
cs
push
jno
and
adc
push
nop
xchg
sbb
cwtl
sti
or
insb
test
push
push
repnz
fdivrs
mov
clc
clc
mov
icebp
or
cs
dec
test
jl
rorb
bound
loopne
movsw
inc
and
test
sarb
fldenv
and
cs
jmp
mov
loopne
fs
aas
incb
mov
sbb
lcall
cmpsb
outsl
cmp
bndstx
fdivs
mov
xor
mov
push
popf
sbb
push
jb
fdivs
lret
hlt
inc
push
movsl
push
aam
cmc
mov
call
stos
aas
cmc
cmp
roll
mov
enter
fisttpll
test
lea
rdpmc
int3
mov
xor
sub
fistpll
stos
adc
mov
dec
pop
jge
icebp
jo
test
cmp
test
pop
testl
aas
pop
xor
cli
jg
cwtd
data16
inc
cmp
push
xor
out
sub
push
fidivl
pop
cld
sub
and
jmp
scas
xchg
imul
inc
sub
pop
pop
loope
xor
xchg
js
je
ret
lods
bound
inc
push
jbe
push
sub
leave
aad
mov
and
adc
sahf
sub
sahf
inc
jmp
xor
loopne
dec
mov
fwait
test
daa
aaa
push
lret
loop
aad
int3
iret
xor
cmpsb
cld
hlt
mov
inc
dec
push
mov
js
hlt
fdivrs
aas
ss
adc
lods
scas
xchg
inc
lahf
in
cs
jp
les
mov
push
mov
and
data16
ret
rcrl
orl
fistl
xchg
int
jmp
and
imul
add
and
mov
adc
mov
stos
inc
mov
addr16
mov
fisubrl
sub
jl
jne
push
xchg
sbb
add
jo
pop
stos
pushf
sub
push
hlt
lods
cld
pop
lahf
aas
aad
sti
jae
lods
push
fwait
nop
xchg
lret
lods
or
enter
mov
arpl
sti
mov
xchg
iret
insl
cmp
popf
sbb
jno
xor
sahf
subl
cli
sub
je
addl
inc
adc
xor
cs
jno
aad
das
adc
mov
gs
xor
loope
popf
pop
add
sub
idivl
or
and
dec
cmp
int3
sub
out
notl
mov
mov
jnp
mov
insl
test
cmp
je
in
popa
mov
repnz
mov
pop
pop
aam
xchg
inc
push
movsb
aas
fistps
inc
ljmp
sbb
iret
mov
add
dec
and
shrl
add
inc
rol
cmpsb
and
inc
push
cmpsb
mov
sub
sub
push
jae
sub
data16
xchg
test
xchg
jge
daa
mov
pop
ds
xchg
int
push
pop
mov
subl
pop
dec
pushl
out
insb
cmp
in
xchg
cmp
cs
mov
addb
imul
and
lahf
cmpsb
inc
adc
push
jo
adc
inc
pop
addr16
jbe
out
cli
sub
jns
xchg
pop
sti
add
or
roll
lret
test
scas
popf
xor
in
mov
xorps
aaa
sbb
or
xorl
mov
test
stos
sub
hlt
jae
inc
js
push
ja
jne
dec
xor
mov
pop
or
fucomp
xchg
sub
push
mov
inc
dec
xchg
push
sub
xor
cmc
push
aam
adc
into
xlat
push
ljmp
dec
push
jne
mov
es
or
enter
jecxz
xlat
hlt
push
mov
fdivp
dec
popaw
jg
shlb
xor
mov
out
jp
out
into
pop
out
fs
xchg
cmp
jecxz
iret
xchg
dec
pop
mov
shr
xor
dec
movsb
mov
pop
mov
lret
dec
mov
fadds
les
into
xchg
sbb
loope
mov
push
testb
add
das
pop
adc
arpl
mov
mov
je
sub
mov
mov
dec
test
or
jne
mov
std
jl
jl
iret
lods
rcr
neg
mov
mov
loopne
imul
sahf
jmp
or
sbb
xor
inc
ficoml
cmp
cmp
rcrb
iret
repnz
mov
nop
add
jecxz
mov
push
repnz
sbb
adc
pop
gs
xor
nop
jge
popa
mov
cmp
mov
lcall
daa
push
xor
int
shlb
add
loopne
mov
outsb
or
stos
cmp
sbb
arpl
mov
jo
push
pusha
inc
dec
sub
inc
xor
jp
push
or
idivl
lods
lods
call
dec
push
and
aaa
int3
data16
sti
movsb
les
push
pop
cld
cmp
out
andl
add
test
sti
and
movsb
push
int
out
push
aas
xchg
mov
and
push
and
cli
cmpsl
cmp
and
push
cmp
call
mov
pop
dec
push
mov
adc
popa
mov
xor
or
mov
test
xor
insl
xchg
push
scas
inc
lds
fldz
dec
push
push
jns
mov
sub
out
or
lcall
adc
inc
nop
fwait
cmc
mov
mov
loope
jae
pop
lret
push
cmpsb
fcompl
push
push
or
pop
icebp
dec
popa
jecxz
shr
mov
pop
out
cmp
mov
inc
sti
mov
shll
jmp
and
dec
cmp
scas
into
or
pushf
jne
pop
xlat
xchg
sbb
mov
out
repnz
cmpsb
jle
call
cli
push
mov
cld
pop
mov
push
aad
add
xchg
sbb
repz
nop
out
imul
fdivs
xorl
imul
mov
jecxz
sbb
sub
sbb
push
xor
dec
mov
jl
jnp
push
pusha
ss
fistpl
sti
cmc
push
mov
shlb
test
push
outsb
push
cs
xlat
xchg
lcall
pop
adc
or
cmpsl
mov
testl
dec
cmpsl
insb
sub
push
cmp
xor
cltd
mov
lds
test
popa
test
in
cmp
imul
or
xchg
add
mov
sub
mov
add
xor
mov
sbb
repnz
xchg
xchg
adc
aad
aam
mov
mov
in
daa
push
fistpll
sbb
mov
inc
sub
cmp
adc
insl
movb
adc
dec
stos
push
xchg
aam
mov
movl
push
test
pusha
adc
jns
xchg
push
test
testl
fcmovnbe
sub
jb
ret
pop
int
and
popa
mov
jo
ljmp
cmp
mov
xchg
out
cmpb
sub
cmc
fdivr
mov
fisttps
xor
es
pushf
cmp
rclb
dec
dec
aad
jne
xor
jnp
xor
jns
push
ss
xchg
dec
xchg
xchg
dec
test
jne
or
out
jg
in
repz
orl
push
pop
fsubrs
pop
xchg
ljmp
cmpsl
scas
xchg
mov
sahf
mov
push
adc
shl
cmp
outsl
or
jb
fnsave
movsb
xchg
lret
lock
jnp
jl
rorl
ret
repnz
xor
xor
jo
pop
inc
sub
dec
mov
into
fsubr
aam
test
pop
pop
mov
adc
sbb
les
aaa
mov
lds
mov
out
pop
aam
pop
mov
cmpsl
mov
ret
pop
or
fwait
mov
sub
xchg
sub
pop
and
icebp
mov
xchg
mov
mov
leave
adc
aas
sti
xchg
ret
jle
and
filds
jbe
gs
push
in
inc
ret
out
sub
inc
lret
lret
inc
mov
cmp
ljmp
adc
sub
jp
and
test
mov
loope
and
push
movsl
imul
xor
cmp
test
xchg
outsb
and
rcr
pop
popa
push
lods
or
fmull
inc
das
dec
pop
add
sub
loopne
dec
aas
inc
aas
ss
aam
push
imulb
pop
sub
push
push
jns
shrl
mulps
jp
bswap
mov
fwait
neg
sahf
bound
and
in
xchg
js
sbb
mov
rcl
add
jmp
mov
fidivrs
xlat
aas
aam
movl
out
inc
int
fidivs
add
inc
mov
addl
inc
or
sub
jb
mov
adc
or
std
test
mov
mov
mov
fstps
mov
mov
in
or
iret
inc
sbb
loopne
ljmp
lahf
lds
lret
inc
insl
aaa
pop
add
mov
xor
lcall
xor
adc
into
leave
cmp
push
xor
jne
and
fimuls
adc
cmp
pop
add
adcl
das
mov
pop
test
test
pop
jg
test
repnz
fs
xor
cld
movsl
lahf
fwait
sbb
cmp
push
lea
bound
repz
mov
arpl
push
pop
and
cmp
movsl
test
push
outsl
int
scas
sbb
or
sbb
cmp
adc
loopne
jo
sbb
jmp
pop
jmp
pop
dec
mov
dec
mov
adc
and
fstpt
add
leave
in
movsb
and
adc
mov
rorb
aas
sub
inc
fwait
test
into
pusha
aaa
mov
decl
fcoml
jno
jl
jg
push
mov
leave
lea
or
xchg
jo
cmpsl
adc
jl
inc
js
jmp
les
in
xor
mov
scas
or
insb
outsl
sub
add
mov
inc
pop
dec
mov
leave
sbb
mov
test
cwtl
gs
pop
mov
ljmp
cmpsb
imul
rorl
pop
mov
xor
out
lea
enter
and
mov
leave
imul
out
or
aad
insl
shrl
and
out
mov
push
mov
add
mov
clc
mov
xor
and
mov
gs
add
adc
adc
add
adc
cmp
arpl
out
jb
shrb
cmpb
inc
dec
mov
xchg
jge
xchg
jmp
aad
mov
jmp
pop
popa
mov
mov
inc
shlb
arpl
fcoms
imul
addr16
je
daa
inc
enter
pop
xchg
xchg
pop
mov
es
add
cmpsb
int3
dec
add
addr16
aad
stos
int3
add
dec
stos
les
mov
and
adc
addl
add
mov
outsb
fldt
push
lods
push
rcrb
jle
mov
pop
pop
cmp
mov
fidivrs
sbb
decl
test
cmp
jae
ret
xor
sub
jecxz
xchg
add
frstor
test
add
icebp
inc
add
ja
test
inc
dec
mov
inc
inc
xchg
mov
jb
mov
lods
xor
xchg
inc
push
stos
lods
add
mov
jmp
xchg
jecxz
xchg
xchg
shlb
dec
mov
out
jo
dec
pop
push
cmp
mov
rolb
inc
leave
sahf
sbb
lcall
pop
dec
shlb
xorl
adc
inc
ret
jbe
pop
aam
sub
cmp
clc
outsb
rcll
adc
push
mov
pop
fisttpl
cld
outsb
adc
int
mov
loope
xchg
cmp
jp
pop
idivl
push
cli
in
lret
stos
cmp
hlt
in
mov
lahf
pop
cmc
and
std
inc
dec
xchg
testl
push
jecxz
jl
cmp
push
push
es
movlps
adc
mov
fwait
xor
dec
pop
mov
mov
push
notl
mov
dec
dec
xchg
mov
inc
sub
das
add
dec
sbb
test
outsb
rcl
ficoml
ror
xor
add
inc
stc
hlt
jmp
or
movsl
movsb
add
mov
clc
add
push
mov
out
arpl
add
stc
das
xlat
mov
es
jo
mov
push
rcll
sbbl
test
xlat
mov
dec
or
sbb
xor
test
decl
daa
pusha
pop
femms
pop
xchg
outsb
sbb
arpl
in
sti
pop
mov
in
cmp
imul
paddusw
sbb
cmp
push
aas
push
inc
cmpsl
or
cmp
and
or
aas
out
sbb
mov
hlt
cmpsl
aas
pop
or
cmp
sti
aad
sub
mov
mov
les
fildl
or
mov
push
aaa
in
or
pop
or
test
outsl
sarl
inc
mov
dec
aad
pop
cwtl
jp,pt
push
les
std
aad
fadd
dec
in
cmpsl
in
xlat
xor
cmp
sub
or
cmp
xchg
xchg
cmp
mov
cmpsb
test
iret
inc
pusha
pop
push
inc
add
push
push
pop
inc
xor
ret
lods
and
ror
aad
ja
insb
cmpsb
mov
out
jae
popa
pop
pop
loop
inc
mov
fsubrs
ss
stos
sub
int3
outsl
stos
xchg
mov
cmp
aaa
int3
movsl
push
cld
ficompl
rorb
ret
and
mov
pop
cmp
xchg
pushf
push
add
lods
loopne
in
std
icebp
xor
mov
inc
cmpsb
dec
out
fistpl
dec
xchg
adc
std
test
xor
cs
leave
stos
xchg
inc
pop
xchg
loop
sbb
mov
add
shl
hlt
fstpt
xchg
jns
xor
adc
push
pop
popf
sub
sbb
jecxz
xor
negb
jge
mov
push
and
add
jne
pop
jg
rolb
fistps
or
loope
iret
dec
imul
movsl
cmc
jbe
sub
mov
push
push
push
inc
mov
test
dec
mov
add
pop
add
leave
scas
out
pop
mov
in
jle
loop
frstor
cmpsl
pushaw
shr
pop
push
push
in
loop
popa
mov
xchg
sub
push
or
popa
decl
inc
popf
into
sub
das
into
loope
pop
pop
xor
mov
in
sub
test
mov
ret
jns
mov
adc
or
movsb
pusha
stos
mov
arpl
mov
ret
add
sub
jbe
mov
popa
clc
jnp
iret
push
scas
xchg
dec
jns
nop
sub
pop
mov
test
jnp
push
cs
and
mov
ret
mov
add
xchg
jbe
push
call
call
int3
dec
jmp
subl
mov
xor
inc
inc
pop
and
cmc
sub
xor
xchg
fsubr
push
sub
mov
xor
loop
daa
cmp
sarl
popf
subl
cwtl
mov
and
push
enter
pop
mov
jbe
cmp
test
shr
das
std
imul
faddl
and
mov
aad
fbstp
add
lahf
pop
outsb
cmp
imulb
rcrb
dec
nop
jp
ficomps
adc
xor
je
roll
bound
pop
inc
and
arpl
lds
popa
in
inc
mov
cmp
in
stos
mov
mov
arpl
jne
lds
push
mov
orb
into
cltd
pop
pop
cmovp
gs
sbb
add
and
shll
mov
pop
je
sahf
or
mov
aad
test
rolb
loopne
test
adc
mov
loope
push
pushf
loopne
enter
pushf
xchg
cltd
mov
push
sub
shrb
xchg
jmp
mov
sub
push
and
mov
xchg
data16
out
cs
sub
pop
outsb
stos
jl
pop
lods
mov
push
std
sub
test
mov
xchg
or
scas
xchg
fistps
loopne
mov
cmp
mov
mov
lock
fdivrs
fisttps
repnz
mov
cmp
test
add
push
adc
xor
lods
mov
pop
jmp
sahf
jns
xor
das
addb
rorb
dec
inc
lret
call
pop
cvtdq2ps
out
iret
xor
push
mov
lds
xchg
xor
pop
push
pop
stos
xlat
cmp
sbb
ja
dec
arpl
mov
xchg
pop
popa
or
and
xor
arpl
arpl
dec
prefetcht2
add
pop
arpl
ss
addr16
sbb
fwait
pop
je
stc
xchg
shlb
jg
mov
aaa
data16
test
sub
mov
jns
lahf
cmp
inc
ss
imul
inc
xchg
aas
and
lea
mov
pop
jmp
in
das
mov
add
into
jns
jno
cmp
je
scas
out
repz
mov
and
call
inc
xchg
xor
cmp
pushf
sti
mov
dec
cltd
aad
loop
mov
sub
in
adc
popa
mov
cmp
fmull
add
mov
sub
push
inc
mov
bound
jb
lret
cmp
jp
hlt
popf
or
inc
sub
outsb
inc
or
pop
dec
mov
lods
adc
loope
push
in
aas
xchg
mov
lcall
sub
xor
xorl
mov
dec
in
bound
xchg
fwait
div
scas
lods
orl
repnz
adc
clc
sub
in
ss
call
or
mov
mov
mov
push
loopne
jnp
clc
push
mov
jns
dec
dec
xchg
cs
test
adc
daa
ret
js
jle
gs
dec
push
jl
repz
xor
out
push
jmp
push
ret
test
dec
sahf
sar
jmp
dec
mov
scas
mov
out
fisubs
adc
shlb
sarl
test
mov
and
sub
loop
push
inc
mov
addr16
add
inc
pushf
jno
xor
xchg
je
out
shlb
sbb
test
roll
xor
push
cwtl
pop
cld
les
stos
shrb
les
push
fidivrl
in
sbb
and
push
lret
scas
fld1
inc
xchg
add
pop
in
dec
push
cmp
sbb
in
pop
cs
adc
jmp
xchg
pop
mov
imul
fwait
hlt
xchg
ds
cmp
mov
scas
cmc
ficomps
pop
add
jecxz
push
sbb
dec
cmp
xlat
sti
mov
dec
imul
shlb
stos
add
sbb
fisubs
shrb
jo
inc
adc
aad
adc
mov
repz
pop
cs
xlat
imul
mov
jmp
movsb
sbb
push
and
hlt
sahf
jecxz
mov
or
fwait
sub
out
xchg
sbb
add
add
inc
fldenv
adc
ja
bound
sbb
jecxz
pop
jns
lods
pop
clc
fnstcw
ret
pop
shl
adc
or
pop
int3
dec
mov
push
dec
xor
pop
add
fstpl
cltd
jmp
mov
jbe
cmp
push
ret
sub
xchg
lret
aaa
push
dec
mov
out
push
cmp
inc
fldl
fistps
adc
rorl
jae
aam
pop
jns
fisttpl
and
mov
push
inc
out
sub
or
inc
scas
mov
fdiv
adc
xchg
xchg
enter
dec
push
and
pop
ss
cmp
out
mov
adc
aad
lahf
pop
cmpl
mov
xor
xchg
lret
lahf
js
mov
sbb
or
scas
xchg
mov
mov
popa
push
movb
pop
push
clc
outsl
out
mov
mov
pop
negb
push
inc
nop
pop
pop
jno
outsl
jle
pop
dec
repnz
mov
fnstenv
add
adc
sti
fsubr
out
inc
push
fidivrl
jnp
jp
xchg
repz
or
stos
inc
push
jbe
cwtl
sahf
in
xor
mov
rclb
pop
in
lods
imul
mov
lea
lock
push
sbb
imul
icebp
push
push
ficomps
popf
stc
data16
pop
inc
cmp
xlat
push
dec
and
and
clc
mov
pop
jmp
aas
in
fidivrs
xchg
aaa
or
mov
popa
or
addr16
stos
repz
mov
sub
in
add
push
rcr
cmp
pop
pushf
dec
in
xchg
jno
push
jno
pop
sbb
iret
jl
lock
leave
popf
scas
jns
xchg
in
mov
push
ret
sahf
jno
insl
rorb
cmp
cwtl
push
in
mov
and
lret
push
mov
xchg
mov
sub
mov
push
jmp
jns
pop
outsb
scas
mov
fbld
lret
add
jmp
xlat
mov
aas
out
scas
dec
xor
and
push
push
std
jle
fidivs
cmp
jbe
dec
fsubs
or
and
sbb
push
lods
rol
movsb
cwtl
pusha
scas
popa
mov
mov
jo
xchg
dec
lret
inc
cli
adc
sub
jmp
push
cmp
icebp
int
add
repz
pusha
es
dec
pop
fs
test
cmp
inc
sbb
adc
inc
pop
push
ret
pop
cmpsb
fsts
mov
ret
mov
push
js
mov
pop
lods
lods
in
clc
int3
jg
rcr
jle
xchg
push
xor
inc
jg
pop
sub
iret
inc
in
pop
push
dec
mov
fnstenv
or
xchg
xchg
inc
or
loop
mov
mov
ljmp
jmp
das
pop
popa
push
xor
es
add
mov
xchg
fisttpl
pusha
jle
mov
xlat
imul
mov
and
in
leave
or
cmc
aam
stc
fdivrl
iret
pop
loope
and
addr16
cmpb
les
mov
loop
xor
gs
mov
add
insb
or
call
pop
insl
scas
ret
pushl
ds
daa
sarb
adc
aam
sti
mov
or
sub
mov
pop
cmpsb
cld
ja
lret
aam
out
out
pop
push
pop
repz
pop
xchg
add
sbb
inc
hlt
std
fwait
test
nop
jb
inc
mov
lcall
std
int3
mov
mov
repz
dec
mov
cli
out
mov
ficomps
cmpsb
jmp
or
in
scas
popf
cltd
or
push
loopne
jo
jno
xor
pop
or
js
push
xchg
push
test
scas
test
mov
mov
xor
rol
std
scas
lods
lea
push
and
pop
jp
adc
pusha
pop
ficoml
push
adc
mov
lret
fcmovu
cmp
lcall
ret
repnz
popf
call
aam
int
xchg
mul
xor
jno
bound
lahf
lcall
loope
mov
das
xor
push
xor
int
out
and
push
push
add
mov
xchg
mov
pop
shrl
or
dec
scas
pop
xor
sbb
push
and
faddl
inc
push
rcrl
in
pop
sbb
or
inc
xchg
out
or
ljmp
push
sbbl
gs
and
sbb
les
lret
pop
test
push
lret
jb
mov
push
hlt
fnstenv
mov
pop
sbb
in
andl
xchg
push
scas
mulb
insl
mov
jle
in
push
mov
adc
call
xor
cmp
mov
xchg
adcl
xor
push
clc
add
cmp
cmc
add
fdiv
shl
mov
lods
ss
mov
shrl
les
nop
fstl
loope
fcomip
or
jo
test
sub
lock
mov
test
lea
cmp
stc
in
cmc
shll
xor
movntps
adc
out
nop
and
js
test
loope
mov
pop
xchg
push
sub
push
dec
lds
insl
add
fldenv
pop
jp
lcall
ficompl
les
xor
pushf
in
jns
das
stc
inc
cmp
inc
int
inc
push
popa
jns
movl
rcll
pop
into
or
cltd
pop
mov
in
mov
out
xchg
or
int
cmc
push
lods
xor
in
aaa
pop
inc
and
out
inc
inc
das
ja
lods
jmp
mov
mov
fisttps
push
out
and
cmc
dec
lds
gs
mov
jno
mov
push
lock
add
mov
mov
jle
ja
mov
es
inc
inc
notl
adc
lret
inc
push
ret
mov
push
mov
or
andb
mov
fsts
mov
mov
mov
lea
hlt
inc
push
xchg
inc
ljmp
mov
fwait
sub
push
sbb
mov
push
fdivrl
pop
ret
js
lret
push
add
mov
enter
or
inc
xchg
mov
inc
je
outsl
or
dec
sbb
mov
test
xor
push
push
test
and
repz
loope
cmpsl
add
push
cmp
xor
push
jo
jl
fisttpll
ljmp
adc
inc
lret
rcll
and
mov
dec
push
xchg
jo
iret
dec
mov
sbb
jo
or
and
push
mov
push
mov
cmp
sbbl
ret
pop
pop
arpl
out
and
mov
sahf
xchg
xor
fcompl
dec
pop
sbb
xor
enter
push
push
lock
cmp
mov
sub
and
in
insl
in
push
pop
push
icebp
xorl
aaa
jp
or
clc
cmp
testb
outsl
das
jb
adc
cs
dec
inc
test
adc
or
fisttps
pop
add
pop
mov
scas
jp
cmpsb
outsb
jbe
and
xchg
dec
mov
push
out
push
sbb
rcrb
or
jbe
adc
jmp
inc
out
and
push
imul
jl
or
dec
fsub
push
std
pusha
imul
xchg
xor
push
in
popf
call
mov
pop
call
dec
lcall
es
xchg
mov
movsb
lds
shrl
aam
aas
adc
mov
mov
pushf
loopne
sbb
push
push
xchg
sti
add
and
add
mov
rcrb
int
aad
add
and
outsb
push
inc
or
mov
cwtl
push
mov
cmp
dec
and
shrb
inc
fcmovnb
push
sbb
stc
push
sub
xchg
aam
in
mov
lret
lock
int
bound
inc
sbb
pop
xlat
xor
jbe
pop
in
int3
mov
mov
pop
ffreep
or
mov
and
lds
sub
mov
inc
add
inc
leave
in
cli
test
outsl
jge
loope
cmp
xor
pop
inc
sub
xchg
in
jns
loop
sub
mov
stos
aaa
std
fstps
iret
pop
ficoms
sbb
push
negb
fmuls
fwait
adc
fldt
sti
pop
iret
and
jg
pop
rolb
popfw
data16
mov
jecxz
add
cli
ss
xchg
dec
ret
jecxz
cmp
sub
jo
leave
ja
add
insb
push
je
bound
cwtl
mov
and
jno
mov
jmp
push
inc
out
mov
mov
cmpsb
insl
lahf
ret
jae
push
add
jp
adc
sti
sub
mov
fsubrs
fbstp
test
aas
test
ret
mov
xor
inc
insl
adc
in
imul
and
sub
cmpsb
imul
mov
pop
push
fwait
cmp
push
cmp
inc
daa
clc
loop
mov
insl
and
lret
xchg
in
jns
gs
xchg
mov
movsb
fs
sarl
pushf
dec
and
or
cwtl
ja
inc
or
push
call
and
scas
stos
jnp
mov
mov
jle
cmpsl
shl
or
xchg
jno
dec
add
test
push
cltd
insl
test
rol
int3
call
int
int
and
or
or
es
test
push
icebp
push
sub
sbb
sub
mov
pop
jp
hlt
cmpsb
loop
push
popf
add
aas
scas
outsl
ja
push
lods
int3
adc
ss
out
fwait
ja
adc
cmp
xchg
arpl
cli
mov
xchg
das
fwait
lds
mov
icebp
dec
cltd
cli
jle
fdivrp
xor
cmp
xor
jmp
leave
xchg
rorl
das
aaa
and
cmp
xor
mov
es
pop
clc
test
xlat
xlat
sti
xchg
add
xchg
les
push
mov
das
pop
imul
loope
movsl
pop
sbb
pusha
in
sbb
push
testl
mov
cmp
mov
dec
cs
clc
add
icebp
call
push
enter
pop
fwait
push
mov
push
and
push
xlat
repz
push
mov
xchg
enter
je
push
mov
sub
lea
insl
cli
mov
jne
xchg
fsubrs
jge
pop
lea
cmp
cmp
cmp
std
in
or
mov
imul
lret
je
inc
fimuls
aam
mov
in
aam
mov
in
jl
xchg
shl
mov
or
fdivl
cmp
call
mov
rclb
mov
cmpsl
mov
stos
sbb
xchg
fdivl
std
cmpb
mov
insb
andb
ffree
mov
dec
cld
repnz
inc
xchg
sahf
mov
int
test
inc
or
push
inc
pop
adc
setb
leave
mov
pusha
sub
ds
xlat
pop
cs
pop
femms
inc
mov
mov
iret
mov
bound
adc
dec
xor
stc
pop
add
test
test
filds
jp
fadds
mov
popf
mov
js
xchg
mov
jg
testl
push
mulb
pop
and
pop
xor
popf
cwtl
loop
sbb
loop
imul
jmp
xchg
dec
icebp
js
or
out
dec
jnp
flds
push
mov
rcll
out
inc
sub
faddl
jmp
jmp
fisubrs
inc
mov
or
adc
fimull
hlt
dec
test
jecxz
pop
dec
out
xchg
inc
mov
repz
pop
imul
mov
hlt
sbb
popa
mov
pop
add
and
orb
dec
mov
stos
cli
sbb
addr16
inc
sub
pushf
adc
and
stos
shlb
sub
inc
jnp
insb
pushf
cmp
cmp
rcr
test
mov
xchg
and
out
neg
lcall
jae
mov
push
inc
add
dec
add
mov
leave
imul
bound
jl
lahf
or
out
cwtl
cltd
mov
in
inc
adc
jg
inc
stos
mov
inc
ljmp
dec
cmp
adc
mov
mov
mov
outsb
mov
arpl
sbb
xor
jg
aaa
arpl
outsb
sbb
mov
xchg
ss
xchg
mov
addr16
lcall
mov
out
in
cmp
jmp
scas
sahf
jl
jns
xchg
pop
mov
pusha
lock
ret
ljmp
incb
adc
pusha
ds
mov
les
scas
testb
add
bnd
jo
inc
scas
dec
enter
dec
fs
daa
lods
sub
daa
or
scas
popf
jle
loop
and
adc
sbb
loop
stos
dec
push
pop
sbb
sahf
push
movsl
fucompp
imul
sahf
jle
cwtl
xchg
mov
std
push
js
test
clc
orl
push
rsqrtps
imul
mov
dec
ss
arpl
mov
enter
adc
rorb
cmp
ja
bswap
mov
out
leave
mov
cmp
xlat
inc
out
xchg
rcll
sub
scas
sbb
jl
aas
jmp
jle
in
xor
out
xor
mov
int3
jp
cmp
sti
test
adc
mov
inc
lock
mov
sbb
xor
daa
rorl
xor
js
mov
cmp
jmp
dec
andb
notb
and
inc
pop
adc
lret
cmp
dec
cmp
clc
xor
stos
xchg
movsl
inc
rcrl
lds
add
mov
mov
xchg
arpl
imul
push
mov
aas
cmp
cld
jecxz
aad
fidivrl
gs
in
hlt
adc
fnstcw
cwtl
adc
mov
pop
das
dec
pop
ret
pop
xchg
pop
shl
int3
push
test
cmp
lret
scas
enter
out
insl
mov
je
insb
push
jno
pop
fs
aaa
daa
mov
cmc
dec
push
cs
enter
xchg
aas
xchg
pop
adc
aas
in
icebp
lods
and
out
mov
mov
jnp
pushf
inc
and
pop
adc
rcrb
jecxz
cmp
mov
or
stos
andl
fyl2xp1
cmpb
and
xchg
dec
scas
lcall
pop
mov
fdivr
push
jg
fs
push
mov
sub
add
inc
out
adc
mov
adc
cmp
sub
aam
add
rorl
and
sbb
inc
sub
xlat
fisubs
and
arpl
mov
mov
mov
jg
aam
movsb
xor
fnstsw
idivl
pop
push
fnsave
stos
mov
and
mov
sbb
ret
mov
xorb
push
cli
xchg
call
cli
stos
test
xor
pop
push
push
int
rolb
jle
jb
adc
push
sbb
outsb
mov
cmp
jnp
push
je
jp
repz
xchg
cmp
cmp
add
lods
add
cmovp
sar
mov
clc
and
jl
mov
pusha
xchg
xchg
and
mov
xchg
rcrl
lret
icebp
mov
dec
xchg
add
adc
out
inc
mov
xchg
adc
cmp
movsb
or
pusha
pop
mov
jo
rorb
scas
mov
sub
lea
push
lret
and
hlt
shlb
in
and
in
in
cmpsl
adc
jge
jmp
test
and
out
mov
jbe
and
adcl
lret
out
xor
xchg
call
push
jmp
repz
jg
add
or
shlb
sub
jg
popf
pop
aas
mov
out
push
sub
inc
add
mov
jne
sti
ljmp
inc
test
sub
push
jg
inc
fldenv
pop
sbb
sbb
cmpsl
xchg
iret
scas
mov
pop
dec
popf
cld
jge
sbb
inc
gs
sbb
mov
pop
es
pop
out
lahf
incb
dec
xchg
pop
pop
leave
je
sub
outsb
icebp
inc
pop
inc
xor
push
in
cld
xlat
cmc
push
stc
jl
les
push
jne
mov
cmc
test
jb
fiadds
mov
xor
xchg
leave
xchg
sti
push
dec
roll
fisttps
shll
lods
xor
lds
ljmp
mov
cli
stos
mov
or
sub
xchg
mov
lret
inc
movsb
repz
add
adc
mov
ret
pop
inc
lahf
in
das
adc
in
mov
lahf
call
popf
jae
mov
push
adc
bound
pop
test
mov
cmp
test
pushf
pop
leave
negl
push
cli
outsl
lret
xchg
aas
scas
aam
les
xchg
xchg
loop
inc
pop
jg
cmpb
pop
das
sbb
in
jecxz
or
sub
dec
pop
adc
mov
fstps
xchg
cmpsl
mov
mov
xchg
int
jg
negl
les
imul
jns
ret
add
movsl
jl
je
ret
dec
add
test
mov
push
mov
add
in
lods
loopne
fisttpll
std
xchg
jnp
lods
outsb
int
fisttps
fstps
stos
insl
mov
push
mov
imul
sbb
dec
inc
notl
xchg
or
jmp
jne
insl
andb
test
je
jecxz
dec
ss
fadd
rcll
stc
fstl
dec
fnstsw
push
call
inc
or
push
scas
cmpsl
rorb
pop
scas
imul
xor
leave
popa
int
int3
ljmp
mov
rdtsc
sub
lcall
push
scas
cmp
and
sub
je
sub
push
or
mov
ss
mov
movsl
daa
dec
cmp
ss
xchg
jne
rcl
xor
push
in
adc
sbb
or
xor
int3
movsl
cmp
xchg
stc
mov
ljmp
add
sbb
mov
adc
pop
jg
adc
loope
incl
int3
nop
pop
leave
jo
pushf
sbb
push
sti
int3
mov
icebp
das
bound
arpl
loop
out
mov
ss
fnsave
adc
dec
sbb
sbb
aam
jns
icebp
xlat
aam
enter
sub
mov
xchg
push
pop
or
sub
jmp
jmp
adc
xchg
mov
mov
xor
iret
mov
out
mov
icebp
loopne
mov
sbb
dec
nop
sbb
icebp
push
repnz
out
es
pushf
add
ljmp
leave
sub
fucomip
mov
loope
pop
inc
push
ja
daa
cmp
add
stos
lahf
lock
cmpsl
cmpsw
jge
ret
add
js
es
or
data16
pushf
das
sub
lods
outsb
jns
mov
int
cmp
std
mov
lods
jnp
push
jmp
xchg
mov
add
mov
cmp
daa
test
push
scas
cltd
push
mov
mov
and
into
aas
inc
in
lret
jmp
in
cmp
or
lcall
xchg
movsl
jo
sbb
mov
lds
adc
stos
mov
jnp
cmp
outsb
fwait
mov
jns
fimuls
push
imul
out
mov
sbb
je
lods
cs
aas
cmp
jnp
xor
lcall
sub
push
divl
pop
xor
mov
cmpsb
mov
pop
scas
js
fsts
mov
out
xorb
shl
jg
xor
jg
fidivrl
pushl
push
cwtl
push
lret
adc
xchg
xlat
inc
fistps
lret
sub
mov
inc
adc
mov
inc
push
inc
push
pop
fs
jge
adc
daa
mov
mov
ds
mov
fistps
adc
cmp
lock
jnp
inc
lods
push
fwait
jl
jo
out
fucom
or
popf
andps
pop
mov
lods
lret
cmp
in
gs
xchg
ss
dec
out
out
add
bsf
lods
faddp
cmp
in
dec
xchg
mov
cmp
xchg
js
push
dec
xchg
jge
adc
jb
and
jecxz
sti
mov
ret
mov
sub
mov
mov
xchg
xchg
mov
push
imul
stc
cmp
in
lods
fucomi
jo
add
mov
xor
cmp
sub
mov
cwtl
clc
mov
je
std
dec
lret
dec
fprem
lret
outsl
xchg
sti
jecxz
jle
jbe
pusha
xchg
fsubrs
out
shll
dec
dec
aas
pushf
sub
shlb
sbb
js
pop
mov
adc
jae
inc
lret
adc
fadd
popa
mov
xor
mov
xchg
dec
cmpsl
outsl
or
mov
sahf
minps
jecxz
sub
les
xor
xchg
stos
pshufw
loope
call
and
div
xchg
jge
xor
and
xor
popa
adc
std
cmpsl
test
shll
rclb
mov
cmp
add
sub
inc
inc
jne
daa
dec
or
aam
andl
roll
imul
add
pop
in
leave
push
pushf
std
bound
xchg
jne
pop
nop
test
in
pushf
icebp
jle
sub
adc
mov
arpl
adc
loop
divb
pop
and
push
cmp
or
int3
sbb
faddp
sahf
jge
test
lds
mov
rorb
cmp
adc
dec
push
outsb
sub
scas
into
scas
mov
push
jb
in
rol
sbb
dec
lcall
jge
in
jle
jne
stos
add
mov
sarb
xchg
xor
adc
dec
sarb
mov
ja
sub
bound
int3
pop
xor
adc
jmp
fcoms
or
and
ds
jnp
sbb
add
lahf
xchg
lods
pushf
mov
mov
mov
push
push
sub
pop
xchg
or
add
out
cs
xchg
pop
rolb
xor
add
stos
enter
movsb
mov
repz
inc
jno
cs
lahf
scas
add
push
lcall
in
cmp
dec
mov
xor
sub
or
push
xchg
push
test
insb
shr
push
push
lds
daa
and
xchg
sub
add
out
mov
mov
push
notb
imul
in
dec
imul
in
cmpsb
out
dec
dec
add
ljmp
fstpl
ljmp
xchg
data16
sub
mov
and
mov
fsubr
sub
mov
mov
cmp
jo
pop
jae
dec
or
cmp
int
ds
je
xchg
lret
daa
movsb
mov
jmp
ss
repz
incb
lea
mov
dec
ret
scas
xchg
sub
xor
leave
xchg
lret
xchg
jle
xor
movsl
xor
loope
jnp
and
adc
sbb
sbb
sahf
jne
mov
rolb
outsb
lods
sahf
iret
test
fistpl
lds
leave
adc
lcall
sbb
scas
dec
outsb
mov
xor
loopne
and
stc
xor
repnz
push
in
cmpb
or
inc
inc
mov
mov
pop
mov
pop
cmp
dec
xor
cmpsl
imul
inc
jmp
mov
test
or
fldenv
movsb
mov
idivl
cltd
fdivl
dec
outsl
loopne
hlt
push
dec
add
mov
out
jmp
xor
lret
dec
inc
xchg
jmp
xchg
cmp
hlt
cmpl
cmpsl
mov
stc
mov
test
sbb
out
and
call
notb
js
cmp
mov
inc
ss
outsb
or
dec
test
out
inc
nop
jo
push
sti
icebp
addr16
popf
adc
dec
dec
and
xor
lret
test
jns
xor
push
add
out
mov
jge
xchg
subb
subl
pop
fs
loop
fisttps
hlt
dec
movsl
addr16
inc
mov
dec
jecxz
iret
sti
stos
or
mov
and
add
aam
sub
in
dec
cwtl
test
int3
out
jns
mov
pop
inc
lahf
jb
fwait
cmp
and
mov
test
fldt
mov
out
sbb
mov
xor
lods
loop
xlat
popa
subb
xor
in
sbb
rclb
ret
jb
sbb
sub
aas
mov
cmp
cs
aaa
mov
movsl
lods
jmp
scas
xor
cld
adc
sub
inc
or
inc
call
dec
movsl
push
jns
xor
inc
repz
jno
mov
jg
lret
jl
lahf
out
xchg
ljmp
int3
cmpsl
xor
jns
shrl
or
sbb
cmpl
cmpsl
outsl
insl
js
xchg
call
xchg
xchg
cmp
imul
pop
sbb
fisubrs
push
icebp
or
outsl
data16
sub
mov
lcall
lret
mov
inc
jns
pop
out
sahf
push
ficoml
in
arpl
mov
mov
jp
jp
mov
ds
addr16
lret
push
adc
pusha
sub
inc
and
mov
fs
push
rcrl
sub
rcpps
test
aam
xchg
fildl
sbb
dec
xlat
push
pop
mov
mov
sbb
sub
lret
inc
xchg
aam
test
leave
insl
ja
fcomp
popf
int
addr16
lock
xchg
push
adc
mov
adc
sar
mov
iret
stos
mov
rcrl
dec
pop
fnstenv
xor
mov
pop
inc
and
sub
pop
jecxz
sti
rolb
mov
push
or
cmp
adc
lret
stos
cmp
push
jp
loopne
sub
dec
pushf
sahf
lea
mov
sbb
jg
mov
adc
and
lods
and
xor
fldt
pop
pushf
inc
dec
popa
and
in
add
push
stos
ds
lret
dec
into
mov
loopne
ja
in
push
es
sub
nop
inc
icebp
mov
jmp
stos
andl
aas
sub
fisubs
rcl
clc
cmpl
nop
das
bound
popf
pop
int3
jmp
xchg
sub
jecxz
jg
insl
jl
test
js
out
pop
shl
pop
inc
jo
sbb
cmp
cmc
or
mov
or
lret
mulb
sbb
ja
cmpsl
cmp
sbb
add
bound
movsb
fisubl
js
cli
daa
pop
push
jmp
and
enter
or
push
je
enter
icebp
jae
ja
aas
andl
dec
bound
popf
push
mov
push
lock
int3
aaa
inc
test
pusha
lds
ficompl
dec
mov
push
jle
pop
and
lahf
inc
in
mov
cmp
and
popa
xchg
arpl
pop
aas
or
loop
ds
push
ja
sbb
orl
repz
sbb
push
mov
frndint
out
hlt
loope
inc
outsl
mov
addr16
xchg
cld
adc
jle
jne
xchg
hlt
xorl
or
mov
cmp
xchg
xchg
add
int3
mov
inc
mov
test
inc
enter
repnz
aas
rorl
and
test
rolb
xchg
movsb
sbb
pushf
test
push
bound
pusha
arpl
push
cld
fs
pop
mov
sbb
popa
adc
mov
mov
cwtl
out
pop
and
inc
inc
xchg
adc
dec
leave
xor
je
mov
lea
lods
idivl
jo
dec
lret
test
fwait
jnp
jns
cmp
adc
fs
cmc
shl
add
pop
pop
mov
and
in
pop
daa
mov
dec
jae
mov
inc
sub
movsb
push
cld
scas
pop
call
cs
add
je
add
ljmp
pop
sub
cmp
in
xchg
xlat
pop
jge
push
and
subb
mov
pushl
ficomps
fwait
push
dec
inc
xchg
cmpsl
outsb
mov
xchg
push
jg
or
test
out
jno
push
es
push
stos
scas
loope
mov
push
mov
cmc
leave
inc
dec
shrb
ret
jno
cld
das
xchg
fistps
add
lcall
sub
push
leave
mov
push
push
add
popf
lret
inc
js
stc
inc
fdivs
mov
lds
shrl
insb
nop
jo
sub
rcr
jae
hlt
js
xor
adc
jbe
jnp
cmp
push
std
dec
adc
ljmp
push
sbbl
mov
daa
andl
mov
adc
inc
je
cltd
or
mov
scas
popa
leave
lcall
mov
out
mov
push
xchg
lods
in
in
int
dec
in
jecxz
div
cmp
das
and
mov
cmc
jae
jge
mov
pop
xchg
add
xchg
cmp
inc
cmpsl
mov
ret
loope
mov
add
sbb
mov
dec
xchg
mov
jnp
repz
cwtl
pop
imul
jbe
pop
lds
pop
push
repnz
sub
dec
mov
mov
ja
sub
into
lahf
push
addr16
call
imul
adc
mov
js
aas
insb
pop
push
mov
jmp
test
mov
stc
sbb
xor
mov
lret
mov
mov
cmp
mov
or
xor
fcomp
ror
lds
or
dec
popf
dec
cmp
adc
outsl
lods
cli
fwait
aam
pushf
mov
fbstp
das
bound
stos
mov
xchg
fsub
fsubrp
and
dec
sub
mov
jns
sbb
cs
notl
pusha
cmp
sarb
call
cmp
sub
mov
xor
test
leave
outsl
pop
shlb
add
dec
rol
add
xor
fisttpl
ja
mov
jae
xchg
lret
add
sbb
cmp
ljmp
xor
cli
push
cli
jbe
sarl
jns
xchg
and
test
gs
add
outsb
ss
sub
lahf
jle
imul
fsubrp
add
iret
aas
xchg
sbb
pop
dec
and
xchg
mov
cmc
insl
inc
notl
jmp
outsl
ss
hlt
cmp
test
adc
std
outsb
into
mov
loop
xchg
jb
pop
dec
shlb
pop
aaa
sub
cmpb
jbe
aaa
test
and
mov
xchg
test
call
add
add
cmc
out
add
adc
pop
cld
inc
int
sbb
xchg
jo
sahf
enter
jnp
or
and
jb
inc
scas
push
sub
ljmp
sub
xchg
inc
sahf
mov
xchg
xchg
call
push
ret
jle
pop
les
call
jb
dec
sub
cmpsb
icebp
pop
repz
les
xor
mov
call
jecxz
jge
jae
test
out
ds
pop
jmp
repnz
push
adc
roll
inc
inc
iret
xchg
mov
xorl
push
push
add
mov
mov
mov
lret
sbb
cltd
idivl
inc
dec
lock
andl
sti
lret
lret
jae
lods
sub
push
push
xor
mov
jecxz
cmp
popa
mov
mov
xchg
ret
xchg
mov
jno
cltd
jne
inc
push
or
mov
sub
cmpsl
inc
inc
imul
sub
outsw
pop
ret
xor
mov
popa
lods
xor
pusha
pop
or
mov
dec
lds
add
push
stos
dec
cmp
scas
jmp
sbb
or
and
into
sbb
outsb
clc
jmp
cld
add
add
daa
lret
add
hlt
add
call
inc
and
in
mov
mov
adc
pop
dec
out
ret
lods
in
ret
leave
lcall
xchg
push
inc
jge
sub
scas
sub
xor
fcmove
inc
orb
loope
lds
add
cmp
inc
jno
mov
pushf
repz
movsb
test
pop
pop
adc
pop
xchg
push
sbb
jl
insb
ss
outsb
inc
imul
push
gs
pop
jp
mov
adc
xorl
or
into
xor
mov
inc
inc
jnp
ljmp
iret
push
sbb
cld
fnsave
mov
sub
std
or
cmp
add
orb
add
std
xor
std
mov
stc
mov
xchg
add
xchg
testl
push
dec
mov
out
in
in
adc
out
inc
or
xchg
dec
push
out
lcall
mov
cmpb
pop
testb
ss
or
lahf
daa
xor
mov
push
or
movsb
mov
insb
aaa
dec
stos
mov
dec
push
push
adc
add
enter
stc
stos
push
loope
pusha
and
xor
xor
xchg
fstpl
xchg
and
fsubl
or
scas
xchg
xor
mov
sbb
cmpsb
xchg
fcoms
or
dec
das
out
sub
push
push
mov
push
inc
mov
mov
jnp
aaa
cmpsb
jmp
addr16
movsb
int3
xorb
adc
push
mov
int3
jmp
xchg
cltd
dec
std
cltd
leave
cmp
and
out
push
pop
shl
addl
lcall
in
sahf
sbb
sbb
in
orl
call
fisubrl
adc
add
lds
in
inc
push
repnz
ss
mov
leave
or
movsb
sub
sub
loopne
push
jns
adc
jb
bound
or
jns
je
or
inc
orl
aad
mov
xchg
jnp
int3
jbe
push
in
inc
stos
mov
mov
dec
loope
bound
mov
into
ljmp
and
dec
push
scas
or
jp
mov
push
ret
xor
add
inc
inc
adc
cmp
and
dec
cmp
mov
ja
sbb
mov
xchg
roll
sbb
jnp
jge
and
adc
jnp
test
les
mov
leave
clc
in
fisttpl
push
xor
out
push
and
cmp
sbb
mov
in
add
lret
mov
xchg
adc
inc
sub
mov
jo
lcall
mov
loopne
in
rorl
into
fs
mov
add
fwait
aam
in
cli
mov
push
push
movsl
rcll
shl
outsb
ret
push
fucomip
mov
lds
xor
je
ds
push
decl
xchg
testl
movsb
mov
lret
sub
or
pop
or
cmc
aad
js
bound
cli
push
inc
xchg
lahf
loopne
shrb
mov
leave
sahf
fucom
std
sub
inc
scas
decl
hlt
jne
mov
add
sbb
out
ss
mov
push
jbe
lods
and
movsb
sti
cmp
or
ja
outsl
mov
fsubrl
adc
pop
imul
ljmp
pushf
in
jle
cwtl
faddl
lods
mov
enter
mov
xchg
testl
mov
mov
mov
dec
and
je
lret
lret
cli
popf
and
mov
pop
mov
ljmp
movsl
dec
mov
pop
lret
mov
cmp
ret
add
imull
adc
std
movsb
or
je
gs
mov
decl
insl
sub
inc
ja
lahf
mov
cmpsl
int3
sub
insb
jge
mov
jb
gs
jge
cmp
ljmp
inc
or
hlt
ss
xor
add
lods
push
fdivrl
je
imul
jge
lock
sub
sub
xchg
push
aas
inc
xchg
and
dec
mov
and
mov
loopne
in
lods
push
push
cmc
add
sti
mov
jecxz
xchg
xchg
cmc
jno
movsb
pop
pop
fistl
pop
in
ret
pop
scas
inc
sub
repz
jg
imul
add
outsl
push
xor
shld
rcll
repz
push
inc
push
ficoml
xor
xchg
or
push
fstps
mov
mov
lret
andl
shl
cli
lea
jp
cwtl
loop
jecxz
mov
xchg
xor
pop
add
mov
inc
movsl
fs
subl
imulb
and
inc
outsb
jge
int
push
shrb
ljmp
and
jo
dec
out
adc
adc
mov
std
cld
lods
xor
int
xchg
incl
jnp
mov
add
lea
cmpsl
and
cld
mov
push
sbb
mov
push
xlat
xchg
dec
lock
insl
add
sbb
jmp
adc
or
leave
jae
rclb
mov
nop
fbstp
pop
lea
pushf
cmp
lods
adc
out
cltd
jns
out
pop
mov
adc
sbbb
add
inc
dec
pop
xor
sahf
mov
xchg
and
pushf
ldmxcsr
mov
inc
add
lahf
test
rcr
xor
inc
scas
or
jns
push
adc
addr16
dec
shl
mov
in
or
nop
add
out
aas
movsb
stc
sarl
aaa
aas
cwtl
aaa
xchg
setb
or
insb
scas
mov
and
in
inc
enter
imul
sub
mov
adc
ljmp
pop
sub
dec
and
pop
ret
sub
xor
or
lcall
incb
scas
and
push
cld
stc
pop
jp
shrl
fs
icebp
inc
mov
sbb
or
shll
lret
sbb
push
push
push
jns
mov
pop
sub
les
ljmp
inc
ret
fcoml
jb
inc
test
and
out
mov
out
mov
fbstp
dec
jge
xor
cmpb
xchg
insb
xchg
fistpl
push
je
daa
mov
push
lods
push
sahf
mov
je
aaa
inc
mov
adc
or
cs
imul
mov
fcomp
lock
add
xchg
add
mov
subl
rorb
or
sbb
stos
dec
inc
mov
cld
sub
cmp
cmc
and
cmpsb
add
movsl
aaa
sar
pop
mull
ss
fcoms
xchg
inc
lahf
cmp
pop
and
inc
dec
ret
dec
pop
popl
push
sub
movsl
ret
sbb
push
xchg
cwtl
mov
imul
test
in
mov
pusha
mull
cld
xchg
fdivl
sarb
or
les
and
hlt
sahf
jbe
xlat
mov
pop
enter
idivl
mov
js
in
sbb
test
leave
mov
xor
jmp
xchg
mov
out
aaa
or
push
jne
sbb
leave
and
jle
cmp
shlb
mov
rclb
mov
jns
popa
loopne
cmp
inc
clc
mov
popf
cmp
mov
cmp
test
mov
sub
xor
data16
mov
jl
cmp
cltd
xchg
shl
pop
lods
jnp
mov
sbb
es
test
imul
scas
outsl
xchg
jae
xchg
or
mov
stos
mov
mov
mov
or
push
cltd
adc
pop
je
jb
pop
pop
in
adc
aas
fbstp
hlt
test
pop
mov
daa
pop
jne
popa
loopne
push
pop
add
cmp
add
add
enter
mov
sti
aam
imul
add
sub
icebp
aas
pusha
xchg
andb
mov
test
jmp
data16
mov
pusha
xchg
int3
inc
nop
fldl
dec
mov
mov
cmpsl
int
outsl
push
or
mov
lcall
and
cld
hlt
cltd
repz
js
ror
xchg
lods
addl
xchg
lds
sbb
mov
in
cmp
pop
sbb
dec
and
mov
loop
add
xor
xor
xchg
int
imul
adc
roll
xchg
cli
imul
jb
fxch
jmp
addr16
rclb
aad
or
bound
mov
jne
cmp
pop
adc
xor
xor
and
adc
fists
jge
int3
cmp
stos
cli
xchg
int
in
dec
filds
pop
sub
fidivrs
mov
mov
daa
and
cmp
jno
dec
mov
sub
ljmp
pop
movsb
in
push
mov
mov
add
jbe
je
xchg
or
lods
lds
pusha
shr
es
scas
jb
pop
imul
push
xor
pop
jns
push
aad
xchg
mov
cmp
jnp
mov
dec
inc
dec
int
mov
shlb
loopne
cmpsl
sbb
cmp
jnp
popf
push
mov
pop
xchg
push
sahf
lahf
stc
subb
push
mov
les
mov
sub
inc
pop
xchg
cli
inc
std
dec
cmp
sahf
inc
xchg
scas
cmovnp
cmp
push
jb
lret
repz
cmp
test
xchg
test
sbb
cmp
push
aaa
or
rolb
xchg
test
sbbl
ja
insb
int3
jb
push
jbe
dec
aam
inc
cmp
sbb
inc
jne
sub
insl
les
inc
inc
lcall
cmp
sbb
jno
jmp
push
inc
or
cltd
push
pop
cmp
cli
es
js
test
pop
xchg
hlt
insb
test
pop
enter
in
sub
test
stos
sar
sub
hlt
lret
sub
loope
sbb
sub
insb
adc
js
inc
rcl
xchg
mov
mov
shl
or
adc
ret
jb
adc
cmpsb
aam
xchg
das
insl
pusha
ja
fadd
inc
aam
test
and
push
in
jne
daa
push
or
cmp
push
mov
xchg
addr16
mov
mov
mov
jno
sub
add
je
xchg
pop
jns
adc
dec
movl
hlt
in
lret
mov
xchg
in
mov
mov
fwait
addl
sub
lcall
mov
mov
ret
xor
pop
cmp
orb
jmp
xchg
scas
inc
sbb
xchg
jo
out
and
pop
xchg
xor
je
out
push
ja
je
ds
inc
cmp
and
pop
pop
hlt
mov
leave
mov
addr16
scas
inc
sub
arpl
pop
mov
push
out
lret
mov
and
fwait
subl
sbb
or
adc
fcomip
push
sahf
out
adc
cmp
mov
pop
lret
aas
fistl
addw
pop
cltd
js
sbb
adc
cmp
add
scas
adc
xchg
retw
imul
or
mov
add
rcl
cmpsb
shll
clc
pop
out
mov
adc
add
imul
mov
cmp
daa
add
cwtl
cmc
es
andl
mov
out
mov
jmp
xchg
pop
fildl
jae
adc
loop
adc
xchg
adc
adc
and
adc
gs
xor
or
push
ret
push
push
scas
dec
mov
loopne
mov
xor
rdtsc
call
pop
push
jg
insl
stos
test
fiadds
movsl
adc
adc
and
stos
adc
scas
rcrl
loopne
add
fs
push
popf
sbbl
rcr
mov
loopne
subb
ret
inc
add
frstor
or
jp
pop
in
cmp
inc
fildll
aad
fisttpl
iret
repz
xor
mov
sbb
stc
loope
inc
add
cmp
rorl
mov
xchg
cltd
cmp
pop
in
jg
and
gs
in
into
mov
cmc
pushf
int3
and
push
sub
or
xchg
inc
adc
jns
mov
xchg
adc
loop
dec
int
sbb
pop
pop
les
jo
sti
in
dec
mov
movb
push
clc
dec
and
test
mov
xchg
pop
mov
push
and
aaa
adc
pop
int3
out
cmp
xor
insl
test
int3
add
test
pop
jb
add
and
hlt
jnp
sub
or
jge
pop
mov
xor
lret
scas
push
sbb
push
arpl
in
push
fcomp
cmp
seto
and
jl
mov
or
sbb
push
xor
aam
sbb
mov
jge
lret
push
mov
or
mov
pop
jle
setl
lds
sarl
add
enter
addr16
lahf
movl
in
xchg
out
sub
cmc
push
gs
icebp
dec
mov
outsl
or
icebp
mov
mov
cmp
adc
lea
loop
fisubrs
fidivrl
pop
xchg
sub
ds
sub
push
outsb
mov
adc
pop
test
push
push
or
inc
lock
pop
cmp
mov
jg
mov
mov
lcall
pushf
into
shrb
add
sub
shrl
into
mov
inc
xchg
sbb
xchg
lods
jp
xchg
movq
dec
gs
adc
mov
insb
int3
xor
push
mov
cwtl
imul
mov
fmul
sub
inc
popf
pushf
fildl
fucomi
pop
inc
out
in
xlat
in
xor
jl
push
mov
jo
adc
icebp
push
je
add
out
jbe
xchg
dec
int3
pop
loop
cmp
xor
hlt
push
sbb
mov
jnp
mov
icebp
jle
movsb
mov
or
jb
inc
sti
inc
push
xchg
addl
xchg
es
mov
sub
in
inc
loopne
mov
cmpl
adc
inc
xchg
xchg
xchg
adc
inc
xchg
dec
lods
xchg
repz
push
bound
gs
mov
cmpsb
imul
subb
lahf
mov
push
mov
adcl
repnz
pop
mov
sub
inc
cld
mov
loope
lahf
in
mov
or
cmc
test
call
in
lret
movsl
xor
sub
mov
sbb
fcmovnb
fwait
xor
mov
dec
jp
int3
dec
push
popa
add
jnp,pt
lret
outsb
and
sahf
push
incb
or
xchg
mov
jecxz
jne
mov
cmp
inc
rorl
sub
mov
mov
int
mov
cmc
push
gs
out
cmpsl
sbb
bound
movsl
jp
movsb
dec
jge
in
icebp
movsl
and
mov
mov
ret
cmpsl
sbb
aaa
lock
jmp
fcmove
clc
int3
into
inc
arpl
push
test
adc
les
sahf
jb
les
jmp
popl
cs
cmp
push
sub
aad
pop
add
cwtl
dec
cmpsl
cmp
unpckhps
pusha
jns
sub
fucom
arpl
lret
mov
insb
ljmp
mov
notl
xor
aad
call
jns
xor
push
imul
ficompl
loope
jg
stos
adc
lea
pop
fs
subb
mov
fnstenv
inc
adc
jnp
mov
mov
stc
in
in
flds
incl
sub
pushf
adc
mov
aaa
aad
push
stos
scas
fmul
xchg
addr16
lods
les
xor
jne
sar
dec
iret
jecxz
iret
push
dec
mov
in
mov
xlat
mov
push
push
inc
and
cmp
push
imul
rclb
xchg
sub
lahf
mov
rcll
int
mov
xor
addl
fwait
leave
adc
cmp
inc
fstps
outsl
mov
jmp
push
sub
or
les
mov
repz
mov
cmp
cmp
jb
clc
mov
inc
xlat
adc
into
repnz
movsl
push
mov
adc
ja
add
sbb
push
mov
sahf
sub
and
push
jecxz
add
ret
mov
and
mov
jns
mov
cmpsl
xorl
scas
push
mov
test
flds
popf
enter
shll
push
mov
sbb
jl
mov
aad
test
pop
mov
xlat
xlat
negb
xlat
xchg
xor
repz
leave
movswl
out
or
ret
test
test
aam
popf
jne
mov
into
adc
inc
mov
push
dec
fs
mov
push
xchg
pop
jg
movd
shl
int3
arpl
xor
cs
popf
mov
std
or
stc
out
loopne
fcoms
xchg
inc
loopne
or
sbb
outsl
imul
or
push
subb
dec
jne
lret
dec
adc
insb
jbe
push
mov
and
stos
jmp
push
stos
gs
mov
cwtl
and
add
jl
mov
jmp
shlb
andl
in
enter
mov
pusha
sbb
mov
cmc
mov
adc
mov
mov
and
fnsave
sbb
int
cmp
stos
mov
fimull
pop
mov
out
cmp
xor
pop
insb
adc
xchg
sbb
pop
data16
adc
js
dec
cld
sahf
adc
lret
xchg
mov
test
arpl
mov
iret
jo
mov
and
or
ret
add
inc
and
dec
sub
adc
out
mov
dec
les
adcl
cs
lea
popf
lcall
add
jp
arpl
and
je
in
arpl
ret
push
incl
mov
arpl
in
ljmp
unpcklps
dec
out
pop
inc
mov
mov
inc
cmp
mov
and
mov
repnz
int3
out
iret
sahf
jno
fldt
dec
lods
hlt
push
or
xor
hlt
mov
stos
sub
loop
pushf
xchg
and
rcrl
loopne
jmp
int
insb
and
push
icebp
idivl
std
add
or
xchg
aad
hlt
jp
dec
sbb
xchg
add
push
enter
xchg
xchg
sbbb
fcmovb
in
lds
inc
push
sub
rcrl
lods
push
jb
dec
mov
daa
sub
ds
or
xor
fwait
pop
sub
inc
stos
jnp
cmpsl
mov
cmp
popa
push
jns
shlb
arpl
mov
in
mov
cmp
push
call
insl
xor
mov
shr
das
aad
pop
jecxz
fs
sti
das
in
jnp
push
pushf
jl
push
cmp
mov
rolb
hlt
push
leave
popa
leave
mov
daa
mov
add
or
and
push
xor
xor
adc
pushf
xlat
testl
addr16
sbb
adcb
ret
mov
imul
fdivs
and
jmp
nop
sti
daa
in
ja
adc
aam
in
iret
sub
pop
mov
into
add
vpavgb
cmp
fdivs
push
pop
mov
mov
lds
les
sub
add
jnp
out
imulw
and
pop
jecxz
js
push
int3
nop
in
jae
cmpsl
loope
dec
loop
dec
test
cmp
aaa
lods
jg
mov
pop
aam
fdivrl
lahf
push
outsl
lahf
ret
cmpsl
xor
popa
imul
mov
jle
or
loop
cmp
je
fbstp
clc
movsl
jecxz
adc
iret
ror
outsl
hlt
xchg
rcrb
stc
inc
cli
leave
add
repnz
xor
mov
or
int3
ja
inc
notl
pop
aas
cs
inc
mov
dec
int3
sbb
fbstp
add
pushf
in
loopne
std
out
adc
cmp
test
rorl
dec
nopl
out
pushw
cmp
popf
sahf
adc
or
dec
in
push
mov
pop
and
and
sahf
icebp
stc
rcll
int3
sbb
das
aam
loope
insb
pop
mov
push
repz
ja
dec
xor
gs
pop
rcr
pop
addr16
and
repnz
das
mov
rorb
jno
mov
add
xor
adc
loope
cld
adc
int3
testb
mov
or
jle
repz
lods
sbb
lret
stos
dec
dec
cmp
clc
mov
xlat
ds
shr
ds
aad
mov
shll
xor
popa
cmp
mov
aad
in
test
inc
lret
pop
scas
mov
out
pop
test
fidivrs
filds
xchg
fldt
adc
lock
mov
adc
loopne
lret
ss
adc
mov
and
scas
jns
test
adc
sahf
lcall
repnz
xchg
mov
mov
rcrl
inc
outsl
inc
jae
fdivl
subl
xchg
movsl
mov
sbbb
jb
mov
fnstcw
shl
xchg
sbb
push
je
mov
jns
adc
ret
pop
push
mov
fsub
testb
sub
pop
cmpsb
add
ja
sub
push
loope
mov
outsb
mov
das
pop
mov
imul
push
push
sbb
ss
icebp
mov
add
jae
enter
fisubl
cmp
jo
dec
std
and
shll
sti
cs
xchg
js
in
pop
cmpsl
test
mov
imul
add
push
cmp
aas
adc
aas
sub
dec
bound
ret
fsubr
shlb
ss
or
in
fbstp
push
scas
pusha
mov
sahf
in
mov
insb
or
pop
jno
imul
sub
and
fiadds
xchg
pop
jmp
push
xchg
xchg
pop
shlb
add
mov
lret
push
and
xchg
push
adc
cmc
push
sbb
clc
pop
sub
jae
mov
stc
jmp
jp
sarl
ror
popf
mov
inc
rcl
push
stos
ret
in
popa
push
inc
mov
shll
maxps
cmp
iret
pop
mov
loopne
movsl
or
mov
mov
dec
fwait
incb
roll
push
push
dec
repnz
lds
cmc
and
or
mov
stc
dec
jbe,pn
xchg
roll
pop
outsl
nop
jg
jbe
and
lret
push
dec
xchg
cs
arpl
sbb
push
test
aas
mov
testl
mov
cmpsl
loopne
dec
inc
pop
dec
loopne
pop
test
mov
gs
pushf
les
mov
or
pop
mov
push
lret
aaa
inc
inc
pop
jae
xchg
inc
das
jmp
xor
lret
nop
cli
adc
add
mov
dec
sub
mov
sbb
enter
aam
cmp
movsb
xchg
iret
pop
fisubl
mov
or
and
and
push
adc
adc
push
rcrl
addr16
daa
and
lahf
imul
pop
adc
mov
cmc
fsubrp
sub
ret
and
xchg
lods
add
push
outsl
mov
cmp
xchg
das
pop
push
repnz
add
pop
push
mov
mov
imul
stos
cmc
push
push
test
push
iret
fstps
sbb
mov
dec
aas
sbb
xor
pop
popf
jbe
cmp
sbb
mov
xor
mov
pop
jle
cltd
jge
mov
push
jle
sarb
mov
outsl
dec
add
push
fistps
pop
push
dec
repz
dec
lock
fsubrp
jo
into
pop
dec
fstl
xor
sub
mov
mov
inc
mov
inc
push
mov
fs
push
divl
ljmp
out
jp
movsl
das
sbbb
jb
dec
xor
xor
clc
inc
lahf
and
cmpsb
pop
push
lret
push
pop
jl
test
dec
pop
xlat
adc
cs
cwtl
das
lds
fcoml
insl
cltd
test
add
enter
rcll
dec
mov
out
test
cmp
lds
pop
jp
sbb
iret
insb
daa
or
fidivrl
and
in
inc
aas
daa
loope
cwtl
cwtl
pop
jb,pn
faddl
xchg
scas
and
sahf
mov
in
and
pop
lret
jle
loop
xchg
mov
xchg
cmc
and
in
ret
mov
inc
stc
test
xchg
movsl
inc
add
mov
cmp
popf
mov
loop
in
mov
cmp
sub
outsb
adc
test
dec
pop
idivl
aad
enter
add
xor
adc
and
pop
movsl
ljmp
sbb
xchg
push
fcoml
outsl
mov
mov
call
loopne
mov
sbb
jmp
rorl
xlat
roll
jge
lea
sub
add
scas
sahf
jge
add
daa
loop
sub
push
jo
stos
in
push
xor
xor
mov
lea
aaa
loopne
sub
jecxz
push
rorl
mov
pop
imulb
and
cmp
jbe
inc
lahf
mov
jp
cmpsl
jns
add
push
call
enter
push
imul
loopne
lcall
pop
out
jle
xchg
mov
movb
rclb
in
repz
fimull
push
inc
jl
and
out
imull
stos
arpl
imul
fisttpl
pop
das
add
mov
push
sbb
sahf
adc
mov
push
xor
ljmp
ljmp
mov
notl
cli
and
dec
in
cs
pop
lcall
dec
dec
es
pop
inc
sbb
adc
mov
sbb
push
fs
stos
mov
fbstp
pusha
call
mov
mov
repz
xor
adc
dec
rol
pusha
movsl
push
or
push
mov
xlat
inc
fisubrs
mov
cltd
popf
mov
in
mov
fcoml
mov
sbb
mov
das
out
cmp
mov
push
arpl
xchg
fsubrs
mov
jns
or
ret
cmovle
ret
vpsrlw
inc
dec
mov
sub
mov
int
popl
and
jb
cmp
loop
mov
xchg
inc
push
in
idiv
out
and
xchg
fistpl
xlat
leave
sub
mov
add
xor
ss
push
jl
inc
mov
pop
cmp
hlt
xlat
scas
jp
and
andb
das
insl
push
rcrl
mov
call
mov
fiaddl
xchg
adc
fwait
push
mov
jb
outsb
mov
pop
sub
jb
jnp
das
roll
sub
lret
nop
int3
xchg
jge
jge
shl
xlat
aad
inc
data16
jno
pusha
fsubrl
lods
sbbl
ja
cmp
popf
mov
out
dec
dec
insb
mov
dec
cmp
loope
adc
in
pop
jae
xchg
arpl
pop
jp
mov
jno
arpl
xchg
cltd
xchg
js
mov
insb
inc
mov
ljmp
sub
dec
loopne
mov
daa
jns
out
cmp
mov
jb
jl
mov
sub
push
or
pop
cmp
cltd
cltd
pop
xor
push
and
pop
push
mov
mov
int3
adc
cmc
xor
push
mov
xchg
pop
loopne
fiaddl
mov
mov
out
mov
nop
mov
mov
hlt
cmc
rolb
xorb
push
cmp
xlat
bound
adc
mov
adc
mov
dec
dec
xchg
and
xor
scas
fstl
ret
sbb
fildl
push
aas
sub
jp
lret
add
or
fimull
and
fwait
repnz
pop
notl
and
push
pop
xor
mov
hlt
nop
inc
jecxz
lret
call
dec
sahf
enter
jbe
mov
jnp
xor
inc
or
xchg
add
fldcw
push
jne
mov
xlat
mov
divl
popa
mov
and
mov
aam
xor
ret
test
push
stos
inc
rcll
in
cli
hlt
call
or
adc
and
cmp
pop
call
xlat
sbb
inc
adc
jecxz
jo
aas
loop
orb
adc
mov
into
xchg
mov
popa
cs
ja
lock
rcr
out
mov
push
push
add
sbb
cmp
arpl
dec
outsl
clc
in
xchg
or
cmp
and
xor
inc
call
mov
ret
jo
push
cli
push
ret
jb
addr16
mov
ds
sbb
push
jo
dec
sbb
mov
loop
outsl
rcrl
sbb
lret
in
jns
or
inc
ret
cs
mov
push
mov
pushf
jb
cmpsl
aaa
in
mov
mov
dec
or
shll
and
js
lock
inc
cmp
mov
cmp
loopne
into
ret
sbb
push
jb
jns
pop
fstl
js
xor
mov
mov
adc
add
adc
int3
pop
sub
inc
fmul
cmp
add
clc
fstpt
call
sub
ficompl
stos
aad
sub
jecxz
sbb
fsubr
test
sar
dec
jne
das
cltd
mov
adc
sti
out
xchg
into
inc
mov
decb
xchg
inc
repnz
mov
cmp
push
loope
mov
mov
leave
mov
and
insb
pop
jmp
mov
repnz
cs
fmull
pop
xor
jmp
add
andb
loopne
jns
mov
popa
adc
ret
sbb
mov
sbb
pushf
ljmp
or
adc
imul
mov
and
pusha
cmp
mov
pop
sub
lds
rorl
inc
icebp
sbb
jmp
sbb
dec
mov
inc
mov
daa
enter
and
fwait
dec
js
inc
rcrb
add
outsb
jecxz
mov
jecxz
jb
jnp
dec
and
fldenv
pop
push
movsl
xchg
roll
orb
cmp
lock
ret
adc
mov
sbb
inc
push
or
movsb
mov
jmp
xchg
push
mov
dec
imul
setp
stc
jl
repz
inc
jne
adc
pop
stos
lcall
cmp
push
lahf
add
clc
jns
sub
or
pusha
mov
push
lock
imul
mov
clc
les
pop
mov
cli
dec
mov
push
in
out
and
and
inc
jbe
xchg
notb
mov
sub
addr16
inc
js
adc
lea
add
cwtl
push
push
jns
es
xchg
jnp
enter
test
mov
or
mov
push
adc
pusha
jp
mov
roll
outsl
aam
out
pop
pushf
xor
in
xor
js
lock
xor
pop
cli
and
jecxz
in
in
and
inc
fimuls
repnz
popa
jb
xchg
add
js
cltd
or
ffree
sbb
xor
mov
push
xor
mov
cmp
ja
shll
js
mov
adc
jecxz
movsb
jg
movsl
andb
jne
movsl
sbb
dec
sbb
mov
add
loope
inc
lahf
insb
stc
imul
int
fiadds
imul
mov
or
push
sub
sbb
clc
mov
lds
xor
loopne
sub
jecxz
adc
loope
ficomps
in
stc
ljmp
xor
cmp
lcall
andb
jne
popa
or
hlt
enter
xchg
mov
mov
int
cwtl
les
or
mov
xlat
repnz
das
inc
and
in
fdivr
sub
jl
add
ja
std
mov
push
mov
add
mov
and
dec
pusha
lds
repnz
lock
jo
ret
stos
sub
push
lahf
cli
mov
mov
xchg
cmp
stos
call
pop
mov
cmp
leave
lock
das
xchg
cmp
lods
std
call
dec
ljmp
adc
cmp
jnp
div
ja
cmp
add
repz
lret
inc
push
hlt
std
sti
mov
arpl
cmp
pop
and
and
lods
std
or
scas
out
inc
push
neg
xor
ljmp
pop
mov
xchg
sub
cltd
xor
push
ss
or
int3
cmp
popa
pushf
or
daa
push
mov
cmp
jp
mov
mov
mov
pushf
ds
push
add
sub
testb
mov
mov
xchg
sub
nop
in
nop
lret
adcb
or
mov
cli
shl
sub
ret
mov
mov
push
rcr
mov
mov
jp
adc
fcoms
ds
add
test
mov
adc
ds
jns
mov
push
xor
aas
ret
dec
and
lea
movq
int
mov
mov
xchg
cmp
aas
mov
arpl
xor
call
sbbb
push
ss
mov
mov
aaa
lret
int3
adc
push
jbe
jmp
test
clc
arpl
cmp
andl
in
inc
mov
clc
jl
lret
mov
mov
dec
inc
mov
mov
inc
and
xchg
in
mov
inc
mov
je
sbb
jae
xchg
mov
popf
cld
nop
mov
mov
mov
aas
rclb
cmp
pop
sbb
lcall
clc
test
fldcw
jmp
xor
inc
cmp
adc
cmp
jle
std
adc
out
sarb
fs
jne
xorl
test
incl
dec
inc
fs
mov
daa
loope
push
mov
outsl
xchg
pushf
cld
push
xor
jmp
pusha
ret
sbb
imul
xchg
icebp
pop
xchg
sbb
jae
lahf
lods
les
fs
fbld
dec
or
mov
xor
fcomp
into
ljmp
out
in
hlt
pop
sbb
test
sub
xchg
mov
adc
and
push
daa
add
out
inc
in
ret
xchg
ja
adc
popf
mov
xchg
shll
push
cld
fdiv
arpl
push
or
ret
pop
fcomps
push
sub
jge
in
leave
adc
jmp
lret
mov
mov
mov
and
aad
leave
mov
xor
lea
jae
dec
rolb
aaa
movsb
add
cltd
pop
pop
jl
mov
arpl
pop
mov
insb
mov
push
scas
ja
sahf
insl
pop
ds
fsubs
sbb
sbbl
dec
adc
dec
pop
xchg
and
popf
push
stc
push
xchg
cmpb
mov
rorb
movmskps
mov
scas
pop
jo
out
mov
mov
xchg
xchg
addr16
dec
pop
jns
in
and
mov
in
sbb
jmp
outsb
cmova
mov
data16
add
cmpsl
sub
pop
in
test
fisttpll
icebp
lahf
xor
in
lea
test
adc
notl
lea
cmp
sbb
mov
mov
fnstcw
lea
sub
repz
subb
test
adc
cmp
decl
sub
and
and
sarb
pushf
shrl
nop
mov
mov
cmp
aas
lahf
cs
and
std
lret
pop
into
in
adc
pushf
daa
pop
shll
clc
mov
in
jmp
mov
jnp
popa
enter
add
sub
xor
jb
adc
xchg
lret
and
out
jbe
mov
daa
jo
and
lds
push
fnstsw
adc
adc
inc
js
xchg
mov
pop
push
sub
mov
add
out
or
mov
outsb
dec
xor
inc
mov
mov
lahf
mov
test
cmp
call
inc
add
loop
pop
lea
mov
dec
xchg
clc
sbb
jg
lods
xchg
cld
mov
mov
gs
out
inc
push
fisubrs
xchg
call
xor
xor
inc
divps
xchg
addb
sbb
push
cmp
sbb
or
clc
inc
test
enter
add
aad
pusha
adc
and
push
outsl
das
cmpsl
add
jno
ror
dec
loopne
sbb
jecxz
outsl
outsb
push
jns
dec
push
outsb
mov
mov
or
adc
xor
inc
iret
mov
jbe
push
sub
xchg
lcall
iret
out
inc
dec
mov
insb
mov
cs
or
test
jge
push
add
mov
subb
mov
fnstenv
jns
popl
jbe
scas
jmp
shlb
les
dec
cmp
inc
test
jp
mov
jl
popa
int3
rcll
repz
fdivrl
xchg
int
ljmp
test
push
jl
sarb
inc
pop
fistpl
aam
std
push
inc
add
cmp
mov
insl
jg
or
sub
roll
push
fbstp
inc
xchg
lock
pop
in
out
push
mov
movsb
in
mov
sbb
sub
jmp
jge
repnz
js
leave
mov
mov
in
jp
test
xchg
ja
clc
dec
cmp
jl
aam
inc
lret
sub
push
cmp
pop
cld
jl
jb
sbb
adc
stos
les
ret
jae
push
mov
ss
and
mov
test
xchg
imul
bound
mov
jno
xor
bound
dec
lret
inc
das
imul
jg
adc
cltd
xor
xor
jbe
lcall
cmc
or
dec
dec
rcrb
push
mov
or
nop
add
punpcklwd
insb
clc
data16
in
xor
dec
psrlq
and
lock
sub
test
ret
mov
addr16
movl
inc
inc
dec
paddw
into
sbb
clc
adc
or
lea
lods
mov
sbb
add
mov
adc
gs
or
sbb
dec
mov
test
daa
fmull
icebp
testl
mov
xchg
aas
add
sub
ljmp
pop
pop
mov
fimuls
sbbl
pop
mov
adc
lock
lods
hlt
dec
mov
xor
popf
cld
dec
ret
pop
cli
ja
mov
push
mov
outsb
outsb
sub
xchg
les
pop
or
inc
and
in
ja
ds
cmp
jle
push
adc
mov
mov
mov
mov
inc
jecxz
pop
out
sbbl
flds
divl
dec
aaa
cwtl
or
pusha
pop
cmp
jecxz
xor
je
repnz
xchg
loop
sub
pop
insb
test
insl
outsl
insb
mov
js
shlb
vsubsd
mov
fisubrl
xor
incl
lret
rol
xlat
mov
push
lock
or
mov
mov
mov
movsb
mov
jns
out
xchg
jae
out
push
rorl
ret
add
mov
inc
cld
adc
mov
jp
mov
call
imul
repz
push
arpl
icebp
add
sub
loope
add
dec
lret
sub
dec
fsubl
cmp
inc
push
inc
xlat
stos
dec
popf
mov
adc
orb
sti
rcrl
xlat
out
testl
mov
mov
jecxz
mov
jl
in
inc
movb
adc
js
xorb
std
pop
adc
mov
lret
adc
rcrl
int3
mov
push
pop
inc
sbb
lods
aam
lahf
cmp
and
xchg
mov
pushf
repz
mov
pusha
jg
dec
add
lock
pushf
ja
cmpsl
sarl
xorb
addr16
xlat
and
fsubrs
dec
add
mov
cmp
jecxz
mov
mov
fs
dec
lods
xchg
shl
aas
mov
sbb
and
push
aaa
dec
mov
int
out
sbb
pop
sbb
push
js
xor
clc
cmpsb
fcomip
push
dec
mov
mov
mov
add
xlat
xor
out
pop
xchg
loopne
in
dec
jae
arpl
xor
and
sub
pop
dec
fs
adc
loope
les
push
rorl
cltd
inc
cmp
roll
sarb
and
inc
mov
outsb
cmp
sbb
loopne
stc
xorb
xor
stos
sbb
dec
sub
loop
movsl
inc
mov
cltd
insl
imul
sub
jmp
pop
out
iret
test
fsubl
loopne
sti
jnp
jp
push
testb
movsb
mov
and
js
add
push
imul
dec
and
fs
add
jl
push
xor
push
dec
inc
adc
testb
cmp
insb
sti
cmp
mov
add
pop
jb
mov
xchg
jae
fcom
lret
and
mov
aas
jge
cmpsl
inc
scas
pop
aad
loop
jg
fnclex
fldcw
mov
lods
outsb
pop
push
mov
inc
sub
or
add
xchg
inc
dec
xchg
jge
stc
loopne
jecxz
cmc
imul
hlt
xor
repnz
out
dec
sar
mov
cmc
or
icebp
out
daa
repz
xchg
mov
xor
out
rclb
into
data16
testl
xchg
xor
aam
push
mov
fldt
mov
fwait
cli
sbb
xchg
scas
xor
rorl
inc
and
fstl
pushl
aam
iret
mov
scas
ret
stos
push
jg
fldenv
mov
jb
dec
loop
int
sub
fisubrl
pop
mov
adc
dec
and
push
dec
loopne
pusha
sub
lret
inc
ret
dec
push
push
mov
adcb
sub
mov
fistl
dec
fcompl
fcompl
call
and
lds
mov
pop
sbb
dec
push
pop
dec
mov
daa
mov
jae
xchg
sarb
mov
imul
pop
aaa
mov
shll
outsl
sbbb
repnz
or
iret
and
sbb
and
ret
xchg
add
and
je
js
xor
dec
aas
out
nop
jmp
lea
daa
mov
inc
mov
mov
sti
movsb
in
xor
jbe
mov
je
mov
ja
roll
mov
xor
cmpl
dec
xor
xor
mov
sbb
mov
rolb
scas
adc
inc
lock
test
in
sub
sub
int
jae
inc
mov
add
push
pop
mov
sub
mov
cli
popf
inc
xchg
out
cmp
and
int3
mov
shll
cmp
push
in
push
sub
adc
cmp
sbb
sub
dec
cmp
jl
cmc
or
adc
xchg
scas
mov
imull
divb
outsl
sbb
dec
or
dec
jno
xchg
lret
out
and
jl
push
pop
jecxz
mov
jnp
xchg
push
pop
nop
bound
xchg
stc
mov
mov
ja
xchg
mov
fnstsw
sub
ret
lock
sbb
or
add
xchg
and
ret
int3
jl
or
dec
iret
das
popa
in
imul
lret
sub
and
outsl
push
push
jecxz
sub
mov
sub
cli
in
xchg
arpl
cmc
aaa
dec
mov
mov
fisubrs
out
and
aam
int3
pop
mov
loopne
pop
test
cli
lock
cmp
fwait
or
mov
add
dec
xchg
push
add
test
aam
stos
or
aas
add
jl
dec
fisubrl
xor
roll
or
and
mov
pop
inc
sub
or
adc
jb
jae
cmp
push
sbb
adc
adc
cmp
cmp
and
lahf
out
add
and
xchg
shl
cmc
fimull
lahf
repz
stos
push
lea
inc
cwtl
xchg
sarl
fimuls
mov
out
es
aad
fmul
fldt
lret
inc
call
shr
outsb
stos
push
push
ja
ss
sub
push
div
pushw
inc
movsb
mov
jmp
mov
out
fisttps
inc
dec
jp
sbb
pop
rcrl
lods
xchg
cmp
or
and
cmpsl
mov
cwtl
jg
mov
stos
sbb
shll
lcall
jecxz
cmp
mov
testl
lock
mov
push
stos
jecxz
jecxz
rorb
std
lods
in
sub
adc
jle
int3
cli
test
adc
addl
adc
leave
push
inc
aam
call
sub
arpl
mov
jge
mov
mov
leave
mov
pop
loopne
pop
scas
sbb
jp
ja
cmp
lcall
loope
insl
mov
push
ret
mov
fsub
fwait
in
ja
cmp
sub
pop
dec
fimull
jno
fcomp
pop
ja
xchg
rorb
outsl
push
cmp
cmp
mov
movsl
data16
xchg
adcl
push
jge
jmp
scas
repz
addl
add
jnp
fstpl
mov
mov
push
xchg
std
lea
fwait
sbbb
sub
push
mov
aad
pushf
xchg
out
push
es
arpl
cmpb
hlt
shrb
pop
xchg
negl
fnstenv
jb
cmpsb
lods
ljmp
js
iret
lock
icebp
out
arpl
xchg
mov
dec
and
jo
mov
fistpll
shrl
mov
es
imul
mov
xchg
aad
je
shll
jmp
je
iret
add
aad
push
nop
jnp
push
lods
jp
lock
ja
and
add
inc
out
mov
pop
jmp
insl
mov
xor
mov
ja
repnz
shl
xchg
and
leave
das
test
push
add
mov
fcomps
data16
xchg
mov
aaa
out
cs
dec
inc
sbb
loopne
inc
outsb
sbb
call
push
loope
pop
xchg
fildl
fadd
fwait
arpl
mov
into
out
mov
xchg
pop
imul
fdivp
fildl
jle
jg
out
enter
push
cmp
ficoms
jge
cs
ret
fucomp
xchg
push
or
push
or
push
fimuls
sbb
mov
add
das
iret
rolb
ljmp
sbb
repnz
repz
clc
push
out
cmp
xor
add
fistpll
ja
cli
daa
test
out
pop
adc
and
lret
jl
call
arpl
mov
or
xor
push
jbe
addr16
mov
mov
enter
je
sar
xchg
push
aas
sbb
sbbb
aam
or
adc
mov
adc
mov
pop
jle
shl
mov
stos
cmp
ret
and
cmp
mov
subb
sub
dec
cmp
sub
lahf
pusha
sbb
repnz
xchg
mov
mov
pop
out
test
inc
cmp
mov
into
dec
call
lods
sbb
jo
pop
sarb
lret
add
add
repnz
mov
fstl
adc
ret
mov
daa
push
push
lods
mov
inc
in
inc
xchg
add
call
sub
add
xchg
dec
fwait
jae
lods
stc
push
movsl
and
clc
lods
sbb
cmp
icebp
inc
mov
icebp
rclb
dec
in
push
pop
and
out
bound
js
fdivs
mov
push
mov
ds
rorl
stc
rcrb
push
jns
cld
adc
shlb
mov
mov
adc
xchg
stc
push
into
add
es
dec
push
xchg
mov
sub
cltd
fs
cmp
rclb
sub
bound
mov
inc
ret
cmovae
dec
popf
sbb
push
gs
mov
xchg
fwait
jne
dec
imull
cli
xlat
fs
pop
aad
xchg
sti
add
or
ss
shll
mov
aas
push
xor
push
and
sub
divl
fidivl
adc
fimuls
adc
pop
inc
dec
mov
pop
inc
test
sub
ret
pop
mov
mov
mov
add
cmp
xchg
movsb
sub
in
or
mov
cmp
push
shll
and
mov
jne
in
testb
stos
mov
repnz
dec
fs
mov
mov
mov
js
mov
jno
lds
scas
testl
pop
xchg
cmpsl
aad
and
js
add
imul
bound
push
add
scas
push
inc
in
call
push
inc
jecxz
pushf
mov
pop
nop
fs
repz
cmpsl
pop
jmp
in
sub
sbb
imul
insb
jmp
insb
dec
addr16
sub
inc
bnd
incb
ja
pop
lret
loope
or
xchg
loope
mov
dec
out
cld
leave
push
mov
pop
aad
adc
outsl
nop
nop
push
lock
adc
frstor
scas
mov
cmpsl
popf
mov
xor
mov
or
ftst
dec
adc
popf
xchg
inc
sbb
imul
push
and
outsl
pop
in
add
cmp
repz
out
lcall
sbb
pop
xchg
or
outsb
ljmp
inc
ficomps
fcoms
jnp
adc
movsb
lods
call
movsl
jns
xor
jno
and
out
lds
inc
imul
subl
inc
push
je
xlat
pop
fsubl
jno
lea
mov
or
mov
mov
mov
unpcklps
pop
adc
lret
push
dec
outsl
inc
lret
out
nop
insb
add
xor
lcall
dec
dec
int3
mov
dec
push
aaa
sahf
xor
push
outsb
and
inc
or
out
add
nop
aad
sub
iret
xorl
pop
pop
fisubl
mov
mov
cmove
jb
mov
mov
jg
add
inc
cmp
cmp
mov
jle
in
dec
sbb
pop
inc
daa
js
mov
xchg
popa
pop
call
mov
and
into
sbb
mov
and
std
rorb
dec
int
ss
mov
pop
hlt
xchg
jmp
jle
mov
pop
mov
xor
lret
pushf
adc
inc
cmp
or
jmp
sti
mov
int
std
in
mov
movsl
xor
push
cmpsb
dec
data16
scas
cltd
in
int
jne
adc
cld
push
scas
mov
xor
lret
mov
or
fbld
lds
dec
scas
and
imul
xor
mov
mov
dec
push
lods
xor
pushl
mov
mov
dec
addb
aaa
mov
xchg
mov
dec
inc
in
into
mov
push
out
ja
leave
pop
cli
jbe
sbb
das
je
fs
or
mov
aam
jg
loopne
fsubp
sysexit
cmp
mov
dec
rclb
push
rcrl
jne
jl
xorl
ret
xchg
cwtl
adc
mov
stos
sbb
sub
pop
and
push
out
or
mov
adc
push
xchg
outsb
xor
and
shlb
roll
mov
mov
lea
push
mov
push
mov
das
repnz
fistl
adc
js
adc
sahf
jbe,pn
dec
fidivrs
push
nop
mov
and
pushf
jo
hlt
hlt
test
xchg
in
jl
add
mov
sbbb
rclb
nop
xor
or
rol
into
and
mov
fcom
add
into
sahf
cmp
mov
cwtl
xchg
mov
ljmp
or
push
add
jl
cmp
rcrl
clc
add
mov
sub
mov
or
cmp
je,pt
add
int
push
lods
leave
notb
or
negb
and
push
test
ret
ja
dec
xor
inc
pushf
fs
imul
pop
out
push
sub
iret
mov
xchg
sbb
rolb
ds
pop
imul
cld
cmp
or
idivb
fnstsw
cmp
or
iret
xor
xor
in
adc
mov
out
sub
in
and
mov
cs
in
cmp
pusha
cmp
inc
mov
sti
lods
mov
out
mov
cltd
lods
ficoms
aaa
lds
aaa
or
loopne
jne
jge
pop
divb
repnz
cmpsl
pusha
adc
gs
lret
movsl
cs
xor
fiadds
sbb
add
xor
or
loope
jb
bound
in
jmp
cld
jp
mov
push
ss
or
pop
cmp
fnsave
insl
lea
jg
dec
push
les
pop
or
popa
adc
rorl
pop
into
sbb
jmp
cmp
dec
lods
or
dec
push
test
dec
repz
scas
aas
das
push
sub
stos
outsb
lods
cmp
pop
jge
lret
xorb
sub
pop
call
test
iret
ret
fwait
pop
ret
test
jg
pop
test
sub
test
inc
xor
fwait
sbb
les
push
cmp
adc
add
daa
push
push
add
js
flds
sbb
fisttpll
jbe
or
xchg
or
lea
cmc
and
lahf
or
test
mov
bsf
aam
adc
fidivl
divb
mov
dec
push
int3
mov
add
in
or
aad
and
push
mov
clc
fs
es
scas
stos
jns
add
xorb
dec
je
pop
or
ret
adc
adc
jne
test
fstpt
out
dec
and
xor
sti
mov
shrb
roll
jle
xchg
mov
dec
inc
in
je
lea
push
lods
xor
movsb
sbb
inc
lret
or
ss
dec
sub
xchg
mov
shr
jle
imul
sub
xchg
es
outsl
xlat
sbb
lods
pushf
dec
enter
push
js
cmpsb
lock
imul
out
jle
push
xor
stos
inc
sbb
adc
add
mov
ret
dec
pop
dec
add
lods
sbb
mov
jp
addr16
mov
dec
mov
add
sub
cmp
pop
jmp
sbb
push
xchg
add
jns
stc
xor
pop
test
mov
das
in
push
pop
arpl
imul
lahf
mov
sbb
adc
imul
je
sub
insl
mov
nop
in
shll
push
xchg
mov
cmp
jbe
sbb
into
mov
and
dec
mov
movsl
insb
inc
out
aam
xor
je
mov
lret
jge
sbbl
pop
lds
pop
fimull
and
mov
out
jg
cmp
lcall
sbb
push
jl
aad
inc
dec
cmp
ror
stos
xlat
mov
popf
lcall
ret
lret
mov
add
mov
push
clc
xchg
loop
push
loope
jmp
inc
insb
insl
sub
jae
sub
jmp
ljmp
push
add
push
loop
adc
dec
es
arpl
pop
or
inc
dec
inc
pop
int3
fisttpll
pop
xchg
mov
pushl
push
jne
scas
push
popf
xorl
sbb
adc
xchg
mov
push
push
sbb
popf
adc
mov
pop
pop
aas
and
sti
pop
mov
mov
and
sub
xor
fs
xchg
adc
ret
push
rorl
sbb
jle
mov
lret
stos
jl
jecxz
outsb
test
popf
out
xchg
jmp
xchg
out
dec
stc
xchg
mov
pop
shl
mov
fists
lock
pop
inc
jge
cmp
or
jl
sti
mov
fisubs
aad
idivb
or
sbb
mov
mov
sub
and
dec
aam
addb
repz
dec
push
mov
pop
dec
loopne
pop
icebp
imulb
push
push
jp
fsub
mov
test
sbb
mov
xlat
and
inc
mov
sahf
adc
mov
dec
push
loopne
pusha
fcmove
pop
cmc
xor
je
inc
fwait
sub
out
out
and
xchg
jmp
imul
push
sbb
decl
movzbl
fstl
clc
test
pop
test
or
loope
push
cmp
pop
add
into
das
ret
push
shrl
into
sbb
int3
fisubs
repnz
adc
jne
repnz
push
xchg
xchg
cmp
xchg
lock
xchg
xchg
jle
mov
sub
add
sti
jne
lret
inc
iret
xor
mov
xor
in
test
rolb
lods
jno
jle
lds
cmp
lret
cmp
outsl
cmp
imul
cmp
mov
sbb
push
push
outsl
mov
js
dec
and
mov
add
sub
xor
mov
pop
mov
jbe
adcl
repz
push
fcoml
cmpsb
leave
mov
and
or
lds
out
sub
cltd
or
mov
incb
lcall
and
add
adc
dec
mov
pop
mov
ds
movsb
mov
push
loop
or
xchg
fadds
in
cmp
pushf
jecxz
repnz
add
dec
sub
call
stc
mov
in
pop
inc
lahf
push
outsl
or
insl
aaa
jns
imull
push
pop
jl
out
sbb
jns
aam
or
cmp
sub
pop
mov
push
jmp
rol
adc
inc
repz
pusha
fmul
into
fcomps
or
cmp
insb
sarl
stos
lds
pushf
or
aaa
arpl
sub
adc
push
scas
out
sub
inc
and
lds
dec
mov
add
mov
push
fnstenv
repnz
fidivrs
jno
les
imull
int3
inc
cmc
in
sbb
mov
mov
jecxz
and
out
pop
in
mov
mov
fcompl
jnp
xchg
int3
repnz
scas
pop
mov
add
or
outsb
push
sub
mov
sahf
das
cmp
adc
mov
xchg
mov
orb
pop
jb
jnp
out
aad
out
gs
fldt
daa
rorl
inc
mov
inc
cwtl
in
pop
dec
orl
pop
jo
fists
mov
add
pop
mov
add
mov
mov
hlt
jecxz
mov
cmp
sbb
mov
sahf
jmp
inc
jl
aas
loop
shrl
imul
pop
mov
xor
or
jle
add
or
icebp
xchg
mov
outsl
lahf
xchg
negb
xor
in
xchg
mov
fucomi
xchg
xor
fdivrp
push
sub
dec
jae
in
jns
in
arpl
mov
and
adc
adc
mov
and
das
cmp
push
mov
stos
adc
loop
xchg
cmp
push
adc
inc
lcall
lcall
adc
int
adc
mov
arpl
inc
inc
add
and
adc
push
pop
jb
push
mov
pop
cmp
dec
outsb
shl
or
movsl
gs
sub
inc
adc
arpl
inc
lods
add
inc
outsb
xor
movsb
aas
loopne
sbb
dec
leave
or
sub
mov
test
or
jne
std
lods
and
sub
inc
cmp
cld
pop
movsl
out
lret
sub
es
push
xchg
dec
insb
rorb
stos
ficompl
in
enter
and
mov
mov
outsl
pop
stos
dec
dec
mov
xchg
shrb
inc
les
dec
cld
ljmp
lret
jo
fistl
mov
mov
sbb
mov
test
inc
cld
cmp
pop
daa
mov
scas
stos
in
aas
jge
shll
popa
outsb
in
adc
es
idiv
xor
xor
fmulp
mov
mov
jecxz
mov
dec
add
cmpsb
jno
lods
adc
int
leave
movsb
push
cmp
setne
add
xchg
rep
cld
sbb
mov
mov
inc
and
cmp
mov
lock
and
add
xchg
setno
mov
popa
mov
rcr
roll
or
mov
dec
lea
insl
dec
add
pushf
and
pusha
jle
rcr
mov
mov
cltd
rclb
sbb
xor
dec
arpl
lret
adc
ss
xchg
fisttpl
jle
lock
cmp
les
xchg
inc
clc
cmpsl
dec
sub
pop
push
pop
sbb
fistpl
pop
mov
mov
ss
adc
cmpsl
pop
fsubs
outsl
mov
imul
jo
jo
sub
stos
push
jbe
inc
add
les
cmp
sub
mov
js
mov
sub
aam
jb
lahf
enter
mov
notl
adc
mov
adc
cltd
sub
fnstenv
xchg
pop
xor
push
cmpsb
mov
or
cwtl
dec
mov
rcll
cmp
mov
lea
shl
fimuls
cld
inc
mov
sub
cmpsl
in
push
cmp
shl
lds
aas
dec
xchg
mov
fstpl
adc
std
inc
adc
int3
sbb
notb
nop
mov
push
adc
inc
xchg
je
stos
das
mov
mov
and
and
rcrb
inc
cmp
mov
pop
push
xchg
daa
je
call
dec
jbe
iret
add
jecxz
adc
cld
ror
ret
jo
idivl
mov
repz
sub
leave
loop
mov
rorl
mov
sub
mov
push
call
sbb
mov
pop
push
adc
stos
jmp
aam
leave
out
sbb
cmc
cmpsb
sub
sub
lret
dec
or
xor
shr
pop
xor
mov
jnp
and
std
out
mov
movsb
mov
xchg
xlat
jg
adc
adc
lock
jge
add
add
out
cwtl
adc
add
fldl2e
fsubrs
imul
imulb
imul
shrl
pop
cs
pop
int
nop
cmpsl
insl
and
mov
lcall
leave
xor
mov
sarl
leave
inc
fisubrs
jle
shrl
pop
daa
fldcw
xchg
mov
leave
mov
loop
push
ret
repnz
daa
adc
xchg
push
addl
fwait
xor
and
aad
push
stc
dec
rcrl
stc
xor
sti
push
sub
sbb
mov
cmpsb
and
pop
mov
aam
jbe
mov
ljmp
sti
aad
sbb
jmp
cli
xor
pop
lea
xchg
lods
inc
lock
mov
mov
pop
int
adcl
xchg
cmp
scas
jecxz
xor
rcrb
mov
in
data16
int3
push
mov
jnp
pop
push
mov
jnp
arpl
nop
fisttps
xchg
mov
dec
push
test
sub
incl
lock
adc
add
add
pop
orb
cwtl
jbe
in
cmp
ret
pop
daa
sbb
lret
pusha
xor
adc
sbb
lret
test
sub
dec
imul
cmpsb
daa
mov
inc
outsl
mov
push
sbb
sbb
and
jno
pop
in
sarl
sahf
into
xchg
sub
push
and
pop
and
mov
pop
adc
pop
call
fs
frstor
push
adc
or
dec
test
pop
jno
cmp
pop
cmpsl
or
adc
addr16
fistpl
in
pop
ja
adc
cmp
inc
cs
loope
lods
loop
sbb
mov
pop
or
pop
gs
call
imul
lods
pop
cmp
push
add
fldcw
mov
jne
mov
cmp
enter
or
icebp
mov
mov
les
enter
pop
add
inc
cmpb
push
inc
xchg
fists
fcmovnu
in
push
pop
sub
dec
dec
mov
aad
out
jmp
ret
inc
mov
sahf
pop
jns
add
sarl
ss
aas
insb
fstps
mov
xchg
mov
jbe
popa
add
testl
outsb
push
cmp
or
sub
xchg
adc
mov
lret
cmp
dec
mov
fsubrs
repnz
sub
xor
mov
mov
fcmovnu
subl
fdivl
jl
test
mov
out
push
icebp
and
out
and
push
shrb
adc
lock
in
cmpsb
shrl
mov
and
and
push
enter
jbe
loop
or
inc
jecxz
cmp
sub
aaa
sub
lock
or
or
jp
pop
inc
and
mov
rorb
adc
sub
or
aam
sti
push
loopne
sub
jno
pop
sbb
mov
dec
scas
incl
or
enter
and
decb
inc
adc
xchg
loop
or
shll
add
and
lods
shll
jae
adc
aad
test
xchg
dec
jg
pop
dec
jl
loope
push
orb
fsubrs
aaa
dec
jge
subb
sarl
and
and
test
int3
scas
jo
xor
movsl
push
dec
sub
out
sub
call
jecxz
lods
mov
mov
pop
add
dec
in
fs
jb
sbb
es
jle
push
mov
test
scas
lret
cmp
push
popa
push
push
lcall
ret
sbbl
cmp
ss
cmp
sub
pop
and
call
mov
jno
pop
mov
std
popa
cmp
lea
xor
stos
push
sarl
mov
popf
lcall
xchg
pop
movsl
test
inc
cmpsb
imul
shrl
and
je
mov
xchg
or
sahf
pushf
mov
mov
int
jns
pop
or
sub
cmpsb
shlb
or
imull
jnp
leave
ret
sahf
ds
add
sbb
dec
shlb
test
cwtd
sbb
mov
in
loop
dec
pop
or
data16
pop
and
and
pop
aad
pop
xlat
imul
mov
shl
subb
dec
iret
xor
outsb
jle
lods
mov
inc
popf
jg
lret
fnstenv
stos
inc
mov
std
out
aam
cmp
or
sub
xor
xchg
push
push
and
ret
outsl
mov
cmpsb
dec
nop
shlb
in
pop
xchg
mov
jmp
lock
adc
repnz
or
stc
hlt
cmp
dec
aaa
ret
rclb
pop
or
add
pop
xor
xchg
cmpsl
dec
cmp
dec
lahf
mov
mov
lds
mov
mov
pop
sbb
mov
out
clc
in
fisubs
daa
xor
pusha
mov
adc
mov
cmpsb
mov
and
idivb
test
adc
dec
or
and
inc
pop
inc
pop
xor
pop
popa
js
stos
fldl
loop
push
mov
sbb
aad
adc
je
xor
or
or
in
inc
out
std
mov
mov
mov
push
pop
sub
xor
xchg
push
xchg
popa
push
xor
xchg
cltd
mov
sbb
lret
pop
in
and
inc
mov
push
and
inc
repnz
iret
dec
js
ret
inc
fs
hlt
outsl
out
hlt
cmp
sub
adc
cs
lcall
pop
cmpsb
or
lahf
sbb
jp
inc
push
xchg
adc
mov
sbb
adc
gs
in
adc
pop
mov
out
fsub
in
das
scas
fidivs
repnz
inc
incl
cmc
push
icebp
out
push
xchg
int3
inc
lea
lea
cmp
or
cwtl
jnp
mov
movb
cli
sbb
pop
popa
call
andb
ja
mov
stos
pop
call
xchg
add
mov
das
lea
jge
cli
push
mov
shll
inc
imul
xchg
sbb
mov
movl
and
mov
dec
sub
adc
inc
push
xlat
imul
adc
mov
aas
aas
adc
loopne
or
stc
pop
xor
in
stos
push
leave
aaa
pop
fwait
add
jbe
lods
cli
fdivrl
ss
xchg
stc
mov
xchg
adc
pop
fnstcw
daa
ja
cmp
push
shlb
adc
stc
mulb
xor
ret
xchg
dec
movsl
fdiv
mov
cli
sarl
pop
sahf
xchg
lea
dec
sti
das
inc
cmp
jg
lock
shrl
fildll
stos
fistpll
sbb
lret
or
cmpsb
push
ret
sub
fdivs
shlb
loop
jmp
fs
pop
xchg
xchg
ja
inc
fadd
xadd
xchg
push
fwait
loope
add
mov
xchg
jg
testl
shl
dec
dec
xor
fisubrs
push
cmp
cs
es
jmp
add
int3
mov
sbb
or
inc
dec
ja
out
popf
and
or
pusha
xor
dec
dec
repnz
push
addb
lahf
jb
mov
mov
adc
call
add
jae
inc
dec
and
movb
in
clc
cmp
out
sbb
xchg
jg
dec
out
sub
enter
or
jmp
xor
out
call
mov
lods
dec
cld
jl
pop
daa
or
lret
cltd
mov
in
jmp
lds
adc
jns
movsb
inc
insl
les
push
or
scas
inc
cmc
sub
pop
loop
leave
cs
dec
dec
lods
dec
sub
dec
mov
or
daa
dec
jbe
dec
lock
mov
fwait
mov
test
arpl
xor
sti
add
stos
jbe
js
fwait
add
jecxz
add
adcb
aad
sbb
add
pop
shll
cmp
stc
das
movsb
jns
into
aam
jecxz
mul
sub
inc
and
add
jbe
sbb
pop
or
rclb
dec
lret
mov
cmp
pop
adc
mov
dec
ljmp
inc
cld
jnp
pop
mov
std
negb
icebp
bound
mov
xchg
clc
jle
lock
addr16
movsb
ljmp
lds
mov
in
icebp
std
mov
out
es
cmp
jne
notl
inc
ret
jmp
aas
cmp
xlat
pusha
mov
adc
out
and
push
fisubrs
imul
icebp
or
stc
or
mov
aad
inc
dec
inc
aad
bound
int3
push
mov
inc
or
repnz
fmuls
xor
scas
scas
jl
into
and
daa
adc
adc
xor
cwtl
xchg
aad
and
lock
je
popf
pop
cmp
dec
loope
andl
out
adc
stos
cmp
es
aas
jp
jb,pn
jno
stos
adc
scas
fwait
cmpsb
cmp
jmp
dec
cld
xchg
xor
xchg
lods
adc
pop
cs
xor
jb
rorb
xchg
in
mov
mulb
repnz
xchg
je
cld
clc
aaa
scas
shl
in
mov
mov
pop
aas
insb
addl
inc
ret
int
cmpsb
pop
xchg
scas
mov
push
dec
fsubrl
mov
dec
adc
sbb
push
rorl
and
push
xchg
jle
lcall
pop
xor
xchg
std
pushf
pop
push
scas
outsl
xor
sbb
xchg
aam
sub
mov
lods
mov
or
pop
push
xchg
adc
dec
add
push
notb
mov
xor
pop
adc
xor
mov
jl
sub
mov
loopne
push
cmp
test
cmpsl
pop
xor
jno
outsl
add
fsts
aaa
push
and
mov
mov
and
clc
test
shlb
loope
push
pushf
jb
cmp
stos
mov
dec
dec
test
ret
and
jp
mov
adcl
into
loopne
popa
repz
enter
test
cmp
cli
xlat
in
sahf
popa
ljmp
and
xchg
sub
xchg
movl
adc
cmp
mov
mov
lea
insl
popa
push
sub
or
mov
and
sub
push
sub
push
pop
dec
popf
enter
fistl
xchg
mov
dec
fwait
daa
addr16
stc
test
fsubs
shlb
inc
cli
fimuls
ret
lea
inc
and
push
inc
fcoml
dec
fsubl
mov
in
xchg
pop
or
sbb
jle
xchg
push
call
xchg
std
cmpb
js
cmpsl
xchg
daa
or
add
sbb
mov
std
cmp
lds
mov
pop
movsb
lods
adc
ja
jge
xor
jb
xchg
insl
push
add
addr16
ficomps
rorl
mov
add
add
push
out
mov
and
mov
mov
adc
fstpl
mov
lds
shr
in
movsl
pusha
ja
popf
pop
sti
inc
mov
mov
add
or
jns
pop
fcmovnu
jmp
jg
xor
test
sbb
sub
push
call
fwait
bound
pop
out
mov
inc
outsl
push
sub
mov
imul
lds
sbb
in
and
out
add
or
dec
sbb
adc
cmpsb
push
dec
pop
mov
loopne
ret
ficomps
inc
push
movsb
xchg
mov
cltd
mov
pop
pop
rcrb
pushf
jecxz
stc
mov
dec
push
pushf
push
dec
das
inc
mov
push
jg
dec
add
popa
push
sarb
inc
mov
jbe
fisubrl
mov
jnp
xlat
jns
pop
add
sbb
push
js
jle
mov
fisttps
add
jno
fcompl
push
movsb
fwait
push
bound
fildll
in
mov
gs
jmp
hlt
pop
mov
jecxz
xor
cmp
inc
inc
add
sbb
ret
inc
pop
mov
iret
push
sbb
mov
sub
test
test
mov
data16
xlat
ja
mov
push
mov
push
cld
adc
lcall
in
and
rcr
lods
mov
xor
inc
outsb
jmp
icebp
out
inc
cltd
mov
lods
push
dec
sbb
sbb
mov
cmpsl
dec
leave
loopne
sub
cmpsb
std
fcom
fnstcw
push
push
jae
inc
enter
adc
cmp
xor
mov
test
mov
popf
ret
cmp
dec
ficoms
je
push
mov
das
jno
and
movsb
ja
mov
pushf
fstl
cli
dec
xchg
push
dec
cs
add
xorb
mov
rorl
mov
sbb
mov
and
stc
push
inc
lea
pop
mov
filds
xchg
mov
mov
or
mov
fst
push
mov
push
sbbl
push
or
mov
xchg
dec
mov
sub
shl
pop
or
daa
mov
icebp
in
movsb
xor
pop
das
test
pop
lret
out
push
xchg
lret
or
mov
push
dec
loop
xor
stos
jl
mov
fcmovnu
sbb
int
push
test
push
xor
mov
test
inc
mov
call
jne
rolb
cmc
dec
and
xlat
mov
les
aad
jae
test
outsb
and
jp
loop
andb
mov
fsubs
push
push
xchg
xor
aas
xchg
sti
xor
sbb
in
mov
int3
pusha
xchg
adc
jns
in
and
pusha
fildl
shll
int
inc
and
jo
inc
aaa
cmp
pop
mov
arpl
fmulp
iret
sub
movsb
lahf
xchg
pop
lds
addr16
dec
out
xchg
loop
lret
into
push
push
iret
add
mov
loop
cwtl
shll
cmp
hlt
push
rcr
fwait
sub
loopne
add
mov
scas
ret
sbb
jge
pop
jg
clc
xchg
popf
xor
hlt
cmp
cwtl
stos
dec
insl
jmp
or
adc
imul
xor
xor
ret
xor
lcall
mov
sbb
popf
out
mov
or
sub
mov
fyl2xp1
or
leave
iret
test
pop
stos
andb
dec
sub
xchg
lock
pop
lcall
dec
xor
inc
flds
lret
or
or
scas
loopne
lcall
pop
mov
sub
and
mov
mov
adc
int
cli
in
sbb
inc
inc
mov
xchg
repnz
jne
stos
fsubs
mov
movsl
adc
aas
imul
hlt
fs
cmpl
in
xchg
icebp
mov
sub
mov
imul
xor
cmpsl
test
clc
out
loope
dec
shll
icebp
es
xchg
push
mov
mov
ds
shlb
cmc
xchg
fistpl
lods
jle
and
inc
divb
xchg
mov
adc
sub
cs
or
popf
cmp
mov
xchg
scas
in
mov
aaa
dec
int3
out
mov
add
or
adc
outsl
mov
or
and
or
pop
mov
mov
leave
fistpl
cmc
jp
shlb
xchg
mov
xor
cld
mov
orb
fwait
leave
or
sbb
jle
add
xor
lahf
add
ficoml
pop
stos
dec
jae
insb
dec
sub
xorb
jle
inc
sub
mov
out
lcall
leave
mov
adc
mov
xchg
outsl
lods
inc
aad
xlat
out
popa
loope
movsb
cmp
cli
adc
fcomps
cmc
xchg
fdivrl
mov
inc
jnp
lret
nop
les
daa
lods
imul
mov
inc
xor
subl
cmc
cwtl
mov
mov
jg
inc
fistl
pushf
cmc
loope
ljmp
in
movlps
scas
cmc
adc
cmp
psrad
pop
repz
dec
out
jl
call
movsb
stos
cld
xchg
jle
mov
add
xchg
adc
lods
xlat
lock
push
out
lods
and
mov
and
mov
and
sahf
sbb
out
popf
cmp
jae
and
mov
pop
or
imul
lock
mov
fdivrp
jp
xor
ja
scas
jo
jle
stos
inc
or
incl
leave
mov
ljmp
push
shrb
hlt
adc
cmp
jae
jne
nop
and
movl
lret
pushfw
cmp
ss
and
clc
sub
insl
cmp
inc
sbb
xor
out
push
jle
subl
pop
mov
call
sub
hlt
int3
adc
cli
sbb
fistps
mov
inc
int
cmp
test
inc
aam
bound
subb
pop
inc
xchg
daa
or
mov
dec
dec
int
test
cmp
add
or
mov
mov
jnp
xchg
sti
ljmp
psrld
mov
sub
dec
push
mov
add
mov
pop
ds
jne
jp,pt
in
enter
pusha
hlt
xchg
jle
insb
lods
int
jl
jns
lds
and
cmp
in
sub
sub
rcll
xor
mov
and
pop
mov
mov
stos
shl
into
in
or
adc
or
add
pop
add
mov
bt
mov
and
or
mov
test
icebp
lods
out
sbb
xor
aad
call
fwait
dec
adc
ficompl
mov
push
int
or
push
stos
push
or
call
cs
je
daa
xchg
test
out
std
mov
loopne
mov
clc
sbb
outsb
aad
sbb
mov
xchg
cmpsl
lret
sub
addr16
xor
jae
mov
fisttpll
xor
iret
mov
lock
out
nop
bound
and
insb
push
pop
insb
pop
repz
jns
add
gs
push
sub
inc
cmpsb
aad
mov
add
and
pop
mov
pop
fstpt
leave
ret
popf
push
inc
neg
push
cmpsb
jge
sahf
dec
fcoml
adc
out
lods
push
lods
in
popf
loope
mov
pop
or
push
cmp
test
add
cmp
mov
sub
shl
add
scas
sbb
xchg
nop
dec
push
pop
dec
pop
adc
mov
in
push
mov
push
popf
cmpsl
ss
sar
adc
sahf
lods
lods
loopne
jo
pop
imul
mov
bound
ja
inc
xor
xchg
mov
push
inc
cmpsb
rcl
jmp
xor
and
mov
into
test
adc
pop
loopne
mov
pop
inc
ja
inc
adcl
ss
out
fisttpll
sub
mov
lds
and
rorl
and
and
mov
mov
outsl
push
lods
aaa
dec
out
or
aad
dec
jnp
testb
push
fs
incb
repz
leave
xchg
addr16
shlb
xchg
mov
jnp
dec
or
or
test
inc
add
jbe
push
sbb
push
and
out
fildl
push
mov
scas
pop
xor
cmpsb
xor
into
adc
divl
sub
pop
arpl
mov
cld
popa
pushf
dec
loopne
cmp
adc
or
or
xor
popf
dec
lahf
cmc
and
mov
int3
arpl
lcall
mov
test
ret
jae
test
dec
das
push
inc
fisubrl
out
xor
inc
sbbb
popf
out
pop
dec
std
lahf
scas
adc
sub
xor
adc
add
test
jmp
pslld
cmp
cmp
xor
sbb
sbb
cmp
dec
cmp
pop
push
push
xchg
push
or
lahf
in
or
stc
jmp
cmp
shll
and
mov
clc
dec
test
clc
push
push
sarb
jne
sbb
roll
and
insl
xchg
pop
mov
push
push
xor
adc
loope
shlb
pop
mov
outsb
aam
pop
loopne
mov
or
lock
inc
sub
cld
lahf
push
mov
cli
movsl
or
pop
jl
nop
cs
mov
movsl
into
testb
mov
addr16
dec
stos
fwait
ja
jle
fsubrl
inc
or
dec
jp
mov
cwtl
clc
jnp
push
roll
push
int
rolb
sub
sbb
and
xor
xorl
xchg
int3
push
pop
dec
jmp
lret
inc
popf
clc
das
rolb
adc
pop
fisubl
dec
call
stos
scas
jmp
xlat
or
mov
in
test
xchg
jmp
movsb
xchg
jo
cld
shrb
popf
mov
mov
mov
or
sub
mov
sbb
int3
sbb
cmp
adc
jl
out
push
adc
dec
inc
sub
add
test
cli
dec
inc
js
aam
adc
add
push
pop
mov
stos
mov
and
repnz
add
cmp
sbbb
stos
lods
out
sbb
int
xchg
pop
and
aad
cltd
push
or
sub
imul
inc
les
mov
push
sub
lret
cmp
xchg
lds
sub
fmuls
insl
stc
repnz
repnz
jns
cwtl
sbb
arpl
xchg
adc
jae
sbb
sbb
out
test
lret
int3
mov
test
push
pop
inc
cmp
mov
xchg
jl
inc
mov
xchg
mov
jecxz
frstor
loope
test
xchg
inc
pop
fincstp
sbb
test
fs
ja
add
shll
mov
lret
add
lods
cmpsb
pop
and
std
out
popa
gs
xchg
mov
dec
mov
stc
and
je
mov
mov
mov
xor
mov
scas
dec
pop
stc
xor
cmp
mov
cmp
fisttps
mov
cwtl
icebp
pop
inc
dec
cmp
jmp
xor
pop
stos
loop
das
mov
addr16
aad
xor
dec
dec
sbb
lods
test
orl
xchg
cmpsl
dec
adc
mov
movsb
popf
and
aas
cmc
inc
popa
es
pop
js
lea
cmpsl
iret
repz
push
in
dec
sti
aaa
xorb
stc
int3
mov
inc
mov
lcall
ret
scas
xchg
add
sahf
aaa
push
test
out
mov
js
cld
mov
fnsave
aam
pop
std
inc
stos
pop
jns
mov
sbb
lret
repnz
fwait
pusha
add
lods
push
dec
sbb
out
push
cmp
aad
or
xor
vmovups
in
inc
jp
ja
addl
cli
fsts
sbb
orb
popa
das
inc
dec
dec
repnz
add
pop
int3
dec
dec
lret
fidivs
test
lcall
push
dec
xor
daa
aam
sbb
test
test
xor
pusha
mov
mov
mov
in
jmp
ja
jno
mov
ljmp
aam
push
xchg
jb
or
push
xor
jae
cs
sbb
aam
xor
dec
dec
es
ds
insb
jae
cmp
clc
jg
sub
lcall
mov
adc
xor
cmp
popf
jge
and
lods
aaa
loope
jns
cmp
pop
mov
and
loopne
stos
ret
je
dec
pop
jns
fnsetpm(287
xchg
mov
int3
or
fdivrp
lret
adcb
xchg
lock
inc
pop
scas
push
sti
xchg
cmp
inc
movsl
daa
pop
rcrl
out
jbe
inc
pop
movsl
sub
lock
cli
or
mul
xlat
sti
mov
aam
fcompl
inc
push
jg
inc
scas
pop
dec
fs
jnp
sahf
into
add
xor
inc
mov
mov
or
add
call
shll
das
popf
test
lea
adc
lds
sub
push
cmp
xor
mov
jbe
lahf
pop
dec
inc
dec
and
or
push
pop
rcrl
pop
loop
cmp
add
pop
xchg
leave
sub
xor
and
cmpsl
mov
pop
jnp
icebp
rolb
lret
rorb
mov
push
ret
cli
jb
fbld
nop
orps
in
xchg
and
jne
inc
push
ficoml
pop
mov
inc
push
mov
dec
js
std
and
aad
xchg
inc
push
cmp
cmp
sbb
cs
adc
push
pop
call
mov
add
in
orl
adc
loopne
push
adc
icebp
sub
xchg
mov
fs
movsl
in
sub
mov
xor
dec
mov
fs
es
mov
sbb
repz
and
xchg
and
mov
popf
and
inc
ja
int3
movlps
popa
pushf
fstl
mov
xchg
icebp
xchg
push
mov
addr16
int3
jbe
xor
cli
lea
push
push
addb
sbb
push
xchg
lcall
and
subb
push
and
xchg
sahf
sub
inc
adc
push
inc
and
insl
pop
jge
mov
jge
icebp
mov
inc
push
cmp
loope
out
adc
in
xor
adc
cmp
push
aam
test
insb
adc
fisubl
aaa
mov
push
stos
xor
jne
xor
push
mov
iret
xchg
fdivs
fstp
adc
aas
pop
jns
stos
xchg
cmpsb
mov
xchg
addr16
enter
mov
and
aas
mov
filds
xor
shr
push
xchg
bound
or
sbb
push
ret
rcl
jecxz
sbb
cmpl
rorb
xchg
push
jne
cltd
clc
data16
aas
add
xchg
lret
jle
and
jae
xchg
paddsb
fnstcw
xor
je
inc
lcall
push
test
mov
and
or
insl
xchg
fdivs
or
inc
aam
jb
cltd
sub
and
mov
xor
xchg
jle
mov
xchg
out
mov
movsb
sub
pop
cmpsl
cmpsl
sbb
add
inc
outsl
scas
stos
add
mov
mov
fsubrs
mov
mov
dec
shl
sti
je
cltd
ret
outsl
mov
mov
cmc
xor
or
xchg
mov
pop
xchg
aaa
add
jns
or
pop
int
sub
pop
lea
push
dec
push
ficoms
mov
aam
dec
xor
adc
cmp
mov
sub
xor
jle
in
into
cmp
gs
es
push
ljmp
lret
sbb
and
lock
div
mov
ja
iret
call
cmp
scas
pop
and
xor
dec
out
clc
push
test
jl
scas
xchg
mov
jnp
fsubl
mov
adc
mov
insl
aas
mov
xlat
cmp
dec
adc
xor
push
test
popf
sub
mov
subb
pop
jae
fistpl
into
bound
fsubrp
adc
ds
cmp
arpl
and
mov
and
jae
jno
xchg
addr16
sbb
dec
imul
jg
mov
rcr
dec
pop
mov
imul
sbb
fs
push
add
pop
push
sub
xrelease
clc
scas
dec
sbbb
mov
xor
xchg
xchg
daa
mov
addr16
in
pushl
mov
or
in
lods
mov
add
repnz
iret
rcr
xchg
shll
inc
lods
xchg
mov
xchg
add
mov
inc
cmp
cmc
and
sbb
add
xchg
mov
mov
test
in
mov
mov
pop
jbe,pn
inc
loop
iret
and
pushf
pusha
mov
mov
sub
sub
dec
pop
je
leave
cmpsb
and
test
data16
loop
pusha
cmpsb
add
mov
pop
sbb
cmp
sub
ss
dec
cmpsl
dec
mov
mov
aaa
imulb
cmc
and
jp
mov
push
int
mov
pop
cmp
push
push
add
hlt
mov
aaa
lds
rcr
xadd
out
cld
lds
jg
or
mov
jge
sub
mov
popa
mov
add
lods
adc
movsl
add
mov
cs
and
jmp
js
nop
insl
jae
sbb
addl
fcomps
ficoml
test
es
in
push
pop
cmp
cwtl
icebp
aaa
cmp
pop
pop
addl
inc
mov
ficoml
cmp
dec
rolb
mov
and
dec
popa
sub
out
cmp
dec
decw
jo
mov
push
add
iret
loopne
mov
loopne
rolb
rcr
negl
outsl
cltd
jmp
mov
rolb
mov
xchg
xlat
adc
mov
mov
mov
incl
lahf
dec
sbb
adc
push
gs
in
negl
mov
dec
mul
mov
push
sbb
push
movsl
cld
xchg
lods
sbb
iret
insl
ret
mov
addr16
push
inc
adc
out
popf
mov
aaa
cmpsl
filds
xchg
jg
scas
push
gs
and
xchg
pop
and
xchg
je
rorl
xchg
int
and
cs
mov
xor
adc
mov
out
pop
ror
mov
enter
inc
push
loop
xchg
sbb
cltd
pusha
in
mov
sarl
jg
test
push
movsb
test
test
adc
xor
pop
imul
loop
les
add
imul
pop
je
stos
fiadds
iret
lods
or
pop
aaa
jge
stc
jb
ljmp
lar
jno
inc
mov
sbb
lock
dec
and
rorl
fsts
scas
outsb
cmc
scas
push
push
sarl
fnstsw
mov
dec
pop
mov
mov
std
fisubl
jecxz
sub
jnp
xor
cmp
jmp
out
movsl
fwait
inc
xor
fidivs
sbb
fimull
inc
bound
add
mul
cs
shrb
push
cmp
jecxz
sub
jno
pop
mov
xor
sbb
jp
loop
and
fcoms
add
push
lock
iret
and
mov
xchg
mov
fwait
in
loope
dec
jne
xchg
push
sub
mov
push
pusha
mov
mov
enter
and
or
outsb
jnp
loopne
pop
xchg
sub
push
ret
mov
xor
aaa
cmp
pop
xor
ljmp
enter
inc
sub
bound
jl
pop
mov
pop
mul
inc
and
push
lods
int3
add
daa
xlat
stos
xchg
mov
mov
mov
inc
and
add
imul
stos
stos
push
jb
lods
nop
push
lods
lahf
lahf
inc
xchg
mov
jns
mov
test
pop
sahf
and
dec
cmp
cwtl
mov
push
xchg
mov
int
fsincos
add
or
rcll
ret
xor
je
cwtl
cmp
cmp
sbb
xor
mov
add
jo
inc
testl
xor
popf
ret
sub
bound
loop
cmp
cmp
mov
mov
sbb
push
pusha
rcll
push
push
xchg
or
enter
pop
cs
movsl
mov
jl
sub
mov
aaa
ficoml
pop
dec
jecxz
mov
adc
arpl
dec
jmp
push
fcomps
cmp
sub
jns
dec
inc
out
stos
sbb
mov
mov
mov
test
mov
sahf
cmp
or
shlb
rorb
mov
cmp
mov
sub
cli
xchg
sub
sbb
xchg
cld
das
mov
pop
shll
loopne
lret
fcompl
cs
stc
test
fnstcw
orb
sbb
add
loope
cmp
adc
mov
jge
jl
in
cmp
cmp
mov
xor
sbb
cwtl
pusha
ds
pop
test
jne
pop
push
inc
inc
cmp
lret
jmp
scas
addr16
cmpsl
dec
adc
in
mov
cli
sub
dec
jno
lock
nop
push
or
test
jb
mov
mov
and
pop
test
lea
lret
jg
sbb
test
lret
and
jp
push
imul
scas
pushf
jnp
ss
pusha
sbb
xchg
inc
or
decl
mov
imul
pop
decb
push
or
ror
loop
rcrb
cmp
cmp
jmp
or
pop
fucom
loop
or
fidivl
mov
pop
jg
sub
and
mov
jns
push
insb
pop
inc
pop
dec
and
les
mov
jl
sub
test
out
mov
out
mov
pop
std
into
stos
jnp
xchg
and
pop
in
or
inc
and
cli
leave
in
cmp
push
dec
loope
inc
into
and
mov
cld
push
das
push
add
mov
pop
pavgb
pop
andb
out
sbb
add
mov
cmpsl
dec
sub
jnp
ret
add
addr16
test
sub
jl
fnstsw
sbb
rorb
lea
ret
scas
mov
int
cmp
mov
test
mov
cltd
sub
das
outsb
sbb
mov
xchg
dec
sub
pop
hlt
leave
mov
mov
es
sbb
inc
mov
xchg
xchg
or
ljmp
in
mov
dec
cmp
mov
repz
pop
leave
sarl
adc
cwtl
xchg
and
loope
mov
xchg
mov
test
testl
cmp
fdivr
jb
sbbl
out
inc
sub
push
lods
xchg
sbb
push
imul
jne
lea
cmc
xchg
fistpll
es
stos
cs
daa
imul
pop
loop
mov
in
int
int
out
jmp
cmp
push
mov
pusha
and
cltd
inc
dec
pop
and
sbb
pop
stos
jmp
shlb
lea
cmpsl
sarb
xor
icebp
push
xchg
data16
dec
push
enter
lcall
lods
push
mov
dec
sub
dec
mov
in
cld
daa
fs
jg
jl
xchg
lahf
insl
inc
or
xchg
cmp
xchg
xor
xchg
jae
xchg
nop
clc
fsubl
inc
int
shlb
adc
in
lahf
lds
mov
mov
mov
lods
int
and
pusha
leave
int
or
popf
mov
add
fcmovnb
std
enter
cmp
jecxz
dec
imul
cwtl
fsts
stos
sbb
imul
xlat
shr
outsl
pop
shrb
fcompl
inc
decl
iret
mov
and
jecxz
fldenv
into
xor
sbb
xor
in
aad
mov
push
sub
fldcw
cmc
xchg
mov
hlt
jmp
xor
aad
cmc
ret
das
pop
loopne
mov
sbb
pop
scas
sbb
scas
cmp
int
adc
push
dec
or
adc
loope
aam
cmpsb
xchg
mov
xor
movsb
and
jae
mov
xor
xor
xor
sub
push
xor
in
cmpsl
insb
sub
cmc
call
lods
sbb
add
jle
pop
push
jg
std
scas
popf
pop
fcompl
mov
jle
popf
xor
aam
sbb
adc
adc
mov
mov
sub
leave
aaa
xchg
sbb
out
popf
jp
jg
fcmove
into
mov
add
imul
jnp
inc
cmp
dec
aaa
push
xchg
mov
jl
push
dec
xchg
loop
aas
fisubrs
or
push
sub
mov
and
inc
sbb
insb
pop
jb
add
xchg
shrl
mov
sub
or
bound
popa
push
mov
pop
sahf
and
mov
in
scas
test
xchg
cmp
into
and
xchg
lret
rcrb
or
xchg
mov
das
addb
mov
loope
inc
dec
mov
mov
pop
enter
dec
cwtl
jl
lock
adc
adc
jg
pop
sahf
inc
je
xchg
mov
xor
outsb
mov
mov
call
sbb
pop
jno
imul
pop
sub
cmp
jge
xlat
inc
roll
sarb
lea
push
loop
and
or
int3
imull
xlat
aaa
pop
xchg
in
rolb
push
inc
lret
push
std
js
jmp
aas
sbb
iret
add
pop
test
das
scas
pop
daa
insb
movsb
ret
or
mov
push
mov
int
adc
inc
lock
ret
mov
out
add
es
push
es
stc
loopne
or
leave
dec
repz
inc
inc
movsl
rcr
inc
lods
je
and
mov
add
xorb
push
iret
add
mov
cmp
cld
in
in
test
out
sbb
fidivrs
inc
inc
pop
xchg
enter
mov
es
das
test
mov
push
fwait
sti
inc
cli
sub
in
jnp
inc
clc
jbe
jns
inc
fimull
xor
or
bnd
inc
aas
or
jbe
nop
in
adc
fbld
das
push
inc
adc
fmuls
daa
mov
sbb
mov
jo
imul
adc
pop
lds
pop
aad
aas
jg
push
iret
movsb
lcall
sbb
loop
incb
rol
les
inc
std
adc
stos
mov
xchg
cmpsb
sti
cmp
mov
mov
mov
in
xchg
jo
inc
repnz
sbb
fs
mov
xor
js
pusha
mov
add
imull
pushf
popa
notl
sbb
repz
xor
shlb
cs
call
mov
mov
mov
pop
jl
addr16
or
jecxz
add
mov
sti
subb
ljmp
imul
sti
jnp
or
inc
jo
jmp
js
cmp
inc
sub
mov
push
loope
mov
adc
pop
xor
aam
sbb
inc
add
mov
sub
sbb
fisubrs
loop
pushf
xchg
lods
push
aam
cmp
int3
mov
mov
cs
push
lods
inc
gs
mov
jmp
or
lea
and
pop
dec
xchg
sbb
inc
imul
xchg
pop
movsb
fmul
pushf
cli
sub
std
cmp
lea
int3
ds
scas
int
mov
pop
mov
push
out
arpl
test
std
push
daa
xchg
js
int
shl
pop
jle
mov
in
mov
shlb
mov
jae
and
lea
ljmp
jmp
mov
pop
or
or
mov
repz
pop
iret
loopne
pushf
test
lods
dec
insb
dec
out
or
mov
inc
and
or
pop
xchg
cmc
or
push
imul
lret
pop
mov
mov
sub
jp
pop
cmpsl
push
rol
add
sbb
mov
pop
pushf
inc
inc
cmp
and
outsl
sub
pop
popa
xor
ret
std
rcll
and
imul
mov
bound
jbe
lods
mov
cmp
hlt
out
rcll
jecxz
sysret
dec
lahf
dec
jae
adc
cmc
es
dec
das
cmp
xor
xor
fiadds
lods
cwtl
shlb
pop
dec
dec
dec
mov
lods
pop
in
mov
jne
shrb
loope
ret
push
ret
std
ret
test
imul
pop
mov
jmp
jb
mov
in
lods
cld
xchg
lods
loop
sub
adc
imul
mov
xchg
inc
ss
cltd
pop
cmpl
dec
and
sbb
mov
in
push
dec
ja
jecxz
dec
sub
mov
mov
mov
mov
and
mov
sub
inc
repnz
mov
mov
inc
icebp
andl
and
jnp
dec
push
or
aas
imul
sub
fs
sti
pop
aad
fcomps
mov
dec
push
xchg
jns
dec
stc
inc
jbe
pushf
sub
fadd
cli
dec
xchg
add
dec
div
sbb
js
lods
sbb
mov
xor
push
push
add
xor
adc
push
mov
stc
out
in
cmp
cmp
in
xchg
aaa
pushf
mov
jne
mov
jne
lds
loop
cmpsb
mov
aas
push
push
inc
sub
push
and
lcall
pop
mov
adc
mov
push
divb
cmpl
jo
mov
insb
imul
cs
sbb
xor
xchg
cmp
fcoms
pop
xor
mov
ljmp
fwait
lock
loop
lahf
stos
lds
arpl
inc
mov
sarb
in
sbb
lock
sub
mov
push
lret
stos
or
sbb
movsl
inc
mov
ficoml
sbb
out
mov
sub
shrl
push
xlat
add
loop
pop
aad
mov
inc
leave
inc
lock
push
leave
mov
cmp
shll
aam
adc
jne
push
popf
sbb
add
jmp
mov
add
dec
fildll
add
pop
nop
sbb
pause
mov
xchg
icebp
into
scas
rcrb
cli
insl
out
scas
ss
fldl
jne
or
mov
jp
test
pop
rolb
xchg
jle
and
out
cmp
sbb
dec
das
insb
or
sbb
decl
jle
das
cli
lock
daa
sub
out
push
gs
sub
sub
push
push
push
push
sub
shll
or
add
pop
mov
movsb
push
dec
mov
shlb
imul
loope
lret
test
mov
popa
or
inc
add
mov
lcall
repnz
addr16
or
push
mov
mov
fs
xchg
adc
pushf
cmc
inc
xor
inc
outsb
inc
adc
add
push
mov
jge
mov
les
andb
pop
cli
or
pusha
mov
cmpsb
push
push
shr
xchg
inc
hlt
mov
mov
pusha
movsb
adc
out
inc
jae
test
jecxz
repz
cmp
or
mov
inc
mov
xor
cmp
lret
shlb
dec
mov
mov
cmp
dec
je
iret
ja
subb
adc
jae
js
mov
pop
add
sbb
cmp
xchg
pop
testl
insl
ret
dec
xchg
scas
mov
stos
lahf
jmp
mov
fisttpll
mov
jo
fidivrs
cmp
mov
loopne
cli
push
xor
ja
mov
rcrl
or
and
aam
jle
or
movsb
add
in
enter
and
xchg
pop
clc
shr
jmp
push
mov
insb
jo
cmp
mov
sahf
xchg
cmp
push
mov
loope
mov
jae
test
push
inc
arpl
cmpsl
or
les
lods
mov
insl
int3
pop
repnz
push
adc
lods
or
test
dec
fcoms
outsl
rcrb
rcl
or
daa
cld
mov
mov
xchg
mov
pop
daa
sub
add
icebp
mov
rcrl
outsb
int3
les
ror
mov
xchg
xor
es
rorl
mov
inc
stos
or
jle
add
cmc
repnz
repz
mov
or
push
xchg
adc
push
jno
mov
mov
push
in
mov
mov
inc
or
mov
cwtl
and
jbe
push
sbb
fnstcw
arpl
mov
aaa
data16
jecxz
pop
jle
xchg
mov
adc
cmp
xor
ret
mov
imul
xchg
add
xor
or
in
adc
xchg
sbb
aam
clc
jecxz
scas
adc
mov
mov
mov
adc
and
or
repz
pop
xchg
mov
pop
pop
div
js
inc
in
ret
sub
jge
test
das
and
in
or
xchg
test
xchg
push
and
fmull
insb
je
xorps
shrl
jmp
out
stos
test
test
inc
nop
and
stos
pusha
mov
jae
rcr
rorb
push
dec
inc
xchg
add
sub
lahf
inc
inc
clc
loope
sub
dec
adc
andl
mov
ja
sbb
and
les
and
xor
cltd
inc
andb
data16
rorb
shr
fidivrl
or
sti
mul
sbb
pusha
adc
mov
mov
cli
arpl
pop
addr16
sbb
xor
in
adc
imul
repnz
sub
push
dec
add
movsb
pop
outsl
imul
aaa
lea
into
icebp
dec
jle
scas
or
popf
mov
insl
popa
rcl
xchg
add
enter
mov
mov
mov
mov
data16
jnp
lock
out
pop
and
inc
cli
or
sub
adc
xchg
dec
mov
cmp
mov
adc
sub
cmpsb
rolb
ds
sub
push
adc
cwtl
int3
inc
inc
jge
popa
in
lret
xchg
mov
and
sub
mov
mov
or
fistpl
fdivrl
js
jae
mov
push
xchg
add
adc
dec
loopw
fmuls
lea
sahf
outsl
push
push
std
fstpt
sbb
aam
movsl
jno
mov
fs
rclb
cmp
fxch
jne
sbb
sahf
mov
add
lds
addr16
sub
adc
sub
fwait
das
scas
setl
daa
mov
sti
sub
je
inc
aad
je
push
insb
push
cmp
or
xor
xchg
xchg
jmp
jle
mov
call
add
lock
and
cli
cmpsb
xchg
xor
shrb
lahf
in
adc
and
lock
push
cmpsl
subb
xchg
data16
clc
and
cld
movsb
mov
mov
pop
adc
sbb
movsb
sub
jge
jns
addr16
enter
pop
hlt
adc
dec
jle
mov
shrl
xorb
push
pop
inc
repnz
out
push
sahf
xchg
icebp
js
mov
in
rcl
not
shlb
fcmovu
or
cmp
jecxz
mov
rcr
loop
dec
xchg
sub
sub
mov
aaa
lds
jg
lods
sbb
pop
xchg
pusha
into
xchg
jecxz
out
aam
outsl
ret
das
lcall
jb
pop
and
push
xchg
je
adc
or
mov
fisttps
cwtl
or
adc
cmc
jmp
lcall
out
push
ljmp
jecxz
mov
push
adc
pop
mov
out
add
jp
jg
popa
shrl
fldl
push
ror
or
dec
mov
repz
and
xchg
push
sub
jmp
ja
movb
mov
xchg
incb
hlt
push
repnz
add
inc
cld
stos
add
pop
lcall
call
js
jne
mov
popa
in
outsl
xlat
jl
fcoml
push
push
lods
sub
and
les
cmpsb
test
mov
pop
lahf
insl
fdivrs
pop
loopne
aam
push
mov
test
bound
stos
add
fistps
adc
cmp
jg
or
lret
or
bound
ds
mov
rcl
xchg
sub
pop
stos
test
in
ret
cmp
adc
cmp
push
in
jbe
stc
add
lret
fdivs
pop
push
and
pop
mov
jno
sbb
out
scas
pop
ret
pmaxub
aaa
fistpl
mov
shrb
ret
stc
sbb
mov
and
jmp
mov
cmp
aam
jns
les
mov
jp
inc
in
addb
dec
xchg
das
lock
and
getsec
jnp
mov
and
sbb
popf
pop
push
push
out
sub
jno
sbb
xchg
push
je
mov
push
add
out
cli
dec
inc
dec
aad
in
in
leave
lahf
or
neg
jno
int3
and
adc
and
aas
and
mov
dec
mov
pop
insl
or
fnstenv
sub
fcoml
xchg
adc
push
add
dec
sbb
xchg
xor
mov
xor
and
cmp
paddd
popa
push
lds
xchg
sbb
dec
push
or
inc
mov
jle
lcall
mov
test
jno
add
shlb
adc
push
push
shrl
fnstsw
mov
data16
rorb
xchg
xchg
fisttps
pop
in
pop
sub
popa
jl
and
jl
call
push
fildll
inc
push
lds
or
adc
adc
mov
ret
add
ja
sub
fsubl
aas
insb
sub
test
mov
push
adc
sbb
or
and
pushw
inc
mov
les
xchg
ret
mov
fcoml
xchg
pusha
push
sbb
cltd
out
jle
addr16
addl
add
sbb
dec
add
test
xchg
mov
fdivl
xor
fmuls
out
loopne
clc
jle
mov
and
xor
push
add
aaa
xlat
cmpsl
inc
lret
pop
sub
cmp
push
push
cmp
jnp
and
mov
mov
enter
js
push
loopne
mov
push
enter
popf
pop
int
or
mov
dec
dec
or
sbb
push
xlat
outsb
mov
mov
sbb
push
sbbl
dec
fldt
push
hlt
roll
dec
jecxz
push
int3
add
mov
jb
and
and
inc
sbb
push
leave
lods
push
or
shrl
sbb
dec
jmp
xlat
fldenv
inc
mov
es
outsb
das
push
adc
lds
xlat
rolb
fdivrp
dec
mov
movsl
jnp
aaa
negl
adc
sbbb
push
sbb
insb
rcll
sbb
enter
fldcw
mov
rcr
gs
mov
xchg
cmp
or
mov
pop
push
jns
test
lcall
inc
mov
or
aaa
daa
in
push
insb
push
cld
mov
js
adc
scas
cmp
add
ret
inc
push
das
stos
loopne
call
pusha
jb
mov
push
dec
lds
test
add
pop
imul
mov
stos
inc
mull
mov
aas
pop
lret
inc
mov
mov
cmp
jg
stc
shl
mov
icebp
push
leave
repnz
in
mov
adc
outsl
leave
xchg
or
rolb
insl
cmpsb
pusha
sarb
sbb
lock
bound
cmpsb
je
pop
mov
mov
mov
cmp
pusha
int
jae
xchg
js
pop
push
sahf
cmpsb
cmp
jo
cmp
notl
or
push
or
fld
stc
fmuls
xchg
je
mov
pop
sarb
lahf
call
cltd
xor
and
sti
xor
ds
pop
pop
imul
sub
test
ljmp
and
fildll
mov
loopne
clc
jmp
stos
jge
mov
sub
lahf
and
lret
xor
adc
sub
mov
mov
fiadds
push
loop
push
hlt
sub
into
add
xor
iret
mov
sub
lret
mov
inc
pop
lret
push
mov
and
adc
mov
mov
mov
jns
lcall
lods
popf
and
sub
les
in
xor
jp
stos
push
scas
sarb
jmp
cmpsl
rclb
dec
xor
fwait
xor
test
out
in
lret
insl
ljmp
push
pop
lods
insl
stos
in
push
fisubl
pop
test
adc
mov
mov
enter
enter
rcr
lods
push
or
and
loopne
mov
and
xorb
scas
and
cltd
fsubr
fbld
pop
fisubrs
xchg
insl
inc
mov
mov
shr
push
icebp
add
pop
adc
shlb
movsb
fidivs
out
fucomi
test
xchg
jns
jnp
xchg
jmp
iret
mov
and
mov
fs
nop
or
mov
dec
dec
sbb
push
push
sar
add
mov
pop
mov
sbb
dec
jge
shlb
mov
jo
adc
dec
into
sbb
cmp
into
xchg
repnz
rcr
xorb
inc
adc
jle
sbb
lds
jne
pop
test
mov
ds
cwtl
scas
adc
add
pop
xchg
sbbl
popf
sbb
pop
ss
fucomip
sti
in
sub
fldt
test
push
add
ja
cs
cli
cmp
jae
mov
daa
sbb
xchg
ds
pop
ljmp
mov
out
test
rcll
xlat
sub
add
pop
and
or
sbb
es
cld
adc
sbb
mov
lahf
addl
int3
je
jl
ret
jae
xor
push
pop
dec
push
movsl
movl
std
inc
push
mov
add
ds
aas
inc
xchg
loop
inc
adc
and
scas
fwait
xor
or
into
mov
ficoml
push
dec
or
je
test
stos
cli
test
push
sub
rcrl
out
push
aas
cmp
les
dec
pop
ss
xchg
push
sbb
inc
xor
add
mov
mov
outsl
mov
ss
outsb
int3
cmpb
and
mov
adc
mov
xchg
mov
lcall
les
pop
mov
cmp
cmpl
mov
push
dec
add
inc
shlb
insb
mov
xchg
jae
loope
or
rolb
mov
pop
and
jns
adc
es
ficompl
lahf
jnp
test
pop
les
repz
and
pop
shll
adc
rcr
lcall
dec
adc
popa
jp
shl
inc
sub
dec
jle
mov
mov
add
mov
inc
cwtl
add
faddp
or
sbb
loope
cmp
loope
gs
ror
rorl
test
pop
and
xchg
push
ret
jg
out
adcb
js
sbb
movsl
fdivs
in
mov
adcb
test
jmp
addr16
js
cmp
mov
mov
mov
mov
adc
daa
push
lcall
nop
xor
mov
repnz
xchg
and
or
ret
push
jae
aam
stos
sar
xlat
test
add
ret
loopne
xor
fs
test
fisttpll
shrb
je
mov
mov
inc
xor
stos
xchg
ds
rcll
xor
mov
mov
ds
inc
mov
in
ljmp
cmp
decb
fiadds
outsl
push
js
mov
mov
ret
cli
aad
outsb
leave
inc
xchg
pop
ja
xchg
push
xor
ret
sarb
adc
or
scas
and
jg
mov
sahf
add
push
aam
inc
lahf
test
out
sbb
push
add
jg
std
call
mov
add
and
iret
mov
dec
test
test
addb
jae
mov
loope
push
pop
dec
rorb
fiaddl
xchg
xchg
stc
arpl
outsl
jnp
pop
cmp
push
xor
in
hlt
mov
or
mov
pop
mov
sbb
cltd
lret
jb
and
std
cld
test
pop
jle
inc
jnp
in
fisttpl
mov
xor
xor
dec
xor
je
aas
pop
push
or
xchg
xchg
mov
inc
dec
cltd
in
cmpsl
sbb
cmpsb
movsl
dec
sbb
lahf
mov
ss
iret
pop
push
xchg
xchg
inc
or
or
das
push
push
in
xor
ret
add
jecxz
or
shll
dec
fcompl
push
pushf
mov
push
outsl
cmp
pop
mov
mov
test
add
imul
jmp
xor
jo
je
stos
push
in
mov
test
jnp
cli
pop
popa
test
xor
dec
pop
iret
jecxz
and
jo
imul
xor
mov
pop
add
int
test
in
adc
mov
mov
mov
cmc
sbb
mov
mov
ss
aam
push
jno
call
jg
dec
mov
dec
ret
adc
fsts
cmp
fistps
fdivl
mov
test
addr16
push
sub
data16
fs
cmp
and
pop
or
mov
cmp
adc
pop
jno
or
xor
sbb
xorl
cmp
dec
stos
mov
adc
sbb
imul
inc
ja
popa
fbstp
leave
lret
in
sub
movsl
sti
jl
stos
jle
or
icebp
jno
and
push
xchg
je
xor
jns
dec
mov
cs
mov
div
ss
mov
or
out
dec
daa
pushf
daa
dec
dec
mov
inc
pop
jp
xchg
jecxz
cmp
andb
mov
xchg
subb
jns
lods
dec
mov
lods
dec
aad
out
shlb
sub
or
add
call
pop
cld
jbe
jge
adc
fistpl
les
or
sbb
dec
jb
scas
mov
test
rolb
dec
lds
data16
cmp
mov
jl
mov
inc
in
xchg
xor
mov
push
sbb
mov
push
mov
iret
scas
fmul
sbb
bound
xchg
push
cmp
adc
loope
push
cmp
add
pop
mov
pusha
or
nop
or
mov
fildll
push
push
rcll
jl
setbe
aas
sbb
inc
setl
dec
inc
scas
addr16
sub
nop
push
sbb
clc
mov
add
js
and
pop
sbb
push
sbb
cmp
lret
jmp
test
mov
jp
stos
arpl
cmp
and
stos
push
sbb
lret
or
push
shll
xchg
scas
mov
cmc
fisubrl
xor
lods
testl
mov
leave
aam
cmc
subb
insl
dec
daa
xor
testb
movsb
daa
enter
idiv
push
add
xchg
sbb
aas
dec
dec
stos
xchg
xor
in
jbe
sbbl
in
jp
ret
xchg
sub
fwait
das
call
shlb
sbb
adcb
mov
xorl
lods
arpl
lds
sbbl
xchg
adc
add
pop
test
std
mov
outsl
mov
cmp
outsl
and
pop
jbe
cmp
stos
jo
inc
loope
jo
clc
dec
pop
hlt
jnp
mov
sub
sub
jo
movsb
add
in
sbb
cmp
in
pop
test
rcl
jecxz
cli
add
outsl
mov
mov
dec
dec
imul
sub
push
pusha
jle
loope
aaa
mov
and
flds
cmp
mov
je
push
cmc
sub
jl
add
notb
js
loop,pt
rclb
push
lcall
rcrb
lds
and
cmp
sub
mov
or
in
les
jne
dec
movsb
jns
pusha
outsl
jmp
mov
xorl
mov
pusha
jne
aaa
jbe
push
and
xor
mov
out
push
cmpsb
scas
inc
out
dec
repnz
fdiv
popf
lods
repz
jne
inc
rorb
push
xchg
dec
out
std
aas
mov
cs
out
xor
mov
int3
gs
repnz
lret
push
jge
mov
push
imul
cmc
xchg
ror
les
es
mov
dec
dec
int3
xorl
es
adc
mov
push
gs
mov
shr
fldl
scas
add
push
shll
or
push
in
mov
clc
sahf
les
fistpll
in
sbbb
lret
daa
ss
xor
mov
adc
out
scas
cwtl
out
xchg
fisttps
mov
xor
xchg
cmp
adc
inc
shlb
ret
mov
xor
push
sahf
cmp
clc
test
repz
sbb
mov
and
je,pt
fisubrl
inc
push
loop
mov
or
cmp
lahf
shlb
mov
xchg
rcrl
push
pop
adc
cs
std
addr16
test
adc
inc
in
in
ret
sbb
push
stos
pop
add
lahf
jp
mov
cmp
sti
cmc
insb
sub
jl
adc
or
inc
lret
dec
mull
call
cmp
sahf
sub
inc
adc
call
inc
add
neg
xor
lea
dec
cli
xor
add
sub
push
mov
pop
mov
lds
lods
mov
imul
xor
lods
jbe
lcall
loop
repnz
popf
mov
sbb
imul
aas
and
pop
and
cld
add
sub
shl
jg
pop
popf
push
ss
pop
mov
loope
lret
outsl
jnp
jbe
inc
xor
pop
mov
testb
cld
fstpt
xchg
sarl
out
xchg
cltd
test
sahf
xor
lock
mov
pop
jecxz
push
mov
xchg
mov
or
shll
mov
xor
push
jb
adc
cmp
jae
shrb
xchg
fisubs
mov
jecxz
cmp
iret
lods
jns
out
leave
bound
jns
jmp
stos
xor
loopne
xchg
sub
pushf
xor
and
push
movsl
sub
or
lods
inc
ja
mov
loope
xchg
mov
mov
mov
jo
xor
arpl
mov
nop
sbb
popf
jmp
jecxz
lods
lock
jl
lods
std
je
cmp
mov
sar
arpl
icebp
int3
sti
sti
adc
sbbb
xor
cmp
xchg
cmp
jbe
jp,pn
jo
pop
cmp
lds
mov
sbb
lods
pop
fsub
mov
loope
or
mov
cmp
movsl
push
sbb
mov
push
add
dec
push
rcr
iret
out
aaa
andl
aaa
negb
mov
mov
add
repz
pop
gs
mov
mov
jecxz
cmpb
mov
stos
pop
ljmp
jae
clc
xchg
out
add
xchg
cli
mov
and
xchg
in
pop
push
xor
bnd
gs
lret
ljmp
je
pop
sbb
jg
mov
mov
addr16
dec
xchg
mov
aaa
xor
nop
stos
and
sub
repz
sbb
imul
jecxz
popf
or
push
jl
shlb
out
nop
cld
out
mov
imul
pop
test
test
push
in
cld
jge
mov
xor
lods
inc
mov
inc
fadds
push
std
add
sbb
mov
cmc
or
pop
push
jno
in
push
lahf
imul
xchg
jle
add
je
in
iret
cmp
add
shlb
pop
cmp
xor
xor
pop
and
jo
imul
shll
das
movsb
mov
mov
daa
fsubp
je
cltd
or
inc
test
stos
daa
fisttpll
mov
pop
xor
lock
out
stc
sub
aad
dec
sbb
into
jmp
pop
and
jnp
cmc
pusha
jae
cmpsl
mov
xor
and
dec
push
andb
lods
dec
stos
loope
jno
cmp
sti
adc
into
je
pop
movsl
fistpl
dec
push
out
pushf
fptan
aad
scas
inc
ret
or
sbb
es
pop
mov
mov
pop
push
add
sub
xchg
in
jp
fisubrs
mov
adc
mov
ss
push
or
mov
or
int3
andb
add
out
adc
incb
push
mov
cmp
pop
scas
aaa
mov
in
sbb
push
rorl
jne
aad
push
jbe
or
dec
push
add
lea
imul
cmp
sbb
cmp
sbb
dec
test
cmp
xchg
jmp
fldenv
enter
mov
xlat
fsubr
mov
ss
inc
jns
test
xorl
es
fdivl
jecxz
sti
clc
xchg
mov
inc
leave
lock
popa
cmp
lret
cmpsl
lcall
popa
inc
pop
adc
aas
fdivs
pop
popf
lcall
jge
test
mov
push
movsl
and
insb
out
sbb
cltd
outsb
pop
mov
adc
std
sub
lahf
ret
xchg
lret
pop
flds
jo
sarb
dec
cmpsl
inc
cmp
or
push
pop
push
cmpsb
lds
movsb
xchg
mov
sbb
loope
imul
jbe
ja
add
repnz
in
jge
inc
pop
mov
xor
jg
or
dec
adc
inc
lret
mov
fnstsw
sub
stc
mov
push
push
dec
ds
cmp
shl
je
dec
cli
mov
filds
enter
jne
shrl
mov
loop
and
fwait
aam
cmp
outsb
mov
iret
pop
imul
or
sbb
fnstcw
lret
xor
jnp
xchg
and
jne
mov
cmpsl
call
test
ret
adc
dec
xor
test
dec
mov
jno
scas
subl
and
je
lret
fs
mov
rcl
jl
inc
push
adc
pop
inc
pop
lods
clc
mull
jbe
push
push
stc
cld
add
jecxz
push
xchg
xor
sbb
in
jae
ret
inc
xchg
cs
es
bound
in
or
ja
lret
test
outsl
repz
mov
cmp
push
push
cmp
sahf
ljmp
push
dec
fcmovb
dec
sbb
in
cmp
rcrl
mov
pop
loope
imul
mov
dec
fdivrs
cmp
shll
jnp
or
les
jecxz
push
mov
addr16
and
bound
or
shufps
fsts
adc
and
imul
xor
cmp
je
push
shlb
sub
adc
jo
lds
jmp
imul
rolb
scas
lea
xchg
es
loop
rcrw
mov
adc
and
dec
cmpsb
or
out
mov
pop
or
fimull
jg
ss
xor
test
sahf
mov
or
cltd
lahf
and
fisttpl
imul
fcompl
daa
xchg
jle
or
jge
dec
aad
add
or
jb
in
jbe
lahf
sbbl
lret
addb
daa
daa
notl
mov
cmp
fstpl
cmpsl
daa
stos
repnz
mov
rclb
mov
ds
xchg
loop
int
lods
sub
add
les
xchg
xor
movsb
sbb
rclb
pop
add
imulb
int
mov
test
popl
or
adc
and
outsl
repnz
das
sbb
pop
pop
cs
jg
nop
pop
mov
lock
icebp
and
pop
cmp
movl
pop
or
std
sarb
adcb
inc
or
enter
inc
test
je
pop
inc
xor
xlat
xor
sbb
adc
daa
xor
or
enter
test
imul
out
adc
std
sbb
pop
jle
push
int3
pop
je
shll
shll
mov
aam
pop
cwtl
jno
xchg
push
add
popa
mov
int
sub
add
xor
or
push
xchg
data16
pop
or
shl
outsb
outsb
movsl
push
xchg
mov
roll
jae
cltd
mov
pop
scas
popf
ds
push
leave
iret
bt
fsubs
adc
xchg
sub
xchg
pusha
outsb
push
jp
cmp
inc
inc
dec
mov
mov
xchg
push
jo
lret
sbb
mov
inc
arpl
adc
stos
push
lds
sub
int3
or
arpl
rcrb
adc
dec
repnz
mov
pop
outsl
fldt
cmp
sub
addl
xor
outsl
mov
mov
lret
js
jg
jmp
mov
xor
xor
push
sahf
movsb
mov
ficoml
push
inc
jl
pop
jb
roll
stos
inc
out
jecxz
jecxz
int
cs
xor
inc
cmpl
lahf
roll
mov
cmpl
into
rorl
in
popf
cltd
jecxz
popf
and
test
jecxz
adc
push
ja
pop
int3
push
pop
push
out
cmp
rcrl
jno
imul
lcall
sub
dec
mov
jno
clc
or
add
jecxz
lods
inc
dec
adc
into
scas
inc
push
cmpsl
cmpsb
fmuls
push
xor
fwait
lcall
add
divb
repz
test
xchg
into
sbb
add
shlb
in
jecxz
out
aaa
shlb
push
jnp
dec
sub
pop
adc
adc
push
lods
xchg
js
jg
fildl
fldenv
sbb
inc
arpl
loope
cmp
loop
aam
and
test
sbb
xor
add
pop
pop
js
sub
sbb
fistl
mov
bound
mov
mov
in
pop
out
ret
jmp
xor
in
inc
xchg
aas
out
mov
in
in
pop
addl
repnz
mov
add
scas
or
add
xor
cs
push
mov
cmpsb
pop
cmp
icebp
rorb
dec
fdivp
mov
cmp
xchg
push
stos
cmc
js
int
popl
es
cld
xor
sub
jp
jnp
lret
repnz
jmp
cbtw
jnp
and
enter
rclb
jle
add
cmp
push
js
push
inc
nop
add
xacquire
insl
jns
mov
iret
mov
mov
push
sub
data16
jge
adc
ja
dec
rcll
hlt
icebp
adc
stos
push
dec
mov
test
shlb
jge
mov
sbb
loopne
dec
fstps
and
mov
jbe
mov
mov
aad
push
mov
repz
ja
adc
adcb
cltd
sub
repnz
inc
pop
push
pushf
aad
cmpsl
nop
fadd
mov
adc
jg
cltd
cmpsl
mov
icebp
outsb
push
notl
and
pop
cmp
mov
loope
inc
sbb
sahf
push
push
adc
mov
arpl
adc
pop
scas
fcomps
cltd
sub
lods
mov
lcall
imul
out
mov
or
mov
rol
pop
sbb
inc
and
sbb
xlat
mov
sbb
mov
or
cwtl
loope
test
das
xor
scas
pop
test
test
rol
out
mov
jnp
xchg
sbb
xchg
fs
scas
dec
dec
xchg
push
sbb
out
sbb
jge
fldl
in
pop
sbb
cmp
pop
xor
cwtl
jecxz
repz
xchg
adc
repnz
enter
enter
fnstcw
ret
int
sar
or
ja
jnp
jle
sbb
insl
and
lcall
adc
sub
mov
cmp
add
jmp
inc
ret
dec
dec
push
stos
cmpsl
ror
xchg
flds
ljmp
stc
clc
mov
push
loope
lods
sub
rcll
dec
or
pop
xor
mov
sub
add
data16
fstps
mov
lds
out
xlat
and
add
and
cmp
ds
push
jnp
outsb
inc
shl
push
inc
or
cmpsb
test
jg
mov
outsl
sti
iret
adc
pusha
or
push
xchg
in
mov
repnz
cmc
aam
shl
push
cltd
cli
xor
and
add
mov
outsb
sub
loop
stos
mov
shl
dec
rorb
mov
bound
and
aaa
out
aaa
repnz
orl
xor
cmp
scas
mov
aaa
jnp
rclb
jecxz
jnp
mov
rcrl
mov
sbb
mov
std
repnz
and
inc
in
pop
rorl
xor
inc
pushf
mov
movsb
inc
adc
repnz
stos
sbb
pop
mov
repz
mov
int3
inc
int3
xchg
xchg
mov
xchg
pop
inc
popf
rcl
cmpsb
jns
inc
negb
test
repnz
fadds
mov
mov
xlat
rolb
mov
scas
cmc
pusha
mov
popl
cmp
test
mov
sbb
std
xchg
cli
sub
int
stos
sub
enter
ja
sbb
fisubrl
int
mov
loopne
mov
imul
pop
gs
sbb
add
pop
inc
out
mov
inc
cmpsb
mov
cmp
pop
xchg
je
cmp
stc
dec
fsts
or
movsb
adc
fwait
in
add
out
insb
jg
jbe
adc
daa
clc
sbb
sbb
pop
out
arpl
dec
int
xor
push
sbb
jl
outsl
jno
imul
and
int
pop
test
test
cmp
out
scas
mov
scas
mov
pop
loopne
out
mov
add
xchg
cmp
mov
lret
test
inc
js
sbb
inc
jb
and
adc
repz
stos
aam
jnp
inc
mov
pushf
out
out
or
adc
mov
loop
call
sub
fistpll
sub
notl
mov
icebp
test
cld
andb
imul
loope
mov
sbb
pusha
scas
mov
mov
bound
std
push
outsl
push
ja
cmpsl
mov
jae
mov
mov
inc
aad
add
pop
or
int3
into
cwtl
xchg
xor
nop
aad
xor
fs
pop
pop
pop
mov
sub
sbb
xchg
cmp
inc
fstl
pop
push
and
insl
push
or
movsl
cmp
pop
and
orl
lea
mov
arpl
ss
ljmp
fstp
xor
in
je
imul
add
dec
movl
push
xchg
push
cmpsl
arpl
arpl
push
in
mov
mov
sub
jmp
xchg
xor
or
mov
jbe
lret
testl
ret
sbb
movsl
filds
dec
lock
cmp
push
cli
pop
mov
movsl
sbb
loop
jp
es
jne
jg
stc
adcl
icebp
xlat
jge
ret
xchg
gs
cmp
xor
mov
push
dec
shrl
push
jge
loop
pop
xchg
add
out
pop
push
das
sahf
jnp
mov
fstl
leave
in
out
aam
dec
int3
mov
inc
ss
in
push
outsb
mov
mov
in
cmpsb
push
xchg
addr16
mov
cli
jl
mov
movsl
xchg
stos
mov
sahf
in
je
rolb
cwtl
bound
arpl
pop
test
imul
mov
sarl
cmp
dec
push
push
mov
and
adc
adc
inc
cmpsb
shrb
icebp
cwtl
sar
mov
loop
pusha
out
lods
mov
movsb
nop
imul
push
xchg
int3
pop
lcall
push
mov
xor
add
mov
inc
imul
gs
leave
ficompl
add
mov
rol
aas
mov
lahf
inc
lock
stos
cmpsb
fldcw
pusha
in
ficoms
mov
psubusw
cmp
mov
lods
cld
inc
adc
aas
roll
ret
popf
out
lea
flds
ja
pop
outsb
jg
fistl
or
add
xor
sub
pop
or
dec
pop
sbb
and
push
ret
movsb
inc
cmp
inc
jae
imul
inc
pop
and
inc
shrb
in
sarb
push
xor
inc
daa
adc
and
sub
mov
inc
movsl
decl
cmp
scas
mov
inc
push
decb
mov
arpl
cmp
xlat
jl
and
rorl
pop
push
subl
test
adc
pop
loop
movsb
dec
push
dec
jmp
sub
mov
cmp
into
cmp
sahf
ret
popa
rcrl
xchg
je
jbe
cmpsb
jae
out
push
ficomps
aas
scas
daa
xor
sbb
sub
into
aad
sub
fisttpl
shr
jbe
cld
xchg
es
adc
jb
int3
mov
pop
inc
cmpb
lret
shll
xor
arpl
inc
out
jae
push
or
inc
pop
movb
adc
fdivs
loope
pop
jo
dec
ss
xchg
adc
sbb
idivb
dec
pop
mov
xchg
nop
cmp
push
jl
popf
mov
mov
jbe
add
mov
dec
add
aad
and
cmpsl
imul
fistpll
in
aas
mov
outsb
or
xchg
and
add
adc
push
ljmp
mov
fidivrl
movb
dec
sbbb
movsl
lock
cmc
mov
jl
fmul
cmp
sbb
movsl
push
subb
leave
push
add
movsl
cli
adc
mov
imul
ljmp
jnp
ret
sbb
dec
lahf
and
push
into
xchg
test
movsb
dec
cmp
xor
aas
ljmp
and
pop
sub
fwait
mov
push
xchg
cs
add
lock
push
pop
ljmp
lret
insl
mov
ja
cmpsl
push
pop
jle
sar
adc
ljmp
pop
testb
adc
and
mov
and
adc
xchg
adc
cwtl
adc
cmp
dec
fnsave
das
lods
arpl
pop
popf
ja
and
bound
daa
push
cmp
and
add
popf
sti
pop
fsubr
popa
mov
mov
sarb
ljmp
jmp
int3
mov
xor
mov
pop
cwtl
inc
xchg
sti
xchg
loop
enter
incl
add
xor
enter
stc
loopne
movsl
es
jnp
push
sbbb
testb
paddusw
minps
inc
je
loop
xchg
sub
sbbb
mov
fildll
popa
jno
scas
cmp
jg
jb
lcall
lahf
push
outsl
mov
gs
add
ja
jo
jo
xchg
pop
andl
sub
cwtl
lahf
xor
das
ret
mov
pop
push
xchg
call
jae
jmp
pop
inc
sarb
ret
rcrb
mov
shr
cwtl
lahf
arpl
mov
fwait
adc
lods
xchg
imul
sbb
mov
lret
int
lods
aad
sub
xchg
jae
inc
cmp
push
lea
shl
popf
xor
fwait
lret
fcomip
rcrl
ficoml
shrl
dec
and
lcall
aaa
adc
les
es
subl
sub
fstp
popf
aad
jae
mov
or
push
jmp
cmp
jo
push
in
cmpsb
popa
ror
aas
popa
fcoms
test
popl
dec
cmp
dec
dec
jl
ret
mov
loop
cltd
mov
in
stc
aas
push
mov
pop
sub
dec
or
sub
shr
and
mov
and
aaa
loop
cmp
add
mov
out
ds
lds
enter
inc
scas
adc
adc
and
xchg
mov
cwtl
xor
sub
das
lea
pusha
leave
inc
out
push
mov
push
daa
insl
cmpsl
es
mov
mov
insb
iret
cmc
andb
call
jp
lods
cs
repnz
bound
mov
xchg
fcompl
aaa
cmp
or
and
jmp
jnp
mov
mov
jle
mov
cmp
pop
push
mov
jb
rcrb
pop
cmp
test
dec
sub
jmp
push
dec
cmpsb
insb
pop
sbb
aas
pop
pop
test
ja
jns
imul
adc
aas
popf
push
mov
daa
pop
fsubs
mov
dec
add
mov
add
je
push
cmp
cld
xor
jecxz
daa
add
and
outsb
fdivl
mov
cmpsb
jl
cmpsl
mov
pushf
in
cmp
sbb
call
in
add
arpl
and
rorl
jecxz
sub
movsb
inc
mov
mov
rcrb
xlat
or
adc
pop
adc
hlt
test
fidivs
test
push
lret
imul
aaa
pusha
ret
outsb
pop
xchg
jg
repnz
sarl
subl
sub
dec
dec
pop
mov
xor
xchg
pop
or
dec
xor
inc
or
rcr
mov
jle
or
out
mov
mov
mov
ret
test
lahf
jge
dec
stos
iret
lds
insb
cmp
inc
lcall
movsl
adc
inc
jg
cwtl
and
jp
inc
jl
pop
mov
icebp
fidivl
or
ret
dec
push
pusha
mov
add
sti
and
hlt
imul
mov
ret
cmpsl
leave
les
mov
cltd
shll
or
lds
into
xchg
mov
sti
inc
aam
sbb
bndstx
pop
sub
into
pop
and
fwait
mov
shll
js
inc
adc
xorb
ffree
jge
out
enter
enter
in
shrb
sbbl
data16
adc
insb
xor
rolb
andl
or
pusha
dec
imul
sbb
aad
push
jns
inc
xchg
mov
stos
fadds
dec
add
add
mov
fcompl
xchg
dec
subb
aas
dec
rolb
sbb
insl
into
xchg
popf
adc
mov
xchg
cmp
mov
lcall
sbb
sbb
imul
mov
dec
cs
int
sub
push
xchg
loope
dec
scas
insb
xchg
jg
pop
xor
out
and
ret
mov
cmc
inc
cmp
mov
sahf
fcoms
ljmp
sub
roll
dec
fmul
into
jnp
jno
imul
lret
mov
push
ficompl
repnz
cmpsl
pop
mov
fs
jae
movsb
loope
loopne
and
les
push
mov
aaa
ljmp
mov
sub
lds
movsb
xchg
pop
nop
or
xor
mov
dec
or
rcr
lahf
lret
fcmovnb
jmp
cli
data16
sbb
sbb
inc
idivl
popf
add
mov
xor
add
repz
sahf
movsb
mov
sbb
and
sbb
pop
shl
cs
into
adc
xor
clc
mov
pop
mov
jo
leave
push
pop
mov
pop
mov
adcb
add
lods
sub
pop
negl
jle
or
jno
cwtl
push
cmp
lahf
adc
out
nop
adc
sub
and
ret
xchg
dec
xchg
sbb
mov
testb
in
xchg
sahf
sub
or
pop
iret
movsl
movl
mov
fidivl
loope
mov
fcmovbe
push
in
push
bound
pop
outsb
sub
sub
das
popa
pushl
les
mov
pusha
mov
mov
out
mov
daa
inc
mov
sub
gs
jb
inc
loop
push
xor
push
faddp
lock
mov
stos
pusha
xchg
jecxz
fbstp
outsb
ret
enter
mov
mov
pusha
inc
fcmovnb
fwait
inc
hlt
mov
jns
inc
xchg
movsl
out
push
cs
or
lcall
jno
mov
movsb
jo
fbstp
lods
xchg
divl
mov
push
jecxz
sbb
adc
clc
inc
lcall
sub
enter
in
pop
xchg
outsl
rcr
iret
jno
pusha
jb
mov
jecxz
stos
cwtl
out
dec
jne
repnz
pop
dec
addr16
test
xchg
mov
fiadds
push
daa
sbb
and
loopne
cmp
lahf
rclb
pop
push
and
fldcw
mov
pop
pop
xor
jno
or
pop
cmc
ljmp
out
push
divl
mov
jne
jle
lods
out
xchg
into
and
dec
sarb
es
fnop
sub
popa
add
mov
cmp
jo
adc
adc
jnp
jl
adcb
test
add
jbe
js
dec
rcrl
jns
gs
pop
pop
xor
adc
dec
imul
mov
test
mov
sbb
jb
mov
push
idivb
xchg
out
sbb
ja
fdivs
jb
call
cld
dec
lods
sbb
fs
xlat
flds
mov
mull
push
lret
jno
dec
hlt
stos
adc
sbb
cmpb
sti
push
cli
iret
cwtl
and
mov
pop
sbb
cmpsl
jp
pushf
xlat
sub
xor
push
stos
adc
ret
mov
sub
jp
cmpsl
push
ret
xor
and
mov
push
mov
aas
out
dec
pop
add
add
mov
out
xchg
cli
jbe
inc
mov
imul
icebp
push
sub
inc
outsl
js
adc
mov
mov
cltd
xor
loope
cli
test
mov
cmp
mov
sbb
and
imul
arpl
bnd
lods
pop
loope
and
or
cs
push
pop
movsl
lock
movsl
jne
out
jg
xchg
and
dec
adc
andl
inc
loopne
push
ret
push
gs
jns
ja
and
scas
dec
sub
ss
sub
test
sbbb
inc
mov
or
cwtl
xor
xlat
sub
into
dec
fucomi
shr
shrl
sbb
ret
mov
nop
pop
jo
xor
sub
sbb
jmp
xlat
xor
cmpsl
xchg
loopne
rorl
cmp
cmp
popa
jno
call
xchg
dec
stc
loopne
lds
inc
daa
movsl
push
lods
xchg
popa
into
mov
outsl
and
cmp
add
xchg
mov
cmc
das
insl
xor
mov
fmuls
aad
movsl
fildll
jecxz
xor
inc
or
xchg
xchg
aad
and
lret
mov
movsl
dec
ja
cmpsl
rcrl
sahf
pop
ss
in
dec
and
outsb
mov
xchg
sbb
cmpsb
jns
stc
or
jl
jbe
mov
test
mov
insl
or
dec
das
dec
fstl
push
fisubrs
or
mov
sub
in
andps
mov
inc
sbb
sti
int
sbb
enter
jecxz
pop
into
loopne
add
push
aad
test
mov
pop
aaa
xchg
sbb
ret
mov
mov
repnz
inc
fstpl
cli
and
aam
xchg
pop
and
mov
mov
pusha
add
insl
pop
jmp
push
ret
inc
rorb
pop
push
mov
sbb
push
fcmovb
mov
fnstenv
lds
imul
push
pop
xor
mov
xchg
dec
in
ret
inc
add
xchg
nop
or
push
clc
mov
pop
xchg
sub
inc
mov
fmul
aad
js
pop
or
test
out
loop
mov
imul
pop
mov
pop
popf
scas
jbe
out
cltd
rcrl
or
inc
std
out
cmpsb
repnz
xchg
dec
push
movsb
dec
data16
push
aam
bound
cmp
loop
mov
outsb
cmp
addl
push
jo
das
inc
int
adc
in
sbb
xchg
inc
fidivl
xchg
repz
pop
xor
repnz
int3
call
pop
pop
pop
mov
subl
stos
adcl
pop
repz
adc
push
push
lock
test
loopne
aam
dec
lret
les
adc
inc
push
aad
inc
mov
in
mov
inc
add
and
push
dec
pop
in
aaa
dec
cltd
hlt
idivb
sub
cmp
ret
push
int3
xor
mov
mov
mov
das
sub
in
bound
fs
imul
out
jl
pop
sub
push
jo
in
add
mov
xor
mov
adc
and
xchg
and
shlb
repz
sahf
scas
pop
in
sti
xchg
lock
in
sub
push
fisubrs
les
adc
dec
call
pop
loopne
pop
jb
ds
mov
leave
stc
pop
and
mov
nop
ja
push
gs
in
stos
rolb
shl
xchg
sub
dec
jno
fidivrl
cmc
popf
dec
inc
fsubrl
push
xchg
adc
mov
cmp
js
jo
dec
loop
sahf
mov
adc
test
or
or
ret
pop
movsl
or
mov
imul
mov
xchg
testb
in
cmp
sbb
out
std
pop
push
mov
cmp
or
cmp
push
mov
in
mov
inc
not
jbe
outsb
lret
pop
xchg
arpl
pusha
shll
mov
push
xor
fdivrs
dec
in
pop
pop
push
mov
mov
sbb
ret
pop
mov
jecxz
fsts
mov
pop
jle
test
sub
bound
cli
fildll
outsb
sahf
mull
inc
mov
inc
sub
push
mov
push
pop
aad
xor
iret
inc
stos
in
cmp
dec
adc
leave
adc
add
mov
fnstsw
sbb
push
pop
loop
adc
fstps
dec
xchg
fildll
ljmp
aam
mov
pop
cwtl
rdmsr
leave
in
adc
mov
movsb
pop
add
popf
cmp
shll
xchg
in
xchg
popf
pop
iret
lea
iret
push
pop
andl
pop
dec
add
mov
imul
mov
add
jne
sub
cwtl
pop
cmp
int3
lret
aas
insb
adc
or
iret
ljmp
test
push
mov
jno
shll
push
insl
mov
outsb
mov
adc
imul
mov
xchg
and
cmp
or
jns
jnp
cmp
xor
scas
and
loopne
jmp
lahf
mov
push
mov
and
mov
js
into
test
cmpb
adc
xchg
test
call
dec
jae
dec
sbb
xchg
adc
mov
mov
leave
fstl
dec
jl
stos
push
xor
ljmp
xor
in
pop
es
fadds
cltd
inc
stos
dec
xchg
jp
lahf
mov
adc
leave
pop
ret
push
mov
xchg
jns
icebp
pop
mov
push
sar
in
repz
xchg
inc
pop
sbb
stos
mulb
stc
bound
and
jno
sub
pop
add
out
ljmp
xchg
mov
pop
jb
jmp
and
xchg
sub
addb
mov
ja
jnp
cmp
cmp
dec
adc
jle
jb
dec
mov
mov
je
mov
flds
in
jnp
pop
adc
mov
mov
dec
sbb
scas
test
jnp
das
outsb
mov
das
or
xchg
fildl
inc
push
push
xor
mov
mov
jae
pop
xor
stos
mov
pause
gs
insl
push
leave
xor
push
cmp
sbb
dec
jge
imul
mov
add
push
mov
mov
pop
and
ret
sub
rolb
movsb
repz
xchg
adc
pusha
sbb
mov
out
jp
sbb
inc
push
aas
inc
sbb
jo
sub
push
ret
mov
out
or
or
js
adc
pop
mov
dec
imul
out
xchg
push
loopne
std
subb
push
gs
mov
mov
enter
iret
pop
out
jl
testb
push
iret
mov
dec
ffree
testl
mov
xchg
xor
incl
dec
sub
cmp
push
mov
jge
dec
inc
pusha
inc
pop
push
inc
aas
pushf
xchg
in
frstor
pop
pop
mov
imul
pop
fdivrs
xchg
xor
dec
mov
les
int
dec
int
rolb
cmp
push
rcl
mov
xor
enter
xchg
rcrb
orb
les
jnp
pop
jne
out
stos
cmpsb
enter
les
imul
sub
cmpsb
into
or
mov
push
call
ret
popa
xor
mov
push
xor
xchg
in
sbb
xor
out
or
mov
fwait
scas
push
in
les
in
mov
or
hlt
cmp
mov
add
and
mov
mov
loope
xchg
dec
and
push
inc
lret
int
sbb
sub
push
test
das
pop
cltd
cvtdq2ps
popa
outsb
sub
enter
imul
rorb
dec
out
push
sub
lods
dec
mov
pminub
sti
loop
fdivrs
imul
les
popf
popa
lahf
ds
cmpl
dec
and
add
subb
xchg
inc
push
lods
ja
sbb
popf
fwait
sub
leave
mov
aad
hlt
std
mov
inc
jnp
mov
inc
test
and
pop
sbb
push
adc
aaa
sahf
dec
repz
insl
mov
gs
addl
sbb
and
cmp
ds
add
lahf
jb
xchg
sub
rclb
push
and
push
mov
inc
jge
loope
sub
inc
pop
jbe
out
and
push
inc
and
jmp
adc
and
inc
ds
inc
rolb
arpl
adc
mov
sbb
jge
lods
lods
push
aaa
push
ds
roll
maskmovq
divl
sbb
test
xchg
hlt
mov
dec
sub
or
dec
mov
in
out
dec
dec
and
out
gs
cmpsl
dec
xor
es
jo
pop
mov
clc
clc
sbb
or
xlat
mov
nop
pop
jle
dec
jmp
sbbb
and
aas
xor
leave
cmp
insl
mov
cld
mov
insl
jg
pop
repz
jge
in
adc
std
cwtl
das
adc
or
cmpl
sub
scas
gs
ss
fcomps
ret
jp
sub
in
jle
pushf
adc
test
or
sti
ljmp
mov
mov
cmp
scas
shr
sbb
jecxz
call
sub
loop
rorl
mov
jne
cmc
and
outsl
xchg
dec
xchg
adc
mov
dec
test
pop
jae
sbb
das
loop
xor
fs
push
jb
loopne
outsl
push
lock
xchg
es
loopne
jge
sbb
cmp
repnz
or
adc
lods
aad
push
lcall
loop
jmp
loop
cmp
pop
sub
je
mov
xchg
stc
adc
dec
mov
enter
jns
add
sbb
in
dec
cmp
loop
push
imul
ja
add
jns
or
dec
mov
sbb
popa
add
das
ffreep
sub
cmp
sbb
lcall
divl
in
mov
mov
sbb
add
stos
hlt
xor
xor
sahf
xorb
addr16
mov
xchg
iret
jo
push
inc
mov
mov
xor
add
popf
mov
sub
lock
imul
jge
lcall
push
add
inc
pop
or
push
not
pop
mov
or
pop
cwtl
mov
out
sbbb
xor
sbb
idivl
jb
mulb
js
jp
mov
sbb
ret
jl
pop
xchg
mov
and
imul
xchg
lods
mov
pop
mov
adc
xchg
in
jl
inc
mov
repnz
cwtl
nop
push
stc
scas
dec
push
add
lret
sub
adc
in
roll
jmp
mov
pop
xadd
inc
test
add
roll
shrb
pop
inc
imul
mov
jns
js
pop
scas
test
inc
cmpb
lret
xchg
repz
pop
cwtl
mov
mov
mov
fsubrp
insb
fcoml
xchg
jbe
scas
fistpl
xchg
cltd
repz
mov
lret
aaa
add
mov
jle
dec
sbb
cltd
jp
popa
mov
in
stos
pop
leave
inc
mov
jno
mov
in
data16
adc
sbb
adcl
mov
sub
clc
pop
jg
jnp
lret
fdivs
test
pop
mov
ds
jle
sub
mov
xchg
dec
xchg
adc
dec
push
in
popf
pop
sti
and
cmp
les
scas
mov
jge
sub
in
lret
lods
xchg
lret
enter
ret
andb
inc
insb
popf
push
cwtl
add
out
and
sub
inc
xchg
mov
test
mov
loopne
js
dec
loope
cmp
ret
divl
adc
cmp
clc
mov
push
shr
test
std
data16
sahf
sbb
fstl
test
jmp
ficoms
mov
xlat
mov
sbb
fmuls
imul
adc
add
xchg
imul
jns
cwtl
arpl
cli
bound
sub
icebp
js
icebp
or
out
fsub
pop
std
or
movsb
pop
shlb
inc
mov
int3
lods
pusha
inc
test
rcll
lea
inc
test
xchg
and
insb
sbb
ja
xorb
mov
mov
push
sbb
jae
inc
mov
inc
rorl
add
outsl
mov
outsl
mov
cmpsl
mov
and
out
jae
sti
pop
and
fcomps
mov
lea
add
mov
mov
shlb
out
xor
fiadds
mov
gs
ss
int3
daa
outsb
rcll
gs
mov
in
bound
jmp
sti
test
xchg
xchg
shl
add
xor
jg
jge
xor
add
inc
fwait
xlat
sbbb
faddl
out
sub
lock
mov
in
add
xchg
jno
std
mov
stos
ja
xchg
lahf
mov
mov
mov
hlt
scas
add
aas
cs
mov
push
rclb
ljmp
shr
fistps
test
pop
mov
roll
dec
mov
cmpsb
cmp
fcompl
mov
inc
jns
jns
icebp
push
sbb
xor
xchg
add
imul
fistl
xor
mov
mov
pusha
mov
or
popa
add
inc
int
inc
mov
scas
es
jp
xchg
rcrb
mov
aam
int
jg
imul
xchg
insb
out
test
inc
xchg
js
xor
mov
aam
dec
data16
cmp
in
xor
inc
shlb
push
pop
lret
testl
das
push
into
xchg
les
xor
shr
xchg
fildl
ljmp
in
xchg
sub
mov
addl
fisubl
mov
push
jecxz
jp
xor
cmp
scas
fbld
add
sub
fsubrp
outsl
cmp
je
xchg
mov
push
fucomip
add
rorl
jns
pop
cli
int
jecxz
or
movsl
dec
jge
jae
dec
mov
stos
dec
int3
or
pop
mov
sbb
aad
imul
xor
pop
insb
sub
xor
out
arpl
push
pop
fs
push
cmc
ss
nop
cmp
jecxz
loope
lds
push
dec
sbb
jmp
ss
and
test
sti
or
imul
movsb
mov
repz
sti
or
in
decl
lcall
inc
xor
lods
out
cmp
pop
cmpb
pusha
xor
lds
mov
inc
sbb
xor
inc
push
rcrb
or
push
and
lods
cmpsb
test
cmpsb
add
setl
jae
cwtl
imul
mov
cwtl
out
sub
adc
in
sub
jae
xchg
dec
sbb
inc
inc
das
into
jns
es
int3
fsubrl
into
push
iret
fldt
jne
xlat
test
arpl
out
ss
push
or
mov
pop
std
test
xchg
pop
and
and
int
add
adc
inc
mov
push
out
rolb
stos
cmp
mov
jp
mov
jno
push
mov
scas
dec
mov
and
add
out
movsl
mov
adc
xorl
adc
insb
js
sti
jp
mov
lret
pushf
fs
sbb
and
cmpsb
test
imul
lret
sbb
fwait
pop
jne
les
pop
out
fcomp
movsb
int
lret
mov
ja
fs
push
shrd
adc
shll
push
je
mov
stc
inc
xchg
sub
jnp
xor
sbb
mov
jmp
xchg
pop
pop
pop
xor
cmp
or
sbb
push
adc
fs
and
mov
xchg
pushf
or
sub
jmp
dec
or
mov
cwtl
std
dec
in
out
cmp
aaa
nop
or
js
sahf
int
add
out
aas
cltd
inc
xchg
cmpsl
push
fdivrp
push
and
fisubrl
ss
cmp
repnz
popa
mov
call
jl
repz
xchg
lret
cli
clc
push
xor
dec
jns
aad
and
mov
pop
push
sahf
in
dec
xor
adc
lock
testb
sahf
cli
push
cltd
inc
loope
aam
lcall
and
sbb
mov
insl
or
cmp
ret
jbe
insl
stos
xchg
mov
mov
cld
pop
mov
jmp
dec
mov
mov
imul
jns
std
cmp
in
pushf
inc
test
or
mov
mov
lds
stos
shrb
shr
mov
xlat
lret
orb
ret
ljmp
es
insl
cmpsb
mov
das
roll
in
xor
mov
pop
movsb
sbb
repz
aad
dec
and
push
movsl
movsb
lods
loop
and
xor
stos
outsb
and
or
jp
pusha
add
leave
dec
pushf
push
stos
add
xchg
dec
mov
enter
setns
idiv
xchg
adc
inc
mov
fisubrl
cltd
call
jle
adc
fisttpl
sahf
mov
xor
inc
pop
jg
inc
or
loopne
and
fistl
aad
loope
dec
mov
pop
pop
adc
mov
sub
arpl
lahf
ds
cs
xor
mov
cmp
push
stc
add
push
mov
fwait
push
inc
pop
mov
dec
insl
xchg
addr16
cvtps2pi
dec
shl
xor
das
cwtl
xor
js
loope
or
out
sti
aad
pushf
in
divb
or
fwait
jge
mov
rolb
std
fldt
mov
xor
ss
les
pushf
lcall
in
and
xchg
aas
cmpsl
mov
jl
arpl
loopne
jmp
mov
adc
gs
and
pop
jmp
ljmp
sub
and
jbe
stos
add
stos
inc
push
add
test
cmp
lahf
test
fdivrs
test
dec
mov
push
jne
jo
roll
clc
leave
ucomiss
sbb
or
sub
sbb
ja
jp
add
adc
jbe
addr16
mov
cmp
sbbb
mov
sub
pop
aaa
cmp
mov
sbb
fst
dec
scas
nop
dec
out
stos
jne
xorb
fnstsw
xchg
xchg
push
mov
jmp
mov
cltd
xchg
daa
inc
pop
shrb
mov
cmp
cmp
cwtl
cmp
mov
jl
hlt
lods
or
sub
adcl
ret
sub
cmpsb
shr
add
xchg
push
loop
xchg
in
dec
add
lcall
sub
repz
push
imull
mov
popf
cmc
fbld
rclb
iret
mov
adc
add
sub
mov
mov
gs
mov
call
and
jp
sti
mov
push
cmp
adc
push
into
testl
ss
sub
or
sub
loope
mov
ja
inc
sbb
dec
xor
pop
loopne
pop
test
and
jnp
insb
test
cltd
mov
jg
push
inc
mov
lcall
fcompl
dec
push
clc
outsb
push
mov
popl
jnp
scas
lock
mov
pop
adc
je
push
pop
sub
lahf
out
sub
shlb
adc
jle
pushf
inc
cli
inc
loopne
lods
and
xchg
pusha
mov
bound
inc
dec
bound
adc
je
mov
xchg
cmp
nop
add
std
and
fdivs
pusha
push
insl
or
pop
push
sbb
clc
sub
jmp
stos
out
mov
inc
mov
push
mov
ljmp
mov
fisttps
push
test
arpl
lods
xlat
xor
cmp
sti
rcrb
inc
mov
xchg
sbbb
sub
fldt
mov
int3
mov
hlt
jae
int
dec
hlt
adc
push
mov
lcall
xlat
xor
cmpsl
cmp
js
sbb
push
xchg
mov
shll
cs
push
mov
movsl
add
add
loopne
inc
xchg
mov
call
repz
xor
aas
mov
inc
adc
lods
lret
in
imul
popl
fstpt
mov
pop
xchg
aam
leave
mov
jmp
jne
popa
push
stos
jb
int
loopne
mov
lcall
jmp
es
lcall
mov
and
cmc
add
testb
cmp
mov
push
lds
inc
sub
in
or
fcomip
pop
cmp
cmp
aaa
sub
push
dec
insb
xchg
pop
int3
stos
add
fcoms
lods
mov
pop
add
cmpsl
cmp
pop
clc
and
jl
cltd
movsb
rcrb
stos
sti
mov
sbb
mov
into
andb
or
scas
insl
movsb
fwait
push
adc
add
dec
push
or
inc
out
mov
int
int3
xchg
jmp
cmp
xor
xor
mov
adc
sbb
pop
mov
mov
sbb
or
in
icebp
ret
inc
or
xor
out
sahf
pop
stc
cld
adc
adc
ja
in
cli
and
pop
rcrl
rol
bound
jle
arpl
push
aam
xor
sub
and
lcall
push
xchg
int
dec
lods
pop
dec
arpl
jl
divl
inc
or
add
dec
cmpsb
and
sbb
dec
jno
ret
mov
cmpsb
fmull
sub
cmp
xor
outsb
das
jl
test
jl
mov
test
add
loope
test
movsb
je
sarl
int
sub
and
push
loopne
and
cs
mov
in
inc
push
into
enter
or
pop
jne
sub
sub
adc
out
sub
jp
loope
out
nop
jmp
sub
lahf
repnz
mov
lock
and
mov
jp
push
ljmp
xor
cmpsb
xchg
xchg
enter
stos
push
push
icebp
cltd
lods
stos
sub
cmp
push
mov
rcll
add
ljmp
rcrl
jbe
xor
imul
cmp
dec
cmp
jae
sub
test
xchg
mov
push
adc
lock
daa
aam
subl
pop
or
jnp
ljmp
rcrb
ja
ja
inc
mov
mov
xchg
ret
insb
arpl
pop
pusha
and
daa
fdivl
sbb
jecxz
out
xor
mov
bound
inc
ljmp
jo
mov
enter
pop
out
xor
mov
or
inc
shll
cmpsl
mov
lahf
stos
push
out
dec
sbb
or
in
movsl
bound
jno
jecxz
sbb
xlat
and
xchg
jmp
subb
jo
popf
rorb
shll
stc
pop
stc
fdivl
adc
lds
sbb
arpl
pop
pop
pop
ds
ss
aam
stc
mov
fnstcw
pop
jns
cmpb
inc
fdiv
xlat
sarl
imul
adc
stc
or
pop
and
pop
mov
stos
push
mov
xchg
push
inc
jge
pop
push
xor
mov
pop
adc
jb
enter
jge
push
or
orb
gs
shll
jge
inc
lea
sub
and
aam
scas
mov
pop
mov
adcb
pop
add
cmp
scas
or
add
icebp
mov
and
mov
xor
adc
stos
mov
imul
inc
dec
add
cld
ja
jb
test
mov
and
inc
in
mov
cmp
mov
mov
mov
cmc
rorb
mov
arpl
aam
lods
sti
clc
ret
fldcw
stos
sub
cmpsb
jno
jmp
jbe
rcll
sub
inc
call
xchg
pop
xlat
cmp
dec
dec
xchg
pop
inc
sbb
or
push
pop
fs
gs
cld
cmp
pop
mov
testb
ja
insl
aaa
pop
inc
dec
cmp
and
adc
dec
inc
jge
xchg
test
dec
add
inc
into
inc
insl
dec
in
push
xchg
push
filds
stos
int3
clc
and
popa
stos
andl
dec
pop
out
out
jae
in
pop
or
je
cmp
xor
in
push
jg
pop
mov
cmc
inc
cmp
cld
nop
call
xor
leave
in
fs
rolb
lret
adcb
mov
cld
mov
xchg
popa
aam
push
sahf
add
cmp
or
aad
adc
outsb
xchg
jbe
inc
int
insl
clc
sti
xchg
sbb
lahf
pop
ljmp
fiaddl
push
pop
in
cli
shl
out
cmp
cmp
lock
pushw
cld
jge
cmp
pusha
mov
cs
mov
pusha
xchg
lock
mov
mov
xlat
in
movsl
and
insb
dec
lods
pusha
icebp
jae
jmp
aam
push
jge
mov
jle
repnz
pop
fs
sbb
mov
jns
movsb
loope
push
and
mov
sbb
aas
mov
ror
out
pop
jns
in
nop
in
call
adc
rorl
in
mov
sub
xchg
ds
jp
div
aad
sub
aad
aas
jmp
jmp
xor
and
rolb
mov
lahf
mov
jns
dec
sub
pop
test
mov
ja
ljmp
push
rcrl
in
outsb
loop
imul
in
adc
bound
add
sub
les
cmp
test
leave
push
loop
sub
push
outsl
incb
jg
dec
dec
push
rcll
pusha
popa
jg
cmpsl
xor
sub
mov
push
pop
fimull
sub
aam
stc
mov
jnp
xor
fcoml
sbb
add
movsl
jecxz
push
lds
mov
call
in
cmpsl
xchg
iret
int
sbb
and
es
cltd
or
jns
jecxz
repnz
adc
cmpsl
cmp
jp
aaa
movb
mov
mov
xchg
cmc
insl
loope
fsts
sbb
fdivl
or
cmp
dec
sbb
mov
hlt
xchg
lods
cmc
daa
xor
dec
movsl
inc
fbld
sbb
or
inc
jl
mul
add
popl
les
rcl
adc
add
iret
fidivrs
mov
pop
pop
add
cmp
mov
and
adc
mov
imul
sub
je
in
mov
and
popf
movsb
mov
sub
pop
jle
shl
call
jne
pop
imul
push
pop
dec
push
inc
inc
or
jo
adc
jno
push
fstl
stos
test
adc
dec
push
push
mov
cmp
in
push
xchg
sbb
fcomi
cwtl
cli
and
xor
fdivrl
and
jmp
mov
mov
mov
mov
dec
mov
es
xchg
xchg
mov
xchg
mov
inc
adc
inc
jno
or
inc
ss
push
jge
pusha
mov
dec
ret
ficomps
or
call
cmpsb
adc
rorl
cs
sarl
push
imul
add
cltd
pop
popf
adc
push
and
lods
sub
add
mov
xor
sub
pop
pop
mov
or
mov
push
mov
and
add
loope
ljmp
rsqrtps
popa
shrb
mov
and
cmpl
std
fwait
lahf
inc
shrl
sub
pop
fistpl
sbb
in
stc
ljmp
adc
and
jno
adc
cwtl
or
cmp
push
fdivrl
fwait
cmp
pop
push
jne
push
lahf
pop
pop
mov
out
mov
ret
pop
push
mov
pop
fldt
jg
push
icebp
out
sub
cwtl
cmp
test
lds
adc
add
and
cwtl
sub
and
inc
jle
jb
sub
out
jb
inc
inc
xchg
cmp
pop
add
pop
sub
push
push
orl
pop
int3
movsb
mov
loope
pusha
cli
icebp
iret
push
cmp
test
push
push
and
in
pop
mov
int3
lock
cmc
dec
sub
mov
fwait
mov
in
cmpsl
push
loope
dec
lea
fnstenv
and
mov
stos
je
push
mov
dec
or
inc
imul
cld
add
daa
aas
mov
js
repz
data16
pop
iret
std
and
addl
loopne
loopne
inc
popa
mov
push
inc
jns
push
je
mov
push
xchg
sar
or
fisubl
mov
cmpsl
mov
in
xchg
mov
xor
mov
pop
out
sub
xor
rorl
inc
sub
fisubs
pop
fdivl
lcall
xor
movsb
adc
push
ja
popa
mov
or
sbb
out
or
cmc
sti
lds
push
xchg
xor
xchg
leave
add
int
loopne
daa
fsubrs
cmp
inc
loopne
and
arpl
xor
popa
add
inc
xor
mov
fsubrl
imul
ds
in
aad
inc
jo
sub
or
cmp
lret
ja
xor
test
push
mov
push
icebp
push
imul
sbb
es
je
push
pop
out
sub
pop
test
cld
pop
stos
ficompl
jb
cmpsl
xchg
and
push
fcmovnbe
push
jmp
xor
insb
mov
lock
fiaddl
add
subb
nop
xor
je
data16
jle
loop
in
mov
pop
mov
movsb
mov
mov
enter
dec
out
stc
and
xchg
push
ds
outsb
xlat
dec
stos
cmpsb
jecxz
sbb
pop
and
adc
push
in
mov
sbb
mov
mov
mov
sbb
pop
jl
inc
dec
or
dec
movsb
cwtl
lds
pusha
adc
push
jno
jmp
in
pusha
pop
jecxz
in
and
push
xchg
loop
lret
lcall
and
sbb
xchg
pusha
xlat
sbb
loopne
jecxz
test
out
lret
fcompl
aaa
js
push
push
and
mov
movsl
mov
adc
aad
pop
lods
adc
sahf
cmc
cmpl
mov
sub
cmp
jbe
and
jo
dec
das
daa
mov
adc
push
sub
push
cwtl
rclb
mov
adc
in
movsb
sub
stos
clc
fs
out
das
adc
insb
cli
jae
fldcw
pusha
adc
jmp
movb
jnp
adc
adc
sub
inc
ret
dec
push
mov
pop
pop
sbb
and
pop
ja
mov
fdivrp
leave
in
in
in
sub
arpl
cmp
xor
or
bound
mov
fildl
jno
adc
loop
aas
in
or
jl
in
sub
test
xchg
mov
xor
adc
ficompl
mov
in
into
repnz
mov
fsubrp
push
int
shrb
add
dec
mov
popa
call
cmpb
mov
xchg
jmp
orb
in
sub
adc
shlb
sbb
mov
pop
mov
sbb
sub
ss
sbb
lret
xchg
mov
ss
cs
xor
imul
dec
je
repnz
jg
call
in
test
inc
pop
mov
jae
push
popf
inc
test
and
push
cmp
outsb
je
repz
push
xor
mov
mov
into
rcl
aas
jge
inc
nop
and
and
andb
push
sub
ret
xlat
arpl
xsha1
cmpsb
dec
sarl
fwait
call
mov
rep
in
fdiv
int
jno
jge
imull
push
pop
sub
push
cmp
sub
cld
stos
sub
outsb
ffreep
pop
ja
adc
adc
jb
repnz
call
stos
rorb
mov
leave
mov
sti
dec
sub
ljmp
and
xlat
cli
mov
pop
ret
and
popf
int3
cmp
pop
nop
inc
shlb
xchg
or
call
pusha
aaa
jp
adc
sub
push
out
mov
push
int
loop
pop
xorl
jg
fbstp
and
push
std
jno
mov
ret
inc
cmp
cmp
insb
mov
fs
sub
jl
pushf
test
lret
scas
repz
ret
dec
rcrb
push
or
mov
jp
mov
dec
xchg
xor
fidivl
inc
push
and
mov
push
xlat
xor
js
int3
dec
pusha
repnz
std
gs
mov
hlt
es
mov
pop
adc
cs
push
iret
mov
insb
sbb
insl
pusha
add
push
and
popa
inc
xor
ss
and
xchg
cmp
outsl
ret
mov
sub
ret
mov
add
and
lret
xchg
sbb
ret
rcr
cwtl
pop
jno
mov
imul
push
test
lahf
or
push
scas
in
jno
cmpsl
loop
mov
pop
imul
pop
add
lcall
mov
xchg
xlat
jb
push
or
mov
out
bound
push
or
nop
jbe
xor
jge
cmp
fidivrl
jge
nop
inc
adc
pushf
jae
in
cmp
xchg
loop
lahf
mov
es
mov
out
inc
xor
mov
stc
cltd
lcall
fistl
bound
mov
cmp
js
pop
adc
pop
loop
dec
sbbl
and
lret
jae
pop
xchg
repz
cld
cmp
xor
sub
sub
cld
inc
js
jnp
fistpl
out
dec
lds
mov
sbb
icebp
js
cmpsb
mov
push
decl
inc
mov
mov
mov
testl
adc
in
lcall
loop
lcall
xor
stos
mov
xor
sbb
jne
sarl
in
jbe
mov
and
mov
cmpl
daa
sbb
mov
sbb
stos
in
int3
addr16
xor
jae
fnsave
addr16
in
jnp
mov
addr16
daa
pushl
lea
aas
lahf
cmpsb
pop
lods
xchg
inc
push
imul
addr16
std
inc
popa
test
adc
ja,pn
enter
movsb
push
pop
loopne
andb
mov
test
mov
pop
int
adc
mov
push
or
adc
mov
lods
mov
std
push
test
ficomps
cmp
mov
xor
push
aam
mov
arpl
shr
cmpb
ret
mov
fists
jo
lret
mov
insl
add
popf
cmc
inc
pusha
add
loopne
das
pop
cld
pslld
addb
sbb
aaa
push
xchg
mov
jge
xchg
push
jae
and
jne
push
icebp
push
push
xor
test
movsl
cmp
loopne
call
ss
mov
test
xchg
mov
sub
loope
push
sbb
mov
hlt
insl
arpl
lds
jecxz
adc
ret
add
xlat
movsb
in
mov
jecxz
xor
add
outsb
and
jg
stos
aam
ss
sbb
dec
test
push
xchg
movsb
inc
push
dec
mov
xor
cmp
insb
lahf
mov
imul
aas
pusha
je
xchg
sbb
mov
stos
fnsave
xchg
out
inc
mov
cld
incl
mov
pop
sbb
aam
xchg
mov
fwait
jae
sahf
sbb
sub
out
pop
cs
sahf
stc
cs
adc
nop
sub
jns
cmp
sbb
je
cmpsl
mov
call
lock
push
mov
pop
cs
push
lock
icebp
cmp
and
mov
test
insl
ss
in
fs
push
cmc
cmpsl
adc
loope
or
mov
repz
dec
das
dec
sbb
stos
sbb
jp
mov
nop
stc
inc
bound
xor
adc
inc
cmp
lods
mov
sub
insl
push
jbe
popf
clc
test
inc
adc
lds
hlt
hlt
ds
or
pop
aad
add
rorb
test
sub
cmc
pop
adcb
mov
js
pop
orl
pop
mov
jle
cmpl
loope
dec
mov
lods
neg
xor
cs
jp
xor
cmpsb
stos
fwait
jne
outsb
fwait
shll
leave
or
add
sti
add
adc
cmpsl
pop
pop
mov
dec
insb
xchg
std
cli
popf
inc
push
jne
in
cmp
jecxz
jmp
jbe
std
fistps
divb
mov
insl
in
push
jno
fldl
imul
mov
cmc
clc
xchg
mov
sub
test
jg
lahf
lcall
sbb
or
sub
jb
push
sub
add
sub
out
es
sbbl
inc
addr16
hlt
ds
mov
sahf
fdivs
popa
in
js
mov
rolb
inc
js
add
in
rcrb
sbb
sqrtps
mov
push
xchg
mov
lret
mov
mov
mov
sub
mov
test
leave
aam
and
sub
mov
fisubs
out
pop
iret
imul
orb
std
mov
out
or
pop
movsl
fnstcw
daa
aaa
iret
roll
add
test
xchg
paddsb
sti
ss
notl
dec
lahf
xorb
test
xchg
pop
inc
int3
and
and
loopne
jnp
inc
jb
out
push
and
add
sub
jo
jnp
jno
fidivrl
adcl
jecxz
cs
push
insb
jl
jo
dec
aam
or
daa
les
and
push
daa
dec
jle
je
xchg
jno
enter
pushf
sti
not
adc
sub
sbb
and
mov
sti
dec
in
ficomps
mov
jmp
dec
xor
movsl
push
inc
cmp
loope
inc
mov
fmuls
mov
inc
rorl
push
mov
in
leave
std
adc
daa
and
test
popa
and
insb
movsl
cmp
mov
jne
int3
inc
xorl
stos
xchg
pop
jl
dec
mov
mov
add
mov
fcomp
pop
cld
pushf
into
cmpsb
insb
push
inc
pusha
ret
jns
dec
in
ret
push
push
cmp
ja
mov
xlat
mov
outsl
test
jne
cwtl
pushf
push
lret
mov
adc
jmp
in
int3
popl
pop
iret
mov
or
sahf
cs
inc
out
jecxz
push
mov
dec
lods
adc
fsubs
lahf
push
outsl
call
mov
pop
icebp
add
sub
push
jle
push
and
push
loopne
cmpsl
xor
or
push
mov
xor
dec
jb
pushf
cmpsl
xor
je
pop
sbb
data16
mov
andl
scas
arpl
lcall
sbb
cmpsb
or
rcrb
inc
cmp
fldl
sub
inc
adc
arpl
pop
sub
push
xorb
sub
sbb
mov
int
lods
cmp
mov
inc
sti
xor
mov
ss
lods
pop
andb
shrl
lods
stc
icebp
mov
in
fstpt
xchg
inc
push
mov
in
pop
jbe
xor
pushf
add
cmp
mov
popa
mov
test
push
bound
push
sti
ss
cmpsl
repz
ja
fsubrp
stos
cld
fldl
sub
mov
aad
fsubrp
cltd
shrl
sbb
mov
lea
popa
dec
pop
pop
lds
cmp
mov
addb
push
insb
mov
movsb
fisttpll
push
sbb
sub
jmp
mov
mov
push
pop
inc
push
push
das
push
and
inc
lock
sub
ret
lods
mov
cmp
cmp
dec
pop
arpl
jp
cwtl
add
jns
or
fsts
xchg
adc
cli
bound
movsl
mov
pop
push
xor
xchg
int3
mov
xor
mov
addb
das
lock
sbb
movsl
pop
popf
test
lret
daa
fists
and
data16
sub
cmp
cmp
jmp
in
lret
in
or
sbb
arpl
out
dec
outsb
sub
dec
popa
pop
cwtl
lahf
icebp
add
inc
addl
cmpsl
cltd
in
jno
jle
sub
fists
movsb
sub
ss
adc
xor
sbb
fsubrl
fdivp
push
fwait
rol
mov
mov
scas
insl
fbld
cmp
pushl
xor
pop
bound
cs
adc
mov
mov
ja
fimuls
mov
add
or
mov
mov
xor
into
mov
inc
pop
shrb
dec
sub
movsb
ja
sub
pop
mov
out
pop
frstor
jne
xchg
test
stos
fsubrl
ret
push
pushf
and
xchg
ss
mov
popa
nop
push
loopne
mov
inc
mov
and
fsubl
push
jae
mov
dec
jnp
outsb
icebp
scas
movsb
fdivs
push
mov
inc
jno
xlat
aas
cli
fdivr
nop
adc
xchg
cmc
adc
enter
inc
mov
lcall
or
cmpsb
in
jp
loop
test
sub
sahf
sub
out
pushf
pop
xchg
test
fdiv
or
mov
movb
test
in
mov
jl
jl
push
or
leave
loope
or
adc
fs
ficompl
stos
cmp
stos
ds
inc
xchg
dec
xchg
mov
jg
jmp
aad
arpl
pop
jp
sbbb
xlat
pop
addr16
push
mov
testb
xlat
arpl
push
cmpsl
imul
mov
xor
orb
or
inc
test
cld
imul
insb
inc
add
dec
cmpsl
add
ljmp
inc
jge
fstpl
push
aas
or
dec
mov
int
lods
ds
and
bnd
cmpsb
mov
pop
popa
test
jnp
or
pop
ljmp
pop
mov
lock
adc
cmp
ret
mov
je
lret
inc
jne
es
push
cltd
iret
xor
mov
ljmp
mov
or
jb
mov
jl
inc
mov
dec
lcall
or
aad
das
aas
mov
pop
or
jl
pop
std
rorl
pop
pop
dec
pop
pop
jmp
cmp
inc
sub
lahf
sub
jb
jp
cwtl
mov
mov
and
rcll
aad
and
ss
and
sbbl
in
in
sbb
mov
xchg
int
add
das
jl
cmp
aas
xchg
xor
add
pop
fucom
movl
pop
mov
pop
repz
xchg
int3
sbb
adc
adc
mov
out
inc
ljmp
test
andb
loop
and
cvttps2pi
aaa
dec
dec
sbb
mov
push
ss
in
lock
addb
sbb
mov
repz
cmp
aas
loop
lcall
pop
push
sub
push
pop
fucomip
mov
pop
dec
out
ljmp
leave
cltd
dec
sub
imul
hlt
out
enter
mov
leave
fbstp
sub
inc
fistl
test
cltd
cmpl
outsb
xor
cmp
sbb
nop
mov
push
scas
cmpb
inc
lods
jp
jno
cmp
push
roll
fcmovne
imul
pusha
jno
mov
movsb
cmp
orl
leave
int
in
cmpsb
cmp
lcall
or
sbb
nop
mov
pop
fwait
dec
imul
or
rcrb
and
fists
mov
sub
mov
aas
out
add
rcr
in
sahf
lea
pop
lds
movsl
jecxz
xor
movsb
jge
cmp
aad
stc
or
out
nop
pop
add
sub
sub
xchg
inc
fwait
cmp
add
test
pop
inc
inc
in
pop
pop
in
test
inc
ljmp
cmpsb
stc
lods
cli
fisubl
rcrb
xor
enter
mov
inc
pop
xor
ja
jle
nop
cmpsb
inc
lahf
ret
das
mov
clc
adc
rcl
bound
mov
scas
stos
sub
sub
js
test
lret
mov
pop
xor
incb
fbstp
xor
add
push
adc
push
jl
sub
adc
gs
fisubl
fildl
or
mov
pusha
and
push
insb
lret
sbb
mov
shlb
jnp
int3
cmp
es
cltd
mov
movsl
cmpsl
insl
pop
push
cs
xchg
or
xor
insl
lret
ret
cmp
or
clc
sub
pusha
mov
sbbl
mov
or
mov
aad
in
xlat
cmp
ret
mov
dec
adc
sub
adc
imul
in
fistpl
out
fs
ret
or
dec
mov
outsl
out
inc
xchg
insb
cmpsb
adc
dec
insb
inc
add
dec
pushf
in
stos
cmp
aas
mov
and
xchg
cltd
push
or
mov
lret
test
fidivrl
int
mov
pop
mov
and
in
sub
xchg
icebp
inc
imul
fxch
bound
mov
sub
test
and
psubusw
mull
adc
mov
std
pop
movsl
lea
and
fwait
dec
xchg
pop
cmp
push
xor
and
mov
shr
sbb
orl
pop
sarb
or
cmp
pushf
int3
mov
or
aam
pop
ss
adc
in
in
loope
sub
jbe
dec
stos
fnstenv
jg
mov
mov
movsl
and
insl
jne
in
loope
clc
bound
dec
xor
lahf
add
icebp
std
roll
jp
xchg
and
mov
mov
aam
xchg
and
xchg
mov
fidivl
scas
mov
into
pop
icebp
cltd
fdivl
sub
les
cwtl
imul
xor
in
cmp
arpl
mov
insl
fisttps
mov
or
pop
sub
jne
icebp
mov
pushf
adc
cmp
in
dec
or
out
xorl
inc
add
sti
fildl
fcoml
pop
cwtl
repz
out
movsb
adc
jmp
cld
mov
and
cmpsb
rcr
push
xchg
aas
lods
lret
inc
je
scas
sbb
ljmp
adc
inc
inc
int
sti
cmpb
cld
stos
rorb
sub
hlt
mov
or
ja
cmp
les
movsb
mov
pop
inc
and
push
push
inc
xor
aas
repz
addr16
rcr
mov
shlb
push
inc
mull
call
lods
ljmp
jb
test
pushf
jmp
cmpsl
inc
out
adc
sub
inc
and
loope
pop
push
idiv
xor
and
and
pop
int
mov
gs
push
push
int3
daa
xchg
lds
mov
and
lods
mov
movsb
inc
pop
or
inc
mov
inc
mov
mov
and
adc
dec
js
mov
loopne
sbbl
xchg
test
jns
push
ret
xlat
movb
faddp
sbb
mov
idivb
inc
xor
je
out
xor
mov
cli
aam
jo
pop
pop
out
mov
push
xlat
cmc
sarb
sti
adc
jnp
or
and
xor
sbb
in
mov
sub
lea
jmp
cmp
xchg
jbe
scas
jg
and
outsb
in
and
lret
mull
jmp
push
dec
std
fists
cmp
xor
movsb
cmp
es
dec
push
pop
pop
push
call
mov
in
or
int3
sbb
xchg
add
aam
les
lcall
pop
dec
inc
xchg
nop
movsl
pop
lea
rorl
popa
xchg
mov
or
and
sti
daa
int3
mov
imul
xchg
mov
leave
dec
aam
push
push
xchg
push
sub
mov
stos
cmc
xchg
cld
inc
shlb
stos
jbe
push
sbb
fdiv
sub
js
enter
dec
jb
repz
mov
aam
push
scas
mov
xchg
sub
mov
inc
lar
cmpl
add
jo
pop
std
iret
fnstenv
sbb
ficomps
adc
shlb
and
jmp
inc
or
mov
insb
lods
mov
mov
jb
mov
and
imul
add
fs
push
jns
and
jmp
nop
enter
nop
test
mov
arpl
xchg
sub
stos
fmull
jbe
fistpl
loope
nop
inc
stos
pop
mov
je
inc
lods
xor
push
sbb
in
xor
add
adc
pop
gs
test
sbb
lea
mov
insb
push
pushf
adc
rolb
fisttps
cmp
dec
pop
pushf
dec
inc
adc
dec
cmp
scas
insl
cmp
push
xor
push
xchg
iret
jmp
rolb
sbb
mov
call
leave
xchg
std
test
js
testb
call
pop
inc
andl
sub
stc
and
imul
mov
xor
aam
xor
int
lcall
mov
sbb
inc
sbb
mov
cmp
in
gs
pop
pushf
roll
pop
out
mov
add
jbe
dec
lcall
pop
inc
sub
adc
sbb
nop
shll
xor
int
mov
inc
dec
ret
pusha
test
or
sarl
cmp
lods
cmc
or
hlt
mov
out
cli
sarl
push
jle
inc
ljmp
shrl
fldl
mov
imul
mov
xchg
mull
sub
push
cmp
push
test
pop
outsl
mov
or
je
sub
jns
sbb
scas
lods
cld
xchg
or
xor
push
adcl
sahf
lret
inc
out
pop
pop
gs
mov
or
movsl
lock
xor
or
adc
and
sbb
mov
xor
jg
cs
adc
inc
cs
loope
jns
cmova
xor
outsb
cmpsb
jge
icebp
in
add
ret
in
rorl
mov
jb
aad
lahf
out
fildl
int
mov
lret
push
rorb
es
test
push
mov
cltd
lret
lret
repz
lret
loop
out
push
push
cmc
ret
sbb
pop
cld
add
push
dec
sahf
ret
arpl
out
hlt
dec
stos
push
adc
dec
aam
test
cmpsb
xchg
fistl
jg
adc
arpl
clc
mov
pushf
pop
push
adc
mov
dec
push
fstps
aaa
aas
repz
out
and
xchg
addb
fwait
in
imul
dec
loope
pop
sbb
popa
inc
xor
aad
jb
mov
mov
xchg
cmp
jbe
cmp
out
xchg
sub
jp
cmpl
jns
sub
push
repz
dec
fwait
int
out
outsl
adc
outsl
pop
mov
iret
cmpsb
add
scas
in
cmc
daa
inc
aad
xchg
sbb
rcl
push
jmp
movsl
loopne
shll
scas
fcmovnbe
into
sahf
not
out
xchg
xlat
ror
push
in
or
jle
stc
dec
cmp
push
inc
pop
ja
enter
xchg
xor
nop
push
xor
jb
popa
xorl
iret
rcrb
xor
mov
iret
cmpsb
sub
jle
mov
ret
dec
inc
ret
in
mul
cmpsl
pop
std
fnstsw
insb
push
sub
out
ja
shl
lods
call
rorl
lret
scas
int
fsubp
out
or
addb
xchg
mov
daa
dec
add
lock
mov
ss
insb
inc
pop
imul
or
cli
sarb
gs
push
inc
jno
sub
jecxz
ret
pusha
shrl
and
mov
xlat
dec
cmpsb
push
xchg
inc
jle
or
in
pop
ds
sbbb
xchg
imul
inc
mov
lods
jbe
lods
mov
dec
bnd
add
stos
xor
ss
gs
divl
ror
in
enter
out
in
and
pop
jp
xchg
mov
cli
notl
inc
cmp
int3
jae
jmp
loopne
mov
jb
mov
adc
fldt
jg
lock
mov
clc
iret
and
sbb
lret
lock
hlt
push
fwait
out
cmc
mov
inc
mov
and
cmp
ret
pusha
shl
mov
xchg
mov
xchg
xor
das
mov
jecxz
sub
mov
push
cmp
out
leave
xchg
lods
mov
sub
adc
ret
jp
test
leave
mov
xor
andl
jle
ret
pushf
fucom
xchg
imul
daa
xor
icebp
stos
adc
mov
and
xchg
push
cmpsl
subb
mov
aas
inc
mov
fistps
std
or
xchg
sub
push
lret
mov
inc
xor
cmp
mov
mov
dec
in
push
fwait
sahf
loope
mov
mov
mov
dec
jbe
add
sbb
cltd
ljmp
ljmp
inc
push
push
hlt
fldenv
test
clc
lock
jno
inc
push
sbb
inc
sbb
dec
jl
add
lret
mov
loope
and
lock
loope
pop
lret
clc
add
adc
das
xchg
filds
mov
or
push
fsubrl
or
out
jp
in
mov
xchg
adc
mov
outsb
sub
xchg
call
and
andb
imul
push
cmc
mov
mov
call
jge
roll
fs
inc
imul
movsb
testb
adc
lock
mov
push
nop
out
repz
outsb
es
sahf
jnp
push
pop
mov
hlt
cli
mov
lret
mov
jp
and
xor
sar
clc
arpl
stos
jmp
push
addl
and
sahf
sbb
cmc
lds
cmp
outsb
std
lds
push
inc
in
gs
cld
sub
ret
test
pop
jmp
mov
jo
mov
imul
jmp
inc
dec
push
pop
aam
add
pop
enter
inc
and
and
cmc
icebp
mov
mov
int
or
aaa
imul
push
xor
cwtl
dec
xor
icebp
cmp
push
add
adc
and
cmc
jecxz
loope
clc
inc
xor
pop
ljmp
bound
mov
sbb
dec
jecxz
repz
cmp
ret
jns
aam
lea
sbb
in
fs
pop
sbb
test
loop
add
dec
lods
add
dec
adc
subb
pop
stc
into
push
fisubrl
loop
test
mov
and
add
adc
out
lods
and
pop
insl
inc
xor
inc
mov
stos
xchg
mov
clc
leave
mov
mov
arpl
jne
mov
xchg
lret
mov
lea
xor
cs
mov
stos
int3
test
push
push
sub
in
adc
dec
out
shlb
shrb
jecxz
dec
pushf
sbb
fdivrl
mov
fcoml
jns
and
sbb
pop
cmpsb
xor
mov
mov
jg
mov
push
in
lret
jae
daa
shrb
dec
mov
sub
nop
push
fsubrl
mov
jmp
jecxz
lret
mov
add
sub
dec
loop
js
adc
sbb
cmp
pop
xchg
clc
inc
xlat
sub
outsl
xor
lods
pushf
pop
fistpl
test
mov
les
pop
cltd
mov
and
sbb
sahf
xchg
mov
addb
and
cwtl
cmp
dec
out
cmp
out
out
jl
xor
dec
jl
mov
mov
xor
fisttpll
shrb
loop
mov
movsl
xchg
lret
jno
push
push
imul
nopl
fildl
mov
sarb
jg
xchg
xor
sbb
dec
adc
pop
fnstsw
repnz
test
mov
inc
pop
and
xchg
div
sbb
dec
cmp
mov
stos
gs
xchg
jp
inc
inc
pop
rcll
jo
pop
add
sub
pop
inc
ljmp
cmp
popw
daa
pushf
sub
mov
test
push
fisubrs
cli
daa
aam
inc
mov
push
dec
nop
addl
sarl
test
movsl
fdiv
pop
out
pop
pushf
pop
add
cmp
outsb
cmpsl
or
fsubs
test
jmp
and
cmp
sbb
dec
sub
cmpsb
adc
add
out
or
xor
cmp
leave
les
dec
call
arpl
fwait
mov
fstps
movups
lahf
xchg
rcr
out
rcl
es
xchg
scas
iret
xchg
xchg
rcll
dec
insb
and
dec
jne
ljmp
cli
adc
in
mov
mov
imul
cmpl
adc
mov
dec
cwtl
add
cmp
mov
sbb
pusha
cmpsl
cmp
lret
lcall
push
lcall
imul
or
jg,pt
in
cli
scas
jae
clc
jl
loopne
add
mov
mov
sbb
adc
sbb
hlt
adc
push
inc
push
inc
loopne
shl
rcll
test
imul
leave
cmp
mov
sub
fists
cmp
dec
and
cwtl
cltd
mov
sti
cmp
jecxz
dec
in
mov
push
test
cmpsl
in
mov
popa
int3
cmp
pop
les
push
add
notl
pop
mov
lahf
mov
ja
int3
ffreep
clc
dec
mov
dec
cmpsb
jb
std
sub
stos
sub
pop
rcll
pop
test
sahf
adc
xor
hlt
push
xor
insl
mov
mov
jae
jp
or
jns
xchg
sub
imul
stc
mov
xchg
inc
xchg
vminss
repnz
sbb
fnstcw
lods
cmp
int
sbb
lret
push
push
fucomip
scas
pop
imul
out
inc
pop
lcall
mov
cld
jne
test
mov
cmp
jp
int
lea
and
xchg
sub
aas
mov
inc
xor
fisttps
cmp
jle
ds
xor
ffreep
inc
sub
sub
mov
sub
or
inc
and
mov
fldcw
inc
mov
pusha
lcall
lret
mov
rcl
cmc
jb
adc
dec
outsl
push
pushf
xor
xor
icebp
cmp
fcomps
mov
xchg
jge
adc
fdivrp
and
loope
add
lcall
adc
push
sahf
adc
xchg
adc
push
mov
dec
insb
and
and
cmp
adc
mov
or
mov
fstl
dec
shlb
icebp
sub
out
notb
out
mov
roll
jp
adc
dec
inc
lods
xchg
xlat
shl
adc
enter
cmp
jg
aas
xchg
jle
or
mov
loopne
clc
sbb
mov
mov
push
xchg
mov
cmp
mov
mov
cwtl
icebp
pop
int
enter
popf
sbb
lods
adc
leave
jl
pop
xchg
adc
ss
or
sar
xchg
nop
pop
pushf
in
bnd
sbb
xchg
negl
rolb
cmpsl
iret
mul
xor
test
mov
movlps
ds
iret
enter
add
repz
or
iret
bound
fs
loop
dec
out
pop
inc
sahf
inc
ret
sarb
mov
inc
xchg
xchg
or
rorl
rclb
insb
mov
out
fidivrl
jmp
xchg
ljmp
or
stos
fstps
mov
push
ds
shr
popa
repz
mov
filds
jmp
jb
pop
bound
fidivl
adc
ss
insl
popf
inc
cmp
push
pushl
movsl
inc
jo
mov
bound
xor
outsb
sahf
adc
in
shlb
xlat
or
push
daa
outsl
das
clc
and
out
add
mov
sbb
pop
cmp
and
repnz
lds
cmpsb
std
sbb
cmp
add
faddl
outsl
push
enter
test
out
cmp
xor
pop
adc
mov
or
lcall
into
sbb
scas
cmp
sti
arpl
into
test
std
and
pop
pop
jl
and
mov
cli
das
jp
fldenv
inc
or
pusha
lret
jne
in
ss
push
aad
cmp
pop
popf
inc
loope
add
mov
and
add
stc
out
dec
shrl
loopne
push
fistpll
add
rol
push
arpl
pop
sahf
aaa
xchg
sub
fsubp
mov
and
push
sar
jo
dec
rcrb
xchg
cwtl
xor
ret
push
sbb
pop
sub
test
mov
inc
xorb
pop
push
in
ja
dec
rcrb
repnz
dec
mov
inc
rcrl
mov
jbe
aad
rclb
inc
in
pop
testl
mov
xor
dec
sub
pop
pusha
popa
mov
xchg
mov
dec
inc
ljmp
nop
cwtl
sub
out
and
mov
xchg
pop
cmp
sub
ds
xchg
je
fimull
out
mov
sti
xchg
or
sub
outsb
in
lret
adc
es
sub
insb
rcll
out
xor
sahf
popa
push
into
xlat
pusha
xor
js
pop
mov
sub
jne
mov
into
inc
jne
std
dec
int
testl
push
push
and
lahf
add
dec
js
repz
ljmp
sub
lods
xchg
loope
and
je
test
fcompp
xor
mov
mov
orl
popf
cmp
dec
cltd
ret
nop
pop
mov
scas
adc
and
xchg
pop
dec
push
jmp
or
mov
pop
sbb
js
jb
and
stos
testb
in
adc
shll
dec
lds
mov
inc
stc
test
add
dec
cmp
cmp
stc
push
fmull
cmp
cmp
mov
xor
or
push
mov
add
jo
jns
lret
bound
mov
out
add
enter
stos
push
cs
add
shlb
push
movsb
das
rclb
mov
xlat
mov
xor
push
fcmovbe
ds
dec
in
leave
div
outsl
rcrb
push
ret
add
push
outsl
fsts
dec
pop
add
cmp
xchg
rclb
cli
mov
xchg
popf
pop
mov
push
xor
jmp
aas
xchg
imul
das
mov
xlat
movsb
xchg
sub
pop
push
fstpt
cmp
mov
inc
jnp
nop
add
fucomip
cmpsl
pop
repnz
int3
sbb
and
repnz
mov
or
xor
insb
pop
stos
sbb
hlt
pop
cmc
push
jmp
mov
mov
lds
or
cs
mov
mov
outsl
loopne
pop
sub
pop
sub
cld
sub
js
dec
add
sub
mov
test
out
mov
inc
sbbl
mov
leave
jnp
jno
dec
icebp
jl
cmc
fs
mov
mov
clc
mov
jecxz
xor
lock
inc
jge
arpl
inc
mov
pushf
stc
cmp
jne
dec
lcall
adc
movsb
add
adc
xchg
push
nop
pop
fistpll
fs
in
and
dec
js
dec
aas
push
ss
or
xchg
lods
rorb
arpl
push
subl
in
push
in
push
imul
fs
xor
mov
or
xchg
mov
jp
outsl
out
fcoml
loopne
loope
jbe
outsl
and
mov
in
cld
xchg
xor
inc
add
inc
inc
stos
jae
mov
fildll
mov
jl
adc
or
add
sub
mov
outsl
or
int3
add
shll
ret
sbb
sarb
sbb
dec
push
test
and
pminsw
jge
lds
sarb
dec
sbb
xor
fwait
scas
dec
fcomps
pusha
and
and
int
addl
mov
shl
mov
cli
push
sub
fbstp
and
and
add
adc
mov
sbb
inc
les
gs
jne
jbe
aas
in
add
ss
cld
lods
fld
and
ror
sbb
pop
sti
mov
and
and
inc
dec
das
jns
dec
inc
cwtl
insb
push
xor
mov
mov
xor
pop
fwait
push
and
imul
sub
adc
icebp
mov
inc
outsl
jmp
dec
jae
lret
mov
pop
leave
inc
not
lock
lds
iret
fwait
icebp
fs
rol
jno
sbb
sbb
adc
dec
xor
aaa
sub
push
cmp
xchg
mov
push
xor
mov
add
sub
adc
push
push
jo
mov
movsb
dec
xor
push
sahf
lret
mov
mov
xor
mov
inc
hlt
int
xchg
fs
xlat
iret
in
sti
add
ret
loope
pop
xchg
lea
mov
xchg
loop
lea
test
fists
outsl
jns
aas
mov
and
pop
loope
aad
xor
fimull
cld
arpl
cmp
mov
xor
jo
mov
or
lahf
sub
and
jo
or
and
cld
adc
test
movsb
flds
movsb
push
in
and
push
and
into
add
int3
xchg
lcall
enter
fs
insb
inc
push
shll
sbbb
jnp
pop
mov
and
add
jo
push
push
push
sbb
jnp
push
cwtl
out
outsl
movsb
outsl
subl
mov
shr
iret
stc
cmc
xchg
sub
xor
adc
jne
lret
repz
daa
ja
pop
lock
xor
xor
jmp
dec
cmp
outsb
mov
xchg
shll
jno
lret
es
fcompl
pushf
adc
fldenv
add
lret
inc
loopne
shl
mov
mov
xchg
sahf
sbb
daa
push
mov
hlt
add
mov
pusha
add
insl
cli
sti
sub
aas
mov
mov
adc
jg
mov
sub
insb
push
pop
loopne
frstor
push
pusha
mov
pushf
repz
cwtl
inc
js
scas
inc
push
sahf
xor
mov
fildl
adc
mov
adc
xchg
out
lds
ds
jecxz
push
aam
inc
shl
or
mov
adc
mov
add
mov
pushw
jnp
mov
ret
mov
cmp
dec
rclb
fistpl
jl
jl
sbb
pusha
mov
fisttpl
jo
test
pop
sub
dec
andb
xchg
scas
push
push
jne
mov
cwtl
pop
lock
mov
inc
xlat
push
movsl
adc
mov
adc
sbb
jne
dec
loopne
in
adc
push
lret
sbb
adc
cmp
or
pusha
push
push
add
dec
pop
cmpsb
stc
shrl
xchg
cmc
mov
dec
cmpsb
cmpsl
or
push
testl
or
dec
mov
pop
sub
push
mov
mov
pop
sub
iret
adc
jle
ljmp
je
mov
mov
aas
inc
aas
int3
inc
xor
dec
add
jmp
std
and
scas
push
mov
adc
rolb
test
pop
sbb
xor
pop
mov
mov
push
mov
es
add
mov
sub
test
add
out
mov
stos
lock
rcrb
and
push
scas
jnp
cs
mov
enter
jg
jns
test
das
xchg
push
push
cmpsl
xor
or
scas
inc
test
sarl
mov
push
bound
pop
jno
sub
sbb
or
ret
ffreep
inc
inc
and
out
mov
push
jnp
xor
cwtl
call
mov
sub
aam
mov
test
xchg
mov
mov
push
js
push
in
sub
jbe
jne
bts
jae
add
push
lret
add
adc
cltd
notl
fistps
xchg
mov
test
call
gs
stos
aaa
mov
rolb
jnp
cmp
mov
lret
mov
hlt
cmp
cmpsl
popf
pop
cmp
cmp
mov
ret
data16
and
test
fnstenv
sub
ds
xor
cmp
sbb
fidivrl
mov
in
loop
dec
arpl
adc
and
sub
popf
call
jmp
sub
es
pop
arpl
inc
test
jmp
inc
or
repz
add
mov
xchg
rcrl
inc
cmpl
cmp
ja,pn
jnp
adc
xchg
inc
pop
xlat
mov
sub
lea
pop
icebp
xchg
push
pop
movsl
out
or
mov
and
mov
pop
inc
sarl
xchg
outsl
add
lcall
ret
adc
inc
xor
sbb
and
sbb
divl
movsl
mov
inc
mov
mov
jmp
jns
enter
cmp
popf
push
push
imul
out
addb
sub
repnz
test
fld
repnz
into
pop
in
inc
out
aas
mov
sbb
ds
loop
mov
mov
aam
leave
cmp
jg
iret
push
pop
or
faddl
mov
es
je
mov
and
insl
jmp
cmp
xchg
cmp
cmc
and
ds
leave
or
dec
ds
xchg
dec
mov
push
int
out
dec
jp
aam
and
imul
inc
fisttpl
push
jbe
ret
arpl
add
sbb
test
loope
movsl
insl
mov
mov
test
lret
pop
mov
inc
jp
and
imul
adc
jle
jno
mov
dec
rcr
fadds
setne
insl
sti
sub
jmp
mov
sub
fidivrl
add
xlat
sub
ss
push
insl
sub
cli
sbb
mov
fwait
aas
das
scas
add
sti
shll
cmp
cmp
add
or
popf
xchg
xchg
rcrb
mov
sbb
ja
xchg
inc
lret
mov
xlat
idivl
das
mov
push
movsl
into
push
lret
sub
sub
popa
insl
int
adc
mov
adc
call
cmp
pop
dec
xor
fidivrl
out
xchg
mov
scas
test
mov
xchg
cltd
insl
ds
add
test
push
pop
ds
es
cmp
insb
in
loopne
xchg
pop
pop
xchg
inc
inc
lahf
xchg
cmp
dec
aad
inc
stos
out
into
mov
cltd
xchg
pop
faddl
stos
mov
test
xchg
push
inc
sar
mov
out
inc
and
pushf
jl
test
call
cmp
hlt
int
ret
repz
add
add
jbe
cwtd
mov
rorl
mov
lods
inc
push
scas
adc
dec
ljmp
in
cmp
sti
int
and
js
xchg
jl
repnz
fwait
popa
js
xchg
stc
and
lcall
pop
in
xchg
adcb
les
mov
pop
xchg
mov
movb
xor
ret
sub
inc
test
mov
push
push
aam
push
rcll
daa
aaa
js
test
fsubrs
subb
nop
rcl
lcall
adc
test
sub
xor
stos
in
xor
iret
cld
shlb
push
cmc
pop
lcall
cmc
xchg
rcll
inc
push
cmc
xchg
pop
repnz
sub
out
jg
popf
outsb
cmp
and
out
sbb
std
pop
jne
add
in
adc
pop
outsl
jmp
xchg
inc
xlat
test
bound
decb
mov
mov
dec
xor
rolb
push
mov
sub
inc
cmp
rorl
xchg
out
mov
xchg
mov
pop
lahf
mov
fdivs
stc
in
or
or
cmpsl
xchg
inc
xor
xchg
mov
rcr
and
mov
dec
sub
sarb
sub
sarl
out
add
cli
xor
repz
sub
xor
outsl
js
sbbl
sub
mov
popa
xor
cld
xchg
test
cwtl
mov
or
jecxz
xor
lods
out
xor
mov
in
mov
and
dec
push
aas
pop
xor
dec
test
aam
mov
pop
inc
add
stc
pop
xor
pushf
jo
xchg
or
mov
add
loopne
mov
and
inc
push
loopne
sarb
scas
jle
scas
cmpl
mov
ljmp
pop
sbb
imul
fnsave
sbb
leave
fs
mov
in
stos
cwtl
pop
sbb
daa
loopne
popf
push
xchg
in
jns
mov
mov
loop
pop
aaa
pop
test
mov
sub
enter
mov
lds
xor
mov
fucomi
add
into
daa
inc
mov
mov
mov
add
add
mov
negl
add
adc
sbbb
or
xor
mov
sub
mov
add
ljmp
ss
insl
je
jo
sar
test
lahf
cwtl
mov
mov
scas
int
pop
je
mov
xchg
bound
lret
pushf
aaa
les
lcall
sub
sub
dec
or
mov
adc
xor
mov
cmpsl
xlat
stc
add
sahf
test
clc
ja
stos
add
popf
and
je
inc
dec
loop
adc
sbb
xor
sub
pop
mov
push
movsb
ret
mov
fcmovb
fidivrs
fstpl
jecxz
test
mov
repz
sti
cmp
sub
movsb
nop
imul
movsl
enter
test
bnd
loopne
dec
adc
into
xlat
dec
lds
push
test
mov
and
and
aaa
sbb
call
sbb
mov
pop
movb
add
dec
dec
mov
jo
xchg
movsb
sub
pop
inc
inc
inc
hlt
mov
fiaddl
dec
sbb
pop
aad
sbb
pop
push
lret
das
jns
pop
add
gs
push
push
pushf
lahf
add
adc
ja
dec
cltd
sub
or
das
adc
ret
sbbb
gs
loopne
aam
stos
inc
or
push
inc
push
out
sahf
das
out
xchg
loope
jp
mov
in
mov
xchg
mov
jmp
aas
and
jae
pop
xchg
sbb
sbb
pop
cmp
sub
xor
adc
fildll
rorb
mov
in
out
in
jbe
test
mov
nop
sbb
mov
inc
sub
sbb
fs
aam
int
sbb
push
or
imul
loope
mov
mov
sti
outsb
xchg
leave
inc
mov
add
cmp
sarb
pop
ss
pop
sub
jge
neg
dec
adc
mov
fsubrs
xor
lcall
adc
pop
jecxz
aas
adc
or
sbbb
enter
sub
adc
dec
xchg
scas
sbb
rorl
mov
mov
mov
xchg
and
push
idiv
cmp
mov
pop
add
jmp
addl
sahf
mov
mov
and
lock
or
out
cltd
jl
bound
add
stc
xchg
out
push
add
sub
add
cmpsb
inc
daa
pop
mov
shl
mov
cmpsl
fnstcw
mov
in
aaa
push
movsb
scas
jae
mov
outsb
sahf
shlb
popl
stos
std
data16
rol
dec
jae
sbb
scas
cmc
sub
stc
cmpl
sub
cwtl
pop
in
push
inc
sahf
test
xchg
inc
sub
jle
jmp
mov
leave
shr
push
jno
add
ficoms
or
xchg
jo
mov
mov
xchg
bound
xlat
jbe
add
sahf
mov
fwait
jns
add
mov
jmp
or
cmp
mov
pop
push
rcr
xchg
popw
push
data16
mov
fmull
sub
jle
adc
ret
cmp
adc
sarl
mov
imul
shll
cmp
mov
out
or
out
hlt
adc
jecxz
sets
mov
ret
es
jmp
mov
in
xchg
jb
arpl
jp
pop
pusha
flds
pop
lds
sub
fbstp
das
inc
cli
lahf
cmp
mov
test
das
in
add
xchg
cs
out
repz
das
das
pop
call
inc
mov
dec
inc
dec
mov
xchg
loope
mov
int
pop
adc
sbb
popf
rcrl
arpl
fwait
iret
inc
loop
in
jmp
mov
out
dec
in
das
push
jle
repz
in
loope
mov
cmpsl
xchg
pop
cmp
outsl
sbb
inc
xor
adc
jmp
adc
shr
mov
jno
aas
aaa
lahf
sbb
xchg
pusha
jge
mov
shrl
or
and
mov
fistpl
notl
jnp
push
pop
mov
lds
fsts
fiadds
lret
int
and
dec
mov
out
sub
cltd
inc
in
aaa
gs
dec
mov
fwait
dec
sbb
popf
sub
imul
jae
mov
push
dec
and
push
mov
sbb
nop
add
aad
jbe
mov
xchg
lret
mov
icebp
cmc
xor
mov
xor
and
loopne
out
jle
and
adc
iret
loopne
movsl
dec
sub
sbb
inc
push
push
or
ficoml
push
adc
fwait
and
fs
cltd
rclb
dec
mov
maskmovq
imull
xchg
sti
mov
popf
jl
mov
jo
lret
mov
clc
addr16
dec
enter
cmp
es
in
ja
aam
daa
push
pop
fisubrs
stos
bound
data16
pop
push
mov
sub
xor
nop
cmpsl
pop
mov
xor
and
nop
rcl
dec
sub
fsubr
lret
pop
or
mov
repz
sub
outsl
stos
sub
ret
sub
cmp
adc
gs
push
cmp
int
loop
inc
or
cwtl
lods
fisubrl
push
sbb
jmp
mov
lcall
jo
sbb
jne
pop
mov
jge
push
mov
and
sub
popa
in
push
outsl
adc
or
dec
xchg
adc
addr16
std
int
xchg
adc
pop
mov
arpl
and
loopne
fs
test
ja
jnp
xchg
enter
test
fcmovu
add
loope
rorb
out
cmp
ds
fistl
popa
dec
in
jo
adc
insb
outsl
flds
sbb
std
hlt
inc
and
movsb
jmp
fcomps
inc
and
or
int
xchg
fldcw
pop
mov
andl
and
into
add
mov
inc
xor
sub
pop
test
jb
jns
pop
xorl
lcall
shll
sub
add
sub
mov
jae
xor
inc
fidivs
fiadds
sub
data16
cs
sahf
jge
jecxz
addl
pop
ljmp
loop
test
enter
mov
aaa
push
inc
dec
in
stos
sbb
repnz
inc
xchg
clc
cltd
and
pop
pop
popl
inc
int
fsubs
scas
add
test
dec
pop
and
and
mov
adc
out
sbb
push
or
fcomps
lahf
inc
mov
cli
roll
popl
xchg
adc
std
xchg
fwait
daa
pop
jp
repnz
out
mov
pop
push
xor
insl
nop
iret
inc
or
shl
add
imul
or
mov
mov
movsb
dec
push
push
cmp
nop
mov
fistpll
dec
jb
or
cmpsl
and
out
fwait
test
push
fisubl
sub
lock
es
mov
xchg
clc
lret
pop
xchg
test
mov
jl
mov
testb
mov
mov
push
dec
push
fildl
cltd
add
push
inc
sbb
stos
mov
adc
xor
add
pusha
sbb
loope
adc
subl
pop
pop
call
mov
dec
push
xchg
mov
push
imulb
sub
mov
popl
mov
icebp
mov
xchg
cmp
add
aas
imul
inc
push
sbb
adc
jle
repnz
ja
xor
push
xlat
loope
in
push
fcmovnb
dec
cmp
mov
sbb
js
inc
into
sub
sbb
bound
jb
add
xchg
inc
xorl
popf
lret
xchg
sti
std
jecxz
mov
enter
jmp
pop
cmp
cltd
pop
cmpb
and
xchg
and
in
add
sbb
sbb
lds
stc
and
movsl
fwait
xor
lds
inc
shlb
cmp
xor
sbb
mov
rolb
outsl
sti
jle
fistl
scas
sub
sarl
daa
out
pop
lods
aad
daa
cli
jle
push
mov
cmp
inc
mov
insb
push
pop
lea
push
xor
rolb
mov
gs
lahf
subb
xor
fisubrs
stos
sub
pop
out
and
push
imul
cmp
pop
xor
mov
mov
jl
sti
jge
mov
push
in
sub
add
sub
nop
frstor
xor
push
xchg
push
sbb
in
lock
iret
les
cltd
jle
das
jb
xchg
sbbl
adc
shrb
pop
mov
out
stos
test
pushf
jg
movsl
pop
xchg
pop
sub
mov
inc
adc
xchg
mov
arpl
fdivrs
mov
or
movsb
adcb
inc
call
push
aam
insl
arpl
icebp
es
sbb
popf
dec
nop
scas
scas
pop
xorb
xchg
sbb
jge
mov
in
xchg
rorb
addr16
cmpsl
and
sbb
outsl
push
mov
xor
loopne
stos
inc
and
scas
xor
push
and
xchg
sbbb
insl
fistps
jg
nop
add
sbb
xor
fs
stos
and
lds
inc
shrl
add
roll
pop
jbe
pop
hlt
test
es
sbb
cmpsl
adc
mov
sbb
xor
jo
cmp
aam
loop
mov
repz
or
jmp
cmp
mov
ljmp
stos
sbb
imull
pop
lret
nop
push
daa
repnz
xor
dec
ret
iret
mov
loopne
push
mov
push
push
sub
in
mov
push
xor
stos
mov
out
mov
ja
loope
and
data16
mov
test
mov
mov
aad
inc
push
cld
jae
mov
push
adc
das
sbb
dec
negb
mov
mov
daa
pop
inc
pop
or
sub
lcall
daa
aad
jecxz
aas
mov
jne
stc
mov
into
lods
push
fucomi
jmp
stos
jecxz
mov
push
dec
movsl
std
lcall
fisttpl
adc
lods
cmpsb
sarl
movzwl
shll
cmpsb
mov
dec
mov
push
add
jge
sti
mov
imul
inc
fisttpll
mov
pop
or
sti
fsubrs
outsb
and
and
popa
std
mov
jae
outsl
jmp
cmp
xor
jecxz
fs
imull
mov
push
shlb
sub
add
lcall
push
adc
adc
jnp
imul
orb
and
push
fcmovu
mov
insl
cmp
jns
lret
mov
fs
jno
mov
adc
ret
aaa
js
pop
mov
and
icebp
popf
arpl
or
sub
aaa
int
and
jge
mov
inc
outsb
jae
sub
sbb
xchg
xchg
dec
sbb
out
dec
lahf
mov
das
fabs
mov
lock
shll
leave
and
sbb
jg
add
aas
mov
lods
dec
aad
lods
iret
arpl
dec
ret
cltd
sar
cltd
in
mov
and
push
jb
insb
inc
loope
push
mov
add
clc
mov
jb
inc
jge
mov
push
pop
cli
xor
scas
jp
push
jbe
je
aas
bound
arpl
jno
inc
mov
adc
push
add
loop
pop
xchg
or
sub
sub
test
xchg
cmp
jo
push
mov
imul
rcrl
mov
xchg
sbb
inc
test
xor
mov
and
cmp
sti
cmpsb
mov
outsl
ds
push
mov
test
lds
xor
or
sti
data16
inc
ljmp
jne
push
repz
mov
outsl
mov
sub
dec
shll
in
sub
push
adc
mov
dec
cmp
divl
das
dec
into
cltd
cmp
test
nop
insb
gs
loop
out
lret
sbb
mov
push
mov
mov
fisttps
jno
cltd
mov
std
mov
shlb
jnp
fs
inc
xor
sti
in
lahf
adc
fisttpl
cmp
test
fistpll
rorl
push
add
out
loopne
leave
or
inc
std
mov
dec
push
mov
xchg
or
and
sbb
xor
mov
pop
stos
int
lds
aam
cmp
cltd
jb
or
push
test
fcoml
jne
enter
in
fldcw
inc
movsl
add
gs
sahf
cmp
out
sbb
push
sarb
xchg
mov
into
idiv
lahf
pushf
xchg
lods
outsb
push
test
loop
cli
jecxz,pt
adc
lahf
out
jns
insb
xchg
adc
popa
aad
mov
xlat
jecxz
andl
scas
jl
adc
call
xor
imul
stos
aas
stc
lds
scas
movsl
in
dec
jb
es
adc
dec
fdivrs
pop
aam
adc
mov
int
sub
adc
push
lcall
mov
cmp
out
in
push
insb
stos
xlat
stos
mov
or
cmp
mov
lea
xchg
pop
push
or
movsl
sti
inc
xlat
test
cmp
in
adc
and
addr16
sbb
out
pop
adc
xchg
loope
cs
cs
adc
fimull
add
mov
stos
cmp
std
dec
jmp
pop
dec
js
out
leave
sbb
stos
fldcw
xchg
jge
out
adc
xchg
add
add
scas
adc
mov
cmp
pop
out
jne
pop
adc
sti
push
sub
mov
dec
frstor
icebp
mov
std
push
scas
xchg
cmp
push
js
subb
adc
pop
xchg
sub
clc
fidivrl
sub
in
int
pop
add
scas
arpl
js
add
jmp
out
sbb
xlat
lret
cmp
dec
mov
dec
mov
iret
ret
jle
call
cmpsl
sahf
aam
and
and
jmp
inc
rorb
cs
sahf
aaa
hlt
loop
push
or
add
ror
xchg
jmp
adcb
inc
fldenv
jp
adc
push
xchg
inc
dec
notb
or
mov
sub
add
sbb
dec
lcall
sub
mov
push
pop
pop
pop
andl
cmpsl
test
pop
jae
push
add
mov
ret
jle
daa
enter
fisubrl
adc
les
push
in
sbb
fldt
sbb
mov
jns
repz
test
cmp
dec
sbb
cmp
ret
jl
dec
inc
inc
sub
xlat
xor
mov
mov
iret
ret
lahf
pop
imul
xchg
mov
push
dec
sbb
xchg
cltd
mov
push
sbb
outsb
imul
and
mov
adc
nop
inc
inc
stc
xchg
and
mov
fstpl
dec
aam
jnp
dec
cmp
out
cmp
rclb
sar
dec
ret
in
cld
pop
mov
outsb
jne
jp
cmpsl
push
aam
imul
mov
mov
xchg
movsl
jg
jno
mov
xchg
stc
jns
inc
sbb
dec
pushf
push
adc
mov
test
dec
jo
sbb
push
jp
les
inc
and
or
pop
dec
mov
mov
outsb
repz
inc
cmp
adc
movsb
jns
push
mov
iret
es
arpl
loopne
mov
mov
sbb
xchg
mov
nop
mov
sbb
in
fimull
dec
pop
lret
decl
pop
and
pushf
lret
ret
push
xlat
test
inc
aam
dec
scas
clc
mov
cli
jge
dec
or
adc
ret
sbb
pop
dec
pop
pop
jecxz
cmpb
sub
loop
repz
stc
sahf
mov
mov
cmp
mov
jae
sub
mov
cmp
adc
es
jnp
andb
lret
mov
mov
sarl
xchg
movsb
ficompl
dec
jbe
andb
stc
add
je
dec
jbe
add
inc
insl
or
jmp
fwait
cmc
sbb
pop
mov
in
popl
mov
ds
aas
arpl
cmp
xor
xchg
outsl
fdivp
xlat
push
mov
jl
in
add
das
rol
mov
jle
clc
sbb
pop
inc
cmp
or
arpl
inc
or
jbe
lret
or
pop
or
idivb
bound
jnp
cmpsb
push
fistpl
xor
pop
adcb
xchg
adc
sbb
negl
mov
pop
or
insl
ror
std
shl
inc
gs
pop
mov
aaa
push
andb
jae
cwtl
movsl
cmp
adc
fsubs
clc
xchg
cmp
cmpl
fisttps
jbe
jge
cmp
rcll
or
data16
shrb
xor
and
out
fiaddl
sbb
adc
lret
in
test
mov
stos
adc
fstps
cmp
int
jl
mov
inc
rcll
sub
mov
pop
ficompl
movsb
in
ret
or
js
sub
iret
pop
sbbb
mov
enter
roll
mov
jb
out
aas
inc
insb
cmp
rcrl
jbe
pop
push
shlb
shrl
or
pop
sub
call
cmp
push
fdivrs
or
outsl
pop
mov
mov
mov
jg
sub
inc
test
cmp
movsb
sub
jnp
push
ljmp
xchg
cmp
cmc
popa
pop
ja
sarb
inc
outsl
lea
lret
pop
stc
out
push
shr
scas
xchg
pop
sti
je
adc
incl
sti
mov
in
pop
stos
in
shrl
xchg
cld
imul
aam
mov
xchg
test
int3
dec
xor
repz
or
cmp
add
pop
xchg
cmc
popa
pop
adc
mov
inc
rcll
xor
call
leave
test
adc
imul
dec
int
sbb
mov
or
gs
push
ret
test
jp
sbb
sub
dec
adc
lret
cmp
jmp
push
sbb
cmpl
movsl
out
in
push
push
cli
fildll
sbbl
mov
pop
dec
rcr
jl
or
mov
inc
dec
adc
add
xchg
and
inc
scas
adc
sbb
jl
pop
pop
cltd
outsl
sbb
and
out
adcb
push
ja
nop
nop
cld
sbb
adc
ljmp
int3
push
faddl
sbb
jno
inc
lcall
fildll
dec
fadd
sbb
popa
inc
out
stc
lods
mov
push
lds
inc
mov
movsb
fcoms
aaa
mov
cmp
dec
ret
dec
test
sub
rcr
or
js
mov
xchg
rorl
sbbl
sbb
js
fisubs
inc
das
out
inc
dec
out
pop
test
cs
sub
jb
cmp
push
add
fisttpll
lods
pop
jmp
jns
aam
pushf
push
cmp
jns
and
sub
and
ret
pop
inc
mov
mov
ror
sbb
repnz
sti
jbe
jb
cmp
cmp
imul
lock
dec
div
sub
addr16
cmp
adc
fstps
mov
sbb
scas
rol
jne
ret
jmp
push
movsl
sbb
adc
pop
ljmp
mov
hlt
outsb
jmp
add
or
outsl
mov
sbb
fs
dec
jo
add
ljmp
and
jb
nop
mov
insb
scas
dec
dec
or
enter
push
sahf
int
cli
adc
mov
dec
lahf
or
and
mov
mov
adcl
cmp
bnd
push
push
pop
mov
das
and
or
dec
push
xor
pushf
mov
xchg
notl
lods
out
les
dec
imul
adc
lahf
mov
jmp
mov
xlat
enter
or
push
xchg
scas
mov
mov
sbbb
std
jb
lret
push
dec
add
xor
mov
mov
push
dec
xor
inc
push
jecxz
mov
cmp
in
dec
and
push
pop
loopne
sarb
jno
loopne
mov
pop
pop
inc
cmp
lods
dec
sbb
fnsave
mov
mov
imul
adc
decb
cmp
aaa
out
pop
jb
pusha
cmp
nop
test
dec
into
arpl
pop
pop
lea
insb
stos
mov
lret
nop
cmp
ds
clc
rcr
cld
cmpsl
lds
test
adc
adcl
pop
shlb
nop
xchg
dec
inc
sbb
push
insl
movsb
ret
push
pop
sub
inc
xor
xchg
je
xchg
ds
ljmp
repz
movsl
pop
sub
or
mov
fs
in
in
enter
sub
add
rorb
inc
mov
dec
sahf
mov
jae
xlat
mov
and
xor
mov
imul
lods
scas
jne
inc
push
xor
push
or
mov
mov
pop
into
adc
ss
inc
ljmp
cmp
das
sbbl
bound
movsb
fs
stc
jle
and
jle
cmp
lret
rorl
jmp
loopne
ljmp
shr
fdiv
jmp
sub
shrb
ja,pt
or
out
loop
popa
xchg
adc
xchg
inc
mov
cmp
push
das
jns
orb
mov
in
inc
adc
jo
mov
enter
inc
xor
daa
das
mov
gs
xorl
jge
mov
push
mov
adc
and
repz
insl
ucomiss
or
and
and
out
repnz
repz
jb
mov
sub
mov
movl
adcb
sub
mov
xor
or
pop
aad
or
adc
fldcw
dec
pushf
adc
sbb
add
mov
out
jmp
mov
rclb
mov
loopne
inc
adc
jb
cmp
inc
mov
subl
rcrb
test
clc
mov
add
jl
in
or
xchg
sahf
jb
cld
int3
dec
aas
sbb
mov
popf
pop
xchg
push
inc
lock
in
repnz
mov
lret
push
mov
lret
lods
xor
pop
test
stc
sub
sub
push
or
sub
add
xchg
ds
rorl
add
loopne
push
out
cmp
jo
mov
out
ja
xlat
jbe
shlb
out
pop
rcrb
jbe
test
inc
or
mov
shr
popf
dec
cld
xchg
cli
add
movsl
dec
cmp
mov
push
xchg
add
test
stos
mov
int
rcrl
icebp
jb
sbb
sub
pusha
push
cltd
sbb
sbb
mov
ja
mov
sub
push
mov
add
xchg
fs
mov
lods
cmc
xor
cltd
out
add
mov
xor
or
lock
lret
sahf
mov
xor
lods
aad
cmc
ja
sub
loop
add
lret
lcall
icebp
shr
in
mov
cmp
loop
shr
lret
or
shrb
into
ljmp
int3
loope
iret
mov
sbb
mov
mov
xchg
fcomi
daa
mov
lcall
push
and
scas
inc
pop
inc
orl
pop
push
add
or
jo
data16
xor
or
pop
aad
mov
sbb
mov
outsl
fnstsw
negb
inc
xchg
sub
sbb
mov
sub
int3
pop
push
ret
inc
out
pop
pop
and
mov
xchg
icebp
push
jo
inc
scas
add
and
push
outsl
sub
aas
xor
fwait
sbb
sbb
and
loopne
xchg
mov
and
cmc
push
jmp
fs
cld
scas
pop
adc
scas
andl
movsb
xchg
pop
dec
adc
xchg
in
and
sbb
out
js
jl
hlt
inc
cmpb
rorb
jne
rclb
mov
popa
adc
xor
aad
sbb
test
cmp
cmp
fiadds
dec
mov
call
mov
cmpsl
jl
xchg
scas
sbb
loopne
push
pop
ret
add
inc
fisubs
and
sub
shrl
imul
or
sbb
rcll
pop
add
jg
testl
orb
sahf
mov
cmpsb
in
xor
push
or
sub
push
dec
xor
sbb
ficompl
sbb
pop
push
outsl
sbb
inc
sub
mov
cli
push
mov
insl
arpl
pop
jmp
int
jbe
clc
clc
xor
xor
pop
pop
cmp
inc
insb
and
push
inc
dec
cmp
test
mov
push
insl
andl
sub
out
xchg
mov
gs
cwtl
pop
cli
pop
les
jno
mov
ret
jecxz
repnz
mov
and
xchg
in
jp
xchg
ja
aad
or
loopne
or
cmp
dec
stc
ljmp
pop
test
sbb
sbb
fiadds
fldt
or
scas
pop
xchg
inc
cld
enter
les
cmp
std
js
xor
xor
xchg
adc
add
dec
les
push
push
push
hlt
call
jb
jne
scas
in
mov
aam
and
pop
cltd
mov
lods
push
dec
call
pop
ljmp
mov
push
cmp
aam
add
clc
push
push
loopne
cmove
divl
lcall
inc
and
lret
fs
inc
ret
rcrb
add
xor
fcoml
push
outsb
fnstsw
lods
and
fistpll
xorb
xor
cmp
mov
out
mov
adc
sub
jle
jmp
mov
add
xor
pop
dec
push
aaa
pop
pop
jp
sub
jg
push
stc
mov
sahf
jmp
push
notb
pop
and
mov
sahf
mov
loop
push
add
or
mov
lea
shll
jmp
mov
pop
pop
lea
scas
sbb
bound
xlat
leave
jo
xor
es
movl
lods
inc
dec
mov
push
repz
jo
aaa
or
sbb
inc
jno
lods
bound
lahf
pop
xor
and
pop
rol
loope
je
cmp
repz
dec
repnz
jmp
xchg
adc
or
shr
ret
xor
mov
push
mov
xor
jns
mov
lods
les
lods
or
js
mov
xor
push
mov
add
and
mov
mov
icebp
fmull
dec
adc
dec
div
jecxz
push
sub
pop
imul
dec
aad
ret
arpl
bound
xchg
clc
sahf
add
addr16
lret
mov
test
fldpi
out
mov
inc
or
mov
inc
adc
js
mov
js
xor
insl
mov
in
rorl
adc
clc
mov
jl
gs
xchg
clc
and
aaa
add
cmp
push
mov
inc
shll
inc
int3
pop
movsl
cmc
mov
cmpsb
add
stc
test
repz
inc
out
je
jmpw
adc
mov
aad
xchg
pop
pusha
xor
iret
aas
es
aam
movsl
test
mov
loop
addr16
xchg
sub
pop
mov
lods
add
fs
adc
movsl
cmp
cmpsb
mov
sti
out
or
push
mov
add
lahf
adc
dec
rol
fmuls
sbb
cs
jno
lock
and
push
pushf
jo
out
jmp
out
outsl
jmp
sub
cwtl
outsl
dec
repnz
cmp
dec
loope
cmp
shrl
xchg
lcall
lea
or
or
jmp
xor
xchg
fsubrl
jbe
data16
jbe
add
dec
int
lods
pop
xor
add
aaa
dec
pop
inc
push
mov
pop
pusha
and
sbb
cs
lock
mov
dec
aas
enter
xchg
jns
fnsave
cmp
test
jno
and
stc
sarb
lret
rolb
imul
sbb
mov
insl
cmp
xlat
aad
scas
or
add
cmp
js
mov
jne
xor
jl
xor
pushw
pusha
inc
mov
cmp
xor
xor
stos
cmp
pop
sbb
mov
and
add
pop
cmp
inc
add
xchg
push
or
pop
cmp
pop
ret
jno
dec
shl
xchg
arpl
and
fxam
stc
and
mov
kmovw
and
pop
xor
sub
and
jge
sub
gs
out
jnp
and
xor
xchg
aas
dec
adc
out
in
loop
jae
push
sub
jecxz
sub
fadds
test
std
push
push
clc
xor
mov
adc
cld
pop
sub
fs
xor
xchg
shlb
lret
mov
in
xchg
pop
out
loope
pusha
inc
xchg
cmp
jp
push
and
mov
and
cld
inc
fiadds
sub
push
mov
adc
xor
mov
in
les
push
jl
pop
adc
arpl
imul
sti
les
push
jl
jnp
gs
pop
cmp
filds
and
add
xchg
rclb
sbb
mov
xchg
pop
filds
cld
popa
andl
pusha
push
adc
cwtl
into
inc
mov
mov
mov
jecxz
int
dec
mov
call
ljmp
loop
sbb
add
push
scas
insb
ljmp
and
mov
shll
add
pusha
ja
push
data16
mov
xchg
aas
xor
pop
cwtl
cli
sub
jle
adc
push
repnz
xor
push
inc
pop
arpl
lcall
inc
xor
out
clc
ret
mov
mov
sub
js
jle
xchg
xor
jle
jle
mov
jo
dec
aas
mov
sbb
scas
xchg
call
out
addr16
aam
jne
cs
dec
mov
incl
outsl
fsubrl
adc
adc
pop
dec
fimuls
icebp
dec
imul
fimull
lods
sti
inc
nop
jae
pushf
movsb
or
push
push
mov
mov
push
leave
adc
or
fisttpll
enter
rorb
xlat
testl
and
xchg
jne
inc
add
sbb
mov
int3
xor
push
sub
jle
call
pop
adc
add
cltd
mov
pop
adc
nop
loopne
pusha
xchg
not
psubsb
push
pop
es
icebp
out
and
cwtl
jb
movsb
mov
and
jecxz
outsb
jecxz
fadds
sbb
add
adc
arpl
cmp
sub
test
mov
and
push
repz
xorl
fnstenv
mov
jne
inc
sub
or
pushf
es
jmp
xchg
xor
icebp
repnz
cwtl
pop
ret
inc
pop
push
sbb
mov
subl
push
adc
push
or
lcall
pop
adc
clc
mov
les
sbbl
push
sub
pop
xchg
jne
push
jl
in
and
hlt
mov
test
jmp
imul
jnp
aaa
sar
cmp
aaa
jp
scas
sbb
out
out
cmpsl
addr16
shll
mov
cmp
rolb
addr16
pop
ret
shrb
inc
pop
and
out
es
jmp
mov
jnp
fwait
mov
inc
cmpsl
outsl
stos
pop
call
arpl
pop
int3
push
lock
sbb
test
xchg
pop
pop
jle
and
aaa
xchg
das
aam
mov
leave
insb
pop
je
clc
fldl
xchg
and
cld
sub
lods
mov
hlt
inc
adc
and
or
fsts
mov
sti
dec
push
cli
lock
fcmove
rorl
pop
mov
mov
sbb
or
leave
cli
cmp
insl
shrb
mov
adc
jge
sub
and
xchg
pusha
fidivs
cmpb
mov
aaa
sub
mov
xchg
loopne
mov
cmpsb
mov
adc
inc
jp
pop
fildll
lock
and
les
mov
sbb
in
lret
inc
sub
add
divl
aam
sbb
repz
xor
out
inc
add
int
sbbl
and
xor
daa
rcrb
hlt
es
jg
jmp
xchg
or
lcall
push
scas
cwtl
inc
mov
adc
add
rcll
adc
andb
call
mov
stos
ret
and
xchg
mov
fmul
add
cmp
bound
pushf
mov
pop
xor
pop
clc
inc
scas
fstpt
inc
jecxz
repz
cmc
inc
push
ja
outsb
mov
test
pop
lods
inc
push
mov
pop
xor
lcall
rcll
xchg
xchg
sub
inc
pop
pop
mov
lret
mov
sbb
fadds
xlat
xchg
aam
adc
scas
lcall
in
ja
pop
push
add
mov
cmp
lahf
outsl
xlat
dec
dec
push
or
xchg
movsb
rol
push
mov
aad
add
rorb
inc
push
add
pusha
xchg
lret
dec
adc
test
out
xor
aas
push
mov
jge
scas
jl
dec
aam
jno
in
and
jnp
push
jbe
sbb
cmp
jo
aas
inc
orb
push
push
xchg
or
fwait
xchg
cmp
push
xor
fbstp
pop
lret
inc
mov
shl
ds
call
xor
push
xchg
dec
sti
movsb
popf
cmpsb
pop
mov
add
pop
jge
xchg
movsb
fwait
push
adc
pop
outsb
sbb
push
jmp
divl
out
push
icebp
add
mov
inc
dec
mov
das
jnp
add
pusha
jnp
cmpsl
shr
jno
into
lea
adc
inc
dec
xchg
add
adc
adc
xchg
scas
cli
shrl
lods
sbb
pop
mov
sbb
iret
aam
inc
bswap
cli
and
sub
int
test
xorl
xchg
movl
sbb
cmp
or
ds
loop
pop
dec
jecxz
pop
or
pop
mov
sub
or
add
rcrb
mov
xor
out
jnp
ja
cs
mov
rcrb
stos
sti
fcomps
ud1
add
add
loopne
jl
fistps
inc
and
movl
jb
pop
cmpsl
jnp
jg
pop
cwtl
lods
adc
and
repz
pop
mov
jl
mov
cli
lock
loope
call
nop
or
inc
jle
jns
in
stos
cltd
jg
xor
and
mov
setle
xor
std
fwait
mov
in
sub
shlb
adc
ret
inc
inc
cli
mov
mov
scas
clc
fs
jne
and
icebp
mov
or
lcall
test
out
cmp
fcoml
lods
jno
add
push
out
es
js
cli
push
in
cwtl
es
sub
out
test
xchg
mov
or
call
xor
mov
mov
sti
es
jb
dec
sbb
jge
dec
inc
dec
sar
jo
test
xchg
aam
and
and
pop
js
sub
jp
insb
adc
insl
inc
daa
jne
pop
lret
or
faddl
jle
fsubrs
fbstp
adc
mov
push
test
jmp
cltd
sub
sbb
movl
xor
xchg
lock
popa
xchg
dec
dec
in
mov
dec
shll
inc
adc
cmp
pop
ficoms
mul
or
cmp
pop
cld
add
mov
call
mov
jp
das
jae
leave
sub
sub
add
jno
jo
cmc
dec
sbb
bound
in
pcmpgtw
xchg
daa
and
push
arpl
adc
fmul
mov
call
fimull
xlat
push
mov
hlt
cmp
jl
cwtl
pop
loop
lods
pop
arpl
test
inc
push
je
daa
out
cmp
negl
pop
iret
add
push
sub
aas
mov
lcall
mov
mov
xlat
mov
dec
sbb
xchg
outsl
lea
inc
cmpsb
cmpsb
fbld
pop
ret
nop
sub
xchg
mov
inc
mov
out
in
out
sub
outsl
mov
out
sbb
push
mov
mov
push
lret
test
stc
xchg
pop
lods
sarl
ret
adc
jecxz
shl
add
inc
mov
cmp
lret
push
repnz
cld
and
lret
clc
sub
pop
sbb
test
rorl
loopne
mov
fisttps
clc
jp
rcpps
movsb
mov
jbe
mov
cmp
dec
push
push
add
or
jl
xor
pop
add
inc
mov
sub
sub
ret
add
or
push
jp
test
pop
fldl
std
mov
dec
cmp
jne
lret
xchg
inc
fidivl
fistps
and
pop
stos
jno
loope
ret
xchg
and
neg
cmp
loope
int3
jecxz
mov
xor
jmp
outsb
mov
dec
and
shl
sub
push
lret
sahf
push
je
mov
ret
xchg
inc
hlt
call
inc
insb
pop
mov
cmpsl
ret
in
in
aam
ficoml
push
and
repz
cmpsb
addl
outsb
and
jns
and
imul
mov
cld
shll
movsl
cltd
jg
xchg
xor
cmp
and
mov
mov
mov
andl
sarb
dec
pop
rcrl
mov
jmp
push
cld
fisubrl
lods
lret
popf
mov
ficoms
pop
push
mov
aas
cmpsb
xlat
jne
mov
repz
jae
or
sbb
or
mov
test
fbstp
shrl
jp
pop
jmp
jp
or
or
mov
pushf
push
sbb
call
out
push
xchg
pop
mov
xlat
rcll
shll
mov
xor
lahf
xchg
popl
ficoml
and
push
cmp
xchg
mov
pushw
mov
xor
lret
cwtl
jbe
jmp
inc
xor
dec
mov
mov
cmpb
sbb
sub
pusha
adc
inc
xor
out
mov
push
jo
sbb
push
call
push
mov
in
push
inc
cmp
xchg
jno
jmp
adc
or
mov
cmp
nop
test
jl
in
sbb
mov
mov
mov
push
or
inc
lods
pop
jle
js
ds
add
and
push
mov
bound
cltd
add
repnz
sarl
inc
adc
sahf
movsb
sbb
daa
pop
shlb
dec
pop
ljmp
mov
fs
std
pop
lds
test
daa
mov
mov
bound
jle
jo
dec
mov
notl
rcrb
push
or
dec
outsb
xchg
jg
outsb
mov
mov
out
loopne
imul
roll
cmp
ret
repnz
or
mov
mov
dec
jg
sti
daa
ja
fsubs
fsub
inc
mov
cmp
pop
lret
outsl
mov
out
push
in
cmpsl
mov
inc
jbe
inc
in
jns
cmp
je
push
orl
cmp
pushf
decl
jo
cwtl
stos
pop
std
mov
mov
dec
cli
and
sbb
mov
or
insl
pop
inc
int3
adc
lods
enter
xor
sarl
or
cmp
xchg
pop
xlat
leave
xchg
and
sub
pop
lcall
in
xor
loop
sarb
imul
lods
cmp
inc
inc
push
cs
je
clc
pop
mov
push
xor
xchg
fiadds
sub
pushf
enter
inc
adc
sbb
mov
test
adc
mull
sub
out
or
add
stos
xchg
stos
rcl
insl
arpl
sub
cmp
stos
lcall
aam
es
sbb
pop
inc
ffree
leave
shlb
inc
cmpl
in
cli
jb
jg
mov
mov
js
lds
lods
add
and
hlt
or
repnz
popf
lock
dec
adc
movsb
jge
mov
cltd
xor
aad
out
test
mov
nop
jge
jle
fdivl
jno
clc
repz
push
loope
jg
das
jg
sbb
sub
mov
dec
std
cmc
out
and
dec
inc
dec
mov
imul
pop
add
lahf
adc
xor
push
push
mov
lds
js
xor
sub
shrb
in
rcrl
xorl
xor
ss
aaa
in
mov
add
cmp
insl
ljmp
in
sub
aaa
in
mov
xchg
stos
mov
xchg
pop
test
xlat
inc
arpl
push
les
jmp
xchg
mov
mov
and
mov
testl
push
xchg
fnstcw
outsb
jae
and
out
or
mov
pop
xchg
cltd
fwait
nop
std
mov
dec
mov
jl
push
jg
je
gs
mov
mov
xor
iret
dec
mov
out
lods
pushf
fisubl
imulb
jg
fldenv
enter
fcmovbe
aaa
push
and
push
push
outsb
icebp
pop
or
add
mov
ss
fimuls
enter
mov
sti
push
fdivrs
out
shrl
outsl
out
push
add
jne
out
call
outsl
pop
lahf
jb
out
sbb
xor
rcrb
mov
push
lret
add
mov
aas
cmp
ja
cmp
push
aaa
pop
daa
push
loope
addr16
sub
cmp
sbb
imul
cwtl
pop
div
ret
out
and
xor
adc
data16
and
dec
out
pop
aaa
adc
jge
xchg
jecxz
push
jecxz
aad
jmp
pushf
add
add
jmp
movl
lds
loope
ret
mov
mov
mov
push
or
add
js
mov
leave
idiv
std
mov
imul
push
inc
jmp
cmp
xchg
mov
sub
int3
push
enter
mov
cltd
and
test
pop
sub
dec
shr
inc
and
mov
imul
cld
dec
and
jb
sub
stos
dec
aaa
f2xm1
iret
dec
das
pminub
cmpsl
sbb
inc
cmp
sub
aam
mov
add
cs
push
mov
inc
mov
mov
das
push
or
shld
add
cmp
sub
sbb
andb
mov
hlt
das
mov
fst
ret
inc
or
dec
repz
lret
push
mov
rcrb
cmp
push
mov
cmpsl
mov
sub
sub
add
popa
xchg
xchg
nop
mov
or
sub
ljmp
int3
arpl
xor
pop
dec
outsb
lods
int3
outsl
arpl
mov
adc
or
xor
cmp
rcl
lret
cmp
xor
mov
fcoml
dec
xor
jnp
cmpsl
lock
or
enter
inc
das
nop
jne
mov
sbb
dec
adc
mov
neg
sub
mul
pop
fimuls
ljmp
sbb
sub
movsl
ret
add
loop
dec
andb
xor
mov
sbb
lock
outsl
adc
or
cli
fwait
movsl
push
rclb
dec
repz
jl
xchg
aaa
push
xorw
aam
jnp
mov
out
inc
rorl
mov
or
inc
sar
adc
sub
mov
sub
dec
lret
dec
inc
les
push
push
pop
and
cld
push
xchg
cmpsb
in
cwtl
mov
fdivrl
push
rcll
sbb
xor
sbb
mov
pop
mov
push
nop
nop
fcoms
and
cmpsl
or
mov
jo
mov
fsubrl
addl
xor
push
loop
cmp
mov
cmp
dec
cmc
add
addl
scas
mov
out
lret
xor
dec
jae
mov
mov
adc
roll
ja
add
mov
stos
stos
mov
push
gs
lret
jle
push
pop
or
sahf
add
ja
xor
std
lods
sbb
add
xchg
inc
push
jbe
cwtl
xchg
jg
movl
sub
jge
testb
into
inc
cmp
std
jns
xor
in
pop
lret
insb
cli
add
cs
mov
fmull
cmp
pop
jecxz
inc
mov
jnp
aaa
xor
insb
mov
call
cltd
ljmp
loopne
lea
mov
dec
loop
arpl
mov
mov
fdivs
inc
and
nop
inc
push
pop
inc
and
push
cmpsb
adc
pop
jb
mov
lock
js
add
push
inc
xor
push
out
testb
jecxz
in
stos
mov
sub
push
arpl
cmp
jge
dec
cli
test
push
repnz
xor
int3
iret
insb
scas
lea
jmp
add
and
mov
cld
xchg
push
sar
clc
int3
lods
pop
mov
dec
imul
pop
or
fmul
xchg
xor
push
inc
jmp
leave
sets
dec
sbb
and
mov
xchg
inc
out
mov
repz
push
jnp
jae
pop
sub
xor
push
pop
sub
mov
jb
sbb
shl
cmp
push
mov
adc
stc
cli
int
stos
mov
jbe
dec
bound
popf
or
out
adc
popf
push
sahf
push
out
repz
scas
or
das
inc
lea
and
pop
mov
mov
mov
sub
out
mov
sbb
cld
dec
pop
sbb
stc
lock
push
mov
shl
cld
shl
sub
jo
fcmovbe
aad
je
ret
andl
push
in
mov
xlat
notb
gs
or
sub
das
inc
xchg
cld
dec
xlat
sar
out
sub
in
popf
repz
pop
fstl
adc
fsts
lods
push
out
adc
mov
or
jnp
push
mov
mov
ja
sti
mov
andb
inc
cmpsb
mov
or
nop
mov
mov
sbb
xor
mov
mov
roll
sbb
pop
test
lock
into
lcall
cmp
arpl
out
mov
loop
push
jecxz
jae
shlb
jae
in
andb
enter
nop
push
int3
pop
lret
pop
add
add
cmp
xchg
adc
pusha
push
aaa
loopne
into
dec
push
push
xor
dec
sbb
inc
jle
fsubl
cmp
div
jbe
andl
lods
daa
lcall
outsl
sti
xchg
sarl
cmpb
sbb
sbbl
pop
mov
pop
mov
imul
pop
sbb
mov
fs
cltd
sbb
mov
movsl
pop
xor
dec
inc
sbb
ss
outsb
adc
jns
cltd
gs
sahf
jmp
xchg
jl
jbe
adc
clc
xor
ja
push
mov
push
rcr
or
and
jge
in
mov
mov
inc
sbbb
push
pop
sub
call
aaa
popa
jg
orb
das
cmp
notb
cmp
adc
btc
inc
sarb
loopne
push
daa
or
push
mov
sbb
std
sbb
lret
pop
addr16
jg
frstor
xchg
pop
adc
imul
pop
notb
push
mov
in
mov
mov
pop
inc
loopne
adc
sub
fbld
xor
jns
xor
mov
and
cmp
insl
in
or
sub
stos
shl
lret
mov
pop
leave
mov
lods
jnp
dec
push
ss
sbb
shl
int3
inc
fstpt
adc
add
cld
push
cld
mov
test
inc
popf
aam
aas
jecxz
dec
or
daa
ret
sub
dec
sbb
mov
mov
std
cmp
ret
xchg
push
ljmp
dec
movsl
add
dec
xchg
pop
push
fstps
cmp
push
inc
call
mov
ret
test
sti
sub
popf
fsub
movb
jp
cltd
stos
loopne
sub
in
and
je
jae
dec
push
int
out
pop
or
lds
lock
ret
in
das
kandnw
fsubrl
testl
cmp
popf
mov
xor
mov
inc
xor
push
dec
sbb
pop
cmc
push
inc
enter
cmp
cltd
andl
loop
push
nop
adc
ja
jnp
mov
pop
cmp
fsubrl
jae
loop
and
adc
and
repz
push
fadds
inc
push
aaa
lret
push
loopne
adc
pop
push
rcrl
mov
push
aas
sbb
call
pusha
out
aas
pop
pop
jmp
test
cld
sbb
dec
sti
and
mov
inc
aam
xchg
cmc
sub
add
cli
clc
les
cmp
lods
divb
add
mov
mov
hlt
outsb
outsb
mov
lahf
mov
stos
jmp
popf
cmpb
mov
outsl
cltd
and
mov
aam
cltd
ficompl
dec
or
add
sbb
stos
mov
mov
push
push
push
subb
add
and
xchg
popf
and
adc
idivb
rcrl
mov
add
xchg
mov
fldenv
jne
mov
mov
add
or
call
mov
dec
in
and
outsl
jle
rorb
inc
out
push
jmp
loope
cmp
call
rcrl
cmp
pushf
mov
popf
push
jnp
test
adc
mov
jns
jnp
hlt
mov
sub
cmpsl
dec
inc
cmp
sub
jb
dec
mov
fsts
sbb
out
xorb
iret
jnp
add
stc
mov
lret
push
sbb
out
rorl
dec
cmp
sbb
inc
and
out
inc
pop
imul
loopne
sarb
xchg
mov
add
cmpsb
sti
test
ds
mov
inc
into
leave
in
pop
shlb
xor
or
out
jno
out
xchg
lret
jecxz
jnp
shll
js
inc
popa
push
push
ljmp
je
aad
jns
jp
gs
sub
push
stos
adc
xor
mov
mov
mov
inc
stos
aas
int
adcb
or
push
mov
int
xlat
xor
mov
into
test
jle
fisubrl
dec
mov
cwtl
push
push
stc
xor
sbb
lahf
jp
jecxz
cmpb
sbb
test
mov
push
cmp
lcall
icebp
aad
xor
mov
xchg
fs
rcrl
arpl
xor
insl
outsb
xlat
fidivs
xor
pop
mov
shrl
popa
dec
std
lea
ret
aas
xor
cld
and
xor
lcall
jne
in
push
mov
xlat
ret
movsb
maskmovq
mov
stos
adc
inc
stos
xor
inc
xor
push
mov
mov
arpl
in
loope
test
sub
mov
inc
inc
mov
jae
insb
les
xor
inc
mov
dec
shll
add
add
je
sbb
jnp
imull
notb
jle
out
and
int
jo
fninit
sub
shl
fstpt
inc
inc
je
mov
xchg
mov
popf
push
jnp
push
arpl
xor
ljmp
repz
cld
push
enter
test
adc
push
ret
pop
adc
pushf
sti
test
sbb
insb
ljmp
xchg
hlt
or
fwait
add
hlt
add
lods
mov
mov
in
jno
dec
cmpsl
cmove
xor
pcmpgtb
sbb
hlt
adc
pushf
cmp
sahf
cmp
es
jp
mov
jns
adc
pop
inc
jge
mov
push
lds
cmp
aaa
sbb
and
sahf
add
jno
add
sub
or
sbb
pop
iret
push
lock
mov
rcrl
xor
mov
mov
in
out
roll
dec
int
fistl
inc
pop
scas
jnp
fdivr
aam
and
jl
pushl
pop
mov
sahf
xlat
cmp
mov
std
enter
addb
rcrl
jl
popf
add
sbb
dec
inc
jecxz
jo
stos
sbb
pop
sbb
push
add
dec
inc
sub
xchg
push
push
xchg
inc
dec
mov
mov
in
mov
adc
mov
jo
jne
shll
popa
pop
add
push
add
scas
fnstcw
push
jbe
mov
jle
mov
imul
xchg
and
out
jmp
mulb
popf
stc
push
pusha
push
fistl
sti
sarb
mov
and
mov
mov
xor
cmpsl
stos
ja
xor
int3
cmp
jle
mov
mov
inc
sub
sbbl
popf
mov
loopne
mov
js
loop
jmp
std
cmpsb
pusha
out
std
sub
test
and
cmp
pop
ss
dec
rorl
jb
ret
sbb
popf
cmp
sbb
sarb
sbbl
xchg
mov
pop
dec
adc
sbb
xchg
dec
jno
ja
mov
les
int
jnp
movlps
in
ljmp
outsb
enter
inc
fisttpll
mov
cmp
or
adc
mov
ljmp
add
cmpsl
pusha
fdivrl
inc
xor
cmp
fcompl
push
lods
notl
shrl
sub
mov
lret
in
lods
jecxz
arpl
mov
or
inc
adc
ja
dec
repnz
test
lret
add
mov
mov
xor
mov
xchg
stos
das
dec
ds
hlt
dec
test
outsl
rorl
aaa
jb
or
leave
xlat
adcl
aaa
in
fdivl
adc
xchg
imul
insl
dec
in
lods
aad
aas
ds
out
arpl
sbb
leave
or
movsb
pop
dec
loop
xor
push
addr16
shll
cs
lods
icebp
popa
orb
pop
or
es
inc
aad
aad
or
or
divl
clc
sbb
call
cld
lock
gs
popa
into
or
push
jns
mov
xor
inc
jbe
pop
add
pop
dec
and
pop
decb
xor
jo
add
inc
sti
sbb
das
fidivs
loopne
sbb
test
or
xchg
jl
gs
xchg
cmp
mov
int
mov
pop
in
push
imul
mov
rcr
push
xor
insl
orb
mov
lods
mov
loope
jg
insl
and
dec
inc
cmpsb
cs
outsl
mov
push
add
lahf
hlt
jo
sahf
lcall
sbb
add
test
or
out
test
jp
fwait
ss
pushl
bound
lods
pop
pop
push
pop
stos
push
lcall
scas
outsb
clc
movl
scas
sub
call
sbb
or
iret
xchg
jo
mov
cmp
fsub
xchg
push
cmp
movsb
pop
jle
xor
rcrl
test
aad
add
xor
push
pusha
ret
scas
or
out
jmp
pop
dec
adc
test
or
pop
jge
push
inc
inc
popa
pop
fisttpll
pop
ror
inc
fsubp
mov
mov
jmp
sub
xlat
inc
sti
in
cmp
jns
push
pop
insl
add
mov
in
add
insl
add
dec
fwait
lock
mov
test
jne
shlb
adcl
cwtl
popf
xchg
fisttpl
jmp
push
mov
and
mov
push
or
pop
and
adc
xchg
mov
push
xchg
cmp
dec
dec
mov
jp
cwtl
pop
push
mov
sbb
les
sbbl
loop
dec
xor
jno
xchg
jle
inc
bound
fistpl
dec
sbb
lcall
sbbl
loop
or
mov
inc
dec
in
int
sbb
cli
mov
mov
or
dec
or
sub
cmp
xchg
test
cmc
and
push
jp
inc
push
loopne
ds
ret
cmpsb
adc
xchg
mov
jecxz
insl
push
cmp
cmp
clc
loope
out
lea
test
loop
in
ret
filds
imul
test
sub
insb
addr16
out
scas
cmp
mov
mov
adc
ja
jge
push
movsl
std
sbb
std
leave
inc
movsb
not
xchg
xchg
mov
std
test
sbb
imul
call
add
cmp
ffreep
sahf
xchg
test
int3
jbe
cwtl
out
out
aad
xor
cmc
inc
adc
mov
xor
subb
cmc
pop
mov
adc
lea
jp
inc
xchg
push
cmp
in
stos
and
roll
and
shrl
pop
sarl
cmpsb
pop
add
data16
pop
aam
imul
dec
icebp
fcomi
loop
mov
xchg
mov
mov
adc
jae
outsl
mov
std
pushf
jl
int3
mov
pop
adc
bound
dec
inc
xchg
jo
pop
jno
mov
ljmp
lds
test
mov
inc
loope
sbb
ljmp
sti
adc
pusha
mov
mov
aas
lret
cwtl
cmc
xlat
adcb
xor
popa
pop
in
sti
fists
push
inc
fdiv
ret
add
aaa
cmp
mov
mov
sub
cmp
das
push
aam
mov
or
not
mov
pop
sub
pop
pop
inc
inc
aad
cmp
cmp
cmp
push
push
cs
mov
je
outsb
stos
jge
jmp
test
add
sahf
outsb
cmp
mov
jbe
sub
enter
sub
jle
jmp
dec
out
loopne
rorl
pusha
mov
sarl
sub
fsubs
mov
cld
cmp
jmp
cltd
fistps
and
cmp
ss
pop
adc
dec
or
add
call
outsl
movsl
sbb
jnp
inc
fdivrp
leave
rcrl
scas
cmp
outsl
adc
out
push
xor
lret
or
inc
xchg
mov
inc
xchg
sub
lret
aad
sub
or
dec
xchg
jns
jne
daa
mov
xlat
stos
mov
out
lea
mov
jg
and
push
stos
movsl
daa
fldcw
rorl
mov
int
pop
lahf
scas
stc
mov
test
movsl
icebp
stc
ljmp
xchg
lea
xor
pop
pop
in
ljmp
aas
adc
popl
repz
mov
es
ss
add
pop
mov
push
lret
and
cmpsl
xor
out
pusha
jmp
add
test
or
jae
lret
mov
jge
test
dec
pop
sub
popa
mov
cmp
addr16
test
shlb
repnz
aas
cmc
and
into
add
push
int3
in
push
pop
jb
push
insl
mov
xchg
data16
cltd
aas
fs
jbe
es
inc
and
popa
sbb
push
out
push
js
xchg
jge
and
movsl
inc
mov
adc
cmp
jae
adc
loop
fsubr
scas
out
push
loop
or
mov
mov
xor
movsb
stos
repz
jnp
mov
insb
subb
out
xlat
test
jp
inc
sbb
xchg
pop
push
cmp
add
jns
mov
add
xchg
mov
mov
add
pop
lods
ja
sahf
shl
lods
mov
cmc
ds
cld
les
std
test
call
scas
xor
mov
jle
adc
in
les
ss
mov
mov
mov
fnstenv
xchg
mov
mov
iret
xchg
jb
rcr
mov
movsb
inc
std
rorl
cmp
fisttpll
or
bnd
push
stos
mov
lahf
fisttpl
cmpsb
repz
jecxz
test
ljmp
mov
out
lds
imulb
loopne
sbb
pop
out
push
inc
jns
add
inc
inc
cld
shrl
mov
mov
mov
cmp
sarl
outsl
test
xchg
add
arpl
aaa
sbb
stc
add
or
or
sbb
mov
jno
js
pop
push
jb
icebp
stos
and
andb
sbb
dec
movsl
dec
dec
cmpsl
clc
scas
mov
xchg
add
out
insl
jl
mov
push
insb
sub
cmc
push
scas
push
mov
lea
xchg
enter
rolb
lods
and
pop
mov
push
clc
lods
sahf
pushf
cmp
mov
jns
mov
inc
jnp
sbb
lea
xchg
pop
cmp
nop
push
add
lahf
cmp
cmp
cli
mov
sub
pop
sbb
mov
cmp
cmp
outsl
ret
out
lods
pop
scas
movsl
mov
bound
mov
jp
out
ret
dec
std
mov
and
xchg
js
add
mov
mov
push
push
rcr
mov
jne
mov
adc
jnp
mov
popf
lea
xlat
cmp
mov
das
insb
cmp
repz
movsb
or
sub
jg
sti
fnstenv
fbld
mov
pop
add
cmpsb
cs
das
inc
pop
fimuls
mov
sbb
add
adc
push
cmovnp
push
bound
pop
clc
popf
xor
mov
sbb
dec
idiv
fisubs
test
dec
cmp
and
fbstp
push
popa
fisubl
aad
sbb
mov
push
dec
jge
xchg
ss
push
je
xchg
dec
rclb
enter
shll
or
push
and
btr
lahf
push
push
jae
jp
icebp
or
enter
mov
dec
push
adc
and
pushf
or
mov
or
mov
pop
xchg
hlt
pop
xorl
or
outsb
mov
mov
mov
cmp
fisttps
fildll
cmpsb
mov
mov
pop
nop
mov
repnz
lea
andb
bound
lods
xchg
movsl
ret
xchg
into
jp
call
pop
mov
out
jno
inc
mov
jge
sbbl
pop
jmp
xor
cmpsl
add
ret
ret
cmp
popf
hlt
mov
test
mov
adc
lods
lret
aaa
push
movsl
and
or
out
mov
dec
fwait
inc
enter
xchg
push
mov
cltd
dec
mov
repz
mov
adc
mov
xor
xlat
mov
and
xchg
test
or
cs
rol
jnp
ss
lea
push
jne
add
test
sbb
jae
push
jle
divl
popf
push
in
frstor
fidivrs
mov
xchg
daa
arpl
lret
or
sbb
je
aaa
mov
sub
mov
test
xchg
pushf
inc
or
jo
push
add
jb
jb
insb
enter
cmp
in
repnz
out
push
gs
aad
cwtl
xchg
and
adc
cmpl
or
mul
hlt
ja
cmp
jecxz
mov
aas
sbb
cwtl
mov
cmp
insb
js
shll
lods
sub
addr16
sarl
sbb
test
fbld
ret
sub
add
lock
repz
les
fisubs
std
mov
lcall
dec
shrl
iret
bound
aas
cs
das
pushf
loopne
push
ret
in
aam
jp
es
xor
or
nop
movsl
mov
dec
arpl
dec
and
xchg
rolb
lret
lea
incb
lds
lock
adc
pop
cmp
imul
push
mov
add
adcb
addr16
enter
fs
stos
xor
adc
sahf
cmpsl
mov
daa
cmp
mov
mov
les
adc
rcll
out
idivb
mov
pop
push
push
dec
imul
mov
out
sar
mov
add
je
out
fnstsw
sbb
loop
ret
outsb
in
sub
gs
xchg
mov
xor
insl
or
sbb
add
enter
add
pop
xchg
incb
stc
sbb
cmp
sub
dec
enter
fcoml
push
into
mov
arpl
mov
mov
out
icebp
and
xor
jne
mov
aas
jl
stos
jg
cmp
ret
push
pop
sbb
aam
sub
mov
xor
fucom
push
jns
cmp
jmp
fisttps
xchg
push
mov
cmp
mov
pushf
mov
inc
repz
mov
push
add
mov
adc
jecxz
call
mov
sbb
ret
movsl
jae
xchg
lahf
int3
jge
outsb
loop
shrb
pop
mov
pusha
cli
mov
sbb
in
ds
jae
in
daa
push
daa
icebp
movsl
add
xchg
push
out
xor
push
jnp
jl
or
pop
or
dec
cmp
pop
fdivs
jns
push
addr16
cmc
imul
add
adc
rorb
scas
add
iret
add
jmp
in
xchg
roll
bound
lods
mov
cmp
xor
cmp
movsl
stos
sub
outsl
pop
dec
imul
call
lds
jecxz
repz
ret
icebp
xchg
sbb
sbb
xor
push
jno
add
lods
aaa
test
cld
test
or
pop
add
mov
inc
mov
sub
rol
jo
mov
popf
sbb
mov
int3
outsb
fldl
ss
mov
cmp
enter
aam
je
in
testl
inc
fneni(8087
sub
xlat
and
inc
xchg
test
adc
int3
adc
lcall
insl
sbb
int3
stos
js
or
rorl
loopne
std
and
push
fwait
test
mov
fcoml
pop
clc
jp
push
insl
add
inc
xor
xor
sub
xor
out
fcmovu
mov
fstps
mov
add
lea
push
aaa
aaa
add
test
inc
sub
add
sti
dec
and
xchg
mov
pop
movsl
addr16
xor
mov
xchg
mov
add
in
jbe
xchg
lret
or
mov
stos
sbb
into
sbbb
fisttpl
lds
fsubrl
and
ja
cs
cmpsb
add
insl
mov
mov
popa
push
testb
insl
adc
outsb
and
sub
jecxz
lahf
cmpsb
cmp
aas
fsub
pop
cli
xor
cwtl
cli
outsb
cmp
sub
cmp
rcrl
cwtl
cmc
jmp
nop
sbb
jp
mov
and
mov
addr16
jl
add
sub
cmp
out
xor
out
enter
ret
jns
inc
lds
test
out
mov
leave
aam
movsl
or
mov
inc
ret
scas
or
or
push
pop
and
outsb
pop
jecxz
fdivrl
add
mov
mov
lea
fsubr
jle
call
mov
inc
js
shlb
mov
adc
lea
test
test
xlat
jnp
lgs
xchg
inc
arpl
push
outsb
cmc
xor
pushf
out
aad
mov
cltd
mov
adc
push
stc
adc
nop
fistpll
xor
push
dec
jb
test
movsl
or
fucomip
cmp
scas
add
adc
jl
sbb
ret
pop
movsb
cltd
movsb
adc
pop
sti
jl
xor
dec
mov
in
cmp
fistpll
jge
out
mov
inc
or
mov
mov
loope
cmc
je
int3
sbb
sbb
jns
popa
adc
movsb
xchg
xor
jo
xchg
or
jo
ja
pop
push
jle
jae
add
add
pop
inc
and
dec
andb
enter
sbb
push
jg
pop
cmpl
rolb
cmp
mov
push
pop
movl
mov
lock
lahf
cmp
int
fists
xchg
xor
push
and
push
imul
xor
mov
push
push
cmp
push
pop
stos
lods
shl
push
dec
arpl
jbe
xchg
push
or
or
jecxz
lods
jno
and
pop
into
jns
addb
outsl
jecxz
mov
mov
fildll
sub
lret
rclb
xor
rcrb
cmc
movsl
sbb
and
cmp
int3
jb
int3
xor
scas
adc
sbb
dec
mov
subl
cmc
add
adc
rolb
pop
sbb
cmp
and
loopne
xor
stos
cmpsl
jl
arpl
lds
xchg
test
xchg
int3
andb
in
inc
enter
ss
ffree
push
jno
dec
lods
ror
insl
repnz
imul
inc
mov
xor
sbb
int
mov
fidivs
test
or
int3
mov
jle
pop
xor
dec
les
lcall
adc
jns
cmp
sti
xor
sub
push
test
fs
rcl
insl
push
mov
sub
xchg
cmpsb
mov
mov
out
jecxz
imul
aaa
xor
push
pop
popf
lods
pop
mov
test
loopne
movsl
jl
cmp
aad
xchg
mov
psraw
dec
dec
addl
in
xchg
mov
or
int3
dec
push
pop
in
and
sbb
xchg
mov
iret
mov
test
xor
push
clc
inc
push
daa
outsl
jno
aad
mov
int
mov
or
add
inc
test
push
inc
add
popa
ret
inc
inc
into
scas
outsb
mov
jno
cmp
pop
pop
cli
fbld
fwait
aas
dec
loop
pop
dec
cwtl
aaa
in
xchg
scas
mov
or
cmpsb
out
cmpsl
lcall
addr16
mov
fwait
stos
jp
repnz
jne
js
push
jg
orl
stc
xor
shll
test
js
inc
push
fwait
mov
sbb
or
push
and
fs
cmc
push
in
sub
das
movsl
daa
inc
cs
scas
jp
in
leave
rcll
adc
xor
and
cmp
mov
xchg
pop
inc
out
push
dec
mov
or
pushf
les
push
inc
lock
sbb
jl
jne
mov
imul
xorb
nop
sub
lret
mov
jecxz
push
jnp
test
push
pop
pxor
daa
mov
add
cli
mov
ficoml
inc
out
mov
andb
pop
popf
stos
mov
and
insl
test
ret
out
mov
inc
sub
in
or
enter
xchg
sbb
or
adc
or
mov
testb
stos
pop
jmp
das
out
cmp
and
ret
iret
dec
hlt
sbb
mov
data16
xlat
or
outsl
or
and
arpl
mov
in
das
aam
int
mov
or
inc
es
mov
ret
jns
loopne
mov
push
add
jo
xor
insb
bound
mov
and
pop
out
jg
xor
dec
xor
mov
sub
push
aas
or
pop
outsb
leave
xchg
inc
mov
mulb
mov
sub
jae
addb
jo
mov
shr
dec
int
sub
stos
out
call
adc
mov
cmp
pusha
xchg
sub
rcrb
add
insb
xchg
imul
cmp
imul
pusha
push
outsl
xor
in
loop
jg
adc
dec
fstpt
cli
push
jbe
mov
pop
xchg
bound
adc
fldt
sub
jg
les
loope
push
or
xlat
fwait
sbb
adc
outsb
call
out
out
jns
add
imul
ljmp
cwtl
stos
ret
xchg
inc
iret
or
dec
mov
xchg
ss
inc
push
dec
xor
xor
adc
dec
adc
lret
icebp
andb
fstl
jns
outsl
cwtl
mov
fisttpl
add
sbb
fcompl
data16
ja
sbb
fistpl
imul
pop
pop
or
xor
xchg
lock
pop
mov
testb
andb
out
cmp
fs
fmull
lret
inc
sbb
mov
fcmovbe
stos
and
push
test
lret
idivb
pop
add
out
je
inc
ret
out
ja
subl
inc
cmp
adcb
bound
xchg
vmovapd
mov
cwtl
push
adc
add
sbb
lods
xor
jecxz
test
pop
jle
or
fisubs
mov
inc
mov
mov
movsb
rorl
hlt
pop
inc
std
bnd
mov
imul
arpl
leave
mov
ds
add
sub
cmpsb
inc
andb
inc
pop
jno
mul
lods
test
cmp
mov
pusha
jnp
pop
cmp
inc
repnz
test
sub
xor
ror
cltd
dec
scas
push
dec
mov
sub
ret
fiaddl
ljmp
insl
pop
sar
lahf
loop
mov
ret
jmp
into
cmp
add
mov
inc
inc
sbb
xor
sub
lcall
xor
xchg
cmc
repz
push
repz
sub
sub
mov
mov
adc
fcmovne
sub
mov
fstl
test
cmp
sahf
mov
jp
sti
sti
jp
fnstsw
jecxz
mov
mov
lret
lcall
adc
dec
popa
pop
sbb
jp
mov
mov
dec
ret
enter
push
setnp
sbb
aad
inc
push
inc
stc
sbb
icebp
mov
xchg
adc
ss
ss
mov
test
push
or
mov
movsb
inc
rclb
in
stos
adc
and
arpl
cmc
hlt
push
mov
mov
ret
cmc
ljmp
inc
inc
adc
sbb
wrmsr
test
jbe
mov
cmp
jne
incl
hlt
cmp
sbb
fidivl
loopne
mov
and
push
dec
push
pop
mov
adc
push
and
xchg
daa
adc
or
out
int3
rcll
fnstsw
pop
jo
pop
add
lret
in
fidivl
dec
or
jmp
jbe
dec
mov
lock
fisubrl
fs
cld
adc
push
or
in
test
bnd
xchg
add
bound
lds
lds
cmc
test
inc
jb
scas
retw
arpl
xor
lcall
push
push
mov
dec
jb
mov
jns
push
mov
call
xchg
and
mov
cmp
rcrl
xor
out
sub
jne
xchg
dec
push
out
add
addr16
dec
jge
cli
pop
mov
in
xor
inc
or
sub
gs
add
mov
jmp
mov
push
lret
sbbl
xchg
call
fs
push
clc
out
sbb
les
mov
jl
out
adc
in
adc
hlt
out
imul
cmp
jl
dec
shlb
repz
lret
pop
rolb
push
cmp
mull
pop
js
gs
mov
or
popa
mov
add
pop
cmp
and
fs
fisttps
jge
ds
iret
push
test
into
jns
jnp
cmc
mov
repnz
xchg
jmp
int3
sbbb
inc
jle
xor
sbb
out
and
data16
lret
pusha
push
mov
push
jecxz
push
imul
fcompl
cwtl
repnz
dec
jo
fistps
xor
test
xchg
mov
add
nop
jae
fcomps
sub
loop
sbb
add
push
dec
rcl
push
sbb
je
jge
sahf
in
les
ljmp
inc
je
arpl
mov
cld
gs
jle
data16
testb
std
es
aaa
sarb
loope
in
int
and
push
push
xor
cmp
xlat
cmp
push
add
test
pop
and
cwtl
xchg
cmp
std
lcall
inc
sub
sub
insb
adcl
sahf
icebp
ret
sti
fwait
cmp
and
daa
xor
mov
adc
scas
lea
push
sbb
and
ds
jbe
dec
jb
push
adc
lcall
aaa
jne
add
adc
adc
ret
jecxz
xchg
test
pop
xchg
lods
mov
ja
bound
pop
cmp
mov
lds
xchg
inc
and
aaa
cmp
xchg
pop
daa
jecxz
add
addl
add
daa
jg
ds
push
push
cmpsl
js
inc
outsb
pop
sbb
xor
cmp
cmp
in
out
xor
cmp
aaa
mov
push
dec
popa
das
add
enter
or
sub
pop
push
data16
xor
fwait
hlt
adc
adc
ljmp
rcrl
and
jo
mulb
jecxz
inc
sti
jecxz
bound
sbb
mov
outsl
and
pop
add
scas
repnz
dec
fcoms
stos
cltd
cmpsb
push
jbe
adc
or
sbb
sub
fldcw
push
cmpb
sub
adc
mov
inc
in
aad
or
lcall
clc
inc
adcb
je
cmp
sete
pop
push
jl
cmp
pusha
pop
lock
fsubr
add
repz
nop
sub
push
pop
jle
xor
fistps
sub
pop
dec
xlat
inc
in
fnsave
mov
call
sub
add
pop
outsl
fdivl
jno
pusha
outsb
xchg
loop
inc
pop
cmp
sub
pop
enter
pop
mov
dec
push
clc
push
ds
mov
pop
jb
xlat
popf
fmuls
int3
push
xor
movsl
push
dec
sbb
dec
add
jmp
daa
cmp
rcll
cmp
movsl
xchg
or
mov
jl
test
pop
sarb
pop
gs
popf
adc
or
inc
inc
mov
mov
adc
pop
ficompl
cmp
icebp
lret
es
je
rorl
bound
ficoms
jnp
mov
mov
adc
add
nop
mov
stos
push
push
lret
insl
repz
add
negb
dec
sub
pop
add
pop
xorb
adc
xchg
and
adc
fwait
rcrb
lds
xor
js
adc
in
out
lahf
pop
mov
pop
sbb
pop
mov
mov
int
in
ss
ret
mov
fbld
xchg
das
mov
xlat
sbb
inc
pop
or
mov
je
aas
fs
push
xchg
hlt
sub
cmp
filds
subb
mov
bound
push
dec
lea
dec
or
sbb
push
push
and
dec
lahf
pop
sub
sbb
sbbb
mov
lock
pop
cltd
or
xor
addr16
jmp
or
mov
nop
push
aaa
mov
mov
push
mov
dec
push
and
shll
inc
in
or
clc
cmp
mov
lock
in
mov
gs
ret
imul
mov
mov
or
int
popf
sbb
out
aam
cs
imul
out
mov
jno
arpl
in
enter
mov
lods
push
dec
mov
cmp
mov
adc
cmp
sub
in
repz
in
xor
test
pop
xchg
outsb
and
into
and
es
mov
jg
fisubrl
push
sbb
sar
test
je
pop
js
mov
jne
or
pop
out
xlat
aaa
xor
lret
arpl
dec
add
int
cmc
xor
dec
addl
sahf
mov
das
and
cld
inc
dec
pop
adcb
ret
mov
data16
xchg
dec
lock
lcall
inc
ss
jo
push
lea
pop
mov
xchg
and
in
push
lock
mov
mov
mov
cltd
cmp
mov
cs
in
xchg
repz
int3
push
add
loope
outsl
xlat
dec
add
adcb
lahf
sbbb
pop
jmp
in
mov
or
push
sub
lcall
push
sbb
push
in
test
mov
gs
addb
mov
xor
fcompl
aad
mov
mov
outsl
popa
sub
jnp
cmpsl
sub
pop
in
addb
push
mov
lcall
cltd
mov
rcll
sti
mov
jbe
movsb
adcl
pop
int
loop,pn
jo
out
pop
pop
inc
pop
xchg
jg
add
lcall
or
adc
mov
cmpsl
ret
rorb
and
loop
ffree
leave
call
lret
test
mov
in
addr16
fimull
pop
mov
outsb
mov
aas
ret
push
mov
push
sbb
fsubl
cmpsb
or
into
clc
cmpsb
pushf
pop
sbb
sbb
lea
ljmp
scas
cwtl
mov
pop
aas
stos
dec
mov
addr16
mov
jle
add
lcall
pop
cmp
jnp
and
or
lock
arpl
mov
orl
psadbw
addr16
addl
test
jno
scas
sbb
or
cli
sbb
dec
pop
mov
fucompp
cli
mov
or
adc
push
and
or
roll
cmp
push
pop
fsts
cmp
scas
roll
mov
aad
int
jno
ret
insb
gs
mov
cmp
daa
das
pusha
pop
aas
leave
fistps
pop
call
and
add
mov
aaa
ja
adc
sarl
and
stos
bndstx
scas
js
mov
popa
lcall
rclb
push
sbb
leave
mov
fwait
cmp
jge
fdivs
lods
sbb
or
in
pop
movsb
adc
lcall
xchg
mov
sub
lock
daa
in
outsb
dec
xor
fidivrl
loop
out
xchg
push
je
pop
sbb
enter
mov
pop
and
and
push
out
mov
int3
lock
mov
mov
repz
cmp
in
push
push
or
and
fidivrs
lock
dec
add
ret
decl
ds
ss
fisttpl
xchg
pusha
mov
pause
shr
pop
push
lods
fidivs
les
aaa
inc
or
or
cltd
sub
pop
cmp
in
xorb
xchg
lds
jb
jg
pop
inc
jge
push
fnstsw
dec
sbb
ret
out
pusha
push
mov
xchg
jb
pusha
mov
std
or
jl
mov
addb
int
pop
adc
ljmp
xor
test
jns
out
mov
rorl
sub
dec
sub
out
pop
js
daa
fldl
dec
add
fadd
push
xor
dec
rolb
std
test
dec
cmp
int
sti
out
gs
out
stos
pop
fidivrs
inc
ret
pusha
mov
out
jne
inc
fwait
and
inc
mov
and
sahf
push
out
inc
cmp
lahf
pop
sub
hlt
mov
push
pop
dec
xchg
call
sbb
inc
das
cmp
pop
and
bound
aad
adc
jno
popf
pop
pusha
bound
and
jl
sub
and
mov
mov
cmpl
sti
pop
imul
jnp
inc
mov
xor
sub
out
test
mov
mov
sub
scas
xor
add
jns
lods
pusha
or
push
cmp
imul
or
inc
fcomps
dec
aas
shl
cmp
rolb
ja
add
outsb
sub
loop
sbb
mov
pop
add
fwait
and
mov
fs
insb
inc
shlb
cs
inc
jge
xor
push
loop
insb
jmp
jl
das
enter
mov
inc
add
pop
outsb
push
test
ljmp
mov
repz
test
pop
jecxz
insb
loopne
xchg
push
in
jns
sbb
ficomps
cltd
mov
push
and
push
mul
jp
xchg
adc
inc
fistpl
scas
movsl
in
pop
xor
das
mov
xchg
or
or
xchg
data16
mull
xlat
add
push
repz
sbb
clc
inc
cmpsb
lds
repz
sarl
cmp
and
loopne
movsl
insl
psrlq
insb
dec
pop
lods
jge
sbb
dec
push
scas
and
test
dec
push
and
pop
lock
cmc
std
inc
xor
dec
cli
in
adc
cmpsl
mov
and
cmpsb
jl
jle
mov
clc
add
mov
xlat
lock
loopne
enter
pop
inc
mov
stos
fdivrl
rol
in
jecxz
push
adc
fldl
cwtl
outsb
sbb
jnp
xor
xor
xchg
lret
call
inc
mov
mov
adc
lcall
xchg
ret
mov
xchg
into
jmp
mov
sub
inc
test
into
rorb
or
je
rcrb
or
jnp
inc
test
xchg
mov
push
mov
fidivl
mov
pop
push
dec
and
xchg
test
xchg
lret
pusha
ljmp
pusha
sbb
scas
xorb
lods
cmp
pop
icebp
jmp
push
in
popf
cmpsl
fs
movsb
out
rcrb
pop
and
pop
repz
xor
sahf
pop
cmp
or
stos
out
sub
jns
adcl
sbb
mov
mov
and
cmc
xor
ds
adc
cmpsb
push
roll
ja
ljmp
pop
or
rorl
dec
aam
xchg
sbb
inc
jne
test
dec
mov
xor
sub
xor
pop
adc
dec
movsb
fdivl
scas
bound
in
pop
and
mov
outsl
fdiv
jae
sbb
stos
mov
inc
loopne
loope
sahf
in
ja
inc
add
push
mov
mov
sbb
add
mov
call
mov
dec
mov
and
xchg
aad
decl
pushf
xchg
and
setp
rcll
xor
dec
mov
testb
cmp
aam
cmpsl
dec
xchg
xchg
pop
add
pop
test
jp
es
ja
cs
push
pop
lret
sub
adc
mov
mov
pushf
push
inc
xchg
sbb
mov
cwtl
ljmp
pop
sub
insb
stos
arpl
xor
ret
fs
adc
pop
cli
jae
fnstcw
lock
fidivs
cwtl
xchg
imul
mov
mov
xorb
sub
les
movsl
mov
mov
sbb
fcmovnbe
stos
sub
loop
jae
enter
xchg
call
or
lret
mov
sti
cmp
xor
inc
popaw
xchg
adc
xchg
cmp
enter
daa
or
xchg
mov
and
dec
push
imul
lret
movsl
cli
insl
pop
push
pop
jge
mov
fcompl
jecxz
cmp
int3
mov
rclb
loop
inc
cmp
inc
inc
cmp
add
lret
lret
mov
shrb
je
inc
repnz
out
dec
adc
sub
repnz
mov
mov
popf
cld
lcall
loop
pushl
imul
lret
fidivl
cli
push
dec
cmp
push
mov
xchg
mov
aaa
das
dec
push
inc
add
in
mov
icebp
int
xor
stos
mov
push
cmp
ret
cwtl
dec
pop
adc
dec
sub
aad
jmp
mov
pop
jnp
mov
adc
or
sbb
push
dec
lret
sub
xchg
pop
cltd
push
jge
xchg
inc
sub
add
or
cmp
stos
insl
mov
xchg
std
xchg
in
clc
mov
and
mov
andl
or
xchg
add
cmp
mov
and
xchg
rcl
push
jp
add
add
test
pushf
mov
call
cld
lcall
push
imulb
shrl
mov
sub
cmpsb
adc
js
xor
out
mov
xchg
xor
sbb
dec
inc
in
push
pop
jbe
or
and
mov
add
mov
push
xchg
decb
and
lahf
add
dec
cwtl
sbb
pop
add
adc
test
pop
movsb
dec
loopne
into
cmp
xor
cmp
add
sbb
into
ret
fistl
mov
xlat
pop
xor
loopne
add
cmc
pop
pop
add
aam
insl
cmp
sbb
xchg
lods
or
sbb
dec
cmp
mov
xchg
mov
mov
scas
in
xchg
mov
xchg
enter
in
add
pop
ret
push
pop
lods
popf
adc
sbb
mov
cmpsb
jle
call
out
and
and
insl
xorb
out
leave
call
push
mov
and
mov
clc
pop
loopne
ds
xchg
jnp
gs
dec
sbb
lcall
push
movl
aam
cmpsb
mov
insb
cmp
ja
jb
xchg
fstps
lock
outsb
xor
mov
test
lret
pusha
inc
cmp
sbb
enter
mov
sub
sub
xor
and
in
in
insb
xor
test
pop
pusha
loopne
pop
lods
sub
pop
outsl
fcomp
aas
sbb
inc
sti
pop
adc
fsubrs
jbe
movsl
enter
or
jl
push
mov
hlt
pop
fwait
call
gs
popa
test
inc
inc
addr16
jne
lret
aad
into
pop
repnz
dec
pop
ret
shr
pushf
dec
xchg
cmpsl
out
stc
not
cwtl
dec
rol
and
jg
jbe
jbe
pop
into
add
cmp
cmc
outsl
mov
lods
xchg
scas
mov
pop
jne
lods
jns
push
stos
jle
pop
mov
pop
add
jp
sub
stos
ret
rcr
outsl
and
sti
cwtl
xchg
mov
cs
pop
sub
sbb
cmpsl
and
stc
xorb
aaa
push
push
fldcw
fidivs
jo
aaa
movsl
es
mov
mov
xchg
and
fnstcw
ja
push
aam
test
stos
xchg
and
fistpl
adc
pop
cmp
xchg
and
test
int
push
mov
cmp
sahf
popf
dec
inc
xlat
push
add
int3
xlat
xchg
out
push
pop
dec
jle
fdivs
inc
jnp
jp
movsb
pop
or
xlat
out
cltd
push
jnp
xor
and
add
adc
cs
mov
cltd
aam
inc
sbb
in
sbb
inc
mov
out
push
out
into
test
gs
hlt
jecxz
outsb
mov
cli
mov
je
into
dec
sbb
imul
aam
pop
push
cmpsb
xlat
jle
mov
sahf
rcl
les
add
jl
sbb
insl
mov
in
pop
cmpsb
push
or
hlt
cmp
adc
mov
cwtl
and
adc
out
repz
sub
cmp
jne
sbb
push
outsl
jge
cmp
bound
insl
shll
hlt
jb
stos
test
inc
mov
xchg
adc
ja
sbb
lahf
adc
or
cmp
fsubrl
jno
and
hlt
push
mov
pop
pop
adc
test
int
sbb
cmpl
pop
push
arpl
inc
pop
xchg
and
push
addr16
in
push
xlat
xchg
aas
iret
ds
sbb
mov
dec
cli
mov
lea
push
fsubrl
pop
fsts
in
imul
add
xchg
insl
cmp
sub
pop
xlat
pop
and
mov
add
idiv
and
adc
dec
adc
mov
mov
sbb
mov
cli
out
test
adc
xlat
add
jge
and
mov
push
rcrb
sub
push
pop
faddp
jb
andl
adc
adc
mov
ror
sbb
movsb
outsl
cmp
or
pop
aaa
cmp
imul
dec
mov
insb
inc
or
mov
je
mov
bswap
hlt
jecxz
xchg
insb
lods
test
movsl
dec
and
cmpsl
dec
mov
or
adc
inc
test
enter
mov
aas
divl
push
mov
sbb
mov
lea
std
mov
mov
push
pop
int3
or
sub
fcomps
inc
push
push
dec
les
adc
aas
push
enterw
in
scas
cmpsl
ret
pop
jbe
test
lods
dec
sub
sbb
pop
inc
sbb
add
pop
movb
movsl
sub
aam
mov
pop
mov
mov
aad
pusha
jle
outsl
sbb
fstpl
movsl
mov
xor
fs
add
aad
or
ds
cmp
mov
bound
cmp
xor
add
inc
out
mov
aam
iret
xchg
and
sub
or
mov
mov
fildl
mov
hlt
xchg
push
mov
push
jbe
xor
or
cmp
in
js
out
adc
int3
fs
in
popa
pop
mov
movsl
mov
pop
and
cmp
inc
xchg
iret
bound
xchg
adc
push
sahf
mov
fimuls
mov
sbb
pop
bound
outsb
dec
mov
ret
jecxz
ret
xor
sbb
add
mov
push
outsl
pop
mov
stos
adc
mov
mov
rcl
cs
xor
and
dec
repnz
push
mov
and
mov
push
xor
cmp
icebp
mov
or
cs
int
andl
out
scas
inc
out
cltd
mov
lods
push
jp
mov
adc
cmpsl
addr16
pop
decl
pop
scas
shr
fiadds
mov
fs
repnz
loopne
jle,pt
lahf
sbb
fistps
inc
jmp
mov
mov
je
divb
jmp
outsl
xchg
int
sbb
mov
ds
sbb
sbb
movsl
fsubr
jge
cmp
popw
mov
icebp
clc
sbb
adc
imul
or
fdivl
inc
mov
dec
mov
inc
movsl
stos
stos
adc
jp
in
mov
dec
shl
add
and
in
out
cmc
aas
sahf
les
imul
sbb
mov
out
sti
aad
ret
mov
push
mov
pop
call
popf
push
cwtl
sbb
subl
mov
enter
mov
jb
xchg
incb
sub
out
or
adc
stos
aas
inc
cltd
mov
add
dec
pushf
ja
rorb
gs
xor
in
sbb
xchg
inc
lds
dec
cmp
icebp
mov
stos
aam
jp
adc
or
into
lods
push
in
outsb
xor
test
and
jnp
icebp
mov
shlb
xlat
repz
jns
daa
call
sub
add
add
flds
dec
or
movsl
add
insl
scas
ret
xchg
fisubrl
test
scas
cmp
fwait
mov
fwait
jns
xorb
imul
mov
lret
pop
jbe
outsl
pop
orb
lcall
fbstp
push
or
fnstsw
leave
addr16
dec
push
pop
mov
sub
fdivr
into
mov
lds
outsb
les
or
enter
xor
push
mov
icebp
fidivs
sbb
mov
pusha
cmpsb
sub
sub
mov
enter
xlat
ljmp
xchg
and
xor
pop
out
fs
mov
inc
shrl
nop
mov
push
jnp
mov
sbb
fbstp
ds
adc
pop
cmc
out
xor
or
push
adcl
sbb
and
je
sbb
mov
push
adc
cmp
pop
jns
cmp
fsts
mov
mov
sbb
dec
xor
xchg
xchg
dec
cli
lods
test
loop
or
cmpb
popa
add
les
lock
pop
mov
push
popf
dec
lahf
cmp
cmp
cmp
mov
sbb
lahf
hlt
fisttpll
push
mov
data16
push
xchg
push
mull
lock
xor
xchg
jnp
test
dec
adc
jmp
aas
or
les
and
ja
testl
sub
cmpsb
cmp
lock
mov
in
mov
sub
or
sbb
and
subb
call
sub
out
les
or
pusha
pop
popa
sub
stos
add
repz
push
je
nop
hlt
daa
or
sub
ljmp
jnp
cwtl
in
rcr
orb
icebp
in
cmp
pushf
inc
push
adc
ljmp
jnp
loope
xchg
jle
loop
and
dec
push
push
sti
xlat
mov
cmp
dec
pop
sub
fbld
xor
push
jnp
jo
ret
pop
ljmp
dec
repnz
pop
sub
inc
mov
imul
hlt
sahf
scas
ds
hlt
xor
jge
push
jp
lock
aad
push
jmp
js
clc
sub
jg
sbb
repz
inc
aam
cltd
push
dec
int3
sub
cs
lahf
push
popa
into
rcl
sbb
or
sub
push
sbb
push
mov
sti
insb
pop
inc
cwtl
pop
dec
fsubrl
insl
push
out
pop
movsb
or
pop
push
inc
mov
adc
std
cmp
pop
add
mov
adc
inc
xor
add
and
lds
jmp
xchg
add
sub
lcall
lds
xchg
in
icebp
mov
rorb
mov
xchg
xchg
inc
das
je
push
test
sbb
cmc
lods
fcom
mov
fidivs
in
mov
sub
pusha
out
sub
loopne
mov
push
xchg
cmp
daa
leave
xchg
scas
and
ret
outsb
mov
adc
lcall
pop
aad
xor
andl
push
lcall
and
xor
cmpsl
in
sahf
out
jo,pt
add
cli
jbe
push
js
jnp
dec
int3
repz
xchg
sbb
out
mov
xchg
adcl
repz
loope
scas
lock
inc
add
xchg
imul
cli
or
xchg
pop
xor
dec
xchg
mov
mov
jle
fstps
divl
push
jb
rcrl
test
jp
cli
test
ror
dec
xchg
lds
xor
adc
ja
aad
scas
mov
iret
inc
inc
cwtl
xchg
push
out
inc
push
jle
mov
push
mov
lods
fimull
push
inc
addr16
faddl
mov
jp
aaa
xchg
dec
fnstsw
xor
shlb
fadds
sbb
ffree
aas
pop
mov
fistl
mov
push
pushl
sbb
lret
mov
movb
mov
or
cli
push
jp
gs
mov
mov
mov
mov
add
cmpb
out
push
lods
in
loop
jbe
bound
pusha
mov
push
cmc
pop
in
sub
test
mov
roll
add
or
sti
mov
in
in
mov
and
and
iret
inc
in
xchg
test
push
orb
adc
enter
pop
jle
bound
xchg
mov
xchg
add
lret
mov
flds
inc
mov
pop
sub
jecxz
push
pop
mov
nop
mov
arpl
xor
out
mov
jbe
stos
xchg
mov
fadds
jne
jae
sub
push
inc
xchg
in
push
fldl2e
std
stos
jnp
sub
cmp
push
inc
mov
loopne
jg
inc
mov
inc
rcr
mov
fisttpl
sti
mov
lock
add
sbb
inc
not
and
out
xorb
js
ficoms
mov
adc
push
rcr
pusha
test
sub
xor
cltd
or
out
popa
insb
into
lret
sub
fiaddl
je
fidivl
arpl
mov
mov
hlt
adcb
insl
pop
cs
push
shrl
jge
outsb
sub
add
inc
sahf
cmp
adc
fmull
in
adc
ss
jmp
pop
sub
cmp
xor
out
scas
idivb
adc
and
test
sbb
out
sbb
enter
fnsave
jb
dec
or
lahf
sub
xchg
pushf
mov
add
xchg
jle
dec
test
je
xchg
and
loope
push
push
js
add
loop
call
lds
adc
imul
stc
dec
mov
jg
cmp
sarb
push
add
sbbb
arpl
lock
push
loopne
mov
dec
aam
mov
or
mov
sbb
dec
dec
and
pop
or
in
out
nop
cmp
dec
out
jg
stc
call
sbb
in
add
imull
out
and
inc
mov
movsb
sub
in
insl
mov
stos
sahf
jns
and
mov
mov
and
les
jnp
mov
cmc
fwait
imulb
lret
mull
insl
lret
inc
cmp
sub
mov
jnp
or
sahf
popa
orb
cmp
mov
loope
ja
or
sbb
loop
fcomip
mov
sbb
je
cmpsl
mov
icebp
fcomp
push
and
fsubr
mov
push
insl
and
cmp
orb
mov
cmpsb
jae
jmp
arpl
dec
lret
mov
lods
xor
popf
test
add
and
sub
addr16
test
and
xchg
imul
inc
sub
sbb
ret
roll
or
xor
push
subb
adc
nop
sub
xchg
dec
mov
es
pop
sbb
mov
js
pop
ret
or
clc
push
lea
and
pusha
call
xlat
push
cltd
pop
dec
sahf
cmpsb
clc
scas
lea
dec
sbb
mov
xchg
insb
jo
aam
loope
andb
mov
push
jge
jl
cmp
mov
clc
lds
shl
add
xchg
inc
pop
xchg
cmp
add
nop
sti
jge
nop
clc
out
add
ja
bound
fwait
loopne
loope
dec
fcoms
in
std
loope
and
testl
std
inc
sub
hlt
and
or
xchg
cmpsl
outsb
sub
jge
fucomp
test
leave
push
lcall
ret
inc
out
push
out
mov
cmp
or
lahf
scas
rcll
aas
shrb
sub
or
dec
jmp
lods
int
jo
add
adc
nop
into
call
inc
or
dec
mov
movsb
call
mov
repz
mov
adc
jo
mov
mov
pop
fisubrs
shrl
fsubrl
lock
test
mov
jg
mov
jno
jp
stos
inc
call
call
sbb
cmc
mov
sarl
addb
std
inc
test
mov
jmp
xchg
pop
pop
and
pop
cmpsl
and
scas
lea
test
movsl
push
daa
add
push
push
adc
jo
fdivs
imul
mov
push
cmp
mov
rolb
sbb
lods
pop
xor
lods
dec
xchg
rcrl
xchg
hlt
pop
sbb
push
popf
cmc
lods
xchg
pop
mov
ror
mov
int3
int3
je
xchg
out
cli
mov
cmp
mov
loope,pt
popf
sub
push
test
negb
mov
daa
iret
inc
or
adc
push
add
xchg
movsl
mov
jns
or
imul
shrb
movsl
scas
mov
dec
adc
sbb
or
jb
leave
cmpsb
stos
movsl
mov
and
les
jne
gs
pop
sbb
mov
fdivl
cmpl
jecxz
ss
sub
or
subb
test
xor
ja
jno
mov
dec
or
lods
ficomps
and
out
push
push
push
lret
jle
and
data16
das
add
add
dec
mov
sarb
jge
out
jge
pop
mov
pop
jge
xchg
cmp
push
sbb
pop
sub
aad
push
mov
push
dec
mov
sbb
or
and
shll
mull
push
adc
mov
fs
mov
outsl
iret
jle
push
adc
jbe
and
shlb
fimull
sahf
fdivrl
bound
mov
dec
pop
icebp
mov
xchg
and
push
inc
xor
dec
lret
add
mov
lods
aas
mov
jge
adc
leave
pop
mov
jns
jne
pusha
lret
cld
dec
adc
pop
cmp
xchg
test
push
cmp
test
fcomps
outsl
test
mov
imul
jnp
sbb
jo
and
loopne
ss
cmp
mov
test
out
sbbl
inc
pop
push
fsubrs
inc
inc
sub
aas
pop
fldenv
mov
xchg
test
in
pop
popa
mov
idivl
mov
dec
sbb
dec
out
inc
jg
adc
xor
clc
cmp
fwait
mov
mov
mov
enter
mov
add
add
xchg
or
sti
js
jl
xchg
adc
pop
push
inc
sti
test
shrl
inc
sub
jecxz
scas
ss
dec
fstps
bnd
sarl
push
dec
int
and
inc
sbb
mov
ja
jo
inc
lods
jg
je
jo
inc
mov
push
pushf
mov
jb
dec
mov
or
or
fimuls
rcll
cmpl
pop
dec
mov
dec
out
or
ret
inc
cltd
iret
xchg
in
mov
repnz
push
lret
insb
jns
cmp
idivl
or
repz
fsubrs
insb
movsb
jle
fcmovne
jge
movsl
sbb
xor
push
sub
and
cmp
mov
push
or
test
shll
xorl
xchg
adc
cwtl
pop
jne
adc
pushf
out
cmpsl
pop
mov
jo
and
adcb
xor
cmc
out
cmp
aam
and
je
fwait
xchg
push
xchg
pop
adc
and
cmp
out
or
adc
in
inc
push
je
sbb
jbe
ret
jno
cmp
mov
das
ret
sub
sbb
icebp
xor
test
pop
dec
arpl
ljmp
js
jno
int
inc
scas
mov
ret
push
int3
mov
aas
sbb
orb
and
rolb
addr16
xchg
fcmovu
arpl
in
cmpl
cmp
sbb
ds
pop
mov
lds
pop
push
hlt
inc
pop
cmp
pusha
lret
fs
lahf
and
mov
enter
sub
in
and
mov
rcll
jb
xor
repz
push
xchg
mov
sub
je
push
aaa
xorb
cmpsl
pusha
sub
repz
jbe
lahf
pusha
into
lea
repnz
loope
cmp
adc
hlt
or
cmpsl
add
lret
push
and
sbb
dec
ficoms
or
adc
fildl
jmp
jne
outsb
cmp
dec
in
xcrypt-ecb
cmpsl
into
leave
mov
sbb
xor
in
stos
iret
inc
xchg
movsb
movsl
pop
fnstcw
das
jecxz
or
or
pop
xchg
pushf
fmuls
out
lds
cmp
lret
sti
dec
pop
xchg
mov
dec
stos
and
pop
and
mov
cmp
xor
sub
inc
xor
addr16
dec
jae
addl
fisubl
jg
jne
sbb
out
mov
push
dec
mov
adc
and
dec
icebp
mov
out
jecxz
in
cs
fisttpl
and
xchg
jns
insb
pop
enter
xor
adc
dec
ljmp
fstpl
mov
pop
popf
jbe
clc
pop
sbb
or
fwait
sub
pusha
adc
mov
fwait
adc
mov
mov
pop
loope
add
inc
fists
cmp
rcrl
xchg
lock
mov
inc
ss
loop
cmpsb
cmp
mov
cmpsb
loope
ljmp
les
jl
xor
xchg
fmuls
pop
in
ficompl
in
mov
leave
or
mov
sahf
cmp
pop
add
inc
mov
in
in
push
and
mov
inc
push
inc
loop
mov
inc
pop
ds
xchg
inc
or
sbb
and
sarl
and
push
rclb
ret
sub
xor
mov
jge
out
jno
int3
dec
xchg
sar
cli
hlt
nop
into
test
repz
fnstsw
jecxz
fsub
dec
pop
add
push
ss
shll
inc
inc
mov
in
sbb
xchg
pop
sub
or
cmp
jle
test
fdivrp
cmpsl
or
and
xor
pushf
cld
jmp
cli
aas
jo
iret
pop
sbb
addr16
mov
incb
movsb
mov
mov
push
mov
xchg
lods
stos
lret
mov
mov
rcr
mov
add
and
std
addr16
movsl
sub
pop
ja
into
mov
movsl
testb
and
adc
lcall
or
xor
test
dec
scas
push
shlb
dec
rclb
add
and
fldcw
repz
inc
add
lods
dec
mov
mov
cwtl
sbb
add
jle
pop
test
loopne
xchg
ljmp
mov
dec
call
mov
andb
xchg
repz
out
push
shll
push
cmp
add
jno
addr16
push
xor
jmp
sbbb
xor
xchg
mov
test
mov
lcall
cmp
xchg
jb
cli
and
loopne
pop
jmp
in
cmp
data16
cld
ja
and
daa
xor
stos
addb
movsb
push
jbe
jb
mov
icebp
test
mov
lret
popf
ds
lret
fs
mov
sub
in
imull
sbb
and
int
aaa
adc
ss
inc
push
and
pushf
je
jbe
xchg
fwait
gs
pop
ljmp
add
test
mov
mov
push
js
push
cwtl
pusha
mov
nop
in
ss
cmc
mov
xlat
mov
nop
pop
lcall
dec
push
lea
push
dec
mov
mov
sub
sub
fidivrs
jecxz
mov
push
dec
push
fmull
xor
mov
or
cmp
inc
and
sbb
mov
imul
sub
sub
jge
cmp
pop
lcall
xchg
xchg
cmpl
stos
xorb
insb
inc
or
push
cmp
in
fsubrl
mov
stos
xchg
aad
insl
adc
dec
loop
outsl
cmc
cmp
insb
mov
push
jnp
mov
sbb
sbb
push
popa
cmp
mov
push
pushl
aam
cld
push
scas
mov
orl
adc
cwtl
rclb
mov
jnp
call
lods
pop
push
xor
xchg
dec
push
mov
cmpsl
xor
jnp
gs
fldenv
mov
aas
push
pop
jns
stos
test
pop
leave
jmp
insb
xchg
out
stc
inc
xor
pop
shrl
mov
mov
ss
jl
call
cmpsb
cmp
fildll
push
test
je
das
sahf
jo
loopne
and
adc
dec
inc
aas
pop
cltd
movsl
mov
push
ljmp
add
mov
push
mov
inc
push
repz
das
inc
push
mov
inc
push
in
xor
shr
xor
movsl
xchg
stos
and
in
xchg
rorl
dec
lock
test
lock
out
push
ret
lea
mov
shll
adc
lret
sub
mov
xchg
aam
stos
and
cmp
sub
imulb
daa
mov
sarl
or
aam
lcall
inc
cld
or
push
push
sub
dec
mov
mov
mov
push
bound
jno
xchg
out
cli
mov
les
sti
pusha
dec
jle
dec
nop
or
shr
push
push
in
xchg
push
xor
iret
mov
pop
rol
sbb
xchg
push
test
rolb
push
inc
ja
gs
and
sar
loopne
xchg
cmp
lahf
mov
inc
mov
mov
call
outsl
inc
pusha
jo
push
mov
aam
xchg
cs
test
into
int3
dec
inc
lods
loop
push
fistpl
jae
sti
mov
mov
add
outsl
cmpsb
mov
xlat
jge
inc
xor
arpl
jae
fdiv
insl
mov
sbb
and
mov
mov
bnd
into
xlat
inc
push
mov
rorl
int
sbb
sbb
jb
xor
inc
ret
test
fsubs
shll
inc
xlat
pop
and
push
cmp
push
pushf
and
mov
iret
cmp
mov
iret
jno
ret
aam
cmp
repnz
ss
or
inc
and
jnp
inc
test
leave
rep
cmp
mov
repz
mov
xlat
sbb
pop
push
and
imul
inc
sub
push
test
lods
xor
mov
or
dec
mov
inc
lret
jbe
movl
push
xchg
adc
cli
mov
push
repz
cmpsb
sbbb
and
into
pop
rolb
jae
or
sbb
in
stos
inc
out
push
punpcklbw
or
jp
sti
daa
jp
dec
adc
xor
sbb
jns
jbe
inc
popa
jge
int3
push
fists
adc
adc
jmp
pusha
rcll
sub
jae
xchg
loop
lea
mov
fldl
jbe
cld
push
jg
sub
and
xor
addr16
xor
mov
dec
pop
call
jno
in
and
js
add
insb
popa
cwtl
xor
clc
cmp
pop
mov
in
dec
andb
fistps
xor
test
addr16
out
test
add
push
push
cld
and
xor
shll
test
ficomps
pop
cmc
in
xlat
test
push
test
shrb
lods
sbb
push
jp
sbb
mov
int
push
ret
lret
mov
mov
mov
mov
imul
xor
sbb
add
xchg
cmpsb
stos
jle
cmp
jmp
cmc
push
pop
sbb
in
cs
pop
daa
je
xor
call
shll
or
jl
fnstsw
or
mov
int
pushf
call
aaa
call
pop
adc
push
daa
fsts
pusha
xor
push
dec
cmp
add
fmulp
mov
jle
enter
fnstsw
mov
out
jb
pop
mov
cwtl
jmp
das
lcall
sti
rcrb
test
jae
mov
push
fldt
push
fnstcw
xchg
xchg
dec
push
mov
enter
sub
shll
mov
imul
xchg
dec
ret
in
mov
pop
sarl
lret
in
add
mov
sub
inc
mov
sbb
arpl
xchg
sub
sbb
scas
inc
jnp
imul
xchg
cmpsl
les
jnp
dec
movb
hlt
andb
cltd
jl
data16
mov
stc
adcl
adc
pop
int3
iret
mov
mov
push
test
add
jg
pop
cwtl
movb
jecxz
xchg
xor
xlat
shll
pop
pop
pop
pop
dec
fdivs
fstl
mov
into
inc
hlt
fnstenv
dec
inc
nop
xchg
jl
cmp
ret
aas
and
and
cmp
sub
xor
test
add
dec
cmc
jne
push
popa
in
add
addr16
sub
cmc
add
bound
mov
pminub
mov
jge
mov
dec
ds
xor
xchg
mov
pop
aas
dec
lods
ljmp
push
lods
cmpsb
int3
lock
pop
or
pop
mov
lret
sarb
sub
ljmp
jmp
push
mov
scas
mov
fistps
mov
aam
int
sbb
dec
xchg
test
sbbb
bound
repnz
mov
fs
clc
clc
add
sub
ds
filds
stc
test
inc
es
fs
jbe
das
jmp
mov
or
divb
mov
push
add
shrl
cs
push
jle
std
aaa
jle
mov
inc
nop
aas
and
push
inc
aaa
aam
xchg
push
enter
mov
mov
push
addb
mov
repz
sub
xchg
mov
pop
xchg
fidivrs
cmpsb
mov
enter
lret
adc
push
outsl
or
pop
mov
aad
pop
cmp
mov
daa
bound
pop
ja
push
inc
pop
ret
gs
mov
mov
dec
cmp
jmp
les
push
mov
sbb
js
sbb
ljmp
lret
lea
iret
das
les
cmpsb
lock
leave
xchg
std
or
jae
mov
lea
in
or
enter
push
adc
inc
int3
add
in
enter
std
sahf
or
jp
add
pop
std
inc
xchg
rol
or
setl
enter
or
add
out
popl
lods
popa
push
je
andb
xchg
int
jnp
dec
and
hlt
dec
ss
cmp
hlt
or
enter
push
sarl
and
mov
cmp
inc
loopne
adc
daa
test
fstps
or
jns
aas
daa
and
pop
jge
repnz
shlb
data16
lret
jo
or
loop
jnp
push
rclb
out
jnp
xor
cmp
pop
push
mov
mov
jecxz
sti
pop
xchg
or
ljmp
bound
push
call
xchg
dec
jg
push
cmp
out
mov
inc
jnp
mov
and
adc
fiadds
pop
xlat
imul
pop
mov
lock
cmpsb
add
cmc
jl
push
adc
jbe
leave
mov
bound
icebp
jae
xchg
movsl
cmp
add
sub
mov
loop
outsb
mov
inc
lret
jge
dec
inc
call
lods
push
adc
xor
xchg
lret
cmpsb
mov
mov
hlt
xor
xor
push
fsts
cmpsb
push
fstsw
fstl
add
popf
lods
xor
lahf
push
sbb
jge
les
push
gs
cwtl
dec
adc
test
ljmp
rorl
repz
gs
cli
push
add
cwtl
inc
adc
mov
mov
cmp
mov
mov
loopne
jne
sub
jbe
imul
sbb
xchg
add
outsl
das
jbe
cwtl
jg
fistpl
sbb
mov
std
sub
rcrb
inc
repnz
addr16
cld
outsb
xchg
daa
xchg
push
adcb
xchg
popa
sti
hlt
push
pop
push
loop
ljmp
shl
mov
jp
sub
xchg
test
clc
xorl
mov
xor
cwtl
clc
dec
xchg
test
mov
mov
adcl
pop
mov
xor
and
inc
cmp
stc
sub
mov
arpl
pop
andb
movsl
lock
push
pop
fs
lret
mov
pop
push
sub
sub
jnp
and
in
shll
ja
and
inc
mov
je
aad
xor
xchg
add
sub
cmp
sub
cli
mov
jnp
jl
push
stos
aaa
mov
in
add
mov
iret
lret
mov
outsl
pushf
pop
vmaxps
sbb
aad
sub
unpcklps
mov
pusha
mov
test
fcmovu
xor
imul
icebp
mov
sbb
bound
xor
iret
mov
pop
mov
pop
mov
mov
lods
shlb
clc
and
inc
xor
add
nop
bound
mov
lret
enter
in
jmp
xorl
or
sbb
mov
mov
pop
in
pop
inc
outsb
xor
addl
in
test
pop
bound
mov
call
add
sbb
enter
fsubp
and
pushf
jl
mov
cmp
pushf
fwait
out
icebp
lea
push
pop
mov
sub
xlat
int3
sub
ds
push
lea
push
pop
and
insb
xchg
loop
loopne
sbb
nop
popa
jae
inc
adc
or
pop
imull
xchg
push
push
and
and
dec
clc
das
or
push
xor
pop
fisubl
aas
cld
pop
mov
rcll
cmp
xor
xor
ljmp
lcall
cmp
inc
or
mov
push
insb
mov
push
cmpsl
mov
adcl
push
cwtl
in
xor
mov
fstl
xchg
adc
mov
jge
and
in
lret
cmp
xchg
xor
cli
pop
inc
xorl
int
test
dec
cld
mov
xlat
ficompl
mov
or
inc
cmp
mov
fdivrs
std
lea
inc
pop
add
xlat
mov
mov
inc
icebp
mov
add
cmp
outsb
mov
fucomi
cmp
mov
mov
adc
outsb
test
add
xor
dec
mov
ljmp
jnp
outsb
fisubl
out
out
xor
imul
inc
mov
mov
cmpsb
mov
mov
cwtl
lret
repz
jl
out
popa
cmp
mov
lock
rol
xor
adc
cld
fildl
mov
popl
loope
into
fmuls
fists
adc
jge
pop
negb
jmp
int3
andb
fisttpl
pop
push
sbb
xor
loope
dec
mov
xchg
pop
cmp
push
shll
adc
aad
and
jle
adc
out
sub
mov
loope
push
or
sbb
xchg
add
mov
pop
movsl
and
sub
lret
cmp
inc
outsb
loope
mov
in
pushf
stc
xor
jge
mov
inc
jp
pop
cmp
out
pop
in
negb
or
fucomip
cmp
out
hlt
and
es
pop
push
inc
adc
pop
lods
pop
pushf
int3
pop
mov
xor
adc
ret
fistl
jecxz
addr16
pop
inc
adc
daa
scas
cld
js
push
cmp
adc
pop
cs
xchg
popf
xchg
lock
jg
add
mov
adc
popa
cmp
icebp
fdivrp
mov
insb
movlps
push
xor
iret
out
mov
int3
std
push
test
jne
push
xchg
fwait
push
pop
dec
sarb
mov
sbb
cmp
adc
movsb
lods
arpl
or
popf
mov
cmp
adc
out
fldcw
xchg
xorl
and
mov
cmp
mov
push
add
jne
jmp
cmp
daa
int
fisubl
mov
xchg
mov
sti
xchg
int
mov
fdivrs
loop
mov
mov
inc
cmp
pop
push
jns
cltd
ss
jecxz
call
lea
loopne
cmpsb
in
sbb
test
jnp
lea
in
aam
loop
ret
inc
fiadds
pushf
scas
adc
mov
or
sub
or
jbe
xor
out
into
sub
push
rcrb
push
negl
xchg
add
hlt
sbb
xor
stos
xlat
fisubs
in
cmpl
push
and
fldenv
cltd
add
test
out
negl
outsl
push
test
pop
test
movsb
stos
sub
jns
xor
icebp
lods
iret
fldt
outsb
xchg
dec
sub
inc
add
pop
pop
shll
sub
fcmovb
xor
popf
push
mov
jmp
subb
push
out
sti
stos
mov
push
bnd
je
sub
in
repnz
dec
inc
lea
lock
mov
adc
mov
pusha
in
push
mov
and
push
leave
cld
mov
add
movsb
dec
fsubrl
pop
lock
js
pop
aad
add
sbb
inc
inc
popf
cmovg
lea
pop
shl
addl
lods
push
xchg
popf
mov
adcb
lcall
sub
fistps
cmp
test
lret
lods
dec
pop
clc
mov
movsl
and
push
mov
arpl
mov
xchg
sbb
push
dec
mov
shll
ret
mov
mov
adc
sub
cmp
xchg
out
mov
cmp
and
aam
push
mov
pop
mov
and
add
sbb
lea
popa
inc
fucomi
addr16
mov
data16
mov
push
push
int3
testb
sub
insb
int3
int3
push
jg
jns
xchg
arpl
adc
mov
les
hlt
sbb
bound
ret
mov
rorl
jmp
aas
add
insl
sti
jmp
iret
push
mov
add
mov
or
sbb
push
adc
fnstenv
xlat
mull
scas
scas
fbld
jb
fiadds
xchg
fsubrp
mov
sub
mov
mov
mov
pop
iret
frstor
cmc
cwtl
out
mov
and
call
push
xlat
xor
and
dec
out
dec
lock
xchg
and
xchg
in
mov
mov
lea
sbb
xchg
roll
lcall
and
dec
iret
lds
jg
shrb
popf
sahf
popa
inc
fldt
cwtl
dec
ds
mov
cmp
movsl
add
jge
mov
jno
dec
lahf
lods
or
cmp
mov
add
adc
dec
add
out
popf
insl
jne
mov
jae
sub
jb
or
pop
and
rcrb
stc
adc
push
outsb
push
dec
cwtl
ret
push
mov
iret
and
cmp
cli
mov
adc
loope
adc
sbb
out
jmp
je
mov
pop
or
rcrl
xor
dec
xchg
fimull
mov
bound
cmp
jecxz
push
sub
inc
nop
push
cmp
test
js
adc
mov
jnp
gs
dec
xor
sub
or
dec
xchg
arpl
and
or
jbe
sbb
add
xor
pop
rcll
lods
out
inc
jl
jns
jns
and
dec
movsb
sahf
jmp
cmpl
adc
aam
push
pop
sub
daa
ss
add
sbb
cmpsl
in
fstpt
testb
mov
popa
xchg
dec
mov
cmp
mov
sub
aaa
jecxz
test
inc
scas
mov
fs
popf
mov
jp
jg
out
push
ljmp
lret
xlat
fstpl
mov
or
push
inc
jl
fbld
out
mov
cmpsl
jle
out
aaa
and
sub
test
insb
xchg
dec
negl
pop
popa
fstl
negl
test
and
mov
mov
ljmp
sub
daa
xlat
mov
push
aam
xor
dec
daa
and
mov
das
f2xm1
mov
test
cmp
mov
arpl
mov
les
fisttpll
xor
xor
into
or
outsb
adc
pop
enter
test
sub
sti
fidivl
int3
inc
inc
arpl
ret
aas
ret
pop
jle
push
xor
shrb
inc
fisttpl
aad
sarb
jp
mov
ds
repnz
inc
xchg
lret
jp
mov
hlt
push
ror
adc
adc
xchg
pop
jmp
ljmp
mov
mov
fsts
fcomps
test
imul
sbb
inc
ret
push
hlt
sub
push
sbb
mov
jl
push
sar
scas
pop
xor
and
or
add
cld
add
jge
sub
mov
jl
jp
pop
adc
mov
mov
cmp
push
mov
aam
aas
mov
dec
imul
lods
push
faddl
lods
mov
mov
cmpsb
das
push
or
test
pop
fdivr
negb
and
cs
loop
inc
or
movsb
xor
add
pop
test
fmul
mov
cmp
sbb
push
and
mov
push
shlb
mov
test
cli
mov
cli
loopne
test
mov
fcmovb
rolb
push
cmp
jmp
adc
xor
int3
lahf
lret
jge
sbb
cmp
inc
mov
and
push
sahf
xchg
add
in
in
loopne
push
push
pop
das
rorl
mov
fildll
cmp
loop
jb
test
lods
imul
fcomps
push
fidivrl
adc
xchg
xorb
adc
inc
fcomip
shlb
adc
leave
adcb
mov
mov
ret
sbb
sbb
test
xchg
cmp
mov
mov
fcomip
add
sbb
das
add
push
inc
mov
scas
dec
shlb
frstor
jno
das
pop
or
adc
in
mov
mov
mov
rclb
jae
mov
push
xor
sahf
rol
xor
aam
push
data16
mov
loopne
aad
in
push
jno
pop
mov
std
xor
fisubrl
jmp
daa
push
popa
nop
nop
sub
lods
clc
addb
or
scas
jb
rol
add
lret
push
mov
jnp
icebp
call
or
mov
nop
xchg
int
fdivs
nop
xor
daa
sbb
sub
add
leave
xchg
jl
xchg
rorl
pop
lahf
sub
rcrl
popa
aam
mov
add
cmc
adc
sub
xchg
out
and
dec
xchg
addr16
ljmp
pushf
scas
inc
push
fs
loopne
aam
sbb
cld
out
fwait
lret
mov
hlt
mov
push
lock
cwtl
nop
dec
addr16
mov
aaa
xchg
arpl
push
cmp
mulb
mov
int3
lock
mov
scas
mov
scas
mov
dec
add
inc
lea
mov
mov
jl
push
fidivrl
stos
dec
out
pop
movsl
sbb
push
push
iret
lea
aad
out
xor
fadd
cmp
enter
loopne
sbb
adc
pop
ds
mov
cmp
clc
jmp
adc
lret
std
insb
icebp
pop
hlt
xchg
lods
jnp
lcall
andl
into
jp
sti
inc
and
add
or
mov
aam
and
inc
stos
mov
xchg
inc
push
pushf
xchg
js
mov
out
push
cs
push
xlat
sub
mov
xorb
stc
and
cmp
add
pop
testb
sub
mov
xor
mov
pop
dec
sbb
testl
imul
bound
dec
push
dec
mov
imul
lock
sbb
mov
sub
sarb
cmc
mov
rorl
and
adc
sahf
cld
push
pop
fs
mov
adc
shll
xchg
jl
imul
xlat
or
adc
adc
fs
js
mov
sahf
aaa
repz
arpl
push
push
repz
les
lcall
mov
pop
cmp
aad
jo
mov
std
mov
mov
adc
sti
sub
movb
xor
imul
mov
lcall
mov
cmpsb
dec
and
mov
sbbl
sbb
cld
shl
mov
jmp
fwait
or
mull
mov
js
mov
inc
and
ret
xchg
in
push
mov
and
cmc
push
fsts
dec
fisubrs
pushf
pop
dec
rcrb
adc
sub
repnz
cltd
add
cmpsb
inc
mov
pop
aam
movsl
nop
outsb
dec
jmp
es
stos
mov
mov
gs
mov
inc
imul
pop
loope
jecxz
loop
addr16
daa
lahf
sbb
jecxz
mov
imull
aam
mov
lock
inc
cs
shrb
insb
jmp
add
xchg
mov
cmp
stos
jne
in
sub
inc
sub
mov
aad
inc
sbb
out
and
or
mov
jno
jns
xchg
jae
mov
push
cs
xor
add
popf
mov
test
fwait
imul
das
inc
fistps
inc
js
pop
and
lret
lods
pop
insl
mov
inc
mov
rorl
sbb
mov
outsl
jae
adc
pop
jle
leave
mulb
dec
lcall
pop
mov
mov
enter
test
lcall
cli
add
ljmp
push
dec
lds
jo
push
in
jmp
in
les
insl
xor
loop
xor
imul
lods
jns
and
pop
push
cmp
data16
jno
jae
nop
ror
loopne
movntq
out
data16
mov
add
sti
mov
sbb
push
out
fldt
adc
rorl
hlt
jae
dec
and
dec
xor
fs
xchg
mov
pop
insl
faddl
mov
or
movsl
xor
push
loope
xchg
jl
cmp
lahf
cmp
sub
fdivrs
sbb
clc
mov
lret
lods
sbb
les
fs
mov
mov
xchg
les
xor
dec
jb
pop
jle
push
inc
mov
cmp
fs
int
clc
push
in
mov
aas
sbb
jb
add
mov
pop
mov
aas
idivl
rcrb
add
mov
mov
and
mov
notl
or
sbb
roll
xchg
idivb
divl
cmpsl
and
mov
lret
incl
add
xor
scas
loopne
cmp
and
pop
jl
jb
das
das
xchg
pop
dec
rorl
xchg
scas
or
sbb
adc
je
inc
cmp
or
mov
fdivrs
iret
mov
mov
stc
push
push
add
outsl
inc
pushf
pop
fwait
and
jbe
bound
cltd
jb
xchg
jl
iret
pop
out
mov
cmpb
and
mov
and
lret
sti
jo
sub
cmp
stos
stos
sbb
mov
ror
xor
jb
xor
sub
adc
cmp
xlat
test
jae
inc
cmp
pop
ror
jo
repz
jge
stos
jb
aas
cli
imul
xchg
inc
sub
xor
cmp
xchg
jb
out
add
outsl
mov
dec
mov
rorb
cli
fistpll
jecxz
lock
pop
cmp
imulb
push
bound
adc
xchg
adc
mov
push
push
insb
jg
mov
xchg
adc
mov
or
repz
mov
fimull
fistps
out
inc
out
test
out
or
dec
sarl
pop
into
orl
sti
dec
or
mov
push
in
cmp
cmp
mov
mov
push
sub
imul
cmp
add
xor
xor
inc
jbe
cs
fsubr
popf
push
jecxz
loope
add
jle
xor
imul
adc
mov
xor
lods
xchg
daa
imul
mov
int3
arpl
ret
in
stos
xor
fimuls
push
or
jnp
ret
mov
and
stos
fsubrs
leave
imul
sarl
addr16
popa
addl
outsl
in
cmp
inc
cmp
loopne
insl
add
sbb
leave
pop
mov
mov
in
sub
jmp
cmp
sti
mov
not
fwait
scas
or
push
push
fs
pop
jns
adc
mov
xchg
jne
jl
xchg
js
push
and
pop
aad
stos
aam
pop
mov
dec
adc
sbb
je
jbe
push
scas
out
cmp
sub
aaa
stc
push
mov
shl
addr16
int3
scas
scas
and
fcmovnu
test
xchg
and
rcrl
jbe
pusha
xor
ljmp
icebp
ljmp
or
inc
jecxz
xchg
adc
cmpsb
push
scas
jge
or
mov
out
jbe
mov
and
ja
rol
or
or
rcll
loop
insb
mov
push
les
adc
cmp
xor
jecxz
mov
fidivrs
jb
sub
cmp
inc
cmp
mov
repnz
or
or
shrl
jmp
xchg
xor
notl
dec
stc
inc
sub
jno
pop
mov
out
mov
incl
cli
addr16
mov
jl
and
out
addl
or
lea
ds
cmpsl
clc
push
mov
cmpl
adc
fbld
in
inc
or
unpcklps
pop
fstpt
mov
adc
cmp
pop
clc
aaa
popf
add
xchg
shrb
xor
push
pop
fldt
movsl
pop
xor
std
dec
cmp
push
loope
test
and
cmp
in
icebp
sbb
and
and
jae
jle
lods
cmpsl
and
in
or
stos
in
fidivl
movsb
fwait
jl
pop
mov
pop
adc
and
nop
andl
mov
xchg
add
mov
dec
or
mov
dec
out
stc
cltd
inc
adc
repnz
mov
shll
rcrb
mov
loope
aaa
jecxz
adc
test
cmp
mov
xor
cmp
jo
in
ret
push
inc
cld
in
jb
or
sarb
xchg
sbb
andl
sbb
inc
gs
leave
xchg
xor
ss
sbb
inc
add
lods
testl
xchg
outsb
cwtl
stos
popf
jne
cld
and
movsl
js
inc
pop
sub
repz
pop
out
test
or
inc
dec
xlat
adc
adc
mov
mov
and
or
and
mov
push
or
jo
add
pop
outsl
or
sub
nop
jmp
mov
cli
aam
insl
sub
loop
push
inc
cmpsl
ficompl
mov
outsl
jbe
push
inc
jnp
sub
push
jb
addl
fldt
inc
cmpl
mov
cmpsl
fisubs
scas
mov
dec
test
jl
ljmp
loop
push
in
ja
out
sbb
pushf
std
inc
repnz
sbb
pop
std
in
ret
mov
test
orl
fisubrs
stc
and
cmp
adc
cmp
pop
daa
out
and
push
lods
mov
jl
and
aaa
mov
lods
pop
in
addr16
adcl
and
insl
lds
push
ficoml
push
mov
sbb
sub
lods
pushf
sub
sbb
lea
mov
dec
data16
mov
lret
adc
lock
push
cmpsb
cltd
add
cmp
ret
outsb
test
popf
je
lods
xchg
test
jecxz
cmp
lret
in
pusha
sub
or
rolb
jne
jns
repnz
pop
ljmp
mov
jle
movsl
sbb
mov
push
bound
jp
insw
into
jmp
out
int
cmpsl
fwait
movsl
or
xor
ss
in
or
mov
sbb
pop
sub
inc
sbb
outsb
add
mov
out
cwtl
add
rclb
jne
push
pop
xchg
mov
ljmp
lds
push
or
hlt
jae
mov
in
fwait
mov
pushf
inc
mov
and
ja
xchg
idivl
mov
ret
fsubl
and
jb
insl
mov
les
test
or
addr16
ret
out
aas
add
das
jle
insl
icebp
cmpsb
pop
adcb
pop
adc
push
sub
inc
push
nop
mov
dec
add
mov
fld
push
shll
lds
xchg
mov
in
jb
fnsave
xchg
push
jne
pop
lock
ljmp
push
cld
aas
out
jae
daa
lahf
xor
xchg
xor
adc
test
lea
add
mov
push
inc
cmova
mov
lds
cli
mov
jmp
gs
xor
pop
js
loop
pushl
jl
shlb
imulb
push
pop
stos
stos
enter
lock
sbb
pop
fdivrs
add
jb
rcrb
mov
or
add
loope
push
mov
loope
inc
pop
dec
fsts
sti
inc
ss
mov
cs
enter
dec
scas
xor
jae
insl
daa
insl
pop
adc
sbb
cmpl
add
adc
insb
out
push
cmp
jns
push
dec
and
into
sub
pop
jo
fildll
jns
jl
cld
xchg
xchg
sbb
jnp
scas
xor
dec
ja
inc
add
sbb
push
pop
inc
or
inc
outsb
mov
orl
or
pop
xlat
decb
sahf
movsl
lods
negl
dec
jb
or
xchg
repz
fwait
outsl
pusha
cmpsb
dec
ja
shl
enter
in
loopne
xchg
icebp
cwtl
inc
sbb
stos
sbb
js
sbb
mov
lock
outsl
call
in
lret
cmp
lret
clc
pop
int
fwait
cmp
cli
fs
mov
loope
jmp
dec
sub
fwait
mov
outsl
push
xchg
sbbb
xor
push
test
inc
ret
xchg
pushf
ss
cmc
inc
inc
int3
sub
ret
sub
adc
shrb
icebp
inc
mov
xchg
sbb
fucomip
cmp
jp
pop
stc
adc
ds
adc
add
dec
jg
insl
ljmp
pop
and
popf
jo
daa
ret
sbb
or
sahf
decl
xor
sbb
inc
cmp
popf
fdivrp
dec
icebp
mov
pop
adc
cs
paddusb
and
sbb
mov
lret
mov
xchg
in
mov
jmp
aam
mov
dec
mov
pop
fistpl
popf
or
or
lods
dec
fcmovu
scas
mov
mov
iret
adc
movsb
xchg
push
or
inc
xor
sub
sub
mov
mov
ret
es
xchg
pusha
dec
fcoml
stos
xor
xlat
je
inc
sbb
inc
or
fisttps
movsl
lds
repnz
in
call
pop
adc
sub
clc
inc
push
gs
out
jnp
cld
pop
mov
outsb
push
or
mov
addr16
jge
fs
push
mov
and
orl
clc
shlb
jno
pop
push
shrl
push
lock
shrl
dec
pop
pushf
cmpsl
call
pop
push
adc
test
subb
lcall
jle
cmp
mov
jae
stos
xchg
popl
sbb
inc
inc
imul
js
inc
jle
inc
xchg
mov
mov
test
sbb
inc
fisubrs
test
lret
push
dec
jg
inc
adc
adc
jb
mov
push
scas
je
adc
mov
sbb
ja
rclb
das
lods
fisubrs
ds
pop
lock
test
sbb
xchg
jmp
xor
xchg
mov
jbe
jl
cmp
and
push
js
nopl
lods
bswap
sbb
jno
push
sahf
xchg
movsl
xchg
mov
mov
adc
mov
cmovge
sarb
int
mov
aad
cmc
out
into
fcmovnb
int
push
jmp
dec
pop
push
mov
add
rcrb
push
xor
lret
or
sbbb
cld
mov
outsb
push
mov
lcall
cltd
cmpsb
test
push
or
out
pop
mov
pop
add
adc
negb
sub
insl
sbb
dec
push
dec
jle
push
mov
mov
adc
jmp
sub
test
sbb
xor
mov
xor
gs
out
loopne
fcoml
out
mov
fdivrs
lods
in
insb
sbb
xchg
cld
lcall
inc
pop
ds
push
stos
sbb
inc
push
mov
mov
and
aas
mov
push
mov
lock
loope
outsb
sbb
and
mulb
mov
mov
daa
push
ret
sub
aaa
xchg
adc
and
push
or
cmp
mov
mov
insb
lahf
mov
mov
jno
mov
jg
icebp
or
xor
adc
push
and
rcl
shll
pushf
dec
jp
fwait
mov
cltd
bound
jge
test
pop
mov
fisubrs
dec
je
sub
pop
stos
imul
adc
fwait
imulb
stc
in
in
inc
ss
jl
scas
mov
xchg
ficoml
xor
ljmp
jge
xchg
ss
inc
into
and
ljmp
negl
xchg
int3
movb
outsb
mov
mov
addr16
stos
xchg
sbb
sub
loopne
ret
dec
add
jb
js
cwtl
test
pop
mov
mov
mov
xor
jg
lods
enter
incl
jns
push
xlat
cmp
cmp
shl
push
lahf
cmp
mov
xor
push
mov
xor
movd
sub
aaa
xor
mov
stos
mov
and
jl
pop
add
jl
adc
dec
jb,pt
mov
adc
in
popa
mov
iret
xor
lea
sbb
fnstsw
cld
nop
mov
iret
scas
jne
lahf
arpl
sbb
sbb
dec
call
add
pop
push
cwtl
sbb
shlb
das
jg
push
sbb
inc
push
sub
ja
jge
xchg
insl
sub
mov
mov
sbb
inc
sbb
sub
sbb
repnz
sbb
hlt
pusha
fiadds
inc
xor
jno
xchg
into
lea
call
lea
lock
inc
sub
mov
imul
leave
inc
inc
cld
or
xor
cmovs
pop
add
loope
lret
movsb
push
lods
ret
sub
ja
lods
inc
jl
mov
mov
ds
pusha
mov
inc
lcall
xchg
mov
jle
iret
mov
inc
mov
imul
xchg
aaa
je
inc
xchg
fnstcw
fists
aam
mov
neg
jecxz
cmc
ret
mov
push
hlt
and
out
adc
mov
sub
hlt
in
loopne
lea
repz
mov
and
push
sub
fsubr
gs
xchg
movsl
fstl
and
inc
insb
popf
outsb
pop
mov
out
add
divl
xchg
ficoms
jle
cmp
dec
push
adc
outsb
out
xor
movsb
mov
idivl
mov
push
jge
adc
ret
jecxz
adc
pop
cmpb
mov
mov
xchg
lea
mov
pusha
pop
jbe
aad
subb
xor
insl
and
or
psubusw
and
mov
xorl
jns
ja
jae
stos
jl
mov
pop
mov
mov
nop
dec
add
adc
mov
add
in
loop
pop
cmp
jg
cmpl
hlt
jne
push
cmp
enter
inc
mov
push
int
fisttpl
dec
cmp
jbe
mov
movnti
push
dec
add
cmpsl
add
sbb
sbb
leave
push
xor
outsl
ret
mov
push
push
lahf
outsb
rolb
in
test
jmp
dec
mov
jge
hlt
cld
enter
pop
and
lock
addr16
push
daa
jb
or
and
adc
insl
xchg
insl
icebp
sarb
push
push
jmp
adc
outsb
cltd
or
ret
out
sub
and
mov
cmp
shrl
jo
scas
les
or
std
sbb
mov
pop
movsb
test
lods
aaa
daa
fmul
fnstenv
lock
xchg
jbe
fcoms
add
gs
sar
in
cmp
aaa
mov
and
cmp
jmp
pop
add
fisttps
mov
mov
dec
sub
sub
gs
xchg
adc
sahf
nop
int3
test
jne
xor
jne
dec
xchg
mov
pop
jae
test
pop
out
jbe
push
mov
or
test
cltd
in
push
mov
in
jmp
dec
and
pop
add
std
sub
mov
cltd
push
xor
xchg
mov
repnz
and
repnz
jnp
fists
je
adc
or
bound
enter
dec
and
cmp
mov
outsl
fnstcw
test
push
lahf
loope
cli
mov
push
inc
push
in
fcoml
mov
mov
mov
jp
pop
xchg
inc
mov
push
and
aad
hlt
xchg
into
cwtl
rorb
adc
xor
push
test
add
xchg
sbb
pop
popa
add
fucomi
xchg
mov
adc
pop
push
xor
lods
or
jmp
mov
jecxz
adc
dec
push
lods
mov
push
add
inc
cli
scas
jge
icebp
and
in
fs
push
shr
dec
push
inc
out
xchg
loope
lret
lret
push
add
fcomps
fsts
dec
cs
and
jbe
mov
mov
mov
in
pop
sarb
mov
add
les
mov
ss
dec
popa
xor
lret
mull
mov
pop
mov
pusha
adc
jae
mov
mov
dec
shll
roll
push
xchg
push
lds
shll
pop
gs
test
js
pop
insb
sbb
call
cmpb
sub
das
cmp
push
push
push
adc
dec
aam
je
shlb
xchg
pop
data16
add
sub
sub
pushf
add
sbb
out
sub
fdivs
test
cmp
xchg
icebp
nop
pop
enter
jnp
lret
das
mov
lds
and
fcomps
in
mov
jbe
js
xchg
dec
xchg
mov
daa
mov
imul
fsubs
or
jmp
pop
mov
dec
jne
jnp
pop
and
pop
jae
inc
xor
xchg
mov
sub
lcall
add
xor
xor
scas
aaa
mov
mov
jno
nop
cmp
and
pop
rorl
mov
cmpsb
shl
pop
sbb
xchg
inc
lahf
dec
stos
insl
jae
stc
lea
in
in
xchg
in
out
imul
xor
mov
or
sbb
and
lret
mov
xchg
jl
pop
pusha
sbb
or
imul
jmp
cs
popf
sub
jbe
adc
mov
and
sti
shr
lret
insb
xchg
pushl
bound
roll
fldenv
enter
out
sbb
xlat
pop
jmp
pushf
mov
mov
push
pop
jecxz
lret
sahf
stos
fcompl
pushf
mov
mov
push
into
jmp
xchg
adc
or
xor
jecxz
fstps
or
cwtl
clc
js
orb
cmc
ret
popa
shlb
xchg
jmp
out
cmp
pop
cmp
call
mov
shll
pop
js
addr16
pop
lret
fnstsw
inc
adc
inc
loope
push
dec
int3
pop
mov
mov
cmp
pop
fiadds
daa
lods
int3
jno
inc
jl
push
push
icebp
cs
pop
jbe
dec
dec
lret
insb
pop
fidivs
xor
clc
testl
cmp
or
sub
loope
gs
jmp
xchg
xor
cmp
clc
sub
int3
rorl
out
push
add
sahf
xchg
mov
sbb
xor
mov
jg
xchg
xchg
int3
bound
mov
add
sub
mov
in
imul
ret
or
add
adc
push
adc
sahf
add
sbb
ljmp
inc
inc
dec
push
jge
out
jae
sbb
adc
or
cmp
sahf
add
xor
lcall
test
repnz
fsubl
push
ds
sub
lahf
pushf
cmp
or
test
mov
clc
movsl
add
sbb
andb
nop
in
fisubl
add
sub
xchg
out
je
jne
repnz
aam
and
mov
incl
sub
inc
lret
inc
xchg
pop
dec
pop
xor
inc
and
dec
int
insb
push
ret
insl
jae
imul
in
fcmovnu
dec
xchg
and
nop
jbe
rorl
xchg
xor
lods
push
cmpsb
daa
int
sbb
in
adc
fsts
jge
cmp
mov
mov
jmp
insl
and
add
das
xchg
and
or
mov
jb
in
jbe
cmc
sti
fsts
push
pushf
lods
mov
pop
rclb
mov
fldenv
out
clc
jl
and
jl
insl
dec
je
pushf
enter
push
xchg
sub
mov
mov
cwtl
push
inc
push
hlt
orl
clc
cli
out
mov
cmp
mov
jno
bound
mov
pop
adc
jb
push
sbb
adc
cmp
aaa
cltd
es
orl
jbe
adc
cwtl
cmpsb
jecxz
stc
out
mov
loop
pop
out
sarb
and
cmp
ljmp
adc
cli
movsb
pop
mov
shr
sub
or
sub
les
dec
jo
mov
mov
sub
xor
fprem
addr16
lcall
pusha
dec
outsl
cmp
push
adc
sbb
popf
xor
add
out
sbb
push
iret
xor
ss
lret
lea
jge
jb
xor
mov
inc
lock
xchg
adc
jne
in
inc
cwtd
mov
mov
arpl
insl
stos
addb
cld
fmulp
repz
xor
stos
std
sub
push
movsl
sahf
sbb
add
xorb
mov
adc
fisubs
sub
aam
jno
and
inc
mov
fnstcw
mov
leave
mov
enter
or
out
js
lret
outsb
std
loope
cmp
add
mov
or
aam
jno
aam
inc
out
enter
popl
and
aam
or
je
cwtl
xchg
int3
adc
mov
call
jle
jmp
repnz
and
aad
mov
jbe
mov
daa
lods
jbe
sbb
or
mov
popa
stc
xchg
dec
jae
and
loope
and
xor
dec
mov
imul
add
cmp
and
pop
repz
xchg
sahf
mov
cmp
pop
out
repz
mov
pop
or
jns
ds
add
dec
mov
mov
sub
xchg
or
jg
mov
xor
test
dec
ret
push
inc
mov
push
and
inc
xchg
push
icebp
xchg
ja
xchg
lds
mov
popa
pop
bound
and
cmp
lds
mov
insb
js
sbb
sub
pop
std
movsb
into
pop
adc
xchg
mov
add
adc
cld
push
push
pop
and
adc
mov
stc
or
inc
mov
mov
js
std
imul
xorl
or
lahf
test
and
je
sub
pushf
add
cli
dec
mov
popa
push
rcrb
loope
dec
mov
loope
into
push
xor
das
and
mov
pop
imul
cmc
sbb
fistl
movsb
fsts
loop
test
orb
mov
push
pop
pop
or
mov
jp
ljmp
call
and
fistps
les
sbb
xchg
cli
movsb
xor
dec
lea
sub
jecxz
adc
dec
fsubs
inc
sbb
repnz
dec
jle
mov
xlat
arpl
movsl
pop
pop
push
dec
mov
es
popa
sbb
xor
loope
ljmp
jno
rcr
jmp
sub
jmp
bound
mov
mov
in
insl
stos
movsb
mov
into
cli
push
inc
cs
xchg
push
add
pop
enter
sarb
and
js
leave
sub
aaa
cwtl
sbb
dec
repz
jae
mov
inc
xchg
into
push
cmp
inc
mov
pushf
in
inc
aaa
fnstenv
xchg
add
pushf
lods
pop
out
xorps
cmpsw
dec
out
mov
sarl
cmp
ljmp
xchg
push
inc
dec
stos
lock
cmp
jmp
mov
push
gs
add
shl
jp
add
xchg
xchg
ret
arpl
lahf
dec
data16
lods
xorb
push
pop
push
mov
jle
mov
insl
stos
ja
cwtl
and
xchg
and
cmp
adc
mov
mov
xor
fnstcw
test
xlat
test
adc
lds
inc
or
subl
ret
add
rcrl
insb
and
or
ds
in
rolb
and
movsl
mulb
and
jl
pop
sbb
stos
mov
push
hlt
sub
ljmp
fcoms
or
loopne
outsl
imul
inc
add
in
pusha
out
sti
std
insl
xchg
adc
repz
sub
cmpsl
pop
popa
fs
jnp
dec
into
and
xchg
mov
jne
sbb
mov
cld
test
addr16
or
movsb
mov
data16
push
arpl
xor
rol
xchg
push
dec
or
and
inc
mov
inc
mov
stos
adc
add
cmp
cmp
jne
iret
leave
gs
xlat
mov
std
add
inc
jmp
pop
fistl
jle
stc
les
in
clc
jle
fcmovu
sub
nop
cmpsl
ds
cmp
sti
lods
movsl
loope
pop
aaa
cmp
xchg
dec
sub
les
and
cmpsb
mov
insb
das
roll
jmp
test
mov
test
and
hlt
add
jae
or
repnz
mov
cmp
subb
fwait
jnp
push
xchg
sbb
movsb
lods
sarl
mov
fdivs
jge
jae
enter
fisubs
fwait
cmc
cwtl
scas
and
pop
sahf
fsubrl
shrl
lods
or
dec
not
ds
aas
cmpsl
mov
andl
lods
lahf
xchg
shll
fucomp
lret
cwtl
mov
enter
addb
xor
xor
jno
inc
pop
xor
lock
sub
mov
or
xchg
mov
lds
mov
shl
push
mov
and
dec
inc
xor
js
daa
mov
push
cltd
imul
gs
pusha
aas
push
inc
int
cmpsb
std
ja
mov
xor
jle
sbb
xor
arpl
aas
dec
push
mov
cli
subb
pushf
lea
pushf
test
adc
int3
leave
jae
sub
mov
lahf
mov
je
cld
int
fldenv
mov
fsubrs
bound
clc
mov
xchg
pushf
jmp
call
scas
inc
sub
insl
mov
psubd
loop
lea
pop
fcmovbe
mov
sub
popa
xchg
das
mov
add
mov
add
std
into
les
pop
add
lret
pop
rcl
sub
fbld
mov
cmp
xor
lahf
stos
xchg
int
add
xchg
insb
stc
hlt
xor
inc
pusha
mov
add
stos
push
fsubr
cwtl
mov
mov
or
jg
cli
imul
stos
dec
lahf
in
dec
movsb
cmpsb
fbstp
and
js
je
jg
xor
add
jne
movsl
xor
icebp
push
std
xlat
out
pop
add
cmp
insb
cs
repnz
mov
sbb
pop
mov
pushf
xlat
sbb
rorl
popf
pop
pop
xor
movsl
inc
in
mov
inc
fidivs
xchg
mov
mov
or
rolb
lods
ds
mov
mov
fisubrl
xor
popf
mov
xor
sbb
sub
push
xchg
lret
sub
ret
sar
pop
xor
mov
push
std
sbb
lock
xor
jns
xchg
les
sub
inc
xor
jnp
frstor
cli
es
in
adc
inc
std
jge
iret
ljmp
dec
lods
mov
dec
aas
in
int3
cmpsl
repnz
sbb
or
mov
sbb
pop
arpl
in
mov
fcom
les
mov
or
and
mov
push
jl
mov
int
pop
testl
sub
xchg
jbe
add
push
scas
mov
loop
filds
jge
les
stos
xchg
jl
push
jns
repnz
mov
in
dec
stos
or
or
dec
jne
pop
mov
xchg
mov
xchg
push
fnstsw
aaa
shrb
sbb
jge
sahf
adc
jecxz
sarb
test
or
xchg
inc
xchg
jns
pusha
add
mov
mov
xor
aad
jmp
mov
popa
fwait
inc
fidivl
ret
inc
icebp
ljmp
ss
fs
test
sbb
or
sti
or
aas
clc
jno
adc
ficoms
imul
sub
push
in
sbbl
fsubrl
std
insl
push
xor
mov
outsl
inc
or
das
inc
out
mov
or
mov
lret
inc
test
mov
push
sahf
shlb
adc
in
add
dec
mov
fwait
ljmp
sbb
out
fwait
xor
movsl
mov
aam
jno
insl
cli
xchg
mov
ror
cld
inc
aad
sbb
lret
push
icebp
mov
cwtl
sub
rcr
inc
xor
xor
xor
aaa
mov
pop
add
pop
ret
out
mov
jb
push
gs
pop
inc
cmp
jecxz
mov
fistps
mov
cli
nop
cwtl
xchg
jns
les
cltd
xchg
out
scas
or
daa
in
movsl
mov
in
and
sahf
call
mov
cs
mov
mov
int
mov
loop
sahf
ljmp
cmp
xchg
int3
add
lcall
jp
in
cmp
in
jg
pop
xor
inc
hlt
or
cs
mov
rcrl
stos
lds
inc
and
inc
pushl
sub
addl
jbe
out
sbb
dec
jno
cli
insl
push
dec
leave
mov
cmp
jp
push
adc
in
data16
test
cmp
mov
jno
ljmp
call
inc
sub
cmp
fsubs
dec
or
push
xor
insb
enter
es
int
or
repz
stos
jmp
mov
xchg
or
push
loop
fisubl
jne
or
mov
data16
pop
iret
add
pop
mov
mov
xchg
add
andb
je
xor
xor
out
adc
ljmp
mov
lret
mov
jge
xchg
adc
mov
xlat
fsubl
cmp
mov
ljmp
daa
jns
push
cmp
dec
mov
arpl
lods
imul
sub
jbe
push
pop
inc
mov
cmp
or
mov
jp
fists
aaa
outsl
cmpsl
xchg
pavgb
popf
push
jae
cltd
dec
cmp
sub
push
test
mov
clc
fimuls
in
dec
push
das
aam
icebp
test
cmp
fnstenv
mov
test
jp
scas
mov
xorl
clc
lea
inc
adc
rclb
adc
fs
adc
fwait
cmp
aas
jmp
imul
imul
dec
jle
rcr
mov
jl
test
cs
orl
int
xchg
mov
jns
jns
movsl
cmp
imul
dec
stos
popf
mov
inc
mov
cwtl
pop
in
int3
jno
dec
dec
dec
cs
adc
xor
and
stc
push
jecxz
ret
and
jmp
mov
mov
lds
in
cmpsb
clc
cmpsl
push
add
testl
fwait
lea
mov
int
or
movl
or
push
sbb
sbb
xor
inc
int3
lret
into
sub
stos
popf
lods
pop
cs
xor
dec
adc
imul
jmp
cmp
jne
mov
aas
bound
jp
pop
int
push
repnz
repnz
icebp
lret
jg
add
and
sbb
aam
rorb
sbb
into
cmp
jle
inc
add
sbb
mov
mov
lods
out
outsl
inc
mov
inc
gs
divl
xchg
dec
push
les
xor
add
cmp
mov
in
mov
xor
xor
je
imul
es
data16
jmp
cmc
ljmp
dec
incl
cltd
mov
cli
call
xchg
lret
add
inc
sbb
stc
test
cmp
jbe
sbb
call
cmpsl
mov
mov
pop
fistps
sti
mov
pop
fistps
or
or
daa
daa
ljmp
add
sbb
mov
jo
push
cwtl
mov
add
scas
cltd
stos
fmul
or
iret
push
sbb
push
jmp
sahf
sbb
in
repz
sbb
push
gs
jnp
jae
jb
xchg
jb
je
in
pop
or
xchg
mov
mov
bound
jbe
xorb
mov
cmp
mov
cmp
out
ljmp
out
clc
push
push
cmp
xor
imul
fucom
mov
dec
xor
hlt
lds
out
lock
inc
fimuls
or
shlb
xor
bound
sbb
or
xor
pusha
inc
imull
lret
das
stos
cmp
cmp
les
inc
int
syscall
sahf
aas
pushf
loop
jbe
sub
pop
cmp
push
push
pop
adc
push
mov
dec
test
mov
ret
in
hlt
ds
lret
or
ds
inc
and
jo
mov
push
jno
jno
dec
pop
je
insl
mov
pop
jne
loopne
in
push
xchg
sub
arpl
jecxz
add
cmp
mov
dec
push
loope
rcrb
push
das
cmpsb
sub
cmpsb
lret
sahf
inc
rcl
pop
xchg
push
jnp
nop
pop
jmp
pop
test
push
mov
pop
xchg
sbb
in
cmpsl
fs
push
inc
mov
push
movsb
test
xchg
mov
inc
mov
clc
pop
sbb
push
sub
pop
xor
data16
and
mov
add
dec
jb
ret
jne
aam
mov
sub
push
cmp
gs
enter
fmul
sbb
icebp
mov
inc
dec
mov
ficoml
int3
sub
cld
jb
ja
mov
dec
mov
xor
ds
pop
dec
sub
ficoml
out
fs
pop
std
je
imul
pop
push
ss
sbb
mov
mov
in
adc
mov
ret
out
or
es
ds
std
jo
jecxz
push
add
outsb
adc
and
movsl
sub
test
fcompl
ret
std
pop
cmp
movb
xor
daa
lret
and
sbb
dec
and
rcll
sbb
das
push
cmpsl
subb
adc
inc
sub
loopne
fildll
cwtl
mov
pop
dec
mov
push
and
mov
xor
sbb
cld
add
mov
and
ss
jo
ljmp
popf
in
sbb
mov
adc
xlat
out
or
dec
je
inc
bnd
mov
mov
pop
cmp
fdivrs
mov
dec
into
jecxz
int
mov
adc
jno
inc
mov
loopne
call
enter
push
int
adc
mov
testl
fsubs
push
lods
movb
aas
add
cmp
scas
lock
fsubs
inc
sbb
xor
fistl
xchg
addr16
clc
xchg
xor
das
mov
cmp
testb
in
cmp
ljmp
dec
imul
bound
xor
fistl
outsl
iret
dec
push
out
sbb
out
jbe
pop
jb
mov
js
gs
mov
adc
repz
ss
imul
add
cmc
jmp
ds
push
jno
movsb
mov
pop
sbb
cli
mov
jmp
and
arpl
lcall
cmp
dec
fdivl
mov
jg
jno
xchg
cmp
test
xor
inc
jl
loope
mov
or
imul
fimuls
call
or
push
xchg
jns
xchg
and
push
je
adc
loope
sbb
and
push
rol
xor
les
push
add
lea
scas
pop
xlat
lcall
punpckhdq
shlb
inc
xor
imul
and
ljmp
popa
repnz
lods
push
sbb
mov
sbb
sbb
std
cwtl
subb
out
ljmp
arpl
stc
data16
push
push
cltd
sti
or
xor
or
mov
out
sub
pusha
scas
aas
ja
xchg
popa
jnp
pop
clc
and
loope
jns
adc
lea
test
adc
xor
pop
and
mov
and
dec
mov
out
lcall
pop
lock
lret
jo
into
adc
outsb
cmp
lock
inc
pushf
and
ja
mov
pusha
cmp
sahf
addr16
inc
xor
jge
push
jge
or
mov
mov
ret
push
sub
xor
cmp
faddl
mov
push
inc
or
daa
bound
pop
xorl
lock
push
cmp
data16
ret
jo
sbb
sub
pusha
or
xchg
dec
lods
shrb
mov
stc
fldt
hlt
dec
sub
aam
sub
dec
shrl
add
fbstp
es
std
cltd
sbb
das
pop
dec
lods
sti
mov
pushf
inc
or
imul
sbb
jno
call
int
outsl
repnz
cmp
addb
push
add
sub
add
lret
add
cli
ljmp
sbb
sbb
pop
inc
int
fisttpll
adc
adc
into
das
mul
ficoml
test
inc
push
call
mov
jmp
fdiv
mov
push
cmp
mov
movsb
loop
stos
inc
or
push
pop
sub
and
adc
mov
pop
outsb
in
ret
js
and
xor
pop
jne
xchg
push
leave
mov
sbb
in
fcomps
mov
or
repnz
or
push
arpl
or
enter
mov
sbb
rcl
mov
sub
es
adc
inc
xchg
in
aam
gs
jns
daa
xchg
or
arpl
movsb
xor
xchg
inc
or
pop
fnsave
loopne
or
jl
jb
insb
mov
mov
pop
inc
fsubrs
and
mov
aas
jg
inc
and
fisubrl
mov
xor
cmp
fsubrl
xlat
test
stos
dec
sub
or
lret
shrb
xor
hlt
xor
nop
pop
cmpsl
jg
adc
mov
dec
sti
cpuid
jecxz
ja
testl
push
add
ret
xchg
jp
movsl
pop
mov
add
in
out
and
loopne
jmp
aam
inc
push
dec
xchg
leave
adc
inc
or
jge
mov
xchg
sti
popf
movsb
cmp
mov
push
jmp
jecxz
int3
mov
imul
jle
outsb
lahf
ret
mov
and
xchg
sbb
jecxz
in
xchg
scas
push
or
mov
push
clc
sub
ljmp
int
aam
aam
cltd
dec
xchg
pop
call
mov
lcall
adc
cwtl
rorb
leave
aas
mov
test
dec
inc
rcll
ja
fmul
into
jo
mov
repz
push
nop
mov
mov
mov
into
in
adc
fwait
pushf
xchg
popf
mov
or
cmc
gs
add
int3
sar
jg
or
fcmovu
xorb
fwait
push
jb
jnp
out
adc
mov
sti
inc
lea
and
sbb
xor
cmp
fwait
repnz
sti
bound
mov
shrl
int3
ja
pusha
jo
adc
test
mov
loopne
jb
inc
stc
inc
cmp
rep
mov
adc
aas
out
adc
xor
jb
icebp
dec
cwtl
clc
loopne
jnp
mov
sbb
jb
pop
add
jecxz
inc
negl
movaps
bound
inc
js
xchg
dec
test
testb
mov
push
inc
popa
int3
nop
push
adc
ljmp
nop
in
lock
mov
pop
jle
rorb
and
jge
insb
cmp
insb
dec
pop
pop
mov
enter
clc
jle
lods
rcl
mov
lea
addl
jb
fldenv
dec
push
xchg
and
es
aaa
xor
xchg
aaa
lea
adc
sbb
stos
int
jle
rep
push
and
mov
lret
mov
incb
jno
pusha
cmpsb
aas
icebp
aad
ja
mov
inc
cli
lock
xchg
fs
fbld
mov
pop
cmp
movsb
cwtl
ficoms
es
sub
cs
mov
push
pop
mov
push
outsl
pop
js
loope
stc
inc
scas
jnp
push
push
nop
jb
lcall
mov
xor
xchg
out
leave
fnstcw
mov
pop
cli
lds
adc
cmp
jno
sub
stc
push
pop
pop
es
ja
jmp
fs
pusha
fs
mov
push
movsb
in
mov
pop
incl
sbb
sbb
jb
pushf
cmpb
fsub
add
das
int
xor
jl
mov
lret
std
mov
jb
and
sbb
data16
mov
ljmp
and
cmp
xchg
xor
mov
das
fidivrs
inc
pop
testl
and
scas
xor
and
pop
sbb
adc
jnp
inc
movsl
fildl
sbb
xor
and
call
jae
mov
ja
mov
push
and
mov
or
jno
push
pop
mov
loope
mov
xor
sahf
shr
rorb
xchg
out
push
cltd
mov
adc
mov
add
bound
jno
dec
aad
call
jecxz
movsb
mov
dec
cmp
xchg
frstor
fsubl
mov
jno
ret
pop
movsl
jecxz
dec
sar
mov
jns
fnstenv
orl
jp
pop
xchg
inc
stos
cmpsl
xchg
sub
fwait
xchg
test
inc
lahf
push
jb
cmpsl
fidivrl
cmp
push
daa
shrb
lret
dec
in
add
mov
mov
sbb
dec
repz
pop
aad
mov
repz
add
pusha
test
jle
inc
fldl
jl
je
adc
pop
jle
or
inc
scas
sbb
hlt
add
inc
sub
or
sub
add
dec
jo
das
call
pop
pop
sub
dec
cmp
stos
insb
int
imul
inc
cli
xor
in
out
iret
xchg
ds
mov
out
mov
or
repz
adc
cli
mov
in
xor
mov
movsb
f2xm1
sbb
or
in
iret
sbb
mov
enter
stos
xor
push
pop
int
test
mov
push
xchg
pop
cmpsb
and
sarb
push
inc
add
rcr
xor
fwait
aad
push
daa
dec
inc
jecxz
fnsave
and
mov
lock
push
lea
jbe
mov
push
mov
xor
or
cmp
xchg
pop
pop
incb
sbb
out
dec
mov
pop
and
ljmp
frstor
or
push
sbb
inc
call
insb
mov
mov
aaa
push
sbb
mov
inc
xchg
mov
pop
adc
xor
mov
popa
mov
pushf
ret
cmp
xor
ret
xor
sbb
in
fnsave
cwtl
popa
adc
outsb
das
mov
lret
and
cmp
push
mov
ficoms
sub
fldl
mov
sahf
jge
movsb
pushf
clc
in
jb
adc
out
add
jae
jle
and
incb
mov
sub
int3
add
mov
lds
lret
sbb
jg
dec
pop
adc
rcll
std
popf
xchg
and
stos
adc
xchg
mov
call
dec
test
sub
cs
dec
inc
add
fprem1
pop
lea
add
aaa
mov
ljmp
add
adcb
scas
js
lods
popa
or
insb
mov
fldenv
sub
loopne
stos
fisttpll
pop
push
and
stos
and
mov
jno
push
jnp
cmp
leave
xorb
bound
inc
incb
ljmp
cld
mov
popa
cmp
inc
pop
push
clc
call
stos
fistl
xchg
popa
iret
fnstcw
je
and
dec
pushf
aam
cmc
les
add
hlt
sub
jb
or
stos
jge
push
add
idivl
push
cmp
das
xchg
inc
out
mov
xchg
aaa
addr16
or
imul
bnd
lret
lds
inc
add
mov
xorb
push
xchg
leave
leave
or
mov
fadd
int
test
dec
xor
ss
es
and
arpl
and
adc
out
mov
sub
cmp
and
jp
dec
imul
es
cs
outsl
shrb
xchg
jb
cld
shll
repz
movsb
into
insl
inc
insb
scas
adc
into
mov
cmp
jo
inc
out
inc
aas
jae
or
inc
mov
and
mov
mov
mov
pop
jo
lods
mov
jo
dec
mov
mov
stos
adc
movsb
addr16
push
lahf
mov
mov
push
cli
ret
stos
hlt
shr
das
or
insl
xchg
lods
pop
jmp
adc
call
mov
mov
dec
decl
or
and
push
pop
das
rorl
cmp
std
ljmp
mov
xchg
or
stos
cmp
loope
jno
cltd
jecxz
add
push
cmp
sub
les
xchg
rclb
jbe
adc
aas
les
mov
xor
gs
shl
jle
xor
mov
movsl
rcrl
shlb
fisubrs
dec
fisubs
xchg
movsl
insb
add
pop
xchg
lock
sbb
sarb
xchg
and
rcrb
push
push
cmpsb
hlt
jmp
push
icebp
push
rcrl
pop
inc
mov
cmpsb
popa
lret
mov
leave
fldt
movsl
sbbb
lret
popa
stos
insl
and
filds
inc
jmp
pusha
fists
aas
add
repz
jb
fidivrl
in
negb
mov
xchg
add
push
inc
jp
jle
in
and
cwtl
jb
shrb
pop
xor
loopne
outsb
cs
fcmovbe
movsl
lret
inc
xchg
push
aad
push
shl
sti
ficoml
sub
mov
mov
jmp
mov
adc
mulb
xchg
adc
cmp
inc
test
cmp
les
rolb
imul
ja,pn
cmp
mov
adc
inc
rorl
aad
pop
sbb
xor
daa
ja
mov
pop
mov
mov
adc
fs
shll
jge
mov
andl
jne
mov
in
push
out
ljmp
adc
sbb
and
push
adc
add
loop
es
cltd
je
lds
lcall
imul
fcompl
or
add
enter
jno
data16
jbe
cmp
ret
mov
scas
cmp
jg
hlt
fnstcw
sbb
sbb
movsb
mov
inc
pop
int3
adc
push
or
fsubs
mov
xor
xchg
mov
rcll
cmp
pop
inc
cmp
aaa
sub
sahf
hlt
icebp
dec
adc
pop
imul
iret
sbb
stos
call
dec
jmp
pop
repz
cmpsb
and
movsb
in
lret
pusha
enter
or
xor
mov
xchg
cld
add
inc
pop
sahf
push
popa
lods
inc
mov
incl
mov
adc
mov
mov
jbe
push
loopne
push
jbe
push
dec
int
clc
mov
add
outsb
adc
cwtl
incl
iret
ret
in
mov
jnp
adc
insb
push
inc
jge
test
movsl
or
call
sbb
jg
mov
mov
loop
lds
jmp
push
jle
push
xorl
neg
std
out
incl
insl
pop
out
jne
push
adc
daa
cmc
adc
add
jno
sahf
pop
ret
ja
push
adc
mov
pop
js
xor
outsb
in
sub
jne
clc
mov
loopne
lahf
hlt
xchg
add
mov
out
pop
sub
lods
in
setnp
decl
cwtl
notl
insb
push
sbb
xor
cmp
dec
scas
fwait
aaa
gs
pop
jmp
sbb
mov
sub
mov
insl
sub
inc
push
sbb
gs
xchg
dec
das
and
jnp
sti
pop
jne
ja
les
scas
sub
movsl
mov
cmp
inc
lds
fmull
jbe
enter
xchg
xchg
mov
lret
pop
xor
dec
data16
repz
jnp
cmc
lahf
gs
adc
adc
jns
movsb
icebp
sbb
push
dec
or
xorb
test
adc
aas
lret
lahf
dec
push
mov
jmp
roll
arpl
cmpsb
sbb
popf
das
cwtl
xor
pop
xor
cli
outsl
imul
fsubp
pushf
bound
shrb
mov
cmpsl
in
xor
test
mov
je
cmp
stos
scas
lahf
pop
ja
repnz
xchg
xchg
jb
sbb
lea
or
outsl
adc
mov
push
pop
and
adc
scas
sbb
mov
lds
ret
pop
stc
ss
nop
lock
jg
mov
iret
addl
mov
rcl
inc
or
and
and
cli
xchg
sar
sbb
add
mov
inc
lods
pop
push
filds
pop
iret
adc
aaa
mov
mov
and
jmp
mov
push
imul
xlat
pop
in
mov
inc
jbe
fcmovu
or
fldcw
daa
std
adc
out
mov
add
jge
sub
je
xor
jp
sub
push
arpl
cli
push
cmp
icebp
inc
dec
dec
rep
mov
xor
xchg
dec
lock
test
mov
mov
pushf
inc
xor
and
push
adc
mov
cmpsl
arpl
jg
inc
add
mov
dec
jecxz
call
dec
mov
fidivs
stos
fidivrs
js
lahf
inc
or
cs
xor
sti
adc
mov
mov
out
pop
mov
out
scas
xchg
xchg
lods
cli
addr16
leave
loope
dec
call
push
mov
stos
daa
jne
sub
aam
into
ljmp
xchg
xor
mov
pop
jnp
les
or
sbb
push
and
iret
out
xchg
cltd
pop
mov
mov
pop
xor
cmp
xchg
ret
push
das
lods
arpl
xlat
out
push
mov
or
mov
lea
sub
pop
mov
cli
xor
push
sbb
mov
cli
out
mov
negl
sub
mov
jbe
push
jns
mov
ja
push
xchg
pop
stos
mov
mov
mov
xor
hlt
sbb
sbbb
xchg
add
dec
jbe
or
xchg
shl
out
js
aaa
lds
daa
pop
shrb
mov
mov
stc
sbb
xor
pop
cmpsl
or
popa
out
out
idivb
mov
pop
clc
mov
sbb
in
fwait
mov
xlat
int
mov
scas
or
cltd
bnd
mov
data16
mov
adc
cmp
add
mov
xchg
fdivp
in
add
mov
jbe
in
xchg
inc
pop
mov
cmp
fs
orb
jecxz
and
or
hlt
sub
les
wrmsr
test
enter
ja
je
mov
jae
retw
cmp
into
ja
or
sub
dec
mov
or
faddp
inc
testl
lods
add
je
lret
mov
mov
jnp
mov
jle,pn
jo
add
mov
push
mov
lods
sarl
mov
icebp
es
cltd
xor
mov
xchg
mov
inc
je
mov
fisttpl
push
popa
push
mov
movsb
xchg
dec
mov
fbstp
sbb
sub
cld
mov
mov
mov
pop
repz
add
push
pop
add
sub
adc
fstl
fdivrp
aas
cld
aam
jp
imul
jmp
repz
out
out
xchg
aad
addl
jg
in
test
in
or
loopne
sub
ficoms
in
mov
add
push
shrb
sbb
mov
jmp
pop
cmp
je
push
jbe
lea
scas
mov
scas
fistpl
push
nop
mul
lret
movsl
dec
negb
jecxz
repz
or
add
into
orl
sub
out
sub
popa
mov
je
and
sub
shr
push
cmc
shll
or
packssdw
insb
jecxz
ljmp
jne
pop
mov
push
and
das
in
add
ljmp
repz
sub
loope
pop
mov
add
xchg
fcomps
movsl
xor
sbb
into
inc
jecxz
jae
inc
sti
loop
xor
or
fcom
xor
and
nop
jp
shrl
jb
pop
pop
pop
idivb
or
cmpl
xor
dec
xlat
mov
lret
sbb
outsb
repnz
bound
lahf
jno
std
int
cltd
jb
or
test
std
aaa
lret
pushf
stos
sbb
push
xchg
shl
aaa
lcall
mov
jp
lret
sub
leave
dec
fidivrl
adc
loop
jle
out
sbb
add
push
leave
pop
cmp
loopne
in
lret
out
fldt
dec
pusha
ss
inc
push
push
lret
cli
ret
fs
xor
cltd
fsubrl
cmpsl
cmpb
ja
jb
roll
jge
popa
addl
js
cmc
cmp
mov
sti
pop
mov
mov
mov
and
adc
ljmp
mov
imul
cmp
mov
mov
lret
add
mov
jns
cltd
mov
jne
jle
mov
cmp
cmp
or
jo
inc
mov
std
cmpl
jb
pusha
mov
inc
mov
ss
movsb
int
lcall
les
mov
cmp
jl
xchg
shll
enter
sub
sub
push
push
pop
inc
repnz
pop
push
mov
dec
pop
push
pop
in
mov
int
xor
xlat
mov
movsl
stos
cli
loope
mov
xor
mov
in
cmp
dec
daa
stc
popf
mov
arpl
xor
clc
sahf
dec
jge
mov
jge
imull
js
test
xorb
jns
inc
leave
push
mov
mov
addl
imul
or
cmpl
es
ljmp
jo
mov
inc
int3
shll
mov
stos
outsb
shrb
orl
imul
jge
cmp
pushf
cmpsl
mov
out
loop
mov
add
int3
push
push
xor
cmpsl
ds
ds
push
mov
pop
adc
mov
xor
fists
stc
sbbl
push
push
jle
fldt
imul
cmpsb
dec
dec
movsl
push
fs
cmp
inc
addl
loop
mov
mov
fs
cmp
aad
jecxz
call
xchg
lods
mov
aas
rcll
and
mov
mov
sbbb
or
mov
jne
pop
push
adc
es
xor
pop
shll
cmp
sub
jp
out
repnz
hlt
cmp
mov
andl
ficomps
xchg
push
ret
ds
daa
outsb
ja
and
xchg
mov
cmp
daa
xchg
andl
jmp
jg
mov
popa
xor
test
mov
and
and
mov
lret
and
addl
xor
jno
inc
pop
dec
xor
cwtl
cmpb
mov
shrl
adc
xor
movl
pop
imul
std
ljmp
js
stos
sets
cmp
sbb
es
insl
dec
adc
dec
dec
test
dec
cmp
jae
sbb
cmc
pop
aas
in
in
stc
xchg
push
dec
ret
push
shll
add
call
cwtl
jbe
in
movsb
pavgb
or
sub
mov
leave
push
enter
xchg
enter
ret
sarl
cmp
mov
outsb
xor
jae
mov
push
sub
jbe
jne
mov
je
ret
mov
cld
xchg
scas
and
out
addr16
test
push
jg
out
xchg
dec
inc
mov
insb
js
xor
outsb
pop
jo
bound
pop
dec
loope
sub
arpl
icebp
shll
pop
pop
sub
dec
in
bound
sbb
xchg
sub
jmp
cld
push
mov
iret
xchg
push
decb
lret
fs
mov
or
out
jbe
cwtl
push
push
test
pop
sub
xchg
popa
inc
sub
adc
cmp
cwtl
outsb
xor
hlt
in
xor
popa
les
pop
mov
dec
dec
scas
cmpsl
out
cmpsb
aam
sahf
and
xor
push
les
adc
jp
jo
push
scas
mov
notb
loope
cmpsb
insl
push
testl
sub
adc
out
jge
les
cmp
stos
mov
or
pop
fsubs
repz
ds
xor
or
sbb
push
les
push
xchg
push
dec
dec
jno
and
scas
imul
sbb
adc
movsb
bound
test
fmuls
push
jbe
jne
std
pop
mov
data16
xor
xchg
inc
mov
lret
icebp
ds
sar
ljmp
insl
cltd
mov
or
xchg
shrb
outsl
sub
and
jecxz
ds
pop
cmp
push
movsb
xchg
push
lahf
jno
lret
dec
inc
cmpsb
divb
int3
cmp
hlt
dec
sahf
xor
mov
mov
repnz
js
mov
xchg
outsb
shl
lcall
fstp
push
sarl
cmp
fidivrs
or
add
imul
cmp
or
test
xchg
fs
imul
shrl
orb
jbe
dec
mov
mov
or
xorb
nop
dec
jp
xchg
shlb
loop
outsb
bound
mov
fadds
dec
xchg
outsl
mov
in
xor
in
jp
clc
mov
mov
fstl
ret
sub
xchg
out
jle
mov
inc
rorl
jb
imul
fwait
sub
fs
jecxz
fisubs
mov
test
sbb
dec
stc
and
pushl
and
pusha
call
in
nop
sbb
mov
inc
leave
adc
mov
mull
bt
mov
push
cltd
pop
scas
outsb
mov
cmc
aad
mov
jp
adc
xchg
and
and
sbb
icebp
daa
pushf
sub
cli
mov
or
cld
mov
inc
popa
push
mov
fsts
lods
cmp
sub
dec
mov
adc
cltd
in
ljmp
ljmp
into
movsl
imul
mov
push
outsb
lcall
cwtl
mov
sub
add
inc
jmp
add
outsl
xor
sarl
xchg
jge
fistl
fdivrs
movsb
cltd
inc
sub
adc
loope
inc
pop
add
mov
lock
sbb
push
and
repnz
in
in
or
xor
cltd
push
cld
adc
xchg
push
mov
mov
mov
mov
or
or
adcl
rolb
int3
jbe
push
shll
ljmp
outsb
inc
push
add
pop
cmp
pop
aaa
out
aam
or
icebp
and
push
mov
insb
inc
idivb
mov
into
mov
decl
in
cmp
loop
xchg
jbe
jno
rdpmc
popa
imul
incl
in
adc
mov
in
cmp
fistpll
dec
mov
gs
add
xchg
pop
mov
sub
sbb
sub
inc
test
xor
fdiv
xchg
test
jo
sbb
xchg
repnz
int3
sub
popa
js
mov
gs
sub
pushf
dec
lret
adc
adc
bound
push
jmp
aas
out
and
dec
add
or
sbb
push
pop
nop
das
mov
jo
hlt
and
repz
mov
add
repz
push
sub
lods
mov
lea
nop
push
jp
gs
push
xchg
lcall
cli
cld
inc
push
hlt
sbb
push
loop
dec
dec
in
mov
dec
sbb
cmp
fucom
inc
adc
je
test
jno
dec
cs
lods
mov
xchg
andl
inc
test
mov
scas
arpl
add
ret
inc
clc
pushf
or
mov
sbb
pop
scas
cli
sub
mov
mov
imul
testb
ds
push
mov
mov
xor
insl
cmp
push
notb
xchg
inc
mov
and
jecxz
das
sbb
sahf
or
jns
sbb
incb
push
and
and
sub
push
inc
xchg
int3
jb
cli
xor
out
outsl
cmpsl
test
pushf
insl
movsb
imul
cltd
cmp
sbb
jbe
scas
sbb
push
call
cmpsl
pusha
pop
sbb
dec
adc
lock
cmp
or
or
rcrb
add
add
inc
das
ljmp
or
cmc
mov
xchg
jns
lock
pop
call
mov
rol
sbb
pop
jl
or
stos
loope
sti
sbb
xchg
mov
push
push
xlat
jb
mov
adc
mov
pop
sbb
lods
or
mov
add
jns
fiaddl
jl
in
jne
mov
enter
pop
dec
xor
mov
out
movl
fs
push
fsubrl
inc
adc
xlat
sub
cmp
pop
jmp
fisubl
mov
movsb
cmp
xor
xchg
stos
dec
int
push
mov
fidivl
insl
fidivrs
xchg
jmp
loope
jae
inc
xor
xor
mov
movsl
aam
sbb
xchg
mov
enter
je
jno
adc
decl
insb
cli
daa
mov
scas
popf
jo
ret
jp
adc
cld
out
insb
and
mov
aad
dec
lods
mov
test
dec
dec
adc
xchg
fmull
xor
xor
bound
lahf
mov
call
icebp
or
fildll
pop
cwtl
arpl
mov
pop
es
int
push
and
or
add
stos
mov
sbb
xor
jae
aas
inc
shr
dec
push
adc
jmp
xchg
xchg
inc
test
subl
mov
xor
inc
fmull
negl
sbbb
mov
sub
xchg
arpl
xlat
sub
add
adc
shlb
sti
xor
xor
pusha
std
repz
xchg
and
jl
js
test
jb
popf
push
or
or
addr16
xor
jge
movsb
dec
push
enter
test
int3
mov
inc
inc
into
mov
jae
xchg
cmc
lds
xlat
cmp
mov
flds
cmp
das
cmp
xlat
push
iret
and
or
add
mov
jns
xlat
outsl
test
mov
sub
lds
inc
sub
mov
ljmp
mov
ja
dec
fsubp
test
jg
cmp
dec
scas
ljmp
sub
push
sbb
stos
repz
ret
xor
adc
rorl
push
jge
xchg
xor
in
call
jbe
jle
lods
mov
dec
clc
das
enter
push
std
inc
adc
into
dec
jno
mov
xchg
push
les
fs
jne
or
stos
mov
jge
jg
cmp
dec
int3
lock
dec
testl
pop
insl
repz
mov
clc
xchg
jg
scas
add
sbb
push
mov
fsubp
push
sbb
popa
pop
dec
xchg
enter
lret
xchg
push
xor
insl
das
jne
pop
xor
pop
xor
mov
enter
jge
push
pushf
in
cmpsl
clc
fsubrs
jo
arpl
loopne
fcmovu
adc
xor
outsl
scas
xor
stos
xor
in
and
shll
fadds
xchg
or
adc
fldt
sub
jae
cmpsl
pop
cmp
add
cmc
or
pusha
cmp
sbbb
cmpsl
loop
cmp
pop
jb
add
sub
test
xchg
lea
add
jns
cld
mov
in
cwtl
pop
and
or
outsl
insb
outsl
jge
mov
adc
xchg
inc
js
mov
std
arpl
pmuludq
insl
lock
popf
and
shlb
add
mov
loope
ret
mov
fwait
daa
nopl
das
scas
xor
cmpsb
addr16
dec
outsb
inc
ret
mov
dec
inc
dec
idiv
sbb
daa
push
fildl
and
imul
dec
xchg
mov
push
xchg
mov
adc
and
mov
les
lahf
fsts
jbe
mov
mov
inc
pop
pop
imul
dec
add
mov
aas
imul
pop
testl
cmp
mov
daa
lods
push
mov
rcrb
xchg
push
jbe
bound
aam
ds
mov
pop
sbb
jb
es
push
or
xor
cmp
dec
imull
lahf
mov
or
xor
sbb
jge
inc
jne
lahf
inc
push
popa
push
pop
xor
mov
inc
fcoml
sub
push
jo
push
add
xor
ljmp
in
xor
sbb
jbe
adc
stos
mov
jo
mov
cmp
cmpsb
and
fldt
adc
fstp
nop
mov
aas
xor
cmpsb
pop
mov
cmp
mov
adcb
sub
icebp
mov
cmpsb
jns
or
cltd
or
icebp
cmp
mov
mov
cltd
dec
leave
pop
stos
cmp
pop
mov
xchg
xchg
xor
fsts
pop
stos
sub
repnz
fsts
out
fwait
lret
mov
out
icebp
sbb
pop
lock
and
sbb
or
addr16
pop
adc
rolb
inc
pop
pop
inc
inc
xor
pop
or
ret
fldl
lahf
dec
sbb
xchg
or
jno
xor
pop
mov
jecxz
int3
std
dec
mov
pop
push
popf
dec
pop
loopne
pop
fistpl
sbb
das
enter
sub
fs
and
rcr
sub
mov
xchg
cmp
int
mov
pusha
xchg
orl
push
in
xor
adc
mov
xor
call
movsb
cwtl
cmp
es
enter
sub
or
loope
mov
push
loop
push
pop
pushl
stc
mov
mov
shlb
notl
leave
sub
into
aaa
mov
inc
je
adc
and
push
enter
mov
out
movl
arpl
fdivl
xor
xchg
cmp
ret
mov
fwait
ljmp
adc
cmp
and
inc
mov
scas
push
mov
push
iret
clc
jno
lret
xchg
jp
aad
cmpl
sarb
jnp
lret
cltd
arpl
loopne
mov
scas
repz
out
add
sbbl
cmp
shrb
and
pop
cmp
cmpsl
adc
jle
lds
xlat
andl
test
sbb
push
icebp
leave
out
mov
les
pop
gs
int
rorl
mov
sbb
mov
loope
jmp
movsb
aad
push
gs
jp
mov
stos
lods
sub
push
cltd
mov
cmp
hlt
inc
mov
test
dec
aam
fcomps
cmp
sub
das
std
mov
cmovle
adc
lods
and
adc
mov
pop
std
xor
or
mov
or
mov
lcall
xor
push
pusha
in
nop
shl
and
mov
add
jge
mov
xchg
into
adc
mov
ss
sbb
jg
mov
add
inc
mov
xor
xor
fiadds
icebp
pushf
fnstsw
je
call
iret
in
pop
xchg
fsqrt
mov
mov
jo
ja
js
ljmp
fwait
and
and
jbe
mov
pop
add
cs
loop
push
or
xor
hlt
sbb
and
inc
push
in
arpl
lahf
mov
add
adc
adc
imull
adc
fs
pusha
les
pop
loop
ss
shlb
or
rcrl
call
stos
pop
xchg
pop
lcall
sub
out
pop
or
data16
mov
mov
adc
sbb
iretw
push
pop
fwait
mov
adc
mov
xchg
test
ljmp
fnsave
and
sub
out
pop
xor
pop
cmp
add
outsl
xchg
iret
in
ret
fstpt
or
or
jl
shll
cli
add
mov
xchg
rolb
dec
in
pusha
ret
xchg
cmp
pop
and
lahf
mov
mov
jbe
and
movsl
xchg
mov
les
mov
jp
pop
in
into
data16
adc
add
cmp
xor
push
push
popf
sbb
fbld
push
mov
mov
mov
xchg
add
int
addb
loop
mov
mov
pop
enter
fwait
dec
sbb
outsb
das
xlat
shlb
fidivl
mov
jp
mov
or
not
mov
xlat
subb
mov
mov
push
cmp
adc
sahf
lcall
mov
push
add
and
dec
in
jbe
popf
iret
gs
dec
jns
xchg
push
lret
mov
jge
fwait
lcall
sub
decb
leave
cs
stos
stc
lock
xlat
push
outsb
or
call
cmpsb
ror
lcall
clc
cmp
dec
addr16
loope
inc
mov
rolb
pop
mov
xchg
jbe
sti
xchg
stos
cli
mov
ret
cli
mov
rclb
jbe
scas
mov
notb
les
in
jno
mov
leave
jnp
xor
xchg
fists
popa
aam
jge
dec
inc
dec
sti
loop
mov
sbb
jp
test
movsb
cmpsb
xchg
shll
jmp
cmp
add
ljmp
imul
aaa
jnp
or
jo
mov
loop
jl
rolb
pushf
and
aad
lods
push
outsl
jns
pop
mov
sbb
jbe
adc
ljmp
insb
les
push
ljmp
in
mov
shl
jge
lds
out
rolb
scas
lea
fimull
jno
das
cltd
xchg
popf
out
clc
mov
shlb
js
xchg
pop
adc
push
bound
pusha
add
pusha
jecxz
mov
xchg
notl
sahf
repnz
scas
xchg
lahf
movsb
lock
xlat
movsl
shl
scas
in
adc
movb
jl
cmp
test
push
mov
push
sbb
aas
mov
or
pop
inc
out
dec
ja
mov
int3
fisubs
daa
adc
and
ret
add
dec
pop
xchg
xor
xchg
loopne
outsl
mov
mov
and
in
and
lds
sbb
setge
fisttps
jmp
dec
jp
inc
gs
inc
sbb
orl
cmp
xchg
pop
jns
je
or
inc
xor
push
inc
mov
cmp
mov
loopne
out
mov
dec
or
call
xor
mov
popa
sub
mov
jmp
leave
test
ljmp
cltd
push
aam
in
fistpl
movl
movups
push
inc
mov
adcl
sti
cmc
or
push
decl
sbb
pop
mov
add
jmp
cmp
pop
dec
cmpsb
aad
dec
cmpb
sti
pop
cmp
mov
cli
outsl
fcompl
cmpsl
insb
out
inc
cmp
cmp
add
push
iret
mov
and
imul
adc
pop
pop
adc
pop
jo
ficomps
cmp
pop
ds
xchg
out
xchg
and
xchg
xchg
dec
repz
sarl
mov
aad
adcl
das
dec
lahf
ss
mov
imul
push
push
jbe
sub
ret
mov
mov
xchg
int3
in
stc
mov
out
lods
std
pushf
add
movsb
pop
push
popf
sbb
jmp
push
inc
fisttpll
fnstcw
mov
or
sub
jb
scas
out
mov
ja
xchg
cmc
and
mov
pop
mov
jae
push
mov
or
push
adc
jmp
insl
stos
in
sbb
push
arpl
out
fimull
inc
rclb
imul
push
sbb
jecxz
ss
cltd
push
dec
pushf
jl
ja
loopne
lods
sbb
add
popa
and
lock
pop
push
push
mov
ficoms
ljmp
fcoms
jae
mov
cmc
or
inc
daa
pushf
sbb
aam
addr16
xchg
mov
cmp
scas
test
xchg
and
adc
adc
stc
imul
enter
int
lods
pop
mov
inc
add
lds
sub
cmpl
sub
insl
adc
in
push
mov
lcall
or
cmc
add
movsl
push
arpl
pop
hlt
out
add
jb
shlb
nop
mov
inc
in
mulb
lret
pop
jae
decl
fdivr
cmp
dec
inc
pop
add
or
sub
lcall
add
enter
xchg
fucom
jl
xor
bound
inc
mov
add
sbb
daa
sbb
mov
test
xlat
add
push
xchg
jmp
lret
cld
jo
pop
leave
inc
or
xchg
popf
dec
nop
fnstsw
nop
pop
outsb
mov
mov
mov
or
jge
lret
jl
popa
or
les
mov
aas
adc
cmp
bound
js
inc
movsl
xchg
adc
adc
leave
pop
jl
stos
xchg
xorl
int
xor
dec
mov
xchg
adc
inc
out
inc
adc
lods
adc
hlt
mov
pusha
dec
mov
xchg
stc
ds
and
dec
icebp
stc
adc
lret
cltd
lea
out
xchg
inc
addl
mov
push
aad
out
mov
cmc
ds
pop
clc
dec
sub
out
adc
scas
sub
push
lret
mov
scas
fistl
xor
popf
filds
and
sbb
mov
cmp
sbb
mov
sub
test
cmc
test
ljmp
cmc
cmpb
frstor
mov
mov
pop
push
cwtl
jae
mov
mov
xor
xor
jl
pop
sub
adc
in
bound
pop
xor
inc
and
cmp
push
mov
mov
add
call
das
fldt
inc
cltd
ret
dec
imul
dec
push
lret
xchg
mov
push
test
jg
lret
cmp
cld
loope
or
test
scas
aad
test
push
stos
dec
loope
sub
xchg
mov
fs
je
push
mov
js
rol
daa
daa
add
xchg
imulb
fsts
lcall
scas
lds
pop
pushw
pop
cmc
or
punpckhwd
mov
mov
bound
iret
xor
ret
pop
aas
push
inc
mov
and
les
pop
cmp
sub
pop
jle
jl
jecxz
xchg
add
popf
dec
mov
xchg
push
pop
inc
ss
hlt
and
xor
ficoml
pusha
mov
push
cmp
adc
pop
daa
lcall
mov
dec
mov
pusha
mov
ja
adc
test
fisubl
call
and
lods
xor
mov
mov
cmp
lods
imul
shlb
imul
sbb
fistps
aas
sarl
std
enter
or
ret
mov
je
cmpsl
les
mov
repnz
jl
mov
sbb
jno
sub
xor
cs
in
sbb
in
xor
loop
jns
sbb
nop
push
cld
sub
pushf
lods
xor
push
loopne
pop
cmp
cmp
xor
mov
dec
dec
cli
btr
insb
fstl
enter
mov
sarb
loop
fcoms
rcrb
loop
sbb
dec
lahf
ret
sbb
jge
in
inc
push
mov
or
fwait
mov
push
pop
jo
dec
xchg
sub
out
mov
adc
das
dec
xor
arpl
lret
incl
and
push
test
call
int3
fimull
add
hlt
icebp
sub
mov
lret
jae
inc
fidivrl
add
leave
push
push
sbb
data16
lret
xchg
mov
pop
mov
icebp
fwait
fs
lcall
sbb
pop
in
mov
cs
loop
or
enter
pop
imul
add
es
mov
jg
ja
pop
imul
insb
xchg
movsb
cmc
addr16
clc
das
cmp
jecxz
negb
pop
sbb
sub
xor
daa
push
gs
push
les
lock
cmp
sbb
popf
movsl
fidivrl
sbb
jns
lds
insb
pop
lods
jnp
movsl
xchg
adc
adc
xchg
and
in
mov
pop
mov
add
xlat
cmpsb
movsb
mov
mov
push
sub
out
addr16
push
daa
insl
lods
mov
mov
jnp
cwtl
xor
test
xor
cmpsb
xor
stc
not
mov
push
cld
scas
jl
es
int
xchg
adc
add
cli
sub
repz
clc
fcompl
subb
cmp
pop
into
call
xor
xchg
in
pop
add
sbb
jnp
std
and
inc
or
pop
mov
pop
je
jge
push
lods
sub
into
mov
xlat
jne
jecxz
addr16
inc
jo
out
bound
jo
iret
pop
fldenv
leave
dec
and
fdivrl
into
jecxz
or
andb
push
test
or
fidivs
cmpb
mov
popf
add
jno
add
sub
inc
push
lcall
aas
mull
jae
xchg
xchg
pop
hlt
in
pushf
or
and
sub
movsb
jge
mov
lret
mov
mov
inc
fnstcw
loop
into
xor
sti
sub
repz
mov
shll
mov
ffreep
lcall
mov
cmp
adc
lds
dec
les
data16
mov
jbe
xchg
inc
or
stos
xor
adc
ds
lea
mov
cmp
mov
mov
ja
inc
subl
adcl
leave
or
aaa
cmp
inc
adc
fildll
xor
xor
pop
cltd
jle
movsl
pushf
jmp
jg
dec
cmpsl
push
fldcw
adc
or
ja
sub
pop
mov
mov
push
adc
and
xchg
push
les
xor
loop
lret
pop
jmp
inc
add
aam
pop
shll
imul
in
or
mov
pop
or
mov
xor
push
adc
jae
repnz
nop
inc
enter
dec
or
sbb
inc
rcrb
push
stos
pop
rcr
mov
out
sbb
dec
ret
stos
and
pop
addl
shr
xor
lret
icebp
mov
aam
stc
or
shll
adc
call
jle
test
jle
cmp
add
dec
mov
lcall
stos
inc
test
dec
jns
adc
bnd
xchg
pusha
xor
xchg
lods
in
push
or
movl
lock
in
adc
pop
jle
sub
xchg
dec
mov
jecxz
ja
add
aad
stc
outsl
lea
rcll
in
fs
pusha
inc
sbb
xchg
add
inc
mov
bound
jle
dec
mov
mov
ds
int3
xor
sbb
push
cwtl
and
in
and
xchg
das
movsb
push
sbb
repz
loopne
mov
pop
jb
mov
inc
xor
pop
loop
dec
aad
pop
inc
inc
in
adc
and
data16
sbb
xchg
mov
jle
cld
xchg
pusha
in
mov
sub
mov
cli
scas
jnp
daa
sbb
push
xchg
stos
pop
adc
popa
iret
cmp
scas
fisubl
int3
ljmp
pop
cmp
aam
rolb
jmp
out
lods
mov
outsl
lea
jae
or
sar
fdivp
jnp
adc
mov
cli
cmp
jmp
and
imul
js
in
cmp
mov
sbb
jmp
dec
sbb
xor
call
add
fwait
adc
fwait
repnz
sbb
xchg
xchg
push
cwtl
in
mov
xor
sbbl
xchg
and
and
dec
gs
pop
test
mov
inc
test
outsb
and
in
pop
mov
shl
pop
sbb
adc
fs
jnp
push
iret
and
pop
movl
iret
dec
jecxz
push
inc
insl
cmc
dec
and
and
jb
lods
xchg
jne
cmp
push
popa
imul
jnp
cld
out
adc
inc
ret
loopne
adc
jp
mov
xor
adc
movl
jecxz
notl
sbb
test
jl
ja
jnp
sti
cmp
lock
test
push
movsl
testl
mov
mov
ljmp
fcompl
mov
xor
mov
cmc
push
cmpsl
in
mov
scas
das
pop
in
mov
jno
cmpsl
roll
dec
popa
mov
loopne
and
imul
xchg
xchg
aaa
mov
gs
mov
mov
rcr
jle
mulb
sarl
daa
sbb
movsb
addr16
xchg
data16
fdivr
mov
lahf
lret
rep
imul
imul
punpckhdq
add
and
pop
and
stc
pop
jno
sbb
stos
cmp
xchg
push
lock
lea
pusha
mov
push
aam
jb
and
mov
out
or
int3
stc
decl
inc
stos
push
rcl
mul
sbb
frstor
xor
arpl
or
scas
mov
lock
cmpb
inc
or
rorb
mov
cld
stc
jnp
pop
sbb
int3
lds
or
mov
jl
cli
in
insb
mov
aaa
dec
stos
adc
sub
xor
es
jb
icebp
pop
js
popa
pushl
and
mov
xor
cwtl
lds
testb
xchg
jo
mov
nop
ds
sahf
pop
xchg
ja
mov
sti
sub
shrb
mov
fstl
mov
xlat
into
adc
cmc
mov
fistps
aad
iret
adc
lds
or
test
xor
fwait
dec
mov
jp
mov
xchg
aas
xor
adc
fsubl
mov
cmpsl
sahf
and
clc
aam
sbb
imul
icebp
out
mov
sub
jne
shll
dec
ljmp
xchg
pushw
cmp
or
je
and
ss
addr16
arpl
hlt
divl
mov
cmp
dec
jp
xchg
mov
sbb
mov
js
push
xchg
lret
xchg
or
dec
or
inc
mov
push
jbe
fs
pop
push
in
and
adc
mov
jne
ds
push
push
imul
ss
sub
test
jle
lret
or
dec
sbb
int
cmpsb
loop
dec
dec
daa
dec
inc
mov
lods
cmp
pushf
mov
sub
outsb
sub
inc
arpl
cmp
xchg
imul
cmc
sarl
es
or
sub
icebp
pusha
js
jp
aad
jne
fdivs
test
outsb
fimuls
jp
lcall
cwtl
dec
test
xchg
cmp
pop
inc
mov
sbb
addr16
cwtl
sbb
sbb
cmp
lods
pushf
hlt
dec
xor
xor
testl
sub
xor
mov
sbb
dec
and
dec
cmpsb
stc
icebp
and
pop
ret
mov
and
in
mov
and
pop
outsb
movsl
lock
enter
fdivs
pop
sbb
adc
mov
mov
das
cmp
test
cmp
push
scas
adc
adc
out
out
push
mov
call
add
popf
mov
dec
xchg
and
bound
aad
push
xor
fcompl
lock
sbb
and
mov
xor
imul
dec
add
call
mov
into
fstpl
sub
sub
sbb
sub
fisttps
in
ja
xor
sub
in
stos
pop
popa
xchg
outsl
add
ljmp
imul
sbb
es
addl
das
mov
add
imul
pop
mov
inc
xchg
fsubs
repz
dec
cltd
add
stos
js
dec
popf
xchg
adc
and
out
insb
cmp
dec
addl
push
insl
in
push
push
insl
enter
in
pusha
fisubrs
call
in
rep
add
imul
popf
int
pop
add
inc
scas
xchg
notb
inc
xchg
es
rclb
ficompl
es
aaa
ret
push
push
inc
pop
popa
rcrl
frstpm(287
out
push
sub
push
leave
jmp
mov
cmpsb
data16
fdivrs
lods
pop
mov
cwtl
xchg
push
sub
or
mov
insl
pop
cmp
mov
enter
sarl
and
mov
cmp
arpl
push
nop
shr
mov
mov
out
adc
mov
mov
in
cs
movsb
std
fstpt
mov
lods
sti
or
imul
cmpsl
inc
pop
outsl
add
ds
popa
stos
cmp
jmp
call
xchg
pop
ret
push
xchg
push
add
decl
fmull
sub
xorb
mov
stos
add
je
scas
jb
xchg
lret
push
pop
popa
mov
sbb
jle
add
push
stos
sbb
pop
lahf
loope
scas
call
mov
cmp
shlb
lock
push
outsb
and
dec
jb
jo
lret
fdivs
inc
mov
xchg
stos
aaa
in
pop
popa
dec
pop
sub
push
shrl
pop
stc
push
mov
in
int
jnp
inc
xor
xor
mov
fs
addr16
dec
adc
jo
cmpsl
fnstcw
sbb
idivl
xlat
push
dec
andb
inc
pop
enter
and
sbb
cmp
clc
push
add
outsl
ret
lods
xchg
sbb
loopne
ret
sub
addr16
iret
arpl
pop
or
js
jbe
xchg
iret
cmp
mov
adc
ljmp
and
aam
and
add
pop
fmul
sbb
lods
fucomip
pop
inc
mov
adc
shll
adc
scas
repz
cwtl
push
pop
jp
fwait
mov
xchg
xor
in
mov
addr16
es
pop
scas
cltd
imul
stos
imul
je
xchg
in
lahf
xchg
test
movsl
dec
imul
jmp
push
sub
addr16
jo
xchg
jg
imul
jbe
ja
mov
pop
outsl
lahf
pop
pop
cmp
push
mov
or
shrl
fnstenv
loope
outsb
pop
and
cld
arpl
mov
sbb
aaa
in
pop
dec
jg
roll
mov
mov
fs
test
cmp
fwait
out
sub
and
jno
pop
sti
xchg
cwtl
adc
mov
pusha
iret
aaa
pop
out
into
ret
insl
jl
fdivs
fcoms
mov
mov
gs
push
or
cmp
test
cwtl
into
lock
and
loop
push
imul
loope
aaa
sbb
lods
mov
add
sub
int3
mov
mov
int
dec
ret
fdivrl
jns
jne
push
lea
in
lcall
rcll
mov
jmp
fstpl
dec
pop
sahf
mov
ret
add
gs
nop
in
test
xchg
lret
add
sub
xchg
out
sbb
dec
sbb
negb
sbb
inc
sub
xchg
jecxz
push
mov
cli
hlt
mov
scas
dec
aam
xor
dec
xor
cmp
mov
shl
push
mov
nop
shlb
pop
cmp
ret
out
sbb
movntq
push
pop
out
sbb
repnz
add
mov
inc
les
xchg
and
cmpsb
mov
insb
je
dec
jno
push
outsb
pop
cmp
js
or
adc
inc
mov
rcr
jns
in
mov
stos
and
cmpsb
cld
ret
js
mov
cmpsl
stc
mov
addr16
std
push
xor
in
inc
push
xchg
jg
clc
adc
movsb
lods
push
inc
aad
jns
push
cld
lea
mov
jne
rorb
dec
icebp
repnz
jecxz
pop
pop
outsl
or
in
popf
fisubs
jmp
mov
and
cmp
pop
cs
or
flds
jp
jp
jns
cmpsl
dec
stc
jae
sub
fst
inc
fcoml
and
test
pop
push
cmp
loop
add
sub
in
jo
pop
push
mov
mov
xchg
int
test
mov
sahf
fsubrp
sbbl
cmp
aad
int3
xchg
push
lea
sub
in
cmp
inc
hlt
in
mov
sbb
shll
stos
mov
ret
adc
mov
adc
or
add
data16
sbb
scas
push
xchg
lret
outsl
add
nop
lcall
xchg
es
roll
fwait
xchg
jbe
scas
fidivrs
cmp
pop
jmp
stc
adc
adc
repz
enter
jno
aad
sti
and
jae
test
or
dec
xlat
fs
dec
push
mov
mov
pop
ja
bound
adc
pop
cmpsl
mov
or
jae
sbb
push
leave
imul
out
sbb
mov
aas
or
dec
mov
imul
aaa
mov
xchg
lods
xchg
mov
push
push
pushf
push
mov
dec
maxps
sti
fs
mov
cs
lock
jns
pop
cmp
aad
jl
add
cmp
xchg
mov
pop
mov
sahf
dec
repnz
ret
mov
mov
outsb
lods
into
adc
jns
adc
push
and
xchg
rcrb
les
lret
clc
flds
cwtl
mov
fdivr
lds
xlat
mov
adc
mov
outsb
fadds
sarb
push
push
fadds
lret
insb
inc
int3
stos
dec
loope
cli
cmpsl
and
lahf
or
subb
loopne
ret
in
jge
gs
sub
stos
mov
in
sub
cmp
pusha
popf
ret
xchg
sbbb
jne
cld
push
test
xchg
sti
xor
pop
pop
subb
sub
sbb
int
insb
lahf
sti
sbb
pop
add
mov
sbb
mov
mov
adc
ret
pop
pop
dec
dec
dec
inc
shll
sahf
fdivrs
movsb
icebp
xlat
sbb
in
daa
mov
inc
and
xor
or
inc
nop
mov
jp
sbb
push
mov
jmp
mov
jge,pn
mov
adcl
jae
lret
outsl
ss
xchg
dec
sbb
int3
and
jno
adc
sub
ja
adc
shl
aas
imul
sbb
daa
imul
or
out
jecxz
fnsave
out
sbb
push
std
push
das
mov
test
lea
mov
out
push
js
daa
cmp
lret
jmp
cmp
scas
iret
stos
ljmp
fnstsw
les
lret
xor
mov
sti
lds
mov
xor
call
jae
xchg
pushf
popa
in
lock
andl
sub
outsb
or
pop
sub
sahf
jo
push
lret
into
dec
mov
pop
sbb
psllw
mov
in
pop
cmpsb
cwtl
fstl
lcall
cmp
mov
shlb
adc
cmp
jns
in
dec
sub
addr16
testb
xchg
sub
xchg
notb
test
fildl
call
mov
sbb
add
sub
aad
jle
mov
inc
imull
imul
jo
int
addb
fwait
cmp
push
inc
cwtl
cmp
fisttps
mov
pop
pop
iret
loop
mov
mov
cmc
xchg
push
adc
shlb
xor
inc
sub
test
mov
arpl
notb
pushf
movsl
mov
lret
sarb
outsb
ss
repnz
mov
aam
pop
leave
aam
xchg
decl
scas
mov
rorl
mov
lock
mov
shl
jnp,pn
push
rcll
rol
dec
in
inc
std
insb
mov
scas
xchg
into
xor
add
mov
test
and
xchg
rorl
sti
repz
cmp
in
sti
test
test
mov
pop
and
std
push
sahf
mov
jmp
in
outsl
mov
sti
pushf
push
das
pusha
inc
sbbb
scas
xchg
mov
bnd
fs
and
fisubrs
cwtl
or
cmc
ljmp
adc
ss
js
int3
pop
dec
push
jbe
sbb
jns
ds
and
xor
adc
dec
or
mov
inc
mov
mov
cmp
in
faddl
mov
inc
movsl
dec
stos
stos
jge
cli
add
pop
xor
cld
mov
dec
pop
sbb
in
lret
cltd
jle
adc
ljmp
nop
out
cmp
or
gs
pop
in
data16
ss
icebp
push
jg
or
mov
cmp
sbb
das
push
or
pop
loop
repnz
mov
jbe
rol
lcall
ss
cmp
push
ret
cmp
dec
cmp
in
and
add
add
outsl
int
outsl
cmp
xchg
xor
mov
push
mov
and
mov
add
sub
test
popa
adc
and
clc
xchg
add
icebp
mov
cmp
pop
js
stos
xchg
jle
sub
push
jb
inc
mov
imul
ret
sbb
sub
outsb
jle
dec
nop
iret
mov
xchg
jnp
jmp
lret
shld
ja
cmp
cmpsb
xlat
jae
adc
xor
dec
ss
xor
push
cmp
fisubrl
lcall
nop
daa
mov
stos
jae
pop
js
xchg
push
add
xchg
rolb
sbb
mov
xchg
dec
dec
cs
mov
jnp
mov
pop
xchg
adc
iret
out
xchg
push
adc
or
pop
jl
sub
jb
dec
js
mov
sahf
inc
push
pop
sub
addr16
lret
imul
and
push
jp
sub
mov
add
fdivl
mov
cld
xchg
idivl
mov
push
xor
jnp
pop
mov
mov
out
dec
lahf
loopne
ret
xlat
sub
jg
pop
test
aam
js
test
xor
push
movsl
pop
and
sub
loop
bound
jae
jp
filds
out
aam
fcoms
xchg
add
or
dec
push
sti
or
roll
fadds
dec
stos
mov
sub
movsb
push
inc
xor
mov
subb
and
rcrl
lock
in
xlat
mov
aam
mov
push
sub
cld
mov
and
jg
popa
repnz
sbb
incb
mov
xchg
or
repnz
xor
jp
fidivrl
inc
jb
sbb
jge
cmp
lods
push
pop
je
and
imul
in
push
ljmp
pop
sub
es
push
dec
es
testb
sub
mov
insl
jbe
dec
mov
mov
gs
in
rolb
mov
xchg
cmp
call
sub
jb
mov
std
dec
mov
call
ja
mov
sbb
inc
mov
xchg
sub
xchg
dec
pop
push
mov
sub
pop
cmpsb
das
cmp
jmp
push
jl
enter
push
out
xchg
pop
fs
jbe
push
xchg
pop
les
xchg
addb
lods
faddl
mov
inc
jo
jbe
dec
jle
bound
cmpsl
inc
rorl
jnp
xor
jno
or
and
daa
cmp
xchg
mov
testb
shlb
adc
out
adc
cmpsb
ljmp
rolb
fisubrl
mov
push
cmp
ljmp
push
dec
roll
push
pop
iret
ret
inc
push
rorb
and
and
daa
and
push
out
ljmp
je
push
arpl
aad
dec
inc
daa
cmp
mov
out
mull
mov
iret
xchg
cwtl
out
push
sbb
lcall
mov
add
mov
push
mov
cmc
aad
stos
hlt
push
add
or
push
push
cmp
les
inc
test
imul
add
mov
jnp
into
xor
xchg
or
adc
mov
loope
or
popaw
popf
push
jae
divl
scas
adc
jno
sbb
dec
jae
add
and
int3
add
sub
ret
lret
stos
cwtl
std
aas
xor
add
es
movups
inc
loop
jle
iret
xor
shrl
cmp
xchg
scas
int
loop
sub
pop
xchg
hlt
int
ja
sub
mov
xor
aam
cmp
and
xchg
ds
maskmovq
negl
cmp
sub
jne
push
dec
daa
dec
pusha
cmp
enter
out
ret
loop
popf
test
dec
cmp
dec
movsl
sub
xor
ret
jl
push
ret
add
mov
daa
mov
fcoms
call
popl
or
mov
push
sub
xchg
not
ffreep
jo
sbb
std
filds
cwtl
jge
int
xor
adc
xchg
jae
pop
sub
fldl
movsb
int
xlat
ret
or
insb
mov
mov
cmpsb
adc
inc
mov
sahf
mov
orl
cli
fdivrl
inc
cld
and
insl
aam
jmp
jae
sbb
dec
xchg
push
mov
ss
push
arpl
push
cmp
in
out
pop
inc
inc
or
push
push
scas
jle
shl
dec
ret
mov
dec
sti
push
xchg
jno
stc
push
pop
aas
cmovbe
mov
mov
mov
lock
push
cmpsb
stc
ss
cmp
mov
dec
mov
cmpsl
lret
hlt
repnz
test
add
pop
fdivl
mov
out
cmpsl
cmp
lods
jecxz
mov
mov
push
inc
jns
ljmp
add
ds
bound
cmp
mov
dec
dec
repz
mov
mov
ds
cmp
insb
cmp
popl
mov
inc
fisttpll
add
cmp
arpl
xor
adc
enter
scas
dec
inc
jo
xor
sbb
in
inc
outsb
xchg
mov
test
add
ja
cmpsb
aaa
sbb
mov
mov
mov
adc
inc
je
push
adc
pop
sti
inc
lcall
cmp
ficomps
add
mov
xchg
ss
dec
fnstenv
ljmp
sbb
ljmp
push
outsb
repz
in
adc
dec
push
push
sub
dec
mov
shlb
sub
add
mov
out
mov
jo
ret
inc
pushf
or
stc
adc
pop
xor
fstp
fxch
inc
imul
in
mov
adc
push
popf
xor
xchg
sbb
lea
test
scas
mov
ds
jae
dec
sub
jo
dec
cld
push
xor
inc
stos
push
rcll
and
jmp
repz
xor
xlat
std
popa
and
scas
sbb
js
adc
aam
les
orl
xor
daa
push
jmp
out
mov
dec
addb
adc
and
adcb
shlb
lods
sub
inc
xorl
popf
push
inc
outsb
mov
jl
mov
sub
push
insl
mov
shrb
push
xchg
jge
loope
shrl
into
sub
push
jns
push
cmp
stc
xor
or
push
xlat
out
sub
ljmp
xchg
ret
aad
pop
out
lea
aad
cli
pop
daa
repnz
jle
sbb
pushf
and
dec
loope
adc
insb
repz
sub
movsb
aad
xor
cs
push
into
jns
mov
in
sub
loopne
repz
dec
scas
add
pop
pop
pop
iret
jb
mov
pop
shrl
dec
and
mov
mov
xchg
aam
sbb
int3
pop
add
cltd
push
push
enter
inc
pop
subb
in
scas
sti
xchg
arpl
dec
sub
popa
sbb
cmp
stos
jns
sbb
mov
xchg
jne
jmp
arpl
jns
test
sbb
subl
shrl
xor
mov
bound
mov
and
mov
loope
out
int3
or
jbe
xor
push
cmp
lret
sub
cmp
cmp
xor
push
pop
je
xchg
fsts
xor
jmp
int3
and
jb
sub
mov
mov
rolb
xchg
dec
arpl
xorl
xchg
out
in
in
mov
cs
test
imul
in
or
mov
popl
push
pop
jmp
stc
mov
ss
stos
sahf
pop
fwait
out
aam
loope
push
ljmp
pop
jb
daa
insb
je
mov
sbb
adc
add
sbb
sbb
fwait
outsl
inc
in
cmpsl
mov
mov
sub
addr16
in
addr16
rol
jo
push
int3
clc
push
ret
push
stos
xor
cmp
rcrb
gs
mov
inc
dec
mov
in
jne
jo
sahf
or
mov
add
jbe
cmp
mov
mov
outsb
bound
aam
in
aas
mov
mov
and
add
cmp
iret
xchg
call
push
add
sub
insb
and
fnstcw
mov
cmc
loope
xchg
cs
test
or
lea
ret
mov
dec
sbb
push
scas
daa
cmp
xchg
imul
mov
dec
lret
xchg
daa
ds
jbe
add
sub
das
jb,pn
lds
push
mov
push
lods
dec
outsb
or
xor
mov
clc
sbb
fidivrl
rcrl
push
into
rcl
in
sub
data16
jns
int
add
xor
and
lods
inc
lock
in
rclb
xchg
pop
adc
add
orb
push
clc
in
fstps
sbb
fbld
xor
mov
lret
dec
inc
int
adc
mov
mov
movsl
pop
cmc
sub
xor
test
lods
repz
test
negb
mov
lea
repnz
mov
pop
subb
dec
ja
mov
cmp
mov
fwait
scas
out
dec
icebp
lods
sbb
push
div
adc
shl
daa
fisubl
fistpl
mov
inc
sarl
sahf
das
addr16
jo
inc
and
push
repz
adc
fsubr
leave
repz
xor
cld
mov
jae
cmpsl
in
mov
mov
cmpsb
insb
cs
mov
push
repz
sub
loop
int3
notl
repz
add
push
mov
popa
lcall
aas
push
cli
mov
xor
shll
pop
aam
mov
cmpb
push
lock
ljmp
mov
dec
lock
pop
pop
jmp
push
and
cmp
cmpsb
stos
sbb
out
push
or
hlt
in
jae
movsb
xor
add
in
inc
mov
jl
ret
filds
mov
in
inc
mov
adc
test
sti
clc
adc
xchg
lock
xchg
sub
inc
xor
xchg
pushf
out
loope
shrb
in
mov
adc
xor
ja
jmp
cmpsb
inc
mov
aad
loope
push
in
mov
pop
mov
pop
xlat
cltd
dec
inc
nop
push
and
cmp
push
cltd
add
pusha
mov
dec
xchg
sarb
pop
pop
repz
sbbl
test
fdivs
outsb
outsl
push
and
ror
sbb
orb
dec
bound
sbb
adc
jnp
adc
repz
les
bound
jae
inc
movsb
jcxz
sub
jne
rcr
clc
rcrl
aaa
mov
data16
into
icebp
mov
aas
fdivs
sbb
rclb
mov
cmp
out
or
push
xor
out
xchg
sbb
out
or
mov
and
jae
aam
cmp
dec
jg
enter
les
stc
sti
shrb
jg
inc
out
inc
inc
out
adc
jp
jmp
scas
aas
push
mov
mov
cltd
inc
sub
repz
es
pop
pop
cmp
dec
or
mov
sbb
sub
xchg
add
repz
add
cli
test
xchg
mov
cmp
leave
notb
cmc
outsl
std
sarl
int
cwtl
loop
icebp
adc
mov
and
push
out
mov
push
mov
inc
gs
and
sub
movsl
int3
in
aam
mov
mov
dec
std
int3
mov
jl
les
mull
pop
out
lods
inc
int
call
aad
outsl
lret
adc
nop
bound
pop
and
pushf
cmp
lret
sbb
dec
jo
pop
xor
push
lds
repnz
fmull
lcall
inc
fstpt
sbb
fwait
mov
inc
lahf
in
jne
push
push
or
xor
je
not
cmpsl
dec
dec
dec
cmp
adc
and
dec
dec
stos
push
cmp
ljmp
js
into
xor
lock
andl
aad
cmpsb
pop
jo
pop
xor
push
jae
mov
sbb
cmc
xchg
mov
inc
jne
lea
jbe
cmp
mov
inc
inc
subb
and
ss
add
sbb
and
popa
pop
in
xchg
shl
rol
lods
xor
sub
fbld
sub
popa
pop
mov
mov
pop
inc
in
mov
sbb
fisubrs
pop
sbb
or
xor
sub
incl
data16
arpl
xor
mov
pusha
out
je
cmp
shll
mov
adc
mov
lds
cmp
inc
jo
pop
sub
ret
push
in
fcompl
pop
mov
xchg
sub
push
out
cld
cmpsl
lds
xchg
sbb
addr16
nop
push
in
mov
aaa
cmp
mov
movsb
out
xor
incb
popf
arpl
add
inc
cld
sti
mov
fcompl
mov
mov
jmp
outsb
cwtl
adc
jae
outsb
out
adc
mov
sbb
insb
dec
pop
in
jge
orb
or
add
stos
jecxz
addr16
mov
iret
xchg
dec
jo
or
push
es
rcll
lock
popa
xlat
mov
mov
cmp
jp
test
xlat
repz
sub
pop
push
lret
mov
test
into
sub
mov
push
xchg
pop
xchg
mov
leave
jmp
fsts
cmp
mov
in
push
leave
add
ss
out
enter
mov
sbb
ficoml
aas
xchg
sti
jns
outsl
scas
rclw
add
fiaddl
test
imul
mov
sbb
pop
fsts
and
leave
lock
jecxz
ret
cmp
pop
jle
jae
xor
adcl
xchg
mov
shrl
pop
nop
jns
rcll
and
or
in
adc
ficomps
cmpsl
or
jbe
clc
jg
imul
dec
repz
dec
repnz
adc
repnz
sbb
shrl
fwait
inc
sbb
test
sbb
adc
sub
scas
inc
sbbl
sbb
sub
dec
lcall
mov
loope
ret
push
sarl
inc
inc
and
stos
mov
bound
fcoml
clc
mov
aam
cmp
xchg
cmp
add
sti
daa
push
fdivr
adc
popa
cwtl
mov
xor
mov
push
mov
push
mov
lds
stos
lcall
pop
inc
ss
imul
jg
mov
lea
push
mov
push
jbe
fcomps
in
ret
movsl
mov
xor
mov
mov
sbb
lock
or
popf
addl
and
hlt
add
insl
xchg
aas
push
arpl
rorl
and
int
in
sbb
pop
xchg
aaa
pusha
inc
xchg
stos
sbb
orb
cmpsl
cli
vmovlps
jns
mul
data16
lods
lods
adc
cwtl
xchg
or
or
fwait
nop
jno
inc
jmp
sub
mov
js
push
or
mov
add
dec
add
repz
dec
xchg
rclb
jo
adc
mov
cmp
jo
fsubs
dec
lods
mov
pusha
stos
loope
dec
cmc
sub
sub
sar
popa
rcrl
cmp
add
loope
insb
hlt
xlat
mov
mov
pushf
ds
cmpsl
fxch
in
push
aas
jae
cs
movsl
push
repz
or
aaa
pop
jb
gs
xchg
cmp
testl
iret
inc
repnz
ljmp
lret
mov
ljmp
jle
xchg
sub
jp
jnp
daa
dec
loopne
iret
xchg
and
sbb
xchg
fdivrl
repz
mov
sub
out
xchg
pop
addr16
mov
pushf
add
inc
cmpsb
jo
xor
cli
cmc
lret
xchg
loopne
xor
add
idivb
cmp
and
insl
lahf
inc
inc
leave
lahf
cmp
out
dec
mov
xchg
loope
ds
or
pop
pop
mov
int3
fidivrs
push
or
fnstcw
push
cmp
xor
xchg
mov
inc
fldt
aad
pop
xor
dec
cmp
mov
xor
lea
daa
push
mov
icebp
cli
cwtl
xchg
xchg
daa
add
in
mov
stos
fs
out
xor
sub
mov
xchg
mov
mov
or
xor
push
outsb
mov
popf
mov
mov
lods
pop
adcb
inc
ficoml
incl
pop
aam
int3
jnp
fwait
xchg
mov
xor
and
cmpl
mov
ror
pop
sub
inc
stc
push
push
mov
jg
out
mov
xorl
push
fdivl
imul
rol
inc
mov
push
jl
push
aam
mov
enter
cmpsb
push
inc
out
dec
ja
cmpsb
dec
jne
inc
push
fcmovu
das
call
imul
gs
push
fldenv
xchg
test
jg
sbb
xlat
and
sub
dec
push
xchg
sbb
mov
clc
fiaddl
test
inc
psraw
xchg
add
xor
xor
movsb
and
cld
jl
adc
push
mov
test
pop
outsl
mov
mov
jmp
mov
inc
flds
lods
std
ret
int
data16
into
lock
xor
iret
mov
push
xor
icebp
js
fiadds
cwtl
movsl
push
jbe
mov
pop
sbb
stos
cli
loopne
das
pusha
mov
mov
ret
icebp
sbbb
inc
inc
push
jl,pt
jbe
cmp
arpl
fs
mov
idivb
cmc
lods
cwtl
adc
adc
shr
aaa
lret
mov
mov
ret
jb
cmp
in
xchg
mov
and
jbe
xor
mov
dec
push
imul
fsubr
push
jge
daa
mov
add
jae
aas
fmul
jne
inc
fisttpl
movsl
push
push
push
ficomps
sbb
jge
shlb
loop
repz
insl
xchg
cld
adc
mov
lods
or
jo
nop
sub
cmp
dec
push
mov
dec
out
adc
mov
pusha
pop
xor
test
insl
das
cmp
int3
xor
push
mov
jecxz
inc
jo
out
pushf
jo
ja
or
xor
pusha
jle
mov
xchg
ds
sahf
rcr
or
rolb
and
mov
cmpsb
in
ret
push
dec
fnstsw
xchg
jne
lock
imul
nop
lret
adc
jbe
push
je
inc
gs
jp
scas
cmp
movsb
mov
mov
dec
pop
and
jmp
adc
xor
jmp
and
repnz
xor
mov
popf
test
arpl
fistpll
push
mov
stos
jle
gs
mov
mov
cmp
das
adc
scas
outsb
dec
dec
fisttpl
jb
jae
popf
fsubr
xchg
stos
sub
gs
arpl
fsubr
xchg
dec
and
jg
ja
int3
aam
movsl
push
mov
fldt
js
insb
mov
xchg
jmp
js
loopne
sbb
or
xor
xchg
lret
mov
add
pop
test
xchg
jns
pop
jae
ja
fistps
xor
xor
xor
sbb
repnz
stc
jbe
stc
inc
in
add
inc
cli
popa
adcb
cwtl
mov
adc
adc
jbe
out
jns
aam
cmp
lea
inc
inc
ret
pop
jne
loop
pop
dec
or
mov
lock
pop
add
dec
stc
jl
mov
cmpsl
xlat
es
push
adc
jle
add
sub
xchg
sbb
gs
or
rclb
push
incb
repnz
mov
pop
rcll
inc
push
inc
js
sub
inc
inc
adc
sbb
out
shrl
mov
mov
das
mov
sahf
pop
shll
push
pop
dec
lods
push
push
or
fstpl
stos
insb
mov
lahf
dec
dec
inc
lods
pushf
and
dec
out
inc
sti
test
and
push
jge
cld
leave
das
je
and
lods
push
cmp
fnstenv
and
jmp
push
pusha
jl
shll
jge
js
mov
sti
fs
lcall
sti
cmc
sbb
or
cmpb
lret
push
in
sub
sbb
stc
sbb
inc
mov
out
or
pop
pusha
leave
into
stos
ds
xchg
negl
push
popa
aas
and
mov
popf
or
xor
aam
aam
add
je
pop
pushf
pop
and
rol
ror
nop
cld
xlat
jp
push
xor
inc
jae
sub
jbe
xor
sahf
cmp
scas
scas
dec
jecxz
call
fwait
out
cmp
jg
or
push
add
popa
repz
sahf
dec
sbb
jb
in
ficompl
xchg
xchg
mov
lret
test
cmp
push
rclb
hlt
cld
testb
test
shrb
test
cmp
roll
test
pop
xor
dec
rcll
mov
jbe
and
cmc
mov
mov
lods
scas
jnp
cmc
mov
andb
cltd
stos
xchg
cli
push
jmp
push
outsb
push
sbb
cmp
push
jp
adc
fisubl
mov
repnz
int
jbe
iret
ret
mov
add
cld
fidivrl
mov
xchg
and
adc
data16
cs
int
xor
es
cltd
aam
lahf
hlt
xor
sar
inc
xor
outsl
das
sbb
mov
xchg
into
jecxz
out
push
pushf
les
cmpsl
xchg
out
xor
lea
mov
lods
xchg
cmp
mov
inc
push
lods
and
xlat
xor
pop
pop
sahf
ljmp
test
and
cmp
lret
mov
daa
mov
fisttpll
ljmp
pop
andl
ss
lods
sub
add
sbb
mulb
dec
mov
add
int3
push
cmpsl
fs
pop
sbb
dec
or
enter
or
push
mov
xlat
inc
ficoms
popf
aam
push
inc
es
repz
or
test
sbb
imul
in
jecxz
jnp
std
and
stos
shr
ret
fcmovnbe
push
mov
mov
xchg
add
dec
aam
std
iret
pop
sub
jge
jecxz
sub
or
enter
test
cmp
int
stc
repz
push
sub
pusha
xor
or
mov
cmp
ljmp
xor
push
xor
scas
xchg
mov
fistpl
and
or
sbb
sti
add
sti
mov
loop
mov
scas
std
push
add
cmc
push
xor
inc
shlb
lret
inc
mov
cmp
loop
repz
aad
mov
mov
stc
pop
jge
inc
pop
xchg
mov
and
dec
jl
test
dec
outsl
pop
cmp
out
cs
inc
cmpsl
mov
ds
mov
mov
cmp
push
xor
stos
dec
stos
pop
mov
arpl
mov
adc
pop
inc
mov
add
jbe
add
push
adc
in
sub
pop
push
loop
and
jb
and
mov
pusha
dec
daa
pop
nop
ret
dec
scas
inc
mov
shlb
mov
sbb
in
cld
pop
div
mov
push
adc
mov
inc
mov
divl
adc
xchg
push
add
ja
or
pop
dec
pop
mov
icebp
adc
bound
jo
lret
out
inc
sub
imul
je
ss
mov
mov
xchg
xchg
inc
xor
sbb
fnstsw
jge
ljmp
mov
enter
mov
lret
jmp
adc
jns
je
out
call
loop
hlt
fcmovb
xor
ja
mov
stos
ret
lret
fldl
movsb
pop
in
fcmovu
xchg
adc
add
cld
lret
in
mov
aas
push
cld
cmpsb
dec
fld
inc
ret
adc
popa
ret
mov
das
pop
mov
cmp
pusha
or
jns
sub
adc
inc
insb
aaa
repz
lret
mov
push
ret
inc
fs
sarb
cltd
sub
jns
mov
inc
mov
bnd
insl
push
jbe
adc
jge
insb
and
dec
xor
out
push
pop
scas
mov
cltd
ret
push
dec
repnz
push
add
cmp
les
scas
xchg
or
jbe,pt
mov
lret
sbb
or
add
dec
jecxz
fdivp
cltd
or
sub
sti
in
out
aad
test
mov
add
sub
xor
out
rcll
pushf
cmpsl
cmpsl
outsl
cmp
pop
xor
sub
loope
mov
pop
cmc
cmp
out
pop
aam
fst
stc
dec
data16
outsl
sbbl
cld
lret
pop
mov
lret
jns
out
loope
pop
lds
incl
testl
sahf
movsl
std
enter
aam
mov
stos
push
cwtl
sti
pop
in
push
xor
outsb
fisttps
mov
rorb
xchg
xor
out
fidivs
pop
mov
inc
jp
out
inc
or
cmp
jl
inc
daa
movb
sub
pushf
cmpsb
xchg
xor
sub
out
dec
or
cmp
mov
add
jecxz
add
fwait
aam
imul
mov
xchg
popf
add
push
les
dec
xchg
dec
push
cmp
lea
aas
jg
xchg
sbb
jecxz
or
cmp
push
add
arpl
pop
mov
cmp
dec
clc
rclb
mov
jae
lahf
mov
sub
cmp
in
aaa
shlb
add
jnp,pt
roll
addr16
mov
push
sbb
sub
add
aas
arpl
and
jge
xchg
pop
call
ror
xchg
add
jecxz
and
xchg
sub
mov
adc
loop
dec
mov
sarb
mov
sbb
or
mov
cmp
jmp
filds
fldl
call
or
fwait
lds
and
and
mov
push
dec
jne
test
jns
mov
or
mov
sub
fstp
loope
mov
push
add
and
mov
jne
lods
dec
and
mov
or
xchg
in
lahf
mov
popa
fstpl
mov
dec
push
mov
sub
into
movb
mov
fcompl
mov
ret
shr
add
xchg
ficomps
xchg
adc
push
mov
aam
fcmovnb
bound
loopne
pusha
leave
les
in
mov
xchg
insl
jecxz
in
fcomps
dec
sub
mov
std
lods
jns
fisubrl
sub
lret
mov
or
fcompl
or
inc
imul
and
dec
test
adc
mov
and
ret
lret
mov
or
and
jmp
test
inc
movsl
scas
gs
mov
mov
xchg
aas
xchg
std
es
in
sbb
jg
jns
into
cmp
rclb
adc
stos
push
dec
pop
sbb
inc
stc
lahf
xorb
orb
push
addr16
mov
jo
push
cmpsb
adc
push
mov
mov
inc
jnp
cmp
push
call
sub
sti
mov
push
xlat
inc
push
adc
cltd
pusha
jnp
or
sub
mov
arpl
arpl
fnstenvs
test
add
push
imul
mov
push
in
imul
stc
repnz
clc
xchg
pop
aad
adc
xor
push
or
test
jo
xor
aas
in
mov
ja
js
push
dec
mov
push
and
mov
test
mov
outsl
push
sub
push
mov
out
sub
or
sub
inc
add
mov
in
jg
pop
add
imul
mov
dec
jp
scas
dec
cltd
mov
outsb
outsl
cmpl
imul
jg
subl
pushf
mov
push
mov
out
fimull
outsb
and
or
push
xor
xor
movsl
pop
cmpsl
pop
in
scas
repz
jg
testl
ja
cwtl
sub
pop
and
in
stos
daa
jp
sub
xor
testl
popa
pop
test
dec
cld
iret
out
icebp
loop
dec
fbstp
arpl
mov
stos
mov
mov
js
ds
aas
out
mov
jecxz
mov
outsl
ficoml
add
cmp
mov
or
dec
and
in
fstpt
fnstsw
xchg
cmp
add
push
dec
shl
pop
add
lock
popa
jns
sub
mov
cmp
sub
mov
icebp
cmp
push
dec
in
mov
jo
lods
iret
sarb
fcompl
arpl
xchg
rcl
or
in
in
push
jnp
aaa
pop
mov
cwtl
insb
pop
cmp
jp
sub
sbb
movsb
int
adc
icebp
pop
pop
dec
movsb
rolb
sub
dec
rcl
iret
iret
dec
xchg
adc
sub
push
and
push
fstl
xor
dec
cmpsl
pop
fs
jl
insl
test
in
repnz
adc
push
mov
xchg
sub
mov
sub
mov
push
sbb
adc
js
sub
dec
scas
stos
dec
movsb
sbb
repz
sar
xchg
sbb
pop
mov
add
das
mov
sti
into
cmp
stos
xor
jne
rcr
ds
stos
mov
dec
jns
pop
mov
icebp
ret
xor
mov
insl
outsl
xor
stos
fisubrs
lret
fcomps
xor
mov
xor
jp
or
push
sbb
stos
sbb
push
or
imul
jle
loopne
outsl
aam
dec
adc
adc
cmp
adc
dec
cmc
test
test
movsb
aam
jns
sti
ss
scas
lahf
iret
sub
lret
xor
into
pop
fwait
loope
int
mov
or
movsl
dec
scas
dec
stc
call
lret
push
in
jecxz
bound
and
push
aad
les
aam
sub
into
mov
nop
xchg
sub
out
inc
stos
xchg
xchg
add
imul
ljmp
test
pop
inc
cmpsl
mov
dec
call
dec
insb
cmp
dec
stos
sbb
and
xor
or
cmpsl
push
lahf
cmp
jmp
imul
push
mulb
ret
mov
aas
mov
xchg
pop
ret
rclb
or
test
push
faddl
into
push
adc
xchg
loope
xchg
cld
xchg
lods
dec
popa
push
adc
or
nop
inc
pop
pop
pop
dec
fcompl
or
push
mov
sub
rol
sahf
arpl
pop
cmpsl
mov
testl
sbb
lcall
inc
movsl
push
nop
pop
jle
pop
outsl
pop
or
pop
push
test
divl
push
and
insl
pop
xor
stos
and
sahf
fucom
cmp
mov
leave
jle
mov
mov
cwtl
add
imul
fisubrs
cmp
mov
cmp
lods
loope
lds
popf
scas
and
cmp
movsl
cmpl
mov
push
les
nop
pop
cmp
jno
popf
subb
adc
sbb
popf
inc
add
jg
in
arpl
sbb
xchg
nop
sti
push
decl
mov
jecxz
push
clc
dec
inc
movsb
lock
inc
es
cs
push
mov
pop
sub
imul
sbb
lods
aad
arpl
call
inc
and
test
cmp
pop
push
mov
stc
push
lcall
pop
push
loopne
sti
repz
mov
pop
das
jmp
and
jecxz
push
scas
sbbb
push
cltd
rcll
push
repnz
div
jnp
or
adc
out
mov
insl
enter
mov
ja
or
xchg
aas
dec
add
push
fwait
jne
add
sarb
js
sahf
fs
outsl
daa
shr
repnz
xchg
gs
jle
mov
mov
mov
adc
mov
fwait
bound
cmp
jb
inc
aaa
push
in
insb
out
cwtl
inc
jl
lcall
push
loopne
leave
cmp
jge
xlat
pop
sub
sub
xchg
aaa
mov
push
insl
push
mov
sbb
inc
cmp
ja
arpl
aad
mov
jb
bound
insl
ret
push
sbb
jl
aaa
mov
or
popf
push
xchg
in
adc
add
ret
xchg
enter
xor
sbbl
rorl
push
mov
int
mov
es
jae
call
adc
mov
ja
xlat
mov
lret
loop
dec
or
mov
pop
adc
movsb
nop
mov
lods
mov
setno
pop
pop
cs
jo
mov
jmp
sub
enter
dec
je
or
loope
das
dec
jns
pushf
pop
jl
pop
jge
mov
ljmp
nop
push
or
mov
into
mov
je
sbb
les
jae
pop
cmp
aam
bound
or
cmc
cmpsb
adc
imul
xchg
iret
hlt
cmp
inc
stos
das
pushf
add
out
pop
mov
pop
mov
mov
mov
sbb
pop
sub
ljmp
push
into
xchg
sbb
sub
mov
dec
hlt
jecxz
f2xm1
inc
dec
jbe
aaa
mov
xor
mov
loop
pushf
enter
sub
daa
jne
xlat
adc
jmp
sti
push
jle
fistpl
sarl
mov
shrb
repnz
outsl
xor
cmp
aad
fstps
sbb
mov
hlt
out
jne
sbb
adc
popf
ret
xchg
mov
mov
addr16
xor
push
and
enter
mov
insb
mov
pop
loopne
lcall
mov
push
aad
xor
push
mov
mov
pop
lret
dec
rcr
push
sar
adc
xor
jo
aas
insl
adc
inc
jb
pop
pop
pop
jecxz
jp
outsb
mov
int3
in
gs
loopne
mov
mov
fadds
sub
mov
dec
pop
sti
fucomp
imul
pop
mov
cmc
xor
shlb
idiv
repnz
shll
dec
dec
xor
add
jne
sbb
mov
jnp
divb
sub
or
xchg
mov
lock
lsl
cmp
outsl
jecxz
stos
add
int
inc
add
xor
or
daa
lods
cmp
fs
jecxz
and
js
cwtl
cmp
dec
scas
dec
mov
push
es
xor
arpl
push
mov
push
sbb
test
fwait
xchg
sbb
dec
addr16
mov
jbe
jae
mov
inc
xchg
jns
mov
mov
pusha
mov
inc
push
cmp
cmpsl
call
lea
push
mov
mov
icebp
xor
daa
push
mov
sti
jge
adc
fsubrs
mov
cmc
test
cmp
pushf
push
das
sbb
adc
call
push
repz
test
lds
pop
inc
in
call
mov
mov
push
jne
mov
ljmp
xchg
outsb
jp
add
sub
data16
lods
mov
sti
pop
fs
in
push
mov
je
xchg
adc
sub
jmp
sbb
mov
inc
ss
jp
mov
inc
in
lock
int
enter
inc
xor
test
sbb
aas
sbb
push
nop
mov
nop
imul
rorl
pop
mov
sbbl
mov
ret
test
or
scas
das
xor
jle
cmp
iret
dec
into
sub
out
xchg
sahf
out
cmc
add
out
lahf
push
fimull
cmp
jge
daa
ficomps
jecxz
outsb
dec
pushf
pusha
xchg
pusha
popf
or
lahf
adc
sub
jae
ja
push
addr16
sbb
xor
mov
lret
push
out
adc
pop
outsb
and
cmp
lods
jne
mov
sbbl
aaa
lahf
jge
pusha
xchg
mov
pop
iret
inc
scas
or
cld
xchg
and
imul
fstps
insb
cli
ss
fs
testl
and
popf
jle
pop
pop
sbb
sub
mov
mov
push
or
call
movsl
add
hlt
jne
shrl
loope
ret
inc
aam
or
adc
cmp
mov
xor
push
adc
lahf
sbb
mov
mov
cld
adc
mov
arpl
lea
pop
mov
pop
xchg
pop
sbb
out
scas
lods
js
xchg
and
mov
add
lahf
add
loope
roll
aaa
push
xchg
es
test
lods
gs
stos
iret
scas
sbb
ljmp
mov
xchg
negl
dec
test
rorb
inc
sbb
push
popf
sbb
adc
lahf
std
or
aad
mov
xor
cmp
insb
add
scas
adc
xor
jbe
rcll
leave
push
pop
insb
sbb
js
xor
inc
and
pop
idivb
daa
addr16
mov
scas
jnp
aam
outsl
inc
cltd
pop
in
or
sbb
add
in
fmull
ja
dec
sbb
push
adc
push
adc
cmp
and
loopne
push
lea
jno
add
popf
outsb
pop
push
pusha
les
sahf
adc
add
xchg
stos
jno
mov
shl
scas
sub
int3
ficompl
cmp
jns
cmp
aam
js
adc
mov
int
aaa
sub
shrl
mov
cmp
gs
or
pop
pop
cmpsl
out
cmp
mov
ja
xchg
mov
xchg
sub
push
sub
cmc
and
mov
ror
lcall
ljmp
sbb
lret
clc
mov
or
inc
push
insb
adc
das
pop
cmp
mov
mov
xchg
test
pop
xor
mov
sub
or
jl
pop
push
iret
pushf
mov
aaa
mov
mov
fildll
mov
adc
sbb
test
sub
lods
jmp
pop
outsl
movsb
in
les
ret
pop
sbb
loope
adc
xchg
jo
jne
andl
lret
sbbb
pop
mov
cmp
jns
mov
cmp
sbb
mov
fnsave
or
ljmp
mov
mov
xlat
test
je
or
cmp
sarb
jno
flds
inc
cmpsl
mov
js
cmp
dec
or
and
shlb
popa
sbb
dec
das
pop
push
and
cmp
decl
pop
dec
iret
jg
aad
int3
or
addr16
pop
xor
sar
sub
sub
addl
mov
rorb
sti
les
jmp
rclb
aad
mov
addr16
and
cwtl
or
jmp
pop
mov
popf
bound
repnz
rorl
test
sbb
pop
mov
xor
mov
push
mov
dec
sub
mov
xor
ljmp
jg
dec
sub
pop
jne
xor
and
or
mov
outsl
out
inc
jp
in
add
xor
sbb
jle
adc
ret
aas
sbb
sahf
xchg
int3
aaa
and
ret
or
push
imul
cmp
mov
lret
sbb
bound
adc
mov
jle
aam
lret
mov
fisubs
daa
xchg
std
and
mov
adc
aam
ljmp
jmp
adc
dec
jb
xor
mov
in
out
pop
or
pusha
jg
test
or
xor
test
pushf
add
loop
shll
lods
loope
mov
add
call
movntq
inc
dec
xchg
dec
or
stos
adc
jne
lods
jge
sbb
nop
push
mov
hlt
and
sbb
cmp
addr16
dec
sbb
inc
lods
xchg
dec
into
cmp
pop
push
hlt
lock
xchg
popa
aas
xchg
sbb
inc
mov
add
adc
jnp
mov
scas
stos
push
cmc
lods
adc
aad
pop
jp
out
jo
shr
mov
jmp
imul
cmc
inc
dec
xchg
pop
cli
add
cmp
or
push
jns
iret
gs
inc
pusha
outsb
push
ljmp
sbbb
add
adc
xchg
mov
cmp
ficoml
mov
push
insb
mov
jmp
jp
xor
pop
inc
sti
shl
leave
mov
xlat
xor
sahf
mov
inc
and
punpckhbw
push
jae
sarb
cmp
outsl
test
movl
dec
push
sbb
mov
sbb
movsl
add
add
mov
stos
jg
xlat
fstpt
xor
mov
push
negl
cmp
push
or
cmp
imul
push
mov
mov
pop
xlat
pop
jno
sbbl
in
icebp
outsl
addr16
cmpsb
mov
dec
scas
jmp
test
and
inc
sar
add
ds
inc
scas
add
es
add
cmp
adc
pop
and
out
testl
out
adc
cmc
pop
inc
and
repz
mov
pop
outsb
repnz
xchg
mov
or
mov
add
jb
testb
push
inc
inc
enter
mov
dec
push
pop
cmp
or
cli
mov
and
add
push
ret
adc
in
push
mov
push
add
pop
xchg
int3
mov
out
mov
iret
and
cmp
mov
lds
js
addb
jecxz
lret
call
xor
mov
into
test
call
adc
rcrb
push
sbb
xorb
mov
mov
pop
lcall
shrb
cmp
loopne
inc
cltd
pusha
aas
cmpsl
push
add
rcr
inc
sub
je
aas
dec
dec
jo,pn
push
push
sbb
into
inc
mov
push
or
inc
in
lods
xor
xchg
inc
std
mov
xchg
ljmp
mov
sarl
inc
mov
push
cmp
sub
test
xor
push
out
ds
fdivl
enter
inc
into
xor
xchg
dec
adc
mov
mov
idivl
bound
jg
dec
das
push
lds
pop
fnstenv
in
leave
xor
fwait
mov
imul
out
icebp
adc
xor
jb
jp
test
test
cs
sahf
add
inc
fdivs
mov
pop
sbb
sarl
call
fwait
lcall
mov
and
sub
xchg
jle
pop
in
jns
jg
test
or
dec
adc
pusha
popa
mov
mov
mov
loop
cli
nop
mov
mov
pop
mov
int
sbb
loopne
imul
inc
aaa
pop
mov
mov
loopne
cmp
push
mov
lds
push
call
mov
dec
push
or
add
and
adc
mov
cmp
pop
xor
hlt
jne
outsb
xchg
dec
jae
in
sub
icebp
and
movsb
jle
dec
cmp
adc
jmp
leave
mov
jg
mov
lods
ljmp
jo
imul
dec
fisubrl
out
cvtdq2ps
xchg
lcallw
rorl
aaa
xchg
sbb
pop
mov
stc
shll
or
adc
sahf
jmp
push
stc
or
sub
mov
or
aas
incl
cmp
xor
aad
out
cmp
jb
in
movl
fsubrs
pop
cmpb
add
aad
mov
xchg
aad
jno
fldenv
xor
imul
adc
fsubrs
inc
jae
adc
out
icebp
sti
mov
clc
out
test
int
xchg
in
pop
insl
fidivl
push
push
adc
xor
hlt
fscale
insl
dec
add
clc
cmp
mov
pushf
dec
ret
daa
sarl
mov
jmp
mov
jmp
or
jmp
mov
scas
loopne
sub
insb
ret
inc
push
mov
mov
movsl
mov
fwait
imul
in
sbb
ds
arpl
sbb
xchg
mov
mov
movl
dec
or
lcall
dec
outsl
lret
dec
bsr
icebp
mov
popf
out
stos
outsb
sub
fstps
sarl
out
jle
cwtl
xchg
sub
push
jne
push
mov
pop
out
or
push
aad
sbb
lcall
pushf
andb
and
popa
xchg
cmp
das
test
mov
clc
adc
mov
cmp
cmp
mov
icebp
sub
sub
jp
xlat
push
sbb
jo
dec
dec
mov
shll
mov
jbe
push
jae
xchg
into
mov
mov
xchg
xor
or
imul
test
in
cmp
jecxz
fcomp
cmpb
jb
mov
mov
inc
movsl
dec
mov
jae
fstpt
aas
and
push
inc
pushf
xor
insb
cmp
adc
cmpl
jnp
pop
add
ss
push
dec
mov
loop
pushf
pop
sub
mov
adc
cmp
push
aam
cmp
cmc
and
cs
sub
dec
aas
cmp
imul
das
test
mov
nop
ret
sbb
ret
test
add
sub
mov
cmp
inc
ljmp
push
pushf
cmpsb
cmp
xchg
jg
shrb
nop
jp
sbb
cmpsl
cli
xchg
int
pushf
mov
pop
push
dec
into
out
xchg
ficompl
vmovlps
push
test
in
dec
or
jnp
fcompl
cmp
sub
xchg
lcall
pop
dec
mov
xchg
inc
jbe
or
dec
sbb
mov
xlat
xorb
lock
in
lcall
fidivs
cli
mov
cltd
shlb
xor
mov
sbb
jl
dec
adc
cmpsb
adc
jo
pop
jb
jns
dec
inc
test
outsl
cmpsb
cli
and
insl
test
insl
mov
das
jo
sbb
mov
into
mov
imul
sbb
or
push
dec
fidivrl
call
xlat
cmp
lods
addl
bound
in
push
in
lock
push
ficomps
push
jmp
dec
cli
std
mov
call
cmp
cs
std
lods
push
outsl
mov
inc
movsl
aas
cs
cmpsl
cmp
outsl
adc
bound
shl
pop
leave
jecxz
pop
cli
push
rolb
jne
dec
sub
aas
mov
bound
dec
xor
pop
xor
ret
cld
mov
and
pop
mov
das
lret
filds
sub
out
pop
inc
sbb
mov
loop
out
mov
andl
testb
icebp
push
xorb
popf
in
rclb
jne
mov
mov
lods
and
subl
cmp
ds
inc
jle
adc
aam
inc
xor
test
fildl
ret
pop
fcmovnu
jecxz
mov
jne
inc
das
imul
mov
stc
fcmovb
test
divl
mov
cli
jp
enter
flds
adc
cld
push
adc
push
in
or
stos
sti
mov
xchg
bound
bound
int
mov
cmp
ss
xor
add
adc
jecxz
bound
ljmp
mov
jle
movsb
xchg
mov
fisubl
fwait
push
or
sti
sti
hlt
imul
add
or
loopne
hlt
and
scas
adc
enter
or
fisttps
pop
inc
lock
es
mov
adc
cwtl
jge
add
adc
fnsave
sbb
jl
fldenv
jo
lods
lea
xchg
add
repz
fdiv
mov
test
mov
or
packssdw
mov
cli
and
pop
rclb
pop
xor
mov
hlt
lds
push
adc
fistl
decl
push
out
fisttps
leave
shlb
jns
std
shlb
aad
mov
iret
shll
jbe
or
fs
mov
dec
jecxz
push
xlat
mov
mov
pop
or
mov
fwait
into
ja
shr
jo
inc
push
ss
xor
lds
bound
fsubs
xchg
testl
adc
push
cmpsb
popa
hlt
ljmp
adc
xlat
push
xor
andb
dec
mov
ret
or
les
cmp
dec
andb
or
in
pushf
add
pusha
ss
mov
adc
xlat
jl
adc
pop
fnstcw
ret
or
push
inc
outsl
xor
lds
out
cmpsb
cmp
cltd
jmp
pop
inc
inc
xor
icebp
push
hlt
loopne
or
insb
and
push
sbb
add
pop
mov
testl
inc
inc
jge
stos
sub
mov
cwtl
int
xor
ret
xor
pop
ds
cmc
cltd
mov
cmc
xchg
jno
pop
fs
out
sbb
imul
dec
xchg
ficomps
rolb
xchg
or
and
dec
and
jns
fisubrs
xor
call
stc
inc
xor
push
aam
arpl
mov
dec
jno
cmp
rorl
mov
push
mov
cli
in
cmp
inc
add
loopne
arpl
and
cwtl
and
mov
sbb
xor
aas
mov
bound
cmp
scas
sahf
sub
cmpsb
xchg
cmp
lock
shlb
imul
movsl
mov
fs
cs
cmp
mov
loope
dec
incb
sti
jl
ret
gs
xchg
imul
dec
sbb
loopne
xor
dec
insl
loope
outsl
push
xchg
dec
test
or
mov
leave
jg
pop
sub
xchg
je
and
sub
inc
aam
inc
mov
fisubrl
inc
push
add
lcall
aam
iret
mov
sbb
popf
fidivrs
int
inc
xor
sbb
iret
hlt
jae
aaa
test
test
fwait
aas
jbe
sbb
mov
or
inc
or
out
mov
dec
test
outsb
adc
lahf
ret
aad
test
pop
lret
pop
pusha
fisttps
test
jl
nop
enter
in
mov
scas
insb
pushf
inc
js
leave
pop
xchg
incl
adc
loope
add
and
loope
cmp
pop
scas
mov
jae
lret
pop
xchg
push
xor
cmp
in
fwait
jmp
jmp
pop
fisttpll
jp
jo
push
inc
jno
jns
or
dec
lret
cmpsl
fldt
mov
sbbb
inc
iret
gs
sti
fs
push
inc
jle
and
imul
jecxz
mov
mov
mov
das
sub
sub
sub
adc
push
sbb
sub
jae
or
push
rcr
in
adc
xchg
xor
xchg
into
repnz
pop
in
mov
mov
lods
pushf
adc
and
dec
add
xchg
lahf
test
mov
cmp
xchg
inc
fnstsw
sbb
dec
into
sub
or
or
sahf
in
jne
arpl
fcompl
add
int3
push
or
idivb
mov
iret
jae
fcmovu
scas
ds
hlt
sub
cmc
lret
sub
enter
daa
inc
call
mov
fwait
cmp
lret
bound
pop
andl
mov
push
lcall
jb
jp
or
pop
lret
repnz
mov
lock
push
dec
int3
out
pop
mov
cmp
movsb
std
adc
jp
adc
das
cli
scas
inc
jle
add
imul
leave
stc
mov
rcrb
loopne
mov
mov
fcmovb
repz
test
sar
push
push
or
cwtl
sub
lcall
pushf
je
sub
and
push
mov
cmp
mov
and
ja
or
add
ret
movsl
imul
lods
lds
cmp
dec
movsl
dec
std
cmp
je
cmp
flds
sub
xor
testb
mov
rorb
pop
adc
imul
mov
bnd
les
lods
shrl
push
jmp
fmull
pop
mov
xor
sbb
in
push
das
sbb
les
sbb
push
adc
das
test
daa
push
pop
addr16
fstpt
push
sub
sbb
bnd
inc
xchg
sub
lcall
shrl
outsb
adc
loopne
scas
adc
in
stos
in
sarb
cmp
lea
xchg
jl
lcall
mov
xchg
shr
jnp
add
and
cmpsb
lods
pop
pusha
xor
aam
inc
pop
test
cmc
mov
inc
ret
orb
les
nop
fidivrs
push
jmp
mov
in
push
into
xchg
dec
inc
push
sub
pop
outsb
sti
dec
mov
pushf
mov
rorb
mov
inc
mov
call
cmc
sbb
mov
cld
mov
insb
cwtl
bound
scas
jg
outsb
enter
inc
jp
xor
insl
mov
jge
cmpsb
out
sub
xor
sahf
sub
dec
cmpsb
icebp
mov
lods
adc
popa
fdivrl
sub
arpl
test
mov
out
jle
xor
fucomi
adc
push
mov
mov
sar
movsb
rcrb
xchg
inc
cmp
add
sti
loop
or
out
arpl
pushf
clc
sub
fs
sbb
jl
aam
jb
jb
mov
dec
dec
mov
sbb
fsubrl
xchg
and
pop
pushf
xchg
cltd
clc
sub
lea
call
mov
mov
fucomp
jp
mov
cmc
stos
call
stos
je
mov
filds
shll
and
inc
sti
or
cltd
call
pop
rcrl
fwait
and
js
ljmp
mov
add
es
xchg
out
int
push
cmpsb
js
mov
add
fldl
mov
repz
sub
fdiv
cmp
lods
test
add
dec
inc
leave
pop
jno
insl
lret
pop
dec
xchg
jp
stos
adc
jp
inc
pop
comiss
iret
es
int3
gs
push
int
cli
and
pushf
dec
xchg
sub
xchg
dec
add
inc
jp
pop
jb
cltd
inc
adc
jge
jmp
xchg
jmp
lods
mov
xchg
scas
jle
sbb
dec
fsubr
xlat
idivb
xchg
fiadds
pusha
loop
mov
sub
repnz
mov
mov
fidivl
cmp
cmp
lcall
cmpsb
pop
bnd
mov
and
jne
stc
hlt
dec
jns
cmp
fcmove
stos
enter
mov
test
cmp
mov
jl
shlb
test
fwait
outsb
jmp
cwtl
outsb
inc
lcall
or
sbb
xor
and
jp
hlt
nop
xor
roll
pop
mov
pop
adc
pop
in
out
test
mov
xor
dec
jmp
loopne
and
jp
lods
push
adc
sahf
mov
cmp
ljmp
cvttps2pi
fdivl
or
mov
in
xor
dec
jb
mov
cwtl
je
inc
inc
inc
icebp
loop
dec
dec
xchg
pop
dec
fmul
lods
sbb
nop
ja
dec
jne
aaa
and
ss
inc
test
inc
dec
push
fnstsw
adcb
pushf
cli
push
push
sahf
fcompl
loope
pushf
dec
pop
popf
cmpsl
lods
fstpl
dec
mov
cmp
out
xlat
cmp
movsl
mov
sbb
jns
push
or
jl
adcb
pop
cmp
mov
mov
inc
imul
push
mov
mov
push
frstor
icebp
jecxz
out
cld
push
icebp
daa
push
xchg
stos
mov
in
dec
data16
loopne
fldl
push
out
shrl
or
cmc
sti
les
push
rcl
pusha
sahf
inc
test
aas
xchg
sarl
gs
popa
ret
js
popa
scas
add
loopne
xchg
iret
repnz
mov
int3
mov
push
pop
push
adc
mov
jecxz
xlat
aam
mov
mov
or
sbb
js
jle
mov
adc
mov
jle
inc
dec
or
and
mov
pop
nop
out
xor
pop
and
adc
push
sub
jbe
xor
stc
adc
xchg
sub
lret
enter
jo
aam
push
mov
pop
xchg
loopne
adcl
mov
cmpsl
lahf
movsb
push
sbb
inc
out
ljmp
rcrl
push
sub
dec
push
mov
pushf
mov
xchg
push
add
rolb
cmp
aaa
jmp
add
inc
inc
jo
pop
jmp
and
mov
aas
dec
movnti
inc
sbb
cli
or
rorl
enter
call
push
xor
xor
in
test
in
roll
dec
lds
sub
insl
jno
ds
xchg
add
mov
movsb
or
adc
adc
popf
movsl
bound
sti
ret
add
das
mov
xchg
adc
adcl
mov
ds
lock
pushf
push
rcl
ffreep
mov
sub
inc
pop
dec
addl
push
repnz
mov
mov
sub
rorl
lock
mov
xor
pop
jb
popa
call
call
and
sub
sbb
arpl
mov
sub
arpl
add
js
cmpsb
sbb
mov
pop
jp
aas
push
push
imul
sub
sti
int
pop
sub
fsubs
daa
push
xchg
xchg
stos
ja
mov
pop
loop
sbb
dec
and
lods
add
lea
push
adc
mov
or
ljmp
ror
cmp
cmp
test
rorl
ljmp
out
and
cmp
hlt
shl
or
in
mov
push
jne
sub
mov
mov
dec
movsb
lods
mov
daa
test
push
outsb
andl
in
mov
int3
gs
ja
popa
jnp
inc
fnsave
mov
clc
into
add
mov
out
mov
xor
insl
dec
pop
stos
mov
test
sub
adc
cltd
xor
mov
jns
test
aas
out
pop
pop
sub
mov
mov
jl
push
scas
xchg
sub
jg
lock
sbbl
jge
mov
fdivp
jp
leave
enter
rorl
pop
mov
pop
inc
and
inc
xchg
fstpl
cmp
call
mov
xchg
cmpsl
call
ret
insb
aaa
or
in
fstl
mov
mov
dec
gs
mov
add
mov
push
and
sub
lahf
decl
cmp
push
mov
dec
mov
adc
mov
cmp
sub
mov
mov
je
lahf
imul
sbb
jns
data16
or
jl
add
adc
movsl
mov
push
xchg
mov
xor
dec
rclb
fcompl
test
out
mov
adc
std
push
mov
iret
pop
cli
jae
mov
cmp
inc
insb
je
push
pop
ss
lcall
shrl
lret
sbb
into
ret
inc
or
nop
push
xor
adc
lods
jmp
jnp
dec
adc
adc
out
cmovo
inc
jp
stc
andb
mov
xor
dec
dec
sub
lock
imul
cltd
test
xchg
out
and
je
js
call
jp
fistpl
inc
adc
enter
stc
pusha
dec
cltd
jge
inc
inc
sbb
jmp
jp
in
loope
jmp
ret
in
inc
lret
xor
lret
xor
push
mov
push
subl
ds
or
push
inc
jmp
rorl
mov
mov
xchg
cmp
clc
arpl
and
pop
ret
repz
push
cmpb
jns
xorps
ja
xchg
mov
in
sarl
and
lods
sub
loope
cmc
cmp
cli
cs
pop
cltd
stos
mov
sub
and
jne
and
xchg
stos
jne
imulb
fldpi
adc
pmulhuw
inc
dec
cmp
xor
clc
in
pop
rorl
sbb
clc
fisubrl
push
je
adc
movsl
and
jmp
push
ja
xchg
not
add
mov
test
pop
and
and
mov
mov
mov
stos
fsubrs
leave
lret
aas
and
xchg
out
and
xor
lea
orb
push
mov
and
popf
jge
mov
fsubrs
lcall
ljmp
xor
lea
or
sarl
xchg
call
ja
out
jmp
pop
or
mov
loope
int
data16
clc
dec
stc
scas
cmp
or
cmp
pusha
mov
insb
ret
add
aaa
jl
inc
decb
inc
cmp
inc
aaa
cpuid
std
cmpsb
mov
repnz
or
push
dec
lea
dec
and
aad
cmpsb
ret
test
movsb
push
dec
das
adc
push
das
cmp
or
jg
out
lods
popa
xchg
inc
dec
xor
add
in
pop
jne
mov
mov
sbb
inc
iret
outsl
jge
cmp
cs
cltd
sbb
sbbl
outsb
mov
pop
push
out
test
in
ficompl
xor
sbb
lods
jmp
cltd
stos
mov
daa
mulb
mov
daa
inc
out
jp
movsl
jg
lods
out
push
push
jnp
scas
ja
ss
outsb
rolb
mov
shlb
mov
sbb
movsb
js
mov
push
insb
sahf
ret
lcall
mov
and
or
sbb
sub
dec
inc
dec
stos
ret
in
fnstenv
dec
repz
mov
and
arpl
int
movsl
fadds
jae
push
mov
ret
or
sub
add
pop
loopne
fdivl
sbb
xor
sbb
xor
leave
lahf
and
shll
stc
jg
cld
movl
mov
rcrb
mov
sub
mov
xor
into
fs
mov
lods
call
or
std
imul
or
arpl
add
scas
xchg
cmpsb
push
jmp
loope
loop
lret
adc
xor
jg
ret
lret
push
push
inc
jge
cmp
ss
mov
pop
adc
outsl
pusha
jmp
pop
push
xchg
ds
fistpll
xchg
out
popf
mov
mov
dec
cli
das
pushf
roll
or
jno
cmp
iret
repnz
mov
push
push
mov
mov
aas
fistpll
imul
mov
data16
lock
aad
test
mov
xchg
pop
push
enter
mov
pushf
popa
xor
sbb
dec
aaa
adc
mov
sbb
cltd
fcoms
enter
and
sarb
pop
add
pop
lock
xor
subb
aad
and
mov
pop
xchg
cmp
fcmovb
scas
cs
pop
mov
andb
pop
sub
mov
and
daa
xlat
test
lret
mov
pop
in
fstps
notb
scas
mov
cld
and
sub
xchg
or
adc
js
sbbb
in
test
pushf
jns
sahf
insl
xor
popf
cli
repz
and
mov
add
fdivrs
loopne
pop
insb
sbb
stos
jecxz
test
movsl
scas
test
xor
jne
mov
jae
in
lock
mov
inc
xor
lahf
test
dec
push
fucom
jae
cmpsb
dec
push
and
inc
sbb
cwtl
pop
xchg
addr16
inc
sbb
xchg
xor
xchg
aam
ret
repnz
xchg
aas
loope
mov
enter
xchg
cwtl
repz
sbb
dec
jo
mov
pop
inc
ficompl
fcmovnbe
push
std
adc
fldl
insb
or
push
or
nop
mov
push
adc
outsl
push
subb
in
nop
push
pop
pop
inc
push
outsl
mov
jg
cli
dec
pusha
pop
loope
repz
sbb
mov
adc
jmp
and
les
cmpsb
push
dec
mov
push
sub
jecxz
cmpl
scas
mov
loopne
sbb
xor
ja
sbb
inc
mov
insl
je
into
add
lea
push
lret
and
dec
dec
shrl
ret
inc
inc
jmp
outsb
fisttpll
icebp
or
rolw
fs
sarb
sbbl
aaa
sbb
lret
sahf
lret
sti
add
andl
pushf
stos
std
clc
lds
inc
aas
iret
adc
sarl
cs
je
es
dec
push
mov
jmp
hlt
out
dec
rorl
push
fs
cmp
fcmovbe
cmp
add
jno
adc
icebp
bound
sub
or
mov
mov
dec
rol
mov
sbbb
pushf
cli
sete
mov
adc
negb
xlat
or
or
dec
aaa
inc
test
imul
lock
mov
repz
in
mov
aam
jne
inc
in
subl
fldenv
in
je
jge
lods
lods
jmp
mov
xchg
aam
cmp
ja
lahf
jne
xor
mov
stos
cwtl
sub
xchg
sub
jb
cmc
lds
jp
pop
out
lret
mov
leave
mov
and
mov
or
dec
das
jb
sub
jge
scas
push
out
xchg
movsl
repnz
mov
jo
push
jle
dec
je
sub
fadd
xor
inc
push
add
cmp
push
add
lea
aas
outsl
test
arpl
sub
in
ja
mov
shrb
std
cli
sarl
push
and
xor
and
aas
sbb
rolb
minps
mov
movsl
sub
clc
push
cmp
loopne
sub
push
push
aad
imul
mov
roll
movsb
jno
push
out
xchg
sbb
in
dec
lds
fstpl
in
std
add
cmp
inc
xor
iret
negl
or
sub
mov
lods
popa
xchg
adc
dec
sub
les
scas
sarb
sub
fsubrs
cli
pushf
push
clc
mov
ds
jge
out
data16
loop
or
pop
pop
add
daa
ljmp
mov
mov
mov
pop
fistpl
les
ljmp
scas
jge
mov
sbb
fstpl
adc
arpl
and
mov
out
adc
xor
cli
js
add
addr16
ror
and
sub
or
ljmp
and
jp
lcall
daa
xchg
add
iret
push
cmc
sti
jb
or
mov
add
jae
ljmp
pop
push
daa
fistpl
jl
push
add
push
iret
imul
xchg
incl
popa
xor
sub
pusha
test
pop
nop
mov
xor
cmp
mov
ror
stos
pusha
push
xchg
dec
out
mov
outsb
scas
cmp
dec
pop
into
test
hlt
inc
push
xchg
xor
sub
cmc
iret
aaa
test
stos
xlat
mov
cmp
into
mov
mov
push
xchg
cmp
bnd
mov
jo
mov
jg
dec
insb
jbe
push
or
push
stc
cli
pop
xor
fldz
push
adc
push
jb
or
jge
es
add
mov
bound
mov
pop
jno
stos
in
add
inc
push
out
aaa
sub
mov
sahf
fstl
fcompl
jbe
mov
mov
inc
dec
sbb
push
mov
add
xchg
and
fsubrl
inc
icebp
fdivrp
xchg
xor
pop
rcl
sahf
and
cmc
arpl
pop
cltd
mov
das
js
mov
mov
ror
shll
pushf
jbe
mov
xchg
pop
xor
sbb
pop
aaa
idivl
and
out
aam
cmp
or
stos
jnp
jne
sub
daa
and
movsl
xchg
outsl
sbbb
outsl
push
xchg
mov
xchg
int
push
mov
lret
out
orl
enter
push
or
insl
out
test
in
loope
loopne
mov
or
in
pop
jge
out
ret
push
or
sahf
sub
sbb
sbb
in
cmp
add
pushf
je
adc
lret
sub
cltd
outsl
jns
mov
aad
sub
sub
push
dec
mov
mov
add
testb
pop
jecxz
shrb
and
cmp
sub
out
lock
incl
inc
push
cmpb
mov
lahf
out
outsl
push
lret
xor
xchg
pop
inc
scas
mov
int3
es
in
pop
stc
push
jbe
daa
or
addr16
sbb
loop
ret
push
dec
push
sub
jle
ja
int
and
sub
mov
jo,pn
mov
xor
in
repnz
pop
rcll
add
xor
das
jnp
stos
aas
clc
lahf
ds
mov
shl
push
pop
lds
mov
imul
mov
adc
xchg
adc
sbb
inc
mov
or
xchg
mov
push
and
lea
lods
mov
dec
xor
mov
sub
je
pop
lds
ljmp
xor
dec
push
ss
add
fcomi
xchg
xor
pushf
sbb
mov
ljmp
imul
mov
lea
das
imul
test
adc
xor
mov
pop
add
mov
out
mov
inc
mov
xchg
psubw
and
lock
pop
jg
sbb
std
inc
push
jp
inc
jmp
sarb
cmp
sti
cmp
xor
pop
xchg
cltd
fdivl
test
sub
and
xor
mov
test
pop
cltd
mov
or
cmpsb
enter
push
cmp
cmpsb
mov
insl
mov
or
pop
and
xchg
add
dec
sub
pop
sarl
in
jle
lret
xchg
jl
adcb
pop
dec
jl
test
dec
int3
xchg
xor
loopne
add
sbb
cmp
cmp
pop
inc
push
adc
lock
mov
stos
jae
mov
cmp
das
add
dec
xorl
adc
or
test
sbb
stos
push
jnp
aaa
aas
xchg
cmpsb
add
call
pop
cmpsb
inc
shll
sub
jb
pop
adc
fucom
sbb
cmp
addr16
mov
add
fldcw
sarl
xchg
add
sub
stc
cmp
cmp
mov
sub
cs
clc
mov
ss
xor
hlt
insl
in
sbb
iret
std
dec
xorb
or
xor
add
pop
les
std
jmp
mov
loope
loopne
dec
mov
inc
add
xor
out
out
ror
mov
xchg
in
repz
std
sub
mov
and
cmc
sbb
mov
inc
shlb
mov
sti
add
jo
mov
xchg
shr
popa
or
pop
test
sub
add
out
push
call
fisubl
mov
outsb
dec
mov
push
insb
fcompl
fidivrs
mov
sbb
mov
push
add
dec
push
fwait
mov
sbb
adc
test
add
jns
daa
std
cmpsl
leave
add
xchg
clc
scas
aas
xchg
jle
sti
ljmp
sub
or
push
push
jmp
jbe
adc
mov
ficoms
mov
or
mov
jle
adc
and
pushaw
fistpl
and
and
mov
push
mov
orl
mov
sub
sub
inc
mov
imul
jp
and
cmp
cmp
incb
ret
xchg
es
mov
pushf
adc
insl
loop
loope
test
jg
stc
mov
pop
hlt
cwtl
popl
dec
aam
dec
je
shl
fistpll
cmp
adc
fildl
push
mov
stos
aaa
mov
ss
movsl
mov
fwait
cmp
ljmp
lret
pushf
mov
push
adc
cmpsl
push
std
dec
jnp
fsub
inc
or
ljmp
sti
mov
pop
mov
arpl
ljmp
pusha
test
mov
xchg
pop
xor
jbe
fwait
inc
fbld
scas
js
cmpsb
mov
add
add
test
in
mov
ss
xor
fistl
dec
movsb
and
mov
adc
mov
pop
data16
add
sbb
sub
push
adc
out
lock
jge
popa
xor
in
popa
push
xchg
loop
cwtl
ds
mov
pop
out
icebp
out
add
push
jle
push
test
xor
shll
enter
out
clc
add
sbb
out
ret
mov
or
fsubrl
jge
push
das
sub
xchg
add
fsubs
lea
popa
ret
lcall
jp
push
lcall
mov
cmp
aas
test
mov
cli
jnp
mov
ret
iret
stos
inc
xor
fidivrl
mov
mov
inc
sbb
mov
and
call
cmpsb
pop
std
mov
cmp
loope
popf
jg
mov
aaa
add
xchg
test
mov
scas
pop
jle
mov
add
aad
fldt
mov
mov
popf
inc
pushf
and
shll
inc
sarb
ds
gs
out
inc
push
adc
insb
cmp
adc
pop
mov
inc
lea
adc
pop
adc
mov
lea
adc
dec
js
cmp
pop
std
lods
icebp
ss
mov
fcoml
xchg
add
jle
dec
sbb
lahf
dec
jne
js
and
adc
incl
hlt
pusha
stc
adc
sahf
cwtl
jmp
pop
or
pushl
push
inc
mov
lret
rorb
xchg
sti
push
repnz
sbbb
in
fcoml
dec
lret
inc
mov
push
int3
pop
sahf
shlb
scas
xor
push
fldcw
cmp
mov
ret
outsb
loop
cld
inc
push
sti
test
test
add
inc
icebp
cmp
xorl
push
or
mov
fldl
lret
add
add
push
lahf
popa
fsubs
lea
in
jns
ret
sbb
dec
pop
call
sub
pop
rorl
fnsave
add
insb
int
stos
jo
flds
jp
push
mov
add
lds
pusha
sti
faddl
or
xor
out
xchg
pop
sti
xchg
dec
cmp
sub
les
xchg
inc
jge
and
sub
xchg
inc
popa
push
cmpsb
cmp
das
mov
lcall
xchg
mov
daa
mov
daa
pop
push
cld
sbb
aad
fmulp
aaa
xchg
mov
loopne
cs
jb
imul
sbb
cmp
jbe
sti
movsl
mov
shrb
or
std
and
jns
mov
cmp
jnp
xor
xchg
addr16
push
les
rcrl
arpl
or
and
push
cli
loope
lds
dec
adc
jb
mov
push
leave
into
test
iret
idivl
xor
inc
dec
or
leave
and
repnz
or
jns
dec
dec
pop
rolb
mov
aas
outsb
xor
xchg
mov
loop
iret
fnstenv
or
lods
mov
outsb
jge
in
adc
scas
adcb
push
pop
push
xor
and
out
rolb
das
dec
orl
in
arpl
ss
push
lret
mov
into
lea
lods
inc
cmp
ljmp
xchg
and
out
push
das
movl
jecxz
cs
sub
mov
sbb
stos
ret
xchg
movswl
xchg
sub
les
test
sub
out
adc
and
xor
lret
xlat
push
stos
mov
andl
ds
ret
js
call
xor
insb
cltd
push
xchg
jbe
push
fnstsw
adc
orb
mov
dec
mov
test
lods
xor
mov
jle
xor
jns
xchg
mov
push
mov
or
or
test
inc
movb
ss
in
xchg
push
fcomi
lret
scas
iret
subl
iret
push
cmp
adc
and
fnsave
popf
das
notb
in
dec
add
fidivrl
popa
ljmp
movaps
mov
and
and
ja
push
or
add
jl
scas
into
ss
stos
data16
je
xchg
andb
sti
lahf
mov
mov
cmpsl
mov
nop
mov
push
mov
mov
inc
or
aas
shrl
pop
inc
or
xchg
sub
lock
rclb
or
cmp
movsb
icebp
mov
popf
jnp
sub
test
dec
fcmovu
add
pop
sub
xchg
mov
sbb
xchg
or
or
xor
xchg
sarb
xchg
div
mov
test
xchg
iret
call
aam
dec
mov
push
inc
add
sub
fucomp
push
or
dec
cmpsb
adc
out
mov
xchg
ret
and
cld
or
pop
fwait
pusha
movsl
xchg
roll
lcall
xchg
or
fwait
cmpb
std
inc
pop
in
insb
mov
inc
call
test
out
add
in
test
mov
scas
gs
xchg
mov
or
lods
jbe
lods
adc
adc
mov
repnz
insb
stos
push
in
mov
adc
sub
lock
push
icebp
mov
inc
mov
push
or
jecxz
cmpsb
pop
push
icebp
std
push
movsb
mov
fwait
mov
aad
nop
movsb
clc
cmpsl
xchg
xor
leave
out
mov
sbb
xchg
test
repz
sahf
clc
xor
stos
movsb
push
fists
push
lahf
jo
xchg
fildll
push
cmc
sbb
and
dec
shr
dec
call
push
jns
shrb
sub
mov
and
and
inc
adc
jne
clc
test
shlb
jecxz
clc
sti
loop
gs
mov
ss
scas
push
popf
sbbb
xchg
jge
hlt
and
cmpsb
inc
sub
test
jp
hlt
add
and
inc
fdivs
xlat
pusha
int
test
pop
jp
dec
lcall
inc
jae
ja
dec
sbb
push
pushf
xor
add
fadd
sub
movsb
mov
push
negl
outsl
xchg
mov
adc
inc
mov
fwait
pop
cld
cmp
cwtl
pop
add
ljmp
or
sub
adc
jp
and
outsl
cltd
or
ja
push
xor
inc
push
mov
scas
cs
jbe
or
subb
scas
pop
or
cmp
scas
cmp
shlb
push
push
movsl
push
aam
fcmovne
sub
adc
nop
repz
mov
mov
cmp
in
insl
or
ds
jmp
outsl
add
repnz
push
inc
pusha
xchg
imull
jbe
push
jge
or
addb
aas
xchg
mov
sti
pop
push
sti
push
test
repz
sbb
cmp
mov
imul
mov
jne
shl
lock
out
jns
fcompl
ss
cs
pop
xor
jmp
fildll
fildl
xchg
in
mov
adc
add
xor
icebp
dec
adc
in
es
mov
jge
sbb
add
mov
adcb
fs
popa
sbb
mov
push
out
cli
adc
out
negl
mov
in
jmp
aad
add
std
sub
stos
mov
push
into
xchg
add
mov
sub
jle
mov
addb
mov
lods
or
int
add
or
sti
push
insb
scas
ds
shrl
je
jge
test
popf
fs
pop
mov
leave
push
inc
push
clc
push
push
cmp
stos
sbb
aam
mov
test
xor
sbb
pop
xchg
mov
sbb
cwtl
cmp
mov
xchg
mov
jg
lock
aam
lock
lcall
jge
sti
pop
pop
test
jns
jnp
popf
repnz
mov
xor
repnz
dec
in
jg
ja
daa
jns
xor
push
cmp
shlb
fwait
lret
push
cmc
adc
mov
sarb
push
push
daa
dec
lock
je
popa
adc
pop
cmc
sbb
jg
data16
out
xor
pop
inc
aam
outsb
std
int
test
adc
div
les
mov
add
adc
mov
mov
sarb
in
ds
pop
mov
sti
repnz
je
xchg
and
fildl
ret
jmp
lahf
push
loopne
lret
and
add
lds
sub
mov
xchg
mov
es
pop
sbb
int
push
xchg
shrl
pop
cmp
mov
roll
fsubrs
sub
or
jmp
dec
sti
add
je
data16
mov
fbstp
mov
fnstenv
ret
lds
loop
cwtl
jl
outsl
pushf
pushl
or
lock
and
shrb
or
adc
adc
or
adc
cld
pop
add
push
mov
mov
dec
jbe
scas
sub
cltd
jecxz
ret
les
xchg
aad
popl
call
push
dec
pop
inc
inc
xor
dec
sti
cmp
cmp
rcll
ret
cld
iret
leave
xor
enter
adc
jne
ss
xchg
or
jae
adc
sub
cmc
mov
loope
sarb
cmpl
and
cmc
je
and
sti
sub
gs
test
mov
addr16
jl
or
push
push
scas
jae
push
call
shll
push
test
jle
mov
xor
fwait
repnz
mov
mov
mov
lcall
scas
movsl
inc
push
sub
cmp
aam
jo
sarb
xchg
jns
mov
dec
sbb
dec
pusha
sbb
dec
push
xchg
pop
stos
sbb
jmp
movsl
and
and
mov
mov
sti
sub
aam
and
dec
iret
mov
dec
les
mov
addr16
clc
xchg
or
and
int
std
or
sti
jg
movsb
mov
mov
or
repnz
sub
inc
mov
enter
add
rorl
lods
out
loop
adcb
pop
and
jg
stos
mov
sbb
aam
in
in
and
jo
cld
insl
test
inc
insl
cmc
xchg
lea
jae
stos
fdivl
shll
or
out
gs
and
inc
stc
pop
js
and
mov
add
repz
adc
add
test
aas
fcomi
mov
stc
sahf
inc
out
xor
sbb
cmc
sub
add
cmpsl
mov
mov
mov
mov
jecxz
insb
mov
fcomi
sub
jbe
repz
scas
ljmp
fisubrl
mov
aaa
xchg
faddp
push
cmp
outsl
loopne
or
xor
fldl
push
push
push
iret
push
pop
gs
in
ficoml
pop
movsl
in
loopne
std
push
push
gs
dec
stos
inc
iret
imul
stos
fs
sbb
pop
ret
loopne
xchg
jne
jg
hlt
fs
push
scas
adc
xchg
push
stos
nop
fcomps
push
test
sbb
pop
lahf
jmp
mov
inc
mov
movsb
repz
test
aad
js
pop
mov
pop
add
mov
jno
cs
sahf
jecxz
sub
adc
jae
int3
mov
sub
or
dec
int3
xchg
or
add
nop
fcmovnb
add
xchg
xor
mov
fpatan
hlt
ds
js
ret
jl
or
jb
mov
jns
and
lds
movsl
mov
mov
pop
mov
or
sbb
push
mov
in
lds
jp
rcrl
js
inc
sar
inc
and
gs
and
rolb
dec
dec
jmp
sbb
sbb
push
pop
movsb
sub
scas
rep
push
inc
push
pop
pop
xchg
push
sbbl
sbb
inc
fisubrs
nop
pop
xor
scas
jge
repz
lock
dec
ret
ret
push
loopne
bound
jb
loopne
mov
loope
and
sbb
es
xchg
xchg
xchg
fs
xor
repz
rcrl
xlat
dec
sbb
mov
ds
adc
stos
ss
pop
xchg
inc
jo
dec
and
decl
or
mov
cwtl
cmp
fwait
jb
cmp
fiadds
pavgw
jle
into
pop
ja
mov
cli
bound
sbb
jbe
and
lods
dec
and
cmp
adc
shrl
hlt
push
cmc
sbb
xchg
xchg
adc
add
or
jecxz
scas
subb
stc
fisubrs
in
lcall
sbb
adc
jl
and
or
jg
stc
out
movsl
repz
pop
inc
pop
cltd
mov
xchg
lcall
ljmp
cmp
and
test
repnz
xorb
jae
mov
scas
inc
xor
sbb
mov
dec
ret
add
fs
scas
xor
dec
push
mov
sub
inc
ja
and
jnp
xor
fcoml
inc
jecxz
clc
out
xchg
or
imul
sub
aaa
mov
addl
and
sbb
sti
sahf
jmp
pushf
lods
and
dec
pop
add
icebp
or
sti
fwait
data16
push
inc
and
push
subl
jge
sbb
sbb
call
es
std
sub
cmp
sub
test
lret
mov
das
outsl
adc
cmpsl
lods
and
mov
and
ja
push
ret
les
das
pop
xchg
add
cmpsb
pop
inc
shrl
iret
int3
xlat
mov
sub
pop
and
insl
add
add
clc
cmp
xchg
push
fst
out
push
jno
stc
fistps
cwtl
dec
gs
loop
xchg
outsl
aad
movsb
imul
dec
ljmp
arpl
sbb
outsl
ret
jo
hlt
test
fs
push
sbb
ret
sub
fstl
imul
movd
pop
test
ja
cld
push
dec
xchg
adcb
lods
in
push
xor
mov
and
inc
adc
adc
xor
rclb
cmp
cmp
dec
jecxz
lahf
test
into
push
ret
mov
negb
adc
sti
jl
stos
rorl
in
popf
jno
mov
repnz
push
nop
lahf
inc
nop
push
insl
daa
push
cli
xor
nop
xchg
stc
inc
arpl
adc
pop
xchg
leave
loop
mov
loopne
imul
rorb
cmp
stos
xor
mov
cmc
push
push
sub
xor
leave
jp
push
or
lahf
inc
jle
ret
clc
jp
fcoml
aam
addr16
cltd
sbb
repz
mov
test
in
inc
mov
jno
mov
aam
hlt
adc
lock
test
jg
iret
jns
insl
rcl
pop
cmp
inc
sbb
fistps
or
scas
sub
xchg
pop
in
cmp
pop
jnp
sub
insb
notb
cmpsb
stc
cmp
mov
ss
inc
cmp
cltd
cmp
in
neg
push
xchg
jne
inc
push
ret
cs
bound
xchg
ds
test
and
jns
testb
ret
pop
adc
sbb
mov
sbb
imul
inc
mov
mov
push
lds
and
and
gs
dec
fildl
fsub
mov
mov
xlat
daa
push
ret
ljmp
xchg
lret
and
dec
jecxz
inc
inc
push
test
fidivrl
adcb
dec
cmp
imul
pop
pop
pop
xor
or
ja
mov
xlat
aam
mov
push
inc
data16
les
add
leave
push
or
addr16
pushf
insb
iret
rcl
hlt
loop
insb
cmc
adc
cld
lret
adc
jge
pop
in
mov
lret
out
fdivrl
dec
negl
xchg
or
xor
fldenv
insb
repz
aaa
adc
mov
xchg
jmp
xchg
pop
push
sbb
mov
rcrb
or
out
lahf
cmp
fnstsw
push
in
xor
dec
and
data16
mov
push
out
pop
dec
xchg
popl
inc
stos
mov
addr16
adc
ja
or
sub
lcall
cld
cmp
in
sub
push
movsl
sbb
dec
jns
and
jbe
or
dec
xchg
cmp
rorl
mov
incl
mov
rcl
and
cmpsb
ja
add
jbe
ljmp
push
ljmp
js
cli
mov
stos
sub
sbb
adc
aaa
rcrb
rcrb
pop
popf
nop
dec
mov
adc
pop
pop
or
lret
xchg
movsb
leave
sub
rcrl
sub
ss
mov
pushf
push
jb
jl
xchg
mov
pop
sbb
stc
jb,pn
aam
adc
shrl
idiv
mov
mov
adc
and
out
lds
std
das
shll
imul
pop
jp
cmc
or
scas
jmp
loope
loopne
inc
jle
les
push
pop
mov
cmpsl
inc
xchg
iret
jb
int3
setne
mov
lret
dec
inc
xchg
mov
cmpsl
add
fistl
js
xor
js
test
dec
or
lods
nop
push
ds
cmp
push
mov
ds
pop
sbb
jno
popa
fstpt
pusha
inc
int
sbb
popl
leave
call
pop
push
dec
dec
scas
inc
js
xorl
sbb
jb
sbb
push
iret
cs
out
mov
into
xchg
int3
push
push
std
test
cmpl
repz
fsubp
cli
outsb
out
shrl
divb
int
pop
rcl
dec
inc
icebp
xchg
push
das
ret
and
mov
jbe
or
fdivrl
lock
sub
test
sub
dec
roll
xchg
jne
lahf
lahf
fs
adc
je
popa
jbe
movsb
into
stos
and
imul
rorl
lock
js
pop
mov
jb
mov
add
scas
mov
jns
int
sub
xchg
jo
lcall
jle
ds
clc
incl
lock
repnz
push
cwtl
roll
inc
mov
jne
daa
sahf
xchg
push
fisttps
in
push
shll
mov
sbb
lahf
into
repnz
mov
in
mov
inc
add
loope
inc
jne
add
in
adcl
fstp
pop
in
add
shll
outsl
mov
xorl
loopne
push
mov
push
mov
mov
dec
out
sbb
xchg
lret
or
jle
dec
cmpsl
or
pop
xchg
pusha
test
sbb
sbb
aas
sahf
cmc
jp
cltd
clc
repnz
cmc
shrl
jg
pop
fs
subb
pop
mov
std
and
popf
outsl
and
pop
add
imul
scas
cltd
aad
rcl
pop
fildll
rcll
xchg
imul
shll
test
inc
fimull
mov
push
push
jmp
sub
pop
mov
imul
ret
ljmp
popf
cmp
cmp
sub
mov
jmp
cmp
popa
leave
ficoms
lods
fisubrl
ficompl
cmp
test
addb
mov
pop
adc
decl
sub
imul
jns
push
lds
xchg
js
lahf
fistps
add
mov
add
mov
ja
mov
sub
inc
dec
inc
int3
std
adc
aam
es
push
fisubs
hlt
pop
mov
sbb
shll
ret
pop
ficoms
jge
fxch
and
mov
jnp
jmp
jp
cmp
dec
sbb
mov
mov
or
pop
outsl
xor
mov
mov
push
loop
pop
insl
mov
pop
and
call
test
add
pop
sub
fistpll
mov
pop
xchg
and
dec
nop
sbb
stos
cmp
pop
test
jb
adc
and
js
lods
jo
xchg
cmp
div
or
scas
test
push
mov
testb
std
sbb
roll
mov
cmp
test
inc
insl
ljmp
or
mov
inc
mov
mov
dec
pop
xchg
push
aaa
dec
lcall
or
imul
adc
aas
popa
cwtl
pop
fcomps
adc
fsubrs
lret
cwtl
insb
loopne
repnz
shl
das
jp
lret
div
sub
push
xor
hlt
mov
iret
outsb
add
and
fcompl
mov
scas
out
jb
orl
nop
pop
jbe
inc
ret
sub
mov
push
mov
repz
add
frstpm(287
push
addb
enter
mov
dec
test
and
pop
in
sub
imul
scas
mov
mov
pop
cmpsl
sbbb
mov
sbb
movsb
push
popf
flds
sbb
push
dec
test
jge
into
pop
lret
fsubr
popa
jmp
mov
dec
popf
test
movsb
pop
xor
js
mov
jne
inc
sbb
pop
adc
sbb
sbb
lea
mov
out
adc
push
or
js
fidivrs
popf
push
data16
or
push
test
or
mov
shrl
repnz
push
jb
loopne
or
test
pop
or
or
pop
js
imul
dec
jns
fcoml
stos
out
ret
mov
dec
int
mov
je
pop
pop
sti
pop
mov
ror
pop
outsl
stc
aam
das
popa
xchg
jle
pop
mov
mov
std
adc
mov
jl
stc
mov
adc
dec
cmovno
gs
out
fwait
gs
jne
mov
jne
push
pop
mov
mov
sbb
pop
bnd
imul
and
out
cmc
clc
inc
fcomps
pop
jge
repnz
xchg
adc
shrb
stos
rol
mov
add
jmp
push
xchg
sub
cmpsl
cmp
mov
add
cmpsl
aam
mov
lods
in
addl
icebp
clc
push
add
jo
mov
imul
loop
aad
adc
lret
lds
inc
bound
leave
outsl
mov
push
or
pop
adc
es
aad
xchg
adc
push
lods
lahf
or
xchg
or
bound
push
pushl
push
jno
aaa
pop
adc
out
add
dec
push
mov
xor
orb
dec
dec
sahf
clc
push
and
cmp
test
outsb
shrl
bound
loop
cmp
xchg
inc
std
ds
or
pop
sub
add
jmp
jns
push
push
stos
fs
aas
inc
adc
jl
jmp
dec
das
inc
lcall
cli
movsb
scas
mov
fadd
adc
push
repnz
lahf
movsl
push
loopne
daa
fwait
fwait
xchg
adcb
lods
stos
dec
ss
andl
loope
nop
stc
out
bound
mov
jbe
pop
out
add
pop
lods
mov
fdiv
mov
mov
and
insb
sbb
cltd
mov
push
push
push
jge
push
lahf
push
xchg
popf
mov
mov
sti
jp
frstor
dec
scas
jmp
pop
stos
std
push
cmp
ljmp
sbb
xor
dec
adc
jae
mov
cmp
cmp
fdivl
dec
lods
dec
sub
jg
jne
les
rcrl
sahf
decl
lahf
xchg
cmp
add
fbld
fmul
mov
popf
in
movsl
cmp
enter
js
adc
mov
pop
into
sub
pop
mov
sub
imul
test
shlb
lea
inc
jmp
pop
or
aam
sub
sub
mov
push
xchg
imul
xchg
mov
or
adc
popf
sbb
pusha
sbb
cmp
int
mov
in
pop
sti
je
popf
adc
scas
pop
shl
sbb
sub
js
lcall
push
or
stos
lock
inc
xchg
movsl
leave
sbbb
in
repz
sti
in
divl
out
fsts
out
roll
mov
cmp
imul
in
lea
dec
aad
push
lahf
ja
int3
xchg
fwait
jno
jp
testl
mov
lds
lea
cltd
bound
push
sbb
jecxz
push
pop
and
sbbb
inc
sbb
daa
cmpsb
adc
xchg
and
inc
jnp
xor
jle
mov
je
bound
frstor
insb
jl
mov
subb
sbb
sbb
ret
xor
mov
jecxz
jns
test
cmp
pop
fstpt
add
adcb
jg
inc
push
jecxz
jge
push
lods
xchg
mov
mov
imul
add
hlt
shll
push
jl
stos
aam
fwait
push
and
pusha
xchg
lcall
adc
add
jp
fadds
inc
aas
out
adc
mov
cmp
aad
pop
bound
les
sub
jp
sub
xchg
xchg
call
inc
mov
xchg
cltd
arpl
pop
syscall
add
test
shll
rorl
mov
ret
fcomp
out
lods
push
movsl
fsubrs
cmp
adc
push
cmp
or
xlat
mov
loope
xor
mov
xchg
notl
shrb
and
dec
sbb
pop
pop
cltd
aas
sbb
repnz
jns
or
dec
test
inc
and
aad
mov
shrb
insb
sbb
popf
outsl
jp
push
dec
cwtl
clc
fisttpl
das
mov
loopne
sbb
test
loopne
and
inc
adc
sub
dec
and
loopne
adc
ss
stos
movl
mov
nop
cmpsl
in
in
loope
mov
mov
or
sub
xchg
call
cli
jo
das
mov
adc
nop
push
mov
inc
mov
repz
je
sbb
cmp
imul
pusha
mov
xchg
xor
mov
and
and
or
sarb
xchg
cmp
lret
and
push
movsb
out
inc
pop
pop
push
mov
push
inc
xor
xchg
xor
repnz
dec
rorl
test
divb
arpl
insb
in
daa
in
mov
orb
gs
nop
sahf
and
jo
inc
pop
stc
test
negl
scas
or
out
icebp
cmp
xlat
xchg
arpl
push
dec
out
cmpsl
adc
fsts
imul
or
xor
imul
in
scas
or
stos
jg
addr16
push
push
std
mov
dec
cmp
test
inc
das
leave
js
sbbl
adc
mov
sub
xchg
jb
mov
les
mov
shll
jns
rorb
in
pause
sbb
in
xchg
pop
inc
rcrb
xor
pop
cwtl
push
mov
cmp
pusha
xchg
push
cli
jne
push
out
lods
hlt
enter
fwait
lock
jg
pop
mov
daa
mov
sub
push
lds
xor
movsb
push
cmp
pop
ret
push
mov
mov
cs
addr16
xor
stos
or
add
xchg
je
call
pop
dec
sbb
xor
add
push
sub
inc
rcr
inc
gs
jo
xor
dec
jno
cmp
sbb
lret
ljmp
jo
add
test
mov
roll
jns
xchg
mov
pop
cld
cmp
push
push
push
inc
lds
lods
jp
sbb
movsb
scas
xchg
mov
mov
movsl
adc
aad
adc
jnp
sti
nop
dec
addr16
mov
subb
sbb
int3
dec
notl
imul
sub
mov
mov
or
and
mov
push
sub
add
sbb
imul
outsb
xchg
push
inc
jnp
add
in
jp
int
mov
pop
push
fisubrl
iret
shl
dec
jge
sub
pop
out
dec
adc
paddsw
mov
cmp
adc
mov
jge
gs
or
test
adc
adc
add
add
into
nop
notb
sub
gs
pop
cmp
pusha
fcmovnu
rcrl
in
xchg
aas
lcall
lret
scas
add
jne
inc
out
mov
sub
inc
je
loopne
xor
mov
cwtl
je
dec
sub
push
mov
push
mov
out
lods
nop
sub
or
jae
addl
icebp
push
pop
or
cmp
jmp
sbb
aaa
xor
sbb
imul
sahf
dec
push
stos
fs
out
jg
and
js
lahf
pop
out
mov
cmp
mov
arpl
mov
fsubs
sbb
mov
stc
aam
cmp
loop
push
test
mov
scas
out
cmp
push
mov
out
into
adc
daa
nop
mov
pop
xchg
test
add
xchg
pop
loopne
bound
mov
add
or
dec
mov
rclb
mov
add
enter
aad
xchg
daa
adc
addr16
jns
fcomps
jb
mov
pop
adc
adc
cld
inc
mov
mov
addr16
es
loop
inc
lock
jae
sub
cmp
adc
xor
inc
push
inc
xchg
into
xchg
cli
hlt
add
cltd
ss
mov
repz
cmp
int
dec
pop
mov
scas
add
xor
mov
and
sbb
mov
adc
xchg
cmpsl
inc
aam
push
and
in
cmpsl
dec
sub
divb
test
mov
fwait
aad
pop
add
and
adc
stos
icebp
loopne
pop
mov
fldcw
aad
out
jp
inc
aaa
into
std
fldenv
mov
xchg
mov
sbb
xor
daa
inc
xor
das
jbe
fiaddl
stos
dec
sub
mov
sbbb
aas
mov
int3
mov
lahf
popf
aam
hlt
loopne
int
outsl
idivl
mov
ret
inc
mov
inc
sbb
xor
enter
mov
imul
paddq
int
pusha
pushf
xor
adc
es
push
lock
jbe
xor
push
pop
lret
mov
test
or
jl
paddd
mov
xchg
and
iret
and
test
mov
pop
leave
fidivl
add
data16
sub
insl
and
int
jp
mov
mov
cmc
pop
ret
lea
ret
dec
push
or
out
sub
or
stc
rorb
pop
gs
ret
xor
jmp
mov
push
mov
xchg
ret
pop
clc
lods
sbb
out
js
lahf
xorl
mov
or
hlt
dec
mov
clc
movb
and
outsb
clc
insb
push
and
and
inc
or
test
xor
and
gs
xor
inc
out
dec
mov
sti
jmp
push
sub
mov
cmp
jg
cs
leave
fmuls
lret
aaa
add
xorl
pop
add
lcall
mov
pushf
mov
arpl
mov
aaa
mov
inc
sbb
dec
or
push
ret
fdivs
sub
call
xor
pop
mov
ds
cmp
cmp
rcrb
lock
dec
mov
mov
nop
popf
push
mov
lret
jg
les
das
repnz
lret
cmpl
mov
add
lods
rolb
cmpsl
mov
bound
mov
xchg
into
shl
je
ficomps
loop
push
mov
fisttps
mov
mov
xlat
std
inc
pusha
jg
sbb
jo
lds
inc
mov
in
fistpll
xchg
xchg
scas
xlat
adc
enter
inc
mov
je
mov
pop
push
add
daa
lahf
mov
mov
outsl
mov
pop
and
adc
inc
inc
jnp
inc
add
in
addr16
fmuls
movsl
jmp
movsb
push
jne
ja
xchg
mov
cmp
or
scas
mov
lahf
and
stc
sub
adcl
fwait
adcb
mov
sbb
sahf
jae
icebp
into
leave
add
pop
arpl
je
iret
xor
mov
pop
daa
fnsave
sbb
aad
xor
adc
jg
xchg
inc
sbb
rolb
sbbl
mov
xchg
mov
ds
es
out
pop
mov
xchg
pop
adc
sub
push
lea
mov
adc
mov
mov
rolb
inc
into
dec
or
aad
xor
and
in
jle
cmpsb
ds
jo
mov
fsub
in
popf
pusha
out
push
mov
in
mov
pop
std
mov
int
xlat
cmp
xchg
test
mov
and
sub
std
jmp
jnp
mov
push
lods
xchg
xchg
arpl
insl
dec
mov
lock
xchg
inc
loope
dec
adc
incb
repnz
add
rorb
jnp
in
push
test
sbb
lods
or
subl
mov
xor
out
lcall
fwait
jg
jmp
nop
outsl
gs
inc
mov
ds
and
in
test
cltd
mov
sbb
push
fidivl
scas
daa
stos
or
jae
movsl
mov
loopne
cmp
js
nop
or
jo
pop
jge
xor
or
pop
pop
mov
lea
and
inc
fsubrs
pop
arpl
jb
mov
push
out
mov
mov
leave
bound
cltd
jno
mov
inc
ss
repz
lods
out
in
in
jno
sahf
push
adc
and
rclb
lcall
aam
push
out
repnz
fcompl
rorb
dec
xchg
and
inc
adc
mov
jp
inc
jmp
mov
sahf
mov
dec
or
je
inc
cmpsl
out
int
or
movd
pop
add
mov
addr16
aaa
test
jp
nop
sti
out
cmp
pop
add
insb
fcom
insb
lods
mov
adc
fisttps
inc
lahf
mov
test
clc
stos
mov
mov
stos
mov
loope
rcl
daa
push
pop
test
aad
inc
in
ret
daa
xchg
adc
mull
sbb
add
and
popf
loop
mov
lahf
orps
arpl
rolb
cltd
outsl
in
mov
push
repnz
fcoml
xchg
pop
sub
ret
out
and
mov
mov
push
dec
xchg
mov
mov
dec
dec
push
and
pop
lods
adc
pop
out
add
jg
mov
mov
icebp
jo
add
mov
inc
ret
pop
cltd
enter
lods
adcl
enter
sub
xchg
ljmp
xchg
mov
cli
lods
cs
add
xorl
push
inc
movsb
cmpsl
pop
hlt
in
fs
int3
mov
insb
adc
jbe
cmp
aaa
adc
jge
xor
hlt
leave
mov
inc
jl
shrb
mov
rcrb
mov
lods
out
jmp
mov
sti
hlt
push
adc
call
and
xor
pmulhw
jnp
pusha
pop
in
mov
dec
pushf
mov
imul
inc
inc
insl
mov
sbb
in
mov
call
adc
sbb
lret
push
iret
ja
push
push
lcall
test
sub
out
stos
and
lea
sub
mov
popa
jmp
int3
sub
lret
mov
xchg
test
outsb
loope
xchg
cmp
in
mov
fs
mov
ljmp
stos
xchg
jge
add
pop
cmc
jl
out
nop
push
into
pop
addr16
pop
je
cli
mov
out
inc
adc
loop
dec
sbb
clc
push
jo
xorb
push
js
test
xchg
inc
sahf
fnstcw
push
mov
and
mov
shll
sbb
xor
scas
jo
jne
mov
scas
scas
out
mov
imul
add
cmpsl
add
sub
jl
iret
mov
and
sbb
shrb
iret
icebp
add
add
loop
and
push
pop
fistps
aam
jle
cmp
jecxz
mov
popf
adc
push
xchg
or
sbb
mov
pop
cwtl
out
es
cs
dec
cmpsb
sbb
outsb
adc
scas
ret
sbb
idiv
imul
fisttps
imul
xchg
lock
cmp
mov
aad
int3
jne
mov
in
sub
lret
inc
in
imul
test
call
popl
mov
rolb
inc
push
mov
notl
cmpsl
shll
adc
cmp
push
and
and
or
int
iret
adc
jge
xchg
repnz
push
lock
inc
mov
ds
xchg
inc
cmpsb
into
mov
push
ret
inc
adc
iret
or
add
clc
scas
out
dec
sbb
sbb
and
call
fwait
sahf
jl
cmp
xchg
xor
xchg
sub
mov
ret
pop
addps
cmp
jge
mov
sub
pop
fidivl
and
mov
stos
cmp
es
repnz
jl
mov
shrb
xor
int3
cli
sub
test
scas
xchg
out
in
fdivl
jae
fstps
pop
in
mov
push
es
imul
mov
ror
je
xor
sbbb
loop
mov
pop
pop
jnp
adc
jmp
xchg
in
and
popf
sbb
mov
ss
pop
add
mov
sbb
xchg
add
mov
or
ret
and
mov
mov
stos
sahf
fcmovb
imul
stos
orb
loope
shrb
imul
and
jno
mov
shll
xor
out
or
mov
jne
mov
jmp
fmull
int
iretw
inc
nop
cmp
or
sub
mov
jle
push
pop
cmp
fsts
stc
lock
dec
dec
push
push
inc
popf
jbe
leave
movsl
sbb
jmp
or
mov
test
and
xchg
rcrb
inc
adc
and
pop
adc
mov
add
xor
out
outsb
int
mov
xor
dec
mov
mov
icebp
xchg
xor
test
shlb
popa
mov
xor
sbb
mov
rol
xor
or
cltd
out
cmp
cmp
cmpsl
push
xor
dec
mov
jbe
bound
sub
inc
shlb
mov
mov
ret
imul
xchg
jge
orb
outsb
ljmp
sahf
mov
xchg
cmp
ss
dec
cmp
in
mov
mov
fcomi
clc
dec
ds
mov
and
sahf
mov
adc
rcrb
and
in
je
cwtl
push
or
loopne
dec
test
pop
xchg
hlt
push
in
cltd
dec
xchg
cmp
je
jb
je
mov
pop
mov
mov
shr
inc
movb
adc
push
test
push
pop
jg
mov
push
or
aaa
stos
push
and
jns
pop
mov
and
dec
jbe
scas
and
xchg
imul
dec
xor
stc
fs
popa
pop
mov
adc
rcrl
cmp
sti
adc
dec
jbe
ret
inc
clc
xchg
ret
add
cmp
push
loopne
insb
sarl
adc
lea
shlb
imul
pop
test
sbb
sbb
jp
mov
and
idivb
add
mov
and
jecxz
loop
leave
ret
pushf
and
adc
jg
mov
jbe
test
push
xor
push
inc
mov
mov
dec
lret
iret
cmp
push
inc
jp
cltd
test
push
jno
sub
jbe
testb
mov
lahf
add
mov
icebp
mov
pop
or
xchg
mov
insb
scas
add
sub
adc
lods
or
pop
loope
pop
ljmp
mov
roll
inc
fucomp
inc
add
shl
add
daa
loope
push
ss
shll
xchg
jp
xor
aad
sti
pushf
sub
jne
or
loopne
repz
repz
xchg
movsb
rorl
lods
dec
cmp
mov
scas
stc
out
test
rcrb
xor
das
or
int3
sahf
inc
sub
call
int
in
lcall
mov
adc
pop
sub
nop
dec
fistpl
sbb
add
inc
jno
push
fs
cmp
xlat
or
inc
loop
mov
mov
xchg
stos
outsl
cmp
adc
push
push
lods
cmp
adc
mov
lods
pop
enter
leave
stos
jg
iret
fs
adc
je
cmpsl
mov
mov
lret
cmc
inc
or
mov
mov
imul
enter
lahf
mov
icebp
in
fbstp
add
stos
mov
pop
pop
icebp
imul
mov
or
mov
pop
icebp
inc
push
pop
push
shll
movsb
je
and
xchg
add
int
fwait
dec
addr16
ljmp
fdivr
shll
sbb
sbb
mov
pop
imul
mov
xchg
xchg
cltd
ret
sbb
aam
jle
mov
notl
repnz
mov
adc
lea
cli
xor
fxam
cwtl
jbe
and
test
or
jae
pusha
mov
std
mov
andl
std
and
sarl
add
test
adc
inc
mov
cmovae
add
or
and
int
mov
xor
adc
push
add
mov
pop
mov
int3
fyl2xp1
mov
cmp
jp
xor
in
sub
vpsrlw
rcrl
inc
pop
shll
repnz
mov
sub
je
adc
inc
inc
test
adc
repnz
add
dec
fdivr
jge
fcomps
testl
pop
je
imul
pop
pop
fs
addr16
sub
enter
mov
xchg
pusha
jge
xchg
stos
mov
lods
fwait
imul
xor
add
sbb
ret
mov
bnd
pusha
xor
callw
xor
mov
jle
aad
repz
mov
in
int
sbbb
aam
lods
xchg
les
das
pop
ret
mov
mov
jnp
add
mov
sbb
push
out
cltd
push
jb
fdivs
ja
ret
adc
push
or
add
mov
or
dec
pop
dec
fmull
sbb
notl
daa
sbb
and
daa
mov
les
out
or
sub
xor
mov
pop
push
mov
xlat
sbb
movsb
icebp
push
sub
shll
cld
imulb
xorb
mov
gs
cwtl
jp
add
pop
data16
mov
push
xlat
push
or
mov
dec
mov
or
cmpsb
xchg
cmpsb
shrb
push
and
bound
sub
push
pop
gs
sbb
fstl
jno
popa
sahf
dec
sub
psubsb
into
leave
sbb
add
mov
fisubrs
loop
inc
hlt
mov
lds
daa
push
scas
fmul
adc
sub
clc
dec
inc
xchg
shl
xlat
enter
xchg
inc
daa
pop
dec
fldt
xor
cwtl
dec
and
sti
mov
add
mov
xor
jae
or
inc
mov
rolb
movsl
push
sub
loopne
paddsb
inc
push
inc
es
imul
in
mov
cltd
ret
cs
fistpll
movsb
inc
adc
push
mov
stos
addr16
xor
pusha
dec
pop
cli
push
inc
jl
test
out
in
sbbb
mov
mov
popa
stc
loop
add
mov
cwtl
nop
aaa
sti
fsts
in
cmpsl
out
insb
pop
xor
ds
lret
adcb
sbb
subl
inc
stos
rclb
scas
inc
cmp
cmc
in
xor
sbb
lock
jl
dec
jp
xchg
jge
ds
mov
out
xor
xor
mov
and
mov
jge
mov
xchg
scas
jae
mov
dec
push
jo
xor
jg
ja
push
xchg
sub
adc
inc
pop
push
rclb
xor
cmp
dec
fdivrs
out
repnz
or
and
jge
jb
xchg
sub
es
xor
or
dec
cld
aam
ja
or
dec
jbe
adc
lock
pop
sbb
decb
push
in
call
adc
gs
test
inc
and
pushf
fwait
and
out
mov
jl
call
and
es
mov
pop
and
bound
jle
inc
pop
mov
into
and
jle
adc
push
and
call
push
popa
pushf
daa
outsl
jmp
push
dec
pop
fwait
shll
cltd
rorb
xlat
rclb
in
mov
fisubs
xchg
stos
aaa
dec
insl
lcall
jecxz
xlat
push
mov
lahf
ja
cmp
testb
cwtl
jl
pusha
mov
das
xchg
scas
or
jmp
out
jmp
roll
add
mov
cs
es
adc
mov
loopne
bound
pop
mov
jb
loop
sti
xchg
xor
out
add
mov
jbe
mov
adc
fs
out
xchg
lret
inc
cwtl
cmp
xor
xchg
xlat
mov
adc
pop
xchg
frstor
out
sbb
xorl
bound
pop
arpl
outsl
inc
inc
sub
push
adc
lods
jle
popf
dec
icebp
adc
cmp
dec
pop
xchg
pop
imul
mov
sub
xchg
inc
pop
es
test
dec
pop
dec
fwait
stc
ljmp
adc
in
or
push
inc
adc
loope
pop
es
call
sub
sahf
jg
rorl
out
xlat
jmp
sbb
mov
outsl
int3
daa
test
pop
pop
mul
xchg
inc
pop
lock
insl
and
mov
cltd
sbb
add
push
xlat
xchg
stos
stos
loope
jae
jmp
sbb
push
pusha
shll
push
test
pop
js
lods
ja
mov
jmp
jg
mov
sub
out
xor
or
lock
jae
sbb
pop
loop
jbe
fmuls
lea
je
mov
adc
fmull
subps
movsl
mov
adc
je
jl
shrl
jge
shll
cmp
insl
pop
pop
cmp
fidivl
and
cltd
mov
xor
inc
xor
mov
sub
sbb
inc
pop
xchg
out
jae
ret
jo
adc
psllw
lcall
jbe
sti
xor
mov
pop
and
sbb
iret
out
jne
sbb
sbb
or
es
aaa
int3
jae
cmp
cmp
dec
inc
xchg
mov
sub
sbb
inc
xchg
mov
mov
sub
or
mov
in
add
aam
test
pop
jae
dec
sub
shrb
out
insl
aaa
xchg
cmp
mov
sbb
repz
rorb
mov
cmp
xchg
or
les
inc
xchg
pop
in
xchg
jo
out
lea
mov
pop
lahf
mov
data16
jbe
movsbl
dec
insb
bound
add
lcall
push
add
add
pop
imul
inc
out
push
popa
bound
loop
lods
insl
roll
imul
icebp
mov
mov
push
sub
iret
sub
outsb
ret
jmp
test
sarb
inc
fwait
shl
fs
lods
hlt
inc
dec
inc
test
loop
and
insl
roll
mov
mov
mov
fsubs
rorl
push
insl
sbb
cli
push
add
je
mov
pop
lcall
cmp
repz
ret
lds
ret
lcall
out
cld
push
xchg
in
xor
popa
dec
push
mov
loop
jbe
popa
push
bswap
pusha
sub
jmp
roll
shrl
mov
cmp
cli
inc
leave
jp
inc
adc
in
pop
enter
lahf
inc
or
pop
mov
mov
pop
lods
sahf
sbb
jmp
out
inc
pusha
aam
sbb
jmp
dec
cmp
jge
sahf
xchg
pop
mov
jecxz
test
fnsave
aaa
fsubr
jno
sbb
and
adc
shll
jl
inc
daa
mov
fistl
divl
das
cltd
add
lcall
ds
mov
add
jae
push
xor
ffreep
mov
in
scas
jns
sbb
cs
loopne
into
mov
and
jl
mov
pusha
psrlw
loope
sbb
mov
or
icebp
mov
imull
cmp
jns
add
dec
test
jo
sahf
icebp
out
sub
mov
outsb
pop
dec
fisttpl
cwtl
subl
mov
mov
jmp
data16
shl
sub
ror
xchg
inc
enter
fstpt
test
addr16
and
nop
mov
addl
inc
cmp
sbb
loope
ljmp
outsb
enter
adc
add
out
filds
adc
repnz
dec
mov
jecxz
adc
mov
cmp
and
ret
add
test
scas
leave
in
cmp
mov
push
jne
add
push
mov
adc
lcall
mov
mov
gs
std
data16
add
pusha
sarb
negb
inc
mov
push
push
add
pushf
pusha
iret
push
xor
mov
into
dec
mov
scas
adc
or
cmpsb
sbb
mov
lret
push
lret
sti
xor
fisttpl
testb
popf
aaa
inc
dec
push
mov
dec
ja
and
addr16
cltd
push
mov
popa
int3
shrl
dec
xchg
in
or
test
mov
jae
pop
aaa
mov
xchg
push
insl
insb
mov
mov
xlat
inc
jge
nop
loopne
adc
mov
fs
out
sbb
lcall
insl
or
sbb
jne
push
in
outsb
cld
cli
aaa
shll
add
add
xchg
outsl
aaa
mov
inc
xchg
sub
mov
xchg
ret
mov
fidivrl
insb
ja
xchg
jmp
xchg
mov
mov
fldenv
push
fucomp
mov
test
lret
jg
icebp
lods
push
sbb
int3
and
sbb
or
and
repnz
rol
dec
das
nop
and
and
cmp
cwtl
dec
rcr
xchg
mov
aas
mov
sub
or
bound
enter
xor
jge
in
xchg
xchg
lds
or
jecxz
push
lods
dec
or
pusha
and
call
mov
mov
mov
iret
inc
test
add
xor
push
dec
insl
xchg
movsb
xchg
sub
notb
inc
push
push
jmp
fistps
jbe
cmp
in
lods
mov
fucomp
sahf
test
xor
push
movb
in
adc
rol
js
ljmp
test
test
es
xchg
add
push
incl
cmp
cmp
cmp
and
or
scas
filds
xchg
mov
jo
scas
jbe
popf
xchg
add
inc
in
jmp
push
inc
sahf
pushf
cwtl
insb
cmp
dec
test
das
sub
sti
loop
imul
stc
push
pop
lahf
out
int3
inc
loop
and
and
lods
cmp
dec
sub
leave
bound
in
mov
cmp
cwtl
fadd
jge
jnp
mov
push
in
lahf
outsl
in
sbb
and
push
jg
adc
and
jns
mov
shrb
inc
aas
aam
shrb
cwtl
repnz
cmc
aad
add
push
sub
data16
or
rorb
pop
repnz
push
adc
roll
pop
pop
clc
and
mov
xchg
cmpsb
divb
ss
pop
scas
sahf
or
sbb
cmp
add
sbb
adc
in
sbb
mov
mov
ret
nop
in
test
icebp
or
fildll
ds
ljmp
fcoml
or
xlat
pop
mov
enter
or
dec
sub
pop
push
sti
pop
cmp
cmpsb
sub
std
aas
pop
imulb
push
or
xor
aas
aad
shrl
in
cmpsl
pop
out
sbb
cli
fdivl
jge
xor
jo
sbbb
xchg
inc
xchg
decb
cmpsb
outsb
cmp
mov
push
ret
push
cmp
cmp
shlb
cmc
mov
ss
and
xchg
and
je
aas
sbb
scas
mov
jecxz
cmpsl
clc
sahf
or
call
test
cmp
push
mov
and
scas
cwtl
stc
push
cld
or
and
mov
stc
jg
vpunpckhwd
dec
inc
sub
cltd
sarl
jp
mov
xor
push
rcrl
fbld
roll
mov
call
iret
arpl
mov
push
sbb
test
pop
fchs
cmc
mov
add
scas
out
scas
mov
das
push
test
test
jb
pop
into
test
sbb
pop
dec
fsubrl
pop
xchg
push
cmp
dec
pop
pushf
push
mov
xorl
pop
pop
arpl
mov
inc
lods
mov
inc
pop
add
jno
push
lret
cltd
ja
push
dec
ret
into
daa
leave
mov
movsl
pushf
jbe
lea
icebp
aam
and
mov
mov
mov
cmpsl
leave
push
in
cmp
dec
fdivr
stos
dec
nop
sub
pop
push
shrb
pushf
into
ss
shrb
inc
lods
adc
push
shrb
and
test
bound
inc
lock
fdivl
pushf
in
sub
jg
push
mov
fcompl
cwtl
and
push
movsb
repnz
or
sbb
test
cs
insb
mov
sbb
jmp
scas
daa
adc
int
lcall
pop
sub
sarl
inc
std
fsubl
push
jb
inc
xor
ljmp
aam
cmp
jmp
mov
iret
fdivl
not
hlt
repz
sbb
nop
adc
cmpsb
pop
aam
jnp
hlt
mov
ret
dec
fwait
xlat
mov
pop
and
pop
or
stc
data16
into
call
adc
test
or
addr16
out
stos
movups
mov
repz
aad
gs
shll
pop
shll
rcrb
mov
int
pop
pusha
bound
xchg
sbb
sub
popl
push
push
in
mov
mov
icebp
sbb
repnz
leave
test
clc
cmp
fwait
sbbl
enter
bound
icebp
push
cmc
repz
xchg
ja
out
ja
xchg
popa
cwtl
aam
cltd
test
out
mov
cli
mov
filds
icebp
mov
jbe
aad
jne
in
sbb
mov
icebp
notl
mov
aaa
lock
out
lret
imul
mov
jmp
mov
or
jmp
push
or
dec
cmp
pusha
and
jae
dec
add
lods
shrb
jo
insl
sub
sub
and
icebp
adc
cld
loope
add
mov
xchg
clc
push
fcompl
jnp
pop
ds
xor
icebp
sbb
dec
fldt
call
call
push
pop
mov
aaa
jbe
cmp
pop
adc
adc
cmpsl
push
scas
cmpsl
mov
jns
push
cli
dec
xorb
jne
lret
lods
sub
xchg
lock
push
pop
xchg
jo
scas
rolb
lea
ds
rcll
cmc
jbe
mov
dec
popf
mov
test
js
scas
adc
insb
sbb
test
sahf
outsl
scas
lret
sub
mov
lock
dec
in
or
cmc
pop
in
adc
mov
cmpsb
mov
jo
cmp
fwait
popa
lret
adc
shlb
push
nop
mov
mov
adc
ret
push
sbb
mov
and
lea
mulb
and
pop
repz
jns
sbb
or
mov
aad
jno
mov
cmp
push
mov
and
xchg
pop
pop
push
add
xchg
mov
cld
shrb
in
lret
pop
inc
inc
iret
mov
push
arpl
sbb
and
les
test
sbb
mov
std
dec
or
pop
cs
inc
mov
dec
test
test
xor
sahf
icebp
jecxz
add
les
jmp
xchg
call
xchg
xchg
into
xor
and
jl
cltd
cmp
mov
xlat
icebp
rcl
cli
pop
jecxz
xor
or
and
js
pop
pop
pop
jnp
icebp
jbe
adc
js
in
inc
cmp
dec
in
push
pop
jnp
mov
jno
sub
ds
loop
into
mov
mov
in
stos
dec
xor
je
fst
pop
sbb
and
mov
push
and
ja
xchg
sub
je
insl
mov
lods
mov
out
xor
xchg
or
and
scas
sub
or
push
adc
add
xchg
jb
cmp
mov
scas
inc
inc
loope
jl
mov
in
subl
pusha
scas
ret
repz
cmp
je
inc
push
enter
loopne
call
inc
mov
cmp
jnp
ret
push
test
dec
fmul
mov
pop
aaa
cs
mov
outsl
cmc
jnp
adc
sbb
scas
mov
cwtl
int3
sahf
pop
popf
shlb
mov
cmp
lcall
cli
inc
movsl
xchg
or
pop
sahf
inc
repnz
outsl
pop
add
cwtl
adc
inc
fdivl
in
pop
sbb
test
add
xchg
js
pop
push
xor
sbb
and
mov
xchg
lods
fdiv
xor
sub
mov
stos
shll
push
push
jge
ss
mov
mov
xchg
f2xm1
imul
lret
aad
out
hlt
movsb
jae
jecxz
arpl
ret
cmp
mov
jge
lahf
sbb
ljmp
mov
repz
sbbb
mov
or
and
std
or
dec
aam
xchg
jmp
mov
mov
sub
xor
push
stos
and
xchg
out
jmp
add
sbb
mov
inc
xchg
jg
pop
outsb
dec
ljmp
inc
int
and
push
sub
sbb
shll
into
sbb
and
xchg
out
leave
jp
clc
je
jl
or
mov
push
outsb
dec
inc
and
or
int3
xor
cmp
ret
inc
repnz
jnp
cmp
dec
pop
psubsw
mov
xor
add
mov
out
cmpsb
fisubrl
lds
aaa
loop
mov
out
in
pop
and
jmp
stos
in
push
cmp
mov
mov
dec
decl
or
lahf
sub
push
pop
subl
cmpsb
pop
xchg
cmpsl
mov
jne
xchg
xor
das
nop
repnz
ficompl
jae
pop
outsl
xchg
repz
adc
arpl
adc
sbb
inc
mov
js
or
jb
ret
lahf
jmp
cli
inc
pop
jg
push
or
fisttpl
addr16
pop
icebp
push
pop
mov
insb
cmp
sub
fnstsw
dec
or
add
clc
shrw
out
rcrl
mov
lock
mov
mov
test
push
jmp
mov
scas
movsb
enter
push
mov
mov
jno
jmp
jge
ss
mov
cmp
sarl
mov
xor
mov
pop
sbb
rcrb
aaa
test
stos
jae
xchg
pushf
or
lds
mov
out
addr16
push
adc
pop
sahf
fsubrl
mov
pop
sbb
int3
lds
push
sahf
sbb
cld
cmpsl
cmc
js
push
scas
sbb
mov
aaa
mov
pop
call
pcmpgtd
scas
dec
ds
jl
icebp
xlat
cwtl
mov
push
out
or
adc
into
xchg
xchg
dec
pop
cmpsb
inc
mov
push
fisubrs
pop
cmc
fwait
dec
push
and
int
dec
cs
lea
aam
aaa
push
xlat
into
jl
sbb
cmpsl
push
mov
sub
mov
bound
test
pop
mov
push
fsubrs
clc
les
jle
inc
jae
in
cmpb
sub
push
jecxz
and
add
repnz
sbb
das
sub
adc
sbb
jnp
pcmpgtw
mov
nop
fstps
addr16
mov
fisubl
jle
and
in
out
inc
add
mov
mov
sbb
xor
pop
adc
in
xchg
in
mov
sbb
fs
imul
mov
xor
lock
scas
adc
inc
xchg
mov
xor
or
mov
xchg
in
adc
mov
out
fistpll
jle
aaa
es
adc
je
sbb
jae
xchg
inc
fdiv
dec
gs
out
decb
call
ret
mov
filds
jne
loop
iret
aam
xor
sarl
mov
add
mov
sub
push
add
pop
fldl2e
jbe
fwait
mov
dec
pop
lret
cmp
inc
xchg
xor
fnstenv
outsl
or
fbld
in
paddb
ficompl
push
fwait
mov
push
jns
cmp
pop
iret
lods
cld
fwait
shrb
sub
mov
push
outsb
cli
lahf
out
lahf
shl
jmp
pop
mov
nop
xchg
inc
das
popf
js
lods
mov
mov
repz
xchg
out
stos
sbb
add
outsb
jnp
mov
inc
rclb
push
mov
add
and
jg
and
iret
aam
sahf
aas
scas
inc
popa
mov
cmp
jno
xchg
push
dec
dec
js
int
jmp
xor
aam
sub
out
inc
gs
cli
sti
push
push
std
clc
out
aas
or
lret
out
sarl
jbe
scas
inc
test
andb
or
mov
cmp
push
jne
cwtl
test
dec
jecxz
lods
pop
out
pop
pop
test
dec
mov
imul
icebp
popf
aas
cwtl
push
jne
test
gs
xor
sbb
jge
les
inc
into
sbbl
rcrb
jge
pop
jl
pushf
xor
jo
in
fwait
xor
bound
pop
loop
sbb
xor
sbb
sbb
mov
nop
xchg
scas
out
cmp
xor
loop
inc
and
add
shll
inc
pop
jb
push
and
inc
jne
loope
jp
add
cli
or
xchg
fidivs
bound
dec
inc
repz
arpl
popa
scas
cld
dec
test
dec
dec
xor
xchg
dec
push
mov
mov
push
fsubs
xchg
inc
inc
in
sbb
push
push
enter
hlt
mov
push
out
xor
dec
mov
psraw
cmpsl
xchg
push
sbb
fsubl
push
push
test
mov
add
insb
ja
sti
mov
sbb
andb
push
add
jno
jb
pop
or
push
xchg
pop
insb
lret
inc
mov
push
aaa
sbb
pop
cltd
sbbl
pop
outsl
ss
sbb
pop
pop
mov
mov
or
xchg
std
popa
or
mov
mov
inc
arpl
push
mov
into
cmpsb
jg
sbb
lret
loop
xchg
xchg
fistpll
mov
fwait
cmp
cmc
dec
cmp
add
add
cs
jge
inc
je
and
sbb
sub
sbb
sar
lcall
into
test
add
out
divb
ret
jns
or
xchg
push
movl
pop
mov
mov
mov
and
inc
jl
cmpl
push
cmp
mov
adcl
dec
dec
jb
dec
in
jge
pop
scas
daa
pop
sub
inc
xchg
adc
pop
sbb
jmp
mov
loope
jb
cmc
cld
shrb
cmp
in
lret
fadds
or
es
xor
jp
sahf
and
ror
and
xor
cmp
push
push
or
adc
int3
in
xchg
aas
mov
adc
lods
push
sbbl
adc
cmpl
push
cmp
leave
jns
sub
insl
dec
push
leave
mov
loope
pop
scas
xor
ffreep
dec
repz
roll
push
mov
int
pop
loopne
testl
arpl
ja
jae
jb
jge
jmp
mov
fstps
inc
add
shrb
jge
sbb
movsb
shlb
add
fisttps
pushl
or
repz
add
mov
test
test
or
push
push
or
int
test
int3
je
xchg
xchg
fistpl
sub
loope
dec
cmp
mov
pop
rclb
pop
push
icebp
ss
imul
add
xchg
out
jne
pusha
subb
out
jmp
add
cmpsb
pushf
xor
mov
jge
adc
dec
test
out
sbb
popf
inc
and
loope
scas
cltd
addr16
lock
xchg
icebp
add
ja
lods
sub
js
aam
xor
add
cld
mov
inc
leave
shrb
jns
arpl
dec
xchg
sub
pop
push
rcl
sbb
cli
mov
add
cs
adc
and
clc
mov
jno
jbe
test
fsubl
jle
jle
mov
fwait
mov
imul
in
inc
fisttpl
cmp
ret
movsl
gs
call
inc
push
and
mov
jno
add
xchg
xchg
lds
lods
or
mov
sar
stc
xchg
add
aaa
lods
in
aam
adc
fmull
pop
inc
mov
push
cmpb
inc
fcmovnu
loop
mov
inc
push
push
bound
fisubl
incl
inc
dec
enter
clc
pop
fdivs
cmpsl
pop
pop
sub
jmp
cmp
mov
pop
or
dec
adc
popf
repnz
mov
jle
mov
mov
outsl
cmp
addl
psllq
cmp
mov
dec
les
sbb
movsl
pushf
jl
dec
out
cmp
fdivrs
ds
jp
mov
cli
sbb
mov
push
popl
loope
repnz
xor
xor
movb
in
scas
insl
mov
mov
cld
sbb
cmp
imul
add
jecxz
push
sbb
movsl
push
add
and
mov
mov
jo
inc
xchg
icebp
jge
pop
xor
inc
pop
jns
add
cmp
rorl
fbstp
or
daa
stos
jp
dec
push
push
shlb
inc
outsl
mov
popa
fisubs
and
sub
pop
or
dec
ret
fistps
mov
imul
in
jge
and
imul
rolb
repnz
shl
sbb
adc
sar
xchg
std
or
stos
test
xlat
stc
fs
addl
lea
xchg
loope
pop
or
adc
icebp
sarl
add
sub
iret
push
aaa
outsl
into
add
fwait
add
push
sti
add
lret
cmc
mov
mov
imul
sub
cs
xor
pop
jecxz
sub
mov
rorb
jmp
push
mov
roll
xchg
and
push
movsl
fisubrs
or
aas
scas
test
mov
add
add
pop
inc
push
popl
xor
stos
push
xor
bound
std
fidivl
test
sbb
and
jo
fsubp
es
sbb
sub
sbb
movsb
jo
pop
enter
aas
shlb
jo
sbb
cli
xor
push
ret
add
fists
and
daa
mov
imul
add
cltd
cmp
divl
das
adc
in
cltd
adc
fbstp
cwtl
test
jbe
mov
jo
inc
inc
push
xchg
dec
repz
gs
mov
stos
cmpsb
mov
andb
fisttpl
add
out
cld
cmp
testb
fcoml
jnp
push
insl
cmp
push
or
das
mov
pop
ja
out
lahf
xchg
push
arpl
jge
mov
cmp
dec
push
sub
test
fstl
ds
call
cwtl
sub
xor
out
dec
jnp
lcall
dec
dec
cmc
inc
rol
sub
mov
out
lahf
inc
xor
pop
push
mov
xor
lock
movsb
outsb
mov
addb
cltd
push
and
scas
divl
xchg
and
fs
aam
es
xor
mov
add
adc
in
inc
fists
jo
nop
arpl
pop
sahf
add
add
lods
lret
ljmp
or
mov
fsts
push
mov
sbb
and
cmp
xor
mov
xchg
push
ss
outsb
mov
stos
jp
mov
rorl
les
lods
pop
push
push
pop
fs
popf
fists
add
cmpl
pop
push
cmp
insb
jmp
jp
imul
xor
mov
adc
lods
jno
les
popf
cltd
fisubrl
inc
xorb
push
in
arpl
inc
jb
inc
and
loop
mov
enter
add
das
mov
addr16
inc
fisubrs
fistps
push
dec
dec
cmpsb
pop
xor
ret
mov
call
jae
cmp
and
out
xor
sbb
mov
mov
bound
lahf
ret
leave
test
icebp
mov
pop
enter
or
and
add
xchg
sub
data16
mov
ja
std
jle
inc
fistps
out
jae
cs
mov
and
push
cld
add
push
adc
cmpsb
pop
xchg
mov
fiaddl
ljmp
shll
xor
inc
jmp
cmpsl
adc
mov
std
mov
popf
adc
in
mov
aas
gs
sub
mov
add
out
fcoms
pusha
pop
pop
cmp
push
addr16
push
insl
divb
lret
inc
sbb
adc
jno
fcmovb
add
shr
test
pop
sahf
and
add
fwait
scas
sti
test
xchg
divl
bound
pop
inc
mov
fstpt
test
jnp
leave
xor
or
pop
nop
or
xchg
fld
inc
lcall
dec
pop
lret
inc
inc
into
ret
jge
inc
clc
in
mov
mov
push
adcl
orb
mov
or
push
jl
xchg
inc
icebp
lea
ret
and
push
dec
cmp
xor
mov
adc
push
dec
mull
ret
stos
out
mov
sbb
cmp
mov
dec
dec
cld
pop
insl
sub
add
sbb
repnz
add
and
or
fimull
sbb
add
xchg
insb
div
adc
fucomi
and
leave
ret
inc
movsl
adc
push
dec
clc
jl
jle
stos
in
sub
inc
and
movsb
xor
pop
push
fcom
sub
pop
fimull
pop
in
movsb
jae
xlat
push
les
hlt
ljmp
mov
add
test
fxch
cwtl
daa
pop
jb
xchg
sbb
fstpl
out
push
imul
adc
test
iret
jle
xor
jns
scas
dec
mov
sbb
inc
cwtl
pushf
arpl
fisubs
lret
outsb
frstor
imull
fimuls
test
dec
dec
insl
daa
pop
pop
sub
xchg
adc
movb
or
or
stos
cmp
push
add
xchg
fsubr
mov
test
ss
push
or
jle
insb
movsb
xchg
push
dec
jecxz
xlat
fisubrl
cmpsb
jo
cmp
or
and
mov
out
popf
xor
aad
add
mov
xchg
push
mov
es
das
or
ror
cli
mov
sub
movsl
mov
rorl
mull
sbb
sub
sbb
das
dec
push
les
mov
out
mov
in
stos
mov
cmp
or
add
mov
cs
xor
add
insb
inc
xchg
fcoms
dec
push
pop
lret
xor
jns
rcrb
xchg
sub
nop
mov
je
cld
ds
rorl
outsb
out
jmp
das
pop
sbb
sbb
aaa
popa
movsb
mov
in
mov
jno
mov
dec
add
aas
xlat
jb
stos
xchg
fnstsw
lds
lret
mov
adcl
aam
ds
jge
inc
jmp
lods
xchg
add
clc
aad
clc
fwait
add
sbb
leave
jmp
lds
ss
mov
inc
pop
cld
dec
popf
mov
push
xor
and
push
lret
jle
or
jns
pop
dec
jl
mov
in
insl
movsb
lret
cmp
fistl
xor
loopne
and
call
fldenv
into
push
sub
push
cmp
leave
repz
pop
mov
loopne
fimuls
xchg
cmp
xor
cmpsl
sub
mov
sub
mov
cli
xor
fnsave
sbb
movsl
jbe
pop
push
mov
cli
mov
or
pushf
inc
adc
mov
icebp
xchg
push
xchg
sbb
mov
xchg
das
test
mov
ss
sti
out
int
cwtl
sbb
lock
xchg
rorb
cmpsl
inc
lods
cmc
lds
mov
jb
mov
cltd
mov
cmp
pop
jb
into
dec
ja
leave
or
jge
dec
cmpl
loop
push
add
adc
mov
mov
fdivr
sbb
lahf
nop
loopne
xchg
fldenv
mov
insl
mov
sbb
out
xchg
jbe
mov
inc
sub
imul
std
mov
pop
stos
cmp
movsb
mov
inc
or
shlb
inc
xor
adc
out
icebp
popa
adc
loop
dec
dec
and
and
pop
inc
adc
dec
cld
sub
test
pushf
inc
fisubrl
ss
push
mov
cmpsb
mov
in
cli
orb
clc
and
leave
dec
outsl
ret
sbb
aad
popf
sbb
pusha
cli
pop
jbe
add
lds
in
lret
push
inc
adc
and
shlb
inc
push
and
push
ds
scas
mov
pop
sbb
xor
push
adc
test
jmpw
icebp
lahf
scas
push
aam
test
test
jae
sti
xchg
rcl
jmp
and
dec
or
jae
sbb
repz
stos
xlat
cmp
xchg
cmpsl
mov
psrlw
out
xchg
jae
mov
cmp
xchg
leave
mov
jns
test
cs
lds
jbe
in
add
cmpsb
hlt
pop
push
add
inc
fs
in
adc
push
sub
cmp
xor
cmp
mov
add
jne
pop
sub
clc
in
test
enter
adc
xor
aas
fdivrs
add
faddl
adc
sahf
mov
scas
inc
sub
aam
and
lea
dec
rcrl
jl
and
mov
int
popf
sbb
lods
pop
jno
and
pop
mov
dec
or
xchg
sbb
pop
loopne
adc
pop
push
xchg
mov
lret
xchg
movsl
push
movsb
pop
sbb
mov
add
int
push
popa
movsl
jb
cmp
sti
jno
jmp
dec
mov
pop
loope
movsl
fwait
and
push
movsl
cld
bound
adc
popf
out
jmp
xchg
mov
dec
sbb
jecxz
fildl
adc
and
or
adc
ja
push
cmpsb
loopne
mov
add
push
mov
outsl
push
cld
lret
scas
xor
lret
jno
insb
push
dec
pop
xor
rcll
cld
out
cmp
dec
and
cld
orb
and
stc
pop
cmp
nop
fsubs
rcll
adc
add
and
pop
icebp
pop
adc
cmpsb
ja
int
mov
lods
ds
and
sbb
leave
hlt
out
push
dec
call
scas
jge
repnz
out
jae
jge
sub
lcall
inc
out
hlt
outsl
adc
sub
movsl
stos
add
sarl
ja
pusha
test
repnz
daa
mov
add
fildl
add
scas
fcomps
mov
mov
ljmp
mull
xchg
mov
cmp
scas
sub
loope
pop
jecxz
sub
or
stos
sub
clc
pop
addr16
push
add
xor
stos
fiadds
cli
xor
loope
aad
jb
jnp
sbb
mov
mov
mov
xchg
dec
cli
int
jp
push
mov
push
push
movsb
adc
add
or
hlt
lret
insl
pushf
sub
or
test
fcomp
repz
xchg
cmp
sbb
sbbb
dec
adc
mov
shr
fsubrl
cwtl
sub
mov
adc
andl
push
dec
mov
pop
dec
mov
out
in
idivb
mov
outsl
push
sub
movsb
sbb
addr16
inc
fldt
enter
add
ficomps
push
fs
stos
mov
ficomps
icebp
shrb
ds
xchg
add
mov
ret
xchg
mov
enter
call
pop
adcl
inc
lahf
push
xchg
sub
sub
hlt
fdivl
movsl
aam
je
lods
sbb
test
daa
jae
pop
mov
xchg
push
cld
fisubrs
mov
mov
push
xor
movsb
ljmp
jnp
call
cmp
notl
outsb
xchg
jb
dec
pop
mov
lret
imul
pop
sti
imul
imul
das
fdivl
arpl
push
call
mov
jae
imul
pop
jg
nop
mov
stos
fnstenv
jo
xchg
in
push
mov
lds
fwait
rcr
aaa
mov
pop
les
jnp
shr
add
jge
loop
sbb
and
mov
mull
pop
iret
pop
adc
lcall
adc
jl
mov
jns
sub
xor
push
arpl
mov
out
ret
sub
pushl
fs
mov
js
test
jne
xlat
mov
out
mov
jbe
test
sbb
mov
mov
jbe
xchg
insb
loop
popf
pop
sub
out
and
mov
movsb
lods
test
dec
movsl
ja
add
push
jns
flds
movsb
xor
lock
insb
pushf
jecxz
outsb
into
mov
push
sub
ret
mov
shl
add
rclb
mov
inc
mov
inc
imul
pop
push
adc
imul
clc
cmpsb
cmp
test
dec
rcrl
mov
es
mov
and
pop
jb
in
add
out
adc
fs
shlb
mov
mov
nop
in
cmp
cs
decl
jle
sbb
aaa
js
mov
add
call
popa
insl
dec
decb
movsb
daa
stos
or
imul
cld
cmc
les
cmpsb
sub
fbld
negl
outsb
je
jns
push
insb
into
fsubrs
popa
add
xchg
shrl
cmpl
jecxz
aas
sub
daa
lea
push
sbb
xchg
push
ret
and
mov
adc
adc
pop
scas
mov
dec
ds
test
mov
test
sub
push
insb
rcll
mov
mov
add
or
fs
xor
or
add
sub
mov
mov
push
xor
into
test
jbe
cmc
cmp
adc
xor
testb
out
xor
setge
inc
push
out
scas
shll
addr16
pop
js
loope
fistl
loope
fsubl
xor
sub
adc
push
sarb
mov
imul
jbe
mov
or
sbb
jae
jo
loopne
pop
daa
movsb
inc
loop
inc
sub
mov
int
rolb
inc
and
dec
pop
sub
das
shl
iret
or
dec
mov
mov
out
sub
push
sbb
sub
xchg
pop
xchg
daa
jae
lds
mov
mov
cmpsl
jp
in
bound
or
imul
xor
mov
inc
loope
outsb
mov
addr16
popl
call
push
xor
xor
xchg
sub
lcall
jecxz,pt
pop
les
xchg
movsb
je
ja
les
std
lcall
mov
scas
xchg
iret
inc
xchg
je
or
add
into
fdivs
pop
pop
in
shll
nop
or
mov
clc
or
add
jae
stos
cmp
dec
jge
mov
or
mov
test
push
test
shrl
push
and
inc
popa
das
jno
call
mov
cmp
adc
jb
stc
jge
mov
imul
mov
xchg
es
nop
jnp
arpl
fcomi
xor
lods
inc
xor
sub
push
push
jmp
in
loop
popa
sub
xchg
popf
pop
inc
or
loopne
sub
cltd
pop
arpl
mov
fdivrs
lahf
lds
sub
xlat
and
sbb
test
mov
fisubrs
add
ljmp
sub
fsubs
jae
mov
push
jp
add
in
scas
dec
cwtl
test
out
pop
fdiv
movsl
push
out
mov
and
or
mov
lret
dec
push
outsl
loope
mov
mov
sub
sub
call
cmp
mov
xor
jae
cwtl
cwtl
mov
dec
push
sbb
add
push
push
dec
lea
add
mov
rcrl
ret
xchg
mov
jge
pop
shrb
inc
mov
xchg
or
addr16
and
imul
pop
mov
outsb
rolb
or
xlat
scas
int3
cmovo
cmp
mov
ficompl
pushf
int
cli
cltd
flds
xor
sub
or
xor
lods
dec
lods
out
xchg
xor
dec
push
std
mov
lret
adc
lret
bound
fdivs
xchg
mov
nop
add
nop
and
mov
jne
push
mov
in
clc
mov
xchg
pop
repz
or
pushf
imul
push
jg
xchg
jge
arpl
insl
sbb
aas
stos
pop
out
out
xor
repnz
test
push
lea
out
or
dec
popa
int
es
dec
push
fdivl
mov
sub
jg
and
push
pop
decb
xor
jg
aad
cld
pop
adc
xchg
mov
adc
sub
jns
xchg
js
lods
add
mov
movsl
xor
std
lds
push
in
pop
insb
and
sbb
mov
outsl
inc
cld
fdiv
lret
or
sub
push
stos
push
xor
fwait
xor
hlt
aad
xor
xlat
sbb
loope
test
add
cli
daa
mov
push
std
and
jmp
cmpb
and
add
inc
xor
sbb
nop
xor
and
pop
iret
mov
sub
and
jne
push
inc
inc
xor
shlb
cmpb
enter
jp
jg
flds
ds
jp
mov
mov
jb
mov
adc
pushf
inc
mov
cs
aam
ja
mov
arpl
pop
iret
stc
test
cmpsb
or
movsb
icebp
mov
inc
xor
cmp
inc
push
lret
mov
lcall
sbb
xor
lret
sarl
call
xchg
cltd
mov
in
push
push
mov
sti
xor
popf
ja
cmp
mov
int3
sbb
cltd
popf
or
add
addb
icebp
cmp
dec
les
stc
das
test
cmp
or
push
inc
sbb
mov
xchg
icebp
in
jo
cmp
test
shrb
lret
push
insl
rcr
jp
icebp
outsb
lret
and
mov
sarl
lods
add
ror
push
ret
xor
daa
add
in
roll
hlt
mov
cmp
test
outsb
imulb
add
dec
pop
lcall
out
sbb
and
adc
lahf
mov
push
movsl
mov
andb
fistps
mov
mov
mov
pop
es
cmp
test
cmpl
pop
in
lahf
adc
fbstp
test
lods
xchg
lret
push
addb
dec
mov
insl
sub
in
in
not
mov
cwtl
mov
cwtl
mov
movsl
scas
pop
mov
sub
jge
fisubl
sub
out
gs
dec
xchg
adc
rorb
jno
xchg
jge
arpl
stc
mov
lds
pop
mov
pop
addr16
jo
aad
xchg
mov
aad
push
inc
xor
push
scas
cmp
fimuls
lea
pushf
lods
sahf
test
lret
out
fbstp
mov
std
rorb
les
mov
loopne
subl
cmpl
pop
loop
in
out
ds
xchg
dec
push
mov
jae
sar
cmp
sbb
rorb
stc
xchg
stc
adc
loopne
shlb
and
sbb
mov
adc
mov
and
scas
push
cmp
push
lahf
data16
cmp
fs
insl
pop
pop
xchg
or
mov
jp
and
fstp
xor
xor
pop
mov
adc
cld
pop
add
fcomps
inc
insb
push
push
jnp
jecxz
add
lcall
lcall
and
test
mov
pop
and
lss
lret
mov
push
jp
out
mov
sub
xor
or
push
out
cmp
cmpl
jae
shl
adc
inc
dec
sbb
push
or
jno
jbe
sub
cld
push
sbb
jnp
pmuludq
mov
mov
test
xor
aas
push
int
adc
mov
pop
out
fwait
loopne
mov
jbe
jb
mov
pop
pusha
pop
xchg
cld
lahf
add
mov
pushf
ret
repnz
ds
into
imul
into
adc
enter
ret
adc
fsts
addr16
jno
aad
adc
xchg
and
inc
sti
cmpl
or
push
and
sti
jp
jnp
lcall
xor
out
mov
into
lock
call
pushl
lods
mov
pop
cmp
add
aad
push
repz
jnp
loop
jmp
add
dec
push
jecxz
sbb
or
int3
push
sub
orb
xlat
in
mov
push
push
fldl
and
das
mov
inc
adc
mov
adc
shr
or
stc
pop
std
mov
xchg
mov
out
insl
mov
je
in
adc
cmp
into
outsb
cmp
das
xor
lock
fdivrl
and
xor
in
imull
jno
xor
cmp
leave
arpl
aad
or
fsubl
subb
repz
sub
pop
inc
ljmp
adc
jae
loop
stos
sub
xor
out
cmp
test
pop
xchg
insl
mov
pop
lds
ljmp
vpmacsdql
xor
pop
cs
push
out
sub
inc
out
push
sti
lds
imul
inc
dec
sub
fildl
andl
mov
mov
dec
add
sbb
out
lea
mov
jle
sub
shll
inc
mov
call
outsl
xor
popf
cs
scas
gs
lods
fsubrs
or
adc
inc
dec
faddp
sbb
les
mov
jo
aas
mov
out
pop
std
add
push
inc
fs
das
mov
es
sub
pop
mov
shll
shrb
stos
and
mov
cmp
xor
in
fcomip
popf
pop
pop
cmp
mov
aas
fsubs
jo
bound
push
mov
iret
out
or
insl
les
mov
jge
pop
shr
jo
inc
add
dec
mov
jg
ss
ds
sahf
sahf
jmp
cmc
push
lds
out
ret
insl
outsb
mov
jmp
bound
lcall
adc
mov
adc
adcb
mov
add
adc
mov
xor
shl
dec
pop
pop
call
daa
cmpsl
repz
filds
iret
addr16
dec
adc
pop
adc
dec
out
sarl
ret
cs
and
mov
test
xor
jbe
mov
xor
mov
fldenv
push
mov
mov
fstl
pop
jno
clc
xorl
ss
jle
rolb
lret
pop
aad
push
cld
outsb
pop
les
sub
aad
std
pop
sarb
idivb
stc
das
push
out
addb
jae
scas
sub
push
lods
cmpsb
cmp
subb
bound
loope
fldt
aam
add
sarb
ds
pop
arpl
imul
push
sub
out
repz
mov
jl
inc
std
sub
out
pop
mov
inc
in
pop
push
ficompl
push
or
lods
shll
test
add
fisubs
pop
sub
testl
mov
ja
bnd
mov
je
push
push
mov
lods
outsl
or
sahf
mov
mov
int3
mov
mov
mov
outsl
sub
adc
jmp
mov
pop
xchg
mov
dec
lods
adc
xchg
mov
pop
imul
cli
mov
jg
and
pop
mov
mov
mov
loop
push
jge
call
cmpsb
shrb
ds
xchg
and
stos
out
xor
and
pop
mov
push
cwtl
mov
cmpsb
loopne
mov
ret
push
mov
mov
cmp
sub
mov
add
ret
adc
popf
sbb
lods
dec
jl
lea
jg
out
shl
pop
outsl
sbb
mov
ds
mov
inc
push
xlat
mov
add
loopne
pop
ja
fs
pop
addb
and
aaa
inc
and
cmpsb
std
xlat
cmp
push
ret
stos
mov
and
adc
add
shrb
mov
sub
loopne
mov
mov
scas
fdivs
outsl
inc
sub
movsb
out
es
in
fucompp
stos
xor
mov
loope
int
and
and
jmp
cmp
hlt
dec
sbb
pusha
jp
roll
repz
mov
mov
sahf
pop
imul
jo
pusha
push
and
insb
mov
arpl
dec
lods
dec
int
sbbb
jnp
aaa
sbb
ja
and
lea
or
int
es
sahf
ret
or
add
pop
popf
lods
dec
lret
andl
push
shrb
orl
jnp
cmp
movsl
pop
add
int3
sbb
out
mov
pop
call
aas
jae
inc
sbb
lods
xor
sub
fnstcw
negl
cmp
mov
and
mov
push
mov
xor
mov
sbb
mov
dec
stos
lret
sbbb
aaa
sahf
fwait
les
adc
mov
outsb
add
adc
popa
jmp
push
mov
mov
addr16
in
mov
dec
sbb
rclb
sub
das
push
hlt
imul
movsl
sbb
shlb
inc
cmp
stc
dec
pop
cmc
into
push
or
aad
adc
lods
xlat
jmp
cli
arpl
lret
sti
loope
shlb
cmc
out
sti
lds
add
xlat
lea
jecxz
je
sub
pop
insb
into
stc
test
in
call
xchg
and
pop
jae
out
data16
fcoml
cmp
push
inc
mov
roll
mov
ret
stos
fistps
dec
int3
outsl
xchg
add
push
push
jl
int
int3
mov
pop
jb
es
sarb
add
int
xchg
inc
push
mov
and
mov
or
sbb
jl
jmp
imul
in
dec
dec
sub
jl
sub
les
daa
test
xchg
cltd
jo
pushf
popf
jmp
jnp,pt
clc
pop
push
xor
or
ds
sub
iret
repz
stos
mov
mov
mov
fld
mov
xchg
mov
mov
mov
movsl
fwait
add
sbb
loop
inc
xor
xor
das
sub
fdivrs
pop
mov
dec
bound
aas
movsb
test
adc
mov
mov
stos
dec
xor
in
loopne
cmp
in
add
xchg
adc
and
adc
ret
pop
or
lret
adc
negl
cltd
or
xchg
fbld
and
inc
clc
test
js
sbb
jbe
int3
aaa
hlt
jl
jo
je
inc
sbb
and
or
xchg
jnp
and
scas
sahf
mov
loopne
adc
and
sbb
mov
cmpsl
outsl
movsl
mov
push
adcb
fistpl
mov
lcall
push
jno
add
test
and
adc
test
xchg
leave
pusha
pop
push
loop
mov
loop
fsubs
add
or
dec
inc
mov
mov
cltd
mov
loope
jbe
pop
iret
fidivrl
fwait
sub
xor
xchg
mov
and
enter
adc
xor
mov
and
push
arpl
jmp
add
repz
into
fs
into
mov
insl
gs
xchg
bswap
mov
hlt
test
lods
mov
cmp
cwtl
and
push
fucomp
test
push
xor
sbb
push
aas
fisubs
in
divl
push
mov
jecxz
or
mov
stc
cmpsl
cmp
ret
sub
div
xchg
fdivrs
adc
xor
int3
mov
in
jo
gs
test
rol
dec
add
scas
stc
cmp
sub
xchg
gs
adc
aam
leave
push
jecxz
pop
push
dec
cmp
inc
mov
or
mov
sbbl
or
lahf
idivb
xchg
hlt
adc
stc
ja
repnz
test
les
mov
dec
sbb
ficompl
and
cmpsl
jnp
or
cli
mov
or
adc
lock
ja
inc
fadds
mov
jb
dec
push
sahf
xlat
push
and
test
mov
add
or
xchg
push
push
jl
jmp
popa
movsb
loope
mov
mov
int
sbb
fimuls
pop
jp
xor
andb
fimull
mov
sbb
fstl
das
pushl
or
jb
inc
jge
adc
push
push
pop
mov
cmp
jo
pop
iret
hlt
xor
adc
inc
loope
test
dec
xchg
xchg
mov
mov
test
jne
sub
pop
pop
pushf
loop
jge
pusha
lret
daa
pushf
test
divl
int
test
or
pop
cmp
fidivrl
inc
pop
add
inc
loop
jbe
xor
jmp
test
push
cmp
xor
pop
and
push
out
cmpsb
fmul
lcall
sub
adc
jb
or
out
lcall
dec
xchg
mov
jae
mov
xor
add
aad
test
cmp
daa
cmp
pop
add
flds
pop
fwait
sub
adc
stos
cmp
adc
flds
loopne
rcrl
int3
or
adc
fistpll
dec
mov
in
lahf
and
push
mov
xor
outsb
push
test
enter
imul
sbb
add
fwait
and
pop
sbb
fsubrl
fdivs
ljmp
fiadds
sbb
jo
out
adc
push
or
mov
clc
push
or
mov
sub
int3
lds
push
loopne
xor
adc
adc
mov
or
adc
sub
lods
loope
xchg
insl
add
fs
push
xchg
mov
sbb
pop
dec
int
mov
pusha
jno
ret
mov
pop
cmp
clc
and
jge
imul
inc
jbe
lcall
pop
mov
lret
push
sub
or
outsb
xor
push
bound
pop
push
rcrb
cmp
jmp
lods
scas
push
dec
push
push
stos
in
ror
jmp
jge
data16
dec
cmpsb
arpl
mov
dec
push
jge
fcmovnb
mov
mov
cmp
in
nop
test
push
add
lahf
aad
jmp
test
jne
inc
jp
outsl
fwait
pushf
sti
mov
sahf
mov
icebp
enter
pop
cltd
decb
xchg
out
rolb
add
incl
jp
cmp
mov
lods
jecxz
andb
popl
sbb
nop
fcoml
jp
push
lea
dec
pusha
mov
adc
notl
shlb
xchg
repz
inc
or
outsl
and
ss
popf
lret
in
addr16
lods
sub
retw
xlat
cmpsb
and
test
cld
outsb
pop
cs
add
test
int3
xor
cli
or
iret
push
cld
cmp
out
push
cs
stos
mov
sbb
mov
popf
mov
mov
sbb
mov
jae
cmp
lds
and
mov
cs
mov
cs
push
mov
mov
ss
inc
das
ret
cli
jnp
adc
adc
sub
pop
or
add
dec
jns
push
or
test
inc
push
sub
pop
popa
inc
pop
push
cmp
jb,pt
inc
sbb
popa
lods
cwtl
fidivrl
sbb
enter
dec
and
sbb
mov
dec
and
hlt
xor
xchg
pop
adc
popa
sbb
dec
xchg
je
outsb
adc
sti
xor
leave
mov
in
fimuls
cmp
lret
push
adc
mov
sub
sub
xlat
push
in
loopne
dec
jb
sub
cli
jne
sbb
add
mov
les
and
xchg
mov
mov
adc
insb
popf
hlt
xor
fucomip
aad
pusha
adc
enter
out
xchg
jnp
lret
popl
lahf
aam
or
mov
xchg
cmp
out
dec
nop
adc
push
stos
or
mov
push
scas
cmp
xor
sbb
sub
adc
sub
das
cmp
cmp
sub
jne
mov
jge
or
leave
imul
out
mov
cld
lds
inc
xchg
ficoms
rcr
jmp
mov
or
inc
xchg
adc
jl
pop
xchg
hlt
stos
push
cmp
xchg
leave
mov
int
mov
out
rorl
sahf
int3
loope
dec
mov
pop
xchg
cmpsl
jb
sbb
dec
in
aaa
into
cs
cmovo
stos
or
sub
add
push
lret
lret
insl
test
pop
nop
or
or
push
and
inc
inc
push
psraw
sbb
push
push
xchg
inc
cmp
or
sub
add
es
jnp
addl
int3
mov
hlt
inc
in
or
leave
xor
jge
and
cmpsl
mov
inc
or
inc
cmp
jmp
int
int
lcall
pop
pop
daa
mov
mov
sub
mov
ficomps
mov
stos
and
sbb
pop
iret
imul
xor
push
ret
sbb
and
fldt
sbb
sbb
jl
cs
ja
dec
cld
shl
push
sbb
fdiv
cmc
lods
mov
out
aam
imul
stos
jmp
inc
shll
jbe
xorl
sbb
andl
adc
cmp
adc
fmuls
adc
and
push
ljmp
int
cmp
add
lcall
pop
int
jge
divl
add
and
lock
push
and
xchg
test
pop
stos
xor
in
outsb
mov
lea
test
sub
jns
xor
repz
mov
sub
icebp
ljmp
lods
mov
in
pop
out
sub
ret
mov
repnz
dec
mov
or
lretw
push
push
or
aas
xchg
mov
xor
clc
or
adc
and
cmpsl
ljmp
loop
data16
pop
cmpsl
test
cmp
xor
ret
mov
and
xchg
adc
mov
mov
pop
add
rcrl
stc
test
leave
sbb
and
sub
nop
push
hlt
inc
sbb
push
mov
or
mov
sbb
out
aad
shrb
and
lods
cltd
or
jno
in
test
stos
hlt
mov
in
popa
inc
sub
imul
loop
lods
lgs
jne,pn
jb
jae
loope
mov
jge
cld
xlat
dec
scas
les
clc
push
fucom
mov
push
stos
push
aad
out
mov
mov
dec
aas
sbb
movsl
sbb
popa
push
dec
ja
adc
mov
mov
fistpl
rol
and
pop
sti
movsl
gs
inc
sub
mov
aam
test
imul
lret
lods
xchg
or
sbb
cmp
repz
stos
or
adc
movsb
in
movsb
outsb
insl
cmpsb
cmp
icebp
push
mov
lret
in
inc
mov
es
xchg
push
in
in
mov
mov
test
or
lcall
fwait
scas
int3
adc
scas
mov
mov
push
addr16
xchg
js
sub
sub
arpl
dec
fadds
adc
dec
and
xchg
mov
push
xor
xor
outsb
cmp
push
mov
pop
mov
sbb
xchg
adc
arpl
nop
lret
jb
fsubs
or
jnp
test
andb
xor
clc
sbb
sbb
testb
fs
xchg
jns
aas
and
flds
sbb
and
and
jecxz
push
mov
clc
gs
mov
mov
imul
sbbb
outsb
mov
imul
cmp
rolb
adc
cmp
adc
lret
mov
out
pop
enter
lea
add
imul
cmp
sbb
ds
pop
pop
jns
add
pop
inc
and
in
lock
xchg
daa
mov
mov
and
dec
insb
roll
fidivs
inc
cmp
or
jo
mov
rcr
mov
popa
lret
xor
sub
cs
test
aad
mov
push
pusha
int
cmp
jae
addr16
insb
pop
and
daa
or
movb
call
add
jp
adc
mov
xchg
loope
cli
adc
dec
sbb
mov
sub
sub
sub
push
xor
outsb
out
and
in
and
push
mov
mov
pop
xchg
cld
in
outsb
xor
ficompl
icebp
push
sti
adc
push
imul
cli
inc
and
fimuls
sti
mov
lret
psadbw
mov
sub
mov
add
mov
and
mov
pushf
fcompl
xor
outsl
test
addb
nop
setae
dec
rolb
pop
iret
inc
inc
loope
iret
cld
mov
cltd
enter
shl
push
pop
dec
outsl
xchg
push
sub
call
sub
rcll
push
pop
pushf
cmp
sbb
ficomps
xchg
or
mov
stos
jns
push
or
loopne
or
sbb
icebp
mulb
in
dec
lods
add
ja
xchg
jo
lahf
ljmp
push
popf
jne
dec
testb
sbb
push
mov
inc
mov
mov
ret
in
mov
roll
adc
push
mov
shrb
pusha
je
daa
xlat
insb
xlat
push
jo
js,pn
fistpl
mov
ret
xchg
jns
stc
arpl
mov
jle
mov
sub
dec
push
and
jb
xor
xchg
mov
jne
nop
bound
aam
jl
int3
mov
sub
mov
dec
add
adc
jne
pop
inc
jp
fidivs
inc
sub
and
cmp
pop
xchg
daa
daa
out
dec
gs
or
addr16
sbb
mov
icebp
or
add
xor
mov
adc
pop
dec
cld
fadds
pop
test
fsubs
in
sbb
add
inc
int3
lea
xchg
test
or
push
shrb
push
int3
arpl
data16
ljmp
insb
xor
movsb
dec
cmp
mov
fs
inc
and
mov
sbb
aas
lret
or
push
les
je
nop
fistl
jb
cmp
faddl
xchg
xchg
enter
or
ficoml
or
push
test
aas
fstpl
ret
test
inc
push
and
test
add
daa
clc
sbb
sbb
jno
pop
out
pop
or
inc
ret
dec
mov
mov
mov
repz
adc
leave
lea
int
cs
jl
cmpps
mov
std
mov
pop
test
cmpsl
add
cmp
aaa
std
repz
mov
pusha
sahf
jecxz
jp
cwtl
fstps
jp
adc
pop
ja
or
pop
pushf
js
scas
les
stos
jns
jb
daa
divl
mov
or
inc
outsl
adc
adc
xor
mov
nop
fwait
sarb
jne
pop
ss
gs
int
in
jne
roll
mov
scas
test
cmpsb
add
cmc
in
fldl
loopne
mov
fwait
cmpsb
mov
sti
adc
fdivrp
test
outsl
es
mov
imul
add
fstpt
jl
imul
pop
mov
call
jecxz
mov
test
cmp
xchg
pop
int
inc
mov
push
fs
pop
sub
test
call
sub
dec
mov
call
test
mov
or
mov
xlat
push
popa
bound
pop
sbb
insl
adc
scas
inc
je
cmpl
xchg
lahf
call
je
leave
xor
ret
jns
outsl
sbb
adc
adc
imul
clc
pop
sbb
add
mov
shl
cs
pushf
adc
scas
jno
mov
cmp
sub
mov
out
mov
or
pop
push
fsub
es
loopne
cs
in
leave
lret
addr16
pop
dec
shrb
hlt
fnstenv
push
or
mov
mov
fcomi
mov
jo
cmp
push
out
cli
pop
sbb
pop
cmc
mov
movsl
pusha
popa
dec
or
cwtl
imul
into
cmp
sub
rcrb
dec
in
in
adc
xchg
jns
fstps
jl
rorl
lods
fsubs
mov
in
imul
into
dec
sbb
jg
xor
insl
stos
cmp
xlat
pusha
cmc
aad
aaa
or
mov
mov
mov
or
loopne
sbbl
leave
fnstenv
jne
mov
cmp
mov
sub
add
jmp
pushf
adc
sar
mov
mov
in
cmp
lret
cmp
add
cmp
adc
xchg
lret
pop
or
iret
jmp
pop
ljmp
fimuls
orb
push
into
push
sbb
cld
lea
pop
cld
push
sbb
repz
fsubr
ret
mov
xor
int3
cmc
pop
add
or
loopw
adc
mov
rclb
inc
ja
mov
jbe
out
sbb
popf
jns
sbb
push
push
and
addr16
mov
add
fists
cmp
mov
loop
loop
xor
bound
test
inc
fnstenv
inc
movsb
popf
shlb
adc
sub
in
mov
fmull
int
adc
push
fdivs
pop
cmp
fs
fisubrs
cli
jae
shll
icebp
in
sub
jmp
daa
test
je
xchg
aaa
iret
sbb
shl
pop
mov
movaps
frstor
jo
xchg
stos
dec
bound
mov
pop
pop
sti
mov
insl
aaa
cmc
aas
aam
mov
inc
mov
gs
test
or
jmp
cmp
ljmp
dec
jmp
fstps
mov
or
xor
flds
sbb
lahf
mov
gs
xlat
int3
jge
insb
outsb
mov
scas
dec
aad
mov
mov
sbb
pushf
and
arpl
push
fildl
inc
dec
and
cmpsl
xchg
and
shrl
and
pusha
jo
sahf
gs
sti
xor
cmpsb
add
pcmpeqw
xchg
jne
dec
push
repnz
sbb
lods
push
imulb
xor
sub
sbb
pop
iret
ljmp
or
add
shrl
xchg
xor
mov
adc
fnsave
cli
xor
dec
mov
jecxz
mov
push
mov
adc
ja
in
pushf
aad
lcall
sar
push
pop
fcoml
cwtl
fwait
push
mov
xchg
mov
pop
sbb
add
mov
or
arpl
outsl
ss
dec
adc
sbb
add
addr16
stos
pop
popa
mov
ror
push
fcmovnu
xchg
jb
mov
loopne
push
mov
lea
jno
outsl
cwtl
mov
jecxz
inc
mov
inc
or
xor
jecxz
andl
xchg
or
lahf
sbb
pop
dec
xchg
and
cli
and
dec
pop
cmc
mov
out
jns
dec
aad
pop
clc
lret
arpl
jl
fs
inc
shll
xchg
cmpsl
cs
das
cmp
fstps
jg
fdivs
adcl
scas
add
repnz
lds
movsl
leave
jno
jle
adc
dec
mov
inc
inc
push
pusha
dec
js
loop
daa
xlat
enter
sub
jnp
and
mov
cmp
aad
gs
xchg
push
sbb
leave
jmp
loope
inc
loopne
xchg
loopne
push
push
cli
jno
test
incb
repz
sbb
sbb
lds
and
daa
push
fwait
xor
pusha
mov
sub
js
add
cmpsl
mov
orl
cmp
jns
dec
mov
insl
mov
push
cmp
lods
xor
push
push
shlb
pushf
aaa
inc
les
loope
or
fs
jge
mov
mov
pop
or
les
dec
jl
sahf
xchg
jo
add
sub
sbbl
mov
mov
mov
and
jne
mov
loope
mov
adc
jno
add
mov
mov
mov
add
sbb
stos
movl
push
inc
jle
pop
or
inc
insb
ljmp
jb
sahf
mov
sub
cmp
stos
mov
jbe
roll
mov
xorb
push
mov
adc
mov
in
mov
int
xchg
icebp
clc
out
ljmp
mov
clc
adc
xchg
into
lods
xor
hlt
dec
push
popa
lret
daa
add
push
mov
ret
or
mov
fwait
or
sti
mov
repnz
cmp
jno
mov
aas
lea
out
mov
mov
inc
sbb
cmp
repnz
jle
lahf
lcall
xchg
mov
pop
adc
pop
dec
cmpsb
sbb
push
xchg
aam
add
mov
lock
xchg
inc
jge
mov
lret
nop
or
fists
rcr
mov
mov
addr16
pop
jmp
mov
cmpsb
pusha
aad
dec
faddp
call
inc
cmp
cwtl
sahf
test
rcll
push
dec
push
sti
gs
daa
jnp
shrb
fldenv
mov
in
icebp
dec
lahf
outsb
lcall
loope
and
push
out
mov
lret
pop
sbb
lods
rcrl
adc
roll
add
jnp
out
sarl
pop
dec
jge
mov
cmp
icebp
adc
lods
xor
adc
mov
sbb
mov
xor
cwtl
dec
jg
fnsave
pop
push
jmp
push
add
dec
insb
sbb
xchg
outsb
test
jnp
lret
lods
popa
push
inc
mov
xchg
lahf
xchg
pop
fldln2
lea
sahf
lahf
mov
dec
stos
mov
xlat
or
dec
daa
pop
sub
ret
outsl
xor
lock
icebp
ror
xchg
jns
vpshad
adc
xor
stc
imul
stos
rclb
cmc
test
cmp
push
xchg
mov
push
shrl
mull
jp,pn
mov
jecxz
ja
add
out
pop
into
dec
dec
add
std
insb
sbb
sbb
fildll
xor
mov
sub
push
and
inc
dec
sub
in
cmpsl
nop
push
xor
and
or
movsl
fwait
mov
inc
adc
xchg
add
adc
mov
loope,pt
pop
pushf
sbb
insb
adc
ss
add
jnp
test
add
jne
repz
arpl
inc
test
sbb
das
push
cs
mov
popa
pop
out
mov
dec
mov
sbb
callw
push
pop
cmpsb
cmc
mov
xor
mulb
stos
cli
les
jge
lods
dec
xor
mov
cmp
dec
call
push
rcrb
inc
adc
mov
mov
add
dec
adc
testl
pop
imul
in
inc
adc
imul
mov
mov
inc
das
jge
pop
das
push
mov
pop
fnsave
in
and
loop
mov
pop
stc
cmp
in
fwait
enter
imul
frstor
push
push
repnz
jns
fnstsw
xchg
pushl
jecxz
sarb
fsubrs
mov
loope
aaa
shl
fcompl
sbb
push
int3
das
fiaddl
mov
jecxz
out
repz
xchg
test
adc
out
ss
mov
out
lret
xor
cmc
add
bound
mov
sahf
pop
sub
jo
bound
jmp
jle
ds
xor
aas
in
cmp
jb
mov
mov
pop
sub
and
mov
insb
popa
xor
pushf
sub
sbbb
fs
dec
lds
mov
aaa
shrl
pop
xchg
cmp
aad
adc
jmp
dec
gs
mov
shll
add
repz
sarl
jge
je
push
adc
xchg
and
mov
bound
dec
lahf
mov
in
push
cmp
testl
jg
push
jmp
in
outsl
mov
xlat
decl
aas
sbbb
loop
sti
cmp
das
loope
ss
push
cmp
ret
lcall
or
shrl
call
xorw
jne
addr16
scas
lcall
sub
pop
loopne
fisubrl
sub
test
pop
inc
dec
cmp
cmp
xchg
addb
cmp
imul
mov
aam
inc
xlat
mov
jbe
popa
test
ret
xor
gs
mov
cmp
xor
dec
xrelease
mov
out
daa
lret
lock
and
std
repz
mov
insb
inc
lea
int
stos
aad
xor
xor
dec
push
inc
mov
sbbb
xlat
jmp
pop
or
imull
lock
aaa
and
sbb
lcall
inc
jge
push
cmp
fs
and
stc
sbb
jnp
paddusw
rcrb
push
pop
lcall
pop
push
xor
inc
or
inc
mov
leave
sbb
popa
push
sbbb
or
xor
dec
test
int
out
sti
jge
mov
cmp
xchg
movsb
ror
push
nop
fnstsw
inc
mov
jp
pop
push
insb
jmp
sbb
xchg
cs
outsb
enter
mov
pop
pop
push
pop
pop
les
inc
icebp
jmp
cmpsl
les
lcall
inc
mov
addr16
add
dec
mov
or
popa
mov
fsubs
mov
fwait
sarl
sub
cmpsl
sti
mov
cs
fadd
jmp
mov
fidivrl
jl,pt
repz
fmull
jp
mov
mov
and
fwait
dec
jne
sbb
pop
scas
xlat
scas
out
aad
and
cmpsl
sbb
lret
pop
sahf
andl
mov
mov
in
fsubrl
mov
mov
jns
jle
pop
jno
pop
and
and
fbstp
repz
xchg
es
leave
push
mov
pop
mov
and
out
push
inc
add
pop
push
mov
push
inc
push
adc
test
movsb
sbb
pop
push
jl
stos
jg
lret
nop
sbb
sub
inc
push
jno
mov
ja
aas
ljmp
xchg
cmpsl
xchg
sub
add
in
xor
es
mov
lock
xchg
sbb
dec
add
pusha
add
roll
leave
shrb
shlb
insl
adc
loope
mov
insl
ret
shlb
push
addr16
dec
movsb
push
jbe
pop
insl
adc
pop
stos
dec
sub
push
fistpl
das
mov
lcall
cli
test
ljmp
push
mov
jne
aad
lret
add
ret
cs
add
andl
mov
jl
xchg
aam
push
push
push
or
sar
mov
inc
cmp
gs
fdivs
icebp
shrl
ret
adc
pop
incb
push
ja
xor
xor
xor
fidivs
mov
pop
xor
mov
mov
dec
fsubrs
sti
add
aam
ret
xor
and
mov
lcall
icebp
das
mov
lahf
add
cmp
cmp
jp
dec
mov
lret
shrl
sbb
xchg
sahf
ffree
lock
jae
pop
mov
inc
in
popa
and
push
and
mov
cmp
in
lahf
jne
xor
int3
lods
jmp
insb
rol
das
add
sti
aas
and
sti
clc
push
je
pop
lods
fs
add
dec
and
adc
or
jo
adc
or
cmp
inc
sti
or
mov
in
jbe
ret
push
sbb
push
in
shrb
pop
xlat
mov
xor
sbb
mov
lods
orb
sbb
cmp
xchg
mov
aam
jp
pop
fwait
add
orl
adcb
sti
ss
mov
shlb
push
ret
inc
or
xor
adc
xchg
mov
push
mov
pop
rolb
add
pop
mov
movsb
popa
adc
bnd
push
outsl
outsl
dec
push
enter
jns
push
ljmp
enter
mov
mov
push
cmp
cld
push
inc
es
inc
rcll
mov
pop
add
mul
add
and
pusha
fcmovne
cld
int
jns
mov
cs
xor
test
popf
outsl
insb
adc
scas
sbb
in
sbb
push
outsb
sub
add
mov
cmp
and
xor
inc
sbb
stos
push
cmpsb
loop
pop
sbb
addb
dec
xchg
push
dec
jmp
les
sarl
sub
mov
and
lock
je
jno
inc
sbb
jp
or
dec
push
into
and
adc
jge
push
std
xchg
ljmp
cld
xchg
aas
cmp
aad
add
movsb
sub
mov
pop
xlat
int
cld
jge
fwait
push
outsl
sbb
pop
dec
icebp
mov
pop
sbb
or
shlb
sub
bound
add
dec
das
pop
mov
ss
adc
ret
and
das
cmp
mov
cwtl
jl
jns
mov
mov
pop
in
inc
jmp
lds
push
fmull
xor
and
loopne
pusha
pop
addr16
cld
es
mov
rcrl
xchg
push
sub
xor
icebp
sbb
sahf
pop
sbb
lods
icebp
movsl
addl
out
mov
out
faddl
push
imul
das
cmpsb
lcall
fdiv
cmpl
aam
cmp
fwait
daa
inc
mov
aaa
xchg
inc
out
mov
or
cmp
mov
sar
inc
xchg
sbb
add
aaa
insb
aaa
jmp
cmp
xor
mov
inc
mov
test
mov
and
lods
loop
pop
push
pop
paddd
shr
cmp
movsl
ret
mov
popa
mov
lock
sbb
pushf
adc
int3
lcall
sub
xor
icebp
push
mov
xchg
insb
int3
mov
divl
sbb
stc
test
cmc
jb
jp
inc
fdivr
fisubrs
ret
addr16
sub
fsubl
jne
out
insl
pop
inc
daa
rolb
outsb
xchg
std
inc
mov
sbb
push
popf
cltd
add
lahf
out
pop
xchg
mov
les
outsb
add
insb
mov
lock
clc
je
ljmp
jne
jg
mov
sub
iret
sbb
in
adc
decl
xor
xor
lods
ret
test
xor
mov
mov
mov
cmpsb
sub
jp
iret
lret
dec
adc
fcmovu
add
imul
jnp
clc
daa
pop
push
les
xor
pop
inc
dec
jmp
movsb
loope
aam
shll
jno
sbb
cmpsb
les
adc
cmp
bound
cmpsl
push
mov
cmpsl
sub
fwait
push
nop
jne
mov
ja
in
xlat
xor
dec
pop
sub
sub
in
dec
in
mov
pop
mov
ss
aaa
inc
sahf
lret
lcall
stc
jp
scas
and
pop
pop
ljmp
and
pop
push
call
cmp
fistl
xor
push
mov
mov
push
iret
jne
mov
int3
xor
test
loopne
lcall
fistpll
ja
mov
lods
cmp
mov
add
jp
call
in
mov
jge
mov
fldt
dec
stos
cmp
scas
shl
movsb
lock
enter
sub
mov
xor
or
lcall
and
movsl
mov
outsl
imul
add
xchg
test
testb
push
jecxz
inc
mov
js
jmp
sub
xchg
xor
xchg
ljmp
sbb
rcrl
call
mov
push
cltd
aaa
sub
pop
push
insl
push
mov
mov
sub
xor
out
adc
and
cwtl
gs
mov
mov
mov
jl
xchg
or
xchg
lods
data16
jnp
dec
dec
jne
nop
sub
fsts
popa
jne
popa
movsb
adc
xchg
sub
stc
cmpsb
or
adc
call
or
pop
scas
sbb
cmp
sbb
scas
sub
dec
jns
mov
ss
ja
cwtl
or
movsb
jo
movsl
daa
out
jae
int3
lds
out
les
ficoml
rsqrtps
sub
dec
mov
out
cmp
leave
movsb
pop
xorb
pusha
cs
jmp
rol
jg
rcrl
negb
add
pusha
fyl2xp1
aas
in
mov
lds
add
dec
cli
mov
arpl
xchg
insl
cmc
stos
cltd
xchg
loope
or
push
es
iret
ja
push
mov
sbb
sbb
pop
cmp
and
pop
test
push
jmp
insl
and
mov
mov
outsl
out
scas
lret
psllq
cmp
push
push
loop
fwait
jae
fnstcw
lcall
sbb
sub
jno
add
cmpsb
insl
pushf
cmp
out
dec
mov
mov
icebp
pop
lods
test
cld
mov
push
jo
mov
dec
shrl
jmp
jo
jp
mov
mov
xchg
stos
lret
fstl
or
push
xor
jne
adc
int
sarb
xchg
gs
xor
das
sub
addr16
pop
add
iret
cmpsl
mov
daa
push
dec
pop
lock
xchg
enter
call
cs
xchg
rolb
ds
ljmp
mov
dec
push
push
add
mov
ljmp
pop
pushf
fwait
lods
mov
popa
lahf
fbld
sub
push
or
nop
insl
call
lods
dec
je
xchg
loopne
imul
mov
adc
ja
jns
add
cmp
mov
rolb
frstor
push
sbb
push
stos
out
mov
insl
movsl
sub
push
push
adc
test
cmp
xchg
lahf
popw
jns
lods
push
lret
popf
mov
dec
aas
cmp
shrb
pop
repz
mov
test
int3
sahf
mov
in
lock
ss
pop
inc
les
push
out
cld
ljmp
iret
dec
lret
sahf
rcl
cld
push
or
enter
mov
cmp
cwtl
xor
daa
pop
inc
inc
iret
mov
mov
repnz
lret
mov
gs
bound
push
mov
ret
out
out
xchg
stos
jnp
fnstsw
and
ror
jb
daa
mov
in
pop
mov
and
ljmp
sub
dec
je
cltd
jmp
mov
sub
push
xchg
sbb
lea
test
adc
lcall
sbb
out
int
fimull
test
add
mov
dec
mov
cmp
lret
jo
xor
je
cltd
repz
sahf
xlat
arpl
sbb
fwait
mov
aas
cmp
movb
rcrl
push
adc
sub
jbe
fs
ds
ret
dec
dec
fdiv
jb
jns
push
push
sub
fs
cmp
fwait
jno
push
adc
rorb
push
leave
or
imul
fistpl
nop
data16
and
mov
lret
mov
mov
addr16
icebp
fisubrl
aaa
dec
mov
mov
roll
fldenv
inc
movsb
fs
test
cmp
xchg
push
jge
icebp
rolb
and
push
sub
mov
or
out
imul
fadds
popf
cmpsb
pushf
scas
mov
xchg
adc
std
imul
pop
inc
cmp
movsl
cmp
mov
inc
hlt
dec
mov
and
loope
lcall
push
notb
add
ds
mov
jge
rcr
sar
outsb
cltd
jns
or
inc
jmp
or
lea
jne
or
loop
xor
ficompl
sbb
arpl
rcrl
pop
dec
lods
iret
das
xlat
or
inc
push
cli
pop
sbb
add
in
les
clc
stos
orl
out
cld
aam
ljmp
cmp
arpl
cmp
ret
pop
iret
ja
cmp
push
mov
and
es
dec
pop
cmc
sub
add
xchg
outsb
lea
cmpsl
xor
cmp
dec
faddl
cmp
xchg
or
jge
mov
mov
push
sbb
pop
lds
int3
cmpl
mov
mov
mov
and
mov
mov
lea
mov
inc
test
out
lret
lock
pop
and
sbb
aam
loopne
pop
es
push
lea
repnz
aaa
scas
sub
arpl
push
and
inc
sti
and
xchg
loope
mov
aaa
jns
pop
xlat
dec
jo
dec
std
adc
aam
jo
xchg
adc
jo
pop
insl
mov
mov
inc
fsubrs
mov
ficoms
dec
sahf
xor
adc
fisttpl
shrb
cmc
jmp
stc
add
cmpsb
push
xchg
add
fcmovnu
lcall
dec
add
mov
ds
push
test
into
ret
mov
addps
arpl
sbb
pop
loop
je
xchg
push
ficoml
addr16
or
addb
adc
aam
or
adc
insb
mov
scas
nop
fcmovne
sub
daa
cli
add
and
mov
jge
sbb
mov
sarb
lds
mov
xacquire
add
pop
or
push
scas
push
hlt
or
xchg
inc
in
shll
int
enter
xor
sub
mov
les
jbe
sbb
movsl
imul
inc
bound
or
daa
xchg
mov
out
cmp
mov
pop
inc
sahf
mov
adc
fmull
lods
jo
mov
xlat
clc
mov
pop
cmpsb
or
mov
fldt
xlat
stc
stos
addb
inc
xlat
cld
out
int3
sbb
test
xor
pop
adc
addr16
add
out
mov
xor
lods
xchg
xlat
push
insb
xchg
mov
inc
shr
daa
dec
mov
pop
aas
outsb
bound
add
pushf
mov
or
andl
add
mov
ret
mov
cmp
fisubl
arpl
mov
sbb
mov
ret
outsb
sbb
jne
dec
mov
popa
xor
or
cwtl
fiadds
xor
ja
cmp
icebp
bound
daa
xor
mov
jns
hlt
mov
dec
cs
daa
mov
pop
sbb
enter
arpl
ret
sub
fwait
lods
mov
imul
rolb
fs
ror
or
mov
mov
push
mov
or
xchg
leave
dec
mov
lcall
jne
pop
cmpsl
dec
adc
inc
and
aad
gs
sub
mov
repnz
aad
adc
mov
popa
push
adc
dec
xor
mov
add
xchg
call
jmp
lahf
ret
sbb
loope
rcll
or
xor
inc
sub
in
fistpl
mov
pop
loop
test
arpl
cltd
scas
xchg
int3
pop
xchg
popa
mov
movsl
shll
or
push
and
sbb
sub
loop
inc
les
xor
push
fstpt
movsl
loop
cmovae
xor
flds
hlt
dec
sarb
jg
int
or
cmp
iret
cltd
push
add
cltd
mov
xchg
and
mov
push
test
cmc
xchg
mov
out
dec
cmp
xor
jg
xchg
or
sub
lods
adc
sbb
pop
ret
rol
mov
das
pop
repz
inc
and
js
add
jecxz
mov
mov
clc
push
jbe
addr16
ja
jno
lret
mov
ret
or
sbb
popa
rorl
enter
cmp
rclb
jno
lret
or
push
aas
enter
shrb
fs
shrb
cmp
add
xor
dec
jno
aas
test
rol
mov
stos
inc
test
dec
dec
int3
jp
pusha
xor
inc
sub
push
dec
xor
cmpsb
scas
or
fdivr
pop
sahf
pop
pop
sti
lahf
cmp
fs
sub
das
ficoms
cmp
rcrb
fsubs
mov
mov
xor
lods
popa
inc
lcall
xchg
sahf
jns
pop
jl
mov
pop
sbb
pusha
out
jb
xchg
adc
int
or
jmp
scas
inc
into
lahf
mov
pop
and
rol
jbe
sbb
cwtl
push
inc
pop
in
xchg
movsb
pop
dec
mov
mov
pop
sbb
stos
pop
int
mov
lcall
xorl
or
push
int
and
imul
rclb
adc
loopne
cld
xchg
out
adc
jecxz
dec
sarl
stos
icebp
aas
mov
push
xor
sbb
dec
xor
push
jo
hlt
imul
push
inc
and
rclb
andb
fwait
in
push
dec
push
mov
sub
add
add
fldcw
out
aaa
enter
jecxz
and
jo
fisubs
xor
lods
mov
sbb
scas
les
sahf
adc
popa
sbb
dec
jmp
lods
lret
and
xchg
sub
jg
scas
ja
dec
clc
fnsave
mov
xchg
sub
fs
jno
arpl
xchg
into
xchg
fcompl
xchg
dec
sahf
mov
mov
lret
outsb
imul
cmp
pop
insl
fxtract
jb
sti
dec
stos
dec
push
je
ja
loopne
dec
jo
mov
inc
mov
rcr
xchg
mov
sahf
aas
mov
add
aam
mov
stos
ficompl
lcall
or
xor
and
sub
and
jp
sbb
gs
test
scas
push
xchg
leave
jns
out
jle
pusha
jl
adc
test
add
sarb
fmull
cwtl
mov
xor
outsl
mov
iret
call
rcrb
test
xchg
pop
xor
dec
and
mov
rcrl
fldt
test
data16
ret
mov
sub
jns
mov
mov
pop
jmp
pop
lock
sub
stos
cmc
test
mov
jle
leave
insl
inc
dec
int3
mov
adc
out
push
insb
cltd
add
aas
add
xchg
nop
xor
sti
aad
xor
cmc
out
sub
jb
repz
pop
pop
sub
jge
or
xor
pop
push
mov
cmpsl
sbb
ret
fnsave
inc
loop
xchg
ss
jo
or
fs
dec
dec
push
fnstenv
cmp
jp
ljmp
mov
cmpsl
lret
lcall
sub
xchg
jnp
into
push
js
stos
insb
and
cmpsb
lahf
scas
add
shl
dec
stc
ret
int
ror
loopne
xchg
xor
ljmp
mov
icebp
sbb
out
ljmp
add
mov
test
xchg
pop
push
add
dec
adc
mov
mov
cs
repz
push
iret
jne
jb
or
loop
inc
cwtl
push
sub
addr16
call
mov
xor
xor
push
mov
mov
enter
cmpsl
mov
xchg
insb
pushf
xchg
inc
inc
lods
push
scas
cli
jg
leave
les
vmovntps
loopne
enter
int
das
or
ss
into
cwtl
filds
and
fidivs
cmpsl
cmc
push
cltd
xor
pinsrw
jae
insb
push
inc
test
pop
sbb
xchg
add
push
and
xchg
pop
aad
jl
pusha
jbe
out
jmp
xchg
out
gs
push
dec
mov
xor
jo
cs
outsl
lahf
fidivs
lea
push
add
sbb
mov
aam
cmp
jne
push
cmc
arpl
loope
imul
and
pusha
sub
push
push
les
sub
inc
lds
sub
sti
sub
sahf
push
adc
jno
jne
mov
mov
push
jmp
or
fsubr
jecxz
push
push
mov
fs
push
pop
lahf
push
dec
lods
cli
xrelease
stc
rclb
stos
push
clc
fcmovu
add
mov
idivb
nop
fiaddl
sbb
or
pusha
or
cmp
mov
movsb
cmp
fisubrs
outsl
loope
cmp
movsl
loopne
mov
push
adc
xorb
mov
pop
decl
in
adc
xor
das
testl
fdiv
dec
mov
test
pop
pusha
cld
test
imul
fidivrl
hlt
lret
mov
sub
push
sarl
cmpsb
ljmp
inc
jle
test
push
sub
shl
lahf
adc
imul
ja
jmp
sbb
daa
cmc
lea
inc
lods
jecxz
aaa
ret
jo
mov
jp
imul
lea
decl
clc
std
mov
sahf
or
jbe
jg
inc
mov
add
add
push
in
or
fwait
xchg
pop
pop
sbb
leave
cld
sarb
and
js
fiaddl
pop
popf
sub
dec
add
int3
adc
sbb
shlb
sbb
daa
lock
iret
sbb
lods
jb
dec
mov
lret
popf
roll
adc
clc
hlt
jg
adcl
cmp
ret
inc
pop
pop
mov
jns
loopne
lret
clc
loopne
dec
mov
mov
or
xchg
aad
jge
jle
movsl
in
in
mov
push
mov
iret
xchg
ret
popl
and
sahf
or
jp
enter
repnz
adc
sbb
xchg
mov
out
stos
outsb
and
jnp
out
mov
jle
mov
mov
xchg
movsb
cwtl
adc
fldenv
pop
mov
into
daa
jge
lods
jle
imul
sahf
xor
imul
ds
fiaddl
fwait
pop
add
mov
cmp
aam
inc
dec
mov
lea
sbb
mov
xor
pop
les
push
rcll
cmpsb
pop
add
add
xchg
into
sbb
pop
jmp
pop
add
inc
adc
sbb
and
int3
ss
stos
cltd
insb
leave
sub
dec
insb
pop
mov
jo
imul
stos
xchg
dec
lret
push
and
sarl
clc
mov
mov
jle
jae
sbb
std
sbb
aaa
cld
inc
das
pop
test
rclb
addb
xor
stc
imull
pop
ss
jp
das
daa
bound
outsl
shr
pushf
hlt
sub
fidivs
jno
sub
mov
sbb
into
inc
pop
and
popf
lods
sti
jmp
fsubs
ds
or
xchg
dec
xchg
enter
cld
imul
loopne
enter
sub
loopne
lods
xchg
jle
and
sub
adc
adc
jns
cmpb
xchg
inc
es
aas
cmpsb
clc
sti
test
scas
inc
ret
shrb
dec
add
or
fs
cmp
xor
adc
lock
outsb
loopne
aam
push
push
aam
jnp
outsl
cmp
fstps
outsl
je
mov
cs
sbb
int
outsl
sar
mov
loope
in
push
xor
out
imull
inc
js
mov
pop
or
je
and
adcb
fadd
cmpsb
iret
repz
push
in
jg
daa
add
negl
outsb
adc
aad
inc
add
cwtl
add
lret
cmp
mov
adc
mov
cmpsl
stos
mov
subb
adc
sub
lcall
push
dec
stos
scas
mov
dec
aad
mov
xchg
mov
jg
sbb
jmp
and
mov
loope
repnz
xchg
xor
rcrb
rclb
mov
adc
das
leave
pop
scas
popa
arpl
dec
lods
mov
xor
in
out
push
xlat
sub
out
cmp
cld
mov
xchg
clc
pop
jo
sti
and
adc
mov
or
adc
int
jb
rcrl
outsb
jmp
push
lret
aas
xchg
xlat
sub
xchg
lds
das
sarl
or
xchg
pop
hlt
and
inc
cwtl
mov
mov
adc
pop
out
cmp
push
sub
popa
loopne
xor
mov
sub
xor
cmp
push
dec
or
lahf
adc
mov
inc
and
test
jge
aas
scas
stos
iret
push
add
ficoms
nop
sar
mov
imul
inc
sub
bound
fildl
and
jne
out
leave
pop
cmp
sbb
mov
dec
repz
fstps
test
push
adc
dec
imul
jnp
pop
add
push
pop
ret
xor
xor
pop
loop
mov
inc
lret
jae
xchg
dec
xchg
test
andb
shlb
lods
mov
and
mov
mov
adc
nop
add
iret
movsl
inc
jl
ret
andl
shrb
stc
or
jmp
out
push
dec
or
arpl
cmpsb
shlb
pop
cwtl
fidivrl
test
out
nop
dec
sub
inc
into
mov
push
mov
fcompl
fcmovnu
rorl
imul
dec
push
in
sub
and
mov
xchg
in
fsubl
aad
dec
adc
stc
subl
inc
cmc
push
push
pop
xchg
test
outsb
pop
pop
and
mov
xchg
cmp
aas
dec
insb
cli
rorb
iret
ret
insb
ja
sbbl
push
xor
mov
out
mov
out
add
ret
or
orb
pop
imul
and
pushf
xor
imul
arpl
popf
sub
and
iret
ss
cmpsl
adc
inc
jg
cmpsl
rcrl
lods
out
es
je
push
add
adc
xor
bound
xchg
cmc
jae
adc
mov
imul
adc
jl
or
aas
pop
cli
or
es
fdivl
and
repz
mov
add
sbbl
mov
stos
clc
mov
imul
mov
mov
scas
fstps
push
sub
pop
loop
out
js
pop
push
add
sbb
je
xor
push
aas
xor
sahf
fs
mov
lds
dec
pusha
jnp
sbb
sbb
sub
xchg
push
push
movb
int
shll
push
xlat
xor
aas
add
mov
daa
lods
inc
cs
ss
cmpsb
stos
push
sub
hlt
imul
inc
out
test
nop
mov
sbb
hlt
rorb
rcll
out
das
fwait
insl
mov
stos
ss
pusha
jne
push
xchg
lret
mov
lods
xor
in
bound
jmp
cwtl
arpl
jg
mov
push
adc
pop
or
int
shr
cmc
or
or
sbb
mov
mov
mov
loopne
mov
push
cs
dec
cmp
rcrl
lret
aad
mov
nop
or
fwait
and
fwait
or
jne
jl
fnstsw
lods
mov
sub
sub
xchg
push
dec
adc
std
jns
call
xor
xchg
push
adc
aas
in
and
cmp
xor
insl
xchg
lods
jo
notb
fidivs
nop
mov
push
sti
repnz
mov
push
dec
popf
jle
in
jge
dec
stos
xchg
jno
lods
jae
in
lretw
dec
fisttps
jb
and
mov
aam
leave
out
sub
mov
insl
bound
inc
cmp
bound
subl
cwtl
fisubs
inc
out
aam
clc
aaa
jbe,pn
data16
xor
popf
shrb
fsubrs
sbb
stc
enter
rcll
movsb
mov
in
push
incb
js
test
out
into
imul
push
mov
mov
inc
sahf
mov
pop
xor
jb
outsl
add
cmp
mov
add
nop
cmpsl
jbe
mov
mov
cwtl
or
sub
and
enter
or
hlt
push
iret
je
sub
pop
jp
mov
jns
cmp
inc
mov
out
stc
pusha
add
jne
xchg
jge
jle
mov
mov
cmp
xchg
mov
and
mov
daa
push
pop
sbb
xlat
lahf
sahf
jns
sbb
pusha
sub
jne
rcrb
jnp
and
lods
jp
movsl
add
lock
aad
movsb
and
pop
adc
pusha
mov
nop
inc
pusha
cmp
add
into
pcmpeqb
inc
ret
lret
cltd
xor
sub
mov
icebp
enter
mov
lret
xchg
cmp
sbb
les
and
test
or
jb
lea
or
repz
aaa
jae
mov
xchg
inc
push
pop
jecxz
sti
push
enter
inc
adc
or
add
outsb
dec
pusha
insb
fcoml
jne
sarb
cmpsl
and
jne
jle
imull
cmp
movsb
arpl
imul
cmpl
stc
jae
jo
aas
jb
mov
ror
test
shr
or
into
int3
mov
pop
lea
pop
pop
adc
push
xchg
incl
imul
cmpl
es
ja
xor
cmpsb
and
je
repnz
cmc
xchg
mov
call
icebp
insl
xchg
mov
int
jge
and
repnz
orl
push
pop
leave
in
jp
push
pop
scas
ficoml
sub
pop
data16
loopne
pushf
clc
mov
mov
inc
cmp
cld
call
jnp
add
dec
mov
js
push
stc
pop
addl
xchg
xor
cmp
xchg
and
mov
insl
fstps
or
mov
push
cld
testl
ja
cmpl
pop
inc
dec
push
sbb
xor
sarb
push
adc
imul
ret
je
test
add
jbe
out
shrb
mov
mov
cmc
aas
jb
xchg
das
addl
in
daa
mov
cmp
inc
lret
in
adcl
iret
lret
cli
rcrl
mov
xor
add
mov
cmc
adc
fs
rclb
fnstsw
ljmp
pushf
inc
lahf
hlt
adc
pop
mov
xor
aam
sub
movsl
dec
stos
xor
jae
imul
fisubrs
pop
jns
arpl
xor
pop
lcall
int3
jb
test
mov
es
dec
fistps
cld
sub
pop
dec
jo
add
adc
mov
adc
dec
stc
in
mov
mov
and
aas
movsb
cbtw
inc
std
jle
xor
mov
pop
adc
loope
pushf
ljmp
dec
fbstp
and
fidivl
gs
and
aaa
pushf
loope
fimuls
std
cmp
rclb
les
jp
sbb
inc
unpckhps
jge
and
pop
adc
mov
push
lahf
and
fldl
loope
test
divl
shlb
sbb
out
idiv
mov
push
pop
push
sbb
dec
test
jle
cli
insl
push
nop
jnp
and
dec
xchg
and
xor
pop
idivl
test
pop
lahf
pop
add
test
hlt
mov
fldl
sbb
test
subb
mov
jle
ret
sub
repnz
test
daa
pop
sbb
mov
lock
call
xchg
mov
pop
testl
push
repnz
sbb
mov
into
xchg
jmp
sbb
mov
dec
mov
dec
in
jg
fcomp
pop
outsb
mov
sbb
fists
mov
int3
dec
xchg
sbb
push
xor
movl
test
in
clc
lods
and
xchg
lcall
hlt
lds
push
pop
sbb
in
fadd
mov
mov
cmp
std
lahf
movsl
mov
xor
pushf
xor
mov
inc
and
pop
sbb
inc
test
lret
xor
test
mov
mov
pop
add
jge
sub
bound
cmp
roll
inc
jp
inc
ret
sarl
pop
xor
add
mov
mov
out
and
aam
lcall
inc
xchg
jae
ret
xor
lods
lds
and
pushf
xchg
popa
and
fistl
lods
loop
mov
outsl
or
into
fwait
repz
push
or
push
mov
xor
arpl
insb
cmp
mov
push
xchg
arpl
mov
xchg
dec
cld
push
mov
addr16
pop
inc
mov
xchg
lret
ljmp
inc
jb
jno
into
inc
scas
adc
test
pop
lods
pop
fldcw
pop
out
shrl
adc
mov
ds
sbb
pop
outsb
and
stc
jo
cltd
pop
jnp
cmpsl
and
mov
addr16
rolb
lret
sub
imul
je
cmp
xchg
inc
add
sahf
dec
repnz
outsb
int3
popa
cmp
mov
out
ret
stc
xlat
mul
test
outsl
mov
lock
shrb
lret
scas
imul
and
jno
rol
divb
ja
outsb
pop
sbb
mov
pop
xor
in
cmpsb
mov
aas
test
sub
inc
mov
and
movsb
fsubr
xor
inc
movsl
dec
cwtl
cmp
pop
movsl
adc
test
jno
stos
dec
inc
jle
cld
inc
add
xchg
cwtl
movsb
sub
daa
daa
cmp
pop
add
shlb
cmpsl
xchg
imul
push
in
push
loop
cwtl
rclb
mov
cld
adc
push
inc
push
and
xor
pop
push
sti
push
xor
mov
mov
push
ljmp
mov
and
fidivs
in
in
add
mov
mov
test
dec
cmp
sub
mov
xor
sbb
dec
imul
je
mov
jne
adc
add
pop
sahf
or
std
loope
sbb
adc
jnp
push
push
insl
mov
stos
ror
ret
out
lret
imul
cmpsl
and
sbbb
into
int3
mov
test
add
push
and
repz
lods
xor
shll
sbb
cmp
les
pushl
add
cmpl
clc
xlat
and
and
inc
xor
mov
inc
mov
pop
or
lahf
rcrb
adc
dec
add
mov
inc
sbb
ds
daa
hlt
jnp
or
push
daa
lahf
imull
push
outsb
and
pop
cmp
and
into
mov
popf
test
mov
mov
sub
push
adc
imul
insb
dec
test
aaa
cmp
test
sub
mov
stos
inc
push
sbb
int3
fprem1
mov
lods
lds
movsb
adc
mov
int
push
and
iret
sysenter
jecxz
orb
cmc
mov
sti
sar
dec
cmp
sbb
xchg
cmp
out
cmp
out
mov
scas
cld
or
jae
and
cmpsl
loop
sbb
outsb
push
ds
adc
mov
xchg
sti
in
mov
shll
in
pusha
dec
sub
lea
pop
push
dec
roll
dec
push
test
fwait
xchg
cmp
sbb
arpl
push
lods
sub
sbb
fcmove
iret
and
scas
xor
mov
jnp
insb
cs
cs
mov
sbb
scas
ljmp
sub
call
fs
pusha
jl
stos
pop
or
mov
xchg
mov
repnz
fistps
and
lods
pop
push
imul
clc
dec
cli
mov
mov
insl
ret
xor
mov
and
fistl
icebp
xchg
or
inc
jge
sbb
lret
xchg
fsub
mov
mov
cmp
in
sub
lss
xchg
jbe
and
push
gs
test
jno
out
xchg
adc
xchg
dec
addl
lock
mov
and
imul
lods
int3
pusha
enter
shll
or
or
icebp
iret
dec
mov
movsl
push
inc
lds
inc
push
shll
xchg
mov
add
leave
stc
jg
push
je
mov
sbb
lods
inc
adc
shlb
test
jp
insl
sub
test
push
lret
orb
mov
lret
and
std
cmp
inc
mov
mov
adc
pop
lret
xor
jno
mov
mov
jle
fcmovnu
inc
data16
test
enter
xor
aam
pop
jp
sbb
mov
enter
iret
fsubp
mov
jmp
std
or
pop
adc
and
jnp
jb
lret
jmp
loope
or
incb
pop
ficompl
push
inc
add
pop
mov
jb
xor
into
insl
push
fsubs
adc
rcr
outsb
cmp
mov
jno
daa
adc
dec
fmull
xchg
mov
mov
push
inc
push
dec
inc
or
and
jmp
out
inc
or
mov
pushf
xchg
inc
cmpsb
adc
inc
test
icebp
out
cmpsb
adc
sti
loope
imul
push
lahf
ds
xor
imul
cmp
and
negl
cltd
outsb
loopne
lcall
aaa
ljmp
pop
iret
stos
out
and
push
jne
inc
mov
aas
xchg
movsb
cwtl
outsl
pop
std
jg
scas
jo
scas
mov
popa
popa
adc
jle
data16
and
lods
mov
scas
dec
gs
or
in
mov
sarl
dec
sahf
cltd
das
test
mov
cwtl
into
sbb
adc
xor
jge
repz
add
jecxz
sti
xchg
mov
dec
jg
dec
jmp
mov
out
push
fistpll
mov
cli
fwait
rclb
dec
pop
push
lods
push
mov
push
fiadds
push
cmp
pop
pop
add
stos
sbb
or
mov
imul
dec
in
xor
aas
mov
scas
fnstsw
repz
or
xchg
iret
jmp
push
int
add
aam
push
imul
and
mov
das
add
fisubl
mov
sub
add
push
xlat
cld
in
pop
icebp
xlat
inc
stc
popa
jo
or
xchg
ljmp
das
fldcw
sbb
nop
cmpsb
je
fdivrp
es
popf
xchg
pop
mov
fldenv
int
aad
bound
xor
pusha
insl
rolb
mov
pusha
stos
in
out
inc
adc
push
aam
push
shll
jae
inc
stos
lods
push
in
daa
pop
cmp
adc
push
jl
orl
pop
retw
dec
addl
mov
ja
fsts
cmp
pop
xchg
scas
cmp
popw
js
outsb
xchg
sbb
jo
fsubp
jg
rcl
leave
arpl
jno
jne
and
add
xchg
ror
sahf
inc
xor
iret
frstor
dec
mov
xor
bound
cmp
adc
cli
xor
lahf
lret
loop
pop
push
aas
xchg
mov
dec
mov
iret
xchg
xorb
ljmp
jle
mov
push
ret
mov
push
aas
aas
enter
test
pushl
jle,pt
inc
loop
mov
jle
inc
cmp
mov
arpl
rorb
dec
in
xchg
fwait
xor
or
mov
movsl
loop
jp
idiv
pop
pop
loop
cmp
loope
icebp
sarb
clc
je
push
xchg
push
ds
and
xchg
sub
mov
shrw
dec
dec
or
adcl
jns
mull
mov
int
scas
or
cmpsb
dec
shlb
mov
dec
stos
dec
push
repz
mov
cwtl
lahf
xchg
js
out
lahf
jmp
mov
add
fdivrs
in
pop
out
xchg
test
and
cmpb
fisttps
mov
pop
mov
jns
js
rcl
xor
mov
imul
jl
inc
fimuls
popa
mov
std
or
out
cmp
mov
lods
scas
or
pop
push
or
ja
inc
fdivs
cmp
mov
sbb
mov
adcl
push
mov
shll
mov
fbld
test
fmuls
xor
mov
adc
in
loope
inc
inc
or
xchg
pop
xchg
dec
jnp
push
test
in
inc
call
pop
jae
push
inc
in
lods
rol
push
loopne
pop
or
pop
or
dec
add
adc
xchg
jle
inc
jmp
sub
mov
mov
ljmp
sbbw
les
fnstsw
mov
mov
jo
cmp
loope
insl
imul
add
cmpsb
sbbb
adc
xchg
xabort
push
aad
push
adc
fistps
daa
call
movsb
pusha
jno
sbb
pop
xor
inc
dec
and
sbb
mov
ret
cltd
pop
lods
adcl
jbe
pop
cmpsb
mov
xchg
mov
aad
xor
and
add
add
jecxz
lret
and
sbb
mov
or
loope
ljmp
xor
scas
lods
out
stc
xor
lret
fdivrs
adc
test
sbb
and
mull
pop
imul
loope
xor
scas
lahf
mov
xor
xchg
push
cs
fmuls
lret
push
adc
sub
pop
gs
pop
push
jle
shll
aam
sahf
and
ret
pop
push
outsb
adc
or
cli
lods
lods
shrl
rclb
fisttpl
or
movsl
les
nop
imul
fstpl
inc
fsubl
sbb
dec
xor
sbb
inc
and
cmpsb
mov
pop
sbb
and
scas
push
cld
test
and
pop
out
or
not
dec
fistpll
dec
cmp
shr
fldenv
pushf
fldcw
fidivl
std
sub
into
mov
ja
xor
fistpll
mov
mov
enter
insl
push
cmc
xchg
sahf
and
add
lcall
sbb
or
sub
inc
push
dec
imul
cmpl
push
lret
jbe
gs
adc
lds
nop
adc
inc
rcll
call
pushf
sub
addr16
mov
call
jbe
int3
imul
stos
movsl
mov
pop
ret
cmc
movsb
fadd
lods
pusha
mov
xor
mov
adc
inc
fimuls
dec
adc
pop
jbe
or
jno
data16
in
adc
add
je
jg
dec
nop
out
pop
mov
cmp
cmp
sub
dec
sahf
push
jmp
iret
stc
andb
or
in
and
popf
push
and
cmp
and
clc
mov
cmp
fistpll
or
test
sbb
adc
setg
imul
push
push
mov
orb
mov
hlt
mov
mov
fwait
rolb
loope
add
popa
push
test
mov
cmpsb
pop
loopne
inc
mov
fimuls
mov
stos
pusha
and
cld
repnz
fildll
popf
cmpsl
je
lock
add
pop
pop
push
bound
mov
fadd
lret
sub
jo
cs
and
push
fs
and
orb
aam
enter
sbb
sub
idivb
xor
int3
notl
outsl
pop
mov
sbb
cld
addr16
cwtl
sbb
pop
enter
pop
div
ss
xchg
subb
mov
mov
lods
pop
sub
daa
adc
sub
and
or
cmp
lods
cmpsl
out
lods
add
sbb
mov
adcl
fisubl
fiadds
subb
push
xor
repz
jg
inc
pushf
stos
xchg
loopne,pn
roll
aam
dec
rcll
xchg
shrl
repz
sti
jle
xchg
nop
pcmpgtb
and
adc
mov
inc
push
stos
imul
sbb
ljmp
adc
fs
fcmove
and
ljmp
xor
jo
int
sbb
out
enter
push
ja
cwtl
pop
inc
lods
adc
mov
mov
sbb
adc
mov
dec
add
mov
dec
xchg
jne
outsb
sbb
mov
fldt
dec
add
pop
pop
jo
fidivrl
loope
push
sub
aas
add
lcall
enter
cmpsb
daa
adc
push
loop
mov
mov
les
jae
adc
sarl
or
mov
jne
jae
daa
into
inc
loope
xchg
int
les
outsb
mov
lds
pop
jmp
lret
xor
iret
xor
lods
adc
sti
push
mov
pushf
xorl
or
aas
out
push
pop
imul
add
roll
cmp
fcos
shll
pop
fisubl
movsb
fimuls
pop
shlb
cli
hlt
test
sti
inc
jns
add
pop
inc
iret
mov
lret
dec
xor
test
jae
fcomp
pop
inc
iret
movsl
or
gs
fdecstp
out
lahf
loope
push
int3
dec
sub
xchg
xor
adc
add
je
call
pop
pushf
jbe
mov
fisubrs
ds
in
xor
dec
popf
shrl
loopne
int
xor
js
add
dec
push
insl
stc
cmp
gs
xchg
rolb
mov
jne
outsl
and
jl
push
and
loop
arpl
xor
ret
aaa
lret
xor
bound
sti
js
fstps
cltd
mov
outsb
sub
adc
cld
aam
mov
and
jne
jo
and
bound
push
ljmp
rcl
stos
aas
and
sub
sti
in
ffree
mov
push
and
lcall
mov
mov
loop
cmp
int
dec
xchg
xchg
adcl
jbe
mov
cwtl
cli
xchg
enter
jge
das
and
mov
lcall
int
sti
in
into
and
ret
mov
add
imull
icebp
sbb
js
out
jge
in
inc
jge
insb
imul
mov
jp
xor
jmp
daa
mov
arpl
cmp
add
sub
add
outsb
repnz
sbbl
cwtl
or
sahf
lret
lods
pushf
mov
sub
out
das
aas
arpl
insb
test
cmp
mov
pop
imul
adc
push
into
xorb
cmp
mov
sahf
adc
and
mov
and
mov
xchg
add
ror
cli
clc
test
das
dec
lds
movd
popf
or
jecxz
dec
lods
aad
out
and
test
add
cmpsb
xlat
and
stos
les
shrl
sub
push
or
js
movsl
push
push
mov
pop
add
mov
or
mov
and
loop
icebp
das
sub
call
ja
cmp
enter
cmpsl
cmp
cmp
test
insl
mov
or
sbb
jns
pusha
sbbl
dec
cmp
mov
push
std
in
cld
lea
add
js
push
loop
sbb
push
cmpsb
xor
lahf
pusha
mov
sbb
dec
mov
inc
jecxz
lret
inc
in
xor
and
into
adc
movsb
cmp
leave
sub
jae
ss
xor
jnp
test
adc
or
xor
lret
or
stos
sbb
push
dec
or
push
std
push
out
aad
inc
dec
cmp
dec
push
xchg
call
mov
or
and
les
adc
mov
xchg
loope
dec
mov
or
arpl
mov
sbb
xor
cmpsl
arpl
out
mov
cmp
inc
adc
sarl
rclb
adcb
mov
push
pop
xchg
add
mov
jg
lock
dec
xchg
pop
call
pop
mov
xor
mov
fbld
out
aad
adc
mov
or
cltd
movsb
fidivrl
out
jmp
flds
dec
cmpsl
ret
sub
lahf
pusha
cmp
add
in
scas
lods
jnp
and
jg
mov
dec
push
mov
lock
dec
mov
std
fldenv
mov
pop
dec
pop
sub
testb
or
sub
loopne
mov
icebp
xchg
push
cmp
xchg
pop
ja
sub
pinsrw
inc
xchg
scas
push
mov
pusha
je
jmp
mov
or
lahf
push
lret
cmp
fildll
adc
jge
aad
stos
pop
cmp
rolb
stos
dec
xor
jno
aad
test
and
inc
pop
out
jg
in
and
aam
imul
shlb
movsl
add
or
push
push
shrl
pop
and
test
mov
and
ljmp
push
jp
lret
push
int3
rorl
jb
repnz
jmp
pushf
cwtl
roll
push
and
mov
jnp
cltd
fiaddl
or
mov
inc
xchg
adc
and
sub
mov
mov
jle
or
xchg
test
rorl
outsl
mov
inc
inc
fbstp
mov
mov
adc
lret
das
add
lods
mov
rclb
push
shl
mov
mov
sub
xchg
or
pop
movsl
data16
adc
mov
mov
les
pop
loope
fistpll
loop
push
pop
mov
std
sub
mov
pusha
add
ret
pop
cmp
icebp
addl
xchg
je
test
out
jl
cwtl
and
xor
pop
cmp
xchg
js
rdtsc
les
je
xor
daa
cli
and
iret
xchg
cmpsl
movsb
lahf
adc
mov
mov
push
dec
mov
mov
push
cmp
fimuls
push
push
mov
in
push
or
sbb
push
mov
mov
mov
lret
out
or
cmp
hlt
xchg
pop
pushf
lret
std
cs
add
shlb
mov
cmp
cmp
mov
insl
cs
push
jp
push
jg
jb
xchg
lods
push
test
pop
add
sar
or
js
shlb
mov
sub
mov
fnsave
xor
push
popf
inc
pop
loopne
cmp
sbb
mov
stos
inc
sbb
in
mov
ja
cmp
cli
mov
cld
xchg
mov
xor
inc
xchg
sti
sub
jnp
inc
jne
cmp
dec
xchg
mov
cmp
repnz
insb
lods
aad
notb
rorb
popa
pop
jno
pop
pop
pop
push
hlt
cwtl
push
in
gs
data16
in
leave
push
and
clc
adc
or
xor
mov
movsb
pop
push
js
ret
push
adc
lock
sbb
je
repnz
mov
add
xlat
leave
scas
dec
cmp
jle
and
addps
push
shl
dec
add
mov
ret
cld
test
popf
repnz
pop
hlt
xchg
inc
mov
inc
movsl
push
test
lods
cltd
or
movsb
insl
fistpl
bound
js
je
cmpsl
into
mov
mov
sbb
fcompl
lahf
pop
in
stos
sbb
jp
mov
add
test
push
and
ljmp
or
pusha
mov
xchg
mov
push
sub
jb
sub
adc
stos
or
out
jl
into
and
add
into
cmp
pop
mov
dec
ja
jmp
jp
push
popa
out
inc
pop
dec
pop
dec
loop
mov
jns
or
jecxz
mov
ret
jb
sbb
push
je
nop
lock
aam
adc
bound
inc
sbb
adc
mov
movb
or
in
mov
test
and
outsb
adc
mov
psllq
loop
repz
lea
jle
push
adc
aam
sub
or
shr
js
inc
mov
lahf
xchg
pop
stos
mov
andb
xchg
les
pop
loop
sahf
and
nop
sti
sbbb
sbb
clc
sub
das
jbe
in
mov
loop
je
jae
xor
in
in
aaa
das
push
jge
sub
jmp
imul
sbb
insb
and
clc
jbe
fisubrl
pop
push
popf
jge
dec
sbbl
pop
iret
xor
cmpsl
mov
data16
sarl
xor
and
cmp
mov
fldlg2
fadd
mov
mov
xor
jne
cmp
scas
sbb
cmp
fnstsw
call
push
stc
inc
pushf
test
inc
push
sbb
mov
js
mov
mov
dec
movsb
mov
andb
clc
fbld
mov
and
inc
and
add
jns
imul
clc
inc
lea
lods
cmp
push
cmpsl
sbb
out
inc
lods
sub
mov
mov
out
cltd
or
inc
dec
fldcw
imul
lods
and
das
mov
jnp
inc
test
and
pop
mov
outsl
aas
mov
push
inc
lret
fcoms
in
dec
lds
lds
mov
aad
mov
push
icebp
mov
sub
test
cs
fbstp
cmpl
sub
xor
cmpsl
mov
cltd
push
sbb
fwait
xor
xlat
out
xorb
mov
test
xor
stos
scas
aam
mov
fisttps
xchg
dec
mov
dec
sahf
xorb
sub
addr16
xchg
lods
mov
inc
ret
mov
and
push
mov
sub
ja
mov
mov
shlb
cltd
les
fmulp
ficomps
xchg
fmul
inc
stc
enter
inc
lods
hlt
cwtl
and
pop
hlt
mov
adc
lods
lea
mov
or
mov
loope
ss
iret
and
dec
pop
sbb
insb
push
test
xor
and
repz
mov
pop
out
mov
sbb
xchg
lret
xlat
clc
xor
jne
sbb
ss
adcl
rolb
popa
xchg
mov
es
sbb
or
xchg
loopne
mov
aam
pop
mov
sub
aas
sbb
into
cwtl
aas
push
adc
dec
mov
sub
nop
inc
inc
test
xchg
push
popa
out
test
mov
mov
sub
push
push
movsl
divb
mov
pop
outsl
push
add
mov
into
cltd
mov
mov
sub
or
jl
inc
cmp
push
xchg
nop
cld
pop
sub
xor
pop
repnz
icebp
cmpsb
xor
jmp
test
icebp
sti
mov
mov
and
xchg
sub
and
lock
in
adc
push
mov
nop
aam
pushf
add
sbb
mov
in
push
cmpsl
scas
push
lret
jecxz
xor
loope
aas
jbe
ds
inc
dec
or
push
and
cld
mov
ret
jl
setns
sbb
hlt
adc
lahf
jns
les
push
mov
adc
mov
dec
push
pop
pop
fstl
sbb
push
pop
mov
sahf
dec
insb
test
movd
flds
loopne
mov
dec
fcmovnu
ret
mov
pop
mov
popa
xor
xor
inc
ljmp
push
mov
inc
int
ljmp
test
lods
popa
icebp
and
add
fmuls
test
lret
push
stos
mov
out
ret
push
jbe
inc
movsl
sbbb
inc
insl
sbb
mov
mov
cmp
ljmp
xchg
lods
pop
inc
xchg
mov
ja
push
rcrl
imul
jo
rcll
jmp
mov
inc
sub
cs
xlat
das
adc
or
icebp
jp
push
xor
jae
loopne
mov
xor
loope
fwait
jle
stos
cmp
xchg
jnp
cwtl
pop
aad
addr16
ret
in
dec
inc
test
dec
inc
xchg
fmulp
ljmp
and
xor
leave
lret
mov
and
out
notl
enter
pop
mov
in
mov
punpckhbw
orl
adc
or
fstl
stos
cmp
mov
iret
adc
call
xchg
sub
test
out
outsl
mov
xor
inc
mov
jmp
mov
inc
mov
or
dec
push
mov
dec
lds
jg
jns
adc
lods
jle
push
fnstenv
xlat
fcompl
lret
popa
mov
inc
lea
adc
aaa
mov
mov
into
outsb
lock
inc
sbb
aaa
jmp
into
dec
data16
mov
call
pop
push
jns
lds
xor
sub
ja
data16
push
mov
ss
jg
test
pop
sbb
pusha
pop
mov
shll
push
inc
jnp
push
lods
mov
push
cmp
sarb
cmp
pop
inc
sti
dec
and
stos
mov
lds
arpl
decb
imul
mov
rcll
mov
push
loope
int3
inc
xchg
sbb
push
pop
into
and
sbb
push
hlt
and
sahf
push
test
popf
lea
adc
and
stos
jecxz
das
sbb
dec
lods
push
adc
or
sbb
loopne
pop
pop
inc
rorb
xor
push
outsl
cli
aas
fisttpll
outsb
adcb
ficoml
div
sbb
cs
push
cmpsb
and
cmp
pusha
jbe
pop
jbe
push
mul
mov
insl
addr16
in
xchg
lds
int3
mov
mov
jmp
push
sub
push
movsl
shll
cli
jl
or
pop
mov
push
mov
idivb
sbb
dec
test
paddusb
pop
or
jp
insb
push
fwait
dec
fistl
rcll
data16
push
sub
mov
xchg
subl
orl
dec
mov
pop
jae
inc
jp
jae
or
and
rcl
inc
mov
push
or
push
push
ss
mov
dec
xchg
test
sub
or
sub
pop
push
inc
lds
xor
push
insb
push
mov
lods
ljmpw
jae
lock
loop
sub
stos
mov
mov
pusha
xchg
jnp
pop
or
repz
lods
das
push
stos
cs
push
sub
insl
sub
pop
jecxz
enter
adc
dec
push
mov
out
mov
push
lods
inc
dec
sub
imul
ja
mov
xlat
jmp
add
addr16
mov
ret
adc
adcb
leave
testb
mov
loop
xchg
leave
jno
pop
add
push
rcl
add
shr
fisttpll
push
and
jg
pop
jmp
add
mov
pop
dec
insl
pop
aam
cs
inc
out
push
mov
jp
lods
sbb
or
pop
mov
jb
mov
rol
add
gs
cltd
jge
mov
pop
out
aam
mov
dec
jp
sti
sub
mov
fldt
ret
hlt
pop
je
jnp
add
insl
divl
jb
add
out
and
mov
ror
or
dec
adc
decl
popf
push
pop
xchg
add
scas
xor
push
sub
adc
imul
cmp
xor
xchg
push
jle
dec
cmp
cmc
sysenter
ds
aaa
cmpsl
jge
adc
push
add
sub
mov
add
fistpll
xor
in
jb
cmp
cmp
mov
sub
pop
daa
xor
add
sub
add
dec
xlat
dec
cld
leave
push
in
cmp
cmpsb
xchg
jne
push
std
lods
or
mov
mov
les
or
ffree
std
lahf
jp
dec
push
mov
sub
ja
or
or
mov
cmc
into
rorb
xchg
push
testb
jbe
dec
dec
test
xchg
jmp
adcl
test
mov
mov
or
ret
xor
dec
pop
or
sub
xor
movsb
testl
sbbb
xor
fistl
mov
test
lods
nop
mov
xchg
sbb
add
aas
lea
stos
push
into
xchg
mov
daa
jmp
xor
insb
scas
push
mov
xchg
adc
jmp
out
mov
pop
sbb
mov
sub
add
or
xchg
std
rcl
loope
vmovapd
or
pop
outsb
jb
xchg
jb
xor
cmp
hlt
ljmp
clc
mov
out
int
fwait
sbb
repz
fsincos
jecxz
mov
popa
cmp
addr16
ret
sub
jnp
int
pop
fs
pushf
jl
fwait
add
jg
addr16
xor
popa
je
into
mov
shlb
cwtl
jecxz
sub
es
xchg
xchg
pop
mov
loope
std
dec
adc
and
mov
ud2
sbb
insb
jae
push
test
subb
hlt
add
iret
jecxz
pop
xchg
inc
ljmp
leave
jmp
dec
xor
neg
sub
cli
push
push
jne
cmpsl
fistpl
ljmp
mov
jle
inc
add
outsb
mov
and
test
rorl
and
shrb
push
ljmp
fmuls
push
imul
jg
xor
lret
cmp
fbld
mov
and
sub
jmp
push
outsl
das
push
pushf
inc
lds
es
dec
popf
pushf
inc
mov
insb
dec
pop
pop
push
mov
or
ljmp
jb
pop
ljmp
sbbl
mov
jae
mov
loop
dec
jle
sbb
mov
or
aaa
mov
and
lret
fnstsw
xlat
ljmp
lret
xchg
out
loope
ja
sbbl
push
stos
je
jb
mov
mov
jne
shll
shlb
fwait
sbbb
push
xchg
rolb
fildll
rcrb
outsl
cmp
inc
dec
clc
dec
ljmp
push
jge
hlt
jb
mov
xor
fs
adc
mov
ficoml
push
insb
in
add
aaa
pop
mov
sub
mov
mov
shll
inc
cmpsl
or
popf
inc
sub
or
cmp
and
inc
int
jle
les
pop
and
mov
push
mov
hlt
push
nop
stos
inc
add
mov
dec
lea
jne
rcll
cld
xchg
jne
pushl
shlb
out
sar
mov
mov
xchg
jne
ret
js
mov
adc
sarb
dec
adc
lret
test
mov
and
sub
jl
jo
pop
fs
loop
adc
pusha
jns
sub
insb
test
xor
mov
xchg
std
adc
iret
dec
icebp
cmpsb
out
sbb
fcmovnbe
push
inc
cmp
repz
pop
popf
hlt
push
fiadds
xchg
jnp
movsb
cmp
push
mov
pushf
movsl
push
pop
mov
cmc
mov
jns
arpl
mov
mov
cmp
out
adc
neg
lret
inc
bound
dec
dec
fcomps
mov
lods
and
add
mov
jbe
mov
add
xor
dec
dec
or
jmp
adc
ljmp
data16
inc
lahf
scas
xor
sub
add
movsl
or
stos
out
into
dec
cmp
pushf
inc
xorl
push
pop
xchg
inc
inc
jb
je
dec
pop
stos
and
sbb
lods
lret
cmp
inc
xchg
rcl
xchg
stos
clc
not
str
test
insb
push
mov
loope
scas
xchg
push
scas
imul
pop
lahf
cmp
lods
ljmp
stos
pusha
fwait
mov
jecxz
aad
and
sub
in
ss
and
push
adc
or
sbb
and
mov
mov
pop
cmp
iret
popa
add
dec
inc
out
stc
sub
aaa
mov
mov
popf
fnstsw
cld
or
enter
int
cmp
loope
add
int
stos
dec
lods
cmpsb
jl
mov
enter
hlt
sbb
not
movsl
sub
popf
mov
adc
addr16
fildl
adc
or
aas
adc
fldl
xor
lcall
cmpb
mov
sub
ret
popa
push
lods
jecxz
hlt
mov
aad
fsubrl
fiadds
shrb
adc
add
into
mov
stos
mov
push
or
push
cmpsl
pop
sub
xor
push
lret
insl
xlat
in
cmp
push
mov
daa
jg
mov
jae
insl
pop
xchg
dec
xor
lcall
push
mov
mov
push
aam
out
pop
dec
nop
cmp
aam
icebp
cmc
and
dec
push
pop
iret
mov
mov
mov
shr
lock
aad
xchg
inc
or
adc
jg
and
cmpsb
sbb
xchg
test
popa
movzbl
cltd
movsl
add
and
sub
stos
stos
lret
aam
stos
andl
lods
jno
lcall
ret
mov
out
or
sbb
xor
out
stos
sbb
aad
sbb
add
xor
or
es
outsb
add
lret
cltd
pop
cmp
jmp
sbb
fmuls
icebp
out
add
cltd
push
xor
sbb
std
jl
aad
gs
je
lea
jbe
mov
or
dec
mov
xchg
jns
in
lret
jne
inc
sbb
mov
repnz
nop
aaa
out
in
sub
sahf
nop
ret
in
mov
daa
xor
push
mov
into
sbb
stc
adc
and
adc
aam
in
mov
cmp
mov
push
test
push
js
add
lahf
mov
outsb
cmp
sub
pop
fstpt
aaa
subb
mov
pop
loop
adc
mov
pusha
mov
fmuls
test
in
lcall
sbb
ljmp
mov
shrl
ror
loope
lret
scas
dec
fdiv
cmp
fucomip
sub
fucom
mov
ficoms
daa
jl
add
pop
pop
pusha
outsb
inc
icebp
rcrl
push
cmp
jge
in
mov
ss
outsb
mov
sub
dec
cmpsb
adc
fldt
xor
xor
cmp
sahf
stc
stos
cmpsl
sbb
icebp
pusha
ja
inc
lds
pop
pop
roll
xchg
std
arpl
and
into
xabort
adc
out
push
jl
xchg
shlb
mov
int3
iret
stos
mov
sub
mov
data16
jb
cmp
sbb
pop
push
mov
aaa
es
rcrb
dec
out
and
pop
lea
mov
cmp
jecxz
rcl
adc
push
jne
stos
data16
push
into
or
shlb
aam
aas
cmp
int
jae
xlat
add
xor
xor
mov
in
int
adc
andb
or
mov
or
or
sbb
inc
or
cli
jecxz
push
test
add
and
mov
mov
sbbb
or
enter
stc
or
mov
enter
test
je
mov
fstpt
pop
add
test
sahf
xchg
push
sub
adc
lret
dec
adc
dec
add
sub
sti
add
in
fisubl
gs
pop
or
push
pop
icebp
insb
xchg
sbb
ss
xchg
mov
cmpsl
inc
das
xlat
es
movsb
sub
add
in
push
mov
xor
test
cmp
xlat
sbbl
pop
fisubrl
ss
cli
sbb
or
cs
cmp
clc
lahf
mov
jne
outsb
lods
inc
mov
imul
jnp
jne
xor
dec
xchg
ljmp
inc
jnp
hlt
dec
shlb
lahf
pop
jae
fwait
hlt
jne
mov
in
shufps
cwtl
movsl
mov
imul
repnz
and
je
repnz
stc
dec
shrb
xchg
mov
lea
pop
push
and
fcmovnb
outsl
pop
mov
imul
shl
mov
lock
movsl
adc
sbb
mov
cmp
cmpsl
push
mov
je
and
notl
sahf
or
or
adc
stos
sbb
test
lret
mov
xchg
push
xchg
lds
cltd
cmp
sbb
shr
addl
clc
repz
mov
hlt
pop
sbbl
bound
dec
clc
mul
incl
xor
sub
in
xor
cmp
sub
call
out
scas
out
push
fiadds
rcrb
pusha
rclb
mov
out
sbb
arpl
mul
ja
jmp
inc
je
pop
adc
out
lahf
push
into
js
scas
cwtl
dec
mov
loopne
add
jl
jl
xor
into
out
in
pop
pushf
mov
jbe
or
inc
in
cli
sbb
out
cld
mov
dec
fcoms
sbb
push
divb
inc
mov
adc
fcoms
ds
outsl
mov
push
mov
mov
mov
mov
mov
xor
xchg
xchg
mov
adc
jl
test
fwait
clc
fimull
pop
push
call
mov
cwtl
test
push
clc
sbb
ds
data16
add
sbb
mov
int
fcoms
mov
cmpsl
js
pushf
cmp
jae
jae
pop
dec
stos
adc
ret
mov
add
lock
and
int
inc
test
mov
lea
ja
mov
cmp
aaa
dec
psubusw
mov
adc
outsb
std
pop
mov
adc
add
cmp
inc
inc
push
icebp
mov
mov
jecxz
and
insl
int3
and
imulb
ljmp
jle
test
sbb
movsb
jno
mov
js
mov
xchg
cmpl
cltd
movl
push
mov
pop
xchg
inc
inc
mov
jecxz
xor
mov
pop
jae
mov
dec
fcmovnbe
or
xchg
cmp
or
shrl
inc
out
pusha
dec
xor
orb
bnd
or
mov
jle
add
jbe
icebp
sahf
mov
incb
aas
dec
mov
add
add
enter
mov
cmc
inc
xchg
addl
lret
and
scas
mov
ljmp
call
dec
cli
xchg
fwait
stos
cld
xchg
daa
inc
cmp
in
imul
mov
cmp
pop
scas
mov
or
dec
stc
mov
add
popa
pop
outsl
sub
or
shlb
push
dec
jecxz
lea
sbb
repnz
shr
push
lret
xchg
jmp
icebp
xlat
xchg
dec
outsb
sbb
pop
fucomip
cmovo
popa
cmp
ss
fwait
data16
jns
pop
stos
decb
cli
xchg
xlat
rcll
lahf
dec
pop
enter
sbb
mov
shl
inc
negl
call
push
out
dec
nop
sbb
xor
mov
ret
or
dec
pop
icebp
xor
mov
add
pop
js
pop
ljmp
sbb
je
push
cmc
push
mov
and
hlt
sbb
cmc
jecxz
adc
je
hlt
jl
xlat
sub
pop
mov
mov
push
hlt
dec
bound
xchg
fimuls
lcall
lods
and
inc
jmpw
jbe
testl
lods
int
sbb
push
loop
cmpsl
stos
sub
mov
outsl
adc
fwait
add
nop
mov
sub
mov
popl
jnp
adc
xchg
jns
and
cld
rcr
cmpsl
push
inc
cmp
pop
ficomps
inc
inc
mov
cmp
mov
test
pop
pop
dec
mov
jae
adc
pop
mov
jmp
sub
mov
pop
jnp
cltd
inc
js
or
and
iret
jg
adc
popa
adc
idivl
adc
fwait
aad
bound
pop
lcall
dec
aaa
lods
popa
in
push
mov
jmp
xchg
push
adc
adcl
movsl
mov
aam
stc
inc
loope
hlt
test
andb
cmp
xchg
sub
sbb
push
push
cmp
scas
pop
cld
adc
inc
imul
adc
push
fisubrs
sub
movsl
fadd
jmp
daa
lahf
jmp
push
add
push
loope
pop
dec
inc
and
add
je
adc
xor
fisubl
pop
xchg
adc
out
loop
jb
cmp
and
and
cwtl
jo
cmp
and
inc
add
repnz
pop
sti
pop
fldenv
icebp
addr16
jge
xchg
out
lods
cmp
jo
loopne
flds
mov
jg
sbb
xlat
mov
imull
ss
mov
inc
push
jmp
aad
insb
sub
pop
and
pop
lock
inc
leave
addr16
popf
imul
add
sub
shll
js
lods
and
cwtl
jecxz
arpl
jg
cltd
call
setle
sbb
mov
icebp
mov
imul
jecxz
rcrb
xchg
adc
mov
jbe
mov
out
adc
jb
push
lret
dec
mov
and
push
xchg
mov
stos
xlat
lods
xchg
pop
pushf
mov
aaa
mov
or
mov
or
and
adc
iret
mov
mov
cmova
sub
inc
dec
mov
lods
cltd
mov
xor
jmp
dec
lret
pop
xchg
repnz
push
mov
add
push
push
ret
imul
mov
sbb
sub
fisubl
sub
and
push
imul
nop
jo
and
insb
sbb
pop
pushf
xor
mov
xchg
jl
cmp
or
push
mov
xor
nop
xor
daa
out
pop
mov
jnp
iret
icebp
cs
imul
push
movsb
mov
mov
out
add
insb
pop
stos
dec
xchg
insl
loopne
push
xor
xlat
push
and
fisubl
mov
mov
popa
stc
mov
dec
imul
bound
xor
cld
push
cli
jg
mov
in
int
repz
mov
repz
sub
push
mov
jae
lret
mov
xchg
sbb
pushf
dec
movb
adc
lcall
add
enter
xor
stc
in
cmp
clc
rcrl
mov
and
jae
mov
push
in
cs
adc
shl
sub
movl
mov
mov
xor
pop
mov
test
sbb
mov
jns
sub
xor
shrb
jo
pop
jns
xor
pop
int
movsb
imul
sub
orl
fisubrl
nop
or
mov
adc
pop
xchg
sub
insl
pop
je
pop
hlt
sbb
pop
mov
xor
mov
xor
daa
fldcw
sub
outsb
sub
daa
mov
mov
movnti
iret
or
out
imul
sbb
or
and
popf
cmp
or
jge
test
or
fsts
lock
adc
clc
cmp
mov
je
xchg
push
das
or
jle
sub
jp
inc
inc
add
gs
imul
fsub
adc
mov
test
sub
or
sbb
dec
mov
jmp
fs
ljmp
jg
mov
push
gs
jo,pt
dec
or
stos
das
mov
outsb
pop
mov
dec
fstps
mov
sub
mov
sti
sbb
ror
scas
cld
aam
andb
scas
and
lcall
int3
push
outsb
cli
sti
lock
movsb
data16
jbe
adc
xchg
leave
cmp
add
jbe
sahf
push
inc
cmpsl
stos
push
mov
out
push
rorb
imul
xlat
mov
ds
jge
movsb
shrl
sub
sbb
aas
stos
push
inc
xchg
dec
adc
inc
jmp
adc
test
xchg
sbb
lock
loope
sarb
mov
dec
adc
in
dec
xor
out
jo
js
mov
out
fistpll
mov
or
and
ljmp
and
jns
pop
jg
dec
imul
popf
xor
aaa
arpl
xchg
xchg
dec
shl
mov
pop
pop
inc
repnz
lock
les
cmpsl
jo
or
sti
popa
ja
out
inc
test
orl
test
add
pop
sbb
adc
mov
mov
not
dec
in
xor
mov
dec
call
negl
bound
lock
mov
fisubs
sbb
xor
xchg
mov
je
pop
mov
pusha
insl
je
sbb
gs
scas
cs
fs
cwtl
adc
push
daa
and
jle
add
mov
outsb
repz
jl
mov
outsb
xchg
es
loopne
mov
pop
pop
out
insb
movsl
and
jns
cmpsl
loopne
xchg
push
mov
xor
xchg
pop
xchg
xlat
push
push
cs
mov
ljmp
mov
rolb
jl
ret
mov
outsl
pop
push
add
pop
popf
ja
push
cmpsb
xlat
mov
sbb
mov
push
mov
aam
xor
sbb
scas
clc
divb
jge
enter
sub
loope
pop
test
fldcw
insl
in
push
mov
push
sbb
mov
mov
lods
pop
xchg
mov
or
cmp
and
stc
inc
sbb
mov
ds
xchg
or
outsl
and
stos
fcoms
out
sahf
cs
lock
fwait
xchg
push
xchg
and
into
in
xchg
push
in
sbb
push
out
add
jl
lea
stos
pop
in
shl
sub
ret
jb
or
sub
int3
inc
sub
jae
mov
aad
sbb
enter
cmp
jns
sbb
jmp
sahf
jl
lock
mov
sub
sahf
bound
xchg
pusha
lock
outsl
jne
stos
jne
mov
lret
cmp
jne
and
cmp
push
jo
jl
cltd
call
pusha
out
or
in
test
adc
hlt
loopne
pop
aad
push
mov
lea
mov
dec
mov
outsb
popf
into
mov
cmp
cmp
mov
enter
dec
jl
and
and
inc
ja
imul
cmp
mov
add
outsb
imul
cmc
iret
test
jb
or
cmp
jmp
jns
cs
pusha
aad
lea
add
sahf
cmpsb
lret
cmp
lcall
adcl
fdivrs
dec
push
insl
fidivrl
xchg
mov
das
fdiv
scas
jmp
cld
lds
js
jae
enter
mov
iret
and
pop
out
push
pop
aad
add
xlat
shl
fldt
daa
cwtl
lods
int
sbb
add
adc
sub
sbb
in
dec
add
mov
ja
int
cwtl
push
sahf
mov
andl
aam
mov
push
add
clc
add
scas
jg,pn
sub
inc
or
sarl
push
loope
adc
lret
jb
filds
inc
out
push
sbbl
pop
gs
pusha
out
cmp
dec
fcompl
mov
adc
dec
nop
jno
jno
lcall
add
jne
pop
cld
inc
push
fwait
cmc
imul
fsubrp
rcrb
outsl
pop
jg
dec
stos
xchg
sbb
fdivrl
xchg
and
push
fs
stos
and
pusha
fcoms
and
aaa
fisubrl
nop
mov
test
pop
repnz
add
imull
inc
mov
fbstp
clc
popa
push
ja
stos
mov
pushf
dec
out
in
pop
popf
fcmovu
fs
ret
sbb
mov
push
and
call
mov
fsts
bnd
out
jbe
pop
jae
and
mov
push
mov
pop
push
dec
mov
xchg
das
add
or
inc
jb
mov
push
in
notb
cli
subb
sbb
stc
cld
and
xchg
rcrl
jnp
mov
mov
xor
push
and
cmp
pop
imul
cmpsb
pmaxsw
dec
das
jle
xchg
lahf
mov
stc
stc
jns
push
xchg
pop
fadds
aad
in
cmp
lret
dec
std
sahf
jge
jns
aas
xor
out
cmc
dec
jmp
jae
out
nop
lret
and
xor
mov
mov
jb
lds
mov
decl
popa
adc
mov
pop
ja
xchg
mov
mov
lcall
pop
add
push
mov
sbb
test
mov
xor
jg
test
movsl
push
mov
xchg
jl
ds
push
addr16
push
fstpl
cli
lods
cld
imul
or
jno
shlb
pop
mov
push
lods
loope
and
jne
add
out
cld
stc
out
and
repnz
enter
add
jp
push
frstor
pop
and
add
mov
dec
outsb
int3
stos
daa
cmp
dec
dec
test
adc
jnp
push
dec
shrb
je
dec
pop
cmp
cmc
in
les
mov
pushf
mov
ja
scas
and
mov
lds
imul
mov
fcomps
scas
push
test
insb
jbe
sub
ret
pop
cmpsb
loop
shll
lret
rolb
inc
xlat
cmp
sub
jl
loope
jb
xchg
pop
jb
js
cmc
addl
shrl
push
lods
push
inc
dec
fwait
loope
cs
aas
inc
cmc
pop
dec
xor
and
fiaddl
in
andl
pop
inc
addr16
cli
fsts
lret
subb
and
mov
out
les
ret
or
das
repnz
xchg
cmp
jne
daa
jmp
lahf
pop
sbbb
jl
cmpsb
xchg
test
scas
push
adc
and
pop
rolb
xchg
jp
in
pushf
lds
fadds
mov
repnz
xchg
shll
add
xchg
je
fcompl
subb
cmc
loope
sub
inc
push
mov
mov
dec
xchg
adc
jle
mov
fsubrs
mov
out
mov
ja
fwait
and
sub
push
orb
push
mov
ljmp
add
mov
ja
out
and
loopne
fldt
and
dec
push
fs
lods
in
cmpb
add
jae
out
inc
push
xchg
addl
pop
stc
xchg
dec
mov
pushf
js
jo
insl
mov
fwait
js
jmp
iret
mov
fldcw
jge
rcll
icebp
push
pop
fnstsw
test
or
dec
icebp
icebp
sub
jecxz
bound
jb
aaa
lods
loop
out
mov
and
es
inc
enter
cmpsl
jge
int
lret
hlt
fisubl
inc
xchg
frstor
xchg
mov
test
nop
out
cli
or
pop
outsl
pop
jle
xchg
adc
iret
mov
int3
imul
cli
cmpsl
leave
adc
xchg
jae
add
pop
push
call
pop
push
stc
inc
das
mov
out
jne
filds
out
sub
xchg
popf
cmp
cmp
dec
cmp
push
ja
lods
push
push
cmovnp
adc
sub
push
jbe
add
or
pop
ss
movsb
and
in
dec
cltd
nop
adc
dec
pop
incl
ret
xor
inc
std
popa
inc
loope
fcomps
mov
popa
aaa
cmpsb
jo
and
pop
cs
mov
sbb
fstl
pop
dec
stc
add
in
mov
push
xchg
and
dec
ret
xchg
add
shll
je
loope
xlat
hlt
into
jns
paddq
push
mov
adcl
push
fbld
clc
fcompl
lcall
mov
cmp
add
aad
or
add
or
xchg
jecxz
lret
xor
leave
fxch
jb
jnp
adc
popa
cmp
idivl
fs
clc
lcallw
jecxz
cmpsb
mov
nop
xlat
pop
push
jmp
push
mov
fisttps
repz
cmp
or
jl
jge
lods
jmp
in
inc
pop
repz
pop
clc
pop
and
push
loopne
movsl
xor
mov
mov
loop
pop
adc
fnstcw
cmp
lcall
cld
arpl
sbb
jmp
and
imul
cmpb
fwait
imul
xchg
push
jae
adc
out
sub
out
test
xchg
sti
jl
push
push
lcall
mov
push
xchg
pushf
or
jo
jne
lea
adc
jp
das
sub
and
pusha
bound
cmc
lret
pop
dec
std
cmp
jne
std
jecxz
push
dec
push
call
test
jae
cmp
jge
loop
cmp
add
pop
std
or
sbb
sbb
decb
out
pop
iret
mulb
pop
fpatan
adc
fidivrs
cmp
add
mov
sub
sub
cmpsb
filds
mov
or
mov
push
stos
mov
jg
gs
js
repnz
mov
das
das
or
lea
ss
and
dec
add
xor
push
dec
loope
adc
cmp
sarl
daa
inc
leave
loop
bound
jnp
jecxz
fisubrl
movsb
and
int
xchg
outsb
mov
mov
pop
inc
and
call
xchg
add
clc
jae
push
lock
fwait
stos
xchg
ret
dec
mov
sbb
insb
inc
pop
push
xor
jmp
push
jbe
cli
cs
loopne
popf
pusha
sub
push
notl
sbb
or
mov
cmp
xlat
int3
js
add
mov
ja
mov
sub
add
fisubs
mov
jnp
fwait
call
add
xor
and
jnp
inc
mov
or
aaa
cmpb
sub
or
insl
jecxz
loope
xchg
dec
js
decb
inc
sbb
xchg
dec
stos
add
and
mov
dec
and
jl
test
adc
xlat
lahf
out
aaa
nop
hlt
add
mov
enter
mov
adcb
and
push
mov
in
xor
int
mov
into
test
rcl
test
dec
sbb
out
sub
fcmovu
and
jbe
in
cmp
mov
pop
xchg
cmp
push
inc
add
mov
in
push
xor
cmp
iretw
adc
or
sarb
pop
fimuls
jecxz
cmp
mov
stos
gs
jp
jnp
or
sarb
je
pop
pop
add
data16
xchg
sbb
cmp
jbe
cmp
loop
push
shll
xchg
xchg
les
push
pop
dec
or
cwtl
stos
repz
movaps
adc
push
sbb
cmpsl
scas
clc
js
and
mov
push
cwtl
and
sbb
inc
and
mov
dec
dec
ret
imul
shll
xchg
sub
inc
inc
adc
push
gs
lcall
call
adc
shll
fimuls
movb
dec
scas
dec
call
shld
mov
pop
insl
jl
add
cmp
or
cmpsl
pusha
mov
lahf
inc
cmp
mov
and
jnp,pt
arpl
out
mov
sti
andps
psadbw
pushf
call
or
ss
inc
add
jo
fadds
inc
fnstcw
sub
push
mov
adcl
loopne
les
xlat
ss
mov
roll
std
adc
shll
insb
adc
pop
push
in
fwait
sarl
insl
mov
loope
cmp
cmp
sbb
rclb
push
push
dec
or
xor
pushf
arpl
mov
ja
mov
sbb
xchg
jg
cmpsb
xchg
ljmp
lock
adc
jnp
cld
cltd
lret
fidivrs
jb
xchg
enter
xchg
movb
js
jg
lods
cmpl
je
sub
adc
or
ljmp
int
push
gs
fwait
lock
sub
push
mov
mov
jb
xor
xchg
lock
bound
pusha
jle
std
and
rol
pop
push
mov
imul
pop
out
xchg
jle
ret
mov
out
sbb
xrelease
mov
cs
cmp
out
xor
or
stos
and
xchg
data16
repnz
js
lcall
xor
cmpl
hlt
ds
clc
jo
ss
imul
fisubl
adc
je
cwtl
inc
fldt
enter
mov
insb
push
ret
jne
sub
in
and
xchg
addb
dec
dec
negb
jl
stos
rorb
loopne
rolb
js
repz
xchg
rclb
sub
es
jns
cltd
stc
mov
imul
lods
ds
pop
leave
notl
js
aaa
push
mov
lret
or
mov
or
orl
dec
xchg
outsl
leave
adc
repnz
jb
sbb
arpl
icebp
nop
sub
mov
test
leave
sbb
xor
mov
test
push
cld
mov
leave
test
xchg
inc
push
jle
and
xor
faddl
xchg
inc
or
push
lea
test
xchg
sub
mov
aad
push
jle
out
cld
cmpsb
dec
inc
mov
cli
outsl
adc
xchg
mov
wbinvd
stos
fnstcw
push
dec
pop
bound
enter
adc
cmp
dec
push
mov
pop
fnstsw
lcall
jno
jnp
pop
add
adc
jge
aaa
or
push
into
lock
sarb
movsb
aas
shrb
or
test
adc
icebp
sub
cmpsl
sub
xor
loop
fwait
jbe
aas
mov
clc
xor
mov
scas
adc
jo
aas
pop
pusha
adc
xor
jno
mov
gs
pusha
out
icebp
jo
mov
shlb
jnp
std
dec
test
mov
pop
push
sub
mov
pop
cmp
pop
movb
mov
cltd
pop
cltd
mov
sbb
pop
test
les
stos
cmpsl
stc
aad
dec
mov
scas
push
or
mov
mov
inc
sbb
mov
dec
insl
cmp
jmp
xchg
cwtl
loope
ficomps
xor
shlb
sbb
mov
xchg
cld
pop
adc
sbb
je
and
cmp
mov
pop
add
and
push
pop
jno
mov
inc
inc
mov
repz
fdiv
sbb
mov
add
pop
movsb
cmp
jp
pop
dec
push
addb
mov
int
scas
mov
xchg
pop
insl
int
test
test
rolb
sarl
and
cmp
cmp
fcomi
enter
xchg
into
adc
mov
pop
das
out
jae
add
call
adc
fnstenv
dec
jg
push
mov
leave
js
pop
lea
mov
jge
jl
lock
jbe
scas
push
scas
mov
sbb
push
adc
sub
mov
mov
push
lret
cmpsl
imul
ret
call
push
popf
push
push
mov
lcall
shll
xor
test
adc
enter
int
jecxz
movsb
xor
fidivl
inc
mov
pusha
xchg
js
outsb
sti
enter
xchg
pop
xchg
xchg
jnp
mov
jecxz
mov
dec
mov
inc
and
cmp
push
jg
pushl
ja
cld
xchg
lret
aad
push
cwtl
mov
mov
dec
sti
and
adc
daa
and
cmp
fwait
mov
push
aas
mov
out
movsl
mov
addr16
pop
sbb
shl
rolb
dec
sbb
test
sub
cld
popa
insl
nop
mov
push
inc
inc
xchg
ficomps
sbb
cld
cmp
push
lcall
cltd
ss
loop
mov
pop
or
aaa
cmp
into
test
sbb
gs
sbb
sub
dec
clc
xor
mov
mov
mov
push
pop
and
xchg
xchg
ja
mov
inc
iret
mov
paddq
pop
inc
out
fisttpl
in
push
jg
mov
fidivrl
xor
jae
pop
dec
les
testb
mov
sub
mov
pop
lods
adc
aad
mov
mov
inc
ret
test
nop
dec
cmpsb
xchg
lds
push
inc
add
mov
push
mov
push
mov
mov
in
or
jo
les
jno
mov
loop
jg
stc
es
mov
mov
xor
push
cmpsb
lods
outsb
ss
popf
push
roll
mov
adc
push
cmpxchg
jl
popl
test
dec
mov
or
push
xor
in
mov
add
and
popa
sub
mov
inc
jns
pop
dec
dec
loope
fildll
adc
dec
or
test
ds
pop
js
repnz
add
xchg
jge
pop
in
icebp
lds
ds
jle
jmp
pop
js
mov
cmp
or
test
mov
lods
mov
out
push
mov
add
mov
mov
nop
mov
pop
mov
mov
xor
lock
stos
fisubs
cmpsb
xor
mov
lret
sbb
inc
pop
sbb
or
out
sub
mov
lret
sar
sbbb
xor
push
mov
jge
int3
call
repz
mov
or
push
repnz
cld
xor
divb
xor
int
lret
jmp
mov
jg
jge
push
call
test
and
adc
mov
or
loop
hlt
add
sub
fs
mov
out
out
movsl
jle
push
fisubrl
shrb
cmp
sbb
ss
lcall
dec
cmp
cmpb
cmp
outsl
inc
sub
push
ljmp
dec
mov
push
mov
dec
adc
or
outsl
sub
jmp
xchg
add
lods
jge
addl
xchg
pop
sub
dec
cmp
aam
movsl
pop
cs
jb
add
xchg
in
xor
outsb
mov
lock
test
aaa
adcb
adc
jb
fisubl
icebp
loopne
ret
mov
idivl
repnz
mov
les
cmp
int
cmp
mov
sub
xor
notb
sub
stos
jge
push
dec
push
popl
mov
add
in
notb
xor
adcb
outsl
jg
ret
flds
inc
dec
dec
mov
fbstp
outsb
inc
popf
jecxz
ret
push
lahf
fidivl
test
iret
repz
dec
fwait
pop
cld
jbe
dec
mov
fidivrl
xor
or
sub
gs
daa
in
dec
lea
fwait
out
gs
insb
movsb
inc
mov
add
out
fildl
xchg
sbb
out
in
mov
orl
mov
test
ret
shrl
sub
jle
add
add
adc
mov
notb
lods
xor
push
adc
dec
add
and
fsubs
pop
dec
mov
ficomps
or
and
xor
mov
cmpsl
jle
in
pop
xchg
shr
rcl
and
jbe
pop
into
mov
adc
and
shll
mov
push
add
in
and
adc
sub
cmp
andb
push
jmp
fucomi
out
test
fs
or
cmp
pop
cmp
stos
dec
cmp
inc
in
push
sub
xchg
jo
lock
cld
mov
mov
fisubrs
push
sbbl
shlb
adc
push
cs
fistpl
cmpsl
mov
mov
js
shlb
mov
data16
and
or
mov
ljmp
into
sub
loope
mov
mov
pop
push
and
jge
outsl
mov
ja
mul
pushf
fstpl
inc
xchg
test
xor
test
jl
pop
aaa
into
push
in
std
sbb
filds
sub
jne
fmulp
jae
test
mov
popa
and
mov
sbb
mov
fdivs
in
movsl
xchg
orb
rolb
jae
dec
jp
dec
mov
das
lods
pop
sbb
xlat
xor
loope
push
sub
push
jno
inc
cmp
xchg
aas
jl
icebp
xor
incl
mov
lods
push
mov
adc
adc
cld
jl
test
hlt
sub
xchg
mov
sub
adc
sar
push
mov
jnp
xchg
push
add
test
mov
insl
sahf
inc
push
ljmp
out
xchg
and
aas
mov
push
add
adc
insl
fildl
xchg
into
enter
pop
cmpsl
push
cmpsb
pop
mov
filds
stos
loopne
xchg
xlat
sbb
sbb
pop
jge
test
fsubl
push
mov
dec
cmp
or
sub
insl
mov
sub
mov
pop
mov
inc
dec
lret
loop
adc
cmpsl
pushf
jg
fucom
ficoms
out
sbb
pop
sub
mov
dec
scas
pop
imul
mov
sub
cmpsb
sarb
or
pop
sub
cmp
pop
mov
addb
xor
mov
cltd
and
in
call
int
sbb
mov
pop
jnp
jp
add
sbb
decl
xor
push
das
add
es
jae
xchg
add
in
aas
push
xor
adc
es
addr16
pop
test
push
in
movb
sbb
fs
mov
sub
test
xchg
iret
jl
dec
pop
repnz
jecxz,pt
cs
pop
into
test
popf
sti
clc
iret
dec
cmp
pop
pop
adc
pusha
imul
xchg
cmp
jmp
or
xchg
adc
lahf
sub
ja
pop
inc
in
mov
mov
or
and
pop
xor
scas
scas
int
jae
dec
mov
ror
pop
mov
lret
xchg
lahf
dec
xor
lret
in
pop
lret
ja
jo
mul
ret
push
ja
pop
pop
sahf
or
mov
outsb
mov
sbb
cli
cmc
cmc
arpl
test
mov
leave
ret
jne
push
xor
stc
mov
pop
jg
mov
es
rorl
add
or
adc
stos
jp
cmp
jnp
ja
cmp
leave
inc
test
or
xor
jne
xor
xor
pop
mov
les
call
jns
inc
scas
mov
and
pop
or
jl
add
idivb
pushf
std
or
in
dec
aad
push
std
fadd
inc
iret
or
dec
sti
mov
lds
out
out
rorl
xchg
dec
mov
lods
push
aad
pushf
mov
fistpll
xchg
jb
test
or
loope
add
pop
and
push
inc
loop
jl
sbbl
push
dec
icebp
bound
rorb
lods
inc
mov
dec
dec
std
int3
or
cmp
pop
mov
add
adc
lret
jmp
jle
mov
cmp
test
ljmp
out
pop
int
aam
aam
push
sub
ja
inc
mov
mov
adc
xor
out
je
addr16
call
jnp
mov
and
mov
in
pop
cwtl
add
adc
in
cmp
mov
test
pop
sbb
cmpsb
xor
loop
mov
jecxz
stc
pusha
pop
xchg
or
into
cltd
cmpsl
inc
push
push
pop
cmp
inc
andl
pop
and
bound
aaa
lods
xchg
lods
test
cwtd
rorb
mov
jb
jp
jecxz
test
mov
mov
das
pop
hlt
out
lret
cmp
rorb
mov
sub
jl
sub
xchg
sti
stos
xchg
or
mov
in
jl
ret
cmc
out
addr16
or
pop
dec
lcall
bound
sbb
jl
xor
xchg
sbb
xchg
mov
in
enter
push
sbb
mov
and
shl
push
mov
push
inc
arpl
push
or
push
les
insl
test
in
jl
jb
fwait
adc
stos
icebp
jbe
js
ret
test
xchg
repz
inc
popf
int
jo
cmp
pop
mov
sub
jbe
adc
int
std
inc
sbb
jo
loopne
roll
sub
add
and
test
adc
mov
mov
mov
rcl
xchg
das
mov
pop
jg
repz
ljmp
push
iret
push
aam
xchg
inc
mov
mov
scas
mov
inc
repnz
aas
lahf
sub
frstpm(287
inc
mov
cmp
and
lea
mov
pop
sbbl
mov
std
sbb
jno
inc
leave
mov
mov
mov
popf
pop
lahf
fdivr
notb
add
lds
dec
bswap
mov
lret
test
xor
cmc
into
in
fcomps
bound
mov
inc
inc
sub
aaa
mov
ss
lcall
fnsave
add
arpl
int3
or
inc
bound
cld
imul
mov
movsl
cmp
fcomps
andl
mov
xor
sbb
cmp
sbb
mov
lret
stos
jg
mov
xchg
mov
loopne
clc
sbb
cli
decl
stos
clc
loope
push
bound
xor
idivl
or
dec
aas
jle
push
outsb
pop
imul
lret
adcb
mov
inc
cmp
out
ja
dec
xor
addb
inc
dec
out
mov
sub
call
add
mov
ljmp
int
xor
sahf
xor
add
xchg
popf
outsl
jg
test
imul
cmpsl
pop
mov
leave
dec
iret
clc
mov
cwtl
lcall
lods
sub
negl
test
inc
pop
mov
cmpl
hlt
negb
outsl
js
lcall
push
jb
in
mov
mov
cwtl
test
sbb
stc
mov
mov
nop
xchg
mov
sbb
cmp
std
or
loopne
data16
cmpsb
ljmp
adc
loope
xchg
mov
cmp
and
sti
push
or
or
and
mov
movsb
push
dec
push
and
sbb
dec
sub
inc
xchg
incb
mov
or
inc
xor
xchg
icebp
add
jb
push
cmpsb
adc
rcr
out
ret
and
sbb
out
aad
sub
fwait
scas
jns,pt
out
sbb
movsl
inc
sbbl
leave
mov
daa
aad
loop
jns
mov
movsb
inc
xchg
pop
call
loopne
pop
mov
mov
xchg
icebp
jg
cmp
ljmp
ret
adc
jb
push
mov
icebp
mov
ret
ret
loop
sar
scas
outsl
je
or
pop
cld
adc
popa
xchg
dec
ret
daa
cltd
inc
mov
jg
jmp
add
push
pop
mov
push
or
lds
jmp
fisubs
mov
cli
lret
stc
mov
mov
xor
mov
pop
in
pop
mov
cmp
push
cld
imul
jb
xchg
in
xor
mov
or
adc
mov
push
ja
fstps
mov
add
add
lcall
loopne
movsb
inc
shr
adc
push
jmp
fadds
or
mov
das
push
cld
in
leave
sub
xchg
test
stc
in
lods
fcompl
pop
popa
stos
xchg
add
cmp
lea
fwait
repnz
jecxz
and
mov
roll
aam
and
call
sbb
stos
inc
dec
mov
jge
mov
pop
sti
xchg
lret
push
repnz
negb
jns
jns
into
cmp
inc
stc
add
pop
ljmp
pop
in
lret
pop
setnp
xchg
mov
jge
hlt
mov
inc
pop
add
jae
cld
in
sahf
xchg
cmp
seto
xor
rdmsr
or
mov
cld
int3
push
ljmp
mov
ret
repz
scas
call
cmp
sbb
rorb
cmp
lret
mov
push
aas
inc
ret
add
dec
cmpsb
jge
repz
out
pop
data16
xlat
push
push
and
and
push
mov
scas
hlt
sbb
out
out
adc
dec
mov
and
ficoml
lret
sbb
pop
arpl
fisubrl
outsl
addr16
movsl
imul
ds
or
fstpt
clc
add
addr16
jo
add
pop
sti
xchg
push
stc
add
dec
push
pmaxub
fbld
push
scas
jnp
jb
shlb
fildll
imul
mov
mov
jge
out
popf
stos
add
pop
test
outsb
mov
xchg
jg
lea
sarb
mov
or
aad
out
shrl
lock
daa
xor
cmp
out
iret
pop
js
dec
aam
mov
inc
adc
test
mov
addr16
sarl
push
js
jae
mov
bound
popf
mov
nop
xor
stos
sub
rorl
sbb
xor
daa
dec
aaa
pop
mov
or
xchg
push
pop
in
xor
int
enter
xlat
lahf
xor
push
pop
ret
mov
iret
cwtl
jae
aad
cmp
mov
in
xor
push
mov
push
mov
stos
inc
stos
cmp
dec
mov
ja
jecxz
clc
out
fdivl
dec
or
sub
cmp
movsb
imulb
outsl
cli
mov
cmp
and
bswap
sti
mov
das
shr
fiaddl
dec
in
aam
mov
jae
mov
pop
pop
loope
adc
lods
inc
ret
mov
push
or
inc
movsb
adc
xor
in
gs
cmc
mov
or
clc
lods
jae
inc
cli
imul
adc
insl
adc
lahf
and
jecxz
mov
lret
sbb
stos
out
iret
cld
cmp
pop
lods
add
sub
aas
lahf
and
lods
adc
dec
cmpsl
divb
add
sbb
pop
mov
pusha
jg
mov
cld
lret
scas
aas
sti
sub
shll
mov
sarb
scas
test
mov
inc
and
xchg
jg
push
inc
push
es
mov
dec
mov
xor
dec
leave
sahf
shl
fisubl
mov
mov
push
add
mov
sbb
std
push
push
push
fnstsw
roll
cld
mul
and
or
nop
mov
sbb
cs
mov
imull
outsl
push
popa
cmpsb
ja
xchg
lret
popa
repz
incb
sbb
bound
sahf
sub
fdivrs
adc
mov
mov
cmp
lret
insl
stos
aas
push
cmp
push
jnp
jbe
stc
cltd
cld
cmp
pop
loopne
mov
les
sbb
xor
inc
sub
adc
cwtl
jmp
xor
ja
jle
mov
out
cmp
and
cli
aam
repnz
das
jge
adc
in
pop
push
iret
jne
out
mov
lock
addl
jae
mov
cli
in
sbb
bnd
pop
push
daa
inc
fninit
iret
mov
ds
push
scas
sbb
in
sbb
cmp
jecxz
imul
sub
and
sbb
movsl
fmull
dec
dec
movsl
call
lret
mov
ret
cmp
out
and
pop
scas
in
sub
sahf
dec
xor
je
mov
lahf
dec
int
out
jmp
adc
xchg
movsb
and
movb
push
inc
js
push
dec
dec
and
nop
and
adc
clc
popa
sbb
jne
movsb
dec
jecxz
cmp
push
clc
test
mov
mov
bound
das
adc
dec
stos
adc
inc
stos
das
sbb
mov
adc
call
aam
push
nop
fs
or
mov
leave
dec
or
xchg
jmp
xchg
div
in
sbb
cmp
cmc
testb
mov
out
xchg
mov
stc
add
and
and
mov
xchg
lar
popl
in
fs
aas
push
add
ret
sub
nop
jbe
mov
mov
pop
daa
dec
sbb
ja
call
pop
sub
data16
dec
fisubrs
xchg
dec
leave
jp
sub
lahf
fldcw
or
mov
js
loope
jl
mov
or
test
inc
cmpsl
lret
adc
in
out
or
jae
mov
scas
xor
mov
sub
push
daa
lret
int3
in
inc
call
inc
inc
lret
popf
negb
pop
adc
push
or
int3
pop
test
push
pop
mov
loop
sub
pop
jl
andb
arpl
clc
pop
test
cmpsb
mov
jns
hlt
mov
sbb
add
call
popf
rcrl
das
inc
mov
push
das
add
mov
or
jecxz
outsb
adc
lock
std
lcall
into
mov
mov
aam
sbb
cmp
xor
sub
add
fucom
push
iret
xlat
in
imul
arpl
fmul
inc
jge
repnz
stos
into
icebp
addr16
inc
sti
dec
ds
cli
outsl
and
out
outsb
bnd
or
mov
dec
cmp
aam
cmc
clc
or
aad
out
add
int3
xor
orl
divl
into
outsl
sub
jmp
sahf
xchg
pop
call
xor
bound
test
in
popf
dec
stc
fsts
std
or
andl
arpl
xor
jp
dec
push
cmp
loopne
add
testb
insb
jbe
mov
pop
add
test
jne
sub
arpl
outsl
hlt
cmp
jmp
xchg
mov
cmp
fwait
cmp
sahf
sub
test
and
je
push
xor
out
scas
cmp
cs
popa
inc
xchg
sbb
es
and
mov
test
iret
filds
inc
call
out
add
jbe
stos
daa
outsb
shlb
mov
xchg
lds
mov
and
scas
insb
out
mov
rcr
out
pop
iret
inc
jns
xor
rorb
pusha
jo
jecxz
pop
pop
mov
ret
add
idivb
and
in
push
clc
loop
pushf
lds
or
xor
in
idiv
cwtl
imul
cmp
mov
mov
adc
adc
cmp
imul
scas
mov
nop
aam
rcll
inc
xchg
cmp
sbb
xchg
lret
scas
sbb
sbb
or
add
push
and
stos
cmp
ret
mov
popa
add
cmp
or
idivb
mov
ds
xor
aad
into
sbb
dec
mov
jg
js
jbe
lret
pop
sub
mov
push
adc
pushf
and
dec
cmp
fildll
push
testl
adc
call
cwtl
mov
push
push
xchg
mov
push
dec
clc
add
sahf
jns
je
stc
imul
adc
cmp
js
jmp
cli
shl
lcall
mov
movsb
call
dec
repnz
shll
js
xlat
sub
test
jnp
mov
test
in
xchg
outsb
cmp
push
sub
mov
jo
les
mov
fldl
add
pop
xchg
mov
pop
jb
mov
mov
incb
aam
aad
pop
fistl
jnp
out
rcrl
jge
js
inc
xchg
fwait
mov
repnz
pop
adc
pushf
ljmp
xchg
lea
clc
and
mov
aam
mov
loopne
inc
push
in
lcall
inc
mov
adc
ret
pop
movsb
cmp
inc
sub
xchg
inc
or
aam
xor
lods
xchg
fsubrs
pop
into
cmc
xchg
out
adcb
push
inc
inc
mov
push
and
dec
repz
mov
out
in
add
adc
jmp
adc
enter
stos
insb
aaa
xor
shl
and
ja
pmuludq
outsb
and
add
aas
stos
push
scas
iret
std
jo
shrb
push
add
insb
jmp
adc
jmp
es
xchg
jne
pushl
push
xchg
aad
push
jecxz
ja
dec
movsl
push
cmp
leave
sti
xchg
push
dec
mov
sbb
or
jge
enter
rcll
jae
addb
mov
sbb
add
idivb
mov
cld
mov
inc
pop
xchg
out
mov
jns
arpl
ficoms
shr
test
or
jne
inc
bound
mov
mov
leave
adc
aad
mov
das
add
inc
leave
jmp
xor
fimuls
mov
lods
movsl
into
aad
push
push
inc
lea
rcll
fisubs
adc
sub
or
addr16
mov
pusha
cmp
push
jno
sub
mov
jp
lret
jmp
push
pushf
mov
inc
stos
mov
xor
xor
les
jno
mov
fidivrl
lahf
in
rcrb
pushf
jbe
pop
add
lret
insb
xchg
mov
pop
test
mov
pop
iret
mov
int3
pop
mov
mov
adc
mov
jae
mov
mov
std
ret
add
std
out
add
xchg
push
bswap
jecxz
adc
test
xor
rolb
fdivs
out
lahf
rolb
in
pxor
jno
xchg
mov
outsb
in
sbb
mov
out
rclb
iret
sub
xchg
jae
pop
jns
xor
ss
mov
mov
ljmp
dec
outsb
push
inc
cs
cmc
sub
inc
dec
movsb
adc
adc
mov
daa
test
xchg
notb
lcall
pop
fs
ss
xchg
mov
pop
inc
mov
test
and
call
addl
fs
ss
push
mov
mov
gs
movsb
cmp
insl
cld
je
add
mov
or
mov
sarl
cld
mov
movsl
out
xor
das
lea
adc
rolb
inc
fisubl
sub
inc
xchg
or
aas
or
adc
sub
adc
jno
pop
mov
ja
pusha
adc
insb
push
add
mov
sahf
dec
jbe
int
jl
in
mov
cmp
adc
push
repnz
push
jo
xchg
sub
repnz
cwtl
movsb
cmpsb
push
jle
mov
xchg
push
jg
sub
push
add
mov
cmp
int
dec
xor
mov
fstpt
xor
xchg
push
repnz
or
jge
xor
sbb
jne
icebp
in
mov
mov
push
push
add
nop
js
test
push
or
mov
adc
popa
xor
cmp
bswap
dec
dec
add
jmp
mov
xor
xchg
ljmp
or
insl
leave
lea
mov
mov
pop
daa
imul
mov
adc
xchg
mov
xlat
and
sti
cs
xor
call
inc
in
jno
xchg
aas
mov
push
insl
movsl
iret
stc
jno
mov
inc
mov
js
push
scas
or
mov
xor
mov
mov
lcall
test
montmul
cmpsb
adc
jno
pop
sbb
cli
inc
jl
jp
jmp
xlat
mov
sbb
dec
xchg
sbb
xchg
testb
xchg
xor
negb
out
sbb
stos
sarl
test
shrb
push
rdtsc
mov
fs
dec
loop,pn
lret
add
cmpsl
jb
mov
sub
das
fsubrp
dec
in
cld
jle
inc
out
test
fistl
sub
rolb
and
lret
fcmovne
add
cmp
add
inc
sbb
and
lods
sbb
lods
dec
sub
sar
pop
mov
xor
and
xchg
cltd
sti
fnstsw
aas
cmp
sub
pop
sti
or
mulb
cwtl
fstps
stc
imul
push
adc
push
loope
pop
imull
stos
pop
xchg
or
cwtl
xor
jge
pop
hlt
dec
addr16
jge
sbb
push
inc
les
ss
pop
test
sub
imul
inc
dec
xchg
rcrb
ds
cld
inc
rclb
or
stc
ficoms
loopne
int
dec
or
fwait
test
gs
loop
out
psubsw
mov
pop
push
rolb
add
dec
movsl
daa
xchg
iret
scas
shll
sbb
lock
icebp
mov
dec
mov
aas
xchg
iret
fs
push
and
das
outsl
test
cmp
mov
and
and
rcrl
xchg
ja
push
scas
dec
outsb
mov
enter
push
dec
aaa
jb
dec
jle
arpl
or
addr16
dec
and
or
xor
sbb
dec
dec
insl
adc
mov
and
dec
in
cs
imull
jnp
out
jmp
adc
push
pusha
shll
dec
pushf
enter
jl
and
lea
repz
fs
jmp
lods
mov
mov
pop
popf
pop
jg
mov
dec
inc
sahf
ljmp
std
mov
divl
cmp
cmp
ja
imul
inc
and
std
cmc
xor
jmp
inc
inc
dec
bound
sarl
roll
dec
push
mov
in
outsb
jns
xor
xlat
and
adc
mov
in
outsl
jnp
ds
cmp
dec
movsb
jnp
cmp
or
cmp
pop
jno
shr
mov
movsb
enter
mov
mov
ret
push
icebp
imull
cmp
inc
and
scas
dec
je
mov
or
fdivl
out
xor
out
bound
mov
repnz
pop
loopne
into
fidivl
loopne
inc
inc
testb
mov
adc
and
int3
push
dec
iret
sub
xchg
xor
and
mov
inc
jl
ret
push
pop
cmp
cmpsl
inc
jo
adc
dec
add
fcmovnb
adc
jle
pop
mov
das
push
testl
data16
iret
ds
pcmpgtw
push
lret
das
adc
divl
jecxz
dec
mov
jmp
inc
out
push
lret
andb
push
and
push
les
int
pop
jo
and
dec
imul
push
fstp
mov
ljmp
inc
sbb
mov
jp
mov
mov
xor
push
jne
pop
imul
xor
push
jl
test
jg
fwait
pop
repz
push
in
pop
cmc
jecxz
flds
ret
sub
push
test
mov
and
ret
mov
leave
out
push
fs
mov
pop
ja
bound
inc
cmp
add
inc
divl
hlt
imul
sahf
cld
jl
and
fmul
loop
cmp
cmpsl
orl
out
ss
xchg
xor
pop
shl
mov
imul
mov
add
enter
popa
ljmp
mov
lahf
lret
imulb
dec
mov
xor
pop
fdivrl
int
lret
cmp
sarl
dec
data16
out
repnz
cmp
sbb
pop
stos
std
sub
cmp
xor
movsb
incb
sub
dec
aad
dec
or
sub
ficomps
outsb
mov
fcomps
cs
negl
pop
out
inc
jae
or
int3
out
jg
inc
xor
sub
pop
pop
inc
insl
push
xor
xor
dec
and
sub
ja
inc
nop
testb
sbb
xor
std
imul
push
push
cmpsb
nop
rol
clc
enter
adcl
ret
loopne
xor
shll
jbe
nop
movsl
cmp
cmpsl
adc
out
mov
inc
lret
scas
pop
cmp
movsl
icebp
push
inc
push
ja
scas
dec
jmp
mov
jo
push
fwait
add
call
mov
aas
pop
pop
arpl
inc
mov
cmpsb
mov
adc
ds
mov
add
jmp
cmpsb
sbb
lahf
jo
stc
mov
sbb
dec
lahf
jae
leave
ret
mov
cli
dec
jo
mov
outsb
mov
adc
xchg
mov
call
pop
lcall
xor
xor
popa
adc
in
imul
and
sub
xlat
jno
rcr
mov
ja
jbe,pn
jne
dec
mov
mov
ret
das
mov
and
xlat
rcrl
push
test
and
test
in
jp
or
inc
jae
ljmp
popf
fisubl
pop
and
inc
mov
xchg
pop
mov
jbe
pop
pop
sub
cs
loope
cli
call
add
into
sbb
gs
negl
cld
cmp
jmp
fdivl
jmp
or
cmpsl
int
aad
sub
cli
cmp
adc
or
clc
pop
and
insb
mov
and
or
or
stc
lods
flds
cmpsl
xchg
stos
divb
jl
cld
pushf
call
stc
mov
pop
arpl
rcl
ss
xor
sbb
enter
mov
imul
data16
fcmovbe
xorb
das
mov
dec
out
scas
nop
mov
jbe
dec
gs
or
mov
lahf
jecxz
inc
nop
sarb
xchg
push
mov
push
int3
pushf
cmp
mov
lret
mov
js
fistl
mov
popa
popf
push
push
mov
dec
fs
fcompl
pop
pop
mov
lea
push
hlt
mov
jnp
les
lcall
jmp
lahf
mov
mov
jae
test
test
mov
enter
das
lods
int
ds
jbe
mov
dec
imul
mov
and
jg
test
rolb
pop
int
xchg
jo
lret
cmp
sbb
dec
aaa
add
sub
divl
add
imul
mov
gs
jae
cmpsl
sbb
ss
inc
jo
mov
sub
daa
jle
mov
rorl
sub
mov
mov
jnp
out
push
lcall
cmp
std
inc
cmp
cmp
cmpsl
cltd
push
pop
sub
cmp
cmp
dec
in
sbb
aam
int
xor
mov
xchg
lods
mov
push
mov
mov
dec
out
xchg
dec
les
pop
cwtl
jge
int
cmp
test
pusha
push
cmp
and
sbb
iret
push
mov
jmp
sbb
mov
mov
lret
hlt
outsb
dec
adc
cmp
dec
pop
or
repz
jmp
lret
pop
rolb
stos
add
test
cmpsl
stc
mov
aam
test
es
add
mov
call
int3
push
mov
fisttpl
out
push
inc
clc
inc
orb
lret
ljmp
sub
test
adc
scas
out
add
xlat
inc
mov
cmc
xchg
out
and
jl
lahf
aaa
les
adcb
dec
xchg
lcall
cwtl
cmpsb
das
sbb
mov
jmp
aam
testl
sbb
dec
mov
test
mov
sub
jl
into
xchg
push
pusha
add
or
dec
xlat
or
mov
inc
and
insl
and
pop
and
insb
push
cltd
mov
xchg
aas
pop
push
inc
test
rcrb
xchg
cld
nop
rcll
out
fdiv
lods
cmpsl
jb
stos
jo
push
xor
sarl
mov
sti
cmp
adcl
lock
pop
imul
shrl
inc
and
jno
sar
push
sub
mov
pop
popa
adc
xchg
insl
push
or
push
scas
inc
and
mov
call
jl
into
xchg
cmp
mov
js
scas
sub
xchg
push
shr
sub
vcvtdq2ps
add
mov
movsl
pop
cmp
ret
ficomps
sarl
adc
mov
dec
stc
push
and
lret
notl
adc
cmpb
mov
xorl
or
mov
cld
in
cwtl
mov
and
mov
adc
aas
lcall
or
test
mov
dec
xor
ds
add
popa
cmp
and
cmpsl
pusha
in
loop
dec
ss
movsl
inc
pop
cwtl
mov
pop
jecxz
push
push
xchg
negb
sub
push
movsb
xlat
jle
scas
lahf
or
adc
aaa
mov
or
in
xchg
xor
stc
movsl
jns
dec
inc
mov
fwait
push
leave
lea
dec
pop
in
mov
pop
subl
adc
ja
push
pusha
cmp
shrl
push
mov
adc
daa
pop
outsl
in
push
mov
faddl
cmc
inc
cmpsb
mov
es
popa
xchg
sub
dec
repz
leave
push
lret
xor
pop
scas
das
scas
in
inc
dec
ret
insb
lcall
inc
in
insl
mov
mov
xor
mov
xor
xor
leave
inc
pop
sarb
int
sbbb
das
sahf
data16
mov
and
fstpl
or
xor
das
testl
jg
add
jae
gs
xchg
es
jae
and
jecxz
xor
xchg
ret
mov
rcrb
dec
xor
pushf
mov
add
mov
lea
int3
xor
dec
lahf
idiv
jg
xor
mov
negl
pushf
fsub
mov
ja
pop
pop
dec
sub
fnstenv
lahf
push
shlb
mov
cmp
in
sub
hlt
jbe
int3
mov
lods
push
mov
pop
out
dec
call
and
ds
cwtl
jnp
repnz
rcll
lea
femms
cwtl
mov
insl
and
mov
aaa
scas
pushf
insl
push
sub
cmpsb
sbb
adc
pusha
sti
jno
test
je
aam
repz
mulps
xchg
cmp
adc
lret
scas
dec
jge
and
out
out
mov
xchg
cmp
add
xchg
xor
stos
jb
repz
aam
mov
out
mov
dec
jmp
xchg
xlat
adc
mov
xchg
pop
fsubl
out
and
cmp
sahf
pop
mov
dec
dec
or
les
cmpsb
loop
mov
aas
and
imul
push
cli
push
mov
inc
cmp
xor
xor
out
cmc
or
lock
imul
pop
negb
addb
addr16
push
loopne
lods
mov
outsb
out
pop
and
repz
repz
imul
clc
xchg
push
jmp
sbb
xchg
pushf
adc
popa
sub
add
outsb
xchg
mov
out
out
mov
inc
xchg
sub
xlat
xor
and
dec
xor
mov
jno
mov
arpl
mov
rcll
ret
fidivrl
push
and
mov
dec
pop
nop
int
sbb
adc
and
push
jle
into
test
mov
mov
dec
sub
arpl
dec
jb
sub
out
loope
rcrl
nop
into
int3
xchg
shr
mov
bound
fcompl
mov
sub
cmpl
mov
pusha
negl
loop
int3
push
xchg
ret
adc
mov
fwait
jns
adc
imul
es
ds
push
pop
imul
icebp
xchg
in
andb
cmp
add
and
pop
ja
inc
mov
outsb
inc
mov
test
inc
cmp
outsl
dec
push
hlt
aas
add
and
pop
popa
xchg
mov
out
je
jl
shr
mov
test
std
dec
jbe
mov
pop
lahf
mov
stos
repz
bnd
and
lahf
clc
cmc
sbb
mov
push
jne
pop
mov
sub
push
test
insb
push
xchg
fwait
jnp
fs
add
es
dec
ss
outsb
dec
cmc
loop
movsb
push
loope
pushf
sbb
and
iret
xchg
je
mov
cld
sub
adc
insl
stos
pop
bound
cmp
or
int
addr16
and
xor
fildll
pop
gs
xchg
mov
jge
stos
xchg
scas
and
daa
cli
cmp
sub
mov
jge
pop
xlat
push
xor
loop
outsb
xor
sub
xchg
sub
dec
pop
ret
mov
movsb
jp
mov
cmpsb
out
push
jp
loop
mov
in
aas
dec
lods
cmp
jecxz
or
data16
rclb
or
xchg
sub
xchg
mov
pop
mov
aad
jecxz
popa
or
rcr
push
pop
push
pop
mov
loope
sarb
dec
cmc
int
xor
lcall
mov
sub
aad
lahf
adc
sbb
inc
lret
cmp
test
outsl
sub
fcoml
xchg
dec
and
lock
add
pusha
or
sarl
imul
mov
or
xchg
insb
jl
dec
mov
test
ja
mov
fcoml
mov
fildll
mov
mov
jbe
pop
test
mov
test
into
pop
hlt
into
mov
sbb
push
mov
mov
sbb
xlat
fnstenv
dec
rcrl
lock
xchg
or
out
adcb
aaa
stc
cmpsl
xchg
or
mov
cmp
jno
mov
xchg
lock
jg
addr16
repnz
mov
scas
mov
push
int
push
daa
cmp
icebp
mov
out
xchg
jg
dec
aas
out
sub
sbb
popf
jg
xchg
ss
inc
sbb
jp
xor
movsl
mov
lods
lahf
test
mov
pop
adc
lret
rcr
mov
enter
nop
jo
in
orb
cmp
fstpl
out
lds
pop
dec
mov
push
int3
arpl
arpl
lret
cmp
push
mov
mov
imul
pop
jne
push
orl
cmp
jl
stos
xchg
xor
or
in
aaa
fimull
fimuls
or
lahf
mov
dec
xor
imul
outsb
enter
xchg
aad
inc
pop
adc
xor
add
test
test
pop
and
mov
cmp
std
repnz
dec
popl
mov
outsb
mov
xchg
push
inc
addr16
mov
jmp
xchg
je
xor
push
adc
inc
or
lret
sti
test
xchg
loopne
sub
aad
stc
xor
test
jbe
jmp
inc
mov
out
fsubrs
movsl
loop
lret
outsb
push
inc
subb
iret
cmpl
pusha
jl
std
push
jl
or
push
dec
or
testl
aad
aad
dec
mov
repnz
mov
mov
pop
in
add
cmp
test
push
xor
adc
cltd
fwait
sbb
loope
enter
aad
push
mov
xchg
push
test
sub
mov
sbb
aaa
fnstcw
cld
dec
mov
leave
sub
push
xor
lods
pusha
bound
dec
insl
rcrl
sahf
das
push
insb
cmp
mov
adc
pop
sbb
js
push
dec
ret
shl
add
fidivl
out
clc
pop
rol
cmpsl
outsl
xchg
mov
jle
mov
jne
into
imul
xchg
repz
mov
sub
fsubl
loop
jecxz
gs
push
dec
cmp
sub
imul
scas
addr16
loopne
cli
push
and
outsl
pop
outsb
sti
adc
insl
lods
test
sbb
or
pop
cmp
push
aad
cs
xchg
rcrb
push
stos
jl
cmp
int3
mov
add
sub
fmuls
add
add
lahf
xor
outsl
js
cmc
lret
in
subl
arpl
pop
lock
add
in
in
addr16
push
aaa
repz
imul
mov
inc
adc
add
mov
xor
xchg
mov
sbbl
and
sbb
jg
cmp
sbb
subl
sbb
gs
sub
sub
mov
mov
cwtl
sub
mov
push
repz
pop
rcll
pop
outsb
adc
inc
dec
out
call
mov
xor
test
mov
xor
sub
or
insb
and
sbb
cmp
mov
test
mov
out
xchg
fwait
cmp
call
test
and
xor
cmpb
jnp
test
out
and
or
loopne
es
lds
test
fistpll
push
sub
push
pop
pop
push
into
sub
lds
pop
aad
or
pop
shll
push
stos
mov
or
mov
data16
cmp
mov
xchg
pop
lret
fs
jno
mov
popf
inc
jmp
pop
mov
jae
xor
dec
mov
mov
pusha
sub
push
filds
mov
ret
scas
cltd
mov
in
jl
push
cmp
sahf
push
mov
jnp
mov
test
jae
pusha
cmp
jb
pop
ds
movsb
fmul
js
mov
bound
cmpsl
mov
and
stos
lds
out
ds
inc
js
das
jne
sarb
das
cmp
sti
shl
fmul
dec
and
jno
mov
mov
push
pushf
jns
dec
dec
sbb
sahf
jns
cmc
cmpsl
xor
pop
fidivs
ss
or
hlt
jne
mov
enter
ds
pop
or
push
out
nop
dec
adc
jbe
addr16
dec
mov
fnstcw
sbbl
xor
cli
jnp
cmp
xchg
stos
mov
arpl
sub
fisttpll
jne
pop
xor
lahf
sub
out
mov
test
fstps
movsl
sahf
push
and
int3
jns
shll
in
xor
idivl
fidivs
pop
cs
sbb
push
ljmp
inc
sub
push
sub
xchg
xor
outsl
cmp
push
jns
cmpsl
lahf
inc
dec
lret
mov
cli
or
jb
push
lods
cmc
adc
sub
fbld
jl
push
mov
push
mov
repz
mov
sub
push
aas
aas
or
xor
add
push
pop
or
sbbb
jmp
pop
jb
push
popf
jle
xor
gs
xor
lds
cmpsl
jo
sbb
sar
bound
sarb
cmp
inc
push
dec
bnd
pusha
std
out
sub
movsb
popa
roll
outsl
fwait
xchg
mov
cmp
cmp
push
test
sbb
test
sub
je
ljmp
jmp
cmc
lea
sarl
sub
sbb
jo
decb
xchg
xor
sahf
adc
outsl
int
data16
insl
call
mov
mov
aaa
ss
add
sbb
sbb
push
pushf
rclb
mov
cmpsl
fisubl
or
sub
mov
xchg
inc
jae
ja
idiv
dec
fwait
mov
lahf
loop
jle
dec
push
adcl
sub
xlat
sub
mov
mov
pusha
xor
lcall
mov
xchg
popf
xor
scas
js
xchg
pop
sbb
adc
ljmp
pop
aam
js
clc
fs
push
push
das
lret
lahf
xor
push
pop
mov
jmp
fistpl
and
cltd
out
hlt
mov
pop
outsb
out
add
daa
repz
push
das
mov
test
andb
cmc
pop
mov
lahf
and
call
stos
fldenv
pop
cmpsb
jecxz
leave
dec
cli
lods
repnz
push
repz
xor
ret
mov
leave
push
int
popa
inc
lods
int3
add
add
mov
lea
xchg
daa
aas
fcoms
les
aaa
and
jae
pop
out
sub
rcrl
aam
mov
aam
lahf
js
jnp
pop
pusha
add
cs
repz
mov
scas
scas
mov
pop
mov
dec
orb
fisubs
add
mov
xchg
push
mov
mov
stc
std
xchg
popf
insl
aaa
enter
cltd
iret
or
sub
fmuls
adc
inc
mov
sub
add
faddl
jle
test
sub
or
ror
imul
arpl
fimull
mov
push
mov
and
inc
inc
addb
dec
ret
adc
push
scas
in
shl
xchg
enter
mov
stos
orl
sub
sbb
mov
sti
leave
cmpsl
xlat
addr16
mov
daa
or
mov
fbld
push
xchg
xor
inc
adc
pop
add
adc
int
pushf
add
mov
seta
push
idivb
xchg
cs
inc
sbb
test
and
xor
insb
ret
fs
imul
sahf
leave
mov
imul
or
mov
loope
xorl
xor
out
push
xchg
mov
cmpb
push
out
pusha
int
js
dec
jecxz
inc
push
mov
pop
imul
xor
repnz
cmp
cld
jg
cmpsl
and
cmp
inc
dec
pop
out
lds
dec
adc
mov
xchg
popf
push
sti
lds
sbb
dec
dec
jo
int
pop
imul
pop
scas
or
mov
jb
roll
mov
sbb
pushw
fdivs
xchg
lret
xchg
xchg
push
sub
mov
inc
in
jg
dec
mov
stos
mov
mov
mov
nop
imul
arpl
jo
adc
outsl
cmc
les
fnsave
ds
mov
addr16
ds
or
ja
fbstp
call
push
dec
loope
jne
sub
clc
push
imul
lret
rcl
ljmp
pop
fs
or
jle
mov
enter
pop
aad
cwtl
fwait
rcl
adc
mov
sub
or
jl
sub
jb
dec
mov
cmpsb
scas
lods
rolb
sbbb
jne
inc
repz
push
mov
inc
sbb
inc
jg
pop
pop
cmc
xlat
and
test
mov
and
push
in
pop
adc
inc
daa
bound
and
paddsw
push
push
shl
mov
jmp
out
xchg
dec
sbb
les
mov
inc
adc
stos
in
mov
pop
sahf
int3
fistl
and
add
lods
mov
xor
mov
sbb
divl
rcr
or
cmp
cs
out
leave
das
xor
cld
add
xchg
iret
xchg
lret
data16
xchg
push
in
and
fldl2t
aam
or
dec
and
cmc
jl
sub
fidivl
cmp
cmp
lea
iret
ja
mov
adc
jge
es
push
xor
call
test
mov
mov
aaa
pop
insl
movsb
mov
into
adc
cmp
dec
mov
add
test
mov
lcall
pop
jle
dec
lea
hlt
fildll
pushf
gs
lahf
push
test
and
loopne
adc
in
out
dec
sub
xor
shl
mov
mov
test
imul
sub
lock
lock
pop
push
lret
push
mov
mov
xor
shrl
jns
mov
mov
jne
ret
in
mov
mov
jl
pusha
mov
testb
inc
mov
mov
rcll
push
xchg
shr
in
sti
in
sbb
sbb
mov
cmp
mov
and
pushf
test
and
jo
cmp
shlb
lcall
and
cmp
sbb
and
std
lock
xor
xor
loope
sub
iret
dec
push
mov
rcrb
enter
and
rcrl
outsl
fstpl
xchg
mov
scas
sub
or
jmp
fwait
gs
ficomps
jne
orb
mov
and
add
add
clc
xchg
mov
repnz
repnz
inc
int3
dec
repnz
push
inc
mov
xchg
int
fsubr
rorb
in
pop
or
arpl
outsw
sbbb
jbe
sbbb
fcompl
dec
xchg
inc
cltd
in
add
imul
aad
xchg
popf
rorb
mov
test
pop
push
call
popf
jl
bound
out
xchg
clc
mov
mov
sub
cmp
mov
out
add
xchg
mov
add
enter
fisubl
orl
mov
repz
lods
xor
in
push
mov
ret
out
inc
adc
shll
fisttpll
dec
bound
sub
or
enter
cmp
pop
xlat
mov
rolb
ret
mov
adc
stos
mov
adc
iret
add
push
xor
lea
xchg
iret
pop
xor
mov
add
or
mov
fwait
sbbb
xchg
mov
in
jne
mov
insb
mov
lock
cwtl
andl
push
adc
int
jle
arpl
scas
mov
adc
cmpsl
sub
jnp
push
or
lret
dec
mov
mov
mov
pop
pop
sub
out
movb
sub
lods
and
mov
mov
mov
cs
sahf
lds
in
idivb
rcl
mov
xchg
sbb
push
lds
sub
cmc
pop
cld
lret
test
dec
into
into
bound
pop
out
mov
movsb
hlt
movsl
hlt
mov
repnz
jmp
jne
sbb
xchg
xchg
shrl
int
in
les
or
mov
and
push
out
and
jmp
cli
popa
addr16
fisubs
push
cwtl
xchg
jo
and
or
subl
mov
dec
jmp
gs
stos
outsb
insl
pop
daa
lds
loopne
movsl
fwait
pushf
xor
xchg
cltd
aam
in
pop
pop
push
ja
stc
lods
pop
pop
or
mov
cmp
pop
dec
dec
jb
fisubs
jae
out
das
aam
mov
pop
adc
sahf
lods
jne
lods
sbb
pop
lods
mov
mov
push
mov
mov
pinsrw
movsl
cs
dec
jo
pop
push
xor
pop
dec
int
inc
push
dec
jns
vpcmpeqd
int
das
addr16
int
pop
or
push
xor
mov
adc
inc
stc
mov
push
sbb
mov
or
cmpsb
fistl
xchg
inc
das
mov
repnz
jmp
xchg
mov
sarb
js
mov
rorl
jb
in
data16
mov
cmp
aaa
clc
aaa
sarb
and
fildll
cmp
jnp
xor
mov
stos
xchg
jp
push
lret
dec
xor
inc
dec
ljmp
sti
jl
sbb
fwait
enter
lods
scas
sub
loopne
add
jns
dec
shlb
sahf
and
jns
sub
pusha
and
stos
mov
aam
js
insl
sub
pop
mov
repz
fsts
adc
fistpll
adc
push
mov
cltd
out
or
push
jne
mov
in
roll
pop
pusha
xor
enter
bswap
inc
test
jmp
xchg
jp
xchg
lahf
scas
scas
and
push
ja
cmp
push
jne
lahf
cmpsl
lods
enter
call
dec
idivl
in
outsl
dec
cwtl
push
jp
outsb
mov
jae
loope
mov
lea
iret
hlt
sbb
imul
jl
xor
mov
push
push
cwtl
fsubrl
fdivrl
testb
xchg
gs
test
jge
or
lea
jmp
sbb
push
addb
add
lea
call
adc
mov
loopne
mov
adc
outsl
ficoml
not
repnz
movsl
ss
faddl
add
in
jno
dec
out
into
and
test
mov
pop
dec
rcrl
mov
dec
int
pop
xchg
ja
shr
pop
faddl
and
enter
insb
aaa
xchg
pop
bnd
mov
lods
pusha
cmp
and
sub
ret
sbb
push
out
xor
in
inc
sub
cmp
pop
sub
lret
dec
addr16
sub
or
nop
mov
arpl
push
add
mov
cmp
pop
sbb
mov
push
push
dec
mov
cmp
mov
out
ja
jbe
scas
outsb
lea
icebp
jp
mov
cmpsb
loopne
pop
jge
pop
jne
xor
lock
xchg
jno
fildll
fildll
inc
xorl
xor
aas
mov
fisubs
push
jmp
out
push
js
sub
pop
bound
inc
cli
lret
xor
test
and
leave
push
and
and
and
mov
out
and
jb
inc
movsl
negw
and
dec
adc
adc
gs
xor
dec
loop
mov
mov
popl
aaa
dec
in
pop
push
jg,pn
scas
loopne
imul
inc
pop
int
loope
std
outsb
sti
rorb
dec
xchg
add
addl
jnp
into
xchg
rcr
orl
lahf
or
inc
lods
xchg
imul
jmp
dec
push
nop
imul
cmp
cwtl
outsb
fst
jmp
mov
push
push
xchg
cmpsb
pop
in
ds
fistpl
jg
out
mov
mov
cmp
decb
dec
jle
mov
sbb
dec
out
or
aam
cmc
dec
sbb
pop
outsl
test
popa
xchg
push
inc
std
aam
pop
mov
icebp
cmp
ljmp
sbb
repnz
sbb
leave
jmp
xchg
push
aam
lods
sahf
mov
out
mov
xchg
cmp
pop
jmp
std
add
pushf
enter
lock
xchg
jge
xchg
cmp
data16
mov
inc
cmpsb
pop
lock
sub
and
sub
repnz
xor
sub
fildl
in
jae
jl
push
ja
cmp
or
enter
mov
mov
lahf
dec
inc
loope
aaa
orb
xor
cmpsb
cwtl
mov
int3
aad
loopne
add
mov
push
rcrb
sti
pop
push
push
hlt
xchg
push
pusha
jmp
xchg
inc
lcall
jo
pushf
push
sub
imul
flds
push
mov
or
xor
lret
dec
jmp
mov
pop
cli
push
xchg
sbb
mulb
addr16
jge
push
popf
cmpl
repz
lret
es
inc
repnz
andb
mov
mov
leave
adc
pop
mov
push
test
pop
pop
ja
idivb
fsubs
fsubs
mov
outsl
testb
into
or
mov
jne
loopne
mov
push
lret
out
loopne
jg
mov
mov
aaa
xor
xor
sub
or
shll
cmc
adc
popf
sarl
add
leave
mov
mov
lret
scas
ret
dec
sbb
jg
pushf
jo
out
data16
sub
jmp
test
xor
xchg
push
loop
push
movsb
pop
fwait
xchg
jns
test
repz
aaa
dec
sahf
shrl
sbb
mov
lahf
dec
in
ljmp
mov
jecxz
xchg
jne
add
fwait
dec
xchg
popf
in
mov
push
pushf
or
adc
mov
lock
sar
push
inc
add
out
mov
in
jl
fs
jns
jg
jl
inc
nop
test
mov
scas
cmp
aaa
pop
movsl
adc
mov
ja
adc
daa
dec
out
in
jne
cmpsb
cwtl
mov
sub
jno
jne
lret
adcl
mov
inc
mov
cmpb
inc
call
movsl
sub
fildl
mov
fildl
jbe
lret
ja
pop
aaa
dec
push
xchg
faddl
cmp
sbb
pop
pop
aam
sub
bound
dec
dec
mov
sbb
stc
test
mov
xor
xlat
fsubrl
outsl
cltd
xchg
repz
loope
sar
inc
gs
int
sbb
out
fiaddl
icebp
xor
pop
pushf
loop
jbe
sbb
popa
jecxz
mov
pop
sub
lret
mov
mov
pop
nop
pop
push
jecxz
or
and
cmp
daa
xchg
jle
sub
add
sub
add
mov
sub
arpl
jg
gs
fdivrp
jge
cmp
and
push
imul
add
dec
mov
adc
xchg
pop
sbb
cltd
mov
enter
outsb
jecxz
cmp
or
add
xor
pop
jmp
sub
mov
xor
fmull
push
dec
in
lret
mov
movsl
or
div
adc
jb
or
hlt
inc
xchg
cmpsb
inc
loop
sub
push
fistpl
and
pop
cwtl
gs
andb
movsb
data16
pop
lock
stos
jb
dec
cmp
add
jg
xchg
adc
dec
out
mov
addr16
loopne
cmp
cs
movsb
out
pusha
jbe
jbe
jb
cmp
xor
cmp
cwtl
insl
jge
or
ss
lret
adc
rcll
sbbb
iret
sarl
xchg
cmpl
in
sub
pop
cli
in
cld
movsl
dec
aam
sbb
sti
xor
movsb
dec
xor
cmpsb
ficomps
cmpsl
pop
push
enter
mov
push
sub
mov
sub
pop
addb
pop
xor
arpl
mov
jo
sub
and
ret
mov
mov
ret
sahf
pop
fcomip
sub
shr
inc
add
cmc
cmpsl
add
dec
movsl
stos
repz
fsts
jns
inc
adc
add
insb
popf
sub
push
dec
popf
inc
or
push
jne
pop
sbbb
xchg
jge
movl
stc
repz
loop
sbb
dec
and
push
sub
imul
pop
pop
pop
inc
dec
in
daa
mov
in
sbb
test
idivl
add
pop
movb
pop
mov
popa
stos
mov
movsl
jae
sbb
jb
imul
mov
out
js
orl
dec
jae
imull
pop
or
xchg
adc
and
sbb
out
xchg
cli
stos
add
das
push
pop
cmp
jae
sbb
pop
hlt
in
sub
roll
cmc
pusha
nop
sti
or
xor
adc
cmp
fsubr
mov
mov
dec
sub
mov
and
jecxz
clc
push
bound
xchg
pusha
adc
jo
test
ret
stos
les
jnp
imul
or
call
cld
test
rclb
cmp
sbb
inc
mov
jge
sub
int
testl
mov
jl
test
test
adc
add
arpl
and
mov
das
jnp
bound
xlat
cmpl
sti
push
test
sbb
dec
push
daa
shrd
sbb
push
sbb
xlat
inc
pop
jp
or
arpl
pop
or
pop
xchg
lret
popf
rol
xor
push
add
rcll
cmp
add
rcrl
push
test
xchg
cld
jne
sarb
jno
pop
sub
mov
jg
pop
ljmp
xor
cmpsb
cli
push
mov
out
adc
jge
cmp
mov
push
lods
aas
lret
dec
mov
push
push
imul
adc
dec
idiv
push
test
add
sbbl
mov
and
imul
add
jno
sbbl
xor
je
ja
mov
or
stos
fmull
loope
lret
jg
cwtl
repnz
mov
aad
adc
push
push
adc
bound
cmc
aaa
add
jp
inc
rolb
int
lea
pushf
add
sarb
out
imulb
sbb
sar
jecxz
insb
setb
and
jnp
sbb
insb
jl
or
pop
pushf
and
arpl
stc
dec
and
into
dec
movsb
in
iret
sbb
inc
xchg
leave
dec
ja
jl
sbb
rcrb
gs
fdivr
call
aam
data16
mov
cmc
enter
shrl
adc
xchg
lret
jge
fisttps
mov
cmc
cmp
adc
inc
add
fdivrs
mov
dec
jg
lahf
mov
sarb
xchg
out
mov
fstpt
or
insl
jns
xlat
jmp
xchg
add
testb
pop
push
jp
mov
ficoml
adc
pop
je
sbb
loopnew
aam
js
stc
sub
push
ljmp
mov
fimull
pop
xchg
cmp
rorb
mov
out
ja
xchg
sub
xchg
popa
xor
imul
in
add
jns
jae
pop
iret
adc
ss
xchg
and
out
call
loope
frstpm(287
aaa
jp
sti
jo
jb
jmp
lret
pushf
xchg
fucomi
inc
xor
add
jne
adc
push
fs
negb
mov
sbb
pop
cmp
inc
or
mov
mov
aaa
mov
pushf
inc
testl
in
mov
stos
mov
out
call
push
inc
lret
das
xor
xchg
xchg
sbb
loopne
mov
loopne
mov
dec
xchg
cmp
mov
repz
jnp
jecxz
push
jo
idivl
cld
ret
call
lods
cs
push
push
test
ja
repz
stc
mov
dec
xor
jbe
lods
and
mov
sahf
ss
fcom
rclb
hlt
xor
pop
sahf
cmp
sarb
adc
int
int
mov
jl
arpl
arpl
int
imul
movsl
imul
lcall
or
daa
mov
add
fsubrs
dec
hlt
adc
mov
insb
incb
pushl
xlat
stos
jecxz
or
or
jne
add
gs
mov
loopne
push
popf
inc
xor
dec
and
iret
clc
imul
cmc
sbbb
lret
push
arpl
loop
xlat
mov
mov
loope
lahf
xchg
mov
xchg
negl
out
aas
mov
sbb
inc
sbb
mov
rorb
rclb
out
xor
and
sbbl
sub
dec
or
ss
rcr
or
test
ja
call
xchg
aas
gs
push
clc
test
xor
and
ja
fwait
jbe
add
popa
pop
fstps
stc
in
cmp
lret
pop
cltd
lock
fs
inc
insb
inc
mov
popa
and
dec
mov
mov
fldl
dec
fmull
xor
ficoml
stos
mov
repz
dec
push
bound
add
jl
add
popf
xchg
mov
idivl
pop
cmp
cmp
ret
xor
or
mov
mov
inc
shll
popa
or
mov
adc
incb
ret
add
mov
loop
mov
add
mov
loopne
dec
push
push
dec
push
mov
adc
jbe
popf
ja
clc
sarl
daa
xchg
mov
rclb
arpl
adc
mov
mov
adcl
mov
cmp
mov
or
lret
call
pop
push
sub
or
cpuid
ja
jb
fcomip
pushf
pop
mov
push
inc
sbb
pop
mov
cmpb
ja
xlat
cmp
rol
fdivrp
sub
fnstenv
adc
xchg
sbb
es
jge
pop
or
jno
test
pop
adc
stc
mov
hlt
hlt
rclb
pop
fdivrl
scas
add
mov
xchg
std
sub
sub
mov
push
leave
aam
in
and
mov
sbb
adc
xchg
loope
lahf
lds
clc
push
push
mov
loop
cmpsl
inc
out
cmp
or
pop
xor
mov
pop
mov
sbb
rep
jnp
fstpl
es
addr16
in
pop
add
xor
mov
xchg
sbb
test
or
dec
hlt
std
sub
add
fdivrs
rorl
std
sahf
sub
outsl
sub
inc
inc
jae
push
xor
mov
fiaddl
lock
fnsave
mov
sbb
movsb
arpl
int3
aaa
dec
and
inc
out
out
sbb
icebp
clc
mov
sbb
xor
push
jp
pop
mov
sub
je
xchg
rcrl
aad
cmp
mov
cmpsb
clc
ret
ds
js
aaa
push
mov
cmp
repz
jno
pop
push
movsb
mov
push
fiadds
cmp
mov
leave
cmp
and
sbb
adc
inc
ljmp
ret
fisubl
push
mov
and
jecxz
loop
mov
xor
push
dec
cmp
push
xchg
push
jl
cmp
jmp
cmpsb
push
xchg
sub
push
add
shl
pop
cmp
dec
mov
jle
out
pop
lock
mov
imul
loope
test
stos
fnsave
popl
mov
jo
repz
inc
popa
sarl
dec
mov
lods
pop
jns
mov
insb
mov
shl
mov
mov
xchg
enter
jp
xchg
sbb
pop
mov
lods
xchg
sub
aaa
mov
daa
aas
loope
pusha
rol
out
jbe
dec
and
xor
pop
data16
xchg
xor
iret
out
pop
sub
pop
xlat
add
out
lea
sub
sub
fstl
stc
mov
jo
add
test
mov
iret
xchg
insb
aaa
addr16
and
cmp
aaa
dec
inc
push
les
mov
in
je
mov
movsb
in
lds
or
sbb
mov
push
mov
add
jmp
xor
xor
mov
jmp
and
cmp
xchg
repz
in
sub
pop
sub
arpl
mov
sub
adc
rcrl
pop
ljmp
pop
daa
jp
mov
js
shll
lock
inc
mov
test
jbe
sahf
sahf
lret
fwait
or
imul
movl
ss
mov
cwtl
insb
sbb
sbb
fistps
pop
iret
lea
adc
inc
iret
pop
mov
jne
pushf
pop
mov
loop
sbb
jnp
sbb
icebp
popa
dec
shll
sbb
in
mov
addr16
add
aas
cmc
cmc
jmp
sbb
andl
shll
cmp
adc
dec
pop
insl
push
pand
adc
sbb
cmp
lock
jle
inc
ret
adcb
mov
inc
lds
dec
mov
adc
and
push
adc
adc
jecxz
gs
dec
push
cltd
xlat
inc
or
sub
rol
add
iret
and
pop
mov
mov
add
and
xchg
addl
arpl
mov
push
negl
mov
cmp
fistl
popf
in
xchg
into
and
jmp
call
cmp
xchg
stos
faddl
ds
roll
pop
in
or
movsb
loopne
dec
push
sbb
pushf
or
les
sarl
or
ret
mov
and
daa
or
pop
adc
in
cmpsb
stos
mov
mov
push
gs
aas
dec
mov
mov
ret
inc
ficompl
push
fsubs
mov
sbb
xchg
cmp
xor
fistpll
pop
mov
in
dec
stos
cli
and
andnps
and
adc
data16
sahf
imul
in
fbld
mov
lahf
gs
add
jg
repz
mov
sbb
mov
pushf
cmpsl
movsb
sarl
jae
sbb
andl
es
add
xchg
and
sarl
inc
pushf
cmpsl
sbb
fisttpll
or
subl
stos
jne
xor
std
negl
arpl
les
xchg
fdivl
into
imul
or
fs
pop
pop
cmp
fiaddl
sbb
dec
sbb
loope
cwtl
hlt
inc
cwtl
or
dec
push
std
ljmp
add
aaa
out
pop
fldenv
stos
pop
movsb
sarb
movsl
xchg
jae
cli
adc
sarl
sahf
fs
popa
push
mov
jae
notl
push
stc
insb
dec
out
lahf
leave
test
xor
cmpsl
ror
test
lods
cmp
pop
sub
dec
movsb
fs
pop
int
jmp
xor
jne
jmp
dec
jnp
inc
cmp
jl
iret
repnz
clc
call
dec
bound
pop
sbb
into
fcmovu
xor
mov
fs
aad
and
popa
push
sbb
xchg
mov
bound
lret
sub
add
imul
adc
es
push
and
xchg
inc
mov
xchg
add
mov
push
sbb
jge
adcb
or
jnp
push
aad
inc
mov
mov
mov
pop
scas
lea
stos
mov
xor
shll
and
out
cmp
push
mov
xchg
lds
aaa
jne
lahf
pop
fldt
lods
push
dec
scas
and
out
imul
xor
inc
popa
xchg
push
sub
cmp
dec
shl
lret
sub
in
xchg
sbb
out
cs
ds
lahf
xor
xchg
data16
arpl
movl
xchg
outsl
loopne
call
fs
push
sub
lea
or
push
cs
and
addr16
add
int
fistl
mov
and
cmp
mov
popf
lret
xor
xchg
jnp
call
jbe
das
lcall
sub
shrb
cld
out
daa
loopne
cmp
mov
cli
mov
mov
sub
lods
cmc
inc
in
cli
add
pop
add
sub
sbb
fsubl
dec
xor
jae
mov
inc
das
mov
jo
lea
fsubl
xchg
loopne
ret
jns
out
lahf
cmp
leave
test
vfnmsubps
lds
popf
dec
dec
ss
xchg
push
sbb
cmp
clc
fwait
adc
mov
jmp
xchg
popa
xchg
push
inc
xlat
cmp
movsl
jae
aad
dec
clc
and
mov
inc
fdivl
xchg
cs
mov
xor
icebp
dec
jmp
ret
jns
out
pop
and
or
enter
lock
das
pushl
dec
rcrl
nop
cmp
les
sti
je
or
aas
push
bound
scas
je
pop
loope
lcall
imul
inc
xor
push
inc
sbbl
cmpsb
inc
pop
mov
lahf
inc
stos
add
add
aaa
cld
stos
cli
push
out
sbb
cmpsl
fwait
out
adc
repnz
xor
xor
lahf
lret
stc
int
sbb
lret
or
nop
into
ljmp
or
xor
lcall
adc
fisttpl
sub
fs
sarb
add
out
push
add
fldt
and
pop
sub
into
jbe
std
lcall
mov
mov
das
insl
pusha
das
push
jbe
dec
mov
sub
pop
mov
pop
fisubl
mov
in
xchg
imul
mov
mov
cmpsb
incb
addr16
iret
lret
imul
add
shll
or
icebp
stos
sbb
mov
xor
dec
ficoms
mov
jecxz
adc
aad
cmc
jne
xchg
xor
xor
xor
jg
sbb
dec
mov
or
xchg
xor
mov
push
fcompl
cmp
pop
lds
pop
jge
add
sub
sub
ja
jmp
pop
and
fldenv
clc
icebp
sub
pop
cmc
jno
pop
xor
cmp
rcrb
aam
or
movntq
out
jecxz
addb
adc
ret
pop
mov
in
inc
and
lods
mov
scas
lods
imul
and
outsb
xchg
jecxz
andb
jmp
jnp
lret
mov
pop
les
pop
dec
ret
lcall
pop
addl
inc
add
mov
adc
sbb
cmp
pop
lret
mov
aaa
mov
fidivs
sbb
popf
test
arpl
aam
sbb
add
sti
ficoml
imul
fstl
xchg
mov
dec
jb
and
sub
out
mov
stos
xlat
sub
arpl
les
movsb
lret
mov
jle
lret
cmpsl
sub
in
rcrl
hlt
jl
or
mov
mov
push
jp
inc
fsts
lahf
int3
cmp
mov
fs
add
dec
pop
cmp
jge
and
fistpll
cmpsb
xorl
jbe
push
cmp
rcll
lods
push
jb
dec
adcl
int
scas
mov
mov
adc
pusha
jecxz
mov
inc
mov
xchg
xchg
sbb
and
xorb
cwtl
sbb
or
pop
stc
pop
pop
fists
pusha
or
push
and
adc
imul
adc
pop
call
es
ret
mov
into
rolb
xchg
and
jp
xchg
movsl
pushf
lds
sub
lahf
cmp
loopne
mov
shlb
sub
inc
je
pop
arpl
or
pop
xchg
mov
pushf
xchg
fcmovb
fcoms
mov
cwtl
test
xor
into
test
repnz
test
rcr
pop
mov
outsb
shl
repz
hlt
or
sub
cmpsl
cs
data16
hlt
sub
icebp
test
push
sbb
repnz
int
cmc
outsb
sbb
inc
push
push
dec
stos
adc
add
arpl
push
cmp
mov
cmp
push
push
sbb
leave
or
subb
int
mov
outsb
jae
inc
dec
add
call
jno
sbb
shrb
notl
ss
push
cs
dec
cwtl
mov
std
out
leave
ffreep
andb
in
jne
scas
stos
call
ds
test
mov
ds
jge
dec
and
rclb
scas
jmp
sbb
mov
rorl
adc
outsl
add
mov
lea
ja
repnz
mov
sbb
mov
fbstp
pushl
js
in
mov
enter
clc
mov
aaa
mov
insb
out
sbb
out
lock
iret
sbb
ljmp
aam
xor
mov
arpl
js
pop
ret
adc
cmpsl
cmp
mov
divb
jg
push
sbb
push
mov
stos
inc
push
call
xor
call
cmp
dec
aas
xchg
inc
dec
pop
out
lcall
ljmp
push
pusha
movsl
jne
mov
jb
jo
shl
mov
inc
jne
imul
dec
dec
sbb
pop
scas
dec
pop
xchg
hlt
fisttpll
fcmovnu
mov
mov
or
sbb
insl
str
rclb
lock
sbb
lcall
ljmpw
jnp
nop
test
inc
adc
ja
xchg
popf
pop
scas
ret
push
or
mov
ds
xor
js
stos
add
mov
dec
lret
out
dec
enter
cmpsl
leave
mov
lret
dec
jecxz
push
cmp
or
sub
mov
lcall
inc
jns
pop
cmpsl
mov
and
push
inc
push
inc
into
jle
mov
mov
in
adc
rolb
inc
repnz
cmpsb
and
out
cmp
lods
imul
jnp
dec
out
jo
mov
mov
xchg
add
out
xlat
ret
adc
jl
sub
into
int3
adc
orl
pop
movsb
add
mov
mov
cmp
and
icebp
inc
push
mov
pop
and
in
add
lahf
aas
mov
dec
mov
dec
leave
lods
sub
jns
arpl
push
mov
mov
mov
cs
dec
shlb
mov
jle
das
mov
rcll
adc
outsb
out
cmc
test
pop
int3
nop
addl
sub
inc
scas
imul
cmpb
fcmovb
fwait
add
pop
xor
sbb
out
jae
jecxz
fwait
int
inc
cmp
inc
stos
pop
les
scas
daa
xchg
lahf
add
loope
out
lods
shl
jae
inc
lea
or
lods
gs
sbb
leave
cld
cwtl
adc
pop
jno
lock
out
repnz
jp
pop
xchg
pop
aam
dec
incb
inc
xchg
loopne
jae
push
aaa
es
out
jno
inc
pop
fildll
stos
adc
lahf
or
cmp
mov
mov
enter
push
mov
jecxz
mov
push
in
popf
dec
mov
daa
sbb
or
add
cmp
mov
punpckhwd
in
jg
leave
dec
fstpl
add
jb
fimull
clc
jmp
mov
inc
fmuls
inc
mov
les
mov
ror
jns
mov
sub
sarb
mov
and
jb
loopne
add
push
in
fsts
mov
mov
out
cmp
mov
jmp
mov
orl
incl
sub
js
inc
inc
imul
or
sahf
shlb
adc
sbb
mov
gs
adc
nop
in
pop
ds
cmp
aad
clc
xchg
cwtl
xor
lcall
sub
scas
push
and
addr16
stos
mov
rolb
fcomip
std
xor
fadds
aad
and
mov
mov
add
push
lahf
jbe
testb
dec
daa
or
and
mov
push
cmc
xor
ret
icebp
push
mov
sahf
je
inc
pop
enter
daa
in
call
xor
shrl
sbb
sbb
aam
ja
push
in
or
leave
and
scas
cmp
jecxz
insb
lea
icebp
mov
and
lahf
cmp
jg
mov
mov
dec
inc
inc
dec
icebp
fists
std
or
pop
push
pop
test
pop
xchg
and
jmp
and
leave
cltd
xchg
test
mov
sahf
sarl
test
scas
inc
mov
insl
adc
xchg
out
pop
mov
mov
pop
push
xchg
ljmp
cltd
lds
and
pop
std
adc
mov
adc
enter
push
push
mov
jne
fs
sub
or
mov
sub
iret
cli
sbb
mov
push
lds
clc
sbb
push
sarb
andb
and
inc
cmp
test
jo
daa
in
push
push
cld
out
sbb
cld
stos
roll
push
mov
fsubr
lahf
dec
daa
int
gs
test
mov
and
dec
cmp
mov
test
adc
jo
ret
xor
das
in
or
fwait
cmpsl
fcmovu
jbe
inc
lahf
sbb
jp
pop
rorl
test
cmpsb
mov
enter
lcall
pop
inc
leave
sub
lret
ds
int
ljmp
rclb
dec
mov
in
cmpsb
inc
xchg
push
jle
mov
xchg
pop
repz
clc
cli
in
mov
repz
lcall
sbb
scas
sub
pusha
dec
outsl
dec
insl
mov
push
cmovae
es
cmp
xor
or
loopne
das
add
shl
pop
mov
sbb
int3
dec
jb
sub
jmp
push
leave
pop
je
cmpsb
xchg
pop
inc
sbb
xchg
adc
xor
adcb
sbb
jl
sbb
dec
pop
sarb
and
nop
push
add
pop
add
mov
sub
cltd
into
rcrl
jg
leave
pop
lods
add
sti
jns
mov
xchg
loope
fwait
dec
cli
xor
cld
stos
xchg
fnstcw
cmp
in
dec
and
xchg
scas
shrl
or
push
pop
addr16
imul
ficompl
adc
outsl
lea
adc
sub
ja
mov
popa
rep
lahf
dec
adc
or
cmpsl
je
pop
mov
int3
push
imul
test
lret
push
pop
adc
pop
push
fistpl
dec
sub
clc
scas
imul
sub
sahf
test
out
movsb
and
dec
sub
in
inc
jne
imul
rcr
cmpb
into
and
xor
xchg
mov
xchg
mov
fmul
adc
shll
add
xor
stos
scas
xor
dec
push
xchg
inc
dec
mov
mov
jnp
repz
sub
xchg
mov
add
popf
jb
nop
jmp
in
arpl
jno
xchg
cmpl
ja
int3
adc
mov
push
push
add
push
mov
mov
mov
mov
jns
jl
scas
repnz
mov
gs
in
dec
shll
push
xor
cwtl
or
and
push
sbb
movsb
scas
idivb
ret
mov
xor
push
mov
xchg
je
jns
push
fidivrs
sbb
das
in
nop
push
mov
sahf
pop
clc
xchg
dec
movsl
stos
int
cs
push
aas
cmp
push
fldl2e
mov
enter
sbb
ret
test
mov
pop
movsb
add
clc
sbb
lea
push
ds
mov
mov
aad
and
pop
jg
push
mov
jo
stos
xchg
add
mov
je
pop
insb
insl
xor
in
xchg
cltd
pop
movsl
or
fimull
leave
stc
data16
cltd
cmpsb
mov
cli
leave
insb
sub
js
sbbl
aam
cld
scas
rcrl
add
aad
das
cmp
es
ljmp
aad
repnz
mov
add
push
aam
jp
sub
xchg
cmc
push
or
and
cmp
and
jae
xchg
js
out
push
or
pop
mov
sbb
arpl
sbb
pop
push
inc
mov
jne
push
jb
mov
xor
cmp
cmc
fldt
test
repz
ret
and
pusha
lcall
dec
jbe
jb
adcl
dec
dec
xchg
cmp
fs
and
pop
repnz
inc
ja
sub
and
xor
sbb
ret
add
fdivs
xchg
lcall
scas
push
lcall
sub
fsubrs
xchg
test
push
dec
inc
dec
cmp
in
and
add
mov
adcb
dec
pop
xor
sbb
push
mov
incl
adc
mov
xchg
sti
add
or
pop
sub
loopne
bswap
test
add
and
and
ljmp
sbb
mov
pop
pop
rcr
xor
mov
lods
jnp
push
repz
jno
sub
jb
lock
xor
neg
inc
in
pop
scas
test
pop
shl
stc
push
pop
cld
sub
iret
js
leave
ret
ret
shr
testl
aaa
fdivp
adc
fisttps
loop
cwtl
sbb
sbb
loope
and
cmp
cltd
ja
adc
repz
jo
fdivl
xchg
ror
das
inc
dec
xchg
sub
sbb
xchg
push
lods
and
fiaddl
xor
mov
jecxz
jmp
dec
jbe
daa
jecxz
or
mov
pusha
cmp
shl
cmpsb
xchg
push
fcmovne
inc
lcall
stos
fnsave
test
test
push
hlt
ja
jle
xchg
cmp
sub
rcrb
jmp
dec
cmp
sarl
push
xchg
mov
cmp
stos
dec
xorb
push
dec
pop
lods
leave
sub
push
in
cli
bound
and
lret
arpl
into
daa
dec
and
add
sbb
pop
outsb
mov
je
pop
repnz
pusha
xchg
out
push
scas
subb
push
scas
inc
dec
push
xchg
mov
xchg
scas
ret
icebp
inc
jecxz
rorb
test
movsl
int
push
lret
lahf
das
andb
xorb
xchg
cmp
pop
gs
jge
rorl
in
jne
xchg
lea
inc
add
dec
add
sbb
pop
sarl
fsubrs
pop
and
dec
and
test
xchg
jle
cwtl
inc
cmp
loopne
or
dec
xor
adc
sub
jp
je
adc
imul
jae
scas
dec
push
xor
mov
test
dec
popf
icebp
cltd
pop
xchg
andb
jnp
out
sbb
adc
dec
jl
lods
stc
iret
aaa
inc
fistps
xchg
pop
mov
sahf
xchg
push
dec
jge
mov
push
out
add
mov
mov
jge
inc
or
inc
flds
jo
push
les
sbb
cmpsl
and
xor
push
fldcw
pop
outsl
dec
int3
mov
fisttps
mov
sub
cmc
movsb
mov
test
aam
ljmp
and
adc
loop
leave
arpl
xor
repnz
adc
add
popf
cwtl
sub
mov
cmp
mov
hlt
out
lahf
shlb
add
xchg
ret
aas
fcomps
movsl
jp
imul
pop
stos
jmp
jmp
cld
out
pop
inc
lret
lds
mov
pop
push
push
popf
or
add
mov
cld
in
mov
imul
fs
cmpsb
push
orb
sahf
je
aad
pop
test
icebp
push
inc
sahf
jmp
cmp
mov
js
shll
loope
jnp
jne
jbe
mov
add
decl
cwtl
loope
std
call
xchg
ljmp
test
test
dec
loop
ficoms
stos
add
in
rclb
dec
js
pop
cmp
rcrb
aaa
sar
pop
push
pop
inc
mov
test
dec
iret
cs
mov
flds
inc
mov
fs
clc
dec
in
pop
gs
and
test
in
jl
pusha
xor
ret
sarl
rcrb
inc
icebp
jmp
ja
push
cltd
das
cli
jns
mov
inc
or
sbb
xor
rcll
xchg
ja
stos
imul
arpl
lcall
lret
fcmovbe
push
lcall
ret
mov
or
fldt
movsl
dec
mov
mov
je
push
stos
mov
mov
or
dec
imul
mov
js
mov
cltd
je
ljmp
add
sub
insb
jo
jecxz
notb
repz
dec
add
pop
iret
into
imul
jge
mov
mov
push
mov
pop
int3
xchg
out
dec
xchg
add
mov
in
xor
push
push
adc
fstpt
in
xor
sahf
movsl
xchg
push
in
int3
dec
data16
sarb
arpl
mov
out
arpl
shlb
call
dec
pop
imul
jmp
push
fsubl
jnp
jge
push
mov
cld
fucom
lcall
int
and
imul
cmpsb
inc
sub
stos
adc
pop
outsl
aad
mov
into
scas
push
into
rcr
mov
push
iret
jb
scas
mov
enter
imul
mov
add
cmp
push
fstpl
xor
dec
xor
dec
in
pop
inc
ja
aad
das
clc
add
mov
ss
cmp
jne
call
cmp
scas
test
push
inc
test
pop
or
pop
lods
inc
aaa
lods
lods
movsb
shll
sub
loope
outsl
arpl
xchg
hlt
pusha
movsl
repnz
jmp
rorb
lret
inc
stos
imul
and
leave
pop
stc
jl
loope
sti
mov
mov
cmp
sahf
cmp
add
cltd
shr
out
rcrl
and
or
addb
inc
lcall
outsb
lds
mulb
jbe
and
push
sub
repnz
mov
mov
jns
out
rep
jge
inc
push
rcrb
xchg
pop
testl
pop
mov
jnp,pn
sbb
mov
repz
movsb
aaa
inc
arpl
fsubr
cmp
test
adc
jns
outsl
fisubrs
sbb
add
jecxz
cmp
or
out
out
cmpsb
loope
add
lods
inc
push
hlt
mov
jp
cmp
dec
jo
nop
xchg
lock
mov
pop
sub
ret
dec
std
cmpl
pop
mov
cmp
add
jb
shl
inc
and
and
add
mov
ljmp
enter
mov
or
insl
add
and
iret
xchg
insb
test
pop
in
ss
inc
out
in
push
or
imul
jge
mov
ja
mov
sub
fiadds
pop
cmp
sahf
inc
shrb
cmp
adc
mov
jno
aad
fcoml
scas
daa
cmp
dec
push
mov
fisubs
add
pop
ja
pop
sbb
cmc
xchg
out
mov
dec
push
popf
aas
lahf
in
ds
jnp
popa
dec
fsubr
in
push
enter
popa
mov
lcall
scas
lret
jp
lds
out
sbb
sbb
xchg
cmpsl
xorl
mov
mov
je
into
cmp
aam
sub
aad
adc
bnd
or
nop
clc
pop
loope
ds
or
test
mov
add
mov
dec
fnsave
jnp
sub
xchg
jg
cmc
cli
aas
dec
and
ret
jne
fld
jle
shlb
push
xor
adc
inc
pop
push
pop
mov
mov
push
pushf
pop
jno
js
in
xor
nop
cltd
fistl
inc
mov
fadd
add
adc
mov
xchg
dec
adc
xorb
loop
adc
cltd
gs
xchg
inc
stos
dec
add
pop
push
out
sbb
lea
inc
mov
aad
and
xchg
mov
xchg
fsubrl
pop
mov
jo
cmpsb
sub
test
aas
or
cmp
xchg
mov
ljmp
push
mov
cmc
outsl
std
jne
ficoml
les
mov
or
inc
pop
sti
xor
ds
mov
test
ficoml
ds
push
inc
lcall
sahf
sub
les
xor
lock
dec
je
std
inc
mov
jns
or
cwtl
test
xchg
loope
pop
call
cmpsb
movsb
push
inc
cwtl
fs
shl
or
mov
imul
clc
in
movsl
xor
pop
cmp
mov
mov
mov
fstpt
adc
add
nop
adc
ja
outsb
lods
dec
add
cmp
push
popf
sarb
mov
lret
ss
dec
sub
mul
dec
xor
sti
mov
insl
outsb
pusha
mov
xor
daa
cwtl
push
loop
rcrl
loop
mov
lods
jecxz
inc
pop
repnz
cli
push
mov
inc
ss
mov
loop
cld
jecxz
dec
mov
dec
ds
adc
dec
push
scas
xor
mov
cmp
fidivs
imul
aas
cmp
lret
scas
sti
pop
xchg
and
xor
pop
decb
cmp
hlt
insb
fwait
push
fnstcw
mov
or
jle
jb
roll
xchg
cmpsb
mov
or
imul
inc
mov
pop
into
in
xchg
aaa
xor
lret
cld
aas
sahf
in
nop
ljmp
hlt
sbb
arpl
jg
push
mov
add
dec
mov
sbb
nop
push
out
insl
sbb
test
in
lds
dec
add
sub
scas
jmp
xor
mov
pop
push
and
or
clc
arpl
jle
mov
sbb
push
in
imul
mov
cmp
xor
jo
mov
in
out
or
mov
in
shlb
aas
dec
jmp
adc
add
mov
hlt
aad
fs
jnp
inc
rol
mov
mov
addb
dec
test
gs
xchg
mov
mov
xchg
test
cmp
sbb
in
ja
jne
pop
mov
jne
add
test
sub
icebp
mov
sbb
jne
je
xor
jmp
lods
fsub
lret
mov
mov
dec
out
inc
sbbl
cmp
cmp
xchg
push
scas
in
add
jns
aam
fwait
pop
jns
mov
mov
jp
insl
sub
sub
xchg
jl
and
cmp
insb
test
sub
shlb
mov
sub
imul
sarb
out
mov
fstpt
push
pop
mov
mov
push
mov
shll
xchg
mov
arpl
decb
jecxz
or
aam
test
imulb
hlt
pusha
les
xchg
pop
and
cmp
add
stc
rcr
dec
shlb
xchg
push
loop
and
fs
jp
loopne
adc
mov
xor
push
sbb
pop
jb
jb
mov
out
pushl
jmp
mov
ljmp
adc
or
int
shrb
out
pop
insl
jle
stos
add
xor
mov
lods
pop
stc
in
stos
or
mov
test
xor
xorb
sbb
out
aas
push
subl
mov
icebp
addl
pop
flds
push
movntq
mov
cld
bound
cmp
and
pop
je
leave
pop
test
adc
mov
or
dec
lahf
sbb
jbe
mov
cli
jae
aad
clc
andb
or
sbb
stos
movsb
jge
inc
scas
mov
je
insb
lahf
fdivs
inc
mov
mov
pop
xchg
push
dec
jge
stc
and
subb
mov
movb
sbb
add
pop
rcrb
sub
clc
scas
and
xchg
rol
lods
mov
adc
test
or
test
push
hlt
aas
aam
pop
cmp
imul
mov
test
ror
adc
dec
rcr
mov
mov
and
mov
mov
sbb
lock
pop
and
pop
inc
scas
dec
daa
dec
push
into
imul
jae
aas
mov
inc
test
add
mov
push
imul
jnp
neg
les
sti
and
cli
jb
or
inc
sub
ds
ret
mov
aad
push
cmpsb
xor
jmp
stos
fisubrl
pop
repz
not
dec
out
and
dec
mov
or
repz
int3
cltd
jg
insl
adc
and
in
cmpb
jne
test
pusha
sub
push
clc
mov
push
lods
and
jle
lods
xchg
adc
sub
jecxz
std
lret
xor
repnz
push
xor
pushf
mov
adc
clc
pop
push
out
rcrb
lret
xchg
out
dec
scas
add
mov
pop
insl
pop
and
ss
fxch
out
mov
jecxz
adc
mov
sbb
sub
push
cld
jge
push
or
xor
xlat
add
testb
scas
mov
fnstenv
stc
ret
mov
shlb
cmpsl
subl
mov
or
or
sub
ds
jbe
clc
enter
int3
lods
sbb
mov
xlat
mov
mov
movsl
push
jo
lcall
push
push
cwtl
pushf
loopne
fisubs
sub
subb
addr16
mov
add
xchg
mov
pop
cmp
xchg
lods
loop
mov
add
gs
lcall
add
in
pop
int
inc
popf
lcall
lock
or
and
shl
sbb
add
push
mov
sbb
mov
mov
pop
mov
fsincos
mov
sub
sarb
movsb
mov
jne
out
sub
int
mov
xlat
iret
mov
mov
cld
push
add
and
mov
rorb
cs
or
pop
jnp
cli
shrb
dec
pop
mov
mov
out
pop
mov
or
mov
addr16
inc
pop
repnz
int
mov
test
arpl
outsl
add
into
nop
pop
mov
dec
jo
filds
addr16
iret
cmp
jecxz
mov
fimull
mov
mov
cli
std
lret
mul
subb
imul
sti
sbb
xchg
sub
imul
leave
jae
add
inc
cld
pushf
sub
xchg
xor
pop
inc
pop
pop
push
adc
dec
dec
cmp
dec
mov
push
jp
cli
imul
push
stos
popf
leave
jl
lahf
imulb
dec
dec
jmp
xchg
mov
inc
icebp
xor
xchg
cmp
lret
xor
push
into
xchg
or
rcll
icebp
mov
pop
out
hlt
jle
mov
mov
fistl
insb
or
insl
mov
sar
daa
jmp
mov
jne
xor
divl
lret
lret
pop
xchg
shll
lcall
fwait
mov
mov
inc
jne
lods
or
bound
jb
adc
bound
cwtl
cmp
insl
pop
inc
fcom
jne
xlat
push
cmpsl
cmpsl
and
xor
std
xor
or
fistl
in
lds
imul
ret
cmc
mov
xchg
mov
mov
fstpt
mov
rorb
mov
jne
movsl
lea
push
sub
and
pop
mov
test
xor
sbb
insl
xchg
lcall
shr
sbb
in
xchg
push
aad
xchg
test
test
idiv
sbb
sbb
cmp
outsl
aam
push
jle
out
mov
mov
jns
repz
dec
loop
xlat
xchg
or
mov
push
fwait
outsl
enter
jno
stos
jp
mov
in
popf
sbb
rcr
dec
ja
insb
xchg
fs
test
fnstcw
test
mov
jae
adc
or
jge
lock
cltd
ss
int
mov
loopne
clc
loop
lahf
jnp
or
leave
push
sahf
lret
test
mov
jle
es
sub
into
dec
imul
fwait
call
lret
test
int3
dec
push
jge
xchg
push
ja
inc
or
xchg
not
add
cmp
sub
jb
push
sbb
sbb
lcall
pop
inc
pop
insl
jmp
int
ret
jp
dec
inc
inc
push
scas
jne
lods
cmc
repnz
xor
add
fwait
movsl
hlt
inc
ret
dec
cld
mull
test
push
jbe
cmpsl
fiadds
mov
pop
outsl
sub
and
jbe
stos
fimuls
loop
adc
test
enter
mov
in
ret
inc
cmp
cwtl
stos
enter
jae
stos
inc
imul
cmp
pop
inc
jp
pop
mov
pop
js
daa
icebp
sub
xchg
imul
or
push
lea
lock
insl
std
sbb
test
pop
and
fimull
xchg
cmp
xor
ret
popa
mov
mov
xchg
ja
cmp
mov
imul
jmp
repz
sbb
inc
push
sub
jns
jp
ds
arpl
push
pusha
psubq
mov
push
add
out
xchg
adc
inc
dec
lock
and
jnp
cmp
push
push
push
data16
cmpsl
subl
jle
pop
or
cmp
leave
sub
int
dec
sub
bound
out
jno
iret
cli
or
xchg
xor
jns
imul
push
cmpsl
xchg
mov
outsl
lcall
adc
xor
dec
dec
pop
leave
xor
out
pop
pop
popf
loop
movsl
push
add
stos
xor
dec
mov
std
ljmp
mov
in
mov
popf
mov
ljmp
movsl
ret
cmp
fdivp
cmp
pop
xor
inc
js
sbb
js
int3
push
pop
inc
and
xor
pop
mov
sbb
mov
out
inc
pop
ret
movsl
cwtl
push
add
pop
mov
popf
pushf
pop
mov
cwtl
jmp
xchg
fiadds
mov
cmpb
in
lea
or
cmp
fnstenv
fwait
pop
jge
sbb
push
stos
xor
pop
out
sbb
xchg
loop
mov
lea
fucomip
or
jecxz
and
pop
xchg
scas
xchg
or
into
imul
sarb
adc
mov
arpl
adc
clc
add
lods
xor
arpl
popa
xor
dec
das
sbb
jae
lock
push
jnp
mov
js
int
xchg
mov
lods
adc
push
scas
rcrb
inc
pop
dec
and
je
pop
fbstp
sub
sarl
in
jne
nop
call
mov
mov
ret
in
lret
adc
dec
ljmp
sbbl
psubusw
fcomi
lds
and
rep
inc
mov
in
das
ds
hlt
in
and
sub
fimull
inc
aad
imul
dec
pushf
mov
daa
movsb
outsl
addr16
fmuls
pop
jmp
and
into
cmpsb
pushf
iret
xor
xor
dec
fldenv
mov
push
mov
cld
fwait
inc
jnp
stos
and
inc
cmp
mov
sub
jecxz
and
push
ret
icebp
dec
aaa
fsubs
gs
psubusw
push
pop
bnd
adc
cld
add
js
lea
or
sub
mov
lahf
popf
adc
mov
in
mov
push
xor
sub
nop
loop
cmp
dec
int
faddl
mov
sbb
sub
xchg
jb
les
fwait
xchg
push
inc
cmp
xchg
xlat
ja
xchg
enter
shl
mov
or
mov
adc
sub
std
shlb
hlt
mov
adc
jle
jae
or
lret
and
out
push
fwait
mov
push
push
outsb
adc
lods
push
push
jecxz
in
sbb
adc
or
in
call
sub
and
adc
mov
insl
jl
mov
outsb
cs
mov
and
imul
push
shll
std
les
out
add
aas
jl
pop
mov
xchg
xchg
push
mov
and
pusha
lret
sbb
sub
out
fwait
jnp
lods
push
xorl
ret
mov
shl
xchg
jl
xlat
sbb
jns
shr
test
and
dec
jl
push
jb,pt
call
ja
sub
xor
jo
cmpsb
jno
stos
adc
add
test
pusha
sbb
pop
and
sbb
cmp
test
xlat
lcall
ror
not
in
cmp
dec
or
add
fstl
dec
sub
push
imul
pop
xchg
les
sub
repz
inc
adc
repnz
sub
inc
lahf
scas
lock
adc
mov
xchg
lcall
lret
add
cmpsl
push
or
cmpsl
dec
add
or
adc
stc
lock
jb
in
pop
jb
xchg
adc
mov
adc
mov
dec
or
mulb
sbb
fbstp
es
sarb
lock
xchg
movsl
scas
or
stos
lock
scas
pushl
cmp
add
or
cmpl
aaa
mov
int
mov
imul
loope
ret
icebp
cmc
pop
bound
mov
test
pop
ret
push
shrb
cmpsl
idivl
sub
inc
mov
repz
pop
mov
cwtl
mov
inc
leave
dec
jg
dec
lahf
jbe
jmp
test
xor
les
xor
add
sub
rorb
dec
pop
xor
addr16
xorb
pop
mov
xor
push
xor
aas
stc
rolb
stos
jnp
pop
out
std
sub
fucomip
enter
push
cmp
rcrb
mov
jo
sbb
xor
addr16
pop
mov
in
test
mov
out
mov
mov
add
lea
enter
fnsave
inc
inc
xchg
and
mov
add
out
cmp
int
push
idivb
xor
mov
xchg
xor
cli
adc
xchg
in
orb
mov
ret
sbb
gs
mov
push
pop
push
pop
xchg
push
cld
mov
push
sahf
inc
lahf
in
mov
inc
inc
cmp
inc
sti
test
jp
mov
inc
sub
jle
imul
dec
repnz
mov
xor
cmp
push
lret
sbb
scas
or
stos
sub
mov
stos
jmp
out
mov
lods
mov
in
fisubrl
cli
lock
repnz
ja
or
fsubp
jg
js
xchg
dec
stos
pop
test
and
stos
push
mov
bound
add
mov
mov
ljmp
add
mov
pop
xchg
sbb
inc
mov
and
mov
pop
adc
int3
dec
dec
ss
cmpl
add
dec
inc
ds
xor
out
jae
dec
iret
scas
push
add
push
stos
daa
lods
out
notl
mov
xor
cmpsl
js
scas
adc
xchg
mov
xor
in
add
nop
pop
xor
aaa
jbe
addr16
jae
out
outsl
jmp
or
out
lret
push
add
jne
div
lcall
jle
cs
mov
shlb
bound
dec
mov
mov
ja
std
pusha
xchg
add
movsl
lds
adc
add
sub
and
shlb
ret
pop
push
cmp
fs
push
popf
cmc
pop
cmpsb
mov
sub
pusha
mov
mov
stc
sarl
mov
xchg
jmp
push
nop
jbe
xchg
mov
mov
push
push
and
cmp
mov
mov
repnz
mov
hlt
mov
ret
iret
add
lods
lods
sbb
jmp
fisttpl
adc
push
iret
mov
pop
insl
xchg
pop
ljmp
and
shrb
mov
out
cmovns
ja
adc
push
sub
out
mov
mov
pop
les
sub
push
shrb
push
jecxz
sbb
loop
or
inc
out
loope
pop
in
arpl
dec
jne
pusha
movsb
sub
andb
pop
pop
jb
add
addr16
jle
mov
stos
rep
js
insl
rcr
adc
or
fisttps
out
xor
push
icebp
cmp
leave
xchg
loopne
fidivrl
cmp
ss
in
inc
nop
mov
mov
inc
filds
setnp
iret
lahf
jno
and
aaa
fisubrs
movsb
dec
push
das
fs
std
inc
imul
test
sahf
sbb
push
arpl
push
xor
mov
jae
fcmovne
shll
mov
jmp
xor
test
jmp
lret
sbb
ret
lcall
push
cmp
xchg
sub
test
out
or
pop
xchg
cmc
push
push
push
pop
sub
mov
inc
movsb
cmpsl
push
bound
push
lods
mov
sbb
push
ret
arpl
das
out
jmp
xor
adc
sbb
push
mov
rcll
cltd
add
cmc
adc
in
xor
mov
flds
scas
dec
sbb
sti
ret
or
mov
jl
dec
cwtl
movb
cmp
xor
xor
xor
xchg
ret
sub
or
lahf
xor
fistpl
adc
mov
loope
jne
mov
imul
inc
push
ds
or
ljmp
pop
mov
shlb
add
in
lret
sub
rcrb
mov
iret
hlt
dec
loope
xchg
adc
and
sbb
divb
shlb
push
iret
movsl
arpl
and
add
lahf
subb
pusha
and
jge
shl
daa
add
ret
mov
fidivs
inc
cmp
js
insl
sbb
popa
stos
push
lock
cld
sbb
or
sub
and
inc
aaa
lret
mov
and
es
mov
mov
xlat
push
push
and
mov
mov
ret
popa
cmpb
sti
hlt
sahf
push
add
stos
aad
adc
repnz
mov
cld
mov
mov
mov
sbb
dec
push
add
leave
fstl
shll
pop
imul
xchg
ljmp
hlt
fwait
mov
negb
mov
or
and
movsl
push
cmp
sub
dec
jl
ljmp
pusha
stos
mov
sub
xchg
aaa
jg
cmp
inc
ret
push
and
aad
icebp
mov
cwtl
cmpsb
aam
pop
mov
nop
xor
mov
jl
mov
sub
mov
jle
push
cmp
cmp
sbb
push
fmuls
je
imul
or
and
push
pop
test
mov
into
iret
fsubrs
push
hlt
mov
inc
push
or
adc
icebp
sub
inc
mov
mov
cltd
out
add
dec
outsb
jo
popa
lahf
push
mov
or
pop
addr16
mov
mov
gs
mov
loop
add
fwait
inc
or
loop
scas
fsubrp
mul
fisubs
dec
pop
fdivs
add
pusha
push
pushf
jle
hlt
pop
mov
ret
stos
mov
mov
imul
in
into
mov
dec
aad
add
sbb
inc
jne
jns,pt
mov
jbe
in
movsb
lret
mov
fdiv
aas
nop
out
adcl
cmp
mov
imul
dec
ja
sub
inc
pop
xor
pop
mov
or
xor
ret
mov
inc
int3
ds
insl
pop
xchg
sub
xchg
dec
mov
dec
fimull
imul
add
and
mov
insl
fcomps
and
pop
stc
stos
repnz
add
inc
xchg
push
cmp
inc
mov
out
iret
shr
push
lock
pusha
mov
push
ficoml
jp
add
xchg
mov
outsl
imul
sbb
fsubrs
sbb
ja
stos
sbb
gs
lahf
mov
loopne
mov
push
daa
or
pop
jns
xchg
das
or
xchg
and
in
push
mov
adc
pop
adc
sbb
push
inc
inc
mov
int3
xchg
outsb
mov
mov
add
mov
movsl
fldcw
push
pop
repnz
mov
push
daa
je
stos
inc
add
jbe
or
fwait
adc
push
push
cli
inc
mov
fstps
dec
sub
jecxz
sub
mov
fwait
adc
in
push
loop
ljmp
xor
push
jg
fisubs
into
push
adc
out
xor
fcomps
jae
jmp
repz
push
adc
and
dec
xchg
fwait
push
xlat
test
out
xchg
vpsrad
xlat
addb
fcoms
inc
sbb
mov
dec
inc
hlt
cs
leave
shrb
fs
push
jno
es
mov
arpl
jecxz
pop
jp
adc
sbb
fcmovne
xchg
xlat
mov
dec
pop
dec
push
sarb
les
xor
ds
pop
out
mov
jnp
movsl
cli
sbb
divb
mov
cmp
fistpl
jbe
inc
jg
lods
aaa
adc
jmp
xchg
int
call
mov
dec
ret
xor
andb
xor
mov
stos
ljmp
aaa
out
add
mov
das
test
mov
push
xor
push
mov
fnstsw
dec
cmpsb
lea
mov
ret
cmpsb
mov
jmp
cmpsb
cmc
out
cmc
sub
in
mov
fisttpll
std
idivb
adc
xor
fwait
stos
popf
cmc
dec
push
dec
ljmp
filds
cli
cmp
or
and
cli
pop
in
shr
imul
cltd
add
sub
inc
cltd
leave
ljmp
out
mov
insb
addb
notl
and
jl
insl
hlt
xchg
fwait
mov
sbb
lock
bound
stos
mov
adc
jecxz
inc
dec
int3
cltd
cmp
iret
cli
xor
pop
xchg
sbb
dec
inc
ret
movsb
jns
stos
xor
mov
add
fcmovnu
stos
xchg
pop
cs
pop
dec
shll
aad
jl
sbb
sbb
lea
sbb
mov
lock
das
mov
pcmpgtb
push
mov
pop
push
mov
push
inc
je
lods
dec
jecxz
scas
ds
jecxz
movsb
xchg
out
in
and
jno
mov
xchg
addl
add
out
jnp
repz
push
jl
shl
ficoms
sbb
loopne
fildl
lret
xor
mov
mov
sub
pushf
frstor
dec
pop
xchg
das
or
mov
xchg
cmc
xchg
mov
pop
xchg
push
sbbb
mov
mov
cmp
mov
push
and
das
jle
xchg
icebp
repnz
xor
mov
cld
ret
sbbb
outsb
aad
cmp
mov
pop
loopne
inc
push
mov
mov
gs
stos
adc
and
mov
repz
cltd
add
push
cwtl
das
cmp
lahf
jbe
sbb
adc
pop
inc
cmp
lods
stos
popf
inc
cmpsw
mov
js
or
pop
pop
incl
cmpl
adc
mov
or
int
push
sbb
pusha
loopne
pop
ret
inc
bound
enter
stos
push
jo
enter
adc
lret
pop
push
pop
lret
arpl
xchg
sarl
push
mov
insl
out
mov
scas
fnsave
sbb
rcl
out
mov
lock
jae
add
outsb
dec
fwait
push
mov
stos
call
adcl
orb
mov
or
mov
and
mov
push
push
fwait
lahf
subb
clc
movsl
scas
pop
mov
sbb
outsl
inc
int
adc
test
push
repz
add
dec
fisubrs
mov
sbbl
and
xacquire
in
aaa
inc
push
push
mov
sub
pop
mov
ret
nop
ret
push
jmp
jp
push
shll
test
xor
pop
ja
or
inc
mov
xchg
and
sub
stos
mov
fistl
jmp
adc
test
xchg
outsb
jg
adc
add
hlt
xchg
repnz
push
jp
cwtl
dec
into
iret
jmp
ret
inc
xchg
xor
pop
xchg
insb
ljmp
pop
pop
pop
jb
add
push
lret
jle
ds
sahf
aad
sub
lahf
inc
stos
push
inc
movl
scas
add
mov
std
ret
mulb
out
cmp
in
int
ficoms
mov
add
ror
shll
pop
out
and
popa
mov
scas
ss
sbb
dec
addr16
movsl
in
das
inc
pop
lock
mov
sub
push
push
stos
cld
lods
in
sub
jle
and
vmovsd
test
dec
sahf
lock
mov
pusha
ficompl
out
push
mov
pop
cmp
cmp
or
push
dec
test
xor
movl
leave
mov
xor
enter
jmp
shlb
adc
dec
mov
inc
shlb
pushf
imul
test
sub
leave
stos
test
scas
pushl
aaa
ds
cmp
pop
jno
lds
bound
lcall
in
sub
lcall
xor
adc
push
stos
fs
ds
cwtl
fbstp
in
dec
aaa
lahf
in
or
dec
lods
iret
or
and
pushf
mov
andb
mov
add
insb
ds
popa
xchg
scas
fsub
fildll
loop
aaa
push
mov
ret
rorl
adc
and
and
orb
xor
dec
cli
xchg
iret
push
jb
push
mov
ja
ja
sti
das
shrb
cs
lcall
and
xor
insl
xor
mov
enter
lds
mov
jno
push
push
xlat
pusha
in
dec
into
ds
mov
mov
movsb
and
or
sarb
ja
pop
lods
jmp
pop
sub
sbbb
mov
int3
lds
push
mov
pop
xchg
in
test
xchg
shlb
xor
das
push
xor
mov
mov
out
and
out
jb
push
jmp
jns
mov
loop
clc
out
adc
sbb
sbb
call
mov
sbb
jne
out
xlat
rcrl
jae
jno
je
push
mov
out
iret
push
add
lret
iret
orl
add
call
enter
das
fsubl
cmc
mov
in
cld
daa
or
fcomi
push
xor
lods
int3
pop
mov
cmc
mov
in
jg
sub
push
stc
mov
aaa
cltd
xor
xor
mov
aaa
leave
in
int
sub
jg
andl
add
jle
les
inc
out
ljmp
lcall
inc
fidivrl
lods
test
and
sub
bound
outsb
ljmp
xchg
rol
xor
xchg
pusha
hlt
add
jmp
in
stos
sti
xchg
scas
movsb
mov
cwtl
pop
jns
xor
fstpt
mov
pop
fists
leave
mov
add
jns
adc
imull
cmp
pushf
nop
stos
or
mov
aaa
push
mov
and
call
in
or
xlat
ret
jno
dec
fidivrs
stos
pop
jb
jbe
jle
mov
jo
hlt
mov
aad
or
je
sub
cld
test
push
test
sub
notb
sub
xchg
rcrl
mov
arpl
xchg
xlat
jg
bound
fistpl
fidivrl
push
ljmp
mov
adc
nop
push
test
push
fisttpl
addr16
jo
in
nop
push
cs
lcall
jbe
out
repnz
xchg
jl
andb
mov
sub
cmpb
pop
sbb
cmp
cltd
jo
cwtl
dec
imul
enter
xchg
or
leave
faddl
sahf
ficompl
mov
cmp
iret
lock
mov
fbld
pop
push
adc
sti
sub
out
test
inc
inc
lahf
or
lods
sub
xor
jno
sub
icebp
mov
dec
mov
imul
leave
mov
mov
out
jb
daa
leave
loope
mov
mov
cwtl
test
loop
pusha
dec
sub
loope
dec
adc
out
stos
xchg
pop
lahf
sbb
pop
jp
xchg
cmc
cltd
pushf
cltd
push
insb
and
jns
mov
mov
fimull
dec
aaa
adc
loope
sub
sbb
into
enter
and
cmp
inc
sub
inc
cwtl
daa
jecxz
loopne
add
push
mov
fisttpl
insb
fmull
test
pop
shl
into
mov
inc
cli
xchg
fidivl
rclb
jge
pop
jg
and
out
add
mov
dec
dec
mov
mov
inc
out
cmpsb
xor
pusha
nop
inc
and
daa
mov
int
inc
mov
div
pusha
push
je,pt
mov
jno
adc
jl
mov
lods
je
sbb
loope
xchg
xchg
aam
inc
mov
and
mov
movsb
in
rcrl
mov
cmp
mov
pop
gs
fmuls
add
xchg
dec
inc
xchg
push
fs
xchg
sbb
lock
ret
stc
fldenv
inc
jg
and
insl
loopne
cmc
cmc
int
cmpsl
std
jmp
mov
leave
mov
inc
outsb
rorl
or
sahf
movsb
out
loope
xlat
pusha
aas
jmp
pop
jae
sub
ss
mov
mov
cmpsb
mov
ficoms
mov
add
fcmovb
rolb
and
int3
mov
jne
pop
idivb
adc
lock
scas
push
jle
inc
mov
arpl
sbb
mov
dec
pop
fcomps
sahf
movsl
std
je
dec
test
dec
mov
jo
ss
sub
iret
mov
fdivl
negb
or
or
ja
rcrb
js
sub
cmp
xchg
sarb
gs
adc
mov
ljmp
das
inc
fstpt
inc
push
push
call
pop
aam
test
add
stos
lcall
jno
jp
push
mov
jb
pop
fs
js
mov
push
cmp
pop
mov
outsl
gs
dec
inc
pop
mov
jae
popf
out
add
and
cmc
jmp
push
out
inc
subl
loopne
inc
stos
fwait
pop
test
push
adc
insl
shl
jmp
mov
lret
push
lahf
inc
mov
orb
and
sbb
rcrl
fcompl
jno
into
cmp
and
pop
and
mov
xchg
adc
jle
sti
and
mov
mov
js
xor
or
xor
xor
stos
es
jmp
dec
loope
mov
sbb
in
inc
push
mov
scas
lock
pop
daa
fcoms
sbb
dec
sbb
push
mov
cmp
adc
stc
adc
fdivrs
movsl
loope
ret
lea
rorb
mov
xchg
mov
jnp
xor
lcall
cli
iret
fildl
mov
fdivrl
std
repz
xor
out
lods
outsl
sbb
or
popa
fdivr
bound
jp
pop
pop
mov
xchg
or
int
and
lock
ss
jb
sbb
fsubl
shll
dec
pop
inc
les
mov
scas
pop
mov
sbb
pusha
imull
cmp
xchg
into
push
lods
and
adc
in
das
jl
mov
mov
repnz
das
push
xor
jo
sti
jp
hlt
pop
cs
fsubrs
jl
jl
test
stos
insl
xchg
mov
ficompl
xchg
mov
dec
es
pop
out
mull
jp
sahf
fsubs
and
push
add
fidivs
pop
rcr
push
repnz
leave
rol
dec
cmc
in
push
push
lea
test
add
roll
jge
or
jo
ds
in
push
fcompl
pop
push
stos
xchg
sbb
jo
cmp
nop
xor
xchg
subl
dec
jb
dec
in
mov
stos
mov
cli
in
fidivs
or
loop
mov
lods
cmc
xchg
push
add
cmp
in
scas
js
ds
xor
ds
xchg
cmc
gs
sbb
xchg
insb
push
insl
rorl
sub
pop
sti
negb
shlb
ret
aad
push
add
imul
icebp
adc
sbb
inc
or
mov
test
mov
nop
cmp
int3
inc
fwait
push
lods
shlb
sbb
dec
mov
sub
sub
inc
in
xchg
push
dec
adc
int3
lea
and
mov
xchg
out
stc
std
rclb
jnp
xchg
sub
mov
or
imul
movzbl
out
sahf
lods
ss
ret
jne
mov
push
push
pop
icebp
inc
fstpt
out
cmp
add
cmp
out
fnstenv
inc
cmp
ret
mov
test
xor
aas
out
mov
or
cmp
push
mov
xor
hlt
mov
mov
push
dec
jae
cmp
dec
icebp
cwtl
lock
daa
cli
inc
stos
arpl
pop
and
mov
sbb
out
aas
loope
mov
mov
jp
add
fsubrp
mov
insb
aad
sub
addb
dec
mov
imull
and
movsl
push
stos
gs
add
xchg
adcl
pop
or
sbbl
test
aam
mov
mov
and
stc
jo
mov
dec
lret
jno
leave
cmp
pop
xor
sbb
test
mov
movsb
movsl
pop
in
jge
mov
mov
aad
movsb
sub
das
sbb
sbb
imul
and
adc
dec
std
jb
les
aad
stos
nop
mov
sbb
pop
push
lea
jno
leave
bound
fwait
push
loopne
pop
xchg
es
cmc
jns
jge
orb
dec
sti
push
jo
or
in
sbb
jnp
repnz
lds
mov
movsb
mov
cmp
stc
lahf
dec
ret
popf
std
popa
pop
aas
loope
push
hlt
inc
js
lea
adc
leave
cli
and
mov
xlat
movsl
add
hlt
in
and
add
xchg
mov
xor
jbe
pusha
xor
cmpsl
rcl
inc
in
sbb
scas
or
push
fstpt
jns
mov
or
mov
scas
pop
push
stos
nop
in
cltd
push
jle
dec
sub
sub
pop
xor
adc
rolb
pop
aas
hlt
rol
out
inc
fwait
loopne
inc
imul
sub
in
jg
bound
nop
pop
filds
sub
stc
mov
and
mov
or
pop
lahf
xlat
pusha
jbe
cmp
xor
ficoml
jnp
rcrb
cmpsl
in
adc
sti
jl
sub
sbb
loopne
es
push
daa
shr
sub
mov
aaa
pop
test
or
andb
loopne
gs
xchg
mov
xor
adc
mov
xorb
lods
fldenv
out
cmp
loopne
nop
mov
sub
clc
mov
xor
std
push
sub
inc
xor
jmp
popa
sub
push
dec
mov
cmpsl
push
into
nop
xor
je
fwait
xlat
in
shll
stc
test
or
adc
fimull
test
adc
sub
jp
mov
sti
mov
cmp
push
mov
jmp
popf
fbstp
or
roll
xor
and
ret
pushf
lahf
xor
outsl
mov
xor
mov
add
icebp
cli
pop
and
shl
pop
xchg
sbb
outsb
pop
and
mov
xchg
rol
push
and
sub
or
out
and
lahf
xlat
jle
fwait
xor
movsb
pusha
in
push
popf
fistpll
pushf
iret
push
mov
test
dec
push
cmp
fnsave
cwtl
jnp
push
inc
lds
faddl
out
xchg
ds
mov
push
sbb
fiaddl
outsl
inc
xor
mov
mov
jno
adc
loop
mov
movsb
fimuls
mov
push
xchg
sbb
cs
fidivrl
mov
xor
outsl
xor
dec
xor
sbb
sti
mov
inc
stc
popf
and
ret
sbb
and
jo
sahf
cld
shlb
loop
sahf
lods
repz
adc
movsl
loopne
dec
sub
in
push
push
lret
test
fcompl
int
loopne
xchg
leave
xor
mov
pop
dec
call
ss
xchg
inc
mov
stos
daa
jbe
je
fidivrl
sets
mov
stc
pop
out
push
icebp
adc
push
in
xor
mov
out
xchg
and
xchg
push
or
rorl
pop
aad
jle
sub
mov
stc
andl
jae
mov
scas
or
push
ja
es
adc
pop
roll
inc
pop
aad
pushl
imul
arpl
inc
or
or
enter
ja
mov
add
dec
shlb
push
and
add
call
push
hlt
int
sub
push
xor
push
decb
test
cmp
jmp
jmp
hlt
nop
pop
dec
aam
sub
daa
xchg
push
lahf
ret
out
mov
lea
fwait
cmpsb
sub
std
ljmp
push
sbb
or
mov
mov
test
js
lret
orl
decl
xchg
dec
push
sar
btrl
add
add
xor
xor
ds
inc
or
scas
adc
testl
sahf
xor
nop
cwtl
xchg
mov
filds
inc
aam
cwtl
xchg
jmp
cld
fcomp
push
and
imul
outsl
mov
testb
into
add
in
or
in
sub
cmp
inc
cmp
jbe
hlt
rol
idiv
test
dec
mov
jns
clc
push
and
jle
data16
sbb
mov
add
or
loope
mov
roll
mov
sbb
mov
and
jge
fsubp
adc
or
push
in
cmp
add
iret
sub
out
mov
mov
and
dec
add
fwait
daa
dec
mov
pop
pusha
mov
out
fildll
jp
shlb
mov
fmulp
mov
popf
add
add
sbb
jns
adc
clc
out
ss
popf
pop
scas
stos
lods
pop
pop
hlt
jmp
and
test
out
mov
pop
cld
js
lahf
pop
mov
cs
add
xlat
addr16
inc
cmpsb
push
xor
mov
push
inc
sbb
fisubs
xchg
ljmp
cmp
stos
jp
push
popa
ret
fs
mov
test
jl
jp
jne
xor
fsubrl
fnsave
sti
mov
mov
fldpi
dec
mov
pop
mov
jle
add
pop
das
js
push
mov
ds
test
xor
dec
int3
add
fnstcw
js
imul
add
push
mov
mov
mov
shlb
or
or
fldenv
xor
subb
or
fs
stc
sahf
jbe
mov
cmp
dec
push
cmc
clc
cs
cmpsb
pushf
xchg
iret
mov
jp
adc
pop
add
gs
cmc
push
xchg
shrl
dec
shlb
xchg
dec
xchg
cld
add
push
mov
add
dec
loope
pushl
sbb
fcmovnbe
addb
cli
test
daa
stos
cmp
lret
push
sbb
int
push
and
idivl
dec
and
jae
or
popl
push
bswap
xchg
mov
and
cwtl
mov
fdivrl
fmull
mov
mov
or
mov
pop
shrb
pop
cs
lds
and
fbld
or
ljmp
mov
imul
add
jae
daa
or
inc
sub
xor
gs
pop
fildl
shll
daa
mov
and
xor
shrl
mov
cmp
dec
lcall
jnp
cmp
leave
adc
cmp
adc
cwtl
cmpsb
leave
fiaddl
add
jnp
pop
dec
pop
out
xchg
pop
clc
fnstcw
pop
enter
xor
arpl
mov
sub
push
push
shrb
sbb
sbb
icebp
into
mov
das
push
int
je
aam
jge
lods
pop
filds
out
sbb
insb
dec
shlb
push
in
mov
jp
fidivrs
pop
pop
adc
mov
out
out
inc
fstl
mov
adc
inc
int
ds
in
pop
mov
outsl
inc
or
mov
xchg
pop
xor
cmp
and
ret
ljmp
lret
mov
mov
aaa
xchg
pushf
dec
xchg
in
test
shll
or
stc
and
adc
nop
pop
inc
nop
stos
push
sbb
push
dec
pop
femms
inc
negl
inc
pop
and
mov
ja
out
mov
mov
addr16
inc
mov
loope
iret
mov
mov
inc
xchg
cwtl
pusha
xchg
aad
loope
mov
into
lret
pop
mov
fdivl
push
cld
push
xchg
repz
dec
addb
mov
pop
mov
lahf
adc
add
push
pop
mov
add
jmp
and
cmpl
inc
jb
jg
pusha
mov
repnz
mov
pop
add
lret
test
js
sub
fcomp
ror
stos
js
and
sti
or
add
out
xchg
push
jl
int
pop
js
movsb
sbb
cmp
out
jecxz
push
leave
sbbb
in
add
cld
pop
xchg
jg
sbb
cmpb
lods
mov
cmp
add
or
or
or
add
out
and
mov
popa
repz
push
test
xlat
out
test
sub
xor
imul
test
sub
sbb
cmp
mov
lods
insl
cmp
or
dec
iret
inc
gs
shll
fs
fcoml
fstpt
mov
orl
imul
mull
icebp
mov
fwait
push
mov
pop
pop
test
ja
mov
mov
adc
pop
mov
sub
jb
inc
push
aam
push
add
out
lods
mov
inc
decb
das
les
lods
cs
call
push
xchg
dec
ja
lret
jmp
pop
mov
in
jle
in
pop
rorb
pop
mov
mov
or
cmp
adc
mov
xor
aaa
lods
push
bound
int3
fcomps
pop
arpl
lahf
push
jb
mov
mov
jecxz
sti
out
lcall
jp
in
bound
arpl
xor
and
lods
pop
inc
sub
outsl
stos
loope
xchg
cmp
call
rclb
cmc
test
ret
enter
orl
addr16
add
fildl
rorb
ljmp
shll
mov
shl
stos
ret
enter
nop
add
mov
mov
stc
cmp
push
sub
iret
test
push
xchg
adc
inc
stos
daa
cmp
test
xor
inc
inc
mov
in
push
pop
add
cmp
or
or
lds
cmp
adc
mov
adc
cmc
xchg
mov
jne
stos
pusha
jns
sub
out
mov
fdivr
pop
xchg
lods
and
imul
rclb
rclb
add
mov
and
mov
push
loopne
in
sub
call
lcall
clc
mov
aam
inc
mov
out
sbb
push
mov
inc
mov
pop
push
rcrl
add
mov
jge
sub
insb
sub
mov
popa
addr16
add
fdivrs
leave
jb
leave
jnp
clc
sti
mov
add
fwait
or
xchg
ja
sbb
sbb
ljmp
push
or
mov
inc
dec
and
cltd
xchg
shll
and
jne
mov
pop
dec
das
or
sbb
or
outsl
gs
sbb
jmp
and
sub
jecxz
loope
cmp
clc
push
hlt
sub
pop
gs
pop
lods
sub
cmp
pushf
scas
mov
imul
xchg
lods
push
rorl
xor
push
or
mov
pop
ficomps
insl
xchg
es
pop
push
aas
or
stos
inc
in
dec
sub
sbb
cmp
mov
push
fcoml
mov
cmp
fistpl
add
mov
aaa
push
repnz
cwtl
sbbl
out
or
push
shlb
movsl
mov
inc
fsubp
mov
divl
inc
cmp
mov
mov
cli
scas
stos
jl
jg
lds
and
push
ss
pop
jle
pop
xchg
xor
es
ds
pop
push
add
or
and
sbb
xchg
loopne
fldcw
dec
xor
adc
ljmp
aad
mov
mov
ljmp
aam
fbld
loope
sub
push
push
rcl
adc
inc
movsl
pop
push
adc
andl
addr16
pop
mov
mov
jo
popa
jbe
jae
jae
mov
and
ja
nop
mov
inc
addr16
cmc
and
lds
pop
push
xchg
add
jecxz
iret
jne
in
mov
jmp
inc
movsb
mov
es
shrb
leave
xchg
data16
callw
cmpb
test
sub
push
and
jb
add
jp
jne
cmc
icebp
out
mov
mov
cmp
sub
or
push
mov
scas
push
mov
sub
push
gs
stos
into
mov
adc
mov
sub
dec
mov
in
add
loope
adc
insl
xchg
push
dec
add
lcall
push
pop
pop
mov
iret
pop
push
mov
inc
mov
mov
pop
mov
push
mov
jae
leave
sub
test
daa
stos
dec
lret
mov
xchg
imul
jb
pop
add
inc
testl
sbb
inc
mov
jno
test
xchg
clc
fucomip
shll
push
stos
adc
jnp
lock
xchg
int
push
jmp
xchg
leave
jle
subl
arpl
repz
xor
dec
insb
loopne
pop
pushf
cmp
inc
data16
lods
jne
test
mov
cmc
test
mov
sub
mov
cli
mov
jl
mov
xchg
xchg
outsl
insb
rcl
mov
das
pushl
fcoms
inc
iret
sub
adc
mov
mov
out
loop
fcoml
jp,pn
sub
add
cld
sbb
mov
pop
test
out
add
adc
negl
out
mov
xchg
pop
fidivrs
lret
dec
outsb
enter
mov
dec
lret
fistps
loope
xchg
or
xchg
jb
mov
popf
roll
repnz
inc
mov
les
lock
imul
xchg
ljmp
test
jl
scas
sbb
sti
lock
cmp
imul
adc
jg
jle
hlt
mov
movsb
xchg
push
popf
fs
cmp
fldl
or
sbb
cld
sub
mov
sub
std
iret
shrl
jbe
xchg
and
and
push
inc
test
inc
mov
lods
adc
test
fcomip
sarl
lods
pop
sbb
sti
jbe
js
mov
imul
push
fisttps
sub
push
ja
mov
cmp
in
xor
movsl
pusha
jno
pop
mov
inc
in
mull
mov
mov
fcomps
in
mov
lock
daa
add
mov
push
iret
adc
adc
aad
lods
mov
ret
inc
lock
cmp
jge
inc
mov
mov
adc
push
xor
pushf
push
lds
xlat
loop
movsb
mov
in
pop
jecxz
mov
cmp
loope
or
int
sub
in
sbb
xor
cmp
mov
ret
mov
jmp
movsb
mov
notl
mov
xchg
jg
in
lret
mov
lea
pushf
push
mov
mov
out
data16
add
es
test
xor
sub
jae
and
idivl
sub
clc
scas
ds
fmull
and
jnp
dec
sti
aaa
outsb
xchg
aas
or
mov
mov
insl
icebp
add
push
scas
sti
push
inc
rorb
xor
mov
push
mov
mov
inc
out
xchg
xor
jg
aad
cli
std
imulb
pushf
daa
inc
add
into
mov
sub
xor
test
cmp
or
sub
jb
fwait
lds
popa
mov
dec
jno
mov
xchg
popa
cmpsb
sbb
jbe
rcll
imul
push
stos
shll
popa
push
insb
std
sarl
adc
nop
push
in
mov
xchg
xor
fwait
mov
adc
stc
push
sub
pop
xchg
adc
or
icebp
leave
push
push
mov
sbb
arpl
push
jecxz
mov
or
push
dec
push
ss
xchg
push
cltd
rcr
sbb
push
mov
mov
test
mov
push
dec
xchg
es
ss
popa
dec
aam
jo
xlat
ret
into
xchg
popa
xor
lock
sub
pushf
shr
cmp
out
xor
andl
or
daa
aaa
sub
and
ss
mull
adc
sti
or
call
ss
cmp
pop
add
pop
mov
arpl
fstps
jae
and
xor
mov
enter
insl
je
out
jmp
push
mov
cld
xor
xor
loop
insb
das
lahf
or
pop
lds
incl
dec
and
or
dec
pop
inc
and
inc
push
fbstp
mov
add
cmp
test
movsb
sub
fldt
stos
mov
insb
lret
push
adc
fs
popa
xchg
inc
rclb
mov
jmp
mov
rcrl
subl
clc
sbbl
jg
pop
testb
fistpl
insb
ss
jnp
scas
dec
lahf
sub
push
lret
add
out
push
daa
push
orl
jl
filds
adc
fidivl
aas
inc
mov
mov
mov
das
push
fiadds
dec
int
rcrb
cmp
push
sub
int
xchg
adc
aad
sbb
pop
xlat
icebp
cltd
fcomp
push
sub
jo
inc
dec
xorb
mov
cmp
lretw
in
push
ss
aas
and
xchg
and
sub
push
sahf
test
ljmp
mov
aam
data16
jle
push
xchg
ss
mov
add
dec
jns
cwtl
sbb
ret
test
imul
sbb
pop
or
mov
lds
add
in
test
dec
mov
clc
ja
mov
push
adc
jl
or
adc
push
jmp
and
add
or
or
dec
jle
sub
in
imul
sub
pop
or
and
call
push
inc
xchg
shlb
imulb
inc
enter
or
out
add
lock
lahf
sub
mov
fists
mov
cs
out
loop
aad
movsl
icebp
cltd
push
push
mov
rorb
dec
push
jns
lods
push
cmp
sub
enter
adc
jecxz
les
stos
aad
dec
push
in
rcll
xor
loope
call
mov
punpckhbw
pop
and
out
out
xchg
cmp
idivb
mov
cmp
sbb
mov
and
pop
pop
negl
call
adc
xchg
repz
add
dec
adc
mov
mov
inc
pop
mov
aad
mov
sub
sub
hlt
jbe
lahf
jp
dec
mov
outsb
out
test
xor
loop
jbe
mov
in
in
jns
ja
mov
fsts
inc
or
shrb
xchg
insl
xchg
dec
lods
jo
insb
cmp
loope
repz
inc
cmp
movsl
jbe
push
mov
xor
mov
cmp
shrl
loopne
sub
pop
iret
mov
mov
fimull
adc
mov
and
in
or
jns
inc
sahf
xor
aas
orb
jb
xor
add
fwait
adc
mov
dec
scas
imul
or
pushf
jg
cmpsb
inc
dec
dec
push
pop
cmp
cli
lahf
lret
shlb
or
aas
xchg
sbb
shll
push
je
popf
cld
lock
add
aas
ret
xchg
xlat
sub
sub
popa
inc
pop
je
inc
ret
lahf
mov
iret
dec
out
inc
ret
rcrb
repz
mov
sbb
out
outsl
movl
pusha
call
fisttpll
push
aaa
adc
aas
jne
shrb
movsl
enter
lahf
add
xor
lcall
imul
pop
inc
push
clc
mov
fdivrl
add
cmc
push
push
leave
sbb
sbb
sbb
lods
stc
cmp
int
ficoml
scas
xchg
xchg
cmp
pusha
jp
pop
mov
push
fnstsw
adc
xor
sub
mov
push
push
lcall
test
sub
mov
sbb
sti
fldenv
gs
gs
mov
fisubrl
vpsubusb
cmc
and
mov
add
aas
punpcklwd
andb
scas
jnp
les
sti
sti
push
sbb
dec
mov
jb
rclb
mov
lods
jecxz
fs
sar
into
aaa
mov
sub
xchg
push
mov
movsl
cmpsb
arpl
lahf
cmc
pop
pop
aaa
loopne
stos
fwait
nop
flds
cmp
movsb
negl
push
mov
cmpsb
arpl
mov
mov
lcall
adc
mov
pop
in
and
mov
adc
push
jae
push
stos
dec
arpl
inc
xchg
inc
shr
push
and
ljmp
inc
push
jge
call
lcall
or
push
idivb
xchg
dec
aad
inc
mov
dec
and
sub
jbe
movsl
pop
mov
mov
outsl
adc
pop
jno
sbb
movsl
add
and
sub
stc
int
jae
in
adc
fldl
shl
ret
fstl
mov
es
insb
or
ds
je
and
mov
sub
mov
jge
int
and
mov
pushf
mov
sub
in
pop
push
jle
loope
loop
out
mov
push
loop
sub
mov
push
loopne
dec
mov
push
stos
push
pop
and
and
cmp
xchg
into
leave
iret
xor
push
cwtl
ss
test
sub
push
pop
add
mov
mov
xor
add
dec
push
sub
loope
orl
add
sub
notl
mov
hlt
shrl
mov
xchg
push
jo
inc
add
stos
pop
xlat
iret
in
add
imul
cmp
sbb
sub
mov
shl
daa
ffreep
mov
ret
pop
out
testb
std
xor
add
adc
adc
popf
cmpsb
mov
ds
push
xchg
lcall
les
add
mov
push
jbe
dec
xlat
out
lock
jle
mov
aaa
stos
outsl
adc
jmp
iret
jno
mov
cmpsb
sbb
out
popa
mov
int3
add
insl
push
idivl
andl
cld
push
out
push
xor
lods
sub
add
sub
js
xchg
dec
jne
loopne
sahf
popf
inc
adc
mov
rol
mov
xchg
pop
push
and
sub
jbe
adc
mov
xlat
cmpsb
sub
mov
mov
jp
stc
and
stos
dec
cmp
push
push
jg
mov
ret
jne
mov
sub
jbe
call
popf
sarb
dec
mov
enter
inc
push
adc
pop
push
xchg
cmp
int3
faddl
stos
test
push
sbb
or
shll
sahf
popa
test
fs
das
std
lahf
in
aas
and
jae
sub
insb
cmpsl
in
fisttpll
push
mov
sub
push
imulb
pop
jo
sbb
insb
cmp
ja
sbb
leave
loop
or
xchg
push
cli
mov
repnz
jbe
nop
sbb
iret
fmuls
dec
sub
in
mov
jns,pt
mov
sahf
pop
hlt
rcr
mov
cs
mov
aaa
sbb
push
test
adc
pop
mov
sbb
pop
aam
popa
in
adc
mov
cltd
lods
dec
je
mov
idivb
divl
insb
fiadds
mov
nop
mov
push
pop
sti
arpl
cwtl
insb
add
lret
in
mov
or
and
mov
xlat
and
push
popf
inc
xor
lcall
xorl
push
adc
ja
jecxz
dec
fimuls
out
sbb
pop
sbb
and
lods
int
xchg
fisubrs
scas
sub
int3
or
jle
loopne
lret
push
or
push
arpl
xchg
adc
imul
add
clc
adc
rolb
cli
loope
sbb
jnp
es
movsb
es
sbb
addr16
sahf
push
stos
ds
cmp
arpl
add
mov
ss
cmp
xor
add
dec
mov
pop
inc
in
loope
sub
iret
push
cmp
pop
mov
jbe
and
cmp
ret
mov
lret
rep
adc
pop
repnz
add
lods
or
jno
nop
ljmp
imul
mov
stos
mov
arpl
daa
icebp
or
jno
mov
movsl
push
adc
lea
adc
gs
xor
jne
inc
jno
inc
repnz
and
rcll
pop
push
popa
fcomps
fcmovnu
jl
cli
xchg
lcall
out
mov
mov
sar
xchg
jne
xchg
dec
jp
cmp
pmullw
ljmp
sbb
out
or
jb
push
xor
insb
dec
lahf
cmpsl
dec
bound
into
cmp
dec
icebp
fisubs
push
es
ror
sub
pop
mov
loop
mov
pusha
xchg
test
stos
sahf
push
add
sub
call
mov
mov
xchg
cmpsl
cmpsl
out
push
pop
shll
les
das
repnz
dec
insb
fsubl
rorl
imul
xchg
lods
ret
cwtl
sbb
adc
scas
cmpb
mov
mov
mov
push
rolb
mov
ja
pop
cld
push
in
pushf
loope
push
inc
adc
iret
roll
jne
jnp
mov
mov
pop
xchg
data16
cmpsl
add
aaa
dec
mov
data16
loope
jae
jnp
pusha
out
mov
int
push
sahf
stc
cmpsb
add
popa
jne
sub
jnp
pop
inc
sbb
out
sti
enter
dec
testl
mov
xor
add
lds
fsubrl
inc
jo
xor
cwtl
xchg
xchg
jbe
lods
lock
mov
pop
out
int
lods
hlt
mov
add
or
sbb
pop
jg
adc
push
aad
jns
add
mov
push
adc
pop
cltd
push
xlat
lds
incb
clc
cmp
cld
popf
jne
dec
cli
sbb
aad
xor
mov
scas
sub
fldl
int
cld
das
sahf
mov
lods
cmp
int3
cmpsb
push
insb
or
sub
iret
add
ljmp
stos
out
inc
cmp
pop
or
popf
rclb
sbb
jle
dec
and
and
pop
stc
loope
lods
sbb
push
dec
cmp
mov
push
push
outsb
inc
jne
jmp
cmpsb
enter
mov
imul
add
cltd
lock
popa
enter
mov
stc
pop
jecxz
mov
insl
jno
test
mov
add
cmpsb
mov
test
jge
jle
push
loope
inc
add
ficomps
data16
jecxz
push
lret
cmpsb
out
adc
stos
sub
sbb
rep
jbe
inc
shll
mov
mov
mov
out
or
xchg
mov
dec
dec
xchg
in
movsl
pop
fldt
xlat
decl
fcoms
sub
or
mov
jne
stos
jo
jo
mov
mov
pop
mov
jl
das
mov
and
push
dec
and
test
arpl
lcall
jae
or
nop
out
sti
mov
stc
xchg
add
mov
mov
clc
mov
or
lret
fimull
mov
aaa
jge
test
sbb
ja
shll
ret
je
jo
dec
mov
add
orb
cmp
push
inc
repz
push
pushf
out
jmp
rcrb
cmpb
push
xchg
lcall
mov
xorb
mov
push
out
hlt
jns
ret
xchg
jmp
pop
arpl
jle
xlat
push
mov
push
sahf
push
pop
sub
ljmp
xor
xchg
pop
pop
pop
cltd
or
nop
adc
cld
mov
inc
mov
loop
cmp
mov
dec
out
xor
inc
ss
lret
out
jecxz
add
imul
pop
loop
dec
pop
lods
outsl
add
or
push
in
mov
test
mov
inc
push
es
inc
xchg
cmp
fwait
lds
in
mov
in
lret
cmp
addl
int
sbb
inc
mov
adc
mov
jmp
jg
sub
sarb
push
dec
cmp
add
das
or
test
inc
sahf
mov
aaa
in
and
stos
repnz
add
jp
aam
test
jmp
or
add
pop
dec
ljmp
pushf
push
pop
jae
ljmp
cmpsb
push
mov
jecxz
inc
js
mov
jecxz
in
arpl
ss
je
push
push
mov
mov
mov
mov
pushf
in
cld
xor
ja
sbb
inc
paddsb
clc
mov
ret
ffreep
shll
popf
mov
sbb
shll
dec
testb
jno
jle
add
repnz
mov
mov
mov
leave
loope
imul
loop
sbb
shl
les
lahf
cwtl
pop
cmpsb
jmp
call
cmpsl
lds
decb
std
jno
jge
adc
jne
hlt
enter
push
mov
popa
in
xor
pop
jecxz
nop
xor
and
push
push
aaa
inc
add
shrl
dec
lea
dec
loopne
sub
push
pop
mov
popf
mov
es
push
test
insl
in
jb
lahf
mov
inc
clc
fidivrs
loop
leave
out
push
push
hlt
in
int3
pop
xchg
pusha
cmpsb
inc
sarb
xor
add
gs
mov
das
clc
pushf
rcrb
sbbb
xor
loop
lret
jne
inc
and
sbb
stos
enter
enter
shrl
jb
popa
cli
pop
mov
out
mov
rolb
insb
in
dec
push
aam
pop
push
adc
cmp
ja
sti
mov
pushl
push
loope
int
adc
dec
shll
push
cmpsb
or
ret
push
dec
test
mov
pusha
mov
mov
inc
in
sub
jl
dec
or
sbb
dec
out
xchg
in
out
sahf
jne
daa
jle
mov
xor
cmp
aas
rorb
pop
inc
gs
add
xor
jge
pop
push
mov
xor
sub
mov
rcr
mov
fists
negb
pop
iret
sahf
mov
inc
mov
scas
fidivrl
loope
jl
push
dec
lock
pop
add
test
cmp
call
je
mov
pushf
and
aaa
sbb
xor
fucom
fsts
data16
scas
into
inc
in
fisttpll
mov
and
jge
adc
std
iret
jp
ljmp
mov
jb
negl
icebp
test
aas
rorb
aas
push
out
or
test
mov
fisttpll
pop
jp
mov
insl
scas
pop
xchg
int3
jmp
aas
int3
dec
repnz
cmp
jo
shlb
mov
mov
mov
push
mov
xchg
call
xchg
mov
sbb
add
pushf
lcall
mov
iret
lahf
lea
jns
inc
je
out
xor
mov
lock
cmpsl
and
and
jno
sbb
pusha
mov
mov
imulb
arpl
int
mov
mov
dec
nop
dec
mov
outsl
dec
fdiv
dec
pop
add
movsb
add
stos
imul
inc
loop
cld
jns
dec
push
outsb
xor
xor
xchg
clc
sub
pop
mov
repz
xor
lock
clc
scas
xchg
shrb
jecxz
cld
mov
add
scas
cmp
dec
mov
adc
fisttps
pop
fistpl
andb
jbe
jo
lret
in
incb
hlt
lea
mov
outsb
in
pop
xor
std
sbb
sub
test
ljmp
push
mov
ds
mov
aam
mov
sbb
mov
cld
test
or
and
test
jae
test
iret
inc
inc
mov
and
cli
test
orl
cmp
cmovle
rol
or
leave
mov
fwait
adc
pop
adc
fs
pop
out
mov
or
out
push
idivl
or
mov
dec
mov
hlt
shlb
fwait
mov
lret
xchg
dec
jo
lea
cmc
outsb
andb
add
cmp
popa
test
bound
insl
sbbl
add
pop
inc
xlat
sbb
into
xchg
testb
or
mov
and
add
cmp
out
adc
ljmp
fwait
inc
out
aad
aaa
sub
mov
fidivrl
fdivs
or
mov
adc
mov
pusha
std
insb
lcall
out
enter
mov
sub
mov
and
mov
shr
sbb
cmpsl
or
leave
int
jp
scas
mov
daa
ret
aas
mul
sbb
mov
cs
mov
xor
xchg
cmp
outsb
call
jb
mov
nop
ficoml
jae
and
addr16
test
mov
and
lea
dec
test
fs
ret
mov
pop
pushl
mov
jmp
pop
bound
scas
or
xor
iret
lretw
cmc
lods
das
or
out
mov
sbb
inc
xor
xchg
call
jno
xchg
int3
mov
inc
aaa
scas
ss
loop
pop
int3
inc
aaa
push
jmp
dec
or
rol
jmp
data16
test
push
xchg
cmp
jo
pop
arpl
scas
leave
mov
pop
add
fadds
fnstenv
and
das
xor
js
inc
popf
jo
mov
ret
shl
rep
mov
sub
fwait
sbb
les
xor
enter
jmp
in
lcall
mov
push
mov
bound
lret
dec
mov
add
xor
repnz
xchg
out
xorb
jo
xor
jecxz
mov
sar
ret
xchg
jge
pushf
push
les
ds
notl
bt
jmp
outsl
mov
ret
push
push
xor
sbb
rcrl
sub
out
xchg
jge
pusha
sub
sbb
jge
push
test
xor
push
pop
and
push
insl
movsb
mov
test
imul
sbb
sti
sbb
sbb
sahf
and
inc
and
sub
insl
or
xchg
jb
push
dec
mov
insl
mov
loopne
pop
lds
mov
nop
and
adc
insl
adc
repnz
imul
loopne
mov
aam
push
xchg
pop
stos
rcrl
call
lret
in
incb
ljmp
stos
mov
xor
pushl
inc
push
test
add
iret
loop
movsb
mov
jmp
push
std
dec
out
testb
pop
mov
int
test
dec
test
mov
jmp
pushf
ljmp
mov
sbb
adcl
add
rcrb
cmp
popa
mov
not
cmc
jno
jo
lahf
dec
ja
xor
cmp
sub
hlt
mov
sub
mov
mov
jg
gs
push
cmp
repz
je,pn
or
mov
aam
int
xchg
push
xlat
cmp
jmp
xchg
outsb
mov
xchg
jbe
std
mov
add
and
or
lock
sbb
popf
mov
push
xchg
pusha
xchg
adc
dec
lahf
or
jnp
mov
shrl
mov
arpl
subb
xlat
add
xor
sbb
std
mov
inc
xchg
xchg
cmovp
adc
lods
pop
inc
fs
cli
or
pop
into
aad
adc
jg
mov
jge,pn
movsb
and
inc
mov
shl
jb
in
or
xchg
roll
mov
xchg
push
cmc
pop
addb
test
lcall
and
add
add
dec
add
mov
das
pop
popa
jns
mov
nop
test
sbb
inc
jnp
pop
pop
or
jno
stos
test
dec
push
jg
or
enter
mov
into
jge
repz
lods
pop
imul
imul
xchg
sbb
rcrl
nop
loope
xchg
stos
repnz
dec
in
mov
push
mov
into
dec
roll
imul
pop
insb
imul
cmp
jmp
mov
xchg
and
mov
push
xor
leave
addb
icebp
dec
pushf
mov
xor
adc
cwtl
rclb
and
sahf
jl
aaa
cmp
imul
pop
mov
sbb
push
xor
xor
xchg
pop
lret
xchg
lods
sahf
outsl
shrb
aaa
pop
lcall
mov
jg
lahf
xor
cs
ljmp
xchg
lahf
jge
mov
sbb
push
repz
push
dec
into
shl
iret
pop
popa
hlt
xchg
xchg
fstpt
icebp
repnz
dec
xorb
gs
rcr
pop
scas
add
fbstp
fs
xchg
mov
add
add
out
or
mov
pop
mov
repz
mov
lret
loopne
sub
adc
jne
xorb
jmp
aad
pop
ret
in
in
jae
mov
out
add
jns
sub
imul
xchg
ret
les
fisubl
push
out
sarb
cmp
mov
hlt
cs
aaa
push
mov
push
jecxz
out
ljmp
mov
add
mov
repz
call
inc
pop
and
jo
cmpsb
mov
mov
rcrl
sub
bound
jae
dec
scas
imul
daa
ljmp
or
push
std
mov
mov
adc
in
and
aaa
repnz
adc
xor
les
ljmp
adc
loopne
pop
mov
xchg
enter
jmp
or
stc
fcompl
mov
xchg
adc
insb
call
mov
dec
int
scas
add
fbstp
mov
fidivrl
xor
cwtl
jmp
mov
nop
rcrl
xor
cltd
aaa
mov
xchg
aaa
jbe
not
aas
mov
mov
in
ss
mov
int
fldenv
repnz
push
out
xchg
inc
cmpsb
xlat
mov
sub
push
test
shrb
in
repz
nop
add
adc
jge
ja
dec
out
stos
ja
mov
dec
or
mov
push
pop
js
push
fwait
out
rcrb
int3
or
cmpsb
mov
pop
adc
sbb
test
in
and
mov
pop
fists
std
fs
xchg
dec
pop
in
push
pop
lret
mov
in
xchg
mov
and
sub
rcrl
mov
jecxz
xorb
and
and
aad
xchg
repnz
sub
dec
cwtl
pop
stos
dec
cld
pop
mov
xchg
and
outsl
rcrl
push
mov
xchg
adc
in
inc
xor
fiadds
sbb
adc
xadd
out
gs
andb
aas
or
inc
sti
push
adc
cmp
sub
in
clc
pop
push
and
xchg
adc
sub
test
ds
sub
test
outsl
es
into
lods
inc
popa
pop
add
fs
mov
mov
loop
movsb
mov
xchg
leave
cmpsl
push
mov
insb
sub
sbb
mov
xchg
add
mov
dec
pop
dec
testl
das
or
mov
gs
cmp
mov
hlt
dec
iret
push
xchg
mov
push
lds
sti
adc
xor
mov
mov
pushf
sar
mov
shlb
xchg
add
mov
cmp
jg
pop
adc
out
dec
out
data16
cs
jo
out
repz
pop
and
add
xchg
or
lret
adc
ja
dec
pop
rcr
sub
cmp
sub
clc
xchg
pop
or
pushf
push
jge
mov
add
gs
push
cmp
mov
or
cmp
lods
gs
loopne
sub
popf
adc
add
push
imul
sti
adc
jb
sbb
dec
insb
out
jae
cltd
adc
sbb
xchg
mov
mov
stc
out
fidivl
sbb
scas
insl
fcoml
mov
fsubr
add
push
mov
jno
pushf
push
mov
stos
sbb
es
scas
dec
mov
mov
pop
push
sbb
movsb
cli
dec
fld
push
push
insl
mov
jge
jns
inc
sbb
fsubr
pop
push
dec
mov
xchg
sbb
mov
pop
or
std
inc
lds
fldl
mov
pop
pushf
push
pop
push
ret
mov
sbb
xorl
int
mov
add
leave
ret
ds
xor
leave
push
jecxz
sbb
and
push
sbbb
movsb
in
lds
cmpsl
add
add
aaa
xlat
xchg
and
dec
add
jmp
xor
mov
inc
test
xorb
lds
sbb
inc
mov
dec
ds
xor
aas
int3
andl
je
imul
and
aaa
mov
cmpsb
ja
and
ja
repnz
lret
in
aam
loope
push
jb
loop
xchg
ret
lock
in
repnz
xor
and
enter
mov
pusha
movswl
xor
loop
rcrb
fnsave
js
sahf
in
dec
mov
in
lods
movsl
cld
mov
popa
movsl
shrl
jns
pop
cmp
cmpsl
mov
cmc
xchg
outsb
stos
call
lret
or
std
xchg
mov
cmc
mov
in
push
negl
stc
lcall
jo
rol
xor
out
pop
adcl
jecxz
les
insb
dec
mov
cmpsl
repz
push
cmp
cwtl
ds
xchg
sahf
mov
xchg
add
adc
push
push
pop
ret
pop
jmp
adc
movb
xlat
xor
pop
movsb
mov
push
pop
movsl
jle
loopne
stc
xchg
mov
cwtl
nop
and
mov
scas
inc
cmp
xor
adc
jno
and
pop
cltd
cmp
xchg
hlt
mov
sti
xor
decl
aaa
in
test
aas
test
jns
scas
pop
sub
mov
sbbl
xchg
fneni(8087
xchg
mov
xchg
sub
adc
dec
jns
push
cltd
xchg
and
mov
movsl
add
testb
int
aad
sbb
sub
mov
dec
cmp
shrb
out
jecxz
loopne
xor
dec
cmpsb
mov
out
adc
jle
adc
mov
jb
add
mov
pop
stc
cmp
nop
int3
int
dec
cmp
sub
ret
or
xlat
lds
scas
stc
add
in
ret
nop
and
mov
pop
lods
outsl
jl
or
inc
mov
inc
int3
hlt
sarl
pop
in
js
xor
sbb
push
lods
cmp
movsb
icebp
cmp
add
and
test
cmc
nop
sbb
nop
jno
mov
lea
fwait
pop
pop
aam
out
dec
or
mov
adc
jle
mov
sbb
mov
lret
insl
pop
lret
into
mov
lods
mov
inc
popa
inc
pushf
push
xchg
repz
sbb
movsl
xchg
add
in
inc
pop
push
xchg
push
aam
into
out
xor
xchg
rcrl
adc
jle
arpl
or
das
jg
subb
and
mov
out
adc
mov
aas
popl
adc
in
test
mov
jle
in
loop
icebp
les
xchg
mov
mov
int
cmpsl
jne
dec
inc
jns
push
lahf
push
sub
xchg
mov
xchg
mov
adc
or
add
leave
scas
pop
mov
je
ret
pop
fisttps
xchg
cmp
xchg
insl
lock
mov
inc
rclb
cmp
push
mov
xor
mov
cmp
cmp
rorb
inc
incb
push
pop
xor
sbb
int3
push
inc
pushf
jecxz
push
jmp
test
in
pop
cmp
sub
addr16
std
fldt
inc
adc
aam
mov
clc
dec
jo
pop
out
inc
shlb
mov
leave
pusha
lahf
ficomps
loope
mov
and
hlt
nop
push
cmp
inc
push
enter
mul
adc
and
and
adc
fcoml
shll
dec
push
cmp
insl
stos
enter
aad
pop
mov
das
add
xchg
jge
stos
lds
xchg
dec
js
nop
ja
add
mov
push
dec
out
cmp
mov
rol
add
ljmp
xchg
mov
or
xor
in
dec
jns
mov
sub
call
jge
aad
dec
js
or
out
pushf
mov
xchg
fisttps
cld
cltd
mov
xchg
enter
sub
icebp
lock
mov
inc
enter
jp
jnp
imul
pop
test
or
adc
pop
outsb
jnp
inc
xlat
push
mov
dec
jb
xchg
and
lret
pop
fimull
mov
mov
test
ds
cs
shll
inc
sub
sbb
je
sbb
fisttpll
fldl
pop
push
dec
sbbl
adc
movsl
add
push
es
testl
shl
jmp
mov
push
pop
sbb
lcall
lcall
pop
xor
mov
popf
adc
mov
shlb
mov
push
add
and
arpl
pop
mov
mov
xchg
fs
loop
xchg
xchg
inc
mov
pop
jp
enter
aad
or
outsl
pop
pop
jb
mov
in
leave
js
stos
mov
dec
nop
pusha
mov
add
adc
icebp
aaa
xor
inc
mov
outsl
and
sub
lret
ss
in
lods
mov
mov
mov
mov
push
xchg
lock
loop
sub
dec
jle
enter
dec
xor
pushf
and
ret
in
push
dec
fistps
adc
fidivl
adc
jbe
pop
cld
cmp
bound
daa
push
aad
imul
xchg
test
leave
jbe
test
cmpsl
fmul
inc
daa
fs
adc
fsubrl
sti
cmp
xor
insb
inc
nop
cmpb
adc
stos
into
xchg
mov
adc
testl
jno
lea
ds
jmp
sbb
jl
ret
adc
fiadds
movsb
addr16
ret
ljmp
sub
mov
adc
adc
dec
nop
xchg
pushf
or
adc
popf
xchg
roll
in
call
pop
xlat
jb
jne
mov
fists
or
popa
sbb
cmp
call
shlb
repz
xor
mov
lock
add
pop
les
mov
xor
cli
jg
adc
push
inc
adc
stc
cld
push
adc
xlat
inc
push
stc
adc
mov
movsb
xchg
outsl
and
mov
push
jns
add
movsb
inc
es
loopne
adc
jbe
adc
cmp
lods
mov
in
ret
or
cld
push
mov
pop
xchg
lcall
dec
lahf
sub
outsl
or
sbb
push
arpl
pop
cld
iret
push
stos
jp
divl
jmp
jnp
scas
xchg
stos
test
clc
test
aam
mov
or
test
out
scas
jb
out
call
xor
vpcmov
ret
iret
add
test
jo
jnp
and
mov
call
jns
sub
sub
xor
mov
jae
aas
cmpsb
xor
lock
loopne
adc
add
xor
add
fldenv
cli
lret
mov
int3
xchg
pop
sbb
sub
aad
add
mov
cmpb
ss
mov
pop
mov
dec
mov
xor
vpshlw
test
and
pop
jns
xchg
push
ljmp
sub
adcb
aas
aad
ret
jae
ja
mov
ja
je
outsb
ljmp
imul
out
lcall
ds
dec
xchg
xlat
movsb
push
movsl
pop
sub
test
mov
cld
mov
jbe
in
les
hlt
in
fsubrl
cmc
loopne
jle
jmp
lret
inc
add
or
aaa
xchg
add
lahf
mov
push
xor
xchg
inc
in
pop
xor
lods
dec
sub
in
and
pushl
push
imul
xor
push
clc
mov
outsl
rol
mov
cmpl
inc
js
clc
inc
repz
cld
ja
cmp
movsb
mov
jne
xchg
imul
clc
adc
dec
mov
add
movsl
lret
mov
adc
pushf
and
mov
iret
xchg
sub
inc
ret
sbb
jmp
out
mov
xor
add
in
inc
iret
sub
mov
add
adcl
add
mov
mov
lods
add
jmp
cmc
int3
stos
add
cltd
jnp
scas
test
xchg
addr16
addr16
fwait
mov
imul
mov
dec
sub
or
inc
jne
dec
adc
cld
mov
sub
xor
sub
and
test
xchg
or
and
jl
test
fs
in
rcrl
out
xchg
neg
push
mov
sbb
mov
clc
mov
insb
mov
in
or
shrl
jge
and
popf
pop
mov
adcb
add
sub
pop
aas
ljmp
mov
ljmp
mov
jl
cld
divb
jp
in
push
aas
arpl
inc
lds
sbb
js
mov
add
scas
lods
sbb
jecxz
scas
dec
lahf
je
push
out
mov
push
push
jl
xchg
add
inc
or
push
mov
cmp
or
and
orl
dec
lods
aaa
jecxz
out
or
fidivrl
xor
pop
add
cmp
xchg
cmpsb
jmp
std
lods
lcall
call
in
into
add
inc
cmpsl
and
dec
cmc
cmpl
pop
pushf
pop
sbb
mov
test
pop
mov
jecxz
mov
rep
adc
xor
dec
mov
xor
jno
push
clc
sahf
dec
and
cmp
cmpsb
mov
faddp
fnstenv
scas
test
in
out
inc
and
aaa
pop
dec
push
in
add
stos
shll
stos
push
aas
jno
stos
scas
hlt
loopne
lcall
xchg
in
mov
cs
rcl
xchg
rorl
mov
mov
mov
sub
in
out
in
loopne
push
cwtl
mov
call
jns
fimull
push
mov
mov
inc
jbe
movsb
mov
lock
dec
ljmp
sub
popa
lret
xor
push
lret
dec
cmp
clc
jge
imul
sub
adc
fwait
stos
shrb
sub
sbb
xchg
and
call
aad
and
inc
dec
sub
push
mov
leave
repnz
push
outsl
es
movsl
enter
push
mov
xchg
jl
mov
adc
lahf
mov
cld
sti
shll
ss
pushf
mov
sbb
add
mov
das
cmpsb
lret
jp
call
inc
pop
je
adc
jnp
pop
lds
jle
xchg
cmpsb
jns
push
mov
sbbb
jo
sbb
mov
enter
rcrb
stos
out
movsl
outsl
fwait
lret
cmp
fisttps
add
in
push
iret
cmp
pop
imul
fimull
xor
cli
push
cmp
sub
cmpsl
rcrb
lahf
jne
and
xlat
sub
addr16
sub
dec
inc
pop
sub
call
and
cld
sbb
mov
fimull
mov
in
add
cmp
test
mov
pop
pop
mov
xor
loop
mov
das
ljmp
addl
std
dec
push
xchg
jge
adc
inc
in
cmp
lret
addb
add
into
xchg
pop
out
jns
dec
inc
add
fs
mov
or
addb
outsl
mov
repz
mov
mov
jnp
sub
mov
xchg
stos
into
xor
sbb
and
push
scas
decb
imulb
cs
mov
and
push
insb
push
jmp
adc
mov
inc
mul
inc
inc
ret
jmp
les
fs
jg
stos
adc
scas
into
aaa
lret
and
test
pop
dec
aas
xchg
jbe
mov
mov
packsswb
lahf
mov
dec
mov
ljmp
negb
lahf
sbb
push
movsb
cli
mov
cltd
sbb
dec
js
mov
mov
loop
push
push
in
dec
jnp
xchg
add
add
test
sbb
pushf
loop
dec
dec
jl
pop
scas
pop
pop
fsubrl
cmpsb
out
mov
js
cmpb
enter
mov
in
cs
push
loop
shlb
adc
inc
cwtl
or
dec
inc
pop
cmp
pop
dec
gs
les
mov
sti
loop
xorl
mov
data16
mov
icebp
sbbb
popf
cli
pop
divl
mov
and
nop
xor
add
stos
adc
loope
jbe
mov
push
or
and
loopne
pusha
je
cmp
dec
sbb
les
sbb
cmp
mov
mov
insl
and
lahf
cmpsl
out
in
mov
loop
mov
xlat
mov
mov
adc
aam
scas
jne
adc
scas
in
xor
mov
jne
and
outsl
jecxz
xchg
mov
jae
sub
scas
mov
dec
enter
inc
in
and
mov
inc
lods
lea
leave
sbb
cwtl
les
push
int
add
dec
adc
sub
and
mov
jne
and
es
clc
stos
jecxz
dec
push
lea
xchg
mov
dec
inc
fcmovu
enter
aaa
repz
orb
fwait
lahf
cs
jbe
lds
ljmp
mov
lcall
sbb
sahf
in
leave
lret
pop
dec
ljmp
sub
test
push
fdivs
idivl
shlb
push
cmpsl
loopne
inc
xor
push
incb
aam
je
ficompl
cmp
mov
pop
push
push
jae
cmp
in
test
leave
stos
mov
clc
ret
and
aas
in
imul
pop
cmp
loop
inc
cmp
cld
xor
test
xlat
or
out
or
sbb
mov
inc
jbe
push
adc
dec
andl
adc
sbb
in
adc
imulb
inc
xorb
shl
aad
mov
sbb
aad
lock
push
add
and
scas
lret
pushf
aaa
js
test
push
leave
cmpl
or
stc
push
pop
lods
jno
mov
fdivl
mov
frstor
popf
mov
out
jp
dec
es
inc
out
lods
das
sub
mov
fldcw
xchg
mov
and
adc
aas
pushf
lcall
mov
stos
sub
xchg
or
push
imul
das
inc
and
jno
mov
dec
cmp
push
add
sbb
sahf
dec
mov
inc
ret
pop
mov
adc
iret
es
fnsave
dec
arpl
fs
xor
std
mov
push
cmp
dec
int3
mov
cmp
xor
std
cmp
mov
fbld
movsb
pop
lods
es
sub
push
in
mov
mov
pop
cmp
fiaddl
mov
sarl
in
mov
mov
cmpsl
in
out
adc
push
xchg
cld
std
das
jns
test
pop
sti
leave
add
sub
mov
cmp
and
xor
fucom
mov
or
jno
loope
cmpsl
xrelease
sub
imul
cs
sub
cli
jbe
jno
into
ds
mov
out
cmp
xchg
lret
mov
and
fcmovu
sbb
and
lahf
and
rcrl
lods
clc
add
dec
out
loope
xchg
and
imul
pop
xor
imul
lcall
xor
mov
push
int3
pop
lret
push
sti
mov
pop
ret
mov
into
dec
and
mov
aam
sbb
into
xchg
xchg
push
push
outsl
adc
and
inc
not
xchg
insl
rclb
xchg
js
fisubs
scas
cmp
outsb
pusha
dec
pop
xor
std
inc
out
daa
aas
pop
xchg
dec
jns
xchg
loope
push
add
fcomps
adc
xchg
xor
scas
adc
jmp
fnclex
inc
es
test
adc
dec
sbb
pop
dec
subb
mov
iret
movsl
test
js
roll
pop
outsl
scas
push
inc
ss
inc
pop
jnp
insl
aad
loopne
xchg
movl
fwait
pop
push
and
movsl
and
ficompl
cmp
je
fdivr
dec
adc
and
movsb
bound
mulb
jnp
sub
cmpsb
inc
adc
mov
pop
dec
inc
mov
dec
inc
out
inc
int3
sar
inc
jecxz
mov
stos
push
lods
dec
stc
mov
add
add
mov
sub
test
flds
add
add
mov
adc
cltd
test
loop
push
mov
gs
lds
sbb
ja
pop
aas
mov
testl
in
insl
sub
xor
adc
rcr
pop
push
push
push
lods
cmpsl
mov
jge
es
cmp
fs
jo
cmpsl
call
cmp
pop
insl
or
jbe
adc
push
test
push
mov
sub
das
daa
sub
lret
lods
jns
frstor
mov
into
ljmp
enter
pop
ds
incb
xchg
sbbb
testl
adc
mov
rclb
pop
in
xchg
xchg
ja
ss
loope
add
or
xchg
jbe
fbld
adc
adc
imul
jg
cld
hlt
xor
mov
ja
pushf
sbb
inc
dec
out
aas
sbb
orb
or
pop
es
icebp
xor
pop
sbb
scas
xchg
and
add
movsb
sub
sub
mov
sbb
les
pop
jae
ss
sti
je
dec
popa
adc
aaa
pop
xchg
dec
cmp
lahf
xchg
mov
dec
in
mov
rcrl
dec
jbe
and
out
lea
iret
lcall
jo
fstl
pop
mov
sbb
dec
out
imul
fsub
and
push
int
adc
enter
addl
push
in
cmp
cmp
cmp
xchg
and
inc
sub
lret
rcr
push
orb
hlt
adc
and
pop
jmp
insb
inc
flds
mov
cmp
sub
inc
mov
rcl
pop
cld
dec
sbb
lret
call
jge
lds
ret
adc
int3
xor
mov
dec
jno
jge
jl
pop
jne
rcl
insb
jo
imul
pop
adc
inc
inc
outsb
js
aas
ds
sahf
jp
ja
or
mov
push
xor
cwtl
into
sbb
xchg
add
decl
or
sbb
add
push
push
aad
call
inc
push
mov
aaa
cmc
fadd
outsb
fidivrs
lock
std
fsubrl
and
loopne
out
lcallw
scas
xchg
lods
xor
pop
cld
popa
cld
cmp
adc
daa
push
jl
ljmp
jne
cwtl
push
inc
push
dec
cmp
fsubl
or
jge
mov
add
fwait
sbb
xor
stos
fbstp
and
adc
and
xchg
das
push
cld
inc
xor
data16
fildll
pushf
sub
and
xor
push
mov
out
les
fnstcw
dec
push
jle
xchg
arpl
mov
lea
or
into
fld
dec
out
mov
fcmovnbe
adc
dec
cmp
and
mov
xor
mov
or
inc
add
shrb
mov
test
sbb
fdivrs
out
push
test
js
lret
push
test
aaa
fdivrl
cmpb
jmp
and
bound
and
fdivrl
test
dec
xor
cmp
sub
clc
lret
add
mov
in
out
fidivl
mov
mov
inc
jo
push
sbb
movsl
add
pop
mov
test
mov
jne
imul
and
stc
into
dec
adc
inc
sbb
into
sarb
add
or
stos
fildll
ds
jg
and
mov
xchg
xchg
adc
lret
sbb
cmp
enter
popa
pop
inc
imull
ja
imul
pop
lcall
mov
out
mov
sub
pop
lea
gs
shlb
inc
in
dec
mov
popf
inc
clc
lret
sarb
stc
dec
pop
add
push
jo
and
inc
mov
push
xchg
sub
push
lods
xchg
shrl
test
sbb
fistps
inc
mov
cmp
fildl
add
or
es
test
fstpt
mov
std
mov
cmc
sub
mov
fisubrs
mov
mov
sbb
out
add
pop
jp
lret
and
or
daa
hlt
inc
ds
and
or
out
xor
xor
lcall
mov
mov
mov
in
call
int
fstpt
or
sbb
inc
cli
add
pushf
push
test
out
push
out
push
pop
pop
dec
dec
jb
fsubrs
andb
xchg
jg
loop
dec
sti
icebp
scas
andb
mov
data16
xor
push
xor
loop
cmpsl
mov
loopne
adc
jge
sbb
sbb
mov
push
pop
rcrb
stc
add
pop
xchg
adc
push
push
inc
les
aaa
jbe
in
xlat
movsl
lods
push
sub
std
cmp
sub
and
pop
lds
shrl
leave
ret
mov
or
push
into
jno
inc
push
popf
insb
adc
in
lcall
nop
pop
and
stos
popa
push
cmc
mov
mov
lea
mov
adc
popf
insl
add
cmp
nop
mov
cmp
js
mov
shr
sahf
mov
inc
dec
mov
hlt
and
inc
outsl
pop
push
call
pusha
jae
scas
sbb
mov
mov
call
xchg
and
shlb
aam
int
sub
testl
je
push
leave
out
rclb
inc
jbe
xchg
pop
int3
jmp
lds
sub
sub
gs
sti
sbb
cmpsb
test
sahf
lea
push
iret
dec
xor
xchg
call
xchg
lahf
nop
and
sbb
loopne
test
fdiv
cmp
outsl
push
rclb
addl
push
cmp
icebp
mov
mov
cld
sbb
aad
loop
xchg
mov
arpl
fisubrl
mov
push
sub
pop
imulb
fldcw
or
jl
xlat
test
add
push
xor
scas
inc
hlt
mov
shr
bound
xor
sub
or
inc
dec
pop
jge
stc
xor
inc
scas
test
rcrl
xchg
mov
pop
movsl
inc
in
xchg
sbb
ljmp
lea
push
lret
pop
inc
std
outsl
jecxz
cmp
insb
cmpsb
jo
xorb
outsb
sbb
in
inc
roll
jae
push
mov
dec
movsl
cmc
inc
cmpsb
adc
mov
test
push
iret
out
xchg
push
push
push
and
ja
sub
lods
pop
sub
fstpl
sub
loop,pt
add
or
daa
inc
enter
lahf
adc
cmpsl
and
adc
lds
bound
sub
imulb
out
mov
inc
xchg
xlat
shll
push
negl
jmp
lds
and
xor
xlat
jno
push
filds
or
xchg
add
jp
data16
inc
inc
mov
ret
clc
stc
aam
lahf
fnstsw
lds
hlt
mov
and
jae
in
sub
mov
jo
addr16
outsb
iret
fldl
jg
sub
mov
adc
js
sub
sub
sub
mov
dec
out
push
xlat
sbb
clc
cmpsb
popf
ss
out
dec
push
xor
and
std
xlat
iret
aaa
les
dec
pop
xchg
push
outsl
addr16
test
cmp
pop
jne
dec
fildll
aad
sub
jecxz
push
dec
scas
push
outsl
aaa
mov
lret
mov
push
xchg
mov
repnz
pop
sub
xor
in
out
ljmp
mov
mov
mov
jle
fidivrl
js
jbe
inc
jl
lds
int3
dec
mov
sbb
pop
pop
imul
lcall
push
xor
xor
cs
fbstp
push
adc
cld
adc
jg
dec
jbe
mov
and
enter
rclb
ret
sti
cmp
cmpsb
sub
icebp
add
arpl
inc
sub
in
popf
inc
jp
xchg
dec
xchg
pop
dec
inc
pushf
xor
jmp
lcall
add
jae
add
daa
add
adc
or
lret
nop
or
dec
pop
mov
pop
push
inc
xchg
out
mov
in
and
sbb
fnstsw
push
divb
daa
adc
dec
push
dec
sub
movsl
cmp
loopne
fdivs
int
dec
mov
and
clc
inc
push
data16
xor
adc
sub
xchg
xlat
pop
int3
jno
add
push
and
mov
xor
dec
or
addr16
std
addl
ljmp
int3
push
stos
pop
les
add
add
lret
inc
sbb
adc
mov
and
sbb
in
lods
or
or
fisubrl
xor
bound
shlb
xor
and
sbb
stos
push
mov
fnstcw
ret
lahf
int3
leave
addb
adc
mov
lcall
loopne
jp
pusha
arpl
xchg
pop
enter
or
es
hlt
ret
jmp
fsub
or
mov
sub
ret
rcll
inc
cmp
nop
fisttps
mov
enter
rcrl
roll
pop
adc
mov
popl
aam
mov
fbld
fcomps
mov
jmp
cs
aad
jg
push
gs
jb
inc
cmpsb
lock
nop
sub
pop
inc
rclb
jo
sbb
push
fmull
and
push
js
pop
xchg
cmp
rolb
push
fmull
pop
mov
sbb
add
inc
lahf
leave
sub
xor
pop
popf
or
sbb
roll
and
push
push
or
fcoml
sbb
out
mov
rorb
mov
xor
lock
test
cwtl
sbb
gs
stos
inc
aas
push
jb
adc
arpl
stos
xchg
mov
mov
xor
fdivl
mov
sbb
dec
shl
daa
xor
inc
mov
inc
je
out
fs
fs
cmp
inc
sbb
pushf
iret
rclb
dec
xor
out
or
test
sub
xor
lret
push
mov
sub
cs
sub
jno
pop
clc
xor
xchg
mov
cmp
mov
add
int
jge
xchg
ljmp
sbb
je
xor
in
jb
add
sbb
lret
mov
rorl
mov
adc
fistps
mov
sbb
sbb
jns
stc
adcl
clc
inc
popa
mov
sbb
xchg
inc
xchg
lock
inc
loope
xchg
sub
test
mov
jns
outsl
cmpsl
data16
cmp
popf
les
popf
or
push
xor
cmpsl
add
xchg
push
outsb
pop
icebp
call
cmpsb
lea
bound
fdivrl
out
into
xchg
nop
sub
sub
movsl
cmp
adc
add
scas
pop
mov
leave
test
setb
movsl
aad
ljmp
std
ss
push
andl
fbld
sbb
and
stos
sarb
pusha
imul
xor
ljmp
xchg
inc
jns
cmp
addl
lock
outsl
jl
test
adc
fcompl
and
sbb
out
cmp
sub
shlb
adc
cmp
addb
mov
jl
fucomp
fisttps
xor
jnp
jmp
push
xor
ret
loope
outsl
push
shrl
mov
push
mov
test
cltd
out
add
sbb
sbb
mov
mov
jecxz
scas
and
inc
sbb
push
jp
push
shlb
in
jnp
idivb
mov
cld
mov
dec
daa
clc
gs
push
cmp
inc
in
xchg
xchg
es
adc
jno
pop
and
and
inc
mov
fimuls
cmp
shl
gs
mov
push
push
shlb
shll
jp
pop
aad
dec
inc
mov
test
mov
adc
pop
and
inc
cmp
dec
jg
push
ja
mov
mov
fxch
lds
mov
or
sub
lea
fstpt
jle
sub
inc
clc
outsl
mov
sub
mov
aam
dec
lds
shl
and
sub
shrl
js
add
aas
lock
or
mov
pop
aas
imul
out
outsl
lock
lds
icebp
xor
bound
jge
dec
cwtl
call
pop
lahf
sbb
mul
aam
cmp
fbstp
shll
and
das
icebp
jg
mov
dec
addr16
cmp
fsincos
bound
sbb
sbb
push
jb
sbb
aad
test
push
cs
mov
push
sarl
cmp
shl
xchg
inc
scas
pop
jge
cmp
mov
sub
lret
xchg
jmp
push
mov
les
or
addr16
push
ds
aam
filds
jp
cs
mov
lods
pop
jbe
mov
idivb
dec
push
fldenv
mov
cmpsb
out
ror
inc
flds
mov
sbb
mov
adc
aam
mov
pop
ljmp
movsb
xchg
jnp
jp
int
add
adc
sub
enter
xor
push
stc
es
lds
subps
xchg
xlat
cmpb
fidivl
pop
pop
and
aad
jg
ret
push
imul
nop
mov
out
push
iret
cmp
outsl
es
add
js
ss
add
test
cmp
and
roll
faddl
fistl
add
mov
cli
jbe
int3
pop
mov
sbb
arpl
loope
iret
cltd
and
lods
lret
adcl
stos
sub
inc
sbbb
fwait
push
cmp
insb
sbb
jbe
xchg
xor
cmpsl
pushf
inc
jge
xchg
aam
sub
ja
cwtl
iret
shl
jo
idivl
fisttpl
psubw
repz
sub
mov
mov
ss
jp
adc
imul
sbb
aad
dec
mov
shrb
aam
fs
mov
push
roll
xor
push
adc
mov
subb
mov
add
adc
and
jno
in
icebp
stos
mov
adc
jg
ret
add
jns
ret
sub
inc
inc
jne
jge
sbb
outsb
mov
xchg
lea
sub
out
inc
repnz
or
test
sbb
xor
fxch
pusha
inc
add
or
adc
stc
enter
pusha
mov
xlat
mov
imul
mov
rorb
xchg
hlt
shll
shrb
or
or
ljmp
xchg
mov
adc
lods
pop
leave
out
orb
dec
sbb
iret
mov
loopne
cmp
dec
inc
adc
cwtl
rep
push
leave
dec
sub
pop
mov
and
jae
or
movsb
out
enter
mov
mov
ret
push
sub
je
mov
sbb
mov
and
icebp
mov
xchg
outsl
mov
shl
add
mov
lret
popa
mov
push
xor
arpl
mov
nop
sbb
iret
test
mov
int
push
jb
sub
mov
ss
sbb
sub
jmp
outsb
jnp
dec
dec
dec
mov
push
out
cwtl
inc
add
xor
insb
push
or
and
rcll
or
aas
iret
pop
sbb
icebp
icebp
mov
test
xchg
aaa
arpl
fwait
push
or
mov
sub
imul
and
xor
adcl
and
jp
out
lahf
scas
mov
mov
loop
dec
xor
sarb
rorb
lahf
cmp
rcll
fldcw
jb
xor
ret
xchg
insl
cmp
mov
mov
cs
daa
out
insb
cmpsb
int
das
sub
mov
ljmp
jp
mov
sbb
jl
bsf
std
jg
mov
push
aas
dec
pusha
dec
push
mov
daa
and
xor
repz
and
aaa
mov
push
dec
jp
lods
movsl
arpl
push
cwtl
dec
cmpsb
xlat
jae
add
call
cwtl
mov
adc
sub
xchg
outsl
in
fwait
cmp
mov
jle
out
sbb
push
cmp
popf
aam
jno
mov
jae
mov
sbbl
lods
inc
mov
fs
in
push
pop
fldcw
xchg
fs
fidivs
dec
icebp
jo
sbb
push
cmp
and
in
cmp
and
cmp
sub
or
push
mov
gs
loope
push
imul
lea
addr16
enter
leave
pop
and
cmp
das
jno
xchg
mov
sar
aad
jno
outsl
cmp
inc
cmp
lahf
inc
mov
mov
cmp
push
je
shrl
loopne
inc
mov
mov
shlb
xor
movsl
fwait
xchg
sti
lretw
mov
cmpsb
xor
push
ds
andb
cmp
test
pop
mov
mov
fisttpll
aam
cld
push
sbbb
stos
xor
dec
out
pop
jp
mov
pop
xor
pop
mov
mov
pop
xchg
popa
cli
fnstsw
jmp
mov
sub
sbb
lcall
filds
movsb
inc
inc
pop
jnp
mov
sub
jo
mov
mov
sarb
jle
mov
cmove
repnz
jle
sub
nop
add
push
test
inc
cmp
and
in
sub
and
xchg
nop
repnz
mov
push
cs
inc
mov
call
insl
into
repz
xchg
es
sub
imul
sbb
jbe
sub
js
fs
bound
or
arpl
aam
popf
imul
fists
cltd
imul
and
sbbb
lods
sub
xchg
push
jecxz
cltd
imul
jle
push
sarl
jb
inc
les
mov
push
ret
shlb
sbb
mov
dec
daa
xor
cs
cmc
and
scas
pop
test
mov
outsb
lcall
mov
jmp
lcall
jl
inc
xor
jns
leave
jae
gs
jmp
xor
inc
sub
jns
mov
loope
pop
out
fbstp
and
push
mov
lock
cmpsb
xchg
fildll
jno
out
inc
cli
jnp
pop
pop
fwait
incb
push
push
inc
cmp
ret
sbb
push
push
aam
xchg
mov
add
cmp
dec
dec
sbb
push
jno
aaa
sbb
xchg
jle
mov
mov
mov
inc
in
enter
shlb
shl
xor
pop
arpl
ljmp
mov
mov
lds
push
rorb
cmp
imul
cmp
lret
inc
push
je
jbe
es
fnstenv
add
or
dec
popf
repnz
xchg
aad
js
sbb
sbb
xor
cs
jae
add
jle
inc
mov
fbld
cwtl
mov
mov
jge
push
push
mov
mov
mov
sbb
adc
cld
xor
repnz
jecxz
ljmp
inc
inc
xor
jecxz
fiaddl
ret
mov
shrl
xor
sti
lret
loop
and
pop
sti
push
lahf
loopne
mul
mov
mov
jecxz
stc
imul
inc
in
pushf
testb
jo
mov
jecxz
ss
inc
push
dec
push
popf
jnp
sub
mov
ds
jg
mov
or
insb
jno
and
sub
movsb
add
outsl
or
pop
xchg
xor
adc
xchg
xchg
int
and
push
xchg
rol
inc
idivl
pusha
push
loope
lea
inc
pop
pop
movsb
fidivrl
mov
pushf
lahf
rcr
dec
fisttpl
imul
mov
inc
cltd
lret
shlb
lds
in
adc
sbb
jl
inc
xchg
mov
test
fsubs
sub
enter
push
and
dec
pusha
and
push
xchg
repz
fcom
mov
pop
ret
data16
sbb
mov
push
or
leave
into
test
movl
push
in
negl
call
loopne
push
mov
sbb
call
mov
mov
xchg
jb
mov
iret
test
or
push
mov
and
testl
leave
jmp
xchg
data16
outsb
loop
mov
dec
test
sbb
addr16
mov
mov
cli
add
gs
shll
pushf
inc
mov
sbb
jae
imul
in
iret
aas
jl
fxch
dec
inc
pop
stc
jns
cld
fmuls
jbe
incl
ret
xchg
movsb
mov
pushf
lcall
xchg
dec
clc
dec
adc
decb
xchg
mov
fsts
ret
jmp
mov
xchg
ja
cmpsb
push
mov
nop
outsl
aam
jecxz
repnz
xchg
mov
insb
repz
push
fists
in
or
mov
cmp
push
iret
add
aam
jl
and
insl
xor
daa
int
adc
jbe
lea
pusha
cmp
mov
aas
lret
and
outsl
pop
into
xor
lock
sub
xlat
xlat
inc
hlt
jle
shrb
pop
pop
cld
cmc
cmp
lret
je
mov
mov
jae
aas
popa
insl
mov
hlt
push
xorl
mov
or
enter
ret
ds
push
pop
call
mov
ss
fwait
aas
mov
imul
and
das
sub
lods
push
icebp
stc
push
jmp
cmp
ja
js
mov
jns
sbb
jnp
out
xchg
push
cmp
push
push
fnsave
or
sbb
mov
cmp
and
cmp
adc
mov
jae
dec
iret
add
lea
fwait
mul
cmpsb
enter
pop
add
xor
add
aad
adc
xchg
into
in
out
nop
dec
sbb
test
mov
inc
add
in
lcall
adc
cli
test
ret
in
jmp
pop
into
mov
lea
iret
aaa
mov
repz
or
or
je
adc
pop
pop
dec
mov
adc
push
pop
mov
gs
dec
or
inc
nop
cltd
clc
int3
jno
adc
or
or
jge
imul
scas
loope
aam
jge
adc
add
in
and
enter
ret
mov
aam
into
fistpl
fcompl
and
pop
ja
ljmp
add
dec
fists
sbb
stos
addr16
adc
mov
test
movsb
sti
inc
xchg
sub
test
pushf
das
rorb
mov
push
xor
mov
test
pop
pop
dec
mov
fcomps
xor
lahf
push
fisttpl
cmp
lock
movb
jbe
inc
scas
in
push
icebp
ja
pop
jl
aam
sub
in
and
push
or
ja
mov
enter
fwait
aam
push
mov
arpl
add
or
daa
push
fisubl
out
jne
mov
in
mov
inc
xor
or
lcall
pop
mov
aad
scas
sbb
cwtl
jo
mov
shll
mov
pop
push
mov
shl
sub
mov
and
ja
jns
dec
lea
jbe
pop
cwtl
stos
scas
es
mov
mov
clc
inc
outsl
imulb
mov
mov
pop
or
aam
adc
xor
xlat
call
adc
jp
xchg
iret
push
jb
jo
ja
dec
push
add
pop
inc
inc
outsl
lods
cwtl
stc
cmc
push
push
insl
xchg
sub
mov
mov
pop
pop
dec
loop
into
test
push
arpl
and
insl
insl
es
sahf
mov
cmp
bound
dec
cmp
repnz
loope
jbe
cmc
out
jp
cmc
dec
into
push
leave
or
insl
fcompl
call
andl
mov
inc
xchg
mov
dec
mov
xor
push
inc
add
test
and
sbb
decl
xchg
dec
xor
push
jle
jmp
cmp
je
shlb
fisubrs
mov
shl
repnz
insb
cmp
popa
fcoms
jl
and
cmp
xchg
andl
push
add
andb
jb
pusha
push
mov
fidivrl
sbb
sbb
loop
xor
mov
jne
cmp
cmc
and
repz
cmp
out
or
add
aaa
dec
arpl
cltd
sub
fnstsw
push
pop
jnp
in
data16
mov
pop
std
xchg
addr16
mov
xchg
sti
jnp
and
sub
enter
data16
push
pop
loopne
outsl
mov
xchg
into
movsb
xor
inc
or
in
leave
pop
or
scas
push
scas
push
push
mov
shl
inc
repz
arpl
in
push
pop
jae
adc
inc
test
xchg
cwtl
sbb
out
jae
mov
ss
add
fsubl
push
xchg
and
rcll
scas
inc
or
scas
or
jb
iret
scas
nop
cltd
adcl
jecxz
in
jo
mov
in
loopne
lock
fnstcw
movsl
inc
int
mov
adc
cmp
popa
xchg
inc
stc
or
pop
imul
enter
hlt
sbb
sbb
or
dec
outsl
cs
pop
add
shrb
xchg
sub
hlt
or
imull
push
fs
test
shlb
dec
xchg
jecxz
aam
aam
push
and
insl
push
dec
stos
mov
dec
mov
sub
dec
stos
out
add
dec
out
dec
cmp
dec
std
lock
les
inc
push
jecxz
pusha
jmp
imul
jbe
outsb
jle
sub
sbb
insb
enter
out
pop
stos
lods
cli
xor
cmc
dec
push
pushf
arpl
sbb
jl
xor
gs
pushf
or
orb
mov
loop
pushf
inc
data16
cltd
sub
out
adc
sbb
ljmp
xor
pop
scas
cmp
repz
push
fdivrs
or
sbb
push
pop
adc
bound
push
mov
pop
push
push
mov
xchg
cmp
cld
mov
add
loope
or
dec
xlat
xchg
shrb
jne
clc
ret
inc
mov
push
mov
dec
js
push
in
insl
ret
push
and
dec
xchg
cmp
ret
mov
int
divl
mov
iret
loopne
not
inc
mov
sub
xlat
ret
stos
pop
cmp
push
mov
lret
pop
mov
mov
mov
outsl
push
add
ds
lcall
push
ds
gs
and
pop
into
push
icebp
adc
ss
les
mov
jns
popf
mov
popa
pop
inc
stos
mov
mov
pop
and
or
jmp
xchg
ja
xchg
sbb
jl
inc
repnz
in
clc
pop
sbb
cmp
inc
fdiv
loopne
inc
popa
cmp
mov
lret
and
sub
nop
xchg
and
mov
adc
out
dec
hlt
push
xor
leave
jp
addr16
xor
pop
mov
sahf
push
inc
mov
or
dec
out
mov
pop
xchg
mov
or
dec
ljmp
or
mov
or
neg
jns
cs
in
mov
pop
push
lods
call
push
loope
push
sbb
sbb
xor
test
negl
push
js
out
lret
or
inc
movsl
dec
sub
inc
push
ret
mov
pop
or
or
dec
mov
negl
int
ret
xchg
out
xor
pop
cmp
dec
cmc
test
roll
imul
roll
inc
stc
mov
jg
push
aaa
push
rcl
das
mov
aas
pop
scas
cltd
sub
or
das
pop
dec
adc
lods
mov
das
sbb
push
xlat
cwtl
inc
ficoms
outsb
cmp
int
repz
xchg
aad
push
les
push
sub
add
jl
add
rcrl
mov
fildl
test
push
cli
or
mov
das
push
xchg
in
mov
hlt
sbb
push
sar
mov
pop
cli
push
cld
xlat
sub
mov
movsl
push
push
lret
sbb
nop
mov
int
lcall
lds
aas
adc
fadds
pushf
mov
outsb
xor
xor
jne
xchg
sub
fnstsw
or
out
inc
outsb
ljmp
popa
cmpsl
mov
imull
inc
pop
lea
mov
push
dec
xor
or
add
iret
sub
cli
out
imul
sbb
pusha
out
fnstcw
push
cmp
and
sub
inc
lods
aam
inc
xor
sub
sbb
sub
mov
mov
jmp
ljmp
mov
cmc
mov
call
mov
and
imul
push
imul
outsb
mov
xor
out
mov
sbb
insl
insl
into
popf
push
cmp
mov
jg
cld
sub
lea
adc
arpl
mov
mov
add
mov
push
shr
dec
cmp
addl
mov
in
enter
jnp
push
cmp
int3
repnz
mov
mov
cwtl
xchg
lods
xchg
mov
mov
mov
inc
dec
push
push
jae
sbb
stos
xchg
inc
mov
roll
pop
test
jb
jne
repz
stos
or
into
int3
mov
dec
lods
enter
es
mov
dec
xchg
idivl
fwait
fs
or
xchg
and
filds
mov
sub
adcl
bound
mov
addb
iret
mov
xorl
into
push
lahf
sub
repz
ficompl
js
inc
mov
inc
aam
scas
and
jp
shlb
fwait
add
icebp
scas
fnstsw
stc
mov
ja
and
dec
lods
adc
pop
shl
mov
rorl
andl
mov
sub
jo
aam
xchg
mov
sbb
in
pop
pushf
leave
pushf
insb
lods
shlb
data16
pop
and
outsb
push
or
test
mov
sbb
fadds
push
inc
mov
xor
mov
lret
and
jns
lods
fwait
rcr
inc
dec
inc
cltd
push
mov
dec
mov
dec
pop
mov
push
xor
push
mov
jnp
adc
jp
add
imul
jg
lods
insl
testl
xor
adc
fucomp
mov
lret
sub
adc
mov
push
aad
lods
cmc
xchg
loope
jne
fdivr
mov
movsb
fldt
call
add
nop
out
inc
push
xor
xchg
insb
std
jbe
sub
jne
pop
jmp
mov
aam
stos
xchg
iret
push
cld
leave
push
xchg
addr16
push
xor
fs
call
pop
mov
or
pop
sbb
mov
cmpsl
mov
cli
mov
adc
andl
mov
scas
insb
or
addr16
movsl
pop
mov
imul
add
dec
shrl
push
jns
cmp
andl
push
adc
pop
jmp
mov
push
push
js
pop
psllw
fs
lahf
mov
fmuls
mov
xor
or
out
lret
jns
jne
insl
popa
popa
fists
mov
sbb
in
mov
cs
daa
add
xor
mov
push
jae
sub
popl
push
repnz
and
mov
push
jle
js
clc
fcoml
dec
jle
test
js
call
push
repnz
sbb
xor
imul
jno,pn
out
fidivs
push
rclb
icebp
push
sbb
pop
shrl
scas
shlb
jge
in
cmp
lret
add
fmuls
ds
fwait
lret
jb
mov
pop
xor
adc
cs
stos
in
fldt
pop
push
outsl
fcoml
out
mov
inc
dec
movb
mov
adc
notl
add
xor
dec
mov
repnz
sub
cld
popf
sahf
sbb
enter
mov
mov
mov
pop
aaa
int
adc
jmp
dec
inc
mov
mov
scas
jb
rorl
in
mov
fsts
ret
ret
mov
cmp
es
pop
xchg
mov
rorl
into
jle
out
cmp
jno
lods
and
mov
sbb
imul
dec
in
scas
jg
xchg
outsb
jno
dec
roll
test
inc
push
pop
repz
dec
push
lds
dec
add
inc
mov
mov
std
pop
xchg
out
mov
int3
outsb
xchg
xchg
mov
divl
xchg
movl
aad
in
xchg
and
or
pusha
mov
push
lret
orb
xor
push
adc
imul
add
xor
mov
lods
xchg
rcrb
xlat
mov
ljmp
jecxz
dec
loopne
push
ss
and
and
clc
mov
xor
movsb
inc
add
fiaddl
jp
fstl
fcomps
pop
gs
das
vcvtss2sd
pop
scas
loop
add
dec
ljmp
lods
fnstcw
call
or
and
lret
dec
test
or
mov
cltd
xchg
jnp
jno
lcall
pop
add
in
lret
insl
pop
sbb
lcall
jg
mov
in
aam
jb
das
repnz
sub
xorl
lret
push
pop
sbb
and
xor
mov
loop
mov
push
test
insb
jbe
in
xchg
fistpll
fwait
mov
scas
push
xor
arpl
pop
xor
imul
mov
jge
lret
movsl
sub
mov
in
mov
imul
xorb
cmc
lds
add
lret
and
jno
mov
pop
xchg
sub
sub
enter
dec
xchg
outsl
pop
cmp
and
jae
ret
xchg
nop
mov
subb
cmp
data16
cmp
mov
push
cmp
aam
stc
sahf
add
pop
in
xchg
scas
xorb
cmpsb
mov
cld
jl
cmp
das
or
mov
lds
cmp
movswl
sub
aas
lods
shlb
xchg
mov
movswl
xor
loop
or
out
out
lea
sub
xchg
dec
mov
daa
dec
push
mov
inc
hlt
pop
add
or
jl
sbb
popa
and
pop
lea
andb
xor
in
cmp
sbb
sbb
push
jnp
inc
mov
mov
mov
cmp
fisttpl
sub
cmp
fsubs
xchg
je
loop
push
bnd
adc
xor
scas
stos
jle
sub
pushf
jb
jb
mov
fs
fcoml
dec
mov
adc
dec
or
out
aaa
mov
mov
pop
and
or
mov
ljmp
enter
add
push
fstpl
mov
in
icebp
mov
push
lds
outsl
jns
out
push
cld
je
je
xor
or
in
cmp
mov
sub
or
push
lods
lods
aas
adc
mov
cmpsb
mov
in
pminsw
test
imul
mov
cmpsl
lret
into
popl
movsb
lods
div
xor
jg
dec
push
out
jnp
jge
xchg
idivl
push
aas
mov
push
and
jl
mov
jle
fwait
jbe
jp
jecxz
inc
outsl
adc
xchg
out
sbb
mov
pop
and
or
fidivrl
aam
arpl
out
add
lds
icebp
sub
imul
out
dec
insb
cmp
movsl
js
incb
repnz
lret
inc
adc
hlt
inc
adc
sbb
pop
lahf
lods
repnz
mov
or
popa
cltd
lods
and
inc
push
push
ljmp
incb
inc
aam
jg
and
xchg
enter
popa
pop
stos
cld
cli
test
mov
adc
jecxz
dec
repnz
cmpsb
sbb
aas
mov
lahf
int
popf
xor
cli
out
xchg
stos
push
xor
les
push
cmp
ret
fwait
dec
jns
aas
push
loope
add
int
mov
push
mov
adc
add
add
cmp
sarl
or
daa
sbb
lahf
pop
mov
mov
rclb
jnp
push
mov
push
cmc
xor
js
nop
lahf
push
das
repnz
es
js
push
mov
inc
add
mov
dec
lods
add
or
jo
loopne,pn
leave
and
in
or
sub
shrb
mov
ja
pusha
ret
add
std
decb
add
jbe
push
push
pop
sub
pushf
cmpsl
sub
mov
dec
imull
ja
or
gs
mov
push
adc
addr16
lods
lock
xchg
sub
arpl
xchg
je
add
popa
xor
fdivl
or
rolb
fstpt
add
out
push
int3
lods
sub
stc
push
inc
lds
cmp
dec
add
xor
mov
mov
repnz
inc
lret
and
mov
mov
dec
in
fisubs
pusha
leave
pop
adc
lods
sub
sbbb
pop
sahf
sbb
jb
inc
xchg
add
fadds
fwait
add
outsl
sub
xchg
jb
or
mov
js
out
mov
mov
insl
mov
sbb
adc
mov
jo
gs
stos
push
jbe
sti
or
lret
dec
aaa
in
mov
cmp
mov
dec
push
adc
mov
mov
lods
fwait
ljmp
fiadds
xchg
call
clc
bound
sbb
mov
dec
pusha
pop
icebp
mov
or
bound
inc
mov
sti
and
lcall
push
xchg
test
icebp
mov
or
loop
dec
out
andl
ss
mov
mov
xor
out
and
enter
data16
or
pop
mov
lock
in
or
mov
push
add
in
scas
inc
mov
sub
pushf
int
inc
addr16
cmc
cmp
fwait
in
add
fwait
aas
cmp
outsb
cmp
jmp
pop
mov
fcomip
push
inc
cltd
out
sbbl
es
lds
aad
hlt
in
push
sbb
out
jae
xor
out
daa
push
xchg
lahf
mov
push
daa
inc
xor
test
aad
icebp
lret
jmp
in
mov
frstor
sbb
in
stos
mov
jle
push
push
cmp
and
call
cs
jecxz
data16
aas
push
xchg
adc
sub
push
cmp
roll
or
sbb
adc
cwtl
jnp
clc
mov
cltd
and
xor
dec
push
pop
push
lds
inc
scas
xchg
jnp
inc
mov
jp
cmc
gs
jae
hlt
mov
lcall
jmp
shrb
out
jo
hlt
adc
jg
jl
xchg
lds
cmp
jno
lea
add
dec
xchg
adc
jl
scas
dec
mov
shlb
insl
int
loope
dec
mov
outsl
jb
or
jmp
cmp
sbb
shl
pusha
cli
pusha
dec
jae
dec
mov
sub
fdivs
iret
push
inc
rcrb
sub
inc
cs
icebp
movsl
lcall
rorb
arpl
lcall
es
filds
popa
push
jmp
aad
ds
mov
popf
pushf
aaa
jg
mov
loop
data16
xchg
and
add
adcb
movsb
pop
je
and
or
movq
imulb
test
loop
aad
int
mov
fmul
push
xor
xchg
jl
xlat
outsb
or
jmp
jle
xor
xor
push
push
xchg
lock
push
jae
cmpsb
sub
or
dec
or
sbb
mov
sub
mov
and
ljmp
push
lret
gs
cli
std
imul
cmpl
xor
xchg
jo
imul
into
sbb
pop
popf
das
cltd
cmp
inc
addr16
imul
test
mov
mov
and
mov
mov
imul
push
or
cwtl
mov
jmp
push
pop
test
lods
mov
aad
inc
lcall
scas
mov
test
and
ret
push
jns
cli
in
add
mov
push
push
inc
mov
iret
adc
cmp
dec
test
loop
jp
aaa
xchg
add
jae
sub
mov
xor
cld
push
out
xor
jbe
fidivrl
insb
xchg
pusha
push
mov
rorb
ljmp
mull
bound
hlt
add
sub
or
sub
out
ds
ss
repnz
stc
cmp
in
cli
jecxz
cli
sahf
add
es
sub
sti
jp
mov
adc
scas
movsl
lahf
and
push
add
mov
lods
dec
test
add
push
out
cld
movsl
popa
call
or
cmp
sub
pop
jg
xor
inc
push
enter
fs
jecxz
push
push
rolb
mov
jle
fcompl
sbb
cmp
test
cltd
popf
ror
js
and
xchg
jl
setg
mov
adc
cmp
bound
test
mov
mov
lahf
xchg
and
push
into
fidivl
out
sbb
xor
add
cmp
nop
fldt
pushl
dec
xchg
adc
sub
pop
sbb
cmc
cmp
cmp
popa
fdivl
fisttpl
in
inc
aas
jnp
sub
jmp
cmpsb
or
fisubl
cmp
push
sbb
jl
sbb
push
ret
mov
bound
xor
or
shl
in
sbb
daa
add
mov
mov
jecxz
lret
xor
xlat
test
fwait
cld
fmulp
scas
add
sbb
loope
call
or
fidivl
xor
jbe
xchg
int3
and
clc
int3
xchg
ljmp
sbb
fistpll
loope
dec
mov
in
jns
pop
push
cld
push
scas
and
mov
lods
mov
je
xor
aas
stc
repnz
or
cmp
in
inc
push
pop
and
rol
pop
push
ret
cmp
xor
or
dec
div
or
mov
call
mov
xor
loop
push
rclb
jno
sbb
movsb
cmp
dec
out
add
inc
aaa
push
orb
scas
jmp
cmpsb
mov
sar
jne
pop
jge
cmpsb
or
and
ficoml
sbb
test
push
mov
push
std
int3
lea
call
lods
add
sbbl
pop
cmp
sti
fstpl
fpatan
fcomps
push
fsubrl
fadds
mov
gs
mov
shlb
xchg
jp
mov
sub
mov
mov
pop
pop
out
aaa
and
dec
jno
call
pop
ret
mov
push
insl
jle
daa
push
lock
negb
mov
mov
or
pop
mov
jno
inc
rorl
xchg
cmpsl
cld
mov
mov
roll
fildl
add
ja
loop
scas
sub
aad
fnstenv
enter
push
push
add
aas
mov
roll
or
dec
mov
adc
nop
mov
or
mov
inc
mov
cmp
dec
stc
in
and
mov
xor
outsb
aaa
mov
mov
dec
repnz
sbb
aas
sub
cmp
xchg
push
cli
divb
sub
inc
scas
mov
movsb
jp
mov
add
loope
dec
dec
xchg
dec
mov
ds
dec
push
jmp
into
adc
pop
sbb
icebp
sub
mov
sahf
cmp
jnp
jae
xor
stc
xor
cltd
jb
mul
sub
int3
in
jb
cmp
xchg
test
std
fildll
imul
xor
xchg
mov
push
loopne
imulb
pushf
cmp
mov
mov
pop
inc
ss
lods
mov
jp
gs
or
daa
inc
sbb
mov
inc
dec
stos
xlat
stos
inc
push
mov
fs
dec
add
mov
pop
out
mov
arpl
les
dec
cmpsl
in
xor
adc
fmuls
out
ds
outsl
jp
push
scas
rclb
pop
cmpsl
pop
or
dec
cmp
xor
enter
xor
mov
sahf
mov
cmp
mov
mov
adc
push
shlb
inc
shll
sub
shrl
mov
in
adc
sbb
mov
mov
daa
sbb
popf
mov
ljmp
paddusw
push
xchg
clc
cmp
sbb
or
out
int3
mov
push
mov
mov
inc
pushfw
mov
outsl
sub
push
and
stc
mov
and
in
adc
fucom
xor
lahf
add
sti
mov
mov
decb
sub
mov
jb
insl
imulb
shrl
lcall
mov
bound
imul
lahf
cmp
test
sarl
xor
dec
aas
xchg
or
sub
fs
lcall
push
push
adc
ret
ret
jle
xchg
imul
lret
sbb
scas
enterw
cmpsl
in
adc
adc
xlat
call
es
cmp
xor
sahf
xor
test
pop
lock
insb
xchg
sub
or
jns
xchg
je
gs
imull
push
movsb
pusha
and
aaa
andb
push
int3
cmp
push
fsubrs
or
adc
dec
lcall
scas
out
in
popa
cld
dec
jp
push
cmpsl
test
repnz
sahf
es
pop
cmp
jl
xchg
or
into
mov
push
xchg
pop
fimull
push
pop
sbb
sub
mov
jg
scas
mov
sti
fs
sti
scas
enter
sub
idivl
sar
in
loopne
nop
or
dec
sub
pop
xchg
sbbl
clc
cltd
xchg
aam
out
cli
add
dec
movsl
xor
outsb
loope
mov
hlt
sbb
cmp
scas
lods
jne
cmp
xlat
mov
xlat
xchg
es
xchg
cmp
xlat
scas
fwait
test
aas
insl
mov
sub
jl
xchg
jg
pusha
push
scas
sub
mov
xchg
mov
dec
ja
scas
pop
shlb
fucomi
pop
pop
bt
xor
imul
loope
sbb
sbb
mov
and
cli
add
pop
xor
dec
inc
mov
cs
xchg
stos
adc
mov
rclb
and
pop
sahf
aas
or
dec
movsl
jge
xor
jl
add
stos
inc
jmp
int
fstl
sub
out
in
dec
subb
mov
xchg
loopne
adc
repz
jb
add
movsb
jl
mov
sbb
int3
test
lods
or
cmc
fists
jb
inc
scas
or
test
pop
xor
add
repnz
repnz
in
imul
movsb
sti
popf
adc
or
outsl
dec
fdivr
lds
ss
and
push
jp
mov
or
vpand
sti
push
mov
movsb
cmpsb
inc
push
mulb
mov
push
mov
xchg
mov
cwtl
pop
xor
xchg
adc
xchg
js
and
dec
pop
inc
and
repz
data16
cwtl
rorl
jb
repz
mov
arpl
xchg
ss
test
out
movsl
adc
dec
cmpsl
fnstenv
sbbb
ja
sbb
data16
jmp
push
mov
icebp
cmp
loopne
cld
test
in
push
pop
fsubr
ss
aas
pop
mov
aad
push
aad
dec
test
iret
xchg
jmp
mov
sbb
and
mov
test
xor
mov
ss
jo
cld
inc
inc
push
dec
test
push
pop
lret
pop
pop
jle
add
sbb
pop
inc
jmp
jecxz
cli
sub
addr16
cmp
or
ret
nop
xchg
lods
inc
mov
aaa
loopne
hlt
sub
cld
movsb
iret
dec
add
sbb
test
inc
jp
jns
inc
adc
and
ret
lahf
mov
test
cmc
stos
adc
xchg
cs
les
lret
pop
cmpsb
pushf
sbb
or
ljmp
imul
test
js
ret
xchg
ds
push
xor
adc
mov
xchg
sarl
push
xchg
push
xor
dec
call
rorb
int3
or
push
in
stc
mov
adc
dec
push
mov
cmpl
fcmovbe
mov
outsl
push
mov
mov
mov
clc
inc
out
into
ficompl
test
idivb
std
sbb
cmp
xchg
push
push
dec
ficoml
out
push
xchg
popf
jns
adc
push
sbb
out
in
test
cmp
jnp
add
jnp
ret
jp
jne
out
jb
mov
xchg
test
mov
test
out
clc
add
push
and
add
leave
call
jmp
lods
jl
scas
or
pop
mov
dec
sbb
mov
adc
pop
bswap
or
scas
cmp
ss
mov
sarb
fld
xchg
add
rcrb
lcall
or
sbb
pop
or
fs
inc
fwait
adc
sbb
je
aas
cmc
test
ja
push
dec
add
movd
out
xor
jg
cmp
scas
dec
std
sbb
mov
mov
add
inc
inc
pop
xchg
ja
cmp
pop
cld
and
addr16
push
pop
add
icebp
push
jae
dec
add
adc
js
std
clc
and
cltd
sub
push
clc
jbe
jl
lret
arpl
xchg
mov
loop
in
cmp
das
in
movsl
cwtl
test
push
inc
or
cmp
outsb
dec
loop
arpl
cmp
inc
sbb
pop
insl
or
mov
test
sbbb
jmp
lret
and
or
aas
je
or
mov
call
out
mov
and
pop
cmp
outsb
adc
push
push
inc
ds
xor
ds
push
loope
hlt
and
lock
xor
xor
test
loopne
adc
mulb
cvttps2pi
inc
adcb
push
popa
adc
or
lahf
push
mov
ds
jge
sub
enter
ss
jae
andb
xchg
xchg
rcl
jg
pop
out
imulb
add
cmp
jmp
popf
leave
test
or
pminsw
or
lcall
dec
scas
mov
sbb
pop
fcmove
bound
inc
nop
int
cmpsb
movl
push
mov
xor
ret
jne
scas
fwait
cmpsb
fsubrs
mov
mov
lock
into
fwait
das
cwtl
mov
aad
jnp
fbld
mov
shrl
loope
pop
push
and
je
xchg
xorl
mov
call
pop
dec
sbb
gs
jl
jle
ja
sahf
xchg
imul
xchg
jne
and
inc
pop
loope
fxch
cmp
lahf
inc
mov
out
adc
jmp
mov
lahf
or
jmp
push
stos
jno
loope
mov
add
mov
sti
mov
push
xchg
add
dec
dec
add
test
push
cld
push
mov
enter
sbb
cmp
xor
and
dec
add
inc
mov
call
add
sub
and
popa
mov
mov
xor
scas
addps
insb
mov
push
aad
jb
imul
mov
gs
cwtl
add
mov
mov
mov
pop
push
mov
pusha
in
out
cs
sub
inc
push
lret
mov
stos
sub
pop
push
jge
xor
jo
xchg
and
imul
loope
shlb
add
jbe
fmul
data16
push
movsl
fsubs
xchg
fldl
or
inc
int
out
incb
xor
out
add
push
inc
mov
loop
clc
add
xor
stc
xchg
mov
pop
out
mov
pop
out
sub
out
dec
in
xchg
mov
jnp
cmp
sbb
das
pop
mov
cmpsb
xor
leave
lock
sarl
fwait
iret
mov
jnp
push
ljmp
insb
xchg
jmp
jp
push
sbb
dec
jle
jnp
add
push
ror
and
adc
into
jmp
push
add
xchg
outsl
dec
xor
das
push
pop
in
jb
xchg
add
test
aad
call
pushf
add
insl
in
push
aam
dec
adc
fistl
jo
dec
jo
adcl
mov
jg
adc
adcb
out
adc
add
movsb
dec
pop
push
clc
xlat
push
xchg
stc
dec
aad
ret
xor
dec
fadds
xor
filds
mov
mov
fdivs
pop
cmp
aad
leave
add
outsl
sbb
sub
ja
cwtl
aaa
add
cld
std
aaa
nop
jecxz
ljmp
xchg
subb
jge
aam
xchg
mov
stc
pop
fcmovnbe
mov
push
sbb
push
inc
aam
inc
pop
mov
adc
push
cmp
lret
lods
cmp
in
mov
push
adc
lret
add
mov
iret
lock
icebp
inc
sbb
mov
stos
data16
push
cmp
fnstcw
push
mov
dec
add
addr16
xlat
cmp
mov
xchg
dec
mov
pop
lock
sbb
sub
mov
mov
add
fcmovne
sahf
idivl
adc
dec
lret
incb
lahf
or
jns,pn
out
sub
js
adc
out
adc
xlat
dec
pop
sarl
add
cmp
mov
imul
adc
push
mov
scas
jnp,pt
xor
pop
sbb
in
mov
xchg
scas
outsb
sbb
cs
sub
jmp
movsl
sub
and
lcall
mov
sub
movsl
add
jbe
adc
sbb
cmpsb
lcall
xchg
mov
rorb
xor
cmpsb
mov
inc
sub
mov
arpl
mov
cmp
mov
and
mov
cmp
leave
or
add
and
xchg
scas
push
out
mov
pop
mov
cmc
cmc
or
dec
mov
push
inc
xor
jg
inc
ds
lahf
es
sub
inc
pop
xchg
fcompl
dec
jne
dec
shll
mov
jmp
jnp
xor
cld
pop
sub
cmp
mov
push
pop
cmp
xor
cs
lahf
in
rorl
cmc
mov
adc
in
in
test
rcll
or
sbb
cmp
lock
mov
jecxz
ficomps
popa
clc
mov
jae
rep
fwait
xchg
and
in
mov
mov
bound
sbb
mov
cmp
fnstenv
addr16
outsl
shll
and
fwait
xor
xor
and
rol
cltd
stos
loopne
mov
dec
sub
mov
mov
inc
stos
mov
adc
mov
jecxz
fwait
pop
push
sbb
mov
mov
int3
lea
dec
xor
addr16
idivb
or
ret
test
sub
push
sub
inc
ljmp
add
test
cwtl
mov
sub
fiadds
test
mov
and
popf
jno
or
insl
insl
jmp
repnz
mov
jb
out
aad
mov
mov
inc
jbe
jg
mov
pop
sbb
inc
scas
pop
daa
mov
sahf
inc
sti
pusha
xlat
mov
pop
push
test
jbe
mov
mov
mov
scas
popf
mov
lea
cs
dec
xchg
mov
cmpsb
ret
pop
jg
imul
cmp
andl
stc
cmpl
push
mov
adc
adc
or
cmp
jg
call
fdivr
daa
lds
cmc
xlat
jne
jbe
fcoms
ret
int
xchg
mov
jge
xor
xor
mov
fs
pop
cmp
push
adc
movsb
rol
imul
push
aam
sub
nop
mov
je
mov
lods
dec
jns
hlt
cli
mov
scas
mov
mov
xchg
push
xchg
cs
les
or
lret
mov
dec
xor
es
sysret
xchg
mov
xlat
pop
adc
jne
jbe
push
int3
xchg
or
xchg
enter
lret
and
sbb
pop
jge
adc
push
rep
pop
fsubl
sub
lock
dec
scas
outsb
ss
mov
dec
xor
popa
mov
or
ret
sub
cmpsb
inc
fwait
ss
or
mov
leave
lret
push
add
push
ret
sub
jp
shlb
or
popa
fmuls
cmp
inc
xor
xorb
jge
pop
or
fcmovbe
xchg
lret
or
jge
inc
adc
mov
nop
sbb
jns
ror
sarb
xchg
pusha
sbb
sub
mov
add
xchg
movsb
jno
clc
lahf
fstpl
mov
std
mov
or
xchg
pop
push
aam
jb
add
inc
test
mov
push
xlat
out
dec
hlt
push
movsl
lret
and
xchg
aad
sbb
data16
push
mov
imul
pop
dec
shrb
es
jecxz
rcll
cli
ficomps
ds
xlat
dec
mov
scas
or
add
fs
inc
aam
lar
sub
cwtl
mov
out
out
adc
adc
fstpt
mov
cmpsl
push
jno
adc
xchg
scas
outsl
and
fisttpll
mov
into
or
fs
fcmovbe
sub
add
pop
lret
mov
push
lock
loopne
inc
es
and
mov
outsb
dec
aas
pop
pop
mov
cltd
std
icebp
push
pop
mov
xor
lret
clc
aas
jp
mov
rcrl
mov
shrl
mov
adc
sti
adc
jo
dec
cs
jae
mov
cmpsb
lods
push
mov
lods
repz
mov
cmpsl
cmp
mov
ficomps
cmp
sahf
mov
icebp
cmp
test
stos
adc
pop
mov
xchg
out
insb
clc
jno
repnz
xchg
jns
mov
es
imul
mov
jle
movsb
add
jg
inc
jno
mov
fs
in
lea
daa
sbb
in
daa
repz
ljmp
mov
fdiv
scas
imul
repz
add
hlt
aam
add
adc
cs
cmp
mov
mov
xor
pop
and
div
sub
shrl
cmp
sub
test
or
hlt
sub
loop
push
fwait
cmpsb
jmp
outsb
pop
cmpsl
mov
jmp
and
in
sub
cwtl
sub
jbe
adc
jne
out
xchg
mov
or
mov
arpl
loope
aam
mov
clc
ret
sub
std
sub
scas
mov
popf
movntps
enter
xor
stos
or
mov
ss
ds
imul
cltd
jo
and
mov
enter
fsubl
movsl
or
test
or
imul
lock
roll
popf
ja
xchg
pop
lcall
sbb
sbb
add
popa
out
mov
sbb
or
mov
pop
lods
in
ret
data16
inc
jae
int3
ficompl
lret
and
out
push
xchg
xor
inc
stos
popa
dec
mov
lock
jne
xchg
addr16
sub
adc
lahf
xchg
popa
jns
mov
xchg
xchg
jb
fbld
add
sbbb
jae
push
sbb
std
jp
cmp
xorl
jl
pop
or
aas
xor
mov
js
cli
lods
pusha
mov
out
stos
adc
iret
mov
sbb
fistpl
les
mov
pop
sbb
mov
icebp
js
pusha
mov
mov
pop
mov
push
repz
fsubr
xchg
mov
add
jl
mov
lret
add
adc
push
in
notb
stc
mov
sub
int
pop
or
es
lret
mov
jecxz
mov
stos
adc
lods
fcoml
add
cmpb
gs
cmp
xlat
adc
pop
sbb
test
mov
mov
inc
cmc
inc
test
iret
push
lahf
xchg
xor
jle
mov
les
inc
fbstp
or
ds
cltd
pop
in
push
imul
push
fwait
xor
push
cli
push
xlat
shll
lret
jae
push
or
pop
add
cmc
cld
mov
gs
xchg
sub
push
cld
cmpb
frstor
xor
stc
daa
pushf
jp
and
mov
mov
pop
fwait
sub
or
scas
mov
fisubl
loope
repz
cmpsb
add
inc
ret
jno
inc
mov
and
jl
inc
andl
cmp
ds
fbld
repz
pop
out
push
enter
jb
pop
out
jb
cli
jle
pop
inc
aad
and
jl
mov
fnstcw
int
pop
stos
push
mov
xchg
clc
ret
out
daa
mov
gs
mov
lods
push
data16
jbe
mov
xor
in
and
adc
les
jmp
test
call
js
mov
jle
pop
and
mov
cmpl
jae
test
loopne
clc
and
inc
test
int
in
je
jg
fistpl
sbb
inc
mov
and
or
repnz
pop
pop
mov
push
ret
neg
data16
push
adcl
in
push
inc
std
fwait
adc
hlt
ficomps
sbb
inc
addr16
fwait
jmp
push
adc
lahf
or
outsb
pushf
mov
mov
pop
lahf
and
dec
sbb
sbb
lea
inc
xorb
ljmp
int
ja
mov
testl
dec
sub
test
insb
cli
xchg
xchg
sbb
cld
jge
xchg
inc
xchg
xor
fstpt
les
aam
rorl
shlb
add
movsb
pusha
out
xchg
outsl
jge
jp
jle
adc
sub
shrl
mov
mov
repnz
ficompl
mov
scas
pop
xchg
arpl
mov
dec
sbb
test
andl
mov
xchg
cmp
hlt
fmuls
pop
push
jb
das
mov
xor
faddl
sub
sbb
fldcw
mov
fcomp
sub
inc
aas
aas
pushl
push
inc
and
or
xlat
add
jnp
mov
push
rcrb
cli
cltd
jmp
pop
pop
and
jg
sar
daa
xchg
movntq
sub
pop
popa
pop
in
data16
lahf
xchg
push
mov
stc
sti
mov
cli
mov
sub
and
inc
sti
aaa
push
fisubrs
test
lret
jnp
mov
jbe
mov
xor
mov
or
jmp
test
xchg
aad
int
mov
dec
or
adc
mov
mov
pop
xchg
adc
xor
pop
add
inc
fcomi
mov
jne
ljmp
cmp
rorb
push
arpl
ljmp
andb
mov
data16
xchg
lods
push
popa
out
sbb
mov
dec
xchg
cmpl
jp
or
clc
lea
add
imul
in
out
ret
in
push
push
dec
dec
in
rcrl
sub
daa
or
jns
or
push
rorl
push
test
adc
enter
daa
mov
dec
jl
into
pusha
sbb
xchg
fst
sub
bound
mov
add
repz
pop
decb
ss
pop
mov
out
addr16
testl
push
out
dec
rclb
clc
ficompl
inc
mull
or
andl
and
bound
aad
cmpb
jb
xlat
jge
jle
outsb
sbb
cmp
repnz
cmc
push
das
xorl
pusha
mov
add
icebp
dec
add
adc
mov
or
scas
and
add
sbb
aaa
gs
add
dec
or
hlt
daa
aad
pop
jbe
std
sub
andl
jno
dec
jns
pusha
sub
jle
push
inc
int3
inc
lds
fmull
cmpl
cmp
pop
loop
cmc
add
movsb
pusha
adcl
add
fs
rolb
adc
adc
mov
imul
leave
mov
pop
mov
or
ffree
data16
fstpl
xor
xchg
and
divl
fists
int
dec
inc
ljmp
jno
cmp
loopne
jbe
mov
adc
pop
pop
scas
js
hlt
add
das
fisubs
dec
shlb
mov
inc
xor
xor
mov
inc
and
cmpsl
and
repz
fisttpl
and
jecxz
shr
stc
enter
add
sbb
cmp
xlat
hlt
js
jnp
lods
mov
jb
or
in
out
pusha
cmp
jns
jne
daa
cmp
inc
push
mov
push
popa
cmp
test
push
or
and
add
sub
cwtl
aaa
and
ss
fiaddl
outsb
scas
cmp
xlat
pop
nop
mov
sbb
leave
inc
sub
loopne,pn
dec
lock
push
cmp
into
cld
filds
js
cmpsl
popf
mov
xor
stos
imul
shrl
push
stc
or
push
nop
in
cld
mov
fidivl
push
int3
cmp
fstp
inc
or
gs
test
pop
test
cmp
outsl
in
insl
icebp
insl
rolb
sbbl
test
mov
das
xor
push
data16
ficomps
push
loop
or
xor
dec
sti
testl
sub
idivl
sub
xchg
xlat
ficomps
je
pop
add
hlt
mov
and
test
inc
fldcw
xchg
outsl
lods
cmc
roll
push
sbb
mov
loop
cwtl
pop
sbb
arpl
inc
out
lods
jl
pop
pop
adcb
cli
mov
rclb
rorb
divb
test
je
pop
js,pt
jbe
into
lret
sysenter
lret
or
dec
int3
mov
popf
sub
jp
cmpsb
sub
lea
dec
mov
xchg
sub
mov
test
les
pusha
sub
xchg
mov
fsubrl
xchg
or
or
stos
lcall
std
cmp
xchg
js
cmc
gs
aas
dec
mov
in
cwtd
leave
xorl
data16
addr16
fwait
rcll
xchg
shrb
loopne
or
fldt
popf
fidivrs
inc
repnz
add
mov
sbb
cmpsb
push
ljmp
mov
lea
fsubr
popa
mov
repz
jge
aad
pushf
xor
pop
shrb
pop
xchg
hlt
push
and
jns
lods
iret
fs
fsubrl
into
outsb
fsubrp
sub
add
insb
xchg
sub
insl
out
dec
js
dec
lods
cmc
xor
cs
mov
xor
imul
notl
xor
dec
aaa
mov
jne
fmuls
pop
cmpsl
je
inc
pusha
js
aas
aad
xchg
sub
xchg
mov
stos
hlt
repz
and
outsl
xchg
hlt
inc
popf
mov
mov
testb
popf
push
das
sbbl
mov
mov
mov
test
jo
es
and
dec
add
test
jp
fsubrl
adc
cmp
push
or
imul
dec
fidivs
xchg
push
jp
sti
or
mov
cmpsl
data16
dec
push
addr16
addl
iret
insl
mov
and
loope
pushf
in
cli
cli
outsb
xor
inc
mov
cltd
lret
pop
or
xchg
and
bound
push
mov
arpl
icebp
js
and
mov
jp
mov
inc
fdivr
sbb
pop
cmpsb
and
sub
adc
addb
push
xor
fnclex
ficompl
and
or
lcall
xchg
xchg
outsb
sub
sti
mov
adc
pop
int3
mov
pop
decb
addl
bound
subb
daa
sbb
movsl
out
mov
jnp
flds
mov
push
lret
dec
in
mov
add
ds
ret
leave
mov
into
mov
enter
out
adc
aaa
std
adc
dec
addl
sub
lea
in
das
fistpl
mov
test
mov
mulb
in
idivb
jge
or
lcall
push
add
stos
push
dec
rorl
xchg
in
out
shlb
addl
fwait
jmp
mov
push
ret
cmc
stos
vpcmpeqw
mull
cs
xchg
rep
int3
movsl
outsl
scas
loopne
jmp
lahf
and
xor
lods
pop
out
inc
xchg
sub
cs
inc
cmc
repz
fldl
mov
lea
xor
lods
roll
jnp
adc
adc
inc
pop
les
pop
xchg
add
jae
mov
dec
int
outsl
ds
ficompl
ret
test
jg
aad
fcmovbe
adc
sti
mov
lea
push
iret
jae
daa
fs
imul
out
xchg
aam
xchg
jo
pop
or
adc
xchg
dec
pop
ret
mov
mov
sub
movsb
dec
push
mov
sub
add
cltd
xor
xor
adc
pop
out
sbb
pop
jnp
pop
stos
arpl
pop
cmp
leave
push
dec
cmp
movsb
jg
repnz
xchg
cmp
xor
popf
inc
into
xchg
imul
xchg
js
push
pop
sbb
xlat
inc
xorl
pop
add
subb
out
jmp
addr16
loopne
fwait
sub
data16
mov
stos
xor
add
gs
fnsave
mov
fstpt
or
enter
mov
out
mov
std
jl
cmpsb
pop
mov
dec
pusha
shrb
and
sub
in
push
xchg
cmp
aam
mov
dec
pop
cmc
sub
mov
or
fs
mov
movsb
sahf
movsl
aam
dec
scas
ds
ljmp
imul
jae
mov
stos
test
dec
add
loope
stos
rol
push
fdivr
xor
fyl2x
xor
movsb
lds
arpl
sub
mov
loop
fldl
stos
pop
js
in
lods
mov
mov
int
cmc
push
add
nop
jbe
insb
add
repnz
cmp
or
out
insb
xchg
mov
rcr
jnp
jge
jno
xchg
fs
popa
shll
test
mov
mov
sbb
in
fs
inc
mov
mov
fs
sbb
dec
scas
xor
push
out
cltd
and
aas
insl
mov
sub
xor
mov
into
adc
xchg
fdivs
mov
pop
out
cmp
mov
xchg
out
xchg
sub
hlt
in
repnz
popf
shlb
dec
cltd
in
test
adc
in
push
pop
mov
insb
fwait
nop
mov
sbb
test
int3
sbbl
in
and
fdivrl
or
fistpl
inc
aad
inc
clc
pop
out
out
jge
dec
das
mov
xchg
ja
pop
loopne
mov
cmp
mov
rcll
inc
lds
jecxz
pop
scas
out
or
int
push
lret
scas
pop
and
cmpsb
add
in
lea
xchg
lahf
xor
sub
rorb
mov
jne
and
jp
neg
inc
cwtl
out
pushf
inc
sub
inc
ret
mov
ss
jge
mov
adc
pop
jle
xor
jge
mov
mov
int
cmp
in
icebp
adc
arpl
xchg
pop
add
cmp
push
bnd
cmp
in
fiaddl
mov
mov
mov
lods
fisubrl
adc
arpl
popa
xchg
insb
stc
popa
cmp
faddp
ret
sbb
gs
push
jbe
cmp
sub
sbb
sbb
jae
push
pushf
jmp
sbb
mov
jg
mov
out
push
pop
push
fucomi
mov
sahf
push
ficompl
adc
sub
inc
jmp
shl
lea
dec
daa
mov
push
subl
ljmp
jp
icebp
adc
ja
negl
aam
leave
ljmp
cmpsb
sub
divb
sbb
adc
sbb
jno
mov
dec
cli
call
fimuls
fimuls
and
xor
sub
xchg
mov
daa
cmp
pop
pop
cmpsl
stos
mov
ss
jmp
sub
and
jb
pop
mov
les
rol
nop
pop
call
popl
lahf
imul
jnp
or
or
decl
enter
cld
mov
cli
jae
lock
scas
xlat
jmp
and
jo
jp
fwait
push
push
or
lcall
pop
out
mov
push
in
insb
xchg
loope
les
jne
mov
aas
test
sbb
pop
popa
mov
ret
inc
mov
daa
mov
js
pop
inc
mov
push
sbb
sub
mov
das
enter
sarl
pop
scas
push
jns
lea
jecxz
ja
aam
loopne
or
sub
cmpsb
mov
mov
push
xchg
dec
dec
inc
popf
movq
add
pusha
adcb
jg
push
mov
or
mov
cmp
fildl
xor
or
mov
or
xchg
les
imul
cltd
and
mov
dec
or
adc
pop
icebp
pop
aam
mov
mov
loop
rcr
cmpsb
mov
int3
mov
loope
ja
dec
dec
ja
orl
mov
sub
lods
jo
or
mov
pop
loop
cltd
int3
shl
jg
rcr
adc
inc
lret
bound
dec
mov
push
repz
sahf
fs
repnz
jecxz
cmp
shlb
jnp
enter
test
jecxz
sub
mov
sarb
imull
jo
testb
mov
shll
sarb
stc
test
sbb
pop
cmp
imulb
inc
mov
mov
add
jb
inc
cs
add
and
and
cmpsb
xor
gs
inc
mov
fsubl
test
mov
and
xor
leave
outsb
ret
shrl
cld
ja
mov
dec
ret
or
mov
fdivr
xor
push
mov
pop
pusha
mov
adc
dec
test
mov
jns
rcll
cmp
js
js
sub
sub
add
je
dec
negb
mov
cpuid
insb
sbb
lods
and
dec
mov
mov
mov
outsb
or
pop
pop
shrl
les
sbb
ss
and
lods
adc
mov
and
xor
js
jae
les
dec
pushf
test
mov
sub
cmp
test
repnz
std
inc
xchg
mov
lds
jbe
cmp
outsb
cmp
pusha
ret
inc
xor
jno
xchg
stc
sub
lods
pop
jle
add
fdivrl
jge
push
aam
bound
or
mov
les
invd
clc
mov
and
jae
out
mov
xor
jge
test
mov
negl
test
dec
adc
andb
xchg
cmp
test
divb
push
cmp
sub
dec
lods
lds
push
ljmp
lret
adc
or
mov
sahf
mov
into
lret
inc
mov
xor
repz
mov
mov
loop
or
push
inc
hlt
cli
or
inc
aaa
pop
scas
push
sbb
adc
sub
or
loopne
std
test
and
sbb
fildl
sbb
dec
add
cmp
mov
popa
fildl
enter
jae
xor
std
js
sub
in
sahf
xor
mov
dec
mov
out
fsubrl
iret
idivb
push
call
jmp
popf
test
mov
jns
mov
repz
push
lret
int
xchg
push
repz
push
mov
cmpsl
mov
xchg
jle
and
cmp
cmpxchg
xchg
add
dec
fdivrl
lea
js
aaa
jno
xchg
arpl
sbb
sahf
adc
outsb
adc
mov
mov
inc
adc
push
testb
aaa
xchg
es
loop
loopne
mov
faddl
pushf
sub
xchg
push
mov
push
mov
stos
jae
sub
nop
xchg
cmc
dec
xchg
lcall
cs
mov
cltd
mov
dec
int
addr16
and
ja
cltd
loopne
inc
pop
aaa
xor
push
dec
cmpb
addr16
cmpsl
shrl
outsb
ds
pop
loopne
leave
inc
testl
insb
lret
popa
jle
mov
pop
or
push
pop
push
xchg
mov
ret
push
cmpsl
pop
xchg
fmul
aaa
add
xor
jnp
xor
and
movb
dec
in
inc
cmpl
ja
sti
dec
lds
dec
rorb
loop
jge
and
mov
jmp
sahf
fistpl
xchg
je
test
cmp
xor
repnz
and
cmpsb
js
add
fldt
out
adc
bswap
mov
movsl
pop
dec
or
test
adc
sbb
sbb
jg
dec
mov
cwtl
fwait
lret
mov
and
imul
add
test
push
add
pusha
mov
data16
inc
bswap
sub
cmp
out
dec
mov
nop
mov
int3
and
rolb
fisubrs
pop
fidivl
dec
mov
cmp
push
push
add
mov
hlt
inc
jg
in
xchg
jecxz
xchg
cltd
dec
aaa
outsb
and
add
add
imul
shlb
push
lahf
fcmovb
mov
add
cmp
sbb
dec
loopne
jno
std
jbe
pop
fidivl
lods
insb
incb
std
pop
arpl
sti
dec
lock
xchg
xor
xchg
je
leave
negb
icebp
sbb
out
push
jecxz
mov
movsb
leave
adc
loope
add
mov
and
loopne
mov
cmp
pop
cmp
mov
mov
mov
adc
mov
and
pop
out
jo
and
imul
mov
icebp
and
xchg
cs
mov
outsb
rcrb
mov
adc
jg
cmpsl
ret
sub
enter
xor
das
pop
gs
push
inc
lods
mov
in
das
push
clc
lcall
cmp
push
mov
fisttps
inc
leave
pop
movsl
shl
jbe
add
lods
cmc
pop
jl
add
push
bndstx
jno
dec
outsl
push
pop
dec
mov
push
sub
loopne
push
jae
cmp
xor
insl
lods
das
and
in
icebp
push
out
in
jb
sub
and
pushf
dec
lds
add
clc
lret
mov
out
js
mov
iret
cmp
sbb
popf
out
xchg
fs
adc
inc
daa
and
or
sbb
lods
inc
xchg
adc
insl
mov
and
outsl
ss
fisttps
lods
ja
cwtl
aam
mov
jne
jge
test
adc
call
jne
ret
cmp
ljmp
test
mov
js
dec
pop
mov
ficoms
mov
call
loopne
xchg
roll
jmp
sub
dec
inc
fwait
jmp
call
add
int3
adc
adc
loop
pop
lret
inc
mov
insl
dec
faddl
clc
and
js
fistpll
in
fs
sbb
push
call
inc
jle
dec
mov
fnstcw
cmp
xlat
cmp
lods
cmpsb
arpl
xor
addr16
adc
arpl
test
sbb
jbe
lea
loopne
out
jecxz
pop
jmp
lea
jp
iret
xchg
enter
ret
xchg
adc
mov
hlt
sbb
test
int3
mov
scas
arpl
mov
xor
fwait
test
sbb
pushf
sysret
jl
or
mov
es
mov
add
mov
mov
push
xchg
mov
fistpl
mov
adc
xor
push
push
fsub
mov
pop
mov
negb
xchg
xor
pop
mov
repz
imul
push
lcall
mov
dec
jg
out
clc
sub
dec
and
xor
mov
cli
out
shlb
or
sbb
push
pop
ret
lds
cmpsl
jl
popa
mov
sbb
or
std
sub
xchg
pop
sub
jae
inc
negb
push
test
push
shl
gs
mov
bound
clc
mov
or
imul
icebp
rolb
addr16
das
jmp
or
mov
enter
orb
daa
xor
pop
lea
out
scas
das
or
lds
cmpsb
pop
mov
fcmovbe
mov
ja
xchg
rol
dec
mov
xchg
sbb
addb
fcomps
out
mov
mov
rorb
arpl
add
mov
rcrl
adc
inc
inc
sahf
mov
inc
sbb
push
scas
inc
cmp
sub
sub
clc
mov
add
lcall
aas
addl
push
scas
out
pushf
cmc
jmp
and
fists
xchg
cwtl
pop
add
test
icebp
dec
cmp
jo
daa
stos
or
mov
inc
or
popf
sbb
and
cmpsb
add
jmp
and
mov
dec
das
mov
lahf
out
sbb
mov
out
ret
and
adc
push
dec
pop
or
fsubrp
lahf
stos
add
popa
sub
pop
adcb
sarb
push
inc
sbb
ficomps
fstpt
addr16
pop
xchg
fdivl
cwtl
jecxz
shrb
push
lods
inc
pusha
adc
call
dec
or
mov
fwait
lds
jp
push
add
pop
ljmp
aad
push
stos
push
addr16
mov
fidivs
push
push
xchg
jae
push
js
lds
mov
push
cmpl
push
std
push
test
stc
and
insb
pop
xorb
movsl
xorb
stc
mov
push
xchg
popf
call
mov
loope
and
xor
mov
or
pusha
lock
sti
and
dec
add
rcll
mov
dec
xchg
cmp
pushf
hlt
lods
or
pop
or
cmp
nop
xor
add
loope
sub
inc
push
ljmp
sti
cmp
and
inc
xchg
mov
mov
cwtl
fcmovnu
addr16
fadd
repz
add
lea
sub
mov
mov
push
and
enter
and
sub
inc
jmp
cmc
fwait
xchg
xor
pop
icebp
cmc
sti
cwtl
fwait
imul
test
xchg
cmp
sbb
xchg
loope
ss
aad
ds
jnp
pop
jecxz
mov
push
jb
adcb
flds
sbbb
xor
xor
fistps
xor
dec
xchg
xchg
adc
cmc
adc
stc
or
fadd
jo
mov
addr16
mov
inc
ficomps
fwait
imul
mov
daa
scas
fcompp
xor
imul
vpandn
or
or
adc
jne
xor
aam
mov
mov
mov
cmp
dec
cwtl
test
mov
jmp
pusha
dec
pop
lret
pop
gs
xchg
loop
pushf
hlt
loopne
or
mov
imul
mov
dec
into
out
jbe
lcall
outsb
insl
inc
int3
jl
int
sbb
jle
aaa
lret
test
mov
lcall
test
xchg
add
xchg
jb
pop
outsb
cmp
dec
sub
inc
enter
dec
push
into
jp
sub
lcall
mov
aam
cmp
sti
cmp
xor
outsl
ljmp
mov
adcb
aad
cmp
inc
call
dec
xchg
dec
adc
pop
dec
add
sbb
fnstenv
cli
cmp
jns
push
sbb
lahf
outsb
sbbb
inc
push
outsb
imul
pop
sbb
cmpsl
mov
or
jne
or
or
mov
sbb
decl
push
push
xor
dec
or
and
jne
push
mov
xchg
inc
sub
leave
add
xor
divb
mov
fidivrl
inc
push
movsb
pop
leave
int
andl
imul
push
jle
popa
jl
push
test
or
es
dec
xor
inc
mov
inc
add
fisttpll
enter
hlt
cld
pop
jmp
xchg
fdivrl
and
cltd
mov
cld
test
sbb
mov
or
data16
adc
fsubrl
in
dec
push
add
int
xchg
into
cmpb
pusha
lahf
rclb
or
xchg
test
call
loope
and
dec
xor
adc
sbb
inc
in
je
pushf
push
movsb
push
cmp
or
lock
lds
iret
dec
xchg
inc
mov
mov
iret
fs
xchg
dec
sub
inc
stos
dec
aad
push
cmp
dec
int
jb
or
push
xchg
cmp
ljmp
ret
bswap
xor
fists
mov
jl
fisttps
enter
pop
rcr
pushf
cmp
jae
imul
pop
filds
std
mov
sbb
out
pop
shrl
or
xchg
lcall
xchg
repz
in
lahf
push
sbb
mov
dec
sbb
cmpsb
es
push
movsb
loop
sub
sub
mov
or
negl
xlat
push
arpl
push
jne
adc
dec
lds
mov
scas
adc
int
aas
push
mov
test
adc
test
jnp
xchg
mov
push
in
sbb
pop
jo
mov
mov
and
cwtl
jno
mov
jecxz
cmp
xchg
stos
cmp
pop
int
in
test
mov
int3
mov
lds
insl
rolb
xchg
fldenv
inc
out
clc
popa
lds
or
imul
dec
mov
inc
inc
jbe
hlt
xchg
dec
mov
in
mov
outsl
hlt
or
xchg
cmpsb
push
xchg
std
dec
test
and
sbb
leave
add
mov
or
sub
fbstp
cwtl
xchg
push
std
lods
mov
mov
cmp
test
mov
hlt
sbb
test
icebp
mov
sarl
or
aam
mov
cwtl
scas
pop
aaa
mov
cli
xchg
je
ret
and
or
jle
inc
dec
movsb
icebp
xchg
sbb
inc
fcmovnbe
fldl
cwtl
jne
mov
or
pop
xlat
ret
push
pop
add
or
cld
mov
mov
cs
pop
mov
jno
push
pop
pop
repz
cmp
cs
test
lock
jno
jge
cmp
push
lods
stc
mov
dec
stos
xor
add
fcomip
fcmovnbe
mov
aaa
sbb
and
jg
inc
push
jecxz
cmp
adc
lahf
jns
in
rcrl
sbb
shll
pminsw
sbb
lods
test
imul
hlt
jg
js
jo
movsb
in
pop
out
or
cs
sub
mov
mov
sbb
gs
and
xchg
xor
inc
mov
out
cmpsb
sub
cmc
mov
pop
shr
sbb
push
ret
mov
xchg
out
pop
hlt
jbe
sbb
cmp
stos
cld
push
jg
gs
fsubs
rcll
push
into
inc
into
mov
mov
arpl
or
mov
mov
mov
addr16
push
or
jbe
movsl
cmp
js
lea
xor
mov
adcb
mov
lods
and
loop
icebp
out
mov
in
push
cmp
push
inc
scas
or
dec
fwait
xlat
test
mov
cld
pop
into
dec
or
ljmp
test
xchg
cmp
sarb
les
into
jg
pop
out
dec
jmp
std
xchg
sbb
xbegin
leave
cmp
loop
cmp
xchg
adc
xchg
and
insb
data16
fistpl
sub
pop
fsub
jno
fstps
xor
pushf
xchg
outsl
arpl
aam
dec
xchg
jo
xor
fcomi
cmpl
inc
add
push
mov
mov
mov
test
outsl
pop
jg
fs
les
lret
call
jmp
push
pop
mov
sub
lret
cltd
jmp
pop
sbb
xor
pop
add
dec
mov
movsl
sbb
sarl
jp
movsb
nop
mov
xchg
sti
pushf
andb
or
inc
pop
movsl
pop
push
pop
aaa
mov
add
push
or
inc
daa
xchg
leave
push
ret
sub
repnz
xchg
lea
sbb
cltd
inc
mull
mov
stc
repz
fimuls
and
jb
jmp
inc
imul
sub
mov
adc
ss
sbb
mov
or
into
sub
or
push
mov
push
test
std
or
fst
mov
es
pop
insl
jns
jnp
arpl
or
test
aad
dec
out
and
loop
js
test
out
mov
fucom
adc
lret
push
xchg
xor
pusha
leave
and
into
lcall
test
jmp
push
out
mulb
sahf
lods
lods
sbb
mov
imul
mov
arpl
lds
fst
lahf
aad
push
jns
xchg
sub
mov
pop
dec
xchg
imul
add
mov
sbb
jne
jbe
jge
jo
inc
ljmp
mov
int
pushf
mov
stos
into
push
pop
sbb
pop
jo
test
ja
lret
mov
loopne
movsl
pop
dec
divl
cmp
push
int3
adc
inc
push
in
cld
cmpsb
test
jo
cmpsl
int
mov
xchg
mov
xor
stc
sub
test
movsl
inc
jnp
cmp
xor
adc
je
pop
aad
mov
mov
mov
and
xchg
arpl
testl
adc
mov
jge
jp
xor
cmpsb
dec
jbe
xchg
xor
sub
push
rcll
pop
test
sahf
push
and
add
push
xchg
ljmp
movsl
mov
fmulp
cmpsb
cwtl
iret
movsl
cmp
jl
xchg
lods
arpl
daa
mov
in
push
popl
pop
ja
sub
adc
xchg
cmpsl
sub
test
jae
stos
shl
xor
dec
pop
out
sub
cmp
cmpsl
jg
fwait
cmp
rolb
mov
pop
es
insl
push
xlat
mov
push
adc
push
fstps
loope
lods
and
les
dec
mov
mov
mov
mov
xor
bound
jecxz
xorb
xchg
add
adc
iret
sub
lock
dec
push
jp
outsl
cmp
fstl
rcrb
or
out
les
xchg
fdivrl
jl
xor
xor
std
sbbl
imul
fiadds
jp
rcr
int
bound
xchg
mov
add
pop
lods
sbb
xor
cmp
out
notl
lods
loopne
sub
ret
lret
pusha
jae
ja
or
mov
repnz
inc
pusha
jb
jo
and
mov
loop
and
fwait
adc
fnstcw
inc
ljmp
movsl
mov
aaa
cmpl
pushl
int3
jecxz
mov
ds
mov
aad
dec
or
cwtl
test
sahf
mov
jae
leave
fwait
mov
xchg
outsb
xchg
out
jge
movsb
ljmp
in
and
loope
xchg
bound
movsl
push
aad
add
fdivs
mov
jne
and
jae
stos
mov
mov
fadds
mov
xor
movsl
testl
leave
rolb
jmp
push
jnp
xor
jmp
in
je
std
xchg
pop
enter
mov
in
adc
test
jmp
and
xor
mov
xor
roll
mov
stos
out
inc
cmpl
mov
int
inc
into
std
rcrl
xor
stos
stc
inc
jmp
cmpsb
mov
ljmp
add
insb
loopne
into
adc
cwtl
cwtl
pop
mov
sbb
jmp
decb
xor
pop
mov
and
adc
jmp
imul
mov
rol
sbb
cwtl
insl
push
int
and
push
mov
pusha
or
cmp
jae
xorl
repnz
xchg
pop
xchg
cmp
insb
mov
imul
in
pop
scas
xor
sbbl
mov
cmp
mov
jmp
jg
ja
inc
in
lds
ficompl
imul
cs
jnp
xlat
jb
lock
inc
inc
jo
add
push
test
dec
sbb
cmc
push
movsb
add
pop
lods
add
pop
pop
and
mov
jmp
ret
mov
add
push
mov
adc
or
inc
into
daa
in
insl
out
frstpm(287
cmp
lcall
lret
insl
inc
addr16
pop
xor
gs
xor
scas
ss
sub
push
pop
dec
or
xlat
sub
mov
xor
vmread
idivb
inc
in
aad
dec
jne
dec
xor
jae
mov
jl
in
or
jbe
sub
scas
imul
ss
imul
lock
adc
out
adc
inc
cmp
mov
and
cmpsl
negb
xchg
sub
rcll
ljmp
lea
aaa
scas
jle
mov
xor
push
jp
sbb
jo
pushf
lea
neg
mov
mov
push
dec
out
fdivrs
mov
ret
scas
cltd
call
testb
xor
mov
popa
sbb
icebp
fisttps
mov
in
addr16
push
mov
out
mov
stos
sahf
xchg
lahf
js
ret
jmp
push
test
mov
ja
enter
fcmovne
pop
pop
insb
imul
mov
stos
iret
adc
fsubl
add
inc
jl
cmp
jae
jl
fistpll
jmp
inc
xor
mov
cmp
mov
movsl
dec
and
faddl
lods
loope
push
popa
sub
outsb
scas
ja
and
cmpsl
fildl
imul
mov
mov
sahf
loopne
repz
pop
aad
lock
out
cmp
loop
push
dec
cmp
xchg
and
shrl
fmull
or
cld
enter
fimull
test
cmp
push
cmp
leave
std
into
ret
cmp
pushf
repz
testb
pop
sub
cmpb
aas
dec
out
mov
mov
insb
inc
je
fwait
movsb
jns
mov
inc
add
dec
jb
int
rcr
dec
jnp
in
mov
adc
push
cs
ds
xlat
outsl
adc
filds
jg
pop
cld
repz
adcl
iret
add
getsec
mov
push
cli
lods
in
shl
es
loope
subl
fiaddl
loopne,pn
mov
insl
shll
pushf
sbb
cmp
decl
js
cmp
mul
aaa
mov
pop
out
mov
push
xor
inc
xor
mov
jmp
mov
mov
mov
bound
ret
push
in
mov
iret
or
int
dec
pop
je
jl
jb
lret
popf
cmp
push
aas
mov
stc
pop
sbb
mov
and
jmp
and
xchg
jmp
popa
xchg
rcrb
xor
pop
jne
sbbb
sti
push
sbb
lcall
test
dec
js
ret
push
inc
outsb
int3
push
ret
mov
dec
cmp
ljmp
mov
xor
inc
pop
cwtl
rcrb
fs
rol
iret
addr16
lock
out
pop
sti
xchg
dec
test
sub
push
pop
sbb
mov
cmp
js
hlt
sbb
xor
out
mov
daa
jbe
aas
sub
adc
push
or
bound
sub
pop
push
std
inc
mov
test
stc
sbb
mov
inc
cs
mov
cmc
push
in
mov
push
push
loopne
in
sbb
push
push
push
or
shrl
out
dec
or
push
fmul
push
sahf
leave
pop
push
sbb
jmp
int3
sub
subb
shrb
fstpt
mov
or
pop
fs
dec
adc
adc
inc
rolb
mov
cmp
fbstp
jp
xchg
iret
fdivrs
stc
xchg
std
je
dec
pop
aaa
xor
xchg
add
jnp
or
push
xchg
fwait
or
jl
cmpsl
pusha
mov
mov
xor
jbe
mov
mov
xchg
das
arpl
sti
push
addb
lock
cld
shll
jecxz
mov
cmp
xchg
add
pop
pop
cmc
xchg
cmp
add
inc
or
rolb
rcr
dec
mov
lds
test
jno
jbe
movb
pop
incb
adc
dec
add
daa
gs
shrl
inc
push
mov
stos
and
mov
aad
xor
lret
insl
adc
pusha
sbb
ss
pusha
pop
movsl
shrl
sahf
sub
inc
adc
test
mov
pop
xor
jmp
or
aad
out
mov
ljmp
cwtl
cltd
sub
jl
mov
daa
or
push
push
test
mov
aam
lahf
in
add
xchg
mov
fistl
fwait
push
out
lahf
pop
adc
mov
mov
rcrb
push
cmp
cmc
adc
sbb
hlt
sarl
ret
cmp
andl
cmp
lcall
mov
sbb
shlb
pop
and
ljmp
hlt
jne
sub
xor
xchg
into
jno
sbb
divl
outsb
pop
sub
ss
fs
cmc
cmpsl
adc
adc
cmp
sub
das
push
xchg
test
movsb
dec
inc
ds
xor
repz
jle
jp
out
fdivs
ja
or
pop
dec
and
pop
xchg
push
push
cmp
aaa
adcb
les
iret
sbb
jo
mov
nop
mov
scas
push
insb
and
sbb
add
mov
xchg
das
iret
lods
out
cmp
or
add
fistpl
cli
jns
dec
icebp
out
pop
rolb
mov
loope
jb
ss
and
push
pop
out
push
scas
mov
push
pop
inc
or
fists
mov
lds
aaa
cmc
mov
adc
aaa
dec
ss
mov
jno
xchg
out
int3
add
nop
loope
scas
push
dec
test
notb
mov
and
roll
dec
dec
cmp
aas
subl
add
das
cmp
push
in
fnstsw
mov
mov
sub
or
ret
hlt
stos
addr16
andl
push
jno
lcall
dec
inc
xor
sbb
add
sahf
xor
sbb
movsl
ret
cmpsb
push
push
adc
in
test
mov
lock
lods
xorb
adc
cmc
sub
push
in
xchg
xor
testl
sbb
xor
or
scas
out
lret
mov
push
jnp
push
stos
push
addr16
sbb
call
pop
jle
cmp
push
cmp
jne
add
and
popa
lea
rolb
pop
int3
shlb
and
mov
test
clc
loopne
rclb
dec
nop
les
jle
dec
adc
out
sbb
ficoml
cmp
jno
cmpb
outsb
jp
jno
lea
xchg
or
inc
jge
xor
jns
jns
inc
in
mov
out
cltd
ljmp
shll
mov
mov
ljmp
sarl
dec
xor
test
mov
rcll
xor
push
pop
jb
out
loop
das
scas
inc
xor
mov
hlt
mov
out
jle
test
stos
das
fildl
repz
sahf
cmp
cmp
jmp
in
loope
jle
push
sub
popf
out
scas
mov
sub
in
sbb
push
add
ss
imul
inc
inc
xchg
pop
cmp
ret
jbe
jle
pop
pop
pop
sub
sbb
jae
orb
repz
in
stos
cld
ds
inc
sarl
mov
je
fxtract
test
sarl
insb
jge
xchg
lds
fsubl
mov
or
mov
sahf
cmc
in
das
sysenter
xor
xor
add
mov
fidivl
inc
imul
ficoml
xor
mov
stc
push
cmc
shl
dec
pop
lock
movsb
lret
xchg
add
jb
inc
lds
mov
push
in
xchg
mov
in
sti
push
repnz
adc
xchg
test
pop
push
dec
adc
jnp
repnz
push
pop
xlat
pop
cli
out
in
repnz
mov
ja
pop
popa
loop
cmp
jge
mov
mov
in
outsb
cld
std
lret
cld
das
je
push
fidivrs
xchg
stc
shrl
test
mov
adc
jnp
lods
rcrl
ljmp
rcrl
inc
sub
cmp
cmp
cmp
lods
hlt
repnz
jo
lods
dec
int3
mulb
repnz
xchg
lret
inc
test
mov
sbb
jne
cmp
sub
shll
popa
xor
lods
aam
mov
add
inc
mov
xchg
repz
add
ss
mov
scas
or
data16
cmp
lock
loope
jecxz
nop
jnp
movsl
das
cmp
mov
mov
insb
fisubrl
int
cmc
xor
aas
cmp
dec
icebp
repz
lock
cmp
cld
data16
icebp
fisttpll
push
int3
add
popa
push
push
cld
inc
mov
mov
sbb
lods
or
into
addr16
adc
cmp
xchg
in
mov
mov
je
jnp
out
adc
negb
lcall
insl
sbb
fmul
dec
and
mov
add
mov
lods
mov
fnstcw
pop
inc
add
aam
icebp
push
xor
call
push
notb
mov
rcrl
push
ret
jbe
fldcw
clc
movsb
sbb
or
gs
mov
jp
or
into
cmp
mov
inc
push
cmp
push
fildl
mov
mov
mov
xchg
out
cmc
repz
jmpw
mov
bnd
movsb
or
pop
sbbb
dec
mov
sub
cmp
jnp
cld
mov
int3
punpcklwd
xor
loope
cwtl
or
mov
xor
lods
scas
in
sub
adc
insl
jb
arpl
sbb
ret
movsb
bound
push
mov
mov
xchg
sbb
frstor
mov
push
dec
push
or
or
sub
xor
ds
divb
or
std
jbe
aad
or
gs
lahf
push
cmp
or
loopne
or
insb
mov
dec
or
cli
pop
js
addb
popa
xor
arpl
ljmp
mov
test
scas
inc
sub
imul
mov
outsb
inc
push
bound
mov
ds
daa
ljmp
fnclex
test
inc
mov
push
dec
push
cmpsb
rorl
iret
es
adc
aaa
ss
ja
mov
xchg
inc
jle
cwtl
inc
test
jp
mov
inc
clc
es
mov
jb
or
mov
xchg
pop
std
ds
or
inc
test
jne
cmp
cli
call
mov
dec
sub
int3
rep
call
fists
sub
shrb
sbb
push
out
jecxz
lods
adc
jg
js
mov
repz
outsb
lock
jp
jle
lcall
mov
lds
rcll
mov
mov
nop
pop
pop
dec
and
dec
leave
or
stc
sbb
in
pop
mov
daa
mov
ret
sbb
xchg
push
out
repnz
adc
cmpsb
and
aam
add
mov
and
sub
decl
sub
push
test
lret
mov
mov
out
xor
jns
and
or
mov
and
je
and
dec
std
xlat
imul
jecxz
je
jp
mov
aad
fdivl
adc
out
ds
cmp
mov
add
mov
insb
xchg
in
dec
add
add
pop
pop
mov
lods
cmp
cld
xchg
aam
stc
leave
divb
arpl
sub
std
into
add
pop
xchg
cld
and
lds
sahf
add
clts
pop
jp
add
test
push
jecxz
scas
lock
shrl
dec
cmpl
neg
out
sar
cmp
xchg
mov
ficompl
push
sbb
mov
loop
mov
sub
xor
std
lahf
rorl
jecxz
mov
cmc
std
sbb
fcoml
imul
push
pop
cmpb
das
insb
pop
sub
adc
andl
dec
dec
stos
jns
xor
dec
inc
out
dec
push
lds
xor
xchg
lock
and
loopne
inc
mov
jnp
add
xor
lods
repnz
cmpb
xchg
mov
aam
mov
adc
mov
xchg
jecxz
push
ds
lods
mov
cld
jle
jl
jae,pn
mov
je,pn
lcall
mov
adc
mov
in
mov
aad
ja
add
cmp
xor
fmul
lea
fmull
add
out
data16
fidivs
ret
xchg
lcall
lock
outsb
test
mov
mov
cwtl
in
es
mov
int3
or
push
pop
inc
jns
jecxz
ja
and
sub
rorb
adc
movsl
sbb
fwait
sbb
ljmp
dec
stos
adc
mov
add
jbe
lea
adcl
pop
lahf
mov
aam
sub
sub
push
jae
movsb
fnstenv
sub
or
jecxz
pop
cwtl
dec
sub
loope
sub
or
fildll
mov
xor
push
pop
scas
out
ds
out
lret
movsb
jae
cld
mov
iret
push
sbb
jp
inc
push
fs
sub
jbe
jns
iret
mov
movsb
ljmp
fbld
dec
aad
jecxz
test
les
push
jae
push
into
scas
pop
stos
in
sbb
nop
fidivl
push
xor
hlt
push
ds
mov
xor
shlb
pop
std
inc
popw
dec
imul
mov
push
mov
mov
push
lahf
cltd
push
stos
mov
dec
loopne
inc
mov
xchg
pusha
sbb
imul
adc
les
jo
scas
js
mov
cmpsb
mov
ss
cltd
scas
cmp
push
ret
cmc
lea
dec
sub
shll
inc
lret
lea
movsb
cmp
jge
fwait
mov
repz
mov
add
xor
jmp
jne
add
xchg
mov
out
fsub
rcr
sbb
xor
in
push
in
sub
mov
dec
inc
xor
rcrl
ljmp
je
push
sbb
push
and
cmp
cmp
stos
cli
push
mov
cmc
fadd
ss
xchg
lcall
fdivl
arpl
adc
sub
cmp
adc
pop
testl
sbb
inc
pop
test
repnz
flds
cmpb
sarb
push
or
mov
cltd
jl
sub
rcr
lret
pop
adc
add
mov
mov
dec
xchg
lea
mov
mov
insb
push
enter
adcl
dec
pop
int
nop
sbb
scas
jge
xor
push
data16
push
lahf
dec
in
jge
jecxz
jno
nop
sahf
inc
mov
std
push
dec
cmpsl
xchg
mov
aad
jmp
mov
xchg
and
push
add
enter
jmp
imul
gs
pop
gs
fs
pshufw
cltd
leave
xchg
mov
adc
fwait
sarl
sarl
lds
pusha
ret
cmp
sbb
sub
mov
imul
or
ja
in
out
cli
fisubrl
xlat
std
into
pop
cmp
jmp
fwait
inc
inc
int3
loop
setnp
xchg
aas
cli
je
or
sbb
imul
stos
pop
cltd
lea
pop
leave
insb
arpl
sbb
negl
xchg
add
cmp
xchg
sbb
divb
jns
loop
movsl
repz
or
outsl
repz
jl
cwtl
js
idivb
sub
lret
in
cmp
and
jp
hlt
push
ljmp
mov
jo
mov
inc
and
aas
jb
inc
mov
add
pop
jge
sbb
imulb
lahf
stos
xchg
out
sbb
cmp
mov
or
cmpsl
lds
loopne
daa
jnp
xor
rcll
movsb
clc
imul
or
cli
fdiv
rcrb
push
adcl
pop
cld
sub
jg
sbbb
jnp
fs
dec
sub
dec
roll
pop
pop
jo
loop
idivl
dec
outsb
stos
iret
lods
mov
shr
adc
cmp
test
data16
bound
inc
adc
or
arpl
add
in
mov
cmp
pop
sbb
mov
negb
xchg
mov
sub
sub
cltd
out
push
cmc
jne
nop
cmpsl
mov
in
es
xor
jge
rorb
mov
sub
jo
stos
les
inc
es
xchg
ret
stc
aad
mov
pushf
stc
sub
lahf
arpl
out
jge
push
subb
loope
adcl
data16
imul
inc
dec
insb
push
mov
mov
addr16
in
lods
mov
fldenvs
xor
popl
daa
shll
xor
xor
push
sub
je
test
jo
int
popf
aam
dec
add
aaa
out
aad
js
pop
lds
shlb
add
push
xchg
pop
addb
add
out
popf
movsl
faddp
test
adc
xchg
sbb
xchg
mov
outsb
mov
ss
lea
dec
cmp
xor
mov
cmp
sbb
adc
cli
jg
inc
mov
inc
lea
enter
inc
and
mov
cmc
mov
push
mov
or
or
cmc
push
icebp
xor
xchg
mov
mov
xchg
rcll
dec
test
add
shll
mov
inc
out
outsb
xlat
xchg
ret
adc
jb
fidivrl
es
inc
adc
push
inc
ja
sbb
fmul
int
jns
rcrb
push
mov
outsl
or
cmp
fiadds
adc
push
mov
push
sub
inc
jmp
push
add
cmp
sti
mov
xlat
dec
inc
rcll
leave
ret
stc
pop
insl
lcall
cmp
test
dec
movsl
inc
or
mov
cs
les
insb
outsl
inc
rcrl
mov
clc
mov
ljmp
repz
sub
lds
or
and
outsb
sbb
fimull
loop
jns
daa
cmp
sub
adc
push
sub
scas
and
cmpsl
and
dec
test
ss
push
xor
insb
xchg
movsb
pop
aaa
dec
fcom
loopne
sub
inc
sub
fld
cmp
test
decl
shll
rcrl
xchg
cmp
push
notl
sub
dec
pop
sbb
cmpsb
dec
lds
sahf
in
inc
leave
stos
scas
stos
jg
mov
fildl
mov
xor
mov
in
rcrl
ucomiss
xor
pop
loopne
add
mov
in
je
dec
and
test
jge
add
pop
mov
sbb
in
mov
push
push
scas
xor
dec
cmc
enter
cld
ss
scas
sbb
mov
iret
imul
cli
jecxz
ss
mov
push
mov
and
clc
jp
loopne
arpl
mov
mov
ficoms
lods
push
or
xchg
dec
stc
sub
pop
aas
push
xchg
out
cmp
rcll
jg
xorb
jmp
dec
xorl
dec
sbb
jg
cwtl
sbb
mov
cmc
mov
nop
fwait
or
js
push
sub
push
mov
mov
lods
sbb
movsl
fwait
mov
rorb
jl
mov
sti
jge
mov
jo
or
setno
jnp
add
jbe
push
fwait
int3
mov
inc
out
mov
jbe
fimuls
mov
rclb
sub
pop
nop
and
push
jb
xchg
test
fsubp
push
sahf
addr16
sahf
mov
pushf
insl
aam
insb
sbb
insl
mov
rol
ficomps
outsl
mov
into
rcr
mov
ljmp
dec
cmp
pop
fistpl
scas
in
std
in
jge
pop
imul
adc
in
test
in
adc
add
dec
dec
inc
sbb
mov
call
mov
ret
xor
loopne
pop
jnp
xchg
sub
dec
repnz
clc
mov
jp
and
sub
mov
cmp
enter
pop
lock
inc
pop
adc
push
push
push
mov
js
loopne
or
jb
push
cmp
cltd
mov
mov
sub
jge
cmpsb
loopne
std
and
insb
sub
idiv
cmp
mov
aad
xchg
mov
xor
jns
add
mov
jmp
dec
out
and
sub
lahf
jno
or
inc
rcr
shrl
testb
inc
out
test
xchg
cmp
aas
xchg
in
jp
lcall
jns
jmp
adc
les
dec
adc
push
mov
mov
xchg
aam
int
fstpl
mov
dec
enter
jg
cmp
cmp
inc
and
fsts
mov
rorb
pop
jge
loopne
aam
inc
fdivs
out
or
jg
cmpsl
repnz
xor
pushl
xchg
mov
loop
or
ds
push
call
arpl
ja
sarl
sbb
cltd
push
sbb
ret
imull
inc
jp
sub
rcrl
xchg
mov
mov
cld
xor
dec
fadds
mov
adc
dec
lods
repz
push
mov
sub
inc
int3
dec
cmpsl
mov
cs
push
daa
divb
sbb
adc
xor
xchg
or
lea
pop
pop
ffreep
dec
and
ret
adc
dec
pop
mov
lahf
insb
bound
stos
shll
loop
sbb
out
push
arpl
xor
mov
xor
sbb
mov
xor
sbb
or
out
aad
and
repnz
dec
ror
cmp
adc
mov
roll
cs
jns
ret
movsl
push
stos
xchg
shlb
xlat
repz
mov
into
call
inc
cmpsb
hlt
leave
mov
movsb
dec
and
xor
jge
pop
fmull
cmp
lcall
mov
pop
adc
jp
mov
ljmp
scas
cmp
dec
fistpll
adc
bound
dec
sbb
dec
out
adc
int
push
add
jbe
add
jmp
mov
mov
inc
or
cltd
sbb
out
cmp
and
push
test
mov
inc
xchg
iret
sbb
xchg
mov
cmp
fidivrs
out
mov
popf
aas
js
mov
imul
das
push
cmp
in
mov
sub
in
bound
or
xor
in
xchg
mov
lret
ds
xchg
dec
mov
pop
xchg
repnz
mov
mov
dec
jg
or
mov
outsl
push
xchg
pushf
adc
mov
mov
pop
xor
dec
roll
mov
ja
jns
adc
punpcklbw
or
mov
pop
cmp
mov
test
mul
iret
sub
and
test
scas
mov
xchg
ret
inc
pop
dec
xchg
mov
adc
fisttpl
sub
insb
ss
rol
sahf
or
cmp
das
cmp
std
es
dec
mov
inc
in
out
jecxz
xor
cmc
mov
lods
push
adc
rolb
lods
call
leave
lcall
jg
adc
cli
pop
push
adc
neg
cltd
sbb
pop
jge
bound
icebp
aad
cli
ss
push
mov
lods
fdivrs
out
pop
mov
inc
xlat
sahf
jl
pop
push
xchg
mov
cmp
cwtl
jno
test
js
push
fs
xchg
push
ret
mov
jge
lods
jecxz
xchg
pop
jae
mov
lret
ss
mov
push
ret
and
movsl
cmpb
sbb
call
add
pop
jno
add
iret
xchg
fsubr
fs
sub
jecxz
and
push
pop
in
adc
aam
sub
rcll
stos
sub
outsb
sbbl
cmp
xchg
and
mov
daa
xchg
lret
repz
jno
mov
nop
push
loop
mov
jbe
lcall
jl
mov
int3
xlat
out
and
aam
push
mov
push
or
call
jl
cs
xchg
xlat
jnp
int
inc
rorl
mov
add
cld
mov
fwait
jne
inc
pusha
push
mov
and
sbb
dec
push
dec
mov
sbb
flds
cmp
in
inc
mov
cs
lahf
in
cmp
or
fwait
pcmpgtb
jae
fstp
mov
lea
es
sbb
inc
or
loop
clc
inc
jo
sbb
push
lods
shll
mov
sbb
iret
leave
xchg
mov
and
sbb
xor
adc
inc
lcall
jnp
fsts
retw
push
mov
push
adc
sub
cmp
adc
xorb
push
arpl
jnp
into
fadd
addb
rcll
jae
xchg
insl
dec
aam
jmp
insb
adc
into
decb
mov
xchg
mov
push
sub
push
xor
in
push
and
filds
inc
pop
mov
divb
push
pop
popa
cmpsb
call
into
and
insl
inc
imul
cmc
adc
in
lea
inc
sbb
mov
imul
test
mov
mov
jb
cmp
int3
and
pop
pop
and
shlb
or
push
push
sarl
lahf
jg
imul
pop
push
test
std
sbb
xlat
shrl
dec
mov
mov
roll
lds
pop
gs
loopne
int
xor
cld
scas
imul
loopne
call
out
in
xor
mov
xor
jl
xor
out
sbb
xor
lods
shll
mov
cmp
loopne
and
pop
je
jo
sbb
mov
xor
int
sbb
pop
dec
sbb
mov
xlat
jp
dec
cwtl
dec
das
ss
hlt
pop
mov
xorl
add
dec
inc
das
mov
push
aad
aas
xor
xchg
leave
cmp
cld
xor
jg
mov
inc
in
shrb
sbb
fs
or
imul
cmpsl
push
retw
pop
movsb
cltd
hlt
sub
shrb
xchg
or
insb
dec
notb
xchg
movsb
cmp
cmp
int
adc
sarl
negb
inc
stos
pop
push
insb
aam
add
and
fimull
xchg
fmull
aaa
enter
enter
lea
pop
cmp
mov
pop
lds
repnz
lods
lods
rcrl
pop
fistpl
adc
dec
dec
xor
cli
lahf
inc
jmp
mov
jg
sbb
inc
imul
sub
hlt
repnz
pusha
in
xchg
dec
mov
dec
addr16
and
into
aas
pop
or
sbb
lahf
xchg
cli
loop
or
push
lods
aaa
inc
inc
adc
mov
push
fstpl
aam
xor
mov
pop
sub
fiadds
and
cltd
ljmp
sub
bound
adcb
add
loopne
jle
xchg
stc
in
gs
push
mov
cwtl
push
jmp
cmc
add
jno
outsl
adcb
sbb
or
test
int3
dec
cmp
ljmp
out
popa
jmp
movsl
mov
push
inc
or
cmc
cmpps
cltd
jl
pop
fistpl
xor
dec
sub
movsl
fsubrl
push
sti
imul
and
addr16
ljmp
xlat
mov
shrb
sbb
mov
shl
call
mov
jo,pn
rol
js
fimuls
or
and
decb
or
jmp
out
push
in
dec
in
mov
mov
mov
sbb
lds
jae
mov
pop
jno
orb
ja
sub
add
jmp
mov
es
mov
cmp
mov
add
enter
dec
fcmovnu
shll
sbb
aas
in
xchg
insb
out
sub
cmp
or
sub
jmp
push
push
push
in
push
xchg
cmpsb
or
loope
jno
sbb
js
cmpsl
push
dec
add
push
xchg
outsb
repz
sub
jmp
inc
mov
sub
add
rcrl
and
mov
push
push
stos
inc
mov
mov
into
pop
out
testb
xchg
or
outsb
arpl
mov
pop
arpl
push
pop
cli
mov
push
and
scas
fwait
xor
mov
jmp
bound
incl
out
pop
shrb
dec
sub
cmp
mov
mov
repz
jge
adc
iret
ficoml
jmp
xchg
jno
outsl
cmp
mov
xor
mov
arpl
push
fisttpll
xchg
in
mov
sub
xchg
test
in
dec
jae
in
imul
std
movsb
and
adc
shr
mov
sar
xor
hlt
in
xchg
inc
in
rcrl
push
push
jl
mov
pop
ss
test
sbb
and
jp
test
pop
push
sahf
imul
aaa
dec
gs
dec
daa
fdivl
leave
push
imul
push
xchg
xor
push
add
fistl
inc
xchg
cmpsl
push
mov
sbb
sbbl
mov
lods
test
fld
xchg
add
sti
sbb
lds
jne
out
mov
sbb
mov
cmp
scas
jle
cltd
in
dec
dec
xchg
test
xor
mov
sti
cmp
popf
jo
pop
ja
pusha
shrb
lods
stc
into
jno
mov
sahf
arpl
pop
lods
mov
mov
pop
loop
hlt
sbb
add
ss
push
das
push
test
jb
ss
mov
enter
mov
or
mov
mov
mov
in
sub
jmp
loop
pushf
add
test
inc
std
push
mov
sahf
sub
and
int3
cmp
pop
pop
add
daa
mov
test
fwait
inc
inc
mull
das
decb
test
mov
mov
sbb
aad
and
pop
xor
adc
dec
cmp
bound
xor
jb
pop
in
cmpsb
icebp
int
push
gs
clc
mov
icebp
ret
pop
sbb
adc
loop
test
push
pop
mov
cmp
test
lea
cs
aaa
mov
pushf
mov
fbld
push
ljmp
lods
repz
lcall
loop
pushf
mov
test
in
pop
jecxz
adc
loop
stos
mov
dec
cld
insb
pop
xor
arpl
mov
ljmp
lcall
addr16
inc
in
or
imul
xchg
je
out
frstor
repz
inc
pop
xor
jmp
ja
xchg
sbb
push
lret
mov
xchg
cmp
push
xor
aaa
roll
clc
lahf
fwait
pop
es
xchg
add
fbstp
lods
aad
out
movsl
divb
mov
lret
icebp
mov
lcall
and
mov
adc
push
adc
cmp
bound
inc
into
or
jmp
je
fwait
adc
mov
fistpll
sarl
sti
ret
sub
aad
aas
lods
ljmp
mov
adc
cmp
je
lahf
out
xor
loope
jp
push
sarb
jg
xchg
adc
fisubs
and
push
pop
mov
mov
test
lods
cmp
xor
mov
push
push
popa
sub
push
cmpsl
std
xor
add
sbb
pop
sbb
inc
out
enter
pop
aas
in
mov
scas
int3
and
add
mov
inc
jbe
popf
pop
dec
mov
or
shlb
cwtl
jb
cmp
mov
push
sub
push
sbb
add
cmpsl
mov
into
lods
mov
or
xchg
push
stos
in
add
das
dec
and
pop
or
sbb
imul
and
jae
fistps
into
loopne
scas
xor
stos
mov
lock
jge
inc
in
lods
fbstp
in
clc
popf
pop
sub
mov
loop
ja
notb
pop
sub
xor
stc
callw
or
push
push
mov
push
neg
out
in
xorb
ja
ret
jge
xorl
fidivl
shl
mov
insb
mov
fadds
cmp
sti
jae
xor
mov
mov
repnz
bound
add
mov
push
jnp
dec
sarl
push
and
imul
ljmp
dec
xchg
std
xchg
lret
incl
test
lea
idivb
fs
or
jnp
xor
aad
pushf
adc
cmpsl
sbb
push
and
sbb
out
rorb
mov
ret
inc
je
repnz
cmp
fstl
insl
int
inc
pop
push
int3
outsb
mov
rcll
fnstcw
popa
into
xchg
inc
and
dec
sub
mov
jge
xchg
dec
pop
pop
jne
inc
lcall
test
hlt
dec
dec
jno
and
xchg
sbb
adc
rcr
sub
and
push
shl
je
adc
xchg
cmpsl
cmpsl
mov
jne
cmpsl
sub
jnp
insl
leave
lret
jnp
jne
xchg
addr16
fld
pop
mov
cmp
xor
sub
jle
fdivr
mov
dec
movsl
xor
adc
cmpsl
pusha
lods
cmpsb
pop
inc
mov
mov
enter
imul
aas
sbb
adc
sbb
sti
ja
fs
mov
or
dec
or
jge
adc
mov
pop
sbb
je
inc
jo
and
jecxz
xchg
add
hlt
jne
ret
popa
sbb
or
cmpsb
jge
push
jo
add
lcall
push
push
xchg
add
sbb
leave
sbb
jp
mov
cmp
and
shlb
and
ljmp
cmpsb
push
mov
dec
test
js
xchg
aad
xchg
and
add
jmp
mov
sti
aad
xor
jmp
imul
shll
pop
push
sub
repz
orl
pusha
xor
push
popf
or
int
loope
and
push
sub
aaa
jns
fldenv
mov
addr16
add
cmp
cmp
shll
sub
fwait
sbb
sub
add
mov
cli
sahf
sbb
roll
inc
mov
lds
imul
shll
outsl
mov
mov
loop
jmp
add
jl
aas
lret
fstps
xchg
shr
fwait
addl
sub
clc
adc
pop
mov
pop
sbb
sub
cmp
enter
jae
aam
hlt
imul
aam
push
mov
push
jge
or
lds
add
dec
xchg
pop
inc
shrl
jp
iret
sbb
or
jmp
xchg
sahf
xlat
sbb
pop
add
lods
rorb
pop
adc
std
sbb
xchg
adc
scas
lea
pusha
push
outsl
xchg
or
aam
les
push
sbb
addr16
das
xchg
mov
adc
lcall
lds
mov
icebp
mov
sub
add
aad
inc
xor
jbe
dec
sub
dec
addr16
or
call
repnz
push
ds
icebp
mul
inc
aaa
daa
flds
cmc
popa
sub
arpl
and
mov
inc
dec
movsl
jo
jae
enter
scas
loopne
push
dec
out
js
add
ror
addr16
fidivs
and
test
std
ficomps
xor
inc
push
jge
xchg
sahf
sub
nop
mov
in
mov
dec
jb
sbb
xor
dec
adc
xchg
and
cli
clc
sbb
push
sub
pop
sub
push
or
mov
and
sbb
pushf
jmp
or
ds
fistl
jo
push
and
jl
lret
pop
gs
ret
pop
aad
call
cwtl
aam
jae
xchg
int
sbb
cwtl
mov
cltd
inc
loop
cmp
jle
mov
adc
movsl
shr
xchg
dec
int
popa
inc
testl
imul
or
push
adc
daa
test
adc
dec
xchg
xchg
cli
push
pop
stc
mov
pop
repnz
ds
cmp
mov
mov
jp
mov
addr16
or
sahf
subl
adc
jno
push
sti
sub
fdivrl
ljmp
aaa
dec
insb
mov
mov
fwait
and
mov
push
add
dec
sbb
daa
fwait
insb
pop
fcmovb
xchg
rolb
outsl
rorl
mov
cwtl
pop
push
lock
xchg
iret
mov
cmpb
lock
test
push
xchg
mov
dec
fsubr
xchg
ss
add
add
sub
insb
test
cmp
mov
mov
scas
xor
clc
adc
inc
mov
ret
mov
xchg
mov
jbe
cmp
mov
mov
shlb
cmp
int
out
fistpll
loope
fadds
inc
cmp
push
cmp
push
dec
jecxz
adc
add
and
out
mov
fsubrl
xchg
cmp
cmp
mov
sbb
push
mov
loop
lret
adc
mov
test
jecxz
cmp
loopne
mov
stc
and
in
dec
popa
scas
push
jge
outsl
add
mov
jbe
fsubrs
mov
sbbl
insb
xchg
shr
jle
test
movsb
fisttpll
add
xlat
add
inc
jbe
mov
push
test
pop
dec
shrl
aad
cmpsb
push
inc
push
cmp
sarb
xor
lret
sbb
jle
xlat
lcall
or
nop
stc
sub
push
dec
pop
in
mov
push
and
add
repnz
or
aam
dec
adcl
insb
fidivs
sub
cmpl
repz
mov
popf
call
out
mov
mov
je
outsl
push
jo
test
sub
pop
or
test
push
repz
loopne
push
mov
pop
cmp
xchg
mov
push
pop
adc
pop
dec
into
iret
push
lods
inc
add
xchg
and
mov
mov
mov
ret
adc
notb
sub
pop
and
cmp
mov
lahf
sub
out
test
out
int
xlat
cs
and
loop
addl
jb
fsubrs
mov
cmpsb
adc
lret
leave
out
or
out
xor
push
rcrb
sbb
rcll
in
mov
mov
cmp
imul
sub
jns
cli
movb
mov
ja
movl
outsb
or
jo
fdivl
mov
out
add
jmp
mov
pop
push
icebp
mov
test
mov
mov
xlat
scas
mov
mov
push
gs
shrl
push
jbe
lds
xchg
cmp
mul
into
std
mov
cmp
cmp
push
iret
xor
inc
push
lock
ret
jnp
jle
pop
push
test
pop
loop
das
jmp
mov
aam
shr
aad
les
sub
or
test
lret
cli
mov
mov
in
mov
adc
test
mov
adc
roll
inc
fwait
inc
dec
or
jle
clc
cmc
orl
jne
rdtsc
addr16
and
cmpsb
dec
and
daa
aam
jne
call
cld
cmp
lahf
push
jmp
pop
notb
mov
xor
hlt
sti
ss
jbe
add
jns
push
aam
inc
mov
movsl
out
adc
push
mov
rorl
loop
ss
jp
lods
and
mov
roll
pop
gs
mov
sbb
dec
mov
call
jge
cmpb
out
mov
pop
xchg
sbb
jo
add
mov
shll
popf
dec
mov
pop
scas
fsubs
mov
lret
pop
movsb
pop
das
subb
jmp
mov
xor
xchg
mov
out
repz
cmpsl
lds
mov
fstpl
inc
mov
mov
sbb
mov
inc
jb
aas
cmp
out
mov
jbe
jnp
das
leave
ja
dec
cli
inc
add
aad
loop
xchg
ss
mov
aaa
hlt
and
outsb
mov
cli
push
movsl
mov
in
arpl
xor
cli
push
out
mov
mov
fs
push
jle
mov
adc
aas
pop
out
lret
mov
mov
jg
es
fsub
jne
jge
or
mov
dec
jno
sbb
add
or
aad
cmpsl
fidivrl
dec
outsl
ret
arpl
sub
in
mov
repz
out
mov
inc
adc
jno
pop
cld
test
icebp
sbb
ret
add
movl
insb
sub
cli
data16
or
mov
xchg
push
ror
out
int
shr
sbb
int
lahf
mov
push
cmpsl
add
je
mov
std
lahf
pop
add
mov
test
or
and
popa
ljmp
sbb
jne
push
pop
sbb
cmpsb
adc
mov
mov
cltd
mov
pusha
sub
pop
sahf
sbb
mov
sbb
popf
mov
bound
mov
js
mov
inc
clc
inc
outsb
shlb
insl
pusha
fnstcw
and
insb
or
mov
js
sbb
mov
push
push
jo
xchg
in
jno
lds
or
xchg
fistps
cmp
or
addr16
xor
mov
movsl
or
bound
test
les
adc
pop
repz
enter
add
xchg
adc
push
mov
mov
cwtl
out
pop
add
cs
lahf
mov
mov
mov
outsl
cs
mov
pop
ds
lcall
iret
mov
out
std
cld
test
sub
xchg
cmp
mulb
loopne
enter
mov
push
sub
ret
mov
push
mov
pusha
push
cwtl
out
mov
lea
inc
xchg
add
xlat
push
push
dec
push
mov
negl
xor
jae
mov
xor
pusha
xchg
std
sub
popf
dec
mov
adc
dec
pop
std
bound
mov
or
dec
fcomps
jbe
xorl
jne
dec
cmpl
xor
jno
roll
or
jmp
lahf
mov
pop
lock
pop
int
fmull
clc
inc
mov
jno
cmp
and
push
incl
std
scas
sbb
addr16
jg
or
jbe
out
decb
mov
fwait
rcll
push
pop
out
cmc
shr
lcall
dec
scas
jmp
aam
mov
dec
push
test
xlat
or
or
cmp
shlb
xor
cmp
adc
filds
js
inc
dec
pushf
or
scas
cmc
lret
loope
ds
lcall
xor
mov
fs
movsl
movsl
and
data16
ficomps
jb
out
cli
push
inc
in
fildll
imul
xchg
mov
pop
lods
cmp
insl
jae
pop
int3
mov
mov
hlt
ja
hlt
leave
jg
mov
dec
xchg
stc
jbe
in
cltd
dec
and
xchg
cmp
and
add
sbb
sub
push
lods
cmp
aad
pop
add
fs
rcrl
movsb
out
pop
je
insl
xchg
mov
or
lds
cmpsb
mov
xor
jns
lret
and
repnz
xor
inc
cwtl
pop
aam
sub
int
mov
and
jecxz
jae
pop
in
xchg
lahf
loope
roll
loope
dec
outsl
sub
les
loopne
cmpsl
sbb
jecxz
xor
push
jp
push
enter
sarl
das
adc
push
aad
mov
movsb
popf
add
movsl
mov
mov
cmp
inc
or
and
jbe
out
or
mov
jbe
push
push
or
out
ret
mov
jmp
xlat
pop
ret
jl
mov
loopne
cwtl
push
sbbb
stos
cmp
shrb
ja
aam
xor
mov
push
xor
sbb
push
jno
sub
xlat
idivb
xchg
popf
movsl
scas
jbe
jbe
mov
dec
insb
mov
into
mov
and
xchg
push
mov
xchg
out
lock
call
shll
and
or
inc
fs
icebp
xchg
ret
sti
fwait
test
adc
push
sbb
cmp
imul
add
divl
lret
mov
out
mov
xor
nop
pop
pop
inc
mov
insl
mov
lock
fcoms
sub
in
jne
fisubl
icebp
orb
or
loope
add
mov
loop
stc
pop
repnz
loope
pop
xchg
ds
insl
das
shrb
jp
xchg
ret
repnz
add
push
mov
into
adcl
in
xor
cmp
adc
mov
or
lcall
push
or
sub
inc
pop
pop
rcrb
fidivrs
pop
subb
sub
dec
push
lods
cmc
lret
icebp
inc
push
xchg
nop
lret
in
dec
imul
outsb
movsl
ror
jne
imulb
jae
stc
xchg
jecxz
fistps
dec
dec
and
mov
dec
sbb
or
sbb
dec
shlb
scas
sub
arpl
xchg
out
daa
xor
push
or
ljmp
daa
mov
mov
dec
int
sbb
xchg
aad
jns
test
sub
test
pop
or
xchg
xlat
cwtl
lahf
and
xor
mov
inc
mov
mov
daa
sbb
dec
adc
lods
addb
push
jae
out
mov
fidivrs
fisubrs
sarb
rcll
mov
sub
pop
test
test
shll
cmp
inc
push
lret
cmp
pop
xchg
test
outsb
rcll
xlat
out
jle
icebp
mov
push
movsb
subl
inc
inc
and
sub
pop
inc
fucomi
or
add
mov
xor
lock
cmp
inc
jne
dec
int3
pop
mov
cmp
pop
cmp
inc
popa
cwtl
inc
dec
ret
cmp
mov
and
inc
or
sbb
cli
lret
sbb
stos
repz
cld
test
test
ret
xchg
jns
rorl
push
shl
mov
stos
in
inc
rcrb
or
mov
pop
movsl
das
adc
scas
test
push
or
adc
xchg
test
mov
or
mov
mov
sbb
mov
or
lret
pop
or
add
call
cltd
adc
je
cmpb
idivb
mov
clc
lds
test
stos
sti
lret
call
push
dec
sti
mov
adc
adc
je
cmp
xchg
push
push
jl
cmc
rorl
sbb
inc
jo
aas
xchg
pop
fyl2xp1
sarb
gs
fisttps
push
jnp
sub
and
lret
movaps
and
fnstsw
pop
cli
test
sbb
out
mov
mov
outsl
fldcw
sarl
mov
mov
pop
dec
mov
mov
push
bound
sbb
hlt
enter
mov
sbb
sbb
inc
sti
mov
and
cmpsb
jg
rorb
sbb
sub
cmp
mov
inc
lcall
rcll
pop
adc
adc
rorb
push
lds
cmc
rolb
dec
lods
test
sub
jne
outsl
data16
lret
push
inc
in
xchg
cld
inc
and
testl
or
nop
sub
xchg
and
lods
and
pop
cmp
negb
xor
push
or
pop
adc
cld
test
inc
fcoml
mov
dec
adc
sti
outsb
or
or
mulb
dec
pop
lods
push
gs
bound
or
lds
sbb
add
arpl
icebp
shl
mov
xchg
mov
shrl
dec
adc
xchg
rorb
jno
adc
mov
mov
jmp
xchg
cmp
pop
push
shlw
and
adc
lcall
enter
fisttpl
cmp
cli
outsl
xlat
push
jbe
mov
cmp
insb
mov
lea
mov
adcl
push
aam
lret
sub
sbb
sahf
adc
pop
add
xor
call
fistl
ds
sub
pop
sbb
pop
pop
in
mul
dec
pop
pop
pop
xchg
fnsave
cmp
mov
int
pop
push
add
xor
out
sub
xchg
mov
xchg
sub
dec
dec
adc
mov
stc
ja
ficomps
mov
add
xchg
add
shrb
movsb
push
test
mov
mov
jb
lods
fs
es
mov
sub
pop
fldl
shr
mov
adc
sbb
jg
addl
pop
jnp
xor
add
mov
outsl
dec
inc
mov
jae
fcom
cld
sub
mov
fsubl
inc
push
imul
ret
hlt
jae
loop
mov
mov
push
dec
jecxz
loopne
pop
dec
add
pop
mov
fdivrl
iret
mov
and
inc
push
xor
cmp
xchg
inc
stos
movsb
jb
iret
sbb
sub
xor
in
and
adc
iret
mov
sub
and
imulb
mov
jmp
movsl
mov
sub
xchg
ror
cmp
lock
in
pop
test
mov
ret
add
and
mov
rcrl
cmp
scas
or
lds
xchg
dec
sahf
daa
mov
push
iret
cmp
xchg
jb
push
jmp
rcll
add
scas
pop
add
les
xor
push
ret
in
sub
cmpsl
and
bound
sub
cli
ret
cmp
and
test
mov
ss
std
andnps
ja
pushf
jmp
add
jne
fnsave
ret
inc
data16
add
push
or
addr16
sti
mov
xchg
inc
cli
ja
mov
repz
pop
fs
imul
fs
out
aam
das
sbb
xchg
lods
pushf
pop
sbb
cld
ret
scas
inc
hlt
mov
daa
xor
faddl
cs
jo
popa
icebp
adc
jmp
sub
mov
in
clc
incb
pop
aas
xchg
dec
daa
bound
or
rcrl
test
cwtl
lods
outsb
mov
cmp
sbb
mov
mov
sbb
idivl
std
test
ja
xchg
idivb
idiv
inc
pushf
fdiv
sahf
push
shrb
lea
lret
sub
daa
push
inc
jle
cmp
jle
jg
les
mov
aaa
ljmp
fnstcw
loop
ret
rcll
sbb
aad
sti
in
mov
mov
cmp
sub
jns
loope
clc
sbb
xchg
pop
or
mov
js
mov
out
sbb
aad
mov
mov
mov
and
jae
adc
pop
arpl
pop
add
or
leave
stc
lahf
ror
mov
add
icebp
jno
cmc
jecxz
in
lcall
push
push
or
add
in
and
outsb
iret
out
adc
je
fwait
shr
inc
lods
and
gs
cmp
jno
jae
outsl
and
out
or
movsl
mov
shrl
mov
cmp
test
cmp
lds
aaa
or
inc
xor
jp
pop
or
cli
ljmp
lahf
sbb
int3
cmp
cmp
lret
fdivl
sbb
pusha
dec
pop
call
sbb
mov
out
addl
repnz
data16
scas
mov
int3
mov
pop
dec
xor
dec
mov
pushf
xor
outsl
sub
xor
mov
inc
mov
into
mov
dec
fwait
xchg
lods
scas
inc
push
push
sbb
push
jbe
in
mov
push
stos
push
xlat
dec
cmp
lret
adc
xchg
xchg
divl
out
movsl
lods
insl
and
stc
cmpsl
jle
imul
mov
xchg
std
pop
insb
int
stos
rolb
subb
mov
push
icebp
and
negb
sbb
arpl
loopne
cmc
in
push
cmp
rolb
scas
jns
rclb
movsb
or
es
push
add
lret
shrl
imul
insl
negb
aas
xchg
loop
lret
cmp
movsl
fisttpl
orl
sbb
aam
pop
dec
je
test
fisttpl
fsubrl
lds
dec
loope
push
and
nop
cmpsb
rolb
mov
inc
xor
pop
inc
stos
pop
roll
outsb
mov
inc
in
inc
test
adc
or
clc
push
jo
test
jg
jmp
inc
incb
idivl
mov
jmp
push
cmc
mov
lock
ret
jno
dec
adc
sub
cmpsb
mov
cmpsb
insb
icebp
push
inc
ficomps
pop
adc
roll
jbe
test
loope
imul
andl
ljmp
es
incb
ret
mov
bound
divl
test
mov
cmp
pop
stc
jl
lret
mov
pop
sbb
push
mov
jnp
mov
sub
inc
out
dec
and
mov
xlat
sbb
pushf
pop
lea
repz
sahf
inc
imul
lea
push
or
scas
jnp
cmp
dec
pop
into
cli
aam
sub
repz
nop
mov
add
out
mov
dec
jmp
push
pop
bound
scas
xlat
push
loop
adc
cmpsb
orl
cwtl
fisttpl
sbb
xor
stos
xor
xchg
cmp
xchg
dec
imul
mov
pop
or
or
adc
jle
push
mov
pop
xchg
xor
sub
dec
mov
and
out
lock
addr16
dec
in
mov
jns
mov
add
dec
add
insl
scas
or
xchg
sbb
or
sub
add
push
cli
imul
int
mov
xor
mov
dec
shr
rcrl
add
loopne
mov
pop
mov
insb
int
out
test
mov
or
jne
jns
ds
fcmovb
cli
xchg
gs
ret
aam
mov
add
int3
jg
fsubl
xchg
pop
iret
add
bound
add
loop
das
lea
mov
sbb
loop
pop
lret
dec
ja
push
int3
mov
ds
dec
stc
jne
std
mov
jl
sub
outsl
das
movsl
mov
outsb
mov
enter
mov
pop
mov
dec
cmpsb
xchg
mov
pop
and
xchg
push
xor
adc
mov
fnstcw
mov
sbb
roll
add
pop
dec
cmp
pop
inc
loopne
pushl
and
adc
fsub
mov
insb
jl
loopne
fs
daa
sahf
xor
mov
jo
adc
test
ljmp
sub
adc
pop
xchg
stos
mov
xchg
mov
cli
pop
xor
jnp
fmul
imull
cmpl
xorl
arpl
lods
stos
and
adc
xchg
adc
orb
dec
test
xchg
fsub
inc
in
dec
fcoms
adc
or
dec
mov
adc
push
jno
xor
or
and
or
pop
fstps
mov
and
mov
lods
dec
cmp
xchg
rcll
ljmp
imull
or
dec
ds
cmp
add
dec
mov
cld
jbe
add
gs
xchg
jecxz
repz
xor
clc
fcmovnb
pop
pop
cwtl
ret
jecxz,pn
lea
pop
ja
pop
adc
pop
jae
notb
xchg
dec
jnp
leave
loop
jge
sbb
daa
xlat
mov
mov
hlt
cmp
sbb
addr16
and
rorl
outsb
stos
or
cmp
pop
arpl
movsb
inc
fldenv
cld
mov
sub
or
popa
jg
sar
inc
out
cmpsl
mov
fld
scas
mov
sbb
sahf
arpl
jae
lock
jmp
adc
adc
test
arpl
jle
pop
ljmp
stos
mov
daa
sbb
or
mov
xchg
int3
pop
sub
sbb
adc
in
test
rclb
sub
or
jne
xchg
fidivrl
mov
iret
inc
add
stc
xor
mov
inc
push
cmp
xor
cmpsl
add
div
test
push
xrelease
out
mov
popa
jns
pop
in
cmp
adc
hlt
lods
pop
pusha
fbld
mov
pop
mov
sbb
xor
out
pop
push
jle
mov
xchg
mov
movsb
lock
daa
sbb
add
add
mov
arpl
push
xor
mov
mov
mov
arpl
adc
mov
sub
jae
sub
dec
lret
sub
fisubs
cmp
shrl
fisubl
mov
sahf
fwait
cmp
movsl
test
push
cmp
cwtl
call
add
arpl
imul
dec
mov
lret
xorl
mov
cli
cmp
xchg
jb
fwait
inc
xchg
mov
test
mov
decl
xchg
inc
xchg
jge
adc
add
pop
push
jae
cmp
dec
pop
stos
jmp
xchg
jg
adc
das
popa
or
out
test
stc
dec
mov
jecxz
cli
jbe
fs
das
cmc
hlt
dec
mov
xchg
pusha
outsl
ret
or
lods
mov
pop
in
ljmp
shlb
lret
out
ret
das
stos
or
xchg
mov
cmpsl
xchg
rcrb
jne
push
or
roll
mov
inc
xlat
pop
inc
addr16
pop
fidivrs
fwait
push
or
fbstp
int3
jbe
ret
cmpsl
aad
fs
sub
or
xor
sub
sbb
popa
add
imul
xchg
pop
xchg
sahf
cltd
xchg
cmp
push
addr16
stos
xchg
jg
fistps
lahf
pop
push
jg
lock
push
push
xorb
sbb
xchg
test
cwtl
comiss
rcll
lods
cmpsl
cmp
scas
mov
adc
mov
test
es
xchg
scas
push
cmp
lret
xchg
enter
xchg
enter
sbb
pop
nop
jle
dec
xchg
dec
or
inc
xchg
repz
outsl
xor
in
icebp
jns
arpl
xor
or
sub
inc
mov
repnz
cmp
call
subb
mov
cmp
js
xchg
or
cmp
aad
push
push
cmp
iret
orl
mov
repz
add
xchg
icebp
dec
add
adc
and
hlt
decb
mov
ds
lods
testb
in
cmp
lock
or
daa
sti
jge
arpl
adc
call
daa
gs
cmp
call
in
lock
movsl
adc
cmc
loopne
fsubrl
rcrl
inc
or
test
int3
xchg
roll
test
scas
mov
shlb
lds
dec
sbb
mov
sub
or
rcr
data16
cmp
loope
dec
pushf
xchg
cmp
or
push
add
cmc
enter
je
in
stos
scas
and
mov
lcall
sbb
in
push
add
mov
dec
mov
int3
fidivrl
adc
fisubrs
test
cmp
fstl
dec
jle
xchg
sub
mov
xor
lret
ja
mov
cmp
fldl
test
jnp,pn
int3
ret
xor
push
sbb
cmp
push
sub
fisubs
sub
or
and
shll
push
mov
jmp
sbb
inc
cmp
mov
mov
mov
imul
lea
push
popf
int3
stos
cmp
inc
mov
add
push
data16
sahf
cltd
in
sbb
aas
xlat
pop
je
fcoml
test
sbb
rcrb
scas
push
xchg
push
out
loopne
movsl
and
push
loop
cs
mov
mov
sub
int3
inc
insb
adc
inc
jge
nop
sbb
ret
dec
sub
or
dec
add
xchg
pop
aam
cmp
and
adcl
outsb
mov
push
mov
icebp
leave
xchg
jbe
call
pusha
js
jae
or
rcrl
push
xchg
cmc
pop
and
add
push
loopne
fcomps
sbb
dec
cmp
insb
insb
fwait
mov
out
loope
les
xlat
xor
jns
sub
iret
lea
fisttpll
xor
xchg
sbb
and
mov
cmp
insb
repz
cli
mov
rcrw
xorb
adc
or
or
inc
mov
ret
dec
and
sbb
or
loopne
cmp
cmpsl
shrl
mov
xchg
lret
shlb
sbb
jns
xchg
cmp
out
jl
pusha
je
les
pop
jp
or
push
or
bound
mov
fidivl
jp
stc
rol
mov
adc
xor
mov
push
xchg
xlat
mov
sbbb
or
xchg
push
mov
pop
pushf
jno
aaa
sub
jo
dec
jg
inc
ret
mov
inc
mov
imul
inc
enter
adc
xor
xchg
dec
cmp
jl
jo
pop
fs
sbb
jo
in
in
add
push
jne
popa
xchg
xor
outsl
sbb
jns
das
fwait
xor
out
popa
mov
xor
inc
sub
sbb
xchg
cli
imul
scas
mulb
into
adc
movsl
dec
pop
fdiv
lea
sub
push
addb
iret
cmp
inc
lcall
repnz
imul
lret
movsb
pop
shrl
push
std
loope
pop
push
popf
lret
bound
rcrl
out
and
xchg
jecxz
daa
sbb
clc
mov
cmp
in
jecxz
inc
push
std
out
testl
lret
repnz
out
pop
push
mov
and
into
icebp
test
add
adc
insl
and
cs
pop
mov
clc
js
inc
jb
ja
pop
mov
push
and
xchg
scas
in
test
xchg
insl
icebp
add
or
ficoml
roll
hlt
popa
in
sub
push
insb
inc
lock
dec
test
daa
or
xchg
sub
and
jle
cmpsb
xchg
dec
ljmp
sub
xor
rcrb
jno
scas
xchg
movl
cld
mov
fs
insb
push
movsl
movsb
mov
out
rorl
sbb
pop
inc
jnp
pop
or
orb
xchg
inc
or
sub
xchg
xor
stos
jl
mov
pop
stos
jg
sbb
jnp
cmp
iret
jge
imul
sbb
pop
pop
mov
mov
mov
mov
fs
lock
mov
fsubs
pop
rclb
imul
xor
fistpl
adc
add
mov
adc
push
cmpsb
cwtl
jle
push
subb
sub
ficoms
mov
pop
jle
or
into
ret
pop
jne
test
out
popf
jo
jno
inc
jno
push
bound
dec
mov
lods
bound
add
xor
adc
pop
jecxz
iret
or
cmpsl
aad
mov
mov
es
mov
add
cmpsb
mov
jb
jns
mov
das
inc
ficoms
xchg
ret
adc
xorb
ret
jmp
dec
addb
jmp
and
imulb
add
push
ret
mov
cmc
adc
dec
cmpsb
jno
lods
test
stos
mov
sbb
sub
outsb
sbb
or
xchg
mov
gs
popf
sub
repnz
test
inc
push
jno
sub
and
pushf
mov
mov
jge
aaa
mov
and
xchg
pop
xor
icebp
pop
outsl
repnz
scas
sbb
inc
sbb
loopne
mov
sbb
pop
scas
cli
loopne
cmpsl
hlt
sbb
sub
test
das
bound
or
ljmp
push
add
jle
adc
xor
outsl
cmp
mov
jecxz
fwait
mov
mov
adc
cmpsb
outsl
lods
mov
ret
test
stos
mov
imul
inc
pop
xchg
add
out
xchg
inc
pop
fisubl
ja
jl
out
fdivs
pop
dec
in
repz
jg
int3
loop
mov
push
imul
mov
cwtl
das
mov
call
aam
add
cmp
add
push
xor
push
xchg
or
cli
daa
jl
mov
xchg
imul
sub
push
mov
les
push
mov
lret
setne
inc
mov
mov
mov
xor
rorb
clc
call
push
xchg
xchg
stos
dec
sub
dec
mov
aad
loope
pop
jecxz
xor
inc
bound
mov
cmpsl
dec
fcompl
xor
in
cmc
cli
jg
dec
sbb
mov
pop
nop
pusha
pop
cmpsb
or
xlat
xchg
lds
outsl
jne
push
mov
lret
cmp
and
movsl
add
jbe
fadd
rol
mov
jecxz
jb
jnp
andb
dec
fdiv
gs
sbb
xchg
fs
sbb
orl
sub
hlt
mov
fimuls
in
std
mov
fs
mov
outsl
adc
lods
sbb
xchg
loop
mov
mov
insl
xchg
push
repz
jnp
sbb
sbb
adc
daa
movsl
push
push
les
data16
nop
inc
mov
stc
out
jp
and
outsl
dec
adc
and
aaa
inc
sub
push
clc
lahf
pop
inc
jno
jnp
icebp
test
pop
or
fbld
cmp
adc
jle
sub
fdivrs
cmp
and
pop
jecxz
push
leave
push
ja
stc
int
add
inc
jae
sarl
adc
stos
mov
adc
lahf
pop
je
rcrb
test
out
and
bound
stc
mov
icebp
arpl
or
jle
cmp
hlt
push
sbb
cwtl
iret
mov
enter
or
mov
dec
mov
ficompl
in
bound
sahf
sahf
sbb
jmp
jle
xor
jno
fldenv
xchg
ljmp
jle
out
nop
push
sbb
dec
mov
je
mov
mov
loope
pop
inc
mov
int
dec
adc
xchg
jmp
xlat
mov
in
xor
outsb
data16
mov
movb
mov
loopne
mov
add
inc
mov
movsl
xor
sub
inc
inc
std
loope
dec
cltd
ljmp
mov
cmp
jmp
cltd
in
std
and
jo
push
mov
jne
lods
sub
adc
repz
daa
lret
and
sbb
and
loopne
inc
in
sahf
fiaddl
or
das
into
lock
mov
pop
fstl
sub
xchg
lock
aaa
ret
adc
and
inc
xor
les
push
xchg
sub
dec
xor
mov
rorb
stos
pandn
hlt
xchg
adc
xchg
mov
popl
cmp
xchg
sub
dec
mov
mulb
or
fisttpl
stos
pop
mov
mov
icebp
dec
mov
pop
cmp
in
mov
icebp
sbb
cld
inc
and
shlb
sub
int3
std
sub
shl
add
mov
xchg
rorl
jnp
xchg
dec
call
inc
adc
out
popf
sub
inc
mov
sbb
cwtl
bnd
outsl
jae
imul
cmp
mov
xor
xlat
cmp
outsl
aad
ds
and
jmp
pop
and
push
js
jmp
xchg
or
lea
loope
into
xor
out
out
shl
xlat
xor
jg
mov
bound
mov
xchg
add
sahf
scas
or
mov
push
mov
xchg
int3
adc
xchg
dec
outsl
mov
push
dec
ret
stos
mov
out
mov
in
lret
fcompl
test
popf
fwait
xchg
pop
push
int3
imul
jnp
aad
imul
sbb
pop
push
push
dec
addr16
adc
mov
cmp
popf
pop
stc
xor
mov
adc
dec
and
mov
cmp
repnz
daa
insl
xchg
test
enter
push
inc
jl
adc
pinsrw
mov
mov
adc
pop
prefetcht1
out
adc
out
mov
int3
pop
jb
push
fdivrs
xchg
leave
mov
inc
mov
aaa
xor
xchg
or
das
xchg
scas
aad
rolb
aaa
mov
dec
scas
add
fwait
xlat
int
xchg
lret
push
xchg
test
lods
jl
jns
ss
fs
filds
cmp
add
add
mov
shl
frstor
scas
lea
or
and
sarb
mov
movsl
adc
cmp
lahf
pop
rorl
orb
out
ret
mov
lahf
aad
jg
xchg
xchg
aad
push
or
jp
loopne
in
cmp
push
subl
push
pop
pop
or
imul
cmp
adc
or
imul
jne
inc
sbb
inc
aad
sub
mov
popf
cmp
pop
inc
push
movsl
jae
jp
cmp
sub
fsubrp
cmp
mov
push
cmpsl
loop
mov
dec
cmp
mov
jge
leave
dec
stos
cmp
push
das
mull
insl
xor
das
into
mov
mov
and
int
cmp
rclb
imul
jb
aam
xchg
lret
adc
jnp
imul
lods
fidivs
and
loop
popa
iret
nop
mov
jl
adc
out
cmp
xor
dec
cmp
mov
les
enter
push
mov
sar
test
ss
out
sub
pusha
into
xor
adc
fs
push
mov
mov
js
sahf
jae
xchg
cmpsb
cld
rol
xchg
push
dec
add
xchg
mov
lock
adc
mov
push
jbe
mov
xchg
dec
and
mov
or
jg
nop
dec
test
sbb
sbb
imul
inc
jg
xchg
scas
ljmp
mov
dec
hlt
outsb
mov
cltd
call
ror
dec
inc
mov
nop
hlt
inc
inc
mov
inc
outsl
push
fsubrs
fidivrs
push
scas
loope
lahf
cmc
in
cltd
js
cmpsl
xchg
push
cs
jae
mov
xor
ficomps
js
push
jae
mov
js
or
push
clc
int
adcb
and
cli
mov
dec
movsb
aas
loopne
sub
pop
push
push
add
xchg
pop
push
aam
xlat
dec
mov
jg
bound
xchg
xor
push
push
loope
xchg
xchg
push
xlat
lds
pop
pop
ja
dec
pusha
cwtl
add
js
push
outsb
jg
rorl
inc
dec
or
pusha
hlt
rcrb
or
enter
pop
xorb
ret
cmp
leave
pop
enter
pop
sbb
jnp
out
mov
xor
push
adc
dec
jp
fwait
inc
dec
dec
pop
call
push
cmp
add
sarb
ja
xor
jge
in
jmp
push
add
mov
popf
cmpsl
stc
xchg
xchg
test
or
pop
movsb
sub
or
sbb
pop
ljmpw
push
jmp
lock
fldenv
cmp
inc
push
mov
sub
outsl
pop
jmp
mov
xor
jbe
icebp
ret
fimull
xchg
lret
jno
sbb
icebp
sub
mov
scas
pop
sbb
shrb
test
xchg
cmpsl
dec
enter
xchg
ljmp
mov
inc
imul
test
push
ljmp
arpl
push
push
cmp
decl
pop
cwtl
test
jbe
inc
mov
jge
jbe
dec
call
dec
fstpl
xor
add
sbb
ret
xchg
popf
and
hlt
xchg
adc
cmp
lret
mov
lcall
cmp
je
add
and
arpl
sbb
das
cltd
xor
mov
xor
loope
mov
insl
or
pop
mov
pop
sbb
xchg
inc
cli
mov
jae
xchg
lahf
nop
adc
iret
bound
push
imul
push
mov
fnstsw
mov
stos
in
adc
push
sbb
call
ljmp
sub
ljmp
std
pop
sbb
cmpsb
lret
mov
ss
push
dec
lock
pop
pop
nop
mov
loopne
ret
outsl
jmp
xor
arpl
lahf
inc
daa
fxam
mov
out
in
sub
add
ss
dec
cmp
aad
cld
inc
mov
out
pop
ja
sub
into
jo
out
data16
lret
cmp
insl
mov
iret
or
cmpsb
pop
push
cmpsb
mov
outsb
int3
ret
in
mov
push
adc
sub
aas
jo
aad
aaa
push
pop
clc
cmp
pop
aad
and
jle
inc
pusha
daa
mov
aad
outsl
shlb
xchg
pop
cmp
xor
mov
popa
inc
ret
scas
es
mov
out
jg
movsl
and
fisttpll
pop
xchg
loope
add
jno
inc
gs
dec
adc
pushf
hlt
mov
mov
iret
sbbl
pop
aad
jg
in
fs
test
dec
sbb
or
sub
fistl
and
cmp
pop
mov
rcll
add
dec
dec
int
stos
movsb
hlt
xchg
lahf
sbb
jp
out
nop
push
pop
sub
push
idivb
sbb
mov
mov
jb
xchg
rcrl
sbb
fs
jnp
dec
adc
test
push
mov
add
lods
jg
mov
xchg
mov
cmp
push
mov
shll
out
fiadds
push
or
jmp
xchg
into
pop
popf
icebp
mov
xchg
xchg
inc
loop
movsb
jecxz
adcl
repz
stos
jne
jmp
adc
adc
insl
nopl
nop
cld
aad
in
push
cmp
xor
rol
pop
lahf
ja
mov
aad
cmpl
dec
or
test
lahf
fwait
inc
sar
jo
repz
push
fsubs
push
shrl
cmp
ret
dec
fldcw
lods
xchg
cmpsb
or
out
xor
sub
mov
xchg
mov
mov
jnp
push
inc
xchg
inc
sti
sarb
jg
lds
int
js
sub
add
xchg
jecxz
cwtl
cs
cmp
jnp
mov
dec
outsb
xchg
pop
sbb
sub
mov
ja,pt
and
shll
aaa
int
cmp
push
out
out
jae
pop
mov
lds
jne
cwtl
dec
xor
pop
sbb
outsb
pop
int
inc
pop
add
out
sub
and
sbb
push
ror
xor
push
fisttpll
jecxz
ds
xchg
pushl
test
push
jo
or
outsl
cmp
push
repnz
in
das
cmp
fwait
movsb
ljmp
call
xchg
and
jbe
out
ret
jno
or
in
dec
or
ret
jbe
mov
adc
loop
dec
add
test
cltd
sub
jmp
in
addr16
stos
pop
movsb
mov
aam
xchg
xchg
loope
rclb
stc
mov
or
movsl
mov
cmp
jne
flds
in
enter
adcl
sub
xchg
or
popf
sbb
jecxz
jp
fs
cmp
pop
mov
fisubrs
shl
data16
movsb
pop
cmpsb
mov
jmp
xor
xchg
or
clc
adcb
push
adc
push
pop
pop
dec
jno
lods
std
push
sbb
iret
into
sbbl
stos
rorl
lcall
test
mov
lcall
pop
sub
js
pop
xor
cmc
test
push
add
add
and
lock
and
xchg
mov
dec
pop
jecxz
cmp
ret
cltd
mov
mov
dec
or
add
mov
std
daa
iret
xor
pop
hlt
or
sub
push
mov
cmp
sub
cmp
ret
mov
add
push
inc
push
xchg
fnstenv
out
fidivl
inc
daa
dec
out
cmp
cwtl
sbb
push
fiadds
and
movsb
fsts
daa
lds
arpl
add
add
shlb
aam
adc
jno
push
dec
and
jmp
or
sub
mov
add
popf
pop
pop
jg
int
iret
push
clc
in
insl
sbb
adcb
fucomp
and
or
mov
or
and
scas
rorl
add
outsl
dec
cltd
lock
mov
test
jns
jo
and
cmp
mov
xchg
stc
nop
cmc
in
lods
popf
mov
xor
iret
cltd
addr16
out
xchg
push
mov
mul
filds
iret
dec
pop
add
adc
pop
aam
jmp
subl
cld
mov
leave
mov
frstor
add
inc
ret
rcll
stos
push
add
das
fimuls
bound
adcl
xchg
push
int3
xor
scas
jle
add
mov
dec
cmpl
xlat
cmp
outsl
pop
popf
xorb
ret
sbbb
test
lods
sarl
fucomp
into
adc
cltd
xlat
jge
cmp
sti
subl
inc
mov
cmp
outsb
push
shrl
xorb
or
std
jecxz
and
frstor
xchg
rorl
mov
aam
mov
imul
inc
xchg
xor
rcrb
xlat
popl
xlat
aad
in
das
faddl
loope
mov
fs
cmp
pop
jno
in
or
jp,pt
mov
fwait
and
xchg
sub
mov
mov
or
mov
cmp
hlt
add
sbb
mov
sbb
sub
aad
call
add
push
mov
aaa
pushf
mov
fbstp
xchg
es
add
lods
fnstenv
mov
pop
sub
push
inc
ja
mov
inc
testl
sub
in
or
cmp
add
cld
hlt
mov
cmpsb
jno
pop
mov
jo
inc
jb
insb
cmp
ss
lock
push
out
jmp
ror
cmc
test
jno
cmp
push
adc
and
add
push
jg
add
gs
scas
mov
imul
xchg
mov
inc
jo
enter
into
notl
shrl
push
std
adc
test
in
int
shlb
in
stos
cmp
xor
test
leave
xrelease
clc
inc
mov
fldcw
and
jle
adc
mov
mov
ja
add
push
mov
cmc
fcomps
cmp
push
sarb
cltd
notl
xchg
lds
fsub
lcall
mov
pop
cmp
xor
lahf
xor
mov
lret
jg
mov
fstl
lahf
frstor
mov
sub
filds
push
cmp
mov
imulb
jge
or
mov
push
stos
and
filds
xor
mov
xchg
jmp
pop
cli
negl
idivl
ss
jo
jb
cmp
inc
and
jae
sbb
icebp
mov
pop
cmp
int
mov
rcrb
cs
adc
xchg
jno
fisttps
push
mov
mov
pop
or
push
subb
in
pop
push
int
out
into
adc
push
repz
push
mov
pop
sbb
incb
add
lahf
jo
push
out
jmp
in
adc
loope
xchg
clc
xchg
loopne
data16
mov
jg
ljmp
fcompl
mov
sbb
jbe
jp
lahf
jle
sahf
push
mov
lcall
add
in
lock
cs
scas
dec
dec
lds
mov
fisubs
test
push
mov
stos
fisttpll
jl
xchg
sbb
cli
pusha
and
aaa
inc
and
fsts
sbb
mov
adc
clc
gs
je
xchg
ficompl
and
es
cmp
adc
xchg
in
scas
dec
jge
mov
mov
inc
pushf
xchg
enter
cmpsb
pop
sbb
push
std
lea
out
insl
subb
shrb
cs
or
mov
mov
pmulhw
aas
inc
stos
adc
xchg
xor
stc
jo
das
adc
rcrb
lcall
icebp
adc
sub
icebp
inc
ss
pop
add
les
shlb
repz
daa
stos
jl
rcl
xchg
add
lret
dec
xor
in
out
sub
inc
inc
fcomip
pop
out
xchg
jmp
lock
dec
mov
jo
rcl
fcompl
adc
insl
arpl
jne
cmp
fwait
or
enter
or
push
in
loope
frstor
les
pop
cltd
sbb
sbb
loop
jb
mov
mov
imul
push
lods
sub
jnp
jecxz
into
movsb
mov
ret
int
sub
popa
push
cmp
push
adc
mov
jg
es
add
fsubr
dec
add
neg
test
mov
lods
or
pusha
push
int3
mov
push
ss
sbb
inc
inc
loopne
mov
es
cmpsb
cmp
lcall
xor
sti
aas
push
xor
in
xchg
pop
cltd
and
xchg
test
dec
mov
scas
mov
pop
stos
leave
adc
movsb
out
push
xchg
dec
mov
and
pop
xchg
jecxz
ss
mov
sub
enter
jnp
adc
adc
aaa
scas
std
shlb
into
sbb
out
or
xchg
mov
mov
clc
dec
mov
mov
mov
pop
adc
push
sbb
fistpl
and
leave
rclb
gs
jmp
pop
lret
imul
std
aas
arpl
add
mov
fisubs
cmpsl
xor
mov
lcall
add
inc
test
cmp
inc
stc
fdivs
mov
pop
mov
jge
sub
dec
push
pop
fcompl
mov
xchg
mov
push
cmpsw
adc
pop
push
imul
popf
je
jo
mov
dec
lret
scas
call
ljmp
push
out
jno
pop
mov
aaa
test
mov
ja
lods
jmp
push
sbb
adc
int
mov
pop
fbstp
test
push
leave
mov
aaa
xlat
and
cmp
jne
mov
sub
sbb
and
push
ret
test
jle
xchg
cmp
imul
das
ja
cmp
cltd
pop
adc
or
sub
xchg
or
inc
dec
inc
cmc
push
hlt
mov
or
pop
je
inc
adc
pushf
and
mov
cmp
cmp
aas
hlt
mov
dec
cmp
lea
shrl
jae
out
mov
dec
rolb
mov
in
in
ret
mov
popf
dec
mov
nop
insb
inc
jae
clc
into
shlb
inc
clc
clc
jb
dec
stc
out
xor
lea
lcall
scas
lods
push
fildll
or
cli
cmpb
sub
add
push
ljmp
dec
dec
es
adc
lret
aad
push
orl
fwait
sub
test
es
mov
js
sti
fwait
ror
fistpll
repnz
cmp
aaa
add
xor
out
insl
jb
pushf
jp
out
cmp
jnp
mov
mov
xor
jo
mov
pop
inc
add
push
dec
add
mov
arpl
add
or
mov
std
mov
movsl
push
das
repz
shr
je
cmp
lods
add
jge
imul
insl
dec
scas
js
adc
mov
test
fs
movsb
pop
test
sub
pop
inc
or
clc
mov
mov
sbb
push
fsubl
cmp
lock
mul
out
xchg
adc
lcall
ret
xor
into
in
lahf
daa
imul
mov
popa
add
repnz
pop
test
inc
cmp
leave
jae
xchg
cmp
nop
inc
test
neg
inc
mov
arpl
jmp
xchg
cmp
gs
xor
repz
lds
cmp
fwait
cmp
xlat
xchg
jmp
add
test
push
mov
jne
jb
mov
sub
pop
add
add
xchg
loop,pt
addr16
dec
testl
icebp
push
sub
pop
xchg
popf
dec
cmpb
sub
movl
shr
bound
popa
sub
sub
push
fwait
dec
ret
enter
or
sbb
test
xor
push
xor
xchg
popa
dec
cmp
xchg
jmp
fildl
xchg
stos
jne
dec
pop
fidivs
dec
test
stos
fwait
sbb
mov
movsl
sbb
lods
sub
aaa
xchg
push
xchg
ss
leave
aaa
cmp
pop
js
inc
lahf
or
pop
fsubrl
mov
pop
rcll
dec
pop
mov
or
sahf
in
pop
or
psadbw
std
cmovp
aam
aaa
cmp
mov
jnp
jae
jmp
cmp
cmp
out
sub
loop
aad
iret
inc
mov
frstor
aad
mov
daa
xchg
les
test
xchg
sbbb
push
hlt
and
inc
imul
in
push
ror
adc
dec
cmpsl
inc
daa
or
sub
mov
xchg
pop
repnz
rorl
ljmp
cmpsb
sub
push
outsb
or
shlb
dec
pop
mov
cmp
sub
push
xchg
ret
pop
inc
loope
jbe
or
out
in
rcll
in
pop
cli
xor
mov
pop
pop
inc
into
dec
jb
push
stc
pop
inc
jmp
mov
psrld
test
std
or
loope
mov
sub
in
lcall
test
mov
xorl
inc
paddw
jmp
cmpsb
aad
jecxz
mov
inc
sub
and
ja
mov
daa
subl
into
cs
and
out
mov
jp
ja
mov
ss
xor
loope
dec
scas
add
ret
mov
mov
lahf
test
push
sub
pushf
push
adc
ds
dec
aas
test
cmc
fdivrl
call
dec
mov
sahf
cmp
adc
ret
insl
imul
leave
lahf
je
mov
add
xchg
inc
add
sbb
bound
ss
mov
outsl
mov
inc
add
jns
dec
xchg
clc
add
das
lahf
rcrl
mov
sarl
jp
adc
or
xor
and
adc
cli
and
xchg
adc
pop
int3
pusha
shlb
cmp
cmp
bound
dec
cwtl
xchg
imul
icebp
imulb
lret
out
sub
add
mov
loop
mov
aam
dec
push
cld
in
cmp
pop
cwtl
clc
sub
lahf
inc
mov
test
jne
jae
xor
push
js
out
xor
out
fs
ja
sbb
dec
cld
stc
add
jae
pop
xor
out
test
jp
dec
iret
sbb
in
sahf
lret
mov
mov
inc
or
leave
cmc
popa
mov
inc
fisubrl
adc
dec
mov
fcom
mov
fwait
and
int
mov
movsb
mov
jl
in
or
icebp
loopne
adc
xchg
add
outsb
xor
fisubs
mov
xchg
fdivp
jge
data16
outsb
sbb
jb
out
xlat
bound
mov
mov
xor
stos
sub
arpl
dec
frstor
jo
stos
dec
push
ja
push
fsubr
xor
dec
jg
and
enter
or
jl
inc
sub
and
and
push
add
stc
cld
mov
test
sub
enter
xchg
loop
and
xchg
lock
aam
movsl
mov
xchg
pop
mov
iret
lock
incl
jo
pushf
lret
rol
andb
bnd
repz
push
push
bound
jae
pop
daa
inc
pop
clc
and
int3
hlt
sbb
xchg
sahf
test
xchg
xchg
repnz
push
ficoml
add
fcmove
insl
mov
mov
les
imul
xor
mov
jo
sub
mov
sbbl
inc
leave
and
add
xchg
xor
cmp
call
lahf
or
and
or
dec
test
mov
pop
sub
pop
lea
jae
imul
push
and
mov
mov
xchg
bound
add
inc
or
mov
add
mov
in
call
push
cmp
stc
sarb
or
cmp
daa
or
cmpsl
push
push
jg
ret
or
int
cmc
into
cmp
add
add
jno
push
scas
mov
in
mov
mov
aam
scas
nop
out
in
cmp
inc
sbb
sbbl
or
sbb
pusha
mov
add
sub
xor
aad
mov
fists
pop
dec
or
sub
ret
push
add
jp
dec
push
add
fldcw
pop
push
leave
aaa
jb
jmp
int3
adc
mov
out
sbb
jae
dec
mov
pop
fdivrl
jle
jl
dec
xchg
add
movsl
or
dec
jne
cwtl
push
mov
xlat
pushf
popa
xor
pushl
mov
mov
dec
mov
data16
in
insl
mov
sub
lret
push
pop
push
imul
mov
jl
inc
jge
xchg
jg
pop
gs
mov
dec
xor
rcl
adc
cmpsb
testb
pop
lcall
and
sub
mov
xchg
sbb
cli
rolb
loopne
or
jecxz
outsb
adc
xchg
out
mov
sub
xchg
pop
pop
aad
fucomp
adc
inc
cs
lea
pop
mov
push
ret
mov
outsb
mov
mov
pusha
pop
push
popf
mov
jb
mov
and
fdivrs
cld
sbb
xor
sbb
repnz
loop
dec
in
push
mov
in
sahf
pop
aam
repz
jns
leave
pop
sbb
aad
adc
inc
push
int3
cmpsl
adc
imul
dec
clc
jo
pop
mov
add
int3
das
push
scas
sti
pop
stos
sbb
push
sbb
lea
jns
xchg
lahf
push
ja
cmp
and
sbb
push
and
push
sub
out
adc
pop
inc
jae
or
aam
fisubs
mov
fwait
into
shrb
push
call
insb
int
ror
movsb
dec
dec
hlt
hlt
add
push
lret
xor
or
sub
and
adc
sti
inc
lret
inc
cmp
add
lds
mov
sbb
fsubr
in
mov
add
cwtl
add
sar
sti
xor
sbb
pop
ficompl
sahf
leave
sbb
xor
mov
sbb
cs
mov
leave
ljmp
imul
aaa
jp
cmp
and
sbb
fnstcw
stos
inc
and
mov
jmp
pop
rolb
cmc
andl
adc
loop
enter
jno
popf
adc
sub
push
sahf
repnz
add
adc
sbb
push
push
inc
pusha
inc
lea
sbb
jo
mov
cmp
or
test
jno
cmpsb
xchg
jns
les
mov
lock
inc
sub
subb
inc
clc
clc
fistpll
jg
mov
mov
cmc
aas
xorb
shr
aam
push
xor
mov
dec
and
js
pop
and
std
sbbb
mov
out
adcb
aam
inc
loopne
mov
and
inc
stos
jne
cli
jnp
fcmovnu
int3
sub
sbb
arpl
lret
mov
subl
icebp
dec
ja
inc
daa
pop
jbe
popf
addr16
lods
aam
xchg
pop
adc
fisubs
lods
mov
les
sub
popa
xor
cmp
cli
mov
imul
lods
ljmp
inc
sahf
int3
ret
cmc
sbb
test
adc
lods
dec
sbb
xchg
imul
hlt
xlat
mov
jle
addb
daa
mov
add
lods
ss
cmp
cs
xorl
push
int
mov
cmp
stos
iret
jne
cmp
std
into
mov
sbb
lods
ret
push
push
int
fcompl
mov
pop
dec
sub
mov
mov
push
lds
in
jecxz
dec
sbb
ret
in
loop
push
jae
and
outsb
into
fsubrl
xor
push
ss
mov
mov
test
push
popf
push
push
inc
adc
scas
test
subl
mov
or
es
int3
pop
sbb
out
subl
push
ja
loope
mov
fdivs
fcompl
sub
das
and
add
inc
cmc
add
das
push
fnstcw
mov
pushl
gs
addr16
or
mov
rcl
lea
divl
dec
das
hlt
cli
xchg
mov
mov
adc
scas
xlat
insb
lods
push
sbb
popa
lahf
inc
lahf
testl
outsl
dec
nop
mov
push
loopne,pt
in
mov
add
jp
or
dec
mov
add
orb
loope
rolb
push
popa
filds
push
rorb
fwait
in
sub
or
adc
fs
pop
mov
cld
cmp
push
enter
or
jmp
mov
in
add
cs
in
mov
ss
pop
or
lret
imul
push
sub
add
dec
loope
xchg
xchg
bnd
fidivl
lods
ds
pop
dec
lret
hlt
inc
mov
xor
push
mov
test
or
and
scas
sbbl
mov
mov
mov
or
cmovno
cmc
mov
stos
xor
lods
xchg
ss
adc
push
aas
shll
xor
dec
jg
dec
in
in
jno
out
aas
jecxz
jns
mov
push
test
sahf
cld
xorb
add
cmpsl
imul
aas
icebp
sub
xor
icebp
pushf
std
ss
cmpsl
add
add
and
xor
mov
test
and
pop
cltd
mov
xchg
out
push
xor
imul
dec
add
insl
fsubs
pop
cmp
insb
sub
mov
stc
daa
adc
imul
sbb
cmp
repnz
std
sbb
loop
or
cld
sub
jb
iret
imulb
mov
rorl
push
out
and
insl
xlat
arpl
and
adc
mov
loop
jecxz
and
add
dec
enter
dec
jne
push
inc
jecxz
cltd
rcrb
or
mov
loop
insb
sbb
das
or
test
push
inc
popa
xor
movl
data16
and
jbe
dec
dec
fld
into
jbe
ror
mov
add
aad
jle
dec
sar
shrb
movsl
roll
xor
cmpsb
cmc
add
sti
jp
and
push
cli
call
jl
bound
test
add
jne
sub
and
rcl
lds
scas
stos
popf
fs
and
enter
xchg
lock
xchg
imul
mov
mov
clc
cmp
jle
mov
das
or
dec
xor
enter
imul
inc
inc
or
inc
jmp
pop
mov
add
test
test
adc
jbe
dec
mov
xchg
clc
xor
sub
rol
daa
imulb
push
jb
imul
stos
mov
daa
stos
subl
cli
jmp
or
sbb
mov
mov
nop
mov
imul
mov
mov
and
push
sub
sbb
rcl
je
outsb
sbb
mov
repz
mov
mov
sbb
mov
cld
popa
pop
fisubs
sub
daa
inc
push
jp
mov
movb
fcmovbe
mov
mov
dec
pop
pop
repnz
inc
nop
jp
push
mov
adc
andb
scas
sbb
mov
repz
jbe
add
mov
out
cwtl
pop
pop
pushl
test
add
add
cmpsb
iret
mov
pop
fwait
movsl
out
fnsave
icebp
pushf
leave
xchg
mov
out
jo
mov
dec
mov
xor
push
gs
jb
mov
inc
mov
pop
sti
dec
sub
iret
lea
mov
pop
lea
out
mov
enter
testb
xchg
mov
in
fldenv
mov
dec
std
push
lret
push
ret
mov
int3
cmpsb
test
jno
ss
inc
cmp
lret
cwtl
xchg
inc
inc
pop
fsubr
pop
adc
jp
push
mov
jmp
jnp
out
sbb
test
data16
or
sub
pop
ret
cmpsl
mov
ja
cmpl
push
ss
dec
fsubp
jb
stc
cmc
aam
js
shll
adc
inc
shrl
jns
mov
pmovmskb
xor
inc
mov
mov
mov
jmp
push
test
push
jle
mov
push
mov
lret
xchg
inc
push
push
push
adc
fwait
in
adcl
fstps
mov
out
dec
pop
jecxz
inc
frstor
sbbl
test
xor
mov
and
sub
xchg
rol
dec
xchg
fisubs
mov
ljmp
jecxz
pop
ret
or
pop
adc
scas
sbb
mov
enter
mov
xor
xor
and
mov
and
ret
cld
into
pusha
dec
dec
rclb
add
pop
jg
enter
lock
movsl
adc
cld
test
rcrb
shrl
iret
pop
dec
cmp
jno
popa
and
inc
push
adc
outsb
adc
test
rclb
cs
inc
lret
movsb
lcall
loope
cli
mov
out
cmpsb
pop
paddb
xchg
sti
cmp
jg
cwtl
fistpll
scas
mov
inc
cmp
xlat
test
xor
shl
in
out
test
dec
das
xchg
rcr
aam
mov
popa
stc
xor
negl
fidivrl
push
repnz
sub
or
or
xchg
je
in
imul
out
jge
in
inc
pop
fidivrs
out
adc
xchg
shrl
push
rcll
xchg
mov
pushf
imul
xchg
dec
int
pop
scas
dec
jbe
jg
orl
imul
xchg
fists
cltd
sbb
into
test
add
push
mov
pop
cmc
insl
dec
std
and
jl
das
psrlw
rol
icebp
fnsave
rcr
jmp
sbb
lods
test
sub
pop
bound
mov
stos
popl
leave
mov
pop
mov
jp
push
int3
mov
rolb
pop
fsub
lcall
mov
or
push
rorl
addl
xor
jo
pop
mov
lds
aam
pushf
jle
pop
and
pop
sti
sub
pusha
inc
mov
jmp
mov
inc
loopne
aam
imul
imul
mov
in
sahf
repz
aas
jp
mov
ret
add
fiadds
fwait
mov
xchg
xchg
mov
sub
std
call
pop
xchg
adc
push
shlb
lods
sbb
fdivl
jle
xchg
mov
out
mov
mov
es
insb
cli
dec
mov
fdivrl
sahf
inc
and
test
lcall
xor
dec
mov
das
daa
icebp
fwait
jmp
daa
test
add
ja
popf
aaa
jae
repz
mov
push
lods
sub
iret
cs
gs
dec
xorb
jecxz
jae
xchg
push
mov
xchg
mov
mov
xorl
jne
subl
sub
pusha
push
sti
out
leave
cmp
cmp
sbbb
sbb
ss
and
lock
addr16
pop
mov
mov
sti
mov
clc
sbb
cmc
cli
in
push
xor
ret
xchg
sbb
mov
mov
rcrl
jbe
pop
enter
sar
cmpsl
mov
sahf
xor
insb
in
fiadds
iret
out
mov
call
jp
out
push
cmp
xchg
ret
mov
pop
addr16
xor
rcl
outsb
push
cmp
lahf
scas
pop
xor
mov
inc
clc
mov
jmp
mov
std
cmp
xor
sub
jmp
imul
leave
jg
dec
mov
inc
cmpsb
loope
jmp
or
out
adcb
das
rorb
mov
or
mov
data16
push
xor
out
xchg
data16
stc
rclb
jnp
push
aaa
out
mov
sti
inc
sbb
pop
mov
mov
mov
push
sub
rclb
shll
or
repnz
jmp
ja
cs
pop
add
cmp
lock
out
test
jne
cmpsl
pusha
dec
cs
pushf
mov
xrstors
inc
jp
leave
fsts
mov
mov
sbb
es
fcmovu
lcall
loopne
jecxz
jae
xor
lret
fldenv
push
call
daa
push
loop
xchg
xor
lds
pop
fwait
mov
aaa
sub
xchg
xor
xchg
sarb
cltd
sub
jno
adc
inc
es
xchg
pusha
mov
fisttpll
jb
push
add
add
mov
add
gs
les
ja
or
idivl
jge
or
xsha1
cmpsb
or
popa
mov
mov
xchg
shlb
sahf
out
cmp
stos
mov
dec
dec
addr16
pop
lcall
lret
xchg
cld
fistpll
sub
jbe
outsl
sub
sub
xchg
xchg
hlt
mov
sub
popa
mov
adc
pop
push
xchg
rclb
std
movsl
std
js
mov
lret
xchg
and
js
imul
mov
mov
push
inc
mov
add
int3
sub
mov
mov
fwait
stos
and
adc
lret
cmp
adc
and
cmp
jb
je
aaa
es
mov
sbb
repz
cli
cmp
sub
ficoms
scas
mov
iret
or
cld
pop
shrl
in
xchg
and
cmp
jne
mov
add
dec
scas
mov
or
cmpb
fmull
nop
xor
xorl
pushf
push
rclb
stos
or
adc
inc
ljmp
add
popf
outsl
cmp
jmp
mov
ds
pop
arpl
jnp
push
rcr
loope
mov
pop
dec
inc
jae
jbe
shll
fnstsw
adc
fstl
arpl
push
call
inc
outsl
xor
sub
hlt
dec
sbb
cmp
sub
inc
push
push
popf
sub
mov
lahf
cld
cmp
and
xor
out
adc
test
xchg
mov
pop
test
mov
ja
movb
xchg
dec
popf
push
sub
mov
lds
aam
mov
mov
inc
lods
sub
xor
dec
mov
insb
ss
out
dec
cmp
mov
adc
cmc
jbe
shll
dec
adc
mov
subl
enter
mov
insl
sub
xor
sub
das
pop
sahf
cmp
cmp
or
into
mov
out
xor
je
nop
and
rolb
out
inc
inc
stos
jp
imul
pop
pop
xor
or
ret
ds
hlt
xlat
cli
out
in
cmp
cmp
or
enter
or
sti
cltd
cmp
sub
mov
fstpt
movsl
sbb
xchg
push
es
add
push
int3
adc
mov
dec
jp
in
pop
ret
cmpsb
sbb
pop
in
loopne
jne
out
movsl
push
jle
sub
adc
and
or
clc
dec
mov
in
stc
xchg
cwtl
mov
sub
add
mov
scas
mov
push
xor
pop
add
inc
add
pop
or
pop
push
xor
dec
push
push
xor
xor
out
mov
push
add
ljmp
sahf
jnp
push
clc
push
pop
jnp
and
push
mov
aam
xchg
mov
or
mov
fcmovne
push
push
push
pop
pushf
es
imul
cmpsb
xchg
fs
test
testb
inc
sub
jl
and
into
dec
outsl
mov
dec
imul
loop
test
inc
fsubrl
inc
xchg
inc
mov
dec
mov
fisubl
ss
add
int
add
fs
subl
jb
or
das
add
push
push
out
pop
lea
cmp
or
pop
sahf
mov
jl
adc
adc
addr16
ret
jle
inc
mov
mov
outsb
jnp
pusha
dec
push
call
push
pop
out
jg
pop
imul
adc
int3
jl
andb
lahf
in
fsubp
test
jb
xchg
pop
fadd
dec
dec
inc
or
pop
fs
fistl
mov
sbb
add
xchg
sbb
and
push
aad
inc
addb
scas
sbb
pushf
mov
shll
inc
stos
jns
inc
xlat
add
jnp
mov
movb
jp
iret
imul
into
dec
pop
js
push
and
cmpb
movsl
add
jns
push
cmp
mov
mov
lret
dec
sub
xor
int
inc
cwtl
mov
jnp
xorl
push
push
cltd
and
dec
ss
inc
je
push
inc
push
xchg
lods
push
pop
jecxz
in
leave
sub
adc
xor
in
mov
add
adc
adc
stos
imul
mov
xchg
mov
dec
arpl
xor
jmp
out
push
or
dec
mov
and
sarb
lret
fists
push
into
data16
mov
xor
xchg
stc
inc
and
mov
aaa
daa
dec
inc
pop
ljmp
xchg
and
sar
jne
outsl
pop
sbb
test
scas
mov
les
lcall
pop
pop
add
fcmovne
je
mov
dec
xchg
rol
pop
popa
fwait
and
add
inc
and
push
jg
in
jo
aaa
test
jmp
fs
into
dec
cwtl
mov
leave
outsb
adc
dec
pop
push
int3
fisttpl
or
and
fidivrl
mov
and
imul
std
pop
movsb
pop
mov
pushf
hlt
bswap
cmp
push
cmc
pop
fldenv
outsl
dec
arpl
ret
int
sub
sub
or
mov
push
das
divl
jl
in
js
pop
lock
rorl
mov
rcl
or
pop
shll
or
push
adc
frstor
mov
js
cmp
bound
dec
into
dec
jo
subl
imul
sbb
jmp
mov
int
push
loopne
pop
orb
xchg
popa
push
and
fists
xlat
nop
pop
aam
imul
leave
arpl
push
popa
addl
out
push
nop
inc
dec
mov
pop
xchg
add
loope
loopne
push
aas
dec
jne
mov
xchg
or
sbb
dec
out
push
test
outsl
mov
fistpl
sub
out
jno
test
pop
mov
cmp
int3
add
xchg
push
fs
in
or
lahf
cmp
dec
sbb
cmp
jne
push
in
jg
adc
adc
sub
xor
out
push
or
movsb
push
jns
jo
into
xchg
inc
aaa
lahf
mov
jo
enter
xlat
cmp
xchg
mov
push
test
jae
cs
push
imull
cmp
lock
iret
mov
mov
xchg
inc
int3
cvtps2pd
xor
stos
push
xorb
dec
out
mov
inc
sti
ds
inc
push
out
das
xchg
and
and
mov
xchg
mov
and
jne
lods
add
dec
rorl
call
cwtl
stos
hlt
or
ret
fcmovnb
push
sub
push
iret
leave
jecxz
pop
fidivl
ss
jmp
add
jl
sahf
inc
cmpsb
or
mov
xchg
cmc
pop
lcall
outsb
outsl
push
add
or
shr
pusha
bound
adc
clc
lret
mov
mov
jmp
leave
rcrl
adc
repz
int3
ss
int
mov
rorb
jge
hlt
mov
adc
jae
sub
dec
ror
dec
jl
xchg
cltd
ret
lods
inc
scas
mov
pop
push
jp
add
or
cwtl
pop
ret
fimull
movsl
fs
xchg
push
sbb
pop
lock
jp
loope
and
pop
imul
notl
outsl
imul
sarl
jmp
shll
add
mov
and
inc
int
ja
fsubrl
cli
imul
and
loope
je
inc
xor
inc
fistpl
test
mov
mov
int3
xor
adc
iret
mov
lea
nop
sub
cmpb
adc
mov
lods
xchg
les
mov
jg
or
sahf
aaa
xchg
sbb
or
test
mov
insb
xchg
xchg
gs
add
dec
jge
push
adc
test
loop
cmpsl
lret
add
insb
scas
hlt
leave
mov
iret
insl
push
mov
mov
and
sub
sbb
sub
adc
xlat
das
fldenv
cmp
fs
mov
lock
or
sub
or
loop
pop
jne
js
pop
ret
jns
out
xchg
or
iret
adc
jns
sub
lea
pop
inc
add
xor
or
adc
pop
push
leave
dec
testb
movsb
fxch
xchg
test
hlt
arpl
mov
xor
xchg
gs
lods
call
and
mov
xchg
lret
jmp
popf
mov
inc
or
cwtl
xchg
mov
stos
cmp
pop
cmc
out
stos
movsb
xor
into
jne
sub
imull
mov
xchg
loopne
pop
jno
sub
out
pusha
or
push
sarl
addr16
lret
jne
test
jecxz
and
xchg
push
std
xchg
inc
mov
jo
jg
es
leave
es
enter
lret
adc
stc
mov
dec
fistpll
das
jo
and
fistps
dec
sahf
or
jo
insl
and
hlt
int
cli
aam
stos
mov
and
xor
adc
jbe
into
fsubr
fsub
arpl
or
dec
out
and
or
aad
int
xor
add
cmp
int
inc
jge
adc
jnp
lods
jle,pt
or
aad
cs
mov
xlat
cmpsl
xchg
sbb
and
lret
ljmp
inc
out
pushf
mov
inc
std
jl
cmp
in
incl
push
lea
popf
fisttpl
push
aaa
in
push
and
imull
insl
add
sbb
jbe
pop
imul
xlat
cmp
mov
and
sarl
dec
xchg
enter
cltd
cwtl
dec
in
mov
in
or
in
rcrb
push
cltd
push
cwtl
pop
outsb
push
aam
iret
imul
movsb
mov
fidivs
rcll
lock
cmp
bound
gs
fld
outsb
dec
stc
xchg
fldl
rol
sahf
repnz
or
in
loope
jb
mov
sbb
xchg
loopne
sub
adc
inc
orl
ss
jns
push
adc
xor
lods
lret
and
lock
or
inc
sahf
cltd
jg
xor
or
xor
movsl
jo
jae
sbbb
mov
js
aam
pop
inc
mov
xor
and
lcall
fs
xchg
leave
test
lahf
out
in
clc
ret
dec
sahf
or
mov
rcll
sub
lret
xorb
pop
sbb
mov
repnz
push
popf
add
push
cmp
push
sbb
inc
jno
out
fstps
jge
lret
mov
push
movsb
aam
ljmp
push
mov
add
and
push
je
ja
jns
dec
iret
fldcw
and
mov
xchg
xchg
jp
lahf
cmc
mov
dec
jl
push
loop
sub
cltd
loope
aad
sub
pop
xchg
xor
xchg
lret
lret
jmp
mov
push
sti
mov
push
push
test
pop
add
out
mov
inc
dec
xchg
xor
xorb
inc
sbb
push
xor
add
rcll
shrl
jns
sbbl
add
adc
gs
lret
imul
in
in
insb
xchg
loope
xchg
xchg
in
pusha
rclb
mov
lcall
mov
inc
add
pop
jge
outsl
cmp
cmpsb
push
daa
mov
cmc
cmpsb
jp
std
out
and
sbbl
inc
mov
ffreep
pop
enter
movsl
push
mov
icebp
fucom
xlat
in
cmp
cltd
or
jge
lcall
cmp
xor
int
and
mov
xlat
mov
iret
std
xor
and
pop
rcl
push
push
gs
ds
mov
js
stos
dec
mov
repnz
jle
dec
scas
sub
ja
xor
movsl
cmp
fcmovnbe
and
out
xchg
xor
cmpsl
sbb
inc
ds
mov
push
mov
xor
out
cmp
ss
int
mov
sarl
adc
loope
sub
mov
xchg
fdivs
push
outsl
ret
rcrl
test
repz
xor
filds
dec
inc
imull
fstps
pop
cmp
cmpsb
imul
arpl
inc
aas
xchg
mov
and
fstpl
rcl
fistps
popa
fwait
stos
adc
cwtl
jg
int
dec
mov
adc
dec
lds
xchg
insl
test
ds
pop
les
or
xchg
sub
in
cmpsl
push
jne
or
or
gs
mov
xchg
sti
pop
adc
push
xor
loope
cmp
xlat
dec
or
shr
fs
dec
inc
dec
popa
adc
cmpsb
imul
xor
cmp
ret
neg
lret
sarl
jb
sbb
out
in
out
pop
sbb
jp
cmp
jbe
jo
mov
lahf
mov
sub
xlat
mov
ja
mov
jp
inc
aaa
daa
addr16
cmpb
mov
pop
stc
and
cmp
push
sub
mov
shlb
ljmp
mov
sbb
insb
add
xor
pop
cmc
mov
mov
stos
xchg
mov
inc
cmp
dec
insl
mov
cmpsb
decl
mov
sbbl
lcall
cli
out
das
movsbl
or
pop
fisttpll
inc
xchg
outsl
orb
lock
push
xor
pop
hlt
cmp
mov
xchg
movsb
lcall
mov
movsb
jp
hlt
mov
lock
sbb
cmpb
jmpw
rorb
loopne
add
xor
in
push
push
insl
popa
gs
stos
add
jge
rcrl
xchg
aad
pop
dec
cmp
xchg
jae
test
stc
out
data16
filds
into
cmp
cli
and
or
aaa
in
xchg
aas
loop
xchg
std
iret
call
cmp
divl
filds
in
jno
popa
mov
push
mov
faddl
sub
jnp
loope
jp
fadds
sbb
pop
jg
pop
add
mov
cmpsb
loope
pop
xchg
mov
pusha
mov
push
sbb
sub
lea
mulb
movsb
xor
dec
jle
shl
cld
cmpsb
je
dec
jae
push
cmpsb
popa
daa
jmp
popl
inc
je
test
fldenv
dec
xor
jmp
or
fwait
test
sbb
fcompl
push
dec
and
mov
into
or
push
repz
outsl
gs
add
mov
mov
inc
cwtl
sbb
xor
sarl
inc
cmpb
add
mov
fbld
daa
xor
out
push
push
or
and
adc
mov
xlat
push
cmc
test
pop
int3
test
mov
inc
ja
jge
mov
scas
jmp
sahf
push
adc
inc
insb
cld
xor
insb
xchg
fcompl
sahf
out
mov
xor
mov
repnz
pop
dec
cmp
sub
enter
push
scas
mov
xlat
rolb
cli
je
lds
jp
fcmovnbe
mov
xlat
in
adcb
leave
mov
dec
mov
shll
cli
cmp
out
push
repnz
add
pop
test
inc
and
dec
jmp
cmp
jb
and
dec
repz
or
inc
adc
or
shrb
std
lcall
jl
mov
and
stc
pusha
xor
jmp
fstp
add
sbb
in
add
out
pushf
mov
pop
dec
test
jl
push
cmp
insl
cmp
inc
fstpt
cmp
inc
dec
loope
scas
add
loope
jle
xchg
mov
stos
xor
daa
jge
ljmp
dec
pop
nop
loopne
into
adc
jecxz
in
insb
jecxz
push
sub
xorl
mov
xchg
mov
popa
push
in
push
out
sbb
daa
xor
xor
and
ss
mov
mov
cwtl
pop
fistpl
sub
subb
orb
pusha
lock
dec
arpl
sahf
jmp
push
insb
cld
mov
fisttps
push
push
shrl
into
aam
repnz
fildll
lret
add
cmp
movsl
jg
or
xchg
inc
fs
push
jge
add
xchg
enter
or
hlt
je
cmp
jp
lds
pushf
pusha
fdivrs
pop
in
jno
mov
push
movsl
ret
lretw
xor
cmpsb
dec
push
imul
imul
aad
div
jae
fimuls
movsl
movsb
xchg
test
mov
sahf
xchg
lea
adc
shll
sbb
lahf
das
loopne
xor
pop
adc
jge
and
push
lea
and
cld
mov
sbb
inc
out
jmp
xchg
das
mov
jg
mov
jl
jnp
mov
mov
sub
add
fidivrl
xchg
push
sub
mov
push
pusha
popa
dec
push
or
jmp
pop
push
xchg
mov
aad
or
lret
jbe
push
sbb
mov
lds
inc
imul
mov
xchg
jb
dec
push
jo
xchg
xor
add
in
pop
mov
push
jg
push
adc
mov
push
jb
cmc
jo
ljmp
daa
ret
and
mov
pop
ljmp
ret
add
mov
das
adc
add
xor
xchg
jbe
adc
mov
and
jl
mov
les
out
test
enter
jbe
pop
mov
shrb
xor
stc
dec
mov
ds
testb
push
les
out
fstps
std
les
cld
add
jmp
cltd
arpl
push
pop
outsl
add
cmp
mov
in
outsl
pusha
aam
or
cmp
into
ret
aad
adc
inc
xchg
stos
add
cmp
fldl
sti
fdivrl
imul
xchg
sti
cmp
fcompl
hlt
adc
xor
scas
push
in
mov
fnsave
jge
shrl
sbb
lods
aaa
outsb
cmp
int
cmp
sbb
pop
mov
jae
dec
pop
int3
xorb
repnz
mov
lcall
in
fs
adcb
xor
in
push
xor
adc
sbb
or
jne
dec
lds
push
push
test
stos
sub
ljmp
mov
fsubr
mov
mov
pop
push
cmpsb
cmp
add
xor
aas
in
mov
std
dec
sub
ficoml
cmp
in
mov
into
mov
stc
mov
stos
add
cwtl
pop
popa
lretw
scas
pop
push
xor
mov
or
ljmp
pop
cmpsl
add
cmp
sbb
mov
adc
jge
mul
push
mov
push
jns
pop
cmpsb
push
cli
ds
je
fiaddl
adc
nop
jmp
loop
pop
jb
dec
sbb
bound
mov
bound
add
daa
dec
add
mov
nop
add
inc
sbb
and
or
jns
aad
jnp
and
fidivl
mov
stos
int
cwtl
jg
mov
flds
fs
dec
sub
popf
loopne
nop
js
cmp
icebp
sub
mov
dec
iret
inc
pop
jmp
sub
dec
aam
aaa
cmp
dec
mov
fwait
stc
scas
jb
std
js
stc
movl
mov
in
fidivl
inc
mov
push
xchg
popf
ss
jno
mov
or
call
jg
arpl
xor
in
test
nop
sub
aaa
sub
push
dec
add
pop
insb
pop
js
xor
lock
dec
outsb
push
jne
jge
dec
cmpl
mov
sub
xchg
pop
inc
pop
xor
mov
mov
add
lds
pop
into
cmp
ret
and
clc
test
pop
orb
ficoms
jno
in
jne
enter
into
sbb
and
push
jle
or
int3
add
lock
sub
push
jns
adc
imul
or
fucomip
cmp
or
sub
or
js
sub
mov
popf
test
fnstcw
jl
push
hlt
and
lcall
push
cmpsb
aaa
popa
jne
mov
dec
or
jecxz
push
jp
or
insl
in
js
mov
pop
js
add
mov
and
aas
loop
pop
add
dec
xchg
mov
mov
jb
sti
jo
add
mov
dec
xlat
inc
pop
jmp
rdmsr
pop
sub
test
mov
jns
aas
mov
fstpl
mov
or
pop
fnop
popa
mov
mov
xlat
xor
leave
pop
test
les
add
popf
inc
aam
ja
lds
das
repz
pop
cli
mov
adc
dec
adc
cmp
adc
mov
push
mov
aas
fcmovnu
dec
cwtl
push
test
push
or
inc
gs
imul
jge
ja
mov
xor
or
fs
mov
cmp
mov
call
popa
imul
nop
xchg
mov
mov
sbb
xchg
jne
lock
push
xchg
test
pop
addr16
pushf
cmp
sub
addr16
lret
mov
fsubr
lret
cltd
mov
imul
fs
xchg
les
adc
sti
lods
mov
lret
adc
lret
xchg
out
test
in
cltd
and
out
mov
push
or
and
or
fidivrs
cwtl
fisubrl
imul
in
adc
push
lcall
cs
sbb
in
daa
je
or
loope
out
mov
subb
and
lret
ja
jl
js
or
rorl
push
jle
ret
push
shlb
movsb
mov
jmp
adc
cmp
inc
fwait
bound
xchg
dec
insb
repz
or
test
push
xor
es
pop
ret
ds
cmp
mov
or
jge
pop
adc
mov
lret
ja
xchg
sbb
fidivs
mov
mov
jne
les
out
bts
xlat
push
fwait
add
sub
pop
aaa
lods
sti
cmp
push
sbb
inc
xor
adc
sub
ljmp
inc
test
lods
cmp
add
mov
inc
cwtl
insb
jmp
pop
and
cmc
inc
mov
aad
push
enter
imul
sbb
dec
mov
in
ret
cmp
movsb
clc
dec
rcll
mov
pop
stc
sbb
test
ret
xor
bound
mov
pop
push
lahf
sub
addr16
leave
out
lods
jle
mov
imul
jge
lret
pop
pusha
gs
xor
pop
mov
negb
dec
push
pop
sub
adc
in
pop
leave
or
push
mov
add
push
mov
addr16
mov
mov
fwait
inc
inc
adc
popl
cmp
dec
mov
cmp
in
jl
addb
fdivr
rolb
xor
pop
push
ljmp
imul
and
jbe
mov
xor
sub
cmpsl
xchg
push
shl
ljmp
or
mov
enter
xor
dec
inc
inc
leave
jl
mov
cld
adc
cmp
jns
xchg
adc
jo
fistpll
scas
mov
add
push
and
or
dec
push
mov
cmp
inc
out
or
or
jo
xchg
test
cwtl
fs
pop
cli
icebp
outsb
shr
fmulp
pop
loop
stos
mov
xor
in
lock
jle
mov
insb
lcall
pop
mov
cmp
xchg
in
mov
lock
pop
dec
orl
int3
dec
test
aad
jmp
jb
pop
adc
rolb
add
sahf
pusha
and
push
xchg
inc
add
xchg
test
inc
aaa
lods
inc
outsl
cmp
mov
dec
in
jno,pt
push
sbb
inc
adc
imul
lret
aaa
adc
inc
nop
push
call
roll
adc
sbb
adc
popa
xor
fs
test
jo
pop
pop
bound
jae
push
test
sbb
xchg
xchg
mov
push
mov
pop
inc
popf
pop
pop
jns
imul
mov
outsl
xor
lock
imul
icebp
lea
mov
outsb
ds
jle
jecxz
arpl
cmpsl
sub
mov
jmp
push
js
jge
sbb
outsl
cmp
sbb
pop
push
dec
xor
mov
mov
adc
loop
lcall
pushf
add
enter
fstp
pop
fistpll
xchg
jb
pushf
mov
movsl
outsl
push
cmp
scas
push
ljmp
movsl
mov
push
jne
pop
lock
mov
int3
addl
pop
jl
imul
cmp
ficoml
pop
push
mov
cwtl
xlat
mov
inc
pop
sub
mov
pop
sbbb
popf
dec
rcrl
push
push
push
mov
int3
mov
mov
in
inc
lcall
test
test
adc
fisttpl
enter
ljmp
xchg
dec
mov
xlat
jbe
add
pop
mov
dec
out
fisubrs
xchg
inc
repz
in
push
test
fnstenv
pminsw
adc
jge
adc
out
iret
xchg
imul
out
sub
icebp
sbb
inc
sub
xlat
xor
mov
repz
int3
inc
adc
mov
xchg
scas
push
test
insl
sub
ds
in
lods
sahf
and
lea
push
push
je
xor
fcmovnu
pop
aad
jo
hlt
dec
push
mov
push
sbb
xchg
scas
xchg
sbb
push
cmpsl
lods
test
les
fcoms
sub
jmp
pop
pop
inc
popf
push
push
hlt
mov
push
fisttps
mov
xor
shll
cli
inc
adc
jo
cli
inc
mov
stos
pop
out
xchg
hlt
xchg
jge
dec
fcompl
enter
inc
test
out
test
mov
push
sbb
pop
bound
or
xlat
pop
cmpb
ret
mov
aad
fwait
cmp
cs
and
mov
mov
add
adc
xor
add
mov
shlb
and
sarb
gs
fiaddl
jns
sbb
nop
cs
fbld
out
je
or
insb
mov
push
add
data16
repnz
test
add
rcll
fmuls
sub
mov
mov
cld
mov
pop
clc
leave
adc
test
mov
ss
out
dec
cmp
mov
or
mov
push
lret
xchg
shl
out
sbbl
fmul
xchg
xorl
and
pop
mov
xchg
in
sub
rcrl
lea
movsb
xor
icebp
bound
lea
xor
lock
repz
sbb
sub
imul
jmp
mov
rcr
rorl
insl
xchg
fldlg2
out
shl
cmpsl
cmp
popa
mov
dec
stos
dec
push
ljmp
dec
adc
push
rcll
repnz
clc
cmpb
test
stos
icebp
sub
in
mov
mov
adc
lcall
cltd
adc
mov
xor
out
xchg
xlat
lds
incl
xchg
and
push
pop
movsl
sub
lret
orb
jb
mov
xor
lods
push
jo
adc
inc
int3
sub
and
xchg
or
stos
and
ret
mov
repz
sub
push
pop
lcall
movsl
inc
out
mov
adc
daa
jno
mov
jmp
sbb
pop
lock
in
pushf
cli
nop
inc
in
imul
jp
push
inc
mov
mov
mov
pop
dec
xor
push
mov
push
ret
pop
jecxz
sbb
cmpsb
mov
js
cmp
adcl
data16
cmp
cwtl
inc
jns
jbe
dec
test
pop
jns
push
xchg
inc
mov
sbb
cwtl
xor
adc
lret
int3
es
sub
loop
imul
rolb
cltd
nop
pop
add
dec
mul
xor
shll
inc
in
xchg
scas
fmull
fdivrl
lock
hlt
or
std
dec
insl
mov
push
or
lcall
push
je
ljmp
xchg
out
sbb
push
pop
repz
cmp
push
dec
loop
sahf
inc
rorl
lret
inc
mov
lds
popa
out
dec
mov
in
rcr
xor
xchg
ljmp
inc
adc
out
ret
xchg
mov
add
inc
or
pop
fidivrs
adc
inc
push
scas
lahf
mov
out
xor
and
adc
icebp
adc
xchg
bound
jne
enter
add
cmp
lods
movl
jmp
add
jg
out
jnp
mov
aas
xor
mov
scas
dec
in
test
push
sub
sub
add
jno
fiadds
cmp
and
push
xchg
xchg
jns
stc
xchg
mov
lea
add
sahf
pop
stc
popf
es
push
loopne
dec
push
xlat
or
pop
pop
mov
jle
xor
cmp
pusha
addl
repnz
mov
jo
popa
adc
mov
pop
sbb
cmpsl
fucomip
adc
add
jp
or
and
pop
loopne
xor
push
in
rcrb
xchg
xor
mov
aam
push
mov
pushf
mov
popa
mov
lock
push
inc
sahf
sbb
xchg
imul
mov
cmp
adc
mov
xorl
js
mov
repz
rcl
adc
push
aad
popf
xor
sbb
xchg
sbb
push
ja
fildll
or
push
in
cmp
aaa
push
sahf
insb
and
xor
push
pop
adc
dec
leave
xor
or
mov
ret
adc
lods
jle
out
stos
add
jnp
movsl
fistps
jbe
into
push
lods
push
rorb
dec
and
push
inc
sub
xchg
leave
pop
out
add
pop
mov
dec
insb
dec
decl
fidivs
cmp
mov
add
aas
subl
inc
loope
mov
pop
dec
out
dec
mov
add
cld
rclb
pop
lcall
jae
clc
pop
test
iret
ret
xlat
arpl
push
imul
cwtl
cmpsl
adc
inc
negb
popf
bswap
popa
std
into
xchg
mov
xchg
loope
sbb
mov
arpl
repnz
pop
insl
mov
in
mov
dec
movsb
xlat
or
cmp
lock
repnz
je
and
lcall
sbb
jge
or
mov
adc
mov
out
call
add
mov
push
or
dec
xchg
sti
addr16
xor
gs
cs
stc
sub
in
inc
stos
mov
es
and
addl
jo
dec
jnp
or
push
int3
ss
mov
push
push
addr16
jae
ret
cli
in
dec
cmp
jae
iret
stos
jnp
cmc
push
or
mov
adc
pop
rorb
push
cmp
adc
jl
mov
jbe
adc
or
test
adc
stc
adc
dec
ret
out
outsl
sbb
push
int3
xor
bound
call
test
cld
xor
stos
rcr
jge
pushf
shll
cmpsb
xchg
sbb
lret
jmp
xor
mov
or
fmulp
xchg
and
in
out
pop
inc
add
mov
cmp
jae
pop
add
dec
call
enter
mov
sub
cld
scas
nop
adc
mov
pop
fisttpll
add
xchg
xor
xchg
sub
xorl
ss
stos
daa
cld
add
dec
mov
mov
mov
faddp
add
add
jae
mov
cmp
aad
mov
sbb
sbb
xchg
hlt
mov
adc
iret
or
mov
or
pop
mov
sub
jb
cmpsl
int
dec
and
loope
testl
das
mov
pop
cld
jecxz
adc
test
repz
adc
cs
scas
xlat
pop
lds
adc
lods
cmp
mov
jp
add
and
sarl
in
xchg
loop
ret
int3
cmc
addr16
jle
in
in
jle
mov
movsl
jmp
mov
nopl
imul
pop
orl
and
lret
mov
adcl
xchg
enter
out
out
pop
adc
mov
push
in
lock
sahf
jmp
ljmp
ret
call
jle
fcompl
xchg
outsl
scas
das
cmp
test
fldl
mov
dec
bnd
in
mov
adc
mov
lea
sub
enter
adc
cmp
fcompl
xor
int3
add
pop
faddp
fiaddl
jbe
mov
loop
sysret
ret
xchg
jp
adc
pop
out
dec
push
popf
lods
dec
cwtl
adc
inc
lock
inc
loope
fmull
iret
clc
mov
lock
ja
cwtl
mul
fs
aas
pmullw
scas
lods
gs
bound
mov
lods
mov
cmpsl
mov
or
imul
fidivrl
mov
dec
jecxz
mov
or
jb
pushf
push
icebp
in
sarb
or
and
outsl
outsb
xchg
mov
mov
dec
push
jae
mov
mov
push
xchg
ret
sbb
sub
or
repnz
sub
leave
rorb
iret
cmp
es
sub
jo
das
jb
ret
rolb
fisttpl
repz
popa
dec
lret
fimull
insl
pop
mov
and
mov
mov
or
clc
mov
and
mov
dec
pop
jno
inc
jno
jl
mov
xor
mov
out
shrb
sub
test
ja
lock
repz
cli
cs
out
lods
mov
scas
repnz
mov
test
loop
add
popa
xchg
jae,pn
addr16
mov
xchg
xor
mov
lock
jns
or
jno
sbb
cwtl
jns,pn
xchg
and
daa
mov
mov
stc
adc
ret
ja
psrlw
fwait
loope
add
jb
daa
xchg
mov
js
push
xlat
pop
fidivs
leave
mov
in
xchg
push
outsl
cmp
je
and
push
adc
push
inc
shr
jno
push
fmull
mov
mov
mov
imul
loop
add
pop
test
push
iret
lret
insl
xchg
pop
adc
push
add
mov
xor
or
lea
fld1
ja
adcl
fiadds
sbb
repnz
loopne
mov
scas
inc
pusha
xchg
sub
lods
pop
adc
sahf
into
sub
cmpl
mov
pop
out
rcrb
fsubrs
sbb
inc
lock
mov
sbb
mov
outsl
lcall
clc
in
or
cmp
dec
test
mov
pop
mov
and
aas
cmp
sti
out
insb
outsb
lret
shl
add
fldenv
jmp
or
fwait
xchg
test
lgs
out
xchg
mov
cmc
in
sub
jne
mov
daa
jmp
push
outsl
js
cltd
in
mov
mov
sub
and
mull
jbe
push
pop
rcrl
pop
shrb
xchg
jns
pop
push
out
lcall
add
movsl
xchg
in
testl
out
nop
les
xor
mov
sub
incl
bound
hlt
sub
add
loop
scas
hlt
xchg
xchg
lcall
outsl
cmpsb
pop
in
push
je
dec
hlt
movsb
cltd
data16
mov
add
sbb
inc
call
and
mov
clc
ret
lretw
xchg
jae
loopne
subl
inc
mov
mov
mov
stc
test
xor
stos
and
sbb
addr16
cli
push
insl
pusha
sub
into
mov
xor
outsl
data16
xchg
fldt
push
data16
and
push
aad
insb
and
lahf
idiv
out
imul
xchg
push
inc
xchg
shrl
jae
inc
xchg
fidivrl
lock
cmp
out
fdivr
incb
cli
mov
jno
js
xor
scas
test
fwait
jg
and
xchg
xchg
mov
das
mov
mov
in
sbb
mov
popa
pop
add
jmp
xor
mov
mov
mov
xchg
fsts
arpl
mov
inc
mov
mov
mov
inc
sub
jl
stc
mov
lods
sbb
ds
jns
jb
adc
jge
xor
sbb
sbb
sub
cwtl
in
iret
xor
adc
test
sbb
xchg
loopne
mov
frndint
das
out
jae
js
pop
xchg
xchg
les
arpl
ret
insl
xchg
imul
leave
lret
shrb
out
ljmp
push
xor
mov
mov
cmp
pop
loope
jb
stos
xchg
divb
mov
push
xor
clc
inc
mov
sub
or
movsb
fsub
push
je
sbb
xor
dec
leave
adc
imul
add
loop
cmp
loope
sub
inc
test
imul
mov
push
cmp
pop
orl
sbb
or
jb
jae
pop
inc
bnd
stos
je
imul
or
idivl
inc
shlb
mov
mov
lds
scas
dec
leave
cmp
sub
sub
int3
cmp
icebp
xor
jmp
or
iret
sub
xchg
lock
mov
mov
jmp
es
jo
jbe
pop
in
shll
mov
cltd
xor
xchg
sbb
pop
call
dec
sub
dec
loope
popa
inc
aaa
gs
inc
mov
arpl
xlat
xchg
cli
pop
jb
xor
rorb
pop
outsl
loope
pop
add
lea
xlat
jbe
xor
pop
mov
sub
or
mov
dec
mov
fisubrs
cmp
dec
push
xchg
sbb
sub
movsb
pusha
loopne
fsubl
or
fst
sub
insb
inc
sub
sbb
xchg
mov
std
add
call
hlt
clc
add
fstpl
mov
push
loop
pop
cli
push
dec
dec
vphaddbd
cmp
in
mov
xchg
dec
jbe
sub
aam
mov
outsb
mov
outsb
and
mov
push
or
lods
aad
test
aad
xchg
jne
inc
sub
inc
decb
pop
pop
inc
test
mov
cmpsb
mov
mov
pop
pop
in
push
inc
shl
mov
imul
inc
cltd
negl
cmp
loopne
loop
pop
add
or
lcall
cmp
je
inc
xchg
push
jno
jae
push
lds
data16
dec
movsb
push
push
leave
add
mov
fwait
lods
jo
dec
movsb
mov
pop
sti
int3
adc
mov
rcr
ficoms
test
pop
inc
xchg
or
adc
insb
or
sub
sti
lea
adc
jp
mov
mov
out
and
ds
mov
test
and
xchg
fdivrs
fwait
les
or
leave
lock
mov
push
dec
fst
jl
in
stos
pop
std
notl
xor
adc
push
xchg
out
push
xor
pop
mov
pop
push
sub
frstor
mov
xchg
cmp
dec
add
cli
jnp
fcoms
inc
mov
addr16
add
jg
pop
fwait
xor
pushf
sarb
push
outsl
cltd
or
cmc
repz
fnstsw
inc
mov
pop
testb
cmc
jmp
dec
ss
lret
jno
movsb
movsl
xchg
mov
stos
in
movsl
push
popa
lods
orl
dec
xor
inc
addb
adc
aad
mov
loopne
std
out
sbb
cltd
mov
mov
cld
incl
mov
add
mov
dec
ds
xchg
aaa
cmpsl
dec
inc
repz
xchg
cmp
xchg
jle
adc
jmp
push
pop
xchg
inc
stos
pop
mov
js
mov
mov
push
mov
jae
popf
sar
pop
mov
enter
stos
mov
insl
sbb
push
cmc
mov
leave
jecxz
add
mov
loope
int3
je
popl
and
mov
pop
lea
lods
and
stc
rolb
mov
les
add
jo
cmc
add
fcoml
mov
ficompl
rclb
pop
stos
ds
mov
mov
outsb
sub
push
dec
inc
push
mov
loopne
imul
xchg
nop
lahf
test
lahf
xchg
mov
enter
pop
mov
pushf
stos
and
and
jmp
mov
adc
imul
comiss
pop
jg
or
and
cs
aam
mov
mov
dec
sahf
mov
dec
fcomip
shrl
xchg
xlat
aaa
ficompl
leave
xor
mov
jnp
cli
icebp
test
js
cltd
mov
pop
pop
mov
pusha
cmp
jge
lret
or
mov
sub
xchg
sbb
inc
add
jle
mov
cmp
mov
mov
pop
adc
incl
lret
xchg
xchg
out
and
mov
stc
scas
pop
push
std
loope
and
scas
cs
jo
mov
push
adc
add
aad
or
mov
shll
mov
shrl
sub
mov
test
add
dec
ljmp
pop
scas
iret
pop
iret
fistl
ds
daa
dec
fdivrl
pop
sbb
cs
xchg
xchg
dec
aaa
mov
pop
pop
dec
jns
lret
sbb
js
sbbb
mov
cs
adcl
jl
stos
push
rolb
aad
push
in
rcrl
push
xlat
add
mov
add
and
popf
pop
mov
xchg
out
stos
pushl
loopne
xor
push
gs
sub
cmp
mov
xlat
pop
sub
sbb
pop
cld
int3
in
or
add
mov
add
add
inc
aas
fcomi
jb
dec
add
cld
fdivrl
inc
scas
mov
jl
rcrb
sbb
pop
push
bound
andl
test
push
rclb
and
or
or
negl
test
mov
vrsqrtss
mov
push
inc
lcall
sbb
cld
push
mul
pop
pop
into
add
mov
insb
movsb
popa
and
gs
jbe
js
jae
cwtl
jo
push
ljmp
nop
das
add
cmp
sbb
rcll
jmp
lcall
mov
mov
ja
or
ficoms
xor
jbe
addl
adc
pop
into
inc
enter
clc
push
mov
outsb
lahf
jb
xchg
scas
jecxz
retw
jae
pop
pop
dec
sbb
lahf
push
jle
sbb
jno
mov
sub
mov
femms
or
mov
rcrb
jnp
cli
inc
sbb
dec
xchg
popf
adc
jne
inc
sbbb
push
test
fsubp
add
push
jnp
adc
ds
mov
add
adc
mov
xor
cmp
xchg
sahf
enter
fucom
xor
pusha
insb
inc
outsl
push
pop
add
pop
int
sub
lea
rorl
and
bound
cmp
adc
push
loopne
add
popf
pop
mov
sub
adc
mov
ds
mov
popf
sbbl
mov
cmp
enter
or
insb
inc
pop
dec
add
hlt
pushf
inc
cs
push
adc
fcmovu
cmp
mov
cmp
in
cmp
pop
cmp
jnp
je
mov
sub
movsl
aaa
add
sbb
out
lods
jmp
mov
xchg
adc
mov
xchg
fbstp
stos
pop
das
or
push
push
insl
shl
out
lahf
loope
ss
fwait
enter
in
js
xchg
inc
mov
add
das
xlat
rorb
cltd
movsb
mov
int3
jg
leave
sub
dec
sub
inc
or
sub
gs
push
add
mov
dec
dec
test
lods
fsubrs
push
xchg
les
lods
mov
dec
cmp
outsl
icebp
mov
out
notl
pushf
clc
je
pop
loop
imul
and
movsl
iret
or
push
popf
cli
std
inc
in
cmp
das
dec
xor
adc
mov
pop
mov
mov
mov
cld
cmp
add
jecxz
jge
and
push
mov
insb
rorb
pop
sbbl
push
mov
lds
inc
test
mov
notw
sub
sub
pop
xor
daa
cwtl
mov
dec
xchg
popf
js
push
sub
adc
rcrl
pop
or
jg
shrb
jge
pushf
cs
mov
gs
fcompl
dec
ljmp
ret
loop
bound
dec
dec
call
inc
out
or
xlat
repz
mov
out
stos
gs
test
pop
dec
dec
pusha
xchg
les
outsb
adc
xor
xchg
xchg
popa
fcompp
or
out
inc
test
xchg
mov
cli
mov
lods
outsl
pop
subl
push
stos
stc
mov
fsubrl
sub
mov
andb
xchg
push
inc
push
mov
lea
adc
js
imul
xor
lods
lahf
add
pop
out
data16
add
test
add
sbb
and
cmp
test
call
push
and
or
mov
shl
push
repz
mov
sbb
push
inc
fadd
mov
cmp
mov
adc
out
insl
pop
xor
mov
xchg
push
xchg
xchg
inc
inc
fists
dec
lret
pop
pushf
sbb
subl
pop
xor
lods
ja
push
out
cmp
imul
adc
jp
fwait
pop
mov
dec
scas
push
in
or
push
repz
add
cmp
mov
test
in
push
pushf
test
push
mov
jo
jge
dec
dec
and
and
les
pop
or
dec
mov
add
leave
out
shrl
jo
pop
cld
cmp
sahf
icebp
jge
sub
mov
push
addb
ja
sub
jp
fimuls
xchg
mov
cmpsl
faddp
insl
cld
or
sbb
sub
mov
xchg
sub
scas
cs
sahf
pop
and
je
insb
lods
imul
adc
scas
jge
xchg
loope
loope
sbb
or
add
testl
sbb
cmp
lcall
jo
xlat
dec
xor
lret
loop
jns
pop
fsubrl
cs
les
push
data16
pop
mov
ja
ja
and
sbb
movsb
stc
mov
scas
repz
pop
inc
aaa
subb
jp
les
jg
xorb
sbb
mov
push
mov
lret
pop
mov
inc
mov
out
pushf
xchg
das
jle
dec
enter
push
jl
lret
add
push
sbb
lcall
sub
or
adc
inc
rcrb
jg
hlt
outsl
lock
or
push
test
fnsave
pop
insl
rcrl
std
add
int
cmpl
mov
rcrl
xchg
sbb
cmp
cmpsl
cmp
dec
xchg
adc
dec
cmc
test
fisttpll
pop
cli
movsl
test
or
roll
xchg
mov
mov
push
mov
les
sbbb
shlb
sbb
loopne
xchg
stos
xor
insb
push
testb
ret
inc
dec
mov
jbe
insb
out
mov
lcall
or
lods
das
ja
aad
push
inc
std
or
pushf
lods
push
cltd
test
inc
aaa
push
sbbl
fwait
cmpsb
cmpsl
pop
pusha
and
movsb
mov
imul
andl
adc
jns
add
mov
les
adc
jp
sub
mov
mov
mov
cmp
and
stos
or
xchg
sbb
inc
pop
js
aas
movsl
mov
dec
lods
jbe
sub
out
adc
lock
add
test
or
pop
enter
mov
es
aas
ror
hlt
fsubrs
scas
ja
iret
jo
sbb
fs
jmp
mov
xlat
jno
orb
cmp
mull
mov
out
inc
adc
fstpt
out
fwait
jno
rcrl
out
repz
cmp
ss
mov
jmp
loopne
push
xchg
adc
jp
pop
pop
sub
pop
push
cmp
aas
and
lret
sbb
mov
movsl
sbb
add
lods
xor
adc
cmp
int
push
push
mov
dec
arpl
sub
outsb
addr16
shll
or
and
inc
and
sub
sub
cmp
ja
mov
sar
ja
ret
aaa
xchg
inc
je
jmp
fldcw
cmp
and
mov
lahf
jg
pop
icebp
rcrl
repnz
jbe
adc
push
fwait
aad
pop
ret
outsb
in
les
jno
mov
lea
pusha
jle
pop
shl
imul
push
js
push
add
sbb
sbb
or
jp
lock
or
scas
jo
hlt
push
or
adc
arpl
ss
adc
pop
out
movsb
pop
lret
mov
push
and
sbb
push
xor
push
sahf
xchg
xor
mov
es
cmpsl
int
sahf
and
test
mov
xchg
pop
pop
pop
mov
jecxz
cmpsl
add
lods
xchg
enter
fcmovnbe
xchg
out
fucomi
dec
inc
xor
or
push
aas
dec
cs
mov
add
dec
mov
addr16
insb
cwtl
fcmovnbe
mov
inc
cmc
lahf
and
ds
insb
lods
popf
call
pop
adc
insb
imull
xchg
lods
insb
bound
aad
jl
insb
push
cld
imul
sbb
repnz
fwait
pop
std
sub
std
arpl
pop
and
mov
push
mov
mov
push
adc
mov
addb
mov
jns
sub
stos
jbe
fwait
adc
adc
sbb
imul
xor
call
lods
jg
jmp
bound
lcall
std
mov
fldlg2
outsl
mov
jmp
mov
xchg
rclb
sti
fildl
stos
cli
push
and
jne
idivl
mov
sbb
cmpsl
insb
push
int3
outsb
mov
jge
lret
daa
clc
stc
dec
or
pop
xor
pop
ja
fidivrs
in
in
push
sub
push
pop
cmp
or
push
daa
mov
mov
out
xor
lds
inc
sbb
ret
out
mov
sub
jnp
xlat
or
sahf
add
cmp
dec
fndisi(8087
add
xchg
mov
hlt
in
lods
inc
push
sub
xchg
inc
dec
mov
sub
mov
cmc
fst
dec
sbb
jo
imul
jle
push
pop
sub
subl
dec
test
mov
sti
dec
xor
add
cmpsb
stos
into
inc
clc
mov
sahf
xchg
or
out
xchg
in
jns
push
pop
and
jo
jne
push
ret
dec
movsb
pop
insl
cmp
adc
or
popf
add
inc
adc
mov
jae
pushf
adc
dec
jb
xchg
addr16
ja
in
mov
mov
mov
iret
inc
sub
ret
movsb
scas
jae
adc
sub
mov
cltd
inc
pop
in
and
sbbb
dec
xchg
and
stos
shll
fbstp
add
add
aaa
and
push
outsl
stos
sbb
and
sbb
push
mov
cmp
or
fcoml
adc
jb
out
push
xor
mov
pop
movups
je
sahf
ss
jl
shlb
das
and
sbb
popf
sbb
mov
cmc
cmp
mov
push
add
dec
xor
mov
dec
dec
jnp
mov
inc
inc
inc
outsb
xor
icebp
aad
cmp
daa
pop
popa
stos
test
stc
cmp
xor
orl
lcall
bnd
shrb
shrb
pop
dec
mov
cmp
pop
stc
and
mov
sub
dec
lds
ret
scas
mov
push
test
outsl
dec
jle
test
mov
leave
xor
pop
mov
subb
push
lea
add
imulb
pop
pop
mov
inc
cld
and
sub
xchg
cwtl
enter
and
mov
xor
sbb
sub
aam
cmc
dec
cld
dec
cmp
jbe
sbb
cmp
push
pushf
fiadds
decb
shll
out
fs
xlat
mov
cmpsb
mov
lret
jp
stc
xchg
add
ljmp
leave
xchg
mov
xchg
xlat
sub
mov
out
call
pop
jae
push
jle
icebp
lahf
add
xchg
sub
xorl
movsl
inc
xchg
mov
enter
shr
sub
xor
int
stc
call
mov
add
sbb
sub
rcrb
or
mov
or
daa
fimuls
xor
cmc
cmp
cwtl
enter
lahf
fdiv
stos
dec
mov
push
or
bound
push
test
jg
jge
cltd
xchg
sarb
xchg
frstor
out
aas
cli
mov
imul
mov
in
dec
xchg
fnstenv
mov
mov
mov
cli
or
fdivrl
dec
or
iret
mov
inc
out
repz
mov
loop
mov
pop
stos
xor
scas
xchg
fsts
test
add
jmp
jmp
mov
addl
and
ret
mov
pop
rol
notb
pop
jge
mov
xchg
cmp
sahf
out
test
cmp
idiv
scas
mov
xor
test
inc
cmc
xor
dec
xor
xor
dec
loop
xchg
es
outsb
cmp
into
inc
aam
sahf
insb
std
mov
cltd
jp
adc
xor
jne
shlb
push
fstl
popa
out
push
push
cltd
and
adc
sub
sbb
dec
mov
stc
popf
xor
subb
jns
cmpsl
fdivr
in
add
xchg
dec
dec
or
clc
je
pop
aad
test
or
fists
mov
fs
jg
xor
mov
and
cmp
adc
pop
push
mov
shrb
mov
and
shll
loop
je
pop
push
lcall
cli
dec
cmp
lret
out
mov
iret
push
add
rolb
ja
fdivrl
pop
sbb
adc
inc
rclb
sbb
sub
jmp
ljmp
movsl
jl
pop
ja
lcall
sub
or
jg
shll
mov
jnp
xor
mov
in
cmp
outsl
nop
lahf
mov
stos
inc
xor
lea
arpl
mov
push
aad
pop
sbb
mov
scas
shll
mov
push
xor
mov
push
mov
jmp
pop
cmp
sahf
jle
negl
test
daa
fsubrl
les
mov
and
movsl
popa
in
dec
adc
and
sbb
push
movsl
loopne
ljmp
in
cmp
mov
ljmp
inc
loope
andb
scas
xchg
aam
cmc
jge
out
out
jns
and
out
xor
cli
adc
outsl
xchg
lods
mov
sbb
mov
sub
push
rcrb
sbb
xor
jbe
mov
or
xchg
inc
stos
lods
cmp
sub
mov
cmpsb
sub
cmp
pop
push
adc
lret
xchg
test
test
jg
xchg
stos
aas
and
mov
ret
jle
cld
stos
fsubrs
or
imul
or
cmpsb
fdivrl
mov
shlb
push
cli
out
shrb
pop
ja
jl
jl
cmp
jb
scas
dec
cmp
stos
xchg
push
mov
cld
out
and
and
sarb
cmp
mov
maskmovq
testl
jno
out
jo
popa
lock
mov
sbb
adc
sbb
or
cmp
fistps
stos
cmpb
lahf
mov
push
jp
or
jno
leave
fwait
jae
lret
adc
inc
lods
jl
jg
or
jae
das
imul
cmp
xorb
pop
jae
push
out
fwait
inc
cli
or
cmc
imul
xor
push
push
mov
mov
sub
popf
cmp
or
xchg
ljmp
scas
es
lea
inc
adc
mov
movsl
daa
jns
xor
cmp
xchg
aam
mov
scas
shrb
mov
xor
std
pop
pop
and
daa
xchg
dec
ljmp
imull
inc
jg
je
cmp
mov
fwait
push
daa
repz
mov
jp
test
jmp
push
and
inc
fs
lods
dec
cmp
dec
sahf
inc
ds
jo
mov
dec
push
xchg
push
testl
xchg
lret
fnstenv
lret
sbb
mov
push
sbb
jle
add
cmp
xchg
mov
mov
lcall
loop
repnz
or
js
aaa
cltd
stos
cmp
in
popf
test
dec
mov
xchg
or
icebp
pop
fs
mov
aam
scas
fstl
test
mov
in
ret
xor
dec
in
out
std
fcompl
movsl
add
jbe
aam
loope
data16
jg
xor
sub
or
subb
movzwl
fsubrl
ljmp
mov
jne
daa
imul
lahf
in
pop
int
mov
mov
daa
icebp
mov
ss
sbb
loopne
pop
dec
out
imull
scas
and
lret
cmp
lods
and
push
imul
cmpsb
push
orb
fiadds
cwtl
jmp
jmp
jge
push
or
cmp
inc
push
insb
or
addb
push
push
xor
add
mov
pop
xorl
mov
xlat
cltd
jnp
out
sbb
pop
gs
dec
push
shlb
insl
inc
pop
insl
data16
test
jbe
pop
lods
pop
inc
nop
cmp
in
lret
cmpsl
pusha
test
mov
in
daa
mov
or
and
push
enter
movsb
pop
adc
pop
mov
out
mov
mov
sbb
int3
mov
pop
testl
aad
push
add
mov
mov
add
fwait
in
test
rorl
mov
std
lock
xor
xlat
leave
dec
push
or
fisttpll
scas
cmpsb
shrb
dec
push
out
lds
xor
movsl
fs
mov
popa
mov
arpl
fnstsw
push
fildll
mov
add
ja
and
lret
add
push
xor
mov
push
rorb
jmp
icebp
jmp
mov
cmpsl
mov
mov
jne
into
daa
and
add
xlat
lret
scas
orb
outsb
sub
adc
icebp
sbb
add
fwait
xchg
or
mov
xchg
push
test
lea
ds
sub
stos
lds
sbb
xor
imul
adc
ret
cld
and
mov
mov
int3
xchg
sub
xor
pop
mov
repz
out
popf
jecxz
adc
test
push
adc
mov
pushf
in
shrb
adc
sub
sub
jns
mov
inc
cmpsl
mov
leave
cmp
sbb
les
add
sbb
cmpsl
xchg
or
ret
mov
push
repz
js
ret
and
mov
add
cmp
pop
in
adc
and
or
cmp
stc
adc
or
bnd
jb
out
out
pop
js
test
jo
incl
jns
out
jge
jecxz
inc
or
shll
mov
jmp
adc
xchg
insl
sub
lods
sub
adc
adc
add
jecxz
out
loope
test
dec
adc
xchg
mov
sub
pop
xchg
mov
lods
jnp
pushf
mov
fistpl
jae
or
push
fbld
mov
aas
imul
sub
out
sub
mov
push
inc
outsl
mov
inc
insb
outsl
rclb
push
les
insl
adc
rcrl
lahf
insb
add
ret
repz
push
cmp
mov
mov
testb
daa
scas
pop
in
or
mov
jbe
out
dec
cld
sub
stos
pop
fcoml
adc
xchg
lret
jl
jge
dec
pushf
aas
xchg
aad
mov
movsb
push
imul
ja
lods
push
jnp
stos
xchg
movsl
push
imul
in
push
test
jl
and
aad
or
scas
leave
cmpsl
or
inc
rcrb
int3
inc
mov
or
add
scas
sbb
push
ljmp
adc
rclb
jge
xchg
or
mov
out
sarb
faddl
or
mov
outsl
pop
cmp
and
sub
cmp
loope
lret
repnz
pop
dec
shl
nop
push
ss
in
jnp
jmp
repz
aaa
ljmp
sbb
leave
imul
adc
hlt
aam
cs
jo
fwait
sbb
jne
movsb
sub
jecxz
sti
push
add
xor
mov
cmp
xchg
pop
ss
insb
rcl
hlt
in
inc
push
cmp
xchg
aad
ss
or
in
ss
dec
sbb
loopne
movsl
lahf
xchg
fs
jge
add
pusha
cmp
fstl
loope
cmp
adc
add
push
sub
in
outsl
pop
stos
and
push
sbb
fdivr
pop
and
push
outsl
bound
xchg
shl
jge
xchg
popa
or
mov
rcrb
inc
or
sub
cmp
adc
adcl
jne
out
pop
xor
scas
xor
push
mov
in
rsqrtps
xchg
cmpsl
popf
mov
push
cli
testb
push
adc
bound
jle
xchg
pop
gs
popa
ss
sarb
jl
push
repnz
push
and
ret
out
add
jmp
adc
test
xor
sbb
outsl
dec
pop
adc
or
call
test
push
inc
inc
daa
add
fistl
cmp
adc
inc
or
dec
xchg
cmp
xchg
sbb
bound
scas
mov
pop
aaa
popa
push
inc
ret
imul
clc
adc
insl
mov
mov
mov
sahf
movsl
inc
push
sbb
mov
scas
pop
adc
add
inc
sbb
pushf
inc
push
in
xlat
mov
push
inc
xor
hlt
test
fisttpll
arpl
stos
jb
jl
push
aam
or
sub
push
jae
or
mov
insl
mov
xor
dec
daa
xor
cmpsl
mov
pusha
lret
xchg
xchg
jecxz
stc
enter
pop
cmp
sbb
test
xor
lods
adc
xchg
add
das
push
push
out
je
push
dec
mov
push
bound
dec
mov
fbld
xchg
and
mov
sub
nop
jbe
outsb
sub
push
lods
sub
xchg
in
mov
ficompl
dec
hlt
xor
clc
es
pop
sub
int
mov
sbb
and
out
cmp
adc
fisubrs
jne
xchg
es
xor
push
mov
test
dec
mov
mov
repnz
or
lret
and
jl
mov
or
divl
idiv
cmp
testb
sbb
pop
jb
jmp
lods
shlb
sub
std
adc
pop
or
mov
xor
xchg
ffree
insl
or
sub
xchg
mov
inc
push
push
cwtl
lret
sti
iret
pop
mov
push
fwait
adc
mov
xchg
jnp
ret
xor
sbb
and
inc
push
push
bound
loop
popw
jne
clc
sarb
sbb
loop
and
add
ss
push
in
cmp
dec
lea
mov
and
je
insb
lock
pop
in
jae
in
sbb
out
int3
popf
push
sbb
jo
gs
xor
or
pop
and
push
lahf
cmp
hlt
mov
mov
pop
add
fcmovbe
xor
outsl
dec
jecxz
imul
xor
int
adc
dec
and
out
fs
push
outsl
std
push
dec
or
add
imul
pop
jno
mov
jo
pushf
lods
icebp
ret
clc
mov
pop
ljmp
cmc
xchg
aaa
scas
stc
mov
shlb
mov
nop
xchg
and
dec
aas
xor
insb
sbb
push
mov
les
sub
je
push
imul
in
cmp
outsb
jae
xlat
pop
std
stc
loop
cltd
and
dec
xor
fidivrs
cmc
add
jecxz
mov
pusha
cmp
inc
into
xchg
jge
mov
add
pop
jl
cs
push
mov
jb
inc
adc
push
mov
jno
into
cmp
js
push
sub
nop
pop
or
xor
repz
addr16
push
or
cli
or
sbb
inc
push
push
jecxz
imulb
fsin
adc
mov
pop
aam
cmp
and
add
sub
push
out
sbb
mov
lahf
jmp
jmp
cmp
das
pushf
mov
jb
xchg
loope
out
fwait
push
sbb
int3
or
and
pop
sbb
add
test
dec
jle
dec
or
push
ficoml
flds
test
pop
jnp
mov
sbb
cmpsb
inc
pop
mov
mov
xor
pop
mov
mov
lret
or
bound
push
xlat
shlb
cltd
push
arpl
cmp
outsb
dec
or
cmp
cmpsb
int
sbb
stc
pusha
mov
xor
jecxz
push
outsb
push
out
inc
cmp
out
pop
push
addr16
pop
cmp
xor
adc
fnstcw
inc
iret
sbb
jbe
xchg
pop
jo
mov
push
pop
add
jl
iret
mov
mov
int3
popf
dec
rorb
fwait
mov
adc
fbstp
push
int
dec
lret
cltd
adc
pushf
rclb
fisubs
dec
inc
stc
addr16
sbb
mov
jae
test
test
or
pop
leave
sub
lahf
push
into
aaa
popf
xor
push
cmpsb
adc
outsb
mov
inc
push
popf
pop
insl
shrb
pop
xchg
fdivrl
or
sahf
inc
out
call
sbb
pmaxub
xchg
and
sub
mov
xchg
cs
cmp
mov
xchg
add
repnz
jl
cli
and
pop
sub
pusha
popf
pop
mov
ds
add
ds
int3
xlat
popf
sub
inc
add
loope
sub
sbb
test
std
push
leave
sub
popa
movsb
cwtl
jno
ss
dec
jg
js
jge
sub
shrb
and
popa
xor
decl
jg
out
sarl
enter
cmp
stos
cli
lods
lock
into
jno
push
push
jo
jns
cltd
or
lods
xchg
loopne
in
or
push
xchg
add
xchg
xor
aam
mov
jo
out
movsb
fists
ds
mov
pop
hlt
and
or
fwait
movsl
jb
push
ret
adc
and
pop
fxam
sbb
add
mov
in
mov
jmp
mov
sub
into
hlt
mov
ret
add
nop
popl
push
mov
or
mov
jno
test
xchg
add
mov
pop
bound
sar
ja
bound
nop
push
and
mov
jbe
sahf
jns
gs
sbb
xchg
call
mov
add
xor
loopne
add
test
pop
dec
or
icebp
jmp
in
mov
mov
or
xchg
sbb
stos
notb
pop
out
add
add
jns
mov
push
icebp
mov
push
xlat
cltd
push
ror
adc
scas
mov
into
shll
xchg
xlat
aaa
inc
push
pusha
pop
cli
dec
push
cltd
mov
pop
xchg
mov
testb
jbe
pop
lret
fnstsw
in
adc
or
cmpsl
out
shrl
data16
jle
mov
cmp
fdivs
testl
adc
xor
lret
jp
and
imul
iret
addb
dec
nop
aaa
cltd
mov
and
fcomip
sub
sub
pop
ret
movsb
nop
imul
cltd
xor
outsb
sub
adc
push
pop
test
xchg
sub
dec
cmpl
int
push
ja
adc
inc
pop
pushl
mov
test
push
cmp
in
fwait
sbb
add
mov
test
sahf
inc
jb
jno
aaa
mov
mov
mov
mov
test
lds
push
or
pop
mov
add
mov
adc
mov
cwtl
stos
mov
xchg
loope
add
jo
ret
aad
nop
mov
pop
mov
dec
mov
sbb
rcrl
lcall
fnclex
xchg
imulb
pop
cmpsb
mov
or
dec
das
xchg
cmp
xor
int3
in
pop
lret
or
dec
lahf
pop
xchg
stos
scas
adcl
rcll
pushf
cld
arpl
sub
das
rcrb
or
lock
sbb
outsl
insl
xlat
mov
dec
inc
push
cmpsl
stos
xchg
jle
push
clc
and
loope
push
lcall
outsl
inc
xor
cmp
int3
out
stos
dec
fwait
cmp
shlb
cmp
test
cs
cmp
in
ds
ror
push
loopne
int
faddl
incb
and
inc
jle
add
jmp
and
inc
test
mov
sub
imul
fwait
adc
imul
hlt
out
out
shlb
fidivrl
enter
push
je
adc
daa
icebp
sbb
and
and
dec
mov
add
pusha
test
xchg
dec
out
inc
jecxz
jle
inc
nop
mov
jns
imul
outsl
pushf
addr16
push
mov
repz
sbb
jno
mov
pop
mov
jp
push
fsubs
cmpsl
insb
xchg
in
jne
and
js
mov
les
cmp
mov
into
push
mov
aam
pusha
dec
enter
inc
arpl
dec
push
push
push
pop
es
out
add
lds
hlt
flds
icebp
xchg
sbb
mov
push
ljmp
xor
mov
imul
push
sahf
jecxz
inc
aaa
xchg
cltd
or
dec
add
mov
imul
ss
add
arpl
cmp
movsl
test
in
sarl
and
mov
sbb
mov
mov
mov
into
lcall
lret
push
dec
xchg
inc
add
cltd
hlt
in
xchg
xchg
je
jo
flds
mov
xor
shll
mov
insb
pop
cmp
pop
mov
jp
out
sahf
cmp
jb
and
bound
ret
inc
dec
push
sahf
sub
enter
fiadds
out
jbe
cmp
adc
into
aas
dec
lahf
and
xchg
fadd
js
mov
ss
out
cmp
scas
mov
pop
imul
mov
cmpsb
test
pop
outsb
jnp
dec
xchg
inc
push
jae
out
ret
cmp
inc
scas
les
mov
int3
mov
cmc
dec
fistpll
ljmp
and
xchg
lea
pop
mov
pop
xor
test
lods
dec
cmp
jns
test
mov
cmp
pusha
movsb
lahf
mov
cs
push
imul
and
xchg
test
push
xchg
pop
clc
inc
mov
int
ja
arpl
add
stos
xchg
push
mov
jp
sbb
andb
ficoms
xor
loopne
out
pusha
or
or
icebp
cmp
mov
xor
cmp
lods
shrb
inc
ret
lods
jp
test
push
pop
dec
xor
mov
pushf
add
jle
pop
xchg
loope
dec
adc
fwait
fs
add
lret
jle
push
mov
lea
pop
mov
std
sarb
push
mov
jmp
inc
inc
and
fs
fistl
dec
shrl
clc
adc
adc
aas
mov
xchg
mov
mov
lret
rorl
addr16
ds
adc
cwtl
and
in
xchg
xchg
js
jge
mov
aaa
nop
push
sbb
ja
mov
jg
mov
loope
jo
sbb
sbb
popf
pop
xchg
mov
push
inc
ror
dec
movsb
ljmp
out
add
pop
and
lods
cmp
lret
shrl
xor
sub
loope
mov
cmpsl
mov
repz
add
loope
xor
sbb
out
xor
scas
loop
ja
icebp
pop
loopne
shl
cmpsl
and
in
popa
xlat
rcr
push
mov
dec
mov
shrl
mov
xlat
ja
pop
xor
aam
pop
sbb
mov
dec
sbb
hlt
gs
cmp
mov
pop
lds
and
lock
bswap
cwtl
mov
fnstsw
ds
stos
or
out
push
jg
addl
sub
aad
dec
jp
cmp
stos
ret
ss
lods
mov
jo
sub
add
hlt
mov
cltd
mov
mov
push
or
push
daa
push
sub
push
out
shrl
jp
pop
ds
mov
dec
out
vfmadd231sd
pop
aam
and
or
push
mov
sub
inc
nop
arpl
cld
jno
imul
sbb
push
inc
mov
sbb
imul
icebp
hlt
add
leave
mov
xchg
stos
push
fwait
xchg
cmp
in
add
jb
cmpl
xchg
ds
ljmp
cmp
negl
rcrb
fsts
lods
outsb
lcall
stc
addr16
int
and
outsl
xchg
jl
nop
fmul
add
cmp
dec
adc
fcoms
fsubl
stos
push
je
sbb
icebp
lcall
jnp
pop
dec
sbb
clc
frstor
mov
mov
mov
add
aas
push
lret
imul
xchg
int3
sbb
pop
out
dec
pop
lea
dec
out
aam
jle
ret
sub
aad
lret
call
pop
fstps
andb
scas
mov
push
xchg
mov
sti
fs
dec
movb
dec
orb
adc
cmp
jp
add
mov
int
ret
test
ja
imul
jl
push
xchg
loop
xor
mov
test
cmp
jg
sub
sbb
pop
dec
outsl
mov
cmpsl
insb
and
cltd
gs
adc
sbb
pop
aaa
fstpl
pop
sbb
mov
cmpsb
lcall
sti
jns
dec
adc
stc
push
jmp
in
dec
pop
push
into
mov
cs
or
negb
and
dec
inc
scas
outsl
loop
popf
push
mov
repnz
sub
xchg
and
push
rcrb
js
icebp
ljmp
mov
adc
mov
pop
in
sub
sbb
out
mov
mov
cwtl
mov
js
sbb
pop
loope
dec
mov
scas
std
neg
or
push
sub
popw
or
aad
lahf
sub
das
mov
cwtl
rcll
shrl
add
rclb
push
sbb
add
dec
enter
push
lcall
or
arpl
sbb
scas
orl
mov
jbe
in
dec
addr16
cld
repnz
dec
pop
outsl
fsubrl
hlt
ret
imul
adc
push
icebp
mov
push
dec
mov
gs
into
pop
cld
push
in
aaa
jb
or
int3
cmpsl
or
inc
jecxz
sbb
xlat
cmp
pop
mull
mov
mov
jbe
cmp
xor
pop
xor
cmp
inc
ds
fsts
pusha
push
mov
cmp
loope
adc
or
filds
iret
or
aaa
or
dec
out
sbb
mov
lods
stc
mov
outsb
mov
imul
fbstp
scas
mov
pop
mov
neg
mov
ljmp
lods
rcl
and
add
nop
jecxz
movsl
stos
frstor
cmp
ret
jae
insb
pop
push
jecxz
mov
mov
inc
test
jg
ss
inc
fmuls
out
inc
mov
pusha
or
xchg
push
inc
std
js
xchg
inc
dec
test
add
xchg
cli
mov
jp
addr16
loope
mov
pop
xchg
add
addr16
lods
push
repnz
mov
pop
fstpl
lahf
mov
lret
push
aad
pop
sbb
cmp
sbb
js
rcrb
push
std
aas
ja
sahf
int
cs
push
push
bound
and
xlat
inc
mov
out
mov
loopne
bound
xor
xchg
stos
imul
jbe
repnz
xchg
imull
mov
xchg
jle
or
or
push
in
jno
lret
dec
loopne
nop
sti
lahf
aam
incl
subb
lcall
test
int3
xlat
cmpsb
or
push
ja
jo
outsb
xchg
iret
mov
loopne
or
or
in
test
imul
sbb
in
sbb
ljmp
sahf
cmc
xchg
and
jbe
fwait
and
sbb
xchg
imul
push
sbb
adc
mov
add
push
pop
jns
fldt
sbb
ja
mov
pop
push
mov
popl
addr16
push
xor
lods
pop
cmp
jb
dec
fucomp
pop
das
mov
jbe
dec
cmp
push
rorl
fs
add
dec
ljmp
mov
dec
inc
outsb
idivl
std
cs
ds
sub
inc
sub
xor
jge
cwtl
shlb
jl
movsb
cli
pop
mov
loope
repz
mov
enter
and
inc
and
mov
push
push
fimuls
jmp
out
mov
mov
popf
add
mov
mov
lock
mov
testl
push
dec
enter
shll
dec
jbe
jne
dec
pop
enter
jge
jp
sub
in
sub
sub
andnps
fcoml
arpl
ljmp
add
lods
divl
pop
sub
lcall
xchg
or
repnz
mov
lds
js
push
cmp
dec
dec
lcall
add
imul
imul
mov
xor
repz
sub
push
jne
cwtl
rcl
fs
add
xchg
nop
mov
shl
scas
loop
pop
outsb
cmp
dec
lret
ds
adc
xlat
cs
sbb
int3
fmull
or
fstps
or
push
imul
popf
and
inc
cwtl
dec
sbb
addr16
mov
gs
stos
inc
mov
or
dec
addr16
push
dec
mov
or
fisttpl
xchg
push
mov
data16
jae
add
inc
fwait
pop
mov
sbb
inc
cs
or
pushf
ljmp
xchg
inc
jecxz
mov
test
mov
rcl
xor
imul
imul
and
pop
fildl
or
jnp
mov
adc
ret
arpl
test
and
or
sbb
jnp
jge
daa
pop
dec
fisubs
clc
fldenv
dec
jns
lds
cmp
cltd
jne
cmp
ja
mov
gs
mov
xchg
xchg
jg
rcrl
out
cld
inc
adcb
enter
das
pop
popa
push
rol
stos
jge
and
cld
and
lret
jnp
or
xchg
dec
mov
inc
aam
mov
adc
out
push
or
mov
arpl
dec
jp
aaa
pop
dec
imul
pop
and
xchg
cmpb
std
fstl
bound
leave
cmp
scas
insl
sarb
movsl
cmp
and
std
and
sub
js
dec
call
fistpll
ljmp
dec
les
les
fiadds
loop
loopne
imul
dec
push
popa
mov
gs
mov
popa
jp
cltd
dec
aas
mov
rclb
jno
and
loopne
shl
jno
xchg
int
repz
sub
xor
xchg
sub
pop
adc
adcb
aad
lret
inc
mov
subb
cmp
adc
xor
add
pop
hlt
call
jno
ficompl
ret
notl
jb
shlb
fistpll
sub
xchg
mov
pop
mov
repnz
roll
push
lret
repnz
arpl
xchg
in
pop
push
jne
push
das
mov
into
sub
xlat
and
push
lea
xchg
ljmp
lock
push
sar
sub
sub
mov
add
scas
dec
stos
pop
push
cltd
mov
in
mov
or
loopne
mov
sub
cmpsl
push
in
dec
ss
ljmp
pop
jbe
data16
icebp
pop
int
inc
std
mov
mov
out
and
hlt
or
movsb
fs
daa
jne
fmuls
jl
and
flds
adc
adc
pop
cmp
aas
mov
scas
iret
out
repz
push
ja
mov
xlat
jp
je
push
les
lahf
jle
loopne
mov
pop
mov
mov
hlt
or
jns
pop
mov
inc
sahf
mov
repz
lea
insb
push
nop
cs
inc
js
sub
mov
adc
or
push
cmp
scas
out
shlb
jns
jbe
xor
inc
push
pop
sbbb
ljmp
sub
push
daa
lret
mov
jb
movsb
iret
lods
orb
ret
cmp
add
lea
xchg
push
je
inc
cmp
and
dec
mov
icebp
daa
fimull
stc
fdivrl
mov
sti
andb
jnp
popa
pop
icebp
adc
cli
inc
push
int
dec
inc
push
cmp
add
arpl
sbb
sarl
sub
hlt
and
pop
ret
dec
jg
mov
xor
orl
test
jge
adc
daa
and
jecxz,pn
xchg
jae
pop
pop
push
dec
jl
adc
lahf
xchg
sar
aas
push
loop
mov
iret
mul
cmc
movsl
setg
add
inc
in
cwtl
ror
cwtl
jae
sbb
jmp
lea
push
dec
sub
js
push
rorb
aam
jbe
mov
mov
cmc
movsl
outsl
fwait
pop
lret
mov
add
call
or
sbb
sub
das
or
in
ficoms
clc
sarl
dec
into
push
cwtl
xchg
out
repnz
push
jmp
dec
nop
mov
or
out
sub
pop
inc
push
adc
or
test
std
push
xchg
cmp
popf
sti
into
and
fbld
cmpsl
inc
mov
mov
push
lret
jnp
es
out
scas
inc
push
stc
xchg
and
ja
insl
adcl
xor
jmp
sbbl
jl
faddl
shlb
stos
les
insb
inc
and
and
sahf
and
loopew
pop
xor
and
out
push
adc
movsl
bound
cltd
out
adc
std
and
push
daa
jecxz
add
ja
fs
loope
sbb
je
cmp
in
jle
xor
jl
inc
sbb
or
mov
sbb
cmp
add
push
pop
push
roll
shl
inc
aaa
cmp
push
inc
rorb
add
divb
cmpsb
sub
adc
aaa
inc
test
js
sbb
dec
je
mov
lods
add
bound
add
ret
rcll
test
mov
push
jge
pop
and
lea
scas
dec
aaa
mov
in
insl
out
fstpl
inc
push
mov
xchg
in
or
das
out
cmp
repz
loope
icebp
scas
insl
dec
sbb
js
loop
push
loop
daa
inc
jbe
addr16
ret
mov
in
sbb
or
sub
pop
ljmp
add
roll
add
push
jmp
and
inc
mulb
cld
xor
lahf
lea
aam
ret
mov
pop
test
dec
sbb
icebp
sub
push
adc
add
xchg
inc
dec
mov
inc
call
mov
cs
mov
jnp
je
push
fistl
mov
std
test
xchg
sbb
sahf
add
rcrl
cmp
pop
outsb
xchg
mov
jmp
incl
jnp
mov
dec
rcll
xchg
inc
test
fdivp
dec
xchg
fcoml
lcall
lahf
sub
add
push
mov
andb
xor
adc
repz
std
cmp
pop
xchg
push
pop
repnz
test
int3
aaa
cmp
sbb
jo
scas
adc
jae
pop
jle
sbb
fldl
xlat
movsl
iret
les
mov
pop
cwtl
jb
push
mov
sub
jg
pushf
repnz
cli
sarb
imul
inc
lcall
test
xchg
add
fwait
xchg
mov
je
push
sahf
movsl
lds
pop
jbe
incl
call
jo
mov
dec
jne
inc
adc
lret
loope
scas
and
popa
xchg
ja
imul
cmc
add
js
test
shlb
popa
pusha
mov
ret
mov
jge
mov
test
sti
pop
outsl
inc
pop
nop
stc
popa
fnsave
mov
push
pusha
mov
xor
jo
fs
jmp
mov
test
bound
mov
out
test
push
push
pop
pop
mov
or
and
inc
cmpsl
mov
sub
clc
mov
insb
mov
and
mov
jns
adc
daa
imul
xlat
bound
jno
pop
out
jo
jo
or
xorb
xchg
aam
les
jmp
test
cmpsl
das
int
stc
jge
push
push
adc
mov
xor
aaa
outsb
mov
dec
and
adc
es
cmp
scas
cmc
ljmp
or
pushf
push
jbe
lret
add
test
inc
lcall
cmp
aam
rolb
out
pop
out
fnstcw
cltd
sub
cltd
adc
xor
ret
push
mov
mov
js
dec
in
xor
sub
sub
push
xlat
mov
ja
sbb
push
aam
insl
adc
out
or
cmp
hlt
mov
xchg
mov
mov
stc
jmp
nop
stos
popa
push
cmc
mov
push
push
int
movsb
ret
loope
cmp
jp
xchg
popf
out
and
sub
out
jl
enter
in
les
jp
dec
aad
inc
loopne
mov
sub
out
xlat
ja
sbb
jnp
std
jne
pop
nop
sbb
lds
daa
add
pop
dec
inc
push
pop
fistl
xchg
jmp
dec
out
jb
add
fnsave
inc
push
xor
xor
push
nop
test
jne
outsb
sbb
push
add
std
movsb
xchg
subb
xchg
push
mov
int3
dec
push
mov
push
call
hlt
pusha
cmpsb
lods
ret
test
add
loopne
imul
lcall
dec
jmp
cld
dec
mov
mov
mov
sbb
adc
push
mov
out
or
sbb
dec
mov
xchg
and
jno
daa
pop
stos
lahf
mov
push
loopne
inc
cmp
jp
jae
in
lret
cmp
mov
fisubs
fildl
fsubs
mov
mov
pop
mov
adc
push
sbb
scas
outsb
cld
jp
xor
ljmp
inc
loop
dec
sbb
lret
std
enter
movsb
out
jnp
push
add
add
cli
inc
aaa
mov
enter
fwait
in
lahf
leave
push
pop
neg
in
int
pushf
and
pop
lcall
inc
out
lcall
xchg
inc
int
in
cmp
inc
adc
mov
mov
sub
jnp
fsubrs
in
cmp
stc
push
pop
stos
add
mov
clc
cvtps2pi
in
add
or
outsl
sarb
mov
xor
push
repz
mov
mov
insl
imul
sti
outsl
es
lret
fbld
push
xchg
push
adc
xchg
push
adc
sbb
mov
fcomps
add
pop
inc
jns
dec
cmp
cmp
pop
std
or
jmp
cld
inc
inc
nop
daa
pusha
popf
xchg
pop
lret
hlt
out
cmp
or
sub
mov
push
push
xor
push
mov
stos
push
cmp
push
pop
popf
inc
cwtl
and
sbb
into
lods
fldt
mov
lds
aaa
or
push
cmpsb
push
jmp
imul
xchg
pusha
dec
and
pop
idivl
dec
xor
xchg
sbb
mov
mov
xchg
mov
faddl
mov
call
cmp
mov
lahf
jnp
mov
cs
jp
sbb
mov
jns
fistl
push
in
out
or
inc
loop
addl
jbe
out
push
or
movsb
lret
repz
iret
mov
cltd
iret
adc
aad
in
shll
mov
and
test
mov
mov
ss
sub
cmpsl
xor
mov
stos
push
add
rcl
lret
jle
ja
les
data16
leave
xchg
jb
orl
mov
scas
add
xchg
jns
rorl
or
rcrl
add
repnz
cmp
mov
jle
lods
in
fsubp
lea
int
xor
movsl
lock
hlt
or
lock
loopne
push
loopne
jae
adc
ret
mov
push
imul
pop
xchg
or
stos
es
cmpsl
xor
pushl
lods
imul
mov
cld
repnz
xor
jge
or
jo
and
ror
cmp
rorb
loope
pop
mov
cmp
mov
adc
push
cld
aam
std
mov
lret
push
daa
sub
nop
add
push
sub
jns
mov
sbb
and
mov
fldt
xchg
cmpl
repnz
stc
push
inc
dec
inc
cmpsb
cmp
xor
adc
incb
cmpsb
mulb
jmp
adc
ljmp
icebp
data16
or
loopne
shrl
mov
mov
and
lcall
fcoms
pusha
add
and
fwait
xor
orb
sarl
dec
or
push
push
dec
mov
mov
cwtl
loopne
insl
leave
mov
insb
pop
stos
push
shrb
hlt
fs
inc
adc
mov
or
das
xchg
mov
out
push
mov
daa
nop
cwtl
mov
rolb
pop
xchg
repz
or
cmpsb
push
dec
inc
aas
mov
cmpsb
in
mov
pop
mov
jge
ljmp
repz
jno
push
push
in
je
cmpsb
inc
xor
inc
lcall
dec
ja
xor
stc
enter
adc
repz
test
and
lea
jnp
jnp
push
sbbb
stos
jbe
xchg
mov
push
and
fildll
inc
in
imul
orl
xchg
mov
int3
and
cltd
repnz
std
mov
repnz
cmc
mov
pop
movsl
ds
addb
push
sub
mov
test
fistpll
loop
jmp
faddl
aaa
popf
lea
negl
dec
inc
add
jg
mov
pop
xor
sub
jns
or
inc
sub
jecxz
jo
adc
mov
sub
sahf
dec
jbe
mov
jl
cmp
pop
sub
sahf
cmpb
push
add
std
jnp
xchg
es
dec
bound
mov
xchg
int3
call
pop
pop
outsl
xor
cwtl
sbb
flds
inc
xchg
shll
xchg
stc
aam
int3
jmp
add
sahf
mov
jecxz
fisttps
lds
adc
pop
mov
mov
shrl
lret
loope
adc
pop
dec
add
cmp
add
xlat
jo
and
sub
cmp
pushf
stos
pushl
or
clc
mov
bound
sbb
xor
mov
and
or
adc
stos
mov
or
mov
push
mov
inc
xchg
js
jle
imul
ficompl
pop
loopne
outsl
cmc
pushf
out
movsl
sbbb
cmpsb
sbb
dec
jle
lods
std
bnd
enter
std
adc
pop
fnstenv
and
aam
and
mov
mov
or
divb
lock
xchg
lcall
gs
or
shrl
faddl
dec
jbe
adc
or
jns
pop
push
pop
pop
loopne
adc
jl
or
jo
pop
test
pop
xchg
push
movsb
jb
sub
jae
pop
jecxz
icebp
lods
inc
cmc
int3
test
push
sbb
clc
push
mov
movsl
in
ret
ret
mov
fstps
ja
fisubrl
jp
mov
xor
xchg
enter
add
rcrb
xchg
inc
out
sbb
arpl
fs
mov
pushw
cwtl
push
or
or
jno
add
jp
scas
jg
xor
and
or
cltd
aas
stc
rcr
popl
and
lahf
add
jns
popa
daa
stos
mov
fsubrl
push
mov
add
iret
cmp
ja
or
insl
jno
rorl
cmp
cwtl
aaa
xchg
mov
xor
out
push
pop
in
mov
iret
mov
inc
dec
mov
test
orb
aad
ss
out
test
jl
popf
leave
sbb
mov
mov
xlat
leave
xchg
arpl
push
and
iret
cli
mov
xchg
lcall
cmp
jmp
inc
fistps
xchg
cmp
mov
je
bound
fldt
mov
xchg
mov
mov
push
cmp
mov
outsb
jnp
cmp
stc
ficompl
jbe
scas
push
fidivl
cmp
cmpsl
cmp
jno
popf
das
sbb
movsl
lock
mov
sbbl
gs
jg
fsts
in
inc
cld
pusha
cmp
fwait
or
jbe
xchg
hlt
jge
cmp
sti
imul
loopne
outsb
outsl
sub
lret
adc
pop
push
mov
push
ficoms
div
and
jne
or
jl
das
push
xchg
push
pop
in
fs
xchg
out
jo
lret
add
popf
pop
lahf
sub
dec
out
je
test
push
roll
cmc
jg
icebp
xchg
fcompl
mov
cmpsb
xor
outsb
les
imul
xor
pusha
pusha
and
out
je
add
pslld
sbb
out
push
cmp
pop
xor
jle
std
xchg
adc
aam
ljmp
sbb
mov
ss
bound
das
pop
sbb
mov
cmp
dec
jns
dec
adc
pop
push
int3
repz
pushf
ud1
in
mov
push
mov
push
sub
dec
shrb
mov
jmp
mov
sub
in
outsl
sbb
add
and
inc
and
adc
pop
sub
mov
adc
mov
dec
jo
leave
dec
popa
lahf
movsl
pusha
pop
je
movsb
sbb
inc
lods
sbb
xor
subl
mov
stc
mov
inc
xchg
xchg
xchg
xchg
icebp
test
adc
jae
pop
mov
leave
test
sbb
into
je
xchg
lods
jo
loope
jns
or
push
mov
leave
iret
int
dec
repnz
inc
int
mov
idivb
pushf
jo
or
add
clc
sub
call
xchg
arpl
mov
mov
and
xchg
jmp
pop
lea
fs
adc
fiaddl
mov
jne
fidivrl
mov
pop
inc
cmc
test
inc
fisubrl
and
dec
xor
dec
push
sti
mov
push
test
adc
scas
jge
adc
mov
mov
or
xor
mov
dec
push
mov
push
mov
or
fs
jno
sbb
das
xrelease
mov
cltd
and
adc
sbb
jno
adc
mov
movsl
sti
inc
loopne
lret
sahf
pop
insb
or
pushf
pop
lds
pop
mov
inc
sti
jns
rcrb
lock
mov
add
add
ret
mov
pop
ret
out
lcall
mov
pusha
fsubrs
xchg
icebp
push
add
mov
loop
or
clts
fcompl
outsb
add
or
push
aas
push
jae
fldt
dec
add
aad
out
fwait
cmpl
pop
and
ret
fistpl
adcb
filds
pop
and
sbb
mov
push
sahf
lret
inc
mov
imul
pop
pop
xor
inc
popa
mov
or
adc
push
popa
mov
xor
lods
out
mov
andb
adc
inc
xchg
shlb
loope
mov
and
pop
clc
jne
jge
mov
inc
or
inc
add
rorl
mov
shll
or
push
cmpb
mov
xor
cltd
jae
inc
mov
cltd
mov
adc
push
test
hlt
inc
dec
jle
sub
inc
mov
xor
inc
or
lret
negl
leave
sub
sti
mov
jecxz
mov
subb
cmp
in
pop
and
or
push
sub
push
fnstcw
mov
scas
fiaddl
lret
sbb
jmp
mov
stos
test
add
adc
lods
out
sarb
mov
arpl
push
push
lret
repnz
sub
push
ds
ficoms
or
ljmp
xchg
stos
adc
push
lret
xor
xor
mov
xchg
fbld
enter
pop
or
cmp
stos
cmpsl
fstps
fxch
pop
aas
insl
clc
andb
push
mov
fstps
jno
push
dec
imul
insl
push
out
int3
xchg
aad
lahf
icebp
pop
aam
ss
jae
movsl
mov
jg
mov
or
dec
xchg
xor
je
adc
mov
lahf
test
pop
xor
add
mov
nop
adc
mov
cmc
sti
movsb
pushf
shrl
sti
sbb
cltd
dec
stc
and
sub
repz
data16
xchg
jge
or
mov
mov
lods
imul
inc
mov
das
jge
mov
push
xchg
lcall
dec
or
ret
fisttps
mov
push
sahf
sti
cwtl
sbb
nop
mov
mov
je
shll
pop
bound
rcrl
jbe
xchg
mov
sbb
pop
repz
or
push
add
push
xchg
mulb
adc
subl
dec
inc
sub
in
mov
pop
out
shlb
clc
xchg
adc
mov
test
lcall
mov
jmp
push
mov
push
in
test
gs
sbb
inc
pop
rolb
and
push
inc
xor
les
ljmp
test
lahf
or
cmp
mov
rcll
dec
adc
or
mov
pusha
add
mov
out
push
out
leave
mov
divl
ljmp
or
pop
idiv
xor
xchg
in
test
scas
dec
push
test
rcr
ret
lods
sub
cltd
rorb
push
jb
xor
je
mov
jnp
mov
adc
dec
or
mov
dec
mov
loopne
sbb
clc
mov
inc
cltd
fwait
xor
sbb
fstpl
test
or
jnp
imul
mov
mov
pushf
mov
xor
xor
adcb
sbb
or
lret
mov
sbb
in
xchg
stos
xchg
and
dec
je
push
negb
and
std
pop
xchg
ljmp
out
inc
cmp
push
xchg
loope
jmp
insl
out
xlat
popf
sub
gs
pop
mov
les
push
or
out
xor
xchg
lahf
push
es
push
push
insb
jecxz
push
nop
mov
push
xchg
mov
je
and
int3
mov
fnstsw
sub
ret
outsb
jb
xchg
xchg
fsts
rolb
and
test
sbb
addr16
jno
mov
dec
and
jbe
popf
mov
dec
lcall
std
scas
sub
push
pop
in
iret
push
dec
in
mov
push
pop
and
add
dec
clc
inc
sbb
cmp
test
push
mov
data16
jns
sbb
pushf
dec
std
lods
outsb
pop
idivl
jns
add
loopne
pop
pop
xlat
fdivr
push
add
scas
rcrb
cli
nop
mov
adc
outsb
test
test
sbb
sbbl
movsl
mov
push
lea
mov
std
test
lock
push
fmuls
add
lcall
push
cmc
mov
mov
mov
in
popa
loop
pop
or
sub
adc
fsubs
sahf
mov
inc
and
fbld
cld
or
mov
sbb
int
imul
inc
pop
mov
adc
repnz
pop
mov
loope
repz
pop
cli
mov
scas
push
call
in
enter
mov
xor
xor
or
cmpsb
mov
xor
sbb
jmp
pop
cmp
push
adc
sub
ds
jnp
and
addr16
bound
imul
repnz
mov
mov
int3
push
xor
push
sub
xor
sbb
adc
mov
mov
mov
ja
pop
ds
fdivrl
in
rcl
xchg
fmuls
pop
dec
fcomip
stos
sti
add
push
push
mov
mov
into
cmc
push
xchg
std
push
dec
adc
pop
sbb
dec
sbb
sbb
push
in
add
sbb
jbe
inc
xchg
mov
push
fstpl
fisttps
mov
push
sbb
das
push
or
pushf
cmpsl
decl
inc
inc
and
ds
test
stc
mov
aaa
push
push
dec
pop
add
push
push
lods
adcb
cmp
ret
mov
cmpsl
arpl
and
push
pop
inc
int3
pushf
sbb
clc
push
sub
add
jo
aam
out
pusha
adc
divl
jg
lret
addr16
pushf
js
icebp
sbb
mov
push
scas
jno
fcomps
cmp
jg
loope
xchg
inc
sbb
mov
sahf
lods
into
test
dec
in
les
xor
mov
loopne
sti
mov
sahf
sarl
pop
mov
mov
clc
jns
fstps
fisubl
push
sub
cmp
mov
ds
fsubrs
xchg
cltd
and
fwait
xchg
int3
fcomp
fadds
adc
or
rclb
lahf
cmp
ficomps
rol
shrl
repnz
mov
fiaddl
mov
mov
inc
aas
aas
mov
imul
adc
lahf
inc
mov
push
call
ret
inc
pop
arpl
mov
lcall
addr16
and
sarl
xchg
notl
add
and
sub
sub
sub
mov
fcoms
fidivrl
add
testl
xchg
jmp
and
xor
or
mov
xor
mov
mov
insb
ljmp
leave
jae
mov
adc
lds
adc
jnp
add
jns
jno
out
leave
adc
adc
scas
js
or
adc
inc
pop
aam
push
loop
test
movsl
mov
jbe
movb
inc
gs
rorl
lahf
adc
mov
and
or
imul
jg
push
mov
push
cmp
dec
inc
fs
xchg
scas
sub
adc
sub
aaa
out
cld
stos
push
xor
mov
mov
int3
sub
ja
es
mov
pop
dec
int
xor
mov
ljmp
repnz
cmp
int3
std
hlt
mov
daa
hlt
lcall
jecxz
in
bound
jns
xorb
sbb
or
aad
dec
fiadds
ds
mov
adc
mov
out
mov
into
js
cmp
mov
cwtl
lcall
mov
cwtl
sub
pusha
fucomi
imul
adc
xchg
sbb
data16
and
lcall
sub
mov
push
in
xlat
shll
jbe
and
stc
add
push
dec
and
imul
pop
or
or
ret
sub
aad
lcall
sub
push
aaa
jae
xchg
iret
inc
insb
or
inc
addr16
aad
mov
shlw
pop
xor
mov
xchg
or
sub
rcrl
fisubl
hlt
or
xor
or
pop
fildl
inc
add
loopne
and
adc
ljmp
pmullw
inc
lret
jns
ds
scas
fwait
jp
shl
push
dec
movsl
add
call
jmp
mov
dec
mov
rorl
jl
movsl
push
lods
test
lods
or
mov
clc
and
aam
cs
xlat
test
std
lods
cmp
lock
jl
mov
pop
cli
cmp
mov
mov
fcoms
iret
jbe
mov
mov
pushf
subb
inc
movsb
imul
inc
mov
inc
fwait
xor
scas
dec
arpl
outsb
mov
cmc
es
mov
in
sub
push
ljmp
call
ffreep
lea
popa
roll
push
push
or
jmp
mov
dec
push
imul
pop
mulb
cld
sahf
cmp
cmpl
hlt
and
adc
mov
xchg
xchg
or
add
nop
out
cmc
jnp
pop
arpl
fnsave
pop
and
sub
outsl
mull
push
pusha
loopne
sub
sbb
scas
rolb
push
xchg
fs
push
xor
repnz
and
or
stos
movsl
test
jb
adc
mov
jbe
outsb
xchg
int
ja
or
push
test
sbb
mov
push
xor
mov
sub
test
in
stos
ret
lahf
movsb
mov
in
jbe
ss
inc
test
mov
cmc
shll
add
fstps
les
xchg
std
lcall
repnz
inc
cs
ret
das
sub
mov
adc
imul
mov
dec
xchg
jmp
movsb
in
jbe
xor
aas
xchg
cmpsb
out
je
mov
enter
jae
js
repz
je
xor
or
outsb
pop
push
shlb
sub
ss
push
loope
lds
jns
add
pushf
jmp
mov
lods
popa
insb
rcll
cld
divl
mov
or
pop
pushf
popa
xchg
pushf
pop
ljmp
add
fsts
loop
sub
jb
scas
push
adc
sub
cmp
out
mov
cmp
addb
inc
xor
adc
pop
insb
sahf
scas
and
push
ljmp
inc
lcall
mov
and
inc
sahf
mov
inc
cltd
pop
cli
imul
mov
fnsave
je
inc
fstpt
shrb
mov
fidivs
jp
popa
sub
inc
jo
and
test
ror
mov
xor
push
test
sub
inc
mov
outsb
ja
xlat
add
xchg
push
orl
sbb
add
inc
and
sbb
inc
hlt
lcall
jae
sbb
lcall
jb
sahf
sbb
adc
orb
and
xor
and
cltd
dec
inc
shl
jmp
sarl
pop
call
sbb
pop
cmp
jnp
push
in
icebp
nop
shr
sbb
pop
push
push
out
out
xor
xor
adc
stc
mov
movsl
pusha
and
std
sbb
insl
cld
andb
fildll
orl
aam
and
imul
cmp
push
movsb
sbb
inc
lret
dec
sarl
jl
jns
lods
push
pop
ja
sti
mov
movsb
cmc
or
cmc
shll
fucomi
sub
jecxz
cmp
or
in
mov
jbe
mov
int
jns
hlt
out
push
and
int3
jmp
fs
scas
add
sub
sbb
enter
fwait
xor
imul
cltd
arpl
jl
je
inc
or
sbb
push
push
rorl
sub
pop
xchg
lods
push
pop
mov
mov
aas
inc
jmp
and
fidivs
in
cmpsl
pop
hlt
xor
imul
mov
inc
pop
les
inc
and
aaa
inc
iret
push
rcr
mov
add
or
mov
add
lods
add
cmovno
mov
sub
jmp
xor
or
pop
stc
stc
xchg
or
push
mov
popa
dec
add
in
shrl
shl
add
push
sbb
cmp
outsl
gs
xor
scas
sbb
in
pmullw
or
out
dec
gs
jne
sub
cmp
pop
pop
cwtl
test
pop
jns
loope
xchg
popa
pop
add
test
das
and
or
xchg
dec
rcrb
es
arpl
dec
sub
jp
add
mov
cwtl
arpl
rcr
dec
sbb
fwait
out
daa
mov
in
dec
adc
and
jge
push
mov
adc
popf
mov
popl
in
int
hlt
cltd
mov
das
sbb
lcall
int3
je
decl
jle
fldl
mov
mov
inc
adc
lahf
cmc
mov
mov
aas
enter
mov
subl
sbb
sahf
loopne
lret
mov
add
cmp
mov
add
xchg
rorb
pop
xor
adc
push
mov
out
fs
and
adc
out
xor
xlat
test
call
pop
push
push
mov
xchg
pop
cmpsl
int3
xchg
push
mov
arpl
mov
out
rolb
cmp
adc
pop
lods
lock
pop
pop
sub
in
dec
mov
out
les
sbb
push
jo
cld
popf
ret
clc
data16
sub
sbb
add
push
and
sub
sbb
insl
and
in
dec
repnz
fidivl
sahf
out
mov
in
lret
mov
sbb
xchg
dec
lea
add
gs
stos
leave
aad
add
jno
cld
mov
push
imul
mov
sbb
orb
decl
jl
pop
jg
push
and
push
xchg
mov
push
insl
jmp
pop
mov
xchg
je
push
test
and
pop
cmpsl
xor
mov
xor
add
mov
mov
or
push
int3
ds
mov
pop
jns
xorb
insl
pushf
insl
stos
xchg
jno
xor
dec
xor
cmp
mov
cld
mov
outsl
mov
pop
lret
leave
push
add
push
lcall
andl
rorb
jp
nop
shl
add
popf
insb
sub
subb
sahf
out
push
test
cmc
push
and
jecxz
into
xchg
bound
movsl
pand
fcmove
and
or
pop
iret
loop
ljmp
loopne
insl
adc
sub
cmp
insb
es
inc
outsl
sti
ret
imul
pop
add
add
and
mov
popf
sarl
xchg
push
ljmp
fidivrl
xorb
cmp
cmpb
outsl
mov
push
mov
inc
dec
std
paddusb
sbb
inc
add
mov
rclb
inc
popa
and
ss
fcoml
lret
into
testl
das
ja
out
shrl
or
xchg
add
stc
xchg
loopne
lret
sub
adc
inc
dec
mov
insl
popf
fcoml
es
cmp
jns
lret
std
sub
push
icebp
jno
ret
cs
or
sub
not
add
mov
sti
jnp
lods
push
sahf
lret
cmp
in
cltd
filds
shll
jle
or
mov
mov
aaa
fwait
cmpsb
or
jg
push
jae
xor
jge
sbbb
test
sarb
jae
mov
pop
jl
mov
in
jge
insb
mov
sbbl
sbb
aas
cmc
sub
adc
mov
femms
stc
add
outsb
or
mov
push
mov
push
jae
adc
js
sahf
std
pop
mov
mov
js
clc
mov
popf
push
mov
or
es
loopne
mov
inc
sub
cmp
adcb
scas
jmp
and
data16
adcb
scas
mov
ficoms
cmp
cld
loope
insb
mov
xchg
sti
jbe
call
clc
xor
cmp
xchg
in
xlat
rorl
mov
xor
lods
enter
sbb
pop
and
cmc
in
sbb
pushf
jb
loopne
cwtl
and
fwait
dec
xor
sbb
jb
push
xchg
adc
in
popf
dec
in
mov
lods
xchg
filds
push
sub
jno
mov
fisttpl
adc
mov
xchg
add
push
repz
cmpsb
cwtl
pusha
lds
lea
jmp
cli
clc
dec
mov
ja
out
pop
mov
shr
lods
add
orl
sahf
shlb
inc
mov
mov
xchg
pop
mov
mov
jns
jo
mov
inc
testl
sbb
or
sub
ja
mov
sbb
bound
jb
fdivrs
adc
pushf
inc
fwait
lcall
push
and
dec
or
movsb
dec
inc
arpl
sahf
xor
nop
pop
xor
lcall
jle
bound
push
dec
cmp
and
je
mov
xchg
jge
xchg
jl
sbb
adc
xchg
cmp
jle
jb
insl
cmpsb
mov
stc
pushf
leave
dec
cmpsl
xchg
aam
pop
cli
iret
int
and
pop
adc
add
cmpsb
and
or
std
push
sbb
mulb
sbb
sub
sub
rcll
nop
clc
dec
pop
je
fstps
xlat
loopne
leave
sub
pop
cmp
mov
xor
orl
aam
lcall
or
push
mov
adc
aad
lock
fldl
popf
or
xchg
test
lret
rcrb
frstor
ds
jle
mov
mov
iret
arpl
movsb
cli
or
js
jg
scas
mov
mov
nop
daa
xor
roll
std
sub
fdivs
inc
xor
arpl
sbb
cli
sbb
mov
in
pop
and
fisubs
add
dec
test
mov
mov
mov
es
mov
and
push
pop
subl
jl
stos
scas
adcl
xor
cmp
dec
aad
dec
mov
mov
inc
xlat
adc
lock
or
jno
pop
xchg
aaa
push
mov
pop
mov
out
xor
mov
mov
push
mov
adc
test
dec
jo
pop
pop
sub
jb
inc
dec
or
or
shl
xchg
inc
cmp
mov
std
mov
data16
cmp
daa
out
inc
les
dec
mov
xlat
test
and
data16
movsl
mov
rclb
aas
cmp
imul
pop
test
add
jmp
in
in
fwait
testb
cs
icebp
fs
xchg
loopne
mov
push
push
mov
lea
inc
loop
in
adc
dec
lods
jb
mov
or
das
dec
push
dec
jp
dec
jle
dec
pop
enter
stos
mov
clc
or
dec
or
gs
iret
or
add
mov
add
leave
mov
stos
ret
xchg
cmc
int
ret
add
mov
in
push
sbb
stos
ja
xor
xchg
sahf
pop
xchg
mov
sbb
out
lock
mov
negl
fcoms
fcoms
packssdw
sub
std
rorl
inc
sbbl
mov
les
xchg
hlt
popf
adc
scas
pop
xlat
movsl
bound
mov
jecxz
insl
lret
cs
insb
je
push
sbb
inc
xor
mov
inc
popa
pop
mov
xor
jno
adc
andl
fidivrs
enter
mov
mov
adc
aad
lods
xor
aad
mov
pushf
sti
vpmacsswd
ss
lods
sbb
jmp
test
sbb
cmc
jg
cmp
adc
sbb
data16
adc
pop
xor
dec
shrl
cmp
lahf
out
pop
mov
or
cmp
leave
add
mov
sbb
popf
sub
inc
xchg
sti
jl
ret
jo
fstpt
shrb
addr16
add
jae
sub
mov
xchg
pushl
mov
push
rcl
ret
sbb
imul
les
lock
xchg
dec
loope
pmullw
push
pop
dec
jp
std
jg
xor
mov
imul
pop
ret
xchg
xchg
rcr
jae
sub
sti
in
inc
popa
mov
add
js
imul
xor
jo
inc
clc
jae
sub
push
pop
dec
or
inc
push
sub
int3
sub
dec
mov
dec
cwtl
iret
movsb
scas
sbbb
mov
insb
sbb
lds
push
subb
clc
fisttpll
jo
adc
jg
imul
sbb
mov
cmp
bound
push
lds
xor
or
cmc
push
addb
scas
add
mov
pop
inc
jne
sbb
xchg
sub
in
push
ds
push
mov
rcrb
push
sbb
fisubl
jmp
xchg
mov
mov
cwtl
cmc
inc
sub
fwait
pop
rcrl
cmc
lods
test
xchg
push
lock
xchg
into
divb
int
push
or
arpl
jnp
xchg
mov
and
insb
dec
dec
cmp
adc
jbe
fidivrl
fneni(8087
and
pop
push
and
cmp
dec
pop
inc
int3
xor
xchg
cltd
iret
int3
scas
popf
xor
shll
das
fnstenv
negb
or
inc
fcompl
jp
cmp
out
dec
push
jle
adc
xchg
mov
cmp
subb
xor
lds
sub
mov
jb
sub
test
cmp
and
adc
or
or
fimull
mov
xor
movaps
shl
fdivs
xchg
cmpsl
add
xchg
add
or
mov
mov
push
ret
mov
sub
in
cltd
fcmove
adc
mov
out
outsl
jnp
sbb
push
adc
stos
jle
insb
ret
mov
insb
dec
lods
jbe
popf
or
stos
inc
mov
sub
sub
push
ds
das
mov
arpl
leave
sti
xor
out
xchg
sbb
jo
repnz
mov
int3
inc
and
pop
lea
add
cld
jae
xor
xchg
pop
mov
xor
sub
imul
mov
cmpsl
cltd
add
movsb
roll
pusha
mov
lds
cmc
add
in
inc
sbb
jae
adc
int3
adc
mov
add
push
dec
mov
xor
mov
ds
push
mov
arpl
lret
std
dec
aas
int3
jmp
lock
sub
jge
pop
data16
sbb
jmp
xorl
cmp
inc
lret
mov
int
add
in
mov
push
push
iret
adc
lods
fimuls
xchg
dec
mov
pop
jo
call
jmp
lcall
push
and
pusha
cltd
dec
in
and
sbb
pop
push
pop
roll
popa
jno
sub
mov
testb
scas
and
push
fisubrl
inc
out
mov
pop
lods
rclb
dec
adc
pop
aas
ljmp
das
lret
in
jns
pop
and
aad
push
and
mov
fidivrs
jbe
mov
jl
push
in
mov
xchg
push
pop
stc
sub
fstpt
push
sub
mov
and
add
cmpsl
pop
xchg
add
cmp
xchg
jge
into
pop
adc
rcll
scas
sbb
adc
adc
mov
sbb
outsb
mov
insb
push
xlat
add
cmp
jnp
pop
add
adc
stc
push
push
movsl
fdivrp
mov
xchg
int3
es
adc
cmc
xchg
inc
jnp
push
test
and
enter
push
out
jno
fcomps
imul
leave
push
xchg
push
mov
int
xorl
dec
sbb
or
xor
jle
dec
push
in
jle
lret
jge
and
push
mov
lahf
mov
fldpi
call
cmp
mov
js
cltd
in
shl
mov
lcall
fldt
ja
bnd
push
mov
lahf
popa
scas
sbb
mov
scas
repz
loop
dec
data16
scas
inc
xchg
sbb
pop
add
into
cmp
inc
adc
popa
mov
loop
jge
ss
jne
mov
adc
cmp
or
rcll
push
in
aad
pop
ja
leave
aam
push
test
arpl
inc
add
inc
outsb
sti
xor
ds
pop
pop
imul
mov
jle
mov
stos
fstl
jbe
or
mulb
push
rcr
sub
fnsave
sarb
shl
ds
fwait
ljmp
js
out
in
inc
hlt
push
xchg
lds
pop
aas
push
mov
push
xchg
jmp
mov
aad
and
lret
cmpsb
push
insb
pop
and
faddl
idivb
push
dec
out
add
add
cmp
cmp
ja
enter
mov
cmp
xchg
jmp
test
nop
cmpsb
pusha
sbb
mov
push
cmpsl
aam
fcmovnbe
mov
es
jne
mov
add
ljmp
add
sub
popf
mov
push
or
pop
jp
lods
dec
insb
jne
mov
mov
adc
ja
mov
aam
lock
cmc
jae
rcr
stos
xchg
add
jnp
cmpsl
into
out
rclb
dec
mov
das
into
xlat
push
mov
fwait
test
xchg
xchg
cli
jo,pn
into
popf
push
mov
adc
dec
sti
imul
jg
xor
push
pop
fnstcw
add
fwait
and
pcmpeqw
mov
xlat
pop
lods
push
jno
add
sahf
mov
and
int
adc
sahf
adc
dec
arpl
ret
aas
andb
adc
inc
shlb
test
or
popa
adc
mov
lret
scas
pusha
inc
loopne
add
fcmovnu
lods
notb
iret
or
cmpsb
jecxz
jge
add
adc
mov
push
inc
lea
pop
cmp
jno
cmp
aas
jmp
lods
js
pop
or
es
xor
mov
push
push
fwait
imul
sub
repnz
add
xor
xor
jnp
iret
lret
cmp
adc
cmp
xor
loope
jmp
lcall
fmul
cs
icebp
xchg
cmp
add
mov
or
neg
ja
sub
iret
fs
xor
jno
or
int
add
lahf
imul
dec
aaa
adc
push
jmp
fsubrs
jmp
lock
xchg
enter
ja
add
jae
notl
int
jb
inc
mov
jge
loope
and
scas
fcmovne
cmp
loope
out
pushf
mov
jge
xchg
push
jno
adc
out
xchg
out
inc
cmp
movsb
dec
cwtl
jno
test
jmp
push
xor
xor
imul
sub
out
or
mov
dec
scas
mov
cmp
jb
and
dec
das
or
fbstp
mov
dec
test
imul
es
out
mov
and
jmp
mov
outsb
dec
mov
lea
jbe
pop
inc
and
xor
call
fidivrs
adc
dec
xchg
xorl
cmp
xchg
aad
or
mov
je
pop
mov
mov
dec
shr
inc
dec
mov
imul
push
mov
insb
mov
or
sub
imul
rclb
cmp
popf
xorb
mov
mov
pop
push
test
and
lock
enter
and
and
shlb
leave
pop
shl
inc
ds
sbb
ds
stos
pop
sub
mov
arpl
and
jno
xchg
dec
add
subl
and
lea
in
xor
dec
iret
cwtl
push
loopne
xchg
fucom
sbb
jbe
add
aam
dec
or
adc
push
movsb
dec
and
jae
and
jge
out
xor
and
push
xor
sub
dec
daa
fidivs
loop
sub
xchg
sahf
int3
dec
clc
inc
fdivl
fwait
out
mov
sub
lds
xor
inc
bound
mov
imulb
sbbb
sbb
mov
sbb
inc
negl
mov
lods
inc
cld
push
xchg
cmp
popa
jp
jge
xlat
jl
in
loopne
pop
pop
add
mov
or
push
pop
scas
mov
jecxz
dec
testl
adc
insl
stos
cmpsb
insb
ds
mov
pushf
mov
mov
aad
pusha
cmp
adc
int
subb
push
dec
pop
xchg
inc
call
mov
vmovq
sub
mov
adc
iret
outsl
pop
pop
hlt
adc
shrb
out
cltd
ljmp
hlt
lret
test
scas
xchg
lds
fcmovnb
popf
addr16
pushf
jns
jae
push
inc
mov
inc
ja
movsl
mov
xor
or
xchg
dec
loope
mov
dec
out
shrb
call
push
and
test
cmp
push
idivl
pop
lods
test
fisttpl
cli
shrb
pop
movsb
ds
paddq
pusha
decl
mov
sbb
mov
dec
movsb
dec
jle
xor
outsl
cmpsb
mov
test
aaa
mov
xor
aad
xor
int3
sti
and
mov
and
fwait
sbb
sbb
imul
jmp
dec
xchg
mov
leave
dec
cmpsb
mov
jmp
fwait
ret
mov
sub
movsl
lods
or
inc
sbbb
inc
imul
jecxz
out
xor
outsb
sub
cli
inc
sbb
les
loop
movsb
push
dec
sar
scas
push
loope
lods
jno
or
icebp
lcall
xchg
call
es
movaps
repnz
mov
inc
out
mov
mov
mov
mov
cmp
xchg
lret
scas
jl
mov
mov
imul
add
lahf
jne,pt
jp
ljmp
and
xchg
rcr
and
movsb
repnz
daa
loope
cmp
sarb
sub
aad
stos
inc
in
sub
and
sbb
mov
jle
add
lods
shll
test
stos
dec
xor
cmovae
mov
adc
cmp
xchg
dec
xchg
push
sub
cmp
lds
les
mov
sti
jge
dec
jl
or
pop
xchg
int3
xor
subb
jg
adc
push
jno
inc
nop
push
xchg
lea
mov
pop
call
add
nop
imul
adc
sbb
cld
pop
cmpsl
aas
xlat
sub
das
xchg
mov
jns
sahf
xchg
jge
push
push
popf
mov
pop
mov
pushf
and
pop
repz
iret
leave
in
rorb
ror
add
sbb
mov
cmpsb
pop
mov
adc
in
jne
rorb
xchg
leave
mov
sub
jbe
shll
xlat
mov
lcall
pop
stc
ret
and
jg
ret
popa
or
pop
mov
dec
push
or
pop
mov
inc
dec
popa
setae
xor
jno
cmc
jg
adcb
bound
ss
pop
loop
pop
test
mov
mov
inc
cwtl
and
fnsave
adc
out
cmp
loop
sbb
or
je
and
or
pop
lock
inc
mov
jne
mov
jns
je
fnsave
fs
and
xchg
dec
inc
aad
mov
xchg
das
mov
popf
dec
imulb
sti
xchg
pop
cmpsl
pop
xor
sahf
and
repnz
into
pop
insb
out
data16
xor
es
js
mov
cmp
or
lea
lcall
cmc
aaa
repnz
cmp
lds
int3
push
dec
lea
outsl
push
call
ret
adc
dec
inc
cltd
pusha
pop
sub
jmp
movsb
xchg
inc
cmp
mov
jno
loopne
and
pop
and
jmp
or
add
movsb
gs
insl
xor
pushf
push
add
add
sbbl
sbb
or
xchg
enter
pop
mov
leave
jns
jae
xchg
mov
xor
nop
or
cld
ja
ret
addb
sub
fwait
ja
inc
gs
add
mov
adc
push
and
jne
lods
push
lahf
stos
scas
mov
adc
or
dec
sarl
or
test
sbb
shrl
mov
xchg
push
lods
out
add
inc
cmc
mov
cmpb
lcall
mov
clc
or
cmpsb
cmp
repnz
xor
push
push
pop
and
les
sub
jb
fmuls
or
insb
dec
adcb
test
mov
decb
inc
mov
adc
dec
adcl
les
push
pusha
push
ss
adc
mov
dec
fucomp
xor
lret
ds
adc
mov
push
lock
mov
mov
rclb
fldcw
mov
inc
into
mov
addr16
add
dec
mov
shl
sbb
jmp
add
lods
clc
push
es
and
pop
aam
dec
aaa
pop
fnsave
push
mov
add
aaa
int
push
test
shrl
movb
add
xor
sbb
inc
mov
mov
mov
dec
shll
sbb
ss
jmp
addr16
inc
sub
aad
enter
fwait
ljmp
push
rcr
addr16
pop
mov
cltd
xor
popa
lahf
sbb
fdivs
xchg
push
mov
iret
leave
add
and
stos
ror
ret
hlt
mov
addr16
lock
movsl
inc
test
push
popa
add
fisttpll
stc
repnz
lcall
mov
push
adc
cmc
fs
xchg
inc
pop
fistpll
std
xor
outsb
ja
sbb
sbb
xchg
int
ds
pop
xor
loope
ljmp
dec
pop
cltd
adc
jne
push
or
mov
mov
push
lcall
shl
fcoml
sbb
clc
loop
roll
pop
jmp
imul
popf
fimuls
in
repnz
xor
inc
arpl
int
inc
in
mov
jp
push
pushf
out
push
fsubrs
cmp
in
nop
inc
imul
sbb
dec
jecxz
into
ss
sarb
xchg
enter
mov
je
loop
mov
arpl
and
add
pop
int3
xchg
inc
add
imul
jge
jecxz
adc
sar
mov
xor
mov
and
jb
jg
enter
sbbl
add
dec
shll
sbb
sti
push
adc
insb
xchg
roll
jno
mov
push
fucomi
dec
rolb
sub
nop
das
xchg
or
pop
pop
mov
leave
push
js
pop
xchg
dec
mov
mov
outsl
or
subb
fistpll
fwait
psadbw
in
adc
loope
mov
lock
cmpsl
pushfw
nop
sbb
rol
call
xor
or
add
or
jne
lcall
aam
mov
movsb
fdivp
jns
jne
and
popa
dec
mov
addb
push
sbb
cmpsb
scas
ret
xor
sub
ret
xchg
pop
mov
fsubrs
pusha
mov
sbb
sub
push
inc
push
or
call
lea
adc
sbbl
adc
xchg
out
pop
xor
ljmp
xor
cmpsl
outsl
rcrl
repnz
sub
add
setge
sub
jnp
xchg
filds
dec
test
push
out
insl
add
mov
or
insl
push
jge
aad
push
stc
inc
js
push
je
mov
fwait
test
mov
xchg
push
sub
loopne
leave
out
shl
and
jecxz
dec
xor
pushf
dec
pop
xchg
push
inc
add
enter
imul
pop
or
sub
loope
hlt
xor
addr16
fsubs
loopne
bound
dec
dec
mov
or
scas
out
jp
mov
addr16
fnstsw
push
popa
xchg
out
xor
cmpsb
pop
and
out
mov
movsb
or
xchg
lea
xchg
popf
ds
jbe
movsb
lret
jg
aad
push
mov
test
pushf
shlb
push
push
jbe
adc
dec
in
test
fnsave
outsb
sbb
iret
mov
imul
mov
pushf
int3
aaa
out
fimull
and
lods
mov
fsubrs
dec
adc
pop
cmp
dec
mov
cmp
icebp
in
mov
add
and
popa
rol
enter
sbb
ret
outsl
sub
cld
pop
and
jmp
testb
sub
inc
sbb
lods
sbb
push
int3
ja
pop
gs
ds
loopne
cs
in
mov
mov
jae
dec
pushf
faddl
push
scas
hlt
mov
sub
push
popa
loopne
in
repz
mov
cmp
in
xlat
xor
fsubrl
xchg
sub
je
pop
and
in
mov
xchg
lods
xchg
subb
xchg
sti
mov
cld
dec
mov
adc
dec
sahf
mov
daa
insl
mov
pop
mov
mov
fwait
into
mov
pusha
imul
fs
fbld
and
push
push
insb
mov
mov
inc
psubusw
push
data16
inc
sub
xor
dec
or
cmp
xchg
aam
out
mov
inc
cmp
mov
pop
mov
enter
pmullw
xchg
xor
mov
outsl
es
adc
outsl
or
jbe
repz
adc
std
sub
bound
add
xchg
fwait
or
and
int
shr
ror
movsb
pushl
movsl
lret
test
jbe
repz
mov
imul
je
cmpsb
jo
mov
inc
test
loop
in
loop
xchg
outsl
xchg
lods
js
or
sub
xchg
sub
lret
jno
outsl
jge
scas
pop
inc
cmp
hlt
mov
clc
mov
sub
push
insb
mov
and
es
adc
xchg
xchg
dec
mov
lea
mov
mov
inc
inc
jb
or
out
and
das
mov
or
push
adc
cmp
ja
loop
cmpsb
and
arpl
out
jno
pop
ja
jg
jne
jg
adc
test
ret
lods
cmp
add
jbe
jae
mov
inc
jge
testb
cmpsb
xor
xchg
jl
sbb
popa
loope
inc
or
or
xchg
jmp
lock
mov
dec
lret
lds
iret
inc
mov
and
jo
in
mov
mov
mov
daa
push
repz
rcrb
imul
dec
and
push
push
push
jmp
pop
or
jmp
pop
sub
sub
stc
sbb
mov
sub
mov
rep
shll
cmp
jno
pusha
cmp
incl
cltd
mov
dec
dec
dec
mov
jmp
pushf
test
cmp
cld
sub
test
and
mov
add
mov
repnz
or
and
lcall
addb
imul
mov
xchg
cmp
mov
testl
cmp
pusha
push
clc
dec
xchg
mov
or
imul
daa
pop
push
movsl
pop
into
iret
add
dec
repnz
lea
or
adc
xor
insl
fucomip
inc
sbb
mov
sub
test
outsb
adc
inc
mov
das
and
movsl
in
or
negl
test
roll
xor
or
pop
inc
flds
rcl
add
jnp
repz
aas
adc
add
scas
pop
mov
pop
lret
test
mov
xor
out
nop
fcomip
add
xchg
push
push
mov
pop
fwait
sti
push
jecxz
sub
jae
xchg
push
int3
and
sbb
or
add
pop
push
out
lcall
cs
add
ret
sub
jb
add
xchg
push
mov
andl
sbb
cmpb
push
cli
mov
mov
mov
daa
push
mov
xchg
icebp
xchg
add
int
xchg
push
mov
jno
sbb
fnstenv
push
aas
cld
pop
mov
fs
int3
adc
out
mov
fisubrs
rcl
jmp
add
xchg
icebp
test
jbe
mov
and
dec
jbe
aaa
call
sub
es
enter
inc
mov
pop
fucomp
push
xchg
pushf
adc
or
sbb
aas
add
shr
mov
push
je
jae
jb
jg
gs
outsb
das
jo
lea
pop
sub
or
fdivrs
or
adc
loopne
jns
iret
add
xor
imul
shrl
jne
fistps
sub
sub
test
mov
pop
jnp
add
jp
mov
fstpt
stc
stc
dec
jecxz
popa
and
mov
mov
lret
mov
mov
dec
push
fdivs
movsb
hlt
loop
ds
mov
pop
pop
cmp
mov
lods
flds
xchg
fsubl
movsb
test
sub
fsubrl
icebp
xor
loope
dec
call
xor
cmp
test
and
xor
das
xor
lcall
or
rcrb
xor
mov
xchg
jge
adc
mov
mov
and
pop
mov
fst
test
nop
cmp
lock
pop
cmp
sub
dec
cmpsl
rol
loopne
push
push
pop
out
inc
add
adc
jl
fdecstp
jl
xchg
jecxz
sub
daa
imul
jo
mov
sub
add
fimull
mov
cmpsb
xchg
mov
mov
jno
cwtl
rcrl
mov
and
inc
cmp
hlt
mov
stc
icebp
cltd
dec
jge
add
dec
push
xor
inc
push
negl
jno
xor
in
je
in
push
jbe
adc
stos
out
shrb
jns
push
inc
pop
mov
hlt
ljmp
sub
je
fwait
cli
xor
xchg
adc
ret
sub
out
adc
mov
ficoml
and
cmp
insl
int
sti
push
hlt
test
add
lret
mov
ret
daa
push
mov
loopne
lds
aaa
push
add
add
fldenv
repz
inc
cmp
ret
or
gs
dec
or
fistpll
pushf
in
mov
rcrb
lahf
rcll
cmp
lahf
lods
jbe
mov
pop
add
xor
adc
movsl
ret
ret
and
push
loop
sahf
xchg
ja
nop
mov
xor
add
xchg
pop
push
push
mov
lahf
stos
sbb
lahf
sarl
cmp
ljmp
inc
lods
jge
shrb
enter
cmp
inc
fstl
pop
push
test
pop
rol
push
lock
pop
cwtl
dec
xchg
mov
rcll
call
or
aad
mov
mov
stc
rol
aas
outsb
xchg
cli
cld
xchg
inc
gs
dec
mov
daa
out
fadds
jg
xor
repnz
add
cmc
push
jg
in
mov
mov
cs
iret
adc
push
dec
dec
sahf
jl
mov
add
ljmp
and
pushf
push
adc
mov
mov
pop
add
jecxz
movl
sarb
jo
in
ljmp
dec
dec
fldenv
xor
lock
mov
sub
inc
pop
xchg
push
lods
cmp
lods
into
mov
fninit
or
xchg
adc
sbb
fadds
loope
lret
clc
xor
jle
lret
lret
stc
movsb
enter
cmp
add
cmpsl
ja
mov
shr
lahf
icebp
cmpsl
mov
sbb
stos
cmp
xchg
pop
mov
push
xor
out
lods
xchg
mov
xor
and
test
int3
fwait
mov
ficoml
add
rolb
xor
xor
xchg
cmpsl
and
xor
pop
cmpsb
inc
aas
dec
push
sti
dec
mov
cmp
rcrl
mov
or
jge
pop
adcb
xchg
into
out
movsl
ret
rcrl
je
mov
and
out
stos
pop
mov
hlt
pop
fistl
inc
mov
outsl
loopne
rolb
jge
lock
movsb
insb
aaa
fmull
lret
sub
add
push
insl
dec
push
xchg
cld
or
mov
or
add
pusha
movsb
pop
mov
sub
jbe
xchg
addr16
stos
add
test
add
fnstenv
ret
inc
jb
stc
pop
mov
fdivl
jp
loope
mov
shll
jl
ret
imul
sub
add
lcall
jg
inc
dec
sbb
sbb
inc
adc
movsl
add
inc
push
sbb
xchg
test
dec
pop
cmp
dec
stos
mov
cli
fcomi
and
jb
mov
sub
push
push
mov
imul
out
adc
pop
dec
popf
inc
mov
ficoml
ja
test
xor
mov
push
xchg
sub
adc
or
loopne
daa
and
and
add
dec
jb
test
out
popa
ds
mov
insb
jge
pop
jnp
imul
cmpsb
pop
push
test
inc
popf
outsb
enter
decb
lea
out
mov
popa
rorb
cld
jnp
adc
inc
in
mov
add
mov
mov
dec
mov
pop
xchg
xor
sti
lret
xchg
in
xchg
adc
pop
lcall
movsb
icebp
jge
in
xchg
sub
sbb
xor
sbb
xor
clc
mov
sbb
xchg
popa
push
mov
cmp
and
in
inc
faddp
xchg
jl
xor
and
adc
or
jne
into
cli
subl
mov
movsl
mov
pmaddwd
ret
paddw
xchg
jb
fwait
mov
rorb
dec
sub
in
shll
cmp
mov
pop
and
xchg
mov
fistpl
inc
aad
xchg
mov
in
pushf
pusha
idivl
es
xchg
lret
jp
out
in
hlt
clc
pop
push
aam
sbb
mov
mov
push
lea
not
iret
and
jecxz
scas
in
aam
hlt
lcall
popa
cmc
sub
lods
sub
imul
cwtl
lret
aad
bound
jmp
sbb
push
push
jle
xor
es
dec
sti
mov
and
inc
testb
or
mov
lcall
test
inc
cmp
popa
xor
xor
or
scas
in
xor
ds
pop
pushf
xchg
rcrl
cltd
in
loopne
jle
es
loop
push
aam
or
sarl
push
jge
jp
stos
adc
loop
mov
sub
add
cmp
ret
mov
adc
idivb
jo
imulb
in
xor
bound
add
cmp
pop
mov
sahf
insb
mov
out
inc
mov
ja
arpl
xchg
dec
jno
mov
pushf
sub
adc
inc
lea
xor
add
cmp
shlb
aad
jno
xchg
ja
data16
popf
inc
lret
jne
loope
mov
cs
or
popf
sahf
mov
mov
dec
insb
push
pop
std
dec
xchg
ja
pop
xor
ret
jb
add
push
xchg
xor
pop
fadd
std
dec
and
or
and
arpl
mov
and
add
mov
jno
add
push
mov
push
jb
and
sub
jmp
outsb
xorl
mov
jmp
cmp
pop
js
in
ljmp
icebp
sub
push
scas
es
fsubl
sbb
cli
in
jae
dec
pop
lds
dec
popa
shlb
add
and
xchg
xchg
cld
divps
mov
scas
xor
xor
movl
repz
je
notl
push
sub
or
sbb
xchg
jne
pop
push
or
sub
in
sbb
mov
in
xchg
aas
repnz
std
push
ljmp
sbb
pushf
std
cmp
xchg
clc
sub
jg
add
rcl
int
arpl
jbe
lock
dec
cwtl
mov
outsb
xchg
sbb
jecxz
movsb
add
lods
ja
repnz
ja
stos
adc
xchg
and
mov
pushf
push
push
push
pushf
aad
pusha
mov
add
or
enter
adc
sbb
insb
sbb
clc
daa
cli
arpl
fwait
js
movsb
xchg
repz
stc
jle
mov
add
pop
sbb
cmp
insl
bound
add
jge
xchg
call
xlat
add
dec
mov
mov
stos
dec
loopne
in
mov
push
lea
lahf
add
int3
xor
arpl
test
loope
je
or
and
outsb
es
fld
xor
push
pop
lods
mov
xor
in
jae
mov
scas
outsb
fdiv
mov
pop
cmp
sub
mov
adc
pop
and
insl
mov
and
lds
adc
loop
xor
fwait
loope
jge
into
js
aas
or
cmp
dec
pop
mov
shl
mov
in
out
cmp
add
int3
pop
aaa
push
mov
enter
shll
popf
pop
insl
in
enter
mov
pop
fucom
mov
cmc
mov
add
inc
cmpsl
push
xor
pusha
mov
and
outsb
lods
movsb
push
insl
jo
insl
and
cmp
mov
popf
mov
test
andl
push
mov
sbb
pop
xchg
fiadds
add
xchg
outsb
nop
cmpsb
int
cmpsl
hlt
jmp
add
mov
push
push
fs
push
xor
fildl
out
adc
addr16
fidivl
clc
jae
inc
and
xor
outsl
inc
add
aam
and
ss
int3
mov
sub
gs
mov
scas
mov
mov
sub
rsm
or
add
mov
pop
imul
addr16
ds
mov
dec
sub
out
pop
xor
mov
pop
xor
sub
in
jge
into
xor
inc
xor
lret
cmpsb
frstor
scas
cli
ror
pop
jg
push
pop
enter
adcl
in
cmp
aam
mov
cmp
cld
mov
jb
ds
aad
das
cmp
inc
dec
jb
jmp
sarl
mov
mov
xor
cmp
gs
out
sbb
and
negb
cmp
out
sbb
notb
icebp
and
subb
mov
sbb
jno
jb
in
and
call
mov
out
jb
and
leave
sbb
in
mov
xchg
sbb
and
push
cmpsb
repnz
test
mov
dec
pusha
dec
outsl
lret
push
jmp
dec
loopne
or
ljmp
out
mov
shrl
cwtl
roll
dec
in
mov
xchg
cmpsl
jp
xchg
cli
stos
add
jg
bound
mov
jecxz
add
jl
js
xchg
mov
xor
inc
jae
imul
fadds
leave
or
in
or
or
popa
repz
in
pop
loopne
mov
sbbl
dec
push
dec
fcmovnb
sbbb
and
hlt
jo
movsb
aad
inc
pop
dec
lret
out
push
pop
nop
in
xchg
or
popa
popf
push
xor
or
mov
xchg
mov
in
mov
fstps
lret
sub
in
adcb
xor
adc
aas
mov
jo
cli
mov
push
outsl
sub
loope
ret
mov
lock
xor
or
mov
inc
cmp
in
out
ja
lds
andb
add
sbbl
fmull
and
mov
cmp
out
repnz
mov
cmp
mov
fstp
sarl
je
pushf
movsl
cmp
sbb
mov
mov
dec
push
ja
ja
scas
addl
jge
sahf
mov
jecxz
lret
loop
or
pop
jns
loop
inc
inc
les
addr16
addr16
fadd
mov
cmp
xchg
jle
clc
push
loop
jmp
out
dec
daa
mov
pop
xchg
jns
fmuls
and
cmp
add
jno
jo
sbb
dec
push
jmp
mov
gs
jmp
cmc
imul
gs
addl
fsubl
out
and
fildll
out
add
stos
adc
xchg
lcall
adc
mov
mov
gs
cmp
mov
inc
ret
ret
aaa
xchg
test
out
add
adc
icebp
scas
dec
fcomp
inc
sub
mov
aaa
inc
xchg
ret
mov
lock
inc
and
pop
xor
inc
push
pop
in
in
test
sub
in
scas
lcall
ret
aas
cld
call
into
jns
bnd
mov
je
fldl
cmpsl
loop
or
dec
cmp
xchg
scas
dec
sub
cmp
mov
xchg
rorl
leave
sbb
in
add
subb
cmp
mov
stos
adc
in
out
jbe
cmp
mov
mov
pop
lods
es
push
aas
or
mov
adc
rolb
loopne
movsb
mov
out
in
cmp
sbb
push
or
mov
cmp
pop
xor
jmp
jp
mov
repnz
inc
mov
jnp
mov
jp
cmc
jb
pop
mov
test
adc
xchg
and
inc
addr16
hlt
sbb
sbb
bound
add
mull
cmp
movsl
jne
insl
cld
loope
inc
incb
xlat
lcall
jo
dec
sub
jbe
rcrl
pop
sbb
dec
sbb
pop
test
in
xchg
ret
inc
in
pop
js
aam
loopne
iret
xchg
inc
dec
adc
pop
cmp
in
xor
inc
mov
push
mov
ss
jno
pop
cmpsb
jns
ljmp
imul
roll
mov
out
cli
aaa
jp
xor
mov
and
xor
mov
push
adc
dec
pop
adc
inc
pop
or
xchg
mov
mov
xor
jno
stos
add
scas
inc
lcall
fsubrl
add
dec
imul
imul
mov
cmpsb
inc
mov
outsb
push
xchg
loopne
mov
inc
out
sbb
mov
shlb
sub
fs
cmp
adc
in
xchg
movsl
lock
mov
imul
call
cltd
lret
inc
add
movsb
pop
jo
ror
cltd
adc
dec
mov
mov
lret
data16
mov
adcl
cwtl
mov
rorl
mov
adc
cwtl
xor
or
stos
mov
mov
js
mov
cmpsl
inc
xor
or
mov
adc
sbb
mov
push
sysenter
xchg
fistl
test
jnp
ffree
filds
mov
push
xlat
add
scas
xor
xor
fcom
xchg
mov
lcall
push
adc
push
into
loopne
test
in
xor
xor
or
mov
sub
add
push
pop
jecxz
xor
xchg
add
jge
dec
lds
ds
mov
int3
jnp
push
dec
sahf
sahf
and
mov
or
ds
jecxz
aam
lods
cli
push
push
inc
mov
shlb
hlt
aas
or
and
aad
dec
bts
aas
test
movsb
mov
outsl
mov
lea
fcoml
xor
scas
inc
mov
mov
mov
inc
sbb
in
push
dec
test
jecxz
hlt
daa
xchg
rcrl
mov
lret
imul
bound
sbb
je
sti
mov
cmp
test
pop
out
test
mov
cltd
bnd
sub
adcb
sbb
cli
mov
movsl
inc
push
sub
or
pop
fwait
inc
sbb
int
sbb
mov
ss
push
xchg
jecxz
outsl
fistl
in
arpl
mov
cmpsl
ss
scas
sub
movsb
push
fsubrs
mov
hlt
popa
sbb
push
push
out
ret
sub
adc
daa
and
sub
nop
dec
adc
test
insb
xchg
pop
sti
pop
aaa
in
rcr
sub
inc
xchg
rcl
lret
mov
or
lahf
sub
decb
jnp
outsb
faddp
mov
pop
test
xlat
mov
xor
pop
inc
jnp
pop
sub
sbb
jb
xchg
aad
sti
pop
es
clc
popa
jne
les
xor
sub
pop
lret
mov
push
out
add
jbe
lret
dec
push
iret
int3
or
out
and
fcompp
aaa
into
mov
repz
scas
inc
repnz
imul
pop
test
enter
out
stc
test
push
adc
mov
popf
lcall
lahf
pop
push
jne
sbb
shlb
sbb
cltd
inc
dec
outsb
mov
call
pop
push
nop
dec
bound
sub
and
jmp
out
loopne
cmp
mov
sti
ret
push
leave
scas
mov
enter
je
loop
inc
cmp
lea
clc
mov
in
shll
push
dec
inc
or
test
cmpsb
lret
push
mov
add
sub
mov
dec
sbb
stos
xor
enter
and
cmp
push
enter
mov
inc
mov
mov
xor
rorl
in
mov
test
jo
movb
jo
xchg
xchg
insb
out
or
xchg
test
outsl
cli
leave
movsb
xor
xorl
adc
mov
imul
push
stos
faddp
adc
jo
std
dec
fwait
or
ja
outsl
add
test
add
sbb
mov
dec
xchg
xor
scas
mov
ja
cmp
nop
dec
lea
add
mov
pop
push
sub
loope
push
mov
cmp
mov
xchg
xchg
call
int3
shlb
add
mov
inc
addl
popf
fdivl
and
enter
push
cwtl
fldenv
sub
jle
and
mov
out
stc
scas
pop
dec
fcmove
and
cld
ss
in
xor
inc
enter
xor
dec
lret
pop
xor
push
push
push
add
or
push
jge
lds
and
jb
jo
pop
adc
push
and
add
gs
enter
jp
shlb
cmc
sub
xchg
dec
das
jb
lods
pop
outsl
cltd
push
ret
jg
lea
jae
int3
cwtl
fldcw
fisttpl
nop
leave
inc
push
mov
mov
je
mov
sbb
and
mov
cltd
rol
int3
cwtl
inc
sbb
jle
push
inc
aaa
push
imul
shrb
addr16
mov
adc
mov
sbbl
jnp
inc
push
mov
lcall
inc
jns
mov
xor
and
js
jp,pt
pop
and
add
adc
pop
jno
imul
sbb
daa
xchg
aam
push
push
pushf
or
xchg
sbb
cltd
cmpsl
movsb
inc
jo
in
cmp
out
and
mov
or
xorb
in
add
push
pop
test
or
adc
cmp
std
or
cmpb
jle
fstps
inc
sub
call
shlb
inc
lcall
loopne
xchg
sub
ss
add
in
sub
sti
out
adc
movsb
pusha
inc
add
add
jb
dec
pusha
and
jo
cld
xchg
popa
lods
imul
inc
cmpsb
mov
loop
lret
jb
lret
jle
sub
xchg
push
dec
in
test
sbb
fldl
and
movb
dec
andb
jno
cltd
jbe,pt
test
xchg
sbb
push
andl
cmp
jp
pop
lea
sbb
pop
pop
sbb
xchg
sbb
in
pusha
mov
adc
add
int3
jl
pushf
inc
push
cs
push
popl
mov
lods
xchg
sub
ljmp
stos
test
xchg
inc
iret
inc
sti
movl
jge
ss
fcmove
bound
dec
lock
or
jb
sub
pop
mul
out
xchg
cmc
mov
mov
mov
test
lahf
fidivs
fimull
xchg
or
push
add
mov
mov
dec
lret
mov
inc
mov
cmp
mov
cmc
scas
hlt
add
add
test
sahf
jno
jne
add
into
push
mov
int3
stc
int
test
mov
dec
movsb
int
pop
xor
ja
ljmp
cwtl
addr16
shlb
xor
fstpt
adc
jmp
pushf
cmp
fs
jne
add
das
sub
mov
lcall
pop
iret
dec
cld
sbb
add
xchg
mov
ret
sbb
mov
xchg
aam
leave
jecxz
xor
sub
pop
push
lret
push
les
imul
mov
test
lret
ds
push
dec
or
add
jmp
je
sahf
lret
std
and
mov
sahf
pop
loop
mov
cmp
in
lret
mov
into
or
cmp
cmc
cs
movsb
jno
mov
mov
sti
cmpl
ljmp
xor
mov
sbbb
sbb
das
cld
adc
in
add
shl
popa
aaa
adc
arpl
add
pusha
movsl
in
or
mov
movsb
js
inc
imul
data16
sub
pop
bound
lea
jmp
dec
mov
inc
dec
xlat
call
adc
mov
or
jecxz
fsubr
mov
and
fimuls
imul
jnp
out
popa
in
mov
addb
sub
adc
test
xchg
xlat
inc
mull
xchg
pop
fadds
out
mov
cld
mov
or
repz
pop
aaa
or
add
cli
xchg
pop
in
mov
ljmp
lret
inc
fwait
js
pusha
les
jge
push
jae
rolb
inc
into
lods
fcomps
mov
dec
sbb
dec
mov
mov
pop
xchg
hlt
and
stos
mov
jno
fs
popf
push
fdivrl
idivb
enter
xor
jge
jmp
dec
test
stc
push
jno
sub
frstor
xchg
mov
cmp
call
faddl
dec
inc
repnz
adc
sbb
das
and
out
inc
repnz
cli
and
sub
lods
loopne
add
pop
jmp
movsb
loopne
scas
sub
popa
mov
popa
jl
cmp
dec
test
xor
mov
mov
sti
cmp
xor
popa
sbbl
pusha
xchg
push
adc
add
fwait
aaa
sub
mov
jp
or
jo
push
iret
aas
call
lcall
gs
lret
pop
dec
mov
mov
mov
pop
loopne
push
and
xchg
arpl
or
pusha
mov
xchg
jb
ss
mov
in
fs
popf
cli
rorb
jp
stos
dec
loop
aam
jmp
sub
mov
cwtl
movsl
xor
mov
imul
cltd
sbb
cs
jmp
out
mov
pop
xchg
fiaddl
mov
stos
dec
cli
pop
adc
mov
inc
rorl
and
stos
std
outsl
lock
mov
js
lods
test
inc
mov
xlat
ret
sbb
xor
mov
inc
and
push
inc
adc
aaa
add
addr16
mov
lock
push
in
adc
aad
iret
dec
bound
pop
cld
jne
fiaddl
stos
and
sti
or
sbb
cmpsb
and
add
cwtl
repz
outsb
adc
outsb
outsl
cli
arpl
jge
xor
dec
nop
gs
mov
add
jg
pusha
imul
in
xchg
inc
mov
and
test
lcall
xchg
and
add
cmp
insb
adc
mov
cmp
push
sbb
sbb
orb
jo
xlat
shrb
repnz
pop
mov
adc
pop
adc
xor
loope
inc
lock
leave
mov
inc
mov
fnstenv
push
pop
je
mov
dec
push
dec
out
scas
jl
mov
lods
cmp
inc
adc
loopne
mov
adc
or
test
xchg
jb
push
cmp
imul
or
or
mov
fwait
idivl
and
jo
sub
or
mov
inc
jnp
inc
add
test
and
pop
mov
mov
outsl
jmp
cmp
sbb
ss
push
adcb
cmp
cmp
int
jl
sub
stos
adc
test
cli
jge
push
rcl
popa
sbb
rcll
hlt
popf
push
fnstsw
mov
into
repnz
aas
in
adc
cmp
jmp
pop
mov
inc
push
xor
push
arpl
lret
sbb
push
mov
mov
or
jns
lret
lea
inc
test
fistl
aad
jmp
repz
and
adc
sbb
mov
jnp
mov
rcrl
sti
pop
dec
fwait
repnz
mov
repz
jae
mov
xchg
hlt
jecxz
mov
sub
pop
subb
pop
test
ja
jecxz
sbb
cmp
xchg
jg
add
cltd
jns
enter
cli
call
adc
mov
sub
cwtl
xchg
pusha
mov
dec
xlat
mov
andb
cmc
mov
imul
mov
call
fs
ret
jbe
std
pop
sub
call
es
mov
in
les
sahf
lahf
cli
cmpsl
jb
pop
icebp
xor
push
cmp
mov
xchg
in
lahf
dec
cltd
pop
inc
loope
mov
mov
and
rolb
pop
sarl
cmpsl
in
fwait
or
xchg
cmc
cs
rcrl
call
cmp
daa
stos
cli
cld
mov
pop
stos
inc
popf
jle
xor
leave
mov
js
pop
aam
roll
outsb
test
sbb
dec
mov
das
into
inc
inc
add
mov
subl
sub
popa
lods
mov
push
adc
mov
imul
mov
out
mov
mov
sub
stc
inc
mov
sub
cwtl
inc
stos
push
or
stc
pop
fs
cmpl
dec
lret
mov
stc
scas
mov
add
cli
sub
pop
jo
jae
mov
cmp
outsb
icebp
sbb
adc
stc
cld
cmp
leave
fwait
add
outsl
aad
test
mov
ds
or
jno
mov
sub
dec
ret
push
les
aad
or
and
outsb
sub
in
outsl
xchg
in
add
and
pop
rorb
insb
push
call
pop
out
mov
add
rcrb
fwait
inc
lahf
xchg
xor
sbb
add
sbb
je
pop
mov
mov
mov
inc
movsw
adc
mov
sbb
mov
push
cli
pop
aad
scas
pop
add
add
push
inc
cmpsb
lcall
and
mov
mov
iret
ret
push
push
shll
sbb
jae
or
or
stos
fstpl
call
jle
sub
sti
push
add
sbb
ja
rorl
jne
xchg
dec
cmp
add
adc
sub
ret
test
imul
lahf
shll
jecxz
and
mov
in
js
push
cmp
insl
xchg
lahf
xchg
xchg
mov
int
xor
push
sbb
shl
xor
movsl
push
sahf
aad
subb
jo
loop
clc
lret
mov
mov
sahf
mov
mov
push
cmc
int
jae
nop
sarb
sub
or
cmp
pop
jl
dec
or
hlt
scas
notb
mov
cltd
adc
bound
jle
sarl
mov
sti
pop
fcoms
cltd
fucom
iret
sub
fs
out
pop
icebp
sub
jge
push
ret
scas
cmp
jmp
ljmp
out
dec
pop
pop
fs
sub
das
mov
push
ficompl
mov
pop
ja
loop
inc
mov
fisttpll
mov
je
fidivl
pushf
loop
cmp
ja
shrl
mov
push
push
xchg
dec
dec
push
adc
gs
out
popf
or
sbb
push
or
iret
pop
fidivrs
test
cmp
mov
lds
xor
pop
out
pushf
jp
imul
jo
mov
push
mov
mov
jecxz
cmc
mov
ss
scas
xchg
loop
addl
pop
rcrb
inc
and
cld
lcall
or
xchg
inc
fwait
subb
add
push
in
push
adc
andb
iret
and
and
and
int3
pop
popa
lea
push
fcmovnb
mov
pusha
jmp
sbb
mov
xchg
stos
xchg
leave
xchg
cmp
ja
or
loope
insl
or
cs
lea
jo
inc
mov
pusha
ss
cmp
addr16
push
push
jo
or
imul
insl
jge
call
mov
inc
lea
mov
lret
popf
add
test
popf
sub
inc
mov
or
cmc
mov
cwtl
or
scas
jl
jno
stos
xlat
outsl
ja
inc
inc
and
aaa
repz
leave
pop
mov
or
or
mov
dec
bound
fsts
xor
aaa
pusha
fistps
lock
ds
iret
jecxz
add
jl
mov
push
xchg
in
icebp
sbb
das
fwait
mov
nop
lahf
jl
jbe
cmc
mov
mov
mov
mov
add
outsl
xchg
test
das
mov
dec
sbb
int
lea
sub
notb
dec
loop
lods
or
mov
es
and
adc
aaa
cmpsb
mov
out
int3
push
fldcw
dec
cld
sbb
and
out
push
add
cmp
js
les
mov
pop
popf
nop
mov
test
cmpsb
or
adc
xchg
aas
pop
jno
adc
cmp
es
mov
insb
push
cmpsb
or
lock
adc
sub
mov
shrb
cmp
ss
lods
push
jg
fiaddl
push
mov
add
sub
push
fists
mov
sbb
jo
outsb
and
or
pop
ret
cwtl
scas
test
jg
jo
mov
jb
mov
jbe
cmp
and
loope
daa
xchg
paddusw
and
pop
fldenv
mov
push
andb
repz
shll
fnsave
iret
cld
xchg
lods
mov
fstpl
outsl
xchg
xchg
mov
xchg
and
push
jbe
jge
cmp
jno
insl
cmp
ror
dec
pop
push
push
sti
xchg
mov
fistl
mov
inc
push
outsl
nop
adc
icebp
mov
nop
test
or
mov
sbb
call
sub
and
push
imul
fdivp
xchg
scas
add
jo
or
iret
sub
out
fildl
cmpsl
setl
xor
sbb
loop
xchg
adc
mov
ljmp
push
imul
iret
push
mov
inc
stos
xchg
test
dec
sbb
loop
add
rolb
sbb
push
into
xor
sahf
cld
lret
push
jmp
js
icebp
fcoms
in
loope
data16
push
add
dec
xchg
fistps
xor
xchg
loopne
leave
repnz
pop
jecxz
out
int
or
cmpsl
lcall
je
or
nop
mov
xchg
jnp
pusha
scas
dec
push
pop
lret
mov
dec
inc
push
mov
clc
mov
sub
aad
mov
lahf
scas
pop
add
sub
ror
inc
add
insl
pop
fimull
shrb
nop
test
push
dec
adc
outsb
gs
and
xor
lods
push
test
lds
fdivp
xlat
inc
mov
out
pop
pop
or
adc
mov
lcall
lods
into
stos
fnsave
sbb
enter
sub
das
fwait
cmp
push
mov
andl
stos
movsb
cmp
lock
xor
mov
pop
xchg
sub
icebp
fnstcw
loope
dec
outsl
xchg
sti
push
dec
inc
sbb
insl
je
lds
fwait
leave
sub
dec
dec
test
outsl
test
add
imul
rcrb
add
and
cs
push
mov
enter
shrl
add
dec
pop
subl
pop
cmpsl
add
test
xor
adc
and
pusha
rclb
jbe
push
nop
jne
jge
xchg
mov
xlat
jmp
jg
shl
dec
in
mov
or
fsts
and
jmp
dec
xor
push
sub
lea
jo
cld
sti
in
loopne
test
outsl
pop
cmp
xor
pop
inc
push
mov
data16
xchg
outsl
lods
mov
push
imul
pop
fsubl
jb
jne
cmp
jge
in
xchg
sbb
dec
or
push
xchg
xor
dec
fsubs
mov
dec
jge
adc
push
jo
xchg
cmpsl
or
dec
or
test
adc
pusha
je
stos
dec
sbb
ret
cmpsb
jg
aaa
mov
cmpb
inc
add
xchg
push
daa
mov
clc
push
push
sti
mov
fs
icebp
push
xchg
push
xchg
jmp
push
pop
adc
inc
scas
stos
inc
cmpsb
mov
ficompl
daa
mov
push
loop
jnp
sub
sub
jmp
ret
ljmp
sahf
jb
nop
lret
or
xor
dec
mov
pop
ljmp
iret
aad
dec
mov
sbb
cwtl
shll
jmp
push
pop
cli
rol
inc
mov
out
aas
loopne
repnz
lods
jle
sub
pop
xchg
add
stos
lret
xchg
lods
push
arpl
add
jns
push
cmc
std
icebp
xchg
aam
push
loopne
xchg
fildll
jl
pop
push
jae
cmp
mov
jbe
dec
sbb
xorb
adc
xchg
dec
test
inc
mov
leave
lret
pop
and
ljmp
adc
sbb
adc
inc
inc
xor
sub
push
sti
adc
mov
ret
xchg
add
dec
jne
mov
idiv
call
notb
jp
out
mov
mov
and
mov
inc
leave
add
push
fs
inc
es
stos
out
fcmovb
fsubrl
jnp
and
sbb
js
rclb
push
sub
sub
dec
xor
pusha
mov
sub
and
dec
stos
fs
sub
jo
popa
orl
cld
and
or
jl
push
xor
xor
xchg
jae
frstor
dec
xorl
pusha
inc
test
xchg
rclb
xchg
jg
jae
mov
fbstp
in
orl
push
mov
ret
jmp
rcrl
pop
sbb
cli
in
fabs
xor
xchg
dec
dec
xor
jb
add
push
adc
and
dec
and
pushf
mov
test
push
mov
push
enter
cmp
int
cs
imul
push
mov
and
fstps
mov
xchg
mov
out
and
jnp
roll
fnsave
xchg
nop
inc
mov
xor
xor
push
aaa
push
out
ret
mov
adc
dec
lods
sub
cltd
pushf
adc
sbb
fnstenv
inc
fstps
jl
rorb
push
ljmp
xchg
fldt
xor
nopl
xor
notl
inc
xchg
fcmove
dec
lods
test
fstps
jge
int
pop
pop
cmp
xor
fs
fstpt
inc
frstor
sti
sti
xorb
aaa
sbb
jge
js
jp
mov
jnp
out
mov
push
cmp
inc
push
enter
mov
or
sub
cli
jbe
rcrb
push
adcb
jecxz
enter
das
push
xor
les
cmp
lock
dec
stc
mov
adc
adc
fcmovu
add
push
mov
cmp
mov
push
cmpsl
push
mov
pop
shlb
cld
jecxz
test
mov
rcrb
jg
mov
outsl
push
dec
push
aam
iret
repz
cmp
fsubrl
call
loope
mov
xchg
inc
mov
ret
mov
mov
mov
mov
sub
inc
fwait
mov
out
repz
xor
jp
cmc
repz
pushf
jp
das
push
shl
mov
cmp
bound
enter
lcall
test
clc
adcb
rclb
shrb
aam
mov
mov
and
xadd
in
mov
add
ljmp
rclb
cmp
push
out
xchg
push
aas
mov
mov
fldenv
pop
mov
pop
mov
mov
sub
nop
loope
in
push
dec
mov
nop
jnp
xchg
jb
mov
inc
or
sbb
scas
cmpsb
push
scas
xor
or
adc
lock
push
loop
push
jge
fldenv
lahf
mov
imull
out
inc
sti
adc
stc
mov
aaa
fwait
xchg
in
pusha
mov
lds
mov
sti
popf
and
xor
dec
int3
mov
lods
inc
sub
mov
addr16
xchg
and
mov
xor
lock
jns
adc
and
pop
js
dec
xchg
out
adc
enter
or
mov
cmpsb
xchg
mov
xchg
subb
in
icebp
xchg
sbb
fcmovnu
mov
fstps
fstpl
jnp
xor
pop
mov
add
sub
mov
sub
dec
js
dec
insl
outsl
sbb
dec
mov
and
add
xor
mov
ljmp
inc
test
jg
shlb
icebp
mov
shr
stc
test
adc
fadds
or
ljmp
mov
test
ret
out
nop
out
or
int
cmp
sub
addr16
mov
mov
inc
aad
loope
jo
les
cwtl
sbb
lcall
mov
fisubl
adc
mov
dec
cmc
fisubs
cmp
pushf
mov
jne
push
out
pop
pop
xor
adc
xchg
rcl
shll
aaa
fisttpl
sub
mov
sbb
add
xchg
add
adc
cmp
mov
in
jns
pop
jecxz
daa
enter
mov
sbb
sub
sbb
jge
aad
loop
lcall
rcrl
and
jp
sbb
mov
jbe
lcall
icebp
fdivs
popf
cmpsb
xchg
xchg
mov
cmpsb
bound
and
or
dec
ja
mov
inc
sti
mov
inc
sbb
int
pusha
fisttps
push
arpl
adc
sub
lods
dec
aad
js
jne
fwait
jno
sub
xor
mov
imul
xor
xchg
mov
push
sub
sbb
pop
pop
jg
inc
push
adc
lock
lcall
sbbb
das
push
adc
decb
js
lcall
sbb
or
rep
mov
or
movsl
into
cmp
dec
xchg
pop
adc
dec
addr16
fs
xchg
dec
adc
sbb
decb
push
aaa
fstpt
add
ror
mov
pop
and
or
loope
and
outsl
test
arpl
stos
xor
push
push
push
xor
xor
cs
jmp
push
mov
sbbl
fs
out
pop
inc
mov
add
out
aas
ljmp
pop
pop
inc
jae
mov
adc
jbe
icebp
shl
dec
das
scas
mov
dec
mov
adc
lret
movsb
iret
fists
ljmp
clc
adc
std
mov
arpl
and
or
inc
icebp
cmp
jo
cwtl
inc
out
lds
nop
push
mov
jmp
and
lds
popf
movsb
pusha
cmp
mov
movsb
packsswb
das
or
outsl
out
jbe
sbb
idivb
aas
int
or
sbb
daa
and
add
dec
sarl
push
cwtl
fdivp
mov
sub
cmpl
out
mov
add
call
jno
xlat
sub
out
xchg
ret
fdivr
jge
dec
adc
pop
dec
pop
rcl
js
imul
or
xor
in
outsb
xor
sbb
xor
push
cld
into
imul
call
lcall
imul
or
movb
loopne
push
movsl
loopne
xor
adc
dec
xchg
out
sbb
in
jl
lea
push
push
popf
sbb
cwtl
ret
push
push
inc
pop
stos
pop
jecxz
adc
mov
mov
xchg
aas
aam
xorb
jno
lods
inc
mov
inc
cmp
push
gs
clc
imul
cmp
int3
mov
jno
pusha
std
add
in
pop
dec
sbb
mov
cs
icebp
mov
lret
movl
lods
ss
or
cmp
jbe
mov
cli
sbb
xor
jecxz
pop
push
lods
xchg
aas
insl
pushf
lret
sub
into
or
dec
lahf
sbb
push
repnz
jle
int
ds
cwtl
xchg
jae
jp
push
jmp
add
outsl
test
and
mov
mov
loope
cmp
imul
gs
xchg
jle
aaa
mov
push
add
push
xchg
add
pop
pop
rep
cmp
and
push
push
lods
movsl
mov
sahf
sarl
sub
push
dec
mov
pop
sub
movsb
insl
outsb
loopne
enter
popf
mov
clc
aad
and
and
sub
in
mov
push
and
cwtl
or
and
movsl
adcl
jmp
jae
dec
inc
insl
jno
sub
add
adc
push
in
adc
push
push
enter
inc
cwtl
and
lret
lcall
scas
ja
std
xor
push
xchg
stos
sub
and
dec
rcrb
pop
lcall
push
push
arpl
and
out
sahf
fnstsw
xchg
sbb
adc
out
sub
loope
cli
lock
out
dec
aad
adc
in
mov
xor
es
lods
mov
and
dec
stos
mov
xchg
inc
into
jae
sahf
bound
push
or
andl
sub
jbe
orb
jge
nop
jmp
mov
gs
add
outsl
ds
push
sbb
mov
inc
dec
lds
movsl
mov
lret
stos
mov
sbb
loopne
pop
push
fisttps
mov
dec
xor
aam
or
stos
xchg
and
out
xor
loopne
and
in
sbb
test
cld
nop
mov
adc
imul
inc
cs
cmp
dec
aam
sub
sbb
or
pop
push
es
xchg
out
dec
pop
push
adc
shrl
test
cmc
inc
les
jne
or
fst
add
outsb
cmp
cwtl
jmp
sahf
pop
dec
push
jp
sbb
sub
xor
or
frstor
mov
movl
adc
jl
sarb
in
pop
notl
lock
cs
xor
jne
sub
mov
sti
je
mov
out
fsubr
out
push
repnz
push
in
or
and
pop
pop
and
int3
mov
lret
cmp
incb
inc
sbb
xchg
add
xchg
sahf
sub
inc
dec
lods
sbb
jnp
cld
dec
ret
dec
xor
mov
jle
sub
scas
daa
outsl
or
xchg
and
jnp
imull
clc
int3
sbbb
test
adc
push
pop
xchg
es
sub
jg
loopne
inc
insb
sbb
idivl
insb
repz
jo
sbb
push
fldcw
pop
movsb
ficoms
adc
leave
subl
xchg
cli
sub
adc
and
pop
push
cmpsb
adc
rclb
movsb
lahf
test
cmpsb
inc
xchg
push
sub
mov
sbb
stc
xor
in
or
and
mov
ja
cmp
jb
mov
pop
in
sub
out
cmp
xchg
repnz
jmp
add
arpl
push
lahf
imul
mov
movsl
sub
pop
cli
cwtl
dec
sub
cwtl
popa
test
dec
xor
int
call
sbb
push
loop
mov
xchg
inc
xor
repz
push
popf
out
cld
lods
and
rorb
cmp
cwtl
adc
pop
imul
mov
and
mov
imul
sahf
and
insl
push
pop
jnp
jne
cwtl
fsubrl
mov
adc
in
sub
adc
sub
or
outsl
shrl
jno
jle
stc
das
push
mov
lahf
mov
iret
arpl
inc
mov
dec
xor
call
adc
fcomi
cmp
cmp
and
inc
push
xorl
pop
cld
jge
pop
jno
sti
inc
fldenv
dec
sti
inc
cmp
scas
mov
and
aad
mov
test
mov
jg
test
inc
pop
fsub
in
jae
pop
js
into
push
push
aad
insb
sub
adc
adc
dec
adc
sub
mov
add
jns
push
arpl
in
xchg
or
pop
xor
xchg
mov
mov
adc
daa
in
xor
mov
loop
ror
cli
pop
and
mov
pop
jbe
aad
xor
mov
nop
push
fadd
inc
add
mov
es
jo
test
frstor
stc
dec
lret
pop
addr16
dec
cmc
nop
push
nop
or
lea
or
fisubs
popf
xchg
jge
add
xlat
push
aad
ljmp
shr
cld
cld
and
idivb
icebp
imul
cltd
popf
mov
cmp
scas
and
pushf
jno
sbb
jecxz
jp
shll
ret
mov
dec
popf
jbe
sub
mov
andb
adc
pop
sbb
test
jle
stos
dec
mov
and
in
subb
dec
loope
cs
xchg
inc
fadd
dec
lods
outsb
clc
in
les
scas
filds
in
test
daa
shrl
mov
inc
pop
gs
daa
shr
scas
mov
or
cs
lahf
mov
adc
sar
rcl
arpl
fs
inc
into
in
subl
sbb
sub
push
pop
pop
xchg
lods
and
adc
ror
hlt
pop
ljmp
jp
sbb
mov
fwait
cmpsb
gs
pusha
cmp
outsl
loopne
out
mov
sub
cld
imul
cltd
mov
xor
and
ja
subps
push
lods
andl
mov
xchg
ficomps
imul
shr
jae
xor
inc
xchg
out
cmp
inc
cmp
aad
dec
cmp
es
sub
cwtl
dec
dec
mov
inc
jmp
ss
sub
lods
dec
mov
push
divl
jge
lret
pop
xor
lahf
dec
inc
sub
xchg
cmp
fwait
sbb
rcr
ret
dec
push
dec
test
fmull
push
ja
adc
adc
push
pop
bnd
fistps
inc
adc
mov
mov
jmp
cmp
mov
mov
pushf
imull
push
shl
test
add
popf
aaa
out
push
fistl
ret
loop
les
push
stc
out
dec
mov
pusha
add
add
daa
xchg
adcl
mov
xchg
mov
outsb
jl
sub
out
repnz
test
out
sbb
and
mov
ret
jmp
nop
aad
sbb
adc
dec
lds
jl
stos
jle
push
call
xor
pop
dec
cmp
or
movsl
sbb
mov
jno
inc
pop
mov
push
sub
pushf
and
and
cltd
cmp
out
sti
mov
xor
test
mov
lcall
ss
xchg
data16
push
xor
les
sub
adc
scas
mov
dec
int
sbb
in
loope
sahf
in
icebp
dec
std
sar
faddl
lea
sbb
in
fwait
dec
loop
enter
jne
imul
popa
test
add
pop
add
xor
mov
fisubrl
out
or
test
in
je
push
and
push
sbb
sub
sbb
out
cmp
divb
shll
repnz
icebp
popf
add
cwtl
fildll
push
das
push
das
pop
xor
fucomi
scas
movsl
jae
and
rorb
cltd
aam
sub
dec
imul
push
jmp
sub
mov
inc
xchg
push
add
dec
sti
xor
aaa
pop
aad
jo
mov
and
jo
push
popf
shl
and
jne
add
dec
test
mov
inc
outsb
jmp
out
lods
in
es
inc
ja
enter
je
sbb
roll
fsubl
jmp
std
fisttpll
gs
cmp
push
mov
aad
cld
addr16
push
lds
and
mov
xchg
mov
in
xchg
pop
xor
fcomip
pop
call
popf
cmp
lods
jb
mov
aas
push
pop
testl
inc
cmc
lods
std
je
lret
shll
repz
popa
push
inc
and
and
push
ja
sti
sti
or
and
mov
xchg
cmp
jnp
rcr
and
mov
shlb
cmpb
xor
push
add
xchg
mov
mov
pop
in
xchg
and
xchg
lock
loop
mov
xchg
cmp
into
mov
xchg
cmp
out
push
jge
fcmovnbe
xchg
dec
fistpl
stos
in
outsl
loope
cmp
into
lahf
inc
lcall
lret
jo
cmp
jnp
fdivl
cmp
popa
insl
test
push
jne
xor
test
mov
ret
movsl
inc
jecxz
daa
cmc
sbb
imulb
jne
cwtl
sbb
xchg
or
mov
sbb
idivl
icebp
test
mov
insl
ss
dec
loop
jne
fcoms
stos
in
mov
mov
sarb
lret
dec
sbb
xlat
mov
add
push
mov
js
dec
mov
sub
mov
hlt
arpl
ljmp
sub
enter
mov
outsb
xchg
bound
sbb
or
push
pop
jb
mov
lret
mov
sti
cmc
arpl
dec
inc
pop
dec
or
cmpsb
xor
jmp
sbb
int
lcall
pop
ja
cli
popa
out
pop
add
mov
jmp
xchg
clc
xorb
and
jae
mov
inc
pop
mov
cltd
shl
add
push
fisubs
cmpsl
pop
jbe
cmp
imul
movsb
xchg
imul
push
dec
fadd
dec
add
sub
and
pushf
cwtl
ss
popf
sub
xchg
cmpl
xchg
adcl
fisubs
xchg
inc
mov
add
push
mov
mov
cmp
lcall
xor
mov
cmp
insl
lcall
pop
mov
pop
ljmp
fadds
insb
addr16
cmp
xor
dec
lods
jbe
sbb
out
addr16
adc
jbe
sub
and
sbb
aas
adc
ds
jp
mov
mov
xor
mov
fidivrl
movsl
xlat
mov
xlat
mov
or
mov
cwtl
aam
int3
sub
cmp
cwtl
xchg
outsl
lock
das
mov
pushf
add
mov
mov
in
dec
cmp
mov
nop
inc
pushf
inc
cmpb
lock
adc
test
hlt
out
and
loopne
mov
popf
sbb
sbb
repnz
movsl
push
pop
adcb
test
pop
sub
or
cmp
push
test
nop
dec
ret
sub
jb
or
mov
xchg
xchg
mov
dec
iret
in
stos
dec
std
pop
push
lock
cmpsl
icebp
popf
ret
xchg
pop
inc
imul
mul
out
xor
xor
subl
push
inc
push
sbb
jns
xor
jg
inc
sbb
iret
sahf
enter
negl
jecxz
icebp
ficoml
clc
sub
push
mov
js
xchg
int
loope
adc
jmp
jno
jmp
mov
mov
mov
fldcw
mov
sbbl
add
add
jo
fnsave
cltd
mov
sbb
jecxz
jg
out
push
pushf
dec
inc
in
sarb
pop
in
xor
cli
dec
mov
sahf
arpl
push
dec
jmp
push
xor
fdivs
jbe
and
xor
xor
or
jnp
push
sub
nop
sbb
and
out
adc
dec
xor
into
xor
or
push
cmpsl
test
sbb
dec
in
out
shrb
jg
shlb
cld
repz
jns
xor
rclb
test
mov
mov
push
jmp
out
xchg
mov
stos
cmp
sub
sbb
in
out
div
mov
sub
lea
push
cmc
or
cmp
pop
int
movsb
jbe
insb
dec
iret
aas
xor
xchg
and
insl
iret
sub
dec
cmp
int
inc
lods
pop
cmp
rcr
jbe
or
jo
jne
pop
or
pop
pusha
xchg
loopne
cmpsl
jb
mov
or
imul
adc
sbb
xchg
js
cmp
hlt
ss
and
xchg
mov
jo
inc
dec
ret
dec
shlb
jns
lods
cmpsb
pop
cmp
jb
mov
dec
xchg
push
and
int
sahf
dec
or
out
pop
enter
out
adc
jge
out
daa
pop
scas
nop
jno
mov
lds
filds
pop
mov
data16
movsb
push
xchg
mov
orl
rcrb
enter
add
jae
lock
ss
cs
dec
and
xchg
xor
in
xor
das
les
aad
and
or
shl
push
mull
cmc
adc
ss
push
xchg
aaa
adc
push
test
and
xchg
out
jns
or
mov
or
mov
pusha
jb
xchg
pop
sbb
out
sub
jo
add
aad
pop
int
xlat
cmpsl
sbb
sbb
cwtl
pop
mov
shrb
imul
call
and
adc
or
sbb
dec
push
xor
lea
ljmp
xchg
mov
pop
cli
test
sbb
scas
das
mov
shll
leave
fs
add
push
sub
mov
and
imul
movsb
and
test
fcmove
in
in
xchg
je
cwtl
sub
test
push
sahf
je
xor
lea
dec
jbe
clc
xor
int
xchg
and
gs
jecxz
or
test
mov
sarl
sub
test
dec
pop
divb
jg
inc
jns
and
sub
or
inc
mov
push
inc
cmp
pop
lock
and
jl
out
mov
pop
mov
pop
ret
shlb
lcall
dec
inc
sti
push
jle
xchg
add
cli
lcall
out
cld
xor
out
int
push
shrb
jbe
and
imul
ficomps
nop
cmp
push
ljmp
lcall
aas
add
and
dec
pop
repz
jb
div
inc
push
add
popf
inc
inc
inc
sti
enter
sbb
inc
leave
cwtl
insl
arpl
mov
hlt
mov
inc
popa
xchg
xchg
jmp
frstor
mov
stos
sbb
or
and
cmp
push
and
or
das
pop
pop
mov
or
mov
lods
test
add
sbb
sbb
sbb
ret
scas
xor
das
add
xchg
or
push
addr16
fidivl
fisttpl
mov
push
add
fcmovnbe
xchg
mov
iret
sahf
shlb
pop
push
fldcw
jmp
int
inc
fsubs
push
bswap
mov
and
sub
mov
mov
lahf
les
add
lds
adc
outsl
mov
imul
sahf
lcall
lock
and
movsb
lret
imul
xchg
add
dec
test
xchg
add
xchg
lret
pop
jno
cltd
or
faddl
sub
outsb
mov
fwait
or
sbbl
pushl
inc
sbb
inc
lcall
lret
push
in
push
jge
add
movl
cmpsl
out
lods
in
sub
jge
fisubrl
rol
ljmp
cvtps2pi
ljmp
stc
cld
loop
jmp
sahf
fwait
notb
jl
stos
rcrb
rcrb
test
mov
setno
sub
dec
dec
push
xchg
and
push
dec
insb
sbb
lcall
mov
aad
sti
lods
out
pop
mov
aad
mov
cmpsb
dec
enter
mov
fs
out
lods
mov
lea
adc
xor
aam
out
sbb
push
lods
cli
cwtl
lock
aaa
mov
ficompl
pop
lcall
in
sub
xchg
loopne
mov
or
test
push
imull
and
clc
xchg
mov
sub
sub
adc
popa
push
fbstp
out
dec
scas
repz
cmp
imul
mov
xchg
dec
je
pushf
sbb
jnp,pn
cmp
mov
imul
imul
ss
xchg
pushl
das
push
je
ds
mov
ja
in
push
sbb
daa
fidivrs
xor
pushf
mov
call
clc
mov
hlt
push
mov
dec
jmp
jecxz
mov
cmp
cltd
cltd
ds
test
fdivl
mov
jbe
jns
sbb
xor
push
pop
mov
dec
mov
xchg
sahf
add
insb
adc
push
jns
rol
in
addr16
pop
ja
test
ret
jge
adc
push
jns
leave
inc
sbb
adc
and
daa
xchg
fwait
mov
jmp
pushf
push
pop
sub
test
add
jle
repnz
inc
jle
add
mov
mov
cmp
ja
or
fsubs
and
lcall
xor
or
inc
jno
mov
adcb
test
iret
inc
mov
inc
pop
mov
and
bound
dec
lock
pop
fsubrs
pop
adc
jl
pop
push
cs
sbb
ffreep
outsl
in
jmp
cs
sbb
hlt
lods
mov
call
fldcw
fsub
jp
pushf
mov
pop
ficomps
jmp
inc
sub
test
das
dec
aad
stc
cwtl
mov
setae
bound
jo
and
cmpsl
jmp
test
xchg
hlt
xchg
cld
sub
hlt
inc
sbb
cmc
jge
inc
fdivp
ljmp
aad
cmp
out
xor
push
lcall
pop
sbbb
leave
mov
xor
cmpsb
test
mov
and
fisubrl
sbb
movb
je
movl
movsl
es
add
imul
mov
fwait
mov
fchs
push
popf
sbb
arpl
daa
into
call
movsb
jns
cmp
xchg
or
ja
shlb
push
imul
jb,pn
mov
mov
xchg
mov
dec
jp
stos
jle
fld
out
and
dec
push
sbb
gs
jnp
jns
xor
fsubp
push
pop
jl
clc
jge
jecxz
ljmp
jg
add
popa
xchg
xchg
adc
jmp
pop
outsb
jae
cli
lret
inc
sbb
ljmp
jge
movsl
and
outsl
std
cmc
jecxz
mov
jl
stc
arpl
jae
or
cmpsl
scas
popa
jge
push
gs
movsb
jnp
cmp
add
mov
fcoms
popa
mov
xchg
mov
jne
mov
in
cmpsl
mov
dec
fsubp
sti
scas
mov
or
fildl
repz
stos
in
xchg
or
add
pop
out
jo
jle
inc
xor
cmpb
sub
pop
js
push
xor
mov
lods
popf
imul
repnz
xchg
xor
adc
das
lds
and
mov
rcr
icebp
sbb
jbe
sub
xor
nop
push
lahf
cmpsl
dec
sbbl
test
jge
iret
cmpsl
cmp
push
mov
jb
dec
cmp
aam
jo
inc
nop
in
les
stos
mov
adc
cmp
xor
into
add
and
xor
fisttpll
out
cmp
pop
iret
ret
mov
in
dec
ret
in
enter
pop
fs
jmp
jecxz
testb
movsb
mov
pop
shll
dec
pop
inc
stos
jne
idiv
imul
lcall
rcrb
cld
shrl
xorl
mov
inc
mov
cs
outsb
push
jae
out
xlat
cmp
lock
sahf
cmp
scas
mov
loopne
push
dec
pop
add
xor
dec
in
sub
iret
mov
mov
inc
push
push
adc
push
sub
dec
sub
mov
inc
jl
sbb
into
sub
xor
xchg
mov
mov
mov
enter
mov
mov
into
enter
inc
clc
hlt
pushf
mov
testb
and
arpl
push
add
stos
lahf
pop
divl
pop
adc
jge
xor
adcl
cld
mov
psadbw
mov
movsl
sub
adc
xor
or
sub
xor
and
jmp
test
bound
movsb
mov
arpl
or
sub
and
jo
push
ffree
mov
push
test
iret
out
adc
fcomps
jmp
or
outsl
sbb
mov
mov
push
es
pushf
jne
pop
hlt
jg
aad
enter
stc
popf
daa
mov
icebp
inc
imul
sbb
and
leave
push
cs
ficomps
add
sahf
pop
cli
repnz
or
or
outsl
cmp
xor
push
lods
xorb
add
mov
cs
jo
adc
bound
mov
xchg
dec
out
dec
mov
sbb
ficoml
cld
aas
push
dec
cmc
push
loop
in
inc
xchg
stos
pop
and
divl
out
int
jbe
stos
push
int
inc
shlb
add
xchg
inc
jmp
ja
shll
and
xor
aas
lea
jle
repz
cmp
add
jo
mov
jecxz
ret
jecxz
add
std
nop
ja
push
pop
sbb
fisttpl
adc
into
sub
js
add
dec
movsb
inc
mov
xor
xchg
push
push
insb
sub
inc
xor
mov
add
push
cld
and
xchg
scas
mov
fisttpl
scas
scas
pop
outsl
mov
fistpll
pop
mov
test
ja
sti
out
fldenv
cmpsb
mov
in
scas
rclb
xor
shll
pop
ftst
xorl
jmp
jbe
loopne
mov
negl
adc
rcrl
fisttpl
jbe
std
hlt
addr16
inc
pop
jl
mov
fs
inc
movsl
es
orb
mov
fnstsw
cmp
sub
mov
mov
cmpsl
sub
cli
pushf
jnp
inc
out
lahf
clc
jl
fldcw
add
aas
clc
hlt
sub
ja
cli
xor
ja
mov
clc
test
out
xchg
push
or
mov
imul
push
scas
xchg
in
mov
sub
cmp
mov
lahf
ret
adcb
xchg
jmp
mov
das
movntps
mov
pop
test
jnp
icebp
fdivrl
mov
mov
xchg
out
dec
into
js
mov
pusha
aaa
push
fisubrs
test
cmp
sub
subl
ror
or
fstl
stos
mov
loop
pop
ret
arpl
dec
scas
js
int
push
dec
imul
fucom
je
cmpsb
nop
xchg
fwait
pusha
adcb
xlat
pop
testb
dec
lods
push
fimuls
fdivrl
lcall
call
ret
adc
dec
jle
add
xor
add
mov
shlb
cmpsl
out
or
clc
insb
int
add
sar
insb
pusha
scas
cmpsb
ljmp
jmp
pusha
faddl
sub
and
std
psubusb
dec
push
xchg
inc
pusha
sub
jne
mov
and
sbb
lcall
xor
mov
dec
adc
xor
or
mov
push
in
xor
cmpsl
and
add
aas
mov
imul
loop
ja
inc
out
ja
add
rcll
movsl
push
aad
or
sarl
sub
mov
scas
data16
sub
rcll
rcll
mov
loop
hlt
xlat
out
sub
daa
or
push
pop
jle
or
test
add
das
mov
push
fs
in
cmp
outsb
cltd
mov
lock
mul
insb
negl
mov
jle
inc
addb
inc
pop
pop
js
popf
pushf
out
rcrl
cmpsl
je
fdivp
xchg
and
add
cmc
arpl
stos
imul
add
jle
andb
cld
jle
int
lret
push
mov
jae
aas
test
sbb
dec
xchg
sarb
inc
ret
cmp
mov
lret
jo
xchg
fdivl
inc
imul
test
imul
add
scas
or
cwtl
and
pop
adc
cmpb
stos
dec
push
cmp
lret
xor
xlat
mov
iret
mov
lcall
push
and
jbe
push
movsb
dec
push
adc
leave
pop
stc
and
lods
mov
sub
cmp
dec
push
xor
loope
add
mov
sbb
dec
ss
jmp
xchg
jmp
div
push
stos
inc
in
data16
and
push
frstor
lods
push
sbb
call
dec
mov
fisubrl
push
in
mov
cld
cmp
or
adc
sub
bound
mov
pop
adc
mov
das
adcb
jecxz
data16
lahf
aad
notb
shrb
dec
int3
fbstp
pusha
ss
loop
int3
jge
loopne
or
pop
cmp
iret
xor
out
mov
stos
fisttpll
sbb
mov
insb
aaa
mov
sbb
mov
outsl
fcomi
mov
mull
sub
jo
cmpb
jne
mov
sub
or
lock
inc
rcrb
and
stc
je
in
dec
xor
pusha
pusha
test
push
movsl
sbb
inc
pusha
insb
clc
out
sub
sub
orb
dec
decb
sbb
insb
mov
je
nop
rcrl
lret
mov
cmp
or
pop
movsb
add
icebp
jecxz
jmp
in
insb
ret
mov
xor
pop
dec
fsubs
pop
dec
clc
dec
std
mov
xlat
je
lods
dec
adc
not
jge
mov
sbb
arpl
add
lods
and
lods
sti
xor
cmp
jle
leave
pop
daa
not
movsb
out
push
imul
lds
fistpll
adc
jb
fidivs
lahf
es
jl
test
mov
mov
xor
loope
nop
fisubrl
inc
lret
mov
addr16
outsl
adcl
enter
mov
or
es
mov
jne
cmc
adc
adcl
inc
adc
sbbl
or
sub
mov
or
dec
cmp
adc
add
or
dec
adc
jge
push
mov
sub
push
cmp
mov
popa
push
push
xor
fimull
xchg
inc
mov
scas
mov
sub
jge
sbb
inc
jnp
lcall
stc
aam
outsl
add
int3
jle
outsl
mov
aad
hlt
jo
lcall
int3
pop
or
ret
call
mov
daa
stc
or
or
test
dec
scas
inc
jmp
daa
daa
stos
in
shll
jecxz
adc
pop
aaa
or
aaa
test
ja
mov
test
out
mov
mov
popf
mov
add
inc
addr16
cmp
cmp
shlb
adc
pop
enter
sbb
sti
mov
xor
fistpl
scas
arpl
dec
xchg
in
nop
mov
cmpb
and
cmp
push
cld
test
ror
std
mov
mov
insl
dec
outsb
xlat
loop
add
mov
pminub
pop
ja
popa
push
fcomi
movsl
sbb
xor
jp
push
outsb
inc
xchg
adc
imulb
mov
sbb
fcoms
inc
icebp
jl
repnz
shl
fstl
push
lods
sahf
nopl
sbb
nop
mov
or
adc
scas
add
mov
push
push
jp
popf
jle
add
jp,pt
loope
fildl
ficomps
or
pop
lods
mov
sub
pushl
sbb
adc
push
loope
jl
xor
push
gs
adc
xor
pop
dec
int3
add
xor
jg
mov
mov
cltd
hlt
in
shl
jmp
hlt
mov
xor
aas
in
cltd
and
into
vxorps
repnz
cltd
fsubrp
insb
cmp
ss
pop
jb
repz
mov
in
sbb
test
movsbl
faddl
pop
fs
movsl
xor
dec
cmc
pop
adc
jae
repnz
mov
xchg
mov
lahf
mov
cld
mov
enter
pusha
aam
push
mov
fimull
mov
dec
mov
mov
repz
movsl
push
shll
mov
shlb
xchg
repnz
mov
sbb
push
into
xor
cmpsl
test
inc
or
pop
mov
fucomp
push
sub
or
xchg
call
xor
shll
in
push
fs
pop
push
das
adc
cmpsb
adc
fstpt
mov
test
ss
add
fildl
fisttps
mov
cmp
in
xchg
xor
xor
into
cmpsb
push
inc
imul
inc
stos
adc
stos
xchg
call
xor
lods
jl
mov
mov
imul
das
das
sahf
jmp
ret
mov
shl
adc
xchg
and
mov
mov
jb
push
notb
rorl
movsl
fsubrp
ret
cmp
int
leave
nop
or
push
fistpll
sub
and
cmp
xlat
scas
ljmp
repnz
loop
or
adc
adc
dec
mov
data16
mov
mov
fmul
stos
push
mov
adc
outsl
push
out
in
mov
push
push
adc
lahf
fsubr
and
gs
cltd
jo
imul
xlat
mov
adc
mov
xor
cmpsl
jge
mov
inc
pop
iret
stc
add
mov
adc
aas
lret
pop
insb
pop
orb
fnsave
pop
movsl
rcll
sub
imul
pusha
add
lret
cmpsl
adc
push
iret
or
in
aas
jnp
dec
push
cmc
pop
and
ja
test
lea
and
sbb
and
pusha
or
jns
fisubs
mov
or
lahf
mov
call
jne
inc
mov
mov
imul
fildll
push
jae
lret
push
je
andb
test
loop
mov
dec
add
sbb
inc
testl
cwtl
das
lret
arpl
xchg
sub
xchg
jb
lock
jbe
test
addl
dec
aad
cmp
xorb
jle
pop
in
cmp
leave
ret
jno
adc
lock
fistpl
cltd
pop
aaa
ja
cld
sub
jo
sub
rorb
subb
jno
into
sub
adc
or
test
hlt
cs
mov
aad
ret
sbbb
ficomps
aaa
adc
dec
stc
mov
add
shrl
test
mov
add
test
shlb
imul
lock
insl
scas
das
sub
ljmp
adc
inc
cmp
mov
insb
xor
push
mov
lahf
push
pop
cmc
mov
mov
mov
pop
arpl
sahf
push
mov
dec
mov
push
ficoms
pop
mov
imul
pop
sub
jecxz
orl
ret
mov
xchg
jg
inc
mulb
cmp
lahf
fucom
xchg
xchg
pop
sbbb
lret
xchg
shrb
repnz
pop
cli
sbb
mov
jo
pmullw
cmp
mov
mov
inc
dec
pushf
jp
add
cs
or
nop
jg
idivb
js
mov
add
movsl
ret
insb
inc
jno
pop
xchg
cmp
jge
ficoms
pusha
insb
pop
les
or
data16
ss
mov
pop
cmp
jb
push
cmp
filds
scas
sub
add
inc
dec
call
ror
or
add
fadds
ljmp
xchg
aaa
and
js
mov
hlt
int3
xor
loopne
fisubrl
aas
mov
std
in
ljmp
mov
push
xchg
cli
stc
and
jb
subl
pop
adcb
sub
adc
incb
adc
xchg
sub
inc
xor
sbb
fcom
stos
sbb
shll
test
sahf
mov
mov
push
pop
mov
movsb
lcall
push
decl
pop
bound
push
mov
stos
sti
outsb
arpl
xorl
int
mov
push
sbb
jne
inc
bound
pop
lahf
xchg
mov
into
test
bound
subb
and
imul
and
pop
pop
xchg
mov
jae
push
pop
sub
jmp
inc
popf
lcall
push
addr16
imul
lds
jo
int
cmovnp
adc
mov
aam
aam
mov
pushf
addr16
movsb
lock
lods
jns
fists
ljmp
jp
addr16
mov
mov
test
aaa
add
sub
popa
adc
test
add
mov
rolb
stc
or
ja
mov
ret
mov
adc
sub
sub
sbb
dec
dec
dec
mov
out
sti
das
clc
push
imul
stos
push
jns
inc
call
pop
inc
rcrl
pusha
fs
or
jl
and
xchg
lods
jo
test
aas
add
iret
repnz
int
mov
lock
aas
fcmovb
mov
mov
xor
test
cltd
pusha
lods
adcl
mov
addr16
scas
mov
loop
jbe
sbb
ljmp
sub
or
push
mov
hlt
dec
adc
imul
xlat
pop
je
sub
push
mov
fstpt
repnz
jmp
mov
or
cmpsb
adc
mov
dec
or
in
jmp
das
repnz
mov
mov
jmp
or
mov
and
in
xorb
xor
xlat
fs
fldcw
insb
outsb
call
call
rclb
sub
pop
out
movsl
fsubl
lahf
cmp
mov
hlt
fcoml
pop
add
rolb
loopne
stos
mov
cltd
xchg
or
cmpsb
push
sub
xchg
add
or
push
in
push
push
hlt
sub
fsub
mov
out
mov
jmp
data16
mov
int
sub
mov
clc
aad
hlt
pop
cmpsl
mov
outsl
fisubs
adc
sbb
fsubrs
dec
dec
lea
mov
ljmp
inc
jns
dec
xchg
in
jno
jp
dec
subl
in
mov
mov
in
cmp
leave
test
int3
mov
inc
and
clc
fcomp
dec
xchg
mov
pop
inc
add
or
bound
cmp
dec
lods
loope
mov
mov
dec
pop
loop
mov
int
add
xchg
pop
or
imul
xchg
mov
jmp
add
jbe
pop
gs
ljmp
subb
imul
scas
cmp
add
test
dec
pop
pop
sahf
jno
popa
lahf
pusha
mov
xor
subb
pop
and
jne
fstl
icebp
ficompl
dec
lret
hlt
out
push
jecxz
add
cmp
lods
cmp
or
test
test
push
jbe
clc
in
sub
sub
xchg
scas
gs
jp
mov
push
sbb
imull
push
mov
sbb
sbb
hlt
fsts
std
cmpb
push
std
sub
mov
out
cmp
outsb
jl
lret
adc
xchg
mov
push
push
pop
mov
fldl
mov
mov
adc
xor
cmp
insl
pop
rclb
push
scas
shrl
mov
mov
test
out
jns
or
movsl
and
rsqrtps
jge
daa
add
xor
jne
jp
cmpsl
lock
mov
dec
sbb
lcall
jmp
mov
out
xor
mov
scas
aad
xchg
scas
xchg
andl
mov
aas
out
cltd
lods
pushf
movsl
pop
jmp
adc
sbb
addr16
psrlq
mov
and
loope
in
mov
pop
mov
data16
xor
and
sub
xchg
adc
fdivrp
js
rcr
and
stc
lret
loopne
jb
mov
push
sub
hlt
ficoml
cli
lcall
pop
frstor
add
or
sbb
outsl
aaa
xor
push
mov
push
das
add
pop
orb
xchg
cmp
cmpsb
cmp
addr16
push
pop
subb
cmpsl
jge
xor
call
adc
fisttps
test
lock
sbb
sub
lcall
arpl
outsl
or
pop
push
push
int3
mov
pop
test
mov
lods
inc
xor
test
jnp
jmp
or
pop
mov
movsl
sub
sub
sub
imul
insl
push
xchg
xchg
cmp
das
cwtl
gs
jnp
popa
add
shll
or
ret
xor
push
xor
in
mov
pop
pop
pop
call
jno
cmp
daa
xchg
mov
xchg
or
mov
test
pop
xchg
call
lods
xchg
jge
sbb
mov
or
xor
ret
xchg
xchg
testb
mov
cltd
jae
jns
xor
jmp
xchg
mov
sbb
adcb
into
pop
or
call
mov
insl
lods
test
das
nop
stc
sub
sub
xor
mov
outsb
pop
enter
cmovo
in
push
adc
shl
dec
jno
jmp
xchg
aaa
icebp
jbe
pop
xor
sbb
jmp
aaa
in
aaa
scas
and
adc
in
lods
mov
push
xor
cmp
lahf
call
or
adc
and
mov
ljmp
jmp
xchg
xchg
lret
ljmp
jbe
and
bound
imul
push
sti
clc
sbb
movsl
mov
jnp
pop
adcb
aaa
aas
cmp
imul
mov
cwtl
sarb
lea
loope
sub
cltd
mov
sbb
push
xor
mov
popa
add
dec
jae
push
xchg
sbb
out
loopne
sub
in
dec
hlt
xorb
lods
lret
mov
push
mov
in
xchg
adc
test
adc
dec
daa
adc
js
sub
and
pop
push
cs
cmpsl
dec
jg
xor
lcall
xchg
xor
repz
sub
mov
out
das
mov
push
xchg
and
jle
mov
push
je
fiaddl
and
iret
cmp
xchg
cld
or
lcall
sub
dec
mov
and
push
mov
cli
cmova
xchg
add
xor
roll
out
xor
jle
and
xchg
cli
mov
push
repnz
pop
and
aas
mov
pop
sbb
or
cli
int
inc
xor
hlt
scas
fstl
mov
inc
in
shll
adc
and
jge
lret
out
aaa
dec
icebp
lret
fstps
mov
sbb
mov
rcl
dec
xchg
pop
cmp
call
in
mov
enterw
cltd
shr
nop
xor
mov
dec
push
aaa
sbb
xlat
or
and
imul
into
jb
pushf
add
lcall
jg
lcall
sbb
clc
mov
lret
and
inc
push
bnd
mov
xor
les
dec
loop
aam
movsl
and
pushf
push
or
out
data16
pop
pop
outsb
ljmp
and
int3
repz
aad
sbb
or
dec
loop
mov
mov
dec
lods
mov
xor
dec
lock
and
dec
mov
jo
adc
mov
gs
call
stos
decl
mov
cmp
xchg
cld
push
mov
addr16
inc
mov
jg
int
pop
jae
daa
jmp
pop
mov
fnstcw
sbb
inc
push
sub
adc
xlat
aaa
push
push
xchg
or
push
jl
ljmp
mov
pop
pusha
test
mov
xor
and
ficoml
jp
adc
std
out
pop
mov
iret
scas
jne
cmp
shl
sub
sbb
jb
push
or
push
sub
push
roll
lds
ljmp
leave
mov
lods
adc
inc
or
clc
or
in
jne
mov
and
mov
test
rcr
xchg
movq
insl
out
stos
or
repnz
jge
mov
mov
pop
jp
and
rcr
out
push
push
mov
scas
sbb
and
scas
cli
test
dec
dec
clc
dec
mov
test
rcr
push
pop
fwait
mov
filds
dec
jp
inc
dec
aaa
test
dec
enter
imul
outsl
pushf
push
loop
sbb
movsl
adc
insb
ds
mov
mov
enter
imul
mov
pop
cld
push
iret
inc
mov
aas
fidivrl
lods
xor
flds
outsl
mul
cmpsl
lods
in
push
or
data16
dec
jmp
xchg
mov
jmp
jno
jg
inc
pop
pop
push
dec
inc
mov
inc
rclb
pop
leave
push
insb
dec
lret
or
mov
cmp
and
add
imul
pop
gs
int
rcr
cmp
test
test
jo
xchg
dec
jae
xor
outsb
mov
inc
pop
lcall
cli
loope
insb
hlt
push
mov
cmp
mov
mov
shll
jp
into
push
mov
es
repnz
mov
push
fwait
cmp
inc
adc
mov
lea
fucomp
pop
lods
sub
cmpsl
int3
or
les
jno
dec
fnop
cmp
ds
pop
dec
shlb
ret
lea
in
ror
loope
mov
call
stos
scas
out
jecxz
out
pushw
fst
jmp
mov
cmpsl
mov
mov
ret
xchg
pusha
xor
cmp
notb
cmc
pop
bound
repnz
loop
sbb
or
jl
mov
push
loopne
popa
iret
or
les
mov
sbb
pop
mov
lahf
mov
xchg
adc
push
in
push
outsl
sahf
sbb
cmp
add
shlb
insl
loopne
cs
out
sub
data16
sub
sahf
mov
test
jo
pop
and
lahf
mov
push
mov
push
sub
std
insl
dec
and
sbb
mov
mov
add
flds
or
inc
ja
orb
xchg
mov
push
out
xlat
andb
sub
rcr
ja
rcrl
rcl
cmp
in
loope
fadd
inc
dec
ljmp
lock
cmp
hlt
mov
ret
mov
into
inc
movsb
sarl
cmp
mov
pop
in
mull
mov
xchg
sahf
fldt
ss
ret
cmp
popa
sub
lret
xor
xor
std
mov
outsb
sub
repnz
xor
inc
hlt
imul
lods
xlat
call
lea
call
inc
cmp
or
xchg
ss
fucomp
in
adc
inc
mov
lcall
mov
lcall
adc
pop
das
and
shl
sar
xor
add
and
jge
mov
sbb
cld
or
or
cmpsb
iret
adc
call
and
sbb
roll
pop
adc
cmp
outsl
xchg
sub
lea
jecxz
clc
lret
jb
add
iret
mov
cltd
sub
adc
jae
xchg
test
fdivl
cli
clc
fnstcw
sbb
in
movaps
push
aas
mov
mov
call
mull
lret
adc
or
cmp
cltd
mov
jo
push
lods
lods
mov
inc
jae
or
ss
frstor
dec
das
insl
and
popa
pop
and
es
ja
cltd
push
sub
dec
ret
scas
sbb
lcall
test
iret
jne
leave
jae
sbb
jmp
sbb
or
ds
mov
mov
dec
data16
in
int
adc
pusha
lret
mov
lret
int3
cmp
mov
test
adc
jne
outsl
dec
rolb
or
and
and
icebp
js
xchg
test
xchg
xchg
insb
inc
movsl
inc
sub
jmp
shl
imul
movsl
xchg
cmp
cmp
cmpsb
repz
insl
jnp
adc
sarb
cmpsb
jmp
xchg
lods
xchg
adc
push
sub
iret
mov
test
fwait
ljmp
cmp
cld
xor
add
std
jns
adc
mov
add
mov
movsl
in
jl
repz
ja
mov
sahf
dec
sub
xor
mov
jne
or
sub
imul
outsl
pop
test
enter
out
sbb
icebp
or
jge
cld
mov
inc
cs
sub
dec
cli
inc
mov
jno
addr16
orl
mov
loop
mov
fdivs
andl
jb
mov
jnp
call
jp
push
dec
mov
mov
xorb
xor
jecxz
mov
int3
loope
jo
mov
inc
sbb
lahf
jp
push
mov
push
pop
bound
inc
xor
xchg
sub
dec
or
xchg
stos
mov
sbb
dec
adc
nop
subb
jnp
fwait
popa
test
std
and
xor
ss
lea
adc
sti
mov
fwait
leave
cltd
pop
clc
lcall
xchg
jp
mov
add
cli
or
xlat
push
cmp
dec
je
adc
out
movb
fidivrs
or
lock
movb
pop
pop
mov
shrb
xchg
pop
shrl
and
mov
roll
dec
in
mov
cli
adc
and
nop
pusha
dec
and
hlt
in
mov
cltd
lahf
imul
outsb
push
rorl
cltd
push
lahf
ja
rol
jno
mov
jmp
mov
jbe
push
pop
pop
jns
add
sbb
or
js
gs
mov
call
mov
mov
int
mov
lock
imul
dec
lea
push
outsb
ljmp
sub
lods
jmp
mov
sbb
test
inc
inc
int3
dec
in
mov
xlat
xor
test
sahf
je
push
push
aad
pop
out
imulb
mov
mov
cmp
je
enter
and
lock
pop
xor
call
sarb
in
and
ljmp
push
xchg
and
test
xor
dec
lods
lret
rcrl
cmp
fisttpl
jle
adc
shl
loopne
aas
pop
push
fwait
sub
dec
adc
divl
and
ljmp
adc
jge
or
arpl
xchg
xor
or
mov
out
pop
sbb
fnclex
and
outsb
adc
cli
mov
cmpsl
xor
data16
sbb
lock
leave
sbb
push
cli
xchg
dec
scas
sub
adc
xlat
enter
es
cli
cs
cmp
orb
xlat
and
and
sub
cmpl
int3
sbb
dec
push
adc
sti
cmp
xor
pop
out
ja
cmpsl
fcmovne
cmp
out
sub
xor
cmp
push
push
shrl
jnp
jge
mov
nop
testl
cmp
adc
test
fwait
mov
jl
push
mov
lcall
arpl
pop
stc
lds
pop
stos
push
aas
xchg
stc
nop
iret
push
xor
arpl
dec
fnstsw
pusha
dec
xchg
and
test
mulb
dec
stos
jae
mov
jg
cmp
adc
push
push
jecxz
cs
shrb
insl
test
pushf
xchg
aaa
test
fcmove
xor
pushf
jno
les
mov
out
jns
subps
xchg
icebp
cli
sbb
pop
and
lock
cmp
cmp
sbb
inc
and
push
cmp
xlat
cmpsl
mov
push
jo
inc
sub
test
addl
enter
cmp
push
pop
aam
sub
shr
sbb
lahf
std
jnp
or
fsubrp
and
sub
insl
arpl
jae
popf
adc
js
push
shlb
ret
xlat
ret
mov
sub
imul
loop
pop
mov
adc
inc
pushf
insl
iret
mov
adc
test
into
div
pop
push
ds
in
jnp
popa
add
flds
ficomps
outsl
lret
jmp
sbb
xchg
out
push
push
adc
sub
dec
add
push
jae
mov
xchg
mov
sub
mov
stos
cmp
or
loop
cmpsl
lret
test
mov
or
add
shrl
stos
test
in
push
aam
dec
shrb
xchg
shlb
les
jns
mov
orb
xchg
inc
imul
ljmp
lret
sub
arpl
xor
das
push
lcall
sub
bound
add
dec
ret
cld
cmpsb
pcmpeqd
sub
arpl
or
out
or
mov
jno
in
ja
out
int3
aas
out
fmul
lret
fs
pushf
pop
movsl
fdivs
pop
mov
lock
and
nop
movsb
lahf
ret
xchg
fdivl
mov
je
cltd
in
cmp
icebp
sub
and
repnz
push
add
insl
in
push
push
out
clc
xchg
sub
test
testb
cwtl
xchg
jbe
stc
or
dec
aad
add
or
scas
mov
push
ljmp
cmp
das
ret
sub
jle
xor
inc
fisttpl
into
cmp
rcll
mov
sub
push
mov
or
cmpsb
test
outsl
sub
movsl
mov
dec
sub
mov
mov
fistl
stc
cmp
and
jmp
popf
mov
mov
push
sub
inc
mov
or
jle
out
std
outsl
call
outsl
add
repnz
or
or
mov
insb
push
push
into
xchg
and
out
and
jbe
arpl
fisubrl
push
push
insl
or
cmp
insl
cmp
cmp
jae
pushw
push
fs
mov
cwtl
jne
cmp
pop
nop
mov
mov
sahf
insb
mov
nop
js
test
mov
aam
cltd
movl
enter
mov
lds
xor
dec
int3
fstpt
mov
fcomps
cld
jl
pop
inc
mov
mov
xor
insl
lret
xor
lods
dec
xchg
inc
mulb
pop
inc
inc
add
adc
mov
mov
enter
jg
dec
xor
push
jg
repz
add
icebp
std
js
mov
out
out
dec
sub
and
into
in
mov
in
lret
push
aam
cmp
test
call
lret
or
jg
jmp
into
in
test
mov
mov
enter
xchg
mov
pop
mov
mov
movsb
sub
cmpsl
or
jbe
inc
rolb
cli
movsl
or
test
add
inc
subl
sti
idivb
cwtl
out
lahf
mov
dec
xor
push
je
movsl
mov
loop
divps
and
pop
xchg
sahf
scas
leave
fimuls
jp
and
es
cmp
push
orl
mov
ret
mov
sbb
rcrw
jnp
in
out
push
or
mov
aaa
mov
cmp
push
rcl
xchg
and
or
adc
jp
aam
int3
mov
and
or
mov
iret
xor
iret
into
rdmsr
push
cmp
jno
or
negb
fsts
jb
adcb
sarl
adc
and
lahf
mov
out
adc
pop
fists
repz
out
pop
jae
jecxz
fstps
mov
or
or
outsl
fdivrl
mov
arpl
insb
inc
fucomp
mov
add
sbb
jge
in
fistpll
sub
in
mov
test
adc
les
mov
les
mov
or
mov
push
rol
int
push
rclb
xor
scas
jbe
pop
pop
rorl
inc
jns
pop
mov
and
fimull
in
lods
mov
cmp
jbe
repnz
adc
mov
sbb
mov
push
xor
jle
push
xor
mov
aad
js
out
imul
popa
stos
add
jg
mov
push
add
jl
xchg
pushl
pop
fwait
mov
scas
shlb
ds
and
inc
or
lret
test
cmpsl
fldcw
jno
sbb
ss
out
jmp
add
sub
jge
dec
push
dec
inc
es
mov
xor
std
nop
cmc
fisubs
xchg
and
loop
mov
or
cmpsb
fwait
xchg
fldl
in
cld
jmp
mov
ljmp
add
js
mov
adc
aas
or
sbb
lock
jecxz
push
pushf
scas
lock
mov
lret
lahf
mulb
pushf
dec
and
fucomi
stos
imul
pop
fprem1
jl
sbb
sbb
shlb
xor
mov
outsb
or
fcompl
mov
adc
inc
movb
std
xor
pop
out
jo
adc
imul
out
jae
sbb
and
push
lret
push
pop
jne
sbb
adc
pop
mov
adc
mov
sub
in
jnp
pop
jno
xor
in
jge
ja
xchg
ret
popf
fwait
ljmp
test
or
inc
xor
ljmp
nop
or
mov
loop
push
or
cmp
sub
or
lods
jle
test
push
push
testl
imul
dec
shl
dec
icebp
jmp
movsb
sub
sbb
jmp
adc
pop
adc
inc
push
inc
arpl
push
stos
cmpsl
cs
gs
push
in
lcall
aas
lcall
xchg
inc
pop
stos
and
pop
imull
jns
mov
stos
sub
cmpsb
add
mov
into
hlt
pop
xchg
loop
imul
lea
push
test
aaa
fcomps
xchg
dec
js
mov
push
lahf
out
inc
mov
int
shr
push
dec
rclb
dec
fldl
mov
int3
jmp
dec
jl
lret
mov
test
lods
mov
lret
rclb
jno
and
test
xchg
sub
imul
xor
imul
divl
cli
add
aaa
xchg
ss
inc
or
stos
sbb
out
dec
into
push
mov
sub
dec
ss
mov
inc
js
mov
xchg
jle
dec
sub
gs
push
mov
stos
push
or
flds
cwtl
add
jbe
mov
or
lret
rclb
xchg
cltd
xchg
add
lea
les
outsl
pop
add
ret
ret
xor
lret
push
dec
and
lds
and
mov
popf
mov
jecxz
jne
scas
jo
jl
iret
xor
negl
imul
and
jnp
sub
add
dec
fmull
testb
fucomip
shll
movsb
add
in
push
jmp
int3
xor
dec
iret
xchg
jnp
mov
rolb
ja
xchg
push
mov
and
lahf
hlt
jle
pop
call
jb
cmc
sub
mov
inc
sbbl
pop
data16
jge
cmp
sbb
or
insl
das
enter
jno
xchg
xchg
inc
arpl
inc
adc
sbb
xchg
and
dec
or
mov
mov
movsl
mov
orb
outsb
mov
in
jb
clc
fidivs
in
lret
jge
push
das
into
mov
pusha
leave
movsl
outsb
adc
mov
popf
pop
mov
je
lds
nop
mov
rclb
xchg
sti
inc
dec
xchg
add
add
shlb
std
mov
bound
clc
cmp
pushf
cli
or
inc
jbe
test
and
or
dec
pop
gs
cmp
dec
call
xor
test
and
leave
insb
xchg
rorb
jne
or
pop
sbb
push
loope
cltd
add
jl
push
cld
sbb
sub
mov
jmp
iret
jp
mov
lcall
out
xchg
and
imulb
faddl
sbb
mov
mov
xchg
and
push
in
loope
xchg
add
loop
inc
add
inc
xchg
push
popf
fistl
jmp
xchg
mov
cmpsb
nop
mov
dec
fnstcw
loop
test
jecxz
clc
rorb
clc
iret
mov
or
mov
xchg
iret
test
andb
inc
gs
mov
xchg
jmp
inc
and
mov
testb
test
in
xchg
ja
xchg
loope
mov
dec
push
xor
ja
push
pop
sti
pop
test
arpl
xor
mov
cltd
mov
insb
int
cmpb
adc
pop
sub
sbb
hlt
adc
mov
xor
jns
popa
xor
icebp
loope
cli
arpl
lds
movsb
stos
sahf
ret
aad
mov
sub
or
cwtl
dec
enter
dec
enter
shrb
std
inc
sub
pop
dec
out
aad
loope
cmpsb
dec
sub
imul
sbb
repnz
shrb
push
xchg
or
call
pop
shll
mov
add
out
push
cwtl
stc
adc
mov
ret
shl
in
add
daa
mov
outsb
jnp
into
sbb
cwtl
pop
fwait
cmpl
fwait
clc
xlat
ret
jle
push
mov
aas
xchg
fs
sub
mov
cmp
inc
jb
push
iret
sahf
iret
xchg
insl
mov
data16
sbb
add
and
mov
rcr
jmp
dec
mov
adc
daa
adc
inc
cmp
data16
sbb
into
in
lods
or
push
lods
push
das
push
les
jge
pop
cmp
push
jge
xor
mov
xor
fildll
mov
or
jl
cmp
add
loopne
stos
pop
stos
sbb
push
inc
dec
lret
mov
ret
cmc
bound
add
or
adc
dec
add
dec
cltd
imul
dec
sub
xor
dec
aam
lock
outsl
inc
xchg
into
out
inc
mov
add
sbb
insl
sub
mov
in
xchg
pushf
add
stos
pushf
inc
push
test
inc
sub
cmpsl
lret
outsl
dec
fnstsw
sahf
call
mov
add
or
loopw
dec
jle
pop
add
push
push
and
cmc
movd
inc
jp
lahf
jmp
cli
or
mov
fnstsw
lea
inc
inc
pop
and
test
jo
loop
sbb
mov
xchg
xorl
pop
and
add
sub
and
repnz
sub
xchg
imul
pop
outsl
push
insb
inc
scas
jae
test
xchg
push
icebp
std
push
outsl
andb
setle
jge
and
call
add
jg
mov
mov
out
orb
mov
jp
mov
or
mov
push
out
inc
lcall
pop
imul
enter
dec
mov
lods
lret
sbb
xchg
out
xor
jmp
movsl
imul
test
lods
fs
fnstenv
stc
push
and
imul
cmp
adc
dec
mov
mov
xchg
fsubrs
add
mov
adc
inc
int
inc
popa
mov
push
pop
inc
mov
sbb
inc
sarl
iret
inc
movsb
outsb
jbe
daa
das
loop
or
aad
sbb
es
cmp
nop
mov
add
or
imul
or
adc
xor
call
lcall
and
mov
in
loop
loopne
xchg
sbb
mov
dec
cltd
ss
in
mov
push
dec
xchg
xchg
dec
out
push
lds
js
xor
add
mov
repz
xor
xorb
inc
out
imul
cmp
pop
ljmp
fimuls
cs
lret
jae
hlt
push
daa
mov
insl
mov
cmpsl
or
ljmp
movb
ret
int3
test
subb
mov
movsb
pop
scas
stos
jnp
aad
dec
sbb
ret
in
cmc
jbe
ficompl
pop
out
xlat
or
daa
aaa
sbb
push
pop
xchg
in
fcompp
inc
jg
fldpi
scas
mov
pushf
cmp
inc
ret
ror
or
dec
sub
lret
push
scas
jno
je
call
push
inc
out
mov
test
adc
imul
jg
jae
cli
adc
sbb
dec
cmpsb
push
mov
nop
test
dec
lods
mov
push
testb
sub
xchg
insb
xchg
xchg
mov
sub
das
mov
je
pusha
inc
push
mov
jmp
mov
or
mov
mov
adc
push
scas
scas
stos
adc
mulb
and
nop
or
mov
iret
call
dec
in
sub
cli
sub
insb
andb
xchg
push
lcall
cld
scas
arpl
inc
or
fdivl
enter
pop
inc
enter
cltd
movl
sub
sbb
in
cmp
xlat
cld
push
cltd
xchg
jae
shrb
push
cmp
jnp
in
ret
push
ret
out
fdiv
mov
xorb
lock
mov
and
cltd
mov
insl
add
ja
hlt
or
mov
dec
jo
mov
filds
cltd
lret
pop
jae
mov
mov
aaa
fwait
pop
cmp
and
inc
in
adc
adc
or
push
cli
fsts
sub
sub
jne
cwtl
push
xor
mov
inc
es
jle
test
cli
push
add
push
inc
adcl
jne
push
jno
push
adc
pop
cmp
pop
out
inc
pop
sti
jmp
add
adc
dec
fidivrl
and
icebp
cwtl
jp
cmp
mov
lods
sub
jbe
decl
popa
xchg
inc
fwait
mov
and
push
nop
mov
icebp
sahf
icebp
scas
pop
iret
movntps
mov
sti
xchg
cwtl
ds
jbe
scas
insb
xor
fisubrs
repz
inc
sub
movsb
cltd
into
out
subb
cmpl
mov
jmp
out
adc
add
add
loope
xchg
jmp
sbb
dec
fistpl
add
jb
inc
movb
sti
pop
push
sbb
inc
cmc
sub
jbe
sub
fnstcw
cmpsb
in
inc
jecxz
xlat
add
fsubrl
and
sub
imul
mov
and
cltd
sub
jmp
loopne
pop
enter
mov
int
and
mov
lcall
inc
dec
xchg
mov
dec
es
jg
pop
jg
icebp
mov
js
dec
stos
jp
cmpsb
push
jnp
hlt
jbe
pop
aam
and
or
dec
aam
xchg
dec
test
add
cmc
jne
adc
test
sub
sub
fsub
movsb
fcoml
leave
jb
jle
and
jnp
les
xor
mov
cmpsl
mov
push
ljmp
mov
repnz
sbb
inc
jg
cmp
inc
or
scas
mov
shrl
sbb
mov
stos
pusha
pop
sbb
hlt
daa
jnp
ds
xlat
bound
jmp
in
mov
out
jmp
aaa
xchg
sbb
cs
mov
movsb
sbb
mov
iret
xchg
sahf
sbb
movsl
cmp
adc
add
test
cwtl
sbb
shll
or
lods
in
push
cmp
loop
hlt
stos
cmp
jmp
and
mov
outsb
jnp
xor
outsl
xchg
imul
xchg
sub
xchg
std
or
int3
lcall
and
adc
outsb
lea
add
std
push
lods
sbb
ret
mov
or
pop
cli
jns
je
icebp
mov
xchg
les
scas
lea
xor
pop
lcall
mov
enter
mov
jmp
dec
hlt
add
cmp
sbb
add
xchg
arpl
cld
scas
fnstsw
pushl
aad
add
inc
add
ljmpw
xchg
xchg
xor
xchg
je
sbbb
dec
js
inc
xor
xlat
sar
test
or
mov
jp
xchg
daa
push
aad
lret
fcoms
xchg
pop
mov
js
imul
test
mov
js
insl
xchg
cmc
or
cmp
adc
rclb
shl
inc
add
pop
std
aad
add
je,pn
xchg
adc
lcall
and
mov
jl
xchg
aam
add
cwtl
imul
scas
in
cld
lret
xchg
lock
call
pop
out
xchg
push
sub
jecxz
lahf
inc
mov
pop
mov
sbb
xchg
xchg
mov
cmc
repnz
jnp
cld
incb
ret
lock
cmp
scas
dec
fbstp
stos
imul
xchg
push
mov
cli
xor
jp
cmovp
adc
sbb
xchg
shll
nop
popa
cmp
shll
xchg
scas
inc
pop
dec
sub
mov
and
mov
cmp
and
aam
lcall
nop
test
jle
mov
stos
cltd
push
xchg
fists
xchg
xor
ret
std
daa
enter
ds
dec
add
sbb
mov
addr16
sub
or
jbe
subl
jbe
das
sbb
popf
lcall
mov
jnp
dec
and
jmp
std
je
mov
mov
loope
jo
ss
jmp
jle
mov
pop
inc
push
shll
fst
ljmp
xchg
sbb
push
mov
fstp
push
cmp
jbe
cmpsb
fidivrs
sub
sbbb
loope
pushf
sub
push
xor
cmpsl
imul
jle
imul
loopne
adc
lds
dec
mov
outsl
andb
in
repz
add
mov
xor
push
push
mov
in
iret
ljmp
popf
inc
cmp
mov
outsb
xor
mov
cmc
idiv
pop
call
or
enter
jmp
popf
pop
clc
or
sbbl
xor
pusha
pusha
xchg
lods
xor
mov
adcb
xchg
cmp
dec
mov
ja
xchg
pushf
mov
cwtl
loopne
test
enter
cltd
mov
push
lods
jg
gs
enter
push
xorl
fdivrs
lahf
test
jae
cli
movsl
sub
fistpl
xor
movsl
jl
mov
push
sub
int3
inc
clc
nop
push
dec
xchg
or
cmp
inc
and
cmp
call
push
push
das
andb
inc
mov
ret
das
mul
aam
add
jge
inc
lods
fsts
ja
or
out
adc
hlt
lret
jbe
lods
mov
pop
das
movsb
cs
in
add
sbb
les
je
and
shlb
jg
adc
sbb
imull
mov
popf
movsb
jg
xlat
aam
cltd
sub
mov
inc
adc
out
jno
push
pusha
in
rorb
mov
cmpsb
push
xchg
stos
mov
mov
and
cmp
int3
cmpsb
mov
mov
notl
das
movsl
adc
out
mov
cmp
sbb
aam
pusha
jge
lret
adc
scas
xchg
fsts
cwtl
popf
cwtl
mov
inc
jp
out
ljmp
filds
pop
lcall
imul
push
in
lret
adcb
dec
mov
dec
adc
movl
jns
ds
ljmp
adcb
and
adc
cmp
andl
gs
enter
rol
mov
out
in
push
shl
jp
stos
mov
jge
mov
loope
inc
jnp
add
icebp
or
out
push
pop
fsubrp
out
jle
outsb
inc
cli
shll
cmp
mov
fsub
dec
pop
adc
ficoml
out
sub
cmpsb
mov
sarl
push
cmpsb
cmp
or
nop
aas
mov
test
mov
add
stos
adc
outsb
mov
jp
arpl
push
in
push
fmull
pop
adc
mov
lea
mov
in
add
jle
xchg
cmp
jb
aaa
inc
xchg
fwait
es
leave
sub
mov
pop
ja
push
bound
out
pop
inc
out
and
ljmp
mov
imul
out
fmul
dec
cld
jle
inc
sarl
push
shll
pop
out
mov
fchs
lret
inc
shl
pusha
xchg
mov
in
push
orl
fwait
mov
jne
repnz
fidivs
or
test
inc
push
dec
cmpsl
gs
mov
cmp
jp
sub
push
cmp
sbb
mov
cmpsb
dec
aam
mov
sub
xchg
lods
xchg
fistpl
or
push
in
js
out
adc
xor
sub
testl
sub
or
scas
lahf
push
mov
cmp
idiv
cmp
dec
xor
out
jo
loop
jbe
cmp
les
jb
ljmp
xchg
test
jo
into
cld
sub
cmpsb
popf
lahf
cltd
mov
in
mov
and
test
cwtl
aaa
mov
adc
outsl
pop
adc
out
xor
mov
add
xchg
xor
mov
sarl
cmp
aas
add
in
jnp
outsl
or
lret
aam
pop
mov
mov
mov
jae
ss
adc
and
lods
pop
out
push
in
cmc
je
mov
repnz
mov
adc
and
adc
stos
dec
mov
sub
iret
cwtl
xchg
mov
fisubrs
addr16
inc
jl
push
stc
inc
jmp
inc
inc
xchg
xchg
cmp
int
out
scas
imul
mov
jne
loope
dec
mov
inc
lea
xchg
mov
inc
or
pop
push
adc
daa
loop
lret
sub
fsts
jl
or
pop
inc
ds
mov
in
xchg
inc
in
dec
scas
jp
test
imul
mov
push
aam
popa
js
sub
fiadds
ss
sar
push
dec
push
sti
push
mov
test
mov
pop
scas
paddsw
xchg
lret
hlt
clc
in
ret
pop
push
or
int3
push
shl
dec
jp
les
xlat
cmpsl
sahf
mov
sbb
shll
mov
dec
adc
jmp
call
lea
testl
sub
das
cltd
bound
push
mov
aaa
inc
popf
stc
ss
jmp
aaa
movb
into
fwait
rorb
dec
sub
add
xchg
imul
in
int3
add
bound
psrlw
adc
aaa
xor
push
lret
cli
orb
rcrl
mov
push
loope
and
sub
cld
or
ja
adc
pop
sub
sbb
data16
cmp
pop
pop
out
adc
cmpsb
sub
cmp
imul
mov
cmpsb
dec
rcrb
mov
ret
lret
sub
mov
test
mov
ret
and
ffreep
fadds
jecxz
jne
mov
js
leave
rorb
jmp
jo
mov
cltd
gs
and
pop
out
lcall
mov
mov
mov
cmp
scas
and
jbe
sbb
mov
and
cmpb
jne
jb
repz
cmp
scas
xor
jo
fnstcw
pop
add
or
inc
loop
sbb
and
test
sub
arpl
add
enter
sbb
mov
fsubrl
xor
test
mov
les
loope
std
add
scas
inc
cmp
test
test
scas
lahf
or
sub
push
xor
pop
iret
fmuls
scas
stos
cs
aas
sub
jbe
rcr
fimull
mov
int
push
pop
xchg
mov
adc
jne
call
lods
dec
cmp
xor
ret
cld
gs
notl
lret
pop
in
sub
sub
cltd
xor
lcall
fistpl
jl
fs
cmp
adc
push
jp
test
fwait
jbe
push
icebp
mov
lock
sbb
fadds
mov
dec
mov
in
movsl
loopne
in
enter
push
in
sub
lahf
cmp
movsl
hlt
repz
pop
rorb
fiaddl
lahf
iret
lods
repz
pop
xchg
push
xor
inc
stc
push
sub
mov
je
mov
outsl
stos
pop
lods
mov
mov
push
test
popf
rcl
ljmp
dec
call
es
icebp
pusha
xlat
sub
ret
movsl
ret
cli
sbb
in
mov
add
dec
inc
or
lret
sbb
insb
scas
call
mov
or
ret
mov
dec
xchg
and
or
outsb
fadds
mov
and
jmp
xchg
inc
mov
stos
push
pop
addb
jl
aad
push
xchg
pcmpgtb
adcl
nop
aaa
stc
jo
fs
fldenv
sbb
sub
xchg
sub
lret
dec
dec
bound
xor
mov
int
mov
pop
cmp
fs
add
mov
pop
xor
idivl
lret
jns
lods
stc
pop
jmp
nop
mov
imul
ret
add
pop
mov
sbb
dec
sbb
daa
xchg
outsl
pusha
jp
popa
adc
xor
xchg
xor
cli
sbb
loopne
push
test
stos
fdivr
fisubl
inc
lret
push
xor
fadd
int
and
lods
jmp
ret
imul
mov
xchg
push
loope
in
loopne
icebp
lahf
mov
sbb
mov
in
xor
in
or
adc
js
fwait
add
aas
jns
in
pop
add
inc
ret
cmp
push
lock
mov
fimull
pop
lea
mov
fiadds
outsl
sbb
jge
scas
xchg
inc
jb
jb
and
adc
adc
fadd
call
jecxz
and
push
cmc
and
imul
js
sub
dec
mov
mov
jo
fwait
rcl
adc
mov
and
jmp
insl
xchg
jo
sub
imul
mov
xor
sbb
xchg
rolb
dec
rcll
loope
dec
sbb
pusha
push
int3
cmp
scas
fs
sbb
xlat
mov
pop
cmp
mov
jg
inc
sub
popa
shr
mov
jmp
or
scas
inc
pop
mov
xchg
add
mov
mov
ss
sbb
cld
dec
in
inc
lock
push
cmpsb
xchg
nop
cwtl
and
inc
jne
push
inc
cmpsb
int3
dec
and
loopne
cltd
push
or
out
add
and
mov
loopne
inc
add
pop
into
cmp
insb
pop
adc
inc
sti
mov
enter
lret
cmpsb
fcomps
jno
ja
xchg
fs
fbld
mov
pushl
int
fbld
je
xor
push
jno
mov
xor
push
lret
ret
push
loopne
loope
push
popf
jne
cmc
add
xlat
jmp
cwtl
loop
lahf
in
adc
xchg
in
rorl
add
add
incl
lods
in
jnp
and
pop
inc
mov
int3
fidivs
mov
loop
fists
lret
adc
jae
push
or
mov
or
jae
das
mov
cmp
shl
icebp
or
lea
sub
cmp
jge
or
lahf
mov
mov
xchg
lea
ret
mov
lahf
cmpsb
mov
pushf
hlt
pop
cwtl
cmp
test
outsb
dec
orb
fcmove
xchg
int
sbb
and
into
shlb
fwait
lock
mov
add
jo
inc
lret
sub
and
sbb
or
sbb
stos
sarb
cli
movaps
mov
rcl
gs
cmp
mov
mov
xor
and
or
sub
clc
dec
cmp
add
adc
or
xchg
hlt
rcll
xchg
cvtps2pd
shll
pop
fnsave
inc
mov
mov
mov
ds
imul
xor
fisttpl
adc
mov
dec
cmpsb
test
jg
xchg
sbb
and
inc
cmp
lret
push
in
mov
dec
xor
jmp
xchg
xchg
pusha
add
xor
sbb
arpl
push
out
xor
cmp
jecxz
cmp
ror
arpl
movsb
xchg
or
nop
movsb
leave
xchg
cmp
insb
inc
and
stc
mov
jno
test
test
inc
fdivs
sbb
push
mov
mov
dec
fwait
mov
and
imul
mov
push
dec
call
adc
mov
stos
outsb
xor
notl
cltd
adc
out
push
movsb
add
jmp
cs
push
push
pop
cwtl
sub
xchg
lods
pop
xor
dec
idivl
adc
jae
jg
sahf
movl
jae
adc
or
xor
mov
jle
cld
mov
pop
adc
scas
xchg
cmp
insl
test
stc
fs
test
or
jl
xchg
and
incb
xor
lods
cld
ljmp
and
stc
dec
sub
xor
dec
jns
push
jno
mov
scas
sbbb
in
clc
sbb
outsb
mov
cwtl
movsl
out
sub
sarl
jle
jp
repnz
mov
and
test
aas
std
jp
mov
xor
ja
lock
xchg
ficoms
jmp
repnz
aas
cmp
bound
stc
out
les
cld
xor
scas
adc
xchg
arpl
rcll
inc
push
shl
cltd
test
adc
mov
call
jle
insl
inc
adc
xchg
xor
mov
aas
mov
inc
addb
xlat
fisttpl
movsl
jp
nop
shrb
sbb
push
and
or
adc
push
andl
shrb
fnsave
fs
lret
test
int3
and
fstpt
push
shl
push
out
cltd
stc
add
mov
mov
or
cmpsb
xor
mov
dec
add
es
inc
mov
enter
and
mov
int3
fimuls
clc
mov
xchg
jg
ret
loope
into
xchg
andl
jg
mov
and
mov
mov
pop
mov
aad
push
cli
mov
mov
sub
cmp
scas
jo
and
hlt
js
xor
clc
push
or
push
lahf
push
or
mov
or
sub
cwtl
sarl
js
jnp
iret
dec
xor
testl
lcall
adc
loopne
jae
add
js
repnz
push
movsl
cli
mov
lret
inc
push
stos
fs
arpl
or
test
inc
mov
dec
mov
lea
arpl
sar
fisttpll
std
nop
mov
ds
add
push
jae
mov
mov
pop
mov
xor
sub
stos
pop
add
movzwl
icebp
call
nop
jl
outsl
pushf
fcomps
aad
movsb
in
in
data16
enter
pop
mov
and
xchg
xor
das
push
or
aaa
inc
push
inc
jl
aaa
in
je
adcb
lret
pop
enter
xor
mov
add
mov
pop
data16
pop
cmp
in
sbb
push
fstps
or
ret
mov
jb
dec
sub
dec
mov
jbe
and
push
daa
stos
jnp
loope
and
sub
mov
roll
mov
sbb
and
cmp
mov
push
lock
sub
jne
xchg
pop
push
sbb
mov
in
inc
mov
gs
aaa
int3
fidivl
xchg
xor
fld
cmc
mov
dec
fs
mov
out
es
rcr
push
push
cmc
jge
push
jnp
sub
sbb
mov
inc
test
mov
and
add
sbb
mov
xor
and
and
jp
out
pop
jg
stc
ja
cld
jl
sub
pop
arpl
dec
into
xor
fs
or
stos
push
mov
sub
cmpsb
adc
xor
and
pop
jb
adc
xor
dec
mov
movl
push
push
out
sti
pop
hlt
cmpsb
sahf
leave
loop
insl
and
push
xlat
or
inc
push
jecxz
sarl
adcl
lret
inc
push
pop
repnz
call
les
inc
movsb
fwait
cltd
pusha
test
int
jle
addr16
xlat
imul
les
ret
fbstp
es
xchg
add
popf
cmpsb
cmc
ja
xchg
lods
mov
test
lret
jle
and
mov
daa
mov
jg
xlat
addr16
fidivrl
mov
repz
stc
pop
add
pushf
add
mov
mov
inc
popa
inc
shrb
notl
ss
dec
push
jae
adc
mov
mov
shl
push
jle
dec
mov
jae
aam
fistl
imul
out
push
lock
enter
mov
bnd
ficoml
mov
add
dec
sbb
push
jns
or
and
add
lods
pop
inc
jno
stc
and
fisubl
jge
mov
inc
cmpb
rcrl
pop
jns
repnz
sbb
mov
push
insb
repnz
push
mov
pop
xor
or
jg
or
rcr
mov
cmpsb
xor
xor
loopne
jp
cmp
lea
push
enter
out
cmp
scas
pop
lods
pusha
or
jle
cwtl
rcr
xor
lods
loop
jle
ret
aam
mov
ljmp
and
xlat
hlt
pop
shrl
add
in
test
mov
sahf
mov
push
pushf
imull
cltd
inc
mov
dec
or
dec
daa
cltd
inc
xchg
andb
pop
dec
push
mov
ja
pop
add
cmp
push
xor
add
in
or
inc
fst
bnd
ss
lock
popf
pushf
scas
push
adc
cwtl
mov
jmp
ja
es
shr
adc
pop
imul
mov
addb
sbb
inc
sub
lods
inc
js
out
ret
in
out
ret
aaa
xor
add
out
inc
fmull
cmp
sahf
test
and
adc
mov
mov
aam
pop
or
sub
mov
cmp
test
jne
jle
sbb
or
add
in
sub
fdivp
mov
rorb
daa
push
repz
cli
gs
mov
adc
cmpsl
inc
mov
mov
xchg
loopne
shlb
dec
inc
imul
xchg
xor
inc
clc
or
shr
mov
iret
jp
dec
adc
xor
in
jnp
es
aam
sub
aaa
push
mov
orl
add
cmp
leave
and
dec
xor
les
push
adc
push
push
and
sub
push
ja
insb
fnstenv
cmp
pop
mov
les
mov
test
sbb
aas
aam
cmovbe
inc
sbb
rorb
xchg
ja
pop
rclb
push
and
jbe
dec
mov
syscall
push
sub
out
cmp
inc
jl
sbb
andb
jo
cli
adc
ja
andb
ljmp
pop
sbb
mov
mov
lods
jnp
mov
mov
lret
leave
ja
mov
cmp
xor
push
aad
add
out
out
std
xchg
movsl
aam
fisttps
pop
stos
rorl
lret
int3
loope
maxps
icebp
cwtl
pop
nop
pop
push
sti
xor
out
pop
lcall
jne
mov
xor
aam
nop
jb
scas
mov
sar
mov
and
fdivrl
lcall
int3
ljmp
xchg
in
fnsave
aaa
jae
movsl
fdiv
push
shrb
aas
add
es
aad
test
imul
and
or
xchg
cwtl
or
in
push
jno
loopne
xor
ret
into
cmpsb
pusha
ds
sbb
pop
out
pop
outsb
pop
xor
jmp
cli
std
leave
in
xlat
add
imul
sbb
daa
mov
addr16
cmp
jecxz
nop
and
jl
dec
mov
lahf
xchg
sub
out
nop
stc
sbb
add
pusha
lcall
shll
jae
inc
insl
or
jae
cmp
push
lock
imul
popf
mov
repnz
mov
jne
jl
repnz
adc
and
or
pop
lcall
adc
pop
mov
mov
push
jge
sbb
cmp
mov
lods
aad
sub
pop
mov
fcoms
jp
into
test
inc
shlb
dec
xchg
jns
mov
outsl
xchg
or
aad
lock
sbb
adc
dec
xor
inc
cli
pop
enter
push
dec
loopne
jp
js
sti
jl
mov
cmpb
or
jo
cmp
pop
iret
cwtl
pop
mov
sub
push
ret
add
test
rorl
mov
in
fstps
lret
xchg
and
sub
mov
or
into
add
out
push
lret
mov
inc
pushf
cmp
inc
lret
jle
lods
push
outsb
ds
sti
xchg
fisubrs
pop
les
push
imul
pop
adc
fldenv
cltd
push
add
push
les
loop
in
ljmp
add
in
hlt
inc
sub
ret
fisttps
dec
inc
push
sub
cmp
clc
popf
and
xor
mov
roll
jl
inc
xchg
or
ficoml
adc
push
mov
mov
adc
repnz
shlb
hlt
test
mov
je
push
and
sti
jmp
sti
xchg
lahf
fadds
push
push
pusha
jle
or
xchg
dec
stos
xchg
xchg
ljmp
fildl
mov
test
fstps
mov
push
mov
push
dec
xor
daa
cmp
xor
lret
push
xchg
out
mov
mov
int
fdivr
xchg
lahf
in
inc
cltd
call
insl
sarb
clc
pop
add
rorb
lds
int3
pop
bound
xchg
adc
add
mov
xor
insl
lods
jmp
cmp
inc
xor
pop
xchg
lret
jns
adc
cld
int3
mov
lret
mov
and
aam
push
mov
dec
out
scas
insb
loop
mov
mov
mov
in
insb
or
cmc
mov
dec
sub
in
dec
lea
add
ljmp
jae
shr
inc
lea
fsubr
out
int3
js
popa
xchg
mov
adc
mov
std
inc
stos
in
sti
mov
into
xlat
sub
xor
xchg
iret
pop
push
sbb
test
sub
sbb
add
dec
sub
and
jbe
dec
subb
jle
jb
das
sbb
ds
jno
and
ja
imul
lock
inc
out
mov
les
fldenv
inc
fs
add
push
mov
or
in
sbb
adc
int
in
mov
rolb
mov
adc
repz
xor
sbb
fucomi
clc
dec
mov
inc
enter
inc
jmp
popa
xchg
pop
mov
jae
or
iret
fstpl
insb
push
xor
roll
enter
jns
imul
mov
mov
pop
jle
mov
lods
jmp
cmpsb
flds
cmp
sub
jp
test
ret
scas
mov
clc
addb
adc
mov
insb
mov
sti
fcomp
pop
push
dec
and
into
add
sahf
add
adc
lods
push
mov
repz
mov
jbe
mov
and
mov
sbb
insb
pop
mov
hlt
mov
mov
insl
or
sbb
pop
arpl
sub
add
cltd
ss
sbb
aas
cmp
jns
cmpl
fnstsw
dec
add
outsl
add
bound
mov
scas
pop
xlat
shlb
pop
mov
pusha
add
test
mov
mov
lcall
add
sbb
movsl
sub
pop
inc
hlt
lret
vpshab
test
dec
lret
or
cmp
jo
test
aad
in
pop
cmpsl
movsb
ljmp
ljmp
out
jg
in
xchg
mov
gs
repz
loop
cmp
jno
ret
in
sub
andb
xchg
xchg
aaa
rcrb
sti
mov
flds
xor
lret
and
inc
and
pop
cltd
pop
and
mov
andl
jmp
add
cmp
xor
push
aam
jmp
push
movsl
int3
rcrl
test
and
fwait
adc
test
or
mov
mov
adc
ret
mov
or
mov
ret
je
push
jns
jbe
fisubs
sub
jnp
gs
mov
scas
push
repz
sub
and
adc
mov
mov
repz
stos
jbe
push
cmpsb
sub
aaa
sub
sub
mov
arpl
xor
std
mov
icebp
dec
into
push
cmp
mov
ja
in
lea
aaa
inc
xchg
xchg
xlat
sbb
push
pop
aam
and
pushf
and
stos
jb
and
arpl
dec
add
out
test
scas
test
mov
push
xchg
fwait
rol
cld
jb
adc
push
mov
aaa
and
inc
dec
addb
xchg
mov
mov
mov
mov
call
outsb
popa
aam
shrb
mov
xchg
sub
mov
cmc
int3
lcall
jnp
mov
adc
pop
pop
pop
and
push
imul
xor
not
outsl
dec
adc
jmp
pop
xchg
lcall
das
hlt
lds
adc
push
sbb
mov
stos
fcmovnbe
lcall
imul
push
lea
and
popa
inc
mov
cmp
xchg
insb
cmp
ficoms
fimuls
jne
push
cmp
loop
in
and
xchg
xorb
cmp
fstl
test
mov
lcall
xchg
dec
lret
and
jnp
aaa
gs
mul
add
jno
sub
push
inc
cltd
insb
bound
xlat
jecxz
xor
xchg
inc
mov
jnp
rcll
mov
int3
push
xor
scas
fyl2xp1
gs
js
xor
add
jecxz
lahf
or
jne
dec
xor
ds
std
cmc
mov
lods
stc
jno
adc
in
fwait
push
cmp
outsl
mov
add
cmc
repz
mov
dec
fucom
xchg
or
test
andb
inc
imul
outsl
mov
jnp
in
sbb
push
mov
cmc
stc
scas
dec
pop
les
loopne
or
jecxz
adc
adc
dec
xor
clc
daa
in
lcall
cld
shrl
cmp
adcb
adc
xchg
dec
sbb
adc
cmpsb
mov
xchg
cmp
inc
stc
adc
push
jg
loope
or
cmp
cltd
cwtl
dec
leave
adc
mov
mov
xor
dec
or
lcall
aas
fstpt
mov
js
mov
sbb
outsb
inc
xchg
inc
pop
sbb
add
mov
movsb
pop
adc
mov
xchg
xchg
rol
pop
test
lds
in
mov
popa
paddd
and
das
mov
stc
mov
pop
mov
adcl
les
lods
jne
mov
jmp
ret
mov
in
jmp
divb
pop
test
pop
mov
pop
test
out
cmp
sbb
xor
xchg
adc
fdivl
mov
cmc
lods
aaa
shrb
jg
mov
movsb
out
rcrl
and
dec
cltd
cmpsb
xchg
push
mov
cld
jmp
mov
adc
and
and
push
and
push
mov
daa
scas
jle
test
pop
xchg
aas
adc
lea
sub
fsin
pusha
xchg
xor
fcomps
inc
xchg
test
push
dec
js
or
jmp
into
add
dec
xor
cmp
adc
lret
fcompl
lods
mov
dec
mov
add
ljmp
testl
stos
je
sub
mov
mov
add
mov
lahf
add
gs
ret
lock
dec
lods
std
int
fs
outsl
adc
mov
xchg
das
out
mov
sbb
lret
cmp
and
fisubrl
jecxz
pop
push
xchg
mov
dec
sbb
sub
lcall
push
data16
mov
leave
lcall
cmpsb
xor
fucompp
push
xchg
cli
les
movl
je
xlat
pop
push
xor
jbe
sub
sbb
orb
leave
in
jbe
int
dec
inc
jecxz
xchg
testb
aaa
or
hlt
push
lods
fwait
adc
mov
mov
or
add
pop
movsb
icebp
sahf
jecxz
mov
lods
inc
aas
ret
or
mov
ret
jae
cmc
mov
and
popa
dec
addb
in
mov
xchg
ljmp
scas
adc
lock
das
out
push
repz
add
ds
data16
jmp
jp
mov
sar
mov
repz
outsb
lcall
cmpsb
fbstp
dec
mov
xor
aam
fisubrs
les
sahf
pop
pop
data16
adc
movsl
push
and
loope
or
shlb
and
mov
pop
mov
push
mov
cmpsl
cmpsl
call
mov
xchg
cmp
int
clc
inc
pop
pusha
mull
sbb
cmpsb
mov
dec
and
push
dec
pop
pushf
in
push
sub
jb
pop
fsubl
lea
push
insb
pop
pop
or
out
lock
clc
mov
inc
in
fs
lods
dec
iret
push
inc
stc
jnp
mov
jge
pop
xchg
cld
in
lret
lds
sub
aaa
aam
out
push
sbb
adc
fnstenv
sar
mov
in
enter
fwait
or
sub
mov
mov
pop
shrl
aam
cmpsb
add
call
cmc
cltd
out
movsl
xchg
push
or
cmp
popl
cld
sub
pop
jmp
shll
lret
xor
daa
mov
loop
push
lods
cmp
les
push
mov
mov
push
mov
push
or
jmp
pushf
aam
adc
sbb
jp
fiaddl
pop
inc
or
inc
dec
rcrl
les
sbb
cmc
clc
sbb
andb
call
add
mov
ret
jle
sub
std
jecxz
data16
mov
scas
test
mov
push
cltd
mov
sub
jnp
jne
leavew
jns
pop
sbb
gs
xchg
cmp
mov
cmp
ss
xor
xchg
or
pop
xchg
adc
out
mov
movsb
push
test
rorl
mov
push
sahf
cltd
dec
loopne
out
in
enter
adc
xor
mov
cmp
cmpsl
adc
xchg
in
insb
std
filds
lret
incb
pop
int
pop
xor
test
cli
xlat
dec
stos
lock
cmp
lret
mulb
fwait
dec
pop
mov
jae
lcall
les
or
sbbb
cld
daa
adc
ljmp
push
pop
addb
jp
stc
hlt
jecxz
xor
lock
or
and
or
lret
hlt
addr16
push
inc
jb
mov
mov
add
sbb
mov
out
mov
popa
out
push
movsl
cli
sahf
ficompl
pop
lods
xchg
add
mov
mov
cmp
xchg
mov
js
movsl
adc
push
dec
dec
or
pop
test
adc
in
xor
lods
outsb
into
dec
daa
sbb
mov
sub
push
les
cltd
cltd
into
jo
in
ds
xor
inc
lods
and
sub
outsl
int
fildl
xor
in
dec
fwait
mov
sbb
in
inc
repz
xor
push
hlt
fs
jp
add
sub
imulb
inc
test
and
fnstsw
mov
clc
daa
mov
das
dec
pop
lds
mov
sbb
inc
int3
dec
pop
mov
cmp
xor
stos
icebp
cmp
cmpsl
xchg
cmp
loop
mov
jle
add
jge
mov
scas
inc
mov
mov
cmpsl
dec
mov
fldt
insb
sbb
int
ja
mov
push
lods
mov
addr16
pop
adc
dec
adc
or
nop
jno
shrb
arpl
fstl
sbb
inc
lods
jge
push
sbbb
shrl
xor
pop
shll
mov
mov
and
test
jp
dec
fyl2x
add
mov
mov
jle
lds
aam
adc
stos
xchg
inc
faddl
sbb
pop
vsqrtsd
mov
mov
fmuls
jns
push
ss
cmp
out
adc
push
out
das
fmuls
sbb
or
hlt
cwtl
pusha
and
cmp
sub
jge
cmc
xor
out
jne
sbb
lret
cltd
pop
push
fadds
xorl
pushf
adc
pop
push
je,pn
push
mov
and
push
jo,pt
sahf
push
cmpb
jp
mov
outsl
jle
xor
nop
fdivs
cwtl
bound
cltd
repz
jp
cmp
inc
ret
gs
sub
jno
aad
bound
andl
mov
xchg
adc
test
mov
outsb
iret
rcpps
aad
xlat
pop
mov
aaa
int3
mov
les
int
in
pop
or
sub
bound
loopne
mulb
rorl
andl
add
lea
mov
int3
sbb
dec
fwait
inc
pop
adc
mov
test
in
mov
jb
cwtl
stos
inc
cld
js
mov
cs
cli
sub
cmp
dec
out
in
pop
sahf
inc
push
div
lds
shlb
les
orl
inc
test
dec
mov
jl
pop
xchg
and
inc
int
outsb
xor
pop
xchg
cmp
cmpsb
outsb
cmp
lods
sub
mov
cmp
mov
xor
in
dec
imul
mov
incb
push
sub
adc
ljmp
pusha
loopne
mov
xor
add
addr16
jl
xchg
sub
cmpsl
in
js
icebp
jbe
cltd
xor
jae
iret
stos
cmpl
mov
xchg
and
insb
sbb
cld
add
mov
cmp
out
pop
mov
cmp
test
push
pop
xchg
outsb
js
test
outsb
out
xchg
jecxz
sahf
daa
lret
pop
xor
ds
cmp
pop
stc
imul
xor
aas
std
pop
cmc
sbb
out
mov
pop
inc
aad
fcmovu
enter
xlat
dec
mov
mov
adc
push
popf
jecxz
movsl
in
mov
pop
rorb
dec
lods
dec
js
sarl
notl
or
aas
sub
in
adc
shl
ja
call
add
pushf
fldl
stos
or
mov
lret
lea
and
jge
mov
jl
mov
pushf
and
lret
divl
pop
fwait
das
aam
pushf
xchg
pop
out
out
pop
enter
test
bound
mov
jle
sub
pop
ljmp
lahf
sahf
lret
mov
fimull
ja
in
lret
movsb
test
and
cmp
inc
push
cmp
pop
or
xor
mov
mov
lods
mov
cmp
insl
fstl
xlat
mov
shl
rcl
call
and
int
shll
sub
fcompl
pushf
and
inc
js
xor
aaa
shll
dec
dec
push
cmp
stos
lret
mov
add
je
inc
cli
imul
shr
testl
call
sbb
fwait
dec
movsl
addr16
mov
imul
xor
fadd
fisttps
xchg
inc
push
fucomi
add
imul
int3
repz
in
cmp
bound
and
sub
jnp
sti
imul
inc
push
jae
sbb
lock
jo
jnp
xor
xchg
stos
fsubrp
sbb
out
sub
fwait
push
adc
dec
mov
sbb
jecxz
ror
aad
inc
lods
pushf
add
out
jge
push
mov
push
repnz
aaa
pop
fisttpll
cs
mov
or
xor
mov
pusha
cmc
xchg
and
fwait
ds
imul
fildl
push
mov
mov
ffreep
pop
ljmp
jmp
xlat
orb
sti
mov
insl
aas
mov
jecxz
push
nop
insl
pop
inc
push
inc
dec
movsb
ja
jge
fucomip
test
btr
test
add
xor
fildll
popf
cmp
aaa
jle
fs
inc
movsb
mov
jnp
stos
and
mov
lock
push
mov
mov
jb
insb
pop
mov
shl
in
aaa
fimuls
test
aam
xor
pop
mov
push
mov
gs
xor
and
pop
pop
xchg
jmp
mov
sbbb
jp
je
test
stc
mov
addb
mov
mov
stc
sbb
inc
call
cmpsl
xlat
pop
jo
push
sahf
icebp
push
movsl
xchg
aad
pop
push
and
addr16
mov
mov
jbe
add
mov
adc
in
sbb
xchg
js
je
icebp
pop
inc
scas
out
push
pop
pop
dec
std
sub
push
incl
fnstenv
dec
pop
xor
or
sub
fucomip
repz
and
xor
ret
icebp
push
fldenv
lds
cmpsb
and
jb
rolb
rolb
mov
push
movb
or
mov
shrb
in
cmpsl
pop
lds
cwtl
ret
and
fldl
call
lcall
arpl
hlt
xchg
lcall
shlb
sbb
xchg
cmc
xor
or
pop
jae
or
hlt
push
sub
jl
and
inc
iret
mov
repz
aaa
inc
mov
inc
enter
inc
int3
in
movsb
cmpsl
push
fimull
xor
ret
lods
jmp
arpl
inc
dec
imul
daa
pop
lret
stos
add
dec
stc
jb
mov
xchg
enter
jp
in
cmp
mov
add
adcl
xor
cmpsl
or
add
mov
and
add
sti
dec
inc
adc
movsb
scas
sub
sbb
icebp
cmp
mov
adc
or
or
outsl
es
push
push
cmp
push
jp
inc
test
movsb
xchg
das
dec
idivl
outsb
mov
fcomps
enter
sub
pop
cld
cwtl
pushf
mov
sub
fsubrl
xchg
test
pop
push
or
subl
pop
shl
in
pop
pop
push
add
or
xlat
mov
mov
sbb
mov
ret
lret
jl
pop
testl
pop
adc
push
test
filds
mov
fdivl
sub
mov
lahf
mov
popf
movsl
xchg
inc
aaa
out
jns
aad
rorl
xchg
std
aaa
or
add
add
fwait
jno
lcall
or
mov
in
data16
pop
xchg
cwtl
cmc
fstpt
jmp
fs
fisttpll
pop
inc
or
fsub
and
sarb
push
fwait
and
aaa
xchg
dec
pop
xor
inc
and
mov
std
ss
aam
fstpt
inc
test
xchg
push
xchg
scas
or
jae
mov
adc
inc
or
mov
test
jecxz
sbb
push
adc
movl
or
xchg
scas
xchg
xor
cmpsl
add
insl
jmp
mov
in
mov
xlat
inc
in
xchg
inc
sbb
xor
xchg
fsts
cli
or
mov
and
lods
sbb
in
aaa
lcall
addr16
push
popa
icebp
xchg
popf
mov
jp,pn
int
out
out
mov
push
lds
out
jmp
push
push
mov
cmpl
loop
sub
fldt
jge
cmpsl
mov
mov
in
mov
repz
aad
mov
jle
mov
push
adc
jp
in
sub
xchg
shll
sub
cmp
cmpsb
clc
test
push
lds
xor
aaa
inc
xchg
mov
inc
iret
push
int
lret
mov
ret
das
ret
imul
in
repz
leave
lcall
loopne
sbb
setno
sbb
ret
push
call
inc
jb
fwait
dec
and
ljmp
jno
ds
sbb
lock
push
loope
mov
dec
cmp
mov
pop
cmp
in
inc
in
add
test
sbb
inc
repz
scas
dec
fidivl
cltd
es
jecxz
mov
cli
fwait
lret
push
lahf
inc
sbb
sbbb
scas
cmp
mov
mov
addr16
xchg
xchg
xor
fwait
out
fprem1
xorb
testb
jmp
jns
out
mov
or
les
pop
and
xor
cmc
cmp
cmpsb
fsubrs
icebp
lret
xor
mov
sbb
icebp
scas
mov
sub
pop
leave
pop
hlt
imul
imul
mov
cmp
test
ret
and
orl
sbb
fisttpl
frstor
test
pop
sbbb
sahf
insl
dec
push
enter
dec
ds
xor
sar
loop
fcomip
sti
test
and
xchg
pop
xor
mov
mov
sbb
xchg
ja
stos
in
out
pop
in
xor
push
ds
popf
cs
adc
pop
in
xchg
cmp
mov
push
lret
sub
dec
mov
add
dec
sbb
pushf
or
jge
mov
push
das
lds
icebp
dec
pop
jnp
test
ja
xor
jmp
dec
out
icebp
jne
xlat
lds
jmp
xchg
jecxz
mov
push
inc
xchg
cwtl
mov
les
setne
sub
movsb
xchg
fidivrs
mov
fs
mov
leave
mov
xor
mov
mov
ss
mov
sar
dec
arpl
mov
aam
jno
push
add
movsl
mov
repz
add
pop
scas
aas
mov
cmp
jae
push
fs
xchg
xor
xor
das
mov
imul
bound
jl
insl
fisubrs
aaa
and
lret
aaa
inc
adc
mov
movb
cltd
cmpl
xlat
mov
insb
fmuls
aam
lret
mov
mov
mov
cmp
pop
or
cmpsb
test
add
dec
pop
cmp
push
dec
mov
inc
int
and
add
dec
and
icebp
xchg
lcall
xchg
xor
add
inc
gs
sub
and
nop
inc
inc
out
adc
xor
or
pop
loop
dec
popl
fistps
push
ljmp
lgs
sub
pop
es
push
imul
imul
cmp
loopne
push
loop
movsb
pop
lcall
push
aaa
jmp
mov
mov
je
cmpsw
pop
sbb
xchg
dec
adcb
sbb
jmp
scas
nop
int3
push
scas
inc
cld
jecxz
popf
enter
inc
mov
and
pop
mov
popa
mov
push
jo
lret
adc
push
add
rorb
mov
jae
in
xchg
inc
imul
lods
iret
nop
or
xchg
cmp
testl
adc
adc
mov
repnz
fisubrs
inc
aas
push
negb
mov
insl
pop
lods
mov
inc
aas
pop
inc
or
loope
jg
stc
inc
lock
push
js
mov
cld
dec
lahf
out
lret
push
and
pusha
mov
mov
mov
push
and
je
data16
out
mov
xchg
insb
addr16
stos
cmp
cli
fsubr
ja
test
or
stos
sbb
jmp
repz
pop
lret
js
call
imulb
into
sbb
inc
icebp
push
mov
fistpll
and
ja
push
in
lods
stc
and
adc
in
jl
push
mov
xchg
cwtl
dec
push
add
mov
sub
jnp
xor
mov
stc
mov
push
cmpsb
jmp
lea
and
popf
cs
mov
jo
xchg
daa
mov
push
mov
jnp
sahf
mov
inc
pop
or
addr16
cmp
sub
ror
pop
repz
mov
fidivrs
xchg
lods
xchg
xchg
std
dec
test
rcrb
adcl
pop
orb
cmp
nop
lods
sub
xchg
fwait
pushf
or
iret
or
push
inc
xor
xor
adc
lods
cmp
call
inc
mov
imul
jae
cmp
repnz
jno
iret
nop
jne
xchg
in
and
pusha
adc
mov
shrl
lahf
or
stos
xor
dec
push
lock
xor
jg
inc
mov
push
orl
cs
sbb
push
push
jge
leave
and
ret
rcrb
iret
stc
aam
xchg
and
pop
outsl
int3
fnstcw
iret
pop
aaa
add
adc
mov
adc
loopne
aad
jmp
xchg
jecxz
idivl
fidivl
sti
dec
push
sub
jle
mov
xor
ret
inc
dec
adc
scas
add
lret
cmp
xchg
or
orb
icebp
xor
pushf
call
push
out
insb
popa
inc
and
mov
in
adc
and
loope
int
nop
mov
pop
rorl
xchg
pop
jle
dec
stc
aas
sub
dec
hlt
fwait
adc
fisubs
aaa
movsb
mov
pop
add
outsl
outsb
leave
ret
fisttps
fwait
cmp
push
sar
cmpb
fsubs
addb
mov
dec
movsb
jge
sub
xchg
inc
out
and
stos
outsb
push
inc
sbb
cmp
adc
inc
and
mov
imul
cmpl
pop
fistps
iret
sbb
mov
sahf
lock
scas
inc
sub
imul
mov
lods
xor
shlb
push
mov
into
inc
mov
inc
mov
or
popa
call
mov
fadds
pop
aad
sub
lock
lds
popf
mov
pop
pop
push
sbb
orb
push
int
mov
jmp
xchg
adc
sbb
or
cmpl
sub
pop
cmpsb
adc
sbb
jmp
jne
xchg
dec
test
ja
jecxz
adc
lds
inc
cmp
jl
push
or
stos
xchg
jae
test
es
jl
and
in
ficoml
dec
or
dec
int3
int3
cmpsl
clc
push
cli
pop
movsb
mov
or
clc
sbb
xchg
jnp
inc
std
stos
sar
int3
sbb
sub
in
shrb
aas
clc
lret
jmp
mov
xor
cmc
inc
or
cmp
pop
inc
rorl
cmp
dec
mov
xor
roll
mov
cmp
jne
jmp
mov
adc
scas
mov
xchg
jae
push
cli
iret
mov
fidivrs
fcomi
pop
leave
popf
scas
mov
outsb
or
movsl
cmp
jno
xor
es
jae
dec
cld
mov
icebp
repz
fdivrs
add
or
mov
pusha
movsl
repnz
insb
or
xchg
jb
push
ja
cmp
in
jnp
xor
lods
adc
loope
jo
xor
fwait
inc
js
je
adc
out
bound
mov
pop
cmpsl
push
xchg
dec
xor
fwait
movsb
pop
add
or
in
js,pn
jp
cli
lock
fwait
xor
xchg
xor
movsl
inc
out
out
dec
add
cmc
cwtl
add
push
inc
repnz
insb
cmp
imul
dec
aad
mov
push
xor
pusha
add
lea
cmp
inc
call
xchg
incl
xor
adc
sbb
pop
mov
xor
notb
lods
adc
ss
mov
pop
sub
or
fstpl
js
enter
adc
inc
adc
sub
js
addr16
sub
inc
adc
sahf
inc
movsl
rorl
and
insl
xchg
pop
in
mov
mov
loop
mov
int
lahf
jecxz
jno
in
cmp
in
cmp
jecxz
lods
and
insb
movsb
insl
lods
leave
xchg
cltd
cmp
mov
xor
call
or
jle
or
sub
mov
or
jecxz
sub
sub
jle
xchg
or
cli
pop
out
jge
xor
jnp
adc
add
icebp
jl
ja
fs
test
push
inc
sub
enter
mov
stos
jae
dec
into
cmp
repz
out
jge
push
mov
addl
mov
mov
repz
imul
pop
add
jg
scas
and
data16
mov
mov
sti
sub
push
adc
and
dec
push
mov
es
mov
stc
ret
out
shr
mov
or
lret
fadds
cmp
xor
mov
stos
cs
cmp
push
or
ja
cmpsb
cmp
lcall
sahf
lret
xchg
xor
jmp
sti
and
je
popa
lock
mov
test
jp
gs
mov
sar
dec
mov
mov
pop
adcl
push
and
mov
rorl
xor
imul
jo
xor
test
adc
sahf
fimull
push
adc
mov
ljmp
jle
xor
lds
xor
cmp
arpl
in
das
pop
cltd
int3
aam
cwtl
inc
scas
fistps
rol
test
int3
je
push
mov
pop
hlt
inc
mov
mov
pop
push
iret
and
jno,pt
and
idivl
pop
sbb
jp
push
push
hlt
add
sbb
fstpl
movsl
je
dec
jnp
call
pop
pop
or
pop
push
inc
adc
cwtl
sti
and
xchg
or
inc
scas
add
pop
cmp
sbb
cltd
pop
mov
cmpsl
pop
test
xchg
jl
and
add
nop
push
stos
xor
push
xchg
scas
or
cltd
add
fldenv
out
dec
add
lea
push
cli
cli
clc
fmuls
in
sub
or
outsb
mov
movsb
mov
dec
addl
mov
and
aad
lcall
nop
shll
jecxz
nop
insb
cmp
or
sub
mov
jb
jno
icebp
enter
adc
jge
outsl
sub
addr16
orb
call
mov
jbe
aad
nop
mov
sbb
and
ss
mov
inc
addr16
mov
in
imul
xchg
daa
add
jno
xor
push
test
and
shlb
cmp
xor
cld
sbb
cwtl
outsl
adc
addr16
and
sbb
xor
xchg
dec
mov
jnp
or
mov
rcrb
push
add
es
cmp
lods
pop
mov
mov
sbb
mov
xchg
dec
push
sahf
cmp
decl
aam
cmpsl
dec
sar
test
in
dec
cmp
pop
inc
mov
imul
movsb
or
or
xor
fmuls
leave
je
xor
adc
dec
clc
mov
push
xchg
jo
cli
xchg
and
pushf
mov
imul
and
xchg
lods
mov
push
lcall
xlat
into
sbbb
std
test
insl
shl
icebp
sub
dec
jecxz
pop
arpl
ret
cmp
and
int3
adc
imul
mov
pop
or
inc
mov
xor
aad
inc
xor
lods
xchg
mov
add
adc
shrl
test
xchg
arpl
rol
out
mov
std
ret
int3
fwait
out
sbb
lds
imul
cmpl
xchg
daa
ss
out
shrb
push
lods
sbb
and
fdiv
std
loope
push
or
mov
in
ds
js
xorb
mov
cmp
clc
mov
sbb
pop
adc
adc
mov
pusha
xchg
das
loope
loope
int3
cli
mov
imul
out
roll
sbb
outsl
leave
stos
xchg
ret
and
mov
out
js
incl
pop
test
add
mov
outsb
mov
incl
mov
sbb
push
xor
cwtl
outsb
ret
sbb
test
xchg
pop
xor
pushf
jge
xor
xor
arpl
aas
mov
lods
dec
or
test
push
add
movsl
lods
inc
das
pop
jle
xor
push
cmp
push
xchg
imul
jbe
push
das
dec
xchg
push
dec
movsb
cmp
lcall
sti
add
stc
lahf
leave
mov
or
ds
mov
lret
mov
mov
leave
adc
lock
add
jecxz
and
cmpsb
dec
jl
adc
add
sti
jne
aam
loopne
add
pop
subb
sub
rclb
add
inc
daa
jg
jl
scas
mov
insb
mov
dec
aaa
inc
orb
call
fcompl
sti
je
lock
out
je
int
daa
mov
cmp
sub
stos
cmc
cmp
mov
add
mov
inc
push
pop
mov
adc
sbb
jbe
pop
addl
stos
xchg
je
rol
adc
test
frstor
mov
cwtl
in
push
mov
jo
xchg
sub
in
dec
cmp
imul
push
in
sub
sbb
or
pop
je
lret
add
out
sti
loope
push
and
cmp
lahf
jae
hlt
mov
cmp
cmp
or
push
inc
dec
pop
pop
int
les
adc
iret
and
pushf
nop
iret
adc
mov
xchg
out
sub
bound
dec
sub
std
fcmovbe
jg
stc
sub
xlat
cmp
fsubp
rclb
mov
pusha
xor
sbb
push
xor
sbb
sub
push
sbb
mov
cmp
aam
sub
js
out
das
hlt
sbb
cltd
jl
mov
pop
je
hlt
outsb
fists
inc
jmp
mov
out
mov
mov
jns
fs
jbe
push
sbb
adc
mov
popf
rcll
pop
inc
cmp
push
popa
sbb
out
fsubrp
add
fisubl
xlat
out
hlt
shll
popa
popa
test
daa
mov
outsb
mov
adc
add
mov
lods
cmp
fwait
mov
leave
xor
rcrb
je
add
ss
xor
test
push
stc
sbb
xor
cmp
je
jl
cmp
or
ja
in
sbb
aam
inc
add
mov
fwait
sub
test
cmp
rol
dec
or
mov
mov
cld
sbb
into
and
sub
mov
fcomi
and
or
cmp
in
icebp
lods
push
pop
sbbl
leave
mul
iret
dec
push
std
cmp
inc
mov
mov
push
mov
add
int
mov
fistps
mov
jle
ret
jno
stos
nop
pop
cmp
aaa
push
and
adc
jbe
xor
stos
mov
mov
push
sub
pop
shlb
and
ret
pusha
pop
popa
cmp
or
lahf
mov
addb
push
ret
jno
mov
jl
add
imul
jbe
ds
dec
fnstsw
inc
sub
sub
or
insb
push
jmp
xchg
pop
xor
adc
ja
pushf
rcrb
mov
lods
sbb
sysret
and
mov
dec
push
jmp
xor
or
leave
adcl
jl
loope
test
test
lcall
ss
aad
or
mov
data16
out
jbe
xor
test
cli
loopne
mov
jae
lahf
leave
out
push
mov
scas
sbb
in
and
xor
adc
pop
in
cmpsb
in
leave
sbb
xor
vmovlpd
clc
mov
shrl
inc
lock
cmp
mov
inc
outsl
movsl
jo
mov
add
add
mov
jno
adc
or
je
mov
pop
xchg
pop
pusha
cmpb
in
or
into
add
mov
bound
mov
rorl
cmp
mov
call
leave
xchg
aam
pop
out
pop
mov
inc
jmp
jle
or
cwtl
jae
inc
xchg
jbe
add
fidivs
sub
mov
pop
push
std
cmp
mov
dec
orl
xor
push
sbb
cmp
test
add
push
push
test
imul
out
gs
outsl
jno
fdivrp
sahf
push
push
pop
mov
stc
test
ja
fsubrl
call
push
pusha
push
rcrl
lds
mov
mov
sub
pop
push
imul
ror
loop
add
inc
enter
nop
fwait
mov
and
insl
outsb
mov
mov
pop
dec
sar
mov
pop
jno
inc
sbb
jmp
push
lods
mov
sub
pusha
pop
cmpb
int
pop
push
mov
fcomps
lea
push
out
push
rcrb
xchg
mov
loopne
pop
loope
mov
stc
pop
pop
fnsave
inc
mov
xor
push
jg
push
int
dec
int
cmp
int3
or
inc
daa
outsb
sbb
insl
mov
cmp
jle
imul
movsl
mov
xchg
test
fnsave
mov
pop
dec
setge
mov
mov
jae
mov
les
adc
xchg
add
sarl
adc
adc
dec
out
ret
dec
aad
jg
rcll
fadds
lds
pop
pop
pop
sub
int3
push
cwtl
adc
push
xchg
add
push
aam
lret
ficompl
add
lock
out
dec
add
pop
xchg
shll
cmp
lods
int
out
inc
and
cwtl
js
jb
pushf
dec
or
inc
xor
xlat
mov
push
sbb
fcoml
xchg
fnstenv
lahf
cmp
fbld
gs
lahf
add
or
std
sbb
mov
add
leave
mull
jp
cmpb
scas
xorb
std
cs
sbb
mov
lcall
pop
enter
pop
dec
pop
mov
lods
jp
inc
das
cmpsl
loopne
mov
scas
lar
movsb
cmp
mov
pop
xor
lods
orl
cmc
fisttpl
lock
aaa
mov
xchg
jmp
test
stos
inc
je
lods
sub
rcl
add
popa
mul
and
and
xor
or
popa
ret
out
int
xor
cmp
loope
sub
sbb
cld
xchg
int
adc
jecxz
outsb
insl
push
or
push
sbb
dec
push
push
jnp
inc
fcoms
sub
xor
scas
test
fwait
ds
xor
in
loope
mov
jge
cmp
mov
xlat
mov
lahf
jp
into
lea
decl
add
lds
into
mov
and
jg
adc
arpl
pop
dec
lahf
cmp
push
xor
mov
cmp
push
sbb
xor
or
pop
out
imul
sub
sbb
jle
mov
sub
and
pop
jmp
cmp
cmp
cltd
mov
mov
addr16
xchg
jecxz
int3
cmp
cmpsb
mov
adc
ss
push
sbb
test
lcall
fldenv
sbb
mov
sub
mov
mov
mov
mov
push
arpl
sub
mov
data16
popf
adc
xchg
mov
mov
ljmp
inc
mov
fcmovbe
sub
ljmp
jne
inc
sti
adc
jno
pop
sub
lea
out
movl
mov
addr16
fcmovbe
mov
xor
sbb
xor
loop
sbb
sbbl
test
daa
lret
xor
call
out
sahf
inc
dec
adc
sti
movsl
sbb
xchg
mov
in
js
xchg
dec
out
into
rclb
push
mov
jp
in
addr16
xchg
leave
inc
lret
and
jb
outsl
xchg
mov
push
insl
pop
mov
cmp
xor
xchg
cmp
test
fmul
mov
mov
nop
mov
mov
loopne
test
or
adc
jge
negl
mov
outsl
into
ficoms
sub
cmpsb
mov
pushf
aam
add
fsts
test
jg
in
push
adc
mov
mov
xor
sub
ficoms
adc
cmc
jo
adc
or
scas
lea
dec
dec
das
or
jp
in
aad
mov
sub
push
mov
sahf
sarb
lea
faddl
in
int
mov
gs
ret
repnz
lret
adc
pop
aam
inc
cmp
adc
sub
call
mov
enter
or
push
insl
in
test
aam
jl
imul
jne
flds
sub
lcall
sbb
mov
int3
jbe
adc
mov
adc
cmp
add
icebp
cltd
aaa
pusha
in
in
xor
fldenv
gs
insl
lcall
fnstenv
ret
fdivrl
vmovups
push
xchg
mov
push
mov
out
mov
aaa
and
mov
sbb
aas
leave
inc
jmp
clc
data16
cmp
cmc
ret
jne
sti
or
mov
or
jo
out
adc
movsl
test
cmpsl
andl
cmp
jbe
sbb
sub
xor
loop
imul
mov
add
gs
sbb
dec
cmp
jge
fcmovnb
insb
jne
sbbl
xchg
loopne
pop
adc
adc
jmp
loope
iret
outsl
cs
cmp
mov
ljmp
pop
out
sar
xor
aaa
andb
dec
das
push
mov
cmp
sbb
std
mov
movsl
cmpsb
daa
lahf
fcomps
xor
dec
js
dec
mov
jne
int
inc
ljmp
insb
xchg
stos
jle
pop
test
mov
push
inc
mov
in
mov
sub
mov
mov
loopne
mov
fdivs
movsl
lret
in
or
mov
loopne
mov
stos
divb
pop
push
rol
cmp
jae
push
cmp
jp
xlat
arpl
in
mov
cwtl
inc
push
or
mov
jae
xchg
je
iret
mov
stos
aam
sbb
adc
dec
out
jmp
pop
and
fisubs
out
cmp
mov
xor
cmp
stos
pop
jecxz
ss
shlb
outsl
inc
stos
mov
pop
or
fmull
jl
ljmp
aam
ss
ljmp
aad
je
cli
mov
insl
or
sub
cmp
arpl
inc
add
inc
lret
sbb
dec
xor
xlat
std
and
push
add
cmp
pop
dec
je
inc
sbb
sbb
mov
jmp
mov
lods
loopne
aaa
fs
rolb
push
rcr
sbb
nop
lock
xor
loope
sub
dec
fs
push
dec
xchg
jl
sub
fdivrs
adc
push
hlt
add
adc
sub
add
and
fstl
jecxz
ljmp
sbb
out
xchg
add
repz
jle
xchg
aas
and
mov
xchg
stos
xchg
in
ds
mov
jecxz
hlt
push
stos
out
stc
pop
and
ret
sub
mov
xchg
mov
xchg
mov
fimull
sbb
lret
or
adc
or
mov
test
mov
dec
flds
les
ret
cmpsl
fs
cltd
cltd
aas
jg
add
push
xor
mov
ljmp
lods
pop
or
xchg
or
inc
pop
jno
out
jl
popa
mov
bound
arpl
jmp
scas
iret
clc
inc
clc
cmp
sbb
inc
and
aad
or
lods
pushf
mov
je
imul
jnp
daa
leave
xor
xor
repnz
std
sbb
pushf
ss
push
add
rcr
jnp
icebp
and
lods
enter
mov
add
jbe
into
insb
add
xchg
push
pop
outsb
jno
or
ljmp
xchg
sub
rcll
mov
subb
mov
leave
sahf
ror
fisubrs
out
shll
xchg
and
adc
jecxz
cltd
scas
add
cmp
jae
mov
std
mov
push
popa
sub
lds
mov
xlat
int3
adc
push
test
mov
cmp
mov
repz
filds
mov
push
push
xor
sti
mov
sub
jecxz
insl
shrb
xchg
aam
mov
cvtps2pi
mov
cld
addr16
cmp
push
aaa
hlt
add
test
jmp
pushf
imul
imul
inc
adc
fnstenv
lret
inc
call
test
in
movsb
mov
xchg
jl
and
cmp
mov
pop
xchg
mov
outsl
aad
sti
adc
add
je
repnz
insb
add
pop
or
movsl
mov
pop
cmpsb
xchg
out
mov
mov
hlt
or
aad
lock
jb
scas
pop
jecxz
daa
aam
aas
or
cltd
and
jne
insl
sbb
and
mov
lahf
cld
clc
mov
or
daa
inc
xor
push
add
fidivrs
ss
ja
mov
jecxz
out
mov
js
xchg
xchg
pusha
inc
int
dec
aas
out
cltd
and
mov
xchg
xchg
jne
out
outsl
stos
sub
mov
loope
push
cmp
js
lods
jnp
add
sbb
outsb
lock
in
jl
lea
jo
test
iret
stos
cmp
xlat
add
jg
frstor
push
push
and
daa
pop
and
sub
sarb
test
nop
mov
push
mov
jmp
fisttpll
fimuls
dec
mov
jbe
fwait
dec
icebp
orl
mov
jae
push
pop
dec
inc
and
lods
jp
dec
sbb
mov
jle
push
scas
iret
xor
jbe
cld
mov
add
push
xor
sub
push
test
or
mov
test
mov
popf
sbbb
adc
and
add
and
pop
movsl
sbb
or
mov
jmp
call
je
int3
mov
push
arpl
pop
repz
push
outsb
fwait
dec
pop
mov
inc
push
arpl
sub
notb
push
pop
pop
popa
inc
pop
mov
pop
test
mov
cld
data16
leave
xchg
shl
int3
push
nop
lcall
mov
aas
push
cmc
dec
test
and
mov
push
std
leave
xchg
popa
mov
ficomps
push
jbe
cmp
xor
push
jp
pop
mov
dec
add
cltd
dec
aaa
xor
jne
adc
xchg
or
cmp
inc
rolb
stos
cmp
pop
adc
xorl
out
or
or
mov
xor
mov
leave
cmp
xchg
or
mov
aad
rclb
xchg
insb
and
je
ds
inc
sub
data16
outsb
push
jbe
jl
push
push
in
adc
jl
inc
adc
mov
stos
arpl
faddp
aam
repz
push
movsl
jb
aas
mov
push
sub
movsb
loopne
arpl
not
rorb
dec
loop
jg
xchg
jp
and
xor
mov
lret
sub
push
into
negb
sub
xchg
repz
dec
mov
repnz
je
ljmp
jg
mov
movsb
xchg
pop
mov
add
dec
dec
popf
add
push
roll
icebp
outsb
sub
sub
mov
in
shll
push
cli
mov
push
push
mov
sbb
scas
out
outsb
jg
mov
cmp
iret
mov
pusha
mov
xchg
movsl
xor
add
xor
dec
movsl
pop
xor
add
test
js
push
sbb
or
mov
bound
jbe
sub
mov
insb
loope
and
ds
mov
jg
add
cwtl
jmp
pop
or
movb
jb
dec
dec
outsl
push
jb
jmpw
into
outsl
cmp
add
jge
lock
and
or
mov
loop
lea
in
or
les
pushf
push
xor
jno
and
and
push
in
pop
nop
cmp
mov
rdmsr
sub
ret
mov
sahf
sbb
into
inc
sbb
js
push
ss
adc
jmp
mov
movsl
fldenv
xchg
xchg
pop
xchg
jmp
sub
or
cmpsb
mov
jg
std
rclb
mov
stos
decb
int
adc
rolb
ret
int3
lods
dec
js
inc
rorl
test
adc
xchg
orb
sub
outsl
stc
fdivrl
mov
mov
xor
xor
jp
cmp
cmp
icebp
push
pop
sbb
sbb
cmp
xchg
mov
jne
inc
sub
scas
sbb
ret
mov
loop
jnp
lea
push
es
enter
adc
push
xlat
jne
pop
mov
stos
pop
xor
dec
cmp
cmp
jl
jne
pop
dec
rclb
push
lods
test
dec
adc
into
sbb
ror
popa
mov
aas
xor
pop
jg
ret
inc
sub
jns
mov
popa
js
xchg
and
cmp
aas
add
les
sbb
in
mov
push
sub
jns
push
insl
testl
push
push
cli
mov
fldcw
mov
dec
inc
mov
cmp
mov
std
jmp
push
lds
mov
test
xchg
jmp
or
divl
fmul
mov
cmp
outsb
loope
sub
lcall
or
in
pop
or
aad
push
jne
in
lock
xchg
jmp
in
lea
stos
in
test
mov
cli
out
test
stos
invd
fwait
repz
pop
xchg
pop
pop
into
leave
test
rcll
or
out
arpl
aaa
movsl
xorl
or
aam
sbb
inc
inc
mov
push
adc
xor
and
mov
sub
shl
pop
fisubl
mov
loopne
icebp
jne
mov
adc
cmp
stos
fistps
jno
inc
cld
lret
adc
push
sub
sbb
stos
je
dec
cmp
mov
lea
stc
shll
into
fcom
pop
xor
in
andb
in
dec
sti
out
movl
cs
leave
cmc
arpl
or
xor
lods
cli
fucomp
stos
sub
test
jge
test
inc
xchg
jbe
xor
inc
mov
mulps
jne
mov
lods
ret
aam
into
adc
dec
mov
out
mov
syscall
enter
or
fs
loopne
xor
sub
mov
insl
xor
repnz
nop
mov
mov
decb
adc
pop
push
lods
imul
dec
aam
popa
push
out
xchg
or
sarb
jge
mov
push
dec
test
shlb
aad
sub
testl
stos
dec
inc
leave
addr16
pop
fisttpll
cmp
and
mov
dec
bnd
xchg
ret
repnz
subb
insb
inc
mov
sub
jae
dec
push
sbb
adc
adc
push
dec
mov
mov
orb
int3
int3
test
pushf
adc
icebp
mov
mov
lods
nop
xchg
ret
xchg
mov
outsl
out
push
test
or
inc
pop
sbb
sbb
fldt
mov
loope
cld
sub
and
xor
cmp
inc
jnp
mov
add
inc
xchg
or
pop
dec
mov
xor
sahf
out
and
mov
adc
lcall
icebp
and
pushl
ja
jb
dec
stc
jmp
hlt
aas
loopne
lods
divb
loope
inc
dec
lcall
aaa
repnz
test
mov
jmp
addr16
movsb
fildl
ja
adc
roll
shll
mov
fwait
lcall
cmp
hlt
mov
in
lcall
imul
inc
daa
fs
int
mov
and
popf
dec
push
nop
aaa
cltd
shll
lock
add
or
adc
mov
mov
xchg
sbb
pop
sti
pop
popf
xor
lret
mov
rcr
insl
or
xor
inc
push
ljmp
dec
out
testb
test
movsb
xor
subl
call
xor
jo
ljmp
fidivrs
fldt
js
or
insb
jmp
cmp
in
je
xchg
stos
sarl
repz
jns
mov
jne
bound
icebp
pop
inc
sbb
xchg
sub
les
std
orb
jb
cli
jo
mov
nopl
push
push
stos
pop
adc
jmp
push
sub
inc
and
aam
mov
out
in
pop
lods
mov
incb
dec
push
add
cmp
mov
dec
inc
imul
mov
or
inc
push
shlb
fs
insl
insb
test
jmp
add
jnp
and
insl
jle
fimull
jl
mov
in
sub
repnz
xchg
imul
aaa
lret
lock
jge
mov
xor
fldcw
xchg
cmp
lret
call
ds
std
aaa
stos
incl
xchg
iret
scas
subl
mov
adc
add
icebp
out
hlt
std
push
ljmp
test
sahf
push
jge
clc
cmpsb
or
mov
addb
mov
mov
iret
stos
xor
repnz
cmp
dec
pop
mov
sbb
xor
mov
test
cmp
mov
cmpsl
ret
inc
loop
jb
xchg
leave
shlb
decl
call
inc
clc
push
adc
mov
decl
lock
lds
and
xlat
xchg
sub
loopne
int3
cmp
mov
iret
jbe
les
push
movsl
pop
scas
jmp
mov
jge
in
loope
pushf
sub
push
sbb
inc
and
orb
and
jg
cmp
cmp
push
mov
cmpsl
popa
and
repnz
mov
pop
scas
adc
aas
int
xchg
ljmp
xor
inc
jns
dec
lock
xor
adc
cmpsb
xacquire
xchg
mov
fdivs
std
movsb
ljmp
jp
cltd
cmpb
fsubs
lcall
jbe,pn
pop
sub
xchg
outsl
aaa
pop
and
add
aas
jecxz
ficompl
xchg
adc
mov
pop
je
outsl
popf
push
out
jl
mov
mov
out
test
std
shrb
mov
adc
pop
mov
insb
or
mov
ja
xor
imul
test
popf
movsl
xchg
mov
lods
outsl
sbb
cmp
daa
jmp
insb
ljmp
leave
imul
sarb
fidivrs
push
movsb
sub
jge
mov
notb
pusha
cmp
js
and
dec
ret
popf
sarl
inc
and
cmp
das
jno
flds
fs
insl
ja
mov
and
mov
pop
inc
jns
jne
xchg
and
add
faddl
repnz
push
stc
inc
out
cwtl
fiadds
scas
push
incl
testb
or
adc
sahf
push
mov
jecxz
jne
aaa
pop
out
push
jb
repz
stc
aam
loopne
mov
aaa
clc
loop
adc
fdivrl
lret
bound
cs
shll
sti
fs
cmc
push
ljmp
ja
cs
or
jp
cmp
mov
xor
das
inc
xchg
xlat
xchg
movsb
rolb
fwait
mov
scas
xchg
pop
or
nop
mov
xor
in
pop
push
sbb
sbb
ds
ja
stos
adc
iret
jmp
ret
imul
mov
clc
icebp
out
out
ficompl
inc
jne
jne
push
jge
jne
lds
popa
adc
push
mov
pushf
in
test
xchg
stos
mov
les
cltd
std
dec
pushf
ud2
push
mov
leave
dec
add
test
data16
cltd
adc
cmpsb
cmpsb
testl
or
mov
and
inc
or
ljmp
mov
or
xor
add
movsl
push
ret
pusha
or
mov
mov
pushf
inc
in
xor
or
jnp
jno
cmp
inc
aas
popa
movsl
push
jbe
sub
jno
mov
subl
hlt
push
insl
push
dec
mov
add
pop
xchg
push
pushf
icebp
outsl
jle
mov
scas
mov
clc
inc
jae
mov
xor
std
push
pop
cmc
call
add
f2xm1
dec
lea
xchg
int3
mov
shrb
inc
add
sbb
sbb
outsl
lcall
std
lret
sahf
shll
cmpsl
and
sub
mov
jb
xchg
inc
loop
dec
pushf
inc
ja
pushf
popf
sub
dec
and
sar
les
dec
xchg
pop
jnp
mov
inc
or
jno
pop
adc
int
imul
ljmp
cmp
push
xor
ds
dec
jl
es
test
sbb
lret
sbb
jmp
push
subb
dec
pop
or
mov
sub
push
mov
inc
pushf
in
sub
adc
push
repnz
in
push
xor
pop
jnp
mov
pop
iret
sub
push
rolb
movsl
mov
cli
gs
add
and
mov
mov
xor
and
sbb
addb
sub
add
or
xchg
idivb
in
xchg
ret
fsqrt
fcompl
mov
sub
sub
fiadds
dec
push
pop
mov
jbe
pop
in
ror
cmc
push
fiadds
dec
enter
bound
inc
push
nop
mov
lock
jg
cmp
and
xchg
pusha
xor
divl
mov
and
mov
js
lock
arpl
sbbb
add
xchg
sti
mov
or
inc
pop
adc
aaa
ds
arpl
mov
cmc
push
xchg
add
xchg
ja
xorl
mov
aam
out
daa
lods
dec
xor
or
outsl
push
lods
jg
or
sbb
jecxz
mov
fidivrs
inc
jns
aaa
mov
fdivr
cld
mov
adc
inc
int3
movb
ds
outsb
std
cmp
scas
rcrb
jge
cmp
stos
cmp
je
cwtl
into
adc
out
push
cmp
arpl
adc
mov
mov
push
out
dec
push
sub
lods
inc
push
or
ljmp
or
ret
jg
adcl
pop
sub
out
add
dec
jg
mov
aam
mov
and
daa
lds
or
daa
std
mov
add
ucomiss
call
mov
jbe
bound
mov
xchg
push
push
xor
jno
sub
mov
pop
pop
addr16
and
xlat
sbb
pop
in
or
jo
sahf
adc
add
jbe
mov
sub
mov
and
inc
push
out
lahf
pop
adc
mov
js
adc
je
test
add
push
mov
adc
adc
jnp
mov
pop
imul
adc
jae
mov
mov
pushf
cwtl
jnp
aam
cmpsb
icebp
out
xchg
dec
fs
js
enter
sahf
sub
push
sbb
or
xor
in
pusha
repz
push
xor
mov
or
xor
ret
pop
scas
dec
mov
push
jmp
test
mov
in
shrl
jns
mov
push
test
and
cmpsl
mov
in
sbb
in
mul
sbb
mov
fnstcw
xchg
mov
or
cltd
aad
out
sbb
icebp
cmpsb
xlat
push
cmp
and
pop
cmp
hlt
fwait
insl
xchg
ret
jp
pop
and
dec
outsl
xor
mov
xlat
incb
lods
sub
mov
pop
mov
ja
mov
scas
and
add
adc
xor
jl
cmpsb
ret
orl
mov
xor
inc
add
iret
and
mov
scas
enter
jo
jge
je
jg
stos
fwait
mov
iret
mov
push
inc
mov
pop
and
xor
test
push
popa
mull
xchg
cmpsl
insl
mov
pop
ss
rorl
xchg
dec
and
imul
andb
mov
xor
sub
push
scas
mov
cli
dec
mov
or
mov
loope
mov
jg
pushf
cmpsb
mov
mov
into
leave
arpl
jp
fidivrs
add
jp
fnstsw
cmpsb
fidivs
setb
in
in
push
pop
and
sub
sbb
add
and
pop
xchg
ljmp
xor
xchg
adc
outsl
lods
jnp
dec
jg
subb
mov
sbbl
lahf
movsb
loopne
fsubp
lahf
lcall
pop
mov
add
pushf
imul
add
int
ret
or
cmp
sbbl
shr
and
out
xor
mov
add
aam
icebp
popf
daa
out
gs
dec
lea
or
faddl
xor
outsb
adcl
nop
mov
lahf
ret
in
dec
out
xor
insl
enter
sbb
jo
out
adc
mov
sub
call
cmp
jb
pushl
xchg
push
fdivl
cmc
mov
fcompp
ja
adc
lods
sub
pop
mov
mov
ja
popa
dec
insl
loopne
dec
sub
lods
mov
aas
sbbb
jnp
inc
lea
xor
hlt
aaa
repnz
mov
nop
call
aad
mov
or
sbb
xorl
and
push
outsl
enter
adc
adc
aad
push
sub
jns
mov
inc
testb
pusha
xchg
loope
cs
and
fwait
lret
loop
arpl
cmp
push
scas
fnstcw
ret
and
and
popf
xor
push
pop
mov
cmc
jecxz
test
roll
scas
mov
int
in
mov
insb
or
repnz
mov
int
xchg
xor
fisttpll
lret
or
hlt
mov
cmp
lret
fwait
jl
ficoml
dec
lahf
pop
popa
add
out
icebp
adc
outsb
loopne
mov
mov
adc
xchg
inc
fmuls
jno
pop
xchg
mov
dec
bnd
inc
push
hlt
sub
outsl
and
clc
push
fsubl
orl
adc
in
add
pop
fstpt
mov
pushf
cltd
insb
adcb
mov
stos
push
add
jbe
das
xor
test
push
lock
cwtl
push
xor
push
inc
repz
roll
aam
mov
test
jl
fwait
les
pop
insb
adc
arpl
and
ret
xlat
incl
pop
into
cli
mov
push
sub
add
push
pop
lret
fsubs
xlat
subl
mov
sbb
lock
lods
icebp
movsl
xlat
mov
push
or
pop
pop
pop
in
cmpb
ficoml
outsl
push
mov
cltd
inc
aaa
loope
in
cld
ficomps
or
pop
sub
imul
sbb
stos
jne
testl
div
adc
orps
pushf
push
lahf
push
jo
loope
sub
fdivs
push
jl
lret
std
push
xor
dec
insb
sbb
shlb
insl
daa
mov
cwtl
iret
sbb
mov
test
pusha
aaa
lcall
stos
pop
xor
rol
mov
push
inc
fiadds
push
xchg
sub
adc
dec
add
sub
ret
std
fnstsw
outsl
xchg
call
in
call
push
dec
in
or
xor
adc
in
xor
push
into
mov
cmpsb
xchg
int
or
sbb
sub
icebp
xchg
pusha
pop
sbb
jge
popf
push
fsubrl
int
jnp
clc
repnz
neg
adc
cltd
popa
sub
cmpsl
pop
or
adc
dec
idivl
lcall
lret
mov
icebp
adc
pop
adc
push
addr16
movsl
lods
and
xchg
fwait
and
mov
jo
int3
dec
loopne
and
pop
push
fisttps
icebp
or
das
dec
jns
xchg
sbb
daa
add
mov
js
cmp
xor
xor
mov
das
ret
lea
push
lret
cld
jbe
lcall
xor
or
dec
adc
je
es
icebp
cltd
xor
inc
or
rorb
mov
and
adc
arpl
jl
xor
out
dec
and
loopne
into
jnp
cmc
fwait
cli
ds
lahf
sub
jbe
pop
pusha
aas
sub
sbb
fstpl
lea
push
jmp
pop
scas
fcoml
idivb
maskmovq
idivl
lret
cmp
pop
mov
mov
and
mov
or
aas
sbb
add
cld
jecxz
adc
fldcw
arpl
adcb
xorl
mov
pop
mov
pop
jns
outsb
ljmp
jecxz
aam
sbb
lock
xchg
and
dec
xchg
adc
fdivl
xchg
xchg
scas
sub
icebp
sub
cwtl
xor
sub
pop
push
mov
sldt
pushf
mov
int
cmp
out
sub
rcrl
push
ss
mov
or
mov
lret
jns
adcl
loopne
mov
cmp
jns
xor
repnz
imul
imul
je
pop
fdivrs
and
inc
popa
inc
pushf
push
sub
cmc
xor
xchg
add
cmpsl
and
insl
inc
fsubrp
scas
std
sbb
or
fildl
xchg
push
pop
or
push
popa
xlat
pop
jb
popf
jno
push
add
ljmp
push
xchg
es
data16
adc
out
cmp
push
and
mov
inc
iret
mov
addr16
mov
xchg
jp
std
ret
adc
sub
out
jle
mov
mov
jecxz
xchg
push
xchg
jnp
pop
cmpsl
cmc
mov
inc
dec
mov
push
fadd
fimuls
adc
jle
mov
ljmp
loopne
clc
push
out
subb
jne
jmp
ret
enter
lods
fidivs
imull
sbb
into
pop
and
imul
push
xchg
std
sub
sub
push
aam
push
arpl
orl
mov
loope
test
dec
in
fcmovne
inc
ret
push
arpl
cmp
lret
mov
push
jmp
data16
aaa
popf
ja
mov
xor
inc
pop
push
pop
mov
shrb
xchg
subb
into
popf
data16
xchg
rclb
sbb
xchg
push
push
insl
or
loope
out
dec
cmpsb
sti
jbe
inc
dec
jp
in
in
out
lahf
sbb
scas
fadds
dec
idiv
mov
adc
push
push
xor
call
mov
inc
movsl
and
jae
sahf
pop
imul
xchg
test
sub
addr16
mov
lret
adc
popf
sbbb
movsb
lea
pop
and
sbb
cltd
outsb
xchg
dec
popa
adcl
aam
sub
xor
shl
stos
sub
aad
dec
inc
and
inc
jo
enter
pop
jmp
mov
cmp
xchg
test
shlb
cmpsl
scas
or
cld
and
mov
push
push
xchg
xlat
xor
inc
das
mov
fimuls
pushf
or
push
dec
mov
gs
movsl
repz
or
pop
dec
mov
cmp
out
pop
outsl
sub
std
sti
rcrb
cmp
or
mov
das
push
ja
stos
push
mov
and
xor
jecxz
ffree
imul
adc
and
pop
adc
popa
add
insl
lcall
adc
jl
sti
inc
insl
stos
lahf
inc
or
repnz
lds
fisttpl
cmp
pop
cltd
xchg
add
jb
in
js
push
aad
out
inc
imul
or
jp,pt
sub
mov
xchg
push
test
add
mov
fidivl
insl
add
stos
in
fcoms
lahf
imull
sub
cmp
jl
xchg
push
int
push
outsl
push
loopne
mov
ret
jno
sub
stc
sub
jnp
in
add
xor
adcl
mov
and
stos
in
push
push
sahf
repz
xor
xor
inc
fwait
aad
repz
arpl
push
jg
lods
repz
jnp
es
jecxz
sbb
jo
scas
ss
xchg
jbe
mov
jmp
lret
mov
lret
push
data16
fidivl
daa
cmp
sub
mov
jno
cs
pushf
sbb
aad
cmc
jge
xor
inc
adc
cmp
xchg
or
popa
mov
imul
cmp
mov
xor
cli
add
call
stc
inc
add
xor
xor
mov
jg
in
mov
push
xchg
fs
cmpsl
mov
cmp
fidivl
out
add
inc
stos
mov
daa
pusha
jl
adc
mov
cli
adc
addl
pusha
jge
rcrl
fs
inc
mov
add
mov
jno
sbb
call
arpl
inc
pop
insl
subb
js
jns
push
push
movsb
in
ret
adc
fcomps
mov
shrb
cmp
sti
xchg
movsb
cli
test
jnp
push
mov
and
outsl
orl
xchg
sti
lods
or
cmp
sbb
xor
cmc
es
aam
adc
push
subb
xchg
mov
sbb
push
sub
adc
xchg
xchg
sbb
xor
jge
sub
mov
int
sti
daa
imul
xchg
int
push
mov
ljmp
mov
mov
mov
pop
fs
sarb
mov
fsts
mov
push
xor
xor
or
jl
lret
aaa
dec
push
cmpsb
hlt
push
and
inc
ljmp
ficoms
jbe
aas
push
cmpl
mov
xchg
mov
loope
movsl
leave
cs
imul
in
xchg
repz
mov
test
lahf
sbb
xchg
fwait
lock
cwtl
inc
lea
loope
mov
pushf
sub
popa
and
add
and
dec
sbb
xor
jno
xchg
add
push
rclb
rcrl
sub
sub
test
mov
sbb
mov
hlt
je
mov
mov
jmp
lret
jmp
push
jns
push
pusha
jmp
iret
loop
and
fists
ds
in
sub
lea
call
add
cmp
mov
sub
push
add
inc
sahf
addr16
pop
mov
inc
in
xor
xchg
shrl
push
mov
data16
mov
insl
inc
xor
negl
xchg
fisubs
xor
hlt
cld
push
popf
add
mov
dec
add
lods
xchg
das
outsb
fsubrl
and
dec
pop
insb
lock
stos
cmpl
jae
jg
inc
mov
call
fcoml
inc
adc
mov
jg
scas
pop
mov
sub
jns
imul
mov
movsb
das
shrb
psubq
or
addb
mov
xlat
outsb
lret
aad
lret
sbb
imulb
inc
adc
add
imul
xchg
jmp
jg
cmpsl
jns
xor
mov
pop
inc
add
adc
jl
pop
fwait
pop
orps
mov
mov
jp
mov
sub
ss
xchg
jo
inc
pop
inc
jl
pslld
pop
cmp
dec
mov
pop
xchg
outsb
sub
iret
adc
jne
cli
xchg
stos
imul
pop
test
loopne
jo
pop
jle
mov
mov
dec
mov
insl
push
xlat
mov
xor
jmp
fmul
mov
push
mov
gs
les
mov
out
int
data16
fcompl
inc
sub
and
das
jle
or
mov
nop
es
scas
dec
dec
test
xchg
mov
or
push
adc
rolb
cmp
jnp
xor
push
nop
push
pop
jo
inc
out
mov
mov
sahf
sbb
mov
call
popa
movsb
data16
jl
into
sbb
dec
lods
mov
fcompl
jmp
sbb
cmp
mov
icebp
push
push
mov
repnz
sbbb
push
repnz
mov
ret
lret
jns
jbe
xor
lcall
rcl
jo
jg
ss
cmp
xorb
data16
jge
mov
shr
test
cmpsl
les
or
or
sub
sbb
iret
in
mov
ljmp
fchs
test
test
jns
xchg
jb
push
mov
jo
cmpsl
xor
cs
jbe
inc
sub
cmp
andb
pushl
lret
adcb
cmpsb
sarb
lods
mov
out
jb
xor
lret
popl
push
je
imulb
popf
mov
mov
repz
sbb
ljmp
daa
dec
cmp
pop
fcmovne
xor
mov
and
jns
popf
daa
pop
insl
push
cmp
add
lock
adc
mov
xchg
sbb
adc
mov
and
pop
sub
xor
out
das
in
shlb
enter
jbe
gs
xchg
in
loope
iret
inc
ljmp
lds
inc
xchg
sbb
cmp
push
dec
adc
mov
push
enter
pop
jmp
ret
fidivrl
pop
or
inc
iret
insb
scas
inc
das
mov
mov
inc
mov
outsl
clc
shrb
aam
add
and
mov
pop
mov
push
dec
pop
push
outsl
mov
mov
add
jp
enter
push
in
adc
mov
das
sbb
test
cwtl
or
loope
pushl
xchg
mov
dec
cmpl
rcl
adc
cmpsb
daa
mov
iret
mov
jl
cs
fstpl
jae
pop
imul
sbb
and
inc
fwait
push
mov
xor
andl
xor
add
test
fdivrl
fdiv
xchg
insb
mov
pop
or
xor
rorl
out
mov
aaa
lret
mov
push
movsb
cwtl
adc
imul
fdiv
xchg
or
fisubl
cs
pop
push
push
push
jmp
jle
dec
shrl
scas
icebp
lock
push
jg
and
mov
ljmp
shll
mov
cwtl
add
mov
in
pop
cmp
dec
push
pop
and
cmpsb
ficompl
mov
mov
stc
mov
les
sbb
std
dec
popa
xor
mov
ss
jns
inc
popa
stc
int3
imul
xchg
sbb
dec
mov
mov
pop
test
fadds
push
insb
dec
cmp
pop
das
fnstcw
xor
push
xor
ss
pop
dec
dec
pop
mov
shrl
fmuls
call
iret
push
mov
flds
xor
shrb
push
sbb
cli
xor
loope
mov
in
mov
adc
pop
xor
inc
pushw
leave
stos
xchg
pop
pop
sbb
test
add
in
cwtl
push
jmp
test
mov
aad
cmp
push
movsl
aaa
jo
scas
repnz
push
imull
push
mov
jb
test
out
dec
cmp
and
adc
icebp
aaa
insb
add
outsb
xchg
jle
pop
jb
fcompl
mov
pop
sub
inc
or
popa
dec
leave
mov
push
es
add
sub
and
add
stos
adc
jmp
shlb
test
mov
or
icebp
gs
ret
cmp
sbb
pop
jge
out
pop
cmpsb
rol
xor
bound
sub
insb
jecxz
cwtl
subl
mov
pushf
jne
pop
sbb
mov
sub
stc
and
pop
insl
arpl
ret
js
mov
or
movsb
sbb
movsl
and
inc
jno
xchg
shll
jne
stos
lret
call
andb
and
mov
fsts
push
mov
shlb
icebp
adc
push
mov
imul
mov
out
jae
icebp
xor
jecxz
xor
jae
or
stos
cmp
pop
mov
std
ret
pop
push
sbbl
test
cmp
or
add
ficoms
test
arpl
push
ret
lods
int
aad
mov
rcr
addr16
cmc
or
popa
fidivrs
gs
subl
sub
jmp
outsb
test
icebp
icebp
xchg
jns
fsub
out
sub
subl
pop
cwtl
inc
and
sbb
sub
stc
sub
ss
mov
adc
leave
dec
int
fucom
scas
daa
jne
mov
pusha
push
lods
lea
push
or
lea
into
cmp
inc
clc
push
pop
in
loopne
ret
insl
popa
and
sbb
sar
add
and
lock
sbb
mov
jp
mov
daa
cli
add
xor
sbb
sbb
mov
cmp
leave
sbb
push
imul
push
ffree
pop
in
mov
and
and
testb
aad
cld
mov
sbb
dec
mov
stos
xchg
push
roll
aam
iret
ret
push
or
sbb
mull
mov
lock
xor
mov
cli
aaa
or
mov
fdivl
adc
jns
xor
fistpl
fnstenv
adc
and
lock
imul
out
cmp
push
push
add
loopne
mull
push
mov
xchg
cli
insl
fld
cmp
and
dec
lods
in
fdivs
mov
sbb
xor
xchg
inc
ss
xchg
aad
es
shlb
mov
rcrb
mov
lods
jns
dec
mov
adc
int3
or
scas
lods
shl
fdivs
outsl
mov
xor
push
fmull
mov
int3
and
mov
mov
es
add
bound
loopne
lods
and
pop
andb
jg
push
movsb
and
std
rclb
addr16
and
scas
int3
mov
jae
xor
mov
lods
popa
adc
icebp
push
inc
dec
add
inc
push
popf
adc
mov
cmpsl
mov
mov
mov
dec
pop
cmpsb
adc
rorl
mov
or
adc
cmp
rcrb
cltd
mov
mov
xchg
push
add
ljmp
subl
jb
cmp
aad
sub
add
mov
inc
popf
push
sub
dec
ja
shl
nop
dec
mov
push
repz
xchg
lock
cmp
pop
idivb
out
cmp
and
outsl
push
sub
dec
mov
or
push
sub
pop
mov
int
add
sub
jle
jno
xchg
out
sbb
mov
jnp
push
sbb
mov
cmp
xor
and
cmp
pop
add
sub
loop
dec
data16
ds
sahf
xor
ja
lahf
sbb
cmpsl
es
in
dec
add
in
orb
mov
lods
pop
add
imul
pop
mov
shl
jg
dec
out
adc
sahf
lret
outsl
sub
jge
iret
sar
mov
enter
xor
add
inc
imul
push
insb
xchg
inc
and
push
scas
or
popf
into
pop
in
lods
mov
mov
sbbb
mov
cltd
dec
cmpsl
shrb
in
pop
fiaddl
ds
fildl
adc
int3
sbb
lock
jp
xor
into
or
loope
cmc
xor
push
call
dec
notl
jnp
xchg
jb
shrb
xchg
mov
sub
jg
lahf
cld
iret
test
pop
ss
pop
or
ja
inc
fs
mulb
ja
cmp
cmp
fisubrl
ja
ret
mov
xor
xlat
popa
dec
mov
stos
mov
add
gs
xchg
es
pop
fists
mov
sub
dec
inc
jb
or
mov
xchg
fisttpll
lcall
cmp
shl
pop
ds
mov
xchg
inc
add
andb
fistps
and
add
in
repz
add
mov
pop
pusha
lcall
inc
and
clc
fisubs
incb
push
mov
mov
pop
or
xor
cli
inc
xor
jae
add
movsl
jb
fwait
test
fs
pusha
xor
ds
pop
stc
jecxz
icebp
xchg
daa
clc
mov
xor
inc
add
sbb
outsb
mov
sub
xchg
cmp
xor
addr16
xor
cmpsb
xchg
bound
push
arpl
int3
test
fadds
cli
movsb
and
ljmp
adc
or
mov
xor
or
icebp
adc
daa
mov
or
call
enter
adc
cltd
popa
lock
xor
push
mov
jp
inc
incl
and
aam
or
pop
loope
push
push
cmp
sarb
sar
jg
fiaddl
das
mov
test
lock
mov
mov
cmp
ds
inc
scas
push
imul
fsubrs
out
inc
mov
test
out
push
cli
inc
inc
xchg
mov
inc
lock
lods
cltd
lds
jno
icebp
std
pushf
aad
lahf
inc
js
mov
in
fs
in
sbb
rcl
pushf
mov
mov
int3
jge
data16
stos
xchg
ret
dec
loop
data16
dec
jae
mov
sbb
sbb
cmp
stos
int3
jmp
inc
and
out
imul
lret
push
cltd
pusha
cwtl
clc
aam
das
icebp
leave
cli
push
ja
rcll
lea
sbb
or
push
or
and
stos
imull
mov
in
jb
add
push
push
cwtl
sbb
xor
mov
push
scas
test
test
mov
andl
les
imul
fstps
fisubrs
push
push
mov
test
int
pop
xor
fsubr
push
fwait
xchg
mov
pop
add
jp
inc
xchg
cmp
xchg
mov
pop
mov
stos
sub
xor
lahf
pop
dec
inc
sarl
adc
aad
les
push
pmulhuw
jl
cmp
orl
lods
in
fs
hlt
test
jns
and
pop
psrad
inc
lret
pop
cmp
adc
imul
lret
adc
jb
sbb
mov
sbb
pop
adc
clc
mov
ret
mov
mov
or
adc
dec
out
mov
sub
pushf
jge
cmpl
sbb
pop
mov
popl
jmp
dec
clc
imul
test
enter
rclb
mulb
out
fcmovb
shlb
shll
ficoml
jae
sbb
js
sub
adc
sbb
scas
dec
push
lods
loopne
inc
scas
mov
jns
std
push
pop
shlb
push
fst
stos
jae
or
mov
or
lea
xchg
test
call
shl
or
or
push
lahf
aad
dec
adc
pop
xchg
dec
adc
xor
cmpsl
fs
xorl
hlt
adc
icebp
lcall
and
adc
movsb
arpl
iret
nop
loopne
sti
out
lock
insl
and
cmc
imul
push
inc
pop
mov
mov
or
xor
clc
mov
pop
pop
or
mov
dec
rcr
push
in
xchg
xchg
and
rcl
sub
fwait
popa
mov
jl
adc
sarl
test
mov
lods
or
dec
outsb
outsl
dec
movsl
pop
mov
aas
xor
popa
dec
adc
cltd
lahf
xor
into
out
shrb
mov
mov
ret
xor
loope
xchg
lock
pop
rclb
popa
outsl
inc
sub
dec
push
xchg
arpl
icebp
push
sahf
xor
jo
mov
out
gs
fs
call
and
xorl
mov
mov
repnz
pop
dec
pop
test
add
push
add
fwait
xchg
pop
xchg
in
mov
push
fists
repnz
mov
dec
mov
addr16
sub
mov
jmp
fisubrl
int
dec
arpl
adc
scas
sbb
lret
adc
mov
inc
pop
cmpsb
and
mov
rorl
je
adc
fdivl
mov
jg
dec
dec
xchg
pushf
insb
loope
push
cmpsl
and
aas
cmpsl
sarb
aas
cli
pop
adc
add
mov
out
es
add
mov
data16
mov
cwtl
push
inc
pusha
mov
cmp
hlt
mov
and
gs
adc
cld
or
loop
xchg
jl
cmc
mov
loopne
cmp
loop
call
cmp
pop
cmp
sbb
xor
lea
ret
nop
fbstp
leave
mov
sbb
sub
inc
jecxz
and
pushl
sarl
ja
fisubl
push
inc
adc
xor
incl
push
popa
mov
xor
das
inc
aam
dec
sub
inc
mov
gs
pop
lret
jp
lock
jmp
mov
clc
inc
and
data16
sbbl
jnp
cs
sbb
ja
and
mov
out
imul
pop
pop
scas
jmp
xchg
mov
mov
xchg
js
pop
jmp
xchg
cmc
cmp
adc
cmp
jae
mov
int
scas
pop
xchg
mov
sarl
repnz
pop
mov
aas
loopne
mulb
movsl
dec
dec
cmp
mov
pop
mov
cwtl
push
jno
adc
jle
aad
mov
in
adc
in
mov
sbb
leave
aaa
or
sahf
int3
jp
hlt
xchg
sbb
cmp
mov
movsb
xchg
cmp
mull
adc
scas
mov
js
es
push
in
mov
pusha
mov
psrld
mov
xchg
dec
xchg
inc
aas
push
inc
std
push
add
add
mov
mov
mov
add
xor
mov
fwait
pop
push
sub
cmp
xor
push
mulps
mov
push
jmp
andb
in
push
push
mov
adc
add
sub
mov
or
cmp
arpl
push
iret
sub
fwait
stc
jl
jo
jno
xor
adc
aaa
mov
lcall
inc
js
jle
fldt
lcall
push
out
and
mov
outsl
inc
cmp
xchg
ss
sub
into
imul
rol
fsub
dec
mov
js
mov
fucomp
bound
scas
rclb
add
mov
in
cmp
cmpsl
jmp
fcoms
enter
das
rclb
pop
das
mov
sti
lds
xchg
repnz
jge
inc
push
mov
or
das
add
iret
mov
imul
into
mov
sbb
mulps
or
insl
add
inc
jecxz
mov
dec
mov
sahf
jmp
daa
mov
aam
jmp
mov
call
aad
hlt
mov
dec
jmp
jae
cltd
mov
lock
xchg
push
loop
andl
ss
mov
lret
loopne
xorb
dec
ss
lahf
dec
in
mov
lock
ds
call
lock
and
inc
rcr
dec
out
jo
sbb
jns
sbb
jl
loop
push
jecxz
iret
hlt
aad
cmp
inc
lret
add
dec
adc
test
and
aas
inc
in
outsb
cmp
xchg
lds
xchg
xor
ret
push
cltd
aam
int3
mov
mov
mov
jl
mov
xchg
jo
lret
in
push
inc
mov
cmp
les
notl
cmp
nop
popf
std
mov
lea
pop
jb
out
mov
leave
or
cmp
adc
mov
mov
test
mov
cmpsl
add
shlb
ja
mov
pop
push
and
or
mov
dec
mov
mov
jge
dec
loopne
xchg
jmp
mov
jnp
pop
icebp
insb
out
insb
sbb
test
add
jp
jle
ljmp
pop
mov
cmp
and
xchg
pusha
or
popf
mov
popa
stc
shlb
mov
mov
sbb
movsl
int3
pop
jns
add
inc
jmp
in
mov
lret
leave
stc
mov
and
or
outsl
jnp
push
cmp
ljmp
rcrb
mov
mov
cmp
mov
cmp
mov
in
and
or
xchg
lods
aad
pop
ljmp
ror
push
push
add
sub
data16
rolb
frstor
je
mov
push
call
cltd
push
sbb
sbb
shl
cmp
out
mov
push
jle
out
push
pop
push
movsb
jle
in
or
pop
add
imull
shl
hlt
sbb
mov
jp
push
sub
pop
dec
mov
adc
inc
lcall
adc
cmp
xor
push
add
cmp
dec
push
popa
shlb
mov
out
popa
adc
es
loopne
push
das
mov
mov
mov
nop
sub
mov
dec
dec
jae
test
mov
mov
push
aam
jecxz,pn
les
insb
jl
and
or
pop
notb
das
mov
mov
iret
je
je
mov
add
aad
mov
and
dec
cwtl
lret
out
fwait
clc
mov
dec
rcrl
mov
dec
inc
loopne
inc
repnz
xchg
adc
out
test
pop
pop
into
enter
cmpsb
jo
push
push
sub
ret
dec
push
jb
popl
into
out
ret
cmp
outsl
push
mov
sub
jbe
push
sub
roll
lods
and
and
js
mov
mov
jp
lods
or
and
cmc
add
mov
mov
xchg
in
pop
mov
pop
inc
xor
mov
lret
add
mov
ret
in
inc
ljmp
push
cwtl
or
pop
mov
insl
push
adc
sbb
daa
fidivl
add
push
xor
sbb
push
aaa
arpl
pop
inc
jle
sbb
add
cld
push
xchg
dec
dec
ret
call
pop
sub
je
outsb
push
loopne
fidivs
mull
into
push
stc
xchg
push
lea
in
imul
lds
ret
mov
push
cwtl
jmp
sub
xor
btc
insl
pop
push
push
cmp
cld
popa
sub
orb
pop
or
movsb
mov
lods
scas
and
dec
fnstsw
std
fwait
imul
pop
daa
push
out
pop
repz
or
xlat
jae
xchg
add
lds
cli
ljmp
dec
ret
out
mov
xor
cmp
incb
test
lods
or
jno
outsl
aad
mov
mov
divb
sahf
stos
sbb
fsubs
lds
das
adc
popa
aam
mov
data16
mov
movb
pushf
push
insb
cmpsl
fisubl
aad
sbb
js
shlb
imul
stc
sub
jnp
cli
jo
mov
rcrl
xchg
out
jmp
sub
data16
xchg
andb
lods
add
subl
mov
lahf
cmp
insb
and
and
stos
push
mov
enter
mov
inc
in
sarb
push
push
push
leave
or
add
clc
lds
ds
mov
and
mov
in
icebp
xorb
and
xchg
insl
insb
lret
push
and
jmp
fisubl
sahf
cmc
jg
mov
fidivl
cmc
mov
xchg
gs
ja
pop
jbe
dec
stc
xchg
push
jle
loope
dec
jnp
icebp
ja
or
push
cli
loope
push
scas
imul
ficoml
jmp
addr16
push
push
or
xchg
or
data16
pop
mov
pop
fldcw
cltd
stos
addr16
inc
and
inc
loop
mov
lret
add
hlt
lahf
mov
mov
es
je
clc
fmul
testl
arpl
jne
lret
or
mov
imulb
xor
icebp
ja
jl
loope
mov
sbb
push
stos
jecxz
mov
enterw
push
fwait
push
mov
lahf
mov
fwait
mov
cltd
mov
xor
mov
push
xor
push
lret
jmp
inc
stc
mov
jne
stc
and
mov
das
out
sub
inc
pop
xchg
jno
pushf
sbb
lds
hlt
dec
fnsave
mov
mov
xchg
mov
dec
iret
pop
inc
inc
mov
pop
or
mov
dec
mov
push
adc
hlt
test
pop
dec
mov
out
movsb
imul
sti
pop
int
dec
push
inc
test
es
mov
test
ret
cmp
or
cmp
or
lds
int
ficompl
imul
and
mov
std
or
insb
inc
sub
notl
test
je
mov
pop
push
cmp
xchg
mov
xchg
mov
aaa
aas
lods
jecxz
ja
sahf
mov
shll
cmc
xor
mov
xor
int3
and
inc
mov
mov
fsubrl
lds
push
pushf
hlt
and
in
mov
push
ljmp
aam
outsl
push
push
adc
dec
pop
cmpsl
lds
jb
sub
ss
ja
std
lret
adc
mov
lcall
push
adcb
cmp
sahf
mov
scas
dec
arpl
xchg
add
repnz
or
add
pop
frstor
movsl
scas
push
cmp
imul
inc
ss
lds
pop
mov
sbb
push
sti
inc
push
inc
imul
mov
jnp
push
lods
cmpl
sub
dec
daa
lods
fildl
mov
test
scas
xchg
shlb
adc
or
and
lock
cltd
repz
lea
mov
lahf
fisubrl
add
int3
add
add
adc
enter
push
je
jecxz
lcall
sub
push
data16
fldt
imul
mov
xchg
lods
cld
stc
cmp
loopne
movupd
pop
stos
cli
mov
aas
jle
les
aam
dec
pop
mov
adc
adc
outsb
cwtl
clc
fists
dec
push
dec
pop
xchg
fwait
lcall
and
imul
ss
mov
scas
rolb
inc
mov
aaa
in
stos
loop
pusha
fisubl
push
sub
sbb
mov
mov
mov
inc
mov
xor
or
dec
or
xchg
pop
std
or
les
cli
in
imul
arpl
pop
mov
out
mov
out
mov
in
mov
loop
pop
add
and
sub
jo
ret
sarb
dec
les
shll
xorb
test
arpl
fdivrs
psadbw
adc
fldenv
shll
mov
ret
clc
scas
ffreep
movl
mov
inc
sub
iretw
leave
lcall
into
div
dec
roll
and
imull
stos
arpl
pushf
and
cmp
cs
mov
jmp
push
lahf
daa
xorl
inc
mov
xor
dec
inc
jno
add
xor
fiaddl
int3
leave
pop
jo
xor
adc
push
popa
jb
mov
push
sbbb
pop
inc
insl
sbb
dec
jl
add
pushl
dec
inc
jp
ret
push
xchg
iret
sub
xor
sbb
xchg
xor
clc
mov
das
dec
inc
popf
jo
data16
jae
ret
mov
xor
add
jge
stos
pop
fldenv
xchg
adcl
or
loop
ret
inc
data16
call
in
bound
sbb
fisttpl
pop
sbb
ljmp
jmp
daa
int3
push
jl
fisttpl
insl
push
bound
or
xlat
and
push
lcall
pop
je
iret
jno
aam
andl
adc
shrl
vpsubusb
adc
icebp
roll
dec
xchg
jb
add
jl
stos
mov
sbbl
aad
test
xor
mov
nop
sub
cmp
mov
lods
dec
test
mov
insl
pop
cltd
enter
out
cwtl
mov
adc
jmp
cmp
cmp
lcall
pop
flds
xchg
dec
out
pop
or
sbb
mov
movsl
int3
jecxz,pn
sbb
dec
jp
sar
mov
adc
test
repz
stc
cld
fnstcw
jae
std
imul
xchg
xchg
inc
xchg
sbb
fwait
mov
stos
xchg
push
mov
fisubrs
ret
insl
or
xor
in
jns
fstl
mov
popl
and
repnz
push
repz
inc
bound
jae
push
xchg
cmp
inc
out
in
sub
out
fidivrl
test
test
adc
ljmp
jmp
sbb
inc
sti
and
shr
jno
rcrb
mov
sarb
and
xor
call
mov
xor
lock
or
jecxz
and
stos
pop
bound
pop
ss
enter
or
jb
cld
sub
or
xchg
add
pushf
in
dec
or
sbb
dec
xchg
or
inc
mov
pop
pop
push
jmp
test
sbb
jl
lret
inc
fdivrs
and
sub
xchg
mov
add
jo
imul
mov
stos
icebp
add
jne
leave
xor
jns
js
fmulp
je
mov
cmc
lods
dec
sub
add
xchg
sub
sub
lret
inc
insb
addb
loope
mov
mov
mov
movsb
adc
ljmp
movsb
int3
add
pop
movsl
sbb
push
shll
push
sub
lcall
leave
dec
les
movsl
iret
fs
sub
push
lret
fwait
pop
xor
mov
sbb
daa
dec
jle
fsubr
mov
scas
mov
cs
jnp
ret
inc
push
dec
ds
roll
mov
and
addr16
fnstsw
cs
pop
inc
jle
rcll
or
xchg
dec
cmc
sub
inc
mov
rcll
pusha
stos
hlt
cmp
dec
cmp
lret
jns
xchg
loope
jge
xchg
arpl
cmpsb
inc
out
imul
imul
pop
jb
cwtl
mov
fwait
fs
sub
lcall
addr16
jle
cmc
lret
jns
pop
loopne
xor
ljmp
or
outsl
xor
imulb
xchg
fmull
dec
mov
movsl
mov
imul
scas
push
aaa
insb
add
inc
mov
jae
xor
jle
jb
cmpsb
or
ret
repz
sbb
ret
cmp
lret
and
stc
mov
icebp
in
adc
sub
fdivrs
xor
pop
pop
jp
mov
ss
xchg
fs
in
push
push
pop
push
push
sti
and
inc
mov
fnstcw
cmp
xlat
jno
lock
movsl
mov
push
fistps
fs
dec
xor
push
adc
adc
mov
fimuls
ret
and
jbe
xchg
xor
xor
add
hlt
les
jecxz
cmc
data16
mov
mov
pushf
imul
fst
dec
popf
push
out
jecxz
int
pop
adc
orb
lea
mov
int3
cmp
push
movb
call
inc
sbb
jmp
aam
push
mov
scas
cltd
outsb
loopne
jl
sub
arpl
push
iret
and
jno
outsl
mov
rclb
lock
cmp
mov
or
xchg
mov
push
add
gs
xchg
dec
xor
push
mov
subb
inc
and
xchg
je
fs
pop
lret
mov
out
add
sti
push
lahf
daa
mov
out
addl
mov
jbe
jae
std
xor
insb
dec
sbb
cltd
xchg
lods
xchg
jmp
mov
aaa
sub
out
dec
pusha
adc
cmp
fs
adc
jno
repnz
xchg
outsl
outsb
mov
adcl
mov
ss
in
in
lock
xchg
lea
dec
out
lcall
add
cmp
stc
pop
fwait
xor
mov
cmp
mov
aad
jecxz
iret
dec
ljmp
daa
cmp
roll
leave
inc
xchg
jecxz
ljmp
je
pop
cmp
lret
adc
fbld
xchg
mov
in
das
popa
lea
aaa
xlat
inc
fcomps
jg
ds
leave
pushf
shrl
orl
cli
sbb
mov
cld
add
aad
std
or
jbe
and
mov
out
mov
push
xor
add
cmp
insl
xchg
nop
jl
add
fldt
insl
push
and
mov
js
iret
loopne
fwait
mov
pop
out
bound
cltd
test
stc
loopne
xchg
lds
dec
adc
scas
insl
movsl
add
jbe
test
movsb
fwait
jecxz
divb
outsl
fdivs
xchg
push
mov
stos
pop
movsb
sub
popf
shrb
int
mov
adcb
mov
loope
scas
decb
out
dec
shlb
dec
lock
push
sahf
push
pop
cmp
xchg
lret
xchg
cwtl
push
fdivr
pop
cltd
dec
sub
sahf
jne
out
mov
sub
inc
add
scas
std
cld
jae
and
or
std
or
push
andb
ret
jg
jno
push
pop
cmpsb
push
mov
add
repnz
inc
jnp
out
ret
adc
cld
jl
push
ret
js
pop
sbb
ja,pt
data16
lock
inc
add
sub
jp
imul
pop
imul
push
lods
in
and
stos
sahf
sti
in
lods
rorb
cltd
imul
sahf
jle
mov
test
movsb
dec
inc
add
mov
add
and
cmp
popf
ret
mov
xor
aaa
lahf
out
pop
mov
mov
insl
inc
jno
jmp
andl
nop
xchg
cmove
and
mov
aaa
mov
mov
push
cmp
mov
pop
xchg
mov
sarl
push
or
mov
stos
stc
sub
push
enter
mov
lods
mov
push
in
xchg
aaa
jo
sbb
ds
imul
mov
lds
cmc
nop
loopne
xchg
cmc
cmp
sbb
mov
add
pop
test
xchg
icebp
mov
scas
lret
jecxz
push
dec
bound
dec
sti
cmp
inc
pop
pop
stc
das
imul
sbb
insl
out
xchg
maskmovq
mov
enter
int3
rcl
sub
aas
insb
and
movsb
mov
dec
jns
ret
dec
or
add
mov
mov
sbb
orb
fldcw
into
adc
adc
lret
into
xchg
fs
inc
pop
mov
ret
push
rcl
vaddsubpd
mov
jecxz
arpl
jp
ret
inc
and
xchg
mov
mov
mov
test
jl
push
and
jp
leave
push
mov
fs
mul
lahf
mov
cwtl
lods
shl
fs
add
lret
inc
movsl
dec
sbb
fsubl
jno
jne
fldenv
xchg
and
movsb
and
imull
cmpb
movsl
lock
push
adc
jnp
clc
pop
movsb
int
inc
imul
ret
movsl
add
jle
jg
add
rol
or
lret
lret
fs
fwait
xchg
or
aad
xchg
test
adc
inc
jo
repnz
jb
div
clc
xchg
sub
xchg
mov
mov
sbbl
xchg
jo
rcl
inc
mov
imul
or
sbb
xchg
mov
imul
lret
dec
movsl
sub
inc
aad
xor
sbb
pop
in
xchg
rolb
in
pop
adc
or
mov
dec
sti
mov
or
jecxz
shll
imul
or
cli
popaw
ret
popa
pop
cmpsl
hlt
xchg
pop
inc
push
inc
std
ljmp
icebp
pop
inc
jne
jo
rorl
mov
push
or
fldl
mov
adc
jecxz
cmp
push
sbb
xchg
pop
icebp
rcrl
sahf
sahf
das
xchg
inc
loope
fdivrl
push
cmp
sub
cmp
jnp
mov
pop
xchg
inc
ljmp
in
mov
jbe
xchg
push
test
test
push
ret
sub
cmovno
mov
or
test
sbb
sbb
mov
aam
xchg
bound
mov
dec
mov
xchg
addr16
sub
pushf
inc
mov
aam
mov
testb
mov
and
aam
push
test
xor
call
aaa
fstpl
push
test
loop
pushf
fwait
les
mov
adc
arpl
dec
jmp
mulb
or
movsl
fwait
pop
adcl
shlb
es
lock
mov
push
jbe
cmc
ljmp
lret
clc
mov
mov
lock
and
cltd
testb
add
arpl
and
jae
mov
mov
sub
sub
jg
pop
mov
mov
int3
and
ss
adc
sub
out
dec
adc
add
negb
loope
sub
and
xchg
jb
and
dec
das
mov
repnz
mov
enter
shlb
loope
mov
jle
aam
jp
mov
pop
ds
xchg
adc
mov
in
dec
add
inc
sbb
add
mov
icebp
pop
add
shlb
push
xor
fidivrl
mov
cmpl
scas
jae
sbb
lea
xchg
adc
outsl
and
jge
or
xor
cli
xchg
mov
xor
sbb
scas
dec
mov
icebp
rcrl
jmp
popa
pop
jp
loop
ret
outsb
xor
sti
test
test
rcr
pop
add
sti
flds
gs
push
hlt
adc
mov
test
mov
dec
out
fiaddl
xlat
repz
inc
and
repnz
stos
lea
popl
mov
pop
sub
adc
aam
insl
fwait
push
xchg
mov
call
bound
incb
mov
int
push
push
or
out
and
jle
mov
setae
lods
sub
or
aaa
fwait
pop
jnp
fsubrl
xor
sarl
lock
test
xor
push
mov
add
pop
rcrl
leave
pop
mov
cmp
inc
inc
nop
cmp
mov
leave
push
movsl
push
aas
adc
sub
sub
cli
mov
add
daa
popf
cs
rorb
mov
xor
inc
aam
jp
cmp
shrb
add
mov
dec
and
adc
lds
adc
dec
ljmp
into
lret
or
sahf
add
repz
jnp
ret
insb
ret
fsubrl
xor
cmp
mov
xor
mov
loopne
lods
jnp
dec
dec
aaa
jbe
xchg
inc
jbe
add
jo
mov
mov
int
mov
clc
mov
inc
ljmp
push
lods
mov
lods
mov
repz
jae
lcall
imull
in
or
ja
std
popf
pop
push
xor
shlb
xchg
cmc
test
fidivs
jne
mov
mov
cmp
lods
xchg
and
push
cmpsb
out
outsb
pop
sbb
je
inc
mov
mov
lahf
popf
pop
sub
arpl
or
aaa
fmull
std
xchg
ss
popf
lods
lock
lods
call
push
xchg
dec
mov
nop
scas
jnp
push
repnz
popl
bound
xorb
adc
stc
cmpsl
pop
sbb
stos
ds
xchg
mov
and
jo
fbld
mov
or
rcr
out
testb
cmpsl
push
jp
daa
lret
out
fimull
sub
xchg
notl
fbstp
cmp
jle
jnp
dec
outsl
add
fisttpl
addr16
arpl
aam
mov
frstor
mov
inc
mov
or
pop
add
cmp
aas
and
push
inc
aaa
out
mov
xchg
mov
popa
stos
jl
jge
mov
push
sbb
pop
cmpsb
mov
xor
shll
push
or
test
add
mov
push
xchg
add
push
dec
push
mov
sti
sbb
filds
dec
stos
ja
shlb
nop
shrl
lret
cmp
out
pop
jb
inc
push
and
lods
jl
sbb
xchg
mov
adc
test
inc
hlt
pop
mov
or
xchg
fisttpl
sbb
cld
imul
add
fwait
jmp
xor
int3
push
test
push
icebp
and
int
push
dec
lret
js
and
fdivr
xchg
imul
dec
test
adc
aad
sub
sti
adcl
adc
adc
jle
movsb
insw
das
mov
inc
pop
pop
gs
adc
jno
xchg
mov
in
je
pop
mov
pop
sbb
xor
lret
cmp
dec
sub
xor
into
sbb
es
leave
jb,pt
jl
mov
mov
cltd
push
sarb
jnp
icebp
data16
daa
lods
ss
in
or
out
loop
sub
test
movsl
into
lods
sbb
mov
lcall
sbb
addb
dec
in
push
mov
sti
movsb
fcompl
fstl
xor
lret
mov
ljmp
aas
mov
daa
push
das
jp
insl
xorb
movsb
gs
dec
mov
mov
stos
lcall
mov
insb
jmp
cmp
sbb
daa
push
or
cmpsb
ljmp
sbb
mov
movsl
inc
xor
push
std
jl
out
pusha
dec
lcall
jge
inc
mov
hlt
and
pop
pop
aam
push
into
push
push
add
cmpsb
add
fldenv
in
dec
test
sahf
fldcw
ja
pop
popf
insl
adc
cmpsl
nop
insl
fmul
nopl
xchg
sbb
out
ret
lcall
stos
jne
scas
mov
push
and
shll
iret
cmp
lcall
xor
cmpsb
add
lcall
jno,pt
stos
imul
sub
cmpsb
pop
and
outsb
jl
adc
fucom
bound
lcall
cmp
xchg
add
sbb
push
movsl
sbb
loop
lea
pop
xchg
mov
sbb
repnz
mov
sbb
sahf
movl
jle
test
push
aam
push
ficoml
add
sub
adc
dec
xchg
sub
lock
cwtl
cmp
fcoml
pop
lea
lods
pushf
cmp
jge
out
xlat
and
adc
pop
adc
sbb
js
sub
test
call
movsl
fbld
push
push
jp
mov
or
and
mov
fnstcw
cmpsl
cli
push
enter
or
nop
cmpsl
lret
or
push
adc
inc
out
mov
call
jl
test
test
rcl
jge
pcmpeqd
cmpsl
ja
mov
jg
mov
stos
xchg
rcrb
mov
mov
das
arpl
dec
cwtl
push
subl
int
push
xchg
add
mov
aaa
and
push
adc
shrb
sbb
es
dec
mov
push
lock
pop
add
enter
cli
dec
std
xchg
cld
pop
mov
mulb
xchg
outsb
pop
inc
cmp
fisubl
push
sub
aam
cmpsb
pop
sub
mov
adcl
sbb
icebp
add
sbb
aaa
pusha
mov
mov
or
xchg
ret
fs
leave
pushf
inc
nop
add
movsb
push
mov
inc
dec
aaa
lea
fisubrl
loop
jne
jmp
stos
push
je
arpl
iret
out
pop
lods
pop
mov
bound
cmpsl
mov
sbb
cmp
lods
sbb
mov
fildll
test
push
mov
insb
or
mov
lret
or
sbb
in
dec
adc
ret
outsl
lcall
pop
and
out
inc
scas
test
push
lods
mov
popa
push
hlt
popf
jle
cmpsl
std
out
and
lret
mov
and
pop
mov
cmp
cmp
adc
ljmp
addr16
dec
loop
pop
pop
pushl
pop
testl
sbb
push
xlat
xor
jne
and
mov
insl
push
add
sub
dec
jle
xor
sti
int
sub
cltd
sbb
daa
add
jg
pop
adc
sbb
pop
cmpsb
call
cwtl
and
mov
mov
repnz
in
repz
inc
out
push
push
sub
test
in
out
cwtl
fwait
cmp
punpckhdq
rcrb
add
pop
js
mov
sbb
cmp
idiv
mov
rcrb
pop
popf
ja
mov
cmc
sbb
pop
jne
loopne
jae
xor
repz
xor
andb
call
dec
rolb
pop
sub
dec
push
mov
lea
add
ret
sbb
fwait
repnz
cmpsb
aaa
arpl
xor
ret
sar
adc
in
push
aad
mov
daa
xchg
insl
lods
fimull
push
jecxz
imul
mov
xchg
stos
adc
xor
inc
ret
push
fwait
adc
mov
mov
pop
push
pop
in
jmp
lret
loope
sbb
out
cmp
cmpsb
je
rcrl
cmp
mov
aaa
mov
push
scas
js
sahf
push
std
sbb
outsb
insl
push
jno
icebp
jae
enter
sub
outsl
mov
jp
bound
mov
ret
push
loope
test
insl
cs
nop
out
imul
movsl
aad
mov
je
lcall
push
dec
or
loopne
js
xchg
mov
jnp
in
lea
fidivl
andl
sub
sbb
xchg
aas
mov
cmp
into
flds
xchg
mov
je
and
rorb
pushf
rclb
and
adc
mov
jo
pop
lret
lcall
dec
fwait
cwtl
jle
pop
jmp
sub
nop
test
jo
aam
test
pop
lods
jbe
hlt
push
jge
leave
or
mov
xor
pop
inc
adc
lret
pop
mov
pop
out
les
jmp
mov
or
les
xchg
pop
mov
stc
inc
cmpsb
out
xchg
mov
mov
mov
std
cltd
call
add
dec
movsl
adc
jecxz
add
and
les
imul
and
mov
ljmp
mov
lods
mov
and
outsb
dec
add
mov
pop
out
xlat
adc
aad
sbb
lahf
or
jl
aaa
arpl
arpl
jge
jbe
xchg
mov
sub
sti
sbb
es
push
add
fsub
pop
mov
sahf
test
mov
sbb
adc
jae
push
lcall
in
sti
add
dec
mov
pop
lret
jmp
cld
shlb
xor
sub
cmc
fisttpll
pusha
pop
xchg
stc
fbld
mov
test
jle
mov
mov
sub
sti
push
jo
push
add
out
xlat
push
jecxz
push
mov
push
test
adc
int3
cltd
sub
xor
push
ficoml
js
add
pop
adc
iret
mov
push
insb
cld
test
adc
and
jle
pop
xor
mov
jnp
leave
iret
aaa
mov
lret
cld
and
and
push
inc
lret
arpl
xor
push
lret
shl
stc
jnp
aam
pop
mov
and
cmpl
mov
cmp
lret
inc
addr16
ljmp
jo
xlat
mov
inc
pop
call
pop
cmp
faddp
push
out
mov
add
jne
sbb
arpl
scas
add
mov
sbb
cmp
xchg
pop
imul
insb
dec
mov
jge
sahf
jmp
imul
push
xchg
xor
dec
in
and
mov
leave
jle
fildll
jmp
out
outsl
add
pop
inc
and
push
add
inc
nop
jp
adc
push
repz
xchg
fisubl
mov
jle
bound
lret
insl
fwait
testl
ret
cmp
cmp
test
call
andl
dec
scas
xor
push
dec
dec
mov
imul
leave
pop
inc
push
dec
out
dec
bound
imul
jno
cmc
mov
fcomip
pop
sbb
js
outsl
stc
or
push
push
push
pop
add
clc
cmp
call
cld
mov
xchg
jecxz
push
mov
cmp
icebp
mov
jb
and
push
xchg
rolb
cmp
test
fucom
sbb
mov
lock
cwtl
mov
inc
dec
adc
xchg
push
mov
pop
ret
lds
cmpsl
rclb
jg
push
cmp
and
jbe
mov
cmp
inc
push
lods
pushf
call
inc
flds
xor
in
sarb
push
and
push
stos
data16
mov
orb
dec
pop
ds
sti
xchg
pop
jnp
add
adc
jge
mov
sbb
xchg
imul
add
and
cmp
in
cmpsb
adc
addb
adc
sti
les
mov
sub
sbb
in
sbb
inc
shr
sub
add
or
or
in
lret
aas
push
loope
adc
mov
jae
enter
mov
insl
sbb
pop
jle
mov
mov
sbb
stos
mov
adc
xor
and
sub
fcomp
aaa
ljmp
sbb
repz
jle
test
adc
popa
dec
pop
fimull
xor
mov
xor
jecxz
mov
addr16
xor
jecxz
jp
int
popf
jl
mov
lods
push
icebp
loope
popf
inc
test
and
int3
and
add
hlt
cld
jne
xchg
pop
mov
andl
inc
pop
data16
inc
popf
mov
xchg
call
stos
sub
cmpsl
iret
push
cmp
mov
shrl
mov
mov
pop
lock
xchg
sub
xor
scas
mov
mov
stos
adc
inc
push
lods
daa
push
mov
rcrb
pop
lods
scas
dec
aas
pop
cmp
cmp
lds
insb
xchg
jmp
mov
pop
leave
mov
and
ja
push
jmp
mov
inc
int3
adc
or
push
or
cmp
mov
xchg
cltd
and
xchg
and
fidivs
push
dec
inc
scas
xchg
punpckldq
pusha
lock
sbb
stc
imul
push
dec
pushf
inc
sub
cmp
notl
aaa
adc
fistpl
div
arpl
out
xor
int
lods
stos
push
gs
pop
mov
and
movsb
adc
xor
xchg
dec
dec
rcrb
arpl
cmp
dec
xor
xchg
movsl
mov
rcrb
pop
outsl
pop
sub
add
or
dec
dec
sbb
arpl
in
adc
dec
fwait
outsb
je
bound
js
mov
ja
dec
sub
test
jl
mov
or
mov
mov
bound
push
out
sub
or
mov
push
test
jo
sar
mov
sub
std
lods
sbb
mov
notb
aas
shrb
daa
ss
rcl
cmp
je
xor
popa
sbb
clc
or
dec
inc
lcall
ja
dec
insl
jge
dec
mov
loopne
mov
bound
imul
push
xor
mov
pop
push
mov
out
jl
sbb
test
lret
add
dec
out
loope
and
test
xchg
loope
jo
jp
dec
xor
mov
insl
mov
add
pushf
inc
sbb
push
rorl
pop
int
xchg
es
loop
call
shl
add
inc
sub
cmp
sbb
xchg
dec
ret
or
subb
xor
pop
mov
xor
xor
mov
inc
repnz
pop
jne
lcall
push
outsl
pop
pop
shlb
stos
xchg
fisttpll
hlt
insl
cmc
into
cmp
insl
jg
mov
das
ficoml
lods
sbb
xor
add
mov
and
popf
xor
sti
scas
sbb
imul
loop
mov
add
insb
subb
add
aaa
sub
mov
testl
sub
test
jmp
push
cmp
std
xlat
dec
cmp
and
mov
mov
fucomi
add
push
cli
lods
xchg
js
fisubs
cld
jnp
sbb
pop
lret
push
mov
push
popa
lret
shll
xlat
xor
cmp
call
dec
cmp
or
jecxz
mov
enter
and
and
pop
out
inc
sub
int
sbb
std
jge
sbb
js
push
mov
add
imul
imul
gs
mov
and
push
sbb
es
pushl
shrb
les
cltd
sbb
loop
adc
repnz
mov
ret
and
xchg
into
popf
sysexit
imul
dec
and
stc
lcall
pop
loop
das
pop
call
insl
ret
cltd
dec
cs
fs
in
imul
and
icebp
push
pop
xchg
ret
enter
daa
mov
fimull
mov
push
stos
sbb
in
divl
cmp
mov
adc
jnp
mov
nop
fsubrl
xchg
xchg
popl
lea
xchg
aam
dec
pusha
pop
cmc
adc
mov
pusha
subb
xchg
jne
xchg
das
hlt
push
push
adc
xchg
dec
xchg
dec
cltd
mov
push
xchg
lret
pop
lods
repz
std
rcr
xchg
xchg
pushf
mov
loopne
push
push
stc
aas
inc
mov
pop
fdivp
jge
and
dec
push
push
aaa
arpl
xchg
sub
addr16
adc
jg
scas
or
movsb
sahf
dec
mov
orl
push
pusha
dec
les
xchg
jb
lods
dec
and
sarb
mov
sbb
dec
rep
hlt
xchg
jns
xor
fwait
and
out
xchg
stos
or
push
out
cltd
push
and
repnz
outsl
cmp
lods
ds
ja
lcall
stc
jne
fsts
sbb
xor
inc
repnz
imulb
fwait
das
mov
mov
out
xor
pop
pop
stos
add
or
imul
aaa
insb
icebp
icebp
mov
loopne
mov
dec
scas
jae
or
cmp
dec
mov
push
sbb
clc
data16
sbb
push
stc
cltd
dec
cwtl
mov
mov
stos
decl
inc
repz
or
sub
popa
xchg
por
mov
js
fs
inc
push
xchg
cmp
cmc
data16
jb,pn
es
adcl
push
adc
pusha
push
mov
jne
iret
lods
mov
and
call
lods
scas
int3
pop
sub
fmuls
xor
xchg
inc
jo
jle
enter
insl
ret
movb
adc
sbb
and
shrb
mov
jecxz
in
add
xor
clc
inc
scas
sbb
dec
sbb
adcb
fisubrs
orl
outsl
push
adc
push
mov
fstpl
and
fwait
or
push
jmp
cmpsl
icebp
push
lods
dec
leave
cmp
test
push
repz
enter
push
mov
xchg
mov
sub
push
test
arpl
mov
or
xor
push
dec
rorb
add
or
mov
das
xchg
dec
pop
js
mov
jne
shll
rcr
or
cs
mov
lods
xlat
imul
adc
shl
test
inc
add
lret
dec
xchg
jp
cmc
mov
push
or
test
je
xorb
sub
inc
decb
dec
mov
mov
in
dec
js
push
jg
push
xor
outsb
repz
xchg
push
lret
sbb
cmpsb
cmp
sarl
adc
std
add
pop
adc
icebp
push
or
sbb
pop
loop
nop
mov
push
dec
enter
repz
sbb
mov
js
pushf
lods
pushf
mov
ret
sub
ret
jecxz
das
add
mov
jg
lret
pop
fisubrs
clc
int
push
or
cmp
xorl
cmp
sbb
pop
int3
loope
pop
dec
mov
iret
rol
cmc
fsubrs
fcomps
ret
sbb
xor
jb
daa
jle
lods
fistl
dec
and
insb
fistl
cmp
je
jge
mov
cmovl
dec
xor
lds
mov
dec
std
pop
shll
jg
outsl
mov
or
sahf
sbb
cmpsb
dec
popa
ds
add
icebp
cli
xchg
sbb
push
int3
sbb
pop
bound
inc
jnp
cld
adc
or
aam
jl
bnd
pushf
pop
sub
xor
in
jne
jecxz
xchg
mov
adc
out
rclb
jae
sub
jecxz
stos
jae
mov
xorl
mov
icebp
mov
call
fwait
jno
rcrl
cmp
aam
pop
imul
mov
xorb
xor
inc
addb
mov
fcoml
outsb
imul
cmp
mov
mov
pop
jge
pop
jl
aam
or
nop
jecxz
dec
jge
movsl
shll
cld
adc
xlat
out
sub
or
insb
fstl
mov
xchg
mov
imul
inc
lret
mov
out
pop
mov
fdivl
popf
ltr
push
jno
call
pop
jae
inc
xchg
push
fmuls
mov
mov
es
or
arpl
lret
adc
inc
jmp
arpl
fstl
fcmovb
push
lds
pop
andb
pushl
pop
xor
lret
gs
and
xor
and
inc
adc
stc
inc
mov
dec
mov
xchg
lret
push
shlb
cld
push
mov
sarb
lea
cmp
sub
fstps
imul
je
xchg
mov
push
xchg
mov
push
in
and
sub
add
lret
adc
push
in
hlt
das
je
add
addr16
mov
push
jno
notb
testb
ret
rorb
add
popa
add
pop
pop
in
in
adc
adc
mov
mov
or
xor
sub
pop
jne
sti
insb
jge
vmptrst
jbe
leave
int3
call
pop
sub
sbb
jmp
xlat
or
cltd
and
ja
inc
and
fmuls
outsb
cmp
shrb
aam
lret
jae
mov
out
std
in
inc
inc
jbe
dec
mov
ljmp
push
xchg
hlt
mov
int3
mov
cwtl
adc
cmc
cmc
sub
iret
pop
bound
jno
scas
out
cmp
push
mov
mov
xchg
mov
mov
loop
out
cwtl
fs
outsb
mov
ret
pop
stc
xor
push
xor
add
jecxz
pmullw
fucom
loop
pusha
in
push
xchg
inc
push
push
push
rcl
dec
aam
or
and
xor
add
lahf
pop
adc
js
adc
mov
dec
push
mov
push
cltd
les
cmp
stos
adc
out
arpl
pop
mov
in
test
jbe
push
push
pop
mov
cltd
outsb
mov
call
pop
cmp
icebp
inc
push
mov
icebp
pusha
jmp
xor
push
inc
insl
ret
add
jmp
jae
mov
loop
xchg
push
out
xchg
imul
jle
bndldx
clc
adc
fwait
orb
lret
sub
leave
add
and
and
jno
jmp
sbb
xlat
bound
int
loopne
in
das
call
les
push
das
xlat
xchg
fdivp
fdivp
ja
xchg
rorl
daa
test
int
inc
cmpb
pop
sbbb
sub
jae
mov
mov
jg
fistpl
adcl
mov
push
leave
cmp
call
fcomp
add
pop
jbe
jg
out
ja
mov
mov
fsubs
jo
in
cmp
adc
add
fstpl
ret
test
into
popa
rcrl
xor
inc
sbb
or
nop
sbb
subl
xlat
sbb
jp
mov
dec
push
add
inc
xchg
lahf
lret
dec
mov
push
fcoml
cmc
xchg
mov
pop
pop
mov
add
cmp
lea
mov
adc
jno
fwait
and
jb
dec
inc
mov
inc
out
mov
cmp
ret
ljmp
pop
test
cmp
cmp
cli
andb
andl
das
or
adc
mov
dec
inc
dec
std
mov
inc
sbbl
addr16
and
outsl
das
mov
in
lea
push
add
push
cmp
nop
dec
ljmp
adc
push
cmp
push
add
mov
adc
stos
push
aas
jb
pop
pushf
jp
lcall
sbb
lcall
loope
aam
jne
ja
or
in
pusha
sub
mov
inc
popf
data16
pusha
je
shlb
cmc
push
jo
arpl
sbb
sbb
xor
dec
inc
daa
cmp
scas
addr16
adc
sahf
int3
add
mov
aam
fists
mov
push
and
pop
cmpb
rcr
inc
inc
jnp
or
shl
xchg
adc
inc
jle
mov
dec
bound
inc
pop
pop
fs
xor
lods
push
inc
loop
fdivrp
mov
out
rclb
out
jg
lcall
mov
enter
in
into
imulb
int3
jnp
fadds
push
jnp
dec
test
or
xchg
stos
lods
cmp
or
sar
clc
lods
stos
fidivs
fisubs
insl
movsb
lcall
sbb
rol
out
ds
mov
mov
adc
mov
out
dec
cmp
in
popa
fbstp
sub
push
mov
mov
and
sub
in
out
gs
push
repz
push
xchg
inc
inc
in
jnp
cmp
lahf
push
adc
int3
push
dec
add
enter
dec
mov
mov
dec
fucomp
xlat
mov
lcall
repnz
xor
or
pop
stos
jl
popa
pop
mov
and
cld
subb
mov
xor
je
xchg
addr16
popa
in
js
lret
daa
or
jae
inc
sub
lret
shl
fwait
lret
inc
das
pop
mov
cmpb
mov
frstor
adc
mov
cs
adc
cs
cmp
push
push
mov
das
xor
or
mov
fldt
mov
or
inc
lcall
inc
xor
xchg
fnsetpm(287
jb
jmp
lods
in
mov
hlt
or
roll
loopne
aad
shr
insl
pop
aad
sbb
cmp
test
inc
mov
pop
mov
dec
shrl
inc
sub
cmp
jle
lret
daa
aad
test
pop
inc
adc
enter
outsl
cmpsb
xchg
mov
enter
ret
mov
xchg
mov
bound
and
loopne
and
push
or
add
or
jmp
dec
adc
cmpb
imul
jp
ret
xor
popa
xchg
sbb
cwtl
jne
stos
leave
test
pop
fsubs
ljmp
pop
push
movsb
and
mov
ljmp
cmc
add
or
ds
add
movsl
dec
push
xchg
add
nop
lea
push
sub
ja
xor
or
stos
nop
and
mov
lahf
out
add
dec
pop
adc
test
fld
scas
push
jae
jge
stos
jge
push
jge
bnd
dec
subb
mov
push
cmp
sbb
pop
and
clc
lock
cmp
mov
cwtl
lods
sbb
push
aad
mov
mov
test
aas
add
add
push
lock
repz
repz
jns
mov
movsl
push
xchg
xchg
mov
jae
xchg
in
mov
stos
mov
inc
xchg
sub
orb
cmp
insl
aaa
insb
loop
and
lret
mov
and
stos
cmp
pop
mov
push
jb
addr16
cs
mov
pop
cmp
in
dec
or
loop
insl
xchg
mov
shl
clc
xor
stos
cwtl
es
icebp
jnp
icebp
stc
bound
jge
sbb
add
pop
xor
mov
cli
cld
jae
test
pop
jecxz
adc
dec
jne
js
outsl
cli
push
stc
cltd
xchg
push
jmp
dec
inc
xorb
lahf
sbb
ffree
repnz
jl
dec
cli
sub
pop
mov
test
mov
arpl
jno
mov
sub
mov
mov
lret
push
mov
popf
out
bound
xchg
outsb
int
push
jmp
pop
test
or
and
ljmp
aam
push
sub
fcoms
cmp
shlb
aaa
mov
mov
gs
lea
inc
sub
addr16
mov
sbb
jo
dec
mov
mov
fidivrl
xor
dec
or
pusha
pop
mov
stos
xor
pop
push
add
xor
sahf
fwait
mov
call
xchg
iret
push
pop
inc
inc
mov
cmp
sub
lret
pop
jmp
fwait
or
jae
pop
inc
stos
dec
cmp
rclb
jbe
xchg
repz
push
inc
add
mov
push
xchg
imul
mov
or
pop
push
xor
mov
mov
add
fucomip
sahf
dec
dec
sbb
loop
loope
and
cld
add
sbb
pop
add
mov
sub
movsb
jne
sbb
enter
scas
outsb
mov
jp
addr16
imul
sub
sbb
lds
mov
push
mov
gs
push
sub
sbb
orb
mov
push
imul
ljmp
jmp
mov
cmp
loopne
in
sbbl
adc
jbe
dec
add
scas
lret
mov
cli
xor
adc
pop
pusha
dec
int
repz
cmp
inc
outsl
hlt
push
bound
popa
cmp
mov
out
ficompl
pop
insl
xchg
ja
mov
inc
ret
mov
xchg
add
add
adc
test
mov
mov
inc
xchg
dec
jbe
sti
mov
cwtl
roll
fldenv
mov
mov
ljmp
movsl
ja
jecxz
inc
mov
aas
or
cmpsl
jge
aaa
sub
mov
mov
aam
lods
pop
addr16
sub
mov
insl
das
in
imul
sbb
cmpsb
push
movsl
sbb
rcrb
sbb
int
pop
nop
gs
adc
insb
jnp
ret
popa
ret
mov
frstor
fstps
outsb
fsubrl
sub
fcompl
pop
mov
mov
and
nop
mov
in
dec
pop
and
into
pop
push
jne
mov
mov
negl
popa
cmp
lret
pcmpgtd
out
es
jp
stos
testl
cmp
fildl
test
mov
cmp
cs
stos
pop
ret
push
mov
adc
mov
push
out
pop
sub
fistl
rorl
out
sub
cmp
nop
push
repnz
push
push
mov
push
insb
into
sbb
cs
push
and
add
adc
enter
push
or
ljmp
mov
out
sar
and
fdivs
clc
test
fsubrs
mov
inc
pushf
adc
sarl
jo
fsubrp
popf
leave
gs
cs
imul
pop
mov
inc
lahf
cmp
dec
mov
push
nop
cmc
je
mov
pop
and
or
mov
jmp
mov
hlt
inc
aam
push
cmpsl
xor
sub
test
push
sub
nop
mov
pop
dec
adc
test
mulb
testb
xor
xchg
shlb
xchg
sub
xchg
js
mov
into
xchg
xlat
mov
subb
mov
mov
outsl
ret
or
inc
pop
or
jb
unpcklps
mov
mov
jg
sti
mov
mov
cmc
cltd
xor
jnp
pop
cmp
dec
jb
lret
mov
jge
add
loop
adc
push
jecxz
jae
outsl
or
cmp
aas
test
int3
mov
sub
inc
pop
jo
jmp
xchg
das
mov
cld
inc
or
loopne,pn
and
sbb
jmp
push
loop
sbb
lods
ret
int3
icebp
es
das
jp
aad
loop
loop
jp
loopne
aad
stc
pop
pop
xchg
hlt
loop
cld
daa
out
testb
and
xor
push
std
cmc
mov
daa
or
fiaddl
dec
push
sarl
inc
aad
mov
mov
or
pushl
hlt
jne
jmp
pop
incl
pusha
dec
aaa
cmp
pop
insl
and
add
dec
inc
push
movsb
sub
dec
mov
sbb
xchg
mov
lret
mov
sbb
and
call
sub
mov
mov
inc
inc
pop
or
cmc
mov
ret
jnp
xchg
mov
nop
stos
inc
push
in
test
adcl
in
adc
jo
lea
or
cmc
ss
scas
mov
jle
and
test
mov
cmp
lock
push
and
add
sbb
adc
cmpsl
xor
movsl
push
popa
scas
mov
cmp
sub
je
inc
divb
jbe
bound
incb
jnp
lahf
xchg
test
rcl
fcmovnu
pop
ljmp
in
jp
mov
mov
push
in
pop
push
add
enter
mov
add
mov
cmp
ljmp
mov
int
inc
arpl
push
es
shll
fnstenv
dec
into
insb
incl
imul
adc
fbld
jg
sub
pushf
jbe
sub
cmp
pop
pop
xor
cld
pushf
pop
dec
imul
cs
mov
into
and
xlat
xor
inc
cmp
mov
mull
push
xchg
adc
pop
loop
jg
xchg
in
cmpsb
fsts
ror
and
mov
jbe
stos
data16
loopne
cltd
cmp
mov
inc
mov
mov
add
fstpl
jae
addr16
and
popa
test
fnsave
fs
cmp
jg
mov
popf
adc
in
xchg
push
xchg
cmp
inc
jmp
rdpmc
negl
roll
mov
stc
cmp
les
or
cmpsb
lds
pop
test
mov
dec
fdivs
fsts
into
cmp
or
ds
addr16
cmp
xchg
mov
jbe
mov
fnstenv
scas
xchg
scas
mov
jle
dec
jmp
add
out
sbb
sbb
enter
push
jne
xchg
xor
push
std
adc
pusha
rclb
xor
mov
push
cmp
xchg
pop
push
mov
adc
int
mov
jo
dec
xchg
fisttpll
dec
push
stc
rcr
push
cmp
dec
jns
mov
aaa
push
pop
pop
or
or
shrb
je
pop
push
sub
loop
sbb
ret
jne
fmull
add
mov
fsubrp
or
fildl
fistpl
repnz
ficomps
pop
xor
call
jno
lea
add
xchg
adc
enter
or
insl
aaa
out
jb
jb
or
sbb
xchg
and
loope
and
cmpsl
leave
or
xorb
mov
movsb
stos
mov
or
popa
sbb
add
shl
rorb
xor
es
loope
outsl
imul
and
or
cmp
fsubs
xchg
pop
push
hlt
ljmp
xchg
xor
leave
dec
jl
xor
mov
shll
rcrl
pushf
pop
ljmp
inc
aas
into
xchg
xchg
clc
sbb
xchg
inc
push
or
lock
outsb
add
dec
arpl
sbb
jl
mov
lcall
cwtl
gs
pop
cmp
test
mov
fsubrs
push
push
loope
jge
rolb
sbb
out
inc
or
leave
test
pop
ficoml
les
adc
out
nop
inc
add
jno
push
push
mov
push
pop
loop
dec
xchg
xchg
je
xor
cwtl
lcall
jg
xor
cmp
out
test
repz
jae
xorb
shll
arpl
aas
insl
mov
jnp
or
push
jo
bswap
xchg
xor
cmpb
shrb
out
fdivl
add
pop
mov
cli
mov
mov
aad
sbb
in
push
je
pop
mov
das
mov
mov
dec
pop
dec
adc
adc
rclb
insb
xor
fimull
sbb
les
sub
nop
test
mov
or
mov
mov
jo
mov
pushf
push
dec
pop
xor
out
push
decl
in
je
les
test
add
lret
jb
outsl
xor
and
jecxz
pop
inc
pop
push
adc
sub
add
insl
insb
xor
add
movsl
xor
loope
adc
or
jb
pop
jl
jg
pop
adc
insb
aad
mov
jge
cmpsb
int3
sub
sbb
adc
mov
jne
aad
das
cmc
in
jnp
cld
sub
cmp
pushl
cmp
mov
xchg
xchg
add
in
dec
ret
bound
out
ret
push
pushf
or
and
jnp
add
stc
aam
jnp
sahf
dec
sahf
xchg
xchg
shll
cmpsb
dec
je
sub
lods
mov
xor
loop,pt
in
push
enter
fisubrs
data16
adc
inc
aas
insb
xchg
jmp
inc
sub
push
mov
sbb
inc
fnstsw
mov
xchg
lret
dec
adc
lret
inc
shrl
pop
mov
jmp
jb
int3
cmp
divl
cmp
les
push
fists
ret
ds
mov
and
insb
outsl
test
divl
xchg
call
push
sar
pop
mov
cmp
adc
push
push
jb
dec
inc
shll
sbb
sarb
stc
f2xm1
pop
js
jae
mov
xchg
and
loopne
loope
sub
fistpl
ds
rcr
inc
repnz
aam
mov
shll
fwait
int
pushl
pop
dec
pusha
testl
mov
arpl
jno
mov
jl
scas
mov
and
loope
inc
cmp
pop
xchg
cmp
fdivr
repnz
jg
inc
cs
movsb
je
mov
lret
xchg
cmc
pop
call
sbb
ret
test
movsl
jne
push
popf
push
pop
outsl
insb
cmc
stc
pop
mov
add
dec
pop
xchg
out
adc
cmpsb
sub
mov
push
andl
cmp
out
loopne
idiv
jecxz
mov
bound
sbb
xchg
xlat
or
or
xchg
shl
xor
jp
or
jmp
pop
fists
lods
sub
inc
test
divl
aam
dec
lds
mov
enter
push
xchg
sbb
lret
mov
xor
popf
adc
sarb
cmpsb
mov
dec
ret
push
push
ficomps
or
and
fistpl
xlat
incl
je
repz
cvttps2pi
nop
xchg
mov
mov
cs
push
pop
adcb
arpl
jge
cmp
mov
pop
addl
sbb
or
cmp
arpl
out
cld
inc
out
mov
icebp
jp
mov
bound
adc
mov
popa
sbb
pop
sbb
fbstp
ret
movb
push
sbb
jge
lcall
icebp
cmpl
lea
pop
cltd
hlt
subl
outsb
scas
mov
push
mov
subl
mov
jle
pushf
test
mov
push
or
outsl
movsb
ret
mov
and
jae
das
mov
pop
adc
dec
enter
push
inc
push
lock
icebp
pop
mov
mov
mov
andl
push
daa
mov
xor
push
sub
das
jo
enter
mov
xor
aad
insb
shlb
pushf
mov
lea
loopne
enter
jbe
in
sbb
cmp
cmp
push
mov
iret
ret
inc
or
jecxz
mov
les
loopne
outsb
push
scas
and
cmp
mov
or
jecxz
ret
jge
adc
andl
cmc
fldenv
adc
in
mov
lock
sbb
call
scas
adc
pop
test
repz
mov
push
mov
roll
or
pop
lods
cmp
data16
or
sub
fstp
or
pop
cmp
or
add
leave
daa
gs
pop
and
add
test
mov
inc
sub
mov
popa
push
and
cmp
jmp
jae
sub
add
in
call
adc
or
loop
sub
mov
pop
add
fcompl
pushf
mov
xor
sahf
out
dec
fimuls
dec
cmp
dec
pop
cmp
pop
sbb
in
mov
xchg
stos
xor
sub
mov
dec
inc
in
xlat
and
push
insl
in
outsl
pop
push
jnp
adc
adc
jle
jns
jge
xor
and
pop
cmpsl
push
mov
xchg
aaa
or
inc
outsb
or
jne
sbb
sub
fwait
sarb
stos
and
adc
xchg
iret
mulb
and
sti
lea
inc
mov
lods
lock
pop
jl
in
dec
and
xor
inc
jae
insb
andb
cli
sub
test
push
out
pop
in
aad
mov
or
xlat
in
jnp
ss
and
fsubrp
idivl
and
out
cli
test
push
scas
ss
andb
or
xor
adc
add
cltd
ret
decb
xchg
cmc
xlat
outsb
cmpsl
pop
jle
inc
test
subl
aam
mov
push
mov
insl
xor
adc
sub
and
and
out
adcb
bound
sbb
scas
push
add
adc
in
ds
add
xchg
push
cld
les
pop
mov
mov
pop
add
or
mov
sub
mov
pop
xor
dec
fs
mov
cmpsl
cmp
dec
rclb
bound
lea
dec
aad
xchg
sahf
and
adc
roll
roll
push
leave
sub
iret
inc
add
pop
in
mov
mov
or
insb
stc
mov
pop
addr16
mov
loop
out
paddusb
mov
sub
adcb
movsb
adc
ljmp
incb
addb
and
jb
push
dec
adc
cmpsb
push
scas
stc
add
fsubrs
sbb
js
push
or
jecxz
pop
lock
cmp
add
mov
or
loope
js
adc
dec
pop
or
popa
push
push
dec
push
les
mov
xor
cs
inc
inc
sarb
call
jbe
dec
cmp
repz
xor
pop
daa
popa
cmp
xor
dec
mov
test
mov
adc
scas
jmp
push
mov
xlat
jmp
push
sub
repz
or
int3
mov
adc
mov
adc
and
jae
add
sbb
adc
or
out
in
xchg
stos
add
imul
cs
xchg
mov
dec
addr16
sbb
sbb
pop
in
daa
and
aam
cli
dec
push
pop
and
xor
lods
aas
push
jg
lret
stos
inc
mov
sbb
inc
mov
rcr
mov
stos
shlb
xor
out
aam
mov
popf
popa
sub
and
push
daa
add
insb
aad
call
adc
ret
push
pushf
or
jge
es
and
data16
push
push
inc
insl
mov
icebp
adc
cli
xchg
mov
dec
sub
xor
gs
call
mov
add
mov
pop
arpl
lods
cmp
repnz
and
shlb
inc
mov
jns
push
cwtl
and
sub
jg
push
testb
dec
nop
lods
jae
jno
xor
jge
iret
pop
mov
dec
cmp
push
cmp
cmc
outsl
push
push
jecxz
jno
rclb
sbb
stc
push
cmpl
cmp
dec
mov
sub
push
adc
addl
pop
repnz
xchg
cmc
sarb
pop
int
daa
and
and
fisubl
push
jmp
push
jge
inc
push
aam
push
daa
xchg
insb
push
pop
jae
rcll
fldenv
adcb
cwtl
rcrl
sbb
testl
jo
pop
jb
test
pushf
pop
dec
cmp
mov
mov
outsl
inc
mov
push
and
and
lods
sbb
inc
jle
int3
jmp
sbb
mov
dec
lods
test
and
ret
insb
rorb
pusha
in
fs
pop
cli
lock
and
in
aaa
or
dec
adc
hlt
in
gs
mov
pop
mov
cltd
or
lea
push
outsb
mov
push
jbe
jo
lahf
je
sbb
dec
stos
loopne
dec
cs
lret
ljmp
shrl
mov
popa
sahf
orb
mov
and
mov
adcl
inc
enter
aam
and
outsb
xchg
xchg
frstor
out
pop
push
pop
jae
lods
cmp
outsl
test
add
ljmp
fbld
dec
or
icebp
pushf
insl
pop
leave
jbe
fucomp
pop
inc
mov
push
fsubr
pop
mov
es
fbld
jge
jmp
dec
hlt
adc
lods
mov
xrelease
fsubl
std
mov
sbb
bound
mov
cmp
cld
dec
push
outsb
mov
push
popa
into
pop
out
mov
and
ljmp
fwait
pop
or
inc
repz
inc
clc
lods
cltd
jle
cs
jmp
mov
mov
xchg
nop
inc
and
cmpsb
movsl
push
push
pcmpeqd
mov
inc
imul
in
les
adc
jne
sub
xor
ds
sti
fdivl
mov
imull
loope
or
dec
cli
lds
lods
inc
pop
push
adc
pop
stc
out
insl
sub
dec
cmp
cmp
or
adc
loopne
aad
xor
sub
jno
mov
scas
out
rorl
call
arpl
mov
test
in
dec
push
repnz
push
cmovg
adc
shl
pop
mov
adc
jecxz
and
jmp
hlt
adc
rorb
push
jbe
into
imul
push
mov
cmp
and
pop
lods
ret
jmp
mov
ja
mov
push
inc
pop
repz
xor
fs
xor
mov
ds
insl
sub
cmp
cmp
popa
repnz
es
daa
lods
dec
mov
test
aaa
and
or
push
inc
push
cmp
roll
jp
mov
xor
xor
push
std
loope
push
mov
jg
adc
in
jb
and
fsubl
mov
mov
test
push
loopne
movlps
inc
or
push
sahf
inc
or
dec
cmp
cld
sar
mov
into
pop
rolb
bound
in
cwtl
cwtl
mov
sub
dec
add
and
ja
in
sbb
xchg
inc
jg
int3
enter
je
jge
mov
dec
shl
aam
mov
test
xchg
rorl
mov
pushf
xchg
pop
inc
and
or
adc
cld
adc
and
fdivs
adc
adc
sub
mov
call
and
or
or
fstpt
stos
mov
xor
push
les
test
in
shrl
jns
inc
inc
rclb
popa
jb
cld
mov
fadds
jge
testb
pop
xor
movsl
or
pushf
lods
xchg
cwtl
ficompl
jbe
aad
out
add
push
sbb
dec
and
loop
rclb
push
nop
in
jmp
or
xorb
mov
lahf
popa
test
xchg
fwait
pop
or
or
mov
fsub
test
mov
repnz
jmp
lods
in
dec
push
fsubs
mov
mov
and
dec
pop
xor
shlb
in
cmp
push
sbb
adc
cwtl
or
and
insb
call
mov
mov
push
jmp
mov
xchg
mov
loop
add
std
ret
jo
jge
stos
addb
xor
shrb
ror
xchg
pop
fs
fmull
insb
das
mov
flds
and
xchg
cmp
out
push
mov
shrl
xlat
push
pop
pop
pop
ja,pn
lret
fists
in
jp
pop
in
lds
fdiv
dec
movsb
jne
jbe
leave
pop
adc
dec
cmp
mov
push
cmpsb
xor
out
ss
les
jbe
xchg
fdivl
sub
sbb
mov
adc
push
mov
int
outsl
pop
push
cltd
sbb
js
cmp
dec
jmp
lock
jecxz
cmp
xor
dec
pop
push
add
outsb
mov
and
rorb
mov
mov
nop
mov
dec
pop
repz
call
scas
xor
xor
jmp
jne
in
hlt
mov
jno
add
test
xor
insl
lahf
test
or
lcall
pop
jo
stos
mov
mov
je
cmpb
loope
movb
popa
movsl
or
call
push
es
jle
test
pusha
fidivl
mov
fcoms
aaa
lcall
sbb
adc
xchg
pop
dec
gs
fildl
mov
clc
dec
frstpm(287
mov
add
shrl
and
cmp
and
aam
mov
clc
adc
lods
aam
int
xchg
adc
out
cmp
mov
popf
mov
hlt
inc
and
cmc
push
cmp
sbb
es
inc
adc
adc
dec
gs
icebp
cmc
out
clc
stos
adc
jge
in
rorl
fmul
jp
push
jl
sti
pop
xlat
movsb
inc
mov
or
imul
xchg
loope
dec
mov
cmp
xchg
jb
and
bnd
mov
mov
xor
sbb
pop
es
cld
cmp
sbb
adc
inc
jb
and
sbb
rcrb
pop
stc
sbb
jnp
push
jns
inc
test
sub
mov
add
loope
mov
clc
outsl
inc
insb
je
lcall
sbb
pop
ja
mov
mov
out
sbbb
ja
adc
mov
std
jecxz
push
fprem
xlat
bswap
mov
stc
negl
lock
pushf
mov
mov
xchg
add
je
rclb
pop
lcall
mov
cmpl
fwait
cmpsb
mov
loope
adc
cmpb
imul
jle
es
icebp
adc
add
into
ja
hlt
push
jns
fs
std
test
xor
jne
nop
mov
ja
faddl
add
mov
inc
inc
cld
int3
divl
movsb
addl
in
iret
pop
out
or
xor
cmpsl
mov
mov
test
inc
out
push
xor
jg
dec
andl
mov
lea
movb
cli
inc
sub
gs
inc
jp
jl
pop
push
call
xchg
leave
sahf
fwait
sub
aad
and
sub
sub
push
mov
inc
xchg
mov
sbb
leave
push
in
mov
inc
popf
sub
lock
and
cs
xchg
add
adc
xchg
in
adc
add
loop
nop
call
add
adc
clc
in
jecxz
cltd
jb
sub
mov
dec
inc
mov
jo
xchg
xor
fs
out
dec
fsubl
ret
mull
mov
adc
sbb
sbb
jmp
lahf
adc
outsl
fnstcw
pusha
int3
jmp
inc
xor
mov
jae
mov
mov
mov
daa
jb
push
pop
jae
pop
xchg
push
mov
mov
sbb
xchg
addb
pop
shll
add
or
push
or
and
pop
pop
cltd
mov
repnz
test
pop
mov
dec
push
ficoms
mov
xchg
sub
cmp
inc
and
mov
push
cmc
fsub
mov
orb
movsl
ret
insl
popf
ret
dec
and
cmp
add
xchg
repnz
adc
lods
fmull
negb
call
lock
jbe
push
out
and
add
into
xor
ljmp
mov
mov
test
ret
push
jae
dec
insl
or
scas
inc
dec
test
movsb
jmp
fistpll
pop
dec
addb
xor
pop
dec
js
dec
outsb
or
loope
lea
enter
push
pop
inc
pusha
xor
jge
addr16
add
mov
mov
out
out
pushf
pop
shl
loopne
xlat
mov
stc
lret
addl
cli
jmp
addl
add
inc
jge
testl
ljmp
mov
mov
mov
js
add
pop
xor
add
and
in
xchg
inc
cwtl
xchg
adc
scas
lret
dec
mov
inc
pusha
and
ret
daa
jmp
je
cwtl
mov
lock
sub
push
adc
out
pop
cmp
pop
stos
ja
in
and
repz
mov
outsb
pop
movsl
daa
adc
jl
and
popf
mov
out
mov
imul
xlat
sub
sub
pop
es
dec
cmp
pop
push
push
mov
jge
mov
lds
out
out
xchg
sarl
fsubrs
inc
es
jo
pop
dec
repz
aam
mov
nop
sbb
push
in
mov
sbb
je
imul
scas
stos
fwait
enter
mov
xor
inc
pop
and
sub
xchg
cmp
and
adc
cmp
and
xchg
in
ftst
fstl
jb
popa
sar
and
popf
ret
mov
mov
sbb
dec
cmp
push
xchg
add
jbe
cmc
xor
ljmp
jb
adc
adc
or
aas
sub
xor
cmp
inc
pop
popf
add
testl
out
sub
dec
jl
sbb
push
call
inc
mov
or
sbb
xor
mov
shr
imul
adc
cmp
je
xor
mov
lahf
sbb
lods
imul
test
orb
pop
push
inc
ret
mov
stc
fcmovne
mov
push
mov
push
rclb
mov
dec
sub
loopne
mov
xchg
dec
int
jle
mov
lods
mov
arpl
jp
pop
sbb
mov
jo
push
mov
mov
out
xlat
scas
inc
inc
lods
cmp
cmpsl
mov
movsb
stc
push
and
xchg
inc
mov
add
jns
outsb
loope
mov
inc
sub
sub
out
pusha
enter
ja
sahf
movsb
int3
xor
xor
jecxz
xor
pmovmskb
xor
lea
jg
push
loop
xchg
and
dec
or
push
mov
sbb
pop
aad
dec
test
mov
xchg
add
out
mov
ss
shrb
add
mov
push
xchg
xor
or
mov
lods
cmp
orb
xlat
mov
out
lahf
scas
push
dec
lret
xchg
mov
jb
int3
ljmp
jbe
mov
aam
popa
xchg
dec
stos
cli
xchg
ja
sub
repnz
lods
ret
pop
pop
aaa
mov
cmp
xor
push
lret
fs
mov
mov
mov
cld
and
lcall
cwtl
pop
stos
mov
or
ja
dec
ret
loope
icebp
or
sti
in
arpl
push
xlat
aam
and
xchg
jo
decb
xlat
into
cmp
sti
test
xchg
inc
push
mov
out
int
cmp
pop
jbe
sbbl
push
in
mov
cmpsl
insl
push
push
cmc
inc
lock
sbb
scas
fmull
jae
fisttps
out
sub
in
fcompl
insb
icebp
cmpsb
xor
sbb
xchg
pop
cmpsl
cmp
fs
addr16
lret
add
jmp
ja
sub
jle
rclb
test
jmp
les
push
push
stos
cmp
lret
cmp
mov
and
scas
xchg
dec
fidivl
and
shr
pushf
cmp
insl
jnp
addl
jns
dec
add
in
daa
dec
in
or
lret
push
add
or
cmp
cmp
repz
pop
lds
cmp
sbb
cmp
jno
addl
push
jp
sub
mov
sbbl
cmp
mov
dec
and
push
sbb
flds
xchg
push
push
lock
inc
ja
mov
mov
push
frstor
xchg
jg
fstl
lret
popl
shl
sahf
loop
hlt
js
xchg
mov
lock
mov
repnz
mov
subl
cmp
arpl
ror
in
dec
lods
push
push
in
scas
add
aas
mov
or
xor
shlb
dec
xchg
xor
jo
lock
inc
fidivrl
xchg
lret
mov
jae
notb
fwait
pushf
mov
cltd
jl
out
or
push
mov
hlt
fadds
daa
ret
dec
lcall
dec
rorb
js
add
mov
mov
inc
inc
movl
jb
mov
ja
out
shlb
decb
mov
or
xchg
das
jb
jecxz
insl
add
lcall
jae
add
arpl
cli
loope
inc
imul
call
adc
ds
cmp
push
adc
xor
call
push
aam
jae
test
jne
fmulp
sti
mov
lods
push
mov
add
push
clc
xor
insb
out
es
xchg
sub
imul
push
sbb
ficompl
cli
inc
and
testb
and
fsubrp
dec
mov
fstps
clc
fwait
scas
pop
cwtl
adc
or
incl
lods
jl
and
stc
in
push
sbb
mov
dec
insl
add
lock
int
jo
arpl
adc
mov
or
pushf
call
pop
xchg
pop
and
pop
test
sub
jno
loopne
sub
ret
data16
pop
hlt
inc
push
dec
out
xor
imul
xor
cmp
aas
pop
inc
sub
lods
xchg
jns
or
sub
lret
in
stos
cli
sub
push
arpl
mov
mov
insl
daa
and
lahf
into
adc
sub
lret
mov
mov
pop
dec
dec
flds
add
sbb
jne
sbb
sbb
cld
out
pop
inc
jnp
addb
inc
rorb
scas
xor
jge
and
les
cmc
mov
xchg
xchg
jne
movsb
add
adc
shll
dec
lods
xor
jmp
lods
sbb
mov
test
and
pop
clc
xorb
push
fs
in
imul
mov
xchg
ljmp
dec
xchg
pop
and
xor
cmp
aaa
aaa
sub
push
std
repz
jnp
dec
sbb
lods
lds
add
mov
bound
subl
subl
pop
insb
in
movsl
jmp
es
imul
ds
mov
mov
mov
push
inc
jecxz
dec
jo
stc
adc
xchg
into
rcll
les
ficoms
in
cmp
out
jo
fmull
push
cmp
subl
cmpsb
push
mov
push
add
aaa
dec
dec
movb
cmp
dec
push
mov
push
fstps
xor
enter
std
pop
or
dec
es
and
cltd
repz
and
nop
dec
sbb
push
loope
jmp
jg
ss
iret
popa
dec
or
out
or
scas
lret
and
push
pop
out
rorb
frstor
leave
imul
mov
push
sbb
stos
fstps
mov
xchg
jns
and
ss
mov
mov
push
and
in
xor
lods
into
mov
fwait
pop
andps
insl
ret
push
dec
mov
xchg
mov
or
or
mov
stos
mov
shlb
imul
xchg
mov
fucom
and
push
sbb
inc
cltd
stc
aad
lods
mov
jne
je
scas
fwait
mov
test
mov
call
jle
fs
outsb
call
cmp
add
cltd
call
sbb
pop
push
call
push
sahf
gs
mov
dec
test
cwtl
dec
and
pop
adc
insl
push
xor
add
lret
pushf
push
and
jno
fst
mov
scas
mov
pop
sbb
cltd
test
sarb
xorb
out
cmp
add
xor
and
add
lahf
fsubs
pop
xchg
push
mov
add
mov
lods
hlt
dec
bound
add
or
lahf
movsb
cmc
data16
inc
inc
push
pop
loop
jae
adc
lods
adc
dec
ja
gs
cwtl
mov
xrelease
int
iret
adc
push
push
mov
ss
sub
adc
es
jno
dec
add
push
fcmovu
fwait
mov
ds
lcall
out
pop
lods
mov
xchg
or
inc
adc
inc
jmp
sbb
imul
mov
clc
stc
push
mov
sti
sub
in
testl
loope
cwtl
inc
sub
orb
into
push
jb
cli
cmp
aam
shrl
or
int3
mov
jbe
in
loop
pusha
ljmp
ret
or
ja
popf
cld
push
es
mov
push
dec
daa
jp
fwait
pop
leave
mov
jp
pop
xlat
out
xchg
push
int3
push
adc
inc
inc
and
cmp
in
pop
sbb
jl
lods
jmp
jl
fistpll
lret
aam
mov
mov
call
jp
insb
nop
adc
int
rcrl
ret
jmp
sbb
call
mov
lods
xchg
xchg
ret
dec
jp
lds
jno
push
fbstp
cmpsl
das
dec
pop
rorl
xchg
mov
push
das
je
and
push
daa
fs
inc
dec
xorb
lods
sarb
push
mov
cwtl
std
test
xor
or
or
or
ja
push
jp
mov
bound
add
xchg
shrl
bound
jnp
imul
lds
les
jg
mov
cmpsl
ljmp
clc
out
pop
jno
imul
xchg
test
cmp
shll
out
jmp
sahf
insl
shlb
or
inc
rcll
cmp
cli
in
scas
xor
test
cmc
addr16
test
cs
push
call
push
sub
repnz
cltd
mov
cmp
fwait
in
scas
mov
push
mov
mov
jne
nop
fwait
mov
jb
scas
jne
xchg
cmp
hlt
dec
sbb
shlb
xchg
incl
cmpsl
es
mov
mov
or
cmp
aas
fmuls
fwait
cmpsb
in
ljmp
pop
or
fimuls
daa
push
stc
addr16
jmp
inc
outsb
sti
adc
fsubs
loopne
and
icebp
push
fcom
jecxz
sahf
jb
ljmp
out
fsubrs
loopne
or
sub
fnstsw
imul
cmpsb
lods
push
xchg
jle
and
gs
mov
call
ret
xchg
adc
test
loopne
mov
mov
cltd
pop
rol
fdivs
lret
xchg
pop
lds
jmp
dec
push
sbb
jp
jecxz
shlb
hlt
sub
clc
int3
add
inc
sbb
cmp
pop
repnz
fwait
jnp
pusha
xor
lret
push
test
test
or
aad
mov
test
sub
outsl
sub
pop
arpl
shl
jle
jno
mov
and
push
cmpsb
xlat
add
shlb
das
cmp
add
and
push
push
aas
out
jge
insb
leave
dec
sbb
icebp
ljmp
xor
or
inc
push
pop
xlat
and
lds
and
jmp
pusha
xor
push
pop
outsb
dec
repz
mov
xchg
dec
sbb
cmc
jl
test
mov
pop
adc
xor
jmp
fwait
xor
inc
cmc
dec
sbb
mov
int3
cli
xchg
rorl
adc
lahf
lret
stos
scas
mul
icebp
xlat
cmp
scas
mov
into
adc
sahf
nop
and
xor
sbb
and
jg
cmp
cld
fs
push
and
repz
mov
sbb
or
les
pop
xor
sub
add
aaa
daa
inc
stc
int
mov
movsl
clc
in
lcall
out
dec
mov
adc
mov
sub
inc
bound
xchg
int
inc
push
fisubl
xchg
cld
jnp
jmp
outsl
cwtl
hlt
dec
xchg
mov
pop
jmp
mov
pusha
mov
inc
rorl
push
pop
mov
pusha
push
popa
scas
test
cli
test
in
sub
into
cmp
sti
and
sbb
or
insl
cltd
sub
or
imul
push
sbb
dec
scas
mov
idivb
lret
push
mov
or
mov
push
cmpsb
aas
and
inc
inc
test
fs
push
push
lds
mov
daa
and
nop
hlt
test
aaa
push
lahf
dec
xchg
dec
jg
adc
and
and
inc
movsl
movsl
in
lods
es
cmpl
fidivrl
mov
jmp
ljmp
jne
and
sbb
movsl
rol
mov
stos
xchg
mov
scas
out
je
test
xor
inc
push
jb
sub
jno
sbb
adc
fcompp
sti
mov
jbe
dec
xor
outsl
push
adc
pop
cld
cltd
shrb
sub
sti
jne
xlat
add
cwtl
andb
xchg
sahf
push
repz
ret
add
dec
jb
mov
jae
or
orb
mov
repz
das
movsb
push
add
mov
and
rcll
ja
or
pusha
ss
push
pop
fisubs
dec
leave
xlat
pop
repnz
mov
dec
xchg
push
faddl
shld
in
data16
fwait
sbb
sub
loop
inc
push
pusha
adc
add
mov
pusha
inc
push
mov
insl
pop
mov
incl
fwait
sbb
mov
daa
mov
jecxz
pop
in
inc
mov
dec
and
daa
mov
cmpsl
cs
push
cmp
loop
rcr
pop
jge
cmpb
push
les
insb
sub
and
arpl
mov
inc
enter
inc
jo
testl
aad
mov
rcrb
push
add
imull
push
inc
sub
mov
sub
fistpll
lea
mov
dec
cmp
add
cld
shll
outsl
mov
pop
dec
fsubr
push
dec
mov
mov
jg
out
lds
dec
jnp
push
xchg
push
lahf
adcb
sub
push
iret
sub
lds
inc
das
icebp
pop
sbb
xor
iret
mov
xchg
cmc
imul
movsb
add
incl
sar
daa
or
push
jb
in
cwtl
setb
xor
inc
popf
lea
push
pop
and
push
pop
lods
jnp
nop
jle
sub
jmp
add
xchg
mov
mov
sub
xor
push
push
int
mov
and
and
ja
push
aad
push
xchg
inc
push
or
in
push
sbb
scas
push
sar
mov
mov
fisttpll
xchg
ret
xor
sub
lods
cwtl
xchg
jmp
hlt
leave
mov
jne
insl
lcall
rol
jns
add
sahf
and
xor
shrl
insb
jne
adc
gs
add
xor
push
add
xchg
sti
mov
sbb
ret
popa
insl
push
test
into
insb
arpl
ja
in
scas
sahf
sbb
je
or
xchg
push
sub
or
dec
sbb
fidivs
pop
repz
cmp
jno
jo
add
decl
movsl
xchg
mov
push
repz
mov
sahf
or
cmp
xor
mov
sbb
sub
lret
xchg
inc
adc
lods
subb
sbb
push
jo
lret
lea
jp
add
inc
adc
shl
or
outsb
leave
sbb
in
mov
pop
lret
faddl
sbb
insb
xchg
adc
popa
jl
lcall
sar
mov
or
dec
sub
cltd
into
and
loop
ret
mov
and
sub
imul
test
xchg
ss
jae
pop
scas
xor
into
sbb
out
dec
loope
push
pop
lods
imul
cltd
rcrl
aam
movsb
sbbl
fidivl
jg
arpl
pushf
stos
insl
out
jmp
and
or
icebp
push
xlat
hlt
sti
fwait
mov
or
jae
outsl
jo
arpl
xor
mov
in
add
xchg
pushf
jmp
sbb
mov
lds
notb
xor
sub
jecxz
xchg
mov
fiadds
pop
andl
call
mov
movsb
pop
push
add
bound
enter
pushf
push
lea
fwait
push
ret
cwtl
sub
pop
cwtl
gs
repnz
rclb
jmp
repz
sbb
cmpb
fwait
xlat
push
mov
daa
outsb
out
clc
out
aaa
aas
mov
rcll
mov
pop
call
mov
adc
xchg
mov
and
out
bound
jecxz
scas
das
icebp
xchg
sbb
dec
out
into
hlt
data16
loope
xchg
mov
subl
pop
pop
gs
xor
mov
bound
ficomps
ret
pop
adc
pop
leave
push
imul
loopne
adc
mov
je
gs
aaa
dec
negl
lods
pop
ret
cmp
daa
mov
je
xchg
leave
aad
jg
ret
js
test
dec
sbb
cmp
movsl
movsb
mov
xor
cmp
xchg
xchg
jne
sbb
mov
pop
fisttpl
cmp
call
lcall
stos
or
or
adc
fnstsw
jp
or
and
not
mov
rclb
imul
fcomp
and
inc
push
push
mov
rcrl
loop
sub
sarl
cli
and
ss
pushf
lock
jb
add
es
adc
sub
sahf
lds
negb
in
ret
pop
sbb
iret
jno
add
cmpsb
and
xor
xchg
fcmovnu
not
lds
sbb
cwtl
cmpb
dec
loop
lret
cmp
std
rclb
data16
push
dec
jo
fbstp
push
dec
sub
pop
pusha
stos
test
jecxz
outsl
hlt
aam
pop
scas
jecxz
mov
divl
jle
loop
int
je
fbstp
out
icebp
aam
movsb
pop
pop
outsb
loope
inc
sarb
loopne
loop
imul
dec
shl
adc
push
popf
in
mulb
call
out
ljmp
repnz
cltd
mov
ja
je
push
scas
push
test
insb
xor
fs
push
ret
jl
xchg
and
lcall
pop
fdivp
out
sub
cmp
mov
and
xchg
cwtl
aam
pop
movb
popa
sub
jl
and
je
decl
imul
into
sub
pop
icebp
and
lods
jge
push
es
sub
jl
xor
push
mov
mov
orb
in
das
in
sbb
pop
push
insb
cli
jae
ds
lock
adc
dec
pop
inc
pop
test
jbe
pusha
sbb
fadd
xchg
mov
and
and
lcall
int
pop
jnp
out
mov
in
mov
sbb
jno
mov
add
xchg
cmp
adcl
out
jae
sbb
dec
jge
mov
scas
mov
mov
jo
daa
mov
out
push
pop
push
add
lret
push
cmc
stc
push
xor
insl
and
cli
pop
ljmp
lcall
pop
sub
mov
xor
movsl
test
test
pop
sub
in
pop
or
pop
and
aad
jge
xor
push
xor
rorl
mov
and
out
stc
push
add
adc
mov
sbb
in
cli
pop
ffree
out
add
imul
shr
xchg
jecxz
in
stos
lret
push
jmp
or
or
add
mov
cmp
pop
xchg
jg
sub
imul
addb
fdivrl
and
mov
pop
cmc
dec
loope
pop
out
clc
push
fstps
mov
inc
push
loopne
pop
test
mov
iret
aam
add
adc
and
test
in
mov
ljmp
inc
adc
sti
js
icebp
fldt
adc
pop
inc
push
mov
dec
inc
jecxz
jb
cmp
hlt
jb
xchg
dec
sti
xor
aas
inc
mov
dec
paddw
clc
scas
lcall
push
lea
mov
and
lods
and
loopne
jo
nop
out
test
popa
leave
mov
inc
or
dec
in
fwait
sub
jb
inc
outsl
xorl
imul
jge
sarl
ds
insb
or
pop
fisubl
int
cwtl
shrb
or
and
jg
mov
pop
jle
mov
sub
ds
push
decb
andb
pop
iret
push
push
adcb
stc
jle
mov
orl
in
cmpsl
pop
loopne
xor
push
ja
cmpsl
mov
hlt
pop
add
mov
mov
mov
sbb
add
aad
add
pop
popa
out
sarb
out
dec
sahf
mulb
adc
and
in
jbe
inc
cmp
lcall
xchg
xchg
nop
sbb
add
xor
inc
push
repz
xor
or
orb
jne
pop
push
xor
inc
mov
add
mov
jb
inc
and
daa
sbb
xchg
adc
hlt
xchg
cmp
sub
jg
cmp
es
dec
jmp
push
mov
jne
xchg
push
aaa
dec
mov
or
push
aaa
mov
and
cmp
cmpb
test
fdivrl
pop
inc
jmp
lea
pop
out
sbb
xchg
xchg
inc
xor
sbb
hlt
push
fistl
scas
mov
call
ret
jp
jo
jecxz
data16
mov
push
cmp
inc
jecxz
mov
fsubl
fsubrs
outsb
mov
cmpsb
and
in
jle
movsb
push
add
aad
cli
jl
iret
jne
sub
pop
and
jle
pop
dec
add
or
mov
mov
jo
cwtl
sub
xchg
clc
outsb
inc
clc
leave
mov
dec
add
testb
iret
mov
loop
mov
test
jo
fisubrs
inc
adc
pop
push
sub
das
mov
push
adc
movsb
pop
add
and
in
rcrb
inc
gs
xchg
inc
adc
xchg
xchg
dec
loop
mov
ret
jge
pop
and
out
jmp
and
push
out
fistps
xor
ss
pop
dec
sahf
xor
sahf
lret
sbb
divb
pop
aas
mov
inc
ljmp
xchg
lahf
cmp
dec
mov
mov
push
xchg
call
mov
xor
nop
int3
test
dec
popf
jno
mov
adc
mov
push
lods
scas
mov
out
push
in
fmull
mov
addr16
in
push
ljmp
int3
rorl
dec
jmp
mov
repnz
int
mov
xlat
icebp
mov
stos
mov
iret
aaa
mov
jp
mov
add
jecxz
and
clc
repnz
or
mov
pop
cmp
iret
mov
aad
cmp
js
leave
scas
daa
and
js
sbb
lcall
cmpsl
and
push
aad
cmp
and
ja
or
mov
nop
stos
mov
lret
stos
sar
imul
insl
rolb
pop
and
xchg
mov
in
loope
push
cli
xlat
cmc
xor
or
out
push
es
out
xchg
pop
pushf
dec
addb
jae
ss
jmp
pushf
push
pusha
cmp
nop
js
test
cltd
inc
xor
gs
int3
in
xor
mov
cmp
stos
sbbb
jge
out
cmc
bound
dec
scas
jo
in
or
push
cmpl
pop
aaa
push
daa
call
jp
jns
pop
rclb
mov
push
test
sub
stos
push
fcompl
mov
push
fdivrs
test
or
inc
js
dec
hlt
xchg
pop
lods
fistl
xchg
fwait
mov
or
mov
xor
or
jo
mov
and
pop
aaa
data16
nop
jns
out
xor
mov
imul
xor
rol
loopne
push
inc
pop
fisttpl
arpl
jae
icebp
pop
repnz
mov
mov
std
aam
or
jg
xor
mov
xchg
filds
push
aas
nop
xor
adc
cmp
mov
mov
loope
daa
jne
mov
sti
cmp
pop
mov
adc
xchg
fst
scas
mov
dec
xchg
enter
sbb
lds
addr16
add
mov
inc
and
movsl
push
mov
push
mov
sbb
rcl
outsb
lds
and
inc
pop
sub
push
scas
out
in
adc
cmp
lret
sub
lds
mov
lret
jl
fists
adc
pusha
push
fdivl
sub
sub
pop
and
or
cmpl
inc
int3
push
cmpsl
mov
pop
mov
popf
mov
add
mov
repnz
cmp
jge
mov
dec
inc
cmp
cmp
lock
stos
sbb
jo
mov
push
jo
xchg
inc
lods
fwait
outsl
xchg
sbb
repnz
hlt
add
xor
loopne
mov
bound
and
repz
xchg
out
nop
shll
cmpsb
enter
sub
test
or
cmp
mov
in
clc
cmp
repnz
jge
inc
aaa
rorl
add
sbb
fiadds
push
xor
jbe
push
lcall
cmp
test
fstl
movl
inc
and
pop
mov
es
stos
ljmp
out
sub
jb
adc
adcb
mull
idivb
mov
out
lods
repnz
in
enter
xor
inc
mov
push
cmpps
cmpsb
test
mov
shrb
lock
jb
insb
out
cmp
jno
xchg
dec
inc
sahf
dec
cmp
adcl
adc
repnz
ljmp
mov
sub
cmp
out
xlat
dec
scas
rorb
pop
mov
outsl
inc
lret
fdivrs
dec
mov
in
sarl
sub
jg
mov
outsb
push
add
pushf
sbb
and
incb
andb
xchg
and
mov
lods
dec
imul
nop
iret
jp
cmpl
loope
add
fadd
pop
stos
mov
dec
mov
mov
jp
jnp
push
ljmp
pop
call
and
mov
mov
xor
shrl
decb
rclb
jg
hlt
aad
lret
icebp
jns
inc
cmp
into
scas
pop
sub
mov
mov
ds
pop
or
jge
sbb
outsl
lea
sub
or
lods
inc
pop
pop
jmp
or
dec
mov
jnp
lock
cltd
fwait
adc
jae
leave
lea
dec
cmp
iret
std
test
outsl
add
cmp
pop
sar
inc
mov
pushf
add
sub
xchg
insl
xchg
push
jecxz
add
pop
xchg
pop
xor
push
insb
leave
mov
add
das
xchg
xchg
loop
pop
je
pusha
popf
cmp
add
les
rcr
mov
jg
cmp
lea
insl
push
fmulp
mov
jb
hlt
fwait
dec
cmpsb
cld
scas
aas
mov
push
enter
dec
jp
aad
popf
jne
leave
mov
add
push
into
mov
dec
cmp
adc
es
jp
or
outsb
xchg
mov
pop
pop
dec
dec
inc
sahf
add
pushf
cltd
mov
pop
jle
les
insb
inc
add
or
cmc
cmp
jl
nop
adc
and
clc
mov
iret
cmp
pop
xor
fdivr
or
add
int3
add
fadds
out
adc
hlt
adc
jbe
cmp
cmpsb
ror
mov
roll
inc
loopne
add
and
cltd
loope
adc
andl
insb
xchg
lret
and
scas
lea
addr16
push
in
test
int3
push
mov
das
into
xchg
inc
scas
std
sbb
aaa
mov
in
adc
adc
cmc
insl
or
add
pop
test
dec
ds
xor
mov
cli
dec
and
xor
or
sub
pop
xchg
dec
testl
mov
leave
or
xchg
pushl
and
mov
test
les
shrb
push
scas
ret
loope
or
pop
daa
or
xor
rcll
xchg
pop
cwtd
mov
fmulp
arpl
dec
pop
jl
cmp
or
xchg
ljmp
cmp
jns
outsl
in
xchg
push
loope
cli
fsts
mov
js
roll
cli
lcall
jmp
pop
inc
sbb
in
mov
jae
pop
filds
lret
fistps
mov
pop
mov
fnstsw
add
add
out
cmc
add
test
shlb
dec
xor
push
scas
xchg
out
jae
fimull
call
cmpsb
dec
je
testl
xchg
fidivrs
push
inc
das
call
cli
cmp
sbb
dec
push
jmp
xchg
or
ljmp
lea
xchg
inc
or
out
add
inc
orl
xor
cmp
pop
mov
or
xchg
sbb
dec
dec
mov
das
sub
adc
sub
pop
push
mov
adc
mov
sub
cmpsb
pop
imul
leave
fistpl
jo
jbe
mov
movsb
sub
mov
mov
xor
push
rdmsr
stc
stos
add
or
das
and
add
in
push
push
add
xor
in
lods
inc
js
and
xchg
jno
clc
or
data16
fcompl
jbe
sbb
mov
jns
jecxz
jmp
lea
mov
inc
shrb
negb
out
pop
push
ja
outsb
leave
cmp
stos
mov
jb
out
jmp
xchg
cwtl
scas
sbb
mov
repnz
sub
call
scas
aas
lret
fisttpl
fnsave
mov
fisubrs
or
jl
lcall
sub
xor
cmpsl
ror
test
inc
dec
adc
das
adc
add
mov
mov
xor
xor
nop
sbb
adc
push
aas
aas
lock
mov
dec
lea
mov
push
mov
in
daa
bound
ror
adc
cli
fidivrl
mov
push
sub
cmp
ja
call
dec
clc
xor
xchg
mov
mov
xchg
push
inc
adc
sbb
jg
lock
int3
es
add
fsubs
out
sti
dec
mov
sub
jecxz
and
cs
push
arpl
cld
adc
imul
fs
inc
fucom
fiaddl
ret
jns
lods
daa
sub
xor
add
jmp
jno
mov
mov
sar
mov
lock
scas
ljmp
mov
pop
mov
push
sub
dec
in
enter
pop
add
sahf
aaa
test
dec
mov
in
int
mov
int3
jb
lahf
fdivl
scas
push
arpl
scas
cmp
inc
push
jge
xchg
fxch
decb
mov
mov
jecxz
iret
jp,pn
pop
mov
popa
xlat
lods
mov
sbb
loopne
jmp
out
pop
loop
nop
ret
lds
sub
scas
sahf
and
cmp
clc
sbb
lods
mov
sbb
mov
mov
jg
lds
movsb
into
sbb
sbb
scas
js
insb
sbb
rorb
gs
and
mov
in
xor
sub
js
mov
pop
mov
or
pop
sbb
push
out
sub
in
inc
add
idivl
sarl
sbb
notb
xor
cmp
xchg
call
xor
loop
cmpsb
loop
ss
lret
xlat
mov
adc
ret
sbb
adc
push
repz
lods
mov
xor
sbb
mov
rcl
stc
push
inc
cmpsb
xchg
mov
or
pop
out
push
je
cwtl
das
shlb
sbb
adc
stc
jae
mov
and
loopne
ja
sbb
aad
dec
sub
leave
out
sub
cld
add
jle
nop
cmp
jecxz
jno
dec
sahf
adc
cwtl
xchg
sub
add
push
cs
insl
stos
adc
sbb
or
jle
shll
jae
out
lret
xchg
pop
pop
add
adc
pop
icebp
fistl
xor
push
xchg
leave
jg
jecxz
repnz
jl
in
gs
inc
xchg
pop
mov
scas
addr16
mov
out
js
jbe
mov
cmc
jnp
mov
daa
xchg
std
sarl
mov
icebp
or
aad
insl
jnp
mov
pop
jecxz
cwtl
notb
add
mov
lock
or
sub
int
push
insl
push
xchg
mov
xchg
or
jl
sub
jge
in
lods
xor
ret
lcall
jle
sbb
insl
adc
dec
and
jb
xor
lahf
sbb
sbb
in
push
and
popa
xor
xchg
mov
loope
loope
jge
mov
and
dec
loope
add
lret
test
lods
add
ss
dec
fisttpll
push
mov
jnp
fnstsw
mov
xor
mov
fcomi
cmp
adc
lahf
insb
jns
shrl
sub
mov
mov
dec
mov
test
ret
push
bound
mov
push
mov
push
stc
ret
arpl
out
cld
fwait
outsb
and
lret
pop
outsl
into
sub
cmp
cmpsl
inc
clc
scas
adc
mov
fstps
stc
inc
cwtl
and
lods
je
adc
movaps
jg
pushf
std
repnz
push
mov
int3
into
repz
cltd
movsl
cwtl
cltd
jecxz
sahf
mov
inc
and
je
cmp
push
scas
xchg
pop
or
jnp
add
lods
jno
rorl
mov
imul
xchg
pop
enter
daa
cli
and
add
cmp
imul
jae
jnp
and
lods
popa
or
inc
rcll
sub
sub
insl
adc
les
pop
pop
adc
int3
jbe
mov
sti
outsl
sub
or
push
push
outsb
dec
nop
push
mov
sub
cmp
sub
xchg
inc
dec
or
ffree
push
adc
and
iret
cmp
clc
jns
mov
push
pusha
cmpsb
lret
adc
pop
ret
mov
mov
int3
sub
popf
jge
rorb
divb
jg
popf
xor
add
jne
push
je
pop
push
ja
inc
pop
mov
cmc
stos
imul
rcr
lcall
ljmp
push
xor
adc
add
scas
ret
shrb
imul
js
mov
inc
jg
mov
negb
xor
std
lret
dec
test
pop
jo
add
jecxz
das
js
mov
pop
in
mov
xchg
xchg
in
incb
inc
inc
sub
scas
repnz
daa
outsb
les
xor
or
mov
add
jne
mov
jb
sti
icebp
pop
fbld
into
lret
pop
mov
mov
xchg
ds
xacquire
call
shlb
and
stos
jb
test
mov
or
add
jno
dec
dec
mov
dec
mov
inc
inc
dec
push
jle
mov
enter
popf
neg
sub
out
repnz
rorl
lods
or
bound
sbb
test
fidivrs
xor
notl
adc
cmp
push
add
jge
mov
cmc
mov
jnp
pop
shrl
lea
push
ret
lcall
imul
int3
or
fdivrl
fwait
jg
mov
test
into
dec
leave
sahf
std
test
inc
scas
and
out
mov
jge
dec
repz
dec
jns
stos
pop
or
inc
mov
in
dec
sbb
xor
jbe
icebp
pusha
mov
jns
or
das
in
in
out
jne
enter
cltd
fsubs
pushf
mov
leave
iret
icebp
inc
data16
enter
jbe
xchg
leave
mov
xchg
enter
mov
leave
xor
or
insb
mov
addr16
or
dec
daa
jmp
idivb
ljmp
adc
ds
jno
jg
das
push
pop
or
push
mov
cmp
push
dec
rcll
rolb
pop
sub
std
mov
push
pop
lods
pop
push
pop
popf
dec
loope
adc
mov
rcrb
dec
ds
mov
loopne
mov
cli
mov
xchg
mov
push
push
int
fcmovnbe
jecxz
daa
dec
stos
lock
arpl
xchg
incb
jle
inc
jp
andl
mov
lret
les
cwtl
mov
xchg
stos
js
jecxz
and
mov
or
mov
repnz
adc
pop
in
jne
test
lds
das
push
cmc
and
xlat
mov
cmpsl
add
and
pop
mov
movhps
fcompl
or
xchg
loopne
dec
mov
jmp
dec
movsl
sub
mov
inc
cmp
mov
js
push
jge
mov
adc
mov
rcpps
add
aad
addr16
jmp
loop
aaa
insl
in
add
iret
sub
std
call
push
or
idivl
daa
mov
jecxz
sbb
in
ret
add
pushf
aad
or
jb
cltd
fcoml
clc
ljmp
stc
add
cmpsb
jecxz
test
xchg
xor
mov
std
test
or
mov
sub
movsb
arpl
insb
out
push
out
int
out
push
cmpsb
xchg
sbb
leave
push
cld
fmuls
jae
cmp
xor
xor
cld
in
roll
dec
jp
xor
pop
pusha
inc
jp
mov
push
sbb
outsl
mov
jp
inc
jb
add
xor
pop
insl
fldz
cmc
inc
mull
push
jecxz
lret
adcb
lds
mov
jo
cmp
cmp
and
push
sbb
popa
sub
pop
xchg
fcomip
sub
pop
or
lds
lock
out
mov
sub
xor
std
xlat
loop
lods
js
ja
pushf
call
pop
xchg
push
ja
cmp
fistps
jg
sub
dec
push
pop
xor
scas
mov
rcr
addl
cltd
mov
mov
add
pop
in
int
or
sarb
xchg
push
or
or
call
mov
xchg
push
xor
jo
sbb
dec
cs
in
or
pushf
cli
push
xor
in
bound
and
aad
sbbb
je
jge
ret
data16
stos
sbb
ret
inc
jno
inc
ficoms
aaa
pop
cmp
cmp
push
cmp
nop
mov
insl
enter
mov
inc
fldcw
xchg
in
sti
in
and
jle
mov
jo
adc
pop
pop
ret
pusha
stc
push
lods
mov
mov
cmpsb
iret
or
sbb
pop
pop
sub
dec
out
pop
sbbl
mov
pop
fsubrs
push
repnz
test
add
gs
add
test
ja
aam
arpl
js
out
aad
pop
mov
dec
shll
mov
icebp
mov
bound
lahf
jo
xor
pop
das
mov
adc
nop
xchg
pusha
cmpsb
or
sub
pop
psubsw
cmpsb
fisubrs
jbe
inc
sahf
or
movsb
mov
pop
sub
cmpsb
int3
inc
test
mov
adc
cltd
xorb
add
lods
dec
pop
xor
in
adc
sub
shll
lods
sbb
add
pop
pop
into
shl
loope
push
leave
dec
jbe
hlt
push
lret
scas
sbb
xchg
movsl
shlb
jne
mov
xor
sbb
and
ljmp
pop
sbb
loop
pushf
xchg
push
jge
push
and
jns
cmpsl
xor
cmp
sub
test
and
cltd
lea
dec
decb
xlat
dec
jb
xchg
bound
pop
sbbb
data16
sbb
cwtl
fstpt
add
faddp
pop
mov
aas
xchg
nop
mov
popf
sub
imul
insb
hlt
cmp
add
popa
jbe
jno
in
gs
out
pop
popa
mov
add
add
shlb
nop
call
cmp
in
mov
mov
adc
stc
and
xchg
icebp
pop
addl
dec
aas
sarb
aam
sub
push
dec
xor
or
addr16
mov
flds
mov
xchg
xchg
sub
test
push
pop
aam
pop
std
movsl
jecxz
push
leave
jp
or
dec
movsl
or
in
and
cmp
and
iret
mov
or
cmp
int3
xor
nop
stos
pop
cmpsb
pop
subl
loop
movsb
loop
sarb
pop
jle
fbld
arpl
sbb
dec
addl
loope
sub
cmp
inc
js
xor
int
jb
dec
xchg
and
fs
bound
mov
mov
push
rcl
shrl
lret
std
push
dec
mov
adc
push
int3
and
das
sub
sub
adc
jne
fwait
mov
scas
sbb
sbb
jg
or
aaa
mov
push
dec
cmp
leave
or
mov
xor
mov
das
daa
aad
mov
cltd
movsb
mov
stos
lcall
lahf
sbb
mov
push
jae
repz
test
jb
test
icebp
adc
pop
add
insb
enter
iret
sub
mov
xor
je
cmpsb
mov
pop
out
jge
mov
lret
dec
scas
push
je
xchg
icebp
cmp
data16
aam
out
and
sbb
sbb
mov
addb
cmpsl
xchg
shll
dec
in
test
ret
sbb
aaa
outsb
mov
cmp
fmuls
cmpb
ret
pop
insb
and
lret
adc
xchg
pop
and
aas
cltd
push
xlat
in
rcrb
add
cmp
test
scas
sub
mov
xor
pop
lods
dec
imul
cmc
adc
andl
rol
mov
dec
xor
adc
push
loop
popf
xchg
mov
mov
cmp
xor
jb
cmpsl
cmp
inc
aam
hlt
iret
imul
mov
mov
mov
imul
outsl
lods
ljmp
xchg
jns
mov
aam
sbb
sub
inc
and
and
inc
sub
shll
inc
mov
lret
push
xor
dec
scas
pop
inc
in
sub
xor
loope
in
pushf
ror
xor
push
das
sbbl
or
sbb
xchg
or
arpl
dec
and
rorb
xor
popf
jae
inc
js
pop
jb
repz
jno
xchg
into
add
xor
push
mov
jmp
out
cli
add
mov
fsubs
mov
and
jle
sbb
and
kmovw
cmpsb
cld
add
cld
xchg
les
inc
push
shlb
adc
mov
add
dec
pop
sti
dec
push
sub
adc
mov
mov
repz
sub
mov
add
cmc
fidivrl
jno
cwtl
mov
or
pop
dec
clc
mov
xchg
and
outsl
lock
push
ss
sarb
pop
addr16
mov
mov
xchg
dec
out
jg
jp
fcompl
add
push
pop
jge
aam
les
es
dec
mov
push
mov
iret
dec
pushf
add
scas
fisubl
xchg
add
adc
daa
lock
outsl
inc
in
pop
inc
mov
add
xchg
mov
push
test
xchg
out
inc
cmpsb
lock
loope
add
dec
lds
loopne
outsl
or
adc
add
movhps
pop
jnp
and
lahf
sub
data16
inc
jnp
xchg
pop
mov
and
sub
mov
hlt
negl
jl
jns
lods
pop
jge
or
mov
dec
stc
adc
xor
enter
cltd
sti
xchg
les
xor
lea
cld
stos
loope
cs
mov
mov
insl
mov
test
pop
enter
mov
sbb
push
adc
xor
test
xchg
cmc
add
mov
in
lock
and
mulb
nop
inc
cmp
push
pop
addb
mov
fidivl
mov
lret
sarb
cmp
push
xor
push
dec
or
mov
mulps
jge
aaa
mov
icebp
fdivl
movsb
mov
mov
push
mov
aaa
shrb
xchg
lods
push
lds
dec
outsl
or
cld
xchg
rcrb
and
dec
imul
dec
out
aam
cld
fisttpll
cmp
sbb
jns
sbb
test
ss
repnz
add
sarb
pop
adc
add
pop
int3
addr16
cmpsb
stos
pop
mov
data16
test
out
cwtl
mov
dec
repnz
pop
push
cwtl
dec
add
jg
mov
in
imul
aam
inc
pop
push
mov
into
cmp
jmp
xchg
ret
mov
mov
test
fmull
sub
xchg
xlat
pop
push
pop
jg
pop
mov
pop
das
sub
test
mov
or
or
dec
pop
data16
mov
add
adc
iret
push
scas
or
call
je,pn
cmp
ljmp
pop
js
fstpl
sub
xor
adc
xchg
stos
imul
dec
jle
aam
mov
mov
imul
xor
jo
push
in
push
xchg
adc
xor
xchg
out
std
popf
xchg
stos
or
jnp
das
fadd
inc
push
arpl
xor
daa
or
push
stc
mov
dec
mov
dec
fistpll
lahf
mov
push
dec
std
mov
mov
stos
lea
in
stc
call
cmpsl
push
cmp
inc
aam
inc
push
sub
push
xchg
rcl
mov
in
icebp
pop
loopne
loopne
sar
inc
mov
jle
ret
leave
test
xor
cmpsl
jnp
ds
mov
jns
jae
lods
adc
xchg
cmp
cmp
in
jae
testb
mov
sub
jb
add
mov
fwait
lods
sarb
ror
loop
mov
xor
ds
pop
push
sub
fdivr
das
add
cmpsb
ss
pop
xchg
sbb
and
jbe
mov
les
shll
inc
fld
cwtl
js
imul
repnz
sub
in
movsl
jne
inc
xlat
mov
push
or
xlat
cld
test
js
scas
sahf
cld
dec
fwait
cmp
cwtl
sbb
cltd
mov
xchg
add
and
push
and
orl
xchg
dec
cmp
pop
mov
gs
cmpsb
mov
sbb
mov
xchg
cli
icebp
es
int
repz
or
imul
cmp
inc
dec
push
adc
cmp
mov
cmp
mov
xchg
push
aas
outsb
adc
test
callw
rolb
inc
ja
hlt
xor
add
lods
xlat
mov
inc
pop
fnstenv
fdiv
xor
lea
sbb
and
push
or
movsb
test
cmp
outsl
or
addr16
pushf
and
test
sub
cmp
les
inc
mov
mov
loope
push
mov
mov
pop
aam
cltd
mov
pusha
mov
cwtl
and
fwait
or
cmp
pop
dec
mov
xchg
inc
xchg
jg
and
fsubrs
adc
or
dec
icebp
call
loopne
xchg
out
or
jbe
add
adc
and
cmp
cld
xchg
lea
cld
jne
aas
sbb
repz
mov
scas
call
lock
pusha
movsl
xor
xchg
das
xor
jp
push
and
push
pushf
dec
cmc
push
or
inc
lods
mov
pushf
ret
clc
adcl
imul
addr16
lahf
lcall
mov
fld
cmp
cmp
sub
pop
into
and
lret
int
cli
sub
xchg
repnz
mov
mov
cmpsl
mov
mulb
gs
push
and
cmpsl
inc
js
pushf
cmp
adc
loop
mov
mov
sub
push
into
pusha
lret
sahf
xlat
test
dec
jbe
adc
adcl
aas
xchg
mov
pop
mov
or
cmp
jne
jecxz
iret
lahf
ja
mov
es
insb
sbb
test
fwait
jp
xchg
insb
xchg
sbb
push
cld
out
addl
push
sub
test
inc
out
cmp
and
mov
xchg
movsb
pop
mov
adc
push
adc
loope
push
js
adc
xor
mov
sbbb
mov
in
cs
jae
add
xor
xor
push
sbb
jecxz
les
dec
and
and
fldt
bswap
inc
mov
push
sub
mulb
sub
jle
mov
lret
jmp
jmp
stos
fnsave
xchg
push
and
adc
repz
inc
xor
int
inc
repnz
sbb
imul
aas
mov
aam
jnp
fadds
dec
dec
in
adcl
cmc
sbb
xchg
sti
cmp
adc
flds
and
xor
mov
jg
inc
cmp
test
pop
pop
sbb
push
lds
rclb
mov
and
xlat
sub
adc
cmpl
cltd
adc
ds
and
sbb
inc
jmp
mov
and
sub
adc
dec
in
sahf
cmpsb
iret
cld
cs
mov
stos
inc
shlb
loop
cmp
sbb
or
enter
out
push
pop
jmp
loopne
sahf
jo
mov
lret
leave
cmc
jnp
lock
jo
push
paddsw
and
dec
cli
scas
imul
mov
es
inc
lcall
mov
sub
sti
lahf
in
repnz
rolb
orl
dec
inc
lock
call
xchg
dec
cmp
sub
sbb
movsl
adc
lret
jno
dec
mov
adc
mov
mov
dec
add
das
test
mov
int
inc
dec
out
int
lock
jb
cmpsl
adc
pop
test
dec
pop
jl
rcr
pop
and
sti
cmp
or
mov
xchg
jge
mov
mov
inc
adc
pxor
and
pop
fdivr
std
adc
sahf
daa
push
insb
pop
or
mov
or
imul
lahf
hlt
arpl
daa
cmpsl
pop
in
or
cltd
xor
jbe
bound
ftst
sbb
in
hlt
dec
adc
sarl
stos
push
xchg
pop
sub
mov
push
movsb
or
xlat
mov
mov
lret
lods
aam
into
cmpsl
add
clc
xchg
adc
or
mov
jecxz
or
add
scas
mov
outsb
std
fiaddl
hlt
dec
jmp
add
mov
jmp
dec
push
fcomi
mov
into
dec
scas
testb
ret
push
aas
mov
push
pop
arpl
jno
xchg
repnz
xor
sarl
mov
mov
push
add
cmp
test
les
mov
add
cmp
movsb
or
leave
outsb
call
mov
std
pop
mov
daa
cmp
daa
adc
push
addb
shrl
inc
lahf
mov
rorb
adc
and
mov
sbb
mov
pop
repnz
loopne
xor
pop
mov
or
pop
in
push
jecxz
clc
shll
push
push
ds
ret
and
xchg
jnp
repnz
inc
mov
jl
xchg
sbb
inc
xor
xor
mov
pop
cmp
mov
mov
pushf
mov
mov
lret
or
mov
inc
xor
icebp
cld
jle
fiadds
xchg
adc
add
jecxz
xchg
mov
out
xor
aas
dec
iret
popf
adc
test
data16
insl
mov
rcll
bound
lods
jmp
sub
cmpb
dec
adc
cltd
pop
sub
sbb
daa
sub
mov
lock
fwait
sbb
repnz
int
mov
scas
xchg
cmp
call
xchg
xchg
push
cmc
test
cwtl
cmp
mov
cmp
jne
mov
rcrb
push
xchg
lods
sbb
arpl
cmpsb
mov
sub
push
adc
fcoml
loop
call
lods
lock
fmull
sbb
ret
cmpsb
jg
add
pop
mov
jg
jg
pop
or
lods
mov
or
aam
les
cli
js
js
push
add
sub
mov
pushf
incl
dec
cmp
arpl
mov
pop
fcoml
fwait
push
xor
mov
cltd
pushf
xchg
push
cmp
push
inc
adc
sub
pop
fildll
add
stc
ds
xchg
aad
ljmp
jl
mov
aam
xchg
int
and
xor
push
cmp
sti
sbb
push
loopne
jp
stos
lahf
adc
sarl
push
cmp
push
mull
add
fdivrl
jg
jg
loope
insl
push
movsl
mov
imulb
and
mov
sub
mov
mov
adc
push
jle
sub
enter
int3
mov
mov
mov
orb
aad
enter
sub
icebp
inc
jne
test
repnz
lret
mov
inc
ljmp
popf
adc
imul
out
mov
xchg
jg
pop
lahf
jmp
ficompl
cmp
xor
sbb
lock
ljmp
sti
add
jmp
mov
fdivl
leave
push
inc
mull
pop
fmull
nop
leave
hlt
outsb
iret
jg
push
test
sarb
mov
lods
pop
cwtl
push
jp
leave
pop
mov
push
js
xor
ss
inc
out
fisubl
mov
lds
in
mul
push
mov
sar
xchg
pop
jns
mov
loope
test
push
imul
sbb
mov
sbb
aam
push
ret
cmpl
mov
jbe
std
in
mov
cmp
pop
nop
push
or
jg
roll
pop
lahf
mov
sbb
pop
mov
adcl
out
adc
movsb
sti
cmp
mov
movsb
and
out
push
rclb
mull
mulb
jl
jbe
insb
pop
test
inc
push
sub
out
out
icebp
call
mov
pop
movsl
inc
int
fisubl
not
cmp
in
fists
test
arpl
jmp
cmc
mov
push
dec
cmc
imul
push
mov
rcl
xor
into
cmp
cli
subl
dec
dec
cli
out
xchg
insb
cmpsl
test
pop
pusha
dec
xchg
xchg
cmp
xchg
faddl
insl
and
inc
pusha
xorl
mov
gs
xor
dec
popa
push
clc
movsl
scas
cs
jecxz
dec
dec
call
std
sbbb
push
int
repz
data16
rcll
mov
ret
scas
pop
sti
in
mov
adc
inc
fs
iret
inc
and
inc
lds
lods
and
xchg
mov
scas
js
xor
inc
ja
mov
roll
jnp
fidivrs
test
pop
out
push
out
and
stos
xlat
mov
adc
dec
mov
xchg
jns
dec
shll
iret
mov
or
mov
dec
lret
push
xlat
ljmp
out
sub
xchg
daa
add
orb
sbb
and
adc
mov
mov
lods
pop
cmp
imul
movsl
mov
ret
mov
push
and
inc
lret
fldenv
aas
push
cmp
jae
loop
stc
mov
xchg
mov
or
inc
sbb
cmp
and
pop
enter
out
imul
mov
call
js
pop
test
push
sub
stos
cld
mov
xchg
aam
inc
jns
or
punpcklbw
out
inc
in
stos
xor
imul
enter
ja
data16
clc
push
sbb
mov
push
popf
int
std
cli
addb
or
mov
pop
daa
in
scas
fucomp
aad
pop
add
fildll
mov
jnp
mov
js
xor
ds
sbb
push
mov
push
pushf
or
popa
and
inc
fcomps
lea
stos
subb
call
push
cmp
jecxz
mov
mov
xbegin
mov
sub
sub
dec
icebp
or
and
inc
push
into
fnstenv
mov
outsb
xchg
insb
sbb
ret
adc
imul
add
or
xor
jl
lret
pop
xchg
sub
inc
xor
fldcw
sti
and
in
mov
xor
ja
inc
dec
stc
lods
push
push
jns
bound
rcl
push
stos
pop
mov
cmc
loope
push
or
sub
xor
inc
iret
lods
lret
mov
cmp
or
pop
dec
leave
mov
idivl
in
and
xor
xchg
sbb
adc
mov
aam
push
fsubrl
daa
jp
stc
in
ljmp
or
push
cs
rorl
fsubrl
cmp
cmp
movsl
or
vminss
or
inc
push
adc
cmp
fwait
aad
nop
push
arpl
xchg
push
push
jo
dec
fstl
or
das
push
in
rorl
popf
mov
call
sbb
xor
test
leave
fdivr
jge
dec
sbb
inc
scas
data16
jmp
dec
popf
lcall
mov
sbb
dec
add
imull
stc
repnz
xchg
adc
sbb
push
mov
xor
scas
icebp
push
mov
imul
sbb
js
xchg
mov
shrl
jns
fdivs
aad
dec
mov
mov
fstps
aad
test
or
dec
loopne
in
cmpsb
mov
mov
jecxz
mov
pop
fldcw
mov
mov
int3
bound
dec
iret
xchg
mov
mov
inc
xor
psubd
cmp
dec
push
imul
jecxz
jmp
and
cmp
js
add
sti
mov
fimull
jle
shrb
fsubs
aad
pop
les
ljmp
shl
pushf
jo
add
sub
mov
add
jge
ret
iret
ret
mov
clc
cmp
fstpt
pusha
cmpsb
inc
or
cs
sub
inc
out
or
lock
fwait
mov
mov
sub
sub
adc
add
and
cmp
and
clc
jecxz
int3
js
dec
mov
mov
and
jecxz
out
xor
add
inc
jnp
adc
out
pusha
xchg
inc
ja
dec
aad
das
pushf
or
imul
lock
push
mov
call
mov
add
in
jg
pop
push
xchg
dec
push
cltd
push
sub
call
aam
xchg
jns
enter
bnd
mov
aas
lds
mov
mov
sti
dec
aam
add
into
inc
stos
cmp
imul
shll
hlt
test
or
mov
scas
xor
mov
push
lcall
aas
lret
xchg
sbb
test
xlat
mov
push
jmp
and
xchg
ss
push
les
pop
mov
mov
into
call
jno
cmp
adc
push
mov
mov
xor
xchg
push
push
mov
adc
pop
jo
xor
icebp
or
pop
imul
or
mov
xor
push
jnp
in
outsb
mov
jmp
sbb
push
outsb
lods
int
pop
enter
cmpb
cltd
lret
test
push
jge
sti
jp
ljmp
sbb
and
jnp
andl
mov
sbb
fcompl
iret
inc
dec
call
lock
push
inc
popl
ficoml
rorl
rol
pop
mov
rorl
movsb
inc
cld
dec
icebp
and
lret
sub
and
jp
js
jmp
and
ljmp
and
mov
xlat
repz
cmpsb
mov
sub
repnz
add
sub
iret
xor
sarl
push
or
daa
or
lds
or
push
dec
xor
bound
mov
test
jno
dec
sub
inc
sbb
and
xor
add
cmp
hlt
dec
inc
loope
and
jns
jbe
xchg
clc
imull
test
fmull
rcll
pop
adc
stos
jae
lods
adc
xchg
cmp
xor
lods
adc
movsl
pop
js
out
adc
cltd
cltd
mull
inc
or
xchg
shlb
sub
jmp
ja
nop
addr16
pushf
ss
mov
into
outsl
je
adc
sarb
test
imul
sbb
mov
jno
or
out
or
fxch
test
cmp
xchg
xchg
adc
jnp
test
lcall
dec
fisttpl
mov
xchg
std
andl
cmp
xchg
or
addr16
or
lret
fisubrl
adc
aad
cmp
fwait
sub
clc
push
push
jmp
loop
addr16
aam
dec
mov
jle
jp
and
ljmp
push
xor
aam
shr
jle
mov
pushf
ja
shll
int3
aas
dec
xchg
out
mov
in
mov
lcall
inc
xchg
push
push
scas
in
xchg
xor
es
ficompl
fiadds
and
stos
insl
jp
mov
add
jg
test
pushf
subl
cltd
jnp
sbb
add
mov
aas
in
adc
les
jmp
adc
out
push
xor
pushf
stc
or
arpl
insl
pop
sub
jge
cmp
cmc
sub
mov
xor
mov
cmpsl
mulb
inc
int
gs
cmc
je
cmp
frstor
bound
adc
es
jmp
test
fwait
pop
or
cmp
lock
aas
or
add
pop
loopne
lcall
adc
movsb
jp
lret
das
lds
or
mov
sub
mov
aad
lds
or
cmpsl
jecxz
into
push
fdivrs
pop
ds
das
gs
mov
outsl
push
aaa
sub
inc
fistpl
lret
shll
xor
repz
pop
adc
arpl
rorb
push
mov
mov
test
dec
scas
repz
jno
out
fwait
cmpb
dec
mov
mov
mov
dec
into
mov
out
and
mov
xchg
enter
push
jmp
cltd
cmc
test
or
jmp
popf
call
repnz
fmul
stc
out
icebp
push
mov
bound
bound
or
mov
insb
in
loope
pop
push
das
lods
xor
loop
sbb
jb
xor
pop
bound
cmpsb
cltd
test
lock
pushf
jmp
or
xor
mov
aam
mov
mov
ss
push
or
sbb
int3
sbb
lret
cmp
pop
adc
enter
push
mov
or
and
sar
scas
or
scas
mov
and
addr16
arpl
dec
scas
jae
sbb
adc
movsb
dec
movsl
mov
jl
aad
xchg
js
adc
adc
ljmp
insb
sub
clc
rorl
int3
or
jbe
aas
bound
lret
inc
es
movsl
xor
jle
mov
int
scas
stc
clc
xchg
subb
pop
shll
bound
jb
out
jecxz
lods
cs
dec
jae
and
xor
in
ret
cmp
xchg
loopne
dec
setae
mov
sar
sbb
aam
cmpsb
cli
mov
mov
std
or
xchg
outsb
dec
dec
push
and
dec
mov
pop
push
pusha
or
daa
and
js
jbe
scas
sbb
xchg
and
test
cmp
lret
int
subl
pop
dec
push
jle
add
frstor
loope
cmp
stc
lock
jge
add
dec
sbb
vmread
test
mov
icebp
dec
xor
rcrb
cs
mov
pop
cltd
and
test
sub
xor
sub
iret
sub
dec
arpl
adc
outsl
ljmp
cmpsl
icebp
inc
popa
in
cmp
mov
sahf
insl
dec
lahf
and
lods
cmp
aad
mov
xor
scas
push
jle
fucomip
push
dec
mov
lods
lahf
inc
inc
or
std
push
cwtl
inc
add
xchg
orl
aas
dec
add
mov
or
or
mov
or
xchg
into
add
icebp
mov
push
xlat
dec
and
push
add
inc
das
not
sbb
mov
lock
addb
xchg
fidivs
dec
movsl
inc
repz
out
xchg
push
out
lahf
cmp
lret
lods
or
rorl
pop
fstpl
addb
in
test
fadd
cmc
sbb
add
sub
and
rcll
sub
addb
or
fucom
mov
push
sahf
inc
xor
movsb
pop
adc
popf
sbb
or
notb
dec
push
mov
xor
fstpl
xor
jns
in
icebp
pop
into
loope
lret
fcmovb
mov
les
pop
ljmp
inc
rcl
gs
cs
jp
inc
jg
pushf
cmc
push
push
or
or
shl
sahf
push
push
and
ljmp
sub
lahf
mov
je
mov
pushf
jae
dec
jmp
pushf
jo
stc
push
inc
inc
jb
leave
inc
filds
aaa
mul
sbbb
mov
movsl
mov
adc
inc
push
xor
ss
sub
repz
mov
mov
add
dec
dec
das
insb
sub
inc
mov
push
jge
xchg
pop
and
rcll
aam
out
adc
clc
mov
dec
dec
dec
sub
in
icebp
inc
sbb
int
adc
fsub
lret
cmp
shll
dec
jns
inc
outsb
scas
nop
pop
lock
loope
xor
jne
add
and
fmull
push
mov
adc
aam
xchg
mov
sarl
daa
push
shrb
add
stc
mov
ljmp
jge
xor
std
mov
imul
add
insb
add
cmp
out
push
xchg
pop
and
hlt
pop
and
les
ja
sub
mull
adc
pop
mov
daa
sbb
rol
add
push
lcall
xor
jge
fisttpll
imul
jge
in
scas
test
out
cmp
out
sbb
dec
inc
push
addr16
fwait
push
and
jno
cld
xor
cld
rcll
or
lock
jbe
push
sub
mov
fld1
es
xlat
jmp
xor
pop
ljmp
adc
ljmp
adc
jecxz
in
mov
stos
outsb
mov
jbe
pop
push
add
xchg
add
push
sti
jle
loop
xchg
test
mov
xchg
push
rorb
pop
xor
fisubrl
loope
adc
jecxz
pop
arpl
insl
add
mov
mov
out
roll
cmpsb
int3
sub
out
cld
xor
es
push
les
insb
xchg
xlat
rcl
xor
inc
sbb
nop
mov
mov
cld
fincstp
shr
push
and
add
mov
mov
test
mov
dec
mov
clc
ljmp
or
ret
je
mov
xor
xchg
je
pop
adc
lret
inc
sub
mov
inc
sbb
sbb
mov
gs
lds
mov
sbb
lods
lds
push
dec
test
and
fxch
and
xchg
stc
push
push
in
sub
dec
lret
jne
jmp
pop
addr16
sbb
xor
xor
pop
jmp
or
fucomi
pushf
cld
fld
cs
dec
cmp
cmp
stos
dec
out
cmpsb
add
mov
mov
mov
dec
lahf
jg
rorl
cmc
imul
push
jnp
inc
call
imul
or
nop
repnz
arpl
lock
outsl
mov
test
cmpl
pop
addr16
push
mov
xchg
sub
dec
fs
lods
fidivrl
adc
sub
mov
shrb
pop
xor
testb
dec
dec
push
cmp
je
mov
fisttpll
or
dec
and
mov
adcb
cmp
jae
leave
test
and
std
sbb
mov
fidivrl
jle
in
sbb
xchg
cmpsb
mov
xchg
push
out
fisubl
cmp
add
sub
add
in
jge
inc
push
cmpsb
dec
xor
sbb
arpl
dec
xor
pop
mov
sbb
test
sub
cmp
add
adc
sti
adc
jl
inc
mov
cmp
pushf
push
loopne,pn
das
mov
sub
fadds
loope
sub
push
repz
push
push
test
cwtl
popa
sbb
repnz
sbb
rorl
push
adc
or
mov
shrb
mov
xchg
and
mull
adc
test
je
sarb
idivl
stos
hlt
lods
ret
mov
popf
xchg
xlat
inc
mov
mulb
and
cmp
dec
shlb
mov
cmc
dec
cmp
iret
fsubrl
jl
repnz
xor
mov
sub
lahf
aaa
mov
leave
cmp
imul
xor
inc
jns
rorl
lahf
add
dec
or
push
rclb
fs
pop
in
mov
sub
jg
mov
shlb
lret
or
negl
aam
lods
stos
mov
xchg
aas
mov
aad
jle
mov
inc
sub
jne
lods
mov
shll
pop
xchg
pop
adc
push
xor
out
mov
or
mov
adc
xchg
outsl
and
mov
stos
test
in
push
lock
mov
xchg
gs
mov
repz
lahf
pop
xchg
pop
lds
jmp
jnp
divl
icebp
and
cmpsb
insl
cmp
cmp
xor
cmp
clc
and
orl
jne
push
adc
mov
and
and
rcl
push
inc
inc
int
shll
mov
lods
and
sub
int
xchg
push
jns
out
call
mov
notl
dec
gs
shlb
movsl
add
lret
fstpt
clc
push
iret
mov
pop
pop
xor
int3
fdivp
aas
sub
cmc
mov
push
aam
ds
sbbb
lret
sti
lret
add
shlb
and
pop
jno
sub
mov
mov
push
xchg
pop
imul
cs
mov
fwait
sub
mov
or
fsts
xchg
xchg
cli
fs
ss
dec
sysenter
stc
cmc
sbb
shl
jns
jmp
insb
jge
into
mov
sub
lret
jl
pop
mov
cli
xor
jge
into
fildl
and
sbb
addb
xchg
mov
dec
int
inc
pusha
pushf
mov
dec
in
add
mov
aas
mov
mov
or
inc
fcompl
movsl
sbb
testb
popf
sub
sarb
sub
sub
outsb
bound
stc
pop
push
push
sub
cltd
push
shl
jno
out
xor
addb
test
outsl
fstps
mov
xorb
xchg
jecxz
lds
add
int3
test
pusha
stos
xchg
mov
cmp
mov
aad
mov
adc
push
sbb
test
ficompl
jg
inc
lret
dec
jnp
bound
mov
test
addr16
push
and
inc
fmuls
jne
daa
push
sbb
sbb
ds
test
stos
push
push
jbe
shrl
sub
sub
add
xor
cmp
jb
jge
pop
iret
call
out
fcomp
add
test
lret
lahf
and
push
or
mov
mov
stc
adc
scas
ss
mov
cmp
xchg
xor
ss
push
outsb
push
popa
dec
jmp
nop
xor
int3
jns
jae
adcl
xor
pop
call
test
pop
cmp
lods
movsl
lret
jge
pop
jne
mov
mov
inc
adc
dec
outsb
mov
xlat
push
add
mov
jno
or
push
cmpsl
fmuls
xchg
cltd
pop
cmc
xor
xchg
mov
lcall
nop
pop
rolb
psadbw
daa
fiadds
js
ljmp
mov
add
std
call
sbb
icebp
lret
jb
add
ljmp
in
xor
and
test
loope
or
rorl
scas
sub
cmpsl
mov
push
cwtl
inc
test
fisubl
lods
jmp
sub
aad
mov
nop
or
test
dec
pop
pop
les
cmpsb
fimull
mov
pop
cld
mov
cmp
mov
add
cmpsb
outsl
xchg
and
xchg
adc
enter
notl
sub
jmp
cmpb
or
mov
or
pop
shr
movsb
aad
dec
push
push
les
or
outsb
sub
jge
inc
xor
inc
loop
cmpsb
mov
cmp
fimull
dec
ljmp
ljmp
push
sbb
inc
aas
sbb
lods
sub
or
jge
cmp
addr16
add
pop
in
xchg
adc
mov
repz
loop
jbe
jno
cs
xchg
movsb
icebp
movsb
cli
sbb
decl
mov
sbbl
sub
pop
rorl
cltd
ret
lock
sub
mov
push
jnp
xlat
mov
es
mov
mov
daa
ret
cmp
sahf
leave
cmc
insl
roll
pop
jb
idivl
xchg
rcr
sub
shl
test
jmp
sub
mov
rorb
cli
das
sbb
mov
fldcw
push
and
and
std
and
lcall
mov
lea
aaa
sbb
in
fisttpll
mov
enter
scas
movsl
out
jns
sbb
roll
nopl
add
and
out
stos
ljmp
fdivrl
ret
sbb
push
pop
push
jmp
into
inc
sub
rcrl
adc
mov
pushf
push
out
iret
sbb
lods
fists
xor
dec
pop
sub
add
nop
xchg
push
sbb
adc
or
adc
aam
jp
insb
xchg
rcr
push
push
sbb
inc
mov
mull
int3
inc
out
test
mov
fbld
sbb
xchg
mov
mov
push
mov
jg
cwtl
jmp
clc
cwtl
pop
mov
jge
je
xchg
fsubrs
ret
std
pushf
dec
xchg
ds
jnp
pop
data16
xor
fistpl
jo
push
outsb
js
dec
push
sub
mov
add
xchg
xchg
mulps
pop
rcl
ret
push
nop
dec
and
rcrb
cmp
push
iret
clc
mov
mov
pop
jl
mov
popa
loop
inc
mov
sub
xor
push
or
aam
adc
mov
ds
jnp
inc
sub
inc
sub
idivl
fldcw
std
jno
movsl
sbb
jnp
cmc
xchg
pop
je
mov
push
jl
inc
adc
xor
insl
dec
out
or
bound
xor
outsl
add
pop
das
sarb
xor
cwtl
push
inc
das
clc
add
scas
leave
fisttpl
cmp
stos
jno
fnstenv
add
js
loop
cs
fs
push
ss
imul
mov
pop
fstpl
cmp
aaa
xchg
pop
ss
mov
jbe
jns
pop
mov
push
push
cmp
aas
cmpsb
lods
and
or
pop
test
loope
orb
adc
nop
arpl
lret
leave
ret
jmp
and
lcall
jbe
cmp
popa
pop
or
sbb
pop
pop
jge
lea
add
stos
pushf
inc
dec
int
data16
loopne
aas
or
arpl
lods
gs
jnp
mov
fstpt
adc
aas
popa
sbbl
and
jmp
dec
mov
lea
out
push
xor
pop
add
iret
push
bnd
push
in
test
cmpsb
adc
mov
popa
leave
cli
and
stc
pop
mov
fwait
pop
dec
jle
scas
mov
cs
xchg
out
pop
fucomp
andb
push
leave
mov
adc
je
pop
push
out
jnp
jne
addr16
cs
sti
sbbb
hlt
je
fwait
cwtl
scas
xchg
xor
sbb
scas
lcall
mov
adc
mov
pop
or
enter
cmp
into
cmp
push
lds
mov
cmp
int3
inc
push
pop
push
add
xchg
subl
imul
cmp
push
outsb
xchg
sub
and
imul
enter
add
lret
loope
cs
enter
stc
xchg
shlb
shl
sbb
mov
inc
lahf
adc
test
jnp
sbb
ror
and
lds
jnp
outsb
rclb
ror
dec
cmpsb
pop
lcall
adc
call
stos
shl
mulb
insb
add
loop
dec
fidivrs
mov
pop
dec
nop
inc
add
lea
loopne
push
addr16
std
cmc
sti
push
ljmp
push
test
int3
insb
mov
jbe
or
sub
pop
jmp
and
add
or
push
mov
mull
insl
js
lock
push
or
fsubs
xor
leave
mov
insb
dec
sbb
ret
aas
imul
sub
or
fcomp
fsubl
mull
cltd
xchg
loop
xor
in
shld
adc
test
rcl
jno
test
xchg
sbb
scas
mov
sbb
insl
cmpsb
push
pop
divl
shrl
pop
mov
dec
add
cmp
ret
cltd
sbb
and
jo
jo
push
loopne
jo
xchg
je
mov
mov
mov
pop
cmp
pop
outsl
jne
std
inc
pop
dec
dec
jo
mov
pop
fstpl
fsubr
lea
xchg
and
in
fstpl
jmp
nop
mov
mov
cwtl
and
out
rorb
loope
in
push
sbb
xchg
subl
sub
or
test
lods
ds
sub
call
loope
scas
dec
loope
mov
sahf
xchg
rorb
adc
jp
je
int
cmpsl
push
jg
pusha
fucomp
cmpsb
stc
lock
push
and
mov
dec
pop
fstl
sub
jle
sbb
push
xor
sbb
xlat
cmp
mov
mov
inc
and
pop
jno
xchg
fcmove
js
push
mov
jge
lods
sbb
pop
psrad
pop
lea
mov
nop
cmp
jo
xor
repnz
ljmp
fxch
xlat
mov
jge
inc
scas
xor
scas
pusha
imull
push
mov
mov
mov
cmc
xchg
pop
popa
fisttpll
fdivr
fildll
repz
jle
push
cli
pop
nop
push
mov
lret
mov
mov
lret
js
cmp
cmp
fistl
inc
cmp
jnp
jo
adc
aad
int
ret
aas
push
and
sub
or
ja
in
and
mov
xor
xlat
sub
adc
dec
stos
mov
dec
jecxz
jmp
pop
lods
xchg
je
push
sti
pop
jmp
out
xchg
and
loop
and
out
and
or
mov
push
inc
push
fildl
cmp
repz
mov
roll
andb
pop
nop
out
jl
pushf
int
inc
imul
shrl
leave
cmpl
aad
lahf
inc
jg
fidivl
sub
inc
test
mov
push
std
jno
enter
jbe
cmp
cld
cmp
int3
sahf
sub
push
popf
ljmp
inc
aad
pcmpeqd
inc
add
pop
mov
add
fsubrs
or
in
fsubrs
pusha
push
in
and
das
out
sub
add
mov
fmuls
ret
add
sbb
mov
test
xchg
pop
in
je
fistpll
dec
mov
xchg
cld
repz
bound
iret
jg
test
mov
jo
dec
mov
les
push
adc
sti
dec
lods
sbb
test
cmp
mov
xchg
xchg
sti
add
jg
push
xchg
or
mov
pop
aam
xor
cmp
push
adc
das
or
adc
hlt
mov
mov
mov
jo
jmp
divb
out
push
adc
popf
repz
ljmp
aas
xor
in
jmp
stc
and
lds
outsb
popa
subb
lods
cmp
imul
mov
std
sbb
je
push
pop
push
cmp
fcompl
enter
push
nop
ljmp
mov
mov
inc
mov
dec
mov
xchg
pop
xor
fs
inc
test
xchg
pop
push
mov
insl
xchg
data16
loope
push
mov
hlt
popa
xchg
mov
jno
mov
lahf
stos
enter
je
sar
jb
andl
pusha
aas
or
adc
fdivrs
repz
jne
iret
gs
stos
jl
cs
aad
std
cld
pop
jno
cmpsl
std
das
dec
or
mov
inc
hlt
mov
hlt
rcl
stos
ja
cld
adc
mov
mov
dec
test
popa
mov
jmp
mov
sbb
cmc
sbb
sti
fstps
push
xchg
and
cmp
ljmp
stos
ret
icebp
mov
sbb
scas
xchg
and
or
roll
bound
jp
xchg
shrl
sbbl
inc
cmpsl
jg
mov
lcall
xor
cmp
xchg
mov
pop
stos
fstpt
adc
inc
call
adc
inc
add
lahf
mov
cmpsl
pop
lea
in
push
mov
lea
scas
push
inc
fildl
out
scas
jnp
pop
xchg
sub
call
jno
aam
ret
mov
in
and
aam
in
inc
in
xchg
jb
xlat
lret
popa
clc
cmpsl
cmp
lret
jne
stc
mov
stc
pop
ja
popf
pop
cmp
icebp
test
pop
push
scas
pop
adc
mov
out
fcoms
mov
test
fcompl
out
and
jp
and
xchg
stos
jmp
sbbl
loope
sub
xor
pop
hlt
in
in
gs
inc
enter
lret
sti
mov
push
or
cmp
lcall
ljmp
mov
roll
adc
inc
adcl
frstpm(287
pop
xor
xor
popa
cmp
fs
neg
mov
leave
jle
push
push
jmp
ss
loop
lds
and
imul
aam
out
fisttpl
sahf
fwait
stc
sub
push
addl
jno
jno
xor
jo
scas
sbb
divl
lods
mov
popf
call
cmp
push
add
and
mov
inc
into
jne
pop
cmp
pop
loop
jb
xchg
fistps
out
outsl
xlat
orb
and
pop
xchg
fcmove
cmp
ret
andl
in
jns
jno
das
adc
mov
jp
pop
test
rorl
push
test
mov
sbb
aad
mov
push
jp
pop
mov
inc
test
leave
out
cs
xchg
mov
mov
inc
ds
and
mov
push
lcall
mov
inc
out
xchg
push
scas
popa
ds
jo
xor
rolb
push
jnp
xchg
or
xchg
mov
or
mov
clc
xchg
pop
mov
sub
outsb
andb
mov
jmp
jns
mov
rclb
insb
imul
lods
ss
in
pusha
daa
lret
push
leave
add
lahf
inc
outsl
rcrb
mov
cltd
cmp
dec
inc
add
xor
mov
imul
int3
in
xchg
jg
fisubl
rcrl
jne
loop
sub
fs
mov
sbb
cmp
stc
js
out
push
and
push
or
and
jge
popf
iret
movsb
cmpsb
data16
jnp
and
adc
popf
mov
stos
cli
jge
dec
into
aam
aad
scas
test
ror
test
inc
jmp
push
and
cmp
add
cmpsb
es
xor
pop
lcall
sbb
rclb
leave
nop
js
ljmp
popa
or
loope
pop
pop
jmp
sbb
push
or
push
mov
inc
sub
jge
xor
mov
mov
and
jno
or
xor
loope
aad
mov
and
orb
pop
xchg
das
outsb
insb
pop
xor
jle
inc
ja
ret
lds
dec
jae
lcall
push
pop
mov
in
xor
aam
mov
push
iret
cmp
test
shrd
pop
mov
mov
add
or
mov
inc
mov
pop
xor
sti
mov
pop
inc
outsb
lea
test
pop
loop
out
pushf
cltd
pop
xor
push
or
lret
jo
mov
pop
xchg
xchg
imul
xor
sahf
sbbb
cmp
xor
andl
stos
bnd
xchg
mov
test
or
aaa
ss
or
sbb
mov
in
push
cwtl
and
xchg
shrl
mov
and
mov
fwait
lea
out
and
pushl
or
mov
pop
xor
mov
insb
cmp
mov
push
fs
fs
dec
sahf
cmp
ret
in
dec
int
test
add
inc
dec
mov
ja
ds
add
inc
call
inc
mov
cs
cwtl
pmulhw
aas
pop
stos
jg
mov
jne
mov
fs
xchg
test
jmp
call
test
sarb
stos
in
mov
notb
ja
mov
adc
mov
jns
shrb
mov
loope
sbb
adc
cmp
push
fwait
js
fstpl
dec
mov
xchg
and
outsl
mov
mov
xlat
push
pop
mov
outsb
or
mov
pop
sarl
mov
ds
xchg
loope
or
in
dec
insl
out
add
inc
cmp
das
adc
push
or
lea
sti
out
cmc
xchg
dec
fcmovne
arpl
clc
jmp
movsb
mov
inc
ds
push
lret
cmpsl
fisttpll
ret
xchg
out
fbld
nop
lahf
jae
adc
pop
lahf
add
jbe
andl
push
push
add
fdivrp
add
push
inc
dec
inc
mov
loope
jmp
jno
xlat
sbb
add
sbb
imul
inc
push
outsb
jl
les
or
scas
loope
inc
ss
lods
leave
push
ja
outsl
fiaddl
cmpsl
cmpsb
pop
movsb
lret
mov
cli
pop
mov
jmp
adc
call
or
popf
push
dec
pop
push
pop
mov
fldcw
push
shrb
shlb
ljmp
lcall
cli
scas
sbb
stos
push
xor
jo
in
or
adc
push
ret
iret
loope
xor
lcall
fstpt
add
mov
lret
pop
leave
faddl
mov
sbb
mov
push
or
ret
sub
jo
iret
and
hlt
xor
lcall
sbb
mov
or
out
in
xchg
fwait
cmp
in
cwtl
add
cs
xchg
xchg
pop
test
imul
push
inc
std
mov
fwait
and
into
add
stos
xchg
mov
fucomi
ss
bound
int
imul
xlat
sub
and
jle
shl
pop
sahf
adc
mov
jb
and
cmp
js
mov
xchg
xor
fwait
adc
jecxz
cmp
cmpsl
icebp
cmp
imul
mov
mov
std
lahf
aas
out
sbb
bound
int
aas
mov
imul
out
out
push
int3
cmp
les
jb
test
xchg
add
es
shlb
pop
fisubrl
pop
aam
and
fiadds
sbb
jo
mov
jge
cmp
mov
mov
xchg
sti
mov
pusha
aas
inc
push
push
addr16
sbb
popf
jo
and
mov
inc
sub
mov
mov
xorl
xchg
and
fwait
cmpsl
dec
mov
inc
xor
das
lret
ss
push
push
lds
movzwl
out
inc
in
cmpsb
lods
mov
bound
mov
or
xchg
lds
adc
add
imul
inc
popa
mov
pop
push
daa
addb
enter
rorl
mov
enter
push
out
cmp
outsl
jmp
mov
inc
rorl
scas
mov
push
out
jecxz
adc
lret
mull
arpl
sbb
or
out
ss
ljmp
xor
dec
mov
inc
dec
inc
inc
pushf
xchg
add
mov
cmp
inc
lea
cmpsl
aaa
and
dec
ljmp
add
scas
enter
push
imul
movsl
adc
rorl
dec
cmp
and
mov
or
mov
stos
xor
fcmovnb
adc
xor
fdivs
push
out
iret
cld
aas
pop
out
repz
xor
jp
icebp
mov
xor
cmp
int
inc
lods
push
cmpsb
mov
repz
dec
pop
xor
cmp
mov
nop
rcrb
mov
sarb
sbb
inc
pop
push
scas
inc
lcall
jb
dec
outsb
cltd
loope
adc
scas
jl
adc
in
jmp
xchg
lods
test
fwait
lods
ds
jae
jns
cld
sbb
push
adc
into
dec
rcll
push
mov
test
lock
mov
pushf
sbb
lret
jno
adc
test
adc
xchg
pop
lds
lock
pop
pop
pop
xchg
push
mov
mov
inc
xlat
jae
mov
or
jmp
mov
es
cmp
in
js
aas
test
xor
enter
fwait
data16
das
outsb
fiaddl
popl
fwait
cmp
add
dec
dec
push
lods
in
lock
mov
nop
stos
add
xor
scas
loope
adc
loopne
ror
movsl
punpckhbw
fwait
xchg
mov
jmp
ret
aad
pushf
jno
adc
cwtl
in
push
cwtl
or
popf
std
aas
push
test
push
lret
mov
aam
mov
lahf
push
cld
fidivrs
and
cs
and
hlt
sub
sbb
jae
sarb
scas
inc
xlat
xlat
mov
rclb
jae
negl
movsb
stos
mov
orb
test
insb
push
movl
cld
pop
jns
out
pop
repnz
sbb
lahf
or
sbb
xlat
cmp
fs
pop
into
add
ret
fdivs
push
and
daa
shlb
cmp
icebp
shll
fcomps
sub
data16
jb
add
dec
call
shl
sub
mov
fwait
push
sbb
xchg
cs
xchg
test
lret
roll
leave
lahf
das
sti
ds
inc
inc
add
push
mov
out
push
pop
add
ret
xor
push
mov
add
lret
cmp
roll
mov
cs
sbbb
jl
fsubp
loopne
push
push
nop
jns
mov
pop
sahf
cwtl
stos
add
hlt
dec
repnz
sub
cmpsl
or
mov
icebp
push
call
ficoms
jne
shll
push
push
mov
adc
popf
push
add
fdivp
or
pop
cmp
mov
cmp
jnp
lret
and
push
mov
and
adc
mov
lods
jns
sahf
pop
lods
scas
mov
stos
mov
hlt
orb
sbb
sbb
pushf
fisttpl
test
int3
repnz
dec
out
repz
daa
dec
cwtl
xor
negb
and
xchg
out
call
data16
add
shll
cmpsb
pop
popa
xchg
or
jp
push
mov
andb
fistps
xor
negl
loopne
pushf
or
out
mov
std
test
movsb
push
xchg
cmpl
cmpsl
rolb
rclb
fisttpll
mov
mov
mov
sti
addr16
xchg
dec
xor
js
daa
mov
mov
mov
cmp
pop
gs
dec
cmp
rcr
push
outsl
imul
stos
push
pop
ljmp
pop
test
popf
iret
bound
mov
sub
cmp
rcr
pushf
ljmp
cmc
push
into
sahf
dec
mov
test
jg
cmc
and
dec
sub
lret
subb
sbb
dec
pmaddwd
test
xchg
movsb
mov
aas
pop
lret
std
lods
add
loop
mov
xor
inc
inc
or
xor
shr
mov
mov
rcl
add
or
pop
add
ss
add
ds
push
ds
mov
lods
inc
sub
aad
out
dec
xchg
cli
test
fs
push
mov
sub
mov
cld
test
jb
in
clc
jge
cli
ja
or
enter
dec
test
imul
sarl
stos
rclb
mov
das
mov
orl
lahf
dec
mov
inc
jl
xlat
sub
insb
xchg
sub
sub
daa
popf
stc
insl
das
popa
push
cmp
jbe
mov
and
mov
xor
mov
dec
stc
jbe
cmc
in
xchg
lahf
loopne,pt
adc
aaa
cmpsb
mov
fsubl
pop
addr16
test
rcrb
icebp
pop
mov
in
subb
sub
pusha
mov
dec
jns
inc
imul
add
xchg
je
mov
push
fidivl
addl
aas
outsb
cmp
cmp
test
cmp
loope
mov
pop
rcl
arpl
sbb
fnstsw
outsl
mov
add
clc
int3
lods
nop
mov
mov
out
arpl
jno
sbb
test
clc
je
bound
clc
arpl
adc
cld
in
xchg
outsb
jmp
xor
arpl
scas
out
and
test
mov
and
in
adc
inc
imull
mov
cmp
xor
adc
jl
loop
or
fwait
lock
repz
jno
mov
test
sarb
xchg
or
sub
nop
sbb
mov
push
mov
sbb
mov
mov
cmpsl
gs
mov
rcll
nop
push
js
mov
jl
pop
jns
cmp
xchg
mov
aam
lcall
bswap
xchg
jle
hlt
push
mov
loop
xchg
cmp
mov
daa
lock
mov
fistpll
and
mov
or
das
mov
pop
sbb
call
rorl
lea
xor
jo
sahf
out
in
fwait
clc
lahf
mov
jp
xchg
stc
stos
mov
jnp
out
loop
mov
mov
sbb
cmp
sbb
xor
neg
dec
push
stc
lods
cmp
scas
test
pop
ljmp
and
cmp
rol
cmc
sbb
sahf
push
and
ds
lods
ds
adc
cmp
push
or
arpl
shlb
sub
pusha
popa
lret
sbb
mov
scas
in
jae
and
xor
sub
lahf
subb
add
pop
pop
jae
fisttps
shll
in
cmp
aaa
fcoml
xor
test
sbbb
mov
sub
mov
rcll
sub
lock
repnz
xchg
arpl
mov
pop
cmpsl
pop
loopne
push
push
xchg
and
push
arpl
icebp
ljmp
sbb
push
push
dec
jecxz
into
dec
pop
arpl
inc
mov
jno
cmpl
adc
lcall
and
push
or
pop
repz
mov
in
dec
rcrl
lret
inc
imul
push
das
jmp
xchg
imulb
cmp
mov
je
hlt
xchg
int3
dec
xchg
call
and
jnp
or
shrb
mov
cmp
push
mov
jmp
xlat
lea
sbb
jge
gs
loope
loope
push
lret
iret
jb
inc
pop
xor
shll
enter
imulb
push
cwtl
in
mov
shrl
popf
add
subl
sbb
call
faddl
lahf
dec
out
aam
inc
cmp
repz
add
ljmp
mov
mov
mov
xchg
inc
push
mov
add
mov
iret
xlat
jecxz
dec
jle
jne
mov
outsl
add
or
fildll
adc
sahf
inc
sub
pop
notb
insb
jecxz
lods
sbb
repz
cmp
sbb
loopne
pop
les
dec
and
mov
testb
mov
scas
ljmp
and
push
push
gs
pop
out
mov
xchg
dec
pop
cs
add
repz
mov
jo
jmp
cltd
add
lea
cli
fucomip
fs
fidivs
sbb
mov
mov
xchg
shll
cs
adc
stos
ret
xchg
sub
test
fidivl
ljmp
rolb
dec
ja
loopne
outsl
movsl
insb
sub
leave
adc
jns
jl
jo
add
adc
xor
fnsave
xor
outsb
inc
out
mov
push
dec
ret
movsl
jnp
push
cli
mov
jl
filds
jmp
push
mov
leave
jbe
sub
jae
iret
outsb
push
jecxz
mov
xchg
and
jne
cltd
xchg
cmp
das
bound
and
mov
movsl
push
aaa
std
fsubs
sti
in
loop
andl
sbb
xchg
lret
pop
add
ss
outsl
cmp
add
and
dec
adc
lock
dec
inc
mov
jmp
jg
std
rol
xor
adc
mov
xchg
inc
mov
adc
mov
inc
pop
xchg
dec
fwait
popa
nop
pop
pop
dec
loopne
xor
adc
int3
sbb
lock
lods
sub
mov
push
in
scas
cmp
shr
test
lods
icebp
psubq
sub
inc
daa
cld
fsub
in
xchg
xchg
add
jbe
mov
and
cld
ljmp
aaa
or
fwait
dec
xchg
dec
push
push
sub
mov
add
iret
addr16
cmp
je
outsb
xchg
arpl
jnp
jmp
das
enter
pop
sbb
cmc
dec
daa
push
loop
dec
cs
sahf
add
inc
mov
add
int3
lods
cwtl
push
adc
mov
aas
push
iret
sbb
dec
add
adc
xor
ja
js
mov
push
mov
aad
jae
push
or
dec
orb
mov
xlat
leave
insb
sbb
pop
idivb
mov
dec
sbb
jecxz
mov
int3
cmp
add
mov
pop
mov
or
insl
sbb
pop
xchg
outsb
sub
cs
sbb
arpl
mov
pushf
cmp
jnp
or
jnp
dec
stos
sbb
movsb
mov
pop
cmp
jb
dec
mov
jmp
movsb
pushf
les
sbb
ja
mov
pop
or
lea
dec
cmp
incl
addr16
push
push
ds
push
pop
pop
das
lea
out
popf
or
stos
daa
imul
add
lcall
punpcklwd
inc
in
loope
sbbl
in
jmp
add
push
shrl
sbb
fstpt
out
inc
mov
hlt
jae
repnz
and
mov
div
fs
pop
icebp
shll
repz
inc
push
inc
xor
aas
cmpsb
dec
divb
push
mov
push
call
dec
sarb
test
adc
imul
sbb
sub
sbb
stc
mov
xor
mov
fimuls
outsl
push
pop
adc
sbb
lcall
adc
add
pop
or
cmp
adc
sbb
and
pop
xchg
sahf
mov
cwtl
js
inc
adc
out
sahf
mov
pop
test
stos
sti
je
xchg
shrl
inc
stc
add
or
lock
sub
sbb
negb
lahf
add
fisttpll
push
stc
call
xchg
jmp
xchg
jnp
or
fucom
sbbl
lea
ljmp
adc
loopne
pop
and
ljmp
dec
fnstsw
sub
mov
sub
adc
dec
jge
mov
repnz
push
ljmp
pop
jno
mov
inc
mov
lods
test
shll
add
scas
movntq
hlt
in
mov
push
es
rorb
push
int
aas
cwtl
or
jb
stos
xor
sbb
lock
cld
adc
xchg
push
pop
or
mov
stos
cmp
mov
xor
dec
mov
and
ds
add
xchg
xchg
popf
popa
popa
jmp
inc
dec
pop
ljmp
mov
in
push
sbb
push
hlt
aam
fwait
ss
fsqrt
mov
fadds
pusha
out
mov
cmp
inc
pop
mov
clc
add
int
dec
pop
add
gs
or
fwait
jae
pop
jmp
pop
cmp
jnp
orb
dec
mov
fsubrl
jns
arpl
and
sbb
or
incb
xchg
mov
stos
jp
fimuls
sub
mov
mov
pop
lahf
movsl
jne
mov
adc
jbe
sbb
xchg
push
decb
ret
xlat
jnp
test
and
mov
aas
add
and
jl
xlat
stos
lock
dec
iret
mov
aas
jg
aam
cmc
xchg
in
loopne
inc
mov
push
icebp
pop
movb
jbe
cmp
or
push
rcrl
sub
mov
in
xchg
inc
in
in
nop
pop
inc
popa
stc
js
lcall
popa
mov
adc
mov
pop
aas
jnp
scas
outsb
es
pop
mov
dec
lock
enter
lret
data16
sbb
sbb
add
ss
call
sbb
sub
outsb
nop
shll
shrl
inc
mov
push
nop
aas
fmull
mov
sub
sarl
push
int3
xor
sahf
push
loop
dec
pop
aas
shrb
stc
call
mov
xchg
test
data16
adc
lds
bnd
lds
mov
inc
fwait
aaa
or
push
push
xchg
sub
add
jno
xchg
sbbb
sbb
cmp
xchg
adc
repz
decb
pushf
in
mov
cmp
std
xchg
cld
jmp
inc
in
adc
in
sbb
and
xor
mov
sbb
addr16
out
inc
dec
inc
mov
loope
test
cmp
mov
nopl
mov
shl
or
sub
cmpb
pop
jno
out
add
js
mov
add
shlb
test
ljmp
sbb
push
cld
mov
lods
sub
cli
ds
lea
shll
fucomip
push
and
or
js
cmpsl
push
into
pop
pop
rol
repz
inc
pop
mov
fcmovnb
mov
clc
jl
mov
lds
mov
test
inc
xchg
dec
cmp
xlat
mov
out
pushf
dec
cld
cmp
xchg
cmp
hlt
rcrl
cltd
into
inc
ds
in
sub
mov
cmp
addl
int3
orl
jecxz
ret
es
int3
mov
scas
clc
or
or
outsb
inc
adc
or
hlt
mov
stc
sbbb
lcall
mov
sbb
jbe
dec
jae
imul
pop
and
sbbb
mov
roll
mov
xchg
mov
scas
jno
xchg
push
paddusw
lods
cwtl
into
mov
pusha
push
mov
test
jns
mov
mov
faddl
inc
mov
xchg
sbb
jb
popf
scas
pop
packuswb
rcrb
sbb
xor
rcr
mov
mov
pushf
cmp
cmp
sbbb
inc
xchg
popf
jno
adc
inc
mov
aam
push
fsubs
lret
and
mov
add
push
jns
icebp
mov
sbb
loopne
ficompl
mov
popa
xchg
or
test
int
xor
and
fsts
int3
aas
jne
adc
mov
lret
inc
enter
hlt
stos
jo
xchg
mov
sub
out
fisttpl
inc
scas
and
pop
pop
out
dec
scas
repnz
dec
nop
xor
aam
xor
push
mov
rorb
push
xor
cmp
mov
das
insl
mov
in
xlat
adc
pop
shrl
incl
dec
dec
jo
ret
mov
dec
push
inc
jle
push
cwtl
or
les
dec
adc
clc
or
iret
outsb
shlb
jle
add
add
sbb
sbb
lods
call
cwtl
repz
sub
cmpsl
add
ljmp
pop
outsb
out
mov
and
push
shl
ficoms
and
pop
xlat
dec
insl
jnp
fsubs
adc
outsl
testl
xchg
cs
push
loopne
hlt
movsb
js
xchg
adc
mov
mov
xor
sub
test
ret
mov
jo
push
push
push
aad
inc
fcompl
bound
lock
sbb
dec
push
xor
jle
xlat
loopne
fsubr
fstps
aad
loopne
inc
loop
xor
pop
movsb
add
shlb
test
xor
pop
add
cltd
icebp
cmp
scas
push
jp
inc
cmp
insb
std
push
mov
mov
lds
outsl
push
inc
loopne
pop
push
push
cmc
pop
sbb
jnp
dec
sbb
in
mov
test
das
mov
imul
mov
push
divl
in
insb
mov
sbb
jge
aaa
pop
adc
adcb
lock
fistpl
addr16
xchg
jg
mov
pop
xchg
jl
popf
push
jmp
pop
nop
pop
and
mov
pop
xchg
cmpb
adc
rcrl
adc
aam
dec
inc
imul
test
push
add
inc
sbb
ds
cli
lds
cltd
pop
test
jb
pop
lahf
add
sahf
ret
roll
pop
inc
jo
enter
inc
mov
xchg
shlb
push
notb
out
scas
xchg
adc
cwtl
or
les
clc
sub
and
call
xchg
ds
roll
pop
xchg
dec
jbe
mov
push
dec
xchg
and
popa
stc
ljmp
std
js
divb
pop
add
out
lret
pop
loopne
fisubrl
sub
pop
fcomps
pop
loop
push
cmpsl
clc
mov
adc
mov
ss
push
mov
jo
sbb
push
inc
stos
repz
mov
aas
leave
pop
addr16
lret
inc
lea
movsl
add
lret
addr16
sub
jno
lret
outsl
cwtl
lcall
mov
xlat
add
int
xchg
ja
mov
mov
or
inc
cmpsl
mov
add
std
xchg
adc
add
push
outsl
pushf
mov
nop
subl
lahf
pop
adc
mov
mov
sub
sbb
jo
add
cli
ret
push
movb
jecxz
pop
mov
push
daa
cli
in
push
std
mov
or
pusha
mov
xchg
mov
xchg
mov
outsl
out
sbb
cmpsb
aaa
movlps
xorb
movsb
xchg
sub
jns
ds
test
in
mov
or
mull
add
sbb
jp
lds
pop
cmp
jmp
inc
cmp
push
cmp
jl
fdivr
scas
in
adc
iret
in
ret
push
scas
jne
cmpsb
mov
call
xlat
and
add
adc
xchg
lods
jbe
inc
arpl
dec
in
inc
out
ror
inc
shl
dec
test
mov
test
lret
adc
push
inc
out
xchg
in
sbb
jnp
repnz
mov
ss
loopne
xchg
mov
arpl
or
jnp
xlat
or
pusha
scas
xor
sub
jecxz
fisubl
fcoms
add
jns
lea
push
jg
jbe
push
scas
dec
lcall
jecxz
cld
pop
add
loopne
and
aad
in
pop
rorb
call
sahf
scas
mov
lret
and
xor
in
clc
in
pop
or
out
mov
pusha
xchg
add
orl
sahf
scas
dec
ljmp
daa
jl
rorb
push
jne
and
jno,pt
repz
xchg
in
sahf
call
jbe
jae
push
sub
and
and
xor
aas
outsb
sbbl
jbe
mov
dec
hlt
lock
pusha
inc
lahf
or
sbb
into
std
mov
sbb
pop
and
fimuls
sub
push
sbb
in
repnz
lcall
ss
mov
sub
clc
movsl
dec
movl
mov
sub
fnstsw
mov
mov
dec
dec
adc
and
pop
dec
mov
push
and
fs
jae
mov
mov
fsub
fsubr
xor
pop
es
add
aam
testl
idivb
lcall
movl
or
aad
dec
jns
adc
dec
mov
cld
dec
jg
test
sbb
sbb
popl
ljmp
imulb
jbe
mov
and
mov
dec
push
loope
sbb
ljmp
and
mov
dec
movsb
sbb
fadds
add
aam
in
sbb
sbb
rcll
xchg
stos
xchg
xor
add
xchg
cmp
adc
sbb
xlat
lahf
lds
orb
dec
andb
or
stc
lods
cmp
cmpsl
ret
add
lds
jp
or
je
sbb
adc
push
or
and
add
out
imul
dec
inc
outsb
out
shrl
lods
rolb
loope
xor
dec
in
sbb
nop
mov
test
cmpsl
xchg
xor
daa
rcll
icebp
leave
sub
mov
icebp
add
xor
or
sub
inc
xchg
mov
fwait
out
cld
aaa
movsl
cmp
jns
in
push
and
or
lret
dec
jne
jge
dec
lock
inc
pushf
outsb
fdivrl
push
adc
xchg
mov
mov
out
add
xor
xchg
rolb
sbb
sarl
gs
push
imull
fwait
movsl
cmp
ret
add
les
cmp
lds
lock
call
loope
popa
push
inc
nop
xor
std
jbe
mov
sub
test
clc
mov
adc
fsub
lahf
fdiv
in
cmp
push
in
enter
cmp
out
push
daa
inc
sti
loopne
shrb
add
mov
sti
adc
push
outsb
jmp
popl
and
sub
movsb
jbe
and
pop
in
jno
add
in
sbb
inc
jb
pop
or
pop
mov
xor
xchg
cmp
or
pop
xor
sub
sub
mov
dec
in
aam
idivb
inc
arpl
fdivrs
test
jecxz
sub
in
xchg
das
pusha
fidivrl
fsubl
push
mov
in
add
or
cmpsl
pop
repnz
fsts
push
gs
loopne
insb
insb
data16
xlat
adc
or
mov
stos
add
iret
subl
jmp
ljmp
jnp
push
dec
daa
rolb
xchg
jl
cmp
xchg
movl
jmp
push
scas
js
ret
pushf
xchg
pusha
inc
sbb
lds
sub
std
xchg
into
and
mov
cmpsb
out
and
arpl
std
jo
mov
test
lea
rolb
pop
cmpsl
jne
stos
jbe
jno
push
cs
sahf
ljmp
movsl
outsb
in
sahf
test
popf
jg
lret
xchg
add
dec
and
fsubp
in
mov
cmp
jo
jbe
inc
clc
in
ficoml
push
mov
lds
mov
fsubrl
sub
int
je
mov
lods
xlat
je
pushf
sub
xlat
cld
cli
dec
cltd
mov
out
mov
jb
stc
xor
xor
pushf
mov
dec
out
imul
pop
cmp
arpl
dec
xor
inc
or
test
and
enter
add
movsb
arpl
and
out
roll
shrb
lods
sbb
add
fdivl
mov
enter
test
mov
cmpsb
cmp
js
test
pop
adc
and
stos
mov
pop
popf
das
mov
jp
mov
ds
cld
mov
or
push
cmp
cmp
add
jnp
jae
sub
or
dec
es
push
in
sub
fists
mov
pop
xchg
fisttpl
mov
into
ret
test
jbe
jno
mov
xchg
jo
repz
dec
popa
cmc
popw
fucomip
dec
pop
mov
repnz
add
fimull
jp
in
cmp
adc
cmc
call
add
dec
in
xchg
and
lret
fisubrl
push
icebp
dec
imul
aam
adcl
sub
dec
cmp
sbb
in
sbb
aas
and
ret
mov
js
bnd
sub
ret
jecxz
xchg
inc
sub
cld
mov
pop
andb
leave
lret
test
sub
jo
or
pop
fwait
inc
sub
arpl
nop
les
lds
in
cmp
or
mov
push
mov
fcmovnbe
xor
push
testb
push
pop
lcall
add
xchg
and
loopne
jmp
mov
iret
dec
lret
iret
js
ljmp
mov
cmp
rcrl
bound
adc
xchg
lahf
jmp
mov
xor
xchg
sbb
ds
gs
jbe
inc
cmp
nop
push
push
cmc
fdivrl
and
outsl
mov
rcrl
dec
rclb
loopne
cmp
jle
or
inc
sbbl
adc
cwtl
dec
stos
xchg
push
and
imulb
mov
jge
out
pop
aaa
adc
jb
push
incl
gs
scas
push
mov
std
mov
mov
in
in
dec
dec
addr16
lods
adc
bound
loope
or
xlat
outsb
pop
fs
int
lret
in
jns
out
dec
mov
pop
jmp
loopne
mov
insb
dec
jmp
or
or
and
mov
call
pusha
pop
pop
arpl
out
insb
in
pushf
repz
dec
mov
gs
mov
xchg
adc
outsb
lret
jge
mov
lret
xchg
shll
dec
scas
mov
mov
push
push
out
mov
fsubl
push
mov
xchg
mov
cli
jg
adc
loope
test
jge
sbb
cli
jle
sub
push
xchg
mov
lret
mov
ret
fcomp
lea
imul
stc
push
dec
repnz
in
dec
jp
dec
loopne
hlt
pop
aad
jnp
xchg
std
add
cld
mov
paddusb
in
insb
test
mov
insb
outsb
add
pop
cli
mov
icebp
mov
mov
fbld
divb
xchg
jp
mov
and
outsb
or
aaa
and
shrl
sbb
mov
rclb
add
fdivr
arpl
push
mov
dec
shlb
sbb
adc
test
bnd
mov
push
add
mov
mov
cmpsl
adc
mov
fdivrl
cmp
fdivr
mov
jmp
jb
xor
inc
push
xchg
lahf
inc
push
mov
mov
int
sbb
cmp
mov
and
loope
call
bound
rcr
xorl
adc
addr16
lods
cmp
outsb
sub
movsb
fwait
call
inc
sahf
cmp
dec
and
movsb
push
imul
pop
pop
fst
lock
test
in
std
out
xchg
adc
call
ret
loopne
pop
and
pusha
lds
gs
andl
stc
addr16
test
add
cmc
lret
pop
lret
out
scas
repnz
push
jnp
int3
icebp
in
dec
and
ficompl
out
daa
movsb
jb
sub
xchg
jbe
inc
mov
jle
lret
mov
insl
mov
mov
adc
inc
dec
outsb
xor
adc
cmp
fistpll
push
mov
lahf
push
jle
xor
mov
out
sbb
cmp
cltd
add
xor
xlat
sub
pop
aas
mov
hlt
jle
pop
js
xor
inc
lock
mov
arpl
fistpl
testb
int3
movl
xchg
cld
ret
push
inc
or
aaa
fldt
add
pop
repz
push
sub
cmp
or
ds
xlat
xlat
and
mov
lcall
sbb
clc
mov
in
pusha
int3
addr16
sahf
lock
push
aad
adc
aas
xchg
add
iret
sbb
ss
and
cmpb
mov
or
fistpl
or
les
in
fimuls
clc
sbb
sub
sub
arpl
ficomps
aad
push
pop
andl
pop
jae
xor
pop
mov
addr16
jle
pop
jp
inc
je
cmp
test
cmp
or
scas
add
aaa
fbstp
cmp
shlb
jno
shl
push
pop
xchg
std
sahf
mov
jbe
jbe
mov
jp
xor
les
repz
call
xor
out
xchg
popa
outsb
adc
xor
inc
cmpsl
mov
cmp
push
mov
loop
sub
lds
daa
int
rcrl
xchg
inc
mov
aaa
jb
xchg
jmp
adc
lret
push
jb
lret
and
lods
pop
imul
das
sbb
dec
outsb
bound
jmp
cmp
or
incl
ss
sub
push
shl
lcall
roll
or
adcb
adc
bound
inc
pushf
ret
xlat
loopne
std
shll
jmp
jl
add
add
movsbl
lods
pop
mov
xlat
mov
lcall
sub
roll
push
movsb
jmp
sbb
enter
lcall
ret
les
push
out
sub
loop
sub
xor
clc
xchg
push
ja
pop
pop
inc
add
sbb
dec
inc
sub
jmp
jle
sbb
xor
push
aam
addr16
jge
cmp
data16
pushf
ret
xchg
lret
fiaddl
mov
xor
xchg
lock
sub
popa
dec
xlat
cltd
lahf
lahf
xor
push
dec
aad
jl
test
cmp
daa
push
subl
cmp
lods
data16
je
jb
inc
lods
insl
push
push
xor
jmp
xchg
adc
push
pop
ljmp
xor
push
and
iret
pop
push
or
lret
adc
sbb
outsl
lcall
fistpll
push
aam
push
mov
cmc
syscall
cmpsl
lret
cmp
cmp
js
insb
gs
sbb
sbb
adc
dec
loopne
out
dec
mov
inc
into
mov
mov
pop
data16
xor
std
xchg
mov
xor
loope
mov
int
out
dec
jo
xchg
data16
les
out
mov
adc
sub
cs
xor
xchg
xchg
fwait
loopne
gs
pushf
jns
cltd
add
jnp
inc
push
bnd
call
mov
insb
out
test
in
pushw
fldl
dec
adc
or
xchg
cld
add
aas
insl
lret
adc
mov
and
fists
ja
and
and
dec
mulb
sub
mov
cmp
mov
jb
inc
imulb
pusha
movsl
cmp
out
les
pop
test
and
lcall
mov
push
pop
out
mov
movsb
mov
inc
pop
gs
rcl
xor
sti
mov
out
pop
pop
xor
fs
outsb
push
inc
cli
negb
jb
das
mov
leave
std
rcll
je
jp
sbb
xchg
adc
arpl
loope
sbb
sub
mov
push
adc
cmp
sbb
loop
jbe
loopne
mov
ret
dec
popl
pop
je
inc
push
gs
jmp
outsb
je
call
jne
or
or
lock
adcl
mulb
add
pushf
jge
xchg
jge
aas
mov
and
xchg
cmpsl
rcl
dec
fisttpl
pushf
mov
adc
add
jg
push
fadd
movsl
jne
mov
fs
arpl
and
rorb
jb
aad
dec
popa
jae
push
mov
add
les
mov
shr
into
jo
lock
test
hlt
mov
testb
mov
and
outsl
cmp
in
mov
ja
or
inc
pop
inc
and
cmp
icebp
or
sbb
out
mov
or
mov
ljmp
aad
nop
push
loop
sbb
das
rcll
sub
mov
xchg
xor
sub
cmp
movsl
aaa
push
mov
js
popa
into
mov
push
lds
push
ficoms
popf
cld
and
adc
addr16
pusha
pop
fstps
sub
jae
or
pop
cli
jg
fiadds
loope
xchg
push
js
mov
mov
adc
pop
mov
jp
cmpb
or
lds
and
pusha
loop
daa
and
les
xor
push
iret
js
pop
pushf
sub
fcoml
jp
int3
aaa
jg
push
mov
jg
jg
imul
stos
fistpl
sub
lods
nop
sub
add
and
pop
push
jbe
xchg
jno
inc
out
or
jbe
cmp
cmpsb
jp
in
popa
or
ret
imul
mov
mov
inc
xchg
lds
int
add
test
jbe
and
in
test
pop
xchg
inc
xchg
mulb
dec
pop
pop
sti
out
adc
bound
add
jo
rcrb
mov
sbb
push
jl
mov
inc
fldl
repnz
ja
pop
xor
sbb
push
je
lea
shl
jae
cmp
sub
add
push
cmc
cltd
push
fs
aad
shrb
ret
xchg
ss
mov
mov
cwtl
adc
pusha
mov
dec
mov
ja
jb
adc
adc
jbe
push
push
inc
inc
sbb
arpl
std
mov
or
nop
call
xchg
sub
pop
and
in
inc
insb
sbb
inc
mov
in
push
jl,pt
stos
pop
int3
mov
rorb
popf
sub
pusha
lock
pop
daa
mov
stc
sub
mov
adc
js
mov
mov
pusha
jmp
sub
mulb
cld
xchg
int
or
xor
lahf
adc
cli
adc
mov
fsubs
adc
aam
dec
and
int3
mov
jmp
mov
shll
adc
cmp
int
addr16
mov
sbb
imul
sub
call
ljmp
ss
jg
popf
push
aad
aam
push
testb
imul
sbb
fucomp
adc
out
sbb
or
movsb
ret
sub
sub
insb
cmc
out
mov
cmp
in
xor
and
lock
add
call
scas
scas
or
push
cltd
mov
fwait
aad
data16
inc
shrl
dec
insl
insb
sub
jle
inc
in
movsl
adc
cmp
imul
mov
pop
and
pop
or
and
and
int3
pop
ret
or
in
cld
rcrb
mov
int3
push
mov
lret
mov
dec
jge
jp
push
aaa
inc
insb
aaa
mov
lea
aaa
dec
lods
or
ljmp
mov
cmc
pcmpgtw
pop
int
pop
lret
cmp
or
add
rcr
sub
mov
pop
lock
mov
bound
lahf
stos
inc
aaa
pop
xor
idivl
cmp
inc
leave
ds
sahf
loop
xchg
push
clc
rcr
cmp
push
jns
adc
dec
iret
sbb
aad
push
sub
jo
cmpsl
mov
xor
mov
shl
dec
stos
xor
in
in
cmp
sub
inc
sub
outsb
cmp
xchg
cmp
mov
mov
scas
xchg
ja
orl
pop
lcall
adc
xor
pop
es
sbb
loop
rorl
pop
loope
mov
mov
test
jo
dec
adc
push
int
cmp
pop
sti
je
push
pop
xor
adc
push
cmc
cmp
scas
repnz
nop
std
sub
sarl
and
xchg
test
push
das
clc
daa
adc
dec
insl
mov
roll
pop
orl
mov
push
pop
aas
cmp
or
jmp
stc
push
loopne
fldl
xlat
ror
jg
test
das
adc
jmpw
lock
enter
and
pusha
and
jmp
or
jb
ret
lock
lods
pop
mov
xlat
push
cld
jecxz
idivl
js
sub
sub
jne
ret
test
mov
mov
js
pop
jne
xor
fldenv
inc
mov
repnz
jecxz
dec
cwtl
test
jg
mov
fcomps
adc
inc
xor
mov
ficomps
fwait
adc
and
mov
sub
aas
xchg
jp
lea
hlt
outsb
pop
push
xor
and
lods
fnstcw
dec
dec
mov
push
sub
push
dec
push
ss
sti
cli
mov
fsubr
outsl
sub
cmp
scas
cs
mov
push
or
rcll
and
xor
loopne
les
movsb
xchg
ja
in
cmp
inc
in
bound
je
nop
sbb
enterw
add
cmp
lods
adc
orb
jno
mov
nop
xchg
mov
push
mov
jmp
es
test
jo
cmp
in
mov
push
aaa
pop
lret
in
insb
pop
addr16
push
lcall
dec
loope
mov
lret
jp
sbb
xchg
repz
xor
iret
icebp
ffree
xchg
push
cld
mul
mov
cmc
push
and
add
rcrb
dec
cmp
ds
inc
xchg
mov
xchg
cmp
dec
lcall
stos
sub
lods
jmp
outsl
mov
push
jle
jp
ds
popf
int3
decb
xchg
iret
daa
mov
xchg
inc
xor
out
sub
roll
stos
pushf
adc
mov
xor
shll
mov
dec
sbb
dec
inc
mov
dec
fwait
mov
movsb
dec
addr16
cmp
jle
data16
mov
pop
out
inc
jl
ret
movsl
fisubrl
lods
lds
cmp
nop
push
mov
stos
mov
mov
out
adc
and
lock
adc
mov
jb
jmp
mov
mov
fucom
decb
pop
mov
cld
and
jge
sahf
inc
cmp
sarb
mov
jae
push
xor
ja
fwait
test
sbb
push
mov
adc
mov
fwait
mov
add
xchg
insl
xchg
xchg
das
arpl
popf
out
cmpsb
xchg
or
lds
inc
hlt
lcall
and
push
push
pop
mov
cmc
loope
add
out
imul
mov
in
mov
sub
cwtl
xchg
mov
xor
xchg
jp
fiadds
mov
decl
cmpsl
xchg
sub
inc
jns
or
ror
push
loope
clc
ficompl
iret
sbb
push
inc
xchg
pop
add
cmpb
cmovno
dec
push
add
dec
xor
xorl
mov
xchg
out
ret
test
dec
mov
int3
xchg
add
stc
dec
lret
push
rcll
cmc
cmp
inc
mov
out
movsb
outsl
test
neg
mul
fisttpll
out
adc
push
dec
mov
repz
xor
mov
xor
push
dec
mov
call
mov
imul
ljmp
xchg
ds
jl
add
cmp
xchg
pop
mov
sbb
or
inc
mov
mov
pop
push
js
sbb
jbe
bound
add
daa
mov
mov
inc
dec
cmpsb
inc
cwtl
int3
mov
adc
jmp
insl
scas
das
gs
mov
outsl
dec
out
pop
push
mov
loope
sub
or
in
bound
push
negl
test
sti
pop
movsb
call
aad
movsb
aas
ss
imul
je
mov
ror
inc
sarb
in
icebp
in
mov
push
clc
cmpsl
xor
in
lods
aad
pop
clc
fsubrl
sti
js
inc
jecxz
or
aas
je
scas
jmp
cmp
je
sbb
fcoml
fmuls
lret
fldenv
sub
rcl
add
sti
enter
mov
adc
or
shrb
scas
push
xchg
dec
shl
xchg
xchg
sbb
popf
push
xor
into
jo
jmp
test
cli
lea
mov
into
jbe
jl
mov
insb
fcoms
ja
aam
sub
aad
andl
sbb
push
xchg
ja
sbb
ret
or
les
mulb
js
or
roll
inc
insb
push
rcr
push
rcrl
push
xor
xor
mov
out
insl
ror
pop
push
scas
push
sbb
outsb
mulb
lret
jp
lock
outsl
mov
sarl
pushf
add
mov
lods
out
xchg
push
mov
call
popf
push
xor
cmc
mov
jg
push
aad
rcrl
ss
xor
xor
or
lds
pop
imul
dec
roll
in
in
addr16
sbb
xchg
inc
xchg
shll
test
or
mov
clc
adc
xor
jnp
cmp
push
inc
jne
mov
flds
pushf
nop
aas
sahf
sbb
pop
xchg
mov
aad
flds
test
jo
adc
sbb
arpl
int3
or
mov
out
sub
daa
sbb
and
cmc
pop
cltd
addr16
mov
cmp
or
aas
push
dec
jecxz
adcl
xchg
dec
lret
pop
push
mov
out
out
mov
pushf
std
lods
dec
inc
push
inc
xchg
mov
test
dec
inc
mov
xor
mov
clc
or
sbb
dec
cld
sahf
jns
or
fdivrs
repnz
mov
xchg
mov
sub
cli
aam
mov
sbb
mov
data16
mov
pop
push
rolb
jbe
pop
pop
inc
mov
shll
in
sub
stos
jg
xchg
fldcw
shl
int3
pop
cmp
in
repnz
jbe
lods
cmpsb
mov
ds
aaa
jbe
fmul
add
test
adc
adc
sar
cmp
js
inc
aaa
ret
mov
js
jns
movsb
outsl
pop
popf
jbe
xlat
sahf
and
scas
xchg
or
add
fs
cli
cs
and
popa
out
mov
out
push
loop
xchg
stos
mov
mov
popf
popa
ds
push
fwait
adc
loop
push
fnstenv
je
push
fcmovnb
add
in
push
sbb
shl
pop
mov
add
xchg
pushf
adc
mov
push
mov
mov
mov
mov
sbb
jp
and
sahf
stos
loopne
popa
xchg
sub
mov
adc
out
mov
adc
push
push
adc
add
mov
imul
insb
or
pop
inc
jae
mov
or
xor
dec
mov
sub
loopne
shl
and
mov
jae
and
mov
push
subb
ror
push
cld
jo
and
das
roll
scas
jae
jns
inc
or
jecxz
push
popa
nop
or
and
and
jno
ret
test
roll
xchg
cmp
pop
mov
dec
pop
sbb
cmp
fnstcw
mov
mov
jbe
or
andb
rcrl
push
out
int
fisubl
aad
dec
push
ret
xchg
push
psrld
in
call
lock
lds
ds
mull
outsb
inc
inc
dec
movsb
lea
fildl
xor
loop
add
daa
dec
sti
and
fstps
pop
pop
stc
js
push
int
pop
stos
mov
pushf
leave
lret
hlt
outsl
test
xchg
outsl
push
out
add
shll
addr16
addb
sub
xchg
jno
icebp
push
arpl
xchg
scas
fnstenv
mov
lcall
jecxz
xor
aad
adc
or
and
xchg
mov
test
fldcw
inc
dec
xchg
cwtl
xchg
lahf
stos
movsl
mov
xchg
outsb
add
add
inc
adc
jns
popa
sub
mov
and
jne
daa
sub
idivl
jmp
adc
xchg
fnsave
jo
lcall
cmc
repz
mov
push
aad
mov
mov
inc
test
jecxz
mov
push
mov
pop
das
in
mov
out
adc
gs
xchg
je
cmpb
and
std
fistl
pop
add
dec
out
xchg
jl
das
push
je
dec
sbb
loop
rcl
or
xor
inc
add
imul
pop
sti
mov
imul
xor
or
imull
fcoms
pop
negb
pop
das
adcl
shr
roll
aad
jbe
ret
adc
pushf
outsl
jg
mov
dec
cmp
cmc
lret
adc
mov
loopne
mov
shll
xchg
sub
std
mov
rcrb
dec
nop
push
sbb
or
cmpsl
scas
sbb
js
inc
xor
push
lret
and
shll
repnz
shlb
cmp
fidivrl
sub
mov
repz
dec
dec
push
mov
inc
aam
xor
cmp
ja
xor
scas
fwait
pushf
adc
fldenv
cld
cmp
mov
mov
lret
loopne
or
dec
ss
stc
je
movsb
icebp
jb
push
pop
aaa
adc
lock
stos
aad
xchg
jbe
xlat
clc
and
loopne
pushl
inc
sahf
sub
hlt
adc
jl
mov
mov
cmp
pop
aaa
push
mov
and
mov
outsl
inc
mov
fdivr
daa
test
jle
push
and
mov
sbb
imul
and
adc
cld
jo
mov
jne
hlt
cltd
aas
rorb
imul
jecxz
data16
cltd
mov
aam
add
or
ss
cli
fisttpll
jmp
in
sub
dec
or
or
push
dec
and
nop
addl
ds
push
sbb
out
bnd
adc
dec
mov
imul
xchg
jo
inc
xchg
js
jno
adc
adc
inc
dec
cmp
push
dec
mov
vmovlpd
push
je
cmp
xor
popf
scas
mov
or
jbe
inc
cmp
fcmovnu
outsl
add
ljmp
mov
lock
repnz
and
cmp
inc
out
or
ret
fwait
jge
int3
jne
jp
aam
leave
sub
test
jp
jg
cmc
shlb
stos
jbe
jp
push
lret
mov
stos
call
enter
push
cmc
dec
xchg
sub
arpl
aas
mov
push
jp
cmpsl
inc
ljmp
cmp
mov
fdivrl
repnz
scas
xlat
sbb
ja
pop
inc
xor
inc
cmp
cmc
pusha
popf
imul
iret
xchg
xchg
scas
sti
popf
aas
test
mov
sbb
rcrl
jle
cmpsb
hlt
sti
jle
rsm
pop
shrb
and
pop
int3
mov
aaa
push
cmpsb
pop
add
loop
sbb
push
cmp
fs
or
std
data16
lea
mov
gs
cmp
dec
call
jg
inc
lock
xor
push
adc
icebp
test
call
scas
adc
jmp
out
jo
fmuls
adc
mov
outsb
test
je
movsl
mov
scas
int3
mov
sub
test
jg
xchg
loope
ss
subb
xor
dec
movsl
dec
scas
push
sub
jnp
addl
or
arpl
shl
mov
sbb
mov
lahf
mov
lahf
cmpsl
sub
pop
cmc
xor
cld
test
pop
scas
scas
shrl
fisubl
push
inc
mov
clc
bnd
std
mov
loope
idivb
lds
and
pop
sub
stos
loopne
pop
or
in
into
mov
cltd
xor
mov
adcl
ja
fcomi
jle
fs
ret
jno
dec
dec
mov
addr16
mov
dec
insl
gs
inc
sti
leave
stos
mov
ficoms
loop
andl
es
and
in
cs
mov
test
arpl
ss
stos
or
xchg
popa
adc
xchg
cmp
bound
fimull
mov
aam
push
ds
nop
sbb
test
push
pop
iret
xor
adc
lret
insl
fimuls
adc
mov
idivb
adc
inc
les
dec
jne
loop
xchg
js
popa
push
sub
fsubl
inc
push
aad
jnp
mov
popa
adc
dec
adcl
fdiv
push
fucomi
mov
das
cwtl
jg
mov
fdivrl
inc
loope
mov
pop
mov
mov
sub
ficoml
test
xchg
jecxz
int3
xchg
addr16
iret
jb
jl
lcall
nop
addl
or
in
or
mov
xor
ficoml
jg
mov
pop
lods
cmp
fcom
rorl
int3
lahf
fs
jno
jns
add
add
push
lods
fwait
sahf
mov
cmpsb
pop
lock
out
adc
rorl
leave
pop
das
jmp
mov
test
std
filds
das
sbb
les
dec
sub
jp
int
imul
mov
fimull
pop
jle
int3
cwtl
xchg
cwtl
push
jmp
add
mov
xor
insl
xor
mov
pop
aaa
cmp
scas
pushf
repz
lods
pop
iret
aad
add
inc
das
notl
in
cs
addr16
adc
rclb
ja
xor
out
push
inc
sbb
inc
movsb
add
insb
pop
inc
ds
imul
fstl
xlat
int3
inc
dec
jg
dec
fsubrp
jnp
inc
cmp
je
adc
cmp
mov
notb
lahf
xor
and
popa
inc
int
ljmp
push
jle
jnp
mov
mov
ds
repnz
fisttpl
mov
aad
dec
daa
adc
ret
and
pop
cmpsl
aam
or
adc
jno
push
insl
cmpsl
ds
fiadds
mov
jg
call
xchg
add
push
leave
sub
jbe
enter
iret
das
inc
repnz
movsb
mulb
pop
xchg
fucomip
out
mov
outsl
sub
jg
or
adc
pop
and
fucomi
movsb
inc
mov
mov
daa
fcomps
dec
dec
add
mov
inc
ljmp
xor
movsl
xor
jmp
add
and
mov
movsl
xor
add
sub
std
inc
das
ds
and
icebp
mov
or
ja
in
scas
imul
cmpsl
jp
out
jg
movsb
movsl
sbb
das
ret
mov
into
fsubrl
scas
popa
and
mov
cltd
jg
cmc
shlb
orl
add
dec
sti
les
mov
fbstp
cltd
sub
dec
mov
call
and
xor
push
fs
test
je
inc
cs
ret
sub
enter
sub
cmp
mov
and
fwait
cmp
scas
and
lret
sbb
out
mov
push
cmp
inc
ljmp
outsb
sbb
sub
xchg
jno
pop
sbb
orl
push
xchg
mov
add
fld
push
test
loope
aas
mov
and
jbe
repnz
fcmovbe
es
fisubs
sbb
cmpsb
in
ret
xchg
push
in
inc
xchg
jno
icebp
add
xor
int3
sbbb
jo
push
sub
cmp
in
bound
clc
lahf
out
push
in
les
clc
push
lds
push
leave
and
fs
movsb
std
movsl
orl
xchg
sub
pop
cltd
test
mov
sarb
les
xor
mov
lahf
rcl
mov
lods
test
stc
data16
pop
into
ds
sub
loope
sub
push
out
mov
dec
sbb
add
xchg
pushf
aam
popa
mov
lahf
pop
mov
into
push
sub
mov
sbb
test
mov
xchg
jge
ljmp
in
aad
aam
in
push
mov
outsl
test
imul
push
ret
xor
outsb
repnz
fs
mov
repnz
clc
push
add
cmc
dec
lock
mov
sub
dec
flds
or
arpl
mov
or
fisubs
iret
mov
jecxz
rcrl
dec
in
or
lcall
adc
xchg
mov
or
jns
in
pop
addr16
push
stos
xor
sub
sub
add
and
popf
or
inc
dec
lods
mov
and
xchg
imull
aam
mov
enter
cmp
jmp
xor
pop
mov
mov
fsubrp
and
fld
cmp
mov
popa
clc
jb
and
xor
shlb
cmpsl
repz
aam
and
and
pop
shlb
jmp
mov
jecxz
xlat
push
add
test
xchg
or
leave
in
xchg
xchg
mov
bound
scas
jmp
mov
jp
js
shl
cmp
lcall
outsl
test
jnp
xchg
int
movsl
fcmovnb
mov
ja
fstpl
mov
mov
bound
popa
add
cld
test
cmc
cmc
loop
insl
mov
sub
cmp
pop
test
cmp
dec
pop
in
mov
push
or
xor
xchg
pop
test
pop
sbb
out
leave
test
mov
repz
jge
mov
insb
movsl
push
and
push
add
jp
andb
shll
mov
xchg
jg
mov
adc
rcl
sbb
add
lret
movsb
scas
mov
jl
mov
cmpsl
cmpsb
jp
xor
lret
repz
stos
mov
cmp
fiadds
mov
testl
sbb
icebp
popa
hlt
mov
pop
pop
xor
push
pop
int3
orb
xor
cmc
push
inc
outsl
in
ljmp
pop
sbbl
dec
shll
fdivs
lret
cmpsb
and
out
xor
pop
xchg
jbe
push
loop
fisubl
int
popa
or
push
add
pop
in
out
push
xchg
xor
enter
gs
pop
pop
fdivrl
push
mov
aad
push
xor
push
add
jp
ret
lock
pop
psraw
sub
pop
xor
cmp
loop
xor
in
mov
popa
sub
imul
jl
rcr
mov
sbb
addb
test
pop
inc
cli
jae
xor
rol
cmc
hlt
dec
aas
mov
cli
aam
aas
push
pop
imul
fwait
add
jo
pop
adc
ret
into
sar
adc
int
int3
packuswb
sub
inc
out
mov
push
in
movsl
jnp
pop
mov
negl
or
ret
and
jae
lock
ljmp
addb
fisubs
mov
clc
mov
push
mov
mov
pop
clc
push
add
mov
sbb
dec
mov
add
xchg
pop
fwait
dec
mov
xchg
lahf
mov
or
mov
dec
jns
out
xchg
xchg
sahf
int3
xor
cmp
or
inc
sub
lcall
sub
add
push
lods
cld
insl
ss
xor
sbb
adc
imul
inc
inc
jns
xchg
cmpsl
add
sub
cmpsb
fcoml
adc
dec
or
mov
iret
mov
and
dec
mov
sub
mov
ficomps
push
int3
mov
mov
js
jnp,pn
lock
pushf
adc
lret
fs
movb
fcomps
push
lret
dec
cs
dec
cltd
pop
out
xchg
js
add
roll
and
add
loopne
lods
shlb
ljmp
pop
or
aad
add
imul
in
sti
push
aas
lahf
mov
pop
rclb
inc
mov
int
shrb
jle
in
jb
sbb
mov
inc
fadds
cmp
rorb
fiadds
mov
mov
adc
out
jmp
adc
xchg
mov
rcll
mov
sti
mov
adc
push
insl
outsb
cmp
leave
lcall
data16
cmpsl
jmp
jbe
push
xchg
cmc
aas
inc
xor
jo
xor
push
pop
jle
fwait
fs
shll
or
sbbl
push
lods
xor
cltd
inc
in
mov
into
dec
cmp
fwait
jno
inc
cld
dec
insb
xchg
call
mov
push
add
inc
inc
aam
mov
ret
pusha
in
push
in
fnstcw
lret
push
sbb
sub
js
cmp
out
push
xlat
add
in
add
lock
fs
outsl
ret
xchg
and
and
mov
pop
int
mov
lcall
jl
movsb
fucomip
aad
mov
cmc
cmp
mov
xchg
jp
xor
stc
push
and
outsl
sbb
aad
inc
test
push
add
sbbl
das
mov
in
jne
enter
out
mov
and
push
mov
mov
insl
ljmp
jne
pop
cmpsb
cmp
xorb
jmp
xchg
fmulp
push
sbb
cmp
fisubrs
loope
jo
lret
out
lods
inc
icebp
testl
ja
lea
out
out
jno
or
test
je
call
mov
mov
pop
jmp
mov
xchg
xchg
bound
mov
mov
test
lcall
dec
sti
aad
call
mov
xchg
cmp
add
mov
sbb
jbe
cmp
stos
mov
in
add
iret
dec
pop
pop
shrl
jb
fdivs
testb
insl
mov
roll
mov
ljmp
cltd
pop
mov
mov
std
dec
push
pop
adc
xchg
jae
aaa
push
push
into
ficoms
scas
xchg
scas
test
mov
dec
dec
ds
pop
pop
je
outsb
fiaddl
iret
add
cmp
mov
lea
mov
movsl
hlt
jbe
push
dec
aaa
mov
inc
jns
ja
cmpl
scas
stos
lds
pop
xchg
push
out
js
pop
push
scas
inc
cld
mov
lret
and
lcall
fcompl
sub
or
repnz
cmp
and
mov
ss
push
jg
icebp
add
arpl
mov
dec
flds
into
pop
jne
addr16
and
lds
cmpsb
out
sti
sub
popf
dec
sbb
int3
xchg
or
jae
mov
sub
mov
sbb
outsl
mov
mov
out
inc
repz
addr16
xchg
dec
xor
lahf
call
stc
mov
jmp
mov
in
jecxz
mov
push
divl
sbb
in
adc
mov
insb
mov
out
pop
call
test
fnstsw
aaa
inc
pusha
bound
ficomps
ficoms
int3
cmc
sub
push
lret
pop
fisubrl
xor
pop
std
xor
scas
idivl
push
in
dec
into
scas
bound
jbe
mov
gs
test
push
pushf
push
lods
subl
imul
pop
inc
sahf
mov
sbb
sbb
or
stc
and
pop
jne
or
dec
insl
jg
or
popa
gs
jl
jo
aaa
push
ja
jns
loopne,pn
aaa
lock
popa
or
jle
cs
jle
mov
incl
scas
add
dec
cmp
push
mov
or
jle
jecxz
xor
or
push
sub
cmpsb
iret
pop
fisubrl
mov
inc
add
sub
in
mov
sbb
fbld
adc
xlat
dec
gs
jecxz
or
scas
jmp
iret
decl
sub
and
mov
add
jae
out
mov
mov
adc
sbb
imul
shll
push
jmp
shll
mov
cmp
addr16
mov
jne
or
adc
arpl
lret
je
out
sbb
mov
out
scas
pop
sbb
insb
aaa
push
test
add
addb
lcall
imull
gs
mov
int3
dec
adc
dec
sbb
pop
push
es
jnp
shl
pop
fstps
add
pop
leave
ret
movsl
mov
lock
scas
enter
mov
aas
mov
push
mov
mov
mov
fstpl
rcrb
mov
in
sahf
cmpsl
out
push
arpl
hlt
in
inc
es
pop
popa
add
push
push
test
nop
in
pop
addr16
repz
ja
jge
popa
fsubr
stos
int3
jg
lcall
xor
jae
sub
and
lahf
scas
and
paddb
dec
ss
mov
mov
dec
shrl
add
mov
mov
aad
and
push
cwtl
pop
in
mov
fdivrl
sbb
es
lods
mov
push
push
rol
mov
idivl
repz
xor
and
gs
and
cmp
fwait
lret
inc
mov
lods
adc
pusha
std
push
sbb
dec
mov
pop
xchg
inc
sub
cmc
add
xchg
hlt
push
movsb
fisubrl
adc
fs
inc
push
cld
xlat
loope
imul
pop
test
lahf
sub
xchg
mov
pop
out
jnp
add
sbb
cmpsb
push
or
imul
pop
dec
xorb
dec
mov
push
lret
xchg
cmp
movsl
movsl
sub
cmp
mov
lcall
push
push
andb
mov
push
gs
mov
arpl
ds
mov
adc
loop
stc
scas
hlt
xorl
ljmp
push
sub
cmc
aas
in
sahf
out
xchg
inc
test
push
jns
mov
pop
push
cmp
xchg
mov
sbb
jbe
daa
xchg
mov
mov
push
insb
push
int
sahf
out
shl
cwtl
scas
loopne
loopne
leave
jecxz
or
out
test
hlt
lcall
inc
lcall
xchg
das
stos
add
shl
push
xchg
cmpb
cmpsb
inc
pop
and
test
in
adcl
lea
cmpsl
lods
in
call
mov
jmp
adc
lock
jmp
jg
mov
adc
aas
or
sub
outsl
mov
ret
inc
test
xor
push
dec
sub
xchg
data16
xlat
decb
popf
arpl
popa
push
push
adc
sahf
sub
xchg
fwait
addl
pop
std
into
or
fidivl
sbb
xor
inc
xchg
push
out
jbe
dec
popf
dec
push
sbb
aad
mov
inc
movq
push
mov
push
lahf
stos
rcll
les
xchg
xchg
out
call
loop
or
mov
pushf
xorl
add
pop
leave
rclb
fadd
cltd
out
push
imul
rcr
xor
mov
push
mov
mov
cmpsb
sbb
dec
jbe
mov
jge
cmp
jl
push
sbb
shll
je
fcmovnbe
lcall
dec
arpl
dec
div
dec
xor
addr16
sub
stc
xchg
add
dec
dec
sbb
jo
daa
adc
and
mov
mov
into
jmp
mov
sti
cmpsl
sbb
dec
lret
clc
dec
jae
mov
in
push
jb
dec
mov
roll
sub
and
es
add
push
out
sbb
mov
imul
cmpb
sub
jg
push
jne
fwait
sbb
out
cli
aam
and
punpckhbw
push
popf
dec
sub
push
xor
cmp
mov
iret
xchg
loop
cmp
or
cwtl
pusha
jno,pn
xchg
ss
movsb
gs
cmp
mov
xlat
mov
inc
pop
scas
or
add
loope
into
inc
push
jmp
aam
xor
pop
mov
sbb
lock
ja
and
shrl
aas
xchg
fsts
out
fimull
popa
jge
lahf
xchg
subl
mov
sub
lcall
lret
sarl
rcl
enter
push
mov
pop
add
aas
xchg
mov
pop
clc
aad
mov
sub
push
mov
jae
rcrl
mov
jb
sub
test
les
cli
push
lods
imul
addb
stos
repnz
sub
sti
jg
rcll
pop
xlat
mov
cmpsl
sub
pusha
jg
mov
dec
jecxz
loopne
jb
push
push
ss
outsb
repnz
data16
testb
stc
fisttpl
mov
mov
jns
inc
shl
jbe
add
mov
lret
push
outsb
mov
xchg
mov
clc
sub
divw
jecxz
cwtl
clc
out
cmc
mov
xlat
fidivl
rcl
xchg
or
lahf
cmp
inc
push
in
mov
and
nop
sub
xlat
nop
enter
xor
push
in
cmp
test
sbb
pop
and
sbb
das
rorb
push
mov
arpl
jp
std
push
loop
mov
mov
dec
stos
jbe
ja
subl
sub
outsb
push
outsb
pop
rep
sbb
fyl2x
pop
push
std
jbe
dec
popf
mov
push
xchg
mov
ljmp
loope
es
or
and
outsb
pop
mov
out
sahf
shll
fcmovne
and
inc
fwait
stos
shrb
jg
jae
jnp
in
mov
lock
dec
test
bound
adc
sub
out
dec
mov
adc
add
jb
xor
add
and
cld
fistps
subb
push
loopne
sub
sbb
mov
cmp
xchg
inc
in
cmp
arpl
adc
or
lock
leave
or
out
sbb
adc
push
and
cli
xchg
out
mov
pop
in
jg
ret
sub
int3
test
xchg
and
xchg
mov
cmovl
aaa
fwait
bound
in
aam
push
lods
adc
std
dec
in
jns
jo
cli
fidivl
inc
pop
cmp
push
sbb
rdtsc
pop
pop
pop
movsb
pop
movsl
adcl
outsl
stos
aad
cwtl
mov
inc
sbb
mov
lods
pop
inc
pop
mov
lods
adc
sarl
lock
pusha
lea
inc
sub
xchg
and
jne
mov
out
mov
outsb
in
ljmp
push
into
les
adc
lock
dec
ret
adc
mov
cmp
mov
mov
sahf
loopne
ljmp
fldl
pop
jnp
xchg
rcll
or
push
dec
bound
mov
cld
addl
sub
popf
outsl
cmc
repz
ds
push
and
cs
hlt
cld
add
jbe
mov
pop
jmp
xor
aaa
jb
pop
lea
jmp
call
adc
push
jne
xchg
ret
dec
push
js
pop
mov
cld
mov
nop
cld
inc
jge
out
push
fadd
jg
pop
pop
inc
lock
lcall
or
pop
mov
adc
nop
sbb
adc
jge
mov
jmp
jp
pop
cmpsl
sarb
inc
fistpl
mov
add
sub
out
or
filds
xchg
cli
iret
mov
lret
xchg
or
aam
dec
mov
mov
stos
fwait
inc
pop
sub
jns
mov
nop
xchg
aad
lret
push
iret
inc
xchg
mov
loopne
icebp
inc
lret
xor
stc
xchg
imul
sbb
add
add
jl
out
dec
xlat
sub
or
cmpl
xor
sub
repz
mov
pop
outsb
and
and
popf
xchg
es
mov
scas
fsubp
imul
add
or
push
lcall
stos
outsb
jns
repnz
jg
call
push
imul
dec
ja
call
fs
xchg
pop
negl
mov
test
jae
shlb
in
arpl
add
cmpsl
mov
pop
shlb
and
add
xchg
add
movl
jb
cwtl
add
out
sbb
add
shrl
and
ja
fadd
add
cli
mov
in
icebp
pop
out
sarl
sub
lahf
sub
test
jb
shl
xchg
add
fldl
adc
std
sbb
cltd
or
pusha
fnstcw
clc
stos
test
cmp
hlt
inc
push
pop
mov
or
and
add
add
movsl
add
ficomps
xchg
out
movsl
rolb
mov
pop
jmp
inc
bound
sbb
cmp
repnz
and
out
cmpsl
cs
in
push
cwtl
std
ret
dec
or
jecxz
mov
mov
sbb
mov
lahf
jge
mov
dec
cmp
outsb
rcll
fndisi(8087
aas
xchg
xchg
sub
xor
push
xor
ss
cmp
jp
jmp
fimull
adc
and
popf
dec
adc
nop
test
ja
mov
cmc
imul
sub
dec
jl
xchg
pop
push
jp
push
dec
repz
push
xchg
mov
test
mov
lret
loopne
jge
js
jmp
outsb
push
jp
movsb
or
xchg
shll
leave
cs
mov
xchg
mov
aad
enter
shlb
out
xchg
mov
xchg
subl
movsb
pushf
dec
adc
and
mov
cmp
cmp
std
mov
cwtl
jae
outsl
jns
sbb
sub
push
push
sub
mov
ret
sbbb
pop
dec
push
mov
adc
leave
cmpsb
push
lea
add
inc
test
or
movl
in
ja
jb
jb
mov
mulb
cli
push
pop
imul
cmpsl
lods
xchg
push
jae
pop
xchg
mov
or
xor
iret
jp
sub
or
lahf
repnz
test
dec
mov
jno
add
insl
out
sahf
xchg
xor
repz
cld
mov
add
push
pusha
lea
ret
pop
into
test
jge
lret
out
push
add
aam
arpl
andl
cmp
popa
jb
lcall
push
push
ror
cli
mov
push
xchg
sahf
mov
lds
jl
pushf
mov
push
popf
jp
sub
or
inc
into
xchg
loop
std
mov
add
dec
sbb
lock
mov
xor
int
out
sub
pop
scas
inc
inc
js
xchg
cld
or
dec
push
jno
xor
mov
pusha
add
and
sbb
jp
ss
loopne
test
lods
cmpb
xchg
sbb
getsec
xchg
xor
xchg
jmp
outsb
push
data16
pop
mov
hlt
mov
push
pop
mov
push
cmpsb
jmp
sahf
xchg
movsb
stc
xchg
push
push
inc
cs
mov
outsb
mov
into
ljmp
subl
imul
push
sub
sub
mov
jg
cmp
xlat
xor
push
loop
xchg
push
mov
dec
iret
aam
sub
std
xor
add
int
adcb
sub
inc
mov
es
lcall
enter
testb
pop
sar
ffree
xor
cmp
sbb
adc
in
push
fidivrl
adc
xor
or
lock
roll
js
mov
dec
mov
scas
sub
cmc
in
xor
in
mov
test
adc
jg
jnp
imul
lock
std
mov
test
pop
popa
stc
std
imul
mov
roll
add
shlb
sbb
loopne
enter
loope
loope
mov
jo
out
ds
rol
sub
and
jbe
cmp
out
xchg
xchg
outsl
jbe
int
push
insb
aad
pop
test
rorl
mov
lods
push
pop
add
stc
outsl
fsubr
fstpl
push
nop
jge
sbb
mov
mov
fcoms
scas
xor
lahf
int3
lods
xorb
cmp
ja
cli
sub
daa
push
push
sbb
mov
sub
mov
pop
jb
xchg
faddl
xor
ret
mov
rcl
sbb
in
push
lock
mov
inc
repnz
adc
dec
int
xchg
in
arpl
js
mov
adc
shr
dec
notl
sub
jbe
imulb
adc
dec
inc
mov
push
test
or
das
adc
lret
adc
cld
les
loope
add
adc
loop
jecxz
pop
cwtl
pop
idivl
mov
add
out
ret
cltd
pop
fidivrl
out
mov
sbb
xor
movsb
push
stos
and
pop
sub
int3
enter
pop
jp
int3
xor
mov
std
jno
push
adc
arpl
push
call
pop
mov
scas
xor
push
jg
call
xchg
mov
add
loope
xchg
in
lret
xchg
aaa
and
call
push
das
test
lods
lods
sbb
dec
xor
dec
lcall
sub
xor
and
popf
test
sbb
lret
add
divb
popf
lahf
sbb
or
imul
fildl
or
push
jg
mov
sub
insb
pop
inc
sbb
push
outsb
sub
pusha
jns
mov
sbb
outsb
push
enter
and
movsl
mov
xchg
orb
call
sub
dec
jge
dec
push
mov
mull
jge
in
daa
mov
inc
xchg
rcrl
popf
mov
icebp
fs
lahf
or
sub
sbb
mov
jbe
lret
not
pop
xchg
cmp
pop
sahf
mov
ljmp
mov
dec
lods
mov
fwait
mov
jmp
inc
je
hlt
sbb
xchg
xchg
arpl
frstor
or
aas
iret
pop
jecxz
sub
and
lret
sti
push
addr16
jg
cli
jns
cli
push
stos
jle
jbe
sti
sub
in
mov
inc
xchg
div
mov
adc
sub
clc
mov
xchg
js
clc
nop
std
and
rorl
scas
aam
cmp
xor
cltd
push
imul
push
and
pop
mov
and
or
xchg
and
xchg
xor
cmp
dec
push
xchg
mull
mov
dec
cmc
inc
cwtl
mov
dec
shlb
xor
jno
add
jmp
in
divb
nop
das
and
sub
mov
repnz
bound
mov
lcall
cmp
push
sbb
lret
shlb
ljmp
mov
lret
fcoml
bound
mov
lret
movsl
or
shrb
jg
ret
fwait
jge
xchg
std
scas
jle
fwait
sbb
repz
js
pop
lret
into
cmp
test
cmp
das
cmp
addl
jle
shlb
mov
or
pusha
fldt
push
mov
rcl
mov
out
adc
and
inc
enter
and
push
enter
imul
outsb
pushf
lret
and
xor
fiadds
push
jns
sub
push
mov
pop
jmp
cli
mov
das
xor
pop
sub
cmp
test
clc
dec
cmp
sub
loop
fmulp
dec
daa
nop
cwtl
andb
jg
mov
imul
jmp
pop
shlb
add
pop
xor
sbb
les
sub
inc
fwait
xorb
mov
fnstcw
xorl
mov
xor
adc
push
cld
sti
mov
loopne
jbe
adc
sub
or
daa
and
dec
jp
mov
jb
movsb
inc
enter
out
ljmp
sub
jg
sbb
add
mov
addb
xchg
xor
pop
popa
fstpl
ljmp
or
test
jge
sarb
ret
pop
push
mov
pop
cmc
mov
xlat
lea
lods
ss
cli
lcall
outsb
adc
int3
cld
fadd
and
dec
scas
jmp
pop
jb
push
into
outsl
gs
iret
xor
inc
js
lret
jge
pop
outsl
imul
mov
add
repz
push
loop
mov
ss
out
sub
jno
test
xor
icebp
fists
xchg
fwait
push
jl
hlt
fdivrl
pop
popa
dec
movsb
test
stos
pop
aam
cmpsb
dec
in
dec
sti
lds
dec
nop
lret
mov
ficoms
lds
iret
hlt
mov
push
and
push
pop
fistl
cld
stc
sbb
cli
test
sar
cli
and
xor
stc
xchg
lock
ljmp
pop
xchg
stos
mov
adc
test
jmp
xchg
dec
js
pop
popf
or
pop
int3
imul
js
push
push
adc
xor
test
sub
outsb
and
mull
pop
bound
lock
mov
xor
mov
xchg
ja
gs
test
mov
xor
lock
stos
test
mov
lods
and
fucomip
in
and
sbb
inc
adc
repnz
push
sbb
pop
sbb
addr16
loop
adc
icebp
sub
add
cmp
in
push
mov
sbb
adc
lahf
aam
adc
in
imul
lds
mov
lcall
push
in
loop
lds
movsb
test
add
xlat
jae
xor
sahf
add
popa
mov
pop
insb
xchg
ljmp
shlb
lahf
je
loop
jmp
jl
add
jge
ljmp
ret
fwait
inc
movsl
shl
cmp
pusha
mov
fcoml
pop
push
adc
adc
cmpsb
enter
sbb
jg
mov
mov
test
mov
repnz
jg
sarl
test
xor
in
sub
jg
stos
xchg
aaa
mov
outsl
pop
sub
and
sbb
sbb
inc
push
out
das
stc
push
aam
mov
aam
add
mov
inc
cs
cmpsb
sbb
fbld
scas
sbb
dec
pop
out
outsb
adc
pushf
jmp
out
popa
pop
xchg
mov
idivl
div
dec
push
ret
inc
and
icebp
jo
adc
int
test
mov
hlt
fisttpl
gs
xor
js
pop
mov
add
lret
add
mov
xor
inc
sbbb
xchg
push
lret
addb
stc
mov
insl
add
aad
cmpsl
cwtl
nop
loopne
das
outsb
pop
xchg
xchg
fwait
inc
cmp
lods
sub
inc
jae
inc
cmp
pop
jle
xchg
call
icebp
jg
sahf
pop
pop
dec
mov
xchg
push
out
cmpsl
adc
xchg
xor
mov
mov
jl
aaa
sbb
pop
out
pop
lea
jle
jmp
aas
jns
add
call
pop
in
je
sbb
inc
cli
jp
inc
push
outsb
sbb
dec
pop
adc
mov
xor
fcmovne
sbb
into
test
adc
push
and
in
jle
mov
mov
rcrb
add
notb
jmp
andb
movsb
lock
or
mov
adc
je
testl
stc
or
jecxz
movsl
and
cli
xchg
jnp
mov
and
ds
sbb
sub
cmp
jno
aad
mov
imul
mov
insl
inc
dec
call
outsb
cs
ljmp
mov
iret
add
scas
test
sarb
xor
jmp
adc
inc
jbe
xor
xor
xlat
dec
adc
jns
mov
mov
add
pop
xchg
iret
and
xlat
test
add
cmp
xor
cmp
loope
xor
cltd
stos
pop
push
repz
fs
push
jmp
mov
shlb
dec
pushf
push
cld
decb
xor
or
inc
push
int3
addr16
das
inc
pop
xor
dec
fs
insb
jo
cmpb
and
popa
pop
xchg
adc
das
loopne
and
inc
xchg
shrb
imul
loop
ja
and
shlb
cmc
xor
add
nop
call
rclb
ret
push
outsb
mov
dec
jg
scas
out
mov
test
mov
mov
movsb
notb
push
and
testb
pop
push
cmp
sub
pop
jmp
ror
mov
lds
jne
sbb
out
inc
mov
adc
push
in
mov
inc
pop
push
jno
aam
sub
ret
mov
testb
sbbl
jne
inc
xchg
inc
mov
sbb
add
adc
jle
mov
fmuls
or
dec
dec
cmpsb
leave
je
lcall
adc
lcall
cmpsl
rcr
xchg
je
sub
imul
adc
xor
or
push
pop
sti
fcomps
cmc
dec
adc
push
fbstp
mov
cmp
sbb
jle
sbb
subb
enter
nop
cltd
out
add
scas
add
jmp
sar
cli
ja
pop
sti
dec
insb
cmp
dec
lea
push
out
push
lods
mov
mov
mov
sub
cmp
inc
aas
jp
mov
jmp
rorb
mov
sub
enter
faddl
pop
adc
mov
xchg
ja
mov
ret
movsb
and
jl
inc
rolb
mov
data16
scas
mov
push
mov
test
lock
popf
dec
push
xchg
pop
sub
out
mov
adc
fstl
filds
jne
pop
mov
cmp
dec
inc
cmp
popa
sahf
mov
pop
ret
dec
xor
xor
stos
subl
out
ret
out
aaa
inc
arpl
push
jge
xor
es
jne
pusha
imul
inc
daa
lods
dec
adc
cld
fsubr
sbb
mov
loopne
pop
pop
push
outsl
lret
lods
inc
movsb
aas
scas
jmp
or
adc
adc
jns
cmp
std
popa
push
mov
or
xor
fcomps
add
jb
pop
lods
inc
mov
dec
xchg
mov
xor
dec
cmp
or
or
inc
rolb
cmp
movsl
jle
sub
enter
jg
pop
scas
hlt
orb
push
sub
mov
push
sbb
xchg
add
sub
pushf
out
jo
jecxz
out
or
and
push
push
mov
popf
les
sbb
jae
mov
dec
push
sbb
lea
fcoms
jae
rcr
dec
sti
xor
push
and
jp
lods
enter
push
stc
outsl
fs
psrlw
pop
mov
and
or
cltd
mov
mov
xchg
int3
mov
lea
jmp
mov
pop
push
sbb
inc
jg
add
mov
cs
jecxz
ret
and
push
test
xchg
push
lahf
hlt
into
pop
dec
inc
xor
roll
rcl
push
or
adc
push
cmp
dec
mov
push
cs
ja
cmp
mov
xorl
xor
dec
push
imul
scas
mov
insl
rolb
mov
xor
popf
xchg
je
bound
push
stos
cmp
fwait
lcall
lock
rorl
mov
loopne
cmpb
inc
sub
incl
hlt
fcoms
dec
movsb
pushf
jns
xor
or
outsl
push
movl
mull
fld
insb
data16
loopne
xor
lahf
jg
scas
push
popa
and
xchg
imul
pop
and
mov
add
nop
mov
sbb
jns
movsl
push
lock
cmc
lods
fisttpll
in
and
push
and
mov
std
into
cmp
test
ret
and
push
outsb
ret
jl
and
mov
dec
and
int3
xor
mov
fsubl
sub
imul
sbbb
test
cmpsb
cmc
jmp
add
dec
shrb
loope
leave
or
or
imul
in
mov
xchg
iret
in
sti
dec
or
pop
lahf
mov
push
icebp
mov
pop
adc
sbb
xchg
loop
cmp
cmp
aaa
lret
sub
test
cltd
sbb
jns
sub
sbb
jo
inc
jne
aad
mov
mov
push
pop
jnp
mov
outsb
cwtl
rorl
ror
push
cmpsb
jb
inc
mov
sub
jle
push
jg
or
int3
filds
ds
sub
ds
aam
dec
sahf
jp
test
in
adc
pop
jmp
aaa
add
xor
push
xchg
and
rclb
ljmp
adc
scas
xchg
xchg
out
pop
insb
dec
shlb
pop
test
mov
mov
aaa
and
data16
call
xchg
rorb
adc
sahf
and
aam
mov
insl
xchg
xchg
push
inc
xor
ficoml
out
leave
daa
push
fwait
lock
cmp
sbb
ss
mov
push
or
jmp
pop
sbb
aas
jnp
pushf
adc
mov
push
popf
das
dec
xor
or
cmp
inc
cmp
je
xlat
inc
or
inc
aam
rcrb
xchg
cmpsl
insb
rcrb
loope
mov
ret
push
fistl
xchg
mov
xchg
xchg
push
int
or
push
iret
ljmp
dec
jns
pop
push
push
pusha
and
inc
lret
push
inc
shr
jns
inc
gs
sbb
std
jmp
stos
jo
cmp
sbbb
pop
xor
shll
xchg
sub
popa
test
mov
lea
shll
mov
mov
cmp
pop
jge
push
repnz
arpl
mov
dec
pop
mov
in
add
mov
outsb
fisubl
stc
pop
inc
ss
loopne
repz
fsubl
lock
inc
push
outsb
imul
add
pop
lret
test
pop
loope
clc
xchg
cmpsb
std
xor
bound
test
sub
inc
xchg
jmp
stos
inc
lea
mov
inc
data16
mov
xchg
jbe
xor
sub
mov
cmpsb
cltd
sub
and
mov
lea
cli
mov
xchg
xor
jg
loopne
mov
andl
shll
dec
out
ret
pop
adc
gs
rep
scas
adc
icebp
es
mov
int3
or
loope
fisubrs
sub
clc
inc
adc
cmp
pop
neg
jbe
dec
mov
push
mov
mov
xchg
lcall
add
dec
lods
xchg
mov
fs
or
add
xlat
loope
and
jno
push
pop
movsl
lods
repz
sub
sub
insb
mov
aam
mov
sarb
hlt
call
cmpsl
lea
dec
inc
push
or
in
mov
mov
push
adc
mov
xlat
insl
xor
cmpsl
mov
jmp
xchg
adc
in
or
jmp
adc
jb
mov
ret
dec
mov
and
push
das
xor
ret
lea
sub
rcll
pop
out
mov
or
nop
int
sbb
jns
test
mov
mov
cld
xlat
mov
movsl
out
mov
js
xor
cmpsl
roll
out
stc
cmp
add
cmpsb
jo
push
xchg
or
int
jge
loopne
test
dec
daa
lock
push
loope
sti
out
andl
test
push
and
popf
jb
mov
mov
jnp
mov
cmp
xchg
mov
or
in
sbb
aad
and
lahf
push
cs
xorb
fidivl
and
daa
pop
xor
mov
inc
punpckhbw
dec
push
out
cmp
ret
mov
scas
or
xlat
or
cmpl
into
inc
clc
in
jg
popa
mov
out
loope
or
rorl
mov
test
ljmp
jne
or
ret
mov
jecxz
mov
out
stc
std
insl
inc
jecxz
test
into
dec
movsl
jbe
sbb
add
or
mov
jle
shl
enter
in
mov
das
in
cli
and
jmp
cli
adc
testl
loopne
and
ss
shl
jmp
push
adc
cmp
mov
adc
push
sub
mov
adc
mov
push
call
mov
fildl
addl
out
dec
xchg
or
xor
jns
xchg
adc
push
inc
pop
dec
mov
outsb
jmp
addr16
pop
xor
sub
xchg
sahf
movsl
dec
test
shlb
jl
adc
addr16
mov
add
popf
cmp
xchg
jae
push
into
xchg
lcall
cltd
mov
arpl
loopne
out
mov
dec
inc
pop
inc
mov
pop
dec
cli
out
aam
jmp
dec
mov
push
pusha
or
test
andl
fldcw
sub
sub
mov
nop
xchg
sete
enter
xchg
add
stc
mov
xchg
lret
call
mov
dec
jnp
cmp
xchg
fsts
xor
insb
iret
push
sbb
cmp
scas
mov
jne
hlt
pop
jge
jne
xor
pop
jle
cmp
adc
negl
int
cmc
add
xchg
xor
addr16
roll
push
fldl
mov
sub
xor
push
test
clc
xor
fistl
enter
add
popl
cmp
mov
jecxz
add
in
arpl
push
mov
push
adc
mov
add
outsb
dec
cmp
pop
adc
adc
cld
sub
mov
lcall
sbb
sub
pop
popa
test
mov
inc
pop
jbe
cmpl
mov
jnp
jle
lret
imull
lds
mov
pop
jo
cmp
cmpsl
mov
adc
pop
movsb
inc
outsb
insb
out
inc
or
jp
sbb
js
inc
push
push
sub
sub
adc
pushf
out
lret
mov
hlt
fadds
sub
mov
sub
les
and
dec
xchg
pop
ss
xor
jmp
das
fdivrs
mov
push
addr16
test
pop
pop
mov
loopne
movsb
call
inc
dec
mov
xor
pop
lret
and
mov
mov
int
mov
cmp
fcomi
lds
mov
dec
pop
pop
sahf
iret
jp
cmp
lret
pop
push
sbb
int3
lret
shll
ja
sarb
sahf
mov
mov
das
dec
sbb
mov
in
test
clc
xor
rcrb
ret
push
add
fisubrs
jp
fptan
rcr
xorb
and
addl
test
push
aad
push
inc
sbb
sbb
pushf
xor
xor
inc
add
adc
and
cld
ficomps
pop
jge
add
cmc
mov
lret
adc
cmpsb
dec
movsb
xchg
sbb
mov
mov
aam
push
xchg
enter
jmp
xor
neg
jb
ja
lcall
mov
js
test
stos
lret
jae
mov
xchg
inc
movl
or
mov
jnp
mov
cmp
push
mov
in
mov
std
dec
jne
sbb
pop
fnsave
mov
jp
xchg
jo
mov
jp
sbb
jmp
push
fsubs
mov
push
cmp
cld
mov
xor
push
pushf
nop
mov
stos
aas
cmp
jne
mov
cmp
push
push
adc
sub
ret
movsb
xor
sti
and
repnz
repz
dec
push
nop
push
in
outsl
aaa
cmp
lock
mov
dec
or
aaa
or
lods
inc
mov
iret
jmp
add
stos
filds
or
aaa
insl
cmpsl
loopne
cmp
dec
adc
xor
fsubs
test
pushaw
sbb
imul
push
repnz
hlt
lcall
sub
push
and
push
pop
popa
cmc
das
mov
imull
test
dec
sbb
inc
push
adc
push
rolb
push
fucom
outsl
fwait
addr16
ret
les
inc
ljmp
push
cmpl
sub
pop
stc
cmpb
or
jp
inc
pop
orb
pop
inc
lods
dec
mov
inc
push
fucom
out
clc
andl
mov
jecxz
fidivrs
dec
out
xchg
dec
pop
pop
inc
pop
clc
out
adcb
cmp
lahf
add
arpl
mov
push
adc
fisubrl
cmpsb
dec
mov
std
sub
xor
mov
sbb
push
addr16
adc
or
jp
sti
inc
xor
sub
insl
cs
pop
cmp
mov
jge
negb
push
int3
adc
in
insb
cld
add
jne
xchg
mov
dec
out
cmc
sub
std
mov
arpl
loopne
mov
jb
fildl
or
int
ficomps
popl
mov
jl
sub
cmp
mov
leave
ja
dec
jno
pop
cmp
ficomps
mov
fnsave
into
or
push
cmp
fstpt
lds
movsl
pop
and
pop
dec
int3
and
mov
jbe
cltd
and
das
mov
fwait
pop
pop
ret
pop
movsl
cmpsl
jg
outsl
mov
int3
add
test
imul
gs
ja
jb
insl
lret
sbb
sbb
and
sbb
rorl
push
xor
int3
sub
sar
push
insl
out
mov
aaa
lahf
mov
mov
sahf
nop
add
out
in
inc
adc
jns
sub
icebp
icebp
test
les
xor
dec
jge
mov
mov
pushf
lea
and
mov
insl
icebp
jnp
or
push
dec
loope
or
xorb
sbb
nop
fstl
add
dec
out
das
mov
pop
scas
scas
xchg
mov
ret
add
sbb
push
inc
inc
repz
sbb
xchg
mov
push
adc
fnstsw
xor
inc
push
and
xor
cltd
es
inc
bound
sti
sbb
enter
push
leave
aaa
xor
add
ret
push
pop
std
les
jge
pop
push
dec
xor
dec
sub
sub
testl
pop
lret
sbb
cmc
movsb
ret
in
mov
adc
fs
inc
inc
lods
jl
std
sub
mov
cs
in
stos
mov
daa
add
dec
cmp
cmp
mov
xchg
nop
hlt
or
mov
in
mov
out
and
je
cltd
lods
cmp
lods
in
or
stos
lods
mov
icebp
xor
jb
das
cmp
pop
gs
mov
andb
mov
xchg
and
dec
mov
or
jle
dec
addr16
mul
test
push
xchg
jns
shlb
cmp
inc
push
xchg
test
popa
cltd
je
stc
and
jnp
test
cwtl
pop
jb
inc
mov
sub
cmp
pop
repnz
add
cmpsl
cmp
rorl
mov
mov
add
mov
sbb
mov
in
lahf
shll
loopne
fwait
and
fcmovu
outsb
adc
jmp
sub
mov
push
mov
mov
push
scas
lods
mov
or
test
add
mov
sbb
sbb
jns
lret
xor
fmuls
jbe
movb
xchg
push
in
push
mov
or
dec
ss
gs
loopne
sbb
scas
mov
inc
mov
repnz
repz
pop
scas
orb
stos
fmulp
outsl
test
bound
loop
inc
ret
rolb
xor
and
bound
out
inc
lret
inc
outsl
push
aaa
sbb
sub
and
aas
adc
jp
mov
adc
aam
sbb
hlt
inc
movsl
jb
adc
xchg
xchg
sub
roll
in
or
xchg
fisubrl
mov
leave
call
das
out
or
in
neg
xchg
fcomps
dec
hlt
jne
xchg
shlb
out
ds
xchg
mov
arpl
into
pop
ljmp
mov
fcoms
and
dec
xorl
sbb
and
mov
cli
xchg
iret
jbe
xor
lods
pop
ficoms
mov
cwtl
lret
scas
inc
dec
inc
sub
es
js
insl
jne
push
in
mov
lahf
add
imul
jae
iret
jne
out
add
xor
push
sarl
in
or
mov
mov
imull
pop
sbb
loop
dec
push
jno
jb
loopne
mov
sub
or
cmp
mov
inc
test
adc
sbb
leave
fs
sbb
imul
addb
call
clc
or
fisttpl
xchg
and
stos
mov
sbbl
xchg
dec
lods
fcomip
out
jne
les
lcall
xlat
flds
hlt
sbb
fs
xchg
adc
mov
push
cli
call
lds
and
and
adc
pusha
sub
xor
sbb
pop
xchg
rcll
sub
scas
or
sub
adc
lahf
cmp
fdiv
mov
xchg
fisttps
rcrl
out
rcrl
mov
hlt
aam
shlb
sbb
sub
adc
pop
lods
and
and
lods
inc
mov
and
fld
roll
mov
jmp
insl
push
int3
enter
cmp
out
push
lret
mov
sub
cmpsb
cmp
fldcw
inc
test
loop
fdiv
pusha
xchg
shlb
into
enter
jp
rolb
jecxz
lods
ds
sbb
xor
mov
idivl
push
cmpsl
xlat
inc
in
out
sti
or
inc
cmpsl
ds
cli
es
pslld
sar
rcr
push
bound
inc
lods
jbe
jne
lret
sbb
mov
or
adc
pop
inc
pushf
mov
dec
imul
or
ffree
sub
jnp
mov
negl
push
push
out
and
jecxz
dec
push
mov
xorb
xchg
std
loopne
out
mov
repnz
jmp
daa
ds
jmp
add
sub
lcall
mov
xor
inc
add
ret
int3
repz
and
or
mov
repnz
pop
push
inc
push
jno
out
adc
cmpsb
retw
or
cmp
mov
mov
int
dec
push
jp
mov
dec
push
idivl
xor
lcall
mov
imull
pop
std
dec
fmul
mov
clc
test
sub
pop
push
mov
jmp
cltd
in
cmp
mov
pop
cmp
inc
hlt
sbb
out
inc
rcrb
pop
std
sbb
mov
in
jl
xchg
mov
adcl
js
pop
sbb
push
cmp
in
imul
sbb
int3
nop
test
dec
mov
imul
xor
cmpsb
je
xchg
mov
lahf
inc
push
nop
and
xor
rclb
push
pop
sub
ds
mull
jmp
adc
cwtl
in
push
data16
out
gs
and
scas
xor
sbb
fnstsw
pusha
ja
pusha
std
or
lock
mov
mov
or
int3
adc
push
push
lahf
in
jae
iret
sahf
xor
ret
lods
pop
inc
aad
ror
mov
xor
adc
push
ja
pop
cmp
mov
adc
sarb
lock
int3
cmpsb
sub
ljmp
mov
adc
fcmovu
leave
insb
mov
lods
ret
sub
dec
rol
test
popa
mov
or
inc
jbe
mov
mov
rcr
xlat
mov
jmp
cli
lret
movsl
jne
adc
aad
das
mov
push
iret
or
fiadds
xchg
lcall
insb
jno
mov
mov
cmp
lahf
ja
in
lock
add
pop
pushf
mov
repz
mov
add
popa
add
sub
push
gs
movsb
test
repnz
ret
in
fs
and
in
sub
xlat
cmp
mov
xchg
push
in
call
lcall
and
cmpsb
add
test
mov
jle
stos
pop
adc
test
fldt
sbb
pop
sub
mov
mov
pop
lock
cmp
mov
int3
negl
lods
cmp
cltd
aam
aad
mov
es
inc
dec
sbb
stos
or
mov
xchg
les
push
sub
sub
jp
and
mov
sub
push
jbe
mov
pop
inc
pop
pushf
sub
or
orl
cmpsb
mov
stos
cmpps
inc
gs
mov
sarl
cmpsl
xchg
addr16
lock
ret
pop
xchg
sub
cld
mov
es
lahf
mov
jne
dec
cmc
iret
sbbb
xchg
popa
aam
jbe
test
pop
aaa
in
jne
mov
xchg
in
gs
or
int
adc
push
ljmp
sub
ret
push
mov
pop
rol
fimuls
cmp
cli
mov
fnstenv
push
add
ret
mov
adc
lahf
push
dec
sub
ljmp
in
push
mov
mov
mov
xor
int3
or
push
ds
jns
iret
sub
cmp
stos
xchg
xchg
shlb
rclb
test
add
repz
cmp
add
mov
mov
and
repz
stos
dec
push
addl
jno
shlb
add
adc
icebp
sub
add
cmp
lods
xor
mov
sbb
aam
outsb
call
cmpsb
mov
sub
in
sarb
fstpt
mov
pop
aam
inc
pop
jg
mov
enter
jle
je
outsl
and
sub
mov
mov
ss
jl
push
lods
jge
in
mov
out
lcall
cmpsb
or
xchg
mov
fsts
push
push
ret
mov
adc
cmp
mov
std
rcrl
or
adc
mov
insl
rol
xchg
test
and
push
es
call
push
adc
daa
push
or
pop
aas
cltd
cli
lahf
shrb
test
cltd
cmp
in
jns
sbbb
add
sub
icebp
lea
mul
cltd
add
sbb
dec
xchg
clc
dec
xor
fmull
fcoml
bound
or
or
cs
lcall
int3
adc
inc
sbb
ret
adc
fdecstp
cld
mov
movsb
inc
xchg
cmp
sbb
in
cmpsl
out
pop
lret
inc
pushf
and
mov
adcl
lock
xchg
aaa
or
or
mov
pop
push
lret
jg
and
xchg
add
test
jae
mov
mov
inc
and
push
loop
inc
out
cmc
add
inc
shrl
loopne
pop
jge
in
test
sub
ror
jge
jne
add
push
push
sbb
shr
dec
mov
fstl
cmp
dec
cmp
xchg
stos
cmc
lahf
int3
stc
jo
mov
pop
pop
sbb
insb
mov
cwtl
cmp
mov
adc
stc
outsb
into
iret
je
mov
int3
mov
push
inc
cmpsb
into
ja
sub
dec
xchg
outsl
or
sbb
insb
fcmovnu
stos
and
jecxz
jne
outsb
movsl
push
inc
inc
push
popf
es
jns
ss
mov
sub
mov
roll
roll
push
in
lret
xchg
fidivrl
addb
popf
sbb
aaa
mov
xchg
fsts
push
sarl
push
pop
stos
push
aam
je
and
and
xor
test
frstor
push
in
pop
imul
repnz
inc
push
mov
pop
adc
mov
lock
loopne
push
in
sub
int3
data16
jns
xor
sbb
jmp
fwait
sub
movb
cmp
sar
dec
push
adc
add
popa
adc
mov
into
mov
jecxz
int
jmp
mov
pushf
jne
js
popa
push
inc
fucom
add
ds
jo
sub
cmc
in
xor
cwtl
pop
adc
lods
cmpl
xchg
test
test
sbb
fdivrl
sub
insl
mov
xchg
pop
cmp
std
repz
sub
inc
mov
pop
jp
inc
fwait
fs
dec
adc
inc
push
andb
sarl
xor
pop
adc
arpl
insl
int
mov
pop
add
ficompl
stc
pop
flds
xor
mov
inc
out
sbb
aas
pop
xchg
rep
xor
mov
sbb
fidivl
adc
imul
add
adcl
je
xor
inc
lods
add
cmovne
popa
cmp
rorb
xchg
xor
shlb
jg
mov
ljmp
push
add
add
cwtl
fisubl
xchg
ljmp
push
add
lret
jb
fistpll
cs
or
ljmp
jmp
xchg
sub
test
xor
sub
adc
sub
pop
xchg
mov
add
cmc
mov
movsl
dec
or
stos
es
xchg
sub
aad
push
aad
sub
out
insl
fwait
mov
int
xchg
ss
push
pop
insb
push
int3
imul
add
int3
jb
jo
popa
and
popf
hlt
push
imul
popf
sbb
test
xchg
out
testl
sar
xchg
inc
addr16
stos
ret
and
ss
sub
repnz
fstpt
int
sub
in
dec
lds
arpl
sub
push
or
push
gs
fsubr
mov
mov
jns
pop
inc
inc
rol
imul
cmp
xchg
test
fnstenv
and
subb
sub
ja
adc
leave
add
insb
stc
and
pop
cs
sub
adcb
cmp
outsl
or
and
loopne
mov
inc
fwait
jb
push
inc
in
testb
pop
call
ja
push
push
xlat
jge
jp
add
cmp
sub
and
repz
inc
sahf
das
or
sbb
mov
loopne
ljmp
add
push
pop
and
loopne
inc
mov
and
sti
push
aad
js
daa
cmp
cld
push
lea
mov
mov
into
int3
in
out
dec
ds
xor
int
ljmp
in
mov
enter
shr
mov
jbe
arpl
or
sbb
pushf
daa
add
mov
mov
das
mov
enter
mov
jecxz
xchg
rorb
aaa
mov
push
push
ffreep
cmp
lods
dec
xor
mov
jne,pn
fbld
pop
enter
or
ret
push
add
fwait
cmpsl
xchg
xchg
loopne
xchg
add
mov
push
int3
push
rclb
dec
and
in
cltd
cmp
in
mov
pop
mov
dec
mov
cmpsb
cwtl
cmc
jle
xor
mov
or
jmp
scas
push
sbb
test
jb
rol
jae
or
cmp
daa
push
adc
test
outsb
stos
push
lret
push
aam
ja
int3
xchg
addr16
jb
xchg
fcoml
aad
insl
push
fcoml
shr
scas
lahf
loopne
add
aad
pop
insl
pop
or
xorb
rolb
fcoms
mov
pop
cld
xchg
pop
ljmp
fbstp
mov
leave
push
pop
push
aaa
and
jnp
inc
popf
iret
xor
int
sbb
mov
push
cltd
sbb
add
or
int3
xchg
loope
mov
insl
out
jb
cld
jmp
lret
sbb
push
es
sbb
ret
and
xlat
imul
enter
arpl
mov
or
sub
popf
pop
sbb
out
push
push
popa
es
pop
loopne
jmp
mov
stc
xor
adc
outsl
jmp
push
xor
pushf
icebp
xchg
push
jp
dec
scas
sti
mov
cmp
xor
loope
mov
pop
cs
je
bound
pop
or
nop
ret
inc
inc
xchg
mov
adc
and
xor
je
xchg
push
mov
fbstp
hlt
mov
jmp
iret
jb
shlb
test
adc
pop
aas
das
mov
inc
fildl
daa
xchg
cmp
cmp
xchg
mov
negl
lds
ret
mov
jmp
jge
sti
ja
mov
fsub
aas
sub
imul
adc
xchg
and
fildll
jns
bound
push
cwtl
mov
hlt
filds
pop
lds
jmp
sbb
or
dec
sub
cmp
push
add
jmp
bound
sti
cmp
push
xchg
add
mov
push
or
outsb
mov
insb
dec
les
pop
loope
add
sub
adc
dec
mov
scas
add
push
inc
das
ss
jmp
inc
popa
mov
xor
jg
bound
mov
mov
mov
lcall
ret
add
cltd
stos
jno
ds
enter
mov
imulb
call
ret
mov
sahf
out
dec
pusha
jg
adc
mov
jle
dec
and
in
scas
pop
inc
jo
mov
aas
cmp
sub
dec
popa
insb
adcb
out
sahf
pop
cmp
cmpsl
inc
mov
hlt
test
adcb
mov
mov
insb
xchg
lods
mov
xor
fsin
push
xchg
xor
addl
cmpsl
add
push
push
mov
dec
xor
pop
cmpsb
jl
inc
xor
xor
mov
repnz
xor
lcall
fsub
mov
mov
jl
cmpsl
scas
pop
aas
mov
nop
into
loop
mov
daa
xlat
lea
scas
push
cmp
shll
mov
mov
push
xchg
cmp
xchg
jns
sbb
pop
popf
inc
mov
dec
pandn
jle
cltd
adc
push
insb
sub
rcrb
sarb
arpl
dec
stos
cmpsb
ds
lods
push
loope
jb
sti
adc
mov
jecxz
xchg
jg
adc
add
cmp
movsl
sbb
leave
mov
or
jns
jmp
popa
dec
cmp
pop
cld
data16
mov
mov
test
cmp
insb
dec
lea
mov
jle
arpl
out
xor
pop
cwtl
mov
push
ret
jno
xor
push
mov
mov
in
adc
fs
sbb
mov
fwait
arpl
or
das
sbb
xor
jg
push
dec
lcall
push
lds
jae
sub
int3
pop
mov
or
stos
in
sub
into
shll
cmc
les
inc
lds
fsubr
pop
cmpsb
pop
jnp
inc
jecxz
mov
or
and
aaa
dec
hlt
shlb
into
fidivs
pop
cs
out
movsl
mov
rolb
inc
out
js
sbb
sub
pop
pop
sbb
sbb
pop
nop
ret
jno
sub
pop
xor
arpl
jg
out
sahf
mov
clc
lret
mov
inc
adc
ja
stos
repz
jp
shlb
cmp
dec
lret
nop
pop
dec
cmp
sarb
jle
rcrl
sahf
cmp
mov
mov
xchg
mov
cltd
adc
xchg
es
mov
xchg
stos
aam
lea
mov
test
dec
inc
mov
and
sahf
add
or
fwait
inc
mov
dec
repnz
psrld
sbbb
in
xchg
aam
iret
js
imul
dec
cmc
sbb
arpl
sti
push
cmpsb
mov
xchg
mov
push
outsl
cmc
adc
push
sbb
test
mov
jns
imul
cld
jne
adc
push
lds
sub
push
fsubl
sahf
push
lock
in
cmp
popf
test
loop
jno
clc
push
cmc
mov
adc
stc
cli
lret
mov
in
add
pop
cmpsb
add
fnsetpm(287
mov
adc
adc
movsl
out
mov
in
sti
mov
in
dec
ljmp
dec
cmp
aam
dec
mov
ljmp
xchg
jnp
push
pushf
fs
push
jbe
add
adc
int
stc
inc
imul
and
fldt
mov
cltd
dec
nop
or
push
jge
loope
dec
scas
sub
dec
and
mov
adc
adc
add
aam
test
movsl
pminub
fiadds
outsl
and
push
pop
adc
adc
dec
jecxz
sbb
add
dec
dec
pop
push
mov
pusha
out
out
jmp
mov
rorl
mov
out
daa
cmp
das
fwait
sub
leave
xchg
je
scas
add
shr
mov
sub
insb
orb
cmp
push
mov
mov
insl
push
inc
mov
mov
dec
cs
or
cmpsb
push
mov
mov
push
jbe
push
inc
mul
movsb
les
data16
mov
jl
fwait
and
xor
pop
insb
cmp
lret
jne
outsb
jne
xor
adc
mov
shll
arpl
xor
out
mov
pop
pmaxub
in
movsb
adc
decb
out
gs
dec
cmp
mov
jmp
mov
dec
leave
mov
push
fwait
mov
mov
adc
rcrb
ret
xchg
data16
mov
dec
lret
cmp
je
push
ret
jbe
sbb
das
mov
cmp
in
mul
push
xchg
sbb
or
mov
add
mov
xchg
xchg
mov
and
xchg
mov
xlat
gs
mov
imul
cmp
push
ret
mov
pop
or
or
ljmp
or
inc
fstpl
jae
jno
mov
mov
dec
pop
or
mov
add
sbb
lret
jbe
xchg
in
jmp
mov
out
mov
dec
xor
dec
mov
adc
adc
inc
cmp
mov
fwait
roll
sub
or
rcll
enter
out
out
mov
stos
js
cmp
pop
sarb
sub
sub
and
aam
test
ja
icebp
adc
fs
add
push
rcll
or
shrb
outsb
mov
cmc
loopne
mov
push
xchg
daa
arpl
pop
mov
push
push
insb
repz
push
fnstenv
in
sbb
fstp
sbb
push
addb
sti
cld
into
inc
stos
sbb
mull
addr16
pop
daa
add
repz
pop
and
add
loop
mov
fs
inc
in
push
xor
inc
adc
mov
test
lods
mov
aas
enter
push
pop
inc
or
xor
mov
mov
sub
and
shlb
or
xor
out
adc
popf
test
or
leave
fistps
dec
icebp
imul
js
xor
mov
loopne
pop
mov
cltd
mov
xor
mov
adc
incb
dec
dec
jb
mov
lock
pop
hlt
and
xor
popw
mov
add
jbe
sub
adc
scas
insb
adc
decl
xchg
inc
adc
dec
mov
fildl
push
pop
add
jl
aas
push
or
inc
dec
shll
mov
rorl
fistpl
sbbl
push
jbe
xorl
push
lret
mov
pop
loope
popa
lock
fmuls
sub
loope
in
pop
mov
stc
enter
bound
popa
xchg
rol
ficoml
loopne
in
int3
pusha
inc
hlt
pop
mov
lahf
mov
mov
ret
or
lcall
movsl
jnp
subl
lods
lods
or
lret
sbb
mov
mov
scas
sahf
imul
jnp
cmpsl
mov
or
jb
fcompl
push
test
sti
xchg
inc
dec
jle
sbb
inc
xchg
stos
pop
dec
outsl
add
scas
xchg
dec
not
jne
lods
sbbb
in
xchg
in
mov
sbb
push
popa
add
daa
decb
jge
mov
into
sti
rorl
inc
dec
popf
sbb
cmp
push
sarl
leave
addr16
mov
adc
sbb
outsl
dec
test
pop
push
adc
pushf
push
loopne
dec
mov
hlt
mov
inc
jl
jns
repnz
cld
lea
inc
test
rcl
lock
inc
repz
andb
mov
mov
in
lahf
or
test
jp
nop
mov
push
jl
add
fldenv
fcompl
popl
add
and
mov
add
das
lods
aaa
fs
lcall
ss
sahf
daa
push
inc
xchg
mov
or
fucomi
inc
pushf
roll
ret
outsb
cmpl
mov
adc
or
cmp
test
and
push
mov
pop
movsb
lods
nop
lahf
ret
test
ret
jne
rorl
cmp
add
jmp
shll
mov
xlat
jmp
mov
mov
imul
and
jo
fstpt
sub
mov
mov
lea
jbe
xor
mov
inc
or
test
cmp
cmp
gs
add
dec
shrl
pop
adc
sbb
fwait
add
movsl
push
addb
lea
int3
clc
out
mov
sbb
jecxz
int3
mov
out
pushf
push
add
pop
test
lods
xorl
cmp
movsb
sbb
fs
pop
pusha
push
inc
jp
imul
or
sbb
inc
push
rcrl
adc
cmp
adc
jb
fadd
aas
jnp
outsb
subl
jge
lock
lahf
pushf
cmp
dec
cmc
cmp
popf
test
lret
push
aam
arpl
jne
mov
jecxz
and
add
imulb
add
jns
mov
add
lret
xlat
or
pop
pushf
dec
mov
call
rdtsc
push
enter
sti
pop
out
sti
cmpsl
pushf
pop
mov
adc
loopne
ds
sbb
mov
push
cwtl
cmpsl
test
jl
push
gs
mov
jbe
mov
or
xor
add
mov
cld
jg
std
mov
popf
mov
ss
rorl
xchg
and
pop
pop
int3
shll
dec
loope
mov
push
xor
or
rcrl
insb
loop
lock
movsl
or
fmull
mov
mov
iret
jnp
rol
cmp
jne
mov
add
mov
or
jecxz
xchg
sub
pusha
cld
insl
leave
mov
ret
xchg
cmp
xchg
shll
mov
cmp
mov
test
cmp
imul
xor
mov
es
pusha
or
call
in
js
xchg
cmp
jle
cltd
bound
sbb
call
add
push
test
push
inc
xchg
jmp
daa
pop
lea
add
mov
xor
sbb
stos
mov
mov
adc
nop
pushf
or
loopne
ficoms
ss
pop
arpl
in
mov
fimull
sbb
and
outsl
push
pop
fs
adc
push
sbb
jmp
data16
jge
add
mov
adc
pop
ljmp
data16
addb
or
cmpsb
nop
push
imul
and
les
lahf
in
popf
and
fs
outsl
dec
out
cli
in
outsl
test
clc
mov
xor
je
pusha
pop
insb
cmp
aam
loop
in
mov
loop
daa
sbb
subl
jmp
mov
fsubs
lcall
std
int
rorl
ret
test
int
cmp
test
fadd
addr16
and
pop
addr16
and
mov
and
jae
sbb
inc
and
dec
dec
rcl
xor
pop
jg
mov
stos
out
ret
in
in
inc
test
ljmp
mov
popa
in
mov
push
jg
xchg
cmp
jno
cmp
and
aas
xor
and
sahf
or
mov
and
call
inc
shlb
mov
sbb
test
out
in
inc
or
cmp
sbb
cmp
je
out
lock
movsl
outsb
push
icebp
js
mov
out
iret
scas
shrl
push
mov
xchg
inc
jnp
mov
or
xchg
mov
xor
jp
or
jle
xchg
rcll
push
in
mov
stc
mov
repnz
jns
sbb
push
repz
fisttpll
cmp
push
sbb
lahf
jbe
aad
and
lea
testl
xchg
mov
mov
sahf
subb
enter
mov
iret
inc
sbb
int
loopne
dec
dec
xor
mov
loope
test
cmp
pop
movsb
mov
or
das
pop
test
or
out
sub
mov
test
gs
xchg
in
aas
adc
in
xchg
clc
nop
sbb
cmpb
fsubs
xor
xchg
je
je
sbb
xor
or
mov
xor
sub
add
dec
jmp
shr
repz
adc
mov
lock
jmp
lahf
pop
and
push
cltd
clc
mov
mov
push
sbb
mov
push
in
jmp
outsb
push
sbb
aam
fsub
shll
xor
stos
cltd
movsb
mov
lcall
xor
loop
leave
push
test
cmp
std
inc
push
xor
and
ss
jbe
aam
popa
fwait
call
or
fistps
leave
and
cld
stos
int3
cmp
mov
xchg
or
in
push
stos
add
xor
push
repnz
add
sub
mov
mov
sub
repz
inc
mov
cmp
and
mov
mov
popf
flds
adcb
xor
mov
inc
in
cmp
pop
fcmovb
stos
imull
repnz
ret
jp
loopne
std
inc
and
jle
cmp
mov
out
das
nop
push
insb
loope
stos
pushf
js
andl
push
mov
test
mov
and
lret
out
pop
xor
hlt
push
movsb
push
push
mov
sbb
and
mov
pop
mov
pusha
push
push
inc
xlat
lret
push
mov
aam
out
cld
mov
add
mov
pop
aad
fsts
movsb
jnp
inc
jne
or
adc
out
das
sbb
mov
push
lret
icebp
into
or
das
xor
fnsave
daa
out
mov
sbbb
add
loope
lahf
loop
pop
mov
push
and
sub
dec
dec
xchg
xor
mov
sahf
inc
fmull
add
sub
hlt
rcrl
cmp
sbb
jbe
xor
fadd
add
lret
jle
sub
fcoms
adc
shr
leave
mov
xor
sub
push
inc
ss
jecxz
push
je
in
adc
mov
jmp
movsl
pop
jno
inc
fisubl
shll
gs
scas
push
push
sbbl
xor
mov
clc
xchg
test
jb
adc
lock
push
ja
cmpsl
fiadds
cmp
loopne
and
xchg
adc
ficoml
mov
mov
outsl
dec
jecxz
xor
mov
pop
fcmovnb
mov
add
pop
adc
lds
push
in
inc
inc
aam
out
in
push
je
fcoms
cmp
push
rdpmc
mov
push
out
mov
adc
fwait
loope
xchg
sub
fmull
cmp
sbb
jns
cld
fdiv
fisubs
inc
jge
dec
or
cmpsl
aad
fmull
inc
mov
mov
int
sub
ret
pop
inc
lea
int3
jge
mov
cmpsl
cmpl
mov
aam
ljmp
xchg
pusha
push
jge
ljmp
inc
insb
cmp
in
cli
mov
sbb
scas
scas
movsl
aad
sub
mov
push
mov
sub
sbb
shl
jle
adc
cmpsl
dec
pop
dec
xchg
or
ss
xchg
test
fmuls
jae
daa
jb
es
add
or
mov
mov
sbb
hlt
dec
or
dec
dec
roll
stos
pop
sbb
xor
inc
mov
daa
xor
shl
cmp
sbb
sti
arpl
jle
insl
jg
mov
enter
movsb
popa
pop
lods
pop
cwtl
jnp
push
jecxz
sbb
repnz
gs
push
into
test
jnp
ficompl
jmp
inc
cmp
mov
push
push
adc
dec
dec
cmp
add
jp
loopne
aam
jae
lcall
xchg
and
sbb
repnz
sub
fwait
enter
mov
ss
mov
std
push
movsb
lds
enter
mov
cld
inc
mov
inc
cltd
dec
mov
cmc
xor
stos
mov
bound
fimuls
fcomps
ret
mov
lret
insl
fisubl
pusha
inc
mull
mov
xchg
nop
and
dec
cli
lret
test
shll
sarl
mov
adc
outsb
ss
daa
bnd
test
sti
das
movsb
cmp
sub
into
aam
xor
adc
pop
push
mov
sub
dec
iret
adc
push
shl
jmp
jmp
stos
int3
cmc
aaa
das
add
rcrl
fdivrl
mov
jne
jo
dec
bound
mov
mov
push
scas
lahf
test
jl
scas
xchg
pusha
loop
xor
lods
cmpsl
push
es
in
fists
mov
out
movsb
mov
xchg
in
inc
mov
sub
inc
sbb
fs
dec
subl
dec
bnd
pop
leave
test
jp
xor
lock
jp
mov
data16
call
sub
ret
fnsave
cltd
xchg
push
inc
xchg
lock
bound
int
decl
sbb
scas
add
pop
call
pop
bound
clc
decl
xchg
bnd
gs
adc
iret
push
cli
cwtl
adc
jae
sub
js
fwait
or
repz
popa
pop
jns
sahf
jo
push
sub
aad
sbb
jae
addr16
add
jne
jge
call
ffreep
push
dec
test
cltd
cmp
sub
outsb
lahf
or
mov
pop
dec
cmp
xchg
popa
cltd
sub
jge
jns
lods
cmpl
push
inc
xchg
mov
xchg
pop
mov
add
mov
mov
or
insb
scas
fucomp
fucom
inc
jge
add
jno
clc
out
nop
movsl
xchg
xchg
mov
mov
mov
stos
sub
mov
mov
ljmp
cmp
daa
push
sub
leave
cltd
inc
lods
sub
push
subl
pop
jle
das
or
and
mov
cwtl
int3
xchg
inc
pop
cmp
mov
and
sub
lret
outsl
int
mov
and
cmp
hlt
lock
sub
lret
shll
pop
das
or
movsb
pushf
iret
int
out
mov
and
mov
js
test
arpl
loop
jg
in
stc
movsl
pop
push
inc
sbb
mov
ljmp
das
cltd
movsl
inc
xor
cmpb
xor
les
xlat
sbb
or
mov
aas
push
js
leave
push
xor
scas
lock
out
sbb
and
movsl
mov
lret
dec
and
insb
lcall
jo
setae
insl
push
add
sbb
lret
and
stos
xchg
fs
shlb
pop
loop
pop
aas
mov
pop
mov
inc
push
and
cmp
dec
mov
fs
xor
cmp
jbe
mov
mov
cmp
lahf
ret
push
gs
cmpsl
jp
outsl
dec
cmp
dec
pushf
test
jns
lods
push
or
dec
aaa
sti
mov
jae
ret
pop
in
out
add
mov
les
dec
sub
inc
add
scas
fimull
xor
outsl
lds
int
cmp
out
mov
sub
mov
fdivs
jae
cmc
cld
add
mov
add
and
aaa
add
test
sub
sahf
push
jnp
mov
lods
dec
xchg
mov
aad
pop
pop
aad
int
push
mulb
inc
std
pop
sub
jle
or
gs
mov
negl
push
or
adcl
mov
imul
mov
mov
pop
call
xlat
adc
in
add
mov
xchg
jge
pop
push
xchg
hlt
stc
call
rorl
pop
fwait
je
rclb
push
mov
repnz
jp
jge
and
aaa
xor
pop
pop
push
andl
push
xor
pop
adc
dec
jnp
orl
lret
xchg
cmpsl
in
aas
inc
jmp
push
mov
jne
cwtl
and
dec
mov
es
xchg
push
mov
gs
jne
dec
andb
fs
pop
cmc
pop
inc
jnp
pop
pop
pushl
pop
sbb
cmc
jge
pushf
xchg
push
sbbl
decb
adc
sub
mov
push
into
push
fcomps
pop
jge
stos
dec
stc
std
xchg
pushf
ljmp
jo
ljmp
xor
add
or
andl
jnp
push
fildll
jmp
ss
arpl
stos
test
mov
imul
push
test
fs
fistps
jae
out
sub
popf
and
cmpsl
pop
lea
mov
or
popf
subl
push
loop
push
outsb
mov
lods
inc
dec
xor
push
aas
mov
jne
jg
iret
data16
dec
xchg
test
push
mov
ficoml
insl
aaa
adc
ss
push
adc
and
inc
mov
sub
fldl
xchg
in
adc
sub
rcrb
icebp
loopne
and
jo
push
pop
pop
test
sub
push
int3
outsb
sarb
inc
push
adc
rcll
jb
lret
xor
pop
iret
mov
fldenv
dec
fmull
pop
cld
xlat
lret
in
sub
dec
sub
lods
jecxz
aad
das
out
loopne
mov
imul
or
mov
in
push
mov
dec
adc
fcmovnbe
jo
shlb
mov
xor
dec
js
dec
add
and
dec
push
lahf
sub
insl
push
and
movsb
stos
cmp
xchg
ficoml
dec
adc
je
jnp
aad
xchg
cs
jp
xchg
popf
pop
jge
jg
mov
out
scas
or
push
arpl
fwait
add
testl
xor
lods
jmp
popa
imul
jg
lret
jp
mov
cmp
and
mov
mov
scas
or
jne
bound
jl
add
fdivrs
jle
xchg
inc
mov
push
cld
mov
jne
mov
xor
imulb
jno
pop
adc
imul
mov
and
dec
in
cmp
mov
or
clc
enter
sbb
or
mov
gs
xchg
pop
jp
mov
push
cs
mov
aam
lods
xchg
xchg
dec
xor
push
cmp
cmp
push
dec
lock
mov
and
push
jge
mov
outsl
pop
divl
lds
popf
lret
in
lods
push
mov
bound
ljmp
add
nop
stos
inc
int
imul
push
test
adc
mov
sub
stc
das
loope
add
into
jmp
jns
dec
and
or
test
cmp
and
lret
fsubl
punpckhwd
push
mov
mov
mov
into
sub
mov
into
out
push
inc
pop
add
sbbl
jno
rolb
sbb
and
add
pop
sub
lds
call
std
sub
leave
push
or
insb
sbb
cmp
ja
cltd
push
mov
dec
pop
inc
jl
pop
in
arpl
stos
xchg
or
adc
movb
push
sbb
pop
mov
dec
sbbb
inc
mov
aam
dec
mov
pop
out
mov
dec
addb
lods
or
pusha
int3
lret
or
and
jae
imul
inc
stc
inc
inc
mov
push
lcall
cs
sbb
sahf
mov
inc
push
and
push
imul
ficompl
mov
push
mov
sub
push
sub
and
jb
out
and
sbb
mov
int
fstpt
cmp
sub
pop
sti
jge
out
insl
lds
cs
jmp
ljmp
pop
add
movsl
or
mov
movsb
scas
xchg
call
retw
mov
lret
in
insl
inc
mov
xchg
mov
ja
cld
add
ss
inc
outsl
insb
push
arpl
push
mov
inc
mov
loope
cmp
lret
fsubrp
or
in
inc
fcompl
mov
xchg
mov
imul
fidivrs
dec
mov
add
andb
cmp
pop
mov
inc
mov
pop
jb
mov
adc
cmp
movsl
pusha
jae
in
adc
sub
repz
rcr
divl
into
mov
mov
xlat
cmp
test
lods
add
repnz
dec
lods
adc
xchg
mov
mov
or
push
jp
pop
mulb
lods
or
dec
push
and
sub
or
add
dec
in
adc
push
cli
or
xchg
iret
arpl
adc
cwtl
sti
rorb
xchg
int3
leave
and
outsb
adc
push
gs
adc
mov
adc
lcall
xchg
xlat
out
cmp
push
cmp
outsl
sub
cmp
xor
mov
icebp
inc
mov
jp
or
rcrl
leave
cmp
pop
inc
dec
xchg
push
fldcw
std
int
popa
leave
xor
mov
ret
cmc
dec
inc
std
pop
gs
mov
aad
out
jae
adc
mov
xor
cmp
lahf
loope
xor
popf
punpckhwd
lret
add
lds
mov
repz
add
lock
cmp
mov
andl
in
add
xchg
and
xor
push
inc
or
das
mov
cltd
and
mov
test
sub
pop
dec
lods
insb
cwtl
jle
loop
xor
cmc
or
mov
add
jo
movsl
decb
cmpsl
pop
cmc
nop
leave
outsl
adc
push
negb
jbe
cmpl
out
fs
and
cmpsl
dec
dec
jne
mov
jae
or
repz
sbb
add
shll
pop
pop
adc
push
jnp
rcl
xchg
ret
sbb
pmaxub
push
imull
cmp
idivb
mov
xor
sub
inc
jns
inc
cmp
jo
gs
push
popa
pop
fcomps
xor
repz
mov
mov
or
ja
imul
clc
cmpsl
insb
dec
stos
sbb
and
repnz
mov
rcr
std
cmp
stos
fcomi
stc
imul
inc
pop
cmp
push
out
and
jb,pn
lds
pop
imul
mov
rcl
out
jecxz
jne
jae
test
repnz
mov
sbb
pop
jl
shl
fistpl
or
mov
jne
mov
insb
pop
test
lret
pop
push
and
xchg
push
lahf
fimuls
mov
call
ljmp
mulb
mov
imul
int
fs
mov
insb
hlt
add
call
out
and
scas
mov
daa
sub
and
xchg
cmp
pop
das
push
mov
mov
and
or
gs
jp
cmpsb
mov
push
std
cmc
xor
dec
xchg
mov
rolb
cmp
adc
jo
lods
or
dec
imul
les
sub
or
filds
mov
jmp
call
jmp
leave
push
and
pop
in
push
push
out
adcb
mov
scas
ror
idivb
rolb
push
jl
inc
test
pusha
out
mov
lahf
cmp
push
jne
out
add
dec
cmc
jmp
xlat
add
out
mov
in
stos
add
xchg
test
mov
test
fwait
js
je
mov
add
lret
or
pop
mov
xorl
xchg
inc
mov
lret
sbb
fwait
imul
ret
outsw
jnp
imul
xor
mov
enter
jb
popf
lret
aas
cmp
cltd
xchg
adc
and
cmc
and
and
push
mov
cld
rorl
hlt
mov
xor
xlat
xchg
cmp
or
cmp
repnz
iret
cld
jbe
clc
pop
hlt
leave
inc
cmp
mov
xor
dec
repz
dec
filds
sub
mov
lods
rorl
fmul
test
push
mov
cmpsl
jo
add
stos
fldenv
fwait
sti
jnp
popf
ret
add
pop
mov
ljmp
loopne
not
scas
stc
or
lret
ds
ficompl
pop
call
push
ror
ds
sub
lcall
in
mov
adc
fwait
sahf
dec
aaa
add
jle
imul
sbb
movsb
pop
setns
push
out
adc
adc
clc
enter
mov
push
repnz
or
xchg
push
fucom
lods
adc
ds
call
leave
jle
add
imulb
jne
mulb
mov
add
and
push
fstp
mov
adc
out
stos
jg
shrb
mov
add
sub
push
rcrb
jo
push
or
jmp
mov
pop
stos
pop
or
fwait
sbb
mov
jecxz
jo
out
adc
popa
push
mov
fwait
stos
fwait
mov
ret
sti
testl
fcoms
pop
ljmp
mov
mov
mov
inc
or
nop
jno
mov
aam
mov
xchg
call
inc
aam
stos
sbb
push
jp
mov
imul
push
sub
ds
pusha
pop
ljmp
or
and
out
imul
call
cltd
jp
leave
pop
ret
fdivl
add
mov
sbb
dec
leave
mov
sbb
pop
sub
dec
imul
sub
sahf
pop
pop
lret
dec
adc
pop
imul
mov
incb
push
xchg
repnz
mov
sub
mov
xor
orb
cld
pop
jns
xchg
leave
in
fdiv
lods
repnz
sti
rcr
scas
xchg
fisubrs
or
jecxz
aas
nop
xchg
dec
cmp
arpl
inc
jnp
jae
aam
xor
fiaddl
dec
sbbl
cmpsl
jbe
outsb
dec
and
xor
or
push
mov
push
jg
mov
into
mov
fistps
data16
js
iret
aas
repz
popf
cmp
dec
fimull
push
mov
imul
sbb
sbb
std
stc
mov
shll
out
jnp
mov
adc
ljmp
jle
or
dec
cld
sbb
fisubrs
add
shr
inc
nop
xor
inc
sahf
scas
mov
pop
push
mov
out
cmp
push
dec
mov
sahf
dec
pop
push
xchg
pop
cmc
imul
sbb
add
sarl
mov
push
sub
std
outsb
jg
push
jecxz
push
pushf
sahf
notb
mov
ja
xor
rorl
sar
jge
mov
int3
or
pushw
nop
push
sub
out
push
jmp
sar
dec
mov
test
mov
or
stos
push
xchg
aaa
pop
xor
int3
inc
pusha
inc
xor
loopne
mov
xor
cmp
pop
fcoml
outsl
jmp
mov
imul
and
stos
pop
push
sbb
cmp
sub
je
dec
mov
push
pop
inc
test
bound
sub
adc
jecxz
push
mov
push
xchg
icebp
cmp
xchg
xchg
pop
movsl
inc
fistpll
inc
pop
jbe
push
mov
ret
pop
mov
or
inc
adc
add
cld
mov
jno
imulb
fucomp
mov
mov
aas
adc
shrb
jmp
popa
loop
stos
cmpsl
inc
mov
xorb
fucomi
fldt
or
hlt
fwait
negl
push
sub
push
fstp
cmpsl
lock
adc
sahf
cs
mov
inc
out
fdivs
hlt
scas
popa
mov
pushf
int3
inc
lahf
imul
xor
jne
ss
dec
pushf
xchg
xchg
push
lock
or
in
pop
ror
out
cltd
jae
add
imul
xor
dec
push
sub
scas
hlt
push
lock
jo
pop
pop
sub
xchg
fs
push
jl
rorl
push
pop
pop
pop
or
cs
cmp
iret
mov
aaa
jbe
ret
iret
mov
push
and
push
sub
adc
cmp
divl
cmp
sub
lea
imul
test
leave
popl
imull
jecxz
jmp
mov
cmp
ja
daa
mov
jae
dec
movsl
jle
leave
pop
dec
or
outsl
xchg
in
push
mov
arpl
into
adc
xor
in
fldl2t
mov
fs
aaa
shrb
into
push
cmc
leave
inc
out
fwait
negl
shl
push
ljmp
popf
call
pushf
sub
inc
addr16
sbb
faddl
enter
inc
addl
pop
adc
lods
pop
inc
stos
scas
or
dec
fimuls
xchg
fisttps
jno
outsl
jmp
lds
mov
mov
mov
addb
xor
or
popf
filds
adc
pop
or
pop
cmc
dec
adc
imul
aam
sub
icebp
out
pop
dec
jne
outsb
repz
pusha
jle
js
std
cwtl
into
roll
mov
inc
jbe
in
cmc
mov
cmpsl
pop
out
daa
pop
gs
out
in
cs
dec
mov
fsubr
cmc
movsb
adc
cmpsb
shlb
cmp
lods
shl
in
fsubrl
cltd
xchg
mov
inc
add
fldl
aad
aad
jecxz
into
push
mov
fs
adc
scas
mov
adcb
repz
out
add
mov
push
push
adcb
popa
mov
or
mov
sbb
fldt
les
push
xor
and
aas
lcall
sbb
out
mov
fldenv
mov
cmc
in
lahf
dec
adcl
or
and
mov
ds
test
or
jecxz
fmull
jg
fs
jmp
rcrl
mov
ljmp
out
shrl
pushf
es
fs
dec
jge
add
testl
push
mov
jno
sbb
dec
adc
loope
repnz
jo
test
fs
addr16
lods
inc
gs
cwtl
addl
pop
or
in
push
inc
pop
aad
mov
loopne
jl
fimuls
int
pop
mov
adcl
and
pop
call
rorl
leave
or
es
jmp
aam
xchg
clc
and
test
into
iret
testl
adcb
or
mov
sbb
push
lock
mov
leave
insl
popa
mov
pop
ljmp
dec
int
andl
or
xor
shr
pop
popa
lods
cmp
mov
jg
psrlw
rcll
xchg
push
mov
xchg
leave
dec
enter
scas
sub
add
sub
or
fsubrs
xchg
sbb
lods
sahf
loope
pop
test
lret
shll
sahf
xor
jmp
inc
outsb
fwait
mov
enter
jo
test
mov
sub
cmp
fwait
mov
xor
enter
inc
data16
loopne
daa
push
fs
or
fcoms
adc
stos
xor
sbb
cmp
loop
jg
lds
out
loope
ja
je
in
jle
xchg
fsubr
iret
aad
addr16
lcall
and
mov
cmp
cld
add
inc
mov
push
cmp
test
outsl
hlt
and
sub
pop
mov
mov
mov
fucomi
add
test
roll
test
std
mov
xchg
insb
push
pusha
jo
push
jno
in
int3
call
subb
movsb
cmp
mov
push
pusha
push
pusha
adc
loope
test
hlt
xchg
or
gs
sub
leave
xchg
dec
cmpsl
jae
pop
pop
enter
and
dec
jge
mov
mov
sub
or
and
dec
lret
incb
dec
outsl
lcall
lock
cmp
sahf
pop
lret
les
cld
movsl
rcrb
mov
sbb
pop
inc
dec
jmp
jb
xor
mov
leave
pop
add
popa
sub
test
or
jg
add
shlb
and
in
sbb
add
in
orb
negl
push
cmp
loope
aas
mov
inc
mov
cmpsl
add
xchg
lods
in
insb
cmp
popf
and
push
test
repnz
stc
repz
add
mov
sub
sub
mov
shll
cmpsb
lret
aas
enter
sub
pop
mull
inc
mov
in
into
xor
stc
push
cmpsb
xchg
bound
scas
inc
or
and
fmuls
and
or
add
push
pop
mov
push
mov
push
insb
and
mov
or
rorl
rcl
push
mov
or
mov
lret
ret
mov
add
and
jbe
mov
scas
notl
mov
into
ljmp
ds
ret
add
rcrb
movsb
fisubs
iret
jns
insb
xor
imul
dec
xor
mov
movsl
xor
mov
repnz
sbb
add
out
icebp
xchg
cmp
jmp
push
mov
pop
sbb
shll
bound
sub
dec
mov
inc
xchg
js
pop
inc
out
and
pop
in
fistps
test
fbstp
xlat
sbb
pop
lcall
inc
mov
add
nop
jl
scas
mov
xor
push
jae
add
push
xlat
les
in
mov
xchg
or
roll
sub
jno
xchg
adcb
es
test
cli
push
jns
mov
push
lds
push
jo
mov
jns
or
mov
add
dec
shlb
push
pop
rcrb
push
cmp
inc
xchg
xor
dec
mov
dec
sbb
call
les
lahf
adc
fbstp
push
add
repz
mov
xchg
ljmp
enter
sub
cmp
mov
outsb
mov
cmpsb
pop
xlat
in
sub
incb
dec
cmc
ja
or
jo
sbb
sub
cltd
stos
orb
push
cmp
xor
aad
lahf
test
add
add
jmp
push
inc
push
movsb
jnp
ret
pop
frstor
pop
out
jb
sub
les
fdivrs
fcmove
mul
xchg
push
fisubrl
fwait
sbb
call
cmpsb
mov
or
dec
pushf
jmp
lret
sbb
movsl
stc
repnz
push
mov
rcll
pusha
mov
xor
sbb
or
bnd
jmp
pop
xor
pop
cmp
ret
popa
cmc
xchg
int
lods
mov
dec
jge
pop
push
jb
mov
push
std
xor
popf
add
sub
out
enter
xchg
fsubl
mov
shrb
call
aam
mov
jae
iret
add
inc
leave
hlt
pop
pop
sahf
jmp
fisubrl
pop
test
sahf
push
sarb
repz
pop
adc
mov
loopne
ljmp
into
es
adc
mov
frstor
aaa
mov
sub
out
movsb
orb
xchg
add
dec
mov
or
mov
shlb
mov
mov
add
cmp
sub
out
pop
push
ss
push
adc
aam
movsl
xchg
stc
mov
ja
cld
mov
movsl
jle
mov
mov
subb
pop
cltd
adc
or
pop
sub
cli
loopne
cltd
or
loope
adc
icebp
scas
xor
mov
addr16
dec
mov
ss
ljmp
or
dec
cmp
add
xor
jnp
xor
add
inc
test
lcall
add
inc
ja
xor
out
cmp
imul
push
jle
sub
ret
pushf
mulb
mov
xor
sbb
dec
scas
fdivrl
push
mov
dec
mov
push
cli
pop
xor
inc
hlt
dec
mov
or
push
out
sahf
sbb
addr16
jl
pop
jno
pop
idivl
jmp
and
loope
jae
and
push
fnstcw
popf
out
shrb
jmp
pop
addr16
in
add
push
cmp
mov
and
jmp
mov
add
fistl
ret
xchg
mov
daa
pop
scas
lret
sub
mov
testl
pusha
push
sbb
pop
loopne
mov
int
xchg
fwait
popf
cld
mov
insb
dec
mov
ss
popf
jge
inc
js
inc
jecxz
loop
mov
enter
jo
mov
daa
push
mov
addr16
dec
shlb
xlat
fldl
dec
negb
jnp
clc
mov
imul
push
sub
pop
lret
iret
xor
fiaddl
bndstx
divb
pop
pop
sub
test
mov
mov
lock
cltd
cmp
fsubl
pusha
or
pop
in
lea
jmp
jecxz
add
push
sti
sti
cmp
mov
ret
cmp
or
sub
clc
aaa
xor
jmp
scas
or
inc
sub
dec
cmp
icebp
popf
ret
sbb
hlt
and
xor
pusha
mov
fisttpl
mov
push
mov
mov
insb
cmp
repnz
enter
mov
push
or
arpl
adc
sub
stos
lret
test
or
pop
call
xchg
push
pop
mov
mov
push
mul
xor
clc
imul
insb
mov
mov
shr
insb
cwtl
out
jmp
stc
mov
jge
das
dec
loopne
mov
fs
mov
fsubl
mov
add
cld
es
sahf
add
sti
insb
in
es
cmp
cmp
add
rolb
cwtl
dec
and
adc
jg
jno
inc
mov
outsb
mov
jp
jnp
or
push
iret
add
xchg
and
adc
dec
jb
sbb
mov
aam
mov
rorb
add
xor
enter
lods
jno
mov
int
in
daa
iret
mov
decl
add
sub
xor
out
and
insl
push
scas
dec
sti
sbb
xchg
xor
fidivrl
and
pushf
push
dec
ljmp
push
sub
pushf
es
mov
xchg
outsb
sub
and
into
dec
dec
xchg
adc
xor
adc
data16
psrlq
sub
pop
fcmovu
adcb
fdivrl
sti
pop
arpl
sub
cmp
movsl
cld
test
insb
aam
idivl
inc
sbbl
xor
popf
dec
mulb
dec
jnp
es
int3
imul
daa
vmovaps
sbb
sub
mov
roll
aas
icebp
jmp
lahf
int3
fs
lret
jp
pop
pusha
sub
loope
cmp
pop
test
mov
in
cltd
lret
xor
and
bound
out
add
push
repnz
sbb
ss
clc
xchg
hlt
cltd
mov
adc
insb
sub
jo
xor
cmc
movsl
jmp
lahf
into
insb
push
data16
sub
xor
repz
xchg
sarl
push
rol
xchg
fldcw
add
lds
lods
cmp
adc
inc
stos
push
or
je
mov
pusha
lock
xor
aam
rcl
frstor
es
mov
xor
shll
aad
lods
pop
push
sub
mov
and
adc
inc
cmpsb
into
test
ja
dec
pop
mov
pushf
pop
les
fisttpll
jecxz
mov
inc
lods
mov
jbe
aas
pop
out
pop
out
adc
cmpsl
sti
jnp
adc
add
shr
nop
out
sbbl
sub
rorl
xor
fsubp
push
mov
inc
mov
mov
movsb
jp
xchg
push
xchg
fcompl
hlt
fmul
mov
inc
sar
outsb
decl
sub
rolb
jb
shrb
inc
sahf
std
imul
push
sub
ret
int
call
xchg
sbb
jg
xor
lcall
xchg
or
add
jno
mov
cmp
add
icebp
cltd
add
and
es
sub
sub
sub
mov
adc
ror
or
pop
xlat
mov
rol
nop
movsb
jns
jle
pop
mov
lahf
pusha
es
and
jo
mov
sahf
xor
add
and
lcall
lock
cmpb
test
dec
xorl
mov
mov
idivb
mov
xchg
push
popf
xchg
inc
sub
into
jb
rolb
or
aad
cld
lret
push
cmp
cmp
xchg
inc
mov
cmp
jae
push
inc
sub
icebp
rorl
popf
fbstp
ss
mov
into
cmp
and
cmpsl
leave
in
add
jl
in
popa
mov
roll
cmp
cwtl
push
lcall
or
cli
test
hlt
jl
jnp
popf
sti
mov
stos
inc
pop
mov
pop
xchg
mov
adc
in
lret
jle
sbb
std
add
cmp
adc
lea
inc
jge
or
scas
xchg
fcomps
pop
or
int3
mov
cltd
dec
and
mov
daa
test
dec
out
ss
imul
in
dec
rclb
lock
inc
cld
pop
and
push
jb
xchg
hlt
das
and
loopne
cmpsb
arpl
lahf
testl
imul
fdivp
imul
or
ret
repnz
divl
add
sbb
adc
jp
fnstsw
mov
scas
enter
ljmp
cltd
rol
popf
sbb
cmp
push
mov
std
ljmp
mov
or
adc
shlb
jle
xor
pop
mov
out
add
mov
popa
xchg
out
cmp
push
dec
dec
in
xor
inc
or
and
mov
push
test
fisubl
sbb
and
xor
movb
jne
jl
addl
xchg
xchg
dec
ss
pop
mov
mov
sbb
xor
lcall
xchg
sahf
sub
shlb
jg
cmpsb
in
push
cmp
cli
xchg
cli
add
push
sub
dec
insl
push
iret
push
add
and
pop
add
mov
sub
mov
xor
dec
lods
push
xchg
scas
mov
push
cld
lods
ljmp
lds
int3
or
jle
insl
mov
dec
leave
push
cli
adc
adc
movsl
insb
push
sub
leave
or
lcall
push
mov
jo
jno
sbb
inc
fs
mov
mov
push
test
iret
and
aam
clc
je
push
in
ss
sbb
mov
sub
xchg
mov
mov
fs
in
cli
bound
adc
out
arpl
xchg
jo
push
push
jnp
shlb
das
dec
push
or
repz
hlt
inc
push
and
cmc
mov
mov
cli
dec
sbb
pop
xor
hlt
push
lock
xor
mov
jmp
inc
sub
pushf
das
out
inc
or
push
repnz
sbb
mov
push
test
sbb
adc
je
lret
jge
jl
adc
mov
mov
and
mov
lods
mov
mov
outsb
movsb
icebp
jne
mov
dec
ficoms
cmc
cmpsl
pop
shl
jnp
add
lods
sti
xor
paddw
in
and
pop
push
push
daa
fwait
mov
ss
outsl
lods
inc
add
mov
cltd
jle
and
test
xor
sub
dec
push
into
mov
jae
mov
test
pop
mov
shl
popa
cmp
or
stos
mov
mov
bound
pop
mov
jnp
pop
stos
lock
xor
pop
ss
jnp
lcall
cmpsb
ret
lea
std
jae
sub
add
in
out
xor
add
out
jne
push
adc
sub
cmpl
sbb
xor
filds
decl
fwait
cmc
inc
test
sub
test
imul
add
repnz
jns
in
adc
mov
lock
ficoms
add
jo
call
jb
sbb
mov
add
fiadds
jge
mov
xchg
std
in
lret
jg
sbb
test
decb
fstps
pop
cmp
test
jecxz
jecxz
clc
in
mov
jg
movsl
pop
sbb
xchg
or
stc
dec
aaa
xor
inc
out
pusha
leave
mov
jle
inc
xchg
repz
pop
fsubr
into
mov
pop
dec
inc
lcall
jl
out
push
fdivrs
or
mov
xchg
pop
or
movb
daa
shrb
loopne
xchg
jle
lahf
jg
leave
cmp
jle
or
xor
and
xchg
inc
int3
pop
sti
aad
push
movsb
mov
outsb
cmp
insb
fnstsw
inc
stos
push
insb
test
add
push
pop
in
ret
lret
divb
or
mov
cltd
andb
call
in
jnp
lods
xchg
ss
cmpsl
mov
adc
pop
sub
lea
outsl
xchg
data16
add
dec
push
xchg
ret
jle
mov
out
es
push
cmc
mov
in
les
xchg
add
call
mov
mov
jle
pop
ljmp
jno
mov
dec
xchg
add
jg
xchg
aas
ljmp
xchg
pop
jnp
mov
push
lret
pop
mov
jge
loope
inc
jns
push
inc
and
call
imul
pop
out
jmp
jne
ret
insb
call
dec
loopne
test
mov
jnp
js
push
jp
xor
cmc
cltd
jp
fdivs
lea
pop
pop
cmp
inc
add
jno
repz
fisubrl
xchg
pop
icebp
outsl
mov
ret
call
stc
fs
decb
fimull
xor
cmp
pop
jmp
and
aas
hlt
mov
shlb
sbb
lahf
lahf
jecxz
sbb
roll
add
push
mov
jb
mov
xor
jge
and
lret
mov
ret
pop
out
pop
add
jl
push
mov
jle
pushw
mov
push
mov
rclb
or
jmp
push
push
sub
push
push
cmpsl
lret
push
daa
xor
addr16
icebp
div
clc
fs
dec
xchg
push
cmp
mov
mov
in
cmc
inc
mov
loopne
fcmovu
push
pop
icebp
pop
pop
inc
test
sti
iret
sbb
cmp
mov
mov
das
add
data16
les
mov
cmp
pop
pop
mov
jecxz
pop
mov
arpl
inc
ret
pop
daa
out
sbb
mov
cmp
add
push
inc
push
inc
adc
and
stos
fcompl
xchg
push
sub
out
pop
inc
lret
test
dec
cwtl
mov
sub
insb
das
outsl
fsubrp
mov
mov
inc
fs
add
jg
sti
add
sti
push
lret
inc
lahf
sbb
ret
pop
pop
jbe
inc
ret
jl
or
xor
mov
sarb
sti
pushf
fsubs
lret
lahf
lods
push
fyl2xp1
mov
fnstsw
cmpsl
mov
out
pop
sub
push
xor
mov
push
or
ss
ret
mov
es
pop
push
dec
push
sub
dec
jp
mov
inc
add
inc
add
andb
out
mov
jmp
mov
push
sbb
adc
cwtl
ret
lret
pop
in
pop
mov
pop
push
popf
je
addr16
sub
js
fisttps
mov
pop
jecxz
movsb
sbb
int
inc
ds
orb
or
push
push
and
je
jge
xor
inc
cmpsb
add
jb
xchg
outsb
nop
sti
rcll
cmpsl
dec
fisttpl
jns
stc
insb
or
push
jno
addb
aad
fs
dec
sbb
push
insl
push
stc
and
ret
or
lods
lcall
push
int
pop
inc
jnp
ret
pop
xor
sub
int
cmpsl
out
cmc
hlt
mov
ret
nop
mov
enter
mov
nop
push
pop
mov
mov
lods
addr16
pop
pusha
repz
mov
scas
mov
mov
fwait
mov
cmp
aaa
fs
ficoms
xor
pop
or
push
lea
jl
pop
xor
imul
out
lds
push
jl
mov
sbb
imul
repz
mov
movsb
and
imul
aad
lahf
inc
pop
rorb
cltd
cli
js
lret
cmpsb
xchg
xchg
repz
sar
lods
or
es
cmp
rcrb
dec
push
pushl
mov
fidivl
cwtl
push
in
jle
or
aaa
push
pop
jp
nop
xor
aam
shll
cmpsb
mov
push
es
mov
in
cmp
aad
sub
aaa
xor
int
mov
dec
xchg
mov
push
or
push
jmp
into
dec
shll
jle
push
xchg
shlb
insb
xor
jg
add
jno
cmpb
jb
mov
dec
sbb
cli
and
mov
outsl
call
arpl
enter
adcl
jecxz
and
xchg
dec
nop
rcrl
gs
lcall
scas
mov
add
ret
lea
sahf
sbb
jg
mov
xor
pop
shrl
ret
mov
mov
mov
out
fwait
test
xor
cmp
xor
lret
cli
outsl
push
stos
popf
mov
or
xchg
aam
popl
cwtl
xchg
mov
aaa
xor
enter
ret
outsb
sub
xor
adc
mov
repnz
mov
icebp
jae
xorb
mov
cwtl
jp
stc
mov
insl
push
and
mov
sub
lods
nop
ss
xchg
inc
fistpll
mov
sbb
mov
aad
fisubrs
mov
mov
sub
sub
insl
setp
addr16
push
sub
daa
in
pop
cmp
dec
repz
jbe
pop
in
push
inc
fists
inc
outsl
out
sub
push
mov
cmpsb
and
fildll
push
test
mov
into
nop
orl
xor
je
sti
jno
dec
or
adc
popa
mov
and
in
mov
cmp
and
cmp
mov
sbb
icebp
xor
insl
fidivrs
lock
arpl
jbe
in
clc
or
inc
sbbb
in
cmp
adc
or
lods
cli
popa
mov
leave
push
add
mov
adc
pop
jnp
or
push
dec
out
jns
lds
out
xchg
or
mov
pop
leave
cmpb
je
add
or
add
clc
shlb
push
pushl
jmp
shll
xor
or
mov
and
mov
xor
mov
in
and
push
inc
scas
or
adcl
test
gs
sti
jbe
sti
adcb
adc
mov
dec
lock
or
cmp
pop
dec
jge
sbb
scas
xchg
loopne
mov
in
sbb
nop
test
and
xchg
scas
pop
and
scas
cli
mull
push
adc
push
push
insb
hlt
cmpsl
or
fsubl
hlt
push
inc
mov
jnp
push
stc
std
popa
xor
cmpsb
fiaddl
mov
test
xor
mov
sbb
dec
jb
sbb
mov
cmpsb
pusha
mov
movsb
jb
push
mov
xor
mov
fiadds
negl
call
xlat
adc
mov
pop
push
sub
push
mov
or
push
js
inc
mov
sub
xchg
data16
jp
scas
jge
inc
adc
mov
icebp
cmp
aad
adc
push
sbb
and
fcoms
loop
pop
push
lret
and
inc
aam
xchg
addb
sbb
cmp
dec
sbb
dec
bound
fcmovbe
sar
adc
mov
call
incb
cmp
iret
clc
test
add
xor
inc
cld
out
pop
ljmp
pop
loop
sub
imul
jb
lock
sub
push
sti
and
sti
dec
popf
adc
xor
pop
lods
lcall
fsts
sbb
add
pusha
loop
aam
sahf
dec
into
add
sbb
mov
insb
cmc
int3
fcomps
pusha
sbb
adcl
mov
adc
enter
sbb
and
xchg
das
sbb
sbb
aad
jecxz
aaa
mov
xchg
and
xchg
push
loopne
movsb
outsb
int
pop
mov
xor
popa
data16
rolb
testl
jo
dec
cltd
sbb
pop
lods
pop
fs
or
xchg
stc
test
rcll
repz
mov
or
lods
sbb
fstpt
dec
and
xor
inc
push
xchg
lahf
ljmp
enter
or
lea
adc
clc
sub
adc
stos
sub
nop
mov
pop
xchg
mov
pusha
mov
hlt
pop
mov
jno
mov
sti
mov
xor
jb
jnp
mov
add
loopne
pushf
inc
popf
mov
movsl
mov
xchg
dec
lock
stc
lret
rorl
flds
divb
cltd
icebp
mov
jl
and
mov
xchg
push
add
aam
push
imul
in
sbb
scas
sub
mov
xchg
aam
xchg
outsb
repnz
nop
mov
ret
scas
rorl
xor
sbb
cmp
mov
adc
dec
or
shll
aas
and
jb
out
sbb
xchg
cmp
xchg
push
mov
xchg
pushf
cmpsl
imul
je
dec
dec
adc
or
mov
xchg
push
mov
push
and
and
lcall
adc
xchg
decb
repz
fs
subl
repz
lahf
fstpl
out
fidivrl
push
in
arpl
push
pop
gs
xor
test
call
cmp
dec
push
sarl
sub
pop
imul
hlt
add
jg
sbb
pop
add
jecxz
out
lret
jl
lds
ret
jo
add
nop
or
jecxz
mov
mov
xor
outsl
ss
xor
paddb
ja
cmpsl
into
xchg
mov
mov
mov
xchg
movsb
stos
roll
jno
jbe
out
cwtl
cld
cmp
inc
jecxz
mov
subl
bound
adc
fisttpll
dec
mull
outsl
xchg
inc
xlat
pop
call
mov
push
dec
in
sub
leave
mov
mov
dec
test
inc
scas
xchg
hlt
scas
jl
cltd
pop
dec
testl
mov
adc
dec
clc
in
jle
lock
mov
mov
sub
pop
hlt
cmpl
test
lret
stos
xchg
xor
mov
add
inc
xchg
loopne
fbstp
pop
xor
loopne
xchg
fldl2e
inc
pop
and
jl
sbb
add
jbe
movsb
clc
mov
mov
inc
sahf
pop
rcll
pop
ja
ds
in
neg
adc
sub
sbb
jns
or
dec
pop
or
repz
push
sub
xchg
jge
sub
pusha
cmc
or
fnstcw
hlt
and
pop
fs
ds
push
cmp
icebp
inc
popf
pop
adc
xchg
mov
pusha
xchg
incb
movsb
push
scas
mov
sub
popf
cmp
xlat
adc
xor
int
clc
jno
pop
mov
dec
and
push
mov
ror
jge,pt
push
jmp
or
jo
push
lds
jmp
sbb
add
hlt
mov
inc
xor
xchg
jge
xor
mov
dec
sti
sahf
ss
lcall
gs
int
sbb
xchg
loope
jl
sub
mov
aaa
jp
les
mov
cmp
jge
lods
int3
mov
jmp
ja
jmp
adc
sub
imul
imul
in
mov
fcoms
mov
psrlw
in
outsl
or
fnstenv
es
mov
addr16
pop
out
cmp
add
cmp
jp
sbb
adc
jmp
mov
sub
into
daa
cmp
or
shl
mov
in
and
or
adc
ljmp
pop
jb
bound
aad
push
jecxz
mov
popa
jmp
ret
data16
mov
jmp
mov
fnstenv
add
nop
push
pusha
fs
in
pop
sbb
jl
adc
vpperm
repnz
enter
cld
xchg
inc
push
jmp
sbb
out
cmpsl
lahf
mov
xor
adc
sub
fisttpl
arpl
mov
mov
lret
addr16
mov
dec
push
push
pusha
loopne
test
lea
sub
sti
mov
mov
mov
dec
in
adc
cmp
clc
inc
fs
xor
icebp
ljmp
loop
xchg
imul
jecxz
mov
mov
shll
into
sbb
mov
cmp
jne
sub
insb
jle
inc
mov
push
pop
adc
and
bound
push
enter
loopne
push
adc
cmpsb
dec
outsl
pop
lea
sbb
cld
pop
add
xor
aaa
leave
cmc
mov
xor
mov
fisubs
add
mov
imul
mov
fs
add
std
xchg
ss
mov
stos
sbb
hlt
push
add
cs
adc
xorb
inc
stos
gs
out
jg
shlb
and
mov
and
jo
imul
adc
add
sub
mov
stos
loope
jnp
mov
sbb
inc
ja
pop
incb
and
dec
xchg
lods
push
sbbb
fistl
xchg
daa
pusha
lods
lcall
push
sub
pop
cmp
enter
stc
mov
jne
clc
bound
push
add
inc
cmp
aam
stc
std
add
div
add
hlt
xchg
ret
mov
dec
xor
sbb
sbb
add
add
and
in
cmpsl
pop
cld
add
sbb
pop
push
xor
mov
adcl
sahf
daa
imull
jle
inc
lahf
fwait
pop
mov
sti
push
dec
addr16
rcrl
roll
sub
mov
push
mov
cmc
inc
jp
adc
or
adc
jle
into
sti
or
pushf
pop
ds
das
enter
xor
dec
xchg
and
sti
pop
cmp
mov
inc
xor
push
sub
push
addl
bound
pop
inc
inc
cmp
push
pop
add
ss
outsb
add
or
clc
xchg
mov
push
push
xchg
mov
ret
sbb
lret
xchg
xor
nop
lods
mov
das
inc
lret
lods
jnp
inc
fbstp
pcmpgtw
mov
std
sbb
pop
adc
outsl
mov
repnz
repz
pop
sub
stos
mov
sbb
sub
jne
lret
imul
adc
pop
aas
pop
pop
jmp
xor
orl
dec
aaa
repz
fsubrs
jns
or
fs
out
sbb
push
xor
out
mov
mov
xor
adc
neg
test
inc
jnp
subb
std
daa
dec
stos
xchg
outsl
stos
lods
fisttpll
into
sahf
jmp
out
aaa
jne
mov
imul
roll
movsb
out
push
push
out
xor
sbb
lods
in
out
aad
lods
mov
int3
repnz
mov
loope
sub
enter
sub
mov
fs
scas
sbb
aam
xlat
sub
push
test
addr16
adc
add
inc
lock
test
cmpsb
rorl
scas
loopne
lock
addb
or
shlb
mov
mov
add
mov
dec
pop
mov
mov
leave
lods
mov
sbb
out
es
cltd
jmp
inc
lret
ror
cmp
mov
sbb
inc
repnz
sarl
ficoms
pop
popa
addl
mov
out
xor
fcomps
cmp
fnstsw
push
xor
mov
jnp
adc
fidivl
inc
sbb
pushf
loop
hlt
mov
mov
inc
push
pop
fwait
js
gs
ret
adc
inc
es
xchg
sbb
mov
ret
mov
jno
add
xchg
pop
sub
insb
cmp
cmp
lret
stos
enter
add
jp
sbb
dec
nopl
cwtl
data16
lock
inc
ss
sub
jle
jnp
packssdw
inc
filds
dec
pop
push
pop
adc
mov
out
mov
insb
dec
andl
push
xchg
add
das
jp
mov
push
adcl
sbbb
dec
jns
sub
lds
outsb
push
scas
jo
pop
je
inc
lret
cs
sbb
adc
testb
out
mov
jno
xchg
xchg
mov
jp
inc
jle
cmp
jl
hlt
aad
sbb
or
cmp
in
fucomp
sbb
in
and
cmp
mov
mov
mov
pushf
dec
sar
icebp
or
pop
outsl
pusha
xor
outsb
in
adcb
jo
dec
cld
adc
add
mov
jp
xchg
mov
stc
add
int
push
insb
mov
popa
cld
js
dec
jns
or
bound
xor
rcl
clc
outsb
je
mov
cmp
xor
xlat
pop
mov
push
mov
lods
or
cmpsb
aam
jecxz
outsl
fimull
and
insb
bound
adc
pop
in
mov
fcmovnu
mov
fwait
push
pop
ret
mov
inc
sub
popa
out
test
daa
push
or
sbb
loope
sbb
aad
cmp
xor
sbb
fisubl
stos
fwait
addb
and
sbb
xchg
mov
cmpsb
cmp
imulb
xchg
imul
daa
jecxz
in
addr16
mov
iret
sub
sbb
sbb
jns
fdiv
xchg
stos
movsl
mov
cmp
dec
mov
mov
adc
stc
mov
dec
mov
or
cmpsb
mov
pop
loopne
xchg
mov
or
cmpsb
mov
inc
sbb
mov
mov
dec
inc
mov
pop
inc
nop
ljmp
pop
stc
in
cmp
andl
in
push
dec
mov
scas
mov
jns
mov
inc
je
pop
sbbb
jl
adc
push
mov
imul
xor
inc
jne
rcl
fwait
loop
pop
jecxz
sub
mov
lea
dec
adc
fwait
loop
movsl
leave
lahf
rcrb
inc
lea
fnstsw
bound
fistpl
push
pop
mov
scas
sub
leave
ret
sub
xor
bound
xchg
leave
int3
test
das
stos
loope
cmp
push
pop
bound
in
fiaddl
inc
pop
ror
jmp
testb
push
into
inc
mov
xchg
inc
test
outsb
imul
push
out
or
outsb
jge
mov
inc
aas
fcmovne
lea
gs
xchg
dec
dec
je
xor
mov
js
pop
push
mov
je
jecxz
mov
outsl
and
mov
imul
js
dec
pushf
lret
xchg
outsb
mov
mov
cmc
mov
sub
and
test
repz
repz
lret
movsl
cmpsb
loopne
icebp
push
mov
sbb
dec
xchg
cmp
lret
push
popf
jge
jno
inc
out
xchg
mov
popf
dec
mov
outsl
call
daa
imul
dec
repnz
js
lock
mov
std
fildl
or
out
out
xchg
dec
or
jo
cmp
mov
enter
insl
and
ss
adc
rcl
jp
loop
xlat
imulb
and
add
ret
cmp
cmp
loope
imul
jnp
sbb
jnp
inc
call
adc
push
int3
xor
lods
call
bound
and
adc
mov
mov
negl
mov
jge
and
outsb
inc
sarb
dec
xor
cmpsb
pop
xchg
insb
xor
arpl
iret
or
sbb
inc
rdmsr
movl
mov
sub
pop
or
pop
xchg
push
dec
push
mov
std
pop
aas
push
jns
loop
dec
cs
pop
push
sub
cmpsl
inc
push
lock
mov
fnstcw
shlb
shlb
les
lcall
pop
sbb
setge
movsb
sub
roll
pop
xchg
cmp
mov
pop
adc
cmp
mov
gs
jno
mov
cltd
inc
outsl
jg
sbb
xor
and
mov
mov
adc
es
xchg
jge
scas
and
xchg
test
push
push
inc
mov
sarl
xor
cltd
in
pusha
jl
dec
adc
and
or
cld
pushw
lock
sub
lret
clc
lret
cs
scas
dec
clc
pop
cwtl
sub
scas
shlb
sbb
sub
and
out
cmp
cmp
lcall
out
or
jno
fdivrs
lods
insb
push
mov
icebp
leave
cs
bound
sub
aas
xchg
sbb
pop
adc
jo
pop
adc
xor
mov
xor
dec
js
pop
ret
clc
or
mov
decl
iret
rclb
or
xorb
in
xor
xorb
dec
cmp
mov
pop
lret
pop
jmp
lret
inc
fidivl
std
lret
mov
ljmp
lret
test
insl
fldcw
jecxz
mov
sbb
adc
push
mov
mov
mov
or
decb
popl
xchg
adc
shlb
mov
push
movsb
mov
xchg
bound
stc
jo
cld
and
and
js
or
test
add
aad
scas
xor
cmp
movsb
xor
test
ret
mov
out
mov
aas
sub
sub
lret
mov
pop
dec
mov
mov
sub
and
rcr
xchg
lcall
ret
cmpsb
insb
call
lret
popf
por
pop
mov
out
scas
jns
sti
and
mov
push
dec
jmp
mov
cmp
inc
in
cmc
rorl
mov
je
push
inc
dec
mov
fdivl
in
lock
sbb
in
and
xchg
dec
insl
shlb
xor
ds
add
or
addl
xor
jecxz
enter
xlat
data16
xchg
and
dec
dec
imul
mov
fcoml
addr16
rorb
push
adc
testl
ret
pop
pop
lret
sarb
push
inc
aam
mov
sub
test
jb
sbb
jno
cmp
ljmp
mov
fldt
aad
jb
fisubrs
fistl
cmp
bound
test
rep
ror
or
inc
pop
lea
jl
push
imul
jg
lea
fnstenv
fcmovb
fcoml
int
scas
lret
inc
mov
ds
inc
and
cmpsl
dec
and
jl
psubd
test
insb
jmp
mov
dec
jnp
lret
xchg
inc
jae
jo
sub
or
push
or
pop
mov
adc
negb
xchg
pop
sbb
cld
dec
fadds
mov
xlat
adcl
ds
or
fcmovnu
imul
frstor
add
xor
dec
ja
nop
and
fisttps
or
stos
and
jmp
and
leave
add
pop
repnz
aas
scas
cmpsb
js
sub
xor
cmp
pusha
fdivs
enter
inc
jle
fwait
pop
sbb
lahf
stos
pusha
dec
push
in
inc
idivl
fldcw
add
dec
jae
stos
mov
sub
xchg
sub
pushf
iret
inc
rorl
and
in
insb
push
xchg
int
das
dec
xor
add
jbe
cmp
les
cmpl
insb
mov
push
ror
test
xor
or
sub
pop
mov
cltd
xchg
push
sbb
jmp
mov
aad
repz
or
pop
push
dec
pop
push
loope
sarb
pop
adc
inc
dec
mov
inc
cld
imul
imull
ljmp
hlt
mov
mov
dec
xchg
pop
divb
sub
int
out
pop
cmp
popf
stc
cltd
fstl
push
dec
sbb
out
insl
je
outsb
lret
push
mov
icebp
imul
jmp
sub
ror
aaa
pusha
push
add
push
fxch
test
inc
xlat
ss
mov
jb
push
cltd
push
mov
jecxz
in
ljmp
in
add
sbb
std
cltd
daa
xor
dec
pop
sti
mov
std
lret
je
js
push
fildl
pushf
incl
data16
gs
jmp
cmpsl
adc
sbb
ret
adc
inc
das
xchg
cs
mov
mov
inc
add
sub
xchg
idivb
fcoml
mov
mov
inc
xchg
sbb
gs
xchg
imul
cltd
sbb
fidivs
inc
pop
lahf
pop
jns
orl
xlat
adcb
inc
lcall
arpl
int3
mov
sub
pushw
in
xor
cltd
lcall
pushf
clc
lods
shrb
mov
sbb
loopne
or
mov
or
aaa
int
jnp
aad
into
pushf
es
sbb
pop
paddw
jne
or
xchg
or
leave
dec
adc
mov
add
out
pop
js
xchg
or
cmpsl
movsl
jecxz
repnz
inc
xchg
dec
js
cmp
insl
roll
jl
jno
lock
out
dec
sbb
stos
test
jns
out
and
lret
jle
mov
mov
jp
jp
mov
push
gs
xor
call
mov
aaa
xor
dec
rcl
std
nop
pop
pop
and
pop
jle
jbe
dec
popf
dec
xor
inc
js
jmp
add
lcall
lea
push
push
inc
pop
jl
loopne
scas
insb
add
push
xchg
lods
inc
pop
xchg
or
push
movsb
hlt
fnstenv
insl
xor
jne
pop
lods
and
mov
shrb
sub
xchg
xlat
fiaddl
or
mov
mov
call
fsubl
aam
jnp
xor
xchg
push
cwtl
pop
lods
fcomps
fdivs
add
cmp
xchg
add
cmp
repnz
sub
aam
pushf
mov
pop
dec
inc
stc
popa
adc
shl
int3
cld
aad
sub
or
aad
lea
mov
push
mov
adc
test
sub
adc
nop
pop
inc
mov
and
adc
push
mov
mov
xchg
sub
pop
and
fidivrs
xor
sbb
mov
lock
dec
dec
out
cltd
pushf
add
push
xor
mov
fwait
popa
mov
lods
mov
pop
xor
sub
mov
popl
outsl
jge
sbb
sahf
xchg
test
sbb
pop
mov
cmp
push
push
pop
jge
add
outsl
mov
pop
add
repnz
pop
sub
pop
lcall
rorb
dec
pop
hlt
ficoml
jp
inc
notl
in
or
cmp
iret
push
add
dec
mov
or
xchg
mov
shlb
enter
pop
xchg
jmp
insl
icebp
in
pop
int
sbb
inc
adc
xchg
imul
sub
aaa
push
pop
pushf
inc
insl
mov
push
popf
mov
lahf
add
dec
cli
sub
mov
ret
mov
dec
mov
into
mov
jae
sbb
dec
mov
xchg
inc
xchg
sti
and
dec
jns
jne
mov
ret
lret
in
outsb
pop
xchg
jmp
or
dec
testl
mov
sub
adc
dec
sub
add
inc
rorl
pushf
test
push
fsubrl
sbb
sti
outsl
rclb
loopne
stos
nop
mov
pop
lret
sbb
lds
insl
cmpsl
out
je
jle
adc
sti
cmpsb
push
add
or
repz
add
les
shll
push
daa
loopne
pop
adc
mov
pop
icebp
inc
pop
pop
or
jno
aas
cwtl
push
jg
sbb
pop
push
fsts
lds
cmpsb
push
lret
pop
shr
jmp
jle
jecxz
ss
mov
loopne
jns
fs
jne
pop
pushf
mov
mov
mov
sarb
enter
xchg
scas
sbb
push
rolb
xlat
enter
cmp
gs
insl
fmull
adc
xor
sub
push
sbb
inc
mov
andb
or
sub
and
sub
dec
bound
add
adc
push
jns
push
mov
cld
xchg
cmp
je
insl
testb
xor
and
gs
mov
pop
sbb
inc
aam
hlt
jbe
pop
xor
inc
jns
jge
enter
inc
xor
mov
cmp
or
aam
dec
mov
xchg
cmp
jge
inc
push
ja
sub
fcmovne
repnz
pop
dec
dec
outsb
xchg
les
jg
in
mov
call
notb
pop
shlb
or
pop
dec
fst
rcrb
test
incl
push
cmp
adc
divb
sbb
movsb
test
adcb
test
mov
pop
fnstcw
call
filds
ds
clc
xor
outsl
sbb
mov
cli
outsb
mov
mov
hlt
sbb
inc
sub
jg
mov
sub
repnz
cltd
cmpsl
and
into
adc
clc
lods
stos
jno
insl
add
xchg
push
sub
or
test
in
push
add
out
insl
jnp
sub
arpl
clc
add
inc
push
setbe
lods
cmp
rcll
pop
fwait
inc
mov
or
mov
outsb
mov
xor
jns
test
adc
insl
ds
test
cli
mov
xor
lret
daa
test
js
xor
adc
movsb
stos
inc
jg
fstpl
out
cli
mov
mov
in
mov
pop
sbb
das
in
mov
mov
xchg
push
xchg
add
in
adc
rcrb
or
lods
cwtl
cwtl
or
int3
fsub
cs
lods
sub
xchg
fdivl
mov
sub
repnz
xchg
das
jge
mov
mov
sahf
ljmp
jae
inc
sbb
lea
fidivl
sub
ffree
push
adc
push
shll
movsb
sub
jl
and
lds
nop
adc
pushf
out
mov
in
push
push
xlat
sbb
leave
nop
xor
ror
leave
clc
sub
lret
sub
lcall
cmp
scas
sub
dec
dec
mov
xor
push
mov
daa
imul
dec
loop
cmp
xchg
and
int
adc
mov
lods
sbb
iret
int3
xor
cltd
jmp
inc
and
shll
jecxz
sarl
mov
test
rolb
in
adc
mov
xlat
sub
adc
cmp
xor
push
cmpsb
lods
xchg
shlb
mov
loopne
mov
sti
adc
adcl
shl
jne
arpl
jmp
mov
fsub
test
fstpt
lds
in
pop
cmpsb
dec
fbstp
dec
dec
adc
mov
mov
je
dec
lds
data16
out
cmp
shr
sub
pop
daa
xchg
daa
dec
cmp
gs
and
clc
sub
jecxz
sbb
sbb
sbbl
jns
inc
adc
dec
std
or
movsb
xchg
dec
add
ljmp
mov
testl
and
scas
xchg
or
les
add
in
cmp
inc
adcb
xchg
jnp
push
mov
icebp
ja
sbb
mov
sbb
mov
jg
mov
mov
aaa
adc
enter
dec
xor
xorl
sbb
lea
je
inc
insb
into
mov
push
mov
cli
mov
addr16
test
loopne
push
in
cli
jne
cmpsl
sbb
dec
shlb
je
inc
ds
hlt
dec
test
repz
dec
fidivrs
lret
push
add
lods
testl
jnp,pt
imul
gs
mov
rcr
jne
fidivs
push
aam
jmp
out
or
in
sub
mov
add
cmp
sub
rcr
fwait
pop
shl
fnsave
pop
pop
xor
ror
or
dec
mov
das
mov
lret
xchg
dec
inc
mov
mov
aas
mov
sbb
cmp
dec
sub
popl
cmp
inc
loope
call
push
mov
loop
cmp
shl
dec
xor
pop
jecxz
xchg
mov
out
push
pmaxub
int3
stos
sbb
daa
clc
int3
sbb
pop
jmp
mov
je
js
fnstcw
int3
cmp
xor
fisubrs
mov
xor
push
dec
sub
pusha
mov
fs
cmpsl
sbb
jp
xor
insl
nop
sub
lahf
ss
mov
push
mov
outsl
in
call
lods
sub
push
jmp
pop
mov
mulb
jbe
and
shl
dec
jbe
fcoml
add
sbb
cwtl
sub
cmp
sub
mov
add
or
mov
pop
jb
add
inc
shll
arpl
out
cmc
scas
pop
cwtl
fs
mov
fdivrs
mov
add
mov
jno
leave
xchg
les
inc
cmp
cmp
testb
sub
sub
jne
and
aam
in
inc
inc
mov
fdivl
andb
cs
iret
pop
not
push
subb
pop
push
pop
xchg
scas
loop
jmp
rol
push
addr16
push
or
aaa
gs
fldenv
lods
or
inc
push
sbb
mov
adc
aaa
hlt
xchg
fsubrs
push
aaa
je
mov
xchg
dec
xchg
pushf
test
cld
roll
add
movsl
push
sti
push
xor
xchg
arpl
mov
pop
and
clc
jns
sub
pop
jecxz
cmpsb
or
sbb
jno
xor
ficomps
or
hlt
mov
inc
sbb
dec
in
lods
push
cmc
cmpsb
mov
sti
in
push
mov
gs
in
cwtl
adc
test
mov
insl
cvtpi2ps
mov
mov
xor
sbb
lret
pushf
repnz
rclb
shll
mov
ds
cmp
and
les
pop
sbb
dec
push
or
addr16
dec
ret
rcll
jmp
lock
jo
add
push
inc
push
lods
gs
decb
push
jmp
pop
inc
es
andb
in
into
out
mov
ret
es
dec
and
mov
and
xchg
out
mov
push
dec
cld
inc
jb
xor
jge
es
arpl
jo
add
xchg
push
push
or
fdivr
fs
out
and
lock
sub
xchg
bound
jo
pop
mov
push
enter
mov
sbb
cs
or
and
mov
mov
and
jns
ret
shr
not
jb
js
xchg
xor
push
mov
jb
mov
std
test
xchg
cmp
sbb
xor
inc
pop
dec
stos
imulb
inc
sbb
pop
or
push
xchg
sub
les
pop
out
push
pop
ss
add
pop
mov
xlat
sub
scas
jg
scas
jmp
imul
dec
or
lahf
aas
sahf
add
inc
mov
out
xchg
icebp
pusha
inc
add
in
jne
push
sub
fdivr
mov
dec
push
popl
daa
cmp
mov
loopne
xchg
loop
movsb
call
pop
fidivs
mov
stc
mov
arpl
aas
aam
pop
adc
lea
jbe
sbb
xchg
cmp
push
fcomip
xchg
pop
push
int
outsb
ret
test
sbb
stos
sti
cld
pop
imul
or
test
push
mov
inc
sub
call
hlt
sbb
add
outsl
xchg
cld
roll
push
adc
lahf
shrb
iret
inc
stc
das
cmpl
cmp
jp
push
sti
jo
scas
dec
mov
cmpl
or
arpl
inc
shrb
push
lahf
and
sbb
mov
add
push
je
les
fsubrl
add
jae
push
popf
jbe
stc
into
out
iret
fs
or
lret
pop
dec
popf
test
push
out
jl
fstl
lods
push
push
out
iret
dec
jbe
das
adc
sbb
bound
hlt
mov
inc
pop
js
cmpsb
std
adc
shlb
lods
pop
sub
sbb
xor
mov
out
ret
cmp
outsb
mov
pop
arpl
ret
pop
push
int
aas
dec
dec
xchg
mov
and
sub
fcoml
mov
in
xor
jo
mov
lods
int
ret
scas
or
ret
repnz
dec
sbb
dec
mov
movsb
xchg
pushf
jns
mov
add
sub
mov
popf
pop
cli
ret
dec
adc
je
aaa
jl
add
popa
mov
adc
mov
jno,pt
sub
outsl
pop
jge
mov
adc
clc
xchg
cmpsb
add
pop
cmp
inc
fldpi
cmp
mov
adc
sarb
dec
mov
xchg
mov
enter
and
movsl
push
nop
rcrl
xor
lret
xor
add
cmp
jmp
push
or
out
ret
lods
mov
xor
orb
fisubs
mov
out
xchg
stos
push
jne
jmp
inc
push
repnz
cld
jb
std
and
data16
xor
inc
arpl
mov
mov
mov
inc
fisubl
add
icebp
adc
cmp
cli
arpl
add
xchg
pop
sub
push
jl
insl
stc
mov
incl
das
mov
push
mov
push
int3
mov
mov
mov
lock
ret
inc
mov
cmp
sbb
fdivrl
clc
je
fdivl
sbb
daa
test
cmp
into
neg
sub
xchg
fidivl
adc
cmp
push
inc
aam
jbe
rorb
iret
fsubl
pop
dec
inc
mov
mov
xor
je
adc
rcll
or
xchg
pop
test
and
jg
jo
iret
push
fxch
xor
mov
test
movsl
push
dec
aad
add
xor
push
cmpsl
xchg
cltd
stos
sub
jae
adc
fiaddl
int
enter
lock
ljmp
clc
push
and
lods
push
rclb
ret
xchg
push
inc
push
cmp
or
mov
movsl
outsl
in
sub
pop
push
jo
pop
addl
notl
rcrb
lds
jg
jb
out
popf
fstl
inc
adc
stos
cmp
lahf
mull
aaa
mov
push
xor
lods
call
sub
scas
int
dec
test
test
mov
add
cmpsl
ret
pop
mov
mov
js
scas
cs
sahf
pop
iret
in
jecxz
sbb
jl
decl
xchg
pop
arpl
int
xor
rclb
imul
xchg
sbb
mov
ljmp
sub
iret
std
or
test
push
inc
add
insb
mov
ljmp
push
popf
leave
xchg
loopw
jo
in
add
outsl
dec
shr
mov
hlt
push
std
sub
mov
push
test
iret
lahf
leave
or
ret
aaa
shll
mov
push
mov
test
add
int
pushf
orl
cltd
gs
mov
orb
push
adc
test
xor
out
das
xchg
lods
test
repnz
jmp
das
addr16
outsb
mov
cwtl
push
dec
mov
test
leave
mov
mov
icebp
mov
xor
or
insb
cmp
test
mov
icebp
in
outsl
push
outsb
inc
outsb
xchg
xor
push
cltd
mov
stc
pop
push
lcall
sub
xchg
std
scas
icebp
inc
out
call
cmp
xor
pop
adc
dec
lods
aad
lods
cmp
imul
cwtl
dec
pop
mov
rorb
js
or
cmpsb
mov
js
mov
imul
adc
in
loope
adc
mov
jl
or
fisubl
shrl
test
movsl
ret
jmp
int
pop
rol
xor
insl
hlt
addl
shlb
inc
mov
mov
insb
ljmp
add
or
ss
jp
cld
lret
mov
das
xchg
inc
test
mov
jno
dec
push
pop
mov
cld
fwait
mov
jo
and
jno
outsb
cmpsb
mov
ljmp
subb
pushf
out
das
mov
dec
cld
mov
movsl
mov
adc
pop
mov
jae
add
or
lds
insl
add
pushf
scas
out
nop
ss
jl
mov
icebp
or
add
insl
mov
dec
pushf
mov
jnp,pt
mov
nop
mov
fistps
pop
jnp
fstps
in
inc
push
cli
aaa
cmp
mov
xchg
push
out
rorl
pop
inc
jle
sbb
das
xor
dec
cmp
cld
mov
pop
xchg
mov
bound
loope
mov
push
icebp
xchg
ret
movsb
pushf
adc
fdivl
pop
inc
ffree
adc
pop
pushf
lods
xor
paddsb
lods
xchg
dec
call
int3
and
mov
add
xchg
and
lock
ja
push
mov
lret
xlat
mov
stc
push
mov
out
js
in
and
and
faddl
cwtl
pop
push
jo
jo
imul
popa
je
or
pusha
mov
cmpsl
pop
test
mov
adc
test
sbb
mov
mov
dec
mov
loope
mov
aam
dec
icebp
mov
push
sarb
add
push
sub
lock
jmp
test
stos
push
mov
pushf
or
pop
add
jne
pop
dec
pop
push
xlat
or
or
mov
cmpsb
push
lahf
pusha
dec
jb
jno
adc
imul
into
and
or
test
loopne
push
lahf
nop
mov
sbb
push
addl
dec
in
test
daa
test
repnz
push
aas
aad
mov
jg
lret
mov
insb
push
lock
dec
in
jge
cmp
call
rsqrtps
cmc
ljmp
jle
jg
fwait
inc
pop
icebp
xchg
and
cmp
push
daa
adc
ljmp
mov
mov
mov
push
push
jno
out
shlb
daa
jp
cmp
mov
xchg
js
insb
and
cmp
les
jb
sbb
stos
dec
ret
ds
aas
popa
xor
jne
mov
movsb
cmp
roll
pop
xchg
mov
jecxz
std
addl
jo
shr
jb
and
adc
pop
in
ja
pop
add
lods
push
inc
mov
mov
xor
lret
push
lods
fildl
cmc
arpl
mov
cmp
or
es
fldenv
push
dec
daa
loop,pt
mov
pusha
pop
inc
int3
mov
out
ret
jbe
or
adcl
sub
movhlps
push
sub
lods
pop
xchg
mov
sbb
mov
and
fdivl
arpl
push
gs
or
inc
xorl
das
fwait
insb
xchg
imull
daa
pop
jle
sub
shll
aaa
test
cmc
lret
nop
rorb
sbb
out
sbb
mov
aaa
pop
into
inc
jmp
push
pop
mov
fists
in
push
in
xor
dec
mov
lea
and
push
lahf
inc
push
dec
lods
loop
and
stos
xor
cmpsl
jbe
push
iret
mov
pushf
push
nop
shrl
js
xchg
bound
xor
or
or
cmp
jo
mov
ret
dec
sahf
aaa
movb
outsb
xor
xchg
add
out
inc
mov
incb
jb
lret
adc
test
rcl
and
ljmp
mov
and
cmp
and
sbb
hlt
jbe
xor
mov
push
pop
lret
pop
les
lods
pop
mov
test
pop
sbb
jbe
and
push
std
inc
lahf
pushf
fildl
jge
ret
out
sub
xchg
mov
pop
filds
enter
xchg
in
stos
popf
push
dec
push
xchg
pop
inc
adc
pop
xchg
jb
cmp
lret
aad
push
test
scas
mov
out
mov
incl
ret
adc
and
pop
mov
stc
jle
jno
inc
dec
jmp
mov
pop
notb
test
sti
ss
movsl
shll
test
jecxz
test
xchg
int
adc
and
mov
push
imul
adc
ret
and
mov
sub
test
mov
test
dec
es
fstpt
adc
lret
aaa
mov
cmc
pop
orb
test
xchg
repnz
mov
push
sub
dec
out
inc
cmp
incl
jb
cmp
xchg
mov
mov
mov
jae
and
mov
pusha
daa
mov
xor
movsb
js
fdivs
aas
add
ss
xor
iret
jmp
lods
sti
sub
repnz
fisubrl
push
iret
pop
push
ret
cmovne
loope
int
pop
xchg
cmp
sbb
vmovaps
loop
ror
push
imul
pop
daa
inc
jle
or
stos
xchg
ljmp
js
outsl
and
xchg
cmp
mov
adc
sub
mov
inc
ficompl
or
jae
xor
mov
stos
and
dec
xor
pusha
jno
in
test
les
pusha
jbe
lods
sub
inc
add
or
test
insl
mulb
and
addb
into
stc
repnz
sarl
js
jmp
ror
gs
jle
sub
jo
dec
pop
inc
and
aaa
jae
out
popf
mov
add
sbb
push
jmp
push
xchg
fnstenv
bound
pop
insl
or
sbb
push
pop
xor
cmp
dec
or
push
into
mov
and
cli
in
mov
push
xor
pusha
mov
adc
sub
jb
repz
sbb
add
lds
enter
cmp
sub
mov
outsb
ret
popf
sub
subb
push
xchg
mov
test
mov
das
pop
enter
jp
sub
aam
fidivl
stos
jl
add
ret
rcr
lods
sbb
cs
imul
inc
clc
movsb
jmp
gs
pop
pop
arpl
mov
imul
sbb
push
sub
mov
jle,pn
cltd
icebp
shl
loop
clc
adc
out
push
andb
add
outsl
push
jg
xchg
imul
pusha
xor
mov
inc
sbb
adc
fistps
dec
sahf
fcmovbe
mov
mov
add
stos
hlt
push
jge
loopne
inc
fsubs
sbb
test
std
scas
rorl
in
sub
fwait
adc
fistpl
dec
adcl
mov
lea
lret
sbb
shl
into
xlat
adc
mov
or
es
popl
fs
test
add
push
push
xchg
ss
cmc
cwtl
mov
or
cld
push
push
push
xor
or
mov
rcrb
xchg
push
lods
flds
mov
test
inc
jge
pop
shlb
test
out
lds
cs
adc
cmp
mov
stos
jle
ljmp
xchg
jb
aam
mov
arpl
nop
cltd
pusha
adc
push
jno
stos
adc
mov
inc
sub
addr16
insl
out
pop
shrl
fdivrl
pushf
mov
mov
fwait
shrl
repnz
in
mov
mov
jecxz
in
mov
movb
stos
lods
and
sub
mov
out
add
lahf
lods
subb
outsl
icebp
loopne
fwait
daa
outsl
icebp
mov
insb
adc
fwait
adc
aaa
cmpsb
inc
adc
lea
and
xor
inc
fisubl
sahf
idivl
loopne
bnd
popa
mov
add
mov
sub
mov
cmpl
inc
rcll
enter
dec
es
arpl
lods
fists
xorb
mov
add
call
bound
fistl
push
xchg
and
out
test
mov
mov
cmp
jne
jo
pop
outsb
jmp
out
loop
push
in
jge
sub
and
in
fildll
push
jbe
push
cmpsl
mov
into
mov
stos
xchg
ss
jg
fldenv
inc
xchg
xor
leave
data16
add
xchg
jecxz
iret
loop
clc
scas
adc
xor
aad
push
dec
arpl
jbe
dec
and
int3
addr16
mov
jo
sbb
out
test
dec
xor
test
adc
push
jle
add
or
xchg
into
mov
cmp
mov
jle
js
scas
mov
xor
and
mov
je
mov
cltd
mov
jne
jae
hlt
rcll
aam
lods
negl
cltd
in
incl
andb
cs
pop
ret
dec
jp
mov
sti
shlb
outsl
fsubrl
jb
mov
jl
mov
divl
stos
mov
in
mov
sbb
sub
out
gs
nop
cmp
filds
dec
xor
push
sbb
insb
enter
mov
lods
call
lcall
or
mov
add
mov
push
out
jno
mov
jo
and
inc
add
jg
push
or
js
push
fldl2e
ljmp
sbb
lock
ds
mov
lods
rcrb
mov
leave
push
xor
and
test
mov
fs
cltd
outsb
fldcw
or
mov
jne
sub
rcrl
jp
pusha
or
scas
insb
sub
add
je
shlb
lret
dec
cmpb
jge
sarb
dec
or
scas
jle
psraw
jmp
movsb
xor
xchg
lea
mov
pop
data16
pusha
inc
pop
aad
out
dec
lods
dec
adc
adc
cmc
xorb
lods
add
mov
out
push
in
outsb
jno
mov
stc
jns
dec
test
aaa
inc
xlat
ret
cmp
dec
add
push
test
sub
out
in
xchg
stc
xor
sub
jle
mov
cld
dec
dec
xlat
push
lret
add
xchg
push
jo
inc
mov
ficompl
mov
into
arpl
mov
mov
push
imul
negb
sahf
out
idivb
in
or
add
ret
inc
sbb
lea
out
ljmp
test
jmp
inc
inc
pusha
aaa
jl
stos
shrb
inc
lea
lcall
cmp
addl
mov
adc
sbb
mov
push
sbb
sub
mov
stos
xorb
in
and
ficompl
add
out
jmp
push
dec
jge
das
pushf
push
aaa
mov
adc
imul
mov
imul
inc
or
movsl
pop
mov
lds
fwait
cmpsl
mov
dec
push
fcompl
mov
popa
mov
mov
das
call
pop
adc
movsl
xchg
rol
in
sub
cwtl
pop
xchg
and
int
mov
repz
push
mov
ret
fwait
stc
shlb
inc
xchg
in
sti
xchg
int
xchg
ljmp
dec
lods
je
stc
in
pop
mov
test
push
jmp
insb
scas
popa
aam
ja
add
icebp
jp
cltd
mov
in
fcomp
mov
push
dec
mov
fisubs
test
rcrb
dec
mov
jbe
mov
scas
mov
lea
mov
test
mov
lods
pop
jg
sti
fnclex
lcall
push
cmp
cld
xor
in
ljmp
movsl
mov
mov
mov
add
or
pusha
fidivl
adc
fmul
aas
cmp
cld
xor
and
cmp
aam
sub
fidivl
mov
xor
std
sbb
add
xchg
jp
and
xor
out
xor
jge
xor
mov
fists
test
inc
sti
xchg
xor
pop
insb
push
adc
and
mov
adc
jns
lcall
outsb
lret
ss
mov
fnstcw
int3
js
mov
cmpsl
aas
cmpsb
pushl
adc
cmp
sub
jne
iret
or
and
xor
sbb
idivl
mov
adc
test
adc
push
mov
mov
out
mov
clc
jmp
fs
jb
mov
jp
mov
sete
mov
sbb
mov
lods
or
leave
mov
ret
jne
cmp
lods
out
jmp
cltd
or
or
lea
stc
insb
gs
idivl
xor
and
cs
cmp
mov
int
loopne
psubw
xchg
or
es
xlat
sbb
ret
and
cltd
popa
fstpl
push
mov
push
stos
dec
sub
dec
xor
xor
lods
mov
pop
ss
lahf
mov
addr16
mov
fdivl
enter
push
xchg
dec
mulb
add
jne
enter
and
and
mov
in
mov
jbe
mov
stc
scas
ds
clc
cmp
adc
mov
lods
pop
fldl
daa
pop
mov
loop
ss
jnp
dec
mov
xchg
das
add
mov
lods
push
incb
adc
jp
xchg
jne
mov
pop
inc
imul
out
enter
add
sub
mov
jp
negl
adc
imull
stos
lret
jnp
test
push
jle
xor
stc
stc
sbb
loope
in
negl
pop
and
and
jne
aad
mov
mov
pop
inc
push
or
addr16
or
mov
js
fcomi
mov
aaa
or
xorb
jne
dec
pop
push
data16
loop
icebp
adc
push
adc
scas
and
loopne
cwtl
in
ret
sub
add
cmp
or
inc
in
rdtsc
scas
in
push
inc
fs
ftst
adc
shl
lahf
icebp
pop
xchg
or
jmp
push
push
push
and
xor
sahf
push
imul
push
jno
cmp
out
mov
test
iret
mov
mov
sbbl
sub
inc
jle
repnz
sbb
mov
sbb
mov
int
frstor
xchg
xorl
test
xlat
xlat
dec
repz
sahf
aam
sbbb
xor
mov
push
push
push
cmp
mov
and
mov
imul
mov
sbb
sbb
sbb
dec
mov
aad
mov
loope
xchg
cmp
ljmp
add
cltd
dec
gs
jbe
test
mov
adc
idivl
inc
adcl
cmp
mov
push
xchg
test
jb
xor
cmp
mov
dec
add
shl
inc
mov
test
std
inc
cltd
pop
push
mov
repnz
mov
push
dec
mov
mov
stos
mov
mov
scas
push
lahf
dec
aas
aam
mov
inc
pusha
xchg
push
lcall
sbb
mov
add
or
jne
ret
xor
and
stos
mov
loopne
ret
lods
or
and
ss
mov
dec
adc
sub
mov
scas
pop
imul
ljmp
sub
loopne
test
out
mov
mov
std
mov
ds
xchg
sub
aaa
fnstcw
lcall
jecxz
movsb
jmp
fcomi
lds
jnp
add
sub
out
or
les
mov
dec
arpl
pushf
aas
negl
scas
sbb
push
clc
mov
in
hlt
out
add
inc
stc
mov
movsl
addb
pop
faddp
imul
popa
das
mov
addr16
mov
repnz
das
mov
mov
push
lahf
insl
pop
sbb
inc
mov
or
out
insl
insl
lret
pop
pusha
cmp
idivb
scas
mov
fwait
inc
inc
sbb
pop
mov
adc
adc
xlat
mulb
mov
fcmovb
mov
clc
stc
popf
std
repz
aam
into
stos
or
jle
int
scas
add
fcmovbe
mov
es
sub
aaa
xchg
lods
fwait
pop
outsb
lret
push
inc
push
cld
dec
add
jmp
add
data16
test
cmpsl
pop
paddb
int
sarl
movsb
jp
cld
dec
sbb
jmp
or
jno
pop
out
xor
inc
push
sub
out
jnp
stos
imul
push
dec
xchg
movsb
jb
push
mov
and
out
scas
dec
aad
dec
mov
lds
jle
lret
mov
xchg
es
ret
jg
out
aam
fidivrl
cmpsl
cli
in
test
adc
add
movsb
movl
or
loope
pop
notl
sbb
sbb
mov
mov
testl
sarb
sub
lds
adc
arpl
dec
xor
lods
inc
jo
jge
mov
xchg
nop
xorl
or
jo
subl
xchg
pop
mov
mov
arpl
adc
daa
pusha
fistpl
mov
push
dec
push
rcrl
pusha
in
test
jg
mov
push
sbb
cwtl
sub
pop
neg
xor
jno
and
xchg
lahf
aam
jp
and
xchg
movsb
jg
jg
or
add
mov
sbb
testb
mov
js
and
scas
add
repz
leave
pop
mov
push
jle
mov
rolb
or
icebp
pop
sbbb
int
ja
pop
pop
outsl
mov
es
repnz
push
movsb
nop
lret
xchg
inc
call
sbb
or
xor
push
inc
repnz
leave
popa
and
mov
in
mov
cli
imul
sbb
jmp
or
das
sbb
out
andl
shrl
xchg
dec
jecxz
xor
pusha
pop
push
popf
out
sub
cs
add
dec
mov
mov
mov
lcall
mov
faddp
pop
mov
mov
stos
add
add
or
or
jg
lcall
dec
lret
ljmp
sub
mov
stos
adc
dec
jno
jg
jae
jl
in
cmpsb
and
fs
jg
daa
inc
push
mov
xorb
clc
cmp
xchg
adc
fsubrl
fwait
xor
loop
push
xor
jo
jp
cld
insb
mov
mov
push
push
xor
push
lock
fsubrl
jg
push
xor
dec
mov
mov
fisttpl
pop
pop
mov
dec
mov
ja
push
inc
mov
sbb
out
es
mov
fildl
cld
dec
mov
enter
sub
cmpsb
sub
inc
xchg
decl
mov
push
mov
clc
mov
fstl
push
mov
data16
pusha
mov
pop
and
fisubrl
fisubs
and
push
es
mov
addb
cmp
sbb
hlt
or
lock
aam
push
mov
xchg
and
cmc
push
or
outsb
adc
std
mov
js
fldt
paddsw
dec
fsubl
pop
pop
jb
lret
or
or
mov
push
ret
mov
xchg
bound
pusha
adc
or
shlb
adc
aam
fs
inc
cmpsl
hlt
out
aaa
jb
movsb
addl
ljmp
data16
movsl
push
jnp
xchg
dec
lods
mov
fdivs
adc
test
adc
sbb
lcall
dec
ret
or
add
adc
jne
movsb
repnz
and
dec
push
and
jp
aad
xchg
adc
sbb
divb
fcoms
push
js
jge
xor
xor
xor
aad
out
mulb
ss
dec
mov
shr
mov
dec
sub
push
add
dec
mov
lahf
jo
outsl
pop
xor
jmp
xchg
iret
jmp
fs
or
pop
std
insb
nop
std
and
lods
pusha
push
outsl
ret
shrb
pop
xchg
imul
fs
and
insb
pop
insb
faddl
nop
add
out
push
ret
ret
std
adc
clc
outsb
mov
mov
push
cli
addr16
cmpsl
add
popf
mov
arpl
jp
jp
lcall
or
rcl
adc
stos
xchg
cli
or
sub
out
inc
add
pop
dec
add
push
jae
or
imul
stos
or
cltd
jge
in
in
xor
sahf
lods
fwait
inc
mov
cwtl
or
fwait
add
jle
mov
sarb
mov
dec
ficompl
sbb
xchg
inc
sub
or
and
pop
push
jno
lret
sbb
lcall
ja
in
out
je
and
xor
icebp
sahf
loop
add
mov
cmp
pop
pop
xchg
cmp
bound
inc
sub
push
or
cltd
mov
mov
mov
rcll
dec
pushf
and
or
inc
in
dec
lret
insl
mov
pop
scas
and
incl
mov
popa
aad
sbb
fsubrl
mov
lock
loope
mov
inc
mov
adc
dec
mov
and
cmp
in
out
jmp
int3
xchg
icebp
rcrl
mov
xor
bnd
pop
inc
cli
adc
cmp
aad
xor
xchg
push
insb
divb
pop
mov
add
adc
and
repz
fnstcw
lea
out
sub
adc
mov
xor
fildl
adc
fs
jge,pn
lahf
xchg
loope
repnz
xlat
addr16
pushf
mov
cmpsb
inc
stc
sbb
sbb
mov
mov
and
in
int3
dec
mov
aad
scas
mov
pushf
mov
inc
ret
sbb
cmp
mov
dec
add
subb
hlt
mov
jns
cmp
inc
xor
repnz
add
adc
xchg
pop
mov
aad
rolb
xchg
insl
movsl
pop
dec
push
mov
insb
nop
inc
or
dec
cmp
pop
and
sub
mov
add
adc
je
or
imul
sub
loope
jae
movsb
movsb
cli
out
or
daa
test
vpsubq
pop
int3
fldl
incb
in
imul
nop
sbb
add
enter
cmp
xor
fcmovbe
and
xchg
fisttps
and
out
inc
mov
push
mov
data16
test
or
sub
xchg
pop
mov
aam
xor
stos
rcl
fwait
inc
xchg
mov
into
pop
inc
shll
lea
nop
inc
xor
cmpl
pop
cmc
out
mov
ficoml
adc
hlt
pushf
or
pop
pop
mov
mov
lea
or
pop
xchg
add
icebp
add
xchg
dec
pusha
xchg
cmp
inc
adc
mov
pusha
push
dec
cs
xor
in
add
adc
xchg
jo
out
cmp
insb
cltd
push
fidivrl
ljmp
insl
arpl
aam
or
lds
arpl
enter
jo
xlat
std
lret
bound
mov
adcl
movsl
xchg
imul
std
fdivrl
jnp
ss
sub
into
sub
in
add
fwait
and
out
int
lahf
dec
push
inc
movl
fisubrs
dec
mov
and
out
jp
push
outsl
adcl
xor
call
jno
std
int3
inc
and
sub
mov
jmp
mov
aaa
push
test
loopne
jbe
adc
xchg
in
add
ficompl
call
fiaddl
shll
and
aas
inc
mov
jne
or
lcall
dec
out
pop
iret
adc
adcb
scas
push
mov
xchg
pop
xchg
xchg
dec
jmp
in
jg
jns
insb
sahf
sub
push
inc
bound
jge
xlat
out
lods
dec
adcb
dec
or
xor
adc
in
popf
leave
jg
aaa
loopne
cmp
xchg
movsl
je
and
pushf
sbb
jo
insb
insl
sti
pop
test
xlat
cmpsl
or
mov
ret
sub
and
mov
sub
jmp
cmpsl
cld
in
mov
lds
arpl
mov
popa
je
out
push
sbb
push
test
fsubrp
sbb
push
push
sarl
rcrb
arpl
arpl
rolb
icebp
add
loope
nop
shl
pop
push
xor
mov
push
dec
sub
sub
dec
push
hlt
ljmp
mov
mov
les
xor
jle
cli
icebp
add
mov
je
fistpll
sbb
mov
pop
mov
shrl
cmp
orb
add
push
es
push
dec
add
cmp
and
mov
stc
aam
dec
or
xchg
xchg
jp
dec
pusha
das
mov
push
or
xor
pop
std
lock
iret
add
jo
mov
mov
mov
pushf
cmp
mov
fisubl
mov
fisubs
and
outsl
sub
dec
xchg
pop
cs
push
sub
sbb
je
pop
xchg
aad
adcl
and
mov
stos
out
lret
mov
mov
fsubrs
fcoms
dec
add
pop
xchg
clc
sbb
push
pop
mov
push
outsl
jno
pop
or
ret
loope
ret
push
jl
testb
in
aaa
inc
shufps
cld
lea
fisubrl
xchg
and
jns
mov
dec
fidivrl
pop
add
add
pop
lods
cmp
das
addb
mov
mov
call
pushf
inc
mov
jb
adc
push
ret
push
jge
dec
in
add
inc
shrb
pushl
into
dec
lea
xchg
jns
inc
pop
cmp
mov
sbb
fwait
or
imul
cmpsb
sbb
push
dec
dec
in
push
testb
cmp
pop
fwait
push
mov
arpl
mov
cltd
ja
lret
mov
cmpsb
fdivl
ja
mov
leave
mov
mov
fimuls
idivb
divl
mov
cli
stos
scas
stos
lods
aam
or
mov
push
stos
aas
cmp
add
xor
adc
fldcw
call
pop
sbb
or
jmp
push
push
mov
mov
or
int3
lock
fstpl
jl
lods
mov
out
xor
lock
mov
jle
ja
adc
lea
iret
jmp
fiaddl
pop
ds
and
cwtl
add
jnp
mov
mov
repz
dec
mov
pop
push
dec
pop
jmp
or
arpl
scas
push
mov
leave
push
jno
dec
repz
fisttps
insl
call
sbb
sub
add
scas
ljmp
les
out
insb
pop
std
pop
sbb
pop
pushw
lods
xor
cmp
mov
negb
xor
push
cwtl
lock
je
pushaw
sub
ret
stc
movsl
mov
stos
push
les
ret
mov
fsts
pop
xor
outsb
cli
push
int3
fisttps
ficoml
push
mov
fstp
sarb
ror
leave
add
cwtl
push
sbb
adc
lcall
mov
into
ss
fdiv
cmpsl
jmp
sahf
mov
dec
or
dec
sbb
out
hlt
fcoml
sbb
shlb
push
or
mov
sub
push
add
jp
and
mov
cmp
int
add
fisttpll
mov
dec
xor
dec
cs
push
cmp
in
popf
inc
insl
sbb
leave
xchg
jns
filds
mov
or
adc
int3
cltd
jge
stc
mov
mov
mov
jecxz
setl
ret
aam
dec
mov
mov
repz
mov
test
in
adc
cmp
out
sbb
les
cmp
movl
push
push
loope
and
stc
push
cmp
repz
cmp
xchg
push
push
mov
mov
adc
out
out
xchg
jl
sub
loop
jl
xor
xchg
mov
lock
xor
out
mov
pop
repnz
xchg
add
ss
mulb
pop
or
enter
das
nop
jo
mov
pop
jbe
ficoms
icebp
dec
or
arpl
sbbl
lcall
mov
out
jb
dec
mov
das
in
xchg
cmp
or
fsubs
les
cmp
dec
mov
ljmp
sbb
push
shrb
lods
cwtl
mov
sub
xchg
cmpsl
test
in
popf
mov
adc
pop
cmp
jg
push
outsl
mov
jmp
mov
cltd
popf
adc
int3
sub
stc
cwtl
adc
mov
xchg
mov
jno
dec
mov
mov
adc
sub
xor
fidivl
out
ficompl
shll
jae
jae
addb
inc
fwait
rclb
mov
jecxz
inc
dec
pop
lock
pop
pop
mov
fiadds
push
xor
popa
add
test
mov
xlat
xor
icebp
add
test
iret
mov
inc
pop
repnz
popf
cmpsb
adc
dec
jnp
stc
cmp
mov
add
loop
lcall
outsb
add
hlt
fsubp
mov
mov
mov
stc
push
and
sahf
cli
mov
lds
fs
cmp
call
mov
mov
stos
xchg
cltd
test
scas
fmul
adc
xchg
sub
mov
push
cmp
mov
cmp
test
jg
repz
push
fninit
pop
fisttpll
adcl
ljmp
and
mov
cmp
pop
mov
lods
test
jle
lea
mov
mov
pop
leave
fdivrl
push
orb
inc
jns
add
ficomps
xlat
mov
xchg
test
cmp
cltd
pop
imul
int3
shlb
xchg
lods
dec
pop
out
push
insl
lds
aaa
clc
jb
pop
mov
nop
or
push
xor
lcall
roll
xor
lret
dec
pop
mov
scas
arpl
dec
fwait
mov
xchg
xchg
jmp
and
insl
fsts
mov
adc
and
jne
in
and
das
stos
idiv
mov
add
cmp
adc
mov
lods
lods
aad
mov
jmp
fcomp
add
sub
mov
subb
test
pusha
cmp
iret
inc
popa
in
sarb
mov
loopne
xlat
js
fnsave
or
fiadds
adc
and
roll
int
fwait
pusha
pop
nop
aad
je
ja
inc
jl
sbb
add
movsl
nop
pop
mov
push
rorl
inc
mov
push
sub
divl
sub
jae
ljmp
mov
incb
lods
mov
xchg
adcb
add
sbb
es
lock
out
adc
cmp
jb
jnp
scas
das
cmp
in
fwait
mov
imul
lds
adc
cmpb
sub
push
xor
punpckldq
mov
push
std
sahf
cs
xor
xchg
cmp
in
cmp
fidivrs
jno
mov
or
push
cmp
sub
pop
or
jne
pop
fdivrs
and
ficoms
jmp
testb
addr16
int3
loopne
xchg
in
inc
out
adc
dec
fistps
xor
ret
mov
dec
mov
jecxz
or
rcll
lcall
cmpsb
mov
jp
hlt
adc
lahf
in
mov
jle
sbb
xor
adcb
dec
sub
mov
inc
mov
xchg
call
mov
or
pop
mov
cmpsl
pop
adc
test
inc
sti
add
insl
or
mov
jno
push
mov
fld1
loop
aad
or
adc
and
xor
in
xchg
ja
push
cmp
lock
mov
hlt
or
mov
ret
arpl
out
daa
xchg
movsb
mov
sbb
imul
movsl
movsl
cmp
dec
scas
bound
rcl
fdivl
test
dec
das
subl
dec
je
out
or
and
xlat
repnz
unpckhps
add
imul
incl
sub
xor
scas
mov
das
xchg
enter
rcrb
mov
xor
cltd
int
push
mov
jns
ja
iret
push
mov
mov
mov
and
popf
addr16
std
pop
mov
jno
push
xlat
mov
frstor
push
fwait
std
inc
xchg
gs
ja
inc
sub
xor
ret
dec
jns
insb
dec
cmp
cmp
push
mov
pop
cli
cmp
outsb
lcall
push
dec
fldenv
sub
jp
jp
je
mov
or
fisubrs
mov
mov
sbb
sbbb
aad
out
dec
xchg
test
and
xchg
mov
out
movb
and
int3
pop
push
sahf
lods
pushf
cmc
pop
cmp
xchg
cmpsl
loopne
adc
jnp
fiadds
pop
cmp
loope
jno
and
fistpl
das
es
stc
sbb
cltd
movsb
movsl
rorl
xor
push
xlat
icebp
lret
mov
out
cmp
xor
int3
aas
std
vsqrtps
pushw
or
lea
adc
fildll
dec
jns
push
mov
xor
cmpl
mov
cmp
or
outsb
push
mov
ljmp
clc
gs
aaa
sti
dec
movsb
loop
pop
jae
aas
push
in
or
push
xor
or
es
inc
add
loopne
fidivl
sub
loope
mov
mov
mov
mov
std
cwtl
fadd
xlat
jge
das
aas
xor
mov
add
and
inc
jb
sub
int
dec
in
sete
sbbl
mov
adcb
or
xchg
mov
aam
ret
aam
push
mov
push
addr16
cwtl
adc
lock
shlb
jo
in
and
aad
cmp
mov
movsl
xchg
repnz
dec
xorl
mov
lea
pop
cmp
das
sub
jl
dec
dec
cli
add
dec
hlt
mov
ret
sub
cmc
test
iret
jne
sar
mov
jecxz
add
mov
mov
mov
dec
sub
mov
mov
add
jle
and
cmpsb
cmpsb
dec
add
iret
pushf
xor
push
jne
cwtl
shll
push
and
es
xor
addr16
lcall
mov
and
pop
insb
clc
and
pushf
aad
enter
fimull
dec
ret
xor
bound
push
jne
aad
data16
les
xor
mov
movsl
or
out
cwtl
cltd
leave
or
add
add
out
cld
aaa
or
mov
jecxz
iret
inc
cltd
add
addr16
xchg
cmpsl
and
xchg
loopne
dec
mov
add
ljmp
sti
insl
add
pop
dec
cli
pushf
cwtl
shlb
sub
loope
xor
and
lods
imul
add
push
in
push
inc
pushf
jge
dec
and
iret
dec
mov
inc
leave
xchg
jmp
xchg
into
jnp
mov
aaa
insl
adc
lods
aas
imul
mov
or
mov
xchg
iret
jbe
lahf
sti
push
test
es
cmp
mov
movsl
lcall
sub
xchg
pop
fcmovne
lret
faddl
mov
sub
cld
popl
mov
adc
cs
les
scas
call
int3
ja
movsl
jae
in
loope
test
inc
dec
xor
xor
pop
mov
mov
pop
iret
test
push
xor
test
jp
daa
faddp
pop
jbe
mov
jbe
jbe
mov
sbb
movsl
stos
jmp
mov
test
sbb
loope
push
or
bnd
push
jae
imul
clc
rcr
or
mov
jmp
push
jg
pop
sbb
xchg
dec
xlat
push
idiv
fs
ret
inc
clc
mov
ja
xor
pop
xor
cltd
fnstenv
stc
into
jp
fwait
arpl
into
lret
daa
mov
fcmovbe
pop
jne
add
jl
ds
js
adc
jne
daa
lods
lret
push
sbb
ret
mov
aas
adc
cmpsb
daa
mov
popa
sub
cmp
pop
dec
ret
push
and
add
movsl
ljmp
and
out
dec
in
mov
aad
decb
push
gs
inc
dec
sub
mov
jae
xchg
std
push
mov
out
enter
stc
add
outsb
jmp
cmp
aad
cmpsb
data16
cmp
icebp
mov
bound
push
lcall
sbb
pop
orl
xchg
pop
mov
mov
outsb
fsts
aas
mov
imul
and
jns
jno
jmp
jmp
push
inc
dec
push
mov
sub
sbb
iret
mov
sahf
mov
popf
les
out
jg
outsb
push
out
xchg
iret
ss
and
cmc
xor
xor
movsl
cmp
dec
push
sbb
aad
aam
or
dec
and
orb
push
xchg
add
loop
pop
test
add
push
adcl
mov
pop
lret
jecxz
enter
mov
nop
leave
fadds
mov
movsb
int
scas
int
je
fcomps
add
inc
add
fcompl
adcl
lds
imul
lea
cmp
in
fcomi
test
cmc
push
push
ficoms
mov
cs
lods
push
mov
call
add
cs
push
pop
xor
outsl
gs
loop
divb
pop
pop
jg
jecxz
sbb
fcmove
pop
mov
cmp
lods
fwait
and
insl
add
inc
pop
xor
mov
adc
pop
jo
jp
or
mov
push
dec
sbb
pop
movsl
fwait
out
arpl
mov
push
mov
jo
nop
sub
dec
push
pop
in
inc
add
cmp
xor
fs
xchg
pop
add
insl
add
stos
scas
adc
inc
lea
and
push
sbb
mov
xor
sbb
repnz
jl
add
mov
mov
jmp
mov
mov
xor
sub
rcrl
pop
and
mov
sbb
out
lret
xorl
vshufps
xor
ds
data16
es
push
dec
int
daa
loope
cs
mov
outsb
adc
testb
lahf
testb
shrl
cmp
cmp
sbb
mov
pop
xchg
dec
fisubl
stos
jg
inc
pop
fwait
pop
dec
xor
loopne
test
xchg
add
add
enter
jno
aaa
cmp
mov
daa
pushf
lret
xchg
cmp
arpl
add
pop
mov
mov
dec
mov
cmp
out
sbb
fucomip
aad
sahf
lds
mulb
aas
and
adc
pop
cld
lahf
mov
int
adcb
or
sub
mov
shll
stos
aas
lahf
pop
mov
sub
daa
mov
and
dec
jle
cli
stc
inc
add
into
js
sub
popf
jle
sub
dec
out
adc
push
xchg
or
push
xchg
ljmp
mov
pushf
jnp
and
addr16
pop
inc
fsts
fimuls
in
push
pop
adc
push
mov
insb
je
lcall
pop
adc
popa
push
mov
push
lods
xchg
pusha
mov
xchg
cmpsl
std
adc
inc
mov
jle
aad
aaa
jae
daa
movsl
jae
movsl
xchg
mov
jb
mov
push
inc
and
inc
and
sub
cmc
sbb
nop
mov
into
sub
fldenv
xlat
cmp
push
cmp
push
cwtl
out
adc
stos
sti
sti
pop
popa
jae
ror
mov
jne
mov
leave
push
and
inc
je
in
sub
mov
push
into
out
jbe
jg
loop
cmp
xchg
xor
out
jns
nop
in
aas
sbb
mov
mov
es
dec
inc
and
mov
push
and
aas
pop
adc
push
scas
adc
jg
mov
shll
cmp
or
mov
mov
cmp
outsl
pushl
dec
icebp
test
lds
xor
lock
dec
xor
test
into
sti
out
shr
jns
push
sahf
ret
in
dec
sub
xor
filds
push
ret
xchg
test
enter
add
test
lret
add
lcall
jecxz
pop
sbb
sbb
shrb
mov
mov
mov
and
cmpsb
and
hlt
pop
sbb
les
mov
sbb
mov
adc
jb
push
ret
insb
lcall
insl
bound
hlt
jl
jle
jecxz
je
jae
sub
xchg
cli
add
shll
inc
lods
stos
jmp
mov
mov
jo
mov
fiaddl
xor
jne
jmp
inc
adc
mov
push
jmp
ljmp
adc
jge
pop
push
jne
pop
and
xchg
fcmovbe
es
fsubs
mov
lcall
or
add
fidivl
in
pop
inc
jno
pop
mov
pop
sbb
pop
jbe
insb
mov
fwait
movsl
iret
test
xor
jmp
push
pop
in
pop
inc
cli
into
mov
insl
sbb
or
sbb
rcrb
sub
sbb
lahf
hlt
ja
shlb
popf
cmp
ficompl
rolb
or
xchg
stos
adc
or
cmp
adc
dec
mov
ss
add
mov
mov
jp
inc
adc
pusha
pop
and
pop
test
jb
xchg
das
mov
xchg
sbb
adc
push
push
push
and
icebp
cli
dec
xchg
std
in
pop
dec
mov
stos
ret
cmp
dec
mov
addl
dec
jge
leave
mov
push
xchg
or
in
aaa
jns
daa
push
jbe
cltd
add
bnd
fmuls
enter
ljmp
jl
xchg
jg
mov
sarl
aam
xchg
out
cltd
adc
scas
gs
lahf
mov
jbe
and
adc
lret
repz
push
adc
and
mov
stos
pop
test
push
sbb
push
push
outsl
push
jae
jo
or
repnz
mov
popa
test
nop
dec
int3
jnp
bnd
pop
or
loopne
pop
repz
mov
vpsadbw
mov
mov
jnp
daa
enter
adc
scas
aam
jge
outsl
jbe
ja
enter
movl
fists
push
mov
pop
add
movsl
sub
and
out
push
rcl
pop
jg
dec
aam
pop
mov
push
or
mov
mov
negl
dec
ficomps
inc
and
xlat
loopne
je
dec
sti
mov
dec
popf
daa
in
pusha
negb
enter
sti
scas
sti
push
loop
fnsave
rorb
xchg
sbb
test
shll
std
out
and
popa
jmp
jmp
fisttps
cmp
cmp
sub
mov
fs
lods
nop
orb
push
mov
xorl
lods
mov
inc
loopne
inc
ljmp
outsl
jae
add
pushf
mov
sahf
inc
mov
mov
dec
cmpsl
aaa
xorb
js
fisttpl
add
and
aam
out
xchg
pop
sti
aam
jl
mov
mov
cmpsl
mov
inc
cld
mov
enter
shlb
icebp
hlt
xchg
dec
clc
negb
imul
jmp
jecxz
incb
das
or
lret
js
lock
pop
daa
in
ret
cmp
cmpsl
sub
pop
mov
fsub
sub
xlat
mov
mov
addr16
mov
sbb
pusha
popl
loope
jno
mov
lds
jmp
out
push
mov
enter
dec
aad
imul
lods
loopne
xchg
test
dec
inc
push
pop
scas
mov
test
pop
je
adc
lds
lcall
jl
sarl
cmpsb
sti
xchg
subb
and
shrl
popa
fs
mov
push
or
imul
xchg
and
jno
jbe
out
adc
dec
testl
sahf
xorb
mov
dec
movsb
lcall
cmpsl
mov
push
dec
xchg
sub
pop
call
xlat
ja
mov
test
mov
sub
mov
jle
add
or
mov
mov
and
push
push
cmp
inc
gs
cmp
inc
push
push
sub
adc
pushw
mov
inc
adc
cld
cmpsl
adc
pop
xor
das
mov
mov
xor
add
out
push
sahf
mov
jne
fstpl
cmp
fwait
mov
sbb
out
movmskps
fdivrp
pop
mov
fstl
rorb
mov
std
loope
dec
lahf
sti
iret
push
out
stos
jmp
pop
jl
in
int
add
and
push
mov
loop
out
incl
pop
fldcw
xchg
enter
mov
jo
lahf
dec
nop
fisttpl
pusha
xchg
mov
xchg
imul
roll
jle
jp
jecxz
cmc
inc
aas
gs
or
out
test
cmp
adc
pop
gs
sub
jo
loopne
test
std
or
mov
into
jle
fnstcw
xor
add
add
jae
dec
sub
sahf
mov
add
loope
inc
loopne
add
lock
dec
gs
test
inc
jnp
xchg
push
rcrl
and
decl
mov
sub
xchg
pop
fidivrs
pop
cmp
cmp
lock
fs
movsb
fcmovu
adc
sti
test
xor
shll
repnz
scas
lcall
cmp
add
or
jp
jp
enter
pop
aam
or
test
sbb
popf
pop
imul
pop
sbb
fstpl
cmc
sarl
test
arpl
dec
xchg
hlt
out
movsl
cmp
sub
shlb
adc
mov
jo
and
mov
add
xlat
enter
outsl
pushf
lret
nop
in
addr16
repz
mov
int3
sub
add
in
cmp
pop
jge
add
lret
in
ret
pop
dec
test
ffree
adc
std
xlat
adc
sarl
xor
ja
jecxz
fsts
out
lahf
fwait
push
xchg
lock
scas
out
test
pop
add
outsl
jle
push
xor
imul
test
or
push
and
pop
inc
and
inc
sub
mov
sub
pop
push
in
rolb
xor
aaa
xchg
sub
pushf
inc
dec
mov
arpl
push
cmp
inc
mov
iret
inc
pop
inc
fbld
lds
inc
xchg
push
pshufw
lret
iret
outsl
idiv
xor
xchg
mov
mov
push
push
add
xchg
push
xchg
jo
sbb
cwtl
sbb
fcompl
mov
sub
sbb
jns
lcall
movsb
popf
fdivrp
add
mov
out
test
cmp
pop
jg
dec
cmp
xchg
mov
dec
adc
aam
loopne
add
aas
roll
cli
je
jne,pt
inc
jecxz
or
mov
rcr
cmp
sub
stc
sub
js
aas
pop
mov
dec
mov
push
test
jecxz
sub
loopne
xchg
mov
jnp
jmp
testb
gs
mov
test
adc
shrl
push
push
fisubs
fstp
mov
pusha
pusha
mov
sti
xchg
add
sub
loop
movsb
mov
sbb
jno
stc
mov
sub
lret
leave
lcall
xor
lock
inc
fldl
sbb
dec
sarb
xor
mov
dec
rcrl
sbb
add
xor
mov
std
pop
imul
mov
outsl
test
dec
inc
push
mov
pop
mov
and
insb
fstl
add
cmc
test
loopne
js
mov
push
adcb
or
ficompl
outsb
lahf
leave
bound
mov
loop
sub
hlt
divl
cmp
std
fdiv
cld
dec
rorb
outsl
xor
add
xor
scas
ret
dec
adc
or
dec
les
leave
or
mov
pushf
mov
popa
mov
loop
mov
xchg
lods
sub
jle
pop
pop
out
xchg
push
addb
push
jne
mov
jnp
aaa
idivb
sbb
mov
pusha
push
shlb
jge
js
imulb
js
test
std
bound
xchg
cld
movsb
sub
mov
adc
sub
ds
or
mov
ficomps
ret
movsb
ss
pop
mov
fimuls
adc
cmc
pop
es
inc
imul
dec
cmp
mov
or
mov
and
data16
scas
lods
insb
sarl
inc
pop
andl
es
or
pop
test
sub
js
mov
xor
or
fwait
mov
vcvtsd2ss
jle
xchg
int3
and
sti
ficompl
add
jg
shlb
add
push
addr16
dec
add
mov
and
push
lret
or
jg
add
insl
cmp
clc
out
mov
jb
sub
mov
in
dec
xchg
rcl
stc
call
imul
mov
dec
sub
popf
mov
xor
jns
cwtl
jne
ss
xor
loopne
sbbl
adc
out
es
jl
mov
sbb
push
mov
mov
xor
orl
cltd
xor
push
cmp
pop
ds
sub
pusha
nop
fnstcw
sbb
lahf
add
es
inc
jg
ljmp
fs
sbb
push
cmp
mov
push
outsb
cmpsl
nop
imul
cmpsb
xor
xchg
jg
xor
int3
pop
xchg
lret
repnz
daa
fcomp
fstl
pop
lds
and
into
jo
or
sub
and
and
xor
jae
pop
pusha
dec
xor
push
test
mov
sbb
inc
gs
sahf
pop
push
add
or
mov
xchg
in
int
jg
imul
adc
adc
jb
stos
push
adc
leave
push
adc
and
xor
add
push
lret
les
inc
dec
adc
test
out
movb
repz
nop
or
cld
xor
cmp
incb
lret
fstpl
ljmp
es
jnp
mov
idiv
shrl
fs
dec
or
mov
jecxz
faddl
xchg
jbe
cmp
sbb
mov
dec
aam
jl
and
and
push
je
arpl
dec
lret
out
mov
fcoms
int
pop
repz
mov
ss
sub
or
jp
lods
cmpb
pop
add
sbb
out
push
es
icebp
stos
in
js
or
mov
jp
js
xchg
stos
mov
lods
shrb
clc
repz
xor
xor
push
sub
cmp
aaa
jecxz
pop
es
int
rolb
or
sub
xchg
jmp
popf
ret
xlat
cmpl
mov
jecxz
insb
add
xchg
mov
push
je
scas
and
mov
jbe
dec
or
mov
addr16
add
mov
test
lret
xchg
lahf
sbb
divb
incb
push
popa
push
xor
sub
mov
sbb
lods
loope
push
lahf
fxam
femms
xor
lahf
jbe
loop
jmp
int
testb
decb
daa
jno
mov
xor
sti
adc
mov
pop
inc
fwait
rcr
xchg
mov
inc
adc
xchg
xorl
sub
data16
fmul
inc
pop
iret
dec
jno
add
scas
fnstenv
mov
cld
bound
push
cld
dec
inc
orb
movsl
or
pop
fnstenv
sub
jl
dec
mov
and
lock
fsubr
cmp
mov
xchg
xchg
xor
mov
mov
fldt
push
jp
jge
sbbl
rorb
or
cld
sub
push
push
push
adc
repnz
mov
aas
inc
out
sub
icebp
pushf
jb
jae
fs
push
pop
fwait
push
shrl
popa
cld
out
jbe
push
cmpsb
adc
ret
cmpsl
insl
int3
mov
data16
aaa
lcall
out
into
mov
mov
fs
stc
push
filds
arpl
cmp
jmp
jmp
inc
sub
aad
jns
pop
out
xorl
outsb
pop
mov
jae
faddl
btr
fisttpll
stos
popa
jecxz
adc
pop
ljmp
stos
and
repz
dec
push
out
dec
fnstsw
or
sub
xchg
cmp
notl
hlt
das
add
adc
testl
movsl
pop
mov
adc
bound
adc
cmp
fs
pop
and
push
into
lret
ret
insl
push
push
iret
push
xor
and
js
mov
and
data16
lods
mov
repz
into
clc
das
mov
jae
xor
adc
xor
cmc
data16
call
jnp
push
js
jbe
sbb
mov
in
clc
xchg
out
stc
adc
pop
push
adc
popa
cmp
mov
add
jp
adc
pop
imul
pop
lods
push
je
push
push
leave
sbb
pop
push
test
lcall
pop
pop
out
call
mov
dec
xor
aas
clc
addl
iret
mov
jnp
adc
scas
mov
les
aas
jo
enter
inc
mov
cltd
cwtl
cmpsb
xchg
iret
inc
jp
mov
pop
addr16
repz
mov
pop
mov
les
lods
lcall
push
jle
mov
mov
inc
xor
arpl
popf
ds
push
xor
dec
xchg
iret
pop
std
and
pusha
mov
nop
clc
xchg
popf
stc
test
mov
or
xor
push
add
fistpl
xchg
jle
std
pusha
sub
fldenv
into
add
into
xchg
pop
addr16
scas
hlt
jne
icebp
mov
mov
int3
xchg
pop
pop
in
cld
xor
nop
out
mov
mov
cmp
xor
mov
hlt
mov
dec
mov
lcall
cmp
xchg
sub
ror
jge
sbb
push
sbb
int3
ljmp
mov
mov
sub
jb
sub
pop
or
imul
ret
xor
push
or
adc
lods
mov
xchg
push
out
lock
fadds
stos
mov
enter
pop
and
inc
xchg
cld
shrl
push
aas
and
enter
xchg
lret
and
mov
repnz
mov
cmp
cltd
sbb
repnz
shll
mov
in
sub
add
in
xchg
pushf
fildll
cmpsb
mov
pusha
shlb
dec
or
aad
ror
and
pop
shlb
and
in
xor
push
mov
aaa
push
xchg
fistpll
sub
inc
mov
mov
bound
rolb
test
adc
mov
scas
xchg
push
lahf
mov
addb
or
mov
dec
jle
lret
dec
jbe
push
adc
fldl
adc
fcomps
daa
aaa
push
rclb
pop
push
lea
jo
jl
xchg
scas
sub
sub
fsubrp
xchg
mov
push
cmp
mov
xchg
xchg
shll
lahf
inc
adc
add
test
lret
or
out
adc
mov
mov
cmpsl
call
testb
cmc
push
iret
add
add
das
add
test
je
push
mov
mov
jg
xor
adc
pop
out
mov
pop
repnz
mov
inc
mov
int3
pop
xor
dec
jnp
dec
test
outsl
sub
mov
call
mov
stos
jbe
and
cwtl
mov
les
fst
xor
subb
jecxz
fs
repnz
adcl
or
push
and
sub
sbb
xchg
xor
xlat
xor
adc
lahf
out
sbbl
lea
pop
sbb
and
lret
scas
sti
ss
fidivs
imul
loopne
aam
aad
push
sub
jg
enter
mov
in
inc
mov
pop
lcall
adc
mov
lahf
push
gs
jl
aad
les
lock
sbb
enter
iret
pop
jl
inc
pop
repnz
or
roll
inc
sub
stos
int
mov
enter
add
js
pusha
loope
sub
xor
popf
mov
inc
scas
mov
mov
pusha
xor
test
mov
push
sti
roll
jle
cwtl
das
xor
add
out
xor
ret
inc
lret
pusha
and
gs
sub
in
lds
repnz
adcl
int
add
push
pop
cli
pop
inc
xor
fidivrl
adc
sub
push
jmp
je
test
mov
pop
mov
repnz
and
popf
jle
aam
hlt
inc
rcr
add
jno
das
mov
inc
hlt
adc
ljmp
xchg
jg
mov
fiadds
fdivrl
push
lods
movsl
add
add
lock
insb
mov
pop
sbb
inc
xor
daa
shl
outsl
or
lods
lret
lcall
je
and
or
sbb
mov
ljmp
jp
xchg
sbbl
arpl
add
cmpsb
les
pop
rolb
pop
aam
insb
sub
xchg
pop
sub
test
xchg
mov
out
mov
add
xor
jbe
mov
jnp
sub
insb
jecxz
aaa
push
cwtl
sub
aam
pop
sbb
xor
adc
lahf
roll
inc
jg
into
into
push
or
dec
js
scas
mov
jne
pop
dec
shll
jo
xchg
icebp
shrl
scas
dec
push
jecxz
inc
ss
out
or
add
cmovg
ss
sub
or
cld
inc
nop
mov
dec
cwtl
fsubrp
xchg
cli
adc
dec
js
lret
xor
inc
out
in
push
mov
push
shll
imul
mov
xlat
and
scas
add
cld
pop
push
jp
movsb
ljmp
lcall
fildll
dec
jecxz
and
negl
int
cmpl
push
repnz
iret
pop
inc
or
pop
jp
mov
xchg
popf
jbe
jge
out
sarb
xchg
shlb
mov
stc
stos
jno
lahf
mov
mov
repz
and
or
mov
aam
sub
mov
bound
sub
stc
adc
push
test
setl
std
mov
jnp
push
shl
push
dec
or
jo
jbe
repz
paddsb
push
fistpll
pushf
inc
pop
and
fsubr
hlt
pop
jo
dec
cmp
pop
sub
or
add
push
pop
cwtl
jecxz
in
cli
lret
sub
in
and
dec
insb
out
stos
push
jbe
gs
lods
inc
pop
cmp
sti
push
push
idivl
lods
popf
dec
xchg
lock
pop
in
stc
movsb
sbb
jge
mov
sbb
sbb
cwtl
push
xchg
add
and
adc
jb
push
fs
stos
jmp
lahf
push
xor
sub
mov
and
add
rorl
sub
ret
test
fcmove
ret
addr16
mov
in
pop
mov
push
add
mov
or
scas
jns
ljmp
shl
mov
sub
dec
std
inc
andl
cmpsl
gs
jnp
shrl
fbld
jge
aad
insl
mov
or
jp
and
das
jmp
mov
jno
xchg
pop
mov
int3
loope
mov
insl
inc
xor
inc
xchg
pop
dec
leave
sti
stos
cmpsl
adc
and
jne
inc
cmp
lret
fcoml
fcomps
jmp
jne
jge
xor
inc
xor
dec
xchg
ret
or
pop
sbb
ljmp
mov
push
pop
movsl
jno
mov
aas
ret
xor
xchg
flds
mov
addr16
pop
hlt
dec
in
std
jne
test
pop
xchg
sub
jne
dec
and
lods
add
sahf
inc
lods
test
xchg
lea
out
mov
call
add
and
jmp
push
orb
push
sub
jecxz
mov
jl
push
inc
jecxz
dec
jmp
adc
jg
push
mov
iret
fcmovnu
mov
call
mov
dec
ret
imul
inc
sbb
mov
sbb
jo
testb
lret
cwtl
add
add
insl
lea
xor
orl
xchg
popa
inc
clc
loope
pushl
lds
fisubrs
fldl
jg
sbb
push
fwait
dec
imul
xchg
jbe
loopne
lea
fisubrs
xlat
inc
mov
xchg
hlt
push
rorb
jns
cs
imul
test
andl
repnz
sbb
aam
bound
divb
outsb
popf
fdiv
rorb
sti
dec
filds
arpl
ss
push
pop
or
sbb
es
mov
xlat
inc
fisubl
xchg
idivl
pop
jb
push
aam
and
dec
call
xchg
mov
ds
stos
xor
sub
mov
enter
sbbl
xchg
inc
ret
push
hlt
mov
inc
pop
incl
fistpll
adc
sub
outsb
xchg
add
fistl
mov
cmp
cmp
arpl
dec
int
adc
sahf
inc
push
xor
adc
insl
stos
jb
mov
pusha
dec
sbb
ljmp
mov
lods
sarb
cmp
ljmp
inc
cmp
std
and
out
inc
sub
sbb
adc
dec
lret
jne
pop
mov
xchg
shlb
cmp
jp
popa
or
push
pop
mov
sbbb
and
popa
mov
ja
mov
jecxz
mov
mov
nop
adc
mov
inc
insb
xchg
daa
div
sbbb
es
clc
xchg
push
ja
add
pop
lds
int
push
push
std
pop
shll
dec
daa
add
push
cmp
dec
sbb
mov
fnstenv
mov
jne
bnd
mov
in
cmpsl
sub
add
mov
push
aas
out
mov
lahf
lahf
outsl
lahf
pop
or
jmp
sub
popf
inc
pop
jle
repz
fsubrp
aas
int3
test
test
jmp
into
inc
jbe
in
stos
sbb
dec
in
xchg
inc
or
xchg
call
sarl
add
dec
jmp
add
pop
dec
sub
enter
inc
das
pop
ret
dec
in
adc
or
push
leave
add
push
xor
inc
mov
aaa
and
je
jns
mov
adc
cmp
dec
or
or
aad
shlb
dec
cmp
sbb
pop
jmp
adc
ret
jae
push
mov
sbb
cmpxchg8b
outsl
pop
jl
je
sbb
or
sbb
inc
inc
dec
popf
test
sbbb
mov
clc
ja
push
cmp
in
cmpsl
lds
push
xor
xchg
repnz
mulb
iret
loope
aaa
xor
add
push
push
lret
sbb
shlb
add
pop
mov
in
xchg
push
and
pop
mov
jne
add
in
out
fmulp
xchg
enter
test
test
pop
pop
xor
scas
inc
nop
jno
lods
sbb
pop
inc
addr16
pop
push
sbb
pop
repnz
lret
cld
ss
jns
jns
mov
xor
lods
mov
in
mov
mov
jecxz
out
push
pushf
enter
je
repnz
cld
cld
xor
jno
rcrb
jge
pop
xchg
ljmp
les
xchg
out
mov
jg
pusha
xchg
xchg
mov
insb
or
pop
pop
jnp
jno
sbb
add
into
jl
add
mov
in
mov
aas
cmp
inc
xor
sub
adc
dec
push
push
ret
mov
into
jge
mov
pusha
imul
mov
aam
sbb
cmpsl
decb
movsb
add
or
push
xchg
pop
add
fistpll
sbb
ret
xchg
xor
mov
pop
and
in
dec
xor
into
clc
mov
cwtl
mov
push
xor
sub
fsubs
add
insl
roll
add
sbb
and
scas
adc
push
mov
lock
xchg
stc
rolb
push
pop
pop
adc
cmp
lret
pop
mov
add
dec
mov
out
push
daa
mov
pop
je
movsb
ucomiss
dec
mov
arpl
nop
add
mov
loop
addb
sub
clc
or
and
mov
lods
cs
repz
jg
push
rolb
jmp
lds
mov
cld
and
imul
jne
ss
mov
les
int3
iret
sub
fimuls
rorb
mov
sub
loopne
sbb
ljmp
lret
mov
add
sbb
int3
fbstp
cld
and
inc
fwait
mov
divb
lret
sub
out
aam
loop
ffreep
or
jp
mov
loop
fsubl
xchg
icebp
fwait
add
xor
popa
and
mov
ss
popf
jns
sbb
mov
jle
addb
jmp
popa
xor
ret
sub
lds
cltd
adc
add
fld
mov
sbb
cld
inc
movsb
mov
fmull
mov
int3
into
test
test
rclb
pop
dec
jno
sbb
sub
sbb
dec
xchg
mov
sahf
ror
add
sub
jnp
cmp
fnstcw
sbbl
imulb
and
mov
into
out
sbb
insb
in
sbb
scas
jb
out
xor
fbstp
gs
inc
xchg
pop
lret
pop
mov
sti
and
and
int3
loop
or
mov
ja
dec
push
cmp
xchg
icebp
pop
ja
and
arpl
in
sbb
sbb
jb
cmp
xchg
mov
sub
inc
jns
lods
lahf
sbb
aaa
cli
mov
into
sbb
mov
jno
adc
popf
ds
or
in
push
std
inc
mov
clc
xor
lea
outsl
jae
cld
lea
mov
fwait
imull
daa
inc
cmp
xchg
pop
add
and
mov
sub
mov
jl
adc
dec
test
call
jecxz
out
repz
xor
fs
sbb
cs
pusha
sahf
mov
cmpsl
clc
cmpsl
fildll
adc
pop
test
movsl
clc
aam
sti
das
shl
push
rcrl
or
push
sbb
pop
mov
cltd
lea
mov
test
and
sub
and
movlps
push
sbb
jg
jne
fbld
popa
jge
adc
inc
sbb
pop
pop
pop
jg
push
addr16
dec
int3
je
sub
jecxz
arpl
adc
out
aaa
into
push
and
pop
push
mov
xchg
loope
jp
mov
pop
jb
xor
fs
xchg
fwait
aas
call
push
cmp
xchg
test
or
adc
mov
xchg
mov
gs
jecxz
stc
and
adc
sub
lahf
es
xchg
dec
call
and
stos
pop
mov
adc
test
mov
stos
pusha
js
lret
and
enter
pminsw
sbb
sbb
sub
out
sub
mov
out
movsb
ret
sub
pop
sbb
cmp
sbb
xchg
pop
mov
into
fwait
outsl
js
jno
inc
adc
aad
cmc
pop
pop
rclb
push
push
jb
adc
inc
pop
inc
sti
enter
pop
add
xchg
pusha
lds
shl
fisubs
xor
dec
xchg
dec
jbe
pop
mov
sbb
cmp
cmp
out
into
push
mov
lock
add
leave
mov
clc
loope
push
mov
mov
xor
mov
sbb
push
mov
dec
lds
out
aaa
add
or
sub
subl
mov
dec
setb
icebp
adc
mov
jge
jmp
in
das
push
adc
jns
push
cmp
cld
cmc
stos
xchg
inc
inc
adc
or
fxch
inc
add
add
sti
cmp
nop
mov
xor
fimull
sahf
push
jp
jmp
das
dec
push
ss
shll
ret
push
push
mov
movsb
push
jge
push
jae
push
mov
mov
sbb
jmp
ret
cmp
test
mov
shll
shlb
fadd
inc
mov
pop
mov
adc
into
mov
fistl
enter
lods
mov
cmp
nop
jle
pop
dec
aaa
ret
xchg
in
xchg
push
xchg
rclb
test
cld
bound
mov
cmpsl
popf
fs
dec
hlt
stos
mov
mov
dec
ret
aam
lods
js
push
in
push
aam
aad
fisubl
lds
jg
test
jge
nop
nop
cmp
fdivp
outsb
sahf
mov
fs
fisttpl
lods
ret
push
movsl
cmp
hlt
jmp
mov
lods
xor
push
sahf
fwait
xchg
popa
mov
sbb
inc
jle
mov
call
xchg
pop
dec
scas
fimull
mov
xor
xor
xor
stos
stos
add
call
les
xlat
adc
mov
mov
push
stc
or
jle
push
push
repz
push
xor
push
jle
xor
sbb
idivl
or
sbb
loope
dec
jbe
pop
orl
push
or
or
sub
pop
pop
cmc
int
aas
push
ret
sbb
mov
xchg
and
shlb
pop
add
shll
fcmovnb
push
pop
lea
jl
xor
xor
jl
fbld
test
cltd
lds
negb
dec
imul
fldenv
xchg
into
rolb
mov
push
in
js
jge
cmp
lock
cmp
cmp
or
aaa
xor
adc
mov
int
pop
clc
lahf
xor
mov
pop
stos
pop
test
xchg
jge
subb
jp
pop
shl
loop,pt
enter
pushl
add
arpl
adc
out
test
lcall
out
enter
jmp
sub
cmp
test
cwtl
push
dec
xor
mov
cmpsl
lods
lcall
imul
mov
ds
jle
mov
je
and
inc
mov
lcall
and
aas
into
sarl
pop
nop
mov
lds
ss
mov
mov
leave
out
xchg
ficomps
xchg
adcb
lods
mov
mov
jno
inc
fsubs
js
call
sub
mov
jb
fnstsw
inc
je
cmp
loope
in
mov
mov
lods
in
pop
pop
mov
out
repnz
lret
aaa
fstpt
push
ds
pop
inc
test
imul
imul
mov
mov
aad
mov
ja
bnd
xor
into
jmp
xorl
int
mov
xchg
nop
movl
cltd
ror
sub
enter
rcll
xchg
in
jno
jns
cmpsl
repz
les
dec
sarb
and
outsb
cwtl
leave
mov
out
in
lods
sarl
inc
cmp
sub
or
sbb
int3
inc
pop
xchg
mov
inc
xor
stos
adc
jmp
popf
cli
or
icebp
das
pop
push
and
in
mov
sbb
aad
sub
lret
fcmovnu
xchg
xchg
testb
jp
inc
jne
push
add
movsl
mov
in
dec
or
adc
mov
xrelease
jl
stos
pushf
cld
jle
into
push
pop
outsb
jnp
in
arpl
mov
gs
push
jmp
sbb
test
es
xor
pop
jle
dec
cmpsl
scas
cmp
sbb
pop
dec
cmpsb
lods
fsubl
jmp
insb
cmp
jbe
mov
nop
and
loopne
cli
mov
das
pushf
incl
in
outsb
jns
fs
mov
int
xor
and
mov
and
mov
cli
pop
arpl
call
add
sbb
sbb
rcr
jno
daa
sbb
inc
mov
imul
xor
das
out
pushl
jp
mov
in
gs
or
inc
sbb
outsl
movsb
sub
jae
xor
imul
sbb
and
xor
std
cmp
fs
imul
out
jle
out
in
test
or
sub
push
add
jg
adc
sub
mov
loopne
fiaddl
inc
or
jne
or
icebp
mov
jo
sahf
testl
outsl
jle
cmp
testb
add
imul
xor
in
iret
cmc
ficoml
into
fwait
pop
mov
je
or
pop
cmp
adc
sbb
pop
daa
es
fsubl
or
hlt
in
jmp
subl
mov
out
insl
inc
call
push
adc
xchg
pop
mov
or
push
sahf
or
mov
ljmp
inc
test
mov
jbe
ret
xor
xchg
or
aad
xorl
push
mov
out
xor
jmp
and
pop
mov
cmp
int
jbe
mov
or
in
and
outsb
dec
mov
in
inc
pop
mov
jge
jne
fidivrl
sbb
jmp
ret
add
pop
push
repnz
test
sub
xchg
ret
mov
jl
out
rol
arpl
pop
pushf
in
es
daa
add
inc
mov
add
outsb
ret
notl
icebp
mov
or
aas
outsl
xchg
add
inc
adc
rclb
lret
ljmp
mov
sub
test
hlt
xor
inc
or
xor
insb
sahf
push
cmp
add
adc
push
lret
push
aam
and
rol
test
pop
pop
dec
ljmp
sbb
lods
push
inc
insb
or
dec
mov
mov
and
popa
mov
adc
popf
mov
inc
pop
mov
xchg
sarl
ljmp
dec
and
je
adc
pop
push
add
adc
clc
xchg
or
and
mov
je
mov
inc
sbb
jle
pop
addb
cs
fs
xor
mov
test
pusha
ljmp
int
mul
push
pop
mov
pusha
in
xor
sub
lret
mov
out
xchg
mov
je
mov
dec
jnp
mov
loop
shll
ljmp
sbb
out
push
or
and
mov
xor
push
test
sahf
jnp
jmp
daa
cmp
out
and
cli
sti
int3
sbb
outsb
aas
mov
or
fsubrs
pop
popa
jae
mov
scas
lea
sti
addr16
fstps
pop
fisubrs
cmp
in
push
xor
mov
adc
je
dec
jg
sbb
adc
mov
add
je
mov
sub
jge
imul
shll
sbb
int
jne
add
or
pop
sahf
les
mov
loopne
sub
lods
inc
enter
dec
ljmp
jge
insb
cmp
dec
dec
mov
mov
mov
les
xchg
jb
into
cli
jge
aam
in
popf
xchg
or
fwait
lahf
sub
jbe
mov
je
jne
and
add
pop
mov
cmp
lds
addr16
push
test
sahf
es
sub
pop
ret
pop
sub
cmp
inc
mov
daa
inc
push
pop
and
push
jecxz
sbbl
mov
xchg
lds
sbb
iret
push
sbbb
xchg
push
sbb
mov
das
mull
or
loopne
int
xor
sub
repz
sub
test
xor
jp
ds
popa
mov
mov
jae
mov
lret
jno
shl
cmp
dec
in
cmp
xchg
loop
cmp
push
inc
lret
into
pop
cmc
jecxz
push
jecxz
and
cmp
add
sub
rorb
divb
std
sbb
lahf
idivb
jmp
pushf
out
repz
mov
hlt
push
lods
lahf
mov
out
imul
aaa
cmp
arpl
sbb
dec
fnstsw
push
dec
xor
stc
mov
shr
in
sub
dec
inc
aam
in
add
loop
dec
fbld
mov
mov
sub
out
push
inc
je
rcll
mov
push
and
mov
mov
hlt
in
out
pusha
and
rorl
fwait
cs
test
and
mov
fstpl
adc
jp
cmp
mov
sbb
lea
cmpsb
pop
push
sub
pop
pusha
sub
jo
mov
mov
xchg
mov
fs
add
shl
inc
jo
mov
adc
or
shll
sub
jns
cmp
clc
xor
mov
push
insl
dec
cs
sbb
arpl
in
cwtl
in
xchg
movb
jbe
dec
or
jnp
jne
pop
jbe
sarb
push
inc
sub
jno
add
or
jne
fwait
sbb
cmpsl
mov
mov
dec
mov
mov
loope
jo
push
sub
scas
add
leave
and
xor
addl
addr16
popa
mov
js
sub
dec
sar
inc
push
push
or
mov
xchg
dec
add
xchg
xor
push
mov
fsubs
lock
test
adc
cld
pop
pop
out
ds
jge
in
lods
popa
push
cmp
sbb
cmp
push
jo
clc
test
or
cli
dec
ret
loopne
incb
orb
jo
adc
pushf
jp
and
mov
data16
or
dec
mov
mov
gs
adc
mov
push
les
in
jo
jnp
test
shlb
sbb
mov
jge
pop
hlt
add
js
inc
push
xchg
pop
mov
xorl
mov
scas
sub
and
inc
or
dec
pop
lock
or
mov
mov
xor
pushf
lahf
roll
loope
rolb
repz
dec
jbe
sub
cmp
notb
jp
jmp
iret
in
sub
dec
je
add
mov
dec
lock
lahf
or
xchg
rcr
iret
jle
sti
pop
out
jg
mov
cmpsb
ret
mov
cmp
mov
pop
scas
xorl
push
sbb
fimull
add
push
or
scas
shrb
dec
mov
repz
cs
scas
aad
mov
ljmp
xor
sbb
jl
out
mov
push
inc
inc
pop
jne
mov
gs
stos
dec
imul
xlat
inc
pop
mov
fsubrl
ja
aam
push
add
bound
int
add
rcrl
inc
in
out
cmp
sub
daa
movsl
jle
in
popf
lock
int
jbe
fwait
jne
mov
notl
push
inc
and
dec
xor
loope
mov
and
dec
push
mov
fs
mov
jecxz
jg
inc
jle
add
push
mov
xor
enter
xchg
and
dec
adc
push
test
push
sub
xchg
imul
fcmove
arpl
dec
movsb
movsb
fs
mov
xor
mov
jecxz
lods
loopne
or
aaa
sub
push
jno
inc
xchg
mov
mov
push
nop
sbb
std
test
adcl
mov
add
pop
sub
aaa
fxch
les
enter
insl
cmp
lods
subl
daa
lret
mov
jecxz
pop
xor
add
jge
cmpb
fnstsw
out
es
xchg
lea
enter
sbb
outsl
xchg
mov
pop
ret
xchg
pop
mov
outsl
icebp
sub
push
push
sub
add
fsubrs
inc
ljmp
mov
mov
addr16
shll
inc
mov
pop
iret
and
loopne
sbb
popl
test
or
cld
dec
jecxz
out
pop
and
rol
push
cmp
sbb
faddp
daa
popf
fistpll
adc
cmp
adc
jno
idivl
sub
lods
mov
xchg
xor
and
mov
mov
cli
pop
sarb
push
int3
jecxz
push
pop
mov
cmpsb
aas
add
sarl
push
sub
push
in
fwait
das
cmpsb
ret
addr16
or
push
dec
add
fs
scas
mov
inc
cmp
adc
ljmp
fiaddl
ficompl
sbb
addr16
cld
mov
lock
sahf
jle
jo
push
cli
sbb
dec
movsl
aas
and
test
mov
jnp
inc
pop
ss
scas
push
or
mov
iret
xchg
cmp
pop
xchg
lea
idivb
dec
dec
ror
pop
xchg
sbb
inc
insl
inc
int3
jb
push
xor
cmpsl
sub
or
inc
scas
out
lds
mov
fs
popf
loop
dec
sbb
pop
add
xchg
loope
jo
cs
movsl
sbb
adc
pop
movsl
and
pusha
cld
adc
movsl
cmp
cmp
xchg
test
sti
lods
test
ljmp
cmc
lahf
push
xchg
push
pop
mov
sub
fcoms
cmp
outsb
rorl
cmpsl
push
scas
pop
mov
sub
inc
dec
inc
pop
sub
into
test
dec
js
xorb
jl
dec
popa
leave
popa
inc
leave
jecxz
push
cmpl
lahf
icebp
mov
push
nop
je
into
mov
negb
dec
mov
or
mov
arpl
xchg
mov
out
push
xcrypt-ecb
cmpsl
mov
pop
aad
jae
adc
cmpsl
imul
iret
mov
fs
scas
rclb
push
adc
dec
outsb
push
lea
adc
dec
mov
fsubrs
add
sub
lds
ret
pop
popf
nop
imul
xchg
nop
adc
fwait
and
das
in
push
cmp
je
or
orb
jle
sbb
loope
jg
daa
jns
fmuls
repz
lods
adc
movsb
shrb
cs
or
pop
push
adcl
add
imul
mov
jge
aaa
scas
pop
and
or
mov
stos
pop
pop
sub
cmp
mov
pop
dec
cli
jmp
xor
or
jbe,pn
push
sahf
stos
test
pop
mov
sbbl
pop
sbb
rcll
ficoms
mov
daa
push
incb
pop
test
jmp
push
xchg
cmp
cmp
movsb
lock
hlt
lea
push
push
cmp
push
mov
arpl
push
inc
les
mov
cwtl
or
push
sub
xchg
mov
cltd
dec
push
jl
jmp
fdiv
push
xchg
addb
stos
iret
loopne
loop
xor
push
std
outsl
jl
cltd
cmp
xchg
dec
push
xchg
leave
dec
xchg
and
and
lea
arpl
or
scas
xlat
and
leave
daa
pop
pop
cmpsl
in
mov
sbb
cmp
enter
in
push
test
mov
ss
clc
jae
scas
cwtl
adc
imul
test
sbb
push
push
test
sbb
pop
jae
filds
lahf
mov
xor
adc
cmp
cltd
lea
push
idivl
xchg
cli
or
push
and
mov
ret
or
outsb
inc
shrl
and
dec
enter
sarl
jecxz
loopne
test
out
cmp
push
inc
xchg
movsl
clc
pop
and
xchg
add
rorb
xlat
inc
dec
dec
cmp
cs
jnp
imul
ret
cmpsb
pop
test
bound
push
push
out
loope
call
cvtdq2ps
cli
pop
inc
mov
mov
jo
mov
ret
lcall
dec
sbb
call
and
mov
leave
dec
test
fistl
out
pusha
add
fnstenv
fisttpll
xchg
movsb
and
les
lods
jecxz
or
out
mov
xchg
jns
and
js
sub
jae
lcall
jbe
sahf
adc
lods
sub
bnd
inc
outsb
out
andb
loop
mov
jmp
addl
insb
outsb
fisubl
ljmp
adc
inc
scas
push
jle
imul
add
out
bound
push
jnp
sub
nop
mov
sub
shll
outsl
stos
cmpsl
push
push
push
mov
adc
xor
dec
mov
insb
in
cmp
mov
ljmp
mov
pop
add
pop
pop
cmp
add
push
push
dec
pop
pop
jmp
mov
or
sbb
int
test
and
in
xor
sub
mov
imul
push
pop
call
mov
popa
sbb
fildll
xlat
nop
ss
pop
data16
mov
ds
cmp
popa
stc
ljmp
sbb
xchg
ss
in
fs
scas
dec
xchg
ljmp
cltd
sbbl
mov
popf
cmpsb
sahf
or
jne
push
jl
repz
test
mov
int
cmp
and
dec
cli
push
in
mov
cmp
push
scas
mov
in
jmp
mov
aas
xchg
ljmp
cpuid
dec
fwait
xlat
popf
mov
inc
arpl
jmp
outsl
jmp
fcmovnb
or
inc
adc
mov
sub
fidivrs
stos
jne
sbbl
or
lahf
jo
and
dec
mov
jmp
mov
lea
mov
shl
jecxz
push
das
std
test
ljmp
cmpsl
fisubrl
mov
frstor
std
ret
xchg
in
and
xor
aas
push
xorb
dec
pushf
mov
jbe
xchg
sbb
stc
or
adc
popf
sub
push
pop
push
xor
popf
insl
jle
and
inc
mov
mov
stos
in
xor
inc
sarb
fbld
stc
push
pop
pop
sti
sbb
inc
push
sbb
xchg
push
iret
or
jo
sbb
mov
lea
cmpsb
in
xlat
mov
nop
jno
sub
int3
movsb
cmp
xlat
das
push
rorb
ss
sbb
push
jo
mov
rol
push
pop
imul
lret
pop
arpl
cmc
cmp
xchg
call
out
jae
cmp
jbe
divb
mov
cltd
call
dec
sbb
int3
in
movups
movsl
or
addl
cmp
rcrb
pushf
fsub
fisttpl
pop
aam
loopne
add
stos
out
repnz
cmc
loope
shrb
sub
in
idivb
cmpb
in
push
repnz
ja
out
push
repz
fs
cwtl
sbb
jb
out
test
fstps
or
xchg
xlat
inc
pop
cld
mov
push
fldt
add
push
dec
fcmovb
and
push
shrb
inc
in
push
lods
sbb
loopne
loopne
mov
cld
and
or
inc
loope
andl
cmp
inc
pop
popf
stc
inc
in
add
xorl
lret
jne
out
add
pop
rcrb
push
dec
push
xchg
arpl
mov
pusha
adc
sbb
jnp
hlt
ret
cld
idivl
cmc
cmp
cmp
xchg
bound
lcall
push
test
xorl
cwtl
pop
out
xchg
in
pop
imul
pusha
lods
mov
xchg
dec
and
fistl
sub
in
jp
negb
out
xchg
icebp
mov
std
testl
mov
sbb
fisubs
inc
icebp
mov
jo
xchg
ficoml
cmp
and
rclb
lret
jge
pusha
push
ret
jb
ret
pop
enter
loope
mov
mov
xor
jns
dec
jecxz
iret
fwait
lret
inc
sahf
xchg
adc
pop
scas
test
add
call
div
sub
aas
xchg
dec
fdivrs
orb
xor
sbb
cmp
sbb
mov
call
mov
lahf
testl
jmp
arpl
mov
adc
lods
push
cmp
jl
xchg
lods
arpl
xor
nop
dec
or
dec
pop
loope
mov
sbb
rcrl
enter
push
lods
or
lods
aam
mov
xchg
or
clc
gs
stc
adc
cs
inc
push
mov
shrl
or
imul
aas
sbb
repnz
xlat
cmc
xor
cmp
faddl
pop
xor
inc
pop
pop
mov
jecxz
loope
mov
out
jno
and
cmp
lods
leave
pop
mov
icebp
pop
pop
and
push
pop
push
pop
pusha
inc
add
and
add
xchg
jbe
imul
mov
testl
fst
pop
push
daa
mov
xchg
aad
jnp
xlat
sbb
inc
jp
jae
inc
jecxz
leave
aas
jl
call
adc
hlt
mov
push
std
lea
mov
or
cwtl
mov
cmp
pop
cmp
or
in
pop
sub
pop
xor
loop
lcall
pop
xchg
into
xchg
mov
lea
xchg
add
shlb
cmp
xor
add
scas
inc
sub
sbb
inc
pop
mov
jb
dec
ss
mov
outsb
cmpsl
iret
inc
xor
fiaddl
hlt
mov
push
add
add
jl
mov
jmp
or
push
outsl
in
push
xchg
or
shll
lahf
out
in
pop
adc
ja
test
sbb
and
or
or
adc
pop
pop
adc
adc
push
aam
rcll
mov
sbb
cmpsb
hlt
loope
out
and
xchg
mov
push
pusha
addr16
mov
xor
loope
arpl
sti
insb
inc
insl
push
mov
push
leave
mov
xchg
nop
xor
mov
test
popf
lods
movsl
xchg
inc
lods
fs
repz
push
cmp
mov
add
fimuls
and
push
jmp
sbb
divl
pop
sbb
and
or
push
imul
movsl
xor
push
faddl
xlat
push
pop
test
lcall
loopne
or
xchg
ds
cld
aas
jne
mov
pop
lret
xchg
jp
out
arpl
dec
in
ret
xor
fwait
insb
xchg
pop
adc
dec
lds
daa
jns
es
and
sub
jns
lds
and
xorl
repnz
lcall
xor
hlt
int
sbb
inc
cmp
in
aas
push
ds
lods
cmpsl
dec
jno
icebp
push
fwait
cmp
or
and
pop
jb
outsb
lods
cmp
mov
add
int3
lret
sar
lret
ss
or
xor
and
dec
loope
pop
in
insl
cmc
arpl
inc
cmp
jg
shll
mov
cmc
jnp
push
or
mov
sbb
scas
ljmp
cmp
jl
xchg
stc
cmp
stc
outsl
cmp
flds
mov
jmp
xlat
es
outsb
clc
push
cmp
out
repz
std
lret
mov
mov
loop
adc
loopne
aam
dec
sahf
stc
stos
or
bt
stos
add
add
pop
jbe
dec
or
pop
testl
xchg
cld
sub
mov
xchg
pop
adc
loop
mov
mov
loope
cmpsb
mov
shlb
sar
mov
lds
leave
mov
sar
sbb
nop
sahf
arpl
data16
sub
pop
jmp
aaa
in
icebp
divl
filds
dec
das
fldcw
and
push
movsl
fs
mov
pop
int
int3
push
lds
arpl
sbb
repz
jns
inc
xchg
mov
mov
xor
arpl
mov
les
and
or
sbb
mov
in
push
int
lahf
fcomi
xlat
ljmp
aaa
sbb
stos
xor
sbb
scas
adc
mov
les
ret
inc
xchg
icebp
das
inc
jge
adc
ja
insb
push
nop
jle
inc
rcr
cmp
leave
xchg
jmp
push
xchg
test
add
jg
lods
mov
orb
les
or
add
mov
stos
xorl
add
loope
lods
repnz
rol
xchg
cmpsb
imul
mov
mov
mov
push
mov
iret
mov
add
lahf
jg
mov
mov
lods
lods
imul
inc
fistpl
daa
jns
mov
dec
out
pop
and
adc
jle
add
and
dec
sbb
jb
or
in
mov
xorb
lahf
popf
out
pop
mov
dec
sub
dec
mov
scas
cmp
scas
xchg
push
inc
repnz
iret
int3
sub
xchg
dec
pop
sti
push
dec
cmp
ret
mov
bound
mov
mov
adc
adcl
pop
mov
mov
test
xor
sub
cmp
sub
push
mov
orb
mov
aad
add
sub
jle
cs
inc
test
addb
test
sbbl
lods
push
mov
cli
pop
add
das
js
xor
and
mov
cwtl
dec
jmp
inc
push
mov
into
adc
pop
pusha
pop
push
jg
xor
loop
shrl
pop
sub
ds
xlat
mov
mov
mov
lcall
cmpsl
jns
js
sbb
pop
mov
or
jl
imul
ja
mov
in
jns
test
int3
and
in
jns
or
fcmovb
mov
dec
sbb
xchg
push
les
popa
cmp
int
fsubrl
insl
jmp
adc
mov
aaa
mov
lds
mov
clc
dec
pop
leave
cmp
rcrb
inc
rolb
in
pop
cmpsb
xchg
or
sub
pushf
repnz
sbb
int3
pop
pop
mov
test
sbb
jge
jbe
mov
pusha
jns
dec
push
sub
pop
xor
out
loopne
or
ret
mov
les
and
mov
inc
insb
or
lahf
addl
sbb
add
jo
imul
lock
jne
jbe
paddusb
pop
rorb
popf
xor
dec
cmp
mov
loope
popf
cmpsl
in
popa
pop
dec
icebp
pop
test
or
add
stos
adc
sbb
shrl
adc
xchg
and
jge
fisttpll
mov
fs
not
jnp
xor
or
test
orl
and
mov
cmpsb
adc
loop
sub
or
mov
xor
in
or
rol
and
out
inc
cmp
push
sbbb
es
or
adc
push
loop
bnd
jge
imul
pop
mov
popf
stc
xchg
fwait
inc
jg
xor
or
popa
loop
iret
jo
loopne
shlb
mov
iret
jb
dec
jle
xor
xor
daa
movsl
jno
shll
lcall
and
mov
and
push
dec
push
fstl
leave
add
push
add
and
sarl
out
xchg
arpl
mov
aad
pusha
inc
test
xchg
adc
sbb
test
shlb
mov
jmp
cli
call
aam
sub
inc
outsb
inc
or
pop
inc
inc
clc
mov
mov
inc
notl
push
ja
testl
cmp
dec
push
inc
testb
test
mov
adc
cmp
mov
pminub
jmp
mov
dec
int
mov
stc
and
gs
aad
jle
xchg
shll
adc
in
movsb
xor
jnp
lods
pop
out
jmp
mov
mov
xor
xchg
cli
in
jp
sbb
push
aad
or
testl
sbb
loop
sti
xchg
rorb
fdivrs
add
std
stc
inc
repnz
push
iret
inc
nop
enter
sub
gs
cmpsl
int3
call
jg
push
jge
nop
xorb
shl
out
test
arpl
xlat
xchg
fadds
out
jecxz
push
icebp
insb
mov
xlat
inc
xchg
jp
xor
popf
jecxz
mov
and
xchg
repz
xor
xchg
mov
xchg
cmp
ljmp
lock
push
ret
push
pop
and
jp
xor
lahf
pop
jmp
and
loopne
enter
stc
lret
cmpsl
xchg
popf
cmpsl
mov
aas
iret
xor
cwtl
addr16
xor
movsb
xchg
cs
jbe
pop
mov
inc
ljmp
mov
xor
mov
mov
rolb
popa
push
enter
call
adc
push
ret
in
aam
adc
sub
push
cmp
outsl
movb
outsl
shlb
inc
into
clc
sbb
dec
sub
lret
cmpsb
lcall
int
sbb
cmpsl
inc
xor
bnd
mov
xor
sbb
xchg
adcl
scas
mov
push
mov
in
lcall
sbb
mov
mov
cs
xor
jle
aas
orb
sbb
push
dec
cs
inc
lret
pop
fsubl
int3
scas
movsb
fcmovb
dec
rcl
pop
cmp
mov
lahf
cmp
xor
stos
xchg
fisubrs
punpckhwd
icebp
into
pop
pop
push
sub
std
sarl
in
bnd
mov
mov
lret
out
mov
sbb
sub
fs
push
fstpt
add
into
cmpsl
pusha
dec
imul
les
enter
mov
or
or
popf
gs
push
mov
and
jl
test
or
nop
lahf
jno
cmp
sti
adc
inc
std
jle
push
rcl
mov
xchg
enter
mov
add
cmp
fildll
or
in
test
pop
mov
sub
lret
add
test
fisttpll
mov
mov
push
pushf
xchg
add
andl
outsl
in
sub
adc
fistpl
test
dec
mov
mov
pop
cwtl
in
rcrb
dec
adc
or
stc
in
add
cltd
in
pop
fildll
add
nop
icebp
fldt
out
fbld
or
xor
mov
pop
dec
les
sub
mov
adc
or
pop
out
sahf
push
test
test
push
jp
lock
imul
aad
adc
push
push
push
pop
dec
mov
loop
inc
xor
dec
icebp
pop
out
dec
andb
ret
dec
xor
mov
mov
mov
test
mov
test
je
jp
xor
and
dec
iret
and
adc
cmp
mov
idivb
mov
daa
pop
test
mov
xchg
and
cmp
sbb
jmp
dec
xchg
sbb
push
fistl
int3
or
stos
mov
rorl
cld
and
scas
pop
add
repnz
sub
jg
or
push
mov
sub
div
push
jae
int
xor
inc
or
and
push
push
ds
fs
pop
lahf
mov
imul
mov
dec
sub
push
and
mov
xlat
lcall
and
icebp
popa
mov
pop
adc
dec
nop
cltd
mov
push
mov
xlat
rclb
mov
cmp
push
sbb
aaa
hlt
dec
mov
xchg
gs
jbe
std
cmpsl
mov
pop
std
icebp
add
add
add
inc
cwtl
mov
shr
jl
inc
andl
jg
repz
sbb
pushf
bound
push
inc
mov
sbb
push
mov
add
lock
and
and
out
mov
cltd
enter
sub
shrl
lock
xor
push
xchg
loopne
jns
xorb
cltd
lods
or
push
je
and
in
outsl
jno
test
xor
jp
xchg
addr16
xchg
cmp
jns
gs
inc
iret
repnz
add
jp
negb
and
mov
jo
fbld
push
outsb
fisubl
jbe
dec
das
jae
sbb
inc
mov
test
sub
fadds
jmp
fsubl
sbb
rcr
pop
sarl
stc
and
mov
inc
jb
mov
sbb
aam
ss
mov
sbb
cltd
pop
cmp
cmp
mov
add
xor
call
jno
stos
ljmp
push
addl
sub
sub
popa
inc
fxch
jecxz
xor
add
jge
sub
adc
jnp
xorb
or
sbb
orb
mov
out
aas
mov
push
xchg
sbb
and
jno
push
fisubrl
inc
ret
daa
pop
rcl
or
inc
xchg
dec
pop
inc
cmp
jecxz
js
sub
mov
enter
imul
push
xchg
call
repnz
add
pop
pop
ret
xlat
lahf
jno
push
mov
dec
mov
mov
loopne
out
push
loop
movsl
sarb
add
xchg
iret
push
mov
pop
xor
ljmp
push
push
outsb
loopne
pop
test
lahf
enter
fcomps
dec
jns
dec
hlt
mov
sbb
xor
or
das
jne
sub
or
jae
and
adc
inc
jo
cwtl
repz
lahf
js
iret
sbb
jmp
test
sub
xchg
frstor
cmp
jmp
push
popa
mov
enter
mov
imul
push
jp
ret
mov
and
nop
pop
inc
or
stc
mov
adc
push
mov
cmp
test
xchg
insb
bound
stos
push
or
mov
push
inc
cwtl
dec
cmp
cmpsb
jne
notl
inc
pop
adc
loopne
or
xchg
sub
nop
aad
and
dec
arpl
sub
arpl
cmc
xchg
jge
sbb
mov
cmp
jbe
lcall
or
movsb
nop
lret
add
mov
and
cmpsb
mov
xor
pusha
adc
and
std
cmp
mov
fwait
test
and
imulb
inc
adc
jnp
sbb
daa
lret
movsb
ret
sarl
xchg
out
xchg
cmp
mov
xchg
xor
imul
arpl
leave
pop
unpcklps
inc
dec
lret
sub
iret
call
inc
adc
orb
ss
data16
out
or
repnz
cmpsl
imul
movsl
push
cld
mov
jo
inc
dec
cwtl
aam
inc
and
ja
jge
push
aam
lret
call
mov
or
rcrb
xor
mov
add
jo
in
mov
push
int3
mov
push
lahf
mov
push
mov
pusha
rcl
ss
jbe
push
mov
js
pop
mov
pop
ss
sub
inc
je,pn
mov
jle
xchg
or
sbb
inc
pop
dec
in
sbbl
mov
xor
int3
xorb
popf
js
fcomps
add
rclb
inc
cwtl
xchg
cli
dec
int3
lds
jecxz
mov
mov
jge
xor
adc
xchg
sahf
test
cmp
dec
stos
js
xor
subl
adc
push
push
cmpsl
mov
jb
movsl
imul
repz
fldenv
dec
clc
pop
jle
push
mov
int3
sub
pop
jbe
lahf
cmpsl
push
cmpsb
sub
cld
aaa
dec
sub
jbe
jp
jno
sbb
mov
loop
xchg
ljmp
add
lods
or
shll
lds
pop
fbld
adc
sub
dec
movsl
loopne
pop
mov
insb
in
out
insb
sahf
and
arpl
adc
out
jg
xor
sub
pop
fldenv
dec
test
mov
movsl
jae
xor
bound
or
push
jl
bound
sbb
loop
and
cmp
into
cmpsl
jecxz
out
loop
mov
stos
pop
in
adc
sbb
push
dec
loope
lds
adc
or
adc
adc
pushf
data16
pop
fdivl
add
out
lea
in
jae
xchg
out
push
scas
lret
ljmp
fs
test
cmp
into
repnz
dec
shl
add
cmp
pop
or
push
aaa
sbb
inc
mov
in
sbb
mov
out
adc
adc
add
mov
mov
and
dec
hlt
pushf
add
mov
std
push
mov
inc
inc
enter
mov
push
xor
inc
rcl
insl
adc
loope
subl
add
sub
out
out
aas
mov
mov
xchg
sbb
movsb
jns
fcomps
mov
test
lret
in
pop
cs
xchg
lahf
and
xor
test
mov
enter
add
lds
decb
hlt
rclb
mov
cmc
outsb
jno,pn
mov
pop
pop
or
sub
add
ds
cmp
into
push
and
push
test
lret
insl
sub
and
jg
stos
gs
mov
cmc
inc
mov
mov
xchg
sbb
sbb
mov
and
adc
aad
sarl
dec
and
jbe
adc
and
test
push
mov
aad
or
aas
pushf
jo
fisttpl
pop
lahf
outsb
jbe
ds
mov
dec
sub
lock
aas
mov
lds
js
mov
daa
ja
mov
sbb
jno,pt
ss
dec
cmp
sub
mov
in
jmp
push
lret
mov
xchg
or
arpl
ss
aaa
mov
movsb
push
xchg
stos
lods
dec
es
arpl
lahf
jo
pop
cwtl
add
mov
mov
in
mov
sbb
lock
inc
pop
lret
iret
mov
inc
fldl
loop
inc
mov
imul
cs
sbb
jo
addr16
pushf
inc
scas
cmp
xchg
ljmp
pushf
push
imul
push
adc
cmp
cmpsb
jbe
sub
sub
or
push
clc
cmp
repz
ss
pushf
bound
pop
mov
mov
adc
dec
mov
push
mov
jge
cmpsl
ror
sub
das
xchg
jmp
hlt
dec
xchg
not
in
int
adc
test
push
xchg
inc
and
pop
mov
outsb
add
lea
ret
es
outsl
aaa
pop
dec
xor
lock
mov
dec
lods
rolb
mov
xchg
pop
enter
cwtl
adc
lock
mov
lcall
clc
adc
aam
dec
add
cmp
fidivrs
fmuls
outsl
stos
adc
add
in
add
test
dec
adc
xor
and
popa
int3
loope
pusha
cmpsl
pop
xlat
roll
xchg
mov
lret
adc
sbb
sbb
sub
loop
mov
mov
pop
xchg
xlat
xor
rcr
mov
jbe,pt
dec
sbb
fcomps
xor
mov
cmpsb
movsl
mov
iret
std
jle
dec
cmc
inc
mov
stos
or
mov
sbb
jne
push
pop
xor
inc
pop
rorl
dec
orb
add
out
in
adc
repnz
shrb
push
xor
notb
inc
xlat
ds
mov
add
in
jnp
pop
xor
jle
ret
mov
addr16
push
stos
inc
mov
inc
push
std
scas
or
daa
push
and
cmp
sti
les
mov
lcall
iret
mov
mov
xor
mov
sahf
lea
jge
repnz
sub
push
mov
jp
sbb
fsubl
xlat
pushf
pop
mov
mov
lods
xchg
clc
pop
bnd
mov
out
mov
andl
sahf
ret
mov
jle
mov
fnstenv
mov
adc
fstps
push
and
mov
dec
in
and
addl
jbe
loop
gs
aaa
jmp
adc
add
xchg
ss
push
push
jl
ljmp
dec
loop
push
ret
leave
test
adc
mov
in
push
lds
ret
inc
fnstsw
das
cmp
xchg
sbb
sti
cs
and
sbb
pop
or
push
add
jg
pushf
dec
lods
push
push
mov
mov
inc
aad
pushf
jae
scas
xlat
mov
and
addr16
xchg
xor
sti
xchg
mov
mov
and
fs
lea
call
in
test
out
inc
test
lar
mov
mov
cmp
fldt
es
in
sub
jmp
stos
mov
stc
jnp
mov
sar
arpl
cli
andb
pop
enter
inc
pop
dec
test
ret
mov
push
mov
sbbb
and
andl
push
ficoms
cltd
and
jp
outsb
dec
test
aad
and
add
jecxz
and
aas
stc
das
mov
adc
xchg
jne
adc
add
push
out
push
clc
xor
sahf
cmp
lahf
push
nop
imul
pop
cmp
mov
das
aad
dec
pop
shll
int3
sbb
pop
cmp
rcrl
repz
mov
loope
pop
push
mov
dec
mov
sbb
add
pop
sti
movsb
adc
dec
pop
add
es
or
mov
les
jle
inc
adc
mov
mov
pusha
mov
call
sbb
push
mov
lds
ja
mov
or
iret
loopne
xchg
add
inc
popf
sbb
test
jmp
pop
movsl
pushf
push
sahf
mov
rclb
rorb
lahf
ret
push
rorb
aaa
scas
faddl
pop
xor
and
adc
add
fcmovnu
pop
dec
push
loop
jns
hlt
sbbl
fcompl
inc
int3
xor
addr16
mov
cmp
mov
pop
std
out
idiv
shrb
mov
enter
add
mov
mov
cld
scas
sarl
std
pop
cld
cmc
dec
add
dec
mov
xchg
add
ds
cmp
jge
xor
outsl
aas
lds
xor
fisubs
ss
push
mov
inc
loop
cmc
add
pop
xchg
push
dec
ret
push
inc
out
nop
xor
in
nop
dec
ja
adc
loope
adc
or
push
or
mov
pop
push
pop
addr16
and
test
cmc
mov
jmp
dec
jle
mov
mov
cmp
jno
sub
mov
fmull
adc
push
roll
imul
mov
dec
mov
mov
xor
or
sbb
adc
outsb
mov
insb
xchg
std
ds
test
adc
jmp
aam
shr
sub
push
or
pop
in
pop
xchg
jbe
repz
in
sbb
inc
insb
popf
nop
jg
popf
push
pop
shlb
aas
enter
push
mov
mov
pop
orb
push
je
mov
fimuls
cmpsb
xchg
int3
sti
js
movl
les
cmp
mov
mov
iret
or
stos
fnsave
out
push
inc
inc
lret
add
mov
adc
inc
sbb
pushf
daa
dec
arpl
mov
lret
xor
cmc
push
jp
scas
loope
imul
scas
icebp
xchg
inc
dec
test
sub
stc
push
loop
adc
and
data16
xchg
in
and
aad
xchg
inc
push
daa
push
into
xchg
fcomip
mov
cltd
stos
outsb
push
imull
outsl
retw
sbb
mov
mov
rcrb
add
shlb
gs
sbb
mov
jb
or
fidivrs
cli
mov
dec
mov
fnstenv
jle
out
ds
cmp
and
pop
mov
sbb
xchg
xchg
sbb
in
inc
cmp
ret
push
push
stos
lods
mov
fisttps
cld
mov
inc
adc
sub
fwait
add
push
sti
dec
xor
mov
lea
mov
ja
mov
insb
fwait
or
sub
stos
mov
jge
cmp
aad
mov
and
jle
dec
enter
mov
jno
and
xchg
gs
sbbl
ficompl
jmp
iret
stc
add
cmp
cs
xorb
cmp
and
pop
push
shrb
je
dec
adc
aad
xchg
push
cmp
movsb
xchg
out
lcall
sbb
xor
insl
xor
or
stos
repnz
iret
popf
lahf
lret
jge
cld
test
sbb
cmpb
adc
stos
popw
in
call
pop
xchg
out
push
push
mov
inc
les
and
icebp
lock
mov
fwait
lds
insl
int
adc
inc
add
jg
add
enter
call
jp
insl
jns
add
push
out
fdiv
sarb
jp
or
mov
xchg
lcall
cmp
ret
stos
sub
jge
or
adc
pop
loope
aaa
pop
out
mov
fnsave
mov
and
cmpsl
das
add
loop
jbe
xchg
in
sahf
dec
vcomisd
dec
mov
push
aas
mov
jno
jo
fildl
push
jns
mov
in
and
xor
jg
fwait
cmp
fldl
and
mov
and
xchg
imul
cltd
scas
or
shll
cmpsl
std
out
xchg
inc
inc
inc
lods
ljmp
jbe
sarl
mov
movsl
pop
mov
outsb
cld
adc
iret
inc
mov
xor
pop
push
dec
andb
mov
aam
stos
fcoml
sub
push
loop
lock
pop
cs
stos
jp
dec
dec
scas
sbbl
jo
pop
add
incl
divl
and
sub
dec
mov
jns
and
sarl
into
nop
inc
in
mov
scas
loopne
cmp
mov
nop
adc
xor
lods
cs
test
outsl
dec
ss
jge
inc
ss
out
mov
test
in
daa
xlat
insl
jb
mov
rcll
cmp
popf
rolb
mov
rorb
adc
push
or
in
divb
cmp
arpl
sbb
xchg
jl
jb
xor
inc
mov
lret
jmp
repnz
xchg
scas
shrb
mov
sbb
int3
cmc
loope
icebp
add
popa
sahf
xlat
mov
iret
xor
subl
sub
stos
insb
mull
int3
fs
inc
add
out
out
cmc
cmpsl
or
dec
pop
and
mov
pop
outsl
mov
test
push
sub
js
hlt
fstp
adc
xchg
scas
dec
pop
jmp
jle
into
data16
mov
das
inc
fbstp
xchg
rorl
mov
push
outsl
or
mov
add
mov
stos
dec
in
les
pop
xchg
test
ss
cltd
addl
jge
es
sub
fmull
js
cs
pop
call
in
test
pusha
mov
in
pop
ficompl
sbb
and
pop
adc
and
insb
xor
cmp
xor
in
out
fildll
pop
mov
add
and
stc
pop
iret
pop
xor
repz
subb
out
adc
fldt
es
ret
scas
push
fmull
int3
dec
outsb
aam
xchg
and
aad
stos
mov
pusha
jp
xchg
in
mov
sub
aas
shll
popf
xchg
pop
hlt
and
inc
push
cmp
sbb
adc
inc
loope
std
and
add
repz
push
mov
push
xchg
imul
pop
mov
fstl
jle
jns
fldt
je
stos
mov
aad
inc
sbbl
dec
cltd
aaa
test
mov
shl
clc
bound
sar
rclb
inc
es
ret
dec
decb
jo
test
jnp
push
je
and
stos
push
mov
jnp
lret
inc
jl
mov
cmp
inc
popf
xor
in
xchg
sti
jle
out
inc
lock
push
jb
scas
das
sub
xchg
stos
push
cmpsl
pop
adc
and
mov
ds
mov
sti
loop
push
sbb
cmpsb
jg
and
jbe
and
mov
subb
fsts
repz
es
or
sub
xor
clc
add
out
lock
int3
sbb
xchg
call
les
dec
lock
xchg
xor
sbb
sub
in
mov
xchg
and
in
in
sti
add
push
jmp
stc
sbb
sbb
daa
stc
inc
sbb
pop
mov
cltd
push
pusha
lock
xchg
cmp
aad
enter
xchg
in
out
pop
cmpb
adc
test
cmpsl
lods
sti
in
loopne
fsub
cwtl
xchg
fsts
lret
testb
mov
push
int3
push
fcomp
rcrb
add
dec
xor
cmp
dec
sbb
xchg
or
not
mov
mov
sub
mov
push
shlb
cmp
enter
jnp
dec
sbb
test
int
jb
int3
pop
mov
and
rcll
sbb
jbe
fcoms
lea
sbb
mov
es
xor
loop
addr16
hlt
jns
cmp
or
cmc
insl
loope
xchg
or
jle
lock
add
addr16
dec
ds
out
cld
faddl
dec
lret
decb
cli
scas
movb
idivl
lds
inc
es
fldcw
roll
push
jp
imul
or
jbe
fstpl
lock
scas
cld
popf
mov
rorb
jns
xor
fucomp
fstps
rclb
stc
mov
inc
cld
les
push
dec
and
daa
scas
lahf
jo
enter
mov
js
inc
stos
popa
add
jmp
mov
das
and
dec
cmp
ret
les
div
lock
and
pop
fcoml
mov
out
lret
leave
jbe
enter
movsb
mov
push
jb
popf
mov
push
pop
dec
out
add
jns
and
sub
push
cmp
lock
adc
test
cmp
mov
ds
mov
xorb
mov
pop
mov
testl
xchg
out
imul
iret
pusha
sub
insb
es
jle
dec
pop
testl
add
leave
sub
sub
jae
sbb
hlt
xor
sbb
sub
xchg
sub
outsl
xchg
popa
dec
mov
xchg
fiadds
xor
into
push
cld
xchg
xor
std
inc
adc
movsl
jmp
js
ds
mov
pop
jmp
fdivl
pop
mov
sbb
test
xchg
test
test
and
fmull
mov
repnz
xchg
pop
cs
push
ds
cli
mov
mulb
shrb
mov
mov
pop
adc
mov
mov
mov
es
xchg
daa
mov
in
mov
mov
shll
ja
jecxz
xchg
orb
sti
in
push
jmp
and
sub
sub
mov
jae
sub
shll
data16
add
mov
fildl
pop
add
psrlq
jns
enter
sub
in
fcom
push
cmp
dec
out
aam
in
ret
inc
in
or
div
in
or
pop
into
imul
mov
rcll
cmc
imul
imul
andl
adc
mov
xchg
fst
inc
jbe
add
dec
or
int
mov
jno
in
push
scas
rcr
push
dec
mov
or
lahf
in
xor
adc
dec
insl
sbb
mov
out
xor
enter
jg
in
arpl
sbb
fdivrs
fcoml
jmp
pusha
movsl
lea
sbb
push
faddp
push
xor
sub
mov
push
incl
adc
mov
scas
lret
mov
stos
cmp
xchg
out
and
xor
arpl
outsl
sbb
insl
adc
xchg
int3
sbb
daa
mov
adc
scas
mov
xchg
loopne
in
xlat
inc
add
push
cmpsb
mov
iret
mov
scas
cltd
xorl
add
mov
push
mov
and
dec
out
fdivl
std
repnz
lock
jl
cltd
sbb
jo
test
loop
pop
dec
data16
cli
jb
or
ljmp
fstl
cwtl
nop
add
and
imul
loope
test
outsl
push
or
mov
sbb
or
adc
addr16
pop
mov
pop
mov
lcall
cli
in
cmp
inc
mov
or
arpl
jle
adc
rclb
sahf
inc
xor
dec
adc
inc
inc
mov
int3
xchg
scas
outsb
push
lret
jnp
sub
add
pcmpeqd
mov
sub
out
mov
push
mov
cltd
push
call
stc
push
jns
sbb
divb
cmpl
in
aam
cli
shll
fcmovnbe
rolb
cmpsb
or
mov
inc
shl
frstor
test
loop
sbb
xor
mov
test
and
les
mov
rol
sarb
dec
push
mov
mov
jo
mov
leave
test
out
pop
into
mov
jecxz
lcall
sub
testb
stos
cli
and
dec
pop
and
dec
inc
pusha
popa
or
mov
inc
dec
mov
xor
fisubrl
scas
clc
inc
xor
add
jns
jl
das
jne
pop
out
dec
repnz
test
rcll
imul
pushf
xchg
fwait
js
mov
sbb
jnp
cmp
push
dec
sbb
sbb
xchg
scas
repnz
mov
rorl
dec
sar
ret
and
mov
adc
jl
dec
cmp
test
adc
imul
mov
lea
lcall
mov
cld
pop
aam
pop
xchg
mov
das
mov
lret
jne
mov
push
orw
mov
pop
mov
dec
add
orw
ja
sbb
fistps
call
aas
call
int3
lea
mov
push
push
mov
icebp
adc
js
jmp
sbb
call
out
rorb
adc
push
ljmp
test
inc
pop
xor
mov
dec
mov
xchg
mov
fldl
repz
pop
les
xchg
inc
js
cmc
sbb
xchg
test
sbb
lret
cmp
fstpl
fcmovnb
xchg
cmp
adc
ret
jle
sub
scas
jne
sub
cltd
mov
aad
and
punpckhwd
or
push
enter
cwtl
lret
dec
outsl
mov
idivl
cli
sbb
sbb
cli
sti
push
pop
testb
shlb
mov
jecxz
js
and
repz
faddl
pop
insb
fidivs
mov
aam
test
push
mov
xchg
xchg
mov
pop
dec
in
xchg
roll
mov
jbe
dec
jo
adc
add
aam
add
sbb
rolb
cwtl
jge
inc
dec
out
pop
xchg
mov
xchg
xchg
aad
movsb
push
mov
mov
pop
pusha
pop
jae
rorb
jl
test
std
negl
inc
popf
test
cmp
push
pop
loopne
repz
dec
mov
scas
xchg
add
sbb
mov
push
jb
push
ret
iret
inc
test
xchg
mov
mov
jo
insb
mov
sbb
sub
out
dec
sbb
jecxz
fsubl
dec
and
add
add
stos
insl
ds
jge
subl
xlat
xor
xchg
or
add
push
idivb
imul
jecxz
test
sahf
sub
lahf
dec
push
out
dec
xor
test
cmpsb
xchg
mov
xchg
jne
add
mov
mov
shll
lea
cmp
pop
cli
scas
mov
jle
and
cmp
inc
push
xchg
xorb
insb
insb
or
jae
cmpsb
mov
add
arpl
pop
inc
cmpsb
push
imul
rolb
ljmp
fmuls
negb
into
sbb
cltd
test
xor
push
call
add
cmp
xorl
lahf
sub
hlt
push
or
mov
aas
adc
add
push
ret
insb
scas
mov
xor
and
icebp
or
mov
fcmovbe
dec
arpl
add
fistps
and
shll
add
lods
repz
mov
and
jmp
in
xchg
ja
pop
dec
mov
adc
call
fmull
dec
pop
xchg
push
or
pop
cli
lahf
insb
mov
push
jnp
hlt
leave
faddl
icebp
mov
xor
leave
iret
and
packuswb
mov
aaa
jmp
pop
mov
movsl
jno
lahf
int
jg
inc
sbb
out
int
mov
js
pop
add
jl
int3
in
sub
dec
ret
out
cltd
push
push
jnp
pop
fsubrs
jns
or
stos
add
mov
outsl
add
cwtl
inc
mov
cmpl
data16
pop
dec
fstl
int
out
add
movsl
mov
xlat
mov
insb
jg
xor
imul
pop
pop
lahf
repz
jb
cld
xor
pop
pop
adc
aaa
push
insb
sti
inc
mov
in
xchg
xor
push
int
in
jo
jae
into
mov
pop
loop
mov
pop
call
cmpsb
xchg
xchg
aam
cmp
jno
xor
fsub
add
fisubs
sub
lods
je
in
ja,pt
cmp
or
dec
sub
xchg
xor
cmpsb
jne
adc
push
jo
fs
add
pushf
fildl
or
and
ja
popl
outsl
adc
popa
into
aad
and
mov
add
in
iret
xchg
iret
out
jae
pop
icebp
mov
gs
lahf
cwtl
ret
testl
xchg
mov
iret
and
out
cmp
adc
popf
faddp
sbb
ds
and
cmp
mov
in
or
repz
jge
add
push
dec
leave
inc
dec
fs
fnsave
or
push
cmc
hlt
push
adc
mov
pop
lods
xor
xchg
frstor
xchg
push
or
subl
mov
pop
xchg
out
xchg
push
insl
pop
loope
mov
stos
aam
pop
xor
test
sub
inc
int
inc
pop
add
notb
pxor
fisubrl
aas
int3
imul
inc
mov
mov
loopne
push
and
lahf
cmp
xchg
push
mov
pop
push
cmpsl
bound
fisubl
xchg
mov
sub
xchg
inc
jg
mov
aaa
insb
adc
std
pop
and
pop
shlb
mov
lods
mov
fstpl
inc
and
movsl
xor
call
lods
mov
ja
imull
popa
mulb
sbb
notl
sbb
fsubl
repnz
sub
jmp
inc
sbb
or
or
lods
loope
and
sub
cmp
inc
xchg
aam
popa
movsl
stos
lcall
inc
push
xor
sub
inc
cld
jne
jae
pop
ja
push
xor
fadds
jb
pop
mov
shl
mov
inc
add
enter
push
pop
pop
movsl
stos
adc
xchg
lock
daa
bound
mov
clc
fwait
inc
inc
mov
or
pop
loop
in
add
push
iret
ja
push
out
cmp
std
dec
inc
roll
les
fnstcw
sbb
sub
mov
fwait
fs
inc
jl
jbe
dec
or
pop
adc
sub
int
adc
inc
mov
insl
xchg
pop
lret
test
shlb
sti
out
push
inc
fstps
les
lea
pusha
sub
mov
lcall
stos
push
cmpsl
imul
mov
fldenv
jg
and
inc
mov
dec
fcomp
dec
in
fisttpll
sub
jnp
push
push
int
jns
ret
mov
outsb
dec
rclb
fdivrl
das
xor
test
sub
repnz
pop
ljmp
cwtl
aaa
insb
add
xor
mov
pop
sbb
jne
jg
enter
hlt
fdivs
psraw
loope
cmpsb
loop
xchg
dec
in
push
pop
shlb
sbb
mov
cmpsl
shlb
int3
mov
rcll
pop
outsb
repnz
push
ds
pop
cmc
adcb
xchg
sti
jecxz
jle
jb
jns
xor
sbb
fsubl
insb
push
dec
cmp
iret
mov
mov
pop
sub
popa
fisubl
xor
push
pop
hlt
inc
push
push
mov
sbb
adc
sbb
sbb
lahf
fisttpll
xor
ljmp
out
out
dec
or
rcr
xor
pop
test
es
sub
scas
cltd
and
jae
das
test
aad
movsb
mov
loope
scas
imul
sbb
adc
adc
xchg
pop
sbb
sub
add
adc
cs
or
out
daa
mov
or
repz
out
std
rcr
aaa
mov
lods
xchg
push
adc
xchg
jl
push
out
stc
movsb
pop
inc
scas
lods
cmp
xor
ror
call
xor
adc
add
shrb
aad
stos
or
lods
aam
pop
sbb
negl
ret
cmp
cs
test
ja
pushf
and
iret
or
icebp
dec
adc
cs
fimull
add
inc
fstpt
dec
sbb
adc
insb
or
mov
pop
jb
aaa
cmp
adc
mov
mov
lcall
sub
lds
push
pop
mov
pop
cmp
xor
notl
xchg
lahf
movsl
lods
je
icebp
cmp
cltd
pop
cmp
mov
pushf
aad
cmc
js
xchg
arpl
sub
adc
hlt
movl
outsl
int3
jb
mov
dec
xchg
test
clc
adc
xchg
or
rcl
ljmp
stc
xchg
clc
pop
xchg
push
push
clc
mov
push
pop
stos
lods
imul
jne
aam
out
mov
hlt
cmp
xor
insb
stos
lods
and
mov
push
dec
jg
xchg
adc
or
xchg
xorb
movsb
mov
nop
cmpsb
insb
fdivrl
aas
ljmp
je
jl
dec
dec
dec
sub
imul
mov
fs
jmp
pop
mov
jmp
insl
mov
int3
aaa
jecxz
cmp
aad
leave
test
fmul
int3
loop
dec
dec
mov
adc
xor
rclb
sbb
out
aas
icebp
mov
shrl
adc
outsl
test
psubusw
add
inc
sub
pop
push
adc
std
enter
aad
sbb
and
xchg
pop
mov
mov
xchg
mov
scas
nop
inc
lret
das
sbb
mov
cmp
nop
push
out
pop
dec
cld
pop
dec
mov
mov
sbb
std
gs
roll
xchg
test
and
aam
adc
pusha
push
push
jnp
ret
add
adcb
and
inc
das
inc
lods
mov
bound
fwait
mov
jb
inc
loopne
lcall
mov
add
shll
cmp
add
addl
sbb
popa
ss
sbb
mov
jnp
clc
stos
movsb
mov
jo
pop
cmp
xlat
jnp
mov
dec
into
movsl
fwait
pop
movsl
lods
out
cmp
mov
aad
out
sbb
ret
mov
push
and
xchg
arpl
repnz
jns
mov
rol
mov
gs
add
iret
hlt
inc
mov
or
divb
xorl
je
xchg
pop
into
jae
iret
mov
sbb
inc
add
push
and
adc
shl
fnstcw
mov
and
je
sub
and
dec
add
lcall
dec
dec
pop
test
decl
add
inc
xchg
xor
ficoml
in
std
fcoms
or
push
in
jbe
sub
ss
mov
inc
out
call
ljmp
adc
pushf
push
mov
xchg
lret
imul
sbb
add
in
inc
aaa
adc
push
loope
icebp
add
adcl
stos
mov
sub
adc
bound
mov
mov
std
adc
xchg
sub
insb
xchg
mov
movsl
dec
dec
dec
imul
in
mov
or
aad
lret
dec
repz
insb
negb
ja
mov
cwtl
fnstsw
out
sub
adc
mov
icebp
mov
sub
jecxz
inc
mov
sub
mov
adc
int3
jnp
fcomi
ret
rolb
sbb
enter
fs
dec
push
call
add
enter
cmp
add
xchg
aas
das
les
xchg
mov
rcrb
movsl
stos
cmp
mov
aam
adc
out
adc
adc
sub
or
fisttpll
jg
cmp
clc
into
jb
call
fldenv
mov
mov
ss
cld
jl
push
mov
imul
push
sbb
ret
imul
inc
stc
mov
int
inc
pop
xchg
int
mov
pusha
scas
fdivr
sub
sub
outsl
fsubs
inc
cmp
push
cmp
pop
adc
cmpb
fdivrs
inc
mov
or
adc
jae
dec
cmc
sub
adc
into
mov
arpl
addr16
cmp
hlt
imul
sub
cmp
leave
jge
jne
pop
mov
inc
stos
jnp
sub
mov
mov
imul
jns
test
test
dec
bts
out
mov
out
mov
shlb
jmp
repnz
mov
add
add
or
adc
sbb
lret
mov
jbe
or
mov
mov
int3
orb
lods
ja
iret
loop
out
jmp
shl
sub
outsl
push
sub
mov
arpl
sub
jmp
inc
rol
dec
aas
gs
subb
mov
jnp
or
es
pushf
sbb
adc
add
out
pop
dec
mov
outsb
imul
out
adc
cltd
in
push
fistpl
mov
fisttpl
insl
sbb
mov
lea
fucomp
mov
cmp
fldenv
mov
sar
jb
lods
aaa
in
push
push
in
jno
sub
out
cmc
sti
inc
mov
hlt
mov
mov
mov
rcrl
aad
dec
fsubs
sarb
or
into
rcrl
inc
stc
aaa
pop
sahf
cmp
sbb
mov
stc
clc
out
xchg
popa
fldt
arpl
ljmp
dec
pushf
pushf
jo
push
mov
fwait
and
pop
mov
pop
cli
sbbl
sub
mov
cmp
pop
mov
jp
jge
jae
lea
rolb
add
dec
rcrb
cmpsl
jg
insl
sbb
rcrb
sbb
inc
lods
gs
mov
mov
dec
jg
fstpl
and
outsb
stos
fadds
pop
std
cli
mov
dec
out
dec
sahf
push
ljmp
mov
or
sub
movsl
cmp
pop
sub
push
xchg
jbe
shrl
xchg
fdivrl
jp
lods
fdiv
movsb
xchg
out
add
fisttpl
xor
scas
push
mov
enter
enter
mov
push
idiv
out
mov
xorb
mov
icebp
lret
in
std
fwait
pop
sub
popf
pop
jl
mov
negb
not
or
cmp
cmp
sahf
mov
sbb
lds
shl
sub
pop
mov
leave
sarb
xor
popl
xlat
pop
sub
out
mov
mov
cs
idivb
in
mov
and
sbbb
push
sbb
pop
pop
inc
and
imul
adc
mov
jmp
outsl
xchg
cmc
fmuls
das
stc
pop
dec
push
test
mov
hlt
xchg
rorb
push
in
inc
adc
lea
jno
pop
mov
sahf
movsl
leave
sub
jmp
dec
jmp
dec
sti
sub
sbb
ds
cmp
sbb
jnp
psllw
dec
push
cli
lds
out
jae
cwtl
mov
xchg
andl
dec
rolb
jecxz
sbbb
cltd
lcall
adc
jnp
add
sbb
mov
jns
imul
pop
cmpb
in
aas
aas
jb
adc
repnz
repnz
or
and
stos
fwait
jg
mov
fsts
movsl
subb
push
mov
int3
fildll
rcrl
pushf
sub
sbb
push
adc
bound
bound
xor
xchg
incl
jns
into
nop
xor
inc
push
jmp
cltd
rclb
mov
jmp
fildll
mov
jecxz
mov
jge
mov
xchg
push
and
decl
sbb
mov
test
subl
stos
outsl
cmpb
mov
inc
sub
movsb
sub
imul
and
jbe
push
ficompl
mov
lock
dec
leave
xchg
lea
popa
lock
xor
xchg
test
cmpsl
ret
lret
das
inc
pop
cmp
cmc
movsl
mov
or
jg
sub
enter
sbb
and
mov
sub
pusha
scas
pop
repz
fsub
mov
cld
or
xor
jo
cmp
call
pop
aas
in
xchg
inc
orb
push
les
mov
sub
sahf
xor
jb
mov
mov
mov
lahf
jne
pusha
cmp
xchg
mov
mov
lahf
and
int
enter
int
pop
sbb
mov
and
jp
es
mov
add
mov
xor
xchg
pop
jnp
daa
dec
clc
nop
test
fsubs
cld
mov
jne
push
bound
dec
pop
pop
jns
pop
jns
adc
jb
adc
mov
daa
xchg
movsb
push
iret
pop
sub
xor
shll
xchg
sarl
arpl
and
xchg
mov
mov
out
imul
pushf
aam
ljmp
lahf
clc
sbb
rcll
jb
xchg
mov
xchg
test
or
add
cmp
dec
int
out
nop
not
pop
sar
sbb
in
addr16
push
mov
das
sub
inc
add
and
sub
inc
lock
cli
insl
mov
xor
pusha
xchg
push
xor
mov
jl
mov
jp
sbb
lods
repz
sahf
jns
jnp
imul
or
xchg
divl
xor
repnz
or
add
sbb
push
int
pop
and
xchg
call
mov
mov
cli
push
mov
jge
push
enter
enter
xchg
jmp
or
cltd
pop
push
dec
cmc
xchg
inc
xchg
popa
movsb
jae
aad
push
mov
or
cltd
dec
sbb
dec
repz
and
inc
rorb
cmp
push
adc
int3
lods
cmp
decb
pop
jmp
js
sbb
adc
bound
pop
ficoms
pop
push
add
add
mov
fxch
cmp
cwtl
gs
add
inc
lea
sarl
fsubr
mov
arpl
push
pop
aaa
mov
icebp
add
xchg
cmp
out
add
fcmovne
inc
mov
inc
js
movsb
pop
xor
leave
cmp
xchg
xchg
pop
std
mov
aas
push
sbb
ss
xor
xor
ret
dec
pop
scas
inc
jno
dec
out
xor
mov
sub
out
mov
outsl
or
push
lahf
pop
xchg
fnsave
fildll
push
outsl
pushl
pop
movsl
fistl
push
ds
pop
lds
out
flds
sub
in
int
push
push
push
mov
inc
add
cld
out
mov
push
mov
sub
icebp
cli
mov
out
call
jecxz
bound
inc
sub
pop
rcrl
mov
mov
fld
filds
mov
jbe
out
sti
insb
int
xor
pop
cmp
stos
insl
out
and
jne
lds
adc
pop
stos
imul
sti
jnp
add
mov
sti
sub
mov
xor
xchg
fsubrl
push
aas
pop
ja
sti
int3
mov
mov
andl
imul
arpl
xchg
cmp
out
daa
dec
stos
out
ret
imul
mov
dec
in
mov
stos
jle
fsubs
fs
es
sub
lea
shufps
add
jecxz
pop
lcall
ss
xchg
scas
js
xchg
cmp
jno
fmuls
inc
jb
hlt
clc
mov
jb
jmp
mov
lods
shl
xor
ss
insl
mov
lret
hlt
add
hlt
mov
and
pop
loopne
lcall
mulb
cmp
dec
or
lods
pushf
sbb
jecxz
loope
or
sarb
enter
aad
aaa
xchg
adc
fistpl
jbe
mov
repz
lahf
sti
dec
pop
imul
sbb
aam
scas
sti
sbb
or
int3
insl
movsb
aad
cmp
std
push
xchg
mov
sbbb
cmpsl
jbe
clc
cld
popa
dec
push
mov
add
mulb
cmpsl
in
int3
add
inc
jl
mov
jno
push
mov
push
bound
or
faddp
sbb
jge
fdivl
idiv
inc
xor
arpl
movsl
mov
xor
addr16
aas
imul
cwtl
outsb
or
pop
sbb
popf
popa
jns
inc
xchg
and
sub
sahf
es
or
hlt
sahf
jno
mov
and
inc
adc
add
sti
outsl
jmp
pop
or
mov
cld
inc
scas
push
jle
inc
aas
dec
add
xchg
rcll
jae
aad
cmp
rcrl
xchg
dec
frstor
test
pop
xchg
fs
arpl
sbb
cli
subb
test
jne
imul
cld
push
xor
fbld
out
cmp
dec
enter
movsb
xor
mov
mov
insb
das
stos
adc
fs
cs
into
rcll
mov
js
mov
jge
xchg
lods
cmp
inc
and
imul
xchg
cmpsb
push
dec
sbb
xchg
sub
std
movsl
mov
data16
adc
cmp
iret
loope
pop
xor
outsl
push
sub
aaa
loop
incl
idiv
sbb
push
and
push
mov
negl
lret
xor
mov
push
pop
pop
dec
imul
in
scas
int3
push
push
cmp
cmpsb
pop
dec
rorb
xchg
jecxz
pop
dec
pop
lock
iret
cmp
sub
and
loope
mov
pop
iret
or
jle
arpl
lahf
or
mov
out
daa
cmp
ret
stos
nop
jg
js
mov
lea
sbb
addr16
xchg
pusha
jecxz
movsb
or
movsb
add
adc
pop
and
push
mov
and
lcall
cmp
xor
call
mov
add
jne
fcoml
jp
and
imul
pusha
xchg
idivb
sub
push
test
popf
lods
imull
test
movsl
push
mov
cwtl
aaa
pop
pop
xor
inc
loope
int
out
sub
jmp
lods
xor
or
shlb
inc
repnz
stos
aam
mov
loopne
mov
fistpll
xchg
loope
xchg
jne
fs
je
and
cmp
xor
xor
sahf
cli
sbb
inc
ret
jbe
testl
xor
ror
out
gs
and
pop
or
add
xor
mov
cmp
sbb
les
and
mov
jp
cmc
mov
pop
cmp
mov
mov
and
mov
cld
icebp
shrb
push
fcoml
and
sbb
rorb
les
aad
mov
mov
dec
pushf
shll
or
sbb
cmp
inc
push
pop
add
bound
xor
clc
fs
aam
ret
cmp
jns
xor
or
jb
cld
pushf
pop
mov
pop
and
jae
jns
lret
xlat
xchg
or
dec
or
cmp
shrb
xor
cmp
ret
push
adcb
out
push
ljmp
xlat
ja
sub
adc
testl
add
push
sub
xchg
pop
mov
test
ss
repnz
int
mov
inc
sub
and
popa
pop
dec
in
fdiv
stc
mov
mov
sub
sub
xchg
pop
test
insl
movsl
das
cltd
scas
push
or
fcoms
mov
cmp
mov
in
les
stos
cmp
sub
mov
cwtl
jge
jle
jnp
sbb
inc
inc
mov
or
mov
pop
xchg
scas
push
xchg
sub
xor
dec
arpl
ficomps
pop
sub
adc
pusha
sti
push
xor
imul
stos
lods
lea
int3
lds
mov
or
sbbl
fdivr
in
xchg
dec
ret
adc
cld
rcr
inc
aas
outsb
or
rcll
push
pop
or
push
ljmp
xchg
aas
rclb
or
or
sarl
jg
call
push
repnz
adc
mov
jae
add
mov
xor
jnp
out
std
mov
adc
xor
adc
in
shl
mov
lcall
repnz
mov
xchg
dec
test
adc
leave
cmp
scas
xor
roll
cwtl
pop
xchg
inc
in
out
je
push
adc
add
fadd
jge
in
js
add
mov
int3
and
add
ja
addr16
mov
fists
nop
js
not
lahf
loopne
xchg
and
cmc
and
lock
jnp
inc
mov
jl
mov
cmp
mov
jns
popa
push
dec
ja
mov
jns
mov
adc
cmp
jp
jp
cmpsb
imul
xchg
push
daa
lret
xchg
xor
fidivl
lret
dec
add
in
lahf
repz
push
lcall
repnz
add
cli
jnp
loope
fimuls
cwtl
ret
push
pop
push
mov
and
loop
mov
inc
jmp
jbe
mov
mov
lods
es
dec
or
inc
inc
cwtl
jg
ljmp
inc
adc
or
mov
cld
ret
scas
int3
cmp
aas
imul
incl
add
push
lahf
lods
mov
dec
rorl
ss
cmpsl
push
popa
or
mov
fucomp
es
testl
jbe
jmp
push
test
inc
mov
insb
mov
cmp
xor
cmc
dec
imul
out
adc
lods
jmp
xorl
and
mov
mov
std
jno
push
adc
inc
xlat
out
and
lds
icebp
subb
imul
dec
ret
dec
into
roll
dec
pop
shll
out
fwait
cld
daa
add
les
leave
inc
or
pop
inc
decl
fldcw
sbb
add
sub
add
lods
addr16
add
ret
sub
out
add
xor
aad
xchg
lock
int
jp
das
fwait
pop
test
pop
leave
pop
mov
jmp
out
fnstenv
sub
and
cltd
and
cmp
mov
pop
fisubrs
xchg
test
mov
jmp
jg
xor
and
addb
or
and
orl
mov
cli
out
scas
lahf
fstl
inc
pop
dec
idivl
cld
call
adc
rcll
xor
mov
gs
inc
mov
ds
mov
lret
popa
std
mov
inc
pusha
lret
mov
or
sbb
enter
jb
mov
push
xchg
cmp
mov
idivb
ja
mov
jp
fucomi
push
push
jbe
inc
jg
ret
xchg
ret
cmp
popf
push
pop
cmp
adc
jo
cmp
les
test
push
mov
mov
js
ret
clc
jnp
sbb
icebp
adc
mov
roll
jb
jns
fadd
test
sbb
xchg
test
xchg
sub
repnz
dec
fildl
dec
jo
sub
mov
jae
scas
stc
dec
mov
ret
lret
sub
push
mov
xchg
fdivr
and
fisubrl
dec
mov
inc
bound
loope
cli
pop
testb
dec
rcrb
xor
js
lds
cmc
add
jne
mov
popf
lahf
mov
pop
lret
imul
inc
add
adc
pop
push
add
or
mov
je
stos
aad
mov
push
cld
pushl
inc
out
in
push
dec
mov
int
mov
in
subl
fsubrl
fisttpll
leave
inc
mov
xchg
stc
out
sbb
add
in
mov
add
lret
and
lahf
lds
mov
lds
aas
dec
push
add
aad
pop
xchg
clc
pushf
repz
hlt
jbe
andb
jo
adc
cmp
jae
aas
sub
sub
cmp
bswap
xchg
mov
rcl
mull
sbb
mov
xchg
dec
adc
lock
cmp
and
push
and
int
sub
jb
mov
scas
inc
ss
data16
lea
fstp
hlt
or
inc
jmp
daa
lret
dec
int
pusha
ret
sub
cmpsb
leave
jecxz
inc
mov
mov
rorl
imul
push
push
xchg
arpl
adc
mov
insl
push
nop
xchg
into
aaa
mov
jbe
and
xchg
add
imul
fstps
bound
clc
in
mov
rdtsc
add
sbb
push
pop
push
pop
jnp
dec
jae
pcmpeqd
mov
lea
pushf
and
sbb
daa
ret
fimull
cltd
ss
mov
mov
mov
jge
je
lahf
repz
adc
arpl
out
arpl
or
sahf
xchg
enter
std
fisttpl
cs
add
cld
mov
pop
pusha
aad
pop
call
rcrb
push
pop
fists
dec
ds
jnp
fldt
fiadds
pop
imul
xor
fnstcw
add
add
jnp
sbb
nop
mov
mov
cld
imul
jl
loopne
mov
outsb
lahf
jl
push
test
pop
cwtl
cmpsb
hlt
jg
jns
mov
sub
js
fucomp
call
push
jge
repnz
ds
enter
pop
push
mov
add
mov
int
stc
mov
fwait
mov
addl
cmp
jnp
cmpsl
orb
pusha
clc
pushf
mov
lret
xlat
insb
out
sub
cmp
leave
aam
mov
imul
inc
call
and
mov
cmpsb
lock
pop
test
sarb
movsl
cmpl
push
sbb
rorl
sub
test
push
jle
sbb
loope
pop
movsl
sbb
mov
and
dec
cmp
push
add
xchg
cmp
push
hlt
cmpsb
mov
mov
mov
int3
and
dec
mov
mov
add
mov
adc
xchg
xor
jle
or
ret
imul
jmp
adc
fisubrl
movsl
pop
push
arpl
xor
pop
dec
lret
mov
or
mov
mov
cmp
xchg
enter
push
outsl
jg
xchg
adc
movsl
or
xor
loop
je
out
jg
insb
outsl
test
xlat
out
gs
icebp
and
xlat
xchg
or
xor
cmpb
sub
insb
jl
fisttpll
jmp
andb
ficoms
dec
jbe
int
xor
pusha
leave
fnstsw
inc
pop
pop
push
or
fwait
sbb
pop
ret
into
mov
inc
add
aad
test
sbb
cltd
out
push
sub
ds
sbb
mov
cltd
mov
cmp
inc
subl
xor
mov
dec
ss
inc
pop
pusha
gs
jns
sub
xchg
inc
mov
cs
out
in
mov
inc
xchg
fisttpl
sub
rcl
fwait
jp
outsb
or
mov
pusha
xchg
lods
clc
inc
mov
sahf
mov
adc
or
jb
inc
mov
xor
push
push
lret
xchg
xchg
sbb
out
int3
cmp
shrl
cmp
aad
mov
loop
in
andl
lahf
sbb
and
sbb
repnz
xor
or
xchg
sbb
adc
mov
imul
and
out
popf
lods
mul
xor
pop
ljmp
jmp
movsl
cmp
and
in
jmp
xadd
dec
xchg
cwtl
inc
sub
daa
sbb
gs
popa
mov
sub
dec
stc
mov
push
push
and
xor
xchg
add
jnp
push
arpl
loopne
cltd
or
mov
sub
push
mov
and
lock
dec
iret
pop
jb
or
mov
jecxz
jne
fnsave
jo
cltd
movsl
dec
mov
faddl
outsb
jb
inc
lcall
mov
mov
scas
xchg
or
add
shrb
jno
inc
or
adc
xchg
mov
movsb
pop
add
fstps
sahf
jle
std
movsl
inc
out
mov
shlb
add
and
sbb
scas
orb
push
out
push
mov
pop
pusha
jb
xor
xorl
or
mov
cmp
fucomip
fmuls
loop
ret
fistpl
pop
jo
setp
out
hlt
hlt
movsb
push
repnz
stos
dec
iret
cmpsl
sub
jl
add
xor
mov
jno
ret
fidivrl
sahf
dec
sbb
loope
jbe
imul
aas
leave
pop
mov
jmp
test
adc
mov
stc
xchg
adc
mov
std
js
xor
xor
jg
jmp
inc
imul
call
repnz
jae
adc
jl
in
cmp
push
add
stc
and
mov
int
pop
jne
push
lea
dec
inc
mov
test
sub
loope
mov
xchg
inc
mov
out
ljmp
and
je
push
insl
push
xchg
aas
ds
and
jp
jne
testb
pop
push
xchg
test
jg
popa
mov
test
call
rdmsr
push
xchg
hlt
push
mov
xchg
pop
repnz
cmc
out
mov
add
cmp
fucom
xor
std
sub
cs
push
sahf
dec
fsubrs
xor
add
and
arpl
lods
pop
lret
cmpsl
testb
lods
sbb
and
sbb
lret
fistpl
sub
jns
mov
inc
push
mov
and
mov
push
das
out
outsb
and
fxch
movsl
mov
cltd
bound
dec
data16
mov
outsl
ss
add
fistpl
jp
push
mov
lds
sti
inc
mov
xor
jnp
pushl
jae
ss
adc
jecxz
lods
aaa
inc
mov
scas
lods
sbb
lahf
in
lret
push
xor
ret
dec
cs
fisubrs
in
aaa
mov
adc
jmp
mov
and
mov
mov
mov
mov
dec
ds
loopne
sar
rorl
mov
xor
lret
shrb
jge
adc
pop
and
jo
test
incl
add
testb
ret
test
dec
push
out
loop
pusha
jne
xchg
out
in
fcmovu
cld
call
out
jae
scas
sahf
jb
xchg
and
add
inc
stos
add
cmp
mov
dec
popf
sbb
sub
pop
out
push
jnp
ret
repz
lret
mov
xchg
pop
aas
mov
in
cmp
cmpsl
hlt
add
cld
inc
mov
js
sub
test
xchg
jecxz
ret
dec
cmp
mov
push
mov
and
xchg
fsubl
push
icebp
push
mov
jmp
push
addb
jno
enter
call
lret
out
mov
ss
lods
xor
movsb
popa
jl
inc
ljmp
js
mov
push
adcb
stc
jae
jle
clc
incl
shr
mov
shll
sbb
inc
add
cltd
mov
or
pop
pop
movsb
mov
hlt
fsubs
and
into
pop
test
xchg
add
arpl
or
mov
xchg
dec
cwtl
fldl
jne
inc
mov
xor
mov
cmp
fucom
cmpsl
sub
mov
xor
mov
mov
fists
inc
daa
or
popf
dec
test
ret
movsb
dec
ret
out
push
adc
push
aam
ja
or
push
popa
push
or
lds
ds
xchg
bound
mov
push
std
push
int
mov
pop
ret
mov
push
sar
scas
or
neg
sbb
scas
jecxz
push
push
jae
sbb
test
mov
call
and
xchg
out
std
dec
mov
cmp
pushf
rcr
add
pop
jecxz
dec
xchg
push
stc
out
jecxz
sbb
ljmp
jg
xor
pop
leave
sbb
dec
popa
mov
das
in
inc
rorb
add
mov
pop
dec
fimull
ljmp
popf
jbe
jecxz
mov
or
push
pusha
dec
in
xlat
imul
or
jle
add
out
xchg
mov
das
sbb
fbld
adc
test
pop
push
sub
and
addl
pop
lret
xchg
jmp
push
jnp
jecxz
pop
add
jnp
in
xchg
jnp
or
add
mov
mov
mov
push
in
inc
xlat
push
push
loope
fdivl
sbb
mov
xor
pop
xor
sahf
xor
test
pop
subb
cmp
test
cmpsb
movsl
ror
sbb
and
push
dec
add
outsb
mov
inc
add
lcall
in
adc
add
inc
roll
cmc
fbld
dec
jo
pop
push
and
sbbl
jnp
push
into
xchg
test
sub
push
push
mov
lea
cmp
ret
xor
xorl
loop
adcl
sbb
and
scas
inc
cmc
lahf
das
add
lods
xor
jmp
test
add
dec
adc
adc
push
ror
inc
cmp
sub
inc
notb
xchg
cwtl
inc
jmp
mov
push
mov
inc
stc
fstpl
mov
aad
jle
insl
or
push
incl
jb
and
mov
enter
movsb
fldl
pusha
push
popf
in
or
jo
lahf
mov
out
mov
test
aas
aam
out
sub
lcall
rcl
decb
scas
mov
jae
or
cmp
and
popa
pop
pop
pop
lcall
das
ljmp
pop
inc
mov
sbb
das
mov
xchg
mov
out
xchg
and
mov
cs
aam
cmp
pusha
lds
pop
js
cmpsb
test
inc
adc
pop
int
adc
je
mov
push
xchg
leave
frstor
pop
cwtl
fucomp
and
cmp
mov
adcb
test
fwait
pop
xor
lret
outsb
mov
mov
out
pop
inc
aad
jnp
lods
mov
push
pop
and
add
pop
cmc
xor
repz
jae
mov
pop
fwait
pop
xor
lods
xor
mov
in
lods
ret
test
xlat
push
test
icebp
and
clc
and
xchg
in
test
fimull
movsl
adc
fadds
jle
cli
fidivrl
mov
clc
test
hlt
add
neg
negl
push
sub
not
jmp
fdivl
or
imul
push
syscall
pushf
popa
jb
mov
in
sti
js
jle
cmp
adc
jl
loopne
shll
gs
rcll
xchg
mov
lock
jmp
stos
cwtl
rorb
mov
fldl
movsb
push
jno
xchg
fbld
out
mov
and
adc
popf
dec
pop
push
add
mov
stc
insl
outsw
cmp
add
movsl
mov
dec
les
push
add
pop
sub
insb
dec
mov
popf
xchg
xchg
shlb
dec
insb
addr16
mov
int
mov
or
add
cmp
push
push
ret
xor
ror
fcmovne
in
jge
pop
fisubs
in
mov
jnp
cmp
dec
pop
pop
lahf
in
pushf
xchg
mov
notl
data16
stos
lods
test
fucomi
ret
xchg
xor
push
adc
and
rolb
sub
std
dec
xchg
sbb
mov
negb
int
lahf
outsl
push
push
stc
xchg
cld
xchg
mov
stos
pusha
and
xchg
mov
jmp
xor
rcr
lods
mov
js
out
int3
call
mov
iret
mov
cmp
mov
mov
or
lods
sarb
rcrb
das
xor
mov
lods
into
mov
cmpb
inc
fcompl
aad
or
mov
xchg
es
test
cmp
or
cmp
xlat
movsl
lret
dec
iret
inc
xchg
cmp
push
mov
pusha
movsl
fildll
leave
mov
mov
sbb
lock
imul
add
xor
or
loopne
or
aaa
adc
inc
push
push
fisttps
rcrl
or
mov
inc
fsubs
sahf
jmp
push
mov
enter
andb
sbb
jno
xchg
mov
mov
jnp
jae
lods
sbb
xor
imul
test
cmpsl
fsubrl
inc
jl
push
ret
mov
or
in
fwait
dec
cmp
cltd
mov
pshufw
push
and
out
or
dec
fsts
stos
shll
dec
cmp
push
jno
jno
fildl
fidivs
push
hlt
fs
sbb
mov
sbb
test
imul
mov
je
sub
test
out
xchg
jecxz
push
xchg
cmp
mov
hlt
stc
decb
xor
sub
push
mov
dec
icebp
pop
sub
inc
pop
jnp
in
loope
mov
push
push
cmp
xchg
movsl
popf
mov
ljmp
ret
xor
push
mov
push
data16
dec
dec
mov
loop
pop
push
lods
pop
inc
add
push
mov
xchg
data16
sbb
xchg
cmp
movsb
into
lret
xchg
test
xchg
cmp
and
xchg
movsl
test
or
aad
jle
add
xor
aam
clc
xchg
or
add
nop
stos
cmp
xor
shrb
push
call
dec
popa
xchg
ds
sarl
movl
out
lods
pop
add
dec
mov
jmp
adc
cmp
jecxz
pusha
and
cmc
mov
arpl
cmp
jge
int
in
clc
shlb
test
stos
lds
add
ds
leave
sbb
cmpsl
jp
in
pushf
sti
ret
lods
in
xor
testl
repz
adc
lret
por
into
xchg
xchg
arpl
pop
xchg
sbb
cmpsl
test
test
dec
mov
shr
and
nop
mov
or
shrb
xorl
mov
mov
imul
jns
cmp
mov
aad
inc
sub
hlt
dec
pop
ja
addl
mov
jno
out
nop
xchg
mov
sahf
test
sarl
jmp
lock
sti
std
scas
repz
aam
into
inc
insl
lcall
outsb
lods
pop
push
sbb
sub
or
dec
aam
movb
popf
xchg
push
sahf
imul
cmp
adc
icebp
jbe
push
daa
xor
mov
sbb
jb
sub
or
stos
js
xor
dec
sub
mov
add
and
hlt
cmp
ljmp
sahf
xchg
cmpsb
rcr
cli
idivl
mov
xchg
jg
lahf
cmpsl
pop
mov
lds
push
add
xchg
sub
or
dec
mov
mov
xor
rol
repnz
insb
popf
cmp
lret
push
out
mov
fadd
or
outsb
jmp
in
dec
shl
out
mov
pop
or
xor
aaa
test
mov
mov
jb
jne
xchg
dec
sub
pop
mov
scas
loope
out
jg
je
repnz
call
int
pusha
cmp
fimull
inc
rcrl
fldcw
icebp
mov
jge
lcall
adc
push
push
push
fucom
aaa
inc
mov
in
lock
dec
outsl
or
dec
lds
shll
je
shr
das
xchg
arpl
cmpb
mov
adc
outsb
scas
adc
into
int3
jb
xchg
sbb
cmc
mov
ljmp
mov
add
xor
xor
orl
sub
lret
iret
mov
push
data16
leave
push
cld
les
mov
inc
insl
filds
jo
sti
inc
das
dec
shlb
sub
and
push
gs
cmpsl
jp
das
mov
adc
int
addr16
push
pop
enter
jge
and
push
jae
pusha
mov
push
cmpsl
pop
dec
jp
outsb
mov
call
adc
stc
repnz
lahf
push
and
rcrl
dec
push
pop
dec
xchg
movsl
add
xchg
jne
out
cmc
and
xchg
gs
pop
or
roll
sarl
cli
repnz
or
xorb
xor
daa
les
mulb
xlat
test
je
mov
outsl
xor
cmp
les
rclb
xorb
out
frstor
sti
mov
jecxz
inc
shl
scas
xchg
aam
dec
pop
or
int
add
test
pop
cmp
adc
mov
push
sbb
arpl
imul
xor
lret
ja
mov
dec
ss
gs
rolb
push
adc
jecxz
dec
popa
and
rorl
out
shl
movsl
movsl
add
mov
push
loop
flds
lret
inc
ljmp
pushf
outsl
pop
dec
test
in
xchg
or
mov
add
jae
push
mov
lock
iret
mov
sub
std
lret
mov
loope
mov
sbb
cmp
mov
ljmp
add
les
and
or
mov
dec
ret
roll
mov
shr
jno
int3
jne
and
dec
sbb
add
xor
dec
xchg
mov
insb
adc
sbbb
ret
ljmp
fsubl
out
pop
sub
lahf
dec
add
inc
xor
mov
shrl
pop
dec
mov
jp
aaa
dec
mov
idivl
sbb
jp
push
sbb
xor
mov
mov
icebp
cmpsl
push
fwait
jne
pop
repnz
outsl
shrl
in
jbe
or
sbb
push
lods
pop
rcll
adc
xchg
push
jnp
loopne
inc
dec
jmp
mov
popf
add
loope
sbb
mov
loop
sbb
add
add
mov
adc
mov
popa
iret
fstps
adc
dec
inc
in
adc
popf
and
or
xor
movsl
dec
pusha
subb
cmc
dec
dec
add
add
out
daa
mull
roll
dec
sbb
call
je
repz
dec
incl
jp
lcall
fnsave
out
daa
mov
fisttps
mov
in
das
mov
mov
out
dec
loopne
rcrb
stos
in
orl
xchg
cmp
mov
mov
pop
into
cmp
popf
loopne
fdivl
push
int3
and
mov
xchg
mov
mov
outsl
ljmp
xchg
scas
xor
insl
push
in
mov
movsl
mov
sar
jge
movsb
mov
fbstp
inc
adc
cmp
xchg
lret
jge
xlat
leave
rclb
shr
cld
cmpsb
push
out
xchg
pushf
lea
jg
jecxz
xchg
sub
mov
sub
jg
das
incb
xor
mov
pushf
or
pushf
cmc
popf
jl
test
js
fs
or
hlt
fcoml
sbb
fsub
nop
mov
xlat
pusha
insb
xor
shll
add
jne
jnp
mov
out
cmp
push
dec
andl
pop
jb
xchg
fwait
xchg
cmp
and
les
enter
ror
inc
les
dec
mov
jb
mov
jmp
pop
pushl
jecxz
test
icebp
bound
icebp
cmp
or
data16
xor
loope
push
int3
push
add
xchg
dec
adc
adc
add
dec
les
lods
push
xor
sbb
imul
adc
add
outsl
shll
movsb
mov
cmp
js
mov
stos
push
push
mov
lds
and
jmp
ljmp
arpl
test
and
and
cwtl
dec
adc
out
movsl
xor
loop
aam
cli
in
inc
xchg
pop
cmp
xchg
icebp
pop
or
inc
scas
xor
inc
sbb
jecxz
xchg
inc
pop
ds
daa
cmp
popa
fstps
or
js
push
xchg
dec
leave
ret
mov
inc
mov
es
iret
loope
cmc
xchg
test
and
or
les
rorl
aaa
pop
and
pop
daa
adc
push
rorb
cmp
std
ficomps
dec
stos
xlat
outsl
xchg
js
fs
ss
inc
je
sbb
cs
cvtdq2ps
cmpb
imul
mov
in
sub
lcall
push
stos
mov
adcb
outsb
test
pop
and
test
imul
insb
arpl
push
lods
mov
and
nop
dec
mov
xchg
insl
stos
jo
sub
repz
or
cmc
inc
xorb
add
ds
push
cs
insb
xchg
jp
add
cltd
icebp
sbb
inc
rcrb
pop
xchg
add
jl
or
sub
inc
cltd
fistpll
js
inc
leave
aaa
loope
pop
sub
pop
fwait
adc
rcll
xchg
xchg
add
jl
imul
in
adc
es
dec
push
inc
dec
daa
pop
gs
inc
mov
andb
xor
ss
xor
mov
rolb
xor
sub
jl
data16
lret
popl
icebp
sahf
mov
sub
sti
sbb
scas
mov
sbb
lret
negb
cmc
mov
repnz
pop
cmpsb
mov
dec
daa
cmp
lock
fidivrl
push
dec
push
cmp
sbb
test
dec
sbb
push
mov
cmp
jb
xchg
xchg
ficoml
or
das
xor
adc
mov
jne
adc
ljmp
cmp
popa
ljmp
leave
ljmp
icebp
adc
lods
inc
lock
in
bound
stos
rcl
rcr
xchg
inc
add
mov
mov
dec
mov
dec
daa
xchg
fs
inc
cs
movsl
fxch
jg
lret
xor
push
jb
mov
andb
sbbl
imul
sbb
pop
dec
es
pop
loop
push
push
rorl
cmp
jbe
int3
hlt
ja
cli
iret
out
sarl
inc
push
adc
in
mov
fmuls
cmp
xor
jnp
repz
push
std
xor
in
adc
cld
sub
add
lods
mov
repz
and
sbb
sahf
std
repnz
inc
aam
test
loopne
or
or
pop
push
pop
addb
jmp
sbb
mov
add
lds
add
dec
icebp
jae
jl
cltd
pop
and
sub
dec
or
mov
lock
popf
add
and
sub
shrb
shll
cmp
mov
xchg
fwait
sbb
cmpsl
scas
mov
lds
sbb
xchg
lret
xor
addr16
push
enter
mov
inc
stc
push
loop
cmp
adc
addb
xor
or
inc
or
mov
pop
sbb
inc
into
mov
ss
mov
leave
or
in
lret
mov
out
cmpsl
mov
cmp
push
call
daa
adc
ret
mov
icebp
icebp
mov
and
or
pushl
popf
pusha
repnz
leave
mov
les
sbbb
cmp
xlat
lods
mov
or
sbb
pushf
lret
xchg
mov
pop
mov
insb
add
pop
sub
push
ficompl
data16
imul
test
aam
stos
fdivs
les
adc
push
aam
push
inc
mov
lcall
add
and
cmp
mov
sti
das
or
add
pop
xchg
push
lret
mov
and
icebp
mov
jb
fdivrs
push
cmp
jecxz
sbb
pusha
aam
rolb
cmc
xchg
out
aad
dec
inc
sub
or
lds
gs
loop
or
lea
or
testb
mov
insl
aas
push
dec
cmpsl
mov
int3
hlt
push
out
test
mov
ja
jnp
or
push
call
push
in
aam
fildl
int
je
pop
or
pop
out
mov
andb
bound
rcr
pop
insb
push
pop
mov
les
pop
es
loopne
xchg
or
push
add
js
dec
push
into
jo
pop
push
mov
ret
push
mov
les
mov
mov
rorb
sbb
jecxz
sbbb
in
cmp
sub
jmp
jns
adc
mov
xchg
mov
sbb
dec
xorl
test
and
and
push
push
mov
pusha
int3
jp
adc
cmp
fidivrl
xchg
mov
shrb
arpl
or
xor
lret
push
push
loope
mov
test
jno
and
sbb
out
std
ret
cmc
cltd
stc
out
sub
and
pop
in
inc
xchg
pop
testl
pop
jns
ss
inc
dec
in
lret
cmp
out
fdivrl
cmp
out
pop
fscale
nop
incl
inc
mov
sbb
push
or
aad
cmp
xchg
cli
mov
or
popa
add
inc
add
ffree
or
loope
lock
dec
push
outsl
and
adc
rcrb
sub
icebp
movsl
or
inc
mov
movsl
bound
xchg
iret
add
ljmp
add
adc
sbb
add
ljmp
dec
cmpsb
sub
fs
out
lcall
xchg
cmc
dec
cmp
xchg
mov
pop
and
adc
cmc
clc
and
jns
sbb
jnp
in
push
adc
xchg
cltd
jne
hlt
xor
push
test
and
cwtl
cmp
and
or
push
push
mov
hlt
lret
xor
ror
and
dec
fldenv
sarb
jne
sub
iret
test
lret
sub
mov
jns
jns
mov
lret
or
xor
and
inc
insb
xchg
cmp
cld
cmpsl
das
stos
cmp
scas
sahf
insb
sti
xorl
cmp
push
das
inc
int3
push
jo
orb
jg
popa
popf
aad
cmp
inc
ja
aaa
roll
test
leave
push
jg
pop
xlat
mov
fwait
jnp
dec
jnp
js
stos
lahf
pop
js
inc
das
lds
shlb
push
push
sti
adc
jle
cltd
roll
mov
cmp
icebp
jle
xor
dec
push
inc
cli
fwait
cmp
popa
cmp
sub
cmpsl
test
inc
loopne
stc
mov
js
adc
fcmovb
and
jmp
mov
pop
fwait
mov
sbb
mov
dec
popf
mov
arpl
dec
mov
xchg
xchg
push
xchg
fdivrp
iret
inc
sti
and
push
pop
rcrl
insl
sub
pop
dec
push
cmp
arpl
popf
cs
call
popa
inc
stc
testl
xchg
loop
ja
lea
and
sbb
dec
cmpsl
push
push
insb
fidivrs
adc
xor
jnp
push
insl
cmp
xorl
in
push
imul
bound
mov
pop
jl
push
cmp
xor
jae
sahf
shll
repnz
lods
dec
xor
pusha
flds
xor
pop
pop
push
pextrw
dec
jns
jecxz
push
jmp
or
imull
jne
bound
jae
fucom
mov
inc
cltd
mov
inc
inc
dec
xchg
xor
pop
dec
es
imul
leave
gs
cld
fs
jb
fmuls
dec
ss
adc
push
jp
pop
push
jo
push
mov
ss
loopne
lds
cmp
mov
fs
add
fimuls
rorl
adc
xor
rorb
xchg
icebp
jno
jge
sbb
pop
pop
mov
arpl
lret
mov
lret
sbb
mov
inc
icebp
xor
fmull
fs
les
xchg
loope
out
ret
jle
and
call
rol
xchg
mov
ret
sbb
sub
mov
pusha
out
test
cmc
lea
mov
xor
xchg
loope
ffree
xor
ret
push
or
xlat
mov
adc
cwtl
cmp
cmp
jmp
inc
mov
cmp
jmp
shll
adc
and
out
ja
adc
add
lods
hlt
clc
lods
xchg
scas
incb
adc
fcoms
xchg
iret
test
mov
push
in
xor
clc
cmp
jecxz
ret
lods
lods
cwtl
insl
ds
mov
and
das
jle
xchg
cltd
jb
add
mov
in
or
arpl
loopne
xchg
or
cli
add
mov
mov
mov
roll
push
add
nop
bound
jbe
or
mov
test
mov
cmp
lds
clc
push
les
pop
pop
popf
fists
divb
fwait
adc
repz
and
xchg
pop
adc
rorb
dec
sub
fwait
loope
test
loop
push
xor
jl
cmc
into
divl
cmp
pop
push
push
inc
jecxz
inc
or
push
sub
xchg
add
and
mov
adc
mov
addl
dec
orb
jae
ds
sbb
rcll
decb
pushf
sub
inc
js
mov
test
dec
daa
pop
shll
and
mov
icebp
mov
dec
jnp
fwait
arpl
cmp
adc
mov
daa
jbe
decl
push
shl
push
aad
mov
arpl
mov
roll
mov
sbb
cld
daa
in
inc
pop
cmp
addr16
aas
xchg
push
addr16
lret
cmp
cwtl
mov
mov
mov
lock
jno
inc
xor
aad
inc
ja
adc
fwait
loope
lcall
dec
push
sbb
mov
ljmpw
pusha
and
push
cmp
and
jle
aam
decb
mov
add
adc
dec
lods
je
inc
jg
adc
mov
sti
popa
mov
jbe
xor
add
jp
bound
aas
or
in
dec
and
leave
mov
imul
popa
jge
jge
stos
cmpsl
in
ja
mov
sub
dec
xchg
pushf
mov
jp
in
xor
fisttpl
push
mov
js
sbb
dec
addr16
fsubrs
push
push
jns
cli
sbb
out
dec
xchg
shl
push
mov
call
loop
and
jp
cltd
xlat
lret
jmp
cli
fwait
add
xorps
sub
add
rolb
dec
mov
mov
sbb
push
mov
mov
or
push
xor
out
addr16
xchg
ds
adc
shr
ret
mov
ret
out
cs
xchg
jecxz
sub
mov
cmpsb
mov
addr16
mov
pop
inc
stos
rclb
data16
aam
enter
cmp
out
lret
or
scas
sub
add
imul
cmpsb
jo
pusha
lret
bnd
jecxz
push
repz
sar
xor
and
movsl
cmpsb
or
pop
loop
in
test
es
je
stos
push
mov
cwtl
xor
or
inc
xchg
mov
leave
cmp
pop
mov
pop
rclb
lret
xchg
js
and
push
fnstsw
aaa
cmpl
int3
ja
pop
loopne
imul
stos
mov
lret
jno
xor
jmp
cmp
lods
sub
sbb
push
xlat
mov
jecxz
movsl
xchg
mull
or
cmpsb
sub
jns
aad
xor
push
mov
mov
lds
or
jne
xchg
fdivl
in
clc
pop
add
cmp
insb
cmp
and
push
mov
dec
imul
xchg
jb
sbb
dec
iret
or
push
lods
retw
mov
or
mov
push
cs
add
rcll
test
fwait
out
mov
xchg
loopne,pt
addr16
add
add
faddl
mov
sar
push
loope
xchg
loope
mov
rclb
cmp
mov
jge
push
pop
mov
loope
push
xor
sub
dec
inc
or
adc
jl
push
sbb
mov
inc
cmp
sbb
mov
pop
repnz
fs
dec
mov
out
jle
andl
mov
hlt
push
test
int3
mov
test
xlat
push
pop
scas
push
xor
out
je
push
push
adc
xor
cwtl
push
orb
sub
setle
movsl
mov
xor
std
in
or
or
inc
mov
jl
mov
sti
lock
and
nop
xchg
xchg
repz
lods
and
pushf
sbb
sub
or
add
push
jno
mov
loopne
lret
nop
dec
out
push
mov
and
outsl
pop
mov
dec
aam
xchg
dec
in
data16
cmp
inc
sbb
jg
in
pusha
jecxz
mov
cmc
push
jb
loopne
jl
pop
mov
jp
mov
add
cmc
lea
mov
dec
inc
fdivrs
xchg
cs
rolb
jl
cmp
out
in
ljmp
xchg
xchg
adc
sahf
mov
mov
push
mov
pop
jne
imul
les
mul
xchg
std
dec
cmp
jo
mov
ud1
jl
ljmp
ja
add
test
in
cmpsb
or
mov
mov
lret
lahf
jl
and
insl
mov
pop
mov
xchg
clc
inc
fbstp
pop
mov
mov
test
mov
sub
push
ds
addr16
pushf
inc
maxps
popf
push
adc
push
pop
cmpsl
sub
jle
mov
xchg
fstp
pop
and
jnp
and
xor
pushf
imul
sbb
popa
out
inc
push
fdivp
mov
test
jp
pushf
in
jb
mov
jg
cs
xchg
sarb
addr16
add
addb
ret
bnd
sbb
stc
fldpi
es
inc
cs
aam
add
cli
and
mov
cld
cltd
xor
fcomps
adc
sti
jp
pop
out
scas
mov
ror
es
fwait
pop
mov
stos
add
cmc
das
movsb
and
and
and
pop
push
and
aas
movsb
out
mov
adc
cmp
xchg
dec
mov
rcrl
cmp
xor
xchg
dec
lods
movsb
pop
js
pop
nop
adc
addr16
addr16
and
stos
mov
loopne
push
jbe
ds
adc
ret
addr16
pop
je
dec
mov
out
in
imul
mov
cmp
aad
mov
push
mov
lahf
divl
rolb
inc
adc
stc
pop
push
mov
divl
loop
out
ss
adc
movsl
cmc
jg
scas
mov
mov
clc
scas
rorl
inc
out
fsubl
imul
xchg
and
mov
xor
leave
pop
inc
negl
test
jbe
cmp
dec
insl
in
xchg
cmp
dec
pop
sbb
mov
push
iret
push
movsb
pop
inc
push
int
ja
out
bnd
nop
cld
add
mov
stos
loop
ret
and
xlat
addr16
adc
cmp
ss
add
xlat
shl
test
rep
xchg
dec
sbb
sbb
ficoms
outsl
mov
repz
dec
push
stc
push
xlat
mov
in
movsb
rorb
fwait
xchg
incl
aas
daa
xchg
sbb
fadd
enter
jl
xchg
push
or
xchg
pop
stc
jbe
test
ret
mov
mov
mov
mov
outsb
lock
fistpl
rclb
pop
pusha
cmp
ret
xor
add
lds
dec
xor
hlt
pop
jns
push
pop
jg
cwtl
adc
mov
push
push
lds
pop
pushf
sub
xchg
jne
insb
js
in
inc
mov
inc
rcrl
push
sahf
xorl
mov
pushf
push
or
mov
pop
jmp
or
fstps
or
mov
movsl
lea
cmpsl
insl
js
push
adc
pop
loope
jne
cltd
loopne
out
push
pop
mov
int3
into
enter
mov
fsubs
int3
and
popa
and
xchg
jb
and
add
xor
xor
enter
add
xor
into
push
push
call
adc
add
cmp
sbb
fcompl
addr16
xchg
clc
jno
aad
pop
out
xlat
inc
pop
cmp
pop
mov
lds
inc
adc
out
xorb
cmpsl
jl
xchg
lahf
aam
add
and
jecxz
mov
gs
mov
jg
test
mov
rorb
popa
and
enter
test
sub
inc
adc
lods
mov
imul
jmp
outsl
or
or
out
movq
xor
push
lahf
xchg
mov
jns
or
add
fcmovnbe
in
mov
cmpl
leave
fistpl
out
test
out
mov
cmpsl
outsb
mov
dec
mov
into
test
sar
pop
mov
in
jo
push
ret
mov
arpl
mov
lahf
pop
cs
jo
mov
adc
or
inc
xchg
or
nop
inc
ss
imul
in
cmp
mov
xchg
bound
xchg
push
pushf
sub
dec
pop
mov
inc
cwtl
dec
jle
clc
call
cmp
or
scas
xchg
lea
inc
shrl
cmp
inc
pop
lret
pop
lret
test
je
daa
clc
dec
mov
inc
cltd
mov
scas
daa
and
jb
in
pop
push
mov
in
test
inc
out
and
std
xor
lcall
stos
mov
xor
cmc
arpl
adc
jns
add
icebp
pop
jl
test
or
push
insl
mov
mov
fldcw
fisttpll
dec
push
push
push
pushl
mov
in
cmc
push
test
and
mov
mov
das
fsubs
cmp
add
jnp
lea
stos
xor
pop
pusha
xor
aaa
loopne
in
loopne
jb
cltd
test
repz
inc
data16
sub
lock
test
jle
inc
add
stos
mov
popa
mov
push
mov
and
out
sub
test
jl
sahf
cmp
push
lds
js
cmp
xchg
loope
leave
arpl
sub
addr16
push
das
in
imul
outsb
bound
jns
lods
ja
in
mov
in
jae
out
jmp
xchg
pop
lret
leave
lret
test
aaa
mov
jge
dec
clc
test
movsb
xor
das
leave
pop
loopne
pop
das
mov
sbb
jns
aas
andnps
cmp
jo
cmp
add
or
shl
mov
aad
clc
cmp
mov
xor
addl
adc
imul
test
adc
call
ret
mov
test
sub
inc
fisubrl
sti
hlt
push
lea
movsl
popf
pushf
cmp
inc
pop
shrl
sti
jbe
out
in
popl
iret
out
jne
inc
lcall
sbbl
bound
or
ljmp
outsb
loopne
leave
and
sarl
adc
sbb
leave
push
xchg
push
mov
inc
xlat
and
jb
dec
mov
xor
cltd
das
dec
sub
cwtl
mov
pop
lret
fstl
dec
inc
dec
imul
push
mov
popa
dec
mov
lcall
dec
sahf
sub
jae
adc
inc
mov
xchg
pop
xchg
int3
pop
bound
je
out
cltd
pop
jp
or
xor
dec
mov
pop
cltd
push
std
inc
roll
int
insb
cmp
sbb
jnp
pop
leave
dec
insb
jecxz
ret
idivl
out
push
rorl
and
mov
shr
in
inc
arpl
mov
js
inc
xchg
add
stos
out
int3
repnz
inc
into
sub
inc
and
sbb
scas
xor
pop
roll
push
jnp
cmp
movsl
loope
inc
xor
call
int3
cli
add
push
and
addr16
ret
mov
dec
ret
fidivrl
test
cmpsb
lcall
cmpsl
dec
push
push
maxps
mov
scas
mov
mulb
imul
jge
or
xchg
push
mov
test
dec
and
sub
xor
fdiv
decb
jns
cltd
mov
inc
movsl
in
lahf
aaa
imul
push
xchg
aam
pop
jmp
cltd
adc
xchg
cmp
mov
mov
pop
or
jne
lea
pop
stc
jmp
psrlw
jecxz
dec
ds
inc
or
and
shl
stos
adc
adc
add
fwait
push
cs
and
mov
js
movsb
fwait
xor
js
fstl
sahf
or
mov
jno
imul
cmc
fisttps
cmp
cmpsl
outsl
xchg
cmpsl
jl
or
imul
daa
fsts
lahf
pop
dec
mov
mov
adc
sbb
pop
outsl
leave
cmpps
push
jns
jmp
mov
lahf
outsl
and
xchg
pop
mov
fwait
adc
std
fidivl
movsl
testb
ss
pop
sub
loopne
jl
cltd
test
inc
sarb
shl
sbb
enter
fwait
lock
ljmp
sub
cmp
das
mov
outsb
popf
jnp
xchg
mov
hlt
rcrb
sub
sbb
jno
mov
cli
adc
inc
insl
push
sbb
mov
cmpsb
jmp
sbbl
mov
mov
int3
xchg
adc
jae
sbb
mov
inc
bnd
call
pop
test
and
sub
xchg
call
es
rcrb
iret
insb
insl
push
jge
mov
inc
daa
xchg
push
hlt
add
mov
xchg
cli
aas
or
rorb
dec
push
and
inc
aaa
xor
mov
push
loopne
sbb
inc
xchg
xchg
lods
les
push
cmp
ds
cmp
jns
push
fstps
inc
sub
test
mov
out
push
movsl
add
or
xlat
gs
adc
mov
in
sbb
or
les
icebp
and
lret
inc
jl
jp
lahf
cmp
repz
dec
jle
add
into
sahf
stos
xor
mov
addr16
lret
pusha
push
mov
shll
mov
dec
daa
cmp
sub
iret
or
inc
fcomps
pop
pop
cmpsl
sub
cmp
and
or
or
faddl
out
jge
add
and
lret
push
or
mov
mov
ss
and
jb
push
sub
push
movsl
xor
fs
sub
and
out
pop
sub
sti
adc
push
mov
push
aas
hlt
lods
dec
mov
cmpsl
lret
es
pop
stos
sub
lret
sub
or
aad
stc
psubsw
lods
adc
inc
jmp
sub
jl
pop
cld
push
mov
mov
testb
mov
cmp
leave
outsl
in
jp
cmp
loop
mov
les
and
sub
and
or
or
xchg
add
mov
inc
sahf
inc
xor
jl
push
lods
or
stos
jl
pop
data16
xchg
faddl
push
xor
xchg
test
xor
jl
cmpsl
sub
test
sub
in
call
adc
lret
stos
inc
ret
jmp
icebp
sub
mov
outsl
dec
insb
inc
clc
gs
pop
aam
aas
jecxz
cmpl
fstl
xlat
push
add
add
xor
ror
arpl
out
stc
dec
jmp
int3
sti
mov
ds
ds
mov
inc
addr16
mov
iret
ret
je
stc
dec
cwtl
mov
and
xchg
outsl
or
and
push
inc
leave
dec
xor
pushf
mov
js
mov
adc
mov
cmpsb
jbe
mov
fmuls
les
dec
aaa
loope
loopne
jo
add
cmp
xchg
adc
sbb
pop
into
dec
mov
cmp
fildll
jnp
nop
shlb
pop
push
fwait
test
add
dec
xchg
mov
jge
cli
mov
or
push
testb
cwtl
mov
pop
mov
mov
adc
lea
mov
sbb
shrl
add
leave
mov
test
or
scas
add
or
xor
fnsave
push
push
push
stc
ja
and
mov
add
mov
add
cmpsb
xchg
sub
lcall
ljmp
ret
and
cmp
lret
mov
xchg
pop
loop
test
or
jnp
out
pop
lret
mov
dec
jae
pop
pop
jo
test
ret
popf
mov
mov
pop
or
rorl
jmp
dec
nop
and
jns
popf
inc
jo
mov
nop
adc
loope
repz
cs
add
fwait
jno
scas
jl
pop
mov
sub
pop
xchg
cli
addr16
push
dec
incb
or
stos
cwtl
and
xor
add
sub
ficoms
ficomps
in
fdivl
mov
push
aaa
in
gs
sahf
lods
js
cwtl
fs
repz
neg
cld
or
mov
cmp
xor
pop
xchg
imul
or
std
add
jae
push
repnz
sahf
es
jg
pop
cmp
lods
incb
cmp
xor
inc
repnz
subb
inc
mov
pop
lock
daa
inc
pushf
jnp
daa
repnz
adc
cmp
fadd
outsl
inc
dec
adc
icebp
fs
rcl
imul
imul
fnstsw
inc
cmp
inc
int
repz
xchg
mov
shrb
movsb
dec
lock
mov
or
iret
imul
pop
sub
and
adc
mov
imul
jl
push
call
stos
stos
jbe
test
pop
pushf
pop
add
fbld
add
daa
cmpb
cmp
sbb
addl
push
and
adc
lea
cs
addr16
into
dec
es
mov
xchg
sbb
imul
cltd
leave
dec
xlat
mov
xchg
xchg
mov
cmp
push
aas
leave
les
jne
fadd
adc
push
push
iret
pop
lods
dec
add
fidivrs
insb
mov
ds
shlb
pop
test
mov
jb
mov
inc
pop
movsl
pop
mov
fstps
push
xchg
mov
jp
jg
jp
mov
and
and
in
and
cmc
es
lods
cli
fs
int
jbe
sbb
sbb
fstpt
ljmp
and
shl
shll
insl
cmp
aaa
mov
ret
push
fsubrs
xor
sbb
adc
mov
dec
fildl
cmpsb
dec
jge
ficoms
mov
mov
mov
rolb
pop
stos
mov
push
mov
out
xor
pop
ss
mov
sub
leave
push
pop
lea
and
jp
push
sub
int3
mov
test
dec
sub
ja
lea
pop
in
or
call
imulb
cmpsl
and
push
add
hlt
enter
inc
jp
fs
hlt
inc
lahf
mov
pop
leave
cld
mov
dec
sbb
sbb
and
lea
popf
xchg
je
lcall
mov
and
pusha
fs
std
into
mov
outsb
xor
cs
sbb
xchg
xlat
push
mov
push
mov
in
out
std
std
jp
je
repnz
and
inc
in
ret
xor
dec
mov
ficomps
shlb
sub
mov
dec
cmp
sbb
cmc
icebp
es
xor
dec
loopne
xor
mov
push
sub
xchg
das
dec
pop
or
adc
sub
or
cmp
xchg
xchg
jp
popa
or
bound
ret
pop
fdivrs
outsb
gs
mov
out
cmc
das
mov
popa
mov
cld
push
insl
add
cmp
or
lods
mov
pop
xor
fnstenv
or
ds
jo
stos
cwtl
cmp
notb
sbb
and
scas
movsb
fcomp
mov
sub
nop
orl
decl
jmp
jae
in
add
dec
or
lods
jp
jecxz
dec
mov
sub
insb
pushf
into
cmp
in
jle
xor
pop
pop
rorl
out
mov
jg
mov
cmc
daa
dec
gs
dec
outsl
iret
cmp
insb
and
sbb
and
aad
ss
stos
insb
jge
dec
mov
inc
and
cmp
mov
cltd
jg
mov
inc
mov
mov
sbb
xchg
or
and
int3
pop
dec
add
sbb
rcll
and
jmp
mov
loope
sbb
inc
inc
outsb
idivb
sar
xchg
out
mov
mov
pop
test
sbb
sub
in
lock
das
popf
sub
aad
call
jne
stc
xchg
dec
dec
les
out
or
outsb
daa
dec
fmuls
dec
fbld
out
jne
fbstp
mov
jo
xor
std
mov
inc
push
fxch
add
aas
xchg
shll
fdiv
repnz
out
inc
inc
jecxz
clc
xor
mov
dec
adc
and
cmp
or
retw
inc
push
add
inc
mov
ss
add
aaa
pcmpeqw
and
inc
and
mov
in
xchg
insl
imul
inc
pop
aas
stos
inc
sbb
icebp
mov
jne
scas
ljmp
lahf
mov
and
xchg
in
dec
add
mov
pop
std
push
aaa
bnd
data16
mov
mov
sub
flds
inc
or
repz
call
outsb
xchg
cmp
mov
inc
adc
cmp
addr16
dec
scas
lock
fwait
mov
loop
add
push
std
popa
pusha
jl
fiaddl
and
mov
xor
test
add
mov
cmp
adc
inc
sub
out
cmp
decl
mov
scas
fimuls
xchg
clc
inc
cmp
mov
test
mov
and
insb
mov
dec
in
repnz
mov
or
loop
add
cli
jnp
add
test
and
ljmp
adc
gs
lds
and
fsubp
inc
enter
push
dec
data16
jp
push
je
loopne
dec
js
data16
fcmovnbe
cmp
jnp
push
sub
sbbl
jbe
scas
adc
cmp
jno
cmpsl
pushl
push
xchg
ss
sbb
jne
fwait
cmp
and
mov
jns
pushf
inc
push
arpl
xchg
mov
mov
mov
jg
ret
pop
xlat
ret
add
lock
das
addr16
add
cmp
jb
pop
jns
push
lods
je
out
push
ss
jb
and
lea
shll
cmpsb
fildl
cwtl
and
pop
push
rorb
test
lret
mov
jle
xlat
xchg
out
sbb
out
dec
cwtl
cmp
loopne
or
test
test
lret
jle
jle
xor
jo
push
push
mov
pop
insl
cmpl
push
loope
shll
ljmp
popa
mov
in
mov
fimuls
lds
and
mov
aad
mulb
push
cmpsb
jnp
cmp
mov
ficoms
aas
fldcw
adc
mov
push
mov
test
pop
xchg
jp
sub
inc
fdivrp
fucomip
stos
icebp
bound
add
movsl
mov
mov
xor
out
cmp
dec
cmp
or
add
pop
xchg
or
adc
and
mov
pop
or
insb
xchg
dec
rcrb
out
lods
jge
in
test
ljmp
pop
aad
push
xchg
sti
les
mov
mov
xchg
mov
pop
xchg
sbb
sbb
xlat
jae
stos
and
pusha
dec
mov
aam
or
push
ret
imul
imul
loopne
lods
sbbb
pop
push
cs
xor
hlt
or
dec
sbb
dec
adcl
aas
mov
push
mov
push
dec
call
jbe
cs
sahf
jb
int3
fmuls
sbb
inc
dec
imul
push
ljmp
shrb
gs
cld
jp
sub
mov
mov
inc
nop
in
or
xor
rolb
mov
mov
ss
movsl
push
out
and
and
mov
nop
xchg
fidivl
test
enter
das
dec
adcb
idiv
std
out
mov
pop
sbb
or
sti
cmp
or
jle
or
pop
mov
test
int3
bound
and
push
push
es
das
xor
shll
cwtl
xchg
sbb
testl
lods
ffree
mov
shr
cmpl
push
or
cld
jl
mov
jne
in
sbb
icebp
lock
cmp
test
fs
xor
arpl
aam
sti
jo
es
arpl
clc
popa
or
leave
push
xor
or
pop
and
adc
pop
xchg
out
pop
subb
xlat
xchg
adc
imul
or
inc
push
xchg
jp
dec
in
pop
jns
mov
push
aam
or
push
cwtl
imul
pop
dec
adc
xor
pop
insb
jns
repz
pop
imul
shr
in
pop
cmpsb
cmp
mov
inc
in
jp
pop
popf
and
jne
int3
cmp
and
andl
push
xchg
shrl
std
shlb
scas
in
int
lret
xchg
mov
aas
mov
adc
lods
xchg
sbb
jge,pt
xchg
loopne
in
xor
xchg
ja
les
push
xchg
mov
inc
xor
sub
rcrb
std
arpl
gs
sub
and
or
cmpsb
lret
mov
stos
cmp
push
pop
js
shl
les
pop
in
xchg
mov
dec
cmpsb
repnz
push
or
inc
jp
push
pop
add
aaa
mov
bound
ficoms
or
dec
int3
shr
sbb
sbb
adc
shrb
js
add
ret
pusha
ja
xor
sbb
jbe
inc
xchg
shrl
mov
iret
cmp
mov
xor
push
cmc
cmpsl
pop
mov
jns
lds
xor
lods
call
xchg
scas
add
inc
xchg
cmp
xor
ds
nop
jbe
dec
gs
aaa
mov
mov
enter
add
leave
out
add
mov
cmpl
jle
push
push
aad
aaa
sbb
mov
lret
cwtl
jecxz
xor
adc
and
mov
insb
imul
scas
lret
jae
or
push
test
mov
dec
inc
jbe
xchg
andb
repnz
out
bound
inc
lret
jecxz
aas
je
call
jbe
push
sbb
rolb
js
ja
test
cltd
add
mov
gs
fsubrl
add
mov
jo
mov
add
lods
xchg
inc
aaa
inc
out
sub
jne
jb
js
andl
mov
call
negb
mov
daa
jns
add
or
pop
ret
decb
mov
add
mov
xor
cs
cli
and
fstpt
mov
es
aam
into
inc
mov
pop
lret
jns
cmpsl
adc
add
repz
dec
sbb
lahf
inc
xor
sbb
pop
fsubrl
popf
sub
push
jmp
movsl
adc
icebp
jne
arpl
mov
imul
sbb
cmp
sbbb
insb
loop
out
inc
jp
inc
lret
mov
jns
repnz
push
test
int3
and
and
cmp
andb
repz
pop
les
rcr
scas
ja
js
mov
add
mov
ds
and
mov
push
es
in
jg
nop
cli
fldenv
sub
rol
xor
jecxz
popa
mov
push
in
insl
push
inc
inc
jae
aas
enter
adc
cmp
mov
cmp
xchg
jg
pop
sbb
shrl
loope
mov
pop
xchg
pop
pop
jbe
shll
fisttpl
fs
xchg
pop
mov
in
outsl
jg
mov
stos
pop
or
ss
jmp
mov
jne
sarl
movhps
aam
jne
dec
dec
cmp
cld
and
add
and
mov
xlat
insb
out
adc
xchg
arpl
mov
aas
and
mov
pop
sub
adc
negl
scas
pop
cld
pop
xor
push
lea
lods
enter
mov
xor
test
cmp
sbb
aam
mov
cli
out
stos
mov
xchg
cmp
xor
fldenv
sub
pop
lea
mov
and
lahf
aas
jecxz
pop
dec
cld
add
arpl
or
jl
mov
std
push
and
push
dec
mulb
cmp
test
mov
mov
sub
pop
sub
and
shll
popf
jnp
mov
test
dec
lcall
addr16
jae
add
fwait
rolb
ret
lods
sub
sub
cmp
clc
sbb
cmp
and
sub
add
or
adc
popf
sub
add
int
and
std
dec
imul
or
fsubl
or
loope
and
pop
dec
out
xchg
rcrb
faddp
out
loope
push
lock
mov
orl
cltd
adc
std
adc
popf
mov
in
fiadds
les
data16
dec
inc
cmp
test
pop
sbb
rolb
or
ret
mov
in
pop
xorb
std
and
inc
jmp
repnz
xchg
jp
stos
fdivrp
mov
jns
pop
mov
sub
fiadds
and
imul
mov
hlt
in
add
mov
mov
int3
push
sti
leave
dec
leave
insl
inc
sub
mov
cmp
mov
sbb
in
push
mov
rorl
fbld
sbb
pop
cmp
das
cmp
cmp
mov
aam
imul
or
mov
dec
shr
jb
jae
aaa
shl
stos
mov
rcrb
gs
int
mov
mov
cltd
in
faddl
repnz
mov
ss
sbb
add
int3
insl
repz
lret
movsl
into
dec
or
out
or
cmp
push
add
pop
sbb
scas
in
push
ret
mov
jle
outsl
or
mov
cmp
jl
or
inc
cltd
sysenter
lods
jae
lods
loop
sbb
mov
pop
adc
cmc
ret
add
pop
rcrb
jno
nop
sub
pusha
sub
xlat
push
ret
jge
add
rorb
sti
outsb
jle
dec
cmp
sub
cmp
mov
push
mov
or
mulb
jecxz
data16
xor
lret
add
push
sbb
jno
xchg
push
out
call
dec
adc
fidivrl
in
int
mov
sub
rorb
xor
sub
add
mov
jecxz
aaa
iret
in
mov
sub
push
mov
out
dec
jecxz
outsl
jbe
out
test
push
ret
nop
pop
pop
xor
mov
pop
xor
fcomps
orb
ficompl
enter
es
and
xchg
pop
xchg
mov
jbe
add
jb
insl
sbb
jl
stos
jb
negl
icebp
jns
jnp
and
into
sbb
xchg
cs
out
jno
adc
out
imul
cmc
jge
adc
std
repz
test
aaa
daa
js
ljmp
in
les
jbe
inc
daa
pop
pop
lods
push
push
mov
fdivrl
dec
xchg
popf
mov
cmp
arpl
pushf
dec
repz
ljmp
fisubs
and
push
xchg
lods
icebp
cmp
sahf
aaa
das
sbb
lcall
pop
inc
sbb
or
andl
test
and
es
mov
jnp
pop
cwtl
and
pop
mov
mov
popf
rorb
xchg
ficoml
arpl
and
aam
into
push
xor
test
lret
enter
jns
sbb
adc
cmp
roll
push
adc
sub
ret
xorl
xor
out
outsl
jb
jle
ja
fnstcw
xchg
daa
mov
mov
or
in
push
ljmp
xchg
xchg
mov
cli
dec
cmp
xor
xchg
sub
cmp
dec
mov
mov
or
pushf
and
or
add
add
add
adc
xor
imul
movsl
fcmovu
mov
or
pop
cwtl
les
sbb
cwtl
mov
test
cwtl
mov
mov
cli
jecxz
sti
divl
fcomps
dec
in
outsl
dec
fdiv
std
enter
call
imul
inc
enter
fldz
mov
aad
fs
sbb
mov
ljmp
xor
push
out
not
repz
xor
addr16
inc
scas
inc
cwtl
adc
mov
dec
pop
arpl
cmc
mov
push
dec
insb
movsb
in
inc
xor
sub
inc
lds
shll
call
into
xchg
out
dec
xorl
and
and
sbb
loop
jno
pop
mov
xlat
std
stc
xchg
xor
lret
es
stos
mov
call
icebp
mov
lock
popa
arpl
xlat
push
pop
call
aad
lcall
ret
push
push
lock
sub
mov
push
jecxz
lock
push
sbb
es
arpl
inc
repnz
lcall
and
mov
lock
into
push
outsb
fs
sbb
push
out
nop
scas
in
inc
fisubrs
stos
cmp
popa
andl
testb
mov
jbe
jle
pusha
imul
shl
add
jecxz
testb
lea
imul
les
jle
jns
bound
and
mov
dec
lret
mov
mov
adc
pop
and
fisubl
repz
das
push
inc
push
loop
add
mov
pop
nop
pusha
scas
mov
stc
dec
jp
mov
js
dec
iret
ficoms
push
mov
xchg
inc
jno
lds
cmpsb
mov
jno
loop
ljmp
cmp
ljmp
stos
popa
ss
addr16
jp
jnp
fiaddl
mov
jmp
xor
jbe
adc
lds
shrl
cli
adc
int3
arpl
adc
push
xchg
clc
push
jnp
push
int3
rorb
rclb
xchg
outsb
or
mov
in
pop
stos
outsb
jge
add
std
in
mov
lret
cmp
xchg
adc
cltd
mov
inc
lahf
lret
nop
push
mov
and
add
sbb
pop
icebp
scas
psubb
push
mov
cmpsb
mov
sub
mov
nop
and
pushf
cmpsb
nop
or
or
jecxz
sbb
or
daa
imul
inc
pop
lret
jno
pop
and
mov
adc
sbb
enter
movsb
push
int3
out
dec
loope
xchg
js
orl
add
ljmp
cltd
popa
fcom
punpckldq
call
mov
lahf
xchg
arpl
popa
xor
rcll
push
xor
add
add
push
and
mov
in
xchg
and
mov
fstpl
icebp
and
iret
outsl
xor
pop
cmpsb
in
adc
xchg
jge
pop
sbb
jbe
pop
mov
inc
adc
js
test
mov
cld
jns
lret
xchg
popa
dec
enter
push
push
fdivrs
xor
scas
inc
xor
stos
push
clc
std
popa
rorb
sbb
lret
cmpsb
or
int3
dec
jb
iret
xchg
xorb
sub
into
daa
das
push
dec
jle
js
insl
pop
cli
aam
aam
jge
daa
jecxz
and
sahf
adc
push
sbb
cld
add
cmp
gs
cld
ja
mov
mov
push
fwait
add
xor
outsl
orb
daa
pop
pop
cmc
add
and
mov
xchg
sbb
fs
mov
and
mov
test
jl
and
pop
cmp
test
mov
test
inc
mov
jne
sahf
and
fbstp
mov
add
lds
outsl
pop
cmp
mov
fisttps
dec
fwait
pop
sbb
aaa
xor
repz
lods
lods
es
rclb
and
les
sub
or
stos
mov
inc
sbb
insb
mov
fstpl
test
add
pop
lock
stc
in
movsl
daa
lea
inc
jl
stos
daa
mov
mov
pop
jge
cmpl
popf
xchg
call
lcall
or
mov
sti
cmp
es
ja
xchg
xchg
lds
icebp
inc
sub
push
sub
ret
mul
shrb
loop
lods
outsb
inc
dec
int
jp
fidivrl
mov
test
fcomps
xchg
jge
std
popa
aad
or
int
arpl
cmpsb
repnz
push
rol
hlt
call
aaa
jg
xor
jns
lcall
pop
je
fcoml
adc
cmp
push
pushf
dec
mov
add
pop
cmpsb
out
leave
lret
jae
insl
fsubs
pop
jecxz
shll
add
push
sub
jle
movsl
dec
stc
call
xchg
mov
pop
imul
call
or
das
sub
or
shll
sti
sbb
mov
andl
jne
xchg
aam
mov
out
stc
repnz
jmp
aaa
in
mov
pop
daa
jae
jns
test
inc
out
inc
call
and
std
lcall
fldenv
test
loop,pn
xchg
inc
fnsave
je
pusha
loop
jge
scas
fwait
and
ret
fmulp
repz
enter
mov
jle
mov
ss
push
sbb
sbb
das
sbb
cld
loop
mov
cli
lds
les
push
sahf
and
add
lahf
out
leave
inc
mov
cmp
push
inc
shrb
stos
xchg
call
rclb
mov
or
jno
and
mov
mov
shrl
test
jnp
arpl
scas
xlat
cwtl
into
fldenv
loopne
pop
sti
mov
int
movsl
push
xchg
mov
mov
std
add
daa
subb
repz
stc
jb
lods
daa
fcoml
fiadds
jns
imul
cmpsb
mull
lcall
test
xchg
adc
add
and
sbb
subl
dec
in
rcr
jnp
nop
pop
and
nop
js
sub
push
orl
jge
pop
mov
cmp
push
ss
push
xchg
js
mov
insb
jecxz
imul
sub
cmpsl
sbb
in
lret
testl
shll
jns
shrl
inc
inc
push
mov
scas
inc
push
js
dec
pop
imul
popf
lods
xchg
and
mov
dec
lret
loopne
repnz
repnz
xchg
lods
aas
push
or
pop
rorb
dec
std
dec
stos
sub
xchg
push
into
xor
inc
cwtl
pop
addr16
cmp
sbb
mov
gs
testb
add
into
xchg
addr16
scas
mov
jae
cltd
xor
rorl
xchg
jne
inc
into
or
scas
mov
fnstenv
push
xchg
bnd
and
stos
imul
ds
shll
push
xor
adc
mov
ret
xchg
les
ret
pop
pop
aad
lods
bound
lods
ret
pushf
cmp
xor
xchg
outsl
push
mov
popf
push
mov
xchg
lea
add
sub
dec
sbb
fsubrl
sub
xor
sti
inc
stos
enter
dec
fstp
push
and
sub
mov
cmp
inc
fmul
adc
icebp
movsb
lret
add
xchg
aas
jae
jo
fimull
adc
out
sbb
push
mov
xchg
dec
fwait
out
test
add
push
sarb
cmp
jmp
cs
fdiv
push
lods
and
sbb
ss
inc
pop
inc
jno
xchg
jns
jecxz
leave
xor
and
lea
sub
lock
dec
movsl
and
faddl
sbb
std
andl
lea
xor
mov
sti
push
jl
out
out
pop
and
imul
adc
add
mov
je
daa
clc
cmpsb
xchg
fisttpl
xor
dec
leave
mov
xchg
or
inc
jo
insl
push
push
and
cmp
insl
stc
inc
add
fstl
orl
push
in
sbb
je
scas
shrb
ret
dec
adc
bound
ljmp
mov
int3
cmovl
lods
fistpll
jmpw
xor
push
daa
xchg
stos
pop
aaa
repz
addr16
and
pop
mov
xchg
addr16
and
movsb
add
push
filds
push
cmp
mov
cmpsb
ja
pop
scas
fdecstp
test
mov
aaa
jo
mov
int
sahf
lcall
jbe
push
dec
add
pop
and
xor
cmp
and
jno
mov
testl
cs
stc
stc
lret
mov
sbb
out
in
cmp
rol
jb
cltd
lods
xchg
js
es
icebp
mov
sub
cmp
enter
adc
add
sbb
pop
imulb
jo
inc
push
outsb
and
xor
fs
mov
in
repz
mov
cmc
dec
sarl
inc
sub
push
xchg
jge
or
clc
sti
cmp
xlat
jns
shl
mov
loop
jo
pop
aad
mov
or
add
sub
cmp
pop
cltd
push
loopne
shrl
xchg
jb
lahf
mov
mov
lds
icebp
aad
inc
xchg
mov
xchg
push
xchg
push
into
push
cmp
in
add
jle
sub
cmp
mov
int3
mov
xor
pop
xor
add
loop,pt
jp
sbb
cli
sbb
or
in
xor
fwait
push
stc
int
adc
nop
and
sub
inc
jmp
pop
xchg
fldt
into
faddl
int
mov
jge
mov
cmpsl
aad
sub
mov
movsb
dec
cmp
ss
enter
mov
ret
xchg
fnsave
mov
cwtl
ret
add
in
cwtl
mov
inc
and
sub
insl
and
scas
xchg
aad
fistps
insl
jge
jo
mov
test
dec
js
mov
add
loop
leave
jne
mov
call
aad
pop
sbb
add
mov
sarb
das
sub
push
sbb
lret
rol
xchg
push
pop
lret
adc
cmp
sub
insb
cmpsl
les
ja
sbb
scas
pushl
test
in
rcrl
jae
pop
gs
call
fbstp
movsb
scas
popa
mov
dec
out
mov
jbe
or
dec
lret
into
test
in
aad
and
cmp
mov
arpl
sub
lret
and
pop
loope
push
jnp
cmpsl
mov
lods
std
push
adc
or
fsubs
jbe
stos
add
out
out
popa
inc
pusha
adc
shrb
sub
pop
adc
ffree
mov
jns
jecxz
insb
stos
mov
in
jne
aam
mov
mov
jne
adc
mov
test
lds
lea
adc
xchg
addr16
pop
push
int3
jl
lcall
cltd
mov
lea
adc
push
cmp
jecxz
in
loop
add
scas
cmp
iret
add
das
sbb
xchg
mov
bnd
stc
popa
mov
inc
aam
jae
adc
mov
inc
stc
js
fucomip
add
pusha
es
aad
cmp
add
cmp
push
cld
xor
pop
and
sbb
das
aam
push
sbb
cli
enter
addb
mov
jnp
testl
add
cmp
test
cmp
dec
push
pop
addb
bound
xor
or
out
in
push
adc
std
ds
pop
aam
ret
add
fidivrl
pop
loop
xchg
iret
enter
xchg
out
addr16
and
ret
mov
imul
lahf
or
cmpl
mov
ds
mov
inc
insb
in
pop
repnz
mov
xchg
dec
pop
or
or
nop
rcrl
sbb
push
aad
sbb
stos
jg
addr16
mov
sub
dec
cmp
mov
pop
xor
rcr
pop
and
aam
popl
xchg
aam
jmp
xor
fsubrl
xchg
add
or
mov
iret
push
pop
inc
popa
stos
mov
imul
pop
hlt
outsl
xchg
xor
in
stos
pop
cmp
inc
outsl
mov
add
repz
popf
dec
mov
popa
testl
jne
push
add
push
sti
mov
adc
xchg
stos
xor
sub
fwait
and
jge
adc
cmp
pinsrw
fwait
adc
jae
push
out
and
sub
in
pop
insl
fwait
shll
stc
mov
cmp
js
mov
lods
nop
and
fcompl
jnp
pushf
pop
push
int
imul
addr16
or
mov
fsub
into
and
in
mov
sbb
fadds
addr16
pop
orb
mov
jne
aas
fdivrl
add
scas
rcrb
push
fs
sbb
mov
stos
or
sub
inc
out
adc
lret
jp
icebp
adc
leave
add
scas
dec
icebp
xchg
rorb
std
es
cmp
cwtl
aas
cmp
dec
icebp
scas
cwtl
inc
xor
xchg
add
aad
or
push
aad
push
in
mov
adcl
ret
les
pop
pop
pop
and
jl
lock
cs
lods
mov
dec
mov
test
fmuls
test
sbb
cmp
negl
push
sub
dec
add
loopne
cmp
out
dec
lock
jg
mov
ds
mov
sbb
xor
jp
movsl
pushl
add
xor
comiss
cli
jb
imul
push
jmp
imul
aad
je
inc
inc
stos
sahf
jo
ljmp
adc
cld
les
imul
mov
fidivrl
outsb
jae
jne
sbb
mov
imul
bound
iret
mov
cmp
or
push
adc
jecxz
out
cltd
mov
jae
xchg
popa
ds
mov
repz
push
or
cmp
jb
cmp
popa
inc
inc
mov
and
jmp
lea
mov
ficoml
das
push
stos
mov
jnp
cld
add
lock
shll
and
xor
outsb
xor
repnz
add
mov
scas
mov
ret
pop
xor
jbe
movsb
sub
loopne
and
sub
push
popa
push
pop
sbb
arpl
add
and
xor
enter
shlb
cmpsb
xor
inc
inc
jns
fldl
mov
iret
mov
sub
mov
out
sar
inc
or
dec
sub
movsl
mov
in
out
adc
outsb
pop
pop
xchg
jmp
pop
in
push
leave
gs
jge
adc
lea
leave
mov
xchg
xchg
xlat
shlb
cmp
adc
cmpsb
insb
test
fcom
jmp
or
js
incl
fdivrl
stc
xor
pop
nop
pushl
fnstsw
ss
xchg
js
lock
pusha
jmp
dec
repz
scas
xchg
in
orpd
es
cltd
cmc
stos
stos
adc
addb
add
je
mov
push
adc
or
iret
aad
popf
clc
push
filds
mov
fs
aas
xlat
inc
inc
sub
adc
movsl
adc
jle
icebp
xor
add
mov
scas
jnp
adc
inc
cld
jbe
mov
sub
inc
cmp
adc
and
xchg
push
pop
call
imul
pop
imul
sub
jmp
inc
dec
mov
std
and
push
dec
pop
inc
adc
loop
arpl
aam
or
xor
mov
and
push
jb
cmp
addb
mov
out
insl
xchg
stos
add
repz
jle
sub
mov
mov
cmp
sbb
pop
or
lods
mov
fwait
repz
xor
mov
mul
cwtl
xchg
push
push
xchg
xor
pushf
cmp
es
fdivl
xchg
push
idivb
cmp
push
insl
push
imul
wbinvd
jns
pop
cmp
jl
pop
out
jb
pop
enter
pop
nop
mov
movsb
jle
lds
mov
push
scas
mov
mov
in
cmp
rcll
or
jg
cmp
lea
movsl
sbb
xlat
cwtl
xchg
push
push
and
addb
inc
jae
fstpl
xor
outsl
inc
cmp
cmc
or
sahf
mov
popf
loopne
sbb
push
pop
mov
outsl
mov
add
add
push
outsl
push
push
fdivl
inc
and
ret
lret
pop
push
mov
notb
dec
pop
pop
lds
dec
jl
addr16
popa
mov
or
and
mov
pop
js
mov
shrb
pop
jno
jo
leave
inc
sbb
push
jno
mov
mov
pusha
gs
fistl
pop
mov
dec
or
and
pop
scas
loop
pop
pop
add
mov
lock
and
push
pusha
xchg
mov
cli
mov
xor
pop
mov
pusha
add
addr16
add
sub
mov
xchg
aas
mov
sub
mov
into
aad
dec
enter
and
mov
and
jbe
iret
or
enter
cmpsb
setnp
and
mov
lods
gs
sahf
jp
dec
inc
sbb
or
enter
xor
das
cwtl
pop
xchg
mov
jp
enter
clc
jo
pop
pop
dec
loop
and
fimuls
pop
pop
prefetch
or
xchg
imul
dec
xchg
lea
test
lds
push
xchg
and
sti
push
pop
mov
lods
les
ja
aam
or
pop
dec
mov
adc
subl
cmpsl
push
aaa
arpl
jnp
push
xchg
inc
stos
mov
push
fcompl
sub
xor
into
sbb
add
xchg
dec
xchg
or
scas
dec
or
or
sbb
out
les
mov
jnp
push
out
push
or
es
pop
xlat
push
mov
ret
leave
pop
mov
out
gs
stos
loop
jmp
cmpsl
jecxz
or
mov
lds
mov
popa
and
addb
aas
mov
jg
pop
imul
cs
fstps
fistpll
dec
adc
jae
push
dec
mov
sub
and
into
lret
inc
inc
cmc
push
pop
push
xorb
je
push
pop
ja,pn
shrl
or
mov
dec
adc
loop
gs
adc
mov
or
rolb
loop
cs
bound
jecxz
and
inc
mov
iret
out
push
or
pushf
sbb
outsl
jmp
aad
icebp
push
push
mov
cmp
push
jno
pop
add
adc
test
inc
mov
pop
mov
fistl
iret
push
fs
inc
or
mov
jmp
data16
adc
mov
unpckhps
or
xor
push
sub
ret
fwait
sub
lret
stc
adc
xor
inc
lds
data16
pusha
xlat
mov
enter
mov
adc
cmpsl
gs
int
and
adc
and
inc
repnz
leave
icebp
in
jg
int3
inc
pop
arpl
in
idivl
inc
jecxz
mov
inc
inc
add
cmp
lret
test
fstpt
negl
pusha
add
mov
pop
pop
das
add
mov
xchg
fidivs
nop
xchg
dec
fs
jnp
jl
int
hlt
xchg
out
pop
pop
mov
adc
dec
fsts
mov
ds
test
stc
int3
data16
and
stos
imul
push
mov
and
hlt
psubsb
xchg
dec
daa
fidivl
iret
cld
lock
push
clc
pusha
adc
xchg
mov
movl
rolb
sbb
xchg
fwait
dec
ss
insb
mov
push
dec
and
jb
sub
xchg
xor
jmp
sarb
idivb
xlat
stc
js
loop
jno
aas
push
imull
cmp
xchg
mov
sahf
inc
outsb
lods
rol
mov
or
int3
dec
cwtl
or
mov
mov
pop
and
sub
out
jmp
imul
mov
inc
dec
adc
in
andl
mov
cltd
xor
pop
adc
aad
daa
jp
lds
scas
lea
push
push
adc
mov
imul
inc
mov
mov
repnz
cmp
dec
mov
adc
xor
arpl
push
nop
xor
movsl
jg
icebp
stos
test
sar
roll
xor
mov
or
xchg
adc
cs
or
repnz
mov
daa
or
push
fcmovu
test
repz
mov
jne
push
fisubrl
xchg
xor
cmc
leave
inc
sbb
clc
add
jae
fldcw
cmc
mov
leave
jb
ret
xchg
adc
adc
add
jns
pop
xor
sbb
in
cli
jl
ret
mov
jo
rcll
mov
dec
lahf
lret
inc
mov
cmpsb
hlt
hlt
mov
int
or
or
popa
xor
dec
dec
enter
sbb
push
pushf
scas
jmp
pop
jns
dec
push
lret
add
repz
add
pop
test
mov
arpl
mulb
inc
int3
out
xor
inc
insl
rcr
xor
pusha
lods
in
push
and
out
scas
dec
sub
in
jno
add
sub
fstps
fisubs
xor
add
inc
xor
daa
frstor
xchg
jmp
jl
jns
xorl
push
or
push
add
push
fdivrp
mov
rolb
mov
arpl
push
and
mov
pop
jae
or
loope
fcmove
out
call
sbb
xlat
xchg
jle
mov
ss
xchg
in
xor
insl
push
sub
cmpb
mov
mov
add
push
in
lcall
das
xor
mov
leave
hlt
xor
sbb
add
jns
out
jmp
je
sub
mov
int3
push
in
and
pushf
sub
jge
outsb
and
push
int3
inc
xchg
push
pop
out
mov
ja
shrl
mov
fsubl
pop
pushf
dec
inc
setp
fldt
aad
jo
mov
push
inc
jmp
mov
rorl
repnz
adc
lods
stos
rcrb
insl
fdivl
jb
push
mov
repz
out
push
mov
cmp
and
in
in
and
mov
push
leave
lds
mov
mov
inc
dec
test
aas
or
in
xchg
jg
imul
adc
test
aas
add
popf
push
sar
jecxz
fld
xchg
jo
jg
mov
stos
push
test
call
imul
cltd
cmc
adc
pop
icebp
loope
lds
loope
je
sub
dec
rorb
jne
pop
xor
jl
jns
sbb
loope
cli
pop
in
cld
dec
test
jg
cmp
xchg
sti
movsl
jmp
xchg
mov
or
dec
in
lret
mov
ljmp
sub
cmp
out
sbb
pop
and
ficomps
pop
push
dec
dec
and
cs
pop
mov
pop
loope
hlt
or
iret
dec
adc
cmp
std
shl
xor
pushl
fisttpll
shll
cmp
jnp
dec
sub
ret
sbb
jge
lret
push
add
orb
pop
xor
xor
cmpsb
inc
sahf
push
mov
xchg
push
sarb
mov
jne
lahf
sub
out
inc
lahf
fmul
fdiv
jl
sub
mov
scas
cmp
fldt
mov
mov
je
in
pop
push
movsb
mov
mov
repz
push
sbb
xchg
out
mov
jae
pusha
jnp
push
cli
ret
clc
pop
mov
add
push
sub
adc
sbb
loopne
notb
xor
fldenv
lds
mov
stos
inc
pop
pop
and
js
inc
dec
sub
js
xor
mov
inc
push
sub
xchg
in
gs
mov
jns
pop
popf
add
mov
add
push
rcrl
testl
in
adc
shl
push
cmpsl
push
add
stc
lea
out
call
subps
push
push
push
rcr
add
jb
pop
add
and
fs
hlt
inc
inc
loop
call
push
je
cmp
shlb
jge
xlat
lahf
adc
inc
lock
out
mov
pop
adc
add
aad
sahf
fwait
dec
and
aad
jno
addr16
stos
in
jp
mov
fcmovu
int
addl
inc
pop
shlb
stos
cmp
mov
push
loope
test
add
into
push
clc
adcb
fsubrs
stos
arpl
mov
cmpsb
cld
xchg
out
aaa
iret
mov
push
or
jne
and
cld
adc
pop
push
pop
imul
cltd
das
jo
je
cmpsl
mov
dec
dec
sub
lea
xor
sub
in
mov
mov
jmp
xor
sub
int3
push
mov
xor
inc
push
stos
scas
enter
xchg
in
push
arpl
rcrl
test
jecxz
jg
icebp
ljmp
addb
shlb
adc
notb
sti
adc
or
sbb
pusha
push
pop
jl
bound
xchg
call
jmp
lret
mov
and
or
ds
cltd
xchg
addr16
add
fstl
sbb
das
push
insl
jecxz
add
rclb
inc
push
xor
xor
test
mov
sub
mov
add
push
jb
fisubrs
dec
sahf
mov
or
aad
adc
and
jecxz
stc
sbbb
push
mov
shl
clc
push
xor
cmp
rcl
jno
ljmp
sub
das
cmp
lcall
je
loop
shll
mov
mov
neg
xchg
jnp
iret
rcll
ds
andnps
sbb
aas
test
imull
stc
or
push
faddl
mov
inc
dec
push
pop
mov
sbb
lds
push
and
insb
inc
lods
cs
in
mov
pop
ss
cmc
inc
clc
ficompl
aad
fdivr
gs
xchg
or
mov
test
inc
inc
sbb
push
push
cmpl
and
in
mov
and
and
fcoml
inc
inc
xor
inc
xor
bound
jle
out
ds
or
dec
les
std
inc
and
inc
cmp
jae
mov
mov
sub
sbb
pop
stos
out
inc
mov
lret
and
xor
int3
mov
jg
jmp
push
leave
dec
mov
mov
sub
sti
movsl
xchg
mov
or
inc
sub
mov
jae
jge
pop
push
ja
jno
loope
adc
divb
or
lret
mov
sub
enter
loopne
repz
and
lea
jbe
out
add
ret
out
push
add
sub
lret
loope
sub
jb
jl
dec
jecxz
push
insl
pop
add
pop
pop
repnz
insl
sahf
push
jo
pop
fildll
stos
jb
add
pop
mov
mov
jmp
stos
dec
xchg
lock
hlt
jnp
add
jecxz
movsb
add
push
cmp
out
insl
pop
cmp
add
mov
stc
mov
dec
adc
xor
and
shlb
fimull
inc
repnz
mov
xchg
push
ds
xchg
push
lea
fidivrl
fiadds
shll
test
mov
cld
xor
scas
ret
add
aas
mov
out
lds
fstps
pop
stc
jmp
push
xlat
out
out
push
fcompl
loop
and
sbb
aaa
movsl
out
test
clc
sub
test
in
inc
mov
cmp
repz
mov
hlt
stos
sbb
push
imull
or
fwait
repnz
repnz
shl
in
xor
mov
sbb
inc
insl
ror
ljmp
stos
mul
add
mov
sbb
sbb
mov
inc
fld
sub
stos
cmc
sub
mov
inc
imulb
repnz
repnz
jb
popa
in
lods
dec
push
adcl
pusha
inc
pop
pop
mov
adc
test
stc
fbld
cmc
fisttpl
xchg
or
out
ja
push
cmpsb
mov
in
fmulp
and
pop
sbb
lock
xor
add
push
movsb
jl
sbb
shll
fwait
lds
mov
or
mov
ljmp
xchg
sub
les
lea
push
push
das
mov
pop
int
adc
add
jbe
pusha
sbb
xchg
adc
lret
out
repnz
and
pushf
fldenv
daa
fstpl
out
jns
sbb
sbb
add
cmc
sub
pop
push
or
daa
mov
sysenter
int3
sarb
push
sahf
jnp
dec
mov
fmul
or
cs
fldcw
es
repz
push
jmp
xchg
rcrl
jne
xor
ret
popf
mov
je
mov
mov
mov
in
xor
dec
int3
fadds
push
mov
inc
xor
movsl
or
xchg
mov
push
cmp
mov
lcall
stos
lock
xchg
inc
je
loop
dec
sub
aas
loopne
hlt
mov
out
scas
jp
add
push
out
cmovbe
push
mov
add
aaa
jb
aas
cmpsl
cmp
in
fnstcw
xchg
jp
mov
in
cmp
sbb
lods
aaa
mov
dec
and
out
outsb
push
mov
push
push
test
imul
or
into
add
sbb
or
mov
jnp
stos
ds
and
pop
movsb
inc
mov
xorb
push
cmp
inc
mov
jmp
jg
loop
sub
je
rcll
jle
test
xchg
dec
dec
fwait
dec
pop
cwtl
lds
imul
xor
aaa
shl
iret
sbb
jnp
inc
stos
add
pop
ds
inc
inc
jl
push
pop
or
test
in
pop
movsl
stos
xor
xor
lock
das
imul
xchg
xor
push
xchg
sarl
push
sub
cmp
subl
loope
mov
sub
imul
push
test
jl
or
sub
paddusw
mov
es
dec
jbe
pushf
pop
adc
xchg
mov
imul
lods
lods
push
or
mov
out
es
mov
jae
daa
jecxz
dec
mov
rcrl
cmp
xor
out
std
mov
push
adc
shlb
mov
lahf
ud0
idivl
mull
in
int3
ud1
sub
fsub
popa
fldl
push
data16
add
aaa
pop
es
les
shll
out
pop
repz
pop
sub
push
jnp
test
jl
repz
mov
mov
add
andl
pop
cmp
sub
mov
cmp
mov
repnz
or
dec
jle
push
sbb
xchg
notb
push
dec
xchg
sahf
jle
subb
sbb
xor
push
fstps
cmp
push
pushf
add
xor
mov
inc
mov
testb
scas
dec
and
insb
jmp
push
adcb
mov
out
nop
or
mov
scas
inc
cld
xchg
das
icebp
out
jno
and
mov
inc
xor
mov
or
and
pushf
inc
mov
stos
sbb
jno
sbb
stos
push
outsl
mov
sub
push
mov
mov
pop
ror
push
pop
cmc
enter
adc
xor
sti
mov
push
repnz
xlat
sub
jecxz
loope
or
xchg
push
test
popf
iret
add
test
movsb
movb
xor
inc
imul
sbb
outsl
and
pop
lret
pop
scas
adc
and
enter
jns
or
out
iret
adc
cmp
xchg
xacquire
stos
clc
push
addr16
icebp
or
and
std
add
aam
mov
out
insl
cld
je
fnstcw
pop
mov
lock
push
in
sub
test
js
mov
lahf
ror
push
pop
repz
test
or
fdivs
outsb
in
int
aaa
fidivrs
fsubrl
pop
or
pop
push
outsb
add
sahf
mov
and
or
or
aad
xchg
push
mov
cmp
lret
hlt
bound
into
add
inc
lret
and
pusha
push
das
mov
adc
jo
out
sti
jmp
outsl
pop
adcl
dec
xchg
xor
cmpsb
jo
mov
mov
notb
mov
push
outsb
pop
mov
shlb
imul
and
xchg
fisttps
inc
mov
cmp
push
add
dec
inc
aad
xchg
xchg
imul
jbe
jp
rcr
fsub
dec
icebp
cmp
sbbb
pop
ffree
in
loopne
adc
pop
scas
push
xor
test
jecxz
lea
mov
int3
xchg
jbe
mov
adc
mov
leave
jecxz
pop
test
inc
and
lahf
scas
pop
scas
enter
shrb
adc
popa
fiadds
xor
bound
stos
aad
pop
loopne
aad
adc
jae
cmpsl
pop
and
inc
mov
test
fwait
pandn
and
leave
ja
sbb
push
divb
nop
xlat
add
mov
mov
negl
jnp
outsb
js
pusha
inc
xor
push
inc
ja
push
jp
daa
mov
mov
hlt
fabs
js
outsl
sarl
mov
xorps
data16
std
mov
into
loope
fnstcw
out
jp
rclb
adc
mov
xchg
or
adc
push
subb
cmp
adc
addb
adc
inc
push
shlb
jne
jnp
add
and
iret
push
push
mov
fidivl
jno
inc
nop
hlt
sub
pop
add
pop
dec
adc
add
cld
jae
cmc
jge
add
mov
or
int
nop
pop
or
mov
out
add
in
or
adc
out
ret
push
push
addl
jnp
and
sub
mov
int3
push
movsl
test
xor
outsb
out
adc
pop
je
add
cs
jo
adc
inc
dec
dec
mov
cli
jp
insb
xchg
xchg
pcmpgtd
call
in
shrl
pop
in
or
add
shll
jnp
idiv
sbb
jl
and
das
imul
push
adc
push
je
fimuls
test
sub
pop
jmp
sbb
xor
scas
push
data16
sbb
sahf
nop
cmpsl
shrl
mov
sbbl
gs
es
je
out
std
xchg
mov
xchg
sbb
out
cltd
out
lds
lods
into
jge
insb
das
sbb
push
fstl
cmpsb
enter
mov
insb
xchg
andl
arpl
adc
pop
aaa
aaa
out
insb
stos
mov
lret
lea
mov
frstor
pop
je
xchg
push
fwait
mov
mov
sbb
icebp
stos
push
mov
movb
inc
mov
pop
mov
dec
push
movsl
lods
out
cmp
push
shll
ret
pop
xchg
nop
test
pusha
add
inc
loop
ljmp
sub
stc
call
sbb
stos
adc
pmulhuw
xchg
adc
outsl
fisubl
das
rcl
leave
ret
push
pop
test
cmp
insl
push
fldcw
xchg
sub
mov
jnp
jle
xchg
and
hlt
inc
and
sahf
and
xchg
and
subb
sbb
lods
loop
test
ljmp
mov
jae
faddp
sbb
mov
pop
repnz
inc
cmpsl
pop
dec
test
pop
push
jno
clc
dec
movsb
push
mov
push
pop
scas
jae
xor
dec
pop
imul
aaa
fldcw
and
insl
add
hlt
inc
aas
adc
movsl
pop
test
leave
lahf
repnz
jno
xchg
aaa
sti
cmpl
loope
sub
dec
xlat
inc
push
mov
xchg
aas
ret
dec
insb
mov
test
add
mov
xor
movsl
push
mov
xchg
sbbb
xor
outsb
dec
pop
mov
test
test
out
jo
aas
enter
imul
pop
cld
ljmp
lock
pop
lock
pop
adc
mov
add
aaa
mov
enter
fwait
movsl
jns
xchg
dec
xlat
out
jecxz
fadds
jg
decb
pop
jns
mov
ficomps
or
pop
outsl
dec
add
xchg
adc
lds
inc
stos
add
or
mov
mov
in
mov
sub
xor
cmpsb
jno
mov
sbb
loopne
sarb
lds
and
dec
ja
mov
insb
xor
pop
stos
int
out
repnz
and
mov
push
cmp
or
push
inc
sysexit
jmp
fwait
jae
mov
daa
jb
xor
leave
and
jmp
mov
out
into
xor
sbb
in
adc
call
push
dec
popa
jnp
cmp
dec
push
jno
sbb
lahf
push
sahf
stc
shl
das
dec
pop
jle
sahf
xchg
cltd
and
mov
aas
mov
mov
mov
ljmp
loopne
lods
add
addr16
lcall
fs
call
loope
fiaddl
jnp
adc
pop
lock
inc
fmull
lret
mov
adc
mov
rorb
xchg
cmp
hlt
jg
or
push
test
dec
lds
xor
push
mov
push
xor
popa
ret
pop
and
pop
xlat
push
sarb
filds
push
aam
rcrb
push
cmp
jae
in
inc
push
addl
outsl
mov
scas
stos
push
mov
dec
int
mov
fs
ljmp
lods
mov
push
cmp
inc
cld
xchg
dec
jbe
pop
and
or
ljmp
inc
mov
loop
and
cmp
aaa
int3
movsl
inc
lea
les
push
mov
icebp
push
popa
and
fcmovu
jl
mov
test
jnp
into
cwtl
sahf
xor
push
in
mov
sub
xchg
fdivrl
pop
iret
inc
and
fistl
mov
imul
mov
sub
jl
dec
and
add
cmp
mov
push
shl
mov
or
in
or
in
mov
sahf
or
pushf
mov
fbstp
lods
pop
sbbb
out
ret
scas
data16
aam
aam
sbb
aam
shll
out
loope
add
mov
xchg
jl
or
movsl
rorl
insb
and
push
inc
mov
loop
ret
nop
xor
mov
or
lods
mov
cmp
pop
mov
jno
lahf
dec
out
mov
shrb
inc
pop
xor
test
jnp
gs
scas
dec
bound
mov
mov
incl
jb
mov
out
je
adc
sbb
test
es
or
dec
enter
sub
mov
andb
pop
sub
jbe
mov
es
mov
pop
xchg
pop
leave
out
repz
aam
dec
mov
ficoms
addl
sub
ss
mov
or
mov
jnp
xchg
dec
inc
add
pop
mov
clc
push
dec
fsubr
pop
hlt
daa
adc
lods
sbb
mov
or
xor
call
das
shrl
and
rclb
mov
imul
es
sub
fists
iret
arpl
mov
pop
das
fs
jg
sbb
mov
pop
inc
add
cmp
mov
in
xchg
stos
xchg
arpl
insb
pop
mov
out
lret
jne
ss
cmp
xchg
daa
adc
sub
cmp
jbe
adc
or
stc
or
xor
dec
mov
mov
insl
dec
xor
push
pop
sti
mov
xchg
dec
scas
rcrb
clc
cmpsl
sub
sub
clc
xor
and
xor
fnstcw
clc
xor
fdivs
pushf
mov
stc
lock
mov
dec
cli
cmpb
ljmp
sub
push
sbb
rep
popa
popf
cld
lret
adc
fstpt
mov
sub
cmp
inc
or
leave
daa
mov
jge
jle
gs
shrl
imul
jnp
xchg
cmp
out
ljmp
std
jb
dec
sbb
loopne
loope
xchg
sbb
rclb
into
inc
pop
sbb
mov
mov
repz
dec
enter
cmp
rclb
mov
repz
xchg
in
stos
mov
dec
ret
out
pop
or
adc
pop
xchg
shlb
mov
xlat
inc
jb
jae
call
mov
cmp
xchg
or
jbe
out
ret
cli
nop
aam
fwait
lret
lret
pop
add
push
xlat
jns
scas
cmp
jecxz
cmp
aad
std
push
inc
mov
loope
dec
leave
js
cmpsl
lds
and
lds
int3
xchg
push
or
cmp
shll
mov
mov
pop
ja
cmp
cmp
lcall
push
xor
mov
sbb
sub
rcrl
test
pop
or
sysret
mov
js
xor
ljmp
mov
leave
push
jae
ss
or
popa
nop
repz
mov
test
mov
xchg
and
bndstx
mov
xchg
rolb
push
push
andb
stc
xchg
add
jb
dec
test
clc
mov
ljmp
xchg
jecxz
push
icebp
mov
jnp
pop
xchg
cltd
push
lea
inc
mov
xchg
dec
sbb
cmp
cmpsb
ret
iret
mov
aam
xor
adc
mov
pop
imul
mov
cmpb
mov
sub
xlat
push
cmp
sub
add
idivb
pushf
cwtl
test
and
fisttpll
pop
rol
jp
imul
test
cmc
cwtl
nop
ret
ficoml
xorl
mov
imul
stos
pop
test
cmp
push
addr16
dec
dec
pop
loop
push
mov
sbb
ja
sbb
cmp
push
push
mov
and
lock
les
inc
sbb
xchg
dec
cmp
jbe
js
xchg
add
ficompl
stos
add
xor
dec
insw
mov
and
ja
lea
adc
lock
jno
mov
enter
pop
jae
int3
dec
stos
add
jg
dec
roll
xlat
xor
iret
jbe
push
test
jns
cmp
mov
mov
es
add
clc
jo
test
loopne
out
mov
sub
subl
mov
stc
jge
inc
adc
test
lock
js
lods
lods
cmc
add
rorb
lock
and
mov
cmp
sahf
and
jg
outsb
push
outsl
xchg
test
xor
testb
push
cmp
add
xor
out
xor
cwtl
pusha
cmp
push
sbb
sbb
inc
lods
jecxz
push
rcrb
popf
xchg
sub
sbb
scas
mov
lea
jmp
daa
xor
sbb
mov
fisttps
pop
mov
subb
jno
icebp
push
mov
push
int
out
inc
xchg
movsb
mov
pop
cmpsb
push
mov
clc
das
or
clc
loope
sbb
movsl
loopne
jp
shll
push
inc
pop
fs
inc
iret
dec
fs
jecxz
flds
fildl
sbb
aad
push
push
jl
cli
add
push
movsl
aam
rol
clc
add
adc
fmuls
dec
test
and
flds
pop
jl
fwait
int3
in
add
mov
cmp
cmc
test
ficoms
xchg
cmp
js
push
xchg
fiaddl
clc
jp
sub
cmpsl
sub
fimuls
fs
mov
inc
bound
pop
gs
push
jno
lahf
fidivrl
sub
pop
jmp
pop
or
mov
mov
aaa
hlt
push
jl
xchg
mov
in
sbb
mov
mov
mov
mov
xor
nop
xor
mov
lret
mov
scas
outsb
pop
out
into
sar
lods
pop
lcall
into
jl
mov
loope
pushf
les
loope
xchg
sbb
dec
mov
outsl
adc
in
sub
fdivp
hlt
inc
div
mov
sbb
jle
push
ds
clc
rorb
or
icebp
and
mov
int
xlat
add
cwtl
dec
bound
mov
stos
xor
xor
jge
mov
pop
rcr
sub
arpl
std
push
push
mov
adc
subl
jae
das
cltd
jnp
popa
je
xchg
fs
add
xchg
out
jae
add
sub
pop
sbb
mov
enter
mov
mov
popf
jl
dec
out
jmp
out
loop
insl
ret
cmpsl
mov
mov
mov
sahf
mov
inc
popf
push
ljmp
cmp
mov
xlat
cld
incl
ret
bound
shrb
clc
shrb
flds
inc
xchg
and
jp
outsl
ds
xorb
and
mov
mov
loop
in
lock
ss
sub
and
stos
das
inc
sarl
xor
jb
shl
mov
inc
xchg
ds
sub
lock
xor
jnp
test
nop
pusha
fidivs
das
lods
std
popf
push
fdivl
incb
mov
aaa
pop
ret
jl
inc
out
or
cwtl
push
sbbb
icebp
inc
dec
add
ret
and
sbb
lcall
das
lods
mov
divb
jo
adc
cmc
add
int3
fbld
stos
sub
jp
mov
cmp
insl
sub
punpcklbw
or
and
sbb
inc
popa
sbb
pop
hlt
or
loopne
dec
ret
cmp
pop
add
xor
dec
dec
jo
mov
loope
and
lea
xor
mov
loop
sbb
push
mov
orb
mov
outsb
imul
fst
jg
xchg
push
ret
inc
mov
jl
or
int3
mov
inc
adc
and
xchg
cmp
outsb
movsl
mov
push
add
xchg
cmc
sbb
clc
sub
and
sbb
push
cmpsl
lods
orb
subb
push
add
xor
add
cmp
or
cltd
fldl
jae
adc
pop
dec
mov
mov
sub
ljmp
stos
nop
mov
rcll
cs
in
data16
mov
loopne
jge
sub
cmp
sahf
add
jle
mov
mov
pop
cmp
xor
or
push
sub
clc
sbb
cltd
lret
mov
sar
cmp
icebp
test
sub
mov
jne
push
enter
sub
hlt
lret
mov
fstps
idivb
mov
scas
sbb
jecxz
pop
xchg
jns
aad
iret
ja
fdivp
pop
or
xchg
hlt
mov
pop
pop
pop
fstp
pop
es
mov
add
frstor
in
pop
or
fstpl
lock
in
lods
jl
daa
cli
movsl
inc
pop
lcall
sub
sub
cmp
ret
push
xchg
lcall
sub
ja
enter
and
dec
xor
popf
inc
jo
into
sbb
iret
xchg
in
std
mov
test
xlat
adc
test
mov
jmp
and
loopne
sub
ret
ss
push
sahf
scas
push
test
pusha
jg
xlat
das
mov
dec
add
mov
jb
movsb
out
xor
xchg
movsb
sti
loope
icebp
push
jle
pusha
shr
ljmp
leave
aaa
adc
pop
clc
lret
or
data16
push
dec
test
scas
or
jb,pt
and
and
mov
in
stos
add
ja
sbb
jnp
sub
or
jb
mov
or
sub
jp
rclb
adc
hlt
movsb
sub
adc
test
cmpl
sub
cmp
test
sarl
into
mov
and
inc
inc
jle
stos
xor
or
pushf
xchg
mov
rcrl
cmp
add
fbstp
inc
xor
jp
jbe
cmp
or
cltd
xchg
clc
xor
dec
sbb
push
imul
or
shrb
sbbb
inc
popa
or
mov
mov
xor
nop
hlt
inc
pushf
int
std
call
inc
sub
incl
mov
fdivrs
cmp
loopne
andl
jg
dec
bound
gs
mov
cmp
dec
mov
xor
xchg
je
mov
addr16
mov
mov
aaa
imul
pop
sub
mov
sub
cmp
iret
dec
mov
jbe
scas
sub
mov
pop
fwait
dec
dec
out
leave
call
insl
clc
in
sbb
inc
outsb
ret
push
mov
mov
cmpl
push
popf
adc
stos
aad
inc
or
sub
pop
decb
and
lahf
dec
xchg
jno
push
add
push
aam
popf
bound
and
dec
sarl
xchg
pushf
sub
lods
mov
add
xchg
stos
jmp
dec
fdivl
iret
or
lret
mov
sbb
inc
sub
aas
sub
mov
mov
int3
inc
and
inc
je
sub
xor
sbb
inc
xor
ss
sbb
insl
insl
cmp
les
push
or
out
std
cmp
negl
test
insb
cld
xchg
sahf
inc
lock
fcmovnb
push
rcrl
sub
mov
jecxz
dec
cmp
mov
enter
insb
loop
outsb
adc
pop
sub
dec
in
adc
jne
and
rcrb
sbb
sbb
push
lds
adc
adc
push
mov
lea
mov
test
out
outsb
adc
mov
add
cmp
xor
mov
loop
pop
shl
out
adc
shr
cmp
dec
jg
fbld
and
hlt
mov
mov
adc
test
call
cmp
xchg
cmp
decb
fisubl
std
pop
dec
mov
sub
adc
jl
das
nop
jnp
test
push
repz
xor
stos
or
jmp
jg
lods
mov
push
mul
pop
inc
push
cmpsl
push
jo
cmpsb
push
aam
leave
cmp
repnz
dec
aad
cmp
sub
in
inc
out
sbb
je
and
inc
push
or
rcll
and
cs
testl
pop
popf
movsl
xchg
les
inc
mov
inc
or
pop
pop
int
lahf
push
cmp
into
pop
xor
mov
int3
test
xlat
je
mov
or
repz
cmp
outsl
mov
xchg
std
or
sbb
loope
int3
xchg
inc
inc
mov
adc
or
loope
xchg
add
jo
push
repz
je
inc
jbe
cmp
push
or
fsubs
cmp
sbb
shll
add
icebp
or
out
sahf
sbb
mov
push
dec
je
inc
xchg
mov
jecxz
in
push
cltd
and
lock
sub
mov
dec
repnz
lcall
dec
arpl
fistpl
jne
push
outsl
and
fldenv
pushf
xchg
pop
clc
sbb
lcallw
lcall
shll
cmp
in
sahf
loopne
test
aad
mov
ret
or
cmp
inc
pop
ja
mov
jno
test
mov
sbb
out
add
and
xchg
jno
pop
js
lret
scas
sbb
inc
shr
adcl
lods
out
inc
out
cltd
sub
mov
fwait
adc
out
cmp
mov
arpl
jb
and
test
dec
mov
adc
dec
jle
test
fnstcw
mov
add
outsb
cmp
mov
and
loop
leave
push
add
push
adc
je
mov
movsl
jl
sbb
les
fsubl
and
call
repnz
mov
aas
adc
mov
stos
imul
test
jbe
arpl
jns
or
fcmovnbe
fwait
and
adc
rcll
fadds
push
jnp
inc
popf
out
dec
loope
sahf
iret
stos
mov
je
or
imull
pop
push
int
mov
cmp
mov
cli
mov
push
sbb
cld
dec
sbb
jge
push
sbb
lcall
gs
xchg
jo
xlat
ret
pop
repz
les
sbb
mov
jecxz
and
jae
dec
mov
adc
dec
ljmp
add
ret
cld
cmpsl
ds
nop
enter
push
ss
push
in
dec
es
imul
sbb
es
ljmp
imul
and
out
adc
bnd
xor
int3
mov
std
les
push
pause
outsl
mov
dec
inc
lret
jge
adc
sub
into
test
cli
mov
push
mov
out
xor
jge
mov
mov
xchg
sbb
outsl
mov
in
pop
cli
inc
mov
xor
hlt
dec
ds
movsl
xchg
gs
test
movsl
aaa
imul
mov
sbb
popf
enter
adc
or
cmp
jmp
xor
pusha
push
jb
mov
push
adc
mov
mov
rorb
mov
inc
leave
rcl
lea
mov
out
iret
cli
int
push
push
in
mov
pusha
adc
dec
adcl
dec
push
arpl
dec
stos
lahf
aam
mov
insb
out
cmp
sbb
aad
xlat
ds
inc
lea
outsl
inc
sbb
sti
inc
es
adc
cwtl
push
movsb
cwtl
or
push
mov
pop
ret
sub
fisubrs
arpl
lcall
mov
push
into
int
lods
daa
enter
and
mov
in
setp
insb
inc
jle
xchg
mov
popa
lock
pop
or
daa
pop
pop
push
dec
mov
shrl
jl
add
and
mov
scas
xchg
pop
stos
mov
sbb
out
lret
imul
mov
lds
dec
jnp
psrlq
lcall
inc
jp
icebp
cs
insl
cmc
and
sbb
fninit
cmp
xchg
pop
jnp
clc
adc
xlat
repz
mov
push
fs
adcb
inc
out
xchg
sub
rcrl
daa
adc
in
movsl
sbb
pop
dec
ljmp
mov
push
xchg
inc
lock
fldcw
mov
adc
daa
mov
nop
adc
imul
dec
fcomps
std
push
mov
stc
xchg
ljmp
sub
fldt
lock
push
imul
fstp
xchg
push
lods
sbb
ret
orb
mov
and
pop
or
insb
cmc
insb
mov
pop
insb
xor
push
mov
imul
mov
or
dec
lods
jae
lret
ret
leave
dec
rorl
imul
das
test
int3
inc
hlt
pop
inc
xchg
mov
mov
xor
jle
fs
pushf
pop
add
roll
pushf
adc
pop
sub
jns
lret
inc
xor
outsl
mov
cmc
out
xchg
je
in
xor
push
loope
mov
mov
sbb
sbb
fs
pusha
or
cmp
add
mov
push
sbb
jno
dec
sub
pop
loop
push
or
ret
fucomi
dec
lret
mov
shl
cmpxchg
lock
jmp
out
jge
dec
fstpl
stc
fs
in
mov
jmp
cwtl
dec
cmc
stos
enter
jge
pop
pop
rorb
inc
mov
dec
mov
push
pop
cmc
lea
repz
into
out
aaa
scas
pop
xchg
pop
repz
sub
mov
push
xor
or
pop
int
in
sub
insl
sahf
into
js
add
mov
push
inc
mov
push
pop
movsb
xchg
pop
fwait
or
xor
lock
imul
pop
and
sub
rcr
adc
cmp
jmp
adc
pop
fstl
jo
ja
outsb
call
mov
enter
in
adc
mov
shlb
sarb
push
out
and
jb
shll
movsl
ja
ret
lcall
jle
push
jle
loopne
jnp
jl
imulb
cmp
add
cmpsb
and
mov
les
dec
mov
pop
lcall
push
push
xorl
push
jae
pop
stos
inc
jecxz
cmpsb
loopne
jle
xlat
jae
sub
imul
aaa
mov
xchg
mov
addr16
adc
stos
andl
push
mov
imul
push
push
aad
xchg
add
loope
inc
ja
lret
adc
jecxz
das
sahf
mov
pusha
rol
js
inc
push
iret
cmp
leave
push
sbb
stc
xchg
push
out
mov
or
push
mov
pop
push
mov
and
push
repnz
dec
pusha
push
pop
mov
mov
mov
and
dec
mov
adc
clc
jne
sbb
outsl
imul
jecxz
or
mov
pop
mov
cmp
xor
dec
jns
dec
shll
xchg
or
add
es
pop
cmp
cltd
dec
scas
lcall
push
popf
ss
ds
mov
cmpsl
xor
mov
das
inc
leave
jo
cs
cltd
sub
pop
xchg
pop
xor
pushf
shrb
sub
ss
subb
ja
xchg
pop
push
push
cmc
mov
cmpb
and
xchg
mov
test
push
sub
sub
neg
daa
mov
pop
or
insl
ret
lahf
divb
aam
sub
push
or
mov
outsl
imul
dec
pop
lret
repnz
push
pop
jl
push
xor
or
inc
sub
mov
je
repz
loope
inc
push
jmp
imul
div
xchg
fiadds
xor
push
mov
mov
mov
xor
insb
and
and
lcall
cmp
sub
insl
test
push
in
mov
xchg
sub
sbb
jae
out
mov
pop
in
dec
or
adc
clc
in
clc
fdivl
cmp
leave
push
loopne
push
dec
shrb
in
inc
cmp
cmp
lret
mov
int3
inc
enter
mov
sub
lcall
nop
push
insl
loop
mov
mov
ret
mov
jle
jbe
scas
ret
xor
in
test
sbb
inc
jle
or
stc
loopne
sub
fisubrl
cmp
lds
pop
cmp
mov
mov
push
clc
mov
rolb
xor
cmp
fisttps
ss
hlt
loop
aad
repz
or
xor
scas
push
xchg
push
push
or
daa
or
hlt
in
outsl
rcrb
lahf
call
sti
popf
shl
in
push
stos
fidivrs
adc
inc
aas
sti
push
clc
xchg
cmpsb
pop
push
in
mov
sub
cmp
fs
dec
mov
cmp
jmp
dec
rorl
adc
jg
push
jl
push
in
mov
lods
lret
xchg
inc
or
dec
in
mov
cs
pop
mov
mov
mov
xlat
jecxz
in
out
mov
dec
inc
dec
rclb
adc
data16
pusha
xchg
lahf
ret
ja
cmpsl
imul
dec
outsl
sar
and
test
push
stc
mov
lods
das
sbb
mov
lret
call
mov
fnstsw
pop
inc
dec
add
sbb
pushf
movsb
daa
jecxz
mov
pushf
movsb
lds
push
pop
dec
jle
jae
pop
sti
loope
outsb
repz
sahf
pop
fstl
sbb
and
lea
pop
popa
out
mov
les
mov
push
sub
pop
sbb
inc
rorl
and
repz
rcrb
addr16
call
in
mov
jp
cmp
sahf
pop
dec
push
loopne
js
mov
jl
bound
call
sti
mov
js
push
xchg
sub
out
js
xchg
lock
cmp
addr16
dec
xchg
push
xchg
leave
mov
js
pop
test
cs
cmp
inc
ret
cmp
add
idivb
out
add
mov
stos
jo
aas
mov
daa
push
pusha
xchg
mov
movsl
fcmovnb
sub
xor
or
xor
mov
xor
dec
jmp
xchg
ss
pop
mov
lds
push
xchg
in
jp
gs
inc
pop
inc
jo
in
xchg
cmp
icebp
out
xor
std
addb
pusha
shlb
inc
add
and
decl
stos
mov
imull
es
lea
test
push
shlb
add
xchg
mov
rclb
mov
mov
xchg
insb
xlat
pop
jmp
cmp
loop
xchg
add
into
sub
and
lds
repz
mov
ret
rorl
xor
out
and
mov
dec
add
lret
cmp
flds
mov
ret
and
daa
push
leave
in
nop
jge
rorb
scas
movsb
cmpsb
sbb
jmp
xchg
out
ljmp
xchg
aaa
and
lods
mov
jno
test
addr16
insb
repnz
ja
js
adc
stos
int3
je
pop
cmp
dec
dec
stos
lods
xchg
jmp
xchg
jle
sub
or
cmp
insb
repnz
into
or
into
pusha
int
dec
xchg
ret
out
shlb
jae
mov
sbb
scas
or
in
push
cmp
pushf
add
in
test
ja
jle
pop
adc
cmp
jmp
test
int
xchg
lods
sbb
stc
dec
into
xchg
popa
inc
pop
dec
popa
mov
repz
subb
in
scas
test
sahf
push
out
jns
test
cmp
cwtl
pusha
pop
ja
sub
add
outsb
or
mov
sbb
nop
loopne
mov
mov
loope
lret
aaa
fcmove
mov
dec
cmp
mov
stc
sbb
sahf
xor
popf
adc
cmp
cmp
nop
push
and
dec
sbb
push
dec
out
mov
mov
das
pop
push
jns
mov
icebp
mov
mov
inc
mov
inc
out
adc
jecxz
inc
rorl
clc
rol
fnstsw
idivb
push
dec
push
adc
sti
daa
inc
test
int3
sub
data16
xor
push
push
dec
lret
mov
outsb
pop
roll
and
mov
cltd
lods
subb
mov
adc
lcall
mov
cmp
outsb
xor
daa
movsl
dec
inc
sarl
and
mov
call
inc
imul
loopne
sbb
pop
mov
xchg
push
aaa
mov
cmp
scas
lock
ds
in
push
add
aad
mov
bound
adc
sub
out
ja
pop
cmp
leave
xchg
sub
mov
in
dec
push
mov
mov
sub
mov
loopne
mov
cmpsb
mov
nop
loope
in
js
rcll
sti
xchg
pop
cmp
or
andl
pop
into
push
out
pop
mov
repnz
inc
sbb
inc
xchg
pop
andb
cmc
in
in
cmpsb
jae
roll
inc
xchg
jp
cmp
dec
xchg
or
jmp
jb
lock
movsl
push
aas
out
xchg
add
pop
push
jmp
fdivs
xlat
sub
and
pop
fsubl
enter
sbb
sub
push
mov
cmp
cmc
sahf
and
movsl
mov
test
int
js
jne
push
insb
push
scas
mov
repz
ja
int3
stc
cmpl
dec
cs
cmp
xchg
add
push
lahf
rolb
outsl
loopne
mov
lods
inc
cmp
mov
jbe
cs
fstpl
xchg
sbb
test
mov
out
addr16
sub
pop
dec
inc
mov
in
inc
jb,pt
inc
jp
out
gs
clc
rcll
add
popf
lcall
repz
sbb
xchg
inc
call
test
hlt
mov
xor
sarb
sbb
mov
dec
pop
inc
daa
lea
push
insl
cmp
in
sti
fdiv
in
pusha
xchg
mov
dec
arpl
mov
mov
jge
jae
or
lea
ds
decb
or
int3
mov
jmp
cmc
test
ljmp
test
sub
stc
sub
inc
mov
dec
pushf
mov
cmp
icebp
mov
push
popa
cli
mov
mov
mov
adc
shll
xor
mov
add
int
xchg
pusha
xor
push
pop
outsl
push
dec
lahf
mov
andb
inc
int3
sbb
fwait
sub
int3
mov
sti
lcall
outsb
sub
adc
pop
xchg
push
push
test
xor
xchg
pop
dec
sub
daa
lcall
mov
lcall
pop
inc
dec
jge
inc
xchg
cld
cwtl
and
inc
inc
mov
in
sub
scas
sti
xchg
dec
push
pop
divl
dec
add
jl
imul
xor
xchg
lcall
ja
movsb
ficoml
push
and
loop
cli
xor
in
nop
push
sti
push
lds
int3
adc
cld
popa
mov
out
loope
fcomp
int3
cmp
hlt
add
aad
jg
sub
lret
loope
jmp
push
sub
inc
xor
repz
inc
pop
lret
adc
and
mov
js
xchg
or
std
ret
icebp
lahf
in
arpl
sar
icebp
ds
adc
xchg
xchg
loop
out
cmp
rcll
lcall
popa
xchg
inc
mov
mov
mov
aam
movsb
lods
jnp
sub
cmpl
xchg
inc
push
std
cmp
or
jl
add
insb
cld
sbb
mov
jns
loop
in
inc
scas
jle
xor
mov
pop
es
and
das
daa
faddl
arpl
or
lret
mov
dec
movsb
negb
fmull
notl
mov
outsb
and
add
cmpsl
std
xor
leave
jle
jo
fidivl
inc
inc
mov
ja
nop
movsl
cmp
mov
xor
cwtl
sbb
ret
sub
inc
or
movsb
stc
sub
push
inc
sti
ja
mov
mov
mov
xchg
push
mov
or
mov
test
xchg
dec
test
dec
mov
jl
insb
jno
sbb
lods
or
xchg
lcall
xor
mov
xor
imul
ret
mov
cmp
cmp
sbb
jns
lods
popf
mov
stos
mov
xor
mov
shrl
dec
sub
outsl
dec
sbb
lds
repnz
nop
cmc
sub
inc
lcall
movl
outsb
lret
push
push
lea
test
aas
xchg
scas
jecxz
ds
daa
or
inc
adc
mov
xchg
sbb
sbb
shrl
loopne
flds
cs
add
aas
sub
js
cltd
loop
lds
sbb
imul
cmp
push
out
fbstp
rclb
sbb
jle
imul
or
out
jmp
or
sbbb
xor
sbb
ja
cmpsl
adc
cs
sti
or
into
insb
mov
xor
jns
mov
jg
loopne
cli
mov
enter
daa
push
lock
cmpsl
es
pushf
sbb
in
sbb
test
jae
test
inc
inc
push
pop
std
jg
cmp
adc
lds
xchg
shl
sub
fbstp
xchg
es
jns
push
or
lret
addw
pop
ret
mov
inc
emms
add
cmp
jle
or
cmp
xchg
rolb
fldl
jmp
jge
add
adc
in
lea
add
iret
jno
insl
popa
xchg
addb
rorb
je
rcll
mov
add
fisubrs
lods
mov
jg
mov
rcl
or
fidivl
cld
repnz
xor
mov
rcrl
sbb
in
push
fists
adc
jl
in
es
lahf
test
aam
and
fwait
scas
dec
add
cmp
sarb
xchg
cmp
in
cmpsl
add
pop
jbe
xchg
mull
push
jne
jge
pop
mov
lods
or
adc
shrb
pop
rclb
jns
adc
das
ljmp
shrd
xor
and
xor
adc
cmpsl
cmpsb
push
mov
nop
lods
mov
sub
mov
pop
push
enter
inc
mov
lea
sti
icebp
int
ljmp
jle
cwtl
cmp
xor
pop
pop
fisubs
cmp
mov
pop
in
nop
and
ss
mov
pop
xchg
inc
imul
out
inc
xlat
loop
idivl
dec
sbb
xor
out
dec
lods
hlt
mov
mov
sub
jbe
mov
inc
rcrl
arpl
inc
inc
push
insl
mov
mov
jbe
adc
lds
test
testb
ja
cmpl
jne
cmp
cltd
jnp
test
push
aam
daa
xor
xchg
mov
sbb
enter
dec
adcl
imul
or
incb
mov
loop
xlat
ret
pop
out
jmp
xor
es
sbb
pop
cmpsl
and
call
fistl
hlt
aaa
jp
dec
sbb
cwtl
je
mov
int3
jge
mov
clc
or
xchg
imul
shl
jns
daa
inc
mov
popf
sbb
adc
jg
popf
jbe
sbb
stc
or
orl
cmp
rcrl
and
mov
rclb
rorb
sub
push
mov
pop
lahf
inc
cmp
lahf
pop
jmp
testb
in
je
cmp
cltd
xchg
filds
jne
push
lret
jo
mov
in
jmp
inc
xor
push
fidivl
stos
dec
aas
xlat
aad
js
mov
cmpsl
cmp
lods
pop
xchg
pop
test
out
out
cmp
mov
mov
icebp
int
pandn
mov
aas
loop
into
add
imul
mov
sbb
repnz
cmp
mov
iret
aam
hlt
add
in
scas
jle
push
jmp
jecxz
cmp
dec
pop
jle
push
xor
jmp
fidivs
mov
movsb
inc
mov
mov
aas
test
lret
sub
mov
shll
xor
xor
rcr
jmp
psrlw
or
pusha
add
roll
pop
in
dec
sub
mov
push
or
xor
push
jle
dec
jne
mov
testl
imul
pop
ds
pop
jns
xchg
dec
jp
lcall
cmp
pushf
js
cmp
mov
imul
push
xchg
cmpsl
xchg
out
jp
inc
popf
jp
cmpl
fdivs
testb
add
cmpsl
sub
adc
inc
fiaddl
add
cmp
mov
and
sub
scas
push
mov
xchg
das
insb
fidivrl
jl
dec
mov
outsl
jle
jp
mov
jno
out
push
ficompl
imul
inc
enter
stc
pusha
pusha
xchg
xor
rolb
lea
mov
mov
or
sub
sub
jbe
cltd
or
mov
adc
mov
sbb
rcl
aad
daa
inc
lcall
pushf
and
sub
leave
mov
ss
int3
scas
pop
shlb
cli
out
cltd
mov
aam
jg
xor
mov
mov
stc
bound
sbb
inc
rorb
rorl
out
and
ret
stos
andb
xchg
add
lock
test
nop
aam
jno
jg
lea
test
or
shl
xchg
mov
mov
jne
hlt
cmp
adc
fistl
rorl
sahf
iret
pop
cmpsb
pop
in
xor
mov
push
repz
and
ljmp
xchg
lock
inc
outsl
sbb
inc
push
ljmp
test
test
es
daa
jge
icebp
push
and
xchg
and
sahf
xrelease
inc
fsubp
ret
dec
lock
pusha
xlat
mov
das
xlat
jns
push
push
fwait
fwait
lods
and
mov
jmp
dec
jge
mov
divb
cmp
cwtl
jg
add
in
cmc
dec
adc
jg
xlat
es
mov
push
mov
loope
push
push
int
or
xchg
dec
push
jle
xrelease
neg
sub
inc
and
stc
mov
cmp
cld
push
int3
xchg
cltd
mov
inc
add
leave
xor
cs
mov
mov
pop
cld
fdivs
add
in
mov
scas
aas
xchg
pusha
xor
daa
ja
sbb
xchg
call
rclb
movsb
sub
out
jo
sti
mov
lods
jle
adc
fstpl
es
in
lahf
popa
std
jns
out
jns
test
lods
stos
add
xchg
lret
push
fiadds
mov
mov
sbb
daa
mov
outsl
push
leave
loop
cli
jle
loope
fiadds
and
jns
and
rclb
lods
mov
enter
mov
push
jmp
jo
cmp
xor
insb
in
pop
mov
dec
and
rcll
and
mov
jle
add
fmulp
aaa
movsb
jecxz
inc
mov
test
add
clc
add
aam
dec
pop
popf
ja
arpl
and
pop
sbb
sbb
mov
shl
js
push
xor
cld
xchg
mov
jmp
insl
pop
es
dec
fisubrs
xor
f2xm1
test
mov
or
int3
clc
shll
nop
movsl
xchg
jecxz
mov
out
jp
sbb
push
aam
pop
cmp
mov
pop
cmc
sub
mov
pop
stc
cmc
mov
insb
lahf
cmc
cmp
or
movsb
mov
add
das
ret
sub
data16
jecxz
shll
cmp
int
or
push
rolb
je
cmp
mov
or
push
cltd
add
pop
sbbl
fidivrs
adc
xor
add
ds
sub
aad
push
dec
push
sarl
adc
jb
ss
xorb
mov
sbb
call
js
xchg
orl
dec
push
push
sti
mov
jp
fs
ljmp
push
add
dec
js
mov
lds
rcr
mov
std
ret
jnp
divb
aas
inc
pop
pusha
pop
mov
jge
lcall
or
add
and
clc
jo
cmpsb
mov
mov
mov
das
jg
pop
push
xchg
inc
jmp
scas
pop
cmpsl
mov
xchg
mov
shlb
dec
out
shrl
movl
jle
aad
shll
or
repnz
adc
popf
xchg
in
xorb
adc
mov
mov
push
sbb
or
les
add
jecxz
push
movsb
into
lock
jbe
inc
pop
outsl
add
push
ja
pop
cmpsb
jecxz
pop
inc
rolb
icebp
and
movl
cmc
lea
rcl
aaa
jns
pop
mov
mov
or
test
stos
adc
fidivrl
in
mov
call
dec
out
hlt
aam
push
jl
xchg
inc
mov
nop
or
mov
mov
jns
push
outsl
xchg
mov
jmp
sub
rclb
xchg
mov
or
mov
enter
aam
and
out
insl
outsl
dec
push
leave
or
mov
bswap
push
pusha
pushf
ljmp
sbb
out
push
ja
push
sbb
dec
sbb
mov
pop
lds
mov
push
inc
std
mov
std
push
outsb
inc
push
mov
fldenv
pop
xor
push
sub
mov
pop
invd
icebp
rcll
mov
and
or
in
and
mov
xlat
sahf
adc
push
fldcw
push
addb
mull
adc
fs
or
mov
fiaddl
mov
stos
popf
xchg
jl
subl
arpl
and
add
cmp
imul
push
pop
adc
jae
jnp
mov
dec
inc
sbbl
xchg
pop
push
lods
mov
mov
mov
stos
decl
fnstcw
lods
pushf
out
imul
xor
mov
addr16
add
sub
leave
ss
jne
loopne
push
or
add
js
add
repnz
frstor
repz
pop
jge
testb
and
push
loop
loope
sub
pusha
daa
rorl
or
les
in
xchg
xchg
lock
cmp
pop
inc
sbb
push
or
mov
or
dec
sbb
retw
out
xor
repnz
outsl
aam
aas
lods
push
jo
dec
addr16
sbbl
mov
sub
sbb
push
mov
ret
sub
out
cmp
outsb
scas
mov
cmp
je
cmc
mov
pop
mov
adc
jne
cmp
gs
xchg
mov
ret
stos
and
sbb
mov
lret
shlb
jno
xchg
mov
fs
and
sub
mov
add
mov
jge
mov
add
nop
ficoml
xchg
rolb
jecxz
jmp
jmp
fldcw
dec
movsb
repz
adc
xor
push
mov
in
or
jae
imul
repnz
addb
push
mov
push
stos
inc
sahf
fadds
lcall
int
push
call
addr16
mov
mov
or
scas
or
xchg
rclb
inc
ljmp
mov
andl
xchg
subl
mov
pop
sbb
mov
rorl
inc
push
iret
xchg
movsl
sarl
out
movsb
faddl
in
mov
mov
fwait
std
fistps
sbb
addr16
sbb
jae
pop
lret
mov
ds
xchg
inc
adc
loope
icebp
cli
js
push
mov
inc
pop
mov
push
sbb
data16
sbb
mov
xor
sbb
pop
leave
jle
mov
pop
lea
push
stos
sbb
cmp
mov
lds
aaa
sub
int
mov
bound
cmp
movsl
aad
loopne
add
mov
cmp
repz
cmp
mov
xor
clc
fstp
add
pop
insb
jno
data16
fdivl
rcll
mov
stos
push
xlat
out
scas
lock
loope
mov
mov
mov
and
subl
aad
js
je
mov
cmpsl
inc
stos
inc
call
mov
lods
into
pop
and
aam
mov
inc
mov
aad
jle
lret
scas
ss
into
sub
pop
cld
mov
sub
mov
xchg
ret
ja
sub
mov
mov
or
add
xorb
aaa
rcll
pop
xor
ror
sbb
xchg
cltd
jg
pusha
pushf
mov
sarb
push
imul
inc
adc
jmp
or
jne
pop
add
push
sub
fdivl
fldenv
loopne
adc
sbb
xor
mov
and
fldcw
ds
and
test
ds
cmc
stos
fwait
movsl
xlat
daa
mov
jp
mov
pop
out
in
adc
testl
rcll
mov
xor
push
xor
adc
jl
lcall
aam
cwtl
sbb
pusha
add
and
ljmp
and
in
dec
sub
into
mov
inc
nop
sub
in
adc
push
rolb
dec
out
xchg
nop
push
fdivrl
repz
int3
xor
test
in
xor
jnp
and
aad
push
xor
xchg
pop
lea
popf
stc
jmp
jnp
shrl
das
jge
adc
and
sbb
cmp
fisubs
sbb
jecxz
ficompl
daa
pop
cmpsb
push
add
in
aas
or
jge
dec
xchg
or
inc
push
inc
push
ljmp
and
inc
mov
mov
inc
pop
in
rclb
testb
sub
test
adc
sub
cltd
inc
in
xor
fnstenv
test
jnp
jnp
dec
cmpsb
sbb
test
repnz
sub
dec
sbb
dec
add
xlat
sbb
pop
mov
and
lods
jb
jge
mov
loop
ret
outsb
in
pop
aaa
lcall
fs
pushf
in
mov
insl
les
jne
sbb
xchg
push
insl
inc
xchg
lods
jns
inc
fisttpll
xor
ret
pop
cltd
sti
mov
jl
int3
cmpsl
push
mov
jecxz
mov
inc
sub
mov
and
movsl
int
outsl
cmp
andb
pop
imul
divl
jmp
pop
insb
mov
xchg
sbb
shll
pop
pushf
sbbb
xchg
imull
mov
test
test
testl
dec
pushf
sbb
iret
fwait
test
dec
and
cmp
data16
pop
lcall
sti
sarb
inc
bound
int3
scas
data16
arpl
std
repnz
push
push
sbb
add
jb
sbb
xorl
in
jge
and
std
je
adc
mov
jle
ds
stos
xchg
jl
jl
in
aad
shll
cmp
js
clc
dec
dec
cmp
gs
ds
jne
xor
pushf
les
xor
xchg
push
mov
pop
aas
cmp
jns
pop
nop
mov
cmp
jb
bound
pop
xchg
dec
xor
and
or
stos
lahf
adc
pushf
add
loopne
sbb
aaa
and
xchg
es
mov
ljmp
ss
fdivs
jp
fisttpl
out
xchg
add
mov
dec
inc
sbb
fwait
movsb
xchg
in
xor
add
sahf
aas
push
add
leave
sarb
inc
in
jge
mov
fwait
mov
pop
or
movsb
pop
xlat
xlat
and
mov
or
cli
cmp
lahf
cld
imul
incl
hlt
inc
cld
push
xchg
xchg
stos
incb
popf
ret
subl
xor
mov
stc
in
gs
vpshld
cmc
movsb
clc
add
insl
les
push
push
xchg
adc
int
outsb
sub
fwait
xor
or
imul
adc
xor
jecxz
pop
sti
mov
movsb
xchg
xor
mov
push
xor
xchg
ret
push
or
imulb
or
sahf
in
loop
sbb
insb
les
stc
xorl
fsubrl
pop
xchg
mov
add
lea
fiaddl
or
inc
sbb
sahf
fildl
rol
cmpsb
mov
xchg
cld
cmovl
and
mov
inc
test
and
mov
mov
push
jp
and
jmp
xchg
lods
xlat
jle
mov
mov
jge
push
lds
repz
sbb
push
daa
nop
jp
cmpsl
inc
subb
push
push
and
and
loope
cmc
addr16
iret
push
ds
or
push
pop
jmp
int3
mov
loop
ljmp
add
or
repz
or
arpl
push
and
adc
and
xor
iret
xor
jl
jb
xchg
mov
enter
out
inc
rolb
xorb
loop
add
xor
mov
mov
mov
cmc
mov
add
adcb
aas
repnz
test
pop
les
lods
pop
push
out
push
outsb
pop
mov
add
mov
sbb
jle
sbb
cli
ffree
mov
and
jb
scas
hlt
and
push
mov
daa
cmpsb
aas
jbe
xchg
push
cld
jmp
je
lret
push
jo
xchg
mov
test
jge
fistpll
shlb
cmpsl
cwtl
mov
jno
rclb
or
ret
fwait
mov
call
sbb
insb
xacquire
add
inc
jbe
arpl
push
fisubl
add
hlt
pop
sbb
int3
mov
xchg
shl
nop
dec
ficoml
jae
inc
jg
sub
insb
out
fwait
or
sti
lea
mov
pop
or
xor
fwait
mov
cmp
xchg
pop
fisubs
stos
scas
pushf
add
sub
adc
sub
sar
pop
popa
inc
sub
aas
insb
xor
ret
fistpll
data16
push
loopne
out
adc
jl
cmc
jge
pop
sbb
cld
lods
pop
aaa
mov
outsb
shrb
and
test
scas
or
pop
icebp
cltd
daa
aaa
mov
inc
arpl
sub
xchg
ficoml
push
and
xchg
hlt
push
adc
test
sbb
cmpsl
or
iret
sub
sbb
cmpsl
rcr
sarl
bound
push
and
push
push
and
or
add
stos
decb
imul
call
or
out
push
inc
mov
mov
mov
into
xchg
lcall
cltd
add
outsb
sbb
dec
push
testl
cmp
leave
mov
in
mov
jecxz
cmp
invd
pop
add
dec
gs
fidivl
sub
loop
movsb
xchg
lock
xchg
mov
fidivl
lret
push
mov
test
popf
push
pop
or
rolb
mov
jp
sub
pop
lcall
jb
pop
adc
jmp
push
loopne
mov
sub
hlt
bnd
pop
lcall
jmp
subb
icebp
add
push
scas
ds
mov
push
and
dec
out
xchg
in
jmp
xorb
fldcw
loope
ds
mov
inc
mov
xor
adc
pusha
ret
mov
cltd
jp
pop
mov
pushf
mov
out
or
xor
sbb
push
dec
xchg
outsl
pop
push
das
or
out
sbb
push
or
push
lock
aas
div
loop
sbb
xchg
inc
cli
mov
or
jl
add
mov
mov
sbb
dec
add
cmpsb
cs
adc
cmpsl
jno
enter
adc
cmp
push
sub
sbb
aam
aaa
push
push
mov
cmp
movsl
inc
pop
jae
xchg
lods
mov
pop
mov
sbb
je
stos
xchg
out
mov
push
pop
test
xchg
out
add
aaa
sbb
mov
outsl
push
lar
xchg
pop
iret
mov
imul
into
adc
mov
adc
mov
fs
call
sti
pop
push
cs
arpl
push
ljmp
jecxz
adc
pop
mov
fadds
lods
sub
mov
out
aas
loopne
jg
es
cmp
jns,pn
test
xor
jecxz
repnz
add
mov
aam
repz
xor
jae
mov
cmp
leave
add
and
and
movsl
popf
je
shrb
adc
cmp
divb
adc
iret
std
xchg
dec
flds
sbb
push
adc
lods
push
jbe
ret
imul
iret
scas
lds
jle
jge
mov
xlat
lock
inc
shlb
sub
and
fsubrs
xchg
pop
sub
dec
xchg
pop
test
shll
xchg
es
lea
fsub
sbb
inc
jo
add
xchg
adc
jbe
shll
ret
rclb
out
mov
push
addl
lahf
movsl
xchg
repz
sti
popf
dec
gs
jmp
pop
int3
shlb
dec
pop
fwait
cmp
or
test
imul
stos
pop
push
lcall
xchg
dec
std
or
shlb
stc
xlat
arpl
adc
lret
pop
mov
jae
cmc
fsubl
xor
ja
push
xchg
cmc
and
push
sbb
push
cmpsb
xlat
test
pop
xor
dec
insl
lods
out
nop
jbe
addl
mov
mov
cmpsb
cmpsb
fs
loope
bound
mov
andl
in
cmp
mov
push
rorl
sbb
adc
fcmovnu
adc
cmp
push
es
in
pop
movsb
rclb
cmp
shlb
or
call
mov
rolb
inc
jmp
mov
fsubrs
cmp
adc
xchg
and
or
imul
sub
pop
mov
dec
decl
jecxz
imul
push
aam
cmpsl
shl
stc
or
out
lds
mov
loopne
mov
xorb
sarb
outsb
aaa
sar
or
imul
push
or
aaa
push
mov
or
pop
std
add
cmp
adc
jb
loopne
push
jne
adcb
pop
js
pop
test
mov
mov
mov
mov
hlt
inc
xor
push
sub
push
push
test
mov
es
aad
lcall
dec
or
lret
lds
stc
daa
je
mov
outsl
jl
or
dec
push
mov
rsm
orl
xchg
dec
push
mov
mov
sub
adc
push
or
lods
push
addr16
mov
push
dec
psllq
mov
xchg
les
xchg
out
fwait
xchg
daa
push
pop
push
sbb
push
mov
int3
cmp
subb
lcall
loop
stos
out
xchg
lret
or
pop
sbb
mov
shll
and
std
push
aas
sbb
in
cs
jno
add
mov
popa
jbe
ret
xor
inc
xor
out
mov
pop
jle
stos
ss
sbb
pusha
jo
xchg
jne
pop
or
mov
sub
dec
wbinvd
lods
shl
lods
dec
outsl
sbb
inc
sahf
movsb
js
adc
dec
cwtl
mov
cli
rol
pop
ret
imul
jne
mov
or
mov
notb
mov
push
imul
push
std
xchg
pop
push
adc
push
adc
fldt
push
cmp
mov
les
rcll
push
mul
popa
push
ja
shll
xchg
push
into
pop
negb
dec
mov
into
xor
push
and
mov
insl
adc
mov
cld
sub
push
mov
dec
gs
lea
cltd
inc
out
dec
in
fidivrs
add
xchg
rcrb
imul
push
mov
lods
mov
mov
shrb
mov
insl
or
cmp
loope
mov
inc
or
mov
push
dec
lret
cmp
in
add
cmp
sub
adcb
bnd
arpl
fmuls
adc
or
push
dec
lock
sbb
leave
test
push
or
fisttpl
jge
inc
jnp
imul
mov
push
add
dec
and
xlat
mov
mov
mov
or
lret
jo
cld
jb
pusha
in
sub
je
xor
call
xor
in
mov
add
mov
das
pop
mov
iret
jns
bswap
rcl
mov
mov
mov
mov
xchg
mov
xor
fcmovu
test
or
mov
push
ret
xor
cwtl
pop
out
fs
push
stos
shll
inc
dec
es
imul
in
sub
fstp
daa
xlat
cmp
push
stos
sbb
mov
xchg
call
lods
repnz
mov
addr16
push
mov
inc
pop
sahf
hlt
mov
pop
mov
mov
sub
sub
nop
xor
lods
inc
inc
sub
ret
out
fwait
inc
rolb
aad
pop
jp
mov
jb
add
repnz
adc
or
ja
aaa
mov
cld
and
ljmp
pop
dec
into
fcmovb
xchg
leave
xchg
xor
sub
dec
hlt
mov
or
push
push
mov
jno
mov
inc
test
mov
cmc
in
xchg
xchg
adc
sbb
fstp
ret
inc
mov
dec
mov
insb
push
xor
mov
xor
les
mov
push
push
insl
lds
xorb
xor
cmpsl
loopne
xchg
cmpsb
mov
addr16
jns
imul
fmuls
cli
xchg
cltd
mov
lcall
leave
adc
pop
pop
out
and
sub
add
or
add
inc
jno
out
xor
mov
jb
adcb
dec
cwtl
inc
test
dec
push
sub
adc
stos
imul
cmp
lahf
into
insb
xchg
pop
cs
imul
shr
dec
repz
mov
hlt
add
inc
loop
lret
add
add
sub
loopne
xchg
enter
in
testl
cmpsb
test
stos
dec
dec
sub
dec
mov
push
push
mov
pop
cwtl
nop
xchg
cmpsl
out
mov
jb
scas
hlt
mov
mov
pushf
inc
xchg
add
fiadds
sbb
testb
movsl
xor
hlt
jnp
addb
jno
adc
sbb
jg
lcall
mov
cmpsl
fisubrs
movsl
push
mov
dec
dec
xchg
jno
inc
fs
mov
or
je
sbb
data16
pusha
imul
fdivs
fld
fimull
test
arpl
add
outsw
cwtl
lds
dec
add
cs
mov
sbb
jne
aas
sub
jb
shlb
loopne
call
out
jge
sahf
int
xlat
jg
or
lret
push
add
push
inc
hlt
and
icebp
sub
add
in
nop
lret
aas
lds
repz
dec
pusha
addr16
sub
push
mov
rolb
hlt
stos
cmpsb
add
addb
iret
movsb
mov
cmpsl
lfs
sub
enter
or
cmc
test
xchg
test
mov
jecxz
loopne
pop
add
loop,pt
and
loope
repnz
mov
outsb
popf
lock
divb
adc
xor
cmpsb
bound
pop
stc
add
cs
pcmpgtd
pop
sub
xchg
bound
out
xchg
std
mov
mov
push
inc
shrl
add
push
fcomi
lar
imul
adc
lret
jmp
inc
sbb
sbb
push
add
insl
out
push
dec
shrb
fmul
shll
mov
adc
shll
scas
cmpsb
lea
jo
mov
rcrb
push
inc
or
push
int
push
add
mov
inc
lock
push
dec
and
testl
mov
inc
lret
ja
xor
adc
xchg
cli
mov
xchg
mov
sbb
pop
push
das
inc
xor
addl
inc
xlat
adc
pop
xchg
cmp
in
or
mov
hlt
cmp
mov
mov
rcrl
xor
mov
lods
enter
mov
out
inc
jecxz
add
sbb
dec
sarl
jp
ja
dec
jns
sub
test
add
jmp
outsl
loope
stc
sub
add
call
popf
adc
fs
xlat
mov
fwait
dec
jmp
stc
sub
movsl
bound
cs
cli
jmp
js
or
out
sbb
xchg
mov
or
and
in
divb
xor
push
out
loope
xor
cmp
xor
cmpl
pop
push
ljmp
adc
call
push
icebp
rorl
dec
mov
xor
jmp
mov
or
fnstsw
push
test
or
dec
xchg
fldenv
jg
out
fcmovnb
jmp
push
and
shlb
jnp
outsb
mov
or
dec
mov
mov
arpl
subb
cmpsl
xchg
jno
xchg
mov
sbb
cli
adc
shll
in
or
dec
and
xchg
cwtl
inc
mov
pushf
out
das
cli
ss
mov
lret
les
out
test
and
call
pop
jne
push
ficomps
pop
push
pop
inc
sbb
negl
and
fdivs
pop
cs
inc
mov
sbb
imul
pop
mov
jbe
fucom
int3
dec
cmp
idiv
sti
clc
and
outsb
aas
movsb
insb
in
jno
jno
fiaddl
data16
inc
out
sub
mov
inc
jmp
repnz
std
mov
iret
adc
fstp
sahf
test
imull
add
dec
cmc
jns
push
cmp
mov
xor
popa
mov
mov
fiadds
pop
adc
repnz
fs
outsb
pop
push
ds
mov
mov
cs
mov
cmc
lahf
insl
adc
mov
mov
std
or
jl
test
sub
and
call
loope
lret
jo
and
pop
xor
add
cltd
test
or
js
rclb
push
lahf
out
sbbl
les
jnp
adcb
popf
lret
sub
pop
cmpsl
pop
or
adc
aas
pop
inc
in
insb
leave
push
pop
das
stos
insb
add
stos
loope
imul
test
lods
push
stos
test
pushf
or
cmpsb
sbb
nop
jo
add
sti
xchg
arpl
adc
into
rcrb
jo
aam
lcall
xchg
mov
and
mov
lret
jae
xor
jo,pt
mov
inc
icebp
mov
inc
add
sub
in
cmp
and
and
mov
notb
adc
jge,pt
sub
fidivs
and
push
sahf
add
faddp
andb
xor
int
jl
dec
pop
push
scas
jp
dec
into
movsl
inc
sbb
mov
xor
mov
jecxz
aaa
mov
outsb
into
push
push
xor
adc
lret
xlat
jne
push
movsb
jle
add
sub
daa
xchg
jno
lods
push
or
imulb
xchg
stos
or
fsincos
movsl
fcoms
and
iret
or
nop
nop
lahf
in
mov
lds
jge
jg
out
lds
lods
pop
mov
lahf
out
dec
popa
mov
push
mov
mov
stos
or
jp
lea
jo
sub
in
xchg
sub
inc
jg
pop
ljmp
mov
dec
out
pusha
notl
xor
scas
into
mov
xchg
es
test
xor
or
ror
mov
scas
or
stos
int
cmpsl
movsw
xor
out
test
push
and
repnz
pop
pop
dec
stos
movsb
cli
jne
xor
in
and
lods
lcall
mov
test
push
mov
ljmp
mov
jne
sub
mul
jge
xor
test
push
pop
pop
xchg
subb
aad
dec
mov
inc
inc
sub
arpl
push
aas
add
stos
push
mov
inc
push
xchg
dec
test
and
mov
dec
inc
xchg
mov
cmpsb
and
icebp
sti
shrl
das
ds
loopne
pop
jmp
ffreep
adc
push
inc
rcl
rorb
fucomi
shl
insb
pop
inc
inc
cmpsb
push
inc
addl
loope
cwtl
in
xchg
bound
scas
outsb
and
into
sub
outsb
jle
lahf
sbb
test
mov
xchg
add
lods
and
out
push
loop
dec
dec
jb
mov
sbb
enter
or
adc
sub
sub
mov
jl
loop
ret
clc
pop
and
push
dec
pop
pop
aaa
xlat
sbb
and
and
mov
call
add
arpl
jnp
mov
insl
push
test
subb
ret
dec
mov
dec
and
insb
cmp
adc
dec
mov
pop
cmp
pushfw
lret
imul
inc
ja
sub
sub
cmp
dec
data16
int
jle
push
adcl
arpl
pop
jbe
sub
ljmp
inc
cwtl
ja
fdivrp
data16
cmp
repnz
loope
and
std
sar
fnsave
mov
jb
mov
mov
ds
adc
aaa
jne
hlt
jbe
out
loop
push
mov
rorb
add
int
cmp
jle
filds
pop
in
lock
cld
arpl
sub
and
popf
jae
inc
arpl
inc
xchg
repnz
and
jno
rcrl
sbb
dec
jbe
pusha
loope
jne
lcall
jb
popf
bound
pop
pop
repz
js
xor
and
mov
movsb
mov
mov
jg
xchg
sbb
cmp
iret
jmp
fs
loop
push
add
sbb
or
pop
cmp
push
test
arpl
sbb
sbb
or
xchg
loopne
leave
and
or
push
cltd
add
sub
sbb
stc
cmc
sbb
loop
std
add
dec
out
mov
jge
hlt
dec
int3
and
cltd
das
add
inc
stc
xor
stos
jae
pop
mov
push
jo
stc
push
cwtl
gs
fiadds
cmp
sti
stc
out
in
mov
insb
jae
dec
cld
mov
rcll
out
nop
aaa
fs
sub
xor
jae
xchg
jmp
loope
pop
ret
pop
rcrl
pop
loope
out
dec
add
jmp
cmp
pop
dec
outsl
mov
mov
fisubs
xor
lcall
push
lea
adc
fldl
loop
mov
ds
xor
pop
push
jno
xor
inc
add
mov
cmp
cmpsb
enter
pop
shll
push
xchg
adc
fisubrl
push
pop
pop
fists
add
sbb
mov
je
jmp
sub
ljmp
add
ficomps
loopne
jnp
inc
or
jno
arpl
std
push
cmp
inc
stos
mov
es
int
mov
pop
dec
mov
add
rcpps
pop
xchg
sub
mov
mul
inc
stos
pop
sub
cwtl
jnp
sbb
shl
sahf
int3
insl
es
in
sub
subl
mov
jecxz
lock
sub
insb
clc
les
mull
cmp
adc
insb
call
jl
xor
stc
lock
stos
mov
popa
sub
push
outsb
lcall
sbb
mov
les
cmp
dec
push
jns
or
inc
sbb
cmp
loope
mov
fists
pop
cmpsb
push
jbe
sbb
jge
insl
pop
ficoms
cmp
push
icebp
ret
ret
fstl
ljmp
sbb
loope
push
inc
dec
cmc
xchg
sbb
push
imul
sbb
cmp
ljmp
test
adc
outsb
sbb
insl
push
add
mov
mov
dec
cwtl
sub
mov
cmc
das
inc
jmp
into
dec
out
mov
pop
sbb
dec
dec
into
dec
imul
add
pushf
movsl
or
or
adc
sbbl
rcrl
xchg
or
lds
es
decl
or
fists
es
dec
adc
adc
sbb
imul
arpl
sar
adc
test
fildll
daa
xor
iret
hlt
fnsave
jne
out
aam
sti
lret
xchg
and
inc
jmp
jae
push
or
roll
or
push
mov
jnp
mov
or
cmp
cmpb
lcall
adc
out
jns
pop
test
and
ret
in
push
sub
cmp
inc
and
aam
loopne
leave
sub
adc
pop
add
enter
loopne
cs
adc
xchg
cli
lahf
xchg
inc
in
xchg
test
ret
stos
shl
gs
ss
cld
into
data16
push
xor
rcrb
pop
loop
inc
mov
jl
add
xchg
idivl
scas
shll
sbb
push
call
shll
pop
mov
in
add
mov
sub
dec
or
loopne
cs
pop
roll
push
aaa
stos
shll
outsl
scas
cmp
mov
sbb
in
andb
mov
repz
lds
pop
or
lods
outsb
fidivl
push
sbb
sti
inc
xchg
jle
loope
push
out
push
cmc
or
adc
test
orb
clc
pop
negb
pop
addr16
loope
lea
xchg
xchg
int
lahf
cmp
jae
cmp
sbb
push
shrl
pop
loop
xchg
ja
jl
ret
inc
subb
jecxz
dec
and
daa
daa
mov
jnp
lea
cmp
mov
movsb
push
aam
mov
out
enter
push
push
xchg
dec
push
or
cmp
mov
adc
fcomps
out
int
inc
ljmp
push
cltd
addr16
movsl
jnp
add
stc
or
out
repnz
subl
cld
xor
hlt
and
test
lds
sub
cmpsb
mov
xchg
mov
mov
xchg
lret
fidivrs
dec
cmp
and
push
pusha
ljmp
dec
push
pop
in
ret
inc
mov
inc
or
cli
rclb
add
addr16
pop
or
or
pop
sub
in
jecxz
out
sub
les
pop
je
xor
out
out
mov
sub
pusha
xor
lahf
dec
aaa
pop
repnz
push
add
bound
or
xor
sub
push
inc
sets
sbb
add
mov
jbe
xchg
roll
lret
xorl
dec
dec
addr16
js
aaa
push
pushf
jnp
jns
shlb
es
andl
pop
out
mov
dec
outsb
aas
ds
out
push
repnz
jbe
das
mov
fbstp
push
in
or
dec
in
jb
jl
sbb
inc
stos
jbe
ret
mov
in
pop
jno
jnp
mov
inc
cmc
pop
fdivr
inc
jle
pop
cmp
retw
mov
das
leave
inc
xchg
ss
gs
mov
pushf
test
insl
jl
push
in
mov
pushf
sub
push
fs
xchg
adc
orl
lret
pop
jo
inc
ret
loopne
je
nop
out
push
sub
stc
inc
sbb
popf
push
and
movsb
lret
push
lock
aad
lds
jnp
jbe
test
int3
cmpsl
mov
addr16
mov
test
adc
cmp
jo
in
add
aad
jp
mov
jle
push
test
lahf
imul
loop
shl
cmp
adc
fwait
and
pop
jb
jecxz
loop
test
clc
push
lock
mov
pop
fimull
lret
loope
ret
stos
cmp
in
cld
call
or
repz
inc
pop
insl
int3
xchg
ss
mov
pushf
mov
mov
push
xor
movsl
out
int3
fdivrp
cltd
xor
add
xor
vpunpckhbw
and
stos
xor
lods
jle
loope
insl
out
sub
adc
mov
push
xchg
icebp
out
dec
sbb
inc
mov
int
mov
inc
mov
out
jno
jbe
pop
insl
add
or
add
pop
js
xor
mov
out
push
push
add
mov
adcl
xor
jge
mov
sbb
xchg
or
sahf
fimuls
jb
dec
ret
pop
fsubl
test
stos
pop
addr16
stc
popf
mov
stos
push
mov
mov
or
aad
dec
loop
das
addr16
mov
inc
jns
rorb
jno
rcrl
sub
or
and
mov
or
jno
insl
cmp
pusha
xchg
js
mov
gs
shrb
lcall
sub
je
add
std
mov
sbb
mov
test
or
pop
mov
loope
add
dec
add
outsl
push
leave
pusha
sub
mov
jnp
into
aaa
inc
lods
mov
sahf
mov
xchg
sahf
icebp
out
cmpsl
cmp
sbb
cmp
decl
dec
pop
mov
cltd
cmp
outsb
dec
dec
mov
jnp
cs
stos
jmp
lock
sti
jle
and
outsl
orb
mov
xlat
mov
dec
pushl
jns
push
jno
dec
cmpsl
and
test
aaa
test
push
mov
in
cwtl
jg
arpl
leave
test
ss
mov
sbb
mov
out
mov
sbb
movsb
xchg
jae
push
es
mov
push
outsl
sahf
pusha
adc
out
or
rorl
fcompl
in
mov
or
test
cmp
rcrb
pop
aam
ja
mov
pop
sub
addr16
jmp
ret
sarl
imul
dec
xor
cli
jbe
sbb
pop
xor
nop
inc
insb
jge
mov
fadd
push
loopne
into
xchg
dec
xchg
cli
les
push
fwait
pop
fcmovnu
cmp
push
jg
xor
sbb
mov
movsl
mov
mov
mov
repnz
mov
outsl
xor
in
push
lahf
repnz
dec
addr16
mov
mov
mov
mov
xor
push
inc
adc
sbb
push
ret
push
test
xchg
lahf
sub
pop
mov
add
fabs
pop
call
loope
adcl
adc
dec
or
and
add
aam
popf
insb
addr16
movsb
addr16
inc
xchg
add
test
and
push
loopne
jbe
das
lds
pop
adc
jae
fstpl
xchg
dec
addr16
xor
imul
cmp
xchg
xor
out
aaa
sub
shlb
push
pop
pop
movsb
cmpsb
xor
mov
xor
dec
in
push
bound
or
push
das
idivb
lret
push
ljmp
pop
inc
add
jno
jge
addr16
imul
push
xorb
ret
sbb
fisttpl
incl
mov
pop
fstl
jbe
mov
push
xchg
jl
ja
jbe
lahf
lods
lock
cwtl
adc
cmc
scas
xadd
xor
scas
push
inc
and
push
adc
sbb
dec
addl
xchg
mov
pop
or
loop
xor
sbb
cwtl
xor
stc
inc
insl
xor
inc
aam
push
fisubrl
mov
enter
stos
lret
loope
fldenv
loop
pop
sub
cmp
in
fwait
notb
test
ja
mov
js
and
incl
shrb
loop
arpl
iret
cmpsl
xor
bnd
in
cmpsb
imul
jno
lock
mov
mov
cltd
fdivrs
adc
cmpsb
cli
pop
std
ret
jb
sbb
pop
sbb
add
add
dec
or
mov
mov
movsb
pop
nop
lret
adcb
inc
add
and
and
dec
loopne
mov
inc
adc
mov
mov
sub
adc
jl
orb
sub
sub
jg
push
int
test
ss
insb
rorl
push
inc
mov
and
aad
orb
xor
inc
popa
les
mov
adc
jbe
or
jp
bound
jne
pop
daa
xor
neg
xchg
in
in
ja
nop
test
fstpt
cmp
sub
push
lods
lods
xchg
in
xor
ret
test
js
add
lods
lods
shl
ffreep
jns
in
test
xchg
adc
lods
aad
jns
xchg
out
dec
jp
fadds
dec
xlat
test
xor
loope
mov
loop
ret
in
xor
xchg
jno
cwtl
and
negb
push
dec
sbb
cmc
fisttps
mul
stos
push
scas
jo
ljmp
pop
adc
pop
push
xchg
jge
fdivrs
ljmp
cmp
jno
subb
lea
leave
data16
mov
xchg
xchg
cmpsb
sub
das
outsb
jae
jl
adc
into
adc
cmpsb
dec
cmpsl
pop
test
outsb
test
and
dec
mov
dec
pushf
or
cmpsb
xor
push
inc
sub
aaa
mov
outsb
mov
stos
lds
and
ja
cmpsl
add
sbb
jmp
out
jmp
andb
sub
outsb
push
hlt
inc
cmpsb
cmp
push
std
mov
sub
push
out
arpl
xor
push
aad
xchg
jnp
int
mov
mov
add
jb
les
mov
mov
dec
push
push
add
xchg
cmp
mov
xor
clc
hlt
call
cmp
ja
cwtl
test
enter
andb
cmp
lret
out
dec
sbb
out
sub
cmp
cmpsb
lea
loopne
ja
adc
add
add
lret
pop
xlat
scas
imul
mov
sarb
xchg
mov
faddp
repz
mov
inc
xchg
inc
in
sbb
call
pop
xchg
filds
cmp
add
sub
adc
add
cmp
xchg
add
or
add
insl
es
and
insb
insl
lcall
add
insb
movsl
sub
jne
hlt
adc
loopne
add
adc
add
dec
in
lods
lea
addr16
inc
sahf
test
xchg
sub
push
mov
jnp
into
mov
dec
shr
aas
cmp
mov
sbb
and
xchg
fistl
mov
pusha
loop
jge
addb
jb
jno
inc
mov
mov
jg
roll
lea
gs
lods
push
and
lock
shlb
cltd
repnz
ja
sub
xchg
inc
jg
pop
mov
das
fldenv
dec
push
mov
pushf
jnp
adc
sub
test
inc
cltd
cmc
jo
cmp
fwait
lds
lods
sahf
xchg
mulb
lods
mov
psrad
in
dec
add
pusha
fdivrl
xor
sbb
bound
ds
cli
dec
mov
pop
mov
push
inc
fdivrs
cwtl
xchg
out
in
xorb
jno
and
and
pushf
insl
jge
lds
add
and
scas
fucomip
cltd
cmp
adcb
int
or
push
mulb
test
lods
adc
sbb
and
nop
outsl
pop
test
inc
dec
push
adc
cmpsb
aad
fcomps
add
cmpsl
push
pop
call
add
dec
and
icebp
mov
into
bound
jns
gs
rcll
sub
ss
aam
jg
pusha
mov
incl
inc
aad
jnp
sub
push
sub
jne
pop
xor
gs
iret
and
imul
xchg
js
call
mov
push
imul
sub
cld
push
mov
pop
adc
xor
sub
scas
or
stos
pop
scas
pop
lcall
mov
push
pop
cltd
pop
jmp
xchg
sti
ror
add
mov
push
mov
arpl
adc
jge
daa
sub
dec
jns
int
cmp
int3
sahf
out
lahf
fisubrs
jo
repnz
int
aaa
mov
sub
fwait
lock
data16
iret
push
push
or
ja
adc
jmp
ss
and
stos
push
stc
clc
into
mov
cmpsb
pop
in
in
lcall
sub
mov
mov
mov
mov
mov
fsts
push
lret
jge
xchg
test
negl
and
dec
inc
dec
mov
in
out
jne
ja
add
stos
sub
sub
fsts
cmpl
push
sbb
leave
or
jge
shl
cltd
loopne
push
cltd
test
jge
pop
dec
sbb
sbb
sti
or
inc
mov
lret
or
and
outsb
stos
xchg
outsb
ljmp
scas
cmp
or
add
push
arpl
inc
or
mov
mov
data16
scas
clc
lea
jmp
test
mov
fwait
sub
jmp
xor
repnz
mov
aad
or
inc
xor
push
mov
cmp
xor
adc
cmp
jecxz
cmp
push
lea
dec
mov
sbb
sub
pop
repz
adc
sub
mov
mov
jge
data16
jmp
push
mov
mov
inc
jmp
jne
call
inc
mov
sbb
and
jne
xchg
mov
xchg
mov
roll
xor
mov
faddl
ja
outsl
inc
iret
cli
inc
xchg
mov
enter
jl,pt
movsb
xchg
in
xor
out
inc
pop
dec
enter
pop
insb
xchg
jle
hlt
bound
cltd
mov
xor
push
inc
adc
mov
lcall
xor
dec
jbe
loop
cs
inc
xor
rorl
sub
imul
in
pop
dec
shlb
jecxz
popf
sub
stos
shll
pop
inc
push
sub
lahf
mov
dec
or
mov
cmp
aam
xor
imul
jmp
and
je
popf
ret
mov
movnti
sub
cld
adc
mov
lds
mov
out
dec
xchg
lea
xchg
imul
mov
sbb
add
lahf
dec
lret
xchg
push
xor
sbb
mov
jo
imul
daa
and
cli
cltd
xor
aaa
negl
popf
add
mov
xchg
jecxz
sahf
leave
pop
xchg
movzbl
cli
imul
mov
cmpsb
xor
test
inc
inc
mov
sub
xor
jmp
fidivrl
pop
pop
adc
or
nop
sub
xor
xchg
leave
push
dec
mov
out
dec
outsl
sub
xlat
out
sbb
sub
xchg
cmp
lds
sub
pop
mov
xor
cli
ja
fiadds
cmp
std
inc
rcr
outsl
cmp
gs
add
nop
add
call
and
or
adc
fdivrl
ljmp
lahf
push
sub
sbb
cmp
dec
xorb
lods
sbbb
loope
inc
add
xchg
test
in
addb
xor
push
jl
xor
inc
cmp
loopne
movsb
cmp
mov
or
stc
ss
inc
or
enter
cmp
adc
lea
add
aad
inc
loop
push
xchg
ret
stc
or
test
test
stos
mov
in
fs
cmpsl
fisttps
insb
or
test
dec
sub
mov
das
jmp
adc
pushf
pop
fwait
in
mov
adc
sub
dec
or
in
xchg
adc
mov
jnp
cwtl
inc
bound
xchg
ss
dec
mov
or
cmp
jno
add
into
pop
ljmp
mov
add
xor
xchg
mov
mov
stc
push
cmp
xchg
lock
int
ja
lret
add
or
dec
or
out
call
mov
je
jmp
xor
push
sub
cltd
dec
not
aam
mov
mov
aad
repnz
mov
jae
inc
outsl
daa
and
addr16
sbb
push
aad
scas
hlt
adcl
insl
lock
negb
xor
popf
fadds
stos
sbb
int3
jecxz
sub
pop
cli
inc
adc
popf
dec
test
xor
mov
push
insl
shlb
inc
stos
pop
push
lcall
mov
mov
and
jge
sbb
lret
cli
pusha
cmpsb
jp
add
div
jbe
int
jecxz
adc
inc
push
in
jmp
xchg
and
inc
das
sub
xchg
inc
jle
movsl
fucom
rep
daa
cmpsl
mov
insb
mov
loop
lods
fisttpl
stos
adc
fidivl
gs
add
mov
mov
popl
enter
jg
pop
add
loopne
adc
cs
mov
or
jne
pop
test
daa
push
orb
mov
stos
imul
and
push
out
ret
mov
mov
mov
test
xchg
push
outsl
ret
and
inc
incl
ljmp
loope
jb
mov
sub
pop
jae
sub
and
or
adc
gs
fbld
int3
adc
dec
test
lock
or
divl
pushf
inc
inc
leave
xor
jecxz
adc
out
add
shrb
rcr
pusha
mov
or
xor
mov
addr16
hlt
cmp
xor
mov
test
ja
pop
jecxz
jb
arpl
xor
mov
xlat
or
xchg
xchg
in
loopne
add
mov
dec
sbb
jne
dec
sarw
psrlw
mov
mov
repnz
data16
aam
or
push
outsl
and
stos
add
mov
mulb
sahf
fwait
dec
inc
jno
jge
cltd
mov
mov
jns
mov
es
jnp
xchg
add
mov
cmp
and
mov
test
loopne
lds
in
push
dec
idivb
pushf
sbb
stc
icebp
pop
imul
dec
xchg
into
fs
cmpb
cltd
fimull
not
xorb
mov
inc
mov
out
int3
in
mov
mov
mov
push
ss
cmp
in
jle
lret
movsl
popa
mov
xchg
sarl
dec
repz
sub
inc
pop
sahf
and
dec
stos
cs
jmp
mov
xchg
les
loop
push
fmuls
cwtl
outsl
je
sbb
loop
adc
and
nop
jbe
call
arpl
xlat
pop
or
cmp
sbb
cld
jne
test
push
add
xchg
push
ret
fwait
shll
dec
subb
scas
add
or
lret
inc
les
test
and
pop
insb
push
xlat
push
adc
pop
jmp
push
jge
and
mov
ficompl
or
xor
push
lock
stc
and
xor
push
push
add
xor
subl
cmp
jle
pop
jmp
fiadds
cmp
outsl
dec
js
movsl
sub
jo
inc
xor
xor
adc
mov
dec
mov
aam
jno
outsb
pusha
movl
jp
mov
test
jne
add
outsl
shlb
mov
cmp
lock
cli
push
loopne
les
push
add
das
dec
test
inc
mov
loopne
jns
repnz
mov
push
lret
jbe
xor
jns
scas
stos
and
les
mov
rorl
cmp
cmp
add
fs
cmp
sbb
loopne
out
aas
hlt
pop
stos
fwait
clc
xlat
cmp
and
out
mov
xor
ja
sub
mov
mov
mov
shll
push
sub
sahf
push
and
mov
push
sti
adc
xchg
sbb
mov
mov
jb
in
cs
mov
fldl
sar
stos
out
mov
std
cmp
xchg
jo
jp
les
add
dec
push
out
sahf
mov
sub
or
repnz
push
nop
mov
inc
push
ds
xor
and
aad
sbb
into
adc
push
out
xchg
jmp
add
sub
xchg
xchg
or
xchg
sub
aas
adc
pop
xchg
cmp
mov
xchg
mov
rolb
pop
inc
cs
fnstsw
out
xchg
rcll
jmp
jge
inc
xor
pop
pusha
insl
dec
sub
cltd
ljmp
ss
dec
hlt
mov
adcl
movsl
mov
stc
popa
mov
jecxz
sbb
fs
dec
xor
cwtl
mov
jo
mov
push
xchg
push
push
jbe
in
test
mov
lret
out
cld
in
jns
cmpsb
imul
mov
fstpl
aam
loop
pop
aas
fcmovnu
push
cmp
jge
in
out
mov
push
ret
dec
add
test
lret
mov
mov
add
mov
lock
or
mov
sub
adc
movsl
repz
add
xlat
push
imul
jle
dec
fwait
negl
ja
lods
rclb
mov
sub
xor
mov
pop
pop
or
imul
inc
rcrl
jae
add
imul
test
xor
lds
out
dec
out
mov
sbb
or
bound
cmp
insb
iret
aam
mov
mov
pop
std
out
push
mov
out
sub
adc
and
pop
push
fmull
lock
enter
push
movsb
mov
xor
jbe
cmpsb
mov
or
jne
inc
mov
inc
lret
adc
popf
out
mov
repnz
les
js
and
and
gs
shrb
cmp
pop
mov
xor
fldenv
pop
scas
fildll
inc
xor
jl
dec
popf
xchg
icebp
mov
ret
fs
lcall
fcom
inc
pop
lods
sbb
sarl
test
mov
push
movsl
popa
cwtl
imul
or
ljmp
mov
or
dec
jmp
in
jo
jnp
aam
xor
fildl
repnz
call
dec
push
mov
cmp
cs
test
push
cmp
lock
and
enter
cmpsb
and
inc
sbb
stc
cmpsl
outsl
jmp
fsin
jmp
xor
xchg
xor
outsl
popf
stos
shr
out
out
push
mov
mov
cmpsb
test
xor
jge
inc
pop
mov
cmpb
insl
or
subb
ljmp
repnz
dec
aam
cmpsb
mov
jp
sbb
arpl
std
or
pop
jae
test
push
test
mov
daa
xchg
xchg
push
loopne
out
idivb
imul
fidivrs
sbb
inc
imul
pop
mov
jp
dec
inc
dec
out
mov
xchg
aam
cmc
jns
xor
sbb
cmp
pop
das
add
por
xchg
cmpb
xchg
pop
enter
or
xchg
adc
aad
cltd
int3
out
pusha
enter
mov
push
add
enter
push
or
dec
jge
into
pop
xor
adc
out
xchg
sbb
sub
inc
ffreep
imul
pop
dec
jge
pushf
imulb
arpl
cli
movsb
sbb
out
inc
leave
mov
fstpt
cmpsl
and
cli
rcl
jge
lret
add
fsubs
and
jmp
fldenv
or
repnz
inc
popa
test
dec
and
aaa
ret
js
rcll
cmpsl
daa
loope
enter
xlat
jl
push
jne
lret
pusha
xchg
orb
or
movsb
dec
mov
in
mov
dec
enter
in
jbe
dec
sub
cmpsl
mov
inc
not
pop
cmp
scas
jp
push
or
inc
jecxz
sbb
cltd
ds
std
mov
xor
jle
jge
cmp
rorb
aad
icebp
jns
outsb
mov
mov
ret
test
data16
js
push
add
lods
mov
jbe
inc
pop
jnp
push
lcall
jl
adc
xchg
sarb
xchg
in
cmp
mov
mov
jne
mov
sub
ljmp
ss
dec
pop
and
andb
movsb
fadd
insl
das
loope
mov
cmpsl
xchg
rol
cmpsb
data16
jmp
addr16
js
outsb
ret
xchg
jle
mov
lods
sbb
xor
lret
push
repz
xor
loop
movsb
shll
rcr
lcall
mov
imul
sbb
lock
pushf
xchg
loop
push
mov
shl
clc
mov
ss
enter
xchg
outsb
push
pop
xchg
std
aas
subb
inc
loope
mov
ds
jb
out
movsl
or
loope
fstl
push
sarb
fsubl
lea
iret
inc
andb
arpl
fistpl
das
scas
inc
pop
xlat
and
imul
jae
psubb
mov
scas
adc
je
shl
test
enter
cmovnp
xor
filds
dec
enter
jmp
sbb
push
pop
add
add
out
jno
and
sub
push
lret
sub
sbb
or
xor
mov
or
xor
inc
popf
sub
mov
jns
push
cmpb
inc
popf
cli
add
pop
and
cmp
pop
test
adcb
push
jl
in
sub
rorb
or
cwtl
pop
jb
fstps
jne
inc
mov
xchg
mov
lock
adc
fmull
inc
mov
es
add
xor
arpl
mov
lock
insl
lret
cli
xchg
scas
orl
gs
lret
pop
les
nop
test
mov
add
cwtl
pop
cmc
push
xlat
pop
nop
es
sbb
out
lcall
pop
std
push
cmpb
pop
sub
jno
dec
mov
mov
pop
test
lret
into
es
lret
shll
mov
lcall
pusha
or
scas
push
cs
gs
lcall
outsl
fwait
pop
arpl
in
dec
cltd
xchg
push
inc
mov
and
push
aas
sub
enter
filds
je
or
push
loope
icebp
ficoms
sub
testl
scas
pop
in
cmpsl
insl
push
cmp
inc
add
and
jg
fisttps
int
lcall
adc
push
cmp
sub
idivb
movsl
push
adc
addr16
or
sub
xchg
gs
add
dec
jne
mov
adc
mov
fdivs
xlat
xlat
cwtl
test
cmpsl
popa
scas
add
mov
ljmp
lock
pusha
and
mov
sarl
add
leave
call
dec
and
pop
insb
int
xor
insl
mov
test
xor
dec
cltd
dec
je
push
insb
sbb
jmp
jmp
sbb
mov
movsl
cltd
mov
jae
fsubrl
adc
xchg
jge
add
mov
mov
cmpl
imul
loopne
cs
test
ret
push
lahf
jo
enter
jecxz
mov
cltd
jns
sbb
mov
adc
in
loop
mov
pop
lea
test
popf
aas
shlb
lret
dec
ss
imul
sub
pop
iret
aas
ret
int3
lahf
mov
sbb
shrl
cmp
fisttps
fisubrl
std
scas
ljmp
mov
stos
mov
dec
aas
dec
push
inc
jg
mov
lock
ljmp
pusha
sti
adc
push
shrl
in
fs
mov
in
push
mov
pop
ret
push
in
and
mov
in
shlb
fcmovnbe
es
mov
inc
mov
push
fcoml
mov
stos
sbbl
movsl
insb
cwtl
inc
xchg
mov
pop
daa
sbb
jbe
cmc
fwait
inc
xor
and
push
jns
outsl
fdivs
mov
jp
mov
jecxz
xchg
fbld
push
mov
inc
adc
pop
cmp
jo
push
and
fucomi
sbbl
rol
mov
ret
adc
xor
xchg
dec
lods
ret
ds
in
int3
out
mov
rol
adc
fdivrl
mov
int3
push
sub
popa
popa
movsl
mov
lods
or
xor
jb
xchg
je
adc
jmp
clc
push
lahf
sub
add
fldenv
hlt
cmp
pop
into
inc
aad
dec
lock
in
lods
pop
adc
pop
or
add
push
jae
loop
mov
xchg
mov
pusha
xor
mov
shrl
sbb
shlb
mov
pusha
push
push
dec
xor
insb
mov
arpl
std
aam
js
dec
cmp
mov
cwtl
add
mov
and
pop
fdiv
out
pop
es
in
das
insl
mov
pop
dec
adc
fsubrp
std
cmp
mov
pop
mov
pop
imul
enter
pop
stc
cwtl
das
mov
xchg
nop
das
cwtl
test
or
cmpsl
lods
sbb
mov
cmc
xor
jb
or
inc
test
out
nop
push
into
or
push
adc
sbb
dec
jecxz
xchg
push
das
push
mov
frndint
aaa
push
pop
mov
adc
pop
jmp
cmpsb
xchg
push
dec
mov
and
lods
bound
movsl
mov
sub
xchg
leave
ret
add
scas
inc
lods
stos
inc
sahf
push
dec
mov
cwtl
xchg
sbb
repnz
mov
icebp
nop
test
insl
aaa
testb
ja
dec
dec
movsb
lret
mov
and
sti
ficoml
pop
es
das
gs
fcmovb
cmovno
aam
iret
jecxz
jnp
fcomip
lahf
mov
ret
xchg
jl
or
add
mov
mov
ds
xor
xchg
pop
pop
test
inc
subl
jl
aaa
push
jg
jae
cmp
adc
popa
dec
pop
test
mov
mov
sbb
div
or
add
fldt
and
dec
int
xchg
out
pop
cmp
push
inc
mov
and
xor
ja
pop
jne
gs
push
pop
movsl
xor
ds
xchg
jnp
iret
lea
pop
cmp
inc
jle
push
or
xchg
ret
data16
push
lea
outsl
push
call
pop
jnp
mov
test
pop
mov
jbe
sbb
inc
out
divl
mull
es
arpl
je
icebp
fistl
mov
lock
mov
dec
pop
sbb
cwtl
xchg
adc
hlt
pop
push
xchg
cs
and
mov
lds
pop
es
int3
xchg
sahf
mov
in
mov
scas
js
push
cli
negl
adc
sub
jae
add
pop
fnstsw
mov
out
je
mov
cltd
xor
cmp
mov
adc
push
and
popf
movsb
mov
or
xchg
pop
dec
loop
jge
lods
xchg
fs
mov
imul
mov
aam
mov
jge
push
mov
add
hlt
sahf
or
out
int
jbe
stos
jo
pusha
push
fiadds
jmp
push
cmpb
dec
mov
push
jmp
xor
lret
or
add
imul
push
xchg
lods
lods
jns
out
insl
pop
sub
popa
mov
sbb
stos
lds
xchg
xchg
or
sahf
lods
das
pop
push
ss
mov
push
mov
dec
mov
outsb
jnp
pop
cmp
cmp
mov
add
arpl
cmpsl
imul
sub
inc
jmp
xor
js
rcrb
xchg
pop
xchg
cld
sbb
dec
enter
push
clc
addr16
mov
dec
pop
cmpsb
je
jb
lods
xchg
cltd
rcr
iret
pushl
lret
ljmp
xchg
hlt
xlat
cmpsb
clc
ja
adc
pop
into
cli
push
adc
in
mov
sbb
incb
repz
repnz
ja
divb
pushf
add
xor
cmp
call
cmp
pop
fmul
pop
das
and
jl
inc
cwtl
or
and
xor
push
ds
adc
stc
mov
ja
xchg
test
stos
cwtl
lds
shl
and
and
dec
push
das
adc
ficompl
out
mov
push
pop
pop
int
test
pop
loop
ret
push
sti
pusha
gs
mov
cs
cld
jnp
mov
sbb
xor
jle
cwtl
jecxz
xchg
cmpsl
hlt
mov
repnz
pop
ror
adc
aaa
sub
jmp
or
icebp
jns
addb
test
ds
out
testl
cwtl
push
ljmp
pop
rcrl
out
cmc
inc
mov
ljmp
mov
mov
mov
push
in
jmp
loopne
in
out
mov
or
lcall
ret
adc
cs
mov
movsb
cmc
fdivrs
jge
shll
daa
inc
pop
add
push
add
push
notb
nop
ret
jl
xorl
shll
xor
stos
or
sbb
out
adcl
mov
out
shll
pop
mov
jp
movsb
mov
jae
lret
sahf
movl
movb
and
scas
and
mov
xor
adc
sahf
fcomps
mov
sub
or
mov
imul
insl
cmpxchg8b
inc
imul
push
add
ja
mov
sti
xchg
lret
aas
xor
push
or
adc
inc
outsl
push
in
add
inc
dec
pop
js
jnp
push
stos
adc
sbb
sub
lret
dec
add
aad
cvttps2pi
data16
sbbl
mov
cmc
or
dec
push
jp
stc
or
cmp
xor
js
leave
pop
daa
jnp
js
test
popa
pop
push
sti
aas
jge
cwtl
cmp
cmp
sarb
gs
loopne
fdivr
xchg
cs
in
mov
sahf
mov
dec
imul
stos
inc
and
dec
cmpsl
mov
mov
pop
dec
mov
add
sti
sub
sti
xchg
xor
mov
mov
pop
stos
ja
call
roll
jbe
pop
jge
insb
repz
in
cmpl
aaa
xor
aaa
cwtl
je
fstl
jge
loop
sbb
xchg
or
xlat
mov
faddl
and
xchg
test
sub
lods
ret
fidivrl
imul
pushf
xchg
xchg
sub
arpl
out
pushf
cs
aad
and
insb
xorl
mov
jp
popa
inc
push
jmp
pusha
mov
push
das
fcompl
cs
sbb
ja
lods
push
xlat
les
pop
xorl
inc
cltd
add
xchg
cmp
or
dec
subl
scas
inc
inc
jecxz
jnp
push
sub
test
enter
add
mov
mov
inc
dec
inc
rcl
sbb
push
test
mov
in
cmp
sbb
popf
sbb
xchg
jnp
mov
dec
inc
in
je
outsb
insb
inc
lock
add
pop
movsb
aaa
cmpl
stos
test
push
mov
mov
push
repnz
jecxz
cs
jmp
cmp
imul
mov
add
dec
pop
ror
jae
ret
jp
cwtl
inc
push
jns
imul
in
mov
jmp
push
in
jnp
add
inc
cltd
jmp
sub
pop
ds
mov
rep
xchg
push
xchg
std
mov
ret
jae
inc
mov
inc
dec
icebp
stos
aas
xchg
pusha
sub
xchg
add
mov
in
jle
jmp
mov
or
and
cmp
or
popa
les
xor
lods
decb
jl
test
std
fnsave
push
int3
jge
in
bnd
add
cld
cmp
mov
jbe,pt
leave
pop
sub
pop
or
push
incb
cmp
ret
and
inc
lds
jmp
cmpsb
sbb
push
in
pop
leave
lods
jns
or
test
jno
sbb
xchg
jl
aad
add
or
sbb
or
ret
enter
repz
ja
std
mov
dec
lock
dec
mov
loop
lret
jp
pop
jb
mov
and
imul
cmp
out
or
adc
push
bound
imul
xchg
in
push
insl
sub
std
div
outsb
push
inc
push
fidivl
mov
hlt
test
sahf
pop
mov
shl
cltd
pop
les
cmp
insb
cmp
mov
negl
pop
xor
pusha
imull
iret
push
pop
je
cmpsb
mov
fucompp
sbb
jp
push
ficoml
cmp
je
je
adc
notl
das
les
movsl
popa
nop
mov
xchg
mov
ja
mov
adc
aaa
adc
sub
pusha
sbb
sub
lds
lahf
imul
sbb
mov
mov
or
test
bnd
arpl
aaa
mov
std
sub
testl
mov
mov
loop
fistps
jp
ficoms
aam
sbb
lret
in
mov
jae
mov
notl
shr
or
jl
incb
movsl
and
and
repnz
scas
and
cmpsl
ret
cmpsb
cli
filds
jle
push
aam
sahf
push
mov
repz
jbe
mov
add
inc
inc
jl
jb
dec
xchg
jb
outsb
sub
pusha
push
sbb
call
pop
push
adc
iret
sub
pop
jne
ljmp
add
mov
fidivrs
clc
jg
push
mov
fnsave
push
jp
sbb
pop
rorb
insl
xchg
iret
dec
notl
xorb
into
repz
mov
adc
cmpsl
pop
scas
call
test
jbe
mov
adc
jp
sbb
lods
jp
xchg
push
mov
push
pop
add
insb
mov
mov
sbb
pusha
pop
jecxz
lret
jle
cltd
mov
cmpsl
and
nop
popf
clc
jnp
mov
mov
popa
movsl
data16
jo
inc
adc
arpl
enter
lock
mov
jle
pop
pop
xchg
sub
inc
aaa
and
sbb
fnsave
add
aam
enter
sbb
clc
movsl
mov
push
dec
adcb
inc
addr16
mov
and
fcompp
mov
lret
mov
xchg
and
addr16
cltd
jno
inc
dec
mov
jecxz
or
outsl
imul
lods
and
fsubl
sub
ss
jl
jp
aaa
jns
xlat
outsl
pusha
pop
sbbl
scas
pop
jne
into
aad
dec
cmp
pusha
xorl
mov
int3
cwtl
push
jo
pop
mov
lds
aaa
push
mov
pop
xchg
and
cmp
imul
mov
into
or
lcall
rorl
filds
cli
ret
mov
pop
sbb
xor
xor
push
jnp
es
and
aaa
push
aam
push
in
iret
inc
and
repz
pop
pop
add
jl
ja,pn
jg
lret
fsubrs
inc
test
lret
lcall
dec
outsb
jnp
cmp
fstl
pop
jns
addr16
fisubs
dec
or
push
hlt
pop
jle
or
pusha
xor
out
mov
dec
dec
sti
dec
mov
rcr
ss
je
fs
sbb
mov
jo
shr
scas
sub
jnp
mov
mov
je
insb
shrl
cmp
jbe
insl
cmp
mov
jmp
mov
add
mov
lock
inc
jg
mov
rcrb
mov
mov
cmp
xlat
lcall
cmc
sar
test
pop
xchg
cltd
jge
jo
je
ret
mov
and
pop
nop
data16
mov
lods
sub
shlb
xchg
cs
jbe
mov
sub
dec
movsb
mov
mov
mov
pusha
xchg
adc
lcall
popf
mov
movsb
scas
clc
xchg
daa
or
gs
inc
cli
in
scas
int
xchg
mov
test
adc
aaa
xchg
xchg
or
sbb
das
jne
mov
out
cld
push
dec
rorb
and
imul
addl
jge
mov
jae
pop
test
mov
call
xchg
fcoml
mov
mov
mov
inc
mov
push
mov
inc
test
jb
or
jns
lods
adc
xlat
or
adc
mov
testl
mov
pusha
push
push
sub
jecxz
inc
mov
cmp
xchg
das
dec
movsb
ljmp
lds
cld
pushl
or
adc
into
cmpsb
shlb
daa
jl
out
imul
gs
dec
ja
push
push
rorl
ds
lret
repnz
sbb
sub
loope
rol
std
cmp
cltd
push
pushl
andb
add
pusha
mov
lahf
bound
outsb
push
cmp
scas
aam
fs
jmp
dec
cltd
xorb
sub
jg
jmp
cmp
daa
andl
mov
faddl
cmp
sbb
shll
push
mov
pushf
adcl
ret
cli
lock
sub
xor
jne
xchg
ror
jo
imul
incb
aaa
fisubl
mov
or
lea
jae
rclb
iret
mov
popa
pushl
loopne
pop
mov
jmp
xchg
sub
mov
lret
mov
inc
xor
jnp
icebp
repz
push
push
je
jbe
jecxz
jl
lret
int
leave
pop
mov
xor
test
xor
hlt
mov
cmp
inc
aas
rcrl
shlb
lods
les
lods
sub
sub
push
push
xchg
imul
aas
ljmp
repnz
arpl
out
pop
or
lcall
lea
inc
sbb
add
sub
mov
jle
lods
inc
add
xor
ficoml
sub
mov
rol
jbe
andb
pop
js
inc
sbb
lods
gs
js
fyl2x
fistl
and
mov
lret
xorb
xchg
je
stc
cltd
or
ret
inc
push
dec
popf
mov
ret
pop
mov
sahf
and
hlt
mov
push
lahf
std
loopne
cmp
sub
add
dec
sbb
jae
adc
push
lock
aam
fdiv
push
hlt
cmp
adc
pop
jecxz
popf
fsubp
jg
pop
dec
and
sub
push
jbe
daa
testl
stc
dec
pushf
jmp
stos
jae
push
pop
push
roll
inc
scas
int3
gs
sbb
or
loop
in
test
xor
andl
leave
bound
dec
and
sti
mov
mov
jns
sbb
cmp
jbe
rolb
adc
add
icebp
xor
adc
xor
xchg
and
sti
sub
insb
xor
push
test
xor
mov
enter
push
mov
pop
push
insl
sbbb
cmp
aas
pop
mov
pop
std
push
mov
xor
je
jecxz
adc
mov
imul
lds
std
inc
add
ret
rclb
mov
xchg
inc
out
push
scas
rolb
pop
sub
cmp
dec
dec
inc
pushf
or
sbb
pop
xchg
adc
jg
xor
jecxz
insl
sub
fwait
sub
mov
push
enter
ror
add
jb
inc
sbb
xlat
in
shll
lcall
popa
lods
aas
pop
ja
sbb
fildl
push
dec
push
sub
ret
or
mov
push
pop
push
hlt
enter
mov
rcr
roll
gs
xlat
dec
mov
cmpl
or
xorl
sbb
icebp
test
rcrb
cltd
clc
inc
xor
arpl
scas
test
mov
lret
dec
add
stc
add
inc
icebp
xor
add
xor
int3
int3
out
rcll
adc
ret
rcrl
mov
nop
std
cltd
mov
test
in
hlt
push
sub
sub
push
add
mov
iret
idivl
cmp
and
inc
sbb
xor
ds
lret
xor
push
aaa
fbld
add
lock
mov
enter
jo
movsl
xchg
pop
les
ja
sub
bound
pusha
push
lahf
fldl2t
inc
fistpll
push
aam
mov
sub
mov
mov
enter
jb
add
xchg
jbe
and
mov
fcomps
outsb
dec
push
arpl
int
sbb
call
bound
xchg
or
aad
mov
arpl
ss
fcoml
or
aaa
xchg
out
pop
loope
cmp
lea
insl
push
mov
push
or
dec
inc
aaa
xchg
pop
add
add
mov
cmpsl
push
fucomi
out
imul
or
fsts
pushl
pop
loop
sub
sub
js
add
or
inc
dec
fcoms
iret
mov
pop
mov
add
push
add
jge
mov
hlt
imul
mov
int3
xchg
mov
mov
and
mov
lock
cmp
push
fwait
push
lret
aaa
xor
sbb
jbe
aaa
orl
xsha256
cmpsb
adc
or
fldt
jbe
sbb
dec
pusha
repnz
lcall
lahf
add
xchg
and
dec
mov
push
adc
sub
lock
ss
sbb
into
adcl
nop
stos
lods
and
mov
add
bound
in
fnstcw
loope
loop
inc
addps
fbstp
sbb
repz
test
fwait
pop
call
inc
cmp
pop
inc
mov
and
ds
repnz
mov
sti
xchg
js
pop
mov
sbb
sbb
sub
push
int3
mov
jp
scas
cmp
lods
in
cmp
ret
add
enter
js
flds
fmul
dec
hlt
clc
jae
rclb
in
jl
outsb
stc
sbb
inc
iret
rolb
into
sarb
lods
xchg
add
leave
inc
loopne
inc
cmp
or
xchg
jecxz
jb
jae
adc
sub
adc
test
arpl
fldenv
push
mov
ret
adc
outsl
xchg
push
insb
sbb
repz
xor
dec
rcll
pop
cmpsl
call
dec
ja
jecxz
and
mov
aad
int3
in
add
mov
and
adc
setns
rcr
test
inc
cs
lret
jge
test
pop
xchg
sar
movsb
and
out
pusha
cmc
and
xchg
cli
jg
das
jmp
lea
mov
jecxz
ljmp
and
cmp
mov
int3
push
add
and
lahf
ret
sbb
inc
int
push
lahf
inc
xor
or
ja
push
fs
ljmp
pop
and
fdivl
aad
pop
cwtl
mov
cmp
test
movsl
jne
cmp
pop
mov
pop
ret
xchg
xlat
pusha
mov
mov
xchg
fwait
or
fwait
or
icebp
outsl
or
pop
ret
mov
dec
notb
fcoms
fwait
out
pop
iret
in
xchg
inc
jo
loop
into
shlb
and
mov
fldl
pop
mov
popa
loop
push
std
ret
mov
sbb
pop
adc
mov
loope
jnp
gs
jg
inc
cmpsb
cmp
adc
clc
test
outsb
ja
jne
sbb
test
and
cmp
xor
xor
cld
icebp
push
sbb
jno
pop
jmp
xchg
pop
out
and
or
dec
out
aaa
mov
fmuls
sub
lea
arpl
lea
es
cmpsl
push
mov
cltd
aam
lret
pop
xchg
lea
xor
fistpll
push
add
jmp
fucomp
shll
inc
rorl
gs
mov
sbb
lret
pop
out
pushf
mov
sub
rcrl
and
cmp
rcr
pop
sbb
int
dec
push
outsl
mov
repnz
les
mov
insl
nop
out
popf
push
enter
adc
cmp
mov
loopne
mov
cld
flds
icebp
xchg
mov
insl
cltd
or
stc
cmp
cmp
shr
push
outsb
or
push
adc
hlt
sbb
pop
push
int3
fadds
jmp
icebp
mov
pushf
xor
ret
or
cmp
fs
jnp
jmp
pop
je
xor
push
testl
fwait
cwtl
adcl
das
aad
mov
sbb
fildll
mov
popf
xor
jns
fcomip
in
stos
fnsave
in
and
lods
aam
shr
sbb
mov
xchg
fwait
xor
cmp
fcmovnbe
push
push
inc
xchg
lcall
imul
adc
lret
les
cmp
xchg
ret
mov
ss
mov
inc
shr
mov
in
mov
push
lret
jne
fsubrl
stos
lahf
pop
addl
mov
or
mov
mov
pop
insl
ja
int
cmpsl
mov
data16
pusha
adc
fistps
movsl
out
addr16
push
adc
sub
mov
fisttpll
push
mov
mov
iret
jg
in
push
jae
push
stos
xchg
push
ja
in
xor
in
pop
inc
cmp
data16
stc
add
aaa
add
or
sub
int
lahf
aas
cmp
pushf
xchg
xchg
inc
cld
jae
loope
and
nop
mov
lea
lods
out
push
out
sbb
movsb
sub
sbb
pop
push
subb
lcall
sub
les
sub
insl
repnz
aaa
cmpsl
push
xchg
sub
or
xchg
dec
jp
inc
and
pop
in
cld
pop
xor
sti
xchg
jne
je
inc
test
leave
adc
cwtl
imul
fbstp
movsl
bound
jne
inc
ds
add
out
xor
push
fldl
inc
addr16
adc
dec
mov
aaa
or
sub
cli
hlt
jbe
and
outsl
or
fsts
cltd
je
inc
test
or
push
call
fmul
pushf
ret
mov
add
loope
int3
xor
add
sub
test
in
mov
dec
inc
or
mov
fwait
xchg
test
mov
std
inc
adc
pop
xchg
dec
popf
adc
or
mov
pusha
addb
addr16
icebp
popa
pop
sbb
call
pop
inc
repz
orl
xchg
enter
hlt
push
push
testl
mov
jno
jecxz
mov
jns
addr16
lock
hlt
fistpll
cmp
fsubl
add
sbb
mov
inc
sbb
aam
out
mov
popf
inc
in
push
xchg
cmp
pop
mov
lret
xchg
adc
icebp
mov
push
mov
lock
out
sahf
mov
sub
push
in
cmp
xor
repnz
cltd
lds
and
mov
add
mov
daa
mov
incl
cmpsl
lods
jg
lea
iret
in
ja
test
into
into
push
lahf
iret
jl
cmp
lock
or
xchg
dec
fwait
aad
xor
push
jno
nop
sub
mov
aad
cmpsl
fisttpll
sti
rclb
cmp
push
adc
mov
aad
enter
jmp
js
and
aas
mov
loopne
mov
out
pop
pop
push
scas
mov
shll
cli
cmpsl
or
jmp
sub
pop
aas
sbb
xchg
mov
sub
cmp
pusha
mov
mov
lock
loopne
cmpsb
int3
iret
xchg
xor
adcl
sub
test
dec
daa
cmpsb
ja
pusha
stos
push
xchg
lods
mov
xor
test
out
cmp
addb
mov
cltd
aam
mov
mov
inc
adc
push
lock
pusha
fdivs
inc
adc
xor
bound
test
stc
jnp
mov
jecxz
insb
or
repz
xchg
aam
adc
pop
inc
dec
icebp
repnz
out
sar
sti
incb
jnp
jnp
sbb
sub
cmp
call
orb
mov
andl
pop
aam
mov
xchg
lds
ja
mov
xchg
xchg
lea
arpl
stos
pmulhuw
out
shl
pop
je
ret
imul
test
or
or
jb
es
push
movsb
mov
inc
and
repnz
jb
rcll
mov
cmpsb
lret
insb
fldl
shlb
fisttps
popa
cltd
sbb
jle
int3
cli
test
push
aaa
mov
popa
std
push
insb
mov
daa
incl
lds
shr
xchg
enter
aad
xchg
notl
push
in
out
and
clc
repnz
in
cmp
xchg
or
in
ljmp
push
and
insl
aad
ret
cmp
push
cmp
push
xor
or
repnz
aas
pop
cmpsb
push
add
push
lahf
cmpsb
sub
aaa
dec
mov
sbb
ffreep
scas
or
adc
sbb
int
pop
cmc
push
int3
push
push
outsb
xchg
inc
mov
fisubrl
les
out
je
dec
push
cld
arpl
or
sub
lahf
cwtl
inc
or
cmpsb
dec
les
mov
jns
and
xor
loope
cmp
js
mov
xchg
xor
adc
popf
out
cmp
xor
jno
xchg
mov
rorl
push
or
pop
jne
push
mov
sub
pop
and
jbe
inc
cwtl
inc
scas
mov
or
lret
fimull
lret
fsubrp
fcomps
movsl
roll
dec
mov
xchg
repnz
in
ja
or
iret
cmc
fistpl
pop
inc
mov
loope
mov
negl
movsl
loope
iret
mov
jbe
call
and
call
mov
aas
sub
mov
mov
add
fbld
bound
add
cmp
inc
scas
mov
popf
pop
lahf
sbbb
inc
testb
mov
inc
mov
pop
fdivl
xchg
add
scas
es
loop
js
lds
mov
stc
jl
mov
orb
mov
jnp
cmp
cmp
in
test
imul
dec
fists
ss
and
push
outsb
imul
add
fisubl
push
push
shr
cmc
insb
cmpsb
cwtl
das
add
idiv
aaa
sbbb
mov
bound
pop
add
adc
lods
add
cmpsb
adc
movsl
xor
rclb
cmpl
ret
xor
int3
mov
dec
mov
sbb
add
cmp
xchg
adc
mov
movsl
add
add
xor
call
push
rdtsc
lret
cmpsl
add
ss
fwait
out
lahf
jns
push
sub
in
out
dec
inc
jbe
filds
jno
leave
and
outsb
dec
xchg
cmp
sarb
sub
mov
mov
imul
adc
dec
pop
lret
pop
nop
mov
ror
std
pop
xchg
cmp
sub
push
cmpsl
xor
repz
lds
aas
ret
std
ret
jmp
outsl
add
aaa
in
std
mov
mov
fs
inc
adc
mov
or
cltd
divb
lods
into
jl
sbb
cs
jnp
aas
add
and
and
xchg
pushf
out
out
cltd
testl
inc
lahf
aam
rolb
loopne
jmp
vcvtpd2ps
orb
adc
das
out
inc
xchg
jp
jnp
stc
imul
lahf
adc
addr16
pop
xchg
jne
mov
fs
incb
popf
cmp
sbb
insl
test
jl
ret
sub
cmpsl
dec
mov
ljmp
mov
mov
inc
test
js
sub
add
cmp
ja
jl
sub
mov
adc
cs
pop
ret
iret
sub
movsl
ficoms
ret
loopne
or
or
out
adc
cmp
fs
nop
call
or
push
lea
inc
sti
mov
jmp
push
and
push
inc
mov
insb
mov
aam
add
mov
cmp
aas
dec
hlt
sub
outsl
sbb
iret
sbb
or
out
inc
adc
dec
and
xor
aam
xchg
adc
add
pusha
xchg
sahf
push
inc
add
xor
pushf
adcl
inc
push
inc
inc
and
push
nop
data16
fistpl
cwtl
lahf
ficoms
xchg
loopne
push
pop
scas
leave
pushf
in
adc
mov
scas
iret
xchg
aad
sbb
negb
xor
sbb
xchg
jae
push
shlb
movsb
je
cltd
dec
and
mov
cmp
fs
cmp
in
xor
in
lahf
out
or
pusha
les
shll
sub
and
mov
mov
outsb
inc
inc
push
jl
js
outsb
xlat
dec
inc
repnz
mov
mov
stos
push
xor
pushl
jmp
jo
cld
jo
jle
cmp
xor
mov
rolb
nop
and
or
mov
add
mov
push
shrl
in
not
rclb
add
add
ja
dec
fimull
sbb
mov
adc
xchg
cmp
outsl
dec
xchg
test
add
jle
sbb
mov
pop
xchg
sub
push
call
lds
push
ljmp
jecxz
lock
in
xchg
mov
cmp
xchg
lods
push
je
mov
movsb
call
jo
lods
mov
jg
pop
xor
jp
dec
cmc
insb
mov
pop
iret
fwait
xchg
sbb
mov
js
mov
popf
mull
movsl
addr16
dec
dec
dec
fmull
gs
lods
add
sbb
loopne
jns
scas
lcall
fiadds
mov
iret
xchg
movsb
test
jl
call
xchg
sbb
movsb
sbb
icebp
je
mov
xor
mov
and
push
fs
in
lods
dec
xchg
pushf
xor
iret
xchg
lods
clc
test
or
add
das
addb
cmp
into
scas
and
std
sbbb
ss
sub
dec
dec
shr
xchg
outsb
dec
enter
mov
dec
rclb
and
das
or
lods
enter
insl
mov
fisttpl
mov
sbb
aam
xchg
add
movl
sbb
lds
push
xchg
call
jmp
dec
xor
ret
pusha
sbb
pop
xchg
ret
ja
xchg
fstl
call
mov
push
test
cmc
mov
mov
mov
jne
hlt
negl
jbe
xchg
sub
jo
xchg
test
push
jbe
ds
cmp
sbb
push
add
inc
cmp
int
test
push
jnp
cmpsb
push
xlat
dec
mov
cmp
stc
test
mov
mov
push
scas
and
test
enter
loop
mov
sbb
xor
cli
cmp
rolb
rolb
fwait
in
jecxz
sbb
cwtl
bound
scas
and
call
and
cmp
mov
mov
loop
in
aas
inc
and
int3
jmp
add
outsb
ja
in
test
subb
mov
inc
in
subl
shlb
das
clc
xchg
add
cwtl
pop
push
pop
sbb
fs
cmp
inc
xor
mov
jecxz
inc
js
fwait
lret
aad
enter
xor
cmpsb
test
sub
ss
repz
xor
inc
pop
jge
or
jbe
dec
mov
inc
imul
movsb
xchg
pop
shll
push
lods
jbe
mov
roll
addr16
cmp
xchg
in
loop
incb
add
mov
or
ret
mov
cmp
mov
int
inc
lods
ljmp
push
push
pop
inc
cmc
pop
les
xor
cmp
xorb
lret
loopne
je
in
push
cld
pop
pusha
xor
sarb
mov
push
insl
dec
and
ja
test
lods
pop
subb
out
or
or
cmp
stc
adc
icebp
repnz
in
xchg
mov
stos
add
sbb
sub
insb
test
jno
lds
hlt
out
dec
mov
je
aam
insl
sbb
xor
fs
inc
cli
jo
add
jne
inc
sbbb
addr16
mov
bound
dec
lea
hlt
lcall
movsb
fimuls
push
dec
scas
dec
push
out
add
mov
add
shrl
nop
inc
xchg
adc
push
das
xor
push
add
std
scas
pop
into
push
push
pop
push
jnp
inc
adc
xor
mov
int3
out
das
ficomps
sahf
cmpsl
das
pop
enter
int3
jl
int3
jae
add
mov
enter
pop
lea
outsb
loopne
adc
xchg
push
xchg
addr16
jno
push
inc
xchg
mov
shrl
push
xorl
das
inc
push
inc
pop
dec
ret
and
xor
dec
test
lret
jae
pop
cwtl
repz
sbb
cmp
mov
in
adc
add
xor
in
cmpsl
cs
push
xor
inc
fsts
test
repz
loop
lahf
mov
or
bound
cmp
nop
hlt
sub
repnz
jo
add
lret
dec
aam
pushl
out
sub
cmpsb
jle
in
test
jae
add
outsb
push
jmp
ret
mov
ret
adc
aam
adc
mov
mov
mov
xor
push
mov
or
jnp
mov
add
mov
stos
fs
mov
cs
mov
dec
ss
xchg
xor
or
mov
lock
dec
movsb
push
jmp
ficompl
pop
jae
ss
test
fisttpl
lods
into
rclb
sub
sbb
jo
mov
jmp
mov
lock
ds
mov
enter
dec
or
nop
shrl
mov
lcall
fistpl
sub
mov
gs
mov
inc
repz
adcl
ss
andl
jmp
in
mov
xor
clc
and
mov
add
mov
repz
test
test
mov
mov
lret
pop
adc
cmc
pop
adc
std
adcl
pusha
mov
mov
xor
fdivrp
rcl
idiv
inc
insl
cmp
fcomps
repz
jns
lods
and
out
mov
subl
orb
and
loop
xor
dec
xchg
stc
imul
jg
notl
push
and
clc
push
mov
movsl
jp
inc
ret
sbb
sub
xchg
adcl
enter
je
scas
push
lcall
iret
fildl
and
pop
mov
and
push
jae
xchg
xor
aas
loope
sub
pop
cmpsb
pushl
push
mov
sbbb
popa
stos
inc
push
call
loopne
es
repnz
cwtl
add
and
ficoml
jae
pusha
test
mov
imul
notl
jecxz
sarb
daa
icebp
lahf
in
aas
mov
sub
dec
cli
sti
test
mov
mov
jge
pop
adc
outsl
mov
lea
fists
in
jbe
adc
aaa
ret
cld
and
jecxz
and
rcrl
pop
sbbl
mov
orb
push
push
mov
ja
movsl
fdivrs
stc
divl
cli
lret
adc
in
in
pushf
and
xchg
xlat
cld
shrb
imul
pushf
jl
jg
push
fwait
and
push
add
inc
adc
popf
sbb
fcmovb
ror
inc
mov
lock
popf
out
ja
fistl
sti
clc
push
push
in
clc
xchg
xor
sub
add
popf
jecxz
xchg
ret
xchg
lods
push
jbe
dec
xchg
jbe
sub
inc
jns
int
daa
mov
enter
pop
movsl
sbb
mov
adc
sub
and
mov
mov
sbb
adc
shr
data16
loop
aad
xchg
fcomps
out
mov
mov
xchg
push
data16
fadds
jno
xchg
xor
pop
ret
fwait
insl
movsl
inc
into
adc
leave
xlat
outsl
sub
ds
jmp
xor
jno
dec
lods
add
jb
xchg
pop
outsb
mov
imul
ret
aad
icebp
pop
pop
out
sub
xchg
dec
cmp
jns
jge
push
cmp
dec
sahf
test
cmpsb
cwtl
add
push
mov
movsb
xor
cwtl
mov
xor
in
jbe
inc
loopne
dec
lret
sbbl
cmp
enter
cli
outsl
fstpl
or
mov
mov
xchg
inc
jae
push
and
enter
pushf
ret
mov
stos
lret
dec
iret
sub
shl
fadds
add
repz
lahf
hlt
cmpsl
negb
outsb
xchg
pop
fistl
je
data16
xchg
outsb
das
cli
popf
and
xor
shl
hlt
jp
mov
fbstp
push
xchg
dec
pop
sti
sbb
add
inc
cld
push
dec
shl
mov
and
cmp
xchg
push
pop
add
lcall
std
pop
adc
stc
pop
xor
sarl
orl
pop
xchg
paddq
lahf
fcom
outsb
jmp
ss
out
cmpsb
push
sarb
jae
addr16
lcall
aad
addr16
adc
flds
push
dec
adc
jo
mov
adc
or
jl
int
pop
add
inc
stos
and
jmp
and
loope
jo
stos
mov
lcall
push
dec
leave
lea
cmc
out
insl
jecxz
pop
les
jb
or
push
cmc
jle
fwait
add
adc
xor
jbe
in
out
stos
mov
sub
jg
lea
fwait
adc
inc
orl
icebp
dec
call
pop
add
psubb
aaa
scas
ljmp
sti
add
or
cmpsb
xor
sub
pop
push
jb
push
scas
in
loopne
pop
sub
les
push
mov
cmp
addb
or
sub
fbstp
jae
mov
pop
xchg
fbstp
mov
mov
add
ds
cwtl
inc
push
add
lock
test
add
mov
fisubl
jne
xchg
insl
and
stos
addl
dec
jle
sbb
shl
push
add
inc
add
aam
mov
ljmp
pusha
or
ljmp
xchg
subb
push
data16
stos
lea
test
insb
pop
lret
dec
inc
mov
lea
jno
mov
arpl
stos
outsb
sbb
xchg
mov
cmc
sub
jp
lock
sbb
cmp
addb
adc
sbb
mov
sahf
push
inc
leave
mov
jmp
add
sbb
sti
xchg
js
jmp
inc
hlt
adc
mov
mov
push
out
adc
fs
push
add
adc
fadd
jbe
pop
mov
cmp
inc
sub
pop
jmp
stos
xchg
adc
sbbb
mov
dec
cmp
mov
xchg
xchg
test
push
push
aad
and
cld
mov
pop
push
dec
dec
stos
mov
jp
sub
lahf
mov
cmp
dec
or
out
inc
stc
fs
addb
or
mov
push
cmc
sbb
jb
popl
out
add
add
sbb
mov
pop
adc
jle
dec
cs
outsb
cmpsl
movsb
mov
jae
pushf
add
ss
pop
xorb
mov
push
pop
dec
insl
aaa
fnstenv
xlat
outsb
daa
fs
stc
jno
xor
pop
sar
fnsave
xor
add
and
inc
stc
and
aas
or
lds
popf
push
in
addr16
ret
sahf
jb
dec
dec
stos
and
mov
invd
stc
jg
popa
pushf
adc
mov
jbe
repz
mov
mov
cmpsl
add
push
aas
and
sbb
sub
jno
pusha
and
jmp
and
mov
cmp
aam
pop
xor
mov
xchg
lds
xor
sbb
push
test
and
enter
and
into
stos
loope
xchg
ficoms
fsubrs
sub
mov
lods
xlat
lcall
int3
add
push
aad
in
nop
inc
mulb
mov
jno
rcrl
cltd
subb
push
add
sti
push
aas
fcmovnb
test
psubd
and
and
jle
test
es
call
inc
cltd
mov
dec
outsl
jbe
rorb
std
dec
test
dec
xchg
pushf
les
aas
js
jge
inc
insb
mov
cmp
movl
mov
adc
mov
mov
inc
mov
insb
pop
addb
test
add
pop
push
pushf
addl
aaa
insb
out
rcr
add
jg
cmpsl
fsubrl
imul
pop
sub
mov
ret
push
test
jb
push
sub
insb
add
ds
pop
xchg
ficoml
xchg
cmc
xchg
lea
aas
arpl
in
sbb
cmpsb
mov
aaa
add
int
jne
push
push
add
movsl
out
je
int
ret
cmp
and
mov
jno
in
lcall
dec
push
lods
dec
mov
cmpsb
dec
sarl
sub
adc
cwtl
sbb
test
outsl
mov
scas
out
out
push
pop
xchg
xchg
fiadds
cmp
pop
mov
insb
in
mov
cmpb
mov
sub
or
addr16
push
xchg
cltd
roll
test
xchg
sbb
pop
push
xor
and
sbb
mov
sub
cmc
rorb
shrb
fmul
inc
inc
popa
xor
jae
pop
loop
xchg
pop
adc
sub
jmp
movsb
pusha
ret
aam
dec
jnp
movsl
xchg
add
test
mov
cltd
xchg
cmpsl
jl
add
cmp
pop
fs
inc
shll
push
aam
cmpsb
fistl
inc
cli
push
sbb
cld
push
les
sti
sub
sub
mov
daa
mov
pop
jne,pn
mov
into
stc
xchg
mov
pop
test
adcb
xor
pop
fbstp
and
sti
jecxz
jge
scas
dec
cmp
mov
add
sbb
or
xchg
jns
addr16
int3
inc
andb
jb
stc
add
fcompl
popf
adc
jg
mov
dec
into
push
scas
insl
xor
or
push
xor
cmc
data16
fcmovnbe
in
mov
pushf
jmp
pushfw
dec
in
or
cmpsl
xor
mov
fnstcw
int3
pop
das
clc
cwtl
xchg
sti
or
sub
add
ljmp
test
xor
xor
int
leave
ljmp
mov
mov
adc
push
ljmp
push
loop
pop
lods
in
outsb
add
outsb
pop
enter
or
adc
roll
push
and
mov
inc
iret
std
insl
xchg
mov
inc
mov
adc
popl
inc
movsl
imul
stos
ss
sub
pop
insl
jb
scas
add
mov
outsb
dec
pop
mov
stos
pushf
jmp
rorl
or
test
ds
or
jge
mov
pop
jo
aaa
or
sbb
inc
stos
mov
ret
stos
jo
inc
test
and
sahf
xor
cmpsb
dec
mov
xor
iret
nop
push
sub
and
pop
loope,pt
cld
xchg
daa
xor
mov
ja
inc
fdivl
pop
test
mov
nop
outsb
fs
cmp
sub
and
rcl
pop
fildl
daa
stos
mov
popa
arpl
lahf
and
xor
faddl
nop
inc
scas
fs
mov
pop
mov
jg
adc
xor
cmp
mov
jnp
or
mov
loop
adc
lret
dec
cwtl
lods
pop
ljmp
hlt
shrl
mov
pop
scas
cs
out
aaa
subb
loope
sbb
jle
mov
add
movsb
popa
test
repnz
mov
popf
das
pop
pop
loop
mov
mov
inc
lods
movsl
and
add
ja
ret
xchg
loope
mov
push
inc
leave
leave
std
out
divb
xlat
in
jge
rcll
leave
test
les
out
dec
mov
pushf
cmp
jns
and
stc
rolb
mov
sarl
mov
and
es
mov
xor
lahf
jge
rolb
adc
test
lods
mov
jmp
fsubl
jne
rol
and
cmove
sub
mov
cmp
mov
dec
sbb
rclb
push
mov
popf
lock
stc
iret
jne
pop
mov
rcll
lea
push
lcall
cwtl
icebp
nopl
into
aad
jge
dec
cli
sar
jb
out
fisttpll
andb
sub
push
inc
cmpsl
and
enter
jae
std
adc
arpl
addb
and
sti
icebp
daa
pop
fdivr
jbe
pop
scas
add
mov
adc
icebp
fcomps
sub
push
pop
xchg
jp
adc
rol
and
jno
inc
enter
in
cmpsl
in
ret
mov
or
xchg
sbb
add
adcb
and
leave
mov
dec
insl
xchg
jle
icebp
addb
daa
jae
nop
inc
fwait
int
call
movsb
jmp
jno
mov
sti
loopne
enter
and
jle
push
in
or
test
jae
add
xchg
xor
push
lods
push
pusha
dec
sbb
fxch
in
lret
pop
xchg
jbe
xor
rorb
jb
or
rcrl
jns
ljmp
add
cmp
out
je
adcb
jecxz
lods
pop
in
sahf
xchg
jnp
and
lods
in
shrl
inc
mov
ljmp
stos
ljmp
xchg
sub
mov
add
xchg
mov
xchg
lret
xchg
dec
in
pop
adc
fadds
insl
adc
or
lret
pop
pushf
ror
arpl
jae
fistps
jae
mov
dec
sahf
jno
nop
xchg
int
dec
mov
shl
xchg
lods
dec
arpl
cltd
nop
xchg
dec
mov
clc
dec
movsl
cwtl
aad
fidivrs
inc
not
mov
fwait
cmc
ret
cmp
repnz
in
das
clc
popa
inc
dec
push
cltd
test
in
mov
fwait
in
popa
outsl
addr16
cmp
add
in
movsb
adc
sbb
test
push
test
mov
decl
jno
xchg
jle
push
shll
pop
aad
jb
dec
jge
lea
lods
inc
sbb
test
mov
mov
lcall
in
and
add
leave
call
iret
not
aas
jmp
jnp
pop
xchg
push
lds
push
mov
pop
enter
push
mov
dec
or
adc
gs
mov
cmp
mov
push
aam
scas
mov
xor
adc
dec
add
or
sarl
arpl
inc
cs
and
xor
ffree
xchg
adc
outsl
push
jb
es
outsb
dec
add
inc
push
aaa
lods
gs
es
jnp
mulb
or
in
incb
scas
sbb
sbb
orb
data16
xchg
stos
int3
cltd
push
mov
into
sahf
xchg
stos
outsb
pop
fadds
mov
jno
mov
or
stc
jnp
pop
or
and
pop
enter
adc
aam
bnd
sar
pop
xor
inc
fcompl
movsl
mov
gs
push
and
fistl
popf
adc
rol
lret
xlat
adc
adc
ljmp
push
fmull
lods
ret
jmp
mov
inc
ret
lret
and
lds
mov
cmpsb
insb
faddp
lods
mov
and
je
and
push
or
jge,pt
add
sub
push
std
mov
ja
push
mov
pop
rcl
fstpl
add
mov
movsb
xchg
push
push
aas
lret
pop
xchg
aad
fldt
pop
dec
inc
pop
sub
mov
sti
aaa
sahf
adc
or
push
stos
ret
or
xor
ss
repz
jbe
inc
adc
filds
cld
fwait
je
dec
add
sbb
out
jp
leave
jmp
push
les
mov
insl
jae
xor
adc
mov
mov
cmp
aam
ret
add
mov
loop
mov
lock
dec
addr16
sub
inc
pop
inc
jp
sub
or
in
cwtl
daa
out
arpl
lds
sbb
dec
rcll
out
or
bound
lock
into
or
pop
call
nop
or
test
mov
jl
mov
mov
and
hlt
jae
pop
jno
sbb
adc
andb
les
fiaddl
inc
xchg
jno
push
ret
dec
sub
mov
andl
leave
fisubl
cmp
aas
cwtl
inc
sub
mov
mov
add
push
imul
inc
call
inc
out
or
inc
std
int3
cmp
add
daa
iret
add
sarl
inc
lret
jo
orb
cmpsl
cmpl
int3
jle
mov
loope
fs
mov
nop
push
and
mov
arpl
out
arpl
ljmp
leave
jae
jle
nop
ret
sub
mov
or
sbb
sti
jl
jno
je
test
xchg
cmp
push
comiss
movzwl
rolb
push
hlt
orb
and
push
add
push
into
into
stc
ljmp
jmp
imul
inc
pop
or
sbb
icebp
dec
jmp
jbe
sbb
adcl
aam
xchg
xchg
cmpsl
push
push
out
test
jns
cmpsb
cmp
data16
sub
pop
add
out
jns
jnp
enter
xchg
lea
ds
and
into
ss
fiaddl
mov
sbb
xchg
andl
sub
sub
push
out
jmp
xor
leave
enter
adc
movsl
pop
cmc
sarl
xor
in
not
jle
or
mov
mov
je
popf
lock
and
iret
int
jmp
or
and
adc
push
pop
mov
in
jl
xor
pop
aaa
pop
orb
or
out
dec
inc
sbb
mov
cld
or
les
cmp
sbb
aam
push
insb
dec
xchg
fdivs
xchg
test
jl
adc
movsb
aad
push
sub
pushf
dec
jl
inc
and
out
loope
inc
das
push
mov
inc
mov
sub
das
xor
js
xor
fcompl
pushf
cmpsb
arpl
mov
cltd
inc
or
fnstenv
mov
repz
push
and
cmp
icebp
jno
mov
jne
ljmp
loope
je
inc
xchg
aam
test
pop
pop
lcall
lahf
int
hlt
test
stos
pop
jmp
push
pop
or
mov
clc
sbb
cld
inc
inc
subb
push
push
jnp
or
das
xchg
cwtl
xchg
jne
nop
inc
xor
repz
xchg
jecxz
mov
in
cltd
lret
aaa
test
addr16
in
jl
adc
xchg
or
int3
mov
ret
and
arpl
push
es
or
movsb
and
xchg
and
push
push
push
jno
movsb
addl
mov
jge
mov
ljmp
or
dec
or
push
pop
mov
outsb
movsb
addb
dec
ret
mov
jne
fcomps
and
stc
int
sub
shrl
jne
adc
cld
push
ret
mov
jp
jecxz
aas
dec
in
xchg
outsb
add
clc
push
mov
mov
sbb
sbb
adcl
push
jmp
fs
movsb
sub
mov
mov
cwtl
and
jg
mov
mov
pop
xchg
sub
xor
out
js
insl
bound
cli
es
push
je
movsl
sbb
in
dec
pop
into
mov
push
push
shr
das
rep
adcl
in
roll
add
mov
filds
xor
aaa
int3
jp
mov
ret
outsl
push
fdiv
and
dec
mov
inc
gs
or
sub
mov
dec
dec
mov
es
aam
out
cwtl
pop
stc
mov
loopne
inc
fildl
int3
insb
stos
jbe
mov
je
mov
sbb
call
fsts
jl
cmp
xor
pop
test
roll
dec
inc
stos
cmp
lock
in
push
movsl
imul
das
dec
sub
int3
cmpsb
xor
pop
lret
add
sbb
adc
push
mov
mov
shlb
mov
adc
stc
dec
in
push
cmp
popa
push
adc
pop
aas
push
cs
adc
mov
rol
jg
and
rorb
inc
mov
movsb
aam
mov
or
pop
add
cld
loopne
and
cmpb
adc
test
pop
fsubs
push
jae
dec
mov
pop
or
jo
push
dec
inc
adc
mov
leave
xorl
jg
subl
pushw
mov
cmp
cwtl
arpl
sbb
sbb
addr16
lcall
icebp
orb
jnp
or
nop
add
xor
stos
mull
adc
mov
sbb
mov
lea
cltd
daa
sub
lds
jnp
mov
mov
dec
jbe
ja
mov
pop
jb
in
lcall
add
lds
mov
stc
rclb
clc
fmuls
loop
cmpsb
sbb
sub
xchg
push
push
mov
mov
mov
in
mov
or
outsb
mov
xchg
insb
jp
sbb
cmp
cmp
jge
jne
jge
out
mov
movsb
pop
dec
push
je
cs
in
sbb
pop
sub
int
out
xchg
adc
jmp
jmp
cmp
lea
mov
adc
call
test
cmpl
pop
pop
aad
mov
loop
mov
fmuls
pusha
imul
jae
push
push
out
movsl
xchg
pusha
cli
push
add
data16
sahf
adc
pop
jecxz
std
or
shr
je
test
mov
testl
bswap
shll
sti
cli
movsl
pop
xor
and
fistl
aad
dec
loope
adc
rolb
imull
leave
mov
mov
aad
xchg
hlt
insb
pop
mov
into
mov
loop
sub
ss
push
mov
rcl
ffreep
pop
repz
pusha
loop
andb
sub
adc
mov
in
and
iret
add
lods
pop
jmp
dec
mov
and
repz
jmp
cmpb
enter
xor
gs
pop
dec
inc
pop
xor
sti
shll
mov
inc
adc
xchg
imul
push
inc
movsl
mov
sbbl
jb
popf
bound
pop
adc
addr16
test
jbe
adcb
lret
ds
xchg
int
dec
roll
xchg
mov
int
clc
mov
es
cli
and
inc
push
cli
pop
xor
dec
cli
cmpsb
in
mov
call
fsubl
pop
sbb
or
ja
js
repz
fnsave
jne
jb
ret
mov
cmp
sub
ret
mov
jno
repnz
mov
mov
icebp
lods
and
push
nop
lahf
push
iret
xor
mov
push
das
outsb
inc
push
lahf
gs
in
mov
sub
dec
xchg
xchg
jae
nop
pop
sub
pop
push
pop
es
aad
faddl
xor
cmp
lahf
cltd
stc
pop
xor
xor
std
sub
sbb
push
lock
cltd
psubd
add
push
mov
fistpl
aam
pop
inc
xor
or
ja
das
jno
aad
cmc
sub
das
addb
dec
je
mov
xchg
dec
lds
leave
mov
inc
test
sbb
push
inc
jmp
mov
paddq
cmp
mov
hlt
or
dec
pop
mov
xor
push
pop
mov
sub
xchg
stos
in
xor
aam
fisttps
sbb
into
adc
sbb
test
hlt
add
cmpl
shrb
insl
nop
pop
in
int3
hlt
xor
cld
or
add
inc
inc
inc
xchg
insl
push
pop
mov
xchg
jbe
arpl
and
out
rolb
and
test
adc
dec
sub
fsubrl
test
jecxz
arpl
aad
nop
repz
out
decl
or
mov
jae
and
in
sbb
hlt
adc
mov
push
cmc
clc
inc
inc
mov
sbb
addr16
hlt
test
pop
push
jecxz
loop
cli
inc
or
imulb
rorb
rcr
xchg
test
stos
jne
and
popa
jl
dec
add
cli
adc
and
xchg
pushf
jae
xlat
imul
fbstp
jle
adc
jnp
mov
shlb
push
push
std
pop
fiaddl
inc
sub
mov
ljmp
push
mov
or
sbb
mov
add
and
subl
pusha
and
movsl
mov
leave
shlb
dec
movzbl
test
mov
sbb
pop
jmp
inc
jg
daa
rcrb
or
imul
push
mov
sbb
xchg
mov
enter
shll
fisttpl
stc
insl
sbb
sete
xlat
push
loop
pop
ss
push
jmp
and
bound
test
pop
or
lods
dec
jl
jbe,pt
mov
push
push
jp
lods
inc
cwtl
dec
inc
outsl
addr16
test
iret
mov
pop
sub
and
push
loopne
out
fxch
or
data16
add
sbb
int3
mov
fs
stos
adc
sub
mov
stos
cmp
and
cld
dec
sub
nop
add
lods
sub
push
movsl
jnp
jnp
aas
pop
xor
pop
xchg
adc
jae
cmp
ja
ret
mov
scas
lahf
ret
ficompl
mov
fisubl
or
dec
sahf
out
lcall
and
ret
lea
inc
mov
sub
xchg
cmc
cmp
les
dec
adc
sbb
daa
faddl
cmp
jb
push
andl
and
sub
lds
hlt
inc
fdivl
mov
shl
adc
rorl
sbb
adc
jle
pop
cmp
jne
in
sub
xor
add
jno
andl
xchg
sub
stos
mov
aaa
das
sub
ret
push
mov
pop
ret
mov
push
xchg
sub
out
repnz
pop
xchg
rcr
and
push
cs
adc
sahf
mov
mov
pop
pop
jp
mov
test
sub
loop
in
push
inc
xcrypt-ecb
cmpsl
or
popf
sbb
imul
insl
mov
andb
dec
mov
stos
movsl
rcr
psubd
daa
mov
js
adc
lahf
and
addb
sub
push
js
cld
xor
fistpll
pushf
xor
popa
sbb
out
dec
sbb
lret
outsb
bound
fidivs
ljmp
fstpl
cmp
subb
or
bound
xor
cmp
fucomi
and
push
jno
pop
stos
inc
adc
cmpsl
aaa
pop
idivl
mov
and
jns
xchg
mov
out
enter
add
mov
mov
add
xchg
xchg
data16
dec
mov
sub
sahf
mov
ja
pop
gs
mov
aad
fisttpl
mov
xchg
addr16
cmp
cmpsl
push
mov
push
pop
pop
cmp
add
stos
jmp
push
pushf
jge
mov
std
andb
insl
and
add
mov
dec
iret
fsubrl
stos
xor
pop
fstl
pop
cmp
subl
pop
jp
push
pop
in
ljmp
jge
data16
lret
or
jecxz
addr16
xchg
mul
sbb
jb
pop
or
lods
in
leave
fsubs
les
cmp
pop
or
and
pushf
inc
test
loope
inc
or
mov
js
or
sbb
cmpsb
mov
jp
push
outsl
fmuls
nop
fisttps
cli
push
call
ds
or
sbb
scas
xchg
rolb
mov
sbb
adc
sbb
or
jnp
test
dec
out
push
imul
mov
adc
mov
add
dec
push
and
adc
clc
mov
popf
jmp
push
jl
jbe
jecxz
xlat
xchg
push
pop
mov
xlat
dec
and
xchg
jo
inc
xor
dec
pop
dec
inc
jecxz
test
mov
fmuls
inc
popa
les
into
out
dec
stos
xor
sbb
bound
xor
mov
mov
shl
lea
pop
push
aam
dec
xchg
jecxz
pop
xchg
mov
push
stos
aaa
lock
clc
out
sub
or
je
lods
adc
inc
xchg
jp
or
dec
movsl
aaa
cmp
std
lahf
inc
mov
stos
cmp
ja
test
daa
pop
sub
push
fcoms
dec
mov
mulb
fadds
jne
dec
and
jp
mov
mov
je
dec
loop
dec
xor
or
outsb
pop
sti
jecxz
sbb
pop
jmp
mov
loop
jl
mov
out
ret
and
mov
outsl
adc
mov
ss
and
xlat
jl
jecxz
sbb
mov
arpl
pusha
in
clc
dec
test
or
dec
in
scas
jnp
cmp
mov
push
rorb
mov
inc
jl
cmp
mov
mov
mov
dec
in
adc
ficompl
mov
lods
lahf
add
shlb
cmp
mov
add
pop
mov
jle
push
aam
ljmp
pop
imul
dec
sti
adc
inc
icebp
sbb
xchg
pop
popf
je
fdivrl
stc
fistpll
mov
repnz
fisttpll
setno
aam
aad
xchg
inc
inc
enter
fimull
testl
lds
dec
push
dec
xchg
jae
xorl
sub
xor
fcoms
cmc
mov
ret
inc
inc
lcall
mov
push
cltd
inc
mov
push
in
aam
mov
int
orb
xor
hlt
lcall
or
arpl
lahf
repnz
jbe
and
pop
mov
ds
lret
jg
movsb
dec
or
les
cld
js
fsubr
jnp
push
test
mov
fisttpl
mov
arpl
jne
add
decl
jno
mov
call
lea
not
mov
push
add
arpl
mov
test
dec
mov
test
lcall
and
mov
xor
fidivrs
pop
test
cwtl
scas
jp
fisubrl
insl
push
popf
cmc
insb
mov
pop
ficoms
or
mov
pop
and
inc
cld
lods
push
sbb
shll
scas
inc
inc
rorb
mov
lods
inc
aaa
xor
push
inc
add
cli
test
cmp
addr16
dec
push
into
fwait
nop
sub
xor
or
jo
orb
or
mov
sbb
inc
rolb
fwait
jmp
std
or
jmp
out
cmc
loopne
popf
inc
aaa
pop
cmpsl
or
inc
mov
rcll
or
xor
and
adc
inc
in
fcoms
hlt
add
cmp
shrb
push
mov
pusha
and
fdivrs
adc
and
imul
xchg
xchg
cmp
adc
or
jle
ja
outsl
mov
arpl
lock
fcomp
inc
ret
imul
mov
add
mov
into
pop
and
fisubl
jp
push
jbe
insb
nop
jne
into
icebp
push
and
rcrb
mov
negl
and
pop
pop
push
mov
jl
mov
adc
aam
mov
mov
adc
es
scas
ficoms
ljmp
aad
ljmp
mov
inc
lods
sbb
stos
xchg
cmp
stc
inc
xchg
sub
js
clc
bound
test
outsb
lods
cmpsl
leave
fxtract
lea
fimuls
scas
mov
aad
aad
movsl
dec
lods
sar
fiaddl
add
sbb
sbb
out
dec
and
cmp
or
jle
inc
xor
mov
jae
out
movswl
sub
in
push
push
cmp
fs
pop
insb
enter
pusha
xorl
rorb
cmpsb
int
pop
mov
in
push
xor
popa
push
add
push
jae
mull
daa
outsl
xchg
cmp
int3
in
or
jnp
daa
cld
push
xorl
out
xchg
mov
and
dec
das
pop
insl
lret
enter
mov
mov
jnp
push
into
iret
insb
int3
jae
aas
inc
xchg
jmp
repz
testb
fisubrs
add
push
push
test
cli
mov
pushf
push
in
xor
mov
mov
sbb
ss
adc
mov
jg
std
inc
mov
movsb
aas
out
iret
in
repnz
ret
jno
stos
orl
push
fucomp
jns
mov
cmpsl
bound
bound
xlat
add
inc
jecxz
adc
or
sbb
das
filds
scas
push
push
fistpll
mov
out
mov
mov
mov
gs
mov
outsl
and
shrl
es
cmp
outsb
imul
sub
das
outsb
call
fcompl
jge
mov
adc
enter
inc
stos
jge
mov
sarl
and
xchg
inc
lret
inc
cmp
outsl
mov
jb
push
sbbl
push
ret
ja
loope
push
push
add
lea
orl
push
cmp
mov
out
push
test
rorl
adc
xchg
mov
dec
iret
push
pop
xor
js
sub
fwait
sub
xchg
pushf
cmp
sbb
lds
sub
mov
cmp
imul
push
sub
pop
out
pop
and
les
sbb
in
imul
and
clc
stos
xor
js
gs
adc
insb
cld
xor
jbe
jb
and
lret
xchg
dec
aam
popa
scas
aam
sub
inc
xchg
xor
or
or
aam
incb
push
je
fsubl
loope,pn
out
test
insl
add
sarl
icebp
sub
mov
mov
stc
mov
mov
sbb
out
jmp
pop
push
xor
mov
repnz
fcompl
add
mov
inc
arpl
push
or
gs
in
icebp
popf
inc
data16
jmp
xor
call
icebp
jae
in
jb
pop
pop
push
cld
and
jnp
inc
sub
insb
test
xlat
mov
insb
adc
repz
mov
pop
sub
bound
xchg
mov
jns
sbb
sbb
ret
dec
out
outsb
imul
cli
das
in
clc
mov
xchg
and
mov
repz
rcll
aaa
xchg
inc
dec
inc
leave
pop
jnp
int3
movsl
dec
sbb
jl
sahf
outsl
xor
jne
jns
sub
imul
stc
pop
jecxz
out
jge
and
fwait
je
mov
mov
jecxz
xor
xor
loopne
stos
dec
and
push
into
push
pushf
ret
mov
xchg
js
jge
shrb
aad
fs
adc
or
push
mov
lock
ss
cmpsb
pop
sub
cld
sub
jne
sbb
in
add
ret
cmp
sbb
push
mov
or
aad
outsl
mov
fcom
mov
adc
xchg
dec
inc
inc
fnstcw
rolb
dec
popa
movsl
mov
jnp
cmp
jge
mov
mov
ret
push
rcr
aam
xchg
sbb
mov
xchg
and
int3
dec
lret
loopne
sti
pop
and
sub
mov
and
sahf
ficoml
insb
pop
mov
icebp
cs
mov
arpl
addr16
clc
xor
mov
xor
dec
mov
push
out
test
fs
push
test
iret
inc
push
add
gs
addr16
add
lea
mov
nop
sub
mov
xorl
dec
xchg
or
clts
jae
jnp
xor
aam
fistpl
xor
jb
mov
push
sub
out
imulb
stos
push
addb
push
adc
fistpll
out
addr16
mov
faddl
fsubs
outsb
xor
push
subb
xchg
scas
mov
jmp
rcll
mov
mov
std
or
push
test
mov
xor
shlb
movsb
call
xchg
sbb
divl
addl
lret
sbb
pop
scas
mov
adc
iret
pop
mov
popa
mov
adc
icebp
fwait
jge
std
frstor
cmpsl
movl
icebp
mov
jg
bound
xchg
dec
and
shl
repz
cli
repz
xlat
imul
movsl
lret
xor
nop
mov
inc
rol
dec
pop
xchg
icebp
mov
hlt
xor
cmp
sbbl
push
aaa
jecxz
jne
jnp
lods
daa
inc
and
aaa
cmpsb
mov
popf
push
inc
sbb
loope
fdivs
iret
testb
popw
sub
insb
out
push
bound
in
mov
test
pop
dec
add
add
push
jecxz
jno
popf
inc
add
test
cltd
daa
dec
or
test
xchg
mov
outsl
aaa
cmp
xlat
sbb
das
mov
or
lds
jbe
jo
insl
xchg
outsl
or
cs
and
mov
ret
pop
pop
jp
test
fildll
repz
add
xchg
xor
mov
daa
mov
jnp
dec
pop
cmc
and
dec
push
lahf
and
sub
xchg
loopne
je
add
sub
fisubrs
sti
aam
mov
and
pop
out
icebp
sbb
and
cwtl
jl
daa
fisubs
mov
cmpsl
xor
loopne
clc
lret
lea
dec
cmp
sub
cs
inc
test
dec
mov
mov
stos
mov
and
sbb
pop
out
call
mov
or
xor
sbb
adc
sub
jmp
pusha
or
lret
sbb
mov
ss
inc
xchg
pop
outsl
dec
nop
sub
subl
fwait
icebp
orl
popf
inc
sbb
jge
or
sub
lock
sbb
pop
pop
aam
xchg
add
pushf
je
ja
scas
mov
pop
mov
adc
lret
in
fsts
cmpsl
fstpl
out
mov
xchg
repnz
mov
scas
cmp
xor
and
mov
pop
and
lcall
xchg
mov
out
dec
stos
mov
gs
fnstsw
popf
in
fistpll
push
insl
add
lret
hlt
pusha
cmp
test
cmp
lea
xchg
xor
movsb
ja
mov
adc
push
mov
insl
outsb
lods
repnz
jg
outsb
xchg
xor
hlt
lret
sbb
cmp
jno
in
int3
orb
jns
mov
add
add
loop
aaa
sbb
jmp
xchg
js
mov
cli
adc
int
or
pop
lret
pop
push
data16
jmp
stos
mov
or
sbb
dec
xchg
lock
and
dec
rclb
lcall
push
xor
shlb
movsb
pop
xchg
shll
add
adc
lods
mov
pop
pushf
jp
out
sub
pop
jno
popf
aad
in
in
jle
cld
fmull
mov
shll
mov
pusha
fnsave
test
push
mov
fs
sub
mov
pop
cmp
inc
enter
jo
xchg
enter
es
arpl
adc
mov
je
xor
mov
scas
xlat
lea
test
imul
loope
inc
loopne
xor
sbb
frstor
push
pop
xchg
divb
cs
cmp
je
jge
rcr
cmpsb
xchg
push
ds
outsl
movaps
popf
xchg
push
pop
push
jnp
mov
cmp
in
mov
jl
cmpl
pop
push
mov
out
xchg
stos
mov
pushf
pop
popa
insl
aam
cmpsl
adc
pop
aas
sub
pusha
enter
dec
sub
dec
xor
iret
sbb
sub
xchg
pop
repnz
shl
cld
les
push
cs
mov
pop
jle
scas
in
mov
xor
mov
mov
adc
in
mov
add
test
subb
divl
push
cmp
jge
test
aam
push
sbb
stc
dec
stos
xchg
push
push
xor
adc
mov
popf
sub
les
arpl
aaa
iret
xlat
movsl
inc
inc
fwait
sub
stos
lret
or
and
lret
sbb
icebp
cmp
jecxz
in
fidivs
movsb
push
dec
pop
cmc
lret
shll
push
shrb
fidivs
mov
popf
divb
push
fcmovb
sub
lahf
add
dec
jbe
jne
ss
sarb
mov
and
jno
xchg
cmpsb
push
push
sub
push
or
in
mov
pop
cmp
mov
ja
fidivs
adc
jmp
xchg
arpl
sub
xchg
dec
mov
lahf
out
lahf
xchg
cmpsl
ja
repz
out
mov
mov
arpl
inc
das
out
or
adcl
adc
fnstsw
sub
in
cltd
out
into
add
scas
movb
pop
push
mov
pop
inc
pop
mov
push
jb
and
pusha
enter
cmp
pop
or
andl
mov
sti
jo
jo
mov
jb
mov
and
andl
cmc
push
jecxz
mov
ret
or
std
rclb
cld
jl
ss
inc
or
nop
cmc
into
xorl
mov
dec
pop
push
inc
icebp
inc
jl
cmpsb
in
loopne
xor
enter
out
int3
imul
jmp
xchg
js
fmull
clc
aad
sbb
pop
and
cmp
shl
cmp
xor
xlat
adc
int
add
int
push
cvtps2pd
pop
inc
jg
mov
fs
dec
enter
push
xlat
mov
ds
mov
xor
xor
add
pusha
pushf
les
lahf
jp
jne
scas
repnz
xor
lods
and
scas
shlb
and
xor
leave
push
loope
jno
jo
iret
mov
inc
imul
cmpsl
and
and
shrb
xor
fldenv
jns
data16
aad
mov
mov
cld
push
dec
mov
fsub
or
pop
aad
js
testl
mov
xchg
cs
divb
add
xor
arpl
adc
sbb
iret
adc
xor
inc
loopne
out
xor
hlt
test
lahf
inc
sbb
pop
ja
pop
mov
push
iret
out
xor
bound
inc
andl
fstpl
sti
fwait
data16
rcll
outsb
dec
repz
jge
jmp
push
add
jb
xor
pushf
pop
jae
xchg
mov
ret
repz
dec
jns
mov
cli
loope
xchg
xor
mov
imul
insl
and
in
mov
xor
dec
mov
daa
jmp
and
dec
js
jns
jb
push
or
pop
jbe
xor
sbb
je
push
push
out
dec
mov
xchg
mov
out
test
rolb
scas
xor
imul
lods
mov
arpl
es
gs
cmp
push
cmp
shll
loope
fs
data16
pop
stos
add
gs
mov
repnz
mov
push
cwtl
xor
dec
int
std
dec
inc
es
ret
stc
inc
ja
sbb
mov
jns
jae
icebp
push
and
jb
pop
lods
jmp
cmp
jns
push
mov
or
cmp
inc
mov
cmp
xchg
adc
pop
pop
or
sub
cmp
outsl
rclb
jbe
jge
movsb
dec
ret
jle
scas
sbb
jle
cmp
xchg
pop
cmc
jnp
and
lahf
cmp
dec
pop
cmpsl
add
int
inc
outsb
loop
stos
dec
ret
push
and
or
les
popf
xchg
mov
outsl
add
mov
cmp
not
out
pop
xchg
xchg
imull
sub
xchg
in
popf
push
orl
adc
inc
cmp
mov
push
lcall
pop
js
xchg
push
jno
scas
or
fadds
pop
mov
in
mov
add
jecxz
cmp
mov
mov
test
inc
jmp
rorl
mov
clc
loop
movsl
jg
aas
dec
outsl
dec
in
lret
adc
cmp
out
fadds
popf
mov
fcoms
sbb
pop
and
mov
aam
push
cs
inc
mov
shlb
xchg
loop
pop
dec
fcmovb
jno
gs
cmp
jno
rcr
sbb
aas
adc
dec
pop
add
jg
fistps
je
sub
addr16
and
mov
push
sub
mov
clc
sub
fsubrs
out
and
push
pop
cmpsl
cmp
fistpll
adc
popf
jnp
add
jecxz
lea
idiv
fistps
movsl
shlb
ja
shrb
cmp
jnp
ret
movsl
xchg
mov
lea
mov
dec
cmpsl
sub
cmpsl
sub
inc
imul
push
rclb
jae
mov
repz
jne
movsb
push
test
sbb
sub
aas
imul
icebp
lds
dec
and
enter
out
ljmp
mov
lds
jecxz
xchg
hlt
popa
imul
popa
fdivr
stos
push
adc
inc
adc
int3
jmp
mov
sub
inc
pop
and
in
adc
mov
mov
shrl
adc
sub
sub
fucomp
fsubrl
repnz
iret
lcall
inc
aaa
jg
xor
loop
jae
pop
ret
lret
cltd
mov
jp
xchg
mov
popa
push
xor
mov
out
inc
add
out
mov
imul
fimull
push
std
lds
dec
cld
add
or
mov
push
sub
jns
or
sarb
add
cmpl
xchg
add
sub
pushf
jbe
mov
jb
xor
dec
ret
or
add
iret
sti
popa
sbb
cmp
test
stos
mov
or
jae
pusha
and
sub
insl
fbstp
cmc
sbb
fwait
jmp
mov
xchg
stc
add
test
push
out
rcll
incb
scas
fstps
push
cs
mov
out
cmc
shlb
aas
mov
pop
imul
jno
adc
scas
in
data16
sahf
dec
sub
mulb
int3
push
pop
sub
xchg
sbb
pop
jp
push
repz
lods
les
xlat
pusha
jp
xchg
push
stos
cmp
jnp
cmp
lret
in
xor
test
ret
arpl
notl
lret
push
or
and
sbb
adc
cmpsl
push
jae
mov
ds
aaa
xchg
outsw
xor
pop
pop
ja
xchg
lcall
ljmp
add
sbb
mov
pusha
stc
sahf
lods
arpl
push
stos
jmp
push
stos
rorb
lret
pop
pop
sbb
add
std
pop
and
jge
cmp
push
sbb
out
insb
bound
jge
jne
push
mov
add
test
orl
xlat
mov
rcrl
inc
mov
pusha
mov
xchg
pop
movsl
bound
cmp
fmuls
mov
stc
test
cmc
push
sahf
fsubr
test
inc
call
adc
cmpsb
push
mov
roll
pushf
xorb
inc
pop
pop
jo
mov
xchg
xchg
jp
jo
jge
adc
mov
test
or
sub
aam
nop
pop
fcomps
hlt
xor
call
dec
pusha
jne
cmc
xlat
arpl
gs
lret
or
mov
push
xor
push
scas
jle
sub
fwait
mov
pop
xchg
int
cs
cmp
jns
sub
std
push
jae
xchg
aas
and
aad
mov
cmp
add
cmc
loop
jl
xchg
inc
xchg
xlat
fcoms
mov
ret
cwtl
lret
push
test
mov
xchg
or
movsl
or
mov
cmp
sbb
fsubrl
stos
push
mov
jae
test
cmc
lret
lods
add
or
loop
mov
mov
das
stos
fisttpll
int
filds
cmpsl
ret
call
adc
cmc
adc
push
lock
cmpsl
sahf
shll
dec
test
fcmovne
or
mov
push
and
mov
mov
addr16
push
mov
jge
jne
lds
mov
xor
mov
repz
and
or
bnd
push
xor
in
pop
cmp
cmp
testl
lret
sbb
pcmpgtw
add
adc
cmp
mov
jo
pop
sarl
int
std
mov
scas
and
dec
xorl
sahf
jno
lods
or
xlat
mov
push
mov
adc
shr
add
insl
mov
adc
jae
cs
mov
xchg
dec
xchg
jnp
test
add
leave
sti
jl
scas
and
icebp
sub
mov
inc
mov
ds
xchg
movsb
aad
mov
orl
rcl
xchg
aam
dec
aad
pop
dec
mov
mov
jecxz
enter
pop
loopne
lock
movsb
mov
dec
cmc
cs
mov
pop
je
les
loopne
sub
ja
mov
rorl
pop
mov
fs
mov
jle
stc
pop
add
xchg
scas
mov
mov
rcrl
adc
inc
sbb
mov
mov
sbb
fwait
add
flds
nop
and
sbb
pop
rcll
and
insb
pop
popa
mov
cli
and
mov
or
divb
test
lret
fisttpl
cmp
rcr
rcl
push
mov
jae
mov
sbb
dec
clc
cmpsb
fs
mov
out
hlt
mov
movsb
cmc
dec
xchg
inc
addl
jmp
add
popf
sbb
mov
int3
lock
neg
adc
add
dec
or
cmc
inc
daa
mov
out
inc
shll
jne
outsl
jae
jp
jne
pop
pavgw
push
and
cmp
int3
inc
outsb
cmp
mov
xchg
dec
lahf
sahf
verw
sbb
jecxz
pop
cmp
clc
leave
and
cmp
sub
xor
fisubs
ja
scas
push
fdivr
cld
lret
mov
cld
jb
ret
adcb
outsl
inc
mov
xor
push
xor
js
out
or
mov
ret
pop
cs
popf
adc
arpl
dec
loop
dec
cmc
inc
fimuls
add
mov
bound
addps
ret
arpl
mov
cmp
or
pop
add
pop
mov
xor
lret
scas
jmp
shll
lret
inc
negb
lods
jle
push
andb
dec
sbb
pop
inc
pop
das
sti
mov
idivb
enter
mov
movsl
cmpsb
in
xor
inc
jle
push
sbb
ss
fidivrl
rorl
lods
add
out
enter
sbb
test
call
pop
stc
push
mov
jmp
sub
xor
and
mov
cmp
xor
mov
int
cmp
stos
cmc
xchg
sub
jl
mov
out
std
rcr
stc
cmp
movsl
jle
or
scas
icebp
loope
dec
jnp
and
push
jmp
or
add
mov
lahf
repnz
or
xchg
xchg
adc
test
sti
cwtl
scas
xchg
stc
popa
hlt
aam
xlat
and
xor
jle
fiadds
shl
mov
jno
adc
in
sub
ficoml
jmp
cmp
fidivrl
stos
mov
das
mov
jae
lea
push
inc
aas
push
or
arpl
cld
and
je
scas
lcall
push
dec
enter
cmp
in
mov
cmp
outsl
insb
rorb
adc
mov
mov
enter
dec
movsb
push
cmpsl
mov
ret
inc
es
mov
movsl
cmp
jo
jp
loope
scas
adc
pop
mov
es
adc
jo
or
test
int
movups
int
in
cltd
cmp
fstpt
push
dec
and
sbb
shrl
mov
movsl
cmp
jl
xor
cli
stos
mov
push
call
mov
inc
push
xchg
push
sahf
nop
fwait
insl
dec
and
stos
jmp
out
jae
daa
adc
sarl
stc
xchg
xchg
sbb
sbb
cmp
clc
sbb
push
roll
and
mov
movsl
out
push
mov
mov
inc
arpl
push
adcb
test
mov
dec
in
and
test
test
jecxz
mov
into
pop
pop
and
lcall
cmc
aad
sti
shr
pop
dec
mov
pop
push
fsubs
ret
orb
mov
repnz
dec
pop
out
rcl
stc
push
icebp
mov
mov
jno
int3
adc
jge
xlat
fwait
mov
mov
sub
ja
aaa
inc
push
aad
push
mov
lods
test
aaa
pushf
inc
in
mov
push
ror
iret
lock
mov
push
dec
hlt
es
adc
loope
sbb
and
aad
in
call
sbb
in
cmp
and
cmpsb
aas
sbb
ljmp
jb
inc
insl
icebp
xchg
dec
mov
scas
mov
mov
call
mov
fwait
mov
dec
hlt
push
lea
test
cwtl
adc
cmp
outsb
imul
sub
add
mov
and
lahf
xchg
mov
sub
fwait
out
mov
push
mov
adc
aas
into
jp,pn
sbb
test
jp
xchg
test
mov
xor
repz
cmp
pop
sub
xor
mov
push
dec
in
pop
cmp
mov
dec
dec
int
notb
inc
mov
daa
repnz
dec
sub
gs
sub
inc
data16
push
add
popa
es
mov
shlb
xchg
cmp
test
jg
xlat
ljmp
ja
dec
paddsb
cld
imul
inc
daa
fsubr
jl
fcoml
movsb
pushf
adc
bound
in
or
mov
jecxz
shl
cmpb
and
mov
sub
sarb
mov
stos
xor
in
xor
mov
xor
pop
aas
scas
xchg
ljmp
insl
into
and
inc
jp
aad
loop
lret
push
icebp
xor
das
inc
and
rcr
inc
mov
adc
enter
loopne
in
ret
fs
out
dec
imul
adcb
cwtl
test
arpl
shlb
stos
sub
mov
and
shll
dec
dec
rol
into
sub
pop
dec
mov
lahf
imul
inc
push
shlb
cld
addl
test
sub
inc
das
push
lahf
pop
adc
adcl
cmp
cmp
dec
bound
or
out
jmp
ds
xor
out
andb
repnz
push
mov
sarl
mov
cmpsb
xchg
pop
fwait
push
add
inc
adc
mov
mov
xor
gs
subl
sub
fldln2
jo
in
dec
bound
xor
sbb
push
sbb
iret
stos
ror
jg
add
xchg
lret
push
cs
cmp
and
xchg
and
cld
divb
sahf
or
mov
movsb
push
inc
jmp
xorb
dec
shrl
mov
popa
jae
jmp
mov
or
lea
shlb
inc
repz
fdivs
jge
mov
xor
ljmp
and
mov
dec
jnp
push
gs
dec
shll
out
fisttpl
sub
out
in
cld
adc
pop
mov
fwait
xorb
jns
stos
test
jb
lea
sbb
mov
xchg
movsl
andb
mov
ja
cmc
pop
inc
jmpw
and
add
push
mov
call
iret
pop
aas
and
aam
adc
adc
enter
or
cmp
xlat
std
stos
scas
or
shll
xor
mov
iret
cmpsl
int
add
pop
and
mov
push
shr
decl
sub
lahf
mov
out
out
inc
mov
mov
pop
lods
xchg
jo
adc
mov
fstl
pop
mov
les
mov
xchg
bndstx
mov
pop
addb
mov
lea
dec
add
test
dec
addl
pop
and
fsubl
stos
in
mov
loope
xchg
out
dec
xor
ror
cmova
inc
lret
bound
jno
jmp
xchg
dec
mov
jmp
loopne
jg
xor
pop
dec
inc
xchg
lods
js
addr16
inc
loope
mov
sahf
pop
in
mov
cmp
roll
rcrl
enter
repz
xchg
daa
popf
ds
pop
push
cltd
iret
and
lcall
fiadds
ret
dec
mov
sub
jb
inc
je
sub
out
aad
orb
cmp
lahf
das
sub
or
pushf
jmp
xchg
test
sbb
jl
in
dec
sti
lds
in
call
sbb
lock
sbb
jbe
fildl
mov
icebp
mov
out
pop
aam
mov
add
dec
lds
test
stc
dec
jmp
inc
sbb
nop
fimuls
add
pop
int
cmpb
mov
out
push
insb
loopne
fwait
mov
insl
aaa
xchg
movsb
ds
jns
xor
clc
rcrb
mov
ret
stos
outsl
jp
int
imul
loop
mov
dec
sbb
or
loope
das
inc
pop
xor
daa
mov
leave
jne
fcomi
jecxz
jle
mov
ja
or
mov
hlt
jecxz
add
test
push
inc
lahf
aas
repnz
das
inc
xchg
fisubrs
add
test
lret
aaa
mov
jecxz
cmpl
lret
out
add
jmp
add
fsubs
mov
inc
inc
addl
or
pop
mov
xchg
and
cmp
imul
dec
and
push
sbb
sar
cmp
lahf
ret
ret
loopne
ss
mov
cmp
out
mov
cmc
mov
cmc
testl
add
cmp
pushf
rcll
cltd
test
ljmp
repz
and
clc
pop
dec
rcl
xor
jnp
insb
fistps
dec
sbb
shlb
xchg
lods
fiadds
mov
shlb
pop
sbb
inc
fists
pop
mov
jae
mov
add
int3
shlb
sub
lcall
icebp
mov
leave
jg
in
add
std
sub
jbe
cmpsb
and
das
inc
lods
movsl
aaa
mov
mov
mov
push
dec
push
les
lret
xorl
cmp
and
xor
es
lods
mov
mov
dec
inc
fs
stc
lahf
pushw
sti
jnp
imul
pop
inc
aaa
push
stos
jmp
outsb
xchg
repnz
loopne
sbb
jne
int3
mov
push
push
add
fsubrs
cmp
pop
dec
add
inc
sbb
je
int3
jne
sbb
sbb
xor
std
inc
pop
pop
out
pop
mov
lret
mov
push
cmp
push
jne
in
cmp
dec
ret
nop
mov
jbe
push
jmp
dec
pop
inc
jb
push
das
bound
xchg
sbb
sub
dec
cmp
outsb
cmp
push
adc
orb
cmp
movsl
inc
outsl
out
scas
xor
fisubrs
pop
mov
mov
xor
push
out
movsl
sub
jns
cltd
imull
rorb
fwait
je
pop
jb
mov
mov
movsl
inc
out
jno
test
pusha
or
jns
mov
cmp
jle
dec
dec
clc
mov
test
fisttpl
ffree
push
lahf
jnp
mov
test
xchg
insb
push
iret
js
mov
bound
add
adc
or
dec
xlat
fwait
mov
xchg
or
in
mov
dec
out
ja
in
aas
out
cli
icebp
ret
scas
sti
dec
ja
pop
or
int3
push
jb
add
xchg
adc
add
inc
sub
jmp
shrb
dec
mov
mov
mov
cmp
mov
push
jecxz
test
cmpsl
pop
pop
clc
outsb
stos
in
jnp
inc
loopne
stc
test
rol
lock
pushf
lret
sbb
aas
mov
and
xchg
in
cld
xor
pop
test
arpl
mov
int
jb
push
and
out
jno
or
adc
xchg
jmp
pop
decb
push
pop
xchg
addl
add
fldcw
add
mov
out
outsl
out
mov
cmpsb
and
sbb
xor
adc
xor
jne
je
fstpt
add
xor
xlat
scas
xchg
scas
ss
mov
or
lea
mov
pop
dec
cmp
iret
push
adc
lods
pushf
dec
sbb
popf
jo
gs
sub
cmp
test
add
ss
ret
mov
push
jmp
xchg
push
fcompp
cmp
in
mov
cmc
jne
mov
push
sub
aam
cwtl
loop
mov
test
mov
pop
into
insb
mov
fcomps
stc
sarb
sub
mov
add
pop
push
sarl
mov
sbb
sbb
repnz
ja
lret
fistpl
push
sbb
xchg
and
xor
xchg
mov
xor
or
add
mov
idivl
adc
cld
mov
imul
push
xchg
fwait
mov
pop
into
iret
adc
fadds
sbb
fidivs
sbb
pop
fnstsw
std
sbb
cmpsl
lret
or
ljmp
icebp
cmp
sub
popf
push
fildl
notl
test
jb
dec
repz
imull
xor
pop
push
pop
repnz
pop
sti
fisubrl
scas
jmp
out
fildl
sbb
mov
jns
iretw
call
jno
xor
repz
dec
xchg
xchg
xchg
je
loop
fs
cmpsb
popa
adc
out
xlat
or
test
dec
aad
movsb
les
mov
add
inc
mov
fstl
and
mov
ljmp
loopne
addr16
sti
stos
fistpll
jl
push
std
mov
out
dec
mov
jge
xchg
lret
add
fcoms
aad
cmp
adc
ror
jg
jge
ja
mov
sbbl
ja
mov
lret
loopne
and
fnstenv
aas
push
movsl
negb
jmp
jp
imul
push
or
cmp
arpl
call
jae
mov
mov
cmc
jp
pop
sbb
shrl
pop
in
lods
in
jmp
outsb
xor
scas
lods
ret
bound
shlb
cmp
sti
fwait
push
sub
dec
xor
lret
mov
mov
insb
fisubl
out
lods
pop
iret
adc
test
dec
test
mov
cs
pop
sub
push
jecxz
arpl
push
push
or
outsb
dec
jne
pop
push
dec
rclb
jne
push
ds
int
push
xchg
mov
or
dec
cmpsb
push
inc
mov
shrb
aaa
push
rorl
shr
xchg
lret
xchg
addr16
scas
push
pop
daa
shlb
dec
out
imul
lds
popw
push
inc
iret
aaa
mov
push
add
adc
aad
hlt
fwait
push
hlt
mov
gs
addl
ljmp
idivb
test
xlat
ds
pop
js
popf
scas
pop
jl
movsl
loopne
jl
xor
and
je
jecxz
and
int
mov
pop
inc
pop
cs
jbe
daa
cmp
sarb
subb
cmp
xor
idivl
mov
movsb
outsb
push
in
pop
fchs
je
pop
xor
push
cmc
bound
adc
fs
xor
jo
adcb
cmp
pop
out
dec
pop
in
lret
sar
shlb
rol
sbb
xchg
pushf
mov
inc
cld
jecxz
push
lds
dec
test
stc
stos
add
fists
les
das
fidivrs
popf
test
add
jne
pusha
xchg
sbb
test
or
adc
in
cmpsb
cmp
inc
aaa
imul
in
pop
mov
push
lock
mov
push
mov
cmp
fcoms
ds
pop
movsl
loopne
pop
scas
in
mov
cmp
add
insl
cmp
iret
or
les
ds
repnz
pop
cltd
xchg
mov
in
cli
jg
cltd
jae
cmp
fistl
mov
aam
mov
mov
and
adc
jmp
loope
ss
cltd
loop
pop
sahf
or
cmp
xor
repz
mov
or
imul
fidivs
lods
add
mov
dec
xchg
push
or
mov
and
movb
out
inc
in
cmpsb
xor
sub
mov
lock
mov
pop
int
adc
inc
iret
fwait
dec
popa
mov
push
push
les
mov
xor
and
xchg
loopne
add
xchg
sbb
leave
cltd
pop
enter
scas
and
add
sarb
in
loop
xor
sbb
popf
add
sub
mov
insb
push
inc
mov
mov
arpl
sbb
out
out
xor
jmp
mov
xor
out
or
hlt
mov
les
adcl
mov
and
add
leave
mov
add
mov
jl
jbe
inc
mov
xor
inc
pop
aam
mov
xchg
mull
jo
ret
mov
ss
ret
pop
mov
xchg
pop
loopne
mov
xlat
movsl
dec
test
dec
fcmovnbe
mov
sti
je
jecxz
lcall
in
ds
sbb
or
fs
jo
pop
arpl
mov
sub
jns
mov
mov
cld
mov
cmc
cmc
xchg
sub
clc
add
popa
xchg
adc
jo
es
mov
test
fcoms
xchg
ds
test
adc
cmp
test
fsubrs
dec
jae
enter
adc
or
sub
mov
jns
jge
clc
dec
dec
es
adc
jno
xchg
mov
imul
xchg
jecxz
sub
mov
aaa
push
imul
gs
and
sub
push
hlt
or
xchg
mov
push
fcompp
clc
outsl
jbe
xchg
dec
xchg
sbb
adc
dec
mov
shrb
jge
jae
mov
cmp
dec
push
andl
mov
rolb
ja
mov
mov
mov
mov
sub
icebp
test
rcll
js
cmp
mov
movsb
es
or
mov
cmc
or
cmpsb
push
jae
xchg
cmp
insb
mov
imul
mov
mov
and
mov
fldl2e
movsb
sub
fmuls
outsl
pop
test
vsqrtps
iret
xchg
rcll
mov
aaa
mov
and
jg
aam
or
xchg
inc
xor
sub
sub
mov
push
shlb
mov
push
cmp
xchg
scas
cli
inc
pop
mov
push
sub
outsb
scas
cmpsb
xchg
jp
adc
in
jb
mov
out
popa
sbb
aam
dec
call
lods
jle
add
sbb
adc
mov
adc
push
xchg
enter
ficoms
add
outsb
clc
pushf
mov
icebp
mov
lea
pop
mov
mov
int3
shlb
sub
dec
data16
inc
jecxz
jp
nop
fcomi
aas
pop
mov
sbb
pop
dec
nop
xor
not
jns
in
push
outsl
jl
push
push
jle
jae
add
xlat
sbbl
ret
mov
loope
test
jae
repz
adc
sub
mov
push
outsb
adc
scas
push
inc
lret
mov
jno
ds
inc
cmp
cld
jne
dec
adc
nop
leave
sub
sbb
das
mov
psllw
js
cmp
test
add
lock
mov
inc
sbb
test
xor
pop
movsl
jo,pt
sbb
pop
push
cld
inc
push
rclb
es
ss
lods
sbb
jb
mov
lret
popf
dec
cmp
insl
nop
iret
lods
test
mov
cmpl
mov
outsl
ss
lahf
movlhps
mov
adc
sbb
dec
push
fidivrs
pop
jmp
ror
dec
je
add
sub
cmpl
icebp
loope
in
sbb
dec
dec
jmp
daa
dec
aad
addb
out
jg
bound
adc
push
lret
into
inc
ljmp
fwait
pusha
cmp
enter
add
dec
int
outsl
in
lret
stc
js
jb
or
cmc
out
sti
dec
test
adc
ret
sub
pusha
loop
outsl
es
ljmp
dec
dec
pop
mov
adc
pusha
push
ret
push
cmpsb
mov
sbb
xor
int
and
outsb
dec
push
mov
test
push
xchg
jg
mov
ror
push
imull
pop
sub
repnz
pop
aas
nop
jne
jg
push
xor
movl
movsb
pop
xor
sbb
inc
xchg
out
lahf
test
shll
xchg
fs
stos
outsb
xor
mov
xor
imul
adc
int
out
mov
add
addr16
push
andl
imul
mov
ds
aad
imul
fbld
sub
add
leave
cmp
loope
stos
push
push
imul
inc
cld
pop
dec
ljmp
inc
and
scas
dec
push
jmp
stc
or
inc
mov
pop
scas
dec
addr16
xchg
xchg
aam
ret
push
xchg
mov
or
jne
mov
mov
lods
mov
lcall
nop
jae
xchg
aad
or
inc
rcll
mov
sub
fs
cmc
push
mov
sub
ja
push
aaa
int
and
fcompl
or
jmp
cli
test
loop
push
adc
in
ficoms
sahf
bnd
push
addr16
jno
popf
pop
xchg
mov
push
dec
mov
mulps
jne
xor
dec
rcr
cmp
mov
cmp
scas
add
sbb
into
or
push
mov
fdivp
cltd
lret
xchg
ret
aam
push
lock
cmp
dec
movsb
iret
cs
testl
add
xchg
mov
mov
pop
sub
xor
sbb
sbb
iret
and
jns
adc
leave
dec
or
ret
data16
or
or
loopne
xchg
add
pop
data16
aas
aam
jp
or
data16
pop
cmp
test
clc
aam
das
and
push
push
mov
adc
test
xchg
loope
aas
sbb
outsl
xor
adc
test
outsl
in
js
push
mul
add
lock
adc
mov
inc
or
add
push
pop
pushf
sub
and
jne
lahf
cmp
arpl
enter
mov
stos
jb
nop
loopne
xchg
int3
adc
scas
xor
fsubrs
xchg
add
adc
daa
jecxz
cmpsb
dec
pop
in
es
sbb
sub
pop
xchg
jbe
into
or
in
mov
lret
int
sub
imul
push
xor
pop
hlt
mov
call
leave
cwtl
popa
bnd
jle
stos
xlat
sbbl
pshufw
je
icebp
pushw
call
psllq
movsb
inc
fildl
fs
fsubl
divl
test
jns
inc
pop
or
inc
or
mov
adc
loopne
int3
inc
dec
mov
in
idivb
pop
test
jmp
xor
cmp
ret
jmp
mov
mov
add
and
cmpsl
sbb
xchg
sti
out
jns
cwtl
scas
dec
and
popf
inc
aaa
mov
por
iret
mov
jbe
fwait
and
pop
loopne
ja
out
mov
jo
pop
pop
adc
call
in
sar
push
fwait
rcll
mov
int3
adc
mov
adc
fadds
add
fiadds
push
or
mov
lea
sub
out
lret
cmp
mov
fisubs
repnz
repnz
mov
in
and
mov
rorb
ficompl
into
lods
sbb
adc
inc
shll
cmp
ret
mov
push
lock
mov
inc
jmp
mov
out
popf
insb
addr16
xchg
inc
inc
mov
inc
sahf
iret
ret
push
movsb
adc
pop
mov
int
mov
aas
mov
imul
sub
mov
call
adc
ds
xchg
mov
mov
icebp
nop
std
out
imul
sbb
jmp
in
btl
push
sub
xor
leave
add
pop
popa
dec
es
inc
fwait
mov
and
fmull
popf
push
sbb
outsl
pop
push
and
stc
icebp
outsb
leave
xchg
add
push
pushf
pop
mov
ss
pusha
dec
sbb
lods
dec
xchg
loope
int3
shll
cltd
fdivl
les
ret
lret
mov
jp
jmp
lahf
pop
rcrl
jle
enter
fimull
add
mov
xlat
push
ret
add
sub
icebp
shl
xchg
inc
jge
inc
add
ficomps
sbb
mov
rclb
ja
repnz
mov
daa
mov
ja
iret
loopne
shll
adc
pop
and
push
xor
sub
sub
sub
in
jle
inc
sbb
mov
mov
jb
push
movsb
fcmovu
fs
mov
stc
ds
in
test
movsl
int
leave
cwtl
push
xchg
mov
out
pop
imul
and
mov
xor
dec
jo
mov
les
orb
aad
pop
gs
dec
and
pop
jecxz
test
mov
pusha
loopne
arpl
pushf
mov
outsl
push
adc
dec
mov
dec
out
push
sub
syscall
mov
sub
pop
in
clc
rorb
cmp
and
jbe
cld
xor
shrb
sub
mov
xor
pop
jno,pt
sbb
inc
mov
inc
xor
ja
pushf
fs
test
jecxz
shrb
sub
push
adc
lret
sub
incl
jmp
mov
mov
add
lahf
rorb
jne
cltd
lcall
mov
jmp
add
loope
mov
pop
sti
shl
sbb
inc
enter
cmpsb
pusha
popf
cmpsb
dec
pushf
ljmp
les
dec
xchg
loop
or
add
jb
lock
gs
sub
mov
or
dec
or
dec
add
movsl
pusha
or
lahf
jle
rclb
mov
push
add
inc
push
cmp
mov
sahf
push
mov
push
mov
int
gs
nop
out
sbb
stc
mov
sbb
xor
shrb
push
gs
add
and
jns
in
xchg
mov
jg
or
mov
cmp
sub
je
jg
fnstenv
pop
das
mov
push
in
cld
or
jns
add
fnstenv
adc
push
mov
int3
fidivrs
pushf
les
ds
inc
adc
ljmp
call
and
xor
xchg
sahf
adc
addr16
aaa
mov
mov
rcr
mov
xchg
mov
add
push
sbb
cwtl
mov
call
cmp
and
int3
add
mov
mov
jle
sbb
outsl
fwait
mov
in
int
jecxz
jae
aas
push
xchg
cmp
jno
int
mov
pop
negb
scas
aas
popa
adc
jnp
or
in
in
idiv
pop
jmp
cs
add
cmp
push
lahf
sbb
jnp
popf
scas
imul
add
je
mov
jle
sub
dec
rorb
sub
das
jg
jecxz
push
aaa
pop
addl
push
sub
pushl
pop
and
mov
ja
fsubrl
adcl
inc
loopne
pop
jecxz
icebp
loop
mov
adc
add
adc
add
es
cmc
push
mov
or
mov
repz
inc
scas
or
mov
fistl
in
hlt
jp
jp
lcall
aam
mov
int
adc
xor
xorl
scas
loope
test
and
fnsave
sbb
and
add
push
pop
push
aad
loopne
dec
stc
cmc
push
xchg
mov
or
ds
sub
push
jmp
cmc
jb
subl
idivb
push
adc
andl
xor
inc
cs
xor
popw
mov
cs
movsl
cmp
pop
iret
push
xlat
pop
inc
scas
lret
or
inc
call
jg
inc
pop
data16
mov
leave
arpl
test
mov
add
pop
cmpsb
imul
in
sbb
mov
cmp
loop
cwtl
push
mov
fistpl
fiaddl
cmp
shlb
and
ljmp
mov
mov
push
mov
shrb
jo
loopne
push
jle
mov
push
fcomi
loopne
and
test
daa
mov
jnp
fistl
sbb
sti
out
jbe
ret
cwtl
jg
sbb
imul
push
sub
in
in
outsl
xor
test
nop
mov
aad
cmp
inc
mov
pop
add
mov
sbb
sub
pop
jecxz
sbb
inc
js
in
stc
inc
jne
dec
enter
pop
cmp
mov
cmp
cmpsl
lcall
nop
mov
mov
push
add
push
xchg
xor
out
sub
push
pop
jmp
inc
aam
mov
daa
mov
and
pop
push
cmp
mov
mov
dec
xchg
push
lea
loop
xor
xor
pop
mov
sarl
pop
inc
pop
ficompl
jle
mov
pop
and
mov
mov
subb
xchg
loopne
in
xor
adc
pusha
sbb
cmc
int3
push
dec
xchg
mov
pop
cmp
mov
xchg
arpl
pop
jns
jbe
popf
push
push
add
into
es
arpl
jecxz
mov
adc
dec
xor
jmp
jg
mov
mov
or
and
mov
xchg
fsts
mov
mov
sub
and
inc
outsl
mov
test
fwait
mov
movsb
hlt
sbb
jnp
rep
adc
leave
cmp
dec
out
lods
jno
xchg
movl
mov
sbb
mov
jge
cmp
mulb
int
push
ret
dec
xor
data16
xchg
xor
push
pop
pop
cmpsb
push
inc
mov
dec
jmp
repnz
aad
adcb
mov
adc
xor
stos
sbb
xorb
dec
mov
xchg
nop
jo
lods
xchg
push
mov
repnz
cmpsb
jns
xchg
xchg
adcb
pop
sub
mov
cwtl
and
mov
es
pop
aas
dec
jp
lock
push
cmp
mov
dec
fwait
sahf
data16
jns
addl
mov
test
pop
cmp
test
lret
cltd
add
cmc
out
push
ljmp
std
push
leave
xlat
inc
add
pop
fnsave
insb
push
sbb
mov
mov
mov
shr
xchg
xchg
adc
vandnps
pop
sub
mov
push
adcb
in
pop
cmp
xacquire
jle
mov
adc
addr16
popa
adc
loop
and
xchg
lcall
sbb
jne
jle
ficompl
and
js
xor
add
dec
jbe
cmp
lret
aad
out
dec
in
call
bound
mov
ljmp
mov
bnd
or
cmp
or
fisttpll
movsb
sbb
cmp
xlat
adc
test
mov
ss
in
lcall
ja
shrb
hlt
aas
cmp
aaa
dec
cmp
pop
sti
or
std
fmuls
mov
fisubrl
test
xorb
sub
jae
imulb
add
test
out
jmp
insl
loopne
mov
xor
insl
dec
dec
fisubl
mov
test
test
cmp
add
jbe
ss
jno
out
cmpsb
ret
cmp
jl
cmp
cltd
dec
xor
in
cld
aad
in
incl
mov
jo
scas
shlb
stc
dec
inc
cmp
jnp
movsl
pop
clc
xor
iret
int3
cmpsb
and
push
out
pusha
xchg
fsubr
and
inc
sbb
and
lds
popf
add
adc
nop
xlat
stos
and
adc
scas
rorb
mov
pop
sbb
mov
push
std
fisubrs
adc
mov
xorl
sbb
mov
aas
inc
subb
pop
sub
lret
push
in
mov
mov
mov
int3
adc
mov
pop
dec
dec
pop
mov
or
xchg
repnz
push
ds
rcrb
aaa
clc
xor
inc
cmpsb
movsl
mov
pop
scas
sub
out
rorl
sbb
or
pop
mov
inc
adc
test
mov
and
je
sar
dec
push
xchg
adcb
inc
push
fdivrl
inc
and
xor
push
shrl
jmp
in
decl
pop
inc
add
pop
sti
icebp
arpl
sbb
outsl
outsl
or
jmp
scas
sbb
int
fldt
pop
lea
push
inc
cmp
xor
mov
push
sbb
repnz
fstl
jns
ffreep
pusha
arpl
xchg
jmp
inc
sbb
pop
mov
and
and
mov
mov
nop
ja
jo
idiv
mov
leave
ljmp
push
test
xchg
fdivrs
add
ret
aad
fldenv
iret
mov
mulb
or
testl
pop
out
hlt
in
and
rcrb
mov
sar
pop
mov
add
pushf
dec
fbstp
inc
cld
mov
outsb
cmpsb
sbb
lret
pop
es
xor
sarb
or
cmp
loop
ja
cmp
push
push
xor
jbe
pop
or
inc
gs
lock
and
mov
add
add
leave
ss
fistl
outsl
sbb
xor
sub
shlb
mov
sbb
pop
mov
insb
nop
daa
std
sub
xchg
add
cltd
push
xchg
negl
int
xor
fs
and
fcoms
enter
adc
ss
ja
cld
dec
loopne
in
lahf
dec
insl
and
push
mov
push
xchg
push
leave
dec
das
movsb
sbb
jge
sbb
xchg
dec
pop
lods
adc
mov
xchg
fcomi
push
fnsave
push
mov
call
sarb
jb
xor
dec
hlt
sbb
push
add
dec
xchg
xor
cmc
add
pusha
mov
add
push
push
outsb
pop
addb
mov
lock
popa
ficoms
repnz
fs
scas
popf
cmp
clc
jbe
inc
jge
cltd
incl
mov
addr16
jl
lods
or
shlb
xor
add
sub
or
lods
pop
rorb
ds
jbe
ljmp
lods
lods
jp
and
imul
aad
in
movb
sti
and
and
aaa
es
in
jne
in
mov
mov
push
fcmovnu
cmpsb
ret
and
add
iret
cmp
push
mov
mov
sbb
add
sahf
push
adc
pop
clc
mov
xchg
call
push
mov
in
xor
xchg
sbbb
jmp
mov
movsb
adc
in
push
scas
cmp
repz
clc
movsl
mov
jns
mov
or
sbb
mov
sar
mov
push
adc
ja
ret
xlat
pop
loope
xor
lahf
notl
rcll
rorb
outsl
and
mov
divl
mov
jmp
xchg
ja
push
push
test
xor
sbb
and
data16
rol
test
xlat
pop
test
fdivp
cmpsl
or
aaa
lea
mov
push
mov
sbb
cmp
fisubs
xchg
jb
add
hlt
mov
insb
mov
nop
add
cwtl
aaa
push
jle
loopne
les
mov
rolb
insb
dec
sbb
cmpsl
je
andnps
add
pop
dec
loopne
mov
cli
cwtl
pop
dec
into
gs
mov
pushf
mov
dec
add
in
pop
cmp
orl
add
adc
mov
jmp
sub
ret
into
and
dec
sti
and
sub
or
jp
pop
inc
xchg
jp
icebp
inc
fcoms
sbb
push
bound
addb
int
addl
xor
cwtl
mov
mov
fadd
aas
mov
popa
jo
sub
lds
mov
mov
scas
clc
imul
push
pop
sbb
xchg
sbb
pop
cmpsl
dec
rcrb
cld
mov
imul
sbb
mov
call
enter
pop
dec
xor
pop
push
movsb
sbbb
mov
mov
or
mov
iret
mov
imul
xchg
mov
aas
add
stos
sub
push
inc
xchg
jmp
cmp
sqrtps
push
push
frstor
test
push
sub
aam
inc
in
int
inc
add
xor
bound
push
fildll
add
divl
xchg
mov
leave
testb
hlt
jmp
adc
sbb
mov
mov
lods
fsubl
mov
outsb
jns
in
xlat
mov
fs
mov
jbe
mov
mov
jno
add
ret
out
jno
mov
pop
inc
add
jnp
fdivrs
xlat
mov
and
dec
xchg
adc
cmp
roll
sbb
shrl
lcall
mov
lahf
adc
jnp
addr16
mov
pop
outsb
and
stos
dec
ja
pop
mov
jo
sbb
inc
and
mov
pop
sti
dec
pop
jnp
pop
ror
xorl
rorb
or
int
cmp
pop
aas
mov
test
xchg
push
jle
xor
test
sbb
mov
mov
cwtl
test
mov
jae
popa
adc
hlt
movb
cmc
jo
inc
sub
sub
mov
add
imul
fsubrl
enter
pop
sub
aad
adc
clc
out
cmp
lds
test
adc
xchg
fdivrp
dec
jnp
push
aas
imul
dec
pop
lahf
sub
push
int3
jo
inc
adc
xchg
xchg
out
in
mov
adc
cmp
ss
pop
jns
out
lea
movb
and
xor
cli
fcomps
pop
pushf
mov
mov
and
int
cmpsl
sub
loopne
lds
scas
push
out
adc
into
and
dec
je
mov
cli
dec
cmpsl
and
xor
loope
out
cmp
xor
add
test
sbb
jmp
jo
or
inc
mov
sbb
mov
fdivr
pop
jnp
push
xchg
shll
shl
rcrl
jns
xlat
adc
mov
decl
in
roll
pop
or
iret
in
stos
mov
insl
hlt
xchg
cmp
inc
pop
in
out
inc
pop
dec
shrb
jmp
or
aaa
dec
cli
or
in
cmp
test
sbb
popf
add
test
sub
xchg
cld
dec
xor
or
jg
repnz
cmp
enter
imul
outsl
push
mov
out
sti
or
cwtl
cmp
dec
icebp
sub
mov
test
negb
add
fmul
or
dec
lods
jo
mov
mov
shlb
sub
cltd
cmc
jg
push
cmpsl
sbb
pop
shrb
jl
jno
repnz
xchg
inc
aad
jmp
pop
jo
cmp
repnz
aad
cmp
movsl
lcall
pop
les
pop
mov
adc
inc
lods
add
call
syscall
and
mov
cmp
sub
cmp
outsb
adc
sub
repnz
das
out
stos
adc
fwait
dec
mov
inc
cli
jnp
sahf
inc
jb
xchg
loope
stos
pushf
incb
lahf
push
pop
sub
and
shr
in
jp
xlat
pusha
mov
pop
adc
dec
mov
jbe
addl
jo
into
adc
mov
adc
test
ds
sbb
sbbb
not
sub
and
sahf
ss
push
imul
xor
outsl
xor
dec
in
and
or
mov
fiadds
popf
pop
aad
lcall
mov
loopne
dec
mov
or
je
jmp
test
stos
mov
test
xor
mov
aas
xchg
push
fwait
clc
fnstenv
dec
cmpsb
jo
mov
add
sbb
outsl
lret
jl
or
sahf
stos
and
xchg
cmpb
pop
sbb
stos
xchg
push
loopne
pop
mov
cwtl
in
scas
fsubrl
mov
shrb
stc
out
imul
jb
push
aaa
push
nop
lds
cltd
or
mov
js
das
jle
dec
loope
ficoml
cltd
and
xchg
inc
mov
dec
jl
and
push
cwtl
imul
int3
fisttpll
repnz
mov
cmp
pusha
aam
sub
jl
adc
fxch
mov
mov
jnp
bound
idivb
dec
xchg
xlat
mov
mov
jmp
mov
sub
pop
jmp
fcmovnbe
sbb
push
sarb
hlt
stos
sub
or
movsb
push
mov
sub
pop
fsubrl
cmpsb
mov
int
mov
arpl
mov
and
pop
loopne
pop
mov
and
rcrl
jb
sbb
stos
push
and
xchg
call
pop
icebp
mov
or
and
ljmp
mov
push
out
ja
stos
mov
jmp
pop
inc
xchg
mov
int
mov
sbb
stc
and
push
dec
add
pop
sub
xlat
in
outsl
fdivrp
adc
pop
and
stos
pop
xchg
cmp
sub
adc
mov
std
mov
mov
notl
test
cld
inc
outsl
jp
or
jns
lds
scas
jno
rcr
mov
cmpsl
inc
push
xor
or
jne
sbb
xorb
jns
daa
stos
out
jns
addr16
mov
loopne
or
cmp
mov
mov
cld
pop
sbb
cs
jno
aas
mov
pop
mov
pop
out
insl
dec
push
repnz
sbb
lods
cwtl
arpl
push
ror
les
mov
jge
adc
std
lods
sub
hlt
mov
and
jmp
test
sbb
test
mov
into
sbb
notb
lods
movsl
mov
jecxz
repz
dec
hlt
or
stc
mov
pop
xor
enter
push
ds
ds
dec
mov
inc
call
imul
je
ret
repz
fwait
arpl
add
mov
cmp
sub
xor
sub
and
cmp
mov
pop
sahf
jno
test
call
sahf
sarl
dec
imul
aaa
ljmp
mov
fcmovb
push
data16
cmc
jb
mov
mov
in
je
bound
cmp
rorl
and
bound
cmp
lods
sarb
aam
stos
shlb
push
clts
ret
les
lahf
clc
aas
repnz
cmp
and
lret
cmpsb
es
pop
xchg
ja
lods
fisubrl
jnp
pop
sub
cmp
push
sbb
ljmp
push
cmp
inc
rorb
or
insl
jg
sbb
and
xchg
in
and
lods
inc
test
xchg
mov
cmpl
fnstcw
pop
stc
shlb
cmp
bound
cli
outsl
cmp
cmp
jle
sahf
mov
ljmp
loop
xchg
ja
lahf
push
xlat
cwtl
cmp
adc
jo
in
lea
out
int3
xchg
cmp
dec
xchg
sbb
xor
dec
xchg
pop
or
adc
push
or
addr16
sbb
std
repz
lret
xchg
icebp
xor
mov
mov
jnp
xchg
mov
dec
sub
popa
xchg
in
jg
cwtl
stos
adc
adc
sbb
pop
roll
pusha
mov
mov
mov
mov
popf
ret
sub
insb
pop
rcrl
movsb
fldcw
or
inc
mov
mov
dec
mov
sbb
dec
cmpsb
bound
in
arpl
loop
test
push
aad
popf
mov
repnz
cmp
iret
mov
gs
push
movsb
sbb
xor
out
cmp
inc
mov
jmp
out
ds
mov
sub
movsb
and
out
cmp
push
fistpl
sbb
push
mov
call
xchg
inc
xor
fidivl
cltd
outsb
imul
int3
push
lret
sbb
inc
clc
adc
cld
out
or
mov
insb
movsl
jg
dec
rorb
or
jmp
xchg
les
adc
inc
cmpsb
sub
mov
inc
xchg
pop
xchg
leave
sub
aas
rorl
pop
je
enter
push
jbe
mov
adcb
push
add
imul
mov
aas
subb
mov
jo
push
mov
dec
ljmp
outsl
xchg
fwait
out
repnz
rorl
jbe
in
or
adc
jmp
xlat
aam
ret
mov
mov
jne
mov
insl
mov
add
sbb
push
das
mov
xor
loopne
nop
cmp
adc
hlt
scas
daa
mov
inc
aam
add
inc
fsubrp
mov
ljmp
add
mov
movsb
fistpll
lds
or
int3
enter
push
mov
loop
xchg
cmp
jne
pop
movsl
sbb
and
insl
cmp
icebp
dec
dec
or
pop
mov
adc
data16
sti
js
sub
outsl
mov
sub
sub
imul
add
call
fs
mov
arpl
repz
sbb
test
scas
jl
dec
enter
rcrl
fildll
or
cmp
shr
jmp
shlb
sbb
inc
cmp
popa
testl
aaa
repnz
mov
and
inc
lds
adc
mov
push
and
mov
iret
gs
ja
push
repz
sbb
stos
jb
mov
fsubrl
push
cmp
dec
xor
insb
js
sub
jg
jp
enter
dec
cmp
add
xchg
mov
cli
lods
fistpl
lahf
dec
push
mov
jg
out
andb
cmp
xchg
decl
xchg
xor
test
enter
test
fstps
roll
jmp
push
test
and
daa
mov
fstpt
add
fsts
xchg
pushf
rclb
add
mov
push
push
loop
mov
addr16
mull
xor
push
enter
inc
mov
mov
add
sbb
in
leave
and
sub
shrb
lods
idiv
ljmp
cwtl
scas
out
fmuls
loope
cwtl
cltd
jp
pop
inc
or
or
imul
inc
lcall
push
cmp
aaa
xor
mov
fisttpll
mov
fcompl
jmp
adc
dec
push
jge
pop
xchg
xor
push
sub
ret
push
add
lcall
mov
cltd
add
into
les
jp
jl
mov
pop
aam
in
out
dec
xchg
loop
ret
inc
jg
fmull
je
mov
sub
in
cmc
lds
hlt
jno
cmp
rcrb
jmp
mov
jle
mov
popa
mov
sub
sub
dec
mov
mov
test
lret
dec
or
imul
insb
in
xchg
jmp
pop
add
mulb
inc
jg
inc
lret
jo
mov
dec
imul
cmc
jecxz
xchg
lret
adc
aam
dec
pop
and
int3
hlt
movsb
xchg
mov
jne
pop
inc
aad
cmp
push
sbb
xlat
add
mov
test
bnd
pop
jp
aas
popa
out
xchg
fimull
lret
push
jae
pop
out
icebp
fistpl
gs
push
rcrl
inc
ljmp
add
lea
imul
push
pop
repz
cmp
cltd
movsl
xchg
loopne
div
dec
and
mov
pusha
mov
adc
inc
xchg
movsb
mov
lods
mov
fnstenv
cmp
cmp
scas
popa
mov
sbb
insb
pusha
ror
test
rcll
xor
loope
cli
inc
inc
scas
lods
jp
pop
or
sbb
sarb
dec
xor
std
push
push
out
inc
jbe
push
cmp
lret
scas
push
or
aas
shr
test
mov
jbe
imul
fsub
or
call
loopne
cmpsl
mov
into
clc
sbb
mov
pop
jge
es
ret
or
cmp
ss
imul
mov
push
pop
push
inc
or
fsts
rcrl
mov
mov
adc
jns
outsl
and
sbb
sub
ficompl
mov
out
lahf
fistl
negb
fstpt
mov
addr16
add
dec
push
jne
xor
xchg
clc
pop
cmp
stos
cmp
pop
sbb
into
scas
pop
int
and
mov
inc
outsb
es
cmp
std
fbstp
mov
add
leave
imul
outsl
push
adc
imul
les
mov
adc
dec
insb
repz
pop
pop
mov
lret
mov
xchg
mov
icebp
loop
mov
xchg
cmc
xchg
mov
pop
and
mov
popf
mov
fnstsw
pushl
or
and
into
jecxz
mov
imul
pop
xchg
inc
je
cmp
inc
insb
or
push
shrb
popl
icebp
pop
cmp
es
repnz
fucomip
jecxz
add
hlt
movups
push
mov
addl
sti
fdecstp
dec
sti
leave
sub
push
jmp
das
xchg
push
and
and
ja
arpl
outsb
mov
gs
repz
inc
aam
scas
in
popa
in
leave
inc
movsl
mov
push
lods
ss
pop
insl
aaa
inc
cmp
in
xchg
pop
push
push
movsl
or
push
push
les
pop
iret
cmp
sub
stos
xchg
mov
push
fildll
cwtl
mov
testb
aam
insl
and
ret
mov
mov
sti
mov
addr16
scas
ss
test
sub
decb
inc
mov
dec
lahf
xchg
inc
movsl
fwait
imul
js
xchg
test
out
cmp
mov
mov
push
sub
sbb
dec
pop
sub
adc
jecxz
mov
or
dec
add
push
xchg
adc
lahf
push
dec
inc
push
repnz
add
xchg
out
xor
cwtl
mov
xor
xor
dec
stos
cmp
inc
call
mov
pop
cld
inc
mov
cmpsl
test
test
test
popf
cmp
out
push
and
daa
mov
fisubrs
jmp
popf
dec
add
ds
test
adc
lret
sbb
loopne
dec
cmp
loop
imul
lahf
in
push
frstor
mov
mov
push
sbb
orl
jge
mov
call
mov
or
in
popf
add
hlt
or
jmp
cmp
or
fsubrs
pusha
push
sub
inc
cmpsb
arpl
inc
lret
andl
cmp
dec
mov
orb
cmp
fsts
cmpsl
fistpll
pop
pop
or
push
fsubp
je
fidivs
sub
mov
loop
lahf
and
sbb
in
xor
mov
ret
sub
cmp
add
jle
ljmp
push
jecxz
cmp
cmp
iret
aad
icebp
jge
out
xor
and
cmp
shl
mov
lahf
sbb
inc
sbb
scas
mov
cld
cmp
les
jmp
pop
aam
mov
in
mov
mov
scas
sti
cwtl
cld
xchg
mov
push
js
cld
inc
arpl
cmp
inc
xchg
loopne
mov
aas
int
rorb
imul
fcmovnbe
sbb
xor
cmpsb
adcl
js
out
test
adc
hlt
push
jns
inc
mov
lea
pop
sub
mov
das
sbb
dec
into
push
paddsw
movb
lahf
or
lahf
rcrb
aaa
pop
enter
jnp
lret
popf
in
jl
popf
fwait
xor
movsb
idivb
cmp
mov
sub
adc
hlt
jge
push
lret
sub
loopne
sbb
mov
out
cmp
test
push
loopne
ja
test
lods
shrb
sahf
jb
daa
js
mov
inc
fisttpl
pop
push
xor
int
xlat
insl
popf
push
inc
icebp
test
pop
cmp
movsl
xchg
or
test
mov
adc
lds
mov
dec
ja
call
popf
jle
xchg
shrl
roll
ja
movsb
nop
xor
sbb
pop
cmp
xchg
jmp
jns
nop
test
fsubrs
shlb
xchg
sbb
and
nop
and
mov
cmc
jae
das
mov
leave
out
aam
movsl
mov
mov
lahf
in
std
add
iret
cmpsb
mov
and
je
test
mov
mov
xor
lods
mov
mov
jl
mov
xor
in
and
ds
test
mov
lcall
dec
subl
lahf
lcall
lret
call
xor
xchg
shlb
das
fldl
jg
jne
out
sahf
push
sub
dec
addr16
je
addr16
push
xchg
les
mov
mov
mov
das
sbb
mov
xor
in
jo
in
int
jb
mov
xchg
sahf
xor
js
adc
call
loop,pt
mov
lods
nop
sbb
repz
lret
int3
mov
fsts
leave
or
out
or
cwtl
cmpsb
lds
mov
pop
cmc
mov
jne
js
js
lcall
cmp
or
jb
push
loop
mov
inc
xor
add
and
sahf
xchg
in
jge
jle
mov
inc
loop
icebp
dec
cld
add
mov
sbb
mov
sub
ret
jl
dec
mov
lock
or
fcomps
xor
inc
xor
sub
iret
fcoms
ret
jp
mov
mov
out
add
fldcw
sbb
imul
mov
imul
sbb
test
ss
pop
add
mov
sbb
js
and
jne
shr
mov
inc
fdivp
xchg
js
rcll
push
mov
sub
inc
jae
or
xchg
xchg
jle
lods
pop
push
mov
jo
xchg
lahf
mov
mov
sbb
flds
xor
iret
sub
ja
lods
add
lea
cmp
ljmp
push
jb
adc
arpl
shrb
xchg
push
cld
add
pop
hlt
mov
and
jmp
fcom
push
inc
jns
and
cmpb
loopne
xlat
and
fildll
dec
pop
xchg
xor
mov
xor
in
sbb
cwtl
sbb
ret
xor
and
xor
rolb
sbb
sbb
xchg
cwtl
inc
xor
ret
xchg
das
adc
pop
jns
mov
aas
cmp
in
push
push
out
in
cs
icebp
mov
fs
fs
test
mov
addb
push
mov
sbb
aad
outsb
push
xchg
stos
xlat
xlat
jmp
int3
cmpsb
out
jmp
stc
push
bt
stc
xor
or
lea
imul
sahf
in
pop
mov
cmp
out
jo
xchg
in
jns
sbb
adc
adc
in
push
dec
or
ss
lock
push
stos
pop
in
pop
mov
and
div
cmp
cmpsb
rol
jae
xor
xlat
xchg
lahf
hlt
bound
pop
pusha
add
adc
xchg
loopne
mov
pop
mov
add
rol
pop
dec
inc
lea
cmp
test
outsl
add
mov
adc
push
aad
aam
test
jnp
xchg
fldt
sbb
es
sbbl
jb
js
adc
into
orl
adc
pop
lret
cli
pop
mov
ret
test
sub
cs
xor
call
outsl
pop
jle
jmp
jge
mov
xchg
sub
or
ljmp
popf
clc
mov
iret
lret
mov
sbb
ds
xor
mov
cmp
lock
push
sub
mov
xor
xlat
xchg
icebp
mov
xchg
and
bound
mov
push
inc
dec
xor
ja
test
mov
jp
mov
ficoml
xchg
cmp
mov
mov
loopne
xor
push
pop
add
cmpsb
in
fisttps
cmpsl
test
test
mov
adc
popf
in
mov
sub
shll
and
or
mov
adc
subb
loopne
inc
cltd
outsl
test
sbb
xchg
adc
arpl
cli
fadd
adc
pop
jbe
inc
mov
xor
loope
into
fst
repnz
shrb
aad
inc
mov
fwait
out
xchg
xor
mov
shrl
xlat
pop
dec
mov
or
push
jmp
lahf
xchg
xor
loopne
mov
sub
adc
dec
cmp
mov
shll
mov
int
xchg
cwtl
push
test
push
mov
mov
test
cmp
out
sub
fwait
loop
test
jae
and
push
pop
ficompl
jp
lods
jp
dec
mov
jle
lock
pusha
arpl
in
and
mov
shl
lods
xchg
jbe
or
push
mov
lahf
mov
loop
dec
jae
mov
add
rclb
jl
sbb
lock
cmp
cmpsb
negb
cmpb
imul
or
mov
popa
jl
mov
xor
mov
cli
dec
mov
dec
fidivrs
lods
js
sahf
inc
add
scas
mov
push
inc
addr16
jmp
jp
xor
mov
adcl
in
cmp
shll
loope
adc
ret
lidtl
sub
add
and
aam
push
push
jl
gs
xor
notl
mov
cmp
pop
aam
pop
dec
pushf
orl
shl
push
pop
loop,pt
hlt
fs
cmp
ret
imul
add
cmp
push
sbb
movsb
pop
inc
ljmp
lcall
inc
cmpsb
addl
cmp
loop
push
fists
and
ret
loopne
fisubs
push
test
lcall
shll
gs
in
fldz
sub
rcll
sbb
adc
inc
mov
mov
ficoml
testl
adc
pop
aam
sarl
cmp
ret
ret
push
push
addl
xorb
nop
cmc
mov
dec
aaa
mov
xchg
cli
push
dec
sbb
or
xchg
sub
jno
dec
cld
add
bound
sbb
rolb
pop
dec
xchg
pop
adc
pop
pop
push
loopne
adc
xor
mov
and
sub
xlat
xlat
fcmovbe
push
mov
pusha
mov
push
icebp
scas
lock
and
dec
fldcw
out
es
test
leave
test
testb
mov
sbb
fadd
push
push
add
nop
arpl
hlt
clc
in
icebp
mov
xchg
mov
mov
icebp
call
sub
dec
xchg
cwtl
pop
daa
sti
jl
mov
mov
dec
scas
prefetch
or
fdivrl
dec
ficomps
cmp
xlat
push
sbb
data16
in
inc
mov
sub
dec
adcb
sahf
and
sti
sub
lret
jbe
xor
xchg
stos
sbb
mov
or
add
xchg
inc
hlt
inc
and
lret
cmp
mov
jo
ja
mov
lcall
aad
cltd
and
imulb
adc
enter
xchg
jl
bound
pop
pop
mov
nop
xchg
sbb
shll
cmp
imul
outsb
in
add
stc
mov
ret
inc
popa
sub
lcall
inc
push
lret
dec
cmp
bound
and
inc
ret
out
shrl
jae
cli
or
pop
cmp
cmpsl
fnsave
nop
jns
fiaddl
jl
fstps
mov
mov
xor
enter
insb
add
aam
popa
fstl
mulb
shlb
sbb
xchg
loope
xchg
pop
mov
aam
cmpsb
test
dec
outsb
pop
inc
adc
inc
pop
sbb
out
inc
scas
imul
push
jne
insl
shlb
xor
negl
jmp
pop
xchg
add
call
push
mov
inc
aad
jo
pop
adc
call
into
sti
dec
ficoms
shrl
rol
fildll
fadd
jne
decl
mov
push
sub
or
push
mov
popa
insb
pop
sbb
es
out
fcmovb
add
lds
lret
insb
hlt
cld
addr16
dec
outsl
mov
sbb
pusha
movl
idiv
sub
sti
orl
inc
cmc
xlat
xor
out
mov
rorb
in
rorl
dec
push
and
add
insl
in
push
lcall
addr16
dec
cld
fld
test
adc
xchg
std
fldt
mov
mov
jae
stc
push
mov
sbb
adc
repz
mov
jl
bound
xchg
loope
mov
jmp
jnp
push
mov
inc
mov
or
test
jae
pushf
es
add
sub
in
pop
sbb
add
mov
mov
lds
lds
inc
icebp
xor
ds
test
and
repnz
jno
es
pop
pop
inc
mov
xchg
and
aad
ljmp
inc
xchg
cltd
out
lcall
mov
sub
add
repz
shr
pop
movsb
hlt
outsb
dec
and
or
lock
mov
ja
or
dec
pop
mov
xlat
push
testl
fbld
add
std
adc
xchg
mov
sub
and
cmpsl
and
jg
test
aas
mov
mov
and
into
and
or
add
pop
push
or
dec
mov
aas
xor
call
xchg
les
repz
lret
sbb
add
cli
data16
shrb
sub
pop
push
jo
addb
test
jb
jmp
scas
stos
cmc
and
adc
lcall
mov
imul
popf
sbb
in
int
jnp
std
cltd
in
rcll
out
or
lcall
iret
dec
xchg
cwtl
int
cwtl
enter
ja
jmp
jmp
dec
aam
push
cmp
out
jecxz
fidivl
addr16
ret
loop
push
hlt
ret
addb
ljmp
sbb
mov
stos
loope
sbb
clc
iret
push
dec
inc
into
imul
ss
push
fmul
cli
sbb
in
test
push
mov
shll
cs
mov
inc
cmc
sub
flds
orl
mov
ret
push
and
jnp
inc
cmpsb
or
xlat
inc
xor
bnd
movsl
lock
int3
scas
sbb
sub
fildll
mov
push
clc
jge
ficoms
and
xor
scas
add
xor
add
into
int
std
cwtl
jp
mov
jl
xchg
jge
sbb
int
xor
push
pop
mov
add
mov
or
imul
popf
push
xchg
popf
sub
jb
int
sbb
std
lahf
popa
jns
and
nop
cli
cmp
leave
arpl
ret
cmp
or
inc
and
and
loope
in
das
fwait
daa
sbb
dec
outsb
adc
mov
pop
and
pop
popa
xchg
cmpsl
popf
xchg
xlat
pusha
push
or
cs
call
cmc
divl
sbb
stc
popf
jne
es
mov
jge
out
dec
mov
xchg
pop
ret
bound
adc
sbb
es
scas
cmp
out
lahf
xchg
test
or
lods
push
rcl
mov
mov
cltd
inc
add
dec
ja
adc
add
ffreep
xchg
lock
shll
and
rclb
cmc
jecxz
dec
aad
inc
cmp
and
mov
cli
cmp
js
pop
jmp
incb
dec
mov
fstl
rorb
jecxz
ret
out
pop
and
jle
pop
clc
andb
mov
jecxz
in
add
mov
lahf
push
inc
shr
jl
js
and
jg
xchg
inc
cmp
imul
inc
sub
xchg
and
inc
cwtl
cmp
mov
push
mov
lret
sbb
adc
js
jge
jmp
popf
add
ss
into
fdivrl
jb
add
ljmp
inc
and
std
mov
ret
sub
inc
call
loopne
sub
imulb
mov
cmp
out
sub
cmp
mov
xor
out
in
xchg
mov
inc
xchg
aas
push
sub
mov
sti
xchg
je
jbe
mov
sub
dec
jae
mov
dec
pop
xchg
pop
popa
mov
cld
cltd
jb
mov
dec
dec
aam
pop
jbe
dec
and
pop
push
aaa
dec
inc
mov
decb
icebp
jl
hlt
scas
xchg
sub
sbb
call
or
mov
mov
pusha
repz
pop
cmpb
pop
int3
test
loop
ret
sbb
inc
add
cld
adcl
loop
fs
stc
adc
xchg
cmp
mov
xchg
adc
ret
bound
lret
sbb
dec
fs
and
jp
mov
sarl
fs
cmpl
jg
sbb
jp
mov
jge
push
ja
js
mov
movsl
push
addr16
ljmp
push
xchg
mov
xchg
xchg
jmp
js
pop
xchg
lds
mov
pop
jae
pop
adc
mov
push
xchg
mov
xor
cld
stos
xchg
pusha
inc
in
mov
hlt
mov
xchg
and
ret
enter
mov
sbb
int3
push
pop
add
cltd
jo
xchg
pop
ljmp
dec
imul
cmp
jno
sahf
sbb
mov
dec
xchg
mov
testl
lods
shl
xchg
or
shll
xor
add
jno
int
cmp
jb
sbb
mov
out
fadds
ss
push
mov
push
jp
inc
lds
imul
xchg
out
fisubs
ret
cwtl
out
hlt
fbld
fildll
jmp
add
pop
sub
mov
rcrb
hlt
in
shrb
jns
stos
pop
clc
loope
inc
cmpsl
lods
push
sub
push
mov
in
mov
mov
cmc
push
add
cmp
sub
inc
in
mov
shrb
sub
push
mov
push
leave
push
xchg
and
pop
insl
and
sub
mov
fucomip
pop
movsb
test
xchg
loopne
mov
push
jmp
cmp
add
clc
fisubrs
push
movsb
rolb
sub
xchg
das
xchg
mov
rcrb
xor
pop
bound
inc
mov
push
jge
mov
sti
je
in
cmpsl
int3
rolb
pop
xchg
loope
sbb
lahf
xchg
aaa
mov
arpl
mov
lret
stc
idivl
jp
push
mov
stos
shll
mov
test
adc
lock
inc
jne
lahf
adc
pushf
test
or
stc
jbe
arpl
subb
mov
scas
xchg
pop
xor
test
fs
adc
imul
js
movsb
repz
outsb
pop
mov
int
pop
push
lods
sub
ds
pop
sub
dec
push
outsl
addr16
daa
and
mov
fidivrs
cmp
xchg
jle
imul
pop
insb
push
stos
mov
mov
mov
sub
or
pop
and
rcr
sbb
push
mov
je
repz
dec
lods
insb
add
popa
fs
mov
or
in
cmp
mov
sahf
dec
fstpt
insl
adc
cmpsl
push
push
stos
orl
and
mov
ljmp
or
jmp
pop
adc
test
mov
xor
dec
and
je
out
mov
int3
jle
cmpsb
mov
mov
fcomi
rcr
popa
sub
push
mov
out
mov
sarl
adc
push
ljmp
add
add
mov
pusha
lods
sbb
ja
sbb
sub
movsb
xor
pop
pusha
pop
sub
jge
xchg
mov
xchg
loop
dec
mov
sub
out
lahf
cmpsl
andb
push
sub
clc
lcall
clc
jbe
mov
pop
movsb
fdivrl
xchg
jmp
xlat
push
add
pop
add
cmp
insl
jns
jg
nop
mov
fcoms
movsb
pop
push
and
lret
cmc
fwait
push
push
loopne
mov
js
jg
es
in
or
mov
shlb
lock
adc
sti
cmp
inc
xchg
repz
dec
pop
mov
cld
push
dec
test
push
je
repnz
sarb
jb
inc
push
inc
inc
cli
adcl
faddl
jmp
je
sbb
sbb
ret
pop
popl
mov
dec
push
mov
xchg
mov
mov
jno
popf
jns
adc
rcrl
sbb
mov
cmp
inc
loop
nop
nop
int3
jmp
sub
sbb
push
dec
dec
out
ret
fdiv
xchg
lds
mov
jnp
or
mov
loope
mov
dec
or
and
jmp
xchg
in
fs
les
jbe
push
pushf
mov
fcmove
ret
mov
lods
in
hlt
out
fsubl
jno
mov
stos
xor
dec
add
xchg
or
out
cmp
mov
jge
mov
push
mov
mov
in
sub
mov
das
int
cmpb
inc
int
pop
and
pop
out
jecxz
jmp
lds
jecxz
ret
inc
push
adc
sbb
inc
decl
push
xchg
lahf
aaa
sarb
xor
cli
mov
inc
cmp
mov
sti
loopne
push
repnz
or
fisubs
xor
movsl
scas
rcrb
jae
fidivl
mov
btr
pop
fbstp
inc
mov
sub
outsl
ret
int
aaa
test
gs
cld
pushl
mov
inc
jmp
pop
arpl
movb
cmpsl
add
movsb
push
or
into
ljmp
fcmovnu
dec
and
xor
cmp
aam
ljmp
xchg
cltd
and
cs
cwtl
mov
inc
mov
in
mov
bnd
mov
push
imul
or
call
xchg
adc
dec
lods
xchg
and
aad
adc
pusha
dec
icebp
fisubrl
dec
pusha
fiaddl
xor
mov
lret
imul
iret
mov
in
jmp
fs
mov
adc
jns
mov
shrl
jae
xchg
in
cmp
clc
test
mov
lods
movsl
insb
cli
pop
jp
and
and
pop
lds
fidivrl
mov
adc
sti
xchg
outsl
jl
jg
push
cmp
jp
mov
imul
lret
lds
pop
stos
das
xchg
leave
push
or
sti
jne,pt
in
mov
lods
mov
imul
sub
push
pusha
in
leave
test
jne
mov
sub
mov
hlt
add
outsb
inc
rorl
pusha
add
mov
xchg
mov
fimull
mov
sti
add
jl
inc
push
inc
cmc
push
test
cwtl
cmp
pop
push
push
mov
outsb
insl
jb
jle
lcall
lock
out
enter
sbb
jl
popa
leave
xor
flds
lea
xchg
adc
leave
xchg
rcll
ret
int3
or
jmp
jnp
adc
sub
or
movsl
fidivrs
imul
es
cs
test
stos
in
sub
ret
lea
repnz
push
movsb
inc
lcall
and
jo
sbb
mov
mov
or
push
mov
mov
jbe
aam
incb
ret
cmp
ljmp
insl
adc
sbb
jmp
imul
add
xchg
outsl
xor
in
add
xchg
inc
aam
or
scas
clc
push
lock
sub
mov
sbb
mov
pop
test
mov
jnp
iret
mov
push
push
decb
fnstcw
sub
out
jns
dec
sub
pop
sub
fidivs
jmp
repz
in
jp
test
jecxz
aad
es
mov
or
and
mov
cmp
pop
and
call
int
enter
shrl
cmp
mov
daa
arpl
js
jo
jae
fnstenv
and
pop
sub
lock
test
in
jmp
adc
stos
out
jmp
fistps
cmpb
hlt
mov
repz
repnz
mov
lahf
inc
lods
push
rcrb
ja
pop
pop
imul
push
sbb
push
jae
lahf
popf
arpl
inc
push
pop
scas
pop
cmp
jb
imul
pop
pop
mov
mov
sbb
nop
pop
sub
and
xchg
cmp
sbb
int3
sti
xchg
divl
cs
cmp
cmpsl
jo
sarb
mov
addr16
push
out
cmp
add
ret
mov
lock
adc
aad
xlat
or
pop
shlb
or
xchg
test
sarl
cmpsl
inc
push
mov
cmp
xor
xorl
sbb
and
outsb
cmp
int3
xor
jmp
neg
and
inc
dec
xchg
mov
mov
ret
or
enter
cld
stos
ljmp
sub
aad
stc
pop
add
adc
addr16
lds
lcall
xchg
loope
mov
cmp
lock
daa
stos
inc
into
jmp
mov
pop
or
ja
adc
pop
lcall
cmp
aam
arpl
in
fs
xor
out
push
stos
lods
mov
jae
jb
mov
sqrtps
in
ret
xor
xchg
aad
jns
mov
outsb
lret
aad
stc
lock
mov
add
mov
xor
sbbb
fildll
and
imul
or
fiadds
jbe
fdivl
or
bound
frstor
push
xchg
sbb
add
dec
pop
pusha
and
mov
addr16
jge
testl
add
inc
lds
sub
jns
mov
mov
inc
ljmp
mov
adc
repz
sahf
cmpsl
dec
mov
mov
add
xor
jmp
adc
adc
sarb
fdivs
sub
in
dec
ja
inc
add
mov
push
mov
push
pop
xchg
lret
jo
add
mov
fcom
divb
adc
sub
out
sub
insb
sub
test
je
shll
and
mov
lahf
jns
cmc
xchg
mov
mov
nop
cmpsl
addr16
lcall
into
mov
mov
andl
pop
ja
xor
sbb
ja
lods
daa
hlt
cld
add
clc
xchg
mov
or
sub
out
adc
sub
lahf
sub
lret
adcl
fbstp
nop
cs
repnz
mov
js
xor
add
jp
ljmp
shlb
rcl
or
mov
mov
stc
loop
fld
cmp
jnp
nop
loope
adc
sahf
sbb
mov
mov
aam
cld
adc
push
sub
dec
cltd
mov
and
jl
loop
mov
sbb
lock
push
and
mov
repz
ficoml
test
lcall
mulb
jnp
add
push
inc
xchg
mov
stos
cli
lock
lret
cmp
mov
cmp
sbb
lea
std
push
push
jecxz
test
incb
mov
cmpsb
or
ja
mov
mov
mov
add
push
cmp
ror
pop
xchg
or
js
cs
dec
fdivrs
cmpsb
inc
rorl
pop
sti
pop
xchg
add
mov
cld
lock
jg
pop
fs
test
add
notl
test
mov
imul
add
mov
test
mov
jg
sti
into
push
pop
push
call
sahf
cmp
cmc
add
inc
cmp
lcall
daa
adc
sub
imul
ds
scas
dec
ljmp
add
pop
out
adc
mov
dec
popa
sub
fbstp
jl
jmp
test
mov
jns
outsb
sti
into
mov
test
test
mov
rcrb
insb
orl
mov
repnz
or
or
mov
aaa
dec
push
or
mov
push
pop
jle
jle
mulps
fldl
xor
push
cmp
add
test
pop
push
mov
add
mov
xchg
fnstenv
not
int
add
mov
sar
outsb
out
inc
es
pushf
rorl
adc
sbb
sub
mov
rcrb
rcrb
pop
das
mov
jl
cli
xchg
xor
imul
dec
mov
push
sbb
xchg
sub
neg
mov
xor
pushf
orl
push
inc
popa
inc
leave
mov
aas
mov
adc
popf
jne
cmp
jmp
push
pushf
in
jp
js
pop
push
scas
mov
fisubrs
gs
pusha
flds
pop
and
leave
out
pushf
rcll
adc
test
iret
outsb
imul
lahf
vpsubusb
shll
in
cwtl
in
xor
adc
sbb
mov
lret
xchg
addr16
inc
loope
sbb
insl
push
arpl
push
cltd
cmp
aaa
enter
leave
sti
xchg
insb
mov
inc
jns
xchg
inc
test
rcll
xadd
fistps
dec
int
sub
in
shll
inc
insl
ja
outsl
int3
jge
repz
sbb
mov
popa
cli
incl
cltd
dec
lods
scas
mov
sub
inc
addr16
and
dec
insb
jo
out
xor
int
pop
mov
push
fidivs
xor
lret
fimuls
push
lcall
std
and
gs
and
mov
push
cmc
fcomip
outsb
pop
sub
push
int
test
bndstx
xchg
std
icebp
test
insl
test
xor
dec
in
and
cmp
movsl
hlt
sarl
lods
pop
adc
push
or
and
inc
decl
clc
cmpsb
mov
dec
in
repz
adc
subl
testl
fcoms
inc
rol
xchg
cmp
bnd
ret
mov
push
push
xor
jne
pop
or
push
sub
or
pop
lock
test
xor
shlb
xor
ret
outsl
push
daa
idivb
xchg
stos
sub
dec
fstl
ljmp
jl
mov
mov
jmp
adc
jns
sti
and
xchg
sbb
push
fsubs
or
nop
sub
jbe
pop
inc
mov
int
loopne
dec
inc
stos
dec
sub
mov
arpl
xchg
stos
mov
fiadds
sbb
or
ucomiss
or
sub
out
push
dec
inc
xchg
out
mov
mov
out
imull
cwtd
imul
add
add
cmc
imul
mov
sti
test
dec
jnp
cwtl
adc
sti
or
cmp
add
sbb
or
inc
push
dec
leave
inc
mov
outsb
into
and
test
fcomps
addl
dec
cmp
imul
lret
xchg
inc
outsb
xchg
ja
dec
inc
mov
dec
xor
dec
cmp
jg
rcr
mov
fsubrl
movsl
add
mov
popa
in
movsl
xor
mov
jbe
jmp
cmpl
xchg
test
mov
lods
jno
push
mov
sbb
inc
fisubs
mov
dec
xor
ss
lea
adc
push
pushw
pushf
jns,pt
sbb
fsub
mov
les
push
faddl
lahf
push
out
fildl
dec
mov
xchg
add
dec
add
js
jg
sti
loopne
mov
sarl
cmpsb
cmpsb
ret
shll
push
adc
cmp
shlb
adc
out
rol
jl
cmp
jo
mov
lahf
in
jmp
clc
rolb
sahf
repnz
andb
addr16
rcrl
repz
push
or
mov
test
push
inc
sub
sub
jnp
decb
imul
xchg
or
push
idivl
mov
or
add
jo
fadd
iret
pop
cmp
add
icebp
mov
and
jns
add
imul
mov
push
cmp
add
jl
jae
pop
cmpsb
movsb
cmpsb
xlat
in
scas
shlb
pop
inc
int
push
mov
lcall
mov
jmp
mul
push
xor
cmp
or
and
cs
xchg
gs
repnz
insl
mov
andb
sub
into
cmp
adc
aam
push
cmp
and
adc
jb
xchg
sti
mov
scas
cld
outsb
sbb
mov
cmp
sbb
mov
or
mov
std
xlat
sbb
in
add
fwait
cwtl
jb
fs
mov
in
imulb
xchg
fnstenv
or
xor
mov
mov
sub
mov
int3
dec
jns
setae
mov
int3
push
cmpsl
loop
mov
cmp
push
repz
mov
cvttps2pi
repnz
outsl
xor
and
movsl
dec
jge
adc
fld1
popa
mov
jb
lret
sub
or
adc
mov
cmp
fistl
xor
inc
lock
jmp
adc
mov
mov
add
lret
mov
push
leave
lcall
mov
call
sbb
ss
pop
push
popa
decb
into
mov
mov
mov
bnd
jno
popf
lock
das
mov
mov
lahf
inc
pop
inc
stc
xchg
and
pop
out
mov
jge
lods
jne
push
out
xchg
xor
mov
mov
mov
pop
ja
cmp
arpl
ja
add
push
lcall
mov
out
faddl
outsb
ljmp
sub
stos
aam
add
enter
ja
jo
fstpt
xlat
adc
or
inc
mov
mov
xor
xor
mov
ret
mov
in
inc
or
fnstcw
xchg
mov
outsl
andb
inc
gs
sub
xchg
pop
sub
inc
stc
jns
daa
mov
arpl
cmp
scas
xor
mov
push
movsl
lret
stc
and
mov
enter
cmp
ret
clc
jecxz
cltd
jmp
jae
and
enter
scas
add
call
sub
lock
rcr
sbb
icebp
pop
cli
pop
in
into
je
cs
mov
adc
sub
lods
stos
fldl
aad
mov
ret
cwtl
push
icebp
sbb
hlt
sbb
mov
add
xchg
jae
dec
inc
iret
aas
addr16
out
dec
xchg
add
in
enter
shll
fs
push
mov
imul
pop
loop
xchg
movsb
shl
sbb
fstpl
insl
dec
sbb
in
cltd
cltd
adc
adc
mov
jl
mov
sbb
adc
inc
lret
push
cmc
fmulp
adc
bound
mov
or
int3
mov
add
stos
jne
std
sti
inc
hlt
notl
sbb
or
xlat
in
test
inc
out
int3
xchg
lods
popf
xchg
and
xchg
pop
insl
imul
jecxz
fcoms
inc
mov
xchg
je
sub
jmp
mov
push
sbb
and
nop
stos
cmp
sbb
repz
push
dec
movsl
loopne
jne
fildl
fidivrl
cmovne
mov
inc
xchg
inc
mov
lods
ja
mov
data16
mov
pop
fimuls
aas
test
dec
mov
mov
pushf
jge
jge
xchg
cmp
push
stos
mov
out
in
jo
pop
jne
sub
and
push
or
sahf
cmpsl
push
dec
push
add
fdivl
add
add
or
lea
adc
jg
sbb
add
pushf
inc
mov
push
aad
jo
movsb
push
ds
enter
aam
imul
sbb
fcmove
xchg
orb
jb
mov
adc
mov
test
sbb
out
or
mov
jo
jge
or
sub
movsl
pushf
pop
cmp
fistpl
add
sub
inc
push
mov
les
jp
mov
lret
xor
add
in
popf
sbb
repnz
xchg
push
imul
fdivrl
mov
lcall
cmp
fistps
jmp
xor
and
dec
and
loopne
cltd
daa
dec
xor
daa
dec
pop
dec
lods
sub
and
mov
jge
sub
adc
jecxz
test
lods
xor
loop
jg
in
mov
jl
adc
call
xchg
ss
jbe
pushf
jns
jae
cs
adc
dec
push
pop
insl
mov
sub
xchg
and
in
sbb
mov
inc
jecxz
adc
push
xchg
or
out
rorl
or
and
fdiv
xor
lea
sti
push
imulb
push
popa
cmp
or
roll
into
sbb
push
stos
xor
loop
test
push
xor
je
aaa
cmp
xchg
mov
out
cmp
ret
mov
loop
insl
jne
jno
stc
xchg
cwtl
insl
pop
sub
and
push
sub
add
push
in
mov
js
stc
outsl
cmc
pusha
insb
dec
cmp
stc
in
xchg
pop
dec
sbb
sarb
fisubs
out
mov
iret
ret
mov
scas
je
rol
daa
jo
mov
ja
fildll
nopl
gs
les
sub
sti
cwtl
repz
in
loop
pushf
mov
sub
out
xchg
jne
mov
insl
mov
mov
repnz
jns
pop
imul
popf
jmp
loop
loopne
adc
xor
push
sbb
mov
addr16
cmpb
aaa
rclb
pop
rolb
bound
xchg
jo
adc
fwait
clc
sub
add
jbe
cli
inc
call
out
mov
push
outsl
lods
pop
enter
outsb
std
jmp
fisttps
cmp
data16
out
xor
pop
mov
test
ret
cmp
mov
add
arpl
cmp
xchg
jnp
xor
and
mov
clc
mov
jns
mov
into
cmp
imul
rcrb
data16
sub
cmp
mov
dec
or
xchg
out
fs
fs
cli
cmpb
add
pop
loop
xor
sbb
sub
jmp
add
mov
movsl
sbb
sti
pop
test
or
cmpsb
push
mov
dec
das
in
mov
cs
mov
ret
push
pop
cmpsb
sub
mov
aad
adc
xchg
out
mov
daa
leave
aaa
jo
mov
and
ljmp
ret
lcall
dec
or
xchg
mov
imulb
add
add
scas
pop
outsl
xor
jns
test
or
inc
lds
movsl
int
push
jge
push
mov
addr16
enter
and
out
pushl
xor
int
scas
in
imul
jae
xor
cmp
or
sub
fbld
lret
ss
popf
std
roll
push
std
and
jbe
push
test
sub
dec
fdiv
cli
scas
dec
add
cmp
cmc
bound
aaa
add
shll
add
fmuls
ficoml
dec
ficoms
ss
and
jb
mov
mov
fsts
mov
adc
push
push
orb
jp
leave
inc
xchg
xor
cmp
dec
ljmp
xchg
movsb
in
xchg
inc
jmp
pop
pushf
je
mov
sbb
mov
jnp
push
and
and
mov
xchg
mov
mov
out
loopne
jbe
cmp
inc
fidivrl
push
or
loopne
push
lcall
fstpl
adc
xlat
rclb
pop
int
sahf
jbe
paddusw
dec
add
cwtl
mov
popf
scas
mov
ret
fs
mov
stos
xor
sbbl
inc
and
or
mov
xor
std
inc
loop
stos
xchg
lock
jp
into
imul
int3
and
jle
mov
sub
hlt
jo
and
adcb
cmp
aam
in
lods
arpl
cmp
icebp
out
inc
addr16
dec
jae
bound
testb
xlat
add
movsb
lods
rcll
neg
fcmovb
or
insl
or
and
ficoms
add
out
enter
pop
xor
dec
xchg
push
xchg
shrd
dec
cmpsl
ja
adc
fimuls
daa
push
outsb
xor
push
sbb
cld
ret
jb
mov
push
sbb
aaa
cmpb
and
jge
add
test
lea
sbb
mov
movsl
icebp
pop
es
push
test
in
out
test
mov
or
cmp
push
lods
out
in
push
jge
iret
mov
cmp
imul
inc
leave
pushf
popf
stos
stos
mov
ljmp
adc
mov
shr
stc
dec
or
cmpsl
shl
popa
js
loope
in
pop
cmp
adc
adc
icebp
les
iret
inc
lret
jnp
fidivs
pop
out
stos
dec
cltd
cld
js
inc
je
jp
inc
cmp
mov
in
add
mov
jbe
inc
adc
add
jne
adc
icebp
xchg
adc
cmove
imull
dec
lahf
lea
stc
mov
daa
mov
enter
sbb
push
int
sarl
cwtl
clc
stos
rorl
fs
ljmp
adc
add
mov
and
xor
sbbb
pop
push
and
test
ror
xchg
pop
cld
jg
and
and
fsubrs
ficompl
pop
sub
pop
push
mov
pushf
hlt
xor
into
or
fwait
ret
or
shlb
in
outsb
out
dec
lahf
sbb
add
xor
push
mov
dec
jg
jecxz
sbb
mov
pop
push
mov
inc
mov
dec
mov
sbb
inc
loop
jne
mov
mov
cmp
stc
out
mov
mov
mov
mov
mov
add
sub
or
jge
push
pop
pop
push
aam
mov
or
dec
jae
sarl
not
in
add
lahf
js
mov
lds
pop
movsl
test
xor
pop
lea
xchg
jno
xchg
mov
mov
push
push
and
xchg
sti
mov
sbb
pop
fildll
enter
pushf
adc
hlt
fistl
movsb
adc
inc
adc
andw
gs
out
cmpsb
pop
andps
clc
pop
cmp
mov
dec
loope
aad
xor
inc
loop
sub
adc
daa
repnz
sbb
push
jns
push
mov
mov
sti
cmp
jp
sbb
movsb
jns
mov
xchg
stc
fstpl
ret
mov
and
andl
lods
cs
adc
mov
cmpsl
jl
adc
pushf
push
xor
push
and
mov
push
popa
lcall
jg
aaa
mov
lret
jbe
xchg
cmpsl
push
cmp
jbe
xchg
adc
cmp
idivb
call
jg
in
cs
imul
scas
hlt
sbb
fwait
or
loope
mov
mov
dec
cwtl
adc
pop
xchg
mov
je
sti
stc
xchg
xchg
fistl
fs
mov
cli
test
repnz
sub
or
nop
adc
or
dec
rcll
jecxz
sbb
xlat
cmp
xchg
add
jae
add
inc
or
adc
ss
stc
inc
dec
and
cltd
jecxz
and
int
xor
xchg
testl
add
cltd
ljmp
int3
xchg
inc
mov
adc
cmp
mov
mov
xor
imul
fsubrl
shlb
mov
or
mov
arpl
push
es
into
clc
cmp
cmp
and
lds
ds
insl
lcall
xor
pop
push
inc
and
fs
xor
xchg
in
mov
mov
hlt
cmp
scas
push
jno
or
rcrb
test
ss
mov
fcmove
cmp
js
imul
push
mov
cmp
in
or
pusha
mov
shlb
insl
cld
leave
notl
adc
sub
and
ret
fstps
mov
jecxz
jo
test
adc
test
mov
movsb
rclb
inc
cwtl
jecxz
arpl
mov
shlb
sbb
pop
dec
mov
inc
dec
out
fsubl
pop
inc
dec
pop
shlb
cmpsl
lahf
call
nop
sbb
xor
ss
out
or
jp
inc
lds
enter
out
mov
push
roll
mov
push
stc
es
outsl
xchg
insl
roll
ret
sub
sub
jne
mov
stos
sub
ja
pushl
cs
sbb
lea
push
adcb
xchg
push
mov
into
int
and
sub
cmp
adc
lea
test
cmp
lret
das
xchg
loop
jno
loopne
jae
xor
std
sub
adc
mov
ja
repz
cwtl
sarl
fs
movsl
data16
mov
stos
jns
cmp
mov
data16
pop
xor
inc
enter
das
push
xchg
add
arpl
loop
inc
je
shrb
lock
cmp
addr16
scas
mov
sbb
aam
push
adc
sbb
and
scas
loope
cmp
adc
and
dec
mov
loopne
notl
fbld
stos
movsb
mov
jne
insl
mov
cmp
out
fistps
and
xchg
ret
cltd
in
sbb
jmp
inc
dec
cmp
inc
test
fsubl
cli
cmp
or
orb
and
mov
outsb
scas
dec
lret
cmpsb
add
or
icebp
dec
mov
jns
lret
mov
enter
add
out
sti
xchg
xchg
mov
in
insl
icebp
jae
sahf
jno
and
popf
fiadds
jecxz
cmp
stc
push
pushf
pop
or
xor
or
mov
rcll
jp
out
fcomip
xor
or
xchg
xor
aaa
mov
repz
sub
scas
repz
adc
movsl
leave
mov
lods
in
cmp
pop
leave
jmp
xchg
ja
mov
movsb
ficoml
pop
and
js
jg
ds
pop
test
xchg
sti
xchg
inc
push
dec
fsts
outsb
dec
xor
xchg
cmc
stos
stos
aaa
dec
xor
lret
fdivl
rcrb
in
js
lcall
test
jns
hlt
rcrl
cmp
adc
jmp
sbb
scas
and
outsl
das
or
aaa
rcrl
dec
fldenv
jmp
sarl
mov
xchg
add
mov
mov
ret
std
pop
loopne
xchg
pusha
movsb
pusha
xchg
rorb
in
sbb
icebp
pop
lea
sti
jb
popf
movsl
cmpsb
jnp
dec
xchg
popa
mov
popl
pop
sbb
das
adc
loopne
scas
mov
push
dec
das
xor
jb
sbbl
lahf
dec
or
in
push
outsb
and
add
push
pop
and
ljmp
mov
pusha
sbb
arpl
cmp
cmpsb
adc
pop
adc
ret
push
jno
jns
adc
loop
ds
cli
and
pop
imul
xchg
icebp
ljmp
mov
fcompl
jnp
cli
ja
adc
test
in
gs
js
mov
pop
add
push
pop
sub
dec
xor
mov
pop
lcall
mulb
xchg
stos
ret
pop
mov
pop
bound
sbb
pop
sub
xchg
je
in
mov
sahf
sbb
inc
repz
cmpsl
aam
lret
je
xor
inc
es
js
mov
lret
incl
lahf
cmp
inc
dec
pop
and
pop
dec
sub
imulb
mov
push
inc
std
jae
cmp
mov
sub
pop
imul
fcoms
or
scas
out
dec
xchg
data16
out
sub
pusha
ss
ja
bound
out
insb
fsubrl
ret
pop
bound
popf
mov
gs
shl
aas
pusha
add
add
push
xchg
and
mov
add
xlat
pop
lahf
dec
push
gs
mov
cmpsb
dec
adc
push
sar
pop
dec
insb
std
add
scas
sub
inc
mov
insl
jae
in
or
inc
or
ret
test
jmp
in
jecxz
test
xor
xlat
push
aad
or
pop
mov
arpl
out
popa
fs
or
pop
fsin
mov
adc
dec
xchg
xchg
push
add
bound
and
mov
ret
and
imul
xor
subl
jo
jnp
mov
sbb
add
popl
pop
addr16
imul
sub
sub
inc
mov
lea
pop
iret
lock
es
cmp
pop
loopne
rol
ficoms
cld
mov
mov
lahf
mov
nop
jle
adc
cmp
outsb
push
sti
clc
inc
adc
enter
adc
xchg
int
and
loope
pushf
sub
int3
and
lds
sub
xor
outsl
sarb
pop
daa
xor
lods
jne
mov
mov
mov
shrb
fcomip
dec
lods
mov
xchg
add
or
push
mov
cmp
push
push
rcl
or
and
jbe,pt
dec
jl
sub
popf
loopne
push
jmp
adc
fnsave
push
aam
jb
jne
jno
add
adc
xchg
sbb
fstp
pop
dec
insb
stos
jecxz
or
jns
add
ljmp
push
mov
arpl
lret
ja
les
or
pop
les
je
dec
cltd
pop
ficoms
dec
mov
jg
repnz
cmc
cmp
ficoml
imul
in
jmp
adc
nop
in
and
iret
leave
subl
fistpll
hlt
mov
sbb
jmp
test
cmc
mov
jbe
lret
scas
sbb
or
out
adc
lcall
mov
ljmp
sbb
out
or
test
jns
fiaddl
cld
jns
pop
popa
push
dec
mov
testb
out
xchg
cmp
cli
cs
push
in
movsl
aam
aas
mov
push
pusha
lock
pusha
cld
mov
xor
test
nop
sub
jle
cmp
mov
cwtl
pop
int
out
ret
xchg
cmc
push
scas
rolb
mov
orl
jno
push
mov
mov
aad
test
xchg
mov
xchg
and
shrl
inc
sub
aaa
sarl
mov
or
push
pop
jns
shlb
test
or
adc
xchg
push
ret
cs
bound
popf
bound
push
dec
push
stos
or
cmpsl
jno
xchg
or
dec
xor
xor
xchg
insl
dec
sbb
repnz
test
push
aad
mov
imul
jl
mov
inc
ret
or
dec
dec
in
xor
test
jne
aad
stos
push
pusha
les
mov
cmp
add
mov
xor
loop
cld
fdiv
aad
lods
xor
insl
nopl
adcb
shrb
sub
pop
lcall
repz
adcb
enter
xor
mov
add
dec
add
punpckhdq
gs
jae
mov
cs
lods
call
push
int
scas
xchg
pop
mov
mov
stos
loop
cmpsb
adc
xchg
jns
shl
jl
ss
push
push
add
jecxz
daa
inc
mov
call
xchg
decb
call
pop
cmpsl
std
fisubrl
in
add
pusha
adcb
mov
mov
rcll
pop
cmp
daa
icebp
inc
outsb
addr16
mov
and
xor
cmc
je
mov
repz
outsl
pusha
loopne
dec
shlb
push
out
aas
inc
subb
jns
and
inc
addr16
hlt
mov
mov
jmp
inc
dec
ljmp
subb
iret
js
jg
xchg
xchg
daa
lods
idivl
sbb
fisubrs
cld
aaa
out
ljmp
fistl
leave
aaa
sub
in
xor
pop
lret
pop
mov
test
cmpb
call
out
std
pop
imul
int
jno
inc
data16
xor
roll
in
cwtl
pop
fdivp
daa
jmp
stos
lcall
dec
dec
or
or
push
dec
insl
adc
int3
in
lret
sbb
dec
rorb
shrb
cmpsl
cmpsl
xchg
lds
out
stc
and
cs
pushl
into
mov
clc
pop
adc
pop
and
mov
dec
dec
mov
mov
cwtl
loop
or
pop
je
test
in
in
jb
mov
xor
dec
fwait
int
add
or
add
and
xchg
dec
mov
call
test
aad
je
adc
aad
xchg
pop
dec
push
outsb
out
inc
adcb
test
nop
test
mov
push
sbb
arpl
sub
ret
mov
fistpl
scas
pop
mov
leave
xchg
inc
ds
aam
or
xor
je
inc
pusha
movsb
fxch
dec
sub
push
pop
cmp
outsb
jb
xchg
cmp
insb
push
mov
int
push
lcall
mov
int3
mov
lods
es
adc
fwait
mov
dec
idivb
fs
and
or
cmc
push
cwtd
jb
add
xlat
xchg
jno
adc
mov
mov
adc
adc
sti
jle
push
aas
shll
outsb
insl
pop
lea
mov
mov
dec
jb
mov
cltd
xchg
mov
fiadds
cmpsb
push
adc
dec
fistl
fisubl
insb
mov
insb
sub
xlat
aad
stos
inc
adc
rep
push
loope
inc
sbb
add
fwait
out
push
test
cmc
add
xchg
negl
pop
aas
fidivl
test
or
fs
jbe
fsubr
and
inc
cmp
or
in
inc
add
subb
xor
data16
repnz
mov
pop
iret
add
scas
rcll
jne
out
bnd
lods
repnz
cld
xor
ret
pop
adc
add
out
xor
xchg
xchg
out
or
cli
popl
dec
lods
push
repnz
sbb
outsl
push
xor
push
fcoml
adc
rclb
shlb
dec
ret
addr16
pop
push
xor
imulb
adc
movsb
xchg
xchg
and
jbe
out
jl
in
clc
cli
pusha
xchg
into
sbb
xlat
adc
ret
sarl
jno
inc
push
mov
jge
sbb
test
cmpsb
push
flds
test
push
or
pop
mov
test
cmpsb
mov
xchg
sbb
pop
loop
jle
fidivs
fidivs
mov
and
jns
add
loop
mov
loope
lods
mov
mov
out
xchg
xchg
in
repnz
pusha
mov
fldenv
or
sub
pusha
int
inc
jg
add
sub
imul
mov
xchg
nop
cmp
lea
test
andl
mov
je
loope
jmp
pop
sbb
fwait
mov
push
jp
insl
and
or
fldenv
addr16
dec
std
or
jg
adc
push
iret
add
add
mov
push
dec
je
ficomps
jmp
mov
push
fisubrs
mov
adc
ja
loop
mov
cwtl
lods
mov
cmp
adc
adc
mov
and
mov
leave
push
or
aad
pop
test
sub
into
add
pop
insb
jnp
jns
mov
ds
fistpl
fcompl
mov
pop
and
xchg
movsb
xchg
imul
jbe
add
je
movsb
jecxz
pop
roll
inc
mov
dec
and
add
mov
idivl
adc
loopne
mov
into
stc
add
pushl
inc
inc
repnz
mov
cwtl
sub
cwtl
rolb
inc
pop
xorb
mov
jg
mov
int3
push
fnsave
push
dec
sahf
fs
adc
sbb
test
clc
inc
ds
jne
lcall
es
jle
jo
ficomps
fninit
movsl
test
test
std
or
mov
xchg
test
jnp
or
mov
push
loope
sbb
push
jmp
inc
inc
mov
into
int3
push
das
out
lahf
in
mov
sbb
inc
mov
clc
inc
aam
imul
test
decl
cmp
pushw
sbb
dec
cli
lcall
pop
xchg
mov
adc
test
out
pushf
or
sbb
ds
inc
jmp
insb
and
cmpsl
aad
dec
test
test
pop
and
and
or
leave
inc
js
jb
xor
cmp
add
xchg
cmp
shrb
in
repnz
add
stos
sub
shrb
fsts
mov
sbb
jo
mov
ljmp
jecxz
inc
fisttps
cmp
out
mov
xor
pop
sbb
jp
iret
xor
cmp
out
stos
push
xor
dec
ja
jg
dec
outsb
inc
dec
jle
or
popf
xorb
push
add
adc
or
stc
jb
pop
pop
leave
adc
jle
test
push
xor
pop
xchg
sub
xor
inc
inc
and
mov
sub
xor
enter
scas
loopne
es
std
xchg
mov
push
imul
jl
cwtl
mov
dec
lret
lret
les
int
inc
dec
jae
xchg
xchg
aam
cmpsl
sub
adc
add
sub
iret
sbb
clc
ljmp
mov
fs
sub
mov
jl
lret
sbb
pop
pop
jb
fsubp
std
fsub
notb
pusha
outsb
jge
xchg
cwtl
xor
jo
popa
sub
push
push
lret
outsb
arpl
loopne
push
mov
dec
add
jne
or
dec
mov
pop
dec
test
lods
cmp
ss
mov
sub
inc
mov
push
stos
or
pop
aam
xchg
jae
out
xchg
and
jne
or
xchg
into
cmp
mov
dec
mov
xor
andb
mov
pop
push
pop
inc
fisttps
aad
into
xchg
stc
xchg
lock
inc
idiv
push
jg
xchg
cmp
cmp
movsl
aam
lods
pop
ret
pop
xor
jge
sub
iret
cmp
ficompl
sbb
jmp
jg
add
dec
pop
pop
pop
mov
sub
mov
ficoms
mov
data16
lret
cmc
xor
cltd
in
or
dec
movsl
repz
xchg
shlb
xor
scas
repnz
popa
jbe
xchg
pop
shrl
in
fidivl
inc
stos
lahf
push
movsb
dec
imul
mov
std
dec
insb
cmc
popa
insl
pop
mov
icebp
iret
dec
and
push
dec
xlat
or
in
adc
repnz
loop
cmp
and
xlat
iret
jae
mov
dec
enter
cltd
add
or
outsb
xor
fs
pop
mov
pop
out
sub
pop
fidivrs
outsl
test
repnz
enter
mov
sub
cmp
cmpl
inc
rcrl
sarl
or
or
xchg
inc
into
scas
pop
push
imul
xor
jo
jnp
leave
gs
fdivl
aas
inc
ljmp
push
xchg
add
jp
dec
outsb
mov
mov
es
insl
mov
insl
push
outsb
js
mov
push
sub
jg
cld
test
inc
mov
lahf
clc
or
sahf
inc
pushf
cmc
js
repz
sbb
je
inc
cmp
stos
cmp
pop
in
jno
ds
mov
mov
outsb
stos
mov
out
dec
dec
lods
bound
inc
pop
adc
xor
adc
lahf
mov
and
dec
adc
sub
iret
clc
or
lcall
in
clc
lahf
icebp
pushf
stc
testb
aaa
sbb
or
jbe
mov
popf
jns
fsubr
outsl
xchg
into
lds
scas
leave
das
ret
pop
sub
outsl
jo
jne
mov
dec
lea
mov
cli
stos
aam
inc
fldcw
jl
in
and
mov
scas
out
out
xor
mov
in
xchg
sub
rclb
dec
jmp
mov
addr16
push
jecxz
rorb
testb
xchg
pop
jle
fdivrl
jbe
xor
ja
adc
mov
push
movb
shlb
lods
arpl
jno
jbe
mov
sub
dec
sub
sub
subb
and
in
pop
xchg
movsl
sahf
mov
jl
dec
sub
sbb
test
popa
xor
into
xchg
jge
and
pusha
push
call
mov
mov
xor
mov
jae
mov
sub
fsubl
or
lret
mov
sahf
fwait
jne
adc
xchg
pop
gs
ja
stos
ja
inc
mov
int3
fildll
lds
pop
xlat
test
jne
jb
mov
imul
mov
mov
or
outsl
lret
sti
pop
aaa
lds
inc
pop
pop
push
pop
jnp
lods
por
ljmp
roll
push
xor
hlt
js
ss
lcall
xchg
dec
or
shll
loopne
pop
mov
xor
jmp
fcmovbe
out
mov
int
adc
imul
cld
incl
push
stos
outsb
int3
mov
ljmp
cmp
inc
dec
mov
out
mov
inc
loopne
mov
or
add
fsubrl
je
lret
pop
imul
sahf
sub
mov
mov
mov
jmp
adc
ja
pusha
gs
fisubs
lahf
stos
or
cmpsl
mov
ljmp
pop
xchg
inc
mov
push
popf
xchg
pop
lret
xchg
mov
jl
shrb
jbe
into
jb
addb
lods
mov
jne
push
mov
dec
ljmp
sub
je
mov
add
test
jns
fisubs
sbb
fsubs
xchg
popa
dec
test
sahf
or
inc
xor
mov
stc
jnp
adc
mov
push
cmp
sbb
daa
sti
sub
adc
aam
dec
rcll
in
adc
int3
pop
adc
sub
jl
pop
out
leave
or
xchg
iret
shl
xor
ss
xchg
je
xlat
aam
sbb
or
mov
push
pop
or
cmpsl
pop
dec
push
inc
fidivrl
int3
mov
mov
popa
int3
addr16
pop
outsl
popf
push
es
mov
and
fdiv
lds
lcall
push
data16
or
std
mov
je
or
scas
lahf
repz
jg
cmpsl
xchg
xor
scas
mov
outsb
xchg
mov
sub
fdivs
hlt
in
mov
mov
xchg
mov
insb
stos
push
scas
rcl
mov
pop
xchg
daa
dec
jns
cmpsb
mov
xchg
cmp
into
jmp
pushf
sbb
sub
out
pusha
mov
aam
add
dec
lds
cmc
mov
mov
rcrb
inc
jge
xchg
rcrb
mov
stc
mov
pop
push
dec
test
lods
mov
add
int
test
popw
sub
sub
mov
inc
pusha
lock
test
sub
add
jb
cld
ss
push
or
fwait
test
xchg
fs
popa
mov
call
dec
sbb
mov
jns
fadds
mull
out
add
mov
adc
rorl
sbb
mov
push
imul
add
jg
lfs
rcrb
mov
inc
imul
test
sub
orb
xor
mov
fstpl
mov
cmp
aaa
in
fbstp
daa
rorb
fcmovu
insb
xor
mov
xor
push
call
mov
in
mov
sbb
pop
mov
mov
idiv
sub
lret
pop
cmc
sub
scas
adc
jne
inc
aas
cmp
and
mov
inc
mov
daa
mov
in
mov
cltd
inc
jecxz
push
mov
dec
jns
and
scas
push
sub
xor
sub
lret
xchg
ret
fiaddl
push
pusha
jmp
push
cmp
xor
in
std
cmp
bound
add
roll
lcall
mov
inc
adc
testl
aam
enter
out
inc
pop
sbb
add
movsl
lock
jno
dec
out
test
pop
push
add
jle
and
inc
jns
push
test
ret
push
fcomip
lahf
jno
pop
adc
push
mov
hlt
mov
stc
in
mov
lcall
jecxz
mov
je
xchg
mov
jge
incb
loop
fildll
in
movsl
pusha
in
cmpsl
adc
inc
mov
bound
mov
dec
mov
pop
sub
dec
pushf
mov
pop
cmp
aam
js
mov
push
fdivrl
add
dec
enter
xchg
es
push
jbe
mov
movsb
cmpsl
popa
jg
fimuls
adc
frstor
inc
sbb
iret
jnp
inc
fidivrs
pushf
sbb
clc
and
dec
dec
and
mov
ja
cmp
ja
in
out
nop
call
sbb
sbb
or
je
push
fmuls
into
jnp
outsb
inc
push
pop
mov
dec
or
pop
mov
outsl
into
ljmp
adc
mov
adc
outsl
xchg
ljmp
pop
and
mov
jp
inc
repnz
lods
scas
mov
jb
lods
push
movsl
xor
or
push
mov
sbb
pusha
push
add
xchg
popf
out
jge
ret
movsb
mov
inc
xor
mov
jge
lods
jb
jb
push
sub
jns
pushl
xor
and
mov
mov
dec
cmpsb
mov
rorl
jb
lahf
xchg
mov
shll
mov
fcomps
xor
mov
in
xchg
push
cmpsb
push
mov
mov
insl
mov
test
xchg
repnz
cs
dec
xchg
jmp
jl
shrl
or
pop
mov
mov
lock
sbb
das
lea
push
push
cmpsb
cmp
fwait
mov
sbb
push
stos
add
in
jo
fdivrs
fistl
cli
add
add
jp
arpl
popa
loop
int3
mov
fwait
lret
sub
sub
sbb
imul
loop
iret
popf
das
xor
cli
and
in
outsb
inc
adc
jno
jbe
aad
outsl
popf
sbb
jb
xchg
aaa
sarl
int
adc
adc
and
add
or
or
pop
pop
test
inc
nop
pop
cmp
push
and
stos
xor
hlt
jnp
and
mov
push
or
xor
cwtl
fsubrs
jb
out
mov
xor
andl
dec
jne
lods
les
push
out
sbb
test
std
dec
test
rcrl
aad
cld
mov
mov
ljmp
scas
adc
cwtl
popl
jge
mov
sbbb
mov
mov
std
stos
add
or
mov
sub
in
add
sub
inc
popa
fimuls
es
rcll
dec
xor
shrl
sbb
mov
dec
aaa
pop
mov
test
inc
addr16
loop
outsb
out
cmp
mov
filds
mov
adc
cmp
sbb
icebp
jae
cmp
cmp
fwait
rorb
push
mov
adc
jl
xor
ljmp
mov
xchg
cmp
bound
fwait
out
imul
jnp
data16
jg
xchg
pusha
mov
xchg
jns
jge
adc
addr16
dec
leave
mov
int3
xor
icebp
icebp
js
icebp
repnz
lea
jecxz
pop
sti
mulb
test
and
sub
cmp
mov
outsb
sarl
fsubrl
pop
cli
fisttpll
pop
jge
and
xor
loop
push
jmp
subl
aaa
sub
or
mov
repz
mov
push
fwait
or
cmp
mov
hlt
inc
repnz
jl
push
call
sarl
stos
repz
clc
push
shll
adc
out
imul
jo
clc
insb
lcall
add
inc
into
fcompl
cmp
test
es
inc
hlt
aad
es
jbe
dec
push
movsl
in
dec
sbb
jae
sbb
ret
test
xchg
inc
sti
cmp
icebp
mov
and
mov
pop
add
jmp
push
repnz
aas
cmpsl
call
adc
mov
jo
mov
insl
das
popa
pop
add
int
pop
popf
loop
xor
push
push
repz
and
push
shlb
inc
scas
and
insb
jmp
into
adc
dec
push
mov
loop
sbb
dec
shlb
aas
jge
sbb
mov
pop
shrb
xchg
pop
mov
mov
ja
mov
cmp
sbb
pusha
inc
or
xchg
subl
daa
jae
cmp
jle
fucomip
aad
mov
scas
lods
inc
mov
enter
data16
cmp
jge
das
inc
dec
pop
fcoms
and
xchg
fdivp
arpl
cwtl
mov
iret
mov
test
lcall
push
mov
fmuls
jbe
inc
jle
outsl
sbb
add
lods
aam
pusha
and
cli
mov
test
jbe
lahf
es
sbb
arpl
inc
sbb
lret
inc
test
in
int
lcall
in
ret
mul
popa
sbb
jb
lds
fists
cli
cmp
shrb
addr16
ljmp
inc
add
sbb
aad
stos
push
sahf
testl
popl
jle
fists
jo
daa
mov
adc
stos
cli
add
jno
push
xor
inc
mov
jo
mov
lea
pop
and
loop
insb
addr16
jg
mov
mov
jmp
les
hlt
add
jmp
fs
lcall
sbb
xlat
stos
fiaddl
call
or
jbe
jmp
cmpsl
inc
std
iret
sbb
push
mov
sub
mov
mov
jb
or
xlat
cmpsl
sub
test
dec
pop
push
push
shlb
cmpsl
roll
jecxz
sbb
mov
pop
and
pop
or
push
sub
or
stos
jge
mov
xchg
cli
gs
xchg
jbe
jmp
std
pop
jl,pn
sub
adc
pop
adc
data16
push
lret
cmpsl
leave
ja
xchg
dec
loop
sbb
js
inc
xchg
dec
outsl
insb
dec
int
in
and
pop
popa
imul
inc
shlb
movsb
inc
pop
sub
cmp
and
xor
pop
data16
pop
inc
mov
aad
inc
dec
stos
xlat
lea
dec
rolb
int
mov
data16
jnp
hlt
inc
jmp
rcrl
mov
nop
fidivrl
gs
sbbl
jo
out
scas
mov
jg
dec
xchg
scas
adc
test
xor
sarl
add
iret
stc
ret
sahf
sbbl
cmp
leave
sub
mov
adc
mov
sub
lock
xchg
cmpsb
and
popf
mov
nop
inc
and
mov
jne
xchg
cld
es
dec
lea
lcall
in
test
je
movsb
or
std
adc
sahf
lret
stos
fistpl
mov
loope
pop
int
mov
pop
out
es
call
jg
xchg
pop
inc
cmc
jg
sbb
fstps
mov
imul
cmpsb
loopne
add
push
fbstp
adc
cmp
addr16
and
test
inc
fcompl
inc
add
mov
aas
sti
mov
cmp
enter
test
jo
test
shrl
cmc
jmp
dec
outsb
dec
fcos
lods
fcoms
roll
or
loopne
sbb
jp
outsl
stos
xor
or
jne
mov
loope
mov
lods
push
mov
out
int
dec
push
or
mov
mov
mov
data16
mov
sbb
mov
inc
std
ja
xor
sub
sbb
cmp
and
or
mov
shrl
inc
pop
xor
jo
std
aaa
rorw
dec
xchg
clc
jbe
mov
add
popa
mov
imul
cwtl
push
outsl
mov
lea
clc
imul
push
cmpsb
fisubrs
in
pop
in
test
adc
xor
rclb
pop
testb
mov
add
les
push
jno
sbbl
lcall
mov
ret
fdivl
leave
add
icebp
mov
popf
ljmp
pop
clc
pop
inc
push
adc
inc
enter
cs
aas
inc
push
mov
fcmovbe
cmc
jo
xlat
test
lret
outsb
test
lods
es
js
mov
rol
pop
dec
movsb
jo
iret
inc
xchg
cmp
icebp
es
and
aaa
fsubr
jb
inc
xchg
lea
pop
cwtl
cld
popf
mov
int
mov
aaa
xchg
xor
push
sub
ds
pop
pop
jb
lret
stos
pop
into
cmpsl
pop
mov
mov
and
lock
lahf
lahf
mov
lds
cli
mov
mov
push
jno
or
mov
and
lods
add
jmp
stc
cmpsl
jnp
or
pandn
cmp
push
jmp
lds
lock
and
shll
pop
into
gs
bound
pop
je
xorl
xor
cs
imul
repnz
cmc
sahf
fnstsw
mov
inc
mov
cmpb
bound
shll
xchg
lods
xor
leave
mov
jmp
push
shl
mov
pop
test
jg
bnd
ljmp
or
test
or
sahf
push
mov
pop
mov
push
and
pop
mov
add
enter
mov
adc
cmc
jg
pop
or
or
mov
mov
xchg
push
pop
into
imul
aam
loop
mov
addr16
mov
pop
add
testl
lret
push
subl
test
add
lea
sbb
cmp
test
xor
movsb
push
mov
js
and
fisttpl
mov
ljmp
lock
divl
cmp
mov
lods
pop
sbb
xchg
jl
idivl
icebp
pop
stc
jae
mov
jecxz
and
fidivrl
jae
mov
popf
cmp
loope
stos
dec
aam
mov
clc
mov
rolb
lret
mov
in
inc
mov
stos
mov
aaa
call
icebp
outsl
jl
inc
fsubs
jb
test
add
jns
pop
imul
repz
es
aaa
lds
lahf
mov
fadds
jl
notb
push
adc
xchg
js
aad
adc
jbe
sbb
or
push
dec
adc
test
fistpll
fdivrl
shrl
in
mov
jb
mov
push
pop
mov
mov
sti
sbb
inc
rorb
in
dec
fldcw
mov
pushf
incb
cmp
scas
inc
or
xchg
sbb
lea
sahf
inc
andl
popf
in
push
mov
mov
push
fs
pop
pop
arpl
sahf
jle
mov
icebp
xchg
gs
jb
fwait
dec
arpl
push
pop
roll
mov
popf
mov
sbb
lcall
dec
aas
xchg
aas
jg
das
pop
dec
xor
enter
aas
mov
xor
lea
mov
ja
repz
mov
sub
push
aad
xchg
pushl
ret
int3
out
in
push
mov
out
movsb
or
movsl
aam
subb
rcrl
and
cltd
mov
add
es
ret
imul
push
into
cmp
idivb
add
loopne
mov
outsl
out
outsl
dec
mov
repnz
cmp
pop
dec
jbe
fwait
push
add
int3
jo
mov
sub
jne
out
xchg
mov
jns
mov
mov
aas
cmp
dec
mov
push
arpl
outsl
outsb
mov
adc
jno
push
mov
lods
pop
push
addr16
jp
or
pop
add
mov
mov
and
faddp
pop
iret
fimull
iret
hlt
cmp
xor
push
cmpsl
add
inc
nop
jle
ds
pop
push
push
cmp
push
mov
stos
push
mov
mov
clc
aad
cld
jge
add
cmp
cltd
sub
add
push
sbb
dec
mov
sub
dec
add
and
into
iret
push
loop
jmp
popl
mov
repz
mov
inc
sbb
push
iret
imul
or
gs
or
iret
out
inc
rcrb
mov
mov
dec
mov
dec
jne
lcall
push
popa
les
and
inc
inc
dec
xchg
cmp
sbb
mov
loope
lret
inc
sub
cmp
jp
sbbl
inc
fiaddl
outsl
inc
cmp
mov
push
sub
jns
test
imul
cltd
data16
push
notl
push
bound
adc
jl
and
out
inc
les
sbb
loope
loope
pop
inc
icebp
pop
lahf
jnp
inc
mov
adc
cmpsl
mov
call
jns
sub
sub
lcall
jns
pop
nop
fcoml
cmpsb
cltd
inc
fists
test
sub
jl
dec
adc
fmuls
cmpsl
push
push
repnz
inc
adc
aaa
decl
or
sbb
xchg
sti
inc
test
mov
dec
dec
dec
lea
lock
scas
sbb
outsb
mov
lods
jp
xor
movsb
mov
jbe
add
fsubl
fildl
jmp
cmp
fwait
and
dec
sti
sbb
stos
xlat
cltd
add
out
adc
pop
xor
inc
lcall
sbb
daa
or
fldenv
push
shlb
pop
in
aaa
adc
imul
xchg
xchg
push
cmpsb
insb
inc
fstl
icebp
xchg
jb
sub
je
jno
push
pop
add
push
cltd
jle
stos
icebp
xchg
cmp
sbb
test
jge
sub
adc
out
leave
popl
inc
repnz
xchg
stc
leave
mov
mov
cmpsl
xchg
mov
in
in
or
add
fisubs
mov
xor
pop
add
leave
mov
outsl
sub
stc
mov
add
mov
scas
cli
sub
test
mov
mov
jbe
push
jnp
xchg
fstl
je
mov
mov
pop
xor
mov
insl
in
sub
cwtl
adc
into
insl
sub
ljmp
mov
daa
dec
push
mov
jae
xchg
push
dec
pop
call
ss
jge
call
xchg
insb
aas
scas
cmpsb
out
pop
icebp
mov
test
cli
scas
ret
jmp
out
rcr
mov
xchg
mov
popa
sti
mov
fsubrl
xlat
push
rorb
xchg
in
jae
jae
fwait
mov
dec
sub
lret
addr16
add
es
mov
push
aas
mov
cmc
dec
inc
and
imul
shr
jg
shl
cmpl
lods
push
dec
pop
lret
dec
sub
fisttps
cld
pop
add
adc
bound
sbb
cmc
ficoml
add
dec
and
mov
pop
pop
sbbb
jne
fsubl
out
stc
and
test
stos
int
jns
ljmp
cmp
loopne
push
out
and
stos
inc
addr16
xor
inc
aaa
cmp
push
sub
xchg
lock
out
ja
mov
cli
cmp
les
jp
cld
or
adc
inc
stos
arpl
bound
rorb
rclb
jl
sahf
sbb
daa
mov
mov
lahf
cli
lahf
loope
pop
stos
mov
sbb
mov
jp
lods
cmp
stos
repz
jno
loopne
mov
jl
push
pop
or
ret
pop
imulb
pop
push
arpl
mov
loop
mov
fcompl
xchg
jg
add
lock
adc
mov
sti
lods
addr16
sahf
ss
rclb
sub
sub
xchg
rcr
les
cli
aaa
push
mov
mov
add
out
outsl
ds
cs
pusha
push
cmpsb
inc
cmp
dec
push
lods
lahf
sbb
jb
ja
xor
pushf
pusha
ljmp
xor
ret
inc
push
icebp
in
hlt
inc
stc
into
call
inc
pusha
popl
jp
jne
mov
add
mov
icebp
in
mov
or
sbb
lcall
lahf
jg
lcall
insb
leave
push
lret
adc
jl
cwtl
mov
in
scas
mov
pop
dec
iret
jp
sbb
pop
cmp
lods
push
paddsb
cs
dec
xchg
das
or
iret
lret
or
mov
fucomi
jp
mov
call
fistpll
rcll
out
enter
mov
xchg
fbstp
jb
mov
ret
dec
cli
lods
dec
lea
mov
hlt
inc
test
mov
insl
leave
rorb
cmpsb
cmp
pop
adc
insl
dec
pop
addr16
mov
add
scas
jo
sub
out
or
cmp
adc
mov
out
sub
adc
test
call
imul
xor
stc
test
movsb
sbb
or
ds
fneni(8087
negb
int
push
ljmp
lcall
or
pop
cld
jae
in
mov
lock
incl
insb
and
sbb
test
add
mov
fwait
icebp
call
sti
adc
jecxz
fcmovu
xchg
ss
das
xor
les
fbld
scas
test
rcrb
dec
movsl
loopne
cmp
mov
jge
ljmp
test
push
jmp
xchg
call
cld
jge
into
and
push
inc
mov
nop
add
std
adc
mov
rol
add
pop
leave
hlt
fcom
shll
mov
sarl
push
ficoml
push
push
ljmp
dec
add
pop
sbb
jle
dec
pop
data16
pop
mov
insl
mov
push
out
pop
test
push
jp
jnp
pop
ss
inc
pop
cmp
loopne
mov
and
jno
ret
or
mov
lahf
mov
dec
nop
mov
out
loope
aad
push
pop
inc
testb
sbb
sti
or
clc
mov
mov
inc
nop
cmc
inc
and
mov
and
test
xor
leave
insl
push
xor
mov
pop
iret
gs
ret
ss
xchg
sbb
lods
lods
or
or
push
and
aad
push
outsl
shlb
or
test
loopne
insb
pop
push
stos
ss
xor
mov
jg
stc
cmp
fcoml
into
aam
cs
xor
cmp
adc
mov
dec
mov
adc
and
fdiv
xchg
inc
pop
mov
mov
or
cmc
daa
add
dec
jl
xchg
nop
xchg
dec
icebp
xchg
movsl
jne
cmp
insb
mull
popa
fdivrl
dec
js
mov
in
bound
dec
scas
cltd
xor
cmp
xchg
mov
pop
shrb
int3
mov
or
nop
push
fisubl
js
jb
imul
lahf
jg
fmul
sbb
cli
fcoml
loopne
imulb
dec
mov
push
jle
adc
adc
mov
sahf
aam
mov
sbb
jo
mov
mov
cld
out
cltd
lcall
loopne
inc
sub
cmpsb
test
fcmovnbe
les
and
dec
je
adc
cltd
adc
push
sbb
loope
xchg
pushf
mov
push
mov
push
xchg
jno
xchg
xor
call
jns
xchg
cmpsl
daa
jo
rcll
cmp
sbb
or
cmpsl
cmp
fadds
sub
sbb
imul
hlt
mov
mov
das
out
jns
jno
outsl
and
mov
mov
sub
int
repz
jb
cmp
pop
fsubs
test
mov
pop
inc
cmp
jbe
sahf
jle
sub
lock
mov
adc
mov
ljmp
push
enter
lahf
movsl
sbbl
cmp
shll
xor
push
inc
and
jl
sub
and
stos
xchg
out
or
mov
cli
movhps
xlat
and
aad
sub
das
es
cli
in
mov
lcall
cli
popf
ret
xor
mov
ljmp
dec
les
idivb
shlb
add
adcl
ret
adc
sub
jnp
sub
pop
sub
inc
in
sarb
or
pop
pop
repnz
test
loopne
lock
dec
fcomp
gs
movsl
sub
adc
lds
rcl
in
push
fwait
inc
orl
dec
dec
cmp
mov
popf
repnz
sar
jnp
push
push
call
push
fmuls
cwtl
cltd
mov
lods
jmp
aaa
jns
scas
add
add
and
loope
mov
pop
sbb
mov
out
mov
scas
xchg
fcomps
push
jnp
clc
push
or
ss
and
inc
and
push
sbb
cmpsb
sub
loope
mov
mov
dec
cld
mov
lret
push
add
push
mov
cmp
mov
mov
lret
and
fnsave
stos
sbb
cltd
fidivrs
fisubrs
stc
movsb
jo
and
push
adc
lret
mov
into
cmp
and
mov
test
xor
push
adc
in
test
or
mov
pop
ret
sahf
push
das
rol
insl
mov
inc
out
fwait
lods
es
test
iret
lret
xchg
mov
dec
stc
ja
ret
aas
or
int3
cmpb
loope
xchg
inc
jge
int3
mov
mov
xchg
xor
nop
imul
sub
sub
mov
outsb
pop
loopne
dec
cmc
dec
pop
and
in
jno
int
xchg
stos
mov
jns
xchg
adc
fisttps
ss
cli
inc
stc
jp
and
or
lret
inc
rclb
out
insl
cltd
mov
pusha
ds
cmp
add
outsl
ficompl
add
lcall
aam
push
pop
adc
pop
insl
sti
dec
addr16
ret
je
subb
mov
xchg
negl
xor
mov
jns
push
int3
mov
shrb
push
pop
repz
fmull
aad
rol
jg
negl
jnp
dec
mov
out
repnz
cmpsb
out
mov
repz
ljmp
lcall
in
stos
jmp
cmp
xor
mov
fwait
stos
add
int3
jmp
std
dec
inc
mov
out
dec
sub
loop
push
lcall
push
fiaddl
mov
dec
add
jno
data16
roll
or
insb
cmpsl
les
push
cmp
rcrb
dec
or
icebp
dec
into
dec
pop
add
add
lahf
fwait
jne
pop
popl
sub
mov
inc
cltd
inc
adc
lret
lahf
test
mov
adc
lcall
test
mov
lcall
loope
in
sbb
cwtl
xor
push
fldt
inc
repnz
or
sbbb
lock
xor
cwtl
sarl
test
cmp
xchg
cmp
arpl
or
es
out
add
pop
cmp
fidivrl
dec
jl
in
mov
adc
stos
and
pop
js
loopne
pop
jmp
ret
add
jmp
stos
adc
xchg
fsubs
adc
lahf
sarb
xor
pop
push
jno
test
stos
pop
jbe
adc
cli
jno
out
jbe
dec
clc
fldcw
jp
push
inc
lock
and
imul
inc
xchg
mov
test
ljmp
jmp
jnp
dec
fwait
ret
or
add
imul
fsub
cld
add
inc
jne
call
xchg
adc
lods
pop
push
xor
mov
sbb
inc
or
pop
cmpsb
adc
dec
xchg
dec
out
or
lock
fsubl
hlt
sbb
push
addl
andl
aad
sahf
jecxz
clc
xor
cld
xchg
pop
pop
aaa
inc
cltd
dec
dec
xchg
adc
lret
pop
xchg
das
mov
mov
mov
neg
jecxz
sub
fdivr
jnp
push
sahf
mov
xor
scas
inc
sar
add
mov
jmp
pop
insb
or
push
movsb
or
notl
clc
xor
sbb
sbb
insb
fidivl
lods
cmp
jle
negb
mov
xlat
mov
jge
inc
mov
or
pop
push
aaa
pop
pop
and
popf
cltd
cld
and
adc
cmp
dec
cli
mov
push
pop
loopne
cmp
lds
mov
lods
jmp
inc
xchg
mov
sub
xorl
push
fimull
stos
dec
inc
sub
lods
mov
stos
ss
mov
xor
or
add
xchg
rcrb
sti
jecxz
dec
sub
out
dec
inc
mov
push
je
mov
neg
rorl
mov
sub
fistpl
mov
into
dec
imul
ficomps
jbe
inc
add
xor
xor
es
dec
pop
cmp
fldt
dec
iret
or
ret
aas
in
arpl
or
enter
jl
mov
scas
dec
push
mov
cmpb
mov
pusha
std
mov
xchg
sahf
cld
pop
xchg
andl
mov
scas
fwait
lret
in
sbb
push
movsb
cli
cmc
mov
nop
lcall
adc
dec
rcrl
mov
test
mov
pop
scas
add
pop
ret
repz
mov
test
repz
fistps
dec
shlb
xor
lods
push
xor
lcall
adc
nop
lcall
inc
lahf
mov
iret
aas
sti
pop
push
mov
cmpsl
iret
adc
std
addr16
sub
dec
rclb
stos
push
ret
xchg
sub
insb
mov
cmc
push
push
and
filds
mov
cmpsl
sbb
fimull
pusha
pop
pop
inc
push
jnp
loope
add
or
sub
in
sbb
push
adc
iret
nop
hlt
cmp
sub
shr
les
sub
xor
fcmovnbe
in
lret
pop
icebp
mov
and
outsb
mov
rclb
lcall
push
jnp
inc
jmp
loop
pop
dec
aas
xchg
or
cltd
cmp
pop
or
sub
mov
add
xlat
pop
shl
loop
mov
and
iret
sbbl
push
mov
popf
add
and
mov
popf
inc
bnd
push
and
outsl
add
add
lahf
sbb
sub
xchg
pushf
fwait
dec
loop
movsb
xchg
pop
mov
arpl
sub
and
int3
pop
pushf
shll
cmpsb
xchg
inc
sbb
push
xlat
aam
mov
push
or
jg
sarl
cld
xchg
dec
sbb
dec
fs
push
jecxz
dec
cmc
push
add
pop
rcl
out
and
and
repnz
loop
or
jno
lcall
and
mov
sbbl
jae
add
lea
mov
movsl
mov
ljmp
jmp
xchg
mov
repnz
xchg
jp
and
xor
mov
out
test
rorb
pop
rcrb
lret
orb
aaa
enter
pop
push
sbb
stos
mov
fwait
icebp
je
xor
into
sbbb
cli
dec
in
inc
loope
xlat
leave
movsb
nop
lahf
or
push
push
adcl
sbb
pop
in
mov
xchg
add
xchg
rorb
sub
fildl
lret
dec
sbb
popf
sbb
inc
xchg
jl
orl
or
test
xlat
testb
cmpsb
mov
daa
inc
mov
mov
dec
inc
ss
insb
xor
push
xchg
std
adc
ret
sbbl
push
in
cwtl
dec
inc
out
mov
iret
movsb
arpl
push
push
push
fadd
mov
mov
add
arpl
shlb
idivb
push
fstps
xor
mov
mov
gs
adc
inc
rorl
cmp
rclb
aas
xchg
pop
daa
inc
dec
out
mov
fldl
push
jno
jae
movsb
push
xor
scas
icebp
clc
fsubs
subl
pop
mov
icebp
adc
cmp
sbb
rolb
mov
mov
cld
mov
pop
loop
es
stc
mov
sub
shr
sarl
repz
es
js
stc
mov
les
or
idivl
mov
fidivl
mov
dec
push
sbb
test
sbb
mov
mov
jne
adc
sbb
daa
dec
xchg
push
test
pop
mov
pushf
pop
and
xchg
sti
addr16
out
loop
movsb
and
mov
adc
cmp
lret
sbb
insb
mov
or
das
cmpsb
clc
mov
scas
pop
orb
or
xchg
outsb
xor
xchg
push
and
jmp
stos
pushf
stos
mov
aas
and
xchg
mov
into
rorb
sbb
lea
cmpl
jae
stc
test
frstor
nop
mov
outsl
adc
jge
or
sbb
jae
adc
ret
adc
sub
or
ret
sub
fsubrl
mov
jecxz
sub
lods
cltd
cmp
gs
ljmp
mov
xchg
sub
rcrb
test
cmp
in
add
push
std
mov
pop
out
pop
loope
mov
xor
push
daa
mov
dec
int3
mov
jge
fdivs
xor
dec
aam
fcmovnb
iret
pop
push
push
hlt
in
cmpsb
sahf
loop
test
fdiv
jl
dec
les
push
sahf
mov
dec
inc
js
in
popa
cli
sub
mov
push
cmp
dec
and
fwait
shr
repz
add
pop
push
add
xor
js
and
xor
loope
adc
jne
js
xorl
cmp
xchg
pop
xor
in
out
dec
lahf
push
and
or
jnp
cmpsl
jne
dec
out
jae
fstpl
add
mov
enter
jl
jle
fnstcw
sarb
test
inc
adc
bound
or
pop
fisttps
in
jge
daa
sub
lock
in
push
xor
jnp
xchg
loop
jae,pn
jnp
jo
mov
jp
jo
lock
and
adc
into
loopne
into
divps
shl
popa
push
push
push
pushl
sbb
stos
test
pop
pop
add
sub
lea
sti
bound
inc
push
je
test
loop
xorb
or
pop
jbe
mov
sub
mov
fdivs
dec
xor
mov
nop
loopne
mov
fcomps
ret
add
loope
jo
movsb
adc
sbb
loop
lea
in
call
jbe
push
mov
outsl
scas
dec
pop
cmpsl
negl
pop
add
iret
aaa
and
out
in
js
sub
fildl
mov
inc
bound
adc
test
data16
mov
or
push
pop
pusha
test
xchg
andb
mov
sub
lret
lea
jb
mov
mov
adc
xchg
out
pusha
gs
mov
or
jge
push
cmpsb
mov
pop
movsb
out
mov
int
hlt
push
adcb
aad
mov
push
outsl
add
xchg
push
push
call
mov
cmp
sti
repz
jbe
inc
inc
inc
sti
std
addb
stc
mov
in
cmp
insb
mov
mov
es
sub
xor
frstor
lea
in
out
inc
loopne
push
shrb
inc
adc
out
pop
aaa
xlat
jmp
lods
adc
fmul
adc
mov
fidivrs
xchg
inc
sbb
testl
mov
cmp
loopne
xor
mov
repnz
fisttpl
sub
into
xlat
loope
lcall
push
add
xor
jp
cmp
sbb
cmp
mov
adc
jl
or
push
mov
movsb
rcrl
inc
xchg
push
aam
lret
mov
cltd
and
lea
mov
cmp
mov
out
pop
pusha
xor
fs
xor
decl
popf
add
test
sub
dec
push
inc
push
outsl
xchg
repz
mov
mov
leave
push
stc
xor
xchg
sub
or
test
ja
aas
jbe
fisubl
sub
daa
mov
sbb
fldl
fsts
cs
mov
lahf
pusha
mov
mov
lret
jle
enter
xor
cmpl
jle
in
insl
push
stos
filds
and
sbb
cli
ss
loopne
int3
push
test
cs
testb
hlt
aad
dec
cmp
mov
popa
mov
or
in
stc
enter
adc
lcall
aaa
loopne
push
nop
jne
jmp
mov
xchg
sti
adc
shr
pop
jle
mov
inc
mov
mov
mov
pop
push
ffreep
fidivrl
sti
adc
aad
sub
test
mov
test
lret
pop
sub
out
std
mov
or
mov
xchg
rorl
jg
cmp
jl
and
dec
mov
and
je
xchg
mov
jae
outsb
jnp
ficompl
inc
addr16
xchg
sub
loope
rcl
inc
and
add
lods
notb
ss
stos
lock
mov
push
or
stos
inc
push
xchg
cs
and
jecxz
add
dec
pop
dec
bound
jae
sbb
roll
hlt
xchg
dec
repz
xchg
dec
shrl
fnstenv
sti
xchg
dec
daa
add
gs
pop
sbb
ret
lds
cmc
cltd
sbb
push
or
imul
and
jnp
pop
addr16
mov
jae
and
pop
jno
scas
cli
xorl
lds
ficoml
add
sub
pop
mov
sub
mov
or
cmp
sub
cmp
sub
push
out
xchg
xor
xlat
adc
xor
inc
int
aas
repnz
stc
clc
pop
push
out
sahf
ss
repnz
mov
add
lods
or
addl
cld
sub
arpl
das
clc
mov
out
leave
xchg
push
imul
fldl
stc
stos
insl
jmp
loope
push
jae
mov
mov
repz
cmpsl
jnp
fdivr
popa
fsubrp
inc
cmp
or
mov
mov
xchg
push
sub
js
popa
mov
mov
popl
dec
sbb
sarl
mov
out
dec
enter
into
mov
arpl
sahf
lock
in
mov
in
sub
mov
incb
iret
fldenv
mov
mov
fiadds
cmp
sub
leave
xchg
push
mov
int3
inc
mov
adc
sbb
mull
adcb
inc
xorb
shrb
or
pop
in
adc
daa
xchg
and
mov
or
sarl
ret
fsubrl
add
loop
jns
and
mov
das
push
outsl
push
adc
jo
jnp
xor
push
pushf
mov
pop
repz
sub
mov
push
ljmp
mov
push
shlb
je
imul
pop
push
fadds
outsl
push
jp
jp
call
aam
cld
dec
jb
mov
fistpll
mov
xchg
data16
mov
mov
mov
xchg
push
arpl
push
jne
xor
inc
setae
cmp
mov
mov
scas
mov
ror
sbb
push
add
jl
cmpsl
pop
bound
bound
push
add
adcl
mov
mov
xor
popf
xchg
aam
and
and
mov
out
int3
cmp
jmp
and
mov
hlt
sbb
cmpsl
push
lock
cli
sbbl
mov
mov
or
jnp
push
inc
cld
out
and
sub
mov
mov
daa
add
loop
fstps
xor
je
lret
mov
hlt
movsl
nop
fistps
shll
stos
pop
jbe
mov
adc
and
push
repnz
sarb
mov
lods
add
imul
lret
ret
cmpl
out
xchg
xchg
rcrl
xchg
mov
sub
xchg
lds
add
icebp
push
mov
xchg
jno
ljmp
pop
call
lcall
sti
jae
or
notb
push
scas
inc
push
scas
xlat
cmp
fwait
out
fstpl
out
sub
lahf
inc
enter
sarl
mov
inc
into
xor
mov
enter
iret
jb
adc
push
push
das
cwtl
lods
xor
in
or
int3
test
pusha
sub
fmull
lock
xor
imul
das
daa
inc
mov
mov
pop
cmpsb
cli
aam
mov
cli
rcl
outsl
or
loop
ror
adc
jg
movsb
and
mov
jns
or
je
lea
and
mov
add
jne
add
cs
mov
pusha
sbb
data16
xchg
fwait
mov
xor
jle
cmpsl
popa
lahf
cmp
es
xchg
icebp
jmp
mov
mov
lock
addr16
int3
mov
fwait
and
bound
lock
filds
mov
adc
xor
jns
xchg
and
mov
cmp
mov
or
push
mov
je
aad
mov
add
cvtpi2ps
stos
xlat
sahf
pop
jp
std
jbe
arpl
push
pushf
sbb
jnp
adc
and
push
jbe
fucomi
int
test
cmpsb
mov
xchg
out
add
loope
push
inc
adc
or
clc
and
dec
movsb
mov
and
dec
add
jns
sahf
xor
sbb
out
test
clc
sub
adc
push
add
stc
or
cmp
popa
stos
push
xlat
and
mov
inc
outsl
sub
loop
adc
clc
jb
xor
xlat
fwait
dec
pop
nop
pop
aad
inc
subb
xchg
sbb
fdivl
sub
inc
jecxz
sub
fistl
gs
outsl
decb
ds
dec
movsb
int
mov
ds
imul
and
out
adc
pop
adc
inc
add
or
jmp
fildl
stos
push
mov
loope
out
fs
cmc
popa
jmp
and
pop
rcll
jle
addr16
xchg
addl
roll
pop
xchg
std
bound
inc
into
xchg
jne
lcall
pop
scas
aam
cmp
outsb
push
adc
push
xlat
lods
and
pop
push
or
data16
nop
dec
ret
adc
les
arpl
push
mov
cmpsb
test
addr16
lds
pusha
cli
fwait
xor
mov
enter
sbb
loop
clc
sub
mov
xor
dec
pop
adc
test
mov
adc
fwait
mov
popa
nop
xor
test
aam
loop
jecxz
mov
out
addr16
add
subl
dec
mov
cmp
stos
sub
mov
xchg
stos
popf
xlat
xchg
xchg
test
ljmp
out
mov
xor
dec
icebp
mov
pop
jmp
pop
push
popa
repnz
cmp
cs
inc
mov
mov
push
inc
inc
subl
push
pop
cmpsl
cmp
ljmp
cmp
cld
push
mov
inc
cmp
lcall
jns
movsb
daa
into
xor
dec
xchg
mov
mov
stos
lahf
lret
jnp
cmc
lea
out
int
cmc
push
fsubr
jp
in
jg
pop
out
jge
mov
push
jmp
push
push
sub
mov
and
fldt
lea
mov
or
pop
xchg
jmp
jno
mov
dec
lcall
scas
out
xor
in
xchg
push
out
sub
xchg
dec
and
xor
sarl
pop
jmp
add
jmp
xchg
jmp
scas
stos
push
and
add
inc
cmp
out
test
cmp
add
in
jnp
sti
mov
rorl
cmp
and
fcompl
pusha
mov
ja
in
or
jnp
aas
or
inc
mov
sub
xchg
and
mov
inc
push
xchg
imul
loope
jns
cmpsb
ja
cmp
aaa
xchg
mov
mov
fs
hlt
fisttpll
scas
adc
pop
les
inc
inc
shrl
ja
in
cmp
add
dec
andl
sbb
push
jne
rcrl
xor
fmull
adc
sbb
das
xor
negl
inc
inc
pusha
xor
into
sub
or
setno
mov
xchg
nop
inc
clc
loop
jae
pop
adc
jae
mov
pop
loope
xor
dec
jne
dec
sub
or
cwtl
mov
adcb
add
add
mov
push
mov
imul
adc
ret
mov
bound
sbbl
out
mov
adc
mov
ljmp
out
xchg
xlat
xor
xchg
sub
xchg
push
jle
xor
mov
dec
roll
in
out
filds
orb
mov
or
daa
addl
mov
les
jg
lret
mov
cmp
icebp
jbe
cmpsb
dec
push
jno
lret
add
jno
aas
adc
xor
jp
imul
pop
shrl
mov
push
into
out
and
push
jae
dec
shll
xor
mov
rorb
mov
mov
arpl
repz
outsb
ror
in
mov
cmp
jmp
mov
test
stc
mov
repz
stos
cmp
jo
and
call
and
inc
shlb
mov
push
push
push
fimuls
stos
aaa
mov
push
int
jno
enter
sbb
fisttpl
sbb
pop
xchg
cmpsl
stos
mov
mov
mov
push
xor
punpcklbw
lret
adc
out
sbb
inc
aad
mov
dec
adc
sub
inc
ret
mov
pop
cwtl
fcoms
repnz
test
mov
roll
lds
mov
push
jge
mov
pop
adc
ret
movsl
jmp
add
mov
xchg
push
adc
repz
test
inc
xor
jge
jg,pn
and
add
cltd
loop
mov
mov
or
inc
mov
pop
dec
sbb
push
adc
outsb
cmp
mov
push
gs
mov
sub
out
andl
addr16
pusha
mov
test
jecxz
pop
addb
repz
cmova
cwtl
out
inc
lret
int
add
jmp
stc
mov
das
xchg
sti
nop
das
and
enter
push
xchg
pop
inc
xor
fs
mov
es
ror
sbb
fdivrp
and
jp
pop
out
mov
mov
dec
sarb
and
mov
add
cmp
mov
lods
rep
mov
jns
pushf
sbb
push
adc
xor
sub
outsl
arpl
call
sbb
cmpsl
repnz
int3
fcompl
cwtl
leave
and
xor
mov
outsl
cmp
jge
xor
adc
shlb
mov
flds
adc
fisubrl
push
and
pusha
cmp
mov
fs
xchg
mov
pop
dec
or
cmp
aam
jno
test
pop
insl
xchg
loopne
lahf
push
mov
dec
daa
sbbl
or
repnz
mov
movsb
cmp
pushf
popf
fdivrp
xchg
shll
jl
inc
jp
adc
inc
dec
jae
xchg
aam
inc
mov
push
rclb
pop
loope
fs
loope
fucom
add
mov
pop
clc
in
inc
pop
xor
sbb
and
iret
push
add
sub
int
pop
imul
push
loop
push
inc
adc
daa
xchg
mov
and
mov
sbb
or
and
xor
mov
rorl
xchg
xchg
clc
xor
popf
xor
js
ja
inc
dec
fnstenv
rcr
ja
test
mov
pop
fsqrt
jge
popf
mov
cmp
xchg
inc
xor
mov
mov
insb
int3
mov
mov
insl
dec
pusha
aad
test
jo
lods
int3
insl
and
pop
shr
rorb
ret
cmc
push
int3
mov
dec
inc
into
lahf
outsl
pop
mov
lret
ret
jb
jne
jge
sub
mov
jge
pop
cmpsl
cmp
gs
or
jb
mov
insb
ret
push
push
insb
adc
fistps
je
and
push
pop
xchg
mov
roll
xchg
aam
add
stos
je
push
cmpsl
adc
subb
jne
aam
mov
jno
xor
mov
ret
call
mov
sbb
inc
js
pop
insl
or
push
push
popa
repnz
inc
ds
xchg
call
jp
out
jge
inc
loope
dec
daa
xchg
call
mov
stos
mov
mov
in
fs
inc
arpl
cmp
pusha
pop
mov
int
mov
jb
stos
and
inc
add
stc
xchg
xchg
push
in
adc
loopne
les
imul
mov
repz
bound
add
aas
jnp
mov
jg
pushf
out
mov
lret
push
adcb
cmc
rcl
adc
lds
paddw
ret
insb
inc
cmpl
sbb
xor
fucomip
xor
movsl
les
jl
mov
pop
dec
test
int
and
divl
in
aas
cmc
std
jg
mov
test
clc
pop
cmp
ret
cmp
mov
stos
xchg
fbld
in
sbb
push
cmpb
sahf
jecxz
aaa
test
add
push
ret
aam
xchg
clc
mov
stc
and
lcall
jecxz
mov
adc
mov
pop
int
pop
enter
sbbl
add
cmpl
mov
fwait
sub
stos
sub
and
mov
lock
or
push
add
xor
jno
push
pushaw
ficoml
jle
mov
inc
mov
lock
pop
push
pop
test
sbb
imul
stos
movsl
xor
out
test
lcall
add
add
inc
jle
sti
mov
hlt
fcomi
ds
cmp
jnp
mov
js
xor
je
sbb
add
xchg
lret
push
out
aaa
inc
mov
mov
cld
xchg
popa
loopne
xchg
cmp
scas
jns
in
cltd
sbb
js,pt
and
xchg
push
pop
cmpsb
inc
lret
dec
pushf
add
fdivs
and
push
testb
xor
mov
add
mov
jne
ret
add
cmp
jbe
test
cmp
cmovp
push
cwtl
clc
cmp
inc
cld
lahf
mov
mov
cmp
xor
push
rorb
inc
int
jmp
lds
dec
jmp
adc
pop
push
test
clc
jl
jbe
or
dec
je
pop
push
ljmp
gs
xchg
push
gs
xchg
mov
test
jl
aad
dec
jo
test
loopne
inc
push
es
jo
das
cmp
xlat
aas
dec
adc
mov
das
inc
sarb
sbb
movsl
je
push
and
es
cmp
cmp
cmpsb
pusha
iret
and
mov
add
lods
jnp
xchg
jl
lret
xchg
and
jno
out
ret
or
gs
sbb
shrb
jecxz
or
ret
or
pop
les
dec
cmp
mov
sbb
enter
hlt
xchg
out
out
aam
js
jmp
jae
xor
out
cmpsl
addr16
sbb
sbb
mov
xchg
and
jecxz
movsb
ja
scas
xor
ret
je
fnstsw
jbe
jae
clc
mov
pop
ja
fdivrl
xor
cmp
adc
push
movsl
aas
xchg
add
or
mov
ret
sbb
cmp
rorb
inc
arpl
js
and
jbe
inc
inc
popf
and
dec
push
and
bound
fidivs
lods
gs
mov
cwtl
pop
xor
inc
movsl
pop
inc
jno
inc
push
das
push
cmpsl
hlt
mov
insl
cmp
xor
in
adc
shll
add
cmp
push
dec
inc
fidivrs
sahf
shlb
push
lret
pop
cmpsl
pop
and
scas
das
ror
push
xlat
cmp
add
sbb
mov
movsl
push
je
enter
pop
not
jne
inc
jbe
mov
leave
xchg
inc
inc
mov
push
and
movsb
outsb
jbe
ret
jo
outsb
mov
add
dec
and
inc
adc
cltd
xchg
cmp
js
daa
cltd
pusha
adcl
push
out
dec
out
cwtl
lds
stc
gs
int3
lock
aas
mov
xchg
push
add
stos
call
and
ja
call
shrb
dec
cltd
xlat
mov
pop
std
or
hlt
push
sbb
in
add
cwtl
das
jecxz
stos
in
inc
mov
cmp
hlt
mov
dec
out
xchg
push
adc
fisttpll
inc
cmp
js
out
add
ljmp
mov
rol
jbe
out
pop
push
js
cli
sarl
sti
out
enter
mov
sbbb
push
jnp
scas
cmp
xor
mov
jg
daa
cltd
arpl
sub
popa
lea
insb
jle
insb
inc
sub
pop
clc
outsl
lret
pop
ja
adc
xor
aad
std
gs
sahf
out
pop
push
push
bound
add
stos
ss
push
testl
sbb
sub
out
lahf
out
dec
test
rcll
xor
xchg
mov
adc
pusha
cs
sub
mov
fisttpll
push
scas
in
ret
int3
mov
sub
xchg
sbb
or
enter
mov
iret
clc
out
jns
fdiv
stos
add
xchg
mov
je
mov
mov
inc
sub
dec
orl
les
js
hlt
mov
dec
int3
mov
jae
js
push
shrl
fdivrs
mov
adc
stos
adcl
adc
daa
dec
xchg
mov
aas
mov
andl
and
xor
shlb
js
pop
pop
xor
mov
sbb
daa
stc
add
push
sbb
push
outsl
out
hlt
sub
push
jge
pushl
push
out
ss
outsb
and
add
repz
inc
repz
hlt
and
push
mov
movsl
daa
int3
mov
pop
cmpsb
jne
call
mov
push
mov
addr16
jge
ds
cltd
xor
jg
mov
sti
notb
push
cmp
andb
enter
shrl
or
stc
sbb
sbb
fidivs
leave
jecxz
inc
xlat
or
mov
or
pop
xor
imul
test
jecxz
sub
push
aas
shlb
das
xor
push
mov
loope
aad
mov
or
pushf
test
jne
cmp
inc
cmp
and
mov
out
add
loopne
dec
push
faddl
pop
xor
cld
cs
hlt
dec
call
sbb
divb
inc
fisubrl
push
adc
xor
sbb
cmpl
and
in
daa
or
or
sbb
xchg
imul
xor
push
sub
and
dec
pop
dec
aad
icebp
vpsllw
fcmovbe
xchg
imul
cmc
pusha
pop
ljmp
lods
jae
fcoms
popa
cmpsl
adc
arpl
pop
and
bound
aad
dec
xor
jl
pop
xor
mov
adc
lret
into
jmp
gs
jns
jo
ret
mov
xor
mov
adc
dec
movsb
cmpl
inc
fisubrs
out
jge
or
out
popa
lea
out
mov
rorb
push
dec
sbb
and
rcll
push
lods
rorl
cmc
test
sbb
lea
js
and
rolb
sub
in
xor
pop
clc
xchg
push
cmp
out
fidivs
pop
xor
imul
mov
pushf
sbb
mov
aaa
jl
pushl
jnp
inc
xchg
and
sbb
dec
popf
enter
mov
ss
push
mov
xorb
mov
out
das
pop
push
xchg
sti
mov
and
frstor
add
out
das
cltd
push
and
ret
inc
mov
adc
popa
lret
or
cmp
adc
cld
mov
in
dec
out
out
adc
rcrl
cs
adc
adc
pop
aad
repnz
fisubrs
stos
std
clc
mov
mov
fsts
add
mov
cltd
and
xchg
mov
or
shrl
into
or
dec
push
incl
mov
popf
pop
ret
test
andb
inc
xor
cmp
xor
pop
sbb
and
push
mov
mov
adc
sub
cmp
sbb
daa
cmpb
incl
repnz
in
fiaddl
int
xlat
gs
mov
fsubrp
xchg
push
jle
out
sahf
inc
test
movhps
fsubr
lock
sarl
push
shll
into
jnp
xchg
test
loopne
pusha
mov
dec
and
ret
mov
sti
lea
sbb
mov
mov
loope
rcl
fistpll
mov
add
cmpsl
out
pop
fsts
push
jge
dec
pop
divl
div
adc
in
push
lods
pmaxub
adcl
jbe
push
xchg
mov
mov
idiv
or
test
outsb
mov
test
mov
mov
lea
pop
cmc
loopne
icebp
lret
add
add
dec
jnp
lods
shl
out
gs
lock
cmp
stos
sbb
lods
xchg
sbb
sbb
mov
mov
cltd
xchg
inc
punpckhdq
loopne
jno
adc
das
imul
clc
jo
push
xor
daa
or
dec
sub
mov
test
aaa
insl
sub
dec
shll
mov
in
adc
lret
cs
movsl
outsl
sbb
sub
xchg
jnp
mov
push
test
loopne
into
ss
mov
and
aam
es
xor
gs
ret
ja
in
or
in
scas
ljmp
adc
ljmp
mov
cmp
pop
rcrb
sbb
and
push
dec
and
outsl
jb
scas
lods
daa
jb
test
sbb
repnz
test
ja
adcl
adc
inc
xchg
adc
outsl
hlt
cmc
lret
out
jae
aas
jmp
in
sbb
fisttpl
jp
mov
push
add
xchg
xor
and
xchg
hlt
fwait
lahf
insl
cmp
aas
mov
jne
cwtl
and
xchg
inc
xor
mov
fimull
jo
loope
stos
shrb
mov
fwait
out
dec
mov
test
and
sbb
mov
mov
add
insb
push
movlps
scas
das
add
jg
add
mov
sbb
cltd
fdivr
in
iret
cmp
jno
mov
aas
mov
fldcw
mov
in
scas
js
mov
pop
jp
sbb
leave
jb
in
out
mov
or
clc
push
adc
adc
addl
mov
inc
ja
or
cltd
jecxz
mov
jge
test
loop
mov
fidivrs
jbe
fdivrp
fldt
mov
movl
xchg
cli
push
insb
cmpsl
lahf
jae
in
into
movsl
mov
xchg
out
jle
xchg
adc
cld
mov
push
mov
xor
push
push
icebp
xlat
xor
arpl
push
movsl
imul
addr16
std
popf
mov
scas
mov
pop
inc
mov
jb
mov
mov
pop
repz
leave
mov
enter
shl
or
stc
mov
insb
cld
sub
aam
mov
jmp
jno
cmp
and
adc
push
orb
pop
push
xchg
and
in
aam
dec
dec
stos
hlt
jnp
imul
aam
xchg
pop
outsb
in
call
out
cmp
dec
addl
insb
arpl
add
shlb
mov
scas
lcall
mov
mov
pop
pop
cwtl
or
out
loop
mov
iret
cmpsl
out
lods
mov
int
pop
inc
lods
jg
and
movsb
lahf
add
fmul
orb
scas
push
push
push
pop
test
sub
cmp
addr16
mov
fcompl
lods
add
test
aas
xchg
xchg
cmpl
movsl
push
add
mov
xchg
adc
jne
cs
or
std
xchg
push
adc
fnsave
jp
xor
pushf
and
fwait
push
jne
jne
cmp
fs
pop
cli
orb
lds
jecxz
sub
repz
data16
jmp
iret
nop
jne
es
mov
push
cmp
lds
scas
jmp
mov
lds
xchg
ljmp
dec
repz
mov
push
xchg
sbb
ret
or
adc
daa
popa
aad
cmp
push
test
mov
std
push
ss
pushf
mov
or
mov
int
mov
insl
jbe
lods
mov
shrb
inc
testl
std
inc
add
inc
xor
fcmovnbe
jb
adcb
dec
out
add
test
pusha
roll
lret
mov
cmp
cmp
xchg
adc
lock
aaa
mov
or
push
and
xor
stos
push
arpl
arpl
sbbl
fwait
bound
pop
rol
clc
sarb
mov
inc
out
pushf
adc
pop
pop
clc
inc
loope
sub
and
mov
xor
sub
push
xor
fisttpll
or
sbb
ret
addr16
dec
cmpsb
mov
inc
add
jae
icebp
cwtl
rclb
add
adc
loopne
jne
pop
pop
cwtl
xorb
mov
hlt
mull
sub
mov
mov
mov
imul
pop
adc
adc
adc
fidivs
iret
addr16
outsb
and
dec
pop
loope
mov
lock
lods
into
lds
mov
dec
xchg
add
add
sbb
dec
and
push
sub
stos
mov
jge
enter
lds
icebp
jae
mov
push
or
push
mov
add
in
test
or
lcall
sub
add
clc
pushf
xlat
push
jg
push
lea
mov
ss
in
lahf
pop
mov
or
insb
stos
mov
data16
rcrl
cmp
push
jns
jmp
mov
push
int
mov
orl
cmp
mov
repnz
ret
stos
iret
and
mov
ds
or
test
jle
movsb
rcll
sbb
orb
ss
lret
int3
dec
xor
notb
mov
jne
outsb
aaa
lcall
jecxz
daa
outsb
mov
sbb
or
aad
adc
jl
aad
inc
or
push
out
mov
int3
mov
out
jmp
jp
mov
sub
rcr
test
jle
adc
add
lock
cmpsl
jecxz
lcall
in
lret
pop
jl
dec
popa
in
lahf
out
lods
loope
sub
lahf
pop
add
stc
in
mov
cmp
aad
pop
inc
cmpsl
out
mov
and
aam
inc
enter
out
imul
jl
sbb
push
das
and
notl
xchg
pop
pop
add
popa
test
test
jg
push
push
mov
std
cmpb
js
iret
adc
jecxz
sti
xchg
mov
mov
lea
ds
sub
test
stc
pop
inc
sub
inc
subb
popf
mov
xchg
decb
imul
add
push
xor
or
icebp
fildl
js
in
fdivr
fildll
arpl
arpl
mov
mov
addr16
jne
addr16
mov
in
fsubs
jbe
sub
jmp
aad
into
ds
call
mov
mov
dec
jl
xchg
clc
mov
add
lret
out
stos
in
or
mov
mov
jge
enter
pop
adc
pop
cltd
adc
dec
aaa
jbe
out
xor
inc
ret
aas
testl
or
test
inc
call
sub
sahf
add
pop
dec
dec
push
mov
cmp
bound
and
lods
add
fadds
or
stos
pusha
jb
mov
jle
rorl
test
enter
stos
fwait
jb
mov
mov
mov
ljmp
fsubrl
mov
inc
mov
loopne
xchg
mov
xor
or
sub
shl
stos
fiaddl
in
fisttpl
lods
fldt
jg
les
out
lods
lock
call
jne
fwait
mov
and
xchg
push
cmp
mov
add
adc
jo
or
pop
xor
fldt
mov
je
sub
cmpsb
add
add
insl
int
lcall
and
mov
pop
add
dec
and
mov
mov
lret
mov
in
cmc
cld
divb
sbb
mov
xor
xchg
and
iret
lock
cmp
mov
test
mov
lret
sub
pusha
arpl
mov
jae
lret
addr16
jae
dec
jmp
cmp
mov
mov
push
mov
mov
mov
lahf
dec
je
add
aad
sti
fs
mov
jg
mov
or
cmp
jnp
rcrb
push
insb
clc
push
dec
pop
clc
fldcw
insl
mov
stc
dec
stos
out
cmc
add
movsl
push
out
mov
sub
jl
inc
or
mov
jns
jmp
fxch
push
mov
js
pop
movsb
rolb
or
jl
in
mov
mov
mov
pop
jnp
aam
lahf
lahf
push
cmpsb
dec
outsb
shlb
das
mov
ljmp
mov
cmpsl
add
hlt
shrl
pop
mov
and
push
adc
adc
rclb
push
jae
test
imul
aas
jbe
mov
adc
in
jo
sahf
mov
gs
rcll
ret
inc
pop
test
cmp
stos
notb
dec
aad
popf
bound
add
cs
leave
clc
daa
and
loop
fidivl
cmp
mov
and
cmp
movsb
aas
lret
mov
stos
pop
sub
mov
cmp
or
or
lods
sbb
sub
paddsb
pop
lods
mov
pop
or
rclb
mov
jle
inc
xlat
out
mov
and
push
stos
jb
mov
cmp
inc
adc
inc
fwait
iret
clc
cmpb
push
dec
adcb
cmp
iret
hlt
inc
ljmp
adc
pop
xor
test
imul
addb
lods
push
cmp
cmp
pop
cltd
fistps
mov
sub
mov
mov
xchg
pop
js
mov
in
and
mov
loop
andb
orb
dec
dec
pop
movsb
mov
sub
sbb
xchg
movsb
mov
cmpsb
test
lods
in
loop
jo
nop
cmp
jmp
pop
add
inc
sbb
jnp
cwtl
outsl
cmpsl
out
push
cld
jmp
jo
ds
lea
inc
lahf
jne
std
outsb
fxch
stos
pop
cmpb
mov
in
cmp
jmp
jge
sbb
mov
cs
and
out
jle
adc
adc
pop
xchg
mov
xchg
cs
daa
push
mov
pop
popf
jmp
xchg
icebp
hlt
daa
push
adc
and
int
and
and
insb
ja
rorb
std
clc
jo
lahf
orb
shrl
xor
pop
lock
loop
mov
cld
inc
lock
popf
xor
sarl
imul
cmp
add
mov
dec
xor
sbb
scas
push
dec
add
cmp
cmpxchg
insb
sti
xor
aam
cmc
add
in
rcrb
leave
lock
ja
add
in
mov
mov
pop
mov
scas
mov
andb
push
cmp
xchg
inc
insb
mov
pop
in
outsb
test
add
addl
in
jp
loope
push
cwtl
lods
lea
add
in
push
in
add
adc
sbb
in
push
out
cmp
pop
add
jecxz
xor
pop
mov
xchg
sub
lret
cmp
test
in
mov
clc
arpl
mov
adc
aas
mov
adc
cmp
dec
call
iret
out
jmp
cmp
jmp
xchg
push
fdivs
jl
xchg
addr16
push
adc
pop
movsb
cs
push
fldt
jno
mov
outsl
pop
fnstcw
add
jns
mov
bound
mov
testl
pop
xchg
mov
adc
mov
xor
sbb
dec
inc
mov
mov
jg
sti
inc
fs
pop
push
pop
in
inc
xor
sub
or
xchg
bswap
sarb
dec
nop
mov
mov
dec
and
rorl
imul
sbb
mov
mov
dec
insl
rclb
nop
icebp
and
imul
xlat
and
push
cmc
outsb
or
jnp
lods
imul
imul
shll
in
jno
test
cs
xchg
cli
or
mov
movsb
sub
lods
in
sti
xor
rorb
mov
loope
dec
fwait
push
push
add
jae
sub
dec
push
xchg
scas
insb
inc
dec
cs
jmp
xchg
and
sti
jmp
dec
fdivs
daa
scas
mov
mov
pushf
icebp
cltd
ja
ss
stc
popa
mov
pop
inc
dec
push
addr16
in
xchg
jae
into
or
fimuls
or
and
dec
rcrl
loop
pop
mov
rol
lods
cmp
xchg
xchg
jge
pop
test
movsb
call
sub
lea
pop
das
movsl
ds
xchg
mov
xchg
addl
pop
sbb
xorb
mov
sahf
xor
dec
xchg
scas
dec
add
test
arpl
cld
xchg
xlat
pop
sub
and
int
bound
pop
push
jb
xchg
mov
push
movsb
ljmp
jge
jnp
jp
insb
loop
xchg
jmp
loopne
xlat
pop
lahf
mov
lds
inc
btcl
push
and
lock
add
xchg
insb
dec
ret
test
stos
frstor
shll
mov
sahf
dec
out
ja
adc
leave
outsl
jg,pt
insb
ret
jl
pop
pusha
iret
cmc
adc
mov
push
push
mov
ljmp
enter
sub
jge
test
jecxz
inc
aam
xchg
scas
orb
test
and
sub
cltd
ret
fnsave
clc
lahf
sbb
cmc
jp
mov
cmp
ret
sub
or
cmc
outsb
mov
popa
mov
es
mov
rclb
inc
xchg
add
push
addr16
lods
push
popa
sub
add
pop
in
imul
xchg
xor
mov
push
jg
sahf
push
mov
fwait
mov
push
xchg
push
adc
sahf
fstpl
int3
call
xor
fst
cmp
cli
outsl
repz
scas
mov
dec
xor
sub
sbb
mov
lods
clc
sbb
pop
xchg
lahf
push
pop
push
jb
repz
ret
adc
and
inc
je
dec
mov
scas
pop
mov
and
pop
adc
cmp
scas
push
imul
cmp
jge
mov
lahf
test
mov
cmp
jae
filds
and
decl
out
into
insb
xchg
setne
xor
lahf
push
enter
rolb
sbb
fdiv
lea
loop
sbb
in
inc
aam
enter
ss
jge
sahf
dec
pop
cmpsb
xchg
mov
mov
xor
mov
out
xchg
in
xorl
in
out
in
in
pusha
call
fucompp
xchg
inc
xchg
mov
inc
push
and
pop
es
mov
in
mov
or
insb
icebp
sub
stos
inc
test
lods
jmp
xor
in
aad
inc
out
in
dec
and
adc
add
arpl
fwait
int
in
and
fwait
lcall
int3
cltd
jp
mov
rolb
aam
mov
xor
pop
or
mov
xor
je
fldl
frstor
rorl
push
test
mov
xchg
jbe
sub
mov
addl
sbb
cmpsl
aam
out
insl
ljmp
pop
jecxz
mov
aad
arpl
mov
mov
out
scas
in
cmpsl
jp
lods
scas
lea
enter
mov
lcall
movsb
inc
enter
scas
stos
dec
pop
cmpsb
stos
sbb
pop
orl
inc
mov
cwtl
jp
mov
inc
bound
bound
addr16
xchg
jmp
lods
pop
xorl
pusha
comiss
or
shlb
dec
into
nop
cmp
dec
add
jp
shrl
sbb
xor
jne
adc
xor
mov
sbb
mov
fidivrl
je
mov
int3
pop
testl
xchg
shl
inc
mov
xchg
nop
pop
sub
dec
mov
push
ja
jb
fdiv
pusha
sub
clc
sbb
push
add
push
sbb
lods
lret
sar
cmp
adc
lahf
mov
xchg
xor
jp
push
sbb
in
inc
cmc
mov
shl
iret
pop
enter
out
pop
mov
push
iret
mov
int
repz
mov
adc
lret
hlt
ret
dec
repnz
pop
cmp
mov
add
movsb
pop
ds
pop
xchg
pop
sub
jns
stos
cwtl
rcrl
xchg
mov
aaa
lret
fidivl
mov
xor
mul
loopne
cmc
and
mov
ss
mov
je
movsb
stos
testb
jecxz
add
push
je
jae
inc
sub
out
push
stc
mov
xchg
test
out
xor
pushf
pop
and
push
icebp
push
insl
in
xor
xor
enter
int
cwtl
subb
mov
jmp
and
or
pop
in
adc
cwtl
mov
sub
jge
jecxz
les
jo,pn
mov
jns
aaa
jne
pushl
push
gs
xor
mov
rolb
cmp
inc
sub
cwtl
int3
mov
push
ffreep
pop
mov
fs
jne
xchg
fisttps
jo
subb
push
jnp
test
cmp
mov
xlat
nop
hlt
gs
mov
dec
and
push
pop
stos
stc
fistpl
shr
push
and
pushl
ljmp
daa
xor
mov
xchg
mov
xchg
xlat
pusha
insl
add
inc
jne
loopne
mov
rclb
es
mov
and
jmp
jae
iret
xlat
outsb
shll
out
push
or
mov
cmp
mov
add
adc
jle
in
jmp
mov
les
push
test
repz
ficomps
lcall
cmp
dec
lahf
push
cmc
sbb
sbb
ds
mov
testl
mov
adc
xor
cwtl
popf
xchg
insl
fiadds
mov
and
push
dec
inc
fldl2t
fwait
loop
mov
mov
dec
aas
cmc
fwait
das
mov
into
shll
loop
xchg
test
ret
pop
mov
adc
sbb
and
lds
outsl
mov
xchg
jno
mov
dec
push
mov
bound
pop
cs
adc
in
pop
and
dec
pop
cmp
sub
js
ja
mov
mov
xor
loopne
sub
lods
cmp
loope
pop
inc
ljmp
ja
lahf
insl
lahf
mov
pop
popf
xchg
xchg
mov
push
xlat
jo
insb
outsb
pop
xchg
out
xor
mov
xor
test
insb
mov
and
mov
push
xor
dec
test
and
or
and
imul
and
jbe
mov
xchg
jno
jnp
and
nop
insb
jb
out
addr16
adc
push
aad
inc
mov
aas
mov
scas
ficomps
mov
cs
data16
jno
xchg
lea
and
cmpsl
daa
push
cwtl
push
aad
xchg
add
jle
pop
cltd
push
add
das
leave
xlat
mov
sbb
pop
mov
mov
inc
cmp
lahf
cmpb
dec
inc
and
fmull
mov
shlb
bound
int3
dec
cltd
scas
sbb
push
adc
fildl
hlt
xchg
mov
dec
mov
jmp
add
and
rorl
ficoml
or
in
adc
or
mov
orb
pusha
lods
dec
xchg
fadds
pop
outsl
adc
les
push
adc
mov
cmp
and
stos
fisttps
pop
sub
jg
push
int3
ret
lock
out
jo
push
cmpsb
enter
push
jbe
xchg
pop
inc
mov
xchg
cwtl
lret
jo
inc
mov
test
xchg
mov
sbb
nop
pop
jl
ficomps
leave
test
in
enter
or
or
call
adc
pop
mov
xchg
aam
incb
jo
imul
sbb
inc
mov
insb
jp
inc
xor
mul
mov
jne
scas
arpl
mov
sar
setae
mov
adc
js
dec
mov
fiaddl
push
jge
daa
add
aas
mov
lds
insl
fmuls
inc
mov
fnstcw
inc
int3
nop
ret
cmp
xlat
jnp
mov
fnstsw
je
negl
pop
pop
into
leave
gs
lock
pop
pop
test
cwtl
pop
and
outsl
sbb
sub
and
sub
jp
rdmsr
jmp
jbe
lods
sub
nop
cmp
aaa
fs
mov
cmp
pop
in
and
pop
pop
fnstcw
jno
sub
fmull
jae
xchg
aad
sbb
popa
stc
loop
mov
push
cmp
jge
pop
xor
inc
sbb
mov
smsw
push
adc
clc
sbb
lret
fsubrl
jne
insl
test
lea
js
es
or
movl
or
out
adc
scas
pop
xlat
pop
outsb
lods
xchg
leave
pop
test
push
fcoml
lds
cld
andb
sub
xchg
xchg
dec
js
aaa
ss
es
sub
fs
and
inc
insb
inc
clc
jmp
inc
cli
or
stos
aaa
iret
repnz
shl
push
and
sbb
lods
mov
and
stc
pop
addr16
fsubs
cltd
fbld
jo
jns
jmp
sbb
insl
fiaddl
ja
sbb
daa
insb
and
mov
mov
dec
push
seta
and
pop
call
test
int3
or
xor
dec
cs
ljmp
loopne
rolb
jne
pop
js
sbb
decl
sub
out
adc
pop
nop
imul
xlat
orb
xlat
ss
mov
mov
mov
test
push
cmpsl
scas
testb
mov
mov
fldt
testb
mov
and
xchg
or
xorb
daa
sub
mov
popf
and
or
add
or
out
outsl
xlat
push
out
out
cmp
jae
jns
sbb
aaa
push
lahf
push
scas
ja
xor
fisubrl
inc
mov
xor
or
addb
jbe
add
jne
int
inc
mov
mov
js
ret
sbb
dec
sub
in
push
cmp
sub
je
stos
cmp
fwait
js
dec
fs
mov
and
movsl
int3
cmp
mov
and
stos
jnp
xchg
clc
sub
xlat
mov
outsl
sbb
pushf
or
insb
stc
out
outsb
outsb
leave
ss
mov
push
stc
in
xchg
rolb
add
mov
movsl
jb
sub
mov
sbb
jmp
pop
pop
inc
sbb
mov
inc
dec
mov
and
rol
in
lret
scas
push
cli
addb
pushf
psllw
ret
mov
and
int3
jle
mov
lcall
mov
inc
and
xor
xor
test
es
jmp
sub
in
mov
lahf
cmp
mov
pop
lret
insl
sahf
adc
sub
jb
loop
hlt
adc
stc
adcl
add
stos
pusha
out
mov
or
int3
insb
xchg
ljmp
ljmp
sub
dec
outsb
sub
mov
int3
outsl
stos
mov
add
bound
cmp
push
cmp
inc
insb
push
jle
out
jg
or
inc
rorl
and
imul
test
fdivl
jg
cmp
adc
lods
lret
xchg
adc
repz
pop
sbb
test
cmc
push
out
inc
sub
pop
sbb
test
jo
test
jno
bound
ss
dec
test
push
sub
inc
add
sub
inc
fstpl
fistpll
cmpsl
and
pop
pop
inc
jo
add
test
mov
push
xchg
lods
cs
push
jp
movsb
rcll
jns
inc
int3
cwtl
imul
ljmp
dec
in
jb
gs
adc
push
sub
jns
xchg
inc
push
es
cld
lcall
and
inc
cmc
js
nop
mov
pop
xor
and
mov
dec
xchg
ds
sub
sbbb
jmp
add
repz
lods
cmpsb
scas
shlb
sbb
mov
push
mov
xchg
dec
jo
xor
mov
call
mov
data16
mov
mov
pop
jnp
fs
sub
cld
out
adc
adc
or
jmp
inc
pop
or
and
fnstenv
xchg
pop
maskmovq
rol
cmpsl
jmp
jne
int
div
mov
shll
ret
dec
cmpsl
lea
inc
pop
and
lcall
scas
scas
test
sub
push
sbb
mov
outsl
gs
hlt
stos
jp
daa
lods
mov
jp
xchg
js
adc
call
rorb
arpl
fwait
ds
loopne
fidivl
sti
sbb
mov
push
push
fldl
ss
sbb
jb,pn
adc
int3
jo
aaa
cmp
sbb
inc
sbb
inc
das
or
jmp
lods
stos
dec
je
mull
icebp
mov
push
test
in
lret
fwait
pop
dec
mov
insl
pop
jno
outsl
jb
sub
xor
adc
inc
popf
in
add
cld
sti
addr16
pop
enter
shl
sbb
push
and
test
fisubrl
adc
jb
daa
pop
sti
cmc
xchg
into
dec
int3
insl
adc
bound
and
mov
faddl
enter
push
pusha
es
inc
cmpsb
jns
sbb
cmc
mov
dec
jnp
sarb
adc
scas
je
sub
pop
stc
mov
scas
inc
mov
xchg
les
push
xorl
out
or
test
out
data16
aad
lds
push
in
and
lods
lret
into
sub
test
inc
shl
cmp
outsb
nop
enter
cmp
xchg
lea
cltd
jg
in
jl
sub
inc
add
jne
push
xor
xor
mov
mov
push
cmpsb
mov
push
xchg
lock
mov
frstor
test
jmp
push
cmpsb
daa
cld
out
out
push
mov
movsb
leave
imul
je
xchg
add
jns
mov
xor
push
xor
xchg
pop
das
int3
mov
rcrb
sti
scas
pop
xchg
mov
mov
mov
mov
or
loopne
add
cmovge
cmp
and
or
push
push
in
sub
sub
imul
mov
or
xor
cmpsl
movsl
push
cmpsl
cmp
test
loop
in
test
cmp
cmp
lcall
mov
push
imul
and
pusha
testb
xor
rcll
cmpsl
sbb
xchg
adc
sahf
cltd
sub
push
fbstp
lock
xlat
mov
dec
fs
mov
out
fwait
rcll
add
in
dec
into
sbb
mov
push
jecxz
dec
mov
loope
xor
jp
jb
push
loopne
xor
or
cmp
aaa
push
sub
popf
adcb
mov
test
outsl
mov
sarb
addb
mov
js
daa
aaa
mov
fstps
cli
mov
insl
inc
icebp
shl
outsb
leave
rorb
sbb
aam
mov
popa
xchg
xchg
rclb
sub
push
or
stos
out
or
mov
nop
cmp
stos
jns
stc
test
stc
push
add
popf
into
cld
inc
jmp
push
push
shrl
add
leave
jmp
enter
inc
lods
scas
sub
dec
test
neg
ret
fdivs
xchg
mov
sub
or
test
xor
mov
adc
pushf
add
ficoms
mov
hlt
push
jecxz
cmp
or
into
pop
jno
out
lds
dec
adc
pop
test
push
imul
das
mov
call
call
stos
push
push
iret
test
sarl
loopne
mov
jecxz
cmp
and
cmpsl
inc
enter
mov
mov
dec
dec
test
jp
imul
lahf
or
xor
ffree
adc
lahf
mov
xchg
int3
adc
addr16
jb
inc
xchg
mov
adc
sar
pop
or
icebp
sbbl
rol
sub
jno
pop
repnz
sub
push
mov
dec
cwtl
aaa
push
add
repz
mov
xchg
jge
mov
lock
add
dec
lcall
dec
sub
mov
add
rol
data16
rcll
and
xchg
xchg
add
stos
gs
in
rolb
mov
call
incb
adc
mov
lea
adc
daa
call
andl
dec
jg
inc
cmpsb
sar
pop
or
xchg
adc
addr16
loope
fcoml
xor
std
push
orb
mov
cs
sub
fidivs
mov
mov
cmpsl
leave
or
jbe
repz
gs
into
sbb
mov
lock
in
incl
cmp
les
roll
dec
mov
rclb
popf
pop
xlat
cwtl
mov
dec
cmc
aad
push
loop
sarb
push
lcall
gs
movsl
int3
sub
movsl
movsl
repz
and
adc
dec
xchg
sarl
and
shr
pop
inc
xor
test
cmpsl
mov
pusha
popf
xor
aas
jmp
nop
jecxz
insl
xor
cmp
je
dec
pop
mov
aas
inc
push
popf
sbb
jae
pop
mulb
lds
sub
jnp
rcrb
popa
cmpsl
test
insb
stos
mov
and
mov
rclb
aad
loop
scas
or
es
cmpsb
add
cmpsb
cmp
mov
push
xlat
mov
xor
push
out
lret
test
mov
into
inc
push
lods
test
or
aaa
jle,pn
mov
lcall
das
hlt
mov
fcoms
pop
push
sahf
scas
movsb
rcrb
and
scas
push
sub
pop
das
xor
mov
in
fisubrl
mov
or
xchg
shll
mov
loop
arpl
push
or
inc
or
loopne
fimull
mov
or
call
bound
sbb
push
es
outsl
sbb
adc
xor
xchg
arpl
das
roll
jmp
jecxz
adc
mov
inc
bound
cmc
lahf
jl
jmp
test
adc
fcomps
lcall
loop
stos
clc
push
xor
into
std
mov
add
dec
insb
and
mov
push
mov
pop
mov
mov
jmp
jl
dec
loopne
mov
adc
mov
xor
inc
cld
inc
stos
lock
sahf
xor
xlat
mov
fistpl
xlat
jmp
lock
dec
mov
add
addr16
cmp
les
jmp
divl
cmpsl
inc
jle
lods
lods
xor
orl
aaa
sti
jbe
mov
int3
xchg
jbe
arpl
sahf
lahf
xchg
fmull
push
adc
jmp
lret
ja
icebp
or
sub
and
adc
cs
sub
cmc
js
loop
fmul
dec
dec
call
popa
and
xor
cmp
sahf
dec
mov
loope
adc
mov
jge
out
inc
ds
cmp
push
mov
pop
dec
outsb
lahf
arpl
enter
and
iret
pop
and
mov
inc
sub
bound
dec
std
and
jge
mov
xor
sbb
jo
add
pextrw
outsb
leave
scas
xor
adc
fisttps
xchg
mov
addb
inc
andl
into
stc
sbb
in
subb
push
and
in
pop
movsl
int3
xchg
jecxz
dec
pop
std
cmpl
or
mov
sbb
ds
insl
xchg
or
add
mov
lods
push
leave
mov
cmp
xchg
xor
sbb
loopne
jns
pop
mov
addr16
pop
add
or
cli
push
jae
stc
sbb
ljmp
loopne
xor
loop
fwait
int3
out
out
sub
xchg
mov
mov
movsl
push
add
cli
loop
dec
xor
iret
leave
adc
shlb
int
lock
push
xor
orb
test
sbb
fildll
ficoml
xchg
insl
jg
inc
jne
cmp
add
fstl
lods
shrb
cli
das
jecxz
sti
icebp
sar
xchg
xchg
cmp
mov
out
mov
lds
insb
leave
mov
cmp
mov
mov
inc
sub
mov
jmp
test
mov
mov
inc
mov
push
and
fsts
xchg
das
orb
xor
pop
pop
outsb
pop
jecxz
je
mov
rorb
in
es
sub
cmp
inc
ret
mov
dec
int
int
jbe
mov
aad
adc
mov
jo
sbb
jl
pop
inc
test
lahf
inc
test
cmpsb
jmp
pop
jo
dec
outsl
repnz
sub
mov
loope
cli
movsl
mov
fwait
add
inc
inc
mov
pop
enter
xlat
ds
lock
push
mov
and
pop
ficompl
sarl
dec
cltd
mov
inc
adc
pop
jnp
xchg
movsb
jb
mov
sub
test
push
push
dec
ljmp
mov
test
push
hlt
call
cmp
stos
jo
lods
sbb
mov
add
mov
mov
cmpl
or
lret
out
adc
int
adc
lret
subl
push
mov
fnstsw
mov
dec
ljmp
push
in
negb
pop
sbb
loop
adc
push
or
jno
cmpl
rclb
std
stos
adc
mov
add
inc
test
xchg
aaa
imul
mov
mov
fstpt
cmpsb
mov
jne
sbb
mov
xor
sbb
sbb
popf
inc
add
xchg
ret
pop
cmpb
ds
cmpsb
jo
and
cld
dec
popf
in
fstps
jle
adc
stc
fwait
notl
sub
lock
mov
inc
sbb
in
xchg
inc
xchg
mov
ljmp
cwtl
mov
jmp
pop
xlat
movsl
lea
jmp
push
cs
fnstenv
int3
pop
dec
popf
mov
xchg
pop
pop
data16
out
cli
icebp
pop
roll
pop
sub
stc
sub
jg
popf
lods
adc
bound
cmp
push
pop
dec
pop
push
xor
ds
xchg
jo
js
mov
int3
in
xchg
into
xchg
xor
movsl
inc
xor
iret
sub
mov
mov
imul
nop
mov
jb
aad
aaa
xchg
dec
sub
std
ljmp
popf
out
jecxz
paddd
icebp
cmpb
adc
adc
sbb
pop
mov
xor
ror
and
fcmovnu
mov
mov
xabort
loopne
ret
mov
ret
sub
push
jns
fdivrs
fs
mov
push
push
out
ljmp
sbb
push
repnz
leave
xchg
xor
mov
jb
test
inc
js
mov
jl
gs
jbe
int3
sbb
loopne
or
or
push
into
dec
clc
push
sub
stos
adc
mov
sub
in
jl
dec
stc
mov
jmp
and
sub
sbb
adc
test
sub
lahf
call
sti
roll
inc
jge
push
in
cwtl
scas
insl
lret
std
dec
dec
jl
imull
mov
add
push
arpl
call
sbb
push
je
hlt
dec
cli
adc
and
mov
lcall
dec
mov
cwtl
push
mov
mov
arpl
pop
jp
mov
add
pop
subl
pop
jo
adc
xor
fsubp
out
mov
popa
cmp
mov
mov
pop
fistpll
mov
mov
xchg
push
sub
sbb
sbb
sbb
out
push
bound
data16
cmc
in
cmp
test
mov
xchg
inc
iret
push
or
test
jge
push
sub
nop
lea
and
xchg
sbb
mov
jno
in
jbe
inc
stc
jo
sbb
pushf
inc
mov
nop
iret
fimull
mov
pop
inc
lods
fnsave
cld
and
mov
imul
sbb
adc
lret
test
xchg
rdtsc
mov
call
stos
cmp
and
pop
inc
inc
in
lock
or
jmp
push
jb
lcall
or
data16
add
gs
mov
or
and
iret
stc
repz
jno
movsl
dec
daa
mov
xlat
mov
pusha
iret
fsubs
jg
cmp
pushf
mov
jecxz
adc
pusha
push
out
imul
pop
sbb
add
cli
pop
or
popf
add
mov
jge
dec
xchg
loopne
rorb
push
jnp
ds
dec
sub
pop
je
xchg
mov
scas
mov
scas
in
sbb
jo
dec
mov
xor
mov
je
cmp
xchg
mov
mov
mov
fwait
xchg
and
mov
dec
popf
push
movsl
push
das
inc
jbe
mov
jmp
sarb
cmp
lods
gs
mov
sbb
stc
ss
jmp
inc
sbb
loopne
dec
xchg
sub
pop
bound
es
cwtl
out
shlb
lret
dec
mov
fs
add
adc
dec
in
xchg
loope
xorb
out
out
repz
js
pushf
cmp
mov
mov
scas
rcrl
fwait
mov
roll
cmp
lock
call
sahf
pop
or
and
nop
dec
addr16
out
push
or
cmp
shl
jg
jno
sub
add
jbe
inc
inc
jge
inc
add
xchg
loope
xchg
fistps
jl
or
push
movsb
stos
cwtl
lret
inc
movsl
xchg
jp
mov
jmp
or
stc
divb
repnz
jp
inc
xor
aaa
adc
fwait
jp
jo
stc
das
pop
pop
add
xchg
lock
shrb
pop
push
cmpsb
loopne
movsl
inc
sbb
and
addr16
push
pcmpgtb
les
cmp
mov
push
pusha
filds
sub
lea
daa
cmp
adc
sbb
cli
mov
loopne
lods
out
lea
push
jmp
cwtl
xor
pop
or
inc
sub
mov
subb
push
test
mov
fs
les
push
rorl
pop
xor
mov
push
adc
push
pop
cmp
lahf
push
ja
push
lods
gs
adc
push
outsb
pop
sbb
out
pop
iret
cmp
pop
sub
xor
cmp
and
mov
xlat
fs
or
sub
cmp
cmp
roll
rclb
fisttps
push
mov
and
mov
cmp
inc
fsubp
and
jl
or
xchg
in
mov
imul
mov
cmpsl
mov
sahf
cmp
cmpsb
mov
pop
dec
sub
and
mov
popf
fwait
and
lret
adc
ljmp
mov
cmp
dec
enter
out
das
popl
out
inc
xchg
xchg
inc
addr16
mov
bound
mov
arpl
mov
jne
cmp
adc
lahf
jno
jl
stos
jp
add
ret
jne
add
in
test
jge
lods
lea
pop
adc
xchg
push
cmp
sub
out
cmp
hlt
add
xchg
test
cltd
int
push
add
pop
mov
out
xor
xchg
fwait
into
mov
mov
jecxz,pn
repnz
dec
push
scas
vmwrite
jmp
push
jae
push
xchg
xorl
mov
mov
or
sbb
pushf
movsb
rcrl
std
addr16
ja
dec
fistl
mov
dec
pop
adc
adc
inc
push
ret
imul
jp
mov
push
fldcw
dec
scas
dec
lock
gs
jns
mov
cmp
xor
or
xchg
in
clc
xchg
xchg
jbe
ljmp
inc
sbb
dec
pop
fistl
push
jb
int
aad
in
pusha
je
fdivrl
int
cltd
push
cmp
popf
dec
scas
push
dec
or
shll
lret
dec
iret
pop
mov
loopne
ret
adc
std
call
and
dec
cmpl
nop
ja
sub
mov
fsubs
test
push
repnz
bound
negl
mov
out
fsubr
nop
rcrb
fisubs
mov
cs
hlt
ljmp
popf
mov
test
push
dec
jecxz
lock
scas
mov
mov
mov
mov
repnz
and
stos
ljmp
mov
test
xor
add
std
hlt
scas
stc
cld
mov
aad
add
imul
mov
mov
mov
mov
adc
or
mov
push
inc
jl
mov
divb
test
fsubrs
sub
xchg
mov
loope
dec
loop
inc
mov
cs
or
cltd
add
xchg
repnz
mov
sbb
mov
lea
inc
push
pop
mov
pop
or
int3
push
in
adc
dec
adcl
lcall
xor
int3
ds
push
arpl
gs
and
pop
lods
fcomps
sbb
adc
lcall
push
dec
loop
ds
shrb
aad
in
or
add
mov
cwtl
fiadds
inc
sub
jns
sbb
inc
inc
xchg
mov
imul
daa
sbb
xchg
in
push
pusha
and
arpl
insb
push
dec
verr
xor
pop
jl
jl
mov
lods
fistps
add
clc
jns
dec
xor
je
adc
popa
cwtl
dec
xchg
sbb
outsl
pop
mov
inc
daa
xchg
inc
shlb
mov
push
pop
int
mov
lcall
roll
inc
rolb
dec
sub
mov
lcall
std
adc
ss
push
hlt
out
push
out
lods
xor
add
mov
push
mov
cltd
pop
push
test
dec
scas
and
jp
xor
pop
arpl
nop
sti
mov
inc
cmp
xchg
aad
and
xchg
insl
or
movsl
push
aas
iret
sbb
scas
and
xchg
xchg
dec
mov
movsb
mov
mov
mov
iret
dec
mov
adc
add
sarl
fidivs
inc
xchg
lock
mov
mov
std
jnp
and
jmp
dec
ljmp
test
inc
ss
negb
cmp
stc
test
mov
push
outsb
adc
out
sub
mov
pop
cmp
push
dec
xchg
sub
fdivrs
xlat
imul
lahf
aad
scas
jl
mov
inc
ja
mov
pop
jno
xor
mov
xor
aad
push
sbbb
cmovp
xor
xchg
xor
scas
in
mov
in
aam
shlb
xorl
adc
xchg
push
pop
js
clc
loopne
rolb
lea
je
outsl
mov
pop
jae
das
adc
mov
sub
xor
jecxz
sbb
sti
jbe
adc
hlt
fdivs
out
arpl
add
cmp
rcll
xchg
addr16
ljmp
push
inc
dec
mov
inc
mov
pushf
dec
push
push
loop
fcomps
mov
push
mov
sbb
cltd
rcl
in
leave
or
cmpb
sub
test
adcl
andl
cmp
dec
mov
scas
lods
jp
in
std
mov
add
pop
std
ss
pop
mov
fistpll
push
xchg
mov
and
loopne
sti
ja
mov
shll
pop
jp
jns
jge
lret
mov
cmc
push
lods
sub
inc
or
repnz
das
push
scas
jb
add
test
push
push
dec
pop
adc
ret
xchg
das
outsl
dec
das
insl
stos
mov
push
fsubrl
xor
jle
test
sbb
popf
cmp
adc
les
mov
fwait
jecxz
adc
mov
in
pop
lret
das
add
popa
cmp
mov
dec
mov
mov
jbe
add
and
mov
xchg
and
jmp
mov
shll
loopne
mov
jl
add
push
insb
hlt
mov
hlt
lds
test
addr16
push
jle
bound
daa
sar
mov
xchg
mov
cmp
cmp
or
and
xlat
cmp
xchg
test
xchg
cmp
xchg
insb
bound
dec
cmc
mov
sub
sub
push
ret
and
dec
xchg
push
jo
cmpsl
xlat
push
mov
mov
adc
cmp
in
inc
xchg
cmp
out
subl
lds
ljmp
mov
jbe
lret
shl
inc
sub
std
dec
test
dec
out
outsb
push
cmp
int3
cmp
pop
gs
fs
adc
mov
xor
rolb
inc
sysenter
je,pn
sti
add
addr16
lds
xchg
and
cmc
js
addr16
mov
lret
mov
in
and
arpl
aad
xchg
out
add
and
insl
aam
xor
out
sbb
cmp
mov
push
outsl
sbb
inc
mov
das
xlat
aam
sub
repnz
mov
and
pop
cmp
icebp
push
inc
mov
mov
push
movsb
inc
mov
jmp
sbb
out
cs
es
lock
fcmove
or
adc
cli
fcmovnu
sub
jno
and
and
inc
xchg
decb
ret
pop
pushl
into
enter
ficomps
outsl
call
push
aam
mov
dec
or
mov
or
dec
push
cmp
lea
jbe
aaa
pusha
dec
xor
mov
ss
pusha
lods
add
and
cmp
adc
mov
jecxz
call
push
cmc
dec
cmp
stc
jbe
push
jg
pop
sub
ret
sub
js
call
iret
loop
aas
fndisi(8087
int3
cltd
stc
in
orb
sub
dec
cmpsb
jbe
sub
cmpsb
xlat
mov
mov
sub
mov
mov
sub
jns
sub
fists
cli
test
movsb
cmpsb
mov
cmc
bound
int
insl
mov
mov
add
mov
jbe
add
test
push
jle
imul
lods
fisubrl
dec
inc
pusha
pushf
data16
sub
cmc
xchg
rcll
cli
sti
dec
pop
int3
push
ljmp
sub
cmp
nop
mov
out
push
cmp
jg
je
ljmp
mov
jno
popf
and
lret
in
imul
lcall
dec
xchg
xchg
andb
xorl
test
stc
cli
movsl
mov
xchg
mov
mov
les
int3
jl
cld
out
jb
ffree
aam
andps
cli
xchg
mov
mov
xor
das
push
push
sbb
xchg
je
aas
sbb
sarl
aas
dec
dec
mov
das
das
push
call
sti
and
sub
movsl
mov
ficompl
ds
push
loopew
cmp
shrb
mov
mov
les
push
xchg
leave
push
mov
jecxz
push
lret
xchg
icebp
lods
dec
sub
outsl
addl
and
cmpsb
fstps
int
scas
jmp
or
xchg
loop
repnz
pop
push
adc
and
jmp
movsl
push
inc
adc
sub
mov
sbb
daa
out
hlt
scas
jno
mov
mov
roll
push
xor
inc
addr16
mov
add
loopne
xlat
mov
fisubs
adc
popf
lret
mov
loope
loop
pop
andl
icebp
fbstp
mov
sarb
push
mov
lock
sbb
stc
dec
xor
add
or
jbe
pop
xor
jbe
aad
iret
sti
add
pop
xchg
cli
xchg
dec
imul
orb
jp
int3
mov
mov
adc
or
out
roll
cmp
popa
or
test
mov
add
mov
jae
outsl
ds
lods
icebp
mov
mov
repz
and
out
movsb
xchg
stos
dec
into
xor
push
mov
in
cmpsl
outsb
in
icebp
fistpl
jl
fwait
dec
add
gs
jecxz
xchg
xchg
shll
pop
or
mov
in
stos
adcb
repnz
pop
pop
xchg
mov
cmovs
dec
testl
add
out
dec
cmpsb
pop
pop
scas
cmp
shl
push
stos
mov
cmc
sub
mov
xor
push
stos
sbb
iret
xchg
cmp
out
jne
mov
sti
jae
dec
pop
pop
stc
stos
call
sub
repnz
cmp
cs
loop
push
stc
add
test
sti
xchg
dec
ljmp
jmp
adc
sti
js
in
sbb
iret
jmp
hlt
jge
sub
xchg
mov
mov
lret
cmpb
jbe
loope
sbb
add
dec
movsl
add
test
daa
or
inc
sub
mov
pop
mov
and
rclb
aaa
sti
incl
inc
mov
push
mov
je
ljmp
push
mov
push
dec
inc
xchg
cmp
jbe
icebp
mov
pop
nop
pusha
xor
hlt
mov
and
fnstenv
into
insl
call
fs
fldl
test
hlt
scas
dec
or
icebp
cmpsb
ss
push
sub
outsb
mov
mov
xchg
push
inc
bound
lock
in
test
test
push
fisubrs
imul
xlat
or
and
mov
jb
repnz
jnp
sarl
dec
xor
arpl
pop
mov
and
fisttpl
sbb
xchg
gs
cmpsb
movsl
stos
imul
std
icebp
and
leave
and
test
add
cmp
data16
dec
mov
or
mov
hlt
repnz
and
inc
popl
adc
mov
cli
enter
sub
jp
xor
imul
inc
mov
rcrl
mov
inc
xchg
adc
es
xchg
mov
jl
or
cmpsb
int3
mov
das
es
push
pop
cmc
xchg
inc
fsts
and
mov
jmp
and
add
add
cmp
xchg
imul
insl
and
imul
lds
lock
out
mov
insb
xchg
pop
mov
xchg
mov
aas
sti
mov
xchg
cmpsl
xchg
pop
or
cmp
mov
dec
xchg
lahf
inc
rep
xor
hlt
lods
ss
xchg
pop
gs
rolb
or
pop
jne
and
shlb
clc
dec
in
fmulp
pop
loop
loope
cmp
push
sti
add
loop
aaa
outsl
pop
mov
jae
movsl
mov
mov
mov
add
dec
and
jge
hlt
movsl
mov
addr16
aas
mov
sub
cld
xor
aad
idivl
sbb
iret
xchg
ljmp
and
jno
push
xor
pop
aad
int
ret
cli
mov
cmp
fwait
loope
in
lods
mov
dec
lret
jo
clc
mov
testl
call
cmp
jb
outsb
lcall
push
imul
or
xlat
xchg
in
jbe
addr16
stos
push
cmpsl
dec
jmp
lock
fisubrs
and
faddl
push
int3
add
mov
rorb
mov
mov
bound
test
xchg
mov
xor
outsb
fbld
mov
push
mov
fidivrl
xchg
adc
push
and
dec
mov
push
out
data16
lock
insl
clc
std
adc
cmpsb
and
add
shll
fimuls
cmpb
popf
jp
add
sub
mov
cld
mov
adc
lret
lods
adc
out
add
mov
out
jno
loop
ljmp
cmpsb
jne
dec
mov
fxch
push
jmp
pop
packuswb
xor
lea
fsubl
stc
adc
rcll
pushf
pop
dec
pop
out
test
or
nop
aam
or
in
lret
pop
push
cmp
das
fdivl
lds
into
and
inc
mov
ss
fsubr
ja
sub
add
lret
divb
out
sbb
push
xchg
ret
add
test
or
or
ss
das
fldcw
push
dec
subb
xchg
mov
call
push
pusha
jo
cmp
mov
ret
mov
mov
mov
mov
sub
pushf
pop
lods
scas
sub
or
mov
jp
adc
stos
xlat
fs
dec
cmp
imul
imul
sahf
push
enter
mov
mov
call
mov
loopne
adc
rclb
sbb
push
inc
nop
jo
push
sbb
push
cwtl
sbb
pushf
addb
push
lods
add
jmp
rorl
mov
push
adc
mov
jns
out
push
adc
or
mov
cmp
loopne
dec
pop
mov
std
stos
lods
jl
int
dec
dec
mov
push
lock
test
push
repz
sub
loope
repz
cmp
xchg
test
loopne
xor
cld
adc
jno
jae
out
dec
push
lret
or
push
cmp
xor
mov
imul
andb
dec
dec
ret
add
mov
mov
imul
inc
in
mov
cmp
mov
mov
xchg
inc
in
ret
xchg
push
or
sbb
jb,pn
aaa
inc
dec
lock
xor
jg
jle
add
push
pushl
std
and
int
mov
ss
jmp
mov
inc
add
mov
cmp
add
pop
xchg
in
cmp
loop
cmc
cs
test
sub
lcall
rorl
lahf
or
std
mov
push
imul
stos
xchg
push
jmp
cmpsl
les
and
or
gs
in
sub
cld
ret
mov
pop
mov
cmpsl
xor
aad
mov
loope
cmp
stos
ljmp
aam
insl
in
ds
pop
cmp
xchg
sub
stos
jge
pop
push
xchg
cli
cmpb
test
cmp
rclb
out
arpl
rclb
cmpsb
cmp
cmp
aaa
cmp
sbb
push
sbb
jecxz
jp
call
icebp
fneni(8087
outsb
pop
pop
xor
inc
movsb
pop
sub
in
xchg
sti
sbb
mov
pop
shl
push
add
loopne
sbb
out
cmpsl
push
mov
adc
mov
and
adcl
lods
cmp
xchg
jnp
int
cs
stc
mov
gs
iret
addr16
loope
pop
data16
or
dec
lret
mov
mov
in
js
or
pop
outsl
js
xchg
push
dec
mov
push
stos
cmp
xorl
daa
imul
daa
filds
push
dec
ja
mov
daa
mov
ret
push
add
mov
push
pusha
sub
aaa
fidivs
cmpsl
ss
test
rol
lcall
cli
rclb
cld
push
jne
sub
mov
mov
cld
pop
test
cs
push
fs
pop
pop
adc
push
mov
lea
nop
aam
push
xor
pusha
fistpll
cli
mov
stc
fidivrl
std
mov
jp
mov
aas
fisubs
lcall
adc
out
cwtl
jp
and
add
push
aas
lahf
sahf
adc
mov
mov
divl
mov
xor
mov
xchg
shlb
sbb
cmp
mov
sahf
mov
cmp
sbb
mov
out
jl
dec
push
mov
outsl
rcrl
filds
shlb
push
mov
push
sti
sbb
sahf
cmp
sub
dec
or
data16
sti
in
push
mov
and
or
fidivl
adc
pop
les
repz
movsl
out
test
push
pusha
jecxz
enter
or
dec
mov
push
clc
popl
pop
mov
xorb
imul
das
inc
or
inc
pop
mov
mov
test
mov
cli
and
jmp
test
jp
and
mov
mov
mov
or
scas
push
insl
flds
or
in
xor
push
and
xchg
mov
pop
and
aad
xor
in
push
adc
movsb
leave
and
stos
ficoms
push
and
ja
and
sub
int3
push
and
jge
loopne
jp
dec
add
test
pop
lods
imul
dec
inc
jmp
rep
cld
rclb
sub
xor
pop
jb
pop
bound
testb
push
or
pop
and
push
push
jb
pop
jmp
push
pop
push
inc
dec
sbb
pop
adc
pop
outsb
push
fldl
xchg
mov
inc
aad
sub
nop
sbb
out
mov
dec
xchg
mov
cmpb
xor
xchg
push
mov
jp
inc
in
pushl
cwtl
mov
xor
xor
sbb
dec
loopne
mov
add
outsb
lcall
mov
add
sbb
fcmovu
xor
inc
loopne
addr16
push
addr16
fmull
jg
xchg
dec
add
rorl
lea
fstpt
mov
js
imul
divl
rcl
lea
cmp
push
outsb
inc
jb
xor
nop
sahf
fildl
negl
or
clc
lea
and
sub
sti
test
repz
addr16
jo
and
daa
stc
mov
xor
shr
loop
mov
bswap
lret
movsl
ljmp
in
mov
imul
xchg
sub
jns
dec
add
mov
push
ret
int3
aas
dec
pop
dec
jbe,pn
mov
pop
xor
in
jnp
jbe
dec
pop
mov
mov
dec
inc
lock
arpl
jnp
popf
xor
bound
dec
shll
pop
add
mov
inc
add
popf
ret
or
xor
cltd
jp
stc
push
jns
js
dec
mov
jne
mov
cmp
icebp
loopne
push
lahf
sub
lods
cmp
stos
push
or
dec
xchg
xor
cmp
out
es
jnp
into
xor
add
pop
mov
sbb
dec
mov
xchg
dec
inc
mov
xchg
jp
push
sbb
jecxz
cmp
inc
stc
pop
shrl
out
jbe
or
enter
xlat
lret
mov
pop
dec
xor
push
out
jle
addr16
jb
sub
mov
xchg
push
das
in
pop
jmp
mov
cmp
jmp
fmuls
jbe
and
fcmovb
iret
cmp
frstor
sbb
lods
xor
and
cmp
mov
call
out
pop
shll
movsb
push
les
adc
cmp
mov
jo
or
int
movsb
aam
push
add
outsb
mov
mov
adc
sub
dec
dec
pusha
iret
mov
lock
stos
imulb
dec
push
inc
pop
test
and
xor
dec
mov
notb
dec
gs
cmpsb
stos
sub
and
insl
mov
mov
jb
leave
int
sbb
gs
jno
cmp
outsb
cmpsl
pop
xor
adc
cmc
xchg
ss
fnstsw
xchg
sub
pop
jns
add
stos
dec
xchg
out
or
or
leave
sbb
dec
add
or
cmp
dec
mov
imull
popa
fwait
dec
or
inc
cmp
cmp
mov
sub
in
rclb
aas
lcall
jecxz
ret
push
shrl
jns
es
movsl
nop
repz
add
faddl
into
xlat
aam
dec
jbe
dec
shl
jo
adc
lret
sarb
negl
mov
add
push
pop
add
sti
fsubrs
add
fnsave
mov
adc
or
jecxz
fcompl
add
test
adc
add
and
loopne
jno
push
mov
lcall
push
push
insb
mul
inc
jecxz
in
push
test
mov
das
sbbb
pusha
nop
jb
mov
sbb
pop
xor
cmp
inc
sub
mov
or
ret
cli
mov
dec
xorl
test
jmp
cmp
test
add
insb
aaa
shl
sbb
ljmp
xor
pop
ds
inc
pusha
push
rcl
lock
xchg
push
aas
xchg
ljmp
xor
inc
lahf
lcall
cmpl
mov
pop
das
or
jp
sub
add
and
dec
stos
fwait
out
leave
sbb
add
std
pop
imul
dec
add
int3
test
mov
insb
into
out
jne
insl
mov
cmp
rol
outsb
pushf
add
aad
or
lret
into
enter
imul
push
mov
mov
aam
xchg
mov
outsl
xchg
mov
mov
mov
inc
sarl
pop
out
and
sbb
lcall
fmulp
fsub
lret
jmp
lret
bound
insb
and
inc
mov
sub
xor
or
jl
sbb
push
pop
test
dec
imul
xorl
insb
scas
or
aas
ljmp
push
add
push
rcrb
stc
into
es
or
cld
adc
std
pushf
and
and
mov
aaa
hlt
xor
gs
shll
shll
mov
mov
pop
sub
jg
addb
cmpsb
cs
mov
lcall
rcrb
out
scas
pop
outsl
in
sub
dec
mulb
jg
ret
cmpsl
cmp
adc
and
mov
inc
fwait
ljmp
mov
inc
lret
push
stos
pop
nop
dec
cmp
jle
sbb
mov
iret
rclb
es
cmpb
dec
adc
icebp
jmp
js
xor
push
test
enter
mov
outsl
cld
cwtl
out
fldl
xor
bound
pop
fimuls
in
mov
movsb
les
les
mov
jno
and
stos
sbb
mov
adc
push
test
sub
xorl
popa
outsl
sbb
or
mov
mov
loope
cmpsl
shlb
std
paddusb
sbb
mov
out
es
mov
daa
mov
cmp
stos
sbb
sub
dec
les
mov
addr16
into
shr
ja
lods
orl
cmp
test
or
dec
mov
aaa
insl
scas
lods
addr16
mov
mov
hlt
test
into
into
fpatan
out
mov
push
and
cmp
aas
scas
add
addr16
jmp
imul
fcomps
aas
push
cmpsl
inc
jp
aas
outsb
test
negl
movsb
fldt
mov
cs
outsb
mov
sbb
xor
mov
pusha
mov
das
lea
mov
jl
jmp
xlat
fidivs
sub
xchg
repz
push
push
loope
push
es
sbb
rcrl
sbb
xorl
mov
rolb
popf
test
cmp
les
sbb
sbb
stos
pop
fwait
push
pop
test
xchg
rorb
xor
xchg
mov
loop
xor
pop
sbb
pusha
inc
in
inc
inc
pop
daa
lods
aam
jmp
je
cmp
lock
adc
iret
push
push
dec
stc
in
ljmp
and
mov
cwtl
mov
test
add
adc
aad
mov
mov
add
xor
mov
idivl
cld
push
jb
sub
push
xchg
jg
shl
or
popf
lds
scas
inc
arpl
mulb
mov
dec
jo
jp
dec
xor
loop
sahf
shl
pop
and
mov
adc
insl
cmpsl
das
jnp
mov
jge
sbb
sahf
aad
lods
xchg
pop
cld
dec
rcrl
lahf
xchg
test
sub
mov
mov
stc
lret
sub
mov
mov
cmp
pop
fadds
pusha
pop
and
jg
mov
das
lea
fisttpll
jg
fcom
lret
cmp
dec
sbb
sbb
rolb
test
mov
push
mov
adc
loope
insb
adc
lock
pop
outsl
push
arpl
test
cmp
mov
pop
mov
sbb
mov
or
push
jbe
iret
mov
stc
mov
lods
movsl
call
aas
pop
cld
add
pop
aas
loopne
mov
aad
adc
add
negb
inc
sub
jo
mov
inc
data16
lahf
gs
add
push
or
sahf
icebp
mov
xlat
insb
cmpsl
cmc
sbb
add
sub
mov
std
aas
push
push
mov
mov
mov
insb
cmpsb
iret
fwait
xlat
bound
pop
dec
xchg
add
int
and
repnz
rolb
or
push
fs
dec
lods
inc
out
cmp
test
outsb
sbb
cmp
stc
aad
jns
lods
and
fidivs
jl
mov
adc
addr16
loopne
or
call
xor
in
or
aad
ljmp
stos
cmp
mov
sbb
movsb
inc
pop
sahf
cld
or
enter
adc
in
mov
hlt
lock
hlt
and
dec
clc
iret
pop
jnp
push
mov
lahf
and
clc
popf
inc
test
nop
repz
mov
fildll
cs
pop
push
cmpsl
cs
loop
imul
fs
test
cmp
xor
outsb
ret
jle
inc
xor
push
xchg
adc
cmpb
add
xor
outsl
test
push
dec
icebp
mov
lret
mov
fwait
lret
test
lahf
push
mov
sbb
mov
xor
push
jle
mov
mov
into
adc
add
jecxz
fdiv
add
cli
push
mov
mov
push
repnz
scas
mov
push
aad
clc
cmp
test
pushf
mov
and
cli
mov
test
mov
push
ss
pop
jo
push
lret
pop
loop
loope
jns
mov
dec
pushl
sbb
repz
int3
rorb
or
push
call
inc
push
int3
push
pop
mov
fdivrl
lahf
mov
push
daa
negb
push
call
clc
jmp
jmp
sub
lret
ja
jge
daa
sub
jge
pusha
inc
daa
mov
mov
fists
adcb
lcall
inc
jecxz
jmp
rolb
adc
xor
ja
popf
lret
ds
xchg
repz
mov
loop
scas
pop
ds
add
popf
sub
jnp
rolb
scas
inc
or
pop
jecxz,pt
sbb
mov
cmpsl
lds
or
adcb
rclb
inc
int3
lea
in
sbb
loop
loope
inc
cmp
decl
and
pop
mov
loope
jg
sbb
mov
xchg
jno
mov
getsec
xor
es
xorb
inc
shll
push
add
loop
sub
lcall
xor
fwait
add
in
hlt
fsub
dec
dec
dec
ss
idivl
fmul
das
xchg
leave
out
je
iret
mov
decb
push
pop
test
test
mov
jne
add
cmpsb
dec
scas
sub
ss
mov
out
mov
test
or
or
mov
inc
dec
int3
xor
fistpll
inc
popf
mov
pop
rolb
add
inc
cmp
loope
mov
add
popa
jae
out
xor
popf
push
ficompl
jecxz
mov
and
sti
cmp
dec
xchg
adc
inc
xchg
movsl
repnz
mov
or
add
xor
int
rcrl
incb
add
xchg
in
jg
ljmp
shlb
push
xchg
dec
jle
in
hlt
out
sti
cmp
hlt
mov
pop
mov
in
mov
cmpsl
push
jecxz
bound
sub
lods
mov
ljmp
and
pop
xchg
xor
aas
dec
nop
or
adc
int
cmpsl
outsb
iret
mov
dec
data16
or
sbb
cltd
jnp
lds
sbb
inc
movsl
xor
test
cmp
fcompl
cmp
pop
mov
xchg
sbb
push
dec
xor
sub
jle
fcoml
mov
ret
mov
leave
sbb
std
mov
cmp
or
mov
jle
sarl
mov
pop
movsb
inc
sarl
adc
push
push
lods
stc
cmp
mov
push
repz
insb
or
cltd
test
push
push
add
xchg
xor
les
push
test
or
lret
or
popa
push
into
add
femms
lahf
dec
outsl
cld
sbb
sbb
pop
rcrl
cmp
xchg
cmp
nop
adc
jae
cmp
icebp
adc
cmp
xchg
inc
in
dec
mov
sti
fbld
mov
jge
dec
mov
fidivrs
aaa
je
dec
outsb
int3
mov
push
loope
xlat
pop
movsl
repz
enter
bound
or
out
inc
mov
fmull
mov
adc
cli
adc
sub
stc
sbb
inc
dec
stos
xchg
fmuls
scas
sbb
sbb
jne
xor
std
mov
ret
sbb
pop
dec
outsb
lods
xchg
mov
lret
dec
jne
insb
decl
aad
push
sahf
push
lret
adc
out
xlat
jnp
dec
in
cmp
loopne
mov
and
pop
psubusb
xchg
xor
fnstcw
lock
ds
inc
ja
or
xchg
mov
or
sti
sub
mov
cmp
sbb
xchg
cmp
mov
testb
lret
lcall
ds
add
out
push
outsb
fmull
xchg
pusha
in
xor
push
and
lcall
xor
inc
es
or
sti
insb
in
mov
jl
subl
repnz
jns
mov
xlat
dec
mov
out
ret
outsb
adc
push
les
xchg
or
xor
pushf
aaa
xchg
sbb
loope
scas
sbb
sub
in
xor
push
aas
scas
in
xlat
xchg
sub
mov
mov
aas
leave
les
fwait
jp
xor
add
clc
subb
iret
push
jecxz
jnp
adc
imul
insb
aam
imul
ja
enter
in
push
mov
sub
outsl
gs
faddl
incb
aam
test
xor
xor
mov
dec
cmc
push
popf
mov
dec
cmp
gs
xchg
and
fdivrs
jge
sub
adc
jl
and
stos
cmp
jnp
fadds
out
popf
push
sbb
hlt
cmc
sub
mov
sbb
lock
dec
lods
fwait
mov
push
aad
jo
sti
lods
mov
adc
in
sbb
lret
scas
push
in
mov
iret
xchg
cs
cmc
mov
jbe
sbb
sub
cmp
sbb
add
xchg
mov
rcl
jbe
mov
test
lcall
lock
push
cmpsl
lods
in
enter
cmp
add
outsb
push
call
sti
pop
adc
fwait
into
aas
lods
jbe
pop
sub
enter
mov
push
and
nop
out
ja,pn
pop
pop
lcall
roll
cmc
decb
mov
ljmp
aas
stc
cld
fimuls
loopne
dec
fcmovb
int
inc
xor
scas
and
fimuls
dec
jl
sbb
aad
ret
lea
and
lret
xchg
call
rolb
lahf
loope
fs
sbb
xor
sub
push
mov
push
fisubrs
jle
ja
sub
jo
sbb
out
nop
inc
sub
fstp
and
sbb
mov
or
push
xchg
xchg
jle
adc
push
jae
ja
addr16
push
jbe
jecxz
aam
cld
in
sbb
xchg
or
dec
scas
in
and
paddq
icebp
mov
adc
call
out
mov
ror
pushf
push
add
iret
sub
adc
jge
hlt
cld
call
sub
pop
pop
dec
sbb
add
add
repz
push
popf
fsubrl
pop
sub
dec
push
xor
xchg
mov
aad
pushf
dec
jo
and
je
sbb
or
push
aas
ficoml
js
add
int3
lock
adc
cwtl
rolb
js
mov
or
jne
sub
imulb
pop
pop
mov
jne
stos
or
push
pushf
push
xchg
aad
cld
push
and
cmpsl
inc
or
inc
sub
pop
je
ja
jns
mov
enter
out
das
push
pop
ds
movsl
jnp
orb
mov
mov
mov
out
dec
fildl
pop
daa
in
jns
fst
sub
push
mov
xchg
cwtl
popa
push
sahf
fildl
es
cmp
dec
mov
cltd
adc
sbbw
outsl
and
push
aam
inc
es
test
inc
mov
add
cltd
outsl
xchg
xor
es
dec
xor
aas
xchg
popf
mov
subb
mov
jg
enter
pop
out
sub
shr
popa
xor
in
repnz
pop
pushl
outsb
push
cmp
sbb
leave
loop
out
cmpsl
pusha
enter
cmp
fsubrl
in
fs
sahf
fadds
je
mov
inc
fdivrs
pop
jmp
xchg
pop
pop
pop
jecxz
cmc
cmp
inc
jmp
insb
xchg
lds
adc
mov
fnstcw
bound
mov
out
lcall
aas
je
mov
popa
adc
stos
arpl
test
cs
insl
add
add
hlt
je
dec
and
iret
jb
outsl
out
sub
into
int3
pop
les
or
jbe
push
xchg
cmp
addr16
iret
inc
mov
outsl
lea
mov
mov
mov
push
xor
leave
jge
popa
subl
xchg
sub
adc
leave
scas
add
popa
sub
fistpl
pop
fiaddl
ja
pop
rcrb
mov
jge
fnstenv
push
shr
pop
xor
push
sbb
testb
xor
shlb
mov
pop
adc
out
outsb
mov
cmpsb
cld
inc
mov
or
or
jge
arpl
jl
mov
xor
cmpsb
cmp
lahf
jle
sub
inc
sbb
jp
test
leave
aad
jae
ss
mov
mov
pop
nop
int3
les
fwait
dec
out
pushf
cmp
add
in
adc
sbbl
sub
into
inc
inc
cmp
pop
push
lods
sbb
jg
mov
enter
add
lret
cmpsl
loop
in
add
jg
lods
jl
add
dec
iret
mov
adc
insl
xlat
aam
in
sub
xchg
and
sbb
xorl
test
in
inc
loopne
lahf
sbb
mov
lds
fistpll
sub
dec
jnp
or
cmpl
cld
adc
movsb
scas
inc
movsb
frstor
and
sbb
arpl
xchg
aam
push
test
and
jmp
fnstenv
xlat
inc
incl
test
or
push
rcll
lds
jmp
mov
movsb
loope
dec
nop
int3
pusha
ljmp
in
jnp
sub
push
pop
push
xchg
xchg
pop
sbb
ljmp
or
mov
push
mov
clc
pop
nop
xchg
rorl
adc
or
cmp
shlb
scas
mov
adc
mov
shlb
loope
enter
std
add
arpl
and
xchg
adc
test
dec
xor
push
clc
cmp
mov
cltd
loope
pop
fisubs
imull
jae
bound
pop
jl
aas
fnstsw
arpl
mov
shrl
iret
lcall
sub
push
arpl
and
mov
stos
mov
or
add
pop
mov
mov
repnz
push
mov
pop
push
mov
sbb
xorl
inc
insb
sbb
rclb
adc
leave
sub
mov
add
mov
lret
test
or
ret
adc
scas
lret
mov
sub
loope
sti
or
iret
push
movaps
aad
xchg
jno
ja
cmpb
repnz
or
call
mov
bound
mov
addl
cltd
rorl
je
mov
addr16
subb
and
daa
ds
pop
mov
movsb
sbb
sbb
push
adc
into
push
out
cmp
or
jl
popf
mov
pushf
or
movsb
fisttpl
jns
iret
cmc
int3
test
leave
fst
pusha
into
xor
pop
mov
xchg
cwtl
lods
enter
aas
dec
pop
out
mov
dec
inc
rorl
repnz
clc
jb
shr
mov
arpl
push
sub
push
or
add
or
jnp
push
push
mov
lock
mov
popa
jmp
sub
mov
xor
adc
xchg
push
pusha
mov
icebp
shl
jp
insl
icebp
out
pop
jl
jno
je
addr16
push
lret
lods
jg
xor
jnp
or
dec
ret
or
scas
mov
les
fidivl
sub
sbb
push
out
push
mov
jne
xchg
mov
js
mov
jbe
push
xlat
shrb
fnstenv
push
cmp
xchg
cltd
ss
dec
pop
sbb
xchg
xchg
sbbb
add
pop
dec
js
xchg
call
jg
sbb
rcrl
aaa
jb
rcrb
push
rcrb
loop
jecxz
addb
sub
in
jae
movsl
and
std
adc
pop
push
sbb
mov
and
mov
clc
mov
daa
cld
jle
fnstenv
sahf
jl
rclw
and
mov
mov
cmovbe
pusha
or
ja
pushf
outsb
daa
arpl
in
mov
je
push
and
mov
xchg
and
jge
xor
js
test
mov
mov
bnd
rol
or
xchg
repnz
mov
sub
lds
mov
ja
cmovno
cmp
xchg
mov
sbb
inc
jno
aaa
mov
cmpsb
outsl
or
cmp
fdivrs
sbb
unpcklps
movsb
loop
fmul
icebp
cmp
or
push
mov
push
xchg
cltd
addr16
sbb
cmpsl
and
mov
push
outsl
data16
add
push
fidivrs
sbb
xor
ds
mov
inc
push
icebp
decl
test
pop
fs
inc
jl
dec
pop
adc
or
cli
or
sub
xlat
ret
pop
fcmovnbe
out
inc
cmp
push
pop
rorb
scas
push
outsb
dec
inc
push
data16
out
fwait
sahf
inc
sbb
jns,pt
fsubr
adc
mov
sbb
cmc
jno
jmp
dec
jnp
hlt
inc
out
testl
mov
mov
mov
scas
shlb
les
stos
lahf
mov
sti
lock
inc
xchg
pop
out
or
out
int3
pop
sbb
mov
mov
push
push
clc
shll
call
lock
and
repz
push
ljmp
adc
xlat
jl
sarb
add
ljmp
xchg
push
leave
ljmp
mov
sbb
cld
add
jb
push
stos
fsubs
jae
add
cs
stos
test
jmp
xor
shlb
adc
mov
lock
jg
xor
daa
punpcklwd
mov
and
jmp
sbb
hlt
es
jl
xor
adc
leave
sbb
ret
repnz
push
adcl
push
and
adc
rcll
jmp
lret
sarl
xchg
mov
cs
push
fstl
cmp
xor
mov
dec
jmp
insl
jge
xor
lods
enter
das
cli
push
test
jecxz
lahf
lods
ret
mov
mov
imulb
or
loop
jp
lock
push
mov
adc
in
pop
dec
sbb
and
add
fwait
pop
int
lods
ja
jns
xlat
cltd
mov
dec
ret
mov
popa
repz
sbb
mov
inc
je
fstps
push
or
jne
out
cmpl
pushf
sbb
add
hlt
clc
jbe
mov
dec
adc
push
leave
inc
lds
shrb
push
out
lea
push
sbbb
jmp
xchg
in
xchg
outsl
xchg
dec
xor
mov
add
outsl
je
aas
push
sti
in
lods
shlb
and
cmc
ds
push
shl
mov
dec
dec
pop
mov
mov
adc
inc
das
add
fmull
pop
pop
dec
fisubrl
xor
pusha
xchg
and
sub
lea
in
cmpsl
inc
std
shll
push
mov
hlt
mov
ret
out
sbb
and
cs
jg
call
cmc
push
pop
mov
xchg
mov
mov
inc
push
mov
fwait
jne
mov
outsb
imul
xor
adc
mov
js
push
dec
lret
and
fisubrs
aaa
das
adc
das
flds
xchg
pop
push
adc
mov
cli
mov
adcb
hlt
filds
fiadds
add
lods
ficoms
test
mov
lret
int
add
lock
and
cld
loopne
int
mov
lea
jle
and
les
pop
cmp
add
cmpsb
jmp
adc
loope
mov
inc
xor
out
xchg
sub
stos
dec
arpl
rdtsc
mov
imul
clc
push
in
cli
xchg
dec
push
cld
imul
mov
test
push
xchg
xchg
scas
xchg
sbb
and
pop
jo
lods
cmp
sub
push
dec
sbb
test
sti
int3
xor
in
or
inc
dec
jle
adc
loope
dec
mull
xor
jl
shrl
lods
in
add
push
fstl
or
push
orl
aas
out
cltd
enter
fs
and
or
int3
mov
add
pop
dec
jmp
rcrl
xchg
adc
sarl
insb
mov
xchg
lds
bound
mov
mov
ja
in
jmp
push
add
in
cmp
flds
and
jno
arpl
push
cmp
adc
or
cwtl
pusha
sbb
ds
jg
xor
int
xchg
in
fnstcw
inc
in
xchg
mov
push
mov
mov
repz
test
dec
in
out
orb
jb
aas
jl
xchg
pop
gs
out
rcll
push
shrb
push
adc
jbe
test
push
cs
add
pop
subl
mov
add
xor
xchg
testl
adc
push
add
jmp
jno
jnp
insl
pop
pusha
jg
adc
in
insb
inc
ror
cmc
xchg
and
cld
push
lods
inc
shlb
mov
pop
test
mov
or
lret
repnz
scas
mov
orb
fmull
cs
int3
xchg
push
add
imul
xor
mov
leave
xor
out
addr16
xchg
aad
sbb
mov
fwait
stos
negb
lretw
out
pushf
popf
jecxz
pop
insb
add
xchg
loop
imul
scas
pop
out
dec
in
mov
xchg
sub
xchg
and
push
fsubp
fldl
cmp
dec
flds
jp
pop
scas
andnps
add
add
mov
mov
adc
enter
cmpsl
sbb
hlt
pop
and
sbbl
es
jl
adc
faddl
test
das
ds
push
cmp
and
aad
xchg
js
fldcw
filds
sti
mov
sub
adc
pop
aam
pop
addr16
stos
add
xor
out
addl
je
sub
or
outsl
mov
adc
jno
and
add
std
sbb
mov
fs
add
inc
add
xchg
inc
sbb
adc
aas
adc
icebp
push
movsb
pop
stos
fisubl
popf
cmpsb
cltd
jl
popa
out
sub
add
ss
fistl
add
dec
mov
adcb
pop
std
dec
jnp
or
loop
test
shlb
dec
mov
pop
cmpsb
call
aad
enter
in
das
fbstp
out
rorb
js
clc
out
leave
add
xchg
les
pop
push
mov
fwait
call
mov
icebp
stos
jo
das
rcr
inc
adc
mov
mov
adc
push
in
pushf
out
fsubl
cmp
inc
cmp
cmpsb
pop
lahf
sbb
pushf
add
mov
into
or
fildl
sub
filds
mov
lret
das
jno
sti
add
xlat
push
int3
sbbb
xor
mov
repz
pusha
test
pop
mov
mov
or
ljmp
mov
decl
mov
cmp
sub
and
mov
fxch
add
inc
jmp
lock
dec
adc
inc
push
lods
or
mov
mov
jbe
idiv
fisubrs
sub
pop
cmp
out
mov
test
imul
cmpsl
popa
rcr
sub
fwait
js
mov
pop
stos
sbb
jns
cmp
sti
jle
pop
xor
jle
sub
shrl
out
cld
cmp
test
sbb
jl
hlt
dec
sbb
push
add
lods
scas
shrb
sub
mov
jl
arpl
xor
xchg
mov
add
mov
push
rclb
push
push
sbb
xor
out
icebp
insb
out
cmp
jns
mov
xchg
movsl
mov
push
pop
test
jb
movb
lret
je
and
push
sbb
rcll
pop
fnstsw
mov
adc
lds
repnz
jno
scas
xchg
jnp
rcrb
push
cmp
lock
dec
jns
insl
stc
fs
lret
imul
pop
pop
lahf
cmp
dec
sahf
cmp
pop
mov
leave
add
scas
mov
jle
pop
mov
cwtl
xchg
lock
daa
xor
stc
dec
hlt
lahf
add
add
sub
data16
ret
pop
cwtl
dec
stos
cmp
push
lret
rorb
mov
pop
out
inc
iret
stc
pop
mov
adc
mov
or
or
dec
jl
sub
test
enter
jne
cwtl
sbb
fsub
mov
or
fdecstp
out
dec
pop
xor
xor
jl
into
inc
push
in
jns
imul
loop
adc
adc
fsubr
mov
mov
in
pop
imul
cs
ficoml
xor
stos
inc
call
mov
addr16
les
mov
clc
lods
cmpb
imul
jp
fistpll
sub
mov
lcall
sbb
push
and
xlat
aam
mov
cwtl
push
daa
add
in
mov
lret
jnp
into
dec
sbb
test
aaa
shll
sbb
aaa
mov
add
mov
in
jns
jo
in
mov
mov
add
jl
and
sub
test
jecxz
fidivs
xchg
inc
push
bound
aaa
pop
mov
push
mov
sub
jle
ljmp
jl
pop
cmpsl
call
pop
push
das
es
out
repz
xchg
aad
sahf
aad
adc
pushf
lret
inc
push
jnp
pusha
int
or
cld
fs
bound
shrl
or
aam
inc
sbb
jne
in
enter
and
pop
in
pop
adc
mov
mov
mov
in
mov
iret
aas
pop
loopne
pushf
int3
push
jae
jle
cmp
push
into
or
dec
mov
cmc
fcmovbe
mov
mov
or
xchg
pop
popa
int
jbe
cmp
orl
xor
out
sub
cmpsb
and
popl
iret
xor
inc
sub
push
sahf
mov
iret
popa
dec
or
popf
push
clc
imul
xor
xchg
jmp
cltd
loope
in
popa
nop
scas
scas
push
stos
xor
mov
test
mov
push
movsl
movsl
lock
jle
ljmp
push
and
sbb
mov
cltd
inc
sub
ret
lods
or
xchg
cmp
jecxz,pn
aad
insl
sbb
std
test
mov
cmp
mov
popa
sbb
jecxz
pop
inc
mov
inc
fdiv
jl
aam
cmp
iret
adc
nop
repz
pusha
add
jle
mov
mov
adc
cmp
inc
ficomps
or
mov
sti
mov
xor
xchg
xor
ret
or
mov
adc
dec
fwait
mov
cmp
xor
imul
les
xchg
mov
adc
lods
cmpsb
out
inc
and
jb
ret
fdivrl
fsubl
mov
sar
loop
setg
adc
and
arpl
mov
test
cmp
ljmp
push
xor
ds
fstpt
lods
jecxz
jl
out
repz
sub
or
pop
subl
sbbl
or
lds
sub
mov
outsb
mov
rorb
sarl
adc
gs
mov
dec
push
idivl
in
adc
and
notb
push
daa
orl
pop
test
pop
jo
mov
ljmp
mov
xor
test
movl
sbb
pop
pop
in
outsb
jle
jns
jno
pop
mov
outsl
pop
in
rcll
fucomp
mov
xor
mov
jne
cld
pop
ret
mov
jmp
mov
dec
xor
and
push
inc
test
decl
aaa
dec
or
lds
or
mov
lea
test
ja
cwtl
mov
cltd
out
ljmp
lock
pop
movsb
popf
push
push
icebp
jg
or
stc
bound
xchg
pop
adc
sbb
jb
and
jbe
push
test
fistpl
and
pushf
jnp
xor
sbb
jmp
push
lds
popl
or
jbe
mov
sub
push
inc
inc
lods
repnz
data16
mov
mov
mov
shrb
mov
jmp
xchg
xchg
sub
mov
xchg
aaa
hlt
cmp
mov
cld
or
cmc
out
mov
pusha
les
notb
in
sbb
or
lret
incb
inc
jo
mov
jmp
inc
or
sbb
icebp
mov
cmpb
fstpt
cld
fisttpll
lea
filds
into
pop
repz
scas
rolb
dec
stos
mov
fidivrl
push
add
and
enter
inc
push
dec
roll
lret
adc
inc
adc
xor
push
imul
out
mov
inc
ds
and
mov
push
push
jge
or
pushl
xchg
pushf
mov
mov
fs
in
in
jb
cltd
mov
shrl
dec
pop
daa
cs
fstps
push
sbb
pop
adc
fstpl
sbb
pop
mov
mov
sti
cmp
cld
repz
and
cmp
inc
lret
je
lahf
xchg
jecxz
in
imul
and
negl
pop
fildll
sbb
adc
cmpsb
sub
inc
mov
daa
mulps
push
push
jno
orl
jp
sub
int
jg
xor
cli
xchg
mov
roll
inc
mov
pop
xchg
xchg
nop
mov
ja
das
adc
je
pop
push
sahf
jge
sbb
lret
imul
jns
scas
xor
mov
lret
ljmp
mov
rorl
inc
dec
adc
jae
fildl
loopne
imul
cwtl
jb
sbb
fldenv
clc
inc
push
or
adc
mov
popf
icebp
add
mov
shll
sahf
mov
lahf
shrl
pop
clc
nop
shlb
xchg
loopne,pt
outsb
ds
xchg
add
into
or
je
xchg
mov
shrl
mov
push
stc
jle,pt
and
mov
xor
mov
orb
dec
sub
sbbb
fimuls
into
adc
bnd
mulb
lcall
xchg
into
psadbw
mov
les
pop
xchg
sbb
mov
mov
adc
ret
cmc
pop
shrl
test
fnsetpm(287
sbb
sub
ret
pop
adc
test
mov
pop
xor
pop
sahf
sub
adc
aam
fsubr
mov
add
and
mov
add
push
stc
mov
rorb
ss
mov
cld
mov
or
jae
push
loopne
xchg
pop
mov
scas
std
lret
popl
add
mov
xor
fs
in
addr16
leave
repnz
cltd
mov
iret
rcrb
cmp
popf
stc
in
add
jb
in
stos
imul
dec
sub
leave
push
inc
jne
clc
jp
out
xchg
addr16
adc
gs
xlat
lock
add
insb
rcl
cmp
pop
xchg
fildll
ss
sbb
xchg
out
dec
setp
outsl
sub
push
cmp
pop
in
cmp
mov
push
cmpsl
and
and
icebp
inc
mov
in
push
cmc
mov
mov
sbb
scas
xor
int
mov
mov
stos
cmp
sbb
fiaddl
ss
mov
stos
lcall
cld
in
xor
inc
pop
dec
pop
das
inc
addr16
aad
stc
push
xor
sub
pop
inc
rcrl
icebp
or
lods
divb
cld
int
dec
in
xchg
and
leave
or
and
pop
outsl
dec
mov
and
add
fcompl
mov
repz
scas
ret
fmulp
xor
add
flds
fucomip
mov
jns
pop
jl
and
mov
inc
mov
std
mov
push
jl
js
push
add
push
cmp
mov
jp
sbb
sbb
test
out
jl
stos
decl
jge
jnp
int
decb
dec
ljmp
fisubrs
clc
jo
xchg
mov
or
lcall
jl
xor
xor
outsb
fnstsw
or
xchg
int
ret
mov
and
mov
inc
cmp
pop
imul
mov
xchg
pop
je
out
jae
imul
addr16
push
xchg
xchg
enter
pop
roll
andl
mov
add
sti
or
rol
xor
jmp
sub
pushl
pop
cwtl
nop
and
es
movsl
scas
call
lds
cs
ret
add
addr16
repnz
cld
push
cmc
insl
nop
push
popf
or
pop
add
ljmp
xor
mov
cmp
xchg
scas
jge
and
lods
jnp
mov
rcrl
mov
pop
push
jns
jae
pop
popf
pop
inc
mov
ficoms
test
test
dec
sbb
mov
or
mov
add
and
fwait
or
push
lea
je
bound
add
mov
xchg
je
loop
lret
out
or
mov
xchg
aaa
jp
mov
idivb
cwtl
jge
aas
xor
sbb
pop
inc
inc
cmp
call
xchg
aam
lcall
aam
imull
popf
jnp
xor
sub
xor
mov
push
mov
push
ljmp
fnstsw
mov
xchg
adc
mov
jp
pop
jbe
jno
sbb
xor
das
out
push
inc
sbb
das
fs
cmp
arpl
and
add
fiaddl
rcrb
xor
shll
jne
inc
mov
clc
sub
inc
xchg
dec
xor
mov
negb
inc
pop
pusha
in
lahf
sti
js
push
in
out
sbb
ja
arpl
lahf
xor
sub
or
loope
add
mov
cmp
mov
mov
mov
dec
xor
aad
inc
pop
scas
arpl
cwtl
mov
sub
inc
mov
xchg
add
mov
mov
orl
dec
mov
adc
stos
leave
jg
stc
shrl
es
inc
loopne
jmp
xchg
ja
mov
mov
adc
add
push
popa
outsl
shrb
add
cmc
es
xchg
repnz
dec
test
fisttpl
xor
dec
push
nop
popf
stos
adc
pushf
and
fisttps
inc
inc
inc
add
sarb
ljmp
inc
adc
outsb
sub
fists
mov
and
xchg
cmp
pop
jae
cmc
lock
jle
sahf
das
and
jnp
mov
cmp
xor
add
rol
xor
mov
repnz
adc
mov
jnp
sbb
mull
push
sbb
fs
mov
fdivr
shlb
les
push
xor
mov
int
lock
jnp
aaa
jle
pushw
pop
push
xor
cmp
jns
push
rorl
les
test
add
hlt
push
insb
mov
mov
adc
mov
ss
dec
mov
stc
xchg
sbb
movsb
xchg
iret
xor
fldcw
aaa
mov
adc
and
daa
sbb
cmp
ss
mov
jne
leave
adcl
call
sub
jae
mov
xchg
rorl
and
and
xor
mov
loope
sbb
int
mov
repz
sbb
push
inc
stc
cmp
pop
outsb
cli
jp
repnz
divl
aas
xor
push
mov
mov
jl
push
mov
xchg
insl
stos
into
adc
jns
adc
jge
fisttps
in
fistps
dec
je
repz
xorl
mov
mov
and
in
shr
loop
push
xchg
push
insl
aaa
movsl
mov
inc
pop
cmpsb
add
aas
jno
enter
ds
ljmp
push
nop
xchg
leave
popa
test
rorl
sub
cmp
or
inc
pop
sarl
lods
mov
jb
jo
mov
cmpsb
jmp
rol
std
push
js
loop
arpl
and
jne
pop
adc
lock
popl
xlat
mov
in
sub
out
push
push
or
sub
popa
insb
js
pop
add
cmp
lods
pop
add
cmp
sub
pop
pop
jbe
adc
push
push
mov
and
mov
adc
add
js
lock
and
inc
push
test
and
jo
loope
mov
add
and
lods
jne
mov
sub
mov
pop
fsubp
aas
jmp
fistpll
mov
sbb
sbbb
cmpsb
movsl
ss
faddl
je
or
jg
mov
push
push
push
dec
fadd
xor
xorb
push
hlt
dec
mov
or
pop
push
insb
mov
inc
test
or
cmp
mov
stos
arpl
fwait
inc
xchg
iret
jo
adc
add
fildl
pop
lea
imul
ss
fidivrl
adc
sub
adc
mov
xchg
lahf
xor
aaa
cwtd
jbe
adc
arpl
pop
adc
lahf
aaa
xchg
push
repz
fs
lods
inc
xchg
xchg
inc
or
xchg
das
pop
pop
xor
iret
push
mov
xchg
lock
jl
testb
jbe
popf
dec
call
cmp
test
xchg
dec
imul
in
imul
or
scas
mov
lock
push
xlat
mov
or
roll
aas
bnd
inc
push
push
out
sbbb
dec
push
imul
adc
mov
mov
mov
xchg
incb
stc
jnp
sub
jns
mov
aas
fmuls
xchg
test
mov
loop
insb
ficoml
push
mov
arpl
sbb
mov
imul
jmp
hlt
mov
add
lods
jle
jae
dec
mov
sbb
shrb
mov
aas
aas
test
xor
jo
push
lea
stos
and
push
push
in
xchg
push
add
mov
cmc
sub
cmp
mov
cmp
jmp
xor
je
outsl
and
ja
je
scas
imulb
ret
in
push
xor
pop
imul
sbb
adc
mov
or
adc
pop
lahf
dec
or
dec
lcall
sar
movsl
mov
insb
test
enter
subb
into
sbb
xchg
cmp
iret
fs
mov
jg
int
cmp
lret
iret
dec
mov
fdecstp
mov
xorb
cltd
orl
fstpl
cmp
dec
ljmp
test
xchg
pushf
dec
nop
int
outsl
lods
pop
negb
cwtl
jmp
insl
pop
lds
cli
je
jle
cmp
mov
dec
inc
and
dec
adc
dec
inc
or
dec
push
rolb
cmp
out
testl
fcomp
sub
addb
mov
lods
sbb
scas
xor
adc
sub
xchg
js
sbb
push
pop
test
sub
xchg
jnp
xor
lods
pop
jg
jp
test
push
fidivrs
xor
xchg
mov
mov
cmc
mov
fisubl
in
and
test
sub
xor
repz
orb
lcall
sbb
add
push
scas
or
sbb
xchg
sub
sbbb
shlb
mov
inc
cs
loop
lret
or
in
pop
mov
mov
movsl
call
leave
pop
lret
add
cltd
out
popa
out
xchg
out
xor
sub
jo
pop
push
mov
push
lret
nop
rol
mov
push
clc
xor
xchg
push
stos
and
movsl
loopne
xor
leave
mov
pop
cmc
std
pop
ret
xchg
in
xchg
mov
mov
clc
sub
mov
pushf
mov
int
cwtl
push
dec
mov
fsubs
addr16
js
push
mov
inc
out
and
pushf
enter
das
pop
das
stos
sub
adcb
out
popf
pop
jle
out
jmp
cmpsb
imull
xchg
sbb
mov
pop
cmpsb
mov
repnz
call
out
popa
xor
xchg
fistpl
adc
fbstp
jecxz
pusha
out
fnstsw
xchg
push
inc
or
out
dec
daa
pop
cltd
cmc
sahf
jp
push
movsl
fld
ret
mov
xor
cmpsl
xchg
lret
mov
pusha
into
jae
cmp
push
mov
aas
popa
jae
xchg
sarl
stos
jns
push
ja
cmp
cld
in
je
mov
loopne
lret
loopne
jmp
cmpsl
ret
outsb
lds
negl
lret
mov
inc
stos
cmp
jle
leave
pop
test
jg
mov
call
mull
shll
xlat
fistpl
es
mov
repz
inc
mov
cs
test
in
stc
push
and
cwtl
mov
lret
repnz
icebp
mov
mov
adc
aad
cmpsb
mov
jnp
mov
ds
mov
push
jnp
leave
jnp
dec
xchg
fisubrs
in
mov
mov
aas
mov
xor
pop
lahf
xor
mov
fisttpll
scas
pop
jmp
lret
and
pop
fisubs
jns
lret
and
dec
cltd
mov
aam
outsl
xlat
push
lcall
and
sbb
les
xor
mov
xchg
jl
jne
dec
mov
jmp
shll
sbb
lds
jbe
xchg
jb
mov
and
lods
imul
addr16
jbe
ficoms
xor
xlat
stos
pop
lods
sub
jp
cmp
mov
ficoml
lret
jns
push
cwtl
push
sub
mov
cmpsl
nop
pop
pop
adc
jbe
pop
mov
adcb
push
push
loopne
cltd
mov
push
sbb
push
or
sub
push
push
movsb
add
mov
pop
dec
sub
mov
ss
ret
inc
or
fwait
mov
mov
sbb
jo
mov
jb
repz
pop
dec
or
cli
xor
ror
clc
das
inc
sti
mov
or
xor
cmpsb
mov
mov
mov
ret
add
mov
jb
adc
sbb
push
insb
or
into
mov
sub
add
mov
push
imul
adc
or
xor
fstl
jecxz
mov
outsb
aaa
add
mov
xchg
test
adc
xor
adc
mov
xchg
mov
testb
in
xchg
mov
push
xor
call
push
into
leave
hlt
lock
pop
fimuls
pop
mov
inc
push
mov
pop
jmp
xchg
popa
cwtl
sub
mov
fcoml
mov
cltd
push
push
cwtl
mov
jne
jge
push
inc
insl
pop
mulb
xchg
test
iret
cmp
jge
or
mov
in
xchg
pop
fwait
and
and
mov
add
mov
xor
fdivrs
mov
rorb
xor
xchg
mov
and
mov
data16
into
in
lcall
ljmp
adc
stos
fnsave
shl
mov
xchg
cmpsl
cmp
in
jb
push
jnp
or
cli
fimull
push
ljmp
inc
je
push
das
pop
cli
shl
xor
stos
inc
mov
je
inc
dec
fisubrl
cmpl
add
mov
sahf
add
cs
sbb
sbb
cmp
nop
dec
mov
gs
sbb
push
sub
push
je
xchg
xchg
jb
leave
or
nop
lods
mov
xor
dec
inc
scas
shl
adc
inc
stos
call
xchg
sbb
mov
outsl
xchg
enter
pop
out
dec
pop
mov
in
lds
xor
adc
jl
add
jle
adc
insb
and
shl
lea
enter
fadds
outsb
sahf
iret
cwtl
and
jle
fisubrs
ret
loope
divb
int3
inc
loop
popa
popa
xor
inc
push
mov
sub
jg
adcl
sub
push
push
and
inc
jp
dec
push
ss
dec
xchg
inc
cmp
jmp
ds
mov
test
pop
cmp
inc
push
dec
hlt
cs
mov
sarl
jns
add
arpl
divl
and
push
or
psubsb
cld
or
pop
jne
push
or
aaa
add
sbbl
in
xor
movsl
movsl
inc
rcl
leave
and
mov
mov
icebp
das
repz
ret
jno
pop
sub
xchg
movsb
push
andl
mov
repnz
xchg
jge
icebp
cwtl
or
jecxz
imul
dec
fmuls
and
pop
adc
shl
cli
mov
xchg
cwtl
lods
ss
rclb
or
add
adcl
insb
aaa
jo
pop
push
sbb
repnz
bnd
sbb
int3
cmp
mov
jle
popf
fcmovne
clc
xchg
mov
stos
push
adc
out
jp
xchg
mov
dec
cwtl
jg
rcr
ljmp
adc
lds
aaa
int
orl
mov
pop
xlat
adc
sub
frstor
push
sbb
out
xlat
mov
popf
ret
fisttpll
push
aad
and
and
js
pop
out
call
repnz
pop
cwtl
jp
movsl
xchg
mov
aad
fs
jmp
out
mov
je
sbb
cmp
mov
in
pop
cld
test
mov
adc
dec
pop
popa
insb
sbb
jbe
or
lds
sub
jg
loop
nop
shl
int
and
push
rclb
xor
pop
imul
pop
scas
pop
mov
mov
jle
jne
loopne
dec
push
mov
lds
push
push
xchg
mov
aam
call
popf
sahf
cmp
mov
inc
icebp
aad
ret
mov
jb
rorb
inc
adc
addl
jge
repz
ljmp
pop
cmpsl
inc
enter
sub
stos
imul
sbb
inc
outsb
out
sbb
mov
cmpsb
sub
lods
movb
cld
and
add
pop
cli
shrl
mov
sar
sub
jo
js
into
add
adc
or
mov
mov
int3
jecxz
push
sbb
rorl
ficomps
mov
scas
fsubrl
sub
subb
mov
stos
push
in
push
int3
add
cs
pop
dec
lret
xchg
jb
ss
push
loopne
jp
ficoms
mov
sub
pop
jmp
popa
nop
nop
insl
inc
and
push
mov
xchg
pop
sbb
sbb
fistpll
pop
scas
test
add
push
pop
andb
shlb
mov
nop
mov
inc
fwait
or
inc
push
adc
subb
ss
pushf
imul
movsl
sahf
pushf
fsts
pop
stc
ds
in
mov
add
arpl
dec
mov
or
rolb
jge
sbb
or
mov
scas
jle
pop
pop
mov
add
out
ds
jg
fisubrl
lahf
jo
jmp
loop
push
in
sbb
push
adc
pop
outsb
pop
outsb
jae
int3
popf
pop
or
mov
jns
loopne
mov
daa
je
fisubl
inc
pop
enter
add
add
test
ss
sar
jb
sbb
inc
out
jbe
test
push
dec
jl
shr
in
and
into
cltd
fwait
iret
dec
xchg
repz
sbb
inc
mov
aaa
cmp
movsl
sub
cmp
adcl
pop
mov
dec
dec
enter
roll
xchg
jne
out
pop
mov
gs
test
push
icebp
filds
add
fcoml
iret
stos
mov
dec
sti
push
loope
test
lret
jae
push
hlt
mov
es
push
mov
test
pop
outsb
pop
rcrl
aas
aad
jnp
mov
mov
sub
icebp
jae
mov
adc
jecxz
mov
orl
cmp
mov
cmpsb
sbb
mov
jmp
mov
jp
mov
mov
push
out
pop
fldt
mov
xchg
es
mov
push
stos
xlat
cs
pushf
aam
loope
leave
stos
mov
push
les
sahf
cwtl
sub
sbb
fildll
leave
inc
fucomip
mov
adc
into
and
or
pop
scas
fs
mov
mov
in
inc
adc
or
mov
mov
pusha
jp
dec
and
shr
repz
test
arpl
jns
jg
jg
sahf
fisubrs
adc
dec
js
js
shl
xchg
push
xlat
arpl
es
add
xor
xchg
mov
nop
or
mov
push
mov
push
out
cld
js
arpl
push
mov
iret
xor
add
enter
out
out
mov
or
sub
sahf
sub
es
mov
mov
nop
loopne
mov
daa
je
enter
cmp
mov
add
shrb
pop
and
or
xchg
repz
add
insl
or
sub
cld
movsb
dec
cli
and
add
xchg
dec
mov
roll
stos
push
pop
mov
adc
out
cli
testb
sbb
and
mov
pop
push
movsl
std
cmp
sbbb
jo
mov
pop
pop
out
dec
je
push
in
shll
dec
mov
jge
mulb
bound
mov
aam
cld
push
fld
jmp
mov
xchg
rcr
ljmp
lods
clc
imul
ficoms
testl
pushf
stos
push
in
dec
mov
push
xor
out
inc
dec
popf
xchg
jp
and
fsubp
imul
addl
lcall
rol
xchg
mov
shl
out
shr
fnsave
sbb
mov
aaa
push
dec
icebp
inc
test
cmp
cwtl
inc
js
jmp
xchg
repnz
and
adc
mov
add
push
fdivl
and
cmp
and
out
insl
test
jle
jmp
sbb
cmpsl
jns
mov
sbb
adc
sub
inc
into
mov
mov
movsb
inc
popf
es
cmp
mov
lods
fiadds
xchg
clc
mov
inc
xchg
jns
ljmp
imul
lea
sbb
out
adc
fstps
aaa
xor
into
push
xchg
lret
int
insb
mov
test
int3
xchg
sbb
icebp
inc
jne
push
xor
and
jbe
popa
inc
adc
mov
push
imul
add
lahf
cmpsl
adc
jl
pop
cmp
movsb
cli
xchg
adc
xchg
sub
stc
inc
pand
and
int3
push
jmp
cmp
sahf
jmp
mov
hlt
enter
jns
sub
test
xchg
xor
pop
cmp
and
cmp
loopne
ds
fildl
gs
jno
lcall
repnz
adc
loop
arpl
cld
aas
mov
jge
mov
cmp
mov
movsl
sbb
push
mov
sub
fistpll
pop
mov
imul
pop
jbe
adc
push
and
inc
push
leave
test
sahf
xor
fistpll
pushf
mov
lock
sub
add
or
aaa
mov
pop
xchg
jns
imul
and
add
xchg
int
sub
ffreep
movsb
cmp
dec
pop
push
out
outsb
push
lods
mov
negb
jg
movsb
xor
test
dec
aaa
sbb
push
pop
outsl
xlat
aas
pop
mov
lods
and
cmp
cmp
imul
adc
sbb
fadd
loop
nop
or
xor
iret
andl
cmpsl
std
sub
dec
lock
adcb
out
xor
jmp
call
loopne
inc
subl
xchg
xlat
push
mov
pop
pop
sbb
and
ret
aad
push
scas
sbb
adc
push
and
imul
cmpsl
xchg
mov
jbe
notb
push
push
movsl
or
lods
aad
pop
into
jns
es
and
in
ja
inc
add
mov
add
es
adc
inc
mov
pop
out
mov
js
hlt
push
aam
push
jl
jo
xchg
xchg
adc
mov
in
setle
pop
or
inc
mov
pop
std
xor
inc
mov
fstl
xchg
xchg
or
in
cmpsl
push
xchg
and
fnstenv
mov
lahf
js
out
xchg
inc
dec
or
and
iret
lret
hlt
and
rcl
dec
pop
imul
dec
gs
cli
les
push
jg
xlat
pop
mov
xchg
les
pop
xchg
dec
and
incb
and
es
xor
rolb
sarb
arpl
push
sub
inc
pushf
mov
popa
sahf
pop
rol
packssdw
cwtl
mov
pop
cli
js
dec
mov
mov
dec
xor
adc
and
rorl
jo
aad
arpl
and
stos
mov
push
popf
fwait
lock
cld
pop
push
popf
stos
and
nop
jo
or
mov
add
pop
inc
out
mov
lods
lds
fadd
outsb
cmp
ljmp
aas
fsubrl
add
fldl
imul
add
jl
rolb
push
sbb
mov
sub
sub
xchg
inc
mov
rolb
aam
inc
movsl
push
mov
arpl
clc
lods
es
loopne
loopne
sbb
mov
fdivrl
bound
inc
pop
pushf
test
es
addr16
pop
cmpb
jge
mov
or
mov
dec
ret
cmp
xor
adcl
in
cli
mov
loope
imul
mov
xor
shl
into
rorl
mov
pop
icebp
jb
loop
dec
sar
das
decb
xchg
popa
imul
dec
xchg
push
js
jbe
inc
clc
xchg
std
sub
frstor
in
mov
inc
test
adc
push
cmp
ret
lret
stos
push
aam
mov
xchg
push
pop
push
cmp
out
xor
mov
into
or
and
dec
enter
or
push
lret
or
movsl
mov
data16
insl
mov
push
mov
and
jle
stos
shlb
pop
push
fnstcw
call
dec
shrl
popa
inc
in
imul
adc
push
push
adc
cmp
fldl2t
cltd
or
decl
imul
or
add
or
add
dec
js
push
mov
outsb
daa
sbb
popf
loopne
and
add
mov
pop
mov
addr16
sbb
or
xchg
adc
std
into
stc
cmp
or
jbe
aas
aaa
jae
adc
jno
or
lea
mov
test
and
sbb
loopne
mov
mov
repnz
mov
lret
xor
add
xor
lock
sbb
mov
mov
xlat
call
add
dec
mov
jp,pn
or
xchg
ja
cld
dec
and
mov
jmp
dec
gs
dec
pop
xchg
fnstsw
cmpsl
push
mov
lods
pop
int
dec
dec
mov
cli
sub
mov
mov
and
fimuls
out
mov
push
dec
pushl
add
lea
aaa
cmp
sbb
add
dec
xchg
or
jp
sbb
popf
test
xchg
add
or
inc
fwait
into
adc
jb
add
jmp
dec
fdivp
adc
into
dec
movl
dec
xchg
or
test
aam
cmpsb
xchg
js
popa
sarb
cs
in
leave
stc
rolb
cli
in
jae
into
add
mov
jbe
jl
mov
shrl
jne
push
cmp
lds
fwait
or
aad
pop
xchg
nop
mov
xor
sub
ficoms
dec
andb
inc
push
xchg
xor
lods
gs
pop
adc
call
mov
sti
sbb
add
idivb
loope
pop
mov
out
adc
jl
mov
mov
dec
rcrl
movsl
addr16
lods
mov
xor
push
mov
adc
dec
shlb
pop
jns
stc
incb
mov
ja
pop
fwait
lock
lea
ret
daa
sub
je
cltd
idivb
hlt
push
xor
lea
das
mov
gs
fisubl
dec
or
popa
jl
dec
sbb
repz
insb
mov
jbe
xchg
ljmp
ret
sub
jbe
mov
dec
fadds
shrl
test
fidivs
sub
int3
icebp
jae
add
dec
in
insb
lahf
fidivl
mov
dec
mov
dec
idivb
jle
rolb
lock
pop
lret
out
pop
in
jo
cmpl
jge
jno
rclb
in
push
mov
push
sti
push
xchg
jb
xchg
icebp
dec
test
lcall
or
fisubrl
push
sahf
or
mov
loopne
push
push
into
cwtl
lock
repnz
faddl
dec
mov
pop
iret
pop
ret
pop
in
dec
sarl
adc
xchg
push
cmpb
or
shll
pop
cs
dec
imul
bound
mov
je
test
cmp
sbb
add
inc
fsubl
imull
test
jl
in
loope
add
lea
inc
inc
cmp
mov
and
in
data16
rclb
testb
pop
push
or
mov
nop
iret
jb
sbb
sbb
leave
lret
pop
movsl
mov
mov
cmc
in
sbb
repz
jmp
rcr
sub
rcrl
pop
sbb
in
in
adc
fisubrs
xchg
outsb
cmpsb
pop
test
shr
xchg
addr16
inc
out
scas
pop
push
das
dec
rcrl
sub
mov
gs
xorl
iret
push
idiv
sbb
mov
adc
aad
jno
xlat
fbld
or
popf
jo
inc
in
inc
in
in
nop
mov
push
push
cld
dec
shrl
xor
pop
cmpsl
cli
fdivs
sahf
mov
aam
xor
and
mov
in
xchg
inc
push
test
fmuls
shrb
fs
mov
js
clc
scas
ja
mov
jns
stc
test
popf
xchg
cmove
fists
leave
in
jo
inc
inc
bound
aaa
popf
std
ret
xor
xchg
cmpsl
fmul
sub
shrl
psubw
int
sub
pushf
add
ret
mov
movb
push
outsl
dec
imul
xor
es
jno
add
add
mov
pusha
enter
js
adc
in
mov
loop
rcr
jns
divl
orl
and
cmpsb
pop
adc
jbe
dec
xor
cwtl
cmc
arpl
cmpsl
inc
or
arpl
pop
pop
sbb
insl
dec
or
addr16
lret
mov
push
sub
push
jmp
cwtl
ds
scas
mov
out
clc
jge
test
outsb
and
fnstsw
xor
or
push
fwait
sub
inc
pusha
pop
jbe
and
jmp
mov
je
xchg
je
jb
cmp
fldl
inc
hlt
mov
inc
sub
lods
adc
enter
or
push
mov
xchg
je
lods
les
mov
add
and
fbstp
dec
and
repz
or
sub
jmp
mov
jl
loope
cmp
fmull
aas
setg
mov
movsl
push
ss
inc
cwtl
mov
sbb
sub
mov
push
test
out
jmp
pushf
das
sti
test
fstpt
pop
stc
lahf
push
mov
jg
mov
push
imul
test
lret
imul
insl
jo
push
or
mov
daa
and
call
shr
mov
fsubl
mov
mov
inc
dec
or
cli
out
and
pop
dec
jo
push
pop
hlt
and
les
push
inc
or
pop
or
lock
gs
bound
sbb
shl
pop
int
iret
mov
push
or
cmp
test
lret
std
mov
sbb
lret
fnstsw
jns
stos
pusha
dec
cli
fs
in
aad
add
ljmp
push
cmc
stc
inc
sub
adc
decl
mov
or
xchg
daa
pop
test
orl
pop
add
mov
push
cld
insb
fidivrl
or
add
xlat
jns
or
lcall
dec
add
setns
gs
shlb
aam
cmp
pop
mov
repz
lods
in
mov
jo
jge
xor
inc
enter
mov
pop
add
jl
dec
push
cmp
push
mov
shlb
arpl
cld
dec
sub
mov
ja
or
loop
shl
inc
sahf
jle
and
outsb
add
int3
pop
in
fcomps
das
in
or
xor
js
jo
ja
mov
sahf
push
jmp
mov
mov
jnp
sub
xchg
mov
lds
sub
mov
add
pop
push
xchg
movsl
mov
test
inc
rorb
mov
xor
outsb
in
paddusw
inc
movsl
dec
push
std
pop
jae
cmc
test
loope
stos
jecxz
add
jne
movsl
rcrl
mov
data16
xchg
out
shr
adcb
pop
pop
pop
sbb
roll
rol
jl
lret
jp
fnstcw
shr
xchg
ja
mov
xchg
sub
xchg
cmp
aaa
inc
mov
call
pop
out
fiaddl
rolb
jle
fs
mov
insl
sbb
sbb
stc
jge
aas
or
lods
sbb
decl
mov
shlb
add
test
sbb
cmpsb
xorl
lret
movsb
mov
mov
inc
sahf
cmp
cltd
add
outsl
int3
sub
cmpsb
dec
ret
mov
push
push
sub
adc
dec
or
mov
cli
mov
xlat
jno
adc
les
test
xchg
bound
pop
adc
xchg
pushf
aaa
adc
call
cmc
dec
imulb
imul
inc
icebp
pop
push
jne
jnp
test
fst
xor
negb
mov
mov
cmc
jp
rcll
lea
and
arpl
hlt
add
lds
cmp
lods
daa
jo
jg
or
xor
mov
inc
mov
lds
adc
mov
lods
insl
mov
inc
push
xor
push
push
xchg
fcmovnu
pop
hlt
xorl
push
sbb
pop
jb
in
jp
les
test
aas
jg
add
jbe
mov
out
bound
jecxz
cld
inc
mov
mov
jns
pusha
icebp
mov
imul
xchg
sbb
mov
pusha
xchg
inc
mov
nop
aaa
mov
mov
jo
loopne
add
sbb
jecxz
mov
mov
pop
or
aaa
pop
mov
xor
push
sbb
and
addb
leave
stos
sbb
pop
je
and
jne
bound
mov
inc
adc
inc
clc
push
mov
inc
ss
lcall
cs
clc
mov
test
rorl
mov
push
xor
enter
js
pop
jp
cld
cmpsl
push
push
mov
hlt
push
clc
test
cli
test
sub
repz
data16
arpl
dec
test
int
adc
sbbl
loop
pushw
nop
cltd
jb
cli
addr16
jb
dec
in
sar
inc
movsb
into
sbb
mov
lea
inc
rolb
cmp
dec
fwait
sbb
cmp
jp
pop
inc
fcompl
xchg
std
jbe
lods
push
int3
jns
lea
or
sarl
aam
jne
nop
scas
dec
mov
addb
fstpl
jmp
loop
popf
add
insl
ss
icebp
add
pop
jmp
fs
stc
mov
les
sahf
sti
fldt
adc
mov
jge
out
pop
mov
push
sbbb
cmp
fs
jbe
sarb
pop
iret
in
sub
cmp
mov
insl
sub
pop
leave
fs
js
sbb
or
xchg
xor
push
cmp
sti
into
pop
xor
out
xchg
in
mov
cmpsb
fmul
add
adc
mov
jecxz
arpl
loope
fcoml
mov
lcall
aam
jmp
sahf
outsb
jnp
push
push
popa
xchg
cmp
fstpt
jns
imul
sbb
xorb
leave
push
mov
push
adc
pop
in
pop
lock
xor
push
xor
cmp
out
push
mov
sub
popa
cmp
mov
lahf
je
mov
cmp
pop
mov
or
lea
fmuls
jno
in
xchg
andb
js
inc
cmp
xor
jns
daa
push
and
cmovns
sbb
push
pop
mov
out
in
mov
or
dec
mov
dec
sti
jne
fcomps
popa
mov
jmp
xchg
mov
dec
jbe
ss
orl
sub
pop
or
addr16
call
or
push
leave
js
pop
ret
fisubrs
xor
test
subl
xchg
lds
inc
insb
shrl
adc
xchg
push
sahf
pop
sarl
pop
outsl
push
and
jp
or
mov
xchg
sub
das
std
inc
pop
test
and
xchg
daa
jae
ret
mov
rclb
daa
in
int
or
sbb
mov
add
or
push
cmpsb
clc
ljmp
or
sar
shr
test
jp
cmp
out
cmp
sub
xchg
lods
jns
mov
and
jae
sarb
repz
stc
inc
jle
fsubp
adc
scas
stos
jae
mov
lret
loope
inc
lcall
test
mov
std
push
movsb
adc
and
jle
fstps
jns
jns
inc
add
push
jmp
jle
dec
ja
mov
cmc
add
add
jns
or
sbb
pop
int
mov
jl
and
js
loop
mov
or
cwtl
sub
out
loop
cmp
and
daa
and
or
ss
fldpi
or
and
jmp
jb
mov
cmp
lds
out
add
insl
aad
or
or
addr16
insl
add
inc
mov
pop
insb
jno
mov
pop
lock
and
or
dec
fdivr
xor
fsubl
sbb
sbb
inc
loope
aaa
dec
call
cmp
sbb
push
movl
add
mov
pop
sbb
mov
add
and
enter
pop
fmulp
insb
pop
add
xchg
pop
imull
jb
push
inc
push
mov
or
jnp
movsl
push
lcall
adc
rcl
mov
lods
movsl
xchg
sbb
sbb
mov
sti
inc
pop
jg
and
mov
pop
fbstp
add
mov
xchg
ds
and
mov
pop
cmc
imul
xor
std
sub
cmp
stos
mov
jge
pop
enter
inc
icebp
into
mov
push
cmp
les
xlat
cmc
jns
xchg
pop
mov
lret
popa
lahf
and
cmp
rol
ficompl
lret
adc
mov
je
dec
mov
into
inc
dec
cld
sub
popf
sti
jp
out
lcall
leave
mov
mov
add
sarb
mov
cli
repz
jo
sti
imul
call
jge
lret
call
lods
adc
dec
test
hlt
enter
mov
cltd
sbb
mov
arpl
test
mov
stos
movsb
push
inc
jecxz
clc
mov
pop
add
and
gs
pop
mov
jb
cltd
sahf
xchg
add
cld
nop
sub
outsl
adc
add
notl
inc
sub
adc
and
call
xorb
inc
rcrl
mov
sub
aas
insl
sti
sbb
pop
insl
pusha
out
test
pop
popf
mov
lcall
out
xchg
push
mov
push
sbb
jecxz
sub
ss
movsb
mov
adc
cmp
sub
mov
mov
lock
pop
insb
fidivrl
mov
hlt
fsubrl
and
in
xorl
call
nop
push
inc
dec
std
jno
push
in
dec
cmpsb
and
test
faddl
or
das
lcall
jp
lea
or
mov
ret
mov
mov
sbb
sub
mov
push
and
cs
mov
fcompl
jecxz
add
test
mov
rorl
jne
cmp
or
mov
adc
aas
cmp
out
pop
sub
xchg
jge
mov
adc
dec
sbb
xor
mov
lea
stos
cmp
cmpsl
pop
jge
and
hlt
and
pop
pop
push
hlt
dec
add
loope
adc
popa
push
inc
in
add
adc
int
movsb
mov
dec
sbb
xor
jmp
xor
in
inc
mov
cmp
jns
pop
push
pop
sub
mov
jo
das
int
lahf
aam
sahf
les
cmp
xor
mov
loope
xchg
insb
aad
sbb
and
nop
stos
aam
jb
xor
fs
pop
loop
loope
gs
mull
lret
xor
loop
and
rolb
fnstcw
paddd
and
outsl
out
jno
and
mov
dec
adc
sbb
xor
sub
add
and
xor
and
sbb
and
das
imull
nop
notl
imul
daa
jo
fistpll
cltd
scas
push
or
int3
cmpsl
push
das
popf
and
jb
xor
nop
mov
or
dec
jns
cmc
jle
fcomps
adc
andl
ja
cs
lret
rdmsr
shl
jo
ss
cs
cmp
cmc
add
or
dec
fcoml
icebp
and
pop
fstpl
ljmp
rcrb
push
repnz
or
fwait
ja
ljmp
mov
mov
scas
cmp
or
sub
rorb
and
inc
je
into
pop
aam
mov
jp
clc
cmp
push
jbe
adc
pop
cmp
fwait
mov
mov
lods
push
mov
jb
xchg
push
es
shlb
inc
mov
jns
pop
cmp
sbb
jge
fnsave
cmp
jp
cld
movsb
out
clc
sub
fs
push
xchg
push
inc
inc
jno
movsl
xor
aas
hlt
sbb
and
pop
or
mov
icebp
jnp
inc
pop
jae
mov
lcall
mov
pop
mov
fimuls
dec
sti
aam
sub
push
push
pop
xchg
dec
das
fadds
pop
fwait
cwtl
xchg
adc
lcall
arpl
rcll
fistpl
jb
jl,pt
ret
xchg
xchg
enter
insl
icebp
std
mov
fs
xchg
or
insl
adc
mov
dec
lds
xchg
outsb
into
mov
jb
or
mov
cmp
scas
loop
sub
sub
pop
out
push
out
mov
cmc
lahf
xor
push
xor
push
js
xor
daa
pop
cwtl
mov
les
adc
outsl
shll
ja
push
push
dec
sbb
je
in
adc
out
loop
push
fwait
das
out
int3
std
dec
test
mov
sarl
dec
es
idivb
out
fnsave
in
stc
cmp
mov
mov
out
adc
cmp
jno
adc
dec
jns
and
mov
mov
in
ljmp
xchg
add
mov
push
sbb
test
mov
xchg
mov
or
fbld
cld
fsubr
std
or
stc
inc
pop
push
push
dec
mov
mov
xor
xchg
imul
das
push
cwtl
fisttpll
mov
lret
adc
insl
push
or
mov
jbe
jle
mov
lahf
and
xchg
arpl
mov
pop
push
lods
fbstp
cmp
adc
fstpt
jnp
sub
lret
adc
imul
movsb
test
sbb
xchg
sahf
in
dec
fldl
in
fs
gs
fimuls
cs
cwtl
int3
test
ret
bound
scas
inc
loopne
jg
pusha
xor
lea
xor
fstl
stos
push
mov
pop
enter
mov
fidivrl
test
ret
insl
call
testb
insl
movsl
outsl
pop
mov
ret
lea
jno
mov
icebp
je
cli
insb
sbb
sbb
add
out
jae
jge
loop
jns
inc
ss
sbb
pushf
dec
repz
adc
jb
fists
push
inc
pop
jmp
sub
es
fcmovbe
push
gs
rcrb
in
scas
lret
data16
jb
mov
sarb
aaa
cmp
shrl
jno
adc
push
fcomps
inc
nop
enter
jecxz
cli
cmp
and
loope
aaa
jbe
pop
lcall
and
pop
jg
jecxz
repnz
outsb
out
adc
and
jmp
dec
stos
test
jge
insl
mov
fsts
cmp
xor
inc
sti
hlt
mov
push
imul
mov
jmp
fidivrl
stos
aas
and
std
mov
jecxz
and
adc
inc
adc
mov
cmp
pop
fs
inc
mov
test
pop
jne
mov
fucom
mov
cmpsb
lret
int3
mov
or
out
sub
jge
test
pop
and
cmp
or
xchg
xchg
lea
popf
fwait
push
das
cmp
int3
or
hlt
lret
pop
cltd
in
or
lods
and
idivl
cmp
dec
out
cwtl
jecxz
icebp
xchg
add
xlat
mov
push
sbbl
mov
xchg
inc
sbb
xor
xor
enter
mov
mov
push
adc
cld
jne
add
lods
xchg
or
test
stos
fdivr
jmp
sbb
dec
xchg
stos
mov
cmp
dec
cli
fadd
pop
xor
jae
inc
mov
loopne
fisttpll
jmp
out
mov
dec
clc
leave
mov
repz
mov
cld
repz
aad
adc
push
imul
dec
sub
imul
and
bound
enter
fsts
mov
xchg
aaa
mov
in
push
loop
xchg
cs
stc
xchg
mov
rcrl
add
jmp
mov
xchg
ret
and
push
aaa
mov
dec
scas
jo
enter
rcrb
cmp
out
pop
insl
ds
sub
sub
cwtl
inc
inc
add
and
in
sub
mov
mov
nop
insb
fsubrs
add
add
xchg
stos
pop
push
pop
and
xchg
cmp
cmp
mov
in
xchg
sub
clc
cmp
iret
out
cmp
xchg
iret
movb
sub
push
nop
cmp
in
xchg
pushf
inc
fwait
popf
pop
mov
cmpsl
repnz
in
and
pusha
lahf
lods
out
dec
ret
cmc
xchg
std
xchg
lret
cmp
or
test
adc
sub
or
cmpsb
ret
add
pop
out
mov
bound
pop
jne
jl
sbb
fimuls
imul
mov
aaa
cmc
sbb
add
pop
jno
mov
mov
add
mov
inc
lock
dec
dec
nop
lret
jno
rcrb
jne
and
xor
adc
testl
jbe
inc
lcall
xchg
imul
adc
cs
lret
ss
adc
out
je
xchg
xlat
adc
jp
jmp
cmp
aas
cmpsl
mov
fwait
pushw
sbb
sti
scas
mov
lcall
sbb
xchg
imul
cmpsb
dec
pusha
mov
add
or
icebp
jnp
pop
nop
mov
or
xor
adc
add
and
mov
mov
mov
or
push
int3
xchg
or
push
mov
imul
fnstsw
cmc
push
mov
je
ja
fidivl
jo
cmp
cmp
addr16
xor
cmp
or
xchg
mov
cmpsb
fs
inc
and
sub
inc
daa
por
test
mov
or
xchg
ss
and
jmp
xor
sahf
repz
pop
or
cmp
jge
imul
in
stos
jp
dec
ret
ret
inc
push
push
ljmp
xchg
or
or
rclb
mov
aaa
mov
push
stos
enter
sub
pop
push
lods
or
push
adc
out
mov
mov
sub
jbe
mov
cmp
ja
lahf
pop
ljmp
push
jg
insb
popa
rcrl
jb
test
loope
push
and
xchg
hlt
arpl
jae
aad
je
push
lock
mov
jnp
push
movsb
xor
test
mov
mov
jmp
es
inc
clc
jmp
and
fdivs
int
mov
int3
mov
sbb
mov
test
test
cmp
sub
inc
addr16
mov
add
leave
sbb
xlat
sbb
jne
call
jl
push
js
pop
jnp
inc
pop
or
jmp
add
xchg
sub
inc
test
jl
pusha
xor
push
or
and
xor
lods
cs
gs
idivl
xchg
jl
mov
adc
adc
movsl
adc
pop
mov
mov
sbb
sahf
cmp
cltd
cltd
or
pop
mov
cmp
or
loop
stc
adc
stos
mov
dec
dec
repnz
filds
je
repnz
daa
adc
int
std
insl
cmpsl
sbb
pop
fwait
in
add
lods
ficoml
mov
push
dec
stos
enter
jge
bound
outsl
and
adc
mov
jle
xchg
pop
jle
out
out
mov
fildll
jge
xlat
iret
out
ss
fs
stos
adc
pop
jl
ss
sbb
dec
cmpsl
aam
xchg
mov
js
roll
hlt
push
setnp
mov
push
push
jecxz
sbb
dec
jb
and
xchg
mov
mov
mov
sti
sub
jmp
jne
fdivrl
inc
inc
fstpt
pop
imul
mov
lret
pop
stos
lods
pushf
aaa
in
or
leave
mov
add
lcall
sub
add
cmp
cmp
pop
jno
inc
movsl
gs
cltd
pop
pop
inc
cmp
fdivl
fdivs
aam
push
in
orl
push
fildl
or
popa
jl
lret
dec
outsb
and
mov
push
sub
in
lods
shlb
push
pop
aam
fwait
scas
nop
xor
push
push
mov
cmp
int3
and
add
cmc
xor
cmpsb
inc
cmp
push
inc
sarl
imul
xchg
mov
pushf
dec
in
fstl
sbb
das
xchg
insl
xor
add
rorb
push
and
jl
sub
aas
mov
imul
test
sbb
dec
sbb
lock
out
or
pop
arpl
xor
hlt
rcll
movsl
rorb
sub
test
cmpsb
sbb
push
cmp
mov
dec
fdivs
xchg
adc
mov
addr16
daa
jo
sub
mov
pop
sbb
ret
mov
in
divb
sub
push
push
shlb
jae
or
popa
clc
pop
sub
rorb
add
and
sub
sbb
stos
loope
lcall
mov
ja
out
cmpsb
rolb
pop
push
jp
lret
xor
pop
or
xchg
cmp
aas
or
lods
adc
pop
sub
sub
aad
xchg
mov
and
dec
incb
and
out
imul
imul
mov
mov
mov
aad
aam
add
shlb
sbb
mov
addr16
mov
test
jmp
jl
ljmp
out
inc
cwtl
inc
push
pop
pusha
xchg
jle
das
sbbl
pop
cmp
popf
cmp
enter
ds
in
mov
pushf
lock
mov
and
popf
xor
push
jno
push
or
mov
adc
neg
mov
cld
or
pop
pop
inc
jl
mov
add
stos
popa
es
insb
jp
imul
addb
int3
dec
add
pop
add
jg
into
pop
mov
xchg
xchg
inc
testl
push
or
push
lock
clc
pushf
inc
mov
cmp
ret
stos
pusha
jle
mov
insb
jle
mov
mov
jg
in
pop
xchg
loopne
imul
add
mov
mov
stos
xchg
icebp
mov
idivl
popf
fucomi
nop
jo
cmp
jo
imul
in
lods
movsl
stc
out
xchg
xlat
lahf
and
outsl
stc
cltd
pop
pop
jb
stos
fwait
sub
xor
dec
mov
pusha
mov
lock
mov
xchg
sub
and
jmp
mov
adc
jg
mov
je
fs
or
and
xor
filds
adc
fisubrs
xchg
insb
xor
out
xlat
jg
es
mov
push
mov
or
xor
dec
inc
mov
pushf
loopne
or
movsl
xor
aad
xlat
pop
scas
in
movsb
lods
lods
inc
gs
lds
mov
sub
push
xchg
stos
aad
xchg
and
dec
add
xchg
xor
push
int3
hlt
dec
arpl
repnz
popa
test
into
into
popa
push
and
cmp
inc
icebp
inc
shl
subb
fidivl
fs
sbb
nop
xor
dec
movsl
push
mov
fcmovnu
fbld
sbb
cli
sbb
lcall
stos
inc
inc
ds
push
add
sbb
xor
sbb
popa
mov
loope
pop
dec
adcl
lea
mov
xchg
leave
inc
dec
sub
dec
int
jge
aad
and
and
xchg
add
push
std
pop
lahf
mov
dec
sbb
in
cmp
mov
xlat
loopne
push
cmp
addr16
and
jne
xor
rcrl
cmp
cmp
mov
xor
mov
jmp
mov
mov
sbb
js
mov
mov
or
mull
sti
sbb
mov
das
dec
or
pop
mov
inc
stos
roll
out
out
dec
repz
dec
ljmp
push
push
push
daa
mov
cmpsl
inc
fwait
lret
lods
rcl
cmp
push
xchg
cmp
pop
sbb
fmuls
push
dec
cmp
popf
dec
jne
loop
jae
outsl
stos
inc
xchg
jmp
push
inc
loopne
dec
add
add
push
inc
test
and
jo
or
hlt
xor
jbe
loope
stos
pop
cvtdq2ps
testl
iret
ljmp
iret
mov
pop
inc
pop
pop
or
insb
bound
xchg
test
mov
mov
cltd
push
xchg
je
shrb
mov
cs
jbe
out
inc
sbb
mov
pop
scas
inc
stc
mov
xchg
xchg
ja
xchg
or
fmuls
je
xchg
lahf
push
addr16
mov
jb
or
or
stos
mov
fiadds
adc
fidivrs
outsl
mov
popf
pop
fldln2
mov
ljmp
dec
rclb
adc
scas
popf
addr16
sti
pop
ja
cmp
mov
mov
repnz
pop
mov
adc
icebp
in
fsubs
mov
insl
ljmp
mov
xchg
ja
mov
xchg
pop
lds
xor
cmc
xor
adc
pop
mov
push
icebp
adc
mov
jg
mov
pop
fdivrl
ficomps
js
bound
shll
add
mov
push
dec
sub
rolb
adcl
fsub
cmp
xchg
sti
dec
nop
test
clc
lret
pop
and
sbb
xor
push
mov
inc
fdivrs
adc
dec
jne
mov
push
js
mov
mov
sub
sbb
jmp
mov
cmpsb
sub
pop
std
xchg
xchg
test
les
push
cmpsl
aaa
adc
dec
mov
pusha
stos
mov
ss
and
pop
mov
jbe
cltd
addl
lock
je
call
std
mov
cmp
mov
test
cmpsb
fdivrp
nop
fidivs
pop
fldenv
push
mov
jecxz,pn
in
sbb
dec
pop
adc
enter
pop
movsl
push
pop
fisttps
jne
loop
dec
in
repz
test
jns
push
mov
subb
out
shrb
sub
je
outsb
pop
int
out
sub
or
out
pop
pop
aas
cmp
cld
loope
sbbb
cmpsl
jae
cmp
pop
xchg
cwtl
sbb
dec
addb
into
pop
cmc
xchg
mov
and
pop
sbb
rclb
outsb
push
and
adc
jno
sub
push
iret
mov
push
mov
sbb
movsb
sarl
pop
add
outsl
subl
sbbl
mov
xchg
lret
mov
pop
out
or
jbe
les
and
push
xchg
aas
jecxz
jle
inc
pop
sbb
pop
mov
packsswb
js
pop
mull
out
push
mov
mov
orl
push
push
sbb
xor
shrl
sbb
adc
dec
push
push
cs
clc
adc
lcall
fiadds
pushf
in
repnz
pusha
push
aad
in
sti
cwtl
add
roll
inc
cmp
sbb
mov
pop
inc
sbb
pop
cmpsl
mov
inc
icebp
pop
mov
repnz
hlt
icebp
push
pop
fs
insl
arpl
xchg
inc
inc
cmp
cmc
jecxz
and
js
cs
inc
leave
or
push
mov
inc
sbb
int
out
les
test
aad
pop
xor
nop
jne
adc
mov
xchg
cmpsl
xor
push
fldln2
bound
cmp
push
pusha
cbtw
xor
xchg
push
arpl
add
int3
cmp
loop
adc
ljmp
frstor
pop
das
int3
movsb
ret
roll
or
push
std
mov
inc
into
lret
clc
push
fs
mov
jne
adc
and
stc
add
push
mov
aas
xor
push
aad
sub
mov
imul
mov
jmp
mov
mov
cli
movsl
cmpsb
gs
or
sub
xor
cmpsl
das
push
sbb
adc
adc
int
mov
lret
pop
xchg
or
js
das
imul
out
cli
scas
in
pushf
ja
movsb
int
loope
sti
jno
negb
pusha
lahf
aas
mov
xlat
cld
add
adc
mov
mov
pusha
sbb
sbb
cmc
scas
mov
aad
add
bnd
and
mov
ds
sub
jno
and
pop
xchg
push
dec
mov
jnp
insl
int
add
xchg
pop
inc
inc
test
lret
out
push
pop
int
out
jmp
out
cmpb
inc
js
ljmp
inc
jl
loopne
jne
sarl
push
jne
dec
inc
cmp
in
fstps
insb
arpl
testb
sti
clc
jb
pop
fcoml
cmpsl
frstor
pushf
scas
stos
addr16
jne
cmc
mov
xchg
nop
sbb
lahf
cli
cwtl
pop
fidivs
jle
insb
pusha
xor
repz
xlat
xor
stc
sbb
xchg
fs
mov
ret
pusha
mov
mov
jmp
pop
push
push
cmpl
aas
xor
push
lds
mov
jb
jmp
and
imul
lds
sbb
into
insl
cmp
out
pop
push
ljmp
cltd
jp
ljmp
jmp
mov
inc
pop
dec
sub
inc
ds
xchg
ja
mov
mov
jge
insl
je
sti
mov
test
mov
imul
and
jb
jl
sti
pop
mov
pop
add
adc
inc
mov
subb
adc
das
cmpb
sbbb
cmc
lods
loope
mov
sub
stos
int
and
cmp
not
lods
sti
loope
dec
mov
les
push
fisubrs
dec
sbb
sbb
sbb
rclb
fnstsw
add
test
pusha
shrl
jo
shl
push
ja
es
mov
or
cmp
pop
gs
bound
mov
mov
xlat
ret
pop
mov
mov
punpcklbw
lahf
xchg
test
cs
fistl
loopne
xchg
dec
mov
or
lret
mov
push
cmpb
mov
mov
stos
sbb
mov
push
or
xor
lds
stc
popa
dec
inc
notl
js
adcl
and
push
sbb
cs
push
mov
lret
sbb
mov
or
faddl
jb
cli
das
sbb
cli
into
add
mov
fcoms
pop
add
add
push
stos
xchg
pusha
movsl
xchg
sbb
jae
pop
ljmp
push
cmpsl
fdivr
jo
fsts
pushf
scas
int
orl
sbb
flds
jns
test
mov
jge
pop
je
jp,pt
cmp
push
push
leave
les
stos
je
into
sbb
xchg
cli
jg
clc
cmpsl
ljmp
push
rcll
xor
push
loop
jg
sbb
iret
popf
ljmp
scas
xlat
sub
inc
pop
lds
cli
hlt
cmp
sahf
cld
roll
jno
xchg
shlb
fsubp
dec
dec
push
push
pushf
adc
inc
cmp
mov
cmp
cmp
ljmp
mov
push
push
in
nop
and
stos
mov
int
cmovl
inc
out
popa
xor
arpl
xchg
int
cmp
mov
inc
pop
mov
push
sub
les
jo
stc
enter
jno
shll
mov
xchg
sahf
push
mov
xchg
or
mov
push
sbb
ljmp
out
pop
xchg
mov
call
pusha
or
imul
pop
pop
xchg
xchg
fidivl
cmpsl
and
xor
and
xchg
fistl
imul
sar
pushf
xchg
or
aam
bound
outsl
xchg
inc
push
jl
pop
out
imul
jb
push
add
nop
outsb
cmp
cmp
adc
ret
jge
cmp
popa
add
sbb
jl
cmp
pop
cs
or
pop
pop
insb
or
add
xor
jmp
adc
movsl
inc
cmp
flds
fmul
mov
pop
xchg
add
push
jno
fs
aaa
gs
cmpsb
jmp
jp
jge
cmc
ret
jmp
sub
pop
insb
pop
mov
rcr
call
insl
dec
icebp
std
stc
push
fdivrl
repnz
xchg
inc
sbb
popf
mov
dec
mov
dec
rcrb
push
fcmovnb
inc
hlt
or
scas
mov
ja
std
mov
std
cmp
into
or
sbb
mov
jnp
loope
outsl
inc
add
pop
cmpsl
out
jg
add
insl
das
fs
fisubrl
mov
add
cs
xor
adc
adc
push
adc
daa
je
sahf
xor
mov
mov
hlt
add
jb
out
xchg
std
mov
outsl
mov
lret
mov
scas
xchg
lods
sbb
or
sbb
adc
cs
repnz
and
sub
or
rdmsr
push
xchg
shll
repz
loopne
jb
lea
in
jns
push
outsl
addl
sub
subl
cmp
xchg
call
jnp
lods
adc
push
lcall
subl
sbb
insb
enter
mov
sbb
jb
mov
mov
sbb
ret
cs
add
xchg
jg
sbb
sbb
dec
fistps
or
mov
ss
shrb
add
repz
in
jbe
jnp
into
adc
std
ljmp
sbb
jg
inc
jge
out
cmp
push
dec
adc
push
addr16
xlat
sub
push
jge
cmp
mov
jae
or
inc
xor
in
pop
fsubp
mov
jno
adc
cmp
aas
mov
adc
stc
push
jl
mov
mov
jg
les
lret
sub
push
aaa
sbb
es
sbb
roll
insl
cs
mov
add
lods
fiaddl
pop
push
add
xchg
aad
pop
dec
xchg
in
add
fstpt
xlat
out
sti
sub
sub
sbb
pop
jno
andl
or
gs
insl
xchg
push
or
addr16
es
pop
ja
add
sub
bound
push
push
xchg
cmpsl
cmc
mov
aaa
xchg
jle
xlat
std
jae
shl
outsl
sub
mov
cmp
sub
outsb
arpl
jne
cli
push
decl
or
xchg
addb
sub
pop
jae
sub
mov
xor
inc
lock
pop
cmp
sbb
add
addb
sbb
insb
cmp
movsl
popa
bound
ret
outsb
insb
push
cmp
out
pop
aaa
ja
mov
scas
incb
mov
negl
push
cmp
insl
repnz
cmc
filds
dec
inc
adc
push
sarb
clc
aam
inc
outsl
jg
stos
in
push
mov
inc
jecxz
pop
sbb
sub
jl
push
xor
sbb
fdivp
je
rolb
xchg
jbe
fwait
js
cmc
out
jne
mov
add
std
orl
gs
xor
outsl
cld
and
decl
iret
frstor
mov
sub
rclb
xchg
imul
pop
dec
add
adc
jg
mov
sub
mov
out
add
mov
dec
and
push
xchg
or
jl
xchg
test
dec
insl
adc
sub
push
push
loope
sub
mov
repz
movsb
push
pop
mov
popf
lcall
scas
subb
sti
repnz
test
sbb
inc
mov
jmp
sahf
cli
orb
xor
sub
fmul
int3
or
cmp
lock
push
or
adc
insb
cmc
mov
mov
stc
mov
mov
xchg
and
rorb
dec
pop
adc
jns
lret
mov
cmpsl
mov
dec
xchg
pop
add
lods
test
in
stos
movsl
enter
sbbl
mov
loop
enter
scas
mov
pop
push
mov
xor
sub
cld
clc
mov
ds
cmp
mov
dec
popf
aaa
jbe
mov
loop
adc
shrb
fsubl
rcrl
dec
test
imul
pop
stos
or
repz
push
add
xor
cmc
into
pop
imulb
scas
mov
popa
pop
filds
push
aas
ds
outsb
cmp
js
add
popa
adc
jp
mov
mov
fs
or
call
sbb
sbb
mov
arpl
mov
loop
jge
add
inc
mov
jns
loopne
imul
nop
mov
adc
jp
xor
mov
loop
ja
or
or
xor
mov
adc
dec
jecxz
sub
and
out
jns
ss
mov
mov
out
rclb
sbb
and
pusha
mov
mov
lods
fcompl
movsb
mov
loopne
mov
cmp
mov
mov
out
jbe
negb
or
xchg
xchg
or
or
jbe
imul
in
fsubrl
daa
shll
mov
add
stos
scas
fcoms
mov
add
fistpl
test
inc
stc
mov
in
sub
idivl
call
mov
push
sti
iret
xchg
add
sbb
nop
movsb
sbb
outsb
ror
cltd
xchg
or
add
mov
xor
ljmp
les
add
pop
loop
call
xor
dec
frstpm(287
lods
out
xor
dec
dec
lds
jns
mov
out
inc
xor
sub
dec
or
xchg
shl
out
rol
xorl
call
test
ja
push
mov
cwtl
lret
jecxz
nop
sbb
push
mov
jle
xor
fisttps
push
arpl
sub
fisubrl
or
xchg
mov
jnp
inc
mov
sbb
les
fstpt
inc
cwtl
push
mov
jne
sub
dec
cld
sbb
ficoms
adc
inc
mov
sbb
aad
push
insl
mov
filds
imul
data16
or
fstpl
cmp
jb
push
mov
mov
and
and
cwtl
jnp
idivl
inc
mov
mov
or
xor
movsb
cwtl
fs
push
add
push
repnz
cmp
cli
int3
out
bound
pop
xor
pop
bound
rcrl
lods
push
aad
pop
or
out
or
jge
mov
popa
fwait
mov
and
cld
jle
push
jp
dec
push
psubw
enter
fnstsw
out
aad
jge
adc
loopne
inc
and
fdiv
ljmp
lret
test
lods
sub
cltd
dec
pop
shr
push
test
mov
fsts
sub
lret
imul
std
mov
loope
mov
mov
mov
sub
in
xchg
and
xchg
sub
pop
push
and
pop
sbb
inc
cmp
inc
or
sub
add
fucomp
or
je
call
out
dec
push
sahf
jbe
shl
stos
and
arpl
lahf
movsb
or
fidivl
sub
call
adc
push
lods
inc
or
out
cmc
sub
dec
fisubrs
cli
mov
flds
pop
test
xor
dec
or
sub
jns
cmp
mov
loopne
aaa
adcl
push
in
test
enter
into
xor
inc
sti
ret
pop
push
lds
fldenv
fdiv
sti
inc
cmpsl
into
xlat
adc
icebp
daa
aas
mov
mov
ficoml
imul
test
mov
addr16
dec
and
dec
mov
and
mov
xor
fstps
sub
jne
test
sahf
movsb
shlb
cmp
popf
sub
fs
jecxz
inc
adc
or
shr
mov
loope
sbb
add
fs
jne
push
mov
cli
adc
adc
das
sahf
xchg
mov
loop
xchg
loopne
imul
jp
frstor
inc
pop
jle
lods
std
ss
and
dec
cmpb
leave
pop
jl
aam
hlt
or
dec
out
popf
pop
sbb
test
std
inc
jae
push
inc
jp
fs
stos
and
push
and
or
addr16
cmpsl
xor
jns
xchg
pop
outsl
adc
int
inc
jae
pop
ret
lds
pop
ficoml
sbb
js
out
test
lret
inc
scas
mov
pop
lds
inc
mov
imul
or
xchg
xchg
faddl
inc
repnz
inc
fs
add
pop
decl
fmuls
jae
mov
xor
jne
pop
sbb
stc
mov
test
sbb
popf
mov
cmp
mov
in
add
mov
aad
imul
scas
add
pop
mov
mov
outsl
movsl
jae
rcrb
inc
dec
xchg
ss
xor
ficoms
cmp
in
mov
xchg
mov
or
sub
es
or
adc
sub
call
aaa
xor
or
pop
ljmp
fsubrp
lahf
pop
popa
inc
test
in
add
xchg
xchg
inc
xchg
mov
fldcw
mov
jle
pop
and
dec
hlt
push
mov
pop
cmp
pop
cmp
cmpsb
les
push
cli
loop
push
notl
inc
dec
inc
pop
cwtl
xchg
and
iret
scas
loop
xchg
stos
xchg
cwtl
shlb
in
ja
inc
push
push
pop
sbb
imul
push
mov
je
shlb
and
scas
sub
add
jmp
xchg
rcll
pop
jl
icebp
shrl
aaa
nop
inc
push
in
add
js
sub
inc
mov
mov
sub
xchg
neg
or
sti
pop
xchg
imul
inc
jae
fldenv
mov
test
pop
lea
sbb
jo
xchg
add
adcb
sarb
jp
fadds
out
loop,pn
repz
or
dec
xlat
mov
mov
insl
dec
inc
sub
and
rcrb
xor
out
mov
pop
add
fcomps
xlat
push
cmpsb
mov
pop
cmpsl
xchg
pop
enter
popa
ja
lea
dec
mov
push
xchg
push
add
ljmp
lahf
ret
mov
jno,pt
mov
cld
mov
loop
fldenv
inc
jmp
sbb
pushf
push
sbbb
cmp
inc
xchg
sbb
test
adc
jae
clc
cli
fdivl
inc
mov
aam
sub
test
loop
shlb
enter
xor
xor
dec
roll
outsb
sub
jns
sbbb
add
adc
movsb
ret
aas
sbb
inc
enter
in
dec
andb
in
mov
int
cld
adc
shrb
mov
out
lahf
pop
fiadds
inc
inc
out
test
xor
leave
xchg
pop
dec
es
inc
pop
mov
jns
shll
aad
arpl
sbb
std
mov
out
std
sahf
out
pop
cmpsl
sbb
bound
or
push
mov
aam
push
push
call
icebp
inc
dec
shlb
clc
cmpsl
jne
xchg
jns
sbb
adc
cmp
popa
mov
aaa
cmp
add
int
lds
jecxz
cmp
lock
daa
adc
fdivl
push
push
loope
xchg
ss
cmpsl
sbb
ss
data16
dec
inc
jo
inc
out
mov
xor
hlt
mov
push
jg
cmp
mov
cld
inc
xchg
sub
int
push
lods
rcrb
ds
sbb
or
imul
fmull
ja
into
dec
add
rorl
mov
xor
inc
aaa
pop
inc
je
jle
jmp
cld
cmp
xor
out
ficomps
iret
cld
pop
xlat
into
push
jge
cmc
or
iret
dec
push
cmc
add
aas
dec
xlat
adc
pop
cmpsw
sub
leave
sahf
mov
jecxz
les
into
jecxz
dec
outsb
sahf
mov
dec
lods
inc
test
or
in
pop
pop
pusha
sub
jmp
jne
test
stos
mov
or
mov
push
and
xlat
mov
pop
cmp
sub
shrb
inc
shrb
sbb
sbb
jge
pushf
out
out
ljmp
push
sbb
add
out
shrb
xor
cmp
pop
insl
gs
push
xor
fs
and
and
fdivp
mov
into
repz
sub
mov
ss
cmp
imul
cld
dec
mov
pop
outsb
cmc
or
mov
jge
xchg
js
or
movsb
cli
pop
mov
aam
jns
and
lods
pop
jns
and
lcall
push
insb
scas
ds
push
sbb
int
adc
xor
xchg
lods
add
daa
movsl
xchg
cmpsl
adc
and
jo
push
arpl
arpl
rclb
lret
push
test
clc
or
sbb
lds
cld
enter
lea
mov
pop
aam
fadds
mov
rorl
inc
arpl
insl
xor
fimull
loope
adc
dec
clc
cmp
adc
out
and
daa
out
dec
adc
sti
rorl
cmp
or
test
add
pop
out
cmpsl
mov
mov
push
inc
lahf
lahf
or
jb
out
add
sub
mov
in
sub
test
pop
into
les
xchg
mov
cmp
lret
push
mov
mov
mov
cltd
cwtl
add
push
push
sub
mov
jbe
scas
shll
jge
inc
xchg
aad
out
test
mov
and
cmp
fcoml
lock
arpl
loopne
add
or
inc
hlt
loop
rorl
test
repz
dec
aad
sarl
stos
xor
jmp
jg
fstpl
mov
pop
add
and
repz
dec
sub
dec
cmpsb
fildll
sarl
pop
negb
call
jg
fnsave
mov
sub
andl
xchg
mov
mov
enter
sbb
arpl
push
fcmovnu
fldt
mul
pop
mov
addr16
outsb
aam
xchg
call
mov
in
inc
cmpb
xchg
push
or
jns
inc
sbb
pop
je
lea
sub
fldenv
pop
or
roll
pop
push
notb
movb
cmp
sti
cmc
push
loop
jae
rolb
in
fs
pop
xchg
out
inc
or
data16
rolb
jb
cmpsb
sub
push
pop
nop
scas
ficomps
mov
clc
cs
nop
pop
adc
fistps
xchg
xchg
test
nop
and
rclb
mov
or
fistpl
cwtl
jmp
lret
out
sbb
mov
xchg
push
dec
imul
lret
jge
lock
divb
lds
pusha
js
add
mov
or
insl
mov
adc
mov
cmpsb
in
sub
ds
les
cmp
insl
sbb
or
es
push
cltd
cmpsb
hlt
fbld
sbb
fistpl
pusha
cmpsl
and
and
loope
stos
std
out
int3
repz
xchg
cwtl
notl
int3
lds
jmp
stos
xor
jg
data16
or
mov
mov
jbe
arpl
sbb
cmp
test
rorb
xor
adc
popa
cmp
inc
rclb
mov
lret
loope
testb
fistl
push
inc
mov
mov
popa
xor
push
inc
ja
shrl
cwtl
stc
icebp
jp
or
xor
lahf
mov
jle
es
test
xor
popf
fs
add
or
add
and
cmp
lods
push
movsb
ljmp
pop
cmp
inc
xor
je
adc
cmp
mov
mov
dec
popa
xchg
mov
mov
out
shll
mov
movsb
and
fs
sbb
notl
lock
je
cmp
cmp
adc
inc
shll
test
es
or
cli
mov
jns
mov
int3
arpl
sub
add
sbb
out
icebp
call
pop
adc
in
stos
mov
ds
pop
cmp
inc
jae
jne
cmp
mov
mov
push
inc
cmp
icebp
in
mov
dec
cmp
push
dec
and
and
ja
add
mov
and
mov
or
xchg
out
xchg
sub
pop
cmp
int
sub
out
andl
sbb
jle
and
insb
and
push
popa
xchg
ljmp
loopew
fnstenv
cltd
sub
sbb
enter
daa
jbe
popf
inc
mov
push
arpl
mov
pop
rcr
dec
pop
insl
fnstcw
pop
add
jbe
hlt
aas
adc
insb
mov
aam
icebp
sub
stos
loope
push
add
bound
popf
sub
iret
loope
test
lcall
shll
sbb
and
insl
jae
clc
out
daa
pop
loope
shr
pushf
push
jne,pn
inc
int3
inc
cmpsb
insb
jge
fcmovnb
clc
cmpsl
pop
adc
cmp
test
fisubrs
lret
xchg
mov
ljmp
shlb
fnstcw
cmc
mov
cmp
arpl
stos
fwait
xchg
cld
daa
dec
xchg
push
into
arpl
bound
pop
insl
cmp
or
cmp
movsl
cmp
stc
push
sbb
xor
mov
das
pop
dec
loopne
mov
mov
and
fildll
add
dec
add
cmp
es
cltd
push
or
dec
and
push
loop
mov
cld
rorb
push
mov
loope,pn
seta
sti
adc
ja
int3
mov
add
sbb
sbb
fsubs
mov
adc
das
jo
test
xorb
sahf
rorb
and
mov
pop
ljmp
push
cmp
je
mov
xor
arpl
inc
jmp
xor
cmpsb
scas
sti
je
icebp
lcall
repnz
or
insl
push
xor
mov
es
lret
xor
inc
dec
fsubrp
adc
bnd
jo
adc
nop
fsubr
call
xor
sete
rcrl
pop
in
mov
lahf
popa
loope
sbb
loop
scas
pop
pop
test
lea
mov
jbe
or
xchg
and
cmp
dec
nop
xor
pop
aam
aas
jp
inc
jl
or
sub
or
push
shll
push
push
inc
outsb
cwtl
nop
mov
ret
xor
dec
mov
lahf
cmp
inc
mov
lods
or
mov
jne
jno
call
xor
sbb
das
pop
loopne
push
sahf
add
pop
jnp
sarl
aaa
mov
push
mov
outsb
shrb
cmpsb
stc
jmp
push
shr
sbb
xor
or
test
cmp
rclb
push
movsb
test
cli
xchg
jbe
jecxz
xchg
xchg
pushf
dec
cmp
xlat
pop
hlt
and
scas
sub
out
pusha
scas
xlat
adc
insb
popf
scas
xor
cld
adc
jo
dec
sub
imul
dec
mov
cmp
and
dec
mov
ffree
inc
int
or
jne
add
adc
jne
sahf
mov
jnp
loop
or
push
outsb
and
andb
hlt
loop
jle
fcmovnb
push
lret
adc
filds
out
rorb
push
cmp
mov
mov
lods
bound
test
fisttpll
xorb
daa
lret
mov
ficoml
lods
je
cmpsl
icebp
scas
push
lahf
mov
jecxz
or
test
in
movsb
test
lods
adc
adc
pop
test
cmpsl
xchg
jmp
ret
aam
lods
mov
mov
jp
hlt
inc
lret
xchg
ret
icebp
sub
subl
sub
pop
shlb
ss
inc
sbb
movb
fwait
cmpl
sbb
ds
push
sti
and
push
test
stos
sub
fisubl
mov
sub
ljmp
dec
cmp
mov
nop
push
pop
fbld
xor
mov
add
sbbb
rclb
push
lods
dec
inc
cmp
faddl
jo
outsl
mov
fidivrl
or
or
pop
xlat
cmp
push
test
push
dec
push
cmp
push
jne
or
inc
mov
dec
lods
insb
mov
xchg
cmpsb
enter
stos
jae
daa
push
jp
xor
sbb
pop
pop
xchg
out
stos
or
push
dec
mov
push
hlt
mov
xchg
seto
add
mov
dec
movsb
sub
adc
sbb
daa
pusha
and
sarl
add
insb
test
dec
mov
push
in
jnp
stc
test
lock
icebp
jae
sub
fs
test
jecxz
cli
imul
mov
pop
cmp
into
out
lds
dec
sub
insl
insb
sti
les
cmp
mov
sbb
push
jp
lea
int3
xchg
xchg
dec
dec
insb
mov
repnz
mov
push
mov
stos
adcb
imul
imul
xchg
cld
in
or
movntps
int
sub
mov
add
push
imul
cmp
xor
push
iret
push
mov
fldenv
fwait
push
rcll
push
outsb
bound
clc
add
pop
loop
add
loope
mov
dec
popa
dec
aas
xchg
and
scas
std
daa
push
inc
pop
bound
push
lahf
inc
repnz
add
test
mov
repz
roll
out
aam
or
mov
sbb
cmp
cmp
sti
xor
jmp
xchg
sub
cmpsb
lea
and
jnp
lcall
leave
pop
mov
popa
sub
push
sahf
xor
rolb
iret
rcrl
lods
mov
test
pop
xchg
push
roll
rorl
adc
and
sub
nop
jg
pop
loopne
cmp
fidivl
rcr
test
xchg
cmc
sub
testl
aad
xchg
sub
pop
or
loop
mov
or
hlt
into
mov
inc
push
mov
jecxz
fs
pop
cltd
mov
inc
sub
or
gs
mov
daa
xchg
nop
cmp
and
or
arpl
add
mov
leave
xor
adc
pop
cmp
pop
sub
out
mov
scas
and
cli
push
pop
leave
fcmovbe
or
jmp
faddl
into
add
aad
mov
pop
cmp
subb
div
jge
mov
mov
sbb
sbb
testb
pop
bound
fidivs
pop
xchg
mov
flds
pop
sub
jge
pop
adc
pop
arpl
cmp
test
imul
and
jns
daa
pop
inc
or
jae
xchg
pop
inc
cmp
xor
lods
jne
push
jge
adc
xchg
cli
pop
ds
and
loop
sarl
push
sbbl
popf
inc
add
nop
lds
popl
xor
bextr
mov
pop
repz
mov
pop
or
adc
jno
lock
add
mov
jno
add
lcall
cs
cmp
int
fs
mov
mov
ret
ja
adc
testl
adc
xor
push
add
mov
dec
in
pop
pusha
sub
outsl
popa
mov
ret
xchg
add
idiv
xchg
lods
jbe
jle
mov
daa
sub
cmpsl
dec
add
jo
adc
das
in
dec
mov
cmp
mov
movsb
and
lods
mov
adc
shll
lods
lcall
addr16
popa
lea
dec
adc
cs
dec
aaa
lock
cmp
fistpl
sbb
jg
ds
push
in
and
xor
nop
push
xor
sti
or
scas
jmp
imul
dec
and
xlat
inc
inc
fs
shl
and
nop
xchg
xchg
push
push
ret
ss
inc
lcall
sub
dec
dec
test
incb
shll
daa
js
xor
push
imul
mov
pop
add
ljmp
fldl
add
adc
or
cmp
or
inc
icebp
imul
in
jmp
cmp
mov
iret
fstps
dec
mov
push
add
sub
ja
mov
ret
orl
mov
jecxz
test
cmp
xchg
pop
jno
les
ret
je
out
int3
and
lock
add
push
unpcklps
popa
imull
sub
packssdw
clc
or
cmpsb
push
or
testb
sub
push
and
loop
sbb
lret
mov
cld
mov
inc
pusha
and
leave
arpl
cmc
dec
cs
jbe
popa
cld
in
xchg
out
mov
jge
jl
jb
out
loope
xchg
repz
iret
push
and
rorl
movsb
dec
mov
rcrb
jmp
bndldx
sub
imul
jl
or
pop
test
sbb
inc
gs
cmpsl
mov
inc
not
fldl
add
int3
jg,pt
sub
ret
out
push
jae
outsb
mov
lcall
pop
divb
dec
daa
fstl
out
cld
xchg
pop
jle
push
loop
add
lea
fldl2t
mov
test
ds
out
mov
enter
out
push
push
lods
mov
ret
mov
xchg
cmp
add
xchg
movsl
xorb
in
vpshaq
testl
repnz
in
call
push
jmp
push
iret
dec
loop
aad
mov
push
cmp
jecxz
mov
fldl
into
xor
xor
pop
loop
pop
lcall
repz
fldt
pop
push
sbbb
adc
mov
adc
sti
in
and
loope
test
pop
mov
cmp
jb
add
jg,pt
scas
adc
mov
mov
cli
and
fisubrs
cmp
mov
mov
push
incl
negl
test
sub
nop
inc
mov
jp
pusha
leave
xchg
sbb
jnp
push
adc
in
push
out
inc
jne
nop
nop
roll
je
adc
mov
push
adc
sbb
pop
xchg
addr16
and
nop
sub
push
add
xlat
insb
add
shll
xor
pushf
das
xorb
repz
mov
cmp
and
jo
mov
inc
pop
test
popf
dec
dec
lret
lods
jp
pop
push
mov
loop
mov
lret
push
push
rorl
jnp
popa
sub
sbb
pop
es
addb
lock
into
jg
pop
inc
mov
mov
iret
ret
out
iret
push
pop
rorl
mov
cmp
sub
mov
mov
dec
cmp
icebp
pop
xchg
sub
pop
add
jbe
mov
adc
pop
daa
jmp
jns
js
mov
das
stos
sub
sarl
cmp
cs
in
xor
xor
mul
xchg
out
push
loop
aam
aad
int
mov
mov
xor
or
mov
or
or
ss
mov
je
lea
jb
mov
push
fnstcw
daa
enter
mov
pop
js
les
outsl
movsb
dec
outsl
lds
notl
lds
cld
outsl
jae
mov
lret
jmp
sbb
push
sub
mov
je
insl
add
aas
pusha
cmpsl
adc
por
pusha
jl
xor
sbb
fbld
mov
lds
aaa
lds
adc
push
out
inc
cmp
lea
das
stos
cltd
neg
testl
lock
jne
push
lret
push
int3
add
mov
stos
ret
call
sub
xor
gs
decb
sbb
lea
dec
sbb
clc
jge
je
adc
in
and
dec
ffree
into
pop
mov
or
pop
add
xchg
sahf
fs
add
and
sbb
xor
aam
jno
adc
lods
mov
adc
cmp
add
and
dec
rolb
and
and
filds
mov
or
test
ljmp
cmp
sbb
dec
in
fldenv
outsb
xchg
pop
ljmp
adc
int3
jle
cmp
and
and
add
xchg
in
call
jb
lahf
into
aad
xlat
lock
incl
push
icebp
cld
ret
lds
sbb
xchg
push
push
es
push
pusha
popa
xlat
xchg
sub
xor
mov
call
xchg
sub
cltd
xlat
in
push
enter
sbb
lods
xor
or
icebp
loope
mulb
inc
js
xchg
shr
mov
or
pop
xor
andb
lret
jnp
dec
lods
addb
loop
dec
cld
mov
xchg
inc
mov
mov
jns
fs
sub
dec
pop
sti
sub
mov
mov
mov
jg
jno
clc
call
sbb
outsl
mov
cmp
sbb
pop
sub
pop
ss
sub
dec
xchg
shll
repnz
jo
dec
jl
add
in
mov
and
loope
mov
adc
test
adc
adc
sbb
pusha
pop
rol
lods
xor
nop
add
sbb
xor
mov
add
roll
cli
js
lahf
jle
shll
or
xchg
fwait
lcall
cli
or
repnz
gs
fnstcw
fnsave
adc
int
repnz
xor
add
jae
pop
scas
dec
inc
sbb
xchg
mov
nop
fists
cmp
push
mov
push
ficoms
ret
scas
sub
mov
fwait
dec
orl
scas
js
rolb
orl
add
push
add
mov
and
int
jge
lcall
or
je
push
xor
jecxz
mov
xchg
xchg
add
push
outsl
std
xchg
dec
movsb
mov
repnz
outsl
push
sub
jns
sbb
sbb
and
stos
xchg
dec
outsb
mov
out
mov
clc
sarl
jo
imul
jge
movsl
inc
xor
inc
push
xor
mov
jne
pop
ret
xor
pop
fidivs
imul
js
std
rclb
out
xor
or
jo
idiv
add
popf
or
bound
jns
pop
inc
xchg
mov
lret
sbb
punpckldq
scas
inc
cmp
test
mov
int3
int3
inc
in
data16
test
test
inc
subl
inc
aas
jge
dec
add
ljmp
cmp
xor
orl
fdiv
push
sbb
fs
push
and
fimull
sbb
bound
popa
adc
jmp
jg
jge
icebp
aaa
xor
push
and
dec
or
push
aam
cmp
test
iret
lods
jge
push
fidivs
sarl
jno
mov
xchg
stos
cmp
pop
cld
adc
pop
test
loopne
cmpsl
pop
fsts
out
sbb
mov
jno
adc
imul
cmpl
adcl
jp
shr
lods
mov
xchg
or
xor
adc
lds
pop
and
mov
xor
lret
mov
in
cltd
rcrb
jmp
jge
dec
mov
xchg
sub
sbb
popa
add
mov
inc
mov
xchg
sbb
xchg
test
stc
test
lds
subb
sub
pop
sub
push
cmpsl
cmp
pop
mov
mov
or
outsl
mov
add
cmp
fs
xchg
fst
xchg
mov
inc
fs
adc
and
jmp
mov
add
and
pop
push
push
test
scas
xor
sub
lahf
mov
in
lcall
cmp
mov
aam
out
inc
cmp
mov
adc
jno
sub
sahf
pop
or
dec
aad
sub
add
mov
aad
pop
fmul
out
fcoms
fs
dec
mov
adc
sub
movsl
inc
mov
les
xchg
scas
cmpsb
movsb
adc
adc
fsubrs
pop
push
and
lret
mov
enter
divl
dec
pop
out
pop
adcb
cmp
adc
scas
mov
mov
filds
daa
and
test
lock
push
lret
ja
sbb
movsb
ljmp
dec
sbb
ja
mov
inc
arpl
xchg
aas
fwait
negl
pop
mov
mov
dec
mov
add
xchg
js
sbb
std
push
push
sbb
or
add
bound
icebp
daa
sub
sub
cmp
adc
mov
insl
testl
push
lods
pop
pop
cltd
insl
push
add
arpl
cmpsl
add
je
addl
push
out
xchg
fstl
mov
cmp
movsb
xchg
aaa
push
or
adc
iret
aam
fsubrs
wbinvd
pop
addr16
xor
mov
insl
xchg
or
js
insl
dec
in
fidivs
push
ds
fildll
inc
push
loope
int3
clc
enter
rcrb
ret
push
call
jo
test
cmc
lods
xor
push
cli
mov
outsl
adc
ja
lds
popa
inc
xchg
scas
btc
sahf
mov
pop
es
test
jp
stos
mov
lcall
add
popa
subl
mov
aam
clc
lahf
repnz
or
lahf
pushf
ret
or
jp
add
jmp
jp
pop
mov
lock
fbstp
inc
cmc
test
xor
adc
sbb
cmp
lahf
dec
into
adc
ret
aam
mov
loop
and
xchg
push
push
bound
dec
test
dec
jno
dec
daa
pop
mov
adc
ljmp
adc
push
sub
inc
inc
jecxz
mov
test
sub
ljmp
push
push
bts
int
sub
xor
fwait
stos
lret
sarl
rcrb
pushf
or
out
lods
dec
lret
repnz
loope
adc
jmp
add
fwait
sub
daa
pop
add
lods
mov
cmp
and
pop
and
aad
inc
or
and
adc
mov
xlat
push
sbb
inc
mov
mov
loopne
loope
mov
and
in
sub
jecxz
repz
addr16
je
sbb
das
xchg
faddp
pushf
push
pusha
std
pop
jmp
inc
add
xor
mov
fistps
insb
adc
ret
dec
ljmp
inc
in
repz
les
or
aad
test
addb
cmp
push
cmp
std
test
sbb
loop
repz
sbb
dec
out
aad
shl
fisubs
imul
pop
in
push
nop
test
xchg
stc
cld
pop
push
cli
or
jne
or
stc
les
lret
movsb
int
add
mov
xchg
or
arpl
ds
movsl
mov
pop
adc
adc
popa
lods
dec
xchg
mov
sub
sub
fsubs
jl
test
fiaddl
js
lcall
and
outsl
test
push
insb
add
mov
mov
das
std
mov
test
mov
push
pushl
fbstp
push
in
push
inc
lods
xor
sahf
rolb
lods
push
imull
mov
scas
andps
fwait
arpl
dec
jmp
int
mov
xchg
xchg
mov
in
push
mov
fcompl
mov
aam
movsl
jae
mov
call
push
js
fmuls
out
dec
mov
xor
mov
int3
inc
das
jg
out
sti
mov
xor
subl
pop
repnz
movsb
or
imul
jno
sbb
sub
push
push
call
hlt
xor
call
xor
xor
or
scas
adc
daa
mov
in
ss
outsb
jle
ds
out
sub
jmp
mov
jge
dec
xor
pop
mov
fmuls
push
lret
add
ds
pop
cmc
dec
lret
jg
ja
hlt
mov
sti
jo
push
xor
sub
or
jnp
mov
cltd
inc
jno
inc
jnp
push
jnp
clc
xchg
test
xlat
loopne
aaa
jmp
jnp
aas
and
mov
sbb
or
add
sbb
add
push
lods
inc
lret
mov
popf
fisubs
jl
mov
aad
arpl
test
dec
push
cmp
and
das
sbb
inc
movsb
movb
sub
xor
jne
xchg
xchg
mov
enter
xchg
dec
xchg
repnz
or
jns
stos
dec
pop
js
and
pop
xor
push
xor
and
lds
into
add
in
subl
jb
dec
out
scas
cs
or
cmp
rcrl
inc
push
xchg
jmp
pushf
inc
jnp
xor
pushf
in
jns
mov
mov
aam
lret
fisubrl
adc
js
mov
ljmp
adc
pop
or
stos
mov
dec
out
test
ret
push
test
shr
push
cmp
add
subl
shl
push
lret
test
clc
sub
add
pop
mov
or
mov
shlb
inc
inc
adc
fcomi
mov
dec
inc
mov
xchg
testl
cmp
imul
push
sbb
addr16
bound
andb
add
mov
popf
dec
or
outsl
and
sub
int3
mov
test
mov
push
fs
shll
ret
data16
lea
rolb
ja
cmp
jge
mov
dec
push
mov
adc
iret
test
push
ret
jnp
jp
pop
mov
shll
aam
pop
in
cmp
mov
mov
cmc
mov
xor
outsl
pop
lods
cmp
mov
cmp
pop
sahf
mov
adc
sub
cmp
fnstcw
addr16
push
stc
xchg
dec
adc
mov
jmp
xchg
je
shlb
out
or
jp
in
fldt
pop
je
movsb
test
movsl
xor
mov
cmc
cmp
ds
shlb
nop
nop
lods
xor
cmp
js
mov
inc
into
imul
scas
dec
add
cmpsb
adcl
mov
cmp
testb
outsl
sar
fs
dec
mov
leave
sti
les
out
pop
lock
ret
aad
insb
fucomp
add
imul
or
fcoms
jo
aaa
out
imulb
ret
inc
inc
sub
dec
and
jg
enter
mov
jmp
add
in
mov
mov
push
adc
push
add
outsl
iret
cld
rorl
mov
into
mov
mov
push
jecxz
push
lcall
loop
aas
adc
add
fiadds
ror
les
add
pop
outsl
insb
addb
lds
mov
sti
inc
sbb
fldcw
mov
stos
lea
mov
fdivs
xchg
fisubrl
sub
cld
inc
push
sub
sbb
test
push
fisubrs
fistpll
movsb
xchg
mov
sbb
add
sub
out
or
push
push
into
insb
push
dec
lcall
inc
movsl
mov
push
inc
popa
xchg
inc
into
lcall
movsl
mov
jl
add
fcomps
scas
sarb
cld
xor
xor
jmp
lock
sub
jecxz
sti
xchg
add
mov
ror
nop
repz
mov
gs
pop
cmpsb
mov
inc
push
jo
jbe
leave
daa
mov
loope
testb
xchg
call
push
xlat
int3
in
iret
xlat
cmp
iret
mov
xor
pop
sub
jbe
add
adc
jae
push
int
pop
mov
mov
lahf
jae
xor
pusha
iret
pop
lds
scas
loope
mov
mov
fwait
cmp
je
and
shr
popa
cmp
push
cli
add
pop
xchg
scas
shlb
popa
dec
testb
jp
sbb
scas
rcll
lcall
fdivrs
stos
in
xchg
push
push
xor
xchg
adc
sbb
imul
dec
push
pop
or
jae
ret
cltd
fwait
arpl
push
jae
push
mov
mov
fstpt
in
add
jno
sbb
mov
dec
sbb
aaa
test
cwtl
cmp
mov
push
adc
push
pop
loopne
mov
jbe
mov
adc
pop
in
das
xchg
pop
cltd
inc
aam
ljmp
insl
pop
cmp
xchg
jl
nop
ds
notl
jl
addr16
cmp
incb
js
jns
cmpsl
or
repz
cld
xchg
out
outsb
cmp
into
cmp
add
push
out
or
mov
or
push
xchg
mov
pop
pop
js
jns
icebp
mov
loop
jg
xchg
xor
inc
insb
test
cltd
insl
fcoml
sti
mov
das
push
or
mov
nop
or
adc
iret
cltd
imul
mov
imul
aam
sahf
push
ret
adc
shr
fcomps
mov
or
iret
test
cmp
add
mov
testl
dec
adc
mov
lods
in
testl
sbb
dec
loopne
jbe
xor
push
cmc
je
inc
packssdw
loop
pop
sub
sbb
cmp
or
lcall
jge
push
push
test
pop
sbb
test
mov
and
xor
inc
cwtl
sbb
mov
or
gs
in
mov
push
addr16
cli
mov
ret
cmp
mov
in
mov
insl
jmp
xchg
aad
ret
mov
xchg
test
das
mov
pusha
movsb
xor
fxam
fisubl
fisttpll
dec
mov
out
das
insb
sti
dec
push
in
test
lahf
jmp
subb
sbb
sbb
cmp
call
rcr
or
fiadds
adc
add
sbb
pop
int
sarl
loopne
push
adc
cmp
fldenv
out
lods
cld
adc
bound
sbb
adc
aas
adc
sti
ss
clc
aad
andl
push
fdivrs
sub
int3
test
cmp
data16
jno
pop
sub
dec
add
js
sub
rcrb
fcoml
and
lret
jge
sbb
adc
mov
push
inc
insl
add
pusha
pop
inc
pop
and
cld
cmp
mov
in
pusha
pop
outsb
fdivs
imul
hlt
inc
popf
fbstp
sbb
outsl
loopne
jno
inc
adc
cmc
xor
mov
mov
cwtl
push
repz
jecxz
outsl
subb
sahf
loopne
movsl
xchg
enter
inc
and
ja
add
adc
cltd
mov
insb
cmp
pop
fsubrl
pop
fmul
push
push
pop
mov
mov
cmp
cmp
pop
cli
je
or
test
mov
jg
in
fxch
int
movsb
mov
mov
in
adc
rolb
mov
jb
rolb
inc
or
getsec
add
add
das
or
mov
mov
fisubl
push
adc
or
and
jmp
sbb
out
jo
push
jmp
dec
mov
fsts
int3
and
sysexit
das
and
in
int3
aam
lret
or
sbb
xchg
add
ret
jo
in
lods
ja
rolb
mov
sbb
jns
jnp
push
jl
sbb
mov
xchg
jo
or
mov
inc
mov
aam
outsb
mull
daa
outsl
cmpsl
push
sub
or
xchg
test
add
sub
enter
mov
pop
adc
outsl
sbbl
pop
adc
popa
cmc
cmp
adc
pop
sbb
pop
addr16
fildl
cmp
push
xor
in
test
jp
sbbb
mov
leave
mov
push
js
jne
or
ljmp
jle
clc
shll
call
aam
or
sbb
mov
dec
cwtl
dec
mov
rcl
repnz
mov
lods
fldl
add
adc
mov
xchg
ret
les
mov
jbe
rcll
pop
mov
mov
cs
cli
jle
inc
mov
mov
inc
push
dec
dec
sbb
jns
and
add
stos
mov
out
int3
movsl
xor
sbb
sub
push
mov
lret
cltd
pop
daa
popf
pusha
dec
xchg
jae
pop
fldcw
sub
dec
or
mov
push
jnp
addl
out
cltd
out
mov
and
push
mov
add
jp
sbb
or
cmc
movsb
adc
dec
mov
mov
pop
push
xor
mov
xchg
adcb
call
sub
fcoml
in
out
push
dec
sbb
cmp
cld
imul
push
mov
pop
dec
arpl
call
aaa
call
xor
inc
inc
jp
push
aaa
sbb
cmc
cmpsb
lods
mov
lods
sbb
enter
mov
pop
shll
cmpsb
shlb
clc
cmp
add
mov
mov
addr16
xchg
into
cmp
jno
subl
jge
shlb
decl
add
loope
les
mov
pop
xchg
daa
pop
out
sbb
lock
xchg
cwtl
and
bnd
push
dec
xor
push
inc
add
jbe
mov
fsubrp
add
cmpsl
sarl
flds
sub
xchg
std
dec
sub
into
aad
and
xor
mov
push
mov
leave
sub
mov
mov
lea
pop
mov
sbb
popf
and
sahf
dec
mov
pop
mov
pop
std
scas
lods
adc
pop
jl
ljmp
jmp
test
movsl
mov
and
xchg
dec
xor
mov
adc
hlt
test
sti
jmp
lahf
sbb
fiadds
lods
inc
lods
out
inc
bswap
or
int3
push
adc
sbb
insb
adc
push
add
enter
mov
inc
xor
iret
aam
and
popf
lds
icebp
sub
xchg
mov
nop
sbb
cmp
aam
cmp
mov
mov
subb
or
sbb
lahf
pop
jae
pusha
mov
push
mov
lods
imul
and
and
xacquire
push
lahf
xor
sarb
out
cmpsb
stc
push
mov
pushf
js
cmpsb
adc
fnsave
pop
das
push
pop
jne
fcmovne
les
lds
pop
mov
dec
es
les
std
xchg
shl
sbb
pop
shrl
push
add
mov
fistl
jnp
push
lss
jle
inc
inc
jae
mov
fucomi
jns
cmp
imul
insl
fidivl
jmp
xchg
daa
lcall
rclb
mov
cmp
add
cld
test
adc
lahf
xchg
popf
mov
nop
or
aaa
cld
mov
stos
xchg
cmp
inc
cmp
clc
inc
sti
clc
pop
addr16
repnz
ficompl
insb
sahf
cmpb
mov
inc
adc
int
adc
iret
or
mov
cmp
clc
mov
jbe
mov
negb
pop
mov
add
arpl
sub
lret
xor
faddl
push
fs
push
in
in
inc
jp
ficomps
fs
inc
ss
sahf
mov
in
sbb
xlat
mov
and
xchg
rorl
xchg
shl
pop
push
dec
xchg
subl
fcoml
sbb
inc
test
divb
push
mov
mov
push
xchg
lret
sbb
xor
aas
shrl
stc
adcb
ja
notl
xchg
sbb
fstpl
mov
fistl
aad
in
mov
mov
clc
push
mov
or
xchg
imul
sub
fnstcw
sub
adc
loope
out
iret
testl
and
dec
mov
test
fmul
lret
xor
loope
xor
xchg
xor
jp
ljmp
fimuls
inc
test
sbb
leave
fildl
dec
mov
sbb
ss
sub
je
cmpsl
jmp
pop
mov
xchg
mov
jecxz
xor
clc
cmpsb
push
cs
ljmp
sub
cmp
jge
mov
ljmp
or
adc
insl
push
mov
push
jp
call
sbb
sub
adc
in
lea
lods
add
sub
cli
inc
xor
adc
repnz
jecxz
addr16
subb
push
adc
pop
mov
hlt
mov
aam
sar
xchg
bound
mov
and
arpl
mov
mov
mov
std
add
add
adc
in
cmp
adc
xchg
mov
sarb
dec
out
imul
popf
dec
jmp
adc
cmp
je
lds
sbb
pop
mov
mov
int
in
xorb
enter
mov
orl
xor
sbb
push
jb
imul
push
sub
push
jl
fisttpll
pop
ja
repz
jecxz
jb
arpl
xchg
movb
mov
cmp
mov
jnp
xor
cs
sti
in
push
das
xchg
mov
aad
adc
pop
in
shll
stos
adc
bound
mov
jne
jbe
xlat
dec
mov
test
sub
fnstenv
sbb
leave
add
scas
ja
cmp
push
mov
movsl
scas
xor
sbb
in
mov
jle
jmp
jnp
inc
test
inc
mov
xlat
cmpsb
cmp
std
mov
imul
xor
mov
add
xlat
jae
mov
test
sub
je
out
sub
adc
push
xor
dec
sub
in
xlat
bound
fwait
adc
sbb
xchg
cmovns
fistpl
pop
mov
mov
xlat
call
add
inc
add
stos
xchg
dec
addr16
fwait
sub
call
jne
push
sahf
add
or
pop
and
cs
lret
inc
lds
sbb
repnz
xlat
inc
adc
jae
xchg
push
cs
sbb
xor
pop
cmpsb
ror
add
fbstp
or
outsb
call
adc
mov
add
inc
js
data16
mov
sbb
jge
lret
sub
and
into
push
lods
jle
les
pop
dec
xor
ljmp
cltd
movsl
dec
cmp
std
rcll
shrl
jmp
cmp
xchg
mov
cltd
and
mov
jecxz
outsl
xor
inc
sub
dec
mov
adc
inc
lret
inc
pop
loope
adc
into
loop
mov
push
in
xor
inc
xor
mov
loope
das
mov
fs
inc
sub
jg
sub
dec
jecxz
or
loop
shlb
dec
dec
mov
mov
movl
and
sub
cmp
cmpb
bound
stc
nop
aam
test
stos
arpl
popf
add
loopne
mov
out
lods
stc
jb
inc
adc
or
imull
out
and
pop
sub
push
mov
pop
rcll
mov
or
jp
add
pop
sub
push
pop
mov
cmpsl
and
jmp
mov
lds
and
pop
dec
test
push
stos
loopne
lods
add
jnp
or
std
int
cmp
inc
adc
xchg
sub
inc
xchg
push
insl
adc
test
jbe
insl
mov
imulb
jl
ss
cmp
or
xor
xor
sbb
lds
cmp
mov
mov
push
jnp
mov
popf
mov
or
loop
aam
mov
insb
jle
or
pop
push
ja
inc
mov
xorb
fidivl
sahf
jno
das
test
mov
scas
cmp
lret
sub
je
imul
dec
es
mov
push
mov
or
and
inc
ja
push
enter
jne
lcall
sbb
imul
mov
xor
test
push
mov
nop
cwtl
dec
pushf
inc
mov
pop
mov
mov
enter
add
call
inc
ds
xor
test
sub
cmp
cmc
inc
data16
sbb
arpl
and
lds
xor
sbbl
stos
mov
sti
loopne
fidivl
dec
sbb
mov
scas
push
std
xchg
inc
adc
aaa
stos
pop
into
xor
and
addl
stos
inc
mov
je
pop
jo
jne
in
ffreep
push
dec
xchg
and
or
leave
imul
mov
imull
out
ja
push
shll
sarl
jl
mov
inc
push
sub
jne
repnz
cltd
aam
jne
xchg
fs
test
std
mov
and
mov
adc
fisubs
sub
cmp
call
inc
lea
jo
push
lods
xor
add
int3
inc
mov
cmp
fldl
ret
imul
cmp
cmpsb
mov
mov
adc
xor
call
inc
xchg
mov
int3
push
sbb
push
fstl
or
mov
int3
push
adc
cmp
idivl
loopne
or
clc
xor
and
pop
mov
mov
mov
push
push
push
dec
mov
and
xorl
dec
negb
push
mov
or
and
cld
mov
lods
mov
int
icebp
mov
aaa
stos
out
std
mov
sti
cmp
sarb
pop
arpl
repnz
popa
mov
mov
xor
add
ficoml
mov
mov
lods
xchg
ljmp
fwait
movmskps
test
movsb
and
cli
call
setg
sti
sbbb
or
sub
fiaddl
fidivrs
xlat
enter
push
fcmovbe
test
aad
test
cmc
fdivrs
cmp
outsl
hlt
shl
mov
sti
rorl
pop
pop
mov
ret
fcompl
mov
cmp
mov
int
in
aas
cltd
adc
lahf
aas
int
jmp
test
mov
mov
pop
pop
lret
jno
lahf
hlt
or
inc
xchg
jmp
sbb
sti
and
rcll
jmp
cmp
cmp
add
add
cltd
imul
adc
mov
dec
or
mov
outsb
or
negb
int3
mov
or
jg
mov
stos
clc
call
fucomip
push
jne
jmp
xchg
cmp
mov
stc
or
out
pop
mov
lahf
cmp
aam
cltd
xor
sub
xchg
cmp
out
sbb
ret
jp
pusha
call
test
mov
add
ljmp
sub
mov
ljmp
cmpb
cmp
test
lods
inc
leave
mov
lcall
mulb
pop
out
aam
out
push
in
or
cmp
mov
sub
lods
shrb
outsb
fistpll
lods
popa
push
cmp
stos
jae
repz
lcall
out
dec
cli
aas
movb
rcrb
fstpt
mov
jle
fs
jg
mov
mov
outsb
push
xor
pusha
mov
mov
jno
push
push
in
mov
sub
inc
rclb
sub
cwtl
scas
and
pop
mov
sbb
insl
cmpsl
cmc
test
mov
add
push
sbb
movsl
mov
add
movsl
xchg
orl
sub
xor
mov
adc
or
xor
call
ficomps
insl
shrb
mov
andb
cmc
fists
icebp
cmpsl
aad
mov
jb
xor
pop
sub
test
mov
mov
lret
cmp
fildll
push
fidivs
push
sahf
mov
cs
pop
decb
adc
adc
dec
inc
push
aaa
iret
enter
jg
adc
in
add
xor
rcl
xchg
mov
xor
lcall
call
dec
bound
jo
mov
ljmp
pop
jp
idivl
in
loope
sub
lret
mov
movsb
inc
sub
sub
shlb
inc
ss
imul
xor
ljmp
in
inc
leave
cmp
clc
rcll
pushf
or
call
fisttps
lock
popa
hlt
mov
ds
mov
loopne
cmc
loope
je
mov
pop
aaa
fucomi
cmpsb
loopne
loope
add
bswap
movsb
fwait
lock
cmp
faddp
push
pop
mov
mov
mov
xchg
jb
nop
enter
out
negl
adc
xlat
loope
sar
mov
jno
and
or
mov
loop
shll
out
inc
stc
inc
jbe
testb
or
push
jp
mov
das
sarb
pop
jle
popf
pop
xor
je
imul
leave
jle
push
ljmp
mov
loope
add
and
inc
mov
pop
and
jns
mov
mov
pop
and
xorl
loopne
mov
imul
cltd
cmp
addb
cmpl
fchs
push
and
adc
dec
mov
mov
fmuls
mov
idivb
mov
jnp
dec
jp
mov
adc
sbb
inc
lahf
jb
xchg
jle
mov
enter
popa
daa
ljmp
push
xchg
jge
mov
arpl
insb
mov
inc
sti
pop
dec
inc
rcrb
nop
push
or
sub
inc
loope
push
arpl
sub
push
test
pop
sub
push
mov
popl
sbb
scas
sbb
fwait
sub
or
push
adcb
mov
mov
movsb
nop
data16
cmp
xchg
mov
mov
cld
jne
mov
or
and
clc
sbb
xchg
inc
xchg
lock
dec
add
addl
mov
add
in
flds
sub
jno
aam
lds
movl
mov
mov
or
and
sub
ja
and
inc
jecxz
mov
xchg
in
mov
mov
mov
insl
pop
test
dec
lahf
jno
push
fs
xchg
lret
xor
adc
xor
aad
cld
mov
nop
repz
sub
addr16
fs
test
outsl
sahf
xchg
cs
jno
std
xor
dec
pop
lret
push
or
repz
push
cmc
lret
cld
insb
ret
mov
out
push
xchg
test
dec
lahf
in
pop
jg
shl
dec
mov
js
mov
repnz
pop
cmp
dec
icebp
cmp
rcl
icebp
enter
imul
mov
push
mov
nop
mov
xchg
jae
push
inc
mov
push
fimuls
inc
cmp
loopne
xchg
mov
mov
idiv
xor
jbe
mov
cmpsb
mov
adc
mov
rorl
sub
es
jb
imul
inc
mov
or
addb
shl
add
add
mov
lods
and
pushf
cmp
adc
sbb
pop
cltd
jg
mov
pop
fldl
outsl
test
inc
pop
cwtl
int3
mov
xor
or
mov
mov
inc
loop
dec
lods
ret
scas
les
cmp
cmpsb
loope
adc
jne
je
shlb
inc
repz
leave
pusha
sub
jns
mov
das
push
mov
shlb
xchg
in
add
add
mov
in
adc
ss
and
fwait
add
cwtl
lret
cmpsl
pop
dec
or
aam
cmpb
jl
add
mov
shrl
div
or
dec
pusha
inc
rol
ja
lcall
or
aaa
addr16
and
pop
adc
mov
adc
adc
sub
pminub
dec
cltd
sub
mov
mov
test
ffree
aaa
jmp
sbb
mov
xchg
dec
inc
push
inc
or
lock
or
xchg
adc
inc
loopne
outsb
inc
xchg
andl
mov
lcall
dec
das
cmp
fs
cltd
aaa
lcall
cwtl
fistpl
add
cmp
push
or
movsl
fdivs
sbb
ss
rcll
int
mov
pop
xor
add
sub
add
cltd
jno
pop
mov
mov
sti
out
xchg
int3
jno
cmp
imul
push
fsub
jecxz
lret
das
popf
push
mov
out
mov
mov
pop
lock
inc
outsl
outsl
cmp
dec
lea
lds
stos
jg
inc
js
pop
jne
lock
cmp
repnz
cmp
popf
and
leave
cwtl
add
cmp
movsl
mov
gs
pop
out
nop
xor
aad
dec
int3
call
test
into
in
jg
adc
xchg
jg
test
mov
inc
cmpsl
mov
mov
icebp
jmp
xor
das
stos
inc
mov
mov
rclb
and
xlat
jne
stc
popf
cmc
fwait
jmp
aam
xor
ss
stos
sbbb
arpl
cmp
sub
or
xchg
add
cs
inc
mov
neg
gs
sahf
imul
aam
adc
iret
and
pop
cmpsb
or
push
ror
fs
inc
mov
inc
adc
sub
push
inc
push
cmp
mov
dec
je
pop
xor
and
add
cmp
and
inc
push
psrlw
movsb
jmp
cltd
cld
aam
fwait
and
imul
push
fsub
dec
sub
leave
xchg
pop
lods
push
push
les
outsb
ljmp
xchg
inc
enter
clc
fs
enter
sub
stc
lret
jb
arpl
dec
jne
pop
loop
push
clc
adcb
fidivrl
loop
outsb
or
pop
fwait
out
lods
test
hlt
xchg
ret
repz
cld
lcall
jno
pop
jmp
cli
and
mov
mov
scas
es
or
xlat
mov
in
insb
dec
xor
nop
insb
mov
push
inc
sahf
lock
hlt
inc
sti
cmp
or
and
mov
jg
or
loop
jmp
xor
das
je
pop
repnz
mov
cs
sub
cmp
mov
aam
xchg
scas
cltd
arpl
jge
and
imul
xor
stos
lcall
add
and
insl
push
add
mov
fisttpl
stos
icebp
in
mov
lea
inc
iret
dec
mov
mov
sub
jecxz
stc
sub
popf
mov
sub
test
das
je
and
adcl
sbb
push
sbb
movsl
stc
orl
dec
es
flds
lock
pop
push
mov
nop
jbe
jns
mov
ret
scas
sub
fwait
sub
out
push
rcrb
sbb
mov
push
inc
add
jbe
dec
pop
push
ljmp
adc
sub
cmc
jg
fsubl
in
push
xchg
call
jno
sahf
xchg
mov
pop
push
movsl
mov
lahf
mov
pop
nop
add
mov
inc
mov
mov
xchg
push
stos
mov
sub
ret
or
fdivl
dec
adc
xor
repnz
arpl
mov
outsb
sbb
idiv
xchg
mov
call
out
cmp
add
cmp
fistpll
ds
sbb
rol
sahf
aad
lods
loopne
mov
dec
push
lret
or
ret
xor
sub
mov
test
jo
sub
fs
inc
dec
pusha
lock
cli
mov
mov
xor
pop
push
cmpsb
popf
stc
mov
inc
or
andl
adc
pusha
mov
jbe
daa
cld
dec
push
movsb
fisubrs
xchg
jge
gs
cmp
mov
or
or
and
loop
or
add
sarb
outsb
cmp
sub
pop
jp
scas
shrl
loop
fstpt
mov
inc
and
mov
fmul
or
out
test
xor
mov
sub
sub
mov
aaa
fmull
lock
icebp
out
or
pop
sbb
cmpsb
leave
push
sbb
mov
rcrl
inc
inc
stos
jl
and
mov
in
pop
movhps
insb
stos
lock
xlat
iret
xlat
mov
push
dec
test
fdivp
lahf
lret
addl
mov
daa
mov
dec
xchg
fdiv
popf
je
adc
push
jne
in
adc
fisubs
xchg
mov
shrl
xor
xor
fistpl
mov
sub
das
dec
push
stc
out
sub
enter
jne
test
outsb
pop
out
jl
je
and
jl
dec
pop
push
clc
jne
mov
cmp
repnz
push
jbe
xor
and
push
mov
test
sub
or
dec
les
js
outsl
mov
sub
out
int3
jno
jp
inc
lods
push
bound
outsl
andl
add
mov
pop
js
add
push
add
lods
xchg
inc
test
inc
negb
fstps
dec
mov
neg
xlat
dec
inc
fs
and
cmp
jo
inc
xchg
rcll
mov
cmpb
jg
dec
and
in
sub
mov
mov
jns
outsl
adc
push
cmc
fcompl
rorl
mov
in
into
shll
aaa
and
mov
dec
insb
fwait
out
cmpsb
mov
iret
addr16
jne
xor
push
add
int3
mov
add
add
jae
mov
subb
mul
mov
cmp
adc
xchg
jbe
xor
lahf
sbb
xchg
pop
cmp
pop
cltd
pop
movsb
jo
call
lds
hlt
adc
sti
mov
aam
incb
adc
pop
pop
enter
xchg
add
out
clc
jne
loope
jae
aad
adc
cmp
push
jb
into
fs
sbb
inc
cli
dec
jmp
add
pop
mov
loop
mov
hlt
jb
push
jmp
data16
pop
call
adcl
bound
jne
out
shlb
push
fsubl
imul
test
call
fs
sbb
repz
outsb
loopne,pt
push
gs
pop
and
out
mov
jns
cwtl
cli
xor
jg
or
mov
pop
xchg
pop
mov
adc
mov
dec
sti
test
or
inc
cmpsb
or
mov
xchg
data16
adc
repnz
sub
icebp
mov
cld
add
mov
lcallw
stos
loope
lock
fisubrl
mulb
jbe
mov
stos
aaa
cmp
pop
in
movsl
mov
push
insl
scas
push
push
or
dec
xchg
jb
adc
cmpsl
sbb
sbb
pop
movsl
mov
shlb
jb
mov
xor
inc
mov
add
ljmp
or
push
aam
dec
jecxz
mov
nop
fnstsw
and
addr16
int
ret
xor
insb
sub
and
xchg
push
out
jns
lods
rcl
push
ljmp
jmp
mov
lods
jle
adc
mov
mov
or
mov
mov
and
sub
into
mov
ss
or
repz
xor
sub
movb
cmp
and
xor
and
sub
cmp
loop
mov
xchg
dec
or
adc
xchg
jbe
xchg
pop
imul
or
inc
shll
enter
and
in
push
insl
inc
loope
ljmp
inc
adc
aaa
mov
add
adc
addr16
sti
or
cmc
cmp
ljmp
out
xor
mov
push
dec
fldcw
aad
push
and
dec
jno
cwtl
pop
xor
push
mov
pusha
test
xchg
je
sti
ffreep
xchg
fldenv
je
in
or
mov
sbb
dec
cmp
pop
sahf
inc
jno
shl
xor
int
mov
ss
jbe
imul
pop
daa
in
mov
cld
repnz
xchg
jmp
aam
stos
dec
mov
xchg
xor
pop
in
mov
cmc
xor
pop
addl
jp
je
mov
adc
dec
call
repnz
in
sub
cwtl
repz
mov
js
sbbl
adc
mov
xchg
adc
pop
inc
ss
sbb
add
jmp
mov
jecxz
mov
aas
test
and
jl
push
mov
out
ljmp
jae
cmp
into
add
mov
scas
fisttpl
sbb
xchg
add
imul
daa
mov
dec
mov
and
in
rorb
inc
xor
adc
add
aad
shl
pop
add
push
xor
mov
fistl
int
add
xor
in
dec
mov
ret
pop
loope
cltd
sbb
stos
pop
push
mov
xlat
push
mov
mov
push
pop
lock
mov
mov
js
repnz
mov
out
enter
dec
in
dec
ret
pop
imul
into
adc
sahf
lret
mov
pop
adc
hlt
sbb
ret
imulb
test
dec
xchg
sbbb
xor
or
and
cmpsb
pop
arpl
mov
xor
add
mov
hlt
cmp
rorl
insl
imul
repz
scas
sbb
das
cmpl
imul
jae
daa
cmp
call
mov
jns
pop
sbb
sub
sbb
dec
xor
mov
dec
iret
das
stos
or
pop
aam
jmp
jmp
sbb
sbb
sub
vmovddup
icebp
repnz
js
and
jnp
or
sbb
mov
mov
fdivrl
jle
add
xor
gs
pop
cmp
enter
xor
mov
sub
cli
dec
push
dec
xor
ljmp
dec
cld
fistpl
fcmovu
notl
outsb
movsb
loope
adc
popa
test
xor
loop
xor
pop
jg
out
cmp
mov
in
mov
pop
fnstsw
ret
inc
negb
ja
rcrl
les
sub
arpl
inc
push
jo
sub
xor
xorl
aaa
call
push
sub
scas
outsl
fadds
data16
imul
outsb
push
cmp
xchg
add
aam
xor
xchg
arpl
scas
icebp
pop
orl
add
add
xlat
xchg
dec
jp
push
gs
mov
cmp
mov
mov
and
aas
rolb
lds
push
jae
sbb
dec
fidivs
xchg
repz
xchg
sub
repz
pop
inc
jl
push
lret
in
add
js
nop
add
flds
clc
daa
nop
pop
xor
mov
mov
rclb
push
fnstsw
mov
or
or
pop
sbb
adc
ret
inc
dec
icebp
out
mov
stos
lcall
in
sub
and
std
ss
pop
iret
pop
pop
lods
in
hlt
mov
or
test
xchg
aad
sbb
sbb
nop
in
jo
sbb
adc
sub
das
ret
movsb
add
mov
or
lret
sub
cmp
jp
filds
xor
fstl
iret
inc
add
xor
pop
daa
stos
xor
jae
xchg
or
add
jae
ss
test
movsl
loopne
rclb
mov
les
jbe
cld
adc
sub
xor
and
cmp
les
sub
xchg
in
jmp
mov
or
out
pushf
lea
mov
and
pop
ficomps
adc
ret
xchg
lahf
mov
inc
sub
mov
sbb
mov
loopne
loop
jns
ja
divl
jbe
out
or
adc
sbb
je
cmp
push
addr16
das
sbb
push
or
add
pop
or
dec
jno
mov
popf
mov
lods
into
mov
in
jb
jbe
fidivrl
xor
lret
mov
push
out
and
cmp
jo
jge
and
out
sbb
push
inc
jns
push
mov
pop
jnp
cmp
sub
add
es
adc
out
orb
fucomip
push
enter
push
adc
mov
fwait
mov
push
divl
jmp
or
sub
add
aad
subb
cmp
and
cmc
test
xchg
xor
out
stos
dec
rcrl
mov
or
lods
test
sub
inc
fisttps
cmp
mov
mov
xchg
or
pslld
outsl
mov
push
test
jmp
push
rol
cld
sub
popf
js
xchg
push
xor
in
pop
mov
aas
mov
ret
es
add
cmp
pop
pop
aad
sub
xchg
ja
fdivl
inc
imul
es
xlat
movsl
xchg
into
inc
cs
outsl
sub
mov
xor
hlt
dec
faddp
dec
insb
lea
into
sbb
push
push
push
xor
call
mov
enter
mov
les
addr16
mov
xchg
cmpsb
mov
call
fdivl
popa
jns
mov
stos
shll
jns
mov
ffreep
imul
fsubrs
add
inc
push
or
loopne
inc
sub
fcom
lds
scas
xchg
lock
rcrb
in
adc
leave
and
xor
and
or
mov
ds
jmp
cs
sbb
std
out
nopl
sbb
test
pop
ret
cmp
push
cmp
adc
shrb
xchg
sbb
clc
mov
test
leave
fsubs
inc
jnp
and
ds
xchg
out
inc
pop
or
es
lea
imul
mov
mov
cmpsb
mov
dec
out
mov
add
ret
xchg
dec
int
push
int
mov
insl
stos
addl
lds
loopne
loop
push
adc
push
mov
jmp
mov
mov
pop
gs
jno
cld
lahf
mov
add
shlb
xor
inc
aam
sub
test
fimuls
lahf
pusha
adc
mov
enter
sbb
and
jle
in
lods
pusha
push
xor
push
dec
pop
push
stc
mov
sarb
jecxz
or
cmpsl
out
jns
sub
loopne
xchg
or
call
sbbb
das
in
xchg
jg
pop
imul
lds
int
xchg
fs
mov
test
enter
push
and
ret
mov
push
je
aas
push
repnz
xchg
add
movsl
adc
pop
sbb
and
push
mov
xchg
add
fsts
out
nop
or
xor
cmc
xor
lret
cmp
fldenv
out
inc
adc
ljmp
int3
pop
mov
dec
in
les
test
mov
sbb
xlat
push
cs
jbe
xlat
sub
shr
je
int3
or
lret
jae
cmc
and
lahf
inc
loope
int
mov
add
sbb
jns
shr
adc
shrl
dec
popa
stos
fstl
xor
hlt
mov
test
cmp
popa
call
mov
add
pushf
xor
pop
lcall
orl
ss
push
imul
dec
ret
in
test
aas
mov
shrl
loope
in
sub
add
mov
jne
mov
and
jle
and
push
fidivrs
testb
sbb
or
push
xchg
enter
push
lret
mov
mov
call
mov
xor
push
xor
fwait
xor
ret
sbb
add
sub
test
repnz
cmp
popf
cltd
dec
pop
xchg
xor
mov
out
cmp
push
cmpsb
xchg
push
in
mov
mov
cmp
or
mov
jl
ja
dec
lea
sub
js
add
xor
adc
dec
xchg
das
inc
jg
shlb
addr16
and
pop
sbb
sbb
sub
add
and
fisttps
and
jbe
mov
push
nop
inc
notl
and
push
push
cmc
jmp
xchg
push
xorb
fsubp
in
pop
mov
mov
ret
dec
pop
into
fucomip
leave
ss
pusha
add
sbb
call
pop
iret
and
loop
andb
and
insb
and
mov
out
dec
push
pop
arpl
pop
pop
or
mov
sub
mov
shlb
out
sbb
lods
aam
mov
in
or
shlb
add
mov
loopne
outsb
mov
clc
add
mov
xchg
repnz
or
pop
xor
mov
xchg
cmpsb
adc
pusha
out
sub
cmpsb
leave
mov
inc
jne
mov
sbb
sbb
xchg
int
fisubrl
mov
test
add
into
mov
cmp
xor
xchg
cmp
stos
fsubr
push
movsb
insl
jno
je
int
adc
xor
rol
lds
mov
cmp
insl
mov
sub
sbb
jns
lret
nop
pop
mov
out
xchg
mov
cmp
jbe
sbb
xchg
push
xchg
rolb
pop
pop
pop
fwait
movsb
popf
dec
fchs
ds
jb
cwtl
jbe
xchg
bound
adc
push
pusha
ja
jns
pop
xchg
orb
outsl
mov
push
sbb
test
imul
rcr
sub
stos
xchg
aaa
add
mov
jmp
imul
push
pop
mov
loop
dec
sbb
cmpsb
inc
push
test
aaa
fnstenv
es
xchg
mov
sti
loope
mov
sbb
inc
cmpl
sbbl
lods
insl
mov
cli
negb
xor
dec
cltd
iret
nop
mov
jne
jle
mov
into
in
inc
gs
jecxz
or
fistl
aad
mov
lret
xchg
dec
in
xchg
dec
push
out
mov
pusha
mov
ja
dec
ljmp
out
in
jg
cwtl
out
fcoml
cmp
sbb
push
adc
mov
inc
jo
mov
ret
ljmp
cwtl
push
fildll
pop
ret
mov
xor
inc
mov
cli
add
add
dec
xchg
imul
mov
cmpb
push
imul
in
jg
xor
mov
imul
adc
dec
and
fcoms
fs
jb
stc
sbbb
pop
jne
mov
out
andb
sub
pop
mov
or
pushl
mov
test
jl
dec
in
sbb
xor
pop
sbb
cli
stos
add
cmp
mov
pop
icebp
xor
mov
push
add
cmp
jns
int
jge
mov
in
popa
rcrl
in
pop
mov
clc
sbb
mov
negl
imulb
mov
out
cmpsb
movsl
jno
jmp
adc
inc
popa
arpl
or
cwtl
loope
sti
cmpsl
cmp
rcrl
push
testl
mov
pop
lods
add
mov
dec
bound
mov
sbbb
sbb
cmp
dec
rorl
dec
inc
sub
es
push
adc
fnsave
adc
in
shll
es
cmp
and
sbb
cmp
push
fpatan
shrl
insb
popf
and
ja
xor
ds
rorl
mov
xchg
push
insb
and
pop
mov
jo
ss
jo
stc
fucomp
cld
dec
ljmp
sub
pop
inc
cmp
push
in
inc
mov
dec
dec
pop
scas
aam
insb
into
scas
add
push
jecxz
popa
or
and
cs
jo
or
or
pop
arpl
out
cwtl
xor
fists
and
sub
mov
aaa
jle
push
daa
push
mov
sub
dec
aam
fisubs
xchg
sub
orl
leave
xor
fxch
rclb
in
icebp
push
adc
fdivp
mov
les
pop
in
sbb
repz
loopne
push
mov
jecxz
movsl
cltd
cmp
int3
push
mov
push
adc
mov
xchg
stc
hlt
xor
cld
addl
adc
sbb
repnz
mov
push
js
sbb
mov
es
sub
arpl
mov
stc
or
jnp
pusha
sub
jecxz
nop
push
dec
push
dec
pop
popf
lcall
cwtl
leave
pop
stc
cmp
cmp
cmc
sbb
in
add
lea
popa
add
mov
mulb
mov
mov
daa
aam
and
xchg
xchg
in
xor
adc
cmc
mov
or
scas
mov
aas
xchg
clc
inc
xor
out
nop
jne
inc
aad
mov
ds
data16
mov
sub
jno
ds
jns
xor
cwtl
push
in
push
mov
xchg
and
push
mov
pusha
xor
in
jge
test
push
jmp
xchg
lret
int3
inc
jle
push
dec
adc
aas
imull
sti
sub
lcall
add
mov
cmpl
in
test
mov
push
lds
mov
dec
mov
cmp
test
fstpt
mov
sbb
ret
sub
lock
xor
fwait
xor
jge
add
testb
ret
lahf
mov
notl
mov
gs
lock
push
pop
nop
call
loopne
jo
test
cmp
fsubrs
dec
cmp
xor
fcoms
rcrb
stos
rcrb
sub
lret
cmp
and
loop
inc
add
dec
add
add
ret
sub
ret
call
arpl
sbb
sbb
imul
adc
add
test
imul
test
adc
adc
adc
shrb
vmovshdup
negb
fsubl
fcomi
mov
adc
push
sub
sub
lahf
jecxz
mov
pop
ja
das
pop
push
pushf
repz
aam
aam
es
or
or
or
shrl
jbe
jl
cli
imul
xchg
mov
xchg
push
mov
mov
lods
mov
or
cmpsb
rolb
gs
mov
dec
pop
push
lret
xor
and
cld
add
cmp
lock
mov
jnp
inc
xchg
fidivl
outsl
arpl
sub
sbb
sbb
out
lahf
dec
iret
rolb
outsb
dec
push
inc
lock
dec
mov
or
push
xchg
scas
mov
jle
insb
mov
repz
cmc
insl
cwtl
outsb
ret
cwtl
push
rcl
pop
add
ret
dec
sub
dec
xchg
xacquire
sbb
or
mov
mov
inc
mov
dec
ficompl
in
mov
mov
jl
mov
sbb
out
jg
adc
iret
outsb
dec
outsl
insb
dec
lods
roll
xchg
rclb
push
cli
add
lea
mov
xchg
fstpl
and
inc
lock
scas
cmpsl
mov
in
cmp
test
movb
xchg
jmp
sbb
addr16
sahf
inc
add
xchg
ret
push
mov
scas
sti
repnz
add
shlb
sbb
leave
sub
leave
mov
pop
push
xor
clc
scas
jl
jle
out
bound
and
mov
in
repz
je
movsl
push
mov
mov
adc
add
sub
jmp
jbe
ljmp
cmp
jmp
sti
shll
lcall
aas
bound
nop
add
or
rcrl
add
mov
push
stos
push
loope
xchg
cmp
sbb
and
jne
jbe
mov
cmp
in
sbbl
dec
outsl
nop
mov
fwait
push
popa
dec
adc
sbb
xchg
dec
xchg
fcoml
in
sub
mov
dec
pushf
mov
jb
leave
add
sbb
mov
scas
scas
pop
add
push
popa
mov
cmp
iret
xor
in
stc
mov
movsl
mov
frstor
daa
rol
fcmovu
xchg
adc
or
bound
cmp
cmp
int
add
pop
ret
and
push
jge
xchg
cli
testl
outsl
cmp
add
fcoms
xchg
in
fs
sub
push
push
sub
inc
and
sti
call
cmp
lods
cmp
jns
inc
and
pushf
xor
cld
fwait
cmp
inc
test
mov
loope
jnp
dec
cli
leave
sbb
sub
inc
fldl
test
inc
lret
jne
sbb
scas
or
mov
es
jl
pop
adc
stc
popf
mov
inc
push
cmc
je
fwait
sbb
add
pop
cmp
imul
insb
fdiv
dec
aaa
mov
sbb
adc
nop
outsb
aaa
divl
sub
xchg
cmp
push
jmp
mov
adc
ret
add
das
int3
mov
jecxz
ss
mov
cld
mov
dec
mov
pop
dec
test
into
xchg
jl
add
mov
xchg
mov
adc
inc
sub
and
mov
add
push
popf
mov
dec
lods
push
cmp
jns
cld
test
adc
daa
aaa
dec
dec
cltd
jns
aam
movsl
mov
je
pop
xchg
adc
xchg
push
adc
rcl
in
jae
out
mov
mov
mov
int
and
xchg
mov
stc
add
adc
data16
scas
jnp
inc
inc
xchg
inc
inc
and
scas
pop
mov
lods
test
xor
aas
stos
cmp
loop
and
mov
fwait
mov
xlat
add
cmpsl
push
mov
inc
jmp
loopne
mov
mov
bound
mov
and
loope
dec
call
dec
jo
les
pop
sbb
lret
outsl
ljmp
in
pop
push
adc
and
movsl
movsb
sub
mov
cmp
addr16
pop
xor
inc
stos
and
sub
mov
push
mov
jns
fcoms
dec
aam
sub
jmp
inc
popf
loope
xchg
xor
mov
in
inc
arpl
aad
int
inc
xchg
adc
jo
dec
xchg
adc
sub
adc
aam
ljmp
imul
test
add
cli
sbb
sbb
das
sahf
frstor
dec
dec
mov
fisubs
dec
inc
adc
repz
inc
xchg
jle
mov
sarl
insb
push
push
repz
gs
dec
fcmovne
pop
jp
sbb
or
loopne
jne
xchg
popf
fisttps
addb
and
sub
scas
push
rorl
fisttpll
out
mov
sti
popf
mov
inc
repnz
jg
push
mov
out
jae,pn
in
ja
jae
and
and
xor
repnz
lds
shrb
outsb
mov
aas
inc
cmpsb
push
aaa
xchg
scas
push
roll
das
insl
pop
inc
insl
push
xor
mov
mov
pop
rorl
cmp
lea
sub
xor
iret
out
adc
inc
push
imul
scas
scas
inc
mov
lret
ret
ret
pop
mov
cmp
pop
and
sahf
xorb
xchg
xchg
and
jno
pusha
out
jl
cmp
xor
flds
pop
xor
xchg
cmpsl
mov
leave
scas
xor
in
lret
je
aam
dec
andb
outsb
repnz
add
jmp
fsubs
add
mov
lcall
cmpsb
aaa
sub
test
push
pushf
cmp
scas
mov
mov
pop
or
pop
push
jne
data16
sbb
js
ja
or
push
add
xlat
sbb
test
sbb
mov
repnz
ficompl
dec
mov
or
adc
adc
jnp
fldenvs
ret
mov
jp
xor
sbb
clc
into
xlat
mov
movsl
cmp
push
adc
cmpsb
es
push
jl
in
jle
scas
push
jae
cmp
jo
dec
sub
or
xchg
push
jno
mov
jle
cmpsl
sbb
imul
stc
push
icebp
pop
sbb
xor
and
sets
cwtl
adc
call
fs
fcmovne
jl
dec
fistl
mov
push
js
xchg
je
ss
sahf
push
shlb
xorl
into
dec
or
sbb
je
mov
loop
cmp
pushf
aas
loopne
jb
mov
push
mov
call
jnp
fidivl
inc
push
sbb
jns
rol
aad
xchg
dec
xor
scas
shlb
sub
rcl
mov
incl
sahf
mov
xchg
in
arpl
sub
je
mov
push
les
les
mov
bound
xor
out
xchg
adc
repnz
int
out
and
push
fldenv
fnstenv
pxor
sub
nop
mov
pusha
rclb
sub
insl
es
test
rolb
shll
sti
mov
add
lret
jb
and
and
jnp
and
loop
push
mov
sbb
xchg
clc
or
push
mov
or
sarb
sub
push
xor
insb
ret
ds
inc
clc
adc
dec
int3
stos
fdiv
filds
mov
push
movsl
xor
push
lods
mov
mov
mov
pusha
adc
pop
cmp
or
mov
outsb
insb
leave
sub
dec
cmc
shll
js
fsubr
xor
fdivrp
fcomip
xchg
ficoml
xchg
push
mov
ss
jl
mov
aam
push
sbb
mov
insb
mov
out
pop
movsl
sbb
pop
lea
add
fucomi
bound
inc
lret
sbb
jl
lods
mov
into
jnp
repz
ljmp
mov
fmuls
test
push
stos
popa
xchg
lcall
cmp
push
cltd
adc
popa
xchg
pop
push
popf
clc
aas
push
icebp
rclb
mov
jbe
ficoms
sub
shll
mov
push
push
pop
movsl
add
int3
mov
mov
and
aaa
gs
pop
jle
scas
rcl
inc
lret
les
and
xchg
and
in
mov
loope
xchg
dec
or
add
push
rorb
nop
mov
dec
out
mov
adc
sbb
jae
push
add
loop
xor
xchg
xchg
push
repnz
jecxz
das
in
sti
pop
movsl
icebp
mov
scas
mov
cwtl
jmp
test
andl
push
ja
outsl
pop
push
pop
mov
cmpsb
or
push
and
dec
cmp
icebp
sub
shll
inc
enter
into
sbb
mov
push
out
adc
ret
mov
divl
and
jecxz
pop
sbb
das
jg
xchg
js
jae,pt
ja
imul
lods
xchg
or
xor
sarb
cmpl
insb
dec
aam
xchg
jb
pop
outsl
xchg
xchg
sbb
xorl
xchg
notb
jecxz
inc
xchg
sahf
and
insb
xorb
pop
cmpsb
mov
xor
js
mov
adc
mov
jb
repnz
out
int3
dec
cmc
xchg
jg
inc
cmpsb
push
add
sbbl
fadds
imul
cmpsb
fstpl
xor
and
xchg
imul
cmp
addb
mov
aad
les
or
sbb
mov
mov
jns
mov
dec
popf
mov
sahf
cmpsb
ficomps
or
sub
es
xchg
dec
popa
mov
sub
mov
sub
loop
sbb
mov
ljmp
out
test
mov
mov
decl
push
and
loope
mov
repz
jle
into
pop
add
dec
adc
adcb
push
subl
sub
cmp
dec
scas
sub
and
xor
pop
daa
loope
test
fs
shrl
lock
movsl
fstp
sbb
imul
jl
mov
push
pop
or
mov
and
bound
icebp
mov
cmpsb
dec
gs
dec
xchg
mov
clc
fidivrs
cmp
xchg
mov
out
cmp
sub
lods
ja
xor
xor
push
mov
pop
sbb
sub
mov
mov
bts
jne
data16
or
rorl
jecxz
or
jecxz
mov
loope
jb
arpl
inc
mov
lea
cmpsl
mov
mov
orl
adc
jmp
shrb
scas
je
cld
pusha
in
movsb
pop
inc
push
mov
mov
push
arpl
or
fcomps
cmpsb
sbb
insb
lcall
aad
fstpl
popa
sbb
xchg
inc
mov
test
mov
sbb
and
sar
insl
divl
int3
mov
in
dec
subl
loop
fisttpll
pop
mov
fistps
es
adc
inc
cmp
test
scas
lods
sub
add
addr16
or
cmpsb
test
movsb
mov
sti
sbb
lock
sbb
jns
cmpsl
lods
hlt
mov
les
cmp
sub
add
pop
in
in
sti
lret
cmp
dec
and
sbb
and
orl
hlt
jnp
and
add
sub
add
int
push
fcoml
addb
fs
fildll
add
cmp
adc
test
ficomps
cmp
and
jb
lahf
dec
xchg
xchg
gs
pushf
call
and
add
push
pusha
dec
call
std
inc
dec
sub
cmpb
push
push
fucomi
ficomps
pop
test
mov
fcompl
decl
mov
and
inc
aam
in
dec
pusha
add
inc
stos
and
add
xchg
xchg
adc
mov
sub
sbb
test
dec
inc
sub
add
jge
jbe
xchg
es
int
fdivrl
fistl
push
out
mov
mov
xchg
fnsave
inc
addr16
sub
mov
mov
lret
or
pusha
ret
fmuls
xchg
bnd
adc
test
adc
stc
je
mov
add
repz
push
adc
sub
scas
jne
or
mov
push
cmp
ja
out
or
es
sub
dec
fwait
cmp
sub
insb
and
mov
call
std
xchg
insl
jg
mov
mov
flds
sbb
mov
pushl
cmp
subl
sub
leave
testb
repnz
jl
dec
jmp
cmp
iret
loopne
mov
jo
inc
sub
stos
aam
and
rcll
std
jg
mov
adc
jp
in
fwait
addl
mov
inc
push
mov
stos
xchg
stos
shlb
ljmp
mov
or
inc
xchg
mov
cwtl
cmp
and
adc
cmpsl
jecxz
sub
lods
xchg
mov
cld
scas
fnstenv
xor
xlat
push
dec
push
inc
add
push
outsb
cltd
test
imul
push
cmp
adc
fdivp
loop
icebp
mov
ret
daa
push
dec
rcr
jns
xchg
push
jmp
out
inc
fdivrl
ss
ret
clc
fcmovnbe
dec
xchg
add
mov
sbb
mov
jge
xor
sbb
dec
xor
loopne
in
jecxz
push
fcomi
pop
sub
mov
stc
mov
cmp
sbb
or
dec
popa
addl
xchg
cwtl
dec
shll
leave
inc
push
sbb
push
cmp
mov
cmp
push
test
and
xor
jne
sub
jmp
xchg
sub
dec
flds
sub
push
inc
jmp
mov
xchg
mov
jns
pop
pop
jmp
dec
rolb
and
loopne
lods
scas
cmp
pop
movsl
xchg
fdivl
clc
mov
mov
scas
jmp
lret
aaa
mov
fs
cmp
outsb
mov
fdivrp
int
xor
mov
enter
pop
popf
or
addr16
repnz
or
mov
dec
cmc
rcr
mov
mov
icebp
lcall
mov
out
je
dec
fwait
jb
or
cmp
lods
xchg
arpl
mov
into
pushl
outsl
sbb
das
in
or
paddusb
cmc
inc
mov
adc
cmpsb
scas
mov
push
fs
lods
loopne
xor
jl
int3
dec
icebp
test
adc
rolb
enter
cs
adc
arpl
adc
jmp
ds
clc
scas
stc
loopne
test
std
cmp
pushf
mov
fs
xacquire
inc
add
jae
pop
insb
sbb
dec
xchg
mov
xchg
mov
sub
sbb
inc
and
repz
outsb
and
mov
push
bound
cli
rorl
das
cmp
sbb
hlt
adc
movsb
pop
push
std
neg
mov
mov
xchg
out
xor
adc
bound
xchg
int
insl
mov
test
push
cmp
and
sub
or
cwtl
aam
aas
fisttps
cwtl
pop
lods
shl
inc
insl
sub
popf
push
pushl
push
test
or
js
pop
fstl
mov
lea
mov
test
out
sub
and
jo
roll
pop
mov
out
icebp
jns
lock
clc
mov
and
mov
and
ljmp
test
outsl
push
into
mulb
jb
sub
mov
mov
ds
jb
xchg
or
push
sub
dec
or
lds
rolb
fistpl
push
fmul
leave
divl
call
rorb
xchg
fsub
and
call
hlt
lahf
jg
pop
push
in
clc
pop
xchg
xor
sbb
pop
xorl
cltd
std
ficompl
movsb
sahf
lods
div
xchg
and
fstps
xor
sub
and
shrb
mov
sub
aad
nop
inc
fstpl
push
cmc
sub
push
int
popf
pusha
jns
inc
dec
inc
mov
xor
push
mov
or
imul
cmc
fcomp
add
dec
mov
mov
xchg
repnz
and
aas
or
icebp
cs
or
inc
jmp
xor
iret
pop
sub
cmpsl
cld
jp
insl
test
xchg
lahf
loope
sub
jl
ss
pop
int3
loope
shl
xchg
pop
cltd
sub
dec
rolb
and
or
adc
test
les
sub
dec
or
outsb
xor
jge
push
cmp
cmp
les
es
pop
mov
jbe
iret
or
inc
mov
and
inc
aaa
data16
and
fldz
das
xchg
scas
or
js
clc
and
sbb
push
push
mov
jns
xchg
jnp
fs
add
adc
outsl
in
mull
cli
stos
push
push
or
inc
dec
dec
cltd
je
mov
and
cld
rol
popa
in
inc
adc
lret
enter
faddl
ljmp
out
sbb
sbbb
popw
or
imul
adcb
and
pop
sub
decb
sbb
dec
push
stos
lods
add
in
stos
scas
movsb
test
pop
mov
xchg
leave
dec
imul
popa
enter
adc
mov
push
cltd
das
jg
dec
mov
ret
jbe
or
add
push
andb
xor
filds
ljmp
out
jne
inc
ret
inc
popa
lret
arpl
dec
push
divl
ljmp
inc
pop
fs
testl
test
aam
popf
faddp
jns
cs
mov
imul
in
mov
jle
mov
out
or
adc
ss
adc
or
out
add
mov
push
sub
adc
daa
mov
cli
adc
mov
addl
in
into
daa
sub
or
inc
iret
ret
jecxz
inc
xchg
mov
call
jg
push
xor
xchg
inc
iret
sbb
jmp
mov
loop
loop
and
enter
insl
push
xchg
lret
or
inc
in
inc
fsubrp
enter
pop
scas
test
test
xchg
mov
loop
test
jae
xor
sub
sub
std
gs
inc
mov
enter
loop
pop
add
push
movsl
add
test
es
test
lea
insl
push
pop
mov
mov
mov
dec
lret
cmc
into
cltd
sahf
test
leave
sub
and
icebp
andl
jmp
jl
and
pop
fistpll
jg
popa
lods
and
xchg
push
cmp
sbb
lods
in
dec
xor
xchg
adc
push
mov
jmp
jb
fs
adc
fs
mov
and
xchg
adc
cwtl
push
cmc
pop
imulb
adcb
xchg
mov
xorb
clc
dec
lcall
mov
sbb
pop
mov
inc
or
push
daa
and
add
pop
cmp
in
mov
in
adc
ds
xor
push
lods
std
push
dec
test
dec
or
push
mov
inc
mov
call
or
lahf
jbe
adc
ja
js
stc
lret
pop
adc
mov
ljmp
arpl
sub
xchg
arpl
pop
mov
adc
idivb
pusha
in
stos
push
mov
pop
std
into
nop
push
mov
insb
in
push
or
sahf
mov
mov
jmp
je
movsb
in
add
jecxz
ja
in
inc
mov
in
lret
dec
into
aaa
inc
mov
mov
lds
roll
cs
add
test
adc
in
pop
mov
xchg
adc
imul
cmc
sbb
dec
xchg
movsl
inc
loopne
lea
mov
les
sbb
jae
aam
pop
fwait
jne
dec
cmp
fidivrs
in
aas
loope
xor
mov
jo
out
cli
or
mov
pop
sbb
nop
addr16
stos
cmpsl
repnz
adc
xchg
pop
gs
es
into
mov
push
into
mov
fldenv
clc
movsl
jmp
xchg
jle
pusha
rclb
fwait
test
icebp
movsb
idivb
stos
xor
in
add
or
and
or
jmp
rcrl
and
push
jns
mov
sti
inc
insl
cwtl
push
cmpsb
mov
stos
nop
jmp
and
test
lcall
mov
xchg
daa
ss
sub
sub
test
sbb
and
pop
cmp
jns
xor
pop
out
jb
mov
sbb
xchg
out
iret
pop
adc
test
iret
xchg
push
push
insb
dec
roll
jbe
pusha
push
mov
call
xchg
pop
adc
or
xor
jl
out
mov
dec
xchg
mov
adc
mov
push
cmpsb
mov
jae
aas
mov
mov
mov
ret
xchg
ror
adc
sahf
add
gs
push
mov
inc
jne
sub
out
outsl
sbb
in
int
addl
rcll
pop
mov
ucomiss
pushf
add
add
into
xchg
jbe
imul
or
xchg
std
or
pop
ja
pop
repz
cli
sbb
push
jg
inc
sub
lods
cmc
mov
inc
imul
lret
mov
nop
repnz
int3
push
scas
push
push
scas
scas
add
cmp
popf
inc
bnd
xor
pop
out
ljmp
enter
pop
ret
sbb
lods
pusha
pop
cs
or
leave
jno
inc
pop
fistl
cmc
in
mov
dec
xor
ret
add
call
xor
mov
enter
in
js
jns
jmp
mov
in
fs
xor
adc
ret
inc
popa
daa
cltd
outsb
in
pop
sbb
jge
imull
and
int3
sti
lret
or
pop
bound
test
mov
stos
stc
inc
cs
mov
out
mov
or
jo
cmp
cmp
lcall
test
push
jecxz
mov
test
mov
push
inc
loopne
movsb
dec
mov
dec
mov
inc
push
loopne
je
clc
mov
notb
outsl
xchg
js
pop
cmpsb
les
aad
jl
aad
fldl
cmp
sar
dec
es
mov
daa
aaa
rorl
push
adc
adc
pop
add
sub
cwtl
adc
mov
jne
clc
aad
jnp
out
jne
jp
sbb
dec
mov
jecxz
jb
xchg
mov
ja
pop
mov
outsb
xchg
loope
cwtl
dec
pop
je
sti
xchg
sbb
arpl
mov
and
jl
cwtl
pop
and
lret
and
imul
in
fisubl
mov
inc
xor
or
push
mov
jno
pushf
mov
mov
lahf
cmpsb
xchg
out
test
mov
cmp
push
test
mov
cmp
mov
xchg
shrl
stos
shl
in
jae
and
sbb
push
leave
sti
sbbl
lods
in
sti
jmp
lods
jp
jp
push
mov
ret
rorb
inc
aad
aas
js
mov
psubb
in
adc
icebp
andl
gs
sub
lock
jb
jmp
cmpsl
pop
pop
push
jnp
loope
cmp
push
sti
daa
in
pop
std
mov
xor
lret
jp
popf
inc
icebp
push
mov
lds
sbb
mov
or
lock
ss
jmp
dec
dec
scas
cltd
sti
sbb
jg
dec
lret
sub
inc
add
cmp
push
repnz
adc
pop
push
xor
movsb
aaa
xchg
mov
cmp
sub
mov
mov
and
jle
pop
push
inc
jbe
rorb
or
in
test
fsubr
mov
xchg
xchg
lea
xchg
call
inc
outsb
sbb
clc
and
cwtl
lahf
adc
adc
loopew
dec
sbb
ljmp
pop
fidivl
mov
inc
ds
arpl
fbstp
out
jae
js
mov
lret
lock
ret
and
insb
mov
mov
fdivl
into
mov
int3
outsl
pusha
add
jns
add
sti
das
dec
push
sbb
mov
jmp
addr16
fs
orl
mov
and
inc
std
cmp
fldlg2
popf
in
sti
paddw
mov
or
push
pushf
lcall
sbb
adc
push
mov
add
shll
shrl
repnz
jno
leave
dec
mov
sbb
cmpsl
shl
push
in
addb
cmp
les
xor
push
mov
scas
js
out
xor
mov
sahf
fcoml
in
lahf
push
rorb
xor
lock
pusha
movb
inc
lods
push
aam
stos
mov
push
rcrb
lods
clc
add
mov
pop
lock
mov
mov
imul
mov
xor
int3
push
lds
inc
out
pusha
fbld
pop
repz
mov
scas
mov
inc
push
jne
sarb
mov
stos
pop
gs
push
pop
aad
fdiv
orb
test
inc
fs
inc
push
push
mov
jae
mov
mov
xchg
mov
sub
cmp
cld
ss
mov
mov
scas
stos
cmp
add
mov
outsb
xor
xchg
dec
inc
das
adc
aaa
scas
loop
dec
push
cmp
ret
pop
push
loope
inc
test
stos
xchg
sub
cld
ja
ficomps
je
fwait
inc
sbb
ret
icebp
leave
sub
out
xchg
out
inc
pop
aad
ljmp
inc
inc
test
sub
shr
roll
stos
in
in
add
cld
adc
in
ret
xchg
mov
and
xchg
sbbl
pop
outsl
adc
mov
or
push
imul
stos
mov
adc
aad
jecxz
push
leave
nop
sbb
adc
aaa
dec
add
jmp
cmc
test
dec
push
shl
cltd
xorl
mov
or
push
adc
repz
dec
fstpl
add
lahf
or
out
lods
aas
cmp
cmp
test
lock
push
aam
nop
xchg
orb
add
xchg
call
push
daa
or
inc
aaa
pop
sub
insl
repz
iret
inc
inc
repnz
xchg
push
ror
call
mov
popf
pop
in
shrl
sub
shlb
pop
push
adc
stc
sbb
das
add
imul
rcrl
cmc
in
sub
mov
xchg
out
das
mov
add
int3
cmp
mov
mov
fucomip
inc
in
pop
pop
fsub
test
sub
cmc
faddl
mulb
sbb
cwtl
jp
inc
adc
mov
xchg
jp
add
push
int
mov
rolb
cwtd
int
mov
fcoml
andl
xor
or
xchg
xor
cmp
mov
je
outsb
jno
int3
das
xchg
bound
xchg
sub
setns
xor
and
aaa
push
roll
fsubs
jb
cwtl
inc
xlat
insb
clc
aam
leave
sahf
adc
sbb
fidivl
ljmp
add
mov
mov
mov
int3
mov
dec
sbb
test
test
repnz
xchg
scas
mov
pop
out
adc
jp
push
lret
shlb
cmp
fsubp
lahf
mov
lds
mov
cmp
fwait
popf
xor
ss
loope
inc
sti
test
shr
jmp
in
inc
or
outsb
imul
aas
out
cwtl
ljmp
or
add
sbb
cs
push
sub
aas
xor
mov
fcmovnb
mov
lcall
push
shrb
cmp
cs
sbb
dec
ret
mov
in
lea
lock
sub
mov
bnd
subb
mov
cmp
mov
rcrl
xor
mov
mulb
loop
shlb
into
jno
mov
jno
and
scas
cmovle
incl
out
aas
test
mov
dec
push
jp
cmpb
data16
push
sahf
mov
push
inc
iret
fidivrs
cmp
add
in
lcall
jg
imul
jo
in
cmpsb
xchg
xchg
fidivrs
mov
frstor
and
xlat
mov
mov
mov
push
sbb
jo
dec
js
out
pop
nop
sbb
addb
cltd
ret
xor
rorb
mov
mov
call
or
outsl
fs
mov
mov
jge
or
pop
pop
push
dec
jge
stos
cmp
icebp
sub
sahf
imul
int
in
sbbb
cmpl
loop
mov
stos
and
and
aaa
cmp
and
xor
shl
jl
push
pop
rol
hlt
mov
pop
jne
sbb
mov
mov
cwtl
lds
hlt
enter
and
addr16
and
or
adc
scas
jecxz
mov
sbb
aaa
xchg
adc
mov
xchg
inc
out
cmp
or
cli
stos
push
movsl
sbbb
inc
cmc
push
and
nop
mov
add
lock
pop
inc
sbb
clc
inc
ljmp
rcrl
and
pop
jo
jae
cld
scas
push
cmc
mov
pop
mov
push
fisttpll
xor
xchg
xchg
push
xor
ljmp
lods
cld
adc
sarb
and
mov
xor
idivl
popa
mov
jne
rcl
xchg
inc
add
clc
mov
cltd
jmp
loope
cmp
jnp
cmpsl
add
cmp
aad
in
je
outsl
roll
icebp
mov
jg
jp
fisubl
mov
arpl
repz
pop
movsb
xchg
insl
aad
jge
xor
je
rol
stc
psubw
cmp
push
movsl
cltd
push
fxch
cmp
in
sar
lods
sti
leave
mov
and
imul
mov
addr16
inc
arpl
push
das
mov
roll
jb
out
int3
movsl
mov
add
mov
loopne
scas
in
jae
out
dec
push
popf
inc
movsb
inc
mov
fwait
jo
out
sub
test
mov
lcall
pop
push
call
add
rclb
xlat
and
mov
dec
dec
fistps
icebp
popf
jo
out
inc
xchg
fst
push
push
mov
sbbb
xchg
stc
sub
add
into
pop
fmull
call
sub
cmp
pop
or
inc
imul
test
sti
into
enter
fnstenv
jnp
and
dec
and
fcoms
cmp
add
xor
xchg
push
pop
aaa
iret
testl
repnz
pusha
pop
daa
jl
lea
repnz
add
cwtl
lds
or
in
lret
addr16
les
loope
cmp
int
inc
ret
adc
mov
stc
jo
mov
mov
fsubr
cmp
vmovntdq
dec
and
outsl
pop
xchg
xchg
aas
xchg
cmc
lea
mov
mov
std
jno
cmpb
lcall
sbb
push
xor
lret
mov
orb
popa
outsl
bound
in
outsl
fldl
jmp
fldenv
pop
test
sahf
xlat
mov
inc
das
filds
add
std
add
fidivl
dec
popa
cld
data16
daa
jb
jbe
fs
inc
dec
adc
dec
movsb
pop
sub
lods
shll
aad
shll
add
inc
sbb
lock
lds
fisubrs
sbb
mov
xchg
in
jle
jbe
and
inc
addl
xchg
cmp
add
pop
sbb
push
push
cmp
and
sub
push
sarl
push
xchg
inc
lock
jmp
mov
push
mov
inc
lods
popa
je
jne
xor
sub
pop
loope
ja
scas
push
ret
arpl
xchg
into
repz
inc
iret
sub
loop
scas
mov
mov
xor
shrl
adc
imul
dec
mov
in
lea
clc
add
lods
pop
xor
aas
sub
sbb
xor
iret
add
out
fcompl
lds
dec
test
pop
repz
ds
dec
arpl
lods
push
add
fwait
mov
fs
mov
push
not
lods
and
popa
adc
popf
cmpsl
stos
daa
outsb
add
adc
sbb
lret
push
mov
mov
mov
out
dec
jo
insl
popf
inc
cmp
dec
test
jno
call
lahf
pop
fiaddl
dec
decl
xchg
insb
stc
cmp
add
pop
sub
movsb
mov
sti
xor
shr
xchg
xchg
std
dec
lods
loop
lock
mov
call
cmp
dec
jb
add
lea
add
scas
jmp
aam
dec
xchg
cmp
sti
iret
xchg
sub
sar
mov
scas
sbb
scas
fs
sub
mov
adcb
loopne
or
jl
jo
adc
inc
out
cmp
inc
lea
mov
inc
sbb
test
add
lea
je
or
lret
xchg
imul
fabs
mov
mov
sbb
pusha
cltd
sbb
roll
scas
mov
sbb
dec
or
hlt
sbbl
shll
push
adc
std
push
push
fnsave
cltd
jo
adc
imul
jne
or
add
lret
stos
dec
dec
mov
jno
sub
test
imul
jo
pusha
push
mov
je
ret
add
or
adc
add
mov
jb
jne
jo
sub
push
lret
push
push
cmc
dec
fcompl
or
sub
test
not
dec
fldt
aaa
ficoml
mov
push
sub
les
xchg
lret
sub
pop
dec
mov
cmpl
mov
sti
add
rcll
mul
xchg
dec
sub
sub
push
and
lret
or
inc
pop
xor
in
aas
int
xchg
mov
mov
rorl
pusha
xorl
pop
lds
lahf
xor
push
or
popf
fadds
push
scas
cmp
movsb
cmp
rsqrtps
loop
out
loopne
sbb
fiadds
sbb
xlat
add
jbe
sbb
xchg
push
mov
lods
sub
dec
aaa
jbe
and
xlat
pushf
cmpsl
sbb
xchg
jae
jp
out
imull
xor
xlat
sbb
cmp
iret
cli
mov
add
push
dec
xor
lret
and
js
adc
pop
insb
mov
jne
adc
test
fistpl
dec
lods
or
out
insb
inc
aaa
in
add
push
and
inc
mov
adc
inc
or
dec
add
cltd
aas
mov
mov
aad
pop
inc
sub
push
dec
mov
cmc
cld
jnp
mov
xchg
mov
jecxz
cmp
cld
inc
adc
dec
insl
pushf
xor
mov
aad
nop
not
jmp
or
push
xor
xchg
cltd
jl
jecxz
dec
adc
inc
stc
fldenv
or
push
sbb
hlt
push
insl
cmp
xor
mov
sti
push
stos
adc
nop
lahf
mov
or
lods
xchg
jp
ds
lock
push
jb
or
xlat
dec
push
stos
cmp
jnp
daa
sub
and
iret
push
dec
cld
pushf
jbe
enter
scas
je,pn
adcl
and
or
mov
lret
lret
hlt
sub
inc
mov
shl
cmp
loopne
inc
and
daa
jecxz
push
xor
hlt
jmp
es
xchg
push
cli
sub
jns
push
insl
rcl
push
mov
stos
and
out
popa
inc
mov
dec
out
call
add
or
je
scas
insb
and
nop
and
cmpsb
inc
xlat
insb
pushl
sbb
or
cmpsb
pop
adc
push
js
xlat
es
out
shrl
test
and
xchg
jns
cmpsb
arpl
aaa
jno
sti
sub
add
pop
and
mov
and
push
pop
jmp
mov
xchg
stos
push
jb
nop
cwtl
jle
pop
lds
cmp
mov
mov
rclb
adcl
pop
fisubs
lods
xchg
push
pop
aam
or
inc
mov
mov
or
cwtl
jle
rclb
jbe
jecxz
in
lods
lahf
pop
repz
push
cmp
mov
or
jl
icebp
xchg
push
dec
pushf
adc
outsl
push
or
pop
push
je
sub
cwtl
mov
push
insl
call
int
arpl
lods
mov
ss
cmc
clc
or
mov
dec
jmp
add
cmp
loope
sub
or
or
mov
add
nop
xor
pop
mov
adc
outsb
fwait
stos
std
in
ret
inc
daa
jb
iret
mov
call
bound
out
ret
loop
pop
iret
adcb
test
inc
mov
pop
xchg
add
push
test
dec
and
call
push
into
loopne
sbb
lock
or
sub
push
mov
and
jae
dec
shlb
lcall
out
jno
adc
test
or
push
inc
xor
inc
cmp
sbb
nop
mov
fidivrl
pop
insb
ret
inc
insb
loope
pop
and
xor
xor
lock
lock
cltd
dec
test
xor
mov
inc
xchg
repnz
dec
in
or
daa
js
testb
loopne
into
xor
or
dec
xchg
sbb
add
popf
and
lds
cmp
mov
xor
aam
fcmovne
clc
scas
loop
out
mov
fimull
pop
cwtl
sub
xchg
sub
iret
sbb
push
fsubl
imul
inc
push
leave
shll
int
jae
mov
popa
std
jg
nop
fdivrl
adc
mov
mov
mov
icebp
aad
test
pop
push
push
push
or
scas
orl
call
mov
xor
fwait
mov
addr16
in
lock
addl
mov
push
adc
sbb
jle
sbb
xor
mov
mov
inc
ja
ja
cmc
inc
or
mov
lahf
nop
leave
cmpsb
mov
cwtl
mov
leave
into
xchg
or
cltd
mov
daa
push
push
stos
leave
aad
loopne
xchg
ret
arpl
mov
pop
mov
lcall
cmp
pop
xor
sbb
sbbl
repz
data16
sti
push
pop
add
sub
cmpsb
repnz
stos
add
push
insl
out
loop
pop
mov
push
enter
daa
call
jbe
das
fsubl
xor
test
fdivl
test
jmp
aad
push
mov
lret
pop
xor
es
add
or
dec
mov
sbb
dec
mov
push
in
add
leave
xchg
sub
lods
out
flds
fldl
dec
dec
aad
adc
mov
fdivr
mov
je
rorl
gs
lea
xchg
mov
push
popf
rorb
adcl
dec
in
adc
mov
fidivs
or
adc
or
sub
cwtl
movd
aas
add
inc
mov
pusha
mov
incb
mov
xchg
pop
jbe
fst
stos
adc
xor
loope
pusha
pop
add
dec
sub
icebp
xor
push
test
cmp
vunpckhps
gs
pop
or
xor
loop
xor
sbb
cld
mov
mov
icebp
jmp
mov
and
xchg
insb
cmpsb
dec
int
neg
jle
sbb
pop
bound
ret
insl
pop
insl
lds
lea
push
or
push
daa
sti
sti
popa
loop
aam
cmp
sub
and
pop
fisttps
xchg
add
lds
xchg
shlb
dec
sbb
mov
sub
idivl
push
cmp
das
out
call
sub
das
jl
into
xor
sub
addr16
aam
jbe
ja
test
sub
mov
xchg
out
push
mov
in
mov
xchg
inc
gs
add
push
push
test
test
jle
jno
mov
pusha
push
xchg
popf
int
sub
add
sub
push
rorl
push
rorl
idivb
jle
out
push
aad
pop
cmp
or
sub
clc
push
xrelease
xchg
pop
imul
test
xor
adc
xor
test
dec
sbb
jg
xchg
cmp
in
push
addr16
xor
dec
ret
xchg
sti
dec
or
dec
stc
cltd
push
add
aam
cmc
bound
push
pop
imull
leave
inc
jo
divb
mov
push
or
add
push
fisubrs
fsub
push
imul
dec
enter
dec
or
mov
adc
mov
mov
mov
lods
lock
pop
cwtl
call
sub
or
repnz
loope
jmp
movsb
int
out
sbbl
aaa
lods
out
orb
jno
aam
ret
arpl
loope
inc
push
xchg
or
add
fildl
sahf
xchg
cltd
gs
inc
jnp
out
sahf
pop
and
or
pushf
cmp
fcoml
setnp
addb
sub
xchg
loope
cmp
imul
rcrl
out
mov
pop
mov
cmpsb
mov
sbb
inc
mov
sub
jg
push
nop
jo
movsl
in
sbb
int3
in
imul
dec
adc
test
push
jge
push
loope
enter
daa
jae
stos
incb
push
nop
mov
mov
xchg
out
mov
pop
xorps
repnz
jmp
pop
mov
push
mov
stos
xor
adc
fs
ja
imul
iret
testb
sahf
ja
mov
jae
subl
push
push
xchg
fsubrl
repz
cmpsb
or
inc
push
pop
sub
iret
test
or
inc
jnp
pop
fs
cmp
imul
push
pop
add
bound
mov
inc
xchg
jo
dec
ds
mov
insb
stos
fyl2x
inc
shll
cmp
dec
sub
sub
push
xchg
push
dec
lds
cmp
mov
mov
add
push
aas
shl
aaa
push
popf
icebp
mov
mov
mov
in
aaa
mov
div
mov
xor
dec
shrb
lcall
mov
inc
pop
test
seto
mov
out
fs
pop
out
fsubl
popa
lcall
lret
inc
xchg
into
jnp
push
lds
sbb
fnsave
cmpsl
scas
pusha
cld
enter
in
or
mov
or
aam
enter
outsl
mov
pop
jmp
testl
sub
xor
push
jns
decb
cmpsb
cltd
leave
mov
nop
scas
jle
loop
jp
sti
inc
lods
mov
jno
jne
mov
add
mov
sbb
dec
out
push
movsb
xchg
cwtl
roll
ret
cmp
cmc
stc
fists
call
push
xchg
xor
into
shll
dec
mov
mov
lea
xor
jmp
push
inc
andb
and
stc
xor
fdivl
xorl
adc
int3
repz
je
repnz
or
mov
outsl
cmp
inc
arpl
test
pop
scas
mov
inc
mov
movsb
or
lsl
jo
mov
push
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
ja
sub
pop
sub
in
cmp
pushf
jbe
leave
movzwl
rol
stos
and
jmp
cmp
or
xlat
add
in
fwait
push
aam
and
out
cltd
lods
jae
mov
orl
dec
mov
sarl
outsl
pop
nop
paddsw
inc
jns
add
sar
xchg
push
jp
aaa
in
fnstenv
adc
mov
lods
push
cmc
icebp
clc
insb
cmp
fwait
lods
in
bound
addl
out
repnz
jb
xchg
js
imul
lock
pop
add
jb
mov
dec
dec
push
out
sub
mull
xchg
inc
push
gs
dec
or
and
gs
loopne
fsts
and
inc
push
dec
sub
jns
add
loopne
lcall
loop
roll
add
mov
sbb
pop
loope
in
add
fs
pop
xchg
pop
rol
in
stc
or
sbb
jae
or
xchg
cmp
mov
adc
testl
jge
push
sbbl
les
fistps
notl
mov
jmp
loope
in
cmpsb
and
xchg
repnz
lods
adc
cli
sbb
into
out
cmp
rcr
dec
xor
jns
fsubrs
int
pushf
fwait
push
dec
insl
push
xchg
pop
dec
lret
xor
iret
sub
and
mov
or
fdivr
dec
adc
cmpsl
scas
pop
je
jb
sti
es
and
sub
xchg
aad
cmp
cmc
movsb
add
push
cwtl
lods
inc
pop
cwtl
imul
aad
pop
push
pop
lea
xchg
stos
sbb
cmp
add
fisubrs
inc
aaa
sbb
les
jle
mov
in
push
sub
push
lods
push
inc
movsb
or
mov
or
hlt
mov
xchg
xchg
fists
inc
sub
jo
or
push
lret
popa
ja
dec
mov
or
xor
sub
push
xorl
loope
mov
fimull
or
sub
out
stc
xlat
mov
repnz
cmp
sub
mov
ret
adc
int3
stos
imulb
icebp
sub
scas
xor
xor
jge
mov
nop
out
xchg
lret
idivl
and
scas
push
or
inc
add
inc
mov
movb
pop
mov
jp
push
in
dec
push
push
sbb
jmp
lcall
rcrb
mov
xor
hlt
add
cli
xchg
je
pop
ja
mov
and
lcall
mov
cwtl
out
sub
inc
into
inc
push
push
ljmp
loope
mov
jne
pop
push
repnz
adc
xor
xchg
cmp
aaa
imul
out
mov
shrl
stos
push
xor
aas
xor
pop
aaa
adc
xchg
dec
lods
outsl
fs
sbb
cmp
adc
adc
sti
into
out
cmp
repz
aas
cmp
gs
sub
or
sbb
jbe
mov
fnstenv
cmp
lea
add
cwtl
test
lods
fidivl
idivl
xchg
xlat
out
lods
jb
cmp
fistpll
mov
push
call
andb
nop
idiv
ret
add
adc
fsubs
jle
lods
pop
repz
sbb
cmp
movsl
iret
push
cmp
xor
cmpsb
xor
fisttpl
and
loope
ljmp
sbbb
es
stos
inc
mov
testb
mov
pop
jns
sub
out
add
cmpb
movsb
xorl
and
clc
jne
add
scas
mov
jl
stc
mov
pop
sahf
mov
xor
test
push
stc
add
mov
in
popa
jl
rcll
pop
jmp
cmp
repz
cltd
cmc
shll
aam
mov
outsb
jl
mov
mov
lods
pusha
sarb
mov
xchg
lret
xchg
lds
popa
adc
cmp
pop
push
faddl
dec
xchg
idiv
std
mov
aaa
loop
lret
sub
icebp
mov
je
mov
lods
sbb
push
in
stos
ja
sbb
daa
pop
fistps
js
jns
dec
scas
and
mov
fldt
lods
addr16
push
xchg
sbbb
repnz
cmp
push
lea
xchg
push
je
mov
sbb
or
inc
mov
and
enter
or
jp
pop
jmp
mov
insb
les
add
mov
inc
mov
outsl
sbb
mov
jb
stos
in
lret
ljmp
xchg
pop
push
insb
lcall
insl
or
jae
pop
cmp
inc
and
mov
les
icebp
in
or
int
out
sti
inc
and
sbb
popa
shr
xchg
or
xchg
mov
cmp
xchg
or
shll
adc
pop
test
nop
fists
mov
imul
mov
das
popf
loopne
aaa
shrl
jns
jno
js
cmpsb
movsl
inc
loope
shrb
dec
dec
mov
dec
cmp
sub
stc
adcl
cmp
ficompl
cs
cmpsb
aaa
rcll
pop
mov
popf
sub
test
in
mov
ds
ljmp
lods
inc
test
test
adc
xlat
lea
cli
mov
mov
mov
or
out
into
jbe
cmp
das
test
bound
cltd
push
gs
push
sub
ds
xchg
movsl
xchg
mov
test
stos
pop
pop
je
xor
inc
xchg
stos
jecxz
in
and
hlt
mov
fs
imul
gs
in
pop
mov
push
clc
or
std
daa
or
sbb
pop
loop
jo
fsubl
ss
and
arpl
mov
jmp
call
mov
adc
xor
outsb
xchg
pop
mov
cltd
mov
mov
xchg
adc
mov
loope
rorb
add
sbb
mov
sbb
jle
or
cmpb
stc
pop
gs
dec
xchg
fsubrs
cld
add
dec
add
xor
data16
add
adcl
push
int
mov
fcomip
iret
mov
aaa
mov
cltd
loope
mull
mov
push
inc
jno
shl
sbb
cmpl
ret
int
sub
ja
jmp
dec
cs
fwait
addb
dec
push
mov
cmp
jne
cmc
in
push
divl
cmp
cmpsb
lret
xor
adc
loope
sbb
rclb
xchg
shr
add
dec
xchg
lock
jmp
cmp
imul
xlat
call
sbb
shr
or
sub
cld
cltd
lds
sub
pop
xchg
push
cli
cmp
inc
scas
mov
aaa
sti
inc
cwtl
mov
loope
andl
sub
cmp
std
icebp
push
pop
outsb
xchg
xor
inc
ja
push
adc
push
adc
std
xchg
dec
cmp
xor
imul
pop
negb
inc
in
fwait
mov
orb
aas
ljmp
or
dec
inc
pop
insb
movsb
mov
push
dec
pop
mov
xor
frstor
pop
jmp
test
xor
fimuls
mov
xor
aad
test
aam
rcll
jl
loop
aaa
xchg
cmp
cld
inc
mov
fnstcw
cmp
jp
mov
cmp
mov
std
pop
lahf
movsb
inc
pusha
push
idivl
mov
shrb
push
insb
in
std
fistl
mov
pop
adc
mulb
bound
inc
out
test
inc
andb
leave
inc
mov
arpl
int3
icebp
outsl
and
int3
cmp
xchg
dec
daa
jbe
push
xor
cld
xchg
or
sub
mov
scas
xorb
jno
fistps
dec
fsubr
movsb
mov
pop
mov
mov
mov
insl
jge
push
sti
and
adc
faddl
or
mov
add
push
mov
je
push
setb
sbb
mov
or
inc
xorb
je
fdivrs
rcrb
popf
mov
or
in
inc
inc
andb
stc
pop
inc
push
ljmp
repnz
xchg
aas
daa
clc
loop
subl
das
xlat
or
call
pop
push
rcrb
lret
pop
sbb
dec
or
or
fadds
sbb
stc
movsl
nop
sbb
ljmp
cmc
push
push
mov
jb
add
mov
outsb
or
ss
hlt
jbe
cwtl
mov
jae
add
sub
and
sub
jl
cmpsb
ds
dec
jmp
mov
jbe
into
jo
add
mov
add
adc
movsl
xor
inc
pusha
cld
mov
xor
rolb
mov
cmp
cmp
pop
adc
sub
or
jae
mov
or
dec
lds
add
pop
andl
insb
push
pop
rorl
jne
push
xchg
jbe
push
xor
jo
outsb
pop
loopne
das
scas
xchg
sbb
rorb
add
jle
add
mov
jbe
push
inc
push
push
out
mov
aas
xchg
push
out
push
mov
sub
flds
popf
adc
lahf
int3
cwtl
dec
mov
sbb
and
inc
bound
sub
push
fwait
add
xchg
add
add
xor
mov
xchg
inc
fadd
sub
jl
js
push
pop
add
inc
fstps
scas
int3
mov
outsb
mov
pop
mov
sub
shlb
inc
and
push
shrb
xor
and
addr16
sub
insb
fnstsw
ds
mov
jle
popa
aaa
popf
int
jb
popf
mov
lods
mov
pop
pop
int
cmp
push
sub
lcall
jb
push
fnsave
cmp
rcrl
sbb
bound
iret
ljmp
adc
iret
lcall
lock
inc
sbb
sub
aaa
add
pusha
in
push
mov
inc
and
mov
add
mov
cmpsb
test
mov
push
pusha
testb
dec
mov
sub
iret
lock
lahf
pusha
loope
cs
out
clc
mov
xor
mov
lds
das
ja
and
fsub
mov
dec
or
and
iret
cmpsl
pop
dec
push
mov
mov
sub
aad
xchg
scas
fstpl
mov
ljmp
popa
popa
ja
push
pop
cmp
aad
test
add
jmp
push
xchg
xorl
dec
fucomp
push
dec
xchg
mov
inc
int3
nop
dec
ret
dec
or
xchg
mov
ss
xchg
pop
repnz
add
sbb
push
push
outsb
add
mov
movsl
ljmp
mov
or
xchg
lret
iret
jns
pop
not
sub
mov
in
dec
add
insb
rclb
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
mov
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
