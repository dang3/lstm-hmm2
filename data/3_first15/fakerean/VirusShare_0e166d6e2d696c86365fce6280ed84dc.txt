push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
imulb
inc
add
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
dec
cmp
lea
sub
mov
xor
mov
add
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
push
pop
inc
add
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
adc
add
add
inc
mov
push
xor
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
aas
inc
add
cmp
shrl
cmp
das
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
mov
inc
add
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
pop
inc
add
push
lea
mov
test
je
cmp
push
inc
add
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
adc
inc
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
inc
sbb
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
mov
test
rclb
insb
cwtl
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
cmc
and
lea
call
mov
lea
call
add
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
xor
inc
jmp
call
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
push
jne
mov
cmp
jne
mov
cmp
mov
jne
lea
movl
lea
push
push
push
movl
mov
call
push
push
push
call
add
add
decl
jne
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
xor
add
call
jmp
push
mov
sub
push
mov
push
mov
push
push
pushl
call
test
jns
push
xor
cmp
ja
movzbl
mov
jmp
movl
jmp
push
lea
push
push
push
movl
call
movzbl
and
mov
mov
pop
pop
pop
leave
ret
movl
jmp
mov
movl
jmp
call
jmp
mov
jmp
mov
movl
jmp
movl
jmp
call
neg
sbb
inc
jmp
push
mov
call
test
jns
jmp
mov
jmp
mov
jmp
push
call
add
mov
push
adc
roll
adc
roll
adc
aaa
aas
adc
aaa
aas
adc
rolb
adc
push
adc
aaa
aas
adc
aas
adc
aaa
aas
adc
aas
adc
push
adc
push
adc
push
adc
push
adc
roll
adc
aas
adc
aaa
aas
adc
rolb
adc
push
adc
roll
adc
add
add
add
pop
add
or
or
movups
adc
adc
inc
and
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
push
push
mov
mov
mov
mov
call
test
je
cmpb
jne
mov
mov
call
cmp
je
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
movb
movb
fildl
xor
cmp
fidivl
push
setne
mov
fstpl
call
test
pop
je
flds
lea
push
lea
push
movzbl
push
push
movzbl
push
push
fstps
pushl
fldl
push
push
movzwl
fstpl
push
movzwl
push
movzbl
push
mov
call
pushl
mov
push
mov
mov
push
call
test
je
incl
mov
test
mov
jne
mov
mov
call
cmp
pop
sbb
pop
and
pop
leave
ret
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
lea
fstps
push
lea
push
call
add
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
push
mov
movl
jne
mov
push
call
add
testb
movl
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
xor
cmp
je
mov
mov
cmp
jne
cmpl
push
mov
movl
jne
mov
push
call
add
push
movl
call
add
pop
mov
mov
pop
pop
pop
ret
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
xor
sub
cmp
je
cmp
je
push
mov
cmp
je
mov
cmp
mov
jne
mov
mov
push
lea
lea
movl
mov
call
mov
pushl
mov
mov
push
pushl
push
call
lea
mov
call
mov
pop
leave
ret
push
mov
mov
sub
test
je
andl
push
push
push
mov
mov
mov
test
jbe
andl
movl
mov
mov
mov
test
je
andl
push
lea
call
mov
test
mov
je
mov
push
call
mov
lea
push
pushl
push
call
cmpl
jne
lea
call
incl
addl
cmp
jb
pop
pop
xor
pop
leave
ret
mov
mov
mov
push
call
lea
call
jmp
push
mov
sub
push
mov
orb
xor
cmpl
push
sete
andl
push
push
push
mov
mov
mov
lea
push
call
test
jne
lea
call
jmp
mov
call
test
jne
push
inc
mov
call
test
je
push
call
test
pop
je
andl
andl
mov
pushl
mov
push
push
call
test
jne
adc
inc
add
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
cmpl
jne
lea
call
mov
mov
shr
lea
lea
xor
and
inc
shl
or
cmpl
je
lea
call
andb
xor
inc
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
xor
pop
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
lea
push
push
xor
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
test
inc
add
pop
and
call
add
test
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
push
xor
lea
call
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
inc
add
test
inc
or
jne
mov
movl
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
pop
xor
pop
ret
cmp
je
cmp
je
mov
mov
call
test
jne
mov
mov
call
test
je
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
mov
pop
jne
cmp
je
mov
lea
push
mov
push
push
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
push
mov
call
test
pop
je
mov
xor
mov
mov
mov
mov
mov
sti
cmp
add
dec
and
push
lea
push
lea
push
lea
push
push
xor
push
inc
push
mov
mov
mov
call
add
test
je
cmp
jb
andl
lea
push
lea
mov
mov
push
push
push
push
mov
lea
call
add
test
js
cmpl
ja
xor
cmpl
ja
xor
mov
push
push
push
xor
lea
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
lea
push
pushl
push
call
test
js
mov
push
push
xor
lea
call
xor
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
jne
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
jmp
mov
mov
jmp
push
mov
and
push
mov
push
push
push
xor
push
inc
call
test
je
mov
lea
mov
test
je
mov
mov
push
push
call
test
je
test
je
mov
push
call
mov
mov
movl
testb
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
push
mov
call
test
jne
cmpl
je
push
push
push
or
push
mov
call
jmp
or
mov
mov
test
je
mov
test
jle
lea
mov
call
xor
push
inc
mov
call
test
je
pushl
pushl
call
pop
xor
pop
inc
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
lea
push
movb
call
test
je
andl
mov
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
cmp
je
jb
movl
mov
ret
push
mov
sub
test
push
mov
je
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
xor
lea
push
mov
mov
mov
mov
mov
push
call
mov
mov
cmp
je
mov
add
add
mov
mov
cmp
je
mov
add
add
mov
test
jne
pop
leave
ret
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
push
mov
call
pop
jmp
push
mov
sub
push
mov
mov
call
test
je
mov
cmp
pop
jb
or
call
test
je
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
sub
add
push
lea
push
call
leave
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
pushl
mov
pushl
push
call
cmpl
mov
jne
mov
mov
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
mov
mov
andl
mov
mov
movl
mov
movl
push
mov
call
pop
pop
pop
ret
mov
mov
mov
mov
mov
movzwl
mov
mov
push
push
call
xor
ret
mov
testb
jne
mov
mov
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
push
adc
add
add
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
mov
test
movl
movl
add
js
les
je
push
call
pop
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
mov
push
xor
cmpb
mov
mov
je
mov
cmp
jne
movzbl
cmp
jne
movzbl
cmp
jne
mov
cmp
mov
mov
mov
je
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
xor
cmp
jne
mov
mov
mov
mov
xor
cmp
mov
mov
mov
jne
test
jne
xor
xor
mov
cmp
mov
jle
mov
mov
mov
add
add
cmp
mov
jle
mov
lea
add
push
push
lea
mov
call
mov
mov
mov
mov
xor
mov
sub
sub
add
cmp
mov
mov
mov
mov
jl
lea
cmp
jl
lea
cmp
mov
mov
mov
jne
lea
push
lea
push
lea
lea
push
mov
call
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
add
mov
add
cmp
jge
neg
cmp
jle
xor
mov
cmp
jl
mov
cmp
jl
mov
cmp
jne
mov
mov
mov
mov
mov
lea
mov
call
test
je
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
je
jmp
mov
jmp
cmpb
jne
jmp
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
jmp
cmp
je
mov
mov
add
lea
cmp
jge
mov
neg
cmp
jle
xor
mov
cmp
jl
cmp
jl
mov
cmp
je
xor
pop
pop
pop
pop
add
ret
lea
jmp
mov
mov
mov
mov
jmp
mov
jmp
lea
jmp
xor
jmp
push
mov
call
test
mov
je
mov
push
push
push
push
mov
call
test
js
mov
mov
xor
jmp
xor
jmp
lea
jmp
mov
mov
jmp
lea
jmp
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
xor
test
push
mov
mov
mov
mov
mov
mov
mov
mov
movl
jo
sbb
dec
inc
add
inc
dec
push
add
rolb
jb
mov
mov
mov
cmpw
jne
sub
cmp
jae
cmp
mov
ja
test
je
mov
cmp
jbe
mov
cmpw
jne
add
cmp
jb
cmp
mov
jb
mov
mov
movzwl
add
sub
js
add
cmp
jbe
test
jg
movw
mov
lea
mov
add
add
cmp
mov
jb
test
jbe
xor
lea
cmpw
jne
add
cmp
jb
mov
sub
je
sub
jne
mov
sub
mov
mov
sub
mov
movl
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
lea
mov
mov
cmp
movl
mov
mov
je
cmp
jne
cmp
jb
jmp
movzwl
movzwl
mov
movzwl
addw
lea
jmp
mov
mov
jmp
cmp
jae
mov
jmp
sub
sub
test
mov
jne
lea
mov
shl
mov
test
jne
test
je
lea
and
add
addw
movzwl
addl
test
mov
je
cmp
ja
mov
mov
mov
movzwl
mov
mov
sub
mov
movzwl
cmp
jge
movb
mov
mov
mov
sub
mov
mov
shl
mov
shr
mov
mov
lea
add
lea
mov
jmp
mov
shr
test
jne
jmp
jle
movzwl
mov
add
mov
mov
mov
mov
mov
jmp
mov
and
cmp
je
mov
test
je
mov
mov
lea
mov
sub
add
cmp
mov
jae
mov
shl
mov
lea
movzwl
sub
test
jg
mov
mov
shl
add
mov
mov
cmp
jne
cmpl
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
jmp
cmp
je
mov
movzwl
movzwl
jmp
xor
jmp
test
jne
mov
mov
lea
add
mov
mov
mov
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
add
add
add
cmp
mov
jae
jmp
mov
mov
jmp
cmp
jne
cmpl
jmp
movl
movl
movl
jmp
mov
mov
movl
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
sub
add
add
sub
jne
test
je
pusha
push
call
mov
add
add
stos
hlt
int3
add
add
call
lock
repnz
add
addl
add
in
add
pop
lret
add
sar
add
sti
test
pusha
icebp
mov
in
add
add
add
mov
pop
pop
add
out
add
popf
test
jecxz
adc
add
test
mov
add
push
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
add
out
les
ja
add
lock
cli
bound
sti
add
add
jmp
clc
add
leave
add
nop
cli
ljmp
jle
add
add
imul
cli
lock
addr16
enter
andb
pop
add
stc
jne
xchg
lcallw
add
lahf
add
mov
lea
pop
popl
push
push
push
push
push
push
call
add
insb
pop
add
add
jbe
jbe
mov
test
in
fnstcw
outsl
add
add
nop
add
ja
pop
push
loopne
jmp
add
add
movl
add
add
add
mov
add
add
add
pop
add
mov
arpl
shll
add
add
int3
lea
pop
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
loope
xlat
jge
mov
int3
movsl
jle
add
add
xchg
xlat
mov
sahf
scas
in
add
push
roll
add
pop
pop
add
pushf
add
pop
add
arpl
mov
xchg
mov
lea
pop
push
push
push
push
call
mov
add
nop
cld
insb
jb
push
test
out
add
add
fcomps
add
add
add
jb
enter
out
movsb
loope
pop
fiaddl
xor
add
leave
jo
add
lret
fsubrp
push
dec
add
popl
push
push
rorl
call
push
push
lea
push
push
lea
push
push
push
call
jecxz
lods
add
ljmp
icebp
mov
in
stc
insb
add
push
in
mov
aam
add
insb
mov
test
lea
mov
out
xchg
ja
add
out
scas
popf
fiaddl
add
sti
push
add
sahf
add
add
ficomps
add
xchg
add
add
lea
pop
call
push
push
push
call
je
add
popa
add
add
add
pop
gs
sbbl
insb
jns
add
mov
mov
mov
mov
ljmp
pop
loopne
into
std
sti
add
sahf
int3
push
add
add
fwait
in
add
add
icebp
movsl
shll
or
jae
add
push
lea
push
push
call
lods
js
xchg
add
pop
jns
push
fs
lods
push
pop
loope
cmc
mov
mov
addr16
add
les
fdivl
subb
lcall
clc
pop
jle
pop
faddl
add
rolb
iret
lods
add
mov
repnz
mov
add
jge
sahf
mov
test
add
fadds
add
add
xlat
add
int
pop
add
pop
jmp
ret
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
cmpsl
add
lahf
add
mov
popl
add
mov
cli
add
mov
fildl
xchg
add
add
add
push
add
add
add
divl
fildl
add
pop
add
add
addb
push
pushf
add
xchg
jo
cld
add
scas
movsb
cmpsb
add
mov
lea
pop
mov
push
push
push
push
push
lea
push
lea
push
call
lods
add
add
add
mov
add
add
lahf
lahf
cmpsb
incb
add
mov
add
add
repnz
loopne
add
add
cwtl
xchg
call
data16
xchg
repnz
pop
imul
add
lret
cli
cltd
lcall
lods
fwait
in
add
rcll
cld
add
add
int3
lea
pop
mov
push
push
push
call
repnz
add
pusha
add
ficoms
add
ficoml
xchg
movl
rcrl
mov
movsb
enter
add
mov
fiaddl
int3
add
cld
lea
pop
add
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
push
add
lahf
fsubp
icebp
add
lret
arpl
add
scas
add
les
lahf
add
add
add
push
cltd
add
add
mov
pop
mov
add
movsb
add
add
push
xorl
test
add
lret
add
jae
add
add
xchg
arpl
mov
lea
pop
add
push
push
call
add
fildl
pop
xchg
fiadds
shl
add
jb
mov
mov
lea
out
add
loopne
mov
int
add
jnp
stc
add
rcll
addr16
add
add
add
stos
mov
add
mov
js
les
ret
push
insl
add
mov
xor
push
push
add
push
or
inc
add
xor
xor
inc
shr
sub
add
dec
pop
xor
not
pop
push
push
lea
push
push
push
push
push
call
mov
hlt
add
add
push
mov
mov
int
add
add
mov
cltd
loop
scas
xlat
sti
add
pop
add
add
testl
xchg
add
outsl
mov
push
pop
insb
mov
add
xchg
xchg
fs
jne
xchg
out
mov
pop
pushl
push
push
push
push
lea
push
push
call
push
mov
sti
add
add
cmp
popa
pop
lods
add
aam
mov
xorl
add
lods
into
out
add
add
fsts
mov
test
adcb
shll
mov
fildl
add
pop
add
cld
lea
pop
call
push
push
call
add
lods
mov
add
add
idivl
add
lahf
push
lods
add
enter
add
add
rolb
mov
add
js
les
lods
add
push
flds
add
addr16
in
add
stc
movl
mov
mov
jbe
scas
test
add
rol
fstp
add
enter
add
add
add
add
aam
popa
mov
pop
mov
push
push
lea
push
push
push
push
call
popf
add
add
mov
add
add
mov
mov
add
test
push
jae
add
add
std
pop
mov
add
test
xchg
mov
add
mov
jne
loop
add
add
loopne
jns
bound
mov
add
pop
movl
push
push
push
lea
push
push
push
call
arpl
mov
divb
add
fstl
push
add
add
test
clc
stc
jl
outsl
jp
jecxz
mov
add
fcomi
out
add
jge
stos
xchg
add
add
je
add
add
icebp
movl
add
add
mov
lea
pop
lea
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
xchg
pop
mov
add
xchg
cmpsl
add
add
push
xorb
push
mov
add
push
add
lahf
jmp
imul
add
rolb
jmp
call
fbld
je
imul
add
add
push
outsl
mov
repnz
add
std
fadds
test
mov
sub
jne
pushl
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
push
add
jecxz
add
mov
cmc
xchg
lods
cld
add
add
aad
add
pusha
mov
add
aam
cli
add
jb
std
mov
test
and
call
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
lds
add
pop
add
add
jno
insb
out
lea
scas
out
add
leave
cmc
add
pop
icebp
pop
jle
int3
add
xchg
add
test
mov
in
mov
add
pushf
fiadds
int
mov
add
xchg
add
cld
lea
pop
pushl
push
push
push
push
push
push
push
push
call
loop
push
pop
test
lea
stos
imul
bound
add
jns
adcb
call
pop
fwait
add
jp
cli
mov
xchg
scas
icebp
xchg
add
add
iret
push
add
mov
sti
add
pop
add
fmull
jne
push
push
push
call
cwtl
xchg
in
add
add
add
stos
out
add
add
add
add
add
enter
int3
add
loope
add
cmpsb
jnp
mov
loope
push
add
add
ficomps
add
add
mov
add
in
adc
test
cmc
jle
in
out
nop
add
push
jae
in
fmull
add
add
push
push
xor
inc
push
xor
add
sub
sub
sub
xor
shr
pop
not
add
inc
pop
push
lea
push
push
push
call
add
add
xchg
movb
insb
jnp
nop
pop
add
add
mov
add
fbstp
lcall
jno
add
xchg
leave
add
add
roll
scas
xchg
push
add
jne
out
scas
movsb
jo
ja
push
loope
xchg
push
push
add
in
incb
add
add
mov
add
filds
add
js
add
mov
lea
pop
pushl
call
push
push
lea
push
push
push
call
add
add
mov
les
out
aam
jge
rcrl
add
add
push
jbe
pop
cld
push
jb
in
add
add
xchg
rcr
add
jne
add
adcb
jno
jbe
cmpsb
add
popa
mov
lea
pop
push
push
push
add
push
push
pop
add
not
sub
shl
shr
lea
sub
pop
dec
ror
pop
push
push
push
call
les
jl
add
jo
fcompl
popa
jb
add
add
in
add
add
ror
out
mov
addr16
add
stc
data16
add
imul
hlt
add
xchg
test
add
mov
lock
mov
mov
jmp
cmpsl
jno
jl
je
xchg
jnp
fiaddl
add
pop
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
add
mov
add
pushf
not
xchg
add
add
jmp
mov
add
sti
jns
out
add
scas
add
lds
fildll
sar
jmp
movsl
add
je
add
add
out
faddl
pop
mov
icebp
xchg
into
mov
add
insb
loope
test
clc
test
pusha
add
ljmp
xchg
mov
lea
pop
call
mov
push
push
push
lea
push
lea
push
push
call
pusha
add
add
mov
xchg
roll
xchg
lds
pop
add
scas
jne
in
ljmp
jge
push
scas
add
jns
add
jl
mov
add
insb
add
add
mov
add
pop
add
add
add
add
add
test
popa
mov
into
add
mov
add
mov
add
test
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
scas
add
addb
add
fldenv
add
push
add
hlt
jnp
rcrl
add
add
add
jbe
add
mov
leave
outsl
mulb
add
add
add
popl
xor
add
add
add
outsl
add
add
add
push
ficoml
aad
std
lea
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
call
mov
insb
out
movsb
repnz
add
add
add
lret
add
add
repnz
adcb
mov
add
mov
imul
sbb
add
add
push
lea
push
push
call
aad
arpl
int3
js
lret
add
add
add
mov
add
aad
jb
xchg
add
xchg
add
add
pop
add
pop
in
pushf
push
in
add
add
iret
cwtl
mov
jmp
mov
stos
mov
sahf
roll
aam
bound
add
mov
push
push
push
push
push
push
push
push
lea
push
push
call
in
push
xchg
mov
add
add
mov
jb
xchg
add
ljmp
cmc
mov
mov
fisttpll
jmp
scas
pushf
pop
mov
call
add
mov
lcall
roll
nop
insb
add
pop
xor
push
lea
push
lea
push
push
call
add
out
out
add
lds
jmp
pop
add
ljmp
jecxz
mov
hlt
cwtl
add
add
add
popa
les
imulb
add
enter
push
outsl
xchg
add
add
add
jbe
mov
cld
add
mov
hlt
lea
pop
add
push
push
call
push
xlat
add
pushf
leave
in
xchg
mov
rcr
add
add
lock
jo
pop
mov
insb
add
add
add
arpl
iret
fwait
cmpl
or
jne
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
int
mov
push
push
into
pop
loopne
lcall
add
add
xlat
add
imul
pop
add
mov
add
mov
add
sti
add
add
ja
fadds
ljmp
rcr
add
add
add
add
add
add
add
add
popa
and
push
push
lea
push
push
push
push
push
push
push
push
push
call
popf
fcmovu
enter
add
movsb
add
addr16
add
int
add
mov
rclb
add
arpl
icebp
mov
add
jns
je
add
add
mov
jmp
ljmp
add
mov
lea
pop
mov
xor
push
lea
push
lea
push
push
lea
push
call
jne
add
xchg
out
add
push
mov
jb
imul
add
mov
pop
je
fs
fwait
pop
std
pop
mov
out
test
imul
xchg
jle
js
mov
xchg
xchg
add
lea
pop
add
push
push
push
call
adcl
gs
add
mov
rorl
enter
outsl
add
add
add
std
add
pop
xchg
add
rcll
iret
push
jbe
push
aam
loope
mov
add
cld
mov
xlat
push
int3
mov
data16
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
add
sar
pop
xorl
mov
in
add
stos
roll
bound
out
cltd
add
scas
add
cli
sahf
shrb
enter
mov
lods
cld
xorl
stc
rcl
pusha
xchg
loope
mov
mov
add
xchg
jae
add
imul
mov
rorb
pop
xor
push
push
push
push
push
push
push
lea
push
lea
push
call
add
mov
lea
add
push
iret
add
jp
add
mov
cld
mov
add
add
add
pop
mov
add
pop
adcb
into
clc
add
add
add
test
add
jo
in
test
mov
lea
pop
add
push
push
lea
push
push
push
push
lea
push
push
call
mov
pusha
std
jmp
add
xchg
add
add
add
stos
add
jmp
add
test
rolb
add
add
add
stos
ljmp
jnp
mov
div
add
popa
add
add
xlat
push
add
jl
add
aam
aam
insb
add
mov
lea
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
rolb
leave
bound
add
ljmp
fildl
pop
add
mov
gs
add
add
jecxz
add
add
add
loope
arpl
mov
add
pop
imul
call
testb
jle
add
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
call
out
add
add
gs
roll
add
mov
lret
add
scas
out
add
xchg
jns
stos
test
pop
add
jecxz
test
add
lds
add
add
add
jns
les
add
push
lea
push
push
call
popf
mov
out
enter
jnp
repnz
add
add
add
jge
in
mov
add
stc
lret
pop
clc
jle
add
add
jae
sarl
pop
test
add
jns
push
add
xchg
icebp
add
lods
add
in
add
lret
add
lds
addr16
roll
mov
cli
rolb
cld
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
push
call
gs
fiaddl
jl
add
mov
add
xchg
stc
bound
test
add
add
loop
arpl
push
add
add
jo
fnstenv
ret
stos
add
std
add
aam
fdivl
mov
test
push
mov
jbe
add
add
sahf
add
ljmp
mov
jo
pop
cmpsl
mov
add
mov
lea
pop
sub
push
push
push
lea
push
call
xchg
jno
add
xchg
add
add
add
faddl
aad
addb
mov
testb
jp
add
add
add
add
js
xlat
addr16
sbb
call
mov
lea
pop
pop
push
push
push
call
add
add
jbe
mov
add
xchg
push
add
jb
idivl
pop
shlb
les
pop
pop
rcl
mov
test
add
test
nop
add
add
push
mov
lea
pop
rep
push
lea
push
call
fnstcw
xorb
add
test
add
mov
push
mov
out
lret
mul
push
add
mov
movsl
mov
mov
add
lea
cmpsl
add
fmull
push
lea
push
call
enter
mov
push
movsl
in
stos
pop
add
lock
push
xchg
add
pop
jns
add
pop
roll
add
js
jb
not
mov
scas
flds
xchg
add
stc
add
add
add
mov
pop
push
add
jmp
push
out
jbe
add
add
add
pop
mov
add
push
lea
push
lea
push
push
lea
push
push
push
call
leave
cmc
mov
arpl
sbbl
add
loopne
jl
jnp
icebp
push
fldl
sahf
mov
pushf
pop
push
mov
add
fadds
xchg
xchg
imul
rolb
add
lret
add
jb
pushfw
add
clc
jb
add
int3
pop
add
add
fisttps
mov
js
mov
add
shrw
add
mov
lea
pop
add
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
add
pop
add
jmp
add
add
notb
add
js
test
jno
xchg
hlt
add
sub
inc
and
jb
push
push
push
lea
push
call
jmp
push
add
add
xchg
scas
insb
in
shlb
pop
xchg
scas
mov
test
add
add
pop
lea
add
add
jecxz
fisubrl
hlt
lea
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
jo
testl
ficoms
jl
add
add
jb
add
jno
mov
mov
add
repnz
add
lds
arpl
lea
pop
xor
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
pop
int
xchg
test
add
add
mov
pop
xchg
add
outsl
add
add
add
jns
pop
push
push
add
add
testb
xlat
add
rorb
outsl
add
add
gs
clc
mov
add
mov
add
add
add
in
add
hlt
testl
push
push
push
push
push
push
push
lea
push
lea
push
call
fwait
jo
cli
mov
add
loop
jecxz
xchg
pop
imul
mov
ja
add
jbe
push
fsubr
add
add
add
add
push
xchg
imul
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
mov
fwait
push
mov
add
hlt
mov
push
add
rolb
call
in
add
push
jecxz
test
add
add
popa
rclb
add
jne
add
add
push
imul
xchg
add
lcall
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
lea
push
push
push
call
js
ja
arpl
test
add
out
add
xchg
add
shlb
pop
faddl
mov
scas
ja
add
add
ljmp
stc
mov
subb
aad
add
loope
les
les
add
push
sub
dec
sub
pop
add
add
push
pop
mov
push
push
shr
push
or
not
add
ror
add
sub
dec
ror
inc
pop
not
inc
pop
push
shl
lea
xor
pop
pushl
call
push
push
push
push
push
push
lea
push
call
call
mov
add
loope
arpl
mov
out
filds
sarb
in
fisttps
add
jo
aam
xchg
cltd
icebp
pop
mov
mov
add
add
jo
add
pop
cli
mov
add
lea
push
sti
xchg
add
sti
add
in
pushf
lea
add
mov
lea
pop
push
push
push
sub
inc
push
and
add
lea
not
sub
xor
pop
xor
pop
push
ror
add
rol
pop
push
push
push
not
pop
call
mov
push
push
lea
push
push
push
push
push
push
call
add
mov
sar
lret
add
add
add
add
add
cli
jne
arpl
mov
add
mov
js
or
call
roll
xchg
add
xchg
push
add
out
adcl
lea
pop
push
push
sub
shl
rol
pop
push
push
sub
ror
pop
mov
add
push
pop
add
add
push
rol
pop
mov
push
push
lea
push
push
lea
push
push
push
push
call
mov
sub
fcmovnbe
ja
add
add
pushf
mov
add
add
pop
add
add
loope
jmp
add
mov
add
in
add
add
subl
add
loopne
leave
add
add
mov
lea
pop
xor
push
push
push
lea
push
push
push
push
call
in
movl
filds
lcall
data16
mov
add
add
lret
push
add
xchg
add
lcall
add
mov
mov
add
add
add
fmull
pop
add
push
ror
xor
xor
rol
pop
add
push
sub
pop
push
push
lea
rol
pop
mov
xor
push
lea
push
call
test
jle
add
add
xchg
outsl
jecxz
jmp
cli
out
cmc
add
add
mov
cwtl
jecxz
stos
jmp
into
pop
add
test
xchg
ja
add
jno
add
out
icebp
aad
stc
arpl
ret
push
popa
fldt
lock
add
data16
hlt
std
lds
mov
mov
lea
pop
add
push
lea
dec
pop
pop
push
lea
push
push
lea
push
call
cmpsl
add
add
hlt
pop
mov
jle
loopne
add
in
aad
fildl
mov
xchg
jle
fisubl
movsl
mov
add
add
add
test
les
jae
ret
in
mov
mov
mov
scas
popa
mov
lea
pop
mov
xor
push
sub
shr
pop
rep
push
push
push
push
call
pop
bound
je
lret
add
mov
add
sti
add
fiadds
mov
aad
out
xchg
add
add
stc
ljmp
pop
add
add
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
stos
add
add
push
insb
sar
rol
add
pop
cli
add
mov
add
loopne
push
add
xorb
std
add
xchg
add
add
xchg
scas
test
xchg
cmpsb
xchg
push
nop
add
add
lret
add
aam
stc
add
icebp
add
jp
add
jb
test
cmc
lds
mov
and
xor
push
push
push
push
push
push
push
call
pop
gs
add
lods
add
std
add
add
lea
int
add
push
rcrl
aam
add
add
push
mov
scas
jmp
mov
add
add
test
pop
add
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
jae
mov
scas
lret
pop
cwtl
cmpsb
mov
imul
add
sahf
lahf
add
xchg
mov
icebp
rcr
add
xchg
aam
popa
icebp
test
rolb
mov
mov
xchg
lret
stc
stos
lret
add
mov
add
lea
pop
or
je
push
sub
pop
mov
xor
push
add
pop
mov
push
push
push
push
lea
push
call
add
add
addb
add
pushf
xchg
add
fcomip
add
add
ja
xchg
push
add
xchg
add
add
clc
push
mov
add
add
xchg
std
add
int3
add
add
lret
fisubl
fildl
add
add
cmc
shrl
into
mov
lea
pop
xor
push
lea
push
push
push
push
call
ret
add
testb
lea
jle
push
loop
push
add
cmpl
xchg
jo
loope
add
add
mov
mov
mov
fadds
jne
add
lods
pop
lds
ja
add
sti
cmc
add
insb
add
mov
lea
pop
add
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
popl
add
mov
pop
mov
add
add
jno
xchg
add
add
add
mov
add
testl
xchg
add
fidivrs
add
add
cmpb
mov
lea
pop
add
push
add
pop
add
push
push
rol
xor
not
pop
mov
xor
push
sub
inc
pop
add
pop
push
lea
push
push
lea
push
push
push
push
call
pusha
popf
push
push
imul
push
add
sti
fcomps
addb
add
stc
add
add
pushf
jae
roll
hlt
faddl
cli
std
nop
movsl
lods
jae
jecxz
add
mov
mov
lods
add
pop
js
add
mov
cmpsl
add
add
cli
add
stos
add
add
xchg
add
popf
xlat
push
pop
add
push
mov
lea
pop
rep
mov
push
push
push
call
add
out
add
mov
add
add
pop
mov
jge
add
vhaddpd
mov
add
loope
mov
cld
lea
pop
xor
push
lea
push
push
call
add
add
add
lods
in
add
add
sbbb
test
add
leave
xchg
xchg
addb
scas
pushf
add
add
add
add
pop
add
push
shr
pop
or
je
mov
push
lea
push
call
jae
add
outsl
pop
mov
xchg
int3
mov
pop
add
ret
scas
shlb
add
enter
int3
add
mov
add
roll
mov
loopne
call
add
imul
leave
add
push
push
add
mov
cmpsb
add
mov
jae
hlt
addb
aam
bound
pop
add
push
push
lea
push
push
lea
push
push
call
mov
mov
xchg
cltd
negl
sahf
jl
mov
push
call
mov
sti
in
xorb
add
mov
cli
movsb
cmpsb
fiadds
jno
add
in
add
mov
sarl
add
mov
lea
pop
add
push
push
lea
push
push
push
call
movsl
add
mov
add
add
add
mov
add
mov
add
add
loopne
add
add
mov
mov
jecxz
out
add
add
fisubrs
pusha
adc
rep
pop
push
push
sub
inc
sub
not
push
and
add
sub
sub
pop
rol
dec
lea
pop
push
push
lea
push
push
push
lea
push
push
call
mov
js
lcall
push
scas
add
add
call
add
add
pop
push
cmpsb
add
push
jp
popf
add
add
add
filds
data16
add
xchg
add
add
mov
lea
pop
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
call
je
fwait
fs
add
fstpt
push
popa
pop
jo
rcrb
push
mov
add
scas
aad
add
xchg
lcall
add
in
roll
cwtl
add
mov
add
add
add
stos
add
data16
add
test
add
add
add
mov
arpl
pop
mov
mov
push
push
push
lea
push
push
push
lea
push
push
push
push
call
std
add
mov
stos
xchg
pop
pop
add
pop
add
pusha
fwait
test
add
jl
pop
iret
mov
movsb
cmc
jmp
fsubrs
push
ret
pop
fucomip
add
loop
jmp
add
shr
outsl
add
mov
sub
loopne
lea
push
lea
push
call
testb
add
add
add
test
xchg
jne
cltd
add
mov
add
fiaddl
add
pusha
jp
lock
add
cltd
add
add
add
in
lods
add
cli
add
sarl
add
cmc
int3
push
mov
int
mov
add
pop
push
mov
push
sub
xor
pop
add
push
push
call
mov
into
add
add
add
add
add
add
add
into
add
jns
iret
mov
test
add
mov
add
add
addb
pop
add
lea
pop
push
push
push
push
push
push
push
push
call
add
lret
add
add
add
stos
int
addb
test
jno
popf
jb
add
int
jo
xlat
ljmp
add
push
add
add
scas
lret
ret
mov
bound
jns
js
arpl
add
scas
add
add
xchg
mov
add
add
push
mov
lea
pop
push
push
push
push
push
lea
push
call
add
pop
add
pop
testb
add
mov
bound
add
out
mov
jno
mov
in
jl
addl
add
jp
js
add
lea
pop
push
push
add
pop
push
push
pop
mov
push
push
call
sarb
aam
stc
mov
test
ja
pop
add
add
mov
movsl
ljmp
loopne
sti
shlb
gs
xchg
aad
add
add
push
orl
xchg
push
repnz
addb
add
push
add
add
add
aam
add
add
mov
push
repnz
mov
xchg
add
pop
pop
push
sub
pop
pop
pop
push
lea
sub
xor
pop
pop
push
not
not
add
pop
leave
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
fldl
add
lahf
stos
jo
stos
mov
add
mov
add
add
add
cmpsl
add
movb
clc
add
add
add
imul
add
mov
cli
insb
fdivrl
add
stos
aam
pop
add
sti
add
je
xorb
push
add
add
bound
pop
ret
push
add
dec
pop
push
push
not
pop
mov
push
shr
pop
add
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
stc
out
add
mov
push
pusha
add
push
lret
movsb
bound
add
add
add
imul
lcall
add
addr16
add
incb
add
mov
add
xchg
popa
add
mov
lret
add
in
add
in
gs
add
xchg
jl
add
push
xchg
add
pusha
movsl
mov
lea
pop
push
push
add
add
pop
push
push
push
lea
push
push
call
mov
call
addl
push
stc
mov
stc
xchg
push
xchg
add
in
lcall
roll
pop
test
test
xchg
mov
mov
add
lea
pop
push
movl
push
push
call
add
pop
enter
add
xorb
add
add
add
test
jp
add
out
pop
xchg
add
add
add
add
hlt
movl
addr16
fiadds
scas
mov
mov
pusha
or
inc
clc
call
shrb
adc
push
push
lea
push
lea
push
push
call
add
mov
add
data16
add
fcmovu
pop
add
add
xchg
addr16
add
mov
lods
add
add
call
add
add
push
clc
add
stos
test
add
add
jne
nop
testb
loopne
jl
cmc
loopne
jmp
xchg
mov
lods
jl
mov
lcall
pop
add
mov
add
pop
ja
add
mov
lea
pop
test
je
mov
push
pop
pop
push
push
call
add
in
in
ljmp
mov
add
add
divl
add
jns
xchg
xchg
jns
add
add
aad
int
add
ficoms
add
std
xchg
test
add
cmpsb
add
std
mov
jmp
add
rcr
int3
lea
pop
pop
push
xor
pop
pop
push
lea
push
push
push
push
push
call
fildl
add
fs
add
lret
add
jne
fmuls
cli
push
add
in
add
rolb
add
push
mov
mov
add
add
ja
add
add
add
addl
jecxz
mov
mov
add
pop
lods
mov
add
jne
mov
pusha
sbb
push
push
call
out
mov
outsl
jbe
add
push
mov
xor
add
aam
pop
add
fistl
movl
in
add
add
add
pop
add
add
add
xchg
fadds
out
arpl
add
pushf
in
xchg
in
add
cld
in
ret
out
jmp
lret
addl
add
arpl
or
ret
push
pop
push
mov
push
ror
shl
lea
pop
add
push
add
sub
pop
push
push
push
sub
add
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
jns
mov
fs
filds
stos
fisubs
mov
add
in
xchg
shll
cld
add
addl
mov
sti
add
mov
aam
add
add
jl
loope
add
bound
pop
push
testl
push
not
ror
pop
addl
push
push
push
push
lea
push
push
call
mov
jb
jno
scas
add
pop
in
xchg
loopne
lcall
add
add
mov
jbe
add
jns
addr16
pop
add
stc
fadd
fmull
add
jbe
sbb
cwtl
mov
stos
popa
mov
lea
pop
call
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
nop
mov
mov
add
leave
add
add
jle
pop
mov
loopne
add
lock
add
add
leave
add
fwait
push
xchg
filds
xchg
popf
mov
add
jnp
add
jo
jbe
add
add
mov
mov
ja
add
add
lret
add
add
xchg
movsl
add
add
mov
lea
pop
mov
pushl
push
lea
push
push
lea
push
push
push
push
call
add
xchg
add
add
cwtl
add
add
add
ja
add
stos
fadds
add
mov
mov
fcompl
cwtl
enter
add
lret
add
jmp
add
add
add
add
add
in
add
pusha
sbb
push
push
push
ror
pop
call
cmpl
jne
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
jae
mov
lds
fcomps
xchg
add
add
add
pusha
add
add
mov
test
push
push
add
icebp
pop
add
lret
hlt
jbe
pushf
fiaddl
add
xchg
addr16
add
mov
lea
pop
pop
push
push
push
push
call
add
lods
in
mov
jmp
cmpsl
scas
add
add
lea
ljmp
addr16
add
add
add
add
add
ja
les
jne
movb
pop
add
pop
xchg
insb
in
roll
in
shr
incb
add
push
shlb
insb
jns
add
rcr
fiadds
flds
mov
lea
pop
pop
push
add
inc
ror
pop
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
call
push
add
mov
add
stc
lahf
jmp
movsl
add
add
add
cli
push
lret
add
add
push
add
pop
add
jae
jp
add
jmp
add
les
test
add
mov
xchg
addr16
mov
lea
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
aam
std
ror
outsl
add
rolb
add
add
outsl
xchg
ret
scas
test
out
out
add
add
lret
jle
mov
iret
xor
rolb
add
push
arpl
mov
into
add
push
hlt
add
mov
lea
pop
leave
push
push
push
lea
push
push
push
push
call
xlat
ljmp
test
pushf
add
insb
mov
mov
shll
stos
stos
cmpb
add
je
pop
lea
add
sahf
add
pop
add
mov
jmp
in
add
mov
lea
pop
ret
push
push
call
add
jge
mov
add
popa
roll
jp
add
stc
add
xchg
mov
add
lods
ljmp
mov
in
xchg
add
push
add
add
add
gs
js
cld
lea
pop
push
push
not
dec
sub
pop
mov
push
not
pop
add
push
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
in
add
mov
add
add
add
add
mov
add
mov
add
mov
js
lcall
push
push
xchg
ljmp
jge
mov
fimull
pop
push
push
push
push
push
push
push
push
push
call
test
mov
in
mov
add
add
lahf
mov
add
add
add
pop
mov
aad
imul
lods
popf
xchg
add
mov
add
loop
scas
add
add
lahf
rolb
mov
add
int
mov
add
add
pop
push
push
push
lea
push
push
call
push
into
movsl
pop
add
mov
jmp
add
jp
push
mov
mov
add
add
addb
mov
add
add
add
pop
movl
push
push
call
add
add
add
fidivs
mov
add
outsl
data16
pop
add
scas
fisubl
add
jb
add
add
int3
test
in
add
add
add
add
shl
mov
outsl
push
add
lret
leavew
addl
mov
loopne
mov
lea
pop
push
call
push
pop
push
call
push
push
push
push
push
call
arpl
mov
enter
std
lds
add
add
jecxz
test
aad
add
add
call
test
mov
popf
mov
popf
xorb
jae
xchg
test
pop
subl
cmpl
jne
push
lea
push
lea
push
lea
push
call
push
add
pop
test
push
cwtl
add
aam
add
add
jnp
idivl
mov
add
out
add
enter
add
add
je
loope
sahf
add
add
mov
shlb
pop
pop
push
add
pop
pop
push
xor
not
pop
pop
push
sub
pop
pop
push
add
xor
rol
pop
leave
push
lea
push
call
roll
flds
shl
ja
push
add
clc
add
add
add
aad
add
pusha
test
add
fiaddl
add
jmp
mov
add
add
add
fs
loopne
mov
idivl
leave
in
mov
mov
add
fidivs
add
push
jmp
les
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
cmpsb
add
mov
push
out
add
add
add
mov
fcomps
mov
stos
data16
jl
insb
add
add
mov
pop
jecxz
cmp
add
pushf
add
addb
add
add
lods
add
add
lods
mov
lea
pop
push
push
add
pop
mov
push
add
ror
pop
add
push
push
ror
pop
push
push
push
push
push
push
push
push
lea
push
call
flds
aam
add
loopne
imul
mov
test
xlat
out
mov
add
out
add
leave
add
bound
fwait
add
test
add
mov
fwait
fs
pop
push
mov
cmpl
clc
test
add
orl
mov
lea
pop
push
push
push
lea
push
push
push
push
push
push
call
mov
jo
stos
test
stos
mov
xlat
roll
add
push
add
add
loop
add
scas
add
scas
adcb
or
add
aam
movsl
add
add
add
mov
enter
add
mov
lea
pop
mov
push
add
pop
lea
push
push
call
add
push
scas
push
pop
js
add
gs
add
add
xchg
add
add
add
jne
add
add
push
xchg
in
popl
aam
add
fildl
add
push
push
nop
movsb
mov
add
mov
popa
add
lock
popl
icebp
add
add
mov
lea
pop
sub
push
push
push
lea
push
lea
push
push
push
call
xchg
add
add
negb
add
jae
add
ljmp
add
mov
add
pushf
add
fchs
push
add
lahf
movsb
push
add
mov
add
insb
nop
jno
pop
loope
add
cmpsb
fldt
lock
add
in
add
pop
rcrb
add
push
addr16
mov
mov
lea
pop
mov
push
lea
lea
shr
pop
shr
add
push
lea
pop
mov
push
ror
dec
pop
mov
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
push
lods
movsl
jnp
stos
add
mov
mov
rolb
mov
mov
mov
loopne
cltd
jecxz
xchg
lock
out
add
cmpsb
add
add
add
push
jb
mov
xchg
stos
fadds
test
pop
mov
lea
pop
add
push
lea
push
call
jmp
add
mov
ja
lock
jnp
test
add
addb
enter
imul
add
fildl
add
mov
push
fistl
fdivrp
clc
bound
cmc
add
pop
cld
add
xchg
pop
add
push
lea
pop
mov
push
add
dec
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
lea
add
flds
je
pushf
in
pusha
int3
fisubs
mov
les
add
add
lret
add
add
add
roll
add
mov
mov
add
bound
popf
rcrl
lods
push
add
stc
xchg
shl
aam
mov
jecxz
hlt
add
add
in
aam
bound
cmp
jne
push
push
push
push
lea
push
push
lea
push
push
call
add
data16
jb
out
add
jb
out
out
icebp
ja
add
add
in
int3
pushf
mov
jnp
pusha
add
mov
add
add
add
mov
jl
add
mov
in
pop
andl
add
add
sbbl
into
add
js
xlat
jno
cwtl
push
pop
add
pop
cmp
jne
mov
push
push
push
push
push
push
push
push
call
popa
scas
add
add
add
add
mulb
jnp
rcrl
xchg
mov
cmpsb
fstps
add
std
push
stos
clc
add
jle
add
jge
add
mov
jl
add
shr
add
jp
rolb
stos
lods
popa
mov
lea
pop
movl
push
push
push
lea
push
push
push
push
push
lea
push
push
call
pushf
add
add
int
pushf
add
rcl
add
and
xchg
cli
imul
aam
add
mov
lret
add
xchg
jle
push
shll
mov
nop
lret
ja
mov
idiv
cld
add
add
add
test
in
add
std
mov
pop
jmp
mov
push
push
push
push
push
push
lea
push
push
call
add
in
add
add
insb
add
lret
xlat
mov
jo
pop
add
cwtl
add
add
mov
clc
push
add
add
mov
jno
scas
jmp
mov
aam
add
push
add
test
hlt
xchg
add
int3
lea
pop
mov
sub
jne
push
not
add
ror
lea
pop
mov
movl
push
lea
push
push
call
mov
lret
jl
fiaddl
loop
add
add
in
jmp
movsl
in
add
scas
je
in
add
jns
movw
xchg
add
fcomi
outsl
movsb
add
fwait
pop
push
xchg
mov
add
clc
cmpsb
add
pop
mov
jmp
add
mov
lea
pop
jmp
mov
push
rol
ror
not
pop
mov
cmp
jne
push
push
push
push
push
push
lea
push
call
add
push
xchg
in
push
add
add
negb
icebp
mov
lahf
mov
roll
lock
test
int3
add
mov
mov
jge
add
jl
xchg
bnd
pop
mov
sar
add
add
add
ljmp
jl
add
cld
lea
pop
mov
push
push
lea
push
push
push
lea
push
call
je
push
adcb
jns
int3
mov
mov
js
add
addb
ja
add
jnp
bound
pop
mov
xchg
jnp
lock
stc
fcmovbe
add
cld
add
mov
push
mov
sbb
add
add
add
cs
add
mov
sub
dec
adcl
cmp
mov
push
lea
push
push
push
call
add
jmp
add
mov
add
lcall
add
pop
add
mov
mov
fwait
add
add
add
add
xchg
bound
xchg
add
jmp
add
add
testl
add
mov
xchg
add
repnz
jmp
add
ret
xorb
scas
in
add
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
call
add
add
add
int
mov
shll
push
test
addb
popa
add
add
movsl
add
add
fiadds
popa
add
jl
nop
pusha
xchg
pop
add
mov
movsb
leave
jno
int3
mov
add
jo
add
fcoms
jbe
add
jmp
popa
sbb
cmpw
jne
mov
push
sub
lea
pop
movl
push
push
lea
push
push
push
push
lea
push
call
push
add
mov
aam
mov
je
add
test
out
cwtl
add
push
pop
add
test
add
lahf
icebp
add
push
stc
imul
insb
mov
add
andl
rcrl
sbbl
xchg
mov
gs
and
add
add
bound
jmp
push
push
call
pusha
add
add
add
pop
sub
imul
xchg
pop
push
mov
out
add
xchg
pop
add
idivl
add
add
add
add
add
push
add
add
sarl
add
mov
add
add
add
add
test
or
movb
std
add
add
mov
lea
pop
pushl
push
sub
add
dec
pop
pop
mov
push
push
push
push
lea
push
call
lods
addr16
in
push
mov
add
add
sahf
add
xchg
add
imul
add
sti
sti
add
push
add
add
add
add
add
jle
js
in
add
in
add
adc
mov
push
not
not
add
pop
mov
push
push
sub
dec
xor
add
push
sub
add
xor
sub
pop
shl
pop
push
push
call
add
add
movsl
lea
mov
add
mov
jnp
add
cli
popa
mov
mov
jbe
cmc
insb
jns
out
jmp
rolb
movsb
fistpl
xchg
add
mov
sbb
stc
mov
nop
add
add
lea
pop
push
call
push
not
pop
cmpl
je
push
push
shl
push
and
add
ror
rol
sub
pop
sub
pop
push
lea
push
lea
push
call
mov
popl
pop
jecxz
add
mov
add
stc
mov
in
pop
in
xchg
xchg
jp
jmp
loope
add
xchg
cmc
add
movsl
add
xchg
lods
add
add
lcall
add
jne
in
imul
add
add
pop
push
add
mov
lea
pop
push
call
push
push
push
push
push
lea
push
push
push
lea
push
call
arpl
add
jnp
add
xchg
int
rol
popf
test
gs
add
xchg
hlt
jne
mov
roll
add
ja
in
add
lods
int3
mov
jo
xchg
stos
add
mov
mov
add
imul
out
add
jno
popa
mov
ljmp
pop
cmpl
je
push
push
dec
push
and
add
add
ror
sub
ror
dec
sub
pop
not
rol
xor
sub
pop
push
push
push
lea
push
push
call
add
jmp
add
add
xchg
iret
add
add
stos
add
stos
std
add
add
push
add
rol
add
mov
add
jb
push
add
jge
add
mov
mov
add
gs
add
push
add
mov
lea
pop
push
call
push
inc
inc
pop
cmpl
je
push
push
not
sub
shl
push
push
pop
add
add
ror
rol
shr
sub
inc
sub
pop
dec
xor
sub
pop
push
rol
pop
push
push
lea
xor
lea
lea
pop
call
cmpl
je
push
push
add
add
push
push
pop
add
add
not
add
sub
not
lea
shr
pop
dec
sub
rol
lea
pop
push
sub
not
add
pop
push
call
push
push
push
push
push
push
lea
push
call
add
push
xchg
xchg
add
jns
add
add
add
cmpsl
addb
scas
add
faddp
add
cwtl
mov
pop
add
jl
mov
add
imul
xchg
mov
jne
repnz
mov
cld
add
add
xchg
mov
lea
pop
cmpl
je
push
push
shr
push
or
inc
add
dec
sub
sub
lea
sub
pop
add
sub
pop
push
add
add
sub
shr
pop
push
call
push
inc
inc
lea
pop
cmpl
je
push
push
rol
push
sub
add
lea
sub
lea
inc
pop
add
pop
push
lea
sub
pop
push
push
xor
pop
call
push
lea
inc
add
pop
cmpl
je
push
push
add
ror
push
and
add
sub
add
xor
xor
lea
pop
not
lea
rol
shl
pop
push
lea
ror
add
not
pop
push
push
not
add
pop
call
push
sub
pop
cmpl
je
push
push
dec
rol
rol
add
push
sub
add
inc
not
sub
sub
ror
sub
add
pop
pop
push
xor
lea
pop
push
push
sub
pop
call
cmpl
je
push
push
shr
rol
sub
sub
push
or
inc
add
dec
ror
lea
sub
rol
xor
sub
pop
add
pop
push
add
not
shl
pop
push
call
push
sub
dec
pop
cmpl
je
push
push
inc
ror
inc
add
push
or
inc
add
sub
sub
shl
ror
add
pop
lea
sub
pop
push
shl
pop
push
push
inc
pop
call
push
lea
push
push
push
lea
push
push
call
jge
jbe
outsl
push
pop
scas
ja
fldl
push
lcall
scas
lods
in
data16
push
add
mov
jns
mov
out
xchg
imul
xchg
add
mov
mov
add
pop
add
rol
add
mov
add
xchg
ja
mov
lea
pop
cmpl
je
push
push
sub
shl
push
push
pop
add
lea
dec
add
sub
sub
pop
rol
shr
add
pop
push
push
push
push
call
pushf
cli
jmp
std
icebp
out
int
xchg
ja
lock
add
lds
popa
add
add
add
push
jecxz
add
add
add
addr16
pop
cmpsl
arpl
leave
add
add
jl
adcb
add
add
mov
lea
pop
push
push
not
lea
pop
call
push
ror
rol
pop
cmpl
je
push
push
shl
sub
shl
push
sub
add
shr
xor
sub
ror
shr
pop
sub
not
shr
pop
push
lea
push
call
add
fiaddl
popl
xchg
movsl
movb
lods
jne
add
add
add
cld
jo
cli
jne
mov
faddl
notl
add
pop
stc
mov
add
add
xchg
mov
xchg
add
add
les
gs
mov
in
mov
add
add
into
mov
lea
pop
push
push
push
push
push
push
push
push
push
call
add
mov
loopne
add
fwait
push
ror
add
fdivr
gs
out
add
bound
mov
leave
lahf
sahf
add
gs
lahf
fs
add
mov
mov
lea
pop
call
push
push
push
lea
push
call
push
mov
pop
pop
fldcw
nop
lret
mov
mov
iret
add
add
iret
test
loope
leave
lock
jp
imul
xchg
sbbl
push
lret
shr
rolb
loope
add
mov
imul
add
add
jnp
mov
add
add
popf
add
add
mov
mov
adc
js
xor
pop
ret
lahf
add
add
inc
push
call
add
lods
fs
incb
call
out
into
jl
jmp
mov
add
push
add
mov
std
mov
add
lret
jp
sti
add
sub
mov
add
leave
add
int
xchg
push
add
add
add
add
mov
add
movsb
in
fildl
bound
std
pop
mov
mov
add
mov
mov
lea
pop
mov
push
not
inc
pop
movl
push
shr
pop
jmp
xor
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
int3
add
cmpsl
test
in
add
movb
add
shr
mov
mov
pop
ja
mov
add
insb
pop
mov
add
add
add
addl
lea
pop
pop
push
dec
sub
xor
pop
pop
push
push
push
push
push
call
add
mov
fistpl
scas
add
pushf
add
lcall
add
add
nop
add
imul
push
cmc
test
add
add
xchg
pop
add
add
iret
fildl
add
movl
add
add
add
add
jl
add
xchg
test
mov
push
add
mov
mov
lea
pop
pop
pop
push
xor
not
pop
leave
push
sub
pop
ret
push
push
push
push
push
push
push
push
push
call
cmc
ljmp
add
add
add
add
movb
add
add
push
add
pusha
add
add
jnp
add
mov
lea
aad
add
gs
sti
add
test
mov
fiadds
add
sar
jnp
jns
mov
lea
pop
push
push
lea
push
call
mov
pop
xchg
stc
add
push
jns
xchg
push
xchg
add
add
push
add
addr16
xchg
add
add
add
ret
add
xlat
roll
mov
add
popf
add
add
mov
mov
jl
mov
les
in
push
inc
pop
add
push
add
rol
pop
cmpl
jne
push
push
add
push
or
inc
add
sub
sub
sub
shr
pop
add
inc
pop
push
lea
add
pop
pushl
push
push
push
call
jbe
xchg
fwait
add
mov
add
cld
push
pop
add
lcall
add
hlt
pop
add
enter
add
jae
mov
pop
call
push
push
not
sub
pop
call
push
shl
pop
jmp
cmpl
je
push
add
lea
pop
cmpl
jne
push
push
lea
push
lea
push
push
push
push
lea
push
call
out
mov
add
add
addl
push
mov
leave
loop
add
scas
push
push
hlt
add
rolw
xor
insb
xchg
add
mov
add
test
movb
mov
add
test
pusha
and
push
not
dec
pop
add
push
push
push
lea
push
push
push
push
push
call
addl
add
add
add
movsb
add
fiaddl
add
aam
orb
int3
add
les
lret
out
lret
repnz
icebp
roll
add
shrl
xlat
add
iret
gs
add
cli
add
in
add
mov
sahf
add
pop
pop
push
add
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
ljmp
add
push
add
add
fadd
add
xchg
xchg
pop
lret
negb
into
lds
repnz
fiaddl
add
lea
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
lock
fs
mov
fsts
add
add
sahf
add
incb
mov
mov
add
add
add
pop
loop
lds
in
ljmp
mov
add
lret
add
pop
xchg
bound
ret
add
add
add
pop
leave
push
push
push
lea
push
push
lea
push
push
call
jmp
testb
add
add
add
xchg
add
ja
js
stos
jmp
fstpt
add
cmc
add
add
leave
add
loope
add
lods
add
loope
add
std
add
sbb
add
ret
push
lea
push
call
jge
test
out
cltd
add
add
add
rorb
mov
add
add
stos
test
loope
movb
lret
orb
add
xchg
jo
movsl
cmpsb
lods
xchg
mov
imul
mov
lea
pop
jmp
push
dec
ror
pop
cmpl
jne
push
push
ror
push
or
not
add
xor
xor
sub
inc
sub
pop
sub
add
pop
push
push
push
lea
push
call
loope
sti
add
add
fwait
test
add
int
jns
add
mov
add
mov
xchg
aam
add
test
mov
pop
addr16
add
add
test
je
in
push
lea
mov
data16
jne
call
push
lea
push
lea
push
call
pop
add
lcall
in
negl
loopne
add
aam
add
pop
data16
pop
add
jecxz
add
pusha
pop
add
add
add
lds
outsl
add
jb
add
jo
int3
pop
hlt
jnp
add
test
jmp
cli
push
cmpsl
rol
jnp
je
add
pop
push
call
push
sub
pop
jmp
push
dec
sub
shr
pop
cmpl
jne
push
inc
shl
shr
pop
mov
mov
push
not
add
lea
pop
push
push
push
lea
push
or
not
add
dec
shl
ror
dec
sub
rol
lea
lea
pop
inc
inc
not
sub
pop
push
push
lea
push
call
pop
mov
jle
xchg
add
mov
bound
movl
add
add
add
bound
test
add
add
push
add
subb
out
add
add
add
repnz
mov
mov
add
mov
add
shrb
data16
pushl
push
add
pop
call
push
push
add
dec
rol
pop
call
push
push
ror
push
xor
add
sub
dec
not
sub
inc
pop
inc
ror
pop
push
push
push
lea
push
lea
push
push
call
add
add
lret
adc
push
add
add
insb
iret
add
insb
xlat
filds
add
add
fists
push
add
jne
arpl
mov
add
pop
add
add
jae
add
add
test
jne
ret
out
mov
pop
fistl
mov
test
mov
mov
add
pop
pushl
call
push
shl
pop
call
push
push
lea
add
push
and
add
inc
dec
sub
add
pop
lea
shr
add
pop
push
shl
xor
add
inc
pop
pushl
push
push
push
call
fcompl
int3
add
cltd
jno
roll
fcomps
mov
add
add
add
lea
imul
leave
add
movb
add
jbe
test
mov
mov
add
push
jp
mov
add
icebp
shrl
mov
lea
pop
call
push
push
push
push
push
call
add
mov
jne
add
fildl
mov
jmp
xchg
addr16
rorb
add
add
gs
add
jp
mov
roll
fwait
xchg
lcall
lahf
lock
add
pop
call
push
push
lea
push
lea
push
call
arpl
push
repnz
add
add
sti
add
add
push
out
add
add
mov
mov
xorb
jp
roll
shll
mov
in
outsl
add
fwait
jmp
leave
add
mov
push
add
hlt
add
fcom
mov
add
bound
mov
add
jp
lea
mov
lea
pop
lea
push
push
lea
push
or
not
add
shr
shl
sub
dec
add
add
pop
sub
sub
add
pop
push
ror
xor
rol
pop
pushl
call
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
in
sar
imul
push
mov
out
pop
jl
shlb
push
nop
fs
fiadds
lds
add
loopne
stc
mov
add
cwtl
roll
push
test
out
add
pushf
mov
add
orb
push
call
push
push
rol
lea
rol
not
push
sub
add
sub
sub
rol
sub
pop
shl
shl
pop
push
shl
pop
pushl
push
push
call
add
mov
mov
in
xchg
xchg
add
sti
mov
add
jnp
mov
add
pusha
pop
add
insb
add
add
add
pop
call
push
push
push
lea
push
push
push
push
push
push
call
negl
add
add
add
add
out
movsl
repnz
add
xchg
insb
je
roll
mov
add
push
add
add
into
imul
in
add
loope
pop
into
rcl
stos
int3
int3
add
add
pop
add
add
repnz
ficoml
test
rorb
popf
outsl
add
mov
xchg
add
xchg
add
pop
call
mov
push
push
sub
dec
inc
push
sub
add
sub
xor
sub
add
ror
pop
shr
not
pop
push
add
pop
pushl
call
push
add
pop
push
push
push
push
push
push
push
push
push
push
call
jp
push
mov
xchg
test
add
test
push
add
add
leave
add
popl
jl
add
add
add
fcmovnb
add
add
add
movl
add
jle
add
jp
rcl
add
fisttpll
ret
ja
into
push
mov
lea
pop
call
push
push
sub
push
and
add
lea
add
sub
dec
pop
dec
lea
pop
push
rol
not
lea
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
call
add
pop
std
fildl
icebp
add
pop
lcall
add
add
add
add
push
popf
add
sarb
add
ja
add
push
ljmp
jmp
lcall
cld
lea
pop
call
push
push
call
lods
add
popf
add
add
add
fucomip
add
add
jmp
neg
jbe
call
add
orl
add
add
fdivr
add
add
cmc
addl
lcall
pop
push
push
push
push
lea
push
push
call
pop
std
enter
add
push
int3
incb
add
add
loop
add
jae
add
mov
add
add
add
mov
add
jge
add
imul
mov
xchg
arpl
xchg
add
add
xchg
in
push
mov
lea
pop
pushl
call
push
push
ror
sub
not
dec
push
or
inc
add
inc
sub
inc
inc
add
dec
pop
pop
push
shl
sub
lea
pop
pushl
push
push
push
push
push
lea
push
push
push
push
call
sahf
movb
ljmp
xchg
add
roll
mov
add
pushf
push
add
add
add
mov
jp
jne
popf
xchg
mov
stc
repnz
lds
add
add
mov
add
iret
add
pop
call
push
push
xor
lea
push
and
add
xor
add
sub
inc
not
pop
not
shl
pop
push
push
rol
shr
push
sub
add
ror
shr
sub
pop
inc
not
sub
lea
pop
push
push
push
lea
push
push
push
push
push
call
push
loope
ret
pop
xchg
mov
add
add
add
icebp
add
jne
add
add
in
xchg
cltd
add
add
add
add
add
add
cmc
mov
xchg
add
push
xchg
movsb
mov
add
lcall
mov
jmp
add
into
repnz
lea
pop
call
push
push
call
lods
add
mov
add
out
fs
add
mov
mov
mov
aad
fld
jp
mov
xchg
add
pop
add
pusha
add
add
add
add
loopne
add
test
popf
into
xchg
add
push
add
movsb
add
add
add
int
add
add
fs
pop
pop
dec
jne
push
push
push
call
fnsave
mov
loopne
jnp
shrb
mov
pop
ja
mov
pop
add
test
pop
mov
int
add
xchg
popa
mov
add
stc
mov
lea
pop
call
push
push
lea
push
push
push
push
call
out
add
xchg
add
add
add
add
add
add
rolb
mov
mov
add
test
add
lahf
roll
enter
enter
enter
push
popa
add
mov
clc
push
hlt
roll
add
addb
les
orb
add
scas
push
add
push
push
not
sub
sub
push
or
not
add
sub
sub
sub
rol
pop
lea
rol
pop
push
push
push
push
push
lea
push
push
call
sti
fcmovb
xchg
add
in
stc
add
fs
cmpsb
add
add
mov
jbe
in
fsubl
pusha
add
xchg
xchg
insb
add
test
mov
test
pop
pushl
push
lea
pop
call
push
shr
pop
push
push
sub
not
pop
call
push
dec
ror
sub
pop
mov
lea
push
push
add
lea
add
push
or
inc
add
rol
inc
lea
sub
not
shl
shr
pop
not
add
pop
push
rol
pop
pushl
call
push
lea
push
push
push
push
push
lea
push
call
jmp
jp
jb
add
pop
cmc
add
les
add
mov
mov
mov
imul
xchg
pop
mov
mov
in
mov
cli
mov
fnstsw
mov
enter
add
add
int3
add
xchg
mov
ret
push
pusha
mov
lea
pop
push
push
rol
add
lea
pop
call
push
push
dec
shr
not
push
or
not
add
add
shl
xor
sub
sub
add
sub
rol
pop
not
pop
push
push
push
call
jmp
add
lds
stos
jo
iret
rclb
add
add
push
pusha
test
add
add
add
xchg
cwtl
add
xchg
mov
lea
pop
pushl
call
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
call
mov
fnstsw
add
add
add
popa
add
in
pop
fstpt
add
mov
in
lock
add
fst
add
add
add
lahf
add
lods
jp
hlt
lea
pop
call
push
xor
xor
shl
pop
mov
push
shr
sub
pop
lea
push
push
sub
push
push
pop
add
rol
sub
ror
pop
rol
inc
add
pop
push
not
sub
add
shl
pop
pushl
push
lea
pop
call
push
inc
shl
sub
pop
lea
push
push
push
push
push
push
push
lea
push
push
call
lret
jmp
add
add
shlb
add
add
cld
rclb
je
push
add
shl
mov
push
pusha
cli
add
add
mov
imul
add
pop
push
push
push
push
lea
push
push
push
push
call
mov
add
ret
lods
xchg
add
add
xchg
add
ret
xchg
mov
int3
lods
add
add
lock
add
push
xchg
mov
add
popf
add
lea
pop
push
push
rol
lea
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
add
jnp
fmulp
mov
add
add
xchg
add
bound
jl
add
mov
fldl
add
jno
mov
sti
add
mov
lea
pop
pushl
push
push
shr
xor
xor
push
and
add
xor
shr
add
sub
inc
lea
pop
sub
sub
lea
inc
pop
push
shl
inc
dec
pop
push
call
push
push
not
add
lea
push
xor
add
shr
sub
lea
pop
ror
xor
inc
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
pushf
lds
jb
mov
jp
jmp
pushf
add
mov
add
arpl
test
pop
lock
add
add
mov
add
inc
add
notl
movsl
sar
add
add
jp
int3
add
int3
lea
pop
pushl
call
push
push
push
lea
push
push
call
pop
xchg
insb
fstps
in
in
jge
add
jl
flds
je
add
jae
add
aam
imul
xchg
lcall
mov
add
testl
leave
insb
add
add
mov
lock
jl
add
add
lahf
jno
xchg
mov
data16
clc
mov
mov
ret
int3
lea
pop
push
push
inc
dec
pop
call
push
push
rol
inc
push
or
not
add
add
sub
shl
dec
not
pop
shl
add
pop
push
add
not
dec
add
pop
pushl
call
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
call
push
add
flds
add
add
hlt
add
push
aad
mov
lods
add
add
mov
iret
lahf
add
pop
js
test
pop
jns
add
add
add
add
push
popf
xchg
mov
add
push
add
jecxz
cmc
mov
lea
pop
call
jmp
push
add
pop
pushl
push
ror
ror
sub
add
pop
mov
jmp
push
push
add
push
or
not
add
sub
lea
dec
sub
add
pop
lea
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
popf
pop
xchg
lock
add
iret
ljmp
cli
mov
add
int3
popf
add
add
call
xchg
jge
add
add
add
xchg
add
push
add
add
mov
add
add
lea
pop
pushl
call
push
lea
push
lea
push
lea
push
push
push
push
call
std
jl
fadds
add
jp
mov
mov
add
add
add
roll
insb
add
in
mov
add
loop
add
pusha
arpl
add
add
lds
jns
xchg
jo
test
jmp
fsubp
in
add
mov
rolb
hlt
lea
pop
push
push
push
lea
push
push
push
push
push
call
rcll
add
lcall
add
stos
insb
cli
add
mov
add
add
add
test
add
jp
add
add
add
bound
lock
mov
lea
pop
call
push
push
shr
sub
push
or
not
add
shr
sub
sub
shl
sub
pop
add
sub
not
pop
push
sub
xor
pop
pushl
push
push
push
call
loopne
lea
add
stc
mov
add
test
add
into
fs
or
movsl
add
roll
jae
add
xchg
add
add
repnz
xchg
arpl
add
add
leavew
faddl
add
add
js
add
out
stos
sar
addb
icebp
add
mov
test
add
mov
lea
pop
call
push
dec
sub
pop
push
push
push
call
add
mov
add
lock
lret
je
add
add
push
out
lds
jl
incb
scas
in
add
add
leave
add
les
add
mov
push
sti
scas
addl
xchg
add
jb
leave
add
hlt
lea
pop
call
push
not
pop
leave
push
pop
add
pop
push
sub
pop
pop
push
lea
push
call
pusha
push
add
add
pushf
out
mov
mov
jno
fdivrl
jb
jmp
loope
add
lcall
add
lret
scas
in
cld
mov
jbe
arpl
shr
fwait
enter
test
lea
pop
pop
pop
push
push
push
push
push
push
push
call
add
add
jbe
xlat
hlt
pop
test
add
add
add
add
jo
push
add
in
push
mov
fnsave
mov
fnop
std
lock
push
loopne
lret
mov
insb
add
add
xchg
outsl
iret
mov
sbb
leave
push
lea
sub
not
pop
add
push
add
pop
ret
leave
push
not
rol
rol
pop
ret
push
push
sub
pop
mov
push
ror
not
inc
pop
cmpl
jne
mov
push
push
push
push
push
push
push
push
call
movsl
pushf
add
lds
test
add
fstps
add
fs
cld
add
pop
iret
sub
rcrb
mov
add
add
add
add
mov
ljmp
aad
hlt
nop
fimull
pop
jmp
mov
push
add
inc
xor
pop
and
push
dec
lea
sub
pop
xor
push
lea
pop
xor
push
push
lea
push
push
push
push
push
lea
push
call
mov
loope
ret
gs
ja
lock
jge
mov
push
xchg
mov
add
jecxz
add
shr
repnz
add
add
add
mov
movsb
mov
outsl
ja
lods
jae
jbe
xchg
add
lock
pop
add
push
lea
push
push
push
push
call
in
enter
imul
mov
add
rolb
adcl
jb
mov
fiadds
test
add
loopne
add
lcall
push
add
movsb
mov
add
add
adc
xor
push
lea
push
lea
push
call
add
add
outsl
testb
in
sbb
mov
sarl
test
mov
aad
movsl
cmpsl
add
add
pop
add
add
add
add
idivl
lea
pop
dec
push
lea
push
push
push
push
push
push
push
call
add
jle
movsb
bound
popl
mov
test
add
imul
aam
rolb
gs
add
add
jl
aad
mov
andb
iret
pop
mov
lea
pop
sub
jmp
push
shl
pop
sub
push
push
lea
push
push
push
push
lea
push
push
push
call
jle
push
add
mov
mov
add
add
push
fdivl
xchg
add
add
cltd
add
out
mov
add
arpl
lock
loop
add
add
add
add
add
icebp
cltd
shll
pop
add
iret
test
add
js
add
mov
lea
pop
pushl
push
push
push
push
push
push
push
call
add
mov
xchg
fldl
add
add
add
add
in
add
add
pop
add
add
push
add
pop
shll
mov
lea
pop
pop
push
push
call
add
jp
addb
fdivrs
fldt
add
push
mov
mov
iret
mov
add
rorb
add
lock
in
pop
jl
fsubl
add
push
mov
mov
jno
out
add
inc
pop
jle
mov
lea
pop
sub
push
shl
pop
cmp
jne
mov
push
inc
shr
inc
sub
pop
lea
sub
push
push
call
add
cwtl
add
js
movsl
out
lret
add
fdivr
bound
add
add
rcrb
pop
fcomp
pusha
mov
add
mov
add
xchg
test
addl
push
pop
pop
je
mov
fmull
or
stc
lea
pop
shr
add
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
aam
jmp
add
jbe
add
fmul
repnz
aad
xchg
ror
add
scas
lret
out
add
add
cmc
jecxz
lods
ljmp
repnz
add
xchg
add
iret
mov
add
std
lea
test
imul
push
leave
repnz
pushf
add
frstor
xchg
jnp
add
imul
push
xchg
cli
mov
lea
pop
sub
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
add
icebp
add
add
lahf
add
add
add
add
push
je
mov
movb
lahf
lea
push
add
popa
ret
lds
data16
add
scas
add
mov
add
in
add
push
stos
mov
add
fs
add
add
mov
lea
pop
pushl
push
ror
dec
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
jmp
add
add
stc
test
add
fadd
outsl
lcall
add
add
add
jle
add
movb
add
add
add
jne
insb
in
repnz
add
mov
add
add
add
add
add
filds
add
lea
add
sub
jmp
incl
add
out
lcall
jmp
push
sub
sub
pop
cmp
jne
push
inc
rol
pop
leave
push
inc
pop
ret
push
push
add
xor
pop
mov
push
push
push
push
push
push
call
mov
icebp
mov
add
int3
pop
add
mov
fsubs
add
icebp
push
mov
aam
pop
testb
pop
mov
add
cltd
add
add
add
add
add
push
push
add
roll
test
out
ja
jmp
iret
mov
add
cld
shrl
add
pop
add
push
push
xor
shl
dec
pop
push
push
lea
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
add
faddl
add
add
pusha
insb
lods
add
mov
incb
mov
add
jb
ljmp
std
add
mov
add
roll
test
add
lea
pop
push
push
sub
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
jns
fidivs
pop
xchg
add
jl
push
add
gs
pop
mov
mov
add
mov
add
add
fnstenv
add
push
shlb
push
add
cmc
fwait
add
movsl
test
jno
mov
add
jno
add
in
in
add
add
mov
insb
add
mov
add
mov
lea
pop
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
jno
js
fwait
gs
add
ret
mov
add
lcall
add
add
imul
pop
shlb
add
add
iret
xchg
mov
lcall
js
add
add
mov
lea
pop
sub
push
inc
xor
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
out
cmpsb
mov
jge
add
add
pop
jl
scas
add
test
add
in
xchg
iret
jecxz
add
mov
xchg
push
aad
leave
add
mov
in
add
fnsave
add
push
add
add
lahf
mov
mov
lea
pop
shr
push
xor
pop
add
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
cld
mov
push
js
sahf
add
insb
add
add
lret
add
push
mov
rol
loopne
sti
imul
fidivs
add
add
add
shlb
mov
add
fildl
jp
xchg
add
mov
mov
add
loopne
imul
add
lahf
iret
mov
add
jae
jnp
add
pop
mov
lea
pop
add
mov
push
lea
pop
add
push
lea
push
push
push
push
call
add
add
shrb
repnz
add
jo
add
movsl
add
movsb
add
xchg
out
pop
add
cli
push
add
push
add
fwait
je
out
mov
mov
add
testb
add
stos
ljmp
add
xchg
add
adc
xor
push
shr
sub
pop
mov
push
lea
not
pop
and
rol
push
push
lea
push
push
push
push
push
call
shll
push
jle
xchg
add
les
add
stc
xorb
lret
je
mov
mov
add
jp
cld
pusha
add
pop
jp
imul
in
xchg
mov
xchg
add
int3
nop
mov
mov
lea
pop
rol
push
push
push
call
xlat
push
mov
add
mov
push
int3
mov
xchg
add
push
testl
jp
imul
add
add
mov
jno
addl
add
pop
data16
loop
std
gs
lcall
mov
rcrl
mov
add
add
pop
pop
push
rolb
add
pushf
insb
add
lcall
lea
pop
xor
inc
push
lea
push
lea
push
push
call
jbe
lds
testb
mov
imul
rcrb
insb
add
add
lret
push
cltd
add
in
roll
add
add
in
add
jecxz
fbstp
js
add
call
add
add
rclb
add
add
mov
add
add
pusha
mov
add
add
outsl
add
add
pop
cmpb
jne
add
push
push
lea
push
push
push
push
push
call
add
pop
iret
mov
lds
insb
mov
add
imul
je
add
mov
imul
data16
add
rolb
mov
movsb
add
add
pop
stos
addl
add
sti
lods
aad
in
mov
cld
neg
mov
add
int
mov
mov
ja
xorl
add
movsb
mov
lea
pop
cmp
je
push
add
sub
dec
pop
add
push
push
push
lea
push
push
push
call
fldl
add
jecxz
rolb
add
push
in
xchg
push
fmul
fiaddl
gs
mov
in
jns
jno
fldl
lock
pop
jne
add
add
out
clc
mov
add
popf
mov
add
imul
jo
xchg
rolb
add
fbstp
add
add
arpl
lcall
sbb
jnp
add
test
not
ror
pop
xor
push
sub
add
lea
add
pop
pop
push
xor
inc
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
mov
jbe
test
xchg
cmpsb
add
xchg
add
jnp
shll
cmpsl
jle
out
add
add
jb
rolb
repnz
movb
mov
mov
lds
movsb
add
xlat
movsb
int
sti
mov
lea
pop
pop
push
shl
rol
shr
sub
pop
pop
pop
push
push
push
push
call
xchg
hlt
add
out
xchg
jns
movb
add
add
sarl
arpl
clc
stc
stos
add
in
rolb
out
fidivrs
addl
jmp
pop
loope
mov
add
add
hlt
mov
popa
jns
push
add
add
int3
lea
pop
leave
push
rol
pop
ret
push
push
push
call
add
add
add
mov
scas
add
movsl
push
add
sti
jno
add
add
jge
add
mov
add
ja
add
add
add
add
add
pop
mov
add
push
push
push
push
push
push
push
lea
push
push
call
add
repnz
ret
movl
jno
xchg
scas
mov
movsl
push
addl
ret
test
mov
jecxz
add
mov
clc
mov
and
push
push
sub
xor
pop
push
add
push
sub
shl
pop
xor
push
pop
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
popf
data16
add
pop
incb
mov
mov
pop
ja
mov
pop
rol
xchg
add
xchg
add
add
add
stos
jl
in
add
stc
add
add
nop
fwait
mov
lret
addb
rcrb
jmp
imul
fstpt
push
mov
jmp
int3
movsb
clc
nop
mov
lea
pop
testw
push
push
push
push
push
push
push
push
lea
push
push
call
add
adc
add
add
mov
int3
clc
mov
add
add
imul
pop
test
add
add
add
jle
xchg
mov
add
push
insb
mov
scas
xchg
scas
jp
leave
jne
add
xchg
add
add
add
out
jp
les
movl
cmpsb
fstpl
add
pop
pop
pop
push
ror
shr
pop
mov
push
push
push
lea
push
push
push
call
in
out
add
mov
add
add
jmp
add
fidivl
mov
add
mov
fcomip
xchg
add
push
ret
std
add
lods
add
mov
pop
mov
movl
test
mov
add
mov
add
jo
mov
aam
add
pop
push
push
add
sub
add
rol
pop
call
push
push
push
call
pop
add
sti
movsb
add
add
out
out
add
rcrb
xchg
add
add
in
gs
push
lcall
pop
nop
addb
in
add
out
xchg
js
ror
add
add
popf
sahf
add
std
mov
mov
cld
add
mov
mov
jne
add
add
bound
nop
add
or
xor
pop
push
pop
pop
push
pop
pop
pop
push
dec
sub
xor
pop
pop
leave
push
push
push
push
push
push
push
call
xchg
test
mov
testb
cmpsb
fildll
add
test
cli
test
add
stos
add
test
addl
sti
mov
or
add
add
add
add
cld
mov
mov
add
add
pop
ret
push
shl
rol
inc
pop
push
mov
push
push
push
lea
push
call
jno
cmc
pop
mov
mov
add
aad
mov
add
add
cltd
mov
add
std
pusha
rolb
jns
mov
mov
jb
pop
roll
add
add
out
pop
arpl
add
imul
cwtl
add
add
add
out
add
add
in
in
mov
lea
pop
add
push
push
push
push
push
push
lea
push
push
call
add
movsb
mov
enter
jl
loope
add
scas
add
add
popl
add
add
pusha
add
xchg
pop
lods
arpl
in
mov
add
mov
push
mov
mov
jmp
lret
call
add
add
fisttpl
pop
push
push
push
push
push
push
call
loope
add
mov
in
add
leave
add
add
repnz
scas
add
add
add
icebp
cltd
push
add
out
sarb
add
fisubs
loopne
add
or
fcoml
mov
loopne
add
add
add
mov
lea
pop
push
push
rol
pop
mov
push
sub
pop
push
push
pop
pop
lea
push
lea
push
lea
push
lea
push
call
lret
gs
add
mov
std
xchg
lret
jne
push
pop
jne
mov
scas
cmp
add
test
aam
jle
xchg
mov
add
add
mov
add
add
shrb
add
add
loope
int3
add
les
mov
lea
pop
sub
push
push
push
lea
push
lea
push
call
jmp
add
add
mov
add
add
add
mov
mov
jb
out
add
subl
lret
add
add
out
nop
add
lods
push
call
add
add
fsubrl
hlt
lea
pop
mov
push
add
not
dec
pop
shr
add
push
push
push
push
push
push
push
push
push
call
mov
add
jl
scas
subb
je
lods
add
xchg
pop
add
test
js
int
add
mov
push
arpl
push
add
imul
notb
cli
add
icebp
mov
push
add
push
loope
repnz
mov
lea
pop
mov
push
not
dec
pop
add
push
pop
pushl
popl
push
push
push
push
push
push
call
mov
data16
add
in
add
add
mov
add
add
lods
mov
jne
lods
int3
add
lahf
add
push
xchg
add
mov
jb
xchg
imul
add
add
add
stc
add
orb
mov
add
push
lea
push
push
push
push
push
lea
push
push
call
pushf
movsl
mov
mov
lds
add
push
call
mov
add
bnd
jo
add
add
imul
add
loopne
add
mov
cmpsb
mov
add
lret
add
push
mov
lea
pop
xor
push
rol
pop
lea
mov
push
push
push
push
push
lea
push
lea
push
push
push
call
aad
stos
les
add
add
jnp
mov
add
popl
add
shrb
imul
shlb
mov
xchg
cmpl
jns
add
imul
add
aam
add
pop
add
push
push
push
push
push
lea
push
call
lods
add
add
add
iret
movb
mov
insb
arpl
stos
add
mov
add
push
add
add
imul
pop
out
add
xchg
mov
lea
pop
xor
rol
push
sub
pop
nop
push
push
call
movl
rorw
jecxz
push
mov
add
add
add
mov
popl
pop
add
add
icebp
scas
add
enter
add
jo
cli
mov
add
push
in
add
jo
mov
add
add
mov
lea
pop
nop
push
shr
pop
xor
push
not
lea
rol
pop
nop
nop
push
pop
inc
nop
push
add
shr
pop
nop
push
push
push
lea
push
push
push
push
call
arpl
add
add
jb
arpl
add
add
add
test
rolb
imul
jo
add
jmp
mov
jns
xchg
xchg
jbe
add
push
add
cmc
add
add
push
add
mov
subl
add
test
call
jecxz
std
int3
addr16
push
push
call
stos
mov
add
add
add
enter
add
add
mov
add
add
mov
fwait
aam
add
mov
jb
xor
add
jecxz
add
mov
mov
lea
pop
add
push
sub
pop
nop
nop
push
rol
add
pop
cmp
je
push
sub
ror
pop
nop
push
push
push
push
lea
push
push
push
call
push
hlt
in
add
std
jae
push
je
rolb
add
call
sarl
test
add
mov
pop
enter
pop
movsb
add
loop
clc
add
nop
push
imul
add
mov
fists
mov
mov
add
add
add
add
add
sahf
mov
lea
pop
nop
push
dec
not
pop
inc
push
shr
pop
nop
nop
push
not
lea
pop
cmp
jb
push
sub
not
ror
pop
xor
jmp
push
dec
pop
mov
add
push
push
push
push
lea
push
push
push
push
call
add
add
cmc
xchg
pop
push
roll
add
mov
cwtl
cltd
add
add
jbe
icebp
add
mov
aad
jnp
pop
mov
add
call
add
aad
iret
repnz
xchg
iret
ja
add
pop
add
pop
movzwl
push
lea
push
push
call
mov
mov
out
popf
xchg
test
mov
add
jb
mov
add
add
faddl
add
jns
pop
mov
xlat
mov
in
add
add
pop
mov
push
push
push
push
push
push
call
les
test
pop
cltd
mov
xchg
add
mov
sti
mov
add
out
add
imul
push
pop
add
push
pusha
rcrl
fildll
add
add
in
in
rclb
add
add
pop
add
sahf
add
add
add
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
call
in
fmull
int
xchg
add
add
std
mov
iret
add
add
add
add
add
fisubl
add
into
jle
jmp
add
je
add
add
add
cmc
cli
lods
nop
add
lret
jae
add
add
add
add
test
lods
jle
xchg
add
add
pop
mov
xor
push
push
push
push
push
call
add
mov
sti
ret
add
test
rcrb
ljmp
xchg
add
add
mov
add
jae
cli
add
test
mov
out
fmull
dec
nop
add
ret
ret
lret
pop
shl
push
inc
pop
xor
push
lea
pop
shl
push
push
call
add
jle
repnz
jnp
add
scas
add
pop
add
add
pop
xchg
push
add
add
fadd
mov
mov
int
xlat
add
xchg
push
jae
fwait
lds
xchg
test
add
lret
add
lret
jecxz
popl
add
pop
xor
shl
push
push
push
push
push
push
lea
push
call
add
frstor
jbe
jmp
jp
add
add
add
add
add
mov
lahf
add
in
lret
repnz
push
jecxz
add
into
loop
int3
add
push
jge
test
xlat
addr16
aam
add
jae
fsub
scas
jne
jecxz
cwtl
pusha
add
mov
add
mov
sbb
xor
mov
push
push
push
lea
push
call
xchg
mov
fiadds
ret
mov
add
add
add
mov
jmp
fiaddl
add
add
add
clc
iret
mov
loopw
out
test
xlat
add
add
lret
hlt
cli
lods
fst
into
jecxz
mov
push
fldenv
int
fadds
filds
xchg
lcall
les
popa
adc
inc
hlt
push
push
push
call
push
cwtl
mov
mov
mov
loope
add
add
add
jb
mov
pop
in
mov
add
mov
cmpsl
add
mov
add
popf
rcrb
iret
stos
insb
add
aam
lret
add
rolb
in
pop
add
test
test
repnz
add
nop
in
lods
jge
insb
test
add
pop
pop
push
lea
ror
pop
pop
push
inc
shr
shr
pop
pop
pop
push
dec
inc
sub
pop
leave
push
push
push
call
push
add
div
xchg
add
lock
add
mov
add
jle
add
repnz
push
call
push
shrl
jl
add
add
add
ljmp
aam
bound
ret
push
push
push
lea
push
push
lea
push
push
push
call
iret
mov
enter
add
push
std
jge
stc
add
add
add
mov
add
add
add
jae
mov
into
fiaddl
loope
icebp
add
in
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
mov
gs
jle
filds
add
out
add
push
pop
mov
add
sti
rol
add
xchg
addl
into
stos
addl
add
call
add
xchg
pop
mov
in
add
mov
push
add
mov
fisubrl
mov
int3
lea
pop
push
push
push
push
call
add
mov
add
in
add
pop
flds
rolb
ljmp
add
add
mov
add
add
add
mov
mov
mov
lea
pop
push
push
push
xor
xor
pop
mov
push
not
sub
pop
mov
push
pop
mov
push
push
push
lea
push
push
call
mov
add
mov
add
xchg
call
js
push
divl
insb
sti
add
mov
mov
jne
pushf
add
jl
mov
pop
add
add
add
add
add
scas
jnp
fmull
rorb
test
jno
push
add
sub
pop
test
je
push
ror
shr
dec
inc
pop
mov
push
ror
pop
mov
mov
push
push
push
push
push
push
lea
push
call
add
add
add
add
add
pushf
fiaddl
stos
shrb
in
add
nop
js
pop
clc
ljmp
lret
cmc
add
add
mov
test
outsl
pop
cltd
test
add
add
pop
inc
cmp
je
push
add
shr
pop
test
je
mov
push
dec
sub
pop
inc
push
lea
push
push
lea
push
lea
push
call
xchg
add
xchg
xorl
testb
add
lahf
jge
cwtl
pop
add
nop
add
pop
add
xchg
add
addb
scas
add
add
add
sahf
add
fildl
loope
clc
add
movsl
clc
mov
mov
lea
pop
cmp
je
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
pop
add
out
rorl
add
push
add
nop
lods
add
add
in
loopne
add
add
fdivrl
leave
xchg
stos
jbe
add
add
rcrl
add
add
bound
add
jns
add
add
xchg
add
pop
out
add
add
mov
mov
add
loop
add
pop
test
jne
push
lea
pop
xor
push
ror
add
pop
pop
push
xor
lea
not
pop
pop
push
lea
push
push
push
push
push
push
call
cmpsb
test
push
stos
ja
add
hlt
jle
add
add
data16
lcall
imul
add
mov
add
in
add
add
int3
add
add
data16
int3
outsl
pop
stos
jmp
add
xorb
iret
fbstp
repnz
add
push
push
lcall
icebp
test
add
pop
pop
push
push
push
push
push
push
push
push
push
push
call
js
jl
mov
add
add
add
popf
add
xchg
mov
add
stos
fstps
jne
add
add
xchg
insb
mov
add
icebp
mov
cld
lea
pop
pop
push
rol
shl
pop
leave
push
sub
pop
ret
push
shl
shr
add
pop
mov
inc
push
lea
push
push
push
push
push
call
test
add
stc
scas
add
fs
lcall
movsl
add
ja
add
out
add
movb
jns
mov
sahf
add
add
mov
test
mov
pop
add
cmpsl
jl
add
mov
ficoml
fmulp
add
ljmp
pushf
jno
fadds
bound
imul
add
mov
add
add
int3
mov
lea
pop
cmp
jne
push
ror
ror
pop
lea
push
shl
lea
shl
pop
mov
push
dec
inc
ror
pop
test
je
push
push
push
call
jno
xchg
cld
fldl
add
pop
add
add
loope
out
add
les
test
add
cmc
xlat
mov
add
test
add
pop
add
mov
add
rorb
js
add
pop
mov
add
push
not
ror
pop
cmp
jne
push
add
add
rol
pop
mov
push
push
push
lea
push
call
add
add
push
negb
roll
stc
mov
arpl
ja
add
test
test
repnz
add
mov
rcrl
int3
test
nop
mov
out
add
lret
lea
enter
mov
add
popl
add
pop
out
mov
jl
movsb
add
add
arpl
js
les
rorb
inc
add
add
xchg
dec
add
add
add
add
xchg
add
in
add
add
fucomip
mov
mov
addr16
sti
add
mov
ljmp
jge
mov
add
cmpsl
nop
test
addb
pop
mov
in
cli
add
add
or
mov
push
push
push
lea
push
push
push
push
push
call
push
jo
pop
mov
add
mov
iret
in
fmul
out
add
mov
faddl
mov
add
jae
in
add
lret
xlat
rorl
push
sahf
int3
cmpsb
scas
add
add
add
add
add
add
add
add
imul
mov
add
add
aam
bound
pop
add
push
lea
push
push
push
call
mov
add
std
add
lcall
movsb
jle
adcl
arpl
add
add
test
add
mov
jecxz
imul
loope
hlt
int3
add
mov
mov
lea
pop
cmp
je
push
xor
shr
pop
jmp
push
ror
add
shr
pop
xor
pop
push
add
add
shr
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
jne
add
xchg
fcomps
add
add
sti
push
add
aad
push
xchg
lds
popl
add
add
testl
cltd
mov
push
push
push
push
call
fdivs
add
pop
jp
fistpl
add
add
popf
add
mov
add
add
movsb
jl
ja
pop
ret
jmp
push
icebp
imul
fcmovnbe
imul
add
jnp
stos
add
pop
mov
out
notl
add
jae
fmull
leave
push
sub
pop
ret
lea
push
push
push
push
push
push
push
push
call
add
outsl
roll
jmp
add
enter
mov
mov
add
add
pusha
add
jne
cwtl
push
add
lret
add
add
add
int
mov
add
add
pop
pop
add
add
addl
pop
pop
jo
ljmp
aam
add
fdivr
mov
lea
pop
pop
push
ror
pop
pop
pop
push
pop
pop
push
push
push
push
push
push
call
jnp
fisubs
add
add
pop
add
add
add
test
xchg
pop
pop
pop
notl
jo
add
mov
mov
mov
je
add
add
add
test
lock
mov
add
push
arpl
stos
popf
in
pusha
add
jbe
incb
add
add
icebp
ja
mov
add
lret
jmp
mov
add
add
add
testb
pop
test
imul
xchg
aad
in
add
pop
leave
ret
push
push
lea
push
push
call
mov
mull
mov
mov
jnp
add
out
add
loopne
add
orb
add
popa
lds
add
add
cli
mov
add
add
push
add
mov
xlat
xchg
pop
add
pop
fdivrp
add
lcall
adc
push
shr
shl
add
pop
pop
push
xor
dec
pop
pop
push
shl
sub
pop
pop
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
pop
leave
add
add
roll
test
out
add
js
pop
test
add
fwait
add
insb
mov
add
imul
add
cwtl
add
push
mov
jp
fiaddl
movsl
pop
insb
add
xchg
pop
add
hlt
data16
cmpsb
add
call
cmpsl
add
add
xchg
add
rol
push
roll
add
xlat
add
shr
mov
lea
pop
pop
push
push
push
push
lea
push
push
push
call
xchg
add
addl
add
jns
add
popl
pop
mov
movsl
mov
add
lahf
mov
lahf
add
add
add
add
outsl
int
incb
icebp
add
add
xchg
add
pop
leave
push
lea
push
push
push
push
call
add
out
sti
lea
lods
add
ret
shll
add
add
jmp
lcall
movsb
jle
mov
bound
cltd
mov
in
add
add
add
imul
add
bound
ret
cli
js
jb
test
jb
pop
pop
jb
mov
pop
jb
push
pop
jb
push
pop
jb
in
jb
xchg
pop
jb
imul
pop
jb
add
add
push
pusha
inc
popa
jecxz
mov
fadd
mov
pop
sub
out
push
hlt
or
ret
mov
movsb
js
data16
jge
inc
and
push
fnstenv
adc
sub
aaa
push
div
cmpsb
inc
mov
clc
push
leave
mov
ss
pop
xchg
jae
insl
cs
outsl
mov
cmove
hlt
mov
data16
and
xchg
in
testb
inc
and
rorl
xchg
xchg
sub
and
push
inc
aas
jmp
movsl
in
ss
jo
fisttpll
xchg
gs
mov
fwait
jge
sbb
dec
jb
call
out
mov
jle
lds
mov
frstor
sbb
add
push
xchg
lods
cmp
call
add
dec
fwait
pop
loopne
adc
jg
sbb
mov
push
popf
push
sti
fsin
rcr
jns
xchg
test
jns
ljmp
add
mov
inc
bound
xor
lret
rcl
mov
xchg
insl
jmp
outsb
sbb
mov
push
xorl
pop
sbb
mov
sar
push
pop
sub
mov
cmp
out
xchg
les
loope,pn
dec
aas
push
xchg
cld
xlat
pop
jbe
negb
leave
xchg
adc
jp
push
cld
fists
lds
xor
dec
and
or
push
xor
jl
pop
orb
rclb
adc
shlb
inc
xchg
mov
in
aam
inc
mov
notl
sub
xchg
ror
sbb
int3
aad
adc
cmp
loope
jns
out
sbb
mov
inc
or
test
sub
dec
xorb
shr
les
rorl
scas
icebp
jmp
mov
mov
mov
mov
mov
rolb
pop
pushf
out
ret
test
dec
out
sarb
or
cmpl
pop
sub
call
and
push
mov
xchg
insb
leave
inc
pop
mov
jl
add
cwtl
sbb
xchg
jbe
ljmp
stos
xchg
shr
xchg
and
add
mov
sbb
clc
sbb
pop
fisubs
call
ror
lods
add
addr16
add
insb
test
mov
lret
push
int
cmpsb
pop
mov
popa
dec
xor
iret
iret
mov
ja
sbb
sbb
jns
push
sahf
fiadds
fstpt
clc
repnz
cmpsb
scas
rorb
sub
arpl
loopne
xor
test
lcall
loope
mov
sti
push
mov
inc
push
aas
arpl
jle
pushf
lods
mov
adc
xlat
movsb
cmp
nop
sbb
inc
scas
insb
sub
mov
mov
ljmp
xor
cs
adc
jne
add
or
icebp
ret
pop
out
out
fs
push
mov
adc
stos
push
out
je
pop
mov
repnz
arpl
dec
cltd
xorb
or
inc
mov
jl
or
rcrl
aas
or
fidivrs
bound
dec
pop
icebp
mov
in
sysexit
jmp
movsb
add
int3
movsl
sahf
sarl
inc
test
lahf
popf
or
or
aam
push
divl
cmpsl
xchg
and
sahf
push
xchg
lea
js
shll
sahf
cmp
cli
ds
sti
dec
push
enter
xor
adcl
repz
shlb
cmp
cli
sbb
pop
xor
push
and
sub
mov
dec
into
bound
add
mov
jns
repz
jl
xor
movb
push
mov
add
sti
shll
sbb
lods
arpl
cmpsl
jnp
aam
insb
pop
cli
or
sbb
subl
xchg
mov
dec
sbb
outsl
les
stc
out
adc
and
dec
js
rcl
out
inc
push
mov
cld
rcl
mov
andl
mov
mov
orl
aam
ljmp
mov
aam
loope
test
xor
xchg
outsl
repnz
pop
or
bound
or
lock
out
mov
les
mov
jne
aaa
aad
std
cs
or
pop
lahf
je
call
int3
mov
out
or
js
sub
or
push
iret
frstor
mov
cmp
inc
xchg
adc
mov
cmovno
push
movd
es
outsb
into
pusha
xchg
loope
popa
push
int
dec
ss
popf
out
nop
mov
xchg
lock
fwait
lock
sarl
popf
mov
je
or
out
adc
lcall
push
test
cli
iret
outsl
jge
js
push
lods
and
test
or
stos
or
int
out
stc
dec
sbb
addl
mov
push
lahf
pusha
in
nop
and
sbb
pop
out
das
inc
cmp
fs
jo
pcmpgtw
xchg
lock
and
test
aaa
cli
mov
out
movsb
incb
lea
sub
and
lret
or
mov
test
mov
jnp
mov
cs
jecxz
jnp
mov
push
mov
fsubrl
iret
je
adc
jbe
fsubrl
adc
in
data16
push
cmp
shr
xor
negl
shl
pushf
pop
dec
outsl
or
adc
addb
dec
repz
cmpb
push
add
push
adc
push
xchg
inc
sahf
dec
xchg
mov
test
mov
test
arpl
pushf
popf
mov
xchg
bound
inc
mov
fcoml
xchg
jbe
leave
fnstsw
inc
adc
push
lock
sti
dec
test
adc
mov
sbb
lock
and
iret
cli
push
pop
cmpsl
hlt
jg
icebp
and
movsb
in
dec
xor
and
mov
mov
mov
pusha
sub
mov
push
mov
lods
shll
pop
or
mov
adc
mov
xor
popa
sbbb
cmpsb
js
ds
inc
mulb
dec
or
adc
cs
mov
std
and
mov
in
mov
cmp
push
push
mov
cmpsb
cmpsl
jmp
mov
sbb
into
jbe
mov
stc
jb
mov
es
js
lods
fsubrl
or
xchg
adc
lea
adc
jmp
xchg
icebp
lahf
repz
mov
add
dec
push
cmpb
scas
scas
xor
and
and
pushf
adc
rcrb
adc
xchg
shrd
arpl
test
ds
pop
sub
je
or
adc
sbb
sbb
jmp
loopne
push
fdivs
ja
fbstp
std
mov
daa
xor
loop
arpl
push
pop
pushf
aaa
movsb
sbb
add
sub
js
gs
inc
leave
jge
test
pop
dec
mov
into
mov
jno
fwait
jl
ret
mov
jge
pop
mov
mov
sub
xor
les
mov
push
jg
lret
rorl
xchg
lahf
adc
xchg
dec
das
push
int
adcb
in
sub
fmulp
rorb
push
cmp
movsl
popa
imul
pop
push
rcrl
jne
fsubs
sub
out
fistps
test
shlb
pop
loope
mov
sar
xor
lds
pop
fisubl
cmp
sbb
dec
mov
sbb
idivb
sbb
push
fs
cmc
and
loopne
mov
pusha
insl
leave
stos
mov
shlb
inc
test
ljmp
and
xchg
mov
cli
push
mov
cwtl
repz
cmp
roll
mov
mov
mov
pop
pop
insl
sbb
outsb
scas
inc
jns
lret
frstpm(287
xchg
lock
mov
xor
cwtl
pop
scas
rcrl
shlb
cli
in
jne
mov
inc
popa
push
jne
sub
add
stos
cmp
and
adc
mov
mov
cmp
jo
inc
add
add
fwait
inc
out
stc
aaa
mov
sub
lea
fdivl
scas
add
ds
lods
fistps
adc
lea
cmp
cmp
cmc
add
push
fsubl
sbb
jmp
out
test
add
scas
dec
fwait
jl
jmp
add
adc
sub
mov
shrb
ficoml
push
in
lcall
mov
push
cmp
int3
add
cmp
xchg
aas
jne
jmp
rcll
jecxz
pop
rol
cld
mov
or
mov
adc
aaa
ja
cmp
mov
sti
out
dec
ja
jl
cmp
sub
movsl
rcrb
das
mov
cmp
and
popf
js
mov
jnp
cmp
inc
add
jg
movsl
pop
loop
pop
xor
das
mov
sti
sbb
sahf
lds
ss
pop
jnp
push
scas
jns
add
push
lret
push
mov
mov
stos
ret
and
clc
rcl
pop
je
std
xchg
leave
pop
in
fwait
dec
add
loop
iret
shll
in
insb
dec
jmp
jno
idivb
test
xchg
inc
lds
jmp
push
test
dec
movsb
push
in
icebp
repnz
pop
imul
sahf
std
test
fwait
lods
vpcmpgtb
xorb
pushf
add
fbld
or
ds
pop
clc
int3
nop
incb
xchg
iret
or
inc
pop
push
in
iret
inc
fidivrl
add
push
jno
inc
or
sti
in
lock
push
and
push
cmp
xlat
out
push
in
ljmp
mov
mov
jbe
ret
jnp
adc
stc
lahf
orb
loopne
inc
shlb
lods
int3
cli
add
repz
test
mov
arpl
rorb
adc
hlt
add
sub
lods
scas
push
mov
pop
lgs
push
or
mov
dec
je
je
cmp
jmp
sbb
add
adc
cmpsb
in
xorb
out
mov
push
push
shrb
or
in
call
je
fcomps
xchg
shlb
cmp
gs
and
mov
dec
hlt
pop
jbe
arpl
icebp
adcl
bound
sbb
cld
lea
mov
mov
adc
insb
sbb
ficoms
mov
dec
push
test
dec
stc
pop
fildl
out
cmc
hlt
push
mov
fisttpll
gs
movhps
mov
fldl
or
jb
dec
icebp
inc
in
dec
shlb
cmc
andnps
gs
mov
pop
jg
pop
loopne
inc
pushf
push
fisubs
lods
sti
xchg
push
push
sti
mov
scas
sbb
adc
push
lock
add
sub
dec
dec
mov
sarl
pop
inc
scas
popf
data16
mov
pop
das
stos
xchg
out
mov
sub
xor
xor
cli
cld
test
jns
insb
mov
inc
jne
push
xor
je
fst
cmp
or
in
or
scas
mov
mov
push
mov
dec
repz
dec
inc
lret
push
jbe
hlt
pop
xchg
ret
pop
repz
or
xor
pop
adc
pop
cmp
cld
jge
sub
mov
pushf
ds
mov
xor
xchg
dec
dec
or
lret
mov
addr16
ret
push
and
xor
ret
mov
xchg
xchg
rcrb
xlat
into
sbb
sub
mov
fcomp
jns
popf
and
jle
mov
das
sub
pop
repnz
push
fidivs
stos
mov
repz
in
stos
mov
test
dec
cmp
mov
sar
shlb
aaa
push
cmp
outsl
bound
sbb
jp
mov
sub
or
adc
push
stos
test
js
sar
mov
add
mov
iret
insb
loopne
fistps
xchg
ret
iret
mov
into
cli
int3
lcall
movsl
pusha
xor
pop
incl
daa
mov
pushf
nop
cmp
adc
scas
mov
stos
hlt
stc
fisubrl
out
mov
hlt
ss
lahf
mov
jae
in
mov
ds
mov
out
ljmp
add
xchg
adc
xchg
sbb
mov
xor
js
shrl
sub
mov
or
mov
xchg
int
dec
icebp
out
insl
mov
test
and
mov
lds
and
or
imul
lds
jg
fiadds
cmpsl
out
inc
mov
enter
fcmovnu
push
jl
fidivrs
mov
jae
mov
ficoml
lds
mov
stos
cmc
nop
loop
adc
and
aas
push
sbb
popa
jge
push
pop
add
sbb
pop
and
ljmp
dec
insb
gs
call
in
sub
mov
in
adc
jb
daa
movlps
cmpl
xlat
in
sbb
ja
out
jb
xor
rorb
jecxz
push
out
arpl
ret
or
std
mov
addb
popa
sbb
out
test
add
setg
jecxz
test
std
dec
sbb
mov
push
std
add
into
lock
bound
pop
cmc
xor
add
mov
mov
lahf
xchg
jle
inc
mov
fists
loopne
sub
out
add
jne
xchg
xor
jp
mov
jb
ret
rclb
jp
lods
cmpsl
mov
push
dec
jo
sbb
jmp
cwtl
mov
imul
js
jo
in
clc
data16
add
imul
mov
cmpsb
and
in
jb
out
int3
fdivl
fmull
test
mov
mov
inc
outsl
cs
inc
mov
push
mov
jbe
inc
inc
or
test
sub
jne
test
rolb
push
call
inc
jmp
xchg
mov
push
cmp
pop
push
xor
xor
lret
shrb
inc
out
outsl
xor
jmp
popa
call
pop
push
sbb
add
sub
push
sub
add
cmp
mov
and
lahf
cli
push
js
cltd
or
jg
cmpsb
ret
daa
fdivl
pop
repnz
test
sub
jns
jle
punpcklbw
and
das
mov
xor
xor
pop
or
std
inc
pop
movsb
xchg
sbb
icebp
mov
mov
dec
or
mov
bound
mov
add
xchg
rclb
inc
jge
loop
cmpsb
aam
fldcw
mov
mov
pop
dec
rclb
stc
pusha
dec
pop
dec
inc
xchg
cs
sub
inc
xor
fs
fcomps
std
xchg
lret
mov
xchg
and
cmc
mov
dec
out
sbb
xchg
cmpsb
cmp
mov
lret
and
push
jle
fnstsw
mov
dec
loope
or
addb
imul
out
jno
addr16
aaa
push
notb
adc
sbb
in
daa
jle
arpl
mov
xchg
int
les
mov
stos
push
mov
loop
aaa
pop
mov
push
xor
sub
or
out
test
mov
loop
insl
xor
pop
mov
jae
and
arpl
cmp
rcrl
sub
xor
pop
jns
cmp
ret
in
push
dec
lds
adc
fwait
push
insl
push
inc
mov
xor
das
scas
add
pop
sarl
fistpll
incl
ss
cwtl
movsl
lea
xchg
orb
daa
pop
xchg
push
inc
mov
imulb
mov
aaa
sub
push
movsb
jb
mov
lret
in
imull
daa
xchg
cmpsl
sub
sbb
mov
rcrl
pop
flds
jne
popf
and
mov
hlt
cmp
shl
ljmp
stos
xor
insb
cld
or
sti
push
cmp
pop
in
inc
mov
in
adc
pop
add
movsl
out
test
fwait
cwtl
push
testb
loopne
cs
hlt
cs
pop
js
or
sub
movsl
cld
aad
inc
inc
lods
je
cwtl
pop
adc
jmp
lea
repnz
add
cmpl
xor
aad
cmc
jmp
mov
push
xor
ss
clc
push
pop
fs
mov
mov
push
mov
xor
mov
add
mov
pop
cmp
into
loopne
pop
cwtl
jge
jo
push
dec
scas
test
cmp
divl
daa
sub
das
mov
cwtl
or
aam
jmp
adc
cltd
add
call
and
sub
xlat
jle
cwtl
mov
test
pop
lea
sub
and
cwtl
xchg
test
je
mov
mov
xorb
imul
outsb
jmp
lcall
mov
and
cmc
mov
mov
push
jb
xchg
or
rolb
jg
cmp
lcall
aam
jg
jecxz
fstpt
mov
adc
lret
push
mov
add
aas
fdivrp
in
mov
inc
lock
stc
jg
or
fistpll
jns
jo
and
pop
loope
test
aam
imul
pop
jbe
push
adc
push
icebp
in
je
int
add
pop
int3
stos
lds
lea
sub
pop
iret
xchg
cmc
test
mov
lock
or
inc
mov
xor
jae
inc
movsb
sbb
dec
ret
mov
pop
fisubrs
imul
ret
xchg
jge
mov
aad
cmp
in
mov
xor
lods
inc
mov
and
mov
pusha
jl
cltd
test
in
in
mov
inc
cmc
xchg
imul
cmc
scas
test
fsubrp
inc
test
lret
xor
int
bswap
jb,pt
icebp
or
std
lock
fdivr
jbe
cmp
les
dec
test
fcmovnu
aad
sub
js
xor
mov
in
mov
clc
sbb
in
loopne
xchg
std
or
out
je
add
xchg
jno
mov
and
pop
xor
test
sbb
push
mov
dec
jae
or
jecxz
fcmovnb
mov
pop
in
test
ljmp
les
push
leave
imul
shl
sbb
sbbb
adc
lret
xor
out
push
not
testw
mov
pop
mov
cmp
nop
adc
mov
je
inc
fwait
pop
and
dec
loope
shr
add
dec
xchg
mov
jl
outsl
sarl
cmp
mov
cwtl
dec
mov
adc
movsl
mov
jle
cmc
in
push
nop
imul
pop
out
cld
dec
jo
shlb
sub
xor
gs
inc
in
shlb
dec
stc
push
push
roll
shr
mov
popf
or
int
sbb
cmpb
cmpsb
stos
scas
sub
mov
ret
xlat
loop
or
gs
mov
xchg
enter
sbb
mov
or
pop
out
outsl
das
dec
insb
fimull
jp
mov
in
mov
aam
ja
sti
sbb
std
or
test
scas
push
aam
lret
test
pop
adc
stc
fsubrs
pushf
jb
mov
and
int
jmp
ss
lahf
sub
ret
and
push
dec
or
stos
pop
lods
cmpsl
sub
mov
rclb
les
icebp
jp
sbb
mov
mov
xorl
notb
das
xor
adc
sti
jmp
stos
mov
sbb
cmpsb
dec
sub
push
mov
insb
jno
mov
iret
xor
iret
pop
add
aas
sbb
sahf
test
ljmp
push
pop
xor
les
aad
lret
jge
inc
in
xchg
sarb
into
pusha
jae
inc
lock
inc
les
outsb
sub
popa
jnp
push
stos
ret
cmp
push
leave
or
xlat
adc
popa
enter
jecxz
add
imul
mov
and
lods
cld
add
movsl
xchg
sarb
lods
pop
jbe
mov
cmpsb
mov
mov
mov
mov
fsubrs
clc
pop
mov
jnp
adc
repnz
jne
in
inc
mov
fisubl
mov
jo
inc
ds
pusha
dec
bound
popf
divl
adc
xchg
sbb
pop
mov
enter
test
fists
clc
test
arpl
mov
rolb
or
and
push
and
movsl
mov
out
mov
pop
or
sub
push
mov
cwtl
dec
inc
mov
fisttpl
jne
or
fildl
sbb
int
adc
stos
jl
in
mov
hlt
mov
cld
iret
jmp
mov
adc
mov
mov
sti
loopne
sbb
mov
repz
in
adc
sarl
scas
sub
sub
inc
mov
loop
fbld
fsubs
dec
mov
cs
mov
push
mov
fsubl
mov
sahf
arpl
call
fidivl
mov
jmp
or
popf
ror
dec
in
lcall
cld
aam
scas
loope
jmp
push
inc
and
adc
add
dec
lock
dec
cmpsl
xchg
pop
mov
out
mov
test
fmull
pop
mov
push
fsubs
sbb
rclb
sub
jge
sti
sbb
adc
aas
ja
push
xchg
aam
movsl
sahf
lods
mov
dec
push
pushf
inc
xchg
out
mov
add
lods
ret
test
mov
movsb
stos
ljmp
inc
rcrb
std
and
jno
xchg
fnstenv
data16
mov
pushf
les
dec
jnp
push
sbb
dec
jmp
push
inc
mov
add
xchg
mov
mov
imul
push
adc
hlt
inc
push
sbb
stos
sbb
xor
pop
push
cld
mov
rcr
imul
fdivrs
push
orps
icebp
adc
mov
js
sbb
pop
packssdw
push
lret
test
add
and
add
aam
xchg
repz
mov
cmp
mov
xor
sub
fstps
push
dec
jmp
int3
pop
stos
cltd
inc
jbe
adc
push
push
dec
mov
dec
xchg
cmp
add
xor
lods
push
pop
out
dec
popa
cmp
dec
daa
roll
mov
sub
sub
xchg
sbb
dec
cmc
fidivrs
push
les
adc
cmp
imul
xor
mov
rcrb
sbb
adc
gs
mov
push
adc
jecxz
imul
adc
cmc
cld
mov
cmp
inc
scas
mov
or
mov
arpl
popf
dec
in
test
scas
ja
andb
inc
insl
cmp
pcmpeqw
and
fwait
add
xchg
enter
cmp
xlat
fsubs
mov
fcomip
pop
push
mov
sbb
call
dec
js
sub
cltd
cmpsl
lret
int3
xor
xchg
push
pop
fs
imul
test
mov
aam
lods
inc
call
dec
sub
dec
insl
and
hlt
inc
mov
in
and
std
or
in
and
les
add
add
inc
push
xor
xchg
adc
and
lea
cli
cmc
push
bound
insl
js
cltd
xchg
stos
rcrl
std
inc
scas
daa
repnz
mov
lahf
xchg
scas
pop
dec
sub
fcompl
cmp
sub
daa
pushf
cmp
int
pop
xor
cwtd
push
jno
and
add
dec
pop
pop
dec
push
cmp
sub
lods
jmp
lods
int
stos
xor
mov
adc
dec
cmpb
push
xchg
mov
sub
adc
bnd
mov
pop
mov
mov
loop
sahf
cltd
jno
dec
test
pop
lcall
insl
jp
pop
push
fmuls
inc
or
lods
jnp
xor
sub
sbb
in
dec
fs
or
std
loopne
xchg
fisubl
mov
add
mov
jne
xchg
cs
mov
adc
jmp
movsb
jp
xchg
adc
adc
test
orb
lahf
int
pop
and
lcall
sub
inc
in
push
mov
popf
cli
andl
arpl
sub
jmp
fwait
pop
movsb
mov
inc
stos
pop
ret
test
or
pop
jbe
inc
xchg
xchg
shlb
rclb
jmp
out
adc
test
mov
jb
jle
popf
cmp
negb
icebp
in
scas
xchg
push
rclb
aas
mov
mov
call
cmp
mov
pop
adc
xchg
add
lods
imul
dec
inc
mov
inc
out
sbb
and
pop
mov
lahf
jmp
dec
aam
ss
imul
add
sbb
inc
xor
das
gs
into
inc
cld
pop
push
aas
je
sbb
rolb
aas
pushl
mov
pop
xchg
sub
nop
xor
mov
rcll
cwtl
sti
repz
cld
in
es
xchg
mov
push
stc
mov
inc
nop
push
dec
push
ret
stc
adc
dec
subb
dec
xor
sub
pop
sahf
mov
lret
sbb
mov
pop
shll
mov
sbbb
adc
and
xor
fs
fnstenv
cmpsb
sahf
and
cmp
xor
sbb
addl
mov
cld
cmp
and
ror
adc
xor
mov
cltd
icebp
xor
inc
scas
test
sbb
ljmp
jmp
arpl
jo
mov
enter
pushf
xlat
xor
mov
pop
mov
inc
int
sub
gs
pop
ret
push
in
add
gs
jl
push
jno
jbe
inc
nop
xchg
jne
and
sub
flds
cli
cmc
cmc
out
repz
not
cmp
mov
stos
jns
dec
rolb
xchg
lock
fidivrl
std
and
sbb
es
negl
sbb
sbbb
test
sub
mov
pop
loopne
mov
sbb
hlt
jmp
in
cmp
js
fldln2
xor
addr16
push
pop
jl
mov
in
movsb
outsb
movsl
add
lds
shrb
fistps
test
adc
sub
cmp
mov
sub
xchg
cmp
inc
mov
mov
push
scas
fsubrp
adc
out
cmp
sub
add
add
push
mov
push
dec
leave
jnp
mov
mov
enter
pop
in
adc
xchg
out
cld
xlat
cmpsl
enter
mov
sbb
mov
xchg
mov
test
sbb
mov
in
pop
sbb
fs
cltd
pusha
sub
int3
test
push
sahf
sub
pop
insb
neg
sahf
xor
repnz
push
push
call
cltd
xchg
loop
in
mov
add
xor
jmp
jbe
cmp
div
fstpl
xchg
rcrb
cli
je
pusha
fstpt
and
xor
mov
jbe
scas
int
mov
mov
jg
jae
xchg
pushf
xchg
jb
shlb
fildll
loope
jg
fidivrl
jmp
hlt
adc
inc
jl
jo
mov
xor
or
xchg
pushf
sarl
mov
cli
dec
aad
lahf
test
das
insb
imul
sub
popa
bound
fisttpll
rclb
lahf
ljmp
incl
mov
daa
idiv
fs
jbe
call
rcll
xor
jnp
jmp
fcomps
int
stos
scas
loop
dec
das
ret
daa
jmp
stc
ret
idivl
mov
mov
pop
jmp
lock
mov
cmp
jecxz
sti
xchg
daa
mov
pop
sbb
lock
xchg
or
or
aad
aaa
xchg
jmp
lret
fldcw
mov
mov
or
iret
xchg
aam
int3
cmc
lret
mov
shlb
addr16
ss
push
insb
lahf
mov
nopl
mov
push
jl
inc
pop
in
adcb
aaa
jb
mov
rcrb
ljmp
iret
mov
iret
add
movsb
dec
push
cli
jge
xchg
imul
adc
mov
push
add
sub
fistl
lcall
je
ja
adc
ss
lods
xchg
xchg
pushf
popf
inc
movsb
pop
repnz
pop
rcrb
loope
das
out
add
cmp
xor
lods
bnd
xchg
icebp
outsb
ja
xor
arpl
fs
scas
xchg
mov
xchg
push
push
loop
jns
lret
ljmp
fmull
pop
fstpl
pop
xchg
jl
xorb
cmc
jb
inc
or
pushf
mov
and
pushf
shrb
out
lods
xchg
or
cmp
leave
push
outsb
dec
sbb
test
mov
sti
sub
sub
sahf
sub
xchg
shrl
cmp
dec
cwtl
int3
jbe
test
add
sub
xchg
ud1
add
add
jb
xor
cld
lahf
cmp
outsl
aam
xor
lds
insl
mov
nop
dec
lahf
jno
sahf
sub
ret
xor
xchg
inc
or
popf
pop
xchg
clc
xchg
imul
dec
fwait
in
shrl
push
adc
movsl
mov
xchg
rcll
mov
jmp
adc
push
cltd
lret
mov
into
and
jge
inc
adc
sbb
mov
mov
stc
cmp
and
nop
sub
sbb
inc
scas
addr16
jg
xlat
pop
out
xchg
push
cs
fidivrs
mov
mov
dec
lods
loop
loop
loopne
sbb
sti
cmpsl
and
fwait
orb
cmp
bound
test
ret
gs
dec
into
pop
movsl
icebp
outsb
into
sbb
xor
test
adcb
cmp
sti
mov
test
lret
ret
dec
loopne
push
repnz
fdivrl
push
js
dec
js
int3
mov
mov
dec
xchg
mov
xchg
adc
out
mov
xchg
notb
test
shlb
aaa
dec
or
inc
in
mov
xor
cmpsl
in
sbb
adc
movsb
cmpsb
push
arpl
pop
int
xor
adc
negl
mov
std
sbb
cmpsb
xor
jmp
push
les
adc
pop
jmp
push
ja
pop
in
in
jnp
push
pop
sub
fs
pop
insl
push
mov
or
pop
cltd
ret
push
cmp
mov
jo
fmuls
enter
jns
rclb
xor
pop
syscall
add
and
jg
data16
cmp
pop
and
sub
imul
mov
pusha
daa
jmp
daa
sub
xlat
inc
stos
hlt
xchg
and
inc
aaa
pushf
in
enter
dec
cwtl
cmp
cmp
dec
adc
sbb
outsb
ja
pop
loope
push
out
roll
xchg
rorl
and
jbe
aam
std
xchg
movl
fnstcw
dec
xchg
jge
rorb
outsl
xor
xchg
jno
mov
scas
outsl
push
repz
clc
pop
rolb
dec
jbe
jne
or
add
pop
out
into
jp
aad
jno
adc
cmp
dec
sub
or
insb
in
sbb
pop
hlt
repnz
add
out
push
fdivl
push
aas
sahf
loope
stc
loop
lea
xchg
xor
arpl
outsb
push
fildll
pop
pop
lret
test
sbb
push
push
ds
or
mov
mov
mulb
cmc
pop
and
and
add
hlt
ss
movsb
mov
pop
cmc
movsl
ret
inc
jle
mov
pop
mov
cmp
aaa
adc
push
mov
inc
cwtl
aas
in
adc
sahf
negl
fldl
pop
popf
or
sbb
in
je
pushf
cs
fs
xchg
es
push
adc
lret
xor
test
out
rcll
jecxz
shlb
gs
bound
lcall
or
cld
in
jge
addr16
and
ljmp
dec
adc
sbb
aam
popa
ljmp
outsl
ficoms
movsl
xchg
mov
imul
cld
cmp
mov
mov
mov
adc
add
or
and
push
fmuls
aam
lcall
mov
sbb
lea
in
or
jge
ret
add
mov
mov
jns
movl
mov
divb
setns
jp
sti
add
mov
aaa
movsl
jne
and
pop
call
icebp
in
pop
dec
inc
mov
out
xchg
push
insb
dec
inc
pop
dec
adc
mov
fnstenv
sub
loop
pop
inc
aas
jnp
insl
pop
loop
mov
fcoms
insl
mov
and
fcmovnb
mov
lea
jae
adc
das
push
hlt
push
push
ds
dec
loop
test
popf
aas
cmp
icebp
mov
stos
jo
pop
out
inc
sbb
mov
fcompl
test
pusha
adcl
cmc
orb
adc
inc
mov
inc
sbb
dec
mov
addr16
popa
pop
cmpsb
add
cwtl
andb
jg
dec
sbb
fstl
dec
das
sbb
sbb
sbbb
pop
sti
mov
mov
std
mov
mov
cmpsl
leave
inc
mov
fwait
dec
cmpsb
popa
repnz
jmp
cmpsb
add
dec
leave
cmp
and
sbbb
sub
mov
lea
mov
cmpsl
pusha
cwtl
lods
enter
insb
add
dec
dec
mov
in
adc
inc
test
ss
insl
inc
in
push
jbe
jne
data16
cmp
jae
adc
mov
fistl
mov
lahf
inc
and
and
nop
pop
lcall
loope
mov
scas
les
or
outsl
mov
out
add
dec
jno
mov
sub
inc
cli
mov
xchg
movsb
inc
mov
inc
nop
lret
cmc
test
cli
cmpsl
repnz
xor
lsl
push
stc
mov
push
mov
and
jp
xchg
mov
mov
int
add
push
sub
test
xor
lods
cmp
loopne
and
xor
add
ss
js
popf
aaa
dec
xchg
stos
cmp
xor
xchg
inc
cmc
movsb
or
in
shlb
cmp
push
jg
push
mov
jns
jp
xchg
pop
scas
andb
outsl
inc
fs
inc
mov
lret
imul
mov
clc
push
mov
mov
xorl
xor
out
cs
outsb
inc
cmpsb
jle
sbb
mov
or
adc
lcall
or
xor
dec
in
mov
iret
inc
pusha
arpl
fsubrl
pop
xchg
aam
cmp
movaps
out
je
push
or
cmpsb
jecxz
subb
and
cltd
mov
jmp
mov
sub
add
cmp
int
pusha
data16
repnz
call
jg
pop
xor
jns
mov
pop
adc
lods
sbb
mov
mov
dec
pop
jg
ljmp
aas
jae
aad
push
xchg
sbb
dec
xchg
jecxz
mov
mov
subb
mov
gs
xchg
cmp
jo
adc
out
or
push
ds
int
push
mov
pushf
mov
push
shlb
xchg
xchg
add
lock
xchg
js
bswap
adc
and
call
repnz
das
xor
sub
sub
repnz
pop
pop
shl
movsl
loopne
ret
dec
stc
and
iret
add
test
iret
pop
push
xchg
js
popf
xchg
xchg
and
scas
outsl
ret
cltd
mov
adc
cs
push
int3
mov
das
clc
or
push
enter
test
std
jbe
cmovnp
lahf
push
ja
and
sub
repz
mov
inc
lret
mov
push
ljmp
sub
sub
and
jo
jo
jecxz
jmp
imul
xchg
xchg
cmpsl
sub
pop
xlat
cmc
out
ret
push
test
inc
sub
inc
ret
adc
neg
movsb
inc
mov
add
pusha
fcmovu
push
cmc
xchg
push
push
sbbb
dec
int3
cmp
jne
dec
or
inc
cmp
xchg
or
add
mov
andl
adc
rolb
inc
and
in
push
in
mov
add
pop
repnz
negb
lds
xor
sub
inc
ljmp
cmp
inc
das
inc
js
aad
mov
or
cmp
add
int
lahf
sbb
in
loop
jne
push
jp
lcall
add
mov
and
shrb
mov
sbb
aaa
mov
xchg
mov
popl
loope
xorl
fsubrl
xchg
jle
xor
cmpsl
cmp
fwait
xor
xchg
sbb
inc
inc
and
xor
lahf
rcr
sbb
xor
push
sub
in
pop
fiaddl
mov
lret
in
rcrl
enter
scas
divb
int3
dec
or
adc
mov
jne
or
mov
push
xchg
push
xchg
mov
je
lcall
xchg
jle
dec
jns
or
loope
popf
sub
movhps
inc
adcb
inc
movsl
testl
push
push
inc
pusha
cmp
adc
mov
daa
cs
push
push
mov
shl
mov
xchg
cmc
aam
add
mov
popf
push
pop
leave
test
loope
mov
sar
fsubs
mov
sub
in
psllw
jbe
cmp
mov
inc
insb
xor
or
aam
xchg
xlat
cltd
cli
xchg
push
mov
cmp
stc
xor
jbe
in
jge
cwtl
das
xchg
push
data16
xor
pop
xchg
xchg
jo
dec
push
lea
movsb
jne
sbb
mov
push
xchg
pop
dec
mov
mov
sub
jbe
int
pushf
rolb
and
adc
mov
test
lcall
icebp
push
fdiv
gs
sahf
outsl
imul
popf
repz
cmp
mov
xchg
mov
sub
pop
cwtl
sub
push
mov
movb
inc
pop
and
sti
add
fildl
cmp
xor
in
daa
mov
out
add
les
repnz
cmp
jge
mov
xor
cmp
push
mov
push
out
dec
lock
push
shlb
add
and
imul
clc
adc
inc
rcrb
push
stc
and
cmpsl
dec
loope
shlb
sub
cmp
adc
out
pop
sub
xlat
lds
popa
pushf
and
mov
addr16
inc
xor
sahf
mov
vaesdec
cmp
popa
mov
jbe
ljmp
sub
adc
add
cmpsl
jae
inc
jo,pn
jmp
mov
jo
pop
in
jbe
int3
lahf
and
dec
jmp
fistpl
les
aad
sbb
fwait
sbb
aam
sbb
addb
push
jg
inc
cmp
mov
or
mull
cltd
ljmp
or
lcall
movb
vmread
fdivs
inc
cmp
mov
sbb
mov
cltd
sub
rclb
cmp
or
cmp
test
lock
xchg
dec
adc
cmp
js
adc
rolb
xchg
ret
clc
jmp
nop
xor
push
jo
scas
scas
mul
ja
cmpsl
js
dec
bnd
in
pop
xchg
aad
cmp
sub
out
jne
loop
push
jge
jno
into
mov
add
imul
sub
ret
jl
adc
jno
lds
push
aam
sbb
mov
sarb
fwait
fs
and
cmp
xchg
mov
shl
push
out
sbb
mov
gs
add
ljmp
hlt
divb
outsl
inc
sub
push
push
js
fmuls
ss
mov
jb
rcll
mov
out
add
jae
xor
cld
jnp
inc
scas
xchg
lock
inc
push
xor
cs
lods
out
mov
addr16
jne
push
jecxz
pop
or
pop
jecxz
stos
test
add
aaa
mov
dec
mov
push
mov
pop
add
xor
aaa
insl
adc
psraw
ss
mov
pop
pop
ss
lods
mov
das
jge,pt
mov
ss
or
push
data16
sarb
enter
inc
shrl
addr16
icebp
lret
mov
mov
fdivrs
in
adc
xor
into
add
movsl
je
dec
lcall
dec
inc
inc
pop
test
sbb
shll
test
xchg
fstpt
inc
and
pop
nop
jno
mov
push
pop
clc
bound
sub
adc
rclb
les
popf
test
in
fisubrs
sub
repnz
inc
jnp
xor
sub
sbb
or
scas
ljmp
insl
lds
jge
or
js
dec
inc
fisttps
adc
es
dec
jecxz
or
push
nop
shr
movsb
push
cld
inc
mov
pop
push
ret
or
mov
lret
leave
sub
jo
or
sbb
in
mov
push
ret
mov
sarl
cmp
insl
rolb
dec
ja
xor
inc
mov
int3
xor
add
ljmp
mov
leave
pop
gs
sbb
iret
cmpl
add
js
or
lock
sub
int
outsl
leave
pop
movsl
xchg
lret
xchg
inc
mov
les
int3
mov
mov
cli
jae
std
cs
mov
inc
sbb
or
cmp
stos
fwait
lods
aam
clc
hlt
mov
in
ljmp
clc
jo
mov
stos
cmp
fs
mov
xchg
push
cld
es
test
xchg
mov
cmp
rorl
cmpb
das
cli
jg
xchg
jo
dec
std
scas
cmpl
out
push
mov
pop
push
shlb
push
cmc
push
adc
ret
lea
mov
jle
jl
inc
add
jbe
mov
rorb
push
cmp
xor
cmc
xlat
push
seta
adc
push
mov
repz
xchg
rclb
loopne
cmpsl
out
ret
cmp
out
into
in
mov
cmc
jle
imul
pop
ficoml
mov
fwait
sbb
push
insl
inc
sub
lock
mov
sub
imul
dec
dec
mov
mov
pop
jbe
adc
jbe
xor
xor
in
in
pop
out
mov
push
push
lods
xor
add
leave
adcl
sbb
sub
dec
lds
lret
mov
lret
test
jb
js
aam
jg
cld
lcall
es
imul
sbb
cmpsl
sub
push
popa
out
out
dec
int3
adc
pop
sub
xor
leave
loopne
adc
daa
movsl
mov
mov
scas
xchg
scas
mov
pop
aam
fadd
mov
test
loope
stos
js
mov
repz
cmpsl
imul
ds
stos
sub
inc
add
in
adc
lret
lock
call
xor
push
xchg
cwtl
mov
loopne
and
leave
xorb
sub
clc
adc
pop
clc
mov
or
cmc
xlat
jg
pushf
aaa
lods
mov
adc
mov
aam
stc
xor
push
shll
out
and
out
cmp
notl
ja
or
xor
enter
lock
sbb
jg
xchg
cmpsl
call
les
mov
jmp
or
jmp
or
mov
movsb
jne
and
sbb
fcmovnb
add
imul
cltd
outsl
lcall
adc
or
mov
insb
cmp
sbb
mov
and
mov
popa
add
or
xchg
jno
xchg
ficompl
adc
pushf
mov
push
loope
fists
cmpsb
dec
in
int
lods
lods
mov
inc
xchg
into
outsl
popa
ss
mull
sbb
sti
add
lahf
dec
rorl
mov
test
testl
test
jle
inc
push
add
rcl
lods
fiadds
gs
jo
inc
mov
arpl
adc
pop
and
mov
in
enter
pop
mov
xchg
adc
outsl
sub
or
test
negl
stc
enter
mov
mov
xor
inc
sbb
cmpb
mov
mov
ret
mov
or
adc
out
insl
bound
pop
dec
mov
add
test
andl
dec
xorl
lods
enter
cmpb
cmp
repnz
sub
icebp
loopne
adcl
adc
ficoml
orb
sbb
cltd
or
sub
sub
cmp
mov
scas
push
sub
push
xor
out
jb
lea
dec
pop
mov
into
in
shll
leave
nop
popa
mov
or
mov
sub
fistpl
and
cli
fdivl
popa
push
lahf
and
rcll
leave
imul
cmp
stos
stc
add
add
mov
and
ret
pop
sbb
cmp
pop
inc
inc
and
pushf
cmpsl
mov
ret
loope
add
les
test
xor
ret
popf
insl
add
fs
adc
add
pop
inc
jbe
mov
das
pop
lds
adc
dec
rorl
out
dec
sarl
cmp
mov
enter
dec
cmc
xor
adc
notb
xor
cmp
std
inc
dec
je
xor
pusha
js
mov
mov
inc
mov
jne
mov
gs
dec
out
lock
icebp
cmp
js
fisttpll
fadd
enter
pushl
sub
aaa
cmp
lret
jg
sub
lods
inc
cmpsb
arpl
cli
and
add
or
mov
mov
cmpsb
pushf
inc
cmc
inc
cs
bound
out
mov
mov
push
push
adc
imul
nop
add
mov
cmp
stos
testl
add
fcmovbe
insl
fwait
cmp
fcomi
jno
dec
sub
sub
adc
cs
add
ret
dec
adc
aad
push
scas
mov
sub
cmpsl
pop
jbe
loopne
jl
pop
and
pop
xor
stos
into
inc
push
mov
mov
cmc
inc
lahf
aad
ss
hlt
push
sbb
xlat
lods
fisubrl
and
mov
mov
iret
jne
pop
push
ja
mov
cmpl
adc
pop
loop
jle
mov
adc
cmp
mov
and
xchg
add
jb
cmpsl
pop
ss
scas
popf
xchg
adc
sbb
ficoml
xchg
sub
mov
mov
loopne
or
or
lea
cmpsb
clc
adc
in
jp
push
test
xlat
loope
fwait
or
xchg
xchg
inc
and
push
aaa
nop
lahf
pop
sub
sub
jae
inc
pop
push
out
mov
sbb
xchg
push
sub
jns
pop
in
outsb
cmp
in
cmp
lahf
push
clc
pop
out
adc
and
lcall
aam
insb
ret
out
cmp
sbb
cmp
fsubrs
or
pop
imul
inc
fst
xor
jae
push
mov
mov
aas
gs
dec
cwtl
add
xchg
jle
dec
jbe
fwait
icebp
imulb
jbe
jb
push
dec
fs
in
stc
loopne
lahf
idivb
dec
jne
and
push
push
inc
dec
inc
loopne
ret
mov
jmp
or
div
jb
sub
adc
pop
pushf
insl
and
ljmp
lcall
cmp
pop
das
cmpsb
or
test
mov
xor
add
inc
mov
out
pop
call
scas
stc
pop
inc
mov
out
cmp
push
shrl
in
or
cmp
mov
xor
cmp
mov
out
pop
int3
dec
stos
iret
cmp
repnz
fs
repz
loope
mov
cli
inc
dec
enter
stc
push
pop
mov
mov
repnz
push
jns
jg
sbb
add
dec
mov
mov
in
lahf
cld
cs
and
cmpl
adc
movsb
jecxz
jae
inc
pop
fildll
scas
mov
xchg
out
divl
int
mov
outsb
movsb
mov
lahf
mov
js
mov
fsubl
mov
addr16
bound
fisubrl
dec
cmp
or
lock
std
aad
movsl
add
jne
rcll
inc
stos
jp
pop
xlat
je
jbe
cmpsb
jae
jg
popf
push
push
adc
movsb
outsl
mov
push
rolb
pop
xor
fcoml
mov
adcb
daa
clc
jmp
addr16
sbb
fmul
out
movsb
es
sub
lret
and
dec
sub
jecxz
insl
dec
or
fwait
pop
and
sahf
sub
add
push
mov
leave
divl
inc
pop
mov
cmp
jno
jle
push
xor
stos
fwait
cmp
stos
or
jecxz
dec
cs
hlt
stc
iret
xor
fdivrl
push
xor
push
cmpsl
cmc
xchg
insl
mov
repnz
roll
movsl
cmp
cmp
in
shlw
std
cmp
jl
xchg
stos
jp
or
xor
dec
push
aam
add
mov
sbb
fsubrl
push
push
or
rorb
mov
js
add
xchg
xchg
jecxz
sub
mov
and
in
test
dec
shlb
push
adc
andb
pop
clc
lods
xchg
call
cli
sbb
dec
cwtl
hlt
testb
inc
inc
fxch
subb
cmpsl
push
mov
lds
pop
loopne
cmp
aam
cwtl
sub
sub
pusha
out
mov
ja
test
xchg
or
fwait
dec
push
inc
lcall
cld
adc
cli
jb
xchg
loop
xchg
inc
cld
nop
stc
mov
inc
sbb
or
and
outsl
mov
inc
and
and
test
mov
xor
sub
cmp
rcrb
daa
push
dec
sub
roll
inc
fdivp
call
or
popf
sbb
jae
int
inc
int3
xor
xor
mov
adc
jne
sar
aam
push
add
dec
cmpsb
nop
idivl
out
mov
dec
jmp
ss
insb
ret
lret
pop
shlb
mov
mov
push
dec
arpl
rcll
out
fwait
cli
push
loopne
jecxz
aaa
sub
into
sub
jp
or
imul
mov
fxch
fsts
divb
dec
cmp
pushf
call
pop
sbb
js
push
xor
sahf
mov
cmpsb
and
fnsave
pop
sbb
adc
xchg
cmp
pop
mov
ds
js
aam
cs
jl
jmp
and
mov
test
gs
std
bound
dec
cli
mov
add
les
and
lods
jnp
and
fldl
das
fidivs
or
dec
mov
xchg
daa
inc
xor
cmp
jnp
inc
mov
cltd
inc
or
jno
jl
jne
cmp
fimuls
enter
mov
dec
sti
jno
sarb
movsb
pop
and
dec
jae
rclb
mov
movsl
in
push
mov
mov
jnp
cmp
jno
stos
inc
pop
xchg
in
mov
sbb
ja
ja
or
mov
lret
pushf
jl
sbb
sub
xchg
sahf
nop
pop
lea
jae
adc
fcompl
enter
dec
push
sub
or
and
dec
rol
sbb
push
mov
scas
jmp
dec
inc
lahf
and
sbb
insl
lahf
and
jecxz
jge
xlat
mov
inc
std
fst
fimull
cmp
cmp
and
mov
jp
jns
xor
cmp
dec
nop
bound
sub
jge
rcrl
xchg
xlat
fst
ret
bound
mov
in
aam
inc
mov
sbb
lods
ret
int
outsb
int
lock
negb
jns
int
shll
mov
xchg
into
pop
pop
icebp
push
test
ret
stos
xor
ss
adc
gs
lcall
leave
adc
or
shlb
bound
clc
add
mov
jecxz
xchg
mov
lret
jmp
pop
aam
jge
pop
xor
mov
ret
imul
cmpsl
repz
movsb
outsl
test
dec
pop
addb
adc
shrb
or
lock
xchg
and
ret
inc
stos
call
pop
jle
sbbb
sbb
cmc
ficompl
test
pusha
stos
imul
xchg
push
xor
aas
cltd
pop
xor
push
cmpsl
adc
sub
in
or
sbb
lcall
sbb
int3
adc
int
pop
jge
cmp
sbb
dec
sbb
adc
out
cmpsb
jle
jle
push
decl
mov
mov
outsb
cmp
or
sti
vmovapd
and
jl
addr16
aaa
mov
repz
adc
jge
lahf
nop
mov
enter
xchg
rcrl
xor
and
pop
insb
cmp
add
xlat
addr16
jmp
rcl
cwtl
mov
mov
pop
add
stc
fwait
add
int
or
or
in
mov
add
dec
or
mov
call
std
inc
push
inc
repz
jne
cmc
repnz
pop
imul
pushf
insl
xchg
sbb
push
hlt
jae
jmp
icebp
sbb
mov
in
js
push
setae
xor
rol
push
jne
add
inc
pop
pop
cmp
call
test
dec
push
xchg
sbb
gs
jb
insb
sub
sbb
and
cmp
add
jmp
mov
adc
lea
stc
je
mov
imul
fcmovne
mov
test
and
mov
cmp
daa
mov
mov
roll
mov
test
daa
cwtl
sub
xchg
push
inc
ja
mov
in
sub
mov
jno
add
jb
mov
push
jmp
popa
out
cmpsb
leave
lahf
inc
stc
push
loopne
xchg
lock
in
shrl
lcall
shrb
sub
aam
inc
in
xlat
dec
jge
js
enter
cld
adc
rcrl
and
mov
bound
and
stc
scas
xchg
cs
inc
fistps
push
adc
stos
xchg
jbe
jmp
cltd
movsb
fsub
insb
jb
orb
xor
std
std
sti
nop
int
push
mov
into
in
inc
cmp
mov
add
or
cmp
or
sub
adc
pop
inc
movsl
sarl
lock
cmp
ret
ja
lock
loope
dec
adc
push
inc
movsb
cmp
adc
js
cwtl
or
mov
inc
les
pop
lds
lahf
lret
mov
xor
dec
xor
lods
sub
pop
aaa
loop
push
into
sbb
mov
lods
cmc
mov
ja
stos
addb
cmp
das
xchg
pop
dec
push
mov
add
cmpsl
push
mov
test
xchg
mov
std
leave
jnp
jmp
or
dec
mov
and
iret
cmp
notl
or
xor
std
or
idivb
push
sti
test
outsl
mov
les
stc
test
push
sbb
adc
inc
cmpsb
pop
jecxz
rcll
fisubs
mov
mov
push
data16
add
mov
sbb
mov
mov
dec
rcr
into
lret
ja
or
mov
mov
mov
and
mov
cmpsb
sbb
push
xor
into
cmp
cmp
add
xchg
inc
fs
jmp
inc
adc
ja
stos
mov
push
cs
xchg
push
fucomp
pop
out
xor
mov
xor
fdivl
xchg
jmp
out
mov
loop
xorl
fdivrl
sahf
push
lds
mov
out
add
inc
notb
mov
add
cmp
das
jle
ret
xor
nop
and
xor
inc
push
cmc
stos
popa
sbb
hlt
push
test
push
sbb
sub
out
and
test
push
jne
pop
mov
xor
pusha
fldpi
and
pop
bound
fsubl
jle
mov
sbb
dec
or
sti
add
inc
push
xchg
mov
ss
sti
xor
outsb
inc
bound
jns
push
into
ljmp
or
push
out
ja
push
popf
imul
loop
xchg
pop
cwtl
xchg
sbb
mov
jle
test
imul
and
add
or
sbb
aas
mov
mov
jo
jp
xor
imul
or
cmpsb
pop
popa
mov
dec
dec
sbb
pushf
add
inc
sub
icebp
push
repz
rcr
fdivrl
mov
mov
je
fcmove
mov
arpl
jle
ficompl
lret
out
scas
hlt
mov
and
jo
gs
xor
aas
xchg
gs
jb
push
xor
ja
in
xchg
lret
ljmp
jge
pop
xchg
mov
sbb
push
push
sub
imul
mov
fidivrs
xchg
add
or
stc
arpl
adc
leave
lods
mov
pusha
xor
jge
and
pushf
fcompl
sti
test
or
stos
push
cmpsb
jecxz
sub
dec
push
jns
movsb
add
fistpl
dec
push
inc
and
fcomp
sbb
push
dec
lock
in
push
ffreep
dec
outsb
dec
jmp
mov
mov
jbe
adc
pop
adc
pop
jg
je
fcmovb
mov
out
xor
movsb
adc
fnstenv
lret
jg
xchg
lcall
push
push
pushf
icebp
stos
cmp
mov
test
lock
mov
mov
dec
cmp
icebp
insl
or
mov
dec
inc
stc
or
mov
imul
fbld
jmp
hlt
aaa
out
dec
sub
cmp
call
push
ds
repnz
or
test
mov
inc
dec
jo
jns
aad
lcall
stos
scas
shrb
adc
sbb
movsl
xchg
adc
loope
repz
dec
lea
sbb
data16
jae
cltd
test
aam
inc
out
outsl
cmovbe
sbb
mov
das
jge
imul
ss
icebp
push
out
pop
sub
push
in
cmc
repz
add
cmpsb
mov
inc
sub
add
insl
leave
xchg
inc
ret
cmp
jns
pop
jp
lds
jae
xorl
and
outsl
cmp
cli
iret
sbb
xlat
lods
mov
push
loope
mov
dec
test
xchg
mov
test
sub
jo
daa
popf
sub
sub
hlt
xchg
cmc
lret
or
mov
cld
fnstenv
mov
sub
add
cmp
mov
sub
xchg
enter
dec
cmp
jmp
es
sbb
lret
movsl
pop
inc
lcall
fbstp
pop
imul
stos
jo
mov
fs
pop
push
pop
sahf
ljmp
in
lods
xor
rep
sbb
lds
stos
pop
insl
xchg
mov
adcb
std
or
jne
push
xor
cmp
pop
fcomp
lcall
mov
mov
cmp
mov
stc
sbb
cmp
pop
xchg
repnz
inc
daa
in
leave
scas
out
shrd
orl
and
mov
cmp
push
bound
push
inc
ljmp
xor
adc
mov
int3
push
pop
cmp
lds
push
xchg
ja
push
in
jae
sti
mov
push
jb
fs
aas
jbe
ret
inc
sub
adc
mov
out
insb
sarl
aam
shll
in
sbb
dec
pushf
sub
lods
je
sub
es
repz
pop
mov
adc
pop
sub
fcmove
sbb
fsubr
xchg
cmc
iret
cmp
into
cmp
cld
loop
fnsave
sahf
push
fdivs
xor
lcall
and
sbb
sub
add
ret
clc
sub
mov
push
out
xchg
ret
mov
xchg
jg
jge
sub
jne
mov
movsb
mov
mov
movsl
fstpt
clc
aam
testb
fidivrs
cmp
stos
xchg
ds
sbb
mov
imul
mov
dec
int
dec
in
in
imul
mov
sbb
or
loope
pop
jns
jns
in
aam
inc
jno
sub
movb
div
and
adc
lds
pop
test
adc
pop
cmp
jecxz
jnp
jmp
jge
add
xchg
push
mov
shrb
lret
and
paddsb
stos
lret
mov
jae
mov
cs
mov
sub
adc
jbe
lods
fidivrl
in
lcall
xor
dec
hlt
push
push
add
ljmp
sbb
sahf
in
call
call
inc
cmpsl
cltd
imul
sbb
ds
lret
add
mov
jbe
fsubs
sarb
jne
fdiv
dec
or
idivl
push
xchg
xor
xchg
mov
push
pop
pop
mov
sti
outsl
out
push
mov
sbbl
jmp
ss
mov
push
or
dec
cmc
or
cmp
out
sub
ja
js
mov
addr16
lds
pop
test
nop
shlb
stc
sub
adc
xchg
mov
push
aaa
add
xor
pop
in
in
xchg
shlb
movsb
push
xchg
icebp
mov
mov
mov
inc
pop
cli
and
enter
or
jo
inc
pop
lock
sub
lods
cmpsb
hlt
loope
nop
dec
adc
cmpsl
lods
stos
inc
cmp
mov
rcll
aaa
dec
dec
int3
cmp
das
aam
fcmovbe
fdivrs
iret
ja
idivl
xorb
out
xor
inc
js
imulb
sbb
xchg
xchg
push
fsts
jb
movsl
pop
mov
loope
xor
faddl
das
subl
popa
push
scas
sub
sub
ds
mov
dec
jle
filds
lock
jmp
ret
fdiv
push
pop
jnp
xchg
cmp
cmp
xor
push
dec
es
mov
inc
and
in
sbb
xor
jl
divl
mov
out
rcll
mov
inc
scas
insb
inc
das
pop
cmpsb
aam
shl
jne
xlat
pop
fdivr
or
dec
mov
stc
mov
das
bound
cmpsb
out
ds
in
les
inc
out
push
jmp
imull
adc
mov
or
sub
fnsave
and
mov
inc
jl
pop
fs
or
repnz
je
mov
mov
adc
mov
stos
ljmp
fidivrs
xor
call
push
jne
pushf
dec
lock
mov
adc
scas
ja
xchg
sti
fnstenv
movl
ror
add
icebp
jmp
jmp
stos
jne
fcmovu
pop
ffree
sbb
sti
ljmp
pop
inc
mov
lret
mov
inc
pop
jg
sbb
sahf
aad
call
jns
xchg
dec
js
std
popa
rcr
test
stos
pop
cmpl
dec
hlt
pop
adc
rolb
pusha
movb
in
add
imul
xor
fwait
bound
mov
lea
xchg
inc
push
jmp
popa
les
in
add
rcrl
rcrb
mov
fbld
sarb
or
mov
xor
push
test
jge
and
sub
xor
dec
stos
imul
fistpl
stos
cmp
push
or
cltd
int3
lea
or
repz
cmp
push
int
jl
fisubl
daa
inc
and
je
out
test
outsb
out
aas
subb
aaa
push
sbb
les
or
mov
in
adc
sarb
ds
and
pop
popa
std
icebp
sub
or
fiaddl
into
outsb
mov
mov
psllq
mov
cmpl
mov
pop
add
repnz
cmp
pop
mov
mov
inc
cmpb
mov
xor
mov
adc
lea
sub
or
fstl
movsb
jnp
sbb
idivb
xchg
sbb
jmp
and
mov
ret
pop
push
adc
repnz
cwtl
or
adc
or
mov
sbb
gs
jbe
cltd
mov
pop
in
repnz
fcomps
pop
pop
sbb
push
sub
das
pop
enter
aaa
mov
fdivs
jo
inc
hlt
dec
lock
cmp
out
dec
fistl
outsl
sti
pop
out
enter
lahf
das
rorb
loopne
mov
pusha
add
mov
or
pusha
and
mov
jo
clc
mov
ja
jbe
fisubs
dec
mov
pop
hlt
lret
sbb
jne
imul
lds
xor
jbe
out
scas
bound
adc
pop
xchg
dec
pop
lock
jbe
adc
push
loop
mov
mov
out
sub
cltd
mov
adc
cltd
test
hlt
add
cmc
cmp
cltd
aam
fnstenv
insl
and
call
sarl
inc
inc
cmp
jle
pop
sbb
jl
push
sub
or
adcl
pop
sbb
xor
int
ja
pop
cld
imul
cltd
stos
add
jge
and
ja
cld
popf
adcb
js
pop
jp
js
orl
jne
jb
outsb
movsb
and
push
js
sub
dec
mov
test
in
repz
fisubs
add
stos
sahf
mov
ljmp
dec
inc
mov
rcll
testb
mov
cltd
lahf
pop
mov
jge
shlb
aas
sbb
mov
adc
imulb
leave
pop
lock
xchg
sbb
mov
mov
xchg
js
cmp
push
sbb
jl
rorb
and
daa
ret
fs
mov
sbb
imul
or
add
sbb
dec
bound
cmp
out
test
pop
mov
aaa
das
or
add
mov
push
imul
fistl
out
movsl
scas
push
daa
inc
das
iret
sti
fwait
stos
cmp
adc
sbb
movsl
les
xor
mov
xor
push
xchg
mov
test
dec
inc
xchg
sbb
mov
adc
es
cmp
cltd
stc
add
mov
pop
int
cmp
jne
mov
bound
cli
push
lahf
rcr
sbb
mov
bound
sub
jnp
cmpsl
jno
push
popa
int
xchg
add
jae
fidivs
mov
push
roll
insb
jge
pop
adc
jmp
movsl
xor
inc
xor
ret
sub
mov
loope
insl
outsb
addr16
dec
dec
dec
rorl
pop
popf
outsb
cmp
xchg
test
inc
jg
inc
lds
xor
dec
pusha
pushf
add
cli
dec
and
cltd
std
sub
pushf
xor
ret
xorb
sub
push
mov
jne
pop
call
daa
cwtl
cwtl
or
dec
or
inc
or
or
lock
inc
add
enter
pop
addr16
push
mov
nop
out
mov
xor
pushf
sub
mov
nop
xchg
mov
push
xor
and
cltd
adc
addr16
adc
push
sub
inc
adc
clc
mov
sbb
inc
mov
leave
pop
add
sub
jbe
cld
divb
insb
pop
sbbl
div
mov
cmpsl
or
and
push
mov
fnsave
push
daa
add
scas
out
jbe
push
mov
loopne
mov
mov
out
clc
sub
out
adc
push
aas
mov
sbb
jo
xchg
movl
mov
pop
lea
mov
shlb
push
lods
test
test
inc
mov
pslld
push
arpl
push
roll
jnp
sbb
xchg
xchg
rolb
inc
ja
mov
mov
mov
cltd
jecxz
sahf
cmp
mov
mov
mov
cmp
xchg
jo
and
inc
cs
pop
mov
sbb
nop
xchg
lret
jmp
sti
xlat
cmp
enter
pop
out
adc
inc
test
mov
pop
mov
lds
mov
lock
std
add
cld
xchg
sub
push
inc
mov
and
or
adc
call
sub
add
add
inc
loop
xor
test
scas
pop
xchg
fisubrs
sub
or
mov
jnp
insb
mov
pop
lret
sbb
aam
mov
std
mov
icebp
pushf
jle
pop
je
or
daa
pop
or
js
imul
sbb
movsl
dec
xor
push
fldt
xor
ja
xor
lods
scas
mov
adc
lods
or
and
lahf
sbb
aaa
scas
adc
dec
test
and
sbb
popf
xchg
cmp
pop
cmpl
inc
test
scas
loopne
mov
xchg
sahf
lret
in
push
sti
out
add
data16
push
push
out
outsb
fcom
push
ds
mov
std
mov
insl
sbb
rep
xor
xor
shrl
pop
adc
sti
adc
xchg
xchg
pop
loop
ja
adc
pop
jnp
mov
dec
pop
xchg
les
jp
mov
orb
std
or
sbb
nop
cmp
jno
xor
mul
jb
imul
push
sbb
test
cwtl
cmp
fisubs
dec
leave
add
mov
or
mov
ljmp
or
insl
sarl
outsb
mov
xchg
push
lods
mov
out
imul
sub
jno
pop
xor
int3
or
mov
pop
int3
ljmp
aaa
lods
lahf
push
and
cmp
sbb
je
adc
pop
pop
pop
int
adc
jl
pop
ss
ljmp
jl
and
sub
or
sbbb
fidivrl
hlt
inc
aaa
cmc
xor
fs
sub
shll
fdivrp
dec
scas
dec
div
xor
mov
shl
mov
xchg
xor
orb
pop
mov
push
je
push
dec
sbb
ljmp
pop
adc
add
xor
es
loope
and
cmpsb
sbb
in
push
fmuls
std
mov
jl
push
mov
jne
std
jmp
imul
jne
insl
lret
push
addb
cmp
movsb
gs
jne
mov
jge
je
iret
adc
xor
insb
cmp
paddsw
push
fnstenv
pop
adc
mov
add
adc
je
inc
pushf
rclb
stc
xchg
roll
inc
sub
and
sub
xor
pop
jns
test
inc
popl
cli
dec
fisubrs
popa
jne
fstpl
in
test
mov
test
ss
stos
insb
lcall
leave
inc
data16
sbb
mov
dec
mov
jbe
rolb
leave
xor
fmul
rolb
jl
inc
ret
clc
and
xor
ficoml
push
ret
inc
xor
mov
mov
pop
mov
xor
pop
fdivrl
movsl
sti
or
in
sub
jae
andl
sahf
xor
outsl
jnp
inc
enter
std
adc
cld
xor
cld
movsl
into
into
in
cld
mov
fsts
xchg
mov
lods
cmp
jp
icebp
push
mov
jmp
in
fldl
rorl
fildll
dec
lock
push
aam
push
pop
dec
dec
stc
out
testb
lds
hlt
aas
add
jns
push
push
xchg
or
mov
ja
pusha
or
xchg
or
mov
cmp
jp
popl
dec
nop
jb
dec
mov
mov
dec
mov
out
adc
cli
xor
fnstsw
cmpsl
dec
mov
mov
mov
iret
add
inc
loop
or
movsl
sub
jge
shll
adc
mov
lret
jl
inc
outsl
xor
inc
dec
cmp
push
xbegin
mov
jecxz
mov
mov
mov
cmp
faddl
mov
stos
xorl
sub
add
leave
out
inc
sbb
pop
cmpsl
stos
jg
push
daa
addr16
in
imul
out
aam
gs
bnd
inc
xchg
mov
setne
jle
scas
cmpsb
mov
js
push
jnp
adc
test
or
jne
push
lea
add
adc
fidivl
mov
ds
fwait
in
jp
movsb
and
or
jne
mov
repnz
add
lods
mov
xlat
jns
jg
push
or
sub
js
iret
es
sub
ds
xor
test
orb
inc
adc
sbb
je
aad
mov
out
inc
flds
es
pop
stc
ds
dec
aas
sub
dec
xchg
push
xor
add
cld
and
popa
xchg
sbb
idivl
add
subl
popf
insl
or
test
pushf
dec
ret
fcomp
pushf
mov
adc
cli
mov
stc
cwtl
dec
hlt
insb
adc
movsb
fidivrl
inc
xchg
test
jp
push
xor
inc
js
not
cmp
adc
mov
pop
call
cmp
cmp
scas
outsl
push
sahf
xchg
push
ljmp
cmp
pop
dec
xor
jge
or
xlat
or
cli
cld
inc
cmp
les
ss
in
loop
fs
out
xchg
adc
fisttps
clc
pop
mov
mov
or
push
sub
pop
je
xchg
add
aad
frstor
jbe
ljmp
xor
sbb
and
jle
and
push
adc
ja
add
mov
rcr
jb
call
ret
fstps
ds
sub
push
enter
and
and
cmpl
fdivs
pusha
push
cld
idivl
das
iret
andb
inc
xlat
or
in
push
jb
rcll
mov
mov
and
scas
cmpl
inc
push
and
fcmovnu
jbe
mov
arpl
push
push
dec
ds
sbb
xchg
daa
cld
adcl
addb
mov
out
dec
mov
and
mov
rcll
ss
in
push
rcll
call
mov
mov
lret
out
insb
jl
and
fwait
lds
xor
pop
mov
or
dec
insb
es
leave
jns
push
jnp
dec
lret
jp
nop
sbb
fs
ds
jbe
sarb
mov
cmpsb
xor
inc
orl
vpshlq
dec
push
xchg
cwtl
cmpsl
or
adc
std
hlt
sub
mov
dec
inc
fwait
test
sbb
iret
mov
stos
sub
inc
clc
je
push
mov
and
xchg
dec
dec
jno
mov
jae
push
and
ja
cli
or
mov
arpl
cltd
in
pusha
adc
ljmp
mov
push
or
leave
xlat
pushf
pop
outsb
add
cmpsb
mov
dec
inc
and
or
jp
inc
cmp
push
xchg
mov
jge
push
ret
xchg
fstpt
jns
mov
iret
loop
loop
push
mov
sarl
outsb
add
and
dec
dec
push
movsb
add
lock
push
and
scas
sbb
mov
inc
inc
jne
movsl
and
add
push
sub
mov
scas
pop
push
sbb
test
push
test
dec
xchg
cmpsl
push
jle
test
xor
rol
adc
stc
adc
arpl
fdivs
nop
mov
fs
lea
xchg
push
iret
divl
jl
test
rclb
das
mov
into
sub
bound
push
mov
push
push
test
adc
dec
in
shl
int
mov
and
call
cmp
rorl
inc
loopne
in
nop
shll
arpl
outsl
les
cmpb
sar
and
icebp
test
out
adc
sahf
inc
inc
lret
lock
cli
les
es
xor
mov
lea
inc
mov
mov
adc
xor
adc
dec
sbb
mov
pop
das
insl
or
in
jl
cltd
xorb
xchg
fcmove
cmp
imul
es
das
or
or
jbe
rorl
loopne
test
ficoml
je
dec
cld
stos
ret
lea
jne
mov
sbb
jmp
int3
fcompl
pop
xlat
add
sti
jnp
ja
data16
xor
fcmovu
mov
in
in
xor
loope
jae
xlat
cltd
popl
popf
popa
and
pop
je
lret
add
cmp
out
dec
in
push
pop
std
sbb
movsl
mov
pop
aaa
cmp
or
arpl
xchg
int
adc
das
pushf
lcall
ret
pop
pusha
cli
pop
fcmove
xchg
pusha
push
sbb
xlat
adc
mov
pop
jmp
enter
loopne
lods
or
jp
jno
xchg
incl
imul
jns
cltd
out
movsb
lock
movsl
add
stc
ljmp
pop
ljmp
dec
iret
sbb
hlt
cmc
mov
pop
adc
into
in
dec
stos
insl
xor
dec
and
into
sub
or
movsl
jae
or
mov
and
mov
in
xor
push
xor
arpl
test
dec
mov
sbb
cmp
scas
clc
push
sbb
or
loop
push
std
pop
les
cmp
cmpsl
int
fcomps
add
and
mov
pop
mov
inc
aam
and
pushl
dec
out
mov
stos
xchg
incb
cli
mov
lea
addr16
xor
or
jnp
out
pop
xchg
and
movsl
mov
js
js
dec
or
push
xchg
data16
sbb
sub
pop
notb
or
insb
push
cmp
dec
sub
add
sub
es
xchg
popf
xchg
loopne
push
push
adc
ret
dec
cmp
adc
fnstenv
mov
test
mov
sub
cmp
jl
mov
in
pop
loope
pop
orb
pop
sti
push
xchg
sub
dec
xchg
add
or
shrb
mov
into
mov
inc
mov
sub
and
adc
xchg
jnp
js
pop
aaa
sar
dec
jo
mov
stc
pop
hlt
pop
mov
xchg
inc
jge
jo
repnz
jbe
fidivrl
in
add
iret
gs
imul
loop
testl
data16
fstpt
cmp
jbe
mov
push
push
add
pop
mov
sbb
push
movswl
mov
xchg
outsb
xor
xchg
adc
xlat
and
mov
inc
pop
dec
dec
jp
sub
jbe
inc
pop
cs
dec
test
mov
or
out
or
jecxz
xor
sub
cwtl
andl
jmp
ja
mov
add
mov
fstps
xor
cmp
adc
aaa
jle
sub
mov
mov
cmc
mov
repnz
mov
cmp
scas
subb
lahf
daa
push
or
fsubs
in
xchg
in
mov
xchg
or
push
addr16
xchg
mov
push
arpl
sbb
inc
out
cmp
int3
cs
out
push
mov
cmp
fsubr
lds
test
daa
xchg
add
rol
out
xchg
sbb
fmulp
arpl
leave
sbb
clc
or
pusha
lock
mov
arpl
cli
test
inc
sbbb
lret
and
inc
test
loopne
inc
jmp
call
pop
sub
lds
roll
ret
insl
jmp
cmp
mov
xchg
push
sbb
sti
xor
or
aad
inc
add
js
sub
popa
cmp
mov
sub
dec
add
mov
adc
mov
movsl
iret
pop
sub
fisttpl
cmpsl
jo
or
xor
stos
inc
addr16
jno
xchg
pushf
push
ret
xchg
pop
and
sti
lcall
fsubl
xlat
aam
mov
push
fidivrs
push
mov
cmpsl
inc
mov
xchg
mov
addr16
leave
test
sbb
aad
shlb
mov
mov
pop
jne
popa
push
pop
lahf
addr16
pop
pop
or
roll
mov
in
dec
sbb
mov
push
mov
adcl
mov
data16
flds
cmc
fidivrl
mov
pop
lahf
cmpsl
sub
inc
push
xchg
fs
ficomps
lcall
sti
in
stc
sub
mov
xchg
jo
mov
cmp
lret
add
inc
pop
divl
lods
sbb
xor
mov
jae
fbstp
mov
stos
addr16
lods
imul
insl
mov
jbe
int
jl,pt
cld
pop
inc
out
ret
jo
inc
xchg
jmp
dec
stos
mov
mov
cltd
add
mov
push
lock
addr16
movsl
stc
lcall
cmpsb
test
mov
mov
sbbb
inc
loop
mov
mov
adc
or
xor
sbb
mov
jb
aas
mov
int3
cmp
dec
push
sbb
xor
fsubs
mov
out
push
pop
jae
add
outsb
clc
call
mov
fisttpl
push
movsb
push
sahf
pushf
sbb
insb
xchg
sarl
nop
fscale
mov
fdivl
xchg
dec
push
adc
xor
or
ja,pt
push
hlt
mov
addr16
popf
out
loope
pop
loop
in
lock
in
std
sbb
adc
xchg
push
cmpsl
xor
cmp
stos
repnz
lret
lock
sub
cmovnp
pop
dec
fstl
mov
mov
inc
xlat
test
outsb
add
lods
rcll
popf
stc
sub
imull
and
and
cmp
mov
push
daa
or
adc
inc
sbbb
je
or
lahf
adc
xor
das
cmp
push
call
push
pop
mov
sub
fisttpl
jp
arpl
fcmovnu
sti
repz
dec
lods
xor
mov
xor
inc
xchg
fdivs
pop
call
lods
xor
pusha
repnz
js
inc
divb
pop
ror
lsl
mov
cltd
cltd
lock
jns
and
lahf
and
in
inc
jecxz
bound
cmp
jg
cmpsb
data16
cmp
push
pop
sbb
and
xchg
push
pop
jne
movsl
pop
enter
mov
mov
push
pop
mov
add
les
fmuls
mov
sarb
out
xor
or
pop
cli
mov
insl
cs
pusha
clc
mov
jnp
fdiv
mov
dec
jecxz
aad
movsb
leave
out
rorl
jb
imul
dec
shlb
mov
cmp
add
mov
cmpsl
ret
jnp
jl
inc
lcall
popf
cmp
psubsb
add
or
icebp
xor
jecxz
std
lret
les
pop
faddp
inc
out
imul
jbe
mov
dec
and
pushf
mov
ja
repnz
mov
or
adc
sbb
xor
xchg
jno
subl
sub
push
pop
daa
xchg
inc
mov
mov
mov
push
insb
jo
xlat
mov
int
in
cmpb
inc
es
sub
xor
mov
orb
into
sbb
fwait
cmpsl
movb
nop
dec
lret
out
xor
pop
int3
cmpsb
sub
lods
out
mov
mov
inc
xchg
dec
add
stc
into
out
out
adc
loope
push
rorb
fnstcw
cmp
pop
or
push
fsts
js
pop
mov
sarb
gs
cmpsb
dec
imul
test
jbe
cmp
mov
into
and
hlt
pop
or
cmpsl
out
dec
iret
aaa
mov
fcomp
mov
push
mov
pop
push
mov
ret
jae
dec
leave
jmp
pop
dec
test
mov
mov
jmp
hlt
fildl
imul
call
push
cwtl
lds
int3
add
aaa
mov
push
cmp
mov
testw
mov
jmp
clc
push
sbb
xchg
das
das
mov
dec
mov
cmp
jns
pop
mov
inc
inc
clc
fisubrs
xlat
or
mov
mov
adc
in
xor
pavgw
or
and
ret
mov
push
pop
push
mov
push
std
fstpl
add
add
arpl
andl
xor
in
dec
loopne
hlt
or
jle
ficoml
dec
ret
xor
and
aam
sub
xor
fldenv
cltd
dec
dec
jo
mov
cmpsb
sahf
sub
test
mov
mov
dec
jno
mov
fimuls
push
mov
xor
sub
out
fs
mov
std
sti
lds
mov
xor
mov
mov
jbe
xchg
adc
pop
insl
jmp
incl
std
push
inc
cmp
mov
mov
jae
push
fwait
push
xlat
mov
ss
inc
test
push
inc
loope
jnp
test
clc
fists
stc
inc
sbb
fadd
rolb
bound
jp
sbb
inc
jbe
cmp
add
jmp
pop
mov
rolb
push
mov
or
repnz
xchg
mov
pushf
out
or
inc
adc
sbb
daa
sti
movb
fnstcw
cmp
nop
ret
dec
dec
inc
adcb
stos
xchg
cli
stos
jnp
hlt
inc
pusha
mov
in
loope
xchg
or
cmp
push
mov
xchg
movsb
fldenv
xchg
rcrl
test
xor
xor
shrb
inc
mov
mov
push
jmp
sbb
sub
inc
jecxz
and
mov
test
je
loope
mov
sar
push
sahf
in
push
mov
sbb
adc
push
loopne
mov
sbb
int
hlt
jmp
inc
or
and
clc
add
inc
inc
xor
mov
popa
cmpsb
sbb
and
aaa
mov
mov
mov
jns
add
sub
ficomps
hlt
sbb
and
inc
test
jl
and
lcall
mov
testb
in
add
loop
xor
mov
in
das
dec
sbb
mov
lcall
ficoms
pop
cld
nop
mov
outsb
lahf
mov
push
cmpsb
inc
stos
out
movsl
fwait
jg
add
call
push
movsl
mov
lods
jae
fnstcw
xchg
dec
cmp
sbb
loop
cmc
les
jl
int
or
xlat
test
lods
xor
call
mov
dec
add
xlat
sub
imul
jp
sub
or
push
push
mov
divb
in
cmp
mov
sbb
outsl
in
adcb
leave
mov
push
testl
pop
push
inc
cwtl
cmp
xchg
xchg
cmp
in
inc
cmp
leave
cmp
pop
inc
cmp
adc
xor
pop
repnz
sbb
cld
ror
out
pop
mov
std
pop
test
das
sahf
inc
mov
aas
xor
stos
xor
out
arpl
fisubrl
loope
es
and
inc
movsl
lods
inc
xchg
xor
mov
adc
xor
jmp
out
pop
push
fs
loope
add
add
cmc
dec
lret
test
xor
cmpsl
sbb
xor
out
test
sub
push
cwtl
push
sahf
xor
int
es
sub
mov
test
pop
jmp
pop
mov
and
test
cld
mov
cmp
push
dec
mov
sbb
ja
jb
add
mov
inc
inc
add
inc
cmpsl
imulb
sbb
sbb
aad
test
xchg
pop
leave
push
and
js
inc
int3
adc
sbb
inc
arpl
loopne
or
jae
xchg
daa
outsb
mov
in
cmc
pop
ss
call
adc
mov
shlb
xchg
cmpsl
adc
push
lahf
jle
sti
jge
mov
sub
lods
shrl
xchg
push
sbb
aas
test
xorb
dec
aas
jne
cs
not
pop
mov
cltd
jle
and
fldt
daa
sub
es
pop
mov
clc
mov
mov
pop
ljmp
sar
sub
cmp
test
movsb
shl
loopne
jno
fcmovbe
mov
enter
and
or
xor
mov
test
ja
outsb
xlat
out
dec
pop
jmp
pushf
dec
inc
fcmove
add
pop
pop
aam
loop
sub
jge
enter
je
stos
xchg
jb
pop
stos
sub
mov
aas
ret
pop
cmp
sbb
hlt
mov
cmp
in
adc
test
insb
loopne
lahf
aad
movsl
rorb
fdivr
sbb
push
fistpll
or
es
and
sbbb
sahf
insl
aaa
not
out
shl
pop
arpl
lods
bound
sub
out
repnz
xchg
push
mov
inc
fdivl
adc
lock
mov
aaa
xchg
and
add
sbb
in
ret
pop
mov
stos
inc
js
pop
and
xlat
lret
enter
out
mov
inc
cmc
jmp
inc
gs
xor
fstpt
add
ret
lahf
jecxz
mov
iret
or
jo
icebp
lret
movsl
ss
mov
xor
test
mov
movsb
xchg
imul
arpl
insb
xchg
xor
xchg
inc
push
jp
xlat
fimuls
sbb
sub
std
xchg
outsl
jg
inc
test
sub
pop
cmpw
adc
xchg
sti
rcl
jno
fcoms
push
mov
ss
mov
movsl
in
stos
mov
sub
cltd
xchg
mov
adc
inc
aaa
push
je
movb
roll
insb
mov
je
nop
in
sub
mov
cmp
dec
mov
adc
cltd
cmc
das
jmp
jne
pop
inc
outsb
push
or
stos
loopne
aaa
push
push
insb
inc
mov
jae
or
aaa
sbb
jl
push
add
into
or
popf
jmp
out
andb
shll
and
imul
jno
dec
decb
or
mov
jb
xor
mov
push
movsl
clc
push
test
mov
fisttps
and
pop
shll
test
ss
add
xor
mov
clc
imul
or
push
lcall
add
push
out
adc
movsb
pop
sahf
arpl
sub
pop
bnd
mov
or
icebp
dec
and
pop
sub
test
dec
lcall
das
pusha
shl
xor
cmp
fs
mov
pop
mov
or
sarb
lahf
ljmp
and
sub
pushf
lods
mov
push
sbb
mov
enter
push
mov
push
loopne
aaa
push
movsb
inc
jns
add
in
test
add
mov
mov
mov
mov
jle
adc
sub
pmuludq
nop
jns
pop
ja
insl
cmpsb
lds
mov
or
xlat
mov
mov
sti
sub
in
xchg
mov
mov
xchg
cs
insb
aam
jle
mov
inc
lock
lret
jno
and
cmp
cltd
sbb
loopne
in
fiadds
inc
or
pop
jb
mov
nop
ss
xor
mov
cmp
mov
push
inc
push
bnd
push
hlt
dec
leave
lock
nop
or
loopne
aaa
test
push
pusha
adcb
ja
test
and
jle
movsb
into
int3
in
push
cltd
mov
mov
in
scas
nop
adc
ljmp
inc
cltd
mov
fildll
btr
xchg
jbe
cmpsb
test
lcall
icebp
lret
outsl
jl
mul
xchg
aas
push
sbb
int
adc
pop
ficoms
pop
mov
ds
push
mov
sub
cmp
bound
mov
inc
mov
mov
push
jp
mov
and
fcmovu
inc
call
mov
cmp
mov
pop
sbb
mov
jbe
push
sbb
pop
xchg
cmp
dec
pop
xchg
das
mov
xor
mov
dec
fucomip
cmp
stos
jns
inc
mov
push
push
adc
mov
aaa
fcmove
mov
jmp
adc
lock
fwait
into
jo
gs
inc
mov
sub
aaa
xchg
aam
jnp
push
daa
mov
sbb
adc
dec
fisttps
xchg
decb
pop
push
rcrl
jb
inc
cld
lods
inc
outsb
sbb
lock
out
inc
xor
popa
cmp
add
jmp
fs
mov
dec
or
out
xchg
jecxz
sbb
adc
and
push
xchg
sub
repz
aam
jle
sbb
adc
stos
adc
push
jp
jg
jno
xor
je
lds
push
inc
jns
or
ret
divb
cs
or
aam
in
call
sbb
insb
pushf
push
gs
push
inc
pop
jg
or
int3
bound
pop
jne
inc
jo
push
insb
mov
dec
icebp
test
push
fsubr
add
repz
push
mov
cmp
adc
ja
bound
repnz
ret
call
sub
loop
xchg
sbb
les
cmp
sbb
and
int3
xor
int
xor
sub
lcall
dec
xchg
test
shrl
ljmp
fbstp
out
rolb
mov
roll
cmp
cmp
or
fldt
iret
bound
sbb
mov
xorb
shrl
mov
out
jge
sbb
data16
xchg
xor
mov
lret
push
adc
int
sbb
xor
into
dec
repnz
push
jne
pop
xor
push
cmp
js
adc
pop
repz
outsb
jp
movsl
jno
jmp
scas
or
xchg
sub
adc
lcall
inc
xor
and
pop
hlt
jnp
mov
shr
leave
das
repz
in
adc
stos
rcll
sbb
movsb
and
mov
test
jge
mov
add
pop
rcl
shll
dec
ds
aaa
ds
sbb
test
les
mov
data16
sub
dec
mov
cmp
pop
leave
jno
push
clc
pop
test
mov
sbb
stos
jle
cmc
lahf
sbb
inc
adc
popf
and
mov
sbb
js
lods
and
ss
scas
sub
mov
adc
and
mov
jp
mov
decl
add
cmp
data16
adc
fistpll
inc
sub
pop
mov
mov
imul
fwait
push
adc
jnp
inc
je
mov
and
jb
out
popf
mov
sub
pop
stos
pop
loop
bound
pushf
mov
dec
mov
repnz
daa
lea
je
fcmovnu
stc
mov
cmp
pop
daa
ret
mov
cmc
sub
scas
sub
out
stos
sbb
inc
faddl
xchg
popa
push
fbstp
jb
add
lret
test
and
sbb
lcall
push
cmp
pusha
dec
xchg
ret
cmp
rorl
xchg
je
bound
lds
mov
daa
aam
cmp
shrb
push
ja
cli
inc
fidivl
shr
cmpsl
shrl
add
cld
mov
bound
jns
lret
jo
add
notb
and
cmp
cmp
fisubrs
out
das
add
cmp
xor
int3
mov
xor
pop
mov
pop
mov
cwtl
repnz
add
rolb
popa
das
mov
cmp
sbb
loopne
lods
pushl
daa
push
stos
cmpsb
icebp
jb
pop
jmp
or
icebp
sbb
mov
pop
push
jbe
jo
add
sub
fmuls
pop
jne
dec
sbb
inc
adcb
adc
xlat
mov
push
push
es
cmp
pop
shll
push
sub
pop
cmc
out
negl
mov
icebp
imul
cli
test
sarb
xchg
loop
je
ret
dec
lcall
mov
js
mov
out
jne
out
add
stc
pop
push
dec
adc
xchg
cmp
sbb
pop
les
test
xchg
push
pop
mulb
jbe
adc
popa
add
fmull
mov
and
das
or
xor
out
loope
xor
pop
hlt
lods
sbb
popf
sub
add
jp
shlb
push
mov
dec
out
or
in
es
xor
and
push
stos
popa
jns
adc
imul
scas
out
xchg
add
outsl
inc
lods
sbb
inc
pop
cs
sub
mov
cmpsb
iret
dec
sub
test
or
and
adc
inc
aam
aas
nop
mov
cmp
fmull
and
imul
sub
pusha
cli
loop
lret
es
test
or
xor
insb
orb
insb
dec
add
insl
cmpb
push
fdivs
addr16
or
out
nop
and
mov
in
dec
inc
in
fistl
addr16
sub
shrl
daa
std
loope
sahf
mov
mov
sti
jp
int3
mov
rolb
dec
inc
and
push
cmc
add
imul
jb
vminsd
jnp
pop
mov
add
pop
xchg
or
jle
fs
jle
sbb
jne
insb
inc
and
adc
push
xchg
mov
push
mov
add
ljmp
or
sub
and
fiadds
mov
repz
jp
xor
mov
sahf
inc
or
cli
mov
dec
mov
adc
js
push
and
movsl
lds
xchg
mov
dec
test
sbb
stos
cmc
lret
and
mov
ljmp
sahf
push
in
inc
jne
mov
xorb
jbe
add
ret
cmp
push
shl
iret
out
bound
jmp
mov
clc
mov
inc
ret
lcall
lods
insb
repnz
dec
pop
xor
in
nop
push
scas
imul
mov
add
test
or
icebp
cmp
or
sahf
cmp
fbld
inc
mov
add
outsl
test
mov
notb
call
sub
dec
rcr
sbb
jbe
pop
pop
icebp
cmpsl
std
or
xor
sub
mov
mov
stos
and
test
lods
jle
mov
fdivrl
orl
in
cmp
out
nop
jl
or
mov
mov
ret
push
stc
fimull
add
xchg
sbb
lea
push
lock
jg
inc
xor
push
lods
bound
shrl
adc
xor
mov
jnp
popf
pop
inc
arpl
lcall
inc
inc
in
fidivs
shrl
addr16
clc
pop
jecxz
cmc
mov
dec
xchg
pushf
js
stos
add
in
and
dec
and
mov
shll
shr
adc
add
push
popf
cmpsl
add
mov
lcall
push
aas
add
push
cmp
pop
notb
mov
dec
pop
sahf
pop
movsl
in
outsb
sahf
int
in
outsb
add
out
adc
pop
adc
push
jmp
rcll
push
das
movsb
shlb
cs
pop
and
mov
fs
outsb
xchg
pop
fs
xchg
out
mov
loop
into
add
mov
roll
addr16
or
dec
shll
scas
in
jg
movsl
testb
jmp
clc
in
stos
es
fcomps
gs
imul
lock
xchg
adc
scas
mov
rcll
lcall
lahf
je
mov
int
jo
dec
sbb
ljmp
punpcklwd
lds
mov
lock
pop
loop
cmpb
mov
inc
sub
loope
in
pop
xchg
jnp
js
loopne
repz
xchg
xchg
call
subl
adc
out
das
movsb
mov
xchg
pushw
sub
in
aad
loop
out
jge
daa
cmp
sti
enter
cmpsl
jne
xor
push
test
cltd
inc
add
xor
or
lcall
daa
cli
dec
popf
lcall
cwtl
dec
cmp
mov
arpl
inc
sub
movsb
leave
in
out
inc
sub
das
arpl
xlat
jbe
lcall
jne
push
sti
rcrb
mov
outsb
es
icebp
inc
scas
das
mov
push
inc
test
jge
adc
sub
inc
jl
scas
jle
jl
sti
addr16
push
xchg
inc
call
push
inc
pop
mov
sbb
push
mov
xchg
outsl
cwtl
sub
shlb
mov
mov
mov
cs
mov
inc
into
mov
mov
or
leave
loope
into
shll
mov
mov
cli
pop
divb
aad
mov
rorb
ja
pop
popa
fnstcw
pop
jb
lock
cltd
shlb
mov
stos
cmp
imul
dec
xor
inc
das
push
xchg
pop
ds
pop
jge
mov
push
jmp
push
mov
aad
popa
push
cmpsl
std
inc
and
pop
scas
aad
in
mov
add
fstpt
lcall
and
out
push
fistpll
mov
test
std
jns
dec
pusha
outsb
pop
pop
push
popf
movsb
pop
mov
fdivrp
sub
mov
fdivrs
in
and
daa
jg
cmc
sbb
mov
pop
jg
ds
popf
mov
pop
mov
sbb
ret
adc
xchg
jns
ja
arpl
inc
out
inc
jo
xor
xor
sti
mov
push
ljmp
sbb
cld
rorb
cmp
addr16
xor
in
les
sti
out
sti
shll
in
fwait
lret
sbb
fcoml
out
mov
and
mov
jp
std
shll
push
dec
je
loope
xchg
ljmp
inc
jno
inc
xchg
and
push
and
add
inc
add
arpl
mov
push
push
pop
ljmp
inc
pusha
js
xor
inc
add
rorl
jns
cmp
pop
sbb
hlt
mov
inc
ret
icebp
dec
cmp
sarb
dec
ret
or
pop
mov
nop
and
mov
mov
push
dec
pop
or
push
fwait
rclb
jnp
xor
out
fsubrl
rcll
add
imul
imul
lahf
pop
or
jmp
roll
ljmp
jg
imul
pop
adc
loope
cmp
addl
inc
mov
mov
popa
mov
mov
cli
inc
loopne
mov
sbb
lahf
jg
subb
mov
das
incb
test
jnp
je
fildl
shll
test
test
cwtl
fisubrl
aam
adc
xchg
jmp
xor
xor
out
xchg
and
jns
ljmp
clc
sub
mov
pop
cmp
dec
or
add
mov
cmpsb
ret
outsl
and
push
push
in
sub
inc
popa
push
inc
mov
mov
fadd
divb
std
imul
aaa
xchg
cmc
adc
lret
jmp
in
sbb
or
mov
pop
jne
in
jmp
dec
push
popf
lret
stc
into
arpl
xor
fldenv
imul
and
mov
adc
test
clc
cltd
sarl
and
in
pop
into
jb
ret
xchg
out
pop
lret
jno
mov
dec
mov
and
pop
sahf
xchg
sbb
sbb
jae
sub
fwait
jo
in
xor
nop
shr
sub
xchg
adc
mov
adc
and
daa
or
push
daa
cmpsl
clc
fwait
imul
sub
insb
and
push
out
xor
sub
xchg
fiaddl
and
daa
dec
shr
inc
dec
cli
mov
adc
cmpsl
pop
jbe
sbb
mov
test
push
mov
sub
mov
jb
xor
ret
mov
out
xchg
dec
aad
addr16
and
pop
pushf
jg
push
xlat
xor
cld
or
jnp
pop
xor
sub
or
mov
xor
inc
mov
and
hlt
add
mov
sbb
push
in
mov
dec
das
cmp
mov
dec
sub
sbb
out
lock
sub
fdivrp
xchg
jbe
mov
lret
stos
inc
jmp
cld
cmp
sbb
iret
xlat
pushf
pop
sbb
jae
movsl
jnp
xchg
push
xchg
dec
in
inc
mov
jno
lret
aaa
imul
jp
repnz
lods
sbb
divl
xlat
pop
mov
icebp
mov
arpl
sahf
mov
adc
lret
dec
cmp
jmp
pop
mov
fists
jge
dec
sub
xchg
ljmp
pop
jnp
lods
orb
sbb
popl
and
xchg
push
pop
or
popf
mov
mov
pop
enter
dec
and
out
es
jecxz
loope
xchg
scas
mov
pop
cld
dec
mov
cmpsb
mov
es
sub
push
popf
fwait
pop
jmp
popl
push
stos
jne
mov
cmp
mov
adc
roll
ljmp
push
jns
mov
roll
push
dec
add
movsl
lcall
les
mov
push
inc
inc
push
mov
add
add
dec
mov
or
inc
xchg
mov
insb
dec
not
or
ljmp
add
pop
fsubrl
sbb
push
jl
push
xchg
les
cmp
pop
cmp
push
shl
adc
imul
fsubr
cmp
stc
and
addr16
lret
outsl
fld
clc
rorb
ret
scas
mov
std
and
fnstcw
sbbb
xchg
mov
ret
rorb
xor
sub
jmp
and
out
sub
jmp
cmp
push
mov
les
shlb
inc
sti
or
js
adc
addl
pushf
adc
cli
cmpsb
in
loopne
aas
sbb
jbe
jns
or
xor
mov
rcl
xor
jle
imul
mov
pop
pushl
lods
add
lahf
sahf
sbb
pusha
movq
inc
dec
mov
xor
or
ds
fadd
jne
dec
ja
dec
add
jbe
push
testb
mov
xchg
push
shrl
lea
and
data16
lds
fcomps
out
inc
jne
xchg
imul
scas
rorl
popf
dec
jg
movsl
jle
jnp
jp
dec
cltd
outsb
imul
and
fs
insl
sub
dec
sbb
inc
or
cmp
roll
je
push
cmc
daa
pop
les
bound
rol
inc
push
mov
pop
push
rorl
out
xlat
ja
cmpb
or
jl
popf
pop
and
clc
loopne
iret
cs
cwtl
les
add
mov
lret
ja
mov
movsb
push
mov
pusha
jp
in
inc
push
mov
jno
mov
int
pop
call
mov
daa
test
mov
lret
jl
mov
pop
mov
jns
ljmp
jp
and
jae
loope
bound
icebp
xor
lds
mov
inc
in
dec
out
add
jg
dec
in
and
stos
jns
xlat
jne
sub
pop
fsubp
shl
jle
aad
test
sbb
ret
aaa
stc
mov
mov
sbb
xor
pop
nop
adc
xor
dec
mov
mov
sti
mov
notb
sbbb
dec
pop
mov
mov
sbb
stos
xchg
popa
lods
cs
fs
push
push
adc
mov
push
andb
and
pop
jbe
int
les
bound
loope
imul
shlb
inc
mov
and
test
stos
fistpl
push
xor
ljmp
arpl
shll
sub
std
add
mov
xor
repnz
sbb
dec
int
push
loope
jbe
or
and
jno
js
dec
fnsave
rorl
mov
cmp
mulb
cmpsb
cmp
jecxz
lahf
cmp
sub
mov
test
jp
dec
jnp
stos
sub
xchg
push
xchg
stos
sbb
push
pop
inc
push
push
inc
int3
xchg
xchg
adc
cmp
jb
in
fiaddl
inc
sbb
xchg
lret
sbb
inc
call
rclb
push
jle
in
movl
jae
mov
addr16
mov
cmp
jo
lahf
add
push
sbb
add
mov
mov
jmp
cwtl
fbstp
lods
not
mov
mov
jne
jl
pop
adc
mov
stos
out
pop
outsl
push
and
jge
jb
xchg
sub
cmpsl
in
mov
sub
arpl
jle
jmp
jae
push
mov
jb
repz
loop
jmp
mov
xor
cmp
sub
jae
mov
or
jb
sbb
lods
pop
fs
jbe
and
inc
xchg
cwtl
cmp
push
mov
mov
xchg
jo
push
cli
inc
or
stos
jle
xlat
mov
mov
add
es
sbb
inc
stc
mov
movb
decl
pop
in
adc
aad
push
adc
push
cmp
pop
outsl
xor
cmc
aad
mov
repnz
stos
mov
jne
or
arpl
jmp
fstpt
jae
xor
test
add
cmpsb
outsl
ss
lods
jbe
sbb
pop
pushf
or
adc
stc
cmp
xor
mov
add
test
notb
mov
pop
mov
adc
mov
imul
ds
adcb
test
fsubrl
jle
lock
lods
cmc
testb
fsubrl
adc
lods
ljmp
dec
loope
mov
or
js
mov
sub
addl
fs
aad
mov
sub
nop
data16
cmp
push
js
xchg
sbb
popa
repnz
inc
xlat
pop
pop
push
js
jl
add
cmc
push
iret
fsubr
imul
sahf
cmp
stc
inc
out
lahf
je
jmp
sar
fidivs
xor
lea
ds
cmpsl
push
sbb
lds
xor
sti
jge
arpl
add
aaa
int
push
scas
notl
cmpsl
jae
push
pop
jg
jp
xor
jmp
loopne
mov
mov
hlt
mov
push
pushf
inc
add
dec
scas
inc
shll
inc
mov
fistpll
jecxz
insb
rcll
xchg
mov
sbb
shlb
and
dec
xchg
shl
jl
lahf
lret
push
aas
nop
xchg
inc
icebp
mov
or
stos
cmp
and
rep
shlb
cltd
sub
popa
loope
cmp
push
pop
aam
mov
add
push
js
mov
cmp
pusha
mov
inc
push
mov
and
div
and
pop
leave
loope
shrl
mov
xor
xchg
std
mov
hlt
jl
mov
int3
adc
xchg
pop
push
rclb
xchg
pop
ja
arpl
mov
mov
fcoml
stos
sbb
jns
lea
loopne
jl
fmul
in
push
repnz
jnp
jp
jl
xor
fiadds
jno
aam
or
scas
cmc
mov
xchg
out
repz
push
mov
sub
cwtl
in
sbb
cmpsb
lds
in
out
aaa
test
arpl
roll
fdivr
loope
scas
cmpsl
cltd
sub
int3
jnp
sub
pop
inc
out
sub
outsb
int
iret
hlt
jmp
xor
loop
dec
mov
mov
je
jge
jnp
and
xor
cmpsb
clc
aas
mov
fidivl
int3
mov
push
and
testb
jecxz
pop
push
jne
movsb
push
push
scas
sub
inc
call
or
pushf
nop
add
subb
pop
test
xchg
mov
sub
xchg
rorl
cmp
xor
dec
sbb
sarb
call
lahf
mov
mov
dec
pop
adc
sbb
loope
out
dec
jl
out
adc
push
push
mov
hlt
xor
ret
movsl
out
pop
xchg
cli
dec
jb
mov
mov
sbb
dec
int3
shlb
pop
sbb
fwait
mov
ret
sti
fwait
loopne
adc
xchg
cmpxchg
sub
or
lcall
fdivl
data16
jo
jecxz
xor
pop
push
aas
dec
rclb
jns
out
shlb
add
imul
or
shrl
clc
test
mov
jnp
iret
out
int3
adc
lret
push
loop
jno
scas
call
enter
and
mov
push
addr16
fnstcw
iret
mov
xchg
and
testb
imul
or
mov
mov
or
mov
ror
add
test
sub
movsb
xchg
pop
icebp
xlat
pop
adc
cmp
daa
out
mov
test
xor
jmp
xchg
mov
or
fs
stc
mov
lret
std
stos
cmp
shll
mov
sub
movsb
mov
test
pop
loopne
inc
and
das
mov
push
sbb
add
mov
loope
push
jg
ret
sbb
pop
stos
pop
jae
dec
outsl
jnp
adc
mov
and
xor
sti
addr16
cmp
add
xor
leave
or
sbb
test
fidivs
pusha
sbbb
inc
cmp
or
fnsave
inc
in
lods
lods
xor
ficomps
mov
xlat
lods
jb
dec
loope
mov
or
or
shrb
jge
mov
pop
inc
stc
out
mov
fdivrp
sbb
and
sbb
sub
icebp
xor
xchg
adc
sbb
cmp
cmc
ja
and
jnp
shll
cmp
mov
stos
das
fs
xchg
mov
pop
aaa
push
cltd
movsl
mov
xchg
andl
mov
pop
jbe
dec
push
or
mov
sbb
mov
fwait
dec
sti
nop
sbb
lret
pop
mov
out
pop
push
fbld
fidivrs
push
mov
mov
out
inc
lods
jbe
cmp
scas
scas
push
sbb
xor
pcmpeqb
fisubrs
push
lock
push
pop
test
mov
dec
mov
dec
xor
mov
pop
pop
bound
movsl
jg
in
mov
ja
movsb
cmp
jae
mov
ja
sub
out
pushf
cmpsb
aad
test
fnstcw
mov
mov
cmp
std
dec
cmp
mov
sbb
adc
xchg
jmp
cltd
dec
popa
adc
jns
in
mov
pushf
and
xor
test
xchg
cld
or
nop
jecxz
lea
add
sahf
dec
sbb
fdivrs
push
inc
stos
inc
xchg
jle
sarl
add
int3
dec
jbe
xor
pop
loop
mov
gs
xchg
fs
xor
mov
sub
sub
jmp
test
in
imul
hlt
and
lcall
movsb
adc
pop
in
stos
adc
mov
dec
ja
je
sub
push
rorb
ss
mov
xor
stc
xchg
cltd
inc
jmp
xlat
loopne
inc
leave
stos
xor
jp
jns
xchg
outsl
cmp
fs
lret
bswap
sarb
jl
lahf
or
mov
jne
dec
aas
mov
bnd
push
std
or
mov
das
jnp
daa
push
mov
aad
rcrb
int3
xchg
ret
movsl
cmp
fsubrs
lahf
dec
je
mov
test
cmp
jp
cli
mov
jno
inc
or
push
fwait
lock
pop
add
mov
mov
sub
and
xor
sub
int
xchg
push
and
enter
and
mov
mov
jno
andb
inc
pop
faddl
imul
mov
cmp
repnz
sbb
lods
mov
mov
ljmp
mov
mov
sbb
or
leave
popf
cmp
pop
jno
cli
adc
lods
pop
or
pop
clc
sbb
gs
pop
xchg
mov
xchg
mov
add
test
dec
sub
jmp
ret
je
sahf
mov
add
mov
lea
enter
mov
scas
sub
lock
sub
daa
inc
ja
pop
pop
subb
stc
or
cmp
stos
push
fidivrs
xchg
rcrb
jnp
clc
pop
or
andl
xor
je
inc
lret
aam
xor
mov
aaa
negb
pop
xchg
jecxz
fmuls
cmc
inc
movsb
roll
aaa
or
popl
decl
mov
fwait
mov
and
lcall
stc
lock
jns
in
add
cs
popa
lahf
test
jnp
jp
clc
push
push
hlt
leave
and
arpl
das
pop
sub
pop
cmp
mov
lods
jmp
mov
inc
xlat
or
jb
insb
addr16
mov
cmp
popa
jb
mov
fdivs
cmc
pop
rorb
pop
add
push
js
sti
stos
pop
leave
test
scas
mov
fldt
pop
inc
enter
enter
mov
pop
arpl
add
cmpsl
in
pushl
fs
push
or
fsubs
in
cmc
std
mov
out
and
cmp
sub
popa
scas
pop
fdivl
cmp
gs
or
xor
gs
sbbl
mov
imul
inc
push
mov
push
jl
loope
cltd
dec
push
xchg
idivb
enter
mov
mov
xchg
aaa
inc
filds
jl
notl
aam
jge
cwtl
fdivrp
cld
dec
cltd
mov
sbb
mov
leave
ret
add
stos
int
cmp
xchg
or
out
test
sub
jbe
cwtl
rcl
lcall
aam
jb
cmp
data16
fsubs
daa
adc
pop
sarl
sahf
cmp
lcall
mov
test
roll
pop
ret
ss
pop
jb
test
or
dec
push
loopne
test
inc
add
jne
push
dec
mov
jle
mov
adc
push
and
xor
inc
jg
xchg
mov
cltd
mov
bound
mov
add
xor
xlat
shrl
and
jmp
lcall
stc
out
or
faddl
add
pop
out
pop
xor
sbb
sbb
orl
pusha
lods
sbb
mov
lcall
or
imul
push
stos
mov
adc
cmp
imul
sbb
pop
roll
inc
mov
fcomps
mov
mov
in
add
or
sub
dec
dec
sbb
or
int3
mov
mov
lcall
add
sub
and
insb
xchg
and
xor
mov
pop
test
mov
push
decb
sub
loopne
mov
mov
jno
aam
pop
or
mov
notl
push
lds
sbb
adc
cld
jmp
cs
mov
jg
cld
inc
je
scas
inc
negb
push
test
sti
xchg
dec
test
ljmp
ja
mov
sbb
and
mov
test
mov
pop
das
sbb
aam
popf
or
stos
mov
test
insb
adc
or
push
notb
dec
sbb
inc
mov
shlb
addr16
sbb
lcall
cs
mov
inc
mov
lret
outsb
push
adc
lock
push
lcall
call
movsb
es
fidivrl
testl
int
mov
cltd
push
add
test
and
out
mov
mov
cmpsl
push
repnz
lds
mov
xor
and
cwtl
arpl
xchg
shrb
push
push
in
bound
xlat
and
sbb
xchg
push
cmc
ret
or
mov
dec
cld
pushf
lcall
scas
sarl
or
push
mov
mov
lods
fidivs
push
jae
push
cld
push
mov
mov
mov
out
clc
outsb
aad
sbb
inc
outsl
int
push
add
push
adc
jmp
mov
adc
outsl
jne
aam
pop
push
in
fwait
xchg
mov
xlat
mov
gs
pop
mov
out
mov
or
in
cmp
pop
insb
nop
inc
pop
popa
jecxz
and
andl
repz
pop
cmp
jmp
call
and
movsb
cmp
scas
idivl
mov
push
adc
mov
movlps
mov
int
xor
pop
arpl
pop
and
fs
mov
xor
dec
sahf
adc
sub
mov
xchg
adc
sbb
aas
fs
imul
cmp
mov
push
xor
ja
ja
jecxz
daa
mov
call
cmpsl
mov
fstpl
fwait
jo
jl
dec
rcl
mov
faddl
and
ret
push
mov
dec
add
cwtl
inc
mov
sub
jno
mov
mov
dec
fwait
push
cmp
inc
pop
bound
xor
jne
arpl
pusha
lods
push
or
outsl
mov
sahf
mov
inc
mov
lcall
jbe
in
push
test
bound
cmpsb
adc
and
incl
data16
aam
fildl
dec
inc
and
arpl
movsb
out
mov
jb
js
inc
cmp
popa
mov
lcall
pop
lea
dec
lods
add
mov
jae
pop
cmp
add
mov
pop
je
orb
and
xor
cmp
loope
jb
or
pop
fprem
jne
sbb
lods
rorl
fdivrs
xor
sarl
or
pop
fldl
and
lods
sbb
mov
fwait
ret
clc
sub
jno
lods
movsb
enter
jecxz
or
and
push
sub
ret
mov
jae
fwait
lods
dec
popa
rorb
push
fneni(8087
add
mov
rorb
nop
aad
push
jbe
iret
dec
test
icebp
jl
shlb
jne
lahf
cli
mov
pop
mov
outsl
sbb
inc
test
in
in
shrb
in
xor
mov
bound
fwait
xchg
out
into
pop
aaa
pusha
adc
xchg
outsb
push
jge,pn
divl
mov
and
in
insb
jb
or
ljmp
shl
cmpb
xchg
jb
scas
mov
mov
jmp
mov
jnp
cmp
in
xor
outsl
cmc
scas
xor
pushf
sub
push
pop
push
adc
pop
fcmovnb
cmp
sub
cmp
cli
inc
sahf
rcll
or
push
iret
push
push
sub
adc
pusha
std
jae
jbe
mull
cwtl
out
dec
in
push
jb
push
jecxz
lcall
imul
andb
adc
xchg
cmpl
mov
sahf
inc
mov
push
lcall
adc
les
fstl
pop
sub
dec
int
or
and
sbb
push
pop
enter
in
push
fistps
inc
jecxz
sub
sti
jecxz
fdivrs
lods
cmp
xor
xchg
mov
loop
or
adc
and
push
idivb
mov
push
or
gs
adc
xchg
add
push
or
out
adc
pop
adc
jno
dec
sbb
imul
bound
cmp
or
and
push
pop
hlt
out
data16
out
cmpsl
lods
cltd
push
mov
mov
popa
sub
lahf
iret
xchg
pop
shlb
fsubr
inc
and
in
jmp
sub
or
loopne
push
popf
in
mov
adcl
cmp
loopne
pop
inc
mov
pop
movsb
gs
popf
filds
stc
mov
cmp
and
pop
push
aam
dec
xor
dec
aam
cmp
push
in
mov
jg
jo
cmpsb
div
xchg
ror
repz
fsubrl
add
dec
xchg
xor
arpl
sub
popf
xor
push
idivb
rolb
or
enter
inc
daa
ret
and
push
pop
mov
sbbl
cmp
jne
lahf
shll
repnz
sbb
cmp
jg
fcoml
rcl
jl
iret
mov
cld
xchg
in
out
push
ror
dec
push
pusha
aad
inc
push
jl
adc
xchg
pop
mov
imul
add
arpl
or
dec
jae
scas
jmp
in
jl
repnz
scas
enter
fwait
mov
sub
lods
out
ds
or
adc
inc
xchg
jmp
add
cwtl
mov
sub
cmp
or
xchg
cmp
adc
and
and
movsl
das
test
mov
daa
jno
je
rcr
icebp
or
pop
mov
jl
imul
jp
mov
dec
in
aaa
cmpsb
sub
jg
fs
mull
adc
xchg
icebp
cmp
add
mov
rolb
lahf
adc
enter
sub
inc
test
test
add
loop
jnp
dec
jo
pop
outsb
cmp
clc
cld
mov
arpl
fcomp
inc
jl
xchg
ss
daa
std
xchg
loop
fsubs
and
adc
or
loopne
jbe
dec
and
sbb
push
arpl
ljmp
pop
dec
jl
ficoms
jmp
pop
je
int
mov
idiv
add
xor
mov
addl
push
mov
stc
pushf
fwait
mov
scas
imul
mov
lea
cltd
ljmp
or
pop
dec
lods
shlb
mov
sub
mov
mov
jle
es
bound
test
lahf
ficoml
movsl
scas
ljmp
dec
addr16
into
mov
sub
repz
fs
iret
dec
jne
jmp
jo
aad
fnstcw
sbb
rcr
cmp
scas
or
jo
ds
cltd
sbb
jne
cmc
push
sbb
cld
mov
xchg
cmp
pop
fldt
mov
ds
cmp
push
xor
rcl
in
out
sub
inc
jae
testb
ret
mov
mov
inc
xchg
pop
sub
subb
sbb
xchg
push
jno
dec
add
pop
gs
xorl
add
xor
or
mov
push
jo
fisubs
insl
or
out
call
mov
les
jnp
pop
sbb
roll
ficomps
and
push
sbb
push
push
hlt
mov
dec
jl
xor
leave
es
jae
jle
dec
arpl
repnz
pop
cmp
xchg
aam
adc
xchg
mov
mov
lock
jg
mov
iret
mov
push
xchg
mov
call
and
or
add
insb
pusha
xchg
jl
popa
lock
loope
enter
and
popa
js
icebp
cli
pop
icebp
ja
call
je
call
test
cmpl
jbe
addr16
dec
pop
lds
push
push
jp
jl
cs
lcall
aas
pushf
call
inc
ljmp
xchg
sbb
mov
dec
dec
jg
pushl
lret
mov
pushf
push
movsb
idivl
pop
xor
dec
dec
inc
ffreep
stos
mov
or
lods
cmp
jnp
sti
and
cmpl
test
push
inc
scas
fidivs
in
mov
xchg
stc
push
popa
movsl
push
or
ja
jge
sbb
sub
test
push
arpl
add
mov
jp
add
clc
fwait
adcl
jle
mov
push
leave
mov
inc
push
fwait
adc
jns
push
adc
sub
fdiv
push
je
and
les
ds
mov
xlat
lods
fdivl
jg
xchg
dec
lods
adc
lret
or
dec
shrl
icebp
push
ret
cmp
inc
push
pop
fmul
fnstsw
and
adcb
decb
hlt
js
push
fnstenv
popa
mov
mov
jp
pop
aam
test
push
and
ret
mov
frstor
test
enter
inc
push
out
cmp
push
xchg
cmpsb
mov
imul
addr16
mov
pop
jb
pop
test
inc
or
adc
ss
int3
sbb
les
add
cmp
aam
push
aad
or
sahf
xlat
pop
xor
nop
mov
ss
xchg
ja
mov
push
push
mov
mov
pusha
mov
cmp
mov
mov
daa
and
add
push
mov
mov
cmp
sbb
cmp
out
push
inc
mov
repnz
fisubl
cmp
sub
scas
mov
jge
add
cmp
or
enter
jns
pop
mov
movsb
shrl
popa
mov
jo
sbb
nop
and
sbb
inc
or
dec
push
cld
sahf
push
in
jb
pop
insb
or
inc
xor
sbb
push
sti
cmc
ljmp
cmpsl
popa
fimull
lret
addr16
push
mov
pop
pop
add
or
xor
mov
fisttps
jns
cmp
inc
or
shr
jecxz
push
mov
mov
js
scas
mov
jo
pop
cmp
je
or
xor
insb
mov
das
aam
test
push
test
push
xchg
pop
iret
xchg
pop
je
fstl
sbb
push
in
add
cmc
jl
insb
dec
stos
xchg
xchg
mov
or
fxch
cwtl
inc
rorl
popf
rdtsc
dec
push
mov
xor
lret
mov
and
in
dec
jne
lcall
ja
pop
jo
imul
out
insb
dec
adc
imul
inc
rcrb
aas
mov
aad
ljmp
sub
sbb
inc
jae
adc
cli
mov
mov
enter
add
shrl
stc
stos
push
jp
aas
leave
and
adc
mov
sbb
shlb
cli
cmc
seta
repz
and
and
xchg
push
xor
cmc
jl
jg
fldcw
sub
nop
cmp
in
pop
mov
nop
fsubs
jl
mov
jle
sti
in
xor
rorl
testl
cmpsl
jb
rcr
test
push
add
pop
sub
shll
and
sbb
int
xchg
dec
xor
nop
mov
mov
mov
jae
into
inc
jmp
addr16
fsubr
xchg
lret
in
orb
in
jmp
push
adc
inc
or
repnz
mov
repnz
imul
clc
or
or
out
cltd
sub
stc
rorb
xchg
sbb
repz
shlb
in
ss
and
imul
and
push
fs
push
xchg
loop
add
and
or
mov
das
scas
int
mov
std
dec
arpl
lods
jle
inc
jl
cwtl
cwtl
mov
daa
hlt
cmp
fistpll
jnp
cld
gs
inc
jl
imul
fiaddl
test
sahf
mov
adc
and
mov
sub
mov
push
mov
push
cs
jmp
and
ret
repnz
push
jb
ljmp
lods
call
iret
xchg
cmpb
ret
sub
xchg
test
cmp
pop
aaa
hlt
pop
jle
inc
or
jl
mov
pop
ret
push
into
shll
leave
inc
and
imul
popl
testb
popa
test
push
imulb
dec
loop
sahf
data16
dec
mov
inc
loope
inc
repz
mov
loope
mov
adc
adc
cmc
xor
mov
test
xor
adc
mov
repnz
ficoml
rorl
jne
inc
cld
ret
add
hlt
dec
mov
clc
fdivrs
int
sbb
dec
imul
or
pop
in
inc
and
std
lcall
mov
push
repz
adc
or
mov
fwait
notb
adc
dec
call
idivl
aas
in
out
add
mov
stos
sahf
es
cli
fistl
pusha
xchg
cld
jmp
movsb
loop
pop
xor
fcompl
lret
das
xchg
add
pop
sub
ficoms
push
outsl
or
jge
sahf
sbb
inc
jmp
pop
inc
inc
sub
sub
dec
dec
dec
add
arpl
test
lahf
inc
add
add
cmp
xor
call
sbb
mov
xor
lea
hlt
test
daa
fimull
xor
insb
sub
and
ficoml
repnz
imul
inc
mov
rcrb
mov
ja
nop
in
jno
pop
push
test
mov
insb
inc
xor
int3
push
add
gs
sahf
push
or
sub
pop
gs
ljmp
inc
das
adc
scas
dec
stos
jne
push
sar
mov
sub
or
push
push
cli
roll
daa
cmp
and
daa
push
cmp
dec
pop
dec
sahf
or
push
mov
jo
push
bound
test
shl
out
adc
movsb
repz
push
icebp
jb
scas
add
movl
push
xlat
outsb
fcompl
in
xchg
movsl
push
sbb
sbb
cmp
cmp
cs
adc
push
lock
fdivrp
jle
xchg
jo
aad
sbb
mov
pop
loopne
jge
jp
inc
mov
movl
loope
cmp
stc
out
inc
sahf
stc
xor
cmp
pop
mov
add
out
insl
sub
rcr
aad
gs
nop
sahf
sahf
mov
push
sbb
or
sub
mulb
push
and
sub
cmp
push
hlt
sti
mov
lahf
out
adc
pop
cltd
insb
or
xlat
scas
test
add
subl
fistpll
adc
or
imul
add
lahf
and
fs
mov
pop
xchg
inc
jbe
outsb
jmp
lret
iret
loop
xchg
jl
fdivrs
das
imul
jns
sbb
shr
sbb
adc
cmc
addr16
gs
pop
aam
xchg
add
adc
inc
xchg
andb
test
sub
fbld
std
sub
xchg
xor
call
mov
insl
sbb
jmp
mov
pop
pop
cmpsb
repnz
xor
dec
subb
mov
jbe
test
mov
in
in
cmp
subl
jmp
cmp
mov
push
xlat
mov
adc
shll
int
sub
mov
les
or
testb
inc
test
mov
xchg
mov
fucomp
jmp
and
mov
inc
xor
jmp
cmp
in
and
daa
mov
cmp
les
leave
hlt
call
jae
gs
sti
mov
mov
fmuls
outsl
jg
jne
dec
fsts
mov
xchg
mov
dec
pushf
add
nop
mov
mov
nop
xchg
mov
rolb
lea
jg
das
sbb
xchg
mov
leave
and
shll
push
cmp
cmc
inc
aas
bound
sahf
pushw
loopne
inc
push
pop
ficompl
repnz
fisttps
push
hlt
adc
outsl
fcomi
mov
jle
jp
stos
lods
gs
xchg
sbb
in
xchg
push
dec
repz
or
or
xor
jbe
adc
fsubp
aaa
cmp
push
mov
xchg
jg
ljmp
mov
xlat
fdivs
je
jne
xlat
jbe
sub
mov
sbb
into
jp
fldt
mov
ret
mov
movsl
gs
icebp
ret
add
data16
sbb
int3
subw
pop
out
fidivs
pop
cmp
xor
push
incl
pop
mov
mov
xchg
mov
mov
ret
js
and
imul
fidivl
lret
sbb
sbb
jl
sarl
sub
cmp
pop
and
test
xlat
aad
xor
aas
jg
cmc
push
jp
sbbl
jmp
push
pop
fwait
lods
xchg
cmp
scas
lret
xchg
mov
shl
cmp
test
js
movsl
ret
and
sub
rolb
add
mov
or
xor
push
dec
mov
shll
mov
and
jmp
stc
leave
inc
aad
or
xor
lock
pop
jle
adc
cmp
pop
sub
xchg
cmp
dec
inc
pop
pop
mov
adc
arpl
and
addr16
int3
insb
mov
mov
mov
ffree
pop
mov
mov
jp
adc
push
push
or
and
push
mov
test
push
hlt
int3
xor
sarl
push
sar
cmp
int3
xchg
lock
push
sbb
andb
leave
cmpsl
dec
xlat
mov
inc
push
mov
sub
mov
pop
lcall
ret
stos
dec
mov
in
push
xor
add
and
pushf
xlat
out
sub
jno
sbb
inc
movsb
lret
frstor
test
fidivrs
xchg
in
movsb
inc
rcr
fnsave
fcomi
cli
aas
mov
cmpl
aam
sbb
cmp
cmpsl
mov
add
inc
xor
xchg
sbb
sbb
sbb
push
cmp
add
pop
adc
cli
aaa
mov
sub
sbb
nop
mov
jmp
xorl
push
jle
rcrb
pushf
xchg
outsl
dec
xchg
xorl
flds
xchg
js
cwtl
xchg
xchg
adc
lock
in
mov
in
xor
mov
add
in
mov
loop
test
mov
fmul
outsb
cmc
enter
insl
and
pop
cld
shrl
adc
mov
push
mov
dec
imul
inc
mov
xor
sbb
cwtl
jae
xor
ficoml
pop
pop
testl
mov
and
mov
and
hlt
jecxz
imul
sub
lock
lods
aam
call
pushf
and
cli
fiaddl
push
sbb
xchg
mov
mov
sbb
in
data16
mov
cmp
dec
pop
add
es
xor
popf
popl
push
jge
arpl
aas
scas
iret
or
lret
mov
lea
xchg
lea
repnz
cs
push
inc
inc
xchg
not
pop
push
inc
xor
out
arpl
bound
scas
daa
or
xchg
lock
jl
out
xor
xchg
sahf
mov
sti
or
inc
stos
ja
fnstenv
out
or
xor
imul
shrb
adc
xchg
stos
pop
adc
imul
pusha
pop
lahf
pop
pop
or
out
cmpb
fisttpl
mov
adc
ds
add
xor
push
adc
adc
movsb
mov
int
mov
shlb
xchg
lea
cmpsb
cld
pop
mov
cmp
jo
sbb
or
pop
lret
sub
mov
addr16
sub
into
mov
out
lods
lods
xchg
and
ret
push
imul
pop
jbe
insb
cmpsl
sbb
call
xchg
mov
mov
push
xlat
popa
adc
sbbb
cmpsb
loope
iret
dec
loope,pt
jle
sti
cmp
mov
inc
mov
repz
mov
jo
jo
test
aad
aaa
adc
out
add
sarb
adc
mulb
mov
insl
test
xorl
pop
mov
sub
jg
movsb
mov
dec
aam
jge
ss
adc
dec
rclb
jecxz
jbe
test
add
repz
sub
ret
or
outsl
adc
cmpsb
scas
mov
pop
sbb
std
dec
fcomps
test
jmp
popf
cmp
cltd
mov
dec
lock
call
inc
adc
mov
add
mov
jge
imul
mov
mov
ja
and
clc
mov
push
jne
scas
mov
dec
xchg
sub
mov
lods
mov
test
movsl
mov
mov
and
mov
mov
push
cmp
cmp
out
pop
jmp
dec
cmp
mov
mov
push
sub
shl
repnz
sbb
pop
adc
sub
push
scas
add
out
xchg
rolb
jge
mov
adc
cmpsl
lret
inc
xor
es
mov
push
imul
mov
fildl
dec
push
sarb
xlat
in
ss
fstps
and
in
into
inc
xchg
gs
sbb
cmpsb
imul
outsl
mov
popf
ds
push
dec
les
cmpsb
bound
cmpsb
jnp
sbb
stc
add
push
ja
jb
fxch
orl
push
or
push
mov
dec
adc
dec
mov
xor
mov
sub
sub
out
inc
add
xorl
sub
jmp
cmpsb
ret
lods
out
xchg
lods
add
cmpsb
ret
in
mov
cmc
pop
lea
loop
sub
sbb
mov
sbb
imul
jnp
cwtl
mov
int3
pop
cmp
adc
incl
js
sub
out
das
push
fmull
and
in
sub
mov
cli
jb
push
cltd
scas
ja
and
jecxz
mov
mov
mulb
dec
pop
das
sub
mov
aaa
push
pop
mov
movl
sarb
pop
int
mov
je
adc
je
fimull
in
cmp
add
clc
mov
dec
sbb
jle
xor
lret
sbb
shrb
sbb
test
mov
dec
add
hlt
add
out
scas
lret
pop
scas
pusha
pop
push
outsl
aam
imul
pushf
push
or
mov
cmp
lea
cwtl
sbb
movsb
mov
pop
fcomps
jg
pusha
dec
std
je
mov
push
mov
rol
push
data16
inc
rclb
xlat
push
jne
jl
enter
decb
mov
sbb
paddusb
sub
pusha
xor
fwait
xchg
push
xor
cltd
adc
pop
call
aas
das
xor
cmc
ret
jb
xor
lea
in
cmp
or
push
loop
mov
sti
jno
mov
inc
cmc
iret
cmovns
std
loopne
lods
gs
push
xchg
js
mov
fldcw
sti
cmpsl
in
or
jg
jns
inc
js
mov
and
push
ljmp
sbb
add
idiv
inc
cmp
jmp
pop
xor
testl
push
in
imul
hlt
fadds
fcompl
mov
loopne
shrl
in
add
lock
ret
enter
movsb
and
negb
in
stos
cmpsb
or
out
mov
jmp
leave
sub
stc
inc
and
pop
nop
test
clc
test
data16
cmpb
dec
aam
mov
xchg
sbb
inc
cmpsb
test
or
sbb
xlat
cmp
sarl
pop
and
in
sahf
jae
enter
push
push
jb
dec
mov
xchg
and
imul
punpcklbw
adc
mov
ret
inc
stos
jge
lds
inc
popf
test
push
sbb
xchg
pop
nop
xchg
cmpsb
adcb
xor
outsl
pop
lods
pusha
jge
cli
dec
jae
int3
sbb
rcll
mov
mov
inc
mov
shlb
ljmp
mov
aad
and
cmp
stos
repnz
stos
pop
movsl
dec
push
scas
pop
mov
add
sub
jl
and
sub
inc
lret
xchg
outsb
push
xchg
xchg
imul
pop
jecxz
add
lock
stos
in
sub
sub
xor
xor
imul
add
xor
ficomps
xor
jge
into
notb
xor
mov
and
sub
xor
rclb
and
xchg
pop
aam
dec
add
jmp
sub
jp
push
mov
pop
and
or
ret
dec
mov
in
push
pop
movsb
sahf
das
fimuls
loope
int3
mov
jb
fs
not
int
add
cmpsl
and
sbb
arpl
adc
notl
sbb
mov
xor
ja
mov
popf
aas
xchg
dec
sub
loop
iret
movsl
movsb
andb
sbb
pop
stos
popa
in
jnp
popa
jg
jno
dec
inc
sbb
cld
jne
jne
mov
int
dec
push
mov
loop
dec
in
dec
fcom
into
js
fnstsw
jg
stc
fwait
and
and
mov
imul
neg
mov
jbe
cmpsl
xchg
lods
sub
jmp
inc
bound
adcb
mov
int
pop
leave
sub
movsl
pop
add
or
mov
pop
xor
cmpsb
nop
fiadds
or
out
push
inc
hlt
ret
ss
mulb
and
xchg
pop
inc
mov
fldenv
mov
stos
mov
jae
mov
cmc
push
std
clc
push
test
sti
or
shlb
dec
lret
jo
push
andb
and
ficoml
inc
cmp
into
stos
and
pop
sbb
std
push
out
inc
sahf
mov
sub
adc
dec
xchg
scas
dec
bound
mov
xchg
xor
adc
dec
mov
clc
daa
xchg
sbb
lock
lret
mov
and
push
mov
and
and
inc
jae
push
cmp
or
jecxz
pop
fldl
sub
call
jns
adc
sbb
out
add
adc
jae
push
mov
gs
sub
shrb
xlat
test
push
leave
subl
sti
je
mov
popf
xchg
shlb
mov
clc
push
iret
mov
and
jecxz
adc
adc
push
mov
adc
sub
jge
hlt
scas
adc
push
shll
xor
push
xor
mov
sarb
add
sub
cmp
lfs
pop
mov
insb
pop
out
jns
cmpsb
mov
xor
jmp
andb
es
cmp
jb
sub
jle
in
sbb
movsl
and
lret
ret
sbb
push
sbb
aas
jbe
sub
push
jb
jg
cmc
aas
mov
push
mov
cmp
lea
stos
ret
orb
push
pushf
pop
inc
cmp
out
inc
les
shll
mov
movsb
call
xchg
or
and
in
xchg
out
shl
imul
xor
or
insb
ret
ja
in
cmp
jnp
cmp
xor
lods
jg
sbb
fstl
cmp
sub
enter
shll
lock
lds
loopne
scas
dec
mov
mov
mov
push
aad
add
add
sbb
iret
adc
ja
popa
mov
pop
pop
lret
pop
lods
xchg
cmc
mov
and
sti
loop
jnp
jnp
lahf
or
dec
fadd
outsb
xor
xchg
in
mov
in
or
pop
stc
xor
fisttps
adcb
pop
push
cmp
subb
sub
fisubrs
sbbl
scas
sti
insb
push
and
or
fstl
push
aas
lcall
push
call
or
clc
xchg
in
fincstp
shrl
pop
leave
lea
gs
aaa
out
sbb
mov
mov
jmp
dec
mov
fcoms
stos
inc
and
gs
fsubp
mov
and
lods
hlt
sbbb
lods
jecxz
mov
nop
lret
push
cmp
clc
sbb
dec
ds
lahf
mov
mov
adc
pop
shrb
int3
outsb
mov
jnp
call
hlt
ljmp
daa
test
cwtl
pop
inc
jecxz
popa
jnp
xchg
push
jp
andl
mov
xor
adc
inc
dec
cmp
xor
cmpsb
divl
inc
loope
insl
lcall
and
mov
test
xor
enter
popf
push
sti
repnz
sub
jnp
sub
sahf
ret
into
out
shll
mov
sub
aaa
xor
mov
sbb
dec
lock
aas
cmp
mov
cmc
dec
xor
icebp
call
add
aam
pop
and
sub
js
dec
in
call
adc
sarl
sub
push
cld
add
inc
lcall
inc
push
inc
mov
mov
mov
or
call
rclb
in
mov
cmp
inc
stos
jno
jg
stos
and
stc
pop
sub
xlat
in
lahf
jb
das
ds
or
inc
mov
dec
aam
sub
jle
add
add
xor
cltd
cmp
mov
rcrb
fcomps
idivb
mov
out
shrb
sub
repz
mov
jno
repz
sahf
xchg
dec
movsl
sahf
cmpsb
push
and
stos
cli
sbb
arpl
popf
sub
lods
stos
sub
repnz
incl
repz
scas
mov
xlat
mov
or
lds
xlat
mov
outsb
in
adc
dec
xlat
lods
lahf
mov
push
je
mov
and
inc
outsl
xchg
lods
daa
mov
in
pushf
je
mov
adc
mov
setno
test
scas
fstpl
rol
lea
mov
in
or
cmp
arpl
dec
inc
sub
dec
push
cwtl
mov
mov
leave
out
into
mov
cltd
leave
pop
sarb
lock
rcl
or
lret
cmc
push
xor
xchg
inc
sub
xchg
aad
inc
or
fdiv
lret
and
mov
fidivs
and
jmp
or
loopne
int
add
aad
rorb
out
dec
lods
js
test
push
loop
gs
and
pop
insb
add
jo
cmp
push
mov
sub
cmp
das
mov
add
fists
jecxz
jge
mov
lret
std
pop
cld
aas
fcmovnu
push
stos
movsb
or
jle
mov
or
or
in
push
adc
add
xor
mov
adc
je
sub
xlat
push
push
outsb
sbb
into
idiv
sub
std
es
push
fnstsw
push
loopne
sub
or
lcall
movsl
pop
adc
enter
ljmp
jecxz
fsubr
xor
xchg
pushf
jb
loope
push
ret
mov
test
das
add
sbb
roll
out
dec
xchg
inc
test
push
aad
push
cltd
rol
inc
inc
or
je
mov
push
popa
std
ret
out
leave
test
jmp
mov
jecxz
xchg
add
fdivrs
testl
xor
js
lds
jae
or
dec
sub
dec
mov
addr16
es
das
scas
nop
push
dec
pushf
nop
add
adc
mov
mov
dec
jnp
int
mov
int
cli
mov
mov
add
not
div
test
movsl
fucomi
aad
xchg
or
push
cmp
pop
jp
or
cmp
insb
stos
dec
inc
jmp
sbb
pop
mov
leave
and
lahf
push
add
adc
repnz
jmp
insb
inc
pop
xor
xor
int
cs
in
test
push
popf
mov
out
mov
dec
mov
mov
and
jmp
mov
lahf
and
aam
adc
xchg
mov
mov
fwait
cltd
push
pushf
shr
xchg
inc
cs
in
ret
inc
call
inc
fsubs
pop
jo
pop
add
insb
cmp
mov
int3
in
dec
mov
fs
xchg
fisttpll
add
pop
and
fsts
fwait
sub
test
dec
jmp
lahf
xorl
add
out
sub
imul
cmp
mov
out
cltd
mov
dec
scas
in
xchg
sbb
pop
rdmsr
jl
xchg
sub
xchg
adcb
xchg
and
bound
fisttpl
push
bound
rorl
imulb
add
sub
ljmp
clc
fs
adc
daa
cmpsl
xchg
fisubl
aad
pop
xchg
dec
subl
push
dec
enter
dec
mov
das
repnz
mov
push
aas
nop
pop
jb
cmp
dec
sub
int3
cs
add
loop
test
mov
mov
or
lahf
mov
mov
add
fisttpl
ja
fstpt
or
mov
in
nop
insl
add
or
mov
cmpb
cltd
add
fisttps
mov
push
mov
enter
xorb
sti
cmp
push
hlt
sarl
out
sub
mov
int
lahf
jne
je
adc
ds
cmp
mov
lahf
push
movsl
mov
imull
xchg
or
mov
sbb
push
stc
or
mov
test
cmpsl
sbb
cmpsb
mov
mov
imul
movsb
inc
sbb
test
sub
xor
mov
test
xor
inc
data16
in
insb
lea
or
test
outsl
jg
xchg
mov
add
push
mov
ss
or
fiadds
mov
pop
icebp
out
or
sbb
cltd
and
movsl
push
lock
add
sbb
cmp
call
pop
xchg
push
push
dec
push
add
mov
cmpsb
inc
sub
adcb
imul
rolb
sbbb
dec
or
fstps
add
mov
dec
xorl
idivl
insl
mov
mov
ja
mov
lea
mov
pop
add
clc
dec
bound
mov
push
shl
outsb
data16
dec
shlb
sub
pop
pusha
je
pop
mov
je
dec
stos
inc
add
jne
and
push
sbb
cmpsb
and
outsb
mov
addb
sub
int
fiadds
push
lahf
lds
iret
fdivrl
int3
inc
and
aad
test
rolb
popf
pusha
dec
add
decl
scas
or
dec
cltd
mov
pop
pop
aaa
jo
push
insl
insb
adc
mov
add
jno
sti
in
lods
push
sub
pop
les
shll
ds
ljmp
mov
jne
adc
jmp
das
xchg
loope
jp
and
mov
sbb
call
sbbb
lds
mov
push
sbb
mov
out
xor
inc
orl
add
mov
shrb
lock
push
add
push
sub
leave
lds
ss
adc
dec
xor
inc
mov
sbb
mov
mov
jp
sbb
push
rcrb
jecxz
in
fcmovbe
xchg
shlb
cmp
movsb
loopne
pushf
xor
ja
test
push
or
insb
cld
mov
push
adcb
cmp
sahf
xor
xor
mov
mov
push
cld
pop
out
xor
test
mov
mov
shlb
call
fisttpll
mov
aam
cmp
inc
xor
dec
out
je
enter
sbb
jnp
mov
int
dec
mov
ret
dec
icebp
cltd
push
adc
data16
push
sub
insl
inc
aas
popf
pop
int3
inc
xor
lock
cld
jns
shl
mov
mov
decb
mov
jae
outsl
cwtl
xchg
pop
test
mov
outsl
lods
xor
xchg
cmp
out
pop
pushf
fs
fwait
xor
jae
clc
xchg
mov
mov
roll
push
pushf
enter
jne
jg
push
mov
popf
int
mov
addb
and
xchg
jne
pop
idivb
sbb
fdivr
dec
and
pop
dec
jno
adc
sbb
std
dec
mov
call
cmp
or
xchg
xchg
insl
mov
fs
ret
mov
stos
dec
enter
test
in
sbbb
sbb
cmp
jnp
addr16
imul
add
mov
dec
clc
imul
nop
mov
xorl
jae
pop
add
jp,pn
pop
in
rolb
fcom
xor
lock
jne
imul
inc
ds
xchg
mov
pop
and
jb
jbe
cmpsb
icebp
lds
xchg
lea
cmpsb
cmp
fisubs
xor
xchg
sbb
mov
cmc
aad
xor
aaa
gs
mov
cmp
fwait
les
ljmp
hlt
subb
sbb
imul
jmp
mov
xchg
adc
or
enter
mov
lods
jnp
inc
sub
push
xor
sub
and
cmp
rcrl
cmpsl
sub
rsm
and
mov
pop
outsb
movl
add
and
sub
jmp
loopne
add
sbb
mov
inc
out
mov
addr16
cmp
andl
dec
pop
jns
in
addb
cmp
jae
fs
stc
neg
adc
cltd
jb
cmp
xor
les
repz
dec
push
outsb
test
in
dec
jae
inc
inc
xchg
and
test
ja
and
push
xor
add
adc
aad
xchg
mov
popa
mov
pop
inc
mov
or
fidivrl
fadds
inc
bound
pop
test
push
out
jbe
adc
push
test
sub
rclb
scas
inc
jl
push
sub
lock
xlat
pushf
ja
jl
pusha
cmp
jmp
in
fcmovbe
insb
fcmovu
loopne
aaa
jge
mov
xor
pop
movsl
bound
and
xlat
testl
pop
and
cmp
inc
xor
mov
mov
pop
imul
movsb
mov
gs
lds
xchg
sbb
pushf
or
jl
add
ja
andl
xor
mov
test
subb
pop
mov
inc
insb
sarb
xorb
dec
adc
and
pop
lret
add
imul
shll
pop
push
out
sarl
mov
test
sti
int3
pop
sub
jae
dec
arpl
jl
mov
mov
loopne
scas
das
adc
dec
or
adc
outsl
sbb
ss
mov
popf
jno
push
push
aas
push
sti
cs
or
jns
sub
cmc
dec
lods
mull
ret
sarb
and
push
mov
push
push
xchg
sub
dec
fidivrl
insb
iret
xchg
call
sub
daa
loope
mov
mov
dec
shlb
xchg
xchg
push
adc
push
mov
popf
cmpsb
adc
mov
cmp
add
xchg
testl
push
in
sbb
xchg
lret
lea
je,pn
daa
adc
mov
xor
adc
jno
or
ret
or
lahf
jnp
out
movsl
jle
push
out
push
sbb
cmc
sbb
int
cld
and
or
mov
test
fwait
push
sub
pop
mov
std
or
nop
scas
xor
int3
push
adc
add
add
jb
dec
sub
arpl
and
negl
pushf
xchg
out
push
pop
inc
mov
cmp
rcl
mov
loopne
in
data16
push
xor
xor
mov
add
jecxz
cmp
sub
lods
or
dec
into
ror
mov
xor
les
jp
jmp
ret
jae
inc
xchg
ret
xchg
jbe
and
insb
dec
out
cmp
dec
sub
xchg
in
xor
xorb
dec
mov
mov
or
push
push
mov
into
push
popa
mov
lret
pop
sbb
add
xor
adc
loop
dec
aaa
ss
xorb
mov
dec
adc
fcom
dec
mov
dec
ds
cwtl
leave
sbb
shll
leave
lods
imul
enter
push
ficomps
jg
nop
mov
sub
sti
and
test
push
stc
cmc
pusha
sbb
mov
mov
inc
dec
inc
rcr
imul
push
mov
aaa
shll
out
loop
jns
fs
pop
rcrb
push
movsl
lcall
mov
scas
rol
mov
jg
movsl
or
icebp
push
pop
nop
jl
and
stos
idivl
popl
push
mov
fistpl
inc
sub
in
dec
out
popf
xchg
ret
lods
outsb
push
loopw
lret
or
push
popl
cmp
push
jns
test
jmp
jne
pop
arpl
or
leave
into
add
call
add
repnz
aas
popa
sbb
cs
in
mov
or
mov
cmp
mov
dec
loop
sbb
iret
mov
xor
add
inc
ljmp
das
dec
pop
int
out
and
call
out
pop
stc
mov
mov
mov
mov
shr
mov
jp
xchg
push
or
into
cmp
jne
push
push
addl
fs
or
mov
pop
push
or
cmpl
jno
push
pop
cmp
jmp
sub
outsl
or
push
clc
cmp
mov
mov
cmp
sub
icebp
jb
dec
jns
mov
mov
loopne,pn
push
into
popf
adc
jmp
cmp
xchg
dec
aaa
mov
mov
xor
decb
push
inc
mov
add
add
or
push
inc
into
xchg
test
mov
mov
push
cld
and
dec
fbld
add
mov
xchg
add
test
je
dec
jmp
stos
fxch
dec
call
pop
sbb
movsb
bound
je
mov
inc
adc
je
insb
and
dec
push
push
mov
arpl
pop
fdivrl
xor
sbb
xchg
adc
mov
or
inc
adc
mov
mov
or
vmovdqa
les
addl
into
sbb
mov
sub
xlat
cmp
push
cmpsb
mov
inc
sbb
xor
movsb
xchg
or
cmpsb
aas
mov
lea
pop
les
das
sub
mov
mov
ret
mov
xchg
sbb
mov
enter
or
pop
add
andl
jo
daa
pop
mov
pop
push
cmpb
xchg
jno
js
sbb
pop
jae
addr16
mov
fsubrl
sbb
aam
in
pop
inc
push
dec
pop
data16
testl
jp
test
add
int3
das
ffreep
hlt
test
pop
mov
mov
punpcklbw
mov
push
jle
push
jb
inc
sarl
pop
sub
dec
cmp
sbb
test
sbb
ret
pop
mov
fidivs
inc
pop
outsl
test
out
sub
outsb
sub
push
cltd
out
add
dec
js
mov
sbb
pop
sbb
lea
jae
cmp
adc
xor
fld
push
sub
cmp
cmpsl
xor
jecxz
ja
stos
or
push
scas
aaa
cmp
add
inc
push
sti
or
call
push
sub
das
inc
add
nop
mov
inc
push
pop
jbe
loopne
test
in
aad
add
and
cmpsb
repnz
jns
out
jb
sbb
push
test
adc
sub
xchg
mov
popa
push
and
test
popa
xchg
mov
dec
push
mov
fcmovbe
inc
es
and
stos
notb
mov
insl
out
imull
sbb
adc
xchg
cmp
mov
push
cmpsb
pop
sti
sbb
xorl
icebp
push
adcl
movsl
rolb
rcll
or
sub
inc
stos
cmc
jecxz
pop
adc
ret
bnd
in
dec
test
cmp
jle
lcall
jmp
sysret
xlat
add
and
sarb
testl
cld
jp
inc
or
daa
push
jle
adc
rolb
cmpsl
mov
jo
andl
adc
movsb
nop
mov
pusha
cmp
jb
add
dec
int3
mov
loop
gs
addb
sbb
fwait
xchg
push
mov
sahf
outsl
push
inc
int3
push
cmpb
ret
loop
adc
sbb
jge
adc
test
test
scas
insl
fsubl
mov
addr16
sbb
mov
cmpsl
xor
std
popa
out
popf
and
inc
pop
out
xor
cmp
dec
scas
shrd
xchg
mov
sar
jp
in
dec
xchg
jnp
mov
fidivrs
stos
loop
popf
xchg
or
rorl
push
jg
sbb
xchg
cld
push
aad
loope
inc
mov
sti
cld
lds
jo
test
pusha
add
stos
daa
call
pop
ja
mov
or
jg
div
sbb
push
add
fwait
stos
add
leave
push
jno
jp
push
cmpsb
repz
scas
add
mov
pop
in
jbe
test
fsubrs
test
dec
jbe
sbb
inc
loopne
ljmp
in
out
sbb
cld
pop
mov
and
pushf
xchg
pop
das
push
loop
mov
mov
sbb
cltd
aas
add
xchg
scas
hlt
xchg
xlat
or
rorl
or
imul
lret
lret
or
push
mov
loopne
and
inc
stc
clc
push
mov
rorl
das
movsb
gs
out
or
fstps
aaa
add
mov
loope
sar
adc
mov
lds
and
mov
or
jle
popa
mov
add
pop
or
cmp
pop
pushf
out
call
testb
mov
mov
dec
clc
mov
out
jle
subl
popa
cmp
lods
fucompp
stos
pop
rcrb
daa
jg
addr16
and
cmpsb
daa
mov
jns
and
and
lcall
mov
fbld
call
repnz
mov
clc
inc
add
dec
nop
or
lods
movsb
mov
cmp
dec
cld
push
mov
data16
out
xlat
jbe
xor
jl
inc
push
cmp
sbb
ret
xchg
inc
jae
jecxz
rclb
cmp
push
insb
fisubrs
push
add
jl
in
stc
xchg
xchg
popl
add
out
cmc
cs
mov
pop
test
cmpb
and
test
mov
cmpsl
les
and
out
leave
enter
aaa
test
or
or
mov
ret
mov
lret
inc
adc
lcall
test
es
mov
sbb
lcall
int
sbbl
fimuls
add
cmp
pop
mov
xor
mov
jp
jnp
andl
mov
pop
repnz
push
ret
add
jmp
addr16
pusha
daa
inc
mov
mov
mov
test
out
sarb
out
push
sbb
add
jae
mov
js
push
ss
fcomip
sub
ss
cwtl
shr
jne
add
cmp
insl
mov
xchg
mov
les
mov
nop
jl
mov
dec
xchg
pushl
imul
jp
mov
sbb
cs
stos
test
pop
pusha
or
and
ljmp
push
pop
xor
sub
push
fstps
or
fimull
lcall
mov
jo
and
xchg
pop
je
jbe
jo
inc
mov
push
xor
stos
cmp
cmp
pop
mov
ficomps
loope
jp
or
xor
cmpsb
mov
cmp
scas
daa
es
inc
pop
dec
ss
idivl
jo
inc
jmp
lret
sub
mov
push
pushf
xor
sbb
mov
sub
push
fwait
mov
fs
push
cmc
call
sbb
fwait
insl
popa
loopne
add
out
jne
jne
popf
pop
fcomps
out
scas
jmp
stc
mov
jnp
inc
xchg
cmp
mov
mov
inc
decl
sub
inc
out
mov
es
or
cmpsl
xchg
test
sub
gs
bound
pop
stos
xchg
push
test
jbe
adc
cmpsb
loopne
into
mov
test
jp
mov
mov
add
out
adc
jb
mov
xor
stc
aad
cmc
psllw
mov
out
mov
mov
mov
fwait
push
inc
push
mov
cs
pop
cmp
lods
gs
rcl
adc
cmp
subb
sub
cmp
rclb
dec
orb
aam
mov
aad
adc
fxch
jecxz
fdivs
imul
gs
cld
push
ret
int
outsl
clc
add
jge
mov
xor
jg
xor
popf
ret
add
scas
push
movsb
jo
cmpsl
mov
stc
jne
ret
xchg
out
mov
mov
enter
mull
ds
mov
mov
jge
fstp
jle
scas
negl
test
mov
enter
lds
ljmp
mov
stos
xchg
addr16
mov
jl
stc
add
adc
inc
jbe
leave
sbb
pop
out
cmpsl
out
movsl
push
add
pop
pop
int3
xchg
add
das
sbb
and
out
std
sub
mov
mov
mov
add
push
push
cmpb
mov
shrb
fbstp
enter
jo
ljmp
xchg
out
sbb
daa
cmpsl
push
inc
cmp
stc
pop
out
jle
call
hlt
lods
pop
sub
call
jg
dec
adc
stc
add
adc
inc
adcl
add
mov
fsubl
mov
pusha
movsl
add
movsl
fistl
aad
jns
dec
insl
dec
sub
out
imul
xor
mov
pop
sub
dec
in
repz
imul
inc
imul
jns
hlt
out
sbb
lret
stc
scas
and
and
dec
mov
dec
cmp
cs
xlat
enter
adc
cmp
imul
push
dec
lcall
fisttpll
xor
lock
lahf
xchg
cmp
dec
push
push
fstpt
rcrl
pop
xchg
out
gs
push
xchg
pop
push
jg
cmp
xor
fisubrl
mov
mov
cwtl
xor
lret
fiaddl
hlt
sub
cld
jle
cmpsb
adc
mov
paddusb
stos
xor
neg
cmp
adc
leave
ljmp
enter
push
test
mov
test
clc
xorl
inc
mov
jle
cs
push
mov
or
adc
mov
add
add
pop
mov
std
add
xor
clc
push
and
sbb
mov
arpl
loope
cmpsl
test
xchg
mov
push
or
pop
test
xchg
cmpsl
pop
xchg
cmp
dec
outsb
sub
mov
sbb
testb
js
loope
je
aas
notl
cmp
sub
and
push
fwait
mov
pop
pushf
rcll
int3
pop
sbb
pop
bound
inc
jp
jl
pushf
cmp
les
pop
push
cmc
lds
loop
lock
movsb
int3
dec
popf
stc
inc
sub
push
shlb
mov
clc
ds
sbb
push
int3
fisubl
dec
sub
and
ds
jbe
inc
dec
push
aaa
cwtl
stos
or
inc
push
adc
mov
mov
std
popl
push
or
add
add
jle
xchg
repnz
insl
mov
pushf
ja
addr16
notb
pop
enter
push
in
adc
mov
adc
mov
xchg
fmull
dec
popf
push
adc
ja
inc
adc
xor
and
ror
xor
push
xchg
push
sarl
jb
sti
xchg
add
sub
adc
jp
popa
mov
xor
bound
pop
sub
cmp
add
dec
ret
lret
sbb
mov
dec
fcomi
jns
or
dec
mov
mov
fisttps
les
inc
data16
out
addb
mov
scas
xchg
cmp
mov
ret
push
jecxz
sbb
jb
xchg
fs
shll
xchg
scas
cwtl
rcrl
sar
and
orl
lret
pop
in
cli
je
mov
mov
mov
add
jg
push
mov
jg
iret
cmc
les
mov
mov
das
jp
in
cmp
dec
mov
jns
stc
icebp
push
dec
outsl
into
aas
mov
daa
jno
out
aas
mov
ret
mov
push
pop
int3
or
push
stos
pop
mov
or
loop
ds
and
add
sahf
movsl
into
sub
xchg
stc
dec
mov
cmpsl
or
pop
jle
outsl
cmc
mov
sbb
int3
out
and
mov
cmpsb
mov
daa
lcall
loope
mov
popa
jle
pop
scas
loopne
cld
sub
adc
popl
or
jecxz
xor
sbb
es
xor
lods
lds
les
lds
dec
xchg
into
das
pop
mov
and
adc
xor
push
cld
push
daa
aam
xchg
das
out
lret
inc
mov
sbb
mov
cs
inc
push
cmp
rorb
pop
jecxz
aas
mov
and
out
jbe
and
test
and
jnp
pop
sbb
xor
jae
push
movsl
sub
cmpsb
js
adc
xchg
mov
and
dec
call
fsubs
cli
pop
adc
pop
test
xchg
pop
jge
mov
dec
fmul
lahf
cmp
sub
outsl
ror
insb
sbb
lods
cld
push
jno
mov
push
mov
push
arpl
leave
push
pop
pop
cmp
int3
mov
or
in
push
push
out
pop
sub
mov
loope
sbb
pop
pop
inc
addr16
adc
sub
jg
mov
xor
sub
inc
imul
je
rcl
pusha
imul
call
adc
cmp
call
iret
cwtl
test
sbb
inc
push
rcrb
das
push
popa
das
adc
dec
fisttpl
loop
mov
pusha
jp
les
cltd
jnp
push
leave
mov
cmp
mov
or
dec
out
sbb
ret
jnp
cwtl
pop
movsl
jnp
or
dec
sbb
add
outsb
sub
fildl
aas
sub
xorb
cltd
pop
insb
bound
bound
xchg
addr16
in
shll
inc
lcall
adc
in
inc
es
sub
push
push
xchg
cmpsl
add
cltd
xor
mov
sahf
aam
je
test
ss
es
jmp
cwtl
clc
fmul
cld
shll
ss
outsb
pop
adc
sbb
insl
jl
orb
add
inc
pop
add
fwait
sahf
test
fwait
imull
call
fwait
pop
int
and
les
xor
and
sub
mov
repnz
inc
cs
sbb
scas
stos
rorb
pop
outsl
add
nop
dec
or
jg
outsb
dec
xor
sti
or
jmp
fnstcw
insl
jnp
pop
xchg
pop
pop
mov
pop
inc
add
add
inc
in
scas
test
in
mov
inc
inc
lods
lea
push
sbb
xor
push
loop
xor
cmpsb
dec
cld
jae
cwtl
rol
mov
popa
shl
lea
mov
fwait
roll
pop
inc
mov
mov
outsl
testl
lea
orl
push
pop
pcmpeqb
push
cmp
xchg
jmp
adc
jb
mov
aad
jp
jg
adc
int
leave
xchg
jg
lret
sub
jbe
adc
xor
negl
sub
sarb
mov
or
sub
push
fstps
icebp
data16
lds
data16
sub
fildl
pop
movsb
sub
test
cmpsl
dec
mov
insb
daa
sbb
lea
mov
shld
insb
mov
mov
and
pusha
mov
test
cmp
cmp
stc
lret
fs
jns
mov
fistps
sti
arpl
pop
in
xchg
fistps
sub
dec
adc
sbb
cmc
xor
jns
loop
and
sbb
lret
fcmovne
pop
lods
mov
xor
cmp
adc
mov
xor
cli
neg
iret
aam
mov
push
pop
xchg
lock
jp
pop
adc
imul
lods
push
mov
sar
out
mov
outsb
xor
fcoml
lret
rcl
jbe
cmpb
pop
adc
stos
xor
mov
rclb
mov
cmpsb
cmpsb
xchg
dec
adcb
mov
loopne
sbb
jae
outsb
and
and
cmp
cltd
out
insb
lret
inc
mov
and
or
fdivrl
imul
push
fbld
pop
roll
push
jb
jmp
sti
ret
std
ja
imul
pop
dec
add
xorl
or
shr
lea
push
xchg
dec
je
das
xchg
lea
cltd
mov
mov
dec
decl
pmullw
mov
scas
outsl
aaa
fs
sub
mov
sub
stos
daa
scas
popa
jae
cld
icebp
insb
fcmovnbe
jp
insl
movsb
test
pop
inc
dec
pop
pop
inc
mov
mov
cmp
push
pop
lcall
sub
and
test
aas
lods
inc
ffree
iret
int
mov
sub
cli
out
sbb
hlt
je
jns
xor
xor
xlat
and
ds
jmp
xchg
jns
nop
sarb
pop
inc
cmp
or
add
or
fidivs
add
jecxz
je
push
cmp
out
jbe
xor
inc
push
push
rcll
sub
js
inc
sub
popf
shll
adc
jl
cltd
xchg
popf
push
push
mov
xlat
sbb
add
xor
jb
xlat
sub
cmpsl
push
pop
pop
fcomps
cld
jae
sahf
outsb
cmpsb
xchg
ret
mov
pop
aam
insl
jbe
lds
and
mov
cmp
fstps
sbbb
dec
xchg
and
into
xor
mov
sbb
repz
adc
jae
xor
jae
ror
dec
addr16
pop
mov
sub
sbb
push
mov
jbe
std
call
xor
inc
out
xor
pop
repnz
das
add
inc
xlat
pusha
mov
sarl
mov
lcall
fbld
mov
jbe
push
push
jne
js
mov
fwait
pop
out
cmp
in
lea
sbb
push
negb
fdivrs
outsl
mov
test
out
push
push
xchg
mov
hlt
mov
mov
test
push
jle
and
inc
xor
out
push
imul
mov
stos
sbb
sub
stc
xorl
mov
sbb
imul
in
adc
add
adcb
repnz
movaps
cmp
popa
or
scas
dec
mov
mov
jb
mov
pop
or
movsb
orl
mov
or
lds
popa
adc
insl
iret
scas
sub
jne
dec
dec
adc
pop
and
xchg
jb
icebp
xorb
shll
mov
mov
cmp
lock
pop
cmpsb
sti
dec
mov
aam
icebp
inc
inc
lea
test
push
scas
adc
pop
fstps
sub
popa
mov
mov
fstl
mov
stos
xchg
out
mov
sub
or
and
or
data16
jb
cmp
mov
mov
les
int3
pop
push
leave
movl
sahf
or
fs
jecxz
in
mov
xchg
cmc
repnz
rorb
xchg
int
xchg
aam
loop
jg
clc
xor
xchg
sbb
outsl
sahf
pop
aaa
lcall
xchg
lods
rorl
jno
imul
mov
into
xchg
clc
dec
cld
into
pop
cmpsl
popf
cmp
pop
aas
push
fists
and
in
dec
jg
cmpxchg
pop
sti
imul
mov
les
xchg
out
mov
add
bound
adc
popf
lds
adc
lret
js
cmp
dec
adc
pop
mov
shr
xchg
testl
insb
sti
repz
mov
add
pop
push
clc
jmp
mov
fiadds
mov
mov
aam
mov
cli
fnstsw
and
data16
divl
pop
aaa
pop
mov
fadd
out
cli
loop
ljmp
mov
loope
inc
mov
pop
fldcw
mov
add
scas
stc
pop
mov
arpl
jbe
cmc
or
cmp
sbb
xchg
shlb
inc
push
in
xchg
xor
lret
adc
mov
add
push
movsl
xchg
insl
or
repz
xor
in
sbb
xchg
mov
loopne
stc
lock
ret
push
xchg
scas
int3
xor
js
lods
scas
xchg
mov
push
in
sbb
ficoml
lds
inc
mov
in
jecxz
aas
invd
in
pusha
es
push
push
aad
push
daa
mov
pushf
or
int3
stc
add
push
mov
xor
push
scas
add
cmc
pop
popa
dec
adc
leave
push
sub
mov
xchg
fcomip
lcall
lods
pushf
enter
mov
pusha
rcrb
adc
mov
or
iret
cltd
mov
call
ljmp
insb
xchg
sub
sbb
xor
adc
jno
mov
push
fbld
mov
xor
pop
in
enter
dec
ja
ficomps
movsl
dec
js
fwait
pop
xor
loop
mov
les
scas
sbb
cmpb
sbb
push
int3
gs
aad
adc
pop
jbe
xchg
pushl
mov
stc
lcall
loope
stos
outsl
es
mov
imulb
outsl
sarb
stos
mov
pop
fimuls
call
jne
mov
push
icebp
cmp
pop
aam
negl
mov
rol
xchg
inc
mov
stos
pushf
xor
sbb
fwait
stos
pop
push
imul
jbe
push
dec
insl
or
and
adc
test
cmp
ljmp
cmc
xor
ror
cmp
std
push
adc
push
stc
aad
xor
out
loopw
xchg
ljmp
hlt
cmp
pop
lcall
or
out
iret
adc
pop
int3
adc
sbb
outsl
enter
mov
stc
push
in
shr
sbb
push
adc
rcrl
rclb
xchg
out
sub
xor
xor
mov
sbb
mov
cld
mov
dec
or
fstps
aaa
sbb
icebp
xchg
pusha
gs
sub
loopne
scas
ret
pop
or
jle
or
leave
in
idiv
pop
cmc
iret
ljmp
je
scas
out
push
pop
jb
lret
roll
leave
push
sub
dec
push
pop
jne
inc
rorb
add
movsl
test
cli
mov
clc
mov
cmp
jb
or
call
xchg
jno
daa
jo
ret
inc
adc
mov
jmp
sub
pop
lock
dec
sub
cmp
jl
pop
or
out
lock
xchg
push
mov
ljmp
stos
inc
cmpsb
icebp
adc
add
out
fisubl
in
push
repnz
jb
jg
mov
dec
xor
sbb
xor
shll
sbb
cli
rcrl
cmp
push
push
fcoms
test
loop
loopne
sbb
aas
adc
cltd
out
adc
in
dec
and
pop
stc
mov
aaa
cmc
cwtl
jns
or
insl
outsl
shll
testl
mov
stos
sub
mov
mov
ficoms
outsl
in
sti
mov
popa
popf
icebp
fmull
sbb
push
pop
dec
mov
pop
mov
movups
stos
fsubrs
shl
sbb
mov
or
dec
xor
jge
out
mov
mov
scas
push
push
aad
je
sarb
dec
cmpsb
add
repz
cmp
outsl
xor
lcall
sub
or
push
call
lret
mov
xchg
and
jl,pt
xchg
stos
in
rcr
sub
fs
push
loope
jae
movsl
dec
out
bnd
push
stos
pop
and
cmc
mov
es
xchg
aam
mov
out
push
insl
adc
cld
fsubl
sbb
pop
jg
dec
jne
pop
dec
mov
jmp
into
imul
xchg
rorb
lahf
sub
loop
ret
test
jp
inc
inc
jp
push
pop
test
in
lret
gs
pop
mov
idivb
daa
jo
and
add
pop
inc
frstor
insb
rorb
mov
cli
sbb
jmp
sbb
inc
lds
jp
push
jns
pop
mul
mov
jp
push
lock
add
out
arpl
int
and
xor
cmp
or
dec
fidivrs
lods
ret
arpl
notl
mov
aaa
mov
test
jno
pushl
adc
push
xchg
sbb
repz
jmp
insb
sbb
inc
sub
repz
add
cmp
int
xchg
dec
push
jno
mov
or
pop
xchg
or
mov
push
xor
gs
rolb
pop
clc
jnp
add
out
stc
inc
or
sub
adcb
mov
cmp
pop
ficomps
and
test
test
pop
aas
inc
jp
xchg
shll
pop
xchg
decl
xchg
ljmp
xchg
cli
dec
test
dec
std
aad
lock
dec
in
jbe
addb
and
leave
lods
mov
or
movsb
lds
pop
mov
push
scas
orl
ss
push
jnp
xor
inc
sub
jmp
xchg
int
stos
insb
pop
fisttps
mov
add
inc
dec
sbb
and
sub
ret
xorb
push
xor
inc
xlat
stc
sahf
mov
dec
lcall
addr16
les
xor
jmp
aam
adc
jo
aad
dec
mov
lods
mov
insl
popf
cmp
fistps
stos
mov
int3
shl
push
lods
arpl
sbb
nop
lret
loop
mov
push
or
imul
ret
pop
jno
mov
cmp
outsl
jge
and
cmc
xchg
lret
add
mov
jae
dec
mov
sub
in
sub
push
cmpsl
sbb
push
out
dec
jo
inc
jmp
mov
int
mov
adc
call
insb
pop
jno
incl
lods
cmp
or
sub
mov
mov
push
mov
pusha
mov
sub
mov
sbb
jle
dec
aam
scas
repnz
loopne
ret
aas
adc
push
cltd
lods
outsb
jns
test
cmpsl
inc
cmp
test
jne
inc
shlb
mov
sbb
pop
sbb
push
aad
pop
call
popa
leave
fldl
push
stos
pop
sub
jmp
add
dec
inc
jo
push
daa
inc
js
fwait
or
nop
and
cmc
push
out
nop
fldenv
xchg
bound
cmpsb
add
call
cmp
or
outsb
jmp
lahf
scas
dec
cltd
stos
int
std
add
push
adc
jge
sahf
xchg
dec
sbb
mov
or
push
lea
rcrl
inc
adc
xchg
jb
xor
out
leave
cmp
inc
inc
mov
jns
iret
jno
xlat
je
sub
test
adc
fistpl
sbb
push
daa
movsl
adc
jmp
push
pop
pop
cmpsl
cwtl
decb
dec
out
jns
arpl
cmpsl
pop
inc
pop
and
insb
lret
adc
lahf
cmpsl
jnp
cmp
add
cmp
mov
push
icebp
add
mov
xor
sbb
das
imul
xchg
addr16
dec
mov
pop
xor
jno
int3
pop
inc
inc
mov
fidivs
arpl
xchg
xchg
mov
mov
inc
push
push
cmp
cmp
lods
shrb
dec
aas
hlt
sbbb
pop
cs
fldt
sbb
jno
ja
sahf
dec
icebp
and
ja
out
jne
sti
out
mov
inc
repnz
push
mov
shrb
pop
shl
movsb
adcb
pop
out
mov
sahf
push
add
mov
and
mov
xor
loope
stos
divl
sub
inc
xchg
test
add
and
popf
and
pop
scas
mov
add
dec
xorl
cmp
in
dec
shl
or
notl
stc
sbb
sti
fcomps
fimull
shlb
popa
sbb
and
and
clc
dec
out
sub
sbb
insb
sub
mov
push
mov
dec
ds
rcrb
push
jecxz
jae
mov
xchg
sub
xchg
mov
filds
push
cmpsb
fmull
ret
inc
xor
and
hlt
pop
in
push
adc
lods
fnsave
jnp
lret
and
lcall
add
ret
sub
jbe
xor
stc
call
push
mov
xchg
pop
bound
loopne
dec
test
xor
insb
cmp
mov
add
fnstenv
xor
insb
pushl
cmp
fcmovnu
cmp
cld
adc
addl
pop
dec
and
sbb
jmp
xchg
pushf
jge
clc
sti
les
mov
pop
sbb
mov
xchg
mov
mov
xchg
les
inc
or
xor
sbb
mov
jmp
test
loopne
xor
mov
mov
jbe
sub
or
xor
jo
in
add
movsb
cmpsl
inc
mov
sbb
push
and
jmp
in
fwait
jo
std
jbe
adc
xor
clc
sbb
ljmp
pop
cmp
aaa
push
insl
inc
add
pop
ret
divl
xchg
jecxz
xchg
mov
in
xor
add
dec
adc
loop
aam
mov
mov
inc
fisubs
pop
popa
cltd
push
mov
sbb
sti
cmp
aad
push
fs
icebp
inc
stos
push
in
or
pop
insl
sbb
jl
pushf
push
dec
jmp
mov
mov
jge
cmp
push
jl
cmp
xchg
pop
addb
jb
add
or
push
xor
add
cmpb
lea
mov
jne
shlb
cmpsb
mov
inc
cmove
stos
data16
push
cmp
ficompl
pushf
mov
mov
mov
mov
push
mov
or
imul
xlat
scas
repz
fninit
clc
pop
lahf
sub
pop
jl
pop
insl
decb
push
in
lcall
fiadds
jne
lock
mov
cmp
jmp
mov
outsb
jnp
cmpsb
rclb
inc
mov
cmp
orb
bound
fadds
in
xchg
int
call
push
jae
mov
add
push
push
dec
js
cmp
cmp
fldenv
sub
jg
mov
pop
push
mov
or
mov
sbb
cmp
scas
mov
in
mov
and
add
cmp
pop
pop
movsl
cmc
fcomp
jb
arpl
mov
jmp
inc
mov
pop
push
fbld
loope
lret
mov
movb
jp
mov
pop
pop
fsubl
test
jecxz
lahf
push
imul
jecxz
cli
fbld
sub
fdivrs
out
ja
scas
adc
jae
mov
inc
mov
inc
add
dec
xchg
or
pusha
mov
jne
cmp
call
mov
fsubr
sbb
sarb
or
cmpsb
xorl
out
dec
mov
pop
stos
lds
sti
push
mov
mov
hlt
rcl
and
insb
scas
mov
push
les
lods
fwait
xchg
std
fs
sbb
xor
and
dec
mov
popf
adc
in
out
mov
mov
cmp
jbe
mov
fwait
pop
je
mov
inc
dec
cmp
lret
stos
aam
fisubrl
dec
sbb
push
dec
jbe
pop
jnp
inc
mov
xor
call
push
sahf
inc
jge
xlat
clc
xor
pop
or
cmp
cmp
adc
out
sbb
add
xlat
add
mov
out
test
inc
dec
and
mov
mov
dec
xchg
jo
mov
or
imul
cwtl
pop
or
mov
or
aad
rcr
sbb
aaa
mov
and
sbb
ret
and
mov
inc
leave
addr16
push
mov
mov
aaa
ja
cltd
jb
clc
push
roll
sbb
imul
inc
mov
push
pop
es
add
mov
in
pushf
push
jg
dec
aaa
pop
mov
loope
xor
inc
cwtl
imul
jmp
mov
mov
loopne
std
test
cmp
xchg
push
repz
add
adc
add
jno
xchg
stos
jns
cwtl
jle
add
push
rep
sti
fdivrs
ret
std
cmpl
std
sbb
xor
pop
in
inc
rcrl
adcb
repnz
test
cmc
cli
out
fcomip
and
pop
adc
add
in
or
test
pushf
lcall
cwtl
mov
cmc
push
add
xchg
lahf
movsb
push
cmp
fisubs
jecxz
fcomi
mov
sbb
pop
loope
sub
adc
fldt
xchg
xor
int
addr16
inc
inc
jne
mov
jg
sub
mov
jae
sub
leave
push
add
cwtl
enter
lea
pop
test
jp
and
repz
in
outsb
xchg
ljmp
jecxz
add
cmp
out
push
imul
lods
lret
cli
test
ret
aaa
cmp
and
jle
dec
and
cmp
gs
inc
outsb
sub
sbb
lock
pushf
push
sbb
and
jmp
or
push
lea
out
sub
xor
out
data16
outsl
lea
jno
cmpsb
push
arpl
pop
fmul
aad
imul
clc
lock
dec
fisttpll
or
sahf
popf
xor
cmp
and
shr
or
inc
addr16
push
loope
cwtl
rcrl
jmp
xor
notb
cs
mov
hlt
and
aad
mov
pushl
cmp
sahf
inc
cwtl
out
lret
jecxz
mov
dec
xor
xchg
nop
out
push
xchg
mov
lods
add
mov
lret
pop
xchg
jg
dec
sub
and
out
orl
in
cltd
add
push
sub
fldt
sub
add
sub
daa
sub
jnp
adc
cmp
clc
pop
addb
sub
mov
xchg
cmp
adc
fistpl
xchg
loopne
bnd
je
sub
and
mov
je
inc
adc
ljmp
or
fcoms
call
mov
je
ret
mov
mov
xchg
hlt
movsb
mov
dec
lahf
loope
jl
pop
xor
fcomi
iret
in
out
in
aas
inc
aas
mov
mov
inc
mov
bound
or
and
xor
or
pop
sahf
lahf
les
push
add
xlat
mov
lahf
lods
lock
xor
mov
stos
or
and
movsl
mov
mov
pop
loop
xchg
inc
mov
vunpcklps
cwtl
inc
rorb
xchg
inc
leave
scas
lock
movsl
jno
xor
sub
mov
xor
rcrl
clc
inc
add
cwtl
mov
mov
gs
les
or
cmp
lods
mov
fucomi
sub
adc
lea
add
pop
imul
inc
push
mov
in
and
xchg
cmp
add
pop
mov
lret
loop
rcrl
or
push
dec
cmpsb
cmp
pop
cmp
add
stc
subb
and
xor
xchg
adc
mov
push
and
int3
icebp
pushf
loope
mov
stos
out
add
cmp
icebp
xchg
add
ja
cltd
sub
mov
or
jno
mov
scas
adc
test
jno
in
je
and
xchg
je
xor
jmp
and
and
adcl
cmp
pushl
inc
mov
and
outsb
mov
imul
cmc
int3
cli
cmp
int3
mov
jo
test
outsb
adc
dec
xor
mov
mov
cwtl
or
mov
ljmp
fsubrl
icebp
lds
xor
pusha
aam
xor
fcmovbe
fbstp
in
mov
sti
leave
and
jle
dec
int3
and
or
scas
rol
leave
popf
mov
mov
jns
shl
ljmp
mov
or
mov
cs
addr16
loop
arpl
adc
je,pt
inc
mov
addr16
inc
sti
repz
push
jbe
in
dec
xchg
out
ljmp
jp
fs
aad
or
shlb
mov
outsl
jno
mov
jge
sbb
lret
sbb
mov
arpl
notl
mov
outsl
mov
push
add
xchg
ljmp
add
push
enter
je
xor
or
lock
cmpsl
mov
lock
sti
rcll
jg
shlb
das
outsb
shrl
cld
fsubp
push
lahf
mov
stos
fildll
dec
fistpl
xchg
inc
mov
inc
test
xchg
sbb
inc
and
ret
movsb
fsubrs
int
loop
lret
add
rclb
cmp
xor
icebp
xchg
jmp
stos
mov
mov
mov
xchg
jae
out
bound
adc
jns
mov
jno
push
pusha
arpl
push
in
and
lret
dec
adcl
loop
xchg
cmp
icebp
mov
nop
or
cmpsb
mov
dec
mov
pop
in
xchg
push
popa
insb
jnp
test
mov
lret
sub
ja
fnstenv
push
push
inc
lret
adc
xchg
push
loopne
mov
fdecstp
inc
lret
push
jo
xchg
dec
movsl
jp
iret
loop
add
stos
sub
jno
in
jno
push
add
or
into
cwtl
ja
mov
sub
inc
pop
popf
sbb
jmp
add
js
mov
lahf
xor
addr16
mov
lds
ja
icebp
xor
add
std
mov
xor
and
leave
into
jno
xchg
xchg
xchg
sahf
pop
data16
into
lds
popa
sbb
mov
jg
dec
push
das
lock
push
aaa
fsubs
bound
jl
dec
test
cmp
jecxz
jecxz
cmpsb
push
push
jnp
sbb
sbb
imul
lock
dec
dec
mov
or
movsl
or
lock
ja
insl
enter
push
push
cs
out
push
add
mov
sbb
jbe
add
rclb
les
popf
lock
jg
sbb
pop
adc
and
dec
imul
and
xor
sub
cmp
adc
lret
test
cld
movsb
mov
pop
sahf
add
sarl
jmp
push
dec
lcall
shr
daa
sub
mov
sarb
add
or
test
xchg
mov
jno
mov
leave
aas
in
push
out
arpl
cwtl
std
and
clc
jg
mov
jp,pn
mov
rep
sbb
fidivrs
arpl
adc
add
in
idivl
pop
sahf
push
pop
repnz
dec
and
std
push
hlt
jns
push
push
ss
leave
ss
adc
pop
cltd
sbb
or
pop
inc
stos
push
out
movsl
xor
xor
rcrl
sbb
jmp
jl
mov
mov
movsb
setnp
cld
xor
inc
cmpsb
push
dec
pop
mov
dec
lds
sbb
mov
out
cmp
xchg
lahf
inc
and
dec
dec
sbb
sti
and
push
imul
jmp
mov
jmp
imul
or
xchg
repnz
jge
aas
cs
imul
bound
adc
sub
sub
push
and
sbb
sbb
rcll
pop
shrl
emms
lods
imulb
insb
loope
inc
or
jge
or
mov
call
jg
mov
xor
xor
push
push
imul
push
jo
movsl
pop
bound
aam
push
sti
fwait
sbb
mov
loopne
xor
sbb
pusha
sbb
or
push
push
pop
adc
rcll
and
inc
cmp
and
xchg
outsb
xor
enter
fstp
mov
push
nop
push
sbb
cs
jno
into
and
in
xchg
in
push
mov
rcrl
jl
jmp
sarb
jns
jge
mov
add
xorb
jle
fnsave
sub
mov
inc
lcall
out
push
or
pop
adc
test
xchg
js
in
or
and
add
imul
and
or
xor
lahf
rolb
or
inc
sbb
mov
cmpsb
shl
adc
or
jns
mov
mov
mov
mov
data16
in
push
sub
push
sub
imul
dec
hlt
mov
lds
push
test
xlat
xor
and
imull
adc
pop
sbb
andb
lahf
mov
les
shr
push
mov
test
aad
pop
push
mov
sub
insb
dec
mov
add
sbb
int
mov
sub
xchg
adc
jecxz
mov
pushl
outsl
cmpsl
add
or
or
es
mov
mov
or
xor
out
adc
push
repnz
jnp
and
jmp
jge
xorl
call
ljmp
jp
dec
sub
jmp
inc
inc
push
mov
inc
push
mov
push
push
clc
jle
jp
pop
lahf
mov
jge
mov
cli
into
and
jns
insl
pop
loopne
or
js
mov
sub
add
sbb
mov
imul
cld
repnz
rolb
cmpsb
or
negb
pusha
or
sbb
mov
cmp
pop
adc
and
push
mov
mov
cmpl
fwait
loopne
jbe
mov
lret
mov
jge
cmp
jle
and
ret
insb
cs
mov
sbbb
filds
dec
lods
cmp
jns
pop
sub
arpl
cmpsb
xor
mov
test
nop
in
popa
icebp
mov
or
sbb
mov
es
or
push
into
mov
daa
addr16
push
out
add
lds
jae
out
inc
fucom
outsb
repz
mov
adc
test
xor
xchg
push
fisttpl
cmp
dec
gs
mov
cmc
test
mov
sub
andb
dec
xor
mov
push
add
inc
sub
nop
in
sub
hlt
mov
xchg
test
pop
mov
mov
mov
out
fildll
gs
sub
sub
jge
xchg
cmc
dec
fs
pop
jne
sbb
loopne
adc
sarb
sub
lods
jne
cmp
sti
std
icebp
dec
aam
xor
es
push
sbb
mov
push
sbb
fldt
decb
stc
insb
hlt
addb
sbb
adc
loope
cmp
add
sbb
cwtl
shr
lret
pop
pop
orb
lret
push
roll
pop
aas
shl
lahf
dec
xchg
stc
and
sub
or
clts
movsl
lea
lock
mov
dec
push
out
push
cmp
or
inc
sti
sbb
add
data16
lret
or
aas
mov
add
leave
mov
cmp
cmp
sbb
or
jl
cli
mov
add
pop
imul
loopne
arpl
insl
and
addr16
xchg
push
jge
test
das
cmp
in
out
sub
jge
into
jmp
fmuls
stc
and
xor
push
movsb
fnstenv
cmpsl
and
arpl
adc
dec
movsb
test
call
sbb
outsl
enter
push
and
sti
jecxz
xchg
sbb
out
in
inc
cmp
inc
jmp
jb
mov
lea
sub
test
dec
shl
pop
jne
mov
mov
xchg
sti
jmp
push
imul
ret
push
fcmovb
icebp
cs
das
loopne
cmpl
pop
xor
or
cltd
in
sti
add
ret
cld
add
pop
adc
mov
jmp
lods
out
sub
lds
sbb
addl
aad
scas
pop
nop
dec
ret
outsl
inc
fnsave
in
test
insb
add
or
xchg
mov
enter
ja
mov
xor
mov
mov
clc
lods
cmp
lods
lret
or
popa
cmp
adc
mov
mov
aaa
inc
push
jno
xchg
and
add
pop
adc
pop
ficoms
or
mov
xorl
pushf
sub
repnz
ljmp
mov
and
add
es
fwait
aaa
xor
negb
rcr
sti
rcl
and
mov
cmpsb
and
shl
fsubrs
popf
mov
je
mov
xrelease
xor
je
int
cmp
push
rorb
call
insb
fs
aaa
sbb
mov
add
pop
cmp
shr
mov
int
xor
sar
arpl
out
iret
or
mov
js
xchg
iret
js
inc
add
scas
sub
test
mov
adc
xor
dec
cmp
mov
xchg
cmp
add
insl
int
inc
out
mov
std
and
call
imul
mov
xchg
dec
das
sahf
mov
cmpsb
sub
out
shl
test
jecxz
mov
fimuls
cmpsb
ret
xchg
clc
push
js
cli
test
push
mov
xlat
mov
cmpsb
xor
in
dec
xor
bound
xor
mov
out
loop
mov
in
add
daa
pop
iret
mov
jmp
cmpsl
jge
fs
test
or
jno
loope
sbb
call
out
sbb
fmull
pop
jae
sub
adc
int
jae
mov
insl
pop
stos
inc
inc
xor
and
mov
jecxz
aad
imul
ss
jl
test
decb
mov
adc
xor
add
pop
insl
push
mov
and
movsb
push
dec
cmc
mov
lods
adc
sub
in
out
sbb
lahf
mov
arpl
ficoms
cmp
mov
inc
mov
or
lret
add
sub
sbb
out
xchg
jg
call
shlb
mov
inc
jl
or
test
sbb
sbb
jecxz
push
pop
imul
call
daa
cmp
sbb
adc
cmp
xchg
cmp
xchg
fsubs
sbb
push
inc
cltd
adc
inc
mov
popa
imul
pop
movsl
push
xor
push
add
popf
mov
xor
mov
mov
push
fildl
xor
icebp
add
and
xchg
push
jne
mov
ja
movsl
loope
xor
mov
cmovl
movsl
jo
ret
sub
xchg
push
js
jbe
jecxz
pop
cmp
lods
pop
xlat
jb
xchg
test
jg
movsb
sub
push
xchg
rcrl
inc
int
mov
lds
cmp
adc
call
ljmp
imul
xor
sbb
fisubrl
int3
test
cmpl
mov
or
mov
filds
mov
jns
or
adc
arpl
mov
adc
stos
adc
dec
xor
cli
push
mov
cmp
test
inc
push
popa
mov
push
fst
stos
mov
es
into
imul
mov
xlat
jne
lds
mov
mov
sub
pop
lods
cmp
jg
outsl
inc
pop
stos
ja
sub
mov
pop
fisubrs
xchg
jno
push
iretw
stos
jp
nop
insb
rcr
cli
repz
sbb
xor
mov
push
sub
sub
roll
gs
sbb
dec
xchg
sub
dec
fdivrl
jo
push
mov
and
test
adcl
mov
nop
add
xchg
sbb
pushl
xchg
dec
rorb
mov
das
pop
xchg
and
test
fcmovu
dec
adc
mov
and
cmpl
sub
inc
mov
popa
subl
add
pop
adc
mov
bound
xchg
and
in
rcl
add
adc
popa
data16
cltd
cmpsl
or
mov
jnp
pop
mov
ljmp
mov
xchg
cmp
paddq
je
call
pop
lret
push
pop
push
in
dec
stos
fisttps
popl
dec
std
push
xchg
nop
push
rolb
dec
and
movsb
mov
pop
lods
decb
repnz
mov
cmp
hlt
cmp
mov
push
add
loopne
inc
push
cmpsl
roll
pop
push
iret
into
hlt
inc
jp
mov
shlb
xor
cltd
test
js
popf
xlat
into
arpl
test
xchg
inc
call
sbb
jl
dec
adc
pushf
sarl
sub
add
cmpsb
or
jle
mov
lods
jmp
leave
jecxz
sbb
xchg
cs
sti
loopne
sbb
adc
push
mov
insl
jno
movsl
push
xchg
inc
xchg
loope
cs
cmp
jbe
dec
testb
fcompl
clc
jp
pop
or
add
mov
inc
jl
mov
cld
notb
out
rcll
xchg
jne
xorb
sbbb
adc
std
mov
cltd
push
aad
pusha
or
and
movsb
cmpsb
adc
loop
add
mov
ja
xor
stc
mov
leave
xor
dec
mov
and
scas
and
popa
mov
cmp
mov
push
cmp
data16
in
sbb
xchg
xchg
mov
dec
mov
fstps
call
push
mov
ja
mov
pusha
int3
loopne
sbb
test
fstl
jne
das
add
sbb
lea
xchg
add
icebp
jno
or
sub
movsl
sbb
test
js
outsb
ficoms
imulb
loopne
outsb
scas
jnp
and
and
inc
sub
int
mov
fcomps
es
and
mov
inc
into
pushf
pop
cmp
and
lods
enter
lret
cli
rorl
fimuls
inc
adc
dec
and
outsb
sub
xchg
mov
mov
loope
sahf
mov
popa
lock
and
inc
add
cmp
stc
sbb
or
and
push
pop
daa
adc
push
push
gs
jmp
gs
mov
pop
loopne
popa
push
aas
mov
jecxz
push
shl
sub
cmp
adc
fdivl
or
faddl
jmp
repz
mov
imul
jae
shll
je
dec
imulb
sub
das
lahf
pop
daa
mov
es
mov
and
xor
stos
mov
out
ss
add
repnz
add
daa
out
adc
mov
into
xchg
add
aad
ret
in
stos
jb
mov
push
repnz
push
sub
stos
inc
jno
jmp
dec
sahf
jmp
insb
leave
jns
inc
add
sbb
or
mov
adc
popf
add
inc
xchg
pop
pop
or
mov
arpl
push
insl
out
std
add
mov
cmpsl
xchg
out
in
fnstsw
push
mov
xor
pop
xchg
outsl
clc
int3
in
das
filds
jb
pop
dec
pop
mov
sub
jge
mov
pop
mov
sub
mov
inc
rolb
push
pop
push
movsl
push
bound
lock
dec
jo
clc
arpl
ret
fwait
popf
dec
xchg
xchg
in
in
popf
mov
repz
sub
mov
or
and
out
leave
nop
ss
sub
out
pop
cmp
adc
fwait
stc
inc
pop
in
fdivrl
dec
xchg
insl
jecxz
mov
test
int3
jge
icebp
ljmp
mov
cli
pop
bound
aas
mov
aas
cwtl
mov
jmp
cmp
or
mov
nop
fstps
ret
push
movsl
mov
sub
jns
dec
sar
cld
inc
push
lret
cmc
xchg
cmp
fs
pop
hlt
das
and
clc
pop
testb
and
popa
ja
lret
mov
leave
mov
mov
cmp
jmp
aad
in
imul
lret
cwtl
sbb
test
rcrl
dec
ss
and
dec
and
push
fstps
mov
add
test
test
xchg
sub
out
scas
jns
dec
push
loop
fldcw
adc
fsts
test
xchg
mov
xchg
adc
outsb
and
or
neg
cmp
mov
repz
and
mov
mov
je
adc
clc
rorl
roll
or
ja
mov
jge
mov
hlt
imul
daa
outsl
or
cld
outsl
sbbl
cmpsl
stc
mov
xor
jle
lret
outsl
js
leave
movzbl
es
arpl
rcrl
fsubs
add
fldcw
int3
jmp
mov
xor
or
add
cmp
fsts
jle
test
pop
test
aam
mov
mov
cltd
push
add
inc
clc
push
xor
or
add
pop
or
repz
sub
dec
mov
fnstsw
push
fdivr
jne
cld
adc
in
pop
xchg
sbb
daa
or
lret
movsl
and
lods
daa
jge
fcoml
push
or
insb
in
icebp
adc
ficomps
rcrl
cs
mov
int
sbb
cmp
je
fstl
ss
aad
arpl
xor
push
lcall
xor
pop
cli
and
lret
sbb
fs
mov
sbb
mov
or
in
push
loop
roll
enter
shrl
je
dec
add
pusha
add
add
scas
loop
andl
ljmp
lea
sub
out
pop
adc
popf
sti
xor
nop
add
xlat
push
les
mov
arpl
push
or
pop
fidivl
mov
add
pusha
data16
xor
sbb
mov
jnp
adc
push
push
sub
add
xor
out
ss
push
inc
ja
hlt
adc
and
ja
cmpsb
and
sub
rcrl
fldt
xchg
adc
push
fsubs
jl
jo
push
scas
fsubp
mov
fst
dec
std
ds
and
jb
jno
shll
xor
into
into
mov
scas
loopne
insb
loopne
inc
push
xor
mov
addr16
imul
aaa
js
fldln2
scas
cmp
scas
jge
data16
pop
push
in
add
xchg
scas
jle
or
mov
aad
sahf
insb
add
mov
lcall
cli
xor
jge
iret
rorl
push
les
cli
jb
jns
js
mov
jg
cmp
inc
movsl
cmp
jmp
xor
pop
movsl
adc
jl
lahf
pop
mov
xor
mov
mov
iret
lcall
aas
ja
mov
sti
aaa
mov
sti
js
jp
inc
shll
xor
sbb
jmp
jb
test
fdiv
xchg
insb
jmp
lea
push
loop
mov
xlat
mov
pusha
mov
adc
dec
jno
fidivrl
out
xchg
ja
sbb
cmc
xor
jmp
int
mov
fsubrs
sbb
iret
xchg
push
mov
cmc
mov
mov
adc
inc
and
add
add
movsl
pop
mov
idivl
lea
mov
or
clc
xchg
les
movsb
nop
ret
lahf
dec
out
mov
es
dec
je
mov
es
xor
xchg
sti
add
iret
pushf
jl
adc
das
cmp
dec
dec
aad
add
test
sub
jmp
add
cld
jnp
sbb
mov
adc
out
int3
jo
jmp
adc
je
sub
shlb
pop
sbb
divl
ja
out
ret
push
push
ret
pop
adc
cli
xor
mov
lds
imul
or
sbb
movsb
jg
sub
pop
ret
adc
jbe
sub
sbb
dec
mov
inc
ret
ja
movsl
cmp
dec
mov
cmpsl
add
rcl
stos
xchg
cmp
xchg
bound
xlat
daa
arpl
and
ficoms
ljmp
xor
nop
mov
out
inc
cmp
cs
add
fisttpl
loop
lds
jnp
or
dec
not
repnz
xchg
mov
imul
ret
divb
sbb
orl
jnp
and
mov
jno
test
push
outsb
pop
aad
xor
fucomip
cltd
std
addl
and
dec
mov
std
int3
and
arpl
mov
add
mov
cli
lret
adc
cmp
mov
dec
shrb
test
inc
dec
mov
push
cmp
out
mov
or
inc
in
rorl
call
in
mov
sbb
ds
or
inc
sbb
inc
fidivs
pusha
lahf
add
and
pop
sbb
mov
jnp
and
lods
subb
insb
push
inc
cmp
jp
cld
pop
ja
jno
scas
cs
mov
jmp
xchg
mov
cltd
aam
cmp
mov
pop
repz
insb
push
addr16
in
leave
in
sbb
jle
clc
mov
jns
add
stos
push
lcall
inc
or
mov
sbb
lret
add
add
cmp
test
outsb
xor
push
data16
mov
into
fdivr
ret
das
mov
inc
cld
loopne
pop
popf
cld
test
push
xchg
inc
xchg
cmp
mov
dec
mov
jbe
mov
jg
sbb
movsb
ljmp
pop
mov
pushl
push
loop
mov
out
nop
stos
sbb
out
fldt
test
outsl
shll
cwtl
lret
fwait
mov
test
mov
cmp
sbb
mov
jmp
int3
push
das
aad
cmp
xchg
jmp
sub
and
test
jns
and
sub
lahf
mov
sbb
js
test
cmp
int3
cli
push
cli
dec
test
test
sbb
int
inc
pop
mov
xchg
imul
fcoms
rcr
stc
add
mov
shrl
mov
xorl
cli
and
je
jp
or
jo
shlb
mov
add
mull
push
shl
mov
mov
adcl
test
or
mov
jne
push
scas
cmp
out
pop
or
xor
push
jecxz
and
clc
call
mulb
add
or
mov
inc
jg
inc
dec
adc
jbe
scas
ret
sbbl
inc
jns
lods
bound
push
xchg
xchg
and
xchg
jg
mov
cmp
repnz
adc
xchg
idiv
adc
pusha
test
insb
push
pop
xchg
stc
in
jne
cwtl
mov
xrstors
or
fwait
das
mov
pop
ret
ss
cwtl
xchg
shrb
mov
daa
pop
pop
jbe
mov
push
mov
pop
adc
push
dec
jl
cmp
in
lock
mov
push
lods
loop
push
les
ja
xrelease
dec
ljmp
xor
inc
lret
repnz
mov
sahf
push
dec
movsb
mov
mov
push
mov
mov
xor
sub
and
jmp
fdivrl
mov
mov
or
movsb
add
add
sbb
lret
or
add
push
xchg
xor
cmp
jbe
ljmp
xor
mov
stos
in
arpl
fldt
ds
push
and
mov
xor
xchg
loop
dec
incl
cmp
sub
mov
sbb
mov
testl
stc
push
loopne
movsb
cmc
mov
mov
xchg
add
test
addl
inc
stc
les
inc
hlt
mov
cmpsl
pushf
inc
into
push
pop
in
or
sarl
aas
sub
add
in
jb
add
shr
mov
lret
sbb
push
sub
stos
iret
icebp
sbb
in
stos
push
and
dec
jne
jbe
adc
mov
clc
les
dec
dec
sub
lock
dec
das
and
scas
xor
cmp
stos
mov
jg
out
push
mov
mov
jge
clc
mov
fldl2t
push
stos
jno
sub
int
or
mov
push
js
adc
loope
xlat
gs
lret
icebp
sarl
adc
les
hlt
lret
inc
sub
dec
icebp
push
clc
fdivrl
lods
js
aas
inc
lock
add
cld
js
movsl
sbb
daa
test
jl
popa
les
mov
pop
sahf
ret
inc
xor
mov
xchg
shr
out
xor
ret
or
and
repz
xchg
nop
insb
das
push
das
jge
adc
fstl
dec
mov
idivb
mov
js
stc
dec
pusha
loop
pop
out
or
mov
outsl
imul
add
lock
mov
or
inc
jns
lcall
testb
cld
sub
loop
inc
movsb
xchg
pop
pop
inc
cmpsb
popf
sbb
loop
push
adc
cmc
mov
sub
stos
mov
push
fwait
out
mov
cmp
mov
enter
sbb
sub
pop
add
pop
stc
int
and
rorb
adc
or
jp
cmpsl
aas
lock
call
adc
and
jb
pop
sub
mov
xchg
andl
xor
mov
daa
push
in
push
addb
je
mov
jecxz
dec
inc
pop
aad
mov
call
push
adc
hlt
mov
adc
shll
pop
xchg
ja
adc
sarl
xchg
arpl
aad
enter
dec
dec
dec
pop
pop
in
test
push
pop
sti
xchg
cmp
int3
xchg
or
cwtl
in
lock
dec
fcom
mov
cmp
cli
push
sub
outsl
sbb
pushf
in
sub
shl
jbe
flds
test
mov
pushf
mov
push
enter
mov
dec
adc
dec
sbb
repz
mov
out
pop
fmull
fisttps
js
pusha
fwait
jns
aaa
add
jge
push
xchg
dec
pop
inc
push
sbb
inc
mov
out
neg
adc
sbbl
jl
test
push
xchg
ljmp
mov
sbb
dec
or
in
aaa
push
sub
push
push
aas
rcr
lret
stos
aaa
mov
test
outsb
divl
sub
test
add
mov
mov
xor
data16
cltd
lahf
repnz
add
flds
movsb
mov
jbe
test
cltd
push
bound
out
mov
sbb
jae
cmp
js
or
xor
cs
mov
xor
in
outsb
sub
adc
inc
stos
fwait
mov
push
push
ret
insl
out
and
in
stos
pop
lcall
pop
adc
inc
lods
pusha
shlb
icebp
cld
scas
inc
fadd
dec
decl
es
or
sahf
and
jle
das
adc
fidivrl
fsubr
pop
incb
stc
dec
imul
dec
lea
pop
dec
pop
sub
rclb
loop
cmp
into
xor
movl
push
jb
mov
jae
into
jmp
or
jno
popf
lods
aam
mov
and
xor
jg
scas
sub
adc
ret
stc
das
out
aaa
negb
pop
stc
pop
jle
loop
jno
mov
and
xor
pusha
stos
xchg
sub
xchg
mov
fsub
lret
mov
lahf
icebp
int
pop
sahf
je
fldt
xlat
xchg
shrb
in
in
xor
mov
mov
je
jl
mov
test
loope
push
popa
mov
jbe
cmp
into
xorl
xchg
xor
sbb
xchg
add
mov
lea
cld
add
es
stc
pop
add
add
pop
push
fisubs
pushf
pop
testb
out
stc
sti
shld
mov
in
pop
dec
jbe
mov
jb
mov
jg
or
jno
cld
xor
aam
sar
shrb
test
mov
les
mov
or
mov
xor
fidivrs
xor
daa
and
or
inc
fisubl
ss
inc
or
sbb
xchg
addb
cmovg
dec
xor
or
inc
lahf
daa
fxch
stos
push
mov
cmp
sbb
mov
adc
adc
cs
out
sahf
ret
cmpsl
sbb
mov
lret
int
jl
sbb
jge
rcr
sbb
ret
fwait
mov
leave
add
fidivrs
pop
std
data16
loopne
shlb
mov
or
push
test
push
out
enter
rcll
jo
sbb
mov
int
stc
std
adc
push
inc
pop
add
inc
int
push
int3
enter
mov
xor
mov
push
pop
lahf
pop
in
adc
ja
out
ds
in
dec
das
mov
sbb
cli
fdivrs
test
mov
add
add
pop
push
repnz
lahf
mov
gs
clc
sub
push
lock
ret
sub
aad
testb
xchg
add
out
in
sahf
push
xchg
pop
push
jle
sbb
popa
popf
sub
mov
daa
sar
neg
inc
loopne
mov
xchg
out
cli
sbb
in
imul
lcall
cld
fs
fcomi
in
or
cmp
int
sub
out
pop
jl
cs
scas
or
repz
test
add
jl
sub
outsl
fistps
jmp
jmp
aas
enter
ljmp
bound
call
add
iret
and
pop
mov
popa
popa
pushl
cs
push
out
adc
pop
jmp
mov
push
addl
enter
lret
ret
nop
sbb
lods
out
push
sub
repz
ss
cmp
adc
rcll
sub
jp
mov
daa
pop
pop
aas
add
fwait
lods
enter
sahf
sub
mov
imulb
sub
lahf
inc
das
mov
sbb
fld
sbb
fchs
repnz
aaa
fwait
and
xor
push
cmc
push
mov
rorl
mov
dec
or
xchg
daa
adc
mov
nop
add
out
scas
fisttpl
push
rorl
or
add
and
push
ljmp
icebp
inc
push
pop
sub
shl
jmp
jb
xchg
push
dec
fildl
stos
pop
jp
hlt
lock
mov
cltd
pop
add
sub
add
push
mov
push
popf
xchg
jecxz
adc
test
sti
jle
mov
popa
shlb
xchg
lcall
movsb
add
paddsw
cmpsb
sbb
jmp
int3
daa
insb
fistpll
loopne
lock
addr16
aaa
add
insb
adc
add
xor
push
outsl
jp
inc
jle
cmp
add
pop
cs
fld
ror
fwait
inc
push
sbb
xor
sbb
popa
out
mov
rcrl
cwtl
test
mov
fnstsw
push
test
push
and
xchg
shrb
cmp
insl
sub
cmc
negb
jecxz
outsl
nop
out
and
sub
cltd
dec
or
ljmp
mov
mov
add
add
insl
fists
lahf
sbb
dec
pushf
jecxz
xchg
jl
mov
inc
xor
cmpsl
mov
adc
sub
jl
add
lahf
jb
scas
into
inc
fnstcw
fisubrs
fucom
xchg
jno
in
jmp
arpl
cmpsl
outsb
scas
clc
mov
lock
mov
xlat
pop
outsb
cltd
andl
mov
push
ja
sub
imul
mov
xlat
push
es
sub
cmpb
jne
in
jne
cmp
xchg
mov
sbb
out
adc
in
std
xchg
push
dec
cmp
cmc
inc
sub
jo
or
adc
in
loop
or
push
adc
adc
rcrl
adcl
dec
mov
sub
out
jo
push
or
jno
mov
mov
push
xor
xchg
aaa
in
sub
adc
xchg
dec
cmp
mov
fwait
movsl
fsubrs
mov
icebp
mov
sub
lret
pop
mov
cwtl
fnstenv
inc
jno
not
mov
jae
dec
push
mov
orl
inc
or
imulb
mov
fdivrl
rcr
jae
jns
push
andl
addr16
inc
adc
jle
popf
cli
sub
loop
in
push
ds
jmp
push
loopne
adc
push
into
outsl
mov
je
data16
sub
inc
test
lret
mov
loopne
imul
push
jno
jno
xchg
adc
incl
pop
dec
xor
jl
ss
push
js
dec
repz
imull
push
pop
sub
sbb
loop
out
in
dec
push
fildl
xchg
repnz
jnp
inc
mov
hlt
addb
inc
int
cmp
xchg
cwtl
and
inc
sbb
mov
ljmp
js
xchg
xor
lret
in
movsl
adc
jnp
shll
sti
jbe
icebp
loopne
dec
popf
test
xchg
movsl
out
shl
call
pop
push
pop
daa
in
pop
inc
jbe
stos
js
xor
mov
jl
xchg
cld
add
sub
pop
dec
and
enter
mov
inc
push
stos
in
adc
inc
xchg
sub
pushf
xor
dec
xchg
adc
cmp
das
pushf
add
inc
test
jne
das
nop
mov
adc
push
or
in
mov
xor
cmpsl
and
jns
sub
push
jl
cli
sub
stc
mov
jp
pop
shrl
in
adc
pushw
mov
sti
adc
xor
out
and
js
sbb
stos
push
mov
std
jo
in
xchg
leave
dec
push
push
imul
into
mov
lret
loope
sbb
xchg
loope
inc
stos
insl
cs
ret
lods
shll
fwait
mov
push
adc
rol
movsl
and
ficoml
or
push
fwait
mov
jnp
push
rcrb
xor
daa
shlb
cmpsb
pusha
pop
pop
xorl
jg
loop
repnz
adc
dec
mov
jge
ret
add
rcr
push
xor
test
mov
mov
inc
add
shll
sub
or
sub
xchg
insl
lods
mov
pop
or
jl
out
rorb
in
enter
test
jmp
add
test
cmp
push
xor
jecxz
mov
mov
testb
fldl
lahf
sbb
inc
ret
stos
lods
cltd
mov
cmp
arpl
sbb
jmp
in
scas
push
inc
cmp
inc
pop
mov
in
mov
and
xchg
and
enter
icebp
test
scas
stos
out
pop
xchg
push
das
cmp
sub
jo
lock
leave
mov
movl
xor
adc
or
aas
test
lret
xchg
leave
mov
mov
sub
add
stc
push
fisttps
lahf
xchg
push
mov
mov
sahf
mov
dec
dec
sub
es
ljmp
aaa
xchg
aaa
xchg
push
mov
repnz
hlt
mov
mov
cmc
push
adc
inc
xchg
js
test
mov
movsl
daa
jl
out
repnz
sahf
inc
inc
xor
jmp
pop
xchg
inc
mov
mov
adc
xchg
pop
add
in
int3
push
sbbb
pop
mov
inc
cmp
sbb
and
xchg
loop
and
leave
mov
lea
test
ss
sub
into
je
rcll
pushf
div
lods
pop
repz
add
and
mov
mov
mov
ljmp
test
cmp
enter
push
cmp
push
inc
adc
leave
mov
lcall
je
add
popa
pop
aaa
test
imul
sbb
jne
popa
ret
iret
movsb
xor
loop
add
int3
add
xor
mov
mov
ret
add
or
dec
out
add
dec
inc
xor
xor
cli
mov
testb
xchg
pop
rolb
int
pop
push
push
fldenv
movsl
inc
add
push
xchg
insl
fcompl
out
popa
fnstsw
ljmp
hlt
cmp
and
pop
mov
and
mov
les
cmp
lcall
jnp
cmp
loope
add
and
pop
les
sub
dec
stos
aad
adc
xchg
dec
mov
subl
jle
pop
cltd
es
dec
cwtl
cs
into
jmp
outsl
cmc
int
and
pop
jo
sbb
jle
ret
add
bound
std
jecxz
ret
xchg
inc
hlt
pop
sbb
lahf
push
push
fs
or
daa
add
pushf
dec
fcom
cmpsl
jecxz
dec
push
jp
sbb
adcl
xchg
clc
out
cmpsl
in
cmp
fsubrl
adcl
scas
dec
scas
lea
fidivrl
adc
fdiv
cmp
cmc
inc
imul
mov
loopne
movsl
je
mov
mov
jle
cmpl
rcrb
nop
cmp
push
sbb
movsb
ficoms
cmpsl
jecxz
xor
jnp
test
jg
xor
sub
std
push
nop
push
fldcw
xor
fildl
or
pushf
pop
imul
je
loopne
stos
jg
stos
roll
mov
jns
lods
push
or
sbb
pusha
shl
mov
cld
jmp
push
pop
jge
fisttps
push
sub
addr16
adcl
cld
insb
cld
xchg
pop
sbb
mov
inc
sub
adc
sub
dec
outsb
mov
mov
out
movsb
cmp
push
stos
mov
into
sbb
lcall
and
jmp
dec
mov
pop
adc
adc
enter
push
cmp
xchg
into
jo
cmc
stos
or
mulb
dec
push
icebp
xorb
lcall
jo,pt
pop
test
xor
cmp
sub
outsb
adc
lret
inc
repz
push
mov
push
add
addr16
subb
add
popa
mov
jae
sarb
testb
test
movsl
mov
unpckhps
push
gs
int
ds
cmp
xor
sub
out
outsb
sbb
dec
jb
inc
leave
lods
movsl
outsb
fdivs
or
or
inc
push
or
movaps
clc
rorl
fcmovbe
jo
cmc
inc
int3
fwait
lret
leave
movsl
inc
jl
add
inc
jmp
int
inc
mov
scas
ror
mov
vmwrite
jne
or
test
iret
jae
out
fildl
mov
bound
out
in
push
adc
cmp
push
push
hlt
lods
sbb
xchg
scas
sti
movntq
outsb
aad
xor
push
and
out
or
cmc
push
mov
pop
adc
stc
in
fcompl
int
xchg
cld
jnp
pop
dec
adc
xor
ss
mov
cwtl
inc
mov
jle
popa
mov
fldenv
test
sbb
ss
subl
dec
mov
stos
mov
or
cmp
push
movsb
or
pop
pop
xchg
data16
xchg
mov
dec
repnz
sbb
push
add
or
ret
xlat
sub
cli
fstpl
fildll
mov
xor
cmp
inc
dec
mov
addb
push
or
test
pop
pop
stos
push
lcall
mov
pushf
jnp
cmc
pop
sarb
sub
mov
out
mov
mov
popf
inc
arpl
scas
sbb
mov
int
and
xchg
call
popf
dec
lods
lods
mov
jle
data16
test
mov
rcrl
in
outsb
mov
stos
mov
push
push
sbb
or
jl
mov
scas
out
mov
pop
ds
test
fisttps
imul
push
mov
aaa
mov
in
cmp
insl
mov
jge
movsb
or
pop
jl
mov
dec
adc
cli
popf
rcll
push
in
lret
or
out
prefetch
pop
mov
inc
xchg
lea
addr16
call
out
in
xorb
arpl
dec
pop
mov
dec
push
pop
pop
or
xchg
add
xor
and
add
xchg
mov
stos
ret
ljmp
mov
xchg
outsl
sarb
loopne
cmp
ror
push
cs
movsl
out
cmp
pop
negb
cmp
jle
sbb
pop
jno
ss
lahf
mov
dec
inc
inc
notb
repnz
cmp
repz
stos
push
idivl
jns
pushf
jne
popl
xchg
sbb
icebp
icebp
adc
cs
push
daa
jbe
mov
insl
sub
push
ss
sbb
clc
int
cs
nop
sbb
sti
in
push
int
or
addr16
mov
jmp
and
push
lods
in
aas
pop
and
lea
cs
lds
push
inc
aas
push
daa
or
sbb
cli
lret
pop
adc
pop
int
pop
cmp
cmp
xchg
hlt
add
or
insl
lahf
and
mov
cmpl
lret
inc
mov
sbb
or
xor
mov
sarb
dec
in
popf
dec
dec
fdivl
enter
sub
xor
inc
scas
add
stos
jecxz
shrb
sbb
out
clc
addb
out
xchg
loope
mov
jg
and
adcl
aaa
cmp
mov
sti
pop
psubw
jo
fwait
add
xor
fsubr
mov
mov
fiaddl
add
mov
imul
adc
inc
jae
jae
insb
sarl
push
bound
pop
cmp
and
and
inc
cld
and
push
cwtl
lahf
push
jb
xorb
push
mov
pushf
sub
shlb
cld
add
rcrl
add
in
loope
fists
mov
mov
sbb
stos
mov
jae
mov
pop
mov
mov
mov
adc
mov
repnz
scas
in
inc
pop
mov
int
jns
add
or
push
loop
cmp
jno
jle
mov
hlt
mov
addl
push
loope
mov
adc
cs
stos
sub
aad
lods
add
xchg
imul
dec
xor
aaa
jno
pop
std
je
add
or
inc
adc
movsl
adc
movsb
in
or
push
decl
and
out
out
idivb
lock
out
mov
movsb
clc
pop
or
add
repnz
sbb
xchg
cmp
int
xchg
rorl
xchg
push
pop
inc
loop
xchg
cmpsl
push
sahf
fisubl
lahf
push
fbstp
ljmp
jle
ret
pop
dec
repnz
gs
xchg
cmp
add
dec
stos
adc
adc
int3
xor
sahf
push
leave
out
rol
and
add
mov
aas
comiss
popl
cltd
pop
fstl
mov
loopne
jl
push
rcll
adc
fs
in
fisubrs
in
test
fsubrl
dec
lods
xchg
mov
mov
xchg
aas
nop
shlb
fcomps
clc
mov
dec
pusha
hlt
xabort
mov
jnp
into
or
push
mov
and
xor
sbb
das
out
jl
fistps
fldt
or
lcall
sbb
add
in
idiv
push
aam
push
sahf
inc
xor
bsf
fiaddl
loop
loop
cmp
cwtl
xor
shrb
sbb
sub
and
ret
ret
cs
into
lds
dec
push
mov
add
cmp
add
adc
in
mov
xor
rcll
xorb
inc
jecxz
addl
and
fs
into
or
rolb
jno
and
cmp
repz
fiaddl
ficoml
rcll
add
mov
dec
mov
cwtl
sbb
enter
xchg
pop
add
decb
mov
fs
lret
arpl
sbb
pop
ja
je
call
and
ss
cmpl
es
xor
xor
sbb
and
sti
aad
xchg
mov
mov
test
sbb
cmp
pop
out
loope
hlt
orl
scas
sbb
push
jno
push
dec
add
sbb
sub
bnd
jge
or
bound
jne
xor
mov
push
in
inc
outsb
sar
and
in
push
in
iret
lea
jg
out
loope
push
adc
and
pop
shll
cld
push
lcall
outsl
movsl
mov
sbb
dec
test
lcall
xchg
xor
aaa
add
xor
cmc
pushf
pop
fldl
adc
cld
leave
jb
adc
imul
sbb
sbb
loopne
test
aam
stos
popf
insl
stos
cmp
pop
mov
xlat
in
in
lock
int
repnz
je
dec
int3
mov
lret
sti
fs
xor
mov
mov
sarb
jmp
sahf
dec
inc
cli
je
adc
adc
int
and
xlat
pop
sbb
or
fwait
and
xlat
jae
or
loopne
xor
clc
cltd
cmp
jne
or
or
nop
sbbl
push
sti
mov
into
add
sbb
xlat
xor
lock
sub
mov
mov
push
jo
dec
sub
in
xchg
sbb
xchg
stc
add
pop
pop
loop
js
jno
dec
sbb
fiaddl
aaa
in
ret
int
adcl
jnp
inc
je
mov
stc
cmp
imul
test
aas
push
sub
add
inc
cmp
sub
sub
fsubl
or
call
mov
and
or
dec
call
adc
sub
sbb
rol
cmpsb
sub
and
insb
in
ret
jnp
rcrl
lret
adc
popa
repnz
mov
jl
dec
xchg
or
ficomps
jmp
dec
jmp
addr16
jns
pop
adc
and
icebp
adcb
stos
dec
in
mov
ds
negb
jno
cmp
inc
mov
stc
addr16
insl
out
or
inc
pop
add
lea
push
cmpsb
add
adc
repnz
repnz
mov
sbb
leave
xchg
int
mov
push
dec
pop
imul
mov
loop
sub
adcb
sbb
and
or
out
cmp
sub
scas
aaa
ljmp
fdiv
add
xchg
repnz
dec
shrl
leave
jbe
cltd
mov
jge
dec
sub
cmpsb
cs
ror
jle
cmp
adcb
fmull
movsl
js
or
ffreep
loopne
push
push
xchg
xor
pop
icebp
addl
sub
cmpsb
fwait
mov
cmp
out
sbb
jmp
cmp
gs
lea
fdivrs
lea
pop
mov
lahf
arpl
fcompl
or
inc
pop
icebp
arpl
cmp
jo
imull
fwait
les
mov
popa
sbb
jb
lahf
push
enter
mov
fsts
scas
xchg
test
lock
inc
sti
xor
dec
cs
or
in
outsb
mov
inc
add
xor
fs
enter
stos
push
das
push
rol
test
movl
cld
xor
xchg
clc
leave
fs
cmp
repz
lahf
imul
in
test
and
data16
call
pop
das
mov
push
daa
lods
push
ds
pop
hlt
and
pop
sbb
inc
xor
leave
insl
push
addr16
add
pop
xor
inc
gs
cmc
iret
lea
mov
pop
and
arpl
and
lea
add
xor
das
push
jge
aas
mov
push
inc
push
icebp
pushf
scas
pushf
xlat
lcall
push
repz
imul
ljmp
cs
inc
test
pop
pop
cmp
push
push
sbbl
and
mov
add
mov
int
sbb
leave
push
int3
adc
je
jne
cmpsb
xor
ljmp
dec
outsb
mov
cs
adc
insl
sbb
mov
dec
push
sub
adc
and
jg
pop
adc
and
stos
lcall
arpl
sbb
into
imul
pop
in
enter
hlt
jae
mov
push
addl
stos
pop
fadds
test
cmp
jg
mov
jbe
imul
or
xor
clc
incb
testl
xorl
jne
and
add
mov
jno
sti
lea
popf
xchg
inc
xchg
xor
adc
mov
jne
aaa
testb
push
fcmovnu
int3
sbb
adc
xchg
aas
std
call
xchg
lds
and
movsb
lcall
push
imul
aaa
dec
inc
pop
jecxz
cmp
pushf
mov
call
add
or
cmp
push
mov
inc
sub
cmp
ficomps
or
xchg
outsl
add
push
and
sbb
xchg
adc
inc
popf
cld
adc
std
lock
repnz
jne
lods
orl
mov
fs
lds
iret
insl
aas
hlt
xchg
lret
xchg
stc
das
inc
stos
popa
dec
jp
sub
js
xchg
sbb
mov
lods
loope
adc
cmpsb
push
ror
or
in
pop
mov
cwtl
xchg
push
lcall
ljmp
cmpl
and
sarl
lock
xor
push
js
inc
xchg
jbe
mov
pop
mov
dec
sti
xchg
movsl
repz
scas
push
clc
outsb
and
das
lods
sub
movsl
js
adc
out
mov
xchg
shr
cmp
cmc
arpl
pop
testb
cltd
sbbl
jo
bound
jno
sub
lahf
jle
lret
cmp
xlat
cmp
pusha
inc
and
xchg
push
add
jl
ret
or
ss
insl
cmp
cmp
fdivr
hlt
and
in
addr16
shrl
and
movsb
shlb
shll
dec
lods
mov
xchg
add
mov
mov
ss
pop
out
xchg
mov
sub
inc
jns
repz
shrb
imul
lcall
aas
inc
ret
adc
inc
and
pushf
xor
mov
lret
jecxz
and
rorb
jnp
sub
and
sarl
cmp
fmuls
ljmp
xchg
lret
push
xchg
sbb
addr16
add
xchg
adc
dec
hlt
mov
addr16
loopne
inc
dec
xchg
push
mov
das
jns
rclb
adc
adc
rolb
xorb
lea
xor
xchg
cs
mov
out
cwtl
lods
subl
iret
imul
lcall
in
pop
mov
movsb
fildll
push
imul
push
xlat
das
addl
adc
jbe
mov
xor
cmp
outsl
loopne
into
xor
jmp
test
adc
ficoms
sbbl
subl
int
xor
xor
pop
push
scas
sub
push
jns
mov
rcll
and
gs
shrb
int3
aam
js
ljmp
dec
pop
insl
mov
lea
fstl
adc
or
jo
inc
push
movsl
stos
sbb
inc
arpl
daa
scas
add
inc
lods
push
pop
fwait
out
dec
adc
push
adc
into
inc
xchg
es
ss
mov
sbb
push
ret
roll
pop
mov
pop
add
movsb
xor
mov
mov
sub
insl
jno
lcall
dec
in
aas
jne
dec
sub
loope
hlt
or
dec
aam
lahf
insb
or
add
nop
test
andl
movsb
push
jbe
arpl
sub
mov
rclb
stos
pushf
lods
push
push
scas
and
mov
test
pop
ret
repnz
shlb
aaa
xchg
pusha
and
adc
and
fsubrp
lcall
cli
icebp
dec
test
dec
dec
hlt
lods
mov
pop
fdivl
movsb
push
data16
loope
loope
rclb
pop
int3
adc
jecxz
pusha
pop
sub
int
ror
mov
sarb
jno
cmp
and
jb
or
clc
xor
cs
jl
lret
data16
stos
jne
out
ret
mull
sbb
jnp
movsb
adc
xchg
leave
mov
jge
mov
andl
mov
xor
dec
mov
or
lds
sbb
out
xchg
sub
add
sub
push
jbe
testb
cld
popa
std
test
cmp
dec
in
jns
movsl
shr
popf
or
shlb
repnz
mov
xor
inc
adc
and
lret
add
shlb
divl
pop
sbb
add
jnp
jo
add
cld
scas
int3
gs
repnz
test
push
outsb
stc
out
mov
mov
add
mov
cmpsl
push
repnz
sbb
push
pop
shlb
mov
cltd
mov
mov
inc
push
lds
cmp
jl
mov
cs
adc
in
mov
shll
jno
xor
ss
xorb
iret
xor
arpl
iret
sti
in
mov
xchg
into
mov
xchg
jae
push
fsubrs
push
sarb
adc
shrl
mov
adc
lret
jge
nop
mov
popa
push
je
push
mov
mov
sbb
jl
imul
repnz
jo
xlat
adcb
cmc
scas
jns
sbb
hlt
or
enter
add
xor
mov
push
add
roll
add
fidivl
rolb
data16
push
mov
cltd
pop
ds
out
lds
push
sbb
popa
inc
sub
enter
lret
out
imul
aad
inc
or
sub
stos
jns
cmp
xchg
cmc
sti
lea
inc
pop
dec
lea
sti
std
movl
mov
stos
nop
stos
scas
mov
jl
sbb
jp
xor
mov
insl
into
or
mov
dec
mov
jp
xchg
ss
and
rorl
mov
push
mov
mov
subl
mov
ret
out
or
test
daa
mov
cmc
cmp
sbb
je
mov
lcall
cmp
adc
xor
idivl
and
lds
fs
xchg
pop
and
mov
inc
or
and
mov
jb
cmp
jns
pop
rcll
mov
hlt
adc
xor
movsl
mov
add
cmp
xchg
aad
adc
xor
cmpsb
test
pop
add
dec
insl
jecxz
push
push
out
xchg
adc
stc
movsl
pop
pop
loopne
jne
dec
fidivrs
mov
jo
pop
xchg
sub
inc
jnp
imul
mov
cs
cmpsl
push
lods
cmp
adc
or
cs
mov
cli
xchg
jge
lahf
pop
push
pop
xor
clc
out
das
cmpsb
movsb
insb
sub
sub
cmp
lcall
dec
push
adc
out
rdmsr
push
pop
and
inc
jnp
push
push
xor
pop
push
mov
dec
shl
adc
jmp
bound
pop
mov
jnp
outsl
insl
stos
stos
mov
or
jmp
xor
sub
push
fucomip
push
jb
fcomip
cmp
jg
and
pop
sbb
xor
jbe
fisubrs
cld
push
fdivl
dec
sub
cmp
daa
fs
lahf
mov
repz
icebp
jnp
and
cmp
les
jmp
cmc
aam
inc
xlat
xor
xchg
in
scas
sbb
add
and
xchg
push
and
les
push
js
shlb
inc
lods
xor
xor
dec
or
stos
dec
out
mov
mov
scas
dec
movsl
mov
imul
mov
clc
outsb
sbb
xor
inc
jle
repz
mov
cli
and
cltd
jge
daa
cmc
enter
lcall
pop
loope
inc
out
lret
and
jl
push
clc
cs
stos
adc
sub
ds
mov
jp
outsb
pop
lds
cmpb
mov
fisttps
xchg
testl
fldt
jge
mov
jns
sti
shlb
aas
movsb
add
adc
jmp
insl
add
mov
dec
sbb
push
movsl
xor
scas
je
les
sub
sti
in
mov
not
cmpsl
sub
les
cmp
jl
cmpsb
dec
jno
out
adc
sub
stos
add
adcl
imul
jecxz
or
call
fnstenv
add
pop
pop
jg
jb
ret
mov
sbb
aas
sarb
mov
call
shl
push
fs
push
mov
sbb
je
or
xorb
clc
mov
arpl
lds
imul
mov
xchg
mov
test
lcall
ret
or
bound
mov
adc
push
frndint
leave
lcall
fisubrs
adc
push
aas
aad
cltd
std
aaa
mov
cmp
jnp
add
in
mov
mov
jecxz
das
xchg
lea
sbb
repz
leave
jae
jnp
mov
inc
pop
xor
mov
jne
sti
mov
dec
popa
loopne
sub
inc
loopne
arpl
cltd
and
pop
pop
jg
out
mov
mov
js
scas
dec
dec
mov
xchg
ss
mov
pop
mov
in
jmp
inc
add
dec
cs
sahf
movsb
jecxz
ja
xor
testl
loopne
fstps
scas
sti
jmp
push
mov
inc
xor
cwtl
out
shl
mov
repz
aas
xlat
lcall
jo
mov
push
sub
je
sub
or
mov
shl
or
fucomi
inc
cmpsb
cltd
fisubrl
f2xm1
jb
push
stos
aas
xor
xchg
jmp
out
stc
pop
ljmp
addr16
scas
aam
add
push
ficomps
pop
sub
jg
xchg
fidivl
cli
sbb
sbb
mov
imul
jmp
testl
imul
jno
add
fbstp
adc
frstor
sti
mov
and
test
mov
in
loope
mov
sarb
or
pop
mov
rclb
loop
push
xchg
cmc
and
mov
addb
push
jge
cmp
add
ljmp
arpl
icebp
das
ljmp
ret
xlat
aad
pop
pop
cmc
lcall
cmpsl
cli
mov
or
or
and
jmp
pop
pop
xchg
pushl
andl
mov
mov
or
icebp
lds
je
pop
and
push
lea
add
sarb
pop
inc
cwtl
rorl
jmp
int3
addr16
dec
mov
inc
mov
fdivl
rolb
sbb
andb
bound
in
ljmp
push
hlt
mov
xchg
into
rclb
and
stos
cmc
nop
push
stos
mov
xor
push
jmp
inc
or
ljmp
cli
inc
adcl
sbb
jg
inc
out
ss
out
div
stos
xor
insb
fs
sbb
loop
ds
push
sbb
sbb
push
pop
cmp
fwait
add
outsb
push
push
jb
loope
out
inc
lods
xlat
pop
lcall
das
xor
jne
sbb
mov
lret
adc
adc
push
add
jle
pop
xchg
ret
mov
add
and
pop
jecxz
scas
int
popa
push
push
mov
out
inc
xor
enter
mov
adc
or
mov
inc
fyl2x
mov
cmp
pop
xchg
ret
xchg
push
popf
sbb
jmp
jle
or
xorb
jge
add
adc
cmp
out
lret
sbb
mov
mov
in
sahf
cmp
dec
test
cmc
aam
mov
push
fsts
lock
add
test
das
pop
pop
inc
lods
mov
jp
jle
stos
insl
mov
dec
xchg
repz
pop
lret
xchg
stos
pushf
adc
cmc
mov
jl
scas
cmp
or
inc
jns
mov
data16
cli
lret
mov
inc
cmp
and
add
jmp
stc
dec
sub
mov
stos
sbb
fdivrs
pop
add
cltd
lret
rorl
stc
loop
movl
and
xchg
push
mov
xor
popa
clc
inc
rolb
mov
adc
subl
xchg
pop
cltd
and
scas
jb
push
rorl
sub
loopne
sub
stc
iret
cmp
cmp
insb
lret
adc
dec
or
or
xchg
mov
xchg
arpl
pop
nop
cltd
push
sub
or
jge
cmp
sbb
rcl
xor
or
mov
aad
mov
mov
mov
adc
inc
xor
pop
push
orb
push
sub
push
inc
mov
ljmp
sub
stos
rol
sub
add
inc
nop
pop
xor
shrb
pop
call
or
std
out
rcrb
mov
in
jb
jge
xchg
bnd
jne
mov
xchg
cmp
sbb
pop
cmc
pusha
push
mov
pusha
push
xchg
loopew
out
mov
adc
stc
mov
adc
cmp
dec
fnstsw
in
pusha
xchg
pop
push
xor
loop
push
mov
icebp
repnz
out
or
jl
sbb
xor
fistpl
dec
pop
loopne
push
dec
pop
je
add
dec
xor
out
xor
push
cmp
fstpl
stos
lret
mov
aad
mov
or
sbb
jnp
sbb
pushf
xor
loopne
cld
data16
sbb
or
adc
subl
cld
pop
xor
sarl
dec
out
cmp
in
push
sbb
leave
rcr
jns
pop
in
mov
ret
lods
inc
push
sarl
icebp
inc
out
bnd
xor
leave
mov
push
and
out
xlat
enter
lds
and
out
jge
in
popf
sbb
cmpsl
mov
xchg
dec
mov
mov
in
mov
push
pop
mov
jge
sahf
cmpsl
mov
xchg
or
xor
sub
hlt
mov
pop
mov
ja
insb
pop
and
ljmp
dec
out
sub
sub
dec
mov
dec
pushf
sarl
insb
pop
sbb
les
fstps
in
xchg
lahf
mov
mov
cmc
fs
in
std
or
jle
xor
test
inc
pop
clc
fsts
jmp
imul
pop
rcrb
fistpl
rclb
lret
or
cmp
xor
sub
flds
add
fcomi
out
xchg
cmp
push
xchg
int3
out
outsb
adc
xor
jmp
xchg
or
ljmp
aad
popa
notb
neg
mov
fcomps
xchg
adcl
cmp
daa
ret
popf
and
sbb
xchg
jg
test
inc
push
jge
in
pop
scas
inc
insb
mov
lea
adc
adc
pop
adc
fildll
mov
je
js
gs
add
daa
mov
sti
fcmovb
adc
testb
int3
pop
mov
jnp
dec
xchg
aas
gs
add
inc
fimull
nop
jns
loopne
in
jns
jle
fiaddl
push
jmp
std
jbe
mov
cs
xchg
les
mov
pop
inc
enter
xor
dec
dec
imul
add
shr
test
jge
push
add
or
sbb
jo
mov
ss
jno
push
or
ss
mov
xchg
push
sbbl
and
or
inc
fnstsw
add
xor
mov
mov
and
mov
lret
cmc
pop
xor
push
call
stc
adc
xor
adc
inc
in
xorl
xor
repz
ret
lret
adc
mov
lret
xor
outsb
xor
push
mov
nop
pop
cmp
adc
icebp
pop
jbe
xor
ret
inc
repz
lcall
aaa
aad
imul
dec
sub
data16
cld
jmp
jb
adc
inc
inc
sub
xor
mov
not
fcmovnb
imul
out
daa
lods
xchg
iret
dec
push
outsl
push
clc
and
pop
cwtl
push
shufps
xchg
mov
movb
pop
mov
fiadds
xchg
shrb
add
pop
or
dec
out
andb
scas
add
jae
imul
scas
nop
int
push
add
mov
mov
int3
jmp
scas
or
mov
shrb
adc
push
shrb
push
and
clc
push
in
iret
xor
mov
lods
inc
jle
pop
int3
popf
addb
mov
push
push
cmpsl
push
int
push
adc
out
sbb
sbb
scas
hlt
in
sbb
cmpsl
outsl
push
inc
xchg
xorb
scas
fstl
scas
je
or
fcom
std
lahf
cmp
orb
xor
inc
loop
in
xor
out
sti
divl
sbb
addr16
mov
lock
test
push
iret
incb
das
cmc
test
ss
fmuls
add
nop
jno
fs
mov
cwtl
xorl
dec
xor
sub
xor
pop
repnz
push
aas
stc
push
add
cmc
jae
aaa
push
mov
mov
pushf
in
add
ljmp
testl
ret
jne
mov
popa
scas
cltd
push
and
and
popl
cmp
aad
movsl
pushf
jmp
push
sti
imul
cmp
scas
daa
xlat
je
cmpsl
fwait
decl
bound
jno
ret
pop
inc
cltd
add
nop
out
in
aas
or
add
aad
rclb
loopne
push
stos
xchg
out
testb
inc
and
or
push
icebp
lret
rorb
add
cmp
xchg
insl
shlb
gs
outsb
push
cmovg
xlat
ss
scas
pop
cmp
inc
mov
sbb
es
aas
xchg
jno
lods
xchg
in
push
sti
les
mov
in
popa
xor
fbstp
adc
mov
clc
sbb
dec
push
mov
aad
mov
cwtl
mov
pop
in
mov
xor
movsl
lds
roll
push
mov
mov
mov
cmp
testl
sarl
loop
adc
xchg
sahf
aam
pop
lea
or
leave
xchg
mov
test
cld
mov
add
mov
ds
stos
sub
nop
mov
test
jecxz
repnz
or
jg
and
fnsave
push
cwtl
push
aas
push
test
jbe
fidivs
sub
mov
cmpsb
out
bound
push
leave
decb
jnp
into
sahf
mov
jae
lock
sub
imul
mov
test
adc
push
mov
sub
fnsetpm(287
jne
das
sbb
jecxz
push
mov
icebp
mov
lcall
dec
inc
xor
lahf
sti
mov
hlt
cmpsb
subl
dec
cmpsl
addb
mov
sbbl
fstpt
loopne
setge
les
jmp
inc
dec
jmp
out
pop
dec
push
xor
push
dec
nop
dec
cltd
sarl
adc
mov
cmc
or
leave
out
addl
xchg
xor
popf
mov
xchg
popf
push
pop
push
dec
enter
mov
or
add
cmpl
faddl
push
ficompl
loopne
dec
repnz
xchg
movsl
sub
xchg
and
fbld
bound
cmpb
repnz
jp
imul
xor
jno
sub
repz
imul
ja
sbb
jge
mov
cmp
and
loope
cmp
icebp
scas
push
mov
sarl
xchg
mov
pop
jp
push
fcompp
test
adc
lea
lcall
roll
cli
mov
xchg
mov
fnstenv
je
cwtl
pop
mov
sub
push
xchg
popa
dec
xchg
push
pop
xor
jo
imul
das
or
sbb
mov
cmpsb
enter
testl
divb
leave
adc
add
push
pop
mov
inc
mov
call
in
and
pop
arpl
or
das
push
cs
jl
jl
hlt
mov
jmp
stc
pop
ljmp
es
mov
outsl
pushf
cmp
das
pop
fwait
out
cld
jns
popf
iret
push
cmc
pop
call
enter
pop
es
push
sbb
sbb
stc
and
jnp
pop
leave
jp
cmc
mov
push
lods
sub
testl
sub
sahf
adcl
mov
in
ds
dec
push
jne
fcoms
insl
push
js
shl
imul
rorl
repz
jmp
call
lea
sub
leave
mov
push
mov
lahf
mov
cmp
jmp
sub
bound
jne
idivl
inc
push
mov
in
fidivl
ds
fdivs
cltd
frstor
lods
movsl
mov
fmul
das
lods
jmp
bound
cmpsb
add
push
push
mov
lds
mov
pop
dec
outsb
lcall
and
arpl
xchg
sub
ds
cmp
ljmp
dec
jnp
and
fiadds
lds
or
add
pop
lahf
xor
loopne
insl
sub
popf
pop
push
cmp
loop
rcr
mov
adc
xor
ret
popf
cmpsb
dec
and
addb
pop
andb
sbb
rcrl
xchg
out
push
dec
std
or
xor
jno
ja
add
add
orb
jo
jo
and
mov
scas
push
popa
repz
stos
ret
cwtl
or
sbb
dec
lds
scas
sbb
sbb
push
enter
jae
cltd
sbb
outsb
mov
or
xlat
insb
jle
pop
je
sbb
add
aam
lock
sbb
sbb
push
inc
and
or
push
cmpb
cmp
test
loopne
jg
sub
jmp
mov
imul
push
mov
bound
xorb
xchg
stc
dec
push
leave
rorl
test
aad
jbe
fists
add
ljmp
sbb
sub
addr16
sti
out
xlat
add
dec
mov
jbe
test
mov
sar
insb
add
cmpsl
xor
xor
ficoml
scas
fwait
push
repnz
or
aam
imul
cli
lock
jge
jmp
or
push
push
andl
test
mov
mov
data16
repz
push
mov
jl
push
jmp
lret
and
pop
dec
sub
pushw
orl
mov
scas
pusha
sti
mov
hlt
sti
imul
in
ror
movsb
mov
fcomp
repz
and
mov
or
ret
cltd
xchg
push
mov
pop
das
mov
fwait
mov
jmp
mov
lock
cmp
dec
or
dec
es
arpl
outsl
jae
cmp
xchg
and
pop
jns
in
test
fbstp
nopl
ss
mov
pop
popf
imull
pop
cmp
stc
inc
scas
xorl
push
lret
add
pushf
pop
lret
push
nop
hlt
insl
jp
mov
ret
or
imulb
mov
cmpsb
xor
jmp
push
out
mov
and
sub
adc
test
or
xlat
add
movb
movsl
movsb
mov
fisttpll
in
in
in
fisubs
lret
pop
jle
xchg
cmp
sbb
jb
aas
dec
adc
cmp
outsb
sub
xor
out
inc
add
das
clc
mov
jns
cmp
arpl
push
das
xchg
mov
imul
and
mov
jmp
sub
or
sahf
mov
dec
mov
cmpsb
xor
arpl
and
lock
fisubl
mov
hlt
fnstcw
push
add
test
outsb
mov
jns
xor
dec
jp
sub
inc
xchg
repnz
inc
push
out
scas
cli
xchg
aam
in
imul
clc
out
cmp
xor
mov
xor
lret
cli
stos
mov
dec
mov
or
das
aad
inc
push
outsl
imul
mov
push
pop
mov
stos
sbb
loop
lock
push
xchg
ret
push
adc
lea
imull
test
xchg
pop
out
mov
push
into
enter
pop
rcrl
sub
jbe
cwtl
test
push
std
repz
adc
inc
fstl
lods
mov
fcoml
and
xor
mov
fsubrl
mov
lods
fwait
push
lcall
in
pop
adc
push
pop
xor
push
das
cli
aad
cmc
sbb
fisttpll
je
jp
lods
loop
sbb
xlat
mov
adc
arpl
data16
xchg
push
aaa
shl
sub
fcoml
sub
test
call
ja
sbb
pop
mov
lret
jecxz
pop
mov
mov
mov
or
pop
mov
ret
inc
addl
adc
shlb
les
cmpsl
cmp
sti
push
adc
inc
dec
test
arpl
mov
xchg
push
add
sahf
in
mov
xchg
fsubrl
arpl
into
je
stos
cwtl
fcmovu
mov
cmc
mov
jl
inc
fidivrs
or
inc
cmp
lret
test
add
and
or
aam
mov
push
dec
cmp
add
test
or
rorl
sbb
sub
inc
fs
mov
xor
adc
and
mov
jecxz
push
repnz
xor
push
pushf
xor
cmp
sti
cwtl
add
cld
popa
jae
pop
std
out
daa
or
mov
popa
lret
push
push
add
dec
in
rorl
clc
in
sub
add
ja
xchg
or
pop
mov
jg
scas
mov
mov
dec
mov
pop
pop
lods
dec
and
pop
fcompl
in
adc
mov
xchg
out
adc
sbb
push
popa
fimuls
push
outsb
or
or
loope
jns
xor
jp
test
pop
jbe
push
repnz
fisttpl
outsl
enter
aaa
roll
stos
stos
mov
sbb
mov
pusha
mov
or
mov
xchg
dec
aam
cli
out
cmp
jb
jp
mov
addb
mov
flds
gs
insb
sub
addr16
sti
mov
adc
jge
inc
jnp
add
imul
in
leave
stos
inc
xchg
xlat
out
rorl
sub
sarl
cmp
lock
xor
das
lea
jno
xchg
inc
sti
push
and
mov
movsb
cmp
cmp
loopne
dec
dec
dec
ljmp
movd
sbb
movsb
das
out
jo
repz
inc
pop
pusha
insb
or
xor
mov
or
dec
ficoml
jp
mov
add
sbb
mov
loopne
popa
add
cltd
pushf
leave
mov
jg
mov
sub
jg
cs
mov
lcall
dec
les
jb
jecxz
push
xchg
adc
cmpsb
in
pusha
sub
inc
repz
mov
dec
jmp
addr16
ret
addr16
fst
cli
push
or
in
mov
jp
sub
stc
jg
cld
rep
pop
mov
inc
aaa
jbe
cmpb
into
out
dec
jno
jnp
fcoml
daa
lcall
pop
rcll
jecxz
cmpsl
cmp
fisttpll
jl
ret
dec
jno
scas
fisubl
pop
in
ror
ret
sub
inc
lea
cmp
mov
mov
lret
add
xchg
imul
les
sbb
int
fbld
add
scas
les
repnz
cmc
inc
cmp
or
dec
push
es
in
inc
insl
sub
lods
popf
popf
fsubp
in
and
in
nop
jb
sbb
xchg
pop
movsl
decl
jne
mov
sbb
subl
ss
fwait
jns
mov
shlb
ss
jmp
hlt
dec
rcr
pop
mov
push
cmp
mov
inc
jbe
jbe
adc
mov
mov
popl
std
adc
sbb
mov
fmuls
aaa
gs
dec
push
sub
xor
dec
test
cs
arpl
movsl
test
roll
mov
mov
and
sub
xchg
stos
lock
cmp
gs
xchg
add
xlat
push
mov
into
mov
add
and
cld
lret
jecxz
mov
push
push
cmp
push
xchg
cmp
fmuls
sbb
jecxz
jae
push
or
xor
and
cmp
std
rorb
popa
ljmp
ds
xchg
add
pop
mov
mov
mov
and
pop
add
ja
xchg
call
js
mov
sbb
mov
std
ret
dec
mov
xlat
adc
int
aas
cli
jnp
popa
out
add
jl
xor
scas
out
xchg
push
push
cmpsl
hlt
lods
outsb
adc
push
std
es
adc
or
xor
adc
and
xchg
sbb
in
into
adc
loop
lcall
xor
pop
inc
xchg
das
mov
movsl
mov
xchg
xor
addb
outsb
push
mov
js
cmp
loope
mov
sti
fadds
iret
pop
sarl
fmul
mov
int3
xor
sbb
in
add
enter
lods
and
adcl
imul
test
mov
adc
sti
sub
fdivrl
movsl
xchg
ret
jl
dec
mov
std
dec
fwait
leave
enter
mov
pop
adc
sbb
sub
mov
adc
int
mov
scas
add
push
and
call
out
in
jb,pt
pop
testl
mov
sub
cmp
movsb
cmp
xor
out
and
sbb
rcr
mov
test
jne
mov
inc
xor
orl
or
rolb
push
leave
adc
mov
add
in
mov
les
fimuls
mov
dec
fmulp
jae
dec
mov
mulb
fisubrs
mov
shrb
xchg
sub
iret
out
sub
or
push
jae
sub
fdivrl
push
adc
cmp
cmpsl
jl
mov
ficompl
out
popf
adc
clc
adc
jecxz
clc
roll
add
sbb
dec
pop
das
sbb
sahf
pop
in
sbb
scas
or
pusha
cmpsb
fadd
test
xchg
dec
lahf
cmc
pop
mov
xor
inc
dec
sti
test
jo
fistl
mov
xor
cmp
fldcw
sahf
jnp
lods
mov
add
iret
jge
mov
pop
out
sbb
jl
mov
mov
mov
pusha
mov
repnz
and
ret
cmpb
fsts
xchg
popl
xchg
mov
push
mov
push
sahf
arpl
jns
ljmp
xor
and
ja
jmp
jbe
aaa
cs
das
pop
imul
movsb
mov
mov
outsb
add
push
cmp
cs
fdivrs
jg
mov
push
jbe
sub
icebp
fdivrs
add
fcoms
lret
xor
into
ja
mov
std
addr16
xlat
dec
ficoms
sahf
int3
or
fdivrs
inc
movswl
enter
out
hlt
out
mov
in
xchg
sbb
dec
dec
pop
cli
hlt
sub
sub
xchg
mov
xchg
xchg
ret
insb
adc
mov
js
jecxz
popa
lahf
xchg
nop
xchg
or
add
jge
mov
std
iret
jmp
ret
xor
add
sub
mov
jg
pushf
call
mov
dec
pop
in
inc
pop
pop
insl
ljmp
aam
mov
dec
push
in
rcrb
loop
dec
xchg
mov
xor
mov
xor
cmp
push
jmp
inc
andb
xor
mov
test
inc
push
out
cwtl
dec
dec
jp
and
aas
sub
mov
pop
and
push
ljmp
stos
mov
mov
out
je
jmp
pop
shlb
fwait
daa
popa
enter
inc
testb
sbb
dec
nop
lret
int3
mov
push
jno
xor
ds
add
xchg
mov
xor
xchg
or
sti
mov
push
mov
aaa
out
adc
sbb
mov
cld
cltd
pushw
mov
das
cli
flds
mov
and
and
xchg
jle
mov
testl
into
das
pop
mov
int
imull
jo
scas
sbb
fwait
and
mov
xchg
outsl
lds
jecxz
xor
lret
mov
mov
shll
inc
mov
sti
test
mov
mov
adc
mov
jb
cwtl
cltd
ja
jmp
adc
in
es
fldt
mov
mov
push
and
dec
adc
jp
pop
aas
push
jno
lea
out
ret
mov
shlb
hlt
jp
cmp
out
add
adc
dec
popf
cld
aad
cwtl
mov
aam
jmp
mov
inc
xchg
pop
fnstenv
pop
daa
ficoms
cmp
pop
mov
xor
push
and
popf
sub
xchg
pop
and
dec
pop
mov
and
pusha
aad
mov
rcr
and
dec
sbb
incb
ret
fbld
jecxz
cli
pop
loope
rorl
xchg
lds
mov
outsl
bound
push
cmp
sbb
shll
les
push
dec
jno
loopne
mov
out
leave
leave
mov
sbbb
mov
jp
add
adc
imul
dec
dec
call
mov
pop
es
shrd
pop
mov
mov
push
and
lea
scas
pcmpeqw
xor
sbbl
dec
insl
daa
decb
and
mov
fcmovnbe
mov
or
fisttpl
pop
push
int
stos
mov
hlt
xor
push
loopne
lahf
pushf
inc
jle
sbb
nop
cmp
jmp
in
xchg
insl
sar
inc
pop
insb
pop
test
aas
sub
orl
sbb
mov
xchg
push
shlb
inc
push
das
lret
inc
xchg
xchg
push
sbb
aas
jbe
cmpsb
lret
loope
fdiv
hlt
pop
mov
inc
jne
jl
sbb
cmp
jmp
stc
inc
aas
es
rorl
mov
lahf
idivb
xchg
lahf
adc
test
aam
jp
cmp
mov
mov
das
cmp
outsl
adc
loope
jne
mov
mov
xor
adc
mov
jo
inc
insl
dec
add
sti
push
adc
jns
ds
xchg
pop
jno
or
stos
cmpsl
sbb
sarb
jecxz
mov
sub
and
in
pop
mov
dec
aaa
push
mov
adc
loop
mov
mov
into
fwait
mov
push
in
ret
or
popa
sbbb
jns
mov
push
rclb
pushf
and
popa
sbb
cld
icebp
and
fwait
add
pop
cli
cmp
pop
mov
xor
sub
aas
adc
in
stos
mov
pop
pop
cmpsl
movsb
hlt
xor
imul
out
and
mov
imul
xchg
mov
cs
test
in
and
ljmp
mov
pop
push
mov
jmp
xor
aad
into
add
xor
mov
mov
mov
xchg
fnsave
rol
jo
insl
and
dec
mov
clc
rcrl
and
ret
inc
mov
in
and
je
rep
xchg
mov
repnz
stos
pusha
lods
inc
or
add
push
dec
or
add
lods
arpl
pushf
lret
data16
mov
or
xor
inc
or
mulb
mov
out
lcall
push
ss
add
notb
test
pusha
jns
adc
in
xor
movsb
push
pushf
cmc
dec
rclb
xchg
mov
cmpsl
jmp
outsb
mov
mov
sub
cmpsb
mov
mov
adc
andnps
das
mulb
xor
sub
adc
ret
adc
jmp
ret
pop
pop
mov
mov
mov
pop
mov
mov
xchg
popf
add
repnz
inc
mov
add
push
pop
in
pop
pop
cmp
pop
sarl
or
stos
pop
neg
loop
shll
dec
xchg
jbe
jge
mov
jo
aas
mov
call
loop
jp
mov
and
jo
ret
or
lock
mov
pop
mov
lea
and
xchg
std
sbbl
mov
xor
ret
stos
pop
jb
add
pop
adc
jne
pop
outsb
and
and
jnp
mov
mov
cmp
shlb
cmp
call
dec
into
inc
aam
mov
inc
cmpsl
jmp
adc
mov
fisttps
jle
xchg
cmp
mov
inc
inc
push
shl
push
ret
pop
popf
mov
push
inc
xchg
cmpsb
pop
or
sub
inc
xor
mov
xchg
mov
or
loope
sub
mov
mov
test
out
sbb
sub
or
and
popa
fbld
bound
es
adc
ja
jns
fistl
outsl
push
sbb
push
repnz
xchg
push
test
imul
xchg
mov
and
jmp
push
je
js
roll
sub
sbb
xlat
push
ja
divl
sbb
mov
scas
movsl
mov
pop
orb
and
and
cltd
adc
loopne
mov
dec
add
gs
inc
and
dec
int3
in
fwait
mov
sbb
pop
dec
arpl
lea
mov
shll
in
adcb
mov
mov
or
mov
cmp
and
loope
cs
int3
sbb
or
pop
test
test
dec
mov
pop
lods
inc
pop
popa
ret
fidivrs
lods
div
jb
lea
pop
and
adc
lds
imul
sbb
and
pop
mov
sbb
dec
pop
add
movsb
add
daa
hlt
xor
or
or
movsl
fdecstp
lahf
aas
out
sahf
stc
push
cmp
and
or
mov
mov
dec
xor
nop
dec
and
dec
pop
lock
sbb
push
sahf
adc
push
data16
jbe
ret
push
fiadds
mov
xchg
jmp
sar
insl
dec
mov
sti
out
pop
ret
fs
dec
sbb
pop
inc
xor
cmp
test
xchg
js
aam
iret
xchg
dec
enter
lret
mov
rcll
xchg
pop
leave
push
mull
adc
and
popa
ret
sbb
cmp
in
stc
mov
imul
js
sahf
sti
outsl
sarl
dec
in
mov
loope
inc
cmp
out
xor
or
jmp
sbb
shll
imul
jp
xchg
xlat
push
cmp
inc
adc
rorb
jbe
lods
popf
xor
lahf
mov
insl
sahf
and
push
arpl
lret
dec
aam
mov
and
sbb
dec
sbb
cmp
push
dec
call
xchg
mov
lcall
std
sub
and
jle
mov
mov
testl
stos
sbbb
enter
icebp
sti
pop
or
scas
xchg
andl
inc
mov
jno
mov
sub
icebp
sar
mov
subl
mov
loope
and
mull
bound
scas
jb
dec
pop
movsl
sti
pusha
mov
lds
xadd
fnsave
pop
adc
jmp
mov
test
xor
xchg
adc
adc
dec
arpl
lret
jbe
mov
aas
ja
shlb
imul
aaa
dec
shrb
mov
enter
and
cltd
pop
add
sub
loopne
and
and
imul
dec
adc
mov
push
sbb
jg
mov
xor
jg
aam
or
jnp
xchg
ret
mov
inc
movsl
mov
xchg
sahf
push
orl
cmp
mov
cmp
jb
loopne
jnp
dec
fmulp
sbb
mov
mov
sub
testl
dec
adc
push
adc
shll
ljmp
dec
sub
leave
sub
cltd
mov
and
jl
sub
cwtl
fsubrs
mov
sub
pop
fiadds
repnz
jecxz
in
sti
sbb
sti
das
mov
jg
sub
xchg
xlat
imul
jge
pop
xchg
aam
into
adc
sub
je
or
and
or
cmp
and
sub
pop
dec
push
outsl
or
mov
and
push
test
loope
in
inc
cli
gs
mov
adc
sub
sub
test
sbb
xor
maxps
dec
xchg
sbbl
sub
cmp
pop
insb
mov
push
lock
out
popf
scas
dec
add
inc
repz
orb
sub
inc
outsl
test
jmp
jecxz
and
scas
or
pop
add
cmp
test
test
ret
in
call
mov
adc
and
add
orl
aaa
jne
iret
cmp
loope
xchg
iret
dec
jbe
lods
in
nop
jno
int
pop
adc
jns
out
dec
pop
adc
add
and
loope
inc
inc
leave
movsl
clc
daa
add
dec
into
pushf
or
xor
pop
daa
and
ret
cmp
arpl
int3
loop
shr
jnp
and
xorb
in
jecxz
push
pushf
push
and
stc
mov
mov
mov
or
sub
xor
loope
int3
inc
je
jno
jbe
mov
sti
xchg
xor
push
pop
xorb
in
loope
cmp
push
adc
pop
mov
mov
add
xchg
jo
popf
mov
sub
pushf
cli
mov
mov
fs
dec
dec
int
push
out
and
leave
leave
filds
jb
mov
add
ja
addr16
and
icebp
add
mov
mov
aaa
dec
movsl
mov
testl
add
push
dec
cmpsl
mov
dec
icebp
loop
mov
bound
jnp
sub
out
lahf
pop
inc
push
repz
aad
test
icebp
bound
pop
adc
dec
mov
jmp
orl
xchg
mov
adc
pop
addr16
mov
mov
insl
push
jo
xchg
ficompl
sub
std
xor
movsl
xchg
push
pop
mov
stc
icebp
jae
jae
push
xchg
sbb
pushf
idivl
push
push
nop
sarl
dec
xchg
lahf
gs
push
xchg
sub
jg
cltd
hlt
std
shl
sbb
cmp
jb
data16
outsl
sbb
orb
lods
hlt
sub
jo
out
dec
mov
fidivl
cmpsb
imul
sbb
adcb
pop
mov
push
pop
jmp
mov
cli
dec
cbtw
dec
cld
popf
call
xor
xchg
adc
push
out
mov
xlat
mov
mov
add
in
in
adc
imul
inc
imul
jg
mov
cmpsl
loope
or
bound
lretw
lea
sub
icebp
mul
jb
jnp
lods
inc
mov
dec
sbb
into
jp
and
mov
mov
add
filds
and
jecxz
in
mov
or
aad
mov
stc
jbe
adc
ret
xchg
lret
fistpl
lahf
jl
fiadds
icebp
add
outsb
mov
shl
push
outsl
mov
push
or
aas
sbb
daa
jle
rorl
shll
and
mov
mov
iret
pop
out
test
std
pop
stc
shl
lret
mov
mov
fcmovne
adc
pop
jne
jb
jp
xchg
inc
ds
gs
stos
dec
jmp
aam
lcall
mov
ds
mov
outsb
dec
cmpsl
fwait
add
mov
jecxz
icebp
out
mov
cmpl
fistl
test
adc
dec
push
popf
pop
negb
xor
and
fldt
cmp
in
cmp
xlat
inc
imul
int
pop
arpl
jo
xor
cwtl
mov
xor
xorl
nop
jp
push
lds
or
cmp
push
clc
mov
pusha
xchg
mov
and
adc
pop
inc
dec
ds
cs
xor
je
push
cmp
mov
mov
adc
push
jnp
adc
cmc
es
jg
rorb
ret
iret
xlat
lods
mov
mov
inc
pop
arpl
push
lret
call
loop
fisttpll
jle
in
pusha
xchg
rolb
pop
insb
xor
mov
inc
aaa
and
stc
cmpsl
ret
test
adc
loopne
dec
cmp
or
inc
cmp
push
adc
leave
popa
mov
sub
jo
repz
ret
lret
mov
mov
bound
or
push
push
add
jge
imulb
jo
mov
imul
hlt
out
std
push
push
in
fisubs
into
jno
cld
xchg
in
iret
aad
mov
jecxz
and
add
aas
push
sbb
adc
xchg
adc
or
and
cli
data16
mov
mov
dec
mov
lods
adc
pushl
out
out
inc
adc
loope
xor
push
jl
sub
dec
cmp
mov
repz
push
pop
jecxz
test
add
div
mov
mov
jmp
push
xchg
in
je
sarb
adc
aam
xchg
mov
mov
mov
pop
insl
pop
dec
push
mov
mov
orl
addr16
aaa
sbb
inc
std
push
dec
lds
int3
addr16
mov
mov
jge
dec
push
loop
xor
stos
aad
addl
push
fcoml
add
loop
loope
mov
call
inc
pop
sarb
mov
xor
or
pop
enter
fabs
sbb
jge
scas
mov
inc
xor
scas
int3
dec
jns
fistps
movsb
xchg
arpl
lods
loope
sbb
inc
insl
mov
sub
pop
pmulhw
jl
sub
notl
jnp
ret
mov
xor
into
pop
push
addb
sbbl
jle
cld
pop
sbb
sub
outsl
or
hlt
jg
sbb
nop
xchg
stc
add
jg
bound
pop
push
dec
sub
dec
xor
loopne
push
lcall
cmp
les
sahf
jp
lea
sbb
cltd
or
in
dec
push
rcr
insb
lea
int
jge
jnp
clc
outsl
and
aam
mov
push
outsl
loopne
mov
dec
xor
cmp
xchg
shlb
mov
in
into
mov
aad
fcmovnbe
shrb
jb
xchg
mov
mov
mov
outsl
inc
lret
fs
fdivrl
pusha
pop
mov
push
and
pop
pop
inc
ret
or
xlat
xor
jecxz
push
inc
inc
mov
mov
mov
shll
push
loope
rolb
aad
push
sbb
xlat
or
mov
fsubs
push
sub
dec
inc
mov
ja
push
pop
sub
out
mov
xchg
push
inc
fbld
fidivrl
loop
mov
rcll
fdivrl
fiadds
fisttps
lret
mov
and
mov
inc
enter
into
push
or
adc
pop
add
add
int3
inc
movsb
mov
iret
adc
add
push
add
mov
mov
xor
fcomps
cmp
inc
push
adc
xchg
pop
and
mov
dec
xchg
sti
bound
sbb
pop
push
fwait
nop
push
outsl
or
cld
xchg
push
push
insl
adc
arpl
shll
mov
jmp
adc
add
fcmovnu
jae
cmp
jae
sbb
jg
inc
inc
lcall
lea
sub
mov
jmp
std
pop
jg
mov
adc
cltd
cli
stos
lods
hlt
inc
push
lods
inc
sbb
cmp
or
je
clc
div
inc
adc
jae
jne
sub
cmp
push
rclb
add
adc
add
mov
jnp
call
push
jg
loopne
or
sbb
lods
divb
dec
xchg
cmc
cltd
fwait
clc
movsb
popf
filds
notb
push
cmp
mov
push
xlat
int3
xor
cmc
or
lods
mov
and
subl
psubsb
pop
or
stos
add
ret
sub
aaa
pop
mov
pop
movsb
mov
sub
xor
pop
cmp
enter
add
fcoml
push
pop
sub
popf
push
in
scas
xlat
xchg
pop
out
pop
iret
or
arpl
inc
inc
push
in
jnp
adc
lock
mov
mov
pop
das
jp
add
loopne
mov
es
adc
incl
leave
fwait
push
ss
sti
leave
je
js
mov
rclb
mov
cmp
pop
dec
movsl
rorl
stc
xor
mov
sahf
mov
sub
adc
aad
push
mov
jp
inc
add
les
rcrl
popa
fs
push
mov
dec
mov
leave
xor
ljmp
sbb
outsb
cmc
popa
and
adc
and
xchg
push
in
outsl
mov
jae
cmp
fidivl
pop
inc
sub
aad
out
and
add
not
mov
pop
dec
das
push
jae,pn
push
xchg
pop
cmp
mov
int
or
movsb
lds
mov
xlat
or
lds
adc
incl
and
sbbb
sub
aad
fdivrl
mov
cltd
xor
cmp
lahf
movsl
lods
push
mov
push
call
mov
bound
out
jno,pn
push
shll
push
addr16
fcmovnbe
jle
xchg
outsl
inc
inc
and
aaa
arpl
add
push
xchg
push
ret
xchg
pop
push
or
xchg
aas
lods
enter
jmp
mov
stc
push
in
inc
dec
and
std
or
sub
loope
arpl
mov
into
mov
test
ds
cmp
ret
popf
dec
dec
ds
in
jecxz
xlat
cmpl
sbbb
jbe
int3
mulb
push
jmp
pop
xlat
sbbb
lock
test
dec
xor
jmp
and
and
push
das
rcrl
dec
sbb
xor
xchg
push
popl
dec
nop
aad
push
fcompl
fisubl
cmpsl
mov
stos
jl
jns
test
mov
dec
repnz
cld
jne
addr16
jns
add
pop
idivl
cmp
fsub
mov
leave
imul
pop
or
rcl
sbb
sub
xchg
mov
stos
and
stc
jp
mov
mov
fistpll
int3
lods
adc
or
ljmp
xchg
in
stos
cmp
js
popa
scas
test
and
in
sub
out
sbb
outsl
dec
xchg
sub
pop
push
in
cli
jns
and
mov
dec
adc
cmp
pop
push
cli
xchg
daa
jae
jns
lea
ret
out
push
loop
adc
push
test
rolb
sub
sbb
loopne
in
arpl
lret
sahf
js
aaa
lahf
cmp
mov
pushf
stos
mov
imul
inc
icebp
int
bndldx
and
fcoms
shrb
dec
pop
test
pop
inc
leave
lret
adc
push
push
push
jb
mov
mov
or
cmp
sti
cmp
adc
cmpl
je
cmp
jno
pushf
and
pop
inc
sbb
pop
sbb
mov
xchg
pop
jg
aas
and
push
addl
jmp
jns
cmp
lods
mov
lods
fsts
ja
push
add
orb
movsl
sub
and
hlt
xlat
fstpl
incb
jb
int3
outsl
movsl
shrb
pop
jmp
dec
cmp
repz
cs
dec
ja
fwait
andl
push
add
cltd
lahf
push
and
fs
and
jb
push
sub
push
push
xchg
xchg
sub
inc
orb
nop
jmp
arpl
inc
rorb
sbb
mov
mov
mov
je
mov
cmpsl
sbb
call
stos
enter
push
cmp
mov
inc
mov
test
sbb
outsb
mov
xor
sub
pushf
nop
xor
cmpsl
negb
cli
notb
jns
imul
shr
adcl
fldcw
ja
pop
or
mov
pop
fisubrl
sbb
push
xorb
cli
or
add
add
lret
adc
jo
cmp
push
xacquire
jge
xchg
scas
push
sahf
dec
xchg
cli
xor
jmp
jnp
imul
int
lock
rorb
repnz
popa
push
leave
pop
sbb
jle
fidivrs
stos
cmpsb
sbb
dec
into
sbb
mov
in
mov
inc
mov
sbb
out
adc
xor
test
push
fidivl
lcall
xchg
stc
cmpsb
fldt
insl
xlat
iret
rcr
mov
lods
push
lock
or
mov
sbb
sub
lods
cmpsl
jbe
mov
mov
inc
pop
mov
add
mov
and
mov
dec
jo
mov
mov
ja
fnsave
cmp
scas
fdiv
sbb
add
push
sbbl
jno
push
adc
ds
mov
pop
shll
int
or
cmp
push
mov
es
mov
les
sti
mov
sub
xchg
loope
adc
sbb
and
jge
jo
or
pop
cmc
sbb
mov
sbb
mov
push
and
xchg
loop
mov
xchg
or
xor
sarb
adc
push
fcmovb
fbstp
ret
cmc
sub
in
sub
mov
dec
or
mov
push
movsb
or
mov
cmp
xor
icebp
xor
add
push
mov
push
cmc
out
dec
sbbb
enter
fmull
mov
xchg
ljmp
inc
notb
push
adc
jbe
sbb
repz
repz
or
jb
and
cltd
sub
int
adc
sub
addr16
aam
test
scas
cwtl
cmp
inc
inc
mov
mov
outsl
daa
push
mov
enter
adc
push
lods
mov
scas
cmpsb
aaa
cmp
jbe
scas
cmp
adc
mov
jae
sbb
out
int3
outsb
ds
aam
dec
mov
pop
dec
dec
jo
sub
adcb
iret
cld
bound
dec
ljmp
sub
jno
sarb
pop
std
test
inc
pop
xchg
aaa
xchg
inc
xor
push
test
mov
sti
out
pushf
cmpsl
add
je
daa
fnstsw
aaa
pop
xchg
mov
xor
and
mov
pop
adc
fnstcw
mov
aam
movsl
fisubs
fists
inc
pop
lret
aas
and
mov
jmp
and
pushf
push
pop
aas
lea
inc
pop
xchg
pop
push
pop
mov
movsb
inc
adc
icebp
mov
dec
repnz
insl
mov
add
pop
jo
in
movsb
rcr
hlt
popa
cmp
stc
jle
ret
push
jns
mov
mov
gs
cwtl
int
test
jl
push
in
or
adc
sbb
sub
push
xor
xor
cli
add
incl
in
pop
insl
mov
and
popf
and
mov
and
cmp
mov
in
mov
stos
pop
in
sub
xor
gs
xor
cmpsb
js
sahf
and
mov
jnp
pause
push
xchg
sub
sbb
mov
test
and
jae,pn
ret
xchg
and
xchg
scas
cmp
cltd
mov
mov
jb
ja
in
add
rcll
int3
inc
lret
outsl
jecxz
or
in
add
add
fistps
push
mov
sub
sub
or
add
mov
ds
xor
inc
inc
dec
fldt
call
loop
pop
in
stc
add
sub
stos
mov
popa
cmc
and
sar
out
pop
xchg
ret
push
out
push
test
outsb
mov
push
icebp
xchg
lods
shl
cmpsl
in
add
xchg
mov
loope
pop
loopne
mov
outsl
push
movl
sub
sbb
loopne
mov
lods
or
cs
push
addr16
inc
push
cmp
dec
jb
fmull
fdivs
cmp
fbld
loop
jle
mov
data16
addl
xchg
adcl
pop
or
sti
jnp
mov
lods
or
add
fcmovu
cmp
xlat
pop
out
cli
aam
cmpsb
xchg
push
jbe
mov
in
cmp
faddp
data16
movl
mov
mov
adc
call
movsl
jle
dec
test
pop
xor
fidivs
test
sub
inc
mov
ds
jo
ja
fiadds
mov
cmpsb
ljmp
jae
fmul
add
dec
adc
or
jmp
mov
cmp
pop
sbb
fadd
rcll
cli
xchg
cmp
inc
jbe
and
pop
test
jns
cltd
in
dec
mov
xchg
pop
mov
jae
xor
adc
aam
test
insl
and
mov
and
and
repnz
xchg
or
adc
add
test
dec
in
in
mov
pop
adc
fincstp
insb
pop
mov
xchg
loope
pop
fildll
rcll
mov
xlat
cld
pop
dec
sti
stos
mov
cmpsb
mov
or
fwait
int
sti
cmpsb
and
fistpl
mov
int3
fcmovb
adc
adc
xchg
std
mov
or
push
mov
xchg
xor
call
or
stos
jb
and
adc
dec
jge
test
adc
loopne
imul
push
cltd
lock
ret
cmpsl
inc
sbb
ds
es
mov
nop
jge
pop
stos
dec
fbstp
xor
in
out
jl
data16
faddl
aam
in
loope
push
inc
leave
enter
push
imul
inc
int3
mov
adc
sub
jne
push
fxch
and
mov
movsb
jae
and
jle
mov
push
imul
xor
mov
das
sahf
or
pop
fsts
int3
cmp
sahf
inc
xchg
and
inc
pop
aad
mov
loope
xlat
xor
mov
sarb
add
fldcw
je
rorb
cmp
pop
sbb
jb
jp
mov
sbb
xor
stos
mov
jecxz
sbb
mov
lret
insb
push
push
pop
fisttps
fists
lea
mov
hlt
fcoml
sbb
outsl
out
pop
mov
push
cli
mov
adc
subb
insl
push
daa
loopne
mov
test
bnd
cs
daa
mov
add
loopne
jae
sub
mov
inc
jmp
dec
fs
test
js
aaa
je
jl
mov
adc
in
xor
incb
pop
sbb
xlat
pop
loopne
pop
and
or
movsl
xor
or
or
push
mov
sub
push
inc
popf
push
sbb
mov
popa
cmp
call
test
or
aad
jle
fs
ljmp
fsts
jbe
xor
inc
stc
mov
fwait
adc
add
pusha
mov
jle
es
sbb
add
xorb
xchg
cmp
popf
or
iret
inc
mov
test
add
arpl
push
out
cmp
jnp
inc
add
ss
fsts
sub
subl
popf
imul
insl
addb
inc
out
decb
or
sub
insl
lcall
adc
cwtl
loop
outsb
lret
into
and
and
int3
lds
stos
fidivrs
loopne
ret
popa
test
mov
dec
xchg
or
add
in
add
mov
pop
push
or
sahf
out
insl
out
mov
sbb
les
lods
test
adc
pop
fiaddl
aaa
subb
adc
add
cmp
fistps
mov
das
sub
clc
push
mov
adc
popf
inc
inc
xor
sbb
pop
mov
push
pop
push
lret
bnd
test
xor
nop
cmp
xchg
icebp
or
or
pop
cli
fldenv
outsl
daa
ljmpw
xlat
sti
push
push
jno
lods
insb
outsl
or
jae
lret
mov
add
test
leave
in
insl
cmp
fdivrs
std
dec
dec
sub
cmp
ja
int3
cld
fisubrl
mov
sbb
pushf
cli
outsl
push
clc
sub
push
mov
inc
mov
inc
out
lock
je
imul
mov
add
andl
cmpsb
or
sub
xchg
loopne
aas
pop
xchg
jne
stos
push
lods
mov
daa
cmpb
pop
out
test
mov
stos
divps
call
repz
mov
push
and
fistps
jecxz
or
sbb
into
fbld
repz
bound
push
ja
sbb
mov
cs
and
das
mov
arpl
sub
out
inc
lcall
gs
shll
mov
cltd
cmp
lret
imulb
inc
test
add
int
fsqrt
ds
jp
cmpsb
push
andl
mov
cld
push
repnz
mov
ja
push
loop
inc
push
add
mov
loop
push
jp
push
jmp
or
mov
mov
pushf
mov
cwtl
sbb
add
xchg
fildll
jg
jne
push
pop
sub
repnz
dec
cli
in
loopne
lock
das
pop
push
cmp
xorl
push
fisttpll
push
mov
mov
test
je
xchg
add
adc
fsubs
stos
adc
cmpsl
cmp
jle
or
std
mov
jecxz
inc
leave
mov
cli
lods
push
mov
jns
xor
xchg
and
gs
ror
std
mov
mov
pop
imulb
sub
xlat
inc
in
fucomip
dec
dec
icebp
mov
xlat
mov
pop
jg
xor
xor
add
mov
push
sti
std
pop
pop
shlb
out
icebp
idiv
inc
dec
cmp
mov
and
or
jge
pop
cltd
clc
pop
cmp
je
jb
jo,pn
insl
out
clc
mov
jne
scas
pop
inc
sub
das
jg
fldcw
cs
and
jmp
out
mov
jae,pn
mov
aas
xchg
jmp
das
nop
outsb
enter
push
dec
prefetcht2
dec
fwait
add
sub
cmp
xchg
mov
xchg
and
jge
push
sahf
sbb
rcl
jmp
outsb
push
add
sbb
xchg
adc
loope
cmpb
out
test
mov
sub
int
adc
mov
mov
std
jae
pusha
mov
adc
sbb
je
inc
cmp
mov
mov
in
and
test
pop
mov
mov
ficoms
mov
ret
repz
movsl
ljmp
enter
in
ja
shlb
inc
cmpsl
inc
cwtl
movsb
sub
mov
sub
pop
push
jnp
xchg
imulb
pop
sahf
mov
daa
and
or
bound
sbb
nop
inc
ret
shr
jnp
in
mov
jmp
mov
inc
mov
and
inc
into
ds
cmp
inc
js
daa
inc
loop
sbb
lahf
test
add
adc
or
cmp
aas
jle
icebp
dec
sti
mov
inc
mov
negb
test
out
in
jmp
xor
imul
and
shlb
xor
sbb
mov
xchg
aas
sbb
fs
popf
rcrl
test
cli
test
out
aam
sub
addr16
nop
cmp
xchg
sbb
in
stos
xchg
xchg
or
sbb
clc
lea
dec
pop
test
shll
xor
add
push
add
dec
mov
notl
mov
jne
lahf
mov
pop
rclb
mov
clc
add
mov
aad
repnz
or
inc
lods
pop
adc
mov
or
test
push
sub
xchg
mov
jbe
xor
data16
imul
stos
shrl
loopne
cs
jp
fisttps
and
mov
sbb
nop
push
lock
inc
lds
lahf
and
test
adc
xchg
andnps
xchg
ljmp
shl
fnstcw
xor
xchg
dec
xchg
mov
iret
xor
les
push
inc
enter
and
pop
mov
icebp
cmp
dec
fidivrs
sahf
pop
cmp
mov
sbb
inc
pop
xor
rolb
das
and
and
sbbb
jne
fdivrs
popa
sub
pop
clc
mov
inc
in
loope
sbb
das
mov
pop
in
into
mov
ret
sub
push
fisttpl
dec
xchg
pop
add
ds
cmp
lods
dec
push
adc
jge
enter
jle
cmp
mov
xlat
dec
shlb
or
sub
adc
dec
xor
in
scas
and
jmp
and
in
imul
ja
sbb
mov
jp
push
stos
addl
int3
addr16
inc
mov
and
fdivp
in
mov
add
pop
push
and
sbb
xchg
mov
lods
test
push
adc
fwait
mov
push
lea
sub
sahf
push
xchg
add
scas
sbb
pop
push
cltd
and
xchg
push
fidivs
enter
das
int3
inc
sbb
adc
loop
xor
mov
leave
add
cwtl
add
mov
push
pop
jo
hlt
test
hlt
inc
fwait
outsb
inc
lret
out
int3
js
add
loopne
mov
cmp
orl
out
jae
jge
or
jne
adc
icebp
mov
js
push
push
movsb
incb
mov
call
mov
sbb
jge
push
loop
out
data16
mov
sbb
pop
clc
hlt
out
inc
sub
xchg
jo
and
pop
ja
cwtl
sti
pop
out
notb
push
and
outsl
dec
lea
es
outsb
inc
insl
mov
xor
dec
ja
adcl
mov
and
loope
sub
loop
lret
sub
fwait
ljmpw
sbb
popa
cmc
or
jne
pop
sti
dec
gs
insl
adc
mov
or
sbb
lcall
pop
and
rclb
and
mov
ret
push
mov
inc
repnz
push
xchg
les
jae
imul
cmp
imul
shlb
dec
cmp
inc
out
cmc
jg
adc
ss
pop
int
add
pop
and
push
and
cli
bound
sbb
stos
es
stc
subl
dec
mov
addb
xor
stc
xchg
fistpll
push
jmp
imul
pop
fsubrs
paddb
sahf
or
add
push
lock
pop
mov
mov
fidivs
and
enter
xchg
movsl
mov
nop
addb
mov
enter
mov
jns
les
dec
inc
mov
ljmp
in
mov
in
lcall
adc
mov
sbb
jne
lret
cmp
rcrl
or
cmpsl
aaa
shrb
xchg
and
mov
dec
fistpll
jo
stos
into
jae
int
cmp
test
mov
andl
popf
dec
push
call
jno
xchg
jl
adc
cmp
cmc
mov
adc
enter
push
jne
pop
in
inc
fnstcw
outsl
xchg
xor
push
or
bound
dec
cmpsb
rcrb
iret
loope
push
jle
and
insl
pop
fsubr
icebp
xor
mov
jle
js
orb
mov
adc
inc
pop
mov
leave
fisubl
jns
pop
cltd
mov
pop
dec
xchg
sbb
mov
lock
xor
push
mov
and
lea
loopne
out
xchg
cmc
mov
scas
iret
jo
gs
int3
in
dec
pop
mov
pop
fistpll
pusha
mov
ret
leave
or
sub
je
shlb
jge
xchg
mov
mov
mov
cmp
xchg
push
int3
sbb
jno
sub
addl
jmp
mov
mov
bound
mov
jnp
or
mov
push
daa
jae
pop
pop
sbb
sbb
inc
pop
push
xchg
ss
mov
push
jl
inc
ljmp
sbb
or
add
pop
or
into
mov
dec
add
rcl
jmp
cld
in
mull
mov
or
inc
nop
ret
shrb
lods
into
mov
add
stos
ds
fdivrs
cs
mov
jl
notl
jge
pop
adc
jns
ret
shl
pusha
xchg
xor
jg
sbb
test
or
add
sbb
lea
adc
test
mov
inc
sub
repnz
rcrb
jne
xchg
out
std
jno
cmpsl
insl
jp
sub
push
sbb
xchg
popa
out
mov
mov
andl
fdivp
pop
sbb
int
inc
sub
loopne
add
add
jmp
xchg
jnp
aas
adc
in
out
andl
sbb
psrlw
pop
pop
xor
dec
xor
testl
stc
repnz
aam
imul
push
repnz
pop
pop
imul
mulb
jnp
dec
je
bound
push
subb
test
sub
push
hlt
arpl
xor
jne
dec
movsb
enter
adc
push
lock
movsb
xchg
lahf
mov
sbb
fistpl
mov
cwtl
popf
cmp
imul
scas
jl
mov
cmp
pop
inc
push
adc
jne
xchg
cwtl
inc
mov
lea
mov
mov
cmp
jbe
or
loopne
mov
mov
jle
adc
sub
push
dec
jle
out
jno
xor
lret
cmp
pushf
rorb
test
mov
add
push
mov
dec
sti
pop
push
aam
leave
push
mov
call
jae
mov
mov
cmpsl
lahf
test
enter
dec
out
mov
sbbl
xchg
aaa
popa
fldt
cmp
fwait
arpl
cmp
js
jno
cmp
mov
add
cs
push
loope
loopne
mov
sbb
xor
inc
sbb
jg
mov
push
ret
inc
push
aam
cmpsl
imul
jle
xlat
jbe
les
outsb
mov
pop
mov
cmp
pop
mov
jnp
in
loop
imul
push
rorb
fs
mov
lahf
sub
mov
je
push
les
or
sub
inc
icebp
lods
jmp
fnstsw
dec
std
mov
pop
roll
xchg
sbb
xchg
push
fnsave
dec
adc
in
sub
sub
pop
lcall
sub
xor
xchg
iret
nop
dec
push
inc
push
jo
mov
std
cs
xchg
out
fwait
scas
int
dec
dec
aaa
or
ret
ds
insb
dec
mov
les
jo
inc
jp
movsl
pop
xor
pop
cltd
sbb
add
cmpsl
pop
sbb
pop
test
xchg
iret
or
call
mov
xchg
das
icebp
cmp
lahf
scas
xor
cmc
sub
jne
dec
pop
std
rclb
pop
imul
sbb
or
mov
in
dec
das
sub
xor
pop
popa
insl
outsl
cmc
mov
push
lret
imul
enter
xchg
jnp
inc
rorb
mul
imul
dec
lret
xchg
mov
pusha
push
mov
imul
out
sub
mov
call
repz
and
push
inc
or
mov
jle
stos
in
pop
push
mov
and
ret
cmp
call
cmp
add
repz
mov
cld
cli
ds
xchg
add
push
sub
pop
mov
inc
lret
bswap
jne
inc
std
mul
aaa
int3
dec
xchg
push
gs
or
mov
dec
xor
cltd
outsl
ds
jbe
cs
xor
sbb
dec
inc
mov
inc
cmp
ljmp
and
or
enter
cmpsb
adc
ja
leave
inc
jb
jecxz
xchg
push
mov
out
push
arpl
inc
mov
das
orl
or
lcall
insl
in
dec
jge
insb
int3
dec
jns
test
mov
dec
mov
pop
sub
adc
mulb
lds
mov
jns
adc
add
mov
loopne
xchg
in
xor
in
add
push
cmpsl
jne
int3
dec
dec
in
sbbl
test
cli
mov
jg
adc
rclb
xchg
lret
scas
pop
shrd
in
test
and
lret
sarl
out
es
add
adc
dec
add
into
mov
repnz
pushf
lea
fisttpll
cmp
adc
pop
and
xor
inc
fs
scas
sub
cmc
test
jbe
fwait
xchg
loop
lods
mov
repz
jae
push
rcrb
mov
addr16
arpl
fs
scas
adc
cmp
scas
adc
cltd
lods
and
sahf
jbe
mov
adc
scas
xchg
dec
add
xchg
ret
negb
mov
clc
push
into
das
xor
in
mov
mov
fmulp
shlb
xorl
xchg
test
inc
or
push
mov
sbb
sbb
mov
scas
lods
ja
lret
int
ja
add
dec
mov
scas
xchg
in
ljmp
addb
xor
and
fsts
mov
pop
push
lret
or
push
or
aas
ret
jmp
das
and
insb
inc
push
and
xor
das
gs
shrb
loopne
in
rol
pop
leave
mov
or
cmp
in
push
jg
pop
pop
xor
mov
lock
ljmp
call
mov
or
dec
lret
mov
dec
dec
out
jae
shll
adc
aam
add
push
fmulp
pop
scas
fadds
dec
jl
iret
mov
pop
divb
daa
inc
push
mov
push
xor
fs
loope
in
lret
mov
js
and
outsl
roll
scas
lods
out
xchg
inc
roll
xchg
sbbl
clc
hlt
jp
pop
roll
dec
xchg
ja
cs
xchg
aad
jl
mov
loop
les
stc
stos
subl
inc
mov
xchg
pop
je
pop
and
jns
aad
xor
xor
xor
push
mov
aad
mov
inc
and
mov
push
ds
ljmp
push
aas
insb
mov
jmp
test
and
dec
cmp
fmulp
dec
pusha
and
or
push
jp
divb
and
out
xor
insl
enter
pminsw
sbb
addr16
popf
or
movsl
stc
lods
lods
fsubs
mov
or
pop
fwait
cmc
ds
cmp
add
jge
add
negl
adc
jnp
jb
popa
enter
pushl
mov
out
xor
dec
fwait
and
jbe
or
lret
lcall
arpl
inc
das
add
fdivr
icebp
push
jnp
or
or
dec
and
push
jmp
outsl
nop
pop
add
lret
in
data16
pop
push
lea
mov
sbb
xchg
push
jl
je
xor
xor
addr16
fldcw
pop
fwait
outsl
xor
in
mov
xor
pop
cmpsl
xchg
jp
and
cmp
mov
es
les
and
fisttpll
cmp
movsb
out
movsb
enter
aad
notb
test
jnp
loopne
in
xchg
stc
pop
dec
int3
fs
and
test
and
dec
sub
dec
mov
xor
mov
in
int
lret
repz
ja
cmp
pop
daa
lcall
xchg
insb
xchg
fdivl
xor
adc
mov
mov
jmp
sti
ja
cltd
in
stc
in
ficomps
mov
jecxz
add
js
sarl
jne
pop
scas
jbe
cmp
push
stos
stc
test
inc
dec
jp
vpslld
lret
jl
xchg
arpl
mov
lea
fimuls
lods
jge
in
movsb
adc
mov
jmp
popa
mov
mov
push
jbe
mov
jmp
or
ss
mov
pop
mov
aam
pop
cld
xchg
repnz
adc
insb
aam
adcl
out
in
cmpsb
mov
loope
jle
je
shl
shl
hlt
jle
xchg
notb
test
imul
mov
fimuls
pop
jmp
insl
push
sahf
ret
aad
mov
div
popw
imulb
add
in
push
mov
out
sub
sub
and
nop
pop
lcall
lds
ss
insb
pop
add
stc
push
xchg
jmp
push
pop
push
xor
xchg
shll
xor
std
rorb
jae
cmpsl
adc
xchg
xchg
rolb
cmc
out
pop
inc
or
mov
cwtl
test
sbb
pop
cmp
add
sub
int
and
pop
fsts
out
js
inc
lret
sbbb
cwtl
and
adc
lret
test
mov
mov
cld
dec
cmp
das
jnp
iret
cltd
ss
lcall
aam
mov
mov
leave
fisubs
ret
inc
mov
xor
in
jno
ret
cmp
adc
or
std
cs
mov
push
add
insl
aas
rcl
jmp
test
mov
cmp
mov
jmp
int
mov
bound
adc
mov
push
or
mov
mov
pushf
add
stc
adc
lahf
std
pop
fstpt
push
sti
pop
aad
notl
icebp
lret
shrb
and
xor
mov
cmp
bound
cltd
insl
jbe
jecxz
cmp
sub
scas
dec
adc
mov
scas
push
adc
push
mov
jne
arpl
push
inc
outsb
rcl
push
sub
pushf
adc
std
xchg
clc
js
insl
mov
xchg
enter
mov
rcrb
call
jae
data16
arpl
add
and
adc
jmp
in
movsb
inc
pop
ret
xlat
sbb
bound
jle
imul
leave
lret
mov
and
or
jge
jnp
and
lods
or
xor
mov
cmp
enter
inc
sub
dec
add
sub
push
vcmppd
call
mov
push
cmpb
push
bound
je
pop
adc
cmp
lods
mov
jns
rcl
je
mov
lods
stos
mov
fsubrp
inc
arpl
outsb
push
inc
jno
pop
leave
call
pop
sbb
out
xor
push
test
push
bnd
lea
test
fimull
dec
push
and
das
push
dec
lcall
adc
push
aas
movsl
mov
and
xchg
stos
imul
xlat
leave
jg
mov
xchg
test
fwait
call
fcmovb
daa
std
push
dec
xchg
or
movsb
jb
mov
xor
inc
push
adc
jo
cmpsb
negl
data16
outsl
inc
pop
push
push
ss
xor
ja
pushf
xor
lock
dec
cmp
or
adc
scas
or
inc
cmp
lock
stos
xor
mov
sub
inc
sub
bound
sbb
lcall
cmp
adc
mov
pop
mov
scas
sti
dec
pop
andb
jle
clc
es
pop
mov
aad
adc
dec
sbb
add
js
mov
ds
bound
out
adc
push
clc
rorl
inc
and
cmc
sbb
mov
xchg
xchg
add
imulb
je
sti
scas
out
rclb
adc
xor
adcl
out
pop
inc
and
fwait
and
inc
or
fldcw
cs
and
or
test
lret
push
dec
pop
out
aaa
xchg
jl
dec
call
cmpsb
push
loope,pn
inc
mov
in
lods
aaa
movsl
sbb
xor
movsl
das
mov
fmuls
adc
mov
faddp
int
cmovb
add
sti
stos
outsl
js
cmp
loopne
adc
testl
add
mov
add
sub
mov
push
loopne
xchg
dec
daa
pop
into
pop
cmc
inc
push
sbb
shrl
das
fs
aas
inc
jae
mov
daa
push
add
arpl
lods
test
fiadds
lret
pop
fidivrl
repz
inc
sbb
mov
lcall
mov
add
dec
xor
cmp
xlat
ljmp
ss
and
mov
or
repnz
pop
adc
lock
jge
mov
lret
loope
mov
add
call
push
cli
stos
push
xor
insb
and
pusha
in
push
sbb
fdivrs
dec
pop
outsb
orb
pop
fisubl
and
data16
aaa
inc
mov
fcomi
pop
mov
dec
cmp
imul
lds
jae,pt
mov
push
sbb
inc
roll
mov
pand
fisubs
cli
subb
std
lret
sahf
movsl
pop
jbe
arpl
aam
mov
mov
lds
fisttps
pusha
lcall
cltd
adc
mov
aad
enter
rcll
push
ljmp
xor
ja
rcrb
ljmp
shrb
test
ret
imul
das
es
ret
dec
jle
fdivs
shl
out
add
adc
loop
movsb
xchg
pop
cmpsl
popf
xchg
push
mov
or
sbb
dec
or
pop
dec
xor
jmp
sarl
mov
mov
clc
cmp
cmp
mov
cli
xor
mov
fcomps
std
push
ret
out
fwait
movsb
add
mov
jl
adc
insl
maskmovq
testl
ror
push
mov
or
jmp
nop
scas
sbb
jns
push
cmp
dec
ds
xchg
pop
aad
out
ds
mov
xchg
test
or
pop
sbb
push
or
and
inc
jbe
xor
xchg
addr16
pop
movb
popl
dec
adc
add
ss
clc
inc
int
mov
mov
test
sti
je
rorl
xchg
inc
std
insl
pop
cld
insb
cltd
xor
and
arpl
inc
call
jp
ret
dec
insl
daa
rcr
outsl
scas
fwait
push
pop
outsl
mov
cs
jmp
sbb
push
adc
mov
adc
xchg
mov
push
pop
push
cmp
iret
inc
ret
stc
lock
pop
mov
aam
fildll
push
adc
and
xchg
add
adc
pop
test
pop
adc
je
cmpsb
rorb
ljmp
lcall
jmp
mov
ds
test
and
mov
test
inc
xor
or
loop
pop
pop
mov
aad
sub
lret
mov
or
pop
es
aas
ss
xor
pop
ss
fs
jecxz
pop
cli
ret
imul
test
adc
bound
cmp
pop
mov
dec
cld
adc
sub
add
sub
icebp
in
add
das
popf
cld
jb
cltd
pop
clc
and
fdivrl
in
movsb
scas
sti
hlt
fsubs
xor
xorl
hlt
sub
call
mov
loopne
adcb
not
jbe
imul
fsubr
inc
sbb
adc
test
imul
push
mov
mov
add
sarl
outsl
ljmp
int3
pop
clc
mov
xor
mov
mov
dec
in
negb
mov
sub
pop
insb
stc
sub
int3
ljmp
nop
sahf
sbbb
orb
pushf
mov
cwtl
or
jbe
mov
sahf
subb
and
mov
popf
push
leave
mov
jns
sub
ss
mov
repz
mov
sbb
jp
inc
fcmovnbe
xor
scas
mov
lret
stos
pop
mov
xacquire
sub
js
dec
les
push
in
repnz
or
sbb
aam
mov
and
and
push
push
leave
je
pop
or
push
dec
fdivr
push
fmuls
shll
fwait
jns
pop
out
movsl
sbb
out
or
out
jecxz
xlat
aad
dec
fimull
xchg
inc
addb
shlb
sbb
mov
repz
jnp
rorl
or
mov
bound
xor
xor
pop
outsb
xchg
pop
mov
adc
mov
add
lcall
sahf
cmp
dec
test
loop
inc
scas
dec
inc
jle
test
add
fstl
inc
loope
or
fsubrl
adc
dec
filds
movsl
cli
or
push
dec
test
and
push
pop
add
jb
js
sbb
in
enter
or
push
jge
pushf
ret
in
das
in
push
sub
push
push
adcb
cmp
fldenv
enter
iret
iret
mov
stos
mov
pop
jb
lret
test
int
out
xchg
sub
sbb
push
popf
lret
sahf
jnp
push
lock
imul
cli
jl
jmp
cmp
sbb
mov
sbb
push
cmp
jmp
push
cmpsb
idivl
dec
leave
pop
cwtl
call
inc
rcrl
add
push
lcall
mov
in
and
inc
aaa
lcall
inc
pop
les
sbb
out
pushf
nop
and
pop
adc
stos
inc
pusha
cmpsb
fwait
pop
sub
sahf
movsl
mov
mov
mov
in
sub
sbb
mov
lret
sub
sub
mov
lods
popa
mov
imul
or
xchg
jp
push
shl
mov
jno
and
adc
aam
push
xchg
out
xor
mov
aaa
xchg
daa
movsl
aas
mov
inc
out
call
mov
movb
mov
mov
test
test
and
in
popf
push
xchg
adc
pop
out
cmpsb
jge
scas
push
out
cmp
call
jmp
adc
ret
fs
or
pusha
push
dec
pop
xor
pushf
lods
inc
sbb
adc
dec
scas
fs
cmp
sub
test
pop
inc
jno
add
loop
xchg
jmp
push
jmp
cmp
push
sar
fstpl
fcmovb
mov
shll
nop
pop
cmp
jle
dec
lret
add
lods
jl
lret
popf
cs
sbb
icebp
test
cmp
fisttpl
mov
push
add
push
dec
mov
push
das
mov
lahf
jp
lods
loop
and
inc
mov
sysenter
mov
add
sub
lcall
push
out
mov
sub
adc
rcrb
push
mov
call
ret
scas
clc
and
fimuls
push
push
pusha
push
jae
lcall
mov
mov
nop
insb
push
test
ror
cwtl
notl
cmp
jl
aad
iret
dec
clc
sub
sti
sub
popa
ljmp
repnz
sbb
push
enter
jns
and
xchg
stc
ds
cmpsb
std
ja
add
inc
push
push
inc
and
out
xchg
xchg
sbb
aam
fs
xor
movsl
outsl
inc
lcall
ljmp
icebp
fisttpl
fidivrs
fst
push
dec
mov
jb
mov
cmp
hlt
fld1
push
dec
ret
inc
mov
jmp
imul
test
lret
pandn
jae
and
rorl
jecxz
int
mov
sub
ss
cli
fs
andl
fmulp
notl
nop
stos
dec
lea
testl
mov
out
or
and
cmc
jbe
dec
lea
and
mov
pushf
insb
sub
adc
ljmp
mov
jns
or
rorb
jbe
jno
and
pop
stc
out
dec
pop
mov
outsb
loop
pop
push
jge
mov
mov
mov
jmp
hlt
adc
mov
jbe
test
ret
dec
out
mov
scas
jnp
shrb
mov
jns
xchg
jae
xchg
cld
dec
dec
pop
fadds
dec
mov
inc
xor
in
pusha
pop
push
sbb
das
mov
xchg
lock
adc
mov
mov
loopne
aam
inc
ficompl
cmp
and
mov
insl
sarl
mov
pop
pop
pop
aas
mulb
jle
clc
ret
test
es
pop
sbb
das
jmp
insb
dec
pop
cltd
pop
clc
xchg
sub
push
push
fst
mov
insl
js
imull
lods
pop
lods
popf
xchg
out
scas
in
dec
daa
punpcklwd
jle
repz
cli
vpmullw
adc
cmp
dec
mov
scas
push
ret
imul
orl
jmp
xchg
ja
insl
sub
cmp
nop
fs
mov
sbb
sbbl
pop
sbb
or
xchg
in
adc
int3
addb
add
pop
pop
mov
sbbl
fcmovbe
scas
es
loopne
xor
mov
ret
adc
push
icebp
push
leave
bound
xor
push
outsl
in
idivl
adc
xor
test
or
sub
cltd
inc
bound
and
fidivrs
push
or
dec
popf
adc
add
push
shl
xchg
dec
cmpsl
aas
xor
and
xor
mov
scas
mov
adc
cmova
cmp
inc
mov
bound
lret
pop
outsb
jle
or
xor
sub
and
mov
testb
es
pop
add
dec
inc
xchg
mov
pop
push
out
and
mov
push
xchg
pop
jl
mov
sbb
testl
push
add
jae
dec
xchg
test
out
clc
das
sbb
in
jns
scas
std
bound
in
repnz
mov
aas
push
add
out
sub
inc
stos
testb
dec
and
pushfw
lods
lock
sbb
jl
inc
mov
sub
push
pop
mov
push
dec
mov
xor
aaa
jae
sub
push
sbb
adc
cmc
and
mov
rolb
lcall
pushf
out
dec
and
inc
jmp
xchg
dec
pop
jmp
data16
cmpsl
jo
jb
jne
sti
adc
lret
pop
pop
xor
scas
jl
nop
fucom
xor
sar
fildl
mov
push
loopne
mov
push
cwtl
pop
jo
mov
push
or
xchg
sbb
pop
dec
jmp
fiaddl
push
fsts
std
xor
and
mov
arpl
in
mov
lcall
jns
jbe
in
inc
push
popa
fimull
nop
sarb
pop
push
jno
push
flds
mov
inc
add
cwtl
sub
ds
testb
std
adc
fadd
or
xchg
push
fcmove
and
pop
in
pop
dec
pop
int
dec
stos
adc
ja
jmp
shrl
incl
sub
into
cli
cli
dec
dec
mov
adc
lds
pushf
sbb
in
shrl
inc
int3
mov
dec
push
sub
dec
jae
mov
enter
push
ljmp
es
mov
mov
mov
pop
aaa
push
lahf
loop
outsl
fwait
adc
ret
pusha
in
dec
xchg
push
ret
and
outsl
fwait
or
mov
push
jp
es
and
bound
fstl
sbbl
sbb
jns
stc
xchg
jno
lahf
bnd
mov
loopne
test
mov
adc
push
rclb
negb
cmp
in
and
mov
hlt
sti
push
push
xchg
and
xor
and
fisubs
push
cmp
test
cmp
iret
mov
ret
notb
stc
outsl
xor
xor
add
inc
es
jo
ret
dec
lahf
xor
faddl
push
mov
out
xchg
dec
js
inc
loopne
outsb
aam
ljmp
pop
pop
and
aam
movmskps
dec
mov
loope
movsb
les
and
fsubrl
or
repnz
lahf
leave
push
dec
and
jo
push
inc
pusha
fistl
cltd
js
iret
sbb
and
imul
ja
mov
scas
insb
inc
notl
mov
and
sti
pop
testl
pop
mov
notb
mov
add
leave
movsl
mov
push
mov
sbb
cmp
or
nop
out
out
xchg
mov
mov
cmp
mov
imul
cltd
rcll
movsl
push
adc
pop
jbe
lds
aaa
lcall
scas
popa
adc
dec
mov
push
movsb
cmpsl
mov
icebp
jp
dec
andl
scas
mov
or
mov
insb
adc
xchg
xchg
or
loop
test
or
arpl
dec
lret
test
add
xor
sub
push
cmc
push
jge
ret
sbb
cmp
inc
and
cli
cmc
dec
insb
test
and
nop
push
dec
and
push
mov
push
leave
loopne
add
sahf
data16
cmpsb
gs
in
je
pop
sbb
xchg
out
adc
shl
in
test
lahf
lahf
fwait
enter
aad
hlt
sti
dec
dec
mov
jne,pt
or
aaa
jae
cmp
cmpsb
insl
out
xchg
outsl
xchg
pop
cmp
call
jb
mov
int
mov
aaa
inc
pop
sbb
es
adc
dec
inc
adc
pop
mov
mov
cld
jg
repz
lret
out
pop
push
xchg
es
fldl
test
mov
cltd
inc
inc
popa
pop
fwait
clc
sbb
mov
mov
test
and
dec
fsubrp
enter
xchg
dec
sti
pop
mov
or
mov
mov
fnstsw
daa
popf
pusha
sbb
arpl
rol
and
popa
or
movsb
cli
push
inc
js
jg
insl
xor
iret
dec
mov
mov
inc
popl
xchg
jae
mov
push
push
inc
incl
outsl
mov
mov
stc
pop
out
and
jno
hlt
sarb
pop
cmp
sub
imul
or
daa
pop
xlat
jg
ljmp
mov
inc
add
xchg
lret
xchg
orb
bound
inc
int
inc
jecxz
movsl
leave
jns
sub
jnp
movsl
push
lcall
sbb
or
in
mov
es
leave
fsubr
jo
push
jno
cmp
jecxz
in
mov
pop
and
repnz
fld
cmp
inc
mov
loope
lods
dec
pop
adc
ja
sbb
stos
jmp
dec
ja
push
push
in
inc
daa
jg
popf
dec
sbb
int3
pop
fdecstp
inc
inc
sbb
cwtl
daa
xchg
outsl
push
cmp
xchg
or
nop
data16
xor
dec
mulb
aaa
mov
out
xchg
sub
cmc
gs
adc
scas
or
add
shr
push
pop
and
jge
out
je
in
cwtl
lods
call
pop
loopne
add
rcrl
fbld
fwait
inc
cmp
lods
inc
jmp
mov
je
xchg
shll
lahf
lock
fadd
jmp
fstpt
or
imul
mov
and
ficompl
shl
es
pop
xor
cli
outsl
rorl
jecxz
inc
hlt
mov
loop
mov
xchg
in
sub
test
sub
xor
mov
fisubl
ss
or
aas
mov
sub
out
sub
adc
das
es
out
dec
jae
js
dec
xor
pop
pop
dec
sahf
push
mov
leave
leave
ljmp
push
stc
icebp
gs
cmp
ucomiss
adc
add
xor
adc
gs
xor
insl
jbe
fs
add
repz
dec
lods
and
jecxz
gs
or
lds
jecxz
xchg
roll
fistpll
jge
pop
sbb
jp
adc
jns
mov
cmpsb
divb
push
mov
adc
xchg
mov
stc
xorb
pop
in
sub
xlat
xor
jnp
dec
sub
jle
mov
leave
es
mov
sub
rorl
mov
inc
mov
scas
lods
and
lea
gs
outsl
in
imul
fadd
inc
aas
cwtl
movsb
inc
or
cmp
cld
mov
les
imul
adc
pop
in
cmp
out
push
xor
loop
jns
out
loop
bound
les
add
push
notl
jp
jmp
andl
mov
inc
adc
icebp
cmc
popa
popl
sbb
mov
or
dec
dec
ja
dec
mov
ss
cli
mov
ds
int3
cwtl
sub
int3
loopne
jecxz
fbstp
sahf
addr16
mov
sub
jns
adc
rolb
sub
cmp
inc
add
pushl
mov
test
push
mov
dec
das
cmpsl
xor
mov
push
fstpt
sbb
ja
enter
ret
sbb
cld
inc
int3
push
xchg
or
adc
jo
xor
insl
sbb
dec
cwtl
push
and
arpl
or
mov
sub
mov
cmp
adc
jle
mov
sub
xor
enter
test
mov
xor
jo
gs
decl
cwtl
mov
test
xor
xor
add
in
mov
mov
je
inc
ret
imul
xchg
fwait
mov
push
add
and
sub
inc
mov
fs
mov
xchg
movsb
rol
dec
mov
in
cmp
leave
sbb
cmp
xchg
stc
inc
push
stos
je
lock
push
xor
loopne
sub
loope
and
out
pusha
ret
lods
std
jecxz
push
pop
insl
jmp
lahf
cmp
push
stos
inc
repnz
mov
mov
divl
outsb
adc
movsl
cmp
out
dec
and
pop
sbb
or
dec
test
mov
repz
sub
jp
sub
and
fimull
pushf
dec
sbb
in
push
cmpsb
dec
pop
mov
or
popf
push
test
inc
aad
push
cmp
jne
adc
imul
outsl
cmp
mov
pop
movsl
stos
mov
xlat
pusha
arpl
lahf
inc
cmp
scas
xor
outsb
cmc
inc
push
mov
and
jge
adc
cltd
dec
out
sub
aam
jg
imul
and
push
add
fiadds
cs
xchg
jg
cmp
clc
add
jp
outsl
or
pop
andl
push
adc
roll
xchg
push
loope
jp,pt
dec
mov
cmpsb
scas
repnz
mov
outsl
dec
cmp
jae
pop
mov
mov
out
or
pop
and
mov
mov
adc
pop
or
rorw
cmpsb
push
or
mov
inc
jmp
adc
call
ret
out
dec
hlt
mov
loope
adcl
add
jmp
jnp
add
sbb
lret
leave
pusha
in
jnp
push
xchg
jp
push
and
lods
mov
addl
int
xor
fs
dec
nop
mov
invlpg
cmpsb
int
or
pushw
fstps
fadds
mov
mov
addb
cltd
aad
inc
sub
subl
mov
adc
xchg
pop
adc
add
pop
xchg
das
scas
testl
daa
rcrl
ret
loop
sbb
aas
and
inc
dec
sbb
movb
push
add
js
enter
or
lahf
sub
or
mov
adc
aas
test
mov
sahf
int
paddb
and
loopne
cmp
inc
addr16
mov
ret
inc
fcoml
push
cmp
aad
and
les
outsb
sub
out
xor
cli
gs
shll
fs
mov
mov
jle
shr
lea
and
pop
pusha
lock
clc
jno
add
jno
xor
sbb
pop
incb
jno
cmp
mov
add
adc
gs
mov
ret
inc
ljmp
sub
inc
mov
add
call
adc
mov
sub
xchg
push
jb
jne
mov
inc
lret
adc
mov
or
rcl
mov
flds
mov
mov
aas
repnz
adc
adc
mov
dec
xchg
out
es
mov
repnz
push
push
and
jmp
jp
and
jbe
sub
mov
insl
push
pop
aas
xor
sbb
inc
inc
cs
mov
test
jbe
sub
push
lcall
lds
mov
xor
lods
pop
sbb
cmp
and
adc
in
hlt
push
fwait
int
out
cli
jb
cld
cli
ja
mov
mov
jg
hlt
xchg
inc
mov
sahf
push
lret
aaa
mov
xchg
sbb
push
push
cwtl
mov
add
arpl
and
cmp
movsl
cmp
fidivs
insb
xchg
sub
repnz
push
push
add
push
in
pop
in
xchg
mov
call
aaa
jmp
adc
outsb
ret
or
call
ljmp
fs
jge
push
dec
xchg
stos
shrl
or
jns
scas
scas
cld
push
outsb
ret
sbb
jne
cwtl
sti
jno
jl
mov
push
fisubs
jp
jmp
cmpsl
popf
jns
cmp
mov
add
cmpsl
lea
sbb
inc
mov
lea
call
jmp
jge
push
cli
lods
push
push
pop
fwait
loop
and
cmc
jnp
mov
adc
mov
jp
arpl
fdivrp
pop
xor
sbb
daa
pop
jne
push
or
rorb
in
and
out
std
psubb
jg
popf
insl
movd
cmc
mov
fisttpll
mov
add
xchg
out
xor
test
pusha
add
insl
cli
xor
sti
shl
cmp
imul
add
rcrb
int3
testl
adc
cmp
add
cld
jne
ficoms
bound
sbb
std
dec
fildl
cmp
scas
inc
mov
sbb
decl
mov
mov
sbb
jns
jl
lret
mov
cmp
xchg
loop
mov
iret
push
push
push
push
dec
lods
pop
add
push
daa
xchg
sub
add
nop
mov
pop
insl
iret
test
dec
push
les
and
iret
xlat
dec
outsb
repnz
stos
cmpsl
scas
out
jo
rorb
rol
cwtl
jmp
fucom
and
fs
fwait
xchg
sti
jp
sub
sbb
ja
mov
add
dec
insb
xchg
xor
aam
xchg
mov
shrl
xchg
mov
rcll
jg
vcvtsd2si
arpl
pop
insl
inc
cmpsl
xchg
dec
enter
and
je
xor
dec
sbb
lea
pop
push
roll
clc
jg
ss
bound
and
test
push
mov
das
popa
cmp
cmp
fistps
arpl
test
ljmp
xor
sub
push
les
lea
ljmp
aad
fisttpll
test
test
or
test
cmpsb
and
pop
xchg
xchg
or
push
shrl
dec
outsb
and
rcrl
movsl
mov
push
sub
andb
pop
inc
jmp
mov
repnz
imul
xchg
dec
add
add
push
mov
aaa
sub
cmc
loope
ss
pushf
mov
sbb
movsl
jnp
and
cli
xchg
std
aaa
mov
test
test
pusha
and
add
imul
add
sub
pop
test
jbe
das
pop
fnstsw
sub
sbb
sub
imul
mov
cltd
jge
adc
mov
aaa
add
and
pop
repz
sar
int
jge
rorb
mov
iret
sbb
stc
pop
and
dec
call
bound
insl
scas
add
add
js
jecxz
adc
cmp
rolb
xchg
negl
notl
es
lea
xor
or
shrb
add
jg
std
mov
mov
scas
dec
pop
fsubrl
aad
imul
mov
nop
pusha
pushl
bound
vmovntps
mov
mul
int3
xor
xchg
sbbl
xor
pop
out
in
lods
movsb
test
or
cld
push
shr
stc
ljmp
scas
mov
fdivrs
gs
popa
ja
mov
inc
jbe
fildll
pop
ret
loop
fs
mov
cmp
test
push
shlb
xor
xchg
dec
and
aam
push
mulb
shll
cmp
push
imulb
jno
sub
bound
rolb
lds
push
xchg
or
cmp
aam
sub
mov
jbe
pop
jp
mov
insl
mov
or
push
rcll
out
rcrb
and
push
loope
bswap
andl
js
pop
jecxz
jae
in
andb
movsl
fisttpl
inc
push
cmp
dec
hlt
mov
jae
mov
data16
lea
xchg
mov
mov
in
pushf
enter
lods
mov
pop
jg
cmp
mov
arpl
subb
jne
inc
inc
pop
in
xchg
dec
sti
shlb
imul
jp
int
jle
adc
es
xchg
push
cmpsl
test
icebp
out
pop
popa
sbb
jge
inc
cltd
mov
jbe
push
test
stos
jns
test
fwait
scas
pop
loope
dec
outsl
inc
sub
cmpb
aad
scas
leave
clc
dec
jmp
gs
dec
and
sub
lods
and
sar
ds
lods
dec
mov
xchg
and
push
out
imul
out
sbb
je
lock
or
cmp
xchg
xor
or
mov
aas
sahf
test
fcmove
mov
cmp
xchg
adcl
ficoms
push
xchg
inc
or
jmp
inc
lret
daa
push
fisttpll
es
iret
xchg
sti
sbb
lea
out
xor
xchg
insb
and
sbb
stos
outsb
lretw
pop
jmp
dec
std
ja
or
test
fnstenv
sar
mov
hlt
rcll
mov
fimull
jecxz
cmp
stos
leave
xchg
adc
cld
mov
aas
mov
dec
loopne
call
fcmovu
xor
cmpsb
in
repz
adc
das
out
push
jo
dec
inc
pop
xchg
mov
adc
out
clc
add
js
filds
out
fs
jge
adc
lea
inc
insb
mull
cmpsb
and
or
add
or
dec
dec
xor
aad
pop
lcall
jnp
movsb
shll
and
adc
jb
movsb
push
cmp
cmp
mov
mov
mov
not
stos
push
pop
cltd
outsl
xchg
shll
ja
jle
xchg
js
mov
stos
inc
pop
int
fucomi
or
sbb
sub
aam
incl
mov
dec
and
pop
setnp
add
rolb
sub
cmp
lock
xchg
fs
inc
imul
push
inc
js
pusha
iret
sbb
xor
popf
icebp
shrl
mov
pop
loope
je
fstl
test
lods
mov
testl
inc
xor
push
shl
sbb
les
pushf
in
and
stos
mov
push
pushf
stos
or
sahf
jno
cltd
test
rolb
loopne
lods
and
mov
enter
inc
push
test
pop
lds
push
push
movsl
push
mov
push
clc
jbe
cs
inc
dec
jl
push
aas
xchg
jg
jb
fs
adc
scas
mov
lods
inc
sub
cmp
rcl
cmpsb
enter
adc
int
mov
xchg
std
test
mov
mov
or
cmc
int
mov
insb
imul
aam
hlt
insl
xchg
cmp
stos
fcoml
in
jnp
pop
and
cmp
in
mov
mov
jp
push
or
dec
xchg
jmp
xor
or
lock
xchg
mov
mov
add
pop
cmc
ljmp
lcall
repnz
cmpsb
sbb
fs
iret
add
push
inc
in
leave
mov
inc
frstor
cmp
jmp
xor
sbb
aas
insl
xlat
imul
in
testl
jecxz
push
jp
not
adc
mov
xor
pop
jge
add
clc
imul
push
ljmp
pop
cmp
insb
lret
mov
stos
pop
rolb
jmp
xor
pop
lcall
mov
lcall
notb
push
pop
inc
dec
xchg
mov
add
dec
or
or
push
xor
loop
dec
cmp
arpl
add
cmp
or
and
push
out
bound
jae
push
or
push
test
push
or
pop
mov
inc
push
fldenv
outsb
jecxz
shrl
addr16
xchg
and
cmp
sti
loopne
stos
jge
push
mov
and
or
nop
xchg
ljmp
aad
sbb
or
mov
sbb
cmp
and
pop
pop
xor
gs
cmp
clc
adc
inc
jg
push
in
rcl
arpl
push
mull
mov
push
inc
lret
mov
dec
or
xchg
jp
or
inc
lods
add
push
push
sbb
dec
test
cmp
iret
popl
and
and
enter
mov
mov
call
imul
adc
add
bound
out
mov
ret
in
mov
xchg
mov
adc
pop
out
imul
jg
fldenv
aaa
or
addr16
sbb
cmp
or
mov
jno
inc
or
into
pop
test
dec
xor
lods
test
xchg
insb
dec
pop
or
stc
stos
andb
gs
mov
mov
sub
mov
add
and
jl
ljmp
mov
fildl
out
loope
pop
mov
inc
cmc
xchg
es
enter
push
in
adcb
mov
shr
mov
rcll
dec
add
add
push
mov
or
fsts
setg
or
xchg
fldt
cwtl
add
mov
cmp
adc
push
push
std
add
mov
outsb
lea
adc
jae
rcrl
dec
leave
idivl
mov
mov
sbb
and
inc
push
repz
fs
ja
jle
ret
and
mov
inc
nop
mov
fisttpll
cmc
mov
test
fwait
lock
cmc
xor
push
lds
mov
xchg
nop
and
pop
sarl
popa
xchg
push
xchg
insb
inc
aaa
xchg
sub
lods
xchg
jbe
test
pop
dec
leave
ds
mov
inc
fwait
push
pop
adc
adcl
clc
cmp
xor
jg
fs
mov
and
or
and
int3
and
inc
jle
inc
sbb
fisttpl
cmp
jno
jle
adc
data16
adc
cmp
jne
bound
ljmp
xlat
in
pop
xchg
rolb
scas
hlt
or
mov
adc
clc
or
jmp
sub
repnz
push
lea
shrb
jg
mov
xchg
sbb
test
dec
mov
jo
mov
adc
rorb
sub
sub
loope
ret
cli
inc
add
pop
fisubs
push
sbb
mov
test
or
fwait
xor
mov
mov
sub
ja
xchg
or
repnz
add
mov
popa
and
loope
mov
icebp
shl
cmc
popf
ret
jno
repnz
mov
icebp
jbe
sub
repz
data16
sar
test
mov
fstpl
fcmovnbe
je
outsb
mov
out
inc
ds
xchg
cmpl
adc
mov
rclb
pop
or
shrb
pop
int3
pop
mov
cmpsb
inc
inc
mov
mov
push
or
fld
add
cs
stos
rep
test
dec
shll
out
leave
xor
imul
cs
pop
les
push
lods
mov
add
sbb
add
xchg
out
and
jne
mov
out
pop
add
sub
bound
inc
mov
sbb
push
icebp
sbb
inc
dec
jno
inc
or
mov
pop
or
jle
inc
add
in
or
jae
scas
stos
adc
mov
insl
aad
jmp
xlat
xchg
add
int
fucomp
cmp
adc
enter
std
push
jbe
mulb
mov
fwait
xchg
cmp
dec
push
xchg
and
daa
in
dec
stos
lock
hlt
pop
lock
jg
inc
lock
jmp
cmc
movsl
in
mov
ja
iret
mov
mov
adc
mov
mov
stos
out
xor
mov
inc
nop
bound
fcomip
dec
pop
push
pushf
into
adcb
cmp
jle
dec
mov
mov
xchg
je
mov
data16
xchg
icebp
cmp
cmp
int
cld
das
inc
inc
fmull
xchg
es
jne
out
jmp
mov
out
cli
inc
gs
fstps
dec
stc
repz
dec
xor
or
push
mov
dec
cmp
cmc
int
jp
jmp
mov
shrl
mov
outsl
imul
pusha
test
cmpsl
mov
lods
jle
xchg
xchg
mov
sbb
cmpsl
aam
xchg
push
inc
nop
int
mov
aam
mov
in
xchg
lahf
into
aad
pusha
adc
leave
stos
add
adc
je
es
imul
xlat
jae
loopne
rorb
test
mov
js
fsubrs
sub
inc
pop
ret
or
lcall
outsb
dec
sub
fiadds
ficompl
mov
out
xchg
lcall
adcl
sbb
pop
add
inc
sbb
inc
ror
mov
fmull
mov
out
aaa
and
outsb
fcomps
pop
adc
aam
dec
popa
sub
jo
and
and
out
into
inc
nop
fstl
fcomps
xchg
lock
aas
inc
pop
std
clc
sbb
rcrb
jno
out
sahf
push
cmp
test
or
loopne
or
pop
ss
add
lock
cmp
repz
insl
iret
cmp
dec
idivb
mov
pusha
out
cmp
push
stos
je
pop
scas
aas
fsubrl
xor
lods
pop
ds
push
pop
add
adc
sahf
mov
sub
xor
inc
push
popa
dec
sub
push
xchg
fstps
aad
nop
mov
adc
lods
or
imulb
or
fwait
and
pop
lret
mov
pop
pop
xchg
fcmovnbe
pop
adc
sub
pop
adc
std
and
xor
dec
in
mov
mov
xor
sub
dec
lea
xchg
test
push
add
pop
push
testb
fstpl
rol
add
pop
aam
out
mov
ds
jl
fiadds
lods
movsb
ljmp
mov
cmc
lret
pop
sub
sbb
mov
mov
inc
push
jae
cmp
mov
je
mov
dec
sbb
or
lcall
lahf
in
repz
jo
movsl
xchg
xchg
push
icebp
in
aam
stos
ret
push
pop
ss
or
xor
mov
cmp
jnp
in
dec
rorb
aaa
test
hlt
mov
xchg
movsl
ret
cmpsl
into
scas
xor
inc
pop
mov
dec
enter
adc
inc
cld
adc
in
cmp
std
leave
sti
icebp
int
pushf
inc
faddl
pop
pop
std
inc
pushl
sbb
add
mov
cs
scas
xor
sub
into
adc
test
loope
cmp
pushf
sbb
mov
bound
sahf
push
mov
imul
iret
dec
and
or
sbb
adc
jbe
in
pop
call
outsb
xchg
jne
in
inc
aas
sbb
xor
cli
shll
xor
ds
mov
dec
fcompl
add
mov
mov
jl
sbb
sub
daa
cmp
cmp
aas
mov
test
mov
xchg
nop
and
test
push
inc
popf
mov
add
sub
ds
sahf
sbb
mov
scas
mov
xchg
pop
sbb
dec
push
stos
push
jo
sub
inc
push
sub
out
pop
dec
in
or
stos
inc
in
xchg
mov
cmpsb
mov
cmpsl
int
mov
jl
cwtl
jb
fmuls
xor
pop
enter
dec
shlb
mov
imul
sub
pop
or
outsb
je
popf
imul
scas
xchg
imul
cmp
or
mov
fisttpll
adc
sub
push
sbb
scas
jno
lods
xchg
add
popf
and
fildll
dec
es
inc
loop
cltd
addr16
std
ja
iret
cmp
sbb
pushf
pop
mov
dec
sbb
push
pushf
test
clc
xchg
mov
outsl
dec
dec
cld
cld
mov
mov
jns
jno
sahf
sub
cmp
adc
stos
push
dec
xchg
and
cli
imul
test
leave
int3
sub
inc
push
ret
popf
shlb
imul
out
xor
xlat
lret
sbb
data16
sahf
pop
cmp
icebp
jmp
xchg
lods
iret
aaa
or
out
dec
into
cmc
jo
xchg
jge
fcomp
je
pop
outsl
pop
lods
loop
inc
xchg
xorl
rcl
fsubrs
push
imul
mov
mov
sbb
mov
ficomps
sub
in
xlat
lods
imul
imul
pop
das
jmp
jbe
loope
xchg
jbe
xor
cmp
ljmp
push
shll
fstps
popa
mul
pop
out
push
xchg
leave
scas
dec
movsb
cmp
xlat
aaa
sub
xor
pop
sbb
aam
mov
pusha
jl
aas
mov
roll
xlat
sub
inc
rcrl
pop
stos
inc
shrl
jp
lahf
inc
inc
pand
testb
ret
add
add
shr
add
inc
out
loop
pushf
lcall
push
cmp
mov
sub
fcoms
idivb
pop
add
jne
aaa
in
xchg
xor
repz
adc
outsb
lret
addr16
shl
je
add
jp
test
sbb
inc
in
push
pop
inc
cmp
mov
or
test
imul
ljmp
and
or
shll
insb
psllw
icebp
mov
test
push
out
aas
mov
or
push
clc
fyl2x
jmp
dec
push
aad
or
sbb
fisubrs
push
mov
dec
nop
out
hlt
movsb
add
cwtl
mov
sub
pop
pop
mov
filds
out
pop
jb
bound
cwtl
jg
in
xchg
mov
out
jle
scas
call
mov
cltd
daa
dec
jmp
push
fldl
in
and
loope
pop
adc
cwtl
sub
jmp
dec
das
inc
out
mov
test
xor
or
mov
sbb
imull
and
loop
push
inc
es
mov
ds
sbb
pop
aam
aaa
es
test
movsl
aam
or
xor
mov
outsl
push
ja
scas
mov
push
adc
gs
aaa
das
push
xchg
dec
jge
cmp
mov
mov
xor
ret
xchg
and
shlb
cs
jo
or
jbe
pop
or
js
inc
xor
lret
int
inc
mov
adc
fcomps
enter
ja
dec
mov
sbb
fwait
or
popa
in
insl
cmp
sbb
dec
mov
inc
cmp
mov
ja
std
push
cwtl
lods
ffreep
push
in
push
sahf
cs
test
sub
in
scas
ds
jecxz
add
xor
dec
clc
pusha
lret
daa
push
test
or
mov
mov
arpl
mov
xor
stos
dec
sbb
xchg
test
test
xlat
leave
push
xchg
jno
cmp
test
pop
jns
lods
std
mov
arpl
in
inc
push
jo
cmp
dec
and
imul
pop
or
inc
enter
push
push
xor
mov
daa
jp
pop
jne
stos
out
push
mov
out
mov
or
fmulp
aad
adc
test
xor
fnstenv
jp
mov
or
es
leave
bound
jnp
xor
test
cld
pop
test
nop
dec
xchg
lsl
jmp
push
sbb
xorb
fidivrl
xor
push
enter
cmp
or
xor
inc
lock
movsl
inc
cwtl
jl
inc
mov
or
in
cmpsl
dec
lcall
xchg
add
fisttpll
pop
sbb
sub
add
rcrl
jle
mov
rolb
dec
mov
or
adc
pop
xor
test
jp
add
ds
lods
inc
dec
pop
xor
sarl
jge
jp
or
pop
adc
addb
push
popa
out
frstor
or
pop
mov
mov
pop
addr16
insb
adc
pop
imul
mov
mov
push
icebp
push
add
aad
ret
pop
imul
repnz
xchg
xchg
lret
testl
in
lea
shrb
scas
xchg
addr16
shr
lret
adc
out
lea
mov
push
orl
adc
test
inc
mov
lcall
out
jle
inc
je
aaa
push
pop
xchg
cmp
mov
sbb
cli
or
mov
fists
aad
arpl
sbb
push
into
loop
inc
cltd
xlat
cmp
icebp
gs
jb
cmp
xor
movsl
jbe
adc
mov
xlat
sub
test
fstps
dec
repz
push
repnz
test
push
pop
mov
mov
into
adc
sbb
repnz
fnstsw
sbbl
push
xchg
test
decl
mov
mov
sahf
dec
jnp
push
clc
cmp
call
les
out
outsl
mov
adc
jbe
lahf
adc
xchg
or
sub
aaa
sbb
stos
nop
push
xchg
or
ds
jns
xchg
sets
scas
shrb
fsubr
loop
lock
dec
add
mov
subb
fidivrl
stc
sub
adc
mov
push
lahf
cwtl
mov
jne
or
ja
mov
pop
inc
cwtl
rcrb
cwtl
push
push
loop
mov
int
cmp
ss
je
cmpsl
lods
cwtl
daa
mov
sbb
dec
inc
jg
mov
cli
aad
cmp
dec
mov
popa
addb
xchg
jo
scas
fmul
cltd
imul
scas
cmpsl
pop
aaa
shlb
inc
dec
imul
repz
jmpw
add
inc
or
out
mov
rcl
adc
fbstp
test
rol
mov
stos
aad
pop
xchg
adc
rcrl
add
hlt
and
xchg
movsb
mov
sahf
xchg
cmp
lret
pop
ret
in
push
pop
lcall
shl
dec
xchg
rcrb
mov
ljmp
fdivrs
jp
shr
and
mov
cmp
cmpsb
inc
enter
and
les
cmp
int3
out
push
cmpsl
repnz
popa
imulb
cli
sbb
nop
in
insb
mov
daa
js
ret
sbb
cmp
outsb
jae
mov
dec
xchg
lods
cwtl
cltd
mov
inc
out
inc
mov
add
enter
jnp
nopl
dec
movsl
jg
imul
popf
leave
loope
inc
sbb
push
in
dec
pop
mov
pop
out
push
lahf
push
scas
mov
in
mov
ds
sbb
in
inc
xor
decl
xchg
call
push
mov
out
push
test
ret
xchg
stos
push
ret
std
mov
ficoml
add
jl
inc
push
cmp
incb
imul
cwtl
pushf
flds
push
das
orl
sti
test
inc
mov
out
pop
xchg
es
adc
pushf
pop
push
and
addr16
aad
jbe
mov
push
gs
xchg
pop
jmp
cwtl
ret
push
dec
shr
and
pushl
sbb
push
shrb
jl
pop
push
imul
daa
adc
mov
and
xlat
jo
cmp
sbb
pusha
fadds
and
les
pusha
sbb
icebp
test
push
movsl
xor
sub
andb
movsl
mov
cli
arpl
repz
fnstenv
ret
mov
inc
rcl
test
ret
addl
cmp
out
fisttpll
imul
adc
xchg
aaa
stos
icebp
iret
icebp
cmp
cmp
cmp
lock
pop
xchg
mov
loopne
fldenv
faddl
and
je
and
xchg
dec
stos
pop
cmp
xchg
into
sub
es
cld
pop
imul
pusha
sbb
jp
jecxz
bound
pushf
push
xchg
jmp
fisttps
cmpsb
and
pushf
push
test
xchg
mov
mov
cmp
mov
mov
mov
add
adc
int3
out
jl
ljmp
aas
push
in
loope
data16
out
and
andb
into
add
or
lcall
or
ds
lods
ljmp
addl
add
mov
scas
test
leave
lock
xlat
jbe
in
int
leave
cmpsb
popa
sahf
pop
jbe
lahf
lock
cmpsl
sub
and
sub
sbb
cmc
add
push
mov
fists
out
mov
mov
sbb
sbb
or
pop
scas
movsb
mov
xchg
ljmp
inc
and
xor
sbb
dec
mov
hlt
loop
jns
mov
outsl
cltd
pop
xchg
pop
sub
mov
test
sarl
push
pop
roll
sub
test
ljmp
lcall
xchg
mov
push
xchg
enter
pop
pop
xor
pop
or
or
orl
inc
mov
std
scas
xchg
lods
lcall
sbb
push
mov
dec
sti
xchg
jle
pop
mov
aad
js
shr
pushf
adc
in
jecxz
lods
push
add
rep
add
gs
sbb
and
adc
scas
mov
dec
push
addr16
mov
mov
leave
pop
lock
imulb
or
divb
push
clc
jns
pop
sub
xchg
and
ljmp
test
sbb
cltd
adc
fildl
cs
loope
sbb
xchg
pop
cmpb
test
pop
cli
loope
popa
loop
push
fdivp
inc
imul
cs
push
mov
in
fildl
test
cmp
imull
aas
jmp
pop
repnz
mov
pop
int
mov
mov
xor
lcall
push
stos
jne
lods
push
pusha
call
xchg
jecxz
adc
cli
mov
lods
sbb
push
lods
jge
dec
jge
insb
aad
xchg
dec
andb
cmp
xor
cwtl
sar
sub
arpl
pop
outsb
mov
push
sbb
xlat
leave
add
dec
rclb
test
lret
mov
movsl
out
arpl
pop
sarb
mov
clc
scas
cli
nop
stos
pop
sub
cmpsl
push
mov
orb
scas
aam
xchg
push
repz
aam
scas
pop
out
popf
sub
sar
lds
or
mov
stos
iret
loope
dec
int
jp
outsb
out
mov
mov
scas
cmp
mov
les
dec
enter
push
dec
stc
push
ffree
and
icebp
jle
les
lcall
stos
dec
jp
jp
rcr
mov
pcmpeqb
lock
and
jecxz
mov
and
in
mov
add
pop
jmp
fnstcw
mov
dec
adc
cmp
sbb
cltd
push
xor
jecxz
divb
and
sarl
push
mov
mov
pusha
leave
sbb
je
mov
test
xor
mov
cmp
jno
add
push
rol
cmp
aam
cmp
xchg
iret
lea
mov
pop
sbb
pop
movsb
iret
pop
int3
sbb
orl
inc
lahf
out
cmp
cmp
aam
push
fcoml
xchg
xchg
xchg
inc
xchg
imul
pop
testl
std
xor
hlt
sbb
insb
icebp
aaa
mov
js
test
out
movsb
sub
and
cmpsb
stos
push
cmp
mov
cmpsb
lock
cld
sahf
js
fiadds
es
loop
cmpsb
or
jg
test
mov
mov
and
fsubrs
in
push
sbb
repnz
mov
lods
sti
xchg
pusha
xor
or
addb
movsl
movsb
push
andl
push
insl
sbbl
add
rorl
push
add
lds
aaa
cli
xchg
pop
jle
sub
push
lret
xchg
mov
push
fmull
xor
pop
and
sub
ficoms
ficomps
inc
test
out
cltd
lcall
jbe
test
scas
pop
es
dec
cmp
call
into
subb
sarl
shl
inc
pop
add
hlt
int
shrb
sub
jp
add
aas
add
mov
sub
jge
and
mov
cmpsb
imul
aam
sbb
aaa
into
lea
das
les
aaa
jb
mov
jle
filds
sar
stc
mov
mov
mov
fxtract
sub
in
xchg
popa
lret
push
out
popf
jp
arpl
pop
icebp
jne
pop
mov
shlb
arpl
add
test
pop
mov
or
arpl
cmpsl
inc
lock
inc
fdivl
mov
inc
inc
test
iret
shr
xor
into
cmc
shll
int3
and
stc
pop
cs
lea
lcall
push
or
inc
rolb
and
clc
xchg
cmp
into
movsb
cs
clc
mov
sub
pusha
jnp
mov
xor
fcomps
fidivs
lret
cwtl
add
pushf
ds
movsl
jle
test
sbb
jl,pn
scas
lahf
mov
jo
mov
push
mov
mov
aam
insb
fdivl
dec
xchg
out
push
addl
cli
daa
roll
aas
add
into
popf
daa
sbb
mov
dec
sub
pop
jp
jle
jns
mov
xor
imul
popf
xor
mov
movsl
loopne
inc
adc
lret
jae
jb
fcomi
sbb
orl
out
lods
or
lods
loopne
and
mov
popf
jb
mov
xorl
and
xor
pusha
daa
jl
push
sbb
out
and
and
jns
xor
mov
daa
mov
out
pop
ret
test
sub
in
jno
subw
aad
jb
or
sbb
hlt
out
and
rclb
xor
or
jb
or
xor
shrl
mov
shlb
adc
jbe
jge
sahf
push
push
js
lods
loop
mov
mov
outsl
mov
test
push
sahf
inc
ror
inc
xchg
punpcklbw
mov
popa
or
aaa
dec
leave
push
push
add
mov
aaa
arpl
dec
ret
insl
in
psubd
pop
adc
shrb
dec
dec
push
and
mov
imul
xchg
insl
or
xchg
jle
cmp
xor
adcl
push
push
jnp
jbe
dec
stos
imul
pusha
mov
sbb
add
sub
cmp
inc
jmp
aad
stos
xchg
mov
dec
test
imul
aam
mov
loopne
js
clc
mov
adc
jno
stos
pop
xor
lea
inc
out
xchg
arpl
cmp
cmp
xor
push
mov
xor
sbb
pop
push
int
cmc
push
cli
cs
int3
fimull
jl
icebp
mov
cmp
das
aaa
movsl
repz
out
xchg
int3
sub
in
cltd
outsl
cmp
mov
cmp
int
in
enter
or
jno
enter
mov
call
enter
int
cmpsb
push
cld
mov
sub
inc
cmp
movsb
sub
repnz
push
fsub
xchg
push
cmp
mov
xor
js
and
pop
or
jecxz
lds
sub
lcall
adc
clc
mov
inc
addr16
mov
lea
push
lods
xchg
pop
push
xor
adc
and
test
and
pop
dec
or
movsl
dec
adc
es
jmp
dec
jbe
aam
data16
mov
push
test
outsb
sbb
mov
jl
mov
sbb
mov
ja
sbb
fists
ret
daa
mov
int3
mov
dec
es
sub
dec
cmp
sbbl
mov
inc
or
cmp
sbb
out
adc
mov
je
pop
insl
outsb
sbb
rcrl
jecxz
push
pop
stc
sub
cmpsl
add
pop
jns
mov
jmp
popa
repnz
into
adc
xchg
dec
mov
xchg
fs
or
int3
xor
cmc
push
lods
xchg
in
ds
lods
sarl
shrb
add
push
ret
push
data16
outsl
dec
add
or
sbb
and
in
in
mov
add
dec
mov
rolb
cwtl
inc
cmc
inc
lret
ljmp
lahf
cmp
popf
xor
adc
aaa
push
push
out
pop
shrb
and
cli
ret
sbb
pop
sub
inc
shl
testl
mov
dec
inc
mov
mov
mov
std
mov
push
mov
push
add
lods
xor
aad
ret
or
inc
jle
mov
mov
lret
loope
fnsave
xchg
xchg
inc
loop
push
and
movsb
push
sarl
sti
scas
jo
mov
pushf
inc
outsb
loope
push
lds
sbb
int3
rcrb
jmp
and
or
loopne
and
push
jne
int
lcall
inc
sbb
lahf
movsl
mov
sub
jnp
mov
cld
dec
popf
pop
daa
and
push
sbb
add
rcll
arpl
jg
stos
rorl
pusha
fst
rcll
lea
and
sbb
call
sbb
ja
shrl
shll
cs
shl
loope
repnz
mov
das
ljmp
mov
xchg
jmp
sub
loop
fildl
test
mov
mov
adc
push
stos
and
ret
lods
sbb
xor
xor
mov
cli
icebp
xchg
popa
cwtl
gs
pop
notl
sbb
push
push
les
cmp
cwtl
and
jecxz
imul
push
shr
imul
scas
sbb
mov
lahf
jg
inc
cmp
xor
mov
jae,pn
in
fidivrs
mov
sub
mov
sbb
shll
mov
xor
inc
addr16
adc
fmul
cli
rorb
out
mov
fsubl
add
pop
stos
mov
jae
pushf
add
add
cltd
test
in
inc
popa
stos
adc
jno
ljmp
or
jmp
pop
inc
loope
ss
scas
jg
aam
jae
inc
cmp
ret
nop
out
jb
lea
cmp
jmp
mul
sbb
icebp
xor
ds
lods
popl
loopne
cmp
lcall
scas
pusha
repz
xor
pusha
xchg
sub
inc
in
mov
push
xor
sbb
mov
xor
sbb
cs
mov
pop
cmpsb
pop
aaa
test
inc
dec
pop
enter
jo
sub
mov
fidivrl
shlb
xchg
inc
adc
loop
movsl
lret
mov
mov
add
mov
sbb
pop
out
or
inc
jmp
xchg
lods
mov
or
push
xor
and
sar
mov
cmpsb
aas
jl
adc
cmp
push
cmp
mov
out
in
mov
xor
sbb
mov
dec
hlt
cwtl
pop
data16
loopne
leave
das
movsb
mov
jge
insb
mov
pop
dec
push
out
jl
sub
cmp
sarb
lret
outsb
aam
cmp
inc
lret
movsl
std
or
add
sbb
daa
mov
cli
jb
cld
out
clc
sbb
ss
stc
push
mov
sub
daa
pop
int3
gs
pop
and
insb
or
out
jno
mov
movzbl
pop
popf
jb
cs
fisubrl
bound
aad
leave
push
or
aaa
xchg
jg
xchg
lcall
sub
cmp
js
fists
dec
adc
mov
jbe
xchg
rcr
sub
push
xor
xchg
xorb
mov
clc
cmp
jns
enter
mov
ds
fwait
repnz
lret
jmp
scas
adc
daa
fs
fs
gs
daa
sbb
push
popl
imul
mov
call
nop
test
pop
jl
fcmovnu
imul
pop
dec
aam
push
ljmp
fwait
cmp
int
push
enter
sti
lods
push
jnp
cwtl
push
test
jle
jecxz
mov
jmp
cmp
mov
lahf
insb
mov
mov
call
xchg
jae
sahf
stos
sbb
sub
insb
in
rorb
lods
push
sub
in
stc
shl
xchg
cmp
cmp
sub
addr16
mov
nop
mov
inc
push
subl
adc
aas
cwtl
out
loopne
mov
popf
mov
in
repz
cwtl
in
pushl
aaa
rorb
pop
inc
loope
push
out
cmp
xchg
andl
pop
or
xor
dec
loopne
aam
ja
or
mov
mov
loopne
fbld
xchg
dec
imul
repz
out
insb
mov
jmp
or
sbb
sub
sub
out
add
sbb
or
push
mov
cvtps2pi
sarl
xor
loop
cs
xorl
fcomp
fcomps
jbe
sub
outsl
out
xchg
mov
adc
das
fstpl
sbb
mov
mov
fmuls
shr
sbb
sub
jge
sbb
aas
push
mov
out
mov
test
mov
adc
out
mov
ret
xor
movb
and
xchg
jge
inc
inc
mov
xorl
pusha
sub
lahf
shlb
xchg
inc
cmp
cmp
aam
andl
mov
jns
jecxz
xlat
arpl
fwait
mov
repz
ret
cmp
fists
mov
fcmovbe
adc
sub
pop
jmp
push
leave
test
pop
loope
sbb
xchg
scas
loope
ss
repnz
ja
push
lahf
mov
test
repz
jp
dec
jle
test
lods
push
xor
aas
pop
or
rolb
push
insl
repz
popf
mov
pop
mov
mov
lock
cld
dec
pop
mov
test
push
ficomps
push
test
xor
pop
ss
cmp
mov
xor
dec
cmp
lock
in
inc
stos
rolb
jns
repz
dec
ljmp
sbb
pop
mov
push
dec
jb
iret
dec
sub
test
xor
sbb
sub
push
sub
cmpsl
inc
fldt
push
mov
and
imul
xor
pop
ss
int3
cmpsb
pop
inc
rol
rcll
mov
hlt
push
ja
aam
clc
mov
pop
icebp
mov
sbb
jmp
jmp
adc
data16
outsb
popf
addr16
sbb
insl
xchg
sbb
js
inc
mov
lock
subb
out
rclb
jo
flds
xchg
jle
int3
ljmp
data16
lods
lods
and
sbb
insl
and
in
jns
das
add
and
xchg
inc
adc
adc
inc
jnp
cwtl
icebp
in
cmp
cmp
add
insl
test
xchg
aaa
mov
or
push
aad
sbb
pusha
mov
jecxz
mov
mov
std
fs
sbb
mov
shl
call
lcall
cwtl
lock
stos
lret
mov
test
pop
cmp
out
or
jbe
push
lods
push
cmpsl
pop
sbb
mov
lcall
push
cld
adc
xorps
in
sub
add
and
fcoml
je
int
in
xchg
lret
inc
movswl
and
loopne
push
jns
insl
mov
icebp
adc
dec
pop
stc
lods
or
mov
mov
out
dec
xor
inc
push
sahf
loope
xchg
jnp
ret
inc
mov
stos
or
fcompl
pop
je
push
test
loopne
xchg
inc
es
jno
insb
add
pop
sbb
in
sbb
stc
daa
jmp
xchg
lret
lds
mov
std
adc
imul
mov
lods
mov
push
sub
scas
fs
scas
out
push
arpl
xchg
in
fwait
xchg
fwait
and
and
in
xchg
shll
jbe
sub
mov
mov
repz
mov
jge
cmpsl
in
cmp
popa
fwait
xor
stos
ret
loopne
add
je
popf
out
pushf
mov
ret
pop
es
push
mov
adc
stos
loopne
cs
test
mov
mov
dec
mov
mov
jmp
sub
aas
jl
fwait
mov
jns
mov
and
mov
add
dec
inc
inc
or
xchg
xchg
pop
loopne
mov
cmp
or
cli
cmc
pop
movsb
frstor
insl
inc
adcl
add
fdivrl
cmp
loopne
out
pop
aaa
insb
push
or
pop
mov
cmc
jns
outsl
cltd
stos
fmuls
mov
pop
cmp
js
shrb
arpl
inc
jg
jmp
gs
inc
jns
inc
sub
jecxz
jmp
mov
push
popa
mov
inc
or
ja
jnp
mov
in
adc
out
ljmp
add
fstps
xchg
into
and
shlb
sbb
inc
add
xchg
aad
xor
and
sbb
pushl
mov
leave
dec
cmpsb
adc
mov
adc
dec
xchg
into
push
xor
pop
mov
xor
imul
cmp
push
jmp
sbb
ja
cltd
xlat
cmpsb
mov
jb
or
addr16
push
mov
pop
adc
outsb
xchg
lods
movsl
roll
mov
fucomip
pop
adc
fmull
popa
mov
and
dec
sbb
sbb
fld
push
inc
shlb
add
leave
lahf
cli
adc
outsb
cmp
and
loope
lods
dec
xor
sub
pop
dec
lds
inc
dec
push
xchg
or
out
addb
dec
dec
sbb
cwtl
adc
sbb
fstpl
xor
repz
popw
adc
leave
std
mov
call
fsubl
xchg
pop
jle
adc
mov
mov
js
in
dec
ja
fwait
out
jge
icebp
shrl
dec
or
and
pop
sbb
jno
loop
inc
loopne
ficoms
nop
popf
mov
push
dec
pop
stos
idivb
sbb
or
push
jle
adc
sbb
pop
jns
fisttpl
sbb
mov
inc
and
mov
sahf
inc
subl
addb
mov
hlt
mov
sub
mov
adc
mov
fsub
loopne
inc
test
es
pop
xor
out
add
push
push
int3
outsb
fstl
jns
mov
jb
fnstenv
addr16
out
sub
inc
mov
cmpsl
je
popf
std
daa
mov
js
cmp
jmp
iret
int
stos
loop
fwait
xchg
push
fldt
mov
imul
or
scas
xchg
or
loopne
xchg
push
add
je
call
jae
outsl
mov
inc
mov
xor
fimull
mov
add
mov
int
les
fcmovbe
bound
mov
push
mov
dec
mov
ret
pop
int3
lock
add
jmp
inc
out
xchg
mov
xor
add
xlat
or
sbb
ret
xor
inc
arpl
mov
jo
loopne
popa
jnp
and
fildll
adc
jmp
xlat
sbb
int
in
xor
mov
sbb
inc
popa
dec
pop
jecxz
out
es
mov
push
out
mov
inc
xor
fs
pop
and
push
data16
sbb
adc
push
roll
jns
test
and
jle
je
xchg
fldenv
outsl
and
ljmp
pop
pushl
adc
add
pushf
repz
int
pop
sbb
or
jp
cmc
es
cwtl
sbb
sbb
adc
loope
xor
cmp
cwtl
jge
jmp
outsb
mov
xchg
push
dec
icebp
cmc
insl
sbb
cmp
mov
push
or
push
hlt
mov
and
mov
sbb
dec
lahf
xor
fidivrl
in
clc
inc
dec
repnz
bound
pop
dec
adc
push
cmp
push
jp
fld
stc
push
or
in
sub
mov
ret
cmp
setl
hlt
sahf
daa
fwait
cmp
push
xchg
imul
hlt
dec
mov
mov
cltd
mov
or
xchg
mov
or
pop
sbb
popf
fimull
or
jb
push
fwait
fs
add
inc
mov
iret
inc
iret
cli
test
pop
shlb
mov
shlb
mov
dec
addr16
rolb
repz
test
ljmp
push
lods
adc
es
push
adc
sub
dec
jbe
mov
nop
jg
pop
fcomip
out
cmpsb
les
pop
xchg
in
bound
push
inc
mov
push
das
sti
and
enter
pusha
sbb
pop
cld
das
fstpl
daa
dec
adc
dec
pop
pop
mov
and
movsl
or
xchg
lods
mov
jnp
fs
inc
pop
pushw
sbb
sbb
adc
cltd
rcr
cmc
pop
mov
xchg
mov
lahf
das
mov
jb
call
stc
fwait
sar
pop
mov
cmpsb
cmp
adc
or
shrl
iret
jge
inc
push
ret
and
inc
cwtl
jne
int
fidivl
nop
and
mov
cs
push
loopne
mov
jl
adc
int3
xchg
cmp
adc
mov
data16
xchg
ret
mov
out
jl
stos
jb
and
jb
mov
cltd
inc
cmp
fnstsw
scas
shlb
lods
imul
cwtl
inc
mov
daa
mov
loop
add
or
stos
jbe
rorl
or
mov
lretw
pushf
mov
rorl
mov
cltd
or
sub
or
sub
jle
nop
insb
cmp
cmp
pop
out
adc
mov
enter
fwait
adc
fxch
pop
mov
decl
ljmp
in
mov
int3
std
ret
stc
lret
inc
mov
push
push
or
pop
mov
in
cmpb
dec
scas
push
sub
push
loop
xor
sub
mov
lret
push
mov
cmp
xor
sti
mov
adc
lods
mov
mov
enter
adc
sub
mov
xchg
ret
mov
lret
les
jecxz
movsl
adc
pop
sub
mov
mov
imul
xchg
xor
scas
sbb
cli
xchg
pop
in
leave
sar
sbb
sub
xchg
fisubrl
and
lret
push
scas
push
hlt
push
ljmp
push
xor
pop
adc
fistpll
mov
stc
cwtl
gs
sub
dec
fnstcw
mov
addr16
push
mov
ss
test
xor
push
sub
xor
mov
sahf
jg
jg
sub
ret
xor
imul
jl
in
rcrl
inc
push
add
jg
sbb
roll
fisubl
pop
jae
inc
cmc
daa
cs
cwtl
sbb
add
push
xchg
aaa
add
inc
lea
xor
movsb
dec
sahf
push
mov
adc
icebp
xchg
cmp
stos
or
push
mov
jno
xchg
mov
push
sub
fstpt
out
pop
xchg
pop
mov
insb
or
mov
push
lahf
rcl
cmp
xor
and
push
mov
jae
sub
popf
pop
orl
xlat
or
and
sub
fbld
nop
filds
mov
shr
int3
sbb
or
mov
cmc
cmp
mov
nop
sub
sbb
gs
sub
clc
lcall
inc
loop
jns
loop
and
imul
xor
lret
mov
inc
add
ret
pushf
xor
lcall
outsb
andb
inc
in
in
jmp
xor
pop
inc
mov
je
out
dec
jge
out
imul
int3
sub
jne
shlb
add
test
fstpt
mov
or
adc
sbb
fisubrs
pop
or
mov
popf
subl
sub
lods
test
outsl
or
sbb
mov
je
in
ljmp
ret
ja
inc
dec
rcrl
sbb
ret
bound
push
or
xchg
xchg
outsl
mov
pop
lods
fcmovb
jb
xor
mov
jl
xchg
inc
fsts
lret
daa
mov
pop
xchg
test
mov
cmp
test
cli
mov
pusha
pushf
inc
int3
inc
fs
clc
sub
leave
pop
out
jae
sbb
add
les
js
inc
pop
stc
jne
aad
cmp
pop
jmp
cmovge
jb
sbb
cld
cmp
add
add
adc
sub
shll
xchg
add
out
mov
std
adc
enter
pop
or
pop
emms
push
and
jp
dec
push
shll
pop
fiaddl
and
jns
lret
enter
insb
lret
loop
inc
add
mov
fistpl
push
inc
pop
ret
clts
mov
mov
pop
cmp
enter
inc
ja
mov
jno
sub
arpl
ja
jecxz
fiaddl
mov
xor
mov
test
sbb
pop
xchg
or
add
fwait
adc
lahf
movsb
pop
mov
or
mov
outsl
js
es
dec
push
pop
xor
inc
popf
jl
mov
xor
stc
push
lahf
sti
ljmp
jp
std
pop
inc
ja
mov
daa
cmp
or
xchg
and
jbe
insb
jle
mov
pushl
lea
sub
dec
bound
pop
loop
xlat
int
leave
dec
push
or
push
stc
lea
repnz
cmp
push
insl
std
arpl
movsb
int3
cmp
jae
aaa
out
popa
adc
xchg
enter
and
jg
cmp
lock
es
mov
add
add
popf
xchg
mov
mov
xchg
jle
pop
paddw
rcrl
jno
addl
pusha
xchg
inc
int
dec
les
and
mov
test
ud2
inc
scas
pop
movsl
sub
inc
cmp
iret
mov
xchg
xlat
popa
inc
xchg
movsb
popf
out
dec
jmp
adcl
jmp
ljmp
fisubs
lcall
ret
adc
in
and
loope
mov
mov
imul
in
fst
sbb
negb
mov
and
mov
addr16
cmpl
dec
jecxz
mov
push
xchg
and
sbb
dec
push
dec
lcall
jnp
fs
mov
cmpsl
jne
lret
pop
jnp
mov
sbb
inc
mov
xor
pop
leave
nop
jo
jnp
subl
je
cs
je
hlt
bound
push
sub
clc
dec
cmp
or
add
sbb
jmp
and
filds
sub
inc
decb
push
cmpsl
arpl
xchg
or
sub
push
sti
pop
mov
cld
stos
in
xchg
cmp
lock
ret
and
mov
cmp
cli
lds
lds
xchg
sub
incb
in
movb
shrb
das
cld
outsb
dec
mov
adc
push
stos
mov
sti
push
clc
shll
sub
mov
add
mov
es
mov
mov
stc
xor
pop
mov
jb
xor
negl
cmp
imul
stc
or
push
frstor
pop
enter
sahf
popa
pop
adc
mov
jb
call
cli
push
dec
mov
add
pop
pop
push
and
or
aaa
mov
clc
cwtl
mov
mov
sbb
es
in
scas
push
insl
js
sub
push
sbb
stos
cmpsb
in
aam
das
daa
xchg
sub
push
fwait
adc
call
hlt
stos
sub
lahf
insb
sbb
push
es
and
cmp
inc
push
frstor
jl
add
push
pop
mov
aad
fs
xchg
xor
pushf
in
insl
ds
rcrl
cmpsl
pavgw
inc
bound
bound
mov
les
movsb
rorb
adc
mov
or
and
scas
xchg
mov
adc
loop
lahf
fcompl
pusha
xor
ss
pop
scas
inc
dec
push
pop
jbe
repnz
mov
in
mov
xor
dec
bound
into
cmpsb
dec
mov
leave
repz
ja
xor
lds
jg
sub
cwtl
push
xchg
stos
sub
js
icebp
fldl
sbb
jg
adc
inc
repnz
and
shrl
addb
fisttpll
loopne
add
insl
add
stos
sbb
inc
mov
or
add
divb
cmp
loopne
lea
mov
jae
mov
jp
aaa
pusha
jecxz
in
xor
or
dec
enter
pushf
iret
mov
mov
pop
add
dec
mov
pop
pop
ja
xchg
cwtl
or
cltd
or
nop
jle
dec
scas
adc
or
sbb
sbbb
push
pop
sub
and
rcrb
ds
jo
xor
repz
cli
push
jo
mov
out
shl
stos
add
mov
in
popf
loopne
fwait
out
and
les
imul
mov
lahf
cmc
loope
test
mov
aaa
mov
cli
fbstp
push
gs
fstl
into
sbb
in
ret
mov
push
push
sbb
xlat
sti
popf
xor
fwait
add
mov
fcmovnbe
xlat
ret
xchg
pusha
rolb
sbb
adc
pop
xor
jmp
lret
sbb
mov
movsb
stos
outsb
hlt
and
push
mov
or
xchg
mov
dec
loop
shll
jmp
popf
mov
mov
out
mov
insl
mov
add
push
dec
into
mov
mov
outsl
mov
aas
mov
xchg
pop
dec
stos
jg
in
outsl
cltd
inc
jo
and
sbb
push
sbb
in
sub
xchg
stos
xchg
sbb
imul
mov
cmp
ss
out
sub
mov
cmpsb
je
dec
stc
loopew
ss
fstpt
movsb
xchg
mov
jne
jmp
xorl
call
in
push
adc
sub
push
jb
cli
sete
or
push
push
add
loope
ja
sub
inc
daa
push
mov
cmp
mov
shl
or
mov
jg
mov
fmuls
arpl
xchg
scas
imul
fwait
mov
rcrl
inc
jns
lcall
dec
je
or
xchg
cs
xchg
aam
jp
outsl
loopne
push
scas
test
xor
js
ja
loop
in
xor
sti
fsubr
divl
nop
adc
mov
daa
insb
pop
push
sbb
fbld
gs
xchg
jo
cmp
jno
mov
cmp
movsb
and
js
iret
pop
scas
and
ss
push
xchg
push
xor
add
push
pop
add
or
jne
push
cmp
dec
fnstsw
pop
jnp
jmp
cmp
cmc
cmp
cltd
adc
mov
dec
push
inc
ja
sbb
movl
insb
shl
mov
cmp
in
sub
out
fstpt
rcll
xchg
inc
es
test
jp
jecxz
ret
cmpl
out
pop
bound
popl
push
subl
aad
lret
loop
inc
lret
mov
cltd
jns
cmp
lods
sub
pop
fistl
je
pop
inc
jl
dec
xchg
xchg
aam
sbb
testl
lea
out
insb
xchg
jg
stos
fstps
cmp
aam
fisubrs
push
push
adc
jbe
xor
rorb
imul
dec
mov
lahf
sub
bound
mov
dec
and
out
scas
movsl
jle
pushf
cwtl
mov
adc
aam
adcl
mov
lock
loop
inc
clc
lds
mov
sbb
lea
shlb
inc
jns
inc
repz
insb
out
testl
les
fidivs
test
in
aam
sahf
sbb
xchg
addb
xchg
fcompl
repz
xor
fldcw
cmp
mov
push
jbe
or
movsl
mov
stc
and
call
mov
std
push
mov
aam
and
adc
out
rcrb
and
xchg
sbb
jnp
out
or
cmp
pop
outsb
add
lret
loop
inc
jns
jg
call
in
cmp
mov
mov
cli
inc
pop
cltd
incb
pusha
xor
pop
xchg
mov
iret
mov
sub
add
push
jle
xchg
add
pop
hlt
out
fstpt
and
iret
jae
mov
dec
mov
pop
push
fcmovnu
and
cmc
scas
mov
repz
mov
inc
push
insl
outsl
add
mov
jl
ljmp
add
push
xchg
in
aaa
iret
cld
jg
adcb
repnz
xchg
sub
aam
pop
outsb
pop
imul
push
in
enter
test
xchg
in
aas
dec
addr16
stos
fistpll
add
ss
jnp
pop
or
adc
iret
mov
sub
cli
or
fs
mov
ficompl
push
jae
in
aas
and
insb
into
and
dec
adc
nop
pop
in
mov
xor
std
lea
es
insb
sarb
ljmp
jle
leave
je
lahf
and
out
fbstp
popf
das
mov
stos
lds
icebp
push
pop
rolb
pushf
test
jbe
cmp
push
jo
cmp
nop
adc
pop
jnp
decb
sub
inc
arpl
lea
sub
jae
xchg
add
mov
aas
dec
test
mov
xor
lods
rcll
out
push
mov
xchg
xor
xor
lods
shlb
push
data16
adc
scas
cmpsb
cmpsb
jle
xchg
insl
ret
and
lcall
insb
aas
adc
cmp
mov
or
dec
ljmp
sbb
xor
test
add
lret
and
push
adc
xor
outsb
mov
add
jle
add
jg
stos
js
add
mov
jp
mov
pop
stc
fisubrs
push
in
test
cwtl
push
or
fnstenv
or
cmp
fdivrl
in
xchg
pop
cltd
popl
pop
hlt
std
test
dec
xchg
sbb
aam
repz
pextrw
push
ret
std
mov
test
popf
inc
pop
inc
sub
inc
enter
push
in
push
mov
ret
adc
sbb
ja
cltd
imulb
mov
out
dec
int
out
movsb
pop
push
jle
jecxz
push
out
xor
iret
enter
and
mov
outsl
enter
and
cwtl
fisubs
rorb
insl
mov
and
stc
test
outsb
push
or
jns
scas
gs
orl
ret
test
iret
and
lods
fbld
fs
flds
neg
xor
fistpl
push
push
in
inc
lret
mov
push
movsb
pop
shll
popf
mov
aas
ret
dec
lret
mov
adc
gs
scas
add
inc
sbb
jae
int
jo
stos
leave
sbb
insb
xchg
fwait
mov
jle
shrb
test
or
and
in
jae
lahf
or
xchg
lret
pushf
cmp
or
test
pop
or
aaa
dec
sbb
mov
mov
dec
and
movsb
mov
cmpsl
pop
jns
push
push
jo
jle
hlt
dec
fnstsw
jns
add
jge
mov
call
fstpt
push
xor
stc
mov
es
das
cmp
or
push
ljmp
iret
xchg
shlb
lock
popa
je
adc
cmp
mov
sbb
adc
add
in
cwtl
pop
xchg
push
inc
and
mov
inc
fxch
mov
test
call
sbb
add
scas
pushf
fcomps
daa
mov
dec
in
or
shlb
outsl
fidivrs
xchg
jle
xchg
add
enter
dec
and
dec
aad
imul
or
neg
sbb
adc
pop
mov
jno
jbe
xor
jbe
rcrl
and
repnz
add
or
orb
cld
addr16
icebp
xlat
stos
push
in
dec
or
push
cmp
cmp
jnp
das
sub
sbb
and
cld
jne
enter
sub
cmpsb
out
movsl
lret
jl
jmp
loopne
push
lods
mov
or
cli
push
imul
frstor
subb
mov
add
add
popa
xchg
out
outsb
aas
push
jmp
cmpsb
pop
daa
mov
or
inc
lret
mov
out
je
xchg
in
and
test
mov
or
imul
add
xor
add
popf
inc
packuswb
sub
lret
in
xor
dec
popf
xlat
rcrl
icebp
jnp
cmp
leave
fwait
leave
fbstp
add
loopne
cmpsb
lahf
jmp
loop
subb
mov
or
adc
out
scas
movsl
jle
xor
add
sahf
xor
xchg
cmp
cmp
sbb
xor
pop
les
sub
jno
pop
insl
movsb
xor
mov
je
shrb
cmpsl
push
pop
sub
inc
testl
push
sbb
cmp
stc
jae
xchg
mov
mov
dec
jmp
cmpsl
push
rcr
jns
sub
stos
popf
adc
lcall
push
je
out
rcrl
and
in
out
std
xchg
add
xchg
in
into
or
xchg
lcall
push
repz
jmp
fistpl
inc
ljmp
mov
loopne
shlb
dec
loop
adc
test
and
add
sbb
movsb
movsb
int3
xor
pop
sarb
dec
and
insl
push
or
lret
jp
ret
aam
jb
sbb
sbb
inc
ds
mov
xchg
sub
sbb
xorb
test
adc
addr16
adc
push
jne
subl
stos
nop
inc
aam
mov
inc
ja
xchg
mov
bound
lock
int
xchg
xchg
push
testb
lahf
ret
das
movsl
movsl
xchg
subb
cmp
push
rep
movsb
sub
dec
out
stos
push
pop
lods
call
inc
dec
xchg
es
repz
iret
rorb
or
addl
cmp
xor
mov
cmp
pushf
ss
push
jmp
lcall
and
outsl
inc
call
cmpsl
xor
sub
lods
popa
ds
notl
std
inc
inc
sub
lea
inc
push
mov
add
adc
ret
or
xchg
rcrl
call
sub
adc
testb
push
ds
aas
or
sub
sbb
xor
out
call
aam
in
mov
cli
or
xchg
mov
lock
cmp
sbb
and
daa
not
xorb
lcall
mov
add
or
addl
ja
push
xchg
clc
fsubrl
push
loop
mov
push
test
fists
out
xlat
add
xchg
mov
scas
popf
sahf
sbb
andb
addr16
push
push
mov
sbb
push
adc
in
ret
repz
mov
mov
pop
mov
or
inc
cmc
into
sbb
outsb
shlb
mov
filds
js
addr16
dec
imull
into
pop
xchg
mov
call
mov
mov
bnd
xlat
jmp
insl
in
mov
in
adc
fidivrl
out
sahf
sbb
mov
adc
or
jo
leave
incb
cs
xor
cld
enter
inc
cmp
inc
cmpsb
in
cmp
lea
xor
sub
mov
mov
and
adc
cltd
xor
mov
add
hlt
call
in
push
fidivrl
repnz
roll
push
mov
pop
loopne
int3
cmp
fs
sbb
adc
sbb
push
jp
mov
nop
jg
out
add
sub
adc
xchg
dec
outsb
jp
fmulp
adc
das
mov
out
lret
sub
inc
aaa
sub
jp
sbb
inc
fnstenv
jp
or
add
js
and
or
add
test
xchg
inc
dec
mov
ret
sbb
xor
sub
lds
mov
xchg
xchg
fcoml
loope
jl
mov
adc
test
add
lea
outsb
inc
fwait
dec
subb
incl
jns
sub
mov
les
mov
jnp
jo
sar
dec
mov
lods
out
mov
adc
dec
scas
call
add
aam
sti
pop
add
mov
outsl
jns
inc
ret
pop
xchg
cmp
mov
sarl
or
cmp
add
outsl
and
in
std
pop
shlb
push
shl
in
adc
pop
mov
cmp
iret
push
or
mov
je
mov
int3
hlt
je
nop
lods
sbb
sub
subb
mov
rcll
jns
jecxz
test
pop
leave
sub
insl
les
out
ss
lock
in
dec
mov
lods
jo
adc
fsubl
fsts
mov
mulb
fistpl
insb
aad
cmp
fcmovnu
push
repz
cld
lret
push
pop
adc
or
out
cmpsl
int
jb
fdivr
aaa
mov
inc
fldl
cmp
cmp
pop
dec
incl
iret
ret
push
and
mov
jge
cli
shl
mov
mov
mov
add
sarb
xor
iret
dec
popa
push
and
xor
xor
ret
ficoms
push
mov
pop
sub
arpl
jne
xor
rcrb
std
add
ret
jae
dec
xchg
push
popf
stos
jecxz
stc
sbb
in
lret
xchg
pop
add
mov
pop
mov
pusha
insb
xor
sbb
pop
lcall
pusha
push
pop
negb
cmpsb
sub
lods
xor
or
mov
into
xlat
sub
xchg
mov
mov
dec
in
clc
out
rcll
sub
inc
loop
mov
mov
enter
add
faddl
mov
les
nop
sahf
add
dec
add
jge
outsl
mov
lcall
mov
push
and
in
daa
xor
movsb
pop
fnstsw
or
dec
lea
mov
mov
and
xlat
scas
icebp
mov
push
leave
je
pop
adc
or
sti
sar
jmp
cmp
stos
scas
stos
sub
mov
aad
testb
mov
jl
ljmp
dec
lods
dec
call
clc
je
sahf
push
je
sbb
insb
in
push
out
adc
out
dec
xor
subb
adc
cmp
es
sti
inc
push
xor
rcrl
subl
cmpsl
pop
hlt
int
cmpsl
xor
rol
mov
movsl
das
adc
sbb
js
cmpsl
pop
sbb
push
add
pop
cmp
jg
aad
xchg
lret
andl
jg
xchg
mov
xchg
sahf
inc
rcl
ret
repnz
mov
mov
cmp
xor
inc
lret
es
xor
cmp
cmc
xlat
inc
es
add
adc
movsl
es
cltd
dec
or
outsb
add
out
xor
mov
test
or
inc
jmp
lods
int3
adc
xchg
daa
sub
jbe
and
push
fmull
mov
in
sbb
and
cwtl
inc
mov
lea
test
fcoms
popf
fnstenv
lds
jge
fstpl
push
movsl
push
daa
pop
mov
pop
cli
cmpsb
test
scas
lods
cmpsl
scas
stos
scas
cmpsl
addr16
mov
clc
jmp
ret
add
sbb
test
lret
sbb
stc
rcr
or
adc
test
inc
jmp
jo
jge
pop
aam
in
call
dec
cmp
xchg
push
fstpl
ljmp
dec
shrb
outsl
pop
lods
push
inc
mov
cltd
or
shrl
not
mov
adc
xchg
inc
mov
sti
insl
out
push
jo
xchg
fwait
int3
xchg
dec
fisubrl
mov
insl
xchg
sub
dec
dec
mov
sbb
mov
fs
dec
daa
mov
hlt
out
outsb
lret
push
jle
lcall
cltd
movsl
adc
push
adc
lcall
pushl
lahf
pop
sub
mov
xchg
mov
in
aas
push
enter
xor
ljmp
call
test
cmp
test
xlat
cmp
add
andl
ret
ljmp
push
setp
mov
fcmovbe
shlb
addl
fnstenv
and
imul
lahf
xor
push
fwait
imul
pop
or
pop
jmp
xchg
movsl
pop
call
sub
sbb
cltd
pop
fisubrs
movsb
jbe
pop
mov
mov
int3
pushf
jle
in
push
stc
sbb
scas
ljmp
js
stos
dec
aaa
inc
int3
cmp
mov
push
push
lahf
and
and
sahf
sti
mov
mov
add
outsl
mov
test
into
jo
xchg
das
xchg
pop
stos
push
ja
call
imul
mov
push
sub
inc
pop
xchg
dec
xor
subb
push
jle
push
test
daa
mov
or
inc
mov
int3
cli
xchg
or
mulb
pushf
cmpsb
je
les
jnp
and
ret
repz
mov
js
jae
sub
add
add
push
mov
jmp
in
lock
mov
in
push
call
pop
mov
ljmp
add
cmp
pop
xor
mov
xor
mov
inc
ficompl
jmp
pop
loop
xabort
fwait
stc
dec
ret
test
and
and
dec
mov
push
cmp
xor
in
mov
xchg
sub
inc
aaa
jns
je
jo
int3
and
pop
inc
imul
loopne
test
imul
dec
adc
jg
insb
sbb
imul
out
push
dec
jns
xchg
aad
bound
push
popf
rol
push
fiadds
mov
cmp
leave
sarb
lds
popa
dec
outsb
push
or
ds
mov
cmp
idivb
jecxz
pop
jb
mov
aam
jge
and
arpl
mov
not
sbb
sub
dec
jbe
dec
xor
jae
outsb
hlt
xor
sub
xlat
test
ror
adc
dec
or
cmp
fstl
int
arpl
sub
repnz
cwtl
jmp
and
pop
add
push
loope
pop
shl
xchg
notb
and
xor
add
jmp
push
xor
data16
lods
mov
cmp
adc
push
pop
je
mov
adc
mov
cmp
or
iret
dec
add
sub
xchg
mov
fnsave
leave
and
out
dec
pop
mov
jne
dec
out
dec
mov
outsl
pop
les
sub
in
fisubl
inc
ss
xchg
mov
loope
pusha
or
jmp
push
adc
das
sbb
pusha
sbb
jno
dec
adc
mov
test
dec
dec
cwtl
cmpsb
outsl
push
js
subl
mov
xchg
add
int3
mov
jae
ret
cwtl
outsb
jmp
jbe
pop
inc
out
inc
out
sbb
sub
stos
ds
xchg
cmp
jbe
xchg
aam
lods
mov
cmp
or
fs
xor
clc
lea
insl
mov
dec
dec
addb
imul
out
stos
pop
test
int
mov
aas
repz
xor
push
in
test
or
ret
sub
jmp
fwait
lret
push
shrb
lock
subl
addb
loop
test
inc
and
cld
xchg
int
mov
jb
xchg
sti
dec
mov
jp
cmc
and
in
std
std
jmp
inc
add
mov
dec
jmp
inc
fs
mov
test
test
outsl
mov
add
push
popf
fimull
js
movsl
roll
mov
mov
push
loopne
xchg
or
jle
jge
rorl
cmp
jmp
outsl
loopne
mov
adc
insl
jne
nop
fimuls
mov
mov
js
mov
jmp
inc
mov
into
cwtl
push
xorb
xor
lods
or
cwtl
fs
add
clc
or
pop
pop
lods
add
lahf
jp
inc
cmp
or
in
dec
shr
stc
jb
in
cmp
dec
incl
cmp
outsl
inc
subl
enter
mov
jl
shll
mov
out
mov
lods
xor
scas
push
jns
clc
jae
cmp
jmp
or
and
rorb
out
sbb
xchg
into
mov
mov
adc
lcall
loope
or
jae
ret
fsts
mov
lret
dec
out
and
lock
adcb
fwait
mov
add
scas
in
push
pop
mov
fildl
sub
sti
dec
xchg
fwait
sub
cltd
push
xchg
inc
mov
pop
out
sub
and
jmp
loope
push
pop
aad
xchg
lds
sub
push
ror
lret
xchg
fsubrs
insb
js
aad
inc
lods
sub
push
pop
xchg
dec
stos
mov
sub
xchg
fistpl
sub
push
dec
shlb
jge
js
mov
mov
lea
mov
xchg
out
mov
out
cltd
push
or
jecxz
cmp
sbb
xchg
jns
repnz
or
insb
mov
repnz
fwait
cmc
mov
addl
inc
cmp
sub
mov
adc
popl
cmp
mov
fs
push
mov
pusha
mov
fcomp
movsb
rorl
xor
xlat
iret
dec
add
xor
mov
in
out
mov
pop
and
insb
xchg
lahf
movsb
or
movsl
mov
jb
stc
pop
orb
stos
mov
fsubrs
daa
ljmp
jmp
insl
loope
add
stc
mov
add
xor
insb
mov
mov
inc
mov
test
pusha
loop
pop
adc
mov
xor
loopne
jecxz
and
sub
test
pop
repnz
jge
lcall
inc
dec
pop
popf
xor
dec
xchg
pushl
adc
pusha
push
rorb
or
dec
dec
cltd
loope
fcomi
in
data16
pushf
jmp
rcll
xchg
pop
adc
jp
inc
sub
scas
test
in
cmp
adc
or
xchg
clc
xor
jg
mov
and
bound
es
or
pop
pop
aad
jae
incl
or
jne
in
mov
and
sbb
pop
cmp
sub
lret
push
sar
cmp
mov
rolb
mov
add
cmpsl
sbb
rcrb
cli
sub
loopne
js
or
dec
sbb
add
dec
cli
or
xchg
xor
jp
js
dec
notb
scas
inc
pop
sbb
bound
mov
push
mov
sbb
icebp
jecxz
movsb
stc
push
ret
mov
or
adc
pop
mov
jecxz
xchg
add
movsl
push
sbb
pop
aam
push
inc
das
mov
pop
cwtl
push
xor
jg
cltd
test
sti
shrl
mov
sarb
