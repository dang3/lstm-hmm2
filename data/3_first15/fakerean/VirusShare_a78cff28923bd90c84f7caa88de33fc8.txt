les
cmp
dec
mov
scas
adc
cmpsl
ljmp
and
into
pop
dec
xchg
test
into
adc
jle
decb
push
pop
fwait
movb
mov
shlb
ljmp
push
je
mov
dec
xorb
gs
jge
ss
add
pop
lods
mov
inc
lods
push
data16
stos
std
nop
add
in
sbb
gs
cmp
jnp
mov
int3
cmp
mov
dec
xchg
iret
testl
sbb
test
adc
inc
cmpsl
int
jge
mov
jnp
and
mov
jle
jle
sarl
jns
push
mov
mov
mov
lock
addb
push
cmp
mov
fwait
je
mov
pop
popf
or
pop
and
daa
sbb
sysexit
fdivrs
lock
sarb
shlb
lret
sbb
mov
xlat
pop
insl
in
mov
roll
xorl
mov
sbb
repz
enter
das
daa
jne
daa
popw
es
sub
daa
inc
and
push
jae
iret
call
in
pop
into
mov
out
inc
pop
inc
cs
jo
mov
jb
insl
es
ja
dec
add
int3
cmc
push
pushf
add
cmp
sub
je
rcrb
loopne
or
insl
int
jmp
sub
mov
mov
ja
pop
xchg
inc
add
inc
shlb
or
push
mov
xlat
in
iret
adc
data16
popa
shll
or
outsl
insl
pushf
or
push
ljmp
sub
jnp
outsb
cmp
dec
jp
subl
add
in
or
rcll
mov
push
mov
inc
mov
dec
sub
mov
test
loopne
mov
mov
or
cmpsb
fisttpl
inc
insl
stc
lret
xchg
lret
adc
inc
les
mov
lret
sub
jnp
add
xchg
ljmp
fildl
sbb
cld
add
or
mov
xor
adc
jmp
insl
add
adc
sbb
outsl
les
call
cld
repz
sbb
clc
push
lods
sti
sbb
inc
or
std
ret
enter
test
xchg
out
out
out
mov
or
xchg
push
add
fidivrl
nop
repz
adc
sbb
dec
xchg
ret
mov
xor
jecxz
adc
adc
add
push
jl
call
pop
sub
imul
ret
stos
inc
mulb
mov
jnp
jmp
xor
xlat
sbb
aam
pop
in
sub
jge
inc
mov
cld
insl
pop
nop
mov
dec
and
mov
les
mov
pop
movl
sbb
movsl
push
xor
mov
fs
test
bound
cwtl
mov
ljmp
movsl
push
cmpsb
clc
mov
lcall
inc
addb
lods
adc
push
shll
mov
mov
xchg
aad
and
std
fwait
push
mov
ljmp
lret
fiaddl
jnp
and
pop
in
icebp
mov
loope
daa
shll
shrb
addr16
shrb
je
hlt
and
ja
cmp
in
pop
sbb
out
push
jp
pop
jns
pop
loop
add
xchg
or
nop
fdivrl
or
dec
ss
aaa
repz
sub
xchg
shrb
sbb
adc
sub
mov
jmp
nop
xor
out
adc
cltd
or
mov
add
out
add
dec
mov
js
add
das
and
lea
adc
jbe
jle
or
lahf
sub
lcall
sub
call
dec
sbb
xlat
addb
and
fwait
lods
lods
cli
inc
neg
lret
pop
push
cmc
xchg
cmp
cmpsb
iret
hlt
fadds
and
push
pushf
sub
xchg
push
push
cld
test
into
nop
fbstp
jmp
rcll
leave
cltd
jo
sbb
inc
loop
je
lods
xchg
js
xchg
adc
jns
adc
xor
daa
aas
imul
push
xor
jbe
mov
or
enter
inc
mov
pop
push
test
or
insb
jnp
clc
cmp
or
xchg
xchg
mov
push
adcb
cld
and
inc
lock
or
xchg
mov
das
lock
adc
lahf
dec
aad
and
sub
pusha
mov
repz
ficoml
popa
les
jo
pop
push
outsb
inc
fsts
les
ffreep
sbb
xchg
pop
fldl
gs
push
xchg
jle
pop
cmpsb
jne
xor
scas
xchg
and
shrb
rcrb
adc
mov
pop
and
mov
push
mov
dec
mov
fbld
test
lea
imulw
push
mov
jae
cwtl
cmc
mov
movsl
gs
cmpsl
xlat
lock
stos
and
lods
cltd
push
call
xor
dec
jge
push
mov
pcmpgtw
test
sub
fistpl
dec
mov
jecxz
sbb
aad
xor
mov
roll
loopne
push
and
ljmp
jmp
pop
cwtl
mov
push
imul
dec
pop
jp
loope
fdivs
into
mov
out
rcrb
ficompl
fwait
xchg
into
jae
adc
addr16
int
jmp
std
push
pop
and
test
jmp
fs
movsl
xor
adc
pop
or
arpl
mov
mov
cld
lahf
push
jnp
xor
lea
shll
repnz
mov
imul
sub
out
pop
call
xchg
fiaddl
sbb
mov
aam
or
or
int
cld
cs
in
negl
mov
push
mov
jne
inc
add
mov
and
pop
stos
xor
inc
out
sbb
loopne
ret
dec
or
lods
adc
in
xchg
mov
adc
ljmp
or
movb
jne
pushf
jmp
stos
nop
ja
pushf
mov
push
jbe
sbb
ret
ds
inc
jb
inc
cld
mov
out
cmpl
mov
cmp
xor
and
xor
cmc
cli
out
lcall
cmp
xor
cld
das
add
cmp
adc
jne
mov
inc
lcall
mov
sub
cld
test
inc
out
inc
mov
mov
stos
ja
mov
jo
sbb
pushf
adc
cmp
inc
or
adc
adc
scas
pop
adc
xchg
xchg
pop
sub
pop
loop
test
jmp
in
inc
add
fcoml
arpl
pop
es
mov
lahf
or
xchg
loopne
fs
loop
inc
ja
stos
sbb
stos
nop
outsl
out
cwtl
lea
ret
lcall
mov
or
xchg
aad
xchg
push
cwtl
sbb
je
sbb
gs
jg
fidivrl
cwtl
sub
movsb
cmc
dec
shlb
push
aad
movsl
in
inc
pop
jne
sbb
shlb
xor
int3
inc
jg
xor
mov
push
pop
aas
adc
and
push
js
fildll
cmp
sbb
adc
lds
xchg
jae
mov
adc
jo
cmpb
push
mov
xchg
jb
ror
push
adc
jb
and
das
sub
add
push
push
gs
ljmp
repz
les
shlb
mov
les
dec
fsts
leave
iret
imul
xchg
imulb
lea
pop
leave
adc
sub
jbe
rorl
mov
xor
cmpl
sahf
push
cmp
or
jp
xchg
mov
lods
add
pop
push
enter
in
xchg
lahf
out
pop
mov
adc
sbb
mov
pop
ror
popa
sub
dec
out
in
popf
sahf
pop
and
nop
push
lret
in
push
or
add
push
jne
iret
in
mov
fdivr
int
shll
inc
cli
repz
js
jge
dec
jecxz
subl
xchg
subl
fbstp
push
xor
movsl
stos
push
loopne
ljmp
or
inc
subl
pop
es
cmp
and
adc
mov
sbb
lret
ljmp
jo
mov
jecxz
mov
or
mov
xchg
jns
ret
ss
das
or
movsl
test
xor
dec
pop
icebp
int
and
rolb
mov
cli
popa
pop
sahf
negl
xchg
into
rorl
enter
and
arpl
int
xor
sahf
cmp
dec
add
mov
xchg
adc
test
dec
cli
icebp
or
or
neg
adc
imul
cmp
outsl
or
insb
xchg
jmp
inc
js
pop
inc
int3
fmuls
jns
push
xchg
std
nop
mov
push
cmpsb
jo
loope
dec
ja
cmpsl
in
jecxz
dec
iret
jbe
push
pop
shll
cmpsb
movsb
sbb
xor
xchg
sbb
dec
cmpsl
xchg
add
fwait
jp
or
push
push
pop
into
lcall
test
jno
mov
shll
iret
pusha
mov
cmpsl
out
push
inc
xchg
cltd
add
mov
test
xchg
inc
add
pop
insl
movsb
out
jle
push
sti
jno
fnsave
jae
mov
fldenv
xchg
idivb
lret
jne
xchg
popa
in
xor
dec
inc
ds
aaa
pop
mov
divb
or
push
cwtl
mov
push
jno
bnd
lds
dec
ret
push
adc
mov
sbb
testl
mov
test
jnp
and
xor
cltd
aaa
leave
adc
cmpsb
push
jmp
mov
and
inc
std
adcl
addr16
pop
sub
aam
test
popa
xchg
call
test
sahf
pusha
lret
jno
inc
lds
outsb
popa
inc
popa
sub
adc
sbb
adc
pop
lea
jo
or
xchg
push
sahf
or
in
jns
add
adcl
jle
sbb
mov
dec
mov
fbstp
je,pt
decl
push
or
ds
movsb
stos
lret
insl
pop
outsl
mov
mov
add
dec
pop
gs
cmpsb
jb
push
cmpsb
pop
cltd
shlb
jnp
lcall
arpl
add
mov
jbe
mov
out
cmp
lret
add
mov
or
cmc
fistps
mov
mov
js
push
push
iret
adc
ja
mov
push
xchg
mov
add
mov
cltd
out
pop
popa
hlt
xor
das
in
mov
xchg
imul
cmpb
dec
into
or
inc
jb
ror
stc
cmp
xlat
outsl
mov
or
outsb
mov
jmp
push
xchg
int3
or
cmp
shlb
adc
loope
cmp
push
cmpsb
sbb
pop
test
fsubr
hlt
add
xchg
int
cld
dec
or
pop
aam
sahf
sub
das
xor
mov
sti
and
dec
dec
cmp
ja
mov
sub
pop
imul
cltd
push
or
xchg
shl
lret
jb
mov
out
and
movzbl
mov
add
addr16
mov
movsb
inc
push
in
out
sub
mov
or
mov
add
mov
and
dec
xor
ret
in
aas
cmp
addr16
dec
dec
xchg
test
jbe
imul
fisubs
orl
mov
mov
pop
xchg
loope
jns
add
add
add
loope
shlb
mov
jecxz
cmpsb
outsl
mov
mov
xor
int
into
xor
rolb
insb
movl
xor
mov
imul
mov
xchg
ret
rorb
cmc
xchg
push
add
push
push
repnz
sahf
pop
xor
and
mov
jnp
pop
mov
aad
mov
in
dec
sbb
inc
xor
divl
inc
mov
sbb
mov
inc
mov
mov
hlt
icebp
incb
insl
cmp
xor
push
gs
adc
bound
aaa
popa
pop
mov
xor
cmp
sbb
pop
pop
pop
jecxz
pop
insl
inc
cmpsb
push
mov
lcall
and
push
xor
xor
xchg
dec
roll
adc
loope
inc
mov
fsin
pop
xlat
pop
sbb
aas
xor
mov
xor
movsl
dec
jl
lcall
adc
mov
int3
xchg
cmp
inc
leave
push
pushf
xor
inc
and
mov
divb
cmc
xchg
jns
sbb
loopne
andl
movsl
fsubr
adc
xchg
push
imul
dec
roll
out
xor
mov
clc
fistpll
lcall
in
cmp
or
pop
adc
ret
js
aaa
or
js
movhlps
add
jne
sbb
xor
push
adc
daa
jg
in
jecxz
pop
and
pusha
adc
out
cmp
mov
jae
add
push
add
fiaddl
push
jb
inc
inc
ljmp
stc
lret
xor
pop
or
or
inc
xchg
mov
sahf
mov
icebp
cltd
cltd
sbb
and
cwtl
data16
fdivrs
sbb
mov
and
inc
xor
out
adcb
lahf
pop
lods
stc
and
je
add
cwtl
mov
ret
int
ljmp
xchg
cmpsl
orl
xor
pushl
sub
inc
add
cmpsb
xor
repnz
add
movsl
call
dec
push
inc
lea
int3
cs
mov
das
lock
jl
shl
std
aaa
rcrl
mov
mov
push
add
fs
int
sub
push
mov
xor
js
fiaddl
add
notb
and
imul
out
cmp
repz
jle
arpl
jne
pop
cld
xchg
mov
imul
mov
xchg
jo
fwait
and
pop
sbb
push
and
jae
dec
rol
lahf
test
and
mov
mov
add
xchg
sti
pop
adc
pushf
xchg
or
sbb
sbb
mov
mov
lret
jecxz
jnp
xchg
ss
push
push
ret
jb
mov
jle
scas
je
insb
add
out
popf
jp
scas
repnz
inc
repz
cmpsl
pushf
mov
cs
jno
loop
mov
sub
xchg
call
das
pop
adc
cld
push
dec
jae
add
and
insb
mov
pop
fiaddl
cmpsl
test
lahf
movsb
mov
outsb
inc
mov
sbb
rorb
cmc
xchg
ret
jg
lahf
or
mov
add
lcall
add
mov
dec
scas
sub
in
mov
sub
call
fcom
cltd
xchg
call
movsl
fisttps
ljmp
xchg
into
nop
ret
push
xor
leave
movsb
aad
incl
imul
cld
jecxz
push
in
mov
xchg
pop
jecxz
into
stc
shlb
mov
and
andl
sti
add
fistpll
inc
add
xor
mov
lock
mov
in
push
cmp
jno,pn
pop
outsb
jmp
push
pusha
inc
sbb
es
add
push
mov
sti
imul
loop
lahf
pop
and
int
pop
cmp
rep
cmp
out
dec
daa
adc
mov
jne
xchg
and
pop
mov
dec
sbb
fs
testb
mov
loop
inc
pop
movsb
inc
inc
aam
pop
or
cli
xchg
in
es
out
pop
and
inc
inc
xchg
decb
lret
jge
in
loop
mov
test
fmul
das
mov
adc
pop
cmp
sbb
sub
cmp
out
push
data16
xchg
insl
xchg
inc
push
push
and
push
pop
fninit
pop
gs
inc
outsl
lock
ljmp
ss
mov
jns
lret
inc
adc
push
sarl
and
xor
sarl
xor
pop
pop
sub
push
xchg
inc
xchg
push
pusha
cmp
cmpsl
insl
aam
or
rcll
lahf
jns
fistl
add
mov
pushf
xchg
cs
in
testb
rcll
push
push
fbstp
cmp
iret
lods
stc
in
das
mov
in
stos
jg
add
and
cltd
bound
insb
loopne
shl
arpl
xor
and
xor
cmp
sbbl
lcall
mov
xor
pop
sub
in
add
lcall
ret
fldcw
mov
mov
std
lret
xor
adc
ss
pushf
subb
jecxz
test
idivb
fnstcw
popa
jae
movsb
loopne
xor
gs
mov
inc
js
into
sub
mov
fmuls
cli
jns
test
xchg
mov
fimuls
clc
jge
mov
mov
inc
sub
mov
xchg
dec
bnd
inc
adc
mov
insl
arpl
mov
data16
push
sbb
shll
in
cmp
sub
pop
dec
pop
pop
lret
mov
sub
fwait
je
inc
test
aaa
movsb
shll
int3
test
repnz
loop
mov
push
xchg
adc
int3
loope
lret
xchg
aad
daa
mov
arpl
sub
not
inc
xlat
adc
jnp
out
call
cmp
cmp
xchg
or
das
pop
mov
pop
or
enter
repz
or
inc
add
cmc
or
sub
repz
icebp
mov
shl
rorl
cmpsl
enter
enter
cmp
xchg
dec
in
inc
pop
fcomps
shll
imull
out
icebp
addl
cld
sbb
stc
add
out
aam
inc
mov
adc
add
jecxz
inc
jns
pop
fnstcw
les
pop
jp
pop
lods
adc
xchg
jp
jg
sbb
push
test
mov
notb
mov
push
jmp
jns
rcrb
ds
lret
inc
std
ss
scas
ss
mov
stos
push
ja
aaa
lea
ljmp
xchg
pop
test
xchg
fscale
test
jne
sbbl
dec
filds
pop
xchg
inc
aas
sbbl
or
mov
pop
xor
fildll
adc
sub
fisubs
sbb
iret
mov
mov
xor
imul
js
addr16
jp
inc
shrb
dec
pop
push
fistpl
loop
daa
or
push
mov
and
jns
xchg
pop
and
mov
adc
pop
and
leave
and
mov
jne
imul
sub
push
mov
out
jb
and
sub
icebp
xchg
sbbl
sub
negl
imul
iret
int3
jl
xchg
pop
cmp
imul
or
in
or
cmp
into
cmp
dec
jmp
xor
cs
int
repz
inc
ljmp
mov
ds
mov
ss
mov
add
ja
es
or
dec
mov
inc
add
cli
dec
xchg
rclb
sbbb
in
pop
pop
jmp
jae
ror
fldl2t
cwtl
sar
mov
ret
mov
dec
jae
out
shl
shll
fs
movsb
sub
sub
push
and
aas
push
pusha
xor
add
dec
mov
sub
mov
leave
aad
enter
sbb
insl
movsb
call
inc
in
insl
jl
mov
stos
cs
lods
adc
xchg
jne
rorb
lret
xchg
stos
enter
push
mov
mov
sub
sti
hlt
adc
add
add
jno
lds
ljmp
jmp
addl
xchg
call
dec
and
mov
adc
xor
sbbl
sub
pushf
adc
add
adc
xchg
arpl
push
and
sub
ret
dec
xor
aaa
sti
test
and
movsl
cld
arpl
push
pusha
lret
testl
push
mov
pop
mov
bswap
lods
sahf
push
push
daa
imulb
movsb
push
lods
pushf
out
mov
pop
repnz
mov
imul
sub
fnstsw
jg
sbb
xor
lret
dec
lret
daa
das
ret
push
push
insb
or
pop
shll
inc
sbb
loopne
sbb
imull
nop
jb
add
sbb
fldcw
arpl
sub
jecxz
sbb
ret
lods
xchg
test
out
mov
xor
out
jp
std
addr16
int3
mov
or
in
subps
out
outsl
popa
ja
xor
and
mov
xor
and
adc
jg
push
shr
or
jnp
rcl
mov
or
mov
xor
jg
rol
xchg
jns
mov
mov
mov
pushf
xor
lods
xchg
nop
pop
xchg
or
in
sub
ss
ficompl
pushf
subb
arpl
lret
ret
imul
mov
sbb
lea
bound
push
xchg
ret
mov
xchg
sbb
push
mov
jnp
sub
cmc
and
cmp
sbb
or
push
in
mov
pop
std
mov
insb
jg
or
cld
pushf
and
and
es
mov
jae
mov
addb
insb
and
or
sub
clc
dec
daa
lret
ja
push
dec
add
cmp
pushf
mov
fisttpll
adc
sbb
out
mov
decb
cltd
and
sub
testb
les
jle
repz
push
ja
xor
add
mov
mov
icebp
or
sbbl
mov
mov
stos
push
repz
xchg
push
jp
lahf
out
and
mov
xor
cmp
inc
jb
and
sbb
mov
push
ljmp
sub
mov
or
hlt
in
mov
test
inc
lock
or
push
enter
pop
repz
jge
or
or
int3
cwtl
movsl
or
fistps
gs
repz
cli
xor
lret
out
inc
sbb
andl
aad
addb
iret
orl
jp
dec
xchg
popa
loopne
mov
inc
pop
std
sbb
xchg
out
data16
cmpsb
call
cvttps2pi
arpl
es
ja
xchg
jg
jno
mov
inc
sbb
das
lcall
outsb
je
imul
or
and
imul
cmp
sub
dec
jmp
clc
in
push
mov
lea
mov
int
test
mulb
shr
pop
ja
xchg
ljmp
inc
cmp
sbb
cmpl
dec
cmp
ficompl
ja
xchg
inc
add
cwtl
xchg
add
add
and
scas
loopne
xorl
les
scas
dec
fs
daa
pusha
gs
inc
sub
xchg
fimuls
scas
push
insb
mov
loop
arpl
insl
sub
outsl
test
rorb
sti
inc
mov
inc
shr
dec
push
dec
and
fildll
mov
and
cli
scas
sbb
cmpsl
dec
jne
ja
xor
xchg
sbb
push
add
and
push
jns
mov
int
push
or
inc
cmpsl
and
ljmp
fs
or
pop
stc
ret
and
xchg
jns
or
ret
loop
aaa
or
hlt
dec
ja
mov
inc
fistps
xchg
jns
repnz
xchg
sbb
les
aas
ds
in
lock
push
dec
lret
pop
inc
xchg
imul
dec
ret
mov
mov
mov
adc
mov
dec
cmp
cmp
in
pushf
cmc
and
loope
sub
cmp
mov
aas
inc
in
dec
mov
push
and
aas
daa
mov
lea
add
adcl
and
dec
aas
jmp
jno
mov
dec
out
mov
aas
adc
frstor
fisttpl
dec
nop
xor
bound
nop
pop
leave
push
cmpsl
xchg
sarl
or
add
adc
into
cmp
push
xchg
jno
mov
lcall
aaa
sub
adc
icebp
add
aas
jge
call
cmp
lret
aad
add
ljmp
orl
xor
and
pop
subb
sub
jge
cmc
dec
add
lods
int3
vmovd
mov
test
pop
test
repz
cwtl
divb
jbe
push
jnp
in
fs
add
cmp
pop
mov
or
xchg
inc
or
xlat
push
out
dec
cmp
test
push
leave
or
lds
push
sbb
insb
fbld
mov
pop
jge
mov
push
int3
mov
fcmovb
loope
pushl
add
cwtl
jb
mov
mov
or
in
popf
cmp
dec
ss
outsl
lods
push
fisubrl
mov
push
push
dec
or
lea
jmp
jmp
test
mov
adc
dec
lret
sbb
xchg
stos
adc
lret
aam
inc
sub
xor
fs
add
dec
ret
call
fldenv
xchg
pusha
mov
ret
inc
sbb
aaa
jne
bndstx
outsb
pop
es
jl
jo
imul
repnz
iret
adc
pop
sub
jne
inc
push
stos
frstor
movsb
push
or
fsubrs
or
sub
pop
inc
jnp
and
test
mov
xor
mov
adc
mov
cli
fdivrl
lret
decb
repnz
pop
xor
insb
fmull
adc
mov
sub
dec
and
push
dec
cli
les
dec
fucomip
loope
test
mov
ljmp
adcl
movsb
inc
popa
mov
jne
pop
and
push
mov
pop
mov
sahf
push
fbld
adc
sbb
push
sub
mov
stc
scas
and
mov
xchg
sbb
pop
cmp
mov
add
jge
add
ret
ret
lods
mov
pop
dec
mov
pop
inc
adc
popf
mov
add
jae
movsl
sub
and
push
mov
rcrl
push
jp
push
sbbl
add
call
xchg
aad
push
push
cmp
adc
jmp
cmpsb
popf
cmp
imul
add
scas
or
ljmp
ljmp
icebp
ss
aaa
adc
xor
scas
cwtl
mov
push
cmp
fidivl
inc
fwait
test
cltd
in
std
sbb
mov
jbe
shr
addr16
int
out
push
xchg
addr16
jp
or
push
sbb
xchg
jecxz
pop
arpl
inc
jbe
inc
gs
ficomps
jp
out
push
jg
enter
xlat
mov
sub
ret
aaa
scas
cmpsl
std
pop
and
sub
xorl
repnz
addr16
sbb
ljmp
jl
std
test
out
push
cmpsb
inc
bound
push
hlt
inc
sub
xor
js
cs
je
xor
mov
aam
aaa
jmp
adc
es
arpl
xchg
movsb
lea
aad
mov
xor
mov
fmuls
mov
pop
xchg
sbb
xor
push
fsubrp
mov
adc
inc
mov
je
gs
adc
into
cmp
dec
in
cltd
xchg
mov
push
jno
out
pop
push
mov
notl
pop
sub
dec
add
dec
arpl
dec
add
cmpsb
sbb
arpl
idivl
and
insb
push
out
xor
mov
in
je
ljmp
stos
out
data16
mov
sbb
aas
add
push
ja
jne
dec
cmp
lock
adc
mov
ljmp
add
jle
sub
and
outsl
mov
jne
pop
dec
mov
jbe
push
pop
pop
fdivl
jnp
outsb
std
dec
repz
push
cmp
push
js
addr16
sub
stos
sbb
pop
daa
inc
inc
inc
xchg
dec
pop
mov
dec
enter
cwtl
mov
outsl
push
sahf
inc
add
cmp
fistpl
pop
add
pop
ficompl
shl
data16
test
movsl
cmp
loope
imul
jp
fnstsw
fstl
push
shl
shlb
int3
div
jl
call
pop
fidivrs
mov
jo
push
dec
and
mov
aas
pop
outsb
mov
mov
inc
pop
stos
dec
fdivrl
scas
rcl
out
xchg
xchg
fistpl
or
mov
test
mov
push
push
enter
popf
mov
inc
or
scas
fists
test
inc
pop
sbb
xchg
pop
das
hlt
or
xchg
pop
ret
and
xor
out
mov
addr16
add
imul
arpl
rclb
jbe
lret
jmp
lea
inc
mov
pop
fwait
or
fcompl
daa
cmpb
scas
add
dec
fdivl
les
clc
aad
repz
add
dec
sub
fstl
sub
push
rcrl
out
fwait
test
dec
mov
xchg
idivl
pop
mov
and
and
lahf
xor
test
add
fcmovbe
mov
mov
sub
pop
inc
mov
cli
ror
jl
nop
test
sub
mov
aad
dec
cmpsl
imul
fs
fwait
es
mov
in
mov
xchg
mov
or
call
aad
aas
add
jo
mov
mov
adc
jl
test
das
dec
adc
cmp
lahf
cmp
pushfw
or
mov
outsb
cmp
mov
cmc
sbb
add
mov
lods
jecxz
sti
mov
and
mov
dec
mov
test
push
mov
mov
push
jno
add
das
sub
mov
pop
mov
pop
jecxz
push
sti
js
dec
push
popa
aaa
add
xor
pop
cmpl
jbe
fnsave
lret
test
inc
fldcw
push
andl
mov
and
sub
mov
dec
lods
xchg
mulb
scas
and
adc
rol
mov
pop
sub
xor
sbb
sahf
xor
mov
fwait
shrl
mov
mov
pop
jg
fcmovnbe
or
cmp
pop
loopne
adc
movsl
jg
sub
and
ja
arpl
xchg
push
in
arpl
scas
test
add
adc
fdivl
xlat
pop
cmpsl
or
push
and
pushf
add
std
xchg
xor
jae
adc
sub
cld
or
enter
scas
jg
data16
cwtl
pop
jecxz
or
mov
mov
dec
loope
cmpb
mov
inc
sbb
call
lea
dec
fsubp
jmp
mov
mov
cmpsl
std
aaa
and
movsl
add
mov
aam
adc
out
push
and
sbb
lds
adc
mov
imul
pop
fistl
jmp
push
xchg
cli
ffree
in
xchg
mov
outsl
int
orb
es
mov
adc
shlb
lock
ljmp
add
sub
mov
adc
push
push
dec
fmuls
xor
outsl
ret
mov
mov
imul
push
dec
inc
mov
push
lea
out
pop
mov
cmp
mov
xlat
dec
fxch
gs
add
les
outsl
shrb
pushf
cmpl
and
xchg
andb
call
sub
xchg
cmpsl
mov
jecxz
push
pop
xchg
sti
xor
leave
test
sti
cmp
jnp
emms
cmp
leave
jmp
in
leave
outsb
mov
adc
adc
mov
and
loop
rcrl
and
sbbl
pop
cli
dec
add
fildl
mov
aam
or
cmpsb
mov
inc
cmpsb
jnp
adc
xor
xor
push
cli
out
mov
jno
mov
dec
in
cwtl
pop
xchg
pop
inc
neg
sub
mov
fcmovbe
jno
jo
jbe
stos
rcr
loop
sub
popf
inc
pop
jb
aad
inc
lret
jp
xchg
pop
lret
xor
es
jbe
and
icebp
jo
xchg
aam
sbb
sub
mov
mov
xchg
mov
addr16
repnz
rcl
cld
sbb
and
aaa
mov
jo
push
cmp
je
dec
jne
hlt
out
inc
cwtl
inc
pop
mov
ss
fs
inc
fmuls
adc
sarb
mov
lods
push
inc
data16
jae
out
mov
adc
lahf
adc
add
repz
sti
adc
push
sub
lods
test
ljmp
lods
sub
imul
mov
cmpsb
cmp
and
frstor
fld
jno
mov
push
arpl
insl
popa
xchg
inc
sbb
xor
ja
pushf
cld
xchg
cld
js
stc
dec
orb
loop
fisubl
mov
mov
dec
pop
inc
mov
incl
cmp
mov
cld
sbb
fildl
sbb
daa
xor
and
add
mov
sub
xor
xchg
sarb
scas
add
pop
pushf
pop
jbe
inc
out
out
cmp
mov
ret
xor
pop
xor
add
mov
cmp
cmp
cli
das
stc
es
mov
mov
cmpsb
sti
lods
jle
dec
nop
mov
test
sub
idivb
fs
mov
cmp
jp
mov
adc
fildll
and
shrb
call
lahf
repnz
lock
dec
mov
ss
push
jl
leave
shl
call
adc
outsb
scas
fildl
andl
adc
xchg
addr16
inc
arpl
or
dec
stos
push
and
pop
jg
inc
adc
sub
jge
enter
int
sub
ret
push
outsb
or
push
adc
adcb
das
and
xchg
out
dec
popf
in
popa
push
out
push
adc
push
dec
fidivrs
or
dec
or
movsb
mov
xchg
adc
fcmovb
bound
jae
cwtl
repnz
inc
clc
xor
cmp
inc
push
mov
xchg
int
std
or
call
or
add
xorl
pusha
mov
jbe
add
ret
in
and
mov
sbb
aaa
movsl
pop
sbb
enter
mov
je
push
jo
icebp
mov
daa
add
xchg
dec
jns
pop
dec
in
cmp
jno
ds
gs
jmp
pop
pop
repnz
mov
pop
mov
pop
or
jp
scas
jns
into
xchg
mov
imul
nop
mov
dec
mov
xchg
fistpll
shlb
xchg
adc
adc
adc
mov
bound
imul
jmp
mov
scas
dec
das
in
sub
mov
icebp
sub
sarl
lods
test
movsl
or
in
imul
sub
test
popf
aam
fwait
inc
fwait
push
sbb
fimull
and
lds
js
pop
push
insl
insb
mov
add
fsubl
cmp
mov
popf
insb
inc
in
enter
dec
pop
xor
inc
sbb
pop
loopne
aaa
mov
out
lcall
insl
jno
add
jle
sub
mov
sub
repz
lods
ja
fcompl
out
mov
loopne
cmp
sbb
xchg
outsl
add
mov
pshufw
stos
cmpsb
test
daa
in
jge
cld
inc
inc
cmpsl
pop
ljmp
pop
push
add
sub
push
mov
sub
push
mov
mov
mov
sub
or
aas
jbe
push
jno
outsb
mov
mov
and
jae
test
and
jl
mov
mulb
cmp
push
xchg
into
mov
add
movsl
cmp
ret
dec
shll
repz
rcrb
leave
das
mov
arpl
movsb
mov
and
inc
cmpsl
mov
and
test
imul
cmp
dec
repz
dec
aad
cmpsl
xchg
movsb
stos
lods
mov
popf
in
xchg
out
push
enter
ja
lret
mov
jmp
out
sub
test
je
in
out
lods
loope
sbb
int3
pop
stos
ja
xchg
sbb
pop
roll
orl
clc
addr16
ja
push
xor
imul
mov
mov
loopne
popa
lods
jae
sub
add
int
scas
cmp
jmp
or
jns
add
pushf
sbb
pop
mov
dec
imulb
cmpsb
inc
dec
enter
jo
rcl
jl
addb
push
into
mov
insb
sbb
or
push
cs
jnp
data16
dec
or
hlt
enter
inc
movsl
dec
pop
mov
pop
jp
stos
or
pop
leave
lcall
lods
popa
testb
xchg
cmp
addb
sbb
inc
add
mov
hlt
pop
mov
mov
repz
cmp
adc
xorb
xchg
roll
repz
fstl
jne,pn
test
inc
mov
xacquire
adc
inc
xchg
mov
push
dec
fstpt
push
adc
push
mov
fsubl
enter
or
icebp
sbb
inc
mov
mov
lock
orl
mov
jmp
or
popa
stos
popl
adc
stos
scas
jo
ficoml
adc
xor
or
mov
cld
fisttps
adcb
ss
mov
pop
into
test
std
and
pop
jmp
mov
loopne
into
mov
jnp
inc
bound
pop
xor
push
add
adc
or
mov
in
int
push
adc
mov
mov
and
jmp
add
repnz
scas
push
mov
mov
cmp
dec
fdivr
dec
cmp
movsb
cli
add
ss
xchg
pop
pop
jno
mov
es
std
cmp
inc
test
mov
mov
idivb
test
dec
cwtl
jb
push
xchg
dec
pop
jge
adc
in
shl
jg
pop
mov
std
lcall
fcmovnbe
lods
lahf
aaa
mov
pop
scas
inc
lret
roll
and
lds
loop
arpl
push
push
mov
jp
lret
add
add
xorb
add
ss
xchg
repnz
lds
stos
mov
dec
aad
cmp
push
sbb
outsb
sbb
pop
loop
ret
popf
hlt
fiadds
imul
or
subb
aaa
stos
call
iret
imul
mov
fmull
lock
jo
das
int
pop
dec
jbe
orb
add
sti
jle
out
hlt
daa
push
enter
fdivs
or
adc
sti
jmp
stc
ljmp
xor
aad
and
fsubl
pop
fsubs
cmp
lcall
in
push
adc
push
mov
je
sbb
outsb
push
mov
cmc
stos
inc
icebp
imul
ret
loope
xorb
lret
push
lea
sub
pop
sbb
xchg
jb
clc
add
and
je
xor
pop
stos
adc
and
loope
cmpsl
or
dec
jo
das
lock
sub
dec
out
xchg
ja
iret
or
lods
in
fldenv
fbstp
dec
xor
testb
shr
int3
mov
push
ja
sbb
das
adc
fs
sbb
push
push
sbb
rol
lods
jecxz
jl
pop
scas
or
xor
test
test
adc
mov
sub
je
icebp
dec
in
xchg
repnz
and
xchg
arpl
add
mov
mov
and
pop
idivb
in
movb
xchg
push
inc
cld
stos
insb
mov
test
lods
fwait
or
sbb
cmp
nop
pop
jae
cltd
pop
cld
jns
lahf
and
lcall
push
sarb
ret
jns
jg
je
sbb
insl
xor
mov
fidivs
dec
xchg
pusha
mov
loop
and
data16
adc
fiadds
rep
mov
test
push
leave
fwait
pop
mov
xor
push
out
jmp
ficoml
xchg
sbb
negl
mov
iret
mov
xor
xchg
sbb
jl
jns
jecxz
push
mov
cmp
fwait
cmpsb
mov
cmp
mov
setge
lret
inc
test
jle
mov
out
xchg
stos
dec
pop
roll
stos
jae
test
push
mov
jmp
call
mov
mov
xlat
mov
sub
mov
jae
mov
inc
stc
scas
pop
std
adc
std
inc
sub
inc
cltd
jmp
jg
mov
loopne
in
test
ret
mov
cmp
adc
jb
fidivs
scas
xlat
sub
nop
cltd
push
icebp
cmp
sub
lahf
aas
out
and
or
dec
arpl
xorb
pop
mov
pop
mov
xchg
inc
dec
inc
mov
xlat
jmp
or
sbb
into
pop
imul
cmp
je
roll
mov
in
jmp
mov
cmp
mov
lods
pop
loop
sahf
fisubrl
sbb
dec
mov
adc
add
rcrl
cmp
fsubrs
repz
jge
lods
es
mov
pop
popa
mov
lahf
mov
out
lcall
fwait
and
dec
aad
pop
xor
push
enter
inc
jg
dec
data16
icebp
cmp
xchg
ds
aad
dec
push
sub
inc
xchg
scas
jnp
and
shl
jge
xchg
sub
fistl
scas
pop
pop
and
jns
popa
cmp
hlt
mov
ret
out
cmpsb
adc
scas
stc
dec
dec
ss
jne
ss
pop
int3
sub
jno
test
int
sub
inc
xor
push
mov
es
mov
fdivrs
mov
adc
imulb
push
mov
test
adc
cltd
cli
fldt
subb
cmp
lea
xchg
das
fcmovnbe
xor
jp
cmc
test
sub
nop
or
stos
mov
stos
inc
push
cmp
sub
mov
iret
sbb
or
std
or
dec
loope
adc
call
mov
xor
lea
insl
adc
inc
mov
icebp
lcall
icebp
out
idiv
adc
daa
adc
lea
movsb
cmpsl
and
test
jp
iret
xchg
rcrl
cmp
jp
inc
jnp
daa
jbe
stc
pop
pop
rorl
mov
jbe
xor
mov
mov
lods
mov
subb
cmpsb
stos
fnstenv
daa
mov
test
iret
and
fimuls
das
jbe
mov
aad
pop
fists
call
test
push
mov
rcll
or
fdiv
dec
in
sti
test
cli
push
cwtl
ljmp
jmp
fistl
fwait
jle
mov
inc
mov
lock
add
jecxz
mov
loopne
cs
sub
xchg
xor
dec
ret
mov
sti
cmpsb
and
mov
insb
mov
fldl
push
sub
popf
mov
add
aaa
pop
dec
in
add
xor
xchg
mov
cmp
jnp
pop
xlat
cmp
inc
mov
dec
lret
sbb
dec
push
inc
dec
pop
mov
xor
mov
test
cmp
das
mov
in
scas
loopne
or
aad
dec
sbb
fsubr
sbb
and
pusha
sarb
jne
in
pop
adc
cmp
imul
imul
fs
cmp
insb
fscale
out
das
arpl
or
inc
push
gs
outsl
loop
ja
scas
cmp
mov
dec
push
lret
popf
das
mov
or
js
sub
mov
xor
cmp
jae
les
jns
mov
sub
or
dec
inc
or
inc
push
lock
and
push
hlt
in
mov
mov
faddp
lret
mov
int
mov
aad
test
pop
lea
nop
adc
outsl
inc
add
push
int
jnp
mov
dec
in
sbb
mov
inc
push
pop
inc
mov
movsl
cld
fdivrl
mov
ror
add
sbbl
in
test
pusha
or
mov
scas
std
jne
das
push
push
daa
sbb
ret
xchg
mov
pop
jnp
ret
sub
mov
dec
in
test
mov
repnz
and
fildll
popa
jecxz
lods
push
xchg
sub
outsb
inc
loopne
int
les
sbb
xor
xchg
mov
or
enter
shll
xchg
mov
adc
gs
movsb
mov
sub
out
cmp
cmpsl
sbb
pop
xchg
sub
repnz
jg
sub
mov
mov
pop
push
xchg
pushf
add
sbbb
jb
ror
add
jge
stos
sti
jb
inc
push
jnp
in
inc
cwtl
push
sub
nop
pop
xor
repnz
fwait
xor
out
stc
push
insb
xchg
adc
nop
xor
and
lods
icebp
sahf
mov
enter
fldz
shll
cmp
pop
jmp
pop
dec
stc
xor
adc
not
xchg
out
push
mov
lret
cmp
cld
ljmp
cwtl
scas
xchg
mov
inc
stc
mov
push
mov
ljmp
xor
adc
pop
and
jae
xor
dec
dec
arpl
cmp
jb
xor
sti
std
rol
rolb
aad
push
jae
adc
jg
lahf
jp
push
xchg
mov
jns
popf
and
cmp
adc
lret
mov
repz
xor
cmp
mov
jae
pop
sbb
adc
ficomps
sbb
dec
stos
mov
subb
outsb
adc
outsb
mov
out
das
lock
and
xor
int
xchg
in
fcompl
jecxz
aaa
out
cmpsl
jecxz
dec
jge
andb
inc
les
pop
sti
fs
popa
out
enter
cmp
jg
push
pop
mov
in
stos
mov
iret
mov
test
adc
cli
cmp
sbb
mov
loopne
xchg
or
jp
fdivrl
int3
add
push
xor
mov
test
xor
jp
movsb
sti
inc
leave
jl
ret
inc
mov
push
or
adc
push
add
stos
outsb
pop
ja
sbb
push
insb
std
pop
add
mov
mov
adc
clc
jge
mov
sub
out
das
xchg
into
mov
push
jbe
cld
paddusw
mov
adcl
sti
mov
sub
adc
mov
push
mov
dec
imul
jo
mov
imul
aam
stos
sbb
sbb
shl
cmp
sbb
cli
popa
mov
lods
push
test
push
fsubl
hlt
inc
adc
test
repnz
aaa
das
ret
out
xchg
in
loopne
lcall
aad
inc
fildl
ljmp
faddl
add
fisubl
jns
mov
outsl
les
jp
push
out
cmp
daa
dec
push
scas
add
push
xchg
rcrb
stos
les
nop
adc
adc
es
and
jmp
popa
jp
and
adc
lcall
js
loopne
sahf
ret
idiv
adc
adc
sti
testb
clc
js
mov
mov
lock
mov
adc
ffree
mov
xor
add
jp
mov
call
cld
shrb
sbb
mov
jo
sub
jns
stos
xlat
neg
cmp
xor
pop
mov
hlt
scas
gs
sub
ljmp
mov
cmp
adc
rcrl
sbb
stos
and
into
cmc
stc
stos
cwtl
mov
adc
imul
test
or
cltd
xor
and
dec
sbb
test
add
out
or
sbbb
and
leave
adc
ss
jnp
mov
fisubrl
and
xor
sbb
gs
stc
icebp
js
data16
adc
ret
loopne
test
dec
jmp
dec
and
xlat
in
xchg
jno
dec
loopne
xor
push
ds
incb
mov
inc
stos
imul
daa
xlat
pop
iret
fwait
sub
mov
push
flds
shr
imulb
loope
leave
call
std
rcll
jge
mov
imul
punpckldq
out
xorb
xchg
xchg
ljmp
lods
movsl
or
test
lds
add
in
xchg
add
sahf
push
data16
add
mov
lahf
jge
test
lahf
jecxz
push
stos
ljmp
fidivs
cmpsb
push
dec
and
mov
mov
lea
lret
mov
filds
xor
in
jnp
cmp
aas
dec
xchg
cmp
in
shll
push
rol
inc
xchg
xchg
xchg
mov
fwait
pop
mov
and
add
xchg
ss
sub
outsl
adc
movsb
imul
aas
sbb
cwtl
inc
mov
jmp
xor
push
mov
ficomps
mov
and
mov
adc
mov
andl
inc
stc
sub
fnstenv
jg
mov
adc
idivl
lahf
dec
add
ljmp
js
cmpsb
int
jne
dec
pushf
aad
push
or
leave
int
and
jnp
mov
movsb
loop
bound
mov
scas
and
sahf
sub
cmp
aas
push
jns
mov
std
sub
nop
or
dec
pop
hlt
sbb
popf
add
mov
pushf
mov
mov
fistps
stos
fiadds
inc
test
sti
pop
xor
xor
jecxz
mov
mov
sbb
xchg
in
push
lret
jmp
sti
loop
cmp
add
push
inc
shll
push
call
js
push
sti
loopne
sbb
add
rolb
repz
jmp
mov
push
sub
scas
cmp
jmp
xor
add
inc
adc
xor
cmp
out
lahf
shrl
lock
mov
cmp
mov
aad
sub
sti
loope
insb
das
imul
fsub
mov
inc
int3
jnp
arpl
sub
imul
fnstsw
sarb
cmpsl
loopne
sbb
jecxz
adc
repz
jno
sub
scas
mov
addl
arpl
or
outsl
mov
inc
mov
jge
inc
push
sbb
cmpw
push
ret
sahf
sub
sbb
add
jns
shr
xor
or
push
daa
pop
bound
es
pop
shlb
test
jmp
sbb
add
mov
add
stc
jne
jle
inc
int
mov
jo
inc
movsl
add
mov
pusha
xchg
push
sti
aad
adc
call
jno
push
aad
mov
and
aaa
dec
lret
or
xchg
shl
loopne
inc
add
dec
dec
out
jb
push
jge
dec
lds
dec
outsb
and
shr
icebp
or
sub
scas
sub
push
std
push
pusha
xchg
cld
divl
cmp
mov
mov
ret
mov
dec
jno
iret
sbb
cltd
fists
test
sarl
pop
and
iret
in
lcall
xchg
popf
pushf
cmp
ja
xor
sbb
adc
cmp
test
mov
sub
push
mov
add
popf
je
jbe
push
add
mov
cmp
js
sbb
pop
jge
pop
in
inc
adc
adc
cltd
mov
ljmp
pop
in
mov
scas
pushf
jbe
inc
mov
outsl
and
outsl
fstl
mov
sub
push
fcos
std
gs
xor
mov
push
mulb
enter
sti
lods
fsubp
js
les
cmp
adc
arpl
out
jmp
push
ds
adc
daa
test
lcall
sub
sbb
stos
dec
inc
sub
cltd
inc
mov
sbbl
xor
pop
scas
push
pop
cld
imul
xor
xor
cmp
mov
dec
sbb
fisubs
int
mov
cmpl
sarl
add
mov
xor
mov
pusha
shrl
xchg
xor
insb
cmp
push
mov
push
jecxz
sbb
xorl
mov
lock
jne
pusha
and
or
sub
pop
sbb
pop
xchg
movsl
cli
cmpl
fstpt
inc
repz
lods
cmc
cmp
incb
jmp
mov
mov
aaa
repz
add
out
and
dec
cli
dec
lcall
xor
paddd
mul
fs
push
jnp
in
call
mov
mov
cli
jae
insb
inc
xchg
shrl
mov
sahf
lds
inc
and
push
cld
jmp
push
cwtl
inc
daa
test
jge
sub
int
ss
xchg
and
int3
adc
add
jne
test
and
xor
inc
xor
jmp
inc
insb
inc
mov
outsl
mov
jmp
pop
lahf
les
mov
ficoms
pop
jno
xor
ret
push
pop
inc
fnstsw
cmp
loop
and
mov
loopne
dec
xorl
pop
mov
cmp
and
push
mov
sbb
mov
xor
int3
mov
inc
xchg
repz
gs
dec
lcall
in
in
pop
xlat
push
sbb
mov
aad
mov
lock
sbb
xchg
das
or
lock
iret
int
push
push
xchg
push
and
inc
sbb
out
and
into
pop
loopne
cmp
mov
test
pusha
jno
inc
jl
into
mov
cld
mov
out
aaa
sbb
aas
icebp
in
sbb
nop
loop
jp
daa
cwtl
pop
xor
jecxz
divb
or
xor
mov
lds
pusha
mov
pusha
cld
roll
xchg
jecxz
fcomps
sahf
add
lret
cmc
pop
push
mov
cmp
xor
xchg
outsb
das
xchg
imul
cmp
or
test
in
insl
sbb
cld
fwait
cmp
addr16
jg
sub
out
mull
xchg
pusha
out
cmp
sbb
xor
fdivr
dec
push
nop
sbb
jb
pop
pop
dec
shrb
cld
jo
inc
ja
clc
sahf
lock
mov
arpl
movsb
adc
pop
imul
inc
or
insl
inc
fcomps
cs
or
pop
pop
in
cmp
add
movsb
notb
xlat
cwtl
adc
bound
sub
shrl
inc
or
adc
or
adc
add
das
adc
push
mov
xchg
pop
lods
ret
sub
adc
inc
xor
xor
and
lret
in
pop
mov
pop
jmp
cld
push
lret
push
jbe
mov
lock
dec
jne
sub
arpl
ja
incl
aas
data16
aaa
decl
sub
xor
sub
popa
adc
rorl
cmp
sub
repnz
mov
insb
xor
mov
ds
fisubrs
push
imul
in
push
in
sbbb
dec
jl
mov
jge
cmp
mov
dec
cmp
insb
icebp
jmp
sub
push
inc
hlt
jo
pop
into
scas
fdivrs
inc
xor
sub
test
jg
inc
and
loope
das
and
cld
mov
and
lock
push
insb
enter
xor
bound
adc
scas
adc
mov
sub
push
ds
or
ja
lea
mov
push
fdivrl
xor
or
xchg
stc
lret
fst
sub
fisubrs
insl
xchg
outsb
aad
scas
rcr
or
jmp
pop
in
jnp
mov
lahf
jne
sti
add
inc
pop
mov
pushf
inc
mov
push
mov
xchg
js
aam
xchg
out
xor
jmp
cmp
xchg
popf
adc
adc
lret
sbb
cmpsl
out
test
inc
adc
push
jnp
add
pop
int
xchg
cmc
test
sbb
xor
out
ret
jnp
cld
cmpsb
add
mov
orl
sub
andl
inc
sub
jmp
clc
mov
adc
inc
lret
data16
add
mov
shl
insb
xor
or
dec
mov
push
xlat
sbb
aad
stos
and
sarb
es
aaa
cmp
call
loopne
les
out
arpl
arpl
cltd
insb
jnp
inc
div
outsb
sub
sub
pop
aas
xchg
add
push
pop
fcoms
mov
jno
out
xchg
sahf
jl,pt
mov
dec
stos
push
xchg
cmp
leave
mov
jb
fs
sub
loop
movsl
daa
flds
icebp
jo
das
pop
pop
pop
dec
xchg
xor
inc
xor
push
mov
pop
outsl
and
jmp
xor
cmp
lret
repnz
add
adc
div
or
stc
jne
inc
stc
aad
add
or
mov
pop
adcl
mov
push
les
sub
gs
movsl
rorl
cltd
testl
sbb
jmp
xchg
push
adc
and
xchg
test
insb
pop
xchg
movsb
scas
xchg
mov
mov
scas
pop
adc
roll
adc
inc
aam
ds
cmpsl
push
mov
jmp
ja
push
js
add
jl
jns
addl
int
mov
popa
and
push
jg
or
cwtl
repz
jmp
insl
jmp
out
jno
or
imul
arpl
cld
dec
fists
xor
daa
ror
in
jl,pn
sbb
stos
xlat
in
mov
xchg
cmovle
lods
popa
daa
push
lcall
call
in
idivb
sub
add
push
sbb
in
gs
les
add
popa
mov
mov
mov
inc
or
jbe
dec
xor
push
mov
shll
pop
pop
ret
imul
cmp
popf
iret
cmp
test
xchg
daa
inc
aad
fmull
sbb
ljmp
sub
push
pop
sbb
jno
adc
sub
xor
mov
loopne
pop
andl
rcl
mov
test
mov
mov
mov
shrb
xchg
pop
jecxz
xchg
out
xor
int
sub
cmp
pop
mov
sahf
push
pop
adc
adc
inc
outsl
fldl
cmpsl
add
cmc
out
mov
sbb
mov
inc
mov
out
xor
insb
cmp
cmp
pusha
sub
test
cmc
cld
inc
ss
jnp
fisubrl
hlt
clc
fbstp
or
imul
mov
push
inc
lahf
es
or
push
xor
push
adc
andl
push
shrl
mov
cltd
jg
cmpsb
test
stos
rep
mov
addr16
jl
cld
iret
ss
ret
inc
lret
cltd
rol
mov
jmp
mov
push
in
clc
xchg
add
pop
test
pop
clc
ficoml
jbe
add
repz
pop
test
xchg
cmc
movsl
mov
sahf
dec
xchg
inc
mov
mov
outsb
in
ret
je
clc
pop
add
out
int
cmp
sahf
popl
ret
or
jl
push
roll
les
ds
sbb
outsl
gs
das
aaa
into
inc
add
fidivrl
cmp
jb
pop
adc
leave
leave
pop
outsb
fsubrl
bound
dec
jmp
add
idivl
mov
jo
rcll
mov
popf
fidivrs
notl
jp
add
cmp
inc
cmpsb
jns
lods
loope
adc
rcll
and
in
lea
xchg
jl
and
or
xor
adc
or
inc
sub
sbb
inc
mov
mov
jnp
dec
add
inc
xchg
mov
pop
sub
jg
je
jecxz
jle
dec
out
and
daa
sbb
inc
sbb
push
push
xor
xor
stos
push
jl
cmp
inc
jl
add
stos
mov
xorl
mov
nop
pop
push
and
or
cmp
pop
sbb
sub
cmp
leave
dec
test
or
rolb
mov
cmc
rcrb
mov
pop
out
movsb
mov
mov
xchg
adc
outsb
mov
mov
add
xchg
push
mov
stos
xlat
inc
stos
lahf
loope
and
cli
movsl
inc
hlt
pusha
cli
mov
cmpl
or
repnz
ljmp
jae
mov
or
in
dec
pushf
lcall
fwait
lock
dec
cli
mov
cmp
fimull
mov
fcomps
sub
xor
mov
mov
in
jbe
je
jle
sub
enter
fucomip
rep
loopne
dec
sbb
shll
jge
xchg
xchg
sub
mov
and
int3
jne
mov
fs
test
push
movsb
and
cmp
leave
pop
fisttpl
cltd
push
mov
pusha
ljmp
shl
sbb
cwtl
and
insl
fstps
mov
icebp
mov
in
movsb
sub
push
stc
xorb
in
xor
xchg
or
sub
mov
cmp
add
out
sahf
mov
sbb
call
and
and
add
xor
cmpl
mov
test
addl
mov
push
ret
fdivrl
out
add
jmp
pop
inc
push
orl
outsl
imull
fiaddl
push
fistpll
adc
enter
and
pop
add
fxch
inc
jmp
sub
sub
out
mov
cs
imul
jo
movsl
insl
sbb
lock
sub
notb
cmp
pop
push
lods
mov
pop
imul
jae
push
and
dec
xchg
sub
test
add
inc
es
sbb
out
and
cmp
in
outsl
lret
lahf
push
mov
aas
mov
lods
popf
cltd
hlt
mov
push
cmpsb
add
add
jo
push
cmp
pop
jae
out
and
sub
mov
and
xchg
xor
aad
fwait
xchg
js
lods
mov
scas
and
xchg
scas
or
adc
jmp
fldcw
cmp
xchg
lods
xchg
lods
dec
test
cwtl
not
into
or
jb
dec
add
out
lret
push
cmpsl
call
jge
mov
add
lods
dec
lds
and
fsubs
call
sahf
jmp
out
lret
pop
insl
adc
cmp
adc
xor
jp
and
mov
cltd
fs
mov
cmp
xchg
gs
push
sbb
jae
nop
or
adc
mov
adc
pusha
mov
dec
lock
mov
xchg
movsl
add
ljmp
movb
daa
insl
push
or
push
cmpsl
pop
jmp
xchg
inc
insb
push
xorb
test
pop
mov
or
lahf
and
pop
push
mov
jmp
inc
icebp
fldcw
inc
fwait
sbb
mov
add
inc
fwait
add
fcmovb
mov
nop
pusha
fldt
andl
mov
cwtl
inc
mov
or
inc
cmc
mov
int3
fdivs
and
cmc
xchg
subl
aaa
pop
bound
pop
sub
ljmp
movsb
test
icebp
daa
jle
aad
ror
mov
push
jne
and
or
jnp
jecxz
psllw
sbb
movsl
lods
test
stos
mov
ja
inc
pop
pop
mov
cmp
inc
out
xorb
xchg
or
in
ljmp
das
mov
mov
pop
fmul
mov
mov
adc
add
or
pop
adc
sbb
clc
and
xchg
adc
mov
dec
repz
inc
push
mov
dec
xchg
sbb
push
aad
mov
dec
js
lahf
mov
jb
jl
sarb
jno
aas
aam
sub
shl
pop
and
jge
inc
fstp
inc
mov
fstps
push
mov
push
cmp
and
les
jmp
and
mov
xchg
rcl
ficompl
loop
or
sbb
jb
xorb
mov
mov
push
mov
mov
mov
jmp
ds
movq
jmp
ret
pop
loop
in
into
ja
les
adc
mov
test
sub
xor
std
fidivl
stos
pop
xchg
mov
mov
adc
ja
mov
lret
sub
or
adc
pop
mov
jb
sti
loope
imul
sarl
cmp
push
add
dec
insb
mov
and
pop
call
jno
and
jg
add
outsb
outsl
add
sub
in
bound
or
xor
movsb
movsb
or
negb
xor
aam
mov
frstor
out
ljmp
enter
fwait
inc
cmp
ffree
inc
inc
icebp
jmp
jl
jmp
sub
xchg
push
test
call
loope
cwtl
js
jl
cld
cmp
or
ljmp
test
jae
or
add
mov
repz
divl
and
sub
rcrl
xor
xchg
pop
lods
mov
cmc
repnz
mov
pop
pop
scas
inc
push
xor
jmp
ror
lock
mov
pop
fdivrl
push
xchg
and
in
xchg
mov
add
and
bound
or
xchg
push
pop
shrl
mov
imul
mov
std
insb
xchg
and
adc
dec
movsb
cmc
ss
cmpsb
xchg
ffreep
out
xor
xchg
jne
cmp
inc
push
in
add
divl
xor
lcall
movsl
insl
fiadds
jbe
and
jnp
pushf
loop
adc
mov
push
or
push
lods
sti
mov
jne
adc
xor
xchg
shlb
mov
mov
jge
lcall
aas
test
dec
add
cmpsb
jb
jle
mov
jbe
and
push
pop
dec
jbe
jno
fwait
mov
sbb
pop
pop
xchg
bound
aad
addr16
andl
xchg
jo
pop
mov
nop
test
pop
sub
jns
inc
dec
jmp
in
add
mull
lret
sbb
rcrl
adc
dec
imul
add
repz
push
popf
test
xor
dec
xchg
ss
cmp
sbb
pop
insl
mov
mov
inc
jge
push
cmp
xchg
lret
xchg
sub
shll
inc
and
or
or
xor
sbb
ja,pn
loope
aad
loop
jmp
inc
add
iret
sbb
test
ret
cmpsb
xchg
mov
push
out
inc
adc
cmp
outsl
sarb
jg
lods
sbbl
out
push
pop
scas
mov
and
or
daa
notl
inc
lods
lds
push
repz
ds
add
push
repz
push
pop
pop
in
test
push
jp
and
mov
and
sbb
ret
mov
lock
stc
out
enter
mov
popf
push
test
or
jb
sbb
add
or
and
push
repz
lea
inc
pop
daa
shll
addr16
dec
mov
out
cwtl
lods
and
stos
out
mov
icebp
xor
out
je
sbb
jnp
lds
enter
mov
in
mov
jne
mov
out
loopne
cmp
adc
xchg
cmp
frstor
shrb
pop
adc
xlat
xor
pop
imul
aas
hlt
repnz
add
sub
mov
sar
cld
aas
cs
daa
xchg
mov
inc
inc
push
add
and
pop
outsl
jp
pop
push
mov
push
mov
or
stc
addr16
iret
jne
movsl
fptan
pop
stos
dec
sub
nop
mov
mov
pop
movsb
or
pop
cmp
add
pop
out
add
cs
push
push
arpl
enter
sbb
pop
in
mov
rcl
cmp
rcl
push
sbb
inc
test
popf
jae
inc
daa
bound
xor
sub
cwtl
hlt
add
outsl
xor
fldt
adc
pusha
push
sbb
pop
stos
popf
pusha
cmpsl
jo
lahf
in
adc
jle
sub
test
jge
imul
nop
popa
xchg
pop
mov
lock
mov
fistpll
lea
dec
xchg
push
mov
out
js
imul
int
ds
ud1
ret
insb
in
into
les
xchg
dec
adc
inc
jmp
aas
in
loopne
movsb
in
aas
adc
or
aad
out
xchg
in
lock
enter
les
pop
lret
js
adc
jnp
jo
dec
jo
adc
push
jp
add
in
sbb
mov
test
sub
add
xorl
lods
ss
cwtl
repnz
shlb
leave
or
dec
lahf
and
and
js
imul
push
cmp
push
cmp
pop
bound
out
mov
ja
lds
cmpsb
pop
orb
aas
repnz
or
xor
pusha
movsl
and
dec
ja
and
lds
das
movl
xlat
sub
jne
cmp
sub
jnp
xchg
mov
cmpsl
stc
inc
xchg
or
insb
sbb
xor
mov
adc
mov
mov
lret
sbb
std
sti
adc
loop
mov
popf
js
add
rcll
stc
cltd
mov
stos
add
inc
jns
ljmp
push
stos
adc
jo
push
push
adc
mov
jmp
lock
fidivrs
movsl
daa
adc
mov
lods
int3
xchg
popf
hlt
cmp
or
or
aad
xchg
jle
out
lods
mov
stos
mov
mov
xlat
jecxz
inc
orb
aaa
xor
mov
lret
mov
jbe
cmpsl
lea
jmp
sub
fcompl
mov
cli
jbe
stc
fwait
mov
leave
nop
mov
fcmove
lahf
cmpsb
jle
mov
and
xchg
inc
std
push
mov
dec
imul
add
push
push
repnz
add
adc
fsubrs
add
cmp
jecxz
push
jp
dec
inc
mov
pop
jp
ss
mov
cmpsb
lret
rolb
stc
jmp
clc
lods
repnz
push
push
stos
stos
repnz
lods
or
dec
stos
mov
mov
shrl
test
xchg
mov
xchg
neg
sahf
std
inc
jg
xor
enter
inc
cmp
xor
sub
pop
addl
clc
insl
or
pusha
mov
or
lods
imul
sbb
mov
lcall
mov
inc
sub
outsl
adc
jge
cs
sti
push
and
xchg
repz
inc
in
aas
mov
xlat
mov
sti
sbb
push
jecxz
dec
inc
mov
scas
sbb
xchg
inc
pop
mov
xor
push
mov
dec
ja
lahf
push
cmpsl
lods
pushf
push
push
lods
or
jmp
jg
mov
shll
addr16
aam
or
lods
rorb
xchg
lods
cwtl
mov
push
in
stos
add
mov
hlt
jmp
dec
lret
or
fs
or
js
dec
pop
mov
cli
loopne
push
lds
push
and
push
sahf
iret
xchg
dec
imul
insb
dec
xchg
xchg
mov
popa
push
xor
int3
rorl
ffree
not
daa
push
pop
jae
cltd
sbbl
xchg
xor
adc
sbb
sahf
jb
push
pop
and
sub
js
add
rolb
jge
les
test
sub
aaa
pop
call
push
pop
pcmpgtb
pop
xlat
cmpb
and
push
add
incl
mov
faddl
pop
outsb
or
sbb
testl
mov
cmpsl
xor
into
jmp
mov
push
sbb
in
xchg
fcoml
int3
adc
mov
int
nop
inc
jg
sub
sub
xor
inc
pusha
pop
xlat
adc
sbb
mov
rcr
popf
fisttps
push
pusha
leave
mov
lea
inc
push
pop
adc
stos
sbb
add
fbld
adc
cwtl
sbb
lds
or
int
or
pop
ret
cmp
add
call
fdivl
adc
dec
push
cmp
data16
out
pop
sbb
decl
sti
xor
sub
test
scas
iret
add
movsl
out
jmp
or
push
sahf
sbb
gs
bound
leave
aaa
mull
dec
les
mov
loopne
fsubr
nop
outsl
in
push
adc
movsl
jbe
xchg
push
js
mov
addr16
fisubl
out
neg
adc
xchg
sti
and
ja
movsl
ljmp
cmc
pop
test
and
add
adc
and
xor
decl
daa
mul
dec
mov
push
fisttpl
sarl
inc
dec
data16
sbb
inc
xor
pop
in
outsb
cmp
or
adc
repnz
fwait
jne
adc
or
jno
dec
push
mov
loop
cmp
xchg
pop
mov
jp
jno
and
pop
jge
mov
cmp
cmpsb
jecxz
das
push
mov
mov
sub
mov
ss
fisubrs
test
inc
popf
mov
and
sub
cmp
jle,pt
mov
ds
fwait
xchg
cmovae
inc
dec
adc
inc
stos
insb
xchg
leave
bound
mov
mov
dec
jne
sar
dec
xchg
stc
adc
lds
in
test
in
pusha
sub
loopne
xchg
fwait
les
loope
push
inc
inc
ljmp
lods
ret
jg
fdivl
mov
xor
gs
inc
xchg
add
mov
mov
shr
out
sbb
or
dec
fnstenv
sbb
sub
scas
push
xchg
data16
les
xchg
xchg
aas
adc
mov
jecxz
xchg
xor
cmp
push
jg
loope
mov
dec
jbe
in
xor
lods
add
jle
sbb
push
pop
das
loopne
das
push
fiadds
cmpsb
sahf
adc
popf
dec
pop
push
lahf
fucomip
xor
mov
loop
shlb
pop
pop
mov
add
pop
daa
add
pop
icebp
xor
adc
call
lea
in
shrb
shl
lret
stc
mov
or
out
cmp
xor
or
add
cmp
icebp
mull
shl
scas
adc
daa
sub
test
or
pop
push
sub
popf
inc
nop
jp
push
xchg
adc
cmpl
add
fldl
lea
leave
shrl
add
int3
push
decb
and
or
std
mov
les
add
xor
inc
sub
mov
ja
insl
sub
dec
xchg
sbb
arpl
push
xchg
addb
repnz
jbe
mov
xchg
popa
adc
roll
or
xor
shlb
repz
adc
or
push
sti
or
stos
xchg
int3
mov
sbb
xchg
push
push
dec
aad
std
int3
sbb
xor
clc
pop
pop
xchg
sbb
or
shll
jg
inc
sbb
fidivl
adc
pop
xchg
xchg
and
pop
sub
ja
or
dec
test
into
fwait
and
sbb
cmc
sbb
adc
sbb
rcll
xchg
std
aas
in
into
enter
cmp
rcll
push
out
jo
imul
dec
push
rcll
mov
sbb
ja
inc
pusha
and
sub
insl
or
jge
jp
add
and
lods
lea
je
pop
pop
mov
sti
cmp
and
pop
aam
test
test
outsl
adc
stos
or
js
hlt
push
sbb
faddl
pop
mov
lcall
xchg
test
push
mov
pop
ljmp
cmpsl
in
cmc
and
enter
in
xchg
cltd
and
mov
sub
stos
jbe
int
add
outsl
mov
add
mov
loope
es
xor
imul
je
scas
jecxz
jle
push
push
fstpt
pop
cmp
push
jmp
pop
or
add
test
adc
lock
pop
dec
cmp
pop
inc
orl
or
loope
aad
pop
stos
fmull
repnz
mov
jl
add
bound
push
cs
ljmp
xchg
and
lods
inc
pop
jle
and
and
lds
add
les
out
cmc
and
add
pop
fstpt
add
inc
push
shrl
mov
mov
leave
cmp
push
add
arpl
pop
mov
shl
pop
inc
ficoml
push
getsec
and
push
arpl
mov
pushf
imul
inc
pop
scas
adcl
jmp
cwtl
mov
test
in
xchg
int
andl
stc
mov
insb
repnz
pop
jge
push
add
push
dec
imul
push
and
jb
adcl
cmc
cmp
jecxz
mov
pop
cli
cmc
adcb
adc
cmp
jp
adcb
ja
sbb
icebp
ja
shrb
xor
push
mov
stc
push
push
push
leave
insl
lcall
sarb
jae
pop
pusha
aad
call
repz
jnp
pop
test
adc
push
jmp
xor
cmp
fcomi
push
pushf
push
jp
jns
mov
sbb
insl
repz
adc
inc
xchg
rclb
movsl
mov
cmc
pop
in
pop
test
enter
leave
xchg
xchg
sub
inc
mov
es
and
mov
push
ljmp
das
imul
aad
ja
icebp
push
dec
pop
mov
mov
les
jb
dec
adc
mov
lods
cmp
and
outsl
je
dec
pop
ret
pop
int3
jecxz
stos
stos
outsb
test
cmpsl
les
sub
mov
adcb
sbb
ror
mov
fiaddl
or
mov
sarb
pop
les
test
cmp
mov
out
add
cltd
jecxz
cmpsb
mov
xchg
sahf
mov
mov
mov
imul
movsb
pop
add
sub
fadds
imulb
inc
pop
mov
pop
scas
inc
inc
jmp
addl
out
lods
neg
sbb
xchg
loop
sbb
jmp
out
lcall
sbb
push
and
adc
mov
and
enter
outsl
push
mov
subb
and
lret
push
cmpsb
and
stos
or
sub
clc
sti
mov
jae
outsb
fcmovne
xor
xchg
movsl
xchg
cmp
jb
mov
ja
outsb
push
xor
ds
gs
sub
push
fisttpl
jb
gs
stos
ljmp
fnstsw
in
insb
pop
arpl
fimuls
dec
mov
jmp
inc
into
inc
popa
dec
adc
hlt
adc
loope
mov
push
and
pop
scas
mov
mov
nop
mov
cltd
imul
mov
dec
aaa
aas
fisubrl
js
cmp
lret
cmp
outsl
add
mov
fiaddl
or
inc
mov
pusha
cmp
jp
lds
repnz
pop
jecxz
cmp
push
bndldx
test
rcrl
mov
aaa
or
xlat
loopne
jnp
inc
popa
mov
adc
mov
sbb
icebp
jne
shr
mov
jle
push
mov
or
imul
movsl
lcall
xchg
nop
adc
jnp
xor
add
jno
mov
clc
test
add
cmpsb
ljmp
iret
subb
push
push
cmp
ficoms
shll
mov
mov
xchg
leave
cmp
daa
sahf
stc
and
scas
fidivrl
mov
jg
and
cwtl
nop
fsqrt
stos
aad
jbe
jge
push
stos
pop
test
repnz
icebp
push
jne
stos
mov
sub
mov
lock
add
push
push
idivb
cmc
outsb
jl
xor
jl
jbe
imul
pop
inc
or
lea
and
mov
fisttpll
repnz
movsb
dec
arpl
sub
addr16
cmpsl
insl
adc
scas
mov
xchg
imul
in
mov
pop
xor
cmp
inc
scas
cs
aam
scas
add
ret
add
push
movsb
jmp
mov
pop
nop
psrlq
hlt
out
outsb
pop
ret
adc
mov
inc
pusha
push
jno
rcrb
push
dec
aas
jmp
rcrb
fwait
hlt
mov
mov
pop
mov
popa
inc
and
add
mov
push
cs
jb
adc
mov
xor
jne
cmp
lds
lods
adc
push
inc
mov
push
addr16
push
mov
dec
pop
xchg
in
mov
and
sub
ss
adc
pop
xchg
popa
data16
add
xorl
in
dec
jne
fwait
dec
aam
lret
inc
pop
je
das
sbb
scas
dec
aam
dec
add
sti
push
mov
ret
loop
imul
xor
lahf
mov
js
es
adc
dec
add
jg
mov
cld
ret
fmuls
sub
sti
nop
mov
inc
jae
xor
mov
loope
cmpsb
movsb
push
xchg
push
jl
sub
push
scas
inc
shll
aaa
es
mov
lahf
je
push
jle
movsl
cmp
mov
mov
lock
addr16
sbb
mov
aam
fists
fstpt
cmp
out
add
rorb
sub
fildl
or
rorl
jg
inc
mov
jge
sub
lea
int
and
xchg
or
fsubrs
cmpl
rclb
cld
sub
rolb
push
adc
sub
inc
xchg
les
xor
adc
jl
lahf
push
and
cmp
sub
xlat
mov
and
add
xor
add
xor
rcrl
bound
adc
in
jbe
rcl
rolb
inc
notl
outsl
push
push
lock
cltd
dec
jae
cmp
aas
int3
sub
push
push
push
sub
mov
movsb
call
jp
shrb
movsl
inc
loope
inc
aam
jecxz
adc
adc
out
push
fcmovne
ljmp
in
add
push
insb
jnp
dec
jecxz
xchg
and
out
cmpsb
sbb
mov
ret
xor
mov
mov
jnp
lret
lret
pop
cmc
jae
movsb
mov
xchg
mov
sti
pop
clc
hlt
jg
xchg
push
mov
mov
cmp
xchg
sti
xchg
inc
mov
lea
bound
adc
mov
jmp
jmp
cmp
stos
mov
pop
xchg
sti
fidivs
mov
sub
add
push
mov
ss
sbb
mov
popf
hlt
repnz
sub
sub
mov
js
mov
mov
cmc
addr16
icebp
xor
cli
mov
jle
xchg
inc
push
into
mov
dec
inc
fcoml
xchg
adc
pop
xchg
ret
rcrb
mov
mov
hlt
push
dec
and
repnz
xor
push
std
jmp
mov
xchg
add
in
out
push
add
cmp
inc
ljmp
fnstcw
xor
rolb
inc
movsl
push
xor
dec
les
pop
inc
push
adc
out
xlat
pop
mov
sub
pop
pop
es
jns
add
push
jns
mov
cmp
sbb
dec
sbb
fsqrt
pop
and
xchg
lcall
add
movsb
lea
push
lods
pop
sub
lea
out
adc
outsb
shl
ljmp
add
rcll
jmp
push
jp
dec
test
in
and
roll
stos
test
dec
adc
sub
xor
mov
cmpsl
in
ficoml
dec
aas
ret
mov
clc
mov
push
stc
outsl
stos
orb
mov
stc
mov
stos
js
call
fxtract
adc
jp
ret
mov
xchg
xchg
in
out
loopne
inc
test
pop
in
mov
mov
sub
repnz
fidivrs
mov
out
or
push
stc
mov
cld
mov
imulb
pop
cmpsb
scas
xor
je
jmp
push
lock
mov
pshufw
nop
inc
mov
ret
in
shl
push
jg
cwtl
dec
xorb
out
sahf
mov
dec
arpl
add
mov
sub
aaa
adc
fistl
cmp
fstpl
add
imul
pop
js
sbb
mov
outsb
pushf
jmp
pop
aam
jl
fs
sub
jp
rcrb
js
loope
movsb
jl
push
cmpsl
cmp
jg
mov
cld
rcl
les
mov
imul
out
shll
mov
or
cmp
sbb
arpl
push
mov
xor
andl
adc
mov
mov
jo
test
ret
scas
popf
rcrb
pop
or
bound
sub
and
lcall
jbe
add
ja
aam
aas
repnz
mov
cmpsb
add
sub
sub
stos
mov
push
fsubp
icebp
lods
std
js
hlt
adcb
inc
imul
or
fldcw
mov
adc
stos
push
push
movsb
sub
das
fnstenv
mov
lock
push
pop
cltd
sub
and
test
sub
mov
aam
testb
outsb
outsl
cmp
adc
mov
push
out
inc
lock
cmp
dec
xchg
stos
cs
push
sub
jnp
dec
cmpsb
xlat
pop
cmp
pop
push
aad
loop
xchg
aam
push
jmp
ret
pop
xchg
jmp
mov
repz
scas
sub
in
sbb
fiaddl
xchg
hlt
or
pop
outsl
dec
rclb
dec
sbbl
push
sub
mov
cld
pop
out
out
pop
lock
or
sbb
mov
loope
pop
cmp
icebp
cmpxchg
not
jge
sbb
call
repz
add
mov
adc
je
fldl
test
test
stc
xchg
mov
xor
imul
testl
add
lods
xchg
stos
icebp
mov
mov
add
cmp
aad
mov
and
push
outsl
cmp
int3
jmp
sarl
arpl
adc
out
fnstenv
shl
in
sub
xor
xor
mov
in
sub
dec
jb
cli
cmp
je
cmp
push
sbb
movsl
repnz
int
daa
jg
or
or
lcall
jmp
arpl
lea
js
nop
nop
inc
sbb
in
lock
sbb
dec
inc
popa
int
loopne
add
jp
out
test
imul
clc
jmp
punpckhbw
and
shlb
lret
or
out
or
out
xor
inc
es
dec
aad
fnstenv
hlt
mov
out
in
inc
xor
xchg
popf
test
add
repz
add
test
outsb
pop
lock
cmpl
jo
or
sub
fmul
data16
pushf
inc
dec
je
test
cmp
jge
xor
mov
xchg
inc
mov
jne
cli
sbb
add
jp
mov
push
inc
popf
cmp
mov
incl
inc
mov
pop
int
push
in
icebp
aad
cmp
push
ds
add
add
ret
daa
pop
sbb
pop
filds
and
or
jmp
negb
mov
fiaddl
ljmp
mov
dec
dec
cli
xor
cmp
loopne
mov
call
ds
pop
daa
lds
cli
nop
push
jl
sub
js
aas
sbb
mov
movsb
mov
jge
push
int3
js
in
cmp
sbb
adc
loop
les
dec
push
sbb
popf
fists
mov
fwait
cmc
ds
sbb
dec
lock
orb
sbbb
jecxz
iret
ds
push
pop
and
lds
mov
jbe
pop
imul
xchg
sbb
cmp
jge
mov
cmp
lcall
jno
insb
cmpsl
jo
arpl
daa
enter
ret
xchg
inc
jmp
loop
mov
sub
sbb
lock
pop
pop
push
or
xor
jnp
add
jnp
das
or
jno
xor
daa
cltd
repnz
fmuls
pusha
aam
jnp
push
addr16
mov
mov
mov
out
cmpl
cmp
pop
sub
xor
lcall
fnsave
mov
shll
push
adc
lret
rcl
je
mov
cmpsb
cltd
add
fsubrs
cli
and
es
test
pop
sub
faddp
jns,pn
lret
clc
jb
xor
rorb
sub
inc
xlat
pop
pop
fidivl
imul
je
push
xorb
fninit
cmp
loop
je
mov
adc
fdivs
enter
rclb
mov
sbb
outsl
fisubrl
sti
mov
clc
movsl
mov
jl
push
outsb
lret
out
dec
ficompl
popl
and
and
clc
sbb
fcompl
push
ficoml
dec
push
pop
fsts
mov
std
gs
inc
xor
jbe
shl
xlat
jg
cmp
es
je
dec
or
mov
movsl
pop
pop
xor
pop
shlb
mov
sub
add
dec
push
add
or
sub
pushf
mov
push
mov
xor
ficomps
dec
sbb
mov
rcll
pop
mov
jle
fs
dec
mov
dec
loop
fwait
out
inc
jmp
in
jle
xlat
push
or
cmp
jge
clc
data16
add
mov
mov
shlb
int3
jmp
mov
push
jmp
sub
inc
xor
cmpsb
mov
mov
in
push
mov
mov
mov
repnz
push
mov
push
hlt
cmp
cltd
scas
xchg
cli
scas
in
fwait
mov
leave
mov
ljmp
jbe
mov
inc
inc
lds
pop
fs
inc
cmp
lret
mov
popf
jecxz
pop
and
andb
xor
push
mov
addr16
mov
cltd
fsubr
sub
push
jp
scas
test
lods
xor
xor
mov
outsb
lret
fwait
and
mov
loope
sub
add
xor
cmp
jle
push
aas
lahf
in
xchg
xchg
lods
push
mull
sahf
cmp
sub
sub
sub
mov
sbb
in
xchg
or
jecxz
ss
out
xor
cmpsl
and
mov
and
xor
sti
sub
lods
cmp
sbb
movsb
fstpl
das
mov
mov
ds
cmp
xor
push
int
dec
inc
lret
adc
jo
mov
stos
cltd
or
andb
xor
imul
cmp
fldl
mov
mov
mov
mov
movsl
pop
dec
push
lods
mov
pop
xor
xchg
gs
jb,pt
in
and
jnp
dec
sub
mov
sbb
and
sub
scas
fstpt
lcall
fcompl
jp
aas
int3
lahf
adc
insl
pop
ficoml
xchg
inc
int
data16
mov
mov
inc
xchg
jg
mov
mov
inc
and
ja
mov
push
shlb
sbb
pop
ds
mov
lock
movsb
adcb
cltd
aaa
add
inc
lock
adc
cld
cmp
and
ret
xchg
clc
jnp
dec
outsb
jne
sbb
add
je
xchg
jnp
and
sbb
aad
or
cs
jo
icebp
test
in
add
aam
cmc
clc
mov
push
xchg
add
aaa
cmp
faddl
jae
jo
lea
pop
subl
jl
jmp
int
sbb
daa
lods
inc
push
mov
out
jge
lahf
sbb
mov
dec
clc
sub
and
mov
cvtps2pi
and
clc
dec
adc
and
scas
mov
addr16
out
in
fidivs
test
pushf
jmp
inc
and
shll
xchg
leave
pop
addb
arpl
nop
dec
inc
and
inc
negl
and
inc
mov
sub
lret
cmp
xchg
mov
fstps
mov
stc
mov
push
je
inc
xor
fs
sbb
shrb
mov
mov
ficompl
mov
jmp
xchg
xchg
or
repz
xor
push
and
or
lret
jp
ja
popa
lret
rcrl
outsb
or
repz
inc
pop
mov
lret
xchg
and
mov
ja
nop
shlb
cmp
decb
add
cmp
jnp
pop
ja
hlt
ret
ja
xchg
push
cmp
push
xchg
bound
mov
push
scas
jo
and
leave
adc
xchg
cmp
jg
repnz
add
sbb
xchg
cmpb
dec
push
mov
aad
xlat
or
push
shrb
lcall
bound
adc
push
mov
aaa
dec
sbb
xlat
aam
addr16
mulb
sbb
sbb
mov
mov
push
push
push
scas
clc
cmp
pop
aaa
push
jl
or
movsl
mov
mov
dec
je
push
mov
jbe
movsl
mov
fwait
mov
pop
out
popa
push
jl
leave
add
jecxz
lcall
orl
ror
sbbb
test
xor
divb
out
lock
xchg
imul
add
sbb
test
xchg
adc
fdiv
out
leave
xchg
sbb
and
cltd
ja
addr16
mov
les
test
sbb
xor
xor
repz
push
adc
mov
out
fdivl
xacquire
mov
repz
push
jg
mov
in
or
xchg
subb
lret
sbb
mov
pop
xchg
mov
mov
push
ljmp
fiadds
adc
cmp
jge
dec
dec
ljmp
sbb
pop
dec
jbe
sbb
ja
push
mov
or
dec
cs
push
ljmp
mov
jno
cli
mov
cmpsl
insl
lcall
out
imull
imul
push
inc
arpl
push
cwtl
lock
mov
adc
into
pop
std
pop
lods
mov
hlt
xchg
mov
or
mov
jmp
int
icebp
mov
clc
loop
cmpb
jg
jo
inc
stos
fsubl
cmp
add
mov
fimuls
add
inc
lods
mov
sti
repz
je
mov
sahf
add
dec
push
scas
mov
popa
lods
add
cmp
sub
mov
sbb
cmp
mov
push
lds
mov
addb
cmpl
popf
call
in
pop
mov
sti
sahf
movsb
mov
xchg
xor
shrl
mov
clc
aaa
call
inc
mov
xchg
pusha
les
imul
ficoms
ja
pushl
movsl
loopne
in
and
aam
add
ljmp
in
int
or
movsl
gs
sti
jbe
test
imul
and
lea
and
inc
xor
add
scas
and
imul
sub
fwait
fs
push
into
push
and
pusha
out
push
and
lods
outsb
pop
clc
outsb
mov
or
push
xor
cld
inc
and
nop
xor
lret
pop
aas
in
rcll
xor
repnz
sbb
xor
cmp
je
fisttpl
nop
out
clc
jge
test
aam
mov
fucompp
jg
jae
mov
pop
add
sub
jl
jnp
scas
std
push
inc
mov
xor
add
mov
rorb
test
out
sub
shl
cwtl
and
nop
adc
dec
mov
dec
push
imul
xchg
repz
pusha
je
sbb
es
sub
push
add
mov
dec
rclb
jbe
inc
mov
or
mov
loope
fidivrs
mov
fcom
decl
mov
inc
fcoms
enter
sub
rclb
xchg
mov
pop
sbb
movb
mov
fbstp
adc
mov
js
mov
push
sub
mov
jne
adc
std
sarl
mulb
mov
lds
sub
dec
popa
je
pushl
dec
nop
sti
imul
xchg
jl
clc
filds
pop
clc
or
data16
in
sub
mov
fldenv
cmp
pop
xchg
movsl
pop
out
pop
xlat
enter
clc
or
and
xchg
lods
pop
adc
inc
jb
movl
pop
andb
mov
cwtl
sbb
shll
mov
sbb
into
or
xor
jle
mov
xor
and
xchg
cmp
out
cwtl
mov
adc
cmpsb
or
mov
push
jb
arpl
adc
ret
push
bound
sub
jmp
push
ljmp
mov
scas
mov
lcall
lcall
mov
jae
cmpsb
push
push
pop
nop
push
rol
mov
jl
in
ficompl
push
ficompl
jge
cmp
aad
xchg
in
hlt
outsb
jns
push
xor
or
jp
stos
test
xchg
negl
jno
add
jns
rorb
imul
dec
inc
xor
mov
cmc
call
mov
cmpsl
cmc
mov
int3
test
out
not
push
stos
mov
jns
lcall
xchg
and
jae
adc
xchg
lds
adc
sti
loop
mov
andb
jb
in
inc
or
mov
iret
jne
mov
aad
adcl
leave
inc
in
sub
es
push
mov
cmp
call
int3
sub
and
icebp
fisubl
pop
pusha
sub
outsb
scas
pusha
out
repz
or
jle
sbb
daa
fildll
out
mov
aad
jp
mov
out
loopne
and
and
sahf
sub
mov
repz
jns
fistpll
loopne
push
jno
sub
xchg
xchg
jge
shll
stos
test
adc
les
leave
sbb
xchg
das
sbb
lds
or
xchg
jl
aad
xchg
icebp
mov
out
and
cld
xchg
sub
lahf
ja
inc
xchg
mov
lcall
and
repz
push
mov
add
mov
out
lret
dec
adc
iret
dec
cmpsb
lea
and
add
adc
std
fcomps
aad
lahf
push
mov
lahf
mov
cwtl
mov
imul
imull
xchg
and
rcr
test
mov
add
lret
xchg
sbb
cmp
cld
mov
add
fcmovne
mov
sbb
das
cmp
jbe
roll
mov
jae
inc
push
mov
in
in
dec
int3
cmpsl
loope
push
mov
ds
aas
int
iret
ljmp
addr16
mov
aaa
loope
iret
ficoms
dec
popf
push
cli
les
push
cmpsl
push
mov
add
lret
lds
xorl
leave
and
pushf
fisubrs
test
push
pop
lahf
push
inc
mov
add
push
scas
jg
inc
cmp
mov
xchg
out
shrb
mov
movb
into
loopne
lret
pop
mov
sub
rcll
dec
mov
jo
mov
lcall
aas
mov
into
cwtl
outsb
sbb
rcrl
pop
aas
andb
push
push
in
dec
dec
adc
pop
imul
aad
push
stos
sahf
mov
dec
add
mov
push
jmp
and
icebp
mov
xor
push
pushf
adc
cmp
adc
pop
mov
ljmp
dec
movb
cmpsb
insl
cmp
jbe
stos
cmp
and
in
push
cmp
push
ret
sbb
gs
scas
and
sub
push
or
add
std
pop
rolb
sbb
push
popa
xchg
bound
push
scas
dec
std
sub
xor
mov
jecxz
stos
test
cmp
int3
notl
cmp
and
into
sub
mov
dec
cmpb
or
push
push
lods
pusha
cmp
ret
xchg
or
in
nop
mov
cmp
xchg
imul
neg
hlt
mov
cmp
aaa
std
xchg
sarl
jae
lea
and
adc
adc
mov
daa
dec
in
aad
push
fdivr
xor
iret
ret
pop
or
mov
sbb
jl
cltd
mov
lea
in
in
loop
or
xchg
sbb
xchg
mov
fistps
jno
lods
int
or
dec
pusha
sub
or
leave
push
xor
arpl
test
and
push
mov
push
dec
mov
lock
xchg
xor
and
iret
jb
rcrl
jp
pop
out
imul
cwtl
test
mov
cld
pop
pop
in
call
inc
pusha
cmpsb
push
mov
push
aad
mov
rorb
mov
sbbb
xchg
sub
ds
pop
push
push
pop
cltd
inc
enter
lock
js
pop
push
out
rclb
dec
or
stc
mov
lods
insb
cmc
mov
push
xlat
or
scas
pop
mov
ja
or
xchg
fisubrl
lret
xor
xchg
cs
lods
clc
dec
push
push
maxps
push
xchg
xlat
mov
repnz
mov
pop
xchg
or
loop
add
inc
push
ret
add
sbb
rcrb
mov
cmp
dec
and
pop
dec
sahf
lock
cwtl
clc
lret
push
int
push
negb
sbb
insl
shlb
sbb
pop
push
xor
sti
pop
push
xchg
movsb
mov
pop
mov
sahf
hlt
repz
jp
jmp
out
or
popf
cmpsb
sub
mov
jb
dec
xchg
out
push
in
sub
mov
mull
imul
dec
sub
loope
dec
push
bound
inc
and
cmpsl
inc
movsb
mov
mov
push
fs
pushf
dec
fdivl
xchg
loopne
sub
bound
out
dec
or
inc
mov
jp
push
dec
repz
stos
or
test
or
in
jbe
inc
jge
mov
std
jae
mov
and
push
int3
and
push
or
iret
jle
push
sub
loop
mov
sbb
out
mov
xor
sub
push
cmpsl
ret
fcmovnb
pop
into
and
int3
outsb
scas
mov
inc
scas
rorb
pop
mov
ss
inc
xchg
mov
mov
adc
and
jb
pop
and
xchg
or
out
sub
es
mov
xor
jecxz
jno
jmp
xor
rcrb
ja
popa
adc
mov
dec
leave
cmpsb
cmc
and
test
mov
cli
dec
shr
in
repnz
cmp
sbb
inc
pop
jecxz
scas
cli
into
sub
in
sbb
insb
test
dec
ljmp
sarb
mov
or
push
int
int3
out
push
ja
in
enter
add
std
xor
mov
cld
mov
fcomps
shll
xchg
shl
ret
fs
push
ret
cmp
cmp
cltd
out
and
jp
mov
adc
cmp
push
popl
or
sbb
and
clc
push
int3
lret
jo
jle
xchg
shll
in
bound
push
in
mov
test
addr16
jmp
mov
sbb
jnp
inc
or
je
cwtl
mov
je
roll
lcall
rcr
mov
jne
mov
sbb
or
xchg
leave
loope
dec
xor
ret
out
loope
in
jmp
cltd
push
stc
mov
push
leave
in
bound
push
inc
sbb
jmp
in
leave
or
inc
cmp
mov
dec
in
push
daa
dec
pop
mov
mov
mov
add
repnz
lods
mov
sub
iret
dec
mov
sub
js
pop
repz
dec
dec
ret
hlt
int
xchg
fimuls
in
dec
lret
ficompl
sbbb
fld
fld
pop
push
mov
nop
nop
nop
nop
nop
call
nop
nop
nop
nop
nop
fld
fld
fld
fld
nop
nop
nop
nop
nop
nop
nop
fxch
call
nop
nop
call
nop
nop
call
push
nop
nop
call
nop
nop
nop
call
pop
nop
fadd
add
fxch
pop
fxch
pop
nop
fxch
pop
nop
nop
nop
fxch
pop
pop
mov
call
nop
ret
push
fld
fld
fld
push
push
fld
push
push
fxch
fxch
mov
push
fxch
fxch
ret
nop
nop
nop
nop
nop
push
fld
fld
fld
fld
fld
push
push
push
nop
push
nop
fucom
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fxch
fxch
fxch
fxch
fxch
pop
ret
nop
push
fld
fld
nop
nop
nop
nop
fadd
sub
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
fucom
call
fucom
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
pop
fxch
fxch
ret
nop
push
fld
fld
mov
push
add
push
fadd
push
push
push
fucom
call
nop
push
fxch
xor
fmul
mov
mov
mov
test
je
nop
nop
nop
nop
mov
mov
nop
repnz
add
jmp
nop
nop
nop
nop
nop
fxch
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
fld
fld
fld
fld
fld
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fxch
fxch
fxch
fxch
fxch
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
fld
fld
mov
mov
mov
mov
xor
mov
inc
nop
nop
cmp
jb
push
push
push
mov
xor
xor
xor
fxch
fxch
fld
push
xor
mov
mov
movzbl
nop
add
add
movzbl
nop
nop
nop
inc
mov
nop
nop
cmp
jb
xor
mov
mov
inc
nop
nop
mov
cmp
jb
mov
xor
xor
pop
fld
test
jbe
nop
nop
nop
nop
nop
nop
nop
nop
inc
nop
nop
and
mov
movzbl
add
and
mov
mov
mov
mov
nop
nop
dec
jne
mov
nop
nop
nop
nop
fxch
mov
nop
nop
nop
mov
test
jbe
nop
nop
nop
nop
nop
nop
nop
inc
nop
nop
and
mov
movzbl
add
and
mov
movzbl
mov
mov
movzbl
add
and
movzbl
xor
inc
nop
nop
nop
nop
dec
jne
mov
pop
pop
pop
nop
nop
nop
nop
nop
fxch
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
fld
fld
nop
nop
nop
nop
fadd
push
fadd
push
fadd
push
fadd
push
nop
push
nop
nop
nop
nop
fadd
mov
push
xor
push
push
pushl
call
add
nop
nop
nop
fxch
fxch
pop
ret
or
mov
lods
sti
add
sahf
sub
ficomps
jp
push
fwait
lock
push
std
push
lods
lock
or
into
incl
into
pop
xchg
cld
imul
jmp
mov
sbb
out
mov
add
into
mov
sbb
xchg
mov
push
loop
lods
jb
sub
js
test
fcmovbe
inc
movq
inc
pop
test
fdivrl
mov
dec
sti
shld
push
dec
or
imulb
cmp
mov
addr16
push
inc
push
or
sbb
insb
shlb
loope
loopne
movsb
xchg
pushl
push
or
movsl
leave
mov
mov
cwtl
leave
testb
loopne
ret
enter
imul
insl
xchg
mov
sub
insl
jg
inc
outsb
pop
mov
and
insb
loopne
sbb
cs
icebp
fisubrs
ror
xchg
std
mov
sub
jg
and
pusha
gs
inc
xlat
cs
mov
mov
addr16
mov
rorl
jp
mov
sar
loope
aam
in
xchg
pushf
xchg
add
loope
rcrl
xchg
ret
push
sub
push
leave
push
hlt
mov
cmpsl
xchg
testb
push
add
cmpsb
dec
ds
or
add
out
shll
push
nop
cmp
loopne
xchg
dec
mov
push
fs
cs
aad
ljmp
push
cmc
fwait
xor
cltd
movsb
push
jb
gs
push
sbbb
addr16
out
pop
sub
xchg
jg
imul
push
mov
lret
test
or
movsl
inc
cltd
pop
and
subb
inc
out
jecxz
int3
cltd
movsl
mov
mov
xor
cwtl
cmp
push
fisubrl
cmpsb
imul
gs
and
sub
lcall
aas
dec
sub
mov
popa
mov
or
mov
int3
push
add
lret
loope
inc
icebp
shlb
movsb
test
aas
pop
inc
mov
xchg
pop
adc
cmp
mov
xchg
xchg
out
adc
push
add
popa
adc
ret
sbb
or
clc
mov
fldenv
pop
cmp
push
mov
leave
stos
sti
sub
jb
push
imul
cmp
push
mov
stos
lahf
icebp
xchg
fmulp
or
inc
mov
out
filds
jmp
push
mov
inc
popa
jno
cli
adc
push
or
icebp
lods
jno
jmp
and
sub
adc
lret
sub
cmp
cmp
int3
out
pop
fisttpll
lods
std
xchg
sti
pop
xor
or
xchg
xor
cs
xchg
pop
andb
pop
dec
arpl
dec
add
xor
dec
mov
push
popa
mov
std
movsb
jnp
adc
add
les
orb
and
xchg
add
ss
sbb
push
cld
xorl
enter
sub
fmulp
in
and
int3
mov
stos
jns
out
xor
dec
mov
enter
inc
aam
ror
mov
jb
out
imul
leave
push
pop
popa
addr16
repnz
cs
addr16
popa
lea
fldl
fs
iret
push
repnz
addl
shlb
adc
pushf
jmp
enter
inc
mov
and
mov
xor
pop
push
clc
lea
mov
push
mov
data16
popf
xchg
std
pop
mov
sub
mov
out
push
push
iret
lahf
mov
aam
lods
inc
push
outsl
push
mov
add
jg
outsb
aaa
shll
test
pusha
and
pop
notb
push
adc
out
stos
out
jecxz
cmp
repz
fwait
mov
cmpsl
xor
dec
and
sub
add
push
cmc
adc
movsb
lea
movsb
add
loopne
mov
mov
mov
aas
push
push
add
adc
mov
mov
pushf
lret
int3
or
jb
fcom
push
dec
xor
sub
aaa
in
sbb
cltd
in
not
enter
jp
call
sub
dec
daa
ror
shll
ja
cltd
dec
inc
mov
add
adc
sarb
or
test
sbb
inc
and
cmc
aam
add
mov
fs
les
jbe
lds
aad
inc
in
in
push
pop
cmp
xor
xor
data16
dec
mov
jne
fistpl
mov
dec
lret
dec
push
adc
loope
cmp
stc
sub
sbbl
cmpl
ret
in
cmp
sbb
inc
sbb
hlt
and
mov
out
and
sub
pop
dec
sub
or
and
in
js
iret
mulb
and
iret
iret
mov
sbb
fwait
and
push
xor
inc
test
ror
les
push
or
sub
jno
inc
add
xchg
js
repnz
notl
jno
mov
fnstcw
mov
add
les
leave
les
mov
jb
sti
mov
xchg
rolb
dec
mov
lods
dec
jg
adc
aad
xlat
add
shlb
lods
mov
jmp
mov
incb
stos
cli
cwtl
clc
ljmp
mov
or
ret
scas
sar
xor
inc
dec
push
repnz
loop
xchg
aad
adc
mov
scas
push
dec
push
inc
test
mov
or
fisttpll
adc
inc
add
es
push
cs
pop
mov
sbb
cmp
negb
fstpl
add
out
imulb
jae
popf
xor
jl
push
and
lret
rcrb
jmp
out
mov
lock
gs
js
mov
lock
and
ja
adc
inc
push
mov
mov
xchg
xor
inc
shrb
xchg
push
mov
fidivrl
sti
cwtl
mov
mov
sub
ljmp
test
inc
inc
int
movsl
test
xchg
lcall
sub
adc
pop
xor
mov
push
add
mov
pmaxub
cmovge
mov
aad
outsb
cli
popa
dec
cwtl
incl
arpl
mov
iret
mov
lret
fldenv
xor
lods
call
adc
in
sbb
into
inc
mov
inc
sbb
repnz
cmp
bound
lods
fldl
les
xor
scas
sub
sub
jbe
sub
cld
or
lods
jmp
in
enter
insb
negb
lods
add
dec
and
mov
out
push
lods
lahf
sbb
lods
cs
mov
jbe
mov
popa
shll
mov
mov
es
rclb
jmp
jmp
mov
addr16
shlb
xchg
or
mov
pusha
cmp
sbb
xchg
push
mov
cltd
insl
outsb
push
xor
and
push
pop
push
add
inc
jle
inc
insl
cld
mov
dec
mov
xchg
or
stos
push
mov
inc
jmp
xor
or
int3
ds
popa
pop
sub
sar
std
iret
xor
dec
in
cmp
pop
adc
into
mov
and
nop
or
fiadds
aad
fs
xchg
je
dec
test
mov
daa
call
and
or
mov
inc
out
push
dec
mov
shll
lret
cs
loope
out
addl
and
pusha
push
or
clc
lock
sub
dec
lret
nop
dec
jecxz
aas
frstor
add
ret
jo
fwait
pop
out
mov
pop
or
and
clc
dec
dec
daa
lea
cmp
in
je
pop
popa
dec
repnz
dec
dec
sub
sbb
mov
and
mov
pop
rcl
pusha
scas
dec
out
sbb
testl
jecxz
sub
xlat
and
inc
xchg
xor
insl
xlat
ljmp
test
fistpl
cmp
ljmp
imulb
fistps
in
cmp
cmpsl
daa
sub
cltd
push
jno
outsb
jp
movsb
sub
inc
dec
or
stos
adcb
scas
popf
mov
xchg
lea
cwtl
jg
inc
sbb
fwait
cmpsl
repz
push
push
mov
stc
mov
ror
outsb
cmpeqps
dec
test
sub
enter
inc
loope
movsl
cmp
pop
pop
add
push
test
sti
adc
repz
test
repz
push
jp
pop
lret
movsl
loop
jbe
pop
inc
repz
jl
adcb
outsl
dec
sub
shrl
mov
fs
ret
sbb
add
xlat
jns
std
mov
adc
xchg
into
addr16
mov
dec
les
sub
add
out
sti
cmp
dec
or
mov
dec
xor
mov
dec
and
xor
rcrl
fstpl
std
test
mov
aas
dec
add
pop
pop
add
adc
mov
insl
mov
loopne
push
cwtl
cmp
movsb
cmp
aaa
sahf
mov
adc
add
mov
mov
mov
jle
mov
sbb
fmul
daa
in
inc
jge,pn
imul
push
test
cmp
inc
dec
xchg
sahf
mov
sarl
cmp
mov
mov
lods
adc
aad
pop
jne
jnp
ficoms
out
enter
loop
out
xor
outsb
push
icebp
fst
int
bound
into
fcoms
das
test
subb
adc
arpl
lret
sar
pop
cwtl
loopne
shrl
mov
jl
mov
and
add
movsb
adc
pop
aad
dec
into
lahf
stos
or
stos
or
pop
jp
jns
stos
inc
lds
loopne
mov
mov
jb
pop
cltd
mov
cmp
xchg
aaa
pop
js
clc
imul
jbe
xor
imul
jle
mov
movsl
sub
dec
xchg
pop
lret
mov
test
pop
mov
imull
or
jge
push
shlb
repz
pop
and
sub
test
pop
dec
pop
sub
inc
call
sahf
xrelease
xor
loopne
add
mov
stc
pop
sub
stos
cmc
mov
and
jo
fdivr
std
lea
dec
je
ljmp
repnz
ss
mov
cmp
das
rorb
clc
inc
arpl
mov
inc
mov
loopne
jmp
testl
pushf
lcall
pop
pop
xchg
jmp
lahf
jecxz,pt
add
iret
mov
mov
loop
dec
jo
push
xchg
jle
push
imul
dec
popf
sub
push
jns
pushf
sub
scas
loopne
cmp
cmc
xor
lods
call
cwtl
mov
iret
cli
push
mov
and
clc
push
jno
in
nop
inc
jg
lea
xor
lods
cltd
ss
lcall
aad
fucomp
pusha
jg
pop
insl
into
outsb
xor
cmp
cwtl
ret
jp
lahf
push
push
lret
loop
lock
mov
mov
rol
aam
inc
mov
loop
in
in
xchg
aas
sub
fistps
xor
icebp
imul
fucomp
sbbl
mov
leave
push
xor
loop
xchg
xor
push
cltd
dec
ficoms
out
sub
mov
hlt
lods
mov
iret
jl
mov
repz
test
dec
and
pop
push
lret
pop
cmp
sub
mov
loop
dec
test
rcrl
push
rolb
cmp
rcr
cmp
nop
sbb
jl
mov
push
jl
jl
sbb
mov
je
sub
xor
int
jle
xchg
cmc
cmp
mov
test
fisttpl
sbb
push
cmp
popf
dec
test
adc
xchg
dec
mov
dec
lahf
int3
popf
or
adc
lcall
xchg
and
imul
imul
jae
mov
sbb
or
shrl
loop
push
das
push
mov
shlb
sbb
pop
mov
out
lcall
jge
mov
mov
lea
lods
lods
repz
push
jl
push
mov
cmp
adc
mov
stos
cmp
int
sub
mov
xor
push
xchg
adc
pop
rcr
sbb
mov
mov
in
into
aam
ja
xor
aaa
pop
xor
rcrl
flds
mov
adcb
orb
mov
sti
mov
mov
add
clc
or
mov
push
jge
mov
adc
mov
dec
or
and
and
add
imul
lcall
inc
out
adc
lret
mov
push
add
inc
iret
movsb
dec
leave
aam
fsubrs
xor
in
jge
imul
bound
mov
xor
cmp
adc
mov
cmp
pop
mov
aaa
xor
insb
xchg
imul
mov
mov
mov
fisubl
sub
sar
push
inc
lret
pop
aas
xchg
push
mov
scas
out
jno
add
out
xchg
jl
push
leave
adc
iret
js
xchg
cli
addb
or
movl
add
das
mov
mov
mov
pushf
push
dec
aas
pop
xchg
jnp
cmpsb
push
sbb
xchg
clc
xor
jno
sarb
lock
int
mov
sar
cmp
adc
push
mov
jecxz
fs
inc
xor
pushf
inc
xor
or
pusha
mov
pop
test
push
stos
scas
scas
jecxz
lahf
lcall
jnp
sub
xor
in
mov
cs
jp
jo
mov
mov
xchg
outsb
xor
loop
mov
mov
inc
adc
pop
mov
inc
sahf
dec
pop
loop
mov
scas
push
push
inc
out
adc
fabs
push
imul
pushf
add
mov
adc
jbe
stos
push
adc
and
pop
fisubs
fsubs
shlb
in
or
stos
xchg
movsl
es
pushf
dec
adcl
xor
lock
ret
cmp
lahf
cmp
push
out
das
ss
or
stc
mov
jge
fadd
fisubs
mov
repz
call
pop
jle
in
nop
xchg
clc
adc
mov
fucomip
push
rcrb
ljmp
stos
mov
cli
jg
dec
fs
cmp
mov
lahf
and
pop
cmc
stos
hlt
xchg
lock
cmc
sub
mov
mov
mov
dec
jmp
add
inc
sub
adc
xor
mov
mov
sarb
jns
jae
movsb
repnz
pop
lods
push
rclb
decb
mov
das
add
ss
fdivr
xchg
mov
push
test
fadd
dec
lret
xchg
cmpsl
lods
xchg
jo
sti
push
jns
xlat
adc
mov
bound
lock
adc
scas
loopne
je
lea
push
cmp
cwtl
jge
or
add
fnsave
rcrl
xchg
jecxz
ret
ret
cmp
sbb
imul
lret
and
aas
daa
mov
test
out
cli
stc
xchg
idivb
xchg
lock
decb
inc
pop
xchg
jmp
aaa
nop
daa
cwtl
fs
adc
cmpsl
sbb
ds
jmp
mov
scas
jle
in
jmp
jp
and
fs
push
loope
fisttps
aas
mov
cmp
cmpsb
jae
mov
dec
movsl
mov
lret
arpl
push
lcall
push
push
imul
mov
dec
sub
xor
lret
pop
dec
and
enter
in
lods
fidivs
xor
xlat
iret
loope
cmp
fnstcw
mov
jne
xor
sub
and
into
out
cmp
pop
push
lahf
sub
std
dec
notl
popf
jae,pt
lcall
daa
fiadds
nop
pop
scas
pop
lret
pop
sbb
or
mov
or
and
outsb
lret
subl
bound
test
xchg
cmp
cli
lahf
mov
push
and
sbbl
and
sub
jle
cmp
push
mov
pusha
adc
jge
stos
dec
pushl
jmp
das
stos
xor
mov
sahf
mov
pop
shl
imul
jp
jle
mov
adc
inc
out
pop
adc
pushf
add
addr16
je
imul
fs
mov
sub
or
xor
sub
sub
stos
test
cmp
push
and
add
xor
xlat
sbb
sti
push
sub
or
mov
xor
stc
mov
sbb
add
movsl
sub
sbb
ljmp
push
dec
push
inc
jge
test
jecxz
test
ret
mov
adc
mov
xor
mov
in
outsl
push
cmp
fnstenv
into
in
mov
cmc
mov
fsubrl
scas
int
push
xlat
mov
or
int
dec
inc
in
pusha
mov
jb
pop
push
push
mov
jge
hlt
repnz
sarl
mov
xlat
arpl
test
cmc
cmp
push
fcmovu
repnz
pop
add
sar
sub
sbb
into
sti
orb
and
fcoml
mov
push
ret
mov
inc
aaa
arpl
movsb
sbb
mov
fistps
adc
rolb
push
push
sarl
call
adc
xor
stc
add
adc
fimull
jno
outsb
repz
sarl
fwait
popa
vpunpcklbw
nop
xchg
xor
loop
sqrtps
inc
push
ljmp
jnp
lods
jns
xor
in
pop
arpl
xchg
mov
in
mov
push
in
cmpsb
andb
loopne
xchg
mov
fmull
hlt
xchg
push
xchg
nop
xchg
repz
es
fistpl
push
enter
adc
inc
stc
out
out
jb
stos
ds
lock
jge
ja
sub
cmpsl
or
pop
inc
enter
jbe
add
fstpt
lock
jle
xor
push
out
icebp
jle
sbb
repnz
ljmp
mov
loopne
insl
dec
dec
jae
int
aaa
insl
cmpsb
push
dec
mov
or
push
jle
fiadds
fldcw
pop
cmp
sbb
mov
fistl
gs
ffreep
cmc
pop
mov
ja
push
mov
in
pop
mov
sbb
stc
and
mov
rcr
or
out
mov
rolb
fsub
ret
cmpsl
and
lds
push
mov
loope
jle
es
cwtl
jmp
push
xchg
stc
mov
in
fistl
scas
cmpsl
xchg
mov
dec
xor
mov
mov
dec
outsl
mov
daa
xor
adcb
add
test
lret
stc
popf
out
pushf
push
jle
fistpl
lods
je
xchg
ret
pop
pushf
arpl
xchg
inc
lods
xor
mov
xchg
push
and
add
movsb
pop
jb
imul
cwtl
arpl
outsl
mov
jge
int3
out
aas
jecxz
xchg
adc
in
out
repnz
das
push
sub
das
and
daa
out
sbb
xchg
or
into
dec
and
mov
dec
loop
js
xor
mov
std
mov
and
mov
das
mov
inc
add
imul
mov
enter
outsl
or
mov
inc
shrb
movsb
scas
pop
out
dec
mov
scas
and
or
lret
into
imul
fistps
mov
lcall
push
mov
inc
sbb
inc
in
aas
lret
ss
lcall
xchg
hlt
cmp
aaa
aaa
scas
ds
adc
jnp
jno
mov
addr16
mov
in
inc
fldt
jmp
add
sbb
jb
lahf
mov
sti
mov
dec
repz
negl
in
and
xor
push
stos
cmp
divl
push
jb
mov
push
mov
inc
and
push
lods
inc
cwtl
dec
je
mov
and
sub
aam
cmp
mov
mov
lods
push
pop
ss
int3
repz
xchg
sbb
outsb
mov
aas
adc
movsb
sahf
stc
sub
out
jge
add
dec
mov
or
dec
cmp
cmp
pop
jmp
push
frstor
mov
daa
fldt
jno
sbb
mov
xchg
sbb
pop
andb
xor
aam
xchg
je
push
inc
cld
hlt
push
stc
push
and
sbb
xchg
lcall
cli
arpl
inc
rclb
inc
iret
ret
mov
jmp
fisubs
jmp
js
arpl
pusha
add
push
loopne
cmpsl
adcl
jnp
adc
push
lods
imul
sahf
stc
lret
fisubl
jg
ret
loopne
repz
sbb
mov
daa
push
xbegin
jmp
adc
push
test
les
cmp
cmp
jg
sub
mov
dec
in
repnz
in
mov
xchg
enter
in
loopne
pusha
ret
dec
sbb
cmc
je
pop
sbb
mov
or
xlat
add
lret
loopne
lods
insl
xorl
lods
inc
pop
movsl
popf
push
sub
insb
xlat
sub
cmp
and
es
mov
and
jp
daa
push
movsb
pop
stos
or
in
lds
int3
dec
test
out
cmpsb
mov
pop
call
mov
cmc
sbb
ja
aam
fwait
outsb
inc
sub
sub
sbb
xchg
outsb
icebp
fsubl
or
repnz
lea
cmp
stc
push
rcr
rclb
mov
xchg
subb
data16
ja
std
ror
subl
or
aaa
xlat
subb
mov
rcrb
in
mov
fwait
xor
pop
inc
fcomps
cli
mov
inc
jl
movsb
xchg
cld
repz
xor
shl
jge
cmp
pop
out
jo
inc
mov
xor
adc
cmp
dec
mov
data16
mov
incb
pop
mov
push
push
jp
and
jmp
xor
or
xor
int
or
daa
sub
pop
xchg
shrl
sub
les
fstps
push
dec
cmpsl
lea
js
mov
aam
gs
mov
mov
cmp
jg
cli
popf
nop
cltd
stos
mov
jbe
lret
push
arpl
mov
adc
fisttps
push
mov
mov
clts
repnz
sbb
aad
stos
iret
adc
or
imul
xor
mov
testl
pusha
xor
or
xchg
or
dec
mov
test
stc
and
ljmp
mov
mov
push
mov
fwait
mov
dec
test
xor
cmpsb
test
jo
in
lods
mov
mov
fwait
dec
adc
mov
pop
xor
xchg
xchg
fcmovu
push
jmp
inc
cli
outsl
nop
inc
aaa
push
pop
enter
jp
push
sahf
adc
cmp
dec
mov
inc
aas
sbb
test
scas
and
pop
push
mov
and
push
pop
or
es
cmc
jb
cmp
dec
jecxz
shll
fsubrl
out
gs
insb
xor
jno
loop
adcb
cmp
mov
xchg
lea
sbb
andl
test
in
pop
loopne
jmp
outsl
adc
aam
movsl
jbe
pop
lock
data16
cmpsl
mov
push
mov
mov
lahf
mov
aad
cwtl
mov
enter
int3
mov
cmp
xor
lcall
xchg
inc
jno
push
ret
aas
mov
fs
dec
sbb
xchg
addr16
sahf
xchg
cld
fidivrs
outsl
and
repnz
mov
ret
push
mov
rorl
maxps
outsb
jmp
test
inc
add
in
test
and
in
into
and
jae
rclb
jo
out
shll
pop
rcrb
je
xchg
push
cs
mov
lcall
out
dec
out
push
xchg
mov
mov
xor
cmovg
ficomps
jp
sbb
aas
or
clc
sub
int3
rcl
xchg
lds
cmp
jne
cmp
int
sub
dec
adc
sbb
or
adc
cmp
sub
mov
jle
adc
imul
lods
xor
test
push
pushf
data16
xor
lret
std
pop
fistl
add
out
mov
shlb
ror
ja
xchg
ret
add
cs
fmul
stos
cmp
mov
cmc
mov
jno
shrl
sub
aaa
jge
idivl
fldt
lock
int
pop
pushf
cld
mov
sub
shll
xchg
subl
push
lcall
cwtl
stc
test
das
mov
dec
jp
cmp
lcall
or
cmp
addb
and
cwtl
ljmp
imul
lcall
enter
out
and
jns
sub
mov
sbbb
push
dec
rcl
adc
mov
adcb
sarl
inc
jge
and
test
xor
rol
jg
sbb
sub
jle
insb
add
insb
xchg
sbb
xlat
es
adc
popf
jno
jae
outsb
sbb
mov
jle
mov
push
jo
lret
movsb
xchg
add
jbe
call
and
pop
cvtpi2ps
int3
mov
and
push
call
int
popf
stos
movsb
int
stc
xchg
push
jbe
ret
mov
mov
or
mov
daa
nop
pop
and
in
lret
xor
mov
rorb
enter
push
mov
lods
push
push
push
lods
xchg
pop
fmull
jbe
add
or
pcmpgtb
mov
inc
and
fiaddl
lahf
imul
mov
cmp
js
lret
fwait
jno
xorl
cli
pop
ds
sub
adc
in
push
and
adc
imul
fdivrs
or
inc
loop
insl
stos
push
push
sbb
cmpsl
inc
int
movsb
jmp
push
ret
adc
sti
into
jge
sbb
xlat
mov
cmp
sti
inc
push
lahf
add
xchg
lods
add
dec
clc
outsb
nop
lahf
pushf
imul
cmp
test
test
and
pusha
inc
lcall
imul
je
mov
fisttps
sbb
jge
push
fdivs
movsb
lret
out
xor
or
out
aas
arpl
mov
jmp
xchg
sub
add
mov
dec
mov
jge
mulb
cld
add
push
cmpsb
jnp
sarl
sbb
icebp
test
cmpsb
ljmp
pop
jnp
dec
push
add
shll
jge
nop
fstps
aas
and
gs
jmp
mov
bound
mov
popf
push
es
outsl
inc
adcb
xor
fisubrl
dec
scas
dec
shl
scas
pop
jecxz
and
push
loope
mov
out
sub
in
add
gs
push
jno
insb
xor
adc
popf
loop
lcall
mov
xchg
push
lcallw
jp
push
aad
xchg
test
jmp
jnp
pop
dec
adc
fwait
pop
pop
ljmp
cmp
mov
lods
addb
or
pop
incl
inc
je
es
adc
aam
mov
xchg
fs
pop
mov
push
pop
push
xlat
imul
aad
mov
and
inc
mov
shll
int
mov
ficoms
dec
test
mul
push
push
sahf
lret
add
dec
ja
xchg
rcl
mov
jecxz
aad
xor
ja
cld
mov
push
mov
ss
mov
lret
xchg
mov
cmpl
adc
outsl
jns
cmp
or
add
cltd
aam
je
push
subb
gs
fnstsw
mov
pop
movhps
pop
ljmp
leave
int
mov
xor
mov
push
cld
mov
adc
mov
test
and
ja
insb
lock
and
sbb
or
adc
loope
jmp
add
push
add
xchg
jb
mov
sbb
dec
and
gs
sbb
daa
sar
sbb
mov
push
mov
mov
jmp
add
fildll
mov
cmp
ds
stos
ret
popf
lods
and
pusha
inc
outsb
pop
enter
fstl
xor
lahf
lods
pushf
popa
xsave
jg
mov
fs
call
jle
xchg
adc
jecxz
mov
or
mov
mov
sub
in
add
and
jo
pusha
lcall
cmp
dec
cmp
pop
outsl
xchg
or
insb
jg
lcall
and
dec
inc
xchg
fwait
loopne
icebp
jp
rcll
out
lret
adc
or
sub
xor
in
adc
out
adc
xor
dec
clc
xchg
lock
xor
out
xchg
lretw
in
push
sbb
pop
out
out
sub
setbe
out
xchg
sub
ss
loope
imul
xor
fs
dec
fs
or
loop
rol
testl
dec
sub
fistps
fdivs
lea
test
and
cmpsb
in
add
inc
sahf
lds
push
leave
cmpsb
mov
sahf
pop
pmaddwd
xchg
scas
cwtl
cli
cmp
push
dec
and
pop
pushf
sub
arpl
lahf
in
lret
jns
pop
cmp
push
pop
inc
jne
xchg
sbb
add
imull
js
push
push
fdivs
adc
inc
ds
test
inc
sub
dec
enter
pop
xchg
out
repnz
mov
mov
mov
movsl
iret
sub
aaa
out
mov
adc
outsb
dec
sub
pop
sbb
int
sbb
in
repz
xor
and
dec
mov
sti
in
movsl
mov
mov
xor
lea
out
cmpsb
pop
getsec
lcall
and
mov
jecxz
and
mov
mov
and
popf
stos
cmp
loopne
mov
jnp
mov
push
pop
std
lret
insl
fstpl
cltd
sub
call
loope
loopne
pop
pop
je
adc
dec
inc
cmp
aad
pop
arpl
xor
mov
cltd
sbb
xchg
xchg
pop
js
xor
cld
mov
mov
xor
les
fnstenv
jno
mov
jb
pop
cs
add
xor
fidivs
rorl
ss
fnstenv
movsb
mov
inc
cmp
ja
mov
push
out
add
pop
mov
clc
scas
add
addr16
loopne
out
push
out
push
scas
sahf
pusha
or
lods
adc
arpl
inc
sub
call
sqrtps
icebp
xor
out
jl
and
xor
dec
pop
push
xchg
fsubrs
mov
sbb
loope
cld
push
fidivrs
mov
pop
out
or
scas
xchg
jg
lret
or
lods
dec
loope
mov
adc
test
xor
mov
dec
aaa
dec
push
pop
xchg
ss
jno
and
sub
and
xchg
in
xchg
mov
ds
push
and
jle
dec
push
aad
jp
js
cs
push
dec
lret
and
hlt
shlb
jb
or
xchg
or
arpl
push
ror
gs
fwait
ret
repz
hlt
ljmp
dec
in
xchg
xchg
mov
push
lcall
push
xor
aaa
add
ljmp
xchg
mov
pop
inc
push
inc
jge
push
inc
lods
idivb
sbb
mov
sub
cmp
stc
pop
jne
repz
cmc
lret
mov
movsb
pop
mov
or
mov
jl
adc
iret
jle
int
lahf
ds
sub
jo
sbb
mov
and
mov
ljmp
sarb
xor
and
and
fistl
xchg
and
pushf
adc
sbb
pop
xchg
int
mov
call
lods
vpaddusw
sbbl
inc
orl
movsl
sub
adc
dec
sbb
subb
xchg
idivl
add
jae
rcll
shrl
adc
inc
dec
xchg
jle
adcb
jl
scas
ret
mov
xchg
arpl
fsubrs
je
arpl
test
sub
mov
add
es
cs
add
mov
mov
jae
mov
jne
insb
das
push
dec
xor
mov
cltd
or
xchg
sub
outsl
sub
rcl
movsl
int3
jns
xchg
jno
and
cmp
sub
aas
loopne
cmp
add
mov
inc
cs
ret
fsts
push
cmp
jbe
dec
mov
xchg
gs
sbb
outsb
sub
adc
jne
and
negl
test
bound
lret
xor
pop
clc
lret
cmp
pop
and
mov
mov
inc
mov
xchg
pusha
pop
cmp
lea
nop
in
testb
inc
mov
clc
aad
pop
jecxz
mov
cwtl
jg
jns
cmp
pop
fcom
cwtl
leave
ftst
fsubs
test
loop
mov
dec
cmp
add
movsb
jg
cmc
es
fcom
sbb
scas
cmp
inc
xlat
je
cwtl
ljmp
mov
xchg
cmpsb
jmp
push
adc
mov
push
inc
xchg
test
pop
popf
es
xor
aam
xor
adc
lock
addr16
cmp
movsb
je
push
inc
aaa
xchg
pop
incb
addr16
aaa
in
repz
orb
sbb
cmp
adc
pop
rcr
xor
adc
gs
out
fisubrs
hlt
jbe
add
movl
fldcw
notb
pushf
ficompl
andb
shr
loop
adc
mov
xor
xor
sub
test
repz
push
cs
push
pop
out
or
fidivs
aam
sbb
sbb
in
inc
xchg
fidivrl
enter
sub
inc
sti
and
ret
leave
or
cmp
cmp
pushl
cmc
adc
add
in
xor
sub
lahf
xchg
pop
mov
insl
push
jmp
into
mov
jb
nop
sbbb
jo
cmp
pop
push
adc
imul
mov
sbb
out
insb
shrb
ds
jle
add
add
sub
hlt
or
test
push
movsl
push
push
or
mov
sbb
sbb
or
lea
shlb
inc
fnsave
mov
or
and
fiadds
out
loope
push
jo
adc
test
pop
add
out
sbb
pusha
cmp
mov
jle
cmpsl
pop
popf
ss
cmc
cltd
dec
push
dec
stos
mov
movsl
add
add
loop
cmp
jb
jp
push
add
cmc
mov
lods
mov
xchg
sar
popf
rcll
xor
xchg
push
stc
lahf
pop
adc
out
and
daa
out
popf
fcompl
icebp
pop
mov
test
mov
ja
cmp
and
sbb
ja
pop
pop
pop
ret
rcl
mov
iret
aad
inc
cmpsl
push
stos
mov
movsl
push
push
inc
jne
and
nop
cs
xchg
pop
xchg
les
aas
out
repnz
xor
fnstsw
inc
sub
sahf
syscall
sub
cwtl
int3
lea
adc
cs
inc
fs
mov
jl
sbb
pop
sti
jne
aad
cmp
shll
adc
nop
addb
add
inc
mov
fs
scas
int3
ret
jge
insl
insb
js
xlat
fadds
aaa
icebp
mov
scas
xchg
fs
lock
enter
add
adc
rorl
jb
ds
ljmp
call
gs
jmp
mov
xchg
hlt
popa
push
lahf
fwait
cmp
cltd
ss
fcomp
mov
pusha
mov
aas
inc
pop
inc
mov
or
mov
enter
in
cmpsb
leave
cmpl
popf
cmp
lds
sbb
sub
repz
xchg
ret
nop
adc
idivl
add
jg
sub
mov
dec
inc
jnp
pop
xlat
pop
inc
push
dec
xor
aam
adc
mov
push
dec
or
pop
mov
movsl
std
clc
add
shll
fidivs
cmpsb
xchg
lahf
push
mov
jle
int3
push
dec
and
adc
movb
testb
xor
aas
pusha
clc
js
push
fnstsw
jno
and
test
jns
fbld
dec
cmp
dec
mov
repz
pushf
pop
loopne
movsb
and
cld
lahf
push
sub
or
dec
sbb
add
call
adcb
xor
add
arpl
in
clc
sbb
out
pop
test
xchg
pop
xchg
imul
push
clc
sarb
enter
cwtl
pushl
xor
jge
loope
int
out
pop
jg
jno
or
sahf
and
fstp
cwtl
jle
aaa
lcall
dec
fcmovne
mov
ds
mov
mov
ja
addr16
in
ss
add
mov
jae
jnp
mov
xchg
out
imul
jecxz
repnz
fldl
movsl
or
pmaxsw
xchg
mov
or
adc
push
aas
ljmp
inc
push
jo
xchg
push
fs
xchg
ss
mov
les
aad
and
leave
ja
mov
js
fcom
loope
ss
jecxz
or
mov
push
test
push
clc
std
jecxz
shl
or
cmpl
adc
outsb
int
adc
mov
daa
negb
inc
sub
lock
dec
jno
xor
pop
aam
aas
stos
scas
int3
lds
std
dec
dec
push
inc
call
roll
cmpsl
pop
pop
dec
cmp
adc
dec
cmp
enter
insl
js
xchg
sbb
dec
addr16
out
mov
xor
cmpsb
jns
mov
push
xchg
pop
adcb
push
sti
adc
xor
mull
jp
ljmp
jg
dec
cmp
call
mov
dec
out
adcb
inc
lahf
ret
out
dec
cmpsb
mov
test
mov
dec
pop
dec
repz
jle
and
dec
push
or
xor
shrb
cmp
jbe
mull
xlat
mov
mov
cmpl
popa
pop
inc
jg
aam
fwait
pop
jmp
filds
pop
pop
xchg
bound
mov
sbb
adcl
dec
sbb
fdivrs
and
sbb
push
add
push
lods
cmpsl
out
daa
or
jle
dec
cmp
mov
or
filds
lods
dec
ret
push
loopne
fbld
and
cmc
sub
fs
mov
jmp
sbb
xchg
mov
testl
imul
mov
mov
sub
imulb
test
xor
jne
sbb
adc
mov
jg
and
les
sbb
and
xor
iret
daa
imul
pop
mov
jne
xchg
push
insb
inc
fmuls
xor
jl
addr16
adc
mov
pop
cmp
mov
dec
mov
sub
cmpsb
cs
xlat
icebp
cs
xchg
test
mov
scas
xor
lock
pop
jbe
push
mov
fstpl
dec
adc
cld
fidivl
xchg
sub
cli
and
add
xchg
cltd
jae
pop
aam
ss
repnz
in
divl
mov
movl
pushf
pop
mov
or
je
fstl
jmp
outsl
repz
gs
xchg
mov
adc
out
ds
sbbl
sub
clc
pop
jl
inc
mov
cltd
pop
pop
mov
jae
popa
loopne
mov
pop
out
push
int3
or
popl
scas
out
jb
mov
movsb
jp
enter
sbb
stos
lock
and
sub
cmp
push
movsl
int3
sub
jne
ds
xchg
rolb
push
cmc
add
adc
pushf
out
outsl
xor
pop
mov
dec
fistpll
ret
add
cmp
loop
push
jbe
pushl
cmp
data16
cmc
xchg
test
push
daa
pop
sahf
fistps
pushl
mov
in
test
push
dec
sbb
outsb
data16
cli
ss
test
inc
andb
push
inc
push
mov
jecxz
dec
or
sub
pop
mov
inc
gs
ja
les
sti
add
mov
sahf
jno
lock
and
xor
les
xchg
lret
mov
inc
dec
or
jp
and
jbe
xchg
pop
lods
sub
dec
xchg
fistps
adc
sbb
xor
cwtl
popa
popf
fcmove
in
push
xor
ja
and
dec
shlb
push
stc
out
out
mov
scas
pop
pushf
pop
dec
in
and
in
es
fcmovnbe
fisttpll
inc
xor
pop
leave
lds
push
pop
clc
dec
pop
xor
add
push
aad
clc
pop
mov
cmpl
cmp
es
lahf
xor
sbb
jnp
jne
imul
mov
jl
and
push
mov
das
sbb
hlt
jb
adc
outsb
lods
shll
jae
pop
jle
cltd
dec
add
xchg
stos
pop
hlt
mov
push
test
lret
jmp
jae
adcl
test
or
xor
xchg
lods
test
cwtl
cmc
inc
fisttpll
cld
in
rcr
test
push
lret
xor
push
ss
mov
mov
enter
int
push
sub
mov
mov
and
test
aaa
mov
outsb
and
icebp
jae
sbbb
inc
xchg
pop
out
mov
repz
lret
mov
mov
sbb
mov
inc
push
mov
mov
into
push
sub
aaa
add
fdiv
xor
mov
mov
sub
sbb
pushf
pop
rcrb
aam
jae
fnsaves
repz
call
push
inc
fldcw
add
jno
jno
lea
xchg
addl
fwait
mov
mov
dec
movsl
mov
sbb
je
scas
xchg
xor
xor
cltd
in
push
adc
icebp
int3
and
or
or
insb
outsb
outsl
ljmp
cld
add
jb
xor
fdivrs
mov
test
scas
mov
xchg
sti
arpl
movl
mov
clc
mov
test
fsubrp
jmp
sub
jo
inc
and
lretw
push
push
popf
mov
xor
xchg
lret
sub
aas
sub
aad
and
inc
push
push
and
lock
pop
add
add
push
xchg
mov
lds
jp
mov
fs
call
in
enter
adc
mov
inc
adc
pop
dec
or
mov
xlat
and
pusha
aas
sbb
fisubrs
jle
mov
sbb
lcall
sbb
or
pop
subl
rcr
jbe
xor
cwtl
xor
bound
pop
xchg
and
xor
ljmp
insb
mov
icebp
fimull
in
popl
in
nop
jmp
dec
adc
cld
or
dec
mov
stos
sahf
leave
rcrl
dec
jns
jmp
lods
iret
mov
add
daa
mov
xchg
sub
cmp
adc
add
cmp
notl
sub
lds
xchg
outsl
shlb
aaa
lret
test
lods
or
and
leave
dec
rolb
dec
cltd
jmp
mov
pushf
in
in
sbb
ljmp
rorb
lods
pop
pop
adc
dec
cmp
jbe
aas
rolb
push
or
cmp
shrl
mov
xchg
pop
or
adc
jo
je
decb
push
das
sti
ss
fmull
pop
push
jno
jo
sbb
xchg
dec
adc
mov
jge
test
jmp
iret
adc
jnp
test
ror
fdiv
aam
filds
and
add
or
cli
cmp
mov
mov
aas
inc
xchg
mov
pop
rol
push
stos
daa
orl
mov
cs
and
pop
jmp
or
adc
pusha
add
dec
and
call
sub
cwtl
into
pop
hlt
int3
dec
flds
gs
adc
mov
jnp
or
cmc
shrb
or
xchg
popl
negl
or
sub
mov
mov
lods
fisubrl
pop
inc
nop
jns
movsl
loop
mov
jo
adc
sbb
add
icebp
daa
add
iret
lods
mov
push
sbb
mov
pop
dec
push
or
fcmovnb
fildl
pop
pushf
inc
xor
movsb
push
ret
repz
mov
test
mov
jno
push
cwtl
pusha
jnp
jl
test
cmp
or
push
in
popa
mov
xlat
inc
stos
jo
jo
int3
ficompl
inc
pop
mov
clc
out
mov
xlat
bound
pop
mov
mov
aaa
mov
shl
mov
test
jbe
imul
pushf
adc
push
mov
xchg
outsl
jg
lahf
add
jne
adc
mov
pop
icebp
fistps
jnp
icebp
ffree
cmp
lret
adc
ret
in
in
fcompl
call
sub
les
leave
jnp
lea
inc
in
mov
icebp
xor
adc
mov
addr16
push
jbe
dec
mov
push
out
pusha
js
popa
mov
cmpsl
xchg
adc
xchg
aad
lahf
add
mov
js
icebp
mov
lret
aaa
or
jns
push
jae
stos
call
jp
xchg
mov
add
or
or
dec
jns
jg
xchg
jg
pop
fimull
out
and
xchg
idiv
push
andl
pop
jbe
dec
negb
mov
sub
and
cltd
stos
pop
xor
add
mov
lods
movsb
out
dec
aam
jne
xor
imul
mov
or
adc
sub
xor
js
idiv
pop
sub
popf
sub
push
mov
mov
xor
add
inc
sub
insl
lock
mov
rcrl
test
xchg
loopne
sbb
inc
xor
cmp
shrb
adc
cmp
jne
lret
orb
insb
and
test
adc
xor
rcll
inc
divb
int3
push
fidivrl
jecxz,pt
mov
arpl
cli
inc
mov
daa
outsb
arpl
loopne
gs
repnz
bound
mov
add
xchg
cmc
js
mov
dec
pop
push
sbb
pusha
dec
dec
sbbb
and
jb
xor
xchg
sub
inc
outsb
pushf
es
and
pop
mov
sub
and
cltd
lret
outsl
add
lret
lods
out
jmp
fwait
push
mov
lock
xchg
movl
pop
shl
call
dec
fdivrs
repnz
mov
jmp
ret
sub
scas
dec
and
repz
cwtl
fisttps
fcompl
lods
mov
dec
jle
and
pop
in
pop
loopne
mov
sbb
je
popa
pop
xor
dec
mov
jecxz
bound
mov
insb
mov
cmp
push
mov
lea
adc
jns
shlb
insl
add
adc
mov
es
inc
mov
jl
lret
add
mov
lods
mov
mov
leave
aad
mov
cld
bound
test
sti
cmp
and
xor
int
dec
mov
push
jae
clc
pop
and
cmpsl
xor
imul
inc
xchg
dec
std
mov
pop
push
popa
mov
loopne
or
push
loope
or
test
scas
test
les
dec
es
pop
pop
into
add
jmp
iret
test
jmp
pop
push
and
jno
lods
xchg
cli
and
cmpsb
data16
mov
add
fidivs
push
inc
mov
lods
sbb
imul
mov
dec
or
or
int3
xlat
lret
mov
or
push
aas
lea
cmp
mov
sbb
pop
fsts
and
negb
cld
cmp
lea
push
xchg
pop
stos
js
fldenv
test
sub
mov
mov
sbb
push
insb
pop
mov
or
or
imul
jns
push
addb
popf
xor
dec
out
mov
rcr
imul
pop
or
std
and
inc
jb
das
dec
addr16
push
sahf
xorb
addr16
sbb
lods
mov
repz
sbb
push
push
int3
jae
cmp
ja
or
aaa
push
loopne
push
cld
lds
jae
xor
arpl
adc
or
add
mov
push
scas
enter
push
sti
ret
repz
aam
pop
daa
fs
push
mov
shll
adc
xor
pop
mov
into
iret
push
mov
mov
cmpl
add
pop
xor
dec
add
mov
stos
lods
bound
pop
jge
clc
and
sbb
sub
or
fcoms
sbb
sub
stos
adc
dec
push
rcl
dec
movsl
sbb
iret
and
bound
add
jno
les
mov
insl
jne
mov
imul
out
and
or
movsb
das
jle
lret
cmp
mov
sub
out
scas
cld
cltd
les
sbbl
inc
sbb
jns
xchg
cli
lock
sbb
lret
out
rolb
out
push
js
dec
dec
adc
pushf
pop
out
or
push
xchg
dec
addl
in
or
data16
into
push
cld
mov
inc
and
cmp
fsub
in
push
sub
mov
add
loope
sub
test
sbb
pop
clc
cld
xchg
pop
mov
lret
mov
popa
ja
mov
xchg
data16
lahf
mov
pop
test
sub
or
cmp
mov
sub
xchg
fldcw
imul
or
or
into
insb
in
dec
jae
mov
enter
aas
mov
ljmp
aam
mov
aas
jns
aas
adc
xchg
fstpl
lock
arpl
sbb
xlat
pop
fmul
pop
out
fldl
cmp
xchg
inc
sub
sar
cmc
movsb
cmpsl
jb
fidivrs
cmc
jne
jp
in
dec
cltd
fcomp
and
jmp
cli
pusha
sbb
cmp
mov
xor
mov
scas
pop
pusha
or
addr16
cld
jb
sbb
aas
fsubl
cmp
icebp
leave
xor
clc
xchg
test
sub
addr16
push
jp
push
push
or
adc
jbe
not
aas
outsb
push
xor
loopne
cli
inc
push
in
imul
cmpl
cwtl
dec
sbb
mov
xchg
jae
fldenv
mov
cmp
rcrl
popf
aam
inc
sub
mov
adc
mov
jno
mov
push
movntq
mov
dec
mov
mov
idivl
mov
inc
xchg
inc
mov
xchg
divb
out
mov
add
inc
add
xor
outsb
adc
xlat
pushf
in
rol
xchg
pop
cs
mov
test
pop
xchg
je
insb
sbb
pushf
enter
into
jns
enter
mov
inc
push
fcmovbe
in
aam
xchg
pop
mov
xlat
xor
fwait
inc
push
adc
in
fstpl
push
pop
cmp
mov
push
or
jo
pop
inc
lods
mov
test
push
out
add
mov
aaa
cmpsl
das
dec
sub
xor
int3
sahf
sbb
repnz
xchg
test
and
out
js
mov
adc
hlt
adc
pop
fsubl
sti
cwtl
not
int
imul
out
sub
mov
out
push
imul
and
push
stos
jp
xchg
in
aaa
jbe
mov
inc
mov
repnz
adc
stos
mull
loop
sbb
sbb
mov
mov
hlt
stc
xchg
xor
pop
sub
sbb
insb
or
cmpsl
jae
or
popa
mov
repnz
inc
mov
daa
or
je
mov
mov
and
nopl
pop
jge
div
lahf
sarb
sbb
mov
orb
adcb
jg
adcb
jl
mov
or
pop
movsl
lcall
dec
ret
rcl
mov
dec
ret
cmpsb
aas
mov
sbb
scas
mov
out
dec
gs
in
shll
mov
or
ljmp
shll
sbbl
aas
fcomip
fbstp
fbld
add
pop
lock
mov
js
add
adc
xchg
xchg
stos
int
jmp
mov
mov
push
bound
jns
mov
flds
sub
pop
jge
pop
pusha
mov
xor
push
addr16
cs
lret
xchg
lcall
pop
inc
inc
push
adc
xchg
out
sbb
divl
sbb
lods
clc
loopne
les
xchg
xlat
jno
sbb
jge
mov
fstl
fsubr
into
dec
inc
cmc
mov
lods
addr16
sub
mov
jl
out
int
mov
scas
push
sub
pop
xchg
or
or
mov
mov
orl
jp
outsb
insl
rcrl
lods
sbb
repz
shlb
imul
das
pop
iret
lock
test
inc
out
xchg
pop
hlt
into
dec
cmpsb
sbb
adc
mov
or
jmp
repz
lock
cli
mov
fldl
pop
xor
push
in
push
and
mov
in
loop
sahf
jbe
sbbl
sti
enter
test
cmpsl
je
cmpsl
push
sarb
xchg
flds
push
insl
in
outsb
in
je
iret
or
icebp
xchg
aaa
ret
mov
loopne
jp
or
dec
lahf
repnz
mov
add
ljmp
and
sub
push
insb
ljmp
lds
inc
popf
cmp
stc
adc
push
or
add
popa
int3
xor
test
sub
fiadds
xchg
pushf
push
mov
jmp
hlt
ret
mov
mov
mov
int3
pop
xor
mov
test
mov
loopne
and
outsb
dec
pushf
icebp
mov
jg
nop
cmp
sbb
out
outsl
mov
pop
imul
dec
push
add
jno
ss
sub
xchg
pop
incb
pop
ret
sbb
fcoms
inc
sbb
pushf
addr16
loope
pop
jne
push
js
adc
imul
or
out
out
push
push
mov
adcl
sbb
sbb
xchg
aad
lcall
mov
aas
sub
mov
mov
stc
jge
push
fiaddl
sub
out
mov
mov
in
ss
imul
mov
fadd
es
jmp
dec
cld
xlat
fwait
inc
out
inc
das
adc
jp
mov
in
data16
repz
call
test
jno
cli
arpl
xor
mov
inc
sub
adc
sbbb
sub
xchg
cld
and
aam
loope
data16
fstps
mov
cmp
fbstp
mov
cmp
incl
mov
pop
jge
je
ror
imul
lcall
cwtl
jbe
push
adc
jg
adc
mov
sub
hlt
mov
push
push
push
cmpl
lret
int3
sbb
call
cwtl
fmuls
lods
les
les
out
cs
mov
fimull
mov
dec
pop
xchg
mov
out
mov
fidivrl
shl
int3
inc
aas
xchg
insb
inc
testl
fsts
loope
inc
mov
cltd
js
nop
ja
jne
pop
cmp
sub
pop
sub
loop
jne
mov
mov
mov
lcall
fsubrl
fstpt
dec
in
daa
lea
jb
das
xchg
inc
jne
imul
sbb
mov
gs
adc
data16
cmp
and
int
and
in
push
neg
cli
mov
in
scas
leave
xor
mov
ja
mov
lahf
dec
inc
inc
xchg
imulb
addb
sbb
or
xchg
pop
mov
mov
mov
movsb
jecxz
cmp
sbbl
sub
es
lock
mov
pop
fnstsw
mov
push
test
stc
mov
xchg
push
cltd
das
adc
test
and
repnz
jb
fwait
imul
loope
fistps
sarb
movsb
decl
inc
mov
pop
xchg
imul
mov
jp
addl
xor
add
fistps
inc
cmp
ret
insb
into
mov
aam
test
insb
jne
or
pop
jb
popa
into
enter
rorl
cmpsl
mov
jge
cmpsl
push
inc
int3
and
lods
xor
xor
sub
cld
push
imul
nop
out
or
lods
lods
mov
adc
scas
push
xor
testl
sahf
imul
push
jmp
loop
mov
lahf
sbb
scas
mov
scas
int3
xchg
lret
and
pop
xchg
clc
add
iret
or
aad
imul
scas
fwait
xor
fbstp
loop
dec
mov
adc
pop
ljmp
jb
mov
imul
dec
nopl
xor
pop
lods
jbe
test
std
js
sti
cmp
dec
mov
mov
adc
lcall
repz
cltd
repz
sub
jg
cmp
js
cmp
stos
rorb
lods
leave
mov
outsl
stc
imul
aam
inc
lret
jne
popl
add
lds
fdivrl
stc
sbb
dec
gs
int3
lods
shrl
xchg
iret
scas
jl
subb
sub
cmp
adc
sarb
and
cmp
push
sahf
pop
lods
mov
rolb
stc
clc
data16
out
mov
sub
ja
lods
ja
lods
ss
cmp
push
and
movsb
and
push
and
movsb
xor
mov
xlat
popa
xor
loopne
loopne
shrl
jp
js
mov
aad
mov
pop
lods
loop
pop
aad
roll
sbb
cmp
scas
jp
pop
repz
out
in
jle
add
xor
hlt
in
loopne
ss
repz
test
fstl
adcl
xor
lret
jmp
pop
sti
xchg
pop
jno
sub
pop
ljmp
push
lock
test
dec
mov
cmp
sbb
xchg
movsb
pop
pmuludq
outsl
and
loop
loopne
cltd
add
push
add
pop
cmp
mov
mov
lea
fisubl
imul
push
lock
je
jno
push
cs
test
cmp
sarl
xchg
and
ret
xchg
in
popf
sub
and
in
and
addr16
mov
movsl
add
sub
mov
out
in
fisttps
or
jb
jle
add
mov
outsl
sub
in
je
rolb
adc
loopne
inc
ljmp
pop
mov
fcomps
push
daa
sbb
mov
ret
ljmp
pusha
shrb
ret
xor
cmp
scas
push
pop
cmc
fldcw
daa
pop
aam
jbe
inc
stos
and
inc
sarb
and
inc
out
leave
roll
jg
pop
mov
sbb
push
jmp
bound
lods
push
cltd
push
in
and
and
inc
mov
jne
or
pop
cmp
inc
pop
fcmove
or
pop
pop
fbstp
fwait
mov
pop
out
xchg
cmpsl
cmpl
rcrl
fadds
xchg
lcall
mov
mov
sub
loop
in
es
ljmp
push
xchg
out
xchg
sahf
out
in
cmpb
inc
jl
loope
dec
ss
sub
mov
pop
fsts
cmp
mov
cwtl
jb
inc
sbb
mov
bound
dec
ss
xchg
data16
xchg
or
fcomps
xor
stos
mov
mov
cwtl
dec
in
pop
cmpsb
jecxz
adc
inc
not
shl
movsl
lret
mov
push
pop
cmp
shrl
out
cltd
in
adc
inc
stos
push
xchg
das
rcll
mov
push
xor
ljmp
into
jnp
setno
pop
out
or
ret
fcompl
or
sahf
cld
mov
fadds
and
cmpsl
mov
mov
in
xchg
cmp
idivl
pop
push
in
or
out
or
inc
lock
xor
or
mov
icebp
jl
add
inc
ljmp
cwtl
orb
cmp
mov
sar
scas
jae
push
leave
sbb
or
push
mov
push
pcmpeqb
jp
mov
fs
hlt
loopne
insl
movups
inc
mov
cmp
lock
sub
mov
xchg
push
inc
sahf
insb
mov
mov
pop
out
mov
scas
cmp
add
aas
daa
sbb
push
fsubrl
in
xor
inc
dec
loope
imul
pushf
pop
stc
adc
or
aaa
int
loope
push
aad
fnstenv
mov
xor
pusha
fcompl
jle
rorb
jle
scas
push
jae
popf
xchg
fbstp
dec
cmc
push
jmp
leave
aad
pop
insl
aas
sbb
lods
jmp
enter
test
mov
repz
into
push
push
fs
cmc
xchg
xor
xchg
cwtl
inc
aaa
cmp
dec
adc
mov
mov
mov
mov
sahf
adc
add
mov
imul
sahf
out
xchg
inc
fcomps
int3
xor
es
push
pop
data16
adc
push
cmp
cld
movl
test
or
mov
ds
daa
jbe
stc
adc
scas
idivb
jno
cmp
jmp
or
dec
adc
icebp
dec
outsl
test
jo
mov
ja
xchg
or
xchg
es
mov
push
inc
jo
inc
cli
mov
mov
cmpb
inc
push
xchg
xor
push
stc
push
cs
pop
xor
push
jmp
jbe
xor
dec
lds
lds
dec
into
mov
stc
mov
add
repz
xchg
jbe
into
pop
insl
pop
jne
push
pushl
sbb
jmp
xor
iret
enter
shlb
xor
jle
add
mov
lcall
std
or
cmp
sbb
xor
stc
cmp
sbb
sbb
ja
bound
pusha
adc
inc
pop
lock
movsl
out
dec
jo
sub
popf
es
loope
es
movb
add
ficomps
mov
insl
jno
int3
push
or
push
jge
pop
sub
mov
js
xor
cmp
xor
les
push
or
popa
mov
inc
imul
pop
cs
dec
incb
daa
jmp
repz
in
dec
pop
inc
dec
jge
aam
idivl
xchg
out
jnp
jae
imul
push
xor
xor
and
mov
iret
dec
rcll
xchg
lock
jecxz
insl
dec
repnz
jno
pop
push
mov
dec
or
int
dec
dec
in
add
lock
inc
or
loope
out
shr
add
cmpb
clc
notb
mov
outsb
jmp
and
mov
outsb
pusha
mov
stos
push
push
popa
xchg
stos
pop
call
in
ret
adc
movsb
mov
xchg
xor
mov
ret
mov
imul
clc
and
sbb
adc
xchg
sbb
mov
test
shrb
sub
pop
cmp
inc
push
insl
xlat
stos
adc
xor
das
lods
pop
aaa
out
enter
mov
in
sub
jo
add
cmp
pop
ja
divl
pop
mov
jecxz
enter
and
add
jns
out
imul
movsb
xchg
ret
jmp
push
fdivp
or
add
addr16
cmc
popa
jmp
lea
lds
or
jge
jp
cmpsb
jbe
sub
add
es
pop
inc
out
loopne
jp
and
adc
push
dec
sbb
cmp
pop
das
in
mov
movl
int3
mov
inc
mov
pop
pushl
push
push
fbld
dec
mov
jle
int3
call
mov
inc
cmp
pop
enter
das
push
rolb
lcall
stos
mov
xchg
in
pusha
inc
jae
ret
call
cmp
jmp
jg
pop
std
push
sub
xor
or
jno
sbb
jge
mov
lock
loopne
scas
scas
adcl
adc
mov
xor
in
dec
movsl
xor
lds
orl
adc
jle
add
inc
or
add
nop
mov
sbb
mov
iret
mov
outsl
sbb
jo
sbb
push
pop
out
mov
frstor
stos
and
inc
dec
dec
test
mov
jnp
add
add
xor
ds
mov
adc
dec
mov
xchg
sbb
je
xchg
js
pop
pop
fnsave
jle
sub
add
addb
pop
lret
mov
push
xchg
movsb
jp
pop
sbb
or
fld1
pushf
push
sbb
xorb
jb
mov
sbb
lret
jbe
call
out
mov
cmc
push
mov
or
inc
insb
lahf
notl
dec
in
sarl
cli
in
push
loop
sub
push
shr
adc
jg
cwtl
insw
dec
mov
lret
ljmp
insb
jl
cmpsb
aaa
aas
shrb
rcrb
jno
movl
test
shlb
rcrb
mov
pop
je
push
lea
out
push
add
xor
inc
decl
push
arpl
push
pusha
movsl
xchg
mov
fld
mov
sbb
jbe
nop
dec
xchg
sbbb
dec
fwait
cwtl
pop
push
mov
push
ja
daa
loope
push
repz
mov
repnz
mov
daa
cmp
ljmp
lret
add
loop
fs
loop
cmpsl
and
push
imul
mov
shr
rorb
add
loop,pn
mov
cmc
pop
mov
movsb
jl
sti
cmp
xor
or
es
pop
pop
js
and
xlat
mov
andl
jmp
sbb
push
dec
in
xchg
and
loope
hlt
ljmp
ss
mov
pusha
mov
push
movsb
in
in
pop
lret
inc
std
stos
cmpsb
inc
iret
add
repnz
push
inc
fisttpl
mov
pop
es
adc
xor
push
jae
push
fildl
movsb
in
jnp
mov
jno
mov
ljmp
jne
aad
arpl
inc
dec
dec
add
or
cmovge
fdivl
pop
mov
push
xor
daa
jno
and
mov
xchg
cmp
xchg
or
push
sub
out
and
in
push
lahf
pop
outsb
andl
and
xor
mov
mov
aas
sub
imul
adc
sbb
mov
and
shrl
dec
popf
and
daa
lcall
cmp
frstor
pop
add
pop
pop
out
mov
enter
push
pop
xchg
sbb
jge
jmp
adc
cmp
xchg
or
xor
dec
cmpsb
sbb
lahf
incl
in
xchg
pop
repz
lock
cmpsb
inc
sahf
inc
icebp
pop
cmp
jle
js
sarl
sub
mov
dec
pop
xchg
mov
in
shrl
bound
int
cmp
jne
xchg
insl
add
sbb
xchg
js
mov
stc
mov
sahf
test
push
lret
xor
dec
adc
pushf
push
add
movsl
stos
loope
scas
lock
sbb
pop
adc
aas
sub
pop
mov
ds
pop
push
insb
sarl
cltd
enter
cmp
fmull
add
gs
loopne
aad
push
into
movsb
cmp
lret
push
mov
mov
dec
sub
mov
push
gs
push
das
sbb
push
stos
bound
out
pop
fisttpl
lea
faddl
or
bound
add
sbb
add
cmp
popa
adc
xchg
jns
add
xor
dec
outsb
xorb
cmpsl
xor
addl
sahf
sbb
mov
cmc
dec
sti
out
adc
xor
cmp
roll
ja
das
cmp
inc
mov
in
aas
dec
jp
imul
adcb
push
cwtl
adc
int
inc
es
imul
dec
enter
imul
xorl
aad
stos
dec
sbb
ja
push
xor
mov
sub
sbb
push
adc
iret
push
jns
sahf
gs
push
aad
hlt
mov
clc
fnsave
jge
dec
clc
lods
push
popf
cmc
and
mov
in
aas
jbe
jbe
jmp
jmp
xor
and
jo
xor
jmp
ficompl
ja
push
nop
insb
cmp
hlt
mov
iret
pop
mov
pop
call
in
xchg
and
loope
lcall
sti
push
ror
cli
pop
pushf
pushf
stc
or
mov
inc
repz
cmp
mov
mov
data16
sub
lret
out
push
lcall
les
adc
xor
jbe
insl
pop
imul
fistl
mov
into
jp
mov
mov
std
jo
int3
fdivs
mov
pop
insb
xchg
mov
inc
imul
shll
inc
or
adc
dec
sub
mov
and
inc
jecxz
lea
mov
push
push
pusha
cmp
fmulp
loope
jmp
pusha
push
popa
mov
push
inc
xchg
movsl
je
jmp
cmp
bound
gs
add
xlat
fsubrs
cmc
mov
push
loop
das
sub
roll
imul
out
jge
dec
int
jae
fst
lret
ss
inc
pop
nop
sti
call
push
push
stc
mov
imul
inc
gs
sti
popf
addr16
adcl
jnp
inc
loope
lock
inc
sbb
insb
jl
mov
adc
js
jb
test
jnp
mov
add
ret
push
mov
xchg
imul
loope
in
mov
adc
xor
push
jo
fadds
repz
cmp
jne
or
xchg
pop
mov
rcrl
into
imul
inc
and
xor
xchg
push
add
mov
movsl
push
shll
sahf
mov
push
in
daa
stos
inc
fbld
or
leave
dec
dec
gs
inc
or
std
mov
in
aas
sub
inc
fdivl
out
in
aas
iret
clc
mov
test
in
out
cwtl
mov
inc
mov
sub
adc
jge
cmpsb
mov
push
jae
xor
and
scas
cld
jne
stos
out
and
and
push
push
not
jno
inc
test
or
mull
xor
push
mov
or
dec
dec
arpl
ret
push
push
icebp
in
push
mov
popa
pusha
inc
jns
or
pop
xor
jp
cmp
ret
or
insb
sbb
push
ljmp
add
mov
xchg
lgs
pusha
movsl
push
leave
dec
movq
pusha
gs
sub
cmpsb
mov
mov
mov
push
daa
xor
lahf
and
mov
sub
mov
je
push
test
add
cwtl
stos
pop
mov
rol
fadd
adc
sbb
in
jbe
ret
pop
mov
addr16
imul
xchg
outsl
fadds
cwtl
xorl
xchg
jo
jecxz
xor
mov
jmp
pop
push
dec
ret
notl
jg
cmp
adc
arpl
mov
lret
dec
xchg
dec
sar
dec
mov
jmp
arpl
lret
shlb
ret
sbb
dec
lret
pusha
push
sarb
aaa
dec
lret
xchg
xchg
mov
fnsetpm(287
lret
fldcw
rclb
in
xchg
sarl
jg
jp
cmp
mov
ja
test
lock
cld
dec
lcall
add
aam
dec
and
popa
lret
data16
cmpsb
jb
push
es
mul
sub
mov
cmp
mov
cmpsb
test
insb
sbb
mov
ficompl
inc
mov
in
mov
popf
scas
xchg
stc
stos
adc
mov
pop
xchg
push
lock
roll
js
sub
in
push
shr
dec
pop
popa
mov
stos
loope
mov
lea
mov
hlt
mov
imul
dec
add
popf
inc
and
fistpl
mov
xchg
pop
and
out
clc
adc
dec
ror
cmc
adc
cmpsb
push
ds
xchg
xchg
in
and
sbb
push
mov
stos
mov
vmovupd
leave
push
ljmp
xor
test
add
in
aas
sbb
ret
and
addr16
fldcw
mov
jg
mov
pop
jp
das
andl
and
dec
fistps
push
push
jne
pusha
inc
ret
ror
sahf
push
stos
fndisi(8087
dec
loop
cmp
hlt
dec
das
add
jae
push
add
cwtl
mov
pop
adc
xor
loop
sbb
mov
fchs
addr16
xchg
movsl
or
mov
jmp
pushf
test
popf
mov
jns
push
adc
shrl
dec
roll
xchg
aas
sti
arpl
dec
add
mov
xlat
test
insb
outsb
loope
push
cltd
aad
mulps
pushf
mov
and
cmp
dec
aaa
insb
inc
and
dec
cmc
aaa
and
push
or
idiv
int3
mov
or
insl
sbb
jge
dec
jl
lar
mov
pop
fistpl
mov
sahf
iret
cmp
fcompp
retw
mov
or
mov
jne
add
adc
push
imul
mov
testb
push
jae
sub
inc
outsl
sub
or
dec
sub
stos
popf
inc
addr16
test
adc
imul
adc
dec
test
orl
out
sbb
sub
mov
shl
sbb
sub
cwtl
aam
scas
es
in
mov
sub
sbb
mov
xor
movsl
mov
push
shll
push
lock
incb
lods
lock
jno
fs
popa
movsb
lcall
fcomps
adc
jl
cmp
xchg
lods
jo
out
popa
sbb
adcl
repz
sub
lret
add
aam
sub
pop
in
mov
jmp
push
addr16
or
dec
mov
jle
into
fdivs
and
push
ret
fdivrs
aad
cmovno
sub
outsb
sbb
mov
movsb
inc
push
popf
push
jge
cs
es
cld
xchg
cmp
mov
push
pop
fs
push
cwtl
fld
mov
cmpsl
lahf
in
push
pop
dec
int
jns
outsb
xor
repnz
mov
cmpsb
xchg
pop
or
aam
mov
lods
sub
adc
add
les
sbb
int
cmp
xchg
sbb
sbb
mov
mov
ss
sub
push
inc
push
scas
xchg
jg
call
aam
lcall
mov
jbe
popa
sub
in
xor
aaa
or
std
mov
pop
cmp
jl
jbe
add
test
iret
negb
mov
insb
push
fs
enter
or
adc
idivl
enter
sub
inc
push
jge
dec
push
out
fsubrs
icebp
jnp
mov
inc
insb
fldt
xchg
xchg
pop
jp
jb
cmc
mov
fsubrl
sub
dec
shlb
rol
mov
ljmp
jmp
or
aas
es
mov
mov
fmuls
test
stos
cli
repz
add
lds
sbb
pop
les
dec
push
leave
xor
adc
push
xchg
or
adc
adc
push
mov
push
jle
rcll
mov
pop
mov
lods
mov
mov
sar
mov
cmc
cmpsb
jl
outsb
add
jmp
out
icebp
fdivrl
shl
xchg
adc
loopne
loopw
mov
fsubl
cltd
mov
test
iret
push
sub
aad
inc
lahf
pop
inc
leave
or
mov
ret
clc
aaa
sbb
insb
push
add
pushf
and
lahf
in
adc
jns
and
jmp
sbb
jl
dec
add
dec
clc
mov
je
mov
mov
scas
inc
mov
pop
jae
jns
sub
or
and
xor
popa
push
jo
ljmp
lret
cli
dec
leave
xor
or
fnsave
je
adc
repz
mov
ret
dec
xchg
out
pushf
cmp
push
dec
push
andb
loop
sbb
jl
lahf
imul
outsb
add
loope
xchg
push
repnz
lds
and
dec
cmc
outsb
xchg
or
gs
sahf
in
mov
sbb
xchg
stc
aas
adc
fs
sti
mov
rclb
lret
jl
pop
in
aaa
xchg
loop
lds
pusha
loopne
mov
aam
push
adc
dec
inc
mov
pop
pusha
hlt
mov
cmp
into
test
and
sbb
xor
dec
jne
mov
mov
dec
out
imul
xchg
pop
and
stc
mov
jge
loopne
dec
loopne
pop
in
ja
cmpsl
jge
adc
in
sahf
jecxz
xor
les
inc
pushl
adc
movsl
sbb
ret
xor
mov
mov
shll
sbb
cmp
mov
shrl
leave
cmpsb
xchg
pop
dec
pop
test
adc
aad
xchg
or
fisttps
mov
pusha
push
mov
ljmp
lret
adc
dec
add
push
loopne
xor
pop
xchg
insl
mov
pushf
fcomps
in
mov
or
out
lahf
repz
sub
cmp
sbb
cmpsl
leave
and
sub
or
enter
fsubr
repnz
push
and
or
outsb
outsb
mov
cmpsb
fwait
aad
jno
adc
xchg
int
jbe
das
inc
addb
flds
inc
mov
push
fisubrs
mov
jbe
scas
in
into
mov
and
pushf
popf
outsl
mov
in
xchg
addr16
push
cmp
loopne
test
and
sti
enter
lcall
push
dec
lahf
pop
stos
push
inc
and
xchg
sar
pop
iret
inc
push
pop
cmp
int
dec
or
repz
test
push
sahf
shl
adc
aaa
jle
sbbl
in
scas
das
stos
mov
lock
std
testl
jne
fdivrs
and
cmp
mov
or
and
fwait
pop
pop
inc
sub
fcomip
push
icebp
aaa
pop
rcl
and
jmp
mov
pop
jge
xor
mov
inc
mov
pop
jmp
sbb
lods
mov
loope
mov
insb
add
push
mov
inc
push
jns
aad
inc
adc
cmc
movsl
jmp
inc
loop
cmc
sbb
cs
negb
jne
int
jg
mov
cmpsb
pop
xor
and
lea
aas
rep
movsb
pop
loop,pt
movsl
mov
xorb
adc
cmp
mov
cmp
insb
insb
inc
in
ja
fsubl
xchg
mov
into
negl
ror
pop
lret
jbe
in
jo
push
mov
mov
mov
mov
roll
mov
pusha
frstor
and
into
sub
mov
movsb
push
adc
add
mov
or
mov
fadds
bnd
mov
out
jle
mov
jecxz
fidivrs
add
stos
sub
mov
push
cmp
cmp
fs
jecxz
js
inc
cs
rcl
daa
sub
cltd
lret
data16
adc
bound
ja
lcall
or
mov
sbb
test
dec
enter
jmp
mov
test
rol
lock
pop
loop
xchg
xchg
xchg
mov
add
fmull
fcmovu
mov
sti
xchg
push
mov
mov
fldcw
rcrb
into
fwait
cmc
jp
out
dec
jo
mull
loope
xchg
pop
orb
imul
cmpsl
sbb
imul
jl
test
mov
cmp
or
mov
inc
pop
imul
repnz
insb
insb
dec
daa
mov
push
in
push
negb
pop
adc
mov
inc
call
add
stc
push
dec
or
jbe
test
fistpl
cmc
loope
fdivrl
adc
jb
js
add
sub
push
xor
and
lahf
lcall
jmp
jo
arpl
rcrb
mov
pop
imull
cltd
pop
cmp
divb
stos
xor
fiadds
mov
popa
insb
jno
and
lds
out
mov
jecxz
inc
xor
leave
mov
inc
fmull
mov
lds
inc
inc
andl
sub
cmpsb
mov
lock
out
inc
test
mov
fucomip
ss
cs
sti
inc
insb
imul
jl
insl
mov
jo
add
mov
xchg
aas
sub
cmp
inc
xchg
loope
mov
xlat
and
lods
in
mov
mov
je
icebp
or
jmp
xchg
addr16
aam
or
cmp
iret
push
cmp
and
sar
or
orb
jae
sub
repz
icebp
inc
ret
idivl
notl
xor
cmp
je
mov
xor
push
enter
xor
rolb
mov
jecxz
inc
or
sbb
push
out
leave
scas
mov
fimuls
sub
cmp
add
add
vsubsd
inc
call
inc
negb
negl
test
les
loopne,pn
jp
jbe
outsl
add
ret
mov
mov
adc
jnp
xlat
fisttpll
ja
xchg
pop
mov
aam
jmp
xchg
push
cmpsl
sbbb
pop
js
js
xchg
into
jae
mov
loope
in
pop
sbb
inc
not
outsb
addl
sub
outsl
dec
and
cld
xchg
enter
xadd
fimuls
pop
mov
test
mov
push
rcr
leave
inc
sbb
xor
stos
popf
ja
pop
xorl
scas
jecxz
divl
pop
adc
pushf
dec
push
xor
popf
ds
add
push
add
ljmp
dec
sub
imul
cltd
push
cmc
pop
andb
cmp
inc
stos
xchg
dec
sti
lock
add
addr16
pop
rcll
sub
or
scas
arpl
mov
sbb
gs
xor
outsl
sbb
pop
dec
mov
popa
push
fsts
xchg
push
js
and
jne
mov
push
inc
rcrl
scas
xchg
aaa
push
cltd
call
mov
sub
adc
cmpsb
loopne
adcb
mov
adc
xlat
out
mov
lods
push
shll
cli
dec
adc
stc
pusha
sub
mov
ss
aad
adc
push
mov
cmp
loope
fmulp
xor
loope
rcll
mov
decl
add
dec
pop
pop
jge
ljmp
and
inc
jno
mov
inc
mov
push
insb
and
add
xchg
xor
aam
and
daa
push
or
adc
xchg
inc
outsb
ja
dec
mov
test
cli
ljmp
jae
shlb
cs
add
out
push
mov
ja
jne
cmpsb
mov
or
jp
mov
sbb
inc
cmp
mov
repnz
lret
lods
jp
jl
dec
outsb
sub
das
mov
repnz
lods
dec
pop
lret
xlat
lds
push
pop
int3
pop
imul
testl
or
sub
ficomps
cs
bound
jg
mov
sub
cmc
imul
cmp
fadds
in
push
cmp
fldt
fistl
mov
push
mov
add
mov
cmp
fdiv
lock
xchg
xchg
cmp
dec
mov
add
push
fcompl
sub
xlat
xorb
lods
fwait
shl
cmp
ss
out
fisubs
jge
lahf
mov
lret
ljmp
adc
enter
jbe
jns
sub
or
mov
pop
mov
incb
xchg
mov
lahf
adc
sbb
dec
cmpsb
pop
aas
fsubr
pusha
adc
xor
pop
xchg
cli
leave
fmuls
shll
div
push
movsb
movsl
gs
jne
adc
mov
bound
push
or
and
xchg
out
ret
push
loope
inc
int
xor
sarl
je
adc
xor
jne
mov
adc
movsb
repz
ret
cmp
add
cli
xlat
mov
aad
mov
popa
or
pop
cmp
xor
pop
movsl
mov
mov
cmc
xchg
ja
out
inc
aad
push
cmpsb
jbe
inc
movsb
ss
sub
movsb
push
clc
dec
test
push
je
cmp
es
in
and
push
aas
inc
pop
mov
js
pop
push
loope
rol
pop
lock
stc
cmp
ds
bound
adc
adc
push
jb
testb
push
ljmp
test
or
jno
pop
js
adc
aaa
loopne
dec
lret
cmp
xchg
out
addb
xchg
jns
jle
sar
pop
scas
pushf
jl
push
sub
enter
or
xchg
in
rcr
ja
adc
daa
sbb
add
addl
pop
xor
dec
mov
lods
ret
mov
push
imul
sahf
imul
mov
test
leave
into
imul
or
leave
loopne
movsl
pusha
jle
in
lahf
lods
subb
ja
les
dec
cli
ror
dec
movsl
icebp
xchg
inc
lock
sahf
and
sbb
xor
dec
cli
sbb
repnz
mov
xor
add
add
ficomps
outsb
mov
dec
leave
test
pop
data16
out
notl
inc
stos
jge
xor
mov
pop
xor
push
xor
mov
ss
mov
daa
adc
xor
sar
ss
cmp
and
mov
bound
inc
cld
mov
pop
cmp
cltd
dec
dec
and
sbb
mov
jl
xor
adc
inc
sub
or
enter
pop
xchg
push
iret
mov
push
pop
pop
fcmovnbe
aad
mov
fisttpl
hlt
mov
xor
aaa
fcomi
jp
nop
sub
pop
cmp
mov
imul
mov
pop
inc
test
negb
push
movsl
test
rcrb
outsl
je
push
pavgw
repnz
fsubl
mov
cmpsl
addb
lods
mov
loop
jnp
push
jmp
and
mov
pop
mov
pusha
inc
inc
jmp
pop
adc
xchg
pop
test
inc
outsb
movsb
adc
mov
sbb
pop
or
pop
dec
loopne
popl
and
ret
dec
mov
stos
sub
daa
cwtl
cwtl
dec
imul
fwait
popa
ucomiss
aaa
ret
dec
stos
sub
inc
push
sbb
jmp
sbb
punpckhwd
xor
sub
scas
addr16
or
aaa
das
inc
push
imull
mov
ljmp
ficompl
adc
mov
and
inc
push
xchg
hlt
daa
jmp
scas
push
das
jmp
jb
cmp
loop
inc
lods
clc
xlat
inc
ja
sahf
fstpl
mov
push
sbb
js
fcomip
jbe
imul
js
idiv
out
cmp
adc
hlt
leave
aam
loop
cmp
mov
mov
mov
mov
imul
and
bound
mov
mov
cli
ljmp
sti
xor
sub
and
mov
mov
sbb
in
mov
in
int3
leave
in
fs
dec
cmp
or
push
sarl
out
fmuls
out
push
sti
hlt
fnstenv
jne
das
arpl
xchg
outsb
xor
lods
sub
cmp
pop
inc
adc
movsb
jmp
pop
pop
push
inc
scas
pop
es
out
cwtl
lods
ss
xor
cmp
adc
add
in
outsl
sbb
enter
addr16
jnp
pushf
andl
cld
das
push
cmp
push
popa
mov
cmp
mov
mov
test
call
icebp
dec
xlat
iret
xor
xorb
hlt
inc
cmp
mov
sub
movsl
xchg
inc
inc
sub
pop
jg
jl
mov
push
jno
ja
ss
cld
jae
cmpb
pop
and
xor
js
ja
outsl
fs
push
gs
and
repnz
mov
mov
pop
sub
mov
inc
dec
xchg
mov
pop
cmpsl
mov
and
pushf
and
adc
sbb
add
and
test
popf
leave
pop
in
xchg
mov
sbb
ror
jmp
enter
mov
mov
pop
cltd
push
xlat
mov
pop
or
jp
inc
xchg
dec
cmpsl
jge
jno
cmpsl
push
jmp
dec
adc
hlt
outsb
jge
in
cwtl
or
cmc
dec
arpl
cmpsl
ja
adc
lds
sub
ss
mov
in
inc
xchg
sbb
stos
or
xor
loop
inc
sub
dec
jns
sub
and
sti
and
sub
nop
sahf
pop
push
paddd
xor
cs
in
lds
and
push
inc
mov
ja
push
imul
outsl
outsb
mov
sbb
or
jle
aad
add
test
pop
jmp
xor
or
pop
lods
or
aas
cli
fisubrl
pop
negl
pop
mov
fnstcw
mov
dec
xchg
ret
stos
sbb
nop
jae
ljmp
pop
hlt
imul
insl
mov
aas
ret
inc
dec
cli
jle
xchg
inc
jl
add
sub
sub
hlt
jb
and
fsincos
pop
mov
call
push
outsb
inc
inc
fcmovnb
lea
setns
fwait
hlt
into
stc
fiaddl
push
int3
mov
xchg
stc
xor
mov
inc
cmp
leave
aad
inc
cwtl
push
jecxz
push
sbb
cwtl
sbb
insb
rolb
out
lret
nop
and
fcomip
stos
scas
jmp
xor
mov
xchg
adc
mov
and
in
jne
xor
add
arpl
gs
mov
call
jbe
jns
mov
ja
pop
dec
pop
imul
stos
divb
jg
fdivrs
test
jle
int3
out
inc
sbb
jne
sub
xor
ds
test
push
push
das
push
adc
in
mov
dec
adc
std
shl
aas
outsb
fwait
imulb
push
mov
jne
cmp
sbb
and
loope
test
int
loopne
adc
lock
inc
adc
insb
stc
cmp
and
pop
addl
push
xchg
lods
mov
add
fs
popa
mov
imul
push
roll
dec
xchg
push
imul
gs
stos
repnz
jge
mov
das
inc
xor
cli
sub
push
sub
lret
mov
sbb
sbbl
ficomps
in
xchg
shlb
int
es
push
mov
sub
in
sub
cmp
pop
cmp
hlt
push
add
in
into
push
fcomps
orl
dec
in
mov
in
mov
mov
pusha
std
pusha
jle
popf
and
sbb
or
mov
sub
jae
mov
jmp
push
sbb
mov
out
cmpsl
icebp
push
leave
movsl
mov
out
aad
mov
add
sti
mov
xchg
push
pushf
call
mov
sbb
xchg
ljmp
inc
sahf
stc
lahf
insl
in
imul
adc
out
mov
call
cld
mov
ss
add
pop
mov
pop
insl
xchg
or
loopne
xchg
xor
sub
stos
dec
or
dec
fwait
shll
in
aad
cwtl
or
jp
pop
push
xchg
sub
sahf
rorb
cmpsl
inc
ss
leave
mov
dec
adc
call
loopne
adc
iret
push
adc
popa
sbb
cltd
test
bound
mov
jno
push
out
outsl
lds
sub
fstps
loop
fsts
adc
and
mov
fisttps
push
xchg
mov
or
pushf
aaa
and
cltd
xchg
xor
icebp
ret
test
mov
aaa
out
jecxz
stc
xchg
dec
sub
inc
insb
je
andl
pushf
jg
cmpsb
jg
xchg
jp
mov
rclb
cmpsl
mov
lret
jae
iret
js
popf
xchg
loope
mov
shrb
push
ja
int3
stc
insb
inc
imul
mov
addl
sub
cmp
lea
push
add
dec
add
add
sub
sbb
or
movsb
js
ror
or
sahf
cwtl
jmp
xchg
into
xchg
add
push
dec
hlt
adc
scas
out
mov
pop
dec
jl
lea
fldt
ds
xor
or
mov
and
neg
jo
adc
shrl
mov
into
test
outsb
sub
jnp
and
xor
xchg
inc
faddl
push
jecxz
xorb
cs
sub
insb
into
mov
hlt
dec
pop
into
ret
shrl
pop
mov
test
ud1
fisttpl
pop
mov
cmc
cmp
lret
xor
add
ljmp
clc
jle
lcall
or
mov
nop
movsb
inc
xor
rcr
aad
pop
adc
addl
inc
inc
pop
cld
jg
testb
int
pop
loopne
lods
movsb
or
or
mov
or
mov
and
xchg
mov
iret
jns
inc
sub
mov
clc
mov
sbb
cmp
hlt
roll
scas
dec
xchg
xchg
ret
aaa
mov
sti
inc
test
xchg
je
sbb
mov
sbb
sar
cs
sub
test
cmp
ret
pop
lret
mov
repnz
and
lahf
rclb
ret
mov
popa
adc
addr16
fldcw
cmpb
jo
adc
mov
fs
lds
pop
pop
lods
xchg
pop
push
das
dec
jnp
jecxz
out
mov
mov
ja
sarb
inc
fnsave
cs
or
aam
fdivl
loope
cwtl
xor
sti
mov
adc
fmuls
fwait
push
mov
inc
sbb
out
cmp
rclb
negb
xor
fcmovbe
in
fstps
jp
dec
sbb
xor
jmp
lea
mov
sahf
dec
pop
loop
dec
and
push
mov
mov
and
sbb
repnz
push
sahf
or
loopne
pushf
sub
imul
ljmp
sub
or
pop
push
xor
push
iret
mov
pop
test
inc
sbb
ret
aad
out
push
clc
loop
movsb
push
jg
out
xor
xor
movsb
mov
mov
inc
pusha
mov
sub
lahf
sub
imul
out
lahf
sahf
and
leave
faddl
filds
les
lret
aam
shr
ds
loop
sub
in
cmpsb
mov
sbbb
outsb
mov
mov
mov
or
xchg
das
inc
xor
sti
imul
cli
fisubs
mov
or
push
jmp
dec
dec
push
sbbb
test
mov
call
shl
ret
clc
sahf
sub
sbb
jae
lods
sbb
out
addb
ficoml
sbb
out
stos
xor
mov
mov
std
ljmp
jp
bound
pop
ret
xchg
xchg
pop
int
lret
gs
and
popa
ja
out
in
shll
mov
adc
fwait
adc
or
test
testb
sarb
fwait
repnz
xchg
lods
jno
mov
jle
cmp
shlb
push
or
pop
mov
add
dec
pop
insl
lds
add
mov
pusha
inc
ficomps
sbb
addr16
mov
push
sub
add
jns
jge
shlb
or
pop
jo
xor
movsl
jne
outsl
les
push
int3
repz
repnz
addr16
addr16
jbe
mov
fists
rorb
ljmp
jne
sbbl
outsb
mov
mov
outsb
xor
push
add
nop
in
push
jns
cmp
mov
lret
add
decl
push
mov
sbb
sar
orl
or
iret
lahf
xchg
jg
xor
aam
cmp
aam
das
test
les
ret
push
lods
popf
sahf
push
inc
add
or
andl
mov
leave
ret
addr16
jb
data16
fdivrl
xlat
fs
jns
adc
std
arpl
jno
shr
outsl
pop
rcll
lahf
adc
out
or
outsl
out
inc
sub
sbb
mov
push
cld
push
pop
sbb
popa
cli
bound
jle
pop
fcomip
int
gs
mov
dec
mulb
xchg
adcb
imul
pop
icebp
les
pop
scas
xchg
sti
sub
mov
rorl
subb
popa
adc
dec
out
addr16
cmpsl
gs
repz
call
out
cmp
jno
in
mov
jno
stos
aaa
dec
sbb
mov
lds
popa
push
mov
dec
push
pop
ficompl
in
loope
sub
mov
loop
xchg
adc
mov
mov
shlb
adc
and
mov
ss
mov
and
aam
sbb
push
iret
in
pop
pop
test
mov
and
aad
or
or
insl
pop
test
jecxz
xor
bnd
cmpl
hlt
icebp
daa
xchg
mov
shr
mov
lods
and
ret
xchg
roll
ret
mov
sub
shll
jo
ret
iret
mov
iret
jns
sub
shr
mov
cltd
jl
inc
test
push
mov
dec
leave
aad
pop
cmp
xor
inc
je
js
ljmp
shlb
lcall
call
jnp
dec
sbbb
lret
sub
xchg
add
movsl
jp
fisubs
ds
out
enter
aaa
repnz
pop
dec
pop
call
int
push
push
imul
repz
je
push
pusha
xchg
cmpsb
lret
sub
pop
rcrl
outsb
cli
xchg
stos
add
lret
loop
lea
cmp
decb
insl
xchg
popf
jbe
sbb
push
lds
cmp
dec
les
xorl
cli
repz
cmpsl
int3
into
movsb
cld
sbb
push
out
fs
clc
jge
call
rorl
jle
leave
inc
cwtl
inc
sub
xor
pop
jae
aam
mov
xchg
add
jp
test
pop
mov
lahf
call
push
pushf
mov
das
cs
xor
lcall
jge
inc
lcall
les
or
xchg
jge
inc
and
leave
sbb
jb
mov
subb
push
pop
xchg
fimull
imul
ja
mov
and
xlat
mov
dec
mov
ret
adc
fiaddl
dec
xor
add
xchg
pusha
sbb
aad
popf
sti
movsl
imul
push
and
xchg
xor
mov
cltd
popl
add
sbb
pusha
out
xor
push
loopne
fldl
xor
int3
jl
or
inc
push
fcoml
insl
jae
aaa
aam
add
xchg
sub
int
lds
lret
mov
jno
aam
jne
ja
jns
or
lea
lods
mov
mov
and
arpl
inc
dec
sti
dec
mov
scas
jp
and
in
rolb
add
inc
mov
push
mov
or
daa
mov
push
bound
popf
sbb
addr16
xorl
mov
fidivl
jae
mov
xchg
nop
movlps
ss
jmp
adc
mov
es
or
aas
lods
xchg
cltd
fstpt
xchg
push
lcall
int3
xchg
outsb
xor
mov
adc
repz
mov
sbb
and
loopne
gs
clc
cmp
enter
lods
arpl
cmpsl
mov
pop
sbb
popl
xchg
aaa
pop
jb
ss
movsb
aad
push
add
sub
stos
and
jbe
and
sub
insl
lret
dec
insb
testl
sbb
push
outsb
mov
rol
rorl
pushf
mov
sub
insl
add
cwtl
cmpsl
sub
fldl
inc
pop
ffreep
xchg
lds
ds
mov
cmp
leave
hlt
cmpsb
enter
fs
mov
lock
jnp
jne
mov
pop
insl
jns
sub
movsb
mov
xor
call
stos
fstpl
inc
jmp
cmp
sub
sub
mov
xchg
pusha
inc
jg,pt
in
pop
fs
insl
jo
outsb
std
and
xor
orl
pop
jno
mov
push
mov
pop
fcompl
xchg
bound
leave
xchg
add
sbb
and
outsl
jns
iret
cmpsl
call
mov
and
sub
icebp
ja
rolb
shlb
xchg
ljmp
cmp
mov
jo
xchg
push
cli
cmp
adc
sbb
mov
imul
popa
cs
sbb
xchg
enter
jbe
adcb
stos
and
ret
jp
aaa
push
roll
shlb
data16
xchg
jbe
mov
jo
sarl
mov
daa
dec
mov
mov
jns
push
push
enter
lret
push
add
test
dec
fsubl
xchg
imul
adc
stos
arpl
xor
test
cltd
ljmp
in
add
push
popf
sub
cmp
jb
mov
sbb
cld
or
or
loopne
les
cmp
cmovo
adc
dec
mov
mov
mov
adc
jg
hlt
add
jge
adc
push
cmpsl
xor
xorl
xchg
adc
push
adc
cli
repnz
out
jge
push
out
imul
movsl
cmp
dec
mov
rcrb
xchg
pop
negl
mov
sbb
mov
cmpsl
mov
mov
daa
jno
enter
add
and
andl
jbe
mov
dec
and
sbb
cli
lods
xchg
mov
adc
dec
lea
xor
push
adc
lock
fwait
or
loope
addr16
or
sti
adc
mov
insl
dec
lret
std
sub
insl
jl
pop
call
or
mov
test
cmp
push
dec
mov
or
cmp
inc
push
xor
or
outsb
xchg
pop
sub
push
dec
fldenv
andl
mov
cltd
arpl
sub
ret
dec
push
ljmp
psrld
jp
fldenv
loop
sbb
pop
pop
push
jb
jns
test
ljmp
test
add
sub
push
int3
hlt
xlat
rorl
outsb
stc
scas
clc
jecxz
xchg
lds
adc
mov
xchg
mov
jmp
push
mov
jecxz
stos
mov
cs
aam
mov
imul
or
ljmp
inc
xlat
jp
add
xor
push
mov
rolb
and
add
in
pop
push
orl
pop
popa
xchg
testl
fdivrl
je
sbb
dec
ret
inc
cwtl
or
mov
mov
data16
cltd
xchg
scas
push
lock
mov
inc
push
xor
jecxz
insb
or
pop
sub
rclb
push
sub
sub
push
pop
int
jg
cmp
xchg
dec
xor
push
cli
fwait
jne
dec
pop
mov
les
loop
add
insb
int
lret
adc
fwait
mov
icebp
ja
fwait
pmaxub
pop
inc
ja
inc
or
inc
cmp
mov
push
aaa
out
pushf
or
jb
stos
cmp
scas
and
or
mov
loope
push
enter
pop
jb
or
addr16
movsb
lock
add
addr16
and
xchg
push
inc
sarb
movsl
mov
shll
add
icebp
dec
aaa
insb
mov
arpl
inc
lock
inc
pop
scas
out
cmp
jns
imul
inc
iret
xor
or
ds
dec
jb
testb
negl
pop
xchg
repz
jl
js
push
pop
adc
in
cltd
repz
and
adcb
jno
aaa
mov
int
cs
xchg
scas
pushf
mov
movl
hlt
and
jns
cmp
mov
jns
mov
popa
arpl
jae
int3
lods
or
mov
addr16
push
pop
mov
mov
fiadds
pop
fnstenv
sub
popa
or
lds
or
fidivs
pop
orb
pop
data16
fidivl
scas
test
out
out
jge
popf
jl
pop
into
pop
subb
loope
lods
push
addl
push
sub
imul
pushf
in
negb
push
cmp
jecxz
es
sub
pop
fistl
int
insb
popa
addr16
pop
xchg
insb
push
mov
outsb
stos
pop
sbbl
lcall
test
lods
and
loope
and
pop
mov
repz
into
add
movsl
ds
insl
cmp
cmp
sub
or
icebp
aas
imul
fnstcw
xor
imul
push
scas
lods
addr16
push
adc
sub
cmpsl
aad
jl
lods
jbe
mov
outsb
adc
xchg
pop
stos
ffree
mov
roll
cmc
mov
lcall
dec
cld
mov
jle
fcoml
push
fs
cmp
mov
mov
ret
mov
divl
inc
lods
adc
xor
insb
mov
sbb
push
jns
add
fidivl
outsl
sti
fwait
xchg
jp
mov
inc
insb
bound
and
aam
cli
sbb
xchg
fbld
daa
mov
ljmp
adc
inc
fdivr
lods
cmp
call
jge
add
loope
xchg
push
push
data16
mov
or
in
es
inc
sub
sub
xor
aam
rcll
add
mov
out
sbb
mov
mov
mov
sarl
dec
and
arpl
mov
lcall
subb
aaa
and
xchg
mov
lret
inc
xchg
jns
pushf
in
mov
cmp
or
mov
mov
xor
mov
dec
push
jno
sahf
sub
daa
xorb
lahf
imul
inc
les
push
jnp
xchg
sti
and
fdivl
rclb
xchg
jno
xor
jg
shl
insl
xor
mov
mov
or
xorb
mov
mov
push
dec
cmc
jo
popa
push
inc
arpl
sahf
sub
aam
mov
mov
mov
xchg
cmp
mov
cmp
jp
jp
iret
push
xchg
fdivl
dec
imul
lahf
loopne
inc
aaa
out
je
mov
pop
adc
mov
imul
fs
insl
push
adc
dec
movsl
jns
cmp
adc
cmp
ja
xor
and
pushf
dec
ss
inc
inc
cmp
ds
dec
pop
fwait
movsl
ficoms
pop
add
imul
inc
lods
fwait
xor
into
in
mov
dec
push
jae
xchg
nop
nop
push
cmp
loope
mov
or
das
int
inc
xor
je
sub
mov
and
or
scas
fldt
push
and
inc
or
push
xor
pop
pop
lcall
repnz
push
adc
pop
mov
push
push
outsb
jge
sti
aad
inc
enter
mov
add
lods
pop
hlt
mov
test
fs
mov
leave
push
sub
insb
cmpsl
adc
insl
cmp
outsl
xor
and
int
dec
inc
in
mov
push
sbbl
out
repz
mov
mov
adc
jne
lcall
mov
cltd
sub
inc
fwait
xchg
cmpsb
mov
xor
add
in
or
stos
xor
jl
aaa
and
popa
xor
push
les
mov
fildll
fwait
lahf
fsubp
nop
test
push
in
mov
or
xor
xchg
imul
das
push
add
push
xorl
dec
sub
mov
pop
aas
mov
fwait
jmp
ss
and
sahf
mov
push
xchg
xchg
rcrl
push
jae
inc
jge
es
enter
cld
test
or
in
and
mov
lods
xchg
data16
mov
push
stos
inc
pop
dec
mov
movsl
mov
arpl
or
add
fstpl
inc
pop
xor
mov
mov
adcb
jb
into
call
pop
xchg
push
repz
jb
cmpb
xorl
sub
pop
cmp
sbb
test
push
pop
movsb
xor
outsb
mov
lods
test
jp
ficompl
mov
subb
adc
and
cld
push
xlat
adc
jl
sub
stos
sbb
mov
sbb
jns
cltd
cmpsl
ljmp
mov
pushf
iret
cmp
mov
sub
jmp
xchg
stos
add
in
pop
fsubs
pop
loopne
outsb
mov
mov
jl
gs
cld
push
test
dec
stos
popf
leave
add
rcrl
movsl
adc
jo
ss
sub
ss
pop
jno
jle
mov
or
cmpsb
lea
push
mov
lods
test
sub
popf
xor
adc
pop
test
or
or
lret
js
pop
arpl
jl
arpl
jle
mov
jne
bound
ss
addb
imul
stos
test
int3
jle
add
or
xchg
or
inc
icebp
mov
in
das
sbb
iret
mov
dec
cltd
sub
pushl
xchg
jle
inc
rcrl
xor
loopne
pop
pusha
dec
mov
lahf
cmp
jmp
je
leave
sub
push
cwtl
jmp
mov
sbb
loope
jecxz
imull
dec
jg
dec
cltd
insb
sbbl
push
popf
or
outsl
sub
mov
dec
data16
int3
inc
test
int
mov
dec
mov
dec
mov
xor
pop
add
das
shlb
dec
pop
ds
and
sbb
shlb
or
pop
aam
popa
sub
insl
rolb
call
popf
push
ret
or
and
hlt
gs
add
dec
fiaddl
in
nop
leave
inc
fsts
ret
dec
dec
mov
xchg
fnsave
sbb
mov
popf
ja
or
gs
inc
mov
ret
pop
fcoml
pop
ret
sbb
mov
leave
push
int3
mov
fwait
adc
pop
popa
aaa
inc
test
repnz
data16
inc
cmpsb
jne
ds
sbb
jne
dec
neg
xchg
push
mov
fnstenv
mov
xchg
hlt
aad
sbb
cmp
lret
das
movsb
in
pushf
fldenv
movb
cli
dec
pop
and
jo
fcmovnb
push
push
mov
inc
mov
mov
push
jg
mov
mov
mov
inc
mov
insl
xor
icebp
jno
inc
fcmovnbe
stos
mov
mov
xchg
daa
rcrb
sub
dec
jnp
pop
daa
mov
jae
stos
add
sub
pushf
je
lahf
sti
pop
popa
inc
dec
lcall
jg
fisttps
adc
mov
mov
xor
stos
mov
fdecstp
push
mov
mov
add
aam
lret
jo
les
inc
imul
cmp
xlat
jae
pop
movsb
adc
inc
ja,pt
cmp
xlat
sub
js
and
xor
sbb
xchg
pop
jg
push
vmwrite
mov
jecxz
adc
pop
cmpsb
mov
mov
rcrb
out
das
gs
mulb
hlt
pop
loope
jno
ret
add
ror
outsl
mov
cs
cmp
lds
aaa
fstpt
push
or
sub
ficomps
jb
adc
and
xchg
ljmp
lcall
insb
subl
out
inc
test
or
xchg
dec
jmp
lods
sub
mov
roll
add
lock
ja
insb
imul
add
gs
das
and
iret
les
test
mov
mov
repz
adc
push
leave
and
xor
adc
pushf
adc
ss
xor
test
repz
sahf
xor
and
iret
push
rcll
inc
popf
or
sub
inc
cmp
cmp
mov
cld
cmp
daa
int
lods
pop
jle
dec
add
push
fwait
mov
ja
pusha
lds
cwtl
sub
adcl
shrl
adc
mov
mov
in
lock
test
roll
mov
je
mov
clc
mov
leave
cmp
in
adc
cmp
or
push
or
sub
pop
adc
pop
lcall
leave
jg
dec
mov
push
in
sub
in
int3
xchg
ret
mov
shlb
rep
adc
add
cwtl
adcb
fwait
mov
xchg
repnz
imul
xchg
shl
test
lcall
sub
insl
sbb
test
fistpll
and
xchg
test
sub
call
fadd
xorl
push
dec
das
lods
call
add
repz
imul
daa
sbb
stos
inc
sbb
dec
lds
dec
xchg
cmp
cltd
push
rcrb
std
movsl
fnsave
out
or
add
outsb
mov
je
sbbl
add
cmpsl
add
ret
fsubl
push
insb
mov
shl
loop
xor
mov
jo
out
je
mov
sbb
push
fldcw
fwait
mov
outsb
inc
mov
mov
test
enter
pop
nop
mov
xchg
std
mov
dec
jno
data16
push
mov
cmpsl
jge
fstpt
xor
mov
int
pop
orb
movntq
and
xor
scas
mov
mov
pop
inc
addb
mov
ja
xor
mov
jmp
movb
dec
fwait
roll
daa
or
scas
out
bound
in
test
outsl
lahf
cmp
xor
cld
ja
dec
mov
add
movsl
ret
aas
aas
xorl
inc
loopne
sbb
sti
inc
in
push
sub
in
inc
fimuls
inc
xchg
push
negl
xchg
iret
pop
int
icebp
add
jle
jp
out
lock
cmp
jecxz
daa
pop
cmpsl
lods
cs
pop
pop
push
aaa
jns
push
or
sbb
bound
aad
pop
sub
add
dec
push
ret
out
sub
xor
adc
sbb
pop
inc
outsl
dec
orb
pop
fsubrp
popa
mov
push
lcall
aas
xlat
xchg
lret
mov
cmp
mov
sbb
jle
idivl
outsb
in
inc
pop
or
int3
sbbl
mov
pop
jbe
pop
test
dec
fsub
jle
cmp
in
jne
andb
push
divb
sbbl
mov
mov
jp
mov
jp
repz
andb
xchg
inc
in
call
or
mov
xchg
dec
outsb
loop
or
or
aam
shrb
xor
stc
push
mov
jo
cmc
out
mov
mul
call
jge
arpl
mov
xchg
lods
setp
adc
push
xchg
stc
inc
add
mov
addr16
dec
out
fsubs
lea
imul
dec
iret
clc
push
ja
je
xor
pop
sub
sub
and
xor
xor
jne
push
gs
or
jbe
es
fcomps
movsl
pop
lock
fidivs
test
xor
js
and
push
add
out
sbb
fistps
lock
sbb
adc
sbb
dec
inc
daa
adc
neg
fimull
ror
outsb
pop
stc
pop
icebp
push
mov
test
add
pop
pop
sti
mov
and
aaa
fidivrs
sub
outsl
xor
fwait
jno
and
xchg
jp
imul
inc
outsl
incl
and
or
repnz
call
or
out
aad
mov
mov
inc
ret
and
fs
in
rorb
xchg
loope
mov
lret
repz
lahf
and
push
push
add
adc
fwait
mov
xchg
and
xlat
stos
sbb
inc
and
sub
mov
push
or
add
test
les
inc
ret
mov
sub
or
push
popa
lcall
jb
daa
int
cli
mov
jmp
das
fwait
aas
leave
fistpll
jecxz
es
sbb
mov
jns
jmp
xchg
mov
cmp
cmp
xorl
jecxz
push
aad
jae
pop
jge
sub
loopne
add
lea
gs
jnp
mov
cltd
dec
fcmovnu
cmp
jge
cmp
xchg
mov
push
or
and
sub
push
inc
or
test
dec
ficoml
aaa
pusha
adcl
jns
movsb
jne
sub
lretw
ss
enter
mov
cld
testb
hlt
jle
in
nop
outsl
sti
out
and
jmp
orl
scas
jnp
mov
test
mov
jecxz
cmpb
add
add
push
mov
shll
push
cmp
int3
xor
and
lods
adcb
and
movsb
push
sbb
jg
dec
cmp
js
sbb
mov
xchg
inc
pop
jmp
jecxz
enter
ljmp
push
or
insl
insb
xor
dec
push
mov
xchg
mov
cs
mov
mov
sahf
stos
daa
movsl
out
shr
push
test
push
or
and
bound
add
aaa
idivb
xor
mov
cltd
pop
int
dec
lret
mov
daa
ret
pop
push
arpl
push
mov
pop
push
icebp
test
ja
movsb
rcrb
and
fwait
loop
inc
bound
adc
pop
mov
sub
cmp
shlb
mov
pop
push
lcall
outsl
mov
xchg
sti
pop
and
push
push
jns
les
sub
bound
cmpps
or
xlat
orl
mov
add
rcrl
test
add
sub
lret
add
fimull
shlb
jecxz
adc
mov
ret
fwait
aas
fistps
gs
sbb
daa
push
mov
lret
pop
pop
dec
cmp
popf
add
aam
cwtl
testl
addb
push
adc
jmp
iret
jnp
rclb
pop
xor
pop
cmp
loop
jle
lea
sbb
pop
iret
shl
xchg
jle
mov
insb
lcall
xchg
jo
adc
mov
in
add
dec
xchg
les
lcall
push
dec
dec
or
inc
fs
pop
bound
popf
cmp
cmp
bsf
dec
cwtl
push
rorl
mov
inc
sahf
jge
mov
mov
outsb
xchg
sti
fcompl
test
pop
enter
push
ss
jl
dec
mov
dec
push
adc
xor
pop
sbb
or
jp
out
xchg
pop
xchg
rclb
leave
jnp
jle
inc
in
mov
fdivrl
xor
in
gs
mov
push
aaa
enter
std
mov
movsl
std
jbe
repnz
pop
das
sbb
cmp
sahf
pop
aaa
push
vmovupd
add
inc
ret
test
jmp
repnz
popf
jecxz
mov
test
enter
push
sub
cmp
push
jb
pushf
xchg
js
fnstcw
iret
add
ljmp
xor
lahf
aam
outsl
adc
lret
push
add
jnp
xchg
add
and
ds
std
inc
bound
cmp
into
push
mov
ror
add
sbb
xor
fdivrs
icebp
inc
pop
jne
jle
arpl
xchg
fnstsw
mov
insl
popf
mov
xchg
leave
lea
adc
jae
cwtl
repz
ljmp
pushf
push
jno
loop
aam
mov
outsl
gs
mov
push
icebp
fisubl
orl
loope
xor
push
lret
int
ret
dec
sub
or
shll
inc
jge
push
enter
jle
orl
addl
dec
xchg
mov
inc
pop
dec
mov
pop
pop
jle
xchg
mov
mov
pop
insb
mov
sub
xchg
cmp
mov
hlt
ljmp
or
push
stc
xor
adc
lcall
cmpsb
and
jno
mov
movzbl
mov
dec
cld
shl
sbb
mov
xlat
mov
xchg
xchg
push
loope
pop
out
fwait
mov
sbb
ja
mov
add
jbe
in
mov
in
xor
icebp
in
les
mov
adc
out
jae
stos
mov
mov
andb
or
gs
dec
ficoml
pop
inc
pusha
in
push
fidivrs
imul
push
adc
xchg
in
mov
push
sti
js
mov
push
xor
dec
lock
adc
xlat
test
in
pop
fwait
jp
cltd
or
pop
ret
jbe
cltd
data16
dec
insl
aad
ljmp
or
pop
push
popa
push
xor
adc
jge
xor
cmp
dec
mov
test
jmp
sub
loop
int
push
movsl
mov
inc
je
xor
xor
jmp
pop
or
xor
divb
fwait
inc
add
lock
stos
sti
dec
mov
add
and
sarb
adc
rorb
and
lret
in
xor
sbb
xchg
clc
loopne
sbb
roll
das
repnz
outsb
pop
xchg
inc
push
nop
cmpsl
add
stos
testb
inc
hlt
sbb
loopne
rcll
or
shlb
scas
add
sti
mov
cmpsb
mulb
xchg
out
loope
ret
fstpl
or
ret
lock
movsl
mov
fwait
js
inc
pop
xchg
stos
cmp
pop
pop
cmp
push
mov
and
adc
stos
test
and
insb
int3
cld
lret
nop
mov
dec
inc
loopne
je
cmp
lods
xchg
push
inc
popa
inc
out
xchg
and
aad
or
scas
sub
sbb
and
pushf
mov
cmp
jmp
test
xchg
adc
ljmp
lock
clc
ret
mov
aaa
scas
or
adcl
lahf
cmpsb
insl
xchg
mov
rorb
imul
push
xor
mov
add
sbb
push
divb
stos
and
push
mov
sahf
push
adc
sti
add
inc
xchg
pop
lods
jle
xor
cli
fstps
pop
sub
mov
xor
pushf
push
mov
in
packuswb
cmpsl
or
loop
mov
aas
cmp
pop
rcrl
pop
in
jo
push
fwait
shll
lods
or
jge
pop
xchg
jo
fstl
ja
lds
fidivs
testl
cs
push
lods
or
arpl
bound
andl
jmp
mov
cmp
sub
ljmp
push
in
mov
push
and
push
push
add
mov
pop
in
or
fadds
inc
cmpsl
mov
lds
jmp
sbb
lock
inc
loop
in
ret
pop
addb
iret
fs
jnp
scas
sar
pop
jl
in
enter
sbb
cmp
mov
fistpll
insb
jbe
pop
dec
pop
es
test
mov
insb
es
fcmovnbe
or
push
sbb
mov
daa
repnz
int
sbb
mov
sbb
nop
insb
dec
inc
add
cmp
clc
xchg
mov
cmp
add
les
dec
add
call
movsl
mov
mov
push
pop
popf
cltd
sub
jne
jno
or
out
sbb
ficoms
loopne
rol
lods
loop
cmp
push
jecxz
jae
push
inc
mov
loope
div
in
test
stos
addl
popf
jl
jae
mov
or
push
pop
lock
std
dec
or
mov
sahf
out
mov
gs
mov
xor
xchg
in
xchg
push
loope
pop
stos
cli
dec
mov
icebp
ss
add
test
popa
test
push
scas
call
in
lods
mov
sarl
pop
inc
mov
cs
out
push
xor
cmp
jbe
or
daa
jnp
pusha
icebp
sub
xchg
push
out
lods
out
mov
lods
aas
leave
xchg
lea
sarl
aad
negb
pop
jp
xchg
xchg
scas
jb
shll
imul
out
sbb
loope
mov
int3
cmp
mov
adc
push
pop
dec
rcrl
jl
mov
jnp
lcall
sbb
fisttpl
jp
mov
inc
arpl
mov
jg
push
rcrb
xor
jmp
or
xchg
xor
stos
popf
inc
jge
ljmp
push
fidivrs
jp
xor
inc
dec
inc
in
mov
faddl
ret
sub
test
inc
xorb
adc
dec
ss
insb
imull
stos
mov
mov
mov
pop
fcomip
popf
out
sbb
push
fsub
jb
stos
lds
and
cltd
xchg
ja
pop
xor
insl
mov
ljmp
xchg
cmp
scas
test
add
fisubs
inc
imul
int
aaa
mov
mov
xchg
pop
dec
or
pop
imul
mov
in
pop
jg
or
mov
in
shlb
fists
jb
aad
or
push
cmpsb
movsb
cmpsl
mov
rcrl
and
fcoms
jnp
bound
int3
and
pop
and
adc
pop
imul
and
cs
inc
popf
int3
pop
imul
ffreep
hlt
icebp
das
cmp
out
roll
inc
xchg
dec
loope
je
ljmp
loop
add
sbb
int3
pushf
outsl
and
rcrb
in
cltd
imul
xor
xchg
jno
in
scas
hlt
lods
fistpll
scas
jmp
jae
cmpsl
sbb
add
cli
aaa
push
into
movsl
movsb
mov
or
jnp
mov
dec
pop
xlat
jg
or
pop
push
inc
sbb
je
sbb
dec
xor
outsb
mov
test
mov
dec
mov
pop
cmpsl
xor
xor
pop
sbb
int3
gs
mull
arpl
mov
mov
shll
xlat
jle
inc
add
dec
mov
sbb
pop
es
sahf
popa
test
push
jle
inc
pop
adc
push
jp
and
sub
inc
add
aaa
jno
xchg
call
xchg
aas
lock
frstor
pop
mov
je
push
pop
inc
mov
shr
outsl
pop
jo
cmpsb
pop
in
in
sahf
mov
jp
and
fwait
pop
pushw
andl
xor
dec
repnz
sbb
inc
push
pop
subl
cld
insl
xor
movsb
add
cwtl
and
das
sbb
decl
clc
xchg
xor
ret
xor
and
jb
int3
cmp
sub
jl
rcrl
lods
mov
inc
cli
ss
jb
mov
push
scas
add
mov
testl
sbb
popf
daa
mov
ret
mov
dec
jns
lret
std
daa
lods
lret
add
add
dec
cmp
in
xchg
and
cli
or
lods
jp
outsl
pop
pop
dec
pop
adc
bnd
movsl
movsl
mov
push
fdivl
dec
aaa
adc
imul
dec
xor
insb
add
dec
lods
mov
xchg
fadds
dec
add
fs
push
cmp
jo
xor
fmuls
pushf
fisubs
cmc
or
jns
mov
adc
cmp
sbb
mov
dec
lds
adc
loopne
jp
sub
sub
arpl
mov
outsl
mov
shr
adc
loop
jne
scas
aas
insl
lret
hlt
jge
sbb
xchg
xor
mov
fadds
xchg
sbb
cmp
int
dec
sub
cmp
arpl
add
dec
cmp
pop
push
jb
jecxz
das
pop
inc
in
mov
pop
jo
out
shlb
enter
mov
push
fs
insl
xor
in
leave
addl
inc
jno
jecxz
sub
sahf
xchg
bound
xor
loope
insb
leave
sbb
std
int3
jp
call
add
loope
jae
stos
pop
jge
int3
dec
push
mov
test
imul
jle
shrb
call
lret
xor
mov
jbe
fisttps
sahf
movsl
bound
pop
shrb
das
xorl
dec
dec
loop
xor
aam
lds
and
lret
ret
rcll
pop
sub
in
rolb
pop
push
test
test
pusha
cmp
ja
jns
xlat
out
mov
jae
cld
dec
pop
negb
jnp
cs
gs
inc
mov
or
std
popf
jmp
ret
cltd
mov
fdivl
sti
push
jg
aad
jmp
repz
cmp
mov
and
cmp
popf
aam
int
test
loop
out
sub
jns
mov
xchg
jp
cwtl
cmp
and
in
pop
sbb
sub
rcrl
xchg
xor
cli
push
aam
cmp
cwtl
sub
adc
mov
popa
xor
popa
adc
add
mov
mov
xchg
flds
mov
hlt
scas
mov
xor
inc
mov
aam
push
xchg
gs
add
ret
out
outsb
out
jae
adc
fistpll
add
jl
cmpl
or
ljmp
rcrb
sbb
clc
mov
jno
fildl
jnp
pop
cwtl
cltd
aam
gs
dec
mov
loop
cmp
dec
push
xor
in
aaa
adc
mov
or
and
add
or
cwtl
mov
jge
scas
aaa
push
jno
ret
loop
repz
aad
dec
fstps
ds
sbb
dec
in
mov
or
shll
pusha
jge
pop
sbb
fistpll
addr16
in
outsb
insb
jae
adc
and
mov
sbb
data16
push
xchg
andb
inc
hlt
in
adc
sbb
shll
lock
aad
loop
outsb
aad
enter
lds
or
cmp
pop
out
mov
aam
sub
test
mov
mov
fcmovnb
lcall
xor
fsub
sub
mov
aad
inc
mov
outsb
push
aaa
and
scas
pop
lcall
and
jg
in
in
mov
jb
rolb
mov
add
cltd
cmpsl
stos
xor
cmp
jns
add
outsb
pusha
cmpsl
push
fwait
rcll
int3
insl
call
addr16
stc
in
mov
test
sub
xchg
cltd
or
stos
in
push
scas
mov
jmp
add
sub
loope
mov
jmp
or
dec
sbb
and
data16
mov
shlb
inc
mov
jge
mov
shlb
cmp
call
sub
sub
inc
xor
mov
push
inc
cmpsl
adc
cmp
or
lds
push
xor
jle
or
jb
je
fs
jp
mov
sbb
and
mov
cmpsl
dec
jg
xchg
mov
and
and
xchg
add
into
into
xchg
ret
pop
pop
out
cmpsl
sub
mov
fldenv
jecxz
daa
popa
lea
pop
push
mov
mov
mov
cmpsl
ret
mov
scas
aaa
cmp
push
and
pop
shrb
scas
cli
jmp
movsb
sbb
pop
add
sbb
outsb
js
rorl
mov
ret
aaa
mov
cmp
shrl
cwtl
jbe
rcrl
dec
js
test
rdtsc
dec
cwtl
inc
push
sub
ss
cltd
fildl
scas
and
aas
xor
mov
push
sbb
dec
push
mov
in
ret
fwait
aam
jne
adc
inc
xlat
cs
inc
insb
out
in
jg
ret
and
xor
pushf
shr
xchg
shl
movsb
lea
cmp
lock
lock
and
mov
jb
jl
mov
out
jb
jno
dec
sahf
mov
das
adcb
lcall
inc
add
adc
out
dec
iret
inc
or
cmp
dec
ret
daa
sbb
dec
jg
popa
aaa
test
dec
sub
sub
rclb
repnz
daa
sbb
push
mov
notl
daa
mov
xchg
or
nop
fisubrs
int3
sbb
insl
scas
es
outsb
test
xchg
leave
jge
int
cmp
gs
xorl
test
loop
inc
iret
rolb
inc
sbb
lret
or
es
sub
mov
inc
inc
idivb
add
mov
cmc
insb
lock
fisttps
sub
popa
addr16
cmp
pop
imul
push
push
rclb
mov
xor
sub
aad
movsl
loopne
popa
jp
dec
jge
mov
cli
mov
lret
mov
mov
ret
xor
ljmp
jbe
daa
sbb
xor
sbb
iret
icebp
and
push
fdivl
or
mov
imul
xor
mov
out
jns
fisubrl
mov
sbb
stos
daa
sbb
dec
push
xor
popf
sahf
sahf
lds
add
xlat
imul
mov
adc
mov
pushf
xor
mov
out
mov
cmp
dec
cmp
test
shl
cli
sbb
out
jae
pop
sub
and
pop
test
sbb
adc
gs
in
push
in
or
stos
dec
shll
addr16
in
test
jp
movsl
jle
or
xchg
data16
stos
jnp
mov
sub
cmpsb
mov
in
fiaddl
push
mov
inc
daa
dec
jb
mov
add
mov
out
js
mov
fisttps
into
jne
and
fdivrs
adc
dec
mov
lock
sbb
mov
fdivs
fcomps
push
inc
cld
jmp
mov
leave
xor
cmp
inc
mov
lcall
xchg
and
mov
jo
mov
sub
push
in
jbe
mov
pop
sub
fsts
adc
fwait
mull
insl
or
sub
mov
sbb
mov
mov
std
call
shlb
in
jbe
sub
jo
ret
and
in
fstpt
push
and
je
cmc
insl
xchg
sub
enter
aas
gs
out
push
xchg
mov
pusha
outsl
cmc
mov
pop
lea
mov
mov
cmpsl
sbb
daa
dec
and
enter
mov
daa
inc
inc
fstpl
cmpsb
inc
lea
insl
das
repnz
andl
pop
pop
ret
icebp
cmp
popf
lods
pop
or
inc
mov
cli
shl
aaa
cmp
mov
sbb
nop
jns
xor
mov
popf
leave
sbb
and
lods
repz
scas
mov
jmp
jmp
jp
sbb
and
daa
cld
daa
dec
sub
test
movsb
push
test
jmp
movsl
dec
jmp
pop
or
movsl
dec
clc
js
lret
add
cmp
jo
xor
lds
cmpsl
loopne
into
and
inc
fcomps
popa
rorb
and
push
add
cmp
push
xor
pop
and
xor
enter
divl
sub
lahf
popf
shl
dec
lcall
lea
callw
push
jns
sub
and
call
movsb
dec
rcrb
ds
inc
movsl
popa
xchg
adc
adc
and
aaa
pop
mov
sbb
mov
ret
pop
lahf
fsubl
int3
push
les
pop
cltd
dec
push
mov
fstpt
xor
and
pushf
test
xor
cmp
int3
add
test
pop
sub
flds
adc
test
fadds
cmp
outsb
in
shrb
dec
cmp
jecxz
movsl
pop
mov
xor
pop
into
mov
cmp
fdivr
push
pop
xlat
xor
mov
lea
sbb
fdivs
mov
pop
adc
test
inc
lcall
jge
mov
mov
fucomp
jae
xlat
popf
std
jecxz
aad
pop
mov
or
dec
cs
xchg
dec
mov
lds
xlat
push
fists
cmp
cmp
mov
or
stos
cwtl
mov
push
jmp
sahf
xchg
sub
adc
cmpl
sub
and
aad
gs
dec
mov
jno
xchg
filds
prefetch
or
jmp
or
mov
aas
add
stc
pop
push
xchg
adc
leave
xchg
scas
jge
cltd
mov
js
dec
lret
pushf
mov
add
inc
mov
mov
add
pushf
les
je
mov
loop
mov
addb
ret
dec
pop
xchg
enter
stos
ljmp
fmulp
in
jg
add
out
sub
mov
sahf
js
push
push
xchg
shl
call
mov
std
idivl
in
in
andl
cmp
mov
add
mov
imul
in
out
cmp
cmp
fsubl
adc
or
scas
bound
pop
pushf
xchg
mov
imul
mov
sti
sbb
mov
mov
adc
popf
aad
xchg
xchg
data16
xor
xchg
inc
fisubs
dec
sbb
inc
cmp
scas
enter
sub
pop
pop
adc
inc
jle
cmp
add
sub
aaa
ficompl
cli
scas
insl
repz
repz
out
ja
push
cltd
and
popf
cmp
shll
lock
addb
lea
and
dec
dec
xchg
and
in
jge
in
and
and
push
inc
inc
aam
int3
ja
std
scas
and
add
cmc
jo
lcall
xchg
aaa
cmpsl
xchg
sbb
mov
pop
xor
jmp
jne
mov
mov
movsl
bound
jge
xchg
movsb
shlb
cs
pop
lahf
add
push
mov
mov
push
das
or
into
jnp
push
add
shlb
and
sahf
js
pop
ret
inc
and
nop
xchg
mov
xor
inc
mov
push
iret
dec
pop
dec
add
stos
mov
loop
cmc
mov
inc
jmp
pushf
out
push
jmp
cmc
xor
dec
jge
mov
sub
fsubrl
daa
adc
xor
xchg
jae
arpl
push
movsl
mov
xchg
pushf
jbe
ljmp
push
mov
cmp
enter
adc
lret
push
stc
inc
loop
dec
mov
cmp
adcl
mov
nop
pop
inc
cmp
fnstcw
sbb
jbe
jnp
mov
add
out
dec
not
jl
hlt
jecxz
xlat
inc
ss
cld
pop
mov
sbb
inc
fbstp
sbb
scas
pushf
push
test
gs
sbb
mov
ja
bound
das
repnz
push
sub
adc
iret
ljmp
aam
cmp
test
mov
jp
lods
fs
jno
sbb
outsb
pop
repnz
cmp
in
cwtl
inc
cmpl
pushf
je
cmpsb
leave
fnop
xchg
and
adc
fucomip
fisttpl
sub
jne
xchg
int3
mov
bound
out
pop
or
or
bts
adc
gs
inc
andl
cmp
or
pushf
xchg
lretw
sub
mov
xor
popf
jg
stos
movb
psubb
add
and
xor
add
mov
bound
pop
es
nop
lcall
subb
push
mov
enter
test
sub
mov
pop
loopne
add
scas
sub
push
arpl
ret
push
dec
insb
aam
add
xor
pop
cld
xchg
andb
pop
out
inc
and
lcall
rolb
add
push
xchg
cmpsb
jbe
cmp
ljmp
sti
es
cmpsl
xchg
and
dec
jno
jno
sbb
xlat
dec
fwait
mov
ficoms
add
adcl
out
xchg
lock
mov
rclb
sar
jg
cmp
mov
xchg
pop
cs
sbb
mov
lods
jo
pop
insl
sbb
pop
add
sub
in
testb
cmpsl
dec
lock
pop
inc
icebp
shl
stos
outsl
xchg
cwtl
dec
mov
and
movsl
je
call
in
sub
or
sbb
imul
mov
cltd
inc
xchg
loopne
rcll
push
adc
push
cli
or
dec
shll
inc
mov
mov
push
push
add
mov
push
adc
lret
mov
and
lds
out
clc
in
jnp
inc
lods
jo
adc
lret
push
fists
scas
ljmp
imul
movsl
mov
popa
scas
out
es
iret
mov
dec
int
jo
paddusb
fwait
leave
popf
add
inc
mov
mov
adc
stc
push
sub
or
xchg
inc
fiaddl
push
test
cs
das
fsubs
cmc
and
sub
das
mov
jmp
xchg
mov
aas
xorl
jns
xchg
cwtl
sbb
jbe
cmc
out
or
ffree
leave
inc
incb
das
cmpsl
xor
ret
xor
fcoms
jecxz
xor
lds
jbe
jne
pushf
es
inc
mov
or
sbb
xor
iret
or
mov
aam
loope
das
int3
dec
or
add
pop
sub
rolb
push
cmpl
push
or
jno
and
pop
mov
cmp
and
lods
jle
int
mov
vmulpd
pop
das
fistpll
push
add
cmp
jmp
sbb
rorb
adc
push
cmp
or
jno
mov
loope
iret
in
add
das
enter
das
lea
mov
or
push
aaa
sbb
imull
add
scas
sbb
add
adc
repnz
sbb
gs
rorl
sub
inc
mov
mov
mov
push
ret
inc
orb
mov
out
xchg
push
cld
jae
movsl
add
addr16
and
push
daa
mov
push
mov
sbb
and
fwait
loopne
jp
xlat
xchg
inc
xor
leave
sahf
int
shll
cld
int3
jmp
aam
sbb
insl
jecxz
lret
adc
lods
xor
lret
jecxz
lds
in
push
mov
mov
movsl
leave
add
adc
xor
xor
push
les
cltd
push
in
lahf
pop
roll
push
cmc
shll
fistpll
movsl
push
sbb
stc
gs
loopne
cli
test
xor
or
loopne
das
outsb
pop
push
clc
xchg
mov
out
repnz
adc
xchg
jecxz
dec
lods
ja
test
pop
fs
mov
or
add
movsl
daa
sub
repz
rol
cmp
cmp
dec
cmp
push
xorl
sbb
arpl
mov
movsl
out
mov
ss
and
test
sub
out
sbb
push
jl
ret
ljmp
insl
dec
shll
add
pop
sahf
fcompl
idivb
cs
mov
mov
inc
mov
sbb
loop
jne
inc
xlat
cmpsb
movsl
movsb
je
jmp
mov
shll
lret
rcrl
inc
ret
pop
mov
rcll
cmp
cli
sbb
fmull
cmp
xor
lcall
ljmp
int3
xchg
pop
cltd
cmpsb
dec
mov
ljmp
cwtl
std
fiaddl
andl
in
test
cwtl
push
add
fcomps
xor
ja
jle
cmp
test
jle
lahf
cmc
ja
dec
sahf
push
pop
push
dec
jmp
or
test
leave
adc
out
xor
fbstp
repnz
and
or
mov
jb
pop
loope
loope
addb
and
sub
and
lcall
stos
adc
sarb
test
jmp
xor
lods
fwait
inc
clc
out
jae
adc
rcr
sbb
mov
mov
mov
xchg
jecxz
sahf
push
negl
gs
xchg
not
leave
xchg
out
js
int
aaa
imul
test
sbb
fistl
and
mov
jmp
or
mov
jecxz
xchg
push
stos
lcall
insb
xchg
pop
add
inc
xchg
jo
loop
push
xchg
sbb
frstor
cltd
jmp
lahf
push
xchg
lods
inc
add
jecxz
push
push
and
jp
push
je
jmp
cld
adc
call
xor
pushw
xchg
or
in
sub
test
cmp
xchg
arpl
stos
push
stos
icebp
adc
cmpsb
xchg
sbb
movb
sbb
lcall
lods
xor
cmpsb
push
mov
xlat
xchg
dec
inc
mov
imul
sahf
jae
add
ret
push
jecxz
pop
stos
jmp
mov
sbb
xchg
dec
out
test
hlt
jbe
cld
test
sub
in
and
inc
inc
rcrb
pop
or
lods
inc
cmpsl
mov
lods
ss
xor
popf
inc
sub
pop
mov
jmp
lcall
fs
inc
fidivrl
ret
xchg
fimull
xor
out
outsb
lock
les
ljmp
arpl
mov
loope
sbb
lds
xchg
sub
daa
xchg
stos
insb
mov
dec
dec
fisubl
and
sub
jmp
sbb
out
das
outsl
cmp
xchg
dec
roll
out
cmp
xchg
sti
insl
or
hlt
pop
test
sub
mov
mov
ds
mov
pop
dec
mov
jae
push
mov
out
sbb
pop
cli
loopne
ds
adc
adc
dec
sub
and
ret
push
test
clc
dec
push
dec
add
sub
nop
sub
fildl
pusha
pop
jmp
fiadds
fldenv
movsb
push
mov
mov
je
sub
push
loope
clc
adc
xchg
les
mov
outsl
push
jmp
sbb
add
outsl
in
mov
mov
lea
cwtl
dec
pop
jle
notb
dec
pop
test
mov
or
push
shll
push
filds
sub
mov
mov
lcall
pop
stos
aad
xchg
sub
ficomps
cwtl
stos
xchg
rcl
jp
xchg
div
aam
add
lret
ret
scas
fmul
rcl
mov
xchg
cmpb
stc
adc
stos
inc
scas
or
sbb
out
cs
and
mov
cltd
daa
add
push
js
sbb
adc
iret
dec
add
out
pop
cmc
xchg
cmovle
push
and
push
pop
jge
loope
ss
inc
xchg
lods
cmp
test
cltd
ljmp
jbe
push
jmp
push
push
cmp
cs
addr16
pusha
sahf
push
sub
mov
in
jns
jl
outsl
xor
out
out
out
pop
xor
ret
stos
cmp
iret
jbe
mov
enter
mov
in
add
pop
ret
add
dec
test
fstl
pop
or
push
or
push
sbb
daa
jbe
fwait
add
xor
sbb
xchg
outsl
mov
xlat
cmp
test
std
insb
pop
rclb
jecxz
test
into
insb
lock
loope
xchg
add
jae
sub
dec
mov
sarb
loope
mov
lea
loop
cmovno
pusha
xchg
fadds
arpl
or
mov
inc
xor
cltd
pop
lds
jne
pop
lret
into
mov
sub
push
sub
test
mov
or
std
cwtl
adc
push
es
dec
repnz
jl
cmpsl
xchg
addr16
clc
stos
mov
aaa
add
sub
aam
jne
xchg
add
sbb
push
rcll
clc
arpl
or
xor
hlt
jno
lods
pop
ds
imul
xor
adc
out
mov
mov
and
push
or
enter
sahf
jbe
testb
mov
dec
pop
mov
stc
int3
mov
sub
mov
jl
or
out
dec
je
mov
pop
into
sub
sbb
mov
aad
xor
inc
inc
mov
xor
push
cwtl
in
push
dec
in
xor
std
or
out
inc
cmp
movsb
push
fistps
pushf
shll
mov
jmp
repnz
add
fbld
add
dec
or
fdivrs
mov
arpl
inc
push
imul
test
mov
dec
lods
push
and
fcmovnb
sbb
dec
lahf
test
pop
or
arpl
rcrl
shl
in
push
mov
or
push
dec
ret
inc
addr16
adc
ja
sbb
xor
test
add
shrl
dec
inc
aas
xor
iret
cmp
scas
inc
pop
lret
inc
dec
add
jp
dec
jp
or
or
ret
addl
xlat
jne
xor
jnp
xchg
test
mov
xor
ss
xchg
dec
jmp
jmp
push
jmp
and
lods
fldt
nop
movsl
ret
xchg
adc
or
xor
leave
arpl
fs
jmp
dec
das
addb
jae
aad
stc
dec
mov
jno
fdivrs
jae
add
aaa
sbb
sahf
sub
andl
orb
jno
cld
add
cmp
mov
mov
cmp
xor
adc
jge
and
rcr
jl
roll
cs
xchg
pop
stos
mov
dec
ljmp
xor
inc
or
xor
inc
mov
fdivrs
inc
fnstcw
ljmp
clc
sbb
jmp
push
shlb
mov
mov
or
fcmove
fsts
inc
add
and
ljmp
lahf
jl
mov
xor
sub
xlat
scas
lcall
ljmp
lods
scas
xor
cmp
mov
aad
xor
test
ds
test
enter
and
jbe
xor
sbb
fstl
outsl
inc
fisttpll
pop
push
pop
outsl
adc
add
inc
lods
push
mov
popf
and
movsl
popf
out
std
jmp
push
or
sbb
and
bound
mov
fsub
bound
bound
mov
add
shlb
push
pop
jbe
scas
adc
bnd
cwtl
cwtl
jge
addl
ret
dec
clc
xchg
loop
enter
pop
pop
jmp
lret
push
iret
push
not
lock
sbb
jle
push
adc
cmovo
repnz
ja
or
adc
nop
aaa
dec
fldt
cmp
sti
fcmovnb
je
mov
sarb
pop
lods
bound
push
bound
inc
sub
rcrb
or
mov
mov
cmp
xchg
adc
pop
cmpsl
mov
cmpsb
or
jecxz
or
push
loopne
pop
xor
aas
pop
clc
popf
pop
adc
mov
cmpsl
push
adc
stc
add
add
sub
das
push
sbb
push
dec
and
movsb
pop
frstor
lret
and
lret
mov
mov
sahf
gs
xor
lahf
fdivs
enter
adc
inc
incw
in
add
mov
lds
pop
jns
jp
test
xchg
test
mov
push
cmp
and
movsb
pop
mov
jg
mov
jle
xor
cmp
push
lcall
mov
xchg
adc
mov
outsl
mov
add
sbb
mov
mov
mov
enter
xchg
push
sub
xor
ljmp
lcall
sub
aam
or
push
pop
mov
repnz
popa
mov
in
add
mov
in
gs
imul
mov
jo
inc
test
pop
in
sub
cmpsl
ljmp
xchg
adc
lds
testb
ja
ret
mov
mov
div
pop
sbb
fsts
negl
xchg
out
mov
push
ret
notb
push
fisubs
xor
les
negl
cmp
mov
add
jmp
dec
out
adc
ficompl
cmpsl
add
