xchg
mov
add
xor
lea
push
push
push
push
push
push
push
call
jmp
neg
neg
xor
mov
xor
mov
xchg
lea
mov
mov
xor
not
rcl
xor
push
jmp
ror
xor
xchg
mov
xor
lea
not
not
neg
xor
lea
rcr
mov
xor
jmp
xor
not
mov
add
mov
lea
lea
neg
xor
jmp
lea
xor
rcr
xor
not
xor
xor
mov
mov
not
mov
rol
movl
jmp
mov
xchg
ret
xor
rcr
xchg
lea
ror
shrl
neg
xchg
jmp
xor
neg
shl
mov
lea
neg
xor
xor
not
jmp
add
and
lea
mov
not
xor
not
lea
mov
neg
not
xor
jmp
mov
xor
lea
push
lea
push
lea
push
lea
push
pushl
call
jmp
mov
mov
lea
add
add
mov
xor
xchg
xchg
mov
neg
xor
rcr
jmp
mov
mov
mov
mov
xor
neg
mov
lea
neg
mov
shr
jmp
push
mov
add
pusha
lea
xchg
mov
adc
mov
xor
call
mov
mov
lea
jmp
rcr
neg
mov
adc
mov
shr
neg
xchg
mov
lea
mov
xor
jmp
rcr
xor
neg
add
neg
xor
mov
mov
rcr
mov
mov
lea
lea
jmp
rcl
and
rol
mov
pushl
call
pop
shr
jmp
lea
mov
movl
mov
neg
lea
mov
movl
xor
mov
movl
jmp
xor
mov
xor
movl
xor
rol
not
xor
dec
mov
rcl
xor
shr
neg
ret
push
lea
push
push
pushl
pushl
call
jmp
xor
mov
popa
leave
call
jmp
not
mov
shl
mov
mov
xchg
neg
mov
xor
not
movl
mov
adc
jmp
adc
call
xor
mov
lea
rol
jmp
xor
xor
xor
xor
xor
mov
xor
lea
lea
adc
xor
jmp
xchg
not
not
neg
add
jmp
and
xor
call
lea
lea
mov
mov
not
rcr
lea
xor
ror
jmp
not
and
mov
xor
mov
inc
je
add
xor
not
xor
shl
mov
xchg
shr
jmp
add
mov
movl
mov
lea
xor
mov
rol
xor
xor
jmp
and
xor
inc
jne
neg
add
mov
mov
ret
lea
lea
mov
movb
xor
lea
xor
lea
push
push
push
push
call
mov
jmp
mov
not
pushl
call
rcl
mov
lea
xchg
xor
xor
xor
jmp
xchg
rcr
rcl
lea
push
push
push
push
push
push
push
call
mov
jmp
call
mov
rol
not
mov
not
movl
xor
rcl
jmp
lea
or
mov
mov
mov
call
mov
jmp
neg
mov
rol
neg
xchg
mov
jmp
xor
call
mov
not
mov
xor
jmp
not
not
xor
movl
neg
jmp
not
adc
xor
xor
lea
neg
lea
shr
lea
push
push
push
push
pushl
call
jmp
xor
lea
xor
mov
mov
not
lea
xor
ror
rcr
rcr
jmp
xor
rcl
not
dec
mov
xor
jmp
rcl
lea
mov
mov
mov
xor
rol
popl
shl
jmp
mov
decl
jne
mov
rcl
not
lea
ret
shr
mov
mov
jmp
movsb
xor
jo
mov
jo
inc
cmp
dec
add
sub
ds
jge
push
dec
hlt
sti
push
jne
cmp
inc
test
cmpb
push
incb
clc
jne
cwtl
cmp
push
enter
orb
xchg
cmpsl
mov
stc
mulps
adc
neg
repz
cltd
push
adc
push
mov
jl
outsl
mov
inc
bnd
jo
sbb
add
lahf
ret
jge
jo
or
std
ss
adc
ss
xlat
or
rcrl
cvtps2pd
adc
inc
ds
mov
movsb
push
push
sbb
or
add
shlb
or
mov
test
jle
jo
shlb
mov
lahf
into
sti
test
xor
jle
sbb
fcompl
or
push
jne
lahf
lcall
jb
popf
ss
mov
xor
popa
push
mov
rclb
mov
std
testl
mull
mov
mov
xorb
add
xor
cmp
dec
jge
jo
push
adc
imul
outsl
or
repz
jo
cmp
sbb
adc
lret
add
add
jns
jecxz
mov
jno
rolb
std
clc
inc
adc
aas
push
cmp
popa
js
aaa
or
pop
insb
fs
arpl
jge
mov
into
insb
outsl
or
leave
dec
jge
jo
fldt
test
cmp
in
sti
mov
jnp
or
sti
sbb
jo
fnstcw
jo
add
sti
push
test
cltd
dec
dec
xor
test
jle
cmp
stc
push
jns
mov
imul
jnp
push
test
jno
js
add
in
movb
push
mov
fcmovnb
add
push
int3
jo
pop
movb
pushf
sub
xlat
dec
push
sub
fbstp
ja
pop
dec
int
fnsave
rclb
adc
jno,pn
and
sbbl
dec
inc
add
cmpsl
lret
out
push
scas
sti
inc
mov
mov
add
inc
lret
lcall
sub
movb
mov
mov
loope
pop
push
lock
jg
mov
cli
pop
push
adc
xor
pop
lock
addr16
jns
lds
hlt
ja
xchg
mov
outsb
push
mov
mov
scas
push
fimuls
scas
push
mov
push
test
xor
mov
ja
lods
cmp
test
jne
call
inc
sub
adc
sub
lds
pushf
movb
sahf
andb
jbe
shlb
xchg
mov
call
cmp
fcmovu
inc
push
add
xchg
mov
ja
ja
pushf
mov
xor
mov
add
jp
add
jmp
push
push
xlat
cs
and
movsb
les
pop
cs
and
xor
mov
movb
cmp
ja
incl
mov
jbe,pn
add
jmp
lds
push
or
movb
pop
mov
sbb
mov
cmpsb
out
mov
xchg
scas
shlb
jae
xor
aad
bound
rclb
dec
adc
add
xchg
lret
call
cs
call
in
jle
aas
dec
jle
or
push
scas
sti
inc
shll
inc
sub
call
pushf
jbe
pop
sub
ljmp
loop
ds
pop
pushf
mov
dec
jo
push
mov
lods
inc
dec
pop
testb
inc
lods
add
lret
int3
sub
xor
dec
inc
fstps
mov
dec
dec
fstl
sub
in
cmpsb
mov
inc
and
push
fadds
call
push
int
cmp
fisubrl
or
and
push
push
cltd
push
cmp
sub
dec
cli
jae
movsl
fucomi
cmp
cmpsb
insl
filds
sbb
daa
pop
push
jb
dec
std
sbbl
aas
add
pushf
or
add
ds
cli
fs
push
shlb
rorb
sbb
push
dec
push
cmp
call
test
cld
sahf
mov
dec
ja
pushf
or
imul
dec
jno
bound
sbb
jno
and
jno
xor
xchg
mov
lds
mov
scas
push
decb
fbstp
rolb
filds
jmp
and
icebp
mov
mov
lds
adc
or
mov
pop
cmpsb
shr
loopne
call
fsubrs
lcall
dec
mov
jno
cltd
movsl
pop
movb
dec
into
mov
int
push
inc
lds
inc
scas
jb
xchg
ja
xchg
ljmp
jae
dec
mov
fsubr
cmp
scas
and
hlt
push
adc
into
add
imul
arpl
or
and
or
xchg
push
ja
cmp
fsubr
cmp
cld
sbb
scas
inc
into
mov
lds
cmp
ss
inc
mov
add
inc
mov
and
pop
lds
scas
sub
jg
pushf
mov
cmpsb
dec
ror
hlt
loope
mov
mov
divb
xor
or
sbb
pop
lds
es
bound
and
fisttpll
loope
movb
dec
dec
mov
pop
movb
into
mov
in
or
ret
push
scas
xor
mov
std
scas
pop
ret
pushf
lods
lods
das
mov
add
pop
movb
pushf
lock
adc
or
arpl
scas
xlat
mov
es
into
bound
lods
add
into
std
cmc
jbe
jmp
and
pushf
xchg
scas
pop
fimuls
cmp
mov
push
jecxz
pop
or
dec
fimull
out
push
xor
call
xchg
cmp
jo
push
and
sar
pop
jle
insl
push
xchg
aas
test
and
sarb
push
or
pop
scas
mov
push
dec
jle
add
inc
and
outsl
loop
mov
push
les
mov
les
sbb
xchg
popa
jne
enter
into
add
test
jge
es
adc
and
filds
adc
scas
xor
push
push
dec
push
push
fmuls
adc
dec
push
int
xchg
xlat
add
repnz
xchg
pop
loop
mov
or
or
aaa
aad
xor
jae
inc
push
mov
xchg
in
or
iret
push
xor
adc
inc
add
push
xchg
push
sub
push
jae
lods
enter
inc
outsb
push
dec
pop
or
cmc
aaa
mov
ret
scas
inc
arpl
loop
mov
inc
gs
mov
push
mov
andl
mov
popf
mov
push
jne
inc
push
cs
xorl
insl
inc
fcmovnu
sbb
pop
push
cwtl
add
or
xchg
addr16
jb
pusha
push
xchg
sub
aas
sbb
and
out
push
xor
inc
mov
cmpsb
mov
mov
outsl
xchg
lea
aaa
cmp
xchg
and
aaa
pop
xor
adc
inc
jge
popa
push
cltd
scas
sti
jl
int3
arpl
mov
outsl
aaa
call
mov
scas
xlat
scas
cmp
xchg
mov
gs
cmp
xchg
in
mov
sbb
mov
push
jp
arpl
stos
push
mov
lret
xchg
jo
jp,pn
imul
and
push
push
jmp
cmp
dec
inc
stc
xor
xchg
sbb
stos
jge
jns
xchg
ljmp
loop
and
ret
sbb
mov
add
inc
or
pop
ss
push
out
and
xchg
lret
fidivs
jbe
js
int
aam
sbb
mov
cmp
addb
sbb
ja
adc
ret
addr16
rcll
sbb
push
lds
es
popa
ret
sahf
fsubp
and
sbb
cwtl
or
jmp
cltd
xchg
inc
and
sahf
jbe
in
fcmove
mov
rorl
dec
push
sub
sbb
adc
mov
cmpsl
push
cmp
or
sbb
rcll
and
inc
xchg
jb
xchg
mov
jmp
es
ljmp
pop
test
fwait
aad
xchg
add
sbb
rclb
adc
pushl
test
dec
mov
arpl
sub
cmp
mov
sbb
into
stc
loopne
sbb
ljmp
shrb
fwait
pop
lods
push
mov
jle
dec
mov
mov
addr16
pop
stos
ja
jbe
shr
pusha
movsb
lea
fnsave
sub
cmpsb
insb
pop
add
in
sbb
sub
push
fsubs
movsb
in
out
lea
cld
in
into
das
xchg
dec
icebp
bound
in
sti
enter
inc
out
jno
pop
adc
push
cmp
leave
mov
sub
into
movsb
or
xchg
scas
gs
aad
cmp
xchg
mov
out
icebp
stos
adc
jg
out
pop
push
cli
fcomps
jbe
xor
rcrl
jnp
xor
jne
scas
fldt
jnp
inc
push
xchg
mov
aaa
jb
loop
ret
jge
lods
jne
lret
jmp
fnstcw
outsl
xchg
movsl
pushf
cmpsb
sub
sub
test
xchg
jne
adc
mov
out
ja
add
pop
cmp
or
push
xlat
clc
fadds
loopne
in
adc
or
inc
icebp
push
aaa
push
in
sbb
nop
jecxz
fnstcw
and
jmp
add
sahf
lret
mov
pushl
ja
inc
cs
inc
or
rol
lret
pop
cmpsl
push
popf
out
cli
xchg
cmp
idivl
xchg
scas
jle
xlat
rcrb
sub
subl
add
or
push
jecxz
mov
repnz
repnz
mov
mov
and
frstor
out
pmuludq
dec
arpl
repz
ljmp
push
es
notb
clc
enter
out
sub
sbb
push
or
int
fwait
ret
das
mov
jmp
cmp
jp
mov
arpl
icebp
xchg
ret
xor
xor
pop
cmovp
and
inc
inc
sbb
mov
sbb
int
addl
adc
push
movsb
test
nop
xor
test
inc
sub
add
sbb
xor
ret
cmc
cmp
jmp
cs
adc
jl
jl
mov
mov
push
inc
push
push
xor
push
or
in
bswap
mov
cs
jmp
sbb
sahf
hlt
lret
sub
pop
add
inc
sub
cs
dec
xor
dec
jns
lea
pop
stc
xchg
push
inc
les
arpl
lcall
xchg
mov
lds
fsubs
in
mov
jae
sbb
andl
xchg
cmp
lods
and
push
xchg
add
lret
daa
fcomps
xchg
xchg
imul
int
or
sub
inc
fs
call
inc
xchg
into
push
mov
ja
xor
push
aad
insb
mov
sub
shlb
mov
inc
adc
lea
and
mov
push
pushf
mov
loopne
dec
lcall
icebp
or
leave
stc
jno
lret
push
push
repz
mov
aam
test
insl
repz
out
arpl
xchg
xchg
pop
add
mov
push
pop
cmpsl
out
push
into
hlt
loopne
loop
pop
sub
into
mov
add
in
sub
inc
scas
je
daa
lea
call
adc
or
xchg
sti
dec
cmc
add
das
add
sub
je
mov
mov
cmpsl
sbb
mov
xchg
jmp
xor
das
cmpsb
sub
arpl
test
cmc
lret
in
inc
mulb
jbe
fsubr
popf
sbb
push
fwait
lock
mov
and
out
lods
and
pop
jl
dec
adc
jg
xchg
stos
nop
pop
lods
sahf
aam
xor
or
jmp
js
add
pop
clc
inc
sub
inc
into
lock
aas
sbb
addr16
ds
and
ss
and
jbe
outsb
xlat
in
sub
cmpsb
xchg
cmp
ret
pop
mov
dec
jge
mov
dec
xor
jle
nop
arpl
cmp
aas
rorl
loopne
adc
push
add
arpl
mov
in
movsl
repz
sbb
int3
popf
mov
and
inc
ja
repz
pop
xchg
adc
pop
into
sbb
imul
dec
add
xchg
es
mov
shr
add
dec
or
xor
ljmp
xchg
imull
mov
es
aad
dec
inc
cli
pop
jo
adc
mov
sbb
repnz
xchg
cmp
cmp
push
lds
fwait
fldl
and
cmp
pop
sbb
add
xchg
hlt
subb
stos
mov
sub
lret
daa
shr
mov
call
push
sbb
and
out
pop
popf
xchg
icebp
and
xchg
pop
sbb
jle
sbb
enter
pop
mov
pop
int3
push
and
addl
or
and
sub
adc
fsub
inc
shlb
vmovshdup
xor
fistl
and
xor
ljmp
sub
addr16
popa
adc
pusha
scas
jbe
fsub
inc
and
test
xor
adc
stos
das
jo
or
dec
clc
mov
lea
xor
lock
inc
adc
xor
cmpsb
loop
jbe
outsb
push
add
iret
jbe
mov
addl
inc
mov
mov
ds
pop
push
jg
out
jg
movsl
sbb
adc
ficoms
sub
std
xlat
push
push
es
movsl
loope
dec
xor
mov
lds
pusha
scas
fadds
ret
sahf
andb
add
int
pop
aaa
add
inc
sub
lods
ror
imul
sbb
jecxz
cs
fisttpl
aad
negl
shlb
mov
notb
ret
stos
sub
cmpsb
popf
ds
mov
fisubs
insb
jne
jmp
lret
iret
jle
jae
pop
iret
daa
aam
test
xor
and
inc
or
dec
aam
and
inc
pop
mov
cltd
lods
adc
push
mov
push
cmpsb
filds
shll
aaa
iret
push
test
mov
popa
loop
leave
mov
dec
cmc
fdiv
sbb
dec
add
push
into
mov
pop
repnz
mov
sub
sarl
notl
imul
or
es
call
add
rorl
int
cmc
sbb
jg
es
clc
and
data16
into
jle
insl
rclb
push
xbegin
cld
insl
pop
cmpsb
cmpsl
xchg
sti
cmc
out
js
mov
iret
inc
aaa
adc
les
inc
dec
pushf
lret
add
adc
jnp
dec
sahf
dec
aas
jne
xchg
dec
and
add
dec
mov
daa
sub
inc
pop
add
andb
adc
sub
add
sarb
pushf
out
pop
adc
dec
dec
adc
cltd
inc
and
imul
adc
cmp
clc
ss
movsl
jo
sbb
xlat
sub
sbb
mov
dec
xorl
lds
movsl
adc
movsb
dec
adc
sbb
fyl2xp1
xor
jmp
in
mul
lds
cmpsl
add
notb
adc
cld
ret
call
push
dec
ja
repnz
and
imul
enter
jmp
mov
mov
testl
xorb
les
pop
imul
pop
jno
mov
sub
xorb
sarl
cmp
adc
fs
inc
cmp
xchg
mov
sbb
in
cli
mov
pop
xchg
les
aam
lods
insl
push
sahf
or
fsubrl
pop
sbb
bound
sarl
sub
mov
stos
adc
pushw
add
pop
jae
xchg
xchg
xor
xorl
cltd
cs
daa
or
ljmp
adc
insl
or
sbbb
stos
sub
adc
int3
pop
inc
pop
and
adcb
pop
pop
fs
xchg
mov
iret
jmp
repnz
jns
lcall
js
push
xchg
add
pop
imul
fldl2e
inc
push
xor
add
mov
push
das
arpl
icebp
inc
fistpll
or
shll
mov
data16
iret
mov
loop
std
outsb
sbb
mov
inc
add
popf
out
pop
cmc
pop
xchg
add
arpl
push
sub
scas
cs
das
xor
add
push
fmulp
mov
aaa
pop
cli
cmpsl
inc
mov
sub
mov
cmp
movsb
sti
sbb
int
outsl
fnstsw
addr16
inc
xor
hlt
out
mov
mov
repnz
cs
icebp
subl
sbb
or
mov
pop
lret
add
shlb
cs
aad
popa
xchg
clc
das
mov
sub
ss
in
sbb
shl
js
push
xchg
js
xchg
les
ss
scas
ljmp
out
sub
xchg
daa
aaa
rclb
or
sti
or
bound
shr
loop
aas
sbb
mov
jnp
aam
jmp
lcall
or
xor
or
iret
xor
daa
insl
xchg
mov
jmp
or
sub
outsl
sbb
dec
inc
adc
push
stc
xor
cmp
outsl
mov
xchg
shlb
stos
xchg
lea
push
sbb
pop
dec
xchg
push
enter
imul
out
push
addr16
lds
mov
dec
and
adc
push
pop
jecxz
movsb
sbb
mov
pusha
sti
xchg
jmp
xchg
mov
ja
push
mov
std
loop
push
or
mov
and
into
cmp
sbb
add
movsb
rolb
hlt
test
es
cld
loope
ret
les
sub
xchg
push
and
sbb
fimull
fdivrs
in
inc
iret
jne
pop
lret
xchg
jmp
mov
xchg
mov
ret
ljmp
or
xchg
dec
push
jecxz
cmp
push
inc
rcr
sbb
push
lods
dec
cmp
adc
mov
roll
xchg
push
cmp
push
ror
jmp
jmp
add
icebp
ficomps
dec
jg
mov
jbe
dec
jle
mov
jg
xchg
or
push
insl
aas
inc
mov
test
add
in
data16
filds
and
or
fidivs
sbb
push
push
popa
push
lahf
or
aam
jmp
int
je
add
inc
mov
cmp
and
fbld
sbb
lock
sbb
cwtl
and
loopne
cmp
fisttpl
sub
outsl
cs
outsb
xor
mulb
xchg
sahf
cwtl
or
push
adc
movsb
push
jge
add
leave
int
mov
fldt
pusha
movsl
hlt
xchg
push
and
out
movsb
sbb
ficompl
movsl
test
push
lods
cld
leave
or
fimuls
mov
int
adc
test
push
out
jne
fcoml
jnp
push
mov
dec
mov
cmc
es
jmp
iret
fisttpl
fwait
sub
imul
xor
ret
push
fcoms
push
push
fimuls
jnp
shlb
cmp
add
inc
pop
or
sub
push
rcrl
jno
fwait
xchg
aam
sbb
adc
ret
sbb
jge
int
roll
mov
or
sarb
enter
addl
xor
push
add
sub
adc
test
xchg
popf
enter
cmp
das
push
cmp
dec
sbb
loop
xchg
lcall
icebp
das
das
ljmp
ret
popa
sub
iret
insb
cmpsb
add
adc
daa
adc
in
cli
dec
stc
xchg
push
cli
fwait
cmp
sahf
push
sub
enter
inc
rorb
sub
inc
int
add
out
xor
fldenv
js
xchg
mov
lock
sbb
and
jmp
ja
je
add
pop
add
mov
and
inc
arpl
mov
jns
daa
xchg
mov
hlt
mov
inc
orl
ds
sub
iret
out
xlat
and
xor
jg
es
lcall
pop
xchg
xchg
lret
inc
stos
xor
mov
fldcw
or
dec
lds
das
mov
sbb
jo
adc
out
fsts
add
dec
pushf
xor
adc
sub
jle
add
mov
mov
sahf
test
sub
lret
push
push
dec
push
or
xor
mov
leave
sbb
mov
mov
push
inc
into
sar
stos
sbb
mov
push
push
xchg
loopne
inc
ficoms
add
sbb
pop
inc
jbe
mov
xor
push
sbb
mov
out
gs
icebp
gs
pop
inc
cmpsl
push
pop
push
xchg
mov
cmc
xchg
push
and
mov
mov
mov
or
out
and
das
gs
hlt
out
jno
dec
pushf
xchg
lds
out
sub
out
jmp
daa
cmpsb
inc
mov
in
jg
or
mov
inc
daa
pop
pop
daa
mov
add
dec
xchg
push
cmpsl
pop
xchg
push
test
push
mov
and
ds
adc
and
dec
sbb
mov
lock
out
das
inc
xchg
int
daa
xchg
jp
mov
xchg
cmp
jne
mov
xchg
jbe
dec
mov
stos
xor
and
jg
push
cmpsb
lea
cmp
lods
push
movsl
stos
rcrb
sbb
add
sub
mov
lds
mov
lret
inc
dec
push
popa
sub
das
and
into
subb
inc
inc
push
lock
mov
je
mov
sub
mov
call
testb
rcrb
rcll
push
inc
cmpsb
mov
mov
daa
sbb
xchg
push
and
imul
sub
test
xor
fidivrs
inc
pop
test
aam
sub
shlb
ret
xchg
adc
pop
jg
and
inc
inc
movsb
jl
pop
push
test
inc
mov
jo
aaa
xchg
addb
and
jne
je
lea
add
les
fldenv
add
push
not
std
jbe
shrl
add
jge
add
jae
mov
mov
lret
push
shll
rcrl
sbb
inc
fcoml
and
data16
push
sub
inc
ficoml
out
xor
jbe
mov
insl
test
shlb
cld
int3
mov
inc
sarl
xchg
cmpsl
inc
int3
fildl
out
cmpsl
jl
jp
jecxz
and
jecxz
jecxz
xor
out
xor
or
jmp
xchg
cmpsb
gs
mov
lahf
or
in
cmp
loop
and
hlt
mov
or
in
adc
outsb
insb
pop
inc
pop
idivl
cli
in
je
cmc
and
push
xor
inc
cmpsb
mov
xor
and
cmp
mov
popf
jae
sub
sbb
sbb
pop
sti
aaa
imul
mov
inc
js
add
loop
adcl
mov
xchg
pop
roll
cmpsb
in
lds
push
orl
push
jecxz
loop
imul
push
jns
arpl
pop
sub
push
mov
iret
adc
fidivrs
push
dec
out
ljmp
adc
adc
aas
call
jne
pushw
inc
loopne
arpl
lods
adc
xor
mov
popf
cmpsb
jmp
movb
out
mov
enter
or
pop
je
xorb
sbb
insl
xchg
movsb
jno
jns
je
cmpsb
mov
ljmp
leave
mov
into
push
or
sbb
adc
outsl
adc
cs
jge
or
aam
arpl
daa
iret
les
aad
mov
fildl
sub
lret
and
jae
clc
cmp
pusha
mov
ss
pop
pushf
cmp
adc
xor
int3
add
cmp
fiadds
iret
jne
cs
cmp
dec
push
stos
push
push
dec
std
inc
inc
ss
icebp
cmp
push
push
add
mov
ja
cmc
std
imul
cld
loopne
test
sub
jbe
xchg
cmpsl
jo
hlt
sub
cs
xlat
add
pusha
push
jmp
sbb
mov
jae
adc
cmp
add
loop
xor
mov
add
and
jle
sbb
cwtl
add
es
sti
sbb
dec
rolb
sbb
xor
adc
jno
mov
xor
stos
sub
into
jg
ret
inc
push
and
cld
xchg
lods
pop
mov
sti
lods
and
loop
cld
enter
repz
xor
sub
movsl
call
stc
or
adc
and
pop
jge
mov
sbb
rcll
push
movsl
sbbl
arpl
ret
stc
fisubl
inc
push
and
ss
lods
in
and
arpl
int
imulb
ret
xchg
mov
icebp
jae
xor
dec
and
lret
ds
ss
cmpsb
icebp
mov
popa
cld
imul
adc
dec
cmp
jne
into
pop
mov
js
mov
adcb
xchg
inc
dec
and
sub
push
pop
mov
cmp
adc
push
les
pop
cld
inc
cs
fists
jo
cld
or
cmp
or
xchg
iret
xchg
sbb
xchg
lcall
adc
lea
ret
gs
inc
sbb
movsb
push
daa
jle
jmp
ljmp
imul
jle
xlat
adcl
std
insb
or
push
mov
clc
sti
add
jmp
fiadds
add
mov
add
xor
loop
push
test
testl
add
sub
inc
test
jmp
aas
imull
sub
xchg
inc
repz
jecxz
xchg
push
int3
xor
add
loope
lds
cmpsl
das
add
and
cld
daa
dec
pop
sub
cmp
inc
and
push
cmp
movb
movsb
mov
lds
mov
pop
and
popf
push
je
jbe
fwait
aas
loopne
push
mov
out
and
inc
arpl
push
pop
push
daa
js
aas
flds
shl
test
lret
inc
insb
mov
adc
leave
ja
dec
adc
inc
push
rep
out
or
mov
test
sub
and
ds
cmc
or
add
and
popa
sbb
jbe
jmp
xchg
and
jne
xchg
xchg
push
popf
xor
xor
adc
and
aad
test
cmp
mov
test
xchg
nop
mov
ljmp
cmc
inc
jo
out
or
xor
sahf
out
pusha
jecxz
xchg
dec
ja
push
sub
push
scas
data16
jle
mov
mov
ret
xchg
int3
xchg
ret
jbe
clc
out
test
daa
outsb
xlat
rcll
sub
xchg
pushf
inc
or
sbb
xchg
push
and
js
outsb
cmp
sub
loope
jg
cli
ja
mov
arpl
xchg
push
push
stos
ja
jb
fld
mov
das
lods
sub
das
aaa
dec
in
and
icebp
es
scas
sbb
js
xchg
repz
and
into
cmp
adc
cmp
xchg
ljmp
inc
mov
cmpsl
sub
into
std
add
adc
adc
ficoml
xchg
ret
int3
adc
lahf
adc
sahf
push
out
fsubrp
mov
je
popf
fisubs
cld
sub
sbb
stc
pop
pop
bswap
and
xlat
flds
insb
rorb
cmp
cmp
hlt
jp
leave
mov
and
arpl
repz
jne
jecxz
mov
pusha
push
inc
shll
outsb
or
gs
cs
les
ret
add
push
pop
mov
int3
testl
leave
mov
or
call
fists
cmp
out
jge
scas
dec
sub
rclb
int
adc
mov
lret
add
cli
lods
pop
clc
mov
sar
xchg
into
add
cmpsl
bound
jo
inc
pop
sbb
mov
xchg
out
cmp
stos
in
int
push
test
nop
push
xchg
xor
add
mov
push
mov
shlb
daa
mov
pop
sub
not
xchg
xor
adc
push
int
adc
xor
dec
push
shrb
iret
add
push
movl
xchg
push
sti
mov
subl
psrad
out
cmpsb
rol
sbb
das
dec
xlat
pop
shll
mov
and
ret
daa
jbe
jmp
adc
lret
fwait
or
movsb
cli
lcall
xchg
push
cs
and
add
or
and
rorl
jmp
fucomp
insb
xchg
daa
jge
xor
jnp
dec
in
xor
arpl
outsl
xchg
push
jbe
clc
jle
adc
pop
shll
sub
dec
pop
mov
sbb
into
lds
aas
adc
in
or
pusha
out
or
mov
jbe
xchg
aad
movsb
inc
andb
mov
xor
jmp
inc
mov
xchg
mov
xadd
sbb
fnstsw
add
lcall
add
roll
push
push
lods
jecxz
mov
fstp
cli
enter
jo
push
or
rclb
or
push
mov
into
pop
dec
dec
xchg
or
neg
pop
and
ficomps
sti
xchg
xchg
mov
push
in
push
dec
inc
and
jmp
sbb
into
bound
fwait
xlat
cmp
mov
and
sub
incl
lahf
aam
xchg
aam
pop
aaa
and
jo
sbb
mov
hlt
sbb
xor
xchg
xchg
leave
xchg
xchg
inc
scas
inc
push
push
insl
add
shr
fcmovbe
adc
jbe
push
sub
lret
lock
mov
ret
sub
mov
inc
cmp
in
sub
push
icebp
ljmp
xchg
mov
sub
bound
adc
iret
push
arpl
dec
mov
rcrb
push
into
daa
mov
add
test
fmull
push
sub
mov
mov
arpl
add
mov
mov
test
inc
test
add
fnstsw
inc
push
mov
in
cltd
push
loop
subl
mov
jmp
cs
mov
dec
dec
mov
lds
sub
pusha
push
leave
sahf
cmp
aad
daa
das
lea
out
push
mov
test
pop
jl
arpl
cmpl
xchg
les
adc
pop
jno
xchg
and
inc
test
test
decb
jne
add
test
popf
inc
jmp
cmp
add
push
fdivs
dec
sahf
push
add
pop
cmp
imul
lret
adc
mov
mov
mov
push
cmp
jbe
jp
lock
cmpsl
lock
inc
mov
sahf
dec
cs
cwtl
ljmp
in
inc
jmp
or
add
cs
sbb
cli
jbe
mov
xlat
push
or
test
enter
sbb
dec
sub
cmpsb
pop
push
cmp
jo
lock
ja
push
inc
clts
sarb
or
or
iret
ljmp
add
ljmp
fidivs
jecxz
out
repz
aad
add
int3
cmp
sbb
das
hlt
pop
loope
cmc
or
mov
divl
sub
fwait
shlb
push
inc
push
xor
sub
mov
jae
ds
fdivr
in
leave
andl
mov
cmp
add
shr
lss
in
and
insl
iret
dec
fidivrl
je
mov
adc
dec
jmp
add
mov
movsl
aam
mov
jnp
je
ljmp
sbb
and
xchg
push
test
rclb
cmp
aas
add
dec
mov
std
push
incl
push
jo
and
stos
mov
bound
cltd
dec
inc
lds
mov
and
mov
push
insb
sbb
push
sub
mov
mov
test
pop
js
test
mov
mov
push
xchg
jp
fnop
lock
pop
mov
inc
pusha
or
sub
ljmp
push
loope
push
jne
pop
inc
cld
lock
cmp
leave
fildll
adc
insl
xor
aas
add
add
rol
cmp
fcmovnu
arpl
sub
mov
cmovnp
adc
pop
pop
inc
rorb
int
cmpsb
inc
cmpsb
ror
dec
sub
sub
mov
sub
pop
lret
xchg
or
pop
dec
test
push
sub
jnp
pop
mov
mov
ret
pop
mov
adc
mov
std
pop
add
mov
fwait
mov
shll
jno
dec
scas
addr16
sub
mov
nop
ret
push
and
push
sbb
push
pop
lods
jp
fiadds
cmp
mov
push
in
leave
jg
mull
daa
jbe
pusha
notb
insl
inc
dec
add
or
cmpl
or
mov
nop
scas
fsubrs
lods
in
push
sub
sbb
inc
or
add
push
xlat
push
sub
push
cs
btr
imul
out
pop
push
fdivs
or
cmpl
test
addr16
inc
cmp
out
push
repz
push
ljmp
ret
inc
sahf
ss
push
lods
iret
and
sub
dec
stc
push
bound
mov
jl
or
push
mov
arpl
inc
sbb
lock
pop
inc
xor
inc
fsubl
enter
push
fcmovnb
pop
out
jmp
adc
aaa
xchg
sub
call
cmp
mov
cmp
cmc
push
hlt
mov
jmp
mov
in
movsb
jecxz
mov
mov
adc
cmp
mov
stos
adc
int3
roll
pop
push
add
add
out
mov
fstpl
adc
call
clc
addr16
and
pop
add
dec
lret
add
sbb
lds
and
nop
addl
push
addl
daa
pop
addr16
mov
sbbb
mov
mov
ret
inc
inc
jle
mov
orb
inc
mov
jo
cmp
jl
or
dec
push
es
and
in
sub
dec
mov
and
xlat
into
fisubrl
ds
test
aam
arpl
cmp
fcmovnbe
jp
xor
data16
out
aad
xor
in
repz
and
sbb
int
aad
in
push
xchg
gs
and
mov
inc
mov
rorl
push
push
xor
andl
dec
dec
insb
and
notl
or
push
push
mov
jnp
add
leave
test
ljmp
bound
or
or
adc
xor
inc
pop
xor
xchg
xor
xor
aam
cltd
xchg
mov
scas
in
aas
cmp
xor
add
jb
test
je
cmp
push
inc
andl
sub
mov
dec
out
xor
fstpt
and
push
imulb
cmp
mov
or
mov
xchg
and
repnz
repz
or
adc
cmp
in
sbb
dec
or
inc
inc
sub
mov
lods
add
lods
test
pop
jp
scas
adc
loop
push
cmp
or
push
es
dec
jns
fdiv
cmp
mov
rorl
mov
in
dec
fs
rorb
push
fstpl
adc
xor
ret
out
movsb
mov
jmp
shlb
cmpsl
mov
xor
push
jp
mov
or
cwtl
mov
shll
xor
inc
mov
mov
cmp
movsl
add
subb
out
dec
cmpsl
pop
int
mov
dec
enter
xor
test
out
mov
testl
cs
mov
sbb
pop
inc
pop
out
outsl
dec
sub
or
xchg
out
ljmp
iret
addb
cmp
push
mov
jmp
sarb
xor
sub
mov
mov
pop
sbb
in
xchg
das
push
xchg
add
jmp
push
test
shll
add
push
push
adc
orl
or
test
sahf
leave
push
mov
les
cltd
cmp
out
cmp
flds
add
pop
mov
sbb
pop
push
fistpl
xlat
add
mov
movsl
adc
xchg
lods
into
and
stc
cs
xor
jmp
pop
xchg
mov
cli
dec
fstps
add
fisttpll
pop
pop
shr
sub
dec
leave
push
in
push
leave
dec
inc
add
les
sub
roll
mov
jbe
and
popa
jmp
loop
lcall
repz
jmp
icebp
push
dec
inc
mov
rcr
xor
cmp
out
test
sbb
add
ficoms
lods
adc
mov
out
jmp
adc
dec
adc
or
mov
mov
pop
mov
mov
adc
add
xor
pusha
add
mov
jp
arpl
push
adc
fwait
xchg
push
imul
es
xor
fiaddl
xlat
sbb
mov
sbb
pushf
loop
es
out
pop
pop
xchg
stc
fadd
add
mov
pop
and
sbb
pusha
cmp
shl
jg
hlt
mov
and
or
xchg
cltd
sub
push
sgdtl
sbb
add
lahf
jmp
inc
jg
ror
subl
xlat
fs
int
push
xorl
sbb
push
outsb
sub
mov
lods
cmp
cmp
sub
sub
and
aaa
inc
dec
or
push
lods
xor
dec
data16
mov
sub
cltd
xor
sbb
push
sub
ss
sbb
lods
fucompp
loop
pop
aam
fdivrs
inc
and
pop
xchg
mov
sub
subl
and
or
lock
es
orb
cmp
cld
mov
xchg
insl
sub
cmp
sub
lret
sub
cmp
sub
cmp
sub
je
push
jbe
adc
mov
push
mov
add
dec
mov
into
subl
loopne
and
sub
mov
mov
out
or
pop
lea
aam
jmp
cld
sarb
sub
cmpsl
adc
push
xchg
adc
ret
xor
mov
jnp
push
lret
arpl
std
xor
jp
mov
sbb
ds
loopne
xor
daa
insl
sub
pop
dec
xchg
add
pop
orb
jbe
int3
pop
sbb
sarw
clc
enter
push
mov
push
cmp
inc
pusha
repz
sub
test
jb
add
shll
inc
aas
xchg
push
push
fadds
int
lret
push
ficompl
adc
repz
sbb
and
xchg
insl
sub
pand
sbb
rorb
pop
cltd
ljmp
xlat
dec
push
fs
dec
jle
xchg
cltd
insl
fnstcw
xchg
or
add
add
and
ss
dec
xchg
popf
fsubr
outsb
adc
movsl
out
shrb
sbb
int3
sub
pop
int3
psrlw
xor
addr16
or
aaa
push
orl
mov
pop
add
adcb
jp
mov
mov
int
out
adc
dec
inc
jo
out
sub
adc
jecxz
sub
loop
das
sub
xor
inc
cmpsl
cmpsb
sub
and
pop
fbld
add
or
xor
push
jb
dec
iret
sbb
dec
mov
mov
in
and
rorb
popw
xchg
mov
xor
sbb
add
arpl
int3
cltd
addl
cmp
into
pop
mov
cld
xor
jno
inc
mov
sub
cmp
jecxz
popa
xchg
lds
out
enter
xor
add
push
lcall
sbb
sbb
mov
sub
gs
sbb
xor
lds
aaa
sbb
stos
mov
push
xor
push
dec
cli
lahf
ss
sub
loop
test
mov
ljmp
loop
fcoml
cs
mov
popa
mull
dec
mov
aaa
inc
add
loope
sub
movsl
dec
mov
jg
les
mov
cmc
sbb
dec
data16
scas
push
roll
xchg
repnz
and
add
lret
aad
xor
aam
iret
bswap
outsl
lods
aas
imul
lret
push
addl
in
mov
cmp
mov
add
sub
or
mov
out
push
cmp
rcl
xor
push
shlb
inc
cmp
xor
shll
fstl
xor
shlb
out
fsubrl
inc
xor
inc
dec
cmp
ret
xchg
and
adc
and
push
aam
pop
or
pop
add
cld
cld
data16
daa
xlat
daa
inc
pop
shll
push
into
daa
mov
xchg
add
sbb
sub
xchg
and
cmp
adc
iret
push
add
int3
das
fs
outsb
gs
lret
aaa
pop
shrl
lcall
int
sbb
mov
mov
mov
push
fldt
adc
push
pop
ja
add
sub
pop
cmp
fs
pop
push
adc
sub
insl
or
shrb
adc
lods
adc
in
push
ret
sub
iret
sub
mov
fsubr
xchg
ret
and
sbbb
mov
stc
fwait
cs
add
dec
popa
cmp
fwait
sti
pop
jmp
out
in
dec
imul
or
xor
pop
or
cmp
dec
jecxz
ds
out
ljmp
into
jg
cmpsl
jbe
add
adc
pop
mov
cmp
sub
imul
jmp
es
push
adc
pop
add
xchg
inc
vpshufd
push
and
pop
stos
shll
jecxz
push
jp
dec
shll
stos
std
popf
scas
arpl
es
adc
ja
sahf
fwait
loop
push
lret
cmp
and
mov
shl
push
fadds
push
or
kmovw
inc
aas
push
pop
mov
sub
scas
in
into
adc
sbb
cmp
subb
int
dec
dec
push
fidivs
adc
jecxz
mov
int
xchg
in
add
push
notl
adc
sar
mov
cmp
sbb
or
inc
ss
test
push
or
adc
mov
add
call
xchg
outsb
pop
mov
cs
aad
daa
push
mov
or
sbb
lods
scas
sbb
in
fmull
or
xchg
xorl
xor
inc
repnz
ja
mov
je
dec
push
xor
xchg
or
sub
or
cmp
lods
adc
shlb
push
nop
mov
sahf
push
xor
inc
xchg
mov
inc
adc
gs
jg
idivl
push
fimuls
mov
popa
and
inc
pushf
test
sub
sar
mov
fnstsw
jge
jmp
add
loop
aam
in
cld
iret
sysexit
mov
ss
push
rcll
fstpl
sbb
sbb
in
stos
aam
hlt
jl
jnp
into
cmpsb
in
dec
adc
in
lcall
cmpsl
nop
sub
movsb
mov
shlb
js
enter
cmp
jae
cs
repz
mulb
mov
divb
cmpsl
xor
stos
and
inc
insb
sbb
outsl
insb
cld
add
pop
mov
ret
add
jae
pop
inc
xchg
clc
shlb
in
cs
outsl
add
out
lods
sub
add
lcall
jge
mov
xchg
adc
shlb
les
stos
jbe
cmp
push
ss
xchg
dec
or
jae
mov
mov
data16
push
out
sub
aaa
lret
push
ret
sub
xchg
push
cmc
pop
popf
push
leave
sub
pop
or
pop
xchg
pusha
fwait
ret
cs
mov
push
xchg
push
dec
push
pop
bound
addr16
jns
outsb
sub
sub
stos
pusha
andb
jbe
js
pop
inc
inc
cmpsl
int3
dec
pop
dec
outsl
push
shrb
popf
lahf
es
outsl
mov
test
popf
jecxz
sub
xor
cs
adcb
xchg
sbb
mov
mov
mov
and
xor
ret
sbb
sub
push
insb
lcall
lahf
xchg
ljmp
sub
outsl
mov
inc
test
pop
in
cmp
gs
test
push
pop
sbb
fwait
xchg
push
loopne
into
lock
ds
cmp
and
add
xor
imul
stc
cmp
jge
lods
adc
aad
int
or
test
jnp
add
xchg
repz
xor
in
mov
push
cmp
push
xchg
adc
cld
dec
movsl
sub
arpl
ljmp
stos
lahf
outsl
push
xchg
push
aas
inc
mov
stos
or
jbe
jl
pop
push
mov
lea
imul
cmp
mov
xchg
add
push
adc
mov
cmp
jbe
les
cmpsl
jo
inc
sar
mov
mov
shll
test
idivl
cmp
jae
adc
out
jbe
dec
pop
fnsave
dec
and
pop
int3
jmp
hlt
dec
xchg
rorb
bswap
push
fwait
jae
arpl
ljmp
scas
fiadds
xor
pop
addb
push
adc
sbb
jmp
add
pop
std
push
fldenv
cs
xchg
and
jmp
iret
xchg
std
push
shll
movsw
scas
jp
rcll
das
cmp
cwtl
cmp
je
push
jge
into
lea
ja
push
retw
add
and
xchg
inc
push
jne
xchg
push
je
lods
inc
popf
adc
int3
ljmp
xchg
repz
shll
scas
inc
pop
fs
mov
jg
cmp
mov
es
mov
cwtd
call
cltd
call
aaa
xchg
sbb
dec
jbe
jbe
pop
aas
push
xchg
push
ja
scas
aam
ljmp
dec
jg
lret
aas
xchg
test
aas
flds
mov
push
daa
jnp
xchg
inc
test
jnp
push
and
pop
cmp
xchg
stos
and
jle
popa
mov
rclb
int3
mov
xor
sbb
jnp
jg
stos
and
aad
xchg
cmpsb
cmp
and
add
xchg
outsl
add
pushf
adc
mov
int
xchg
fdivp
ss
pop
add
cmp
in
cmp
sar
mov
add
and
lahf
sub
outsb
adc
and
xchg
xor
dec
pop
mov
xor
adc
adc
insb
cmpsb
out
ret
sbb
add
mov
cld
pop
xchg
shr
sub
insb
mov
jne
xchg
ss
sbb
mov
cmpb
aad
sub
movsl
mov
jbe
popf
pop
pop
into
inc
cmp
lock
movsl
ret
xchg
sti
mov
or
and
js
cmc
jne
pop
add
mov
pop
mov
mov
test
mov
sub
aam
add
xchg
aad
mov
addr16
mov
mov
mov
test
push
dec
ljmp
lret
in
testl
gs
pusha
popf
scas
pop
add
cmp
lret
or
lahf
sub
stos
jl
mov
jle
repnz
jl
xorb
int
lds
stos
aam
add
jbe
das
testb
mov
bound
mov
jecxz
xchg
dec
inc
movsl
xor
xchg
pop
fbstp
cmp
mov
pop
mov
push
push
roll
sbb
fiaddl
push
xchg
sbb
divb
cs
push
add
push
sbb
add
adc
lcall
mov
dec
test
push
outsl
fdivrl
mov
cmc
mov
cmp
pop
sbb
imul
movsl
es
mov
xorl
inc
push
add
xchg
imulb
mov
pop
xchg
mov
in
mov
or
stos
push
mov
cmpb
mov
or
data16
and
aad
cmp
stos
push
xor
lret
xor
cs
push
fistps
push
in
jmp
and
push
cmc
jmp
cmp
dec
inc
shlb
ret
out
gs
into
or
mov
in
mov
push
rol
mov
sbb
fcmovbe
stos
push
adc
push
adc
std
xchg
lret
sbb
push
sti
cltd
sbb
in
aad
rcll
cmp
dec
inc
loop
push
xchg
in
fisttps
out
or
call
fsub
mov
cmpsb
push
mov
movsb
mov
sbb
fidivl
xchg
lahf
repz
cltd
jnp,pn
fwait
cltd
cmpl
push
mov
cmpsl
cmp
adc
xchg
cmc
fwait
xchg
pop
mov
cmp
testl
call
push
pop
dec
shll
adc
pusha
outsl
popa
inc
addr16
dec
jns
dec
jnp
push
out
daa
aaa
and
jae
sub
pop
mov
pop
mov
lcall
sbb
inc
push
mov
inc
pop
mov
jnp
push
sti
pop
mov
jle
ja
inc
or
test
cwtl
das
mov
popf
das
cltd
mov
push
aas
mov
push
jne
stos
cmp
jnp
mov
add
jnp
dec
adc
stos
push
aad
je
cmp
iret
xchg
xor
pop
cmpsb
jl
pop
cmpsb
xchg
push
subb
test
lods
int3
insl
mov
sahf
hlt
data16
inc
in
cmpsl
insb
add
mov
cli
mov
add
outsb
dec
pusha
cmp
div
push
mov
xchg
lods
inc
jne
mov
jnp
mov
or
xor
filds
dec
jae
jb
adc
push
andl
xchg
cmp
pop
cld
dec
enter
out
arpl
jae
cmp
pop
int3
push
dec
jae
inc
mov
movsl
pop
jge
xchg
lods
leavew
and
xchg
insl
push
mov
dec
sbb
pop
inc
lret
push
push
jno
pop
mov
jns
test
cltd
sbb
inc
data16
or
jae
dec
fldt
pop
xor
lahf
mov
jae
dec
outsb
inc
scas
dec
and
xchg
fucomi
jmp
outsb
stos
addr16
push
fimull
xlat
enter
cmpsl
and
jl
push
mov
aaa
pop
jns
xchg
popa
insl
bound
xchg
lods
outsb
cltd
xchg
stos
mov
fistpll
insl
jbe
jno
mov
ljmp
push
mov
out
cmpsl
nop
dec
pop
mov
sti
test
sbb
arpl
sub
inc
jb
vmwrite
mov
in
add
mov
jb
xlat
inc
adc
cmp
ss
movsb
push
insl
mov
or
cmpsl
pusha
push
jmp
stos
mov
mov
es
das
mov
cwtl
add
inc
fucom
sub
xor
dec
into
insl
jmp
jae
mov
adc
inc
mov
cmpsl
adc
add
clc
lahf
lods
hlt
xchg
jbe
cmp
xor
mov
and
rcll
adc
es
arpl
sub
jp
cmp
aam
aam
and
call
in
jl
pusha
data16
or
xchg
sbb
adc
xchg
dec
push
clc
and
shll
pop
roll
jg
aad
iret
cs
add
pop
iret
mov
mov
lods
in
into
mov
cmp
imul
movsl
adc
std
add
push
cld
adc
add
orb
leave
fs
add
jo
add
in
or
outsb
iret
or
iret
cs
sbb
add
out
int3
sbb
inc
nop
xor
loopne
push
movsl
aad
rcr
mov
sub
rorl
dec
pushf
sub
aaa
or
xor
daa
inc
aam
adc
push
pop
jl
mov
inc
out
xor
call
push
mov
add
adc
or
jg
xchg
out
mov
outsb
mov
adc
or
xorl
int3
ljmp
mov
into
stos
in
ret
xor
ljmp
mov
sub
adc
loope
movsb
jae
je
push
sbb
arpl
ret
jg
add
in
inc
jmp
and
ds
lret
aas
mov
iret
xchg
mov
xchg
sub
les
lds
stos
add
sub
push
pop
into
xchg
inc
into
adc
aas
into
push
out
jne
dec
inc
sub
dec
adc
cmp
loope
icebp
mov
ljmp
lahf
sub
mov
inc
aaa
sbb
icebp
lcall
add
sahf
xchg
fwait
sub
aad
xor
add
pop
lret
dec
ret
and
inc
sbb
xchg
mov
aad
adc
dec
inc
or
scas
mov
fs
rcll
inc
xchg
sub
aas
lret
jl
jmp
xchg
and
push
orw
jg
xchg
xor
into
les
push
xchg
jo
lcall
in
mov
inc
fisttps
inc
fiaddl
mov
stos
jae
xchg
fiadds
pop
add
push
sub
loope
popf
fidivs
fwait
adc
ds
mov
sti
cs
sbb
xlat
icebp
adc
jp
repnz
or
mov
adc
dec
int
push
cmc
jo
movb
into
push
pop
fucomp
pop
adc
in
and
int3
loope
xor
push
jb
in
faddl
rcrb
shlb
mov
sub
inc
or
aad
xchg
out
addr16
dec
nop
cli
test
loop
jns
or
gs
or
adc
mov
aaa
push
pop
pop
dec
dec
xchg
and
push
bound
xchg
pop
and
sarb
mov
adc
jmp
sub
add
dec
inc
cmp
mov
mov
mov
imul
sbb
sbb
shrb
dec
stos
jnp
dec
jb
pop
mov
and
push
js
adc
xor
mov
mov
xchg
jb
nop
add
xchg
jbe,pn
add
decb
int
push
int
and
mov
jecxz
cli
add
cmp
push
jne
lods
adc
sbb
aas
jbe
jo
push
xor
sub
orl
dec
add
push
push
inc
aad
fsub
addr16
in
or
jg
notl
in
add
cmp
cmpsl
add
lret
test
push
push
ljmp
mov
inc
out
inc
loop
in
in
negb
push
xchg
jmp
inc
add
inc
icebp
xorb
lret
and
inc
and
add
fdiv
ret
xchg
inc
fnstenv
mov
ja
sbb
fimull
das
mov
add
arpl
pop
sub
sbb
pushf
gs
dec
cmp
pop
xor
dec
pusha
shll
pop
dec
das
mov
mov
sbb
sbbb
dec
jo
inc
sbb
jge
fidivs
dec
pop
fcmovb
adc
in
inc
sbbb
cltd
mov
call
adc
jge
pop
mov
je
lods
lea
mov
mov
and
pop
inc
pop
rorl
jecxz
test
jo
aaa
test
xchg
dec
push
pop
add
xchg
test
add
inc
mov
mov
call
cs
ficomps
fcmovb
divb
xchg
loop
std
xor
jo
sbb
scas
adcl
leave
shlb
mov
mov
xchg
push
int
shrl
lret
push
fldcw
scas
sbb
inc
lea
sahf
sub
das
and
xor
cmp
xor
pop
or
push
pop
mov
int3
xor
in
mov
daa
mov
idivl
adc
xor
insl
dec
mov
ficompl
iret
xchg
and
and
sbb
xchg
das
or
and
pop
xchg
in
mov
fisttpl
ds
or
and
pop
out
sub
cmp
pop
jmp
iret
rorl
aaa
daa
mov
sbb
pushl
jle
dec
xchg
cmp
or
out
call
sahf
jmp
inc
loop
push
cmpsl
int3
aas
pop
add
call
jp
or
incb
enter
scas
dec
push
es
pushf
ja
lcall
movsb
rcrb
andb
sub
push
push
in
jle
adc
test
out
mov
sub
pop
or
xor
rorl
push
ljmp
push
cmc
cmp
jmp
mov
lar
xchg
das
inc
sub
inc
pop
fidivs
sbb
addr16
out
mov
in
pop
cld
jne
cmpb
xchg
push
pop
push
xor
mov
scas
cwtl
in
or
dec
push
out
push
fstl
mov
mov
movsb
adc
aas
and
push
mov
xor
repnz
add
adcl
sbb
sbb
stc
pop
xchg
sub
incb
xchg
pop
cwtl
insl
mov
xchg
and
cltd
mov
movsl
jae
shrb
daa
stc
pusha
xchg
daa
cmc
sbb
xchg
test
mov
int
fdivrl
add
dec
xchg
fimuls
dec
inc
sbb
jmp
loope
mov
push
mov
les
aas
inc
push
sub
cmp
adc
xor
and
cmc
push
movsb
ret
inc
mov
je
lods
lea
cs
jmp
cmc
aam
pop
cmp
mov
shlb
mov
jne
lret
in
int
mov
jge
add
ret
filds
inc
adc
fisttpl
adc
mov
lret
aas
inc
repz
push
xor
mov
xor
stc
clc
in
fldt
pusha
leave
xchg
movsb
shrb
fnstenv
and
in
jmp
or
pushf
inc
shll
or
decb
int3
push
pop
push
ss
pop
inc
mov
jg
push
leave
wbinvd
cmpsb
dec
sbb
lods
xor
or
into
sbb
and
fidivl
aam
sbbb
mov
add
mov
mov
inc
daa
xor
sub
mov
pop
je
popa
cs
nop
rclb
push
mov
rclb
and
inc
div
pop
cmp
std
mov
test
aas
ror
mov
sub
imull
sahf
cmpsl
loope
loopne
jle
in
loope
lahf
aad
insb
cmpsl
sbb
int
jge
pop
dec
add
xor
nop
sbb
jecxz
inc
cltd
cmp
clc
test
rcll
xor
pop
xor
sti
mov
lock
imul
add
bound
jg
dec
lcall
rolb
push
adc
xchg
ret
sbb
ljmp
leave
mov
cmp
jge
les
or
mov
rclb
cmp
js
pop
mov
xor
pop
or
orl
test
adc
arpl
mov
cwtl
push
mov
sub
mov
call
ljmp
pusha
icebp
in
pop
cmpl
pop
xchg
cmpsl
idiv
inc
sbb
push
or
jo
push
pop
lret
xchg
aas
incl
imul
mov
jne
dec
pop
popf
test
in
loopne
popf
cmp
or
inc
stos
lcall
sub
push
mov
inc
fstpl
pop
std
cmp
jle
xor
or
popf
mov
pop
iret
fstpt
cmp
xchg
out
iret
ret
fidivs
scas
inc
fwait
out
lcall
in
js
pop
pop
insb
pushf
cmp
sbb
aam
and
dec
xchg
leave
push
sub
pop
push
sbb
pop
add
in
loope
call
jbe
pop
mov
cs
cmp
dec
cli
cmp
mov
or
add
insb
loope
insb
mov
ja
pushl
insl
call
orl
fwait
xor
pop
push
xlat
lahf
leave
push
das
das
or
leave
es
pushf
cmpsb
clc
es
inc
push
or
out
fs
inc
test
add
js
ss
push
push
and
mov
test
iret
mov
and
loop
lods
les
pop
and
loopne
fwait
or
push
icebp
adc
sub
in
mov
sbb
adc
gs
ds
jle
jmp
icebp
push
es
aam
out
fsts
xor
ret
fdivrl
adc
jecxz
insl
sarb
and
mov
inc
loopne
add
jae
adc
or
or
xchg
dec
fiaddl
dec
fsubrl
push
in
pop
inc
or
and
cld
notb
int
jle
das
out
and
iret
int3
imul
mov
pop
shll
inc
mov
pop
jbe
int
pusha
mov
bound
add
insb
lds
scas
push
in
in
pop
push
ljmp
ret
xor
cld
hlt
ret
dec
cli
es
jnp
ja
jmp
test
dec
inc
sbb
loope
pop
imul
icebp
les
dec
pop
sbb
shlb
cmp
sub
mov
push
mov
pushf
cmp
filds
daa
mov
test
nop
or
std
sbb
out
lea
pop
sbb
sub
xchg
xor
orl
rorb
pop
mov
test
mov
call
dec
or
imul
xor
push
jo
lds
mov
insb
adc
divl
sbb
xchg
out
jp
sub
scas
in
mov
add
jb
lret
inc
mov
aad
cmp
iret
sbb
cmpsl
ja
or
call
jmp
loope
scas
and
push
sub
and
dec
ss
lret
xchg
movsl
sub
sub
sub
mov
cs
xor
das
mov
stos
clc
lret
pop
cmp
or
or
test
cmc
movsb
das
movsl
pop
push
lret
incl
pop
sub
std
push
adc
das
cmp
pop
dec
out
cmpsb
dec
sub
cmp
inc
fstps
push
loop
jns
inc
add
stc
cmp
ds
mov
ja
sahf
push
ja
jbe
sub
xor
cs
jo
ja
repnz
and
stc
jns
arpl
stos
movsl
sti
mov
xchg
push
push
shlb
add
nop
lock
pcmpgtw
out
pop
cli
xchg
add
cmp
sbb
lret
push
or
sub
mov
pop
cmp
lods
cmp
sub
xchg
cmp
xchg
adc
xchg
add
lds
stos
scas
sub
dec
loope
mov
inc
fcompl
or
rcl
fcoms
divb
adc
fadds
lahf
into
and
xor
pop
inc
repz
pop
xlat
stos
push
fsts
fst
in
pusha
inc
in
inc
sbb
or
cs
subb
into
dec
mov
xrelease
push
les
adc
mul
clc
and
mov
repnz
leave
xchg
fucomip
movsb
dec
aaa
scas
add
pop
mov
out
mov
xor
imul
or
cli
xchg
sbb
jno
sbb
sbb
sti
movsb
push
call
negb
sbb
mov
and
or
lret
in
iret
addb
sbb
xorb
sbb
rcr
cmpl
cmp
out
pop
push
dec
imul
jle
or
cmp
and
test
cld
mov
push
mov
jmp
lahf
push
or
xchg
into
sahf
fld
push
fcoms
fnstcw
dec
pop
xor
cs
idivl
sbb
lret
xor
ret
xor
xchg
push
xor
mov
push
add
aaa
aaa
dec
push
mov
inc
addr16
in
inc
outsl
rcll
adc
mov
xchg
subl
and
ss
push
inc
and
sbb
mov
loope
pop
mov
jmp
gs
sbb
rsm
popf
fnop
push
cmp
cmp
fst
dec
mov
mov
fs
mov
fs
mov
sarb
and
insb
pushf
pop
xor
out
add
fsubrl
lock
inc
adc
pop
pusha
out
inc
in
mov
push
ja
jle
popa
fcomps
push
or
mov
mov
inc
cs
out
ljmp
pop
xor
stc
cmc
or
sarl
add
out
arpl
jmp
fs
rcr
mov
cld
add
imul
int3
pop
out
add
or
push
out
out
data16
xchg
mov
cmp
pop
push
push
insl
pusha
xor
cmp
hlt
imul
inc
in
dec
mov
test
ret
ljmp
es
daa
or
xor
pop
dec
mov
adc
jmp
push
shrb
push
nop
xchg
imul
gs
add
cld
sbb
es
outsl
and
loopne
xor
mov
lcall
jae
mov
cmp
add
mov
xor
fildll
outsb
fldcw
repnz
in
popl
bnd
dec
out
pop
xchg
cmpsl
std
pop
dec
mov
jb
and
scas
push
les
aas
xor
add
aas
dec
pop
mov
aad
ss
cmpsb
test
fildl
lcall
jnp
aaa
mov
cmp
cltd
imul
xchg
add
lcall
rolb
clc
xor
aaa
push
jg
jo
jle
lahf
push
ret
clc
sbb
push
leave
inc
xchg
dec
and
mov
mov
jle
cld
dec
fisubs
and
sub
testb
push
movsl
outsl
sub
push
cmp
lret
jb
adc
or
mov
and
xor
stc
jmp
sub
hlt
arpl
mov
push
div
jge
and
push
and
int
in
mov
stc
data16
int
arpl
jle
or
test
sub
dec
xor
xchg
inc
movsb
sbb
js
inc
fmull
lock
sub
cs
in
inc
outsl
push
lock
lds
subb
test
dec
add
mov
push
sub
cmc
lods
fcoml
lods
std
pop
jp
sbb
xor
jmp
dec
dec
fwait
ret
mov
fcmovnbe
mov
pop
xchg
int3
insl
inc
push
lods
ja
arpl
xchg
dec
xchg
cmp
xchg
sti
push
sub
jno
cs
xlat
sbb
fcompl
push
sbb
adc
xor
aad
or
inc
int
rorb
mov
inc
and
inc
out
loope
fwait
out
insb
inc
and
mov
icebp
data16
xlat
ror
jno
mov
sub
push
dec
testb
in
jp
movsb
xchg
cmp
pop
sbb
lahf
inc
mov
inc
ja
jmp
pop
inc
in
je
ss
ret
adc
mov
test
cmp
sbbb
aam
and
leave
lret
rorb
ja
sbb
xor
cmpl
pop
imulb
push
aas
and
cmpsl
push
sbb
fstl
dec
rolb
out
push
push
shll
scas
repnz
fisttpl
mov
out
movsl
sub
pop
and
sti
and
in
shl
mov
and
pop
mov
mov
mov
das
lods
repnz
jl
iret
lods
xchg
xor
nop
aaa
jp
pop
out
sahf
aaa
and
insl
sub
aas
fs
push
movsb
sbb
sub
cli
dec
push
adc
insl
inc
les
dec
aad
faddl
decb
scas
xchg
cmp
mov
ljmp
jmp
int3
cs
pop
in
les
sbb
add
sub
adc
fs
scas
dec
jmp
mov
adc
nop
cmpb
push
dec
or
jle
or
xchg
ljmp
jecxz
insb
jecxz
sub
sahf
ret
sub
xor
lock
dec
out
dec
adc
sbb
mov
repnz
cmp
fsubrp
fiadds
adcl
sahf
cmpsb
xor
insb
mov
cmpsb
mov
and
or
cmc
ds
xchg
out
fsubrs
lea
cmpsb
jecxz
orl
cvtps2pi
push
lcall
adc
fsubl
push
bound
mov
inc
inc
cmp
and
imul
adcb
and
jge
push
dec
inc
push
stc
imul
jl
mov
decl
ret
adc
call
push
and
aas
xlat
xchg
sub
sub
orl
pop
adc
jmp
push
sbb
aam
fsubl
aam
filds
inc
aad
sbb
ja
xchg
repnz
mov
arpl
das
pop
and
xchg
dec
pop
add
jns
mul
test
add
sbb
add
inc
setne
add
pop
mov
cmp
addb
int
pop
lahf
fwait
or
and
filds
push
sub
ss
lahf
adc
cmpsl
dec
inc
frstor
xchg
fsubr
loope
inc
js
fcoms
add
sbb
test
sub
jne
mov
xor
and
inc
mov
addr16
repnz
mov
wrmsr
aaa
push
repnz
jae
inc
sub
adc
and
daa
lahf
mov
jo
loop
xor
stos
add
cmp
xchg
in
mov
outsb
aaa
mov
mov
add
addr16
or
sub
inc
jno
mov
movsb
add
cltd
aam
fnstsw
jmp
xchg
cs
inc
xchg
dec
arpl
jge
das
mov
sbbb
xchg
and
sub
inc
adc
jp
sub
sti
mov
xchg
int3
jmp
scas
lock
es
sub
loope
inc
imul
out
movsb
xchg
loope
loope
ljmp
jle
push
mov
sbb
mov
test
cmp
push
push
sub
inc
or
rcrb
popa
cmc
dec
adc
pop
sar
sbb
add
xor
mov
scas
scas
rcrb
mov
les
out
mulb
xor
fwait
das
jg
aaa
inc
gs
movsl
inc
loopne
xor
repz
xor
std
fdivs
dec
cmp
std
rcrl
orl
xor
xchg
fidivl
xor
jo
aam
sub
sub
sbb
ds
sbb
mov
add
fwait
xor
test
popf
adc
cmp
jg
sbb
mov
and
pop
divb
inc
push
adc
shl
xor
and
sub
nop
js
aad
sub
add
mov
cmpsb
sub
jmp
ss
lahf
adc
lret
cmp
sub
aaa
inc
mov
sub
xchg
sub
mov
out
lods
or
scas
dec
movsb
push
lret
mov
loope
and
cmpsl
movsb
xor
ret
popf
jecxz
cmp
call
out
test
xor
xor
adc
cs
sarl
push
xor
pop
or
push
aam
jnp
jnp
inc
adc
cmp
pusha
arpl
stos
repz
imul
arpl
sti
inc
fnstcw
std
rcll
loop
cmp
out
xchg
test
mov
pop
popf
rclb
mov
lret
cmc
xor
daa
sarl
push
shlb
pushf
inc
cli
int
je
icebp
or
sbbl
dec
in
lret
jo
xchg
sbb
xchg
push
cmp
jle
sub
cld
push
and
mov
pop
into
je
jg
xor
mov
popf
out
ret
cmp
cli
cmp
jbe
or
jecxz
lea
clc
push
adc
sbb
push
rclb
cmpl
jmp
push
fucom
jmp
cmpsb
mov
sub
imul
jl
data16
or
mov
cwtl
bound
jle
test
fwait
test
push
xchg
mov
dec
push
jno
jle
adc
fwait
arpl
mov
les
nop
pop
sub
sub
adc
and
or
fdivl
pushf
fcmovu
loop
jecxz
sub
nop
aam
pop
xchg
jb
xchg
or
add
mov
sbbb
jl
ret
add
sbbl
adc
dec
ret
push
cmp
and
add
inc
sbbb
into
jp
pop
js
lds
shl
mov
inc
cmp
loop
lret
xchg
xchg
mov
lret
or
add
fistl
dec
out
lods
bsf
mov
clc
sbb
mov
inc
aas
push
mov
push
or
mov
lds
sbb
cs
mov
cmp
mov
sbb
xchg
jmp
jb
cs
popa
xor
adc
pusha
or
cwtl
inc
iret
in
inc
dec
xor
push
or
pop
sub
out
movsl
roll
mov
out
in
inc
sub
dec
jg
xor
push
repnz
stc
xor
xor
or
lock
shl
idivb
dec
repnz
fstl
push
sub
sar
and
inc
jg
adc
sub
rolb
lds
outsb
sti
jp
enter
jae
aad
xor
mov
je
xchg
std
lret
repz
sub
jne
xchg
push
hlt
and
aam
mov
xchg
jp
xor
xchg
in
or
xor
les
inc
pop
jne
mov
movsb
lcall
popf
daa
popa
aaa
cmp
dec
inc
pop
mov
mov
mov
or
mov
mov
jno
inc
dec
stc
jbe
xor
dec
mov
ds
fidivrs
add
push
inc
cmpsb
filds
cmp
fiadds
mov
ss
clc
jo
jl
push
cld
inc
xchg
jge
into
pop
adc
addr16
push
cmp
xor
adc
cld
mov
jp
lock
sbb
push
sub
sbb
sbb
gs
ret
inc
in
sub
imul
inc
adc
test
fwait
mov
sahf
aas
sub
jne
xchg
dec
aaa
push
pop
dec
sbbl
into
sbb
xchg
xchg
dec
icebp
mov
cbtw
jbe
push
out
mov
push
add
shr
sub
dec
sti
out
dec
sbb
fwait
test
lods
sbb
out
mov
out
sti
das
xchg
mov
sti
lea
cmp
test
sbb
add
xchg
push
fnstenv
mov
jmp
push
cs
adc
mov
push
into
or
loope
std
sarb
add
out
fs
xchg
jbe
inc
push
and
and
or
jmp
and
insb
mov
mov
cmp
ja
jg
jbe
adc
xorb
ljmp
pop
lods
push
outsl
scas
aaa
aaa
xor
outsb
test
inc
arpl
std
inc
xor
lret
adc
xor
std
cld
loope
mov
addr16
jae
sbb
sbb
jno
lret
mov
mov
aas
push
nop
sbb
sub
jle
jno
xchg
xchg
cmp
add
fsubp
pop
testb
sbb
mov
push
xor
ss
xlat
sbb
inc
call
shld
dec
aas
into
mov
out
imul
xchg
rcl
jl
mov
aas
mov
xchg
sub
rorb
cmc
out
and
dec
adc
cs
lods
push
aad
scas
xchg
xchg
add
loope
and
test
pop
movsb
bnd
es
lret
adc
in
shr
ret
les
add
cmp
es
add
cld
pop
hlt
dec
je
movl
incb
int
xchg
lret
pusha
lcall
das
mov
scas
push
test
push
orb
dec
pop
jne
outsl
mov
inc
add
out
ret
ret
out
cmpsb
gs
ret
in
lret
ja
pop
cmpsl
adc
ljmp
fwait
jle
inc
pop
or
push
ss
gs
inc
ret
into
cmpsb
imul
mov
xchg
lret
adc
ffree
ret
subb
dec
xchg
xor
fisubs
addr16
cltd
pop
popa
push
nop
xor
pop
pusha
jmp
push
or
sbb
loope
and
jno
clc
lock
sub
and
push
adc
ljmp
push
mov
mov
adc
or
addl
xchg
push
test
add
int
jl
into
mov
pop
mov
jle
cmpsl
xorb
out
mov
imul
dec
dec
sub
lahf
sarl
adc
push
dec
adcl
lahf
xor
lcall
sbb
sbb
push
push
and
shll
shll
dec
or
jmp
test
mov
sahf
pop
add
andb
inc
loop
popa
loope
outsb
movsl
mov
scas
push
push
lods
iret
lds
and
push
out
leave
andb
cmp
into
and
lods
fsub
pop
adc
cmp
fsubl
std
je
adc
lcall
notl
xchg
adcb
mov
adc
daa
int
xor
push
scas
icebp
xor
repz
sbb
shrl
lds
mov
xchg
mov
lods
cs
add
das
cmpsl
scas
js
fsubp
dec
mov
xlat
fisubrl
mov
push
add
sub
and
xchg
xorb
push
outsb
subl
setnp
pop
pop
mov
rcl
lahf
jbe
adc
or
and
adc
sti
add
xorb
mov
push
leave
mov
jmp
pop
inc
leave
stc
loope
mov
jecxz
loop
out
hlt
cli
bound
xchg
nop
mov
daa
add
cmp
jmp
adc
and
stos
addr16
jmp
lods
or
lcall
psrlw
movsb
stos
mov
cmp
cli
ror
loope
push
ret
les
int
jns
cmp
mov
loopne
adc
jb
fwait
adc
lea
ret
jmp
push
mov
or
movsl
rcrb
push
push
test
jmp
and
and
push
add
push
inc
ljmp
mov
stos
test
and
ffree
out
das
xor
xchg
jae
jge
aad
inc
test
ret
cmp
cmpsb
in
or
push
testb
js
jge
fldl
inc
shll
xchg
pop
xor
xchg
add
out
mov
clc
pop
mov
push
sysret
sarl
xchg
jmp
aam
int
xchg
fdiv
lea
repnz
inc
jg
ja
push
ds
and
xchg
or
mov
add
data16
test
dec
repz
jnp
mov
lcall
mov
iretw
jns
jae
lea
dec
xchg
jae
mov
shll
xlat
xchg
push
mov
leave
pop
outsl
pop
lret
mov
xor
push
std
ljmp
adc
xchg
and
jns
pop
cs
xor
popa
scas
cld
push
adc
mov
cmp
mov
in
mov
inc
sub
adc
sbb
out
dec
aad
or
inc
cwtl
ret
ljmp
lret
jmp
out
dec
pop
movups
inc
test
jl
xchg
sbb
rorl
std
mov
jp
mov
inc
js
adc
int
icebp
fdivrp
jns
push
pop
subl
sbb
dec
fwait
adc
fisttps
lret
push
add
xchg
mov
data16
hlt
lock
cmp
cltd
mov
mov
ds
lcall
into
mov
fstps
adc
push
into
movsl
xchg
mov
clc
mov
aas
sub
sub
popa
outsl
pop
jg
sarl
ljmp
aas
cli
.byte
.byte
