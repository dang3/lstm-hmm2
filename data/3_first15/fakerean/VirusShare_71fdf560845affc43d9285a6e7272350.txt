imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
gs
xor
fs
insb
add
add
outsb
push
jb
arpl
jae
add
push
gs
gs
jae
dec
jne
gs
add
inc
gs
outsl
imul
jbe
push
je
imul
add
outsb
inc
jbe
outsb
je
add
add
gs
je
inc
imul
jns
add
add
jne
push
jns
je
insl
inc
outsl
dec
inc
add
add
popa
fs
outsl
outsb
jae
insb
gs
add
add
gs
je
inc
imul
jns
js
add
add
je
imul
jo
push
add
add
je
push
popa
je
dec
popa
insl
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
outsl
arpl
jae
xor
js
add
add
gs
xor
dec
gs
add
add
popa
jo
imul
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
imul
push
popa
ja
outsb
jo
je
gs
arpl
add
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
je
insb
imul
je
add
dec
jae
imul
jae
popa
addr16
add
add
gs
je
push
imul
popa
je
outsl
outsb
push
add
add
je
arpl
push
dec
outsb
jo
je
add
inc
gs
outsb
arpl
je
jb
add
inc
gs
popa
ja
outsb
jo
je
gs
arpl
outsb
outsw
inc
add
add
popa
jb
gs
inc
js
add
add
jae
push
push
dec
gs
popa
addr16
add
add
popa
jb
jo
gs
jne
inc
add
add
je
imul
outsb
inc
outsl
js
add
inc
outsl
jo
dec
insl
popa
add
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
outsb
imul
push
outsl
imul
outsl
jo
dec
insl
popa
add
add
push
imul
outsl
arpl
add
dec
jae
imul
jae
popa
add
add
je
imul
add
popa
jb
gs
inc
js
add
add
je
imul
jb
popa
fs
jb
arpl
jae
add
add
je
arpl
push
dec
outsb
jo
je
add
inc
outsb
jne
inc
imul
gs
arpl
inc
add
add
push
imul
add
add
je
insb
popa
jae
push
outsl
jb
add
add
insb
insb
push
imul
outsl
arpl
add
dec
outsl
outsb
imul
push
imul
add
jb
imul
popa
jae
inc
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
jb
arpl
jae
gs
jne
je
popa
jns
jne
add
add
ja
gs
inc
js
add
les
inc
xor
lea
mov
dec
dec
dec
dec
and
lea
movswl
inc
inc
inc
call
call
call
inc
xor
lea
mov
call
inc
dec
inc
inc
or
lea
imul
dec
call
call
dec
push
inc
call
dec
or
call
lea
mov
inc
add
add
dec
sub
lea
pop
add
dec
dec
add
inc
pop
or
lea
pop
mov
sub
dec
inc
pop
dec
xor
lea
imul
dec
dec
inc
inc
pop
add
lea
pop
mov
dec
mov
inc
add
call
dec
or
lea
mov
ret
inc
dec
push
add
inc
push
add
lea
push
mov
inc
push
dec
add
push
dec
sub
mov
lea
mov
push
inc
ret
push
sub
dec
dec
and
lea
mov
dec
sub
sub
dec
sub
lea
mov
inc
inc
inc
dec
add
lea
mov
add
add
add
dec
or
lea
sub
dec
sub
inc
add
lea
mov
jmp
and
add
xor
add
inc
adc
add
add
adc
add
add
mov
add
fwait
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
bound
add
jne
add
mov
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
popa
adc
add
add
jg
add
lea
add
test
add
mov
adc
add
adc
add
adc
add
add
sbb
add
sub
add
inc
adc
add
add
xor
movzbl
lea
movsbl
add
add
dec
and
inc
dec
movzbl
sub
lea
xor
mov
sub
inc
inc
sub
inc
add
lea
movsbl
dec
inc
dec
dec
dec
jne
add
mov
lea
mov
pop
inc
inc
pop
add
dec
pop
or
lea
mov
add
add
dec
dec
add
lea
movzwl
add
add
ret
push
inc
dec
dec
add
lea
movzbl
add
sub
push
push
push
push
inc
add
or
push
lea
imul
add
dec
dec
inc
and
lea
movzbl
mov
add
push
dec
sub
xor
dec
and
push
lea
mov
push
dec
inc
pushl
add
call
sub
add
xor
lea
mov
inc
add
inc
add
pop
ret
lea
sub
inc
dec
dec
mov
inc
or
lea
imul
add
dec
cmp
jb
inc
xor
sub
and
mov
lea
movswl
mov
inc
inc
inc
dec
inc
add
lea
mov
dec
mov
sub
dec
cmp
jb
inc
mov
and
lea
xor
mov
inc
xor
dec
add
pop
dec
and
test
jbe
lea
mov
dec
inc
inc
sub
add
lea
mov
dec
dec
inc
inc
add
lea
imul
inc
inc
inc
inc
inc
and
lea
movsbl
and
dec
dec
mov
dec
inc
movzbl
sub
lea
add
mov
inc
and
inc
inc
mov
inc
xor
mov
lea
mov
add
add
mov
inc
inc
and
lea
mov
add
dec
jne
dec
mov
dec
add
add
lea
mov
add
inc
inc
inc
and
mov
lea
mov
sub
dec
dec
dec
add
lea
mov
mov
inc
test
jbe
dec
add
inc
xor
lea
mov
inc
dec
add
inc
add
lea
movsbl
sub
dec
inc
dec
inc
xor
lea
mov
sub
and
add
dec
mov
sub
sub
movzbl
lea
imul
add
inc
dec
and
inc
inc
mov
sub
lea
movzbl
mov
inc
mov
add
inc
mov
dec
jmp
inc
inc
dec
inc
sub
lea
mov
inc
dec
dec
inc
sub
lea
mov
pop
ret
push
inc
sub
inc
add
sub
lea
mov
dec
sub
sub
sub
dec
xor
lea
movsbl
dec
inc
add
add
and
lea
movsbl
inc
inc
sub
inc
xor
lea
mov
dec
add
add
add
or
push
lea
mov
push
inc
call
sub
push
add
inc
pop
add
lea
mov
movswl
add
push
inc
dec
pop
inc
sub
and
lea
mov
sub
dec
cmp
je
dec
int3
inc
and
lea
mov
add
add
inc
inc
or
lea
movzwl
dec
inc
inc
dec
or
lea
movswl
sub
dec
sub
sub
add
lea
ret
mov
add
pop
inc
ret
push
inc
push
sub
or
push
lea
push
imul
push
add
inc
push
inc
add
or
lea
imul
call
inc
push
inc
inc
inc
mov
or
mov
lea
mov
mov
add
sub
test
je
add
inc
or
lea
mov
add
sub
dec
add
mov
and
jmp
lea
mov
add
inc
dec
inc
and
repnz
lea
movzwl
add
inc
jmp
inc
inc
dec
add
lea
imul
inc
add
add
inc
xor
lea
pop
pop
ret
push
imul
dec
inc
dec
dec
or
lea
imul
dec
dec
dec
inc
and
lea
mov
add
dec
dec
inc
or
lea
mov
inc
inc
dec
sub
add
lea
pop
ret
sub
mov
mov
add
inc
mov
dec
add
mov
xor
lea
mov
mov
inc
xor
dec
dec
mov
inc
and
inc
lea
movsbl
add
inc
inc
inc
cmp
jb
and
push
lea
mov
push
add
inc
push
inc
inc
mov
and
lea
xor
mov
inc
xor
inc
add
xor
add
xor
push
lea
movzwl
xor
dec
add
mov
dec
inc
mov
or
lea
movzbl
dec
dec
inc
add
add
add
add
lea
movzbl
movzbl
inc
dec
inc
add
sub
jmp
sub
mov
mov
insl
sub
test
sub
sub
jo
fsubl
cli
shll
aaa
bound
or
jg
mov
nop
adc
stos
or
push
cmp
mov
outsl
push
push
lret
cli
mov
cmpsl
sub
sub
sbb
leave
xor
and
add
loop
aaa
aad
xlat
jl
pop
xor
aas
sahf
pop
xchg
insl
mov
aas
or
jne
icebp
xor
jl
xchg
adc
push
out
sahf
popa
mov
aas
ret
lcall
mov
mov
or
out
sbb
sbb
or
mov
jg
xchg
in
icebp
lods
pusha
mov
adc
sbb
addr16
pop
ljmp
sbb
add
sahf
lea
fstps
imul
and
cmp
sub
add
jnp
sbb
mov
inc
dec
lret
cmp
dec
in
adc
test
and
into
mov
lcall
jecxz
pop
in
lahf
arpl
ljmp
andb
push
mov
pop
divl
mov
dec
lret
cld
int
insb
jl
aaa
test
mov
into
xor
ss
inc
shlb
pop
push
pop
repnz
shll
adc
ret
lods
insb
loopne
push
sub
pushl
sub
orb
fsub
mov
pop
jg
xchg
xor
mov
lret
test
iret
sub
fsubrp
xchg
push
cmpsb
leave
or
lret
movsl
pop
lcall
push
inc
sbb
stos
mov
stc
pop
enter
mov
mov
rolb
inc
fcomps
jmp
in
or
fstp
fnsave
jne
outsb
jae
mov
scas
popf
sub
mov
inc
mov
gs
mov
flds
jbe
push
mov
fsts
jns
mov
in
pop
test
pop
jbe
adc
incl
negl
sbb
add
inc
xchg
mov
cmp
push
leave
mov
subl
imul
mov
push
cmp
rclb
das
repz
int3
aad
roll
inc
push
xchg
out
in
xchg
jle
sbb
pop
add
pop
insl
mov
insb
mov
jo
cmp
icebp
xchg
push
ja
inc
outsb
xchg
outsl
into
xor
xlat
mov
out
pushf
cmp
loop
outsb
aaa
loopne
xchg
mov
jae
in
rcrb
mov
add
pop
cmp
in
or
sti
data16
adc
push
and
test
std
mov
cmp
push
xor
pop
push
call
ffreep
xchg
add
stc
fdivrs
add
mov
jns
fisubl
repnz
lahf
pop
mov
lds
in
push
pop
adc
mov
xchg
jl
pop
add
notl
leave
xor
inc
dec
add
inc
das
lahf
xor
dec
fs
enter
popf
int
xlat
and
adc
push
pop
fmull
iret
movsb
mov
jle
ret
sbb
jno
cmc
push
adc
adc
aaa
sti
rol
mov
arpl
sbb
and
scas
dec
mov
lods
add
jae
or
adcb
popa
sub
sbb
cmp
lods
mov
push
fs
mov
popf
dec
mov
xchg
ljmp
jo
adc
jle
jbe
or
insl
cmpsl
push
gs
out
scas
hlt
outsb
dec
in
cmp
push
hlt
push
xor
test
xor
mov
mov
mov
adc
jb
ljmp
push
fidivrs
jb
leave
xchg
std
outsl
sti
fcmovb
sub
stc
inc
inc
xor
xor
add
mov
ljmp
out
push
jmp
or
inc
inc
outsb
test
rclb
imul
jge
and
fwait
icebp
push
arpl
xor
mov
fs
fdivs
sti
sbb
and
pop
xor
stos
es
movb
push
pop
insb
push
cltd
jb
pop
fbstp
int
std
adc
sub
in
jbe
mov
addl
adc
add
enter
outsb
and
pop
inc
mov
sti
adc
arpl
and
inc
add
add
orl
xchg
ret
jne
push
adc
jne
or
sbb
cmp
fbld
dec
scas
rol
jle
sti
popf
mov
mov
and
mov
pop
stc
lret
jp
add
mov
cmpsl
mov
lcall
push
xchg
test
test
test
push
aam
scas
push
stc
scas
push
xorb
sbb
ret
jp
xchg
les
mov
cs
inc
loop
fs
fs
adc
sub
sbb
aam
outsb
lock
xor
adc
imulb
sbb
mov
xchg
push
pop
adc
pop
push
les
adc
fdiv
pop
leave
jecxz
imul
ljmp
xchg
xchg
pop
inc
wrmsr
lock
scas
outsl
mov
dec
lods
imul
jb
out
push
in
and
scas
sbb
aam
test
imul
pop
xchg
pop
cld
xchg
ret
push
sub
mov
push
gs
in
sub
stos
lahf
pop
leave
fstpl
dec
loope
jl
insl
inc
inc
enter
pop
aam
insb
scas
cmp
jne
subl
or
cmc
orb
dec
and
insb
mov
out
xchg
and
jge
cmpsb
rcrb
mov
and
cmp
mov
inc
dec
fisubs
cmp
cwtl
mov
fnstenv
push
mov
dec
shr
pop
stos
test
mov
xchg
jb
outsb
movsb
mov
andl
pop
pop
scas
notb
enter
pop
and
dec
cmc
daa
pop
fmuls
testl
call
xor
pop
dec
jle
leave
sbb
insb
int
inc
adc
adc
dec
jg
stc
push
or
jmp
cltd
gs
dec
movsl
loopne
mov
push
mov
das
neg
xor
cs
js
rorl
scas
sahf
cmc
inc
adc
and
ret
filds
leave
out
pop
add
xchg
int3
std
or
xor
inc
adc
pop
cmp
mov
sub
mov
pop
pop
mov
dec
push
paddsb
arpl
push
and
sub
xorb
ret
dec
mov
shl
or
and
mov
dec
cmp
or
aad
xadd
shlb
push
adc
out
mov
mov
out
mov
push
sub
xchg
xlat
addl
mov
mov
mov
popf
push
pop
int3
daa
xchg
xor
shll
cmpsl
inc
xor
mov
pop
ss
fnstenv
mov
dec
and
pop
sti
shrl
push
mov
push
fmuls
mov
mov
mov
xchg
xchg
mov
mov
and
xchg
mov
adc
add
dec
jae
or
xor
mov
push
mov
imul
sbb
mov
cmc
sub
sbb
mov
arpl
cmc
or
xor
in
jbe
clc
pop
jne
mov
dec
adc
mov
mov
inc
xor
rorl
xor
mov
stos
out
call
ret
aad
pop
ss
mov
test
jbe
or
fcom
mov
repnz
mov
jae
push
les
xchg
addr16
push
inc
icebp
adc
mov
sbb
inc
pshufw
push
xchg
icebp
insb
push
xor
bound
nop
cli
mov
inc
neg
add
pop
push
mov
mov
sub
push
nop
and
push
mov
xchg
pusha
iret
test
fwait
inc
js
cld
cmpsb
mov
pusha
test
sti
lock
push
fwait
cmp
dec
fs
jo
and
xor
push
xor
mov
push
shlb
add
add
sub
push
add
mov
adc
xor
icebp
add
test
mov
sbb
push
mov
cmp
rcl
rolb
sti
push
sbb
mov
pop
jecxz
sti
outsb
cmp
fisttps
popa
cmp
adc
fmulp
pusha
fnstenv
cmp
xchg
fwait
adc
push
ljmp
loopne
dec
dec
sbbb
rcll
jne
out
jns
xorb
jmp
loopne
mov
movsb
xchg
in
push
dec
or
inc
cmp
or
icebp
subl
inc
sub
jge
jnp
mov
add
add
js
test
pusha
orb
adc
into
push
jmp
outsl
mov
aas
push
fsubrl
test
cmp
movsb
aaa
into
test
nop
or
jle
and
ret
xor
and
stc
mov
orb
dec
sbb
lcall
mov
and
xchg
and
mov
sbb
adcl
aad
add
sub
ds
shll
sbb
cmp
inc
adc
inc
xchg
mov
loopne
lret
stos
ljmp
lcall
jns
imul
push
ret
fldl
push
jns
lods
cmpsb
cs
jmp
repnz
frstor
cmp
int
lret
aas
xchg
gs
mov
scas
in
jb
xor
test
filds
in
test
js
gs
cmp
mov
repnz
cmc
fucomp
xchg
inc
adc
outsb
push
aas
mov
cwtl
add
sahf
push
stos
movsb
mov
shl
pop
shlb
sbb
test
cmpsl
lods
out
sbb
pop
in
mul
aaa
je
mov
cmp
add
jl
aad
sbb
je
xchg
adc
and
test
mov
xchg
popf
ljmp
mov
xchg
mov
out
or
in
pop
arpl
mov
cmp
fwait
mov
inc
adcl
or
push
jmp
xchg
adc
setne
or
xor
mov
aam
mov
mov
or
dec
in
xor
cmp
dec
sub
jg
cmpsb
mov
mov
cmpsl
push
stc
mov
sub
lock
cld
enter
inc
cmpsl
jl
mov
jne
push
dec
dec
sbbb
pop
adc
jno
ror
push
cmp
aam
notb
loope
shl
mull
imul
push
dec
xlat
cli
push
popf
pop
lret
ret
jnp
call
test
fnsave
cmpps
mov
inc
pop
pop
mov
inc
xor
xchg
cmp
popf
cli
nop
punpckhdq
popa
push
je
push
pop
test
mov
jmp
inc
add
cmp
or
daa
test
mov
in
cmp
adc
iret
xchg
in
int3
jno
std
stos
int3
lock
arpl
stos
mov
adc
or
sbb
push
shlb
out
dec
data16
dec
dec
xchg
dec
jp
int3
jb
rcl
rorb
aad
sbb
es
sbb
jecxz
cli
jmp
mov
push
mov
aad
cwtl
shl
push
jne
mov
test
pop
jp
and
test
clc
dec
loop
mov
mov
loop
mov
and
lahf
push
sub
jmp
mov
ret
xchg
enter
jg
inc
daa
leave
call
sti
ret
sbb
xor
sub
xchg
lcall
pop
add
cmp
pop
sub
ds
mov
jns
ds
iret
loopne,pt
loopne
add
push
mov
dec
push
lock
add
xchg
jg
cmc
ljmp
xor
out
mov
in
push
movsb
sbb
popf
cli
inc
ljmp
lock
lcall
dec
or
pop
mov
cmp
xchg
pusha
stos
fistpl
pop
fdivrl
std
je
cmpl
sbb
cli
inc
push
fisubrs
pop
or
xchg
sahf
cwtl
mov
int3
hlt
scas
sub
fsts
push
call
icebp
test
push
inc
mov
pop
xchg
aaa
adc
mov
xor
xor
negl
add
shrb
clc
imul
fmul
sbb
loopne
or
icebp
sub
jb
jle
enter
pushf
loope
push
outsl
mov
in
push
in
loopne
cmpsb
lds
fldenv
call
clc
lock
pop
leave
das
jns
jle
repnz
clc
dec
or
dec
ret
popf
mov
push
mov
mov
pop
add
inc
call
mov
mov
push
and
sbb
jb
xor
int3
subb
mov
mov
sub
mov
sbb
or
int3
sti
lea
addb
sub
imul
sub
aas
jnp
cmp
jns
jg
out
mov
mov
loope
loop
add
push
rorb
outsb
dec
adc
push
ret
inc
mov
int3
sub
and
and
ret
jp
mov
ds
mov
aam
jno
push
jno
jb
loopne
mov
pop
lods
pop
dec
fdivr
js
lcall
pop
and
out
mov
cs
xor
add
push
pop
cmp
cld
or
add
cmp
popf
faddl
lods
mov
insb
bound
inc
pop
stos
dec
and
mov
jmp
mov
pusha
repz
cmc
add
das
repz
mov
adc
mov
pop
and
pop
aam
out
lock
das
push
and
sbb
loope
addl
or
xchg
popa
pop
cli
xorb
repnz
xchg
pushf
in
jno
mov
inc
xchg
fsubrl
test
cld
sahf
or
adc
sbb
mov
mov
lret
jno
cmpl
js
fsubl
inc
lret
adc
xchg
mov
testl
fmull
pop
mov
in
push
and
outsb
repz
repnz
jle
push
pop
imul
icebp
mov
pusha
sbb
dec
mov
mov
pop
mov
lret
pusha
add
sub
lods
rorl
jnp
xor
pop
int3
dec
dec
js
pop
fiadds
scas
stos
outsb
imul
mov
jle
aaa
push
lods
or
int
loope
out
mov
fisubl
add
aad
pop
mov
inc
lods
lahf
dec
jecxz
sub
hlt
xor
push
mov
hlt
jle
rcrb
daa
notb
orl
imul
sub
insb
xor
inc
pushf
jmp
jmp
loopne
fbld
iret
sbb
les
lods
pop
cmpsb
mov
xlat
dec
push
and
dec
xchg
vcmppd
shl
pop
push
loopne
jecxz
fildl
lahf
mov
int3
push
sbb
and
add
adc
jno
cli
xor
sub
in
sti
and
mov
loope
mov
cmp
dec
xor
add
scas
arpl
fcomp
cmpsl
gs
dec
mov
bound
jb
add
in
jne,pn
fistpl
inc
inc
in
test
pop
add
psubw
adcl
cmp
rcl
cli
mov
add
pop
mov
xchg
xchg
add
in
adc
push
sbb
cs
sbb
sbb
lds
and
sbb
mov
jo
lahf
inc
faddp
testl
nop
daa
mov
cmpsb
cmp
je
dec
lcall
jmp
jg
ret
xchg
add
sti
rol
lcall
jbe
hlt
in
sbb
mov
bound
ficompl
jp
fucomi
mov
movsb
enter
ret
loope
and
or
imul
inc
outsb
sarl
jnp
hlt
pop
dec
add
das
lret
push
insb
rolb
fcmovb
sub
jmp
cs
jb
sarb
mov
dec
subb
addr16
cmp
rorb
push
hlt
loope
and
lahf
enter
pop
mov
push
test
sbb
push
pop
inc
paddsw
pop
aaa
insl
xchg
stos
sbb
push
add
or
lea
std
scas
jae
bound
leave
cs
cwtl
mov
cwtl
nop
int
mov
addr16
push
sub
js
adc
in
cmp
movsl
in
clc
not
sbb
jge
and
int
dec
insb
fmull
sbb
cmc
xor
pop
add
stos
arpl
mov
jg
pop
aas
enter
and
adc
cld
fs
pop
sbb
hlt
lahf
lcall
movsl
push
shl
xorb
inc
mov
sub
in
testl
inc
cmp
fimull
and
repnz
or
lods
jae
push
adc
mov
xlat
xor
xchg
jb
mov
add
push
inc
inc
push
push
cwtl
mov
lods
inc
sbb
pop
cmpsl
dec
cmp
movsl
cmp
neg
xlat
push
jmp
jmp
in
mov
movsl
jnp
add
mov
aam
push
hlt
in
int
fdivrl
testb
in
imul
pop
test
lret
aad
dec
jge
push
outsb
les
xor
add
pusha
cmp
xchg
xchg
movsl
mov
adc
test
das
imul
dec
jnp
xchg
int
mov
push
movzwl
adc
push
adc
add
lret
cli
dec
inc
outsl
call
filds
out
je
ja
stos
orl
cmp
jno
pushf
les
subb
test
push
popf
std
pusha
addr16
cmp
ret
and
mov
xchg
out
pop
jg
out
dec
and
push
subl
cmp
aas
out
mov
mov
into
into
jno
int
jp
aam
or
in
dec
mov
mov
sahf
mov
scas
out
in
inc
test
sbb
inc
mov
mov
cltd
enter
dec
mov
call
out
repnz
stc
pop
adc
sub
sub
insl
js
lea
or
xchg
or
jbe
sbb
sbb
test
fisttpl
daa
hlt
jo
cld
cwtl
loopne
movsl
push
cmp
inc
stc
fmul
lcall
ss
imul
cmp
dec
xor
in
inc
push
rolb
mov
aas
outsb
mov
shrb
test
push
jmp
ret
les
xchg
outsl
lods
xchg
adc
mov
jnp
cmpsl
mov
cmp
xor
sub
hlt
stos
mov
push
pop
add
pop
hlt
cld
lds
js
inc
or
in
sub
pop
jne
insl
iret
in
sbbb
sahf
push
sub
ret
fnsave
or
ds
shrl
fwait
js
jp
sti
xor
xor
sbb
pop
in
gs
cli
repz
push
add
cltd
mov
nop
mov
cmpsb
cmp
test
or
fisttpll
sub
jmp
popf
jl
dec
imull
stc
outsb
adc
add
movsl
adc
in
pop
pop
cltd
and
repnz
ret
lret
jb
popf
loopne
cmp
sbb
ljmp
loopne
ljmp
call
pop
sbb
xlat
jmp
mov
cmc
or
push
push
scas
neg
add
mov
ret
stos
xchg
test
in
int
sub
add
cmp
mov
jge
pop
jo
popa
fildll
mov
adc
inc
push
sbbb
ficoml
or
fnstsw
cmpsb
cmpsb
add
gs
repnz
test
cmp
push
mov
and
movsb
mov
add
pop
sub
mov
ficompl
std
fs
pop
gs
mov
cmpsl
mov
mov
lods
adc
outsl
xchg
push
gs
and
rclb
add
out
pusha
mov
std
or
adc
mov
stos
cmpsb
cs
fisttpl
mov
cmp
xchg
cmp
adc
movsb
cmc
lods
mov
jp
stos
dec
or
cmpsb
xor
hlt
or
into
jecxz
jae
js
jne
pop
stc
or
mov
pop
mov
mov
pop
gs
in
mov
xchg
scas
sbb
pop
push
aad
into
push
insb
stc
icebp
das
mov
sbb
mov
xor
aaa
clc
push
dec
jnp
push
rorl
sahf
push
fcmovne
shrl
cmp
fdivrs
adc
ljmp
inc
dec
jb
add
rol
stc
arpl
lret
cld
psllw
xor
jecxz
adc
fwait
mov
aam
dec
stc
or
in
push
bound
aaa
push
sti
xchg
lods
in
mov
or
outsb
push
movsb
sub
jns
call
mov
xchg
icebp
mov
push
mov
mov
push
jne
fwait
push
stos
mov
cmp
mov
rcrb
lcall
inc
mulb
arpl
jl
stc
pop
enter
imul
mov
cmp
mov
xchg
jne
movntq
sahf
insb
inc
mov
shrl
add
push
pop
jo
imul
mov
jnp
call
test
aam
push
xlat
mov
outsb
or
inc
fucomi
test
xchg
adc
mov
mov
xlat
dec
mov
mov
mov
dec
imul
cmp
mov
jmp
popa
xchg
pop
dec
je
add
cltd
pop
inc
fsubl
mov
push
sbbl
or
cld
aas
test
popf
fcoms
jae
out
sbb
push
in
movsl
addb
iret
leave
inc
adc
or
movsb
mov
stos
add
push
lods
pop
mov
lret
scas
pop
div
insl
fsubl
outsl
shl
adc
push
cmp
test
cmp
mov
pop
mov
ds
push
or
cmp
push
fisubl
add
push
mov
inc
pop
dec
mov
sarb
push
and
int
ficoml
jns
adcl
cmp
cwtl
jo
xor
addr16
sti
dec
xchg
call
outsb
mov
movsb
inc
jnp
scas
or
popa
mov
es
cld
in
movsb
adc
aaa
and
adc
jg
loop
jp
adc
dec
push
lcall
jecxz
mov
mov
roll
push
push
andl
sti
ret
out
les
xor
fdivrl
xchg
inc
xor
cli
cld
inc
psrld
jb
mov
mov
pusha
mov
inc
xchg
stc
adc
lea
push
les
insb
rcrb
nop
cmpsl
jle
cmp
mov
mov
lds
hlt
mov
es
mov
mov
mov
cld
jecxz
mov
mov
shrl
mov
adc
and
ret
add
adc
outsb
push
xor
mov
jle
in
es
icebp
mov
mov
and
xchg
xor
or
and
jbe
cmpsb
cld
ljmp
mov
jno
shlb
outsb
sarl
or
mov
or
iret
mov
mov
fstl
sub
jno
push
cli
lahf
fimuls
adc
pop
jecxz
addl
les
jnp
int
insl
pop
jp
or
jp
lahf
inc
add
scas
fiaddl
insl
push
or
xor
push
adc
les
ja
scas
insl
je
daa
pusha
in
inc
add
mov
adc
loopne
fwait
dec
mov
mov
scas
mov
cld
mov
je
mov
sbb
daa
push
pop
add
adc
daa
pusha
fwait
mov
add
jnp
aaa
mov
pop
mov
mov
in
insl
adc
adc
sub
ficompl
adc
push
jl
xor
insl
pop
jnp
les
fsubp
outsb
jle
cli
loop
sahf
gs
fdivrl
sub
mov
adc
xchg
mov
int
xor
lock
fsubrl
pop
adc
iret
xor
pop
mov
clc
arpl
scas
sub
dec
ficomps
mov
sti
out
push
jno
jns
add
cmp
loope
lcall
or
jg
push
fcomps
jmp
add
ds
push
push
and
cmpsl
nop
adc
jp
jge
mov
repz
ret
loopne
scas
shrb
stc
cltd
pushl
pop
xor
test
push
pusha
push
pop
pop
cmpsl
aam
pop
push
mov
xchg
insl
sub
sbb
xchg
aam
xor
popf
push
xchg
add
sub
or
push
jb
popa
pusha
mov
enter
adc
pop
test
std
adc
in
push
pop
inc
sub
mov
jle
or
push
inc
imul
pop
pushf
mov
add
ja
inc
inc
and
iret
cmp
pushf
add
out
xchg
bnd
mov
dec
pop
or
lcall
jecxz
cmp
cmp
xchg
and
ljmp
dec
aad
or
mov
mov
test
ret
insb
mov
dec
jns
rolb
lcall
loop
sub
mov
cmc
add
add
jp
lret
lahf
shr
fidivrs
mov
cli
div
aas
sbbl
push
nop
out
or
inc
lcall
mov
push
xor
scas
aaa
stos
inc
jmp
mov
fs
lahf
xor
dec
dec
adc
mov
xor
orl
movsl
insl
xor
rorl
imul
dec
idivb
test
dec
sub
ljmp
xchg
les
repnz
lock
int3
pop
outsl
cwtl
lret
sub
mov
inc
fsubrs
jae
fstl
lahf
data16
out
jp
ret
mov
lea
xchg
sahf
cmp
mov
push
pop
or
lahf
in
or
mov
push
call
cld
aaa
in
iret
xor
pushf
cmp
xor
push
aam
dec
inc
pop
xchg
mov
repnz
mov
idivb
mov
adc
ret
push
loopne
inc
pushf
ljmp
mov
hlt
sbb
out
cmpsb
repz
push
out
lock
mov
jnp
stos
sti
xor
fsubrs
fs
or
inc
cmpsb
inc
hlt
sbb
add
pushf
jnp
jae
in
outsl
fcoml
sub
mov
outsl
loope
or
mov
pop
mov
push
pop
mov
push
push
mov
or
mov
sub
dec
fwait
scas
rclb
in
sarl
outsl
test
fwait
js
add
testb
jg
push
pop
push
shll
jmp
in
lds
dec
inc
xor
inc
jecxz
cld
adc
adc
xchg
aam
lock
fs
push
xor
inc
pop
stos
shr
sub
sti
pushf
sarl
fs
dec
mov
push
pop
xchg
js
rcrb
rorl
lcall
adc
mov
imul
push
xor
inc
mov
push
shll
mov
decb
xchg
and
dec
xchg
adc
and
cmpl
ss
aam
mov
jg
pop
cmp
sbb
or
lds
or
insl
adc
testl
jle
push
xlat
int3
add
push
push
out
stos
sbb
fiaddl
pop
roll
das
pop
cmc
and
mov
jecxz
jmp
xor
ror
mov
in
cmpb
mov
inc
loope
in
mov
mov
mov
stos
lock
push
test
push
mov
movsb
aad
push
cmp
sbb
cmpsl
clc
jne
sbb
push
lret
push
or
lds
mov
popa
insb
movsl
aas
test
loopne
ljmp
inc
sbb
out
sub
push
add
lea
inc
fwait
mov
dec
dec
dec
jno
mov
mov
cltd
push
ret
lds
dec
adc
xlat
push
or
mov
pop
in
jne
mov
xor
outsb
in
pop
loopne
lods
push
shl
rcrl
inc
xor
enter
push
jbe
mov
push
stos
sbb
cmc
aas
aas
push
scas
int
mov
sub
fstpt
sarb
leave
dec
les
pop
mov
sub
cmp
out
movsl
ss
mov
lock
mov
add
pushf
mov
mov
jge
rol
mov
sub
push
cwtl
mov
lods
in
fildl
dec
mov
sub
push
mov
call
loopne
sub
les
lock
mov
and
xchg
addr16
imul
lret
enter
mov
js
pop
add
and
xchg
int
push
fildl
pop
push
adc
add
or
repz
cmp
mov
roll
movsb
fcomip
scas
mov
mov
insl
out
push
imul
int3
inc
popf
jo
int3
xor
mov
leave
js
and
in
lea
js
out
sbb
ret
scas
rorl
subb
sahf
lods
and
out
and
cmpsb
jo
lcall
sbb
hlt
stc
fisttpl
add
insl
mulb
pusha
ljmp
leave
icebp
or
out
stos
sahf
sbb
adc
inc
xor
sbb
les
lea
add
sbbb
xor
and
adc
xchg
icebp
inc
jecxz
jnp
test
cmp
fdivr
sub
xchg
dec
popa
stc
imull
js
mov
xchg
dec
imul
or
or
push
push
dec
mov
fsubs
jns
adc
or
pop
loop
dec
decb
sbb
movsb
mov
in
adc
mov
inc
sbb
mov
bound
or
shll
push
jnp
fstpl
xchg
mov
fldl
lds
dec
ja
loope
addr16
pusha
add
into
jecxz
hlt
icebp
scas
ss
push
scas
std
pop
pop
or
and
or
icebp
es
icebp
jnp
mov
rolb
stc
or
mov
imul
sub
cmp
cmc
mov
lods
in
sub
into
int
and
ficomps
push
mov
lcall
push
outsl
call
ss
pop
adc
add
mov
andb
movsl
jle
sbb
mov
xor
stc
gs
cmp
shll
fsub
js
pop
sarl
mov
jne
or
mov
push
test
mov
sub
mov
add
and
mov
cmp
sti
dec
movsb
pop
lods
fwait
add
fsts
nop
adc
movsb
sbb
insl
call
pop
pop
sysret
push
cmp
int
xchg
cmp
in
xlat
bound
mov
in
and
ljmp
test
ss
call
sbb
adc
rcrb
push
inc
xchg
js
icebp
pop
fcoms
mov
jg
in
orb
jle
inc
mov
or
shl
jmp
lret
and
push
aas
insl
fcomps
dec
in
clc
test
adc
push
dec
fsubrs
pop
addr16
sub
mov
inc
mov
inc
sub
test
mov
and
pop
lea
sbb
mov
mov
fs
pushf
pop
ret
dec
xor
inc
int
mov
push
jmp
mov
outsb
push
test
mov
addr16
std
mov
add
mov
mov
xor
ljmp
push
int3
je
adc
mov
int3
ja
fwait
loop
cmc
xor
mov
push
clc
clc
cwtl
dec
cmp
or
push
mov
add
js
iret
repz
and
mov
xchg
xchg
mov
fwait
push
lods
jns
jge
pop
aad
mov
inc
lret
cld
mov
stos
and
into
and
insb
lahf
sub
arpl
inc
add
mov
iret
je
es
aam
dec
pop
inc
dec
enter
push
aaa
testb
inc
sub
adc
dec
repz
push
or
jge
movsb
stc
push
mov
out
pop
movsb
cmp
shlb
mov
sbb
das
ljmp
dec
inc
jmp
sub
adc
popf
cs
xchg
lock
pop
add
jns
push
pop
push
fmuls
pop
xor
inc
push
cmp
repz
enter
testl
mov
adc
loop
jge
ljmp
mov
mov
jae,pt
sub
jl
sub
lahf
bound
jmp
call
inc
jbe
xchg
lret
mov
ss
lods
mov
sbb
adc
adc
pusha
ds
push
cmp
sbb
andb
outsl
enter
pop
mov
push
sbb
cmp
les
sbbl
stc
test
imul
mov
pop
stos
scas
aad
xchg
fidivs
cmp
std
mov
sbb
int3
push
iret
aas
pop
jnp
loopne
notl
lods
les
ss
stos
jo
sbb
stos
filds
enter
loop
ds
xor
fnstcw
pop
jecxz
and
or
lahf
jg
pop
popf
mov
repz
xor
repnz
pusha
lcall
shll
fdivrl
xor
hlt
iret
popa
inc
cmp
outsb
cmp
and
ss
inc
iret
in
mov
mov
xor
sub
push
dec
int3
jmp
jle
stos
mov
addr16
add
pop
sahf
push
inc
sbb
inc
mov
dec
jmp
cmpsb
mov
mov
enter
xor
insb
add
xchg
dec
mov
or
mov
mov
inc
ds
sub
mulb
enter
jle
aas
fdivrs
leave
int3
arpl
pop
inc
push
out
xchg
repnz
fcoml
inc
push
fwait
loope
int
mov
daa
arpl
cli
pop
outsl
adc
xchg
stos
mov
xchg
cmp
ret
push
jo
pop
dec
xchg
pusha
mov
mov
push
ret
mov
push
jge
xchg
in
push
ret
in
rcl
dec
cmpsl
cld
mov
jns
insb
adc
cmp
or
adc
mov
int
xor
mov
dec
cmpsb
inc
pusha
mov
arpl
and
outsl
mov
jae
and
cmp
stos
jg
sub
and
lret
out
mov
aad
pop
dec
pop
xchg
jo
adc
je
std
cmp
mov
cmc
out
mov
lods
roll
adc
les
shlb
mov
pop
push
jbe
movl
shld
sbb
sti
xor
div
jne
mov
fstps
movsb
and
fsts
and
mov
or
js
shlb
inc
mov
add
clc
stc
lods
ror
pop
hlt
or
jp
pushf
sahf
push
or
mov
inc
push
fnsave
jl
mov
inc
dec
arpl
insl
sbb
sbb
mov
mov
ficoml
push
and
call
xor
adc
cmp
mov
cmp
pop
imulb
mov
jp
adc
fmuls
shlb
cmc
sti
daa
aaa
xchg
outsl
inc
dec
add
out
mov
sbb
sub
fcomps
fwait
push
stos
popf
fsubs
fimuls
lahf
loope
fdivl
cld
mov
mov
jb
add
scas
fcomps
movsl
std
xor
adc
xorb
dec
ficomps
dec
inc
mov
jmp
xor
ficomps
in
outsl
sbb
aad
jnp
fidivrs
jp
loopne
cli
jns
add
sub
mov
mov
push
pushf
fisubrl
mov
int3
mov
add
jnp
xor
daa
cli
push
dec
inc
inc
xchg
fisttpl
test
pusha
xchg
scas
jl
dec
jp
out
mov
ror
jae
fldt
push
scas
das
push
jge
lea
inc
inc
test
in
call
add
push
in
push
popf
push
fsubs
shll
rorl
in
mov
push
cmp
jl
add
aad
add
pop
add
faddl
adc
into
dec
outsl
adc
add
push
inc
pop
sahf
mov
out
lds
jge
lods
mov
mov
mov
jecxz
lods
int
ljmp
jno
fucom
insb
push
jnp
aad
jle
add
mov
test
xor
negb
lods
lods
fildll
jle
inc
jmp
xor
adc
insb
lahf
mov
push
fadd
or
or
jae
or
rcr
adc
sub
inc
mov
and
jge
and
ss
lcall
mov
fdivs
or
push
sbb
push
mov
in
imul
mov
fst
aaa
dec
dec
gs
mov
icebp
sub
stos
decl
ret
sbb
cmp
or
adc
popa
sub
inc
das
inc
aaa
fcomps
mov
mov
fmull
cmp
inc
clc
dec
mov
inc
cmp
leave
pop
mov
pop
pushf
mov
mov
iret
das
mov
shll
dec
sbb
pop
adc
out
mov
repz
fsts
dec
or
ss
xorl
and
dec
lcall
fsubr
lahf
cmpsl
lahf
testl
test
fpatan
insb
sbb
mov
inc
jns
and
add
out
push
jle
leave
dec
in
movsb
inc
adc
adc
sbb
mov
add
in
xchg
hlt
out
adc
sbb
xchg
jbe
jo
pop
adc
std
jo
repz
pusha
imul
stc
jbe
mov
pop
fstl
test
pop
gs
pusha
bound
aas
js
es
pop
pushf
mov
push
lahf
xchg
ja
jle
adc
jae
jmp
nop
mov
push
call
insl
pusha
jge
sbbl
int3
adc
push
jp
add
xchg
sbb
dec
fs
xorl
ds
hlt
dec
rcll
loope
inc
std
pop
dec
sti
fldenv
btr
mov
adc
xchg
mov
mov
enter
mov
dec
push
stos
ljmp
inc
jecxz
aaa
aas
into
dec
push
inc
xchg
cmp
imul
lret
rcll
cmp
cmp
inc
pop
add
adc
in
xchg
cmp
pop
inc
add
dec
test
or
inc
sub
enter
dec
daa
imul
aam
outsb
xorl
push
call
aad
add
or
ja
dec
aaa
shll
shlb
push
in
mov
test
jae
hlt
mov
push
repnz
sub
cmp
jae
and
jnp
fdivl
lock
mov
icebp
mov
aaa
cs
jo
inc
jg
test
xchg
movsl
fsubl
jo
and
into
aad
out
shll
cmpsl
in
xor
and
shlb
sti
aas
adc
mov
das
sub
fildll
jne
in
mov
jge
dec
nop
fwait
popl
sbb
sub
out
jmp
cmp
xchg
jnp
adc
or
stc
cmp
ror
loope
mov
xor
or
hlt
push
inc
sahf
ja
adc
sub
jmp
mov
pusha
adc
sub
dec
cmp
es
dec
and
das
add
cmpsl
das
aaa
and
fucomi
or
add
or
adc
cmpsb
ja
repz
xchg
push
arpl
movsl
jb
pop
xorb
sbb
aas
xchg
xchg
test
sbb
out
sub
xor
and
mov
pop
pop
xchg
xchg
xor
mov
push
cs
dec
int
and
sbb
fdivrl
in
das
adc
fldt
or
xchg
pop
and
mov
int3
lock
pop
cmpsl
xchg
dec
cmp
dec
nop
mov
sub
xchg
adc
aam
jnp
in
mov
movsl
sbb
insb
cmp
outsb
push
test
jle
jns
mov
icebp
xchg
push
inc
arpl
push
mov
inc
cltd
sbb
and
insb
push
int3
xor
xor
insl
adc
lret
sbb
and
clc
iret
lds
cmp
mov
daa
or
and
daa
push
mov
rolb
add
js
loop
dec
lods
jb
inc
and
loope
cld
lods
out
inc
lcall
lods
cmp
sub
mov
jmp
mov
push
fwait
dec
mov
and
je
imul
fwait
push
pop
cmp
adc
jo
or
lods
add
inc
daa
xchg
jecxz
lds
push
xlat
out
jl
mov
jle
nopl
mov
sub
lret
xor
rcr
mov
and
sar
mov
mov
outsb
mov
pop
adc
iret
mov
mov
or
aaa
decb
add
sub
mov
jbe
cwtl
mov
stos
repnz
jb
aad
add
and
push
jmp
or
xchg
scas
xchg
and
outsb
and
or
cmp
mov
aad
inc
je
mov
or
cmp
out
and
pop
shrb
cmc
xchg
sub
pop
jecxz
add
rcll
rcrl
pop
xorb
mov
shr
popf
out
xchg
dec
shrl
inc
lock
aas
mov
fistpl
mov
xorb
xor
mov
lock
out
in
mov
xorl
cmp
pusha
jns
pop
jmp
cli
inc
mov
xlat
sahf
jb
adc
pop
add
inc
cmp
shl
mov
jbe
xor
cmp
mull
in
xchg
mov
pop
loop
je
sbb
push
mov
dec
xorl
dec
mov
pushf
jp
push
add
call
fildll
sar
test
and
in
stos
shrl
mov
sub
pop
cltd
lret
push
ror
mov
movsl
icebp
stos
jle
leave
lods
ret
mov
sub
jecxz
cmp
dec
stc
xchg
je
cmp
nop
mov
cmp
xorb
into
and
push
push
cld
xor
jno
stc
outsb
loope
ds
pop
out
sahf
and
les
cmp
adc
icebp
in
insb
int
loopne
mov
sbb
mov
aaa
pop
aaa
repz
add
cmp
mov
pop
daa
loop
sub
repnz
and
jae
out
mov
sub
mov
ss
push
fcmovne
in
mov
imul
js
jmp
in
mov
cmp
sub
mov
xchg
mov
std
mov
ja
aaa
inc
jbe
xchg
push
repnz
out
mov
jl
jb
leave
into
cltd
mov
push
jecxz
xor
insb
enter
and
mov
sbb
push
scas
fxch
mov
or
daa
pop
mov
ret
sub
cmp
cmovle
jmp
das
xor
add
test
pusha
daa
dec
dec
repz
loop
call
pop
add
xchg
cmp
pop
mov
xchg
cmp
mov
pop
iret
pusha
pop
fstps
adcb
add
in
repz
fs
stos
imulb
mov
fs
int3
jle
loop
xlat
inc
push
adc
sbb
nop
pop
mov
mov
xor
sub
adc
mov
cmp
fsts
jae
mov
or
sahf
iret
imul
scas
imul
loop
pxor
dec
fbld
xor
andb
cltd
out
xchg
and
in
pop
loop
subb
imul
sbb
pop
imul
pop
rcr
std
mov
mov
push
in
mov
sbb
inc
mov
xchg
add
ret
push
test
and
inc
imul
xlat
lcall
lret
jbe
cmc
push
lock
movsb
mov
shll
dec
sti
dec
into
adc
nop
std
aam
cld
cmpsl
mov
dec
test
jg
movsl
leave
lea
pop
pop
lcall
fdivp
mov
cmp
pusha
or
lcall
cmpsb
test
lret
iret
jnp
outsl
push
mov
icebp
in
sub
stos
sbbl
xlat
dec
sub
mov
fisubs
xchg
xchg
jg
outsb
mov
pop
add
sbb
adc
cmp
js
inc
and
xor
sbb
xchg
push
pop
imul
mov
stos
ss
jns
xchg
icebp
cwtl
mov
jb
jge
cmp
jb
add
xor
cli
ret
cld
xor
mov
in
lcall
in
out
jne
or
jl
js
add
out
or
aaa
xlat
lret
sbb
jecxz
roll
mov
psubusb
imul
sbb
and
inc
mov
cmpsl
mulb
sub
movsb
int3
xor
cmpsl
cmpsl
repnz
mov
sub
out
cmpsl
dec
pop
rcll
fsubrs
fdivl
cmpsb
jecxz
add
push
out
fldl
push
fwait
xchg
inc
in
sbb
decl
and
bt
cmp
jno
add
inc
inc
mov
adc
jmp
mov
mov
shl
adc
fdiv
add
repnz
push
fldcw
add
jno
cmp
lods
cld
push
lds
testl
lcall
dec
in
popf
adc
rorb
jecxz
mov
push
lea
mov
adc
xchg
fwait
xor
pop
jge
fsubrs
lods
xor
adc
shlb
or
mov
fcoms
jg
and
jmp
jae
shrb
jecxz
sbb
movsl
lods
insl
adc
sahf
xor
pusha
or
test
in
divl
inc
mov
jbe
inc
pop
aam
in
dec
inc
mov
ljmp
add
mov
ret
xor
mov
mov
mov
sbb
mov
insl
test
arpl
or
enter
ss
bound
or
adc
jno
adc
xchg
jge
cld
pop
add
mov
inc
xchg
cmp
mov
mov
das
dec
subl
mov
stos
add
fsubr
mov
gs
bound
sahf
adc
cmp
bound
insb
jbe
sbb
inc
dec
push
mov
mov
jnp
iret
cmc
cmp
jo
daa
sti
in
mov
out
or
ret
js
das
dec
xchg
test
testl
jge
mov
sub
adc
mov
pop
aas
sbb
addr16
dec
hlt
push
jp
inc
jge
xchg
sbb
test
bnd
jns
and
xor
or
js
or
fcomps
sahf
inc
jle
jp
jp
mov
dec
les
or
jo
add
repnz
pop
fimull
insl
pop
cmp
sub
popa
cltd
test
out
jbe
loopne
jle
les
jno
fidivl
add
dec
and
xor
ljmp
pop
xchg
rorl
jnp
sbb
outsl
in
xor
mov
mov
subl
repnz
pop
insl
dec
and
xchg
sbb
aad
mov
xchg
int3
xor
in
icebp
mov
cltd
mov
dec
ljmp
insb
sarl
mov
add
xchg
movsb
dec
stos
add
sti
inc
jge
aad
dec
pop
or
in
mov
movsl
sub
sub
inc
add
movsb
out
push
fstpl
cli
xchg
mov
push
pop
xchg
das
das
add
data16
or
mov
js
or
cmp
rclb
repnz
xchg
aas
mov
dec
test
mov
adc
inc
xchg
jl
or
mov
int3
cmp
das
xor
sub
push
out
mov
rol
adc
test
jae
sbb
testb
sbb
aas
adc
std
cmp
adc
or
mov
je
cmpsl
add
mov
or
lock
mov
pop
out
je
popa
xchg
jo
mov
sub
mov
mov
jg
or
fs
leave
sbb
loop
sbb
push
sub
lret
dec
pop
xchg
cmp
inc
push
lods
xlat
pop
dec
cld
dec
nop
dec
mov
aaa
imul
ret
out
jnp
ss
ds
sbb
dec
incl
xor
pop
push
add
xor
xor
xchg
leave
add
jns
mov
inc
push
inc
jge
mov
adc
stc
sbb
test
mov
das
dec
ret
and
add
sub
inc
push
pop
das
or
sbb
jae
push
sub
add
jmp
hlt
sbb
xor
xor
in
inc
xlat
inc
lret
mov
cltd
test
adc
outsl
test
nop
jmp
mov
je
push
push
adc
jno
xchg
shrb
or
adc
mov
fwait
mov
dec
pusha
in
lcall
and
repz
cmp
fwait
sarw
addr16
mov
cwtl
leave
add
or
inc
scas
mov
sub
lods
dec
pop
cmpsl
inc
xor
cmp
inc
xchg
mov
jecxz
pusha
out
ds
push
or
adc
lock
mov
wrmsr
mov
aad
ficoms
lret
subl
call
xor
int
in
push
aam
aam
je
aad
subb
mov
sub
jb
pop
test
or
xchg
arpl
lock
cmp
xchg
adc
jle
fbld
xor
mov
daa
popf
setg
cwtl
cmpsb
push
xchg
loop
fdivr
push
xchg
pop
hlt
sub
fwait
xchg
fdiv
dec
subb
cmp
adc
sub
int
push
dec
imul
jl
sti
cmpsb
mov
sbb
cmp
ret
cltd
push
mov
aad
sbb
inc
cmpsl
xchg
rol
enter
sbb
es
cmpsl
in
aas
jno
cmp
shll
push
adc
subb
outsl
mov
ja
mov
jns
jb
aas
arpl
dec
push
lods
js
dec
push
stc
jae
cmp
add
mov
icebp
jge
xchg
std
movsl
aad
push
das
dec
in
mov
lret
or
adc
fs
hlt
mov
lea
add
cmpsb
aaa
sub
cli
inc
xor
int3
adc
or
mov
jb
stos
xor
aam
test
push
ss
shr
mov
leave
and
or
mov
arpl
inc
mov
aaa
mov
mov
mov
inc
lret
adc
and
xchg
push
andb
cmc
xchg
out
lock
clc
out
adc
loope
stos
idiv
add
das
jnp
fists
xchg
or
int3
push
push
imul
xor
not
shrl
sbb
adc
aad
movb
inc
mov
add
fldenv
fidivrs
test
jecxz
add
mov
or
push
xorb
xor
ss
int
shl
fstps
out
out
add
rcll
xchg
inc
push
sbb
cmp
stos
jb
and
sbb
and
mov
xchg
cmp
xchg
add
divl
aaa
addr16
push
xchg
jb
outsb
loope
cmc
hlt
cmc
jbe
cwtl
mov
xchg
roll
or
scas
in
into
subl
cmp
aam
outsb
int3
mov
jecxz
cmp
inc
fadds
push
xchg
mov
lds
js
popf
sbb
je
je
or
jp
pop
xchg
jmp
mov
popf
mov
sub
jnp
repz
insl
inc
and
and
sub
pop
or
and
cmc
loope
and
mov
test
xchg
pushf
cli
mov
popl
fildl
cmpsb
jae
xor
in
pop
inc
xchg
inc
sbb
clc
popa
stos
lods
mov
dec
fldcw
mov
aad
mov
mov
rorb
insl
add
mov
mov
imul
or
bswap
aam
xor
mov
sub
scas
sbb
dec
add
adcb
and
dec
arpl
fwait
lods
stos
sub
cmpsb
pop
rorb
adc
cmc
xchg
xor
test
mov
mov
ss
mov
loopne
push
shrl
popl
xchg
mov
mov
xchg
mov
jge
sub
mov
lea
add
push
push
jecxz
pusha
or
mov
ss
jae
lea
dec
es
xchg
js
add
adcl
das
arpl
mov
cmp
push
fs
inc
cmpsb
imul
aam
call
jp
ja
in
enter
in
push
sbb
in
test
fs
enter
aad
outsb
xchg
mov
push
mov
nop
fbstp
lcall
adc
xor
cltd
notb
xor
pushf
rclb
mov
jg
adc
adc
and
or
fst
mov
push
inc
pop
jmp
test
jb
enter
mov
out
cmp
dec
outsl
mov
js
sahf
mov
jo
push
jp
je
jmp
pop
out
mulb
add
xor
xor
lods
push
jmp
inc
xor
inc
mov
pop
xor
rclb
scas
mov
jne
mov
sub
add
icebp
clc
mov
out
dec
sar
into
sbb
out
leave
xchg
js
xor
fbld
inc
mov
xchg
aam
imull
outsb
pop
sub
mov
icebp
lock
aam
cmc
arpl
push
fildll
mov
cmp
push
pop
cwtl
inc
push
adc
or
call
add
xor
mov
sub
add
push
push
int3
pushf
jb
adc
gs
mov
pop
add
outsl
jle
jb
xchg
loope
and
inc
push
out
js
push
insl
dec
cvtps2pd
xor
lock
dec
ds
popa
xchg
popa
inc
jbe
fsubp
shrb
mov
pop
pop
sub
stc
mov
jmp
and
sti
das
adc
aad
pop
test
sub
enter
adc
dec
pop
jns
test
adc
push
dec
sbb
jae
arpl
shl
lock
xor
lods
in
sbb
mov
and
jge
int3
add
cld
mov
push
call
lret
stc
je
mov
inc
jo
std
mov
cmp
mov
xchg
xchg
pushf
dec
loope
js
adc
aaa
sub
xchg
mov
int
jge
xchg
jecxz
inc
or
ret
mov
mov
pop
cmp
and
inc
ret
fs
jo
gs
fidivrl
lret
stc
aam
mov
in
popa
dec
in
sbb
rcrb
sbb
scas
mov
aam
add
cld
sahf
dec
jb
dec
sti
les
xchg
mov
xchg
xor
test
mov
xchg
or
cwtl
xchg
insl
pop
jl
or
dec
dec
inc
fsubs
lods
outsl
stc
push
mov
hlt
dec
inc
sbb
push
dec
xchg
imul
mov
mov
pop
or
pusha
add
inc
popf
jg
xchg
dec
mov
stc
sub
mov
gs
cmp
test
xchg
lods
lahf
test
fmulp
or
or
stos
mov
xor
icebp
mov
je
add
jecxz
and
js
rcll
enter
and
jno
push
sub
dec
test
fwait
pop
push
mov
fimull
aaa
call
cltd
push
jb
xchg
iret
and
ja
push
mov
int
das
sti
int3
sar
call
test
into
jge
sbb
push
rcrb
sarl
xchg
pop
repnz
push
mov
push
cld
jle
out
xchg
movb
inc
jmp
aaa
sbb
andb
push
push
xor
fwait
or
mov
addb
inc
int
push
repz
sub
inc
hlt
in
or
incl
push
das
int3
mov
or
mov
aad
int
push
sbbl
cltd
enter
fsub
aas
push
mov
negl
imul
movsl
xchg
add
xchg
pop
or
test
sbb
insl
out
stos
mov
and
mov
xchg
das
jnp
adc
pushf
mov
mov
pop
loopne
push
out
ffreep
mov
and
flds
mov
pop
shrl
cltd
add
setp
scas
lock
sbbl
into
call
or
xor
and
add
mov
in
jle
sarl
orl
dec
shlb
push
xchg
stos
push
enter
xchg
fnstsw
mov
mov
out
in
les
xchg
mov
push
add
or
mov
fcomps
shrb
stos
cmp
xchg
xor
mov
jge
jno
fistps
xor
add
and
xor
inc
fnsave
push
loopne
dec
jle
scas
loope
inc
jae
lea
aad
jmp
inc
mov
mov
out
and
push
addb
pop
xor
shlb
out
sub
mov
fiaddl
es
in
pop
sahf
popa
mov
or
xchg
push
xchg
cmp
jle
or
push
stos
mov
pop
or
inc
mov
inc
inc
sbb
pmuludq
mov
in
xchg
pop
ret
xchg
push
dec
xchg
xchg
rcl
mov
and
or
aaa
lret
negl
xlat
ss
cmp
push
lock
inc
sbb
ljmp
jp
pop
xchg
int
lods
add
mov
loopne
jno
sub
mov
add
push
divb
js
orb
inc
sub
in
sbb
out
pop
enter
leave
repz
dec
enter
jge
jo
jbe
test
inc
fdivs
mov
mov
mov
js
jne
adc
test
popf
inc
je
inc
and
inc
sarb
adc
add
daa
mov
push
lods
orl
xchg
jbe
aad
and
mov
mov
in
test
mov
jmp
sar
into
dec
jge
insb
out
push
mov
and
pmulhw
mov
movsb
xor
dec
aam
xchg
out
repnz
ror
cmp
pop
imul
sub
pop
push
test
movsb
lcall
pushf
popa
xor
aaa
pop
jo
cmpsb
xlat
lret
in
mov
adc
stc
cmc
pushf
mov
xchg
rcll
cmp
mov
rcrl
push
add
push
mov
subl
outsl
orb
popf
dec
test
and
mov
divl
or
jns
pop
mov
adc
and
clc
mov
aam
pop
sbb
mov
sbb
rorb
mov
es
imul
cmpsb
cmc
jo
cmp
or
xchg
xor
cmp
adc
or
or
enter
and
outsb
rorl
std
adc
out
adc
cmpsb
lea
mov
pop
test
mov
clc
jecxz
pop
cwtl
clc
das
stos
leave
jns
inc
push
fmull
xor
mov
popf
je
or
sti
out
aas
cmp
push
xor
mov
push
repnz
jbe
mov
andl
xor
sub
aas
jae
pusha
ja
popf
mov
or
stos
fucomip
dec
fsubl
xor
push
or
inc
mov
sub
addl
cmc
aaa
outsl
shll
jo
sbb
mov
sub
dec
add
push
jle
dec
iret
fsubs
popf
repz
dec
sbb
repz
push
sub
les
mov
out
aaa
or
and
in
clc
pop
out
js
sub
inc
dec
mov
add
notb
andb
aas
mov
gs
or
cmp
jo
dec
or
sub
adc
push
jp
subb
add
fadds
lahf
aam
mov
xor
divl
sub
divl
into
xchg
mov
jecxz
mov
push
ret
pop
pushf
addl
add
movsl
add
cld
popf
jnp
jno
mov
mov
jo
movsl
jo
cltd
ret
mov
jns
ret
xor
repz
cmc
hlt
mov
cmp
lahf
dec
repz
movsb
lods
ret
movsb
push
cmp
jns
inc
jb
test
mov
or
mov
shrb
out
mov
icebp
int3
xchg
xlat
pop
mov
lods
pop
sbb
sub
es
rorl
int
movsb
xchg
aad
sbb
mov
sbb
jle
add
test
and
hlt
in
mov
inc
lret
not
nop
dec
add
cmpsb
cld
or
push
movsl
and
mov
xchg
sbbl
inc
and
aaa
mov
xchg
lods
cs
sbb
loope
jno
dec
shll
fcom
push
dec
sub
mov
aas
cs
out
icebp
into
sbbb
add
pop
xorl
lds
lods
test
adcl
sub
addr16
mov
aam
or
mov
mov
lock
add
mov
inc
jmp
cwtl
mov
adc
aam
mov
dec
insl
incb
push
pushl
in
mov
xchg
sub
fdivs
popf
out
cmp
jnp
cli
or
add
jecxz
dec
sbb
adc
jo
scas
add
ljmp
test
lcall
or
sub
arpl
ss
sbb
mov
jo
adc
jp
dec
add
or
push
lea
pop
dec
aad
mov
jae
movsl
xchg
pusha
add
mov
adc
cmc
movsl
sbbb
bound
lods
mov
jne
hlt
dec
insb
jmp
imul
sti
push
cmp
mov
subl
lahf
aam
sahf
dec
ret
sbb
out
lock
jge
jg
xor
xchg
adc
jno
and
pop
inc
xlat
cmp
cmpsb
clc
dec
and
lods
mov
mov
out
inc
cmp
mov
icebp
popf
dec
dec
jmp
into
and
ror
pop
dec
ja
add
or
loope
sub
push
rorl
mov
inc
sbb
lret
inc
jp
pop
cld
push
or
mov
cmp
sarb
jl
imul
enter
imul
pusha
xor
xchg
je
mov
mov
jp
and
iret
inc
and
pop
jle
lahf
and
xorl
push
shl
roll
push
mov
or
push
xchg
shll
mov
push
mov
and
inc
lock
jle
mov
cmp
lret
mov
jo
sub
xchg
sub
sbb
xchg
mov
loop
mov
int
loope
movsl
cmp
push
cli
mov
mov
cmp
and
aas
lcall
adc
add
push
sub
mov
add
call
jnp
sbb
pushf
cmp
inc
gs
in
dec
ljmp
pop
ljmp
mov
adc
mov
daa
mov
xchg
ficoms
pop
aaa
mov
popf
mov
outsl
xor
icebp
popf
mov
scas
outsl
in
shl
dec
sbb
jns
jl
dec
sbb
mov
pop
mov
dec
iret
mov
mov
sarl
shl
ss
push
dec
stos
sbb
xor
push
out
mov
pushf
jle
repz
jle
fwait
and
sub
insl
ds
jb
cmp
sbb
shlb
jno
inc
iret
add
or
lret
jecxz
mov
sbb
sub
into
adc
xchg
mov
sub
or
mov
test
sbb
jb
and
scas
je
or
repz
shll
inc
cli
test
pop
fldl
mov
sub
inc
inc
fisubrs
inc
neg
jecxz
scas
jmp
call
outsb
xrstor
stos
mov
decl
push
decl
lahf
pop
inc
cmp
jp
xchg
xchg
mov
cs
ja
sahf
mov
sarl
xor
mov
mov
add
ljmp
cwtl
dec
cmpsb
test
mov
out
ds
insb
sbb
testl
fsubs
loopne
pop
outsb
xchg
xor
and
mov
faddl
add
mov
out
xor
cmpsl
imul
mov
jecxz
mov
mov
stos
aas
and
jmp
movsb
imul
or
dec
out
dec
stc
or
mov
add
je
dec
mov
dec
out
es
movsb
mov
movsl
shll
xor
arpl
mov
scas
jo
cmp
push
push
lahf
andl
dec
aam
push
dec
sbb
lahf
pop
pop
mov
pop
aaa
adc
gs
add
pop
int3
call
or
dec
aas
push
ret
je
jae
dec
pop
sbb
xchg
xchg
sub
mov
int
or
pop
repnz
and
outsl
adc
lds
test
mov
out
mov
lret
ret
or
imul
pop
je
sbb
push
lahf
pop
popa
jl
xchg
xchg
jne
or
js
adc
test
add
icebp
arpl
loopne
jbe
or
xchg
adc
mov
stos
out
lods
negl
fisubl
das
daa
inc
sarl
and
in
daa
cmp
mov
mov
sbb
mov
rcrl
shll
in
aas
mov
cwtl
sbb
mov
mulb
inc
test
arpl
in
stos
push
xchg
xor
ja
jae
aam
sbbb
jne
add
xchg
push
inc
sbb
adc
push
int
jo
jle
loope
test
push
das
arpl
shrb
int3
rolb
xor
sub
sahf
and
lcall
push
push
mov
inc
mov
pop
pop
push
shll
fsubl
rcl
data16
jl
mov
sub
dec
cmp
mov
ret
fistpll
pop
bound
test
rolb
mov
mov
sub
cltd
mov
daa
repz
pop
add
sbb
dec
xor
cwtl
dec
dec
fstpt
shll
push
lret
jmp
gs
inc
sub
inc
dec
push
jo
popf
sar
mov
mov
ljmp
nop
ds
push
scas
fs
xchg
stos
in
jne
out
lock
pop
out
jb
pop
or
nop
loopne
mov
in
sub
and
nop
lods
xlat
dec
cmpl
pop
sahf
aaa
push
push
mov
rorl
mov
mov
imul
lcall
shl
ror
gs
insb
fdivrl
jo
pop
bound
xor
arpl
jns
popf
jmp
pop
or
xchg
out
cmp
jmp
and
or
jbe
pushf
outsb
cltd
push
pop
xor
sbb
daa
sti
mov
pop
scas
cmp
mov
cmovs
xor
push
push
or
jmp
aad
lea
int3
test
stos
inc
xor
mov
stos
mov
inc
imul
jmp
jb
lds
leave
cmc
repz
mov
fdivs
push
adc
cli
sub
mov
xchg
push
ds
mov
rorl
lods
cs
sti
call
cmc
fiadds
insb
push
xlat
xchg
jge
mov
popf
xor
fnstsw
ds
push
add
inc
pusha
adc
clc
ror
xlat
inc
add
cld
imul
into
clc
sub
lods
jb
add
into
data16
mov
les
xchg
jle
fstl
mov
adc
mov
adc
cmp
push
les
mov
cmpsl
cmpsb
inc
out
cmp
incb
push
push
xor
inc
or
sbb
or
cmc
and
mov
jp
out
fbstp
js
enter
jg
xor
mov
push
popa
imul
in
jge
push
aas
inc
mov
lret
xchg
cmp
ja
push
xchg
std
lods
mov
mov
jmp
inc
outsb
sbb
mov
jl
test
mov
sahf
inc
mov
xlat
lea
jae
jno
icebp
sub
sbb
or
std
and
arpl
mov
xchg
into
adc
daa
sti
sub
enter
popf
cmp
push
setae
adc
cwtl
clc
call
adc
shll
jo
ret
daa
mov
into
loope
mov
add
int
mov
fnstenv
dec
cmp
and
in
cmp
outsl
add
mov
jl
mov
mov
cmp
test
aad
movsb
out
repnz
inc
push
jecxz
and
add
push
rolb
mov
leave
jle
mov
and
push
push
jnp
and
inc
popa
mov
mov
xor
add
xchg
mov
cmp
and
mov
lret
jns
mov
adc
or
adc
mov
add
int3
jns
shrb
imul
lods
lods
cmp
lock
mov
pop
cmpsb
xchg
je
fs
ljmp
sub
sub
mov
jno
pop
xor
and
sbb
pop
dec
out
add
or
je
das
dec
cmpsl
sti
xchg
jl
popf
cmp
popa
pop
push
mov
leave
lock
push
fmul
test
pushf
je
adc
inc
jns
xchg
leave
jge
pop
mov
adc
test
outsl
fdivl
push
pop
out
test
std
mov
fnsave
lock
mov
add
dec
inc
das
dec
cmp
hlt
jbe
pushf
mov
sub
movsb
fs
cmp
and
out
mov
loope
ret
fidivrl
mov
add
jno
inc
into
xorb
stos
fsts
sub
jb
mov
mov
mov
sub
push
aad
leave
fmulp
ds
or
mov
ret
push
add
imul
inc
icebp
dec
jae
test
loope
in
out
mov
sbb
das
sbb
mov
data16
cmp
mov
add
iret
outsb
inc
cmp
sbb
jno
mov
sti
cmp
xchg
jmp
xchg
adc
popa
push
and
lret
pop
pop
pop
lret
or
mov
pop
popf
cmp
cmp
icebp
test
or
push
and
sbb
bound
sub
gs
cmp
mov
into
pop
xchg
add
outsb
clc
pushf
xor
int
pop
adc
xor
jmp
push
lcall
fisttpll
xchg
aam
imul
out
sahf
add
jmp
mov
int3
add
push
rcrl
sub
insb
adc
or
mov
jb
pop
aas
mov
jecxz
mov
lret
inc
test
push
por
cmp
sbb
lods
push
push
clc
fldl
pushf
iret
xchg
enter
xchg
enter
test
cwtl
add
push
rcl
sub
pop
fldt
pop
iret
movsb
xlat
shlb
pusha
push
add
jnp
imul
pop
and
adc
stc
or
mov
mov
int3
cltd
xor
push
pop
cs
push
xchg
cmp
pop
movsb
pop
cltd
push
imul
adc
jle
in
xor
xchg
rorl
pop
mov
cmpsl
and
inc
aad
loope
and
imul
lods
call
cmp
mov
push
push
mov
xchg
loop,pt
es
cwtl
movl
inc
cwtl
mov
pop
mov
cmpsl
shlb
jge
jno
mov
mov
adc
fs
mov
push
ficoml
and
iret
int
xor
std
data16
out
cmp
mov
pop
stc
lret
sbb
inc
out
out
jmp
cli
jecxz
nop
mov
sub
dec
loopne
jge
sbb
into
dec
pop
clc
sbb
das
mov
inc
incb
shll
je
push
xor
shlb
sbb
clc
adc
rorl
mov
dec
add
bound
sbb
sub
pop
subl
int
mov
rclb
testl
cli
mov
mov
insl
fisubrs
lds
lock
cmp
push
xchg
adc
push
and
sbb
sbb
mov
and
and
pop
push
lret
cld
lcall
push
and
enter
pop
jmp
lcall
or
or
insb
lods
sub
js
pop
scas
push
or
out
xchg
fisubl
adc
xchg
dec
or
jecxz
xor
inc
loop
mov
push
cwtl
cwtl
repz
or
pop
data16
pop
xor
mov
dec
xor
and
andb
fsubrl
test
cmp
mov
mov
popa
rorb
ja
popf
fcmovu
push
inc
pop
jns
jge
mov
ss
xchg
pop
mov
sahf
out
xor
inc
incl
pop
insl
pop
sub
adc
repnz
lods
and
add
cmpsb
mov
sahf
inc
out
adc
mov
or
sbb
cltd
daa
loope
xor
outsl
leave
hlt
inc
push
mov
jge
and
cltd
stos
jge
push
repnz
cmp
test
test
jge
mov
repnz
enter
mov
stc
test
test
inc
loop
pop
cmc
add
int3
das
adc
testl
aaa
imul
mov
and
loopne
insl
xchg
int
movsb
mov
xchg
pop
and
add
lret
daa
scas
test
pop
stc
and
ficomps
xor
xor
dec
cmovo
and
jmp
sbb
sub
xchg
mov
imul
mov
xor
inc
xchg
xchg
loope
lret
jb
lods
stos
sbb
pushf
clc
pop
push
mov
lods
scas
std
sub
pop
je
or
mov
js
dec
cld
mov
sbb
ficoms
cli
lcall
jns,pn
jno
stc
pop
pop
ret
stos
mov
in
jno
iret
insb
cmp
mov
mov
pop
pop
fstpt
outsl
popf
cmp
int
and
xchg
push
aad
xchg
cltd
and
mov
pop
mov
sub
adc
mov
es
pop
pop
jecxz
jno
fdivr
add
jl
cmp
fistl
arpl
leave
adc
pop
in
std
test
mov
icebp
inc
ljmp
add
mov
cmp
cmpsl
lahf
out
lret
push
ret
orb
mov
int3
sbb
aaa
fcompl
mov
ljmp
enter
fwait
in
sbb
cwtl
shll
mov
aas
test
sub
imul
pop
xchg
sti
mov
int
dec
ret
aad
mov
jle
pushf
mov
sub
jecxz
jge
fdivs
aaa
les
push
addb
mov
imul
inc
aas
sub
jae
loop
cmp
arpl
jns
test
in
jno
jl
lcall
leave
push
add
mov
adc
sbb
sbb
imul
je
and
inc
xchg
xchg
cltd
sub
cltd
pushf
es
dec
pop
cmp
loope
fst
scas
dec
aas
popa
popf
inc
sbb
or
insl
in
mov
pop
out
sub
dec
xor
cmpsb
js
lds
sub
mov
hlt
repnz
mov
loopne
shrl
test
mov
aas
repnz
add
out
pop
jmp
mov
pop
out
outsb
jle
jnp
rcrl
jns
and
sub
cmpsl
call
pop
sbb
clc
jmp
xlat
push
push
pusha
std
add
imul
push
pusha
aaa
xor
rorl
inc
and
lea
sbb
hlt
mov
fcmovb
mov
xchg
ret
imul
popa
inc
into
jae
mov
cmpsb
daa
push
ja
hlt
sbb
xchg
xor
js
jne
ficoml
rolb
lods
mov
lods
pusha
sbb
mov
xor
mov
lea
scas
scas
xchg
sti
lahf
push
inc
in
std
test
lahf
mov
sbb
pushf
dec
inc
test
std
sub
and
pop
mov
out
xchg
cwtl
rcrl
punpckhdq
mov
sub
fisubs
fmulp
xor
pop
inc
cli
bound
int
sbb
test
inc
xchg
cs
movsl
rolb
adc
scas
sbb
inc
mov
lea
pop
cmp
jmp
sbb
movsl
shl
out
insl
push
mov
dec
pop
jg
divps
push
adc
jae
xchg
cmpsb
fnstsw
mov
lcall
mov
push
inc
xor
mov
push
idivl
xchg
push
xchg
jne
jg
test
or
cs
and
inc
adc
out
out
clc
lret
mov
mov
add
push
add
add
inc
fidivl
sub
pop
mov
shll
mov
dec
jne
push
jae
sub
add
pop
jge
inc
inc
cmpsl
movsl
dec
push
mov
dec
imul
mov
or
xor
xor
into
nop
xor
cmp
xchg
cmp
jno
xor
sar
cld
push
adc
jbe
lea
mov
aaa
test
fwait
xchg
add
and
mov
aaa
mov
inc
jb
enter
mov
adcb
test
ljmp
xor
xor
clc
xlat
add
imul
xor
push
adc
sub
push
aas
imul
popa
sbb
ret
push
xchg
or
jmp
jae
sbb
nop
mov
or
in
sbb
jg
shll
cmc
fs
std
dec
adc
mov
inc
mov
push
je
sbb
xchg
or
or
sahf
in
bound
adc
xor
cmpb
or
cld
fcoms
cli
mov
sahf
lods
xchg
stos
mov
inc
jns
cmp
test
xchg
je
cmpsb
and
cmc
jnp
mov
add
jnp
or
in
inc
add
and
stos
movl
mov
les
aaa
xlat
fsubl
xchg
dec
inc
test
out
mov
jns
js
and
iret
xor
cmpsb
adc
jl
mov
lret
arpl
mov
sbb
push
add
outsb
and
pop
push
rep
xchg
daa
insb
jle
sub
cmp
or
xor
fs
jbe
popf
fnstenv
fcmove
pop
push
aaa
xor
sbb
xor
mov
out
es
jecxz
das
stc
adc
shlb
add
add
mov
scas
scas
dec
imul
sbb
and
jp
shrd
xchg
xor
lret
insl
add
imul
mov
fiadds
pop
mov
cld
sbb
movsb
repz
jno
fsubs
daa
adc
stos
dec
in
xor
sub
aaa
inc
xor
js
push
add
fidivs
adc
and
add
push
pop
je
xchg
fcoml
into
inc
fs
sbb
cmpb
mov
in
mov
ljmp
ljmp
xchg
add
inc
cmp
mov
ss
hlt
out
filds
idiv
movsl
loope
out
lds
adc
into
aaa
push
shrl
in
mov
out
test
pusha
mov
pop
dec
add
inc
inc
lds
mov
fdivs
es
inc
sbb
mov
repz
lret
jp
lahf
xor
mov
lea
repz
lock
dec
out
xor
jb
mov
jns
test
aaa
push
jnp
jmp
mov
enter
das
movsl
and
sbb
push
fstps
mov
aam
lock
pusha
dec
mov
push
repz
jne
xor
neg
into
cmpsl
or
xlat
mov
or
data16
push
iret
pop
dec
or
cmp
mov
lds
mov
arpl
pop
xchg
or
adc
lret
ret
loope
inc
les
jle
into
adc
leave
in
pushf
pop
push
repnz
lods
sbb
xchg
pop
fwait
xlat
dec
lahf
fstp
mov
cwtl
lods
repz
test
or
pop
inc
pop
cltd
push
xchg
xor
in
fcomip
ljmp
lahf
leave
cli
pop
jns
push
xor
push
rcrl
push
sahf
mov
add
loopne
insb
sbb
pop
mov
jg
cmp
or
and
loope
push
sub
adcb
jno
inc
leave
ja
xor
adc
jmp
lods
pop
mov
rolb
jno
dec
dec
clc
sar
push
jne
ret
fcompl
push
jmp
mov
xor
adc
inc
xchg
push
aad
out
or
cs
sbb
ret
sarl
push
sbb
push
mov
mov
add
ds
push
and
rorb
jp
push
push
icebp
or
fwait
cmp
sti
shrb
stos
fidivl
sbb
sbb
jmp
pop
add
jecxz
jnp
mov
mov
pop
pop
fdivl
hlt
xchg
es
adc
in
popa
and
adc
adc
in
cmp
aaa
and
cmp
lods
xlat
jg
push
push
jno
jno
fwait
jns
in
mov
lret
inc
sbb
stos
push
sbb
adc
push
in
mov
cmp
sub
sub
jne
cmp
push
pop
shl
mov
pushf
addr16
jb
pop
sti
jno
fsubr
pushf
fbld
dec
sbb
jns
xor
cld
adc
scas
or
adc
pop
xadd
jl
insb
popf
fistl
test
fcoml
jmp
xor
test
sahf
xchg
xchg
fldcw
pop
pop
sub
arpl
push
mov
adc
mov
das
pop
sub
imul
and
paddusb
daa
aam
xchg
push
cltd
mov
cld
fnstsw
mov
insl
sub
dec
jno
stos
and
negb
std
and
push
mov
lret
jno
and
ret
pop
movsb
jbe
cmp
insb
repz
xchg
cltd
sbb
or
repnz
jp
pop
jno
fistl
arpl
lds
scas
imul
sbb
cli
jno
repz
xor
pop
jmp
sarb
push
scas
adc
lcall
call
dec
jge
loop
sti
repz
cmp
xchg
push
jae
lcall
out
ljmp
push
mov
repnz
cmpsl
mov
test
cmpl
push
inc
pushf
aam
ret
pop
mov
mov
outsl
mov
push
and
aad
fldl
jmp
push
push
popa
sub
push
cld
inc
pop
mov
repz
lcall
xchg
sbb
pop
adc
mov
fs
imul
push
aam
push
and
in
repnz
and
add
mov
es
clc
popf
pop
jbe
lods
aaa
stos
dec
xchg
sti
and
dec
inc
inc
lock
jb
iret
pop
inc
fsts
push
leave
mov
push
loop
lcall
inc
dec
and
mov
xor
lcall
sti
sub
and
pop
push
and
das
sbb
rorb
push
subl
roll
movsl
test
or
shrb
mov
adc
dec
mov
or
mov
scas
lea
test
lods
mov
push
mov
out
ljmpw
jge
xchg
dec
cmp
js
scas
je
push
jle
cmp
mov
hlt
pop
rorl
popa
dec
icebp
les
cmp
push
adc
mov
mov
pushf
push
adcb
popa
shrl
sub
or
test
outsl
je
in
call
lcall
mov
subl
sub
push
jno
cmp
sahf
leave
or
lea
xor
shl
out
pop
push
mov
enter
jle
xchg
push
inc
dec
xlat
pop
mov
mov
addb
mov
stc
inc
inc
inc
and
pop
or
push
dec
mov
jae
fnstsw
mov
test
popf
testb
je
add
aas
imul
lcall
mov
xchg
adc
jmp
lret
xchg
jecxz
sbb
orl
pop
enter
adc
mov
dec
dec
test
mov
negl
adc
xchg
xchg
mov
enter
insb
stc
inc
ret
push
xchg
cwtl
push
shl
xchg
out
mov
inc
popf
fistpl
xor
push
fsubl
push
hlt
mov
xchg
outsl
sub
std
mov
filds
xchg
lea
push
pop
daa
mov
push
jp
iret
dec
call
dec
enter
das
sub
in
sbb
fidivrl
push
inc
and
cmp
cmp
push
inc
cs
jns
mov
in
mov
xchg
cmp
adc
sbb
xorl
jbe
in
sbb
in
daa
add
popa
into
pop
jp
mov
mov
dec
outsl
jg
mov
xchg
loopne
sbbb
stc
jno
sub
aad
dec
popa
mov
pop
ja
xchg
loope
adc
and
mov
push
inc
xor
sti
push
sahf
sub
cmpsb
sub
es
or
nop
daa
sahf
hlt
cmpb
push
mov
jle
pop
cli
xchg
add
ret
hlt
and
mov
mov
xorl
sub
jmp
pop
fidivs
fsubp
push
mov
add
aam
mov
mov
jns
clc
aaa
mov
into
pusha
enter
and
ffreep
movsl
inc
sti
and
test
inc
fldl
std
leave
cmp
jl
mov
xchg
sti
lods
movsl
and
and
push
scas
es
fs
repnz
cvtpi2ps
test
or
sub
sti
shll
ds
push
popa
cmpl
bound
jl
loopne
aam
push
xchg
lret
cwtl
lods
cwtl
pop
out
dec
xor
movsl
lds
daa
test
mov
imull
das
push
mov
jle
push
nop
inc
mov
ljmp
push
data16
fincstp
pop
nop
cld
sbb
mov
test
and
ja
loope
int3
cmp
fwait
or
inc
mov
dec
loopne
mov
mov
dec
push
gs
adc
mov
sahf
test
jle
std
push
or
fs
jnp
mov
jmp
dec
and
and
xlat
fisubrs
cmp
xorl
ror
or
mov
and
aaa
xchg
lret
inc
mov
cmp
mov
xlat
xchg
sub
out
scas
and
jp
mov
insb
jns
push
icebp
mov
sub
loopne
call
punpcklbw
bound
jnp
push
mov
mov
scas
imul
add
sbbb
adc
sbb
nop
add
xchg
sbb
insl
inc
push
sarl
adcb
mov
lock
xchg
mov
xor
adc
or
push
pop
pop
dec
push
mov
call
rcll
push
push
ficomps
cli
repnz
cmp
push
mov
repnz
push
es
xor
dec
loope
inc
inc
ss
int
sarb
jmp
out
icebp
je
dec
adc
in
push
nop
push
jecxz
popa
sbb
jo
and
lret
jbe
xchg
or
loopne
sbb
cwtl
push
cmp
dec
jns
adc
fcmovb
or
pop
mov
sbb
or
lock
into
adc
jle
nop
jecxz
ds
inc
out
inc
mov
cmpsb
mov
js
int3
lock
or
inc
mov
out
sub
xchg
hlt
out
jno
mov
aam
mov
movsl
int
fldl
mov
loopne
std
mov
jbe
add
popl
or
sahf
pop
addb
pop
add
cmp
ljmp
push
cmp
jg
int3
icebp
hlt
cmp
les
xchg
imul
cmp
in
push
lret
pop
pop
cwtl
xor
inc
rclb
mov
mov
inc
in
and
in
cmovo
lret
or
arpl
repnz
pop
aam
mov
test
sahf
movsl
scas
jl
sti
pop
mov
addb
push
enter
or
cmp
push
test
jbe
mov
dec
aaa
vpshlb
pop
mov
push
fwait
rolb
adc
mov
jmp
xchg
lahf
and
or
adc
in
jns
xchg
fwait
pop
arpl
xchg
adc
mov
movsb
movsb
dec
sbb
int
sub
adc
std
cmp
or
mov
pop
fsubrs
add
loop
shlb
lods
cmp
sub
shrd
lcall
loope
loop
les
mov
addr16
or
faddl
cli
adc
push
gs
stc
aad
xor
iret
sub
sti
in
rorl
pop
adc
andl
xchg
idivl
push
xor
sub
add
lahf
paddw
mov
bound
inc
lcall
lock
sub
mov
dec
adc
pop
and
rcrb
pop
data16
add
mov
stc
cltd
xchg
cmpsl
xor
aas
xchg
int
movsl
lds
adc
rcrb
mov
shlb
ss
and
sub
push
mov
fs
ja
mov
fstpl
rcrb
xchg
mov
gs
xlat
scas
xor
mov
mov
mov
aaa
pop
adc
fld
mov
addr16
gs
movsl
add
jne
cs
ret
xor
jp
sub
push
and
lds
push
pop
mov
repz
into
jo
xchg
mov
pop
jb
iret
cmp
cmpl
mov
add
mov
push
xor
xchg
outsl
push
repz
gs
roll
mov
adc
or
stos
fdivp
xchg
fwait
je
pop
or
imul
es
or
inc
popf
xchg
mov
xchg
minps
pusha
aas
imul
cli
jne
mov
mov
push
hlt
shl
addr16
enter
dec
mov
ret
jl
sbb
bndstx
cli
inc
shl
jnp
dec
xchg
xchg
or
mov
xor
mov
inc
dec
cwtl
xchg
sbb
daa
hlt
in
pop
pop
pop
ja
push
stc
adc
pusha
and
aaa
outsl
incb
cmpsb
fmull
icebp
call
dec
cmp
lods
xchg
addr16
out
xchg
lds
outsl
daa
and
mov
ret
adc
test
sub
mov
push
aas
mov
and
dec
scas
addr16
jne
pop
lahf
pop
loope
jge
mov
stos
cwtl
lock
scas
sarb
fcmove
scas
int3
xchg
insb
sbb
les
es
mov
mov
jp
adc
mov
jb
in
and
ljmp
inc
out
mov
adc
push
jmp
aad
adc
mov
sub
add
sub
push
fs
in
insb
add
fstl
mov
push
mov
pop
mov
sub
fcoml
mov
lcall
and
sub
shlb
cs
scas
mov
movsb
iret
lods
inc
or
mov
mov
jae
sti
cmp
mov
sub
cmp
cmp
add
jp
movsb
sbb
insb
pushf
repz
gs
mov
aas
in
xchg
sub
out
fbld
loope
mov
in
jle
lock
fnstenv
pop
outsb
push
jp
int3
stos
mov
shr
pop
loopne
jb
jno
push
mov
fbstp
sbb
stc
pop
mov
mov
adcb
mov
lcall
pop
xchg
data16
cmp
mov
inc
xchg
imul
in
shl
outsl
and
inc
mov
jo
jl
sub
push
xchg
xchg
rcr
mov
jecxz
dec
and
rorl
pushf
add
nop
dec
jns
or
nop/reserved
mov
imul
sub
jl
xchg
divl
and
movsl
stos
jae
insb
out
xor
imul
test
adcb
addr16
cltd
sti
xor
push
adc
leave
xchg
pop
xor
dec
ret
das
popf
inc
xor
jl
and
in
pop
daa
fsts
mov
inc
sub
add
push
sbb
push
aam
push
shlb
fcomps
lret
dec
jecxz
mov
aad
mov
test
scas
inc
jo
int3
in
pop
pop
aad
aam
lods
lret
mul
sbb
mov
lahf
pop
push
ret
mov
dec
decb
mov
in
fists
and
rcrb
data16
pop
push
mov
inc
mov
mov
dec
inc
adc
cmp
std
pop
pushf
inc
or
call
and
loope
out
dec
js
mov
retw
xor
cmp
push
xor
outsl
test
stc
les
cmpsl
or
inc
pusha
sahf
pusha
rcl
fcompl
subb
outsl
cmpsb
mov
lcall
dec
add
pusha
je
inc
pop
into
sbb
push
or
mov
xor
outsl
sub
xchg
icebp
pop
lahf
ss
andb
shl
pop
int3
adc
pop
dec
mov
jl
and
and
outsb
jo
cmp
sahf
clc
xchg
inc
clc
add
fs
push
fsubl
cltd
push
dec
es
movsb
fsubrl
imull
hlt
ja
dec
vpcmpgtd
les
add
mov
jns
push
jge
test
js
lahf
stc
push
push
loope
loop
push
xor
fistpl
add
adc
mov
mov
repnz
ja
xchg
fs
xchg
leave
sti
out
popf
in
adc
dec
js
aam
fcmove
mull
imul
filds
sbb
mov
mov
cmc
sbb
lcall
and
enter
sub
repz
mov
cs
and
hlt
cmp
adc
xchg
add
aad
les
ret
fmul
lret
loopne
jae
fbld
inc
mov
cli
in
movb
cltd
les
lds
dec
movsb
daa
ja
or
inc
sbb
fwait
mov
imull
inc
insb
mov
ret
xorb
mov
sub
sub
push
xor
add
dec
jg
pop
cmp
movsl
adc
mov
ret
mov
xchg
jecxz
and
loopne
and
stc
dec
cmpsw
std
jbe
push
sti
shrl
sub
cld
mov
out
fcomps
call
out
push
popa
inc
push
cwtl
in
sbb
lret
push
or
lock
cmp
pop
mov
pop
in
nop
mov
adc
cmp
or
sbb
xlat
jnp
xor
lcall
xlat
mov
add
or
test
or
test
movsl
jbe
push
pop
xor
add
xchg
jle
cwtl
popl
negl
out
mov
mov
int
dec
sub
lods
imul
push
cs
jno
lret
cld
rclb
cmp
mov
cmp
cmpsb
cmp
add
out
ljmp
add
lcall
rcr
es
mov
push
movsb
add
cmc
stos
inc
sbb
int3
fcomps
lds
sub
xor
mov
pop
xchg
mov
gs
sbb
testl
adc
fsubl
cmpsl
mov
pop
pop
xchg
inc
push
in
or
ds
mov
xchg
outsb
adc
adc
daa
push
in
scas
subb
leave
andb
imul
mov
or
outsb
outsl
adc
pop
out
push
ljmp
xor
push
mov
leave
pop
jp
fcompl
sub
adc
cmp
dec
push
mov
mov
lock
setg
lods
jbe,pn
xchg
and
lret
inc
jge
xlat
loopne
rcrb
fldl
inc
sbb
in
inc
xor
xchg
sbbl
or
jmp
aam
xor
loop
jno
cmc
daa
inc
addr16
adc
aam
ljmp
shr
imul
addr16
insl
jb
jle
int
cmp
or
push
rclb
cmp
std
push
cmp
inc
ret
scas
dec
loop
dec
pop
adc
mov
jnp
adc
mov
jnp
cmp
das
pop
fisubl
stc
jecxz
pusha
iret
jbe
cli
ss
rol
ljmp
and
fs
sti
push
pop
cli
outsl
xlat
fbld
movl
mov
dec
sub
arpl
clc
inc
and
xor
push
popf
repnz
add
out
jecxz
dec
scas
or
imul
push
push
push
jle
xor
aas
inc
lcall
rolb
ret
cltd
jl
dec
idiv
jmp
in
xchg
push
mov
push
scas
nop
or
in
les
stos
or
in
and
mov
dec
xchg
aam
cwtl
into
add
cmp
mov
push
scas
dec
mov
cltd
mov
lods
scas
inc
test
rclb
leave
adcl
mov
xchg
mov
imul
pop
mov
or
mov
xchg
mov
or
fmuls
jne
push
in
push
push
popf
addb
sbbl
cmp
pop
jns
or
sbb
push
das
inc
push
leave
pop
lret
adc
cmc
xlat
xor
enter
cli
push
jnp
pop
or
mov
cmpsb
cmp
push
and
cld
test
adc
cmpsl
cmp
ss
movsb
bound
jns
or
ljmp
es
jmp
out
int3
mov
lahf
xor
int3
insl
or
imul
mov
xchg
scas
stos
cwtl
adc
and
add
dec
or
movsl
mov
mov
icebp
xor
cmp
lcall
movsb
jmp
cmpsl
negl
aam
dec
sahf
sahf
adc
fdiv
negl
cmp
xor
and
ret
aam
aad
jmp
leave
movl
jno
mov
stos
sti
fisttps
icebp
fldcw
mov
inc
mov
mov
jae
mov
sub
or
xchg
pop
stos
jo
mov
and
jge
std
hlt
sub
cmpsl
push
or
xchg
mov
xlat
xchg
jns,pt
jmp
bound
aam
leave
pop
dec
cmc
add
mov
xlat
inc
or
cmp
stc
cmp
jae
push
pop
jo
xchg
lret
inc
sbb
xchg
cwtl
fnstsw
jp
sub
test
xor
mov
or
sbb
mov
sub
jbe
movsb
mov
add
mov
fstpt
rcll
aad
xor
mov
std
adc
cmp
inc
jns
inc
or
xor
push
mov
loop
add
lahf
mov
out
push
imul
fwait
cmp
mov
out
xor
and
aaa
cmp
mov
int3
or
dec
xchg
stc
add
sub
jg
pushf
or
int
adc
lea
ljmp
adc
xchg
mov
out
lea
and
test
fcomps
cli
lock
add
xchg
jl
xchg
out
xchg
pop
fs
add
mov
lcall
aam
push
cmp
xchg
jl
mov
add
pusha
mov
cmp
mov
out
roll
aas
dec
mov
xor
cli
scas
inc
push
dec
push
mov
inc
push
les
mov
dec
outsb
hlt
or
sub
jle
mov
sbb
xchg
repnz
lcall
fbld
jmp
aas
mov
das
inc
sbb
popa
ss
sub
push
mov
mov
int3
push
arpl
ret
ret
push
mov
adc
je
stc
xlat
or
or
xor
or
sub
fdivr
mov
out
nop
fcoml
jno
inc
std
push
arpl
repnz
call
mov
int3
mov
jmp
hlt
xor
sahf
push
call
int
mov
cmpb
sub
cwtl
int3
sahf
fisttps
pop
inc
in
dec
pop
jge
inc
xchg
and
jmp
jecxz
lret
mov
lret
mov
mov
movsl
cmp
mov
scas
xor
jl
outsl
into
mov
jp
loop
ja
sub
lret
and
inc
mov
in
pop
jl
rolb
push
pop
call
xor
stc
leave
push
mov
adc
in
cs
loopne
jb
sub
jp
pop
xchg
icebp
mov
jbe
punpckhdq
int3
mov
test
pop
fldcw
and
dec
and
arpl
aad
mov
cmc
shr
jmp
sahf
pushf
sbb
adc
in
xor
xor
dec
sbb
les
ret
jae
mov
xchg
test
pop
mov
jns
fistl
and
out
fs
xor
xor
mov
ret
mov
daa
add
jg
mov
dec
rcrl
xchg
push
popa
adc
in
test
mov
mov
test
fiaddl
mov
add
jae
outsb
cmp
cmp
xlat
mov
jbe
dec
xor
repz
dec
lret
ja
pop
outsb
cmpsl
mov
jmp
xchg
inc
or
xor
cmp
cwtl
pop
push
lret
mov
xchg
pushf
notl
jmp
les
inc
sub
fldt
fbld
adc
sub
cmp
mov
sbb
sub
xchg
out
pusha
leave
scas
test
inc
inc
je
es
pop
push
in
jne
mov
je
cmpsl
inc
out
jbe
popa
movlps
fwait
add
or
mov
and
sub
fcoml
shr
es
fwait
lcall
fidivrl
xlat
push
bound
mov
cmp
dec
mov
out
out
in
ficompl
sbb
pop
nop
scas
nop
xor
inc
pop
flds
inc
or
sbb
or
test
cltd
jns
push
repnz
cli
pop
fidivs
push
jmp
es
das
xorb
scas
jge
push
cmp
push
add
into
les
and
shlb
outsb
add
sub
mov
fisubrs
fsincos
sub
movsl
jb
pop
xchg
or
std
xor
ss
bound
mov
xchg
ds
push
add
xor
mov
loopne
lahf
ret
mov
cwtl
es
in
lcall
cwtl
pop
cmp
xchg
lret
add
mov
scas
push
inc
jg
adc
jp
mov
adc
add
rclb
or
inc
stc
lea
cmp
shlb
and
hlt
popa
inc
adc
mov
test
cld
out
push
stc
inc
xchg
dec
sahf
dec
dec
push
dec
dec
dec
cld
fs
mov
scas
out
ret
repnz
test
addr16
ret
sbb
popa
sub
push
lods
stos
jle
jp
ljmp
sub
xor
out
stos
int3
ds
xchg
mov
xlat
mov
cmc
dec
icebp
push
cmpsb
mov
pop
add
std
fdivrs
je
dec
out
mov
cmc
dec
adc
cmp
dec
push
sub
inc
cltd
aas
cmp
push
cli
jp
lret
loopne
dec
sbb
dec
or
pushf
mov
icebp
xor
stos
xchg
push
lock
mov
test
push
insl
int3
outsl
jbe
mov
pushf
imul
mov
out
pop
call
sbb
loopne
cmc
add
jg
jae
mov
aas
mov
pop
mov
ret
orb
stos
stc
das
xchg
ret
xchg
pop
jle
jp
pop
fdivl
popa
push
fcoms
xchg
xchg
out
jns
dec
fsubrp
jns
push
test
xor
scas
push
int
icebp
out
test
and
sbb
or
sbb
subb
sbb
arpl
mov
rorb
add
les
sbb
push
rcrl
imul
sbb
jmp
add
dec
push
dec
call
pop
push
bound
sbb
insb
jnp
sbb
pop
adc
mov
and
call
in
add
js
jns
repz
xchg
leave
push
popa
add
mov
add
mov
loop
nop
pop
aad
push
fwait
iret
push
pop
dec
mov
test
popa
jecxz
clc
sub
pusha
setb
scas
fnstsw
jle
insb
call
lret
xor
in
stos
gs
test
cmp
movsl
rolb
out
cld
rcrl
sti
popf
hlt
mov
loopne
pusha
pop
daa
sub
inc
jmp
mov
movsl
cmpsb
mov
or
in
in
rorb
je
cmp
cli
and
in
lcall
mov
hlt
jae
push
mov
inc
shrb
jno
imul
inc
fwait
adc
pop
xchg
dec
test
aas
lods
xchg
cs
fistps
mov
mov
ljmp
aas
clc
dec
mov
xchg
xlat
jp
pop
pop
ret
mov
mov
iret
jbe
ret
fdivs
scas
mov
xorl
icebp
shrb
scas
test
push
xchg
fwait
stos
mov
pop
mov
lods
fnsave
sbb
and
ret
repz
lahf
pusha
sbb
sbbb
and
mov
int
das
rorb
mov
fwait
fs
jl
xlat
fisttps
or
push
jl
xchg
inc
test
shrl
xchg
push
lods
sub
fdivl
inc
cli
negb
les
cwtl
add
lods
dec
mov
aas
mov
mov
cs
test
sarb
movsl
icebp
les
push
scas
add
out
gs
mov
or
cld
cmc
int
mov
test
jnp
sub
lock
sbb
pcmpgtb
bound
sbb
loope
mov
addb
loope
scas
xchg
sbb
inc
icebp
dec
lcall
jae
arpl
out
leave
sub
ss
rcrb
imul
fisubs
jb
add
add
sbb
rorl
idivb
mov
fnstenv
nop
clc
push
push
mov
jecxz
xor
cmpsl
loopne
loope
aaa
mov
insl
push
das
mov
rcrb
push
fstpl
xor
cmpsl
push
or
jmp
dec
mov
js
push
stos
lods
cmp
add
dec
mov
add
push
iret
jae
imul
lods
lock
cmp
test
loope
xacquire
int
stc
and
add
jecxz
rcll
into
and
or
sbb
ljmp
jo
push
pop
jnp
dec
fdivrl
test
out
in
lea
and
sub
add
outsl
in
xor
hlt
movb
hlt
pop
cs
mov
insl
es
call
lds
jbe
movsb
lock
xchg
jl
mov
inc
in
push
cs
fwait
es
stos
and
mov
call
mov
cmpsb
loope
or
sub
sub
int
idivl
pop
out
fs
add
sbb
jb
mov
roll
inc
hlt
sub
test
popf
stc
out
shlb
mov
scas
pop
test
pop
fdivs
jae
ficomps
or
cmc
cmc
mov
and
aaa
test
jns
rcrl
int3
and
outsb
pop
icebp
inc
mov
call
dec
loopne
cltd
pop
jne
insl
in
int3
inc
add
outsb
jl
nop
test
add
add
scas
cltd
in
pop
mov
jecxz
adc
out
adc
push
and
loope
push
xchg
lds
xor
inc
lahf
mov
jb
sub
adc
jl
pop
adc
mov
test
mov
or
xor
aas
iret
scas
out
push
push
sbb
js
jae
leave
jnp
or
icebp
imul
inc
sahf
sbb
jg
xchg
out
fsubrl
aas
jns
mov
outsl
lcall
inc
sbb
jmp
xor
lods
lea
shll
inc
add
sbb
sbbb
loope
push
sbb
mov
out
out
and
or
sub
or
int3
xor
lods
addb
pop
mov
inc
sbb
data16
or
mov
cmc
sub
push
xor
pop
loope
and
mov
cmp
into
fiadds
mov
dec
ds
insl
inc
xchg
pop
loopne
xor
push
nop
cmp
mov
pop
mov
xor
dec
imul
adc
push
imul
mov
and
in
rolb
push
pop
adcl
xor
mov
lahf
in
push
cmp
aam
pop
sub
cmp
dec
mov
imul
lds
test
in
pop
add
mov
rorl
add
or
xchg
mov
mov
lahf
stc
gs
push
jge
dec
cmp
enter
push
iret
jne
dec
pop
xor
call
stos
or
pop
int
fstpt
mov
in
jmp
fstpt
dec
jp
cltd
in
shl
jge
into
pushf
das
and
sub
arpl
mov
cmp
and
or
dec
repnz
pop
inc
cmc
movsb
int3
xchg
dec
in
inc
mov
xchg
xchg
pushf
bound
fwait
loopne
jo
sub
mov
leave
xor
leave
stos
and
imul
mov
inc
pop
mov
lret
int
sbb
iret
lahf
aad
fiadds
ljmp
mov
rclb
in
aaa
gs
lods
lret
inc
mov
scas
in
jmp
adc
jg
dec
outsl
repz
cmc
mov
xor
stc
mov
jmp
mov
mov
pushl
pop
scas
cs
rorl
fidivs
mov
xchg
jg
and
ds
jmp
adc
push
dec
jae
mov
das
adc
lods
ret
inc
dec
ret
sub
pop
imul
inc
sub
xchg
scas
push
mov
mov
xchg
sarl
push
icebp
in
scas
adc
cwtl
pop
mov
enter
scas
mov
add
stc
and
stos
cmp
out
push
xor
mov
cld
dec
imul
fsts
loope
sbb
repnz
push
push
cli
das
frstor
insl
inc
adc
call
sbb
adc
inc
fcoml
add
lods
mov
lea
pop
inc
test
test
lret
enter
filds
push
int
push
xchg
jp
pop
fdivrs
rcr
and
lods
popa
mov
arpl
fisubs
pop
hlt
pop
mov
cmp
push
ja,pn
jns
pop
orl
mov
dec
movsb
testl
jp
mov
shrl
insl
movsl
test
das
mov
std
add
or
mov
roll
add
xor
add
fldt
loop
mov
and
mov
test
pushf
icebp
out
roll
xor
cmp
dec
lret
jns
aaa
lcall
push
popa
jmp
sbb
jge
rclb
inc
cld
subl
pushf
xor
cmc
out
xor
cmpsb
outsl
and
sbb
leave
fidivs
ljmp
cmp
jo
pop
adc
pushf
jne
repz
pop
xchg
jecxz
int3
add
test
or
or
add
add
pop
sbb
neg
pop
scas
int
xor
xchg
fcomip
stos
outsb
jmp
js
sar
and
scas
cmc
pop
test
shl
repz
xor
xor
or
inc
mul
int3
sub
leave
inc
jb
ja
xchg
negl
jle
mov
add
notb
cli
xchg
inc
and
pop
outsb
int3
aam
push
inc
adc
sbb
and
cmp
lds
outsb
sbb
mov
jbe
cld
cltd
dec
mov
sbb
imul
rorl
scas
jge
mov
push
int3
adc
inc
jle
cltd
inc
scas
sbb
jl
js
lret
inc
jmp
neg
jbe
sbb
inc
push
movsl
push
mov
mov
out
addr16
js
push
and
jns
push
aaa
pop
movsl
fnstenv
sahf
mov
jle
movsl
stos
pop
cwtl
popf
mov
lods
movsl
je
ss
and
int3
add
sbb
fnstenv
inc
or
aaa
stos
lahf
inc
sahf
mov
push
lret
xchg
adc
int3
or
nop
stc
mov
pop
lods
dec
dec
and
xlat
pop
lret
xchg
int3
jp
dec
mulb
sbb
xor
sub
cmpsb
adc
xchg
xor
fwait
pop
mov
js
mov
adc
jecxz
dec
mov
add
push
inc
int
jge
ja
lds
and
cmp
sub
stos
inc
cmpl
mov
sbb
arpl
ljmp
pop
lods
int
jp
dec
sti
jb
lcall
lods
ret
push
test
inc
icebp
add
add
or
bnd
test
ja
pushf
mov
pop
testb
fdiv
pop
and
adcl
push
jmp
jno
imul
xchg
jae
inc
popf
mov
adc
popa
notl
aas
jb
dec
inc
into
test
es
frstor
outsb
loopne
out
adcl
test
out
xor
fbstp
xchg
dec
ficoms
repz
orb
mov
or
les
call
cld
pop
lds
mov
int3
push
out
sub
mov
xor
lcall
jnp
rorb
cmp
xor
out
out
cmpl
out
fisttps
or
add
rcr
cmp
je
and
mov
jno
mov
push
cmp
lret
loope
test
mov
and
out
pop
jg
and
jecxz
pushf
aaa
or
push
pop
xorb
imul
divl
mov
mov
pop
fildll
mov
idivl
cltd
call
icebp
into
pop
movsl
hlt
je
cmp
scas
xchg
roll
sub
lahf
fisttpl
pop
push
pop
stos
and
adc
pop
incl
or
daa
adc
adc
jp
insl
es
adc
or
mov
scas
mov
loopne
jmp
sbb
inc
mov
mov
inc
sbb
push
xchg
je
inc
cmp
mov
jb
in
lds
xor
push
addr16
movsb
ret
paddb
push
adc
scas
filds
stc
rorl
loope
pop
out
jb
imul
sub
mov
rcr
in
popa
add
test
pop
cli
adc
inc
dec
out
dec
dec
stc
mov
jmp
cmp
pop
mov
add
in
ret
das
mov
mov
xchg
pop
xor
mov
and
in
outsl
dec
fs
nop
jnp
mov
stos
push
shrl
xchg
mov
xor
mov
jae
movsb
dec
sarb
dec
ss
fldt
push
fcomip
or
in
add
add
rolb
xchg
popf
movsl
imul
aas
out
mov
loopne
arpl
arpl
popf
dec
or
lahf
xlat
push
jne
adc
out
arpl
sub
xlat
js
imul
aaa
fdivrl
pusha
pop
into
push
dec
in
in
cmc
dec
push
pop
mov
daa
in
pop
bound
and
add
cwtl
imulb
mov
aaa
fidivrl
pop
scas
pop
xchg
cwtl
sbb
dec
imul
cwtl
data16
addb
pushf
jmp
mov
or
xchg
stc
insb
jns
xchg
or
leave
sub
testb
outsl
ja
into
daa
in
mov
or
sub
and
mov
sarl
add
mov
add
popa
adcl
xor
rorb
jne
iret
pop
or
das
addb
scas
ja
insl
xchg
lds
cmp
pop
lods
jmp
outsl
sbb
cmc
push
in
cmp
mov
subb
jge
divl
ds
xchg
jl
xchg
mov
movl
scas
lret
into
fld
roll
cmp
sti
mov
dec
push
add
gs
jmp
scas
mov
inc
pop
dec
lret
jl
out
test
bound
mov
pop
push
cs
nop
adc
sbb
pop
mov
leave
call
mov
xchg
adc
outsb
test
mov
or
push
pop
dec
test
punpckhwd
xchg
cmp
repz
les
xchg
pop
test
pop
js
cltd
pop
sbb
xor
ds
mov
and
test
xchg
and
push
shr
sti
and
xlat
cmp
cmp
cltd
daa
movsb
mov
enter
inc
mov
fbld
xchg
jg
hlt
add
pop
addl
push
or
xor
sub
int
mov
lahf
and
ljmp
dec
scas
cwtl
js
int
jns
mov
dec
cmp
sarl
int3
xchg
repz
cld
xor
dec
sbb
lock
sub
xchg
push
enter
inc
mov
jo
jo
icebp
neg
fcoms
inc
push
mov
cmpsl
imul
in
mov
pop
add
shrl
daa
pop
xlat
in
lods
xchg
fistl
mov
fwait
and
and
movl
es
aam
xor
mov
sub
into
outsl
cmpsl
sub
pop
and
mov
mov
ret
push
scas
xchg
mov
add
add
call
cmpsb
mov
mov
xor
pop
ss
push
out
cmp
pop
add
imul
add
adc
cmp
or
inc
outsl
shr
jge
inc
stc
je
gs
out
int
mov
sbb
int3
sbb
cmp
das
icebp
mov
ja
and
add
add
decl
bnd
cld
cs
jmp
dec
mov
and
dec
sbb
mov
cwtl
das
sub
inc
sbb
adc
push
lods
or
fs
sbb
cmpsb
mov
xchg
and
push
scas
xchg
sub
bound
imul
in
stos
pop
sbb
jne
mov
cli
scas
sahf
sub
mov
jb
rol
jns
inc
stos
mov
in
loope
test
xchg
push
aad
mov
sarl
iret
cld
dec
push
mov
jge
push
imul
rclb
sub
xchg
sti
pop
pop
into
sbb
inc
pop
mov
out
movsb
insl
push
scas
sub
out
sbb
daa
jp
sbb
mov
fadd
imul
sub
mov
clc
mov
pusha
pop
sub
xchg
test
mov
js
aaa
ss
inc
pushf
addb
movsb
icebp
mov
divl
or
push
and
repz
out
js
xchg
sub
mov
divl
add
push
data16
dec
lea
add
insb
test
js
mulb
les
mov
sub
cmc
aas
pop
pop
dec
mov
xchg
out
out
push
dec
jecxz
sbbb
addr16
mov
adc
out
xlat
gs
ret
incb
push
dec
cli
stos
repz
or
pop
push
lea
movsb
xor
jecxz
jmp
mov
ret
cmc
inc
or
arpl
fcompl
jl
fcoml
idivb
adc
dec
dec
sbb
call
jmp
cmp
incl
inc
mov
shlb
jl
je
int3
adcl
add
fmul
fidivl
out
mov
insb
or
pop
scas
movsb
sbb
jnp
pop
adc
sbb
add
jl
dec
imull
mov
add
add
mov
pop
mov
add
mov
into
push
loop
adc
cwtl
jp
mov
int3
pop
sbb
mov
mov
inc
sbb
outsl
push
sbbl
pop
jae
mov
rcrb
add
notl
pop
jmp
jne
add
clc
imul
push
or
and
dec
inc
push
test
stos
loope
or
inc
mov
add
out
ficomps
imulb
and
lahf
das
mov
lcall
xchg
xchg
cwtl
sbbb
add
sbb
insl
arpl
cltd
jecxz
xchg
mov
ficoml
leave
arpl
mov
mov
cld
in
jo
test
shlb
mov
shrb
pop
mov
add
mov
or
push
cmp
xchg
test
pusha
push
cwtl
pop
add
sti
push
sbb
inc
in
jmp
ja
lea
mov
scas
jle
xchg
ret
insl
dec
push
cmp
repnz
mov
sbb
mov
stos
cli
sbb
shll
mov
mov
jle
cmp
int3
cmp
les
pop
mov
stos
mov
and
dec
cli
or
out
pop
add
out
mov
cmp
fimull
aas
push
mov
sarl
sub
jp
mov
xorl
xor
xor
mov
cltd
andl
pop
mov
rorb
cmovl
mov
mov
sub
push
jle
mov
pop
pop
aaa
and
xor
lds
sub
fwait
pusha
test
pop
inc
add
push
dec
mov
inc
xor
mov
insl
jmp
movsl
jo
dec
nop
inc
in
mov
out
dec
ljmp
xchg
mov
xor
sbb
push
je
test
cld
mov
cli
dec
sar
or
fsubrs
inc
mov
js
out
iret
adc
clc
outsb
push
lods
or
loopne
pusha
pushf
sahf
in
and
dec
loope
cs
repnz
jecxz
fcmovne
push
mov
pusha
xor
ss
lahf
movsl
repnz
inc
mov
dec
repnz
lock
cld
jecxz
adc
fwait
shll
adc
inc
mov
mov
pop
cmc
scas
outsb
sahf
sahf
mov
dec
stc
dec
iret
inc
push
push
fidivs
lods
mov
xor
fnstcw
sbb
mov
data16
or
jns
mov
jne
ja
hlt
mov
cmpsb
jmp
jb
push
movsb
test
iret
and
mov
mov
pop
nop
xchg
adc
xchg
mov
pop
stc
jb
fldt
mov
mov
shr
outsl
jae
jge
jmp
cmp
push
mov
out
rcrl
adc
inc
mov
sub
cmpl
jge
xchg
cmp
cltd
sbb
rcll
gs
aad
mov
dec
iret
cmp
out
push
jl
mov
xchg
sub
andl
test
ret
lret
push
push
mov
sub
inc
jae
add
stc
cltd
dec
int3
lock
mov
notrack
stos
inc
inc
fmuls
int3
ja
fistpll
je
mov
mulb
mov
pop
rcll
icebp
adc
push
frstor
cmp
inc
dec
int
mov
loop
mov
loop
sbb
dec
jb
or
sub
mov
vfmsubpd
out
loop
xchg
mov
xor
lds
dec
insl
outsb
jp
dec
out
jle
out
outsb
and
je
xor
popf
mov
sbb
adc
mov
out
fistl
adc
sbb
and
sbb
lds
inc
push
neg
lds
pop
out
mov
jl
daa
ljmp
ljmp
mov
stc
test
inc
xchg
out
or
dec
in
mov
insl
loopne
jle
cmpsb
adcb
ds
cwtl
imul
sti
jecxz
add
mov
subl
inc
cs
push
leave
sub
cmp
mov
dec
out
in
cmp
xor
adc
inc
pop
adc
adc
in
push
icebp
pop
or
jnp
or
adc
mov
daa
jb
out
mov
data16
std
sahf
mov
pop
popa
aad
jnp
hlt
cwtl
stc
mov
dec
and
loope
add
pop
mov
xchg
adc
inc
outsb
cmp
ss
xor
fldcw
and
dec
and
xchg
es
popa
mov
sub
cmpsl
xchg
mov
dec
push
push
test
push
push
and
xor
inc
push
and
adc
lcall
mov
jb
popf
push
push
jmp
insb
idivb
cmpsb
lea
aam
lods
mov
stos
xchg
or
push
and
cwtl
sub
sbb
push
mov
arpl
loope
jnp
loopne
cmpl
mov
xlat
inc
xchg
and
xchg
xchg
enter
fstpl
repz
fneni(8087
jnp
cs
test
jp
inc
std
inc
gs
fsubs
repnz
jae
push
test
xchg
pushf
lods
in
stos
push
and
dec
sub
pop
stos
push
pusha
mov
cmp
push
xor
push
mov
loope
movsb
mov
loope
pushf
mov
mov
pushf
dec
xor
inc
fcomp
pop
dec
inc
loope
loope
lret
mov
push
sbb
sbb
dec
jl
adcl
add
sti
jg
sbb
ljmp
push
into
lock
or
or
ljmp
sub
mov
into
out
ds
les
aad
loopne
insl
aaa
adc
mov
fimull
inc
jmp
sub
pop
xchg
cmp
ss
pop
xchg
cli
imul
or
dec
sub
fmulp
xchg
and
pop
xor
sbb
add
mov
ret
es
ds
fistl
adc
sbb
repnz
push
rolb
dec
jno
mov
adc
cmp
xchg
inc
cmpsb
jecxz,pt
enter
inc
jbe
mov
mov
push
fsubrl
mov
mov
aaa
xchg
mov
sub
inc
scas
add
lcall
add
dec
lcall
sbb
test
les
cmc
jl
stos
loop
lahf
pop
push
mov
pop
enter
nop
imul
mov
add
leave
push
push
mov
int
inc
push
mov
dec
pop
sbb
sub
rorl
sbb
dec
mov
scas
xchg
mov
or
push
push
dec
mov
adc
sti
pop
cmp
int3
mov
cmp
jp
push
fcoms
mov
mov
sbb
inc
jae
mov
lret
or
push
ret
rcrb
fwait
mov
fwait
or
add
pop
inc
pusha
dec
insl
es
mov
push
mov
xchg
mov
jecxz
test
test
mov
in
inc
jecxz
jnp
shll
je
das
inc
insl
sub
ss
push
stos
cmpsb
or
sub
pusha
mov
and
wrmsr
pop
push
mov
inc
fwait
mov
and
push
jl
aam
pop
stc
sub
cltd
and
imul
imul
push
mov
mov
push
daa
cmc
jns
fcmovb
lock
cmp
adc
lds
jbe
aad
sub
rcrl
js
xchg
mov
jbe
sub
dec
cwtl
js
ficoml
add
test
mov
push
loopne
sbb
popf
jb
lret
enter
add
adc
and
or
add
xchg
repz
jo
xchg
dec
xlat
shrl
jns
xor
aad
hlt
aaa
js
in
xchg
pop
cmp
addr16
add
lea
jl
aaa
adc
xor
lahf
add
and
cmc
mov
nop
xchg
insl
xchg
push
or
mov
inc
int
adc
int
in
insb
cmpsb
jbe
mov
push
push
inc
jne
jno
imul
out
aam
inc
xchg
jo
pop
ljmp
test
jecxz
push
fwait
xchg
dec
scas
or
imul
popf
in
aam
mov
lea
xor
pusha
out
dec
push
pusha
push
and
cli
xor
sub
test
inc
fs
sbb
sub
dec
inc
fwait
ja
lret
int3
xchg
sub
cmp
adc
test
pop
test
cmp
fwait
push
cmp
andl
push
rcrb
stos
.byte
movsl
movb
