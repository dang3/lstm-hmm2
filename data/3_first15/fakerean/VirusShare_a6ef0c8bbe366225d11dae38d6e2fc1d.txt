mov
imul
subb
cmp
loopne
inc
ret
push
dec
int
bound
vmovaps
dec
arpl
andl
aaa
jne
call
adc
push
scas
stos
pop
cltd
test
test
ficoms
and
mov
sti
andb
ss
mov
imul
jl
jb
xchg
or
sbb
in
cltd
xor
adc
aas
mov
or
fcoml
mov
jmp
sub
jp
loope
sahf
aam
out
flds
xchg
or
into
jl
dec
cs
jb
push
ljmp
cmp
mov
or
loopne
mov
aaa
xorps
sti
adc
add
fneni(8087
adc
notb
and
dec
and
push
add
outsl
pushf
jl
adc
in
mov
loop
jbe
and
inc
add
push
push
adc
pop
jo
mov
ljmp
lret
dec
adc
jp
jns
mov
pop
rcrl
cltd
add
mov
xchg
or
xchg
and
cli
mov
cmpsl
addb
and
scas
pop
out
adc
sub
lock
or
jb
lahf
cli
adc
int3
mov
arpl
adc
hlt
leave
fsubrl
jg
mov
pop
gs
lret
push
pop
sbb
pusha
xor
cmc
inc
fiadds
fyl2xp1
inc
xor
dec
rcrb
xchg
loop
insl
add
mov
rcrb
pop
jp
into
arpl
mov
xchg
push
cli
sbb
xchg
scas
adc
aas
rorl
jmp
jge
and
loope
push
les
loopne
ficoml
aaa
lods
arpl
mov
jg
std
rcrb
movsb
add
clc
loopne
lret
mov
popa
xor
inc
sbb
jne
fcmovnb
adc
push
lahf
scas
cmp
dec
inc
xor
mov
inc
sub
cltd
nop
call
xor
clc
enter
stos
add
in
mov
add
cmpsb
lock
lods
dec
sti
mov
arpl
mov
inc
mov
outsl
pop
sub
into
push
dec
lcall
cmp
loopne
mov
test
lods
xor
enter
clc
jl
and
mov
mov
xchg
mov
ds
outsl
outsl
iret
hlt
pop
inc
inc
add
test
fwait
imul
loopne
and
adc
xchg
xor
dec
outsl
mov
adc
leave
mov
push
add
sub
mov
je
scas
sbb
cs
repnz
cmp
pop
bound
inc
out
adc
data16
mov
bound
cmpsb
mov
push
iret
xchg
mov
ljmp
jne
testb
xchg
pusha
jl
add
sbb
lahf
adc
add
mov
orl
xor
xchg
pop
mov
xchg
mov
test
sbb
sar
lods
sbb
add
pop
sub
js
rorb
pop
daa
lret
inc
xchg
mov
test
add
dec
pop
mov
push
pop
fidivrl
mov
dec
ja
push
jge
pop
mov
xor
push
inc
sbb
dec
or
jmp
push
xor
mov
call
mov
adc
pop
sub
jo
and
cmp
add
lods
cmc
jmp
arpl
imul
sub
nop
scas
mov
pusha
jns
cmp
mov
fsubrl
bound
inc
lods
jne
shlb
ret
and
xchg
pushf
test
jp
neg
inc
add
repz
dec
push
ss
lret
push
mov
and
and
or
push
xchg
inc
mov
lret
bound
lods
test
xor
loopne
pop
aaa
hlt
into
pop
inc
hlt
in
clc
sbb
lahf
xor
mov
jnp
into
fs
je
sbb
cli
sub
jnp
mov
sub
push
jle
popf
insb
stos
dec
sub
call
xor
sarl
sbb
rorl
movsb
in
mov
push
push
pop
or
pop
stc
mov
cmpb
clc
scas
cmp
jae
jge
js
lret
sub
sbb
adc
xchg
or
daa
xchg
repz
call
stc
lods
push
sub
ret
popf
cli
cld
pop
mov
pop
sub
jno
xor
fildl
out
dec
jns
or
popl
push
repnz
std
bnd
int
mov
pop
mov
loop
push
or
or
xor
jmp
jnp
test
mov
add
ds
and
lods
push
and
pop
jno
inc
scas
data16
xlat
movsb
sub
lahf
mov
adc
sbb
lcall
arpl
std
js
sbb
ja
hlt
sub
pop
add
jae
rclb
pop
inc
data16
aad
pop
pop
int
and
dec
sbb
ljmp
sbb
adc
jnp
mov
mov
jp
enter
mov
dec
incb
jge
pop
inc
push
xor
jmp
rcrl
js
sbb
cld
mov
pusha
testb
jmp
cmp
fmull
sub
sbb
insl
daa
add
push
cmp
lahf
or
xor
add
sbb
cli
mov
scas
outsb
lods
sub
mov
xchg
mov
cs
in
xchg
dec
pop
test
mov
adc
mov
or
sub
cmc
imul
dec
stc
fcom
or
add
addr16
les
divb
sahf
enter
adc
icebp
scas
mov
sarl
jo
push
loope
add
jmp
xor
xchg
pop
and
xchg
outsl
add
dec
rcll
rcl
call
xchg
xor
loopne
test
test
mov
push
movsb
mov
inc
loope
pop
jge
jp
and
clc
jle
test
cmp
les
sti
inc
xor
loope
push
jo
pop
scas
insl
aam
mov
dec
call
push
cwtl
scas
mov
mov
pop
jle
add
in
mov
or
mov
mov
push
in
sarl
add
or
or
pop
pop
test
scas
ret
cmc
mov
cmp
movsl
aas
jp
ficoml
sti
or
addr16
add
repz
jge,pn
adc
cltd
inc
inc
outsl
fidivrl
stos
outsb
call
cmpsl
pusha
outsb
lcall
lret
cli
sbb
jmp
adc
adc
xor
mov
fcomps
sbb
inc
dec
push
out
nop
sbb
rcrb
cs
int
outsl
mov
jo
pushf
add
sub
jg
mov
mov
std
push
adc
sahf
sti
and
fisubrl
add
out
in
test
mov
stos
jg
fwait
push
push
cmpsb
and
inc
cmp
out
out
jb
fldt
sub
jl
popf
int
mov
jmp
fadd
stos
test
push
sub
ss
cmp
sbb
repnz
cmc
loope
int
add
les
fisttpll
push
xor
test
mov
mov
aam
into
or
xchg
and
rolb
and
jmp
cmc
jl
outsb
cmc
inc
fists
ret
xor
mov
push
test
les
mul
mov
ja
insb
pushfw
pop
sbb
scas
gs
iret
sahf
lret
mov
popf
pop
xor
imul
or
dec
add
push
daa
in
jmp
xor
mov
xor
push
or
testb
insl
enter
push
push
jle
push
jmp
mov
adc
aaa
pop
and
push
lea
out
lcall
adc
int3
out
call
in
push
xchg
pop
in
adc
mov
xor
sbb
rorl
inc
adc
ss
add
aam
inc
pushl
xor
sbb
mov
stos
push
loopne
push
mov
lret
push
call
fdiv
and
mov
jp
std
dec
xor
cmp
int
sub
aad
sbb
sub
fxch
insb
iret
xor
or
popf
jp
push
mov
arpl
dec
into
into
add
stos
repnz
lods
loopne
xor
add
fs
inc
dec
sub
pop
in
sbb
pop
ljmp
in
stos
xchg
mov
or
out
leave
jmp
push
clc
cmpsl
testl
dec
pop
cli
arpl
ljmp
inc
pop
jecxz
jl
dec
push
dec
les
xchg
les
adc
idivl
xor
sub
xchg
pop
cmc
dec
notb
adc
fadds
sbb
xchg
add
cmc
repnz
rcr
loopne
pop
xor
cltd
stos
das
call
sub
subb
cwtl
loop
int
push
xlat
cmpb
in
in
sub
pushf
pop
mov
and
and
xchg
lock
lret
jl
sub
mov
inc
stc
leave
xchg
cltd
mov
pop
pop
stc
shlb
push
pop
data16
in
pop
xor
push
into
sub
mov
rcrb
mov
cltd
ds
and
cs
imul
inc
add
and
test
pop
xchg
rolb
add
jns
pop
xor
mov
orl
mov
bswap
test
jae,pn
inc
add
daa
mov
pop
jge
enter
push
xor
mov
pop
add
fsub
aas
or
daa
pop
lods
data16
insl
sub
jo
and
adc
sub
gs
push
pop
push
cmp
add
stos
xor
pop
push
push
enter
or
scas
or
repnz
mov
hlt
or
inc
or
xchg
cmc
or
or
in
aad
enter
jp
adc
loopne
sub
punpckhbw
lds
aam
mov
fwait
mov
inc
push
in
xchg
and
and
push
shrb
iret
fst
daa
inc
iret
xor
mov
insb
add
aad
addr16
mov
stos
push
cmp
mov
pop
cmp
in
cld
mov
mov
ljmp
push
sarl
adc
mov
es
cmp
push
mov
jo
xor
cmpb
xchg
mov
cmpsl
stos
add
dec
mov
push
pop
cmp
mov
pushf
lcall
negl
dec
into
pop
or
inc
push
ficomps
jb
repz
rcl
dec
mov
repnz
xchg
aaa
imul
push
outsl
mov
jmp
cmpl
push
inc
mov
mov
dec
gs
pop
mov
and
adc
fiadds
push
loopne
sbb
pop
jmp
xchg
test
sub
imul
aam
ffree
mov
fwait
divl
push
jg
enter
pushf
iret
cmp
ret
or
add
pop
jae
dec
das
and
mov
out
mov
xor
pop
xor
js
je
pushf
mov
lret
push
lea
hlt
xchg
aam
or
mov
add
pop
fwait
mov
inc
pop
inc
cmp
mov
inc
std
and
stos
mov
sub
sub
mov
mov
jbe
arpl
data16
jnp
ja
inc
movsb
mov
push
push
pop
inc
cltd
or
or
sub
int3
data16
je
out
iret
xor
push
ret
cmp
sub
fwait
popa
sbb
add
add
or
repnz
orb
mov
cmp
jb
std
jne
fstpl
mov
mov
movsl
leave
repz
leave
popa
fstps
add
mov
xor
mov
arpl
sbb
rol
lret
adc
movsb
xchg
pop
xor
scas
push
aas
cmp
lret
or
jmp
fcomps
out
mov
mov
test
lahf
fs
in
sbb
stos
popa
rcll
test
and
xlat
ja
sbb
inc
iret
fsts
jge
mov
loope
adcl
jmp
addr16
xor
xchg
in
and
out
mov
dec
pop
or
xor
cmp
xor
das
mov
fnstsw
add
sahf
mov
fwait
sbb
movsl
movsl
lret
push
inc
shl
push
jnp
mov
push
lret
stos
popa
repz
push
lahf
sub
hlt
aam
mov
arpl
ljmp
outsl
ds
dec
jns
jbe
fdivs
bound
mov
mov
movl
leave
sbb
test
aaa
xchg
aaa
xor
test
lret
xor
push
dec
daa
aam
sbb
mov
mov
xchg
aas
jge
push
mov
jae
adc
adc
incb
xchg
stos
imul
in
mov
test
dec
in
lret
xorb
es
mov
push
lods
stc
jg
insb
push
loop
stos
lret
subl
fiadds
fcompl
jmp
lods
inc
lods
add
clc
ja
test
xchg
dec
jbe
data16
push
or
nop
loop
mov
loop
cmc
ret
xchg
sub
fisubl
into
mov
aam
pop
sbb
pop
aam
sbb
inc
dec
pop
cmp
insb
cmp
popa
into
cmpsl
rcll
mov
bound
mov
pop
dec
ret
les
pop
push
test
jle
cwtl
xlat
into
jl
ret
cmp
loope
xor
das
pop
mov
rorb
and
add
addl
add
xchg
arpl
dec
popa
push
inc
push
push
data16
xor
xor
pushf
xor
push
and
adcl
mov
sbb
rcll
xor
lea
add
xor
es
push
lret
add
aaa
std
sub
jmp
or
xchg
dec
or
dec
lods
cwtd
loop
stos
int3
sub
int3
jno
mov
mov
jmp
rclb
ret
aam
and
popa
mov
add
cmp
xchg
mov
repnz
pop
out
and
pop
cmc
mov
mov
lea
jle
inc
inc
adc
jge
xor
xchg
mov
mov
and
cmp
sbb
or
jle
out
or
popf
cmp
xchg
xchg
ja
aas
inc
out
add
negb
mov
cmpsl
mov
jmp
and
xor
scas
stos
loop
stc
xor
arpl
das
dec
mov
lretw
sbb
adc
mov
push
call
push
pop
push
mov
push
inc
test
xchg
js
xchg
shr
xchg
test
outsl
inc
mov
pushl
jnp
into
aam
adc
lea
jmp
cwtl
xchg
dec
insb
mull
test
jecxz
inc
sub
popf
popa
decl
and
adc
ret
ror
mov
xchg
xchg
fnstsw
std
enter
xor
or
and
xchg
inc
shlb
sti
fldl
leave
movsl
gs
enter
addr16
dec
gs
stos
mov
cmp
mov
fbstp
jg
inc
add
lret
sti
sub
ret
xor
add
movsl
fimuls
sbb
das
and
push
popa
es
xlat
or
xor
pushw
out
push
bound
or
dec
lods
aad
sbb
mov
repnz
nopl
push
adcb
xchg
jb
in
lret
stos
push
inc
mov
cld
xor
mov
into
out
sub
cwtl
icebp
divb
dec
ret
aam
inc
pop
sbb
mov
xor
aas
or
xlat
dec
push
ds
aam
or
into
fs
dec
popa
mov
mov
cmpsb
xorb
daa
dec
das
pusha
cmp
dec
cmpsb
mov
lock
add
mov
cmp
cmp
or
cli
inc
and
push
and
aaa
xchg
in
mov
add
outsb
cmpsb
into
stos
leave
lods
sub
imul
push
mov
insl
aas
cmp
jns
leave
adc
fs
in
add
bound
adc
jg
adc
mov
jbe
aam
jle
and
or
sbb
daa
test
ds
mov
icebp
jge
inc
or
ja
dec
pop
fbstp
cmp
xchg
jno
jg
xor
xchg
fistpll
addr16
sbb
shrb
mov
fiaddl
in
push
in
lods
dec
mov
clc
pop
aas
mov
sbb
add
aad
dec
sub
shrb
inc
test
xor
jmp
es
mov
mov
mov
loop
pop
mov
mov
mov
mov
stos
add
dec
adc
fmuls
push
dec
inc
scas
bnd
fchs
push
push
add
push
or
cmp
mov
scas
rolb
or
pop
mov
push
js
mov
cmp
add
sbb
mov
sbb
adc
loope
imul
lret
loopne
and
in
xor
pop
cmp
pop
and
scas
cmc
imul
call
xchg
sbb
xor
inc
xchg
xor
pop
cs
fsts
sbbb
jne
push
inc
sbb
lcall
iret
in
popa
mov
iret
fidivrl
lock
stos
cmpsl
icebp
test
or
pop
mov
mov
jns
mov
or
pusha
dec
cmp
repnz
idivb
iret
pop
jg
repz
dec
and
inc
movsl
negl
jmp
push
jp
out
fdivr
pop
stos
inc
lea
adc
insb
mov
fldl
icebp
cltd
mov
sub
scas
into
lock
mov
mov
add
mov
fdivrs
sub
cmp
ja
or
sbb
or
idiv
ror
sbb
sub
mov
push
and
leave
lods
jns
jge
pusha
mov
sub
test
fistps
shr
inc
ficompl
loop
mov
pop
jnp
mov
add
push
loope
lcall
sub
inc
inc
stc
imul
mov
sub
loope
icebp
aaa
cmpsb
pop
dec
inc
and
nop
jp
adc
lret
adc
push
repz
jbe
je
loop
and
xor
lahf
stc
out
arpl
gs
xbegin
cmpsl
cmpsb
sub
inc
inc
and
iret
adc
into
mov
add
cld
push
mov
jg
or
punpcklwd
es
xchg
or
xchg
in
cwtl
jmp
js
fwait
sub
mov
pushf
lods
lea
cmpsl
vpsubsw
jmp
mov
sub
push
cmpb
inc
mov
arpl
fmul
adc
or
pop
cmpsl
scas
cs
hlt
mov
call
nop
adc
in
fists
push
test
lret
in
xchg
int3
cmpsb
and
mov
xchg
pusha
sub
std
xchg
jb
jmp
sbb
in
addr16
cltd
inc
cmp
dec
mov
addl
idivl
lret
sub
xchg
in
xchg
andb
test
sarl
mov
push
and
out
fistpll
inc
pop
lds
test
xor
pop
pop
and
ja
ja
pop
mov
int3
xchg
ret
clc
pop
testb
or
test
inc
xchg
pop
lods
fs
call
dec
add
dec
mov
and
mov
push
cmpsb
dec
data16
js
cltd
mov
pop
jp
add
mov
call
xor
xchg
adc
or
hlt
inc
mov
jns
aam
jbe
pop
fs
xchg
call
jb
in
shlb
dec
add
js
xchg
adc
jno
enter
push
subb
dec
fscale
push
loop
out
sub
mov
mov
test
jecxz
sub
fsubrl
testl
aas
cmp
ret
cmc
je
pop
fistpl
add
and
pop
push
jno
or
jg,pt
inc
inc
icebp
sub
adc
push
sbb
outsb
and
cmp
test
int
outsb
mov
dec
lret
out
jge
test
mov
je
subb
mov
mov
cwtl
in
mov
push
sub
bound
mov
stos
jmp
inc
fwait
pop
cmpsl
ficoml
mov
fcmovnb
daa
fwait
mov
jns
sahf
fsubs
mov
loopne
mov
push
jecxz
mov
out
scas
outsl
in
mov
sbb
or
xlat
popf
push
mov
xor
lods
xor
mov
frstor
jne
mov
repnz
push
dec
push
push
pop
js
add
das
testl
sub
xchg
cwtl
xchg
sahf
mov
inc
cmp
push
cmp
jge
pop
pop
aaa
rorb
je
lret
out
adc
xor
xchg
adc
test
pop
daa
mov
filds
das
xor
ja
lcall
rorl
out
movsb
and
scas
push
adc
sbb
pop
and
shl
vmovhps
or
movl
mov
loopne
push
ret
int3
add
pop
das
cmp
add
push
cwtl
repz
inc
push
movb
push
in
dec
sti
push
add
xor
mov
xchg
outsb
and
or
stos
fsubrs
and
in
jo
fwait
out
aaa
inc
dec
orb
ja
testl
out
std
lahf
mov
fsubp
dec
jo
pusha
fidivl
push
loopne
adc
inc
sbbb
and
jge
in
jg
lods
cs
cmpsb
les
inc
xor
add
outsl
xor
inc
sub
and
cld
xchg
dec
call
out
in
clc
ret
js
fdiv
pop
or
ja
enter
jo
cmpl
fcoms
sbb
cmp
and
lcall
push
dec
cli
sub
push
or
cmp
lret
scas
jnp
xchg
sar
and
out
repnz
leave
rorb
mov
mov
out
xor
or
sub
xchg
mov
sub
push
lret
inc
pop
dec
scas
daa
dec
or
dec
ret
add
sbb
inc
stc
pop
mov
jl
fdivr
push
adc
xor
shll
daa
pushf
outsb
xchg
mov
mov
cmc
cmp
test
xchg
js
daa
dec
pop
push
dec
mov
push
into
lds
push
cmpsl
mov
fcmovu
mov
arpl
mov
adc
test
jo
pop
hlt
adc
iret
xlat
jns
sub
jecxz
push
cwtl
mov
mov
test
into
dec
sbb
and
pop
jbe
mov
call
xor
aam
bound
sbb
pop
inc
mov
dec
xchg
cmp
push
dec
cmp
mov
js
out
xchg
test
sub
in
sub
inc
pop
negb
mov
pushf
mov
mov
push
jo
ss
sub
jno
test
xor
mov
addr16
test
mov
and
jbe
andb
sbb
dec
cmp
pop
push
arpl
es
outsl
test
sub
rcll
inc
adc
xor
adc
outsl
lea
sub
pop
xchg
loopne
test
lret
lods
addr16
das
xor
mov
js
pop
test
loopne
or
jb
out
jmp
bound
dec
call
adc
loopne
lea
pop
jg
mov
popf
mov
enter
dec
dec
adc
dec
mov
adc
popf
sahf
cmp
jb
lcall
add
imul
or
jnp
lods
or
or
sub
and
cmpsb
dec
mov
and
out
xchg
xor
sbb
loop
pop
movsb
nop
ljmp
fldcw
jmp
add
pushf
mov
cmp
adc
mov
cs
stc
push
call
dec
pushf
das
add
mov
iret
cmp
push
inc
sub
sub
lods
pop
les
mulb
aas
aaa
pop
xchg
sub
cltd
jecxz
cmpsl
hlt
enter
xchg
sub
ss
and
pop
xor
test
mov
outsb
popl
or
add
adc
js
mov
jl
sbb
sbb
or
cmp
in
cld
rcrb
js
in
test
push
mov
sub
jge
stos
and
sub
out
fdivs
outsl
ret
mov
jg
cmp
mov
adc
sbb
push
dec
mov
and
lahf
and
shl
fldl
incl
push
lods
sbb
fstpt
cs
and
sub
mov
dec
xchg
lods
cmc
das
jbe
xor
lea
xor
imul
mov
add
xchg
mov
movsl
lods
orl
mov
pushf
xchg
xchg
sti
test
sbb
out
inc
or
xchg
aad
push
sbb
sti
shrl
mov
pop
sahf
pop
and
xor
mov
fst
leave
sbb
and
mov
adc
and
ja
fisttpll
and
pushf
dec
into
push
outsl
jbe
mov
jns
iret
add
mov
push
mov
movsb
outsb
push
pop
mov
and
jmp
inc
test
and
into
sti
das
js
pop
ds
sub
and
push
push
setle
add
int3
push
mov
mov
jb
out
fisttpl
mov
aam
repz
and
cmpsb
pop
xor
add
pop
add
cli
pusha
push
jnp
shrb
sub
push
and
fs
dec
adc
pop
sbb
rcr
lods
ror
popf
push
push
and
jb
xchg
fs
popa
rorl
bound
outsl
insb
test
cmp
jae
das
popf
sahf
dec
cmpsb
jae
pushf
test
lret
inc
into
sbb
xorl
cwtl
imul
mov
jns
inc
xor
mov
sti
mov
js
ljmp
pmaxub
cmpsl
or
sbb
sub
mov
ja
movsl
call
nop
cli
adc
dec
das
lea
stos
cmp
fnsave
ljmp
mov
loope
adc
in
das
sub
movsb
ja
out
push
sub
xchg
ljmp
fs
pop
mov
add
arpl
adc
inc
scas
aam
les
xchg
xor
sub
sbb
or
les
mov
jo
iret
adc
enter
pop
stos
int
cmp
mov
inc
stos
dec
cmpsb
in
sub
lret
fmuls
icebp
and
sub
dec
mov
aam
les
mov
rcr
daa
cmpsb
aas
or
dec
rcrl
out
fldt
jnp
xchg
inc
sbb
test
adc
hlt
std
xor
jp
sbbl
lret
or
mov
dec
push
cwtl
or
int3
add
loop
std
adc
pop
pop
inc
loopne
lahf
test
push
mov
out
pop
cmp
push
jmp
push
js
mov
movsb
popa
stos
repnz
mov
add
jp
aas
xlat
fcmovbe
pushf
jno
fnstcw
and
push
addr16
cmp
outsl
test
push
inc
mov
cltd
cmp
mov
add
xor
cld
xor
in
or
pop
pop
pop
xor
pop
and
daa
fwait
in
cltd
aas
xchg
push
inc
jb
daa
xlat
ljmp
cld
add
ljmp
int3
outsl
fiadds
call
cmc
jo
pushf
stos
mov
test
jle
fimuls
or
adc
sub
sbb
jae
stc
fdivs
mov
imul
movsb
lahf
decl
stos
dec
mov
fiaddl
les
push
nop
divb
mov
xor
inc
mov
inc
stos
mov
addr16
insb
mov
pushf
test
dec
lock
mov
popa
inc
mulb
push
adc
out
or
nop
inc
ret
jne
inc
and
mov
adcl
xor
inc
fcoml
push
loope
push
pop
push
rcr
mov
sub
and
pop
push
lret
inc
fcmovne
imul
jge
dec
mov
adc
aaa
int
cmp
scas
dec
call
cmp
pop
mov
xchg
sub
dec
insl
ss
ret
inc
jns
jmp
cmp
shlb
leave
sbb
xor
ja
sbb
adc
mov
cmp
hlt
mov
push
pop
popa
lods
xchg
jns
add
jno
pop
cmpsb
jmp
jle
add
sub
sbb
mov
int
or
testl
outsl
dec
orl
adc
dec
addr16
dec
cmp
inc
push
ret
xchg
cmp
cmp
and
xlat
pop
mov
ret
out
loope
dec
sub
out
nop
ss
aas
adcl
lea
sti
pop
sbb
scas
mov
pop
enter
cltd
inc
fisubrs
lea
ret
dec
or
das
add
sahf
outsb
mov
cmp
insl
or
dec
adc
sbb
out
dec
data16
xchg
idiv
jp
cmp
push
hlt
xlat
mov
rcl
lret
jp
add
add
mov
mov
jecxz
in
jl
push
ja
dec
enter
ret
sub
add
inc
in
lds
rol
and
das
lret
add
cmp
js
sub
test
adc
sti
imul
mov
or
lahf
test
sub
mov
imul
pop
or
lret
cmp
adc
sbb
movsl
cmp
clc
cltd
shrb
or
repz
cs
lock
adc
dec
imul
push
adc
mov
push
test
mov
movsl
pop
dec
lahf
js
mov
adc
nop
fidivrl
pop
lock
inc
push
shl
in
or
stos
and
mov
scas
xor
fdivl
jg
sbb
push
cli
mov
arpl
xor
in
movsb
aas
mov
sub
mov
jl
nop
dec
add
pop
std
dec
jo
in
loopne
incl
mov
in
add
dec
push
adc
xchg
psadbw
and
jo
sbb
test
cmp
pop
or
fsub
ret
push
sbb
es
loop
stos
push
cmp
div
test
ljmp
mov
add
adc
or
sti
add
call
inc
xor
and
jge
mov
push
ds
pushf
add
mov
std
push
sbb
mov
dec
clc
js
test
mov
divl
aam
mov
and
jge
inc
out
lcall
jge
jb
sub
xchg
cmp
dec
cmp
test
testb
leave
adc
pusha
xchg
or
fdivr
jae
pop
xchg
push
sahf
ret
pop
icebp
scas
sub
jo,pt
pop
cmp
sub
mov
or
sub
xchg
shlb
ja
cmp
outsl
repnz
in
jo
mov
pop
jp
dec
movsb
inc
aad
mov
bound
out
jg
add
hlt
out
sub
cld
pusha
sahf
pop
loopne
adc
in
fnsave
sub
mov
gs
icebp
pop
pop
and
xor
mov
fisubs
ret
jmp
dec
repnz
fnstsw
or
dec
pop
sbb
test
or
xlat
pusha
lods
mov
arpl
xor
jp
pop
rolb
sbb
shll
loopne
mov
ja
stc
push
mov
adc
ror
pop
inc
adc
repnz
sbb
pushf
jge
addr16
xor
mov
mov
ret
add
mov
arpl
mov
popa
mov
xchg
dec
aam
fstpl
mov
mov
setnp
std
out
cwtd
addr16
imul
cld
dec
int
cli
outsb
lods
int
ficomps
pushf
sbbb
decb
inc
sbb
sub
out
adc
mov
cmc
push
mov
mov
faddl
in
xor
sbb
and
push
mov
jnp
fsts
inc
ds
xor
jnp
inc
add
cs
in
pop
cmp
adc
jb
xchg
push
adc
pop
mov
iret
sbbb
filds
push
pop
push
sub
sbb
negb
pop
or
popa
out
cmp
pop
ja
cmp
pop
adc
mov
and
dec
out
mov
pop
jno
pop
sbb
pop
xchg
xchg
loopne
hlt
and
add
sbb
arpl
pop
pop
inc
cmpsl
add
lock
pop
cmpsl
jl
push
jle
push
sbb
inc
sbb
fs
sti
cmp
lahf
andb
or
cld
add
test
xchg
cmc
popa
pop
cmp
ja
pop
shr
dec
addb
jecxz
jmp
test
in
pop
into
ficoms
push
movsb
ljmp
sbb
dec
and
and
bound
ret
dec
mov
cltd
jns
mov
push
jecxz
std
rol
ja
stos
mov
test
push
add
scas
add
dec
cmpsl
inc
fistl
pop
popf
dec
sub
cmp
loop
addr16
dec
les
mov
push
push
xchg
push
sarb
mov
bound
in
sti
test
test
rcr
popf
mov
ljmp
xor
mov
loope
enter
shlb
inc
xchg
mov
xor
mov
mov
sub
mov
lock
or
or
in
inc
cmc
add
out
ret
clc
in
mov
into
xor
xor
or
imul
xor
jnp
sub
mov
shlb
mov
rcr
dec
lock
xchg
mov
xchg
cmp
dec
adc
adc
xlat
sbb
mov
insb
or
add
lods
mov
repnz
pop
lea
pop
mov
or
sub
fnstsw
loop
shl
orl
cwtl
repnz
scas
imul
rcrl
cmpsl
js
sub
mov
les
insl
inc
sbb
je
jle
xchg
cld
aad
es
sti
sub
push
enter
mov
xor
and
cmpl
icebp
ffree
stc
cmp
lds
jbe
dec
fidivs
ds
rcr
enter
adcl
xor
lods
xchg
jg
pop
out
gs
js
das
fiaddl
pop
rcr
lods
inc
mov
add
fsubs
je
add
jp
stos
ja
pop
gs
cwtl
mov
pop
stos
aaa
add
ret
push
xchg
lcall
xor
xor
add
xchg
out
xchg
fidivs
mov
sub
fldenv
xchg
andnps
xor
les
cmp
les
push
inc
stos
sbb
xchg
jno
ss
loope
hlt
in
fdivl
sub
iret
sbb
push
fldenv
sahf
cwtl
xchg
mov
inc
subb
test
leave
insl
shrb
push
pusha
mov
push
sub
pop
addr16
push
push
roll
sub
jmp
xchg
mov
or
mov
mov
out
jno
xchg
in
into
je
stos
decb
cwtl
pop
xor
and
repz
movsb
insl
push
js
adc
push
in
out
pop
aas
mov
bound
add
jp
daa
addr16
sub
icebp
adc
pop
and
mov
lcall
xchg
pop
mov
jae
mov
stc
adc
ss
out
out
mov
mov
mull
cltd
lea
add
dec
fstps
lea
add
jne
jecxz
mov
movsb
xchg
sub
mov
xor
mov
dec
leave
xor
faddp
push
inc
or
inc
mov
dec
loop
popf
lret
jmp
adc
dec
pop
hlt
mov
out
stos
dec
or
push
ljmp
jl
imul
fcmovnbe
push
add
lods
and
cmp
xchg
mov
mov
jp
test
sub
and
adcl
push
mov
pusha
mov
jmp
lcall
xchg
out
mov
rclb
pop
mov
loopne
aam
aam
mov
pop
xchg
cld
aam
test
fidivl
fcmovb
jne
loope
mov
cmpsb
pop
bound
fildl
inc
fs
push
mov
ret
cmpsl
test
pop
popf
xor
add
insl
add
pop
xchg
xchg
out
adc
mov
outsl
sbb
add
or
push
test
shll
fstps
call
jge
mov
mov
jecxz
in
push
inc
ds
repnz
or
pusha
dec
or
add
pushf
mov
daa
sbb
dec
mov
xlat
push
inc
sbb
fisttpll
das
sahf
lcall
imul
mov
mov
repz
sub
xchg
jge
movsb
shll
aas
jne
pusha
xor
adc
je
jae
jge
mov
lcall
in
movsl
adc
mov
sub
xor
popa
pusha
mov
insl
mov
repnz
sbb
mov
mov
cmp
pop
in
mov
mov
and
push
mov
das
xchg
or
js
cltd
adc
xchg
mov
imul
xchg
loop
out
lea
xchg
push
jb
mov
inc
leave
ja
fstpt
lods
scas
inc
int
cmp
pop
sub
push
std
sub
repz
xchg
shlb
or
fcomi
pop
or
les
addr16
xor
ss
fstpt
lcall
adc
bound
mov
scas
mov
jmp
or
and
loop
dec
fbld
dec
inc
jns
enter
inc
xchg
rcr
and
cmp
lahf
or
mov
setnp
and
push
add
and
xchg
pop
mov
inc
sub
addr16
pop
and
test
fwait
sti
ret
add
mov
les
add
push
adc
popa
add
notb
mov
loop
xor
lods
ret
lock
jae
mov
incl
mov
test
sbb
jmp
rol
rcl
outsb
gs
mov
js
lods
xorb
xchg
or
cmpsl
mov
les
fcomp
sbb
cwtl
push
in
xchg
push
jl
movsl
cmc
std
push
fisubl
inc
push
mov
mov
aas
mov
push
pop
add
bound
cmp
lahf
roll
pusha
dec
bswap
ja
cmp
icebp
and
testb
mov
pop
lods
mov
mov
pop
mov
loop
cmp
push
ds
gs
dec
ljmp
push
test
or
lds
scas
mov
inc
or
fxch
cltd
cs
pop
xor
jg
stc
ja
repz
test
add
jae
jp
mov
pop
dec
sub
icebp
leave
leave
pop
cmp
insb
ficoms
or
addb
pop
inc
icebp
inc
scas
jns
mov
mov
stc
test
pop
jl
dec
pop
out
sub
test
stos
push
mov
push
push
adc
pushf
orb
lock
pop
adc
cmp
pop
je
add
loope
push
pushf
repnz
cmp
inc
scas
inc
jle
add
clc
jno
rcrb
xchg
jle
lret
lea
pop
mov
arpl
inc
push
mov
xor
pop
cmp
mov
lods
or
mov
jae
lea
popf
or
insb
aas
scas
sub
inc
push
mov
or
mov
or
out
xchg
loope
inc
insb
and
clc
das
lcall
stos
insl
inc
adc
cwtd
cmc
test
rorb
mov
push
jbe
or
mov
mov
add
ret
jl
mov
addr16
sbb
jnp
scas
mov
add
pop
enter
and
mov
addr16
sbb
jl
pop
into
sti
mov
ret
jns
cltd
in
div
xor
jl
push
cmp
cmp
push
jnp
js
fimuls
stc
push
mov
ja
jne
aaa
jbe
out
adc
xchg
jb
lahf
mov
and
test
xchg
pop
inc
adc
shlb
loopne
stos
xor
sti
insl
adc
pop
repnz
mov
nop
xchg
mov
push
dec
insl
xchg
fsubl
aad
fs
or
daa
daa
adc
sbb
mov
int3
xor
jbe
jo
pushf
lahf
xchg
mov
push
or
stos
or
out
push
jbe
push
xor
ss
mov
popf
test
jle
mov
mov
push
mov
mov
sbb
aad
int
stc
ljmp
mov
and
xchg
xor
jne
mov
mov
popf
jae
ret
jg
sbb
imul
out
mov
enter
notb
xchg
dec
sarl
inc
jl
jle
sbb
out
rclb
jge
sarl
mov
lock
xor
xlat
xor
stos
xchg
pop
sub
adc
roll
push
mov
or
in
imul
pop
imul
xor
mov
push
pop
mov
cmc
nop
icebp
sbb
dec
mov
mov
pusha
push
mov
cli
dec
xor
mov
insb
mov
push
fs
cmova
xor
aas
add
enter
or
xor
lds
stc
jecxz
dec
adc
and
cltd
hlt
mov
enter
lods
dec
and
sbb
punpckldq
mov
lea
push
adc
fdiv
fisttpll
mov
dec
jp
push
int
mov
push
push
dec
data16
push
aad
ror
jno
lea
and
sub
ret
dec
cmp
push
xlat
ljmp
pop
cmp
xor
pop
mov
push
das
mov
mov
stos
adc
inc
sub
call
add
addr16
cmp
call
mov
inc
aad
bound
pop
cmp
mov
jmp
fnsave
in
jmp
lahf
xchg
sub
aad
test
or
call
pop
call
adc
push
mov
and
push
push
inc
xchg
mov
and
jp
pop
pop
sahf
comiss
xchg
inc
rorl
dec
jge
mov
es
mov
cmp
mov
xchg
dec
outsl
cmp
inc
pusha
stos
adc
mov
mov
ud0
ja
rolb
fistl
shlb
popa
mov
int
cmp
in
fstpt
js
call
push
test
xchg
add
stc
mov
js
adc
addr16
aas
jo
and
sbb
lea
in
jl
sub
or
jge
pop
mov
in
pop
enter
roll
dec
stc
mov
add
xor
movb
or
repz
shll
pop
ret
mov
sub
fdivrp
cmp
xor
test
pop
pop
mov
addl
adc
hlt
js
popf
add
call
xor
inc
mov
push
push
imull
lret
dec
and
mov
pop
cmp
and
push
jno
mov
sbb
fmul
xchg
sbb
hlt
notl
mov
insb
push
outsb
fistl
push
or
or
out
dec
in
enter
ror
ss
fcmovnbe
inc
in
fs
mov
xorb
add
pop
mov
pop
std
xchg
pop
or
stc
and
xor
leave
mov
lahf
mov
sub
dec
mov
push
and
xchg
mov
xchg
xchg
fwait
dec
imull
cld
and
mov
pusha
cld
mov
mov
scas
pop
adc
pop
call
dec
outsb
and
out
outsb
inc
and
xor
inc
push
ret
pop
inc
inc
lds
mov
xorb
mov
fwait
adc
push
xchg
out
lods
rolb
xchg
ret
dec
jnp
mov
pop
or
cmpsl
fsubl
xchg
cmpsl
inc
pop
idivl
int3
mov
dec
loop
jecxz
dec
cs
daa
gs
xchg
aad
lcall
and
orl
inc
add
push
cmp
mov
fcomps
mov
cs
xor
lods
lods
cli
roll
insl
mov
test
adc
das
ret
mov
cmp
sub
daa
leave
leave
mov
movsb
mov
sub
xchg
test
adc
bound
xlat
out
push
popf
sub
inc
push
clc
arpl
das
sbbb
mov
pop
sti
add
pusha
sub
cmpsl
mov
jo
xorb
sbb
adc
out
cld
push
add
cli
scas
sbbb
sub
dec
lret
sub
es
xor
sub
or
popf
arpl
push
cli
cltd
lods
mov
jmp
mov
rcrb
jno
mov
int
mov
mov
test
aad
into
push
push
in
pop
test
lds
xor
pop
bound
cmp
adc
push
inc
in
cmp
sub
push
mov
shrl
push
jmp
pushf
push
inc
ret
or
xor
pushf
xchg
bsr
out
xchg
push
cmp
lods
ret
cmp
push
daa
mov
dec
in
pop
js
mov
dec
popf
sbb
inc
lods
pop
or
lods
push
test
inc
pusha
mov
xchg
pop
xor
mov
pop
cmp
cmp
into
jne
xchg
push
sub
or
enter
sahf
push
and
xor
test
and
push
or
repz
loope
and
popf
cld
cmp
pop
dec
dec
iret
leave
mov
dec
or
out
cld
xchg
or
fadds
fwait
scas
out
adc
push
das
mov
lods
outsl
pop
lahf
sbb
sbb
js
jg
rcrb
sub
ret
pop
mov
out
mov
divl
cmp
outsb
mov
adc
frstor
mov
cmp
jp
imulb
stos
dec
in
test
stc
mov
scas
jns
lds
aas
mov
push
std
int3
push
cmp
shl
mov
xlat
or
pop
jmp
xchg
jg
ljmp
xor
sub
test
mov
fsts
push
or
cmp
lret
jecxz
mov
and
add
out
and
inc
rcrl
orb
mov
dec
mov
mov
dec
and
mov
xchg
in
dec
popa
hlt
lods
and
negl
mov
cli
jne
mov
movsl
adc
lock
or
aaa
int3
mov
rclb
js
pop
out
sbb
or
or
push
mov
ljmp
and
push
inc
pop
cld
inc
int3
rolb
out
js
call
mov
xor
shll
arpl
sub
cltd
filds
adc
adc
inc
outsl
loopne
adc
roll
mov
repz
dec
push
dec
aas
mov
movsb
dec
pop
call
iret
jb
fwait
and
jg
loopne
dec
lods
inc
push
mov
mov
std
jno
loopne
add
add
in
sbb
pop
rcrb
lods
mov
dec
out
cmpsl
or
out
pop
lds
adcb
or
mov
das
and
in
mov
sahf
gs
or
mov
ret
xchg
add
jle
jno
outsl
jmp
mov
mov
add
jecxz
dec
pop
repz
popf
pop
call
jge
sub
add
xchg
fwait
icebp
loop
fcoms
jae
push
fimuls
jp
xchg
xchg
cmp
test
scas
iret
push
fldenv
pop
cmp
sbb
sub
sub
movsb
iret
in
lock
aam
sbb
jb
pop
pop
cli
pop
dec
xchg
push
sbb
xor
cmpsl
jp
es
cmp
xchg
inc
inc
repz
ja
xchg
addr16
xchg
aad
out
xor
popf
adc
add
cmp
call
ss
and
leave
cmp
sub
jo
sbb
leave
push
or
notb
add
addb
sahf
push
call
ret
aam
xchg
xchg
addr16
mov
inc
or
in
add
inc
pop
jecxz
jno
xor
sahf
mov
xchg
out
sub
and
push
sahf
in
and
call
jnp
cmp
cmp
cmp
cmp
sti
lock
mov
add
inc
adc
pushf
pop
xor
daa
lods
in
add
mov
xchg
xor
mov
xorb
scas
aas
das
push
hlt
out
shlb
arpl
out
mov
mov
and
jae
rol
push
push
sbb
mov
cli
dec
mov
jae
and
mov
insb
jecxz
mov
sub
jl
stc
and
outsb
dec
js
pop
shlb
inc
nop
xor
add
dec
inc
aam
push
mov
clc
jb
popa
fists
lret
rcrl
sbb
adc
inc
les
cs
ds
jl
pop
push
pop
xor
add
aam
mov
mov
loope
pop
push
sub
aas
dec
in
imul
push
fidivrs
jmp
sub
into
ljmp
and
ss
add
stc
fwait
sbb
mov
sbb
mov
mov
iret
dec
add
cmp
or
lcall
es
dec
imul
imul
inc
mov
pop
mov
pop
test
aas
pop
mov
imull
bound
mov
pop
dec
push
pop
lea
push
mov
aam
push
mov
aas
xchg
mov
sub
mov
outsb
dec
mov
jge
mov
fmuls
adc
lcall
xchg
cmp
and
inc
les
mov
pop
xchg
popa
cmc
ss
dec
out
shl
sub
xchg
pusha
sbb
add
lods
inc
imul
adc
fnstenv
std
mov
fildll
repz
and
jmp
mov
js
sti
cs
inc
inc
pop
and
add
sub
mov
sbb
hlt
pop
add
mov
ja
xor
sahf
cmp
cmp
pop
imull
mov
es
out
mov
sub
sub
mov
cwtl
sub
insb
mov
or
jno
pop
jp
or
jle
js
mov
hlt
pop
imul
jns
lahf
jg
ds
shl
aas
xchg
sub
nop
leave
xchg
stos
aam
xor
fdivr
jno
jns
sbb
xor
and
push
sub
jecxz
sub
dec
hlt
rorl
sub
cmc
cmp
mov
out
cs
and
ja
mov
push
in
push
data16
inc
loopne
cmp
inc
pop
loopne
pop
popf
call
push
jl
repnz
xchg
xlat
xchg
and
rcrb
mov
jae
cs
push
inc
lahf
int3
and
aam
insl
imul
adc
std
push
jmp
add
adc
dec
outsb
scas
sbb
jno
dec
stos
mov
and
sub
add
in
test
ja
hlt
mov
jb
rclb
xchg
cld
stc
pop
inc
xor
mov
mov
jg
sub
mov
pushf
test
cmp
fnsave
or
push
inc
aas
push
sarl
movsb
push
js
int3
push
mov
jo
xor
cmp
shrl
je
repz
inc
pop
outsl
faddl
aad
clc
mov
mov
mov
add
lcall
add
jmp
pop
fstps
test
aaa
push
or
in
mov
push
or
insl
push
jecxz
mov
dec
or
mov
sub
lgs
mov
add
js
adc
adc
and
pop
sub
test
jnp
and
fsts
adc
dec
test
cmc
test
mov
cmpsl
mov
shll
pushf
mov
fimull
ja
out
adc
popa
ss
fstp
mov
sbb
push
scas
push
adc
ss
je,pt
cltd
jge
mov
cmpsl
adc
shrl
je
pop
inc
loopne
pop
movsl
jne
pop
fisttpll
push
lahf
and
adc
ljmp
das
jo
rcr
sbb
sbb
and
das
aaa
scas
and
sbb
ret
lahf
test
mov
popa
sub
aad
push
mov
popa
pop
mov
out
xor
mov
mov
push
jae
insb
dec
outsb
fcomps
push
mov
leave
ret
xor
insl
add
xchg
ret
shlb
ss
cltd
sub
in
xchg
push
imul
nop
sbb
mov
insb
imul
sub
mov
repnz
and
ret
inc
paddusw
das
jae
dec
rcrl
in
and
xchg
sub
fdivp
xor
cmpsb
ja
jp
in
std
mov
hlt
call
lds
inc
int
jne
xchg
dec
int
mov
popf
mov
iret
test
arpl
inc
pop
rcll
dec
mov
pop
cli
fs
repnz
pop
add
dec
sbb
mov
js
mov
jnp
rclb
mov
mov
outsb
pushf
arpl
movsl
loopne
mov
jg
add
jmp
dec
test
rolb
sbb
pop
imul
sub
icebp
mov
data16
iret
jne
aam
fdivr
add
into
pop
add
sar
in
pusha
fstps
push
push
mov
or
xor
push
out
mov
and
lret
nop
mov
je
jge
or
and
jo
mov
std
add
sbb
int3
pop
lods
push
movsb
mov
xchg
adc
dec
xchg
ja
pop
xor
mov
cmp
inc
xchg
leave
loopne
movb
cld
pop
das
loope
les
aas
mov
inc
ds
sub
sbb
pusha
mov
fldt
movsb
mov
scas
rcll
xchg
shlb
lret
dec
mov
add
mov
mov
pusha
pop
push
lods
adc
pop
test
std
loopne
and
movsb
jnp
cmp
test
sub
fistps
fstps
ret
jmp
jne
hlt
in
cmp
add
pop
fwait
inc
imul
cltd
xorb
lcall
fdivl
dec
dec
add
mov
mov
jecxz
popa
add
pop
cmp
push
add
in
cmp
xor
lret
mov
cld
cs
inc
push
ss
jmp
insb
xchg
jno
mov
xchg
mov
xor
dec
push
inc
push
xor
mov
cltd
pop
sub
xchg
mov
jmp
inc
add
lret
insb
mov
ja
fcomip
and
push
xor
sbb
nop
movsb
sbbb
rcr
lods
jmp
out
pop
iret
xlat
mov
sbb
fs
test
ds
mov
xchg
ret
xchg
mov
dec
test
mov
popf
pop
add
pushl
jo
push
mov
push
or
mov
sahf
xlat
push
pop
cmpsl
adc
lds
push
js
jbe
or
stos
insl
push
jae
aaa
sub
jns
call
test
jnp
mov
xor
icebp
push
ss
dec
addr16
movl
push
mov
cltd
inc
mov
clc
cld
cmpb
mov
add
ljmp
loope
add
adc
or
mov
mov
lods
jecxz
mov
rcrl
hlt
jecxz
inc
fadds
popa
int
or
shll
lahf
mov
jg
push
loope
fcoml
pop
mov
fsts
js
aam
mov
sbb
sahf
xorb
aaa
pop
mov
aas
es
mov
push
mov
push
mov
mov
or
dec
push
in
roll
das
mov
out
aas
in
pop
xor
int3
cmp
and
repz
jge
and
mov
test
xchg
add
dec
push
arpl
push
imul
cmp
xor
mov
adc
add
mov
xchg
pop
iret
adc
cmp
mov
mov
xchg
jb
aam
mov
adc
es
dec
xchg
movl
xor
sbb
adc
scas
mov
enter
xchg
adc
mov
jbe
push
push
sbb
or
sti
sub
lods
in
int
sub
jo
stos
cmpsb
aas
mov
shrl
rcll
cmpsl
push
stos
movsl
icebp
lods
cltd
fidivl
jge
hlt
adc
xor
cmp
xor
jo
in
aam
rorb
mov
xor
gs
aaa
and
push
xchg
lcall
lds
scas
mov
pop
clc
adc
ja
mov
jge
gs
jge
xchg
push
or
cli
mov
jg
xor
push
lods
je
mov
lds
insl
lcall
call
aaa
int3
pop
mov
scas
cmp
and
iret
pop
push
sti
cld
jne
aam
filds
sbb
xchg
xor
shl
mov
sub
push
push
add
mov
js
xchg
fs
js
repz
cwtl
mov
sub
cmp
insl
push
shlb
pop
fstpl
xor
cmp
dec
inc
rcrb
inc
sub
in
mov
inc
push
lret
mov
repz
and
adc
lcall
jge
sbb
jnp
mov
pop
add
mov
bnd
jb
sub
fs
push
std
lret
xorb
subb
xchg
and
xchg
daa
imulb
call
push
mov
mov
in
pop
dec
jg
adc
stc
ret
les
adc
push
popa
mov
ror
loop
jle
ret
inc
movsb
mov
inc
nop
cmp
ljmp
jecxz
movsl
add
mov
rcrb
sub
imul
ficompl
xchg
lock
cmpsb
cmpl
cltd
or
test
sbb
xor
nop
pop
add
fistpl
lock
orb
jns
es
bound
jecxz
aam
aas
push
jl
test
xor
jg
popf
cmp
cmp
adc
push
push
bound
dec
pop
sarb
jge
or
enter
imul
xor
shl
xchg
sub
dec
push
fiadds
push
mov
aam
dec
out
sbb
xchg
xor
pop
xlat
xor
lds
inc
pop
xchg
loop
mov
inc
push
sbb
xor
int3
and
sub
mov
js
jmp
icebp
mov
shll
add
jb
jno
mov
jle
cwtl
jnp
push
push
xchg
sbb
aas
fiadds
fwait
in
pop
xchg
and
xor
xlat
cmp
and
das
jp
call
imul
or
mov
enter
pop
cmp
js
insb
lcall
sahf
and
sub
sbb
out
sbb
repz
cmp
rorb
inc
sarw
call
int
orb
nop
dec
repnz
dec
cmpb
adc
xchg
and
xchg
push
loope
adc
aad
roll
lahf
mov
dec
jne
ret
lods
pop
imul
jmp
into
mov
mov
xchg
mov
push
pop
adc
add
daa
mov
or
mov
stos
add
ja
aas
pop
inc
fs
mov
loop
in
daa
cs
cld
repz
inc
test
mov
mov
pop
and
push
aam
cmp
inc
insl
push
into
pop
inc
leave
imul
icebp
fistps
scas
jecxz
cmp
jl
sub
dec
mov
mov
lahf
sbb
xchg
test
jo
xchg
mov
movsl
add
and
daa
mov
mov
cmp
andb
xchg
mov
adc
pop
adc
xor
push
push
cli
mov
mov
sti
inc
xor
rclb
insl
mov
sbb
adc
xor
in
aaa
inc
pop
movups
sbb
cmp
push
test
or
addr16
push
mov
dec
pop
test
push
ds
inc
sub
sbb
mov
loope
stos
lods
inc
cmp
mov
sbb
jb
fmulp
mov
arpl
mov
lods
mov
dec
pop
sub
jb
sbb
adc
sub
les
or
xor
jecxz
mov
sti
fisubs
dec
cmpsl
mov
or
jns
sub
dec
cmpl
lods
xchg
xor
fbstp
mov
jno
or
jnp
pop
mov
sbb
lock
xchg
sbb
adc
push
xor
outsb
mov
das
les
sbb
insb
push
movsl
mov
je
out
mov
jno
mov
jge
jno
hlt
xorb
xchg
jns
int
cmp
mov
cmpsb
adc
pop
icebp
mov
pop
lods
roll
cwtl
jb
test
movsb
sbb
add
adc
xchg
sar
dec
call
pop
add
stc
insl
or
ljmp
inc
test
push
dec
repnz
lods
dec
or
or
fiaddl
ljmp
stos
mov
jnp
inc
mov
leave
add
fisubrl
push
fisubrs
mov
jo
push
notl
or
mov
sbb
xor
cmc
xchg
aas
iret
lds
pop
pop
add
fldln2
add
jle
ds
je
inc
push
dec
mov
sbb
data16
ret
test
push
setbe
pop
xlat
and
cmp
mov
inc
stos
jge
popf
add
push
arpl
repnz
mov
out
aas
or
fs
mov
stos
and
pop
out
ds
or
std
cwtl
xchg
add
xor
rcrl
fldt
in
sbbl
add
pop
enter
lods
out
jecxz
nop
push
stos
cmp
rorb
pushf
mov
and
daa
fsubs
ss
cltd
push
fs
and
test
loop
lret
mov
push
out
popa
repnz
xor
inc
scas
adc
je
dec
mov
dec
push
sub
adc
add
push
sbb
and
cmp
ficoml
rolb
loopne
ja
insl
push
scas
jns
je
sbb
push
lahf
cmp
test
and
insb
or
test
sub
mov
mov
xlat
dec
pop
addr16
push
adc
mov
adc
in
dec
pop
fisubrs
push
or
and
cmp
out
lea
or
cltd
pop
pop
push
cltd
mov
push
push
mov
xchg
and
out
add
das
aam
in
xor
cmpsl
js
cmpsb
or
lcall
cmovb
cmpsb
add
xor
and
sbb
outsl
inc
sbb
cmc
push
lods
repz
push
mov
sbb
mov
daa
out
dec
jp
mov
test
sbb
into
and
or
stos
in
test
outsl
in
push
push
cld
adc
pushf
jb
xchg
cli
jmp
mov
idiv
lods
iret
fcmovb
sti
lock
fisubrl
inc
lea
pop
packsswb
insl
xor
jle
aas
jge
cmp
and
repz
int
cmp
or
cmp
das
cmp
xchg
pusha
mov
mov
cmp
dec
jl
sbb
testl
lods
add
dec
inc
mov
lcall
mov
and
pop
arpl
fstpt
nop
aaa
scas
sarl
je
xorb
jg
gs
or
adc
or
mov
pusha
insl
fstl
es
and
mov
test
or
xchg
cli
inc
test
sub
add
xor
popf
in
cmc
jg
jnp
jge
dec
xor
inc
insb
incb
cmp
imul
or
inc
pop
std
jle
and
mov
push
fisttps
ret
lds
movb
jno
cmp
bound
out
fs
mov
pop
and
xchg
jno
in
and
fisttpll
cs
lods
jbe
icebp
lock
cld
bts
xor
add
mov
enter
jle
inc
push
mov
add
test
or
orl
int
sub
and
int3
pop
in
cmp
push
mov
pop
out
xchg
loop
cmp
popa
stc
lock
and
sbb
iret
leave
push
push
test
sub
sti
push
add
lret
stc
cwtl
bound
inc
shl
cltd
pop
lret
or
gs
or
push
mov
in
xchg
adcb
dec
mov
xchg
std
dec
dec
and
in
sub
xor
mov
sbb
sub
decl
push
mov
pushf
cwtl
inc
cmpsl
xchg
imul
rorl
loopne
or
leave
jne
inc
hlt
mov
cld
jecxz
enter
divb
cmp
iret
dec
jecxz
movl
test
in
cmp
push
and
cld
stc
mov
xchg
inc
icebp
jne
dec
mov
or
jb
jle
xchg
xchg
repnz
xor
ret
jnp
mov
pushf
movsl
push
push
adc
pop
xchg
insl
subb
hlt
aam
roll
xor
nop
arpl
push
mov
xor
pop
shll
inc
mov
add
les
jmp
daa
mov
sbb
nop
fcomip
lahf
bound
in
dec
in
push
dec
jle
aam
or
xchg
xchg
pop
push
jmp
dec
imull
sbb
mov
mov
lret
jne
movsl
mov
add
inc
inc
xor
rorl
cmpsb
pop
mov
pop
add
or
adc
sbb
jle
jb
fisubl
add
add
add
sahf
mov
push
push
cmc
movsb
mov
stc
xor
mov
cmpsb
inc
cmp
add
mov
adc
les
outsb
pop
mov
dec
out
icebp
daa
outsb
negb
lds
ss
mov
pop
or
dec
jg
xor
imul
icebp
cmp
cmp
outsb
sahf
pusha
jmp
sub
push
add
mov
es
lods
cs
jb
pop
jmp
fwait
jle
sbb
mov
mov
cmp
rcr
gs
leave
call
jo
ss
xchg
sub
bound
inc
popa
sub
dec
addr16
fcmovnu
rorb
pop
jbe
xlat
fidivs
lods
das
stc
mov
jno
cwtl
mov
jp
dec
out
lods
cmc
adc
shlb
pop
jge
and
mov
into
adc
out
xchg
daa
jp
dec
add
outsb
insl
xchg
ret
fucomi
iret
cltd
or
adc
pushf
lods
int
dec
pop
pop
or
repnz
mov
jbe
xchg
mov
mov
fiadds
jg
nop
push
or
inc
scas
jl
dec
mov
mov
dec
mov
xchg
cld
je
lods
xchg
aad
xor
in
jp
sub
jb
cmpsb
dec
jae
out
add
mov
push
push
or
stos
rcll
aad
mov
jae
adc
cmc
mov
repnz
imul
loop
stos
or
js
xor
int3
inc
or
inc
mov
xlat
jmp
das
adc
leave
xchg
mov
mov
xlat
push
insl
frstor
xlat
fistpl
pop
sub
and
in
mov
dec
adc
pop
dec
mov
sub
push
je
push
jnp
xchg
repz
mov
xor
dec
sbb
push
sbb
cmc
xlat
jno
loop
subb
notl
sarb
xor
in
pop
aaa
push
js
sub
jne
stos
pop
push
frstor
pop
shr
add
aam
adc
sti
fidivrl
dec
sub
insl
cltd
jne
stos
out
rcll
cmp
adc
fcmovnb
sub
repz
clc
pop
jnp
sub
repz
mov
mov
cmp
pop
mov
and
lret
inc
mov
xor
mov
sub
test
pop
aam
loopne
mov
imul
cmpsl
mov
inc
push
bound
dec
jo
lcallw
mov
push
ja
xor
in
mov
loopne
push
push
jmp
jmp
lock
outsl
fistpll
sbb
insb
arpl
ret
jmp
repnz
fsubrl
test
or
cmp
dec
ret
stos
repz
xor
dec
xlat
add
in
xlat
sbb
jo
dec
cmp
iret
aaa
inc
mov
mov
les
inc
scas
insl
stos
sbb
jp
dec
stos
jbe
or
into
js
test
mov
and
xchg
or
or
jbe
dec
inc
fnsave
ja
mul
mov
or
out
mov
sahf
xor
cmpsb
mov
xorb
inc
in
add
jb
lret
lret
pushf
bound
into
push
fnstenv
stos
fld
xchg
imul
jg
aas
cmp
or
cmp
sub
shr
cmpsb
xchg
repnz
mov
stos
mov
out
adc
jnp
pop
in
or
cmpsl
inc
jbe
push
negb
mov
push
inc
negb
decl
std
fdivrl
fcmovu
js
add
or
repnz
or
and
mov
jno,pn
shlb
shll
or
mov
add
push
xlat
mov
pushf
negb
push
cmp
pop
mov
xchg
mov
mov
aaa
dec
push
jbe
xchg
push
in
jns
imul
mov
movsb
xor
mov
test
into
dec
nop
les
rolb
outsl
data16
xor
popf
mov
pop
insb
push
dec
jle
mov
push
cmp
or
push
push
mov
loop
push
dec
pop
xchg
dec
jmp
pushf
sbb
sub
stc
jle
imul
push
mov
or
or
sub
jl
inc
cmp
mov
dec
or
push
popf
arpl
inc
aam
push
cmp
jne
sahf
push
add
mov
lea
das
mov
xor
sub
adc
into
sub
xchg
push
shrb
add
push
mov
sbb
stos
adc
push
push
call
mov
pop
push
ret
rolb
jp
aas
lea
jl
inc
cmp
or
lds
jmp
xor
or
ja
mov
xchg
js
xchg
xchg
xchg
lods
in
add
aad
push
push
pop
xor
or
xor
insl
insl
mov
cmp
daa
jne
lcall
mov
push
imulb
mov
push
cli
dec
mov
arpl
dec
xchg
and
in
and
lds
mov
ret
cmpsb
sbbb
mov
mov
dec
shlb
push
in
scas
in
jl
and
and
lods
sbb
call
push
shl
sbb
or
out
mov
jg
nop
outsb
xchg
xlat
inc
ss
push
gs
push
jl
push
push
xor
fwait
pop
xlat
movzbl
inc
rolb
jecxz
std
xor
cmpsl
sarb
test
xorl
cltd
inc
pop
jo
jmp
mov
sti
lcall
in
sub
push
push
pop
xor
and
push
mov
lock
or
ljmp
xchg
or
add
adc
push
xchg
pop
cltd
ret
in
mov
pop
test
mov
scas
adc
mov
bound
xchg
loopne
cwtl
mov
add
dec
push
xor
js
mov
neg
xchg
popa
cmp
dec
jl
lods
jmp
into
mov
adc
jmp
or
xlat
dec
js
sbb
mov
bound
and
cmpsl
incb
push
bound
iret
stc
pop
jae
pop
xor
cs
sbb
and
lods
scas
scas
fdivl
in
iret
xor
sbb
stos
sbb
sub
ss
enter
mov
jecxz
clc
pop
mov
or
push
fsts
loope
xor
ret
push
push
jle
das
imul
xor
aaa
outsb
sub
bound
and
loopne
add
call
lcall
faddl
faddl
mov
xlat
jmp
sub
in
ret
popa
push
mov
js
mov
pusha
out
fwait
xor
fdivr
jae
sbb
insb
aad
pop
mov
mov
fiadds
dec
popf
pop
adc
xchg
enter
cmp
call
stos
test
adc
icebp
xchg
in
out
and
imul
mov
imul
push
out
insb
adc
mov
mov
xchg
or
jns
mov
cmpsl
xchg
inc
cmp
lret
cmp
jae
fnsave
fildll
mov
fisttpl
mov
mov
fidivl
lods
pushf
dec
cli
add
or
scas
cld
mov
movsl
or
xor
lcall
adc
mov
sahf
addl
inc
movsb
xchg
sbb
in
sbb
lods
or
pop
xchg
bound
test
and
mov
sub
pop
push
jg
xor
push
out
das
jmp
fs
sti
mov
call
mov
jge
push
les
fcmovnu
std
sbb
lahf
adc
push
dec
inc
out
adc
adc
mov
and
or
xchg
and
push
mov
cmp
sbb
add
int
pop
inc
push
call
movsb
pop
pop
sar
cmp
and
mov
lock
hlt
sbb
and
xor
add
cmp
mov
fwait
xorps
cmp
loop
lahf
sbb
xchg
stc
mov
call
outsl
gs
sbb
into
aas
dec
or
jge
fnsave
cs
shl
test
or
mov
and
lret
outsl
lcall
jno
aad
push
mov
pop
pop
mov
stc
pop
ret
sbb
jbe
sarb
push
dec
test
sub
sub
in
push
shll
fdivs
fisubl
push
sub
push
nop
adc
push
inc
mov
jae
lret
sub
movsl
push
imul
aam
xor
push
les
stos
dec
cltd
orb
pushf
sbb
jp
stos
fisttpl
loopne
xor
mov
or
cmp
les
decb
pop
sbb
sub
aad
add
inc
sbb
xor
ror
loop
aad
aaa
stc
mov
popf
add
pop
ljmp
test
cld
out
cltd
cmp
sti
ss
push
sarb
adc
int
stos
or
or
jg
xchg
shll
and
push
xchg
push
or
dec
mov
dec
cmp
push
fcompl
push
inc
mov
fwait
push
outsl
clc
inc
push
lret
out
adc
mov
test
xchg
movsb
sub
mov
std
push
mov
cld
cwtl
jo
or
cs
jnp
xchg
int
pop
jle
pushf
push
mov
cs
das
es
push
xchg
jmp
dec
lret
sub
mov
mov
mov
inc
jge
daa
push
imull
xor
leave
sbb
jp
dec
jecxz
mov
mov
dec
scas
push
cmp
lods
mov
testl
cwtl
mov
pop
push
cs
sbb
add
pop
xchg
add
in
or
push
mov
rclb
out
sbb
outsb
sarb
push
push
sbb
stos
inc
mov
mov
or
imul
ja
aas
in
lcall
xchg
push
push
and
pop
mov
fsubrl
aad
fucom
pusha
mov
fcoms
mov
dec
stc
ja
incl
push
pop
inc
xor
fimuls
sub
scas
mov
xor
stos
outsb
jno
lahf
fdivl
inc
leave
std
inc
and
fmull
jne
pop
mov
ss
int3
aad
bound
cmp
call
cld
fidivrl
mov
sub
jecxz
ss
xor
mov
jl
jge
aad
cs
or
sub
sbb
jno
cmpsb
or
xchg
mov
incl
inc
dec
aas
lock
sub
cld
sbb
push
popa
cmp
test
cli
and
sti
addr16
inc
adc
es
add
aas
pop
nop
mov
sarb
add
cmp
or
ret
cld
insl
xchg
lcall
cs
cmp
sbb
xor
leave
fisttpll
jl
js
dec
push
leave
lcall
cli
dec
insl
in
jbe
popf
mov
xor
xor
mov
push
inc
fwait
inc
cltd
xchg
inc
dec
inc
lock
xchg
popf
xlat
clc
and
push
push
insb
out
inc
mov
xchg
mov
inc
lock
rcrl
je
xchg
jmp
mov
int
fnsave
hlt
mov
ds
push
in
int
jmp
ljmp
shll
orl
push
sbb
and
sti
mov
hlt
add
mov
jle
sub
enter
add
test
in
xchg
push
jb
je
pop
outsl
imulb
mov
lock
add
sbbb
repz
dec
ficoml
stos
xchg
mov
xchg
or
popa
popa
and
pop
xchg
sbb
sbb
aam
dec
std
out
jge
adc
int3
pop
fldenv
leave
add
nop
dec
popa
fisttpl
adc
mov
push
adc
sub
lret
lds
ja
mov
cld
push
imul
xchg
inc
ds
test
sbb
cmpsl
pushf
push
push
rcl
mov
or
iret
sub
push
jo
add
dec
dec
inc
and
fmull
push
add
pop
sarl
enter
icebp
shll
sub
in
and
mov
mov
sti
mov
sbb
data16
ds
mov
sahf
dec
test
mov
mov
mov
aaa
push
pop
adc
rorl
lahf
ficompl
add
aad
ffreep
cmc
ss
mov
xchg
loopne
xchg
or
mov
loop
mov
push
push
rorb
sbb
jl
gs
mov
ss
jne
push
cmpsb
pop
add
push
sbbb
and
test
iret
add
rcrb
push
popa
ja
sbb
inc
mov
lock
sbb
leave
adc
xor
push
in
lahf
movsl
lods
push
lods
adc
mov
lcall
xlat
jo
mov
jb
popa
es
imulb
ds
sub
jl
xchg
mov
xor
lds
cmpb
xchg
es
cltd
fwait
jp
or
mov
xor
mov
loopne
add
push
lret
mov
dec
ds
daa
xchg
mov
or
shl
movsb
add
imul
push
add
nop
and
orl
pop
sub
dec
les
pusha
iret
icebp
xchg
sub
xlat
adc
cli
lods
fsubrp
aaa
inc
adc
pop
std
es
shlb
and
pushl
push
hlt
mov
mov
aas
jmp
pushl
dec
les
pop
xor
ja
icebp
hlt
stos
outsb
mov
popa
push
decb
push
dec
daa
pop
leave
xchg
movb
sub
sub
jl
xchg
pop
add
inc
add
sub
into
pop
add
cmc
out
int3
jbe
jecxz
gs
sti
aad
inc
xchg
jecxz
mov
push
les
pop
mov
add
sbb
test
and
mov
push
sub
lods
popf
adc
dec
push
mov
and
cmpsb
mov
iret
pusha
pop
adc
mov
mov
sbb
cmp
xor
sbb
into
jp
enter
jnp
gs
loop
stos
cmp
mov
fldl
int3
cmpsl
cltd
jg
stc
fcoml
add
inc
loop
dec
imul
mov
jae
dec
cmp
stc
sub
mov
test
sub
cmc
repnz
ljmp
fmull
xor
jp
leave
jns
cwtl
lea
add
jo
xor
ficompl
aad
mov
jge
icebp
setg
test
adcl
dec
hlt
int3
sub
push
lds
lahf
cltd
and
xor
int3
mov
stc
mov
mov
adcb
adc
test
mov
dec
pop
loop
jmp
imul
mov
outsb
pop
mull
les
call
ljmp
mov
pop
jno
loope
pop
lods
pop
lret
loope
lds
test
jmp
mov
inc
xor
jg
pop
dec
add
out
insl
lret
xchg
cmpsb
repz
out
aaa
hlt
mov
test
or
subb
js
jb
scas
popl
or
into
inc
adc
scas
xor
loopne
icebp
or
stos
xchg
and
add
outsb
xor
inc
lods
jne
push
shufps
adc
lret
sub
sub
cld
xchg
push
idivl
daa
jp
xor
lahf
stos
test
push
enter
adc
and
popa
sbb
add
xor
std
daa
subl
das
subl
mov
add
test
sarl
cld
inc
push
ret
xor
pop
dec
cltd
ret
aaa
dec
lds
dec
cli
adc
pop
repz
fwait
das
mov
popf
and
das
or
push
cmpsb
imull
aam
mov
sbb
adc
aam
je
incb
aaa
sub
push
repz
jo
inc
in
push
gs
push
pop
cmpsl
or
jle
mov
xchg
or
sub
shrb
xor
sub
hlt
in
push
testb
mov
mov
rcrl
push
test
aas
push
jnp
enter
arpl
push
mov
pop
in
fwait
popw
dec
jg
jg
int3
orb
je
loop
inc
lods
sarl
mov
shrl
mov
out
and
dec
sbb
lock
out
push
mov
sbb
in
outsb
and
inc
sbb
jbe
or
es
aaa
adc
fnstsw
add
shr
pop
rorb
or
jns
scas
das
and
rolb
ret
sub
movsb
push
fwait
rcrl
cmp
pop
and
push
xor
cltd
pshufw
movsb
outsb
ljmp
das
push
lahf
lods
js
test
imul
aam
std
xor
mov
xchg
fisubrs
sbb
mov
ret
fdivl
into
sbb
cs
xchg
stc
and
aad
inc
push
bound
nop
add
int
inc
call
push
sbb
in
add
cmp
push
out
push
pop
sub
xchg
les
jecxz
and
cmpsl
jg
mov
insb
test
popl
jl
fmull
pop
cmp
add
jp
xor
call
add
std
mov
mov
mov
test
repnz
nop
dec
mov
mov
adc
sti
adc
dec
xchg
push
rorl
pushf
inc
inc
sarb
sbb
outsl
cli
mov
mov
aam
ret
jecxz
mov
and
fimuls
xchg
jecxz
cmp
push
jb
mov
inc
or
addr16
test
gs
ret
hlt
cs
sub
fadds
adc
fsubrl
mulb
rcll
xchg
pop
loope
pop
fistpl
push
addr16
jns
lea
stos
sub
stos
adc
test
mov
xchg
pushf
xchg
insb
loop
mov
pop
call
popa
mov
dec
mov
into
ror
ss
jmp
idivl
movsb
sarl
or
out
pop
orl
mov
movaps
daa
jo
and
rep
test
cmc
imul
fdivl
inc
mov
cmp
add
aad
jp
nop
lahf
je
mov
inc
and
jp
into
in
lahf
andl
jmp
outsb
mov
mov
ss
scas
push
jo
add
lock
cmp
pop
fcomps
movsl
cwtl
pop
sti
push
mov
push
pop
int3
xor
mov
in
mov
pop
adc
sub
add
push
jns
fsubrl
push
aaa
aaa
adc
loop
outsb
inc
push
xchg
xor
push
cltd
cmp
loopne
pop
fs
mov
loope
shlb
in
scas
pop
dec
and
ds
outsl
dec
pushf
and
subl
pop
lock
mov
mov
inc
or
and
sub
push
and
jmp
add
push
outsl
pop
aas
movsl
stos
fldl
bnd
and
subb
jg
inc
out
xor
stos
mov
fwait
dec
adc
iret
clc
mov
jl
jge
jmp
mov
outsb
test
mov
sub
xchg
hlt
jo
ret
or
mov
mov
pop
mov
xchg
imul
mov
jno
jne
jb
push
pop
shrl
popf
fdivrs
xchg
jnp
push
mov
mov
ss
cwtl
aam
jo
xor
ljmp
out
imul
inc
jno
repz
shrb
rolb
jge
dec
aam
xchg
pop
xorb
fwait
push
rcl
int
rolb
pushl
shrb
test
jecxz
push
cmpsb
mov
mov
mov
ja
sahf
mov
mov
pop
gs
rol
hlt
addb
mov
add
push
sahf
test
inc
push
jmp
outsl
dec
in
add
mov
rolb
loopne
out
xchg
testb
xor
or
lods
sbb
push
in
pop
sbb
or
test
scas
mov
push
loop
imul
ljmp
inc
stc
sbb
mov
lods
dec
mov
loopne
test
fwait
xchg
add
sub
or
scas
or
push
xchg
out
out
test
out
jp
mov
adcb
mov
cltd
add
test
pop
mov
push
ljmp
int3
adc
xchg
sub
out
push
js
pop
pop
icebp
mov
test
and
push
push
test
notl
xor
je
dec
repz
leave
sti
mov
outsb
aam
cli
cmpl
add
iret
mov
test
dec
sti
movsl
jb
sub
dec
push
fisttpl
push
fs
fs
in
xor
pusha
icebp
sub
out
popfw
int3
out
stos
test
shr
sbb
cmovno
lret
out
cmp
popa
inc
ficompl
mov
hlt
daa
sti
call
xor
xor
fildll
aas
push
adc
scas
or
mov
and
or
cld
xchg
and
xchg
sbb
push
lcall
shrl
dec
cmp
cmp
int3
cmp
adc
daa
out
and
bound
add
push
xor
lods
ret
js
cld
push
sti
and
pop
jb
cmp
inc
dec
ss
fcmovb
fwait
sub
push
bound
dec
mov
xchg
icebp
pcmpgtd
sarb
add
jne
cmp
int3
mov
ja
gs
scas
mov
ljmp
ljmp
dec
jecxz
jbe
fstpl
jno
mov
nop
or
mov
hlt
aas
in
mov
cmp
bound
mov
repz
pop
les
sub
fldlg2
cld
sarl
sub
mov
int3
mov
lahf
jge
and
pop
addr16
test
mov
aam
mov
pop
out
lahf
inc
xchg
or
xchg
pop
dec
insb
mov
fistpl
dec
subb
mov
xchg
or
pop
inc
or
sbb
cli
cmp
sbb
cli
popa
repnz
addr16
test
push
push
jmp
adc
in
mov
dec
imul
sbb
inc
or
mov
in
push
adc
out
cltd
xchg
mov
int
mov
dec
add
orl
test
or
pop
push
push
nop
shrl
mov
arpl
cli
push
repz
push
pop
pop
xchg
out
add
sbb
lods
das
mov
or
or
mov
pushl
test
sub
adcb
outsl
cwtl
mov
dec
arpl
fs
out
dec
xor
fcomps
push
and
dec
pop
add
jae
fidivl
xchg
sbb
add
xchg
sahf
xchg
mov
sub
das
dec
ficomps
ret
shlb
movsl
xchg
repnz
outsl
scas
out
mov
or
or
shlb
mov
push
sbb
add
xlat
nop
mov
out
add
adc
jb
jns
popa
and
stos
rcrb
repnz
sub
mov
adc
push
negb
leave
mov
add
inc
and
popl
test
or
mov
sbb
mov
inc
mov
fisubrs
clc
loopne
fstl
cli
scas
xchg
mul
shll
or
sub
orb
loope
mov
sbb
mov
inc
pop
xchg
outsb
mov
jae
mov
nop
loop
jle
sub
rorl
aaa
insl
sti
mov
rcrl
icebp
jbe
gs
jg
cld
inc
sahf
pushf
movsb
not
in
add
hlt
jne
inc
insb
into
dec
insl
loopne
mov
jne
test
daa
or
outsb
push
cltd
push
mov
out
xor
test
cltd
icebp
repz
dec
pop
notl
ja
addr16
js
mov
cmc
push
mov
cmp
ret
outsb
mov
push
push
push
ret
inc
pop
sub
mov
mov
jnp
push
in
ds
jecxz
pop
sahf
jb
insb
iret
push
fs
or
adc
mov
clc
sub
mov
xor
cltd
in
mov
cmc
or
push
xchg
inc
scas
jae
rcrl
cmpl
mov
cmp
add
leave
imul
jp
mov
sbb
popa
lea
popa
mov
movl
insl
pop
movsb
or
pop
mov
mov
pop
out
ja
inc
rorb
mov
lea
dec
pop
test
jg
mov
mov
xchg
xor
cmpsl
lret
mov
jbe
or
inc
stos
sbb
call
mov
js
ss
insb
and
pop
pop
push
mov
aas
mov
sub
cmp
mov
lret
stos
jle
int3
mov
inc
call
push
xchg
push
ror
push
data16
adc
aad
aad
sub
cld
xchg
cmp
scas
insl
cmc
sub
push
enter
fimuls
inc
out
das
sbb
xchg
push
xor
pop
mov
pop
sbb
or
shrb
int
faddl
fdivrp
jns
lods
je
mov
mov
dec
repz
in
mov
cmp
xor
sbb
mov
fcomi
mov
mov
adc
ja
push
inc
inc
mov
into
fsubp
push
pop
jp
test
mov
cmp
jp
hlt
add
cmp
loopne
ffreep
loope
aas
sbb
fldcw
idiv
mov
hlt
pop
dec
mov
movsl
sub
scas
dec
addb
jbe
das
mov
lods
iret
pushf
fst
nop
popaw
cltd
add
loop
pop
jl
sub
aam
inc
ss
iret
fstpt
jp
aam
js
mov
inc
idiv
push
adc
roll
clc
mov
adc
sub
and
and
scas
or
sub
or
aad
pushf
out
jp
lea
jno
dec
mov
push
rorb
loop
mov
ss
lahf
xor
outsl
pop
sub
jbe
fimuls
mov
dec
add
mov
sarb
mov
cwtl
dec
push
rorb
imulb
aaa
sbb
fucomi
cwtl
pushf
push
lea
lret
jg
adc
xor
cltd
dec
xchg
imul
in
xchg
lds
mov
inc
mov
lcall
mov
je
mov
flds
leave
pop
xchg
inc
dec
test
adc
push
pop
insl
dec
aaa
cmpl
and
mov
or
inc
es
clc
add
hlt
aam
cmp
pop
sahf
and
stos
add
dec
fcoml
mov
dec
mov
sarb
cwtl
lea
hlt
mov
fdivrl
lret
mov
xor
insl
int3
mov
adc
mov
mov
push
roll
lahf
pop
dec
out
push
mov
jp
mov
pop
repz
ljmp
dec
rorb
imul
push
mov
sahf
imul
sbb
lret
ror
jno
xchg
stc
bound
mov
jl
lret
shlb
jne
cltd
pop
pop
mov
and
into
add
iret
xor
xor
lahf
cmp
cltd
shlb
outsl
fidivrs
movsl
mov
jno
lds
addr16
mov
dec
and
scas
in
push
sahf
and
and
nop
movsl
lods
shr
sub
dec
ss
or
adc
xor
cmp
shll
xchg
sbb
rcrb
mov
pop
adc
inc
data16
sbb
jno
mov
or
ds
xor
int
cld
dec
push
xlat
aad
mov
push
fisttpl
mov
cwtl
cltd
mov
les
cmp
mov
dec
mov
lds
lahf
in
pop
loope
cmp
dec
inc
push
add
push
std
pusha
dec
fsubrs
cmpsl
cmc
mov
and
ss
and
mov
lea
lods
xchg
rcrb
insl
adc
push
data16
gs
aaa
mov
sti
outsl
movsb
push
iret
inc
dec
and
jo
cmp
mov
out
stos
jnp
cltd
lea
or
pusha
mov
imul
iret
sbb
add
data16
cmc
xchg
jb
callw
pushf
and
clc
mov
mov
jae
adc
sbb
js
inc
scas
jecxz
das
sbb
sub
out
or
push
add
xor
out
xchg
int3
jne
dec
sub
dec
div
xlat
jnp
fdivl
aad
dec
lret
subb
push
cmp
insl
fcmovnu
pop
nop
sub
push
addr16
bound
rorb
push
test
mov
mov
ret
cmp
jle
repz
and
andl
or
sub
jp
out
je
mov
xor
lock
mov
subl
shlb
inc
fdivl
sub
add
push
add
std
push
fucom
push
test
inc
push
or
xor
movb
or
adc
lcall
lahf
mov
add
cmp
insl
fsubrl
jle
jns
or
hlt
xchg
repnz
ljmp
fisubs
sub
je
jle
rsqrtps
idivl
pop
lock
mov
adc
loop
xor
aad
mov
aam
and
xchg
arpl
fadd
mov
iret
or
imul
outsl
push
gs
or
fucom
jmp
cld
out
xor
lds
push
dec
nop
sbb
or
cmp
mov
mov
int
mov
and
mov
ret
xor
inc
or
ljmp
leave
mov
jo
mov
xor
lods
ja
mov
adc
bound
sbb
xlat
pop
sbb
ret
push
adc
int
push
sub
inc
jns
or
loope
dec
mov
cmp
pop
mov
icebp
mov
adc
cmp
and
xchg
addr16
cltd
mov
xchg
sbb
inc
cmpsl
rorb
xchg
pop
fsubs
lods
xchg
inc
in
mov
jle
mov
jno
mov
push
cmp
xor
test
stos
sahf
jno
jbe
leave
pop
stc
fsubrl
cli
add
in
dec
mov
cwtl
sbb
mov
lock
add
out
mov
fdivp
outsl
dec
cmp
mov
outsb
jo
in
sbb
mov
out
cltd
jmp
aam
sub
fcmovnbe
xchg
mov
add
shr
cltd
pop
test
mov
lcall
jns
push
popa
and
mov
xlat
xor
mov
jmp
jecxz
cmpsb
jno
gs
mov
ds
mov
push
inc
sub
or
and
out
cs
add
das
dec
jb
sbb
pusha
sbb
fiaddl
mov
and
add
insb
lock
je
popa
aad
icebp
inc
lds
jle
add
lods
xchg
aaa
dec
popa
xchg
or
bound
pop
cmp
test
ds
jmp
sbb
scas
add
cmc
mov
les
cmp
mov
fidivs
and
jmp
insb
and
and
mov
loope
int
add
dec
js
jmp
in
pop
jmp
nop
adc
ret
adc
fdivs
add
sbb
xor
add
push
cltd
insl
xchg
bound
hlt
enter
ljmp
mov
addb
fdiv
or
jmp
and
push
ss
jl
or
leave
lret
lds
dec
pop
cs
xorb
dec
mov
xchg
popa
scas
cmpsl
dec
mov
loopne
addr16
outsl
in
add
pop
jae
test
in
enter
imul
in
push
mov
repz
divb
or
andl
mov
out
sub
mov
or
popf
or
sbb
out
mov
out
fidivrs
mov
into
mov
inc
outsb
and
dec
ret
outsl
test
loopne
add
fs
cmp
push
fcomps
mov
jg
xor
aas
push
out
cmp
in
bound
ds
dec
loopne
imul
or
cld
popa
iret
lds
in
mov
mov
mov
pusha
andl
in
fildll
test
bound
xchg
mov
lods
and
dec
mov
and
sbb
xor
and
push
dec
sub
in
negb
mov
jmp
sbb
xor
pop
xchg
xor
xor
aaa
fstps
mulb
addl
cmp
push
js
sahf
pop
pop
ret
sub
push
fldl
sbb
cmp
cmp
and
aam
into
pop
mov
test
lods
outsl
xchg
adc
cmp
iret
mov
jno
mov
in
loope
std
jns
dec
movsl
test
push
mov
pop
pushl
add
mov
sub
cmpb
clc
pop
sub
cmp
xor
imul
pop
push
mov
popf
movsl
xchg
out
jmp
das
cmc
add
outsl
pushf
or
push
sbb
insb
xchg
ja
or
sub
cltd
jle
mov
push
mov
in
pop
sar
sub
sub
jge
pop
jbe
mov
stos
imul
inc
and
rcr
cld
and
mov
fsubl
and
in
adc
jp
scas
cmp
out
in
outsb
cmc
mov
jg
xchg
mov
stos
ret
and
jns
mov
push
insl
add
cmp
fwait
stos
out
push
push
loope
adc
cmpb
adc
loope
in
in
jae
outsb
dec
fdivp
mov
mov
mov
ljmp
inc
pop
cmp
mov
scas
mov
xchg
loope
icebp
rclb
in
xchg
pop
xchg
loope
pop
cmp
lea
loop
jnp
out
push
mov
aaa
sub
arpl
mov
stos
inc
pop
adc
gs
cmp
mov
xchg
gs
add
fidivl
pop
pop
xchg
in
push
mov
sub
jo
aad
add
rcll
mov
jge
lods
xchg
push
outsl
insl
lcall
xchg
jns
push
mov
les
lea
adc
in
sbb
mov
and
cli
test
mov
push
xchg
out
pop
push
dec
test
mov
lret
adcl
adc
mov
pop
pop
shll
test
mov
adc
dec
or
xlat
xchg
jno
clc
pusha
imul
pop
jbe
imul
add
clc
cmp
cmpsl
sbb
lods
ljmp
incb
fdivs
xchg
sbb
popf
das
pop
sahf
xchg
inc
add
sbb
pop
ficoml
push
push
lret
push
fldl
cwtl
leave
jns
mov
gs
mov
cmp
dec
fdiv
jg
cltd
shlb
cmpsb
xchg
imul
or
clc
mov
and
in
mov
stos
mov
shrl
sarb
and
mov
hlt
dec
sub
xlat
incl
mov
or
mov
jbe
add
call
mov
mov
sub
sbb
lcall
fcmovnbe
xor
xchg
xor
adc
data16
mov
and
sub
das
mov
insl
outsb
enter
push
pop
pop
jecxz
jmp
push
stos
mov
cmp
or
in
pusha
arpl
fimuls
push
or
mov
ja
or
sbb
inc
lret
repnz
out
pop
inc
mov
adc
lods
sub
in
lret
out
cltd
mull
jp
enter
inc
cmp
and
lods
aam
sahf
sbbl
and
loopne
dec
xchg
add
insb
cmp
movsl
jecxz
xor
into
dec
cld
and
jae
lds
scas
mov
aam
mov
stos
add
mov
adc
mov
sbb
inc
add
mov
inc
add
mov
lea
imul
movzbl
inc
dec
add
add
add
sub
lea
add
movzwl
dec
movzbl
inc
add
dec
add
lea
movzbl
inc
inc
inc
dec
sub
mov
add
lea
imul
sub
dec
add
cmp
jb
dec
xor
or
lea
mov
dec
mov
inc
dec
inc
inc
and
lea
sub
sub
mov
add
inc
cmp
jb
xor
mov
lea
mov
xor
dec
dec
xor
inc
inc
pop
and
lea
test
jbe
imul
sub
dec
dec
dec
and
lea
add
dec
inc
add
and
lea
mov
inc
dec
inc
inc
dec
add
lea
dec
and
dec
inc
mov
inc
sub
movzbl
lea
mov
add
dec
sub
and
inc
dec
mov
xor
lea
mov
imul
dec
mov
add
sub
mov
dec
add
lea
dec
dec
dec
jne
add
mov
inc
sub
lea
mov
add
inc
inc
inc
or
lea
mov
mov
add
dec
inc
inc
and
lea
movzwl
mov
dec
dec
test
jbe
add
dec
or
lea
mov
add
inc
dec
dec
xor
lea
mov
inc
dec
dec
inc
add
or
lea
mov
dec
dec
and
dec
dec
mov
add
lea
movzbl
movzwl
add
add
inc
add
and
sub
jmp
lea
imul
inc
add
pop
ret
push
inc
inc
xor
lea
mov
add
dec
inc
sub
inc
push
or
lea
mov
inc
push
inc
inc
push
inc
or
push
lea
mov
push
dec
dec
sub
dec
or
lea
mov
inc
add
dec
add
xor
lea
mov
dec
call
inc
inc
add
inc
imul
add
lea
movswl
dec
add
dec
dec
add
lea
imul
dec
add
sub
inc
and
lea
mov
inc
dec
add
add
sub
lea
mov
add
add
inc
dec
xor
lea
movsbl
add
cmp
je
inc
inc
inc
add
lea
mov
inc
dec
add
inc
or
lea
mov
inc
add
add
dec
xor
lea
mov
dec
inc
inc
inc
and
lea
imul
inc
dec
dec
add
and
lea
mov
add
add
inc
inc
and
lea
mov
inc
inc
sub
inc
sub
lea
movsbl
sub
inc
inc
sub
or
lea
movzbl
ret
dec
inc
pop
add
ret
push
inc
mov
xor
lea
push
mov
sub
add
add
inc
push
dec
push
xor
push
lea
jmp
xor
mov
lea
movsbl
movzbl
inc
add
mov
dec
add
mov
add
lea
movzbl
mov
dec
add
inc
dec
and
add
or
movzbl
lea
movswl
xor
inc
inc
inc
add
add
xor
lea
mov
dec
dec
dec
inc
add
dec
jne
lea
mov
mov
dec
pop
add
dec
pop
inc
xor
pop
lea
mov
add
dec
add
inc
xor
lea
mov
inc
dec
add
ret
push
add
inc
sub
lea
movzwl
dec
add
dec
push
push
push
push
dec
or
lea
push
mov
dec
dec
add
dec
sub
lea
mov
dec
mov
inc
push
inc
inc
xor
xor
lea
push
mov
inc
push
inc
dec
pushl
inc
call
or
add
lea
mov
inc
sub
dec
inc
xor
pop
ret
mov
dec
sub
dec
call
dec
or
lea
push
mov
dec
xor
dec
mov
dec
mov
inc
sub
mov
lea
imul
test
je
dec
add
sub
sub
or
lea
imul
sub
add
mov
add
add
mov
or
lea
imul
inc
repnz
dec
add
add
dec
jmp
xor
lea
mov
dec
dec
sub
add
add
lea
mov
pop
pop
ret
push
dec
add
add
dec
and
lea
mov
dec
dec
inc
inc
add
lea
mov
sub
sub
inc
dec
sub
lea
inc
add
dec
dec
or
lea
imul
pop
ret
sub
dec
mov
inc
sub
mov
add
add
mov
lea
imul
mov
dec
dec
xor
inc
dec
mov
add
lea
inc
mov
sub
inc
add
sub
xor
cmp
jb
lea
push
mov
dec
push
dec
inc
push
dec
add
mov
lea
mov
xor
sub
sub
xor
inc
inc
xor
xor
lea
push
mov
sub
xor
inc
jmp
sbb
add
adc
add
jne
add
adc
add
sub
repnz
add
mov
hlt
sub
add
adc
jmp
add
jmp
inc
add
incb
add
add
les
push
sub
dec
mov
sub
lea
imul
dec
dec
inc
inc
sub
lea
mov
sub
call
inc
inc
inc
sub
lea
mov
inc
inc
sub
sub
sub
lea
imul
dec
dec
dec
inc
and
lea
imul
add
sub
dec
inc
call
and
lea
dec
call
dec
inc
sub
or
call
lea
push
mov
inc
inc
dec
inc
call
xor
lea
mov
dec
add
sub
call
add
pop
and
lea
movsbl
add
dec
pop
add
sub
pop
add
and
lea
mov
pop
dec
inc
add
inc
xor
lea
imul
inc
pop
sub
add
pop
inc
and
mov
lea
movswl
call
sub
dec
inc
dec
ret
and
lea
push
mov
inc
push
dec
inc
push
inc
sub
push
lea
imul
push
inc
inc
mov
sub
inc
push
sub
ret
push
lea
push
mov
dec
push
dec
inc
push
dec
add
push
lea
mov
push
dec
dec
inc
call
add
sub
lea
movswl
inc
inc
inc
sub
xor
lea
mov
inc
dec
sub
sub
and
jmp
xor
lret
dec
dec
mov
lock
jmp
sbb
jg
and
mov
divb
stc
xor
xchg
pop
aaa
adc
dec
dec
aas
mov
cmp
jne
shrl
dec
dec
add
pop
lods
mov
xchg
mov
rcrb
int
ficomps
xchg
pop
push
mov
adc
mov
dec
jl
xor
sbb
or
xchg
mov
out
sub
in
insl
pop
jge
arpl
rolb
sub
xchg
mov
dec
mov
ret
jbe
pop
adc
or
psubw
mov
jae
out
aas
xchg
mov
enter
adc
std
mov
out
adcb
or
push
xchg
test
pop
cmpl
sub
into
sub
imul
xor
imul
or
movsl
mov
aad
xor
insb
mov
mov
cmc
cwtl
mov
adc
inc
inc
add
js
out
sub
xchg
dec
sbb
mov
movsb
dec
iret
jg
sti
push
cmp
cmpsb
pop
or
lcall
xor
cmpsl
fcomps
clc
push
fsubrs
inc
js
push
div
mulb
in
jns
dec
in
push
adc
call
faddl
jg
call
ret
cli
xchg
insl
sbb
xchg
stc
xchg
shll
xor
test
mov
pop
jnp
push
add
out
iret
mov
or
lods
xor
jno
loope
xor
mov
push
mov
push
xchg
hlt
jmp
mov
std
stc
movsb
mov
xchg
inc
outsb
hlt
movsb
lret
or
loop
fldt
and
nop
pop
mov
ret
and
and
fidivs
add
cs
loope
dec
lahf
sbb
aas
iret
in
inc
hlt
jne
lods
or
mov
aaa
xor
nop
inc
jae
mov
mov
push
test
adc
mov
pop
sbb
cmp
cs
cmc
aad
movb
adc
shlb
notb
aas
hlt
cmp
mov
icebp
or
insb
cmp
cld
and
inc
aad
dec
popa
inc
pop
call
inc
mov
out
into
pop
lods
lret
inc
sub
iret
mov
push
dec
add
jg
xor
rcll
adc
sbb
mov
mov
andl
lcall
lret
add
mov
je
inc
mov
mov
fiadds
add
xchg
sub
sti
mov
xchg
adcl
push
aaa
inc
cltd
call
or
aam
jnp
sub
push
lahf
push
lret
xor
test
or
notl
in
or
pop
pushf
and
mov
jne
out
imul
and
fs
mov
test
int
adc
test
push
lods
sub
inc
aad
mov
testb
cmc
movb
inc
and
cmp
ret
sub
xchg
int
lock
es
dec
inc
push
cmpb
in
sbb
mov
lretw
out
adc
push
sbb
rclb
lds
inc
fs
push
xchg
cmpsl
or
adc
push
dec
pushf
scas
jae
test
cld
mov
jae
pop
add
cs
mov
push
popf
cmp
or
cmp
mov
push
mov
flds
mov
jg
outsl
cld
pop
mov
jmp
je
pop
icebp
mov
jb
fs
jbe
rcrl
jne
mov
aam
and
mull
add
jl
xor
dec
dec
dec
pop
inc
daa
out
fwait
xchg
adc
fwait
xchg
sarl
add
lret
adc
sbb
aam
notl
nop
lret
dec
push
cltd
loopne
lods
xor
mov
cmpl
pusha
cmpsb
nop
cmp
shlb
call
push
mov
or
out
sub
pusha
out
out
sbb
enter
popf
test
dec
jnp
pop
xchg
xor
std
fadd
sub
leave
xor
jns
mov
jns
inc
fs
mov
mov
mov
mov
cmp
outsl
mov
mov
in
sti
lret
pop
xchg
xchg
shr
mov
dec
mov
jp
push
sub
lret
add
sbb
loopne
dec
mov
or
cli
xor
bnd
pop
and
fdivrl
pop
mov
dec
adc
sub
data16
hlt
push
dec
xchg
adc
inc
lds
or
jg
les
shr
adc
adc
movsl
dec
mov
adc
orb
cwtl
int
pop
cmp
stc
adc
push
sarb
xor
orb
daa
out
cltd
pop
xor
in
jge
mov
shll
shr
lds
scas
cmpsb
dec
lods
inc
outsl
pop
mov
push
pusha
push
pushf
clc
dec
aas
push
repnz
call
cmpsl
dec
mov
inc
fdivs
mov
sti
and
imul
inc
sbbl
mov
push
rorb
mov
ss
mov
lea
das
sbb
jne
pushf
add
inc
or
scas
jno
ret
stos
int3
fdivrs
les
push
iret
add
push
cmpsl
psrad
jne
adcl
add
pop
ds
mov
mov
faddp
ficompl
xor
std
out
cmp
ja
cmp
mov
jb
jle
stos
jbe
aad
in
fldenv
pop
and
xchg
xorl
sub
aas
aam
js
cmp
in
push
rcrl
push
mov
xchg
sbb
adc
imul
inc
mov
pop
sbb
xor
arpl
push
into
in
cli
out
subl
pop
pop
daa
ja
mov
scas
pop
dec
movl
add
ficompl
jne
stos
jnp
xchg
jle
mov
test
fcomps
sub
mov
mov
clc
adc
mov
and
loope
repnz
jmp
jge
push
sti
popf
cmpsb
repz
lods
lret
jae
addr16
addr16
mov
pop
adc
cmp
mov
xchg
icebp
cmpsl
push
push
jnp
cmp
js
pop
imul
jle
jae
out
enter
sar
filds
sub
lods
inc
insb
mov
int3
pop
sti
sbb
mov
inc
lret
sbb
movl
or
dec
jns
jg
ja
orb
push
fistl
arpl
out
and
addr16
cs
mov
fadds
sbb
arpl
add
push
ficomps
stc
enter
dec
das
leave
or
pop
sub
inc
popa
mov
cmpsb
lods
dec
push
jge
sbb
inc
stos
mov
aaa
push
ret
dec
lcall
and
xchg
insb
add
aad
popf
mov
mov
push
mov
mov
and
xchg
jno
add
cmpsl
das
jae
xlat
outsl
inc
shlb
sub
and
std
inc
dec
repnz
hlt
sub
sub
cmp
xchg
and
add
push
mov
adc
pop
cmp
stos
xor
sub
stos
sub
negb
and
jo
push
xchg
jbe
loopne
sbb
scas
push
xchg
rcr
and
arpl
or
aaa
cmp
cwtl
shll
les
into
mov
inc
loop
fcom
pop
mov
cltd
int
aad
add
adc
pop
add
jg
dec
push
sbb
mov
shrl
leave
push
adc
icebp
pop
gs
mov
push
sarb
pmaxsw
jb
jge
mov
cli
dec
arpl
mov
out
imulb
dec
sbb
push
push
push
dec
and
mov
movl
pop
test
adc
sub
add
xlat
lock
xchg
push
push
mov
push
stos
popa
push
pop
mov
jb
outsb
xchg
mov
out
popl
jne
inc
testb
cmp
sub
fsubs
les
xor
push
lds
xchg
ret
adc
enter
fs
jg
sbbb
sub
mov
jl
mov
lods
cwtl
inc
mov
fwait
jmp
pop
stos
cmp
or
das
jno
shlb
mov
mov
data16
lcall
and
repz
or
pop
outsb
mov
int
sahf
ror
jno
stos
iret
insl
or
inc
push
dec
cmp
sbb
dec
and
cmpsl
aaa
add
ja
lea
or
jnp
or
pop
jae
dec
lods
sub
ljmp
inc
inc
lods
xor
and
mov
dec
out
sub
loopne
jmp
pop
pop
mov
or
outsl
jp
and
or
mov
lcall
fwait
movsb
imul
cmpsl
pop
fsubrl
lahf
add
je
push
pop
mov
ljmp
movsb
cmp
je
gs
es
inc
lds
or
mov
arpl
sarl
adc
add
rorb
xor
inc
insl
mov
mov
jns
jo
outsb
lds
int3
dec
push
add
pop
cmc
push
and
rcll
xchg
inc
add
loopne
imul
outsl
push
rorl
xchg
std
jg
cltd
std
sbb
lcall
ja
test
lock
loope
mov
roll
leave
cmp
xchg
lds
addb
dec
mov
adc
adc
pop
std
xchg
sbb
mov
dec
sbb
jae
xor
test
std
xor
rorl
call
dec
inc
dec
in
pop
std
mov
test
bound
popf
das
sbb
repz
call
pop
add
mov
xor
int3
or
stos
fcomi
jo
xlat
or
neg
pop
push
js
sub
mov
pop
call
repz
pop
fnstcw
call
fstpt
jp
pop
mov
daa
pop
push
mov
cmpsl
adcb
inc
aam
lret
in
mov
lret
mov
xor
js
jge
mov
xchg
mov
pusha
imul
mov
xorl
or
mov
or
sbb
xchg
les
mov
pop
ror
jmp
outsb
popa
cmp
sub
cmp
sub
adc
iret
add
cmpsb
imul
sbb
aam
out
push
mov
enter
and
stc
aam
insl
add
loopne
mov
cld
in
mov
adc
les
ss
pop
in
iret
sbb
adc
repnz
mov
jp
in
fdivrs
lock
push
mov
mov
xchg
es
pushf
and
loopne
pop
jb
lock
pop
xchg
nop
cmp
push
cwtl
arpl
mov
rorb
dec
and
cwtl
gs
mov
pop
cld
or
cmpb
aam
addr16
dec
mov
push
jns
jno
jmp
sub
xor
cltd
lahf
scas
ret
push
push
sbb
pop
sbb
add
push
inc
mov
cmp
sbb
xchg
cmc
jp
xor
rcrl
je
int
mov
mov
aad
outsb
leave
add
mov
mov
adc
xchg
test
pop
outsl
stos
popf
mov
xor
jge
inc
and
pop
add
inc
cmpxchg
dec
test
hlt
and
das
sub
out
jle
add
xchg
addr16
push
cmp
xchg
push
aas
and
push
sbb
ror
xchg
jnp
xor
das
fwait
xor
fstpl
scas
adc
mov
aas
shll
aaa
jge
sub
jecxz
ljmp
mov
cmp
int3
fstps
xchg
add
popf
add
mov
scas
cs
xor
dec
movsl
iret
test
xlat
aaa
test
fstpt
sahf
xchg
add
imul
mov
lahf
mov
pop
test
ret
xchg
mov
push
fstl
push
adc
test
mov
sbb
shll
mov
add
jno
pop
fnstenv
xor
shrl
adc
mov
mov
stos
add
lods
es
aaa
mov
xlat
xchg
cltd
jo
pextrw
and
shlb
xor
add
cmp
sbb
cmp
test
mov
xchg
and
enter
pop
das
scas
push
dec
and
mov
or
adc
mov
call
rcr
jns
sbb
arpl
xchg
shrb
mov
mov
jne
bndstx
call
jb
fidivs
and
rcrb
mov
mov
aaa
and
push
aad
push
cmp
mov
inc
jmp
rcl
sbb
pop
inc
dec
mov
call
xor
popf
in
stos
cmp
lret
iret
push
pop
repz
test
pop
lret
or
jno
mov
xchg
arpl
xchg
cmp
xor
xor
int
int3
aam
sbb
sbb
sbb
adc
or
jb
into
mov
mov
add
std
cld
xchg
fadds
jae
stos
xchg
mov
add
dec
jnp
cmp
loope
std
dec
cmc
ljmp
jge
mov
loopne
ds
fucomi
mov
jle
fs
fs
xchg
inc
push
sarl
rcl
sbb
and
mov
dec
test
mov
paddd
inc
test
inc
fiaddl
stos
bound
adc
push
cli
loopne
cwtl
jmp
sarl
adc
movsl
ret
into
mov
xor
dec
mov
ds
push
cs
jle
sti
addb
hlt
mov
roll
iret
push
cmp
int
dec
adc
xchg
xchg
adc
push
push
fcompl
outsb
dec
push
or
in
lods
xor
push
scas
gs
inc
sbb
daa
jne
lock
sbbl
cmpsb
add
push
lods
movsl
xor
movsl
pop
pop
sti
adc
adc
lcall
mov
pusha
mov
xchg
cmp
iret
in
xor
test
mov
pop
inc
pop
add
xchg
add
inc
adc
sub
in
pop
js
sub
or
push
notb
subl
push
lret
xchg
hlt
push
xlat
jp
sbb
sub
dec
mov
pushf
add
outsl
in
mov
sbb
mulb
loope
pop
jmp
xchg
mov
lret
fstpt
add
or
pop
jne
adc
and
fs
pop
dec
stos
loopne
data16
dec
mov
add
in
xchg
pusha
xor
sub
popf
mov
enter
cmp
sbb
cli
push
mov
inc
pop
mov
pushf
popf
rcll
xor
stos
xchg
mov
notl
adc
jae
sbb
es
js
lret
jb
xchg
pop
insb
rcr
fstpl
sti
pop
sub
mov
negb
fcmovbe
push
dec
pushf
jmp
mov
fistpl
addr16
ljmp
cmc
mov
xchg
clts
in
xchg
add
mov
mov
hlt
inc
adc
insb
mov
mov
and
sar
cmp
daa
push
sti
out
or
lock
std
add
lret
ret
jmp
stc
adc
adc
leave
or
lds
adc
lret
or
adc
sbb
mov
sbb
jno
ljmp
rolb
gs
pop
scas
test
jb
jbe
sub
mov
movsl
imul
cld
push
shlb
push
jmp
pop
mov
sbb
push
jno
push
aas
add
pop
adc
dec
mov
sub
sub
mov
test
push
outsl
push
jae
push
or
mov
sbb
push
mov
daa
push
mov
adc
daa
xsaveopt
sbb
push
mov
lret
xor
adc
xor
lea
sbb
js
sarl
mov
fstl
lods
cmp
jns
sbb
call
aas
and
sbb
pop
or
push
jne
mov
insl
iret
lock
sti
ss
cmpsb
int
mov
popa
pop
std
xchg
inc
movl
mov
addr16
mov
cmp
sbbb
jp
cwtl
iret
in
bound
in
mov
ds
into
adcb
jnp
sub
xor
adc
ja
ljmp
dec
push
jge
sub
cmpsl
jmp
aaa
jnp
lods
mov
cmp
ds
jmp
sub
stos
xchg
movb
sub
jl
xor
lds
int
mov
jns
sub
icebp
insb
sub
pop
cs
dec
cld
push
scas
push
inc
push
inc
push
and
push
mov
scas
shrl
jge
pushf
arpl
int
flds
mov
and
or
stos
aam
fs
and
mov
dec
pop
inc
mov
xchg
pop
or
fcmovnbe
push
outsb
xchg
in
std
sbb
xchg
nop
mov
cmp
push
sub
xchg
inc
or
or
subl
lock
cmp
cmp
and
jbe
or
push
mov
ja
mov
mov
or
lahf
shrb
gs
sti
mov
out
cmpsb
mov
jmp
pop
mov
or
xchg
adc
jg
insb
neg
or
adc
mov
jmp
repnz
inc
jbe
adc
cltd
lahf
lret
xor
lahf
push
repz
inc
leave
outsl
lods
sub
inc
insl
scas
andl
sub
cmp
cli
mov
leave
cmp
or
inc
push
xor
das
fstp
shlb
int
dec
daa
jge
ss
sub
or
xlat
loop
cld
push
dec
nop
fsub
lahf
xchg
fnsave
lcall
lret
inc
xor
addr16
pop
cmp
test
lahf
sub
sub
or
loop
cmp
push
lahf
lock
mov
pop
mov
and
or
push
sub
into
nop
int3
rolb
cmp
inc
sub
mov
int3
mov
pop
dec
jnp
outsl
ret
fstpl
or
push
sbbb
adc
cld
mov
pop
cs
shlb
or
adc
cld
and
mov
push
mov
cs
enter
outsl
pop
mov
xor
ljmp
stos
xor
cmpsb
xchg
push
cltd
fbld
int
inc
rolb
push
in
fistl
mov
mov
push
mov
mov
jmp
cwtl
dec
adc
push
mov
pop
or
dec
adc
cmp
nop
je
xor
sti
pop
test
out
dec
xchg
adc
add
xor
popa
mov
mov
or
sbb
add
fdivs
pop
lahf
xchg
push
cld
cli
mov
inc
mov
or
add
push
dec
cli
dec
iret
xchg
or
out
sub
push
cld
je
cld
shlb
in
jno
push
iret
mov
int
iret
jbe
jl
cld
pop
enter
xlat
lock
clc
ss
xchg
int
outsb
out
cmpb
dec
sarb
popf
cmp
jo
subb
mov
jg
push
mov
pop
xor
and
and
ret
pop
lahf
stc
or
dec
cli
lahf
inc
xchg
jnp
lcall
cmp
out
dec
dec
pop
fs
sub
hlt
and
fiadds
or
or
xchg
xor
mov
iret
lea
xchg
sbb
sub
sarl
aas
nop
js
dec
jae
outsb
lock
shlb
mov
in
add
out
mov
es
xor
scas
mov
pop
clc
filds
or
lock
loopne
ret
das
sbb
jp
jns
lret
sbb
pusha
cmp
int3
xchg
pop
xor
xchg
fstl
and
mov
cwtl
pop
mov
outsb
subb
or
pop
lods
dec
sbb
popf
std
jl
les
rorl
sub
idivb
jae
aaa
cmpsl
jg
and
mov
call
pop
cld
leave
xor
loope
sub
pop
fisubrl
gs
adc
shll
pop
add
dec
cmp
rcrl
ret
jnp
jb
ds
pop
shlb
leave
inc
gs
sti
push
out
addr16
loope
xchg
es
push
xlat
pop
jmp
push
addr16
dec
subb
add
cld
out
jl
jae
aaa
rcrb
jecxz
imul
flds
pop
cmpsb
add
imul
sbb
lcall
mov
xor
jecxz
jo
xor
lcall
mov
aaa
es
xchg
inc
stos
push
xchg
mov
and
loop
or
sbb
clc
push
sbb
out
add
push
outsb
adc
fdiv
divb
icebp
rcrb
push
daa
push
sbb
cmpsb
cmp
lret
xor
lret
insl
stc
leave
rcll
sbb
jp
cmp
vcvtsi2sdl
dec
and
hlt
inc
inc
adc
pop
aad
call
bound
jmp
sub
insl
leavew
in
cltd
and
scas
adc
xchg
sbb
xlat
mov
or
push
cmpsb
or
push
mov
fwait
pop
xchg
mov
push
das
jg
pop
fs
cs
ljmp
sbb
jg
and
inc
adc
add
test
movd
xor
cmp
sbb
fs
add
hlt
adc
mov
sub
and
cmp
movsl
sub
xor
or
mov
in
pop
push
icebp
lcall
mov
popf
lods
mov
mov
fnsave
add
push
mov
iret
lret
xchg
cmp
or
inc
push
mov
cld
sbb
shl
xor
add
loope
sub
aad
lcall
aas
lds
pop
repz
mov
mov
lods
outsb
imul
push
fwait
mov
loopne
mov
lds
sub
mov
mov
mulb
pop
pop
dec
dec
dec
xchg
mov
popa
xchg
out
cmp
lret
adc
gs
inc
cwtl
xchg
and
push
mov
cmp
push
aad
out
leave
movsb
jecxz
mov
mov
xchg
pop
jo
sbb
dec
cli
push
xchg
clc
or
lea
shll
mov
shl
mov
cmp
adc
xchg
aad
adc
ret
cmpsb
jo
ds
stos
arpl
xor
mov
pusha
andl
js
pop
clc
repz
inc
lds
add
inc
pop
xchg
pop
inc
test
cltd
fadds
ss
sbb
cmp
insl
inc
je
out
lcall
add
lock
sub
test
mov
jno
dec
out
bnd
push
rolb
and
stos
lds
fisubs
xchg
aam
inc
mov
std
push
mov
int3
fistpl
sub
ret
dec
je
cmp
clc
pop
mov
sti
push
cmp
test
scas
mov
dec
fsubs
dec
sbb
push
mov
stos
and
add
cwtl
adc
adc
push
shll
mov
aam
imul
dec
adc
mov
in
jne
ds
inc
out
stos
fadd
jns
popa
lea
sub
in
sbb
pop
sub
pop
insb
mov
xchg
sub
jbe
xchg
scas
pushf
mov
leave
push
movlps
scas
jb
lret
mov
ret
mov
nop
mov
mov
mov
jp
inc
push
push
sbb
xchg
aad
inc
and
xor
mov
push
jg
outsl
sbb
mov
cmc
fs
out
cmpsb
clc
adc
pop
push
into
dec
loope
push
push
loop
in
enter
enter
js
hlt
mov
popf
push
fnstenv
cmpsb
or
xchg
lods
xor
mov
loope
out
and
test
popa
movsb
std
inc
ss
pop
lea
sbb
jne
setle
jmp
sub
imul
xchg
ret
inc
cmp
pop
testl
xchg
stos
addr16
pop
mov
or
std
in
mov
dec
xchg
ja
fildl
enter
outsl
dec
aas
push
adc
inc
sub
and
mov
ret
jp
push
jbe
scas
sbb
cmp
lret
dec
and
insl
xor
pop
loop
movsb
mov
pop
sub
cld
dec
fs
sub
sbb
push
cmp
mov
cmp
fsincos
mov
stos
or
jl
aaa
pop
arpl
loopne
rorb
and
pop
sbb
jno
fdivp
mov
adc
movsl
xchg
xor
xchg
notb
mov
aam
xor
mov
imul
jno
aam
jl
mov
xchg
mov
inc
aaa
mov
int3
mov
mov
pop
mov
dec
xchg
push
xlat
add
add
insl
lock
in
imul
repnz
pop
mov
das
inc
and
aad
dec
repnz
mov
mov
cs
xor
push
cmc
mov
test
jno
jne
pmaxub
and
call
dec
aam
push
pop
xchg
pusha
jne
lock
fsubrl
dec
and
into
xchg
xchg
addr16
mov
inc
sbb
push
adc
pushf
adc
ds
pop
xchg
adc
add
jl
icebp
std
adcb
and
push
pop
mov
std
inc
pop
xor
inc
loope
in
jno
fsts
jae
packsswb
fnstcw
inc
imul
test
pop
shl
sub
xchg
popa
jne
std
lds
jae
clc
pop
aam
lods
adc
xor
cltd
femms
push
cmp
movsb
or
and
inc
test
or
mov
aam
and
rolb
push
push
mov
mov
inc
jbe
mov
push
andb
lods
push
mov
out
stos
pop
rolb
rclb
mov
test
loope
jne
inc
inc
dec
sti
lcall
push
mov
inc
pushf
js
fsubr
jo
lods
insb
pop
push
pop
scas
ljmp
add
pusha
mov
imul
lea
jns
hlt
xchg
mov
jns
adcl
cmpsl
inc
push
lock
mov
or
mov
roll
xor
and
into
and
in
rolb
ja
mov
movb
aas
push
adc
mov
cli
push
pop
ds
popf
add
inc
leave
lods
mov
inc
and
jmp
push
fwait
mov
aad
fbstp
scas
adc
ficompl
lcall
cltd
outsl
rorb
clc
loope
aas
rcrl
sub
and
push
out
cmp
sahf
stos
mov
dec
ret
sbb
leave
xchg
cmpsl
insl
mov
out
fcoml
push
fs
cmp
jmp
inc
pop
xchg
pop
lds
out
mov
jl
enter
lods
sub
sub
fs
push
sbb
icebp
xchg
in
push
or
dec
fcom
arpl
lahf
sbb
in
movaps
xlat
dec
fcmovnb
inc
jns
shrb
adc
aad
add
scas
sub
inc
cmp
ret
jnp
adc
adc
stos
xchg
adc
xchg
mov
int3
xchg
mov
aad
out
mov
xchg
in
pop
call
ljmp
cwtl
pop
cli
sbb
xchg
add
add
sub
hlt
stc
lock
pop
cltd
stos
sahf
aad
shll
sahf
dec
into
loopne
call
movsl
cli
sub
add
mov
int3
push
scas
leave
dec
sbb
pushf
shlb
mov
fbstp
xchg
mov
sbb
jmp
stos
lods
jecxz
jl
sub
fisubl
rclb
inc
sbb
jmp
xchg
pop
push
adc
push
mov
clc
xchg
in
loop
pop
lcall
cld
mov
fistpl
mov
push
mov
jb
sbb
jnp
cmpsb
push
mov
push
xchg
add
fcmove
mov
fstpl
and
fucomi
adc
xor
jb
inc
lret
pop
out
xchg
sbb
popf
mov
push
push
jns
leave
xorl
aad
mov
lock
lods
mov
push
dec
jnp
mov
repnz
mov
shrl
mov
arpl
pop
cmp
testb
in
pusha
mov
sbb
std
jmp
test
dec
lahf
add
lds
test
mov
jbe
and
mov
rcl
adc
in
stos
outsb
mov
inc
test
cmp
leave
mov
xchg
loop
cmpsl
jge
push
out
fistps
subb
lods
sub
les
mov
mov
cmp
scas
cld
inc
test
sti
mov
cmp
inc
frstor
pop
push
push
stos
jno
cmpsl
add
cld
inc
inc
arpl
xchg
xlat
lods
jmp
fwait
push
mov
xchg
jg
aas
xchg
pop
scas
jge
testl
pop
fxch
ja
dec
push
xlat
ss
mov
stc
iret
sub
mov
inc
pusha
mov
aad
pop
cmp
aas
movb
sbb
pushf
sub
fisttpl
repz
cltd
xor
dec
sub
xchg
andl
inc
jle
jo
xor
fistl
xor
mov
out
sahf
rcll
add
nop
xchg
and
and
loop
jg
sub
stc
push
jge
test
inc
es
inc
orl
negb
loopne
xor
test
mov
gs
ljmp
cltd
movsl
repnz
mov
inc
jp
dec
jb
repz
and
push
sahf
inc
popa
sub
dec
insl
xor
daa
pusha
push
std
lret
je
dec
push
pushf
dec
lods
cwtl
mov
adc
ret
lret
mov
ds
push
rcr
xor
inc
loope
pop
mov
mov
mov
sbb
dec
mov
mov
mov
dec
sub
into
gs
push
jbe
add
pop
push
push
mov
mov
cwtl
stos
stos
daa
inc
stos
sbb
mov
mov
repz
lcall
sbb
pop
xchg
aam
dec
mov
inc
mov
dec
inc
jle
adc
push
dec
aad
leave
in
cmc
fwait
js
cs
cld
or
ljmp
mov
es
fscale
jl
icebp
pushf
push
sub
lret
push
mov
cld
add
jno
dec
dec
ljmp
adc
jbe
jecxz
mov
out
jbe
pushf
push
fcomp
jmp
clc
cltd
inc
xor
jecxz
mov
das
shlb
movsl
adc
loop
addl
lds
flds
mov
cmp
lret
xchg
lods
test
cmp
fwait
mov
les
pusha
or
repnz
lock
or
int
aaa
clc
popa
mov
jg
adc
or
fildl
popf
push
mov
imul
dec
je
cmp
dec
jl
xor
scas
and
in
imul
lds
faddl
cmpsb
iret
dec
in
mov
jp
pop
xor
idivb
aas
mov
jmp
pop
pop
pop
inc
outsl
mov
push
sub
cmp
sbb
lods
dec
adc
das
pushf
mull
cmp
call
or
filds
dec
pop
sbb
jle
add
test
cltd
jns
fsub
lock
cmp
xchg
xchg
outsl
push
clc
mov
mov
xchg
mov
mov
push
cmp
rcrl
pusha
fcmovbe
mov
lods
jo
sti
enter
add
push
icebp
push
inc
fisttps
ret
scas
and
mov
outsl
pop
test
dec
das
cli
shlb
cwtl
push
adc
inc
inc
in
mov
dec
add
cs
shl
bound
shrl
jnp
pop
pop
add
mov
sub
add
mov
fdivr
dec
out
fs
dec
js
sub
jecxz
cwtl
gs
test
movsb
jle
lret
add
cmc
pop
vfrczpd
mov
xor
flds
mov
ljmp
add
test
fnstsw
repnz
fs
and
lahf
jne
je
cmp
mov
fdivl
cltd
add
movb
jg
sahf
aad
push
outsb
shl
jbe
lea
sub
pop
mov
sti
das
or
cmp
int3
shrb
dec
enter
jno
xchg
add
xor
sbb
add
jne
cltd
lods
pushf
aad
ror
lcall
xchg
ds
mov
sub
sub
fadds
xchg
fisubrs
xchg
insb
adc
mov
mov
cmp
jb
ret
adc
outsb
and
arpl
cmp
inc
dec
push
and
popa
pop
jecxz
jmp
cmp
mov
out
adc
xchg
out
dec
mov
and
cltd
ja
xchg
mov
std
adc
sti
shll
mov
stc
sbb
push
jae
inc
jns
xchg
cmp
jl
aaa
sub
pusha
test
lret
out
jmp
cmpsl
inc
mov
adc
ret
dec
pop
xchg
incl
adc
lcall
je
lcall
mov
and
dec
mov
and
outsb
cmp
clc
mov
cltd
pusha
repz
in
paddb
mov
stos
ret
adcb
mov
xorl
jmp
iret
jmp
sub
sub
das
insl
xchg
sub
movsb
xor
mov
sarb
in
test
fsubrl
mov
mov
add
aam
pop
jmp
xlat
mov
icebp
jmp
and
bound
xor
imul
scas
cli
dec
rcrl
jmp
popf
mov
aaa
int
sbb
popa
iret
icebp
cmp
mov
mov
fwait
xchg
mov
push
in
pop
jno
adc
imul
lcall
pushf
lods
cmp
in
lea
addr16
xchg
fnsave
add
jp
mov
shlb
lock
lds
cmpsl
int3
sbb
notb
jg
xchg
inc
xor
dec
mov
xchg
stc
les
push
jp
cmp
dec
jnp
lds
das
ret
or
fnsave
adc
pop
imul
inc
sarb
nop
daa
push
add
scas
mov
arpl
shrl
mov
cmp
fcmove
imull
ljmp
pop
or
gs
mov
dec
jnp
jle
push
imul
loop
out
add
movsl
xlat
addl
sbb
mov
in
rolb
inc
xor
jp
jecxz
pushf
push
je
xchg
cltd
aam
and
or
sbb
iret
sahf
and
lods
rcrb
movsl
mov
repnz
mov
lock
xchg
orb
dec
pop
nop
push
ret
imul
pop
stc
ret
inc
fbstp
or
aas
jmp
mov
xor
adc
das
push
inc
jne
or
lcall
xor
pop
movsl
lret
pop
int3
xchg
aad
stos
in
test
adc
test
or
mov
pop
pop
push
sbb
out
lods
mov
int
push
cltd
out
add
mov
add
mov
mov
and
cmp
xchg
xor
test
jge
in
inc
add
xlat
jp
push
push
xor
cmp
jg
jl
jae
or
cmp
sub
loopne
xchg
int
out
pop
fsts
push
sbb
xor
jb
adc
in
sub
scas
and
in
add
aas
sub
int3
mov
push
jecxz
cmpsb
in
cmc
shlb
cmp
outsl
xor
nop
mov
push
pop
adc
adc
adc
test
popf
fnsave
lock
and
and
flds
jb
ja
cmp
icebp
xor
pop
lcall
mov
outsl
mov
stc
mov
lret
mov
stos
stos
daa
jae
das
int
mov
push
xor
add
bound
loopne
dec
test
push
pop
test
fistl
inc
in
xor
addr16
mov
pop
fnstsw
and
push
mov
scas
pop
sub
insb
repz
das
cmpl
dec
mov
outsl
test
aaa
add
jnp
aam
leave
clc
and
int
das
shr
outsb
icebp
adc
sahf
push
mov
cmp
lock
jbe
mov
outsl
in
and
