push
mov
sub
movl
mov
xor
mov
div
mov
mov
mov
mov
mov
mov
and
cmp
jne
mov
and
mov
mov
xor
push
pop
div
mov
mov
add
mov
mov
add
movzbl
movzbl
sub
mov
add
mov
jmp
mov
and
mov
mov
shl
mov
mov
mov
mov
add
movzbl
movzbl
xor
mov
add
mov
mov
inc
mov
mov
shl
mov
shr
or
mov
cmpl
jl
xor
inc
leave
ret
push
mov
sub
movl
mov
xor
mov
div
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
sub
push
push
mov
mov
jmp
movl
mov
xor
push
pop
div
mov
mov
shl
mov
mov
xor
push
pop
div
mov
mov
shr
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
imul
mov
mov
mov
pushl
pushl
pushl
call
add
cmp
je
mov
mov
xor
push
pop
div
mov
mov
shl
mov
mov
mov
jmp
mov
mov
call
mov
pop
pop
leave
ret
push
mov
sub
call
andl
push
push
push
push
push
call
cmp
jne
push
push
call
test
jne
push
push
push
push
call
add
xor
jmp
xor
leave
ret
int3
int3
int3
outsl
lea
int3
int3
int3
int3
int3
int3
int3
int3
and
or
push
sub
dec
xchg
jb
or
mov
stos
xor
cli
fmul
pusha
mov
out
pop
xlat
stc
mov
cltd
and
sub
jno
bound
dec
push
arpl
dec
xchg
mov
inc
sbb
data16
dec
jbe
shlb
out
jnp
push
pop
pushf
dec
lds
aad
jle
test
in
mov
sbb
mov
or
jb
pop
dec
push
rcl
adc
lods
or
popl
add
jo
add
push
jge
push
imul
jecxz
enter
jp
pop
add
jg
add
shl
aas
js
imul
subb
cwtl
and
mov
mov
jo
sarl
jecxz
xor
lea
cmpsb
sub
fstpt
sub
sti
sub
lcall
push
sub
je
pop
and
dec
je
loopne
jb
add
inc
je
push
fcoms
ljmp
cmp
adc
xor
mov
or
adc
mov
in
insl
test
pop
cmp
ja
dec
decl
jbe
ljmp
cltd
aaa
adc
or
les
js
jmp
add
das
push
fisubl
gs
popl
mov
insl
popa
lea
je
imul
mov
nop
movsl
cmp
adc
sbb
push
test
fs
jg
test
cmp
add
in
mov
rcrl
push
xor
in
mov
or
inc
or
scas
stos
loopne
shl
xchg
fs
pop
xor
push
and
les
jb
dec
cmpb
jns
push
inc
jle
pop
imul
pop
nop
nop
pop
sbb
imul
xchg
popf
mov
sbb
clc
shl
push
in
daa
mov
lods
mov
sub
scas
lret
add
decl
xor
xchg
push
mov
icebp
jnp
mov
loopne
add
cld
clc
cmc
jns
aam
scas
mov
cmp
sbb
js
stos
sbb
sbb
xor
mov
and
cwtl
sarl
sbb
iret
add
clc
cld
pop
jbe
ldmxcsr
mov
jne
imul
incl
ds
ret
cmp
sub
push
mov
fsts
leave
cmp
pop
jb
das
xchg
inc
inc
jno
dec
mov
pop
inc
mov
jns
arpl
stos
in
sub
mov
sub
jl
cmp
xlat
dec
incb
fbld
jmp
pop
xchg
mov
add
sbb
int
push
mov
in
sbbl
in
cmp
rol
iret
sub
ret
adc
xchg
mov
repnz
ret
out
int3
add
enter
pop
cli
push
sub
stos
jge
add
inc
inc
adc
lock
add
repz
push
test
mov
bound
push
adc
frstor
mov
dec
dec
dec
dec
std
push
sbb
lods
mov
sub
and
sub
and
je
mov
lea
dec
jl
subl
cs
jne
inc
stos
in
pop
jbe
cmp
xchg
jno
xchg
mov
jns
aaa
mov
mov
clc
mov
movsb
or
mov
mov
inc
je
adc
aas
xchg
mov
lahf
and
insb
mov
push
mov
adc
sti
adc
movsb
xor
sbb
or
sbb
ss
cmc
dec
lea
out
adc
push
cmc
mov
iret
popf
ret
lret
call
jno
mov
scas
cmp
addr16
test
ret
inc
mov
or
into
dec
add
lcall
add
mov
rorb
jp
adc
mov
or
add
cwtl
cmp
mov
test
test
sub
mov
cmp
out
cmp
imul
outsl
scas
sub
daa
enter
sbb
inc
inc
sub
lods
fld
or
test
jecxz
cmpb
psrad
stos
mov
and
push
loop
pushf
ror
test
stc
fbstp
addr16
adc
mov
ds
adc
or
int3
movsl
mov
in
xchg
jnp
and
dec
adc
das
and
ds
pop
cltd
out
aaa
fildl
std
mov
in
mov
jns
dec
rcr
mov
xor
jp
loop
cmpsl
aas
cmp
dec
cmp
xchg
pop
sub
daa
aas
iret
aaa
mov
repz
sub
push
mov
lret
or
or
adc
std
ret
sub
inc
lea
repnz
in
push
cwtl
js
sub
jecxz
xchg
lret
jg
mov
add
daa
xchg
cmpsl
and
out
xor
int3
shr
enter
and
fs
das
lret
cltd
out
lcall
lock
jae
ret
adc
sar
cltd
in
sub
push
ljmp
sbb
jmp
cli
push
inc
pop
jns
xchg
mov
ljmp
repz
xor
stos
sub
mov
out
cs
jne
movsl
xchg
or
jp
enter
sub
dec
push
pop
jns
fidivl
dec
and
xor
scas
out
cltd
cmp
pop
sbb
inc
sbb
divl
push
sub
and
mov
push
lahf
push
insl
lahf
xchg
frstor
out
mov
or
xchg
and
push
and
sbb
cwtl
dec
aad
in
andl
roll
or
or
out
inc
dec
in
jge
into
rcll
jns
xchg
pop
push
js
test
mov
pop
popf
adc
fs
das
push
sahf
imul
fwait
in
scas
addr16
iret
imul
push
cmp
sahf
push
mov
xor
or
or
cmpsb
xchg
fdivl
dec
pop
insb
jae
and
test
ja
mov
fdivrl
ret
les
mov
xchg
rcl
jg
cmpsb
mov
fdivrl
cmp
std
add
insb
loop
sbb
dec
sub
jmp
inc
xchg
mov
loop
sbb
in
js
xor
je
mov
sbb
xchg
and
aam
fadds
ss
subl
push
jo
pop
mov
lods
jb
and
int3
and
lcall
loopne
mov
push
pop
mov
rcll
lods
cmpsb
dec
cmp
in
xchg
lret
mov
lret
mov
insl
ds
push
inc
mov
push
mov
repz
rcll
repnz
ss
pop
or
mov
test
mov
popa
ja
ds
add
sub
repz
mov
aas
jmp
sbb
cs
lock
aam
jbe
test
fsub
xor
pop
cmpb
adc
in
loope
jl
xchg
sti
aam
mov
std
add
test
mov
popa
add
sub
xor
enter
pop
add
mov
jbe
xchg
sub
jae
in
repz
popf
xor
cs
mov
xchg
nop
or
push
outsb
pop
jbe,pt
addl
adc
jb
loope
lcall
xor
push
scas
stos
sbb
stc
sub
xor
adc
loopne
out
adc
adc
cmp
rsqrtps
testl
mov
sbb
iret
mov
aaa
es
xchg
xchg
xchg
js
mov
out
cmpsb
and
xchg
adc
hlt
in
push
data16
jnp
test
or
jae
ss
lods
pop
and
dec
cs
cmpsl
sarl
cli
int
pop
xchg
push
xchg
mov
test
add
fldcw
and
mov
adc
insb
xor
jg
repnz
mov
sub
xchg
pop
out
xchg
pop
push
stos
in
in
or
push
lods
jnp
ret
mov
nop
in
and
out
daa
xchg
imul
push
das
ja
cmp
loop
inc
mov
mov
dec
fisubl
jb
fs
push
rdseed
and
mov
mov
fisttps
es
jl
inc
call
jecxz
dec
into
aad
js
enter
push
sbb
xor
imul
rorb
pushf
push
push
mov
test
or
cmp
pushf
loop
adc
pushf
js
sahf
sbb
jno
jg
dec
xchg
das
jns
cmp
push
push
sub
fistpl
sbbl
outsl
inc
test
xchg
lret
ljmp
pop
mov
imul
pop
push
lods
lret
cmp
inc
or
dec
ds
xchg
push
jns
mov
fistps
jge
adc
sub
xchg
call
pslld
xor
or
test
dec
pop
int
sbb
clc
add
or
loop
stos
push
push
out
inc
inc
cmpsb
outsl
out
pop
stos
enter
insl
pop
int
fidivrs
ljmp
jne
push
push
pop
mov
xchg
insl
cmp
fldt
cld
out
outsl
jnp
and
pop
xchg
cwtl
pop
mov
xchg
lahf
sbb
aam
and
push
push
jne,pt
outsb
mov
fisttpl
mov
or
push
pop
daa
dec
jge
ret
int3
xlat
lahf
mov
mov
movsb
push
mov
imulb
popf
stc
scas
negb
pop
imul
out
les
repnz
jmp
mov
jns
lcall
or
cmp
push
js
xor
out
dec
cmp
cmp
into
dec
std
xor
fstl
loopne
cmp
stos
add
mov
adc
jne
inc
fiadds
insl
pushl
sub
sub
leavew
mov
popw
add
fcom
cmp
jns
aad
lea
paddd
push
jle
lds
adcb
inc
outsb
addr16
pop
sub
push
push
fisttpl
addr16
out
mov
fisttpl
and
fs
mov
pop
aam
sbb
cmp
out
mov
lods
or
out
pop
mov
and
xchg
out
pop
icebp
mov
push
mov
cmp
shrb
dec
sti
cld
call
mov
dec
jo
push
outsb
push
fmull
popa
jns
dec
gs
stc
insl
ja
mov
insb
psrlq
pop
mov
inc
cmpsl
testb
jle
fucomp
mov
cmp
icebp
xor
mov
in
iret
test
mov
icebp
xor
aaa
ss
xchg
inc
mov
ret
sub
xchg
rorb
dec
lea
push
cld
and
inc
mov
std
add
pushf
jb
repnz
mov
call
loope
sahf
lods
out
mov
mov
or
push
cmp
into
stos
clc
xchg
sub
clc
inc
pop
jbe
adc
cs
dec
xor
div
popa
aas
push
mov
lcall
mov
lahf
fsubr
jnp
cltd
pop
jg
or
push
addr16
dec
inc
filds
push
push
cmpsb
and
loopne
cmc
imul
lea
loope
lcall
and
jle
sbb
mov
jge
and
add
dec
cmpsb
jp
jg
rorb
mov
inc
push
push
add
sbb
jno
add
cmp
cmpsw
mov
inc
mov
xor
jecxz
adc
or
fs
xchg
mulb
jmp
push
arpl
movsb
rcrb
sub
jo
pop
addr16
jb
mov
lock
pop
jbe
and
jae
stc
ret
test
jp
cmp
push
jno
lret
bound
shrb
repz
je
rcrb
adc
sbb
aaa
xor
fwait
into
and
sahf
push
mov
test
cmp
int
adcb
xchg
xchg
pop
adc
pop
push
repnz
pop
or
mov
loop
sub
mov
pop
je
idivb
int3
dec
pop
test
add
lods
cmc
or
in
fsubl
or
dec
lret
sub
aam
xor
pusha
pusha
xor
sub
in
sbb
or
xchg
xor
cmp
sub
lret
mov
cmpsl
pop
sub
pop
cld
mov
aas
psubq
cmpb
sub
sbb
pop
mov
and
bswap
pmulhuw
pop
adc
jle
pop
cltd
xchg
movsb
xor
jns
call
sti
addb
cltd
xchg
mov
ret
mov
out
enter
test
dec
dec
dec
movsb
ss
gs
aad
add
push
ret
sub
lock
sub
mov
push
inc
sub
cvttps2pi
fadds
cmp
aad
lea
adc
fwait
arpl
xchg
and
mov
sbb
sbb
or
xor
inc
jo
inc
mov
xchg
mov
inc
pop
enter
sbb
or
xor
jmp
add
shrl
inc
js
pop
iret
pop
jle
jne
mov
insb
cmp
pop
nop
push
gs
in
lret
fcomp
or
inc
lahf
pop
push
and
packssdw
pop
or
jo
cmc
dec
sarb
and
cmp
insl
lret
xchg
push
jbe
xchg
stos
lcall
insl
fnstenv
cmp
cld
inc
fwait
adc
cmc
mov
add
aad
xchg
data16
dec
jecxz
mov
lcall
xor
jmp
loop
insl
add
imulb
es
movsl
int
je
movsb
lods
dec
pop
cltd
sub
icebp
clc
pop
xorb
pop
fs
or
add
sbb
xchg
xorl
les
sarb
sbb
fdivrs
lds
jl
repnz
mov
lret
dec
imul
cwtl
xor
push
lcall
mov
add
insb
mov
sub
ds
fimuls
mov
mov
mov
lock
mov
fsub
mov
lahf
iret
imul
jecxz
pop
fwait
xchg
in
jmp
movb
imul
mov
repnz
aas
scas
sub
mov
or
jge
ret
test
int
insb
pop
cmpsl
push
mov
stos
mov
pusha
int
test
insb
inc
push
je
adc
xchg
pop
mov
push
xor
outsb
cmp
jns
dec
inc
test
iret
sbb
mov
int3
ljmp
jg
pop
aas
inc
push
imul
jae
out
inc
je
push
mov
pusha
addr16
sub
movsl
add
ret
sbb
sub
into
push
shll
mov
nop
mov
ss
mov
inc
shlb
stc
les
in
shlb
or
cmp
sbb
bt
xor
ljmp
push
inc
sti
dec
fnsave
inc
xor
jg
fsubrs
in
sbb
pusha
mov
sarb
adc
xor
mov
jecxz
push
fistpll
xor
nop
addr16
aaa
cli
mov
outsb
lahf
orl
mov
sbb
sbb
dec
add
pop
stc
jp
test
shlb
and
cmp
arpl
xor
mov
xchg
ret
mov
pop
inc
clc
xchg
adc
jne,pt
sahf
add
addb
push
lock
popf
movsb
cmc
out
mov
scas
push
jecxz
mov
fnstsw
jmp
or
pop
push
sbb
hlt
out
xchg
push
ret
pop
sbb
and
xor
mov
scas
cmp
and
js
imulb
mov
cli
lock
fincstp
test
lock
clc
mov
and
arpl
mov
inc
ret
push
decb
jle
sub
pop
xor
push
mov
jge
dec
dec
mov
dec
adc
push
ficoms
cld
fs
stc
mov
sbb
push
sbb
stos
and
in
movsl
lret
adc
push
adc
cmp
mov
sbb
mov
push
fstpt
es
lds
adc
insb
hlt
mov
lret
cmp
mov
pop
das
pop
shrl
mov
xchg
insb
frstor
scas
imul
jl
out
iret
lcall
inc
mov
or
out
adc
mov
inc
call
ljmp
mov
popf
lea
ret
cwtl
ss
adc
and
fcmovnb
or
jb
mov
mov
xchg
das
jae
cmpsl
test
rclb
rcll
dec
arpl
insb
sahf
push
pop
xor
jns
repz
out
mov
in
lret
or
cli
or
push
cs
mov
mov
mov
sub
xor
fdivs
xchg
pop
jne
inc
jns
fldt
pop
fcoml
push
subl
add
xchg
out
push
cs
mov
pcmpgtb
xchg
test
jbe
xchg
adc
jp
jo
adc
push
xor
addr16
movsl
sub
xor
pop
nop
scas
jnp
inc
pop
sahf
mov
sub
jle
mov
and
lret
push
xchg
je
xor
notb
inc
in
sbb
pushf
leave
jle
ss
push
cmp
mov
daa
rclb
mov
test
in
xor
leave
addr16
jmp
sti
mov
mov
lock
into
idiv
test
jmp
jno
sbb
xor
ret
out
addr16
mov
cmc
and
pop
xchg
loopne
out
sarb
pop
jns
cmp
push
or
ljmp
mov
mov
int
mov
mov
in
out
rcll
clc
gs
mov
xor
xchg
mov
sbb
mov
push
and
mov
xor
into
inc
mov
setne
add
testl
fsubrl
cwtl
or
js
jecxz
push
add
xor
stos
les
jns
cmp
xor
pop
int3
xchg
adc
mov
lcall
sbb
jle
jl
push
out
sub
push
int
rcll
lods
lods
mov
notb
push
adc
jg
std
imul
pushf
divb
outsl
mov
repnz
ljmp
nop
ret
jo
jp
lock
and
xchg
mov
test
nop
cmp
scas
movb
ljmp
mov
sub
mov
orb
xlat
and
hlt
movl
sub
add
les
xchg
inc
inc
xor
mov
int
xor
ret
inc
test
scas
pop
pop
test
sar
xor
jbe
outsb
aas
push
adc
cmpsb
pusha
sbb
xor
and
inc
push
popa
mov
fildl
lds
push
xchg
cld
les
jns
mov
icebp
inc
shll
sti
mov
lret
out
in
iret
dec
mov
mov
pop
jecxz
frstor
push
or
sub
adc
scas
adc
add
scas
cltd
rcrb
ficoml
fldl
and
in
outsl
daa
inc
je
roll
fiadds
xor
mov
das
stc
cmpl
xchg
cs
mov
push
mov
sub
or
mov
mov
subl
push
add
cltd
or
popa
pop
mov
cmp
psubw
mov
or
ficoml
insb
pop
lods
jae
cmp
cmp
fisubrs
rolb
outsl
les
mov
jp
jne
or
jle
icebp
lods
jle
cld
imul
pop
sub
imul
int
cmp
sub
ret
fsubr
jle
sub
push
es
dec
loope
cmp
jle
jl
push
or
in
dec
test
or
inc
push
cltd
xor
int
xorl
movsl
out
push
divb
insl
mov
dec
inc
fwait
call
daa
lods
mov
movsl
lods
les
bnd
cmc
sub
adc
cmpsb
cld
cmp
mov
or
nop
mov
rcl
pop
or
icebp
push
mov
sub
arpl
sub
ljmp
sbb
pop
xchg
fidivrl
push
sub
pop
hlt
adc
cld
fsubl
dec
adc
add
xlat
mov
lahf
insb
add
cld
add
mov
push
scas
hlt
jb
les
scas
lcall
repz
cmp
mov
lods
inc
jo
xchg
pop
and
jne
and
clc
fs
jne
jns
imul
lock
sbb
mov
jb
test
arpl
mov
call
or
dec
ljmp
mov
dec
pop
inc
mov
push
cmc
jle
cmc
pushf
rolb
arpl
lock
xchg
fcom
fwait
jle
mov
xor
imul
lret
dec
and
cmc
jne
push
sbb
fstl
xlat
mov
nop
xor
xor
cmc
pop
and
pop
call
rclb
push
adcl
cmp
les
sbb
repnz
xor
repnz
ljmp
mov
ljmp
cwtl
push
adc
push
xchg
inc
ds
test
cli
call
pop
rcrb
loopne
jo,pt
loop
sbb
lods
push
call
jl
xchg
aaa
pop
xlat
subps
imull
sbb
aaa
out
lret
mov
jmp
aaa
stos
sub
xchg
daa
ret
fadds
hlt
aam
mov
sub
sbb
xchg
mov
lea
jne
xchg
mov
aas
out
jnp
xchg
popf
lahf
rcrl
pop
into
cmp
or
in
stos
xor
dec
stos
mov
inc
mov
stc
stos
xor
fs
jge
pop
aam
fwait
ss
dec
lret
sbb
mov
in
repz
mov
push
mov
adc
lds
inc
mov
out
mov
addl
mov
mov
lahf
nop
aas
mov
xorb
pop
mov
adc
jl
in
cwtl
imul
mov
inc
cmp
cmp
pop
mov
jge
dec
ds
sahf
mov
and
xor
jge
ret
lock
cmp
jl
pop
inc
sub
dec
icebp
or
mov
shrb
inc
and
pop
cmp
ret
ret
jo
mov
pop
xor
cmp
adc
xchg
int
cmpb
xchg
mov
mov
hlt
arpl
cs
cmp
mov
or
andl
add
fistl
aad
adc
fwait
aas
mulb
pop
cmc
decb
addb
add
mov
ljmp
sbb
cmp
push
mov
cltd
cld
dec
sbb
jo
cmp
cmpsl
mov
sarb
push
loop
add
jecxz
pop
arpl
out
fstps
ds
jecxz
or
pop
cmpsb
pop
or
push
rorl
test
das
add
jl
rorl
sub
xchg
lret
subl
pop
mov
sbb
pusha
lret
push
xchg
out
cwtl
rclb
add
mov
cmc
pop
add
fucomp
das
insb
xor
mov
dec
or
xchg
aam
mov
jnp
in
loop
shll
negl
adc
in
xor
xchg
dec
xchg
cmp
mov
cmp
cwtl
sbb
rcll
xor
pop
out
jo
mov
cmp
and
and
mov
cmp
xchg
jne
mov
shrl
push
imul
pop
out
push
cli
imul
aam
cwtl
iret
aaa
and
popf
les
cs
adcl
in
into
inc
mov
or
push
and
repz
xor
cs
add
xacquire
sub
fwait
int3
push
xchg
daa
pop
cmp
dec
mov
xor
mov
sti
outsl
les
test
push
pop
fsqrt
sbb
rclb
imul
xor
gs
sub
add
mov
sub
push
jns
mov
hlt
movsb
movsb
cs
out
mov
movsb
push
idivw
sbb
outsl
ljmp
faddl
and
and
cmp
xchg
pushf
loopnew
call
pop
cltd
ret
dec
stos
in
mov
fsubr
out
push
subl
jmp
arpl
stos
jle
push
jge
xlat
xor
ss
xchg
fistl
daa
repnz
pop
sahf
ffree
ds
sub
mov
sbb
jnp
add
pop
enter
sbbb
xchg
inc
lds
test
fucomp
cmp
cmpl
std
ss
lret
jno
lret
sti
sbb
xchg
fisttps
pushf
adc
inc
inc
pop
jnp
pop
cs
push
test
fldcw
loopne
je
ljmp
mov
mov
push
fcoml
xchg
cwtl
cld
in
or
mov
out
mov
sarl
adc
pop
xchg
dec
jmp
push
add
inc
fsubrs
adc
mov
sub
pop
sti
mov
movsl
push
mov
aad
sub
cmpsb
cmp
xchg
mov
lahf
out
xchg
out
jno
add
jecxz
push
dec
roll
mov
mov
adc
mov
lret
js
dec
mov
les
loopne
iret
and
mov
jg
or
push
divb
adc
and
jb
push
cmp
lahf
inc
cmp
pop
int3
mov
xchg
fldenv
lock
sub
cs
jo
jo
push
dec
xor
mov
daa
stc
xor
into
inc
rcrl
jo
and
es
rorb
in
cmp
idivb
mov
xchg
push
movsb
mov
mov
arpl
ja
push
or
xor
leave
cmpsl
rcrl
jle
fdivr
mov
jge
lret
sahf
fiadds
ss
pop
orl
std
jecxz
mov
push
pop
and
lods
pop
push
lods
mov
sbb
cmp
aas
dec
fmull
addl
xor
decb
lcall
add
mov
lahf
jmp
loopne
movsl
pop
mov
mov
jecxz
shlb
test
jbe
insb
jg
rcrl
js
or
cmpsl
push
inc
flds
les
test
push
mov
mov
inc
add
and
push
loopne
mov
adc
push
xor
sti
aam
mov
out
rcrb
sub
jp
pop
icebp
or
shlb
mov
repz
jnp
cmp
js
sbb
je
scas
dec
mov
fimull
or
fildll
cmp
out
pop
das
sub
pop
cld
dec
jl
cmpb
and
sbb
inc
pop
test
dec
adc
scas
dec
outsb
cmp
lds
push
push
and
xchg
ret
rorb
cmp
mov
mov
fsts
out
mov
and
je
push
ret
sub
mov
imul
xor
mov
lods
out
pop
test
es
cmp
or
insl
test
aam
sbb
or
imul
push
or
mov
loop
add
popf
and
data16
js
inc
inc
loope
mov
loop
scas
add
sbb
mov
mov
xor
cmpl
movsb
in
lods
and
andb
mov
push
imul
lret
xor
jae
lods
ja
adc
mov
mov
aaa
pop
mov
shll
inc
xchg
ffreep
outsb
or
adc
cs
pop
out
cmp
add
sub
loop
bound
add
pop
fstpl
add
push
push
aas
or
push
xor
push
jo
cmp
or
imul
mov
shrb
les
testl
jns
xchg
shrl
pop
jl
fmull
inc
jnp
jle
rcl
push
lahf
cmc
or
mov
sbb
lods
fs
out
or
push
rorl
ja
pop
lods
sub
pushf
imul
sub
add
fisttpl
dec
stos
inc
jne
sbb
andb
dec
dec
mov
jecxz
or
stos
stos
and
pop
lret
or
sbb
sub
fimuls
les
add
hlt
fst
aam
sarl
call
fldl
int3
dec
pushf
jo
mov
mov
push
mov
jo
inc
fwait
das
mov
push
outsb
out
imul
xlat
pop
insb
cltd
movsb
adc
mov
lods
xchg
into
movsb
push
js
xchg
movsl
adc
and
inc
popa
inc
pop
mov
and
pop
jl
mov
mov
mov
xor
pop
xor
mov
adc
test
int3
adc
jecxz
xchg
mov
xlat
repnz
dec
xlat
and
jle
repz
inc
xlat
xchg
in
sub
nop
adc
xchg
shl
and
mov
out
pop
shrb
jno
lret
jecxz
clc
in
into
fistpl
sbb
xchg
out
xor
out
xchg
or
push
cmpsl
pop
lea
cmpsl
movb
les
insl
sub
push
dec
cltd
dec
ljmp
fldenv
iret
negb
mov
ficompl
and
fs
or
fcmovnbe
xlat
hlt
xor
fcmovnu
inc
or
inc
decb
sub
dec
fwait
loopne
pop
stos
inc
or
sbb
orl
dec
pop
adc
fwait
push
in
add
test
fs
dec
jae
cmp
lock
in
std
les
add
inc
inc
jl
repz
fisttps
xchg
and
dec
push
pop
or
xlat
mov
xchg
ljmp
and
test
imulb
sbb
jo
sub
ljmp
fiadds
dec
mov
rcrl
fs
push
or
lea
rorl
dec
in
popa
outsl
mov
and
sti
push
or
jae
loopne
pop
imul
insl
mov
sahf
jecxz
inc
ljmp
mov
addr16
fnstsw
push
sbb
outsl
int3
stos
sbb
lea
out
jo
rorl
mov
pushf
insb
xchg
in
pop
loope
jns
add
fldenv
jge
leave
pop
mov
mov
pushf
pop
dec
test
movsl
add
lret
fs
out
inc
jbe
add
or
jmp
dec
add
daa
loopne
and
pop
into
and
jl
cmc
js
bound
adc
cltd
cmp
loop
push
jae
mov
sbb
mov
xlat
fwait
cmp
aam
and
das
dec
sbb
mov
aam
xchg
mov
addr16
sbb
jbe
push
cmp
push
jp
dec
lret
push
pop
data16
out
jbe
jle
push
dec
callw
xor
imul
jnp
incb
test
das
cmp
sahf
sbb
add
daa
outsb
sbb
mov
inc
ret
sbb
adc
cmp
jp
xor
xchg
mov
and
out
sarl
gs
mov
movsl
dec
incl
cmpsl
je
test
popa
pusha
in
dec
movsl
jbe
mov
and
dec
sub
mov
cmp
js
movsb
popf
add
out
add
out
shrb
push
pop
xchg
lods
int
jns
shll
pop
pop
stc
out
jo
mov
xchg
fwait
jns
out
and
fmull
out
les
inc
mov
aad
push
pop
push
scas
sti
mov
cmpsl
push
ds
sbb
inc
cltd
xor
jl
bound
shlb
pop
js
dec
stos
scas
sbb
outsb
les
add
push
lret
adc
or
mov
lock
sub
xchg
pop
outsb
enter
mov
push
jle
mov
loop
push
sbb
inc
mov
xor
rcrb
adc
mov
lahf
out
pop
or
inc
loop
loop
and
or
inc
scas
dec
mov
out
push
jb
iret
xor
bound
and
ds
std
mov
sbb
push
outsl
rcrl
stos
or
ja
and
mov
inc
jle
sub
clc
bound
xchg
mov
fiaddl
pop
pop
ljmp
jl
dec
fistps
inc
sbb
or
cltd
outsb
pop
aas
je
aam
pop
push
scas
shll
divl
inc
out
sub
adc
xchg
stos
lahf
sub
test
rcll
push
inc
pop
aas
sub
cmc
movsb
lret
xor
fwait
push
cmp
mov
lods
jnp
sbb
push
mov
jecxz
and
or
rep
mov
adc
aas
lds
push
pusha
lods
xchg
dec
jg
out
xchg
sub
jl
repz
sarl
mov
out
mov
inc
aad
loop
xchg
cmp
daa
lcall
mov
or
add
lods
inc
mov
push
xchg
xor
mov
jle
popf
or
roll
repnz
mov
std
sub
cmp
mov
notl
adc
out
jge
cmpsb
cmp
adc
mov
pop
inc
pop
setns
xor
movlps
and
pop
lds
push
addr16
cmc
into
add
in
fucomip
sbb
icebp
mov
movsb
cmpsb
mov
mov
dec
cmc
iret
rolb
out
inc
mov
call
jae
xchg
clc
sub
jl
adcb
sbbb
add
xlat
inc
shl
in
and
movsb
les
sysret
imul
push
push
testl
pop
aad
ss
mov
xor
push
aaa
out
sbb
jmp
fidivs
mov
xchg
out
jge
clc
sub
shrl
cmc
arpl
mov
add
lahf
imul
lods
jmp
imul
iret
daa
and
or
insb
mov
outsl
in
std
cs
xchg
ror
nop
xchg
or
mov
adc
cmp
jno
and
xchg
inc
fwait
or
jmp
outsl
mov
cs
sub
sbb
mov
cmpsl
cmpsl
es
lock
loop
mov
or
sahf
int
mov
mov
push
add
mov
aas
xchg
xchg
gs
mov
aad
sbb
xor
movsl
lret
scas
sub
mov
enter
or
vpsubsb
imul
cmp
sbb
subps
aaa
imul
add
rol
fidivrl
stc
mov
lods
xchg
dec
out
push
outsb
dec
iret
mov
xor
adc
cld
xor
mov
cli
mov
imul
dec
mov
lea
call
adc
sarb
test
outsb
lea
adc
mov
je
cltd
fildll
out
in
ljmp
push
xchg
loopne
ret
sub
add
or
push
in
jl
fcomps
loop
xor
es
mov
cmp
mov
es
dec
sub
pop
inc
mov
je
js
mov
mov
mov
lahf
mov
mov
mov
movsl
adc
ret
cmp
mov
push
fwait
icebp
mov
scas
pop
mov
lahf
test
pusha
orb
jmp
sbb
inc
je
sti
outsl
fcomps
rcrl
loop
jo
imul
aas
and
shl
imul
cmpsl
or
mov
loopne
fs
cltd
push
mov
jne
mov
sbb
or
add
push
shrb
jne
sbb
orb
stos
mov
pusha
push
push
dec
sbb
ds
xor
inc
sub
and
cmpsl
jbe
dec
jp
cli
sti
cmpsb
mov
xchg
idiv
sbb
repnz
aam
mov
lret
arpl
mov
call
mov
ficompl
sbb
push
xor
mov
xchg
xchg
push
movsl
cmp
dec
xor
aaa
lcall
inc
jp
xlat
xor
inc
shll
ja
mull
lahf
and
pop
fcomi
cmp
adc
popf
icebp
sub
dec
mov
pop
fucomip
mov
adc
je
cmc
mov
pop
and
dec
adc
movsl
xchg
sub
inc
inc
sub
dec
mov
and
lds
sbbb
in
pop
or
jle
fcompl
jns
je
push
mov
lods
subb
sub
in
cmp
push
xchg
dec
aas
xchg
mov
mov
fdivr
mov
movsl
mov
pop
pop
inc
dec
xor
add
cld
imul
cld
pop
push
stc
mov
ret
or
jae
lea
loope
mov
mov
jnp
push
les
dec
pop
mov
adc
int
pop
mov
fwait
ss
scas
cltd
movsl
xchg
je
cmpsb
cs
enter
ret
cs
adc
sub
mov
xchg
lods
mov
je
in
pushl
or
xchg
inc
dec
xorb
sti
iret
iret
lret
cmp
or
sbb
insl
sarb
mov
notb
push
gs
loop
xchg
cli
xchg
xor
fistpll
or
or
fdivp
sub
push
or
mov
mov
pusha
dec
mov
mov
add
push
adc
and
loope
imul
in
sub
mov
push
jle
rcll
adc
jnp
sarb
arpl
mov
inc
insb
outsl
jbe
fwait
pusha
cmpsb
cli
pop
pusha
fdivl
dec
xchg
sahf
mov
je
mov
dec
xor
sbb
lds
push
fadds
pop
sbb
mov
cmp
pop
fidivrl
subb
pushf
aam
je
ret
dec
or
inc
dec
sub
dec
adc
loope
lcall
xchg
in
xor
jb
mov
and
push
cmc
out
mov
pop
repnz
rclb
bound
dec
inc
outsb
mov
ljmp
mov
push
out
cmp
mov
xor
repz
mov
mov
scas
outsb
mov
subl
xchg
inc
sar
mov
sahf
aas
jo
mov
jmp
movsb
arpl
push
or
jp
rolb
push
shlb
sbb
mov
push
lcall
pop
xchg
inc
xchg
jno
ffreep
jle
xchg
push
or
xor
in
mov
mov
or
lods
lods
sbb
xor
xchg
mov
inc
adc
sbb
cmp
test
testl
sub
je
pop
shrl
mov
or
inc
mov
xor
repz
pop
lahf
fldl
loopne
dec
or
mov
and
adc
fidivrl
push
xchg
or
dec
add
or
lods
mov
in
arpl
and
clc
clc
dec
dec
lods
int3
or
mov
mov
jecxz
lea
or
xor
rolb
mov
cmp
jecxz
hlt
pop
lcall
cmp
fcomip
outsl
shll
loop
out
mov
les
das
push
in
xchg
mov
je
or
add
cmp
mov
and
loope
xor
loop
adc
push
pop
data16
xor
sub
fmul
inc
lcall
in
hlt
rclb
mov
jne
rcll
out
pushf
xor
shrl
pop
xchg
scas
pop
jecxz
in
clc
push
xor
jle
outsl
in
ret
jmp
push
arpl
shlb
sub
iret
nop
xor
push
clc
dec
and
ds
lcall
sbb
stc
cmp
and
mov
xchg
adc
xlat
out
pop
pop
cmp
lods
test
scas
imul
or
jge
imul
mov
jb
aaa
pop
and
daa
or
pop
xchg
mov
lods
movsb
fucom
ljmp
mov
sti
scas
popa
sti
dec
clc
in
or
mov
incb
adc
mov
inc
js
mov
insl
dec
fucomip
mov
inc
pop
nop
pop
xchg
pop
xor
mov
sbb
push
roll
xor
jmp
jb
int3
pop
popf
pop
test
inc
pop
inc
sbb
mov
jl
and
pop
arpl
cmp
and
push
mov
call
aaa
pushf
inc
outsb
fisttpl
add
ja
sub
fwait
dec
stos
and
shrl
fs
lcall
mov
adc
loope
inc
xorl
fidivrl
pop
divb
insb
xlat
cltd
inc
mov
pop
aam
sub
xchg
mov
popf
xchg
push
jecxz
xor
cvtps2pd
out
popf
lods
cwtl
insb
ss
and
neg
ja
fdivs
addb
push
outsb
lcall
mov
orb
dec
mov
and
sbb
mov
mov
mov
or
jno
mov
dec
pop
cmpb
fld
lods
adc
and
dec
pop
xchg
ret
xchg
nop
sbb
or
mov
mov
out
add
pop
out
cli
jae
pcmpgtd
out
jle
push
pminsw
pusha
push
mov
dec
jo
lods
call
out
cltd
ficoms
mov
or
and
sub
mov
aam
ss
les
outsb
mov
sub
lods
xlat
sub
dec
cmpsb
sbb
sbb
dec
rcl
scas
mov
inc
and
add
push
pushf
sbb
nop
push
mov
xor
pop
xor
mov
mov
inc
sub
call
and
fsubrl
sahf
dec
adc
mov
insl
mov
lods
and
cwtl
sbb
fs
iret
fcomps
mov
pop
jnp
xor
add
cmp
aad
xor
popf
ja
cmp
mov
mov
or
mov
adc
imul
popa
adc
js
movsb
nop
dec
adcl
jno
jl
pop
nop
jl
adc
inc
arpl
inc
jmp
add
loope
add
sti
cmpsb
dec
ret
stc
sbb
cmp
ds
mov
test
push
push
fildll
jmp
lcall
fists
xchg
lret
int3
out
adc
int
inc
jp
ja
or
mov
sbb
or
bound
push
cmpb
add
aam
lcall
xor
sbb
xchg
jne
lea
and
dec
aas
push
jecxz
inc
popf
ret
mov
test
pop
xchg
nop
sarl
sti
and
js
pop
fidivrl
cmpsl
dec
loopne
pop
adc
ror
aam
inc
adc
and
push
loopne
js
aaa
add
shll
sub
pop
jecxz
mov
loop
mov
xchg
pop
mov
mov
jg
jmp
mov
pop
jecxz
test
sbb
add
xchg
push
mov
push
lods
or
sahf
add
imul
rcll
cmp
lock
add
lods
add
sar
std
pop
scas
and
hlt
sub
sbb
jbe
aad
adc
mov
cmpl
or
roll
aam
fs
push
es
mov
repz
cmp
or
mov
mov
data16
cltd
mov
push
loope
sub
and
sbb
mov
cmp
cld
loope
and
mov
aam
push
pop
mov
test
rcr
test
repnz
int
push
push
aaa
jecxz
sub
cwtl
loopne
mov
mov
add
fs
daa
cli
mov
cs
inc
add
or
imul
push
jnp
pop
movsl
es
pop
add
bound
mov
mov
mov
push
adc
jae
out
ret
jae
mov
ficompl
dec
fnstcw
ret
insb
test
es
push
jb
into
aad
aad
imul
popf
and
sbb
xchg
and
cli
loopne
test
imul
sbb
push
fidivrs
mov
out
pop
sub
into
dec
mov
pusha
aam
sbb
pop
jg
inc
mov
das
mull
insl
mov
fwait
xorl
lcall
shrl
imull
sub
pusha
popa
jne
sbb
out
push
fidivrs
sub
out
sbb
fucomp
mov
mov
movsb
js
repnz
inc
addr16
mov
inc
sbb
or
jno
insl
push
jg,pt
orl
jmp
jmp
inc
dec
mov
lret
xchg
and
sar
add
cmp
iret
insl
sbb
and
imul
jb
lcall
popf
int
and
pop
inc
cmp
ret
sub
xor
pushl
adc
sbb
and
mov
insl
hlt
fnstenv
lret
mov
adc
lea
je
mov
int
ljmp
mov
testb
shl
aas
xchg
adc
pusha
and
mov
add
add
push
and
xchg
pop
add
repz
test
inc
adc
aas
fisttpl
mov
push
in
mov
xchg
mov
jae
fcoms
pop
jmp
pop
negl
lods
fsubrp
add
into
xchg
xchg
js
pop
lods
and
mov
pushf
inc
and
and
test
ret
pop
pop
stos
push
call
es
das
xchg
shll
out
jnp
mov
push
xor
jle
inc
push
test
mov
jno
xchg
sbb
lods
mov
pop
sub
setne
jnp
mov
mov
test
stos
push
scas
repz
in
sub
mov
push
xchg
sub
push
cmp
jg
mov
cmpsb
mov
iret
negl
xor
imul
test
push
sbb
add
xchg
add
popf
push
nop
push
and
xchg
ja
ficomps
test
push
fldt
nop
int
in
mov
mov
sahf
arpl
mov
inc
lcall
cli
aas
leave
enter
mov
sbb
sti
clc
adc
inc
or
hlt
xor
cmp
out
out
pusha
orl
jl
xorl
push
sbb
fxch
inc
mov
ret
call
orb
les
fldl
pop
mov
mov
adc
xchg
dec
dec
aam
popf
push
push
loop
cmp
pop
cmp
test
mov
scas
push
out
mov
fcmovnb
adc
add
push
jl
or
dec
xor
repnz
lahf
sub
enter
jns
cmp
popa
sbb
mov
mov
repz
in
ds
inc
adc
sahf
xor
cwtl
add
dec
aam
ljmp
push
jns
fisubrs
popl
in
lret
repnz
mov
ljmp
leave
faddp
pop
push
mov
cmp
inc
idiv
lods
fstpt
sbb
xor
sub
xor
pop
mov
push
dec
lods
push
popa
je
aad
dec
fnstcw
nop
lock
ret
xchg
es
daa
imul
ret
pop
or
inc
pop
fisubl
mov
pop
imul
iret
int3
xchg
mov
sub
repz
vpcmpeqd
or
cli
imul
pop
jo
cwtl
lahf
imul
ja
push
nop
jecxz
lret
shrb
mov
or
sbb
xchg
bound
push
outsl
mov
stc
jl
mov
es
popl
imul
cmp
sbb
add
dec
stc
fiadds
call
clc
xor
test
bound
cld
stos
int
pop
jae
cli
adc
mov
ret
jne
into
lret
inc
mov
cmp
add
in
mov
roll
into
ret
xor
out
test
cmpsl
adc
lcall
xchg
imul
pop
sbb
xor
inc
in
adc
pusha
sub
sahf
inc
ret
or
jno
adc
fisubrl
cmp
pop
and
xchg
es
inc
push
sbb
pop
cwtl
mov
test
mov
pushf
arpl
shlb
mov
pop
or
cmc
mov
push
pusha
sbb
movsb
adc
pop
xor
out
mov
and
fs
xor
loopne
sub
or
dec
mov
xlat
jns
das
out
cmp
movsl
idivb
ret
ds
dec
mov
aam
sub
push
mov
iret
enter
fiaddl
inc
ss
in
les
mov
push
call
add
test
in
scas
ret
ret
sub
add
loop
stos
inc
cmp
ss
add
sbb
cmp
or
pushf
in
inc
sbb
inc
dec
pop
test
xchg
xchg
mov
push
sbb
bts
inc
inc
aad
int3
jno
pop
fistpl
sub
ret
loop
jo
adc
and
mov
mov
pop
pop
jnp
lock
lret
jge
lods
movsb
mov
lahf
mov
out
arpl
push
inc
icebp
sub
pushf
mov
fwait
push
add
mov
add
shrl
pusha
mov
ret
fadds
fwait
sbb
inc
push
adc
dec
fmuls
mov
xor
jae
mov
sbb
std
gs
and
inc
pop
repz
fiaddl
fwait
mov
sub
or
xchg
or
int3
mov
jo
gs
push
and
jecxz
nop
fdivl
ja
lret
test
xchg
pop
sub
push
frstor
add
mov
cmp
xor
mov
bnd
sbbb
or
xchg
sub
clc
mov
push
out
mov
jp
pop
jbe
cmp
jecxz
loope
jmp
clc
aam
add
or
xchg
push
sbb
gs
bound
loop
lcall
sub
mov
cld
in
inc
adc
xorl
jb
into
adc
in
push
fdivr
ret
mov
sbb
rol
push
cld
dec
lea
dec
iret
push
lock
movsl
xor
or
sarl
inc
cmpsb
divl
into
sbb
xor
dec
pop
cmp
fildll
add
mov
push
stc
and
and
popa
and
add
xchg
into
mov
or
inc
cmp
sub
fildll
popa
push
out
sbb
lcall
pushf
sub
mov
in
pop
push
sbb
push
or
mov
mov
mov
inc
sahf
ss
mov
mov
xchg
clc
mov
xchg
adc
stc
inc
dec
xchg
xchg
dec
adc
shlb
or
xchg
ja
pushf
mov
mov
xchg
cmp
mull
inc
data16
pop
mov
dec
inc
xor
icebp
fs
and
add
ljmp
mov
icebp
cmp
pop
inc
enter
lock
fwait
mov
mov
cli
out
std
shld
sbb
and
lods
imul
xchg
pop
and
xor
mov
fmul
fisubrl
mov
push
inc
adc
mov
jle
cmpsl
popf
push
sub
mov
dec
push
call
mov
js
sub
add
dec
xchg
cmpsl
sahf
fsubr
das
outsb
aas
dec
xor
jno
jns
cmpsb
mov
out
loop
adc
xor
cli
adc
sbb
push
subb
adc
outsl
mov
out
mov
loopne
mov
ljmp
pop
inc
aaa
or
mov
bound
lahf
int3
jb
lds
xchg
negb
mov
push
out
mov
xor
aas
scas
xorb
jmp
in
mov
sahf
xchg
cmc
pusha
std
iret
jns
ds
jo
movsl
notl
dec
pop
inc
sub
xor
fcomi
push
dec
dec
cmpsl
inc
cmp
mov
inc
mov
mov
add
dec
adc
dec
loop
js
cmp
ret
mov
in
lret
jnp
aas
addr16
ret
das
repz
lret
out
fwait
mov
adc
xchg
lret
jnp
loop
xchg
sbb
sub
mov
cwtl
mov
pop
leave
mov
popl
je
adc
or
das
out
push
fnstsw
sub
rcl
ljmp
pop
mov
or
mov
popf
insl
mov
mov
jbe
out
sarl
or
filds
in
xlat
js
push
jns
or
fildll
pop
mov
mov
rorl
jae
push
call
xchg
rorb
sub
dec
and
sarl
cmp
inc
loopne
fnstsw
cld
push
push
iret
and
sbb
push
sbb
pop
sub
inc
xchg
inc
xchg
push
cmp
sbb
lret
jl
bound
pop
repnz
je
std
fldl
repz
ds
lahf
push
daa
test
mov
push
push
jns
ljmp
mov
shl
push
sbb
test
xchg
es
sti
shll
add
ja
jb
sbb
imul
int
fcoml
sub
insb
or
jnp
insb
add
pop
mov
dec
cmp
inc
mov
outsb
test
push
and
add
push
mov
mov
pop
push
lret
add
mov
sbbb
sub
jmp
cmp
xchg
pop
cmpsl
jp
adc
xor
test
and
loop
mov
fmul
adc
enter
dec
xor
pop
push
stc
outsb
and
lds
sub
lahf
mov
test
cmp
sbb
jmp
adc
adc
bound
jns
push
xchg
std
pop
orb
dec
enter
dec
push
lret
xor
popf
jns
mov
repnz
loop
or
mov
mov
cld
popf
das
icebp
and
cli
jg
cltd
or
fildll
adc
outsl
mov
inc
adc
sub
lods
or
pop
add
mov
aam
xchg
xor
pop
sub
imul
xchg
cwtl
adc
lock
shrl
and
push
pop
test
ljmp
adc
push
sub
pusha
movsl
std
nop
mov
movups
enter
jmp
mov
push
lret
pop
xchg
xor
pop
dec
or
dec
leave
ror
cld
mov
test
imulb
imul
pop
mov
cmp
inc
dec
pushf
rcrb
in
sub
jnp
bound
les
xor
lahf
test
test
ja
pop
orb
lds
stos
mov
out
lret
cwtl
sub
stc
addb
scas
dec
enter
je
das
outsb
in
test
movsb
scas
inc
xchg
or
add
js
sub
movsb
mov
inc
stos
out
mov
out
xchg
sub
cmp
daa
sub
int
int
rcl
pop
mov
jae
in
jge
lods
dec
aad
fisubrs
fisttpll
jne
aas
ds
add
popf
lods
ret
jge
loop
loop
jl
mov
push
pop
insl
xchg
jg
shlb
pusha
jbe
cltd
cmp
sarl
into
xchg
jmp
dec
loopne
pop
sbbb
cmpsl
pop
add
je
jno
add
jle
stos
insl
push
pop
in
or
sub
sub
nop
cs
or
sbb
xchg
lock
mov
cld
mov
insb
pop
mov
mov
daa
sbb
push
adc
pop
loop
cmp
sahf
jae
add
mov
idivl
not
push
add
mov
cld
jbe
fmuls
inc
sub
sub
ja
push
mov
orb
cmpsl
and
or
mov
jl
scas
mov
xor
pop
in
cli
cmp
scas
inc
insb
mov
outsl
stos
sub
repz
push
fwait
mov
in
sbb
scas
adc
xor
das
mov
pop
mov
mov
imul
add
cmc
and
or
mov
adc
mov
pop
stos
insl
jecxz
mov
fdivrl
adc
int
mov
and
out
jmp
jg
lea
iret
mov
sti
not
xchg
out
rcrb
mov
scas
ss
sbb
pop
xor
adc
mov
pushf
dec
push
xchg
push
int3
imul
int3
dec
pop
push
pop
cmp
cs
fcom
aam
pop
jbe
inc
lcall
int
scas
js
adc
fildll
cmp
xchg
push
int3
xlat
jge
lcall
ss
int3
push
into
mov
mov
xchg
sub
sti
inc
add
frstor
pop
aam
xchg
shll
adc
add
push
jecxz
das
cmp
lock
pop
cmpsl
stos
cmp
test
lret
mov
in
outsb
xlat
cmp
sub
jne
pop
add
inc
and
mov
jl
sbb
stc
lock
add
mov
cltd
stc
pop
sub
repnz
xchg
nop
sti
insl
add
mov
roll
push
rclb
mov
push
lcall
sbb
cmp
shl
loopne
add
sahf
std
aam
inc
aam
ffreep
sbb
xor
out
xchg
in
fs
repz
lods
cmp
sti
jmp
add
cmpsl
hlt
push
lods
loope
ljmp
pop
outsl
xor
pop
lahf
dec
das
test
and
nop
lods
cmp
push
arpl
mov
xchg
stc
leave
out
arpl
cmp
lcall
mov
repnz
mov
inc
xorb
jmp
mov
mov
jl
sub
dec
xor
sti
stos
cltd
repnz
shr
sahf
insl
push
aas
xchg
adc
movsb
movsb
rorb
cmp
sbb
cmp
mov
ja
clc
in
hlt
in
cmp
cltd
leave
cmpsb
mov
inc
addb
add
push
dec
ret
pop
call
aaa
mov
lock
xchg
stc
clc
dec
int3
gs
or
scas
push
xor
lods
inc
push
cmp
pusha
mov
jmp
mov
and
scas
sarb
ja
subl
fisttps
mov
push
cmp
arpl
cs
enter
mov
add
in
inc
out
fcmovnbe
cld
add
fmuls
and
pop
mov
xor
stos
out
orb
fwait
jae
aad
test
jl
jb
jns
cmp
add
mov
inc
and
js
push
adc
clc
rorl
aad
push
push
push
jbe
popa
and
sbb
pop
aad
pushf
mov
sti
cltd
loop
in
push
out
adc
sbb
shr
rorb
adc
mov
jns
popa
int3
leave
adc
mov
aas
jns
dec
movsb
sti
dec
pop
pop
mov
mov
push
sub
and
scas
sub
adc
loope
ja
punpcklbw
push
daa
mov
mov
lds
cmpsb
xchg
aam
mov
or
dec
pusha
cmpsb
or
clc
popf
cltd
iret
dec
je
cli
pusha
pusha
sti
icebp
arpl
or
xchg
lock
ja
lahf
loope
adc
repz
je
push
adc
icebp
jle
adc
sbb
mov
inc
or
fwait
nop
adc
mov
imul
mov
addr16
aaa
add
xor
fimuls
jge
xor
stos
popa
cmpsl
mov
jl
cwtl
mov
test
add
mov
fcomps
lcall
mov
test
addb
push
mov
les
jmp
pop
cli
lret
repnz
sbb
dec
mov
lret
dec
xchg
dec
lret
mov
shl
push
addr16
xchg
dec
out
loop
xchg
push
xor
sti
jb
add
enter
push
nop
jns
xchg
out
or
cmp
scas
mov
add
jp
pop
jp
mov
imul
sbbb
cwtl
sub
sub
fimuls
add
jb
push
push
cmpb
dec
xor
xor
outsl
sub
jb
test
ja
es
xlat
mov
jne
push
inc
or
daa
jmp
hlt
push
fucom
mov
lret
clc
fbstp
and
pop
sub
xchg
stos
orb
mov
stc
inc
push
xor
rcrl
lret
xor
out
fmull
xchg
dec
jp
sub
dec
lret
jl
xorl
add
mov
xlat
addb
or
xchg
idivl
popf
fisubs
push
and
inc
pop
repz
push
and
dec
jp
enter
js
sub
xor
jp
jle
test
es
xchg
sti
rcll
add
int3
out
push
inc
xor
test
in
push
sahf
in
cs
in
cmp
push
sarb
sbb
mov
lock
xchg
imul
icebp
lods
insb
gs
psrlq
xchg
dec
psubusb
mov
adc
in
shr
aam
push
outsb
sub
popa
leave
pop
cli
and
mov
sub
sub
ret
mov
pop
int3
or
pop
sbb
test
icebp
xor
sub
mov
arpl
add
clc
call
jmp
mov
jns
mov
ret
and
subb
repz
jg
xchg
mov
push
push
jbe
cmp
jb
mov
sbb
inc
cmc
xor
add
and
ds
loopne
shrl
cmpsl
loopne
gs
sbb
pop
sub
cmpsb
insl
sub
xor
lret
ljmp
and
mov
cwtl
loope
aam
mov
js
or
mov
fiaddl
les
in
xchg
pop
push
push
lcall
mov
sahf
pushl
mov
shlb
jno
lds
cmp
inc
les
inc
pop
andl
cmp
jne
mov
mov
aas
pop
push
icebp
jnp
rol
cmp
or
and
nop
jbe
lret
jbe
sarb
adc
jnp
test
cmpsb
mov
mov
es
scas
or
cmpsl
pop
mov
sub
pop
sub
cs
lahf
dec
mov
out
cli
xor
dec
xor
out
bound
clc
mov
jecxz
cld
or
dec
fistps
xorb
jge
lds
nop
or
mov
ret
push
push
ss
sbb
test
pop
fs
test
mov
mov
fiadds
pushf
xchg
xlat
insl
xchg
xor
xor
xor
addr16
sbb
push
arpl
popa
orb
loopne
sti
or
mov
jecxz
pop
arpl
scas
stos
aam
fstpl
jge
inc
popw
in
mov
adcb
adc
mov
sub
loope
jl
dec
stos
pop
add
popf
lds
fisubl
rolb
mov
mov
pop
je
leave
pop
push
xchg
lahf
sbb
mov
jg
test
mov
sub
push
bound
lret
ret
or
in
aas
xchg
dec
push
cmpsb
fs
inc
sbb
loop
rorl
adc
into
test
js
enter
enter
cmpsb
xchg
sbb
cmp
in
ja
std
pop
add
push
mov
xor
cmp
bound
fsubs
jo
pop
out
mov
adc
xchg
jne
dec
cmp
das
xchg
sbb
jle
call
add
sub
jo
xchg
rcll
sub
mov
inc
mov
add
nop
add
fistl
mov
and
xchg
jle
arpl
mov
enter
xchg
je
call
inc
sub
jne
or
shrb
pop
and
push
pop
scas
ficoml
push
orb
mov
shll
cmp
stc
sahf
or
xchg
imul
insb
xchg
inc
rcll
cmp
aam
mov
jns
xorl
stos
or
mov
dec
outsl
call
inc
lret
insb
and
inc
stc
mov
test
jne
rcrb
cmp
sti
push
mov
lds
sbb
clc
pop
dec
inc
stos
mov
cmp
popf
arpl
fwait
pop
push
out
xchg
jmp
stos
in
faddl
les
cmp
adc
adc
jbe
dec
mov
mov
xchg
mov
adc
push
pop
ja
mov
jns
jb
rolb
out
add
sti
xchg
in
mov
mov
dec
adc
cmp
imul
mov
loope
push
lret
jb
mov
inc
add
xchg
lods
rcll
mov
xor
inc
fstps
add
mov
inc
bswap
pop
cmova
test
fildl
xchg
dec
mov
xchg
mov
jb
xor
loopne
mov
out
repz
xorl
emms
pop
xor
mov
bound
sub
je
sbb
bound
cmp
inc
popa
bound
fs
sbb
xchg
dec
and
xchg
ret
mov
xchg
sbb
push
in
mov
jne
clc
std
sub
dec
jmp
daa
out
nop
out
cld
cmp
sbb
and
daa
xchg
sub
scas
add
mov
js
mov
scas
mov
or
fdivr
test
pushl
insb
es
lret
lods
xor
dec
xchg
mov
and
adc
repnz
stos
xor
aad
enter
pop
pop
push
sbb
insb
mov
loopne
pushf
mov
test
jno
mov
pop
jmp
and
lahf
dec
scas
jns
push
mov
push
ret
push
mov
mov
out
or
or
or
cs
scas
push
mov
adc
mov
fsubrl
les
mov
fists
inc
mov
xchg
or
ficoml
fsubrp
popa
jne,pt
dec
push
push
pushf
fwait
test
scas
jge
cli
in
pop
xchg
adc
cs
or
mov
xor
dec
insl
aam
cs
leave
push
or
xor
mov
jge
inc
jns
xor
push
mov
xor
mov
clc
in
dec
or
rcrb
jecxz
test
ret
stc
shll
pop
js
lcall
subb
imul
push
dec
xchg
mov
mov
sti
mov
jnp
pop
add
cltd
ss
jle
jl
add
loope
pop
lods
pop
pop
dec
scas
xchg
mov
jle
shrb
mov
in
mov
mov
sub
insl
mov
test
push
push
jno
arpl
xor
cmc
xchg
cmp
push
movsb
stc
roll
pop
movsb
ljmp
push
sbb
push
ds
sbb
stos
inc
push
cmp
repz
and
sbb
jbe
adc
mov
and
test
out
testb
es
adc
fwait
pop
movsl
test
push
into
pop
fbld
stos
sub
mov
bound
clc
or
insl
or
dec
xor
xor
lock
or
in
addb
sub
in
pop
jmp
mov
lds
push
dec
jle
leave
adc
pop
jne
adc
lret
sarb
cmpsl
pop
mov
xor
mov
push
mov
arpl
mov
jge
jge
xor
sub
arpl
ss
test
rcrl
inc
out
rorl
mov
mov
jns
ljmp
fiadds
cmp
je
mov
sub
test
jae
daa
cmp
popf
in
adc
cmp
pop
sub
fidivrs
dec
in
repz
ret
inc
xorl
cmp
imul
idivb
sahf
in
bsf
pop
add
rolb
rcrl
popa
pop
rcrl
data16
and
cmp
cmp
jae
and
sub
hlt
add
dec
test
in
rorb
pop
adcb
or
daa
test
xlat
out
jnp
loope
cmp
jmp
add
scas
cs
adc
popa
sarl
push
cmp
int
mov
btc
movsl
out
out
mov
insb
mov
cmp
imul
sub
hlt
js
mov
push
fdivr
push
add
mov
bt
push
sbb
mov
push
jae
sbb
imul
movsl
sub
scas
sub
decb
or
gs
stos
and
jns
sbb
out
xlat
push
enter
xor
loopne
jle
mov
ud0
and
mov
nop
jo
cmc
hlt
xchg
movsb
pop
icebp
xchg
repnz
popf
popa
and
arpl
jl
pop
xor
lret
test
add
lahf
push
insb
xchg
lea
sub
scas
and
or
sti
shr
inc
nop
stc
popf
sub
int3
scas
cltd
xchg
movsl
shll
adcb
fidivl
outsb
lret
mov
cli
push
sub
pop
out
lods
mov
pop
aas
push
leave
shll
dec
sub
in
leave
mov
adc
clc
mov
fwait
stc
mov
sub
out
push
mov
or
jge
jno
movsl
jae
fisubs
jno
out
push
mov
pusha
inc
add
dec
mov
or
aad
movsl
lds
ljmp
inc
mov
jb
xor
js
out
imul
sub
pusha
dec
xor
inc
lret
addl
cmpsl
ret
or
push
lret
dec
pop
mov
and
jg
fwait
int3
sbb
aas
cmpsl
jecxz
out
push
ja
addr16
imul
aaa
imul
mov
mov
adc
mov
adc
loope
out
fidivl
out
mov
andb
xchg
cltd
in
push
mov
pop
lods
mov
jb
pop
add
push
add
cmp
icebp
scas
roll
popa
sbb
fwait
jnp
push
call
adc
jl
gs
int
mov
in
outsl
insl
or
orb
enter
cwtl
xor
pop
lds
fsubrl
xchg
cmp
call
mov
inc
and
push
pop
lea
jge
test
insl
mov
sub
mov
jns
mov
dec
in
sbb
cmp
or
lods
test
into
aaa
cltd
mov
mov
hlt
ficompl
xchg
cmc
sahf
pop
push
jns
in
and
scas
outsl
or
adc
pusha
in
jecxz
pushf
mov
cmp
push
mov
xchg
mov
decb
xor
inc
test
loop
gs
fs
fwait
add
fisubs
clc
lahf
sbb
ja
xchg
mov
decl
in
lret
sub
cmpsl
data16
push
mov
jg
lods
lock
adc
mov
loopne
dec
cld
gs
cmp
jnp
xlat
pop
in
fisubl
push
pusha
adc
addr16
pop
jnp
fwait
ret
andb
dec
stc
adc
push
out
pop
in
inc
add
adc
xchg
cwtl
pushf
push
mov
fisubrl
xor
adc
pop
jbe
and
cmp
mov
and
lea
scas
mov
xor
xlat
out
in
push
leave
fcoml
add
ljmp
gs
popf
rclb
jnp
adc
sbb
mov
pmulhuw
mov
mov
inc
lock
mov
adc
ret
and
lods
mov
test
xchg
loope
inc
add
shl
pop
dec
pop
test
mov
in
mov
cmc
jnp
xchg
lods
add
stos
xchg
mov
sub
std
mov
cltd
loopne
bound
mov
jb
lcall
push
sbb
mov
sahf
push
push
push
or
and
cmp
outsl
inc
imul
sbb
in
mov
xor
xchg
push
adc
js
jae
insb
add
icebp
aaa
dec
inc
cltd
push
int3
jno
jge
aad
and
cmpsb
dec
xor
xchg
cmp
fidivrs
lods
scas
hlt
push
and
sarl
loopne
sub
bound
sbb
outsw
decl
push
push
aad
aas
xor
mov
sub
scas
dec
cli
sub
push
addr16
push
int3
sbb
fcomps
jns
cwtl
cmp
xchg
inc
adc
pop
jl
xor
and
mov
scas
and
test
add
movsb
mov
pop
popa
cmp
and
ret
jnp
mov
mov
in
mov
add
cmp
push
add
cmc
je
stos
and
adc
jecxz
xchg
pop
adc
test
int
inc
mov
add
jno
fcmove
js
push
and
fdivrs
inc
push
pop
mov
scas
stos
iret
sub
outsb
test
cmp
lret
adc
jge
cmpb
ja
cmp
fs
push
mov
jo
push
jns
mov
popfw
push
mov
cmp
sbb
dec
and
pushf
js
idivb
shrb
sbb
into
cmp
push
and
lock
and
ss
sbb
adc
scas
xor
call
xchg
adc
frstor
inc
pop
mov
xchg
dec
mov
leave
outsb
pop
std
sbb
in
mov
stc
inc
mov
add
pop
fstl
addl
pop
mov
je
jns
int
out
aam
push
jbe
jnp
mov
and
jecxz
jmp
call
lret
je
mov
pop
hlt
pop
fisubs
fildll
jb
mov
sti
repnz
pop
pop
leave
test
ret
push
add
inc
mov
or
adc
ret
mov
in
cmp
pusha
adc
decb
ret
inc
je
adc
fistpl
inc
int
outsl
int3
mov
xor
xchg
push
mov
add
pop
out
call
popf
jge
iret
movsl
push
inc
das
and
scas
ljmp
jnp
fcmovu
or
inc
std
xchg
cmp
daa
sbbl
sti
cld
pop
mov
jmp
arpl
cmp
fnstsw
or
mov
xorl
out
mov
bound
insl
mov
rcll
adc
in
mov
idivb
lcall
sbb
aam
dec
movsb
add
popf
xlat
pop
das
dec
mov
push
sub
test
dec
sub
push
pop
fwait
daa
inc
or
dec
dec
cmpsl
jge
mov
pop
jo
lock
or
sbb
mov
cmp
cmpsb
mov
jmp
mov
mov
push
loop
jl
push
xor
lret
and
dec
stc
cmp
pop
in
add
xchg
shll
test
dec
arpl
cli
or
inc
aaa
jmp
negl
sub
sbb
xor
in
fsub
arpl
add
loop
hlt
xor
pop
outsl
inc
cli
jne
mov
shll
jmp
scas
ret
js
cmpsb
cli
loopne
push
inc
leave
pop
pop
insl
xor
inc
std
jno
test
and
je
cld
inc
ret
inc
cmpsb
fnstenv
xlat
fdivr
inc
adc
das
xor
or
call
cmp
sub
hlt
add
dec
jmp
mov
popa
test
jmp
test
jle
sbb
adc
pop
jl
lahf
rorl
in
dec
aaa
jp
sbb
shr
xchg
scas
je
mov
pop
gs
inc
cmp
inc
lock
insb
int
and
inc
push
push
ds
mov
adc
adc
jae
mulps
jnp
lods
push
cmp
sti
push
fadd
rol
push
loopne
leave
mov
stc
in
push
imul
push
dec
push
lods
loopne
fcompl
pop
adc
int3
mov
xorb
jp
push
out
sub
xor
mov
cmp
mov
rclb
add
mov
fists
fistps
dec
js
mov
mov
jl
gs
aad
add
mov
insl
lds
cs
movsl
add
cmp
jne
cmc
shlb
loope
popf
ljmp
lds
mov
push
cmpsl
mov
add
xchg
push
and
sbb
rcr
lods
in
icebp
je
shrb
subl
enter
push
or
gs
pop
testb
jg
clc
and
jns
adc
sbb
shll
mov
inc
sti
out
push
jno
mov
cmp
inc
std
test
push
incl
icebp
xor
lods
push
fdiv
in
or
repz
mov
push
nop
pop
hlt
insb
mov
xchg
test
sub
mov
pop
xor
xor
fwait
orb
push
jl
leave
xchg
xchg
loop
movsb
lcall
insb
test
mov
xchg
enter
sub
or
loope
mov
leave
xor
xchg
or
jae
aad
aaa
fstpl
xchg
fidivrs
push
lcall
das
scas
in
ret
iret
adc
sub
mov
sbb
arpl
test
xor
stc
cmp
jg
movsb
jns
xchg
pop
push
in
addr16
and
sbb
push
sbb
pop
cs
insb
nop
or
pop
test
inc
push
test
xor
dec
adc
mov
dec
mov
sbb
xchg
mov
mull
push
scas
das
stc
movsl
popf
das
mov
dec
fwait
dec
cmp
cmp
pop
and
inc
push
rclb
sbb
cmc
shll
push
loopne
jmp
cmpsl
xchg
and
sbb
icebp
mov
mov
push
sarb
fmul
leave
dec
sub
xor
lret
test
push
fucomip
fidivl
add
xor
xor
mov
je
movsl
cmp
testb
fisttps
int3
mov
insl
in
rcll
movsb
xor
fisubrl
lret
add
leave
push
or
out
fisubrs
mov
xchg
sub
mov
dec
mov
dec
xlat
sti
fadds
repz
sub
fmuls
nop
fisubrs
mov
fsubrp
dec
shrb
inc
cld
cmp
in
popf
mov
dec
test
shll
adc
xor
sarb
or
stos
jbe
jb
dec
dec
pop
mov
scas
add
enter
lret
or
sub
inc
arpl
scas
rclb
bound
or
lds
in
shrl
push
test
sub
cmp
mov
xor
pop
lret
sub
mov
rorl
xor
movsl
mov
or
sahf
push
negl
sbb
mov
dec
pop
dec
in
dec
push
sub
sbb
ret
push
dec
xorps
scas
dec
add
outsl
jmp
idivb
pusha
pusha
xchg
movsl
pop
test
shlb
popa
push
add
or
xchg
mov
jno
push
sub
test
add
mov
dec
inc
or
mov
mov
movsb
loop
cmpxchg
jge
mov
cld
dec
push
js
dec
or
ret
mov
jg
lock
mov
cwtl
push
mov
pushf
cwtl
mov
add
and
fldenv
std
xor
push
iret
into
icebp
push
out
push
sbb
jne
imul
aas
adc
scas
pop
jg
jmp
pushf
not
dec
ss
cltd
sbb
xchg
add
iret
lret
and
ret
shll
ss
xchg
inc
and
jle
loope
hlt
repnz
dec
pop
scas
push
lret
cmp
imul
mov
mov
cmp
mov
inc
push
ds
rolb
in
shlb
jae
pusha
cs
sbb
aas
cwtl
pop
imul
cld
pop
adc
sbb
mov
xchg
add
mov
js
pop
xchg
outsb
mov
or
outsb
cmc
pushl
and
jmp
mov
adc
mov
xor
insl
clc
mov
ja
jecxz
mov
mov
add
mov
ret
lret
sub
ja
cmp
in
fs
mov
or
xchg
aas
out
dec
cld
add
inc
sti
cmp
cmp
or
sub
enter
xor
js
xor
stos
or
jb
sub
imul
jb
orl
movsb
add
rorl
mov
nop
arpl
xchg
adc
push
fnstsw
aad
mov
pop
pop
add
or
push
mov
push
out
negb
adc
pop
repz
jne
jno
cmpsb
xchg
push
cli
xchg
fsubl
mov
lock
sbbl
jmp
cmp
xor
loope
adc
push
scas
jbe
insl
repz
pop
fucomi
sub
in
pop
ss
mov
mov
or
leave
push
les
mov
and
add
rcrb
les
enter
mov
mov
jae
sbb
insl
push
mov
data16
gs
push
cmp
jle
xlat
mov
pushl
test
mov
mov
pop
adc
je
xorl
cmp
into
int
fstps
test
imul
pop
sbb
mov
xor
daa
rcl
fld1
dec
pop
and
aaa
or
addr16
dec
mov
jmp
mov
les
cmc
inc
sbb
inc
std
je
adc
ror
xchg
dec
aas
in
aam
jbe
xchg
popa
std
int3
add
jno
mov
or
out
stos
mov
inc
test
add
fbstp
inc
scas
or
xchg
mov
or
jbe
xor
mov
add
pop
xchg
aaa
or
push
add
hlt
jmp
mov
insl
rol
aam
jns
jp
pop
imul
mov
push
sub
sub
inc
xchg
std
mov
bound
adc
dec
jg
outsl
ljmp
sbb
xor
pop
data16
push
sti
push
xchg
sub
lea
sbb
sar
jmp
mov
xor
or
daa
and
jecxz
adc
cmp
mov
dec
mov
xor
mov
sbb
gs
data16
lahf
bound
inc
enter
loopne
lds
cmpsb
push
stc
int
sbb
adc
pop
sbb
pop
flds
inc
push
pop
loop
cmp
ret
and
sub
pop
sahf
adc
bnd
or
test
stos
cmp
cli
push
loop
subb
scas
lcall
xchg
mov
aam
int3
mov
ss
pop
mov
cmpsl
iret
dec
mov
lods
or
arpl
inc
jbe
imul
aaa
ret
or
lock
and
cmp
jbe
test
push
mov
push
xor
aas
incl
imull
pop
leave
aam
adc
jae
dec
push
addb
bound
mov
test
bound
xor
cmpsb
sbb
or
jbe
das
popf
shrl
cmp
dec
jge
mov
pusha
and
lret
dec
cwtl
iret
sbb
jb
test
jns
adc
jb
adc
std
push
outsb
add
mov
ja
imul
rorb
iret
insb
sub
and
sub
push
inc
push
pop
clc
xchg
inc
outsb
mov
inc
push
mov
insl
cmp
mov
mov
jg
jnp
mov
ss
mov
jno
lcall
mov
push
jge
fs
aam
push
arpl
add
scas
pushf
xchg
mov
jne
mov
cmp
fwait
les
pop
fisubl
nop
enter
cmpsb
daa
cmp
xor
cmp
sbb
je
mov
pop
dec
loope
xchg
icebp
sbb
bnd
pop
add
mov
lods
repz
sub
out
pop
push
cmpsl
int
add
aaa
imul
ds
sbb
fmuls
out
jae
push
and
push
fdivl
movsb
fadds
pop
and
imul
js
test
mov
addl
mov
lea
shll
inc
push
sqrtps
sbb
and
movzbl
gs
add
adc
xchg
fstpl
sub
pop
jbe
in
cmp
xchg
add
mov
mov
xor
in
pop
inc
dec
loop
pop
dec
cmp
js
jo
jl
ds
cs
sub
cwtl
jecxz
cld
or
xor
in
test
xchg
cmp
inc
xchg
daa
dec
fdivrl
sub
shlb
cmp
imul
mov
ucomiss
cmpsb
test
adc
jno
or
iret
inc
stos
cmp
mov
dec
dec
xchg
adc
sbb
lret
out
out
loope
loope
arpl
mov
mov
pop
fcmovnb
mov
add
popf
pop
sub
push
sub
mov
adc
fidivs
addr16
fisubl
mov
and
imul
lds
cmpl
nop
pop
mov
mov
mov
mov
icebp
fisubl
repz
cs
jl
ficomps
inc
mov
cmpsl
test
ret
cmp
cmc
stos
leave
pusha
dec
cmp
inc
jge
jno
mov
sbb
jle
jne
inc
mov
mov
inc
sbb
and
cmp
cmp
add
jb
push
push
jp
pop
icebp
jg
inc
sub
mov
sub
imul
nop
and
sbb
xor
or
insb
in
rorb
shll
xor
and
scas
mov
ja
pop
lock
inc
add
pop
loop
cmpsb
add
repnz
dec
xchg
xchg
xchg
out
repz
mov
mov
scas
sbb
add
mov
aam
out
scas
daa
pusha
jae
ret
in
cmp
cmpsb
cmpsb
cs
xchg
fs
jbe
dec
test
and
loopne
sub
push
mov
add
xor
pop
mov
and
xor
fs
pop
data16
iret
jge
mov
jg
rcl
aas
fs
jbe
xor
leave
aad
push
xchg
inc
jmp
push
js
push
dec
scas
xor
sbb
out
imul
xchg
sub
add
mov
sahf
adc
sub
mov
add
jnp
xchg
fdivp
lods
xchg
push
mov
push
popa
inc
xchg
inc
mov
mov
push
icebp
mov
out
outsl
push
push
pop
cmpsl
sub
dec
sahf
addl
sbb
pusha
sub
xlat
mov
sbb
add
out
and
jne
lcall
mov
sub
mov
inc
or
mov
fs
and
xlat
ja
xchg
pop
stos
test
into
ret
dec
xor
cltd
jne
lahf
nop
adc
mov
push
or
dec
movsl
shll
out
aad
mov
popf
mov
pop
mov
lret
test
rcrl
cmp
ss
mov
push
test
lahf
out
jae
sbb
aaa
pop
mov
sar
cmp
push
push
mov
fs
inc
aad
in
insb
inc
scas
aad
add
add
outsb
out
mov
dec
insb
jns
rcrb
mov
cmpsb
and
push
dec
loope
pop
jl
add
cli
insb
lods
prefetch
rclb
cmpsb
xchg
inc
or
sbb
add
test
push
push
incl
jns
dec
pop
cmp
xchg
out
stc
mov
addr16
push
jae
mov
jge
mov
in
out
xlat
cmp
mov
mov
sahf
inc
jne
and
repz
or
pop
aad
xlat
inc
insl
lock
out
ljmp
insl
pop
sti
mov
and
sbb
imul
or
jl
into
push
xchg
pusha
lea
xchg
sbb
mov
xchg
and
fildll
mov
ret
or
fists
and
mov
lea
testb
cmp
adc
decb
xchg
xchg
filds
stos
push
xor
lea
pop
pop
cmp
in
mov
mov
xor
cmpb
inc
es
gs
leave
insb
test
sbb
push
sbb
push
cwtl
clc
sti
jl
insb
sbb
lods
or
jmp
mov
inc
call
add
mov
or
push
addr16
sbb
iret
movsb
xchg
es
cmc
cmpl
in
mov
jmp
jmp
mov
inc
outsb
daa
pop
adc
gs
mov
repnz
cmc
push
xchg
stos
xchg
mov
shrl
or
push
andb
aas
adcb
mov
ret
pushf
mov
int3
push
imul
inc
push
pop
xlat
mov
sbb
stc
cmc
mov
push
jge
mov
sti
mov
pandn
mov
das
mov
fwait
in
mov
xor
mov
dec
lcall
cs
push
xlat
jmp
xchg
sub
sbb
ret
ja
fsts
adc
add
mov
cmp
iret
in
popa
fldt
xchg
lea
or
pop
test
addr16
in
push
sbb
jo,pt
xor
ljmp
xor
mov
aad
cld
out
fstps
jecxz
popa
movsl
fwait
mov
xchg
jmp
cmc
jmp
pop
dec
je
flds
iret
xlat
mov
mov
xchg
mov
dec
sub
out
or
dec
and
fiadds
lcall
cmpsl
mov
lock
jne
imul
xchg
xchg
lods
sub
test
mov
push
dec
aam
jmp
int
leave
sti
popf
push
repnz
adc
sub
pop
fadds
xchg
inc
fidivrs
and
lods
ljmp
xor
xchg
in
js
ss
out
bound
aad
push
inc
adc
cld
mov
jmp
das
adc
scas
icebp
call
daa
mov
jnp
add
test
or
cltd
cmpsl
inc
in
xor
xchg
mov
jl
pop
jne
daa
adc
add
int
in
mov
inc
roll
inc
in
push
pusha
push
mov
jge
ret
mov
xchg
sub
cmp
movsb
jb
lret
or
and
dec
cmpsl
roll
ret
mov
or
loope
mov
imul
cmp
inc
or
mov
test
arpl
into
add
xlat
pop
pusha
mov
lea
xchg
fidivrl
mov
test
outsb
repz
mov
ret
fdivr
mov
cmpsl
or
cld
das
mov
cmp
fldenv
jbe
dec
daa
add
data16
add
mov
lods
xchg
and
jecxz
and
rcrb
ficomps
shlb
shll
insl
mov
les
mov
fnstcw
or
stos
out
jmp
stc
push
test
ljmp
mov
icebp
push
aaa
or
lret
mov
push
and
push
xor
mov
bound
adc
out
test
xor
pop
or
bound
daa
jno
and
jmp
jno
addr16
pop
pop
imul
lods
sbb
bswap
cs
lahf
jmp
cmp
stos
and
fcompl
and
rolb
lahf
lahf
adc
or
mov
or
cmp
adc
sbb
jo
lcall
jmp
add
pop
roll
jecxz,pn
xor
sub
xchg
inc
push
dec
hlt
pop
sub
dec
cltd
mov
jnp
jl
aam
int
dec
addr16
jle
dec
add
leave
lea
add
mov
pop
xchg
fildll
jle
or
push
out
and
ljmp
insb
fdivl
mov
hlt
lods
lods
sbb
cltd
mov
add
pop
mov
in
pop
xchg
or
aaa
push
in
cli
out
lahf
jge
cmpsl
and
mov
jmp
add
loop
cmp
jmp
add
es
jnp
testb
push
mov
jecxz
mov
movsb
dec
stos
mov
lahf
or
fbstp
loop
push
int3
dec
pop
dec
stos
dec
jno
aam
lret
repnz
aas
jb
adc
lods
pop
jns
mov
sahf
imul
jl
data16
ljmp
inc
addr16
jl
repz
and
inc
mov
in
cs
xchg
push
inc
cmp
mov
dec
push
cmp
jb
dec
dec
push
dec
bound
add
adc
icebp
pop
shrl
mov
dec
mov
jg
clc
outsb
mov
dec
cmpsb
int
sub
adc
adc
cmp
dec
cld
mov
or
and
dec
mov
pop
shll
jp
sahf
mov
bound
stc
add
mov
iret
jge
rorl
call
jmp
xor
xlat
mov
jb
sarb
in
shll
enter
popf
fs
adc
jge
lods
xor
and
ds
movsb
fs
push
jns
push
dec
iret
lea
pop
or
sub
xor
dec
jno
ret
add
jnp
pushf
push
lea
xchg
cli
jl
mov
enter
ds
addr16
mov
cmp
orb
or
dec
dec
jnp
aam
icebp
leave
lods
jno
movsb
or
shl
std
getsec
sub
fisttpl
sub
and
xor
xor
inc
jbe
cmp
bound
mov
jbe
aam
or
or
es
push
rorb
push
repz
icebp
pop
pushf
insl
roll
adc
fidivl
sti
xchg
nop
in
pop
lods
lret
push
je
in
clc
bnd
int
pushw
pop
inc
or
inc
outsl
scas
mov
jns
fucomp
mov
push
ss
popf
push
push
aaa
scas
mov
lds
adc
imul
sbb
das
mov
add
rorb
scas
fs
dec
icebp
testb
test
inc
stos
mov
bound
inc
mov
loopne
repz
jbe
add
xor
aam
mov
arpl
aas
dec
or
js
lret
mov
lods
aad
out
int
insl
addb
sbb
enter
loopne
push
in
mull
shrl
ljmp
jmp
data16
imul
xchg
cmp
xchg
inc
add
inc
mov
pcmpeqb
leave
inc
sbb
cmpsb
jbe
fs
push
insl
in
pop
mov
lret
fnstcw
fdivrs
sub
inc
das
imul
sub
push
push
dec
and
notb
insb
mov
loope
rcrl
cmp
and
arpl
test
outsb
add
xor
mov
test
sub
mov
sub
out
out
xor
add
or
xchg
repz
in
jmp
sub
stc
stc
mov
mov
jo
lods
sbb
iret
ds
arpl
pop
mov
or
push
or
push
out
pop
xor
xchg
int
int3
push
sbb
jmp
inc
inc
int
orl
into
push
mov
sub
sub
push
and
lock
push
cmp
jne
add
nop
adc
adc
setle
enter
js
bound
inc
fadd
and
std
sbb
cmpsl
pop
lods
daa
inc
or
pop
dec
fs
push
popf
dec
ret
mov
lcall
dec
jge
mov
pop
mov
nop
lahf
cs
jne
sbb
negb
cmp
push
push
shr
add
xor
pop
push
fisubs
pop
dec
std
es
fs
xor
std
push
hlt
mov
mov
mov
xchg
jg
cmp
dec
xchg
pop
fstps
xchg
dec
push
vmulps
xchg
dec
pop
fwait
cmp
adc
push
mov
sub
ret
sub
sub
cmp
adc
dec
cwtl
int
sbb
xchg
jb
mov
mov
jbe
hlt
mov
cmp
sub
pop
pop
fyl2xp1
mov
pop
push
bound
add
negb
mov
jl
push
loop
into
or
aas
inc
cmp
fwait
in
es
bound
out
and
les
jecxz
iret
test
jmp
sbb
loop
push
arpl
sahf
xchg
and
mov
or
fbld
adc
clc
sub
xchg
xor
mov
lret
leave
das
stos
outsb
mov
icebp
hlt
fucomip
sub
ljmp
int
int
int3
dec
ffree
popa
xor
push
pop
or
xchg
or
and
imul
mov
cmpsb
add
fstpt
mov
xchg
shlb
loope
pushf
push
mov
pop
cmp
fildl
xlat
pop
movsl
or
mov
leave
add
pop
hlt
fildll
insb
icebp
jg
push
cmp
mov
std
mov
adc
imul
ss
leave
push
sub
push
pop
into
test
mov
mov
sbb
dec
adc
push
sbb
popf
jno
mulb
xor
dec
add
inc
or
hlt
mov
jle
outsl
stos
mov
movsb
jae
adc
mov
add
ret
enter
mov
into
dec
dec
cld
insb
and
les
xchg
push
jle
cmp
xlat
mov
pop
mov
or
mov
push
ljmp
push
movsb
hlt
out
dec
loopne
pop
lods
mov
jle
clc
cmc
ret
fndisi(8087
iret
int3
xchg
out
xor
test
cli
xor
mov
adc
aad
pop
cs
or
mov
scas
int
sub
in
and
mov
rolb
loop
leave
mov
dec
pop
mov
lods
imul
xor
lock
inc
jns
lret
push
mov
mov
adcl
mov
jae
hlt
jle
cld
mov
push
vmovaps
xor
int3
addl
xor
adc
sbb
cmp
repz
dec
jmp
test
xchg
sub
imul
ds
push
gs
adcl
cmp
inc
stc
cli
pop
xor
mov
stos
cmpsb
pusha
mov
inc
testl
cli
dec
cmp
or
add
fisttps
inc
hlt
pop
mov
out
sub
or
sahf
pop
lahf
gs
es
arpl
mulb
leave
mov
ret
cs
iret
jle
ret
pop
lods
cs
cwtl
pop
fildl
loope
test
sub
out
sbbl
mov
jbe
ljmp
arpl
push
xchg
sub
adc
js
fs
push
repz
popf
movsl
pop
repz
shll
cmp
frstor
shl
cmp
push
inc
mov
xor
jecxz
pop
out
add
js
pop
or
inc
lret
add
fwait
or
dec
lods
mov
rorl
adc
push
les
stc
and
shrl
call
mov
icebp
es
xchg
negb
popa
aas
mov
xchg
adc
mov
pop
fisubs
fadds
ret
mov
xchg
xor
movsb
jne
roll
lret
pop
inc
xchg
cmp
dec
pop
jle
loopne
and
aam
xor
and
adc
addr16
cmp
out
sub
push
in
iret
cmpsl
inc
js
cmp
lea
mov
jge
mov
in
push
sbb
mov
mov
cmc
sub
lods
loopne
cmpsl
and
stos
push
hlt
inc
clc
enter
or
addr16
outsb
rclb
mov
mov
aam
enter
icebp
jle
mov
pop
push
mov
stc
inc
or
mov
jecxz
jmp
repz
xor
dec
xor
or
xor
jge
jmp
cmp
adc
or
mov
mov
pop
fistpl
mov
das
dec
jl
call
sarb
push
aam
jp
aam
cmpsl
faddl
lret
enter
addr16
clc
imul
in
jmp
sbb
cltd
add
mov
stos
sub
aaa
xchg
mov
sbb
xor
mov
es
sti
fcmove
ds
stos
add
cmp
lods
xor
sub
outsl
add
and
xchg
into
cld
loopne
iret
pop
push
loopne
jle
dec
xor
or
and
sbb
in
mov
adc
mov
popa
ss
daa
test
push
aad
or
rorl
popf
mov
leave
mov
scas
shrb
out
mov
cmp
mov
dec
fildl
adc
jb
insb
movsl
jo
int3
ja
xchg
cli
adc
and
xchg
xchg
sbb
cmp
ss
adc
fwait
in
pop
mov
into
test
jnp
dec
shlb
call
lea
mov
mov
jno,pt
into
lret
out
xor
imul
sbb
ret
fisubs
dec
pop
das
test
ja
mov
mov
mov
add
pop
xchg
cmp
inc
or
jb
add
push
push
outsl
sbb
jno
cmp
scas
dec
scas
pusha
jnp
dec
les
jnp
pop
mov
cli
jb
es
inc
inc
loopne
mov
subb
or
xchg
xchg
add
sbb
fmulp
mov
add
mov
cmpsl
and
pop
rdpmc
dec
mov
clc
mov
or
ljmp
cli
dec
js
xor
and
repnz
mov
mov
lcall
cmc
repz
iret
pop
jmp
std
ret
clc
add
adc
inc
push
inc
in
iret
sbb
aas
jo
hlt
cmp
add
jnp
dec
lret
loop
insl
pusha
aaa
ja
ds
lea
movsb
jns
dec
pop
sub
xchg
adc
adc
adc
std
shlb
jno
in
mov
cs
or
lds
movsb
push
and
outsb
sub
setnp
es
dec
sub
ja
movsl
add
lret
mov
loop
inc
imul
cmp
scas
cld
mov
sbb
ret
mov
cmp
pop
add
push
sarb
icebp
sub
xor
dec
enter
inc
add
mov
fs
lock
cwtl
add
sub
cmp
inc
sbb
xor
shrl
jl
shlb
push
test
sbb
scas
stos
jge
or
jge
sbb
add
repz
jo
into
jp
or
xchg
jns
mov
imul
jg
mov
pop
pop
sub
xchg
push
cs
push
aaa
insl
aam
test
ds
cld
and
das
jb
mov
cmp
sti
add
jb
fnstenv
cmpsb
mov
clc
pop
mov
mov
sbb
jb
xor
in
mov
sub
data16
adc
fs
scas
fsubs
repnz
jg
and
aaa
sub
mov
fldcw
and
mov
sub
sarb
shr
jo
xchg
or
ret
test
jle
test
cmp
push
out
imul
or
insb
call
sub
xor
ja
fistps
outsb
xchg
xor
mov
jl
stc
and
and
jge
addb
inc
sbb
mov
test
loope
lock
inc
iret
mov
pop
int
inc
loop
out
faddl
pop
and
test
add
cmp
cwtl
push
out
sbb
xchg
lock
xchg
push
ds
lods
push
push
xor
and
fnstenv
outsb
jl
mov
int3
lock
pop
mov
or
fwait
jns
inc
aas
mov
popf
push
je
popf
sbb
mov
sbb
jp
addr16
mov
add
pop
fidivrl
lret
out
mov
mov
jg
subb
into
icebp
cltd
lock
push
or
or
xor
push
sub
xchg
lahf
bound
cmp
fistl
inc
sub
in
mov
mov
adc
cmc
mov
dec
cmp
in
mov
mov
and
or
inc
dec
lods
push
mov
jae
mulb
enter
push
out
mov
mov
push
inc
ret
jno
mov
cmp
fbstp
lea
mov
jg
aam
pusha
clc
push
movsl
push
int
arpl
xchg
sub
dec
cmp
js
xor
lds
movsl
shr
adc
imul
mov
mov
cmpsb
push
insl
pop
lods
in
dec
adc
and
shl
pop
adc
xchg
pop
fdivr
mov
mov
adc
fdivrs
mov
inc
mov
les
inc
mov
fdivs
leave
sub
fwait
into
hlt
pop
fisubrs
std
outsb
popf
inc
cld
int3
inc
pop
push
lods
sbb
iret
inc
pop
jns
jne
mov
mov
imul
mov
xor
cmp
fsubrs
stos
jns
test
mov
or
mov
adc
push
in
inc
into
jo
push
and
mov
inc
or
add
xchg
std
scas
mov
std
in
jno
pmaxub
addr16
subb
xchg
adc
popa
daa
std
sbb
lcall
pop
les
idivb
lea
jp,pt
cwtl
add
icebp
std
mov
loope
fldt
mov
push
or
je
fisubrs
iret
pop
lret
push
test
loopne
lods
xorl
jnp
jg
dec
xor
xor
jno
rcrb
in
or
fdiv
daa
or
sub
sub
cmp
sub
cmpsb
xchg
pop
cmp
out
out
cmpb
into
cltd
cmp
cmp
movsb
jns
lret
sbb
sbb
push
ret
xchg
popf
or
sub
pop
test
xchg
adc
dec
mov
lret
pop
and
cld
insl
jl
sbb
outsl
jns
pop
mov
adc
stos
rorl
lods
dec
or
lret
cmp
mov
add
mov
mov
decb
fcmovb
dec
testb
add
lock
pop
mov
imul
movsl
dec
and
mov
pop
cmp
push
mov
sti
inc
out
cmp
out
fisubs
int
mov
xor
pushw
mov
mov
mov
cmpsl
enter
inc
pop
and
in
cmp
mov
inc
mov
dec
add
xchg
inc
orl
lahf
or
or
xchg
mov
test
dec
int3
in
pusha
pop
sbb
cmp
arpl
shl
les
mov
mov
xlat
push
orb
mov
or
shll
sub
ljmp
lods
movsl
pop
mov
push
push
xor
std
jae
mov
test
add
sarb
jge
jns
xlat
push
rcll
scas
xor
xor
fcmovu
scas
rcrb
imul
and
ret
adc
cli
pop
icebp
add
ja
sti
lds
in
adc
cmp
out
jne
xchg
jl
lds
pop
ljmp
pop
xchg
pop
cmp
jp
sbb
inc
call
gs
push
loope
pop
push
imul
add
cwtl
add
test
push
sub
js
cltd
arpl
cmp
es
imull
jle
pop
xchg
xchg
loop
pop
xchg
int
inc
adc
lcall
es
push
adc
mov
pushf
stos
push
mov
pusha
dec
jns
jp
andl
aad
lret
popf
lret
lock
mov
adc
xchg
cmp
jns
inc
fdivs
lods
insb
lods
cs
loop
xchg
pop
sub
and
push
dec
or
push
xlat
daa
cmp
aas
xchg
mov
icebp
sub
data16
dec
pop
and
cmpsb
sbb
adc
mov
hlt
ss
cmp
add
dec
adc
xor
xorl
xor
pop
mov
dec
inc
fstps
jl
dec
xor
and
data16
or
lods
xchg
ljmp
sbb
add
or
dec
mov
les
sarl
mov
iret
popl
jno
adc
ljmp
fwait
lods
adc
or
inc
ret
gs
jge
sti
rorb
push
loop
in
adc
enter
mov
adc
dec
push
mov
jl
lcall
dec
xchg
adc
shrb
lea
xchg
add
push
add
pop
or
pop
jl
stos
pop
cmp
push
and
movups
sub
pop
cmp
fucomi
mov
loope
xchg
into
pop
out
jb
and
mov
push
je
jp
cmp
cmp
out
out
lods
lret
inc
sbb
push
cmp
out
gs
add
push
inc
popf
jl
ljmp
enter
mov
adcb
out
sub
mov
jo
fs
dec
rcrl
mov
push
subl
cltd
sbb
cld
aad
pop
movsl
mov
js
mov
xchg
mov
incl
outsl
push
mov
and
stos
and
or
adc
inc
jbe
nop
dec
int
adc
lcall
adc
dec
sbb
ror
mov
insb
btc
mul
popa
inc
add
push
pushf
dec
es
cmp
loope
adcl
xchg
ds
inc
inc
cmp
mov
in
test
mov
test
cmp
stos
imull
or
stos
clc
mov
ds
popf
fcmovnu
xor
int
lret
test
xor
jg
shlb
or
or
cmpsb
dec
loop
sbb
cmp
fcmovu
adc
xchg
adc
enter
mov
hlt
int3
test
or
add
nop
insb
scas
roll
shrl
inc
inc
scas
lods
cmp
mov
das
insb
in
jecxz
mov
js
push
jb
pop
test
mov
test
outsb
inc
repz
bound
shlb
dec
mov
lcall
in
mov
loop
nop
jecxz
int
shr
loope
notl
cmc
jle
aaa
lea
jp
bound
movsl
cmpsl
leave
dec
movsb
and
stos
leave
ss
gs
scas
jo
xchg
mov
cs
push
and
mov
jl
pop
hlt
dec
adc
mov
mull
dec
insl
int3
dec
enter
pop
pushf
lods
mov
dec
fwait
cmp
ja
pop
dec
sub
xchg
into
sbb
addr16
fs
adc
mov
xor
adc
movsl
adc
mov
fcomip
mov
cwtl
push
push
fldl
mov
pop
or
inc
dec
nop
xlat
xchg
fistpl
and
ret
xchg
mov
mov
sahf
cld
inc
movsl
subb
imul
and
adc
fcmovnbe
in
rorb
ret
mov
aam
sub
leave
pop
dec
xor
cld
mov
out
mov
sub
insl
ret
adc
add
mov
xor
xor
jecxz
and
pop
push
mov
cwtl
adcb
mov
pop
pop
int
imul
pop
xchg
jb
rclb
mov
in
sbb
jae
loop
jbe
popa
mov
mov
mov
push
pop
cmp
rol
xor
movsl
mov
fs
ffreep
sbb
bound
xchg
xchg
dec
pop
and
fucompp
je
mov
jge
adc
sub
stos
jl
pop
jns
push
cmp
dec
inc
out
dec
xchg
mov
arpl
es
dec
mov
fldt
xchg
mov
cs
cmpsb
in
fcoms
lahf
call
push
loop
xor
push
or
jecxz
cld
or
jmp
pop
adc
sarl
sub
xor
in
out
pushf
pusha
xchg
push
ljmp
sub
mov
add
mov
lods
lret
xchg
ljmp
out
pushf
in
das
and
popa
sbb
mov
cmp
imul
in
add
lcall
push
mov
test
sbb
inc
daa
loopne
sbb
push
rorb
dec
clc
xchg
sti
sbbb
ja
jnp
jae
dec
sahf
popa
lds
sbb
cmp
mov
popf
ret
xor
dec
adc
data16
idivb
cmp
or
sbb
faddp
adc
loopne
shr
sbbl
push
or
and
push
cmp
xchg
test
in
popf
pop
loopne
pop
std
mov
enter
inc
inc
je
and
jp
inc
adc
ja
and
mov
dec
adc
add
xor
aaa
xlat
inc
popf
shlb
daa
inc
push
in
cmp
shrb
les
mov
ds
mov
mov
out
pusha
and
sahf
dec
icebp
fldcw
movsl
test
xor
lcall
int3
les
lea
sahf
mov
fwait
jae
sti
inc
es
pusha
cmp
push
or
bound
jo
fcmovu
imul
pushf
add
inc
or
dec
lahf
mov
adc
pushl
mov
loope
popf
test
xchg
push
push
fistl
pop
dec
imul
xchg
int3
mov
or
cmp
xchg
loopne
sbb
jo
fs
xlat
call
pop
adcl
adc
jmp
dec
lahf
adc
imul
mov
ret
adc
je
mov
jnp
jo
pop
fisubl
push
notl
mov
and
scas
adc
arpl
pusha
testl
ljmp
stos
aam
mov
fsubrl
decl
adc
push
jo
push
adc
cmp
test
and
out
push
leave
push
into
enter
jl
xlat
xor
jne
mov
and
mov
cmp
out
mov
ja
mov
rorb
sub
nop
xchg
in
sub
mov
lds
mov
mov
ficompl
addr16
dec
je
pop
sbb
adc
nop
lahf
les
push
test
rolb
sbb
mov
sbb
mov
fdivrl
or
bound
mov
cli
bound
jo
jl
outsl
fnsave
pop
mov
in
inc
test
mov
das
sahf
std
in
inc
inc
push
sbb
add
jb
mov
lcall
movsl
das
popf
mov
jae
xchg
mov
jecxz
jae
scas
lcall
bound
cwtl
dec
jle
sahf
push
xorps
pop
add
mov
add
leave
jae
push
mov
rorb
lret
mov
add
jae
and
inc
xor
or
mov
roll
and
mov
push
data16
or
fadd
jbe
cmp
aaa
jp
sub
jmp
pop
dec
inc
ret
nop
ret
sahf
movsl
jmp
nop
inc
stos
ja
mov
xchg
xlat
add
sbb
mov
test
xlat
jo
addr16
lods
jns
pop
ficoml
call
sti
pop
mov
addl
filds
shlb
notb
inc
lock
js
inc
fbstp
pop
and
cs
mov
jmp
loop
jbe
test
add
mov
ret
imul
push
fs
cld
jns
xchg
push
movsl
in
xor
pop
mov
mov
test
ds
add
not
jne
in
int3
pop
ja
xor
jg
push
cmp
mov
in
int3
scas
inc
pop
dec
push
je
cs
repnz
xor
mov
insb
aad
xchg
sub
lds
or
or
cmp
push
cmp
mov
mov
add
int3
jl
sbb
test
jbe
jecxz
lret
pop
testl
mov
int3
addr16
in
ja
daa
sahf
jecxz
dec
mov
cmpsl
fwait
adc
in
jns
push
jge
push
icebp
mov
xchg
fimuls
jge
decb
imul
pop
mov
jge
scas
ljmp
addb
push
and
add
aas
fistpl
or
mov
data16
lds
outsb
jne
sti
mov
add
aam
pop
pop
sti
nop
ja
pop
dec
inc
jne
and
pop
or
lea
mov
and
mov
mov
lock
push
push
jge
jne
xlat
mov
frstor
or
ret
enter
or
adc
pushf
in
test
adc
jae
std
jne
inc
int
lcall
dec
ss
mov
mov
and
iret
xchg
ret
jae
scas
xchg
sahf
iret
sub
jmp
or
addr16
xchg
add
lahf
cltd
xchg
mov
push
mov
and
outsl
push
movsb
mov
adc
mov
sub
mov
jp
nop
jns
stc
inc
add
and
jno
mov
push
mov
sahf
dec
call
xchg
in
cltd
lret
dec
frstor
test
imul
jnp
xor
shl
call
xchg
push
or
mov
sbb
and
ret
stc
sub
push
js
or
lcall
xchg
push
loop
lods
xor
mov
add
stc
mov
lret
mov
cli
sub
jmp
mov
iret
leave
in
cmc
mov
xchg
sbb
push
repnz
sub
mov
push
pop
int
loope
dec
or
mov
xchg
push
cmc
rclb
fnstsw
inc
lahf
stc
mov
cld
cmpl
inc
add
aas
push
std
mov
jecxz
loop
mov
or
fnsave
repnz
mov
jbe
mov
sub
dec
adc
xchg
push
push
mov
nop
pop
mov
xchg
jle
fmull
push
and
lret
add
scas
or
xor
jno
shlb
or
fisubs
mov
xor
dec
adc
xor
movsl
je
push
andl
and
mov
cmp
push
sbb
or
fadds
mov
adc
imul
cmp
imul
jns
inc
pop
mov
mov
mov
mov
in
jl
pushf
or
rclb
sub
dec
jo
dec
jns
clc
lods
add
pusha
jnp
and
lds
inc
out
fistpll
lret
arpl
add
or
xchg
aam
out
clc
je
and
ficoms
mov
push
sbb
push
iret
mov
lock
xchg
sub
aam
jnp
ss
and
sbb
pop
mov
sub
mov
scas
fcomi
push
mov
gs
mov
in
lcall
sub
aam
fistpll
or
std
les
mov
out
mov
fadds
mov
lahf
dec
push
push
xor
call
arpl
pop
int
sarb
pop
cli
xchg
popa
pop
decl
dec
inc
and
lea
inc
add
inc
mov
mov
lcall
xor
sub
push
push
push
jbe
cmp
fcomps
test
aaa
push
inc
repnz
imul
sti
inc
repnz
jne
iret
dec
jge,pn
inc
pop
sbb
cld
cmp
jo
adc
fisubrs
mov
aas
mov
jecxz
add
lcall
inc
icebp
mov
mov
fisubl
inc
stos
daa
push
push
push
in
dec
xchg
push
loope
dec
lods
add
dec
xor
test
out
je
iret
and
push
loop
scas
add
test
pop
push
and
jle
leave
fwait
push
pop
adc
or
jmp
dec
adc
jecxz
fstpt
call
pop
clc
orb
addb
add
fwait
xchg
xor
add
inc
mov
cwtd
xor
mov
push
lods
icebp
dec
loopne
add
dec
nop
ss
adc
mov
ret
iret
lret
repnz
xchg
mov
es
es
aad
sub
xchg
movsl
test
sub
mov
stos
add
sti
mov
nop
out
gs
ret
out
fcoml
divl
fs
mov
lds
fdivs
cltd
les
fidivrl
fisubrl
hlt
mov
adc
cltd
push
ret
pop
int3
pop
sbb
call
mov
test
mov
outsl
xchg
ljmp
scas
icebp
loopne
loop
lret
ja
jp
pop
sub
fdivrs
adc
inc
add
add
add
push
lods
ret
iret
adc
imul
iret
inc
cmpsl
xor
adc
jmp
fildll
pop
dec
in
mov
mov
ret
mov
ss
pop
or
les
xor
push
jae
das
jnp
xlat
rcll
pop
imull
inc
pop
push
adc
loop
jne
dec
hlt
out
add
stos
decb
xchg
dec
sbb
js
call
stos
push
and
sbb
fisubrs
mov
jl
iret
out
and
dec
loop
pop
xor
ret
testl
ret
stos
jmp
into
je
bound
jmp
sbb
add
addr16
mov
fbstp
or
sbb
or
out
dec
pop
inc
xlat
repnz
ss
loope
xchg
xchg
cmp
cmpsl
iret
and
cli
insb
int3
pop
lds
rol
cmpsb
jmp
in
mov
jmp
pop
mulb
jmp
mov
or
push
dec
out
sbb
ret
adc
data16
and
mov
mov
jle
adc
sti
inc
inc
inc
fwait
cmp
adc
psrld
out
and
cmp
jp
in
rol
adc
push
cmp
popa
jl
arpl
ljmp
or
push
dec
jns
aam
sbb
jne
mov
lea
fldcw
loop
cs
xchg
add
lods
pop
cltd
aad
fdivrl
mov
ljmp
gs
enter
mov
pop
push
fwait
inc
jmp
cmp
mov
cmc
mov
repz
mov
imul
jo
cmpb
and
mov
call
and
test
js
out
adc
jmp
out
or
mov
cmp
ja
inc
xor
ss
daa
cvtps2pd
gs
aam
cmp
in
and
xor
pushf
insb
inc
dec
push
fistpl
sbb
in
mov
jg
mov
rep
mov
or
test
xor
cwtl
and
int3
xor
aad
rclb
jnp
mov
mov
pop
movsl
outsb
fdivrs
outsl
or
outsb
push
sub
je
pop
push
loope
rolb
je
xorl
stc
cmp
cmp
daa
addb
and
dec
aam
adc
push
fdivrp
inc
aam
xor
dec
loope
orb
mov
push
adc
ja
mov
sbb
dec
notl
out
add
sbb
orl
mov
mov
notb
mov
mov
xor
nop
stc
push
or
xchg
cmpl
mov
lock
shr
leave
push
gs
jp
das
shr
inc
sar
push
stc
icebp
dec
ds
ja
dec
push
xchg
mov
jmp
mov
sarb
push
mov
pusha
mov
sbb
jne
cmp
call
cmp
idivb
push
fwait
mov
aad
push
ljmp
bnd
sbb
aam
pop
cmpsl
out
repz
sbb
pop
add
lcall
fxch
inc
push
sub
and
bound
in
inc
adc
fwait
movaps
jl
lock
mov
mov
data16
dec
adc
scas
adc
mov
mov
mov
fcos
sbb
insl
loope
loop
or
inc
into
or
test
pushf
rorb
push
pop
jne
mov
xchg
test
sub
cmp
xor
jns
imul
enter
in
mov
push
jae
in
test
dec
pop
shl
mov
in
repnz
pop
lds
cmp
pop
pop
push
cld
loop
aad
arpl
lret
push
cmpsb
roll
fucomp
push
and
ljmp
insb
repz
out
cmp
mov
adc
jne
inc
retw
push
sti
xchg
push
add
outsl
xlat
push
lcall
and
lods
adc
cli
sbb
out
int3
flds
insb
sti
xor
fisttpl
adcl
leave
pop
dec
push
dec
sbb
pop
cmc
arpl
mov
popa
mov
adc
xchg
dec
cmp
call
cwtl
dec
es
sbb
out
adc
mov
jl
xchg
pop
sub
in
push
daa
or
and
movsb
push
frstor
popa
ret
mov
adc
filds
add
jg
push
sbb
cmpsb
mov
jno
popf
cmpb
sub
jecxz
jmp
scas
pushl
jecxz
pop
addr16
inc
add
sbb
bndstx
push
pop
xor
enter
lahf
inc
push
sub
call
popa
nop
add
jg
gs
pushf
lds
stc
adc
fistps
out
push
lret
addr16
test
pop
push
pop
dec
jle
mov
mov
shlb
push
lea
nop
shlb
sub
mov
insl
jp
sub
ret
inc
test
orl
decl
cmp
aad
notl
jb
or
cmp
fcoml
xchg
shll
xchg
jns
stc
mov
mov
mov
fdivrs
adc
and
add
popf
std
dec
mul
test
or
pop
fsubs
hlt
add
rolb
add
inc
add
lods
mov
out
mov
pop
pop
mov
jp
add
inc
mov
movsl
jns
xchg
into
test
inc
add
push
cld
push
cmpsb
ret
test
or
cmp
popf
lock
ljmp
pop
sub
mov
iret
inc
adc
xlat
pop
iret
adc
ja
arpl
lret
push
shrl
jno
out
sub
aas
cmp
pop
ror
jbe
cmp
cmp
dec
inc
pusha
mov
jbe
cmp
dec
out
loopne
pusha
and
rcr
out
jg
lahf
mov
repnz
into
inc
stos
nop
and
jae
push
int
inc
sbb
mov
push
nop
jg
cmp
adc
les
mov
mov
ljmp
or
call
cwtl
push
std
loopne
fists
xor
and
sahf
cmp
xchg
inc
es
or
popa
out
mov
fisttpl
sub
dec
push
orl
shlb
dec
cmp
xor
mov
cmpsl
loope
sarl
adc
or
loop
sub
inc
mov
cmp
push
pop
cmp
mov
xchg
lret
dec
mov
fcomps
popf
data16
adc
stos
or
mov
cmpsb
orl
jmp
ljmp
cmp
scas
es
jnp
cmp
cld
mov
cld
les
xor
xchg
inc
idivb
mov
sub
xor
pop
push
insb
mov
push
jg
adc
stos
inc
lcall
mov
ljmp
notb
and
mov
loop
sbb
inc
add
inc
lahf
sbb
mov
lahf
add
mov
xor
dec
cli
vcmpss
lahf
ljmp
loopne
xchg
aaa
popa
mov
sbb
pop
inc
addl
and
enter
scas
mov
js
push
jno
test
inc
adc
data16
nop
jg
dec
push
rorb
pop
stos
and
rcrb
add
mov
mov
repz
fwait
add
stos
stc
scas
and
arpl
mov
aam
in
jbe
pop
cmp
aas
jo
out
fisubrl
fs
rcll
sbbl
ds
add
mov
lret
stos
mov
dec
outsl
adc
push
stos
loope
dec
mov
push
je
jecxz
in
mov
xor
xchg
xchg
jmp
jbe
xchg
sub
pop
ss
lds
aad
xchg
cmp
add
add
fnstsw
lods
inc
push
ja
jmp
xchg
ja
cs
xchg
aad
mov
cmp
stos
repz
fimull
mov
or
pop
ret
inc
jle
jle
sub
xchg
cmc
sub
call
or
jg
jns
aad
fs
repnz
pop
dec
fistpll
in
mov
shrl
jns
movb
fstl
loopne
inc
fisttpll
mov
cmpl
and
dec
rolb
or
lret
hlt
popa
adc
int3
out
popl
lock
jo
je
push
xchg
cmp
outsl
stos
xorb
and
out
mov
in
jp
add
shlb
mov
loop
jmp
sbb
ss
pop
ficomps
lds
mov
gs
jl
jne
xchg
jl
rolb
icebp
enter
add
push
icebp
js
pusha
cmpl
adc
jns
int
icebp
xchg
and
xor
and
imul
push
jp
aam
sbb
fs
test
aam
lods
dec
loopne
mov
jmp
mov
xor
pop
sahf
xchg
stc
cmpsb
test
mov
leave
popa
cmp
or
push
hlt
dec
cmp
mov
cmc
jb
xchg
lcall
xchg
xor
mov
stc
jmp
adc
push
out
push
jp
pop
mov
mov
adc
sbb
icebp
loopne
test
pop
add
push
insl
in
inc
pop
push
add
add
dec
aad
mov
punpckhwd
adc
into
and
outsb
pop
lds
push
lods
push
and
aad
xor
enter
test
push
mov
pop
xchg
mov
js
ret
jecxz
rol
xchg
int
shlb
or
aas
inc
mov
jae
or
fucomi
sarb
pop
cmp
mov
push
pop
xchg
jnp
jae
fisubl
mov
adc
sub
rorb
pop
aam
lods
dec
daa
rorb
mov
inc
cmc
push
sub
insb
lcall
mov
push
push
incb
inc
jnp
mov
mov
mov
cld
es
ror
dec
sbb
into
dec
xchg
lods
cwtl
jne
mov
leave
cmp
or
lods
push
push
repz
mov
dec
mov
outsl
repnz
inc
add
arpl
xchg
push
pop
or
push
inc
ss
push
mov
dec
mov
mov
inc
mov
mov
mov
jno
jo
mov
out
sub
dec
jo
fs
pop
shll
add
out
lods
lret
fs
ss
ljmp
pop
mov
ljmp
je
cld
lahf
jecxz
imul
push
adc
addr16
pop
sahf
mov
or
pop
cmp
mov
dec
mov
cmpl
dec
popf
pushw
push
out
lds
or
push
or
test
js
aam
cmp
cmp
sub
imul
add
mov
cmpsl
outsb
fldl
sti
dec
push
clc
scas
lock
stos
stos
cwtl
jns
adcl
icebp
ret
hlt
and
bound
push
sbb
pop
dec
popf
int
sub
adc
int
fdivrp
inc
or
jg
and
pushf
loope
inc
mov
loop
sbb
jb
outsl
test
jg
pop
mov
pop
fisubl
das
ja
cs
sti
aaa
inc
xchg
fcmovu
subl
outsl
lcall
or
or
aas
sbb
xlat
mov
xlat
mov
cmp
stos
mov
mov
dec
inc
sarl
xchg
dec
push
mov
test
fildl
scas
aad
sahf
fwait
or
sub
or
iret
jne
push
mov
jecxz
adc
xor
mov
mov
jp
stos
pop
subl
movsb
js
rclb
lods
push
adc
sti
cmc
dec
mov
push
call
lea
test
cmp
add
cwtl
scas
push
push
aad
cmp
stos
adc
bound
into
call
movsb
xchg
sub
fidivl
fwait
jmp
lret
xlat
sarl
cmp
jmp
repnz
xor
mov
lods
test
je
xchg
mov
or
push
stc
and
hlt
add
dec
mov
jnp
sub
loope
xchg
push
push
aas
push
or
add
outsl
pop
mov
jl
lret
pop
xor
cld
or
pop
add
jbe
pop
ds
and
sub
data16
dec
pop
dec
mov
or
jo
mov
mov
xchg
filds
push
or
cwtl
mov
lret
mov
fimull
push
jns
clc
push
into
ljmp
int3
xchg
mov
dec
ja
idivb
pop
xchg
jno
or
loopne
pop
clc
push
aaa
and
push
out
loopne
cmp
jmp
or
icebp
and
fsubp
lock
mov
xchg
xor
jle
xchg
push
dec
add
mov
imul
cmpb
and
ljmp
push
mov
fisubl
rorb
sahf
stos
enter
push
mov
pop
and
addl
out
daa
cs
mov
addl
dec
mov
or
dec
mov
mov
push
xchg
imull
push
std
add
or
out
repz
je
inc
js
jecxz
scas
mov
leave
das
fsubr
dec
pop
rcll
dec
in
and
jb
adc
in
mov
in
sbb
adc
xchg
ss
dec
mov
dec
jne
jge
jle
push
xchg
idivb
jb
cmp
mov
add
imul
int3
scas
mov
xchg
sahf
mov
adc
ss
pusha
xlat
aaa
mov
insb
gs
sub
gs
mov
mov
xor
into
sub
cmp
repz
sub
stos
pop
in
bound
xchg
js
mov
mov
aaa
and
sub
dec
inc
cmp
cmp
lcall
inc
or
mov
jg
mov
mov
test
test
push
cmp
xchg
repz
xor
or
mov
enter
pop
or
in
push
mov
aad
and
or
cmpb
ljmp
test
xchg
sub
lret
dec
fldlg2
ficoml
jle
pop
icebp
scas
mov
hlt
fwait
rcll
hlt
xor
and
mov
cmp
movsl
stc
inc
imul
xchg
pop
popf
hlt
pushf
mov
xchg
aad
sub
inc
fists
shlb
dec
es
scas
cmpsl
or
adc
pop
inc
les
popa
mov
loop
add
decb
jg
add
jge
cs
test
cmp
pop
pop
test
pop
add
les
sbb
push
test
into
pop
scas
xchg
mov
fldcw
mov
pop
lret
push
insb
decb
pop
and
das
mov
mov
das
dec
popa
inc
push
add
sub
sbb
mov
and
sub
lods
jg
jb
pop
inc
adc
sub
sbbb
sbb
lret
ds
cmp
add
push
inc
xor
sbb
or
pop
lods
add
push
clc
addr16
pop
call
leave
xor
dec
imull
push
dec
bound
xchg
add
adc
dec
mov
fnstsw
pushf
bound
bound
into
lock
lcall
iret
push
mov
sbb
and
xlat
add
pop
sub
sbb
fs
lods
jge
mov
mov
or
pop
fistpl
lods
lret
mov
xchg
cltd
les
jo
imul
and
scas
adc
adc
cmp
sti
or
mov
or
fildll
repnz
repz
push
lock
aad
dec
sbb
inc
push
enter
mov
mov
push
and
mov
dec
adc
das
fisttpll
leave
mov
into
out
loopne
xchg
jbe
mov
sbb
cli
cld
enter
mov
xor
fs
test
xchg
sbb
imul
clc
pop
test
pusha
dec
add
and
mov
aas
das
fsubrs
cmpsl
aad
je
xor
ljmp
mov
stos
faddp
adc
push
imul
movb
add
in
jne
mov
lock
xor
insl
shll
inc
addb
testb
fbld
imul
pop
mov
movsb
in
mov
adc
pop
lds
in
sub
mov
fbstp
out
mov
pop
jg
lcall
daa
cmp
sub
mov
add
xor
dec
pop
add
mov
sti
lret
mov
sub
jne
push
cmp
lret
sub
adc
inc
hlt
gs
push
nop
hlt
push
cld
pop
push
inc
adc
sahf
test
jb
icebp
movsb
roll
push
jecxz
mov
cli
popf
jb
xor
pusha
mov
fcoml
or
add
cmpsl
out
fsubr
pop
repz
cltd
pop
es
and
out
pop
iret
lock
dec
dec
jmp
inc
push
jne
xor
inc
cwtl
inc
add
adc
dec
daa
leave
sub
adc
xchg
push
test
cmp
cwtl
ret
adc
push
pusha
inc
repz
and
inc
fwait
xchg
jmp
aaa
ret
mov
test
imul
imul
xchg
pusha
insb
pop
sbb
jg
cmpl
pop
push
andb
or
cs
push
lea
out
in
out
fxtract
daa
rcr
ljmp
cmp
push
adcl
xor
arpl
xlat
fdivrl
orb
xlat
in
add
rep
pop
mov
sub
and
or
setns
stc
andb
outsl
jmp
cmp
in
into
stos
mov
mov
jne
stos
ror
mov
lea
cmp
cmp
iret
je
in
stc
mov
push
mov
sbb
nop
adc
add
ja
jge
and
aas
aad
dec
and
scas
lods
into
inc
mov
popa
sub
call
mov
mov
popa
or
or
fnstsw
addr16
xor
and
dec
sub
sbb
mov
xlat
shl
sahf
orb
fyl2x
mov
lds
jmp
stc
mov
lock
jo
repnz
pusha
jle
stos
shlb
cmp
push
push
mov
mov
jg
sub
mov
jne
push
xor
sbb
in
loope
pushl
pop
mov
mov
imul
pop
je
shrb
shrb
fsubp
aad
lcall
gs
mov
js
mov
push
sub
jb
pop
shrb
and
sbb
mov
xor
add
stos
nop
mov
xchg
xor
fdivrl
inc
mov
jge
std
add
shr
insb
add
mov
sub
stos
iret
xchg
enter
outsb
repnz
rolb
push
cmpsl
in
xor
dec
pop
leave
cmp
dec
std
aaa
sub
sub
jmp
nop
cmpsl
nop
add
mov
popl
pop
sub
mov
jnp
add
int3
cld
fcmovnu
shrb
fisubrs
xchg
mov
mov
pop
loope
sbb
jb
out
repz
push
xchg
mov
loope
mov
sbb
xchg
inc
add
jecxz
scas
mov
ds
sbb
loope
pop
mov
ss
inc
rcll
add
jp
enter
sub
cmp
adc
lock
shl
andb
mov
stos
add
shrb
call
mov
in
adc
arpl
inc
lret
addb
sub
sub
jno
add
sbb
int
and
xchg
sub
and
loop
add
and
es
xchg
inc
dec
popa
enter
xor
add
sarl
sub
xor
and
dec
cmp
dec
jo
rcr
sbb
push
out
cmp
add
std
cwtl
sub
out
iret
jle
testb
bound
push
xor
js
scas
add
popf
popa
cmpsl
jbe
and
daa
lret
add
mov
mov
pop
shrb
mov
rclb
stos
cmp
push
cltd
fnstsw
test
lods
inc
aad
negb
push
fidivrs
push
in
mov
push
fcmovnb
lods
push
mov
xorb
adc
shl
mov
adc
icebp
fldl
xchg
ret
mov
pop
sbb
jmp
test
mov
insb
stos
stc
push
clc
lds
fwait
jb
lret
jbe
xor
inc
mov
pusha
lods
out
add
fdivrs
cmp
idivl
cmp
fs
sbb
jne
imulb
or
xor
push
push
adc
and
mov
fldcw
mov
jno
divb
cmp
in
mov
ret
sbb
cltd
lea
stos
mov
loop
xchg
xchg
int3
xchg
inc
or
imul
leave
pop
lcall
xchg
or
fisubs
ret
mov
adc
inc
jmp
pop
daa
xor
mov
xlat
mov
cs
rcrl
mov
pushw
push
xchg
imul
leave
cltd
or
or
inc
rclb
lds
sub
and
mov
add
movsb
dec
mov
imul
loope
stos
xchg
xor
ss
pop
orl
shll
movsl
xlat
mov
dec
int3
lret
sbb
adc
stos
lea
sti
mov
jp
stc
in
or
add
sub
fstpt
mov
hlt
imul
pusha
sbb
fiadds
adc
mov
cmc
es
fistpl
scas
test
iret
sarb
sub
mov
jbe
add
mov
push
daa
push
cld
ss
shrl
lahf
mov
into
mov
mov
mov
out
cmpsb
popf
jne
rcl
lea
test
dec
push
out
xchg
aam
mov
inc
inc
lahf
std
out
les
xchg
mov
inc
inc
testb
xchg
test
sub
cmpsl
lods
movsl
mov
pop
in
stc
mov
divb
ds
aas
shlb
push
shlb
pop
sbb
ja
fcompp
out
cmp
testb
push
in
mov
pop
cmpsl
loop,pt
jecxz
pop
fsubrl
dec
xor
xor
mov
pop
mov
push
jne
out
cmpsl
pop
lahf
js
and
jecxz
addl
mov
jb
push
sbb
sbbl
xor
dec
lea
sbb
outsb
movsb
sbb
ror
shrb
ret
xchg
lret
fstl
test
mov
or
clc
imul
aas
daa
mov
iret
sbb
test
shrb
dec
mov
imul
adc
je
mov
out
int
mov
loopne
mov
inc
sbb
mov
adc
lret
dec
sub
and
cmc
jmp
add
das
jp
push
and
mov
xchg
fcomps
adcl
rclb
or
xchg
mov
dec
dec
adc
push
stos
shl
or
ja
fwait
das
cltd
lock
js
andl
divb
cs
cmp
pop
push
call
sbb
jl
mull
mov
out
jnp
mov
xchg
outsb
out
jle
mov
inc
add
sub
fidivl
rol
mov
mov
aaa
aad
jae
pop
mov
jmp
dec
jecxz
mov
sub
lea
inc
and
lret
cltd
pushf
daa
mov
mov
xabort
pop
cmp
add
addr16
xchg
mov
ljmp
or
inc
mov
pmulhw
loop
cltd
cmp
dec
mov
sub
push
iret
cmp
jbe
cli
incl
or
xorb
imul
jo
push
mov
xor
push
hlt
popa
dec
fidivs
jnp
adc
andb
es
cwtl
mov
cs
sbbl
push
mov
mov
adc
adc
cmc
test
ret
inc
inc
sbb
pop
int
jnp
cmc
add
pusha
cmp
jecxz
arpl
mov
cmp
inc
inc
fwait
repz
pusha
mov
into
sbb
pop
daa
fstpt
push
inc
scas
movsl
inc
mov
push
mov
out
xor
sbb
test
and
cmp
fld
sbb
out
push
cltd
mov
pop
lock
jle
subl
div
fldl
dec
sti
xorb
out
xor
cld
aam
or
push
aad
inc
pop
pop
fidivrl
dec
adc
and
xchg
dec
ret
mov
loopne
rcll
push
fldpi
push
push
into
adc
dec
or
push
push
push
in
in
cmpb
jge
cltd
xor
stos
lock
aad
inc
xchg
cmp
mov
add
pop
jl
and
cmp
jb
xchg
push
push
xlat
ljmp
jle
adc
adc
or
fidivrs
or
mov
aam
jne
insb
cmp
dec
ljmp
pop
add
pop
xchg
xor
std
test
ss
sbb
xchg
mov
mov
xor
mov
and
hlt
mov
sub
push
jl
mov
xor
and
dec
repz
sti
sub
sti
dec
jae
iret
dec
test
lds
pop
dec
lea
push
push
adc
xchg
pushf
cmp
ficompl
sbb
testl
adc
sbb
fs
int3
cltd
push
fwait
scas
call
aaa
pop
mov
imul
fdivrs
add
loop
into
mov
mov
pop
cli
cmpsb
mov
mov
das
inc
mov
scas
jne
xor
int
push
pusha
push
sbb
int
add
cmp
adc
mov
mov
call
lds
pop
cmc
add
mov
xchg
lds
std
adc
dec
aam
push
std
loop
in
pop
adc
out
stos
dec
cmp
fists
aad
cli
jl
insb
xchg
mov
push
and
jmp
cmp
dec
iret
scas
xchg
jno
sbb
xor
pushf
addb
or
sub
mov
call
test
ljmp
push
pop
andl
jbe
jl
adc
cmp
sub
add
adc
jbe
lcall
mov
dec
dec
push
sub
inc
enter
and
inc
sbb
mov
and
daa
and
cwtl
inc
out
or
aaa
xchg
sbbb
call
mov
push
add
and
in
cmp
clc
int
xorb
mov
jg
sarb
xchg
pop
arpl
push
lea
fbld
cmp
lret
add
ja
lret
mov
loopne
lahf
add
int
fwait
xchg
ret
add
push
xchg
adc
ds
add
test
jno
cmpsl
push
adc
das
jecxz
ljmp
fidivs
hlt
pop
fildll
and
cwtl
movsl
mov
dec
psubsb
adc
popf
xor
dec
outsb
inc
or
shlb
js
xchg
push
fsubl
dec
xor
fnstsw
push
pop
dec
aam
xchg
push
push
inc
in
cmp
push
stc
test
test
pop
and
lcall
inc
nop
mov
loopne
into
lds
xchg
aad
cmp
andl
rcll
and
sub
jmp
adc
les
mov
arpl
iret
inc
jnp
lret
lret
jp
push
call
and
push
fstl
jl
mov
in
neg
push
nop
dec
out
mov
stos
xchg
cli
sub
outsb
push
out
xchg
add
adc
sub
sti
adc
icebp
insl
mov
jmp
push
cld
movsl
les
cmc
mov
adc
stos
int
push
jmp
adc
inc
add
mov
jnp
push
movsl
fmuls
imull
xor
lret
mov
inc
in
jge
aad
sbb
jge
js
sbb
or
stc
or
add
pop
cmc
xchg
lods
adc
cwtl
push
sbb
jae
cs
inc
pushf
push
jmp
push
push
sub
or
dec
cmp
mov
adc
pop
fcoms
inc
call
out
xor
push
popa
sub
jl
aad
dec
sbb
and
test
adc
iret
or
mov
xor
sub
loopne
pop
and
in
ja
xchg
in
mov
push
or
or
data16
push
xchg
pop
js
or
ret
ror
add
movsl
inc
jmp
push
lods
movsb
and
jo
gs
mov
jmp
ror
aas
js
cltd
lods
or
jns
ss
loope
cld
dec
pushf
sahf
mov
sbbl
lock
mov
sub
jne
or
jae
imul
in
pop
add
ljmp
mov
xor
lea
in
pop
sub
sbb
xor
xchg
stos
addb
xchg
xchg
dec
push
call
stc
insb
in
dec
rorb
mov
sub
ss
and
enter
clc
inc
mull
inc
add
pop
sbb
inc
icebp
loopne
adc
sub
mov
add
stos
inc
pop
testb
or
jmp
enter
mov
jae
fwait
add
pop
movsb
enter
jnp
push
icebp
lock
lds
fs
repz
jecxz
pop
sub
jno
stc
jg
stos
adc
xor
gs
push
mov
mov
push
cmp
aam
adcb
cld
inc
out
mov
lcall
idivl
call
pop
fnstsw
cmp
lret
mov
cmp
sbb
js
movsl
push
pushf
and
fs
xchg
ja
out
shlb
ret
lret
xchg
das
ja
push
pop
cmpb
mov
mov
xor
cmp
mov
mov
lea
sub
ja
shll
pop
shlb
sti
jno
ret
std
adc
cmpsb
fwait
mov
mov
push
dec
pop
pop
pop
and
push
pop
pop
push
jp
and
je
push
fisubs
inc
sbb
adc
mov
xor
xchg
pop
loopne
popf
rcr
adc
jns
mov
adcb
mov
push
stos
dec
data16
or
sbb
leave
xchg
int3
out
cwtl
push
sti
fwait
in
cltd
inc
movsl
jb
add
call
shll
loope
push
repnz
sbb
or
cli
addr16
jl
scas
adc
decb
pop
sahf
jmp
je
inc
add
or
ret
adc
sub
inc
je
leave
mov
js
cmp
jle
or
popf
pop
loop
dec
mov
sub
adc
push
dec
xchg
mov
xlat
xor
pop
mov
jge
jnp
test
xor
popa
sub
std
scas
mov
jno
aas
fidivrl
xchg
mov
lods
out
jae
aad
inc
imul
stos
push
xchg
sbb
xchg
jg
test
movsl
xchg
inc
dec
negl
fxch
in
leave
out
or
ja
dec
mov
adc
push
mov
mov
xor
cld
sub
xchg
sub
sub
mov
inc
scas
push
inc
fwait
ja
ret
sti
loopne
cmp
or
imul
add
pop
ljmp
mov
shll
inc
lods
or
xchg
push
or
dec
jg
clc
cli
inc
je
iret
mov
ds
sub
in
test
sbb
sbb
lock
sub
movsb
push
clc
cs
cli
clc
scas
addr16
or
cmp
sbb
popf
jns
xor
mov
xor
inc
pop
aaa
cmp
repz
xor
cld
rclb
mov
icebp
cmp
inc
and
add
cmp
lea
or
push
lods
ret
jg
jnp
bts
aad
dec
jno
push
sahf
mov
out
in
jl
xchg
imul
std
dec
aas
xchg
in
mov
repnz
cmp
xor
jmp
test
roll
push
pop
jb
lahf
ret
stos
repz
dec
xchg
mov
and
mov
not
sub
adc
jnp
push
std
mov
dec
xchg
je
adc
mov
jae
inc
roll
push
ret
cli
je
xor
or
cwtl
sub
popf
rcrb
cmp
push
test
out
rcll
dec
aaa
sub
cmc
pop
dec
xchg
inc
xchg
dec
mov
jl
sbb
cmpb
jne
push
adc
add
mov
lahf
add
xor
test
cwtl
jns
adc
les
in
imul
out
sbb
jb
push
jo
imulb
cmpsl
xchg
xor
mov
push
cmp
addl
int
push
adc
sbb
or
xchg
aam
cmc
loope
cmp
jmp
shll
push
loope
push
out
mov
add
popa
xchg
movsl
cmp
scas
imul
cmp
push
pop
pop
ret
jmp
or
cmp
mov
dec
out
ja
dec
and
inc
adcb
stc
sub
pusha
fildll
xor
es
push
sub
pop
or
call
inc
imul
ds
jb
jno
dec
shll
into
stos
movsb
or
sti
fdivrs
inc
sub
add
aas
cmc
adc
jo
loop
mov
jno
inc
fildll
jmp
xchg
inc
pop
out
cmpsb
rorl
nop
push
lcall
sahf
jne
push
fcmovnu
push
aaa
cmp
std
adcl
and
cs
mov
mov
das
mov
test
in
fs
push
shrb
aad
not
fsubrs
fmuls
nop
push
insl
inc
cmc
sahf
cmpsl
into
rcll
jo
inc
jecxz
divb
push
sbb
adc
dec
mov
pusha
jo
arpl
push
and
lret
fnstcw
push
inc
fst
stos
inc
call
test
lds
ds
cmp
mov
pusha
fcmovnb
adc
cld
dec
cmc
and
and
cmp
aaa
sub
fdivr
repnz
test
xlat
aam
push
cmp
jmp
dec
ljmp
sbb
sub
xchg
pop
stc
and
mov
repnz
outsl
jbe
mov
js
cmp
mov
fmulp
stos
les
push
fimuls
push
push
popf
or
adc
fwait
cwtl
jns
mov
sahf
jmp
aas
or
imul
enter
jbe
gs
daa
ja
push
adc
sti
es
pusha
push
mov
dec
cmp
cmpsl
imul
sbb
jbe
mov
push
inc
pop
push
sub
stc
rolb
cs
xchg
ljmp
or
nop
std
mov
mov
lcall
dec
push
xchg
stos
enter
mov
sub
jg
jo
or
xor
aaa
xchg
mov
cmp
rolb
mov
xor
negb
repnz
rorb
mov
lret
mov
dec
sub
cltd
mov
or
mov
add
add
fs
andb
sarb
inc
arpl
xchg
insl
lock
shrb
inc
pminsw
addr16
add
mov
int3
frstor
lock
ret
sbb
mov
jns
testl
cmp
dec
mov
ret
ret
test
mov
jmp
movsb
test
adc
lahf
mov
sbb
adc
scas
dec
push
push
int
out
xchg
inc
xchg
rorl
xor
jae
ja
xchg
sub
into
insl
mov
fs
fisttpl
sub
je
nop
or
outsl
cmp
pop
out
mov
jp
jmp
push
adc
arpl
mov
sub
aad
mov
push
mov
and
mov
sub
inc
cwtl
fdivr
push
mov
xlat
loope
and
or
mov
leave
in
jmp
dec
cmp
call
inc
ds
mov
cmp
push
lds
nop
je
out
sbb
data16
and
xchg
push
loop
movsb
mov
cmc
jmp
fidivrs
rcr
mov
daa
xor
cmp
pop
lahf
stos
jb
outsb
xchg
dec
icebp
push
mov
test
push
xor
cmpsb
lods
cmp
out
jecxz
jns
sbb
notl
cmp
shlb
cmp
jnp
lret
imul
adc
test
iret
jo,pt
cmp
jp
mov
or
in
push
imul
push
fcmovb
inc
mov
push
mov
push
iret
or
loopne
test
int
push
icebp
cmpsb
mov
jmp
ljmp
fstl
stos
xchg
cmpsb
or
imul
mov
add
testl
jl
cmpsl
add
sub
jg
pop
lods
out
lea
and
cmp
data16
xchg
bound
mov
outsb
add
inc
insb
cmc
je
data16
in
enter
xor
mov
inc
bound
cmp
pop
repnz
pop
adc
movb
sbb
ja
add
lahf
mov
into
jge
inc
dec
aaa
cwtl
mov
inc
nop
idivl
imul
jmp
push
lods
and
cmp
add
scas
and
fs
sub
xchg
aaa
rcrb
and
pop
pushf
outsb
popf
xchg
push
sub
and
fstl
ficoml
fiadds
add
pop
outsb
ja
loop
sub
sbb
stos
mov
popa
push
mov
jns
fsub
dec
cmp
sbb
mov
xchg
sbb
xlat
or
sahf
inc
fs
dec
es
inc
repnz
mov
sbb
jnp
dec
test
dec
and
sahf
mov
icebp
pop
cltd
add
sub
in
push
push
aad
pusha
sbb
adc
scas
and
addr16
js
vsqrtps
push
jno
fdivrs
mov
rcrb
fwait
or
pop
rol
rorl
mov
push
cmpsb
add
repnz
dec
leave
std
sbb
sub
and
inc
lea
aas
notb
xor
andb
sbbb
mov
mov
xchg
mov
dec
and
mov
iret
repnz
dec
dec
or
cltd
leave
and
lods
jo
clc
nop
cmp
mov
mov
add
push
mov
mov
push
mov
clc
arpl
mov
dec
xor
dec
int
test
int3
cltd
lods
and
push
xchg
repnz
js
iret
cmp
cltd
mov
mov
int3
out
outsb
clc
cltd
cmp
popa
dec
mov
cld
loop
outsb
xor
xchg
clc
imul
popa
or
mov
icebp
repnz
nop
add
shll
cmp
test
sbb
popa
jle
pop
fnstcw
loope
xor
leave
pop
add
js
inc
das
shld
lret
ret
pusha
push
insb
fnstsw
jae
jmp
and
sahf
repz
xorl
mov
push
std
xorl
test
into
enter
pop
xor
dec
bnd
cld
push
es
cld
inc
dec
push
pushf
push
sub
movsb
or
lods
cmp
add
sub
mov
add
mov
shll
sti
mov
subl
int
mov
sbb
adc
daa
xchg
xchg
adc
lods
add
mov
jle
pusha
sub
sarl
xchg
mov
cltd
js
stc
adc
add
mov
push
enter
rcl
cmp
cltd
mov
xor
cld
mov
pusha
xlat
xchg
dec
clc
sbb
push
shll
push
dec
loop
xchg
orl
call
pop
add
push
sbb
jecxz
inc
xchg
sbb
lods
addr16
ret
stc
cmp
or
pushf
test
gs
cmp
dec
sbbb
mov
push
sbb
loop
popa
jo
popa
repz
daa
jp
xchg
jo
jmp
pop
and
inc
or
adc
sti
incl
xchg
push
sub
fs
rcrb
bound
cmpsl
cwtl
sub
into
xchg
pop
xchg
mov
loopne
lret
mov
mov
jo
fstps
add
mov
jmp
dec
bound
or
adc
pop
je
cmp
adc
adc
pop
dec
adc
mov
lock
ficompl
movsb
or
rcll
into
in
push
xor
rol
add
mov
and
stc
push
adc
pop
adc
popf
xor
das
dec
push
in
lock
je
roll
gs
les
shll
fs
in
cltd
iret
add
cmpsb
cmpsb
imul
imul
pop
loop
push
sub
add
jl
mov
in
xchg
cld
push
pop
add
test
jb
inc
sub
out
mov
mov
xor
lcall
cs
in
lret
inc
fildll
mov
fists
pop
mov
mov
pop
ds
int3
in
lahf
jmp
insl
xchg
jno
in
aad
pop
das
es
xor
test
dec
fisubrl
dec
sbb
cmpl
imul
push
in
mov
std
dec
mov
add
popf
fwait
dec
lods
inc
js
rclb
xor
push
xchg
je
dec
dec
jl
roll
rolb
idivl
xchg
push
in
rolb
ds
xor
aam
fidivrl
ds
jg
add
xchg
add
adc
push
aad
dec
ljmp
sarl
mov
or
and
inc
scas
sbb
cltd
pop
cmpsl
inc
cli
scas
mov
out
pop
aas
pop
xor
int3
iret
pop
sub
inc
addb
es
sbb
into
and
jecxz
sbb
rol
ret
or
xor
leave
pop
dec
push
jl
cmpsb
mov
dec
in
lods
mov
and
imul
aas
mov
dec
push
or
in
push
jl
stos
push
aam
mov
cmpsl
rorb
call
imul
call
fs
add
add
add
cmp
sbb
cmp
sti
cmpsl
pop
dec
pop
ljmp
push
lcall
mov
test
jg
mov
and
lea
and
faddl
mov
jg
das
cld
faddp
stos
jecxz
pushf
add
and
sub
inc
test
dec
sub
dec
incl
push
sbb
sub
bound
cmp
scas
hlt
add
add
pop
repz
jle
js
decl
mov
fs
xor
mov
scas
mov
push
mov
cltd
jns
sbb
roll
xor
arpl
jb
stos
scas
or
inc
mov
shlb
adc
loopne
and
fsts
push
pop
xchg
push
iret
cmpsl
out
sbb
nop
cmpb
push
into
inc
les
lcall
sbb
add
rcr
pop
aaa
pop
push
fs
xchg
repnz
in
dec
push
mov
and
cmp
xor
mov
sub
fldt
mov
fdivrl
sbb
lods
fnstsw
pop
jge
push
xchg
pop
lods
into
xchg
jae
mov
sbb
and
or
mov
fbld
test
lods
test
and
add
jne
int
mov
popa
pop
out
dec
clc
pop
cmp
jne
lahf
mov
dec
clc
sub
xor
adc
stos
stc
daa
sub
dec
xchg
shl
sbb
ljmp
sbb
gs
fcmove
int
stos
and
repz
int3
out
dec
inc
es
cmpsl
mov
dec
enter
ret
cmp
xchg
daa
jns
add
stos
add
push
call
subb
lret
push
mov
pop
hlt
push
push
dec
lcall
mov
outsb
in
imul
les
ds
std
outsl
mov
adc
cmpsl
or
arpl
mov
rcrb
ficomps
adc
popa
mov
dec
in
mov
mov
cmp
mov
dec
adc
dec
out
pop
jns
fdivl
adc
pop
in
std
jne
sbb
lret
and
pop
popf
shll
test
sahf
stc
shlb
pop
sub
ficoml
sub
cmc
pop
in
loop
or
leave
mov
orl
push
lods
scas
cmc
ret
and
fwait
inc
nop
fisubrl
retw
lds
and
stos
pop
mov
add
imul
or
pop
addr16
orb
loopne
pop
test
scas
arpl
xchg
mov
adc
fs
mov
push
fisttps
clc
fcomp
shlb
jno
loop
lcall
lds
inc
xchg
xchg
pop
mov
and
ljmp
in
jbe
testl
push
and
and
mov
pop
loop
ret
or
test
xorps
push
imul
jp
jnp
and
or
xchg
xor
sbb
movsb
cmpl
sub
xchg
pusha
jns
jg
dec
bound
cli
and
dec
fldl
cwtl
and
sbb
cmp
movsl
pop
dec
or
jmp
jmp
call
sub
jmp
lods
fsub
and
arpl
cmp
push
out
add
jecxz
dec
out
or
add
lods
mov
cmc
pop
xchg
arpl
imul
pop
mov
gs
push
mov
push
inc
in
movb
in
add
sbb
lcall
call
data16
stos
push
test
test
mov
loop
pop
dec
sub
inc
lret
mov
scas
cld
sub
inc
sub
pop
and
or
mov
xlat
mov
ret
fnstcw
mov
xchg
and
cmp
mov
cmp
pusha
or
jmp
mov
inc
adc
inc
scas
push
mov
pop
mov
dec
adc
or
ja
or
imul
mov
out
mov
in
lock
add
jne
sbb
cmp
sbb
pop
fwait
lods
rol
insl
push
inc
mov
test
mov
lea
insb
fdivl
sbb
arpl
push
sti
xlat
lds
push
jb
test
imul
iret
inc
xchg
adc
imul
sub
out
cwtl
and
push
dec
std
sub
mov
xor
sbb
out
scas
lods
sbb
or
xchg
jae
fidivs
fstpl
pop
cwtl
jmp
nop
jns
push
subb
sar
repz
add
xlat
pop
pop
dec
aaa
xor
lret
lds
sahf
out
pusha
jmp
ret
in
push
mov
and
sub
mov
pop
ljmp
inc
jle
dec
outsl
jle
xchg
inc
cmpsl
iret
movsb
fyl2x
loopne
cmp
push
std
jbe
push
mov
fildl
loop,pn
inc
mov
mov
in
pop
imul
hlt
and
sbb
out
aad
mov
pushf
fs
lret
dec
data16
sub
or
pop
inc
cli
jl
push
loopne
cltd
sbb
and
pop
xchg
mov
sbb
lahf
jnp
inc
push
test
xor
sbb
inc
call
sahf
subl
cmpsl
lods
pusha
push
scas
bound
out
nop
inc
inc
cmpsb
bound
cmp
fbstp
and
in
lret
push
sahf
sti
mov
jge
adc
mov
decl
sub
cmp
mov
jle
sbb
push
call
inc
rolb
mov
xchg
cmc
mov
xor
xor
pop
in
adc
add
jp
lcall
fistpll
movsb
inc
adc
xor
gs
pusha
arpl
shlb
and
adc
inc
iret
test
inc
mov
fs
mov
arpl
mov
jl
arpl
push
sub
jne
push
pop
xchg
sbb
mov
cltd
add
jno
adc
test
inc
xchg
fdiv
xor
addr16
pop
fstp
les
lret
cmp
dec
mov
lahf
sub
rcrb
add
xor
ljmp
lret
or
or
lahf
jmp
mov
das
push
and
rcrb
pop
mov
add
repz
insb
ss
xchg
mov
cmpsb
add
movsl
sar
cltd
paddusw
jbe
lea
mov
jb
shll
bound
pop
xor
mov
popa
clc
mov
iret
lcall
cmc
inc
mov
pop
inc
cld
jb
fadd
mov
nop
dec
test
ret
mov
adc
xlat
push
filds
icebp
push
jmp
rorb
xchg
cmpl
mov
add
and
clc
jle
sbb
jge
ljmp
jl
into
das
insb
lock
mov
or
clc
out
xchg
pop
in
or
inc
xchg
pop
mov
in
jl
std
rorb
out
pop
loopne
and
test
sub
mov
subb
inc
pop
lcall
lock
cmc
pop
add
jnp
xchg
dec
adc
divl
iret
mov
or
and
jp
cmp
popa
fsubrs
cmp
inc
xchg
dec
sub
pop
pop
xchg
cltd
inc
add
jne,pn
push
fisubrs
jmp
xchg
sahf
cmpsl
or
arpl
sub
sbb
and
lret
rorb
andb
sbb
lock
sub
in
pop
lahf
loop
stos
mov
mov
and
cmp
cmc
pop
mov
jmp
push
sub
xchg
in
pop
arpl
mull
pop
loop
xchg
jno
addb
push
mov
inc
movsl
push
insl
mov
mov
jns
sbb
push
mov
lret
cs
fistpll
xor
enter
mov
dec
out
clc
pop
gs
add
xchg
mov
cmp
push
into
sub
cmp
rcl
fcmove
iret
sysenter
test
inc
fsubp
mov
xchg
pop
ficompl
sbb
sahf
and
dec
loop
push
je
mov
dec
mov
outsl
stc
xor
mov
cli
scas
dec
mov
and
out
xlat
jecxz
jae
fs
xor
xchg
sahf
sub
hlt
pop
stos
inc
fcoms
push
and
loopne
jns
and
jbe
mov
pop
push
outsl
test
orb
cmpsl
sub
dec
fisubrl
jb
hlt
idivl
out
ficoms
les
filds
sti
fwait
imul
mov
jbe
test
sbb
out
test
cwtl
inc
jae
jp
mov
jle
jp
push
or
mov
fadds
sti
lods
out
addr16
xor
cmp
dec
out
fucom
je
or
in
adc
xchg
leave
and
test
mov
ficoms
inc
loopne
add
inc
mov
cmp
leave
frstpm(287
sub
sbb
pusha
xor
adcl
jg
imul
add
xchg
pop
scas
loope
je
shlb
pop
adc
xchg
sub
loopne
into
push
pop
es
in
jp
addb
arpl
pusha
ljmp
stos
out
pop
test
lcall
lock
lahf
push
cmp
push
out
dec
push
mov
and
cld
lahf
jg
sub
dec
aaa
lods
dec
popf
push
cmpsb
mov
jp
dec
rolb
cmpsl
out
insl
push
ljmp
pop
loope
fidivrs
jns
cmp
cmp
mov
popf
pop
add
and
rcl
sub
test
pop
dec
stos
push
fidivrs
sub
mov
cmp
int
mov
push
mov
stos
inc
jle
pop
sub
jl
aad
jo
lret
dec
mov
cmp
es
ror
ljmp
nop
mov
lods
cmp
adc
les
mov
sub
in
sbb
orl
push
push
nop
cltd
xchg
jg
imul
cmpsl
jae,pt
xchg
push
mov
call
loopne
adc
rolb
scas
push
pop
mov
pop
jb
sahf
cltd
das
and
inc
andb
xor
push
movl
push
xor
or
aas
jo
inc
sub
shrb
mov
fisubs
arpl
add
xchg
fprem
xor
or
neg
lea
add
mov
xor
push
and
shll
imul
xchg
movsl
negl
jno
aam
add
and
adc
pop
sbb
outsb
repz
mov
outsl
pop
gs
idivl
aaa
clc
jns,pn
lret
inc
push
psubusb
add
cmp
scas
das
out
cltd
push
fmulp
in
lea
lret
es
adc
dec
out
lret
shrb
insl
push
dec
xor
mov
pop
pop
cmp
mov
inc
cmp
jb
addr16
in
pop
xor
imul
mov
adc
fists
ja
ret
jb
mov
add
stc
ds
insb
dec
mov
add
andl
pusha
gs
add
or
pop
xlat
pop
add
xchg
inc
sub
repz
pusha
test
jmp
sbb
xchg
scas
stc
sti
lock
push
inc
enter
mov
mov
fucomp
mov
push
mov
lcall
enter
test
in
inc
int3
pop
clc
lahf
push
mov
pusha
in
xchg
xchg
dec
mov
pop
jmp
cs
ljmp
cwtl
push
add
imul
push
pop
xlat
lods
sbb
hlt
les
lock
sub
out
dec
in
xchg
flds
dec
inc
adc
pop
inc
or
push
sub
pop
push
mov
imul
ret
ret
mov
mov
idiv
stos
fmull
sub
push
das
adc
notl
push
jne
inc
aaa
and
fisttpl
pop
cli
sbb
into
xchg
cmp
sbb
mov
addl
jle
sub
sbbl
mov
or
sub
lea
imul
icebp
fdivr
jae
orl
add
mov
js
test
shl
mov
es
dec
mov
shlb
cmp
inc
in
jge
jg
aas
xchg
imul
cmpsb
fstl
test
push
mov
jle
imul
clc
adc
mov
mov
imulb
adcb
ret
and
dec
sub
jmp
or
mov
adc
pop
mov
jmp
xchg
xor
scas
aaa
mov
fsts
push
dec
fsubr
sbb
movsb
inc
testb
pop
sbb
mov
jmp
mov
jge
mov
sbb
xchg
aas
pop
xchg
aam
sbb
js
mov
lock
xlat
push
aaa
cmp
mov
sbbb
cmpsb
lds
outsb
push
sub
fstl
xchg
insl
jl
cltd
lahf
fwait
jo
hlt
adc
dec
jbe
mov
jmp
subb
ljmp
aam
in
mov
cmpsl
mov
lea
jg
push
mov
mov
xorl
pop
mov
adc
repnz
push
jbe
cld
inc
mov
cmp
bound
mov
push
dec
int
outsl
leave
inc
into
into
mov
jp
js
xchg
mov
add
dec
pop
arpl
jo
or
pop
inc
andb
fwait
sub
and
int
test
pop
rol
leave
fdivrs
mulb
lock
shrb
jmp
push
jl
push
mov
sar
inc
fs
inc
inc
fwait
cmp
jmp
push
scas
lods
lcall
loope
xor
out
lcall
lock
stc
add
andb
les
cmp
sbb
inc
inc
inc
repnz
sub
sub
fldenv
inc
fbld
and
mov
mov
js
push
and
in
mov
xor
gs
mov
jbe
sub
mov
xlat
xchg
dec
aas
mov
lcall
imull
cmp
cmp
loop
adc
jmp
mov
clc
je
pop
pop
rorl
inc
xor
and
cmp
pushf
pop
mov
call
cmpl
aam
mov
adc
inc
outsl
jnp
jo
inc
mov
mov
push
insl
mov
mov
push
pop
cmc
sarl
lock
jge
pavgw
pop
mov
rcl
repnz
pop
nop
lahf
movsb
cmp
mov
shlb
mov
push
dec
ss
cmp
mov
push
sub
dec
inc
cmc
jmp
stos
out
add
nop
cmc
adc
lods
std
cmp
xor
jo
ljmp
pop
jns
jnp
mov
gs
idivb
push
ret
daa
es
in
xchg
mov
mov
ljmp
mov
jne
pop
mov
pop
push
imul
jno
outsb
rcrl
stos
mov
inc
cmp
addr16
fisubrs
xor
lea
push
es
ds
aam
add
adc
lret
xchg
es
add
stos
test
lds
in
repnz
aas
fisubrs
outsb
add
mov
cmpl
dec
out
jno
mov
jge
sbbb
cmp
mov
icebp
lods
cltd
aas
lret
sbb
push
lret
add
push
cmp
bnd
hlt
or
int
cld
lahf
pop
addb
repnz
imul
mov
sbb
sbb
adc
mov
fsts
imul
jns
js
fdivl
scas
inc
mov
sti
loope
cmp
aaa
push
sti
and
shrl
aas
mov
enter
dec
sahf
push
push
push
popf
imul
mov
pop
inc
and
mov
lods
loop
sbb
ret
add
sbb
add
popa
xlat
push
inc
sbb
xchg
sbb
mov
dec
stos
icebp
mov
clc
mov
pusha
pop
or
sbb
movsb
jge
sti
movb
adc
dec
jo
sbb
and
xor
or
sub
fimull
mov
mov
dec
insl
cli
mov
enter
jo
sub
shlb
hlt
loopne
push
dec
inc
pushf
shrl
and
pushf
clc
add
shrb
or
mov
add
jecxz
sub
ret
adc
js
mov
or
ja
loope
fdivrl
ja
insl
cmp
insb
push
stos
imul
mov
in
and
ss
pop
or
mov
jo
in
fidivl
sbb
sbb
sbb
and
mov
movsb
sbb
repz
shl
mov
sbb
dec
dec
sarl
subl
xchg
xor
mov
fwait
xor
cwtl
dec
dec
add
dec
or
xor
mov
jg
out
fisubl
push
cltd
cwtl
fistl
daa
iret
jb
mov
mov
movsb
inc
cmp
aaa
scas
and
dec
jo
mov
test
mov
sbb
xchg
addr16
movsb
mov
add
into
lea
pop
mov
das
jno
inc
sub
ret
cmp
scas
mov
cmp
xchg
push
adc
fidivs
jg
sub
cmp
movsb
jl
jle
sarl
cmp
into
cmp
pop
sub
jl
sub
mov
jmp
cmp
lret
mov
and
adc
popf
mov
lcall
push
rcrb
stos
pop
jmp
pop
stos
cmp
int3
aaa
xchg
dec
sar
mov
insb
jp
inc
pop
stos
scas
popa
pop
or
sahf
cmc
imul
add
mov
and
pop
testl
push
cwtl
cmp
fmuls
xchg
pusha
stos
js
gs
and
adc
into
mov
add
outsl
addr16
cmp
inc
adc
mov
mov
fsubrp
inc
xor
cltd
movsl
and
xchg
cs
decl
jno
das
and
sbb
rcr
inc
cmp
aam
out
int3
jb
add
add
add
dec
sub
repnz
cli
popf
jg
pusha
jne
ljmp
inc
xchg
arpl
pop
push
pop
xor
sub
pop
push
xchg
push
in
add
es
mov
mov
sub
xchg
mov
mov
pop
notb
or
outsl
adc
mov
fadd
sbb
or
aam
out
mov
clc
jne
sbb
pushl
scas
dec
dec
or
out
add
movsb
inc
inc
ja
sub
popa
pop
lods
push
mov
fcom
mov
dec
cmp
loopne
push
add
scas
lods
imul
push
in
pop
mov
imul
jno
lds
incl
xor
leave
adc
lds
es
loope
inc
push
enter
pop
sbbb
or
mov
mov
aad
nop
mov
xchg
adc
mov
addr16
sub
sub
imul
mov
pop
cmp
scas
dec
insl
jns
out
movsl
push
xchg
sbb
dec
cs
fstps
into
xor
sub
idiv
ds
lea
aas
cwtl
fcompl
fsubp
jge
cld
cmpsl
inc
outsl
cmc
aas
mov
mov
jnp
jmp
nop
or
ror
sbb
jns
pop
adc
xchg
xor
lds
cmp
sub
loop
test
and
sbb
xchg
xchg
loop
std
mov
out
out
cmp
mov
push
fwait
aaa
std
sub
push
pop
insb
pop
mov
frstor
sub
rcl
into
aad
fiadds
fsubl
jae
mov
out
int
inc
jg
push
mov
xor
out
or
lcall
lret
xchg
shl
or
out
cmp
xlat
arpl
mov
jmp
or
or
cmpsl
xchg
hlt
push
les
push
sahf
adc
mov
mov
or
cmp
sub
or
into
or
or
insb
aaa
subl
leave
adc
push
sub
test
enter
sub
test
outsl
popa
gs
pop
insb
xchg
xchg
mov
mov
je
movsb
clc
push
sbb
jbe
out
xchg
lret
push
in
adc
inc
scas
cmp
xchg
mov
jl
inc
lcall
scas
add
stos
jne
mov
jne
lret
cld
adc
pusha
fcmovnbe
insb
sub
cmp
push
adc
xor
sarb
shl
pop
and
lret
arpl
mov
mov
lcall
add
inc
xchg
mov
aam
sbb
insl
mov
ja
icebp
add
mov
sbb
jecxz
or
mov
icebp
or
push
call
cmp
in
push
jp
vmread
lret
inc
inc
lea
add
imul
xchg
mov
clc
sub
into
arpl
jmp
cmpb
jp
pop
clc
fmuls
adc
xchg
add
mov
test
inc
ret
push
push
mov
and
clc
dec
or
mov
xchg
cmpsb
mov
addb
sub
sub
subl
push
xchg
out
sub
mov
daa
jno
std
xor
mov
shll
pop
adc
xchg
add
inc
inc
add
jae
lods
out
push
imul
pop
testl
stc
mov
mov
lahf
or
jmp
lock
jb
aam
sbb
xor
jp
cli
orb
inc
nop
pop
and
add
pop
sub
sahf
cs
das
sbb
pusha
mov
shrb
lret
in
hlt
pop
lret
outsb
cmp
or
fiaddl
hlt
repnz
cmp
mov
push
data16
in
cmp
push
test
adc
clc
jge
and
arpl
int3
or
pop
js
fistpll
xchg
pop
jae
push
daa
lds
int
out
adcl
mov
insl
fistl
test
jbe
outsb
jb
jge
push
dec
mov
and
inc
sub
mov
mov
out
aad
movsb
lcall
cmpl
js
fsubr
add
and
mov
mov
jle
push
sbb
fldcw
into
adc
push
jbe
inc
dec
mov
mov
adc
out
daa
inc
cwtl
xorb
or
in
cli
inc
imul
addr16
jne
xor
repz
inc
mov
sahf
mov
adc
push
pop
stos
mov
sbb
fwait
out
insw
xlat
lcall
mov
call
dec
cld
or
inc
and
popf
adc
add
sbb
int
ret
mov
push
sub
cld
add
pop
fnstcw
cmp
or
push
dec
out
jge
dec
inc
dec
out
inc
popf
leave
adc
adc
mov
adc
or
test
mov
dec
add
mov
inc
push
sub
cmc
stc
in
jmp
cwtl
jmp
lods
dec
mov
xchg
sub
testb
adc
loopne
jo
jno
nop
jmp
sbb
mov
add
je
rolb
outsl
mov
xlat
mov
sbb
xor
lahf
inc
or
sub
or
cmp
dec
xlat
in
and
mov
jns
adc
ret
iret
out
movb
std
ret
cwtl
decl
and
cmpsb
icebp
add
and
xchg
cli
loopne
pop
jecxz
aas
cli
int3
aam
pop
xor
dec
test
decb
pop
and
mov
and
jmp
mov
imul
scas
dec
mov
or
scas
testl
call
jge
push
adc
lret
jl
fisubl
or
jge
jle
shll
sti
aam
hlt
and
stos
push
insl
pusha
popa
xor
out
push
mov
int3
cli
ret
mov
out
dec
push
cmp
sub
and
dec
aaa
es
in
imul
mov
xor
mov
mov
fdivl
call
cmc
lods
sbb
sub
rol
adcw
incb
pop
push
pop
mov
push
mov
fcoms
rclb
xor
or
bound
mov
inc
and
pushf
loopne
xchg
sbb
sbb
mov
adc
not
mov
pop
loop
fsubl
sarb
inc
xchg
cwtl
sub
ljmp
test
inc
add
jb
lcall
or
adc
push
stc
jg
sarl
out
sbb
jg
clc
adc
fistpl
adc
adcb
out
loope
mov
leave
shrl
out
xor
inc
ljmp
mov
jns
out
pop
sbb
mov
adc
push
mov
dec
pushf
xchg
inc
sub
push
xchg
lods
xchg
popa
aad
cld
std
scas
xchg
enter
dec
push
orb
out
nop
leave
aam
lcall
imul
setg
push
adc
dec
adcl
jge
outsl
cmpsb
or
add
test
mov
and
insl
add
pusha
insl
sbb
or
push
les
clc
push
repz
leave
pop
out
xchg
cmp
cmp
push
and
jp
pop
mov
xor
mov
mov
lods
in
addr16
push
mov
in
test
push
sbb
add
loop
mov
cmp
insl
jns
jbe
ja
pop
sub
pusha
das
sbb
pushl
inc
out
nop
mov
fcmovb
icebp
mov
mov
jp
push
das
add
fmull
mov
push
or
roll
pop
xor
cmpsl
pop
lcall
insl
shrb
jg
mov
iret
subl
fucomp
mov
insb
and
sub
cmp
js
mov
sbb
mov
mov
dec
clc
push
and
jl,pn
push
rolb
dec
pop
mov
rcl
int
mov
inc
inc
jae
aaa
sahf
pop
or
sbbl
test
ljmp
jbe
cmpsb
and
sub
imul
insl
push
enter
test
xchg
lahf
or
daa
and
out
or
push
mov
imul
fcmovbe
jo
mov
scas
cmp
push
inc
popa
or
and
popf
in
mov
push
inc
xor
dec
push
scas
inc
sub
rolb
jge
les
pop
loopne
sub
adc
push
jmp
xchg
inc
int3
test
fs
sti
push
fs
jmp
sti
xchg
and
mov
mov
rolb
mov
cmp
call
mov
xor
push
add
xor
fimuls
ficomps
repz
xlat
roll
cmc
or
jno
mov
dec
loop
test
mov
fs
lret
aad
aam
pushf
pop
rcrb
add
ss
add
mov
cli
xchg
add
hlt
cwtl
dec
mov
out
xor
sub
dec
adc
add
inc
cmp
sti
loop
dec
mov
outsl
sbb
cmpl
mov
pop
imul
out
mov
in
stos
sbb
lock
push
frstor
test
hlt
ret
mov
push
imul
jle
pop
xchg
push
arpl
outsb
xor
pop
clc
dec
popf
mov
ja
data16
mov
jmp
mov
into
mov
sub
psllq
mov
pop
pop
insb
push
cmpsl
out
push
dec
pop
push
inc
loopne
icebp
mov
rorb
in
sub
and
test
xchg
ffreep
inc
mov
call
jp,pt
or
pop
mov
into
xchg
icebp
fnsave
mov
sub
nop
push
sbb
gs
out
cmp
mov
enter
xor
add
repnz
dec
mov
mov
pop
xchg
push
push
stos
pop
in
mov
shrl
sub
sbb
iret
rolb
inc
aad
xchg
ficomps
rorb
and
ss
add
or
out
sahf
jecxz
test
jg
pop
andl
rcr
dec
fisubs
lock
aad
test
sbb
push
dec
movsl
cmpsb
push
movsl
pushf
out
addl
add
or
jge
jp
sahf
xchg
pop
insb
call
movsb
mov
mov
mov
jo
fisttpl
mov
aam
add
test
mov
fldenv
subb
arpl
mov
stos
mov
lret
lods
inc
or
js
test
pushf
jnp
xchg
loope
aad
test
adc
inc
call
call
fdivrs
jns
nop
in
jmp
adc
jns
repz
cwtl
fnsave
jmp
pop
add
inc
shl
and
xchg
jo
mov
dec
mov
out
icebp
mov
mov
scas
dec
xor
sbb
xchg
sbb
imul
adc
inc
fistpll
pop
push
push
sbb
inc
pop
in
add
add
dec
fxch
repnz
gs
pop
push
mov
cmp
or
jne
xchg
aad
fadds
lods
and
iret
sti
mov
pop
mov
or
loop
test
testb
sub
mov
das
es
jbe
dec
mov
imul
popl
fisubrs
sub
dec
out
out
jns
or
imul
mov
cmp
sbb
mov
stos
push
inc
jl
fs
loop
loope
cmp
iret
xchg
mov
test
fs
subb
cmp
jl
xchg
push
add
or
or
daa
aad
push
daa
xlat
xor
mov
xor
jb
divb
inc
cld
jae
in
shrl
fs
inc
idiv
mov
sbb
jae
gs
xor
cmpsb
sarb
sahf
add
xor
test
pop
in
mov
pushf
jl
test
lret
popa
bound
ds
idivl
in
jne
test
enter
adc
int3
xor
sti
xchg
push
mov
mov
xor
imul
pushf
add
popf
jae,pn
loop
inc
pop
xorb
shrb
cmp
sbb
out
roll
inc
cmpb
cmc
dec
mov
loop
pop
arpl
cmp
sub
and
mov
mov
push
xor
ja
ret
fcoms
or
mov
sub
cmp
sbb
cmp
jmp
mov
shll
bound
subb
aaa
push
cmp
lods
sub
mov
scas
xor
pushf
cmpsl
jb
mov
cmpsl
add
push
push
inc
cmp
imul
dec
sbb
out
mov
jmp
scas
jecxz
cmc
xchg
sbb
pop
enter
sbb
mov
jo
cmc
mulb
mov
adc
out
arpl
pop
decb
push
sti
push
xorb
add
in
subl
mov
jge
ret
sbb
adc
bound
jne,pt
lcall
cmp
icebp
lahf
adc
outsb
mov
jo
xor
ja
ret
pushf
pop
inc
in
cmp
mov
pop
xor
repz
dec
push
std
idiv
dec
mov
push
adc
aas
pop
xor
iret
xlat
add
jno
adc
loopne
dec
lock
ret
jmp
inc
int3
stc
idivl
cmp
js
cmc
aad
scas
sub
push
test
mov
aad
mov
inc
xchg
ja
xchg
in
pop
inc
ja
lahf
xchg
insl
aad
or
xchg
push
repnz
mov
pop
in
sti
stos
mov
adc
jecxz
jmp
sub
adc
fld1
add
push
ficoms
loop
adc
sub
mov
call
sbb
jo
movsl
sbb
sahf
pop
ss
in
or
rcl
hlt
lds
ljmp
cs
push
add
and
mov
mov
sub
imul
sub
xchg
mov
data16
dec
add
mov
in
push
test
inc
int
shlb
and
pop
insb
jge
dec
leave
sub
or
xor
cmc
mov
inc
arpl
mov
fildll
mov
arpl
mov
fstp
jge
push
inc
jmp
jp
decb
clc
test
mov
repz
xor
js
ret
enter
xor
into
sub
stc
pop
cmc
mov
jle
sbbb
data16
fstps
repnz
std
insb
pop
jae
test
cmc
rcrb
jo
out
add
or
pop
mov
push
add
fbld
jmp
daa
push
ljmp
rcll
mov
push
push
jle
or
and
ret
rolb
mov
mov
inc
xor
movsb
ret
pop
mov
outsl
movsb
inc
ror
pop
imul
pop
mov
fiaddl
shr
rorl
dec
xchg
icebp
cmp
mov
push
inc
cs
sub
xchg
mov
mov
cmpsl
and
jecxz
jecxz
mov
imul
and
mov
xchg
add
js
je
mov
mov
xchg
popa
les
sarb
pop
mov
mov
pop
aam
mov
sti
cld
mov
push
repz
xor
or
rcll
aaa
push
jecxz
mov
stos
mov
movsl
scas
mov
mov
cmpsl
add
lods
add
inc
pop
jge
and
sbb
idivl
adc
cwtl
add
xor
movsb
adc
repnz
adc
adc
pop
arpl
xor
call
data16
pusha
mov
push
enter
jmp
sbb
or
mov
jg
out
cmpsl
inc
sub
inc
push
xor
int3
push
mov
inc
movsl
mov
dec
jmp
mov
and
adc
aad
daa
cmp
or
cmc
loopne
in
std
pop
rorl
into
pop
cmpsl
push
push
dec
jb
adc
dec
aad
push
lcall
jp
pop
inc
jae
or
mov
push
in
and
push
rcrl
rclb
in
es
jno
lods
sub
lds
mov
jbe
pop
ficoml
inc
test
mov
jmp
mov
jmp
xor
clc
jp
push
cwtl
ret
outsb
xchg
test
and
dec
rorb
dec
inc
ret
add
dec
loope
and
dec
out
lods
jnp
cmpb
mov
sbb
jl
mov
adc
xor
std
je
adc
sub
sbb
xchg
faddl
jae
data16
shl
int
mov
dec
xchg
addr16
xor
or
aas
xchg
add
mov
cmc
lds
xchg
push
add
es
sub
add
sbb
sub
lods
inc
push
or
leave
jg
add
inc
mov
loop
scas
pop
loope
aam
or
insl
or
xchg
jmp
loope
enter
addl
std
dec
ss
adc
xlat
inc
jnp
ror
mulb
and
mov
outsl
pop
fcomps
sub
lcall
insb
pop
jg
xor
pop
mov
xor
xchg
imul
jno
out
mov
lcall
and
sub
or
sbb
mov
out
movaps
arpl
xor
insb
adc
jb
cld
push
jo
pop
daa
jecxz
idivb
xlat
sub
dec
sbb
dec
sbb
in
scas
adc
cmpsb
les
mov
mov
popa
je
out
jae
jno
jp
mov
cltd
scas
dec
and
and
stos
push
dec
cmc
and
fisubrl
inc
bound
insb
pop
mov
xchg
movsl
adc
fbstp
push
in
lds
sbb
daa
mov
or
ljmp
cld
stos
xchg
push
bound
jge
push
test
jbe
test
mov
fidivrs
sbb
sub
push
repz
lret
mov
outsl
jg
add
pop
jnp
cmp
aad
jnp
inc
daa
cwtl
test
fldt
aam
in
test
adc
popa
std
inc
das
lret
inc
xorl
enter
imul
and
into
frstor
loop
call
out
mov
ds
repnz
inc
xchg
ds
inc
std
sbb
dec
insb
mov
pop
adc
mov
in
fcmovu
xor
mov
pop
and
cmc
lea
push
xor
xor
mov
adc
les
inc
pop
and
sbb
mov
testb
ljmp
test
inc
dec
std
mov
les
inc
add
push
xchg
mul
faddl
mov
jno
lret
cli
lret
sub
add
xor
dec
stos
imul
inc
jne
ret
or
test
lds
sbb
int
dec
fdivrl
sahf
sub
nop
inc
nop
jne
sbb
jb
adc
xchg
test
lcall
loopne
cmp
dec
js
push
call
inc
add
mov
jne
dec
xchg
fldcw
inc
adc
xor
in
mov
mov
lcall
sahf
iret
ror
push
and
and
and
lret
int
loope
ljmp
lret
enter
or
inc
stos
leave
outsl
ret
fdivr
addr16
lea
push
mov
xchg
cmp
pop
mov
or
arpl
and
pop
sub
dec
adc
mov
inc
mov
jl
loop
shrb
shlb
jmp
mov
ror
lcall
in
mov
push
out
push
or
stos
push
pop
jge
push
sub
std
hlt
in
lds
imul
push
dec
scas
ficompl
lret
push
xlat
popf
and
xlat
enter
adc
and
push
and
ret
pop
inc
and
shlb
scas
inc
shll
cwtl
mov
daa
sub
inc
fildl
es
add
mov
leave
cmp
lcall
repz
xchg
mov
dec
daa
fucomp
jnp
push
pop
lcall
imul
nop
ja
and
out
mov
pop
jne
dec
jp
js
push
ljmp
pop
repz
add
insb
or
pop
mov
les
jne
jl
lods
les
push
sbb
test
push
jbe
adc
incl
lock
jmp
push
cmp
and
sahf
push
iret
leave
jmp
and
xlat
dec
adc
pop
xchg
neg
popa
mov
test
or
cmp
leave
cli
stos
mov
or
push
or
push
mov
cmp
push
pop
fnstsw
and
lret
or
pop
sub
call
inc
test
int3
dec
ss
or
loope
cmc
jle
loope
xor
and
sti
push
aaa
mov
popa
push
or
push
scas
in
inc
fs
add
cli
and
pop
aam
mov
fwait
or
ljmp
push
outsb
push
sub
out
xchg
add
pusha
push
scas
jl
mov
adc
lret
adc
shrl
out
xchg
cmp
jne
push
imul
aas
les
cmp
aad
gs
push
xchg
sub
jb
cmp
ret
or
push
cltd
out
stos
jbe
nop
fdivs
jp
adc
popa
fwait
push
mov
sbb
mov
or
pop
xchg
pop
adc
inc
mov
cltd
roll
jg
adc
cli
pop
repnz
call
fstps
mov
mov
scas
pop
cmp
add
and
xor
outsb
jne
in
jp
mov
or
inc
dec
lods
movsl
and
or
adc
hlt
cmpb
dec
rcll
movsl
sahf
and
insb
sub
imul
mov
push
cmp
sahf
xchg
or
cwtl
ffreep
shl
sbb
test
or
data16
mov
int
jnp
push
cmp
jl
lods
dec
pop
mov
mov
and
addr16
outsl
or
andl
jl
and
enter
push
clc
xchg
xchg
xchg
inc
push
xor
outsl
jmp
dec
and
add
lahf
xchg
test
mov
test
jbe
js
fidivrl
inc
inc
cld
lahf
sub
hlt
jp
sbb
xchg
jge
and
bnd
fisttps
add
mov
sub
dec
xchg
inc
sub
ss
inc
adc
inc
shll
pop
jb
mov
lahf
xchg
in
popf
cltd
clc
mov
lods
mov
stos
dec
adcl
stos
lods
cmp
dec
addr16
lds
inc
push
push
pushf
sti
cmpsb
xor
shll
xchg
jbe
and
int3
ret
outsl
xchg
jg
nop
dec
sub
stos
loopne
test
push
test
cmp
and
aas
mov
xabort
sbb
or
fimuls
jmp
insb
imul
or
ja
push
mov
jle
cmp
mov
adc
outsb
or
inc
sub
dec
push
mov
fcmovnb
fstps
inc
pop
mov
pop
hlt
pop
pop
and
lret
bound
mov
and
pop
pop
pop
push
inc
inc
int3
das
jmp
leave
lcall
dec
inc
int3
test
mov
adc
mov
sbb
stos
add
cmc
pop
push
sarl
bound
xor
pusha
pop
ret
push
dec
ljmp
imul
mov
dec
lds
cli
mov
mov
addr16
lods
hlt
loopne
arpl
mov
push
js
mov
nopl
cmpsb
les
jbe
outsb
push
mov
aas
mov
mov
out
cmc
jae
stos
sub
add
sbb
and
lahf
data16
dec
add
outsl
add
rol
shrb
mov
push
mov
sub
lock
push
xor
mov
inc
sub
xor
push
push
sti
in
adc
stc
xchg
jmp
xchg
dec
xorb
stc
loop
add
sub
xor
enter
and
in
pop
xchg
orl
sbbl
mov
fucomip
mov
in
fs
in
icebp
rcll
jmp
lahf
jae
xchg
cmp
fldl
rorl
stos
sub
sbb
add
pushl
lods
scas
scas
in
pop
cli
inc
arpl
pop
leave
xor
fcompl
sti
push
jmp
mov
ds
or
add
pusha
aas
cwtl
rcrb
jp
cmp
in
and
fst
inc
push
pushf
orb
int
mov
jge
inc
and
popa
or
fld
jae
mov
insl
pop
cmp
int3
je
mov
in
jge
sbb
gs
test
and
sub
mov
mov
pop
pushf
loop
int3
das
imul
xchg
into
insl
fsubrs
mov
f2xm1
jo
lods
sub
cmp
xchg
jl
jb
push
xchg
xor
jb
add
cmp
pop
pop
mov
mov
ds
jae
int3
popa
mov
lock
lret
dec
sbb
out
sub
lods
sub
jle
shlb
dec
ljmp
xchg
adc
test
fyl2x
imul
xor
xor
aam
stos
cmpsb
sub
fs
ret
aam
fisttpll
pop
sbb
jns
xor
xor
roll
shl
or
dec
mov
xor
popf
mov
mov
adc
daa
jns
add
cmpsl
shr
mov
out
xchg
clc
mov
rol
cmp
insb
call
clc
or
ret
lcall
xlat
scas
in
cltd
fmul
outsl
in
int3
jns
dec
mov
mov
add
aas
hlt
add
lret
lahf
loopne
pop
dec
sub
jecxz
pop
push
pop
cmp
and
dec
sub
push
push
shr
xchg
pop
mov
add
dec
mov
fsubrl
or
jge
xchg
fidivrs
rorl
int3
stos
mov
pushf
mov
clc
xchg
nop
popf
jp
mov
sub
sub
or
mov
ja
pop
jno
jo
ret
lds
pop
int3
and
sub
mov
jmp
sbbl
fnstsw
mov
jmp
stos
dec
lock
call
mov
out
adc
mov
ja
loop
push
mov
movsb
adc
push
roll
lret
fisttpll
jnp
pusha
pop
mov
ss
fdivs
and
mov
jle
xlat
jl
cli
mov
lock
mov
out
mov
clc
aaa
inc
add
mov
add
xor
push
cld
insl
jnp
or
out
jno
adc
cmc
add
pop
por
sub
adc
sub
loopne
bound
cmp
dec
lock
arpl
sti
imull
sbb
rcrb
test
jle
hlt
xchg
push
iret
add
inc
fwait
and
loop
pop
stos
mov
sti
cmp
sub
mov
inc
push
cld
pop
loop
outsb
in
sub
mov
inc
pop
popf
mov
mov
lret
call
xchg
repnz
mov
mov
push
daa
pop
aam
mov
cmp
xchg
es
adc
arpl
test
insb
shll
dec
dec
mov
mov
sti
test
cmp
addr16
iret
data16
jmp
xlat
jns
in
rcrl
push
shll
push
test
dec
das
mov
in
loop
inc
mov
in
mov
or
push
sbb
mov
ret
out
leave
or
push
test
loop
jae
jno
stos
dec
jecxz
add
xchg
add
mov
pop
jg
push
pop
psllq
push
movsl
outsl
std
jg
mov
in
in
in
sbb
into
shll
movsb
add
push
dec
push
sub
sbb
addb
mov
gs
je
sbb
fdivl
mov
lea
dec
mov
test
std
or
and
bound
decb
add
popa
enter
pop
or
rol
inc
and
cmp
lods
push
add
push
insl
mov
mov
mov
out
repz
dec
fildll
das
aas
inc
inc
mov
push
sbb
xor
gs
xlat
fstps
mov
fdivr
dec
scas
add
das
ret
xor
in
sub
jmp
xor
inc
loop
push
fnstsw
push
cltd
cmp
xchg
int
adc
js
sub
jmp
jnp
frstors
inc
push
movsb
nop
arpl
gs
int3
pop
mov
and
repz
adc
add
rcrb
ret
imul
mov
dec
hlt
push
dec
push
nop
sub
cmp
xchg
pop
lods
int
fsubrs
lock
adc
mov
xchg
inc
sbb
pop
cs
adc
or
pop
xchg
or
ss
cld
dec
mov
ror
xor
addl
iret
fcomip
mov
lea
cmpsb
or
stos
xchg
pusha
lods
dec
and
pop
out
jp
int
fwait
jg
and
or
and
fidivs
int
jae
popf
leave
cmp
jmp
leave
dec
jg
push
popl
lds
mov
lods
pop
aaa
in
inc
dec
andb
stc
push
mov
pop
shrl
cli
inc
mov
jno
jp
mov
push
mov
cmp
pop
es
scas
loope
mov
sbb
cld
aam
mov
stos
sbb
scas
negb
fldt
andb
mov
in
test
aad
push
fmul
rcl
sbb
pop
aam
lret
mov
imul
andl
mov
add
xchg
add
push
and
push
inc
shr
pushf
fisubs
adc
loop
dec
jl
imul
mull
stos
stc
sub
inc
mov
pop
mov
xchg
pop
pop
sub
das
dec
orl
push
xchg
jno
adc
and
cmove
call
cmp
adc
cmp
cmpsb
and
decb
cmpsl
je
sub
out
je
nop
inc
lcall
sub
ds
cmp
mov
pop
jl
pushf
out
sbb
dec
int
jns
cld
das
and
and
aam
xchg
cmc
mov
cli
int3
int3
xchg
push
popf
jno
adc
pop
mov
sbb
push
dec
pop
int3
ret
popf
setge
ror
imul
sbb
xor
push
pop
mov
xor
xor
test
mov
or
into
repnz
sub
iret
xchg
and
push
lock
adc
stos
push
and
dec
lock
push
int
in
mov
dec
lods
mov
shrl
ds
push
fcmove
and
cmp
test
icebp
clc
scas
fadd
mov
cmp
dec
mov
add
dec
or
lar
hlt
orb
scas
pop
outsb
loop
mov
xchg
out
jmp
das
lods
dec
mov
dec
mov
leave
ret
jb
cli
pushf
xchg
shl
and
mov
jbe
sbb
xchg
pusha
pop
lods
out
add
mov
outsb
stos
push
repz
jmp
or
test
cmp
mov
scas
fs
sbb
in
sub
int3
pop
pop
sti
lds
jg
inc
mov
test
adc
sbb
adc
jbe
out
xchg
sbb
xchg
cmp
pop
into
mov
insb
insb
jl
pop
loope
mov
mov
mov
cmc
xchg
test
or
les
popf
add
or
ret
mov
push
xor
outsl
pushf
lock
repnz
fwait
xor
adc
gs
cs
cmp
xlat
arpl
in
push
jns
aaa
rcll
ret
and
das
pop
fildll
fstl
add
jecxz
shr
xchg
push
sub
adc
mov
sbb
pop
or
cld
pop
outsb
mov
test
xlat
jae
or
adc
out
jg
push
shlb
stos
dec
mov
mov
insl
push
xchg
mov
adc
xor
push
dec
xchg
mov
cmp
mov
sub
ds
cmp
pop
fwait
jl
data16
mov
pop
repnz
cmpb
lahf
shl
xchg
xor
std
pop
mov
add
nop
gs
cmpsl
fnsave
pushf
outsb
sbb
sbb
inc
mov
mov
cmp
ss
mov
and
ja
add
cmp
xchg
inc
xor
and
fwait
and
lret
cmpsl
dec
popa
xor
add
inc
jge
push
ljmp
out
push
pop
out
sahf
mov
imul
in
testb
push
sub
mov
push
ljmp
xchg
cmp
mov
pop
lods
lret
xor
int3
ret
out
and
dec
std
push
je
xchg
push
adc
cmpsl
fwait
push
inc
add
popa
adc
loopne
pop
rcll
outsb
push
and
cmp
sahf
mov
jle
and
jle
push
sub
cmpsb
push
cmp
xor
pinsrw
inc
mov
in
rcrb
div
pushf
xor
stos
fsubp
cmc
push
repnz
dec
mov
jle
xor
mov
and
pop
mov
dec
andb
xchg
adc
sub
ljmp
add
data16
cwtl
jns
in
pop
add
pop
add
xor
hlt
jg,pn
and
arpl
jecxz
ret
ljmp
sbb
xor
xor
jmp
xchg
cmp
adc
mov
mov
pop
mov
dec
rclb
aas
mov
cwtl
cmc
outsb
mov
ss
mov
and
push
add
mov
inc
mov
bnd
faddl
pop
inc
mov
jmp
sub
push
out
imul
pop
pop
inc
loopne
insl
and
or
xlat
aam
adc
into
push
push
ljmp
pop
int3
cmp
pop
push
ja
fs
push
divl
pop
jl
pop
or
cs
sbb
lahf
scas
mov
jmp
dec
fisubrl
pop
popf
push
jl
mov
push
stc
lret
icebp
cs
jl
push
add
sbb
jnp
adc
hlt
pop
jnp
push
mov
mov
hlt
aam
or
outsl
fdivrp
ljmp
aas
mov
mov
fiaddl
out
out
sub
mov
shll
mov
loopne
lods
cmp
cmp
shlb
int
stos
std
ret
push
jne
inc
cli
imul
adc
pushl
imul
push
jns
pushf
das
cwtl
dec
int
dec
inc
data16
sbb
fists
mov
std
icebp
mov
xorb
lahf
push
mov
pop
cmp
xor
sbb
jno
push
aad
dec
mov
out
add
repz
cmpsl
mov
lret
andl
fistl
xchg
ss
dec
xchg
or
mulb
por
fwait
push
push
paddd
js
jl
lea
or
test
bound
and
xchg
loop
xlat
dec
lret
ret
xor
xor
mov
lods
xor
mov
pop
iret
xlat
icebp
mov
and
mov
rcl
xor
orl
dec
jo
addb
stos
insb
ja
pop
xor
add
lea
testb
jge
jmp
mov
adc
mov
xchg
jmp
push
dec
cs
or
push
aaa
adc
ror
xchg
pop
out
clc
pop
into
cld
sbb
cmpsb
mov
pushf
add
out
inc
shlb
lds
inc
inc
mov
pop
jle
aad
mov
inc
pusha
lret
jecxz
sbb
push
jg
js
pop
xor
inc
dec
lock
cmpb
imul
imul
es
jnp
insb
mov
mov
call
aaa
sub
mov
fs
sub
mov
push
dec
pushf
jo
add
fs
sub
push
mov
cmc
xchg
repz
push
movsb
push
add
push
mov
push
add
jnp
in
cmp
mov
mov
leave
out
out
cli
dec
repz
xchg
adc
ds
hlt
cmp
and
mov
pushf
mov
and
into
jmp
enter
lock
push
mov
or
lcall
sahf
into
or
imul
or
mov
dec
push
je
dec
pusha
sub
push
insl
add
popf
cmc
flds
insb
xchg
icebp
in
and
mov
scas
ret
jns
xchg
fiadds
fs
cwtl
xchg
pushf
shlb
or
add
mov
mov
jmp
and
add
mov
cmp
dec
adc
or
xchg
cmp
call
mov
pop
cmp
in
mov
xchg
cmp
mov
or
jb
jmp
in
in
fcom
xchg
jge
dec
aaa
inc
xchg
pop
out
mov
call
fucomi
sbb
jns
ljmp
leave
movsl
in
outsb
adc
lds
mov
cwtl
mov
out
ret
mov
or
push
xor
push
jae
jae
scas
jp
mov
sbb
fcoms
pop
rcl
cmp
shl
es
mov
xor
scas
sub
sub
cwtl
cwtl
sar
es
cltd
nop
pop
or
scas
sub
fcompl
jge
jle
push
add
hlt
inc
pop
mov
mov
add
xchg
adc
pop
jb
jg
frstor
lahf
dec
scas
outsl
syscall
push
xchg
cli
dec
scas
push
or
in
lds
psrlq
jp
or
mov
stc
or
out
add
sbb
mov
cltd
je
xor
cs
iret
push
cmp
pop
and
lea
mov
repz
ret
sbb
mov
push
int3
dec
add
mov
enter
mulb
stc
pop
lds
js
push
cmovns
rorl
jl
mov
stc
rolb
pushf
in
popl
xchg
repnz
aam
cmp
sbb
and
push
mov
sbb
sbb
iret
and
les
shrl
xchg
xchg
sub
fwait
xchg
mov
cmp
pop
movsb
xchg
and
dec
jecxz
imul
lcall
push
mov
jle
call
aad
xlat
filds
cmc
push
sub
loop
cld
xchg
bnd
leave
mov
push
movl
pop
out
lret
frstor
repnz
arpl
cmp
ds
jne
push
push
push
inc
aam
inc
mov
sub
mov
test
dec
lcall
xchg
rcrl
mov
pop
sbbl
addl
mov
cmc
adc
cs
push
mov
sbb
lret
mov
or
add
test
arpl
sarl
mov
dec
sti
inc
xchg
ret
data16
jnp
push
push
mov
fldl
mov
push
pop
in
mov
mov
jge
scas
bound
jecxz
sbb
mov
mov
fadds
subb
dec
xchg
pop
test
mov
test
lahf
jg
push
jbe
jbe
aaa
and
sbb
mov
mov
cli
cwtl
xchg
rorl
or
fisttpl
aam
mov
xchg
push
cs
je
sar
cwtl
mov
mov
xor
jns
loopne
inc
call
xchg
les
xchg
test
inc
mov
mov
mov
bound
cmpsl
jle
mov
cld
adc
adc
mov
mov
xchg
xlat
clc
xchg
sti
add
xor
in
out
aam
lret
cmpb
ja
jb
push
pop
sti
inc
sub
mov
or
sub
out
das
sub
repnz
aad
nop
cwtl
and
subb
lcall
xor
jle
into
iret
jle
jge
pop
cmp
inc
popa
xchg
push
inc
mov
rolb
and
data16
xchg
xchg
bound
sahf
jge
adc
and
or
cmp
inc
jg
roll
loop
cmpsb
push
add
lcall
jb
pop
subl
call
jg
mov
sti
test
mov
sub
or
sbb
lea
xor
fcom
mov
roll
call
scas
push
xchg
rcrb
rcrl
fwait
sbb
mov
nop
in
movsb
daa
dec
in
dec
mov
cmp
inc
insb
pop
jno
cmc
xchg
cmpsb
ljmp
decl
cmc
mov
rorb
sub
cmpsl
mov
dec
dec
pusha
fst
adc
xchg
mov
adc
inc
outsl
cmp
repnz
in
clc
cmc
in
out
sti
or
sti
test
push
fstpl
bound
jmp
push
daa
daa
sub
dec
push
repz
out
adcl
push
fsubl
jbe
jbe
xchg
cmp
pop
add
lods
cmp
jg
iret
outsl
lahf
mov
lea
int3
dec
mov
pop
mov
mov
repz
pushf
sbb
inc
jl
dec
subl
jbe
xchg
cmp
aas
out
stos
insl
loope
dec
clc
or
mov
shl
imul
mov
inc
pop
arpl
mov
jecxz
push
mov
xor
sub
cmp
jo
xchg
lahf
aas
in
pop
fwait
add
fcoml
mov
sub
lds
js
aaa
insl
je
mov
aam
negb
sub
mov
mov
add
aad
jbe
pop
pop
sub
or
sar
cmp
or
sub
repnz
and
push
sub
or
test
jb
repnz
xchg
sub
mov
rclb
jl
insl
xor
mov
in
add
lods
jne
inc
or
and
add
xorw
push
pop
pop
sub
negl
adc
aas
pop
repnz
jns
or
test
loopne
dec
enter
test
imul
test
in
out
add
mov
inc
xor
push
push
imulb
xor
neg
dec
sub
cmp
shll
pop
adc
rcrl
sti
je
cmpsb
dec
add
pop
mov
sub
push
aam
leave
jle
mov
pop
inc
insb
rcl
jmp
mov
je
jg
sub
lret
rcrl
sub
xchg
xor
mov
xlat
mov
or
push
pop
lock
outsb
insl
xchg
xor
sbb
or
adc
xchg
imul
in
adc
in
ficomps
inc
jno
js
mov
sahf
adc
dec
mov
cmc
adc
jo
out
pop
fisubrs
int3
dec
lea
sbb
test
xor
negl
das
mov
cld
sbbl
rorl
pop
adcl
or
imul
in
dec
fstps
dec
dec
push
xor
gs
aad
in
inc
sub
and
cmp
mov
sub
imul
into
push
int
movsb
xor
jb
int
scas
lcall
scas
push
call
add
leave
sbb
and
mov
ret
out
repnz
push
repz
adc
test
in
xchg
lods
aad
std
movsl
push
xchg
cmp
and
jnp
pop
in
inc
shll
push
mov
sub
lods
cs
insl
push
iret
cmovs
int
xor
jns
insb
outsl
cs
sbb
push
fwait
push
add
jnp
iret
inc
mov
jae
sbb
fidivrs
mov
pop
ljmp
inc
push
test
cmp
lcall
jo
and
jae
push
aaa
mov
out
test
inc
jmp
xchg
fsts
sbb
icebp
push
jbe
addr16
lret
cmpsl
pop
inc
xchg
gs
out
dec
pop
adc
xor
mov
xor
movsl
mov
pop
mov
fiadds
mov
push
test
xchg
lods
stos
or
inc
or
jl
in
mov
rclb
add
xsave
call
loopne
fstpl
int3
cmp
add
mov
cli
cmp
addr16
mov
dec
fwait
test
in
cmp
mov
mov
adc
push
jle
outsb
es
dec
test
fwait
add
outsl
js
adc
mov
fadds
insb
sbb
xchg
sub
mov
mov
sub
jp
add
xchg
dec
std
in
and
in
in
scas
leave
mov
jne
mov
mov
rep
les
movsl
mov
pushf
pop
int
ljmp
dec
xor
dec
dec
movsb
insb
dec
outsl
sbb
sbb
mov
mov
scas
inc
jle
add
popa
jl
xchg
fcomp
lret
movb
out
call
or
sbb
lods
fiadds
mov
cmp
test
lcall
shlb
mov
cmp
cmp
dec
icebp
in
or
test
insb
or
nop
adc
xor
sbb
shlb
fs
data16
cmp
push
repz
pop
jno
pop
add
mov
loope
arpl
or
sbb
mov
std
in
fists
outsb
xchg
cmp
push
and
inc
rcr
das
insb
sbb
add
bound
mov
xlat
aad
and
test
test
scas
or
lods
out
mov
mov
xchg
repnz
sti
push
push
int
dec
pop
cli
jbe
jnp
jo
std
call
jne
push
mov
push
jo
cmp
inc
pop
aad
mov
repnz
sub
out
mulb
jb
loop
sbb
jle
jmp
inc
jmp
cmpl
jo
adc
out
sbb
xlat
cmp
mov
iret
gs
in
inc
aas
sub
cmp
pop
lds
push
pop
cmp
xor
es
aad
xchg
xchg
bswap
jmp
xchg
iret
cmp
stos
std
imul
xchg
sub
mov
xor
and
jbe
jbe
leave
xchg
dec
int
mov
add
mov
iret
push
dec
stc
iret
sub
je
inc
pop
xchg
sar
clc
add
fidivrs
jg
or
xor
fildl
lock
nop
pop
sti
dec
iret
enter
jge
iret
stos
xchg
movsl
out
sub
cmp
pop
lods
les
scas
stos
ss
mov
xchg
mov
test
sub
pop
or
sbb
das
cltd
xor
mov
xor
aaa
pushf
mov
cmpsl
add
or
mov
jae
and
lret
xchg
in
test
pop
lret
adc
mov
cmpb
jp
mov
inc
xchg
adc
hlt
sub
mov
test
mov
testb
xchg
aas
dec
incb
imul
sbb
push
mov
lahf
aad
pusha
in
mov
xor
mov
cld
in
jns
outsb
cmpsl
fwait
inc
leave
and
jge
adc
fcoms
inc
xor
lret
mov
scas
add
iret
popf
shlb
outsb
hlt
cmpsb
scas
xor
push
xchg
scas
and
mov
fimuls
mov
jnp
mov
pusha
fadds
inc
hlt
fisubrs
int
or
and
sub
inc
mov
pop
inc
mov
mov
jnp
ds
cwtl
cmp
push
lock
cld
xchg
repz
mov
jl
repnz
jno
cmp
pop
push
fistpll
or
pop
mov
fiadds
sub
jno
dec
sti
cmp
cmp
xor
jnp
dec
push
fstl
movsb
mov
inc
dec
or
sti
cmc
xchg
pop
add
popf
sbb
repnz
pusha
lahf
shlb
dec
push
sub
popa
jge
pop
mov
lock
lahf
and
or
dec
inc
cld
stos
sti
cmp
mov
lahf
popf
add
fs
pop
std
xor
and
jp
outsl
mov
mov
add
push
dec
sub
jae
mov
cmp
leave
ficoms
sbb
jne
outsb
sbb
ja
sbb
mov
cmp
add
adc
icebp
add
pop
orl
iret
icebp
ds
add
nop
jbe
outsl
shll
arpl
gs
je
aad
cmp
or
push
popf
add
stc
cmp
xchg
push
pop
mov
cmpsl
inc
mov
push
aam
mov
inc
loop
jbe
cmp
sbb
mov
mov
mov
cwtl
or
out
xlat
adc
lods
dec
sbb
shlb
aaa
cmpsl
jmp
xor
mov
mov
out
mov
add
or
fwait
loope
add
xor
ret
mov
fcom
mov
sbb
lock
insl
ror
sbb
mov
jbe
jns
adc
pop
and
xlat
push
and
push
nop
and
stos
cld
sti
adc
jle
push
jmp
sub
mov
pop
jl
cmp
shll
daa
add
loopne
inc
arpl
mov
push
inc
cs
rcll
push
mov
stos
dec
scas
lcall
push
cmp
or
divl
adc
outsb
hlt
or
or
sbb
add
jne
lahf
jg
adc
mul
outsb
jp
cmpsl
fcmovnb
stc
fwait
add
fbstp
mov
enter
mov
je
lahf
pop
lds
mov
imul
negl
pop
cltd
cmc
xchg
xchg
push
add
adc
dec
lret
cmpsb
nop
add
pop
add
or
mov
xor
add
fwait
mov
adc
pop
push
mov
mov
out
mov
add
int
lret
dec
cmp
repz
fsubl
or
pop
cltd
mov
sbb
jbe
call
and
push
int
push
repz
imul
cmpsb
dec
add
xchg
sbb
xor
leave
insb
dec
mov
pop
dec
pop
adc
into
pop
stos
outsb
ss
clc
ljmp
imul
bound
add
cmc
xchg
fistpl
lods
mov
cwtl
lds
push
or
fildl
stos
repz
mov
cmp
dec
lods
ds
add
mov
cli
inc
jecxz
dec
arpl
add
out
pop
fadds
xor
movsl
bound
jnp
testw
xchg
loopne
test
adc
and
sbb
dec
in
pop
fidivrl
mov
nop
pop
cmpsb
xorb
lahf
imul
lods
ds
xor
ret
jecxz
sub
cmp
adc
pop
loopne
add
aad
ds
in
xor
mov
mov
ss
mov
orl
imul
or
stos
jbe
sbb
ja
inc
icebp
cmp
pop
and
inc
cmp
iret
std
pop
shl
aad
pop
mov
sti
dec
mov
jo
lds
in
les
adc
fisttpl
enter
and
jo
pop
insb
out
bound
jno
mov
or
loope
xor
lahf
ja
xor
hlt
cmp
jae
push
jbe
jbe
fcomps
push
pop
push
insl
or
sub
fcomi
outsl
test
es
mov
push
jp
aad
fs
das
or
xchg
xchg
dec
out
cmp
out
ret
inc
add
pop
je
sub
mov
loopne
cld
scas
dec
cmp
movsb
cld
out
mov
mov
lcall
mov
mull
push
and
mov
inc
iret
add
mull
lea
scas
pop
cmp
adc
test
dec
dec
xor
mov
popf
in
xlat
iret
inc
xor
xchg
push
jp
push
popf
test
or
iret
jmp
mov
add
jge
cmp
aaa
stos
aas
outsb
loop
jbe
xchg
addps
cmp
mov
xor
call
jo
fdiv
cli
inc
fldcw
sbb
pop
adc
jne
mov
lret
jae
add
push
pop
out
out
mov
adc
es
add
dec
and
enter
out
jle
push
lret
imul
mov
fwait
adc
inc
add
cmp
pop
cmp
fld
maxps
xchg
inc
mov
mov
nop
aas
push
andb
mov
dec
or
inc
push
mov
add
inc
push
inc
add
and
or
sbb
aaa
leave
mov
inc
pusha
hlt
pop
lods
mov
jae
popf
xchg
dec
push
xchg
dec
aad
test
sar
and
rclb
scas
inc
imul
in
push
jae
cld
test
cmp
arpl
dec
pop
pop
in
out
push
insb
xchg
rclb
push
sahf
mov
adc
ss
movsb
leave
loop
add
xor
neg
sarl
push
xor
int3
and
add
ljmp
dec
push
mov
rorb
arpl
cmp
cmp
test
or
sarl
loopne
or
adc
sbb
test
jge
push
cli
pop
and
inc
loopne
cmp
mov
inc
js
xchg
xor
cmpsl
rorl
sbb
fstp
pusha
adc
das
lret
fisttpll
out
xor
aas
sub
mov
push
inc
ja
sbb
aam
cmc
xor
dec
int3
sub
jns
dec
js
jge
testl
jbe
push
movsl
hlt
push
and
lock
jmp
dec
gs
inc
mov
xor
xchg
shrb
mov
sti
and
sub
insb
xlat
fadds
cmp
xchg
add
cmpsl
emms
lds
leave
pop
mov
out
fsubs
or
mov
adc
clc
rcll
ljmp
int
daa
dec
push
leave
lret
xlat
sub
mov
fdivrl
pushf
jnp
jge
sub
xchg
stc
cmc
loop
push
insl
inc
out
outsb
decl
xor
rcpps
aaa
movsb
mov
cmpsl
fs
xchg
cli
pop
sub
test
pop
cmp
testl
push
jmp
pop
out
xchg
bound
sub
pop
aaa
add
addr16
js
mov
lahf
xorl
jno
jo
xchg
mov
lds
xor
out
push
and
mov
pop
hlt
vpmacsdd
in
movsl
sub
dec
push
xchg
or
sahf
inc
push
or
ss
push
inc
jmp
add
call
dec
int
cld
xchg
movsl
inc
mov
push
inc
jns
jmp
into
jle
insl
leave
cmp
jb
nop
jns
or
mov
dec
ds
xchg
js
pusha
or
xchg
dec
cs
fwait
lret
cmpl
and
mov
and
lret
daa
dec
push
adcb
dec
mov
xor
jle
movsl
fs
sbb
in
lcall
sub
int
add
icebp
push
inc
jmp
push
inc
shrb
push
xchg
mov
mov
jmp
in
push
stc
xor
inc
push
popa
jno
push
or
mov
cmp
sbb
jle
gs
mov
cmp
mov
daa
mov
sub
int
xchg
cwtl
das
pop
sub
inc
shll
pop
mov
insb
es
jmp
cltd
inc
mov
popf
dec
mov
dec
dec
jle
fimull
and
push
mov
or
popf
sub
pop
test
into
leave
fimuls
pop
aam
adc
pop
pop
push
faddl
xorl
mov
add
ja
jmp
bnd
pop
in
adc
dec
mov
orb
rolb
in
push
xlat
push
inc
pop
in
jne
xchg
cmp
mov
or
adc
jg
and
and
shr
out
movsb
cmp
cwtl
and
mov
cmp
mov
gs
gs
mov
mov
inc
dec
xor
mov
outsb
jnp
mov
xlat
xchg
andb
ret
iret
jns
std
fstpt
push
outsb
mov
xor
inc
push
or
fs
loopne
in
dec
pop
out
nop
or
dec
subl
movsb
jbe
dec
and
sub
notb
orl
pop
mov
pop
icebp
push
int
add
mov
xlat
clc
pop
fisubrs
adc
and
cld
mov
fucomi
lcall
pop
push
xchg
clc
arpl
push
jmp
arpl
and
dec
pop
addr16
lock
in
stos
mov
sti
xor
loop
pop
jmp
jg
mov
cli
lods
push
movsb
andb
cmp
add
fs
or
subl
iret
ja
sub
inc
popa
stos
or
or
addr16
sub
pushf
leave
popf
nop
push
mov
mov
sbb
jl
xor
jbe
stos
push
mov
and
out
cmp
jp
mov
pop
mov
call
pop
push
add
dec
xor
dec
shrb
push
push
and
fsubl
add
push
aam
mov
adc
xor
push
xchg
int
popf
pop
pop
add
int3
inc
xchg
mov
pop
fsts
sahf
adc
aam
popa
pushl
inc
or
inc
out
pop
out
inc
mov
sbb
xorb
pusha
inc
and
adc
enter
sti
sti
ljmp
adc
mov
es
mov
and
sub
push
repnz
or
loopne
ficompl
pop
push
jge
test
jp
pop
pop
in
inc
push
cld
aad
sub
and
test
push
adcb
adc
xor
cmp
mov
arpl
fnsave
adc
xchg
jbe
loope
jbe
test
mov
out
mov
sti
loop
push
loop
in
ja
pop
lods
into
jno
and
dec
cmc
push
xchg
dec
add
shrb
mov
decb
ss
pop
fs
pop
mov
add
dec
lods
repnz
and
cmp
cmp
ss
sbb
sahf
mov
push
test
lcall
mov
push
mov
mov
lock
mov
and
jne
shrb
inc
lods
mov
mov
xor
mov
mov
push
xchg
cmp
pop
aaa
daa
push
jmp
xchg
adc
xor
sub
int3
sahf
jge
loop
fisttpl
std
add
iret
arpl
fwait
jno
pop
cmp
stos
test
xchg
leave
or
cmpl
sbb
sub
mov
add
into
repz
test
xor
sbb
adc
aam
js
mov
jmp
mov
aam
in
scas
or
js
mov
pop
and
adc
cs
cmpsl
outsl
mov
jne
inc
es
jae
popw
mov
movsb
xor
xor
repz
sbb
mov
sahf
mov
mov
pop
jns
pop
aas
jp
add
aad
or
jp
xchg
ret
pushf
adc
jg
jmp
gs
lahf
ja
jbe
mov
lea
add
adc
inc
roll
pop
adc
push
das
scas
lret
loopne
xchg
in
xor
push
lcall
rol
movsl
push
imul
mov
jno
jbe
inc
int3
out
jae
popf
cmpsb
iret
ds
mov
rorb
and
inc
call
cmp
jbe
js
push
aas
ficoml
xchg
subl
iret
out
cmp
out
iret
into
adc
insb
sub
and
in
mov
mov
and
adc
out
fidivrl
bnd
fcoms
adc
lret
rclb
or
add
pop
test
sub
mov
pop
iret
aas
aam
ljmp
inc
in
nop
cmpsl
sbb
push
push
cmpb
jne
adc
outsb
out
incl
test
cwtl
cmpsl
mov
out
stc
xchg
insb
or
repz
arpl
push
cmpsl
fiaddl
dec
fcoml
inc
lods
movsb
test
xorb
adc
xlat
pop
out
es
mov
daa
iretw
mov
pop
daa
loope
imul
push
lret
push
push
dec
gs
xchg
movsb
mulb
push
ljmp
mov
imul
push
xor
test
jb
mov
and
add
push
push
ljmp
daa
in
pushf
jge
push
xchg
inc
fistl
and
jp
jo
xchg
sub
jns
mov
aad
mull
and
out
or
sbb
in
push
aas
mov
icebp
cmp
mov
or
sub
push
sub
std
mov
pop
add
jge
push
jo
sti
xchg
les
jne
aad
sub
xlat
push
xorl
insl
xchg
push
cmpb
test
push
adc
data16
popa
imulb
lock
jb
xchg
loopne
flds
lret
rclb
scas
mov
in
ret
jbe
mov
jae
adc
sti
or
mov
cmp
adc
test
cmp
imul
push
out
arpl
cmp
loopne
ss
into
push
dec
or
xor
xor
sub
inc
xchg
cmp
insl
cmp
rolb
hlt
sarl
mov
cmpsl
mov
inc
popf
andl
test
rcr
mov
out
iret
jae
movsb
in
jg
enter
lods
mov
inc
sub
fs
aam
jbe
stos
lahf
test
mov
dec
movsb
xchg
add
cmp
sbb
dec
sbb
pop
lock
jg
fsubrs
sbb
aaa
fsts
pop
inc
add
test
xor
and
inc
pop
add
xchg
aad
imul
sub
js
andl
push
shr
aaa
stos
out
imul
repz
add
int3
and
jg
xlat
fcomps
add
lcall
loope
in
xchg
ret
popa
ret
and
inc
cmp
jge
cmp
in
stos
das
push
add
ljmp
daa
mov
mov
pop
or
das
mov
push
scas
lea
inc
sbb
cmp
mov
cmp
ljmp
outsl
int3
cmp
dec
sbb
popf
enter
mov
xchg
outsb
cmp
pop
in
loopne
arpl
sbb
ljmp
dec
mov
inc
add
inc
pushf
xchg
mov
stos
push
pop
pop
lods
pop
inc
sbb
gs
push
push
adc
and
int
jge
mov
sahf
fwait
popf
mov
shll
mov
jmp
pushf
sbb
fcmove
push
in
outsb
sbbl
insl
push
cli
lock
in
arpl
cli
fmulp
inc
add
in
outsb
push
push
rorb
and
loop
jecxz
in
push
jb
pushf
pop
mov
mov
sub
ds
gs
xor
add
sbb
scas
cmp
sub
push
mov
sbb
sbbb
shlb
jecxz
pop
nop
fdivl
dec
loope
cli
cmp
shrb
adc
add
lret
xor
sub
sbb
testb
inc
cmp
xor
mov
cmp
fstpl
iret
xor
shlb
jecxz
dec
sbb
aas
push
lock
popl
insl
dec
ds
imul
jnp
inc
push
sbb
fld
popf
pop
cmp
mov
bound
push
cltd
std
enter
jecxz
mov
loop
jecxz
add
pop
push
pop
inc
adcl
loope
push
cli
aaa
test
jne
or
repz
in
test
ds
mov
loop
in
mov
popa
in
cmp
mov
add
inc
into
cmp
pop
jle
or
rolb
mov
sbb
xchg
data16
inc
cmpsb
cmp
cltd
mov
push
mov
and
fiaddl
sub
sahf
inc
sub
scas
xchg
fidivrl
jbe
mov
xchg
stos
sub
push
ficoms
sub
pushf
data16
fcoml
test
xchg
jb
mov
mov
in
dec
andl
push
dec
mov
je
in
scas
add
xchg
mov
push
pop
test
pop
lret
jg
adc
adc
cmp
in
stos
pushf
scas
and
add
test
mov
dec
xor
in
fwait
sub
lock
mov
mov
pop
pop
mov
mov
xor
mov
decl
out
sub
sub
dec
mov
lret
xchg
xor
jecxz
test
je
pop
or
mov
push
aam
push
mov
cs
jp
mov
mov
jno
gs
into
cmp
jne
std
jl
jb
sbbl
shrb
jp
das
mov
pop
lret
fwait
sub
int
add
movsb
outsl
lret
xchg
mov
or
outsb
jmp
sbb
imul
mov
cwtl
outsb
sbb
aas
out
pushf
inc
pop
inc
or
in
scas
xchg
je
mov
pop
pop
test
ljmp
ljmp
mov
sti
ja
and
data16
es
lcall
shr
cltd
and
orb
cmp
stos
pop
daa
inc
sub
push
cmp
imul
push
mov
mov
sub
xor
mov
movsl
std
xor
inc
add
sub
in
pop
add
loopne
xor
sub
mov
xchg
iret
push
jns
aam
imul
pusha
sbb
leave
push
out
mov
add
cmp
mov
sbb
cmc
sti
mov
mov
out
aas
fildl
lods
mov
in
pop
in
cltd
sub
jg
into
es
fcoms
fcompl
fwait
push
inc
push
test
adc
nop
sbb
sti
ljmp
shrb
cmp
push
jne
inc
mov
std
imulb
jb
push
cld
insl
rorl
jnp
mov
inc
gs
mov
aas
push
mov
lods
pop
pop
and
shll
xchg
int
addr16
xchg
adc
push
push
test
or
inc
outsl
jg
cld
xor
scas
dec
aad
add
das
inc
jg
fisttps
test
sub
rol
pushf
sbb
les
scas
and
sbb
push
nop
int3
repz
fnstenv
fnstenv
mov
push
imul
hlt
mulb
push
into
int
fstpt
int
imul
sbb
cltd
mov
loopne
add
push
sarb
and
sti
js
pop
test
xchg
add
or
cmpsl
jno
push
adc
ja
je
rorl
cwtl
in
push
xchg
outsb
lods
jp
std
jne
popa
inc
jnp
dec
je
xchg
sub
stos
adc
push
std
push
aam
or
add
push
cmp
leave
cmpsl
mov
and
pop
pop
fstl
subl
loopne
xchg
add
sub
mov
and
sarl
push
loope
pop
xor
push
dec
loope
jmp
ljmp
and
stos
xchg
dec
imul
inc
mov
xchg
cltd
mov
or
pop
xor
imul
sub
xor
add
sbb
test
mov
jp
adc
pop
add
gs
jp
inc
call
pop
add
mov
aas
cmp
push
je
inc
jge
aaa
fisttps
jmp
pop
jmp
xchg
xchg
nopl
mov
or
cmpsb
mov
sbb
sarl
push
adc
aaa
lods
ret
aam
jbe
mov
pop
cmp
cmp
pop
icebp
lret
mov
add
imul
push
fiadds
icebp
jnp
loope
sarl
test
repnz
pop
pop
dec
into
push
xchg
fwait
cmp
mov
out
lret
popf
into
in
rorl
leave
movsb
jne
aaa
adc
fmuls
xor
imul
cmp
cmc
ror
adc
push
sub
push
fdiv
or
fidivs
fcoms
sub
cmpsl
sub
in
add
imul
push
cmp
clc
je
mov
push
cltd
pop
divb
push
lock
lock
pop
jb
fistps
addr16
dec
pop
mov
dec
cmc
call
push
push
jbe
and
inc
and
pop
and
rorb
xor
xchg
sub
mov
js
xchg
mov
test
lahf
enter
ret
add
jns
or
adc
jle
mov
ja
movsb
mov
inc
pop
xor
hlt
lahf
jne
mov
sub
fwait
aam
sarb
cmp
rorl
pop
outsb
xor
xchg
out
adc
jecxz
inc
xor
into
pop
jp
out
jb
xchg
movsb
add
lds
jb
sbb
sbb
push
jb
mov
jl
adc
inc
jae
xchg
movsl
jbe
fs
cs
mov
fwait
lahf
dec
js
pop
adc
shlb
adcb
sbb
ss
cmpsl
mov
push
jge
in
jb
mov
je
rol
call
cli
sub
and
push
lret
prefetch
or
pop
or
jne
push
xchg
inc
mov
push
movsl
and
mov
mov
std
inc
pop
dec
jg
sub
jae
mov
arpl
fidivrs
jmp
negb
scas
xchg
andl
inc
stos
adcl
fsubrp
xchg
or
inc
xor
add
in
add
insl
iret
daa
jle
cmp
pop
fwait
test
imul
mov
test
inc
sbb
movsl
sub
outsb
adc
mov
subl
outsl
mov
jmp
add
xchg
ljmp
add
cmpsb
inc
dec
fisttpll
xor
and
jmp
adc
cs
aaa
loopne
jnp
cmpsl
stos
xchg
and
mov
push
lds
and
push
pop
adc
and
cmp
xor
mov
addr16
jo
js
xor
aad
jecxz
cmp
push
jae
xchg
scas
push
add
or
push
add
scas
fs
xchg
jne
and
push
jl
dec
loope
xlat
mov
and
out
mov
mov
fwait
xchg
jne
aam
jl
lods
and
xchg
push
xchg
imulb
dec
add
loopne
icebp
jecxz
imul
fs
pop
gs
and
push
sbb
pushf
pop
negl
movsl
test
mov
cltd
fimuls
dec
int
call
adc
into
rcrb
inc
mov
mov
test
or
mov
ret
add
cli
insl
pop
mov
lods
dec
and
es
pop
mov
and
cli
adc
loopne
mov
pusha
cwtl
adc
add
mov
push
dec
or
ss
mov
cwtl
push
mov
push
xor
pop
hlt
arpl
ja
test
jle
enter
dec
mov
insl
rcrb
std
gs
jmp
aaa
loope
int
lds
mov
decb
jns
push
inc
into
jle
lret
dec
mov
dec
inc
lret
dec
lds
or
ret
xlat
jns
jl
adc
sarb
fwait
dec
pop
in
push
sub
cmc
inc
cmpsl
std
jp
fwait
test
std
xor
call
filds
lret
ljmp
mov
cs
xor
push
xor
pushf
and
and
ret
xor
xor
cli
inc
ds
mov
sbb
jb
xchg
pop
sbb
cmp
jae
aad
push
mov
out
mov
int
sbb
roll
dec
mov
sbb
popa
arpl
xchg
jg
push
test
and
or
jae
mov
push
adc
jns
sbb
in
push
pop
or
jecxz
adc
pop
inc
dec
or
gs
icebp
cmp
jecxz
popa
mov
ret
repz
adc
adc
or
sub
mov
loope
imul
mov
cmp
test
out
ss
mov
jno
add
mov
loopne
rol
sub
lcall
inc
xchg
xchg
mov
sbb
pop
xchg
orl
dec
mov
mov
lods
pusha
cmp
mov
or
jle
and
add
gs
stos
clc
fidivl
outsb
or
loopne
inc
test
adc
testl
push
cmc
dec
xchg
rcl
scas
dec
mov
subl
add
stc
or
sbb
push
movsl
jo
fwait
sub
scas
xor
arpl
xor
cmp
cs
rol
jge
fcoms
xor
xor
mov
addr16
int3
xor
xor
xor
in
fimuls
loopne
enter
fisubs
sbb
sub
es
xchg
push
es
inc
test
sub
inc
add
sub
xchg
mov
and
mov
scas
mov
or
stc
cld
push
popf
mov
jne
or
xchg
outsl
shrl
push
lcall
jnp
add
aaa
in
fs
mov
add
aam
cmp
pop
and
xor
jp
fisubrl
inc
and
or
sub
push
xchg
lds
lods
into
movsb
sub
enter
jge
adc
rcll
cli
jo
sub
inc
pop
sbb
mov
mov
in
in
lcall
push
xor
mov
mov
popa
mov
xor
aam
xor
and
jno
lcall
xchg
pushf
pop
lahf
dec
xor
jno
repz
cmpsb
mov
int3
xor
out
dec
rcll
dec
pop
ds
xchg
sub
sbb
ljmp
jno
push
shrl
test
aaa
cmpsb
loop
push
je
int3
add
push
push
jbe
cmp
cld
jno
icebp
cmp
ss
xchg
jae
mov
mov
mov
les
dec
and
sbb
lcall
xchg
mov
dec
push
pushf
fcomp
scas
inc
push
repnz
stos
add
mov
cld
xor
and
test
orb
mov
sbb
aaa
lock
clc
mov
jbe
push
adc
mov
cmp
mov
addb
xor
add
xchg
xor
or
mov
fsubs
xchg
mov
push
or
adcb
xor
dec
aad
inc
imul
jb
mov
cmp
mov
dec
jo
xchg
jle
fsts
insb
jge
daa
loopne
mov
sub
mov
out
loope
xchg
inc
mov
pop
push
sub
add
loope
je
mov
inc
in
idiv
push
out
hlt
xor
leave
das
mov
mov
xlat
pop
sub
out
jbe
shll
mov
lods
pusha
and
sub
call
outsl
sub
xchg
cmp
in
cmc
push
sub
lret
movsl
mov
popl
dec
movsl
mov
aaa
cmp
sbb
mov
and
movsb
xlat
mov
xor
dec
dec
pop
and
test
ret
cmp
stmxcsr
stos
dec
leave
sub
fisubrl
sahf
mov
add
data16
mov
adc
lods
popf
cld
negl
mov
add
pop
xchg
xchg
ja
push
mov
insb
or
sub
jmp
les
adc
pop
pop
mov
xor
das
cmpl
test
pop
pop
jp
sbb
mov
sti
and
ss
push
fdivr
je
aad
out
shl
jb
fbstp
mov
sbb
leave
pop
pop
sbb
aaa
loopne
inc
movsb
lcall
add
and
sub
daa
leave
pusha
leave
xor
insl
outsb
xchg
ret
jb
hlt
xor
or
jbe
mov
adc
popf
lods
lods
cli
xchg
dec
fidivl
mov
insl
stos
xor
mov
faddl
inc
mov
cmpsb
push
aas
adc
jb
xchg
cmp
push
jp
or
pop
mov
gs
xchg
xchg
rol
sub
pop
inc
push
rcl
nop
cmp
mov
cmp
cli
cli
cmovl
mov
push
xchg
negl
cltd
add
out
pop
jg
sbb
in
mov
sub
sbb
pop
int3
pop
or
dec
ja
vpmacssdd
add
out
lock
mov
leave
fwait
push
repnz
xor
and
mov
push
test
pushf
push
imul
pop
jg
or
pop
and
out
lea
mov
adc
jns
movsl
test
push
inc
jae
insl
gs
add
sub
pop
ds
icebp
push
inc
mov
in
nop
cs
rolb
js
in
lahf
or
jmp
les
sbb
psubsw
push
adc
jecxz
xor
xchg
rcrb
outsl
jmp
or
inc
mov
sbb
push
jecxz
and
adcl
shrb
mov
mov
or
or
xor
pop
dec
cmp
dec
mov
test
or
mov
fs
insl
mov
imul
sub
movsb
lret
fnsave
mov
add
xor
stos
mov
cmp
xchg
mov
mov
in
adc
rclb
scas
push
inc
iret
cmpsb
fimull
jl
and
cmpsl
les
arpl
jle
aas
sbb
cmovle
jp
push
js
out
push
sti
test
and
xchg
repnz
cld
test
int
push
testl
imul
xchg
or
adc
fwait
inc
and
sub
mov
insb
lcall
shll
xor
push
pop
jno
std
or
jne
sbb
and
outsl
mov
lds
sub
or
xchg
push
test
adc
inc
in
sbb
into
cld
xor
fdivrs
jno
add
icebp
push
mulb
gs
add
dec
test
add
shlb
dec
scas
subb
scas
out
xchg
aam
imul
mov
add
add
cld
imul
mov
test
fisubs
testb
adc
sti
setge
push
or
adc
pop
nop
scas
mov
inc
cmpb
mov
pop
ljmp
pop
mov
mov
jns
test
clc
xor
int
adc
cmpsl
adc
xchg
cmp
mov
aam
cmp
into
out
pop
dec
rorb
lret
aaa
adc
cmp
dec
das
sub
cwtl
out
jle
xchg
enter
test
mov
test
scas
cmp
pop
lahf
fcomip
fdivrs
outsl
adc
inc
test
mov
jge
jmp
js
mov
xlat
inc
filds
pop
adc
es
or
lret
clc
inc
xchg
xchg
mov
mov
bound
jg
pusha
sbb
std
imul
sbb
jno
pop
ds
cmp
rcl
add
inc
out
fnstsw
pop
jecxz
mov
fs
add
ds
aaa
int3
shlb
fs
leave
dec
aas
outsl
in
mov
fptan
pusha
jbe
and
xor
add
cmp
or
aad
add
pop
sub
adc
aaa
jno
xor
outsb
jl
mov
xchg
repnz
xchg
les
rcrl
inc
int3
push
lcall
sub
mov
ret
stos
mov
shrl
add
push
and
add
addr16
rcrb
in
pop
jae
sbb
scas
fcompl
xchg
add
scas
add
fbstp
mov
pop
cmp
xlat
dec
add
adc
push
es
or
daa
rcrb
std
lock
fiaddl
cwtl
or
cwtl
jne
mov
mov
scas
pop
mov
xchg
xchg
xor
rcll
fadds
push
jno
sti
arpl
imul
xor
mov
arpl
gs
addb
or
cmpsl
fcompl
fcos
cmp
xlat
andl
bound
shrl
sahf
ljmp
scas
scas
add
stos
mov
leave
mov
shrb
jl
ret
cli
mov
lret
notb
adc
cmp
mov
aaa
fwait
sbb
clc
sar
fldl
pushf
add
out
mov
mov
push
xchg
cmp
and
xchg
ret
and
sahf
inc
outsb
and
and
sbb
ret
idivb
enter
dec
adc
pop
mov
cltd
xchg
sbb
incb
sbb
push
int3
fnstenv
pop
jl
incb
pop
jp
stos
mov
mov
fisttps
inc
xor
cld
dec
ss
adc
dec
cmpsb
repz
std
es
adc
mov
rolb
cmpl
mov
enter
js
imul
mov
push
stos
mov
mov
cmp
xlat
mov
fwait
aam
fimull
lock
sbb
adc
xchg
lahf
rcl
add
rcl
into
adc
jae
sti
add
mov
mov
mov
repnz
sbb
lock
and
and
jno
scas
cmp
popf
cmpsl
cmp
scas
jb
aam
fs
mov
imul
pop
mov
cmp
out
and
mov
xchg
outsb
and
add
pop
mov
jnp
sub
xor
push
std
pop
aam
lcall
adc
inc
push
xchg
add
xchg
jl
mov
loop
xchg
and
adc
aad
and
stc
idiv
xlat
jg
push
arpl
in
and
test
dec
loop
and
and
push
repz
imull
fs
push
cmp
or
mov
jbe
test
imul
fwait
subb
and
mov
fs
mov
fs
mulb
push
cmp
adc
add
test
xor
repz
cmp
cmpsl
ret
mov
fnstsw
pop
sub
shll
pop
pop
jne
andnps
mov
sti
es
bound
cmp
mov
popa
shlb
cs
or
jmp
lretw
adc
sbb
mulb
cmp
shll
sbb
loopne
lods
popf
arpl
out
ret
sarb
lock
jg,pn
mov
and
lcall
mov
mov
jecxz
popf
jo
lcall
mov
mov
arpl
xchg
ja
mov
leave
cli
push
repz
push
mov
movsl
sub
shrl
test
inc
dec
jecxz
inc
mov
test
test
sbb
dec
push
xor
insl
pop
and
or
xchg
outsl
jb
in
aam
adc
gs
xor
out
xchg
adc
mov
ja
add
js
xor
inc
and
sub
cltd
sahf
xor
pop
fcomps
lcall
into
and
lods
in
pushf
jb
xchg
lret
test
fsubrl
cmp
xor
stos
test
dec
jmp
xchg
inc
xchg
fsubs
movb
js
js
rol
rorl
not
add
mov
jbe
cmovne
mov
jle
mov
add
aas
notb
fnstsw
out
lcall
push
fsts
pop
loope
rcrb
jno
mov
jg
std
sbb
dec
into
lds
test
or
repz
or
call
mov
push
pop
xchg
mov
ret
add
fsubs
and
jg
cltd
pop
fists
movsb
lea
mov
inc
jb
in
sub
jb
shll
pushf
scas
pop
shrl
jbe
push
add
push
rolb
inc
aaa
test
pusha
stos
pop
pop
enter
dec
xor
pop
add
pushf
test
add
test
fldenv
arpl
inc
or
in
add
add
sti
xchg
mov
pop
mov
imul
jae
dec
add
push
cmp
daa
aas
cmp
test
jns
subl
fidivrs
popf
fadds
adc
add
xchg
leave
leave
pop
js
push
xchg
pushf
inc
mov
pop
sub
xor
xchg
faddl
ja
repnz
stc
push
push
jecxz
lret
stc
jp
loopne
rcrb
aas
movsb
jl
xor
ficomps
andb
cmc
and
je
dec
movsb
dec
fldcw
ret
push
fidivs
cld
loop
das
sub
and
xchg
cli
xor
dec
cs
sub
cmc
insb
popa
lock
pop
pop
ljmp
imul
mov
in
pop
clc
ret
jb
mov
mov
inc
das
psubusb
test
mov
push
shl
add
push
pop
shl
inc
pushf
or
pop
and
cmp
nop
dec
mov
in
push
jl
sti
jnp
cmc
lds
dec
push
repz
and
arpl
jecxz
inc
cmp
stos
int
movsb
xlat
ret
mov
lcall
fsubs
ret
xchg
outsl
cwtl
dec
fdivrl
inc
sbb
lahf
xchg
mov
xor
outsl
inc
mov
je
and
xchg
inc
movsl
int3
test
daa
daa
ljmp
outsb
outsl
push
xchg
gs
xchg
insl
dec
stos
ror
and
pop
fs
dec
jb
enter
lock
jle
nop
roll
ret
mov
jg
out
insb
aaa
mov
adc
sahf
js
std
jmp
fsub
adc
int3
sbb
addr16
cmp
sub
dec
add
testl
out
in
cmp
mov
nop
pop
mov
jne
mov
lret
sbb
pop
movsb
mov
jne
outsb
push
inc
xor
mov
sub
add
xor
cmc
loopne
or
or
ret
scas
adc
in
loope
fdivp
mov
in
mov
add
cmc
rcll
sub
sub
loop
inc
inc
mov
cli
cmp
fistpll
jae
push
out
lock
push
out
mov
and
inc
lcall
enter
mov
push
pop
lcall
dec
test
xor
mov
insl
xor
pop
incl
cmp
divb
jns
sub
lret
xor
jmp
mov
pop
adc
test
js
fs
rorl
cld
das
mov
xchg
mov
adc
add
xchg
mov
loope
ficoml
shr
es
inc
cmp
xchg
icebp
ror
xchg
lods
cmp
and
jmp
or
cmp
mov
dec
cmc
js
cwtl
repz
sarl
addb
ljmp
dec
jne
imul
sub
je
loope
pop
repnz
imul
les
sbb
sbb
es
js
mov
cltd
arpl
add
dec
xor
fimuls
rsqrtps
insb
nop
or
pop
inc
sahf
movsl
mov
cmp
or
std
leave
sbb
mov
dec
mov
sub
in
xor
mov
testl
repz
arpl
addr16
or
jnp
divb
cmpb
push
neg
pop
daa
xor
ret
push
ja
gs
xchg
notb
out
adc
lcall
stos
bound
dec
mov
lock
xor
orl
leave
and
inc
or
mov
dec
pop
cmp
roll
xchg
sbb
mov
mov
pop
jbe
mov
mov
bound
shrb
std
outsb
mov
ds
movsb
aas
adc
xor
mov
lret
mov
and
fdivr
fisubrl
and
cmc
out
inc
leave
orb
cmc
sbb
mov
push
dec
mov
or
ds
in
add
stc
add
mov
sbb
mov
lods
incb
push
insl
mov
lret
push
out
popf
inc
jo
hlt
push
inc
andl
mov
or
fcmovu
mov
je
mov
ffreep
pusha
ficomps
lods
jno
jl
pop
inc
xor
jne
mov
xchg
sub
into
jmp
sub
or
call
jecxz
cltd
jmp
mov
pushl
add
xchg
mov
cs
aaa
add
push
mov
cmp
xor
and
xorl
hlt
test
shll
push
lahf
push
mov
shlb
cmp
out
ja
push
xor
pop
mov
rcll
mov
in
inc
in
jge
cli
and
xor
je
stc
lods
xor
in
inc
push
ret
sbb
cmpsl
cmp
pusha
es
add
stos
or
adc
pop
pop
inc
ljmp
out
movsl
in
pop
cmpsl
bound
jno
inc
sbb
inc
xchg
xchg
stos
xchg
jnp
dec
movsb
fadds
dec
daa
outsl
lret
jecxz
cltd
jmp
scas
fidivl
lret
pop
jl
out
inc
and
aas
dec
sub
jo
popa
ss
adc
push
inc
sbb
mov
insb
xchg
ret
add
lahf
subl
push
out
test
shl
lret
les
stos
or
xor
and
xchg
mov
push
icebp
jp
sbb
sub
setae
mov
daa
sti
mov
aas
sub
ja
jno
rcrl
cmp
fwait
daa
inc
das
cli
rol
popa
imul
inc
outsb
dec
lahf
mov
mov
rolb
jl
push
fsub
jp
xlat
movsl
adc
lods
lret
add
lcall
rcll
fwait
dec
xor
dec
inc
pop
cmp
int3
popa
xchg
add
sub
movsl
rcll
repz
aas
or
pextrw
or
xor
sbb
pusha
jno
pop
cmp
add
inc
dec
cli
jbe
mov
cmc
gs
loop
ret
sti
pop
jmp
jb
xchg
inc
xchg
mov
dec
ret
add
es
push
movsl
cmp
insb
imulb
cmpsl
push
xor
test
stc
xchg
into
xchg
inc
add
dec
xor
hlt
hlt
xchg
fcomps
lea
jno
pop
mov
fiaddl
in
mov
jge
pop
xchg
push
xchg
ret
ret
rcll
mov
nop
data16
pop
sbb
clc
jb
and
int
xchg
lods
push
fwait
pop
loopne
rorl
adc
xchg
sbb
dec
inc
rcrb
lods
repnz
xlat
dec
cmp
rorb
in
inc
sbb
insb
push
and
xor
jne
adc
sti
mov
mov
mov
pop
jp
mov
or
dec
movsb
xor
cli
and
out
insl
lods
sarb
insb
rorb
xor
test
fisubs
rcll
cmp
mov
out
fidivrl
pop
jmp
dec
cmpsl
xchg
loopne
jnp
xor
dec
gs
nop
pop
loop
mov
out
cltd
mov
aas
xchg
dec
push
jns
mov
sbb
add
jmp
fidivrs
mov
repz
pop
addr16
push
pop
incl
nop
fdivrl
jmp
mov
icebp
add
popa
test
and
into
xor
adc
clc
and
iret
xchg
push
iret
adc
mov
enter
cmp
add
ja
jo
lds
xor
adc
cli
jne
mov
xor
cmp
xor
dec
or
fldl
or
xor
push
lcall
movl
xchg
fildl
sysret
mov
lods
xlat
jp
insl
mov
ja
arpl
fsincos
sbb
fisttps
rol
cmpsl
gs
divb
mov
jp
mov
dec
aaa
stos
or
imul
jl
mov
and
or
neg
daa
cltd
mov
mov
inc
or
sub
push
push
dec
movl
sbbl
inc
mov
jbe
ss
push
push
xor
int
jo
xlat
xchg
gs
adc
or
push
dec
xchg
xchg
jns
lret
lret
imul
xor
ret
ljmp
aad
mov
pop
incl
mov
daa
or
movsb
add
mov
jb
es
aad
xor
lods
pop
lock
jmp
xor
pop
gs
mov
mov
out
xor
pop
out
xchg
adc
push
shll
xchg
inc
add
test
dec
sub
into
insb
leave
cs
push
aas
inc
mov
add
xchg
call
es
ljmp
fildll
test
lock
jb
jg
push
fidivrl
sti
fcomps
pop
jle
pushf
add
stos
lret
or
ja
fbstp
ror
mov
sti
xchg
jo
les
cwtl
jle
inc
cmp
and
out
call
push
in
leave
jl
stos
int3
add
dec
popf
jp
idivb
ja
fcoms
scas
mov
pop
lret
push
enter
stc
xor
scas
push
jmp
dec
mov
add
mov
adc
pop
rorb
into
loope
popa
push
mov
adc
imul
fsubl
and
jge
mov
int3
loopne
ss
sti
dec
mov
push
sub
shl
jb
int
lret
sub
mov
in
pop
dec
shl
and
push
inc
mov
sub
and
sbb
push
mov
sub
add
jne
pop
popl
or
pop
mov
jns
adcl
shrl
jb
mov
pop
cmc
dec
xchg
fldcw
dec
scas
add
scas
push
and
push
xor
mov
push
lret
mov
xor
or
inc
xor
cmp
cmp
mov
test
int
inc
lret
sarb
iret
cld
mov
cmp
outsb
mov
arpl
scas
in
cwtl
dec
sub
xchg
pop
push
dec
arpl
int
mov
push
cmp
test
stos
inc
mov
stc
inc
xchg
je
dec
push
rorl
mov
sub
in
divb
js
xor
adc
mov
sbb
rcrb
and
clc
add
subl
dec
xchg
jmp
ss
repz
sub
out
scas
lock
dec
push
sub
jae
adc
mov
and
jl
movb
adc
popa
dec
clc
pop
aaa
add
sbb
clc
inc
insb
xchg
cmpsl
shlb
popf
cmp
adc
into
jg
bound
push
pop
cmp
mov
repnz
mov
or
pusha
rcr
cmp
fnstsw
out
jno
xor
push
out
aad
gs
stc
xchg
js
push
mov
mov
jne
mov
in
in
and
dec
push
sub
shlb
push
rcrl
inc
adc
pop
fdivrl
shll
pop
jp
loop
lods
in
testl
es
xchg
and
out
push
loopne
dec
out
or
fsubs
lret
dec
xor
pop
movsl
mov
sbb
mov
jl
sti
xchg
push
imul
xchg
jns
mov
dec
or
inc
sbb
cmp
jl
and
sbb
sub
or
movsb
or
in
repnz
and
jbe
adc
mov
pop
inc
push
pop
int
push
add
es
sahf
pushf
push
mov
cmp
and
jae
iret
int3
scas
mov
xor
cs
lock
movsb
aad
testb
adc
add
push
in
sub
mov
push
add
cltd
lcall
mov
out
inc
xchg
cmp
jmp
sbb
jle
rcrb
addr16
popa
jge
shll
lods
shlb
mov
ljmp
lock
add
xor
dec
dec
dec
xchg
jge
push
enter
push
sarl
repz
rolb
ja
sub
jmp
xchg
dec
jns
dec
sahf
sub
inc
scas
enter
es
adc
jle
hlt
fld
imul
pop
cwtl
je
mov
in
mov
cltd
js
inc
js
mov
test
and
mov
in
dec
ret
orb
or
cld
call
inc
enter
scas
inc
xchg
test
adc
fs
push
add
test
leave
cmp
stos
xchg
lret
pop
jno
outsb
and
add
lahf
cmp
cmp
nop
xor
and
ret
mov
stc
dec
xor
imul
enter
daa
into
icebp
dec
cmp
xor
add
je
sub
mov
add
jmp
scas
xchg
dec
push
cmp
and
push
lcall
ret
inc
xchg
fmull
mov
mov
jg
mov
nop
enter
push
sti
push
jp
pop
in
lods
xchg
adc
adc
popf
push
sbb
mov
aam
and
imul
mov
iret
sbb
push
popa
push
add
into
repz
ja
or
cmp
sbb
insl
nop
movsb
pop
and
cmpsl
push
jnp
cmpsl
jecxz
adc
repnz
pop
rcrb
inc
inc
cpuid
push
ja
push
adc
fadd
test
fcomps
lea
fcoms
sbb
pop
sbb
dec
mov
dec
jmp
xchg
push
shlb
and
popf
and
movsb
mov
pop
or
lods
xor
inc
push
add
and
sub
popa
pop
sub
adc
sbbl
int
cld
mov
sub
mov
xor
mov
sbb
call
ret
ficomps
enter
xchg
xchg
jecxz
incb
shll
jb
adcb
dec
fildl
jno
shll
faddl
cmp
mov
loopne
lret
adc
pop
push
inc
push
xchg
std
push
mov
inc
icebp
lock
mov
fdecstp
add
lods
and
xor
jnp
popf
fistpl
stc
in
scas
mov
mov
ljmp
cmc
outsb
pop
cs
rclb
ret
ret
xor
decl
mov
mov
sbb
push
jmp
imul
subl
push
arpl
sub
iret
and
push
popf
enter
stos
movsb
mov
fldt
filds
push
cmc
xor
fwait
adc
frstor
pop
icebp
mov
and
addr16
and
inc
cmp
ss
push
mov
xchg
pop
popf
xlat
lahf
sti
push
repz
or
pop
xchg
jne
hlt
fucomip
lret
das
inc
xchg
sub
push
pop
pop
xor
jecxz
pop
dec
lret
insb
jnp
add
loop
sbb
add
inc
add
adc
sti
add
xor
add
data16
inc
leave
sub
je
sbb
lret
mov
outsb
dec
xor
insb
jne
mov
and
int3
mov
pop
popl
sub
mov
sub
nop
add
pop
jp
and
jbe
lret
inc
xor
movsb
out
mov
xchg
cmp
aam
dec
movb
ret
movsl
movsl
pop
push
les
xchg
cmp
lret
gs
xchg
inc
cmp
lret
clc
es
and
hlt
shl
push
outsl
movsl
flds
idiv
inc
push
loopne
jns
inc
add
jmp
jecxz
pop
test
popf
inc
push
xor
mov
pop
je
lds
jb
dec
call
mov
add
jecxz
push
dec
outsl
imul
jbe
pop
mov
nop
pop
push
icebp
lock
mov
mov
repz
out
clc
xor
mov
xor
daa
shrb
mov
cmp
imul
mov
mov
insb
jae
xor
mov
mov
xor
fmulp
pop
loopne
divl
pop
popf
scas
in
sarb
inc
not
xchg
mov
xor
inc
jbe
xchg
xlat
fwait
adc
mov
adc
nop
test
mov
imul
les
out
pop
and
pop
daa
push
std
mov
into
push
inc
jae
inc
cmp
mov
aad
cli
icebp
pop
and
or
xor
loope
sbb
cmp
cmc
jo
cmp
ljmp
cmp
mov
mov
cwtl
xlat
adc
leave
cmpsl
sub
jmp
lahf
mov
add
dec
aaa
pop
sub
ljmp
cmp
sub
imul
lock
in
lret
sub
ljmp
lods
out
sbbl
enter
test
jbe
rcrl
cmp
leave
pusha
movsb
test
adc
jp
jmp
mov
adc
sub
sbb
push
xor
das
xor
sbb
scas
data16
dec
sub
and
mov
add
cmpsb
or
rcrb
insb
imul
fidivrl
or
in
mov
jbe
add
sarb
repnz
icebp
mov
rcl
sbb
insb
dec
jle
call
pop
sub
mov
das
xchg
popa
push
sbb
dec
repz
into
lahf
js
decb
jmp
ja
lret
push
lahf
cld
sarb
sbb
and
out
cld
flds
dec
and
nop
xchg
dec
xor
call
sti
test
imul
cli
repz
in
mov
inc
aad
jbe
cmp
xchg
ljmp
stos
movsb
xor
lea
xlat
and
mov
sub
fcoms
push
std
and
push
jecxz
es
outsb
dec
inc
push
inc
mov
mov
sub
fistpll
pop
cs
out
jl
jne
aaa
movsb
jl
idivb
shlb
jp
mov
cmp
adc
pushf
loopne
jne
add
ret
xchg
sub
pcmpgtb
or
sbb
orb
xchg
mov
movsl
push
xor
push
and
je
and
test
xor
rorl
gs
loopne
pop
ds
sbb
out
sahf
test
xlat
adc
mov
push
sub
mov
pop
sti
leave
xchg
push
or
adc
adc
sbb
pop
popa
ficompl
and
mov
cltd
push
jnp
xchg
fs
xchg
adc
popa
dec
dec
xchg
lods
push
mov
pavgw
sub
or
test
ret
loop
rorb
and
jae
inc
cmp
pop
inc
mov
add
cmp
mov
cs
test
sbb
and
pop
js
cmpsl
cs
idivl
xchg
mov
outsl
lock
arpl
dec
inc
jmp
repnz
jb
and
rcrl
jns
mov
cs
adc
cmp
sbbb
or
xchg
scas
sub
mov
into
cwtl
push
mov
mov
jecxz
inc
insl
jnp
pop
test
jbe
js
mov
and
addr16
dec
pop
cs
mov
inc
fmull
mov
xchg
fwait
mov
andl
pop
xor
cmp
xchg
insl
fildll
and
xchg
xchg
mov
lods
adc
sbb
jl
mov
mov
fcmovb
dec
mov
fbstp
movsl
rcr
or
jae
imul
inc
nop
mov
movsb
mov
lods
int3
mov
lds
mov
mov
addr16
jae
inc
fbld
jns
stc
jecxz
mov
inc
pop
push
adc
lods
xchg
mov
stc
lods
pop
push
imul
imul
push
ret
push
insl
repnz
mov
push
data16
or
inc
iret
push
or
inc
push
sti
push
js
pop
mov
test
dec
mov
mov
mov
or
cld
or
out
mov
cmp
inc
add
push
shlb
mov
ficomps
and
adc
call
dec
pusha
sbb
lea
sub
pop
dec
sbb
sbb
mov
xchg
roll
cmp
ljmp
mov
mov
lock
or
fwait
cli
jbe
cwtl
dec
or
paddq
pop
lock
mov
movsl
aam
add
dec
adc
mov
fimuls
ret
mov
jo
dec
int
aam
mov
and
call
enter
ficoml
sbbb
push
pop
iret
stc
jo
jge
push
loope
bound
js
into
call
mov
test
lock
xchg
pop
scas
pop
mov
shr
dec
stc
imul
out
repz
pusha
rep
xor
inc
les
das
adc
call
int3
or
inc
gs
and
insb
xlat
cmpsb
in
or
leave
iret
test
fdivrs
ja
push
push
mov
cmp
xchg
lret
imul
ljmp
mov
das
lcall
daa
or
lods
test
jmp
cmc
xchg
movsl
daa
stos
push
fnstenv
mov
mov
ds
jo
stc
add
pusha
sub
stc
popa
js
sbb
cmp
bswap
mov
cmp
lods
xor
cmp
jb
ds
lcall
loopne
test
mov
cmpb
add
xor
aas
sub
xlat
dec
sahf
and
lea
aaa
sbb
inc
inc
popf
jmp
ljmp
rcrl
out
test
pop
xorb
adc
aad
leave
pop
pushf
xor
push
jecxz
inc
xchg
jmp
or
addr16
or
add
push
and
xchg
mov
pusha
jle
cmpsb
adc
fdivr
enter
dec
je
ds
inc
dec
mov
shrb
mov
jnp
sbb
insb
dec
mov
popa
push
je
jo
mov
lods
movsb
inc
sub
pop
cld
int3
test
in
stc
push
loopne
jg
jae
test
hlt
cmp
stc
cld
mov
pop
xor
or
dec
pop
and
xchg
sbb
or
pop
jne,pn
xlat
jno
mov
ljmp
sub
push
dec
in
adc
lods
movsb
jle
iret
test
pop
and
jae
mov
iret
xchg
mov
sbb
insb
nop
push
lock
icebp
or
fstps
lcall
mov
fists
jne
cmc
xor
pop
mov
push
in
mov
dec
mov
xor
in
pop
lock
and
mov
pop
mov
sub
pop
cld
ror
mov
jmp
jge
arpl
mov
xchg
ret
out
jbe
ja
pop
test
je
dec
out
mov
sub
add
or
out
sub
icebp
push
daa
or
add
push
jl
mov
mov
pushf
inc
xor
inc
add
adc
sub
cmpsb
daa
aaa
dec
push
or
iret
inc
jb
sub
call
and
push
xchg
mov
scas
arpl
imul
sub
xor
sub
mov
jle
das
cs
add
push
lods
popf
adc
push
cmp
andl
fneni(8087
mov
inc
xchg
stos
lea
mov
add
lahf
cmpsb
int3
and
sbbl
add
ror
es
xor
aas
xchg
adcb
jae
insb
lcall
popa
loope
jl
addr16
jb
jp
sub
pusha
pop
outsl
imul
sub
in
or
pop
and
inc
or
or
or
data16
repnz
mov
or
lcall
jae
mov
fbld
fmull
sarl
xor
pop
jp
imul
bound
dec
repnz
mov
ja
movaps
or
inc
lcall
ss
arpl
lahf
pop
jnp
sub
cmpsb
call
loope
int
xor
lahf
jo
mov
bnd
in
adc
jno
inc
ss
mov
sbb
or
adc
sub
cltd
out
leave
or
cmpb
clc
jne
add
add
gs
shl
idivb
mov
mov
lret
aam
jns
and
pop
data16
sbb
push
pop
loop
add
jbe
jl
fwait
leave
push
in
dec
jo
add
popa
mov
jo
lock
mov
call
imul
popa
xor
movsl
mov
cld
adc
call
jo
cwtl
test
imul
pop
addr16
inc
bound
cmp
adc
inc
in
mov
add
hlt
cmp
lds
adc
dec
cmpsl
pop
xor
push
xchg
cmp
enter
sahf
out
sbb
mov
incl
push
js
mov
clc
mov
sti
icebp
xchg
push
jecxz
adc
adc
jne
clc
lea
sub
push
lods
adc
call
movsl
out
insb
in
sbb
push
decl
into
xchg
pop
pop
jp
test
repz
ja
adcb
aaa
lods
push
inc
and
iret
decl
sub
lods
or
add
pop
xchg
pop
in
leave
stos
or
cmpsl
test
into
es
and
mov
add
and
xor
add
xor
and
mov
add
mov
cli
das
das
xchg
inc
int3
xlat
jmp
bound
js
cwtl
cmpsl
mov
xor
lea
inc
insb
fs
sbb
jge
pop
push
test
ret
pop
mov
scas
aad
mov
jne
mov
loop
mov
jmp
hlt
xchg
xchg
xor
addr16
mov
int3
add
mov
aaa
or
scas
pop
ret
lcall
or
mov
xor
cmp
pop
xchg
xchg
mov
popf
fwait
stos
leave
popa
popf
sti
inc
test
out
xchg
push
addr16
or
push
outsb
xor
scas
jg
xor
mov
sbb
lea
cltd
xor
pop
pop
push
xchg
dec
and
mov
call
fisubl
adc
pop
lock
and
in
enter
push
in
cmp
push
sub
dec
jae
fwait
xchg
push
in
pop
pusha
cmp
out
sbb
shl
insb
lret
sbb
scas
iret
push
aas
stc
mov
dec
jmp
add
add
rcr
iret
pop
icebp
mov
ss
fnstsw
pop
cmc
xor
pushf
or
aas
add
enter
xor
out
jnp
fwait
orb
fadd
adc
mov
xchg
into
cmpl
das
mov
dec
mov
repnz
bound
xchg
add
mov
lcall
mov
pop
cli
mov
clc
inc
cli
test
pop
pop
xchg
cld
xor
repnz
adc
adc
cmp
mov
mov
add
push
in
push
test
mov
sub
inc
data16
stos
in
dec
lret
arpl
or
cmp
sub
push
in
mov
lcall
jnp
cmp
push
cld
cmpsl
mov
ds
hlt
pop
pop
adc
movsb
mov
std
test
loope
loope
push
ja
in
mov
cmc
xor
adc
fs
rcll
test
sti
lock
fidivs
inc
aam
inc
dec
xor
les
nop
or
sub
nop
jecxz
mov
cli
sbb
icebp
movsb
inc
dec
mov
outsb
frstpm(287
push
mov
mov
push
push
push
mov
mov
inc
and
lahf
insl
xor
fidivl
in
imul
mov
inc
adc
shl
adc
mov
lahf
pop
mov
lds
mov
jle
lock
and
fcompl
or
cmpsb
movsl
outsl
jae
cmp
add
jnp
jnp
stos
popa
out
push
cmpsb
popf
dec
xlat
repnz
imul
bound
iret
popf
pop
ret
test
imul
call
aam
sub
cmpsb
subb
xorl
repz
pushf
hlt
mov
fbstp
fisubl
cmp
js
cmpsl
inc
std
out
fstpt
lea
lds
mov
mov
push
cli
dec
mov
push
dec
fdivrs
cwtl
in
mov
pop
push
jb
mov
inc
pop
not
sub
or
or
push
xlat
daa
insb
aas
add
mov
jnp
pop
adc
inc
mov
repz
stc
cmp
fisubrs
repz
mov
insb
and
cmp
mov
adc
sub
xor
sub
in
pushf
xor
jl
imul
movsb
mov
push
out
scas
jge
div
xor
jp
test
fstps
mov
jle
das
insl
xor
rcrb
clc
dec
stc
je
shlb
in
rcrl
sbb
das
add
bnd
scas
test
push
cli
and
outsl
shl
das
lods
push
pop
add
mov
scas
mov
pminsw
push
add
mov
add
dec
outsb
dec
sbb
mov
push
mov
cmp
pop
mov
dec
cli
fbstp
cld
mov
mov
jbe
and
fcoms
out
int3
pop
mov
mov
cmp
pop
call
or
pop
xchg
les
mov
fst
sbb
add
movsb
scas
daa
push
test
lahf
mov
dec
push
test
cmp
sarl
xchg
adc
sub
mov
jge
test
or
mov
push
inc
lea
lods
std
push
xor
mov
not
mov
rcrl
je
cmpsb
testb
dec
add
mov
call
adc
xchg
lea
push
inc
pop
hlt
sub
in
adc
pop
jecxz
dec
cli
push
subb
stos
xchg
and
imul
into
lret
mov
and
xchg
jmp
das
fimull
jno
add
pushf
add
mov
or
pop
add
adc
movsb
mov
lea
fildll
ds
dec
lds
lods
ss
jo
fisttpll
rolb
jecxz
aaa
adc
add
jne
jg
push
into
jecxz
xorb
jmp
push
or
mov
dec
incb
lea
push
cmp
movsl
or
test
retw
mov
popf
loop
daa
sub
mov
cmc
or
int
lret
xor
sti
xor
xor
jae
pusha
movsl
push
xlat
mov
mov
sub
mov
pop
or
pop
cli
mov
daa
mov
out
mov
cmp
inc
inc
cmp
inc
push
sti
mov
pop
or
ret
cmpsb
pop
xchg
xchg
mov
inc
test
adc
and
outsl
push
stos
aam
test
add
in
mov
fnsave
lahf
xchg
xor
xchg
lods
xor
sar
lret
test
sbb
jbe
fwait
ret
xchg
lds
imul
xorb
test
ljmp
mov
jge
frstor
das
mov
cmp
push
push
add
outsl
arpl
sbb
popf
outsl
jge
sahf
test
adc
cmpsl
cmp
sbb
sub
cli
lcall
clc
test
dec
int
gs
out
inc
sarl
jmp
jae
hlt
in
stos
mov
lcall
push
in
fwait
push
push
fisttpl
aam
nop
daa
pop
mov
ja
ss
shlb
mov
add
out
stos
jle
inc
pop
nop
or
lock
dec
gs
in
enter
xor
es
movb
cs
push
out
xor
xor
rorb
mov
cwtl
push
insb
push
pop
cmp
test
incb
jg
adc
sub
mov
aas
mov
les
out
out
adcl
mov
call
xor
add
imul
xchg
xor
inc
xchg
int
mov
mov
sbb
repnz
mov
dec
cmp
add
in
jmp
outsl
dec
insb
sbb
adc
stc
pop
sub
pusha
lahf
mov
mov
shll
fildll
call
hlt
gs
xchg
or
xchg
ljmp
inc
imul
out
jno
cmc
push
or
pop
aad
loope
push
xlat
or
fld
mov
push
popa
in
call
das
shrb
sub
jp
stc
pushf
ss
js
imul
cmp
lcall
stc
cmp
out
push
push
pop
aas
xchg
adc
lea
mov
clc
lcall
addr16
outsb
ret
sti
out
pop
lahf
cmc
iret
xor
pusha
or
and
sub
setl
test
pop
bound
mov
fs
and
nop
cli
push
pop
inc
xchg
imul
fistpll
insl
inc
pop
jnp
add
fsubl
gs
sbbb
subl
push
xlat
pop
xchg
ss
inc
push
xor
in
push
dec
cs
xchg
cmp
sar
add
mov
mov
mov
sahf
fucomip
sbb
sbb
xchg
sub
mov
add
stos
xor
jno
lea
in
outsl
sahf
jo
dec
sub
das
sbb
sbb
pushf
xor
mov
fs
xchg
fstpl
orb
data16
or
mov
insl
int
rcrl
inc
out
adc
dec
loope
xor
push
sbb
xchg
jbe
pop
filds
lea
jns
xchg
add
lret
std
lea
mov
inc
adc
add
mov
jns
jle
jl
or
ss
mov
sub
bound
push
arpl
add
lock
int
mov
and
ss
cli
out
loop
or
mov
aas
pop
jo
out
lahf
outsb
cmpsl
hlt
leave
or
lods
mov
fdivl
aam
icebp
adc
arpl
pop
jo
mov
jg
cmpsl
je
ds
cltd
shll
push
shll
sub
fldt
inc
pop
mov
cs
mov
xchg
jp
inc
clc
mov
mov
mov
sbb
inc
jo
repnz
add
bnd
cmp
xchg
test
outsl
sub
sub
sahf
mov
sbbb
adc
sub
repnz
nop
cmp
jne
or
dec
je
xchg
adc
nop
cmpsl
add
cmp
inc
je
icebp
shl
inc
jns
icebp
dec
jns
std
in
push
fisttpl
sub
xor
mov
sbbb
popf
sub
or
xchg
and
test
out
pop
xor
shll
adc
fisubs
dec
sub
rcl
jns
arpl
dec
stos
cmpsl
loope
enter
insl
lods
and
push
orb
mov
xlat
mov
adc
test
movsb
lahf
movsl
inc
xor
pop
adc
push
pop
dec
push
jmp
mov
dec
data16
xlat
rcrb
dec
pop
xchg
add
and
adc
das
fadd
daa
adc
fldenvs
xchg
jl
cmpsl
mov
or
bound
add
jb
xlat
or
mov
xor
nop
out
mov
clc
adc
loop
add
sti
lods
idivl
imul
xchg
mov
mov
jne
add
pop
bnd
ffree
mov
pop
pushf
xlat
cltd
jbe
int
and
cmp
sbb
insl
sbb
cmp
push
or
pop
mov
bound
fildl
push
mov
add
shrb
push
sub
adc
test
out
or
pop
mov
mov
push
popf
shll
sbb
test
adc
insl
mov
stos
sub
dec
sti
push
ret
and
aas
mov
jge
inc
push
js
lret
mov
jg
pop
xor
ret
ds
ds
add
lahf
push
push
sarb
sub
out
dec
xchg
jecxz
push
inc
xor
fldt
and
dec
pushl
bound
loopne
dec
mov
push
mov
push
and
mov
jmp
fildl
test
fxch
shlb
and
xchg
testb
jecxz
mov
jne
repnz
cmp
rcrl
pop
fnsave
clc
xchg
faddp
aad
in
roll
xor
divl
iret
lods
sbb
pop
gs
mov
jne
mov
leave
mov
movsb
cmp
mov
mov
sbb
jmp
xchg
add
iret
ret
loop
outsb
icebp
jns
ljmp
adc
cmp
call
pop
bswap
fisttpl
rclb
or
mov
cmp
dec
push
mov
les
orl
lock
arpl
cwtl
pop
lock
fisubrl
mov
and
fiaddl
scas
inc
scas
flds
es
aad
mov
or
sbb
sbb
movsb
addr16
imul
sub
mov
xlat
jp
lret
mov
loopne
fs
jp
roll
sbb
adc
xor
insl
mov
out
xlat
jmp
jno
sub
or
test
in
int3
mov
pop
mov
lcall
gs
ret
mov
pop
fwait
pop
das
jle
or
jle
shr
cld
orb
pushf
ds
out
adc
in
sbb
fstpl
cmp
sub
movsl
inc
arpl
imul
sbb
movsb
xor
mov
js
dec
push
mov
stos
stos
ja
loopne
xchg
cmp
or
in
cli
hlt
rolb
push
addr16
sub
idivb
int3
cmpb
pop
sub
pop
into
mov
roll
xchg
gs
lock
ja
js
inc
in
xchg
bound
xchg
adc
test
add
pop
and
imul
mov
enter
test
and
sbb
add
xchg
add
add
adc
dec
repnz
pushf
mov
mov
cmpsb
ja
jecxz
stc
mov
je
add
jae
or
dec
cld
mov
insb
fisttps
fbld
pusha
xor
sub
xchg
cmp
mov
stos
mov
jbe
std
dec
cmpsb
jne
push
or
mov
jecxz
pop
xlat
xchg
and
or
in
aas
cltd
add
rorb
stos
mov
xchg
sub
inc
sbbl
xor
mov
lahf
mov
imul
sub
mov
push
add
inc
in
movsb
xchg
fidivs
jecxz
xchg
or
xorb
xchg
mov
adc
push
jge
pop
lods
xchg
movsl
mov
xchg
in
lahf
andl
int
int3
imul
xor
aad
aam
ror
pop
pop
inc
test
jge
push
aam
push
xchg
movsb
pop
les
cmp
xchg
dec
or
shll
repnz
jmp
nop
cmpsl
mov
or
pop
pop
fisubrs
push
adc
mov
sar
mov
mov
popa
aaa
xchg
int3
xchg
and
sub
mov
xchg
push
sti
mov
ret
int
test
icebp
adc
lods
insl
xor
sub
mov
scas
repnz
jg
outsl
mov
leave
push
idiv
push
or
filds
pusha
add
sbb
mov
out
bound
push
rol
push
ret
fmuls
mov
push
cld
notb
ja
rcrb
mov
or
and
int
int3
jae
jge
jle
sbbb
repz
adc
addr16
push
loope
sbb
xchg
in
hlt
dec
call
stos
sub
ljmp
and
push
adc
les
xchg
in
js
mov
ret
imulb
mov
push
bound
mov
mov
sbb
fimull
rcll
sub
mov
mov
vmulps
mov
dec
sub
pop
xchg
lds
gs
mov
adc
test
cmp
jo
iret
cmp
fucomip
cmp
or
lods
adc
gs
jne
or
inc
pop
je
pminub
lahf
addr16
xchg
in
pop
je
xor
jmp
cs
cmpsl
daa
test
aas
push
and
fisttpl
nop
orb
ret
testl
pop
iret
sahf
dec
mov
fcmovb
loope
dec
int3
shlb
and
mov
test
pop
xchg
fcom
sbb
loop
xchg
in
sub
dec
pop
mov
mov
xchg
aam
sbb
ja
je
add
dec
and
inc
mov
gs
stos
or
sub
ret
lods
test
stos
push
ret
hlt
clc
movsl
pop
mov
jecxz
mov
dec
sub
jmp
jb
outsb
aad
pop
dec
out
sub
pop
inc
and
inc
shlb
cltd
inc
xchg
fimuls
xchg
fisttpll
int
xchg
fucompp
sbb
imul
ds
lods
cmpl
mov
inc
jecxz
invd
pop
pop
mov
mov
shrb
cli
mov
push
js
imul
loopne
and
es
mov
insb
ret
mov
movb
test
out
push
xchg
jge
adc
in
inc
mov
mov
movmskps
adc
pop
inc
adc
mov
out
adc
push
ljmp
scas
sub
into
dec
pop
xchg
cmp
sub
lret
lock
into
mov
pop
xorl
nop
nop
pop
test
push
jecxz
sti
adc
dec
push
aaa
les
je
adc
xorl
or
push
mov
aad
daa
out
sbbb
movsl
xor
test
arpl
pop
mov
loope
mov
adc
mov
add
shll
jmp
in
fldenv
insb
jb
mov
xchg
mov
mov
gs
push
inc
cmpps
jo
fdivrs
loop
mov
cmp
fwait
sub
lods
enter
leave
or
aam
sub
aaa
in
mov
mov
fdivr
fldenv
inc
sahf
push
maxps
call
or
int
lods
push
mov
mov
jne
std
xor
mov
jns
xchg
adc
aas
scas
aas
inc
adc
sub
fbld
dec
dec
mov
call
loopne
imul
clc
push
popf
jmp
inc
pop
dec
jae
add
cmp
push
cmc
xchg
xchg
cmp
xor
movsb
dec
sbb
adc
or
out
mov
sbb
out
xorl
imul
sub
sarl
inc
fisubl
sub
jp
or
sarb
adc
stc
fisttpll
enter
and
sub
in
shll
mov
adc
lahf
in
sbb
ljmp
addr16
dec
jp
rolb
mov
sub
mov
cmp
pusha
mov
cmc
push
sbbl
mov
pop
cmpsb
addr16
or
pop
inc
jne
ret
int
int3
sti
lcall
in
outsb
aad
fisubs
sub
mov
cmp
sti
rorb
jp
dec
and
mov
jmp
test
pop
dec
call
mov
pop
es
dec
xchg
movsb
jb
roll
repz
int
push
cmc
xchg
xor
pop
loopne
std
dec
cmp
xchg
cmc
testl
pushf
stos
dec
lret
adc
push
dec
xor
shll
arpl
call
je
enter
dec
lods
je
xchg
aas
scas
xor
push
lret
pop
inc
mov
hlt
adc
rol
cmc
mull
fsubr
les
andl
repnz
add
jecxz
iret
or
jle
and
psrld
mov
add
inc
scas
sub
fisubrs
xor
lret
jne
inc
or
fbstp
fdivl
bnd
cmp
mov
test
cmc
jb
mov
ret
ret
adc
pop
mov
sahf
rorl
jle
jp
mov
or
adc
mov
cmp
sbb
pop
jge
inc
push
ret
sbb
cwtl
ficomps
or
cmp
lds
cmc
repz
xchg
push
mov
jns
imul
and
dec
outsb
in
sub
sbb
pop
cmp
jo
pop
lock
pop
insb
pop
mov
add
jnp,pt
sbb
movsb
imul
mov
ja
push
cmp
fdiv
mov
hlt
jg
mov
dec
lret
and
mov
lods
repz
outsb
dec
addr16
jecxz
jg
mov
dec
mov
push
decl
sbb
call
xchg
xchg
aam
sub
push
pop
aaa
stos
cmp
cmp
mov
lods
in
push
inc
xchg
sub
lds
xchg
sbb
int
mov
mov
mov
pushl
mov
sahf
sub
xchg
sarb
xor
pusha
loopne
lods
pop
pop
mov
xchg
xchg
ljmp
fcompl
je
ret
test
push
adcb
idivb
push
test
das
leave
ret
fdivrs
fdivp
sti
sti
sbbb
mov
rcrb
cltd
das
je
pop
jl
mov
fs
sub
or
pop
aaa
in
das
fdivl
lods
pop
repz
or
dec
adc
mov
add
sub
dec
sahf
mov
or
fisubs
add
xchg
cmpb
es
add
dec
push
or
clc
jmp
inc
xor
cmpsb
fmulp
push
call
lds
fsubl
repz
movsb
punpcklbw
ret
xchg
mov
fwait
loope
ljmp
mov
out
fimull
inc
pop
or
inc
in
ss
outsb
cmp
or
subb
movb
ret
out
push
addr16
mov
push
test
cmp
add
fwait
mov
push
mov
inc
push
adc
leave
adc
lds
xchg
cs
aam
pop
sub
pop
xchg
loopne
pop
pusha
add
ds
repz
sub
faddl
in
lret
mov
cmp
push
lods
adc
lret
jl
sbb
dec
jae
xchg
or
push
insb
sub
outsb
dec
testl
xchg
push
sbb
push
lret
fxch
outsb
loopne
repz
clc
or
xorb
insl
mov
aaa
jmp
jmpw
xchg
sub
and
jne
mov
lods
pop
mov
rclb
cli
mov
lock
addr16
ja
test
add
fstps
sbb
pop
dec
inc
mov
pop
pop
jo
sbb
or
mov
dec
pop
fldcw
mov
test
lea
add
outsb
jg
push
int3
adc
cmpsl
lds
adc
jns
mov
aad
ljmp
cmpsl
push
and
rcl
mull
mov
fs
and
sbb
mov
pusha
inc
or
in
add
imul
adc
js
xlat
movsl
in
ljmp
dec
popa
mov
mov
mov
xor
xor
shrl
frstor
inc
jns
imul
adc
pop
push
or
mov
push
in
inc
fwait
aaa
push
out
sar
cltd
mov
xor
test
add
jb
adc
inc
jno
mov
jmp
ret
lret
cld
movsl
push
sarb
jg
hlt
mov
add
xchg
lret
popf
and
xor
sbb
or
push
or
and
ret
inc
outsl
sbb
icebp
lcall
push
jbe
subl
or
jge
xchg
mov
lods
mov
pop
cmpsl
adc
push
mov
ss
dec
in
mov
mov
adc
cli
jae
out
add
sahf
bound
in
das
mul
inc
clc
fs
ret
imul
jge
jg
ss
jo
loop
jne
ds
lds
xchg
xchg
lcall
arpl
stc
sub
mov
shrb
jle
push
cltd
aaa
xchg
xor
daa
mov
jecxz
push
ss
fucom
addr16
aam
cmp
pop
xchg
into
lods
jnp
nop
aad
lcall
mov
std
cmc
sarl
push
add
in
mov
loopne
jecxz
inc
pop
xor
cld
jle
cmpsb
mov
clc
xchg
movl
push
movsl
mov
xchg
pop
cli
push
stos
sub
mov
xor
push
and
fsubrl
jp
cld
mov
aaa
and
jns
das
out
imul
int3
mov
insl
mov
scas
or
stos
push
mov
jmp
ret
rorl
aaa
push
iret
movsb
jp
lcall
xchg
mov
cld
es
or
mov
jno
mov
xchg
push
adc
and
xor
clc
push
add
rcrl
je
inc
dec
andb
mov
loope
mov
sub
rcr
aam
ljmp
dec
cmp
dec
or
int3
xor
shl
fisubl
cld
call
hlt
jne
arpl
fldl
lods
movsl
cmp
xorl
pop
adc
mov
mov
ja
xchg
outsb
imul
sub
dec
jae
popa
leave
fucomip
daa
push
inc
call
js
jno
and
jbe
xchg
lea
in
lock
loope
enter
mov
stc
mov
lds
add
dec
negb
cmp
mov
sub
sub
test
dec
shl
dec
int
xchg
pusha
mov
andl
pop
in
or
cltd
xchg
stos
xchg
pop
in
xchg
xor
dec
fs
lock
lock
push
jl
sub
pop
push
jns
adc
pop
fs
mov
lret
xchg
adc
push
gs
push
lahf
repz
in
and
dec
test
ljmp
js
sub
push
cmp
jle
inc
sub
cmp
inc
repnz
add
adc
mov
jno
imul
sbb
sub
dec
push
jmp
ss
into
lcall
fs
push
lods
data16
daa
sbb
bound
jns
xchg
cmp
inc
repz
aas
in
push
pusha
mov
cwtl
into
dec
xor
xlat
sub
mov
sbb
stc
stos
dec
lcall
scas
nop
cwtl
cmp
in
xorb
into
ret
popf
or
or
mov
dec
aas
mov
jbe
push
in
rorb
push
xchg
add
inc
mov
sub
push
fisubs
gs
and
add
mov
test
jmp
imulb
std
fstl
popa
and
dec
mov
push
dec
ljmp
insb
cmpsb
and
sub
push
push
test
xorb
jl
sbb
daa
jb
jecxz
xor
test
push
pop
or
xchg
test
mov
pop
jnp
fldl
dec
jl
inc
cltd
push
ret
mov
or
mov
je
sub
push
pop
push
scas
push
mov
cld
mov
push
cltd
add
in
pushf
inc
jmp
rclb
ja
cmp
dec
add
movsl
mov
mov
or
cmpsl
jge
ljmp
mov
xchg
mov
shlb
adc
test
push
loop
lahf
mov
sahf
stc
push
xchg
daa
insb
and
sub
inc
adc
sbb
inc
lret
cmpsl
sub
xchg
mov
push
and
cmp
into
push
scas
pop
push
das
add
sbb
and
lds
cld
repnz
sbbb
insl
cli
push
mov
icebp
enter
mov
sub
mov
cwtl
lret
jg
pop
fnstcw
xor
jg
cmp
imul
jl
inc
in
and
int
xor
xchg
jne
rorl
push
cmp
mov
dec
negb
push
insl
stc
jg
adcb
imul
sub
dec
icebp
add
decl
inc
roll
pop
lcall
cmp
out
cmp
arpl
imul
mov
rcrl
jle,pt
out
xchg
add
mov
cmp
rolb
mov
push
jecxz
cmpsb
fidivs
rclb
jecxz
xchg
dec
sbb
ret
push
or
sub
imul
sbb
out
pop
scas
xchg
popa
sbb
inc
bswap
push
or
or
inc
icebp
movsb
repnz
pop
shlb
lcall
mov
jno
fidivl
retw
cltd
mov
aam
fmull
xchg
loopne
jl
xchg
es
jg
pop
fwait
mov
pop
popl
fs
jg
inc
rcr
inc
push
mov
add
cmp
arpl
frstor
scas
push
push
cwtl
adc
aaa
ror
popl
and
cmp
enter
mov
pop
dec
sbb
pop
mov
lret
cmpsl
pushf
add
adc
out
mov
ror
test
cmc
pop
xor
pop
xchg
and
mov
outsb
xchg
mov
or
sub
dec
mov
jp
sbb
mov
inc
lea
xchg
out
mov
or
addl
pop
mov
icebp
inc
jl
imul
dec
scas
xchg
lret
push
leave
push
mov
adc
cld
sbb
pop
out
frstor
test
mov
bound
mov
fsts
mov
add
test
roll
or
mov
lahf
clc
pop
ret
cmp
pushf
add
sbb
lcall
aaa
mov
aaa
in
test
jecxz
push
push
leave
adc
xchg
pop
sbb
mov
adcl
insb
fimull
mov
enter
push
xchg
sub
jns
mov
inc
into
je
adc
loopne
test
sahf
xor
pushf
add
cmp
xchg
dec
xor
and
or
xchg
mov
cmp
cmpsl
stos
adcb
mov
jmp
cmpsl
iret
push
jae
imulb
lock
das
call
ja
imul
xor
ds
inc
mov
sbb
sub
test
cmp
pandn
les
push
cmp
sub
push
xchg
ret
jg
pushf
push
aam
pushf
cmp
fadds
sbb
adc
push
sti
into
pop
dec
pushf
ds
cmp
int3
aaa
popf
fnstcw
sbb
clc
sti
ds
dec
push
fldcw
sub
or
out
call
sti
out
lea
orl
rol
sub
das
and
xchg
into
out
cli
add
sbb
or
inc
into
movsl
aaa
sub
mov
repz
xchg
into
push
daa
or
aaa
add
adc
add
and
add
out
mov
xchg
push
aam
out
mov
xchg
pop
lret
sbb
mov
jmp
ja
pusha
fs
cmp
pop
push
outsb
sar
adc
mov
lods
inc
fildl
lret
mov
adc
ss
adc
out
inc
into
cmc
mov
repnz
xchg
sbb
mov
out
imul
or
mov
dec
sbb
rclb
repz
sarb
mov
repz
xor
ss
cwtl
add
xorb
rcrl
mov
mov
negb
aas
inc
cmpsb
lods
xchg
lcall
xchg
sub
pop
in
lock
xchg
leave
lahf
dec
inc
jno
jne
sbb
in
dec
js
pop
ror
js
inc
cwtl
and
or
add
inc
iret
mov
pop
fs
push
pop
rcll
or
lods
mov
adc
adc
cltd
in
shlb
adc
mov
lock
pushfw
jne
bound
xlat
imul
icebp
add
push
inc
push
aad
shll
push
inc
popa
mov
cltd
dec
pop
aad
dec
mov
jno
int3
mov
in
dec
out
dec
and
rorb
repnz
insl
movsl
jno
les
and
mov
mov
fdivl
mov
xor
fistps
xchg
cltd
mov
add
aas
sub
pop
add
sbb
scas
loopne
cmpl
xor
push
mov
mov
addr16
out
or
dec
sar
leave
hlt
negl
mull
dec
mov
jecxz
jge
ficompl
mov
inc
fsubrl
add
test
adc
add
push
stc
out
sub
dec
in
and
adc
testb
mov
arpl
xorb
mov
cmp
inc
frstor
fbld
add
lods
mov
movsb
push
mov
imul
lcall
call
add
in
dec
insb
das
lahf
add
mov
dec
add
divl
jae
insw
push
xchg
clc
jmp
fistpl
das
movsb
cmp
mov
sbb
mov
push
stc
test
aad
adc
sahf
gs
enter
add
daa
xchg
mov
cmc
lock
in
insl
cmp
xor
jge
mov
ffree
sarl
fisttpl
fdecstp
sahf
sbb
adc
incl
and
imul
dec
cwtl
or
mov
fnsave
scas
jnp
push
pop
and
add
add
inc
xor
push
jbe
lahf
cmp
xchg
jp
mov
in
lea
nop
popa
loopne
das
popa
mov
loop
xor
out
mov
mov
adc
pop
pop
jmp
call
add
lcall
sub
sub
lret
ss
adc
lods
inc
inc
insl
or
out
cltd
fwait
pop
cltd
insl
sahf
cmp
imul
pop
notb
lret
mov
fs
push
cmpsb
xchg
loop
das
aaa
in
in
dec
and
sbb
sbb
movsl
push
push
mov
pop
movsl
jns
shrb
sbb
cmc
ljmp
push
dec
repnz
outsl
xchg
scas
cmp
and
ja
iret
int
stc
fidivl
and
mov
imul
ds
sub
jno
je
jnp
pusha
cwtl
mov
adc
push
push
gs
mov
movsl
inc
push
rolb
test
loop
mov
les
jo
mov
les
pop
test
xlat
pop
loopne
jg
and
push
daa
scas
add
lods
dec
into
stos
in
sub
xor
out
cltd
movsb
jg
pop
ds
mov
mov
dec
mov
js
mov
out
rorb
dec
sub
mov
push
add
push
fs
imul
fisubrl
fcompl
cmp
lea
cltd
push
and
jmp
add
sub
add
test
push
sbb
or
mov
out
sub
lcall
jo
mov
fwait
sbb
adc
pushf
js
scas
fistpl
repnz
push
cmp
and
pop
jno
fisttpl
push
or
inc
jbe
sbb
mov
jne
and
add
jae
mov
inc
stc
mov
popa
stos
jl
mov
inc
test
ret
rclb
scas
pop
lret
add
hlt
adc
outsl
ss
push
add
ret
cmpsl
seta
fdivrs
mov
jo
pop
add
ja
push
je
outsb
adc
pusha
mov
fnstenv
adc
in
jnp
int
push
add
daa
out
xchg
popf
push
pandn
sbb
fiadds
cmpsb
xlat
inc
inc
ret
hlt
mov
aam
adc
fidivrs
inc
mov
xor
ds
adc
add
cld
jmp
shll
or
cltd
ljmp
inc
sbb
pop
mov
add
lret
adcl
pop
mov
in
inc
xor
in
iret
mov
sub
mov
stc
rep
mov
sbb
fstl
adc
sbbl
pushf
fcomps
out
and
pop
fcmovnb
sarb
frstor
cmp
cmpsb
push
push
mov
mov
cmpsl
es
xor
push
mov
aas
dec
mov
sub
imul
xchg
movl
in
push
sbb
aas
clc
and
dec
push
inc
sub
lods
je
xor
xchg
pushf
and
popf
mov
stos
imul
lcall
push
mov
pop
mov
jecxz
sbb
in
mov
sub
add
mov
jecxz
push
js
call
mov
or
or
or
ret
adc
repz
bound
push
push
loopne
insb
or
inc
dec
pop
xchg
fstps
mov
lods
dec
cli
in
pop
adc
cli
scas
insb
leave
dec
dec
push
dec
cmp
mov
fwait
mov
stos
push
imul
jae
inc
sbb
call
inc
and
jns
mov
or
mov
xor
or
lret
mov
jo
mov
push
inc
loope
scas
sbbb
add
and
dec
xlat
arpl
test
lds
roll
adc
add
testb
sub
movsb
out
sub
push
or
xor
sbb
adc
mov
into
dec
and
adc
xor
sbb
cwtl
mov
xchg
inc
lret
andl
inc
dec
ljmp
insb
scas
popf
push
mov
cmp
mov
sub
aam
clc
mov
pop
lods
out
xlat
sub
sub
dec
les
and
jae
cmc
mov
dec
jle
and
fbld
push
mov
xchg
cwtl
cli
push
mov
into
jmp
xchg
push
cmp
sub
mov
cwtl
adc
in
sub
xchg
inc
sahf
jmp
sbb
xor
sbb
sbb
clc
fxch
dec
in
adc
jbe
ffreep
imul
les
mov
mov
cmpsl
stos
pop
js
bnd
lahf
outsb
or
and
cmc
ds
mov
and
mov
mov
ret
sub
cmp
and
sub
test
push
push
nop
inc
mov
lret
cmpsb
lock
pop
xchg
je
out
stos
dec
push
pop
pushf
sub
dec
mov
loop
or
lds
and
insl
mov
out
cmp
addb
js
shr
cltd
xchg
je
mov
ljmp
xor
dec
xchg
loopne
and
pop
sbb
add
dec
jo
movsl
icebp
push
and
mov
das
movntq
insl
cli
and
xor
mov
adc
xor
fsub
cs
fadds
xchg
popa
inc
sbb
pop
das
nop
sub
jmp
lods
aaa
push
jae
in
daa
add
out
cmp
es
loop
in
addr16
incl
sbb
ret
icebp
adc
out
fisttpll
sbb
shlb
aad
and
jg
xchg
xor
mov
sub
cmp
addb
lea
fwait
test
cltd
inc
sub
in
xor
cli
mov
imul
bound
aad
out
and
push
sub
scas
rorl
call
xchg
mov
sbb
mov
enter
pop
stos
decl
neg
push
mov
mov
clc
rcl
lret
fisttpll
shrl
mov
sub
pop
or
push
sahf
dec
mov
bnd
jae
mov
lret
xchg
lcall
adc
sub
lds
data16
ss
out
jbe
mov
mov
testb
stos
xchg
mov
insl
jnp
jb
mov
aas
mov
xchg
mov
ja
xor
xchg
das
cmp
sbb
jp
fisubrl
loopne
adc
scas
lcall
sbb
fldenv
insl
lret
xor
sahf
out
daa
xchg
mov
cmc
fists
ds
push
int3
ljmp
rcrb
pop
pusha
dec
jle
xor
add
rorl
mul
cld
sbb
das
or
push
lret
mov
fiaddl
jno,pt
mov
lock
fstps
es
or
adc
pop
adc
add
xor
cmc
push
push
cmp
movsl
and
push
mov
mov
and
add
popa
push
clc
aad
adc
test
or
xchg
jb
or
stc
in
xchg
ss
push
ret
scas
addl
jp
repz
inc
add
imul
in
cwtl
aad
nop
xor
lret
mov
xor
mov
leave
pop
xor
je
scas
inc
xchg
out
xor
xchg
mov
xchg
lcall
jo
cmp
cmpsl
movsl
or
xchg
imul
inc
dec
loop
lods
mov
ffree
lds
cmp
sub
dec
push
pop
push
ljmp
and
lods
jno
or
or
rolb
pushf
adc
or
push
mov
pop
loope
cld
ljmp
lock
or
imul
ret
cld
clc
xchg
popf
sub
stos
dec
stos
push
cwtl
movnti
pop
sar
cwtl
pop
add
inc
dec
insb
inc
pop
movsl
loop
mov
sbb
dec
scas
cwtl
xor
push
xchg
es
mov
fldl2e
into
out
dec
mov
iret
cmpb
inc
xchg
mov
xor
lods
insl
dec
pop
les
fistps
pop
push
insb
fwait
push
push
adc
jl
loopne
lahf
je
push
push
imul
inc
pop
inc
xor
loop
repnz
je
sub
movsl
mov
xchg
inc
cld
cmc
add
lods
test
add
lcall
adc
sbb
pop
aam
sbb
fiadds
popa
shlb
xchg
add
fwait
js
test
jl
clc
stc
or
pop
int3
les
inc
pushf
dec
fnstcw
push
std
inc
xchg
cltd
push
jl
jmp
push
fwait
test
clc
dec
fs
fwait
cmp
imulb
jo
mov
adc
push
iret
mov
mov
jo
in
jp
addl
aas
or
fidivrl
fstpl
xchg
cmp
mov
mov
jo
jns
adc
daa
lods
mov
adc
sbb
ljmp
pop
mov
cld
or
cmp
inc
stos
ja
adc
shl
fucomip
and
jg,pn
mov
in
add
jge
fwait
movsl
mov
inc
sub
ret
xor
lods
mov
test
iret
outsb
outsl
and
fstps
sub
lahf
lahf
shlb
call
adc
sbb
adc
inc
mov
fidivs
insb
shlb
lahf
and
sbb
mov
pusha
adc
mov
in
test
jno
test
or
stos
or
push
insb
push
pop
out
lcall
cmpsl
xchg
xor
and
lds
shl
or
pop
cld
cmp
jae
aas
sub
pop
mov
inc
push
cmp
inc
test
pusha
mov
add
stos
push
nop
xor
mov
cmp
jge
push
test
aaa
cs
loope
mov
cmp
ljmp
call
push
jg
iret
negl
lcall
roll
pop
jo
and
mov
sbb
aad
ds
xor
mov
das
iret
fildl
addr16
adc
lret
pushf
xor
loopne
fsubrs
push
frstor
fisubs
stos
xor
lahf
xchg
jb
outsl
dec
outsl
cmc
pop
mov
fs
jo
cwtl
pusha
imul
les
xchg
cmp
pop
jns
and
dec
xchg
stos
adc
popa
insl
imul
out
sahf
stos
into
imul
inc
shlb
pop
aam
adc
pop
cltd
arpl
fs
sbb
je
jl
sbb
jg
or
xchg
mov
mov
add
or
xor
in
sub
fisubrs
lret
lret
es
lea
shrb
mov
loop
mov
aam
and
ss
adc
daa
dec
cmp
push
xchg
fstl
je
dec
mov
aam
mov
lret
xor
jp
pusha
pop
fucomip
xchg
inc
fucomip
cmc
inc
cmp
or
jns
pop
int3
aad
push
bound
and
pop
and
dec
mov
lods
cwtl
int
jne
push
mov
pop
push
adc
fsubr
mov
aam
ss
or
subb
add
sbb
sbb
or
xchg
sbb
aas
fstps
aam
sub
pop
and
fwait
mov
sbb
push
xchg
or
addr16
hlt
jmp
jne
jle
enter
pop
xor
push
jno
lock
add
pop
mov
ret
push
psubsw
stos
mov
shl
repnz
dec
and
jno
daa
jg
sub
cmp
xor
add
lret
push
xor
and
sbb
imul
jge
push
sub
push
cld
mov
lods
ret
or
mov
rcll
push
or
ss
cmp
insl
lret
dec
xor
xchg
pop
mov
std
outsb
dec
inc
orb
sub
ss
dec
xor
sbb
jno
jg
outsl
push
mov
push
pop
arpl
or
mov
lds
cmp
shll
push
mov
and
pop
sbb
mov
in
aad
jle
mov
test
rclb
xchg
jge
pop
in
idivb
push
jp
jmp
mov
mov
stos
xchg
pushf
adc
adc
je
adc
cli
adc
xor
lret
dec
addr16
cmp
add
mov
mov
nopl
pop
push
mov
inc
roll
sahf
jmp
and
fidivrl
push
ficomps
dec
aad
insl
mov
sub
xor
xlat
bound
test
push
cltd
xchg
pop
shlb
ljmp
or
pop
int3
mov
stc
imul
inc
lds
es
xchg
repnz
cld
ljmp
bound
xchg
imul
ret
subb
jge
sub
xor
add
imul
jmp
mov
adc
pop
fnstcw
xlat
sbb
and
dec
int3
mov
pop
add
mov
pop
pushf
dec
and
and
push
cmp
mov
lret
xor
mov
and
xor
cmp
ret
sub
xchg
pop
xor
das
mov
cld
dec
add
faddl
jmp
adc
addl
pop
sahf
jae
mov
mov
mov
mov
cmp
pop
gs
jno
test
gs
movsb
or
dec
pop
arpl
add
inc
cmpsb
xor
ja
hlt
enter
sub
mov
and
sub
decb
add
lock
dec
sub
out
loop
out
push
cmp
pop
scas
arpl
fisubrs
adc
jge
stc
icebp
int3
out
lods
mov
jno
cmpsb
add
loope
aam
sub
and
adc
mov
clc
dec
ret
dec
popf
fiaddl
xlat
inc
inc
cwtl
int3
bound
dec
xor
push
icebp
bound
scas
mov
out
negl
insb
add
loopne
sub
inc
fildll
fucomi
pushf
sub
arpl
xor
xchg
adc
push
jmp
jns
movsl
mov
jno
push
mov
inc
mov
adc
cld
cld
pop
inc
push
mov
dec
sbb
cs
data16
xchg
stos
xor
incb
xlat
inc
andl
out
dec
adc
fisttpl
cli
out
iret
leave
jne
loopne
fwait
cmp
xor
cli
cmp
shrb
out
pusha
lss
scas
cs
aaa
mov
cltd
fwait
sub
and
jae
cwtl
xor
repz
cmpsl
cmpb
push
adc
dec
addr16
jp
push
rorl
cmp
push
jb
sub
mov
sar
outsl
push
hlt
jne
cmpsb
out
popa
mov
mov
std
push
sub
loop
fidivl
fsubs
aas
push
jbe
dec
repnz
pop
mov
pop
fldl
pop
cwtl
popf
lcall
mov
mov
shll
adc
lods
loopne
loop
test
add
std
out
ret
jb
adcl
dec
test
ljmp
aaa
jge
mov
mov
ret
popf
mov
xor
push
push
cmp
push
sub
push
xchg
sbb
and
addr16
aam
addl
daa
stos
and
dec
pop
jb
sub
mov
jp
add
push
fcmove
inc
xchg
repz
mov
fldcw
pusha
or
adc
xchg
add
orl
test
stc
dec
xor
inc
mov
cmp
popa
addr16
test
aad
lcall
fcmovne
jne
cmpsl
pop
frstor
shll
orl
mov
and
or
sub
cli
and
mov
add
ss
ss
into
cmc
in
repz
cld
sub
insb
out
aam
xchg
mov
push
imul
scas
and
mov
inc
and
and
push
push
mov
push
cli
add
pop
dec
packsswb
mov
fs
js
sub
add
push
lret
aas
mov
insl
lcall
ret
xor
xor
imulb
fsubp
mov
repnz
or
xchg
popf
fdivl
mov
cmc
or
push
mov
mov
loop
in
mov
pop
mov
popa
cmp
iret
push
ljmp
jge
jecxz
and
pop
mov
and
insb
adc
rolb
mov
out
test
daa
ljmp
add
test
je
addr16
cli
sub
add
pushf
inc
int
mov
xchg
das
repz
jnp
ljmp
sbb
shl
insb
lock
in
jb
jmp
mov
mov
fistpll
jp
mov
dec
int3
lret
lock
cmpsb
popf
addr16
jne
mov
imul
movsl
and
scas
gs
fcoml
sbb
scas
pop
dec
lea
mov
adc
imul
push
lret
cmovge
sbb
or
lods
dec
jp
push
cmp
lock
movb
outsl
mov
addr16
mov
adc
and
add
and
mov
mov
fsubs
sbb
daa
insl
and
fistpl
adc
test
lcall
add
adc
mov
jae
sbb
jo
call
gs
sub
rcrl
subb
jle
inc
cmpsb
xchg
imul
inc
pop
mov
loope
test
hlt
mov
leave
mov
out
dec
sbb
rol
or
addr16
cltd
jb
add
fldl
push
ss
add
inc
pop
dec
stos
or
or
int
fsubrl
add
xor
sbb
add
test
aas
je
jae
fwait
adc
push
shll
rclb
jae
xor
ja
mov
inc
pop
mov
int
and
jg
stos
mov
push
jg
test
jne
inc
ficompl
jae
push
jge
pop
sub
movsl
test
pop
mov
xlat
icebp
mov
out
testb
inc
dec
lods
loopne
sbb
sbb
mov
push
rcrl
jbe
sub
cmc
in
jp
cmp
aad
aas
dec
jge
fs
sub
inc
jo
jmp
xchg
and
cs
hlt
mov
shlb
addb
icebp
add
xchg
xchg
fidivrs
lods
ret
jno
add
repnz
addr16
xchg
xchg
sbb
pop
adc
xchg
dec
jo
mov
movsl
shlb
adc
pop
xchg
sbb
out
add
test
not
lods
sbb
hlt
xor
push
addr16
int
ds
jmp
adc
repz
aam
nop
pop
sahf
loopne
fwait
lock
add
mov
fldz
jmp
push
imul
mov
or
cmc
xchg
add
pop
in
into
js
adc
adc
pop
mov
push
fsubrs
add
xor
or
dec
in
dec
ror
fildl
or
cmp
sub
pop
xchg
gs
xchg
and
push
ret
inc
fcmovnu
leave
sub
call
jg
mov
sub
mov
cs
cwtl
fdivrs
push
hlt
jo
sbb
cmp
aaa
jecxz
mov
bnd
and
or
inc
je
fldenv
add
clc
rorl
in
pop
sub
xor
movl
mov
repnz
ss
dec
add
cmp
in
dec
xor
adc
add
and
ja
daa
lret
rcl
or
aaa
dec
push
std
sbbb
jge
test
icebp
arpl
into
mov
popf
mov
add
inc
sub
pop
fcoms
mov
dec
movsl
repz
xchg
sbb
inc
push
lods
lret
mov
pop
out
movsb
pop
lods
or
add
ljmp
clc
jne
jne
dec
mov
mov
jb
mov
sbb
ret
lret
add
pop
not
stc
mov
cld
cmpsl
xor
outsl
aad
jge
mov
or
mov
mov
xor
inc
and
push
into
mov
test
pop
jne
inc
scas
cmp
je
and
cs
out
movsb
sub
push
push
and
adc
pop
roll
int3
pop
mov
lds
push
mov
ret
pop
mov
pop
test
add
and
mov
jnp
lods
iret
sbb
call
dec
xor
push
addr16
loopne
mov
sbb
xor
or
lods
dec
cli
push
dec
repz
cmp
add
adc
mov
mov
xchg
fists
cmp
sub
push
inc
lea
testl
ficoml
xchg
mov
mov
loop
cmp
test
lret
sbb
stos
jns
mov
fcompl
jg
lea
loopne
mov
push
std
pop
sub
mov
push
shlb
bound
cmpl
loope
or
push
adc
mov
stos
cld
or
scas
mov
out
dec
mov
push
subb
jno
outsl
mov
xchg
inc
or
mov
notl
test
ljmp
and
out
pop
pop
xchg
jns
mov
xchg
int3
xchg
pusha
xchg
push
xor
rol
ffree
or
add
jle
nop
xor
test
xchg
mov
pop
jmp
add
imul
cmp
cs
cli
jb
inc
lahf
out
mov
pushf
dec
test
daa
sahf
pop
and
cmpsb
pop
dec
fwait
dec
mov
dec
ret
push
movsl
lcall
in
sbb
lahf
jb
ret
xchg
dec
mov
lahf
xchg
push
mov
fidivl
sbb
mov
outsl
rolb
shr
mov
cmp
cmpsb
or
or
pop
std
jecxz
push
pop
aas
gs
cmpl
lea
lods
lret
push
pop
push
pop
cwtl
jnp
lret
sbb
dec
mov
xchg
add
xchg
mov
inc
cmp
aam
lock
jp
inc
jmp
sub
cs
lahf
mov
int
sarb
cmpsb
lret
in
dec
ret
shrl
mov
push
mov
jae
repnz
xchg
sbb
dec
clc
fwait
rcll
test
jecxz
inc
cmp
push
xor
xor
adc
mov
mov
popa
test
and
adc
sub
xchg
fwait
enter
repz
mov
or
jns
push
punpckhbw
pusha
xchg
enter
outsb
filds
insl
dec
mov
xchg
leave
pop
cmpsb
jbe
inc
cmpsl
out
jmp
xchg
mov
scas
inc
cmp
ficompl
sbb
jg
sbb
pop
iret
in
mov
stc
mov
repnz
dec
test
fwait
push
in
out
in
faddl
nop
sub
fwait
mov
ret
inc
sub
push
pop
adc
add
xchg
sti
sub
or
pop
mov
into
dec
mov
mov
adc
cmc
int
inc
inc
test
jnp
push
sub
jae
int3
sub
fs
sbb
jp
ljmp
and
scas
fs
aaa
sbb
inc
and
cmp
orb
inc
cmpsb
or
cmp
pop
xchg
push
inc
add
out
repnz
dec
xchg
mov
mov
jno
xorb
dec
stos
xchg
mov
jns
ficompl
push
xchg
push
xor
ds
enter
inc
mov
or
inc
fnstsw
add
pop
fnstenv
cmp
stos
mov
inc
pop
loopne
aad
addb
enter
cmpsb
cs
mov
sarb
adc
fwait
and
insl
cmp
or
pop
xor
arpl
rcrb
js
jnp
inc
or
add
xor
ja
mov
jno
mov
std
cmp
jbe
push
sbb
popa
adc
cltd
imul
out
lds
push
add
push
mov
sub
mov
pop
cmp
jecxz
push
push
and
mov
add
cmp
push
inc
xor
stc
in
inc
leave
inc
or
div
pop
cmp
add
pop
cmpsl
cmpsl
std
mov
sbb
repnz
dec
daa
jae
ja
adc
adc
leave
outsb
jle
rcll
and
andl
notb
iret
add
mov
sub
push
test
mov
stos
lods
mov
ds
mov
xchg
mov
dec
cs
dec
jecxz
ljmp
push
jp
mov
fnsave
cmpsb
mov
jmp
lcall
sub
setp
and
jne
imul
jo
arpl
inc
xchg
sbbl
jbe
insb
dec
push
dec
in
mov
ret
insb
in
mov
and
push
adc
lods
bound
aas
out
dec
dec
sti
sbb
pop
xor
mov
aam
out
cmc
pop
repz
mov
push
stos
and
jl
repz
xor
or
arpl
cmp
dec
xchg
inc
xchg
xor
movsb
sbb
in
lcall
fs
mov
mov
lock
hlt
mov
mov
xchg
xor
jnp
fsubl
dec
movsb
xor
icebp
icebp
scas
bound
jno
inc
pop
xor
inc
sti
rorb
mov
mov
fsubl
cmpsl
push
dec
cmp
and
sub
inc
jecxz
outsl
sbb
add
sub
mov
push
into
sbb
mov
data16
mov
jb
cmp
push
and
mov
in
and
jge
mov
mov
mov
int
fwait
push
jno
xchg
in
adcb
push
pop
add
or
pop
mov
stc
xor
sub
test
lret
lret
imul
push
cmp
stos
sbb
out
inc
aad
jb
jo
int
fs
in
sbb
fdivs
test
sbb
mov
mov
pop
test
and
std
xchg
stos
sub
pop
into
frndint
mov
outsb
dec
cmp
push
pop
dec
outsb
push
mov
int3
pusha
sbb
mov
fsubs
dec
test
outsl
push
dec
mov
ficomps
mov
adc
js
push
repnz
movsb
mov
inc
repnz
inc
pop
pop
aam
test
xchg
jnp
pop
mov
pusha
out
add
pop
aad
shrb
jno
jo
shlb
push
pusha
mov
mov
jbe
xor
xor
adc
push
stos
clc
aam
rcr
ficompl
mov
cwtl
in
jo
or
repz
pop
pusha
lea
test
mov
sahf
mov
sub
mov
jp
loope
outsb
xchg
push
dec
dec
rcrw
jl
and
cmp
lahf
xchg
jae
dec
pop
test
cmc
aaa
pop
mov
sbb
lcall
in
sub
leave
test
sbb
test
adc
xchg
xor
mov
cltd
mov
sub
add
xchg
jno
stc
sub
push
pop
pop
dec
insl
cmp
movsl
and
push
sbb
pop
daa
mov
mov
popf
mov
pop
sub
lret
in
pop
pop
out
iret
sbb
adc
cmp
out
shlb
or
movsl
imul
mov
jle
xor
nop
pop
mov
clc
sbb
fwait
in
jl
in
sti
cltd
add
imul
xchg
sub
inc
fwait
inc
pop
jne
fiadds
dec
push
jns
lds
push
jmp
jp
lret
shlb
xor
ret
aaa
jns
in
mov
inc
and
jecxz
lods
loop
mov
mov
aas
adc
lock
mov
dec
stos
js
cmp
ds
mov
ret
pop
fcmovnu
inc
mov
insb
add
mov
add
dec
push
flds
cltd
inc
inc
lret
push
aas
lods
mov
pop
mov
js
pop
inc
or
jne
insl
pop
ret
sub
cmp
push
leave
adc
push
add
sub
ret
lds
sub
pop
xchg
js
aaa
xor
shll
sbb
add
ja
inc
cmp
xor
js
stos
mov
ret
mov
jp
pop
insl
adc
cmc
insb
lods
sub
mov
jo
xor
out
je
rol
cmp
adcl
and
cmp
mov
test
xchg
arpl
subb
loop
addl
call
in
sbb
mov
push
mov
mov
and
lds
jo
sbbb
dec
jae
adc
sbbb
sti
sti
adcl
inc
lret
rcll
out
pop
ljmp
jge
out
add
inc
jle
leave
and
sbb
jp
inc
mov
out
push
sub
fldl2e
popf
jmp
nop
and
pop
dec
dec
inc
call
je
mov
push
fwait
mov
inc
pop
or
into
loopne
xchg
hlt
push
sti
or
push
sti
ss
xchg
mov
cmc
aam
sbb
pop
mov
cmp
adc
jo
sbbb
mov
pop
or
jnp
cltd
inc
jns
daa
jne
or
cmc
cltd
ficomps
sbb
into
push
jg
movsb
mov
int3
outsb
jae
or
mov
adc
fdivr
inc
out
sub
loope
lahf
iret
cs
jb
lds
iret
add
mov
xchg
cmp
mov
lret
pop
push
pop
mov
sbb
or
mov
ljmp
sti
sub
inc
push
xchg
pop
dec
int
sbb
push
divb
daa
fstpt
lock
inc
outsb
icebp
aas
jnp
xor
rol
jmp
mov
in
mov
sub
addb
cmp
mov
jmp
das
sti
stc
in
aad
gs
stos
sbb
inc
data16
or
mov
sbb
ror
std
pusha
push
or
cld
cmpsl
inc
inc
pop
sti
xchg
sbb
shrl
mov
mov
mov
fstp
pop
stos
cmpsl
sub
js
add
daa
pop
popa
in
add
xchg
insl
or
out
inc
ficompl
or
daa
in
and
pushf
push
mov
dec
js
mov
adc
xchg
inc
add
stos
test
call
mov
or
mov
ret
in
xchg
add
or
xor
jae
out
sub
xchg
sti
or
dec
pop
sarb
lahf
xor
mov
xchg
push
mov
into
sarl
hlt
movsb
pop
les
and
pop
jmp
cmp
mov
subb
mov
outsb
pop
mov
pop
dec
dec
adc
mov
cltd
ljmp
shlb
ds
pop
push
or
aaa
out
bound
mov
jne
mov
or
adc
cs
or
andl
jae
sub
sub
aas
in
xchg
loope
loop
test
pop
fdivrs
dec
lock
into
pop
lret
mov
pop
xor
pop
fildll
cmpsb
in
or
mov
cld
daa
lods
lret
lcall
xchg
xor
ret
daa
xchg
jb
cmpsb
and
in
mov
fldt
pop
sbb
jge
inc
pop
pusha
out
dec
je
adc
lods
fsubr
mov
leave
xchg
mov
push
pop
cld
pop
jge
cmp
jns
popf
mov
xor
pop
les
cmp
xor
sub
xor
sub
xchg
daa
and
xor
mov
lock
sub
sub
lahf
lea
pusha
in
pop
mov
jmp
cmpsb
data16
shl
mov
xchg
adc
inc
fstpt
stos
fwait
xor
insb
clc
aas
jmp
mov
gs
lods
and
pushf
sahf
and
dec
mov
aas
ret
xchg
lods
push
lods
mov
jl
mov
pop
push
gs
ror
flds
add
ds
daa
aaa
push
or
push
into
adc
ficomps
mov
mov
sbb
push
xor
je
lahf
pop
iret
ds
sub
stos
cmp
in
outsb
aam
jb
mov
inc
pop
repnz
xchg
xchg
xchg
sub
nop
in
rcrl
repnz
xchg
jge
xor
mov
or
pop
add
mov
lcall
daa
int3
stc
sub
sub
andl
add
ds
clc
or
xchg
mov
fiadds
xor
nop
out
ljmp
stos
imul
stos
jno
int3
out
dec
fdiv
pop
pop
and
xchg
mov
movsl
enter
cmpsl
addr16
xor
js
sbb
inc
cld
orl
jns
leave
ja
scas
dec
pop
int
jl
insl
jnp
jle
outsl
xadd
dec
ljmp
test
fidivrs
arpl
sbb
sbb
mov
in
out
pop
cmp
cmp
lock
pop
daa
jg
sbb
lahf
cmp
mov
out
push
mov
mov
jne
iret
outsl
enter
insb
xor
adc
ficompl
or
fists
pushf
in
in
xchg
int
mov
cmp
mov
jmp
mov
cs
push
xlat
dec
lret
pop
push
mov
push
nop
push
mov
sbb
lods
test
fstl
pushf
mov
movsl
jae
cli
jl
pop
xor
daa
je
cmp
pop
jmp
and
mov
addr16
jge
xchg
sbb
xchg
xchg
or
pop
lock
incb
sbb
iret
jge
ds
push
push
dec
push
xchg
insl
lds
das
cli
pop
pop
cmp
mov
xchg
jbe
push
pop
repz
pop
xor
push
cmp
mov
cmp
mov
sub
mov
cmpb
ds
jne
shrb
jge
lods
cmp
enterw
cmp
jbe
lds
lahf
mov
pop
bound
notl
pop
jmp
and
rcpps
sarb
jle
addr16
rcl
stos
sti
jne
pop
sbb
iret
pop
sarb
ret
mov
or
push
dec
dec
jp
inc
aas
in
pop
es
subb
ret
test
cmpb
mov
sub
mov
repnz
mov
cwtl
inc
xchg
xchg
dec
arpl
jno
into
pop
pushf
add
testb
push
push
test
push
and
mov
mov
pop
pop
push
mov
xchg
subb
fs
in
jmp
lcall
push
xchg
inc
test
test
sbb
mov
mov
push
adc
push
mov
xchg
decl
fcomip
loopne
jg
das
divb
mov
jmp
xchg
repz
rorl
add
mov
stos
data16
sti
mov
pop
jmp
orb
or
ljmp
ret
aaa
sub
aas
insl
xor
movsl
jp
je
mov
pop
jno
sbb
jno
lahf
push
jl
movsl
push
xchg
test
jo
fidivs
imul
cmpsb
lret
pop
in
pop
sbb
and
mov
aaa
aaa
mov
mov
xchg
xor
es
in
pop
ss
pop
add
dec
mov
sahf
jge
xchg
dec
push
arpl
add
xchg
jnp
xchg
in
jnp
call
inc
sub
lods
lods
jmp
scas
sbb
loope
sub
pop
and
inc
add
cli
nop
pop
popa
test
aad
xchg
sbb
pop
cmpsl
dec
lock
jl
lods
or
loopne
inc
push
or
pop
ret
mov
push
lcall
rcrb
pop
lret
imul
cmp
daa
jecxz
pop
ret
sbb
or
cmc
loop
shl
jns
xchg
xchg
icebp
pusha
push
lods
mov
adc
add
push
dec
and
xchg
fwait
add
mov
sbb
ljmp
je
cmp
adc
pop
mull
daa
int
mov
cmp
sbb
scas
jmp
mov
push
popf
hlt
test
cmp
jp
out
adc
popf
adc
stc
repz
sti
push
loopne
sbb
dec
mov
arpl
ret
mov
sbb
lods
cli
pop
fsts
loopne
test
jns
cli
jnp
rcr
scas
push
inc
imul
lret
fs
pop
add
pop
xor
mov
dec
push
mov
test
xchg
xor
push
mov
or
out
mov
sbb
or
pop
jbe
in
push
popa
ss
icebp
xlat
xchg
ds
pusha
mov
lahf
dec
aad
inc
and
je
pop
sub
fbstp
or
and
ret
rorl
in
mov
cmpsb
mov
xor
sbb
mov
nop
jg
jb
test
cld
subl
cmp
scas
sbb
add
icebp
mov
sti
sti
mov
pop
jg
aad
jp
je
cmpsl
ja
nop
out
ss
sbb
int3
xor
loopne
daa
sub
xorl
add
test
xchg
ja
pop
repnz
pop
push
or
nop
icebp
dec
bound
sbb
xchg
jne
pop
add
push
adc
mov
or
inc
dec
jp
fnsave
jne
jl
fs
mov
and
test
jg
jnp
mov
daa
push
loop
fstpt
ja
pop
inc
in
in
fiaddl
jnp
fdivrs
fucom
nop
lret
xor
push
mov
sbb
mov
xchg
add
adc
adc
add
add
stos
xchg
and
xor
sahf
inc
mov
mov
mov
xchg
sbb
pop
xlat
cmp
adc
sub
pop
mov
imul
or
jbe
lcall
xlat
shrl
pop
xchg
sub
and
sti
js
sub
std
inc
cmp
jmp
and
mov
xlat
fstpl
xlat
and
leave
jecxz
imul
push
mov
lea
xchg
loopne
or
xor
call
push
jg
stos
push
insb
ja
pop
rcll
cmpsl
das
jae
aad
pushf
fisttpl
adc
dec
pop
fldcw
mov
jl
push
insl
into
scas
inc
pop
push
jno
or
movb
lret
fwait
xchg
pop
dec
cmc
stos
xor
sbb
mov
popa
cld
stc
jb
mov
jge
xchg
stc
jle
cld
movb
add
cltd
jmp
mov
inc
lret
jp
idivl
imul
sbb
cmc
pop
into
xlat
lahf
outsb
outsl
add
scas
sub
adc
bound
push
add
jmp
sbb
inc
sub
sbb
inc
mov
mov
cmpsl
cmp
add
hlt
nop
out
sti
cmp
and
stc
test
fiadds
mov
fcom
cmp
stos
scas
mov
push
sbbl
jae
pop
insb
pusha
pop
icebp
in
cli
cmpl
jp
pusha
repz
mov
sti
movsl
push
pop
adc
mov
cmp
call
sbb
adc
stos
sub
in
xlat
sbb
pop
inc
adc
mov
test
dec
sub
jnp
jle
lods
xchg
jg
ds
mov
aaa
cs
lods
aaa
xchg
aas
jmp
fmuls
jle
std
inc
movsl
enter
xor
pop
cmp
cld
jle
popf
lcall
jne
nop
jno
adc
push
adc
out
xor
pop
mov
jp
xchg
mov
lret
xchg
mov
mov
mov
and
mov
sub
in
xlat
in
ja
je
jge
pusha
xor
xchg
mov
cmp
mov
mov
enter
lods
lods
cmp
xchg
sarl
jmp
movb
dec
xchg
iret
jnp
movsb
and
gs
test
jb
sub
stos
rcrl
mov
cmp
iret
or
mov
adc
sbb
into
ss
stos
sub
imul
cmp
outsb
lds
push
insb
das
inc
push
aad
jbe
shll
mov
adc
sub
fcoml
xor
aas
push
push
test
dec
mov
xchg
out
mov
xor
repz
in
xchg
xor
dec
fld
icebp
adc
in
bound
jecxz
lods
clc
lods
jno
push
lret
mov
in
rcl
pop
push
sub
or
cli
sbb
divb
xchg
sbb
loop
movsl
sub
xchg
pop
adc
jg
sbbl
xlat
dec
sub
push
or
mulb
adc
data16
dec
cmpsl
lods
cmpsl
and
lds
sbb
jp
das
push
pop
sarb
add
mov
enter
in
push
sti
cltd
lds
sbb
sub
aad
fchs
adc
jmp
cmp
iret
push
add
xchg
aam
clc
mov
test
sub
fdiv
cwtl
sbb
and
dec
mov
xor
pushf
and
aas
shrl
out
cmp
jle
popf
inc
rolb
mov
push
es
clc
nop
mov
mov
loope
in
jb
and
rcr
xchg
ja
in
lds
sub
sub
out
or
daa
inc
and
cwtl
jmp
and
inc
sbb
stos
int3
mov
outsl
test
dec
dec
test
out
js
or
iret
mov
insb
in
jg
fcmovnbe
push
xchg
js
mov
fmuls
and
sti
pop
popa
or
cmpsb
sbb
mov
pop
jnp
lret
mov
mov
dec
fistpl
int
adc
cld
add
inc
dec
pop
jle
xchg
out
test
divl
jp
arpl
sbb
xor
pop
outsb
outsb
sbb
mov
dec
into
ret
mov
imul
sub
movsl
dec
insl
jne,pt
mov
inc
push
notl
cmp
push
fstl
int3
es
mov
rcrb
outsl
nop
std
adc
sbb
pushf
cmp
rcrl
jno
lods
jl
int3
jne
push
adc
in
mov
mov
dec
mov
jae
sub
mov
xor
xchg
inc
xchg
pop
dec
xchg
or
aam
ret
or
pop
add
mov
pop
inc
testl
or
push
xor
adc
jnp
adc
test
xchg
push
or
inc
hlt
loopne
fsubrs
call
mov
pop
sbb
sub
outsl
and
les
sahf
pop
add
dec
dec
mov
mov
push
enter
jbe
inc
ljmp
lea
pop
mov
sub
jo
jae
out
fiaddl
fidivs
push
imul
adc
mov
dec
stc
mov
aas
xor
cmp
adc
pop
sti
adc
scas
jbe
and
movsb
loop
jle
cli
in
or
jecxz
push
cmp
push
leave
repz
push
mov
xlat
sub
and
incb
dec
adc
outsb
dec
sub
sbb
or
sbb
mov
mov
adc
aaa
xchg
clc
cmp
movsb
jle
inc
sbb
int3
scas
orl
adc
inc
sbb
mov
add
add
adc
aas
mov
and
inc
sbb
aad
sub
mov
cli
sub
orl
cli
push
dec
cld
clc
fidivl
add
fwait
dec
add
in
es
lcall
data16
inc
add
sbb
stos
pushf
and
cmp
xchg
cmp
std
and
iret
inc
add
icebp
das
sub
ss
addr16
fsub
cmp
mov
cmp
fildll
xchg
or
add
test
insb
lock
cltd
testb
xchg
lea
data16
lds
mov
mov
xchg
das
lods
jl
cli
jnp
mov
mov
ror
dec
push
mov
xchg
test
cltd
inc
jecxz
inc
pop
push
pop
mov
jb
movsl
mov
sub
rorb
ja
adcl
arpl
mov
cmp
lret
iret
adc
jb
mov
mov
in
sub
out
sti
or
and
ss
add
dec
ret
xor
cld
inc
xchg
jge
imul
loopne
enter
xor
clc
notb
std
int3
pop
stos
push
cltd
cltd
cmp
cmp
pop
jecxz
jo
pop
inc
push
scas
test
in
jecxz
dec
inc
dec
insl
ror
incb
clc
push
insl
jl
inc
push
adc
imul
dec
dec
inc
out
adc
lahf
out
inc
repz
sub
and
sbb
lret
inc
sub
lahf
lahf
add
int3
dec
loop
adc
or
in
test
inc
mov
push
inc
aaa
rcrb
pop
repz
xchg
divb
faddl
das
test
or
pop
pop
pushf
cwtl
or
pop
jae
ja
dec
mov
enter
rcl
lds
jle
adc
cmp
or
fs
das
mov
cmp
cmc
pop
sub
ret
jl
add
aaa
jae
addr16
push
out
cld
aaa
xchg
ss
lds
pop
and
xchg
popf
aaa
sub
jmp
roll
popa
jo
add
out
xchg
pop
or
sbb
and
push
sub
push
cmp
out
cmp
nop
pop
addb
jae
mov
mov
in
dec
mov
inc
xchg
call
mov
sub
nop
pop
cmpsb
push
xchg
and
push
ret
inc
popa
testb
jbe
mov
pop
mov
mov
mov
je
or
xchg
leave
push
das
lds
xchg
add
push
lret
push
lea
loopne
jno
lahf
pop
pop
loop
inc
data16
pop
mov
in
push
ret
enter
inc
out
stos
and
sahf
xlat
in
pop
jl
movl
jmp
das
nop
sbb
pop
sti
dec
in
jge
stos
xor
js
rolb
sbbl
mov
sub
incl
push
faddp
mov
test
stc
push
xlat
sub
cmc
mov
xchg
andb
jecxz
lock
push
add
test
push
push
das
push
sub
jl
jbe
std
cmp
pushf
fldl
pop
xchg
jo
and
mov
adc
cmp
popf
xor
fnstenv
pop
imul
repz
xor
inc
or
jno
hlt
push
and
inc
in
mov
inc
jns
cmc
lret
inc
jmp
mov
mov
loope
cmpsl
xorl
xor
int
or
jnp
sub
sbb
test
xchg
hlt
and
dec
iret
repnz
or
mov
lcall
hlt
push
arpl
mov
aam
mov
dec
clc
xor
or
fisubl
adc
jb
push
cwtl
cmpsl
mov
ror
inc
out
sbb
mov
out
das
int3
cmpsb
jle
jg
rcl
inc
in
lret
adc
fidivl
jl
dec
cs
fistpl
sub
xor
sub
cmp
adc
fstps
outsb
in
pop
test
pop
jb
push
jne
pop
outsb
out
push
pop
popa
leave
and
cmp
add
xor
out
mov
fldenv
out
push
shlb
jmp
fisubrs
pop
mul
jns
jnp
ss
add
in
out
into
mov
sti
sub
xchg
jg
dec
in
iret
out
int
int3
fwait
outsl
repnz
inc
mov
es
inc
mov
sub
xchg
push
cwtl
push
mov
pop
sub
push
insl
lahf
xchg
rorl
gs
and
xor
in
pop
jle
jb
mov
in
mov
stc
xchg
push
aam
add
rcrb
jle
adc
jle
or
mov
add
repz
dec
push
ja
ret
dec
pop
addr16
in
mull
jl
dec
push
cmc
movsb
add
jne
cwtl
adc
aad
xor
add
ret
mov
addr16
cmp
out
xor
cmpsl
fwait
in
mov
inc
je
mov
insb
cmp
cmc
add
sub
mov
das
inc
andl
mov
cli
sbb
and
arpl
sti
pop
push
test
adc
xchg
jp
leave
jl
cmp
sarb
out
addr16
jno
les
lods
sbb
xorb
inc
add
mov
jmp
sub
cwtl
pop
ljmp
loope
je
loopne
push
xchg
les
and
lds
jmp
nop
pop
inc
movsb
inc
cwtl
push
lcall
and
and
shll
sub
lea
fidivrs
sahf
mov
inc
pusha
and
adc
std
movsb
jmp
jns
jmp
test
rol
test
inc
fsubrs
inc
arpl
jl
jg
cmp
mov
inc
ss
xorl
lds
je
pop
nop
das
jle
ljmp
sub
sub
stos
sbb
xchg
loope
inc
push
js
jl
test
jae
add
imul
lahf
mov
lods
movb
cmpb
jb
shll
insl
dec
or
pop
test
xchg
jo
jmp
lock
mov
xor
mov
mov
mov
ds
xchg
loope
jle
adc
scas
sarb
sti
in
push
mov
pop
movsl
inc
add
push
insb
in
mov
fmuls
lds
int3
mov
jbe
xchg
and
pop
ja
mov
sahf
movsb
cmpsl
out
jmp
popa
push
in
leave
push
push
jp
mov
inc
push
rcl
inc
ljmp
lea
push
cwtl
mov
cmp
cmpsb
cmp
inc
adc
insb
in
decl
rolb
iret
in
jae
es
sbb
inc
pop
cmp
loop
add
mov
pop
jmp
bound
push
sub
fidivl
arpl
out
stos
sbb
mov
dec
mov
je
lods
jbe
stc
xchg
sbb
or
popa
jne
jle
mov
push
mov
nop
add
addr16
xchg
sbb
lds
sbb
insl
test
insb
push
pushf
clc
jl
into
stos
mov
popa
fimull
push
push
push
loopne
pop
rorb
nop
or
fisubl
xchg
lock
lret
mov
clc
notl
push
movsl
mov
scas
dec
lret
cli
sti
mov
mov
pop
sub
pushf
fbld
pusha
mov
hlt
loop,pt
jl
cmpsl
or
aad
adc
ja
mov
lds
push
cs
sbb
mov
fists
aaa
gs
mov
es
jmp
js
in
cmp
out
jns
mov
pop
lahf
sahf
cmp
jmp
cwtl
inc
aaa
jp
and
xor
mov
aas
mov
jg
cmp
pop
fldenv
xchg
xchg
adc
inc
mov
sub
pop
gs
cmp
movsb
imul
and
xor
je
rorb
stc
push
mov
and
and
jne
int3
les
movsl
cli
mov
mov
in
addr16
jae
xor
pop
lods
lcall
sub
jnp
add
sub
test
xor
xor
test
or
inc
xchg
ss
cmpsb
push
push
scas
lods
jecxz
xchg
sahf
mov
sub
test
inc
lret
or
aad
jmpw
pop
fwait
lea
mov
fs
bnd
pop
rorl
repnz
lods
std
fldl
mov
inc
dec
sub
jmp
cmp
push
mov
xorl
push
fs
inc
icebp
test
xchg
mov
outsl
mov
adc
add
movsb
push
cmpsl
leave
mov
or
jl
sub
mov
sbb
inc
mov
push
data16
lock
mov
in
data16
scas
pop
pop
and
aam
jl
push
push
imul
mov
lcall
aam
mov
pop
ficompl
ds
adc
pushf
push
jnp
ficomps
aas
pop
mov
lea
sbb
inc
sbb
gs
adc
add
enter
jl
xchg
aam
sub
movsl
jl
jecxz
mov
or
sbb
add
pushf
push
add
repz
xor
outsb
xlat
adc
add
inc
push
xor
pop
mov
outsl
outsb
dec
push
add
dec
mov
push
push
in
cmp
sub
sbb
xor
das
sub
push
xchg
iret
sbb
loopne
sbb
imul
push
frstor
xchg
xchg
mov
lods
rorb
pop
sub
fs
aam
add
cwtl
or
movsl
es
inc
sbb
sbb
xor
lret
xchg
data16
xor
add
test
lret
xchg
push
adc
mov
mov
jne
xor
stc
arpl
scas
mov
cmp
mov
fadds
xlat
fldl
push
push
add
xorl
mov
push
jge
xor
rolb
sub
ret
js
es
xchg
sbb
in
push
insb
ds
test
add
inc
nop
pop
js
inc
loopne
or
fisttpll
out
pcmpeqw
mov
xor
sbb
mov
int
test
aaa
push
add
ss
sbb
adc
add
aad
clc
mov
mov
push
bound
fwait
mov
inc
xor
out
lods
pop
lock
shll
mov
add
icebp
bound
jge
scas
shrb
mov
lds
out
sub
rcr
clc
pop
sbb
stc
loope
add
iret
sub
iret
sub
mov
mov
adc
and
mov
fnstenv
jno
cltd
inc
push
jg
loope
adc
xor
push
pop
dec
sbb
xor
sbb
stc
jbe
addb
out
xchg
ret
or
and
jp
xchg
psubq
dec
pop
rorl
cwtl
movsl
lcall
xor
sub
insb
data16
in
sti
leave
mov
stos
test
enter
lods
adc
les
jmp
repnz
loope
flds
mov
push
ret
mov
mov
xor
cmp
xchg
inc
jne
repz
fcoms
bound
add
sbb
mov
mov
mov
push
mov
push
mov
mov
xor
out
xchg
xchg
sti
data16
int
pushf
imul
imul
or
dec
retw
into
insl
adc
repnz
arpl
pop
lahf
cmc
cltd
jnp
jnp
popf
jecxz
mov
and
pusha
mov
cmp
sahf
popa
fxam
xchg
int
inc
fildll
scas
mov
push
movsl
pop
push
pop
mov
pusha
dec
rclb
xchg
xlat
push
jbe
ljmp
shlb
sbb
xor
popf
je
jnp
jno
add
lods
imul
cmc
iret
stc
inc
fldcw
lods
movsb
adc
std
xorb
and
repnz
arpl
outsb
dec
add
int
adc
sbb
aaa
bound
sbb
pop
shr
outsl
push
enter
addr16
lret
or
xchg
sarb
pop
cmp
loope
fcomip
scas
divl
sti
mov
jmp
cmpsl
dec
and
jb
cmc
push
mov
pop
insb
sub
stc
mov
cli
out
lret
and
loopne
xchg
pop
mov
pop
lahf
mov
pop
aad
gs
imul
mov
push
lret
add
adc
push
out
fistpll
adcl
aas
dec
lahf
bound
ja,pt
and
xor
test
fsubl
dec
lahf
dec
inc
in
repnz
push
inc
xor
mov
or
push
ret
inc
or
pop
mov
push
mov
faddp
das
cmc
aad
test
repz
clc
adc
add
or
addr16
cmpsl
and
mov
jno
pusha
setnp
add
iret
andl
adc
lret
inc
movsl
cld
push
arpl
xchg
outsl
sbb
mov
xchg
cli
mov
mov
jg
jb
jle
call
adc
mov
mov
out
inc
clc
sbb
jbe
xor
aaa
les
push
fisttps
stos
inc
xor
aas
xor
adc
mov
arpl
pop
lea
cltd
mov
aam
rcll
inc
push
push
add
popf
fcoms
pop
mov
mov
push
cltd
mov
int3
sbb
fldt
or
xor
adc
test
and
mov
out
shrl
pop
lock
pop
dec
fisubs
jae
xchg
aaa
jno
loope
add
inc
mov
jae
fadds
js
cmp
aas
jo
or
xchg
dec
xchg
sbb
and
jnp
and
int
push
dec
into
sbb
movsl
repz
and
scas
push
arpl
lods
cmpsl
test
cmp
ss
bound
hlt
in
stos
jbe
inc
sbb
adc
ficoms
fsubrl
std
out
test
cmpsb
dec
inc
subl
mov
cltd
push
cmp
bswap
jl
mov
cmp
inc
pop
in
sub
adc
gs
mov
jge
sarl
outsl
sub
stc
rorl
fxch
xorb
repz
mov
scas
repz
cmc
dec
lods
negl
fsubrs
inc
fs
std
xor
sbb
push
js
int3
pop
pop
rcll
push
insl
dec
jb
imul
fwait
cmc
fcoml
xor
andl
dec
pop
sahf
pop
inc
and
test
bound
inc
cmp
push
enter
mov
shll
dec
clc
pusha
lahf
loopne
mov
adc
push
lods
popa
repnz
daa
mov
rorb
inc
push
fadds
rcrb
es
and
pop
mov
adc
pop
sub
jb
movsb
mov
dec
mov
icebp
mov
inc
les
push
stos
ficompl
jb
loop
push
jno
inc
sbb
mov
xor
imul
and
sub
je
add
cltd
ror
inc
inc
xchg
es
pusha
xor
in
inc
add
add
call
pop
push
in
jae
mov
lea
pop
shr
jbe
lahf
xchg
sbb
jle
in
adc
out
xchg
aaa
jb
mov
ficoms
xchg
adc
repz
daa
jecxz
gs
push
push
pop
cs
lods
es
mov
daa
mov
cld
jae
cwtl
negl
in
std
repz
xorl
test
mov
lahf
gs
cld
sbb
mov
sub
and
out
cltd
loop
iret
insb
int
icebp
lret
jg
mov
ret
aad
push
pop
cli
jno
push
inc
and
and
inc
imulb
jg
and
out
push
and
pop
sub
jno
imul
sbbl
jnp
push
leave
addr16
cmovb
mov
pop
add
sub
xchg
push
adc
scas
jnp
inc
sbb
jl
cmp
test
pop
mov
iret
bound
daa
scas
sbb
or
xor
add
in
xlat
push
inc
lods
pushf
mov
and
inc
cs
add
call
sub
arpl
add
dec
dec
das
cmp
fs
shl
shlb
mov
dec
pop
aas
dec
clc
xchg
jae
stos
cmc
cmc
adc
pop
bound
xlat
or
cmpl
bound
mov
cmp
sub
jge
cld
iret
add
test
in
ljmp
fwait
add
fisttpll
lret
sub
dec
out
push
push
sbb
jmp
ja
popa
mov
loopne
inc
cmpsl
mov
and
pop
mov
gs
gs
sahf
je
mov
jge
or
pop
fs
int3
mov
add
push
ja
insl
aas
pop
lock
xchg
pop
mov
out
sub
in
dec
sub
fidivs
ds
lahf
hlt
enter
pop
jmp
pop
lock
mov
mov
pop
xchg
dec
dec
cmp
pop
aam
cltd
fistpll
insb
aas
jbe
and
mov
add
lds
mov
sbb
int3
mov
test
das
mov
pop
ret
inc
cmp
imul
imul
jl
repz
push
pop
mov
and
test
add
mov
inc
fwait
cmp
popf
lcall
jg
sti
negb
jle
mov
push
adc
enter
pop
mov
lods
mov
clc
xor
rcrb
fimuls
mov
rcrb
out
lock
ss
les
enter
xchg
and
std
mov
push
mov
mov
loopne
xchg
call
loop
cld
xchg
insb
sbb
lret
add
outsb
mov
lock
inc
pop
inc
ds
inc
pop
shll
sbb
js
repz
or
repz
cmp
mov
sbb
xchg
fwait
add
sbb
mov
outsb
testl
mov
mov
cmc
lock
fwait
loope
jl
mov
int3
fnstsw
xor
pusha
pop
out
cmp
stos
push
js
stc
pop
dec
and
ljmp
dec
inc
push
inc
nop
push
adc
xchg
out
dec
xchg
outsl
adc
pop
test
mov
pop
jge
subl
loopne
ljmp
popf
stc
mov
push
pop
pop
or
orb
xor
and
insl
xor
sbb
xchg
div
pop
sti
pop
jle
push
xchg
push
inc
jle
add
mov
jno
sub
jmp
pop
repnz
cmpsl
pop
aaa
jmp
jb
stos
imul
sub
mov
sbb
cmpl
inc
lock
xchg
shl
cmp
inc
sahf
push
sbb
push
dec
mov
popf
add
push
imul
fidivl
fs
loop
out
mov
sub
fidivrl
xchg
jg
lods
add
fnstsw
adc
xor
mov
inc
sub
xchg
insb
mov
mov
cmp
mov
xchg
jae
mov
push
popa
ss
inc
and
jg
fs
clc
test
leave
cltd
pop
or
out
lcall
jne
ret
leave
js
or
dec
mov
push
mov
out
and
pop
js
js
inc
pushf
push
sub
mov
mov
inc
out
movsb
aad
fildll
sarb
cltd
jp
movsb
or
pop
dec
loop
adc
addl
mov
jp
or
mov
cmp
dec
push
xor
fmuls
lock
mov
mov
insb
cmpsb
cmpsb
int
inc
out
pop
fldt
xor
sbb
cmp
mov
add
aam
mov
aam
pop
and
bsf
mov
aam
lahf
shl
jg
lods
mov
mov
cltd
xor
adc
add
xor
out
mov
sbb
jnp
addr16
dec
mov
int3
stos
outsl
mov
xchg
inc
movsl
xchg
dec
aad
adc
add
inc
push
aam
dec
stos
mov
insb
dec
sahf
mov
jle
clc
data16
mov
mov
dec
mov
pop
in
inc
jp
and
add
cmp
lahf
mov
popf
or
add
das
adc
xchg
sub
daa
sbb
push
cli
cmp
adcl
pop
out
and
dec
ljmp
shl
mov
dec
bound
jo
enter
ret
stc
xchg
enter
repnz
leave
mov
shrb
lahf
mov
jb
fildl
aam
adc
in
shrb
xchg
aam
sbb
lahf
jge
bound
test
lcall
mov
addr16
mov
xor
mov
mov
dec
jp
jno
arpl
cmc
cmp
xor
push
addr16
faddl
push
or
xor
push
mov
int3
aam
xor
lods
fcmovb
fsubl
lods
cmp
pop
aas
lods
dec
jb
imul
jne
mov
test
in
xchg
sub
lds
lock
dec
insb
loop
xor
outsl
xor
adc
inc
popl
ss
jmp
sbb
sahf
add
adc
xchg
int3
inc
xchg
stos
aam
cmpl
pop
aad
or
hlt
fs
sub
mov
jecxz
fs
rsqrtps
pop
jl
xchg
adcb
movsb
or
insl
fmul
push
sti
add
test
mov
mov
fsub
dec
lret
sub
push
jne
imul
dec
andb
add
mov
adc
cltd
aaa
loope
push
adc
scas
stos
mov
addl
xchg
push
stc
mov
dec
mov
arpl
ret
jne
lahf
push
pop
popl
cs
ret
dec
mov
and
test
cmp
mov
jns
jecxz
lods
mov
fs
or
aam
add
jb
jns
scas
in
ss
xchg
push
dec
pop
jbe
pop
andb
scas
push
les
cvtpi2ps
in
cltd
popf
ss
pop
dec
push
addr16
mov
out
and
cmpsb
xchg
cmp
stc
cmp
cmpl
sarb
repz
mov
sub
lret
dec
test
loopne
out
leave
cmpsl
inc
rorb
lock
push
mov
filds
sbb
rorb
xchg
sbb
mov
movsb
negb
cmpsb
jnp
mov
push
cwtl
ret
mov
test
pop
sbb
sahf
push
jbe
in
push
inc
inc
repnz
fs
jmp
gs
mov
sub
sbb
out
sub
jno
push
movsb
and
cld
in
push
scas
mov
pushl
testl
push
xlat
lahf
inc
cld
mov
out
mov
not
mov
push
add
adc
outsl
mov
std
cmc
dec
and
loopne
sbb
out
push
add
iret
jg
inc
cmp
sti
je
out
mov
sbb
push
sbb
popf
ret
loope
sahf
add
pop
jo
aam
in
mov
mov
loope
push
cltd
mov
movsl
adc
rcr
sub
cmp
pop
mov
repz
xchg
aam
js
cs
lea
push
xchg
shr
mov
push
adc
pop
data16
jnp
in
fwait
ret
inc
fs
jl
cwtl
movsl
stc
push
jae
push
adc
dec
jp
popa
cli
push
movb
lods
std
fadds
nop
out
add
sbb
jo
lds
pop
in
js
fcomp
mov
add
push
jne
add
cs
cmp
or
dec
push
aam
loope
xor
adc
inc
xchg
add
lret
add
mov
lea
mov
xchg
mov
mov
stos
jl
call
pop
push
aas
mov
sub
mov
scas
jb
hlt
push
flds
cli
lret
ds
lock
dec
xchg
ja
stc
popa
outsb
lret
aas
loope
mov
xor
subb
mov
in
jecxz
or
mov
movsb
sub
flds
shll
stc
lock
into
nop
cmpl
ss
cmp
leave
fisttps
mov
inc
add
push
sbb
mov
mov
or
into
dec
and
lcall
mov
test
inc
sarl
out
rep
sub
or
mov
outsb
out
mov
add
nop
adcl
jne
loopne
jl
mov
scas
push
test
fs
or
sub
imul
fisubrl
out
and
and
testl
sub
push
push
pop
outsb
pop
sbb
ljmp
cmc
sahf
roll
out
stos
jae
addr16
inc
jno
mov
jns
insb
aas
sub
pop
add
mov
push
pop
dec
push
adc
cmpsl
xor
xor
in
mov
cmp
pop
inc
mov
xor
lret
push
sub
mov
mov
into
and
mov
lcall
mov
fcomps
mov
aam
shl
lahf
mov
or
push
mov
cmp
lods
popf
add
pop
inc
sbb
inc
hlt
add
pop
pop
mov
mov
test
jne
inc
insl
xlat
mov
iret
mov
fs
daa
pop
pop
inc
mov
xchg
sub
mov
dec
jno
out
clc
aas
out
mov
or
aam
test
cs
out
int3
mov
xor
mov
cmpsl
cli
stos
cmpsb
jbe
fcompl
into
shlb
cld
mov
cld
mov
stos
push
mov
aas
lret
jno
call
push
adc
and
popf
xchg
push
imul
test
pop
add
pop
ss
test
xor
cwtl
pop
stc
je
or
mov
mov
dec
test
sbb
sbb
sbb
add
bound
pop
jne
in
mov
jnp
mov
jecxz
clc
push
adc
hlt
add
sbb
outsb
jae
ss
mov
pop
imul
lock
dec
sub
in
jno
leave
js
lock
pop
pop
arpl
and
jbe
push
sub
insl
icebp
xor
shrb
pop
xor
addl
sub
fadds
ficoml
mov
pop
fnstcw
mov
push
stos
mov
lcall
mov
idivl
cltd
out
push
fisttpll
cmp
ljmp
inc
pushf
lcall
xchg
xlat
aad
iret
add
inc
sbb
xchg
mov
aad
clc
sbb
gs
in
or
pop
cmpsb
movsl
leave
addr16
popf
xchg
push
jp
cmp
enter
pop
lahf
sbb
and
jp
sbb
lret
mov
inc
addr16
scas
stos
push
stc
aam
mov
iret
xor
xchg
push
into
or
pop
arpl
dec
jmp
enter
testb
into
subl
push
enter
jno
lds
nop
sbb
clc
mov
push
mov
fildl
adc
push
adc
clc
sbb
aaa
and
sbb
mov
aad
test
add
popa
adc
dec
insl
add
xchg
das
int
lcall
mov
sbb
sbb
insl
pop
imul
lods
push
mov
and
jg
pop
adc
out
int
xor
mov
je
and
insl
jb
jbe
cli
fnstsw
pop
repnz
xor
fisttps
cmp
inc
dec
rcr
mov
sub
push
les
sbb
sbb
stos
in
fwait
out
adc
lds
test
nop
mov
add
nop
sarb
aaa
sbb
inc
xchg
lea
test
shll
shlb
leave
jns
xor
or
ret
push
inc
es
cmp
mov
push
cwtl
sbbl
mov
mov
inc
loop
dec
rcrl
mov
pop
loope
fwait
incl
subl
pop
dec
outsl
jg
mov
pop
xchg
sbb
jg
out
mov
rcr
movsb
push
ds
lahf
mov
sbb
add
xchg
lds
sub
dec
dec
adc
dec
mov
lcall
cwtl
test
mov
and
out
ret
fs
das
mov
mov
and
sub
cmc
les
xlat
xchg
cmp
outsl
loope
pushf
lods
scas
sarl
mov
xor
xchg
or
inc
mov
mov
sub
leave
jnp
ljmp
ffreep
xor
mov
fildl
xchg
xbegin
inc
mov
sbb
hlt
out
and
stos
ds
jo
or
jne
adc
movsl
mov
in
inc
push
pop
sbb
xchg
mov
pop
test
and
cs
imul
jmp
mov
pop
nop
push
int3
fstp
sarb
add
mov
sarl
inc
cmpsl
add
mov
mov
nop
std
pop
xor
or
sahf
daa
cltd
ss
imul
cld
rorb
add
sar
das
push
adc
mov
movsb
in
add
rcr
push
popa
add
ljmpw
pop
xchg
mov
mov
outsl
cmp
mov
js
mov
testl
sbb
jo
loope
xor
adc
mov
cmp
fiadds
add
lahf
jl
ret
dec
iret
or
popa
shlb
sub
xlat
dec
in
mov
in
dec
or
roll
fwait
sbb
fidivs
mov
dec
outsb
jnp
pop
outsb
add
mov
jecxz
jno
mov
test
xor
rcl
in
xlat
push
loopne
cmc
pushf
lret
push
push
loopnew
mov
pop
int3
mov
pop
adcl
lods
inc
jmp
mov
and
pop
addr16
xor
xchg
sarl
icebp
nop
adc
pop
inc
mov
dec
shrb
imul
lret
stos
js
xchg
fisubs
ss
sbb
aam
scas
fstpt
minps
push
adc
jnp
int
add
xchg
fmuls
popa
mov
sbb
imul
repnz
mov
pop
pusha
cs
fs
pop
aaa
jae
jo
ret
movsl
mov
outsb
jnp
iret
int3
sbb
add
sub
imul
adc
js
push
iret
jbe
aas
add
cmp
fxch
movsl
xlat
jb
dec
jge
dec
clc
pop
rorb
dec
pop
call
pop
enter
loopne
mov
sub
test
adc
cmp
je
inc
les
dec
adc
and
mov
sahf
xchg
and
cld
push
fwait
cld
jmp
or
or
inc
inc
std
in
cmpsb
dec
ds
aas
fldenv
ja
or
movsb
fildll
add
cwtl
imul
adc
adc
mov
mov
stos
pop
mov
and
gs
in
pushf
int3
les
inc
lds
rclb
jp
jbe
mov
jge
shr
xor
lcall
push
cli
daa
push
xorb
pop
shrl
pop
push
xchg
test
fnsave
sub
je
test
in
push
inc
loop
push
fbld
inc
push
xor
lret
mov
adc
sub
cwtl
adc
and
push
sti
in
cmp
rcrl
pop
jno
or
pop
xchg
dec
xchg
arpl
test
outsb
lods
jne
xchg
mov
dec
pop
adc
xorl
sub
jmp
sahf
lock
daa
jecxz
and
ds
cmpl
xchg
aam
leave
xlat
nop
int
rclb
pop
dec
add
sbb
push
icebp
cld
mov
cld
inc
scas
ret
mov
push
fildll
adcl
xchg
mov
pop
lock
xlat
gs
pop
fisttpl
xlat
pop
lea
insl
push
mov
test
jecxz
pop
pop
mov
xor
std
sbb
ss
outsl
in
jnp
mov
out
push
dec
or
subl
mov
xchg
in
shrb
xchg
adc
in
jecxz
leave
add
push
gs
cmp
adc
xor
and
xchg
in
add
repz
fisubrl
and
loope
add
imul
xor
inc
mov
xchg
ret
add
or
aas
or
inc
push
jle
and
jne
add
mov
loope
in
push
cwtl
push
jmp
icebp
xor
sbb
cmp
cmp
in
ret
shll
sbb
sbb
mov
das
ret
pop
rolb
lds
mov
rcrb
cs
fcomps
adcl
repnz
fcmovbe
mov
aas
xor
mov
adcb
ja
or
in
pop
ds
arpl
push
int
mov
jns
cmp
test
shlb
jo
movsl
mov
xor
push
push
xor
or
ret
push
je
icebp
inc
std
rclb
inc
test
sub
push
scas
xchg
cmc
jnp
inc
cmc
lods
pop
inc
mov
mov
data16
pop
ja
ficoms
je
lds
or
sbbb
adc
cld
mov
jmp
jb
movsb
dec
aaa
sub
data16
test
pop
lret
mov
jb
jne
mov
pop
testl
ret
push
adc
decl
inc
inc
decl
insl
insl
xor
out
popf
mov
dec
mov
js
mov
xchg
mov
popa
xchg
cld
mov
hlt
fsub
pop
and
lret
mov
or
fistps
shll
fisubl
mov
push
scas
repnz
or
jg
or
lea
cmpb
mov
cmpb
and
ljmp
movsl
mov
mov
data16
dec
add
and
push
std
cli
pop
jne
cmp
int
loop
test
and
or
push
cli
stc
push
push
ds
mov
or
je
repnz
subb
sti
mov
xor
ffree
xchg
inc
mov
cmpl
dec
lcall
mov
ss
xor
jno
loope
and
lods
jcxz
test
cld
test
subl
cmc
sub
in
add
mov
aam
scas
xor
repnz
aaa
inc
dec
lea
sbb
ds
cwtl
fs
sti
mov
push
and
fdivrs
insb
jno
and
lcall
push
int
push
movsb
xor
or
inc
mul
inc
stc
clc
jo
push
xor
cltd
push
xchg
imulb
and
or
push
fcmovne
push
out
pop
sbb
adc
pop
fidivs
pop
adc
xchg
mov
xlat
and
mov
push
push
xchg
addl
jecxz,pn
leave
insb
mov
xchg
push
cwtl
mov
rcrl
push
test
xor
ficoms
mov
push
popa
mov
jns
bound
mov
in
pop
cmp
adc
mov
fwait
cmp
jmp
ret
jge
or
sub
xlat
cmp
push
or
xor
xor
lds
mov
xor
out
scas
mov
push
js
and
xor
or
mov
dec
pusha
lcall
push
mov
cli
jae
repnz
mov
inc
into
mov
push
popa
add
inc
mov
cmp
sub
mov
decb
cmp
lock
scas
inc
hlt
pop
mov
push
jne
fistpll
pushf
inc
add
popf
cmp
add
leave
mov
mov
sbb
mov
ljmp
imul
xchg
xor
cmp
add
sub
inc
cwtl
mov
push
mov
pop
mov
cmp
cmp
into
fstl
pushl
jge
sub
add
insl
test
pop
xchg
je
jl
or
mov
inc
mov
incb
cmp
cmc
jbe
jns
or
loopne
jp
mov
xchg
mov
mov
aas
adc
out
enter
pop
dec
inc
cmp
iret
fdiv
pop
ficoms
ljmp
jne
xchg
or
cwtl
inc
icebp
xor
ret
mov
lods
cmp
cmp
aaa
mov
les
inc
inc
xchg
test
adc
xor
push
xor
in
out
and
out
fiadds
pop
mov
or
xchg
jle
in
pop
push
arpl
sub
nop
cmpsb
xor
std
repz
lcall
push
sbbb
outsl
fwait
aaa
out
sbb
mov
inc
push
mov
and
sub
sahf
jb
iret
lds
test
fidivrs
adc
shrb
push
andb
lret
mov
imul
push
lret
pop
ja
mov
jnp
add
sbb
adc
add
mov
hlt
repz
out
xor
push
push
pop
call
add
or
and
clc
ret
iret
fistpll
pop
fwait
xchg
cmpsb
mov
test
inc
mov
xchg
stos
lahf
out
or
xchg
mov
adc
jp
aad
mov
dec
outsb
in
hlt
jo
outsb
jp
lret
or
cltd
adc
leave
push
push
push
pop
inc
mov
jecxz
xor
ss
jns
jnp
cmp
imulb
scas
xor
fs
in
lret
test
push
inc
or
push
sub
push
scas
or
push
popa
jge
sbb
in
xchg
cmp
aas
shrl
push
lods
out
push
mov
sbb
push
movsl
jle
add
jmp
int3
iret
inc
lock
daa
cmc
fdivrl
sahf
mov
out
bound
push
cmp
pop
or
sti
cmc
pop
outsb
dec
stc
sub
mov
sub
je
mov
out
aaa
stos
mov
pop
mov
cmpsl
jne
push
ficompl
insb
jo
aad
mov
inc
jge
mov
sbb
movsl
push
cmp
jle
test
repnz
or
inc
jg
adc
jb
add
push
mov
aas
cld
pop
pusha
cs
pop
push
rcll
rcl
sub
leave
push
and
xor
mov
xor
daa
xchg
cld
js
inc
mov
mov
testb
and
scas
aas
sub
dec
sbb
into
adc
scas
add
ljmp
jns
push
lea
fs
dec
aad
add
cmpsl
inc
mov
imul
dec
and
idiv
aam
mov
stos
xchg
sub
hlt
push
xabort
std
push
popf
jb
xchg
mov
mov
and
add
mov
jne
movsl
das
mov
mov
test
dec
imul
ret
push
pop
xchg
pop
ja
sbb
inc
outsl
enter
pop
scas
arpl
mov
mov
or
push
adc
test
mov
in
xchg
jnp
xchg
mov
leave
mov
mov
loop
adc
and
mov
leave
dec
xchg
jle
mov
out
iret
loop
lods
xchg
mov
dec
push
xchg
mov
fcomps
inc
pop
dec
popf
movl
xor
or
cmpsb
jne
scas
xor
ja
or
mov
insb
idivl
dec
filds
mov
shlb
lods
arpl
or
xchg
ljmp
insb
enter
popf
jge
fcoml
mov
push
cmpsb
or
ret
mov
dec
int3
xchg
jae
sub
cmp
jp
mov
mov
or
outsl
pop
aaa
pop
js
js
adc
dec
mov
stc
loopne
inc
roll
scas
jne
ret
popa
pop
jmp
clc
shrl
dec
mov
adc
pusha
dec
outsl
dec
lahf
cld
cmpsb
les
das
pop
xchg
push
push
adc
dec
lret
bndstx
inc
rolb
outsb
in
movsl
dec
sbb
push
mov
pop
movsl
mov
mov
mov
inc
mov
int3
popa
push
cmpb
or
cld
adc
in
sahf
xor
fmuls
pop
fistpl
mov
inc
out
cmp
vmread
cld
stc
mov
pop
mov
pop
je
test
ficompl
xor
push
xchg
or
outsb
mov
scas
adcl
dec
int3
jbe
and
xor
sar
inc
in
add
jmpw
adc
lods
dec
cmpsl
repz
adc
adc
enter
xchg
lds
arpl
neg
fadd
es
test
add
leave
mov
mov
or
cmp
jle
cmp
mov
movsb
int3
into
inc
mov
jmp
xchg
xchg
mov
pop
push
pop
pop
stos
inc
enter
inc
or
popa
pusha
mov
or
add
xlat
je
mov
sti
popa
mov
mov
adc
call
stos
xor
mov
jbe
add
cmp
adc
xchg
inc
lds
mov
je
popf
and
dec
mov
xor
lods
pop
in
out
inc
cltd
sub
in
daa
lock
pop
loope
and
xchg
popf
dec
pop
es
pop
adc
dec
xchg
fs
sub
jb
in
xchg
pop
pusha
push
ret
das
in
aas
mov
mov
and
mov
aad
stc
clc
es
inc
adc
out
pop
call
mov
dec
sbb
pop
test
sbb
test
into
sbb
push
xchg
shl
addb
add
lea
add
xchg
popf
enter
scas
test
sbb
sbb
lret
in
sahf
pop
aaa
inc
test
mov
xor
ret
dec
loope
dec
or
pusha
sub
bound
test
xorl
add
out
pop
daa
leave
and
repnz
rorb
xchg
fmull
daa
cmpsl
addb
shlb
jle
xchg
or
hlt
cmc
lret
jmp
stc
shlb
mov
jmp
jno
movsb
aas
cmp
adc
shl
rcrl
stos
stos
add
es
lcall
sub
inc
les
xor
inc
ss
lcall
nop
fldcw
xlat
pop
xchg
frstor
sbb
into
dec
sub
sbb
add
push
sbb
sub
ret
mov
sarl
in
push
adc
cs
test
frstor
int
clc
or
hlt
mov
dec
lcall
push
test
inc
hlt
and
mov
cmp
inc
jb
dec
ja
pop
stos
jge
adc
mov
es
test
xor
mov
cmp
add
das
mov
pop
adc
pop
push
cmp
mov
inc
or
addr16
and
repz
fs
movsb
adc
test
lcall
lods
enter
pop
shrb
push
and
stos
or
loopne
mov
lock
addr16
test
ja
insl
adc
push
mov
cmp
fimuls
or
ds
std
sbb
sbb
bound
push
icebp
idivl
mull
pop
icebp
icebp
in
jge
inc
rcr
cli
push
sub
jne
fstpl
or
imul
je
lds
lea
inc
jmp
mov
iret
inc
outsl
outsb
mov
hlt
mov
adc
pushf
xor
adc
push
adc
fadds
in
jae
fdivs
ficoml
xchg
cmp
mov
stc
inc
adc
and
sub
xlat
adc
adc
mov
in
pop
mov
jle
hlt
cmc
dec
popa
pop
addr16
stos
clc
xor
sub
pop
lret
push
mov
pop
test
sahf
pushf
movsb
pop
ljmp
xchg
mov
or
adcb
std
scas
aas
mov
add
xor
mov
mov
pop
aaa
cmp
pushl
shlb
or
imul
push
insb
inc
and
orb
dec
dec
adc
push
test
loop
mov
gs
hlt
xchg
cwtl
add
rorl
pop
iret
pop
in
stc
or
subb
xchg
lods
pop
mov
or
aas
cli
mov
int
mov
jecxz
sbb
and
pop
clc
jb
mov
mov
mov
sub
mov
loope
scas
and
mov
cwtl
sbb
fsubs
popa
cmp
xchg
dec
add
mov
adc
loop
push
adc
adc
mov
push
push
jmp
daa
xchg
xlat
add
es
cli
insl
pop
fbld
sub
mov
frstor
icebp
pop
and
out
mov
xor
xor
or
in
xchg
shrb
add
loop
stos
xorb
test
out
dec
notb
imul
push
and
clc
mov
in
xchg
addr16
cmc
loopne
and
jns
and
bound
xchg
mov
shlb
ror
aas
in
decl
push
test
roll
les
xorl
pusha
and
sahf
rol
jbe
testl
push
sub
lds
fdiv
xchg
inc
insl
stc
dec
dec
mov
inc
mov
mov
iret
lret
pop
dec
xchg
insl
sti
or
loope
push
xchg
or
or
mov
adc
jb
roll
inc
lcall
push
popf
lret
adc
out
mov
arpl
jl
jnp
js
in
out
outsb
sbb
inc
in
adc
adc
dec
jo
xchg
es
sub
ds
stos
push
adc
arpl
mov
push
sbb
in
aaa
in
sbb
xchg
add
aam
mov
in
int3
loope
ja
enter
xor
mov
in
lcall
add
aaa
outsb
sbb
adc
ss
pop
testl
push
movsl
sub
pushf
add
cmpsb
mov
lods
repz
sti
xchg
mov
mov
xchg
cmp
lret
jne
in
or
ret
shlb
sarb
movsl
int
fsin
leave
dec
pop
nop
popf
xchg
xor
sti
mov
clc
xlat
ss
cli
xchg
leave
sub
push
push
addr16
nop
and
mov
mov
stos
sub
lea
adc
es
rcrl
adcl
jmp
in
sti
aas
sti
out
out
jecxz
js
repnz
adc
imul
push
push
out
dec
notl
or
ret
sub
stos
das
xchg
sbb
imul
int
pushf
mov
les
lcall
jl
lds
jnp
sub
mov
mov
movsl
mov
dec
subl
sbb
ror
idivb
sub
aaa
xor
inc
mov
xor
mov
lea
icebp
adc
mov
and
in
mov
mov
aas
test
inc
repnz
mull
shl
jecxz
pop
repz
sub
out
stc
lea
fs
repz
push
push
jb
or
gs
shll
mov
in
or
jg
xchg
add
sbb
mov
lea
fcompl
pusha
mov
fstps
sub
sbb
jecxz
rcrl
ret
cmpsb
out
fisubs
mov
jmp
fcmovne
pop
arpl
cmp
xchg
int3
cmp
int
into
pop
inc
test
sub
push
push
cmpsb
repz
shlb
jl
xchg
aad
mov
adc
subl
inc
fwait
jle
fnstcw
mov
daa
pop
movsb
inc
lahf
jae
push
js
js
add
lods
mov
or
inc
mov
pop
pop
and
xor
aaa
filds
hlt
test
and
mov
add
mov
test
mov
mov
jo
pop
rolb
sahf
dec
testb
and
addr16
imul
insb
xchg
sete
mov
cmp
mov
and
inc
in
loop
sub
bswap
push
movsb
fxam
jb
or
aaa
imul
fwait
cmp
outsl
mov
add
pop
lods
add
adc
pop
mov
dec
rcrb
out
jp
aad
xchg
pop
mov
and
fldlg2
loope
and
and
pop
and
sub
test
je
iret
adcb
out
ficompl
loope
sub
out
xlat
jb
and
pusha
add
popf
out
fwait
push
or
int
dec
scas
mov
mov
jne
jle
xorl
xor
pop
push
add
ret
dec
xchg
inc
sub
hlt
in
xchg
xchg
cmpsl
cmp
and
ret
xchg
add
pop
and
mov
lods
jle
imul
xor
fidivrl
jg
in
push
adc
out
lret
pop
xchg
mov
jnp
repnz
int
push
pop
xchg
adc
and
adc
mov
je
repz
flds
fcmovnbe
jb
sub
or
lret
sbb
in
sub
imul
and
fbld
daa
mov
pop
add
int3
lds
dec
or
mov
mov
add
jno
mov
mov
pop
add
pusha
sub
dec
xchg
test
push
bndldx
in
les
loop
and
push
arpl
and
mov
sbb
scas
xchg
jg
cmp
in
xor
jge
fsubl
jbe
or
movsl
shll
ss
mov
enter
sub
pop
test
jno
adc
pushf
xchg
test
in
or
insl
xorb
pop
std
xorl
jge
scas
mov
pop
xchg
jne
jge
xor
jo
out
xor
cmpsb
mov
or
lahf
pop
nop
inc
lret
mov
jg
les
call
jo
gs
xchg
or
push
sub
fstpl
cmp
in
pop
out
mov
cmp
mov
fmuls
and
ret
icebp
test
dec
dec
cmp
adc
les
xchg
xor
or
adc
mov
pop
cmp
test
cmpsl
xorb
sub
xchg
cltd
test
mov
inc
push
cmp
xorl
leave
pop
dec
cld
fwait
mov
lock
mov
sbb
jne
stos
sbb
xor
cmp
sub
stos
popa
pop
hlt
repz
cmp
bound
sti
movsb
cmp
and
and
in
out
addl
icebp
lret
lahf
or
cltd
dec
in
and
stos
popf
rorb
scas
adc
ja
sahf
add
push
dec
fsts
orl
pop
mov
xlat
shlb
stos
dec
rorl
nop
push
out
pop
fs
mov
shll
pop
sti
mov
iret
and
scas
dec
imul
push
clc
xchg
pushf
or
loope
xchg
xor
xchg
fisubrs
and
pop
cltd
js
xor
mov
das
sbb
cltd
inc
inc
movsb
push
mov
fstl
addr16
out
data16
repnz
cmpsb
add
loope
jne
lret
test
aam
ret
cmp
jecxz
mov
jb
or
sub
jnp
push
jg
inc
inc
push
cmp
push
outsl
out
dec
xor
mov
mov
lock
outsl
push
fwait
jno
and
out
incb
sub
scas
hlt
xor
fs
sbb
and
mov
adc
cmp
mov
shll
inc
mov
stos
leave
push
xchg
nop
sbb
stos
lret
xlat
mov
imul
dec
cmpsl
fmull
pop
insl
xor
mov
mov
add
lods
shl
sub
inc
pusha
imul
mov
lret
je
clc
and
sub
jo
inc
sti
aas
test
stc
imul
jg
xor
out
rorb
aaa
mov
adc
xchg
lret
sti
xor
mov
sub
inc
push
jnp
lcall
xchg
pop
and
xchg
mov
pop
add
test
inc
jb
aad
mov
aaa
cmp
inc
movsb
xor
sub
dec
in
or
add
fidivrs
adcb
dec
adc
xor
xchg
adc
jecxz
stos
cmp
pop
js
cltd
repnz
sbb
push
push
cmp
mov
int
xchg
stos
sti
shrb
arpl
in
mov
fistpll
cmp
fstpl
xchg
ficoml
push
jae
stos
jae
das
mov
mov
jg
es
xchg
jnp
out
in
ffreep
scas
mov
in
lcall
push
cmpsl
and
cmpl
xor
inc
lret
emms
inc
movsb
adc
leave
imul
int
lea
push
std
mov
out
pop
sahf
dec
jne
fsub
jmp
fsubl
mov
popa
cli
sahf
xchg
test
inc
adc
sbb
jmp
test
ret
jecxz,pt
xor
inc
jbe
pop
mov
inc
aad
push
sbb
sahf
call
add
xor
push
and
pop
loope
xchg
das
into
jg
mov
jo
push
pop
in
pop
repz
inc
fisubl
fldt
mov
ljmp
loope
mov
call
call
xchg
in
jo
daa
add
xchg
cmc
push
sahf
inc
xchg
loope
jne
pop
mov
and
loopne
dec
cmp
loopne
pop
jge
insl
ret
push
add
dec
outsb
ja
fcmove
lock
or
jns
and
stos
cmp
inc
pop
insb
mov
pop
xor
dec
mov
aas
sub
push
cmp
ss
andb
pop
xor
sarl
push
into
inc
cmp
cmpsl
pop
pushf
imul
lret
jo
lahf
add
push
fdivr
and
mov
or
jo
cmpsb
and
mov
xchg
sub
add
mov
lret
mov
push
int
mov
stos
mov
jb
popf
and
fisubs
sub
mov
mov
jno
jnp
out
repnz
pop
jno
dec
bound
inc
addb
in
sti
aas
adc
out
xchg
lret
xor
dec
xchg
scas
int
sbb
ljmp
je
mov
dec
mov
lcall
notb
sti
mov
cmp
adc
push
mov
pop
xchg
lcall
mov
jge
shrl
sub
in
mov
sbb
sub
hlt
adc
popa
or
inc
ficomps
out
xchg
dec
and
xor
imul
setnp
test
shr
adc
fimull
movsl
inc
icebp
gs
sarl
adc
cwtl
xchg
js
int
fcomps
mov
xchg
inc
lcall
fistps
je
or
popa
xchg
push
je
scas
adc
loop
out
mov
lods
in
xchg
lods
cmpsl
out
sub
lds
mov
dec
jnp
add
push
mov
dec
jle
xchg
jl
push
add
lea
adc
jmp
fcoml
out
adc
in
xchg
add
ja
out
aas
lock
inc
dec
stos
lcall
movsb
aad
xchg
mov
std
test
mov
nop
or
xchg
push
cltd
arpl
jne
les
outsl
cld
push
mov
or
dec
pusha
movsl
xor
loopne
icebp
jecxz
outsl
inc
cmp
fwait
test
xor
cmp
mov
pop
xor
sbb
ret
jmp
mov
movl
ljmp
movl
xchg
inc
dec
pop
cmp
and
out
jmp
push
mov
gs
rol
jno
ljmp
stc
insl
jle
pop
push
in
xchg
pop
jp
nop
xchg
pop
mov
mov
jmp
sub
sbb
sti
dec
mov
sub
push
push
test
cmp
imul
cmp
sub
mov
adc
lods
lods
maxps
cli
hlt
dec
xchg
cmp
test
movsl
adc
jle
or
mov
test
out
mov
stos
popa
insb
sub
add
loopne
in
mov
add
or
mov
mov
test
pop
mov
and
leave
cmp
add
cmp
and
es
ret
out
lea
xor
dec
mov
cltd
jmp
loopne
adc
and
push
jb
into
dec
cmp
sti
popa
push
movsb
inc
imul
inc
pop
sbb
pop
xorl
xchg
clc
cmpsl
outsb
les
sub
sbb
jecxz
hlt
ljmp
divb
ret
jmp
mov
push
ja
into
in
jmp
sub
clc
push
jle
jb
andb
in
and
jecxz
xchg
sahf
stos
add
lret
lcall
mov
pushf
mov
cmp
icebp
aas
mov
jnp
stos
sub
or
pop
sub
fldenv
sub
xlat
hlt
in
addl
dec
fwait
divb
xlat
popa
jg
clc
cwtl
dec
xchg
decl
andl
mov
mov
pop
pop
push
sbb
xor
xchg
out
sti
mov
mov
push
stc
pop
imul
fisttpl
sbb
dec
push
jno
or
ljmp
int3
mov
mov
mov
add
cmp
push
xor
mov
cmp
mov
rcrl
test
mov
xchg
inc
xchg
popa
sub
sub
sbb
pop
sti
mov
imul
out
into
push
pop
jae
xor
test
push
out
xor
insb
inc
sub
mov
xor
mov
mov
mov
jmp
mov
dec
push
outsl
sbb
xor
ret
pop
xor
lods
fwait
shrl
pop
ret
call
add
sbb
aaa
inc
push
pop
inc
loopne
jecxz
sahf
mov
xchg
cmp
cli
loop
aaa
adc
int
pop
addr16
sti
icebp
inc
fistps
cmp
int
dec
cmp
mov
pop
lods
or
je
push
imul
inc
mov
in
daa
fstpt
test
into
dec
decl
incl
divl
sbb
daa
stos
xchg
adc
and
fcoml
pop
sub
out
xor
orl
es
out
push
mov
jo
push
xor
push
mov
fwait
pop
ret
push
pop
sbb
sbb
add
clc
std
fistpll
or
jbe
movsl
mov
mov
sbb
push
sub
je
loope
daa
jb
mov
dec
cwtl
or
daa
jno
xor
imul
sub
and
aam
mov
movsb
test
lods
in
push
test
pop
push
xor
getsec
cmp
out
pop
out
gs
mov
or
mov
or
clc
lock
sbb
push
loopne
add
ror
push
jle
pop
xchg
sbb
outsl
roll
and
in
push
pop
xor
stos
jecxz
aam
insl
dec
test
popfw
xchg
out
rol
dec
aam
mov
cld
stos
bound
xchg
fwait
dec
out
mov
sub
popf
lock
movsb
repnz
or
push
mov
fcmovu
push
pop
fs
adc
imul
aad
roll
scas
fwait
dec
int3
sub
ficoms
inc
lock
icebp
mov
test
lds
rcll
leave
rcll
imul
or
les
cmp
pop
cltd
popf
bound
xlat
in
dec
push
jp
jg
jne
mov
mov
sbb
mov
int3
orb
loop
dec
lock
pop
fs
cmp
stos
cmpsb
dec
clc
mov
lea
inc
vpermt2q
lods
sbb
shrl
hlt
test
nop
shlb
xor
xchg
mov
std
loope
cvtdq2ps
out
fs
and
das
sti
push
pop
not
fdiv
and
push
es
adc
je
jle
lahf
pop
inc
mov
out
push
out
dec
inc
in
insl
add
ret
mov
ja
mov
jge
adc
pushf
and
jne
and
pop
cmpsl
jecxz
shll
iret
cmp
ret
push
sub
jb
pop
imul
or
push
sub
sbb
mov
or
cs
roll
push
dec
loopne
sub
jns
fsubrs
inc
pop
pop
lds
sub
inc
shll
cli
mov
fdiv
push
cmc
push
jno
jnp
cltd
mov
sbb
add
lahf
in
stos
arpl
push
clc
jb
ljmp
repz
call
jge
cmpsb
cmc
xchg
mov
push
mov
insl
test
jne
lock
test
aaa
into
outsb
pop
or
test
or
xchg
push
push
xchg
pop
out
enter
and
addl
jae
addr16
fistps
jbe
mov
sbb
pop
or
rol
les
cmpsl
mov
fwait
pop
daa
ja
inc
fwait
push
movb
adc
xchg
lahf
mov
mov
and
pop
out
scas
jle
add
mov
loop
mov
jl
fistl
and
mov
cwtl
out
jnp
out
push
lock
jge
or
test
jb
cmp
mov
arpl
push
and
pop
int3
out
push
fidivl
leave
dec
mov
call
ja
icebp
nop
mov
lods
and
testb
xchg
dec
xchg
mov
push
inc
mov
sbb
movsb
push
push
iret
idivl
dec
nop
add
sti
mov
pop
jl
popf
mov
push
in
sbb
adcb
adc
cs
out
xor
fdivr
cmpsb
mov
add
ds
adc
cmp
sub
test
stos
fabs
xchg
aas
movb
mov
popl
mov
js
xor
cli
xor
pop
inc
pop
inc
xchg
mov
cmp
pushf
repnz
ror
out
int
fmull
push
or
bound
das
sahf
add
mov
jae
xlat
mov
dec
outsb
and
test
pop
mov
testb
mov
push
inc
pop
xchg
mov
sbb
lcall
flds
mov
or
jns
jmp
rcll
into
cld
sarb
pop
pop
sub
jae
int
xor
shll
sub
dec
pop
rcll
sub
jae
or
mov
bound
out
dec
dec
aad
mov
test
das
add
adcl
mov
or
push
in
sbb
mov
out
pop
in
lahf
dec
icebp
sbb
jmp
fsubrs
in
mov
ret
push
popf
ret
ret
and
or
xor
mov
lret
xchg
pop
divl
pop
inc
and
add
int
lcall
and
repz
sub
xchg
cmp
push
call
int
fnstcw
movsb
jl
sbbl
xchg
hlt
inc
sarl
outsb
and
cmpsl
pop
adc
in
inc
decl
or
xor
inc
mov
pop
add
ss
ret
fs
jge
jge
test
es
lods
pop
push
mov
sub
jp
shlb
sbb
mov
push
lcall
ljmp
loope
adc
lret
pushf
mov
fs
out
idivb
inc
das
cs
cwtl
pushf
jle
fnstsw
inc
nop
nop
fcmovbe
push
pop
dec
push
int
ror
out
sbb
imul
or
movsl
add
int
lods
shll
jae
ja
outsl
pop
jnp
idivl
add
mov
add
mov
mov
daa
into
in
mov
sbb
mov
in
push
test
movsl
or
xchg
or
xor
or
sub
jmp
int3
lahf
fiaddl
mov
clc
test
adc
or
cmp
bound
lahf
dec
out
adc
xchg
dec
push
mov
mov
cmp
sbb
mov
sbb
aam
cmp
shrb
xor
gs
and
jp
sub
xor
xor
std
jns
jae
mov
out
repnz
pop
or
push
xchg
test
aaa
loope
or
std
xchg
mov
enter
popa
inc
or
call
aam
in
clc
mov
into
icebp
or
ret
sarl
mov
cltd
push
shll
mov
mov
cmp
mov
subl
sub
das
and
push
xorb
xchg
cmp
mov
mov
push
sub
inc
and
sahf
sbb
push
add
jno
xchg
xor
jb
sarb
ja
sbb
mov
mov
daa
dec
inc
decb
cmp
cmp
fsubs
cmc
imul
scas
iret
jmp
fidivs
icebp
jg
mov
pop
loope
pop
nop
int3
daa
pop
orb
adc
cmc
xchg
mov
test
aad
ficoms
push
dec
ss
mov
in
in
cmc
shl
mov
cmpsl
or
and
sahf
mov
push
int
mov
sahf
xor
pop
test
mov
or
dec
pop
xchg
lds
mov
jle
xchg
bound
pushf
rcll
mov
jb
pushf
sbb
inc
incb
movsl
aaa
adc
arpl
or
xor
dec
inc
add
jo
imul
xchg
cs
into
xchg
inc
pushf
xor
add
ficoms
iret
mov
cmp
iret
pop
mov
inc
mov
jns
test
lods
jl
or
loopne
xor
insl
inc
js
inc
inc
cli
sub
cmp
fldcw
push
clc
pop
cmp
mov
lock
ss
xchg
repz
rolb
cmp
inc
mov
mov
movsb
sbb
xor
add
mov
cmp
fnstsw
stos
pushf
test
scas
pop
push
adc
dec
jp
lea
or
in
test
jns
out
inc
call
xchg
negl
jecxz
rcrb
sub
mov
mov
icebp
sub
les
repz
fcoml
push
adc
sahf
mov
add
push
std
cmp
popa
jo
outsb
daa
or
dec
setp
insl
mov
adcl
pop
add
pop
idiv
inc
xchg
push
jnp
mov
rcrl
sub
aam
test
sbb
push
mov
mov
jnp
push
push
mov
pop
xchg
xchg
lret
inc
jo
xchg
and
xor
or
jmp
push
adc
pop
mov
dec
mov
loope
adc
xchg
xchg
jecxz
cmc
jnp
add
push
adc
push
ret
ljmp
stos
mov
mov
mov
sbb
jecxz
int
bound
dec
mov
jmp
sub
out
clc
insb
out
fdivrs
fdivrp
test
std
mov
lock
jl
out
test
faddp
scas
pop
inc
jb
or
dec
popa
push
sbb
adc
out
mov
aad
popf
mov
sbb
push
aam
pushf
fcmovbe
inc
out
into
inc
out
aaa
sbb
xor
outsb
inc
push
or
mov
subb
push
stc
in
inc
mov
inc
xchg
cmp
pusha
mov
pop
inc
fdivs
mov
leave
xor
lret
cmpsb
mov
sbb
dec
xor
into
sub
leave
inc
mov
rcr
in
xchg
push
adc
xor
xchg
sahf
enter
in
outsb
jno
imul
mov
pop
and
push
pusha
scas
lds
sub
hlt
incl
jae
push
ss
andl
mov
flds
or
cmp
mov
sbb
pop
mov
aas
adc
mov
hlt
mov
iret
sbb
jmp
cmp
add
in
pop
pop
xor
mov
mov
cli
sub
push
shlb
mov
daa
cmpsb
lcall
mov
enter
mov
cmc
sahf
or
push
and
dec
xor
call
int3
and
or
es
jae
sbbb
lcall
sub
jnp
rol
jns
xlat
lret
xchg
stc
aam
jbe
mov
das
loop
cli
addr16
sub
out
int3
out
lods
xorl
mov
push
popf
xchg
sub
or
fiaddl
insb
fcmovnb
stos
inc
bound
stc
lret
nop
mov
dec
xchg
mov
jg
fildll
sti
jl
cld
inc
push
or
insb
outsl
pop
xchg
iret
out
jne
js
jns
pop
aas
insl
push
mov
add
aas
leave
test
sbb
gs
adc
sbb
fbstp
outsl
iret
push
mov
sbb
jne
and
subl
das
mov
cmp
je
xor
loopne
mov
addr16
jbe
adc
pop
jge
mov
or
nop
cmpsb
push
or
dec
jne
or
xchg
push
sti
int
lock
aam
xchg
dec
in
xor
mov
shlb
pop
xchg
jns
aaa
mov
mov
mov
fdivs
mov
cmpsb
jno
fcmovne
xchg
sbbl
shrl
pop
sbb
jle
cmp
je
jnp
xchg
in
push
cmp
addb
jno
shr
mov
dec
mov
in
cmpsb
in
add
jmp
inc
inc
mov
orl
insb
dec
adc
and
mov
dec
shl
gs
dec
outsl
or
pop
cmpxchg
data16
xor
xlat
jbe
test
pop
fisttps
test
ja
xor
pop
jno
je
stos
test
shr
sbb
out
loop
test
and
push
add
mov
push
adcb
cmp
xchg
mov
int
mov
push
xchg
jg
pop
mov
pop
stos
and
add
pop
push
rorl
jo
iret
test
sti
and
test
dec
xor
out
mov
bound
jge
shlb
mov
sbb
addb
sbb
es
lret
xor
pop
mov
xor
mov
int3
dec
or
daa
hlt
push
cmp
fs
cmp
out
mov
add
push
in
ret
dec
jg
in
cmp
push
aam
jb
stc
mov
stos
out
add
jae
or
adc
mov
fisubrs
dec
mov
loop
mov
arpl
pop
xchg
or
test
jge
sbb
jnp
push
mov
add
shrb
in
mov
int3
sub
dec
hlt
push
mov
pop
pop
cwtl
jg
out
xchg
pop
popf
pop
ret
add
or
push
push
and
out
cmp
dec
sbb
or
test
add
pop
sti
adc
adc
mov
jecxz
dec
push
dec
mov
adc
insb
mov
dec
out
add
jae
pop
lea
cmp
mov
pop
adc
adc
add
inc
sub
sahf
xor
fmul
or
sbb
shrl
lods
pushf
shr
dec
or
and
cmc
addb
sarl
lock
iret
out
ret
push
jae
dec
push
mov
push
dec
add
pop
out
fdivrs
loopne
pop
mov
addr16
mov
ja
dec
xor
inc
pushf
mov
dec
xchg
inc
js
icebp
jle
mov
out
imul
mov
dec
shll
ret
icebp
loopne
vpunpcklwd
mov
jmp
inc
fstpt
ss
push
mov
xchg
pop
and
stos
mov
add
push
sbb
inc
lahf
adc
push
xchg
jl
xchg
cmc
xchg
inc
out
dec
push
je
cmp
movsb
jp
loop
jge,pt
pushf
gs
out
mov
mov
jecxz
jno
mov
aad
and
pop
pushf
cld
in
push
jp
and
add
or
stos
aaa
add
xlat
test
movb
sbb
iret
mov
cltd
std
repz
popa
sbb
fadds
data16
xor
sbb
inc
mov
push
mov
call
push
stos
jecxz
cmp
hlt
jge
les
xchg
adc
pop
pop
sbb
js
xlat
add
dec
pop
mov
push
adc
sub
jno
and
imul
lds
push
adc
scas
popf
test
enter
lods
sbb
lods
stos
cmp
inc
mov
aaa
fists
add
mov
in
mov
pop
mov
in
aad
movsb
ds
jp
sbb
or
test
popa
loop
add
dec
sbb
inc
cmc
cmp
sub
sub
pushf
and
fwait
pop
pop
inc
push
mov
jb
adc
lods
in
xchg
cwtl
rol
jle
imul
jns
add
and
divl
stos
cwtl
sbb
lods
jp
push
lds
lds
sub
and
xor
in
fmul
mov
xchg
mov
jmp
ret
imul
sub
enter
ljmp
dec
add
fs
and
dec
mov
mov
mov
mov
and
insb
iret
pop
mov
jge
mov
fidivrs
repz
jle
sbb
or
jb
loope
fsubs
inc
push
stc
gs
add
mov
das
xor
repz
mov
pop
jmp
push
or
mov
inc
adc
ret
xchg
dec
dec
inc
and
and
les
mov
adc
jbe
jo
sub
xchg
dec
insb
lds
loop
mov
add
popa
mov
inc
adc
sar
jnp
bound
in
ret
push
dec
test
cltd
xchg
nop
sahf
fldt
add
enter
into
mov
cwtl
aad
push
cmpb
or
ret
rcll
lret
outsb
and
mov
fstpl
mov
adc
xchg
lahf
ja
aas
and
jl
jb
repz
xor
loope
push
inc
in
fnstenv
scas
stos
push
mov
out
ljmp
jmp
pusha
or
cld
mov
dec
imul
mov
pop
mov
adc
pop
enter
mov
test
lods
jl
inc
cmc
test
adc
xor
scas
addl
mov
push
ljmp
sub
fstps
pusha
xchg
pop
and
sbb
fwait
mov
adc
push
push
mov
in
jo
mov
jbe
dec
mov
rcll
into
stos
imul
aaa
cli
or
inc
clc
sbb
es
sarb
jp
lcall
lahf
out
mov
push
mov
repz
adc
xchg
push
cld
xchg
lods
hlt
rcrl
xor
inc
and
sub
xor
jmp
rorb
xor
jmp
into
mov
fsubl
fbstp
add
insb
dec
popa
mov
pop
jle
fstps
mov
in
cmp
fists
jle
xchg
dec
push
mov
scas
pop
movsl
daa
pop
loopne
lahf
xchg
test
lcall
pop
int
stc
add
mov
arpl
jle
pop
stc
inc
jo
sub
dec
and
push
test
enter
jnp
das
aas
mov
cmpsl
inc
mov
rcrl
xlat
pmaddwd
jg
out
gs
mov
sub
push
aad
in
jp
push
fsubs
jmp
cmpsb
or
adc
xchg
dec
adc
add
inc
adc
adc
xchg
mov
fwait
lcall
out
clc
adc
pop
arpl
sbb
lods
popa
shlb
loopne,pt
pop
lcall
jne
push
xor
aaa
hlt
ficoms
aam
lret
aad
int3
fsubrl
bound
imul
shr
adc
xchg
xlat
loopne
movsb
push
je
pop
flds
dec
insl
roll
or
push
mov
daa
iret
icebp
pop
sbb
dec
push
sahf
cmc
mov
sub
mov
push
sub
scas
into
push
fcmovb
pop
and
insb
or
mov
push
test
pop
push
cld
xchg
push
ret
dec
pop
ffreep
sbb
in
scas
adc
jne
cmp
fucomip
inc
mov
push
mov
shlb
lds
xor
mov
mov
orb
sub
in
add
mov
cmp
push
xor
idivl
faddl
push
mov
std
popf
pop
xchg
and
mov
mov
xor
stos
cmp
sbb
lcall
sbb
mov
xor
pop
addr16
dec
inc
xor
push
mov
sbb
or
sbb
notb
js
enter
jo
jne,pn
or
or
mov
fistpll
adc
out
mov
jae
mov
mov
xor
fcoml
adc
xchg
pushf
out
dec
icebp
loopne
bnd
cmp
nop
xorl
cmp
mov
das
divl
push
sub
dec
add
mov
jae
rcll
and
adc
and
jno
or
sti
mov
in
ss
cmp
scas
repz
jo
popa
xchg
xchg
xorb
in
pushf
jne
pusha
mov
or
mov
in
out
push
lahf
sub
push
std
imul
in
pushf
lds
sbb
dec
mov
xchg
jg
test
stc
lret
scas
push
add
call
faddl
mov
mov
jmp
xor
lods
sbb
imul
cmp
das
test
mov
int3
mov
mov
push
sbb
ficoms
movsl
and
or
add
add
and
stos
adcb
cmpsl
xor
scas
jmp
or
loope
cmp
mov
add
or
xchg
test
jecxz
sti
jne
lret
dec
xchg
and
push
push
cmpsl
mov
xor
das
cmp
out
insl
js
push
xchg
jmp
and
dec
clc
jnp
add
insb
mov
sbb
in
xchg
xchg
lea
pusha
shll
or
into
shll
dec
add
adc
sbb
ja
inc
int3
fimuls
dec
mov
out
in
gs
jb
push
arpl
add
shrb
into
sub
stc
cmc
or
popf
in
cmp
int
je
lea
or
cwtl
xchg
ret
notb
push
hlt
xchg
mov
insb
mov
leave
fsubr
mov
sbb
fisttpll
add
loope
and
aam
pop
or
inc
fs
fnstsw
xchg
sbb
pop
fwait
cmp
adc
mov
xor
mov
fists
mov
bound
ret
sub
xchg
inc
aad
je
enter
cmpsl
jno
loop
dec
push
sub
jo
cmp
mov
std
dec
stc
mov
push
cld
inc
fdivrl
mov
fwait
arpl
leave
or
mov
in
jne
mov
lahf
cwtl
call
mov
aas
loop,pn
lock
xsavec
dec
int3
inc
jne
in
aad
pop
mov
daa
inc
jg
loopne
mov
sbb
leave
testb
mov
js
or
sub
jo
mov
mov
mov
jmp
add
outsb
mov
fisttps
mov
xchg
sahf
call
adc
mov
jo
sub
or
lret
mov
xchg
xor
popf
sbb
jo
clc
xchg
dec
push
sbb
sub
xor
xchg
in
xchg
test
cmp
rorb
push
dec
ljmp
or
jge
pop
movsl
sub
mov
fisubrs
inc
int
mov
into
sbb
push
add
imul
lock
and
pop
inc
aaa
push
inc
adc
aaa
or
lods
std
cltd
pop
stos
fmuls
cmc
or
fcoml
dec
sbb
add
xchg
dec
xchg
mov
mov
mov
ja
loop
arpl
scas
sub
lock
les
adc
aam
push
pop
mov
mov
test
movsl
lret
jge
cs
dec
gs
pop
jbe
mul
gs
inc
popl
cmp
in
xor
loopne
inc
pmaxsw
imul
enter
jg
inc
jmp
add
cli
test
mov
mov
jge
sub
pop
fisttpl
cwtl
leave
sbb
sub
pop
pop
test
cs
sbb
pop
mov
pop
imul
push
mov
or
pop
enter
mov
sarl
addr16
fbstp
js
mov
push
add
scas
notb
add
int3
sbb
cltd
mov
popa
movsl
jbe
sub
jecxz
dec
addr16
mov
les
inc
jnp
test
push
test
mov
rcr
popf
mov
xchg
sub
aas
mov
ss
call
leave
imul
fisubrl
in
sub
fnstenv
xchg
dec
sub
fsts
dec
fldenv
cmpsb
pop
lock
cld
popa
dec
sub
adc
ficoml
xor
inc
fstpt
and
sbb
lcall
mov
jns
add
adcb
xchg
flds
push
js
jg
push
xor
fists
cmp
dec
fcomps
je
jb
or
popf
sti
cmpsl
in
shrb
and
sti
dec
ja
cwtl
rcr
jmp
adc
scas
or
xor
loop
mov
or
mov
dec
hlt
or
repnz
insb
cmc
mov
into
rcrb
xchg
mov
xor
into
inc
int
movsb
and
add
imul
inc
pop
leave
stc
jnp
testb
pop
movsb
xor
lret
pop
sub
inc
cmp
or
test
inc
nop
pop
mov
icebp
pop
insl
pop
and
or
xlat
mov
add
sbb
jp
in
jmp
insb
dec
sub
inc
jbe
shlb
sarb
std
xchg
comiss
push
notl
add
adc
out
ss
pop
lret
pop
movsb
mov
ljmp
xor
add
adc
or
cli
sbb
jo
adc
cmp
sub
inc
push
dec
mov
adc
mov
xchg
xor
push
push
gs
xchg
mov
jo
xchg
dec
lods
jo
pop
scas
cmc
add
aad
add
push
and
aaa
push
cmp
pop
cmc
daa
add
outsb
sub
add
mov
xor
outsl
ret
rolb
js
enter
sub
js
js
das
cld
inc
aas
add
fmuls
and
fwait
stc
mov
orl
packuswb
je
mov
xor
adc
std
adc
mov
mov
insb
inc
push
mov
sub
pop
imul
dec
movsb
dec
sub
rorb
lds
adc
insb
pop
loop
push
imul
mov
cmp
addr16
js
push
xor
ljmp
pop
aad
push
out
lea
mov
sti
jge
dec
pushf
in
sbb
inc
dec
mov
imul
mov
movsl
push
jo
jns
daa
arpl
xchg
sbb
pop
outsb
jns
ret
mov
outsw
shrb
adc
addb
push
bound
popf
stos
test
adc
push
jl
push
inc
xchg
or
jo
add
push
shlb
push
xlat
sbb
mov
cs
dec
notb
push
pop
insb
xchg
jne
imul
mov
test
sub
lds
jae
daa
and
shrb
outsb
int3
mov
cmp
sub
sti
repz
rorl
mov
pop
imul
andl
cmp
ret
cli
mov
xor
pop
jns
add
loope
leave
lret
dec
insl
sub
neg
int
fiaddl
clc
push
xchg
or
sarb
push
xor
call
add
dec
das
scas
push
enter
jno
mov
fstps
jne
or
repnz
mov
mov
scas
push
jmp
imull
je
out
test
mov
cmpb
stc
loope
imul
outsb
inc
aas
pusha
cmp
addr16
inc
mov
xor
cld
popl
or
sbb
stos
sbbl
push
sahf
aas
push
aas
js
or
mov
push
test
scas
push
rcrb
lret
cld
jno
cld
mov
xor
pop
dec
fidivrl
push
and
aam
iret
frstor
cli
mov
inc
or
popa
push
pop
pusha
shrb
imul
sub
pop
mov
push
mov
cmpsl
insb
and
add
sbb
xchg
fidivrs
cld
mov
les
dec
push
int
push
pop
jo
daa
aaa
bound
out
fdivl
mov
lock
outsb
inc
std
fsubl
jnp
fidivl
into
or
and
xchg
adc
jnp
and
test
or
mov
inc
pop
insl
sbbl
ficoms
lea
int3
int
push
mov
cmpsb
out
repnz
mov
pop
movsb
push
pop
mov
stc
mov
aam
inc
pusha
sbb
ret
dec
sbb
ret
and
loope
dec
hlt
gs
ret
jle
xor
scas
xchg
and
clc
jmp
dec
dec
xchg
mov
jle
ljmp
xor
cmpl
inc
mov
scas
push
pop
pop
outsb
lods
or
fldcw
lods
xchg
dec
or
fildl
mov
mov
rcrb
mov
fsubr
rolb
add
mov
mov
stos
cmpb
outsb
mov
mov
and
push
inc
sub
fbld
cmpsb
iret
daa
add
cmp
sti
or
cmc
out
stos
push
sbb
mov
lret
test
movsl
mov
leave
jle
mov
mov
xor
sbb
loope
sub
jne
pop
mov
repz
sbb
add
out
scas
ret
add
icebp
dec
dec
push
rol
popf
out
or
mov
push
cli
jp
daa
lahf
fwait
lods
scas
xor
pop
lcall
out
and
pop
movl
and
add
popa
pop
fldl
daa
rcrl
out
sub
cmp
mov
xchg
push
in
cmp
cmpl
arpl
add
cwtl
enter
jmp
mov
mov
jne
add
sti
test
mov
inc
stc
add
dec
jbe
bound
jge
int
repz
fsts
mov
jnp
pop
xchg
xchg
out
ljmp
sub
rorl
mov
repz
aam
out
and
cmpsb
push
stc
movsl
outsl
sbb
sub
pop
sbb
mov
cmp
or
mov
pop
js
mov
loop
arpl
jl
mov
add
mov
push
xor
outsl
dec
scas
scas
sbb
inc
je
adc
add
out
clc
es
cmp
cmp
jnp
pop
add
mov
fnstsw
lcall
es
mov
movsb
je
xor
add
cmp
aas
lcall
hlt
les
mov
insl
lret
in
push
cmp
add
mov
ds
dec
adc
aas
mov
stc
gs
mov
mov
js
or
xor
fcmovnb
cmp
les
movsb
mov
dec
movsb
out
xchg
lret
pop
or
test
or
lods
push
into
pop
int
leavew
bnd
mul
movsl
stc
arpl
and
iret
mov
jb
ss
push
call
cmp
dec
push
jle
sbb
jbe
loope
add
adc
dec
pusha
jnp
pop
popw
aas
or
mov
xor
inc
mov
pop
sbb
lret
dec
pop
test
shld
enter
out
and
jo
insb
lahf
xor
add
imull
sbb
pushl
test
test
ja
jge
hlt
repnz
outsl
mulb
sbb
pop
mov
les
pushf
jo
cs
mov
adc
sbb
ja
sbb
in
fsubl
int
prefetcht2
in
sub
sub
dec
xor
clc
fldenv
mov
inc
mov
loopne
test
lcall
sbb
push
pop
or
mov
push
inc
sbb
aam
into
add
gs
xchg
mov
inc
imul
jle
pop
add
loopne
jp
lcall
aaa
push
imul
das
cmp
xchg
fstpl
pop
mov
xchg
jns
lods
cmp
xor
shll
addr16
repz
mov
dec
out
cmpsb
rcr
mov
cmpsl
insl
jo
roll
sbb
insb
xchg
mov
loop
push
and
mov
cmp
jne
lds
adc
mov
or
sbb
jp
cwtl
mov
mov
pop
hlt
jge
dec
jbe
ljmp
aam
cmp
popf
or
mov
jecxz
fisttps
adc
lret
loopne
jg
mov
testl
and
popf
sub
loopne
cmp
cmp
nop
dec
pop
or
sbb
push
pop
sbb
ror
imul
jns
inc
pop
add
sbb
push
orb
scas
test
test
push
aaa
ds
sti
orb
popa
imul
pop
jg
and
lret
inc
inc
pusha
adc
filds
push
jle
stc
rol
push
out
icebp
or
or
aad
xor
pop
sub
mov
iret
jl
out
inc
adc
sub
std
test
mov
xchg
dec
ja
fsubl
cmpb
je
das
xor
mov
cmpl
ljmp
dec
xor
pop
inc
inc
clc
in
dec
imul
lds
jb
or
adc
sti
add
subl
out
adcl
xlat
mov
xchg
jns
ljmp
cmp
jmp
push
ret
push
sub
dec
arpl
frstor
mov
or
js
test
cmpsl
mov
mov
jecxz
mov
inc
and
push
test
dec
les
repnz
js
jp
xor
pop
or
push
mov
jne
cltd
inc
daa
xlat
scas
loop
jle
push
iret
notl
mov
xor
popa
dec
xor
push
xchg
arpl
adc
adc
mov
pop
jb
lahf
aas
shlb
ret
add
ja
mov
dec
mov
sbb
sub
shl
mov
adcl
mov
sub
movsl
pop
inc
jo
or
cld
xchg
add
cmpsb
and
neg
cmp
push
push
xor
jge
dec
inc
jle
add
adc
jne
repz
cmp
mov
fdivl
mov
popa
cmc
or
or
fwait
cwtl
push
mov
mov
pop
fwait
bound
pop
addr16
shlb
ja
cs
cmp
cmp
cmp
leave
jo
imul
and
jl
add
es
jge
arpl
insb
cmc
addr16
scas
hlt
jnp
mov
sbb
mov
xorl
or
test
sahf
int
push
inc
sub
pop
sti
fwait
mov
lods
push
jl
xor
or
cmp
fsubrl
mov
sub
xchg
stos
xchg
fistl
inc
and
fisttpl
xor
out
cmp
add
xor
xchg
mov
mov
or
mov
mov
rclb
out
sbb
jg
or
adc
mov
sub
dec
bound
arpl
push
push
ljmp
jns
cmp
mov
cmp
rorl
shrl
call
daa
or
test
mov
xor
adc
popa
jno
ret
ficoms
flds
roll
pop
mov
fistl
aad
fcom
js
lods
mov
and
out
jns
dec
clc
shlb
xor
in
nop
adc
dec
out
pop
adc
subl
arpl
loope
lock
xor
mov
jp
sti
xor
aas
jae
fsubrl
sbb
cwtd
jg
shlb
and
lods
dec
dec
mov
adc
sti
xchg
out
pop
sbb
mov
int3
adc
xlat
aaa
or
hlt
inc
lfs
out
sbb
sbb
push
dec
fscale
iret
pushf
in
mov
or
and
jmp
mov
js
js
add
xlat
inc
push
add
lahf
or
fadd
pop
mov
enter
or
adc
repnz
dec
shl
mov
and
add
sahf
outsb
add
push
rolb
and
es
jp
mov
cmc
jo
test
dec
jp
xor
add
rorl
movsb
gs
pop
jbe
push
cmpb
ss
jno
pushf
int3
ja
mov
leave
imul
lret
inc
sbb
in
adc
pop
jge
dec
in
mov
sub
inc
cmp
jno
pop
out
jl
cwtl
clc
ret
push
inc
call
out
cmp
mov
pop
gs
xlat
in
sub
outsl
loopne
hlt
out
sbbl
cli
jmp
shll
mov
dec
ffree
cmp
adc
pop
fcmovu
cmc
pop
repz
sbb
insl
push
cmp
daa
cli
mov
lock
adc
jle
imulb
fidivl
movsbl
dec
addl
lods
clc
test
loop
pushf
cmpsl
pusha
insl
js
lea
and
mov
pop
xchg
push
aaa
adc
std
pop
sub
push
int
clc
les
push
xchg
jo
test
lahf
cmc
sub
inc
jne
shrl
mov
sahf
inc
out
faddl
cmpsb
push
inc
and
push
into
addb
repz
rorl
out
fwait
loop
inc
stc
pop
dec
mov
sub
aad
sti
add
xchg
std
cwtl
xchg
enter
fisubrs
jge
fcoml
gs
lcall
push
xor
data16
lahf
dec
add
outsb
xchg
mov
inc
cmp
add
dec
pop
sub
test
sub
enter
out
add
cmp
jmp
out
aam
nop
test
outsb
xchg
in
xor
xchg
jae
dec
push
xor
jle
nop
inc
sub
or
imul
xchg
cmc
test
cwtl
inc
test
sub
adc
lret
arpl
sahf
jge
adc
hlt
cmpsl
xlat
cmp
adc
cmpsl
mov
inc
je
jle
mov
xchg
mov
les
fnstcw
out
xchg
pop
pop
and
fisubrs
rcl
add
xchg
mov
jp
ficompl
out
out
adc
sbbl
add
imul
xchg
pop
cld
mov
outsl
orl
mov
mov
and
push
sbb
adc
jl
dec
mov
or
adc
addb
mov
mov
xchg
sbb
jne
loopne
das
imul
add
pop
jnp
stos
addr16
xchg
adc
outsb
push
and
sbb
jp
lods
dec
cmpsl
int3
dec
mov
xchg
aaa
fistpll
lret
fiaddl
mov
fstpt
cmpsl
bound
mov
movsb
pushf
and
mov
out
sub
push
mov
xchg
loop
dec
rorl
int3
cmp
inc
push
xchg
push
inc
mov
out
or
fcoml
stos
push
aad
mov
mov
xlat
push
popa
dec
cltd
data16
lock
xor
ja
inc
lock
pop
and
push
mov
inc
pop
inc
aad
pop
adc
ss
jb
add
je
jg
inc
shr
jo
pop
add
fcmovnu
out
jbe
mov
push
popl
add
mull
add
in
adc
sbb
pop
xor
repz
fiaddl
loop
adc
pop
xlat
or
cmp
pop
cs
cmp
testl
mov
lcall
xchg
lret
sub
mov
in
bound
bound
stos
shrl
xlat
pop
iret
imul
fisttpll
bnd
shlb
mov
cmovno
mov
stos
ja
lret
daa
push
xor
das
add
movsbl
xor
test
push
leave
inc
xor
std
lret
int3
push
aaa
fwait
hlt
insl
ja
xchg
xlat
add
lret
into
out
incb
adcb
pop
jmp
ds
adc
pushf
sub
sbb
and
cmp
out
nop
int3
jbe
lods
add
push
push
cmp
pop
pop
imul
imul
leave
movsl
pop
std
pushf
lods
mov
ret
adcl
mov
xor
aaa
inc
adc
mov
and
jb
jne
fsubrs
or
pop
pop
imul
pop
cmp
or
ljmp
xchg
mov
pop
adc
inc
popa
adcl
mov
aam
xchg
dec
sahf
jmp
xchg
inc
icebp
or
icebp
sub
push
stos
addr16
test
pop
xchg
cmp
stos
xchg
pop
pop
insl
enter
fisubl
mov
jmp
jp
aas
lock
mov
addr16
into
cld
lcall
je
mov
xchg
pop
fstpl
dec
loope
add
adc
add
es
pop
aaa
loopne
push
ljmp
lcall
sub
dec
adc
out
mov
xor
arpl
test
lock
stc
mov
jecxz
mov
les
cwtl
out
mov
mov
push
data16
or
jmp
in
mov
mov
int3
clc
push
aam
adc
mov
in
loop
neg
lahf
imul
stos
adc
or
aas
xor
dec
mov
cmp
cmp
movsb
aas
mov
mov
or
dec
into
hlt
mov
dec
gs
shll
jbe
sbb
and
lret
xchg
jg
inc
add
repnz
cmp
or
jns
daa
pop
jge
fistpll
clc
pop
and
repz
das
aam
jb
jmp
cmp
test
dec
mov
cs
or
lds
adc
or
pop
xor
xchg
and
fwait
adc
roll
sbb
jmpw
outsl
pop
std
out
jo
adc
fmuls
mov
dec
imul
cmp
jnp
lret
fs
jecxz
int3
pusha
sub
inc
jb
push
fildll
and
negl
ljmp
mov
or
inc
push
mov
mov
ds
mov
stos
clc
sbb
xor
int3
push
dec
adc
insl
out
fwait
lret
inc
mov
test
dec
xchg
test
movsb
xor
int3
rcr
cmp
mov
push
pop
test
mov
pop
cli
mov
adc
notl
call
ljmp
loopne
mov
sub
sub
pop
movsb
push
push
mov
sahf
call
mov
xchg
je
inc
push
jmp
pop
gs
cmpsl
imul
mov
mov
std
sarb
outsl
cwtl
js
out
out
sub
jl
push
xchg
cmp
push
jg
push
ja
or
and
add
bound
cmpsb
mov
mov
scas
jno
les
push
js
adc
inc
lods
jl
jns
test
ja
mov
outsb
ss
xor
and
jg
insb
incb
adc
pop
mov
dec
fimull
pop
push
mov
pop
adc
cmp
movsl
sahf
jge
orb
sub
aad
ss
or
mov
mov
inc
shll
inc
bound
sub
pop
mov
sbb
push
jmp
dec
sbb
ds
std
mov
ja
or
popf
hlt
cwtl
test
test
sub
incb
shll
pop
or
adc
xchg
in
mov
rorl
inc
int
cmp
jo
dec
arpl
push
sub
push
mov
lcall
pushf
in
push
xor
inc
inc
or
jp
push
das
sbb
push
test
sub
xchg
xor
hlt
mov
mov
jl
sub
test
xchg
mov
jnp
lods
int
pop
repnz
and
add
and
sub
in
in
aam
cmpsl
out
lret
mov
imul
insl
js
lahf
lahf
aas
out
mov
jle
mov
jmp
add
sahf
adc
movsl
ds
pop
sub
ror
push
movsb
or
insb
repz
fimull
mov
mov
dec
nop
cmpl
push
mov
in
int3
add
cmp
adc
test
les
jb
lcall
adc
je
jg
cld
loope
or
cs
pusha
inc
clc
jle
mov
out
pop
sarl
sub
smsw
pop
cmp
adc
inc
add
add
push
sbb
loopne
in
push
int
add
cmpsb
jmp
fldl
adc
ds
shl
ret
rorb
divl
pop
data16
cmpb
sub
push
lock
or
fwait
add
mov
sbb
nop
cli
xchg
pop
notl
addl
popf
xor
fldenv
xchg
and
adc
dec
adc
stos
push
fsub
repnz
pop
dec
jl
scas
in
cmc
pop
insl
cmp
push
and
les
repnz
push
insl
movhps
sbb
mov
cltd
mov
scas
enter
sub
cltd
rorb
inc
pop
icebp
jb
mov
mov
cmp
sbb
aam
xor
adc
push
dec
fistpll
jb
in
daa
mov
lds
lea
xchg
std
xor
mov
sub
xchg
jo
pusha
lods
inc
shrb
mov
xchg
mov
jo
lea
add
push
add
jae
fs
fwait
out
jno
add
js
pushf
stos
mov
push
ds
movsb
fs
adcl
dec
nop
mov
adc
inc
test
loopne
pushf
cld
mov
inc
ja
arpl
fsubs
in
scas
popf
jg
sub
fwait
cltd
dec
xor
cmp
stos
sub
add
push
sbb
es
dec
fmull
push
mov
fidivs
add
push
sbb
cmpsb
push
popf
adc
adc
and
xlat
loope
push
inc
scas
cmp
adc
cmp
cmc
pushl
out
pop
and
enter
out
iret
sub
add
fdivs
cmpsb
out
xchg
ds
negb
mov
dec
dec
cld
pop
scas
out
adc
in
cmc
jns
cli
mov
aas
out
mov
test
add
lock
xorl
inc
mov
mov
inc
pop
add
jb
add
ljmp
mov
stc
sti
add
jecxz
add
int
je
mov
clc
adc
stos
add
mov
and
inc
clc
xchg
test
inc
rolb
jp
ja
sahf
iret
pop
sub
inc
cwtl
inc
insb
pop
and
mov
repnz
mov
mov
rorl
dec
dec
push
lahf
or
sarl
push
inc
cmpsb
divl
jecxz
inc
insb
sub
xor
int
imul
stc
fisubrs
xchg
dec
fnstcw
in
push
and
adc
inc
push
add
stos
xor
add
jecxz
into
add
in
fs
mov
sbb
lea
int3
cmp
ja
xchg
fistpll
movsl
jns
mov
lcall
outsb
imul
iret
jge
inc
inc
or
lea
jecxz
jmp
aaa
call
loopne
dec
ret
fsub
adc
mov
lods
enter
adc
jmp
imul
pop
sbb
test
iret
mov
mov
in
loope
cmp
xchg
fimuls
ss
pop
sbb
and
cmpsl
rorl
loopne
add
mov
add
aaa
sarb
pushl
xor
jmp
bound
loopne
sub
sub
loopne
cmp
push
jp
clc
sbb
ljmp
pushf
or
cmpsl
test
fdivrp
insb
pop
hlt
mov
adc
jns
int3
test
adc
mov
or
and
ja
aam
push
icebp
shll
mov
and
sub
add
push
or
ss
test
inc
and
lcall
adc
push
popa
out
sar
push
movsl
lcall
push
jl
push
lock
pop
xor
inc
insb
mov
cld
ror
dec
xchg
je
inc
gs
dec
mov
repnz
sahf
repz
sbb
lods
xchg
and
lahf
xchg
mov
mov
jmp
xchg
fdivr
lock
mov
xchg
int3
clc
cli
insb
push
inc
test
xchg
shlb
mov
jmp
addb
mov
outsl
xchg
leave
push
mov
sub
push
stos
cmp
inc
sarl
mov
mov
dec
sub
pop
or
pop
mov
test
push
stc
xchg
mov
add
dec
faddl
and
movsl
icebp
push
cmp
and
fnstenv
mov
into
mov
or
in
sbb
sbb
lahf
aaa
xor
addr16
jae
mov
out
inc
fimuls
in
lea
lea
push
dec
add
dec
xor
call
xlat
adc
adc
add
pop
cltd
cmp
adc
lods
inc
mov
sbb
das
test
add
add
sub
jg
push
enter
or
mov
and
and
daa
mov
or
fiaddl
addr16
dec
xor
mov
lods
adcl
pop
je
arpl
mov
test
sbb
cmp
sub
mov
shlb
mov
shr
xchg
xor
loop
jg
mov
cmp
cs
fwait
add
sbb
dec
inc
mov
inc
adc
pop
push
js
repnz
sub
icebp
inc
into
dec
sbb
inc
mov
inc
mov
sbb
jbe
test
pop
int
daa
dec
outsb
cmp
in
add
pop
cmp
shrl
lea
cmp
dec
arpl
mov
or
cwtl
cli
in
push
sbb
test
xchg
mov
jo
sub
xchg
mov
mov
test
lds
js
inc
sub
adc
xlat
cmp
sub
pusha
adcl
inc
lcall
movsb
dec
or
inc
add
dec
rorl
sbb
lds
pop
push
jo
adc
inc
dec
sti
aad
jl
mov
mov
shrl
stc
les
out
mov
mov
lret
cwtl
into
in
pop
jno
popf
push
push
aas
cmp
pop
ss
icebp
mov
movsl
cmp
cmpsw
dec
repnz
push
push
sub
jmp
nop
jae
jno
mov
xor
decb
sbbb
in
outsb
sarl
xor
stos
inc
fstpl
cmpsb
mov
jg
aam
and
lret
loopne
fdiv
mov
inc
sub
add
je
mov
ja
mov
mov
pop
fisttps
pop
push
pop
shlb
orb
adc
and
call
shl
cmp
pop
inc
add
insb
jmp
incb
addr16
sbb
inc
inc
pop
movsb
fnstenv
scas
data16
jmp
mov
inc
lock
jmp
cs
sub
mov
push
ficoms
test
mov
push
jmp
ret
imul
dec
es
xchg
test
or
data16
xor
out
xchg
data16
inc
cmc
xor
test
in
std
xchg
jl
sub
add
shrb
hlt
orl
int
mov
mov
sbb
mull
std
cmp
lds
ss
mov
outsb
aam
pop
xchg
mov
into
inc
mov
push
test
mov
iret
cmc
cmp
arpl
adc
ret
add
dec
call
jo
out
sbb
out
push
add
sbb
pop
fwait
and
mov
rcrl
push
bound
and
mov
xchg
loope
aad
outsb
xor
sub
pushf
loop
jg
arpl
or
mov
dec
pop
dec
mov
fdivl
push
mov
xlat
pop
pop
pop
dec
dec
xor
je
xchg
stos
popf
push
dec
pop
ret
xlat
scas
fisttps
mov
lret
adc
in
repnz
inc
aas
data16
xor
imull
jo
in
stos
sub
add
iret
lds
xor
daa
subb
inc
and
mov
icebp
push
dec
test
xchg
cmc
add
mov
mov
and
dec
adc
jns
mov
mov
repnz
loopne
outsb
mov
pop
test
aas
icebp
mov
and
xchg
mov
mov
in
in
mov
cmp
std
push
out
dec
movsl
clc
or
call
adc
pop
jp
xchg
mov
les
sub
jnp
movsl
mov
icebp
or
imul
std
add
mov
jg
ljmp
lods
add
jne
into
je
dec
ret
repz
rolb
sub
and
mov
adc
nop
test
stos
mov
movsb
inc
pop
mov
iret
mov
shl
sub
pop
in
xchg
mov
cmp
push
mov
jo
xchg
sbbl
jle
imul
sbb
ljmp
cmp
daa
sbb
je
cmp
scas
add
fidivs
pop
cld
ljmp
sbb
sbb
arpl
mov
push
sub
in
minps
fstps
scas
pop
push
shlb
push
and
jo
mov
lock
mov
push
jl
pop
sbb
adc
call
xchg
xchg
adc
pop
cmp
mov
mov
jp
ds
arpl
js
jne
cmpsl
mov
xchg
das
loope
aad
mov
incl
rclb
jmp
test
lea
in
dec
add
sbb
jge
movsb
sub
mov
mov
or
adc
mov
stos
adc
insl
fwait
or
ja
mov
mov
xchg
pop
pop
pop
xchg
jle
and
hlt
pop
imulb
mov
and
pop
sbb
dec
addr16
cmc
imul
icebp
in
test
js
sbb
inc
imul
rcll
inc
sbbb
out
add
mov
gs
ljmp
xchg
sub
in
xchg
cmp
dec
cltd
jmp
push
pop
in
or
inc
mov
mov
pusha
je
mov
push
lods
push
dec
lcall
and
xor
sbb
repz
outsl
cmc
add
jg
in
cltd
addr16
fldcw
daa
aaa
pop
xchg
sbb
push
inc
mov
mov
add
ret
sti
mov
and
cs
pop
mov
mov
jmp
mov
in
pop
xchg
scas
fisubrl
test
mov
outsb
mov
pop
and
test
fs
inc
clc
gs
pop
jecxz
mov
xchg
mov
outsl
arpl
lds
adc
push
inc
sar
xchg
arpl
add
aas
fisubl
es
incl
aaa
pop
movsl
cmc
pushf
aam
jge
fstp
pop
dec
outsl
lds
pushf
ja
sub
subl
in
jbe
scas
sub
push
jnp
jg
fldl
mov
std
cmp
out
and
out
cmp
int
enter
repnz
sahf
and
push
fmul
xor
push
out
ror
lds
gs
xor
lods
in
cld
cwtl
arpl
xorl
in
aas
xchg
ss
sub
sub
sbb
loop
push
xor
jmp
test
pop
pusha
xlat
xchg
and
stc
adc
dec
ret
test
mov
inc
in
mov
out
inc
mov
test
outsb
sbb
sub
in
leave
jbe
pop
xor
cltd
mov
test
push
ljmp
cmp
je
push
insl
jp
jo
mov
push
je
fstpl
fcomps
into
and
cltd
nop
int3
dec
mov
mov
xchg
jp
xchg
cmp
cmp
sbb
in
or
cmp
sbb
movsl
aam
rclb
jb
inc
insl
repnz
inc
and
pop
cmp
push
mov
and
outsb
popf
mov
mov
dec
mov
test
jnp
std
sbb
cmpsb
ret
push
adc
sbb
or
mov
pop
out
out
lods
add
pop
sub
mov
xor
mov
popf
add
insl
shrb
scas
negl
xor
into
add
mov
or
push
fs
xchg
pop
outsl
mov
lret
loope
or
and
xchg
psubusw
inc
sub
sub
stos
xchg
inc
jne
inc
cmp
cltd
sahf
shlb
mov
jne
popf
shlb
or
sbb
aad
dec
insl
hlt
aad
lcall
add
mov
xchg
das
cmpsb
jmp
sarl
sbb
push
dec
fs
stos
lret
rcrl
mov
add
or
inc
imull
lods
aam
inc
dec
stc
lds
pop
xchg
or
sbb
mov
adcb
iret
mov
int
mov
xor
inc
insb
sub
test
aas
cltd
filds
mov
jbe
push
adc
xchg
xchg
ret
xchg
jbe
sbb
daa
sbb
shrb
imul
cmp
jae
dec
outsb
mov
xor
mov
push
mov
pop
mov
scas
fs
cmp
pop
int3
loop
inc
adc
pop
sub
mov
xchg
lahf
push
push
xchg
jg
ds
push
cmp
loop
in
xorb
jp
push
mov
cltd
in
or
lret
xor
and
cltd
push
enter
xchg
mov
in
ja
mov
mov
test
pop
xchg
adc
dec
das
pusha
es
ljmp
push
fadds
adc
lret
add
mov
test
inc
jmp
jnp
hlt
rcl
ljmp
insl
sbb
mov
out
sub
inc
pop
loopne
xor
mov
xor
jle
mov
xchg
adc
push
push
clc
or
in
sti
pop
push
pop
sbb
rorl
mov
cmp
jo
and
push
mov
call
pop
in
mov
lahf
rorb
sbb
jbe
enter
fldln2
popa
dec
and
mov
sub
mov
inc
call
lahf
mov
jnp
in
mull
xchg
data16
fdivl
fisttps
scas
lret
sub
icebp
clc
in
jno
mov
sarl
stos
rcrb
adc
fdivrs
insl
inc
add
das
jg
cmc
je
xchg
cmp
jno
jg
jle
pop
int3
dec
add
mov
or
aas
mov
hlt
imul
add
jbe
rolb
jnp
or
adc
outsb
test
inc
jae
jg
fidivrl
cmp
fucomip
test
out
fdivs
push
mov
adc
and
xor
sbb
xor
aad
lahf
add
mov
inc
push
dec
mov
mov
pop
fiadds
sbb
xchg
xchg
mov
iret
adc
jns
rcr
dec
mov
or
push
xor
fwait
push
cld
idivl
fcmovnu
cmpsl
daa
outsl
mov
scas
sbb
lods
mov
outsl
cltd
add
xchg
add
out
sub
cmp
sbb
mov
imul
addl
cmpsl
fnstsw
and
sbb
push
out
xor
sub
pop
js
jmp
fidivs
cmp
pop
add
dec
imul
testl
lcall
xchg
mov
aad
cmpsl
in
dec
cmpsl
sub
xchg
movsb
jb
lahf
sub
adcl
pushf
or
fldt
test
aas
mov
in
xchg
sbb
lss
ret
cwtl
scas
inc
jno
or
aad
andb
mov
or
adc
jne
lock
in
pop
outsl
push
fdivrl
andb
push
add
dec
dec
pop
inc
iret
imul
add
adc
jp
lret
ret
mov
adc
rcrl
xorb
dec
popa
stc
push
leave
scas
enter
push
push
cmp
pop
inc
mov
jmp
inc
mov
aaa
sbb
pop
pop
or
sbb
pop
and
lcall
rcl
and
lret
out
and
in
aam
add
adc
jmp
les
mov
pushl
lods
push
cmc
xchg
cld
imulb
mov
xchg
popa
inc
push
jno
dec
stos
mov
xchg
out
out
or
movsb
inc
bound
dec
dec
mov
test
std
adc
test
dec
loop
fcmovnu
pop
dec
push
sub
inc
cmp
pop
scas
addr16
and
xchg
stos
xor
xor
push
sbb
cmp
push
xor
repnz
dec
adc
imulb
pop
mov
jno
or
xor
fwait
jge
cmp
sbb
gs
sub
lret
aas
and
and
inc
in
and
call
cmp
orl
jmp
sahf
jl
add
adc
stos
outsb
and
jne
xor
mov
xor
push
xor
jne
dec
add
push
jb
push
pushf
scas
ror
sbb
fcmovnbe
mov
repz
jo
xchg
orb
int
jae
jecxz
sarl
aaa
mov
jne
pop
pop
sbb
std
lcall
or
icebp
sub
into
mov
dec
in
xchg
cmpsl
jle
std
bound
daa
xchg
mov
xor
mov
loopne
adc
mov
fnstsw
scas
jle
push
xor
call
sub
push
pusha
mov
lret
arpl
fisttpl
xlat
inc
jle
movsb
push
mov
lock
fcompl
fildl
push
pop
sub
mov
shr
es
dec
outsl
sbb
cmp
xor
lods
jle
insb
popa
nop
xchg
loope
jl
lcall
cmp
xor
mov
pop
xchg
insb
sti
fistpl
mov
dec
leave
push
xchg
mov
pushf
xchg
sub
and
sbb
shlb
negl
in
sbb
fisubs
mov
jge
or
dec
sti
mov
or
call
fimuls
shll
ja
mov
outsb
das
filds
jp
dec
sub
mov
imul
mov
test
dec
popa
jecxz
aad
mov
mov
mov
or
jnp
icebp
sahf
sbb
sub
cs
std
cmpsl
dec
adcb
enter
idivl
cmp
lock
adc
and
stos
movsl
jle
mov
push
pop
add
xor
test
ret
cmp
mov
push
stos
roll
fdivs
loop
les
hlt
cmp
imul
adc
adcl
into
pop
mov
in
jle
xchg
insl
sti
add
add
push
adc
ret
mov
or
scas
jns
imul
mov
and
lcall
adc
repz
fcompl
shl
out
fiadds
adc
jne
xlat
sbb
notb
mov
mov
mov
mov
std
push
enter
fldcw
push
arpl
mov
int3
xchg
xchg
or
outsl
push
scas
sbb
mull
insl
dec
jae
pop
cmp
aad
xor
fidivrl
pushf
rcll
insb
mov
and
test
mov
xchg
cmp
mov
cltd
stos
out
into
jbe
outsl
mov
add
dec
cmpsb
sbb
pop
add
push
cld
xor
mov
scas
dec
sub
lock
idivb
fmulp
cmp
push
decl
addr16
fst
jle
sub
int3
sbb
les
push
in
push
gs
xor
fwait
test
cmp
cmc
daa
ds
ljmp
pop
add
loopne
add
pop
lret
jo
xchg
nop
test
pop
ljmp
iret
lea
xor
or
insl
ds
jbe
add
sahf
jge
pop
rorl
lcall
scas
lcall
inc
dec
mov
and
push
mov
dec
and
jecxz
test
icebp
add
jmp
pop
ja
imul
jmp
bound
mov
sub
stos
inc
adc
sbb
lods
push
cmp
jmp
pushf
lods
push
cmp
fcompl
ret
sbb
sub
inc
out
dec
or
xor
outsl
outsb
cmp
xor
lcall
rorl
les
and
mov
int
pop
and
xor
popf
lret
adc
ss
xorb
mov
in
movsb
or
scas
faddl
mov
test
stos
js
ficoml
mov
les
pop
hlt
clc
cmp
dec
stos
or
xchg
sub
dec
cmc
sbb
sub
sub
xor
xor
stos
jle
mov
in
add
mov
add
pop
adc
testl
cmc
inc
adc
adcb
dec
pop
xlat
idiv
add
ret
dec
xor
pusha
fs
lahf
adc
pop
fmulp
enter
les
call
mov
pop
fiadds
sub
test
mov
or
mov
pop
addr16
xlat
fsubrs
leave
cmp
mov
adcl
cmp
jnp
mov
mov
icebp
and
mov
and
mov
inc
mov
jbe
test
dec
mov
mov
mov
shr
aad
push
and
mov
arpl
lret
sbb
xchg
jl
cli
push
push
pop
rcrb
jno
sbb
fnsave
mov
cmp
xor
mov
push
loopne
mov
inc
hlt
sbb
call
sarb
fwait
cmc
imul
xchg
jns
add
pop
mov
add
adc
mov
mov
call
xor
ljmp
leave
mov
push
pop
fs
pop
add
push
mov
or
dec
out
pop
sti
add
xor
sarl
stos
sbb
hlt
in
dec
xor
inc
movsb
ret
jle
js
mov
inc
ss
cmp
mov
repz
jle
cmp
pop
dec
leave
inc
sbb
xchg
adc
loopne
sub
lcall
push
cmpsb
push
fcmove
mov
adc
pop
push
xor
fstps
inc
fistpll
repnz
sbb
jmp
in
sub
loopne
les
fs
adc
inc
pop
cmp
sbb
out
in
stos
aam
fisubl
xchg
push
jmp
mov
sub
mov
lcall
dec
jo
adc
filds
push
mov
lret
or
sbb
mull
pop
or
ss
dec
cmp
sub
leave
jle
dec
lds
pop
je
enter
jno
xchg
les
add
pop
rorb
lods
or
dec
imul
push
dec
sub
ja
sarl
mov
icebp
push
jp
sub
adc
mov
bound
fstpt
fwait
stc
cmpsl
cmp
and
arpl
in
fists
fmul
imul
jp
lods
push
lock
jecxz
add
in
mov
fsts
mov
outsb
xchg
ss
out
mov
outsl
mov
mov
loope
adc
pop
xchg
mov
cld
adc
fs
lds
pop
pushf
lret
icebp
xchg
popf
leave
fcmovnbe
jnp
mov
gs
jne
sbb
xor
add
cmp
sbb
inc
daa
div
xchg
cmp
pusha
pop
mov
mov
xor
add
push
imul
add
fcmovu
adc
les
xchg
insl
push
jg
cmpl
roll
loop
cwtl
rcr
xor
data16
idivb
inc
sub
jne
pushf
data16
jge
test
stos
mov
mov
into
leave
sbb
jnp
jns
stc
mov
dec
mov
cltd
jb
add
pop
insl
and
int3
std
or
cmpsl
mov
mov
add
inc
popf
rcr
lods
lahf
sbb
mov
cmp
out
and
pop
add
and
inc
les
xchg
mov
cmp
mov
movsl
adc
out
ret
push
stos
out
xchg
movsb
push
xor
sahf
add
mov
xchg
ret
clc
inc
orb
adc
xlat
cmc
hlt
push
mulb
loop
out
lret
insl
xchg
sbb
jecxz
repnz
leave
fistl
jecxz
pop
mov
mov
pop
push
imul
xchg
outsb
mov
xlat
mov
sbb
mov
xchg
sbb
fwait
pop
stos
je
test
jp
add
adcb
jb
in
xchg
inc
jge
aam
push
std
sub
xlat
sbb
lahf
xchg
push
outsl
mov
dec
xor
jns
fimull
push
cltd
loopne
into
cs
das
pop
mov
dec
mov
sub
add
fstp
jae
ljmp
popl
in
jmp
cmp
push
out
mov
push
xor
jmp
and
sub
push
mov
push
mov
or
clc
rolb
lret
push
ret
pusha
and
mov
or
popf
movsb
icebp
aaa
inc
bound
shlb
fiadds
clc
mov
in
out
add
stc
das
pop
mov
xchg
jb
adc
mov
or
pop
fsubrl
ss
dec
out
mov
adc
loop
push
imul
pop
mov
pop
jno
mov
lret
add
jo
sub
mov
andb
jge
sub
push
add
insb
inc
insl
inc
push
std
push
in
outsl
clc
cmp
jae
lds
push
fs
cltd
insl
insl
roll
fildll
pusha
jne
outsb
mov
jge
repnz
push
push
lods
xchg
lcall
xchg
cmp
mov
test
or
mov
jle
pop
pop
cli
cltd
lods
arpl
dec
jg
push
call
outsl
cmp
mov
or
dec
push
bts
sbbl
je
mov
stos
push
jle
and
out
sbb
sbb
negb
cltd
cmpl
sti
jno
sar
push
fbstp
add
inc
or
lea
cmpsl
das
push
jb
sbb
pop
mov
and
jge
cmp
cmpsl
jg
into
xchg
xor
sub
pop
xchg
xor
xchg
jp
imulb
leave
xor
jp
jo
outsb
aas
xchg
xchg
jae
or
shlb
in
add
lock
arpl
mov
cmpsl
xlat
or
push
scas
add
xor
imul
and
and
mov
cmpsl
mov
xchg
dec
pop
pop
mov
cmp
pop
popa
pop
mov
mov
ret
pop
jecxz
jae,pn
scas
or
pmullw
jae
xor
inc
in
scas
mov
dec
or
fcomi
sub
adc
pusha
sub
repz
sti
insb
dec
push
xchg
aas
fldcw
push
xor
cmp
mov
push
mov
mov
lahf
xlat
outsl
cmp
mov
lods
add
fisttpl
jb
jb
stos
xchg
jmp
mov
xchg
or
mov
iret
test
push
enter
xchg
mov
pop
lret
add
or
dec
inc
pop
out
test
cmp
mov
aam
inc
sub
cs
or
int
fsubrl
add
fsubs
fsubrl
jg
lret
add
mov
add
cwtl
mov
cli
cmp
pop
fidivs
mov
pop
dec
js
and
xor
or
xor
push
cwtl
sete
or
aaa
xor
loope
fcomps
cmp
ret
aad
or
mov
push
pop
mov
push
mov
adc
pop
xchg
mov
add
ljmp
rorb
imul
dec
dec
ret
inc
xlat
int3
mov
push
test
inc
out
jno
cwtl
dec
xor
add
inc
mov
dec
xor
xchg
cmp
xchg
xlat
add
aam
ds
mov
into
loopne
dec
jl
in
fldl
xor
je
xchg
cmpsl
out
pop
sub
xchg
pop
std
adc
scas
xor
inc
xchg
lock
cmp
xchg
mov
xchg
adc
sbb
sub
insb
lods
in
pop
lahf
out
mov
mov
in
in
inc
xchg
fldcw
orb
jecxz
mov
imul
out
test
lahf
pop
xor
cs
mov
shlb
mov
or
js
mov
bound
xchg
jne
rcpps
stos
pop
cmpsb
insb
imul
xor
sbb
ret
mov
ja
ljmp
loop
or
xchg
lret
test
push
xor
sub
mov
into
lret
iret
sub
pop
in
and
push
aam
mov
push
call
and
shll
fwait
int
lds
insb
ret
sbb
test
inc
inc
popa
dec
mov
cwtl
fmul
stos
pop
inc
arpl
cmp
and
push
ret
mov
icebp
lods
push
mov
fdiv
iret
in
cmpsl
adc
lcall
movsl
lock
imul
xor
sub
leave
dec
jl
inc
cmp
mov
or
imul
ljmp
pop
sbb
xlat
adc
jo
divb
es
test
push
add
jle
dec
mov
xchg
in
jl
rcrl
int3
imull
xchg
lret
mov
lret
icebp
jne
sub
in
sti
pop
rcrb
pushf
cwtl
jle
add
inc
ja
xor
xor
fdivl
jae
xor
insb
cmp
jecxz
stos
mov
sbb
hlt
lock
pop
push
push
lds
nop
adcb
adc
dec
inc
jmp
pop
pusha
jp
je
test
push
dec
int
outsl
loop
enter
jecxz
orb
push
mov
sbb
mov
stc
daa
stos
mov
add
loopnew
lods
sub
arpl
and
sarl
xchg
dec
push
loopne
and
lret
cmp
xchg
sahf
scas
sbb
sub
sbb
addb
or
xchg
push
mov
lods
fldt
jp
aam
jno
js
bound
inc
or
je
mov
pop
push
pop
out
out
adc
xor
cs
insb
inc
adc
sub
mov
cmp
fdivp
test
sub
out
mov
mov
fisubrs
outsl
push
push
xor
insl
movsl
inc
ss
xor
pop
mov
jecxz
imul
cltd
adc
popf
add
or
jae
jae
mov
test
jp
push
jmp
aas
data16
cmc
nop
insb
mov
les
movb
push
mov
iret
adc
psubd
xchg
jae
scas
xchg
std
pop
dec
ss
test
pop
iret
pusha
xlat
jns
jp
xchg
jae
mov
adc
dec
and
idivl
lods
movsb
popa
inc
sbb
or
xor
lahf
fnstcw
dec
cmp
stos
jo
mov
sbb
test
adc
jae
pusha
aas
lock
rorl
iret
jns
les
jmp
sbb
daa
xchg
push
push
push
xor
mov
jg
ja
dec
es
mov
jmp
in
jmp
out
dec
mov
xor
jnp
push
mov
fsubl
repz
gs
mov
jmp
mov
adc
sbb
push
push
xor
pop
shrl
or
push
outsl
mov
minps
pop
push
je
test
rorb
pusha
dec
cmpsl
xor
xchg
mov
mull
adc
test
jnp
dec
mov
push
mov
mov
int
jno
out
sti
jno
pop
sbb
inc
sahf
ja
popa
xchg
imul
sahf
jg
and
xor
rdpmc
sbb
inc
inc
dec
shlb
or
popl
fmull
adc
imul
rcrl
sbb
jl
jecxz
xor
inc
mov
mov
sti
push
aad
inc
mov
fdivrs
inc
push
pushf
push
shll
cmc
or
adc
inc
mov
xchg
cmc
fsts
repz
mov
std
push
push
sub
inc
insb
cwtl
scas
arpl
shlb
push
test
lea
add
push
push
sti
das
in
inc
popa
add
bnd
in
inc
and
pop
adc
stos
cmp
pop
xchg
lods
mov
sub
mov
jge
cmpsl
push
sub
test
adc
dec
inc
les
adc
or
mov
pusha
icebp
pop
fwait
sarl
in
mov
adc
or
cmpsl
or
xor
imul
push
cmpsb
cli
das
xchg
pop
sbb
into
addl
movsl
xor
bnd
mov
cwtl
sbbl
sbb
cmp
loop
xchg
xor
lcall
xchg
dec
fwait
mov
pop
xchg
mov
mov
pop
stos
cmpsl
jne
outsb
or
lea
and
adc
inc
loope
xchg
mov
dec
nop
mov
outsb
sahf
sub
push
paddb
or
xor
adc
cmc
mov
cmp
call
dec
ret
pop
jne
jge
dec
push
std
enter
dec
testl
add
cmc
or
xchg
shrb
jp
sub
push
adc
jle
jle
mov
call
insb
mov
outsb
pop
dec
shll
cmp
xor
in
dec
into
mov
ljmp
movb
lcall
aam
mov
js
mov
movsl
imul
jge
sub
out
xor
cmpsl
mov
out
dec
sub
dec
push
filds
scas
mov
repnz
mov
fwait
mov
fimull
pop
and
loope
pop
les
adc
add
pop
push
mov
rcrl
mov
mov
lods
jns
hlt
pop
in
cmpb
push
fists
ret
mov
pop
divl
lds
fisttpll
cmpsl
push
in
add
mov
mov
cmp
jmp
inc
push
in
push
idiv
mov
lock
bound
jb
mov
jno
aas
lds
xor
ja
mov
push
stos
push
inc
cld
incl
and
hlt
mov
arpl
cmp
iret
push
mov
cltd
in
ficoml
mov
jnp
sub
mov
sub
xchg
cmp
adc
jmp
pushf
das
sbb
test
adc
out
stos
and
mov
js
adc
pop
roll
jno
inc
popa
add
mov
inc
fldt
jl
xor
jnp
dec
ja
mov
add
adc
popa
mov
addr16
mov
shr
mov
arpl
xchg
sub
sbb
sbb
push
movsb
dec
sarl
sbb
sub
push
or
in
cmp
in
jp
sbb
or
mov
xor
xor
in
pop
push
outsb
orb
ds
cli
sbb
pop
pushf
je
xchg
jo
or
xor
mov
arpl
rcrb
movsl
imul
cmp
lret
ljmp
popf
sbb
ret
pop
test
loope
pop
adc
xchg
inc
push
pop
movsl
aam
lcall
cmp
adc
mov
mov
je
mov
mov
push
outsl
arpl
adc
lcall
add
pop
leave
sub
and
push
lret
test
out
int3
fsubp
mov
lret
add
xor
jg
fcompl
ss
mov
fcmovne
sbb
jb
mov
sbb
scas
mov
scas
cmp
or
push
lock
into
xorl
push
mov
movsl
and
shll
and
mov
lods
mov
mov
xor
out
adc
mov
fdivp
sbb
mull
lahf
es
ffreep
jb
xor
mov
repnz
aaa
sarb
xchg
pop
aam
clc
lods
push
shl
pop
orb
arpl
inc
and
mov
icebp
add
out
fwait
add
je
inc
dec
dec
stos
movb
lea
jns
addb
leave
out
add
testl
out
jg
dec
and
add
cmpl
lcall
insl
cwtl
jno
cmp
add
shr
inc
mov
jb
bnd
cmp
adc
or
mov
sub
sarb
les
dec
jae
cld
ja
mov
enter
inc
lcall
dec
js
data16
and
mov
sti
es
aam
dec
and
push
sub
pop
xchg
inc
mov
stc
insb
fwait
pop
mov
icebp
ret
add
adc
cmc
sub
cmp
cmp
xchg
and
jmp
cld
insb
inc
stos
bound
ds
pushf
mov
shll
mov
push
cmp
push
jae
test
and
cld
fsubr
mov
pop
pop
dec
out
sub
loopne
inc
mov
sarb
loop
or
dec
pushf
pop
xchg
adc
jle
shll
out
and
pop
lret
ja
or
das
xorb
ljmp
insb
addr16
std
dec
mov
daa
out
shrl
or
inc
cwtl
out
sarb
push
iret
call
push
mov
jno
xchg
add
cmpsb
pop
fidivrs
and
lea
mov
mov
fnstcw
in
xor
ja
jne
ret
pusha
bound
fsts
mov
jae
insb
stos
frstpm(287
add
sub
dec
rorb
cmp
mov
fstp
mov
inc
cmc
add
ja
mov
sub
leave
repz
and
call
xchg
mov
and
xchg
ss
cmp
dec
adcl
push
dec
fwait
sbb
mov
sbb
fsubrs
les
and
in
adc
add
int3
call
mov
cmp
cmpsb
push
shll
inc
ret
push
in
lods
jnp
dec
adc
sti
outsb
cmp
push
dec
cmp
lds
inc
dec
mov
fisubrs
xchg
sbb
xchg
imul
and
add
mov
lea
xchg
cmp
lcall
add
sbb
jns
xchg
sub
ja
add
xchg
divl
push
or
sbb
fisubl
xor
pop
sub
fdivp
push
pushf
pushf
clc
sbbb
dec
repnz
jmp
mov
dec
hlt
push
cmp
jbe
pusha
pop
inc
cld
popa
sbb
out
inc
insl
imul
pop
in
ljmp
dec
xor
lock
push
add
or
mov
xchg
pop
rcrb
orl
inc
or
in
jp
mov
pop
cmp
mov
adc
scas
fucomp
fsubl
ja
pushf
lret
icebp
or
jge
dec
loopne
inc
test
sbb
pop
or
stc
pop
mov
scas
js
out
test
sbb
mov
mov
test
ret
sbbb
add
fdivrl
into
mov
les
lahf
and
pop
lahf
popf
adc
cmp
sbb
rorl
bound
jp
pop
adc
popa
gs
xor
shrb
adc
xchg
out
pusha
pop
pop
loope
addr16
sbb
sbb
ds
dec
leave
testl
aaa
fwait
add
jno
es
or
pop
sub
pop
mov
movsl
push
cltd
pop
sub
movsl
mov
rcll
and
xchg
inc
int3
inc
cmpsl
je
in
daa
sbb
out
xor
mov
aad
sbb
push
add
lret
mov
fcoms
popf
repnz
dec
cmp
push
ret
shl
jle
cmp
fwait
sub
test
mov
stos
int3
sub
pop
mov
mov
lret
das
daa
mov
fcmovnb
mov
add
push
rcrl
inc
ss
xchg
psllw
push
cli
popa
or
ss
or
xor
mov
pushf
sub
ss
xchg
test
adc
xor
mov
jae
xchg
aaa
daa
outsb
aas
insb
adc
out
jmp
filds
outsl
add
cli
add
xchg
pop
test
add
jge
in
mov
and
xchg
jp
jl
dec
in
sar
pop
adc
pop
int3
pusha
loope
cli
cld
bound
stc
into
pop
push
add
data16
movsl
push
dec
shl
lahf
ficoms
dec
loope
xlat
xchg
mov
outsl
aam
and
inc
nop
andb
aaa
and
ja
push
in
xchg
pop
adc
movsl
jo
cmp
test
cli
imul
fildll
xchg
add
cmc
jnp
inc
pop
dec
mov
xchg
sub
push
ret
paddsb
repz
adc
les
lea
jge
lret
jnp
mov
out
orl
push
int
imul
cmpsl
stc
mull
ss
das
xor
dec
int
mov
sbb
mov
cltd
lods
dec
imul
push
sub
mov
js
int3
and
mov
jbe
aas
jge
jnp
cmp
jno
nop
cld
push
gs
fidivs
mov
pop
xchg
dec
mov
push
xchg
or
inc
pop
outsl
stos
dec
leave
or
sub
push
adc
sbb
mov
int3
adc
js
inc
clc
aas
mov
pop
pop
clc
testb
mov
data16
stos
sbb
daa
or
sbb
mov
aas
xchg
dec
jno
imul
add
xor
jae
xor
sti
iret
mov
cli
outsb
inc
mov
inc
pushl
sbbl
incb
mov
lcall
aaa
adc
je
xor
xchg
mov
icebp
cmp
sbb
xor
icebp
cmp
push
inc
fst
outsb
add
ds
insl
cld
shl
cmpsb
inc
cmpsl
jp
int
sub
push
lret
inc
sahf
test
mov
push
cmpb
dec
pop
arpl
je
test
das
testb
jge
jae
sti
jge
mov
add
nop
xchg
fldenv
add
mov
pop
test
jnp
lds
xor
push
mov
popa
xor
fwait
daa
jecxz
pop
es
into
sub
sti
add
sti
sbb
dec
inc
ret
outsb
iret
sub
xlat
std
fwait
jmp
js
lods
xchg
shl
cmp
cltd
cmpb
and
addb
mov
mov
mov
ljmp
fcmovnb
rcrb
sub
popf
pop
and
dec
mov
loope
lret
and
testl
in
cli
lret
jp
pop
inc
cmpsb
daa
sti
sar
aad
ret
test
push
bound
shll
cmpsb
sbb
sub
push
lcall
xchg
test
stc
pop
jb,pt
mov
inc
jne
jns
scas
mov
je
fmuls
ret
and
rcll
pop
mov
adc
push
inc
or
shlb
pop
jge
jns
cltd
adc
mov
movsb
dec
and
cmp
pushf
dec
or
pop
and
aad
fmulp
fildll
dec
mov
and
sub
movsl
sbb
mov
xor
and
icebp
and
inc
jmp
bound
lahf
mov
shl
inc
jns
lcall
jp
add
int3
pop
icebp
mov
inc
jne
jnp
rol
push
sub
sbbb
xor
xor
shl
pop
loope
lea
gs
push
inc
inc
aad
add
ss
push
add
sub
dec
push
movsb
jle
and
pop
stc
mov
insb
lcall
out
push
and
and
nop
jmp
jne
mov
jmp
lret
and
hlt
jmp
addb
mov
mov
iret
and
movsb
nop
xor
fmuls
movsb
adc
cmpsl
inc
fldcw
pop
dec
pop
cmp
and
dec
inc
lds
add
push
dec
in
pmulhw
xor
and
jo
jge
inc
inc
mov
mov
lret
xor
xchg
pop
cmpsl
jns
into
add
jle
shlb
or
inc
adc
xchg
pop
adc
pop
jecxz
dec
aam
cmpsl
cmp
lahf
pop
cmpl
test
aad
xchg
lret
test
jecxz
jno
in
jmp
pop
jge
pop
xorl
outsl
mov
lds
leave
mov
fimuls
adc
cmpl
sbb
mov
mov
and
jle
inc
outsb
loop
sbbb
sub
xchg
xlat
mov
ret
fwait
or
push
cmp
into
js
mov
daa
lock
push
adc
sub
inc
testl
movsb
int3
inc
js
movsb
cmpsl
pop
inc
sahf
push
xchg
push
cld
outsl
rcl
out
pop
imul
fnsave
xchg
or
sub
cmp
loop
and
mov
fcomps
pop
push
xchg
jl
lea
das
mov
xor
sbb
jmp
mov
test
popf
jns
jnp
push
or
rclb
dec
or
xchg
cmp
out
lods
int3
mov
test
adcb
das
pop
and
jle
insb
imul
adc
jns
imul
or
cmp
push
dec
jbe
xor
arpl
dec
xchg
hlt
iret
push
mov
xlat
mov
or
mov
mov
sub
push
mov
out
jge
inc
inc
push
faddl
pop
es
sbb
cmp
test
push
ljmp
jecxz
jae
ret
and
sarb
ffreep
mov
sub
mov
mov
movsl
mov
mov
mov
in
xchg
fidivrs
xchg
dec
outsl
push
shl
ljmp
dec
inc
ss
adc
cmp
push
inc
mov
adc
nop
add
vpsubw
aas
xchg
loop
or
cmp
imul
sbb
outsl
pop
js
loope
mov
xor
insb
jnp
out
xor
sub
mov
xrstors
imul
mov
adc
jp
ret
mov
pop
sbb
sub
les
shll
adc
mov
imul
insl
xor
xchg
jb
fs
sar
out
dec
scas
imul
aad
push
mov
or
jbe
inc
jno
andb
repz
or
mov
lcall
mov
jecxz
jns
outsl
gs
push
jns
adc
add
sub
or
pushf
notb
imul
icebp
test
mov
sbb
xor
dec
cmp
ret
mov
ret
mov
aam
jb
mov
scas
mov
pop
lods
cmpps
sub
pop
repz
pop
ljmp
cli
test
movsl
and
dec
push
xor
xchg
xchg
sbb
cmp
mov
insl
scas
into
fldl
jmp
cmp
movsl
sbb
jo
sti
jge
cmp
or
push
movsb
pop
out
iret
call
and
cmp
mov
jmp
pop
aaa
lea
jle
sarb
out
aas
icebp
cltd
lods
orb
mov
and
mov
test
imulb
lret
pushf
xchg
jg
lcall
test
and
movsl
push
insl
mov
add
addr16
sahf
mov
ror
push
mov
cmp
cli
lea
jmp
dec
push
fldenv
insb
sbb
adc
fstpl
loopne
mov
lods
in
jnp
aad
fnsave
xchg
es
or
dec
mov
pop
fildl
fmul
les
pop
push
push
jecxz
and
xchg
mov
mov
test
lods
lock
hlt
iret
mov
inc
jge
mov
pop
and
pop
out
decb
roll
push
insl
xchg
push
adc
adc
outsb
sbb
mov
xchg
dec
xchg
icebp
mov
xor
push
fildll
inc
sub
add
ja
or
int3
cmp
jns
sbb
fildl
cli
sub
xor
mov
sbb
mov
fmul
dec
int3
sbb
jmp
icebp
leave
pop
xchg
lea
enter
push
mov
insl
jg
out
mov
negl
cltd
jp
cwtl
jmp
sbb
xor
lcall
ja
inc
push
mov
outsl
std
push
mov
sub
push
imul
pop
ss
sbb
mov
and
fstl
scas
into
dec
addr16
shll
pop
ror
imul
jbe
outsb
in
adc
mov
mov
pop
mov
xchg
idivb
mov
inc
dec
mov
jnp
xor
movsb
fwait
xor
push
filds
in
sub
mov
mov
push
insb
push
dec
scas
dec
das
jbe
jo
push
mov
mov
sub
dec
fildl
ja
or
adc
mov
aam
fistl
sub
and
fstpl
clc
jns
jge
fwait
imul
sbb
adc
jbe
or
stos
jg
dec
add
mov
popa
push
rcrb
mov
and
xor
jp
mov
dec
shrl
sar
sub
sbb
pop
sbb
in
xor
cmp
neg
fxtract
cwtl
mov
loopne,pn
fldt
pushl
dec
cmp
lea
cmp
push
fldl
inc
mov
pushf
add
mov
lea
enter
sub
xchg
sahf
adc
adc
and
cmp
shll
sub
xchg
popa
adc
xor
and
imul
sub
lret
jnp
xor
cmp
lret
pop
es
inc
rol
outsl
ds
push
test
or
daa
jmpw
das
aaa
aam
stos
int
jecxz
clc
jb
inc
fcoml
dec
mov
outsl
es
pop
cli
mov
dec
je
or
mov
pusha
imul
mov
pop
push
push
or
call
xchg
lods
std
inc
mov
out
mov
and
cli
mov
std
in
jae
ljmp
cmp
loopne
fstp
movsb
stc
jge
jmp
add
enter
into
scas
enter
sbb
pop
xor
shll
test
stos
add
out
dec
or
jecxz
cmp
lds
jle
dec
enter
inc
rcrl
lahf
xchg
push
bnd
adc
inc
pop
inc
push
and
inc
push
fldt
add
cmp
xor
lea
bound
lahf
cmp
test
push
inc
cmp
mov
inc
mov
pop
call
pop
mov
push
add
out
test
xchg
push
sbbb
cmp
dec
jle
out
cli
insl
and
sti
fcompl
dec
rorb
fsub
xchg
or
inc
xchg
cmp
cli
sub
in
jg
fstpl
xorb
cltd
dec
inc
lahf
dec
xchg
fucompp
loop
sbb
xchg
jecxz
xor
xchg
jge
xchg
outsb
daa
fdivrs
fmuls
jle
cmp
subl
adc
stos
mov
loope
ficoms
popa
sbb
lea
jl
pushf
loopne
sbb
lods
cmp
cmp
cmp
push
fildl
into
add
gs
test
xchg
das
fildl
xchg
sub
jns
and
inc
cmpsl
mov
mov
inc
sbb
mov
lret
loopne
mov
and
fiadds
sub
mov
cmp
orb
cmp
sbb
xlat
push
xchg
lret
lea
xor
dec
inc
adc
sub
call
jl
xlat
inc
inc
lahf
loope
repnz
mov
inc
pop
jo
cmc
pop
imul
mov
hlt
out
xchg
xchg
rol
jns
sub
inc
mov
std
or
cmp
movsb
jg
pop
sbb
inc
loopne
shll
xchg
add
fcompl
mov
popl
jmp
mov
arpl
inc
out
aad
int3
out
mov
lock
jmp
icebp
out
mov
je
push
push
xchg
gs
push
insl
push
outsb
out
xchg
imul
jne
mov
add
fimuls
add
in
sub
aad
in
dec
fidivrl
lds
cmp
mov
dec
sbb
rcrb
mov
push
pop
mov
ja
mov
fidivs
addr16
cmpsl
pop
mov
lret
lods
sub
pop
mov
jb
add
xor
pop
out
sub
aad
dec
xchg
inc
repz
pop
cld
mov
out
pushf
clc
cs
mov
sbb
mov
enter
in
pop
push
negb
aaa
jge
jle
aas
pop
pop
ljmp
outsl
sub
push
ss
and
lret
roll
mov
and
iret
inc
cmc
outsb
xor
dec
out
mov
add
push
sbb
lock
push
pop
test
xor
scas
mov
push
loope
or
pop
mov
and
jns,pt
push
int3
test
mov
xchg
lea
sbb
ret
das
aas
push
test
pop
jmp
xchg
repnz
mov
and
outsb
mov
mov
push
arpl
out
sub
cs
xor
jmp
in
mov
cli
aas
sbb
push
push
jbe
leave
push
out
mov
or
rcrl
sahf
mov
popa
in
lds
sub
add
adc
jmp
mov
loope
or
mov
or
int
cs
cs
xchg
or
idivb
or
out
movsl
movsl
add
mov
jle
push
daa
adc
and
jp
jge
sbb
gs
movsb
or
cmp
add
inc
arpl
pop
pop
ss
movsl
dec
lods
popf
xor
movsl
cmp
cmp
rcl
sub
or
inc
add
cmp
xchg
and
xor
mov
iret
pop
add
pop
aam
or
ja
mov
cmp
rcll
outsb
sub
sub
pop
xor
or
rcrb
xor
jmp
mov
fmuls
iret
push
lahf
push
dec
cmp
insl
sbb
sub
enter
lahf
mov
mov
gs
add
sub
fsubrs
add
jae
push
aaa
test
leave
inc
sub
xchg
pop
adc
loop
shrb
xchg
cmp
jnp
mov
inc
seta
mov
jae
cmp
or
aas
mov
fidivrl
add
test
push
icebp
lods
sub
xchg
rorl
rclb
aaa
aam
popf
jmp
and
sub
adc
pop
jns
sarl
scas
fwait
mov
pop
jnp
mov
imul
or
out
dec
cld
sbb
push
add
sarl
pop
andl
cmp
jne
lahf
hlt
pusha
mulb
ja
dec
mov
add
in
jg
sub
popa
scas
mov
mov
fsub
mov
movsb
cltd
sub
clc
es
pop
loop
addr16
clc
and
or
jl
hlt
jmp
lds
std
sub
mov
jp
dec
jae
shll
testb
fs
dec
scas
ret
pop
repnz
scas
jns
sub
inc
or
test
aas
cmovg
push
dec
dec
pop
ja
js
pop
cmp
dec
xor
aas
hlt
sbb
ja
mov
mov
incb
pop
adc
dec
js
xchg
outsl
mov
loopne
sbb
mov
xlat
scas
test
and
in
pop
hlt
rcrl
pop
testl
pop
jecxz
loopne
mov
filds
sbb
repz
fistpl
mov
add
in
cwtl
dec
lods
bound
scas
hlt
cmp
repnz
and
xor
jp
popf
cmpsb
stos
jecxz
inc
pop
adc
jne
xchg
stos
dec
pop
mov
mov
pushl
out
xchg
aas
and
ds
mov
sbb
lret
rep
inc
pop
dec
rolb
ja
icebp
cmp
rcl
iret
cwtl
ds
psubb
push
xchg
push
sbb
mov
adc
add
ret
mov
sub
jle
stos
mov
mov
cwtl
movsb
call
and
jl
lret
movsl
loop
icebp
cmp
jg
mov
nop
jae
int
jnp
int3
jb
push
xchg
pop
fisubrs
repz
jno
mov
mov
stos
nopl
fbstp
cmc
loopne
mov
nop
xchg
pop
jae
pop
pop
xor
mov
or
repnz
stos
push
ds
mov
cs
out
add
mov
nop
pop
movups
mov
or
xchg
fistpl
push
lods
mov
leave
sbb
or
adc
ja
movsl
fsubr
pop
mov
push
test
sbb
inc
testl
into
xlat
sub
sar
rcr
cltd
xor
cmc
test
fsts
xchg
out
lock
outsb
pop
jmp
adc
pop
sbb
adc
ret
sahf
out
outsl
scas
sarb
mov
inc
jl
inc
out
xchg
test
mov
sahf
cmpsb
pop
adc
arpl
add
xor
fistpl
sub
in
inc
push
shl
outsb
imul
insl
mov
push
inc
das
mov
inc
add
and
add
ss
loope
imulb
lock
leave
in
stos
push
popf
jle
loope
daa
or
and
or
lahf
cmpsl
push
bound
movsl
ret
mov
aam
lret
pop
fisttpll
add
xlat
add
inc
cmp
mov
push
dec
pushf
inc
or
repz
adc
and
or
and
inc
push
mov
stos
sub
xchg
cs
cmp
xchg
fs
mov
dec
fadds
dec
push
or
mov
or
test
movsb
outsb
loopne
dec
inc
das
jb
dec
andl
inc
test
nop
ja
inc
xchg
or
stc
stos
and
mov
sub
stc
loopne
cmp
cld
out
mov
xchg
sbb
in
lret
or
and
hlt
jmp
mov
dec
add
addb
jbe
cmp
jg
movzwl
jne
icebp
in
in
xchg
add
std
arpl
or
faddl
test
push
cmc
jg
pop
or
adc
sbb
fiadds
es
pop
mov
mov
aas
add
adc
sub
bound
frstor
mov
jmp
and
push
rol
xlat
sub
cmp
add
pop
adc
mov
jge
push
sbb
dec
scas
loopne
pop
imul
or
mov
in
mov
push
lods
adc
xlat
out
jl
hlt
cmp
push
cmp
pusha
sti
aas
sub
mov
cmp
stos
cld
xor
mov
icebp
xor
in
inc
jns
stos
jo
shl
and
enter
dec
push
xchg
add
leave
mov
pop
cld
int3
mov
lods
xchg
js
jb
mov
shll
xchg
hlt
cs
ljmp
sub
mov
xchg
scas
mov
cmp
xchg
imul
fbld
subb
movsl
jl
or
adc
aaa
ds
mov
push
leave
adc
push
rcrb
mov
frstor
or
mov
aad
mov
jo
xchg
mov
lods
jo
in
cmp
movsl
int3
mov
enter
mov
xchg
ds
lcall
stos
jbe
xchg
adc
cmp
ljmp
xchg
jp
mov
mov
in
je
cmp
mov
ss
add
scas
push
lret
pop
outsl
je
shrb
push
aaa
in
mov
loope
add
push
movsl
dec
pop
xchg
movb
in
mov
scas
test
mov
std
push
sti
js
fsubrp
enter
fstpl
jle
cmp
cmpsb
push
or
ljmp
fistpl
popa
and
sub
aaa
lahf
icebp
inc
fistpl
cmp
xchg
jbe
pop
jns
scas
aas
cmpl
inc
cli
fnstcw
jl
adc
jle
jo
mov
push
push
popa
lret
xor
jmp
adc
les
mov
mov
mov
mov
adc
mov
aad
inc
idivb
leave
mov
loope
pushf
loope
scas
adc
cwtl
xlat
sbb
mov
push
mov
sub
das
shlb
call
lock
aam
out
imul
faddl
mov
lahf
fstpt
cmp
mov
fwait
pop
cmp
in
jmp
sbb
ds
and
add
mov
rorl
movsl
jb
xlat
or
insb
rclb
adc
mov
dec
adcb
push
push
xchg
or
mov
popf
sub
and
es
sahf
test
mov
cld
insb
fld
adc
adc
dec
sahf
cmp
jmp
jg
stos
mov
lret
jecxz
pop
mov
lcall
in
add
imul
popa
leave
je
mov
les
repnz
pop
push
xor
test
mov
lds
inc
fadd
fisttpll
fs
std
ret
aaa
stos
xor
shrl
lret
clc
add
pop
sbb
fstpt
mov
or
cmc
test
inc
mov
pop
pop
pop
sbb
lcall
adc
sahf
mov
add
ljmp
mov
xchg
push
xchg
loope
xchg
push
out
out
fcoms
imul
test
xor
dec
inc
xchg
dec
int3
mov
or
mov
les
or
dec
pop
and
lds
xchg
push
fsubs
pop
sub
add
push
lcall
xchg
push
insl
cmp
inc
jb
es
jo
fidivl
jae
add
xor
cwtl
dec
mov
pop
dec
sbb
jne
push
ss
out
sub
test
incl
add
jbe
xor
popf
xchg
lods
into
xchg
out
addb
pushf
lods
lods
and
add
pop
insb
dec
ficompl
cmp
xor
call
std
shrl
dec
xchg
dec
mov
test
dec
aam
jp
fildll
outsl
mov
xor
loopne
cmp
stos
push
inc
leave
mov
lea
cmp
mov
cmp
stos
jne
fucomip
fcomp
xor
jg
sahf
in
and
pop
dec
push
sbb
mov
and
cmp
pop
addr16
pop
or
mov
cld
addl
and
adc
movsb
clc
add
lock
divb
adc
xchg
pusha
pop
stos
in
stos
call
shll
lods
add
repz
mov
outsl
mov
cld
adc
xchg
imul
pushf
std
xlat
cld
orb
mov
jo
pop
inc
aas
sub
nop
nop
jg
mov
dec
ss
or
ljmp
bound
mov
cli
or
mov
aaa
outsb
loope
cld
aam
outsb
iret
pop
jo
or
mov
push
lods
inc
addl
cmc
fchs
push
pop
outsl
pop
mov
in
loop
loope
jb
es
pop
jle
popa
rcr
stc
movsb
mov
dec
mov
std
mov
outsb
test
cmp
or
mov
ljmp
and
jno
enter
ds
in
aad
rcrl
es
jno
inc
mov
push
pushf
dec
in
aaa
push
push
test
lret
inc
push
mov
sbb
push
fnstcw
sub
xlat
dec
or
push
pop
mov
xchg
lret
push
sub
adc
mov
enter
push
push
mov
mov
sbb
sub
shll
filds
push
mov
push
and
repnz
mov
std
mov
inc
push
push
bound
clc
call
movsl
mov
idivb
xchg
xor
jbe
stc
lret
shrl
in
pop
loop
aam
lock
sub
popa
fwait
xor
mov
sub
xor
clc
cmc
addr16
cmpsb
sub
mov
cmpsb
fistpll
int3
cld
les
movsb
andb
mov
push
mov
outsl
pusha
mov
cmp
stc
cli
fidivs
je
mull
repz
loopne
jle
rcll
bound
rorl
pop
push
push
sbb
mov
cmpsl
aam
addr16
jne
mov
xor
cmpb
cmp
xchg
aas
adc
in
inc
lret
fisubrs
mov
enter
in
xor
pop
mov
fisubs
fsubl
cmc
cmpsb
pop
mov
jecxz
ja
les
dec
test
adc
int
cli
mov
xchg
or
push
push
sub
push
lahf
pop
jae
sbb
xorl
jmp
cmp
xchg
xchg
xchg
popf
out
adc
inc
jb
fnstsw
in
outsl
mov
add
fs
mov
sarl
stos
inc
mov
lds
lea
jae
call
fistpll
inc
ss
into
and
pop
outsb
xor
imulb
dec
out
out
xor
xchg
movsl
jbe
jecxz
cmpsb
push
cmc
fmull
test
inc
and
cmp
adc
ret
sahf
dec
ret
mov
cmpsb
repz
les
pop
xchg
imul
fs
inc
jle
lea
cmp
testb
push
add
icebp
xchg
fsubrl
pushf
sbb
movsb
popa
pop
ljmp
addr16
aad
dec
jbe
mov
lahf
push
imul
popf
ret
addr16
jge
cld
sbb
inc
inc
popw
adc
jmp
mov
mov
mov
lret
sbb
dec
pop
adc
fcompl
xchg
jb
fs
lds
and
mov
xchg
test
or
ds
fbstp
insl
popf
jo
fists
mov
xchg
xlat
into
mov
sbb
push
fimull
mov
or
ss
fisubrs
lds
and
lods
xor
inc
and
ret
mov
ret
sarb
jns
scas
push
pop
insb
cmp
sbb
in
mov
push
sbb
gs
sti
je
push
into
scas
cmp
out
xor
mov
mov
pop
add
jp
stos
dec
insl
cs
sbbb
aam
cmpb
jle
jae
sub
sub
inc
ljmp
adc
inc
sbb
jle
shlb
in
in
push
and
adcb
dec
jo
lret
add
imulb
jae
scas
mov
mov
jle
divb
add
sbb
push
repz
inc
xor
gs
mov
cld
cmp
xchg
mov
lods
cs
cmc
lds
out
imul
popa
or
mull
sbb
gs
aas
mov
cs
repnz
sbb
shll
inc
ljmp
jae
mulb
jmp
cwtl
mov
js
fisttpl
pop
fnstcw
cwtl
sub
mov
xor
lret
insb
mov
xor
outsl
aas
dec
mov
das
xor
or
fistpll
jo
mov
les
xchg
pop
and
dec
cmp
in
xchg
mov
jl
jle
jb
pop
out
das
lret
cmp
fcomp
inc
xor
movsb
push
clc
jl
std
es
cmc
lock
or
xor
jg
add
dec
pop
inc
inc
push
and
xchg
add
test
inc
imul
outsl
mov
jo
and
xchg
aas
or
test
les
dec
xchg
jg
std
clc
or
xor
lds
cs
movb
neg
insl
mov
push
into
sbb
jp
enter
jle
jne
out
jnp
jo
popa
pop
je
sbb
shrb
cmc
xchg
sbb
cli
dec
dec
mov
jmp
ja
hlt
gs
idivl
int
sub
xchg
inc
xor
cmp
cld
daa
icebp
ret
inc
mov
ds
lret
cmp
enter
mov
mov
imul
xchg
xchg
push
out
cmp
in
div
mov
push
gs
out
das
jno
xchg
adc
stc
fwait
in
sbb
andl
adc
xchg
repnz
jns
fadd
jmp
cmpsb
xor
jmp
xor
dec
jl
aas
hlt
inc
clc
clc
xchg
xor
cmp
fstpl
jecxz
inc
inc
cmc
cmp
mov
inc
xor
adc
pop
inc
outsb
xchg
pop
shll
push
pop
ss
xor
pop
push
andb
outsb
jg
jae
pop
into
and
pop
push
add
xor
loope
hlt
xor
repnz
xchg
into
sub
int
sbb
push
dec
sbb
movb
push
call
out
inc
inc
adcb
dec
sbb
fbld
jbe
pop
std
filds
push
rorl
popa
jp
sbb
pop
add
mov
pop
cmp
ficompl
and
stc
pusha
sbbl
dec
xchg
xchg
pushl
cs
movsb
stos
dec
out
or
push
pop
movsl
ret
xchg
fadds
lret
dec
ja
jge
and
mov
test
inc
movsb
xor
jle
mov
jmp
mov
data16
jo
xchg
mov
xchg
lret
lret
jbe
es
cmc
popa
aaa
mov
cmpsb
xchg
or
mov
cmp
pop
fcomp
jecxz
sub
adc
jge
and
add
jb
inc
sbb
mov
ja
cs
pop
dec
cli
mov
push
jmp
dec
jo
mov
mov
inc
mov
jmp
dec
push
ja
std
ret
lock
mov
idivl
test
inc
mov
xor
mov
mov
add
pop
or
inc
divl
negl
mov
jno
testl
and
pop
cli
lret
mov
adc
outsb
push
push
pop
test
add
mov
push
pop
shr
lods
adc
push
xchg
add
inc
test
cli
movsb
jp
mov
pop
gs
mov
int
dec
andl
xlat
cld
push
dec
clc
jno
repz
push
cwtl
add
mov
jne
ret
cmp
stos
movsl
je
insb
mov
lods
mov
push
filds
call
repnz
sbb
inc
mov
adc
sahf
movsb
stos
scas
test
les
push
mov
cmpsl
jge
lock
inc
fisttps
int3
in
andl
fcomi
mov
jp
xlat
cmp
daa
subl
scas
sbb
and
dec
in
add
fcompl
stos
movq
enter
sarb
cmp
mov
ja
jecxz
mull
inc
jns
push
mov
jecxz
push
jl
imul
xchg
ds
out
jae
fists
jmp
lcall
xor
das
inc
das
movsb
xor
data16
fwait
add
xchg
mov
xlat
add
adc
das
dec
xor
repz
fcmovu
pop
inc
stos
mov
test
ficomps
or
or
gs
cmpsb
leave
or
jp
pop
or
xor
and
pop
add
pop
stc
jae
jb
out
xchg
mov
or
scas
es
mov
pop
pop
ret
shr
repnz
fwait
push
jns
daa
mov
rorb
sahf
addr16
pop
cli
mov
pop
fdivrs
pushw
inc
arpl
cmpsb
sub
mov
push
idivl
mov
inc
cmp
cmp
popa
adc
das
lret
mov
mov
bound
imul
test
int3
push
jge
scas
aam
test
in
imul
in
movsb
fbstp
mov
jns
insl
loopne
dec
mov
out
push
fisubl
push
or
call
inc
jl
fcmovu
dec
mov
pushf
mov
ret
sub
and
add
adc
pushf
fstps
rcll
pushf
jne
sbb
add
insb
sub
rcl
pop
mov
sbb
sbb
insl
push
popa
add
in
pushl
inc
in
jns
xchg
stos
jmp
cld
jl
les
mov
cmp
xchg
clc
icebp
pop
and
enter
dec
jmp
daa
stc
scas
and
fsubl
lock
lahf
shl
xchg
pop
jle
dec
sub
lea
js
leave
jge
mov
fs
add
aas
fstpt
push
add
fwait
cltd
sbb
adc
in
enter
sahf
mov
xor
hlt
jmp
pop
dec
out
mov
sub
aam
adc
xorl
push
pop
pusha
andl
aad
pop
xor
fs
or
aaa
push
ja
mov
xchg
mov
pop
adc
sbb
pop
out
adc
jp
in
mov
mov
movb
imul
mov
dec
mov
cltd
sbb
xchg
mov
inc
out
mov
inc
mov
xchg
inc
sbb
aas
mov
sti
in
cmp
leave
sbb
xchg
jno
into
cmp
mov
aaa
jmp
stos
dec
sub
lods
enter
xor
outsl
cmp
mov
xor
mov
fiaddl
jecxz
dec
fisubl
jecxz
inc
mov
jl
inc
out
jns
xchg
dec
jb
cmp
lods
sbb
arpl
les
sbb
xchg
push
push
cmp
xor
pop
dec
insb
push
adc
add
sub
mov
jno
mov
xchg
dec
mov
shll
outsb
mov
or
test
lret
push
push
and
xchg
and
dec
dec
mov
push
jnp
cmpsl
adc
and
loopne
push
xchg
lret
in
pop
je
adc
inc
mov
mov
sub
mov
fstl
cs
mov
pop
jge
pop
test
nop
mov
daa
arpl
popf
cmp
filds
lea
xor
clc
and
icebp
mov
ds
ja
mov
icebp
pop
outsb
idivl
insb
inc
jle
pop
dec
xor
loopne
jle
dec
xor
pop
mov
fistpl
push
loope
pop
ficoml
jb
les
add
clc
sub
mov
add
scas
std
out
sbbb
adc
aam
and
in
mov
popf
push
lds
call
daa
sarl
mov
cmp
call
insl
mov
xor
pop
mov
cmp
negb
jp
xchg
out
fcmovu
notb
jmp
add
dec
xchg
sbb
ja
mov
pop
cs
push
or
in
mov
push
jae
adc
push
xchg
mov
andl
fsubrl
imul
mov
mov
mov
and
fdivr
icebp
jnp
xchg
mov
clc
aad
inc
test
push
sbb
test
ljmp
xchg
mov
jl
je
lcall
ret
pusha
clc
in
mov
pop
dec
or
cmp
int3
and
mov
mov
jle
dec
popa
ficomps
stos
push
dec
and
insl
inc
rclb
test
or
aas
mov
adc
in
inc
mov
xor
jae
mov
out
adc
lods
adcb
pop
icebp
add
pop
fwait
imul
aam
add
fdivp
ss
call
xchg
popf
mov
dec
jno
adc
je
imul
lcall
or
mov
mov
jle
or
dec
pop
mov
mov
and
push
xor
cltd
mov
xorl
mov
movsb
fimuls
ja
pusha
fs
mov
es
pop
dec
xor
and
pop
repz
mov
addr16
pushf
or
test
pop
mov
movsl
sti
pop
mov
and
hlt
dec
out
leave
cmp
out
notb
mov
aas
adc
sbb
ss
xor
roll
rcll
pmuludq
imul
sbb
lret
lahf
shrb
xchg
ret
xchg
addr16
and
mov
repnz
mov
push
jnp
enter
in
adc
outsl
dec
mov
lea
loopne
testb
jne
out
sbbb
fistl
lock
push
fcmovu
adc
insl
lods
mov
sub
xor
pop
add
imul
pop
test
push
add
push
sub
mov
push
mov
jp
mov
repnz
cmp
lock
jmp
dec
jnp
stos
les
mov
mov
clc
xchg
mov
dec
and
jge
mov
popa
fs
push
fcoml
ja
sbb
repz
popa
pop
cs
into
lds
cli
les
pushl
and
cmp
sub
sub
fs
dec
mov
jnp
jle
sarb
mov
loop
inc
push
dec
mov
lods
push
neg
shlb
push
sti
popf
iret
sar
fwait
sti
adc
cmp
repnz
push
pcmpgtd
or
test
je
dec
lcall
xorb
cwtl
cmp
xor
xor
or
test
lahf
pop
int
xlat
jg
mov
pop
ja
test
dec
lcall
mov
fwait
ljmp
imul
repnz
add
and
and
xchg
xchg
shll
mov
in
ret
mov
push
xchg
or
icebp
into
lock
test
push
mov
dec
loopne
clc
and
push
loope
push
into
loopne
enter
fmuls
push
sub
xor
pop
cltd
lret
aam
inc
enter
push
sub
cmp
pop
push
push
mov
stos
pop
addr16
sub
lea
push
xchg
inc
loopne
xchg
or
inc
jbe
ds
aad
aaa
jb
ljmp
je
ja
mov
ja
mov
pop
movsb
xchg
mov
test
sub
int3
and
inc
fidivrs
scas
test
lcall
in
add
movsl
mov
enter
cmp
ljmp
push
pushf
mov
imul
dec
loop
jle
push
in
aam
into
push
mov
pop
push
inc
jno
icebp
std
mov
aaa
ljmp
jb
test
cmp
xor
dec
xchg
cmp
lods
and
je
lods
fldcw
rep
roll
xor
add
lahf
fadd
push
push
xchg
sbb
fiadds
jno
faddl
imul
aaa
gs
adc
add
mov
inc
inc
add
int3
fnstcw
stos
cmp
es
or
repz
int
inc
hlt
fiadds
pop
or
inc
fsubs
adc
jno
cmp
cpuid
stc
jnp
or
roll
ljmp
lret
pop
jnp
push
rorb
sub
int3
stos
jo
adc
push
or
test
sub
in
push
and
mov
push
stos
xchg
jbe
or
sub
mov
repz
popa
jno
shll
push
out
and
sub
jl
mov
movsb
imul
mov
inc
and
sub
cli
jns
xor
or
bound
push
adc
not
in
sub
mov
aaa
shlb
mov
mov
and
fiaddl
int
push
loop
jbe
out
add
je
ds
xor
mov
aam
scas
mov
fs
cmp
nop
lds
push
and
mov
sbb
jg
adc
aaa
out
int3
setb
add
add
insb
dec
inc
loope
mov
das
or
ss
or
stos
gs
adc
pop
push
es
out
cltd
test
sahf
inc
xchg
xor
mov
cmp
mov
or
insb
fcoml
sbb
std
call
xchg
cmp
mov
aam
pusha
fcoml
add
nop
fiaddl
mov
movsb
xchg
sbb
shll
xchg
sbb
xchg
les
push
outsl
jb
xchg
ja
movsb
mov
orb
pop
push
ret
cmp
pop
jecxz
pop
push
sbb
dec
or
out
xchg
scas
inc
pop
fwait
jmp
stos
enter
in
and
mov
int
repz
cs
cmp
insl
push
and
mov
mov
cmp
add
lret
hlt
pop
roll
push
lcall
jne
lods
fcompl
sub
sbb
sahf
push
int3
scas
fstpt
je
adc
cmp
mov
or
and
fdivrs
xchg
jbe
adc
xor
jns
aas
mov
mov
cmpsb
sbb
adc
xor
insl
jno
mov
jmp
aad
ret
inc
js
mov
xchg
lret
push
dec
push
dec
jge
mov
aam
xor
out
mov
addr16
mov
xchg
xchg
cltd
push
push
mov
jne
mov
jbe
daa
outsl
xor
pop
imul
call
hlt
push
inc
aaa
pop
mov
or
sbb
xorl
ret
cmp
xchg
jnp,pt
in
jns
and
fsubrl
mov
in
add
push
ljmp
repnz
inc
lock
pop
rcr
outsb
xchg
in
call
jecxz
dec
ret
sbb
cmp
jb
and
lock
or
arpl
mov
xor
cwtl
in
mov
out
sub
mov
sbb
dec
js
ror
fwait
test
xchg
mov
cltd
js
aam
jp
movsb
adc
inc
xor
in
mov
cmc
dec
in
in
dec
bound
xchg
das
test
jb
and
push
dec
jne
je
sbb
adc
xor
imul
sub
mov
jae
loope
lods
cltd
out
mov
xor
je
pop
xchg
inc
mov
push
test
neg
je
loopne
repnz
test
in
push
xchg
int3
pop
adc
fmul
outsl
lock
cmp
div
lea
fstp
inc
adc
inc
adc
fidivrs
fneni(8087
test
pop
jne
mov
call
and
pop
test
rcr
icebp
outsl
js
mov
cmpsb
jbe
push
xor
lods
out
mov
jge
clc
add
shrl
out
imul
adc
div
addl
add
xchg
pop
gs
push
cmp
xor
push
data16
clc
pop
push
test
and
push
jno
jae
inc
and
xor
hlt
imul
test
clc
mov
xor
sahf
out
scas
and
mov
iret
add
push
movsl
pusha
push
ficompl
mov
pop
leave
mov
dec
sbb
and
pop
and
pmullw
dec
mov
cmp
stos
xchg
flds
call
in
cmp
sbb
std
sbb
frstor
inc
pop
fdivr
push
test
fnstsw
divb
pop
aaa
mov
bound
pusha
addr16
rorl
inc
aam
pop
stos
fimuls
inc
das
iret
fmulp
test
cmp
addr16
shl
loopne
lds
aam
inc
cld
inc
test
inc
jb
cs
leave
push
lret
fwait
stc
pushl
into
dec
inc
push
add
fistl
and
nop
movsb
cmpsb
and
in
xchg
cltd
lods
jg
fwait
test
push
pop
jmp
lods
cwtl
push
test
mov
leave
xchg
jae
sahf
js
mov
data16
pop
loope
xchg
jle
test
stc
fldenv
sbb
lahf
cwtl
roll
mov
cmpsb
and
and
in
inc
xor
cmp
in
push
dec
or
pusha
and
mov
add
outsb
cmp
imul
arpl
cs
inc
mov
in
lcall
add
push
jno
test
sti
or
lcall
fnsave
neg
aaa
lods
push
out
cmp
pminsw
cmp
push
add
divl
inc
fisubl
movsb
int3
sbb
jb
mov
sbb
adc
jns
cmpsb
push
or
pop
lcall
in
inc
arpl
loopne
insl
or
push
inc
adc
sahf
rcll
leave
dec
in
daa
lods
or
rcrl
xor
adcb
and
out
out
int3
out
sub
jle
jg
mov
in
mov
jmp
dec
std
mov
jbe
lods
or
enter
ret
jge
xchg
in
lea
out
cbtw
jp
inc
xchg
xchg
add
imul
sbb
jbe
inc
pop
stc
popa
fisubrl
cmpb
xchg
inc
imul
in
lock
call
imul
sbb
int
dec
fimull
and
dec
cld
vpshlq
mov
adc
jbe
and
xor
imul
lret
and
mov
fidivs
aad
sbb
push
pusha
xor
xchg
mov
pop
sub
js
dec
loop
cld
xchg
into
imulb
mov
fmuls
sbb
sub
or
insb
and
test
mov
repnz
sbb
out
xchg
add
and
cmp
dec
in
cmp
ret
sbb
and
inc
mov
cmp
scas
lock
fwait
retw
leave
rcrb
xchg
xchg
insl
into
fucom
data16
scas
dec
dec
ja
add
addr16
arpl
add
hlt
popa
push
dec
cmp
adc
mov
mov
and
lret
and
dec
dec
pop
out
jge
in
xlat
mov
cld
sbb
pop
aaa
push
sbb
inc
lret
ret
xchg
xorb
adc
in
les
shlb
jae
daa
jns
and
jae
mov
or
aam
add
fldl
xor
push
scas
pop
daa
aad
leave
mov
mov
xchg
and
lahf
andb
mov
fs
sbb
xor
fs
inc
lea
jne
sbb
gs
fsubs
fadd
mov
fwait
push
and
rcrb
fs
pushf
mov
cmp
add
nop
xchg
std
mov
adc
add
movsb
in
xchg
cmp
dec
sub
leave
mov
inc
jmp
push
bound
test
ret
mov
cmpsl
insl
dec
cmc
or
je
and
ja
xchg
testl
gs
xor
sbb
je
mov
stos
jbe
push
iret
add
add
mov
add
sub
fs
sub
push
jbe
movsb
pop
xchg
ss
imul
movsl
sub
in
push
addr16
mulb
lcall
add
mov
xchg
xchg
adc
lahf
lret
clc
mov
inc
jg
mov
ret
dec
dec
mov
aad
ja
mov
cmp
add
or
negl
pop
cmovb
cmpsb
imul
inc
push
jp
xchg
aaa
mov
sbb
jl
ret
icebp
sahf
xor
mov
dec
icebp
stc
mov
cwtl
jg
xor
and
lret
lea
push
test
cmc
shll
jns
adc
mov
test
gs
arpl
movb
into
stc
lahf
lock
int3
jae
aam
add
mov
cmpsb
out
sub
pop
push
jb
push
and
xor
mov
mov
push
push
cmpl
pop
shll
pop
add
faddl
xor
das
lahf
ds
dec
mov
pop
mov
and
dec
enter
cmp
lds
and
and
insb
imul
adc
cmp
into
mov
dec
insl
add
mov
mov
repz
ficompl
sbb
dec
stos
out
add
sub
and
sub
das
cmp
push
pusha
inc
and
or
shrb
lahf
push
and
insb
sub
into
mov
dec
cmp
push
cmp
loope
dec
dec
mov
pop
sarl
movsb
jl
inc
push
xchg
jecxz
push
jnp
fisttps
test
ror
lock
jmp
push
dec
lods
test
aam
dec
add
out
xchg
inc
mov
jl
fwait
movsb
mov
movsl
insb
sti
mov
sbb
int
int3
xchg
jb
sbb
mov
cmp
in
repnz
rcrl
xor
mov
mov
shrb
xchg
aad
xor
xlat
adc
xchg
sub
mov
inc
cmp
ds
mov
out
xor
mov
dec
ljmp
sub
jp
js
mov
test
je
pop
adc
or
pop
push
mov
or
test
ret
push
inc
add
addl
sbb
xchg
inc
mov
outsl
movsb
in
dec
mov
iret
sbb
loop
imul
arpl
jne
sbb
pushf
cli
inc
sub
ret
imul
dec
push
mov
sub
sahf
lods
imul
pop
je
insl
mov
fs
push
lcall
cmpsb
mov
ret
into
popa
std
and
sbb
pop
movb
cld
imul
loopne
lahf
ljmp
stc
daa
push
sub
xor
cmp
or
xor
pop
aad
outsb
xor
int
mov
imull
daa
mov
pop
or
xlat
data16
mov
sub
jb
inc
xor
ds
test
sti
mov
or
jns
movsl
outsl
dec
jge
in
pop
inc
adc
add
lahf
cmpsl
call
lock
daa
xchg
and
mov
ja
in
adc
dec
sub
sahf
test
decl
inc
setns
xchg
rcrb
cmpsb
scas
cmp
addb
out
adc
push
adc
cli
add
cmp
dec
out
pop
dec
bound
pop
mov
clc
out
ret
fmulp
aas
ja
or
frstor
push
inc
pop
push
cmp
ljmp
psubd
cmp
gs
xchg
dec
test
int3
and
sbb
push
pop
in
add
sbb
out
xchg
ja
lcall
add
int
test
mov
xchg
mov
cmpsl
dec
rclb
cmp
fs
xchg
inc
icebp
lock
or
mov
push
movsb
pop
cltd
xor
xchg
xor
jg
cwtl
shll
iret
mov
pop
lea
fs
add
aaa
dec
popa
out
negb
sbb
loopne
test
inc
imul
jg
jno
out
cmp
pop
fildl
out
jno
pop
negb
fucom
pop
mov
pop
mov
mov
or
scas
xchg
lods
rol
sahf
or
repz
or
dec
mov
ja
ljmp
cmpsb
popa
adc
sbb
mov
xlat
dec
rcrl
loop
daa
jecxz
lahf
inc
add
pop
or
xor
push
stos
ret
test
cmc
ret
jne
dec
push
mov
iret
mov
lahf
js
add
sub
add
scas
test
cmp
stc
les
push
mov
aam
mov
sub
mov
lods
xchg
hlt
sbb
or
sub
psubb
jmp
in
add
fstps
cld
sub
pop
ljmp
fwait
and
mov
scas
pop
lahf
in
adc
loopne
or
sub
repz
not
in
fnstsw
out
cltd
push
mov
in
test
or
mov
cwtl
xchg
cmp
fwait
shrl
mov
loope
sub
add
inc
jno
push
ds
inc
and
lock
movsb
cld
mov
in
test
es
negb
ret
or
mov
dec
pop
cwtl
ljmpw
out
cmp
lods
pop
adc
cwtl
pop
dec
adc
in
test
movl
inc
test
mov
add
cmp
mov
sub
pop
mov
insb
ljmp
push
ljmp
rolb
mov
adc
jmp
nop
cld
dec
sbb
jnp
mov
pushf
mov
ret
cmp
xor
dec
jecxz
or
push
icebp
popf
jno
xlat
nop
jno
adc
jle
mov
or
mov
lods
andl
imul
mov
fwait
leave
inc
push
push
pop
dec
lret
loope
xor
gs
push
inc
leave
fstl
loopne
sahf
aas
inc
xchg
push
push
into
add
push
leave
pop
movl
jle
mov
push
daa
addr16
mov
mov
and
into
jne
fsubrl
push
xchg
gs
mov
sub
dec
xor
sti
sub
cmpsl
jno
mov
sti
mov
add
adc
mov
adc
pop
mov
jbe
mov
jle
xchg
clc
pop
aad
inc
lret
out
popf
jecxz
cmpsl
dec
xchg
iret
fldl
ja
xchg
fwait
repz
cmp
mov
xor
mov
cld
int
push
scas
jno
xchg
daa
repz
aad
out
les
mov
jns
aam
in
mov
xchg
push
mov
dec
push
xchg
push
insl
push
aam
or
enter
dec
clc
cltd
stos
popf
jb
push
mov
sub
sub
pop
fmul
sub
xchg
bound
into
pop
sub
in
sbb
outsl
pushf
or
add
sub
das
inc
cmp
es
loop
sub
test
lret
loope
and
and
pop
scas
sbb
cmpsl
pushf
rolb
pop
xor
xchg
mov
dec
rorl
sbb
cmp
nop
in
xchg
cmp
icebp
repnz
adc
pop
js
into
hlt
fbstp
in
ret
cmpsl
push
in
cmp
nop
lahf
push
clc
test
sub
sbb
addr16
inc
dec
jp
sahf
cmpsl
inc
inc
jno
jne,pt
pop
pop
xlat
dec
in
in
lcall
and
inc
pop
xchg
jecxz
push
jbe
dec
or
outsb
lcall
mov
dec
rclb
scas
flds
in
mov
lods
xor
cmp
arpl
and
cmp
jae
les
js
rcrl
fiaddl
adc
sub
das
fsubrl
push
dec
sbb
pop
mov
or
es
sbb
mov
adc
cmpsl
ja
or
inc
popf
mov
adc
or
pop
dec
sbb
mov
das
or
add
out
jmp
and
sub
pop
xor
data16
pusha
scas
pop
push
inc
jecxz
popf
mov
xchg
add
int3
adc
outsb
or
sub
sub
fisubrs
imulb
fwait
inc
pop
stos
loop
sub
push
sub
dec
adc
mov
xchg
ret
jno
mov
pop
pop
ret
test
add
movl
cmp
lods
xchg
rcr
inc
int3
or
mov
shll
fwait
mov
push
pop
xchg
pop
and
mov
sub
movsl
divb
mov
pop
js
sarl
cltd
xchg
movsl
sbb
jo
pop
dec
fs
sahf
push
in
jecxz
scas
outsb
ds
fsubrs
jae
sahf
and
cmc
push
mov
jae
aas
mov
es
jge
inc
mov
xor
cmp
ret
popa
mov
and
mov
xchg
mov
add
pop
mov
out
std
push
cmp
adc
pop
fwait
lods
out
int3
mov
adc
icebp
shr
or
jp
mov
adc
pop
lret
adc
inc
leave
cmp
sbb
lods
jle
mov
je
sahf
push
aas
sbb
lret
movsl
sbb
mov
ret
loopne
push
inc
cmp
jge
push
inc
mov
add
sub
add
cmp
mov
jl
mov
fldcw
sarb
in
dec
jne
stc
enter
adc
push
ret
or
mov
rcrb
shrb
in
roll
addr16
movsb
hlt
and
stos
inc
adc
xchg
inc
vmwrite
xor
push
stc
je
lds
cwtl
aam
add
inc
xchg
dec
mov
or
jecxz
adc
jecxz
and
mov
repnz
sub
cwtl
loopne
testb
xchg
icebp
sarl
xor
or
pop
idivb
and
and
repz
add
lock
test
iret
popf
cmp
mov
and
clc
pop
imul
cltd
sub
add
dec
cmp
cmp
jge
mov
xor
jns
fstpl
sub
sub
ljmp
pop
roll
pop
gs
jns
hlt
std
dec
ljmp
leave
dec
leave
sbb
xorb
sbb
roll
sub
push
cli
adc
inc
enter
cwtl
in
and
xor
pop
jne
ficoml
arpl
ret
mov
ljmp
push
adc
cmp
repz
jge
or
mov
mov
adc
mov
ret
push
scas
clc
test
mov
jb
add
inc
pop
lcall
in
mov
mov
rcll
or
aam
mov
sub
dec
rclb
mov
loope
push
sub
in
jbe
sahf
and
mov
scas
or
push
test
adc
push
popf
dec
push
sarl
aaa
andb
outsb
sbb
push
push
addr16
imul
scas
flds
sub
out
shll
gs
in
lcall
fwait
or
xchg
ljmp
jl
punpckhdq
or
cmp
pop
test
imul
clc
outsb
push
repnz
lock
mov
es
jns
das
pop
andb
jmp
fistps
xlat
mov
leave
push
push
pop
es
or
rol
push
jns
adc
lret
insb
mov
push
fs
imul
push
ss
xchg
mov
fwait
sarb
jmp
mov
xchg
add
cmpb
push
or
inc
lea
jmp
imul
mov
fcmovbe
xchg
mov
sbb
or
loope
dec
fwait
jne
loop
adc
push
scas
mov
shlb
mul
pop
mov
mov
mov
jae
ds
lcall
cmc
cmpsb
adc
mov
pop
ret
shl
jne
pop
adc
js
inc
fcompl
sahf
xor
xor
jmp
out
rolb
lock
pop
fs
leave
jl
andl
into
jb
bnd
out
and
aas
pop
cmp
mov
jge
popa
mov
lods
inc
out
fs
rorl
xchg
int3
push
jb
lret
loop
pop
mov
dec
movsl
mov
sbb
xchg
lods
pushf
stos
xor
or
je
xchg
in
jo
loopne
ja
xor
pusha
pop
add
lock
push
enter
inc
add
daa
sbb
pop
push
xchg
outsb
out
dec
stos
fbld
pop
jbe
adc
addr16
xor
fstpt
adc
inc
lret
lea
cli
mov
mov
jne
lock
sub
mov
sbb
scas
pop
cmpsb
test
xor
test
mov
xorb
pop
xchg
xor
xor
std
mov
inc
adc
xor
inc
aad
arpl
cli
mov
call
stos
cmp
fcoms
pop
je
or
popf
sbb
int3
pop
mov
pop
shrl
inc
jae
xor
dec
les
icebp
test
test
aas
mov
ljmp
scas
sbb
mov
lret
push
mov
mov
aam
mov
lods
lcall
jne
adc
pop
outsl
rol
psubsb
addr16
xor
pushf
lods
mov
lahf
repnz
push
lods
pop
jae
ret
into
cmp
shl
push
add
and
pop
in
mov
subb
dec
call
in
add
and
call
in
lret
pop
mov
addr16
testb
loop
pop
jmp
sub
or
jne
mov
lods
stos
pop
mov
fstpt
testb
pusha
inc
enter
pop
push
cmc
xor
insb
xchg
adc
stos
imul
pop
mov
repz
mov
xorb
aad
cmp
add
push
add
loopne
dec
xchg
push
push
lret
popa
sub
inc
pop
jo
xor
ds
mov
xchg
push
sbb
mov
xor
dec
imul
lahf
push
call
gs
mov
iret
mov
push
jecxz
mov
xlat
adc
pop
lret
inc
dec
fnstcw
fldl
ja
enter
xchg
and
cltd
fmuls
xchg
in
das
xor
or
sub
fisubs
mov
adc
xchg
adc
fcmovu
enter
insb
inc
scas
cmp
andb
test
mov
lret
mov
push
pop
arpl
or
mov
sbb
test
clc
push
xchg
in
dec
icebp
out
insb
fwait
nop
fsubl
imul
cmpsb
jb
fnstcw
xchg
mov
out
mov
int
das
cmp
push
clc
mov
mov
inc
sbb
insl
lret
outsb
jp
jnp
imul
mov
jb
mov
jg
cmpsb
jp
es
add
xor
filds
rcrl
repnz
push
mov
dec
pop
inc
push
mov
pop
add
adc
dec
hlt
mov
das
push
enter
fmuls
ret
cltd
jge
inc
fnstsw
mov
testl
push
bound
pop
mov
bound
add
dec
loopne
inc
jns
outsb
nop
icebp
xor
mov
push
lret
dec
sub
dec
jmp
andl
mov
mov
xor
jp
nop
daa
lret
mov
cld
mov
push
dec
xsha256
cmpsb
adc
xchg
mov
jnp
test
std
jne
mov
jle
push
mov
test
sbb
cmp
pop
mov
ja
jae
add
fistl
pop
cli
int3
dec
test
mov
jae
insb
or
mov
sbb
jne
orb
repnz
xchg
pop
shlb
push
and
test
push
mov
bound
out
addr16
pop
gs
icebp
xchg
test
arpl
jp
dec
das
dec
pop
jecxz
cli
mov
add
std
jmp
push
inc
shl
push
cwtl
jle
shl
roll
aas
and
mov
enter
sub
int
mov
je
aam
add
or
inc
jg
and
test
sub
push
test
stos
shlb
lret
xlat
lcall
adc
pop
lea
inc
cmpsl
xor
xor
scas
mov
mov
inc
outsl
movsb
xor
mov
mov
int
adc
shlb
push
fistl
stos
out
fcoml
gs
aas
lods
mov
adc
or
xor
and
xor
lds
ret
pop
mov
lcall
shrb
sbb
inc
sub
int3
roll
jl
ja
sub
sbb
addr16
mov
xor
or
fst
js
fildl
scas
fnstsw
fucom
jl
popf
pop
sub
inc
lds
aaa
outsb
xor
jmp
call
dec
inc
int
push
jae
lret
std
xor
ja
add
enter
push
jns
in
test
pop
repz
xchg
push
aas
shl
mov
ret
in
jne
dec
scas
ficompl
add
idiv
mov
sub
scas
hlt
sub
lock
les
mov
xor
in
mov
popa
ds
out
cmp
repnz
pop
jo
cmpsb
or
lea
xchg
sbb
mov
xor
fstl
lret
addr16
or
push
lahf
data16
mov
repz
ds
imul
add
mov
xor
pop
jno
jmp
and
shlb
and
leave
lahf
xchg
cltd
stos
icebp
cmp
out
pushf
loopne
dec
inc
sbb
ficompl
push
inc
cltd
cmc
push
jae
loope
cmp
repz
lahf
push
inc
cmp
mov
outsl
fisttpll
aad
xor
test
adc
push
pop
cmp
test
cmp
mov
mov
out
push
mov
lahf
adc
or
xchg
pop
or
repnz
ret
dec
or
addr16
scas
adc
fisubs
or
shr
loopne
add
hlt
test
rol
dec
icebp
testb
fsubrl
mov
mov
nop
add
clc
ffree
pop
fs
mov
mov
xchg
ss
cmpsb
out
mov
je
ror
sahf
out
dec
mov
pop
inc
sub
push
shlb
mov
xorb
cmc
pop
pop
jne
pushf
dec
cltd
cmp
xor
fwait
dec
enter
cmpsl
push
jb
push
dec
pop
aam
xor
mov
or
mov
inc
mov
pop
rcll
shlb
inc
adc
jnp
adc
push
jmp
rol
mov
adc
dec
mov
repnz
cltd
xor
ficomps
push
arpl
loope
mov
andb
pop
inc
aas
call
mov
push
div
mov
enter
sbb
sti
addl
inc
xor
cmpsb
or
jp
or
jnp
or
mov
add
jno
int
loopne
mov
push
scas
scas
leave
jg
xor
mov
adc
sbb
mov
dec
xchg
dec
lret
jle
mov
cmp
fwait
mov
fs
jmp
sbb
xor
xchg
xchg
add
fs
and
jne
xchg
hlt
mov
loop
jno
xchg
fstpl
sub
fwait
sub
and
push
pushf
push
lods
cmp
mov
fwait
mov
pop
sub
bound
pop
pop
mov
fsub
data16
push
in
jno
in
adc
push
xchg
rol
pusha
shll
cmp
loop
xlat
dec
int
hlt
cmpsb
pop
xchg
cltd
cmc
call
mov
je
pop
jge
jle
ret
inc
jo
cmp
pop
cmp
sbb
jge
mov
push
sub
cwtl
dec
cwtl
pop
xor
and
and
mov
inc
xchg
cmpb
xorl
xchg
mov
pop
dec
pop
fwait
sub
nop
or
jne
dec
mov
lods
int3
push
lods
std
push
in
pop
jne
fistps
movsb
fidivrs
or
cmp
add
ret
push
imul
imul
xchg
mov
and
and
cli
aaa
test
orl
cwtl
and
int
outsl
inc
ret
cmpsl
jge
test
xchg
xlat
mov
loope
adc
and
xor
cmp
imul
jmp
out
ljmp
sub
mov
pop
mov
cli
repnz
out
scas
ret
mov
xchg
popf
imul
xchg
jecxz
in
out
inc
insb
movsb
lahf
inc
sbbl
xor
lods
adc
adc
and
mov
jmp
mov
daa
pop
sti
and
call
iret
fistps
ds
scas
or
add
jo
movsl
call
pop
icebp
fs
cmp
out
inc
xchg
int3
xor
dec
sbb
jmp
dec
or
insl
rorb
or
push
or
dec
mov
mov
in
pop
push
sub
push
inc
push
addr16
jnp
adc
pusha
xchg
and
sbb
aaa
cmc
inc
scas
xor
repnz
inc
push
mov
push
repnz
pushf
rorl
in
addr16
sbb
xor
in
pop
out
mov
sub
iret
nop
outsb
xchg
outsb
cli
push
xor
push
cmpsl
mov
push
jmp
repz
icebp
ror
mulb
jmp
int3
add
add
cmpsl
push
and
jl
cmpsl
mov
scas
out
push
pushl
out
push
jo
mov
push
lods
jb
in
jns
jno
movsb
push
cli
je
aad
sbb
dec
imul
testb
in
xlat
push
add
mov
add
or
icebp
out
imul
test
jo
mov
sbbl
out
nop
cmp
aam
sub
in
andl
push
loope
xchg
xor
push
stc
or
cmp
outsb
rol
pop
adc
inc
enter
jo
sti
xor
cmp
imull
lahf
sub
xchg
xchg
out
sti
xor
js
fdivrl
push
les
mov
inc
fcompl
lods
jle
and
jecxz
or
idiv
repz
sbb
inc
negb
pop
aas
push
pop
pop
add
push
fstpt
pusha
jl
and
dec
stos
pop
sub
in
dec
pop
mov
and
jno
pop
xchg
cli
push
sbb
inc
dec
cmp
int3
jae
add
jge
mov
and
ds
scas
jp
push
scas
bound
lahf
fidivs
jo
cmp
aaa
sahf
push
pop
jg
ds
and
les
bound
lods
outsb
sbb
hlt
xchg
jb
sub
das
push
mov
not
pop
mov
ss
shld
xchg
ret
xchg
xor
loopne
icebp
mov
cmp
test
mov
repnz
or
andl
mov
aas
xor
arpl
jmp
mov
add
sbb
jmp
leave
mov
daa
add
pop
fisttpl
and
test
imul
shll
cmpsl
outsb
jnp
pop
mov
test
inc
ret
cmp
mov
test
inc
sbb
pusha
sbb
and
push
xor
lock
sub
or
cmp
popf
mov
mov
push
cwtl
sbbb
sub
ss
cmp
addr16
stos
cmpsb
dec
inc
and
rol
mov
test
xor
sbb
std
and
mov
jge
int
cli
out
mov
xchg
jecxz
in
inc
mov
or
push
mov
imul
fucomp
movsl
push
jecxz
call
jns
aaa
pop
daa
and
andb
dec
xor
ljmp
ss
dec
xor
mov
xor
xor
popf
xlat
gs
mov
out
fisubs
sbb
cwtl
sahf
or
or
mov
or
sbb
fmull
or
mov
jbe
jbe
mov
mov
jae
dec
lret
and
test
sbb
or
test
and
lret
and
out
es
add
pop
aad
adc
popa
jge
adc
xor
xor
outsl
popa
loopne
das
mov
fmuls
lea
inc
cmp
pushf
or
mov
mov
mov
fwait
sbb
repz
or
pop
sbb
lods
mov
inc
imul
inc
mov
shll
sarl
inc
or
cmp
movsb
andl
or
cli
stos
mov
push
aad
call
fcomip
jno
cmp
push
dec
mov
jo
cs
rclb
sbbb
adc
pop
loopne
and
add
xor
lret
push
inc
jo
sbb
loopne
out
mov
cmp
int3
push
fmull
pop
int3
mov
mov
push
or
loopne
outsl
ret
or
sbb
and
aam
xchg
pop
add
cmp
test
mov
aam
aas
cli
pop
add
cmpsb
cmp
sub
ds
lret
std
jns
cli
ds
cmp
mov
incb
pop
adc
lock
aad
sub
mov
addl
or
movsb
mov
pop
scas
xor
mov
hlt
psubusb
sar
aaa
outsl
stos
movsl
and
int
iret
and
jnp
inc
add
enter
nop
adc
pop
cwtl
cmp
jb
adc
je
adc
arpl
jns
jge
into
out
fs
ret
gs
mov
cmpsl
xchg
aaa
mov
and
pop
xchg
aam
mov
cmp
jl
movsl
mov
jns
jmp
int
pop
dec
outsl
add
xchg
jg
mov
pop
dec
add
xor
test
frndint
stos
jecxz
sbb
loope
inc
call
insb
mov
dec
jg
bound
mov
cmpsl
push
out
icebp
xlat
fcmovbe
insb
mov
out
imul
test
in
add
movsb
popf
lea
bound
push
cmp
in
jge
imul
push
stc
inc
shlb
cmpsl
cmp
inc
jg
insl
sub
mov
inc
jecxz
pop
inc
ret
xchg
mov
out
or
add
or
xchg
int3
scas
xchg
adc
popf
test
int
test
aad
sub
cwtl
fdiv
sarb
fildll
ljmp
inc
stos
xor
jle
inc
inc
test
jl
xchg
in
mov
scas
enter
cmp
rorl
mov
add
gs
xchg
mov
push
sub
dec
xchg
fs
mov
mov
fisubrl
jb
xchg
or
xor
shll
sub
outsl
addr16
loope
popa
inc
jns
mov
sti
enter
sub
lods
lret
mov
inc
mov
pop
icebp
mov
sub
xchg
loope
nop
xor
call
pop
xor
enter
cmpsl
icebp
inc
mov
mov
or
ret
add
fists
or
iret
pop
cmpsb
adc
loopne
test
daa
xchg
sti
mov
fwait
ret
adc
lea
mov
dec
sbb
cmpsb
into
xor
add
fs
push
jne
xor
dec
xor
movsb
xchg
xor
cmp
movsl
mov
imul
fs
das
and
inc
in
pop
icebp
xchg
mov
mov
fists
dec
mov
push
lods
sub
or
dec
adc
pop
inc
lahf
xor
lea
scas
pop
loopne
repnz
addr16
and
cmp
mov
mov
mov
lods
jle
pushf
bound
fstpt
cmpsl
test
cli
pop
and
pop
add
int3
and
mov
rclb
cs
adc
ret
pop
jns
mov
sbb
jno
lcall
sarl
mov
jle
mov
addl
pop
sub
pop
inc
dec
cwtl
aaa
jmp
or
aam
xor
es
pushf
repnz
aam
sub
add
ds
lahf
and
inc
mov
out
sub
add
mov
mov
in
outsb
loope
cmpsb
lock
sbb
push
and
add
stos
test
mov
loopne
gs
incb
push
loop
xlat
pop
mov
das
aaa
xor
xchg
cmpsl
scas
out
jge
adc
mov
or
stos
adc
adc
stc
mov
repnz
and
aas
push
call
adc
xor
inc
mov
arpl
inc
addb
xchg
insb
mov
testl
cmp
inc
cmp
inc
mov
mov
jae,pt
adc
sub
pushf
cmp
xor
xor
bound
hlt
push
xchg
test
xlat
mov
sub
ss
aam
setne
ljmp
jg
fsts
imul
mov
inc
fisubl
ss
mov
jg
lcall
jb
cmc
cmp
icebp
mov
cwtl
xor
fstp
mov
ds
ficomps
cmp
inc
or
push
test
lock
jns
dec
and
push
sub
sbb
loop
cmpsl
jns
icebp
cmp
pop
inc
xor
cmp
in
cmpsl
pop
push
sarb
imul
ret
jge
in
adc
mov
sbb
inc
cmp
int
push
std
mov
hlt
add
lcall
sti
int
sbb
in
mov
ss
sub
pop
push
insl
or
push
sbb
dec
mov
cwtl
adc
adc
push
pusha
xor
icebp
mov
movsl
sbb
cmp
xor
or
fldenv
dec
scas
push
aad
lcall
js
insl
ficoms
mov
sub
fistpll
cmc
mov
adc
xor
push
jg
pop
mov
inc
ficoml
xor
jb
jl
insb
cmp
test
aas
and
aaa
xlat
test
loope
es
jnp
xor
lds
ljmp
imul
cld
and
push
fisubrs
shl
into
lret
movsb
lret
mov
xchg
inc
pop
loope
ds
pop
loopne
divl
aas
or
repz
into
jle
lcall
cwtl
sub
out
xchg
dec
add
mov
dec
hlt
push
shlb
mov
inc
dec
lahf
pop
fisubl
outsl
dec
mov
popf
scas
or
adc
xchg
call
rcl
adc
je
adc
popf
out
ds
pop
cmp
fxch
xor
pop
push
mov
push
xor
cmc
scas
pushf
stos
iret
clc
fistpll
insb
out
popa
addb
or
xor
adc
int3
std
setle
mov
jnp
data16
jg
mov
test
cmp
outsl
or
je
scas
mov
mov
inc
push
shlb
mov
xchg
pop
icebp
sti
adc
ficoms
imul
dec
outsl
loop
jne
cmp
js
dec
jmp
push
jg
xchg
add
aam
mov
ljmp
fwait
xchg
push
lret
xor
adc
cli
cmpsl
add
mov
xor
xchg
pop
jle
xor
pushf
in
jae
inc
lea
pop
loop
xchg
ja
setnp
loope
sbb
sbb
xchg
rcl
insb
dec
sbb
bound
leave
lds
sti
cld
push
and
cli
ret
inc
xor
stc
andl
pusha
and
push
test
scas
rcrl
pusha
insb
pop
repnz
pop
jnp
sub
sbb
jnp
inc
aas
ret
jbe
loopne
sbb
lds
pop
lock
cmp
push
push
in
sar
adc
and
rcrl
mov
lret
pop
lret
sub
push
test
adc
pushf
push
inc
mov
cltd
dec
cli
scas
pop
ret
and
mov
xchg
adc
dec
xchg
dec
out
aad
mov
lock
push
push
inc
repnz
mov
cmp
iret
pushf
das
push
leave
pop
loopne
push
loop
popa
fidivrs
int3
std
or
mov
fwait
int
lcall
or
or
js
cmp
inc
gs
inc
mov
xlat
divb
out
xchg
rcrl
adc
es
std
add
cmpsl
jbe
ja
inc
push
ds
pusha
or
push
jnp
xchg
cmp
mov
movsb
mov
test
jno
adc
mov
add
jae
pop
nop
dec
sahf
mov
and
inc
call
les
loopne
inc
shll
insl
pop
pop
jmp
mov
sub
add
mov
fucom
sbb
je
cmpsb
sub
sub
shr
sbb
mov
out
mov
xor
mov
inc
xchg
movsl
push
dec
inc
xchg
fs
dec
lea
aad
xchg
lds
push
jne
ret
inc
sbb
sub
imul
and
jo
mov
int
inc
mov
or
in
mov
push
int
fld
andl
push
loopne
scas
mov
xchg
jno
jne
sbb
pop
pop
push
adc
inc
stos
in
imul
xor
call
jge
inc
repnz
inc
or
add
popa
pop
lods
dec
mov
dec
xchg
push
push
dec
movsb
sub
mov
test
mov
push
push
add
and
cmp
xchg
xor
int3
fisubs
insb
mov
call
mov
mov
popa
repz
push
mov
scas
sbbl
or
es
and
out
cmc
lret
sub
fdivrl
pop
into
push
cltd
cwtl
xor
fisubrs
xchg
call
push
mov
adc
popa
rcrl
outsb
pxor
cld
push
xchg
fsub
aas
loopne
cltd
jecxz
xor
imul
scas
bound
shll
int
pop
xor
mov
push
adc
dec
or
mov
xor
clc
xor
sub
mov
sub
test
hlt
push
ret
andb
xor
dec
repnz
jns
leave
pushl
push
popf
mov
adc
shll
xor
dec
outsl
gs
push
xchg
cld
cltd
popa
gs
inc
or
lret
sub
fcmovu
sbb
dec
fidivrl
and
dec
jg
loop
rep
mov
je
cmc
xlat
mov
sahf
add
mov
mov
mov
and
xchg
or
xchg
cmp
in
test
push
pushf
jns
ja
dec
movl
push
loop
push
mov
mov
ficoms
xchg
cwtl
pop
ja
jge
jmp
cmpsb
inc
sub
pop
aas
push
xchg
scas
cmpsb
and
jns
and
or
mov
popa
lgs
hlt
adc
xchg
dec
cmpsb
sarb
cmp
leave
mov
repz
push
cmp
ljmp
sub
push
and
jle
mov
pop
and
in
push
inc
out
mov
sbb
adc
test
xor
push
std
and
and
pop
fmuls
mov
pop
mov
adc
stc
xchg
mov
hlt
and
movsb
push
push
pop
int
loope
repz
push
das
leave
mov
sub
cmpsl
cmpsl
movsb
push
adc
orb
insb
or
or
pop
pop
sub
pop
mov
sbb
xchg
lods
mov
outsl
cmp
xor
mov
aam
out
cwtl
pop
and
dec
add
enter
and
ja
fbstp
cmp
adc
jl
and
sbb
movsl
or
jg
or
fs
and
xchg
cltd
les
shl
jl
cld
dec
inc
ss
mov
and
push
mov
or
sbb
int3
sbb
movsl
xor
movsb
pop
xor
add
in
popw
arpl
or
mov
insb
push
mov
push
adc
mov
mov
leave
ret
add
or
and
fdecstp
cmc
xor
push
das
sbb
xchg
inc
xchg
enter
jl
sub
ds
push
lret
xchg
jg
leave
sahf
cwtl
cld
ja
sub
mov
testl
in
lock
clts
aam
shll
es
sub
xchg
lea
stos
push
xor
stc
imul
shrb
or
sbbb
pop
daa
dec
sub
loop
jo
mov
jo
and
shrl
out
sub
pop
and
iret
test
xchg
scas
pop
ljmp
std
aad
bound
jg
mov
gs
test
inc
sarl
ds
xor
sahf
sub
ja
lahf
adc
fstpt
loop
pusha
fimull
xlat
cmpsb
lret
push
jnp
test
fidivl
adc
addr16
sub
sbb
xchg
lods
popf
in
icebp
add
jbe
push
push
jnp
dec
lock
cld
xorb
mov
aad
lahf
movsl
inc
cmp
xor
dec
das
iret
sub
jnp
cmp
loop
mov
aad
push
pop
jge
and
nop
les
add
andl
fsubr
xor
jns
or
lds
dec
popa
jae
push
and
adc
or
aad
ret
cmp
loop
jmp
lea
mov
and
add
out
add
or
dec
and
popa
aad
fs
hlt
mov
aas
mov
xor
sub
mov
fidivl
add
mov
adcl
decb
stos
xor
loopne
paddusb
mov
inc
cmp
fidivs
sbb
mov
jecxz
out
xchg
xor
int
mov
repz
js
jecxz
mov
lea
enter
popf
repnz
mov
leave
mov
mov
push
sti
mov
cmpsb
in
inc
add
fwait
cmp
std
ja,pt
insl
xchg
lods
ja
sbb
mov
sub
xchg
jg
mov
addr16
outsb
sbb
lock
aam
sub
dec
push
fcompl
fdivrs
ss
push
outsl
jl
jb
xchg
icebp
out
dec
cwtl
in
add
fsts
jle
sbb
mov
stos
cmp
addr16
arpl
jno
fistpl
aas
jmp
rcl
or
icebp
jp
jle
mov
scas
push
xchg
imul
hlt
jbe
add
stos
jno
sub
cmp
cmp
sahf
cmp
icebp
push
aaa
fcoml
jne
sub
inc
loopne
out
adc
lcall
mov
or
inc
ds
mov
mov
adc
dec
cmp
mov
ret
and
in
imul
lahf
outsl
movl
push
mov
xor
add
cltd
cmp
in
mov
cmp
jecxz
nop
imul
xor
cwtl
add
sbb
out
sbb
sbb
shlb
iret
repz
jne
mov
xchg
push
mov
mov
jne
or
test
scas
out
inc
daa
out
push
xchg
xor
xor
and
pop
ret
fidivrl
or
ss
mov
popf
scas
push
cld
ljmp
push
js
out
or
inc
jl
aam
xorb
jmp
mov
pusha
leave
add
shlb
fs
pop
arpl
int
push
int
pusha
into
cmp
xor
out
test
stc
lahf
out
pop
inc
inc
sbb
popa
lods
and
push
sub
mov
jae
out
ljmp
cmpsl
rorb
stos
ficompl
pop
dec
lret
jns
nop
jo
ja
sti
std
adc
push
xchg
pop
mov
xlat
aad
ret
lods
jmp
iret
push
lock
dec
lods
and
xchg
mov
add
push
and
iret
sti
imull
cmp
mov
add
std
xchg
mov
sub
mov
in
sbb
pop
pop
jb
and
mov
cmpsl
imul
aam
in
sub
push
pop
gs
cmp
mov
sahf
push
fbstp
pusha
inc
xor
mov
cmp
pop
pop
mov
and
inc
mov
xchg
push
pusha
gs
out
xor
cmpl
adc
mov
scas
add
jne
add
outsl
or
pop
lods
xor
idiv
jno
aad
stc
xchg
mov
jl
iret
mov
shll
jecxz
sub
pushf
aaa
idivb
mov
mov
test
imul
xchg
mov
push
outsl
pop
dec
sbb
mov
mov
cmp
fcmovu
add
movsb
jg
pop
rcll
dec
int3
enter
adc
mov
js
pop
in
or
cs
mov
adc
test
cmpsl
push
clc
and
push
inc
repz
out
hlt
lods
fdivl
mov
fwait
movsb
ss
jb
adc
rcr
cmp
popa
adcl
divb
lea
cwtl
push
inc
adc
js
pop
data16
dec
push
jg
adcl
cmc
mov
stc
loope
dec
dec
push
aaa
push
mov
jg
rcrb
xor
movsl
inc
sbb
sti
add
loopne
jnp
nop
cmpsb
pop
sub
pop
enter
je
jbe
cmp
fwait
call
mov
jmp
adc
out
lahf
mov
movsl
in
push
fbld
cmpsl
adcb
push
xchg
or
shll
outsl
jb
lods
dec
xchg
stos
xchg
mov
mov
cmc
push
repnz
or
xchg
fimull
lret
adc
lods
fdivl
mov
fisubl
xchg
push
fs
or
loop
cmp
insb
rcl
jb
jmp
stc
xor
and
stc
das
icebp
fsubr
inc
mov
leave
add
inc
je
cli
cmc
cmp
and
data16
gs
adc
or
lea
sbb
insb
popf
inc
ffreep
jno
subl
sbb
jl
outsl
push
outsl
add
push
dec
push
in
cwtl
adc
inc
icebp
clc
xchg
fidivrs
cmp
stos
ficoml
je
xlat
fs
mov
mov
out
mov
ja
push
pusha
sbb
into
cmp
icebp
mov
ret
clc
out
push
sbb
cmp
popf
roll
negb
mov
sub
mov
jmp
rcl
mov
sub
sbb
xor
out
into
lret
ja
cmp
push
scas
fdivs
in
je
sbb
repz
mov
out
outsl
lret
mov
imul
data16
cmp
sahf
jne
push
test
test
cli
xlat
xchg
cli
repz
repnz
jno
cld
cmovnp
lcall
jmp
sbb
jns
daa
or
call
pop
loope
cmpsl
mov
sbb
push
mov
inc
mov
std
scas
sub
add
out
std
cmovb
mov
fcmovnb
dec
in
lock
test
pop
jb
pop
test
lret
dec
dec
xchg
loope
sarl
xchg
mov
sbb
xor
pop
push
push
movsb
int3
pop
daa
cli
push
fcompl
adc
lret
inc
push
aad
sub
cmp
push
addr16
push
imul
and
xlat
or
inc
in
sub
stos
xchg
pop
js
xorl
adc
outsl
push
xchg
fdivl
push
in
outsb
xchg
testb
add
xchg
pop
aad
push
sub
sbb
scas
jo
orl
jl
and
mov
adc
mov
in
int3
pop
and
bound
dec
stos
fildll
adcb
or
aad
add
mov
cmp
push
mov
pop
and
test
push
ret
xor
sub
stc
imul
cltd
test
pop
lahf
lret
insl
js
pop
repz
shrl
imul
mov
aam
in
ret
xchg
test
jo
adc
neg
into
popa
das
adc
fsincos
dec
xor
mov
mov
mov
ret
sarb
jne
jno
out
fisttpl
mov
insb
mov
and
repnz
je
mov
push
jnp
mov
or
mov
pop
mov
dec
leave
jnp
and
dec
push
clc
or
add
lcall
insl
cmp
mov
imul
out
push
sub
mov
adc
rclb
add
adc
int3
jmp
jmp
adc
and
pop
loopne
inc
pop
mulb
lea
pop
and
sub
mov
insb
pushf
loope
addl
testb
add
mov
xlat
out
jns
test
repz
pop
ror
insl
mov
cs
stos
add
mov
subl
fdivr
lret
je
add
test
lds
out
jp
cmp
sbb
jbe
xchg
jle
ljmp
in
sahf
repnz
pop
adc
lcall
sbb
add
movsl
icebp
and
jo
int3
xchg
fdivr
inc
jnp
jmp
pop
cmc
inc
pop
add
aam
inc
xor
and
cmove
outsl
adc
call
icebp
adc
fldcw
sub
shlb
out
test
lcall
jb
cwtl
or
out
ljmp
or
dec
mov
jb
decl
je
adcb
fistpll
xor
cmp
jno
jbe
ljmp
cwtl
dec
sbb
inc
jge
dec
cwtl
divb
in
int
xchg
sbb
stc
lcall
into
add
add
mov
mov
pop
iret
lret
xor
xor
inc
scas
dec
jns
cltd
jle
cld
jae
xchg
clc
mov
inc
daa
pop
and
push
jo
sub
fildll
aaa
push
out
ret
mov
cs
fisubl
cld
inc
inc
out
adc
xchg
loope
ja
push
int3
cmp
gs
cmp
cmp
xor
cmpsb
jbe
jmp
inc
lcall
call
or
inc
inc
gs
pop
dec
and
test
jl
xlat
sbb
dec
test
pop
out
jmp
test
inc
jecxz
test
cmc
mov
movsl
int
stos
sbb
ljmp
add
test
es
dec
stos
and
inc
imul
dec
test
xor
inc
pop
cs
aas
icebp
jmp
and
or
loope
leave
pop
ja
cs
outsb
loope
jecxz
lahf
xor
jle
das
dec
dec
mov
pop
push
arpl
in
scas
in
addr16
data16
add
int3
and
pop
sbb
sahf
notl
lahf
sub
je
scas
adc
jl
leave
pop
loop
or
jb
loope
fsubr
arpl
stos
mov
sbb
pop
fldcw
mov
cmpsb
mov
xor
cmp
sub
add
repz
pusha
mov
jmp
fxam
cmpsl
imul
xchg
cld
xorb
out
incb
push
or
jne
pop
pop
pushf
cmp
test
sbb
bound
push
in
xchg
push
cmp
outsl
pop
mov
inc
dec
add
xchg
push
repz
xorb
xchg
or
in
mov
out
leave
shl
popa
out
mov
mov
fucomi
sub
pop
mov
aas
int3
call
clc
add
mov
xchg
mov
repz
call
mov
out
sub
cld
pusha
mov
shr
add
mov
add
insl
cld
mov
lods
inc
hlt
cmp
into
std
rcrb
insb
adc
pop
cmp
dec
sub
jp
dec
movsl
and
aaa
insb
add
inc
outsl
std
push
es
inc
jbe
loope
xchg
push
adc
add
jae
leave
out
aaa
lret
movsl
dec
mov
outsl
xor
sbb
divb
call
fistpll
test
mov
push
add
into
or
push
popf
shrb
fcomip
and
test
or
jle
cmp
lahf
or
mov
mov
xor
xchg
sbb
clc
pop
xor
into
les
fisubl
and
mov
icebp
mov
mov
mov
fsubp
cwtl
or
cs
ja
rcrb
aad
sbbb
nop
in
add
pop
jle
lea
pop
inc
in
xchg
stos
mov
xlat
inc
push
inc
sbb
jns
adc
scas
sbb
sub
popa
gs
pop
std
shrl
pop
dec
jno
pop
pushf
mov
rcr
adc
and
shlb
fsubl
sahf
cmp
mov
mov
test
popa
ja
xlat
dec
shll
add
outsl
mov
nop
jae
popf
call
jnp
bswap
sbb
aas
repz
xchg
leave
mov
out
les
je
daa
sub
jmp
inc
imul
jo
jne
xor
fcoms
mov
mov
push
xchg
lods
cmp
fidivrs
xchg
cld
loope
cmpsl
fcmovnb
movsb
jno
lock
mov
cmp
mov
pop
cmp
jnp
and
pusha
dec
add
sub
lea
enter
pop
push
lea
mov
xchg
es
outsl
push
ljmp
std
leave
sub
or
js
mov
push
cmp
mov
into
mov
incl
mov
ds
shrl
outsb
add
jg
add
inc
cs
out
repnz
inc
mov
pop
xchg
sbb
roll
push
lods
lret
mov
xchg
or
pop
bound
dec
ss
popf
inc
fcomps
fs
inc
add
add
mov
je
testb
aam
icebp
cmp
jnp
icebp
mov
mov
icebp
test
testb
inc
test
and
fs
in
add
add
jle
ret
mov
pushf
test
and
js
adc
scas
jb
and
cmp
push
dec
pop
enter
xchg
cmp
mov
sarb
sub
mov
xor
loop
xchg
pop
std
rcll
sbbb
pushf
or
mov
pop
cmp
loop
add
iret
mov
lods
in
xchg
adc
cmp
cmp
or
out
pop
std
pop
adc
lods
jmp
rcr
sub
xor
dec
ja
mov
push
test
push
adc
popf
mov
or
push
sub
popa
xor
mov
xchg
inc
inc
fcmovnbe
lahf
or
adc
rcrl
mov
outsb
xchg
jne
xor
stc
int3
or
cwtl
scas
push
inc
adc
dec
xor
scas
push
mov
out
mov
daa
sti
into
fistpl
mov
push
ja
push
insl
inc
loop
mov
call
cmp
push
negl
inc
iret
andb
push
add
popf
cs
or
into
in
mov
adc
add
data16
lret
dec
and
imulw
jne
fisttps
push
scas
mov
std
mov
lcall
fistl
pop
mov
ja
add
in
push
xchg
pop
mov
enter
and
js
shl
push
jo
push
cmpl
out
mov
inc
push
inc
push
lods
loopne
movsl
xchg
faddl
aaa
out
pop
xlat
mov
push
cmp
push
xchg
sub
imul
test
fwait
push
fdivrs
inc
adc
stos
imul
fs
repnz
mov
test
or
adc
mov
cmc
into
shlb
lods
ficoml
and
jne
sbb
jno
fcmovu
movlps
and
lods
insl
pop
mov
xchg
repz
lahf
xchg
adc
add
or
or
dec
loopne
lock
mov
imul
repz
and
xchg
dec
inc
inc
mov
jnp
add
mov
mov
ja
cmp
test
add
xor
cmpl
push
or
movsb
jo
popa
and
or
cltd
cmp
dec
push
int
ret
xor
bnd
aad
cmpsl
jg
jno
adc
inc
inc
adc
ror
push
loope
inc
lret
ss
mov
in
jne
ds
adc
or
insl
mov
sub
xlat
xchg
push
pop
mov
and
adc
xchg
xor
shll
ret
fwait
or
test
adc
sub
inc
into
cli
mov
outsb
arpl
enter
movsb
or
dec
mov
scas
cmpsb
add
sbb
xchg
lds
sbb
mov
gs
fmull
shrb
cs
testl
scas
lret
mov
and
nop
adc
mov
xor
cmp
stos
sub
lods
jg
and
daa
shlb
ds
sbb
jno
sti
dec
call
sahf
lahf
adc
scas
mov
lret
xchg
pop
sub
call
xor
add
and
add
jg
push
aam
mov
mov
xchg
push
repz
mov
repnz
ret
je
mov
or
in
and
pop
inc
or
repz
les
daa
insl
aad
cmp
fdivrs
xchg
or
sbb
pop
mov
add
std
adc
adc
jae
push
sbb
in
popa
push
test
push
and
in
mov
add
add
ret
mov
sbb
cmp
les
aas
mov
sbb
pop
inc
mov
xor
or
jecxz
sbb
pop
push
leave
dec
inc
pop
outsl
loop
loopne
and
outsl
xchg
arpl
sub
dec
lods
add
stos
js
or
jbe
mov
cmp
or
sahf
xlat
dec
push
jg
int3
test
fcoml
jo
pop
push
xchg
pushf
jl
xchg
mov
pop
pop
loop
xor
imul
xchg
push
test
sub
and
lret
movsl
cmp
inc
fadds
add
mov
jns
inc
shrb
mov
sub
inc
cmp
xchg
push
fwait
or
out
cmpsb
sub
imul
push
lret
push
cli
inc
jl
sbb
cmc
mov
push
ror
int3
and
xor
stos
subb
mov
call
out
stos
and
and
nop
jl
insl
jge
in
push
lahf
std
xor
gs
or
add
add
xchg
faddl
mov
inc
xchg
mov
ds
mov
and
pushf
ljmp
movsb
bound
ljmp
sarl
sbb
mov
lock
cmp
ljmp
test
add
xchg
ljmp
and
je
fsts
push
ds
test
in
push
push
jno
cmp
mov
call
xchg
sbb
dec
ds
mov
pop
fldpi
repnz
dec
shll
cmpsl
out
subl
test
nop
movsb
out
lea
orl
sbb
test
mov
push
add
rorb
mov
stos
sub
jbe
sar
jp
add
mov
push
nopl
mov
inc
clc
push
add
cs
lahf
loope
push
iret
pop
push
xor
add
dec
jnp
and
dec
sti
cmpsl
mov
push
popa
ja
xchg
xor
test
dec
cmp
js
adc
push
outsl
loop
inc
lahf
or
loopne
arpl
sub
inc
push
pop
xlat
fs
jno
sbb
aas
inc
les
lea
and
in
cmc
dec
push
add
out
dec
or
aas
add
subl
lea
pop
cmp
push
movsl
mov
fwait
pop
fcomps
pop
mov
xchg
aaa
cli
xchg
aad
push
ret
jmp
add
repnz
or
sub
push
movsb
mov
loop
mov
xchg
adc
sahf
out
ret
mov
lods
ss
pop
test
pop
repz
cwtl
mov
out
lods
mov
xlat
ffree
rorb
xchg
inc
insb
jne
ss
cmp
sbb
cmpl
mov
mov
jbe
xorb
inc
mov
mov
popf
fwait
jmp
inc
ror
cmpsb
adc
jp
lret
inc
les
test
loop
push
insb
dec
push
inc
sti
sbb
push
out
rolb
push
sub
push
popa
stos
cmc
aas
mov
xchg
rolb
lea
imul
sahf
sub
mov
fadds
sub
cmpb
jbe
add
dec
imul
jb
xor
movsl
pop
add
sti
pop
stos
pop
inc
loope
repz
js
lcall
lods
jp
adc
xor
cmp
mov
lods
fisttpl
mov
lret
pusha
imul
or
outsb
mov
nop
sub
bound
xor
push
xchg
inc
inc
movsl
clc
test
int
cmc
pushf
xor
lds
xchg
ja
jo
push
iret
ret
test
fs
xchg
stos
jle
std
roll
mov
in
notb
ret
sub
inc
inc
je
out
imul
fldlg2
mov
int3
and
cli
call
test
pop
sub
jmp
and
sbb
rorb
dec
sarb
mov
mov
in
push
xchg
stos
imul
pop
gs
mov
outsb
sub
sbb
cmp
xchg
setle
mov
adc
sarl
pop
inc
addl
lods
pop
sarb
stos
or
jecxz
sub
push
adc
lds
adc
lret
jg
in
or
xchg
int3
jne
sbb
dec
rorl
xor
pop
dec
xchg
es
mov
and
or
bound
and
push
dec
and
stos
je
inc
adc
lret
jmp
fisttps
xor
xor
lret
add
fistps
popa
je
mov
push
or
sub
mov
in
minps
mov
xchg
rorl
push
je
pushf
mov
mov
jae
sbb
add
sub
dec
fstl
jp
das
movsb
inc
sub
pusha
xor
enter
inc
sbb
mov
jno
repnz
dec
enter
jmp
lods
loopne
cmpsb
or
sub
cltd
dec
imul
pushf
shrb
out
jle
fists
xor
lret
fcmovnbe
cmpsb
into
bound
push
int3
daa
mov
inc
xor
add
add
dec
cmpsb
loop
int
mov
mov
gs
cmp
sub
stos
je
lahf
inc
push
dec
imul
cmc
fisttps
mov
std
mov
test
stc
xchg
mov
pop
in
jmp
dec
xchg
out
lock
jp
pushf
mov
dec
lcall
inc
fwait
sbb
sti
inc
pop
sub
je
sbb
ss
add
mov
or
jno
lods
and
sbb
cmp
sub
or
fwait
rcll
lock
loope
test
loope
in
mov
mov
jns
icebp
inc
jl
ja
lcall
cmp
xchg
popa
loopne
xchg
cld
rclb
dec
ret
fdivrl
insb
test
shrb
repz
jno
and
dec
cld
loope
fidivl
pop
insb
inc
ret
or
jg
mov
pop
rorl
imul
add
incl
stc
jnp
jp
pop
lret
in
sbb
out
adc
sbb
mov
pop
push
pop
mov
negb
sub
lret
pop
fisubrs
addr16
and
cld
notb
insl
rolb
dec
adc
ljmp
imul
mov
sub
xchg
out
jo
jg
fs
adc
xchg
sbb
iret
push
aaa
aad
aaa
aaa
insl
adc
jb
sti
push
xor
sbb
stc
fmuls
jbe
outsl
into
mov
mov
sub
pop
shrl
add
aam
xor
inc
mov
inc
push
jne
iret
lret
ret
stos
mov
repnz
iret
in
stos
iret
add
push
or
dec
ficoml
shr
out
rcrl
ja
aad
dec
adc
ljmp
and
rol
mov
or
adcl
xchg
xor
sub
hlt
rolb
inc
mov
aam
lcall
aaa
enter
dec
and
pop
mov
adc
xor
or
jg
mov
enter
mov
cld
imul
sbb
gs
call
into
lock
addr16
mov
xorl
out
jb
sbb
push
mov
pop
mov
addr16
mov
push
inc
test
loop
popa
push
fnstenv
mov
cs
mov
out
and
jb
ss
pop
push
int3
sbb
fstps
pop
pushf
xchg
mov
sub
xor
jbe
ret
out
mov
sbb
or
movsb
lahf
ljmp
aaa
dec
pushf
sbb
inc
xor
adc
cmp
fstpl
negl
int3
mov
cltd
mov
jno
pop
xor
xor
jnp
jle
mov
popa
popf
dec
roll
orb
es
add
mov
movaps
out
pop
pop
leave
push
das
fisubrl
decb
popf
cwtl
gs
in
adc
mov
pop
jns
fs
jbe
mov
in
repnz
lods
sbb
mov
cs
pop
pop
pop
jecxz
or
aad
call
rcl
ds
pop
jl
push
es
cmp
mov
mov
sub
jp
sbb
popa
mov
mov
push
pop
testl
sbb
xor
xor
mov
jns
xchg
push
push
jp
int3
ja
inc
scas
push
stos
out
sbb
rolb
and
ljmp
sbb
js
sbbl
iret
and
cmp
jmp
sub
stos
scas
inc
sbb
decb
shll
jl
push
es
jp
cmp
mov
shl
xchg
sub
scas
sti
add
jecxz
adc
inc
pop
xor
and
pop
jge
sub
adc
divb
xor
das
lret
mov
add
dec
mov
fldl
mov
add
mov
rcrl
cmpsb
stc
sub
imulb
dec
into
iret
shll
imul
mov
lods
cmp
push
sub
mov
mov
pop
stos
mov
or
popf
mov
cmpsb
add
inc
ljmp
in
xchg
and
sti
or
mov
xchg
xor
in
insb
cmp
ss
jb
inc
scas
sbb
mov
add
inc
fnstenv
icebp
sub
xchg
inc
test
addr16
mov
lret
ja
inc
aam
xchg
loope
adc
test
xor
adc
sbb
test
jmp
xor
or
mov
cltd
inc
popf
or
fdivs
mov
icebp
popa
pop
mov
dec
dec
in
adc
pushf
pop
jbe
cltd
sbb
mov
push
aad
les
xchg
insl
add
pushf
outsl
dec
dec
pop
loopne
iret
enter
adc
push
xchg
mov
test
ljmp
loopne
mov
int
xchg
push
dec
mov
rorb
dec
fidivl
mov
mov
repz
movsb
mov
jo
stos
sbb
nop
mov
jbe
out
shrb
mov
in
add
lret
rcll
mov
inc
cld
shlb
sbb
push
mov
sub
ret
push
js
xchg
inc
gs
xor
mov
fisubrl
xchg
xchg
jo
mov
dec
push
mov
xor
ss
sbb
rol
int
cmc
shrb
clc
clc
push
and
sbb
scas
test
jge
jg
in
fcoms
xchg
jg
insb
nop
sub
push
loope
mov
lods
leave
orl
jns
jbe
int
sahf
pop
outsb
push
cli
stc
adc
popl
negb
loopne
and
and
sahf
out
mov
sti
orl
sti
dec
jge
jl
sub
leave
cmp
cmp
movsl
lea
mov
daa
push
icebp
cmpb
xchg
scas
dec
cmpsl
pop
in
lea
mov
inc
jl
add
mov
lret
fisubs
jb
dec
cmpsb
xchg
stc
push
push
dec
fcoms
rclb
popa
mov
mov
fadds
jnp
pop
gs
lret
sbb
les
xchg
xchg
pop
fistps
push
mov
es
adc
loop
shl
lds
and
mov
inc
mov
loopne
sti
fistpl
popa
pop
push
mov
inc
aam
sub
mov
xchg
or
fwait
mov
shll
mov
jp
xchg
dec
and
sub
push
push
es
fwait
scas
cli
mov
les
jae
jg
jle
add
jmp
test
into
adc
push
stos
int
push
call
jmp
dec
or
imul
push
pop
cmc
jle
dec
lcall
dec
pushf
loopne
fiadds
sahf
mov
jb
add
cltd
andl
xor
in
mov
movsb
mov
jp
es
leave
call
aaa
xchg
loope
aaa
in
imul
pusha
and
imul
push
dec
popa
ret
pop
jno,pn
xor
popf
push
xchg
out
dec
bswap
inc
push
in
sub
std
clc
dec
pop
mov
aaa
jns
hlt
mov
test
fwait
adcb
jl
push
xor
dec
dec
xor
into
repnz
bound
insl
lret
dec
xchg
xchg
mov
add
xchg
xor
mov
mov
repnz
sbbb
pop
dec
daa
neg
add
fisttpll
pop
jb,pn
mov
out
lock
lret
adc
jbe
jmp
dec
enter
inc
addl
and
subl
mov
in
xor
mov
pushf
jnp
jnp
push
jmp
nop
inc
loopne
or
test
imul
dec
mov
adc
xchg
add
xchg
sub
mov
mov
popf
mov
pop
mov
cltd
ss
jmp
decl
mov
bound
out
call
mov
add
push
mov
xor
inc
cmc
les
lea
fisubrl
repnz
sbb
out
xor
scas
pop
lods
mov
shl
jae
mov
into
jp
dec
mov
xor
sbb
fucomi
xchg
xchg
jecxz
gs
adc
sbb
mov
in
cmp
dec
pop
test
mov
lock
ret
lret
xchg
mov
xor
aaa
shll
mov
lahf
lret
pop
ret
mov
test
lret
and
int
fwait
adc
jp
xor
out
push
add
shl
in
subb
repnz
sub
jnp
lahf
sahf
stos
mov
shll
cli
sahf
cmp
and
out
dec
repnz
xchg
loopne
lods
icebp
ss
loop
fs
and
xchg
xchg
sarb
mov
jnp
fadds
pushf
mov
add
loope
lret
mov
es
xchg
lods
sahf
out
lret
adc
add
fwait
jno
push
add
lcall
out
sub
push
pushf
lahf
inc
loope
sbb
jns
xchg
xchg
dec
jmp
es
es
int3
push
jb
lahf
mov
inc
dec
pop
mov
pop
jle
js
gs
jo
mov
add
or
and
ret
dec
outsb
enter
sahf
pop
cmc
mov
test
xlat
in
stos
ret
in
out
inc
cld
mov
xor
xchg
mov
fisubs
clc
shll
dec
push
mov
out
jp
inc
leave
adc
push
fists
test
push
cmp
std
or
lock
pushf
jmp
pop
jne
mov
cmp
clc
test
loopne
adc
fcompl
or
out
pusha
pop
adc
push
push
sahf
dec
pushf
pushf
popa
jle
arpl
insl
mov
pop
xor
notl
cs
test
or
sub
or
or
xlat
lahf
or
inc
test
dec
add
pop
mov
notb
sub
in
jl
popa
insl
dec
js
loop
lahf
loopne
sub
inc
xor
push
xor
testb
sbb
pmulhuw
sarl
into
jecxz
cmp
hlt
sbb
mov
pop
out
adc
mov
std
add
movsl
into
cltd
fs
xchg
add
shrl
jle
loope
jae
loopne
mov
mov
sub
add
dec
jl
movsl
lock
frstor
sbb
ss
mov
jg
adc
push
movsl
add
mov
adc
xchg
cwtl
cmpsl
cltd
seta
pop
loopne
fcmovnbe
mov
clc
pop
notl
mov
mov
pop
imul
push
icebp
testb
lods
sub
js
sub
pop
sbb
loop
sub
xor
ret
push
out
mov
dec
pop
imul
mov
xchg
loop
cltd
out
push
stc
sti
aaa
push
out
sub
arpl
aad
fs
int3
es
pusha
cmpsb
aam
stc
mov
or
cmp
mov
sbb
test
enter
scas
pop
sub
repnz
lods
ljmp
cmp
xchg
enter
jns
xlat
outsb
cld
call
pop
fidivrs
fnstsw
jae
sub
aas
pushf
das
pop
bound
push
mov
ljmp
or
repnz
mov
push
js
cmp
insb
stos
xchg
pop
filds
imul
imul
in
nop
or
inc
sbb
icebp
or
push
adc
orl
cmp
lahf
lds
mov
out
push
push
aas
sbb
xchg
jns
push
std
dec
ret
jb
gs
jno
lea
jmp
push
mov
popf
xchg
xchg
jge
push
cltd
bnd
shlb
cmc
dec
cmp
or
mov
mov
and
cmpsb
add
leave
push
scas
movsb
js
sub
std
insb
jnp,pt
aad
ret
fst
mov
lret
xchg
xchg
rcll
and
lea
jbe
pop
cmp
dec
rolb
inc
bound
mov
pop
lret
scas
sti
dec
pop
movsl
ret
mov
mov
xchg
adc
jl
loop
mov
xchg
insl
xchg
xcrypt-ctr
cmpsl
pop
mov
cs
loop
push
jmp
loopne
cwtl
aad
mov
xorl
scas
dec
xchg
xchg
push
mov
jle
push
cwtl
jecxz
out
fcoms
push
addr16
fnstenv
movsb
lcall
add
adc
xchg
mov
cli
dec
int
jne
adc
stc
pop
test
out
sub
ja
test
mov
add
subl
stos
jl
jae
pop
sub
inc
sub
sub
xchg
mov
xchg
enter
pop
test
mov
dec
repnz
dec
xor
shl
push
fildll
neg
std
das
hlt
xchg
leave
jnp
ljmp
xor
vpmacsdd
adc
mov
sub
rorb
or
xchg
mov
inc
inc
cli
insb
in
imul
jno
shll
fs
iret
add
push
nop
dec
mov
inc
xor
cmp
lahf
rcll
and
data16
sbb
mov
cmp
mov
stos
pusha
adc
adc
mov
test
fwait
jae
and
pop
dec
loop
pushf
push
jmp
int
outsl
je
xchg
mov
sub
jp
mov
test
shlb
pop
in
notl
sbb
or
mov
mov
cmc
push
sbb
jae
inc
inc
dec
and
xor
loop
push
xchg
lock
dec
xlat
rorb
std
test
imul
push
xor
mov
mov
push
lret
sub
jecxz
rorl
pop
pop
rorl
pop
push
or
adc
cmp
out
sbb
add
push
cmpsl
push
lahf
data16
in
shll
push
arpl
inc
fwait
inc
mov
push
cltd
and
xor
rclb
push
sti
adc
sbb
mov
mov
in
inc
jo
ret
xchg
pop
stos
mov
stc
stos
mov
ror
fimuls
ss
push
jl
dec
push
push
adc
or
push
incb
inc
sbb
das
inc
mov
arpl
cli
loope
and
sbb
sub
pop
mov
push
jecxz
xchg
push
popa
mov
push
shrl
push
enter
ret
sbb
cwtl
add
imul
mov
xlat
lea
mov
xchg
cmp
lcall
stos
pop
push
sti
btr
call
xorb
mov
jg
cmc
repnz
push
pusha
mov
aaa
mov
aas
loope
or
outsl
clc
aam
add
in
xor
adc
movsl
fwait
xor
ret
fists
roll
pop
inc
shl
cmpsl
and
mov
adc
adc
mov
das
lods
pop
je
insb
sub
arpl
sub
jl
lea
aaa
adc
rolb
aaa
jg
in
xor
jmp
xor
push
ror
mov
aaa
xchg
std
cs
in
insl
push
and
pop
sbb
sbb
dec
jbe
inc
les
xchg
inc
aam
push
cld
mov
lock
mov
pop
cmpsl
rcr
enter
std
lcall
mov
test
xor
sarb
leave
cltd
lods
sahf
lea
adc
push
cmp
push
sub
xchg
jb
mov
and
into
insl
cmc
sub
and
push
jne,pt
inc
adc
jnp
clc
outsl
sbb
lea
mov
add
out
xor
in
sub
notl
out
xchg
aas
cmp
cmp
push
sub
stc
jecxz
imull
mov
pushf
jmp
aad
jae
xchg
and
mov
dec
mov
testl
jne
cmp
ficoml
push
shll
pop
inc
cltd
in
shrb
bound
mov
pop
out
jbe
add
pop
lock
and
dec
or
mov
xor
movsl
jne
daa
fwait
icebp
ljmp
out
dec
es
inc
sub
rorl
ljmp
xor
jmp
pop
inc
xor
mov
mov
sbb
ds
pushf
pop
sub
insl
mov
leave
ret
sbb
xlat
jp
movsb
pop
pop
mov
loopne
cld
push
mov
daa
pop
sub
xchg
and
lcall
stos
push
sbbb
leave
push
lret
mov
pop
incl
and
cld
pop
cld
in
xchg
cli
cmpsl
mov
dec
sar
daa
call
and
pop
rcrl
and
cmpsb
add
ret
adc
lds
dec
xchg
jne
sti
jae
jns
sbb
jne
add
push
lock
mov
bound
out
int
pop
test
inc
sbb
inc
push
fldcw
push
mov
or
push
mov
cmc
scas
inc
mov
mov
fdivs
cmc
sub
ljmp
xor
mov
mov
popf
mov
inc
in
mov
shrl
inc
dec
jb
push
outsb
icebp
pop
les
mov
repz
andl
mov
test
add
xlat
cwtl
testl
cmpsl
mov
fldenv
push
add
into
pop
lods
repnz
inc
sbb
int3
push
sbb
mov
loope
in
aas
int
mov
jmp
andb
add
push
push
push
lea
jne
cmp
jle
add
xor
jno
push
fsts
jb
push
jle
and
mov
push
mov
cmpsb
pop
jg
mov
arpl
xor
out
scas
stos
sbb
push
outsb
lcall
in
js
or
xchg
xchg
test
sub
adc
ret
stos
jns
outsl
int3
mov
ficoms
or
mov
pop
xchg
sub
mov
mov
cmp
rcl
sub
aad
sbb
ds
cmp
int3
int
inc
pop
mov
loopne
rcrb
pop
roll
cmp
in
and
lea
push
rorb
repnz
imul
mov
adc
stos
imul
lods
insb
xor
cmpsb
push
jl
push
xchg
and
mov
jnp
pop
movsl
out
cmp
jne
mov
jge
jmp
testb
pop
sub
pop
sub
or
mov
in
dec
incl
lcall
push
lahf
fimull
sub
int
outsl
lcall
jbe
cmp
inc
aaa
adc
cmp
inc
push
in
mov
adc
cwtl
loope
lods
cltd
out
add
mov
shl
xchg
mov
pop
out
mov
insl
sbb
push
in
inc
lods
add
add
inc
mov
bound
mov
mov
addr16
xchg
std
stos
test
push
cmp
stos
sbb
xchg
outsl
xchg
negl
ss
cs
insl
roll
aas
add
adcl
cmp
xor
dec
dec
mov
adc
and
loope
inc
add
pop
enter
stos
int3
xchg
das
jnp
jbe
repnz
in
jne
das
lret
cmp
js
pop
outsb
pop
clc
dec
add
jns
dec
shl
scas
add
cmp
int
jmp
repnz
pop
ljmp
cmp
xchg
dec
out
test
fbld
push
dec
mov
in
xchg
test
cmpsb
sbb
sub
cwtl
xorb
into
or
jle
mov
in
mov
std
in
and
fistpl
aaa
popa
mov
jnp
mov
mov
fsubl
cmp
or
sahf
mov
add
jb
imul
loopne
ss
fwait
push
iret
into
test
fdivrs
pop
scas
mov
add
jp
call
sub
add
inc
push
into
pop
xorl
adc
mov
mov
loopne
pop
xchg
lea
cld
jbe
cmpsl
nop
push
leave
mov
cs
scas
test
mov
sbb
jbe
pop
lods
mov
mov
int3
and
enter
sbb
outsb
xchg
sbb
clc
add
xor
pusha
sub
or
push
arpl
stos
inc
ss
mov
cs
into
or
gs
push
fdiv
cmp
mov
push
add
push
push
mov
sub
fst
cs
pop
and
xchg
dec
cwtl
addl
arpl
cltd
into
jnp
aad
and
imul
mov
jbe
icebp
xchg
ret
mov
mov
sbb
sub
cmp
add
nop
add
aam
imul
fwait
outsb
dec
lods
sahf
in
movsl
out
xchg
ds
js
pusha
cld
xor
fldcw
xor
imul
mov
pop
shll
jbe
lods
xchg
sbb
mov
inc
out
adc
inc
jns
add
jmp
jmp
mov
jnp
xor
ss
testl
ss
out
xorb
cwtl
scas
jo
subl
push
loop
xor
fldt
in
addr16
rclb
adc
leave
inc
jbe
adc
jo
in
sahf
xor
call
lods
cmpsl
sbb
jp
jmp
jno
daa
jecxz
popa
mov
imul
in
or
adc
inc
mov
inc
loopne
mov
int
inc
movsl
leave
and
mov
add
ja
xor
mul
ficoms
lods
je
or
ficomps
je
sub
pop
dec
lret
xchg
ret
push
cli
lea
xchg
aam
pop
add
testw
fistps
data16
mov
or
leave
mov
insb
mov
cmp
sarb
cltd
jbe
jns
pop
push
xor
mov
mov
ret
cmpsb
add
clc
xchg
test
pop
addr16
loop
xor
xchg
es
push
cwtl
hlt
xor
idivl
jle
js
sahf
mov
rorl
enter
cmpl
sub
call
jl
lahf
rorl
int3
inc
stc
sbb
outsl
inc
in
inc
sbb
lret
jge
sti
aam
push
sbb
mov
cmp
cmpb
ja
ljmp
fisttpl
dec
fistpll
movsl
lods
mov
and
push
cmpsb
aad
xor
jle
imull
cmp
jge
les
dec
popa
sub
fisubrl
dec
mov
sub
sub
xlat
and
inc
or
popa
fwait
xlat
je
xchg
adc
dec
mov
es
push
jae
jnp
or
outsb
xor
std
int3
dec
test
pop
cmpsb
ret
aaa
jo
in
jp
mov
lods
lret
and
sbb
lret
sbb
sahf
cmp
stos
adc
or
push
xchg
xchg
in
aas
push
sarl
cmp
sub
loope
cld
imul
sbb
rcl
or
jno
lret
mov
jg
jle
dec
lcall
jmp
imul
cmpsb
popa
add
aam
insb
jle
adc
clc
sti
xchg
or
dec
mov
add
rcrb
cmp
cwtl
or
lcall
mov
sub
jp
cmp
sbb
xchg
movsl
loop
nop
andl
ljmp
ret
cli
test
jbe
das
jo
jge
loope
cmp
dec
nop
shr
inc
xchg
dec
popf
adc
lods
inc
and
xor
jne
mov
mov
ret
jg
ret
int3
adc
sbb
les
cmp
add
cmpsb
pop
xchg
gs
shll
xlat
pop
or
js
inc
sub
test
leave
mov
mov
sub
jge
push
jl
xor
filds
test
mov
lret
sahf
or
jno
cmp
data16
push
hlt
mov
xor
push
test
sub
and
inc
cltd
inc
mov
ljmp
sbb
inc
adc
jecxz
push
or
cmc
sub
outsb
push
xor
or
pop
hlt
push
inc
push
jno
inc
pop
sbb
movsb
ret
jle
mov
add
jle
adc
rep
ret
push
stc
scas
fsubrl
cmpb
sbb
mov
aaa
and
pushf
out
dec
pop
clc
push
fcomps
js
lret
sti
pop
push
sbb
addr16
paddq
insb
push
jae
and
inc
mov
or
mov
addr16
pop
push
ret
mov
sub
sub
jl
pop
rolb
ret
jmp
orl
sar
sub
mov
rcrb
repnz
mov
out
mov
sub
cmpsl
cmp
push
jl
js
leave
pusha
cmpsl
lcall
add
lahf
sub
ficompl
test
or
mov
xchg
cwtl
addr16
jne
pop
or
pop
mov
jle
mov
mov
inc
and
pop
push
lret
dec
insl
ror
push
jno
shr
lret
je
fsts
adc
fidivrs
les
push
cmp
loop
lret
adc
cmp
cmp
cmp
andl
divl
sbb
mov
jne
sbb
sub
mov
sbb
mov
mov
fadds
cld
repz
sbb
mov
mov
adc
mov
scas
mov
xlat
jle
jae
inc
out
fsubr
push
xchg
inc
mov
addr16
pop
or
cmp
test
sub
push
loope
mov
mov
pusha
sub
mov
imull
inc
and
or
dec
out
sbb
xchg
call
jmp
cmp
adc
jne
sub
xchg
sbb
jle
push
aam
cmp
jbe
xchg
subl
loopne
cmp
sub
push
sbb
push
cmc
mov
popa
aam
sub
mov
sbb
fildl
pop
outsb
or
cmp
and
push
imul
inc
aaa
iret
imul
cmp
sub
pusha
incb
flds
adc
stc
cmpl
push
xor
aam
fcomi
out
jbe
adc
sub
das
rclb
mov
or
dec
and
mov
out
inc
cmp
push
adc
mov
and
push
xchg
or
dec
insl
popf
mov
sbbl
sub
aas
xor
test
mov
lcall
sub
sub
je
stc
jg
dec
lret
pop
lret
push
sbb
aam
mov
scas
fistpll
int
or
xchg
jo
ljmp
xor
loope
loopne
pop
xor
leave
lret
push
jmp
or
lods
jb
cmp
fidivrs
es
inc
inc
mov
push
mov
dec
jp
ja
mov
lock
push
sub
insl
adc
cld
xchg
dec
inc
xchg
je
cmp
daa
and
mov
pop
jno
js
and
out
rorb
les
jmp
mov
pop
test
imul
movsl
pop
pop
sub
inc
loopne
jno
in
dec
inc
addr16
xchg
lods
or
jno
outsl
pop
dec
popl
or
lret
adc
cmp
out
data16
xchg
roll
fsincos
or
inc
lods
aad
mov
cmp
outsb
lcall
inc
repnz
stos
out
fldl
stos
pusha
add
pop
xorb
sub
push
mov
fstl
incl
mov
lret
mov
mov
push
cld
xor
mov
xchg
popl
jp
fnstenv
mov
jmp
pop
ret
cmp
ret
cmp
inc
cmp
push
scas
fiaddl
clc
and
mov
vaddps
ss
cli
xchg
mov
pop
push
inc
xor
shlb
outsb
daa
sub
enter
xchg
and
cmc
lahf
aaa
fiadds
sbb
stc
fabs
inc
jg
js
lcall
sbb
test
inc
mov
iret
xor
mov
push
int3
ss
and
push
fildl
fdivrl
popf
jne
jae
adc
sub
dec
and
inc
sbb
xchg
inc
mov
mov
stc
data16
mov
aaa
cmp
pushf
inc
adc
mov
test
inc
add
nop
cmp
es
cmp
jae
sub
push
jb
sub
iret
dec
mov
or
and
and
fldenv
and
insl
xlat
jmp
add
fwait
mov
shlb
or
mov
adc
mov
int3
mov
adc
xchg
enter
adc
xchg
pop
jp
out
repz
outsb
xor
outsl
out
cmp
jnp
movsl
pop
fsubl
sbb
je
outsb
in
loop
xchg
je
jl
popf
loope
adc
rcl
push
cltd
pop
xchg
mov
lods
pop
jecxz
pushf
mov
repnz
loop
inc
fldenv
push
mov
mov
sbb
jb
jbe
fs
push
loopne
arpl
mov
xchg
cmp
dec
mov
jecxz
hlt
lds
mov
shrb
out
jmp
dec
sahf
mov
ja
xchg
jae
andb
push
addr16
or
lods
in
enter
sahf
mov
xchg
xchg
mov
add
sbb
int3
stos
decl
lret
push
pop
cmp
out
mov
dec
movsl
lahf
jne
std
clc
cmp
sub
lret
add
jb
cmpsl
pop
lahf
push
and
lods
scas
cmp
mov
mov
aad
lcall
and
inc
mov
mov
inc
and
cli
out
or
mov
popf
mov
dec
mov
pushl
in
cmp
or
sbbl
pop
addr16
clc
outsl
lods
cmp
adc
int3
into
add
add
add
add
ja
mov
push
mov
into
cltd
pushf
into
test
xchg
push
in
cmp
das
mov
movsb
inc
rorb
aaa
mov
adc
outsl
push
scas
cmp
shrl
mov
lahf
outsl
aam
and
stc
push
repnz
lock
lds
inc
call
dec
cmpsb
or
mov
inc
int3
mov
je
mov
and
or
dec
and
mov
lods
xor
dec
mov
loopne
loopne
shll
loope
xor
pop
in
lahf
ret
repnz
jo
fistpl
jg
xchg
in
xchg
les
mov
pop
cs
adc
push
cmp
inc
lahf
fldt
sub
cmpb
loopne
or
mov
and
jg
daa
jbe
cli
mov
testl
mov
jle
jns
mov
lcall
push
xor
push
adc
jecxz
lret
std
sbb
shrl
add
cmp
sbbl
cmp
dec
jg
mov
popw
mov
xchg
push
in
ss
fsub
ret
dec
in
mov
add
xchg
out
cld
arpl
jge
pop
ret
loop
inc
add
pop
outsl
sbb
js
outsb
jmp
adc
adc
shlb
dec
mov
mov
mov
lret
enter
imul
subl
and
cmp
lret
adc
ret
push
rcll
or
push
push
xchg
ret
xchg
pop
sbb
cmp
hlt
push
in
pop
or
out
xchg
sub
mov
and
mov
mov
xchg
adc
movsl
cmp
mov
clc
pop
test
or
popf
dec
ret
daa
sahf
and
idivb
adc
jmp
add
jb
xchg
and
fstl
push
pop
mov
psubsw
pop
adc
xor
lea
ja
fst
jmp
fs
outsb
mov
sbb
mov
mov
loope
pop
and
ret
sbb
add
or
into
lock
scas
fsubrs
push
jns
push
fstpl
cld
loop
icebp
lods
sbb
mov
ljmp
movsl
xchg
push
mov
pop
stos
dec
pusha
jp
daa
inc
fisubs
aad
push
xor
leave
mov
xor
scas
clc
enter
xlat
xchg
mov
jmp
fdivs
push
or
orl
dec
mov
xchg
imul
out
ljmp
cli
add
dec
daa
xor
adc
js
fbstp
push
cltd
mov
mov
sahf
rcrl
inc
scas
aaa
rcrl
in
nop
movsl
aaa
ja
inc
fisubs
fidivrl
mov
xor
xchg
lds
xchg
lea
inc
enter
and
push
sarb
outsb
fiadds
int
icebp
xor
dec
gs
sbb
jmp
pop
cmpsb
sub
xchg
pop
jp
mov
xchg
pop
push
and
sub
mov
shll
add
pushf
popf
pushf
stc
mov
cmp
adc
mov
mull
dec
cli
fnstsw
dec
dec
mov
adc
mov
arpl
jns
leave
dec
push
xchg
and
xchg
sub
add
sbb
ljmp
sbbb
shlb
jmp
idiv
cmc
repnz
dec
das
or
xchg
mov
fwait
jg
jmp
jecxz
shrb
cld
outsb
addl
xor
clts
movsb
ss
movsb
pop
test
shr
cmp
aam
mov
lea
shrl
xchg
loopne
inc
jb
xchg
dec
xor
sarl
lcall
pusha
xchg
mov
mov
test
push
fwait
out
mov
divb
ficompl
jecxz
arpl
imul
mov
jb
aaa
fsubrs
movzwl
mov
loop
xorl
mov
fisubl
or
jno
jns
ret
jecxz
push
adc
push
push
lods
adc
pop
push
enter
adc
imul
lret
jno
push
push
push
decl
bound
lods
xchg
lea
jns
fs
fdivl
imul
mov
push
insb
cmp
jle
ret
mov
jb
enter
push
popa
jns
rclb
fnstcw
dec
iret
xor
xchg
pop
push
lret
sub
mov
dec
imul
addl
sub
push
xchg
mov
fiaddl
mov
jbe
out
xchg
push
jge
push
inc
xchg
int3
mov
fdivrs
jae
jp
sub
mov
aam
out
aam
jecxz
loope
jmp
mov
fmull
push
push
and
cmp
xchg
movsb
ljmp
cltd
add
pop
imul
orl
mov
pop
jle
sbb
fs
dec
loop
arpl
xchg
mov
pop
xchg
arpl
or
out
push
xchg
mov
fldt
pop
or
mov
mov
lret
push
shrb
inc
rolb
and
push
inc
jo
sbb
cmpsl
insb
mov
lcall
fdivr
add
lock
test
hlt
into
pop
dec
shrb
xlat
ficoms
ds
mov
pop
or
jbe
mov
ds
dec
add
int
push
cmpl
adc
cmp
cs
scas
sub
add
ret
cmp
ret
fisubrs
ret
inc
mov
xlat
hlt
pusha
movsl
lods
lcall
jmp
mov
test
sub
add
jg
push
lret
dec
cmp
push
lahf
in
xor
sub
add
fwait
cmp
cs
pop
add
xlat
inc
mov
xor
adc
dec
dec
or
jne
jle
and
xchg
inc
lods
and
rcrb
pushf
movsl
mov
ret
add
fs
and
pop
ret
gs
into
popf
xor
dec
lock
lock
les
iret
fldt
cmc
cmp
mov
cmp
xor
xor
std
jb
lret
std
inc
jmp
jp
push
pop
push
imulb
dec
mov
test
aam
decl
adc
add
xchg
xlat
dec
clc
sti
xchg
and
inc
stos
mov
and
pop
or
or
xor
xchg
movsl
fbld
jg
cmp
lea
mov
outsb
dec
in
stc
jmp
es
add
mov
hlt
stos
push
loop
push
mov
outsl
inc
or
jbe
jnp
shrb
aas
push
dec
and
mov
popf
mov
shlb
pop
sbb
xor
mov
pop
dec
lcall
stos
jecxz
dec
enter
ret
mov
out
push
dec
sbb
or
shll
or
lods
loop
dec
aam
test
cs
mov
pop
icebp
sarb
stos
out
and
jne
lea
lret
gs
in
insl
xchg
push
hlt
ret
mov
xchg
xchg
iret
lds
mov
das
sbb
pop
les
stos
jmp
add
inc
add
ljmp
stc
sbb
mov
mov
pop
push
mov
or
jge
fiaddl
pop
scas
ljmp
es
or
mov
rcll
and
or
push
inc
cwtl
cli
mov
popf
adc
dec
mov
mov
dec
clc
mov
push
add
andb
mov
add
push
lahf
inc
cli
ror
xchg
dec
mov
rorb
in
add
cmpsb
aam
mov
add
inc
xchg
notb
addr16
jp
cmp
popa
cmp
shll
lea
lea
cld
mov
cmp
sahf
insb
xchg
adc
call
orb
lods
ret
cmp
and
dec
loope
sbb
sahf
aaa
add
test
dec
mov
xchg
xchg
popa
insl
es
and
pop
pop
lret
sub
adc
fisttpll
xor
mov
mov
push
sbb
aas
lea
clc
aam
shlb
in
sti
hlt
int3
or
dec
cwtl
push
mov
push
dec
lahf
mov
cmp
jge
cmpsb
or
cmp
mov
mov
es
sub
ret
arpl
outsb
daa
cmpsb
xor
cmp
mov
outsl
pop
add
push
xchg
aad
clc
addr16
inc
push
jne
or
mov
dec
inc
xchg
jge
pop
icebp
loope
lods
fisubl
fldenv
jle
mov
inc
inc
push
lods
xchg
outsl
lea
stos
inc
dec
jle
inc
bound
jns
mov
adc
cmpsb
jbe
ds
jnp
in
iret
mov
lcall
movsb
imul
scas
fbstp
repz
push
adc
mov
fwait
pop
scas
pop
movl
addb
fsts
push
dec
shlb
jne
fcom
mov
lea
ja
in
popf
icebp
inc
jmp
in
adc
pop
xor
sbb
outsl
lret
lea
imul
adc
divb
int
rclb
add
stos
push
cs
xlat
outsl
sbb
pop
int3
jmp
add
mov
jg
cmp
cmp
mov
icebp
fists
addl
xor
sub
scas
mov
jae
mov
and
pop
jg
repnz
das
xor
in
aam
mov
push
dec
dec
fdivrs
fstl
stos
ljmp
shrl
in
sub
data16
sub
cmpsb
ljmp
xchg
sub
mov
xchg
hlt
imulb
cmp
xchg
sub
sarl
pusha
inc
pop
fildl
std
jb
mov
push
sub
sub
jp
push
loope
jno
jb
xchg
pop
inc
ja
popf
adc
xchg
xchg
cwtl
lods
jns
cmpsb
pop
sub
pop
adc
es
dec
pop
and
test
sbb
shl
aam
sub
into
mov
cmp
shll
jbe,pn
orl
roll
mov
out
hlt
or
push
sub
inc
mov
fs
loop
outsb
sbb
xor
or
xchg
mul
inc
shr
movsl
cmc
pop
ret
mov
mov
mov
test
lcall
data16
fists
fnstenv
into
xorl
cmpsb
inc
mov
fsubrp
lcall
and
addb
mov
gs
cmp
cmp
sub
sbb
or
js
cmp
dec
test
pop
int
inc
loope,pt
ja
push
cmp
ljmp
xchg
fwait
and
popl
out
xchg
cmc
bound
adc
test
or
test
sahf
sbb
sbb
jne
push
lods
imul
mov
jmp
pop
js
xor
inc
cld
in
lcall
sub
jnp
outsb
dec
aad
xchg
jg
sahf
jecxz
mov
sbb
test
sar
pop
insl
xor
mov
and
sub
mov
aaa
push
jecxz
and
adc
jl
xor
pop
jg
into
add
repz
testb
inc
pop
fwait
sbb
aam
stos
push
jo
xorb
movsl
mov
out
jns
stos
ret
int
scas
mov
out
sarb
in
dec
inc
xchg
and
and
fiadds
mov
dec
iret
loope
adc
jo
push
lds
jmp
cs
mov
pop
mov
dec
mov
testb
xor
dec
lock
in
mov
and
xor
scas
pusha
fcoml
push
jne
gs
fisttps
ja
das
std
pop
enter
push
pop
lods
pushf
add
mov
dec
das
in
pop
jecxz
cmp
pusha
std
gs
xchg
fidivs
inc
fidivl
mov
fistps
or
dec
pop
into
mov
sti
xor
cmp
sub
mov
cmp
bound
cmc
jge
fildll
and
inc
or
shrl
pop
mov
std
jp
loope
movsb
adc
or
add
popf
pop
pop
xor
fildll
lcall
inc
mov
les
xchg
add
add
xor
stos
rcrl
inc
imul
mov
mov
arpl
sub
nop
stos
jb
mov
pop
push
xchg
ret
adc
mov
lock
stos
push
es
mov
jns
pop
adc
sbb
push
cltd
adcl
and
bound
or
sub
xchg
or
push
cmp
adc
movsb
imul
or
mov
shll
mov
sbb
xor
ljmp
mov
pop
cs
jecxz
mov
and
std
rep
mov
fs
mov
jnp
pop
xchg
push
je
dec
imul
and
xchg
jbe
xchg
ret
xlat
int3
pop
mov
enter
test
mov
push
outsb
xchg
and
enter
inc
sbb
popf
pop
mov
jp
push
cltd
mov
mov
xchg
cli
lea
fwait
and
lcall
cmp
aam
shrl
sub
shr
cmp
inc
subl
inc
sub
cmp
ja
dec
filds
das
push
pop
aad
add
jnp
out
mov
mov
je
xor
rcrl
inc
mov
mov
int3
dec
jmp
outsl
jne
xor
and
sarb
hlt
sub
mov
adc
dec
and
pop
cmpl
xchg
jmp
pushf
or
lret
sub
repz
addb
incb
scas
icebp
call
cmpsl
ss
xor
nop
popf
fisubrl
adc
pop
ja
std
ret
and
jno
pop
push
out
push
dec
sub
push
xor
loope
pop
rep
cmpsl
test
xor
mov
ja
push
addr16
popf
xchg
popa
enter
das
lahf
cld
push
mov
loopne
out
icebp
cmp
push
pushf
mov
scas
js
clc
mov
lea
mov
es
fsub
and
sub
push
inc
cmp
jge
push
mov
stos
scas
test
arpl
mov
dec
loope
and
mov
dec
sub
rol
pushf
fnsave
push
loopne
lcall
iret
mov
sub
pop
std
ret
daa
cld
lret
fcomp
fwait
enter
dec
enter
test
fs
loop
imulb
cmp
jno
pop
fs
inc
repz
nopl
pop
pop
mov
mov
pop
es
adc
int
adc
lea
cmp
push
add
mov
pop
cmp
push
sbb
inc
cs
jns
pop
mulb
mov
dec
ss
pop
jp
rorb
adc
leave
mov
mov
ret
movsl
insb
dec
sbb
les
sub
sub
ds
or
jo
mov
loopne
xchg
mov
xor
jns
daa
mov
in
push
fld
mov
lret
shll
xchg
or
lahf
and
jmp
or
ja
loopne
mov
or
dec
sti
fcmovb
stc
outsl
ss
mov
cmp
les
jl
inc
mov
push
pop
loop
jnp
mov
arpl
jbe
test
push
push
jge
sub
adcb
adc
lret
test
push
sub
inc
scas
xor
movsl
dec
pusha
shlb
lods
and
and
aas
xchg
and
xor
xlat
call
dec
push
sub
xor
jno
mov
adc
ja
adc
xor
push
push
or
aas
mov
jno
cmpsl
pusha
mov
adc
inc
dec
daa
movsl
xchg
cmpb
inc
fsubs
fwait
popf
loop
sub
mov
cmp
push
stos
hlt
push
in
xor
loopne
mov
scas
into
mulb
or
mov
mov
fninit
sarl
es
lock
aas
cmp
xchg
cld
jae
xor
pop
aad
adcb
add
gs
repz
lods
in
ds
in
leave
dec
popa
adc
add
add
inc
scas
pop
xor
or
mov
lcall
pusha
sbb
mov
jo
aad
cmc
sub
pop
xchg
or
loop
pop
pushf
sbb
mov
push
pop
andl
or
aad
sti
test
add
shlb
lcall
ss
in
sbb
out
popf
fsubs
punpcklbw
negb
jg
inc
or
add
xchg
pushf
adc
xor
incb
pushf
enter
mov
std
insb
push
push
fnsave
popf
adc
dec
faddl
in
xchg
dec
inc
icebp
jle
or
fdivs
divl
filds
ret
fldenv
cld
stos
ljmp
sbb
int
sbb
insb
jne
or
xorl
push
orps
and
dec
pop
adc
mov
adc
clc
jmp
stc
xchg
inc
out
or
cmpsb
and
ja
push
dec
cwtl
add
mov
popa
dec
bound
jae
cmp
cmp
cmpsb
icebp
mov
add
movsl
aam
inc
xchg
loopne
das
insl
ret
or
mov
add
aaa
pop
pop
mov
sti
adc
into
pushl
sti
sti
push
outsl
test
jnp
imul
movsb
dec
pop
lock
int3
jns
mov
test
add
mov
sbb
pop
cmpsb
mov
inc
movsb
sbb
dec
xor
sbb
mov
adc
add
xor
push
idiv
iret
push
inc
fdiv
pop
rol
or
mov
pop
or
adc
xchg
stos
mov
mov
xchg
adc
dec
cmpsb
insl
insb
cmpsl
push
pop
push
mov
fldcw
jle
push
push
in
imul
cwtl
mov
int3
sbb
add
dec
ds
sub
adc
mov
pop
nop
test
icebp
ret
fcomps
add
mov
inc
loop
fnstsw
dec
inc
pop
or
inc
in
arpl
test
pop
xor
jge
push
cmp
dec
xor
aas
scas
pop
push
cmp
pop
popa
pop
mov
push
scas
push
or
cmp
out
jecxz
js
inc
sub
ja
xor
bound
ja
inc
cmp
xchg
fnsave
shr
dec
jmp
add
jmp
mov
and
jmp
sub
lds
pop
jge
adc
pop
ja
lret
mov
lods
int3
push
ror
insb
dec
dec
pop
or
aaa
mov
inc
idivl
push
pop
sub
sbb
int
xchg
fcmovbe
iret
dec
xor
jmp
stos
mov
stos
jmp
inc
inc
sbb
test
mov
mov
add
gs
inc
or
notl
push
fucom
push
push
mov
and
std
push
lret
mov
jnp
imul
sub
je
mov
aam
mov
ret
cld
test
or
mov
mov
mov
scas
iret
push
sarl
cli
ret
jnp
cwtl
sub
mov
enter
jne
pop
fisubs
and
and
mov
push
stc
cli
inc
and
inc
leave
fs
pushf
leave
lods
xchg
bound
pop
pushl
lock
mov
jg
add
pop
pop
lods
jecxz
pop
lret
push
jge
ljmp
jns
pushf
sti
adc
clc
push
repnz
mov
mov
aaa
cmpsb
mov
movsb
outsb
mov
fstps
call
mov
das
xchg
cmpsl
mov
es
adc
mov
popf
mov
mov
mov
cmp
xchg
mov
nop
gs
les
pop
add
lea
xchg
scas
clc
in
ret
enter
push
fucomip
jne
push
fmul
xchg
add
mov
mov
orb
ljmp
sub
repz
movb
hlt
cmc
jns
or
pushf
loop
cmpl
mov
imul
mov
mov
movsb
xchg
fsts
imul
inc
cld
mov
jae
mov
dec
mov
mov
iret
mov
xchg
int3
pusha
cmpsb
or
push
test
in
rclb
out
stos
fldcw
dec
cmp
test
jecxz
int
ljmp
push
pop
push
push
xchg
mov
test
outsb
jo
mov
scas
jle
shl
sahf
xchg
mov
mov
pop
inc
in
bound
addr16
das
cmpsb
addl
inc
gs
out
pop
lods
push
scas
mov
ds
mov
leave
lahf
popf
push
jnp
jmp
mov
outsl
ds
xor
mov
sub
xor
divb
stos
xchg
adc
pop
adc
push
sbb
sub
and
cmp
pop
mov
shlb
in
es
push
push
out
push
dec
jg
or
cmpsb
sub
mov
cmp
lods
mov
mov
icebp
lea
imull
sbbb
adc
cmc
jmp
mov
outsl
cld
dec
mov
outsl
sbb
cmp
bound
subb
ss
cmp
movsb
jb
rorb
xlat
jmp
push
pop
in
or
inc
cmp
dec
mov
mov
mov
mov
aaa
out
repz
out
orl
jle
out
cld
mov
mov
or
pusha
fnstcw
inc
dec
in
fcomps
jl
jmp
fistpll
push
shlb
push
jp
or
xor
enter
fwait
inc
cs
cltd
loop
imul
xchg
push
and
imul
add
mov
jnp
inc
mov
loope
and
pop
daa
or
pop
fnstcw
jl
push
je
sub
stos
jo
inc
dec
pop
xor
push
shlb
ljmp
dec
add
mov
sbb
or
js
cmp
cltd
mov
into
xor
stc
jo
insl
xor
xor
mov
pop
ficompl
mov
dec
mov
mov
inc
in
in
mov
dec
mov
inc
sub
movsl
pop
sarl
push
jmp
xchg
adc
mov
xor
and
addb
int3
mov
xchg
xorl
mov
mov
sub
je
push
jb
xor
inc
xor
xor
fst
nop
scas
fiaddl
insl
sbb
test
adc
sub
clc
jbe
lahf
gs
loope
cmp
dec
fisttps
jg
sub
inc
xor
data16
mov
cmp
gs
orl
lock
mov
and
fbld
rclb
pop
cs
cmp
imul
pop
mov
pushf
lret
mov
cmp
ret
inc
push
std
les
and
aaa
std
shr
jle
into
xchg
out
inc
test
pusha
mov
addr16
mov
sti
repnz
mov
or
jno
pop
dec
xor
pop
adc
out
fdivr
cld
fidivrs
mov
popf
and
add
cmp
das
je
clc
xor
cwtl
dec
ds
xchg
stos
sub
jl
aaa
pushf
jne
clc
stos
sub
mov
fimuls
test
dec
sarl
xchg
add
outsb
sub
arpl
pop
leave
addb
aas
xor
or
sub
jl
stos
out
sbb
sub
int
in
mov
pop
data16
add
js
nop
cld
and
aam
nop
xchg
xchg
cwtl
outsb
in
sbb
jae
fwait
jp
in
jl
sbb
xor
outsl
push
sub
testb
test
adc
cmpl
insl
jo
jae
mov
lock
lcall
push
xchg
cmp
xlat
cli
sbb
dec
and
shlb
shll
jecxz
pop
adc
test
mov
push
les
cltd
jp
and
inc
mov
mov
push
jmp
jb
cwtl
in
sbb
mov
dec
popa
pop
inc
jne
lods
jo
fidivrs
jns
stos
xchg
repz
cmp
sub
mov
and
pop
mov
imul
imul
inc
lock
in
in
test
pop
sti
push
mov
movsb
sub
cltd
mov
adc
jns
ret
subl
sahf
pop
jge
roll
xchg
fcmovnu
int3
or
cmp
or
repz
fwait
pushl
cld
cmc
dec
icebp
icebp
cli
es
inc
lock
jbe
fnstsw
sti
movsl
mov
dec
or
jmp
lret
bnd
push
scas
and
mov
mov
lea
imul
mov
sti
aad
jae
scas
orl
xor
notb
jg
push
or
xor
mov
sub
sub
sbb
or
or
lret
mov
movsl
shll
mov
jb
jmp
pop
leave
pop
scas
xor
pop
mov
mov
and
mov
or
mov
int
stos
call
lahf
lahf
jg
jmp
mov
mov
cmp
mov
pushf
mov
push
or
lods
add
xchg
jno
pop
jns
ds
and
cld
and
cmp
add
xorb
pop
testl
dec
xor
cmp
in
mov
imulb
push
repnz
mov
or
aaa
dec
arpl
ds
sbb
test
jl
fxch
inc
mov
or
hlt
idivl
pop
jmp
cmp
dec
lcallw
jge
daa
mov
je
dec
sbb
rolb
push
cmp
sbb
vpaddsw
cmp
mov
jae
push
mov
sub
fdivrs
lcall
das
dec
mov
dec
sub
in
repz
xchg
stos
pop
hlt
shrl
or
inc
gs
rcrb
sub
ss
jb
jp
and
pop
cmpsb
jns
lahf
push
ror
data16
pop
or
adc
stos
cmp
test
cmp
mov
cli
dec
loope
scas
insb
jnp
pop
push
adc
cwtl
insb
leave
adc
sbb
cli
scas
pop
ror
or
cs
lea
les
movsl
shrb
inc
sarb
mov
stos
ljmp
orb
cmpsl
push
add
pop
lea
roll
imul
mov
insl
out
outsb
jg
add
pop
push
outsl
lret
mov
cmp
nop
push
mov
jecxz
lcall
iret
mov
inc
push
imul
jg
mov
es
jb
mov
testl
orb
dec
add
insb
movsb
pusha
xor
mov
data16
scas
enter
sub
xor
pusha
bnd
xor
xor
sbb
inc
xchg
adc
jle
and
imul
or
jmp
insb
clc
cmp
mov
push
stc
fs
adc
xchg
out
ret
dec
push
fidivrs
mov
mov
lcall
sarl
nop
popl
fwait
cs
in
jge
mov
das
adc
inc
fwait
loop
inc
imul
dec
mov
sub
adc
adcb
sub
mov
enter
sub
inc
mov
pop
xchg
push
mov
push
xchg
jmp
dec
cli
cmp
push
jno
pop
daa
inc
dec
xchg
adc
jp
les
pop
pop
pop
ss
xor
jb
cltd
xchg
mov
pop
andb
inc
ret
sub
jmp
and
iret
int
cld
mov
inc
push
fistl
add
add
sbb
pop
fsubl
cmp
xchg
dec
push
mov
cwtl
xchg
rclb
mov
fwait
inc
pop
xchg
mov
repz
pop
icebp
inc
ret
les
jecxz,pt
repnz
sbb
inc
testl
push
arpl
shll
or
lret
pop
adc
movsb
mov
pushf
fstps
sub
push
jmp
pop
inc
jmp
test
pop
mov
add
push
cmovnp
movl
sub
inc
pop
xchg
mov
inc
into
pop
adc
push
fmull
push
add
mov
stc
ja
movsl
sub
jne
ds
in
dec
decb
xor
les
inc
cmp
lods
and
stos
lcall
xor
int
mov
cmc
mov
or
dec
jb
inc
lds
jmp
mov
rorl
xchg
mov
imul
xchg
jb
mov
mov
loopne
and
fisttpl
inc
lret
loopne
arpl
pop
hlt
dec
es
adc
movsl
jno
mov
lds
push
dec
pop
in
cmc
jno
adcb
sub
stos
insl
fwait
repz
loopne
bound
scas
fmuls
sbbl
add
lea
sahf
cmpl
cmp
xchg
shlb
popa
stc
dec
mov
dec
mov
dec
rcl
add
jne
sbb
lcall
adc
lds
xchg
pop
jo
cltd
out
sub
ss
add
loope
cmp
inc
neg
int
mov
sbbl
sbb
in
jl
in
cmpl
in
rcl
rol
dec
daa
insl
mov
arpl
lea
addr16
jne
sub
mov
test
and
in
cli
imul
push
clc
fsubr
leave
xor
and
mov
xchg
cmp
loopne
mov
cmpsb
jge
sbb
mov
xchg
xlat
ror
pop
add
pop
fstps
les
fsubp
int
xchg
push
mov
aam
mov
xor
jne
hlt
adc
dec
or
ds
pusha
jbe
repz
mov
jge
loopne
aas
dec
je
and
testl
or
sbb
jb
push
or
dec
shlb
pop
repnz
rcrb
sbb
sbb
xor
push
cwtl
sub
inc
adc
cmp
adc
outsb
imulb
pop
cld
movsb
jl
into
cltd
adc
imul
jb
loope
or
mov
jle
popa
sub
jl
adc
ljmp
lds
push
mov
xchg
scas
lret
mov
cld
mov
inc
pop
mov
jge
and
lcall
inc
movsb
push
loop
fistl
imul
pop
or
xchg
mov
mov
psubsw
subb
ss
mov
leave
pop
cmp
jmp
jbe
jl
dec
adc
and
jns
shrd
insb
cmp
jo
inc
jg
call
js
insb
icebp
sub
movsb
negb
add
je
mov
pop
idivb
cltd
incb
popl
ja
frstor
fs
leave
cmpsl
push
xlat
addr16
jno
arpl
xchg
test
fsubrp
cmovae
push
push
sbb
xchg
pop
je
inc
lock
es
loop
dec
cmpsb
pop
in
iret
imul
fisttpl
add
fldl
adc
jo
add
dec
mov
pop
in
mov
adc
sub
daa
pop
lret
adc
mov
jl
pop
mov
ja
dec
mov
mov
mov
pop
inc
adc
lcall
cmpl
push
push
pop
incl
sub
jp
inc
divl
lea
pushf
dec
mov
orl
sub
xor
int3
xchg
arpl
push
dec
popf
mov
insl
enter
rorb
mov
xchg
lds
fwait
imul
cmp
xchg
xor
push
cmp
cmp
pusha
inc
ret
lret
jno
loopne
mov
jae
jg
mov
data16
out
dec
mov
push
push
movsl
outsb
sbb
test
pop
dec
push
mov
fs
out
add
or
daa
dec
scas
icebp
pop
inc
or
sti
aaa
repnz
fistps
pop
repnz
cltd
mov
hlt
push
inc
mov
adc
stc
dec
mov
jg
les
repnz
add
adc
ss
cwtl
popf
lahf
sti
sub
inc
shlb
mov
push
loop
mov
pop
rcll
popa
cltd
sbb
aas
jne
rcrb
pushf
fs
cs
xchg
imul
cmp
mov
fstps
test
das
hlt
insl
xchg
push
push
adc
push
jp
stos
or
adc
lahf
mov
cmp
ficoml
enter
das
inc
push
lret
das
and
xchg
mov
int3
bnd
or
daa
int3
add
ss
loope
lock
pop
mov
jno
cli
stos
iret
push
ret
or
inc
popa
xchg
and
movsl
sub
inc
mov
xchg
outsl
push
icebp
in
push
push
sub
sub
cmp
jl
inc
xchg
cs
leave
lock
and
adc
inc
mov
or
jg
les
push
add
ret
inc
sbb
xchg
popa
or
mov
sbb
cwtl
stc
push
jmp
and
push
xchg
pop
mov
sub
push
arpl
jg
dec
xchg
gs
add
loop
aas
sahf
sub
push
mov
rcll
inc
scas
and
ds
mov
sub
lods
ds
cmp
loopne
ss
sbb
test
push
or
jne
inc
dec
add
mov
lock
xor
adc
and
rclb
push
int3
loop
xlat
mov
insb
adc
cs
mov
jle
aad
mov
or
repz
add
loop
in
fs
add
pop
mov
icebp
pop
mov
aas
xchg
aaa
pop
xorb
mov
gs
mov
cltd
mov
push
inc
dec
mov
arpl
cmp
sahf
out
jg
movsb
add
adc
dec
jle
dec
repnz
icebp
or
mov
cltd
pop
jns
pop
jno
out
stos
pusha
adc
inc
mov
les
mov
mov
mov
aaa
push
gs
cmpsw
lcall
lea
cli
mov
mov
stos
adc
inc
out
testb
mov
mov
mov
imul
shl
dec
dec
scas
nop
decb
out
xchg
push
jmp
popf
add
xor
and
popa
sub
loope
lock
arpl
xchg
testb
jle
jns
jb
mov
es
adc
xchg
leave
aam
popf
xchg
pop
fs
in
mov
pop
and
push
push
outsl
push
cmpl
mull
xor
pop
mov
in
js
clc
pop
nop
jge
cmpsb
outsl
in
movsl
rcrb
pushf
outsb
shrb
cmp
jmp
jns
cmp
test
mov
pop
mov
adc
mov
and
mov
cmpb
mov
les
ja
dec
adc
mov
fldl
ror
in
xlat
jp
adc
mov
inc
jno
les
jne
xchg
sbb
mov
in
mov
jmp
mov
int
jl
push
inc
mov
pop
and
mov
je
jl
fsubr
adc
cmp
pop
xlat
pop
jg
lods
xlat
adc
push
jbe
fdivrl
jnp
sub
lcall
push
or
adc
mov
inc
cmpsb
inc
jne
jmp
mov
jle
sbb
and
jl
mov
shl
cmc
push
cmpsl
adc
hlt
push
ljmp
push
fisubs
popf
fsubrl
xor
aam
or
repnz
pop
and
and
lds
jp
xchg
outsl
adc
shll
and
or
xchg
sbb
or
xor
sub
cmp
sbb
cmp
cmpsb
dec
aad
fwait
mov
xlat
pop
ja
cmp
add
outsb
pop
faddl
xor
lcall
loope
and
mov
xchg
sbb
in
dec
dec
sub
mov
lock
cmp
jmp
adc
push
fndisi(8087
ljmp
ja
inc
movsb
xchg
test
out
push
mov
cmp
xor
jnp
movsl
fnstsw
ficoml
in
jecxz
cmp
fiadds
mov
mov
mov
loop
btc
sysret
pop
stos
dec
ficomps
xor
cmp
into
push
mov
push
xor
shll
cld
cltd
and
hlt
pop
pop
idivb
inc
in
aad
pop
and
jo
push
cmpsb
mov
push
cltd
decl
push
mov
sahf
scas
mov
cmp
in
ret
inc
add
outsb
push
gs
pop
ret
scas
mov
push
jns
cmp
clc
push
sub
out
jbe
inc
push
stc
jg
sbb
add
enter
push
test
out
loop
jle
mov
fsubl
sub
fwait
and
not
fisubs
negl
dec
adc
push
mov
div
xchg
xor
mov
dec
jle
mov
daa
stc
jo
rcrb
mov
xchg
cmp
jecxz
xchg
mov
loope
xchg
adc
subb
lahf
xchg
sub
jp
adc
test
lcall
xor
pop
or
xor
or
imul
into
aam
and
pusha
dec
fstpt
cltd
dec
jb
jae
push
notb
call
dec
lock
pop
jl
xchg
lret
sbb
sbb
lret
cmp
xor
into
jge
in
cld
push
testb
cmp
cs
int
xor
sub
dec
fneni(8087
sbb
call
xchg
lods
cltd
scas
push
xchg
mov
gs
scas
xchg
insl
iret
imul
mov
out
fstl
outsb
fcompl
inc
out
pminsw
das
xor
adc
or
pusha
mov
mov
shrb
jl
je
mov
xor
ror
loopne
mov
push
mov
ret
scas
pop
addr16
les
imul
sbb
into
sub
std
das
data16
pop
loop
xchg
loopne
daa
sub
sub
pop
cmp
mov
mov
test
rorl
clc
push
mov
test
xlat
push
cmp
popf
insl
mov
add
sbb
fnop
pop
push
cmc
xor
lods
rolb
loop
rclb
dec
xchg
les
push
adc
fcomps
fisttps
mov
jmp
adc
data16
mov
cli
nop
lds
sti
sub
push
cmp
hlt
fisttpl
sysenter
lahf
aad
or
test
sbb
shl
push
jmp
iret
jbe
shlb
arpl
jle
lcall
lea
fyl2x
push
dec
xor
sbb
int
inc
inc
fldl
insl
ret
mov
insl
inc
adc
imul
adc
xor
pop
movntps
xchg
mov
mov
add
pop
shlb
fs
dec
inc
sub
fistpll
xchg
xchg
fst
cltd
lret
and
outsl
or
pusha
fwait
pushf
test
bound
inc
in
js
rcl
into
and
jle
mov
or
out
sahf
addr16
outsl
cld
cmpsl
push
inc
pop
sub
add
jle
mov
les
scas
stc
outsb
push
jg
les
xchg
xchg
push
or
je
add
push
stos
ret
dec
cmp
gs
cltd
stos
mov
shrl
sahf
nop
clc
xchg
jle
xor
pop
jp
push
mov
in
xorl
cltd
xor
out
ljmp
inc
fdivrl
and
hlt
addr16
icebp
inc
mov
dec
xor
mov
sti
iret
sub
jecxz
loop
shlb
push
aaa
test
dec
fadds
lods
xor
pop
sub
jbe
jge
push
iret
dec
pop
xor
in
dec
xchg
xor
stc
test
outsl
mov
into
push
fstps
std
stc
rcrl
testb
adc
rcl
popf
test
push
pop
xor
repnz
cmp
je
jns
ss
dec
xor
mov
add
lret
xlat
pop
mov
adc
cltd
pop
push
enter
lahf
xlat
mov
mov
sbb
ljmp
stos
mov
mov
xchg
sbb
jle
outsl
call
loopne
jge
pop
mov
adc
popf
adc
pop
xchg
dec
loop
dec
insl
aam
leave
inc
test
mov
jmpw
push
pop
cmc
cwtl
inc
xchg
dec
test
repnz
fisubrs
push
mov
cwtl
ror
unpcklps
dec
fbld
mov
cmp
ds
enter
arpl
cld
dec
sbb
pusha
ret
add
push
lea
imul
or
adc
ret
int
jg
scas
sti
inc
daa
jnp
fiaddl
add
shrl
push
aaa
inc
jge
ds
and
cmp
add
xchg
bnd
je
sbb
loopne
popa
and
cmp
adc
jg
mov
add
xchg
nop
add
fstpt
sub
cmpb
jne
sub
jbe
xchg
xchg
mov
sbb
pop
mov
int
xchg
testl
ds
or
jne
pop
cltd
mov
jle
adc
fcmovnu
into
mov
push
es
add
cmc
lods
mov
adc
push
push
or
mov
xchg
xchg
mov
in
mov
add
xchg
cmp
push
out
lock
mov
or
add
fcoms
fs
mov
into
repz
jecxz
xor
cli
int3
push
xor
cmp
out
add
add
lret
pushf
add
xchg
jb
int3
out
jge
das
out
push
jg
stc
mov
frstor
shl
stos
or
test
je
mov
mov
in
add
pop
add
mov
enter
adc
or
push
xchg
int
jno
or
jg
in
fwait
xor
mul
std
ds
jmp
sub
cmpsb
xchg
inc
mov
pop
test
ficomps
mov
mov
pop
ljmp
add
in
mov
add
pop
out
cwtl
sbb
test
inc
sti
xor
pop
es
pop
pop
pop
lahf
lcallw
add
gs
jle
xor
in
xchg
jnp
ds
inc
test
out
enter
inc
into
fiadds
sbb
call
mov
cmp
push
mov
push
push
insl
aam
pop
jmp
mov
mov
outsl
pop
mov
add
mov
cmp
cs
pop
inc
and
arpl
mov
dec
or
mov
mov
aaa
jns
jo
test
hlt
jp
jecxz
jns
and
jecxz
ret
ja
adcl
xor
idivl
add
xchg
decb
ficoms
cmp
or
repnz
sbb
or
into
pop
nop
call
lock
sub
testl
mov
mov
test
repz
sbb
jle
idiv
dec
popf
adc
or
lret
push
adc
cmpsl
sbb
js
inc
pop
xor
xchg
adc
mov
dec
lret
lahf
xchg
add
nop
xchg
sbb
adcl
leave
mov
and
or
push
mov
push
sub
movsb
sbb
int
mov
pop
mov
pushf
adc
test
test
and
cltd
shl
mov
push
fcmovb
sbb
cld
add
add
adc
les
sbb
mov
push
xchg
lret
out
scas
enter
and
insl
in
lock
insl
xor
icebp
loop
push
lea
js
scas
jmp
mov
out
cmpl
pop
sbb
add
addr16
push
iret
jmp
into
mov
xchg
and
fisubs
dec
pop
pop
pop
add
lock
shrl
stos
xchg
aaa
sbb
rorl
adc
pop
sbb
cmp
dec
lret
jne
daa
dec
mov
mov
mov
scas
push
mov
fisubrl
sub
mov
loop
add
jnp
ret
bound
mov
or
xchg
jmp
ja
rcrb
lods
push
sbb
daa
xchg
jne
fwait
jecxz
xor
push
filds
lret
jbe
sub
clc
inc
mov
gs
stc
sbb
and
jno
inc
mov
jbe
in
cltd
pop
pop
push
mov
orl
daa
es
lcall
stos
and
mov
imul
adc
in
stos
out
xor
cmp
or
mov
cwtl
fs
movsb
fdivrs
dec
xorb
popa
fstl
mov
sub
enter
scas
pop
adc
push
call
mov
shrl
sub
add
fimull
sub
in
or
stc
ret
popa
in
xchg
push
cmp
jmp
sbb
insb
aaa
xchg
pop
xadd
xor
or
dec
cmp
bound
mov
xchg
aad
or
mov
cs
dec
ljmp
xchg
mov
ret
lret
andb
mov
xor
mov
inc
cmp
add
fnstsw
mov
jno
push
shrb
mov
pop
cmp
in
and
ret
jno
enter
or
sub
adc
arpl
je
or
inc
lea
sti
and
popf
insb
das
shll
das
pop
fwait
shlb
out
cmp
leave
out
dec
dec
pushf
fcoms
cmpl
rcl
mov
dec
inc
enter
rolb
call
sub
pop
test
jae
add
jo
cmp
in
aam
push
jae
es
ljmp
in
fs
stos
leave
repnz
enter
aam
gs
lock
mov
lret
inc
shl
stc
loopne
and
das
movsl
shll
push
jmp
mov
jp
dec
sbb
jno
sti
repz
test
dec
sbb
xor
jmp
jge
ret
push
adc
cmpb
adc
test
repz
cmc
fstpt
cmc
jns
inc
fisubs
mov
sub
stos
sbb
push
data16
lcall
nop
cmp
in
sub
imul
jge
pop
lahf
cmp
leave
ljmp
adc
icebp
sub
lea
imul
dec
mov
push
mov
scas
mov
sub
fwait
mov
daa
imul
lods
xchg
push
aad
mov
dec
stos
test
cmc
and
mov
shrb
stc
mov
cmp
loop
jp
push
mov
xchg
pop
in
pusha
daa
mov
std
add
jnp
xor
imul
jp
arpl
cmc
sahf
sub
dec
shll
cltd
mov
push
sub
jmp
shll
loope
loope
jnp
cmc
daa
pop
jle
mov
daa
jns
mov
hlt
xchg
mov
dec
sub
andb
lods
std
imul
in
test
jle
dec
mov
add
aas
fldenv
or
mov
js
pop
addl
sbb
daa
xchg
jmp
push
push
outsl
jl
mov
and
dec
xchg
dec
xor
jp
mov
pushl
push
pop
aad
dec
rcr
daa
ljmp
sbb
out
sub
xor
add
lock
mov
push
outsb
pop
xor
xchg
fsub
add
stc
and
rcrl
xor
mov
inc
adc
mov
jns
jb
mov
loope
aas
daa
enter
add
xor
aam
fistps
mov
cs
das
pop
aas
inc
pusha
nop
sbb
test
das
jle
aas
fiadds
repz
daa
inc
and
sbb
in
into
cmp
inc
push
sbb
loope
push
mov
imul
lahf
mov
leave
dec
inc
adc
push
movq
lea
sarb
xor
arpl
lods
lods
out
mov
arpl
ds
dec
jle
or
cmpsb
push
sbb
cmp
push
inc
cmp
pop
jne
inc
dec
incl
shlb
mov
je
lods
fs
add
mov
and
sub
cmp
push
xor
pop
pushf
ret
addr16
roll
dec
xchg
mov
sub
outsl
ds
inc
stos
incb
in
popa
test
adc
pop
mov
mov
push
push
mov
sti
pop
aas
dec
cmp
sbb
lea
sahf
call
insl
dec
sarl
xchg
push
icebp
push
cmpsb
and
out
dec
dec
imul
jle
push
mov
loope
in
pop
sbb
ja
stc
pop
lods
xor
insl
lcall
shll
nop
xchg
jne
sarl
imul
decb
imul
sti
jo
stos
es
xlat
mov
or
scas
rclb
mov
orl
ret
or
in
cs
movsl
mov
js
fwait
jl
fiadds
mov
sbb
sub
in
adc
sub
or
out
test
gs
in
inc
imul
dec
mov
idivb
in
jo
mov
out
cmp
xchg
xchg
aad
aad
push
sti
xor
inc
xor
mov
inc
add
sarl
mov
adc
xor
jle
stos
imul
add
sbb
and
mov
lds
mov
sub
test
pop
jo
and
pop
cmp
rol
icebp
mov
add
mov
mov
jne
lahf
sub
xchg
cld
call
fstpl
js
popa
icebp
out
add
adcl
adc
inc
jmp
pusha
adc
add
mov
pop
pop
rclb
sbb
stc
mov
lods
mov
mov
and
mov
or
inc
loope
or
repnz
jle
dec
xchg
jae
push
and
repnz
mov
lds
cmp
sub
jp
sbb
adc
scas
xchg
movsl
push
pop
mov
leave
and
test
mov
stc
addb
jp
repnz
push
mov
push
fldpi
test
pop
adc
hlt
test
sahf
pop
adc
mov
push
fsts
mov
test
lods
push
movsl
jmp
sbb
test
jbe
lret
int3
push
das
cli
pop
cmp
andl
ret
icebp
pushf
sub
add
push
xchg
ja
jb
push
and
xorl
gs
add
pop
fwait
sbb
cmp
or
mov
xchg
push
xchg
sbb
sbb
scas
pop
xchg
aas
in
mov
cli
icebp
dec
fstps
dec
in
int3
xor
lds
xlat
add
hlt
daa
stos
out
xor
fs
xor
mov
rclb
aas
es
xchg
rcll
inc
cmp
hlt
sbb
fisubs
add
mov
jo
push
mov
mov
mov
adc
mov
adc
inc
outsb
addb
out
mov
rclb
gs
dec
shl
xchg
pushf
movsb
xchg
sbb
push
aad
inc
xchg
pop
mov
in
sbb
loope
cmp
fidivrs
leave
outsb
in
mulb
sbb
mov
and
sub
xchg
dec
arpl
outsl
dec
loopne
xchg
lcall
rcrb
pusha
push
imul
sub
or
cli
inc
jbe
ja
repz
stos
pop
fwait
xchg
push
inc
rcrb
loop
jp
cmp
xchg
inc
push
pop
xor
loopne
loopne
xor
nop
in
adc
inc
sub
push
or
lds
loopne
pushf
mov
dec
or
dec
jmp
test
outsl
lret
shlb
clc
in
or
inc
push
push
push
dec
push
mov
or
sbb
stc
aad
add
mov
sahf
dec
mov
inc
xor
cmp
mov
out
push
dec
mov
or
aad
lret
sub
fsubs
sbbb
ljmp
sti
in
test
sub
jmp
pop
mov
lret
cwtl
ljmp
insb
push
cmp
cs
jae,pt
lea
push
stc
pop
shll
jl
xor
inc
or
push
cwtl
jnp
mov
mov
loopne
and
pushf
scas
xor
lret
in
xor
cld
test
sbb
add
les
inc
scas
sbb
pop
out
jl
pop
jb
lods
dec
out
aad
mov
cmp
cltd
sbb
scas
xchg
in
fwait
sbb
repz
cmp
inc
lret
push
cmpl
sarb
arpl
push
ja
mov
sbb
jecxz
mov
pop
push
push
leave
leave
aad
outsb
loope
dec
movsl
pop
and
repz
shld
mov
js
movsb
cli
cmpxchg
pop
adc
push
xchg
sub
adc
fwait
pushf
jnp
pop
cld
leave
push
adc
dec
mov
cld
lods
mov
inc
inc
das
mov
int
movsb
mov
fisubs
dec
pop
mov
ljmp
xor
insl
jle
add
dec
movsb
xor
fwait
adc
xchg
lods
push
out
mov
push
xchg
out
xchg
stos
mov
daa
pop
fidivrs
inc
shll
inc
into
push
fucomi
in
bound
push
pop
inc
mov
scas
cmp
pop
inc
into
scas
pushf
lds
pop
inc
jns
cmc
stos
jmp
pop
ja
in
inc
fsubr
xchg
or
and
pop
rclb
adc
pop
cmp
adc
sbb
movsb
call
and
daa
fwait
inc
lret
test
push
rcrb
clc
or
mov
int3
aaa
int
in
add
popf
dec
lea
xor
or
jecxz
lods
sub
arpl
add
mov
cltd
cmpsb
je
xchg
cmp
je
and
xor
daa
aad
cltd
fwait
jae
pop
and
dec
xchg
and
or
popa
xchg
daa
cld
ss
int3
popa
mov
les
je
in
push
mov
sar
xor
pop
adc
fadds
push
add
shrb
stc
cld
lods
push
dec
sub
loop
in
fidivrl
test
ja
cmp
xor
adc
cmp
decb
dec
jge
inc
dec
idiv
test
out
inc
jl
idivl
jg
imul
dec
cmc
pop
nop
cmp
ficomps
fimull
inc
jnp
mov
mov
sbb
loope
mov
into
cmpsb
cld
sbb
sub
out
into
popa
or
push
xchg
cmp
jns
and
sbbl
leave
loopne
cmpsl
xchg
jecxz
jge
aas
push
hlt
push
jp
adc
mov
test
stos
adc
or
xchg
les
call
outsl
sbb
or
ja
xor
push
jp
addr16
sbb
mov
dec
shl
call
mov
movsb
inc
and
or
mov
adc
movsb
stc
pop
bound
sub
into
xchg
shrl
orb
sub
repz
add
shll
and
add
iret
fstpt
add
sub
and
cmp
push
jecxz
jecxz
jmp
inc
cmp
mov
out
js
inc
dec
push
clc
imul
push
push
jb
cmpl
loope
fcmovb
data16
push
pop
and
pop
int3
rol
and
sbbb
adc
dec
sarb
cld
and
ret
push
jp
push
shlb
cmpsb
jnp
enter
mov
mov
sti
fwait
mov
sbb
clc
aam
sahf
popa
cli
pop
loopne
mov
popf
testb
mov
mov
scas
repz
jo
xchg
dec
mov
movsl
inc
jb
in
or
out
xor
mov
arpl
and
pop
daa
inc
jo
les
push
add
push
inc
lret
mov
dec
xlat
dec
test
dec
stos
xor
scas
je
jbe
dec
pop
out
add
mov
push
out
jp
push
ds
inc
and
xor
xchg
lea
cmpl
xchg
call
mov
leave
jmp
aas
and
out
out
mov
jecxz
insl
hlt
inc
lock
idivb
mov
jmp
sbbb
rclb
mov
lock
pop
out
leave
idivl
push
mov
in
dec
sub
sub
lret
xchg
fcomi
dec
inc
rcrl
lds
or
or
pushl
out
mov
add
lahf
idiv
or
neg
push
and
jo
subl
repnz
push
jg
sub
mov
iret
cmp
mov
inc
icebp
cmp
test
cmp
xor
push
xor
add
add
mov
sub
test
pop
repz
fnstsw
cwtl
jns
mov
int3
mov
sbb
and
into
xlat
mov
insb
cmpb
fsub
int
fisubrl
dec
gs
inc
and
cltd
inc
push
nop
movsb
inc
cmp
cs
sti
jns
jg
stos
das
out
or
popf
jmp
add
rolb
ret
sub
in
mov
inc
pop
xor
fcomp
or
dec
dec
add
movsl
mov
dec
xor
les
xor
into
or
sbb
icebp
add
mov
sbb
dec
movsl
cmp
js
imul
call
and
int
js
push
test
sbb
lock
cmp
and
or
jnp
pop
cmc
mov
jg
push
cmp
xor
or
in
je
inc
dec
sub
mov
or
es
insb
mov
mov
add
dec
jecxz
rclb
adc
lods
cwtl
xor
icebp
lret
or
xor
insl
and
lcall
dec
out
in
dec
xor
mull
icebp
fcmovnu
iret
in
incl
push
imul
sub
jge
xor
and
dec
cmp
imul
aad
sarl
and
incl
pop
adc
nop
add
xchg
lods
jae
add
sbb
jmp
das
push
push
pushf
cmp
xchg
xchg
xchg
push
outsb
xor
or
imul
mov
iret
lar
test
cmp
sbb
nop
mov
mov
into
pop
test
cmpsb
out
stos
out
adc
mov
enter
sub
jne
sbb
pushf
xchg
pop
adc
outsb
insl
sbb
lods
hlt
xor
test
push
int
dec
test
sbb
loope
xchg
imul
mov
and
jp
xchg
outsl
arpl
push
and
adc
mov
mov
out
mov
xor
mov
cs
test
rcl
dec
test
pop
pop
ret
xchg
bound
mov
mov
andl
push
mov
and
mov
loope
sub
cwtl
insl
mov
inc
add
push
stos
mov
ja
jmp
mov
mov
xor
mov
push
imulb
jle
push
cmc
sbb
outsb
push
cmovl
dec
cmc
pop
inc
mov
js
bound
mov
and
lods
inc
insl
popf
pop
enter
rcr
stos
fs
xor
mov
xchg
dec
outsb
mov
add
adc
jne
outsl
push
fwait
inc
fcmovb
ja
in
lods
xor
xchg
xchg
lods
les
stc
add
inc
imul
ret
in
std
pop
jl
lret
jl
in
ss
lcall
cmp
out
aad
sti
outsb
mov
mov
sbbl
fildll
fiadds
sub
stos
lds
push
les
dec
sbb
mov
or
and
test
loopne
cmpb
pop
lods
mov
jmp
and
js
fisttpll
insl
add
lea
je
test
test
mov
and
cli
arpl
je
into
inc
mov
inc
xorb
adc
scas
out
mov
push
ljmp
jecxz
xor
dec
mov
cmpsl
pop
mul
setb
inc
stos
or
test
orl
inc
addr16
adcl
movsb
icebp
mov
fimuls
movsl
mov
sahf
push
mov
xchg
loop
orb
mov
stc
xor
xor
xchg
jmp
fsubs
mov
fucomip
jb
stos
icebp
cmp
les
or
inc
and
jmp
outsb
cmpsb
xchg
fwait
or
ret
jg
sub
gs
mov
rolb
orb
hlt
fdivl
sub
sub
mov
mov
or
sbb
xchg
clc
fsubs
sbb
in
popf
fisttps
int
icebp
xchg
out
dec
jg
and
mov
adc
lock
cmpb
jmp
test
ds
test
pop
mov
cld
mov
mov
jge
add
push
out
lcall
add
in
popa
sbb
out
push
pop
filds
sbb
add
xchg
mov
rol
adc
lcall
push
cmpsl
repnz
pop
cs
mov
popf
mov
mov
les
ljmp
inc
or
mov
daa
rclb
movsl
pop
rcrl
cmp
pop
addr16
cmp
call
in
jl
in
ds
test
push
outsb
xchg
outsl
pop
jmp
cmp
lcall
aaa
pop
xchg
add
mov
add
mov
mov
sarl
lds
les
iret
xor
add
pop
js
cmp
dec
cmp
aad
movsb
pop
imul
rorb
shr
out
out
xchg
mov
jno
repnz
mov
es
mov
ret
ds
stc
or
xchg
icebp
push
dec
rcrb
and
ficomps
imul
dec
test
or
jae
std
jl
jg
rcll
pop
cmp
push
mov
add
and
jne
adc
add
adc
rcll
and
and
mov
inc
mov
xchg
rclb
jp
fsubrl
lods
pop
in
lcall
iret
mov
imul
mov
aad
cli
repnz
dec
mov
pop
fldt
xchg
adc
jmp
les
cltd
iret
sbb
adc
add
stos
and
xor
lds
lahf
sti
cli
sub
dec
out
les
or
fdivs
incl
jmp
iret
cmp
cmp
pop
jnp
sbb
pop
mov
js
dec
unpcklps
sbb
jmp
lcall
sbb
int3
jle
mov
fisubl
jmp
adc
rcll
in
pop
call
or
repnz
std
sub
ds
mov
xor
aad
loope
movsb
fisttpll
into
repnz
aas
loope
cmp
or
dec
or
imul
inc
inc
and
pop
lret
push
iret
je
pop
stos
ds
mov
xchg
xlat
lret
or
xor
inc
fsub
mov
xor
inc
pop
xchg
jge
les
sub
loope
mov
jg
sahf
add
lahf
inc
xchg
add
out
add
jmp
jp
mov
jmp
xchg
xchg
rcr
push
clc
mov
add
or
das
pushf
xor
std
jnp
adc
call
adc
ret
fmull
enter
outsb
testl
subl
xchg
stos
cmp
jne
imul
cmpsb
mov
fwait
cld
inc
sub
or
sub
or
fs
xor
aam
stos
adc
mov
je
jb
jp
imul
xchg
mov
jb
cmp
aaa
icebp
scas
and
jecxz
add
pushf
sahf
dec
xchg
les
jns
aas
repz
mov
subb
pop
pushf
insb
dec
out
shrl
mov
das
pop
mov
and
fs
inc
rcl
mov
jecxz
mov
adc
iret
push
adc
int3
add
mov
std
or
jle
cld
mov
mov
pop
mov
popf
cmp
mov
xchg
out
in
insl
scas
or
sbb
rcrb
jmp
adc
adc
imul
mov
inc
pop
outsb
in
out
fldlg2
xchg
scas
das
pushf
push
inc
out
daa
pop
shlb
push
mov
pop
stos
pop
js
xor
popf
xchg
push
cltd
jmp
xchg
lock
sbb
lds
nop
jo
call
cmp
xor
cmp
fcomps
mov
movsl
xchg
shll
popa
test
mov
and
adc
loopne
hlt
dec
sub
cmpsb
push
cmpsl
in
or
hlt
rolb
add
shrl
orb
clc
sahf
in
add
fstl
repz
xchg
test
add
mov
ljmp
cmp
scas
jne
adc
add
xchg
jnp
push
xor
adc
stos
mov
repnz
inc
daa
adc
cmpsb
mov
test
jp
mov
fdiv
aam
mov
les
mov
mov
dec
mov
jae
adc
cmpsb
or
test
outsl
or
mov
inc
cmpb
mov
dec
xor
adc
addr16
inc
lock
mov
xchg
sbb
mov
in
insb
lret
sahf
movsl
clc
cmc
pop
bound
sbb
out
icebp
push
test
fcoml
push
xorl
mov
push
mov
mov
js
push
add
popl
push
xchg
mov
sarb
or
rorb
jns
adc
push
pop
xchg
js
xor
mov
mov
jp
and
into
adc
and
pop
pop
cli
outsl
movl
insb
adc
dec
pushf
add
cs
inc
xchg
xchg
scas
pop
dec
out
lock
push
into
movsb
test
cltd
jecxz
arpl
das
add
nop
xchg
xchg
mov
fsts
lods
xor
lret
inc
pop
loopne
xchg
mov
jb
xor
fs
leave
into
mov
daa
mov
test
adc
adc
mov
imul
outsl
push
push
xor
sbb
jg
add
outsb
pushf
test
test
mov
decb
inc
xchg
or
repnz
xchg
sahf
rclb
sub
ftst
mov
hlt
pop
adc
fldcw
cli
sbb
push
xor
add
sbb
inc
cltd
into
pop
pushf
stc
dec
mov
movsb
outsl
notb
push
fcoml
xor
or
cmp
push
movntps
xor
bound
subb
int3
jmp
dec
sbb
inc
stc
adc
xor
mov
mov
jne
add
mov
push
test
mov
in
ret
add
shll
into
and
addr16
and
and
gs
jmp
cld
xor
xor
ja
call
enter
idivl
aaa
fcmovnu
popa
pop
mov
cli
pop
mov
adc
mov
push
popa
xchg
push
sub
adc
and
xor
jns
cld
out
push
dec
stc
mov
or
les
aad
push
int
rcrb
sbb
cld
clc
sbb
test
and
jne
cltd
add
inc
sub
imul
shrb
sti
mov
aas
out
adc
sub
lods
adc
pop
popa
cltd
andb
sub
add
decb
icebp
push
mov
pop
testb
jne
mov
adc
lcall
fmul
or
int3
mov
jmp
or
clc
enter
adc
sub
push
push
xor
loopne
ds
sbb
dec
sbb
mov
or
scas
sbb
lock
mov
xor
aad
dec
xchg
cmpsl
cmp
or
vmovmskps
or
and
adc
lahf
mov
sub
adc
sbb
adcb
pusha
leave
fisttpl
inc
xor
mov
dec
mov
push
sti
sub
cli
push
mov
cmp
and
jae
es
mov
pop
cli
bound
xor
dec
cmp
cmp
or
or
mov
dec
lea
jnp
loopne
dec
scas
mov
mov
unpcklps
inc
mov
cmp
jle
cmpsl
lods
hlt
push
pusha
outsb
int
dec
das
push
shll
pop
imul
adcl
notl
stos
cltd
xchg
dec
cmp
add
movsb
mov
mov
pop
scas
in
jmp
movsb
adc
cs
and
sbb
ss
dec
pop
gs
pop
xlat
cmpl
mov
scas
jl
repz
pop
jmp
sub
nop
sbbl
and
jbe
mov
dec
cltd
loope
xchg
andb
push
inc
or
fisttps
std
or
mov
out
cs
jns
cltd
repz
push
and
sti
sub
pusha
mov
popf
mov
scas
sub
jns
dec
fcomi
sbb
je
inc
adcb
inc
fcompl
daa
push
or
sbb
out
inc
sbb
sub
pop
xchg
ror
repnz
cs
inc
inc
leave
in
adc
mov
and
and
mov
dec
dec
jne
ficoml
cmp
dec
test
dec
fisubrs
loopne
imul
sub
sub
xor
les
xchg
loopne
into
ret
inc
jecxz
add
adc
push
jns
xor
xchg
out
jb
popa
sub
aaa
fisubrs
pop
nop
pushf
aam
xchg
lds
cli
popa
mov
js
pop
lret
xchg
mov
roll
inc
outsb
mov
mov
inc
sub
lock
cltd
sahf
out
sub
pop
in
in
insb
or
xor
lods
rcll
pusha
js
into
xchg
scas
lods
or
popw
xor
loopne
mov
imul
icebp
adc
and
jns
pop
clc
xorl
mov
mov
sub
pop
or
xchg
imul
nop
mov
stos
jmp
scas
or
shrb
loop
jl
faddl
aas
out
pop
mov
inc
cmp
in
insl
add
mov
push
insb
add
or
inc
jle
jge
mov
mov
and
ror
scas
addl
pop
mov
mov
mov
or
jb
outsb
scas
bound
and
jno
xor
pop
adc
pop
mov
mov
in
imul
scas
arpl
je
xor
pop
mov
aam
fwait
ret
and
loopne
inc
pop
shll
lahf
movsb
dec
nop
dec
stc
mov
jno
or
add
or
jecxz
mov
cltd
push
fwait
sbb
cltd
es
inc
pushf
and
push
adc
xchg
rorl
dec
add
inc
cltd
adc
pop
movsl
aas
jo
sbb
lea
xor
jmp
dec
shrl
jg
test
les
lret
mov
dec
add
divb
ds
mov
sbb
lods
lret
lods
lods
adc
push
dec
cltd
mov
int3
call
xchg
jecxz
mov
and
adc
jge
push
inc
jb
adc
cmovs
pop
cmc
cmp
movsb
out
vpmacssdqh
pop
xchg
or
int3
mov
mov
push
int
data16
xchg
sbb
inc
leave
lds
pop
pop
mov
xchg
cmp
xor
adc
or
jo
dec
cld
or
lret
dec
outsb
data16
jns
adc
test
test
rcll
call
sbb
xchg
and
xor
sbb
xchg
out
mov
movsl
sbb
add
pop
pop
sub
rclb
loope
sub
jg
push
pushf
inc
ret
sti
ja
fcompl
add
and
mov
jg
js
push
sbb
mov
mov
fs
imull
xor
jle
mov
mov
and
dec
sub
testb
jno
cmp
inc
mov
rclb
cmc
sub
or
dec
push
mov
mov
pop
xchg
xor
lcall
jbe
testb
pop
test
movsb
sarb
insb
sbb
or
ds
cwtl
sub
pushf
dec
shlb
lods
call
xchg
fisubs
bound
ljmp
jo
mov
xor
mov
popa
xchg
enter
in
jge
sar
ljmp
jp
or
and
cmp
fists
aam
ss
jle
sbb
sti
or
cmpsl
and
imulb
pop
ror
and
push
sub
mov
dec
xchg
stos
or
xorb
dec
lahf
call
jns
out
data16
clc
adc
mov
iret
xchg
in
scas
push
jge
lret
push
faddl
fidivl
lret
pop
adc
out
std
cwtl
dec
adc
pop
sarb
hlt
cmc
mov
pop
sub
iret
stc
or
pusha
or
inc
movsl
jecxz
adc
sbb
pop
icebp
ss
or
mov
test
lock
pop
scas
sub
pop
mov
stos
jbe
xor
out
movsl
aad
loop
jg
jmp
loop
test
fsts
rol
push
cmp
cltd
fs
jno
push
mov
loop
cld
imul
lahf
adc
add
jle
push
xor
ja
add
popa
ror
jmp
cmp
push
and
mov
rol
lea
adc
adc
mov
dec
fimuls
push
adc
fcmovnu
cmp
fwait
incb
pop
ja
or
pop
mov
cmp
ret
cmp
repz
add
add
dec
adc
mov
xchg
dec
in
inc
arpl
test
stos
xor
or
fsubrp
out
pop
xchg
adc
lret
sbb
hlt
lret
lods
gs
ja
iret
arpl
jns
xchg
adc
aas
cs
jno
rcll
dec
popa
insw
test
cmp
popf
movb
lods
addr16
roll
dec
sbb
or
pop
insb
stos
ficomps
mov
call
sarb
shlb
cmpsl
out
mov
and
jge
ficomps
test
aam
fwait
imul
movsb
xchg
push
xor
cmp
push
mov
adcl
inc
cmp
sbb
inc
and
xlat
xchg
pop
mov
ret
data16
stc
outsb
mov
int3
andb
push
push
jge
les
add
lds
outsb
and
sub
mov
xlat
jns
mov
popf
pop
popa
mov
scas
loop
int
fwait
xorb
adc
xchg
jae
je
sti
dec
mov
inc
and
das
xchg
add
xchg
sub
dec
mov
push
adc
sbb
xchg
repz
pop
xchg
jge
popf
mov
fistps
lret
cli
arpl
pop
inc
or
out
nop
int
xchg
or
mov
loope
push
loope
or
pop
xchg
int
pushf
aam
inc
push
ret
adc
rcr
sbb
dec
mov
dec
mov
xorl
xor
sub
testb
or
or
mov
negb
and
addl
adc
dec
aam
lahf
lea
dec
inc
fsub
nop
pop
sbb
enter
sahf
cmp
outsb
cmp
loope
int3
test
mov
out
outsl
xchg
insb
adc
dec
push
xchg
xor
in
pusha
or
inc
and
adc
pop
outsl
pop
dec
jmp
fldl
xor
or
sahf
popa
add
push
push
or
hlt
add
cmp
aaa
cmp
mov
cmp
push
or
and
test
add
into
outsb
mov
push
out
inc
ds
sahf
scas
inc
sub
pop
adc
pusha
test
and
xrelease
shlb
sbb
lods
mov
rcrl
mov
inc
add
adc
push
in
mov
out
inc
int
jg
jle
sbb
ffreep
adc
bound
imul
mov
faddl
cmpsb
jnp
pop
xchg
jnp
adc
pop
push
sub
in
in
add
pop
sarb
mov
fadds
lret
mov
std
arpl
or
ret
test
dec
mov
inc
idivb
inc
into
xchg
push
or
inc
xor
mov
mov
sbb
ret
movsb
xor
dec
or
jl
fildll
xlat
mov
cltd
pop
jno
add
out
roll
jle
xchg
scas
loopne
sub
push
xchg
inc
insl
mov
and
mov
aad
ds
pop
nop
sbb
jmp
out
cwtl
std
cwtl
sub
ret
rcrb
dec
jo
into
stos
sub
pop
xor
dec
stc
mov
leave
loop
enter
fdivl
scas
push
mov
jle
push
sbb
inc
test
and
cmp
sarb
and
mov
push
sbb
and
inc
sbb
lods
mov
push
push
or
and
mov
pusha
sahf
clc
push
cld
xchg
fimull
mov
jg
mov
add
cmp
jno
or
ja
inc
fisubrl
cltd
sbb
fildll
js
pop
aad
mov
insb
mov
jb
adc
or
or
test
dec
lret
xchg
sub
mov
sbb
inc
scas
xor
mov
test
les
mov
int
fildl
push
cmp
mov
lcall
mov
adcb
mov
inc
loop
in
sub
add
lds
in
call
loopne
inc
jbe
sub
fsubl
xchg
cmp
out
shrb
sti
cltd
push
push
movsl
roll
addr16
or
jle
push
subb
rolb
in
sti
or
sub
mov
jp
xchg
jmp
js
and
mov
adc
gs
inc
call
mov
iret
int3
xchg
pcmpeqd
xor
fs
cmp
lds
imul
and
inc
test
int3
jno
push
jmp
iret
leave
dec
out
sbb
xor
add
inc
mov
mov
cltd
test
out
out
push
movsb
ret
xchg
sahf
add
xor
jb
jmp
hlt
out
das
push
lahf
xorl
adc
jp
rol
push
stos
mov
insw
or
into
push
mov
stos
dec
xchg
daa
cmp
sub
adc
dec
fdivrs
dec
aaa
push
pop
loop
dec
pop
ds
or
and
fcompl
fidivrl
mov
ret
dec
xchg
daa
adc
hlt
add
cltd
js
dec
sub
pop
push
bound
xchg
int
movsb
jbe
insl
cmp
loopne
add
movsb
mov
aam
fnstsw
je
icebp
repnz
outsb
xchg
sub
inc
push
outsl
push
fbld
out
push
lock
iret
jns
adc
mulb
push
adc
push
call
nop
fbld
mov
push
or
dec
push
psubd
orb
bnd
movsl
pop
sub
fistl
test
or
pop
cwtl
push
jbe
or
dec
call
jmp
xor
and
movsl
jl
shll
dec
add
mov
inc
mov
dec
ds
mov
pop
jp
dec
push
cmp
loope
add
fiadds
xchg
adc
jne
in
add
adc
pop
ja
dec
xlat
les
dec
popa
jnp
mov
push
out
call
push
ja
sub
push
pop
mull
mov
repz
popa
jle
mov
add
mov
popa
sbb
sub
inc
push
enter
inc
cmp
ret
push
mov
das
adc
jne
pop
test
scas
test
call
test
aaa
dec
and
cmp
dec
sbb
add
mov
jno
xchg
and
xor
mov
fbld
pusha
and
call
aam
scas
pop
adc
pop
mov
out
jge
sub
jno
xchg
mov
pop
outsb
imul
xor
or
imul
jbe
mov
jb
sahf
inc
mov
pop
push
cmc
jnp
scas
repnz
lods
cs
ret
dec
sbb
into
pop
xchg
adc
lea
hlt
outsl
adc
aaa
inc
call
fcmovb
sarl
aas
jl
add
adc
outsb
cmp
jns
mov
push
nop
jnp
ljmp
cmp
sub
add
sbb
push
fistl
pusha
or
insb
bound
adc
xchg
out
mov
popa
adc
mov
dec
mov
cli
or
pop
push
jecxz
sub
sub
or
sbb
sbb
cmp
gs
nop
scas
fdivp
daa
sbb
xor
pop
aaa
push
jge
pushf
mov
enter
sbb
pop
aam
out
or
rol
and
sti
dec
jne
sbb
lret
fstpl
sbb
mov
loope
test
mov
je
stc
xor
xchg
sbb
sbb
push
adc
ret
mov
and
stos
cmpl
fstp
cmpsb
cmp
pop
fistl
cmp
mov
push
inc
push
in
js
dec
jno
cli
jnp
mov
cmc
jnp
xchg
jp
aas
idivl
mov
bnd
fsubl
roll
cvtps2pi
leave
push
rorl
sbb
cwtl
gs
adc
cmp
mov
je
jge
lock
cmpl
scas
stc
cmp
inc
in
imul
jno
repnz
jmp
lcall
sub
pop
ja
jp
push
mov
sbb
xor
call
insb
out
js
lret
mov
xchg
lret
xchg
jo
test
rolb
rcrb
stos
adc
xchg
fldz
push
in
in
outsb
inc
hlt
or
mov
bound
mov
cmp
arpl
cli
incl
leave
aad
sarb
je
inc
fwait
lds
aaa
cld
das
dec
imul
jbe
inc
pop
out
mov
add
sbb
mov
mov
xchg
test
jge
sbb
ja
add
add
add
cld
push
jns
push
and
pusha
xor
xchg
icebp
fstpt
mov
xchg
mov
in
fmuls
les
jb
movsb
test
iret
jo
in
jle
std
shr
push
fsubl
dec
mov
add
push
adc
adc
jbe
fldcw
insb
incb
stc
sub
push
xor
add
movsb
xorb
inc
fucomip
xchg
xorl
dec
pop
or
push
push
sub
mov
scas
sub
ficompl
call
ljmp
sbb
imul
vaddps
or
sti
jno
sub
mov
mov
movsl
cs
inc
cmp
repz
jmp
repz
ficompl
cmp
fldenv
out
adc
mov
jnp
inc
lea
sub
lods
bnd
popf
xchg
push
fidivrl
dec
in
xchg
inc
ljmp
bound
inc
xor
push
sti
jnp
scas
push
xor
cmc
in
mov
in
jb
test
jb
incb
xor
xor
mov
dec
mov
push
rcl
repnz
in
imul
add
test
xchg
ja
lock
outsb
bswap
clc
rcll
push
aas
sub
imul
sub
imul
jb
outsl
popf
sbb
and
adc
xchg
xor
mov
dec
sub
mov
adc
push
jns
adc
or
pop
call
popa
sub
and
inc
or
jecxz
aam
push
pop
into
rclb
jmp
bound
pop
pop
cli
popa
inc
lds
pop
iret
arpl
mov
mov
sahf
outsl
xor
hlt
pushf
pushf
push
pop
fsubp
sbb
leave
push
jecxz
cwtl
inc
inc
jmp
in
out
pop
imul
xorl
std
inc
out
jmp
scas
mov
sub
add
xchg
dec
dec
out
jb
roll
dec
dec
subl
ret
xchg
rclb
mov
pop
in
sub
jl
leave
addb
mov
test
ds
fcomps
sub
xor
jmp
dec
push
push
and
sub
frstor
jl
lar
jne
fistpll
pop
sub
out
fadds
mov
push
mov
cwtl
xchg
test
mov
scas
test
jp
sbb
and
add
lds
lcall
mov
xor
sbb
dec
addr16
jmp
fstps
push
mov
xchg
add
push
loop
fstpl
mov
call
cmpsl
xor
cmc
sbb
cmpsb
jmp
movsb
mov
sbb
dec
loop
xchg
xchg
xor
mov
dec
dec
adc
dec
pushl
jle
ficompl
scas
pop
inc
gs
jo
and
or
push
jb
into
call
cwtl
mov
leave
pushf
cmpsl
fmuls
mov
xor
sub
mov
xchg
loopne
mov
scas
sarl
mul
mov
ja
push
movl
dec
xchg
inc
ss
andl
test
push
jb
es
pop
or
js
in
or
adc
cmp
push
cltd
push
ret
mov
aaa
icebp
xchg
mov
mov
int
cmp
adc
sub
jbe
pop
jbe
sarl
cmpsb
dec
adc
sbb
dec
pop
lods
ljmp
dec
xor
xor
daa
jmp
rcrb
cmp
push
pop
dec
gs
push
daa
and
add
xor
cmc
pop
mov
cwtl
lret
lock
mov
mov
ret
dec
cmp
cmp
ret
pop
or
inc
cmpsl
xchg
rcrb
cmp
adc
pop
inc
or
pushf
sbb
ds
sub
ss
add
adc
sub
xchg
les
sbb
xchg
into
pop
cmp
enter
pop
push
pop
int3
inc
js
jecxz
sbb
jg
test
pusha
and
roll
or
or
adcb
mov
pop
xor
mov
xchg
loopne
addb
test
or
and
cmp
cmp
mov
push
adc
jp
sti
push
sbb
cwtl
xorl
push
test
push
push
xor
stc
inc
jbe
or
inc
mov
pusha
push
int3
mov
enter
mov
cli
lea
sbb
xchg
stos
fmul
mov
add
or
push
movsb
and
and
iret
sub
push
and
mov
sbb
cltd
adc
movsb
xor
test
jmp
icebp
add
pushl
jl
adc
pop
sbb
jb
pop
mov
mov
pop
xor
and
and
adc
jle
popf
dec
rorl
lret
mov
adc
in
cmpsb
imul
lret
adc
push
cmp
shlb
cmp
jle
pop
movsl
ljmp
imul
lcall
addb
push
inc
xchg
outsl
adc
test
mov
cmp
and
push
fsubrs
insb
sub
push
add
shlb
popa
push
and
mov
pop
lods
push
leave
xchg
sahf
lahf
jmp
push
and
enter
mov
jecxz
daa
or
ss
psrlw
jnp
popa
pop
movsl
insb
outsl
lret
or
push
jns
loopne
popf
repnz
sub
gs
jg
dec
sub
mov
mov
push
fistpll
pop
push
xor
cmpsl
or
jbe
add
mov
xlat
rcrl
movsb
rol
xor
jo
xchg
lret
test
stc
movsl
push
shll
xchg
jo
test
scas
jns
outsl
js
iret
shll
mov
cmp
xor
add
insl
jb
jl
sub
js
test
sub
push
call
fnsave
repnz
push
inc
lcall
out
jbe
mov
aas
loopne
xchg
adc
test
dec
loope
push
xchg
iret
mov
addr16
fidivrl
cmp
jecxz
insb
mov
mov
shll
mov
cmpsl
sub
jecxz
dec
or
xor
pushl
pop
daa
mov
xchg
call
mov
pop
inc
filds
pop
lcall
xchg
aas
sahf
aaa
cmp
adc
scas
inc
int3
jae
adc
pop
loope
movzwl
push
test
nop
shll
mov
icebp
pop
rclb
mov
fsubrs
popf
sub
push
push
ja
mov
adc
nop
cmp
jae
addr16
sub
jge
dec
or
pushw
fildl
sbb
pusha
aam
cli
or
fldcw
fwait
les
scas
jmp
out
orl
push
sbb
aad
lret
add
shlb
ficomps
xchg
sti
inc
push
pop
icebp
std
fcmove
test
jmp
dec
punpckhbw
xor
and
sbb
imul
pop
and
cwtl
xor
arpl
pop
dec
mov
cmp
fwait
push
mov
xchg
jle
pop
add
std
in
js
jae
aaa
loopne
pop
dec
mov
out
lahf
sahf
aam
cwtl
inc
test
pop
mov
push
movl
outsb
xchg
push
sub
jecxz
jne
adc
jg
fnstenv
mov
xchg
adc
add
push
xor
xor
fdecstp
dec
pop
mov
jge
xchg
cli
xchg
mov
ror
xor
mov
pop
push
jb
mov
mov
add
leave
movl
in
lcall
pop
jne
sub
mov
cmpsb
imul
jo
adc
nop
mov
out
push
and
test
sbb
cmp
gs
push
ja
insl
iret
addb
mov
stos
shrb
ds
cmpsb
inc
lds
add
or
rclb
je
xchg
add
fldenv
ret
movsb
xor
sbbb
cmovnp
or
jae
pop
push
push
repz
in
test
clc
inc
inc
jge
push
imulb
mov
popw
jge
pop
test
sub
test
pop
sbbl
enter
push
mov
dec
add
or
call
sbb
inc
xor
ljmp
ret
fisubrl
and
clc
cmc
nop
mov
xrelease
mov
jl
xchg
inc
pop
mov
loopne
sbb
fldl
inc
iret
lahf
mov
insb
and
into
and
imul
test
lret
iret
dec
cld
nop
xchg
and
leave
add
mov
jne
push
push
xchg
mov
pop
push
push
enter
iret
push
pusha
lods
sub
xchg
pop
in
bound
adc
pop
popa
jg
mov
sti
pop
popa
lcall
push
cmp
int
cmp
jg
notb
mov
test
lods
xchg
pop
push
les
cmp
ljmp
nop
stc
xor
xchg
dec
out
adc
pop
add
mov
movsl
push
frstor
and
pop
pop
imulb
loope
mov
and
push
fcoms
mov
dec
or
push
push
hlt
ret
mov
test
inc
sbb
andl
fisubl
add
mov
mov
ljmp
leave
mov
or
loopne
bound
fcoms
mov
scas
jge
fstpl
xchg
mov
add
sahf
fldenv
cltd
test
add
enter
adc
pop
shrb
mov
inc
cmpsl
pop
mov
addl
pop
xchg
call
xchg
addr16
mov
test
out
out
fs
add
aam
jbe
push
mov
dec
repz
lcall
sub
js
shrl
rcrb
lret
arpl
jo
fs
mov
mov
mov
cmp
xor
in
jp
sbb
arpl
xchg
test
fists
push
iret
and
std
jle
lea
out
ja
push
shlb
xchg
cltd
je
mov
mov
mov
subb
out
push
xchg
arpl
aam
inc
insb
mov
call
inc
mov
lret
insl
lahf
scas
fwait
pop
mov
cs
add
lret
jnp
cmp
test
push
inc
push
jbe,pt
aaa
add
pop
inc
mov
and
jg
lods
dec
out
sub
sbb
pop
adc
mov
sbb
test
outsl
movsb
repnz
popf
xchg
enter
mov
xor
test
fs
ret
push
mov
outsl
and
lahf
and
xchg
inc
xlat
aaa
loopne
int
pop
idivb
pop
fimull
xor
jge
jmp
jno
cmp
pop
leave
fdivl
jg
movsl
mov
pop
leave
sub
push
jae
roll
out
mov
mov
add
in
popf
push
insb
loope
addr16
pop
xchg
shr
mov
std
in
pop
insl
sbb
lret
scas
push
stos
pusha
cltd
and
pop
mov
inc
in
add
xchg
std
and
imulb
ss
jb
push
or
roll
sub
push
stos
xchg
sahf
mov
jns
mov
mov
ss
dec
shll
add
loope
mov
fmul
sahf
popa
pop
pop
push
and
dec
cmp
jbe
jmp
jnp
mov
sub
mov
lea
repz
jbe
arpl
mov
xchg
dec
loopne
aas
xor
add
pop
es
inc
and
adc
xchg
or
and
push
mov
dec
jge
inc
xor
cli
les
dec
lahf
outsl
mov
insb
shlb
mov
sub
ds
push
mov
push
inc
push
mov
lods
lds
mov
mov
outsl
into
sub
daa
imul
sbb
sub
sbb
popf
xchg
clc
push
dec
mov
lds
push
ljmp
mov
xor
push
inc
stc
fucomi
jbe
andl
mov
xchg
fistpll
lret
or
cwtl
mov
jl
mov
add
and
ret
nop
push
xchg
inc
pop
call
mov
and
outsb
xor
xorb
stos
in
call
cmpsb
adc
dec
in
mov
jbe
xchg
pop
jecxz
fnstcw
lea
shll
push
push
lcall
addb
int
and
lock
pusha
xchg
lods
jnp
inc
inc
sub
rclb
lea
cmp
subl
hlt
repnz
cmp
dec
aaa
test
int3
loope
imulb
int
cmpsl
test
cmp
scas
enter
lods
xor
cmp
jl
rcrb
pop
enter
lods
repz
ret
jbe
mov
add
mov
adc
lds
pcmpgtd
or
jb
or
jg
xchg
movb
adc
nop
or
dec
adc
test
cmp
data16
and
xchg
fsubs
mov
fidivl
loopne
xor
lret
aaa
ds
cld
xlat
inc
hlt
mov
pop
mov
dec
mov
test
jecxz
mov
pusha
jecxz
mov
jle
outsl
sbb
andl
jno
xlat
addb
dec
push
cwtl
addr16
rorl
arpl
into
add
cld
dec
cmp
fwait
jle
clc
pushf
popf
and
inc
mov
pushf
mov
rorl
add
xor
jmp
pushf
xchg
int3
pusha
outsb
pusha
mov
mov
mov
jp
popa
cwtl
in
outsb
or
hlt
xchg
xor
xchg
gs
cmp
lods
push
push
jae
fcmovb
ret
dec
shrb
aad
jae
cmc
pop
les
outsb
dec
pop
ret
dec
call
push
inc
or
dec
sbb
mov
icebp
jmp
popf
mov
push
adc
inc
into
cmp
sbb
shlb
imul
lret
lahf
std
jecxz
out
lcall
out
fldcw
push
push
aaa
cwtl
leave
push
sarl
icebp
shr
pop
or
rclb
clc
mov
adc
test
lds
pop
das
sub
mov
clc
aaa
cltd
rclb
inc
bound
cwtl
sarl
jge
push
mov
ficomps
pop
sub
mov
fs
sbb
hlt
jmp
mov
cld
cli
sub
jae
mov
fsub
fidivrs
pop
xor
dec
cmp
into
nop
jb
mov
mov
je
pushf
pop
add
std
inc
rcl
add
xchg
jns
push
frstor
sub
lea
mov
jecxz
cs
mov
or
or
int
xchg
mov
pop
inc
mov
lods
dec
push
push
or
stc
fpatan
mull
sbb
das
xor
cmc
es
mov
xchg
lret
adc
cwtl
addb
popf
lahf
jbe
mov
es
push
mov
int3
mov
push
repz
adc
lods
out
cmc
pushf
decb
fsubl
add
fidivl
push
push
inc
in
mov
rol
xor
mov
sbb
js
push
mov
rcrb
cli
adc
sti
adc
push
in
push
cmp
aam
fisubs
fstpl
cmpb
and
shlb
scas
leave
flds
sub
cmp
in
pop
fisubl
dec
mov
jo
fidivl
or
cmp
cli
adc
icebp
icebp
cmpb
dec
xchg
adc
ds
jae
scas
mov
inc
xchg
mov
add
repz
jno
dec
push
inc
xchg
xchg
dec
jne
jno
add
cmpsb
pushf
ja
lret
int3
scas
lea
inc
sbbl
jne
pop
pop
dec
mov
test
loope
mov
addr16
add
or
fdivrs
mov
roll
icebp
dec
nop
jp
lcall
mov
sub
xchg
inc
xchg
cld
lret
dec
and
sub
pop
sti
out
out
sub
arpl
mov
sub
jle
cmpsb
cs
jae
xchg
loope
push
in
sti
dec
jp
jle
pop
add
iret
clc
mov
dec
push
dec
sub
cmp
and
lock
pop
push
ret
lahf
fbld
sbb
cld
pushf
xor
in
mov
stos
and
xchg
cmp
mov
dec
rorl
lock
inc
ret
adc
ja
sar
inc
dec
cmp
aam
fmuls
mov
insl
inc
and
or
lret
hlt
in
mov
xchg
push
aad
mov
dec
inc
mov
pop
in
ret
add
mov
jo
movsl
imul
add
push
loopne
icebp
scas
adc
movsb
aad
pop
and
jno
adc
in
mov
push
repz
dec
sbb
jg
in
and
sbb
das
push
jo
jle
jo
jge
fucomi
je
outsl
into
into
fwait
in
inc
adc
add
jmp
push
pushf
mov
xchg
adc
inc
push
ficompl
add
or
pop
insl
shlb
shl
dec
faddl
ja
aaa
and
inc
pop
popf
lahf
pop
imul
ficoms
push
add
mov
xor
jns
xchg
loop
mov
sahf
sub
xchg
mov
out
arpl
dec
mov
outsb
hlt
cmpsl
lea
or
mov
addr16
pop
les
cmpsb
inc
in
movsb
cmp
cmpsb
pop
les
jmp
daa
jae
loop
mov
push
pop
stos
je
sbbl
and
inc
add
mov
dec
int
mov
lret
jo
stos
sbb
test
fs
add
fwait
jno
rcrb
mov
lret
enter
xor
gs
mov
adc
stos
mov
imul
out
mov
lods
repz
arpl
mov
inc
jo
push
stos
ret
into
cmp
mov
push
mov
pop
cli
dec
aaa
shll
pop
jne
jmp
arpl
xchg
and
into
iret
daa
add
sbb
or
xor
mov
out
flds
sbb
test
lea
dec
frstor
data16
inc
xchg
jge
cmpsb
lret
es
call
or
bound
call
ds
dec
enter
rcl
dec
rol
sub
inc
adc
js
loopne
stos
sub
ja
andl
stos
int3
and
push
into
sub
lds
lret
adc
std
or
rclb
cli
clc
sbb
add
and
aas
mov
inc
and
icebp
sahf
bound
cmp
scas
mov
sub
xor
pusha
insl
rorb
inc
lods
pop
iret
cwtl
lret
movsl
xor
fs
fldenv
xor
in
sbb
and
push
xchg
mov
gs
adcb
mov
or
mov
xchg
and
add
xor
pop
cmp
cmp
and
rol
push
sub
push
scas
pushf
addb
lahf
inc
jmp
clc
faddp
sbb
xchg
jne
pop
adc
mov
dec
mov
sub
mov
pop
rcrb
mov
xor
nop
push
sbb
pop
pop
icebp
xchg
in
pop
or
in
and
scas
cmp
out
test
fwait
sub
inc
mov
jne
xchg
sub
jge
loope
sbb
ficoms
shrl
dec
cmp
pop
sub
insl
cmpsl
add
xor
xchg
mov
xor
xchg
ret
jmp
mov
imul
mov
movsl
sbb
fisubs
sbb
sbb
test
shl
dec
mov
addr16
xchg
mov
sahf
iret
loop
mov
mov
std
data16
cmpsb
pushw
call
mov
in
fs
repz
ret
xor
jne
jge
sub
inc
jecxz
mov
pop
rorb
into
std
jne
adc
or
dec
call
mov
add
xchg
adc
push
sbb
mov
mov
fucom
push
sbb
cmp
jno
inc
inc
jle
js
xchg
xchg
cli
pop
mov
sub
aad
sbb
cli
jle
cmp
push
data16
ss
cmp
cmp
dec
sub
pop
test
je
ljmp
add
sbb
dec
and
and
mov
daa
mov
into
mov
mov
add
ret
incb
adc
das
shrb
imul
das
in
sbb
in
dec
outsb
jle
jne
mov
jo
pop
sbb
sub
add
and
sbb
fcmovbe
je
test
loope
mov
mov
mov
push
ljmp
inc
fwait
cmp
subl
mov
dec
scas
jp
lret
mov
or
push
fsubs
mov
hlt
adc
adc
mov
arpl
and
mov
pop
hlt
insb
inc
sti
sbbb
sbb
outsl
mov
sbb
sbb
mov
dec
push
adc
out
pop
xor
pop
pop
jle
or
inc
lods
xor
int3
jl
fs
insb
sub
jp
inc
push
xor
pop
add
jg
sub
xor
clc
inc
and
movsb
mov
cld
out
pusha
and
in
mov
push
xchg
xrelease
mov
mov
cmp
lahf
jno
fidivrl
mov
and
jns
lods
fldcw
inc
test
sub
jle
dec
inc
or
jno
mov
xchg
jle
mov
mov
out
or
rcl
push
and
cmp
mov
mov
xor
dec
outsb
sub
sbb
push
mov
mov
lea
sbb
dec
dec
pop
daa
sbb
cmp
ss
ret
bound
stos
dec
movsl
imul
idivb
mov
xor
cltd
or
add
push
or
ret
mov
sbb
jge
popa
ror
sarb
data16
imul
stc
mov
pop
adc
sbb
bound
cmc
jbe
cmp
sahf
gs
or
push
push
dec
push
pop
xor
jmp
sahf
test
jno
add
push
or
pushf
sub
mov
test
and
sbb
je
add
fistl
into
scas
sarl
pop
xchg
xchg
pusha
xchg
lea
popf
fadd
lret
shl
scas
jle
adc
jl
dec
aaa
push
pop
jp
cli
rclb
test
loopne
popf
xchg
lds
ret
pusha
or
fs
cli
push
dec
xchg
int
js
mov
mov
int3
pand
and
add
mov
sub
cmpsl
imul
or
cmp
dec
jecxz
gs
push
mov
add
out
inc
mov
mov
add
sub
mov
addr16
popa
ret
lcall
pop
add
lea
sbb
out
xchg
pop
and
dec
sub
std
int3
mov
mov
scas
das
mov
out
pop
xor
imul
adc
flds
lret
sbb
lea
dec
fcoml
mov
jb
sub
popf
add
mov
cmpb
cmpsl
mov
sbb
movsb
out
insb
jg
push
popf
inc
inc
sub
pop
and
jp
sub
cmp
shlb
jp
in
clc
aas
pop
loop
and
pop
insl
out
rolb
mov
sbb
mov
jmp
test
mov
outsl
rcr
lret
and
popl
or
cli
dec
out
push
mov
mov
jl
in
loope
dec
pop
jmp
xchg
mov
mov
mov
mov
ds
xchg
cmc
xchg
aaa
add
dec
int
stc
and
insl
cmp
dec
cld
lcall
adc
shlb
loop
inc
daa
sbb
xchg
dec
mov
mov
incl
dec
jne
push
test
adc
test
sub
and
bound
inc
cmc
push
fadds
inc
call
pop
and
lods
pop
cmc
inc
in
mov
repz
mov
adc
movsl
test
mov
or
subl
ja
rolb
jg
cmp
test
ja
aas
xchg
mov
std
mov
jnp
repnz
cli
push
scas
xor
push
inc
jle
adc
add
pop
pop
cmpl
rcl
mov
adc
mov
lahf
push
ret
dec
cmp
add
adc
adc
mov
shll
aad
sub
insl
fidivrl
add
cmc
push
leave
dec
pusha
sti
jns
int
in
inc
loope
mov
or
adc
and
out
das
and
shlb
pop
popf
call
mov
jae
mov
test
adc
leave
inc
push
insb
or
outsl
gs
or
cltd
cmpxchg
push
std
rcl
nop
movsb
pop
rcll
sbb
fmul
mov
fldt
adc
xchg
mov
cwtl
sbbb
pop
xor
popa
push
cli
js
jmp
sbb
cmpsl
lods
sahf
sahf
xchg
ret
push
or
or
sub
mov
nop
dec
xor
jbe
dec
or
dec
mov
je
xor
xchg
cs
sti
inc
in
data16
dec
and
aas
cld
push
and
xor
xchg
jno
push
lods
cmp
dec
inc
decl
pop
push
jg
fwait
inc
adc
pop
vmread
add
in
icebp
hlt
pop
cmp
pop
push
xchg
cs
push
sti
add
sub
xchg
add
in
and
sbb
sbb
leave
lods
add
sub
ss
std
dec
sahf
fwait
jl
testb
and
pop
sbb
out
pop
in
sub
xlat
fucomip
sub
mov
fwait
sub
jb
push
dec
neg
fnstcw
dec
cmp
fisubs
lahf
or
jle
mov
jle
jl
lds
sub
inc
addr16
movl
add
mov
xchg
imul
adc
push
mov
pushf
imul
aas
aad
jmp
loop
lods
scas
rorb
outsb
pop
dec
jmp
and
jg
jg
add
cltd
ja
fstpt
mov
std
inc
shll
push
pop
adc
insl
outsb
ljmp
lret
jns
fcompl
push
scas
and
push
cmpsb
dec
mov
mov
add
popa
pop
sahf
lret
xchg
clc
hlt
dec
stos
in
or
and
or
or
or
cmp
jno
les
jg
xor
xchg
sbb
pop
daa
movsl
leave
lret
outsl
rcr
push
adc
fmul
pop
fdiv
and
mov
jnp
sbb
hlt
adc
popa
inc
mov
fmull
lods
or
dec
push
push
fwait
pop
add
mov
or
pop
loop
jmp
pop
loop
lods
jl
pushf
gs
mov
adc
test
imul
addr16
lcall
sub
enter
popa
je
jbe
cli
inc
movsl
mov
stos
shl
mov
inc
ljmp
lds
cs
lahf
lds
xlat
mov
or
filds
test
lret
cs
rorb
xchg
push
andl
cmp
cmp
xor
out
jnp
and
push
push
insb
enter
sbb
push
sarl
loop
ret
daa
out
in
ja
les
mov
scas
xor
or
mov
cmpl
into
test
add
in
das
mov
loopne
push
mov
push
pusha
inc
lods
les
insb
add
cmpsb
aas
mov
gs
scas
cmp
or
rclb
xchg
rclb
cmp
pop
inc
jge
jno
jno
cmpsl
cli
xchg
xor
pop
pop
mov
sbb
out
and
adc
mov
mov
scas
addr16
cmp
scas
lods
enter
js
repz
loope
cmp
loopne
sbb
jg
pop
inc
sbb
ljmp
test
xchg
mov
dec
push
hlt
mov
out
or
in
pop
rorl
lea
lea
xchg
cmpsb
pop
or
adc
hlt
cs
test
xor
inc
mov
cmc
mov
fidivrs
sub
int3
mov
faddp
inc
iret
mov
add
icebp
or
pushf
xlat
testb
jne
dec
in
sbb
scas
mov
movsl
mov
inc
in
gs
lods
dec
icebp
push
cli
jp
add
out
aad
fisubrl
pop
sbb
stos
or
in
mov
call
and
es
jae
xor
not
cmp
mov
in
movsl
enter
aam
jo
imul
rcl
push
jg
fdivl
mov
sbb
sub
dec
mov
scas
or
lret
jg
push
js
ss
into
mov
cmpsb
in
std
ds
cmp
repnz
cmc
sbb
jle
or
std
xor
add
sbb
xor
mov
sbb
sub
ss
xchg
in
mov
call
mov
push
or
mov
in
movsl
and
add
aad
push
push
cmpsl
sbb
in
cmp
jp
push
cmp
add
fwait
sbbb
dec
adc
adc
inc
shlb
xchg
cld
lods
loop
dec
push
icebp
push
bound
sbb
or
aas
or
xchg
je
cmp
and
and
inc
je
xor
mov
popf
adc
bound
push
lea
or
mov
jp
insl
iret
mov
orb
xor
scas
or
lea
rcr
lret
xchg
jns
out
stc
jmp
jne
vpunpcklbw
scas
ret
jge
xlat
pop
fucomi
xchg
aaa
lds
arpl
cs
int
push
lea
cmpsb
pop
les
testl
mov
dec
mov
xor
mov
subl
test
mov
lea
mov
adc
cmp
jb
cltd
int3
jge
xchg
or
push
icebp
cmpsl
jne
mov
jp
into
int3
pop
push
inc
ljmp
push
xchg
push
xor
jmp
fsubrs
xchg
fwait
dec
mov
push
movb
push
nop
in
dec
push
and
sahf
mov
movsl
movsl
cmpsl
inc
jl
test
pop
nop
inc
sub
out
inc
stos
sub
int
dec
push
adc
es
push
loopne
jbe
mov
cli
pop
mov
mov
cmp
push
test
fnstsw
out
sbb
loope
adcl
mov
movsl
mov
imul
xor
jb
int3
xchg
dec
adcb
and
pop
xchg
mov
jno
xor
testb
hlt
push
and
push
pop
push
repnz
add
or
clc
in
daa
mov
mov
mov
inc
mov
or
gs
mov
cmp
sbb
lahf
popf
fcompl
daa
sahf
fiadds
add
outsb
ljmp
add
das
pusha
fiadds
out
or
bound
cltd
movsb
xchg
inc
out
pop
push
jns
pop
xchg
enter
jno
xlat
mov
jne
pop
insl
jne
shll
xor
or
inc
outsl
push
andb
hlt
jno
aas
fcoms
jl
in
mov
jns
sub
iret
push
scas
setl
push
adc
inc
aaa
or
or
mov
or
mov
cltd
je
dec
xchg
mov
inc
pop
popa
jp
and
ss
mov
maxps
scas
pop
sbb
cli
fnsave
push
pop
sbb
pop
fcomi
add
fcmovb
push
dec
test
jl
aas
call
cwtl
orb
and
jb
ret
and
lea
inc
test
lret
xchg
scas
jle
jno
mov
movsb
mov
sub
les
jne
sti
mov
ret
fmul
add
fsubrp
cmpsl
pusha
mov
daa
and
mov
lahf
scas
pop
inc
xchg
sub
adc
mov
js
xchg
stc
pop
inc
stc
gs
std
xor
or
fadd
loopne
mov
dec
out
cmp
mov
pop
pop
subl
inc
cmpsl
int3
fidivrs
test
sbb
ljmp
push
ret
xchg
in
leave
imul
cmc
rcll
fisttps
and
fistl
inc
xchg
pop
or
mov
popa
dec
fnsetpm(287
sbb
fldt
inc
mov
push
mov
cmp
nop
jne
stos
lret
mov
aad
mov
ds
and
repz
cmp
das
je
adc
lret
outsl
int
enter
into
test
mov
lret
dec
cmp
dec
mov
sar
push
sub
in
sub
dec
pop
add
int3
repz
mov
push
popf
mov
mov
sub
add
pop
ret
mov
cmp
push
push
xchg
jns
mov
outsl
lds
push
addb
repnz
lret
xchg
dec
mull
xchg
push
ficomps
cli
cmp
jne
ss
movsbl
out
pop
fwait
in
xlat
lea
jmp
push
fxch
pop
jb
movsb
insb
js
hlt
or
ljmp
push
mov
cmc
data16
mov
xor
and
in
and
ljmp
les
xchg
and
movsl
xchg
ds
jle
andb
sub
dec
stc
mov
push
minps
add
ret
not
lret
test
inc
add
mov
push
xor
into
test
push
add
fsubs
push
jbe
nop
repnz
idivb
sub
aam
inc
or
inc
or
out
add
imul
jle
xchg
and
mov
mov
xor
xchg
jo
sub
loop
test
jb
and
orl
jo
sbb
cmp
iret
push
insb
in
mov
adc
sbbl
inc
imul
xor
dec
outsl
aas
rcrl
std
aad
bound
loope
mov
mov
lcall
push
fidivl
test
push
mov
push
add
not
das
inc
fdivs
sbbl
movsl
ret
ljmp
or
mov
ljmp
sbb
push
mov
cmp
jge
enter
clc
jle
scas
pop
jg
data16
mov
fwait
movsl
xchg
cmp
mov
dec
pop
xor
sahf
loope
fidivrs
sub
mov
cmp
xchg
test
and
aaa
movl
and
dec
pmaddwd
push
mov
fiaddl
mov
and
mov
push
adc
cmp
push
jge
test
pop
les
jmp
fs
push
jge
add
sbb
and
or
gs
iret
imul
or
test
push
rorl
or
push
adc
loope
in
in
dec
mov
mov
les
lods
add
daa
mov
lods
adc
fwait
push
iret
xchg
insl
or
repz
outsb
rorl
lods
jne
out
inc
loop
loopne,pn
cltd
push
ret
pop
push
cmc
mov
je
inc
cmpsl
shl
insb
in
cmp
inc
mov
jns
repnz
jecxz
sub
je
mov
out
dec
lds
pop
push
mov
push
xchg
mov
aam
pop
arpl
pop
push
mov
das
outsb
scas
push
mov
ret
aas
mov
xor
je
jge
jmp
cmpsb
out
xor
add
inc
sub
or
ja
push
sbb
insb
jno
icebp
mov
shrl
xlat
xchg
divb
test
sub
adc
lret
loope
mov
jmp
loope
push
sub
jbe
dec
jnp
xchg
push
cmpsb
lret
mov
call
adc
mov
fwait
jecxz
sahf
jmp
push
rorb
shl
dec
arpl
aad
scas
xor
mov
repnz
inc
loopne
shl
leave
cmp
data16
dec
add
xorb
pop
cmp
ds
jne
xchg
jg
int
xor
imul
xor
cmpsl
mov
mov
inc
jg
es
push
or
add
sbb
and
orb
mov
xchg
dec
mov
push
sbb
jbe
test
sub
or
sarb
loope
push
enter
xorb
add
xchg
push
push
push
mov
sbb
add
ret
repnz
adc
fcmovb
adc
cld
in
push
int3
xchg
incl
xchg
push
loopne
adcb
push
sbb
popa
addl
jbe
sbb
xchg
les
lret
bound
pop
test
cmp
jbe
gs
mov
add
iret
xchg
out
inc
ret
pop
lahf
cld
lea
and
pop
mov
jo
adc
mov
xchg
mov
call
sbb
testb
in
inc
cmp
es
js
mov
mov
push
shll
in
repnz
xchg
push
jbe
aaa
movsb
jge
call
sub
pop
rclb
dec
cwtl
fwait
dec
cmpb
xor
jns
sub
or
or
arpl
cltd
test
sub
daa
fldt
faddl
xchg
sub
or
pop
gs
sub
add
test
push
push
outsl
dec
mov
gs
stos
push
mov
cmp
inc
mov
mov
lock
inc
int
push
mov
mov
pop
cs
add
adc
cmc
xchg
inc
idivb
sub
pop
dec
sub
xor
sarl
in
push
pop
fcmovnu
xorl
aas
mov
popf
add
cli
jno
dec
jecxz
adc
push
outsl
jg
mov
pushf
sahf
shll
movsl
iret
or
cwtl
mov
andb
daa
je
ret
fwait
jg
es
add
popa
and
aas
ss
out
and
int3
sahf
add
hlt
lods
mov
fmuls
dec
pop
fwait
sbb
sbb
ss
int
mov
or
lds
je
jne
sbb
sbb
loope
adc
sbb
mov
xor
cmp
aam
cmp
scas
jge
fs
mov
cmp
in
mov
sub
repnz
stos
adc
leave
sub
pop
hlt
js
int3
jno
lea
scas
adc
popa
sbb
pop
pop
xchg
push
data16
inc
cmc
cs
push
mov
aad
jnp
sub
sub
adc
mov
movsb
mov
cmp
pop
cmp
adc
mov
fidivl
in
mov
std
inc
sbbb
lahf
cwtl
cmp
inc
adc
mov
push
aas
jmp
popa
pushf
xor
mov
enter
xchg
jbe
push
hlt
cmpsl
adc
mov
jne
mov
jecxz
andl
inc
pop
dec
xchg
xor
hlt
sahf
cmp
add
dec
test
stos
stc
cmpsl
leave
pop
inc
les
fstpt
dec
outsl
inc
test
xor
lock
addr16
lahf
jge
and
stos
xor
ficoml
out
mov
xchg
mov
pop
or
bound
sahf
mov
and
dec
pop
mov
sub
lods
into
repnz
mov
jno
adc
or
mov
notb
insl
inc
dec
and
adc
leave
or
pop
cmpsl
lea
and
lret
mov
mov
jmp
cltd
repz
cmp
in
mov
shld
xchg
push
mov
xor
popa
pushf
addr16
dec
cmp
add
in
data16
insb
push
pop
inc
add
cmpsl
mov
shl
xchg
orb
inc
call
stc
lahf
arpl
shl
hlt
arpl
cmc
scas
push
mov
lea
cld
loop
fs
out
xor
addl
jns
pushf
out
stos
sbb
movsb
fdivrl
xchg
bound
adc
repz
xor
adc
mov
or
lock
cmp
pushf
add
pushf
or
jg
clc
out
es
and
cmp
cmp
inc
sbb
lock
sbb
sbb
rcll
out
rolb
in
jns
ss
add
mov
pop
jl
sub
or
arpl
popl
and
repnz
fstpt
stos
push
rcl
insl
push
fucom
imul
rcrl
out
test
cmp
mov
sbb
and
lea
lods
xchg
dec
push
std
test
testb
pop
add
inc
icebp
and
add
and
cwtl
ja
mov
xchg
rolb
jno
out
popa
icebp
xor
push
push
aas
mov
pop
inc
sbb
int
sub
call
sahf
push
adc
cmp
int3
arpl
mov
push
bound
add
mov
pop
xchg
jo
sahf
sub
xchg
push
lcall
mov
jecxz
cmpsb
pop
and
mov
pop
add
jbe
fs
int
aaa
mov
jne
and
inc
cld
mov
push
push
jae
push
lock
dec
insl
adc
xchg
xchg
outsl
repnz
inc
adc
add
dec
cmp
stos
in
pop
xchg
jbe
adcl
icebp
push
shll
inc
add
add
movsl
mov
and
sahf
pop
adc
in
fisubrl
shlb
mov
cmp
fistpll
scas
sbb
pop
es
inc
mov
jecxz
sbb
outsl
adc
mov
mov
popf
add
fwait
andl
es
aaa
fbld
add
lock
cli
pop
out
inc
pop
mov
aam
pop
movsl
aam
or
jae
xchg
enter
sub
mov
dec
inc
hlt
les
xchg
rorl
ljmp
testl
test
outsb
cmpsb
xor
jo
std
es
pop
sbb
push
cwtl
jb
adc
sbb
frstor
andb
cmp
jb
js
repnz
cs
push
jnp
scas
adc
adc
sub
stc
xlat
inc
sbb
mov
pop
add
mov
mov
stc
dec
xor
fwait
push
adc
mov
fsubrp
fwait
cld
ret
jl
bound
jbe
mov
movsb
pop
dec
dec
addl
lods
imul
xor
push
mov
mov
push
jle
gs
mov
and
mov
pop
push
jmp
leave
int
mov
mov
jle
andl
sbb
jns
jbe
ss
jl
mov
int
lea
jb
jmp
mov
cmp
pop
lods
arpl
and
xchg
imul
ja
lock
mov
hlt
fs
cmp
lock
js
lahf
push
shl
xor
shrb
pop
out
sub
scas
mov
ret
add
hlt
push
sub
pop
jle
negb
mov
or
jb
outsb
add
ja
pop
and
push
jl
loope
add
xor
cmp
push
repnz
dec
mov
cmp
test
sbb
xchg
jmp
mov
sub
das
loopne
push
ret
inc
loopne
inc
mov
bts
ss
push
add
in
push
xor
stc
hlt
out
insb
dec
fwait
xchg
pop
mov
pop
imul
jmp
mov
mov
inc
rclb
fnstcw
mov
jge
in
pop
ret
cmp
jne
jo
outsb
imul
xchg
sbb
inc
cmpsl
out
mov
pop
mov
jbe
jno
out
xchg
xor
mov
lea
faddp
add
enter
cs
cmp
xor
cmp
xor
adc
adc
decb
jecxz
or
sub
in
aam
addr16
in
movsb
mov
push
mov
outsb
mov
rcl
movsl
sub
nop
cltd
cmpsl
in
cmc
testl
fwait
adc
xchg
gs
test
pop
enter
mov
sbb
imul
cmpsb
xor
fldl
or
jecxz
push
ds
inc
mov
out
dec
xor
push
mov
sarb
mov
aaa
cmp
sahf
das
lret
pop
add
and
mulb
sub
data16
jns
inc
mov
and
repz
sti
fisubl
bound
mov
and
cmp
sub
push
fldcw
test
insl
lock
out
repnz
test
push
mull
and
pop
jnp
mov
jb
xchg
inc
add
mov
mov
push
add
push
xchg
inc
fistpll
pop
sub
dec
mov
scas
sahf
xchg
dec
jl
mov
fisubrs
int
fcoml
cmpsl
mov
pop
mov
stos
dec
or
addr16
lods
and
loopne
je
sub
cld
je
or
getsec
xchg
insb
pop
fmuls
xor
push
aas
and
pop
test
push
jl
cmp
loope
hlt
xor
cmp
mov
pop
test
stos
aas
mov
inc
adcb
mov
data16
sbb
cmpsl
fisttpll
stc
and
arpl
pusha
insb
mov
shrd
mov
push
xchg
mov
ret
adc
jle
loopne
popl
stc
ljmp
imul
add
push
call
call
mov
xor
push
jns
int3
mov
cltd
ja
dec
xchg
or
notb
lret
jb
lods
test
ss
test
dec
sub
cmpsb
aaa
repnz
aam
xchg
movsb
out
ljmp
test
pop
repnz
loop
pop
push
insl
inc
jns
ret
dec
xor
int
pop
loope
mov
arpl
fsubrl
xor
lcall
sbb
jl
and
loopne
pop
js,pn
enter
dec
inc
mov
jmp
fimull
mov
fisubrs
es
sahf
mov
xchg
jecxz
pop
dec
cwtl
insl
or
pop
outsb
leave
lock
push
ljmp
add
dec
arpl
push
int3
repnz
dec
push
xchg
bound
sbb
adc
add
sbb
pop
fadd
ljmp
mov
sub
mov
loope
sbb
insb
fldt
push
sbb
mov
jge
jno
repnz
nop
bswap
ret
adc
sarb
dec
sub
ljmp
and
push
into
xlat
xchg
inc
leave
xchg
jle
mov
jno
add
aad
test
ds
dec
hlt
fsubrl
pop
lret
mov
movsl
rclb
nop
xchg
mov
adc
cmc
mov
mulb
addl
xchg
cmp
and
insl
xchg
adc
mov
mov
sar
push
or
pop
lret
lods
stos
jmp
adc
les
add
pushf
inc
xchg
int
jno
imul
ficompl
shl
stc
xor
daa
jbe
mov
out
sub
jno
daa
pushf
jmp
sub
push
add
or
xor
and
mov
dec
xor
out
lods
decl
iret
jbe
into
adc
orl
xchg
jmp
addb
jecxz
or
int
ficompl
rcll
daa
add
stc
arpl
mov
push
cli
jecxz
addr16
sbb
xor
dec
pop
int3
js
sub
inc
pop
jnp
imul
mov
add
or
dec
pop
out
ja
popa
scas
adc
inc
push
push
xor
gs
dec
jbe
mov
out
leave
mov
test
mov
int
add
jp
popf
jge
push
jg
mov
repz
jno
mov
cmp
mov
and
or
les
pushf
mov
sbb
cmp
inc
adc
dec
jmp
js
std
jns
cmp
sbb
fs
jnp
inc
adc
mov
dec
xchg
dec
lret
push
cmp
fldenv
dec
loopne
stc
xchg
sti
sbb
rorb
adc
or
mov
fistpl
aam
lods
mov
test
cld
sahf
xlat
stc
add
lea
jp
cmp
inc
xchg
ja
xlat
xlat
sti
mov
inc
cmpsl
je
les
js
mov
inc
iret
pminsw
cwtl
mov
loop
icebp
mov
repnz
inc
repnz
pop
fmulp
xchg
hlt
mov
fcmovnu
icebp
call
and
ret
mov
push
and
mov
inc
test
jmp
pop
xchg
pop
loope
mov
cmp
mov
ret
insl
jo
ret
cmc
mov
rcrl
push
int3
ds
inc
xchg
scas
sub
outsb
fs
sarb
jne
nop
ja
in
inc
imul
xchg
jecxz
push
adc
cmpsb
add
je
dec
data16
push
lds
dec
jno
lcall
repnz
mov
scas
mov
xchg
das
pop
adc
jb
mov
imul
stos
or
add
push
stc
stos
xor
cld
stos
shr
shl
xorl
lds
test
sbb
inc
popa
mov
scas
and
sahf
ret
adc
lds
jns
add
subl
call
push
mov
cmp
fwait
push
jbe
dec
scas
out
dec
lret
dec
enter
jb
aas
xchg
inc
mov
xchg
mov
enter
jecxz
push
loope
daa
push
scas
call
sub
pusha
cli
out
std
insl
nop
xchg
icebp
xor
les
inc
mov
jnp
popf
xchg
cltd
inc
int3
xchg
sub
sbb
add
mov
cltd
pop
out
sahf
mov
lds
in
dec
and
pop
imull
scas
fs
push
jecxz
fcompl
add
arpl
cmpsb
sbb
jmp
mov
jae
xchg
xchg
loopne
add
xchg
adc
dec
scas
lea
mov
gs
rorb
ret
sub
push
mov
mov
imul
dec
in
outsb
out
out
pop
cmc
add
call
inc
add
nop
adc
xchg
stc
loope
mov
push
iret
mov
leave
dec
mov
into
sub
cmp
ror
xchg
mov
shrb
pop
ss
in
cmp
mov
sar
cmp
cmp
push
in
mov
lahf
repnz
iret
xchg
sbb
loope
push
add
lret
mov
rclb
cltd
lcall
daa
dec
lret
xor
sbb
push
shr
pop
loopne
add
fs
or
or
xor
sbb
lcall
insl
sub
or
arpl
fcompl
out
outsl
lahf
mov
dec
shrl
mov
inc
dec
jne
ja
xchg
scas
xchg
fwait
inc
iret
xor
inc
cwtd
jmp
xchg
aas
test
outsb
and
cli
fwait
mov
out
pop
xor
ss
jle
add
add
or
je
push
dec
sahf
ljmp
xor
sub
stc
scas
test
jle
dec
idivb
scas
mov
int3
pop
xchg
pop
cmp
outsl
xchg
adc
sub
push
shrl
subb
out
ljmp
scas
cwtl
add
rorl
add
es
cld
inc
fisttpl
sub
fsubs
jl
popa
loope
xor
sub
es
hlt
mov
pop
movsb
jmp
push
sub
stos
movsl
mov
mov
mov
mov
mov
mov
out
dec
and
sbb
cmp
into
popa
pop
stos
add
pop
aas
sbb
int
pop
push
insb
adc
mov
fildl
scas
xor
fsub
mov
repnz
mov
cmpsl
cwtl
rcr
ret
pop
jl
ja
out
test
push
mov
insb
inc
loop
imul
push
push
popf
ljmp
inc
mov
lret
ficoms
cmc
sbb
into
sbb
mov
rcrb
xor
cmp
jge
jnp
inc
repnz
pop
cmpsb
in
leave
iret
arpl
dec
xchg
mov
int
mov
int3
sub
popf
xor
pop
cmp
pop
jge
jl
rcll
dec
ljmp
sahf
test
cmpsl
or
cld
rorl
jmp
pop
into
cmp
in
mov
or
pop
scas
push
pop
pushf
inc
sahf
mov
ficoml
test
sub
stc
cmp
outsl
sbb
lods
sub
jb
inc
jb
das
add
movsb
mov
mov
mov
xor
mov
sub
pcmpgtd
adc
or
leave
test
imul
inc
sub
es
sbb
push
aas
mov
hlt
sbb
pop
movsb
pop
pushf
nop
in
jo
pop
xchg
pop
add
fdivrp
or
jmp
sub
adc
jno
in
leave
loop
cmp
jecxz
adc
xor
fidivrs
movsl
and
insl
mov
and
daa
test
dec
popf
or
aaa
pop
pop
into
cmpsb
xlat
xchg
jmp
into
mov
adc
sub
xchg
fldcw
mov
inc
jae
test
pop
xchg
and
fmul
add
shll
rcrb
cmp
leave
es
sbb
aam
insl
enter
and
cmp
clc
dec
hlt
sub
mov
xorb
xor
sub
aam
cmp
jge
xor
roll
sbb
mov
fwait
aas
and
pop
mov
add
popl
push
stc
orb
add
or
movsb
je
jbe
xor
sbb
cmp
xor
sbb
sbb
adc
rorl
out
fs
push
js
pusha
push
jp
sub
xchg
inc
mov
cmp
or
insb
in
push
cmp
cmpsl
fstpt
negb
or
popa
sub
mov
hlt
mov
lcall
or
jae
sti
dec
mov
push
es
loopne
mov
push
pop
push
mov
test
fbstp
mov
cmp
dec
int
in
xor
shrl
mov
cld
lds
mov
lea
into
pop
mov
clc
cmp
cs
fstps
sub
iret
push
sub
dec
mov
xchg
cmp
push
cmpsb
mov
into
aaa
mov
jne
ret
lcall
iret
inc
pusha
call
rol
insl
jmp
push
je
aad
xor
or
push
rcr
hlt
xor
pop
cmpb
jnp
inc
push
shrb
in
dec
jns
mov
push
sbb
loopne
repz
insb
mov
outsb
mov
inc
jns
pop
pusha
cmc
xlat
je
stc
in
push
cmp
stc
js,pn
pop
inc
cmc
cmp
aam
lahf
in
test
fwait
mov
mov
into
addr16
fwait
jbe
add
lods
xlat
push
xor
push
jno
add
mov
pop
gs
and
dec
aaa
hlt
das
mov
jns
fcmovnb
testb
mov
es
das
inc
xchg
push
add
icebp
int
xchg
dec
dec
cmp
jg
mov
lods
push
mov
lds
pop
orb
aas
movsb
cltd
cmp
sbb
pop
jmp
test
outsb
enter
xchg
cmp
mov
stos
sbb
movsb
hlt
lret
lock
push
pop
push
fisubs
imul
in
add
in
call
jle
pop
decb
and
out
cmp
mov
sub
pusha
push
ss
sbb
sub
dec
cmpsb
lods
mov
sbb
and
dec
push
jae
dec
ret
sarb
movsl
mov
pushf
inc
insb
mov
pusha
sarb
lret
push
xchg
add
or
jge
pop
lods
cmp
out
out
jno
mov
xor
pop
push
sub
pop
add
and
or
or
in
scas
sub
les
sbb
insb
push
or
sbb
add
loop
outsb
mov
jg
lcall
testb
repnz
adc
jecxz
xchg
push
add
push
mov
cmp
jbe
dec
xor
in
cmpsb
bound
and
outsl
push
mov
sahf
in
jno
leave
fistps
xlat
dec
push
out
out
sub
aas
lods
fwait
ds
iret
rcrl
into
mov
ds
ret
push
sub
jae
xor
lods
cwtl
notl
js
xchg
cli
and
out
movb
mov
addr16
fs
in
and
lods
arpl
aad
sub
data16
rcrl
outsb
imul
loopne
repnz
cs
cmp
sub
pop
fwait
lret
or
stc
jo
and
mov
pop
out
mov
cld
or
cmp
or
mov
mov
sub
pop
je
decl
ret
or
or
out
out
sub
mov
adc
add
gs
xchg
cmp
in
mov
pushf
jbe
jns
fdivrs
icebp
arpl
mov
lods
stc
imul
mov
jne
ret
mov
mov
jnp
leave
lcall
rorb
sbb
scas
xrelease
rcr
push
lds
pop
add
jo
sbb
ret
les
adc
mov
call
hlt
popw
sub
shl
fucomip
pushf
dec
add
sbbb
ret
add
mov
sub
sub
int
syscall
jge
jp
movsl
and
xchg
test
sbb
adc
imul
mov
lret
sub
js
push
cli
imul
bound
dec
gs
or
call
push
loope
inc
mul
sub
xchg
movsb
mov
pushf
icebp
les
or
out
out
aaa
fldcw
and
mul
movsb
jmp
add
call
cwtl
testb
popf
cmpsb
cwtl
lret
add
jne
xchg
pop
loop
rcl
movsl
sub
sbb
fildll
push
mov
mov
shlb
push
fists
mov
stc
mov
pop
int
mov
add
cltd
cmc
sbb
ds
push
and
jg
scas
outsb
push
jbe
lods
xchg
jne
sbb
sbb
mov
arpl
arpl
jne
sub
add
inc
inc
mov
pop
xor
stos
rcrb
enter
mov
sbb
or
in
cld
inc
cmpsb
push
sahf
mov
out
outsb
out
inc
les
out
lods
mov
insl
adc
lahf
subb
dec
test
mov
stos
sub
cmpsb
test
add
mull
jb
ret
out
icebp
push
sar
adc
fmulp
cmpsl
mov
test
test
pop
inc
add
dec
push
mov
test
mov
and
out
shll
test
negb
xor
add
mov
xor
pusha
cwtl
pop
lds
rolb
ret
sbb
jbe
frstor
or
sbb
jnp
cs
movsb
sahf
jno
mov
mov
cltd
or
or
imul
pusha
sbb
jl
push
xor
inc
xor
inc
and
std
or
adc
sub
out
leave
fstl
sbbb
inc
or
sbb
test
outsl
test
inc
and
add
mov
dec
das
sub
xchg
and
pop
nop
test
movsl
outsb
xchg
sub
push
xchg
pop
dec
inc
xor
les
sub
repz
shll
inc
into
enter
rcll
push
cmp
iret
lods
scas
adc
push
cmp
sbb
mov
les
pushf
add
push
mov
pop
inc
adc
and
jnp
imul
movsb
jecxz
pop
in
mov
cwtl
scas
mov
mov
into
fcmovu
popa
imul
cmpsb
clc
adc
dec
push
mov
movsb
test
mov
clc
sub
test
inc
mov
mov
cmp
mov
aam
aad
mov
movsb
cmp
rcrl
jge
mov
int
lock
in
cmp
xchg
mov
and
xor
pop
xchg
inc
mov
xlat
scas
ljmp
pop
aaa
xchg
mov
cmp
xchg
in
repnz
cmp
dec
js
dec
inc
adc
out
and
fidivl
test
in
movsb
or
pop
jb
adc
jle
mov
sarl
das
sahf
dec
or
aaa
dec
xor
aam
fcmovbe
sbb
sub
addps
test
icebp
scas
js
enter
lock
fdivl
sti
insl
fidivl
mov
cs
fildll
arpl
lret
outsb
loope
data16
ret
and
mov
push
ss
lret
inc
jb
xchg
inc
mov
in
push
bound
or
xor
fdivl
xor
cld
push
push
inc
pop
mov
call
sarl
movsl
adc
mov
sbb
outsb
dec
shrl
add
and
mov
mov
or
sub
lods
sub
ret
int
add
dec
xor
xchg
push
xchg
imul
test
in
jne
sub
gs
scas
daa
sub
jo
xchg
cmpsb
pop
imul
xchg
push
add
pushl
or
xor
adc
int
out
icebp
outsl
cmpps
popf
lock
int3
addl
xchg
cmpsl
or
pop
rcl
jecxz
dec
mov
repnz
mov
shlb
mov
test
mov
aam
cmp
push
pop
cmp
bound
xchg
pop
push
fs
mov
sub
fadds
xchg
stos
xchg
out
xchg
and
adc
inc
push
xor
aam
sub
cltd
mov
xor
xor
xchg
repz
mov
outsb
cmp
xchg
ja
lds
xchg
jb
jle
out
sub
push
xchg
dec
inc
add
or
ds
lock
nop
lea
lret
push
sbb
pop
mov
jle
xchg
or
add
hlt
movsl
mov
mov
cwtl
imul
push
mov
xor
test
pop
xchg
xor
pop
mov
test
adc
insl
add
push
cld
lods
push
jg
das
dec
stos
pushf
dec
fstpt
fistpll
push
jecxz
mov
pop
jmp
jp
out
sub
inc
adc
push
xor
cmp
push
adc
push
push
subl
cmpsl
repnz
loopne
movsw
push
sub
xchg
insb
movsl
sub
xor
lret
insb
in
out
push
pop
ljmp
sbb
mov
out
rcrl
dec
and
pusha
push
fldl
aam
aaa
mov
push
pop
add
add
xor
push
test
cmp
dec
and
mov
or
pop
insb
mov
jecxz
movsb
push
movzbl
or
fwait
jle
js
pop
je
fstl
out
mov
rolb
cmp
pushf
fsubr
adc
ret
scas
xchg
sbb
sbb
cli
push
lods
dec
subb
xchg
sahf
and
in
scas
add
xorb
or
jns
adc
lods
cmp
dec
inc
add
mov
daa
hlt
jns
sbb
shlb
sbb
mov
xchg
push
jne
push
cmc
mov
and
xor
pop
aam
xor
arpl
sbb
inc
notb
data16
cld
xchg
dec
jecxz
mov
decl
inc
mov
pop
ljmp
mov
inc
aad
js
cmpsb
in
adc
orb
mov
jb
jns
aaa
notl
das
and
sbb
mov
add
rol
mov
mov
pop
ret
nop
enter
out
call
mov
or
pushf
xor
inc
xchg
add
cld
cwtl
clc
and
movsb
cwtl
adc
push
scas
pop
jp
loope
scas
adc
les
push
mov
and
ds
iret
mov
orb
xchg
or
stos
xor
arpl
add
loope
jg
sbb
mov
movsl
sahf
mov
dec
cmp
or
icebp
dec
ret
dec
mov
mov
out
pop
test
sub
and
dec
jb
mov
lods
mov
sub
cwtl
jecxz
mov
fnstenv
mov
xchg
jle
add
addb
xchg
mov
mov
imul
xchg
imul
fs
nop
cmc
daa
out
in
pop
xor
mov
clc
adc
cli
lods
lock
jg
xchg
aam
in
fcomps
push
ss
or
mov
cli
xchg
mov
clc
hlt
movsl
imul
push
xlat
ror
push
mov
or
pop
inc
mov
stos
movl
movsb
mov
mov
imul
out
test
ds
push
xchg
outsl
mov
mov
movsl
mov
sbb
jl
push
push
test
testb
out
test
jle
jp
sbb
adc
scas
sbb
mov
hlt
jl
leave
das
insl
add
xchg
lret
loope
fmuls
mov
inc
testl
mov
xor
mov
lods
test
dec
lock
or
or
fisubrl
cli
hlt
pop
add
jno
adc
adc
adc
test
out
sub
jecxz
lea
dec
xchg
push
xchg
jl
dec
push
push
cltd
jl
jnp
or
jmp
loop
mov
xchg
outsl
scas
adc
push
ficoml
pop
or
and
add
stc
sar
outsb
or
xor
jns
pop
insl
push
xor
outsl
push
enter
pop
inc
aaa
cmp
test
inc
shr
ljmp
cmp
dec
push
test
ret
mov
xchg
inc
shll
outsl
cmc
int3
pop
xchg
mov
mov
adc
lock
jae
pop
icebp
push
pop
jnp
test
push
or
rorb
adc
test
mov
inc
cs
push
sub
mov
jno
dec
out
jbe
xchg
repz
insb
or
loopne
testb
cmp
lea
jnp
or
stos
jp
in
push
cld
ss
jg
lods
and
ret
mov
loope
mov
movsl
add
push
imul
lcall
jo
and
cmp
mov
adc
mov
adc
pop
mov
pop
lea
fbld
out
cmpsl
jg
cld
and
outsl
aad
mov
sbbb
push
jae
xchg
pop
ds
mov
adcb
mov
cmp
aam
and
imul
mov
jecxz
push
jae
sbb
push
imulb
sbb
cmp
stos
insb
pop
and
pushf
ret
aaa
mov
xchg
data16
in
call
arpl
outsl
iret
shll
sbb
inc
dec
pcmpgtd
test
push
daa
cwtl
lods
or
fs
xchg
dec
or
sub
push
pusha
push
popa
mov
frstor
lcall
mov
enter
aas
jae
jns
or
fsubrs
xlat
mov
dec
adc
fisubs
lock
mov
imul
xor
push
push
nop
in
adc
lds
stos
inc
sub
out
pop
fs
xor
jle
mov
mov
pushf
cltd
adc
repz
push
push
ret
mov
lcall
rcll
out
flds
add
cmpl
xor
in
mov
inc
xchg
rorb
push
movsb
adcl
lret
dec
jbe
or
sbb
out
mov
stos
inc
jbe
stos
ret
arpl
jle
test
lret
xchg
cs
lret
dec
cvtpi2ps
add
adc
mov
mov
and
dec
sub
jecxz
push
cmpsb
inc
adc
icebp
push
data16
fcompl
xchg
testl
adc
or
loopne
jae
push
scas
stos
popf
push
mov
inc
mov
aad
das
sarl
mov
jg
mov
mov
cmp
mov
adc
int3
mov
hlt
hlt
xor
mov
clc
xchg
cmc
xor
dec
mov
fs
add
add
add
dec
pop
xchg
inc
int
xlat
leave
jnp
xchg
and
imul
cmpsb
sub
xor
pop
cs
push
or
dec
inc
sbb
into
dec
sbb
ds
jnp
rcr
rolb
les
cmp
jns
lahf
loopne
enter
dec
push
lods
insl
inc
adc
mov
ret
jb
and
addr16
std
fisttps
pusha
or
js
and
push
addr16
and
or
jmp
cli
iret
push
ds
sarb
jns
lahf
sti
imul
mov
aaa
pop
or
in
int
jl
push
fmuls
or
aam
or
xor
mov
inc
pop
mov
loopne
stc
or
mull
call
faddl
mov
jb
jne
mov
cmpsl
outsl
iret
dec
push
lcall
or
xchg
clc
gs
popa
jmp
adc
xor
adc
call
lcall
gs
push
ljmp
fbld
xchg
aas
mov
fldcw
mov
push
adc
jno
shll
dec
out
inc
iret
sbb
ficompl
hlt
jno
jl
filds
mov
popf
scas
icebp
mov
add
add
fcomp
test
arpl
lock
mov
test
aaa
lret
mov
sbb
add
jne
or
xor
je
push
push
mov
fbstp
jo
pusha
cmpsl
jns
lret
rcr
enter
mov
lds
aaa
lds
lret
fimuls
inc
mov
add
dec
mov
dec
outsb
sub
jmp
add
inc
sub
out
ja
outsb
leave
mov
cli
negb
jns
dec
adcl
jle
cmpl
mov
inc
movsb
jle
subl
repnz
xchg
adc
sub
push
mov
pop
dec
inc
lcall
jge
jg
mov
xchg
jo
xor
rcll
fldt
ret
es
pop
push
mov
sbb
and
or
jl
imul
and
fs
addr16
aam
push
jae
scas
inc
add
adc
sbb
push
and
mov
aam
inc
mov
aad
xchg
sub
loop
cmp
mov
outsl
addr16
insb
push
jb
mov
xchg
clc
push
out
adcl
push
daa
sbb
jb
adc
daa
das
jns
pop
mov
fcomp
pop
sbbl
in
sbb
mov
cmp
jo
jo
adc
mov
lock
cmp
lock
int3
fs
cmp
xor
ror
in
fcmovbe
or
cmp
aad
jmp
mov
add
nop
std
sub
repz
lods
cmp
fdivrl
mov
aam
jecxz
int
push
loop
in
je
js
jl
and
int
add
lods
cmp
js
bound
mov
je
pop
adc
std
pop
push
test
sbb
fdivrl
cmpsb
out
xlat
adc
add
addb
insl
add
push
ja
fwait
sub
out
push
orb
in
test
mov
push
dec
aam
xchg
ja
outsl
adc
test
cs
inc
push
std
jmp
outsl
dec
ja
aad
cmpsl
rcll
and
ret
cmp
leave
xchg
mov
mov
mov
rep
std
stos
dec
cld
rclb
adc
out
dec
clc
dec
scas
mov
or
mov
loopne
or
xor
jmp
sbb
pop
mov
cltd
mov
outsl
cmp
adc
sbb
dec
ret
jae
push
test
mov
jnp
aas
nop
push
lret
pmaddwd
aam
jb
movsl
jl
and
xchg
call
rorb
or
xchg
mov
popf
es
sti
jb
mov
mov
das
xchg
ret
pop
lock
mov
fnstenv
mov
lods
sbb
dec
gs
jnp
mov
add
xchg
pop
or
xor
mov
out
loopne
sub
in
cmpsb
gs
xchg
lds
or
sbb
rcrl
sbb
jp
stos
aad
cwtl
fs
out
adc
inc
xlat
ja
addr16
mov
jns
xor
int
xorl
sub
xorb
xorl
jae
jg
inc
test
cli
dec
dec
fstp
aam
ret
out
pop
sub
ret
stos
adc
sbb
sub
push
and
cwtl
fists
pop
popa
adc
stos
pushf
push
andb
loop
lock
and
sbb
pop
adc
mov
fldcw
sbb
add
jmp
jecxz
daa
cltd
sbb
iret
fcomip
call
out
cmpsb
or
lahf
ret
out
and
pusha
loopne
inc
cltd
jne
stos
dec
dec
mov
test
xchg
push
ret
jmp
jmp
arpl
fsubrl
inc
call
jns
add
jmp
jl,pn
lret
push
cli
int
pop
inc
outsb
add
scas
mov
out
xchg
or
aam
das
aam
or
xchg
mov
lock
test
push
fld
and
outsl
mov
jle
push
icebp
mov
mov
mov
pop
aad
sub
adc
lock
rcll
dec
rorb
jne
pop
vrsqrtss
cmp
pop
call
cmpsl
adc
out
cmpl
in
lods
fiadds
push
push
fdivs
gs
fcoms
and
and
sbb
cmp
add
xor
cld
and
cmp
or
clc
xor
add
popf
inc
mov
hlt
add
push
ficompl
roll
std
ret
push
dec
inc
out
jp
das
scas
fbld
cmp
stc
fwait
pop
icebp
fwait
test
mov
lahf
mov
testb
jmp
imul
cmpsl
mov
mov
enter
jle
gs
jb
movsb
sub
enter
jge
dec
sbb
orb
jp
xchg
mov
bound
jne
and
push
bound
std
mov
pusha
stc
sub
hlt
lds
insb
cli
push
loopne
ljmp
sbb
xchg
flds
xchg
cmpsb
mov
push
mov
sbb
add
or
adc
push
add
insb
mov
push
cmp
pushl
jne
or
std
repz
fwait
sbbl
rolb
loope
pop
dec
outsb
sub
mov
rorb
dec
js
neg
addr16
mov
sub
aam
int3
and
je
aaa
jne
mov
jo
mov
mov
or
sbb
and
std
xor
pop
xor
pop
out
dec
inc
inc
adc
xchg
inc
jp
cmp
mov
pop
pusha
out
inc
movsb
repz
imul
mov
pop
ljmp
xchg
xchg
sbb
out
adc
test
jmp
cmp
jmp
test
stc
mov
lahf
adc
lods
sub
loopne
cmp
inc
or
mov
mov
push
pop
call
sub
pop
mov
shrb
in
and
adc
out
iret
ss
sbb
mov
popa
pop
push
cmc
sbb
je
testb
jns
enter
sub
mov
repnz
andps
sbb
or
mov
or
lea
adc
jb
ds
outsb
test
loop
push
sub
push
enter
sahf
cmp
dec
xor
mov
adc
sbb
mov
pop
sub
lods
out
adc
es
adc
jns
xor
or
repnz
faddp
or
test
or
xlat
cld
jle
mov
lret
and
rolb
outsb
test
cmpl
mov
jp
mov
popa
and
add
push
js
fidivs
xchg
jns
xchg
adc
aam
or
and
dec
or
xchg
fcoms
addl
push
enter
rclb
xchg
xchg
or
es
pushf
mov
loopne
ss
leave
gs
rol
mov
fs
mov
fidivs
inc
out
les
pushf
mov
pop
push
mov
sub
je
daa
sbb
jmp
in
cmp
into
insl
push
cmp
dec
jo
xchg
sub
cli
in
fwait
jo
ljmp
mov
dec
popf
ljmp
mov
mov
rcrl
rorl
out
into
enter
cmpsl
add
pop
pop
jle
enter
jg
sti
sti
mov
xchg
pop
inc
pop
adc
mov
and
filds
pop
unpckhps
cmp
cwtl
sub
aas
ret
dec
shl
add
insl
cmp
scas
fs
mov
add
fisubs
loopne
aam
jb
mov
xchg
mov
aas
push
stc
andl
psubw
mov
bound
pop
int3
pop
inc
push
cmpsl
cld
ljmp
add
lret
lahf
pushl
or
pusha
fimuls
xlat
push
inc
mov
jnp
jns
scas
sbb
xor
or
and
out
mov
adc
cmp
xor
test
mov
xchg
aaa
sbb
ds
cmp
das
jp
ds
cmp
pop
dec
xchg
iret
sub
jp
pop
iret
lret
push
pop
and
inc
sysenter
sub
cmp
push
push
jmp
xorl
jmp
cld
push
mov
mov
xchg
adc
test
pop
push
aaa
in
mov
or
mov
xlat
sub
outsl
pop
repnz
inc
pop
mov
stos
rcrl
dec
push
ljmp
mov
aad
lcall
mov
pop
movsb
inc
xchg
in
pop
cmp
mov
adc
lods
lds
pop
mov
imul
jle
icebp
mov
jge
or
xlat
add
jno
aad
jl
or
movsl
jmp
jns
das
inc
cmp
outsb
jnp
inc
jns
xchg
mov
dec
aam
inc
adc
pop
and
movsb
stos
js
div
cltd
lcall
pop
add
pop
out
cltd
add
scas
push
loopne
fdivrs
nop
xchg
mov
adc
and
jb
outsb
pop
sbb
xchg
insb
mov
cmp
cmp
jmp
sbb
or
pop
sub
push
cmp
or
xlat
sahf
leave
sti
adc
cmp
sbb
movsb
pusha
push
in
add
outsl
add
adc
dec
inc
cltd
cwtl
pop
fisttpl
ja
mov
pop
cmp
xor
jecxz
lds
fstl
pop
cmp
push
or
mov
xor
inc
int3
iret
hlt
jno
jbe
outsl
and
sbb
mov
enter
mov
cmp
les
or
jb
outsl
ret
xchg
pop
mov
push
popf
cmp
gs
jecxz
repnz
jb
sub
xchg
mov
xor
xchg
jne
ret
dec
push
inc
jne
xchg
lret
data16
jg
add
xchg
xor
pop
and
repnz
pop
movsl
jb
adc
iret
mov
sbb
or
pop
cmp
mov
lret
imul
sub
enter
repz
stc
jno
ja
test
cmp
aas
sahf
xor
adc
adcl
push
out
cmp
div
gs
sbb
les
mov
in
rorb
movl
mov
sub
repnz
push
xor
lods
and
fistpl
fimull
clc
cmp
ds
jo
in
and
cmp
push
loopne
add
sub
enter
int
and
sub
shlb
pop
insb
loopne
into
aaa
inc
xor
gs
leave
movb
icebp
jne
or
mov
insl
inc
clc
imul
iret
add
mov
jns
xor
jecxz
dec
sbb
mov
lea
adc
adc
adc
and
das
mov
gs
xchg
data16
jge
jmp
add
xor
xor
push
mov
in
mov
push
pop
ds
xor
sar
out
push
pop
ljmp
sbb
xchg
shll
xchg
push
mov
sbb
jl
mov
inc
xchg
shrl
testl
icebp
sub
paddq
push
cltd
andl
or
push
inc
pop
mov
xorb
mov
push
xlat
aas
cmp
adc
outsl
aad
dec
pop
mov
push
or
mov
cs
rclb
mov
loopne
test
adc
mov
add
sub
mov
out
add
out
imul
imul
aas
mov
es
push
push
xlat
xchg
sbb
mov
sbb
adc
jl
das
in
cmpsb
out
cmc
sub
sub
sbbl
imul
jb
push
jg
into
cmp
movsb
xlat
sub
mov
adc
push
fsubrs
jnp
dec
xchg
push
mov
pop
add
leave
iret
xor
into
clc
add
inc
lahf
or
sub
jb
je
lock
jecxz
stos
repnz
push
call
mov
aad
pop
xchg
jne
and
sbb
movsb
dec
xor
stc
jno
jnp
jb
test
ss
xor
fcomi
sbb
xchg
dec
orb
sub
cmp
mov
loopne
and
dec
or
jl
adc
sbb
xchg
lds
sub
or
data16
push
adc
out
dec
lds
sub
jle
xor
pop
and
outsb
xchg
xchg
hlt
imul
mov
test
loop
jg
clc
je
repnz
js
and
cmpsb
daa
rolb
lss
popa
test
addr16
mov
dec
ljmp
addl
movsl
xchg
or
stos
jmp
pop
imul
fmuls
outsl
xlat
inc
pushf
pop
add
add
xchg
add
rcrl
mov
das
add
adc
cmc
jmp
sbb
dec
push
stc
outsl
stos
gs
fs
push
cltd
je
add
xchg
pop
shl
cmpsb
cltd
mov
call
aad
push
adc
lcall
cmp
jb
push
cmp
mov
test
jmp
fldenv
out
sub
dec
arpl
jp
leave
jns
jg
ljmp
inc
cwtl
outsl
pushf
sbb
mov
xchg
hlt
add
sahf
aad
inc
pushf
test
add
sbb
jbe
idiv
outsw
cltd
jbe
fsubl
test
pop
cmc
sub
imul
in
cmp
cmp
cmp
adc
xlat
mov
icebp
mul
in
adc
test
ds
push
shl
mov
jp
hlt
pop
sub
pop
fldcw
test
scas
outsb
out
jg
xor
stc
xchg
aas
in
xor
test
xchg
lods
aam
cmp
data16
xchg
testl
mov
out
repnz
cltd
data16
mov
shrb
fisubrs
imul
adc
inc
jb
adc
or
push
in
pusha
lcall
push
sub
xchg
insl
popf
popf
mov
fwait
loope
adc
adc
pushl
call
stos
push
aaa
imul
or
xlat
inc
outsb
xchg
jg
popa
adc
jmp
mov
aam
sbb
mov
cmp
aam
int3
shrl
xchg
int3
ficoml
sub
push
dec
push
loopne
inc
mov
sub
push
test
jmp
inc
xchg
jle
inc
and
lock
and
ret
lahf
stos
movsl
js
ljmp
lea
cli
and
cmc
xor
adcl
add
jbe
fildl
out
dec
dec
jle
push
and
sbb
cmp
fsubs
scas
jne
in
mov
js
js
mov
pop
add
adc
and
jb
je
gs
and
dec
xor
repnz
movsl
push
imul
push
push
xchg
jle
mov
push
pop
cwtl
ficoml
ljmp
iret
mov
fwait
popf
sarl
leave
iret
xchg
iret
sub
insl
cmpl
adc
pop
mov
dec
jp
and
xor
pop
sub
mov
xchg
js
repnz
dec
sti
dec
cmc
and
sarb
es
jae
pop
enter
mul
add
das
adc
out
xor
sarb
dec
pushl
mov
add
jl
push
scas
dec
push
or
aas
xchg
sub
testl
jl
fadd
aam
in
dec
sahf
sbb
das
xchg
aam
push
pop
out
push
into
fwait
sarl
into
push
or
jno
adc
dec
pop
jge
xchg
mov
arpl
dec
inc
sbb
pop
outsl
jle
mov
outsb
xchg
push
lods
dec
push
inc
pop
aaa
pop
pop
and
imul
test
mov
mov
lahf
mov
movsl
push
and
mov
aas
lea
adc
add
cmp
push
lds
js
lret
push
test
orb
ret
lods
adc
imul
mov
imul
adc
call
xchg
jnp
dec
lea
out
insw
xchg
je
shll
pop
in
xchg
jns
xor
neg
push
add
adc
xor
add
and
lret
xor
jmp
jmp
test
in
stc
pushf
inc
jnp
pop
dec
dec
mov
cwtl
fildl
mov
sbb
inc
addl
lahf
aam
scas
mov
fsubs
adc
sbb
test
add
mov
pop
jle
ret
stc
ret
mov
xor
push
pop
cmp
pop
pusha
cltd
add
cmpsb
sbb
test
mov
loopne
out
lret
int3
sbb
mov
sbb
hlt
std
ja
stos
pop
xor
cltd
xor
push
sti
aaa
testb
inc
sub
mov
pop
aad
cmpsl
mov
add
mov
hlt
enter
push
orb
lds
xor
mov
decl
loope
dec
in
jo
lods
cmpb
jno
push
sbb
mov
dec
leave
pop
mov
mov
xor
xchg
jmp
adc
fucomip
mov
sub
cltd
dec
scas
loop
lret
adc
mov
pop
notb
jl
mov
mov
jmp
movsb
mov
lahf
xchg
pop
imul
out
stc
jg
jnp
dec
lods
push
daa
popf
sbb
cmp
int
mov
fdivrs
cmpsb
repnz
iret
pop
fmul
inc
test
push
push
push
int
push
mov
mov
aam
dec
xor
inc
test
arpl
or
addr16
xchg
mov
std
jg
push
sub
inc
shlb
pop
xchg
inc
fists
xor
lahf
nop
adc
pop
jle
push
js
dec
cmp
mov
test
fyl2xp1
push
mov
pop
jnp
cmp
cmp
xorb
xchg
lods
sti
pop
mov
sub
stc
xchg
in
test
mov
stc
jns
mov
loop
inc
jbe
icebp
addb
and
mov
addr16
aad
das
nop
mov
sub
sbb
orl
jp
jle
add
aad
dec
lods
into
fsub
mov
insl
adc
shlb
repz
adc
add
fistpll
int3
xor
dec
xchg
ret
inc
addr16
test
test
aam
xchg
or
pop
cwtl
mov
mov
mov
cmp
lret
add
aaa
pushf
adc
sti
in
arpl
mov
inc
mov
pop
test
shlb
jno
pusha
imul
push
xor
add
jnp
and
fstl
pop
fadds
jbe
ja
cmpsl
mov
adc
fsubs
sub
imul
adc
test
fcomps
jns
aad
popa
adc
push
jmp
je
popf
jbe
jnp
xchg
or
aad
sbb
ret
test
cmp
xchg
imul
push
xchg
inc
and
add
cs
push
cmc
jg
cmc
adc
or
push
jmp
inc
cwtl
fsubrl
daa
lods
in
ljmp
mov
mov
test
loop
test
jb
cmpsl
fmull
mov
pop
sub
out
cmp
rcll
sub
ss
addb
pop
add
test
mov
sub
mov
rcrl
int3
push
lods
dec
dec
pushf
or
add
mov
sarb
mov
adc
cmp
movsb
stos
dec
fs
jg
shll
lcall
mov
inc
mov
jae
stos
mov
movsb
popa
loop
mov
mov
dec
out
fcoms
cmc
xor
dec
mov
cli
das
push
dec
cmpsl
sub
cld
out
aas
sbb
inc
int
sbb
sti
jg
pop
aam
dec
imul
mov
out
mov
aad
jecxz
jb
fisttpll
or
dec
test
push
sbb
mov
mov
rorb
loope
outsl
and
sbb
in
jno
fistps
cmp
or
adc
adc
aas
sbb
outsl
mov
add
cli
dec
sub
mov
push
fsts
lea
ds
xchg
shl
cli
sti
and
sbb
mov
pop
add
andl
mov
mov
lods
push
js
je
mov
or
orl
sbb
jns
inc
jmp
in
inc
sahf
sub
inc
int3
cld
xchg
jne
pop
out
scas
push
dec
sub
ljmp
pop
sbb
lcall
adc
push
sbbl
cli
jns
in
sbb
inc
or
push
pop
jb
hlt
mov
rcll
je
or
mov
cmc
cld
stos
adc
out
mov
pushf
pop
jbe
fidivrs
add
xchg
fld
jbe
dec
scas
out
stos
pop
aam
outsb
js
adc
mov
inc
jbe
mov
mov
fidivl
dec
jp
movsb
sub
notb
push
push
add
adc
out
in
outsb
daa
daa
decl
fstl
adc
shl
push
xor
sqrtps
adc
popf
jae
xor
xchg
cltd
icebp
imul
mov
sti
insb
sub
aaa
cmp
dec
sbb
push
test
xchg
dec
loop
loope
jl
fcomp
sahf
or
cli
ja,pt
sbb
push
sbbb
loopne
loope
push
sub
pusha
je
cwtl
cmpsl
mov
mov
cmp
and
add
lret
cmpsl
clc
cmc
test
shrb
mov
sbb
out
sti
iret
jb
addr16
and
or
ret
pxor
and
ja
int3
aam
rol
call
sbb
mov
dec
cmpsl
les
cmc
test
add
sub
dec
jle
mov
mov
shrl
adc
ret
dec
clc
aas
cwtl
pop
or
and
xor
sub
jge
outsb
pop
xor
insl
xchg
mov
lcall
sbbb
or
xchg
pop
sub
pop
in
shl
nop
pop
out
addr16
ja
xor
mov
out
imul
jecxz
out
aaa
mov
popl
pop
pop
repnz
shufps
adc
xor
dec
push
jmp
sbb
mov
clc
sub
jmp
and
inc
cmp
jg
cld
pop
cmp
pop
cmp
inc
adc
lahf
and
adc
sbb
sbb
imulb
movsb
mov
fildll
int
ret
push
push
or
dec
cld
jp
and
pop
mov
fidivrl
lds
push
or
into
aam
dec
mov
fcmovnb
dec
adcl
hlt
in
push
das
ud0
mov
loopne
sub
sbb
ficoms
leave
push
xor
fsubrs
jl
lahf
mov
mov
addr16
movl
sub
dec
arpl
loopne
ret
ss
pop
stos
lret
imul
ds
xchg
lahf
repz
pop
push
orl
shll
jae
rclb
int
popa
div
add
hlt
xchg
inc
ret
fistps
push
mov
xlat
ljmp
mov
jne
outsb
mov
jno
dec
push
push
rcll
aam
xchg
add
mov
mov
fistps
sarl
xchg
fistpll
pop
mov
movsb
lret
jns
push
shll
and
dec
shll
clc
inc
mov
push
repnz
sub
jecxz
fcomi
jno
outsb
mov
sub
testl
faddl
push
mov
jp
lods
es
icebp
test
inc
and
jo
mov
sbb
ss
add
sub
je
push
sbb
sub
jb
ds
bound
pop
add
shll
mov
ret
ja
enter
push
jb
inc
and
cmp
rorb
daa
mov
outsl
pop
jae
cmp
lcall
out
xchg
into
ret
scas
or
push
push
popf
fsubl
aad
push
and
fcoml
test
add
insb
out
mov
pop
push
pop
adc
or
and
jns
mov
lods
in
mov
push
cmpl
dec
push
mov
mov
insl
lock
scas
push
push
cmp
mov
insl
jns
add
ss
aad
inc
xor
cs
ljmp
and
adc
add
cmpsb
outsl
jecxz
push
add
sar
pop
lret
in
jp
jge
loope
jle
pop
out
aaa
mov
orl
repz
adc
xchg
rorl
lahf
xor
fdivrs
dec
arpl
scas
rclb
ljmp
rol
je
daa
and
mov
imul
imul
int
cltd
popa
inc
pop
or
gs
sub
sahf
popa
push
xor
push
into
jmp
jecxz
loopne
adc
lret
mov
push
addr16
out
inc
shll
fdivl
and
mov
or
inc
mov
xchg
push
mov
or
xchg
sub
lock
out
out
jmp
sub
sti
shlb
sub
ret
or
andb
jbe
nop
test
inc
sub
lock
fbld
in
rcll
add
clc
bound
lods
pusha
add
dec
sub
sahf
and
add
and
sub
popa
dec
loopne
clc
mov
aam
es
or
test
adc
mov
cli
pop
leave
cmpsb
fnstcw
jle
and
cs
clc
push
dec
mov
mov
fnstenv
sti
xchg
rcll
js
dec
test
shl
jns
adc
mov
mov
or
and
es
cmp
jecxz
mov
sub
cld
lds
adc
mov
push
stos
jmp
cmp
push
insl
aas
push
aas
mov
repnz
lahf
popa
ljmp
aam
loop
pop
imul
imul
mov
mov
xchg
pop
push
jbe
out
lcall
stc
mov
sahf
rol
cltd
iret
stc
and
dec
jb
insb
sbb
lret
inc
hlt
add
mov
stos
dec
mov
shrl
in
scas
and
pop
out
xchg
jl
sysexit
mov
push
imul
xchg
push
enter
iret
sbb
addr16
or
mov
pop
cld
ljmp
data16
push
xchg
pushf
mov
jno
mul
nop
dec
xchg
pop
in
test
js
enter
ljmp
mov
into
test
js
adc
push
jg
subl
lea
cmc
cmpsl
out
call
rcll
push
lds
sti
add
scas
mov
fs
rolb
adc
jge
pop
pop
push
enter
inc
or
cs
xorl
rolb
push
jg
push
addr16
cld
sub
int3
fcmovnu
add
out
jns
sbbl
jle
pop
xor
dec
gs
push
call
sbb
out
jae
stc
nop
jnp
and
mov
inc
add
daa
adc
add
mov
jecxz
jne
mov
movsl
push
in
jl
inc
jle
mull
hlt
pop
mov
fcomps
lea
addr16
and
popa
aaa
stc
movntq
stc
push
mov
leave
jp
dec
push
push
mov
call
mov
stc
cwtl
adc
push
or
xor
gs
push
push
inc
pop
lahf
and
sbb
add
add
xor
aam
pop
mov
cwtl
xor
sub
popa
jne
push
jnp
orb
jbe
lods
mov
pop
cwtl
sbb
in
ffreep
pop
mov
stc
pop
and
and
lcall
shlb
push
dec
mov
xor
pop
jne
out
jb
enter
les
test
mov
cmp
sub
and
fs
es
aad
pop
mov
mov
inc
cmp
pop
shlb
adc
push
repz
mov
cwtl
sahf
lds
pop
adc
out
pop
adc
test
sbb
ret
push
pop
mov
jle
push
mov
fs
ss
mov
sti
mov
fmuls
push
add
fildl
hlt
pop
mov
dec
jmp
xchg
mov
mov
clc
or
xlat
mov
in
ds
xchg
cmp
mov
pop
repnz
jp
xor
mov
sbb
dec
insb
in
adc
insl
mov
hlt
out
out
insl
mov
movsl
dec
addr16
mov
std
jbe
sbb
repnz
and
sub
and
push
push
imul
mov
mov
frstor
mov
xchg
fimull
mov
mov
lds
rorl
int3
xor
addr16
or
push
mov
bsf
ja
mov
scas
mov
fistl
cmc
icebp
popa
xor
cmpsl
leave
je
loop
jne
push
lcall
jbe
in
mov
in
test
scas
rorb
mov
push
jp
cmpl
mov
add
fnstcw
sub
xor
sti
dec
mov
int
shr
cmp
xchg
dec
mov
mov
data16
insb
in
cmpsb
pop
cltd
insb
aam
out
and
and
add
mov
mov
xor
inc
dec
lcall
dec
mov
mov
dec
iret
cmp
xchg
popf
mov
xchg
mov
loop
fs
sbb
adc
jg
fdiv
in
rcrl
push
lret
push
je
jno
hlt
mov
jnp
js
loope
inc
mov
popa
push
inc
lahf
dec
ret
dec
mov
in
lods
jnp
out
mov
jmp
inc
iret
ss
inc
ljmpw
or
or
mov
mov
push
sub
subb
sti
xor
sbb
push
ror
sbb
mov
adc
ja
adc
pushw
ss
jns
jns
std
dec
sub
addr16
sub
xchg
xchg
das
xor
jecxz
lret
inc
jp
andb
push
dec
stos
pushf
xor
inc
int3
pop
fnstsw
jno
and
repz
pop
cs
out
push
inc
fsubl
ss
xchg
push
rcrl
fwait
mov
lds
fisubrs
sbb
mov
jne
call
xchg
sarl
bound
lds
xchg
jo
or
mov
and
jo
in
mov
lcall
cmpsl
mov
push
mov
nop
mov
nop
xor
dec
cmp
xor
and
push
or
lods
rcrb
mov
inc
test
push
ljmp
paddusb
imul
daa
inc
lahf
push
push
xor
popa
sub
int
push
imul
mov
jle
pop
test
in
pop
xorb
lahf
inc
and
imul
loopne
and
lea
add
mov
mov
cltd
inc
fwait
enter
mov
jmp
cmp
fdivp
xchg
pop
cmpsl
psubq
jmp
dec
in
jge
int3
inc
es
adc
cmc
shl
rol
xchg
adc
in
out
ds
loop
pop
iret
adc
cltd
rorb
pop
xor
out
inc
fstpl
arpl
bound
loope
out
cli
orb
add
cs
jns
arpl
sbb
mov
std
xchg
dec
psadbw
or
sarb
adc
out
rol
inc
fldlg2
mov
sbb
dec
push
addb
mov
cmp
jae
add
cmp
fbld
dec
sbbb
arpl
cld
sbb
sub
mov
pop
or
jmp
push
adc
lret
inc
sbb
dec
inc
push
adc
int3
aaa
sbb
inc
jecxz
fwait
lea
pop
jmp
add
push
add
xor
mov
dec
push
add
mov
aad
test
outsl
stos
sub
push
test
ss
xchg
fdivr
inc
dec
cmpsb
inc
imul
jno
bound
cmp
cs
ja
das
push
and
jp
adc
adc
and
jmp
cmp
insb
xchg
iret
sbb
xchg
dec
rcr
fisttpl
jmp
mov
add
add
push
jno
lcall
test
pop
mov
and
int3
and
dec
cmp
jo
push
mov
or
test
mov
clc
add
inc
mov
or
mov
into
add
push
fisubs
fidivrs
cmpsl
mov
sub
mov
mov
dec
push
push
roll
loop
lock
pushf
addr16
popa
imul
jo
divb
lcall
jo
test
call
push
jmp
adcl
xor
lods
lds
sahf
and
jle
mov
xchg
lds
cli
ja
push
jno
fadd
push
lahf
inc
sbb
cmp
mov
movsb
ret
xor
jb
shrb
vprotw
xor
push
sub
push
inc
test
dec
sbb
adc
push
push
loop
repnz
std
push
sub
in
loopne
adc
xchg
xchg
sbb
fidivs
inc
ss
sbbb
in
mov
and
push
pop
repz
pop
daa
call
sbb
addl
test
aas
lods
mov
xchg
pop
int
jecxz
imul
xchg
and
push
lock
sbb
popa
mov
inc
ss
pop
add
mov
push
mov
loopne
lds
call
or
mov
outsb
mov
test
pop
imul
out
fsubrl
mov
mov
xchg
cli
mov
negb
pop
pop
negb
fimuls
jmp
jnp
lcall
mov
out
in
cmp
das
aad
iret
xchg
jb
xlat
mov
cmp
jne
mov
add
scas
inc
incl
into
scas
shlb
and
rcl
pop
stos
add
mov
cmc
rcll
mov
scas
sbb
nop
inc
repnz
shrl
xchg
and
sub
jl
dec
pop
adc
movsb
xchg
lret
ljmp
pop
cs
rcr
dec
sti
or
lods
dec
mov
mov
je
mov
aad
pop
mov
cmp
add
pop
stc
xchg
aas
add
pushf
aas
shrl
aaa
clc
sbb
push
mov
pop
lds
loope
stos
cmp
nop
icebp
push
jo
loop
nop
and
sub
js
pushf
sub
sbb
insl
dec
sub
sub
addb
call
jmp
pop
dec
enter
aad
add
hlt
hlt
push
jnp
sub
add
aad
push
daa
dec
push
pop
insl
xchg
call
inc
aam
add
xor
popa
and
call
lret
adc
iret
mov
xchg
sbb
and
lea
hlt
push
sub
pop
call
in
xchg
mov
pushf
call
leave
add
and
int
pop
jg
arpl
xchg
push
test
pushl
mov
xor
call
fmull
cmpsb
into
test
xchg
lahf
xchg
movsl
aas
xchg
lock
repz
mov
jg
and
pushf
push
repnz
xchg
xchg
mov
inc
xlat
jp
or
mov
subl
mov
pop
adc
je
xor
sub
pop
cmpsb
incl
sub
or
push
outsl
int3
ljmp
add
pop
xor
push
xor
mov
xor
pop
test
sbb
sbb
fwait
int
adc
sub
and
arpl
aaa
lock
mov
xor
mov
cli
imul
out
or
in
mov
sti
jmp
jp
push
add
in
mov
dec
mov
aam
aam
xchg
push
test
pop
invd
push
ret
fisubs
adc
cld
xchg
jo
nop
mov
sbb
mov
xchg
ficomps
aas
sbb
out
push
sub
hlt
out
add
sub
inc
sub
test
cmp
fadd
jmp
jmp
in
xor
test
mov
pop
jmp
sahf
adc
sub
mov
enter
jae
and
sbb
mov
fnsetpm(287
cmp
aaa
popa
popf
and
mov
mov
xchg
rolb
push
cmc
clc
lahf
out
daa
stos
stc
mov
sub
subl
stc
setp
ret
test
adc
pop
adc
inc
push
in
lods
add
mov
mov
ss
int
xchg
fnstcw
fwait
cmp
inc
daa
dec
pushf
mov
imul
fisubl
xor
dec
bnd
das
ja
push
xor
or
popa
mov
in
mov
icebp
sub
mov
jae
xlat
fwait
mov
push
mov
js
mov
and
loopne
mov
cmp
test
mov
pop
das
adc
imul
push
push
shr
cmp
movsb
mov
xlat
es
mov
sti
adc
imul
xchg
and
add
xchg
leave
xchg
movsl
das
je
scas
fwait
fs
or
test
dec
fnsave
adc
push
lods
cmc
xlat
test
sbb
pop
sub
int3
popa
xlat
inc
push
cld
push
in
sbbb
push
cmp
pushf
and
mov
pop
inc
cwtl
adc
push
insl
sbb
pop
into
cmp
decl
data16
dec
push
inc
sbb
stos
adc
pop
lret
or
jg
mov
dec
jbe
stos
mov
xchg
and
pop
subl
bnd
cmp
mov
or
pushf
jp
adc
loopne
stos
loope
mov
pop
xchg
neg
fwait
jecxz
mov
cltd
inc
add
and
bnd
int3
pop
bound
push
and
mov
jno
test
incl
lcall
aaa
loop
pop
stos
pop
mov
xchg
dec
pop
pop
dec
pusha
mov
pop
imul
and
xchg
push
std
push
mov
adc
xchg
lahf
adc
gs
push
cmp
cmovno
mov
pop
jbe
imul
loope
scas
cmpsb
add
mov
jmp
mov
imul
jl
jecxz
cmc
mov
pop
dec
into
jle
pop
jae
pop
mov
scas
or
mov
cmpsl
call
mov
incb
add
addr16
aam
mov
push
xchg
pop
mov
int
into
mov
jo
sbb
jle
or
ret
push
cli
adc
cmpsl
mov
add
les
or
add
pop
and
inc
nop
adc
push
cmp
xor
mov
sub
ror
pop
movsb
in
sbb
movsb
mov
pop
cmp
aad
stc
xlat
pop
add
stos
in
lock
sahf
sub
xlat
fcomi
sbb
scas
lret
int
jg
outsl
xor
rolb
lods
sub
lcall
orb
mov
aas
jns
test
ret
rcrl
or
lods
stos
sub
push
fs
mov
ficoml
aas
cmp
dec
outsb
lds
imul
clc
leave
sub
arpl
jmp
xor
sti
loopne
pop
dec
scas
and
mov
rcll
xchg
inc
ficompl
fs
sbb
int3
push
add
not
das
data16
add
ret
fiadds
dec
callw
pushf
bound
lods
dec
jno
sbb
add
aad
add
aad
xchg
jnp
cmp
nop
cmpsb
inc
test
mov
ret
ret
mov
cwtl
out
in
imul
lahf
lock
mov
or
inc
xchg
xchg
imul
sarb
rorl
adc
orl
inc
push
push
xor
xlat
hlt
jp
lock
in
sub
insl
es
loopne
loopne
mov
adc
sub
leave
daa
test
pop
inc
cltd
or
jb
fcoms
fwait
or
pushf
dec
mov
in
xorl
push
bound
push
lea
jg
jns,pt
push
ja
mov
mov
or
aad
es
pop
sub
mov
ret
inc
dec
push
xor
repnz
dec
ja
mov
stc
push
push
mov
sbbl
mov
or
in
loop
lahf
rcr
jbe
stos
aam
leave
rorb
int
lret
sub
mov
inc
fstpl
popf
jae
sahf
in
gs
and
or
adc
jb
jo
cltd
js
push
xor
movsl
aaa
das
or
sti
or
mov
loop
cmp
or
and
in
ljmp
mov
cmpsb
lret
decl
mov
push
out
sbb
fistpll
jge
sbb
dec
lods
cli
pusha
inc
adc
aaa
ficoml
std
filds
in
xor
pop
imul
mov
cs
les
sub
cmp
pushf
xor
mov
push
ret
jnp
faddp
pop
jbe
and
outsb
lahf
insl
movsl
mov
call
adc
shll
jl
and
or
jmp
dec
clc
mov
sbb
ret
dec
push
mov
in
les
popa
pop
fs
in
inc
ss
iret
cltd
inc
cmpsb
mov
adc
fisubl
cmp
and
mov
imul
ss
lahf
cmp
pop
jno
or
fildll
mov
lahf
popf
inc
dec
scas
cwtl
lods
add
loop
sbb
push
cwtl
adc
daa
cltd
sub
cltd
fadds
dec
cmp
hlt
push
adc
push
cwtl
ljmp
ja
imulb
mov
pop
xlat
dec
ss
inc
cmpb
loope
fsubs
or
push
bound
js
test
mov
xor
push
pop
mov
xchg
add
pop
fstpl
and
ret
ret
rcll
inc
adc
add
aad
sub
cmpsl
movsl
mov
jbe
jle,pn
outsb
imul
outsl
orl
lcall
and
aad
xchg
imul
sub
pop
mov
lock
incb
test
dec
addl
cmc
mov
dec
sub
daa
dec
add
into
sbb
fucomip
and
insb
push
lahf
adc
push
xchg
jnp
jo
notl
cmp
scas
icebp
dec
mov
cld
sub
xchg
bound
incl
pop
addr16
add
popf
adc
dec
aad
pop
insb
ret
sbb
lcall
sub
insl
cs
testb
add
inc
or
inc
add
test
mov
fsubs
jno
inc
iret
out
mov
mov
pop
dec
xchg
jge
iret
lock
imul
mov
xchg
leave
aam
and
mov
jle
cwtl
pop
dec
sbb
movnti
stos
inc
ds
shr
pop
mov
rcr
adc
fists
mov
std
loop
test
and
inc
in
fldcw
mov
and
call
add
dec
sahf
lret
add
or
push
cmp
or
dec
push
sub
xchg
sub
pop
iret
inc
stos
lods
xchg
mov
xchg
pop
loopne
inc
in
scas
ret
scas
cmpsl
int3
lahf
pop
xor
scas
int3
push
sbb
icebp
sbb
mov
mov
and
inc
adc
sub
lahf
sub
mov
jg
shr
mov
aam
fidivl
push
mov
xchg
mov
mov
int
push
pop
aam
mov
mov
mov
bound
mov
fwait
jbe
add
xor
add
gs
stos
sbb
dec
hlt
mov
mov
add
sti
push
mov
js
loop
aad
cmp
lcall
pop
ja
or
cs
push
jl
inc
dec
xchg
mov
cmp
add
call
sub
aas
stc
nop
fidivrs
jl
push
je
les
dec
aam
jp,pn
mov
fistps
xor
mov
out
mov
jmp
sub
in
test
pop
stos
mov
jg
xor
aaa
out
cmp
mov
in
lahf
aas
shll
outsb
mov
fiaddl
aas
add
iret
mov
loopne
pop
and
addb
xchg
lea
hlt
adc
push
mov
je
push
inc
pop
outsb
aas
push
mov
push
nop
sti
mov
jb
xchg
lcall
xchg
lods
jb
pop
nop
mov
inc
les
pop
jle
sbb
cmc
jns
pop
imul
fwait
scas
inc
adc
mov
fidivl
jge
imull
sub
pop
push
mov
adc
pop
xor
inc
dec
pop
or
push
iret
idivb
jno
lret
jns
mov
or
xlat
sbb
mov
sahf
out
rclb
xlat
popf
sub
sbb
mov
cmpsb
lret
insl
jmp
aas
sbb
dec
pusha
das
or
lret
push
push
xchg
cmc
gs
xlat
ljmp
fidivrl
mov
int
and
adc
pop
lahf
add
jno
add
bnd
mov
shrl
sub
sahf
or
arpl
cltd
pop
ljmp
push
in
sbb
roll
insl
add
xchg
shl
in
lods
bound
data16
xorl
jns
xor
push
mov
gs
dec
les
leave
adc
mov
mov
or
insb
adc
dec
jbe
int3
into
xlat
int
inc
das
aad
jno
jno
sbb
mov
pusha
jl
test
inc
mov
xchg
lds
lds
data16
fistpl
es
xlat
mov
mov
mov
mov
mov
cltd
lcall
popf
dec
pop
or
mov
jmp
jge
aam
jl
xor
iret
push
jecxz
hlt
push
cs
out
add
movsl
mov
insb
loope
cwtl
gs
xchg
push
jmp
xlat
jne
sub
mov
add
shlb
adc
jp
jl
push
cmc
mov
sbb
push
dec
push
cmp
adc
aaa
subl
push
pop
sub
and
xchg
enter
inc
in
xor
mov
js
lods
dec
push
dec
sub
or
sub
xchg
adc
lea
ret
adc
int3
out
hlt
mov
push
lea
push
sub
fstpt
and
sub
jp
das
adc
aam
icebp
enter
push
xor
sbb
mov
jl
cmp
or
push
xor
sub
pop
ss
xor
push
cmc
aad
cld
js
dec
inc
jbe
out
jno
or
int3
sbb
fldcw
adc
popa
ss
stc
stos
stc
notb
pop
mov
nop
pop
imul
daa
shr
cwtl
jns
subl
mov
or
push
dec
add
movsl
mov
adc
pop
adc
xchg
pop
mov
mov
imul
data16
pop
xor
sub
pop
jnp
test
insl
cmp
cmp
pop
ljmp
xor
inc
dec
repz
repz
inc
add
stos
sbb
xor
dec
inc
jbe
xor
pop
cmp
daa
test
clc
pop
jg
popa
or
sahf
das
mov
insb
das
iret
jmp
fidivl
decl
movsb
sub
jg
fildl
push
xor
jb
cltd
rorl
andl
fs
ds
movsl
popa
lret
jae
xor
icebp
les
lods
cmp
sub
add
pop
jmp
push
jge
enter
and
push
popf
cli
cli
int
dec
add
cmp
je
movsb
add
jae
push
push
adc
cmp
jno
cmp
pushf
gs
mov
or
call
mov
int3
nop
ss
loope
xlat
xor
jl
pop
imul
dec
cmpsl
ja
arpl
and
add
pop
insb
fcompl
call
xchg
xor
dec
aam
pushf
lea
push
aas
adc
call
cmp
repnz
push
test
mov
push
aas
dec
and
sbb
je
jno
push
cmpsb
sbb
mov
and
std
or
data16
std
shl
or
filds
pop
sub
test
sbb
dec
outsl
movsb
rorl
mov
push
xor
xor
cmp
sub
xchg
ljmp
dec
jmp
lods
paddusw
hlt
mov
pop
push
cmp
scas
lahf
mov
push
mov
and
add
pop
lcall
xor
pusha
loopne
ss
add
dec
rcrl
les
sbb
mov
cmp
fstpt
gs
outsl
shl
and
mov
mov
or
add
jl
jns
adc
sbb
roll
mov
je
fs
mov
stos
adc
push
and
adc
jg
mov
sbb
mov
out
lcall
mov
push
sahf
sbb
jb
mov
xchg
cwtl
rcrb
cmp
cmpl
add
outsl
lcall
push
int3
into
clc
jge
mov
in
fstpl
push
jecxz
inc
addr16
outsb
cmpsl
jecxz
lock
sub
cmp
bound
loop
sbb
or
xchg
add
and
ss
cmp
jnp
mov
sahf
cmp
pop
movsl
enter
and
xor
scas
clc
aas
loop
pop
jns
fnstenv
popf
sub
mov
ljmp
ffree
xor
test
pop
test
cwtl
inc
fistps
adc
add
dec
repnz
add
push
out
cmc
cli
or
out
pop
lret
mov
jp
jl
xchg
adc
gs
daa
in
in
sub
out
pop
ret
repz
mov
js
ss
ret
shl
shrl
fisttps
mov
pop
lcall
pop
mov
pop
stc
ds
clc
movsb
es
xchg
lock
lods
sbbl
xor
xchg
popa
add
xor
test
xor
jne
mov
inc
std
cwtl
add
lahf
mov
mov
mov
loop
popa
gs
push
mov
cmp
fcmove
inc
cmp
imul
sti
and
frstor
add
mov
out
stos
pusha
enter
hlt
xchg
stc
sub
js
test
inc
std
mov
xlat
pop
dec
js
addl
mov
lods
loope
dec
call
mov
cmp
sahf
push
push
js
arpl
dec
mov
jmp
cwtl
push
mov
setae
nop
rorl
cmpsl
mov
divb
jl
and
js
pop
jl
loopne
in
or
cwtl
popl
xchg
jmp
aas
lea
dec
popa
fstpt
xor
pop
lock
xor
jne
inc
inc
in
pop
dec
js
out
mov
cmpsl
jbe
xor
jge
shlb
leave
sbb
scas
pop
add
dec
clc
mov
cld
pop
cmpsb
cmp
insl
addl
jae
je
add
pop
add
add
cmp
fists
or
add
xchg
jg
mov
add
je
adc
adc
ret
cmp
icebp
jge
and
les
popa
xchg
jbe
xor
pushf
loop
clc
xchg
popf
inc
dec
enter
pop
fidivrl
leave
cmc
jns
mov
and
shlb
fistpll
aad
arpl
xor
cld
add
or
jle
lret
inc
int
or
outsb
repz
lds
lahf
shrb
cmpsb
push
inc
jnp
adc
push
add
cmp
mov
dec
ds
ret
fdivrs
xor
push
dec
out
roll
mov
nop
sbb
mov
lock
jnp
cmc
subb
cmp
mov
shrl
jo
inc
xchg
push
push
sub
lock
mov
mulb
xor
pushf
test
push
mov
mov
add
and
jle
test
xor
pop
outsl
jmp
mov
pushf
fdivp
stos
cmc
iret
pop
lcall
pop
add
pop
push
push
hlt
iret
push
cmpsb
pop
popf
les
rcr
out
lret
inc
and
sub
add
xorb
push
and
cmp
sbb
sub
cmp
dec
daa
pusha
imul
fstps
cwtl
mov
orl
sar
les
dec
nop
fidivrl
lret
inc
push
and
jno
aam
mov
aam
inc
jmp
add
xchg
or
or
pop
out
test
scas
sub
sub
jp
popf
dec
sub
push
rep
mov
mov
mov
ss
lea
mov
aam
popf
arpl
sahf
ds
mov
or
adc
or
pop
mov
add
mov
xchg
mov
lcall
push
mov
push
repz
xchg
or
dec
xor
jmp
xchg
sub
pop
shrb
push
stos
sbb
pop
jg
jge
loop
add
and
dec
arpl
mov
mov
mov
pop
inc
xor
paddb
mov
jmp
xor
jne
in
mov
cmp
popf
sbb
loop
arpl
cld
arpl
rclb
adc
dec
fcoms
aas
adc
cmp
sbb
inc
enter
aam
pop
jp
dec
add
mov
ja
sub
push
jle
hlt
push
jp
xlat
sahf
insl
fs
addr16
adc
add
pop
lods
pop
inc
push
mov
jle
sbb
inc
sbb
ds
mov
jb
pop
imul
mov
scas
cld
loope
or
lds
lods
movsl
push
adc
sbb
lods
add
lcall
and
fildll
xor
pop
lahf
ret
int3
fstl
adc
adc
xor
lret
jne
push
jae
loopne
xchg
rcll
loopne
pop
mov
inc
add
fdivrs
sub
mov
iret
cmp
fadds
sub
in
jmp
or
pop
out
xchg
mov
add
sahf
test
pop
stos
cmp
mov
mov
xor
popf
adc
sbb
lods
in
dec
and
inc
and
imul
scas
cwtl
imul
mov
iret
ljmp
add
and
pop
addps
cmp
dec
xor
adc
mov
and
ret
sub
arpl
cmp
movb
and
push
ja
rol
lcall
or
mov
movsl
dec
inc
and
and
and
test
xor
movsl
loopne
and
dec
lock
jp
xchg
daa
in
adc
inc
into
adc
jg
add
popa
sbb
in
pop
lods
out
push
fs
scas
in
jno
paddd
lcall
int3
push
and
push
in
mov
icebp
dec
xor
pop
mov
ds
loopne
jmp
sub
xchg
shll
push
jle
and
mov
ljmp
aad
push
cmp
adc
leave
pop
daa
stc
jo
aaa
mov
bound
loop
leave
or
lcall
shr
pop
iret
mov
sbbl
sti
jge
push
fimull
jecxz
mov
mov
xchg
sbb
dec
push
add
mov
lret
xchg
add
adc
test
cmp
hlt
jge
push
into
loope
push
les
cmp
inc
xor
out
inc
js
rclb
pop
mov
es
int
das
xor
movlhps
cwtl
into
sbb
sahf
dec
fs
cmp
cmpsb
push
xor
or
pop
push
fmuls
lds
pop
in
dec
js
dec
call
pop
shrl
cmp
push
mov
lds
mov
loop
mov
mov
pop
shlb
addr16
cmp
inc
jp
pop
push
push
clc
addr16
cwtl
xor
cmpsl
neg
cwtl
pop
js
inc
cltd
cli
arpl
adc
add
jl
adc
dec
or
cs
mov
in
pshufw
fstpl
rol
jo
ret
ja
and
loopne
dec
sub
mov
or
jae
pop
and
push
mov
xchg
es
test
lea
test
imul
fucomp
add
ja
iret
inc
and
test
int3
dec
jmp
xchg
push
mov
mov
push
xchg
mov
push
or
aam
mov
int3
fsubrl
cld
movsb
aas
mov
sbb
and
mov
mov
xchg
xor
adc
cltd
add
fdivrl
js
int3
mov
adc
xorb
ficompl
xchg
push
sub
and
jecxz
aas
xor
or
incl
mov
aaa
add
cs
xchg
call
cmp
repnz
int3
fimuls
or
das
movsl
add
aad
xchg
add
push
vcvtpd2psx
sbb
fidivrl
sbb
repz
push
sbbb
mov
jnp
xchg
outsb
sbb
dec
mov
stos
mov
mov
fsts
xchg
mov
pop
popa
icebp
lcall
out
mov
das
adc
jmp
mov
icebp
cmpsb
mov
cld
fmuls
pop
push
pop
sub
mov
and
or
in
mov
dec
fcmovne
in
sbb
sbb
add
xchg
dec
push
in
cld
loope
inc
loopne
iret
cmp
testb
inc
add
xchg
jbe
jmp
sahf
sti
mov
xor
outsb
and
popa
testb
sbb
jle
inc
ds
in
xchg
or
cmp
nop
jno,pn
cs
sub
fiaddl
rcrb
and
scas
dec
xchg
ret
add
xor
push
cmp
pop
push
in
add
mov
loope
or
xchg
or
xchg
leave
das
sub
or
xor
push
pop
movsl
add
dec
xchg
jnp
and
ja
xchg
ss
inc
pop
xchg
cs
cmp
out
jge
push
jge
fbstp
and
push
cs
cmc
mov
js
inc
in
ljmp
push
xor
gs
sbb
and
in
inc
pop
dec
xchg
lock
mov
xchg
fwait
adc
stos
add
out
add
sub
mov
inc
add
jg
ret
xchg
push
add
fildl
mov
ucomiss
sub
sub
cmp
loopne
aam
roll
cmpsb
and
xor
push
stc
test
cs
mov
xor
sub
leave
stc
rorl
push
or
pop
arpl
push
popf
adc
cli
pop
scas
or
xchg
adc
pop
sbb
scas
dec
adc
lods
and
sub
mov
or
xor
dec
cmc
and
lahf
movsl
pusha
mov
push
adc
push
dec
es
and
pop
and
mov
inc
test
lock
and
add
cmc
inc
pop
inc
and
xchg
icebp
ljmp
sub
mov
mov
mov
in
push
rcl
or
pop
cmpsb
int
in
pop
jne
fstp
adc
ret
andb
mov
jle
lcall
filds
shrl
inc
shll
fcompl
jb
xchg
ret
jne
dec
and
sbb
and
test
decl
jmp
mov
push
xor
or
dec
pusha
adc
inc
inc
fldl2e
xor
inc
lcall
fnsave
mov
ds
fld
mov
inc
xchg
lahf
add
fnstenv
inc
movsl
dec
call
or
pop
push
insl
lcall
test
cwtl
cmpsb
aaa
lahf
leave
fisttpll
pop
push
xchg
shll
mov
pop
cmp
sbb
push
mov
iret
mov
pop
mov
dec
mov
dec
and
sbb
fistps
inc
inc
or
mov
iret
lods
sub
andb
mov
inc
pop
xchg
jne
out
sub
shlb
fs
push
push
add
in
inc
ja
stc
hlt
fcompl
xor
add
jle
adc
mov
adc
insb
imul
mov
or
cmp
enter
jl
xchg
lret
and
sub
fwait
mov
lret
push
push
lock
repz
mov
xchg
cmc
or
add
jmp
pop
icebp
dec
cmpsb
pop
jb
jnp
shrl
ret
aaa
cmc
in
ja
sti
fists
add
xchg
dec
jnp
fidivrl
and
lahf
inc
xchg
sbb
scas
mov
jno
xchg
xor
xchg
mov
ret
xchg
mov
mov
push
mov
cmp
jecxz
lahf
cmp
sub
inc
ret
lea
sbb
cli
bound
hlt
and
sub
jle
or
test
xchg
xor
jmp
inc
loopne
gs
push
push
xor
jno
cwtl
ja
mov
push
push
mov
fisttpl
out
aas
lret
sub
ljmp
cld
sbb
pmulhw
mov
sti
mov
rcl
testb
mov
test
lock
mov
pushf
mov
shll
inc
jmp
sti
arpl
cltd
arpl
notb
shll
mov
mov
repz
repz
sub
xor
or
mov
mov
adc
and
in
outsl
sbb
or
or
pop
std
out
jmp
xchg
mov
dec
popa
imul
pop
mov
sub
jne
push
xchg
push
add
sub
inc
mov
mov
xchg
and
jae
cmp
icebp
sub
xchg
fs
adc
je
aam
and
or
jp
je
jmp
mov
inc
out
dec
int3
lods
into
mov
inc
outsl
out
aaa
data16
xchg
into
mov
lcall
cmp
pop
call
sbb
xor
movsl
subb
cwtl
inc
pop
pop
xchg
dec
inc
test
ja
fsubl
push
enter
gs
out
dec
pop
or
sarl
xorb
add
cld
cmp
gs
lret
pop
aad
jg
aam
pop
sarl
xchg
pop
arpl
xchg
int
sub
dec
fs
popl
icebp
imul
ret
icebp
sbb
cmp
lods
fdivl
pop
shll
dec
adc
mov
fs
push
cld
adc
test
scas
xlat
pop
dec
mov
repz
adc
imul
inc
test
inc
inc
mov
daa
outsl
fdivrs
mov
push
fildll
movsb
lahf
mov
xchg
mov
xor
ds
inc
mov
subb
inc
push
std
daa
or
fidivl
dec
sub
cltd
test
cmp
mov
add
jnp
fildl
fwait
mov
mov
int3
je
lahf
into
push
aad
pop
xchg
je
inc
les
faddl
rcrb
add
lret
fstp
mov
pusha
or
fs
dec
pop
mov
aas
ret
insl
lahf
cmp
addr16
cmpsb
andl
addr16
mov
outsb
sub
lods
push
test
lock
stos
adc
pop
out
pop
xchg
imul
iret
pusha
pop
shlb
mov
std
pop
shl
mov
leave
adc
mov
jmp
add
push
mov
dec
pushf
ja
addr16
fistpll
cmc
dec
and
dec
int3
mov
sbb
or
test
sahf
inc
add
jge
roll
pop
jmp
cltd
add
adc
test
in
dec
loope
mov
call
sbb
iret
arpl
out
mov
ret
dec
repnz
jno
pusha
arpl
sbb
inc
aaa
mov
mov
add
cmp
xchg
inc
imul
fs
push
les
pop
rcll
mov
jns
in
xor
cmpsl
add
add
mov
inc
mov
decl
or
or
xor
pop
imul
cs
adc
rclb
clc
orl
arpl
pusha
adcb
dec
push
jecxz
leave
mov
push
xor
hlt
cmpsb
loope
xchg
dec
test
xor
dec
push
rorb
fnstenv
adc
sarl
js
shrl
and
jae
lret
inc
and
in
cmp
mov
int3
jp
mov
xchg
punpckldq
pop
int
inc
jmp
lea
aam
decl
inc
cmpb
bound
adc
scas
adc
imul
xor
js
mov
jbe
pop
outsl
insb
fcompl
add
insb
and
mov
stc
push
add
hlt
push
sub
lea
cmp
cmp
icebp
aas
xor
pusha
adc
cmp
test
inc
sbb
fwait
rorb
add
inc
fmuls
mov
das
mov
cmp
pop
leave
addr16
divl
inc
int
mov
stos
insb
fcomps
into
mov
mov
jp
fwait
sub
rcll
ror
gs
push
mov
roll
repnz
cli
mov
jnp
jge
jecxz
mov
in
xchg
in
mov
sbb
xchg
xor
sarl
in
imul
cmp
mov
inc
js
out
xchg
int
fwait
push
xor
mov
int3
leave
lret
adc
leave
lods
hlt
sar
or
lds
das
push
dec
shrl
jmp
test
lcall
daa
outsb
cmc
aaa
inc
fsubrl
sbb
cltd
ficoml
dec
and
pop
adc
and
push
inc
movsb
xchg
mov
js
cld
das
mov
scas
divb
xor
inc
movsl
aas
stos
mov
nop
movsl
cmpsb
ret
pop
ret
test
adc
mov
sahf
and
adc
jmp
cmp
lods
movsl
loope
xchg
lret
fisttps
or
scas
or
mov
jmp
dec
repnz
fimull
jmp
jne
scas
inc
repz
mov
xor
mov
push
push
sahf
xlat
xchg
out
ret
lret
jmp
movsl
pop
sbb
mov
pop
out
push
icebp
push
fisttpll
mov
psubd
loope
jle
or
mov
sti
push
cltd
fsubl
sbb
sti
mov
mov
ja
mov
dec
movsl
adc
fsubr
mov
data16
lea
add
es
aam
sub
cmp
aas
cld
shlb
enter
cli
out
test
mov
mov
bound
clc
mov
aad
fsubs
cmp
std
mov
jge
imul
cmp
mov
test
into
add
or
repz
sbb
fsubrl
push
test
push
adc
adc
lea
xchg
pop
repnz
cmp
movsb
dec
mov
xor
jecxz
xchg
and
push
addr16
pop
or
and
jno
lock
xor
ret
fwait
sub
and
xlat
shlb
into
aaa
clc
lods
out
sbb
icebp
insb
xor
jecxz
insb
cmp
lret
and
rorl
test
out
loop
add
mov
gs
jmp
add
push
xor
test
data16
push
lcall
stos
cmp
pop
ljmp
sub
orl
xchg
xor
or
push
xchg
inc
rcr
jle
sbb
sbb
aam
loopne
sarl
adc
pop
cmp
jb
add
rcrl
mov
jns
cld
lods
xchg
or
lahf
mov
rcll
lds
aam
enter
xor
int3
imul
fistpl
mov
inc
pop
cmp
jl
lock
jp
sbb
mov
test
lcall
mov
into
lahf
add
adc
sbb
idivb
and
ret
call
imul
pop
jle
xor
ljmp
inc
jbe
int
pop
lea
mov
xor
shlb
in
dec
icebp
pinsrw
pop
movsl
ss
jge
push
xor
stos
xchg
adc
xchg
inc
mov
sbb
jo
cmp
jecxz
sbb
adc
mov
icebp
jecxz
mov
and
insl
xorl
mov
popa
scas
popf
push
popf
shlb
call
cltd
fdivrs
orl
sbb
push
addr16
inc
lods
jo
enter
sahf
xchg
dec
imul
jno
mov
mov
ret
push
ret
mov
rclb
lret
adc
aaa
sar
push
call
mov
ficoms
add
les
call
pop
mov
or
int3
fs
xorb
push
pop
sub
pop
aam
shl
pop
sub
mov
mov
frstor
dec
in
pop
movsb
and
ret
mov
les
jl
outsb
loopne
lret
shrb
pop
dec
push
or
adc
mov
inc
pop
xchg
jb
and
push
cltd
inc
scas
adc
out
dec
sub
xor
in
jge
scas
sbb
dec
and
sbb
aam
sub
mov
cmp
mov
pop
lret
xor
shrb
sbb
sbb
xor
fsubp
sub
subl
dec
iret
cmp
call
push
insb
pop
sub
sbb
cs
decl
and
scas
inc
push
dec
mov
sahf
cmp
or
cmp
movsb
psraw
loope
div
mov
xor
or
pop
clc
push
and
pop
mov
pop
test
ljmp
adc
push
and
mov
ljmp
out
sbb
inc
and
imul
stos
popf
ret
insl
dec
dec
cmpsl
popf
xlat
jne
pusha
sahf
cmp
jecxz
push
push
aam
out
cmp
cwtl
outsl
mov
xor
mov
dec
loope
daa
pop
out
push
shlb
mov
sub
call
cmp
jnp
push
popa
dec
loopne
aam
pop
mov
inc
mov
fiaddl
mov
scas
fcomip
inc
sti
pusha
sbb
jp
imul
stos
add
add
and
dec
mov
stos
sub
aaa
ljmp
cmp
add
out
pushf
lods
adc
pop
test
sti
sbb
iret
mov
clc
sbb
iret
ret
dec
dec
or
cmp
pop
push
jo
xchg
sub
inc
push
adc
arpl
mov
out
pusha
push
mov
xchg
popa
dec
add
cmpsb
or
adc
pop
int3
ret
rcrb
sub
xor
ss
jle
adc
push
scas
dec
pop
bnd
or
into
ljmp
shll
popf
jp
rcl
cld
jmp
and
ror
cmp
adc
and
pop
loop
add
mov
jmp
outsb
add
dec
cmpb
push
mov
out
out
stos
rolb
sub
cmpsb
mov
sub
test
jmp
lock
push
dec
and
in
int3
lcall
pop
in
xor
jmp
xchg
fbstp
sbb
xorb
push
std
jb,pn
das
cmp
cmp
aam
lea
int3
adc
test
and
ret
add
add
repz
sar
mov
les
add
push
mulb
jmp
icebp
ret
xor
or
dec
sub
out
push
jecxz
xchg
push
add
push
mov
xor
js
pop
repz
sbb
movb
push
adc
and
adc
dec
sub
push
adc
lock
push
outsb
cmp
or
add
fadds
add
cltd
pop
mov
jbe
dec
sbb
rcll
pop
add
clc
jmp
mov
test
jg
and
adc
pop
aad
xchg
push
cli
test
pop
jns
cwtl
call
hlt
xor
dec
xor
iret
cmc
dec
lods
jmp
jno
fiaddl
xchg
or
outsl
cs
pop
push
sub
dec
lds
inc
and
mov
adcb
mov
cmp
mov
pop
cmp
dec
cmp
xlat
mov
jmp
cli
test
jmp
inc
jo
cmp
bound
xor
imul
push
jg
or
inc
test
jp
inc
or
xor
repnz
rorl
test
test
push
cmp
ja
pop
sub
dec
js
clc
rorb
inc
or
pop
loope
leave
and
mov
jbe
xchg
cmpsb
push
cli
repz
lcall
push
cmc
loop
mov
mov
xlat
xchg
cmp
insb
pop
mov
divl
data16
pop
je
lods
lock
movntps
sbb
andl
xchg
cmpsb
push
sub
enter
int
sbb
loop
out
mov
addl
loop
gs
sbb
fnsave
test
xor
adc
outsb
pushl
or
mov
pop
lahf
or
cmp
lahf
pop
cmc
xor
xchg
jns
std
dec
aaa
jp
sbb
clc
outsl
pop
xchg
sub
mov
movsb
or
dec
cltd
cmp
pusha
push
ljmp
test
in
inc
stc
mov
mov
lock
xchg
fnsave
sub
ret
mov
inc
stc
inc
mov
in
push
stc
add
and
mov
enter
iret
aam
mov
icebp
push
pop
sbb
pop
fwait
pop
mov
inc
dec
dec
fnstcw
sub
into
out
jp
or
test
sub
lahf
mov
cmp
mov
push
aam
jb
aas
cmp
lret
ficoms
inc
flds
ret
stc
pop
stos
mov
out
inc
xor
mov
lret
inc
add
jmp
rorb
add
inc
ret
mov
mov
adc
mov
mov
mov
dec
xor
jle
cs
push
adc
test
add
xchg
clc
rol
xor
repz
stos
mov
pushf
pop
or
aaa
xor
clc
xorb
cwtl
mov
shrb
aas
fcoms
mov
scas
jg
add
push
mov
mov
mov
lds
fidivrl
pop
add
dec
xor
adc
pop
test
push
push
jge
and
shlb
mov
jae
push
dec
push
jmp
sahf
mov
negl
lods
mov
shrl
into
rorl
push
aam
std
insb
mov
xchg
mov
fbstp
mov
lahf
lds
ret
les
jge
pop
mov
mov
decb
push
out
ds
ljmp
mov
inc
pop
sub
mov
pop
std
rclb
add
mov
aam
call
aas
nop
jno
jge
jae
test
lret
int
and
aaa
push
orb
mov
jmp
mov
aaa
xlat
xchg
out
dec
sti
inc
mov
int3
sub
sub
add
test
ret
and
jne
jae
out
and
jne
aam
push
sub
nop
lds
and
pop
mov
pop
adc
outsb
push
or
xor
pushf
mov
mov
fdivr
lods
pop
lahf
out
mov
dec
je
cmp
inc
push
sub
subl
mov
mov
fstpt
sub
inc
ficoml
jnp
in
dec
jbe
lods
iret
shll
mov
lods
fnstenv
pop
cltd
push
jmp
sub
adc
push
es
xchg
or
jno
lcall
mov
enter
pop
dec
pushf
mov
add
cmc
cltd
xchg
add
mov
and
push
mov
faddl
xchg
mov
inc
cwtl
dec
divb
mov
sub
lods
sbb
nop
inc
pop
sub
and
lock
cmp
or
mov
push
mov
dec
insb
leave
cmp
mov
aad
jmp
js
inc
and
jnp
clc
sub
sti
sti
ljmp
hlt
xor
xchg
outsl
dec
mov
push
or
dec
or
das
iret
pop
pop
cld
sub
inc
in
jmp
and
mov
fisttpll
in
cmp
faddl
mov
notb
hlt
out
mov
and
inc
xchg
and
mov
mov
pop
les
jmp
insl
adc
lock
cmp
mov
popa
daa
cltd
cmp
xchg
ficoml
dec
shrb
clc
add
cmpsl
mov
rcrb
ja
lret
push
dec
jecxz
xor
mov
outsl
les
ss
dec
lret
mov
arpl
fwait
xchg
leave
stos
jb
xor
mov
xchg
jno
push
sarl
xor
adc
mov
ficomps
add
mov
adc
push
push
adc
mov
xor
imul
sbb
ja
loopne
test
movsl
outsl
test
jmp
mov
adc
mov
leave
cld
dec
cmp
inc
jp
sub
insl
test
mov
fbld
push
mov
inc
dec
int
adc
push
scas
andl
xchg
xchg
xchg
lahf
jg
clc
mov
sbb
cwtl
fwait
push
dec
xor
addr16
push
std
es
aam
ret
negl
cltd
pop
add
add
mov
dec
mov
lret
insb
pop
xor
fs
movsb
aaa
ficompl
dec
xchg
push
mov
test
or
ja
in
inc
mov
data16
pop
xchg
mov
sbb
dec
mov
dec
ds
loope
or
ljmp
push
pop
test
mov
mov
xchg
jg
jnp
xchg
sbb
andl
jne
xlat
xchg
sbb
or
xor
xor
push
inc
cmp
add
sbb
fwait
enter
xorl
addr16
in
xchg
and
into
or
cwtl
cld
jae
mov
xor
or
mov
add
pusha
push
cmp
pop
loopne
call
cmpsb
and
sub
push
inc
push
sbb
and
outsb
jno
adc
in
int3
mov
mov
pusha
cmp
cltd
jmp
enter
sahf
jg
ret
addr16
mov
cmp
repnz
jb
jmp
lcall
pop
js
xchg
pop
mul
jno
push
rcl
push
xchg
pop
jo
add
inc
cmpsb
test
sub
repz
stos
cmpsb
mov
lahf
inc
cmpsl
mov
cmp
pop
inc
outsb
lods
repnz
movsb
aam
adc
mov
sbb
push
cmp
cwtl
in
movsb
push
icebp
pop
outsb
js
or
pop
sbb
mov
or
sub
sub
xchg
insb
mov
lahf
daa
cltd
or
pop
or
or
int
addl
or
jnp
mov
lds
mov
int3
mov
loope
iret
arpl
popa
icebp
jl
cmp
cmp
les
scas
add
rorl
leave
mov
inc
nop
push
fstpt
mov
or
in
insb
loop
in
sti
sbb
and
mov
lods
mov
aaa
xchg
test
cmp
inc
push
pop
jecxz
push
push
and
decl
xorb
push
fsubs
push
ljmp
stc
adcl
adc
out
and
inc
mov
ja
and
leave
add
aas
shrl
adc
sbb
js
std
push
cwtl
cmpsl
aas
inc
imul
ss
ret
cmp
jecxz
push
je
xorb
ficompl
mov
faddl
lds
adc
addl
inc
pop
pop
in
arpl
xchg
inc
rcr
stos
lretw
push
aam
loopne
adc
push
jmp
push
sbb
and
xlat
push
imul
jecxz
adc
sbbl
or
mov
scas
mov
out
sbb
shll
repnz
sbb
push
and
loopne
mov
jl
out
ds
int3
rcrl
dec
inc
inc
bound
filds
jo
sahf
inc
jb
ficoml
adc
insb
and
je
push
and
mov
mov
cltd
ds
mov
in
mov
jae
aam
pushf
fisubl
pop
pop
in
jp
pop
das
pop
popf
jns
movsb
lret
cmpsl
and
or
dec
or
xchg
xor
icebp
cmc
out
push
xor
dec
inc
shlb
sbb
sub
mov
icebp
repz
pop
test
add
sub
xor
sub
sbb
repnz
inc
scas
pop
cltd
inc
lods
or
and
aaa
sub
fcomps
pop
push
call
out
inc
ss
adc
xor
test
cmp
jg
sbb
pop
addr16
dec
sbb
into
jecxz
mov
cmp
push
test
outsl
aam
mov
shlb
mov
jp
mov
pop
dec
mov
call
inc
pop
xchg
outsl
icebp
stos
filds
fistl
loopne
mov
loop
mov
lret
xchg
in
xchg
iret
sarl
jnp
jo
xchg
clc
xchg
loop
xor
push
xchg
inc
arpl
cltd
inc
mov
inc
adcb
jl
mov
pop
mov
mov
shrb
lods
mull
leave
xorl
inc
int3
jl
sub
cmpsl
inc
adc
push
pop
fwait
push
jg
inc
insb
xchg
adc
lods
jge
push
mov
and
int
repz
push
push
or
mov
sbb
out
add
cmp
fdivrp
mov
adc
push
cmp
popa
and
clc
mov
cmpsb
pop
mov
jge
inc
lcall
jno
sub
ret
jo
mov
xor
test
mov
push
or
fs
popa
and
inc
aaa
call
sbb
cld
mov
test
call
enter
inc
jmp
cltd
movsl
add
pop
fsubrs
cmp
outsl
xchg
mov
xor
push
pop
fucomp
cmp
jg
cmp
mov
xchg
loop
fadd
movb
xchg
fs
ficoms
imul
in
int
xchg
jmp
mov
mov
in
outsb
pop
pop
mov
mov
aam
inc
lods
pop
sbb
and
mov
sbb
mov
mov
std
sbb
stos
fldenv
stos
or
scas
iret
xor
add
repz
jmp
xchg
mov
sub
pop
xor
sub
pusha
loop
lahf
inc
sarb
call
sub
loope
sahf
push
in
in
xchg
cli
stos
test
mov
add
adc
sub
sbb
sarb
ret
into
ss
xchg
pop
sarb
add
or
out
inc
adc
mov
in
test
dec
sbb
int3
cmc
lock
adc
mov
adc
jmp
adc
xchg
jp
pop
cs
rorl
push
cwtl
bound
rcrb
sub
mov
fists
lret
je
out
push
and
gs
ret
sbb
fldt
inc
add
cmp
daa
xor
jmp
mov
xor
lods
movsb
rcrb
js
sub
or
mov
outsl
add
mov
lcall
mov
sbb
ss
push
adc
pop
test
mov
adc
or
cmpsl
jecxz
insb
in
shlb
mov
jo
dec
push
mov
pushf
int
jge
leave
adc
sub
shll
dec
lods
jle
es
inc
and
inc
out
shrb
inc
adc
jmp
lds
jae
xor
sbb
loop
push
push
stos
sarb
sti
fst
jmp
pusha
mov
inc
push
cmp
hlt
mov
ret
or
xor
fs
hlt
cmpsl
and
movsb
negl
and
leave
sbb
aad
sbb
xchg
aad
pop
mov
test
pop
xor
sbb
inc
xor
ret
mov
pop
pop
lds
lds
aaa
inc
andb
into
out
sub
mov
in
and
fistpll
dec
mov
fwait
inc
lahf
cmp
inc
test
popa
mov
inc
outsb
add
movsl
aad
int
fsubs
cmpsl
xchg
hlt
sbb
mov
fildll
and
js
xchg
sbb
pop
xchg
idivl
jp
pop
jb
jno
cmp
rcrb
push
mov
dec
jecxz
sarb
loope,pt
add
adc
imul
sub
mov
fistl
call
xor
jecxz
orl
daa
pop
fs
ret
jne
cmc
aas
and
sub
shl
les
outsb
cltd
push
lods
inc
pop
stos
xor
adc
xor
and
jp
xchg
or
ds
les
jb
test
pop
sti
adc
lods
test
fidivrl
loopne
cld
jmp
xlat
mov
xchg
or
jecxz
and
mov
mov
pop
push
es
and
in
xchg
xorl
cltd
cld
sbb
inc
xor
xchg
mov
inc
scas
push
addr16
mov
aam
stos
jb
xchg
dec
insl
dec
sub
testl
mov
mov
sbb
xchg
push
xchg
shrb
outsl
xor
jg
inc
xchg
adc
shll
jp
fildl
jno
inc
test
sbb
inc
cmpb
ret
or
pusha
outsb
xchg
jecxz
cmp
mov
xchg
in
pop
jae
adc
mov
or
mov
jnp
sub
cmpsb
pusha
sub
mov
movsb
fldcw
sub
mov
pop
out
mov
jae
inc
pusha
sbb
mov
cs
adc
cmp
js
imulb
xlat
dec
xchg
cmp
xor
iret
cmpsl
push
and
mov
ret
mov
cmpsl
pop
and
xor
lock
pop
int3
pop
mov
pusha
pop
inc
sbb
arpl
clc
jno
jae
lea
incb
popf
sub
popf
mov
mov
sarb
xor
jle
sbb
mov
dec
xor
xchg
push
mov
aas
out
xchg
sbb
cli
int
cld
push
mov
and
ljmp
mov
cltd
fstps
push
pop
pop
xchg
mov
into
mov
lret
adcb
sub
lods
test
out
cmp
rcrb
into
and
dec
data16
and
test
in
jne
push
pusha
sbb
rcr
in
adc
xlat
sbb
mov
mov
stos
jle
movsb
mov
xor
lods
iret
xchg
and
push
int3
shr
cmp
scas
mov
inc
enter
xchg
data16
ss
mov
lret
push
aaa
punpckhwd
add
pop
sub
inc
xor
inc
aaa
jge
pop
testl
stos
push
jne
aad
pusha
xor
xchg
lahf
cltd
xor
mov
mov
dec
aas
pop
out
ret
scas
fisubl
pop
stc
je
fstl
pop
push
jne
mov
dec
call
mov
fadds
fldt
jbe
rorl
push
xor
sbb
arpl
stos
fildl
adc
in
je
add
in
dec
push
push
ljmp
dec
jo
jg
fcmove
sbb
fdivs
fistl
sub
mov
mov
lods
aas
sarl
lcall
sub
nop
mov
fimuls
mov
pop
nop
clc
sub
push
mov
sbb
push
imul
mov
int
pushf
lods
xor
sbb
imul
and
test
daa
subb
adc
pop
cmpsl
fisttpll
mov
push
pushf
mov
or
lods
mov
nop
sub
jmp
mov
and
or
ret
icebp
shrb
imul
sub
inc
stos
sub
dec
fidivs
fcomps
add
mov
ja
mov
lret
inc
cmpsb
test
adc
jp
xchg
jo
push
into
in
ja
inc
inc
cmp
outsl
jle
xchg
mov
mov
call
popa
push
lods
hlt
xchg
xchg
jge
out
dec
call
popa
aam
push
mov
fstpl
or
and
ret
push
and
mov
stos
dec
xorl
xor
mov
lods
std
sbb
stos
adc
in
fimull
dec
int
divl
pop
xor
sub
cld
jb
cmpl
cs
scas
iret
mov
sub
jo
adc
cmp
mov
jle
sub
ljmp
lret
or
mov
inc
dec
or
testl
in
jo
bound
inc
sub
or
jo
cmc
or
lods
imull
es
outsl
stc
stc
xor
dec
sbb
adc
xchg
lret
int3
pop
push
inc
outsl
mov
inc
and
addr16
cmp
hlt
std
pop
nop
cmpsb
or
xor
cmpsb
mov
loope
mov
and
mov
xchg
jno
push
pop
mov
push
movsb
adc
or
mov
pop
je
mov
loopne
jnp
dec
int3
dec
dec
imul
or
in
xchg
je
dec
mov
adc
or
arpl
push
pop
leave
sub
jbe
in
and
imul
jle
inc
jne
daa
xchg
jns
inc
xor
push
pop
and
test
jo
addl
pop
sti
dec
dec
or
clc
cli
and
mov
push
out
dec
mov
push
iret
ret
adc
imul
jno
or
jb
test
xor
out
sbb
push
das
xchg
xchg
xchg
sbb
mov
mov
mov
das
fdivrs
or
xchg
xchg
pop
pop
sbb
in
xchg
jno
xor
xor
jno
aad
test
lods
lret
jnp
aas
popa
in
inc
xchg
cmpsb
xlat
xchg
and
sbb
push
pushf
shll
shrl
mov
xor
dec
aaa
lods
clc
cli
inc
in
jmp
mov
ljmp
lret
jge
sub
movsl
lret
push
sahf
xchg
fisttpll
int
sub
xchg
cltd
les
ret
jle
pop
mov
sbb
or
dec
xlat
mov
fildl
or
inc
andb
in
les
add
loopne
loop
out
push
incb
adc
xchg
cmpsl
imul
mov
test
mov
adc
ds
clc
mov
lock
out
pusha
xchg
andl
mov
sbb
xor
mov
pushf
fdivrl
or
aad
lods
xor
jo
cmp
mov
fisttpll
ja
push
add
lds
sub
jbe
xchg
pop
int
call
or
in
in
cmp
jnp
xor
iret
into
sbbb
push
sub
push
ljmp
inc
and
or
sahf
dec
inc
mov
rorb
popf
push
rolb
adc
arpl
jge
bound
in
decl
xor
fstpl
sarl
mov
mov
jo
push
ljmp
mov
sbb
pop
mov
mov
dec
or
xchg
jnp
and
push
nop
ss
int
aam
and
jmp
adc
dec
or
xor
cmp
or
rorb
cmp
sbb
or
add
or
push
clc
dec
mov
inc
xor
je,pt
out
push
or
jp
inc
cmp
jnp
or
in
andb
push
movsb
lret
out
pop
mov
ret
mov
leave
sub
sub
mov
inc
insb
sub
inc
mov
xchg
je
xchg
lods
mov
idiv
stos
rorl
sbb
sub
push
pop
pop
push
dec
std
sbb
pop
pop
int3
gs
jno
stos
adc
lahf
and
les
jnp
pop
call
mov
xchg
jecxz
loop
sbb
stc
adc
cltd
add
int
outsb
test
ficoms
je
in
mov
out
mov
shrb
sub
dec
or
sub
dec
dec
out
mov
add
pop
pop
arpl
add
jns
and
popa
mov
mov
insb
repnz
cmp
adc
inc
sbb
pop
push
gs
ds
into
mov
mov
pop
ffreep
sti
addr16
or
sub
inc
lods
inc
jnp
aam
and
sbb
xchg
inc
pop
in
pinsrw
xchg
cltd
pushl
pop
push
inc
pop
mov
inc
jne
lods
mov
mov
xor
sub
push
sbb
das
mov
psubq
pop
sbb
lahf
clc
popa
in
lods
mov
add
xchg
or
push
jl
add
das
popf
jle
lret
notl
cmp
movsb
push
dec
xlat
arpl
fwait
out
int3
shlb
dec
out
ss
dec
push
jp
hlt
mov
je
imul
fcom
mov
inc
clc
inc
pusha
lahf
dec
movsb
xchg
div
lret
and
insl
or
test
jle
pop
sub
sbb
test
std
aas
and
insb
jbe
pop
adc
gs
adc
loope
cld
sbbl
cltd
xchg
jle
adc
pop
pusha
lea
or
fwait
dec
call
pop
mov
adc
orl
and
sub
sub
jp
push
popa
fwait
call
stos
dec
lods
mov
test
jno
xchg
add
scas
fdivs
adc
sub
dec
insb
sarb
xor
aad
mov
xacquire
inc
jnp
jns
decl
rorb
jp
sbb
ret
stos
mov
dec
adc
mov
fsts
jne
xchg
div
xchg
jge
jle
test
movsl
pop
cmp
sbb
add
sarb
ret
fsub
icebp
push
add
ds
repnz
pusha
inc
jno
adc
mov
adc
or
lods
test
mov
loope
stos
lea
aam
in
cli
jae
xlat
xchg
add
nop
push
mov
fldt
adc
rolb
jne
je
add
adc
mov
inc
adc
aam
aas
push
cmc
mov
fidivs
jns
or
cmpsl
mov
aas
xchg
fld
push
mov
cmpsb
or
jmp
pop
movsl
cmc
sbb
mov
fstps
dec
dec
inc
add
fbld
sub
xor
jb
fcmovne
shll
jmp
cmpsl
cld
add
je
lea
pop
imul
imul
dec
insb
xchg
cmp
sbb
sub
add
scas
mov
xor
jnp
mov
int
jl
dec
and
pusha
pop
pusha
mov
in
jns
sbb
add
leave
jl
mov
mov
aas
pop
lods
in
xor
or
inc
lcall
cltd
push
ds
jle
adc
jmp
popa
mov
in
dec
std
scas
ret
mov
jl
mov
lahf
inc
cmp
xor
jle
cltd
mov
rcrl
in
lcall
outsl
pop
fcmovnu
inc
into
and
andb
fidivrl
dec
push
scas
dec
and
js
pushf
test
loop
xor
sti
in
mov
les
inc
lss
je
loop
inc
push
out
xchg
mov
int
jns
psubusw
add
hlt
in
sub
or
sub
adcl
cltd
mov
loope
and
push
inc
push
lret
mov
stos
stos
mov
cmp
into
addr16
add
xlat
lods
xchg
mov
mov
popf
dec
mov
rcr
fdivrs
sahf
pop
and
repnz
and
add
orb
rolb
outsl
mov
or
adc
int
sbb
scas
loopne
cmc
into
scas
daa
sbb
jae
lock
lcall
dec
cmp
push
fistl
lock
sbb
cmp
push
repnz
filds
test
adc
sbb
add
ja
sub
iret
shlb
cltd
xchg
lea
lds
pop
mov
inc
push
clc
xchg
jo
or
out
mov
jae
lret
or
xor
cmp
or
int
dec
xor
sub
push
clc
jge
aam
push
testl
xor
mov
push
lahf
mov
std
push
mov
jnp
adcb
loop
and
add
mov
inc
sbb
pop
xchg
adc
dec
adc
scas
ret
ss
add
mov
dec
fwait
mov
xchg
test
cmpsb
clc
icebp
movsl
outsb
stos
mov
shl
cmp
in
popf
shl
clc
sahf
sub
call
push
sbb
and
sarb
xchg
or
jns
push
das
mov
xor
das
mov
push
cmp
dec
xchg
ljmp
mov
test
inc
jle
adc
int3
mov
addr16
adc
jg
add
mov
xor
fimuls
lret
int
movsb
icebp
fstpt
xor
cmp
pop
imul
pop
imul
or
cmpsb
mull
jg
dec
push
jbe
aas
mov
mov
popa
add
push
push
xorb
test
push
aad
push
ja
adc
sti
aam
adc
cmpl
and
cmp
das
cmpsl
jmp
dec
orl
pop
xor
lret
xlat
pushf
pop
je
fnstcw
cmpb
pop
cmp
fsubr
or
adc
fsubl
pushf
add
mov
mov
cmp
sbb
inc
adc
add
mov
lret
or
lock
fiadds
ret
mov
movsb
out
mov
subb
dec
xchg
fwait
shrl
sahf
pop
mov
fists
cmp
daa
push
aam
mul
jmp
xor
lret
shrl
hlt
push
imul
insb
jg
inc
push
inc
jl
bound
fwait
jne
push
stos
and
mov
jno
clc
stos
xor
jge
or
dec
rclb
outsb
movsl
test
push
lcall
and
cltd
fsubl
sub
pop
ret
or
inc
insl
test
jne
pop
mov
ja
rcll
or
int3
icebp
test
xchg
sbb
pop
scas
loopne
jmp
arpl
xchg
bnd
out
aaa
lock
jg
xor
test
and
inc
rorb
add
xchg
push
pop
popf
hlt
sahf
insl
sub
ret
and
rol
sbb
aam
jge
cmpl
xchg
test
or
add
jmp
rcll
xchg
pusha
cmp
pop
scas
loopne
sarb
loope
push
movsb
movsl
fucomp
rol
inc
jl
xor
mov
add
lcall
sub
enter
pop
sahf
mulb
cli
xchg
sub
das
fwait
rolb
hlt
cs
cmp
mov
sub
adc
testb
sbb
fcomip
loopne
je
fs
fadds
ljmp
jmp
ret
pop
popa
sub
outsl
movsb
xchg
mov
push
add
cmp
xchg
add
andb
cltd
shrb
push
out
test
sbb
cmp
xchg
fldenv
sub
mov
test
dec
in
cmp
add
cld
fs
push
scas
jp
adc
nop
cs
add
add
or
push
push
ret
jl
lds
in
xchg
jmp
int
dec
pop
mov
inc
xchg
mov
mov
mov
fisubl
xor
jo
pop
repnz
or
dec
add
div
loopne
je
xor
jmp
fidivrs
lds
dec
and
mov
xchg
test
inc
inc
sti
jae
inc
or
loop
repnz
mov
fstps
or
mov
loopne
scas
and
lahf
sbb
aas
cmp
add
jno
out
push
push
pop
mov
dec
repnz
xor
mov
xor
std
outsl
jns
rorl
lea
repz
repnz
cmp
cmpsl
inc
lods
mov
cltd
cld
cltd
fucomip
mov
push
jo
and
insb
sbb
mov
sbb
cmp
sub
cmp
cs
sub
loop
aas
pop
pop
jmp
sarl
xor
add
ss
and
add
out
dec
pop
repnz
mov
mov
rcr
and
cltd
lods
cmpb
test
movsl
cmp
jns
fiadds
pop
push
push
xchg
repnz
dec
pop
jle
es
sbb
sbb
fprem1
fisttpl
adc
repnz
push
jge
adc
std
adc
mov
dec
push
or
jo
sbb
test
mov
movsl
cmp
push
aas
stc
pop
inc
stc
gs
mov
sti
inc
or
sub
cltd
sbb
or
dec
dec
stos
imul
adc
mov
mov
pushf
push
dec
and
enter
and
fs
rorb
mov
pop
pop
pop
cmp
data16
loop
out
or
fwait
xchg
xchg
in
dec
dec
hlt
lcall
or
movsl
push
in
xor
inc
add
sti
add
leave
xlat
movntps
inc
sub
imul
dec
dec
lahf
jns
movsb
std
es
rcr
cltd
cltd
mov
iret
inc
jp
in
cli
in
lods
loopne
push
popf
sbb
fcomip
xor
cmpb
inc
sahf
lret
insl
test
ja
xchg
repz
or
adc
mov
fisttps
sub
or
add
arpl
in
arpl
gs
xchg
into
scas
mov
and
sbb
aad
lods
movsl
outsl
mov
mov
sub
dec
lahf
sbb
lods
sub
je
outsb
mov
nop
xor
dec
repnz
dec
aas
mov
sbb
mov
hlt
cmp
stos
push
mov
les
dec
ds
mov
fsubp
jb
inc
mov
arpl
mov
add
push
enter
jmp
enter
in
out
cmp
push
xchg
sbb
push
pop
lods
mov
jmp
jnp
cmpsb
imul
xor
gs
in
mov
shrl
fstpt
cmpb
jae
lcall
ffree
sbb
cmp
sbb
jb
jnp
mov
pushf
insb
lcall
sbb
fwait
jmp
push
cs
je
cmc
xchg
fdiv
push
push
out
dec
jae
add
pop
pop
into
mov
scas
mov
daa
sti
jmp
fistps
leave
xchg
cmpsb
aaa
sub
xchg
xchg
pop
and
dec
pop
gs
xor
repz
mov
lock
orl
lods
ret
xchg
imul
mov
pop
xchg
sahf
cmp
shlb
pop
loopne
and
fdivs
fbld
mov
out
sub
dec
and
pop
sub
cltd
cwtl
ficomps
jae
pop
bound
mov
dec
mov
popf
cltd
frstor
data16
popf
jmp
shll
inc
in
mov
dec
or
xchg
jle
les
into
and
out
push
sahf
pop
push
pop
sub
rcr
sbb
sbb
rcll
loop
dec
xor
gs
jnp
jecxz
jbe
mov
hlt
packsswb
in
push
mov
sub
and
cmp
xchg
or
clc
lcall
es
fbstp
arpl
sub
stos
insl
loop
mov
mov
xlat
mov
mov
loopne
or
lret
xor
aam
jp
cmc
jb
cli
add
sbb
pop
add
clc
push
jno
fistl
jbe
cmpsl
imul
or
ss
repz
stos
jp
or
push
mov
dec
mov
call
push
sub
lret
pop
pop
inc
jge
dec
fisubs
push
inc
pop
sbb
icebp
adcb
xor
lods
cwtl
fstl
pop
pop
int
je
or
lahf
xor
leave
andl
inc
xlat
in
mov
push
test
lds
dec
filds
and
jle
loopne
test
fcompl
sbb
and
ror
lret
into
add
push
add
push
add
cmp
mov
scas
mov
adc
mov
dec
pop
lods
push
push
cmpsb
orl
mov
insl
icebp
mov
movsb
daa
lock
lcall
addr16
ds
push
sbb
xchg
popf
jnp
fidivrs
push
sbb
xchg
mov
pushl
lret
decb
jg
sti
jns
inc
insl
lahf
sarl
mov
cld
jnp
and
adc
adc
loop
sub
repnz
ret
mov
jno
stc
xchg
sbb
sbb
and
es
movsb
sub
jno
jmp
push
push
inc
bound
stos
add
inc
cld
icebp
andb
mov
mov
push
nop
mov
and
rolb
mov
or
idivb
jmp
mov
aad
mov
or
cmpsl
in
and
jmp
and
es
pushf
out
fnstenv
mov
aaa
jb
pop
je
sbb
inc
imul
adc
sti
ja
mov
mov
filds
bound
mov
mov
orl
xor
mov
pop
mov
xor
mov
xrelease
pop
testb
cmpsb
xor
dec
imul
jae
pop
test
stos
hlt
ret
push
cmp
push
arpl
jo
fsubrs
scas
push
inc
mov
push
or
cmp
rolb
dec
cmpb
jb
shrl
pop
pop
push
jle
and
dec
adc
mov
push
addr16
push
imul
out
jbe
dec
lods
fidivs
stc
orb
addr16
cwtl
shrl
out
aas
call
lds
fwait
jae
xor
mov
xchg
mov
mov
mov
andl
jo
loop
sbb
aad
mov
jp
shlb
mov
sbb
mov
lea
lahf
mov
and
stos
mov
push
test
and
clc
dec
popf
and
xchg
sub
xor
daa
sbb
cmc
cwtl
movsl
mov
push
push
mov
jo
cmc
aad
call
push
adc
sarl
lock
inc
jp
sbb
jns
cli
ret
pop
mov
test
add
test
jge
mov
scas
pop
std
imul
iret
or
xor
jecxz
mov
sbb
jp
xor
jno
arpl
cmp
lcall
jecxz
stc
inc
mov
or
xchg
sbb
mov
outsb
ljmp
lcall
mov
loope
imull
inc
data16
jns
mov
mov
ds
jo
push
jb
pop
sbb
and
cmp
cmp
xchg
dec
hlt
loopne,pn
cmp
xor
jbe
es
or
or
out
jge
dec
int
mov
adc
lret
in
or
frstor
jb
mov
mov
fistpll
lds
or
subl
push
hlt
xchg
fistl
js
adc
data16
clc
sarb
pop
mov
or
mov
imul
push
imul
sub
mov
aas
xchg
js
ds
push
lock
stc
sti
xchg
or
or
mov
into
stc
ficoml
mov
or
test
iret
push
xor
adc
mov
insl
adc
pop
mov
cs
int
and
inc
jbe
call
adc
push
jg
add
xchg
push
jne
test
mov
inc
mov
jecxz
js
pop
sbb
repnz
outsb
jns
gs
test
push
sar
mov
dec
fsts
out
iret
cld
xchg
and
mov
lea
adc
add
add
lds
in
push
sub
mov
fldenv
mov
xchg
sbb
jno
sbb
daa
in
adc
dec
lret
ds
ret
mov
pusha
sbb
push
mov
mov
and
fs
repz
pop
rcll
dec
mov
loopne
rol
sub
pop
iret
or
cmp
pop
lds
outsb
mov
mov
cmp
inc
in
rol
xchg
insb
jne
mov
int3
jae
mov
inc
and
dec
dec
xchg
js
enter
xchg
push
js
xor
dec
jg
cltd
mov
icebp
and
test
pop
mov
fmul
out
loop
xor
and
inc
xor
popa
shll
lods
push
aas
jecxz
cld
sbb
jecxz
xor
push
push
pop
pop
xchg
adc
rcrl
rcrb
jns
xchg
pop
xchg
stc
xchg
cmp
popf
cmp
dec
out
mov
pop
shrb
dec
in
mov
jno
pop
xor
fistps
insl
lret
dec
sub
push
loope
sbb
test
int
jo
popa
data16
or
and
pushf
out
xor
push
aas
xchg
and
jne
xchg
dec
xor
pop
out
jae
or
sbb
xchg
push
inc
or
inc
push
or
xchg
mov
xlat
sahf
cli
push
adc
jmp
es
mov
call
loop
mov
xor
push
fstpt
hlt
adc
xchg
sub
mov
sbb
pop
aad
cmp
xor
xor
out
and
cmp
out
daa
xchg
inc
fadds
lods
or
pop
adc
and
ficoms
push
rorb
aaa
xchg
adc
push
popa
rcrl
pop
jmp
dec
in
inc
sub
mov
sub
popw
in
xchg
ret
xor
fwait
dec
cwtl
sub
ljmp
std
and
aaa
jo
pusha
into
sub
jno,pt
and
pop
xor
pop
inc
xchg
pop
cmp
and
pop
shrb
in
cmp
push
es
nop
jmp
mov
aad
jmp
or
popf
lea
out
in
cmpsb
sbb
adc
mov
inc
ss
jp
push
pop
sbbl
and
xor
fistps
cmp
iret
decl
fldt
fnsave
adc
push
dec
mov
jg
popf
aaa
inc
mov
xor
outsl
adcb
adcb
jbe
enter
inc
lret
xor
or
push
mov
push
pop
mov
or
cmp
mov
pop
in
or
mov
rol
inc
cltd
cmp
lahf
bswap
ret
test
dec
dec
pop
and
mulb
into
sti
xchg
cwtl
stos
movsl
pusha
int
in
mov
fisubl
fsubs
je
mov
xor
xor
ss
clc
pop
jmp
cli
and
xor
cltd
sub
dec
push
fcomps
enter
or
add
sti
push
lret
test
outsb
mov
push
sub
popf
xor
or
stos
mov
aad
pusha
aam
or
mov
adc
imul
sub
cmpsb
push
cltd
andb
les
push
pop
aad
jmp
cs
and
cmp
outsb
mov
inc
fildll
andb
iret
stos
mov
hlt
jl
dec
pop
insl
pop
inc
mov
in
lds
mov
scas
out
mov
inc
enter
int3
add
lock
inc
add
fnstcw
mov
pop
and
ss
or
lretw
dec
stos
inc
in
jae
jne
cmp
sti
ss
orb
adc
mov
xchg
fstpl
imul
push
mov
push
test
adc
mov
dec
cmp
mov
in
dec
dec
dec
fs
inc
sub
dec
inc
xor
mov
bound
push
jmp
add
inc
ds
xchg
not
jno
push
jmp
in
test
sub
mov
hlt
imul
xor
shrl
xlat
ret
and
aad
xor
fwait
in
push
inc
ja
test
sbb
cmp
push
loopne
out
or
add
mov
test
popf
loope
mov
shr
xchg
xchg
cld
and
ss
fldcw
xor
popf
cmp
int
sbb
add
sub
mov
insb
mov
aaa
fsubl
enter
fdivrp
sahf
push
or
add
add
popa
sub
aad
adcl
adc
jb
and
inc
cmovl
xchg
mov
mov
jg
fwait
ss
test
jmp
xchg
lret
mov
push
sub
xor
add
push
sbb
push
mov
aam
pop
mov
mov
adc
pop
pop
jns
stos
inc
xchg
add
jne
xchg
jbe
int3
outsb
pop
imul
xlat
dec
xchg
mov
jl
dec
push
mov
xchg
or
jo
push
push
push
mov
add
movsl
mov
je
dec
xor
adc
jecxz
cli
sub
push
cmpb
in
in
jle
mov
xor
dec
mov
jbe
dec
aas
cltd
bound
lret
pop
je
push
bound
and
and
repnz
shl
notb
add
mov
pushf
clc
stc
push
or
inc
pop
cwtl
gs
gs
ljmp
lock
out
xchg
mov
fstl
stc
jo
rol
cmp
or
adc
cmp
xchg
mov
pop
cld
dec
cmp
mov
sbb
adc
cld
and
add
xor
fisttpl
lock
pusha
pushf
push
stc
inc
or
mov
negw
aaa
imul
push
idivb
mov
repz
sbb
add
push
and
movsl
and
testl
cwtl
enter
icebp
pop
dec
push
or
rcrl
aas
aad
ljmp
inc
jae
clc
lahf
es
icebp
jmp
add
sub
lcall
mov
icebp
push
mov
ret
orl
nop
out
mov
call
sub
mov
adc
loopne
fcmovnu
xor
sahf
xchg
inc
jne
flds
jmp
ret
clc
in
add
add
lock
fcmovb
out
rclb
pop
adc
push
sahf
jno
pop
sub
or
push
push
loopne
mov
popa
xchg
repnz
stc
push
ljmp
xchg
aam
mov
push
shr
add
js
sub
cmpsl
mov
fsubr
ficoml
xrelease
dec
xor
ja
inc
addr16
popa
scas
xor
into
inc
dec
inc
cwtl
dec
std
stos
loope
stos
icebp
push
mov
dec
xor
adc
pop
xchg
push
mov
push
dec
shl
sbb
and
in
aad
addl
or
dec
ret
lock
lods
mov
pop
sbb
inc
and
jno
push
andb
mov
jae
or
enter
mov
jbe
mov
jb
pop
jne
cmp
aaa
out
sbb
loopne
jl
fstpt
or
and
and
or
push
push
push
dec
lret
push
xchg
sub
fs
push
punpckhbw
adc
aad
xor
push
or
adc
filds
adc
jl
fnstenv
movsl
push
mov
cmc
fcoml
xor
ret
jbe
dec
push
int
mov
inc
aas
or
add
pop
aas
loope
stos
sbb
push
enter
pop
repnz
push
pop
sti
clc
andl
mov
ret
or
sub
pinsrw
xchg
pop
inc
mov
jbe
rcrl
cwtl
sahf
insb
mov
sbb
test
jbe
out
push
sti
int3
push
enter
outsb
iret
adc
mov
cli
rcr
cmp
or
sar
xchg
dec
and
sbb
xor
loope
imul
mov
ret
cli
mov
dec
inc
in
cmpsl
fidivl
mov
push
pop
test
dec
add
std
pop
inc
push
scas
adc
stc
push
mov
lret
popf
jb
jp
xchg
sub
cmc
pop
jle
sub
int3
add
aaa
lds
pushf
mov
cwtl
mov
push
out
jne
pop
cli
pop
lcall
testl
and
adc
pop
inc
sbb
sub
jno
shl
pusha
int
repz
inc
inc
or
or
push
adc
xchg
and
inc
or
insb
je
xchg
out
icebp
js
mov
dec
push
push
fcmovnb
pushf
stos
jmp
sub
or
push
mov
sub
mov
lret
lods
mov
add
xor
mov
fiadds
rcll
pop
loope
add
inc
or
mov
mov
cmpsb
cmp
ficomps
cwtl
cmp
cs
xor
lea
xor
sbb
inc
inc
add
jg
enter
testb
xchg
lods
cmp
sbb
shr
ds
cmp
mov
mov
push
test
dec
mov
inc
mov
add
sub
insb
cld
push
ret
xor
cmc
xchg
jmp
sub
ja
mov
in
out
cli
mov
cltd
jg
sub
insl
call
rclb
lock
divb
mov
gs
jecxz
cmp
xor
sbb
fldenv
cmpsb
sbb
repz
jne
in
popf
aaa
and
addb
dec
mov
out
pusha
lret
inc
pop
add
fistps
pop
out
mov
or
leave
add
out
mov
xor
jne
sbb
scas
jnp
xor
xorl
adc
fs
inc
jo
fstps
pop
pop
addl
sti
or
cmpsl
hlt
jle
clc
add
push
ret
repz
orb
jle
dec
cmp
adc
push
add
pop
inc
movsb
sti
xor
mov
call
movsl
lea
sbb
xor
test
mov
xcrypt-ofb
cmpsl
sub
scas
xchg
jmp
mov
out
jno
jae
push
sbb
adc
repz
addl
and
je
mov
mov
dec
jmp
loope
aas
sub
out
push
push
jne
rol
mov
mov
fstps
and
xchg
insb
icebp
iret
jae
cmp
int3
fdivl
ds
sbb
loopne
cwtl
mov
out
cmp
add
push
andb
cmp
add
mov
out
dec
mov
ret
jl
mov
cli
cld
cmpl
mov
add
add
inc
leave
movsl
aam
inc
jecxz
add
sbb
cmpsb
sub
jmp
fchs
into
add
icebp
inc
jecxz
mov
dec
mov
jnp
sub
fnstsw
stos
ret
and
cmp
iret
and
xchg
pop
aad
sbb
ds
pop
cmc
lods
loop
imul
repnz
ljmp
or
sub
mov
push
xchg
movsl
xor
mov
lret
cli
call
xor
sub
cmc
pop
lea
sahf
lds
mov
xchg
push
mov
testl
jnp
xchg
mov
push
mov
xor
mov
pusha
inc
mov
jae
mov
stos
mov
ret
cmc
xor
xchg
loopne
pop
mov
fs
inc
xchg
enter
mov
loope
pop
shrb
jbe
loope
pop
mov
loop
and
adc
jns
mov
mov
jecxz
divb
je
movsb
movsb
aad
popa
jmp
lret
incl
inc
daa
enter
pusha
shrl
jo
sbb
xor
inc
fisubl
dec
jp
push
imul
jmp
ret
stc
repz
sbb
int
int
add
enter
jno
sub
mov
mov
aam
xor
fadd
mov
adc
movsl
icebp
and
dec
push
rclb
stos
call
mov
fcoms
mov
pusha
outsb
incb
shlb
rcr
stc
or
test
movsb
sub
jmp
or
scas
jnp
cmpsl
bound
jg
nop
jecxz
cmp
mov
cmpsl
cli
mov
ja
push
push
repz
mov
insl
sbb
fildl
mov
sbb
mov
rol
or
lods
fidivl
mov
push
cmpsb
mov
daa
jbe
int
push
push
movsl
ds
inc
test
fs
cmc
test
fsubrs
inc
div
jne
repz
test
mov
add
cli
call
lret
test
pop
es
testl
adc
and
fnstenv
add
sarl
pop
mov
adc
es
seto
push
cwtl
mov
sbb
pop
push
pop
push
notb
ljmp
or
mov
cmpsb
mov
repnz
inc
mov
cld
jge
push
push
clc
pop
mov
xorl
mov
lods
add
int3
inc
test
sub
test
dec
add
fistpll
out
std
loopne
mov
fs
loopne
das
cltd
notb
scas
imul
push
adc
cmp
xor
dec
xchg
cmp
subb
sbb
pop
lret
sub
mov
push
pusha
mov
test
sbb
adc
and
je
cvtdq2ps
loop
mov
add
fadds
inc
add
dec
sbbb
fwait
ds
int3
adc
add
xchg
call
add
jno
push
xchg
out
and
pop
mov
jmp
int3
pop
jae
and
dec
inc
test
push
notl
enter
andb
cmp
xchg
in
or
ljmp
jo
mov
push
bound
lahf
enter
add
jl
xor
adc
mov
jp
mov
cwtl
scas
mov
ja
jmp
fwait
int
push
je
add
push
aas
or
and
push
dec
movsl
cs
push
lcall
mov
shr
xor
jmp
lret
sbb
or
add
out
add
jb
push
jno
out
loopne
xlat
loope
sbb
xor
adc
fsubrl
push
sbb
cmpsb
cmp
mov
clc
dec
mov
fwait
pop
lods
es
and
dec
jge
je
xchg
adc
xlat
mov
sbb
add
sub
sbb
fldt
enter
int3
mov
xor
fs
cmp
sub
test
push
mov
add
ljmp
pop
enter
scas
xor
enter
mov
xlat
cld
jge
divl
loopne
lods
je
shll
jecxz
dec
sti
mov
clc
test
lcall
adc
lods
adcl
xchg
rorl
adc
hlt
es
test
jne
mov
mov
add
sub
and
mov
push
mov
xchg
mov
outsb
jbe
pop
mov
sub
sbb
or
sub
insl
xor
inc
loope
mov
mov
imul
into
lods
mov
mov
ret
push
jb
or
jmp
stos
inc
rcll
out
jo
mov
ret
adc
push
out
mov
cmpsl
or
pop
test
lea
hlt
pop
push
push
xor
mov
sbb
data16
push
std
xor
stos
lds
rolb
imul
jb
push
sbbb
jne
dec
aas
loopne
xor
aas
into
stos
xchg
clc
inc
insl
test
pop
adc
xor
mov
add
sub
sub
mov
rcrl
mov
jg
gs
iret
leave
and
push
mov
dec
ds
sbb
mov
in
repz
cltd
pop
mov
mov
push
cwtl
icebp
cmp
cmc
icebp
mov
inc
dec
popa
mov
mov
and
jae
dec
aaa
nop
jb
fbstp
stos
fsubl
hlt
xor
inc
xor
sbb
sub
cmp
pop
dec
sti
mov
sbb
push
push
iret
dec
dec
dec
and
pop
bound
out
in
lods
inc
sbb
push
lea
inc
jmp
daa
inc
ret
push
xchg
push
or
mov
iret
mov
sbb
or
scas
lods
cmpb
inc
push
mov
aas
imul
aas
sar
movsb
push
mov
xor
and
arpl
rcll
jbe
jg
rorl
addl
rcrl
into
dec
mov
mov
outsl
cs
xor
imul
shrl
shlb
and
sti
stc
cmc
insl
mov
clc
out
pop
clc
fnstsw
test
rclb
add
xchg
push
sbb
mov
in
mov
fsubl
mov
fld
pop
jp
adc
push
inc
bound
imul
adc
xor
into
ret
inc
jg
jl
notb
sbb
push
fisubl
lea
cmpsb
adc
jo
pop
mov
movsb
jp
imul
mov
orb
push
out
and
fwait
cmp
je
mov
aam
jne
mov
pop
scas
mov
and
jp
dec
sbb
fisubl
je
pop
jno
jecxz
repz
jno
imul
cmc
or
pop
and
push
out
mov
insb
jg
cmpsl
inc
sti
add
stc
cmp
cmpl
hlt
les
mov
dec
in
add
sub
sahf
daa
push
stos
pop
mull
imul
lret
aas
push
or
subl
mov
cmpb
stc
rolb
pop
push
jmp
mov
aam
mov
xchg
mov
pop
into
cli
xchg
mov
scas
pop
cmpsl
sbb
outsb
xchg
push
push
jmp
mov
jae
cmp
call
in
pushf
pusha
out
jno
ret
popf
into
lods
sti
dec
mov
cmp
mov
mov
insl
mov
into
jno
icebp
adcb
mov
repnz
cmp
inc
jecxz
out
cmp
cmc
adc
push
nop
mov
pop
fsub
jg
or
movsb
imull
sbb
pop
out
adc
insb
and
adc
jnp
adc
stc
leave
cmp
mov
ret
cmp
sub
sub
add
enter
stc
or
mov
arpl
dec
cmpsl
loopne
jne
xchg
sahf
mov
xlat
rorb
mov
lret
or
icebp
push
fwait
push
leave
cltd
addr16
js
jecxz
mov
pop
and
cwtl
sahf
fcoml
push
lea
and
stos
and
push
ret
mov
jmp
out
repnz
jae
xchg
xchg
loopne
dec
xchg
pop
arpl
out
cmc
hlt
mov
mov
mov
xchg
sarl
out
adc
push
sub
add
add
inc
stos
xlat
push
inc
jbe
adc
or
sub
and
sti
jb
adc
adc
push
cltd
adc
pop
icebp
pop
ss
or
fimull
jp
add
imul
push
sub
jmp
icebp
sbb
je
push
adcl
hlt
shrb
addb
mov
pop
add
test
outsl
inc
pop
dec
push
loop
and
add
push
jg
fs
push
rcrl
addr16
cwtl
mov
pop
in
daa
mov
xor
hlt
jne
insl
cmp
imul
pop
and
dec
enter
jo
repz
hlt
fnstsw
fwait
cmc
xchg
out
cltd
mov
add
mov
test
cmpsl
cli
pushf
mov
cmpsb
sbb
std
add
into
mov
shrl
mov
pop
jg
aaa
push
outsb
cmc
adc
or
ret
insl
add
fmuls
aam
pushf
cmp
dec
pusha
test
orb
mov
push
test
dec
cmp
aad
push
test
bound
push
psraw
jns
mov
mov
add
fists
lock
js
or
sub
cmp
push
fldl
inc
adc
fwait
mov
clc
leave
add
xchg
movl
lods
dec
shlb
sbb
das
dec
ss
cltd
mov
mov
sub
cmp
shrl
test
movsb
sbb
fiaddl
adc
test
mov
outsl
loopne
pop
xchg
pusha
in
clc
fwait
xor
imul
sti
jns
fsubr
imul
decl
cmc
xchg
ds
push
stos
stos
push
cli
xchg
mov
pop
ret
in
sbb
ja
cmc
sbbl
aam
mov
mov
loop
cmp
pushf
sahf
mov
cmp
test
lret
in
push
mov
jmp
dec
inc
push
cmp
mov
push
test
andl
mov
mov
pop
add
sbb
adc
test
std
pop
sub
and
scas
lret
cmp
pushf
mov
rcll
adc
push
repnz
nop
pop
rcr
jge
inc
imulb
and
ljmp
sahf
test
int
push
fimuls
push
or
cld
sub
aam
push
xor
in
and
jno
cmpl
mov
icebp
mov
ret
aaa
push
movsl
and
jno
scas
dec
add
mov
sub
out
jb
outsb
lcall
push
xor
and
cmp
ss
aad
or
sar
lret
movsb
xchg
imul
xchg
push
movsl
xorl
iretw
lock
mov
test
mov
sti
aaa
in
jns
mov
fmul
into
mov
jg
and
imull
mov
mov
sub
jecxz
outsb
xchg
or
mov
push
fsubr
mov
cmp
or
xchg
inc
aad
add
fisttps
xchg
xchg
push
pop
bound
mov
mov
das
cmp
stos
test
cmpsb
out
outsl
fwait
xchg
and
in
ja
movsb
pop
cmpb
fdivrs
jg
negb
add
dec
xor
sbb
mov
and
xlat
mov
bound
bound
push
mov
jne
xor
je
enter
and
sub
xorb
pop
das
cmp
out
xchg
mov
jle
hlt
outsl
in
inc
pusha
out
repz
bound
xlat
cmpsb
pop
push
mov
jecxz
pop
test
test
xchg
rcr
adc
adc
push
push
pop
lods
es
cmp
dec
inc
rolb
fisttpl
notl
cltd
and
mov
sub
lods
add
mov
rcr
cltd
lea
mov
jmp
pop
sub
dec
test
cltd
hlt
std
xor
cmc
cmp
call
cltd
push
inc
inc
and
sbb
and
mov
mov
lea
or
sbb
cs
cld
mov
popf
scas
pusha
jle
push
adc
jbe
push
adc
jge
sarl
loope
lcall
int
push
sbb
xlat
inc
filds
xchg
dec
jmp
repnz
cmp
iret
sbb
push
ret
mov
aas
cld
into
imul
pop
cltd
sbb
aaa
push
cmpsb
in
jg
sub
lods
aad
mov
jge
jg
por
lods
ret
int
rcrb
pusha
imul
dec
jne
sbb
or
into
jmp
adc
push
in
outsb
mov
test
cmpsl
adc
inc
in
push
daa
int3
xor
pop
jg
shll
ss
xchg
dec
imul
xor
jo
pop
inc
dec
insb
sbb
mov
enter
xchg
rcll
mov
mov
mov
dec
filds
xchg
lock
mov
call
cmc
or
lret
sub
and
cmpsl
mov
popa
push
and
int
ja
adc
pop
leave
insb
and
cs
xor
jb
mov
mov
vmovshdup
ret
fstl
cmp
adc
sbb
cmp
inc
add
addb
stc
and
fs
leave
sbb
pop
jb
pop
ja
stc
pop
dec
pop
cwtl
add
das
mov
scas
test
scas
test
jmp
mov
in
jle
orb
rcrb
mov
movsb
xchg
es
dec
hlt
sahf
lds
fsubs
xor
fs
mov
sbb
cmp
and
fs
sbb
rcrb
jns
inc
mov
xchg
fildl
jns
dec
xor
nop
jb
lcall
ret
push
leave
jnp
cmpsb
cmp
dec
add
notl
je
scas
mov
add
pop
or
sub
hlt
sarb
jl
and
sbb
hlt
cmp
mov
dec
jmp
add
inc
call
jge
inc
cli
sbb
enter
into
sub
mov
inc
les
cli
arpl
pop
aam
ljmp
cmpsb
mov
cmpsl
push
inc
imul
call
out
xchg
push
cmp
mov
mov
sbb
dec
mov
cmp
xchg
stc
fs
ret
xor
fstpt
jns
mov
dec
pop
fdivl
push
hlt
icebp
mov
sbb
and
push
nop
push
jo
lret
mov
rclb
sahf
stc
mov
xchg
imul
mov
ljmp
loopne
dec
lds
add
addb
test
inc
dec
adc
sbb
test
sbb
int3
loopne
aaa
jne
addr16
mov
or
loope
insl
push
cmpsl
frstor
andl
add
dec
icebp
arpl
ss
call
mov
insb
shlb
imul
ds
mov
mov
insl
cmpsb
cli
into
rcll
xor
push
xor
mov
push
addr16
jle
fisttpll
fwait
xchg
mov
call
push
fdivrs
and
lods
shrb
fld
clc
jb
or
jnp
dec
aas
jae
cwtl
mov
fcom
push
dec
jbe
divl
les
leave
out
push
cmp
lcall
cmp
cmp
adc
inc
dec
dec
pusha
cmpsb
nop
xchg
push
cmp
mov
mov
xor
pop
xor
cmp
mov
subb
imulb
gs
fs
shrb
ficomps
enter
mov
inc
xchg
mov
push
inc
adc
pop
pop
cmp
sarb
and
subl
pop
lret
and
dec
iret
ljmp
push
add
xor
imul
fiaddl
pop
loopne
imul
arpl
andb
xchg
mov
imul
and
jge
je
aas
dec
xchg
out
cmp
leave
push
ja
lret
push
mov
sub
cmp
xor
std
mov
test
sbb
andb
aam
jo
inc
movl
fdivrs
outsb
out
sti
jae
icebp
dec
adc
or
loope
inc
push
arpl
test
sub
iret
dec
dec
mov
std
repnz
add
and
sub
mov
push
cs
sarl
icebp
daa
push
adc
pop
jle
bound
jnp
push
sbb
inc
int3
xchg
loop
sahf
mov
dec
xchg
xor
pop
push
xchg
aam
sbb
mov
jo
dec
xor
xchg
push
mov
mov
jb
pop
mov
subl
or
cmp
pushf
dec
pop
imul
mov
ljmp
aas
into
dec
push
fmul
add
repz
cmp
jb
iret
cmp
mov
cmc
shll
xor
mov
shll
lret
aaa
dec
in
scas
repz
xchg
dec
or
stc
add
fimull
cmp
test
push
xchg
xchg
mov
dec
and
xchg
xchg
push
aam
mov
pushf
jmp
xchg
dec
scas
push
and
pop
jmp
pop
pop
insb
inc
movsb
test
ror
ss
clc
in
inc
sahf
je
jecxz
cmp
int3
inc
jp
adc
and
cld
sti
sub
push
lret
je
cmp
dec
add
sub
pushf
sbb
dec
in
iret
jae
pop
mov
xor
mov
cmp
push
jmp
and
cmp
push
pop
fists
inc
fadd
shlb
add
lret
popa
hlt
shr
and
xchg
and
lea
adc
out
cmp
sub
loop
rcr
cmp
xlat
mov
mov
add
movsb
lahf
stos
call
mov
das
in
pop
jbe
inc
dec
mov
push
daa
cltd
leave
adc
jg
xchg
cmp
out
xor
popf
fnstsw
xchg
lock
adc
or
loop
icebp
mov
sub
push
sahf
addr16
push
add
fisubs
mov
push
arpl
notb
sbb
mov
es
out
mov
mov
mov
push
push
or
cmc
adc
sbb
jo
or
mov
imul
cmp
cmc
jno
pop
mov
dec
mov
inc
sbb
pop
jbe
pop
insb
mov
movsl
push
jle
jne
xor
and
sti
inc
mov
ds
mov
adc
jns
popa
lods
cld
jmp
inc
mov
into
cmpsl
js
push
in
and
pop
aad
push
sub
inc
cmp
jmp
sbb
mov
add
js
loop
sbb
mov
or
int3
xchg
leave
and
inc
push
fidivrl
pusha
and
into
xor
xor
jl
push
pop
jl
mov
mov
xorl
sub
ss
scas
sbb
jns
xor
ss
popa
cltd
push
adc
sahf
in
sbbl
lret
call
popf
mov
push
lcall
mov
in
sahf
out
out
rolb
popf
push
cmp
test
lcall
insl
lods
ss
jle
test
jno
sbb
rorl
pushf
sub
sub
scas
enter
fildl
xchg
or
rolb
pop
lods
fsubrl
sbbl
xchg
xlat
sub
jno
pop
sahf
rclb
enter
mov
dec
jae
sub
mov
add
cmpsl
jbe
lds
imul
mov
mov
dec
pusha
push
fsubr
fmuls
xor
xchg
push
xor
cmp
mov
xor
push
jp
callw
push
mov
rorl
pop
jb,pt
lods
in
pusha
sbb
pop
gs
dec
dec
add
outsl
cwtl
clc
adc
dec
sub
push
pop
movsb
sbb
dec
mov
gs
adc
test
push
add
sub
push
cmp
sub
xor
or
sbb
push
data16
shl
leave
fmuls
jb
movsb
jg
pop
xor
test
cmc
repnz
push
fsubl
popa
sub
push
pusha
mov
pop
push
mov
cmp
fisubs
ret
clc
and
movsl
dec
sub
or
call
push
and
je
fwait
std
fisubrl
icebp
sbb
push
and
pushf
popf
pop
push
xchg
jae
inc
mov
inc
in
mov
dec
jle
xchg
lret
sbb
dec
frstor
add
inc
sbb
adcl
roll
lahf
cmpsl
push
aas
sub
loopne
sbb
and
lods
pop
adc
jae
lock
xchg
cmp
ss
es
push
stos
cs
pop
inc
pop
pop
mov
push
fists
loopne
loope
jecxz
repnz
xor
out
outsb
out
xor
add
cmp
cmp
cli
in
push
in
xor
xor
adcl
fidivs
pop
test
inc
xchg
sbbl
ds
aas
fisttpll
add
or
sbb
xchg
adc
push
push
and
movsb
mov
outsl
add
adc
cmp
mov
mov
push
pusha
cmpsl
loop
mov
popf
xchg
mov
jno
out
fildl
faddp
cmp
pop
jb
sbb
or
inc
inc
loope
cmp
lahf
lret
movl
mov
jg
dec
outsb
jge
int3
mov
xor
inc
rcrb
jl
stc
iretw
je
lea
cmp
fmul
fwait
add
and
in
dec
leave
pop
sbb
orl
lods
shrb
rcl
or
xor
pop
jae
daa
mov
pop
arpl
stc
add
push
xchg
icebp
xor
pop
pop
sbb
icebp
pop
push
fimull
lods
es
dec
pop
clc
and
stc
mov
pop
dec
iret
adc
mov
mov
jnp
or
xchg
je
addb
xor
or
jno
jo
jge
in
mov
cltd
push
xor
sbb
cli
int
xchg
xchg
and
enter
xchg
sbb
jnp
lea
leave
lea
push
push
xchg
in
inc
xchg
dec
leave
and
push
sarb
mov
in
aad
mov
out
ret
ret
inc
sub
xchg
mov
idivl
fdivl
or
enter
xor
add
in
mov
or
adc
push
lahf
pop
push
add
jge
nop
inc
dec
xor
mov
xchg
mov
mov
lods
jg
test
push
lods
out
xor
sahf
xchg
inc
push
inc
xchg
sbb
ret
mov
movsb
cmp
push
xor
mov
ret
pop
sub
ljmp
push
and
test
addr16
cwtl
mov
in
fs
aaa
sbb
sub
sbb
push
cmp
inc
stos
mov
pop
push
or
or
shrb
xchg
jp
xor
test
push
mov
jae
adcb
out
in
int
fwait
lods
fistl
cmp
jge
sbb
cmp
fs
ja
cmp
xor
or
jl
and
mov
mov
enter
std
outsb
inc
sbb
bound
inc
orl
or
fs
aad
sbb
fdivrp
or
jo
cmp
push
movsb
std
jl
adc
sub
insb
dec
xor
dec
iret
dec
lods
ss
jmp
sub
int3
inc
adc
rorb
cld
pop
pop
int
int
fdivs
pop
xor
sub
mov
cmp
mov
jbe
fnstenv
sub
andl
testl
lea
push
lret
jecxz
adc
push
aad
test
mov
push
sbbl
pop
stc
push
sbb
sarb
sub
sbb
inc
push
pop
sbb
std
jmp
mov
mov
jns
xor
int3
cmp
sbb
pusha
mov
jmp
ret
in
andps
mov
out
sti
jb
or
mov
mull
jnp
inc
ss
fldt
xor
inc
or
jno
inc
subl
pop
or
push
jo
and
addl
call
out
movsb
xor
js
and
loope
mov
inc
outsl
sub
pop
pop
in
mov
mov
xchg
sub
pop
stc
dec
shrb
stos
ja
pop
mov
xchg
push
mov
push
push
ljmp
or
sub
dec
in
push
mov
enter
enter
rclb
xor
mov
int3
add
jne
dec
mov
pushl
stos
mov
push
cli
xorl
cli
sub
sub
fdiv
out
pop
xchg
inc
movsb
pop
pop
loope,pn
adc
inc
pop
push
adc
ja
cli
ret
and
in
mov
sbb
push
cmp
out
je
jmp
es
mov
jecxz
xchg
or
sub
xor
std
addl
testb
aas
xchg
pop
xor
imul
sub
pop
mov
cld
out
scas
add
aam
cli
adc
and
jns
mov
or
push
or
das
mov
xor
xor
je
jp
sbb
fst
ljmp
xchg
fstl
pop
lods
pushf
ds
inc
mov
pop
imul
mov
mov
aas
mov
dec
sub
sbbb
fsts
inc
rcr
inc
rcr
and
cmpsl
jns
jnp
data16
sti
mov
lcall
fmull
das
pop
sahf
pop
jne
mov
mov
sub
or
leave
int3
xor
add
mov
outsb
dec
pop
xchg
pop
das
jmp
push
jno
adc
adc
or
daa
mov
cmp
ret
add
push
outsb
ret
or
imul
dec
mov
das
ljmp
les
subl
and
or
ret
add
pop
std
push
jae
scas
and
mov
mov
jg
pop
adc
es
push
mov
rolb
xor
xor
mov
dec
lahf
cmp
or
inc
pusha
xchg
pop
ds
mov
add
xchg
mov
dec
add
cmpsl
jp
insl
mov
insb
stos
push
push
cld
movsl
out
fwait
cmp
repz
inc
sbb
mov
xor
push
fistl
jge
jnp
mulb
mov
mov
popa
lods
popf
push
idiv
pop
lock
or
in
sbbb
jge
push
and
ss
jp
push
es
jae
xor
call
cld
sub
das
push
cmova
xchg
fnstcw
cld
and
sub
push
insl
adc
add
mov
push
mov
add
std
lods
mov
jmp
pop
lods
push
push
xlat
sub
jno
shr
xor
sbb
mov
popf
sarl
daa
std
fbstp
cltd
fistpll
mov
test
mov
pop
push
sub
jp
movsl
faddl
pop
or
sbb
les
movsl
hlt
xchg
mov
cmc
test
mov
mov
ja
imul
scas
inc
xor
mov
mov
add
jnp
scas
arpl
mov
pop
mov
mov
mov
mov
jno
lret
push
xchg
mov
es
mov
mov
les
sahf
dec
es
ljmp
sbb
aad
fiadds
xchg
popa
les
mov
or
dec
js
mov
push
call
jle
movsb
xor
lea
mov
data16
out
outsb
mov
imul
xchg
mov
inc
dec
ja
inc
and
sahf
mov
int3
idivb
loopne
bound
js
inc
jnp
pop
jg
or
xchg
or
mov
pop
das
dec
ds
inc
lcall
inc
clc
sti
scas
pop
add
add
bound
sti
add
xchg
or
pushf
fwait
push
clc
lods
scas
loopne
jns
sbb
pop
mov
inc
scas
cmp
dec
jl
dec
or
add
and
fbld
es
sbb
pop
lea
fsubr
push
xchg
jle
ja
and
mov
push
lods
xor
jecxz
je
rcll
inc
mov
insb
xor
or
mov
mov
jno
mov
inc
dec
popf
adc
dec
inc
cmp
add
and
dec
sub
sbb
lds
push
mov
imulb
jnp
cmp
sub
sbb
gs
ret
loop
fucomip
bound
lahf
mov
mov
cmp
enter
pop
cmpsl
or
inc
inc
lret
inc
adc
xchg
mov
jo
dec
cmc
mov
push
cmpsl
sbb
sub
ret
lods
idivb
inc
mov
cmp
and
pop
push
jo
ss
jle
mov
aad
arpl
jmp
cmp
sbb
jp
or
add
sbb
in
sbb
cmpb
dec
add
mov
jb
xchg
scas
into
inc
sti
hlt
and
ds
xor
push
test
xchg
std
int3
mov
add
mov
cmp
mov
xchg
pushf
in
adc
in
mov
push
xchg
test
cmc
loope
ja
mov
sbb
dec
add
add
fidivs
je
int
repnz
mov
sbb
rcrb
call
inc
stos
int
push
jl
cs
inc
mov
ret
cmp
xchg
or
jecxz
add
scas
repnz
lret
addr16
ficoms
loop
dec
mov
in
xor
inc
pushf
mov
mov
sbb
sub
int
mov
fstl
orb
dec
jb
int
pop
jne
jb
sbb
dec
sub
push
jmp
and
mov
push
mov
in
int3
inc
enter
adc
jb
shl
clc
dec
and
out
mov
sarl
mov
test
adc
jle
movsl
mov
jns
repnz
test
xchg
sub
scas
test
flds
es
in
jg
fsubrl
adc
lock
and
out
jg
sbb
sbb
enter
imul
test
pushf
mov
mov
push
outsb
push
daa
sahf
test
test
cltd
dec
sahf
or
cmp
fcmovu
mov
aad
fnstsw
inc
imull
repz
loop
adc
jnp
imul
adc
pop
push
mov
push
mov
fiadds
push
jp
sbb
outsl
pop
rcrl
clc
inc
mov
idivl
xchg
push
sbb
xchg
add
push
fcoms
mov
pop
in
inc
dec
xor
shll
inc
add
ljmp
cwtl
stos
pushf
test
loope
fdiv
mov
or
pop
pop
add
pop
jle
aam
dec
xchg
sub
iret
addr16
sub
cmp
sbb
sarb
das
faddl
sbb
into
pop
addr16
jg
mov
cmp
out
repz
or
popf
push
out
in
mov
loopne
inc
mov
sub
jecxz
dec
push
mov
mov
add
xchg
scas
mov
jo
loop
adc
in
jno
jmp
pop
fldt
fsubl
push
xlat
pop
aam
adc
cmpsb
xchg
pop
or
in
pop
inc
push
insl
push
adc
cld
pop
xlat
mov
adc
repz
inc
xor
push
mov
fcompl
sti
jmp
or
cmp
xchg
adc
outsb
insb
sbb
fiaddl
cmp
mov
pop
jno
mov
into
jecxz
jmp
sbb
inc
test
es
sar
aad
clc
ficomps
push
loopne
and
into
orb
xor
jb
aad
pop
or
and
mov
out
out
and
and
mov
dec
or
mov
sbb
sbb
test
mov
ret
jnp
dec
cld
push
xchg
xlat
ja
and
mov
sti
inc
jle
jle
xor
xor
incb
pushf
inc
pushf
dec
pop
inc
mov
out
out
lret
dec
jp
insl
inc
fisttpl
stos
jne
inc
or
decl
hlt
push
test
sub
sbbb
shlb
inc
inc
jmp
or
lret
mull
mov
xor
cs
cmp
or
add
xchg
in
push
nop
lea
cltd
pop
mov
in
xor
arpl
xchg
sub
push
push
adc
push
xor
xchg
xlat
xor
sub
shrb
push
push
sbb
add
cltd
in
lock
cmpsl
pop
sbb
and
xchg
fucomp
fs
rclb
pop
dec
jg
jl
sbb
inc
cmp
int3
sbb
jae
stc
std
addr16
dec
bound
movl
dec
xor
shll
or
subl
pop
ret
add
pop
xor
mov
mov
test
mov
xor
inc
cmc
jl
pop
sub
push
bound
std
cs
push
ja
inc
push
jmp
xchg
addl
aas
inc
xor
xchg
and
adc
xchg
dec
hlt
incl
dec
mov
push
jge
cmpsl
mov
sbb
push
add
bound
xchg
sbb
test
sbb
shll
ficomps
push
xchg
lock
into
sub
pop
lcall
idiv
xor
jmp
lds
in
fmul
jnp
std
mov
xor
daa
cmc
cmp
cmp
outsb
adc
out
popf
push
mov
out
lret
rorl
sub
mov
and
ds
lea
push
push
jo
jnp
jae
or
movsb
fwait
xchg
adc
outsb
das
lods
xorb
jne
inc
daa
cmp
push
rcll
inc
xchg
div
aas
xchg
or
pop
ss
push
sub
adc
cmc
stc
lret
es
pop
fstpt
aam
popa
outsb
pop
cltd
cmpsl
adc
ret
mov
repz
xchg
xchg
lcall
fidivrl
mov
and
popf
sub
cltd
repnz
ffreep
shll
mov
push
inc
movsb
mov
lcall
xchg
dec
mov
xchg
push
mov
push
into
xor
shll
jle
cmpsb
insb
jns
pop
pop
xchg
lretw
xchg
int3
dec
outsb
loope
add
push
in
push
dec
mov
call
cld
pusha
addr16
je
and
pop
outsl
or
mov
aaa
pop
add
xchg
out
cmpsb
push
iret
scas
pop
xor
cmp
mov
or
out
cmp
inc
sub
sahf
popa
out
ss
gs
je
pop
jns
repz
xor
pop
insb
and
and
dec
mov
xchg
push
sbb
sbb
add
daa
stos
push
dec
pop
xor
aaa
push
pop
filds
sub
scas
fimull
xor
fiadds
popa
fidivrs
jno
dec
push
push
pop
and
in
mov
roll
test
shrb
std
sarl
mov
mov
in
pop
aas
sbb
rorl
mov
sbb
jge
test
jg
cmp
out
push
popf
in
cs
gs
mov
inc
sub
pusha
pop
mov
mov
mov
lock
cmp
push
jmp
push
push
pop
jo
das
pop
adc
stc
pop
mov
jge
xchg
lods
aam
cmpsl
orl
movsl
mov
imul
sbb
les
int
adc
es
lea
jge
pop
aam
cmpsb
notb
cmc
jo
adc
cwtl
mov
pop
call
int3
xor
xor
sbb
mov
inc
dec
mov
xchg
imul
mov
xor
stos
pop
pop
adc
jge
bound
out
mov
aam
scas
addr16
cs
or
lcall
nop
stos
or
lods
sbb
fistpl
xchg
lret
mov
push
dec
jecxz
mov
test
pop
add
and
inc
push
movsb
and
xor
cmp
adc
in
push
mov
push
xchg
into
mov
mov
testl
les
outsb
cwtl
rcrb
loope
jns
mov
inc
ret
inc
push
adcl
movsl
sbb
and
mov
adc
pop
inc
jle
dec
pop
mov
call
bound
cmpsb
and
outsb
adc
sbb
push
xchg
mov
inc
sbb
mov
mov
inc
sarl
enter
jb
test
icebp
bound
xchg
jnp
xor
cmp
dec
add
dec
mov
dec
push
sub
jno
jns
jo
inc
decb
push
imul
gs
stos
fistl
cmp
fnstcw
add
add
xchg
mov
sbb
cmp
xchg
pusha
mov
lcall
inc
push
xchg
cmp
icebp
mov
xlat
sub
mov
xchg
addr16
mov
pop
push
sub
addr16
mov
inc
adc
jae
xor
or
dec
xor
or
add
push
sub
stos
ss
and
xchg
mov
stos
idivb
insl
fisttpl
mov
jg
mov
testb
sar
mov
shl
movsl
cmpsl
pop
mov
jae
dec
cwtl
das
out
leave
adc
sbb
xchg
je
das
cltd
jle
or
daa
push
inc
dec
cli
daa
lret
shr
sbb
icebp
pop
cmp
xor
jo
icebp
cmp
fcomip
mov
xchg
cpuid
clc
int
push
add
cwtl
inc
adc
sub
sub
or
leavew
leave
mov
push
jmp
loope
ud1
hlt
dec
stos
cmpsb
fcompl
mov
sti
inc
in
add
lods
mov
xor
test
dec
stc
lods
xchg
stos
mov
ja
adc
mov
cmpb
test
dec
test
icebp
arpl
std
mov
cmp
and
and
out
inc
push
test
push
outsl
push
mov
rcl
pusha
rcrl
pop
xchg
lds
cmpsb
jo
xor
cmpsb
cld
pop
push
pushf
jl
sbb
insl
xchg
add
call
add
out
sbb
adc
adc
addr16
cmc
repnz
pop
sbb
push
aas
or
xchg
ret
jp
sub
add
xchg
mov
loope
push
mov
loop
push
mov
mov
xchg
xchg
cmpsb
add
sbb
xor
push
push
push
mov
fistpll
cmc
sub
cmp
sbb
push
fs
loope
cmp
arpl
test
or
nop
lcall
sbb
aas
mov
jbe
ljmp
sbb
mov
fsubr
pop
insb
rcrl
mov
fdivr
std
mov
lods
imul
dec
mov
jne
dec
mov
or
ss
ficoml
fists
es
hlt
imul
je
mov
dec
lods
sub
push
mov
mov
and
inc
sub
rolb
xchg
out
xor
jecxz
push
repnz
push
adcl
push
daa
pop
adc
arpl
adc
and
lahf
cltd
sbb
pop
and
push
inc
cmp
shr
int3
jl
mov
xor
out
ret
push
mov
or
push
mov
pop
in
sarb
lahf
out
mov
jmp
loop
jecxz
in
and
inc
iret
sub
mov
ss
aaa
inc
ljmp
subl
clc
mov
adc
je
loopne
pop
lock
cmp
cs
mov
lds
mov
sub
jae
add
out
adc
stc
or
or
divl
and
pop
dec
pop
stos
adc
sbb
push
sub
add
iret
pop
jns,pt
adc
stos
js
adc
or
sbb
mov
lcall
mov
cltd
xor
pop
out
xchg
dec
cs
xor
lods
nop
iret
push
and
out
hlt
inc
cmp
movsl
ret
ljmp
int3
xor
mov
nop
sbb
cwtl
inc
mov
sbb
mov
ljmp
out
or
mov
cmp
add
repnz
test
lods
mov
push
scas
cmp
sub
pop
leave
push
mov
mov
mov
lret
jl
add
inc
ret
sub
xchg
xor
fstps
cli
int
ret
xchg
jecxz
mov
cltd
xchg
or
cltd
es
out
cmp
or
mov
stc
push
jo
notb
enter
mov
inc
rol
xchg
mov
and
mov
test
xor
add
adc
mov
hlt
cmp
cmp
das
call
jae
cld
and
loope
sbb
inc
cmpsb
iret
add
mov
cmp
xchg
mov
imul
adc
lock
lock
push
pop
and
or
push
shrl
pop
outsl
rolb
insl
lods
aam
adc
ret
das
cmp
mov
jnp
out
mov
scas
add
movb
pop
in
int3
in
xchg
stos
aam
fdivr
mov
hlt
sbb
mov
sub
push
sub
adc
inc
and
lock
mov
adc
xor
test
ds
cmp
dec
pop
jl
dec
test
sbb
lock
test
loopne
mov
jecxz
pop
mov
inc
mov
cmc
cmp
negl
sub
push
or
add
addr16
mov
and
cwtl
aaa
inc
xchg
sahf
adc
insl
mov
outsb
ljmp
popf
imul
sbb
in
jns
jo
mov
imul
out
pusha
aam
fwait
cmp
pusha
lds
cmpb
inc
jae
shlb
inc
fimull
shll
loop
mov
xor
je
sahf
jb
push
mov
mov
dec
pop
das
dec
les
andl
push
mov
or
scas
pop
scas
xchg
cltd
sti
adc
dec
ds
andl
cmp
aaa
pop
push
dec
ret
lret
jo
popa
sarb
shll
mov
inc
xchg
inc
sbb
in
scas
int3
adc
mov
inc
sarb
shl
jae
dec
movsb
movsl
in
cmp
jns
bound
adc
push
ret
jne
imul
mov
xchg
jae
lods
jl
aaa
imul
xor
fbld
jb
or
sbb
fdivs
mov
xor
lods
mov
sbb
ds
rorb
fstp
sbbb
adc
jns
dec
pop
sbb
sbb
lret
pop
jl
dec
cmp
into
imul
je
in
popf
pop
jmp
adc
sub
movsb
sti
cli
xchg
pop
cmp
cmp
push
dec
adc
adc
xchg
test
adc
mov
emms
dec
cwtl
xor
scas
xchg
out
rolb
and
sbb
fnstsw
mov
inc
js
sarb
mov
dec
test
dec
lock
push
and
jne
rol
aad
lods
int3
cmp
outsl
lods
jge
inc
popa
inc
insl
lods
hlt
sbb
cvtps2pd
loope
mov
cmpsb
lds
pxor
cwtl
push
repnz
iret
and
test
test
lods
lea
out
and
lret
pop
mov
in
inc
rorb
xor
xchg
fnsave
clc
push
sub
scas
cmp
scas
pusha
dec
js
jecxz
adc
stos
jmp
mov
and
fwait
bnd
fs
push
mov
dec
inc
sub
fistl
cvtps2pd
lret
lods
pop
jbe
ljmp
adc
xor
aaa
mov
pop
xor
std
push
push
in
stos
push
andl
mov
rcll
push
jno
xor
enter
lea
bound
scas
jg
or
ficompl
outsb
lahf
jmp
inc
or
rclb
mov
outsb
imul
cmp
mov
insl
xchg
lcall
add
shlb
sbb
into
ss
add
xchg
pop
dec
pusha
ret
inc
test
scas
xlat
xorl
push
cmp
iret
sub
jg
jle
in
lods
mov
mov
rcrl
ret
stos
clc
rorb
jl
int
test
pop
jo
cmpsl
sbb
dec
sbb
mov
insl
cwtl
mov
sub
nop
mov
sti
loopne
imul
dec
sbb
cmp
dec
inc
xor
leave
in
das
fwait
arpl
fbstp
mov
lods
add
xor
cmp
cs
andl
xor
sub
test
add
add
dec
cmp
push
and
adc
xchg
and
inc
insb
jae
lods
mov
jg
inc
into
fildl
add
stc
ljmp
fstpl
leave
outsb
mov
pop
dec
adc
adc
inc
jl
mov
jecxz
test
lock
adc
negl
lds
push
jmp
pusha
inc
roll
lret
lcall
adc
stc
rcll
mov
cmc
add
mov
mov
xchg
scas
pop
out
mov
test
arpl
push
cli
ltr
jp
sub
repz
push
or
roll
push
push
inc
pop
mov
pop
add
xchg
pop
hlt
mov
mov
push
and
cmp
sub
out
test
pop
or
inc
push
lret
cmp
in
inc
bound
pop
out
add
ljmp
cld
sahf
nop
jno
rcll
scas
cmp
sub
shl
iret
xchg
inc
jge
dec
pusha
shlb
pop
jae
insl
pop
cltd
add
lea
cltd
cmp
push
sbb
jns
cmp
sub
push
inc
cmp
lea
je
loop
mov
and
pop
out
aas
xchg
jg
iret
and
mov
shll
cmp
sub
das
mov
pop
inc
addr16
test
ss
inc
inc
lea
sbb
rcl
test
testb
mov
cmp
mov
cltd
sub
add
push
dec
popa
cmp
fwait
jae
out
cwtl
adc
andb
jns
pop
pushf
inc
sub
lret
out
fsubrl
sahf
sub
sbb
push
adc
mov
popa
pop
sbb
imul
cwtl
dec
sbb
int3
loop
cmc
ja
out
jg
push
and
mov
les
mov
sub
jno
test
negl
fwait
lea
cmp
scas
xchg
xor
sti
mov
imul
ret
nop
popa
push
imul
je
pop
addr16
sahf
in
cvttps2pi
insl
xor
mov
cs
pop
repnz
push
mov
push
xor
jmp
stc
aaa
push
bswap
jbe
lret
and
sarb
inc
xchg
fldt
mov
lock
ficoms
and
repz
leave
enter
scas
sbb
loope
jb
in
repnz
fidivrl
sbb
ja
push
inc
mov
jno
jmp
dec
adc
pop
das
enter
fidivs
fdivp
mov
push
clc
mov
inc
xlat
pop
add
sub
out
adc
adc
dec
loopne
cli
outsl
jnp
xchg
scas
and
mov
mov
pop
xchg
subb
repnz
sbb
or
inc
data16
mov
lahf
pop
fistl
xor
js
cmp
roll
repnz
xchg
rclb
out
pop
xchg
scas
or
emms
mov
xlat
inc
iret
jne
sbb
inc
lds
mov
mov
popf
dec
xchg
pop
mov
rclb
jnp
pop
movsb
shrb
decb
mov
jl
cs
xor
loopne
shll
inc
mov
and
cmpb
cmp
inc
xor
ds
cli
loope
xor
inc
push
or
fisubrs
fimull
aas
or
stc
lcall
stc
sarl
sub
outsl
inc
arpl
inc
stos
int3
gs
loope
stos
sbb
clc
sbb
cmp
cmp
fwait
jecxz
add
arpl
lock
outsl
sub
and
push
cli
xchg
inc
xor
push
xchg
dec
scas
add
mov
cli
cmp
pop
hlt
orb
adcl
dec
int
cld
jge
iret
pop
add
or
test
inc
fsubs
fisttpl
xor
imul
sub
fstpt
imul
cwtl
enter
inc
xchg
cs
pop
xor
arpl
sbb
mov
cld
arpl
orl
mov
pop
add
mov
lods
mov
ljmp
pop
sub
rcll
and
in
and
cmp
fwait
lcall
rorb
cli
adc
popf
or
nop
pushf
les
scas
jmp
mov
dec
insl
mov
jae
sbb
insb
push
pop
add
lahf
roll
dec
fs
jo
fstpt
mov
mov
sbb
into
xlat
pop
out
icebp
xor
shll
fistps
sub
jo
adc
pop
cmp
add
cmp
cmpsb
jbe
push
incl
je
mov
adc
xor
mov
data16
push
pop
mov
xor
inc
jae
hlt
or
mov
scas
mov
notb
mov
pop
mov
and
sub
sub
mov
int
or
ss
test
cltd
std
lods
jnp
xor
jmp
out
pop
aas
insb
dec
cmp
sbb
lret
inc
imul
dec
sahf
notb
clc
inc
pop
push
lret
mov
dec
jp
cmp
push
adc
loop
xor
fidivs
stos
iret
pop
and
enter
jg
push
clc
icebp
std
lret
sbb
sbb
or
pop
xchg
addl
xchg
inc
addr16
roll
mov
sti
in
xlat
das
push
rcrl
jae
dec
xchg
inc
xchg
test
outsb
cld
add
fwait
or
xchg
cli
fidivrl
in
xor
clc
arpl
jle
push
icebp
rolb
mov
xchg
ss
or
jne
and
jbe
fsubs
add
in
xor
cwtl
mul
mov
ljmp
adc
push
iret
xor
inc
push
or
out
cwtl
inc
and
xlat
aad
leave
lods
gs
lods
adc
mov
ret
pop
mov
inc
push
sbb
add
push
popf
push
and
jb
mov
ja
jle
and
aad
push
add
stos
decb
pop
mov
out
xor
out
sub
pop
push
jp
insl
cmpsl
and
and
in
decb
push
test
lahf
adc
mov
dec
add
lods
lret
push
add
andb
push
gs
inc
subb
mov
popl
pop
in
mov
cmpb
fidivl
fdivs
mov
or
pop
sub
bound
mov
cli
pop
jecxz
aad
enter
insl
pop
push
jcxz
pusha
call
fistpll
lcall
mov
jno
shrl
fwait
int
mov
jnp
jae
push
jbe
les
jecxz
shrl
xchg
mov
sub
inc
rorb
repz
int3
push
in
dec
jl
xchg
lcall
adc
add
call
push
jnp
notl
pop
les
push
jno
aaa
cmpl
pop
daa
jg
dec
lds
push
xchg
cwtl
mov
rcll
adc
add
sbb
movsb
xlat
dec
push
sub
sub
and
aas
es
test
add
push
jb
adc
sbb
push
adc
mov
push
sarb
jmp
ss
sub
ret
add
jo
out
lock
in
cmc
mov
outsl
outsb
pop
jbe
fldl
mov
sub
rcll
mov
mov
or
hlt
adc
jge
sbb
sub
movsl
imul
jo
jl
imul
rclb
dec
and
xlat
imul
pop
mov
jp
pcmpgtb
sub
outsb
popa
xor
pop
mov
insl
push
ds
mov
fldcw
int3
into
into
mov
insb
ret
or
pop
sbb
xchg
cmp
push
mov
sbb
cmp
imul
test
aam
push
cmpsb
scas
mov
call
fs
mov
iret
xchg
repnz
sbb
dec
imulb
gs
iret
mov
in
dec
sti
and
mov
xchg
dec
push
pop
mov
test
das
xor
subl
pop
adc
sbb
rcrl
adc
xchg
xlat
testb
cmp
out
sub
jmp
orl
test
imul
xor
pop
insl
adc
cmp
dec
in
and
sub
icebp
or
stos
adc
xchg
sahf
pop
jmp
rcl
jg
flds
xchg
fcoms
inc
ja
jb
leave
add
mov
or
mov
jge
and
fidivs
push
lods
xchg
fdivrl
push
aam
pop
xchg
mov
aas
sub
popf
pop
popf
lret
mov
addr16
test
push
leave
in
into
je
fistl
push
cs
out
inc
mov
aaa
sets
call
add
andl
pop
lea
sbb
scas
pop
jnp
js
ljmp
sub
cmc
xchg
loope
imull
add
mov
shl
sub
add
pusha
push
cmp
lret
or
pop
inc
jo
repnz
in
jnp
xchg
sub
leave
mov
push
add
aaa
or
icebp
lahf
gs
mov
dec
mov
ss
jmp
sub
mov
mov
push
sbb
aas
jl
sub
push
mov
pop
out
addr16
stos
divl
pop
lods
sahf
fidivs
outsb
push
inc
jmp
jo
shl
pop
xchg
pusha
add
pop
xor
imul
add
sbb
push
push
xchg
or
or
les
xor
jbe
lds
fdivrs
in
adc
pop
and
std
in
pop
iret
mov
inc
or
sbb
xchg
and
push
adc
dec
and
dec
subl
inc
setge
and
add
inc
scas
dec
mov
cmp
mov
pop
add
sub
xchg
xchg
and
pop
gs
dec
insl
mov
loope
mov
push
jge
and
shrl
popf
cmp
sbb
adc
mov
or
or
or
fisubrl
in
js
lcall
push
addr16
adc
fs
add
adc
xor
push
xchg
outsb
pop
mov
sbb
jle
sti
es
mov
push
mov
pop
jge
mov
mov
fdiv
das
jecxz
fbstp
ss
lret
add
scas
sar
subb
pop
into
loop
sub
xor
add
cli
stos
xchg
icebp
mov
mov
lea
sub
ja
xchg
jo
mov
pop
push
push
jp
mov
out
cmp
mov
cmp
jns
inc
add
fbld
popa
fstpt
inc
xor
movsl
and
lcall
lret
mov
push
out
leave
popa
ljmp
cmp
test
push
adc
mov
int3
js
sub
std
enter
arpl
add
jb
mov
adc
jnp
jo
xor
xchg
xchg
push
ret
xor
adc
pop
mov
ret
push
or
test
jne
orb
subb
jnp
inc
repnz
inc
and
lcall
sub
lcall
push
sti
inc
push
negl
int3
dec
push
jp
popa
push
and
mov
pop
out
xchg
and
ret
mov
lahf
outsl
mov
icebp
out
test
pop
lcall
xor
fwait
mov
and
adc
in
movsl
seta
lret
loop
js
fdivs
mov
fldenv
shrl
or
mov
cltd
sbb
orl
bound
mov
sbb
std
jp
mov
lods
xor
andl
xchg
or
cmp
or
iret
rcl
movsb
or
pop
fs
and
cmp
repz
add
daa
loope
dec
int3
stc
cmpsl
inc
aam
fcomp
mov
jne
lret
mov
incl
outsl
cli
std
fwait
dec
inc
jp
sbb
jae
inc
mov
push
mov
into
push
dec
cmp
cmp
popf
cmp
add
mov
stos
pop
shlb
leave
adc
mov
insl
stc
jbe
mov
loopne
scas
popl
jns
subb
in
insl
pop
pop
inc
sub
sbb
push
push
add
sbb
enter
mov
scas
sbbb
es
pusha
jnp
test
jge
push
sub
adc
sahf
data16
addr16
lahf
test
outsb
insl
outsl
add
add
xchg
dec
fcomp
add
mov
call
loop
adc
cli
pop
aaa
insb
mov
fistl
mov
leave
hlt
pop
rolb
xchg
sub
push
stc
test
gs
cmp
out
mov
push
sub
pop
loope
movsb
sbb
ficoms
cmp
sbb
mov
lret
imul
xchg
sbb
pop
push
lcall
lret
mov
pop
cmp
push
arpl
xchg
add
mov
dec
push
in
and
rolb
and
stos
jne
mov
fdivp
int
fcoml
cli
mov
lea
push
ret
xchg
shrb
inc
cli
jmp
push
mov
cld
cmp
pop
test
xorb
inc
shll
push
mov
jbe
stc
mov
sbb
push
push
jns
sbb
out
popl
cs
cmp
inc
rorl
mov
aaa
imul
call
pop
add
dec
mov
ss
mov
lea
mov
pusha
push
stos
fucomi
sbb
lret
dec
loopne
mov
scas
aas
mov
sub
sbb
ret
repnz
stos
cmc
pop
mov
inc
inc
fldcw
fnstsw
sub
sahf
add
xor
or
fwait
mov
fs
add
xchg
cmp
push
adc
adc
adc
shrl
xor
or
imul
adc
mov
pop
inc
pop
mov
cmp
inc
jnp
outsb
and
outsb
psrlw
inc
pop
cmc
dec
inc
cmp
mov
inc
fldt
cmp
xchg
pop
ss
push
pushf
sbb
mov
scas
adc
andl
jbe
in
cmp
daa
add
addr16
cmp
and
sbb
mov
mov
mov
pop
dec
fstp
fcompl
out
ret
test
lea
xchg
cmpsb
mov
lea
insl
divb
and
int
adc
sti
adc
sarb
inc
test
dec
mov
scas
sbb
scas
ret
and
popf
inc
xchg
jne
in
ja
xchg
push
imul
inc
mov
rcl
xchg
push
mov
insb
sbb
das
pop
pop
sub
push
dec
int3
in
cmpsb
cli
mov
rcrl
cmp
movsl
cmp
push
insb
push
jge
aam
inc
lock
daa
repz
add
cmp
inc
ss
ficoms
inc
pop
dec
mov
ja
loopne
pop
mov
add
push
push
push
js
adc
xor
mov
adc
test
jae
ja
dec
in
mov
mov
push
jae
sub
nop
pusha
and
mov
sbb
jg
xchg
mov
cltd
jecxz
in
ljmp
jmp
lods
jae
movsb
push
mov
dec
mov
jecxz
xor
loop
jbe
sub
and
adc
js
push
adc
cmp
sbb
dec
js
mov
ljmp
jbe
mov
adc
mov
and
je
ret
add
pop
repnz
and
std
popa
adcb
scas
jb
and
sbb
dec
mov
mov
adc
and
or
push
ljmp
xchg
push
std
mov
or
mov
popf
xor
stc
lret
or
in
jae
sub
inc
mov
mov
push
mov
pop
add
jnp
pop
xchg
inc
fiadds
jo
mov
adc
xchg
sbb
fistpl
and
push
adc
and
lea
cmp
adc
and
js
inc
cwtl
cmp
or
jae
idivl
add
icebp
movsl
movsb
xor
pop
dec
into
pop
lods
jns
jmp
sbb
lret
xor
jp
adc
nop
cmp
push
and
xor
js
dec
xor
push
lock
notl
enter
fsubr
dec
sarb
mov
fnstsw
push
pop
imul
xchg
or
and
dec
idivb
loop
cmp
pusha
ret
movsb
xchg
mov
daa
fdivl
hlt
orl
pop
je
dec
insb
sti
xlat
push
xchg
fs
fistl
cmp
pusha
cmp
mov
addr16
jge
bound
int3
out
or
aam
mov
pop
je
sub
mov
mov
cwtl
lcall
lcall
pushf
lahf
mov
arpl
mov
sysexit
mov
cwtl
or
stos
pop
jge
fsubr
xlat
out
xchg
sbb
dec
sti
repnz
enter
and
sub
xchg
xchg
fists
jbe
adc
ds
push
push
xchg
aas
cli
mov
mull
pop
ds
jmp
loop
in
std
sub
inc
or
mov
scas
jo
sub
cld
orb
test
cmp
scas
pop
iret
xchg
aas
xchg
scas
lods
out
add
out
or
aam
sub
je
aam
aaa
incl
jb
std
inc
jg
inc
sbb
lods
pop
cmc
insb
cmpsb
push
fdivr
pop
js
call
and
aas
mov
leave
jl
sub
das
loopne
cmp
mov
add
sti
inc
outsl
push
in
inc
loop
pop
push
fcmovne
mov
leave
popa
inc
testl
into
adc
incl
aaa
xor
cmp
or
lahf
bound
mov
movsb
inc
pop
test
fld1
push
mov
out
scas
add
jp
adc
sub
sbbl
adc
mov
cli
aam
sub
sbbb
pop
xor
cwtl
add
or
scas
test
xchg
cmpsb
add
aad
cmp
mov
pop
add
arpl
xlat
push
daa
out
xor
push
pop
pop
ret
sbb
xchg
xlat
push
adc
repz
xchg
mov
adc
xchg
aad
or
sbb
cmp
inc
xchg
scas
push
xchg
insl
xor
push
jge
push
mov
sub
add
mov
lock
inc
in
sub
xlat
in
out
mov
dec
and
mov
fbstp
rolb
rcrb
inc
mov
xchg
pop
push
fidivl
xor
out
out
push
packuswb
pop
ljmp
mov
dec
fwait
mov
dec
pop
test
cmp
cmp
pop
js
cmpl
push
sahf
push
sbb
sti
cmp
and
out
out
dec
jmp
fcmovb
and
jecxz
mov
out
push
mov
sbb
fs
xor
stc
xor
add
and
lahf
jge
mov
mov
xchg
pop
xor
leave
dec
icebp
adc
mov
push
insb
stc
cmp
loope
add
arpl
or
fildll
data16
les
mov
movsl
jbe
mov
jmp
ss
add
xor
repnz
stos
inc
mov
imul
sub
push
xor
iret
mov
int
lcall
xor
imul
mov
and
mov
gs
sbb
stos
js
push
faddl
clc
dec
and
xchg
pop
jg
shl
cmp
shr
push
cwtl
lahf
jle
fldenv
fcomip
mov
in
movsb
ret
push
xchg
jo
inc
xchg
subl
in
divb
fimuls
fadds
pop
into
or
fstpt
inc
enter
inc
ror
sub
test
xchg
cmpb
dec
push
pop
or
cmp
call
or
insb
stos
jmp
cmp
lock
adc
jb
ss
mov
das
inc
movsb
xor
jno
leave
loop
inc
mov
jmp
or
lock
cmpsb
pusha
xchg
cltd
adc
pop
aas
push
lods
fdivr
sub
stc
pop
xor
cmpsb
lock
lahf
je
jecxz
into
fs
jmp
in
nop
mov
leave
je
or
inc
jns
out
mov
into
xor
fstpt
lret
leave
lcall
loope
dec
jae
shll
or
dec
push
add
movsl
cmpsb
jns
mov
dec
or
xor
xchg
cmp
dec
push
and
lock
sbb
push
mov
insb
dec
or
cmp
dec
sub
das
test
dec
bound
jne
push
and
mov
cmp
inc
and
sbb
test
lcall
inc
addr16
jl
xchg
adc
cmpsb
in
aaa
mov
lds
xchg
pop
pop
cs
xchg
je
pop
je
pop
clc
pushw
pop
mov
and
mov
imul
lods
lret
push
lock
push
rclb
enter
dec
dec
mov
mov
xchg
cmp
cld
imul
sbb
jecxz
imul
fsubs
mov
pushf
in
or
adc
negb
lds
loop
and
mov
cmpsl
stos
inc
push
out
add
lahf
or
sub
shll
cmpsb
mov
pusha
xchg
lahf
ja
push
rclb
mov
ljmp
mov
push
mov
movsb
test
movsl
mov
test
popa
ret
push
ljmp
loopne
cltd
xor
addr16
enter
inc
das
arpl
mov
cmc
and
add
and
rcrl
test
xchg
lcall
add
int
and
test
out
xor
test
adc
push
or
das
fidivrl
repnz
cmp
and
push
sbb
cmp
loope
push
mov
fidivrs
les
jle
repz
test
mov
and
mov
mov
sub
adc
repnz
loopne
xchg
jmp
inc
test
lahf
mov
xorl
cmp
cmp
fwait
jb
sub
fidivrs
ds
mov
popf
addr16
mov
cltd
int3
loope
fsubrl
inc
mov
in
mov
and
push
pushf
fnstsw
jg
pop
adc
lahf
cltd
and
test
mov
inc
lahf
ja
inc
xor
cmc
sub
or
inc
pop
mov
inc
jecxz
pushf
push
inc
shlb
pop
cltd
lret
jg
adcl
and
or
jl
fidivrl
sti
xchg
jge
push
les
into
add
loopne
inc
inc
sbb
dec
inc
sti
sbb
cmpsl
push
pushf
xlat
mov
in
pop
cmp
fimuls
ljmp
dec
dec
sbb
dec
popa
stc
pop
aam
xor
mov
dec
dec
test
andb
add
movb
fiaddl
mov
out
or
lock
mov
mov
sub
or
test
in
jecxz
sbb
dec
add
arpl
and
mov
das
repnz
outsl
jo
mov
int
ja
jns
cmp
cmp
idivb
cmp
sub
mov
ret
jmp
mov
stos
dec
dec
or
pop
test
mov
lret
cmp
mov
and
cwtl
jge
mov
pop
nop
and
cltd
and
and
mov
mov
push
mov
fldl
mov
rcrl
lock
mov
out
cmp
movb
mov
pop
out
pop
dec
ss
push
scas
ljmp
lds
ss
insl
adc
xchg
jne
loop
mov
inc
or
mov
notl
int3
in
xchg
inc
leave
adc
enter
aaa
sub
int3
push
popf
les
sub
pop
pop
dec
inc
pop
rol
add
inc
cmp
aad
mov
int3
rorl
jge
out
addb
movsb
hlt
mov
and
cmpsl
ja
inc
fs
repnz
mov
and
xchg
or
add
roll
or
jge
sbb
mov
or
xchg
nop
pop
inc
pushf
rcll
and
push
xor
or
and
push
mov
arpl
imulb
pop
mov
sub
in
xchg
out
test
call
pop
mov
and
fwait
lret
xchg
scas
mov
add
shll
scas
repz
std
rorb
mov
mov
les
or
sub
xchg
xchg
xchg
fiadds
into
js
jge
xchg
js
js
sbb
pop
inc
std
push
scas
dec
sbb
adc
pop
push
ja
jnp
popa
push
xor
push
arpl
test
in
lock
jb
mov
jb
loope
aam
ljmp
and
mov
push
iret
push
das
mov
in
cli
or
fists
sbb
aad
jmp
es
les
mov
js
out
push
adc
enter
fmul
cld
nop
out
test
ficoml
rol
fnstenv
sbb
pop
inc
sahf
pop
lahf
rol
js,pn
pop
mov
jmp
stc
pop
fucomi
leave
adc
shlb
push
jl
mov
adc
lock
and
adc
test
jge
iret
notl
insl
aas
out
add
mov
xor
adc
pop
mov
lahf
es
data16
jae
lret
imul
mov
sbb
jle
jne
pop
fildl
rolb
jg
mov
sub
mov
or
xor
or
push
cmp
mov
call
and
addl
or
dec
add
pushf
push
cli
pop
les
js
in
and
repnz
rcrl
jmp
movsl
int3
xor
arpl
jmp
mov
data16
iret
lock
mov
cltd
inc
out
xchg
lret
xchg
sbb
nop
ret
mov
sti
ret
inc
inc
mov
jmp
mov
jo
sarb
dec
test
shl
test
jp
pop
call
nop
and
mov
ret
pop
add
push
dec
repnz
int
push
lahf
dec
jno
popf
jae
jae
cmpsb
loop
clc
popa
lret
xchg
adc
rorb
sub
out
inc
sub
mov
scas
std
arpl
adc
scas
mov
rcll
test
mov
push
shlb
mov
sub
jo
jle
int3
cmp
and
mov
loop
adcb
icebp
adc
push
sub
mov
add
sub
lods
popf
xor
add
stc
push
fiaddl
push
shlb
push
out
fwait
pop
or
xor
mov
cmpsb
xchg
pop
push
int3
sbbl
add
sbb
rcll
jmpw
jno
aam
imul
mov
sbb
imul
and
mov
jl
ret
and
sahf
je
mov
inc
shll
fdivp
pushf
cmpl
popf
out
out
je
in
xchg
rcr
xchg
xchg
xchg
pushf
xchg
push
mov
and
cltd
add
cmp
pcmpeqb
mov
jo
xchg
mov
push
rcrl
and
subb
out
adc
repnz
es
cmp
daa
sbb
dec
mov
rolb
stos
add
es
mov
int3
clc
add
or
test
loopne
pop
cmpb
sbbl
lret
push
pop
fmul
or
hlt
xchg
push
out
shr
dec
in
loopne
push
jo
out
orl
loope
xchg
sti
inc
ss
loopne
or
in
repnz
in
push
inc
jmp
push
mov
add
in
sub
enter
enter
mov
add
inc
xchg
test
inc
rcll
jle
sub
test
leave
movsl
mov
xchg
stos
rcr
lcall
pop
xchg
adc
sub
fwait
mov
sub
pop
or
popf
loop
mov
cmp
mov
bound
add
hlt
cmp
addr16
aaa
pop
notb
mov
dec
push
jne
pop
cmpb
pop
and
ret
sarl
in
mov
and
cli
fistl
inc
shll
push
mov
push
add
ret
cmp
xor
rcrl
dec
out
out
inc
filds
pop
insl
lods
into
int
cmc
dec
das
imul
jae
sarl
lret
mov
lods
mov
xor
popf
ret
sarl
dec
or
jmp
pop
pop
jecxz
into
mov
bound
int3
fists
stc
sbb
push
mov
fcompl
popf
jae
push
sub
add
dec
inc
inc
es
add
pushf
je
and
fmull
div
sub
pop
andb
push
out
ss
popf
push
test
dec
andb
add
jne
jns
xor
mov
lret
mov
fldenv
xchg
andl
pop
xchg
mov
adc
ret
jnp
pop
iret
adcl
stc
clc
ss
ja
xchg
inc
push
sub
movb
daa
dec
pop
dec
lock
out
fsubl
inc
dec
inc
lea
jle
ret
pop
je
imull
cli
xor
add
or
mov
clc
and
push
push
lea
and
inc
and
fidivl
dec
shrb
bound
and
pop
xchg
sti
into
mov
in
loop
sub
xchg
xlat
mov
add
lock
fwait
or
and
fcmovbe
fcompl
jl
xchg
pop
movsb
in
pop
lock
dec
cwtl
mov
bound
cli
nop
inc
rcr
push
pop
and
pop
cmpsb
and
and
scas
subl
cmpsb
mov
xor
xchg
adc
inc
rcll
xor
pop
inc
pop
mov
xor
sbb
into
sbb
dec
or
outsb
insl
mov
mov
insl
jmp
loopne
subb
movsl
loope
cmpsb
or
ss
xchg
imul
mov
jae
insl
not
ss
idivl
mov
sbb
push
pop
xchg
out
sbb
cltd
push
sbb
push
dec
xchg
xor
mov
mul
insl
cmp
incb
test
lds
cmp
dec
inc
mov
fisttps
imul
daa
jp
xchg
movsb
jge
dec
or
mov
mov
aad
std
sbb
or
out
stc
sbb
mov
ret
in
add
push
stos
or
fldenv
dec
lods
int3
ds
scas
scas
fists
mov
stos
lods
shlb
mov
inc
lret
and
jg
and
jmp
cmpsb
xchg
push
movsb
pop
in
ret
aas
in
pop
sti
scas
dec
mov
jno
jne
xchg
imul
dec
es
cwtl
imul
push
push
sbb
in
inc
cmp
jp
dec
xor
mov
or
xchg
mov
mov
xchg
stos
popl
mov
mov
shl
out
scas
add
mov
mov
frstor
jp
xchg
sub
pop
push
arpl
outsb
push
sar
pop
mov
mov
gs
xchg
dec
cmpsl
mov
shrb
sub
sub
mov
mov
jo
mov
shll
jp
xchg
pop
repnz
aad
lret
ret
aaa
sub
out
push
mov
dec
jno
mov
push
aad
test
pop
mov
test
lea
xchg
mov
aad
cld
scas
cmp
fistl
nopl
cmp
pop
fwait
hlt
pop
test
daa
aam
les
dec
pop
inc
fisubrl
ljmp
mov
mov
jle
mov
lds
js
fisttps
ror
cli
xor
sahf
ss
mov
pop
stc
pop
movsl
sbb
and
xchg
push
popa
lock
imul
js
in
jge
push
pop
xor
jne
jae
push
jae
bnd
sbb
mov
pusha
push
mov
notb
bound
scas
in
mov
clc
aas
dec
push
or
roll
dec
or
add
outsl
jmp
and
testl
fstpt
jbe
jns
and
cmc
mov
cmc
mov
xchg
sbb
xor
sbb
mov
lods
push
cmc
int3
mov
lea
adc
xchg
jb
stc
mov
inc
sti
stos
gs
aas
roll
out
and
push
xchg
mov
mov
jae
ds
test
or
mov
out
stos
cmc
jecxz
orb
mov
and
xchg
push
and
mov
fisubs
fisubrl
mov
out
add
sub
addl
or
shrl
or
jo
test
pop
or
cmp
add
gs
test
cmpsb
push
ja
cwtl
and
pop
cwtl
mov
xchg
cmp
mov
cmpsl
daa
sub
mov
xor
and
fisubl
push
lcall
mov
adc
mov
inc
clc
stos
jbe
stos
jecxz
dec
cmpsl
cmc
xlat
or
dec
inc
dec
push
mov
daa
xor
loop
cmp
sub
cmp
fnstcw
adc
xor
inc
inc
cmc
xchg
lcall
mov
push
cwtl
push
inc
or
iret
je
jge
lock
push
pusha
stc
adc
cmp
movsl
les
sbb
adc
pop
mov
shrl
inc
cmp
jbe
jne
jg
ret
or
mov
sbb
adc
shll
pop
adc
loop
outsl
mov
adcb
cmp
in
gs
fnstsw
xor
sbb
xor
mov
in
idivl
aad
mov
mov
jmp
add
cmp
add
test
xor
out
movsb
scas
test
cmp
ret
lret
sbb
cwtl
movsb
aaa
fidivrs
popf
inc
pop
lea
mov
lcall
into
mov
fwait
shll
stos
pop
add
xchg
jge
mov
sbb
pop
ficoms
out
sbb
sbb
jp
dec
outsl
in
out
add
pop
int
pop
inc
xor
popa
add
cmp
ret
leave
mov
addr16
test
popa
mov
repnz
inc
xor
lods
adc
mov
dec
sbb
out
jl
cs
sbb
adc
or
data16
adc
inc
push
pop
or
mov
mov
incl
jl
dec
sahf
adc
cmpsb
lods
lock
outsl
es
jl
ja
icebp
sahf
fidivs
inc
sbb
ret
or
iret
jmp
push
mov
call
sarl
jmp
or
mov
sub
shrl
mov
jb
pop
mov
adc
mov
jle
popa
adc
pop
outsl
pop
pushf
das
mov
or
lods
in
fstpt
out
sub
cmc
fstpl
inc
xchg
lret
jp
xchg
push
lret
and
mov
in
push
push
scas
in
push
inc
cmpsl
sub
aaa
nop
inc
ss
xchg
push
test
mov
pop
jle
jnp
mov
in
inc
hlt
not
xchg
adc
aas
movsb
or
lds
sbb
xor
cmp
ja
add
pushf
jge
inc
out
or
push
ds
xor
test
sub
xchg
pop
mov
lock
rcr
in
pushf
sbbb
mov
mov
fmuls
jo
test
fwait
add
sbb
pop
mov
or
mov
sbb
popa
adc
jb
pop
bound
jae
sbb
inc
pusha
mov
aam
sbb
adc
je
gs
mov
cmp
dec
loop
push
dec
ret
cli
cmc
mov
sub
mov
arpl
mov
jne
sbb
sbb
pop
jg
je
movsb
enter
shll
cmc
ljmp
fs
pop
push
mov
jg
ret
fnsave
fisubrl
xchg
fcomps
mov
test
inc
popf
std
mov
push
sub
jl
addr16
add
repz
aad
sub
adc
xor
sub
int
or
mov
sub
jae
test
xchg
adc
add
cmpsb
sbbl
xchg
or
pop
orb
es
add
inc
mov
cmpsl
sbb
jo
gs
es
divl
shll
jecxz
and
jno
push
rcl
mov
or
push
xchg
mov
lret
pop
das
inc
jle
out
adc
mov
outsb
mov
inc
inc
xor
adc
dec
push
add
les
movsb
outsb
adc
jno
pop
adc
popf
xor
xor
into
push
movsb
and
sbb
add
aaa
pop
enter
imul
xchg
dec
mov
call
in
or
das
rorb
out
je
push
jbe
fwait
std
mov
fwait
mov
lods
push
dec
adc
jecxz
repz
int
roll
pop
pop
clc
mov
dec
lret
shlb
in
dec
add
imul
ret
nop
dec
dec
adc
lea
jge
fldcw
pop
andb
insb
cli
ljmp
mov
mov
sahf
or
sub
mov
add
dec
aad
cmp
push
pop
cld
sbb
mov
in
ds
push
stos
mov
out
cmp
sub
xchg
test
out
pop
pop
adc
cmpsl
lea
cmpsl
cmp
aas
aaa
sbb
sub
imul
or
icebp
test
das
adc
or
cmc
add
and
xchg
rolb
inc
sti
inc
xor
jp
or
mov
jg
push
in
mov
and
popf
subl
std
movsb
fimuls
out
fsts
xor
movsb
adc
mov
lock
jno
mov
add
aam
movsl
and
inc
adc
pop
sub
add
pop
jge
lods
cli
inc
sub
test
ret
stc
lea
pusha
inc
and
xchg
or
repnz
mov
movsl
lock
jmp
ds
sbb
xchg
leave
mov
push
jbe
sub
jno
dec
and
fdivs
pushf
int
mov
mov
dec
fdivs
cmc
jb
ljmp
xchg
movsb
dec
push
lods
ffreep
and
adc
cwtl
ret
pop
sub
call
jae
xchg
loop
fldenv
jno
jne
inc
das
orl
and
movsl
sub
xchg
jns
add
sub
jle
ja
sbb
mulb
pop
js
lahf
adc
lods
push
push
repz
or
rorb
inc
cmp
mov
sub
popa
lods
nop
pop
shl
mov
scas
cwtl
std
mov
fists
xchg
fwait
sbb
popf
dec
xchg
arpl
dec
popf
mov
jns
inc
out
mov
test
xor
mov
cmp
push
andl
add
sub
test
aad
xor
cmp
inc
rcrb
insl
stos
mov
lods
push
rclb
mov
xor
inc
sbb
ds
aad
fscale
les
loope
cmpsl
xchg
mov
pop
pop
mov
mov
cmp
cwtd
jle
cltd
cmp
in
jmp
xchg
mov
movsl
mov
fwait
add
insl
push
lods
cmpsl
push
loopne
inc
lock
mov
xor
sub
dec
pusha
int3
lcall
xor
pop
popa
clc
jns
xor
sbb
or
jne
pop
xchg
push
psllq
insb
adcl
sbb
ja
dec
incl
cmc
xor
std
fimull
sub
lock
insb
jle
loope
sbb
movsl
mov
imul
and
xor
xchg
outsb
add
cmp
es
xchg
mov
jl
pop
fs
js
loope
int
add
xchg
clc
lock
sbb
movsb
mov
xor
insl
lds
jle
jmp
js
dec
loop
adc
sahf
ss
cmp
outsb
cmpsb
and
adc
js
int
aam
in
dec
ficoms
repz
inc
jb
pop
cs
pusha
jl
int
nop
pop
cmpsl
pop
jge
cmpsl
adc
rcl
sarl
fidivrl
or
inc
push
mov
sti
cld
out
xchg
jl
add
cli
fbstp
aam
push
mov
and
into
aam
cwtl
cmp
dec
pop
ret
mov
jecxz
xchg
mov
rorb
scas
xchg
cmp
push
and
out
mov
mov
cli
sub
push
dec
stc
push
sub
dec
fs
push
cmp
outsl
sbb
or
outsl
lret
xchg
xor
leave
add
mov
add
addl
nop
jge
int
inc
jae
lret
push
inc
sub
jo
lds
scas
sub
mov
mov
mov
push
xor
popa
mov
in
ret
ret
xor
or
dec
push
loope
cs
pop
push
cmp
popa
lret
mov
sbbl
in
lcall
mov
dec
insl
jl
jne
stos
xor
xlat
in
cmpsl
imul
inc
notl
sti
iret
out
in
sub
andb
cmp
xchg
add
pop
and
int
movsb
ja
mov
mov
mov
xchg
push
pop
sbb
inc
orb
pop
in
sbb
inc
jp
mov
packssdw
mov
fcoml
hlt
jp
shrb
inc
iret
in
push
push
fwait
and
in
addr16
rcr
xchg
lock
scas
es
cs
fsubrp
mov
pop
xchg
dec
jb
pusha
add
cmp
repz
lods
lock
repnz
mov
mov
jns
in
add
push
cmp
mov
add
xchg
inc
scas
ja
add
cmp
jnp
mov
mov
jo
push
mov
mov
jne
jmp
push
push
out
inc
mov
pushf
push
pop
sahf
add
aam
dec
cmpsb
sub
mov
int
mov
lods
adc
mov
daa
mov
pushf
les
fidivrl
sub
xchg
cmp
jle
aad
jns
jl
add
pop
push
cld
dec
adc
adc
xchg
or
les
js
loop
xor
stc
imul
es
ret
pushf
mov
ret
xchg
lcall
nop
inc
bound
das
pushf
or
lods
fiaddl
xor
fimull
adc
cmp
sbb
ficoms
aas
js
adc
xor
fimuls
xchg
ss
aaa
push
orb
mov
push
rcrl
adc
inc
adc
xchg
repnz
sbbb
test
jg
dec
pop
sbb
mov
adcb
rcrb
xorl
arpl
idiv
pop
sbb
ss
cmp
sbb
cmp
push
test
push
scas
into
mov
or
scas
push
lods
push
and
cwtl
mov
mov
dec
xor
pop
leave
insl
inc
das
fisttps
shlb
jns
sti
pop
pop
push
add
mov
mov
adc
mov
ret
fbstp
jb
fsts
push
and
mov
pop
lahf
cmp
mov
xchg
cmp
jb
mov
xor
jnp
fistl
movsl
inc
jmp
lret
inc
push
cmpsl
pop
pusha
movsl
pop
jp
imul
xorb
xchg
cmpsb
in
stc
dec
mov
pop
jl
sti
loope
cmp
ret
cmpsl
or
adc
adc
push
or
xor
adc
mov
pusha
fsubl
sub
sub
adc
pop
and
push
movsb
repnz
xchg
and
aam
mov
adc
test
adc
add
ja
xchg
scas
mov
sub
mov
xchg
mov
mov
addb
add
scas
sarb
addl
mov
movsbl
nop
mov
in
and
les
scas
test
push
push
shlb
das
dec
cmp
sarl
dec
mov
mov
pop
and
bound
popa
or
pop
mov
dec
ret
hlt
and
mov
cmp
scas
fdivp
testl
adc
xor
cwtl
jp
test
mov
cwtl
add
mov
dec
sub
and
ds
sahf
add
ljmp
stos
loop
jo
sbb
ja
add
outsl
addr16
and
sbb
cld
fadd
test
add
cmpsl
inc
test
mov
cli
push
daa
sahf
jb
xor
push
and
iret
sbb
dec
dec
xchg
xchg
dec
out
dec
jecxz
lds
lock
iret
out
das
push
shrb
sub
idivb
sarb
add
mov
sti
fnstsw
mov
int
lds
rorl
push
dec
xchg
and
and
add
loopne
stos
inc
cmp
ret
sbb
mov
insb
push
scas
adc
jns
cld
dec
ret
jb
pop
mov
insb
or
pushf
dec
cmp
cmpsl
mov
rorl
ja
clc
xlat
scas
mov
xchg
or
xchg
js
ret
lcall
rorb
testb
or
or
mov
stos
sbb
or
jmp
lds
push
gs
or
decb
jmp
dec
mov
shll
sarb
cltd
and
mov
adc
adc
popa
push
pop
cld
xor
imul
leave
or
test
mov
xchg
adc
xor
pop
cmp
xchg
lea
enter
gs
jecxz
stc
xor
cmpsl
cmpsl
push
adc
push
jno
pop
nop
lret
pusha
sbb
inc
cmp
in
mov
cli
icebp
or
mov
sub
loopne
mov
cmpl
mov
jecxz
sub
inc
in
adc
int3
dec
lcall
pop
jne
hlt
ja
sub
inc
xchg
push
xor
out
pop
or
mov
and
jns
cmp
cld
xor
inc
jecxz
test
mov
out
aam
dec
mov
push
pusha
pop
mov
into
sub
mov
test
sub
imul
pop
fs
mov
mov
mov
jns
jl
popf
leave
lods
sub
cmp
add
push
and
sbb
pop
mov
addr16
mov
fsubs
mov
jb
inc
push
mov
pushf
jecxz
jae
mov
in
jns
int3
adc
fcompl
cmp
loope
inc
pop
stc
adc
rorb
pop
mov
mov
pop
clc
pop
es
sti
lret
xchg
add
xchg
test
jle
jle
add
cmp
dec
fildl
enter
mov
pusha
or
jmp
inc
inc
and
or
adc
add
xchg
out
dec
sarb
ljmp
in
push
push
clc
mov
cmp
fwait
subl
xlat
rorl
xor
jp
push
jo
mov
cmp
cmc
pop
test
mov
dec
in
out
mov
enter
hlt
push
add
ds
jnp
icebp
inc
fidivs
push
cmp
aam
xor
in
adc
rcr
dec
jo
pop
and
shrb
xlat
pusha
cmp
adc
leave
sahf
arpl
mov
sahf
icebp
aad
or
ficomps
mov
lods
gs
pushl
push
push
mov
push
dec
loopne
je
add
mov
cmp
jmp
mov
cld
mov
xchg
stc
lret
dec
pop
pop
inc
push
test
imul
jb,pt
ds
xchg
push
mov
sub
xchg
dec
stos
adc
inc
loop
lcall
daa
jb
mov
sbb
mov
out
mov
imul
mov
xchg
aas
jbe
xchg
or
push
cmp
pop
aaa
cwtl
mov
mov
jno
je
test
add
jns
xchg
dec
movsb
adc
cmpsb
push
insl
jg
xchg
pop
into
cmp
ds
leave
jecxz
cmp
dec
or
cmp
enter
sub
mov
cwtl
pop
cltd
mov
imul
dec
xchg
sub
popa
ret
out
xor
aad
cmpxchg
andb
and
pop
xchg
fucomi
adc
test
add
mov
adcl
or
pop
das
adc
cmp
out
mov
or
movb
ljmp
mov
int
repnz
movsl
mov
repz
pop
add
cmpsl
mov
jecxz
movsb
fbld
adc
jle
dec
mov
and
mov
out
lcall
and
inc
icebp
dec
jno
outsb
notb
aam
inc
lods
adc
sub
inc
and
and
xchg
or
ja
in
add
lahf
data16
aaa
xlat
stos
push
orb
sbb
fdiv
repz
test
test
rcr
dec
xchg
ss
lcall
xchg
addr16
jmp
dec
push
nop
and
mov
imul
stos
insb
outsl
popl
sub
out
stc
cmpsb
or
add
test
cmp
rorl
dec
ljmp
push
cmp
pop
cmp
mov
sarl
fwait
iret
daa
out
cmp
mov
icebp
in
hlt
mov
into
push
jge
and
mov
insb
mov
xchg
xchg
mov
lahf
xor
nop
or
pop
xchg
pop
popf
incb
insb
pusha
mov
mov
sahf
inc
rcrl
sub
aaa
xchg
adc
std
test
sar
daa
add
nop
mov
addb
rcll
lods
dec
outsb
xor
jmp
jl
mov
jne
ds
jp
sbb
mov
jae
xlat
bound
add
adc
movsl
lock
lahf
jg
jp
dec
imul
rcl
cs
cmpsl
sbb
dec
dec
pop
clc
aaa
mov
dec
clc
mov
jge
or
loop
jne
cmp
std
add
das
pop
xor
pusha
add
pop
push
dec
lar
int3
mov
decb
mov
in
dec
cmpb
clc
push
icebp
xchg
pop
stc
fwait
push
in
repz
add
std
cmp
test
mov
push
pop
movsb
mov
test
daa
mov
in
ss
jl
inc
loopne
fldl
mov
push
stc
pop
mov
movsb
nop
xor
dec
adc
or
faddl
dec
fldenv
test
sub
adc
cs
scas
pop
pop
scas
sbb
shlb
aad
stos
add
add
adc
out
ljmp
push
aad
xlat
jp
cld
push
inc
dec
movsb
les
inc
adc
add
arpl
xor
mov
in
sbb
xor
pop
iret
outsl
pop
test
aad
fildll
fimuls
xchg
stos
mov
xchg
add
cmp
adc
xchg
scas
sub
lret
pop
dec
inc
and
jg
xchg
ss
sti
jo
pop
mov
rcl
out
and
sbb
cmpb
mov
fwait
add
adc
cs
out
clc
in
xchg
pop
int3
fisubrs
leave
inc
adc
pop
xchg
push
xor
push
mov
push
pop
adc
into
xchg
out
movsb
pusha
xchg
push
jb
dec
cmp
and
test
loop
shll
je
pop
sbb
xor
sub
std
test
dec
ja
jb
sbb
push
jmp
add
mov
xor
sub
js
mov
lods
lods
jae
pop
inc
add
icebp
mov
loopne
lahf
mov
out
cmp
outsl
push
inc
mov
mov
pop
push
xchg
dec
xor
sub
mov
jo
fdivrl
leave
pop
gs
ds
jge
test
movsb
sarl
jl
or
lods
out
dec
pop
mov
cld
inc
lret
mov
cmp
sbb
xor
xor
outsl
mov
jb
xchg
mov
cmpsb
jl
lcall
or
iret
loopne
adc
mov
jg
popa
clc
pop
xor
in
and
imul
jne
addb
insl
pop
dec
pop
fsts
adc
lock
lds
outsl
push
xchg
daa
lret
fidivrs
ret
out
iret
cmp
shlb
sbbb
mov
lock
xor
loopne
addr16
out
jecxz
or
inc
inc
ljmp
rcll
cmpsb
mov
xor
fisttps
cld
rorl
or
xchg
push
ret
pop
mov
pop
fisubrl
faddl
jnp
mov
out
les
leave
mov
shlb
adc
pop
out
mov
mov
xchg
lcall
jb
jecxz
bound
cli
mov
xchg
and
jmp
pushf
imul
jae
sub
les
xchg
push
lea
cmp
or
xchg
aam
pop
pop
jmp
mov
jne
repnz
daa
test
push
lret
leave
sbb
out
or
out
scas
lahf
mov
mov
pop
and
fistpl
sbb
cmp
mov
mov
icebp
cs
inc
lea
dec
pop
sub
cli
push
fs
cmp
fimuls
vpsubq
mov
xor
stos
sbb
inc
hlt
dec
andl
push
rorl
lahf
cs
cs
sub
out
into
or
lods
inc
hlt
sbb
dec
lea
jmp
push
adc
or
add
jecxz
in
jo
out
pop
sbb
popf
sti
dec
sub
popf
lods
mov
cmp
push
je
insl
out
push
cmp
js
push
and
adc
xor
and
sbb
xorb
cmp
xlat
mov
inc
add
gs
xchg
insb
adc
jmp
cltd
add
xchg
je
cwtl
pop
stos
pop
lods
add
mov
mov
mov
xor
push
xlat
xor
push
sbb
and
dec
mov
xchg
inc
cmp
dec
mov
sti
xchg
and
cmpsb
ljmp
aas
movsl
xchg
cwtl
dec
std
lahf
xchg
aas
sbb
out
mov
loop
mov
stos
popa
sbb
orb
cmpl
add
cltd
dec
clc
push
loop
test
inc
stc
test
sub
movsb
jle
sub
sahf
mov
mov
out
jge
aas
adc
cs
jbe
rep
mov
cmp
ds
push
push
mov
test
pop
and
fcmovu
inc
pop
leave
pop
add
cli
ret
ss
dec
loopne
xor
jnp
push
mov
inc
or
and
pop
cwtl
call
sti
int
adc
jo
mov
out
cs
cmp
xchg
xchg
outsb
mov
sbb
daa
ds
repnz
mov
lods
xchg
orb
aam
sbb
sar
jmp
adc
mov
popa
popf
xor
shr
sub
dec
sub
fimuls
cli
and
push
mov
je
and
push
ss
xchg
sbb
sub
arpl
sbb
pop
rcll
inc
push
mov
xchg
shlb
sbb
jns
xor
mov
pop
pop
int3
rcrw
adc
and
hlt
es
xor
cmp
add
notl
xor
push
nop
sti
divl
cmp
inc
mov
aaa
add
outsb
jae
xchg
cmc
lods
pop
push
jecxz
adc
push
addl
lods
js
data16
adc
pop
in
std
outsl
es
icebp
mov
sbb
cmc
fimull
mov
cmp
and
in
adc
and
jle
clc
movsl
sub
lea
fistl
jb
outsb
jle
test
repz
inc
sbb
jge
mov
cmp
aaa
push
sub
cmp
seto
incb
outsb
adc
xlat
loopne
rcrl
ja
out
sbb
pop
cmp
lds
test
cs
scas
scas
inc
pop
mov
inc
call
mov
push
out
or
sub
mov
dec
bound
lcall
ficomps
std
lret
cmp
cltd
cmp
push
push
clc
push
movsl
push
popf
mov
arpl
inc
lret
out
shrl
cmp
jbe
insl
mov
outsl
sbb
call
inc
jp
sbb
inc
mov
sti
lret
cltd
addb
adc
cmp
and
pop
mov
popf
int3
mov
in
cmovne
fucomi
mov
pop
sbbb
mov
loope
popf
andl
mov
popa
jae
sub
subl
mov
lret
cmp
sar
lock
outsl
int
mov
fldcw
jo
mov
mov
sub
rolb
imul
push
inc
out
jg
and
cwtl
adc
bound
mov
push
cmp
mov
aad
inc
add
outsl
mov
ja
sbb
stos
ja
jae
insb
mov
cmc
in
imul
mov
sub
call
add
xor
popl
pop
mov
push
mov
enter
mov
hlt
fs
sbb
scas
xchg
mov
popa
inc
push
lods
mov
insb
inc
jo
daa
subl
nop
push
fwait
add
mov
push
pop
fistpll
or
dec
mov
data16
adc
repnz
cmpsb
fdivs
pop
inc
xor
cltd
dec
lret
or
scas
cmp
jmp
push
adc
shrb
inc
add
jns
dec
pop
adc
mov
push
pop
jno
jl
sbb
insb
and
mov
cmp
shll
jecxz
adc
inc
out
shl
jecxz
stos
cltd
pop
mov
xor
xlat
iret
addr16
dec
add
adc
dec
mov
sub
mov
iret
or
cmp
and
jl
test
push
push
je
push
adc
push
xchg
xor
jge
adc
leave
adc
arpl
push
cmp
xchg
insl
aas
cmp
stc
push
pop
push
xchg
shrl
fucomp
jl
lea
dec
and
pusha
leave
vmovdqa
je
ja
push
ja
mov
nop
cmp
push
push
js
and
inc
sbb
jmp
das
into
adc
pextrw
cmp
in
loop
fdivs
fldenv
inc
push
mov
ljmp
adc
loope
xchg
xchg
mov
adc
scas
aad
adc
pushf
push
sub
mov
out
xchg
sub
repnz
test
mov
xor
pusha
cld
dec
jb
mov
pop
adc
dec
dec
aaa
pop
inc
aam
in
add
xor
mov
mov
aad
cmp
iret
ss
fsubrs
rcll
pop
pop
mov
inc
cwtl
pop
lds
data16
pop
outsb
jb
lock
adc
ds
rolb
fisubl
push
mov
ret
ja
and
aam
jnp
lds
adc
mov
sti
js
fmuls
jae
mov
xchg
insb
ucomiss
pop
push
leave
or
movsb
lods
or
mov
pop
lods
enter
cld
ja
dec
sarb
pop
xor
test
cld
call
repz
shll
jo
fcomp
outsl
cld
insl
fs
cmpsb
ja
add
test
xorb
arpl
int
jb
adc
in
jmp
xchg
fmul
xor
into
xchg
mov
cld
mov
cs
in
out
popa
popf
aam
add
cwtl
pop
inc
push
mov
xlat
inc
out
xor
jmp
pop
jae
pop
or
push
int
sarl
or
test
push
imul
cltd
mov
xchg
dec
pop
lods
loop
stos
pop
rcll
push
mov
je
inc
cld
mov
add
test
push
sbb
ret
pusha
and
test
clc
loope
push
push
push
pop
fistpl
push
call
mov
pop
sub
and
loop
out
sub
jl
add
test
adc
mov
pop
mov
imull
adc
repz
sahf
mov
notl
sub
ret
insl
nop
jmp
fwait
jmp
and
popf
int
rolb
xchg
cmpsl
jl
inc
xor
hlt
fildll
xlat
fldcw
sbb
sbb
push
dec
cmc
sbb
xor
test
sti
or
dec
shlb
mov
scas
add
cmp
inc
jge
rorb
out
jl
and
xchg
cli
test
in
js
lret
pop
std
adc
mov
push
loop
add
xor
test
mov
pop
sbb
push
sub
cltd
lods
mov
jo
mov
mov
orl
out
dec
enter
jo
ret
lret
xor
jp
lahf
das
sub
jb
pusha
addr16
jno
mov
push
sbb
push
popa
aam
out
mov
xlat
sbb
cld
repz
faddl
imul
add
jecxz
or
sub
data16
in
sbb
ljmp
and
adc
scas
call
dec
sti
cwtl
mov
test
shll
add
add
or
lret
mov
mov
mov
inc
fidivl
test
adc
inc
testb
fdivs
sub
fstpt
out
xor
popf
mov
xchg
cmp
mov
rcrb
jae
xchg
xchg
inc
testl
inc
lds
mul
lea
add
xchg
popf
xchg
cs
adc
mov
lods
inc
dec
movsl
popa
xor
std
jmp
gs
enter
jle
rorb
outsl
ljmp
and
mov
jl
iret
pop
mov
mov
cmp
mov
je
or
or
mov
and
inc
dec
adc
pop
ja
mov
push
jecxz
inc
xchg
cmp
sbb
or
mov
in
fnstsw
in
mov
or
mov
xorb
inc
cli
movsl
xchg
pop
xor
call
cmp
lods
pushf
mov
inc
mov
adc
in
xor
clc
call
fwait
ljmp
hlt
out
push
popf
mov
xchg
mov
out
xchg
cwtl
fidivrs
push
sub
sbb
popa
xchg
stos
and
jb
mov
adc
iret
scas
and
into
repnz
fdiv
pop
mov
mov
addr16
clc
sbb
enter
inc
push
mov
xchg
nop
fimull
pop
adc
jns
bound
sub
push
xor
in
sbb
dec
inc
in
in
sub
lods
mov
repz
shl
popf
push
ficomps
stos
iret
add
or
sub
mov
clc
xchg
stc
stos
sub
mov
cmpl
sbb
and
jge
inc
std
aaa
cmp
ror
aad
xlat
frstor
xchg
sub
or
repnz
xlat
std
pop
loop
hlt
sarb
test
mov
push
das
sub
mov
push
xor
xchg
js
mov
push
cmp
out
out
mov
std
or
cmpb
pop
jb
lock
mov
or
cmp
xor
cwtl
aaa
cmpsb
testl
push
cmp
inc
bound
iret
aas
pop
cmp
rolb
push
mov
mov
iret
or
sub
cli
int
scas
les
ss
icebp
push
movsl
and
jg
sub
pop
shlb
icebp
in
dec
mov
push
ret
mov
fwait
adc
or
daa
loope
enter
pop
aam
jl
jmp
push
adc
pop
out
popa
adc
pop
push
cmpsb
xchg
sub
adc
or
sub
mov
or
loopne
mov
imull
ljmp
pop
arpl
cmc
cmpsl
je
mov
mov
pop
xor
jb
push
mov
fcompl
and
and
cmp
aad
cmp
push
push
pop
xchg
mov
jle
adc
repnz
mov
stos
sahf
cmp
gs
pop
cwtl
ljmp
jl
xor
loope
cmp
in
test
push
adcl
out
push
adc
sbb
ret
fdiv
pop
inc
cwtl
inc
inc
lea
mov
mov
mov
lea
and
push
lret
push
pop
shl
cmc
adc
arpl
imul
push
xor
add
pop
cmp
ljmp
aam
dec
mov
cmpb
sbb
jp
inc
mov
mov
sub
scas
sub
daa
lds
dec
fsts
fsubs
jo
test
mov
push
xchg
in
sub
mov
movsl
fdivl
mov
out
xchg
inc
imul
mov
inc
arpl
fstl
shlb
daa
out
sbb
sbb
cmp
inc
lds
xor
mov
dec
xchg
ja
mov
jb
mov
xor
dec
xor
xor
and
pop
fnstenv
xlat
stos
fwait
imul
in
ret
or
xor
rorb
cmpsl
or
xchg
lock
cmpl
clc
mov
xchg
ds
fs
mov
sarl
lea
push
in
mov
push
jbe
mov
gs
out
ja
push
mov
jg
packuswb
jbe
pop
xchg
int3
jae
mov
jnp
mov
bound
loop
dec
ja
int3
cmpsb
fs
pop
cmpsb
movsb
out
sbb
xor
pop
mov
ss
pop
push
daa
mov
pushf
mov
lods
data16
insl
pushf
xchg
push
dec
fdivrs
cmpsb
test
inc
insl
fsts
gs
fisubl
cld
test
jb
lea
xor
push
cmp
out
mov
shll
push
orl
pop
or
bound
icebp
mov
in
mov
add
sbb
xchg
push
xor
and
cmc
andl
mov
movsl
inc
ret
std
jns
add
insl
mov
inc
in
sbb
mov
ror
xchg
sbb
xchg
fstl
add
mov
push
repz
or
mov
jno
mov
mov
lds
pop
cmp
adc
sub
cmp
testb
fildl
incb
mov
lret
pop
pop
dec
mov
pushf
sbb
aad
cmpps
push
aaa
je
lahf
arpl
lret
icebp
jmp
bsr
mov
xor
les
sbb
sbb
or
mov
dec
pop
loopne
lods
aaa
into
ret
lods
pop
sahf
xchg
sbb
dec
out
rcr
fs
das
mov
jb
sbb
jmp
cmp
repnz
xchg
rcrb
jb
outsb
fistpl
push
adc
sbb
sub
sub
sub
mov
jl
xchg
lcall
pop
sbb
ja
sub
shl
dec
rclb
adc
rol
mov
inc
popl
push
xlat
add
out
pop
cmp
dec
popa
push
jbe
lret
adc
data16
push
xor
into
mov
cwtl
jmp
pop
inc
sbb
push
jmp
rcl
rolb
mov
aad
mov
jo
inc
lods
pop
insl
jg
xchg
iret
jae
cmp
imul
insl
rcl
stc
mov
shlb
lods
clc
sbb
insl
andb
mov
push
mov
add
sub
shl
gs
int3
push
inc
push
pop
xchg
cltd
daa
and
and
aas
cmpsl
sub
das
sbb
jl
xor
jb
scas
push
dec
mov
cmc
loope
mov
inc
pop
and
je
adc
cmp
out
pop
dec
sbb
aas
xlat
mov
push
jp
je
xor
sub
cltd
iret
and
negl
sbb
pop
push
xchg
add
fistps
xchg
and
fsubl
jno
mov
pop
jp
push
mov
dec
dec
push
lret
pusha
dec
xor
dec
mov
adc
jg
jl
stos
xorb
pop
cmp
sahf
imull
aas
call
jl
mov
mov
jnp
cmp
dec
negl
stos
dec
dec
ret
xchg
push
sub
xor
insl
lods
mov
cmp
cmpsb
iret
xchg
ret
adc
mov
in
int3
mov
pop
subl
jl
lcall
or
out
jl
into
nop
mov
lret
xchg
pop
xlat
lds
aaa
ds
jae
rolb
popf
xchg
and
ja
jle
xor
and
sub
jmp
rorl
rol
and
add
in
cmp
adc
inc
in
or
mov
call
lea
mov
and
and
addr16
sub
mov
pop
cmp
daa
sti
jmp
xor
aas
pop
out
mov
xchg
xchg
dec
push
iret
push
cmp
adc
xchg
cmpsl
fadds
and
or
push
and
in
arpl
sub
mov
push
sbb
pop
push
jl
push
pop
dec
sub
ficoml
ljmp
fadds
aam
xlat
cmp
sub
push
push
pop
xorps
icebp
push
xchg
or
or
call
out
inc
rol
sbb
xor
dec
jg
add
add
pushw
loop
cmp
push
xor
stc
jae
fnsave
push
lods
push
mov
lcall
xchg
subl
daa
and
hlt
xlat
cli
dec
or
adc
xor
mulb
stos
je
push
push
imul
imul
popf
xchg
mov
std
or
idivb
outsb
push
cltd
aam
hlt
fs
rcrb
ja
cmp
mov
sub
add
ret
adc
loopne
push
int
sbb
add
out
loope
pop
fs
out
mov
sbb
jb
adc
push
xor
insb
inc
push
jne
add
lods
sbb
stos
mov
fcoms
xor
lret
fsubrl
inc
imul
push
arpl
movsl
dec
hlt
push
adc
mov
enter
fnstenv
push
rorb
fmul
insl
into
or
in
incb
mov
loop
daa
push
inc
jo
scas
ret
int3
scas
lock
lods
fcoms
pop
push
dec
testb
incb
ljmp
xchg
test
leave
inc
xchg
nop
pop
dec
out
fimuls
enter
sahf
loop
cmpsl
or
mov
das
addb
ret
movsb
mov
adc
ds
shll
fmull
fsts
in
out
sahf
sti
or
lcall
popa
mov
push
inc
and
add
mov
repz
cmova
add
cli
and
add
shrl
jmp
push
in
repnz
pushw
sub
mov
cwtl
inc
add
push
leave
idiv
xor
cmpsb
push
or
lods
xlat
sub
add
mov
cmp
push
pop
sbb
scas
mov
test
fcompl
mov
mov
mov
mov
and
leave
sbb
icebp
repz
push
inc
jmp
mov
mov
int
cmc
or
aad
dec
fdivs
jne
or
iret
mov
scas
dec
mov
loopne
out
aaa
cmp
lods
fwait
testl
jb
in
ja
mov
ret
in
ret
js
inc
cmc
sbb
stc
lcall
shll
xchg
pop
testb
xchg
into
adc
imulb
mov
add
arpl
cli
std
outsl
and
lods
sarl
xchg
fwait
mov
or
cmpsl
pop
jno
loope
ret
call
jl
push
xchg
adc
sbb
lcall
lea
mov
lret
push
imul
pop
xchg
push
dec
lods
add
and
mov
pop
lcall
movsl
xor
enter
add
outsb
cld
pop
jmp
jmp
push
pushf
fsubrp
iret
clc
dec
jns
or
pushf
scas
repnz
icebp
mov
cmp
jo
mov
in
lock
sbb
outsl
mov
xorl
imul
mov
rcr
fistpll
jns
lcall
fnstenv
xchg
les
stc
std
movsl
lahf
fsubr
lahf
nop
inc
xor
inc
cmp
in
sbb
mov
movsl
pop
inc
in
mov
sarb
iret
push
imul
cld
and
lahf
sbb
jnp
out
push
test
addr16
add
out
rcrb
mov
mov
adc
or
pop
out
push
xor
cltd
add
cmp
inc
push
dec
lea
sbb
in
popf
cmp
mov
xor
loopne
mov
mov
jg
loope
xchg
jle
dec
cmp
int3
pop
aaa
addb
cmp
cmp
rolb
push
add
mov
int3
aaa
jne
push
xlat
ret
daa
inc
mov
out
xor
clc
jp
dec
repz
out
xchg
jge
gs
pop
sbb
jecxz
cmp
or
stc
jp
loop
out
mov
dec
movsb
push
idivb
inc
dec
int3
inc
and
addr16
mov
outsl
stos
cs
imul
in
aaa
and
mov
adc
push
ret
add
lds
mov
imul
cmp
dec
or
and
inc
xchg
int
and
add
push
jno
mov
jb
or
adcl
cmp
and
dec
sti
imul
jmp
das
xchg
jp
inc
jns
insb
in
stos
jecxz
daa
sub
lcall
mov
mov
data16
rcr
ljmp
andl
shll
ret
and
adc
sbb
popf
aad
rorb
mov
dec
xchg
out
sub
mov
mov
mov
sbb
bound
xor
or
adc
sub
xor
imul
rcrl
mov
clc
jge
sub
xor
push
test
aam
push
xchg
fdivrs
adc
xorl
rcrl
outsb
fidivs
enter
icebp
pop
jg
dec
pop
inc
fiaddl
xor
dec
in
stos
sbb
mov
add
popf
inc
xor
sub
mov
push
pop
roll
lock
sbb
int
fstpl
mov
sbb
sub
mov
in
fnstenv
adc
push
incl
sahf
and
pop
enter
mov
ret
popa
push
test
stos
inc
mov
mov
dec
push
inc
mov
jle
cmp
mov
ficomps
mov
js
testl
lds
sub
add
subl
int
push
or
sbb
iret
dec
cmpb
adc
mov
mov
jnp
jne
add
out
movsb
clc
mov
jp
dec
in
xchg
cltd
test
and
cli
das
stc
sbb
xor
ss
int3
cmp
cmp
lahf
and
jle
mov
add
mov
sbbb
out
adc
inc
leave
ret
sub
lahf
add
jno
popa
loopne
andb
mov
cwtl
es
inc
stos
cmpsb
inc
sti
nop
mov
jecxz
loopne
inc
cmp
push
pop
gs
mov
movsl
adc
cmpb
push
test
add
mov
lret
ficomps
movsb
push
aas
rcl
sbb
adc
pop
jecxz
das
fmull
out
lea
push
out
mov
repnz
dec
sub
cli
adc
jmp
cs
cwtl
push
dec
outsb
lret
bound
mov
add
test
imul
mov
add
ret
cmp
aad
clc
pushf
ss
dec
pop
sub
stos
add
sub
loopne
mov
fwait
mov
rolb
daa
mov
pushf
cli
sub
inc
sbb
stc
cltd
pop
jns
or
xor
jne
jmp
xchg
int
outsb
pop
jmp
mov
adc
negb
and
call
fwait
test
je
cmp
xor
xor
mov
or
jo
ds
xor
dec
dec
clc
or
sbb
xor
pusha
cwtl
lock
aam
ret
push
add
push
in
xor
cs
cli
mov
bound
dec
pop
jmp
dec
push
and
out
movb
or
and
pop
or
int
ret
cmp
xorl
std
lret
jae
ja
cs
sbb
sub
xor
mov
test
xchg
in
push
mov
mov
adc
mov
xchg
jb
icebp
cltd
mov
cmpb
adc
iret
shll
cltd
lcall
cmc
cli
add
inc
or
mov
sarl
and
inc
std
movsl
out
into
pop
push
mov
push
in
cld
das
jg
aam
cmp
pcmpeqb
jg
lods
mov
in
xchg
push
mov
repnz
ja
jne
cmp
jmp
mov
inc
fwait
mov
dec
sbb
dec
xor
daa
xor
test
cmp
rorb
xchg
jmp
in
mov
cmp
ds
adc
test
push
inc
dec
scas
test
movsb
cmp
fisubrs
add
cmc
mov
pushw
call
sub
pop
lods
dec
sar
cmpb
pop
jge
mov
xor
scas
xchg
adc
sub
cmp
fsubrl
ds
cmp
xorl
sbb
xchg
js
outsl
push
jnp
xchg
pop
into
xchg
repnz
daa
fistpl
xchg
jbe
or
out
loopne
aas
add
xor
fwait
call
adc
xor
mov
scas
shl
test
mov
popf
sub
xchg
and
sub
scas
lds
test
mov
repnz
stos
cmp
outsl
mov
int3
in
int
pop
xchg
les
pop
lds
cmc
gs
lods
lahf
dec
add
popa
pop
inc
inc
cmp
sbb
sbb
movb
es
mov
inc
clc
push
idiv
dec
cmp
push
stos
jae
and
ss
pushf
mov
or
sbb
mov
jne
fnstsw
mov
aad
fidivs
push
shll
sub
data16
scas
movsl
sbb
pop
fdivrs
lcall
addr16
or
ret
add
dec
roll
push
cmp
inc
jae
inc
fldenv
add
pop
imul
mov
add
adc
push
addr16
in
mov
stos
adc
shlb
pop
push
pop
push
lea
data16
jp
or
add
rorl
movsb
pop
inc
cmp
dec
lods
aam
sahf
ljmp
add
pop
popf
xchg
fdivl
into
insl
mov
iret
mov
xor
shrl
xor
xchg
and
dec
mov
jbe
rolb
xor
xchg
and
mov
pushf
add
fisubs
cwtl
add
ss
mov
mov
jl
pop
loopne
mov
mov
scas
cmp
adcb
outsl
inc
push
mov
xlat
xchg
pop
xlat
rolb
and
fidivl
pop
dec
mov
ficompl
dec
and
mov
or
mov
sbb
lds
sub
mov
sti
pop
aaa
movsb
fld1
dec
loop
sbb
push
out
dec
jp
int3
xorb
hlt
mulb
adc
lret
paddb
popa
cmp
inc
andb
jmp
inc
lock
insb
inc
fwait
inc
mov
adc
outsl
fisubrl
mov
mov
pop
mov
push
sbbl
xor
fildll
xlat
mov
jne
push
adc
adc
aaa
sub
icebp
mov
mov
insb
cmp
sarl
push
cmp
or
add
xchg
mov
pop
xchg
pop
mov
inc
dec
mov
mov
mov
xor
cmp
sahf
cmc
mov
mov
in
ljmp
clc
inc
es
xchg
cs
push
addr16
sub
cltd
loopne
jne
cwtl
xchg
insb
int
push
add
stc
into
cmp
mov
mov
fs
jo
xchg
cmpb
rcll
fdiv
xchg
mov
jbe
pop
push
fs
clc
popf
popa
cmc
mov
insl
js
call
sbb
push
rcll
add
lahf
addr16
ret
mov
in
pop
add
fnstcw
dec
mov
out
test
mov
jne
call
lcall
shl
jge
iret
adc
mov
mov
imulb
pop
pop
push
cmc
outsb
into
adcb
sub
cs
xchg
add
imul
xor
rolb
jmp
add
jbe
and
xor
outsb
dec
pop
nop
adc
bound
mov
cmp
lods
adc
fwait
or
popa
ficoml
sbb
pop
push
mov
inc
jbe
jp
or
cwtl
cmp
mov
pop
or
loope
daa
es
stos
dec
frstor
adc
scas
imul
jns
cld
lock
out
sub
adc
xor
and
test
or
das
and
test
inc
mov
xor
lret
int3
mov
lock
enter
shl
cmc
xchg
outsb
or
jl
cmp
pop
flds
mov
sub
ficompl
adc
shrl
and
mov
ret
mov
insl
in
push
push
and
mov
jns
xchg
arpl
dec
shll
mov
jne
aas
or
xchg
jmp
cmp
inc
mov
mov
fnstcw
xchg
push
fwait
cwtl
inc
cmpsb
push
inc
dec
xchg
imull
dec
sbb
loopne
in
insb
xor
shrl
mov
mov
jnp
add
mov
frstor
mov
aaa
adc
int
stc
xchg
mov
fsubrs
jle
stc
sbb
lea
and
jae
dec
cmp
cmp
push
movsb
cmp
lret
add
dec
clc
push
fldenv
cmp
arpl
jge
ret
fwait
rorl
jg
sahf
mov
stos
cld
sub
mov
sbb
xchg
out
loop
mov
mov
xchg
mov
cs
jbe
lret
mov
scas
push
and
gs
mov
out
fistpll
insl
cltd
dec
scas
popa
faddp
mov
movsl
or
xlat
pop
cwtl
gs
lds
push
mov
int3
mov
mov
popw
pushf
stos
std
lret
jl
fstpl
xchg
je
out
iret
inc
rcrl
nop
xchg
cmpb
xchg
cld
dec
pop
popf
repz
adc
iret
lock
mov
ljmp
dec
shll
stos
cmpsb
adc
loope
pushf
es
jbe
inc
int3
mov
addr16
loope
shll
bound
xlat
cmp
ss
pop
xchg
push
dec
fisttpl
imul
xchg
add
fs
inc
out
or
and
add
xor
push
cmpsb
loopne
sbb
jge
mov
jo
rolb
fs
lret
mov
jmp
shrb
jne
dec
dec
psubq
or
and
hlt
nop
mov
mov
imul
aad
outsl
or
inc
inc
jno
mov
pop
xchg
data16
inc
jbe
jg
aaa
jge
mov
dec
cltd
divl
inc
add
adc
xor
adc
filds
push
inc
xlat
dec
movsb
or
xchg
mov
fisubrl
imul
shrb
icebp
repz
test
push
inc
push
repz
ljmp
dec
sahf
divb
dec
dec
inc
mov
pop
addr16
loope
test
aaa
sahf
std
mov
hlt
std
pop
imul
loopne
das
push
add
sbb
mov
fdivrs
enter
aas
je
mov
repz
gs
outsb
cld
mov
in
fsub
inc
iret
cmp
mov
fidivrl
jl
vpcomq
xor
test
mov
pop
dec
xor
inc
fildll
les
mov
cmp
jb
or
push
ror
mov
popa
leave
cli
xor
dec
add
pop
adc
xor
jae
std
jmp
bound
jne
lods
dec
sub
imul
shll
mov
aas
cmp
cwtl
jle
xchg
ljmp
inc
loopne
movsl
es
mov
and
pop
ss
mov
push
sbb
and
jmp
mov
and
insl
adc
rorb
lcall
scas
outsl
repnz
xorl
mov
mov
not
fstpt
jmp
int3
in
cli
add
jbe
dec
testl
cmp
dec
fwait
mov
test
cltd
inc
jmp
cmp
test
das
xlat
stc
cld
dec
adc
and
and
leave
mov
shll
aaa
jmp
in
xor
mov
cld
push
cmpsb
ss
mov
xor
cmpsb
hlt
add
push
pop
rclb
pop
les
popf
test
sarb
inc
push
mov
int
mov
test
andl
pop
outsb
dec
push
divb
jle
xchg
and
shll
add
repz
ret
mov
xor
or
sub
in
inc
xchg
pop
sub
adc
imul
ds
mov
jl
movsb
sub
or
pop
mov
push
jg
int
iret
movsb
sti
push
or
adc
icebp
and
jecxz
shrl
scas
int3
call
add
jno
test
fwait
xchg
cmp
jl
xor
mov
dec
pushf
lods
or
dec
push
xchg
inc
sahf
jbe
jno
xor
and
dec
aam
jbe
out
pop
movsl
ret
dec
sbb
fmulp
js
xchg
jp
mov
push
popf
ret
iret
repnz
sbb
in
lcall
xchg
fwait
xchg
push
inc
or
inc
mov
push
add
hlt
mov
aaa
cmp
mov
cli
mov
sub
arpl
std
xor
scas
insb
ret
movsb
dec
cmp
mov
add
call
lods
clc
test
mov
sub
pop
adc
jge
pushl
mov
aaa
pop
pop
sbb
icebp
stos
sar
jmp
mov
cmpsb
adc
mov
outsl
sbb
popf
inc
pop
es
js
push
inc
pop
jae
mov
ja
xchg
push
cmp
push
nop
mov
loope
mov
test
fsubl
stos
test
jmp
rorb
ja
cmp
mov
push
sbb
mov
test
fwait
lret
lea
push
into
or
std
loope,pn
dec
lret
push
mov
pop
mov
mov
jp
popf
mov
scas
pushf
or
cmp
int
fwait
sub
gs
xor
ret
test
push
mov
out
lock
dec
lea
jecxz
sub
lret
pop
movsb
dec
aas
pushf
mov
das
sub
lahf
out
push
dec
int
lds
iret
mov
sub
jae
add
outsb
sti
sub
or
xlat
inc
xor
jl
mov
push
pop
inc
fidivrs
mov
xor
sbb
xchg
jnp
push
cld
test
mov
dec
jp
cltd
xor
adc
xchg
mov
and
add
jle
cmp
pop
mov
push
lods
xchg
adc
mov
outsb
in
lea
in
or
mov
sub
aad
iret
jb
sub
adc
sti
adc
sbb
shlb
and
lret
xchg
mov
lods
cmpsl
add
and
dec
sub
repz
aas
push
jge
jge
cmpsl
cwtl
cld
test
outsb
sub
pop
test
fwait
stos
lret
mov
mov
mov
dec
mov
mov
sbb
les
mov
fildll
loope
shlb
cmc
jle
xchg
mov
out
cwtl
mov
fldt
lods
push
ret
pop
das
push
gs
cmovno
push
or
lods
add
call
fimull
addb
mov
cmp
mov
adc
or
dec
andb
push
xor
xchg
jo
push
sbb
cwtl
lock
push
xchg
mov
and
mov
or
jb
or
xchg
pop
dec
insb
in
xor
add
cmp
sbb
mov
mov
adc
xchg
popa
inc
dec
es
cwtl
push
stc
aam
psrad
cmp
push
inc
cmp
lds
in
cmp
ljmp
rolb
repz
push
fwait
jne
sub
sbb
mov
dec
nop
ja
fsubs
dec
mov
loope
dec
in
mov
fstpt
shl
aad
imulb
mov
mov
loope
or
outsb
les
mov
sbb
push
push
xchg
vpmulhw
lds
call
out
jp
mov
arpl
shl
outsl
mov
sub
jo
pop
mov
cltd
rcll
pop
mov
jle
cmp
fadds
movsb
sub
lods
or
out
push
outsb
lret
std
cmpsl
bound
test
xor
mov
jecxz
and
es
jae
out
mov
pusha
xor
jmp
lea
mov
fisttpl
int
sub
xchg
insb
xchg
dec
inc
fildl
add
sbb
add
cmp
rorb
idivb
js
mov
add
stc
sub
add
push
iret
jnp
mov
cld
jmp
out
mov
std
pop
pop
mov
outsl
jo
loope
xchg
pusha
pop
mov
outsl
in
hlt
sbb
mov
mov
repnz
dec
call
lds
push
aas
xor
testb
mov
int
xor
pop
nop
lock
mov
add
test
sub
out
mov
repz
daa
push
fdivs
bound
mov
push
les
stc
mov
out
pop
int3
test
pinsrw
push
adc
in
sahf
mov
and
in
insb
adc
and
test
mov
mov
xchg
push
sub
push
rol
xchg
fcmovb
pop
xor
repnz
and
sub
call
cld
cltd
inc
in
outsl
aad
jne
mov
sbbb
insb
xchg
repz
clc
fildl
shl
sub
scas
and
fs
data16
push
into
sub
loop
xor
push
aam
dec
test
adcb
xchg
xchg
lods
sbb
or
fwait
cmp
neg
push
pop
call
gs
push
data16
xchg
lahf
inc
mov
sub
dec
fs
popa
inc
xlat
cmp
addr16
mov
sub
out
mov
pop
imul
out
mov
pop
out
push
or
cli
out
and
sbb
push
dec
ret
enter
and
inc
cmp
inc
jmp
es
test
adc
test
sbb
scas
cmc
mov
jle
fmul
imul
push
push
jbe
xchg
cltd
sbb
or
lcall
cli
in
pop
and
pop
mov
fsub
loope
xchg
xchg
sub
mov
cs
xchg
cmp
movsb
sbb
or
int3
sbb
cmpsb
movl
mov
mov
cli
fs
mov
mov
shrb
mov
out
ss
mov
xchg
aam
daa
pop
movsb
movsl
push
mov
int
xchg
mov
fs
add
xchg
leave
std
loop
aam
push
sbb
jecxz
jnp
out
mov
cmp
lahf
stos
rclb
sub
aad
ljmp
and
push
loopne
xchg
jl
daa
sbb
inc
int3
xorb
pop
inc
adc
and
cmpsb
inc
pop
test
lods
int3
test
mov
gs
sbb
decl
mov
std
pop
fdivr
fwait
ljmp
inc
clc
orb
lahf
push
adcb
push
inc
nop
scas
inc
cmp
out
mov
sub
adc
ret
mov
xor
out
cltd
test
nop
inc
icebp
lock
fcompp
jmp
inc
mov
int3
aas
ljmp
insb
mov
repz
jb
outsl
pop
pop
test
ja
dec
dec
jo
mov
das
or
pushf
gs
cmp
mov
pop
jmp
adc
imul
adc
cs
faddl
push
cmp
dec
leave
cwtl
dec
ljmp
mov
sti
sub
fsubr
arpl
bound
pop
popf
je
notb
jmp
or
xchg
shll
ficoml
loopne
jg
lret
xchg
jb
adc
lds
xchg
sbb
adc
ds
mov
inc
inc
pop
push
mov
or
jns
ffree
or
fidivrs
daa
test
sbbl
aas
mov
dec
in
int
stos
sub
or
cmp
and
mov
cmp
cs
in
arpl
sahf
std
push
test
xchg
lret
lret
push
xchg
adc
rol
fldlg2
popa
xorb
negl
in
push
mov
pop
out
mov
popf
fadd
dec
leave
ja
sbb
popf
bound
inc
in
cmpsb
push
xchg
sbb
mov
std
mov
or
add
pop
pop
add
mov
push
jl
sarl
outsl
outsl
mov
icebp
jae
fcoml
sub
push
xor
push
cs
mov
mov
fiadds
mov
insb
xor
out
cmp
add
ja
data16
arpl
in
pop
add
xor
jmp
jg
lret
notb
jne
jns
mov
icebp
int3
or
push
test
ljmp
sbb
mov
fisttpll
icebp
pop
dec
pop
mov
les
adc
scas
hlt
movsl
bound
xchg
jl
in
jne
out
fidivl
insl
fstpt
ss
lahf
clc
imul
in
mov
pop
mov
mov
jmp
inc
les
inc
ss
adc
es
test
add
jo
mov
movsb
cmpsb
jp
mov
jb
or
pushf
outsb
or
les
jno
add
jnp
xlat
dec
mov
in
pop
fs
insb
xchg
insb
scas
xchg
loope
xchg
or
xchg
push
lret
shlb
pop
repz
add
out
add
xchg
xchg
data16
fucomp
pop
xor
cmp
int
sub
pop
mov
jmp
sub
rol
mov
lcall
or
cmp
shr
aad
testl
cli
xorb
inc
cli
out
jp
popf
fimuls
pop
flds
jmp
rcr
lods
mov
imul
fsubl
ret
sbb
lods
pop
jp
pop
pop
cli
push
mov
stos
xor
leave
cmp
xchg
out
sbb
cmp
sbb
adc
mov
dec
sbbb
add
jp
loop
dec
xor
push
xor
jecxz
push
ror
sbb
inc
pop
punpckhdq
nop
sti
add
sbb
mov
push
xchg
mov
mov
sbb
sbb
lods
pop
fsubp
jo
lahf
inc
sbb
dec
divb
adc
mov
mov
push
stos
orb
sub
add
add
out
pop
mov
int
or
arpl
jae
dec
into
arpl
sar
repnz
hlt
sub
sub
repz
sbb
push
push
push
loop
mov
and
push
pop
je
pop
sti
xlat
mov
les
mov
or
insb
inc
sarl
repnz
xchg
bound
test
jae
cmp
mov
inc
mov
lea
repnz
lods
mov
ja
pop
lret
shlb
ja
icebp
fisubl
and
je
cmpsb
jecxz
repnz
jle
or
or
dec
insb
outsb
cmp
add
ljmp
js
ljmp
jecxz
xchg
leave
data16
insl
mov
sub
fsubp
mov
pmullw
mov
inc
inc
ret
incb
push
fstpl
pop
ss
or
clc
fs
mov
cmc
xchg
sbb
stc
xchg
cs
and
ds
xchg
inc
mov
xor
and
push
lret
jl
data16
es
push
jle
push
outsl
dec
fmull
dec
out
int3
icebp
sub
dec
pushf
jg
push
ret
mov
xor
cmp
out
lret
add
adc
and
int
rolb
enter
test
mov
cmp
mov
xchg
xchg
loop
icebp
mov
daa
sub
jb
les
outsl
jp
inc
dec
adc
pop
icebp
gs
faddl
pop
arpl
inc
pop
lret
push
adc
clc
push
arpl
mov
sbb
enter
mov
mov
popf
inc
nop
mov
mov
aam
popw
dec
cmpsl
xchg
xchg
insb
push
cli
and
jle
jnp
js
sbb
jo,pt
daa
in
add
jb
repz
dec
dec
add
mov
jle
and
dec
pusha
mov
xor
mov
pop
mov
push
dec
sbb
mov
adc
dec
jl
cmpsb
add
inc
int
loopne
mov
pop
mov
sub
test
cmp
mov
push
inc
sbb
mov
jl
std
jae
lock
xchg
nop
xchg
pop
mov
sub
cld
inc
sbb
add
dec
pop
xchg
mov
ss
sbb
mov
dec
xor
xlat
test
outsl
int3
pop
sub
dec
and
pop
jecxz
dec
and
mov
icebp
scas
mov
or
cltd
lahf
call
adc
jnp
cmc
lret
cmp
jno
enter
push
adcl
or
pop
mov
inc
jmp
nop
push
inc
or
fbld
nop
jae
dec
fsubrs
mov
dec
es
ret
add
push
xchg
sarl
psubw
into
lods
scas
push
fwait
das
in
mov
dec
and
mov
adcl
cmp
pushf
test
pop
jnp
cmp
mov
mov
or
ljmp
cltd
xor
sar
inc
shll
xchg
and
stos
xor
gs
inc
mov
xorl
popl
add
push
xchg
fldt
nop
scas
bnd
and
repnz
mov
mov
mov
add
lea
test
lods
sbb
jns
lods
outsl
incb
pushfw
xchg
inc
pmaxsw
in
dec
push
dec
pop
sbb
mov
aas
jecxz
cmp
dec
pop
sub
mov
and
or
movsl
sub
xchg
fimull
icebp
aad
dec
mov
inc
lahf
cmp
aam
xchg
add
pop
dec
xchg
imul
out
jb
xchg
jno
test
pop
sub
push
jge
rcrl
jb
movsb
xchg
cltd
outsl
dec
cmp
xor
fildl
xor
sbb
insl
fdivs
and
imul
into
mov
repz
mov
insl
stos
cwtl
in
pop
xchg
daa
xchg
sub
les
adc
add
outsl
pop
insb
mov
je
out
movsb
mov
sbb
inc
aaa
push
imul
in
adc
out
xchg
stc
addl
cmp
add
pushf
jbe
push
fistl
pop
ljmp
popa
adc
cmp
fidivrs
cmp
lea
xchg
dec
shl
sub
xchg
out
faddp
repnz
xor
add
mov
ss
pop
in
inc
adc
in
push
cmp
jmp
icebp
sbb
mov
daa
hlt
sub
xchg
and
cmp
inc
in
sub
push
aas
mov
ss
loopne
sub
push
ss
out
sbb
repnz
loopne
test
call
add
xchg
cwtl
inc
jbe
iret
mov
lods
aas
mov
jno
fdivp
test
lods
les
in
rolb
roll
sub
push
sbb
stc
push
stos
cmp
mov
sub
inc
lahf
push
push
xchg
xchg
or
dec
out
ret
scas
lods
add
test
add
shll
shll
add
pop
jl
add
and
lea
inc
inc
js
fstp
cli
fidivrl
fwait
int
jl
cltd
test
add
inc
xchg
decl
dec
xchg
jg
pushf
dec
enter
or
rcrb
in
add
out
popf
mov
inc
sbb
mov
xor
and
bound
repnz
or
pop
insb
shll
icebp
xor
call
dec
jl
jmp
mov
test
push
loopne
ja
jle,pn
and
jl
enter
loopne
push
inc
add
popf
pop
fiaddl
add
dec
inc
fwait
sbb
inc
sub
gs
sbb
adc
in
sbb
cmp
jle
jmp
nop
loopne
jecxz
lock
pushf
dec
loop
adc
jno
xchg
ja
xchg
xchg
xor
and
xchg
adc
inc
adc
hlt
sti
icebp
pusha
jae
insb
icebp
out
sbb
adc
test
mov
jmp
xchg
xor
dec
add
fsub
push
in
imul
fmull
addr16
add
ret
nop
jp
mov
jb
or
inc
dec
jecxz
push
subl
inc
das
out
sbb
popa
pop
xor
jo
add
lods
gs
stos
cmp
xchg
add
lods
push
test
popa
clc
sahf
inc
enter
rcr
movl
out
inc
out
mov
daa
in
inc
xor
lock
sub
jp
inc
push
mov
arpl
push
rcl
scas
sbb
push
mov
push
repnz
xchg
lea
or
subl
jle
dec
aad
in
sti
sub
push
or
maskmovq
testl
adc
push
pop
roll
cmp
lods
repz
and
enter
ljmp
pop
pop
orb
notb
aaa
pop
sbb
lock
addr16
push
das
mov
pop
cmp
das
dec
loop
or
xor
or
sahf
mov
dec
xchg
jnp
dec
pop
test
mov
testl
xor
adc
ja
mov
cmp
popa
mov
test
ficoml
dec
out
inc
adc
test
mov
push
roll
mov
fisttpll
pop
jge
add
pop
scas
movsb
or
push
dec
test
mov
imul
into
sbb
inc
push
fstpt
pop
gs
fptan
repnz
insl
xchg
je
add
xchg
adc
rclb
ljmp
ficoms
xchg
out
dec
fildll
or
push
dec
in
rclb
cmp
js
pusha
dec
std
into
mov
lock
or
push
lret
rclb
push
pusha
cs
push
dec
nop
clc
xchg
fildl
sbb
mov
sbbb
add
mov
in
gs
arpl
loopne
cmp
sub
scas
jae
xor
and
mov
dec
and
jb
push
adc
cmp
orb
insl
adc
mov
jge
fstpt
inc
and
pop
fnstenv
imul
cmp
and
and
mov
add
in
sahf
inc
mov
std
dec
push
ljmp
push
cmp
cltd
dec
add
les
cli
push
orl
cld
ljmp
xchg
jle
xchg
add
in
inc
sbb
mov
push
out
movsb
pop
ds
dec
or
sub
lock
mov
lods
lods
or
ja
xchg
or
arpl
mov
mov
push
xchg
adc
icebp
jns
dec
push
mov
xor
shr
repnz
nop
enter
xor
pop
lock
mov
inc
fwait
aaa
mov
popf
lret
jge
inc
out
dec
cmpsb
int3
inc
add
dec
gs
das
fnstcw
pop
lds
ja
fwait
mov
out
fistpll
push
rcrb
xchg
roll
out
sub
paddsb
in
dec
sahf
sbb
xchg
pop
je
pushl
push
mov
add
mov
stos
push
adc
cmp
mov
push
sub
sbb
xchg
mov
in
bound
outsl
mov
fnsave
imul
jg
ficoml
out
jnp
fs
testl
aas
jge
popa
mov
in
ret
xchg
or
roll
ja
mov
dec
jg
loope
jecxz
cmp
mov
js
cltd
lret
mov
jno
test
push
clc
push
outsl
xor
pop
mov
in
scas
pop
sahf
cmpsl
dec
push
je
jns
iret
mov
shrl
jbe
inc
jb
test
flds
in
arpl
jae
mov
aaa
mov
test
inc
test
jo
add
sbb
sub
sub
sti
push
inc
sbb
push
les
outsb
or
jbe
cmp
repnz
sub
jns
fwait
push
int
lock
dec
mov
xchg
inc
or
ret
fld
ret
rorb
stos
pusha
mov
xchg
push
ds
cmp
mov
lods
push
addr16
cmpsb
mov
inc
repz
dec
imul
ret
lods
imul
mov
jge
test
les
mov
sahf
fstpl
arpl
adc
add
jns
xlat
jmp
jbe
cmpsl
push
sub
je
test
and
lcall
adc
mov
lahf
jae
repz
push
lcall
xchg
lret
jmp
leave
xchg
mov
fidivl
std
pop
mov
sbb
mov
mov
outsl
mov
xchg
in
and
inc
cmpsb
mov
loopne
das
cld
jle
and
popa
out
repz
jbe
mov
aaa
fs
xor
jno
pop
xor
aam
stos
aas
mov
lsl
aaa
add
adc
xor
mov
popf
stos
loopne
lret
mov
into
arpl
add
das
mov
mov
out
mov
adc
hlt
fs
mov
jge
test
icebp
pop
xor
cmp
or
out
out
jl
sub
or
inc
mov
mov
lock
cmp
mov
decb
ret
or
cmp
add
out
out
xor
dec
int3
sub
sbbl
mov
jle
pmulhw
sbb
sub
movsb
inc
mov
repz
sub
into
in
lsl
push
hlt
testl
pop
sbb
jmp
testb
push
pop
xchg
inc
int3
jne
add
push
out
lret
ret
push
sbb
add
cltd
pop
test
cmp
dec
les
shlb
xchg
adc
push
cld
or
cld
jge
jmp
dec
mov
repz
leave
mov
dec
adc
push
or
fists
fistl
fcoml
jge
cli
lods
pop
in
add
aad
popf
fmull
mov
and
mov
test
stos
int3
loope
scas
push
les
push
imul
mov
mov
lods
mov
divl
adc
movsl
shll
add
xor
mov
mov
or
roll
cmp
mov
dec
jnp
in
scas
mov
mov
dec
mov
mov
jg
sbb
pop
imul
xor
fdivs
mov
push
or
dec
jmp
and
adc
bound
dec
jae
cld
xchg
and
rcll
mov
cmpsb
dec
xchg
push
imul
inc
adc
repz
mov
xchg
out
add
mov
dec
pop
in
imul
or
sub
bound
mov
fstps
pop
dec
jb
popf
mov
mov
jle
dec
int
pop
mov
push
mul
insb
xchg
and
test
cld
daa
pushf
mov
and
ret
mov
call
xchg
or
nop
sti
or
sbb
repnz
scas
or
faddl
insl
mov
cmpsl
xor
fdivs
cld
sti
ljmp
sub
sub
pop
divl
stos
test
test
aaa
jae
es
stos
jns
rol
dec
insl
iret
stc
fidivs
mov
xor
sarb
push
lcall
pushf
mov
jno
enter
jecxz
fistps
add
jns
jmp
call
iret
xor
sub
std
mov
push
imul
movsb
dec
test
inc
pop
cmp
xor
mov
push
dec
jle
sbb
out
push
xor
push
hlt
mov
std
dec
jle
fnstcw
or
loopne
adcb
sbb
ret
adc
pop
and
jl
stos
sbb
xchg
add
sahf
mull
jne
sub
aaa
call
cmpsl
lret
xchg
jb
sti
mov
sub
and
sbb
ret
and
leave
jne
in
insl
xchg
mov
in
and
popf
xchg
aas
lret
popa
in
cmp
pop
xlat
xor
ljmp
ret
jns
mov
out
mull
push
add
or
je
cmp
iret
mov
subl
in
outsb
imul
sbb
add
lea
shll
cli
fwait
mov
xor
mov
cmp
sbb
cmp
dec
dec
jo
jp
push
pop
push
aaa
adc
ja
pusha
push
mov
sti
mov
lcall
ds
push
sub
ret
dec
jbe
sbb
leave
adcl
sbb
sub
xchg
fsubl
sbb
aas
fldt
inc
filds
mov
push
sbb
mov
pop
cltd
or
hlt
xor
dec
fisubrs
vmovntps
xchg
cwtl
movsl
mov
sbb
dec
ret
cmpsl
adc
dec
and
clc
iret
dec
inc
jmp
xchg
adc
clc
mov
sub
hlt
movsl
lds
pop
cli
in
mov
in
cld
xchg
cmp
xor
jb
bound
into
movsl
test
jo
xchg
popl
mov
adc
mov
push
dec
rep
mov
push
stos
fistps
idivl
subl
mov
movsb
dec
ss
cltd
sbb
cmp
das
shl
pop
int3
push
in
fs
mov
cmp
aas
mov
adc
ret
mov
sbb
mov
and
cmp
out
mov
xor
push
roll
mov
pushl
outsl
inc
cltd
lahf
xchg
arpl
xchg
jbe
aaa
cmp
out
hlt
fmuls
fsts
cwtl
in
sub
insb
push
jp
inc
cmpsl
gs
xchg
xor
std
fcmovbe
mov
popf
js
iret
dec
push
xor
dec
pop
sarb
mov
fisubl
mov
enter
jb
lea
or
inc
jge
lods
pop
cmp
mov
push
ljmp
shl
les
add
push
icebp
sub
xchg
jp
mov
mov
add
rcl
pop
stc
je
jge
into
out
dec
shl
int3
jge
sub
sarb
and
and
push
dec
cs
loope
ljmp
xor
clc
scas
lea
mov
xchg
xchg
ret
cwtl
iret
imul
sub
and
or
lock
mov
gs
xor
mov
push
add
sbb
movsb
mov
push
add
and
jmp
adc
iret
add
mov
les
adc
sub
aam
aad
push
call
testb
hlt
lahf
push
pop
xor
cmpsb
sbb
dec
jo
outsl
push
lods
dec
shlb
hlt
push
pop
and
mov
adc
fimull
cmpsb
push
mov
push
sahf
jns
push
sbb
fmul
jp
lcall
pop
cmp
cli
cmp
in
sub
mov
rcrl
add
shlb
xchg
xchg
fcmovnbe
repz
mov
and
dec
ss
add
loope
fdivrs
jnp
out
iret
fbstp
xor
shrb
rolb
mov
icebp
sub
pop
ljmp
aam
jnp
jmp
and
cmp
fs
popf
mov
ret
cmpsl
pop
push
mov
dec
jb
jl
int
aam
xchg
mov
xchg
xor
mov
iret
out
fbld
leave
ja
push
out
jns
push
pop
add
pop
add
and
ss
shrl
xor
sbb
push
aaa
push
dec
mov
mov
aad
in
mov
addr16
insb
pop
dec
repnz
daa
xor
enter
push
jle
daa
inc
repnz
mov
test
or
xor
push
enter
dec
xor
sbb
fcomps
xlat
jo
xchg
push
push
cmp
and
repz
jmp
daa
hlt
mov
jg
inc
xchg
cmp
jmp
xorl
loop
sbb
call
sbb
scas
lea
xchg
pop
test
jo
xchg
int
shlb
xor
loop
outsb
hlt
push
ret
mov
iret
and
fst
sub
lock
xor
popf
dec
push
fsubl
mov
sahf
lret
xchg
push
movsl
insb
mov
dec
cmpsl
lods
sub
and
mov
jbe
adc
sbb
subb
add
test
mov
mov
add
movsl
in
or
xchg
cmpsb
jp
ds
push
mov
rcll
xor
imul
jo
jecxz
lret
cmp
pop
and
dec
add
xlat
and
jb
jb
dec
std
or
push
fmuls
push
jg
dec
pop
mov
sbb
push
xchg
lret
les
and
pop
add
loopne
push
icebp
sarl
and
lods
cmp
xchg
add
mov
fmull
lahf
test
xor
js
outsb
stos
jae
js
fistpll
into
sub
mov
sbb
inc
xchg
les
aas
incb
sbb
or
dec
or
add
aad
das
cld
fistpll
pop
bound
mov
nop
mov
cmp
mov
xlat
stc
mov
or
ljmp
push
cmpsl
icebp
inc
xor
mov
fstpt
or
lea
push
fwait
arpl
js
or
cwtl
push
mov
loopne
lods
lds
testl
out
stc
push
pushf
std
xchg
cmc
add
aaa
cmpsl
imul
fs
sub
sub
push
inc
stos
jge
sub
xchg
scas
mov
xlat
ja
icebp
std
std
cmpsb
bound
test
push
cltd
add
fisubl
sub
or
fdivrp
mov
rorl
dec
pop
push
mov
fmull
mov
xlat
push
sub
dec
pop
in
cmp
jg
cld
jno
imul
loope
lea
push
sub
mov
add
sbb
pop
enter
adc
sbb
sub
jb
sarl
jbe
cmp
jmp
call
and
sbb
jle
and
jns
stos
insb
das
jmp
push
in
mov
dec
movsb
add
pop
sbb
mov
orb
mov
cmp
mov
mov
jne
mov
and
ret
cld
mov
rol
rol
jle
dec
mov
xchg
xor
jo
sbb
dec
clc
sub
popa
mov
fidivrl
dec
imul
add
loopne
popa
loop
cmpsl
sub
push
jo
faddl
aam
movsb
out
mov
xchg
push
in
and
out
loope
push
mov
insb
push
adc
hlt
mov
cmp
js
mov
int3
and
ret
lods
out
int
and
in
sti
arpl
inc
lret
mov
mov
fistps
adc
adc
inc
add
mov
pusha
cli
mov
fcoms
in
jb
cmp
mov
je
pusha
push
lock
dec
push
push
pop
or
push
xor
sub
and
test
ret
ret
or
lret
cmp
bound
mov
loop
sub
sti
cld
test
inc
or
outsb
pop
mov
bound
add
gs
dec
nop
sti
scas
aad
mov
icebp
iret
sbb
push
lcall
out
cmp
dec
xchg
div
ss
ficoml
loope
cmp
jmp
lret
insb
sbb
xchg
call
push
ds
scas
stos
inc
push
imul
inc
cli
pop
push
adc
push
loopne
rcrb
xchg
lds
jmp
sbb
outsb
outsl
scas
js
fcomp
int3
mov
aaa
cmp
daa
fcomps
or
cltd
xor
or
pushf
lret
cltd
cmp
or
mov
inc
hlt
leave
add
out
sti
sbb
fwait
out
fdivrs
fcmovnb
adc
sub
mov
lods
xchg
idiv
add
mul
push
push
lock
stc
scas
out
fwait
sbb
jbe
mov
pusha
mov
loop
jns
ljmp
stc
ja
mov
xchg
and
sub
mov
outsl
push
sub
aad
xor
idivb
adc
fs
nop
pop
inc
push
in
xchg
mov
dec
pusha
hlt
mov
pop
xchg
pop
dec
pop
xchg
pop
popa
int
nop
adc
popf
fcompl
pop
mov
js
mov
jae
in
or
mov
notb
add
cli
push
test
push
testb
mov
inc
mov
nop
cwtl
mov
sbb
mov
prefetch
or
sbb
pop
add
pop
call
push
mov
sub
out
jg
mov
rcll
xchg
mov
push
outsb
pop
mov
sub
xlat
sbb
data16
aas
sbb
adc
stos
xlat
daa
stc
jb
loopne
icebp
fucom
test
in
notl
add
clc
pop
ljmp
mov
outsb
outsl
jae
scas
and
mov
bound
dec
outsb
jno
adc
cmp
lcall
inc
push
fimuls
mov
int
mov
push
pusha
push
xchg
aas
leave
fwait
pop
and
scas
push
inc
mov
mov
testl
cs
push
push
dec
push
sbb
mov
mov
lahf
sbb
add
inc
dec
lcall
push
fists
repz
adc
push
fdivp
add
pop
ret
clc
and
cmc
push
lahf
dec
bswap
cmp
jge
rclb
sub
xor
dec
lock
pop
mov
inc
int3
add
call
jne
gs
inc
inc
sub
mov
inc
sub
and
and
jb
jg
dec
xor
or
sub
adc
mov
jmp
lods
xchg
ds
ror
stos
mov
xchg
into
xchg
rolb
push
sbb
aad
xor
pusha
mov
sti
jle
in
dec
in
sbbb
shlb
ja
out
mov
xor
loop
mov
fwait
xor
and
dec
add
out
cmp
imul
int3
repnz
sub
scas
shr
sbb
sti
jp
lds
mov
xchg
or
lret
and
inc
ret
int3
mov
loopne
inc
imulb
test
push
out
movsb
imul
scas
mov
jb
lret
dec
jb
scas
aam
jle
loopne
xchg
mov
push
sub
sub
jecxz
call
adc
dec
icebp
and
xor
leave
out
call
dec
adc
fldenv
fdivrl
mov
push
lods
jo
lods
in
mov
jbe
xchg
sar
cmp
sbb
pop
enter
and
jno
jno
add
fsubrs
icebp
mov
pusha
insb
ret
jb
mov
lret
fsubrl
mov
or
int
subb
mov
pushf
rorl
xor
sbb
adc
imul
or
mov
and
ficoms
popf
mov
or
push
or
pop
sub
loope
and
outsl
inc
push
lds
mov
and
or
insb
xor
sub
push
pushf
add
push
and
les
dec
mov
xchg
push
push
jmp
pop
fwait
xlat
sbb
sub
push
xchg
xor
stos
mov
cs
mov
jbe
ret
mov
mov
pop
cmp
fsubl
sahf
sub
push
imul
mov
popa
jns
push
adc
xor
les
push
xchg
arpl
in
jne
mul
cmc
dec
int
mov
scas
mov
rclb
das
lds
incb
inc
sub
jno
or
idivb
test
sub
add
stos
mov
adc
sbb
insl
mov
int
scas
test
lea
and
dec
in
mov
mov
cmpsl
sub
bound
popa
jle
push
loope
negb
insb
mov
push
rcrl
inc
sbb
and
inc
cltd
jle
xchg
pusha
pop
adc
shrl
adc
adc
jb
jg
loopne
cmpsb
scas
jo
dec
mov
cld
or
sbbb
icebp
sub
mov
push
sbb
mov
dec
movsb
out
cmp
ficomps
movsb
xchg
sbb
mov
cmpsl
mov
adc
or
imul
adc
out
add
push
adc
out
mov
dec
out
sahf
pop
shl
push
imul
xchg
push
enter
dec
addl
lods
icebp
into
mov
inc
out
jne
mov
arpl
pop
aam
fisubs
cmp
xchg
loop
cli
fisubs
out
hlt
in
out
push
jle
shrb
or
push
mov
aad
fbld
fwait
jb
inc
fwait
enter
pushl
and
cmpsb
cli
js
das
movsl
aad
mov
lods
outsl
inc
cmp
shlb
adc
sub
sbbb
sti
or
in
enter
int3
sbb
dec
in
daa
sbbl
rolb
inc
push
mov
cmp
dec
clc
pop
roll
ljmp
or
cmpsl
shrl
jmp
pushf
cmp
vstmxcsr
sub
sub
inc
popf
add
xchg
or
cmpsb
leave
jnp
arpl
mov
add
push
fisttpl
nop
std
insb
adc
jae
insl
ljmp
ret
imul
movb
mov
fisubs
fs
jns
jae
sbb
leave
int3
xchg
cmp
mov
test
vminsd
cmp
out
or
mov
lahf
add
mov
lret
add
or
movsb
jne
or
cs
inc
sub
dec
mov
or
jb
jnp
jb
lock
bound
testl
test
std
mov
push
xchg
jns
adc
adc
xor
push
lock
mov
pop
cwtl
and
das
cmp
inc
xor
imul
arpl
enter
dec
popf
xor
arpl
rorb
and
cmpb
and
popf
fwait
add
lea
jge
dec
xor
scas
gs
jns
cmp
cmp
aaa
into
and
loopne
insb
mov
fwait
aas
imul
aam
arpl
idiv
mov
aad
int
fsts
test
cmp
pop
test
push
ror
pop
in
fldcw
push
sti
in
push
aas
dec
dec
orl
mov
popa
lahf
xor
and
and
mov
std
idivl
enter
mov
xchg
sti
and
rorb
aam
or
pop
dec
imul
test
sbb
sahf
scas
nop
push
jb
push
jge
lret
inc
mov
cld
mov
jp
add
jo
lea
enter
and
mov
cmp
out
into
lret
leave
shr
jnp
rcrb
pop
cltd
lds
popa
outsb
xchg
adc
or
dec
push
mov
cmp
test
mov
gs
cmpsl
jg
jp
lret
inc
cld
push
cmc
test
xchg
pop
xchg
es
lahf
mov
fisttpl
lods
mov
or
mov
pop
add
xor
mov
cmp
in
cmpsl
fnstenv
and
sbb
mov
std
inc
adc
mov
xor
sub
sbb
fldenv
mov
push
mov
inc
fnsave
gs
or
pop
adc
inc
pop
mov
and
add
cwtl
imul
pop
hlt
jae
in
cmc
mov
xchg
shrb
nop
mov
rorl
dec
cmp
adc
outsl
inc
push
pop
fistpll
mov
sub
mov
xchg
adc
sbb
out
push
idiv
dec
icebp
push
rclb
push
lods
xchg
repnz
insl
cld
repz
arpl
mov
mov
mov
mov
scas
cmp
lea
and
pop
movsb
in
aas
mov
adc
adc
std
sbbl
add
inc
fdivl
lret
test
insb
sub
aas
xchg
xor
lds
mov
pop
add
clc
xchg
clc
mov
push
movsb
cwtl
xorb
cmp
jne
sbb
sub
repnz
mov
mov
xor
shll
cmpsl
cli
xor
setns
mov
clc
out
jno
and
fwait
inc
pop
sahf
mov
es
push
cmp
mov
mov
add
xchg
mov
repnz
dec
sbb
cmc
iret
test
dec
orl
das
test
pop
cwtl
mov
or
cmpsl
cmp
mov
outsb
jl
lods
pop
mov
push
imulb
dec
dec
sbb
clc
out
insl
pop
and
clc
xor
pop
pop
test
pop
out
lret
data16
dec
xor
adc
stc
enter
test
lret
fsubrs
shr
sub
ds
andb
test
paddw
xchg
pop
hlt
sahf
ss
mov
adc
mov
hlt
iret
aad
push
xchg
mov
push
xor
outsl
icebp
mov
jb
outsl
push
mov
mov
jl
jg
inc
pop
sub
insl
rolb
fcmovnb
add
leave
faddp
popf
je
jg
xlat
jnp
dec
sub
or
imul
dec
xlat
pop
aad
scas
mov
mov
ffreep
pop
mov
sub
xor
adc
mov
push
arpl
fsub
or
xor
xchg
add
subb
xor
ret
pop
mov
test
mov
daa
loope
pop
and
mov
sub
xchg
lods
test
aaa
fs
fcomp
xchg
push
adc
into
inc
iret
fdivrp
sub
xchg
mull
stos
jmp
adc
push
mov
mov
int
outsl
roll
fldenv
push
jne
mov
testb
push
call
int
cltd
and
loope
fwait
outsb
adc
cmpsb
xchg
lahf
jae
mov
or
pushf
adc
mov
or
lahf
cmp
add
hlt
andb
lock
in
xor
mov
notl
cmp
jge
mov
jae
ljmp
dec
dec
jge
xchg
dec
jmp
mov
outsb
out
dec
cmp
mov
and
test
cli
pushf
sbb
je
push
int
popa
mov
add
add
lea
jmp
lahf
mov
jnp
inc
or
popa
divb
sbb
pop
adc
xchg
cld
push
cmp
mov
sub
cwtl
xor
mov
fsubl
jno
and
stos
sbb
out
int3
lret
clc
push
sub
pop
jbe
adc
repnz
push
cld
adc
movsb
dec
jns
xchg
repz
iret
mov
lret
or
sbb
pop
loop
aaa
ja
mov
sbb
pop
or
fisubrl
fs
fldcw
cmp
sub
cmpsl
push
mov
mov
mov
aam
cmpsb
pop
push
mov
mov
jg
int
imul
sub
test
and
sar
addr16
adc
jo
imul
jge
sbb
xor
daa
xor
jmp
call
pop
rcll
call
cmp
mov
push
xchg
test
fidivrs
fwait
pop
clc
inc
or
cmpsl
mov
adc
js
mov
dec
aas
pop
sub
in
scas
sbb
sti
lds
inc
aas
fldcw
cmp
and
lods
out
mov
loope
ret
pushf
mov
push
pusha
mov
aad
pop
sti
jge
xchg
adc
fiadds
sub
lods
mov
xchg
or
cs
into
fidivrs
data16
pushf
and
dec
cmpl
fisubrs
adc
inc
fcomps
adc
and
out
adc
lods
jb
dec
fdivrs
sub
jg
jle
cmp
mov
add
mov
sbb
jecxz
ret
xchg
je
inc
push
adc
pop
mov
je
loopne
xchg
nop
jl
ss
jae
jno
aam
mov
lret
add
adc
sbb
mov
lcall
xlat
add
jo
cmp
jl
fdivs
mov
fiadds
add
add
mov
cmp
and
subb
pop
mov
sahf
sub
jmp
xchg
fisttpl
mov
lock
sahf
mov
es
std
ds
hlt
jnp
addr16
sub
sub
jecxz
dec
jle,pt
lcall
in
jb
loope
cmp
cli
sub
add
icebp
mov
mov
pop
lods
and
mov
addr16
push
sub
call
in
lahf
aaa
mulb
jb
loope
ja
sub
icebp
mov
xchg
jp
je
loope
lret
push
pop
adcb
push
and
add
cmp
subb
addr16
mov
imul
in
jl
enter
xchg
loope
and
icebp
push
ds
lods
iret
sbb
test
test
scas
loop
mov
xchg
pop
popf
in
jecxz
dec
mov
pop
add
dec
fdivs
and
dec
mov
cs
sbb
adc
sbb
mov
es
cli
xorb
jbe
inc
jno
sbb
add
add
test
xchg
mov
popa
loopne
mov
pushf
leave
rsqrtps
pop
lods
loop
ret
popa
push
dec
inc
pop
mov
mov
push
push
pop
jno
cwtl
mov
inc
cmp
adc
testl
push
in
pop
popa
pop
les
jno
xchg
adc
mov
xchg
or
adc
std
mov
mov
cmpl
or
jl
push
sbb
gs
fidivrl
mov
mov
dec
mov
pop
sbb
inc
subl
mov
nop
fcmovnu
std
jp
int3
ss
sub
enter
cmpsb
daa
xor
sti
inc
out
or
inc
jne
cmp
dec
rorb
clc
push
fdivrl
nop
inc
lock
loope
pop
cltd
test
int
mov
and
lcall
sbb
nop
pop
addb
jbe
ret
mov
int
mov
adc
cwtl
leave
pop
sbb
or
mov
rorb
js
mov
sbb
push
push
into
and
sbb
leave
jnp
popf
pop
scas
push
mov
nop
cli
mov
frstor
push
push
rcrb
inc
cmp
test
add
pop
inc
cmc
pop
std
xchg
inc
sub
ds
xorl
xchg
pop
repz
loopne
mulb
ret
and
test
push
movsl
scas
imull
fs
xor
sbb
inc
jnp
nop
sti
mov
addr16
out
push
icebp
mov
fs
test
pop
sbb
jmp
pop
push
dec
in
xchg
or
or
or
lret
lds
negb
cld
pop
rorl
subb
sbb
push
shrb
pop
enter
cmc
js
push
sub
xchg
or
in
in
lahf
iret
mov
fdecstp
fstpt
gs
mov
pushf
xchg
add
lea
mov
mov
je
xchg
jae
movsl
jae
lret
xchg
std
jae
clc
cmp
inc
repz
rorb
ljmp
in
es
inc
in
lock
adc
jg
push
pushf
pop
push
les
add
push
roll
sub
or
sbb
dec
bound
je
xor
enter
inc
lret
mov
dec
xor
daa
xor
mov
or
pop
sti
cld
sub
in
xor
mov
dec
jno
inc
push
jp
in
xor
add
loop
pop
fucomp
cli
xor
push
sub
push
cs
inc
ss
faddp
repz
add
xor
in
push
mov
jnp
lret
cmp
rcrb
sbb
mov
push
lcall
push
push
cmp
lods
fstpt
sbb
add
inc
mov
jg
shlb
xor
mov
xor
xor
je
nop
je
outsb
and
ds
and
out
mov
sbb
sub
cld
sub
arpl
imul
pop
sahf
pop
cmp
cli
mov
rcrl
ja
lods
or
cmp
mov
add
adc
jle
cmp
test
iret
enter
je
bound
fcomp
mov
and
js
pushf
loopne
pop
cmp
fistps
adc
in
sub
mov
xchg
or
xor
scas
rolb
icebp
mov
xor
ljmp
std
adc
dec
jae
jb
cld
dec
add
movsl
mov
insl
inc
loopne
and
dec
mov
les
iret
jge
lods
adc
sub
aam
dec
test
test
pushf
xor
fs
xchg
icebp
fdivrp
stos
fldt
rcl
push
outsl
mov
cmp
push
jbe
or
or
shrb
pop
fcoms
jbe
lahf
sahf
mov
aaa
mov
sub
aad
pop
or
lods
and
into
inc
jae
cltd
loopne
adc
pushf
cmpsl
jmp
dec
cltd
daa
push
inc
sub
mov
insl
mov
and
push
add
in
push
movsb
loop
gs
adc
cmp
aam
lods
in
loopne
mov
outsl
testl
mov
cmp
adc
mov
pop
je
repnz
xor
xor
adc
into
loope
outsb
cmp
out
pop
mov
add
pop
pop
mov
adc
push
mov
repnz
push
into
add
jnp
push
es
ja
push
test
lahf
push
mov
ror
clc
aaa
insl
cmpsl
mov
jo
push
xchg
lock
xchg
out
divl
adc
mov
push
dec
lock
pop
jo
shll
das
in
and
jg
std
sti
orl
jno
mov
nop
mov
pop
fdivrs
xor
enter
mov
icebp
imul
cmpsl
add
cmp
mov
decb
enter
test
pop
ret
lcall
cmp
push
lea
or
imul
cwtl
call
aas
xor
mov
loopne
push
outsl
add
mov
xchg
sub
dec
cs
mov
ficoml
ficoml
mov
out
jnp
popf
adc
cmc
dec
rcrb
xchg
sahf
pop
sarl
movsl
sub
push
add
out
shrl
push
and
push
cmp
loope
leave
cmpsl
fcoms
mov
flds
mov
rcl
into
or
icebp
hlt
es
sub
cmc
lds
cmc
sub
out
shrb
in
fisubrl
inc
dec
mov
mov
iret
cmpsl
sub
les
movsl
mov
cwtl
mov
jns
sqrtps
cld
mov
sub
in
flds
cmp
mov
aam
cmp
jmp
inc
push
outsl
loope
nop
mov
jne
inc
fsts
jbe
cmpsl
adc
jbe
loopne
mov
ret
mov
ficomps
int3
lock
ja
xchg
mov
add
mov
lods
dec
xchg
aam
push
cmpsb
test
inc
mov
lds
sub
jecxz
push
jl
mov
stos
push
push
jae
mov
cli
lods
add
je
in
insl
es
adc
inc
mov
mov
add
dec
xchg
sbb
pusha
pop
nop
mov
dec
shlb
fistpl
add
pop
inc
insl
mov
xchg
movb
sti
shll
xor
movsl
mov
out
sbb
sti
sahf
pop
lea
cmpsl
scas
int3
adc
xchg
push
mov
mov
dec
bound
inc
test
xchg
mov
push
lahf
mov
testl
pop
std
cmp
repz
push
js
add
and
js
adc
das
fdivrl
or
outsl
jbe
pop
inc
clc
xor
cmp
movsb
pop
add
pop
cmpsl
shll
test
icebp
cmc
stc
adc
sbb
push
and
add
insb
mulps
or
and
lock
jno
mov
pop
cmp
and
xchg
leave
gs
xor
cli
mov
out
sbb
aam
jp
jbe
cmpxchg
out
sub
test
pop
inc
shll
emms
cld
hlt
jl
stos
lock
sbb
rcrb
or
stos
mov
aas
rcrl
jle
dec
rcrb
pop
mov
cmp
add
lahf
ja
lcall
repnz
dec
int3
dec
push
shlb
cmp
cwtl
ss
lahf
mov
cli
das
and
xlat
cmp
mov
icebp
fld
pop
lret
pop
pop
dec
jmp
mov
pushf
sbbb
test
test
push
add
ljmp
adc
fnstenv
push
jbe
aas
shll
aas
lds
js
fadd
leave
mov
adc
pop
sub
xchg
push
outsb
pop
mov
pop
imul
bound
inc
out
sbb
loop
cmp
int3
pop
sbb
mov
insl
test
xor
add
lea
inc
mov
lods
mov
fs
and
fcom
pushf
mov
fs
sbb
mov
aaa
std
xchg
add
les
mov
jg
in
jl
lock
cmpsl
jg
sti
nop
adc
xor
cmp
adc
rcrl
fidivrs
mov
std
adc
ss
packuswb
imul
adc
ss
out
je
lock
xor
mov
decl
jo
adc
popl
jo
mov
out
xchg
push
lods
scas
pop
mov
dec
ljmp
push
cmc
shll
push
adc
xchg
out
adc
adc
push
outsb
movsl
cmp
push
mov
mov
cmp
popf
lret
std
outsb
stos
rcrb
stc
cli
pop
enter
push
sarb
fnsave
sbb
rcll
fdivl
sbb
push
push
paddsw
stc
cld
in
add
xchg
std
pop
mov
adc
je
outsb
sub
push
inc
pop
test
hlt
mov
in
ja
jns
dec
and
push
test
stc
mov
addl
outsl
xor
pushf
lahf
mov
out
aas
lods
jl
pop
ficoml
test
ret
movsb
mov
dec
lea
push
es
dec
mov
neg
push
shlw
jmp
lcall
gs
jg
sbb
test
jecxz
stc
add
cltd
pop
pushf
sti
adc
into
jae,pt
or
fildl
clc
repz
fldcw
rcl
cmc
in
sbb
cwtl
jo
pop
push
enter
cwtl
rorb
inc
test
dec
lahf
clc
fmulp
sbb
adc
push
push
in
fwait
jle
and
mov
bound
push
lret
lahf
pop
scas
adc
shrb
dec
xorb
mov
cltd
scas
pop
sub
loop
imul
adc
dec
outsl
sar
xor
dec
in
adc
popa
cmp
and
pusha
sub
std
push
out
dec
xchg
mov
inc
nop
xor
dec
outsl
or
pushl
add
inc
or
jno
repz
ret
gs
nop
sub
and
into
std
adc
popa
jg
xchg
sub
fisttpl
sbb
shl
insl
shll
push
mov
mov
mov
jmp
arpl
jae
push
dec
sub
xor
inc
fnstcw
int3
out
xchg
jae
jns
dec
mov
dec
shlb
lcall
insl
pusha
mov
movsl
cmovne
fisttps
add
push
mov
inc
push
and
clc
popf
push
bound
js
xchg
faddl
loopne
std
inc
mov
js
outsl
xlat
pop
and
in
aas
cmp
repz
xor
cmp
pop
dec
insb
mov
loope
mov
scas
pop
xor
push
lret
orb
pop
adc
mov
xchg
dec
arpl
xchg
fmulp
sub
mov
ret
mov
or
rcr
mov
lock
mov
in
loop
xchg
fisubs
fsubs
js
mov
sub
xchg
je
test
pop
add
jne
xor
lea
xor
leave
add
adc
int
lock
icebp
mov
aad
dec
jmp
mov
fcmovnb
shr
xor
dec
pop
inc
stos
test
mov
adc
int3
loop
adc
repnz
sbb
adc
pop
xor
mov
sbb
sti
rcrb
fstp
xchg
mov
or
cmpsl
pop
pop
lock
cli
mov
sahf
pop
add
dec
inc
xchg
lock
idivb
lds
daa
xchg
sub
hlt
sbb
mov
sbb
cmp
test
pop
pop
xchg
lret
mov
stc
addl
pusha
jp
xor
and
imul
sub
insl
lds
xchg
out
into
dec
aaa
xor
ret
jecxz
adc
sti
jecxz
sub
je
inc
ret
xchg
ret
jb
sbb
jo
pop
daa
test
lds
stos
fnstsw
cmp
lods
lahf
clc
sbb
loope
cmc
xor
add
in
fildl
icebp
mov
pop
or
push
pop
adc
lods
push
mov
out
cmp
ficoml
add
shlb
pop
nop
in
lcall
movsl
call
mov
pop
jns
jl
inc
shlb
std
lcall
mov
aas
je
cmp
xchg
mov
xor
aad
mov
dec
and
mov
or
leave
stos
cli
out
dec
and
jno
dec
sbb
cwtl
imul
pop
pusha
fldt
cmp
fstl
lcall
pusha
dec
or
fs
je
pop
imul
mov
mov
inc
sbbl
xor
push
adc
push
inc
add
jp
cmp
and
xchg
push
mov
adc
fmul
ret
push
movsb
fwait
nop
adc
out
mov
jg
in
int
mov
mov
push
xor
orl
lahf
inc
sub
xchg
lods
bound
push
cmpsb
movsl
aas
pop
xchg
or
inc
call
mov
clc
je,pt
add
xchg
call
mov
mov
jle
pop
sbb
mov
add
and
imul
sub
mov
inc
sub
pop
inc
mov
cmp
jae
test
mov
dec
push
mov
push
mov
jg
sub
mov
cmp
cmp
push
or
rcll
cmp
fsub
pop
mov
xchg
aam
addb
bound
inc
dec
jo
scas
adc
xchg
dec
add
mov
push
ja
dec
scas
es
jge
push
adc
ljmp
jp
pop
cltd
or
fwait
out
out
xchg
addb
repnz
shlb
xor
and
ret
xchg
pop
fs
in
or
lods
push
mov
sbb
call
xor
sub
hlt
ret
mov
cli
iret
add
add
and
sbb
sti
xor
imul
jecxz
rcll
sub
jo
push
mov
pop
adc
outsl
xor
sub
pop
push
add
or
dec
xchg
ds
jge
push
pushf
cmpsb
cmp
add
js
add
mov
imul
xor
stos
fdiv
xor
mov
jmp
mov
or
jb
test
pop
mov
dec
sbb
popa
incb
je
lods
lcall
fcmovnb
cmp
gs
push
mov
mov
and
setl
or
xchg
rcll
xchg
cmp
or
popa
movsb
xlat
jle
xchg
inc
or
xchg
inc
dec
and
in
xchg
jno
sbb
inc
jl
xor
cmpsb
push
test
sti
mov
loopne
ds
loope
push
push
add
cmpsb
cld
jl
or
dec
and
or
push
and
lret
stos
iret
clc
les
sub
inc
loopne
jbe
movsb
jge
inc
fcompl
cli
lret
sub
insb
dec
movsl
mov
xchg
and
lahf
push
jecxz
mov
enter
or
mov
xor
rolb
in
rcrl
push
adc
push
add
pushf
pop
icebp
in
fcmovb
inc
xlat
pop
add
test
cmpsb
ret
dec
in
idiv
cmpsl
jmp
sub
lret
mov
push
cmpsl
cmp
in
jle
mov
cmp
push
sub
or
into
sti
add
repz
sub
rsm
std
inc
sahf
popa
sbb
add
out
aas
clc
jo
jb
cmc
scas
dec
fwait
xchg
ja
sub
lcall
mov
xchg
cwtl
and
into
jae
xor
sub
cmp
imul
sbb
and
cmpsl
shll
stos
sahf
cs
push
fimull
sub
sub
sbb
xchg
fdivrl
fmull
test
and
fnsave
imul
adc
loopne
pop
jmp
xchg
arpl
sub
dec
dec
fiaddl
cmpsl
loop
jmp
int3
mov
cmp
faddp
fwait
sbb
xor
sub
insl
mov
ljmp
jmp
dec
popf
add
fldl
ljmp
sub
cli
add
loope
mov
push
add
sbbl
pop
jno
ret
xchg
lods
das
add
or
cmp
loope
jno
cmp
cmp
jl
lcall
pop
push
test
mov
mov
pop
xor
icebp
add
or
sub
mov
add
add
es
data16
mov
push
jmp
out
pop
aaa
pusha
ss
lret
ja
in
outsb
sahf
hlt
cmp
inc
or
cmpsl
dec
shrb
dec
inc
ror
and
inc
push
push
cmpsl
imul
bound
lea
inc
mov
sub
sbb
stos
xchg
in
sbb
fidivrl
pop
fcoms
fimull
pop
mov
add
adc
dec
lcall
xor
in
push
sub
pop
add
cmp
pop
scas
mov
mov
lds
dec
push
or
and
mov
sub
pusha
cwtl
lds
in
out
xor
adc
lds
jns
mov
mov
push
jmp
xchg
fucomp
test
scas
inc
jno
rcr
in
xchg
jmp
ljmp
add
mov
jecxz
movsb
push
mov
data16
pushf
or
dec
jmp
scas
mov
in
xchg
addr16
outsl
test
test
jge
test
pop
mov
mov
sahf
stos
jecxz
mov
jne
and
aaa
jp
cli
mov
pop
fcomps
mov
and
push
sbbb
pop
push
lods
pop
lea
mov
cwtl
push
out
outsl
cmp
xor
pop
pop
dec
dec
fs
mov
je
cmp
enter
clc
les
adc
mov
cmpsb
enter
push
pop
iret
push
je
cmp
pop
adc
pop
cltd
aam
xor
xchg
gs
loop
iret
in
mov
jns
stos
xlat
mov
mov
xor
push
hlt
addl
xchg
pop
and
aad
mov
inc
mov
mov
not
mov
scas
test
adc
jp
test
sub
pop
mov
mov
dec
rol
adc
adc
pusha
jns,pt
mov
lds
push
je
adc
dec
out
fimuls
pop
fisubs
adc
sub
mov
insl
mov
es
mov
xchg
cmp
js
push
sarl
imul
sbb
hlt
dec
jg
scas
xchg
repnz
dec
daa
int3
jo
cmpsl
cltd
mov
xchg
sub
and
and
xor
add
inc
iret
js
or
arpl
aas
or
push
dec
dec
adcb
jge
jne
rcrl
jp
sbb
call
xor
lock
push
mov
push
dec
dec
ret
frstpm(287
pop
mov
cmpb
pop
dec
cmp
hlt
mov
xor
testl
test
and
and
jnp
fldt
bound
mov
test
fcomip
push
andb
push
or
xlat
out
cmp
adc
mov
jno
pop
mov
mov
jae
xorb
cmp
loope
jmp
inc
mov
maskmovq
imull
gs
dec
rcrb
xor
mov
lret
leave
addb
cltd
sti
mov
sbb
movsb
rorb
sahf
fidivl
xchg
paddw
sbb
push
sub
ss
mov
js
mov
sbb
inc
mov
jbe
push
sarb
push
adc
xor
dec
pop
je
fs
add
push
or
jle
sub
dec
xchg
dec
add
xor
js
incl
and
loopne
pop
repnz
outsl
loope
lret
or
xchg
xor
fs
sub
pop
js
mov
xor
xchg
dec
insl
push
mov
mov
xchg
inc
mov
pop
xor
les
pop
outsl
fldenv
clc
std
pop
loopne
pop
dec
fwait
mov
dec
fmull
sbb
mov
xor
dec
push
add
orl
adc
pop
mov
sti
mov
cmp
stc
pavgw
mov
js
mov
divb
xor
adc
cmp
cmp
aad
jo
mov
dec
push
dec
mov
mov
stos
js
adc
cmpsb
pop
lods
fcoms
mov
mov
mov
dec
push
xchg
sbb
stos
out
testb
pushf
bound
sub
ja
mov
add
imul
xchg
adc
movsl
fdivrl
or
aas
and
mov
dec
lods
cmp
clc
sbb
cld
xlat
std
pusha
push
ds
pusha
pop
push
mov
ret
loope
daa
and
mov
mov
and
cli
inc
cwtl
repnz
push
pop
add
mov
jmp
daa
enter
and
das
data16
es
movsb
mov
test
inc
stos
jle
es
stos
fists
adc
jg
jne
ret
mov
lea
scas
mov
test
lock
push
xchg
ss
mov
sbb
mov
cs
out
sbbl
xchg
dec
inc
add
int3
std
mov
mov
out
ss
jle
inc
mov
mov
ds
outsl
sti
fists
add
sbb
fwait
mov
arpl
fdivrs
sbb
sar
js
lahf
xchg
dec
cmp
inc
push
notl
jecxz
mov
mov
dec
andb
jle
jge
xor
mov
jle
das
or
pop
and
jp
adc
pop
aam
push
imul
lea
push
sub
divb
pop
and
and
or
add
jb
lea
int
mov
inc
addb
xchg
cmp
or
rcrl
mov
das
jmp
ja
inc
pop
out
push
fs
fcmovnbe
push
aad
push
std
or
jbe
mov
icebp
jle
sarl
outsl
adc
fimull
cltd
mov
mov
xor
xlat
outsb
xchg
es
gs
mov
xor
setnp
int
repz
std
rcrb
xchg
fistps
imul
clc
fmuls
roll
mov
push
in
or
cmp
outsb
ds
data16
adc
rcrl
xchg
fnstsw
mov
out
xchg
xlat
pop
and
andl
xor
push
jne
mov
ret
pusha
pushf
pop
dec
sbb
rcrl
pop
xchg
sbb
xor
aam
adc
movsb
push
xchg
or
adc
push
pop
test
jbe
mov
test
and
jge
cmc
adc
sbb
add
out
sti
orb
jae
scas
sbb
jns
adc
sbb
rcrb
call
arpl
sub
mov
pop
clc
adc
mov
adc
test
mov
fstl
dec
imul
mov
xchg
add
je
cmp
addr16
gs
orb
in
pop
mov
idivb
jmp
rcr
add
jns
cmpl
sub
and
mov
bound
xor
fisttps
adc
repnz
pop
lods
mov
lcall
jecxz
repnz
jmp
fidivrl
test
cli
aaa
lds
jle
mov
sbb
test
inc
nop
fistps
iret
cmpsb
out
addl
paddusb
fstl
sbb
les
dec
sbb
loope
dec
lret
cmpsl
out
inc
and
hlt
sbb
sbb
rcr
mov
sub
inc
movsb
mov
addl
insb
lea
sbb
std
sub
shll
mov
iret
enter
test
dec
fildll
mov
loop
cmpsb
addr16
or
add
push
adc
stos
sbb
notb
int
mov
sub
gs
or
ret
movsb
jl
pop
out
mov
out
pop
das
xor
dec
sub
jno
sub
xor
test
and
sti
andb
xor
popa
pushf
and
xor
out
out
mov
mov
dec
mov
jmp
repz
hlt
push
inc
dec
bound
shr
cmp
stos
adc
pop
xchg
shr
push
sbb
mov
jecxz
xchg
adc
shll
inc
fnstenv
jg
aam
jl
mov
lds
int
mov
add
outsb
mov
or
ljmp
inc
mov
outsb
lods
push
lahf
mov
mov
in
adc
sub
loopne
mov
fistpl
push
bound
pop
ljmp
lods
movsl
ret
rclb
add
nop
mov
sbb
inc
inc
pop
push
jmp
xor
pop
mov
xchg
mov
shl
aad
xchg
bound
insl
lahf
pop
push
sahf
jl
dec
jae
fimull
jecxz
stos
pop
inc
dec
cmp
mov
rcll
adc
repz
sti
sahf
out
out
bound
clc
loop
xor
lcall
popf
jo
xorl
jb
fcom
push
dec
inc
fucomip
jmp
bound
addl
push
imul
idivb
sbb
and
cltd
ljmp
mov
mov
cmc
ja
push
jmp
or
sub
push
rolb
fs
lret
push
andb
sbb
je
sub
in
lods
mov
divl
pop
xchg
jnp
mov
inc
ficomps
fs
add
jecxz
push
ret
hlt
push
xchg
aaa
jbe
insl
sub
inc
cltd
pop
mov
jl
inc
stc
mov
les
dec
pop
add
out
imul
inc
xor
cmp
adc
mov
mov
pop
xlat
mov
daa
push
gs
xchg
mov
xor
jnp
xor
call
dec
add
jmp
and
pop
lods
cli
imul
mov
add
mov
mov
nop
or
and
add
imul
notb
push
out
ret
jecxz
clc
sub
pop
mov
enter
sbb
dec
lret
psllq
sub
in
inc
testb
xchg
std
push
lods
arpl
cmp
jo
mov
mov
int
mov
jle
scas
and
pop
insl
nop
out
and
je
dec
inc
daa
sbb
aaa
xchg
repnz
cmpsb
stos
out
or
sbbl
xchg
pop
rclb
add
rcrb
add
aas
sub
xor
test
xchg
pop
cmp
or
push
test
sub
pop
fs
popa
dec
icebp
pop
sti
xlat
push
jl
sub
or
mov
cwtl
inc
mov
dec
mov
mov
cmc
sub
sub
jl
add
repz
mov
and
subb
rcll
outsl
inc
jecxz
sbb
test
jnp
stos
push
outsl
pushf
sbb
sub
sub
dec
sarb
aad
out
fisubl
sti
or
push
pop
push
lods
rol
repnz
mov
and
scas
mov
dec
jl
jnp
lcall
insl
jl
push
ss
in
jbe
pusha
push
inc
lods
sub
mov
iret
sbb
lds
fmul
push
popa
mov
sub
imul
stc
cmc
mov
ljmp
xchg
jl
push
test
int3
hlt
xchg
in
push
jae
movsl
dec
pushf
mov
cmp
lds
imulb
pop
inc
loope
adc
fidivrs
ljmp
addb
out
sbb
fbstp
pop
notl
xchg
add
xchg
nop
jbe
or
sub
xchg
subb
dec
nop
pop
aam
addr16
out
aas
mov
rcl
ret
and
pop
outsl
enter
fistpl
dec
or
or
imul
jle
xor
testb
pop
loope
pusha
mov
into
lea
aad
dec
dec
mov
test
pop
nop
les
add
inc
lcall
mov
stos
sbb
sbb
ds
jne
int
addr16
sbb
mov
sbb
sbb
arpl
adc
orl
pop
stc
mov
std
cmpsl
iret
cmpb
mov
jmp
add
sbb
leave
dec
lods
cmp
push
sbb
or
mov
jo
and
shll
sub
add
repnz
in
int3
test
cmpsb
jle
imul
jbe
sbb
aaa
jnp
scas
in
push
decl
mov
pop
iret
push
cltd
daa
pop
or
scas
shrb
xchg
push
fdivr
mov
lcall
rorb
lret
scas
push
aam
cltd
out
and
movl
mov
jno
cmp
pop
pop
rcll
lods
in
sbb
or
add
lret
bound
jne
and
dec
xor
in
xchg
mov
pop
jae
dec
and
movsl
movsb
mov
fwait
jecxz
cmpsb
das
cwtl
aad
loope
push
mov
test
jle
sti
pushf
sub
and
cmc
lcall
mov
mov
out
ss
nop
hlt
or
or
ja
cmpsl
outsb
xchg
addps
mulb
mov
xor
call
inc
aas
nop
js
adc
pop
js
fdivr
aas
jecxz
jnp
and
add
test
adc
adc
push
add
push
loopne
int
mov
and
mov
jmp
mov
pop
and
jg
outsl
ret
ret
mov
or
mov
out
in
popa
mov
cmpl
add
mov
pop
inc
subb
in
pop
xor
mov
dec
push
sub
jns
fsubs
sarb
xor
in
cmpsl
or
pop
dec
ljmp
xlat
adc
insb
imul
mov
adc
fistpll
pop
insl
sub
mov
in
xchg
loope
dec
mov
xor
pop
push
jno
adc
lret
adc
or
pop
insl
pop
sbb
xchg
xchg
sbb
and
mov
jg
xor
xchg
dec
jne
push
jge
cmp
in
add
adc
mov
or
add
inc
dec
inc
dec
ret
inc
insl
pop
xchg
loope
and
std
lret
and
pop
mov
jo
inc
add
pop
and
xchg
pusha
movl
xchg
push
dec
jecxz
mov
mov
xor
ja
shll
shrb
cmp
push
orb
fmull
xchg
cltd
jmp
icebp
mov
sbb
jle
inc
dec
mov
mov
es
inc
dec
nop
jae,pt
loopne
ficoms
mov
add
xor
arpl
jmp
test
mov
sbb
mov
adc
leave
jne
xchg
scas
or
dec
call
mov
push
adc
es
add
pop
sbb
push
mov
scas
testb
arpl
arpl
inc
js
clc
push
inc
loope
jns
push
imul
add
xchg
ds
inc
mov
xchg
jmp
insl
rcrb
les
jmp
jecxz
sbbb
add
adc
sub
lret
outsl
xchg
and
test
into
dec
stos
rcl
lds
cmpsl
mov
fsubrl
pop
out
cmp
or
mov
cmp
cltd
pop
in
jmp
pop
addr16
sbb
stos
pop
jno
out
je
nop
in
outsl
dec
mov
cmc
test
push
data16
push
jecxz
jo
std
mov
addr16
mov
addr16
push
sub
das
sbb
sbb
xor
and
adc
xchg
push
ret
ljmp
sub
sub
and
jg
mov
push
mov
outsl
push
inc
mov
mov
in
fbld
mov
pop
mov
addr16
pop
and
enter
test
stos
mov
or
sub
mov
hlt
sub
insb
push
inc
pop
clc
pop
popf
mov
mov
cmp
fdivs
jl
neg
notb
dec
icebp
or
sbb
sarb
pop
repnz
adc
push
rcl
add
dec
lea
cmp
sbb
push
insl
xchg
daa
dec
mov
inc
test
stos
or
mov
loop
jmp
fsubrs
lds
aaa
fidivl
xor
jno
mov
in
je
push
adc
hlt
or
dec
mov
addr16
daa
nop
sbb
rclb
and
aaa
je
add
ficoml
mov
fadds
push
daa
and
fnstcw
out
or
jg
dec
xor
add
add
sbb
adc
outsl
aaa
lea
ret
jge
aam
jg
cltd
enter
das
sahf
mov
xlat
icebp
pop
sub
mov
movsl
push
test
shl
into
ret
idiv
stos
sub
fcmovne
xor
jmp
sub
and
ss
outsl
xchg
pop
mov
adc
sbb
push
les
jnp
jnp
jl
outsl
jecxz
mov
dec
xor
enter
fninit
ret
out
mov
adcl
mov
push
mov
jne
xor
mov
std
out
xchg
cmpsb
xor
sar
popf
popa
and
inc
scas
fisubrl
and
push
test
dec
jp
add
popa
jp
jno
add
xlat
push
iret
out
jge
dec
loope
aaa
in
nop
fildl
xor
xchg
push
jno
adc
into
mov
outsl
sahf
push
cmp
cmp
dec
push
and
xchg
rorl
xor
lods
repnz
adc
push
push
xor
cmp
and
ds
mov
xlat
mov
inc
xchg
cmp
push
fiadds
push
div
sbb
orl
sub
out
sarl
sub
push
cmc
insl
test
iret
dec
ss
inc
insl
pusha
jp
ds
or
inc
in
ds
out
bsr
out
leave
mov
das
mov
aad
mov
xor
lret
loop
sbb
ljmp
xchg
dec
adc
das
and
mov
pop
or
adc
sub
rolb
loopne
push
lods
je
mov
or
js
xchg
enter
rcr
jge
jl
sbb
xchg
clc
lahf
sbb
sbb
push
xorl
into
and
and
add
les
in
jo
pop
in
xchg
cmp
stos
in
sbb
stos
fadds
not
dec
out
adcb
mov
cli
jle
out
in
jns
adc
decb
lret
mov
xor
cwtl
lret
add
insl
ljmp
mov
xor
dec
xchg
cmc
icebp
hlt
hlt
sar
mov
add
stc
daa
xor
jmp
mov
and
hlt
pop
add
movsb
test
ja
fs
dec
adc
push
iret
enter
push
mov
adc
std
clc
fstpt
pushf
incb
rcr
sub
xor
jo
imul
dec
sbb
addr16
inc
xchg
inc
and
js
fidivs
nop
rcrb
push
add
es
cltd
mov
mov
push
push
inc
leave
cmp
adc
dec
scas
movsb
jae
in
sub
faddl
rorb
movsl
push
stos
outsl
mov
dec
xchg
adc
out
xor
xchg
sub
cli
test
stos
scas
jp
sbbb
mov
cmp
cmp
push
pop
js
sbb
push
push
add
inc
mov
pop
sbb
loopne
fs
cmp
xor
add
in
xchg
shll
arpl
rorb
add
pop
mov
inc
int3
test
movsb
xor
xor
pop
adc
mov
and
mov
jg
in
xchg
xchg
mov
cs
imul
popf
push
cmp
popa
movsl
or
imul
cmp
scas
outsl
jae
cmp
inc
jge
or
mov
inc
cmp
movsl
mov
jecxz
mov
xor
mov
cmpsb
les
rorb
push
aas
lahf
jmp
insb
push
xor
out
sbb
dec
or
scas
aam
fsubl
and
push
dec
xchg
lret
or
inc
shlb
inc
adc
jo
xor
movb
xchg
push
arpl
mov
push
lret
cs
jnp
jecxz
mov
mov
push
xchg
xor
fsub
ljmp
cmc
inc
pop
jg
xchg
fwait
mov
inc
mov
cmp
mov
jp
adc
adc
popf
frstor
push
pushf
bound
fs
adcb
lret
mov
dec
movsb
fisttpl
jae
hlt
xor
jmp
sbb
ljmp
jne
arpl
or
add
sti
mov
mov
cmp
xor
hlt
inc
movsb
test
xchg
faddl
push
pop
jnp
xor
or
fists
sahf
out
pop
clc
call
mov
add
shll
scas
xor
aaa
add
leave
mov
fsub
fwait
jmp
aam
sbb
push
idivl
pop
dec
mov
pop
xor
fcomi
jbe
faddp
add
loope
insl
xchg
int3
and
cmp
cmp
mov
stos
mov
dec
leave
popa
xor
cmp
mov
adc
pop
jge
ret
mov
adc
loop
mov
leave
jle
pop
mov
data16
xor
pop
es
jo
fimull
and
cwtl
pushf
insb
mov
or
or
repz
inc
cmpsb
sub
mov
mov
in
sbb
outsl
fsub
ss
pop
xor
or
mov
mov
iret
cmpb
cli
mov
pop
push
and
outsl
fidivrs
adc
sub
cld
push
fwait
sbb
lea
loopne
and
mull
or
test
dec
inc
fidivs
addps
jge
in
add
mov
in
rcll
pushf
add
ljmp
push
add
push
lods
flds
mov
inc
in
cmp
pop
mov
js
dec
test
push
dec
ja
and
lods
sbb
xchg
adc
scas
sub
sub
mov
popa
jb
insb
push
lock
adc
cmp
out
xchg
in
jo
cmp
lock
mov
movsb
xor
mov
movsl
cwtl
mov
or
jge
ret
mov
call
scas
xor
cs
gs
sub
dec
sti
lret
movsl
and
fnstenv
hlt
mov
or
mov
jbe
push
loope,pn
xchg
lahf
cmp
and
jl
cwtl
cmp
enter
pop
popa
push
adc
xor
enter
inc
adc
int
xchg
in
xchg
inc
clc
xorl
std
inc
aad
and
inc
lret
mov
pop
test
jbe
adc
lock
les
arpl
pop
sbb
jns
push
aas
mov
mov
jl
sub
insl
xor
pop
in
enter
add
jo
out
jnp
rcrl
out
out
ss
cmpsb
aas
repnz
sub
sub
enter
sub
movsb
popa
cmp
icebp
lret
sti
push
add
xor
push
xor
call
dec
push
adc
sub
fwait
mov
jp
mov
dec
push
push
mov
adc
and
push
sub
push
loope
mov
jg
xor
inc
fucomp
sub
je
add
daa
andl
mov
sbb
dec
repnz
jmp
ret
pusha
loopne
and
or
idivl
jg
and
push
or
dec
mov
cs
sarb
xor
lret
mov
out
movsl
fidivl
test
lret
loop
xchg
jp
add
jb
mov
add
mov
je
dec
xor
adc
pop
dec
xchg
sbb
lea
xor
popf
and
cmp
push
xor
mov
cld
icebp
call
test
stos
frstor
cltd
dec
out
cltd
popf
or
mov
sbb
cltd
mov
mov
repz
ret
mov
pop
popf
push
ret
jmp
jns
dec
imul
and
mov
ja
adc
imul
mov
push
mov
pop
mov
daa
add
xchg
in
jo
push
mov
shl
mov
rolb
xchg
in
pop
insl
loopne
push
xor
pop
push
icebp
jns
dec
aas
mov
xor
pop
mov
or
pop
cmp
xchg
inc
leave
cmp
push
test
lahf
push
mov
push
xor
cs
les
cmp
mov
push
adcl
insl
mov
hlt
push
ret
jb
test
addr16
pop
lahf
jne
adc
push
movsl
fidivrl
mov
mov
rcr
in
out
ret
or
jae
lgs
fcoms
mov
aas
imul
add
data16
jp
ficoms
aas
imul
push
dec
pop
and
xor
iret
cld
mov
xchg
faddl
jae
cmp
stos
test
jle
out
jmp
jns
es
imul
cs
iret
mov
xchg
xchg
popa
cmp
cwtl
pushf
jae
flds
dec
rcll
inc
jnp
xchg
jb
xchg
sub
xor
pop
loop
mov
cmp
das
fsub
inc
mov
mov
ja
gs
add
loop
pop
decb
add
adc
test
das
xlat
into
inc
mov
stos
mov
add
lcall
mov
adc
cmpsb
cmp
pop
dec
arpl
mov
subl
cmc
test
sub
push
and
nop
lds
int
xchg
push
imull
aaa
mov
movzwl
mov
lods
es
xor
inc
push
js
sub
xchg
into
xchg
jns
movsl
and
adc
inc
testl
out
lock
leave
cmp
xor
mov
int3
out
push
sarl
call
xchg
stos
jmp
inc
aad
pop
test
cmpsb
dec
fwait
push
lods
dec
xor
mov
push
push
mov
jge
rolb
add
adc
js
mov
pop
lods
ficoms
jmp
je
arpl
jl
imul
add
cld
lock
stc
dec
in
ss
sahf
mov
sub
jne
xor
push
in
ror
dec
mov
movsl
push
push
sbb
stos
sbb
jno
push
push
test
or
pop
test
mov
dec
adc
and
lods
and
out
add
adc
inc
jmp
out
aas
mov
ja
jg
dec
cmp
test
bound
std
xor
out
push
je
sbb
shrl
mov
inc
int
ja
mov
scas
mov
jmp
and
rcrb
add
nop
lock
call
rcrb
fiadds
imul
icebp
bound
push
insl
mov
hlt
repnz
push
mov
daa
icebp
push
jg
test
cmp
pop
incb
out
cltd
or
aaa
pushf
sub
repz
lahf
popa
add
lds
jp
and
push
push
enter
mov
negl
sub
xchg
insb
fcompl
negb
popa
jg
pop
popa
dec
mov
leave
jae
push
lcall
imul
es
mov
cmp
pop
push
mov
push
add
lea
popf
lret
or
sub
xchg
loopne
sub
xchg
cmc
icebp
js
es
mov
pop
xchg
mov
mov
adc
xor
and
adc
sbb
lret
int
imul
mov
cmc
scas
data16
aaa
loop
lods
lds
dec
sbb
mov
pop
sub
mov
mov
insl
xor
fdivrs
sahf
mov
jb
inc
popa
add
push
cmp
outsl
or
pop
inc
jno
mov
add
test
roll
push
xchg
add
lods
fucom
add
sub
xchg
pop
stos
mov
push
rorb
push
loope
dec
jno
js
test
cmpsb
in
sahf
jns
or
imul
ljmp
mov
push
sub
xor
inc
mov
jl
imul
push
es
lock
jo
xchg
mov
adc
sbb
jmp
mov
mov
or
out
mov
jmp
mov
mov
cmp
sub
push
aas
gs
push
mov
ljmp
sub
add
data16
mov
fsts
aam
push
dec
fsubrl
pop
sub
shrl
xor
lret
fildl
lret
jne
jb
or
mov
jle
rclb
jns
dec
rcll
popf
lea
arpl
std
call
inc
push
jnp
test
int
xchg
insl
in
xchg
aad
jae
add
insb
es
pusha
xchg
cmp
sarl
mov
outsb
sbb
mov
bound
ret
pop
push
fsubrl
mov
popa
rep
push
in
ret
jecxz
movsl
ds
cltd
out
mov
xlat
dec
sbb
dec
cmpl
ret
xlat
add
pop
out
xlat
pop
js
mov
leave
add
mov
mul
fcompl
push
stc
out
cmpsb
push
lcall
mov
into
int3
mov
out
test
mov
or
lds
orb
sbb
je
unpckhps
call
dec
imul
jecxz
cs
movsb
cmp
add
in
addl
inc
out
aaa
js
push
jns
inc
pop
mov
push
mov
cmp
sbb
std
push
pop
xchg
ds
iret
pop
sub
xor
sub
mov
pop
icebp
scas
cmp
pop
les
push
iret
insb
sbb
cmp
sbb
ljmp
outsl
dec
jl
xchg
data16
and
sub
mov
jmp
clc
sbbl
in
rorb
fiaddl
mov
insb
arpl
dec
shlb
push
mov
mov
jb
jae
xor
sbb
jge
popa
fidivrl
scas
ret
hlt
push
xchg
ja
jbe
or
sub
divb
jle
push
jp
imul
mov
arpl
inc
pop
or
adc
sub
les
daa
push
mov
rcr
dec
cmp
hlt
es
sahf
arpl
cmpsl
mov
jmp
scas
out
xchg
xchg
jbe
xchg
jle
xor
sub
lods
stc
pop
sbb
int
xchg
das
push
cmp
add
and
push
fcomip
insb
inc
inc
adc
pop
test
mov
cs
add
sub
and
ljmp
xchg
rolb
into
fwait
sub
loope
lahf
sub
push
mov
addr16
sbb
mov
jne
aaa
int3
and
push
adc
add
int3
stos
repnz
adcb
cmp
mov
jb
hlt
push
xlat
mov
push
call
dec
dec
sub
pop
insb
aas
inc
pop
cmpl
xor
xor
dec
outsb
js,pt
cli
popf
stc
or
je
inc
jbe
mov
mov
out
push
movsl
addr16
clc
arpl
jg
int3
jp
loope
jno
dec
sti
lcall
sub
in
nop
insb
enter
inc
sub
loopne
loopne
pop
or
fisubrl
sub
int3
movsb
lahf
arpl
sbb
jl
insb
sub
call
cmpsb
mov
ds
jns
and
mov
sti
jp
add
xchg
mov
fldcw
push
sbbl
scas
mov
cmpsl
insb
cwtl
arpl
imul
movsl
jns
negb
nop
loop
jnp
imul
adc
add
inc
popl
xchg
insb
jge
stc
adc
add
mov
xchg
test
or
movsl
inc
fldl
fstpt
int3
rcrl
rcll
adc
sub
and
mov
insl
jns
sbb
jl
mov
aas
out
icebp
mov
les
adcl
adc
inc
cwtl
mov
mov
push
stc
and
or
cmp
fimuls
mov
sahf
pop
fldt
dec
mov
repnz
push
sarl
cli
jp
and
nop
ljmp
fbld
imul
ret
mov
shrl
aas
imul
movsl
push
sbb
add
pop
and
jp
cmp
cmp
push
daa
cmp
out
push
mov
leave
jecxz
pop
data16
in
gs
daa
and
out
test
and
mov
pusha
emms
call
cltd
in
imul
cmp
push
inc
movsl
bound
xlat
push
jecxz
push
or
test
sub
xchg
and
out
rol
xor
sar
push
stos
lahf
sbb
mov
faddp
jnp
cmp
dec
fwait
mov
addb
dec
out
dec
pop
int
xlat
mov
mov
cltd
cmp
hlt
std
in
pop
lea
mov
mov
dec
jl
mov
inc
jb
xor
sti
lock
notb
cmp
dec
jbe
mov
add
and
test
jns
jmp
push
mov
mov
push
push
mov
cmp
jp
dec
and
enter
loopne
icebp
push
xchg
and
jg
insb
or
xorb
dec
movsb
mov
jp
jg
iret
inc
mov
mov
inc
in
js
sub
popf
inc
scas
xchg
je
xor
je
add
adc
push
and
mov
sub
les
arpl
pop
dec
imul
sub
imul
mov
mov
idivl
jae
pop
pop
xor
adc
aam
test
fidivl
push
cwtl
ljmp
push
mov
imul
push
pop
pusha
jge
dec
xchg
xlat
mov
dec
aad
int
mov
mov
sub
iret
aam
push
adc
lcall
add
pusha
or
nop
and
lret
and
mov
mov
cltd
push
push
insl
test
cli
push
insl
loope
outsl
xor
push
mov
mov
push
push
jno
cltd
inc
mov
jne
xor
adc
rcrl
lahf
push
jb
cmp
push
jl
decb
aad
in
sub
test
push
push
aad
xor
frstor
and
in
push
add
daa
sub
dec
sbb
adc
sub
pushf
mov
jae
jae
push
xchg
test
jmp
xor
out
push
lock
jge
adc
mov
data16
in
fs
test
testl
xchg
adc
sub
lods
stos
lods
push
mov
scas
dec
loop
in
jl
out
shrl
sub
andb
mov
test
outsb
jp
sbb
mov
leave
dec
fisubrs
push
mov
dec
rcrb
aam
xchg
and
xor
faddl
int
scas
sub
add
or
jnp
mov
pop
mov
ret
or
test
lods
fsubrp
loope
daa
or
imul
xchg
mov
ret
jg
aas
loope
add
notb
lret
or
test
inc
cmc
dec
inc
and
push
call
imul
xor
mov
nop/reserved
and
inc
hlt
faddl
scas
pop
push
or
ss
cmp
add
push
mov
test
and
mov
push
sub
mov
xchg
xchg
cmpsl
jl
mov
pushf
push
add
scas
cwtl
shll
ja
enter
xchg
cmp
icebp
loop
lret
pmaxsw
add
xlat
test
in
bound
or
ficoml
push
mov
jge
lods
aad
hlt
inc
fcomps
mov
loope
mov
pusha
rcrl
sbb
lds
fistpll
cmpsl
fisttps
pop
inc
cli
test
mov
hlt
lock
xlat
aad
adcl
pop
mov
in
out
jl
or
sub
or
das
scas
jb
outsb
fistl
into
int
xor
movsl
fcomi
imulb
das
loopne
xor
scas
and
jle
cmp
lahf
sbb
arpl
mov
repnz
pushw
adc
fsubl
arpl
xor
xchg
pop
xor
xchg
jbe
scas
dec
lds
xor
int
ficomps
push
add
cli
dec
mov
scas
xchg
add
inc
jnp
sbb
jno
cmp
push
out
dec
jo
in
scas
mov
adc
adc
inc
fbstp
lret
cmpsl
fwait
pop
or
adcb
pop
xchg
paddq
cmp
mov
jp
shll
das
fistl
jl
sbb
sbb
inc
call
dec
movsb
decl
and
neg
mov
push
jns
mov
je
inc
out
dec
push
mov
push
js
inc
sbb
fs
inc
cmp
repnz
loope
mov
and
faddp
inc
lock
imul
aam
cmp
adc
lcall
lret
pop
mov
or
push
inc
cmp
pop
or
cmp
mov
js
stos
adc
mov
lea
fs
ds
into
cmpsl
pop
xchg
sub
roll
movsb
dec
xor
hlt
push
jb
xchg
dec
sbb
cli
mov
int
lods
push
setbe
lods
inc
and
pop
in
and
dec
daa
clc
nop
orb
cli
rcll
sbb
cmc
loop
dec
and
ds
arpl
lea
sbb
and
outsb
int
gs
int3
mov
inc
inc
stos
leave
movl
or
int3
xchg
inc
dec
xchg
rclb
jnp
inc
incb
movl
mov
enter
adc
data16
scas
fs
out
loope
imul
xchg
lcall
inc
xchg
loopne
jp
xchg
mov
out
and
test
addr16
testb
add
lock
mov
sub
push
push
and
shl
adc
dec
incl
mov
sub
add
orb
mov
inc
cmp
cwtl
stos
jmp
push
fs
fldenv
movsb
mov
movlps
out
xlat
lock
adc
ss
xor
gs
pop
add
inc
leave
cld
shlb
das
insb
mov
outsl
xor
repnz
je
pusha
dec
imul
add
mov
cmp
das
nop
adc
loop
push
dec
xchg
jns
cmp
in
ss
xor
jle
adc
sub
jnp
leave
pop
insb
or
mov
sub
xchg
inc
mov
xchg
add
dec
das
subb
aas
jns
or
lds
mov
lret
cld
je
test
test
sbb
inc
mov
movsl
mov
aam
mov
into
mov
loope
mov
fs
int3
outsl
mov
repz
jge
mov
pop
enter
cmp
aaa
or
mov
lahf
fcmovu
jo
loop
fsubl
cmp
xchg
ret
fidivs
lret
fnsave
mov
arpl
popa
shll
mov
inc
ficomps
sub
pop
mov
add
mov
je
cmp
pop
les
dec
sbb
gs
mov
clc
xchg
mov
bound
int3
inc
inc
push
mov
jmp
loopne
mov
mov
adc
lcall
xchg
pusha
shl
andl
lods
or
rolb
adc
add
pop
adc
pusha
dec
lahf
sbb
xchg
call
jbe
pop
and
fstps
and
data16
inc
scas
test
stos
aas
nop
iret
fisubrl
mov
mov
shlb
jecxz
iret
cmp
pushf
adc
or
jp
cmp
mov
stos
and
push
frstor
pop
mov
lock
sub
inc
shr
mov
jne
sbb
sbb
js
push
aam
jecxz
push
xchg
movsl
loop
push
lret
and
lcall
cwtl
and
pop
add
jb
popa
es
test
std
cmc
sar
les
push
jbe
negl
mov
outsl
ret
mov
cmpb
stc
inc
shrb
dec
dec
mov
mov
or
loopne
dec
push
xor
sbb
inc
xchg
xchg
lods
sti
add
jno
push
cwtl
xor
sahf
sbb
inc
bnd
ret
nop
mov
aam
push
jp
movsl
je
psrlq
fidivs
aaa
xor
lods
add
push
sub
push
pop
xchg
or
dec
sbb
jnp
sarb
and
pop
arpl
mov
push
xchg
pop
pusha
je
adc
fwait
lcall
sub
imul
repnz
adc
in
inc
outsb
das
adc
int3
inc
scas
cltd
aaa
jbe
sub
lcall
cli
rcrb
jl
ret
add
iret
xchg
xlat
or
popf
jp
cltd
sahf
popf
stos
loopne
sub
pop
sub
pushf
ds
mov
popa
rcrl
cli
mov
ljmp
adc
pop
cmp
icebp
rcr
roll
cmp
pusha
mov
stc
or
xchg
arpl
push
xchg
js
das
jl
cmpsb
out
xor
in
mov
addr16
push
pop
cmpsb
scas
and
lret
loopne
pop
pop
insb
and
xor
mov
jecxz
push
or
les
lds
mov
scas
mov
adcb
gs
add
mov
cwtl
sub
pop
add
push
or
sub
jmp
jp
icebp
push
push
lods
xor
fstpt
xchg
push
inc
lods
test
insl
push
scas
jne
mov
dec
stos
inc
shll
push
dec
jp
hlt
inc
popf
mov
gs
rcr
lods
test
mov
insl
fstps
or
sbb
fwait
jecxz
pusha
lods
push
sub
leave
dec
sbb
cwtl
fbstp
mov
add
xor
pop
sbb
and
daa
mov
fdivs
mov
mov
add
and
call
xor
xchg
aam
pop
out
mov
sbb
xchg
inc
out
outsb
mov
cld
lds
imul
fwait
cltd
xor
xchg
roll
jne
push
dec
rol
shrl
call
pusha
popa
popa
mov
stc
and
push
lods
jns
jecxz
push
mov
mov
out
insb
je
push
frstor
and
insl
sbb
dec
inc
pushf
es
push
sub
mov
pusha
mov
shll
pop
pop
stc
add
add
dec
movsb
xchg
mov
mov
sbb
andb
enter
in
pop
xor
jno
cmpsl
xlat
mov
mov
lahf
dec
add
mov
cmc
or
adc
ljmp
jae
lea
dec
cltd
add
cmpb
jmp
ljmp
outsb
andb
in
fidivl
lcall
lock
pop
inc
fwait
shl
xor
or
ss
adc
and
test
cmp
ljmp
pop
cmp
pushf
es
xor
repnz
in
int3
lcall
jge
or
ds
push
sahf
sbb
fs
cwtl
mov
in
shr
push
jns
or
mov
mov
daa
or
insb
lock
and
push
movsb
mov
sbb
dec
cmp
push
and
push
int3
mov
aas
inc
jmp
xchg
add
mov
mov
repnz
mov
add
cmpb
or
loopne
ja
test
xchg
and
in
addr16
sub
xchg
lret
fnsave
inc
mov
daa
xor
mov
iret
adc
arpl
test
add
xchg
movl
mov
and
mov
pop
pop
in
inc
cmc
das
addr16
cmpsb
or
mov
add
cwtl
mov
out
jo
ss
push
mov
ret
lock
add
xor
and
mov
das
xor
imul
push
sti
sub
cmpsl
mov
es
enter
out
pop
or
mov
cwtl
xchg
jae
xor
cs
loope
loope
dec
xchg
insl
mov
movsb
in
xchg
vunpckhps
push
mov
pushf
aas
mov
lea
pop
int3
gs
leave
aas
sub
mov
and
int3
jmp
ret
test
int
fstpl
push
movlps
jl
push
mov
xor
mov
add
jg
adc
int
or
lahf
pop
inc
mov
decl
inc
scas
psubd
xlat
daa
xor
lea
xchg
inc
fucom
jl
testl
pop
xchg
mov
sub
es
xchg
xchg
addr16
inc
cmp
pushf
add
ds
mov
dec
pop
loopne
mov
scas
lret
sub
push
into
out
jbe
push
dec
push
mov
push
out
cmp
cmc
add
and
and
dec
mov
push
push
insb
insb
or
dec
and
mov
xchg
movsb
cmp
into
inc
sub
sub
test
push
es
arpl
jmp
pop
add
out
aaa
or
pop
lock
sub
push
xchg
aaa
fsubl
xchg
negb
cmp
mov
das
xchg
jecxz
rolb
sbb
jl
mov
scas
popf
sbb
das
push
iret
lea
rcrb
sub
mov
jns
jnp
or
xchg
lods
pop
lcall
or
and
push
cmp
gs
mov
ljmp
mov
fstpl
cmp
mov
loope
xlat
xor
or
dec
pop
mov
dec
popf
inc
jp
and
cmp
rolb
xchg
xchg
sti
cs
and
sub
mov
mov
hlt
pop
xor
bound
imul
inc
fldcw
mov
adcb
int3
mov
push
mov
or
ds
inc
ja
notl
int
lahf
cmp
negb
mov
fdivp
rorl
outsl
sbb
add
adc
test
jae
mov
inc
jo
or
or
pop
add
pusha
mov
in
adc
in
mov
lock
in
sti
loopne
aaa
or
mov
jae
ret
jnp
call
pop
fcmovnbe
push
pop
sbb
ljmp
cmp
in
ljmp
adc
push
int
movsb
mov
inc
and
pop
cmpsb
mov
arpl
fisttpl
repnz
adc
jbe
cwtl
inc
sbb
cmp
mov
stos
sarl
sahf
mov
in
xlat
push
pop
in
push
mov
dec
cmpl
ljmp
mov
leave
adc
ror
xchg
adc
or
ffreep
jne
xchg
push
hlt
out
adc
add
cmpsb
in
repnz
and
add
xor
cmp
dec
inc
or
adc
xor
pmulhuw
adc
out
or
mov
push
imul
xchg
mov
test
loop
jle
ret
mov
xor
lahf
jge
xchg
ja
and
sarb
pop
movups
jo
nop
pop
icebp
xchg
sbb
inc
aam
sbb
out
cmp
and
xor
hlt
xchg
adcb
adc
sbb
lods
test
lahf
inc
test
std
xchg
enter
scas
push
fisubrl
btr
dec
movsl
test
leave
outsl
pusha
insl
imul
and
popa
xor
arpl
adc
and
fwait
jno
jo
ret
inc
lods
pop
sbb
int3
int3
xor
dec
or
jbe
in
xor
push
push
fbstp
xor
pop
mov
je
ds
cli
mov
arpl
test
xchg
or
jmp
mov
adc
cmpl
in
aad
and
ljmp
cmp
add
fdivp
mov
test
lahf
scas
mov
or
dec
dec
loopne
xlat
sub
cs
pop
mov
adcb
inc
fstl
cmp
dec
call
rorb
outsl
out
stos
fs
add
inc
xor
ss
lea
jno
mov
lods
push
cmp
adc
xchg
jl
and
pusha
mov
jb
enter
inc
dec
mov
inc
push
stc
iret
call
xorb
rcrb
stos
aaa
adc
fimull
repz
dec
mov
es
in
repz
sbb
sub
push
imul
fs
pusha
sbb
ror
mov
adc
or
adc
lods
ret
sarb
cmp
mov
movb
inc
mov
loop
icebp
cs
push
orl
push
fsubl
xor
push
insb
lods
sub
add
mov
ja
mov
jns
xchg
push
js
push
pop
mov
outsl
daa
pop
xchg
out
push
push
xchg
jmp
jp
add
sub
leave
pop
fnsave
fadd
mov
enter
push
mov
jns
jl
pop
cwtl
fildll
pop
push
ds
jecxz
iret
dec
ret
lods
pop
jb
add
push
fistpll
mov
xor
mov
jecxz
pop
jg
lret
jno
test
sub
mov
imul
pop
in
mov
mov
mov
cld
sub
in
cltd
adc
jbe
scas
mov
andb
loope
fwait
outsb
imul
pop
lods
sub
xor
sbb
xchg
adc
adc
push
adc
jl
inc
adc
xchg
mov
add
cmp
cmpsl
ret
or
inc
aaa
push
mov
xchg
mov
jno
outsl
pusha
in
xchg
sub
lahf
ljmp
and
xchg
in
call
sub
je
mov
cli
lods
mov
lret
inc
mov
push
loope
les
mov
xor
cmp
lock
push
imul
movsb
xchg
jno
sub
inc
mov
add
dec
stos
in
sub
xchg
mov
jle
xor
loop
sti
cmpsb
mov
call
or
mov
sbb
fucomp
push
fcomp
in
daa
iret
sbb
mov
ds
push
lods
shll
and
addr16
inc
imulb
rclb
adc
dec
and
jne
fbstp
xor
bound
lcall
shll
mov
mov
jle
mov
mov
push
lock
jg
dec
xor
inc
xlat
xlat
pop
jnp
lret
mov
daa
faddl
enter
and
inc
pushf
rcll
cmp
dec
pop
jne
movsl
ds
pusha
jg
jb
push
dec
mov
xor
lds
stos
adc
and
or
sbb
push
incb
pop
dec
imul
leave
push
and
cmpsb
jae
push
imul
jb
loope
xchg
xlat
pop
mov
add
scas
xor
push
or
cmp
pushf
scas
outsl
push
add
xchg
sbbl
sbbb
ja
xchg
ja
lret
adc
stos
out
jmp
mov
imul
dec
sbb
loop
clc
dec
call
idiv
in
sbb
mov
mov
adc
cmpsb
sub
sahf
imull
idivl
shr
imul
cmpsl
adc
mov
loop
mov
push
push
js
loopne
mov
insl
and
mov
or
xchg
mov
sbb
repnz
and
sbb
sub
fs
add
clc
inc
mov
sbb
imul
outsb
icebp
repnz
pop
decb
mov
push
mov
lahf
nop
sub
jl
xchg
add
adc
lds
jg
testb
mov
shll
test
jbe
mov
push
add
jmp
testb
dec
mov
dec
aas
mov
or
int3
push
and
xchg
xchg
adc
enter
sbb
shlb
cltd
call
mov
sub
decb
insb
aaa
loope
scas
push
or
pop
jno
repz
inc
inc
mov
inc
pop
cmpsl
testl
insl
decb
or
jmp
jbe
aas
lods
cmp
subl
dec
and
or
ss
lahf
xor
js
ficomps
jle
outsb
out
rcrl
add
ljmp
das
sub
clc
sbb
xor
and
mov
inc
pop
mov
adc
jle
es
push
int
cmp
add
call
fists
repz
rclb
and
loopne
xchg
sarb
fwait
test
sub
push
enter
leave
adc
out
inc
jp
mov
cs
xchg
daa
cmpsb
push
pop
push
sbb
jle
pop
cmp
mov
lret
pushf
addr16
pop
ficomps
cmpsl
test
in
pop
push
jae
jle
cmpsl
daa
fsubr
ror
mov
jno
jnp
jecxz
mov
mov
lods
arpl
movb
mov
jmp
jg
roll
pop
out
pop
subb
dec
movsb
mov
call
or
sub
push
orb
lea
push
add
mov
enter
xlat
divb
pop
popf
inc
cmp
test
or
inc
popl
dec
xor
addr16
xchg
sub
sbb
add
mov
stc
pop
jno
inc
jecxz
out
lahf
cmp
and
cwtl
pop
dec
lret
sbb
daa
inc
shr
stos
clc
int
icebp
ret
push
push
pop
pop
or
movsl
rorl
cmpsb
pop
jle
and
jmp
push
jnp
xor
jp
adc
test
arpl
lcall
loop
popf
cmpsb
lahf
arpl
mov
mov
and
lcall
andb
add
lret
stc
cmp
mov
fiadds
divb
cmp
cwtl
into
out
pop
jecxz
js
xor
jno
xchg
loope
fwait
xchg
mov
popf
lods
stos
sub
jge
aad
jmp
aas
cmp
and
xor
pop
arpl
popa
pop
jo
mov
mov
xchg
or
flds
stos
xchg
test
dec
cmp
mov
jg
cmp
mov
or
push
sbb
imull
pop
fnsave
mov
in
iret
sarl
adc
shlb
and
sub
sub
dec
shr
pop
lahf
mov
adc
repz
pusha
cmp
das
dec
bound
pop
hlt
xor
btl
sbb
xor
push
roll
outsb
test
sbb
in
lret
mov
arpl
negb
mov
jno
imul
pop
clc
testl
xor
test
clc
aas
pop
fmuls
cmp
mov
scas
sbb
mov
jbe
leave
rcrl
mov
sbb
loop
in
jb
sahf
imul
test
std
pop
mov
icebp
push
push
xchg
subl
xchg
sub
loop
cmpsb
inc
jle
sub
pusha
sti
dec
jno
das
cmp
movsl
mov
fsub
stos
add
jae
or
lahf
xor
inc
inc
and
dec
cmp
inc
loop
ds
movsb
push
dec
clc
xorb
loope
push
imul
sbb
lcall
inc
push
subl
lds
outsl
sar
mov
hlt
insl
movsb
aas
adc
cmpsb
ret
iret
negl
xor
addr16
arpl
fucomi
inc
popa
xlat
sub
mov
cmp
fnstsw
clc
dec
shlb
pop
add
test
imul
or
mov
xor
cmp
sbb
xlat
cmpsb
jmp
cmp
in
out
push
out
adc
push
or
outsl
ret
xchg
movsl
sbb
mov
shl
aaa
adcb
add
mov
cltd
sbb
sbb
rcrb
roll
cmpsl
mov
ret
push
xor
mov
lcall
repz
mov
shll
call
pop
xor
push
mov
jge
or
cmpsb
mov
std
lret
mov
insb
and
sti
ret
out
xchg
or
je
jbe
push
pusha
addr16
outsb
fwait
jno
stos
ljmp
iret
incl
stos
ficomps
adcb
mov
fbld
aaa
mov
add
adc
inc
push
jl
std
xchg
vpunpcklqdq
xchg
mov
int3
cs
mov
jnp
sub
mov
stc
movb
xor
lods
in
jge
and
xlat
sbb
mov
xlat
popf
sar
icebp
dec
xchg
shl
xor
add
or
leave
mov
push
mov
stc
shrl
rorl
xorl
sbb
jle
fsub
inc
and
gs
ret
xchg
xchg
cltd
leave
adc
ror
mov
ret
sbb
cwtl
jne
test
lods
popl
mov
add
mov
cmp
jmp
es
lahf
fisubl
clc
pop
rolb
pusha
mov
mov
rorl
loop
lret
push
add
test
xchg
and
or
clc
add
pop
mov
aam
mov
movsl
pop
lret
mov
xlat
lret
add
pop
stos
lea
pop
pop
mov
movsl
repz
fwait
lret
inc
sub
mov
gs
adc
fisttpll
shr
jp
sbb
sbbb
arpl
fwait
jbe
cmp
push
push
push
cmp
cmp
out
out
push
insl
or
cwtl
ss
call
or
jne
mov
or
lret
sbb
test
out
cwtl
ds
jno
lea
or
es
lret
addr16
pop
pop
mull
mov
dec
mov
fwait
stos
inc
in
jae
in
pop
mov
xor
sub
adc
xchg
test
pusha
dec
into
or
in
inc
mov
insl
daa
cmc
shrl
xchg
xchg
push
mov
inc
ljmp
mov
or
int3
pop
mov
add
ret
js
xor
mov
sub
dec
je
mov
push
sahf
movsb
push
adc
mov
sub
data16
rcrb
jae
add
fwait
lds
mov
inc
xchg
call
xchg
ror
clc
add
cmp
pusha
push
out
xor
push
repnz
packsswb
iret
push
and
xor
cmpl
loop
push
sub
mov
lret
mov
stos
repnz
or
and
pop
aam
adcb
es
shll
stos
pop
pop
arpl
jl
mov
cs
pushf
not
mov
sbb
jmp
dec
push
ljmp
dec
cld
and
inc
push
fucomip
popa
das
add
jnp
call
add
xlat
loop
and
shll
dec
popa
mov
mov
mov
ret
ficompl
lret
cmp
scas
ja
les
gs
aaa
aaa
mov
loop
out
cmp
sbb
inc
fcmovu
mov
xchg
mov
dec
or
push
out
xchg
pop
sub
insb
scas
push
movsl
mov
sbb
fs
popa
dec
or
and
dec
cld
mov
fnsave
cmp
cli
dec
fldt
in
dec
dec
dec
push
mov
push
inc
and
orb
nop
fsts
into
fwait
les
loopne
and
dec
aad
mov
pop
adc
jl
mov
ja
shlb
movsb
inc
cmpl
xlat
das
and
push
movzwl
xchg
mov
add
icebp
outsb
cmc
add
aas
lahf
mov
xchg
and
xor
sbb
out
xor
std
ss
lods
jp
mov
fsub
pop
xor
stos
inc
int3
pop
push
cmp
fbld
popf
push
jae
xchg
cmp
js
repnz
int
ljmp
out
push
lods
jecxz
xchg
icebp
mov
xchg
mov
sbb
push
jnp
mov
aam
daa
push
imul
pusha
test
out
adc
shll
mov
xchg
stos
imul
in
mov
dec
jo
cli
dec
ffree
test
bound
incb
cmp
cs
hlt
fsubrs
xor
out
dec
xchg
inc
xchg
dec
and
jb
inc
and
dec
sbb
fadd
lcall
test
sbb
dec
cmpl
jne
push
icebp
ds
dec
popf
mov
in
mov
ret
iret
repnz
cltd
jnp
jo
ret
rclb
pusha
rcl
jmp
fldl
sbbb
lea
push
xchg
push
mov
xor
cmpsl
ds
push
ret
jno
pushf
adc
mov
enter
test
popf
pop
adc
ficoms
das
jne
lods
lret
adc
lret
pop
clc
pop
pop
in
popf
lahf
xchg
loop
rcr
fwait
icebp
mov
scas
push
xlat
out
adc
cltd
lods
pop
mov
jne
aam
inc
cs
cmp
jo
ret
popa
bound
scas
lds
cmc
xlat
aam
ret
int
cld
pop
and
xor
outsb
mov
lods
dec
sbb
scas
cmp
dec
cmc
je
mov
adc
mov
hlt
xor
dec
xchg
out
add
hlt
call
das
pop
loopne
sub
xchg
fstps
inc
scas
pop
mov
test
pusha
popa
loope
fwait
adc
cmp
mov
sub
xor
mov
sub
or
mov
push
addr16
shll
icebp
fmuls
dec
icebp
and
mov
les
cwtl
xchg
adc
or
or
pop
clc
pop
loop
mov
push
mov
shll
ja
dec
inc
lds
cltd
inc
enter
test
and
jmp
movsl
loope
clc
push
movsb
mov
push
cmp
movsl
fwait
xchg
push
lea
les
out
push
popf
test
or
xor
xchg
mov
fdivs
js
sub
dec
dec
jl
insb
and
cmpsb
sbb
arpl
inc
inc
sqrtps
mov
add
mov
mov
dec
in
shlb
shrl
jns
add
mov
icebp
xchg
daa
or
sbb
ficoml
mov
sbb
jae
dec
sbb
lods
js
mov
arpl
or
out
test
xchg
test
add
mov
inc
add
push
pop
cmp
jecxz
test
xchg
pop
and
sub
jns
lock
pop
ljmp
pop
lahf
loop
pop
loope
push
inc
lret
fadds
sbb
inc
adcb
xor
mov
test
test
pop
lret
and
xlat
adcl
test
dec
add
push
lds
insl
and
or
es
fs
inc
je
fwait
sbb
je
mov
lds
push
fdivl
scas
push
xor
cmp
or
shlb
out
in
fldln2
cmp
xor
sbb
fcmovnbe
sub
movsb
push
les
cmc
and
or
push
add
in
xor
add
sti
add
mov
jg
mov
ja
cmp
push
mov
out
pop
fnsave
inc
gs
pop
mov
or
dec
outsl
mov
add
xchg
stos
jmp
into
test
xor
mov
jb
test
imul
add
data16
pop
filds
je
stc
out
sub
add
dec
adc
cs
pop
adc
mov
sbb
lods
scas
pop
je
sbb
je
xor
mov
inc
cwtl
enter
push
cmp
lcall
adc
out
pop
mov
cmp
das
loopne
mov
js
dec
shll
mov
dec
mov
lds
adc
sub
stos
leave
ror
add
mov
mov
mov
inc
and
scas
ror
cmp
mov
jae
xor
inc
add
xor
scas
mov
pop
mov
or
xor
cs
inc
arpl
inc
sti
mov
adc
ficoms
ja
jle
lcall
cmc
movsl
dec
add
arpl
daa
dec
rcr
add
sbb
sbb
jecxz
aam
cwtl
or
es
fstl
adc
mov
js
add
das
icebp
popa
push
push
add
sbb
ret
testl
ljmp
mov
ss
or
push
cli
add
xor
lcall
xchg
popf
and
popa
or
mov
fldl
sub
nop
lcall
enter
test
push
je
stos
cwtl
jbe
cwtl
cmp
push
mov
dec
inc
out
ret
pop
test
jecxz,pt
andb
mov
out
jle
mov
ja
cs
or
mov
outsl
mov
push
push
scas
clc
jp
sbb
mov
adc
push
clc
and
sub
push
push
push
inc
imul
loop
lahf
loop
jae
sbb
jmp
mov
in
movsl
xor
mov
sbb
jno
dec
xor
push
mov
inc
jmp
xchg
or
ficoml
inc
stos
jne
aad
scas
fneni(8087
test
jl
or
js
push
xor
lea
push
mov
lock
or
add
movsb
stos
int
test
pop
addb
popa
jecxz
push
mov
push
fcom
push
or
mov
push
fnstcw
rol
push
shll
pop
hlt
jmp
test
lahf
mov
add
daa
mov
push
push
addr16
aas
sbbl
inc
insl
pop
dec
pop
push
xor
jae
xchg
movd
clc
mov
xchg
push
or
lcall
mov
jb
adc
and
divl
ret
movsb
and
addl
pushf
jp
out
insb
popf
push
inc
pop
mov
ljmp
xor
dec
add
scas
inc
ja
jge
es
out
lods
imul
mov
cmpsb
popa
sti
jno
jmp
adc
inc
pop
and
sbb
mov
lock
arpl
xlat
push
xchg
jns
mov
imul
or
mov
insb
fwait
and
cmpsl
ret
in
insl
into
pop
loop
pushf
xchg
aad
ljmp
and
gs
jle
call
jb
lock
imul
clc
dec
std
enter
jns
andb
es
call
jge
mull
jp
inc
repz
xor
inc
push
lcall
ljmp
dec
dec
lds
mov
std
jg
sub
mov
add
outsb
xchg
fsubrs
dec
jle
pop
and
pushf
addr16
and
push
std
inc
sub
cmp
lea
pop
bnd
and
pop
ja
jae
adc
call
xlat
cmpsb
sub
add
test
nop
push
orl
sbb
push
icebp
or
shll
mov
xor
and
lock
test
xor
jnp
gs
rclb
mov
outsl
stc
jg
mov
lds
out
and
fisubs
jmp
jo
cmpsb
ljmp
in
push
adc
and
push
adc
pop
scas
addr16
decl
mov
push
je
sar
and
ret
jnp
out
mov
adc
jp
mov
mov
cmpsb
ss
out
shl
sub
ficoml
lahf
cli
hlt
xchg
and
mov
js
or
mov
add
arpl
xorb
xchg
push
into
sub
add
into
inc
imul
dec
bound
sub
test
mov
xchg
push
andb
out
xchg
insb
into
stos
inc
ds
mov
xor
cs
pop
jb
test
repnz
and
inc
and
add
das
scas
cld
cs
roll
cmp
sbb
xchg
insl
mov
dec
mov
ret
fs
add
jmp
jb
jg
cmc
clc
xchg
lcall
idivl
fstpl
and
push
dec
push
mov
daa
mov
les
out
add
mov
cmp
movsl
push
push
sbb
jb
pop
mov
sub
stos
xlat
in
arpl
in
add
mov
fs
pushf
mov
xlat
xlat
jnp
testl
or
lahf
jo
movsb
js
mov
adc
xor
mov
pop
shlb
xchg
jb
xchg
jo
ja
shlb
or
sbb
push
mov
popa
mov
sub
or
cmp
rcll
sub
test
jo
data16
jnp
push
in
scas
test
mov
pop
xor
mov
pop
mov
cmp
push
mov
xor
shl
mov
mov
test
mov
adc
and
lea
shrb
imull
icebp
mov
test
in
adc
in
adc
cwtl
jno
fcoml
mov
add
mov
adc
call
mov
adc
imul
lret
xchg
stos
daa
test
sbb
lock
inc
int3
inc
fwait
push
adc
lret
xor
cmp
add
xor
ret
int3
sub
xlat
cltd
mov
xchg
dec
xchg
and
jmp
ja
js
jle
or
fldcw
mov
cltd
scas
out
jmp
jns
xchg
adc
jl
enter
cmc
lcall
cld
sti
test
pusha
imul
jmp
mov
mov
cmpsb
test
iret
jmp
mov
or
dec
lods
add
cmp
addb
inc
cmpsl
gs
fdivs
adc
jbe
cli
call
jae
inc
pusha
lods
insl
rcrl
inc
imul
push
xchg
jecxz
inc
mov
inc
scas
and
rolb
pop
js
mov
inc
out
stc
stos
sbb
mov
lock
loop
les
push
cmp
das
adc
push
dec
mov
and
cld
sbb
cmpsb
xchg
mov
cmp
ret
mov
dec
js
xchg
aaa
into
fdivr
stos
sub
cmc
or
ficompl
sub
xchg
fbstp
fisttpl
adc
xor
ror
add
sahf
add
aad
das
fldcw
jg
loop
pushf
subl
inc
pop
xchg
xlat
sub
add
and
mov
adc
imul
cwtl
scas
ftst
push
addr16
out
pop
out
pushf
mov
cs
daa
stc
shld
mov
int3
imul
mov
add
rclb
mov
jge
or
mov
sub
jg
js
fstpl
pop
aas
pop
sbb
inc
sarb
jmp
lds
rcrl
insb
fsubs
adc
lcall
push
pop
imul
jo
inc
mov
add
inc
sbb
movsl
and
fbld
sub
and
std
xchg
mov
dec
fcoml
icebp
mov
aas
stos
fildll
inc
jle
test
inc
sub
mov
psubb
dec
in
push
mov
hlt
fbstp
adc
mov
adc
outsl
fistps
xchg
pop
pop
ljmp
mov
pusha
dec
stc
and
loop
testb
imul
jge
mov
sbb
inc
inc
mov
mov
mov
mov
insb
mov
mov
cwtl
jle
xlat
lret
int3
loopne
inc
push
in
jns
nop
xchg
inc
iret
movsb
iret
sbb
dec
push
fstl
mov
inc
jecxz
mov
loope
xor
aas
adc
mov
pushf
mov
lds
pop
dec
testl
ss
adc
das
sbb
fwait
adc
pop
in
mov
mov
push
jo
jne
arpl
push
setne
adc
out
xchg
enter
scas
pop
sarl
and
and
outsb
pop
mov
inc
sarb
cmp
cs
dec
adc
sahf
stc
push
jp
das
dec
cmpsl
jns
mov
push
imul
pop
sub
cmp
insb
scas
jne
jle
jno
repz
pop
mov
in
daa
cmp
rol
xchg
scas
push
lods
cmp
testl
into
outsl
dec
and
jl
mov
inc
loope
call
xchg
mov
pushf
mov
imul
cld
movsl
mov
aas
mov
inc
mov
stc
mov
scas
in
mov
test
insl
jno
std
dec
mov
arpl
fisubrs
in
inc
mov
sub
jno
add
or
mov
ror
roll
rcll
pusha
insl
inc
inc
outsl
sbb
iret
pcmpeqw
arpl
adc
push
fsin
scas
jo
xorb
sub
inc
dec
xlat
lods
jae
cmp
jp
mov
xchg
sbb
dec
sti
insb
pop
xchg
sub
pusha
loope
dec
mov
out
add
popa
jb
add
adc
rolb
aam
lods
dec
or
cmp
cmp
popa
adc
lahf
mov
mov
sbb
sub
insl
and
test
sub
in
into
cwtl
push
test
aad
jmp
sahf
push
cmp
cmp
dec
lret
and
xor
xchg
sbb
out
adc
push
cmpsb
pop
dec
in
push
lods
out
xor
sub
movsl
idivl
dec
mov
push
movsl
adc
pop
mov
mov
dec
mov
jp
push
jb
loope
stos
dec
cs
xor
xchg
shlb
sub
fists
xor
fsubl
cmp
dec
mov
pop
out
xchg
mov
aaa
mov
sbb
mov
ja
pop
or
mov
mov
pop
sub
adc
mov
mov
add
nop
jmp
ret
add
adc
add
push
aaa
lds
push
test
in
and
inc
out
sbb
mov
idivb
pop
fsub
jg
add
adc
pop
or
scas
add
das
xchg
xor
xchg
or
sbb
dec
test
jbe
xor
sahf
outsl
or
and
sub
lret
adc
lcall
rorb
dec
and
js
lcall
inc
cmp
daa
xchg
mov
mov
pop
fmull
xlat
ror
lds
mov
xchg
mov
adc
sahf
sbb
ss
popl
mov
xchg
and
xchg
imul
outsl
movsl
into
cs
movsb
cs
aad
repz
dec
aad
cmp
pop
outsl
data16
push
stc
push
dec
shlb
dec
fs
and
lar
les
lahf
lcall
in
pushf
pop
clc
cmpsb
data16
mov
mov
xchg
loope
xorl
pop
mov
cmpsl
fwait
out
std
mov
dec
gs
lods
push
js
adc
jge
int3
ds
xor
rclb
cmpb
ret
cmp
mulb
clc
inc
and
jae
push
mov
jne
popa
repnz
mov
sub
or
aaa
sub
loopne
push
add
pop
push
pop
push
jl
inc
add
jbe
sub
pop
xchg
mov
iret
inc
inc
pop
adc
movsb
test
mov
xchg
shrb
add
push
push
ljmp
jecxz
lahf
mov
cmp
dec
lret
ret
addr16
nop
inc
iret
dec
pop
jmp
idivb
pop
push
lcall
dec
scas
xchg
rol
cwtl
inc
push
ss
dec
test
push
es
push
insb
es
cld
mov
xor
pop
sub
imul
addr16
cmp
mov
push
pop
pop
pop
push
xor
xchg
and
push
inc
shrl
sbb
mov
cmc
sub
xchg
or
inc
movsl
movsl
shrl
fdivs
xor
les
gs
push
mov
sub
jg
mov
out
jp
repz
es
sub
fcmovnbe
push
aam
mov
addr16
enter
push
adc
mov
arpl
fisubrl
or
mov
pop
cs
lret
mov
dec
je
jl
into
xor
imul
lcall
xchg
sbb
fimuls
fiaddl
fldenvs
mov
sub
inc
push
cmp
stc
adc
mov
insb
aam
imul
outsl
dec
jae
imul
imulb
cmc
mov
add
shl
data16
sub
jo
out
push
cmp
mov
jns
stos
gs
popf
sub
inc
jmp
leave
in
and
push
fnstenv
and
repz
inc
and
mov
fistps
rcpps
xor
or
adcl
ffree
clc
shrl
cwtl
int3
sbb
ss
imul
lcall
cld
push
sti
fisubl
add
imul
sub
fdivrs
pop
sub
ja
adc
scas
sbb
jmp
dec
mov
and
outsl
shll
ret
pop
clc
jne
push
jo
jbe
mov
mov
jmp
mov
pop
fwait
mov
sbb
imull
popf
dec
and
clc
loope
cld
cmpsb
xorl
xlat
push
xchg
pop
les
lahf
inc
pop
dec
fidivrl
test
ds
int3
adc
or
mov
add
repz
push
cld
and
mov
pop
add
ret
outsl
lock
cld
test
cwtl
dec
aas
cmpsl
loop
lods
fdivrp
mov
pop
daa
fists
stos
scas
dec
popa
loop
inc
addr16
sub
clc
out
cmp
adc
nop
mov
and
jle
lods
je
lods
jecxz
or
inc
shl
addb
cli
dec
cmp
sub
cmp
inc
sbb
je
ja
out
adc
add
dec
push
lods
pop
sbb
jbe
jb
arpl
mov
add
into
decl
sub
mov
js
xor
mov
int
test
dec
bnd
jo
xor
lret
mov
out
mov
mov
fdivr
inc
adc
adc
push
adc
test
iret
sahf
pop
pop
inc
cs
ss
mov
push
xchg
cmp
and
insb
jae
mov
mov
sbbb
mov
adc
lods
inc
pop
mov
pusha
mov
imul
fdivr
jge
jmp
push
inc
aas
movsl
or
pop
sub
movsl
sbb
out
xchg
jne
outsl
out
sbb
jecxz
mov
xchg
decb
ds
mov
pop
pop
add
lods
jg
bound
or
movsl
or
mov
and
stos
jl
sub
mov
test
jno
mov
inc
dec
pop
pop
mov
sti
mov
scas
arpl
xchg
stos
dec
ret
dec
and
xchg
outsl
sbb
jns
add
or
add
shlb
pop
fldcw
push
push
mov
negl
cmc
inc
pop
addb
and
leave
mov
sub
daa
scas
hlt
mov
push
add
sub
jbe
outsb
gs
add
mov
add
neg
sbb
add
sub
jb
jmp
test
cwtl
add
fdivrl
add
idivb
mov
inc
mov
popa
test
andl
lea
ljmp
dec
movsb
mov
dec
cs
mov
outsb
dec
stc
sbb
call
pop
dec
mov
test
cmp
fidivrs
fidivs
scas
fidivrs
and
sbb
hlt
push
pop
fwait
mov
insl
jne
shl
testb
jnp
movsl
imul
push
xor
clc
aad
out
ja
rsqrtps
mulb
movsb
push
push
xchg
jl
xchg
add
ljmp
jp
imul
xchg
shrb
xadd
add
jl
jp
xchg
pop
mov
pop
mov
sbb
cmp
jmp
fsubl
stc
jne
das
sub
in
fdivr
clc
sbb
mov
inc
dec
xor
add
add
in
loope
gs
cmp
insb
xchg
cli
xor
and
rorb
dec
xor
mov
ja
out
outsl
dec
mov
sahf
and
sub
jnp
sahf
lods
cmpsl
imul
sub
js
push
les
sub
pop
shlb
mov
cmc
test
sbb
mov
test
mov
adc
cmp
aaa
gs
jle
stos
inc
and
mov
gs
cmc
mov
scas
adc
outsb
pop
jl
test
stos
dec
push
inc
push
iret
shrb
fs
shll
xchg
icebp
pop
pushf
sbb
popa
push
cltd
xorb
fistpll
outsl
mov
call
bts
xor
outsl
lods
insl
les
pop
and
repz
mov
or
call
test
divl
adc
lahf
cmpl
mov
std
push
mov
repz
or
inc
sub
xchg
sbb
rorl
pop
sti
cwtl
jg
jne
or
mov
inc
ds
xchg
mov
pop
push
dec
jge
test
sub
fstpl
pop
shlb
gs
sbb
mov
push
push
or
sub
sbb
add
mov
mov
jg
sbb
stc
movsb
stos
add
addr16
jne
les
lock
pop
cmpsl
iret
rcr
mov
scas
cmp
mov
clc
cmc
mov
ret
inc
btc
leave
dec
jb
push
pop
cltd
mov
adc
pop
rorl
jecxz
push
add
mov
jp
jb
lods
lods
mov
sub
test
ljmp
pop
mov
dec
xchg
adcl
loop
bound
cld
stc
sbb
lcall
mov
cmp
pop
adc
xchg
std
push
loopne
mov
enter
xlat
adc
movsb
dec
dec
mov
jle
cmp
in
aad
nop
repnz
or
xchg
je
jp
mov
dec
mov
cmp
stc
xchg
cltd
xchg
xor
xchg
stos
xchg
mov
mov
hlt
cld
sub
lds
and
leave
and
cmp
sub
lret
lock
inc
xchg
hlt
push
in
sbb
leave
push
fwait
ja
clc
and
add
ljmp
xchg
insl
je
iret
dec
jne
xorl
cmp
pop
mov
pusha
negb
or
cmp
lea
stos
fs
push
push
adc
movsl
jg
cmpsb
jns
inc
xor
sub
stos
imul
pop
xor
mov
lahf
arpl
or
int
xor
sbbl
sub
jle
scas
xchg
pop
jb
gs
mov
les
lea
imul
iret
in
jne
cltd
xorl
xlat
repz
jl
test
add
sbb
sbb
dec
mov
daa
out
sub
inc
cli
iret
daa
fildl
clc
mov
mov
push
or
int3
lcall
jbe
sbb
loopne
lea
sub
and
and
inc
jmp
mov
pop
adc
pop
adc
add
and
data16
imul
mov
clc
sbb
in
pop
cmp
xor
leave
sub
dec
add
cmp
push
stc
dec
fs
in
xor
add
mov
add
xchg
je
cltd
lds
scas
imul
push
ret
imul
xchg
imul
fs
xchg
shrl
out
stos
inc
push
fmuls
adc
xor
or
lcall
lea
mov
stc
lret
repnz
scas
cmpsl
ret
ds
pop
mov
repz
xor
push
and
aas
out
mov
push
jne
lea
and
sbb
xor
test
push
xchg
test
ds
jp
das
jmp
popf
mov
test
cmp
out
mov
jge
inc
jno
cld
iret
lds
xchg
xchg
lods
movsb
shld
pop
xchg
push
sub
pop
dec
fwait
loop
mov
pop
inc
sbb
mov
cmp
in
lcall
jp
mov
mov
lret
xchg
fistps
inc
rcl
outsb
aaa
ja
sbb
and
shl
mov
je
sub
sub
xor
dec
jg
pop
out
adc
dec
xchg
jmp
cmp
jbe
lret
fs
gs
fwait
dec
jg
push
mov
push
nop
loopne
scas
add
push
fcmovbe
cmp
imulb
sahf
add
test
sbb
test
and
jne
movsb
adc
and
arpl
fs
mov
int
pop
leave
cmp
xchg
sub
cmp
out
test
das
mov
out
cs
mov
lods
pop
fs
fucompp
mov
xchg
fcmovbe
pop
or
sbb
test
add
sub
into
cwtl
stc
repnz
ljmp
xlat
push
dec
fmull
es
pusha
in
out
lock
ljmp
sti
push
in
mov
jecxz
lea
pop
push
or
mov
mov
cmp
mov
data16
mov
and
xchg
lea
sub
ds
sahf
xchg
fiadds
insl
mov
xchg
fidivs
xchg
popf
push
fisttps
xor
lahf
cmp
xlat
mov
pop
mov
jecxz
mov
dec
add
jmp
addr16
ja
jge
sbb
adc
inc
and
xor
sahf
jno
mov
scas
fidivrl
lret
sti
xlat
cmp
js
sub
movsb
subl
fistl
inc
fcmovb
clc
divl
lds
jo
and
enter
ds
cmp
dec
fucom
xchg
loope
jno
mov
mov
bnd
pextrw
xchg
and
xor
add
mov
ss
cmp
fld
push
mov
bound
insb
push
jne
sub
and
aam
cmp
cmp
xlat
inc
sarb
jmp
xor
stos
in
lods
jnp
aad
sub
fadds
adc
aam
out
pop
cmp
xchg
dec
call
arpl
or
xor
stos
mov
mov
jmp
fincstp
pop
pushf
dec
nop
ret
sbb
in
mov
pushf
sub
ret
cli
mov
mov
pushf
pop
arpl
inc
xor
test
xor
add
out
enter
mov
lahf
push
push
je
popa
icebp
mul
ja
xchg
jg
lret
int
dec
adc
leave
mov
ja
xor
inc
jne
push
mov
inc
adc
ror
xchg
or
sub
arpl
xor
xchg
push
mov
add
rcll
inc
mov
add
push
mov
mov
jp
push
push
insl
and
xorl
dec
js
outsl
jle
lods
iret
mov
inc
sbb
adc
lds
cld
dec
push
or
jp
hlt
dec
dec
hlt
xchg
out
lret
mov
push
push
movl
cmpsb
aas
data16
aaa
idiv
movsl
test
add
rcrb
sub
nop
adc
negl
lods
mov
repz
test
push
cmp
jne
mov
lods
or
mov
cmp
test
mov
rcll
push
pop
flds
lahf
jmp
push
aas
or
cli
inc
cmp
lock
aam
dec
xchg
mov
fbld
loope
aas
jns
aam
lret
push
sbb
fisttps
lods
out
mov
out
in
push
push
xchg
leave
pop
and
inc
rorl
dec
inc
cmp
clc
mov
xor
or
leave
sbb
inc
mov
in
loopne
lods
mov
aad
pop
adc
imul
sub
sub
add
mov
xchg
push
inc
into
mov
or
cmp
sub
push
lods
xchg
pop
mov
in
pop
fmull
sbb
mov
out
psadbw
or
out
xor
adc
stos
fdivl
pop
mov
dec
hlt
adc
lahf
into
int
push
std
popa
mov
ss
sbb
jne
pop
shrb
xchg
sub
aad
cmp
adc
push
pop
out
pop
in
test
orb
int3
inc
push
test
mov
repnz
or
jge
cld
in
pop
mov
popf
dec
push
pop
sbb
inc
xchg
push
push
pushf
leave
rorb
insl
xchg
out
aad
lcall
shl
test
mov
imul
ficomps
push
add
jbe
jbe
jecxz
stos
arpl
cltd
inc
gs
jmp
mov
mov
cltd
bound
paddq
mov
bnd
sahf
mov
xor
and
xchg
pop
mov
aaa
mov
enter
dec
int3
mov
and
bnd
add
es
cld
sub
dec
sarb
loop
mov
inc
imul
je
add
sahf
or
sub
outsl
pop
jnp
addr16
adc
xor
stos
fs
rcrb
cmp
addr16
dec
mov
mulb
push
lret
mov
inc
pop
rclb
fwait
cmp
jge
idivl
stos
jmp
aam
jb
aas
popa
xchg
inc
push
ss
and
movsb
jne
and
cmpsb
jge
mov
pop
cli
sub
mov
xor
jmp
pusha
mov
jp
mov
fwait
dec
and
inc
std
insb
cld
in
jle
mov
xor
outsl
jbe
mov
imul
sub
imul
adc
stc
push
outsb
or
mov
mov
and
pop
aam
xlat
xchg
mov
push
cltd
jb
push
push
outsb
repnz
and
or
add
and
ljmp
sbb
test
inc
inc
add
adc
jnp
ja
ja
nop
gs
or
imul
aad
and
jl
out
aad
iret
cmc
and
test
lea
mov
fiaddl
ret
jecxz
lcall
push
push
or
push
lods
cmpsb
pop
aam
ljmp
mov
js
gs
inc
dec
fsubrl
xchg
lea
jp
mov
js
out
popf
das
or
les
cmp
pop
dec
stc
or
imul
add
fimull
stos
sub
cmpsb
xor
mov
out
jb
add
fiadds
mov
pop
or
mov
fistl
mov
mov
movsb
mov
subl
xor
sbb
dec
cld
in
andl
test
fcmovbe
cwtl
jecxz
xchg
ficomps
stos
loop
or
test
cs
sub
adc
leave
out
and
jbe
jo
xchg
orl
movsl
xchg
cmpsl
push
clc
adc
or
push
mov
aam
arpl
pop
and
jns
sub
add
xor
mov
in
sub
sbb
push
adc
daa
jecxz
inc
out
mov
cld
cli
inc
fistps
sbb
lcall
pop
cmc
or
or
mov
imulb
out
push
push
aas
xchg
xchg
sub
cmp
dec
mov
lret
ds
movsb
daa
lds
xor
cltd
mov
mov
push
push
jns
insl
gs
sti
test
je
sarl
push
adc
lret
xor
clc
test
inc
sti
jbe
in
jmp
inc
xor
fnstsw
xchg
pop
outsb
sbb
mov
adc
xchg
mov
mov
push
lcall
stos
dec
jb
mov
popf
mov
orb
movsl
inc
insb
mov
out
std
out
add
fiaddl
sub
xchg
sub
fwait
and
shl
inc
push
push
push
flds
pop
in
mov
mov
ljmp
cmp
xchg
out
dec
sti
push
xchg
shrl
add
mov
stos
clc
and
outsb
cs
cli
xor
lock
pop
inc
xchg
fadd
sahf
shll
mov
sbb
es
mov
insl
shll
push
dec
inc
arpl
mov
xor
mull
mov
jg
shll
lods
call
inc
or
dec
inc
cmp
and
or
push
inc
mov
adc
xlat
push
pusha
inc
mov
add
test
subb
sbb
sti
sahf
rcrb
fstl
icebp
push
imul
cmp
scas
push
fdivl
jb
xchg
pop
push
aam
mov
in
mov
mov
pop
aaa
into
mov
pop
sbb
int
cltd
xchg
insb
add
xor
idivb
bound
int3
loopne
out
push
enter
movsb
fcomi
sarl
icebp
arpl
rcl
cmp
cmp
js
movsl
push
add
pop
or
pop
lods
cmp
and
jge
insb
daa
lods
and
and
jo
xor
xchg
sub
bound
fs
dec
jb
lret
out
sbb
ret
sub
imul
out
test
jo
cmp
loop
filds
popf
cmp
rcll
sbb
loopne
call
push
mov
cltd
jae
int
jg
cmp
popa
sub
mov
or
cmp
inc
loopne
sub
xlat
fs
aam
stos
jno
jle
inc
fdivl
and
mov
xor
lret
mov
out
push
add
pop
mov
and
fildll
pop
test
xchg
scas
xchg
and
cs
insl
add
test
sbb
xor
jno
outsb
pop
and
sub
fs
mov
mov
pushf
jge
mov
add
lret
gs
lahf
stos
fs
xchg
stc
sbb
xor
pusha
testb
ja
insb
popf
add
mov
fs
ds
dec
jp,pt
add
jle
add
loope
dec
popa
and
std
outsl
jno
ljmp
cmovle
mov
sbb
pop
mov
lods
das
dec
out
int
lret
push
test
jns
inc
cwtl
mov
loopne
lods
jge
cmp
inc
xor
test
xrelease
sub
mov
add
inc
xor
shl
test
movsb
scas
sahf
movsb
arpl
ljmp
stc
push
jno
add
cmpsb
test
jno
xchg
mov
cmp
cmp
pop
shll
inc
push
inc
add
stc
ljmp
cld
ret
mov
imul
testl
mov
lds
das
xor
ret
or
cld
mov
lods
outsb
fidivs
vminpd
sarl
inc
or
data16
xchg
jge
divb
js
fs
insb
cmc
fildll
out
xchg
mov
lcall
in
pop
pop
stc
xchg
sub
mov
mov
add
idiv
inc
mov
sbb
push
or
loopne
mulb
fldcw
loope
imulb
inc
and
outsl
adc
push
add
movsl
or
out
mov
enter
sbb
mov
mov
mov
enter
lret
mov
mov
lods
sub
fwait
and
xchg
mov
xor
lods
fadds
andb
hlt
sbbl
mov
fwait
dec
or
mov
jmp
out
fs
test
ret
ret
ds
inc
add
shl
stos
in
jecxz
jae
hlt
inc
fmul
iret
insl
lcall
mulps
push
jp
inc
js
cmp
shrl
cmp
sub
cmpsl
aas
xor
mov
push
orl
adc
push
sub
jg
ficoml
mov
xlat
xchg
xor
xchg
out
or
inc
cmp
arpl
imul
gs
jge
dec
testb
inc
cmpl
hlt
repnz
cltd
mov
fwait
adc
in
ljmp
mov
sbb
xchg
adc
lock
mov
iret
lods
out
int3
dec
mov
sarb
ljmp
insb
xchg
inc
sub
cmp
inc
loope
add
scas
inc
ja
outsb
push
iret
aam
fisubrs
or
or
daa
fmull
push
mov
movsl
xchg
jne
mov
ljmp
leave
enter
push
rorb
call
fisubs
fwait
jne
rcrb
pop
pop
cwtl
inc
sbb
sub
sub
mov
mov
push
std
daa
push
popa
test
js
or
fadds
lods
in
xchg
call
repz
mov
jmp
scas
insl
subb
mov
aad
jmp
mov
or
xchg
stos
nop
xorb
add
sbb
pop
addr16
inc
sti
addr16
je
mov
dec
dec
ljmp
pop
or
jmp
out
repz
movsb
call
sti
xor
add
lret
mov
sub
push
jo
push
scas
popa
cld
lret
pop
mov
negb
and
aas
or
int3
mov
push
ret
mov
stos
xor
xor
ljmp
xchg
push
sub
scas
daa
leave
lahf
pop
dec
jecxz
insb
loop
popf
lea
push
cmpsb
push
cmp
inc
push
ljmp
push
or
pop
sbb
mov
jg
push
mov
fcoms
and
cld
in
dec
out
cmpsl
pop
stc
js
mov
lock
xchg
jbe
mov
repnz
ficomps
mov
lcall
cmp
xor
mov
pop
aam
mov
add
fldz
fcomi
cmp
test
mov
or
xchg
cli
jg
arpl
or
sbb
pop
mov
sbb
pop
shll
fistps
xor
push
cmpl
out
cmp
lcall
cmpsl
dec
jg
jo
loop
mov
pop
pop
cwtl
not
loope
mov
lock
push
shrb
clc
pop
adc
lea
rcrb
flds
sbb
push
aaa
sub
xchg
idivl
fldenv
add
mov
mov
push
mov
jmp
scas
in
jbe
jmp
mov
fnstsw
ljmp
jl
pop
loope
jbe
rolb
fdiv
ret
pop
icebp
push
adc
test
pop
push
loop
lods
sub
sahf
inc
cmc
pushf
out
dec
sbb
loope
leave
mov
imul
addr16
je
lods
add
dec
mov
gs
test
dec
insb
test
sub
fisubs
into
sub
data16
in
addr16
ret
xor
xor
movsl
xchg
arpl
dec
add
pop
lods
ds
xchg
and
adc
push
or
adc
push
sti
sub
dec
dec
sub
push
jae
adc
dec
and
addl
das
shl
lret
outsl
test
shlb
pop
push
outsb
jl
inc
jbe
sub
mov
imul
orb
loope
jbe
jg
mov
shll
xor
daa
cmp
pop
ss
sbb
inc
cwtl
sub
and
repz
aad
push
mov
push
push
ret
ror
rcll
pop
nop
sub
out
mov
add
adc
pop
dec
mov
aad
test
cwtl
mov
xchg
dec
cli
or
push
in
push
fwait
rorb
jns
adc
test
or
lcall
sub
aas
dec
adc
ja
js
frstor
testl
cmp
das
outsb
sbb
imul
shll
sbb
cltd
lahf
push
add
push
push
lret
aam
adc
pop
inc
jno
pop
hlt
pop
cmpsl
loope
sbb
bound
xor
push
in
add
push
pop
push
xor
pushf
jno
xor
outsl
mov
mov
xorb
cmp
mov
mov
jo
cmc
jp
das
mov
pop
stc
and
mov
hlt
xchg
movsl
xor
pushl
dec
add
movsl
mov
insb
stos
cs
adc
outsl
mov
mov
mov
cld
cmp
inc
jae
add
ds
xchg
out
sarl
out
xor
leave
bound
xchg
adc
mov
push
mov
xlat
inc
andb
lock
mov
xlat
stc
jb
sub
cwtl
mov
jo
sub
mov
dec
lcall
jle
lea
push
xchg
sbbl
leave
mov
pusha
outsl
pop
leave
xor
out
dec
scas
cld
int
ja
test
stos
fsub
ja
imul
dec
or
or
in
sub
adc
cmp
daa
adc
adc
add
fiaddl
jmp
mov
clc
fdivr
mov
xor
mov
loopne
push
fiaddl
aam
inc
imul
sbb
fsubs
int
shrb
stos
cmpsl
ret
mov
adc
orl
ja
iret
dec
repnz
add
sbb
and
add
andb
out
stos
jbe
jb
ds
cwtl
fnstenv
orl
inc
inc
push
pop
cmp
inc
lea
and
dec
test
lock
imul
add
sbb
xchg
fwait
ljmp
push
repnz
rorl
add
pop
hlt
insb
mov
pop
mov
fistpll
rcll
inc
mov
xorb
cld
insb
lds
jmp
stos
loop
add
jnp
add
fcomps
cmc
jo
mov
outsl
push
sub
lret
and
cmc
mov
or
push
sbb
test
pop
fbstp
and
jne
mov
imul
jp
lahf
jno
jecxz
scas
lods
fsubrl
mov
sub
mov
or
cmpsb
rolb
imul
mov
jmp
push
push
pop
fisttps
lds
ficomps
xor
mov
xor
or
push
pop
mov
mov
adc
mov
lret
push
sub
call
dec
and
xchg
sahf
pushf
mov
test
popf
lcall
sub
jmp
cli
sub
stc
dec
mov
push
fidivrl
lret
dec
xor
mov
mov
mov
xchg
or
inc
xchg
push
test
pop
cmp
shrl
cld
fsubrl
sarb
in
push
xchg
mov
out
js
push
pop
lds
xor
xchg
xchg
scas
and
mov
sbb
lret
push
aad
inc
adc
sub
loope
cmc
xchg
jge
lea
in
les
push
in
nop
pop
les
in
es
and
lea
imul
imul
stc
xchg
sahf
lahf
sbb
mov
cmovnp
fmuls
inc
rcll
rolb
aam
and
ror
adc
loope
xor
std
sbb
dec
dec
daa
cmpsb
aam
mov
call
jnp
lcall
lock
adc
sbb
aam
sbb
sti
mov
pop
das
lods
sbb
cmp
imul
push
or
fisttpll
divb
sub
lods
movsb
scas
mov
jo
mov
add
lret
and
xor
arpl
stos
push
lock
insl
fsubs
mov
lods
xchg
and
fldenv
les
pop
xlat
pushf
and
mov
adc
mov
or
xchg
jmp
shrb
fistps
inc
leave
adc
iret
lea
sbb
pusha
adc
das
test
pop
mov
or
pop
lret
aad
out
stos
daa
mov
jmp
fcom
lods
cli
das
xor
jb
sbb
rorl
leave
adc
add
jge
je
push
push
dec
push
bound
dec
test
aad
clc
add
stos
es
cmp
and
push
adc
fbstp
push
pusha
xchg
jl
fisttpl
insb
jno
jnp
jae
adc
out
stos
cltd
add
mov
mov
mov
pop
test
outsb
fldl
jbe
arpl
pop
cmp
jne
testl
sub
pop
xchg
pop
popa
xor
pop
and
mov
fnclex
adc
lret
jg
stos
or
adc
cs
mulb
sarb
xor
inc
cmp
leave
jo
popa
js
or
push
xchg
rorl
andb
call
sbb
pusha
das
mov
mov
pop
iret
pop
outsb
jl
in
pusha
dec
add
enter
fistl
popf
test
cmp
add
adcl
push
xchg
mov
sbb
jnp
divl
pop
adc
push
push
imul
dec
jmp
and
add
je
bound
in
xlat
add
orb
mov
orl
out
and
jae
daa
hlt
mov
mov
push
divb
pop
pop
movsl
adc
add
notb
mov
jne
aaa
out
jge
inc
cmpsb
xchg
xchg
jb
inc
stos
jae
and
mov
inc
jge
mov
dec
fnsave
je
sub
sbb
jge
mov
hlt
inc
iret
add
jp
fcompl
push
fldenv
pusha
jecxz
add
inc
cmpsl
leave
das
dec
in
sub
sub
popf
rcll
outsb
push
jb
mov
inc
subb
sahf
push
scas
push
shll
filds
pop
mov
sar
pop
icebp
fsubl
inc
popa
lea
fcompl
mov
cmp
or
pop
sub
mov
xor
xlat
leave
adcb
sub
push
cmp
mov
xor
cmpsl
je
mov
xchg
mov
jg
mov
out
xchg
xchg
or
inc
push
xchg
mov
enter
scas
jne
in
add
jb
lods
pop
add
jnp
out
push
aaa
std
pusha
jns
mov
das
rorl
push
xor
mov
mov
dec
test
push
int
arpl
sub
sahf
repz
dec
pop
daa
push
dec
dec
sbb
ficomps
cmp
sub
mov
mov
xchg
sbb
stc
sub
lock
inc
or
jp
cltd
ret
out
inc
xchg
fcompl
xor
jecxz
inc
adc
xchg
push
popa
sbb
lcall
dec
aaa
sahf
mov
jge
arpl
mov
imul
mov
jecxz
inc
pushf
mov
shll
pop
push
and
fs
pop
xor
xchg
dec
push
jae
cltd
out
jle
push
add
lcall
and
push
mov
popf
imul
imul
mov
mov
sub
mov
iret
dec
sub
test
xchg
jmp
mov
in
dec
or
stc
es
adc
mov
jle
mov
cmp
xchg
mov
mov
jbe
xchg
fstpl
shl
inc
jne
lds
xchg
fcmovu
push
dec
mov
stos
cmp
pusha
jecxz
pop
call
adc
sti
inc
lods
dec
mov
jne
jp
push
jl
outsb
and
sti
ss
cld
or
ss
orb
sti
stc
push
lods
push
dec
mov
push
mov
data16
lahf
dec
sbb
jne
sub
jl
add
data16
pop
shr
pop
loopne
stc
mov
imulb
scas
lea
cld
add
push
add
lahf
dec
ret
push
enter
testb
inc
cmp
pop
in
sub
ljmp
adc
addr16
inc
cwtl
imul
sbbb
repnz
lock
xchg
mov
ljmp
adc
push
xchg
jbe
hlt
lret
push
mov
sub
out
and
in
inc
jns
jle
stc
or
jae
dec
ds
lcall
jl
add
loope
subl
xor
sbb
dec
bound
test
aad
xorb
mov
mov
xor
loopne
dec
shrl
xor
lds
pop
pop
pop
push
arpl
dec
dec
push
cmpsl
sub
adc
xchg
xor
sub
into
je,pt
push
out
mov
xor
jnp
jge
xchg
je
fildll
mov
sub
pop
mov
push
and
in
sub
dec
add
sti
lret
repz
rorb
lock
mov
lods
or
push
and
ds
insb
add
xchg
out
loopne
rcrb
xor
mov
lds
addr16
ja
jno
sti
or
imul
mov
or
sub
sbb
lds
fnstsw
movsl
dec
or
xor
fnsave
pop
das
test
pop
push
and
jns
mov
movsb
test
clc
and
incl
or
dec
jne
sub
cmp
adc
jns
sbb
fsubr
mov
mov
popa
addps
sbb
xor
cmp
xor
xlat
outsb
sub
loope
cwtl
mov
inc
or
lods
and
out
int3
cmp
aad
testb
or
push
add
push
mov
xchg
push
cs
jmp
dec
and
js
xor
mov
cmp
fdivr
decl
sub
stos
lahf
mov
jecxz
js
inc
imul
xor
xchg
ds
ljmp
pop
dec
adc
out
in
add
scas
mov
sub
push
outsb
add
or
dec
inc
pop
fs
ss
sub
leave
dec
add
dec
pop
in
mov
cltd
pop
jns
inc
jge
xchg
mov
lods
cmp
std
mov
xlat
dec
sbb
lahf
movsl
cmp
mov
xor
push
subl
fsubl
or
in
and
and
sub
mov
jecxz
jp
inc
pop
in
pop
xchg
add
js
outsl
shll
sub
add
rorl
mov
loop
hlt
outsb
add
aas
lds
lret
add
lods
push
sbb
jl
loope
out
in
sbb
jo
push
data16
jle
cmp
loopne
push
pop
mov
orb
outsl
mov
cmpsb
xlat
clc
out
jae
adc
ficomps
dec
aad
mov
xor
lcall
mov
mov
ret
or
outsb
fmuls
sbb
mov
mov
hlt
test
add
cs
std
mov
jns
sbb
loop
pop
test
xchg
jns
dec
jbe
sbb
and
adc
cmp
jnp
jb
and
sub
in
xchg
add
cmp
fisubl
lcall
push
inc
xor
fiaddl
push
and
pop
cmpsb
rcrl
add
loope
fldt
ljmp
int3
mov
movsb
xchg
cmpsl
fwait
cltd
leave
sub
inc
inc
xor
addr16
ret
sahf
push
or
inc
insb
cmpsb
mov
and
xor
out
shrl
dec
mov
lock
or
mov
pusha
and
aad
sub
aaa
loop
vcvtss2si
loop
or
add
sbb
inc
sbb
push
pop
jne
repz
icebp
add
test
lret
jo
jmp
push
std
push
out
dec
pop
cmp
js
push
jae
fdivrs
in
clc
loop
outsl
adc
or
mov
mov
add
jnp
into
push
mov
mov
add
loope
adc
push
mov
stos
rcrb
in
pop
adc
call
xchg
push
loopne
mov
int
adc
push
push
pushf
sbb
sub
inc
jp
inc
lcall
pop
xchg
mov
jg
stos
lds
jae
jne
outsl
fwait
push
jecxz
loop
out
imul
or
sub
push
push
mov
lahf
sub
and
xchg
inc
mov
cmove
cmp
or
jnp
dec
xchg
out
mov
addr16
popa
dec
insb
lahf
pop
daa
lret
pop
xchg
or
imul
xor
pop
in
sbbb
adc
popa
inc
ret
lods
push
movsl
mov
and
sbb
pop
mov
xlat
ds
repz
inc
ds
addr16
mov
outsl
lods
mov
out
inc
test
jno
push
in
mov
fbstp
in
fstpt
xor
and
xor
sarl
arpl
mov
pop
or
sub
rcrl
adc
mov
and
add
mov
mov
rorb
pop
rcll
sbb
fdivr
lods
mov
adc
ffree
dec
ss
dec
call
arpl
fsubp
out
mov
mov
jno
cmp
push
aas
jb
and
xchg
loope
sub
jmp
popf
imul
push
shl
adc
cltd
icebp
pop
mov
outsb
dec
scas
sti
add
pop
in
mov
inc
push
inc
cmpsl
mov
mov
sub
and
dec
rcrb
mov
add
das
jo
add
fnstsw
push
xor
call
and
or
dec
je
xchg
fmul
add
xchg
imulb
cmp
and
jge
mov
mov
scas
daa
mov
cld
pop
and
xchg
idivl
jmp
mov
cld
sbb
sahf
xor
xchg
es
adcl
loop
push
dec
lods
adcl
sbb
idivl
test
cmp
popf
addr16
lods
lock
mov
mov
mov
cmpsl
or
xchg
pusha
pop
lods
out
sub
or
int3
xlat
loop
jg
jb
fistpll
cwtl
or
jbe
fdivrl
push
mov
push
das
add
js
dec
dec
cmp
dec
repz
leave
and
jp
test
cmp
in
push
fdivs
xchg
inc
out
in
icebp
sbb
lods
add
arpl
inc
fistps
popf
stc
and
outsl
loopne
call
pop
outsl
out
cmpsl
xchg
and
psubsw
pop
cmp
inc
minps
dec
mov
fcmovnbe
inc
xor
inc
popf
push
sahf
sub
xchg
repnz
repz
mov
mov
add
es
lret
movsb
cwtl
lret
jle
inc
lea
scas
cli
xchg
or
pop
stc
inc
cmp
movsl
js
sbb
ljmp
sahf
rcll
fdiv
sarb
test
popf
hlt
xor
lea
fbld
sarl
ret
cmpl
sbb
out
fldt
hlt
mul
cltd
addb
std
or
push
mov
push
sbb
push
rcll
jmp
lods
xchg
xor
pop
lods
js
push
fstpt
shll
mov
mov
and
sbb
test
ljmp
out
xchg
cmpsb
mov
in
xor
jae
outsl
jmp
xor
xor
adc
jne
mov
fiadds
pop
or
hlt
cmp
push
hlt
sub
aad
mov
adc
xor
jno
and
push
mov
inc
cmp
sbb
fwait
mov
aam
sbb
add
dec
sbb
and
aam
push
xchg
iret
shlb
jae
xchg
arpl
fldt
cltd
ret
scas
cmpl
fbld
scas
mull
dec
pop
pop
add
fcomi
xchg
or
push
sub
xchg
jmp
and
dec
jecxz
dec
push
pop
in
xacquire
lods
jmp
test
stos
in
inc
jnp
pop
mov
clc
mov
mov
xor
cld
jg
lods
cli
popf
push
pop
fldcw
cmpsb
cmp
notl
fcompl
fs
aam
incl
in
in
inc
in
ret
mul
call
aad
fcmove
cmp
cmc
pushf
xor
out
cmc
loopne
add
mov
push
ljmp
dec
dec
mov
mov
sbb
jmp
adc
ret
mov
pop
or
addr16
lods
testl
pop
adc
mov
hlt
dec
xchg
leave
mov
mov
or
adc
test
int
cld
andb
sbb
add
sahf
repz
daa
fstps
jle
adc
sub
adc
sub
adc
cmp
jecxz
lods
push
sub
mov
or
push
mov
mov
jns
sti
inc
popf
mov
movsb
mov
or
inc
mov
xchg
dec
dec
int
fcoml
and
xorl
int
push
mov
fimuls
inc
mov
cmpsb
cmp
cwtl
pop
js
mov
sub
xchg
pop
call
bound
outsl
dec
insl
and
es
cmc
ret
sbb
cmpsl
das
mov
addl
and
pop
lcall
xor
test
cmp
push
fcomp
stc
cmp
push
add
or
mov
add
mov
out
dec
jmp
iret
push
xchg
inc
cmp
mov
mov
mov
loop
and
xor
cmc
or
push
adc
js
or
pop
mov
inc
push
jecxz
aas
outsl
inc
out
lods
dec
lret
gs
sub
sarb
ret
loope
fstpt
cltd
cmp
or
loope
cs
test
lahf
xchg
lcall
ja
shl
scas
lcall
push
fildll
or
pcmpeqd
mov
pop
or
cli
nop
xchg
packssdw
sub
testb
out
bound
popf
sbb
cmpsl
sahf
sbb
and
pop
mov
inc
test
icebp
inc
xorl
cmp
cmpsl
mov
xlat
add
pop
mov
inc
push
test
push
mov
cwtl
pop
daa
adc
sbb
pushf
add
mov
inc
sbb
cltd
add
sub
xchg
xchg
aaa
ds
mov
pop
int
inc
inc
push
mov
rcll
dec
or
jle
scas
dec
ret
shlb
aaa
test
les
arpl
mov
mov
fidivrs
xor
dec
aaa
push
lock
mov
mov
xchg
loop
pop
xchg
leave
cmp
fstpl
outsl
or
mov
bound
push
icebp
fsubrs
stc
and
in
add
in
test
rcrl
arpl
cmpsl
stc
add
xlat
scas
mov
mov
std
sbb
into
sarl
les
adc
and
xor
leave
cmp
lds
iret
lea
loop
mov
scas
push
sbb
cmp
in
xchg
andb
out
pop
add
addr16
aam
enter
push
ljmp
outsb
cmp
inc
and
rcll
popa
nop
jg
insb
jmp
lock
jmp
cmpsl
or
roll
mov
scas
sub
ss
jb
jle
fdivp
sub
jecxz
fsubs
mov
ljmp
and
shll
inc
jne
ret
fists
add
dec
lret
daa
mov
jo
pop
movsb
test
adcl
test
repz
js
sub
xchg
xor
aas
inc
mov
movsb
inc
flds
or
in
dec
xchg
sahf
cmpsl
out
mov
push
arpl
dec
pop
mov
cmp
fimuls
mov
dec
out
jnp
movsb
push
ljmp
ljmp
ja
addr16
jp
push
jg
fcompl
fsubrl
dec
pop
jo
mov
mov
xor
pop
mov
shrl
nop
in
mov
mov
push
sbb
mov
jne
lret
inc
add
cli
addl
es
orl
data16
inc
insl
add
cmp
je
cmp
js
lods
mov
insb
outsl
mov
adc
pop
and
test
pop
xchg
inc
stc
push
mov
cmpl
loopne
mov
adc
push
aas
pop
mov
negb
into
xchg
popf
pop
jo
sub
out
stc
subl
pusha
ret
insb
loop
outsl
xor
sbb
pop
xchg
adc
lods
dec
int3
inc
and
out
std
clc
js
je
data16
sahf
jno
lods
cmpsl
cmp
nop
push
xchg
pop
lock
outsb
xor
jecxz
push
lds
jo
ja
out
cmpsb
scas
shll
out
mov
sbb
xor
addr16
pop
adcb
or
out
sbb
sub
imul
daa
scas
stc
dec
adc
pop
and
into
in
popf
sbb
fstl
decb
inc
es
insl
bound
movsb
in
cmpsl
sar
out
fmul
in
xchg
and
sbbl
adc
or
sub
lock
fdivrl
test
fdivrs
idivl
inc
rorl
push
adc
xchg
inc
add
xchg
xchg
push
cmp
push
mov
sarb
dec
push
mov
call
dec
mov
movsl
pushl
add
push
ret
jle
or
pop
xor
sbb
cmpsb
mov
dec
das
enter
aas
xor
adc
and
mov
push
cld
pop
pop
or
aad
out
cwtl
jbe
inc
aaa
jb
jns
xchg
xchg
cmp
movsb
inc
arpl
aas
xor
insl
xchg
pop
jne
nop
ljmp
add
add
xchg
movsb
or
add
in
js
xor
inc
outsb
leave
mov
pushf
mov
mov
dec
jne
dec
mov
xchg
jl
repnz
sbb
mov
lock
mov
mov
or
insb
cmp
mov
icebp
pop
cmp
pushf
fs
jle
jb
dec
xchg
xor
insb
mov
std
mov
out
sub
mov
push
inc
outsb
mul
ss
and
lret
fwait
pop
and
mov
nop
jle
jge
mov
loop
pop
push
ret
or
mov
mov
inc
add
aas
nop
pop
jnp
idivb
or
in
xchg
ret
xchg
jecxz
je
in
out
pop
in
pop
out
in
sbb
ss
mov
sub
rorl
ljmp
mov
test
and
xchg
out
cwtl
mov
push
jb
inc
insb
or
pop
jb
daa
and
movsb
adc
xor
cmp
xchg
mov
loope
mov
loope
push
xchg
inc
mov
or
aam
stos
int3
push
mov
popa
mov
dec
pop
sarl
xor
pop
out
pop
mov
xchg
shll
lods
inc
bound
loopne
fwait
ret
fstps
into
mov
add
popf
inc
bound
neg
and
add
mov
xchg
aad
mov
jp
insb
data16
or
adc
mov
shll
out
cmp
enter
push
enter
pop
sbb
xor
lret
arpl
adc
dec
jns
movsl
ret
xchg
mov
jge
jecxz
sti
jno
pop
add
sbb
pop
scas
movsd
mov
xor
cwtl
xor
cmp
add
or
rcrl
sarb
or
sbb
mov
push
add
mov
cwtl
adc
sub
mov
js
and
sub
aaa
xor
int3
and
test
jno
xor
jo
jg
addr16
fldl
div
aam
movsb
jecxz
sub
test
sub
stc
jmp
xor
xor
cmp
stos
mov
xchg
rcll
pushf
push
je
pop
push
inc
aaa
or
mov
arpl
dec
outsb
int3
loopne
cmp
cwtl
mov
inc
fstl
sub
pop
clc
push
cltd
loopne
xchg
scas
mov
and
cmpsl
std
cld
loopne
in
sbb
sbb
cmp
xchg
je
inc
inc
dec
repnz
lods
faddp
pop
rclb
xor
mov
scas
test
mov
mov
add
imul
stos
loop
in
repnz
lods
repnz
add
and
cmp
in
and
sub
ret
imul
sar
xchg
icebp
fadd
movl
mov
mov
xchg
pop
cmp
pop
fsubrs
pop
xor
xor
or
mov
clc
xor
aad
pop
mov
push
mov
imul
or
mov
sbb
sbb
cmp
inc
enter
mov
adc
mov
sub
mov
stc
in
xchg
mov
cmp
dec
dec
pop
dec
dec
push
cs
ss
cmp
imul
iret
xchg
into
pop
mov
add
clc
push
inc
popa
mov
jb
add
shrl
mov
scas
ret
pop
aaa
jo
xchg
cltd
push
cmpsb
jb
cld
cltd
lea
out
sti
notl
push
cwtl
lods
add
movsb
pop
mov
icebp
cwtl
mov
push
cli
lock
lods
add
enter
ret
out
sub
clc
adc
in
mov
pop
movq
gs
dec
jp
aaa
rcll
pop
xor
rol
addr16
dec
blcmsk
add
outsl
dec
in
cmpsl
pop
popf
sbb
pop
scas
mov
xchg
aad
push
aas
fcoml
out
xchg
shrb
mov
cmp
xorl
xchg
cld
or
fsubrs
ret
into
lcall
dec
dec
test
fdiv
jecxz
lds
int
jl
or
xchg
jg
xchg
cltd
adc
ja
sbb
popf
std
cmc
mov
or
pushl
popfw
sub
lods
jo
aad
cmpsb
dec
stc
or
fimull
cmp
dec
std
and
cld
aad
jl
inc
push
je
test
test
mov
in
dec
fistpl
cmc
push
sti
adc
xor
add
pop
sbb
sub
adc
std
stc
movsb
push
add
adc
repnz
sbb
jp
mov
das
jns
in
mov
dec
ret
mov
push
es
xchg
test
shrl
mov
stos
mov
lods
xor
sbb
ja
mov
inc
inc
popf
or
std
add
adc
dec
mov
and
and
outsl
pop
jns
xor
push
push
in
mov
inc
icebp
lret
test
outsl
stos
pop
fwait
jge
sbb
sbb
repnz
add
lret
add
dec
sarl
movsb
xchg
scas
sahf
and
fnstcw
xorb
mov
push
cs
and
xchg
leave
sbb
cmp
rcll
jmp
mov
outsb
stos
inc
stos
mov
sbb
data16
xchg
sbb
cmc
adc
scas
vpmacssdqh
sub
aad
jl
ljmp
sub
daa
adc
je
mov
or
fsubrl
clc
iret
int
insl
int
js
stos
fcoml
lcall
outsb
jae
jne
and
jo
add
fst
jle
insl
int3
into
mov
sub
iret
mov
mov
mov
mov
pop
leave
pop
ljmp
stos
mov
and
jnp
stos
push
push
xchg
into
pop
rol
fildl
dec
sbb
mov
mov
loopne
mov
dec
or
int
add
cmp
jl
repz
jp
jnp
or
sbb
push
enter
mov
push
sub
sub
aam
in
mov
bound
add
xor
sar
fiaddl
pop
xchg
mov
icebp
movsl
mov
test
sub
or
sub
add
pop
push
lcall
gs
sub
mov
in
cmovno
or
popa
negl
xlat
cld
jno
movsl
js
les
out
push
mov
sbb
lcall
inc
leave
jge
cmp
add
xchg
cmpsl
loop
test
call
je
mov
push
dec
ss
mov
std
movsl
mov
in
sub
and
popl
lods
enter
cwtl
out
ljmp
mov
mov
xchg
and
fisubrs
xchg
jle
cmp
gs
jmp
ljmp
outsb
mov
ret
ret
fwait
or
push
pop
xchg
les
fidivrs
xor
std
dec
sarl
movsl
xor
mull
or
sub
add
xor
bnd
movsl
outsl
and
jae
xorl
in
cld
dec
arpl
bnd
and
ja
mov
cmpsb
push
cmp
testb
das
inc
xchg
mov
inc
push
inc
or
sbb
repnz
lahf
clc
jmp
mov
push
pop
push
icebp
movsl
ret
cmc
adc
pop
scas
mov
out
push
repz
sub
mov
ret
scas
pop
pop
loope
pop
bound
xchg
dec
hlt
dec
inc
shl
movsb
push
dec
insb
jge
stc
inc
jmp
cld
sub
daa
icebp
adc
ds
data16
mov
rorb
xor
repnz
cli
out
sub
outsl
sbb
adc
pop
dec
insb
fmull
pop
pop
dec
enter
inc
test
inc
push
jge
adcl
lock
xor
jae
and
push
or
pop
dec
and
push
cld
pop
jle
pusha
pop
jo
mov
dec
cld
push
lret
sbb
or
mov
addr16
cwtl
xor
adc
adc
bound
cli
adc
or
sub
loope
sbb
add
dec
jns
arpl
aas
arpl
push
jle
mov
pop
or
sbb
out
xor
cwtl
xchg
int
push
xor
out
xchg
sub
fstp
dec
jb
xchg
pop
loop
push
adc
sahf
in
mov
inc
add
loop
sbb
cmpsb
out
dec
into
xchg
rorl
test
test
test
xlat
insb
adc
fildll
fldcw
ret
mov
push
inc
lock
inc
inc
sbb
popa
int
or
out
ret
inc
jo
out
add
push
popa
pop
rcll
les
mov
dec
xchg
in
int
cmp
lcall
sti
cmp
scas
js
sahf
xor
aam
cmp
imul
cmpsb
jae
fisubs
test
jno
cmpsl
sub
inc
out
aam
sbb
xor
shll
in
test
mov
icebp
loop
xchg
lods
sti
stos
pop
pusha
jp
fidivrl
dec
aam
out
ret
das
imul
sbb
call
movsl
xor
adc
loopne
xchg
inc
jg
add
sahf
in
fdivr
xchg
inc
jnp
test
xor
ror
xchg
mov
lcall
scas
jg
add
mov
in
out
jbe
dec
xchg
fcomps
out
std
int3
adc
int3
dec
jne
test
sbb
dec
adc
les
mov
mulb
add
mov
dec
or
inc
xchg
inc
inc
mov
addr16
arpl
pop
xor
sti
cmpsl
mov
push
jns
aam
push
jne
sub
lea
mov
pop
shrb
dec
mov
cltd
into
test
pop
jp
scas
mov
adc
adc
sub
mov
push
mulb
shrl
fbstp
sbb
mov
pushf
push
movsl
and
jae
cwtl
push
insl
test
aas
mov
lidtl
mov
inc
test
adc
pop
mov
sbb
data16
pop
clc
lret
adc
in
mov
pop
adc
add
mov
adcl
outsb
std
in
mov
jnp
shll
add
pop
xchg
xor
lret
jg
sbb
lret
adc
inc
cld
xchg
dec
jne
jns
imul
iret
sub
xchg
sub
sub
and
push
aad
push
add
and
jnp
ja
out
pop
stos
shll
dec
lahf
stc
movsb
jg
dec
push
je
jmp
icebp
add
aas
sbb
jp
sbb
cli
icebp
dec
mov
sbb
mov
jp
fisubl
sti
xchg
aam
cwtl
sub
xchg
push
ja
rol
cmp
mov
not
cmc
add
outsl
data16
pop
xlat
andb
es
daa
imul
adc
jp
xor
mov
cmp
es
dec
sahf
mov
cwtl
mov
test
add
push
sti
xlat
cmp
mov
icebp
mov
dec
jmp
loop
in
aas
shrd
jle
movsl
jg
mov
jmp
aas
sub
out
mov
aaa
in
test
adc
aad
paddd
daa
aam
int3
mov
stos
bound
mov
int3
js
jno
mov
jecxz
int
icebp
xor
je
xor
repnz
idivb
test
and
lret
mov
cmpb
and
mov
inc
adc
xor
dec
test
es
add
nop
rorl
out
add
cli
hlt
or
mov
movsb
mov
xor
fsubl
inc
fistpl
sti
mov
into
popf
push
cmp
adc
div
adc
push
es
inc
ficomps
and
lea
sbbb
out
mov
adc
jns
mov
out
in
rcrl
jnp
mov
shll
xchg
xchg
rcrb
cmc
ja
jmp
cwtl
in
pop
outsl
mov
dec
les
mov
fdiv
xor
mov
int3
insl
pushl
mov
add
imul
push
mov
in
int
dec
add
loopne
xlat
push
hlt
fsubs
leave
mov
sbb
mov
loopne
mov
mov
and
xor
test
xchg
repz
inc
mov
sub
adc
mov
jns
ja
mov
dec
icebp
filds
repz
hlt
sub
and
jle
xchg
popa
sub
dec
les
das
xlat
jmp
bnd
out
call
outsb
pop
pop
das
adc
mov
sub
push
sub
sti
push
xor
imul
aam
aas
dec
jle
ret
cmc
mov
pop
cmp
dec
mov
sarl
mov
je
insl
lret
cltd
in
ja
cmp
loop
daa
out
xchg
lcall
xchg
pop
fnstenv
push
andl
pop
scas
hlt
mov
jo
into
jecxz
add
and
push
subl
mov
cs
add
pop
in
jp
ret
testl
aaa
adc
test
push
mov
lcall
sub
int
les
xor
imull
jge
add
mov
or
push
out
ret
popa
sub
idivl
fmull
clc
js
jnp
and
test
push
push
sub
std
sub
push
inc
pop
jo
mov
push
iret
mov
cmp
pop
dec
jecxz
fwait
push
cmp
ljmp
fadds
nop
fnsave
sub
inc
call
inc
ret
rcr
sar
out
mov
pop
outsb
jno
sbb
out
fnstenv
jne
daa
mov
and
cmp
in
sbb
mov
les
cmpsb
cmc
mov
inc
fldl
adc
popf
push
lea
stos
stos
push
sub
ret
mov
lret
jns
or
popa
cmpsb
push
pop
push
out
mov
add
daa
loopne
cmp
scas
cltd
cmp
lds
jp
dec
mov
cmp
pop
or
icebp
adc
mov
pop
daa
jo
outsb
call
fidivrl
cli
cmc
and
adc
icebp
imul
jmp
cmp
sbb
mov
xor
mov
mov
and
sub
fistps
pop
mov
or
loopne
mov
xchg
cmpsb
push
and
aam
lea
stc
icebp
pop
fdiv
or
pop
cli
cs
adc
push
push
xor
pop
push
push
adc
mov
pop
sub
lods
dec
lea
dec
lock
adcl
jae
sbbl
push
xchg
mov
inc
inc
into
pop
shll
lods
xchg
sbb
cli
aas
dec
inc
xchg
sbb
push
add
cmpsb
adc
loop
pop
and
int
cmp
add
mov
je
cmp
popf
cmp
mov
xor
add
movsb
test
inc
push
aaa
lcall
fisubrl
push
cltd
test
call
add
out
or
call
adc
cmp
movsl
push
pop
pop
and
mov
ds
repnz
imul
into
and
cmp
adc
insb
push
adc
lret
imul
test
pop
mov
fildl
outsb
jnp
fstpl
sbb
pop
or
ljmp
in
push
test
sub
pop
fstpt
js
in
repz
mov
arpl
daa
mov
imul
dec
ss
lock
cmc
lock
xlat
insb
sub
or
in
ficoms
popf
mov
ja
xor
bnd
or
sbb
xor
mov
jle
out
cld
push
fs
mov
clc
loopne
or
shlb
mov
outsl
outsb
sbb
ds
add
push
sub
sbb
lock
sub
mov
call
mov
repz
fldl
fwait
mov
sbb
mov
in
jge
xlat
js
popa
mov
inc
fwait
inc
mov
cwtl
push
dec
pop
cli
cmp
and
call
pop
aas
jmp
pop
add
pop
div
push
xor
or
mov
pop
dec
add
popa
push
push
mov
jle
sysenter
jno
jecxz
outsb
mov
in
mov
pop
cmpsb
cmp
shrb
adc
inc
xor
shlb
xchg
mov
test
leave
xchg
stos
mov
mov
mul
adc
sbb
mov
inc
push
push
idivl
xlat
clc
jo
pop
pop
pcmpgtw
pop
inc
lret
adc
out
fadds
sub
fst
xchg
xchg
and
jns
add
rorl
sbb
and
je
scas
mov
push
icebp
repz
jne
mov
cwtl
bound
ljmp
push
pop
mov
or
mov
xor
aas
sbb
faddl
sbb
fistpl
in
cmp
fucomi
mov
cli
mov
imul
mov
int3
add
inc
add
inc
jo
ja
and
pop
pop
adc
sub
xor
push
aaa
test
sub
popf
rcll
out
stos
sub
test
sbb
ds
adc
pop
fadds
sbb
mov
jl
call
repz
out
jbe
pop
or
loop
pop
jbe
and
loopne
popf
xor
mov
fstpt
rcll
fcompl
or
inc
ret
xchg
jecxz
dec
in
dec
bnd
add
ljmp
iret
or
and
inc
mov
stc
sub
fmull
jecxz
xor
movsl
pop
ja
xor
or
xor
imul
jecxz
push
xor
inc
sub
mov
imul
mov
or
mov
hlt
les
mov
mov
dec
cmpsb
jns
pop
pop
cmp
pop
mov
aad
aad
cmc
xor
aaa
scas
dec
ret
movb
ljmp
aad
cltd
out
andb
xchg
push
fldenv
lret
rorb
xchg
jecxz
cwtl
pop
xchg
fwait
mov
adc
sar
popf
mov
rorl
clc
sti
or
cwtl
div
push
pop
ret
mov
xchg
dec
in
das
test
pushf
aad
dec
or
int
mov
cmc
rolb
or
test
das
jge
ficoml
mov
inc
push
pop
fstpt
test
aad
scas
pushl
mov
sarb
mov
jbe
sub
aam
mov
cmp
mov
push
or
mov
scas
xor
mov
fidivrl
pop
fildll
js
aam
imul
decl
and
pop
outsl
ss
mov
mov
and
xchg
push
push
dec
lods
pop
jae
std
in
test
insl
jb
cltd
pop
xorb
mov
push
mov
pop
add
aad
into
int3
push
test
push
adc
out
push
push
je
and
repz
push
pop
push
dec
or
sbb
sbb
ret
add
adc
mov
cmpsl
mov
leave
ljmp
pushf
xchg
cmc
hlt
inc
hlt
pop
js
std
inc
shl
das
iret
xchg
inc
lea
inc
jecxz
pop
ja
mov
xchg
out
adc
ja
pop
sbb
mov
jno
cmp
lret
jecxz
push
fnstcw
cmp
lcall
mov
xchg
movsl
shrb
leave
movsb
aas
add
push
hlt
fidivrs
and
mov
cli
negl
and
shll
fisttpll
inc
hlt
push
pop
inc
mov
cmp
fcoms
popf
pop
outsl
inc
mov
test
aaa
xor
push
and
or
leave
push
inc
dec
mul
mov
scas
xchg
mov
sub
ja
lods
or
mov
mov
cmp
movsb
sub
mov
pop
or
xor
or
add
cltd
outsl
in
sbb
jns
enter
fnsave
jno
sbb
enter
cltd
sbb
cmp
ficomps
pop
test
icebp
loop
jns
js
push
adc
cli
sbb
fprem1
push
sub
aaa
rcr
lds
cmpsl
sub
aas
sar
mov
in
aam
or
xchg
scas
test
push
mov
inc
shr
popf
cmc
mov
push
inc
mov
outsb
fldenv
adc
adc
ss
ljmp
outsb
jae
cmp
mov
push
sub
dec
mov
repz
lock
dec
dec
and
rol
push
rorb
adc
movl
stos
adc
dec
jns
rclb
test
cli
cmpsb
ljmp
pusha
adcl
sbb
jb
ret
repz
test
std
pop
jnp
decb
cwtl
inc
repnz
cwtl
jle
jne
and
out
pop
out
jns
dec
cmpsb
push
inc
adc
icebp
and
lock
mov
syscall
jns
add
mov
cs
xchg
int3
ljmp
jnp
pop
outsb
mov
dec
adc
test
jns
sub
cmpsl
push
test
popf
xor
sbb
xor
pop
push
mov
mov
sbb
fs
ja
or
xchg
stos
dec
jbe
pop
fdiv
or
push
push
inc
je
pop
test
jnp
jl
loop
pop
push
jb
fwait
push
fildll
push
inc
pop
into
pop
pop
pop
mov
sbb
pop
mov
push
inc
fsubr
and
inc
lahf
pop
fdivl
xor
mov
pop
jmp
aad
lock
pop
movsl
loop
cmp
test
test
mov
imull
dec
insb
mov
jg
jo
xchg
mov
push
lods
jbe
ljmp
daa
scas
inc
mov
adc
imul
sub
rcl
into
adc
xor
jnp
cmp
mov
jl
sbb
das
das
cmpsb
dec
daa
aad
cmp
inc
mov
das
loopne
sbb
je
jle
cld
cmpsl
sahf
dec
stos
shlb
stos
sahf
lcall
test
in
push
sub
xchg
jns
int3
sti
lret
pushf
xor
inc
repnz
cmpsb
push
lahf
data16
lret
movl
fisttps
lcall
shrl
jp
jmp
mov
cli
mov
mov
loope
ds
int
cmp
pop
idivl
inc
cmpsl
into
lock
fwait
mov
outsl
psubd
xchg
xchg
sysexit
shrb
lods
pop
pop
in
call
jl
es
or
push
or
dec
and
arpl
mov
mov
rcrl
jb
out
jg
inc
mov
out
lahf
fidivrl
cmpsl
sbb
pop
xor
aas
xchg
xor
inc
iret
jo
stc
mov
mov
loope
lcall
mov
adc
dec
ss
pusha
data16
cs
inc
jns
jb
xor
mov
add
mov
mov
xor
jno
mov
nop
int3
push
ret
xlat
mov
sbb
or
inc
mov
addr16
cmp
add
in
iret
cli
cmovo
pop
mov
aaa
adc
clc
ficomps
adc
mov
imul
les
dec
or
lcall
push
sbb
dec
or
cmp
jns
gs
notl
cld
test
and
aas
xor
stc
repnz
xchg
out
movsb
add
jnp
add
dec
jmp
pop
mov
movsl
push
pop
inc
or
dec
lahf
sub
mov
add
or
or
sbb
jle
push
mov
dec
jo
stos
and
or
popa
je
mov
pushl
jbe
pop
jne
notl
add
mov
ret
test
mov
xchg
adc
pop
in
lcall
add
or
cmc
adc
int
test
jo
scas
outsl
mov
mov
xor
insl
pop
leave
jg
cld
xchg
inc
cltd
aam
iret
mov
fsubl
int
xchg
vpaddsw
rcrb
jb
leave
jle
inc
inc
pushf
in
int3
hlt
mulb
int
movsl
xchg
imul
xor
jae
xchg
pushl
stos
mov
scas
sub
enter
xor
repnz
mov
outsb
jmp
jecxz
jne
int
add
aas
mov
pop
cltd
out
cmp
mov
iret
xor
lds
clc
fcom
data16
and
lret
mov
pusha
call
push
push
shll
mov
pop
mov
cmp
xchg
outsl
pop
cwtl
aad
xor
pop
aad
mulb
jecxz
outsb
arpl
sub
call
sub
roll
and
xor
outsw
sbb
dec
ss
xchg
pop
stos
push
push
cmc
fs
pop
hlt
je
adc
lock
test
jae
bound
adcl
or
cmp
fmul
add
shll
cmp
mov
mov
call
lds
fldln2
push
push
adc
inc
std
les
mull
ficoms
dec
pop
std
lret
cmpsl
sbb
aam
clc
enter
cltd
cmp
daa
ljmp
lahf
sbb
jnp
mov
enter
scas
sub
cbtw
sahf
and
in
hlt
loope
loop
addr16
xchg
js
jns
jecxz
stos
pop
push
jl
xor
add
daa
iret
sbb
adc
in
stos
cmp
int
cli
in
bound
in
ret
xlat
cs
roll
push
cmp
pushl
stos
aas
inc
mov
cmpsb
shlb
mov
lahf
clc
cld
jno
shr
and
add
push
xchg
adc
dec
cmp
or
mov
ja
movsb
push
add
cmpsb
cltd
mov
ja
int
mov
jb
rorb
push
mov
sbb
sbb
jp
jecxz
mov
into
mov
jns
mov
xchg
out
les
call
mov
imul
cmpl
push
mov
lds
cld
icebp
add
mov
or
orb
mov
sbb
cmp
mov
test
jl
pop
inc
lret
xlat
mov
pop
add
fimuls
xchg
pop
cmp
daa
mov
pop
xor
mov
jae
dec
cmpl
push
and
out
stos
cli
pop
dec
testb
push
jne
adc
jmp
aas
je
sbb
aas
push
mov
mov
adc
int3
call
iret
into
inc
push
out
sbb
sar
bound
js
inc
in
cmpsl
les
pop
loope
dec
mov
popf
mov
stos
mov
mov
pop
shll
dec
data16
orl
roll
inc
rcll
popf
subb
fcompl
shrl
cmp
call
aas
and
test
xchg
loope
shlb
or
test
add
popa
je
in
add
adc
test
jmp
dec
xchg
movsl
xchg
clc
adc
and
ljmp
in
sti
test
mov
mov
xor
outsl
and
out
xor
jge
in
jle
push
pop
xchg
pop
adc
pop
fistl
sub
bound
push
mov
or
out
adc
out
cmp
add
sub
xor
sub
aam
mov
addl
test
in
sub
int
in
pop
push
mov
pop
arpl
je
jnp
divb
aaa
test
sbb
xlat
inc
mov
pop
fidivs
fldl
loope
push
mov
adc
aaa
cmp
imull
mov
add
mov
shll
sub
mov
les
xor
notb
mov
loopne
test
inc
imul
test
push
iret
cld
pusha
jne
inc
js
shld
or
repnz
push
mov
dec
sbb
adc
push
and
gs
push
mov
outsb
and
sbb
inc
pushf
sbb
filds
sbb
pop
xchg
pop
or
cmpsl
add
mov
notb
jmp
mov
lods
or
adc
or
cwtl
in
xchg
je
jae
fisubrs
shlb
jl
xchg
xor
cmp
mov
jo
or
push
scas
or
stos
cmc
mov
call
pop
pop
insb
mov
and
mov
loop
or
data16
fnstsw
enter
cmpsl
test
jns
adc
inc
add
ljmp
das
scas
mov
mov
stos
jb
insb
xor
sbb
xchg
ret
lcall
add
fcoml
add
pop
jp
inc
jmp
adc
cmp
inc
inc
pop
testb
push
shlb
in
testl
into
push
popa
into
jge
xchg
mov
repz
push
fcmovu
fdivrs
ficoml
lock
mov
cmpsl
aam
or
nop
push
push
test
jmp
ds
mov
lahf
dec
mov
push
scas
xor
subl
pop
and
or
push
out
out
pop
stos
xchg
dec
test
fwait
xlat
pop
cs
sbb
ret
or
jno
push
lods
sub
pop
sahf
repnz
or
and
rcrl
int3
out
nop
mov
lea
es
add
pop
mov
push
ficoml
jecxz
aam
std
pop
adc
and
xor
jnp
jle
std
dec
rcrl
sbb
inc
adc
inc
inc
jl
aam
and
mov
push
hlt
cmp
jb
cmp
out
xchg
pop
sbb
add
add
inc
outsb
stc
xchg
int3
xor
sbb
jmp
insl
jmp
mov
rcrb
cmc
arpl
inc
scas
lcall
pop
fucomi
push
iret
insl
xor
fmull
lea
mov
xchg
out
in
mov
cmpsb
hlt
xchg
test
mov
lods
push
pop
repnz
arpl
add
xor
pop
ret
daa
outsl
leave
out
test
cmp
popf
or
push
or
mov
add
and
in
test
xorb
adc
push
leave
stos
mov
xchg
mov
pushl
sub
add
dec
addl
or
in
xor
pop
bound
pop
jns
adc
inc
sbb
or
addl
cmc
aad
xchg
push
mov
loop
sbb
mov
inc
sub
jmp
push
jl
ret
xor
cld
sbb
fcomp
hlt
aas
pop
push
mov
cwtl
dec
addr16
sbb
stos
sbb
int3
stos
mov
sidtl
rclb
mov
push
pop
jb
test
fdivrs
call
into
sahf
push
add
popa
add
shr
inc
test
push
cmp
sbb
pusha
and
mov
xchg
movb
sbbb
in
imul
push
sbb
loopne
fstps
push
testl
movsl
js
das
cli
daa
gs
dec
adc
inc
xor
gs
xchg
mov
pop
neg
jge
push
pop
jo
jbe
push
dec
xor
nop
mov
cmp
imul
jns
je
adc
inc
insb
lahf
fisttpl
push
ret
mov
push
and
shl
hlt
and
clc
imull
xchg
lock
add
inc
and
jno
pop
loope
add
dec
mov
lods
ret
push
out
int3
and
mov
xor
mov
repz
lahf
lds
addr16
sti
xchg
xor
sub
xor
subl
nop
cmp
mov
xchg
push
push
leave
push
sbb
mov
jnp
rorb
adc
mov
fsubrl
lcall
xor
xadd
test
rcr
cmc
xor
dec
push
or
cmp
loop
js
or
mov
cmp
pop
in
ljmp
rcrl
mov
push
cmp
xchg
scas
fldl2t
xchg
jbe
lcall
int3
or
enter
pop
jae
push
jge
les
fisttpl
cmp
push
and
jle
pop
xor
mov
inc
fnstenv
jmp
in
les
enter
testl
mov
daa
fbld
sub
stc
data16
dec
leave
sub
call
test
mov
jmp
lods
shl
cmpb
stos
xor
pushf
xchg
mov
call
push
popf
aas
scas
sbb
mov
call
lret
mov
lret
popf
shl
jo
add
pop
ds
jnp
push
mov
fcoml
cmp
push
aam
cmp
cmpsl
test
ds
mov
jne
push
mov
rep
pusha
test
add
add
test
xlat
js
insb
test
cmp
add
mov
mov
mov
leave
fisubs
jo
lock
dec
ficomps
popf
jno
imul
stos
aam
ljmp
scas
inc
in
mov
rcrb
cmc
int3
inc
mov
movsb
jecxz
sub
cmpsb
mov
jae
mov
je
or
add
test
mov
jno
in
and
dec
add
xchg
or
outsl
inc
out
icebp
dec
mov
xchg
sbb
out
xor
pusha
aas
fisubrl
or
push
mov
in
push
cmc
inc
sub
mov
leave
mov
mov
cmp
scas
daa
sbb
test
push
test
mov
incl
shll
push
xorb
xor
jmp
sub
enter
subb
rcrb
outsl
fidivrs
movsl
decl
lds
adc
insl
pop
sub
mov
add
cmpsb
cmp
mov
fs
arpl
je
stos
dec
iret
popa
nop
push
pop
divb
pop
es
and
imul
int3
dec
lods
mov
lds
aas
inc
std
inc
or
in
xor
outsb
push
push
or
cmpsl
xchg
adc
sub
lods
cmp
pop
adc
mov
pop
push
pop
sbb
scas
or
adc
sarb
pop
sahf
clc
stc
repnz
dec
fcompl
cmp
or
iret
dec
mov
pop
xor
pop
cmpsl
or
jbe
or
andb
lret
cmp
mov
je
test
mov
push
aas
push
xchg
in
loop
fdivrp
int3
jbe
dec
jbe
push
rorl
mov
add
push
pop
dec
sbb
fdivp
or
xchg
xchg
fsubrp
xor
sub
out
faddl
mov
xchg
fadd
aad
cmpsl
outsb
cmp
xchg
fistpl
mov
ljmp
fsubl
ds
lds
mov
mov
mov
test
mov
xchg
arpl
sub
into
ja
mulb
in
dec
int3
movsb
mov
iret
cs
add
jnp
mov
pop
scas
add
xlat
test
sbb
inc
popf
pop
mov
inc
in
addl
and
cmp
popa
mov
sbb
stc
shll
and
xor
cmp
in
xor
jns
leave
cmp
sbb
fdivrl
fisubs
aaa
ret
cmpsb
jg
std
sbb
loop
std
jne
aas
and
mov
call
xchg
out
xchg
jp
dec
mov
push
sbbb
ret
int3
adc
sbbl
aam
test
out
outsb
aam
in
call
aad
hlt
filds
dec
addb
pop
sub
fidivs
mov
adc
xor
push
mov
dec
inc
add
sbb
repnz
jbe
cmp
leave
pop
cld
in
fistps
mov
jno
icebp
add
xchg
aas
sahf
in
in
iret
addl
push
subb
jl
scas
call
inc
stos
test
jmp
mov
add
cli
aas
je
push
cwtl
sub
mov
out
add
xchg
inc
aas
icebp
mov
jnp
icebp
inc
xchg
imul
aad
push
jne
pop
aaa
sbb
mov
mov
pop
sub
cmc
mov
das
in
pop
adc
cwtl
subl
sub
imul
push
xlat
movsl
icebp
lcall
arpl
lret
sbb
call
pop
sub
xor
jmp
mov
pusha
and
das
test
adc
test
xor
mov
push
mov
in
xor
rcrl
cmp
xchg
int
iret
cmp
ret
jae
arpl
shl
lods
xchg
sbb
aas
stos
inc
adc
mov
mov
outsl
xchg
dec
int
sar
jno
cmp
and
pop
test
sysenter
adc
lcall
ja
int3
js
pop
aad
call
mov
dec
shlb
lret
sbb
loop
pop
and
dec
sub
lock
pop
jb
mov
insl
or
nop
jns
xchg
out
outsl
xor
aas
adc
add
jle
xor
xor
hlt
fs
sub
sub
jp
arpl
repz
movsb
mov
push
and
rorl
out
pop
adc
lods
push
inc
shl
es
fnstenv
adc
push
test
jbe
jecxz
mov
fs
fwait
xor
popf
or
adc
pop
scas
mov
push
adc
imul
xchg
cmp
sbb
mov
icebp
in
or
mov
loop
jnp
pushf
push
leave
addb
lods
push
xchg
addb
imul
xor
pop
xchg
pop
fucomip
inc
cmpsb
pop
adc
mov
dec
mov
xor
xchg
cvttps2pi
scas
and
sbb
lret
cld
mov
cmpsl
or
outsb
movl
clc
out
andb
adc
push
arpl
outsl
mov
sub
inc
xchg
cld
jmp
sbb
mov
adc
adc
ret
movsl
xchg
ss
push
sub
in
mov
jp
inc
xor
lret
lret
idivb
lods
fiadds
adc
push
sbb
into
out
adc
in
inc
test
in
fmuls
repz
push
int3
jl
mov
in
out
cltd
js
ljmp
xchg
out
gs
ret
inc
call
inc
mov
ret
add
jb
pushf
ds
hlt
fisubs
incb
sub
sub
push
cmp
pop
or
stos
sbb
add
pusha
loopne
js
jns
jmp
xor
push
and
outsb
sbb
pop
mov
jp
jmp
mov
ds
sub
movb
mov
js
mov
sub
in
aas
push
es
mov
jl
data16
rcr
in
push
imul
cmpsl
push
add
mov
gs
orb
test
add
push
mov
leave
push
inc
in
int3
adc
or
addr16
xchg
mov
dec
push
lods
mov
adc
imul
mov
lock
mov
fdiv
xor
add
insl
loopne
fcoml
pop
arpl
mov
cli
arpl
inc
fwait
loop
enter
push
inc
mov
in
mov
pop
adc
mov
cli
data16
into
mov
iret
andb
pop
fwait
test
jb
mov
hlt
out
pusha
in
lcall
outsb
or
jmp
in
loope
inc
stos
and
das
pop
aaa
pop
pop
pop
aas
mov
pop
pop
lcall
stos
shrb
mov
mov
or
test
xchg
sbb
pop
jmp
push
push
test
insb
out
xor
xor
daa
lods
mov
xchg
push
xorl
arpl
dec
outsl
sarb
enter
xchg
mov
fidivrl
push
mov
ret
dec
cmp
mov
stos
pop
fnsave
mov
stos
mov
cmp
insb
push
movsl
xchg
insb
mov
imul
and
into
aam
pop
add
cld
shll
cmpsb
popa
test
jns
daa
lea
stos
add
mov
pushw
jle
addr16
adc
in
xchg
test
pandn
or
lcall
sbb
rorb
xor
adc
fldt
push
pop
imul
cli
cltd
xchg
and
sbbb
aas
push
and
or
daa
pushl
scas
xchg
pop
xchg
dec
mov
aam
jns
test
xchg
and
dec
adc
push
hlt
stc
mov
xor
push
stc
ja
call
mov
or
lods
sbb
add
in
sub
cwtl
nop
pop
aaa
push
ficomps
cmp
adc
loope
dec
xchg
rep
add
sbb
lock
dec
mov
xchg
push
mov
adc
add
xchg
lret
add
adc
sbb
popf
add
stc
inc
cmp
adc
xor
cmp
roll
jae
gs
adcl
mov
xor
inc
das
rol
iret
jae
dec
fwait
popa
movl
iret
adc
ljmp
leave
dec
inc
mov
push
mov
dec
xchg
test
mov
jl
dec
inc
hlt
dec
jo
movsl
loopne,pn
inc
push
or
inc
mov
dec
sub
nop
stos
sti
in
ret
repz
fldt
movsl
fisubrl
in
shr
and
push
xor
jmp
call
std
clc
push
xchg
ljmp
and
or
xor
pop
pusha
stos
test
pop
sub
and
pop
jne
push
fcoms
mulb
xor
sbb
popa
push
pop
jp
cmpsl
mov
mov
xchg
fwait
push
fisubl
cld
out
clc
nop
sti
jo
mov
xchg
sbb
push
jo
mov
mov
xor
test
jns
xor
inc
push
inc
aaa
cltd
push
sahf
push
dec
mov
add
outsb
add
push
jnp
lods
movsl
cwtl
scas
test
adcl
scas
fstps
imul
iret
lret
sub
xor
jmp
cmp
pop
and
sbb
jle
fcmovb
inc
out
inc
scas
xor
sbb
cwtl
outsb
jne
add
xlat
xchg
inc
and
in
sbb
add
sub
jns
test
adc
daa
cmp
xchg
xor
test
sub
sbb
add
sub
les
ss
dec
call
clc
lahf
add
lock
mov
jl
cwtl
pushf
int
push
jbe
inc
lcall
lcall
sti
xchg
loop
cmp
xlat
mov
jno
call
lcall
arpl
and
cld
mov
push
imul
cli
lods
stos
popa
cs
pop
push
pop
mov
sbb
add
push
dec
jb
xchg
mov
mov
hlt
adc
add
pop
lea
xchg
dec
loopne
xchg
add
scas
bound
aad
aas
insl
lcall
push
push
jne
pop
mov
out
js
movsl
gs
outsb
jmp
push
cmp
mov
in
push
aaa
mov
mov
mov
mov
mov
shlb
int
lahf
lods
sub
xchg
mov
fildl
dec
mov
rcrl
das
mov
mov
testl
ret
stos
dec
les
call
lods
lods
orb
movsl
int
jg
pop
dec
sub
jmp
sub
cld
out
xchg
aas
inc
out
stos
mov
dec
movsb
mov
push
in
mov
lock
add
icebp
cmp
scas
loop
cli
pop
cmp
cmp
jb
aam
jns
pop
sub
mov
push
adc
ja
xor
scas
ret
fs
inc
je
in
sbb
sbb
add
jle
dec
repz
push
dec
sahf
push
sbb
push
push
aad
xchg
sbb
outsb
xchg
xor
push
mov
xchg
and
or
adc
call
lahf
mov
mov
sub
data16
jbe
roll
cwtl
nop
xor
cmp
bound
mov
shll
loop
adc
jne
xchg
aad
enter
inc
stos
lahf
push
fdivrp
iret
dec
xchg
addr16
test
das
cwtl
lret
cltd
inc
lret
jp
jmp
push
in
das
mov
jb
sub
add
inc
add
in
dec
sub
sti
pop
inc
jg
jb
adc
jne
add
mov
mov
jmp
negl
xor
sub
ret
cli
je
mov
inc
or
pop
jle
jmp
mov
mov
or
inc
mov
cld
std
xchg
sbb
daa
mov
stos
and
pop
lods
sub
fstpt
stos
outsb
pop
sbb
pop
call
and
in
mov
cmp
and
pop
mov
cmpsl
mov
neg
jne
loop
cmpl
mov
jecxz
mov
das
adc
mov
rolb
push
cs
and
mov
pop
add
adc
sub
xchg
sub
or
xchg
cld
inc
pop
or
mov
add
xchg
pop
push
jnp
popa
jmp
mov
or
js
imul
xchg
mov
xor
lods
ja
xor
hlt
pop
sub
push
mov
push
fwait
cmpl
repz
mov
sub
sub
rclb
pusha
pusha
aad
mov
xchg
xchg
sbb
mov
das
outsl
dec
leave
in
outsb
jl
cmpsl
lds
xchg
cld
repnz
mov
cmpsl
fisttps
sub
lds
mov
lock
push
ret
dec
rorb
aas
inc
xchg
add
sub
and
mov
or
mov
jnp
test
cld
mov
hlt
ja
mov
dec
mov
mov
mov
movsb
inc
mov
negl
mov
xor
cmp
cmpsl
jae
pushl
and
or
sbb
mov
jl
push
dec
add
push
daa
push
push
mov
or
fs
test
or
jecxz
inc
scas
outsb
jge
jns
xor
loop
cmp
sti
addr16
cltd
test
scas
dec
addl
mov
jmp
cltd
cmp
mov
jns
mov
add
pop
dec
sbb
cwtl
jp
add
cmpsb
aam
jae
pushf
mov
fistpll
out
fs
fcoms
in
jl
xchg
cmp
fcompl
push
mov
dec
add
mov
cmp
imul
test
test
fs
sub
int
xor
push
mov
loope
scas
xchg
dec
cli
mov
dec
icebp
sbb
popf
push
lea
cmp
std
cmp
mov
jb
ja
das
iret
xchg
jae
test
in
xchg
test
mov
pusha
mov
inc
rclb
and
lds
jb
pushf
jle
notl
add
test
out
pop
xchg
mov
add
xchg
xchg
jg
mov
jo
sub
fwait
ret
mov
and
and
bound
mov
pop
adc
fsubr
insl
add
pop
and
out
push
clc
mov
and
or
movsb
and
push
jge
push
pop
jle
fidivl
out
pushf
push
jp
xor
xchg
adc
enter
aaa
pop
call
mov
xchg
mov
insb
pop
push
stos
xchg
ds
inc
int
xchg
add
or
jbe
xchg
ror
pop
jae
lods
mov
inc
sarb
hlt
popa
or
pop
add
test
lods
dec
pop
cmp
imul
jp
movsl
cld
xchg
mov
push
sbb
xchg
add
shlb
fsts
stos
cmp
ficoml
jae
xchg
sub
adc
iret
ffreep
xchg
jle
jae
leave
pushf
cmp
in
xor
cld
sub
ret
push
addr16
rorb
add
imul
in
xorb
xchg
mov
xchg
mov
dec
nop
into
xlat
cmpsl
adc
data16
testl
pop
and
push
lods
adc
dec
jb
out
or
daa
daa
pop
call
sbb
iret
movsb
sti
push
cmp
test
mov
mov
push
fs
sub
push
mul
xor
enter
push
push
mov
mov
sub
addr16
ja
iret
jb
f2xm1
and
cltd
mov
shr
dec
popa
incl
js
jle
in
dec
push
xchg
cmp
std
push
push
and
int
adc
or
scas
add
pop
leave
shrl
cmp
in
jge
xlat
fsubl
jns
repnz
clc
mov
js
sbbb
aas
repnz
lcall
ffreep
les
and
mov
sub
in
mov
push
pop
lods
outsb
add
in
and
imul
popa
jno
shrb
push
ficompl
add
mov
icebp
xchg
push
push
inc
pop
and
xor
and
fmull
sub
in
sti
lods
hlt
jl
in
cmp
mov
push
pop
psubw
outsl
xlat
or
stc
bound
imul
xor
push
out
add
xchg
mov
xor
aam
cmp
data16
sti
mov
push
push
shlb
xor
and
neg
inc
fwait
loope
ret
out
cmp
dec
jns
xchg
sahf
lret
jmp
in
mov
cmc
and
pop
fcompl
and
repz
add
mov
sbb
or
mov
out
xor
push
inc
push
xchg
jns
loop
xchg
adc
sbb
add
mov
insl
repz
lea
decb
and
inc
insb
ret
pop
cmp
cld
mov
push
dec
sahf
cmpl
add
subl
jae
out
je
loopne
xor
fstl
mov
incl
lea
hlt
xchg
add
and
add
xchg
out
stc
iret
cmp
dec
addr16
enter
dec
xor
sbb
adc
push
cmp
mov
shrb
in
lds
rclb
or
shrl
int
lds
jg
xchg
cwtl
xor
sbb
dec
iret
mov
jnp
and
sar
add
xchg
add
pop
mov
or
mov
ret
xchg
and
sbb
mov
sti
and
andb
outsb
sti
pop
push
xor
pop
jmp
and
insl
jae
cmpsl
jns
mov
push
pop
std
fwait
adc
ret
enter
or
jle
mov
pop
lea
xchg
jmp
jmp
jae
or
mov
jge
shll
clc
mov
loope
call
cmpsb
sarl
arpl
cmp
adc
pop
or
es
fsts
adcb
fwait
cwtl
sbb
rcr
neg
jo
sub
insl
mov
dec
sbb
arpl
cmpsl
cmpb
out
ror
lret
mov
dec
pop
sub
ret
xchg
outsl
cmp
adc
test
adc
in
ficompl
ret
loop
and
sub
add
or
jle
dec
cmc
mov
xor
xchg
in
sbb
and
cltd
hlt
stos
ljmp
ffreep
dec
lret
sub
cmp
outsb
xor
loop
loopne
push
cmp
lret
adc
ja
arpl
jns
jne
cmp
mov
sahf
aaa
dec
mov
mov
pushf
shlb
mov
mov
std
arpl
das
push
jns
cmpsl
sbb
repnz
xor
mov
das
jne
inc
xlat
bound
scas
xchg
push
jecxz
in
push
push
addl
or
pop
bound
xchg
xchg
arpl
pushf
dec
out
jo
and
dec
xchg
inc
mov
dec
xchg
movsb
and
mov
sahf
inc
lret
movsl
jge
adc
lret
or
in
push
test
filds
mov
insl
pop
mov
mov
mov
pop
js
loop
aad
loope
push
fldt
dec
fidivrs
jge
adc
xchg
and
clc
sbb
or
andl
aaa
push
dec
add
and
fstp
enter
incl
stc
add
jmp
mov
imul
cwtl
add
xor
sbb
int3
sarl
push
or
jecxz
pop
sub
sub
adc
jle
push
data16
cmpsl
lds
sub
pop
insb
and
in
loopne
popf
mov
jg
outsb
or
sbb
movsb
sbbb
fiaddl
aam
lcall
or
adc
add
xor
fdivrs
fiadds
repnz
test
xchg
jecxz
jmp
cmp
inc
shlb
and
inc
jge
sbb
data16
fnsave
jp
mov
mov
out
ficomps
xor
jo
gs
in
fs
adc
addr16
imul
sarl
inc
xchg
test
imul
stos
mov
loopne
cmpsb
xlat
ljmp
movsb
stos
jecxz
jbe
aam
cwtl
inc
dec
inc
iret
xchg
imul
aaa
and
push
mov
jns
xor
pop
pop
xor
xchg
jns
and
xchg
fstpt
push
sbb
or
xorb
nop
sbb
push
pusha
dec
push
popa
xor
mov
xchg
inc
cmp
cmovle
gs
in
loopne
scas
jae
adc
adc
divl
add
mov
or
rol
push
add
sbb
leave
lahf
xchg
outsb
mov
dec
rcll
mov
dec
pop
rclb
adc
adc
jb
mov
bound
dec
mulb
jno
nop
fdivl
jge
aam
hlt
cmpsb
xor
cmpsb
je
push
ja
arpl
xorb
mov
hlt
jnp,pn
jb
movsl
mov
mov
hlt
in
sub
pop
mov
std
mov
mov
cmp
cmpl
aad
sub
xorl
inc
aas
push
mov
xor
sarb
xchg
mov
pop
fsubrs
dec
cmc
xor
xchg
in
ja
xchg
inc
aam
push
enter
fstps
and
mov
out
orb
sub
dec
add
push
adc
add
cwtl
std
rol
xchg
xchg
cmc
xchg
mov
adcb
jmp
mov
mov
rolb
loopne
js
push
jmp
jae
mov
lret
push
pop
or
push
and
adc
das
stos
pusha
enter
mov
push
push
xor
xor
mov
mov
add
out
mov
lods
cs
repz
popf
inc
push
out
mov
dec
xor
jae
sbb
push
adc
push
mov
and
dec
pop
in
dec
sbb
insl
call
jmp
cltd
outsl
push
or
pusha
and
add
test
repz
shrw
jp
shlb
clc
pop
sbb
lcall
push
js
inc
fildll
int
mov
ss
cltd
lea
dec
jecxz
scas
loop
sti
push
lea
inc
dec
in
push
lds
xchg
fisubrl
cmp
pop
out
out
jp
dec
mov
and
stos
fprem1
stos
icebp
sub
xchg
sbb
andl
cmp
sub
jp
push
mov
gs
cmpsl
dec
inc
inc
in
aaa
out
dec
es
inc
or
mov
ja
cmpsl
mov
arpl
push
ds
xchg
pushaw
xchg
jnp
or
pop
mov
arpl
out
mov
rorl
rcll
iret
or
in
in
popf
or
sbb
or
jo
push
cmp
nop
xchg
sbb
imul
cmp
sub
enter
lods
aam
aaa
mov
pop
pushf
mov
add
outsl
xchg
adc
js
mov
bound
roll
mov
and
out
subl
insb
fsubrs
ds
daa
test
jae
mov
inc
xor
int3
fildl
popa
push
lock
dec
imul
cwtl
sbb
jb
movsl
mov
cld
inc
pop
insb
call
adc
clc
inc
repnz
addr16
test
in
and
xor
adc
pop
mov
xchg
and
dec
xor
stc
cld
stos
push
sub
lods
outsb
mov
sbb
jo
mov
out
imul
add
stos
cmp
jae
mov
cmpsl
test
sub
cs
adc
sub
and
lea
pop
je
adc
ss
add
jnp
lahf
out
mov
inc
mov
dec
cs
push
stos
xchg
mov
stos
xchg
shrl
fwait
outsl
mov
ret
pop
and
cmpsl
cmp
jle
and
cmp
push
stos
fucomi
ja
lods
cmc
sub
stc
movsl
or
loope
insb
loope
xchg
pop
rep
mov
lret
xor
mov
dec
fnstcw
ljmp
push
xlat
add
and
xchg
or
inc
or
inc
ja
cmpsl
mov
jge
jnp
stc
mov
jbe
push
pop
sbb
movsb
adc
aam
xor
pop
fs
jne
xchg
xlat
push
ret
push
je
mov
pop
lret
aad
enter
cmp
int
shll
xchg
push
mov
xor
popa
adc
add
and
inc
add
sbb
rcrl
lcall
pop
or
fisttpl
cmp
movsl
leave
pop
mov
mov
in
and
aam
sar
pop
int3
mov
or
pop
inc
jo
repnz
or
dec
movsb
aam
mov
mov
movsl
jp
ss
pop
jge
mov
or
jge
bound
rclb
and
xchg
fsts
js
sbb
mov
dec
mov
and
testl
and
fwait
jmp
add
and
pop
ret
sbb
mov
xor
push
aad
or
cltd
pop
mov
mov
stos
add
and
int3
arpl
mov
dec
xor
dec
ja
push
loopne
xor
movsl
insb
jmp
xor
loopne
inc
jg
fdivl
cmpsl
popf
adc
pop
and
cli
adc
and
test
adc
lds
loop
rclb
push
sbb
hlt
test
mov
std
outsb
scas
jo
cltd
insl
test
adc
fcmovb
or
js
mov
push
pop
fcompl
add
add
pop
fwait
xchg
cmc
push
mov
sbb
sbb
lods
mov
hlt
cmp
jne
lods
fisttps
aas
fcoml
push
fs
pop
int
mov
xchg
jle
cmpsl
pop
in
imul
cmp
push
gs
mov
push
stos
sbb
icebp
ja
ret
add
mov
lret
inc
mov
lahf
test
cwtl
testb
das
cmp
ljmp
in
jmp
mov
les
mov
int
inc
ja
mov
pop
xchg
pop
lahf
pop
mov
mov
loope
pop
cld
loop
pop
push
inc
xchg
cmp
insl
ss
loope
lret
insb
mov
sarl
test
push
mov
imul
inc
add
add
fisubl
test
leave
add
fadd
fcomi
mov
pop
pop
hlt
rclb
fcoms
icebp
mov
cmp
imul
lods
in
push
mov
xchg
fdivs
jb
mov
inc
pop
cmp
mov
pop
pushf
mov
xchg
xor
insl
addl
pusha
or
sub
mov
ret
inc
add
cmc
imull
push
hlt
fdivrs
in
xchg
outsb
ljmp
mov
mov
dec
test
imul
cmpl
inc
sbb
sub
adc
sbb
mov
sub
mov
pushf
xchg
shlb
pusha
xor
add
sahf
push
jg
mov
in
pop
adc
iret
test
xor
mov
inc
data16
les
and
lea
dec
aad
dec
dec
sahf
and
shll
pop
jge
xor
into
cmp
xchg
out
scas
jo
testl
add
test
lahf
pop
pop
mov
dec
sub
enter
fmulp
inc
inc
hlt
xchg
outsb
lods
mov
add
xchg
in
icebp
es
pushf
dec
adc
jl
mov
adc
dec
sbb
inc
int
cmpsb
loope
push
cmp
mov
or
mov
or
gs
enter
xor
les
aad
jmp
mov
out
and
push
gs
fidivs
mov
sbb
push
movsl
or
fldt
mov
jnp
lods
mov
sub
mov
push
mov
hlt
pmulhuw
ret
ss
pop
or
mov
xorl
push
int3
add
xorb
sbb
shl
mov
inc
test
mov
lret
pop
and
jno
inc
xor
in
fwait
sbb
push
daa
cmpb
sbb
inc
and
dec
leave
inc
mov
xchg
pop
push
push
cmp
mov
repz
add
pop
dec
add
fidivs
fldt
push
cmp
xor
xchg
mov
push
push
sti
add
jo
sub
aas
imul
jge
xorl
repz
rcl
pop
pop
cli
aas
mov
dec
pop
shll
lret
lock
out
scas
jbe
push
out
rcrl
cld
loop
and
push
roll
and
jae
mov
dec
dec
jg
popf
push
push
xor
add
decl
loop
mov
lds
cmpsl
insb
repz
fadd
scas
adc
push
ret
test
mov
arpl
mov
add
jle
jle
inc
nop
xorl
jmp
or
scas
pop
or
or
std
mov
sub
fs
fmuls
loopne
nop
stc
out
xor
cmc
pop
aaa
or
xor
cs
cmp
and
inc
mov
stos
mov
loope
mov
jl
outsl
fisubrs
xchg
and
and
sbb
shrb
push
push
mov
icebp
push
inc
dec
cmp
pop
inc
push
sub
cmp
add
mov
and
jb
add
negl
pop
pushf
adc
clc
in
shll
sub
fbstp
adc
jne
dec
leave
scas
jle
dec
mov
and
sub
sahf
ret
test
test
inc
sahf
and
xor
popf
inc
dec
subl
mov
mov
xlat
xor
push
mov
mov
sub
lea
nop
push
and
loop
mov
ljmp
xchg
jae
xchg
shll
mov
lods
fnclex
pop
test
in
inc
mov
cmp
mov
mov
nop
xchg
jl
lcall
or
shlb
rolb
sub
aam
xchg
pusha
mov
mov
mov
xor
inc
add
sub
imul
push
adc
mov
add
xor
iret
sub
or
add
jg
inc
lock
int
test
stc
hlt
test
sahf
lock
xchg
xchg
inc
jle
and
into
or
sbb
cwtl
lret
add
into
iret
and
cmp
in
dec
cli
push
xchg
aad
adc
int
or
xchg
pop
pushf
mov
xchg
loopne
lret
xchg
sbb
mov
out
shrb
push
jae
jns
les
xlat
imul
je
aam
xchg
push
bound
stos
loopne
cld
cmpsb
and
sbb
add
inc
adc
les
mov
push
ljmp
mov
inc
sub
xchg
pop
cmc
fstps
adc
inc
add
and
lahf
pusha
das
shlb
or
xor
fiaddl
jno
jae
out
out
out
les
icebp
and
rcll
repnz
in
mov
mov
adc
inc
popa
leave
lock
addr16
mov
test
push
sarb
adc
sbb
push
fcompl
call
test
mov
add
cwtl
hlt
outsl
push
rclb
inc
int
shrl
nop
or
xchg
inc
imul
into
fs
shll
cmp
ds
sub
pushf
les
loop
sbb
pop
mov
sub
ret
mov
stc
outsl
xor
scas
adc
xchg
out
jge
push
jg
cmp
push
fwait
shll
push
insb
xchg
mov
push
fadd
xchg
sbb
fidivrs
cmp
xor
mov
lcall
std
mov
aaa
xchg
pop
aad
aam
fdivs
sub
scas
and
loope
arpl
shll
or
cltd
mov
adc
xlat
mov
ja
xchg
xchg
notl
and
cmp
jle
out
jl
outsb
movsb
jge
xchg
or
lea
sub
pop
sar
dec
adc
cwtl
aad
idivl
or
inc
pop
rorl
mov
inc
cs
mov
aad
mov
adc
inc
push
mov
negl
stos
decb
and
addl
lods
stos
insl
sbb
xchg
ds
shl
sub
mov
movsl
sub
dec
push
int3
xor
adc
rcrb
jle
jecxz
out
cmp
andl
or
inc
jo
inc
shl
orb
int
popa
lret
mov
cs
mov
loopne,pt
popa
lret
popf
aad
dec
outsb
mov
xchg
scas
mov
dec
bound
and
inc
out
mov
xor
mov
movsb
pushf
testb
bound
jge
and
jle
dec
pusha
out
rcl
rcrl
cmp
hlt
and
mov
lcall
out
frstor
or
pushf
push
cmp
xor
fwait
push
test
xor
lret
mov
lcall
sti
dec
nop
adc
sbb
movsb
push
push
sub
sub
cli
pop
fisubrl
xorl
je
add
mov
push
dec
lods
mov
dec
test
into
inc
mov
gs
scas
dec
pop
int3
inc
movl
orb
xchg
xchg
xor
fcomi
sub
ds
divb
jbe
notl
add
lods
pop
and
ss
iret
lea
ret
cmpsl
mov
mov
xchg
push
lret
pop
mov
jbe
stos
out
push
push
sub
pusha
jne
cmp
lea
stc
jle
movsb
mov
popf
jl
jg
adc
inc
or
sbb
call
jecxz
ss
mov
imul
mov
xchg
pop
mov
adc
inc
ror
jae
or
cmp
and
dec
jne
push
and
lock
das
jo
clc
int
jo
jg
insl
and
jnp
sbb
lds
adc
adc
dec
xchg
movsb
lock
or
dec
pushl
popa
icebp
add
adc
popf
xor
cmp
inc
je
cli
adc
into
add
jecxz
out
jns
push
mov
imul
xor
das
mov
adc
inc
push
int
push
jmp
mov
std
mov
jne
addr16
insl
sbbb
mov
testl
sbb
and
cmpsb
iret
aad
sub
cld
sbb
adc
lret
sti
popf
inc
cmpsl
out
adc
outsb
stos
jns
xlat
mov
imul
mov
jmp
cmpsl
pop
inc
test
adc
push
mov
fxam
test
pop
sub
or
test
call
pop
stos
dec
jo
call
adc
scas
xchg
add
and
mov
xor
stos
jp
es
mov
mov
or
aam
shr
sub
adc
jmp
jge
inc
cmc
sub
adc
mov
jp
ficoml
js
xchg
sub
add
pusha
push
mov
movsl
ror
aaa
mov
add
shrb
jns
mov
sbbl
xlat
pop
loopne
out
jmp
popa
cltd
repnz
sub
shll
cwtl
outsl
lcall
call
mov
inc
lds
or
xchg
loopne
imul
imul
inc
les
dec
xchg
in
xlat
or
popf
outsb
movsl
pop
movsl
aam
push
sub
ja
insb
xchg
xchg
cmp
fwait
mov
lret
pusha
pop
jns
cmpsl
rolb
icebp
mov
cmp
cld
inc
incl
push
cld
or
jno
cmp
inc
fiaddl
sub
leave
or
faddl
sub
mov
push
lret
repnz
adc
sbb
cmp
es
into
sbb
daa
inc
ret
xor
cltd
in
pop
clc
inc
xor
adc
mov
insb
lock
andl
pop
or
je
sbb
gs
sub
ret
je
xor
mov
cld
cmp
mov
in
loopne
xor
and
sbb
push
out
repnz
sbb
jle
lock
js
push
clc
popf
pop
ja
popa
and
out
adc
push
sbb
mov
xor
lret
mov
insb
insb
dec
and
js
fnsetpm(287
dec
pop
push
into
mov
mov
push
xchg
xor
shlb
adc
mov
sarb
shll
xchg
ret
inc
lret
dec
jnp
shrb
cmp
jns
nop
je
cwtl
pop
cmp
imul
cmpsb
xchg
mov
dec
adc
xchg
sub
jp
arpl
pop
mov
ret
in
pcmpgtd
into
lea
xor
and
imul
and
aam
push
fstl
mov
fstl
ret
out
xorb
repnz
jae
imul
rcll
jle
xchg
push
ss
pop
cli
cltd
mov
push
adc
add
mov
popa
imul
rcll
lcall
sbb
pop
lahf
mov
mull
and
mov
bound
popf
mov
faddl
inc
mov
jo
adc
mov
sbb
clc
mov
das
hlt
xorl
push
enter
imul
inc
lock
bnd
xchg
or
vmovups
push
adc
fnstcw
ja
and
enter
push
push
mov
int3
fst
push
std
inc
popf
cmp
adc
call
fnstsw
fisttpll
jo
sahf
jmpw
mov
dec
int3
jge
push
push
pop
pop
add
imul
repnz
xchg
divl
mov
mov
inc
loope
ss
pop
cmpsb
add
pop
clc
jmp
js
jmp
out
jno
dec
lea
andb
and
mov
lock
or
stos
adc
xor
inc
jo
int3
sbb
xchg
jns
shll
xlat
xor
jl
mov
rcrl
sub
ja
sbb
add
dec
jae
push
lock
fidivrl
cmp
popa
adc
pusha
and
mov
adc
pusha
mov
int
mov
cmp
test
sbb
jno
pop
jp
jge
imul
sub
daa
fdivr
jle
push
sbb
push
idivl
mov
roll
push
movsb
ficoms
adc
fstps
lret
fsubrl
dec
mov
sbb
lods
test
cmc
popf
mov
fisubs
dec
cmpsb
mov
out
pop
inc
fmulp
movsb
rcr
cli
in
cmpsl
dec
xchg
mov
sbb
scas
aad
sysret
push
pushl
adc
mov
loopne
mov
pop
sub
in
loope
ret
scas
test
and
jp
ficoms
icebp
add
sbb
and
mov
dec
leave
cmp
mov
jle
add
jge
push
lods
ror
cld
and
push
mov
fwait
pop
push
loopne
fisubrl
mov
dec
lea
dec
mov
repnz
rcr
test
fnstsw
mov
int
fdivrs
mov
sub
mov
add
stc
pop
loope
inc
inc
in
or
jns
outsl
mov
loope
adc
xchg
mov
rol
xchg
sbb
das
push
test
xchg
inc
mov
nop
or
push
iret
aaa
push
add
sbbl
dec
cmpsb
dec
pop
mov
fsub
mov
push
xchg
jno
cmp
sub
icebp
push
push
jp
mov
lcallw
xchg
jle
leave
cld
adc
adc
fdiv
dec
inc
inc
and
sbb
dec
out
addr16
push
push
movsb
js
and
xor
inc
shrl
mov
icebp
ret
scas
mov
pop
xchg
jne
sbb
push
dec
sbb
push
cmp
and
cmpsb
gs
jmp
pusha
lods
push
push
xchg
adc
addl
pop
int3
outsb
sbb
dec
loope
insl
cs
push
pop
sub
rclb
add
ljmp
lahf
popa
mov
or
jg
arpl
popf
mov
in
sub
xchg
adc
ss
leave
aaa
iret
stos
push
cmp
xchg
xor
adc
in
sbb
cmp
scas
pop
aam
adc
adc
fbld
mov
jae
sub
lods
out
es
pushf
inc
or
push
push
and
cmc
dec
sub
jl
imul
std
jae
fbld
mov
inc
scas
xchg
lds
sbb
into
add
cmp
push
push
pop
icebp
lcall
pinsrw
push
imull
jae
iret
jle
xor
stc
mov
jo
mov
mov
repz
jl
jns
sahf
pop
xor
mov
mov
js
mov
xchg
dec
popl
mov
sub
cmc
push
mov
dec
pop
rorl
push
mov
lret
inc
pop
adc
les
mov
outsb
int3
adc
dec
ret
sub
cmp
inc
xchg
dec
mov
mov
xor
jl
push
pusha
jns
sti
adc
jbe
cmp
imul
mov
cmpb
xorl
stc
arpl
mov
inc
loopne
and
out
jo
popf
gs
je
pop
inc
insb
jns
inc
bound
and
or
jae
xchg
adc
mov
loope
dec
in
int
jo
ret
mov
lret
cwtl
popf
cltd
or
cld
addr16
cmp
adc
xchg
outsb
xor
cltd
pop
repnz
mov
lds
jp
push
sahf
mov
push
loope
imul
rorl
fs
jmp
inc
jmp
popa
mov
dec
pusha
cmp
sbb
fldenv
adc
fdivl
inc
push
jmp
data16
bound
les
or
jb
or
stc
in
mov
repnz
push
add
cmp
inc
idivl
mov
push
sti
sub
lods
add
cmp
loop
pushf
fiadds
loope
std
jo
iret
sti
or
xlat
xor
mov
mov
xor
outsl
adc
xchg
mov
xorl
lahf
jno
cltd
or
and
inc
cwtl
clc
lods
ds
aad
stos
push
jecxz
mov
sub
ss
cmpsb
scas
pop
cmp
xchg
adc
outsl
leave
mov
lcall
lret
fisttpll
fdivr
lock
dec
insb
je
pop
cmp
pop
mov
cmpsb
daa
mov
repnz
push
add
insl
pusha
ret
jae
adc
mov
adc
dec
sub
icebp
mov
jnp
mov
mov
shrl
mov
cmp
cmc
test
sbb
btr
push
sbb
mov
pop
adc
and
xchg
jne
test
mov
mov
sbb
mov
int
add
xchg
jg
cmp
ss
jmp
adc
push
or
or
rcl
jns
mov
outsl
and
pop
jl
fxtract
pop
mov
push
cmp
xor
rcr
out
sbb
decb
or
mov
jmp
mov
mov
push
popa
mov
pusha
sahf
mulb
mov
or
adc
mov
lret
ljmp
dec
popf
xchg
divl
int3
sub
fwait
test
inc
mov
cmp
lcall
xchg
pop
icebp
in
clc
call
and
cmp
push
push
xchg
pop
sbb
xchg
outsl
cmpsb
stos
xor
pop
dec
lds
imul
pop
push
or
lret
jb
lock
fsubl
pushf
leave
mov
or
int3
cld
repnz
nop
loop
inc
cmp
cmp
mov
movsb
add
xchg
adc
scas
sbb
cmpsb
sbb
add
mov
loope
jp
sbb
das
fdiv
popa
aas
test
fbld
subl
mov
popl
inc
inc
out
pop
pop
pop
mov
push
mov
jno
xchg
pushf
test
dec
hlt
sub
imulb
push
loope
cmc
cld
arpl
push
sub
jae
inc
add
jmp
loop
sbb
je
pushf
iret
mov
add
dec
mov
xchg
gs
pop
jnp
fmull
jnp
adc
rol
cld
jmp
inc
imul
mov
pop
cmp
pop
mov
aaa
push
test
or
sub
push
sbb
inc
mov
or
mov
mov
into
mov
add
add
jae
lods
lods
inc
xor
pop
pushf
loope
out
jae
jae
js
stc
mov
xor
mov
and
mov
mov
cmp
arpl
mov
leave
pop
pop
imul
xor
mov
cltd
mov
inc
xor
iret
or
imul
test
dec
lahf
cmp
mov
in
xchg
inc
or
or
dec
and
iret
dec
sahf
jg
dec
lds
pop
mov
notb
mov
mov
cmp
ja
clc
sub
testb
nop
xor
ljmp
je
loop
loop
scas
mov
cmc
mov
cmpb
pop
repz
jnp
sub
add
popf
mov
lcall
std
cmp
sub
and
dec
daa
and
dec
or
xlat
rorl
aaa
push
mov
out
push
cld
or
loope
ja
les
test
ret
push
sbb
inc
clc
pop
pushl
cmp
scas
dec
subb
hlt
in
push
data16
in
mov
loope
jbe
xchg
cmp
dec
insl
ret
dec
aas
mov
lcall
test
sub
pop
xlat
fwait
push
stos
fsts
dec
jmp
dec
nop
inc
ret
shlb
xor
xor
mov
cmp
fdivl
mov
or
mov
sub
outsb
insb
cmp
ret
scas
repz
mov
adc
cmp
les
mov
and
sub
iret
leave
popa
fwait
shlb
push
dec
test
xchg
push
addr16
sub
out
fs
sub
or
push
pop
cs
pop
sub
sbb
pop
sub
roll
clc
mov
sub
xchg
aas
cmp
sbb
cmp
loopne
add
push
fisttps
adc
pop
jbe
shlb
pop
mov
sbb
push
pop
mov
negl
push
insl
je
add
les
add
pop
pop
fldenv
loope
add
cmp
cmpsl
mov
push
das
and
xor
mov
and
lods
pop
aad
push
fsub
add
stc
icebp
sub
jb
and
loope
shlb
je
sub
test
imul
dec
jmp
popa
adcb
mov
lahf
gs
pop
sti
ret
inc
jmp
jmp
push
mov
xor
xchg
push
lret
fldenv
sub
fsub
imul
xor
lcall
out
in
gs
push
int
notb
push
inc
out
mov
sbb
mov
cmp
inc
jge
inc
and
dec
xchg
xor
pop
aas
cmpsb
outsl
push
cmp
into
sub
or
scas
xor
insl
movsl
dec
cmp
das
mov
out
sidtl
fstp
outsb
mov
sbb
adcl
pop
imul
fsubl
dec
push
xchg
fildl
data16
out
or
jle
jnp
xor
dec
out
sub
cmpsb
jno
int
mov
or
test
add
dec
movsb
arpl
push
cs
push
sbb
dec
or
fsubrl
jp
pop
dec
jecxz
fdivrs
xor
dec
in
cmc
jle
outsb
sbb
ljmp
out
jmp
aam
jmp
lea
xchg
in
repz
fbstp
push
pop
daa
popa
adc
iret
mov
cmc
lods
or
movsl
dec
mov
xchg
jno
mov
sub
out
or
mov
je
pop
in
lret
jnp
pop
or
sub
jl
push
and
in
adc
pop
test
loop
dec
jne
sub
pop
mov
sbb
sbb
and
xchg
sbb
mov
scas
divb
mov
iret
addr16
sub
repz
sub
ds
and
int3
push
jne
inc
adc
push
or
dec
or
lcall
and
mov
push
lcall
push
push
cmp
nop
add
push
shrb
popf
pop
push
mov
je
push
adc
sub
aam
nop
sub
int
mov
dec
adc
inc
jl
es
int3
fadds
imull
cmp
into
pushf
in
jg
xchg
test
pop
mov
test
hlt
mov
orl
mov
jnp
pop
je
incl
into
dec
es
jecxz
bound
repz
pop
mov
pop
stos
mov
jl
push
inc
dec
sub
mov
sbb
fdivp
jnp
faddp
mov
jecxz
or
call
outsb
add
adc
push
fwait
inc
xor
mov
sub
sbb
push
jmp
adc
lret
mov
push
mov
mov
dec
pop
les
rolb
mov
aad
push
mov
mov
mov
gs
popf
cmpsl
adc
loop
in
mov
inc
ret
xchg
das
or
hlt
sub
mov
mov
ret
or
inc
cli
rcll
jb
cmp
or
lahf
pop
xchg
test
test
cmc
sbb
adc
cmpsl
mov
jge
test
pop
and
xor
pop
out
mov
cmp
ficoml
fistpl
fimull
std
mov
mov
outsb
sbb
pop
adc
int3
mov
inc
mov
xorb
push
arpl
sahf
push
mov
stc
popl
pop
add
cld
mov
jno
jle
mov
data16
xor
mov
jmp
xor
push
mov
mov
mov
lea
mov
neg
xor
mov
jecxz
cmp
and
cmp
jns
lds
rclb
pushf
bound
imul
mov
cmc
in
sub
push
pop
pop
popa
push
sub
imul
cmpsb
int
jl
pop
push
dec
jbe
xor
pop
xchg
pop
lea
jl
aam
dec
xchg
insl
inc
lret
push
and
inc
aam
push
inc
imul
jb
ror
and
sub
or
jnp
fwait
pop
in
push
mov
pop
mov
push
cmp
and
in
fsubp
fadds
mov
jb
jae
stc
ljmp
test
pop
push
sti
and
into
fidivrs
imul
fmull
int3
sbb
inc
rol
or
std
xor
pop
jbe
push
jmp
mov
adc
ficompl
orb
ffreep
mov
inc
ja
xchg
mov
adc
sbb
cmp
jle
loop,pt
xchg
mov
mov
fnsave
jg
jl
or
outsl
or
movsl
xorl
mov
jbe
pop
dec
fbstp
insl
sbb
push
movsl
mov
insl
into
movsl
pop
jo
xchg
jbe
cmpsb
dec
jle
shr
insb
lret
test
cmp
push
push
jg
mov
aam
xchg
push
repnz
dec
pop
pop
mov
inc
adc
xor
popf
pop
imul
sub
adc
jne
testb
mov
imul
sbb
pop
lcall
lahf
mov
test
xor
ret
and
aad
adc
or
xchg
mov
aaa
repnz
test
and
ss
scas
mov
fcompl
insl
pusha
ljmp
outsb
sbb
arpl
dec
call
mov
sahf
push
stc
sahf
lea
test
push
mov
aas
leave
jmp
cs
xchg
in
pushf
subb
dec
jl
jl
sbb
test
je
or
pand
pop
adc
jl
mov
mov
sti
or
mov
xor
jle
mov
and
inc
repz
icebp
cmp
std
scas
insb
add
lahf
into
fwait
xor
out
mov
push
inc
push
adc
cmc
dec
ret
cmp
sub
push
leave
aad
push
fwait
aaa
inc
sbb
xlat
iret
jo
bnd
push
jecxz
fs
xchg
ficompl
es
pop
pop
shll
inc
arpl
inc
adc
dec
pop
sub
movsl
in
cmc
adc
div
pop
lret
and
sbb
insl
or
jb
and
inc
jns
inc
cmp
add
push
shl
enter
mov
subl
rolb
pop
pop
mov
jl
or
mov
xlat
dec
mov
pop
mov
cmc
mov
gs
repz
pop
jmp
inc
push
nop
adc
cmp
leave
rclb
lds
inc
pop
push
inc
cmp
inc
mov
out
or
jbe
inc
incb
testb
jle
lods
or
mov
paddw
jmp
test
mov
fnstsw
shll
fsubrl
pop
sbb
pop
mov
jmp
insl
stos
daa
and
shl
and
and
jle
in
pop
outsb
mov
fiaddl
in
xor
ljmp
lock
pop
and
jns
scas
jg
push
mov
fsubp
push
adc
or
or
hlt
adc
mov
into
add
mov
push
sbb
cmp
push
test
ds
jo
add
sbb
lret
jmp
sub
cmp
scas
out
leave
mov
decl
pop
repnz
arpl
js
jae
xchg
xor
adc
sahf
adc
push
or
sub
test
test
sub
cmp
or
and
ficomps
inc
sub
outsb
and
push
mov
mov
int
sub
repnz
cli
cmpsb
ds
pop
nop
mov
sahf
sbb
das
outsl
mov
cmp
push
int3
and
bound
cs
xchg
push
mov
sbb
and
mov
sub
xchg
stos
and
inc
iret
mov
movsl
icebp
fwait
ret
lods
mov
jmp
movsl
sub
cmc
jnp
xchg
fucomi
bound
or
mov
mov
fadds
jnp
and
mov
in
push
jo
jp
in
fwait
sub
test
xor
stos
jl
mov
xor
adc
int
fnstenv
test
fisubrs
mov
inc
out
mov
mov
nop
pop
sbb
and
bound
jbe
ljmp
inc
lods
lret
add
push
cmpsb
xchg
sti
mov
sub
and
jbe
pop
sbb
xor
xor
add
adc
mov
sub
out
arpl
mov
mov
add
mov
mov
subl
in
push
insb
je
insl
or
or
stc
dec
in
cmp
mov
pushf
bound
xchg
jmp
inc
sbb
out
sub
mov
scas
xchg
sbb
push
aas
cmpsl
scas
setns
inc
lods
pop
mov
xor
pop
fnstenv
xor
mov
xlat
xchg
sub
fwait
lret
mov
jecxz
lea
cltd
jno
or
jae
mov
ret
jle
les
inc
dec
mov
jmp
fstl
int
jns
pop
xor
mov
in
movsb
jb
mov
rcl
sub
or
dec
pushf
jno
inc
sbb
mov
test
push
mov
lea
es
jno
leave
or
mov
mul
mov
lods
imul
dec
pop
or
rcrl
xor
push
push
sti
shrb
mov
dec
pushf
rorl
addr16
stos
jno
sbbl
inc
mov
dec
sub
inc
rcrl
jle
andb
sahf
daa
insl
sbb
lods
outsl
shlb
and
test
sub
fisubrl
mov
mov
cwtl
add
and
sbb
sbb
sub
sbb
addr16
adc
out
push
ss
and
adc
or
fxch
mov
sub
sbb
cmp
int
push
push
and
xchg
mov
or
sub
dec
test
lcall
jmp
movsb
xlat
cli
push
inc
dec
fucomip
fwait
and
sbb
mov
sub
adc
rcrl
cmp
xor
iret
sbb
pop
jg
xor
xor
jmp
xchg
ds
sar
xchg
xor
jne
lahf
clc
mov
mov
nop
add
xor
mov
pop
out
int
fs
push
xchg
shrb
fdivr
cmp
loope
dec
inc
mov
iret
xchg
sub
or
xor
adc
lret
mov
jp
int
hlt
lret
mov
sub
cmpsb
and
adc
and
jmp
sub
repz
mov
xchg
rcrb
or
adc
jb
mov
xchg
ret
mov
mov
out
insb
jns
pop
and
sti
std
cmp
dec
mov
inc
ds
inc
adc
repz
inc
add
stc
cmp
andl
enter
les
bound
adc
iret
sub
idivl
adc
dec
rclb
les
cli
clc
xor
cmp
cmp
js
and
jae
pushf
test
lds
jecxz
pop
test
or
xor
rol
js
mov
pop
aaa
notb
repz
and
nop
ljmp
add
cmp
push
fwait
inc
shr
stc
mov
xchg
mov
mov
sbb
add
sub
in
negl
add
inc
iret
pop
or
sub
sub
lahf
lea
inc
and
imul
cmp
sbb
test
inc
mov
adc
insl
dec
and
sub
add
add
pop
fisttpll
push
jl,pn
ljmp
xor
iret
das
into
mov
js
mov
jbe
jb
jl
aam
push
mov
stos
pusha
test
push
cmp
xlat
popf
arpl
sub
fildl
push
dec
cltd
add
and
or
pushf
ss
xor
push
mov
jge
mov
inc
mov
mov
mov
mov
pop
add
xchg
notl
clc
push
bswap
int
inc
addb
lods
xchg
xor
add
add
imull
mov
and
or
daa
pop
movsl
pop
xor
xchg
addb
dec
dec
jg
xor
iret
daa
push
mov
cli
in
test
insl
push
pop
mov
test
clc
and
push
shrb
dec
jp
test
sbb
pop
and
pop
pop
cs
pop
mov
pop
test
and
std
jnp
dec
mov
cmpsb
ss
outsb
cmp
adc
pusha
sub
adc
lods
adc
cmp
pop
xor
inc
mov
sub
sti
out
xor
xchg
stos
xlat
pop
bound
dec
pop
adc
mov
push
out
mov
scas
pop
push
nop
mov
inc
loopne
mov
mov
shrb
push
pop
pushf
xor
jbe
rcr
mov
fcom
jb
lock
or
loope
clc
xor
mov
fucomip
xchg
pushf
jle
pushf
inc
or
lock
mov
push
gs
roll
and
aam
stc
fwait
lds
inc
push
std
sahf
in
push
das
jo
pop
cmpsb
adc
lods
arpl
pop
jmp
das
test
add
ss
dec
dec
int3
inc
jbe
repnz
push
je
mov
cli
add
sbb
or
out
sbb
pop
pop
bound
loop
andb
sbb
fcompl
jbe
subb
scas
push
insb
cmp
pop
cs
mov
xchg
and
pop
push
imul
and
jmp
mov
sub
fisttpll
ja
fisttps
sbb
dec
jno
xor
push
fs
rorb
cmpsl
aam
dec
lods
inc
leave
fcmovnbe
fimuls
xchg
cmp
in
mov
rolb
jns
mov
popa
out
inc
dec
dec
mov
pop
cltd
loopne
mov
hlt
push
adc
sbb
xor
add
mov
cltd
sbb
faddl
mov
xchg
int
cmpsl
js
push
test
xchg
and
pop
mov
sub
push
jge
or
out
mov
js
cmp
sarb
imul
inc
or
repnz
xor
add
out
inc
add
xor
inc
or
xlat
adc
cmpsb
xchg
fs
push
add
into
push
add
out
xor
imul
ljmp
xor
insb
lret
sbb
aad
lret
push
mov
pop
std
mov
divl
leave
push
push
xchg
daa
ljmp
push
pop
popf
sub
clc
in
test
pop
xchg
xchg
sub
cltd
inc
and
iret
scas
imul
daa
loopne
cmpsl
mov
test
xchg
pop
xor
stc
cmp
xor
jo
ret
cmc
aam
mov
js
repz
pop
test
pop
inc
push
shrb
arpl
xchg
jp
or
imul
xchg
push
and
inc
daa
jne
push
orl
gs
or
xor
das
mov
das
stos
mov
push
movsl
in
cmp
inc
rcrb
loopne
daa
test
cmpsl
rol
pop
ss
cld
mov
mov
in
popa
pusha
mov
sub
xor
xor
push
mov
notb
mov
pop
loope
in
sti
movsb
xchg
inc
clc
out
xchg
xchg
insb
icebp
push
cmp
cmp
imul
test
adc
mov
aad
push
jg
add
shl
ret
mov
pushf
test
cmc
push
js
add
ja
adc
and
sbb
shlb
pop
enter
rcrb
inc
dec
and
out
pop
push
clc
cmc
lods
mul
loopne
mov
push
das
repnz
jb
scas
dec
and
dec
adc
test
es
aad
aam
dec
pop
rcrl
in
call
inc
aad
mov
nop
in
repnz
sbb
ret
notl
cld
loope
loop
popf
test
dec
cmpsb
cmp
les
add
mov
sub
mov
sbb
dec
mov
mov
push
mov
nop
xchg
sbb
in
test
sbb
sbb
dec
fstpt
sub
and
adc
mov
mov
roll
push
ret
cmpl
sbb
je
fsts
and
dec
outsl
cli
nop
mov
std
daa
pop
sbb
leave
test
push
mov
arpl
mov
xchg
and
and
leave
jecxz
mov
mov
xor
cmc
xor
xor
dec
inc
adc
push
shll
filds
repnz
out
push
add
push
notb
xchg
push
cmp
push
shrl
inc
inc
jle
in
sub
xor
or
lods
xchg
pop
dec
stc
std
ja
ror
mov
and
fcoml
gs
adc
mov
int
scas
out
enter
sbb
sbb
mov
cmpl
rcl
pop
shl
mov
pop
jnp
and
add
lret
jmp
movsl
movsl
sarl
mov
std
pop
mov
enter
xchg
mov
call
out
imulb
nop
nop
jge
adcl
mov
cmp
sahf
or
xchg
xor
mov
loop
pop
mov
cmpsl
xchg
aad
pop
ds
xchg
js
shlb
and
push
push
stc
inc
call
cmc
rclb
bound
push
imul
shrb
jae
test
insl
add
cltd
cmp
arpl
dec
repz
enter
fidivs
sbb
sti
xorl
mov
sbb
pop
xor
push
mov
lcall
popf
lock
nop
dec
test
cmp
pop
lahf
gs
jge
aad
dec
and
loop
test
and
imul
std
pop
mov
leave
xchg
in
mov
mov
pop
cmp
jne
adc
into
and
gs
fsubl
out
mov
outsb
cmp
lcall
pop
test
dec
xor
mov
lods
adc
lret
cmc
mov
jp
push
lahf
xor
fnstenv
inc
pop
xlat
aaa
iret
in
test
sbb
adc
cs
stos
data16
inc
and
and
sub
jle
adc
xchg
adc
inc
int3
int
adc
bound
mov
leave
nop
jl
xor
cmc
pop
aam
std
stos
push
mov
js
or
inc
mov
xchg
negb
xchg
daa
add
adc
mov
nop
or
push
or
out
shll
mov
rcrb
in
movsl
lods
shl
call
and
std
stos
jo
inc
xchg
sahf
out
popf
push
jnp
sub
fidivrl
fs
push
adc
mov
dec
push
mov
ljmp
sub
sahf
and
mov
sub
int
cmp
ffree
out
push
movsb
ret
sub
jb
cmp
xchg
loope
insb
lgs
mov
jb
lcall
and
push
jge
mov
adc
sub
jbe
in
call
aad
mov
lea
je
lret
stc
xchg
xlat
popa
sbb
sub
or
cmp
out
call
popf
clc
dec
adc
push
or
idiv
push
in
add
push
dec
xor
mov
xlat
cmp
fisttpl
cmpsb
repz
jecxz
cmp
xor
aam
xchg
sbb
enter
xchg
loopne
adcb
sbb
scas
pop
das
xor
and
push
or
fstl
push
dec
and
orb
lcall
or
push
or
xchg
sbb
int
mov
das
mov
hlt
push
dec
cmpb
fldl
das
rcll
xchg
es
das
jne
inc
mov
xor
adc
aaa
add
cmp
inc
mov
rcr
dec
rcl
fs
and
dec
sub
out
push
cmpsl
sbb
cmp
test
sarb
andb
or
jne
test
cs
loope
lods
out
mov
inc
outsl
iret
jbe
std
pushf
adc
jb
cmp
xor
call
cmpsl
bnd
mov
inc
pop
add
mov
loope
in
repz
leave
jl
mov
insb
movsl
ja
rcrb
lcall
shrl
and
xchg
call
adc
incl
mov
push
fstpt
jb
inc
sub
adc
rcrl
fisttps
fdivl
and
dec
je
mov
push
test
push
iret
dec
out
movsl
mov
dec
fisubrl
sbb
push
stos
jne
ficoml
dec
sub
cmp
das
pop
cs
inc
lahf
xor
add
inc
push
test
push
xchg
sbb
imul
in
fimuls
pop
repz
cmp
dec
fdivrs
scas
mov
sub
add
outsb
add
adc
cli
lea
push
fists
popa
adcb
lods
mov
mov
cs
ret
rcl
std
lock
fcompl
sbb
in
out
or
fwait
push
fdivr
jne
sub
mov
pop
out
xchg
in
jl
and
jae
push
xchg
dec
add
add
sub
adc
adc
shll
xchg
hlt
out
roll
pop
es
fldenv
aas
repnz
mov
call
push
dec
inc
in
push
or
test
adc
loop
jmp
xchg
mov
xlat
sbb
aas
dec
pop
adc
imul
jge
sub
test
adc
cmpsl
cmp
hlt
scas
dec
fwait
je
pop
xor
mov
inc
or
xor
xor
cltd
outsb
push
xchg
jne
push
ss
lods
adc
rclb
push
outsl
cmp
cmp
test
stos
in
inc
sarl
xor
xor
push
rcll
add
add
xor
jg
outsb
and
or
push
push
imul
dec
cs
inc
aas
repz
lahf
jle
dec
and
xchg
mov
clc
gs
jbe
pushf
xchg
stc
inc
and
mov
test
call
repz
stc
sbb
inc
dec
sub
dec
xor
arpl
aam
fistps
arpl
mov
mov
xchg
push
cmpsl
jae
lahf
test
stos
cmp
test
out
dec
stos
xchg
movsb
or
pop
cwtl
lds
nop
arpl
and
push
mov
xor
adc
jp
fsts
hlt
lahf
add
divl
inc
gs
in
dec
lds
pop
nop
jl
pop
lret
imul
pushl
popf
add
xchg
fcmovne
mov
fwait
add
inc
cmp
fwait
in
or
mov
xor
aad
xor
sub
jge
inc
inc
pop
sbb
insl
inc
add
jo
inc
hlt
xchg
aam
in
adc
and
mov
xor
cmp
rcrb
dec
xchg
cmc
and
and
push
movsb
aad
mov
or
lds
fadd
dec
push
and
std
movsb
and
stos
std
jg
and
imul
std
pop
adc
ja
sbb
dec
cmp
aas
addr16
cmp
shrl
ljmp
mov
loopne
fistps
pop
scas
out
fcoml
outsb
inc
mov
push
out
add
das
or
out
pop
add
cwtl
jecxz
or
xchg
ret
push
movsb
bound
push
insl
aas
sti
pop
and
cmpsl
js
jg
out
mov
mov
jbe
adc
inc
jbe
ficoms
repnz
scas
sub
cld
mov
pop
vunpcklps
pop
sar
repnz
cmpsb
sbb
rcrl
xor
mov
xor
bound
mov
imul
cmpb
test
jecxz
cli
xor
and
test
fs
int
mov
movsl
push
jle
jle
lea
cmp
xor
mov
xor
out
js
stc
pop
xchg
leave
add
sahf
into
mov
sbbl
subb
in
mov
shll
mov
fnstenv
pop
jmp
xchg
xor
pop
icebp
mov
fistpll
inc
adc
incb
push
daa
dec
call
sbb
push
rorl
and
sub
stos
sti
scas
add
les
shrl
icebp
dec
sub
add
pusha
je
push
rcrb
ljmp
dec
fwait
gs
dec
mov
mov
in
movsl
addb
pusha
dec
lea
insb
add
pushf
and
xchg
push
lret
dec
ds
sub
outsl
jb
jp
xchg
mov
shll
sti
rcrb
scas
icebp
lods
imul
dec
cmpsb
inc
adc
pop
mov
aas
cld
ret
or
aad
cmpsb
pop
mov
icebp
inc
xchg
dec
test
pop
orb
and
add
push
sbb
mov
not
aas
xor
cmp
int3
push
loop
mov
stc
bound
mov
cmpsb
fs
fstl
or
stc
or
xchg
lods
mov
lods
arpl
sbb
cli
in
test
decl
jb
jecxz
arpl
pop
add
lods
push
les
fimuls
scas
xor
sbb
sahf
jg
sub
mov
test
out
insl
jne
inc
cmp
xor
inc
aad
js
and
fwait
nop
jmp
lods
or
mov
mov
es
subb
out
cmp
push
cmp
fimull
xor
out
sbbb
repz
in
push
lods
cmp
aas
fsub
loopne
xor
scas
out
jno
lods
cmp
mov
xlat
mov
pop
jl
popf
mov
cmp
js
out
shll
mov
aam
test
sbb
in
insb
sub
popf
test
in
fldenv
mov
test
ss
pop
adc
jns
jne
pop
mov
mov
pop
scas
or
iret
mov
xor
add
mov
fwait
push
adc
sub
stos
xchg
add
jb
aad
or
nop
mov
adc
xchg
icebp
add
scas
xchg
dec
xchg
xchg
in
or
lods
in
sbb
enter
enter
gs
xchg
mov
push
icebp
inc
stos
dec
repz
pop
xchg
cmpl
cwtl
sub
cltd
rolb
lods
fidivs
push
test
pop
outsl
inc
and
inc
pop
jl
jecxz
mov
in
inc
jp
aam
adc
dec
mov
xchg
mov
sbb
stos
jecxz
xor
iret
sarb
pop
sbb
cmc
and
inc
dec
and
lahf
or
push
shlb
daa
mov
daa
mov
add
inc
cmp
pop
dec
pop
xor
xor
and
and
mov
in
xchg
aam
shlb
test
inc
pop
enter
mov
jb
push
stos
leave
jbe
pop
mov
or
fsubs
adc
arpl
or
xchg
ja
addr16
inc
pop
pop
mov
dec
scas
xchg
push
int
ret
js
xchg
repnz
xor
dec
mov
mov
lret
ljmp
add
cvttps2pi
pop
mov
adc
dec
pop
pop
ja
bnd
or
mov
or
push
pop
jnp
test
sub
and
jb
xor
enter
adc
lcall
aas
jnp
aam
lret
pop
aam
popaw
dec
pop
cli
adc
int
inc
pop
push
adc
sbb
std
pop
push
mov
test
cs
sbbb
loop
push
out
inc
stos
cmpsl
push
add
jno
scas
dec
push
mov
adc
out
loop
inc
out
mov
cmp
aad
add
push
adc
jp
and
fucomi
adc
or
movsb
adc
loopne
es
jle
rcrl
pop
pop
aaa
sbb
imul
adc
fistps
lods
ret
out
xchg
jle
mov
jae
push
mov
scas
cmc
and
push
inc
fistpll
push
ret
jl
add
mov
mov
adc
pop
sbb
mov
lret
dec
fldt
and
insb
mov
add
aad
lcall
or
add
cmp
pop
jmp
clc
xor
stos
shlb
in
mov
push
aaa
pushf
imul
lods
push
sub
movsl
xor
or
mov
data16
mov
fidivs
ficoms
cwtl
out
je
and
mov
xor
jmp
cmp
or
mov
cmpsb
out
jp
dec
ds
inc
jne
mov
sbb
add
xor
inc
clc
fisttps
xchg
imul
ret
in
js
popf
push
jns
lahf
int
jb
imul
xchg
shl
in
jle
cld
push
sbb
fwait
vunpcklps
jno
mov
ret
sti
insl
sbb
sub
lahf
mov
sbbl
xlat
cmp
xlat
xchg
bound
xchg
mov
mov
fisubl
dec
mov
insl
fcoms
mov
in
inc
jae
or
dec
icebp
insl
xor
fcoms
push
mov
mov
popa
inc
jns
xor
mov
push
mov
mov
mov
adc
lds
and
mov
add
into
repnz
scas
push
fisubrl
push
pop
dec
outsb
mov
mov
mov
push
movsl
sbb
xor
or
adc
dec
cmp
dec
xor
xor
fistpl
push
sahf
push
adc
cltd
and
in
call
pop
loopne
push
mov
nop
daa
jno
and
std
cwtl
or
push
fsubl
cltd
aad
mov
ss
pop
test
inc
pop
inc
mov
mov
pusha
and
adc
cmp
lea
and
jg
sub
aam
fiadds
sahf
ljmp
pop
mov
enter
mov
cli
sbb
ljmp
pushf
sbb
xor
call
rolb
out
cmp
dec
std
inc
aas
mov
mov
add
xor
lret
out
fisubl
xchg
sub
pop
xor
stos
add
or
mov
shl
sbb
xchg
or
and
mov
popf
mov
addb
xor
stos
jmp
adc
cmp
add
jo
xor
daa
pop
mov
mov
enter
mov
aaa
adc
mov
daa
mov
insb
xchg
sub
sub
jbe
and
int3
ss
rorl
jnp
inc
adc
xor
inc
outsb
cs
popa
mov
adc
mov
out
jg
adc
add
out
ss
pop
mov
mov
outsb
mov
pop
int
or
hlt
sbb
into
movsb
push
lods
jmp
mov
std
lahf
dec
notl
mov
cmp
sbb
inc
ret
pcmpgtb
pop
fistpl
sub
movsb
mov
repnz
inc
in
sub
cmp
lcall
aam
das
fisttpll
inc
cmp
in
sub
sub
insb
sbb
lcall
test
fisubs
mov
xor
iret
inc
pop
cmp
jno
add
push
mov
stos
movsl
fwait
repnz
or
not
mov
aad
mov
lcall
test
push
jle
sbb
dec
adc
outsl
cmp
in
mov
cli
gs
dec
inc
test
adc
ficomps
mov
stc
and
sub
dec
lock
jp
sub
push
sahf
pusha
aam
xlat
mov
cld
dec
mov
ss
xor
ret
pop
test
out
xor
fs
fdivr
xchg
call
sbb
push
mov
int3
stc
jecxz
rorl
out
fst
push
xorl
mov
or
jns
shrl
mov
inc
gs
mov
pop
ror
sbb
pop
les
cld
stos
mov
out
fists
add
in
dec
repz
or
sbb
lods
dec
std
shrb
push
and
cmp
push
sub
adc
cmp
fdivrl
js
and
jg
stos
cmpsb
das
sub
bound
repz
xchg
rcll
dec
pushf
into
daa
xchg
xor
insl
in
pop
mov
data16
xor
jo
push
pop
outsb
int
push
adc
ss
mov
ja
insl
sbb
xchg
faddl
jbe
test
pop
push
cmpsl
cmp
xchg
cmc
xchg
das
add
out
and
or
sbb
pop
bound
mov
adc
mov
add
or
jg
pop
inc
adc
xchg
and
cltd
add
addr16
mov
mov
inc
add
mov
test
out
ret
pop
add
xchg
jge
dec
mov
stc
jmp
adc
addb
xlat
mov
lds
pop
push
lahf
adc
pop
jle
add
div
mov
out
jecxz
xchg
xor
xchg
ja
jb
inc
push
inc
inc
bound
jge
js
inc
shlb
sbb
movsl
jge
addb
bound
adc
ljmp
lods
add
popa
int3
pop
fs
mov
insl
mov
mov
aaa
pop
adc
rcrb
xchg
clc
les
test
scas
mov
lods
jle
fisubrl
sbb
enter
jae
push
shll
push
jmp
lea
fidivrl
xlat
jle
arpl
mov
and
out
pop
jns
sub
into
dec
addr16
cmp
hlt
cmpsb
pushf
and
push
jmp
fidivrs
cmp
inc
jae
mov
mov
xchg
lret
out
mov
jnp
jge
and
pop
mov
inc
lds
sbb
pusha
ret
sub
sbb
pop
fcomps
out
pop
pusha
jns
jp
decl
daa
loope
xor
and
ret
inc
int3
idivl
xchg
mov
mov
out
cmpl
fmuls
jle
and
mov
pop
dec
push
add
pop
test
push
loopne
add
dec
push
ja
lods
ja
sbbb
inc
xchg
mov
enter
pop
jb
xlat
sub
movsb
loop
pop
pop
out
mov
xchg
xor
cld
jns
cmpb
push
and
cmc
xchg
sub
push
xchg
sub
cmp
dec
cmpsb
arpl
and
mov
jle
lret
cmpsb
add
add
mov
aad
add
test
cmp
xchg
in
add
into
xchg
sub
sti
or
out
stos
call
sbb
push
jecxz
pop
ds
inc
aaa
out
lahf
orb
mov
sub
repz
or
into
insl
sbb
jb
cmpsb
notl
push
and
mov
xchg
jno
jmp
mov
fcompl
inc
jbe
push
notl
sbb
icebp
adc
cwtl
mov
movsl
out
mov
push
inc
adc
sub
dec
push
lret
movsl
lods
cmp
test
cli
sahf
push
jp
je
jmp
or
test
insl
cmpsb
jnp
test
gs
adc
js
xchg
xchg
fisttpl
scas
mov
mov
into
mov
and
fs
leave
adc
hlt
gs
in
fistpl
and
or
mov
popa
enter
icebp
stos
in
outsb
mov
cs
les
and
xchg
je
popf
xchg
pop
in
or
mov
dec
add
push
push
pop
pop
lahf
pusha
enter
dec
jno
xchg
sbb
lock
mov
aad
daa
outsb
out
mov
adc
jl
hlt
mov
mov
sbb
divb
pop
push
fcmovnb
mov
xor
scas
dec
cs
inc
aas
mov
xor
or
mov
je
add
sbb
add
xor
fstp
mov
adc
mov
js
and
mov
aaa
inc
mov
cli
and
hlt
jb
test
bound
xor
xchg
gs
jge
aas
aaa
mov
lods
gs
xor
fwait
out
scas
cmp
rcr
clc
push
scas
aaa
sub
test
or
dec
popa
push
adc
sbbb
sbb
xor
inc
sub
cwtl
rcrb
mov
ret
mov
jle
out
sbb
add
cmpsl
mov
mov
stc
aaa
add
mov
pop
out
ficomps
data16
xor
jp
les
test
add
mov
mov
mov
xchg
out
cmp
and
push
pop
sti
inc
pop
mov
out
sub
icebp
and
hlt
cmp
or
cs
sub
test
xchg
fs
incl
cmp
xor
lock
or
aad
push
sbb
mov
sub
cltd
xor
popf
xor
sbb
jl
sahf
test
insl
mov
pop
mov
push
add
or
cli
jno
movsb
and
xor
decb
pop
pusha
data16
sub
xor
loop
sbb
xlat
sbb
aaa
out
inc
push
pop
incl
fadd
data16
sbb
push
mov
int
cmp
aam
lea
dec
cmpsb
cld
rcrb
daa
add
pop
mov
mov
inc
popf
ljmp
inc
pop
mov
adc
and
addb
push
push
pop
mov
imul
les
jle
into
int3
addr16
cvtdq2ps
sub
xchg
test
xorl
sub
mov
xor
mov
sbb
ficoms
dec
sbb
in
cmp
aad
jmp
mov
inc
sbb
int3
shrb
cmc
jge
sbb
xchg
dec
mov
out
sbb
pop
adc
fldenv
adc
xorl
je
xchg
aad
bound
sbb
inc
inc
int3
fidivrs
inc
stos
out
movsb
mov
cltd
imul
popf
repz
pop
mov
sbb
mov
psrad
pushf
mov
lods
je
roll
jge
pusha
arpl
test
fimull
cwtl
xchg
aam
ja
cmp
dec
dec
sbb
sub
frstor
rcrl
or
bound
push
cmp
fisttpll
adc
xor
adc
jl
sbb
pop
stos
fcomi
pop
jg
test
daa
xor
divb
cmp
or
loop
sbb
cli
jo
leave
fildll
jmp
in
mov
fwait
loope
mov
rolb
sub
jmp
pop
fistpl
sbb
test
mov
adc
jo
xor
scas
test
and
mov
fimuls
sti
cld
mov
dec
ret
cmp
mov
jno
and
pop
popa
rorl
or
pop
push
add
cld
sub
pop
and
xor
adc
sahf
fistl
stos
clc
push
mov
mov
aad
xor
stos
xor
pop
fwait
pop
in
testb
mov
fisttps
dec
sub
cli
sbb
hlt
cmpsb
mov
std
sbbl
int
jbe
sub
push
insb
cli
xchg
jmp
adc
in
je
sti
insl
xchg
dec
or
fwait
push
ret
sbb
shl
ret
jecxz
sub
ret
dec
repnz
xlat
repz
fnstsw
jne
mov
mov
pop
sbb
nop
sbb
dec
jge
cmp
cwtl
lock
push
leave
jns
dec
jne
mov
nop
orb
jp
adc
aad
fldenv
fisubrl
dec
mov
push
jae
cmp
icebp
add
add
lock
and
mov
insb
scas
cltd
cmpl
stc
fcompl
jae
sbb
into
ds
pusha
and
je
stos
and
js
push
scas
bound
mov
cmp
cmc
jns
inc
fdivr
sbb
mov
shlb
cmp
pop
ret
mov
mov
cld
cmp
pop
add
mov
je
imul
rcrl
out
add
cmpl
stos
test
dec
cmp
mov
add
movsl
loope
sbb
nop
jbe
pop
loope
sub
pop
xchg
rcrb
ret
cmpsb
push
pop
iret
mov
push
jp
mov
jg
adc
xchg
jle
dec
inc
and
push
outsb
jnp
push
mov
lods
loopne
sbb
dec
cmp
out
push
or
mov
fdiv
inc
add
or
imul
push
leave
push
lods
js
hlt
inc
cmc
xor
mov
daa
inc
hlt
sti
xrelease
or
jne
rcrb
imull
js
pusha
xor
dec
in
or
xchg
pop
decl
stc
pushl
and
rcll
cmp
mov
jns
aaa
xor
notl
jmp
repz
outsb
add
fiadds
sub
mov
sbb
add
clc
adc
data16
insb
inc
xor
aaa
ret
add
jns
sti
push
insl
dec
push
adc
and
imul
in
adc
jnp
lcall
mov
mov
push
jae
mov
mov
pop
xchg
jnp
test
enter
cltd
xchg
aam
inc
push
adcl
lods
xchg
jnp
pop
sbb
shll
xchg
mov
xchg
into
jo
jp
mov
sub
jge
adc
jno
jle
mov
in
scas
scas
ljmp
mov
pop
faddl
outsb
gs
popf
imulb
ds
and
clc
mov
xor
sbb
lcall
xlat
and
pop
adc
or
call
sub
std
int
cmp
ret
fisttpl
insb
rolb
mov
jge
dec
orl
outsb
mov
mov
in
cmpsb
xchg
cmp
xchg
int
adc
sarl
sbb
aam
data16
sbb
pop
push
repz
add
addb
test
sbb
push
scas
xchg
push
je
push
and
mov
inc
mov
pushf
stc
leave
xchg
adc
aad
daa
inc
lods
stos
push
push
mov
and
cmp
mov
dec
pop
or
pop
js
xor
jo
mov
ljmp
lcall
xchg
mov
jne
and
popa
and
pop
das
jl
push
std
js
into
add
mov
prefetch
in
iret
movsb
rorb
dec
in
in
addr16
jo
or
xor
dec
lds
cld
shrl
out
push
data16
adcl
imul
adc
or
push
and
mov
pop
test
or
adcl
jp
mov
sub
repz
mov
push
mov
inc
adc
in
mov
andl
ljmp
mov
mov
add
and
sub
sbb
mov
push
xlat
cmp
hlt
or
outsl
mov
and
icebp
pop
iret
sub
dec
push
jle
and
cmpsb
stos
out
insb
cs
lret
movsb
faddl
sbbb
mov
aaa
xchg
mov
shll
addl
mov
jo
add
popf
or
add
loope
fbstp
sbb
imul
jge
dec
or
stos
mov
pop
dec
mov
js
xchg
and
in
lea
jno
pop
rorb
mov
in
je
aam
in
addr16
xchg
fisttps
jmp
lret
data16
jne
xchg
and
icebp
dec
pop
inc
push
rcr
mov
icebp
mov
gs
mov
pop
pop
stc
inc
jmp
dec
dec
xchg
mov
dec
jmp
ret
in
test
stc
pusha
adc
xchg
pop
arpl
sarb
insl
jb
mov
lods
iret
inc
lock
jnp
fisttps
lods
pop
cmp
mov
sahf
aam
cmp
icebp
mov
or
aad
cmpsl
bnd
mov
mov
or
out
arpl
shl
cmp
jle
fwait
jle
outsl
dec
xchg
mov
pop
adc
adc
dec
js
hlt
inc
cwtl
dec
repz
sub
or
mov
das
fildl
das
mov
aad
push
jbe
mov
push
push
xlat
xchg
cmp
aad
mov
and
lds
out
js
loopne
mov
pop
cltd
js
lods
cwtl
lea
xor
call
ljmp
pop
xchg
xchg
add
push
pushf
or
fldl
lea
push
das
mov
dec
mov
test
xchg
push
cwtl
cltd
pop
xchg
inc
xor
cmp
adc
lock
push
inc
nop
sar
pop
lea
popf
mov
dec
xchg
ret
inc
xor
js
test
add
inc
push
lea
or
rclb
test
aam
xchg
push
or
mov
xor
lahf
addb
divl
xorl
push
sbb
flds
sbb
mov
xor
xchg
mov
insb
cmp
mov
mov
jle
jp
lret
mov
jb
lods
mov
mov
jp,pn
ljmp
iret
pop
dec
xchg
or
adc
lods
lds
xchg
jp
push
cmp
pop
and
enter
dec
test
aad
and
lea
ret
xor
add
cmpsl
dec
aaa
dec
scas
cwtl
test
sbb
or
push
shll
add
dec
insb
popa
push
hlt
decb
cmpsb
mov
jp
push
hlt
hlt
pop
lret
es
mov
pop
insl
mov
sub
daa
add
lea
push
outsl
es
or
jo
das
out
pop
lds
cmpsl
sub
mov
or
mov
lea
xor
in
sbb
mov
sub
outsl
sub
test
aam
jmp
cmpsl
popa
xor
or
aad
repz
push
and
pop
stos
mov
mov
subl
mov
sbbl
daa
xchg
xchg
jbe
daa
rorl
es
loope
fldcw
dec
testl
mov
xchg
jae
in
fs
jns
mov
iret
clc
push
adc
push
daa
insl
out
das
jmp
sbb
mov
ss
add
fimull
repz
insb
cli
cld
mov
fs
push
dec
mov
push
ficompl
and
loope
adc
mov
mov
add
mov
aam
cli
das
pop
adc
jno
scas
push
inc
test
repz
xchg
pop
fdivrs
mov
push
mov
jnp
sub
push
js
out
inc
mov
repnz
movsl
xchg
dec
dec
mov
loope
adc
jmp
pop
stos
arpl
fisubrl
aas
mov
gs
outsb
in
pop
dec
fdivs
out
cmpsb
aad
cmp
scas
and
pop
push
push
mov
adc
mov
push
cli
loope
nop
in
xchg
pushf
xchg
xor
cmpsb
inc
mov
lret
orl
jne
mov
call
pop
xor
pop
xchg
insb
jmp
fistpll
and
idivb
jno
int3
inc
mov
fyl2xp1
into
dec
pop
cmc
pop
sub
push
stos
cmp
inc
not
js
inc
popa
cli
mov
loopew
jl
fdiv
xlat
nop
jnp
mov
leave
pop
inc
movsl
cmp
mov
cli
das
movd
call
inc
push
movsl
add
lcall
andb
sbb
xor
push
jno
dec
pusha
push
lret
push
sti
movsb
sarb
fstps
mov
adc
push
fwait
stos
sub
mov
jmp
push
pop
inc
sar
push
push
loop
or
add
lcall
loopne
les
subb
xchg
enter
mov
dec
cs
xchg
xor
xchg
bound
mov
sbb
or
in
adc
sub
mov
icebp
pop
sbb
or
sub
sub
inc
subb
mov
daa
int
jo
stc
jb
test
push
shrl
lcall
fwait
add
ficomps
gs
and
icebp
adc
js
xorl
mov
pop
popf
sbb
cmp
jno
call
mov
and
cmpsl
sbb
sarl
pop
test
mov
cmpsl
mov
sbb
leave
dec
adc
mov
out
das
arpl
xchg
push
mov
and
pop
or
int3
cmp
sarb
xchg
pop
hlt
orl
push
insl
cld
pop
ja
add
jns
mov
mov
mov
mov
mov
push
insb
sarb
enter
enter
push
cltd
cmp
sub
popa
mov
sahf
addr16
xchg
stos
mov
mov
insl
pusha
mov
int3
pop
sbb
dec
rcr
pop
xor
jbe
pusha
jmp
ret
in
jle
scas
mov
inc
mov
xlat
sub
aam
gs
sbb
pop
addr16
and
lret
xchg
test
lds
fisttpl
clc
inc
sbb
jae
iret
lahf
pop
push
push
mov
push
cmp
aas
ds
enter
fstpl
adc
pop
outsl
xor
divb
pushl
aaa
add
cmp
fmul
std
jecxz
fwait
cmpsl
mov
xlat
hlt
pusha
cmp
popa
cli
loope
mov
cmp
and
pop
push
fwait
mov
sub
fldenv
mov
aas
lcall
stos
sub
add
push
inc
mov
sub
enter
mov
adc
into
imul
scas
inc
cmc
fsubs
and
xlat
fidivs
mov
aas
adc
fdivrs
testl
cli
inc
adc
rcl
ss
pop
icebp
sbb
adcb
jno
shll
imul
dec
jno
out
cmpsl
lcall
sub
jb
outsl
out
sbb
pop
movsb
jns
add
push
push
mov
insl
mov
in
inc
lods
jle
les
shlb
std
fiaddl
test
push
pushf
inc
push
inc
pop
xchg
xchg
gs
mov
xchg
aad
push
mov
loope
add
int
jbe
and
bound
clc
add
pop
dec
movsb
sub
cs
pop
sarb
icebp
push
add
aam
mov
int
jo
pop
dec
adc
jb
push
or
mov
pop
jle
enter
call
ss
jae
ja
jnp
mov
mov
out
jg
dec
ret
jae
or
test
sub
adc
push
mov
cmpsb
int3
sbb
push
or
mov
aaa
jp
add
xchg
test
inc
imul
cmp
lcall
jbe
repz
mov
or
ljmp
fwait
shll
outsb
loop
xchg
cmp
aad
mov
jbe
cmpl
mov
dec
xor
xchg
mov
test
sahf
push
pop
repz
sahf
xor
lods
add
imul
aad
pop
add
rorl
pop
adc
cmpsb
andl
mov
push
jb
pop
jno
xchg
inc
sbb
mov
push
pusha
adcb
not
adc
adc
call
push
xor
icebp
and
shlb
mov
xchg
xchg
in
pop
pop
out
inc
jno
mov
mov
push
jno
arpl
fscale
pop
addr16
adc
loopne
adc
daa
dec
dec
jnp
or
dec
mov
add
xchg
jne
xchg
hlt
mov
push
and
imul
out
jmp
cmpsl
pop
gs
lods
je
test
lret
mov
lret
ret
adc
inc
xor
sbb
add
or
rol
rcll
out
pop
and
pop
mov
shr
mov
push
int3
sbb
sub
and
loopne
inc
push
mov
dec
dec
sahf
mov
in
push
pop
fsts
pop
int
xlat
jb
shrb
push
mov
mov
lahf
lock
int3
pop
arpl
adc
mov
jae
les
and
out
movsb
xor
aad
sar
push
iret
sub
sub
jmp
xchg
xchg
int
insb
int3
mov
adc
mov
aad
and
xlat
push
scas
inc
inc
mov
fsts
fistpll
negl
std
mov
lods
sbb
cmp
pop
jg
mov
aas
push
xor
sbb
xchg
stc
int
movsl
dec
and
fnstenv
and
jae
in
gs
pushf
cmpsl
xor
ss
pushf
xchg
mov
int3
jae
imul
and
pop
pop
pusha
outsb
cmp
sub
and
pop
movsb
pop
push
dec
fisubrl
cmpsb
cs
orb
hlt
and
dec
jns
xor
mov
xchg
rcrb
mov
jmp
loopne
mov
loope
xlat
sti
movsb
sub
dec
xchg
stc
xchg
mov
pop
dec
jge
sub
pop
add
adc
cmp
fs
stos
fmuls
rcrl
int3
arpl
inc
pusha
out
xchg
loope
aad
adc
pop
clc
orl
repz
and
movsl
shr
mov
daa
mov
cld
jne
sbbl
dec
inc
insl
fs
mov
leave
jl
xchg
lret
in
sbb
lahf
push
jns
push
mov
out
insl
mov
mov
sbb
sahf
sub
xchg
frstor
cmp
ss
aad
xor
dec
xchg
jo
xor
cmp
and
je
je
jbe
inc
fdivl
orb
pushf
dec
mov
addb
mov
push
cld
std
repz
dec
int
mov
pop
imul
adcl
inc
aad
xorl
mov
mov
inc
xor
xchg
inc
push
fnsave
out
xchg
imul
cmpsb
sti
inc
pusha
mov
jne
out
rorb
insb
add
aas
test
pop
insl
xchg
dec
add
call
jge
push
fistl
cmc
add
test
xchg
test
imul
mov
add
fistl
leave
insl
mov
inc
xchg
pop
shll
sub
pop
fstps
jb
in
add
mov
enter
cmc
and
rorl
dec
jbe
jno
fnsave
sbb
lret
dec
leave
frstor
out
inc
add
jg
sub
arpl
add
dec
mov
jl
stc
mov
loopne
jns
enter
xor
inc
faddp
cli
lret
repz
sbb
push
cltd
lahf
call
cs
xchg
add
push
xchg
inc
out
fiadds
loop
shl
sub
mov
push
add
mov
push
inc
in
pusha
cmp
xchg
sub
pop
es
pushf
mov
adc
xchg
clc
ret
xchg
out
jb
mov
cmpsb
fldl2t
js
pop
in
inc
clc
mov
mov
out
and
or
push
flds
cli
ljmp
mov
jmp
mov
adc
mov
data16
call
sbb
jl
mov
jbe
or
jnp
jg
cmp
cwtl
mov
imul
inc
sahf
mov
push
in
dec
lahf
popf
mov
add
enter
and
adc
in
and
lahf
push
pop
mov
insb
dec
mov
push
dec
into
sbbb
cmp
js
aaa
cmp
bnd
stos
dec
rorb
jns
int
lcall
pusha
bound
movsl
jp
mov
lea
or
lret
inc
sti
cmc
cmp
xchg
notb
std
pop
repz
mov
jno
stc
mov
aad
aas
repnz
cmp
xchg
dec
int
xchg
xchg
pop
hlt
cli
dec
jns
adc
sbb
movsb
idivb
mov
mov
cld
test
dec
popa
jno
lds
xchg
hlt
test
popf
sahf
loopne
lods
je
sub
pop
mov
mov
xor
and
jno
cli
ret
jb
out
lcall
xchg
fiaddl
fs
push
lret
mov
inc
stos
js
push
inc
lea
mov
decl
addr16
pop
int
inc
imul
jae
ljmp
sub
cld
xor
sub
js
ljmp
xchg
jb
cmpsb
daa
imul
cmpl
xor
notl
add
cmp
imul
mov
hlt
cmp
jb
sti
inc
fstpl
test
adc
jnp
stos
push
mov
pop
enter
cmp
mov
inc
xchg
sbb
sub
pop
enter
fadd
imul
lahf
push
inc
inc
popa
xchg
leave
cmc
cmp
shl
mov
sub
loopne
pop
clc
jb
int3
cmovae
push
or
nop
fnop
aas
aas
sbb
adc
imul
iret
aad
mov
sub
jne
imul
fcmovb
sbb
or
and
lods
andb
std
lcall
cmc
mov
icebp
adc
push
mov
push
sub
loop
mov
out
push
mov
add
sbb
mov
mov
cwtl
inc
adc
daa
sarb
ljmp
sub
and
xchg
push
mov
sbb
xchg
pop
fwait
test
pop
rolb
mov
mov
rclb
jecxz
pusha
mov
ftst
ljmp
in
cltd
pop
jmp
inc
scas
sub
sub
es
jbe
dec
inc
rcrb
lods
jnp
stc
and
fwait
lret
aad
mov
mov
mov
out
call
in
pop
sbb
ja
divb
aam
mov
lods
jecxz,pn
adc
sti
out
sub
enter
enter
and
cltd
and
mov
xor
cmp
cltd
xor
sub
push
adc
call
fdivs
jne
or
mov
pop
dec
sbb
out
jns
shrb
in
in
mov
outsl
repnz
loopne
and
lock
inc
cs
negl
xor
push
jne
add
sarb
jge
movsb
jmp
outsl
xor
jle
leave
jle
iret
mov
adc
out
aam
pop
sbb
js
xchg
les
xchg
clc
xor
imul
sub
sbb
hlt
enter
gs
test
xor
jecxz
cmp
mov
pop
xlat
mov
jg
sarb
out
out
pop
inc
addr16
inc
sbbb
xchg
pusha
test
lock
test
add
mov
ret
int
lea
push
movsb
xchg
jge
mov
adc
pop
lods
aam
popa
xor
movsl
dec
xor
notl
cmpsl
sub
inc
push
push
arpl
outsb
inc
or
ja
ret
popf
popa
cs
cmpsl
and
lods
xchg
cltd
into
adc
cmc
dec
pop
jecxz
push
inc
ss
pop
cmpsl
sbb
daa
filds
dec
jne
push
mov
cmp
test
mov
or
lea
sub
mov
stc
or
cmpsl
xor
dec
dec
sbb
addb
in
jg
imul
pop
xor
popa
cmpsl
js
mov
hlt
sbb
mov
loope
inc
push
ret
fcoms
iret
mov
stos
ret
repnz
xor
roll
popf
mov
jmp
je
mov
test
jg
xchg
mov
mov
pop
adc
rorl
xchg
and
pop
mov
inc
testl
inc
push
fs
add
pop
or
lock
add
sub
mov
jmp
pop
das
adcl
mov
sbb
cmp
cmp
sub
mov
shll
dec
call
sarl
testl
mov
sub
popa
or
inc
mov
cmpl
daa
lock
iret
fsubs
pop
sahf
push
add
push
movsb
shrl
and
sbb
fmuls
mov
in
int
sub
mov
inc
xor
pop
cmp
shll
imul
add
sub
push
mov
add
rol
dec
mov
mov
push
sbb
inc
push
xchg
sbb
outsl
fidivl
push
fisubs
mov
add
mov
mov
sbb
les
inc
jnp
mov
or
xchg
sbb
clc
and
js
fs
inc
add
xchg
sbb
fsubs
xchg
subl
test
cs
add
insl
mov
xor
cltd
dec
cwtl
xchg
rolb
nop
mov
lock
daa
test
mov
dec
mov
adc
loop
test
and
or
aam
popf
lods
xchg
push
push
xchg
jmp
jecxz
data16
sbb
sar
sbb
xchg
fisubrl
sbb
pop
xchg
xchg
push
mov
shlb
dec
or
or
fmull
jnp
dec
scas
or
sbb
add
repz
fstpl
push
jle
push
dec
cmovb
lods
mov
xchg
xchg
adc
cmc
loop
enter
or
rcrb
mov
pop
sbb
or
add
cmpsb
cld
gs
test
divl
test
lods
push
fbstp
mov
cmp
rcl
or
xor
pusha
pop
leave
out
aaa
xchg
movsb
ret
fidivrs
mov
jp
ljmp
xchg
mov
push
mov
and
leave
sub
jb
dec
xor
xchg
push
ret
insl
out
mov
shlb
sbb
jne
dec
jg
mov
rcrl
sub
push
cmpb
mov
cmp
pop
fistpll
mov
icebp
jne
mov
addb
dec
mov
xchg
test
inc
inc
mov
loopne
call
iret
das
jbe
lock
and
fsubrs
sub
push
fs
bound
sub
loop
mov
sub
std
lahf
mov
adc
js
add
dec
ret
cmp
add
inc
and
inc
sahf
addr16
aad
rclb
and
movups
push
mul
popf
jmp
mov
clc
lea
jo
inc
mov
icebp
push
adc
or
jbe
call
dec
jo
lret
xor
lret
jp
fisubrl
sbb
mov
mov
mov
xchg
fists
xor
pop
mov
push
das
cld
test
push
add
stc
inc
push
leave
cli
into
inc
aam
leave
xchg
test
pop
xor
js
xor
or
aas
push
sub
mov
in
fstps
inc
or
jne
adc
lods
inc
popa
adc
adc
xchg
mov
push
arpl
and
cli
test
add
das
add
adc
push
xchg
dec
mov
leave
aaa
stos
and
jns
arpl
test
out
je
mov
mov
mov
call
fs
inc
rcrl
jns
sub
addb
or
fwait
xchg
sub
test
xchg
xlat
add
dec
mov
or
sahf
add
aaa
pop
test
lcall
lods
xchg
div
cmp
aas
cld
test
push
sub
jo
push
jmp
xchg
add
mov
xchg
loopne
xchg
lock
jnp
fisubrs
add
and
mov
ret
jp
pop
jo,pn
cmp
jbe
cmp
sbb
cmp
scas
mov
fucomip
sbb
icebp
mov
and
loope
sub
fidivrl
dec
adc
repnz
shlb
mov
sub
ret
cmp
cwtl
lcall
and
sarl
pop
int
lds
rolb
rcll
sarb
cs
movsb
lret
scas
mov
jns
test
sub
push
ja
mov
add
cmpsb
jbe
inc
icebp
dec
aas
jb
pop
cmc
xorl
xchg
or
push
mov
xor
fldcw
sahf
int
sahf
stos
cmpsl
addr16
lock
dec
enter
ljmp
mov
stos
shrb
ret
mov
xchg
inc
push
jl
sbb
push
and
shrl
cmpsb
inc
lock
cwtl
or
pop
popf
pop
xchg
lahf
jb
ret
xlat
sbb
sbb
divb
lds
pop
sbb
xor
xor
shrl
outsl
cmp
out
imul
mov
sbb
movsb
repz
sub
aas
mov
adc
jle
dec
jbe
inc
pop
xlat
bnd
add
outsl
in
lret
xchg
inc
adc
cwtl
push
inc
loopne
mov
ds
mov
lds
sub
mov
push
xor
jl
mov
dec
xor
adc
xchg
cmp
pop
movsb
sub
fs
inc
movsb
jnp
push
push
rolb
std
movsb
hlt
xor
movsl
imul
pop
movsb
dec
xor
das
lods
ja
pop
cwtl
rcr
push
loopne
adc
add
jb
inc
js
clc
clc
cmp
xchg
dec
push
inc
stos
into
stos
xlat
push
mov
in
cmp
sub
add
pop
xlat
in
pop
ljmp
cwtl
mov
cmp
sbb
mov
gs
xor
mov
inc
sub
outsl
shr
cmp
or
sub
enter
cmpsl
rorb
xor
or
sbbl
lds
rcrb
shlb
aad
mov
push
das
mov
inc
test
mov
outsb
mov
mov
pop
arpl
or
popa
jmp
in
push
outsl
dec
sbb
stos
ss
lret
jl
xor
lret
imul
pop
pop
jno
jae
cld
mov
add
jmp
nop
xor
adc
add
out
pop
and
aas
movsb
push
test
pop
mov
aad
add
lcall
push
jle
mov
aaa
push
mov
enter
das
and
rclb
jg
test
and
inc
sub
push
dec
loope
dec
xor
les
or
xor
pop
in
ret
mov
xor
or
in
insb
cmpl
es
je
gs
inc
fsub
mov
dec
cmp
mov
xchg
dec
cmp
loopne
out
std
jmp
pop
cmpsl
or
dec
mov
mov
aad
dec
in
stos
imul
inc
mov
or
cmp
aam
pop
mov
or
call
xchg
out
xchg
std
in
cli
xchg
clc
jg
adc
cwtl
push
inc
adc
push
mov
cmpl
push
mov
inc
repnz
aam
or
push
popf
mov
mov
adc
fnop
push
mov
push
repz
movsl
lret
push
jl
push
xchg
ja
push
mov
inc
sbb
mov
sti
das
inc
adc
jbe
mov
cmpsb
cmp
or
inc
push
or
xchg
sub
int
gs
shll
test
mov
mov
loopne
call
xchg
jecxz
adc
subb
fsubrl
add
and
jmp
cmp
or
fnstenv
mov
mov
cltd
xchg
pushf
test
lock
orb
mov
mov
cmp
icebp
std
idivl
mov
shll
adc
aas
dec
mov
aad
dec
and
lods
fst
mov
int
xor
push
add
xor
sub
mov
push
out
outsl
repnz
dec
scas
add
into
mov
pop
xchg
inc
cmc
push
cmc
dec
mov
pushf
add
xor
shl
push
pop
cmp
hlt
stos
outsl
sub
xchg
dec
jp
and
mov
jo
ret
repnz
lcall
xchg
mov
push
bound
dec
loopne
mov
daa
fsubrp
add
push
jnp
cld
sbb
stc
mov
adc
cmpsb
dec
jno
nop
stc
xchg
movsb
xchg
jecxz
xchg
lret
or
dec
imul
ffreep
daa
inc
push
mov
push
mov
popf
pop
dec
jmp
pop
pop
lahf
sahf
inc
xchg
push
lock
scas
call
dec
or
add
mov
cmpl
sahf
insl
rorb
aas
adcb
loope
test
dec
xchg
adc
xchg
jecxz
mov
inc
fmull
xchg
lods
mov
movsb
push
in
add
pop
jmp
push
xchg
cmpsb
sbb
jae
es
xchg
lahf
or
mov
jle
in
jbe
ret
mov
sub
xchg
andb
pop
push
adc
and
inc
daa
mov
cltd
pop
pop
addl
push
sub
in
or
icebp
mov
leave
push
es
fisttpll
or
enter
and
sbb
faddl
pop
adc
dec
mov
inc
or
xchg
mov
mov
lea
cmpb
addb
xor
out
sbbl
or
mov
aam
xor
lds
enter
sbb
pusha
jmp
jnp
into
cmpl
outsl
in
cmpl
lcall
pop
test
jl
cmp
mov
pop
aad
int
movsl
imul
imul
les
jo
in
hlt
les
adc
lods
jmp
imul
xor
orl
negl
sub
es
lods
jge
xchg
outsl
rcpps
pop
inc
inc
cmpsb
ja
fwait
jne
imul
cwtl
sti
add
mov
js
mov
pop
and
adc
sbb
rclb
les
sub
mov
dec
icebp
mov
xchg
push
mov
jge
jmp
test
or
ja
push
pop
mov
and
xor
jle
pop
jo
in
clc
ret
pushf
aad
lret
mov
inc
push
cmp
lds
pop
jo
jb
cltd
out
jle
mov
out
push
lret
repz
roll
call
mov
inc
in
hlt
cmpb
test
jg
pop
xchg
jne
dec
jecxz
mov
jnp
pop
push
pop
call
push
ret
adc
mov
inc
adc
push
cmp
aas
cs
arpl
js
lret
loop
fiadds
pop
call
lods
mov
pop
iret
sbb
repnz
push
fdivrs
sbb
ret
shl
cmp
push
dec
push
jbe
or
mov
arpl
xor
xorl
and
fsubs
orl
int3
gs
adc
xchg
push
mov
es
dec
movsl
repz
xchg
pop
pushf
and
or
nop
dec
dec
mov
push
add
je
sti
sbb
shr
pop
std
adc
and
adc
xor
aas
js
mov
int3
fdivrl
mov
sub
dec
icebp
xchg
popa
nop
mov
int3
cmp
pop
jl
and
rcll
mov
mov
jl
imul
rcrb
arpl
jne
fbstp
xchg
call
les
sbb
push
aas
sbb
jle
mov
jb
cmc
pushf
cmp
test
es
pushf
call
aas
pop
adc
jne
inc
mov
movsl
xor
cltd
mov
pop
mov
iret
popa
fisttps
push
lods
test
int
jge
shlb
data16
flds
divl
add
pushf
out
test
lods
aam
push
fidivrs
sbb
mov
mov
xor
or
add
sbb
js
sbb
int
cmp
push
xchg
idivb
pushf
mov
pop
xchg
mov
rorb
fdivrp
hlt
mov
sbb
fiadds
inc
push
ljmp
pop
add
dec
nop
xor
lods
cs
insl
adc
sub
sub
sbb
mov
sahf
mov
jno
pop
jg
mov
mov
sbb
pop
insl
or
mov
mov
xchg
js
and
out
repnz
jns
mov
and
enter
pusha
lds
sub
lock
or
sti
insl
arpl
popf
loope
mov
mov
imul
das
push
andl
mov
adc
cmp
push
push
pop
inc
mov
gs
and
shll
ljmp
into
loop
icebp
std
lods
push
pop
loop
add
jo
jl
enter
add
jb
fsts
add
lea
mov
adc
pop
arpl
cmp
das
jnp
int3
test
insl
jns
cmp
xchg
xchg
mov
dec
inc
subb
or
inc
add
testb
inc
jp
mov
mov
inc
cmp
dec
test
std
aaa
aad
out
popf
xor
in
add
lods
jae
mov
push
xchg
push
hlt
sub
stos
jg
xchg
leave
lock
repz
push
inc
enter
scas
push
nop
fsubl
jecxz
and
and
into
addr16
aam
cmc
push
jb
aam
lret
mov
cmp
jb
fs
std
mov
hlt
popa
mov
add
xor
mov
inc
out
or
cmc
xor
call
addl
js
insb
add
and
add
pop
adc
and
push
pop
or
test
push
rorb
jns
jbe
stos
inc
subl
call
xchg
mov
and
popa
in
movsl
and
mov
cmpsl
inc
push
fcomip
xchg
notb
cltd
push
sub
loope
ret
je
dec
sbb
stos
shll
xchg
enter
inc
pop
scas
sbb
fs
pop
mov
xlat
mov
sbb
sub
jb
cmpl
add
cmp
pushf
inc
mov
into
shr
cwtl
fimuls
add
xor
lret
jg
movsl
mov
clc
xor
xlat
adc
xor
mov
mov
jl
repz
push
insl
dec
xchg
ljmp
jg
adc
iret
inc
ljmp
into
sbb
fcoms
or
fs
stc
aad
jecxz
call
adc
sub
adc
push
gs
jmp
int3
aas
mov
adc
mov
dec
mov
in
jnp
aam
lds
shll
sub
cmp
test
movsb
adc
fsts
lods
jo
fistpll
lret
mov
push
push
les
adc
nop
clc
int
dec
jbe
push
pop
sbb
jge
cmp
cld
loopne
push
mov
push
out
xor
sub
hlt
push
xor
adc
jl
jg
sbb
xor
mov
jb
dec
cmp
call
in
mov
sbb
int3
add
xchg
add
lret
insl
hlt
or
lcall
mov
pop
jle
and
and
dec
adc
insb
mov
push
xchg
or
lock
ret
es
xorb
repnz
enter
jns
sbb
adc
or
pop
notb
out
pop
xchg
adc
jne
sbbb
mov
repz
ret
fmuls
xor
and
int3
pop
mov
jno
je
lret
movsbl
and
xchg
lcall
xor
enter
idiv
dec
test
fwait
sbb
sbb
xchg
lcall
mov
sahf
out
dec
call
addr16
add
pop
push
xchg
mov
fwait
push
adc
int3
in
and
sbb
fidivrs
pusha
mov
lcall
dec
push
aas
cmpsl
mov
push
jl
aam
and
rolb
fistpl
in
scas
xor
dec
inc
aam
pushf
or
jl
xchg
sbb
mov
out
adc
icebp
or
xchg
lods
and
js
lds
std
popf
jl
xchg
inc
mov
ljmp
mov
rclb
add
mov
pop
cmpb
sbb
addb
xor
lret
or
push
insb
pop
mov
pop
adcb
fs
jp
jnp
test
ss
xchg
mov
mov
pop
inc
pop
pop
sbb
push
int
dec
or
sbbb
jo
adc
pop
int
jae
aad
int3
lods
dec
test
mov
addr16
push
out
es
pop
pop
lret
out
xor
iret
stc
mov
inc
inc
mov
jecxz
lds
jo
push
jmp
orb
push
movsl
jae
decl
mov
iret
pop
sub
sub
jecxz
daa
data16
addr16
out
outsb
lds
add
mov
xchg
loop
lock
cwtl
sub
sub
and
stc
dec
add
and
sbb
xchg
adc
lcall
push
jle
sbb
mov
lcall
insb
pop
or
add
push
aaa
push
xor
or
fistpll
mov
pusha
and
aaa
pop
lods
daa
rol
add
addr16
lds
mov
movd
mov
cmpsb
or
add
sbb
pop
ret
es
sub
add
fwait
xchg
mov
cmp
movb
test
out
or
rclb
or
in
cmp
loope
inc
divb
xchg
xor
jne
mov
and
cs
jnp
pop
outsl
mov
sbb
imul
lods
mov
ds
lock
push
gs
sub
or
jnp
addb
not
sbb
adc
adc
pop
cmp
fisubrl
sub
dec
mov
dec
jp
pop
lds
sub
mov
xor
push
into
hlt
test
push
add
lea
stos
test
adc
add
push
xchg
mov
xor
test
sub
ljmp
xchg
dec
data16
add
rclb
xor
or
inc
dec
in
jmp
inc
frstor
sbb
add
gs
sub
sti
adc
mov
call
cwtl
mov
xor
cld
xchg
cmp
sbb
arpl
jle
cmp
mov
aaa
ret
outsl
test
cmpsb
lea
lret
aaa
push
ljmp
inc
push
ret
dec
push
mov
cmp
lds
dec
pop
mov
inc
mov
or
mov
lds
lea
jnp
push
mov
push
ljmp
inc
push
loopne
fadd
jecxz
dec
filds
push
jae
in
mov
fidivs
pop
out
inc
mov
push
or
outsl
pop
cmp
pop
movsb
mov
xor
mov
hlt
js
aad
xchg
imul
int
dec
cmp
outsb
lock
pop
lods
inc
repz
in
lock
imul
push
ret
mov
jb
sub
vmovlps
cmpb
subl
fistps
pop
loop
dec
std
scas
push
ret
push
pop
pop
shlb
mov
and
jecxz
enter
call
jmp
adc
enter
mov
adc
dec
xchg
jmp
xchg
loopne
filds
scas
sbb
and
gs
std
int
mov
push
cmpsl
fisubs
sub
xchg
mov
push
add
pop
inc
add
iret
mov
lods
dec
mov
int
cmp
mov
shll
pop
mov
sahf
sbb
xchg
dec
ret
fcoms
pop
xchg
lock
loopne
mov
push
xchg
imul
sub
inc
lcall
xlat
sub
sub
jae
jno
push
cmp
or
fbstp
jle
test
test
dec
ret
loope
sub
popf
aam
pop
pop
add
mov
dec
xchg
mov
fmulp
dec
adc
or
outsl
xchg
ja
xchg
sub
pop
rcl
mov
pop
rolb
shlb
jg
pop
scas
test
into
fiaddl
imul
ret
adc
lea
cmpsl
cmp
xchg
lcall
test
mov
sbb
les
mov
mov
jbe
inc
es
jecxz
sti
push
repnz
fdiv
leave
sti
test
adc
add
arpl
sbb
jb
pop
xor
add
jge
sub
inc
mov
fwait
dec
bound
imul
lods
and
pop
mov
pop
add
mov
or
loopne
jl
dec
out
sub
and
mov
mov
cld
aad
and
add
mov
jecxz
mov
mov
fstps
jge
imul
scas
loop
pushf
lcall
test
dec
cmp
xor
fisubrl
xor
pop
xchg
and
adc
out
sbb
loop
aam
daa
test
mov
scas
xchg
aad
add
mov
in
jae
test
mulb
mov
pop
jae
lret
les
outsl
adcb
stos
xchg
in
shlb
xchg
jbe
mov
cli
sub
sub
cmpsb
sti
adc
mov
mov
sti
cmp
mov
xchg
xchg
pop
mov
jge
sbb
xchg
pop
shlb
jmp
test
pop
push
in
dec
shrl
js,pn
popf
mov
inc
cmp
pop
sbb
dec
dec
divl
pop
push
inc
add
sub
cmp
cmp
ljmp
imul
out
add
imul
pop
add
and
cmc
jae
mov
pop
add
push
jle
loop
repnz
cmp
cli
cmpps
jnp
sarl
jmp
iret
inc
sbb
lods
int3
ljmp
lods
das
test
je
cli
es
adc
enter
pusha
mov
fildll
or
lds
lea
icebp
js
fstpl
push
push
push
xchg
mov
mov
mov
cltd
jb
pop
movsl
or
jp
jle
in
fcomip
sbb
sbb
out
clc
add
shrb
xchg
and
mov
shrb
or
dec
inc
pop
mov
out
mov
xchg
repnz
shrb
xchg
mov
jae
fcomp
sbb
lahf
xchg
out
int
xor
cmpsl
daa
pop
sahf
xor
mov
popa
test
xchg
pop
mov
cmpsb
inc
sbb
cmp
ja
sub
decb
testb
or
int
lods
in
add
adc
mov
and
or
xchg
sub
popa
ss
jp
sti
cmp
shll
mov
sbb
and
sub
add
mov
xor
jne
push
je
jp
xor
arpl
lahf
push
fildll
inc
dec
push
cli
scas
test
mov
ljmp
ret
pop
push
mov
xchg
pop
repz
stc
add
ljmp
cmp
push
mov
cmc
fcoml
repz
pusha
inc
ds
lock
add
imul
xchg
test
add
cld
mov
test
xchg
pusha
int3
mov
pop
cwtl
lret
add
sub
cmp
pop
sbb
and
mov
or
adc
xor
ja
pop
je
cli
and
mov
mov
mov
icebp
dec
ds
inc
movsb
ja
xchg
xchg
cmp
push
sub
add
pop
or
push
xor
mov
das
out
add
test
mov
sti
lods
out
iret
inc
sbb
test
outsb
pop
rorb
mov
push
mul
add
jns
mov
adc
xchg
xor
add
or
shlb
push
orl
rcrl
pop
out
and
jo
mov
fwait
mov
cwtl
cmc
jo
mov
mov
test
das
adc
not
fs
popf
pop
pop
mov
pop
jl
xlat
pop
jno
movsl
fsubl
ret
in
or
imul
shrl
xor
sbb
xlat
pop
iret
mov
popa
mov
test
sub
in
lock
int3
imul
aam
mov
push
push
inc
pop
push
test
dec
jl
and
shrb
pop
movsl
sbb
dec
xor
out
sbb
push
sarl
stc
out
sbb
pushf
inc
dec
mov
mov
adc
ljmp
pop
mov
daa
adc
cmc
sub
xor
mov
push
xchg
pop
or
scas
xchg
dec
lock
dec
insb
jge
jle
pushf
xor
sub
ss
xchg
stos
push
jno
cmp
mov
fidivrs
inc
or
cld
jb
mov
inc
cmp
out
jb
or
fistps
sbb
cmp
xchg
sub
loop
and
sbb
scas
es
xchg
pop
sub
jl
mov
lret
and
setp
jo
jle
data16
lock
xor
pop
sub
lea
and
pop
cwtl
scas
movsb
int
fbld
getsec
jg
pusha
or
jb
js
cmpsl
lcall
stos
dec
add
mov
or
inc
lahf
push
adc
dec
jbe
xchg
sub
mov
test
and
pop
pop
fwait
sbb
xchg
pop
scas
pusha
mov
lcall
xchg
jae
lret
shll
pusha
cld
cwtl
dec
push
cs
mov
out
push
push
outsb
cmp
inc
adc
in
dec
mov
icebp
int
pusha
stc
pop
adc
mov
icebp
mov
stos
xchg
por
imul
lods
ss
test
repz
outsl
jp
dec
mov
sbb
loope
sbb
stos
lds
repnz
xlat
push
es
stos
pop
cmpsl
push
pop
arpl
lock
fildll
iret
mov
adc
imulb
jb
in
pusha
out
jl
fistl
leave
enter
movsb
xchg
fildl
pop
add
orl
push
dec
hlt
test
dec
imul
cmp
jl
mov
js
out
popa
or
fcmove
cmc
jae
xchg
add
ljmp
cmp
rolb
push
jecxz
sbbl
test
mov
test
dec
lea
inc
shll
shlb
dec
lcall
xor
dec
fisubl
xchg
adc
loope
push
data16
ret
jp
jbe
clc
mov
push
pop
xchg
cmp
sbb
jecxz
lds
into
mov
adcl
or
pop
xor
cmpsl
and
inc
adc
and
cmp
lret
orl
dec
xlat
nop
cltd
lds
loopne
jb
or
stos
cltd
dec
sub
and
adc
pushf
in
or
dec
dec
loopne
fidivs
lcall
inc
jg
jg
xchg
sub
xchg
bound
frstor
add
inc
lods
int
out
jl
and
rorl
leave
push
push
fcom
loopne
insl
stc
mov
push
add
jmp
cmp
inc
nop
fs
push
cld
cli
scas
sub
lcall
imul
dec
ljmp
icebp
inc
cmp
push
xchg
or
rcrl
inc
pop
xchg
xchg
test
or
push
or
je
mov
stc
daa
xor
fsubp
and
inc
ja
fiaddl
push
clc
cmp
cmp
adc
xor
xchg
idivb
mov
leave
xor
in
sub
ss
shll
jl
out
jb
inc
jbe
ficoml
add
mov
clc
and
mov
out
xchg
divl
fwait
xorb
push
in
or
sbb
lret
rclb
out
inc
pop
lods
mov
dec
mov
lret
xor
mov
mov
jo
push
pop
pop
add
cmp
xchg
mov
pop
mov
lret
lods
cmp
cmp
aas
xor
adc
fsts
jo
or
jbe
sbb
rclb
ja
inc
push
mov
jecxz
mov
mov
ljmp
dec
into
mov
mov
roll
adc
popl
outsl
mov
add
lods
daa
mov
xchg
adc
stc
sbb
xor
jecxz
mov
sbbb
test
cmpsb
aam
test
mov
call
mov
xchg
dec
mov
out
in
xlat
cld
scas
dec
push
in
scas
mov
fisttpll
in
data16
sbb
mov
sub
decb
icebp
mov
into
ds
mov
shlb
xchg
aaa
loop,pn
push
adc
sub
adc
andl
mov
add
mov
dec
mov
pop
filds
sahf
cmp
lock
cmpl
xor
loop
xor
mov
xorl
data16
dec
adc
icebp
ret
xchg
push
ss
aad
mull
stc
inc
arpl
sahf
scas
lock
push
pop
shll
jp
add
pop
push
icebp
ret
dec
jp
imul
gs
mov
push
mov
jb
cmpsb
outsb
repnz
pusha
xchg
push
push
enter
je
lock
shll
mov
bnd
adc
mov
and
adc
and
inc
repz
mov
or
enter
ret
lahf
and
and
xchg
negb
sarl
outsb
add
arpl
pop
out
mov
add
fidivl
icebp
int3
ret
rcll
enter
bound
pop
push
sahf
and
nop
cmp
inc
and
mov
scas
xchg
xor
pop
mov
add
jnp
sbb
arpl
xchg
les
sarb
push
imul
pop
mov
ljmp
insb
mov
or
aaa
jmp
adc
mov
fs
pop
dec
xchg
add
hlt
data16
pop
dec
cmpsb
movsl
xor
inc
add
rcrl
jg
and
mov
sbb
pop
sarl
jmp
pop
shl
mov
and
cmpsb
int
jnp
cmp
mov
mov
int
sbb
arpl
jmp
cltd
flds
movsb
mov
or
nop
subl
pop
stos
xchg
sti
ja
clc
mov
mov
sbb
inc
std
in
mov
mov
lea
leave
xchg
pushf
scas
repnz
in
daa
xchg
inc
or
and
cmpsl
pop
imul
jbe
pushf
xchg
cmp
or
insb
out
mov
and
push
lds
lret
loopne
cmpl
jge
movsb
and
fsqrt
jg
add
aaa
test
xchg
mov
popa
jp
out
cmpsb
sahf
cltd
in
fcmove
out
pop
loopne
cmp
inc
adc
xor
mov
push
xlat
sbb
pop
mov
inc
mov
mov
mov
jmp
nop
sub
or
fsubs
imul
fcmovnbe
rcrb
adc
scas
in
xchg
xor
pop
push
enter
xchg
into
das
jmp
add
dec
mov
in
mov
das
daa
dec
out
push
adc
add
out
cmp
or
aaa
add
push
mov
loop
mov
stos
mov
sub
mov
int
mov
inc
test
sahf
loope
xor
jl
inc
call
sub
and
in
enter
mov
sub
mov
pop
cmp
insb
dec
stos
xchg
inc
inc
daa
repz
bound
aas
dec
stos
test
push
or
xor
mov
js
pop
xchg
jge
adc
pop
lret
mov
movsb
mov
test
loop
adc
movsl
ret
in
lret
cmc
dec
mov
in
pop
inc
xor
sub
in
rcl
and
popa
mov
mov
dec
nop
nop
jb
bound
mov
sti
mov
arpl
je
ja
fdiv
push
icebp
add
adcl
jb
das
fcoms
movsb
sub
scas
dec
daa
mov
lret
icebp
mov
push
add
rol
movsb
adc
dec
add
lea
test
cmpsb
pop
jno
ljmp
in
dec
imul
rcl
jno
xor
lds
and
xlat
test
addr16
out
xchg
nop
mov
inc
subl
idivb
lock
setge
mov
mov
nop
adc
rorb
test
jne
loope
test
lock
and
pop
leave
cmpb
leave
mov
jno
xorb
cmp
loope
rcrb
add
push
rclb
add
xor
cmpb
cmpsb
sbb
mov
jne
mov
inc
mov
push
xchg
and
add
mov
or
stc
lods
shl
iret
inc
xorl
jecxz
dec
xchg
lock
jge
pop
std
les
add
sbbb
push
jmp
cmp
mov
shrl
hlt
cmp
adc
imul
ret
inc
js
pop
sub
imul
cmpsl
cmpsb
inc
cs
push
cs
clc
or
xchg
dec
lock
add
add
cli
rcrl
mov
or
xchg
mov
gs
pop
enter
jns
add
mov
out
push
push
and
orl
loop
and
pop
enter
push
inc
mov
lock
fmull
sbb
imul
loop
mov
xchg
mov
mov
test
mov
adc
ljmp
mov
pop
addr16
loop
xchg
mov
ret
mov
add
mov
mov
dec
lret
roll
sbb
cld
and
inc
xor
les
jb
sub
enter
mov
aas
xor
ds
pop
lods
adc
jno
jo
and
into
sahf
lcall
sbb
mov
or
fdivrp
mov
pop
in
xor
adc
in
int3
in
pop
call
test
cltd
sub
or
int3
xchg
lahf
int3
into
push
cmp
push
scas
int3
jg
lcall
cwtl
lahf
rcll
mov
push
or
xchg
stos
or
dec
int3
add
icebp
stos
es
xchg
lods
mov
movsl
pop
or
fistps
pop
dec
clc
mov
inc
adcb
xchg
cmp
push
xchg
add
jmp
sahf
sub
sbb
int3
movsb
arpl
mov
dec
xor
or
sub
sbb
mov
cli
add
loopne
sti
aaa
movsb
xchg
movsl
adc
inc
mov
test
add
adcb
xchg
daa
xor
and
sbb
sbb
xchg
gs
cmp
testb
loopne
push
testl
add
cmpsb
and
lahf
iret
lds
xor
arpl
std
mov
js
xchg
test
adc
lds
out
dec
mov
sub
les
cmp
push
xchg
mov
into
adc
ret
decl
daa
pop
mov
ret
sub
sbb
or
or
js
in
inc
jae
lret
out
aad
push
sub
mov
adc
and
push
cli
push
adc
shrb
sbb
das
imul
add
or
in
cmpsb
insb
sub
movl
daa
dec
cmp
jle
adc
mov
jae
fidivl
lret
pop
pop
push
popf
fwait
push
out
in
inc
fwait
mov
cmpb
inc
sbb
in
cmp
out
adc
iret
sbb
mov
mov
push
xlat
and
das
pop
adc
xchg
addr16
pop
scas
fidivrl
insb
xchg
lea
outsb
nop
cwtl
stos
in
out
sahf
test
lcall
ja
cltd
jo
xchg
outsl
mov
jbe
cmp
pop
add
mov
pop
mov
std
roll
push
adc
imul
aaa
xchg
mov
inc
cli
dec
jmp
rorl
aam
outsb
outsb
mov
add
mov
stos
repnz
scas
mov
xor
js
fsubrs
lods
xor
sub
inc
push
pop
popf
int3
outsb
inc
add
jno
decl
aaa
or
push
mov
notl
sub
pop
ljmp
pusha
outsl
test
fists
sahf
add
je
mov
dec
cmp
js
mov
les
movsb
inc
cld
mov
inc
cmp
imul
leave
fs
and
ret
mov
jo
inc
daa
js
sbb
add
xchg
xchg
je
insb
addl
jmp
pop
push
jmp
test
call
mov
mov
add
test
push
loopne
loopne
dec
es
shlb
xchg
sub
xchg
rcll
js
jnp
cmp
mov
movsl
leave
xor
jbe
sarl
cmpsb
dec
aam
flds
into
and
cmp
insl
imul
int
inc
add
pop
dec
insl
clc
lcall
push
adc
mov
aad
subb
test
and
lds
xchg
pop
fcmovnb
test
jne
adc
cmp
push
imul
movsl
shll
ljmp
orl
pop
mov
xchg
mov
imul
ds
xchg
fildl
jp
jl
mov
jecxz
pop
and
add
ds
lods
pop
cmp
pop
inc
mov
int3
xor
inc
or
and
idivl
mov
or
cld
add
xchg
push
testl
xchg
push
xor
cmp
xchg
cwtl
and
push
aam
inc
dec
jl
mov
ret
or
lret
pop
xchg
xor
popf
jl
pushl
or
cmpsb
mov
aam
and
incb
es
in
arpl
movsl
push
pop
jbe
loop
into
mov
or
loope
sbb
sub
cmp
sbb
inc
mov
lods
jae
cmpsb
mov
int3
xchg
sub
rcrb
xor
xor
fidivrl
inc
fnsave
jle
or
add
daa
lock
mov
icebp
test
rorb
repz
push
and
jp
xchg
divb
in
push
shrb
test
int3
call
stos
aas
cmp
sahf
cmpsb
xor
into
cmp
out
add
imul
out
mov
mov
inc
mov
and
xor
addb
jo
cli
mov
add
lret
pop
jne
xor
push
xchg
insb
enter
gs
push
out
pop
add
cmp
or
jne
fdivr
and
xor
pushf
imul
cmpb
xchg
lcall
adc
and
ret
bound
and
push
mov
fisttpl
call
jb
pusha
sub
cmp
add
fwait
sbb
and
inc
mov
mov
comiss
es
mov
outsl
xchg
inc
subb
shr
or
cmc
pushf
sysret
or
sti
inc
jb
nop
and
out
int
gs
popa
add
addr16
out
leave
mov
add
xchg
roll
enter
and
shr
arpl
lods
mov
fsub
sbb
loop
dec
mov
scas
and
mov
mov
mov
std
jne
cld
ret
or
out
adc
mov
scas
push
push
mov
xorl
lret
jmp
fsubrl
jbe,pn
repz
loopne
mov
mov
shll
sbb
inc
cmc
aad
add
pop
mov
test
pop
jge
imul
jmp
push
mov
pop
mov
push
lcall
and
daa
jnp
pop
jle
mov
decl
sarl
push
sub
add
repnz
jp
inc
mov
in
jne
mov
mov
popw
and
lods
jge
stc
enter
ficoms
mov
fdivrs
arpl
pop
mov
add
sahf
mov
out
lret
mov
in
divl
cmp
cmpsb
pop
rol
pop
mov
sti
mov
jge
out
jp
cmc
sub
sub
sub
ljmp
jb
fcom
push
sar
sbb
or
mov
dec
loope
add
insl
push
xchg
ror
push
push
xor
mov
iret
stos
push
fidivrl
in
lea
mov
cld
mov
loope
dec
jne
adc
js
adc
mov
lods
stos
fwait
add
or
cmp
adc
dec
fcmovu
loopne
xor
ss
jno
dec
cmp
inc
hlt
mov
jbe
add
rorl
push
inc
mov
cmp
outsl
ret
out
sub
jns
daa
outsl
pop
and
xlat
sahf
std
cmp
pop
cltd
hlt
int
dec
rorb
cmpsl
mov
dec
fs
inc
adcl
stos
fsubrl
cmpsl
cmp
int
pop
rcll
add
sbb
fcmovbe
fwait
in
dec
jne
sbb
addr16
xor
adc
aas
gs
popa
inc
loopne
outsb
add
push
scas
stos
xor
push
pop
daa
ljmp
cld
mov
adc
loope
ss
stc
int
pop
inc
scas
or
push
xchg
popf
jl
sub
inc
add
pop
dec
repz
iret
scas
les
das
add
inc
cmc
mov
mov
out
sub
cmp
ret
hlt
cmc
test
fwait
xor
pop
lahf
jle
sub
jle
pop
fwait
jge
pop
jb
in
mov
fwait
mov
in
stos
test
cmp
xor
or
push
xlat
movsl
fbstp
inc
mov
in
push
xlat
inc
jle
js
jl
mov
mov
push
or
pop
dec
out
out
mov
mov
mov
xchg
in
mov
lock
jno
aas
push
jno
add
sbb
cmp
stc
mov
or
dec
mov
inc
dec
cmp
dec
mov
and
rcll
dec
in
sub
loope
push
sbb
mov
lds
andl
ds
repz
imul
enter
ret
cmc
cmc
jp
imul
pop
fisubl
sbb
pandn
and
gs
filds
rol
les
cmp
out
in
sbb
push
dec
inc
lods
push
es
mov
push
pushf
add
iret
int
pop
mov
push
js
adc
xlat
imul
cmp
adc
or
lods
cs
mov
jbe
or
adc
sti
xor
fistl
dec
shlb
or
and
out
loope
xor
cs
call
cmp
sub
pop
push
rcrb
pop
push
pop
push
fcomps
fmuls
push
insl
mov
aas
loopne
loop
out
push
add
jb
xor
xor
add
xchg
ret
int3
test
dec
sbb
pop
les
adc
cli
addr16
in
inc
dec
out
fcoms
orb
push
loopne
or
lods
or
sar
push
mov
in
rcrb
sub
cld
xor
jmp
xchg
xchg
jbe
idiv
add
xor
add
mov
ljmp
subb
mov
cmp
jge
sbb
out
pop
mov
fbld
and
cli
add
sub
xor
popl
jne
jae
lahf
sbb
mov
dec
mov
mov
xchg
fdivrs
inc
xchg
mov
push
ss
jb
ret
xlat
addr16
adc
or
adc
repz
cmp
fs
fwait
jmp
xchg
xchg
xchg
in
sbb
push
inc
in
ljmp
lds
add
dec
pusha
xchg
test
test
adc
cmp
push
pusha
sub
jnp
aam
je
popa
in
fs
jnp
dec
stc
loope
sbb
mov
inc
test
std
and
pop
inc
jp
mov
cmp
mov
jae
or
or
add
xor
add
scas
movsb
insl
jecxz
adc
cmpsl
int
and
inc
pushf
sub
cmp
lret
gs
mov
cwtl
sbb
testb
jecxz
and
adc
imul
xchg
dec
imul
pop
mov
mov
dec
cmc
sub
mov
jp
jecxz
nop
enter
jnp
push
mov
cld
arpl
pushf
jbe
shlb
sbb
lods
xor
dec
inc
addr16
les
cltd
sub
xor
and
stos
pavgw
icebp
out
mov
push
pmulhuw
push
das
mov
inc
mov
repnz
inc
popa
pop
jmp
xor
daa
rclb
pop
addl
jg
dec
rolb
sub
dec
inc
out
in
push
fisubs
pusha
je
push
ret
leave
addb
cmp
mov
jle
mov
xchg
daa
fldt
sub
adc
xor
hlt
and
pop
xor
sbb
aam
push
imul
pop
push
inc
jp
cmc
xor
in
add
cmpsl
sub
sbb
add
loop
jo
jle
ljmp
incb
jne
pop
push
pop
sarb
dec
xor
outsb
and
add
lret
pop
mov
xor
and
lods
aad
inc
xor
mov
in
dec
lret
jg
pop
icebp
bound
imul
and
and
xor
jb
pusha
outsl
and
daa
mov
adc
fs
fisubrs
shll
add
and
stc
push
lock
faddp
xor
int
jno
inc
mov
mov
icebp
js
sbb
mov
ror
in
int3
or
data16
xchg
out
and
fcoms
mov
in
decl
jo
enter
arpl
es
inc
in
mov
sub
push
and
adc
movsb
je
xor
mov
iret
scas
rclb
mov
out
das
jb
movsl
ret
and
popf
xchg
jmp
ja
cmp
clc
lahf
sahf
hlt
jne
cltd
dec
cmp
ret
xor
test
jl
jmp
xor
test
push
jae
and
cs
pop
lods
jns
push
fcomip
outsb
ret
jbe
je
insl
jp
out
and
push
push
stos
arpl
inc
out
mov
push
or
or
in
shrb
test
push
jnp
jge
mov
in
mov
and
sbb
dec
dec
mov
pop
ljmp
jp
push
inc
std
sub
sbb
pop
push
insb
stos
add
inc
mov
ret
flds
or
inc
in
nopl
jno
jg
ds
mov
jno
test
fcoml
xor
xor
outsl
popf
sub
mov
mov
add
lahf
add
or
mov
pop
dec
dec
outsl
out
jnp
mov
and
stos
adc
and
jae
and
inc
shlb
sub
mov
mov
ss
sbb
dec
movsl
jae
js
lods
jle,pn
orl
jmp
and
add
in
push
inc
stos
mov
or
or
nop
icebp
mov
es
push
in
and
dec
xor
fldl
popa
leave
pop
cmpsl
popf
sarb
adc
scas
sahf
mov
mov
outsl
test
iret
aas
push
sbb
and
cltd
js
flds
sub
insl
mov
pop
out
mov
sbb
popf
pushf
push
gs
cmc
sarl
mov
xchg
pop
xchg
in
add
ja
jae
push
xchg
data16
adc
cld
xor
test
imul
mov
fucomip
pop
pushf
push
jecxz
incl
movsl
or
inc
repnz
ljmp
inc
imul
shlb
jp
mov
test
je
and
call
fldenv
and
cwtl
outsb
cmpsb
inc
mov
and
int3
cld
data16
sti
or
xchg
xchg
out
sbb
iret
lea
orl
xlat
cmpsl
push
dec
jbe
sub
fsubrl
addr16
sbbb
or
cld
sarl
dec
pop
out
cs
sbb
jg
and
mov
add
cmp
dec
jno
rcl
sarb
popa
lock
mov
sbb
sub
nop
adc
ja
out
mov
sbbl
lods
cld
jne
xchg
add
adc
sti
js
add
jecxz
sbb
popf
orb
push
cmp
xor
mov
add
into
jne
out
or
lock
shlb
loopw
pop
mov
sbb
in
jmp
loope
cltd
int3
pop
and
loope
cmpsb
mov
push
adc
xchg
cmp
fstpl
push
push
jle
mov
xchg
out
cld
decb
in
xor
push
xchg
and
aam
jecxz
sub
sbb
cmp
in
icebp
loop
cs
inc
imul
lods
fs
iret
fdivs
mov
lods
sbb
out
arpl
cmpsl
lea
add
rcrl
arpl
push
rorl
out
leave
pop
cmc
popa
or
fcompl
insb
or
mov
pusha
cmp
and
iret
int3
fwait
inc
push
loopne
add
xchg
ja
pop
sbb
xchg
jle
enter
dec
or
cli
cmp
fwait
in
or
roll
ljmp
or
inc
insl
loop
out
mov
sbb
and
adc
cmp
outsb
fld
inc
adc
adc
cld
icebp
sub
ficoml
lcall
pop
enter
data16
nop
test
push
push
dec
in
mov
jno
je
test
shlb
sub
and
dec
shrl
mov
icebp
inc
pop
fistl
sar
or
iret
int3
mov
in
add
in
shlb
lahf
dec
push
cmp
fsub
jmp
push
jle
xchg
jg
addr16
or
sub
loopne
xor
fists
and
fcoms
outsb
inc
nop
adc
les
jg
push
jno
lret
inc
mov
pop
mov
mov
mov
pop
push
lods
les
jns
popa
ss
push
xchg
insl
cld
jbe
adc
mov
int3
push
mov
add
jecxz
ret
mov
test
test
mov
stc
in
fadd
movsb
mov
and
lock
out
ljmp
mov
sbb
mov
insl
jno
icebp
hlt
pushf
cmpsb
orl
call
push
ss
notb
adc
sub
mov
incl
pusha
std
add
imul
pop
sbb
push
fistpl
fbld
sbb
stos
mov
cmp
mov
xor
daa
gs
cmp
push
ja
sub
pusha
pop
and
data16
in
ljmp
jp
int
sbb
lcall
push
adc
stc
cmp
mov
out
mov
pop
sbb
mov
sbb
jno
sbbb
fisttpll
roll
stos
inc
lahf
std
and
sarb
mov
jg
inc
mov
popf
xchg
push
out
scas
mov
mov
movsl
adc
xor
mov
shlb
data16
sbb
sbb
add
push
xchg
popa
out
lods
call
jmp
adc
or
cld
loopne
scas
sub
outsl
xor
popa
push
dec
sub
add
mov
add
loopne
add
aad
not
push
push
enter
mov
and
es
or
pusha
cmp
jbe
cmpsb
cmp
bnd
sub
pop
or
dec
in
cld
push
sbbb
fisubl
scas
sti
call
or
dec
xor
lahf
fwait
pushf
fwait
repnz
mov
pop
mov
xlat
xchg
cld
popf
out
imul
stc
insb
aaa
inc
mov
je
cmp
or
cmp
pop
daa
fisttpl
xor
rcrb
xor
and
fisttps
test
ljmp
xchg
decl
dec
xchg
mov
imul
inc
xchg
out
iret
cmp
pop
pop
fcmovne
mov
mov
testl
dec
mov
or
mov
mov
shrl
and
jnp
jb
jnp
push
lahf
addr16
pop
mov
insl
or
and
push
add
sarb
in
lcall
xor
sahf
insb
mov
icebp
test
loope
adc
lcall
in
cltd
aam
sub
xchg
rclb
ljmp
mov
fistps
clc
test
das
pusha
cmp
dec
pop
xor
xor
jmp
cmpsb
sbb
pop
imul
adc
or
aaa
cmp
repz
outsb
xor
subl
adc
faddl
fadds
das
push
pop
pushf
fmuls
outsb
xchg
xchg
jmp
pop
sahf
dec
enter
mov
outsl
ret
movsb
cmovae
pop
inc
lcall
mov
jl
jmp
sub
test
cmp
mov
mov
loop
push
adc
inc
nop
add
rorl
ret
enter
cld
jl
mov
dec
cmp
movsl
jne
xor
mov
add
mov
jle
mov
xchg
pop
enter
push
or
inc
lcall
or
into
in
inc
repnz
push
inc
cmp
imul
dec
popa
sub
sbb
jb
cmpsl
xchg
push
dec
mov
dec
je
pop
fsubs
and
add
les
pusha
je
divb
jnp
jg
xlat
xchg
push
ja
int3
fwait
mov
inc
push
je
push
loopne
sbb
fs
loopne
jb
and
push
cmp
mov
push
mov
push
pop
adc
clc
cli
testl
mov
out
test
mov
outsb
ja
iret
repz
mov
mov
cmp
cli
jp
jg
jb
jmp
pop
or
or
es
das
dec
jns
rorb
sub
roll
cs
adc
pusha
xor
xchg
mov
sub
sbb
cmpsl
aaa
xchg
adc
shl
mov
jp
or
test
lret
xchg
or
add
inc
xchg
sar
xchg
adc
dec
mulb
aaa
jl
and
mov
mov
mov
sub
lret
rol
stc
jb
xor
or
pushf
mov
lock
outsl
mov
push
outsb
push
sbbb
inc
jne
mov
js
out
push
cmc
sub
mov
and
stc
push
repnz
add
inc
cli
popf
sub
mov
inc
clc
aam
pop
push
je
add
xchg
mov
mov
movsl
xor
push
pusha
dec
push
pusha
int
fstps
inc
cmc
arpl
inc
dec
xor
mov
jecxz
sti
pop
hlt
arpl
ror
scas
rcrb
mov
fnstsw
mov
scas
xor
add
pop
jae
xor
repz
in
rcll
jge
pop
mov
jbe
cmp
dec
and
push
sub
in
sub
lahf
cli
cmp
cmp
xchg
sub
cmp
push
loope
cli
inc
push
jns
int
div
shlb
inc
in
insl
lods
jae
repnz
cmp
xchg
lds
gs
std
inc
push
call
mov
call
jmp
pop
adc
and
leave
jb
adc
nop
pop
shl
add
mov
stc
call
cltd
jecxz
dec
daa
mov
add
xchg
mov
pop
idivl
pop
rolb
movl
jmp
jg
insb
xchg
cmp
pop
sbb
lea
sbb
or
repnz
aas
movsb
pop
dec
add
outsl
out
push
mov
inc
mov
icebp
or
sbb
enter
mulb
lcall
bound
xchg
mov
in
and
sbb
lcall
dec
jae
jnp
or
imul
test
inc
jp
inc
or
mov
add
out
insb
push
stc
mov
cmp
stos
cwtl
cltd
xchg
push
xor
mov
push
xor
and
stos
out
sbb
fwait
fwait
push
pop
clc
std
out
or
push
cmp
dec
sahf
stos
jmp
nop
addl
icebp
and
dec
mov
or
or
pop
nop
int
aad
inc
cmp
sbb
cmp
mov
adc
leave
jnp
pop
outsl
aas
aam
int
std
pop
jmp
sbb
cmp
mov
pop
loop
test
lock
jp
sbb
out
pusha
inc
jne
add
cmc
push
dec
cld
cs
pop
shr
jb
call
mov
inc
dec
faddl
cmp
scas
mov
ss
lods
pop
inc
or
push
aas
or
adc
push
push
xchg
xchg
outsb
out
insb
add
fldl
outsl
jno
mov
mov
test
cmp
adc
add
js
enter
xchg
cmc
add
adc
test
pop
imul
xchg
xchg
add
sbb
cld
push
xchg
js
rorl
scas
xor
outsb
mov
or
add
mov
imulb
sub
aad
sub
repnz
inc
lea
cs
mov
aas
arpl
pop
and
xchg
out
loopne
sbb
jae
push
js
cmp
jne
jno
adc
inc
sub
push
shlb
in
fstl
test
and
dec
pop
mov
push
popa
arpl
leave
fsub
or
repnz
jmp
sbb
test
dec
pop
ja
lods
fildl
jp
rorl
pusha
pop
mov
cwtl
dec
pop
or
xchg
mov
sbb
cmpsb
and
hlt
aad
movsl
mov
cwtl
aad
test
or
push
cmp
lock
inc
ss
mov
out
sub
mov
cmp
popf
sahf
vunpckhps
xchg
mov
call
ret
mov
sbb
jg
je
popa
int
sbb
pop
popa
mov
test
dec
cmp
jne
xor
lret
and
push
jns
lods
es
or
push
je
pushf
pop
jecxz
sbb
notb
movsb
push
faddl
xchg
xchg
in
dec
pcmpgtd
dec
int
hlt
es
xor
out
dec
bnd
jge
sub
sub
icebp
xorl
dec
fistps
imul
lar
cwtl
push
aam
std
dec
jmp
and
push
das
cmp
push
lahf
insb
outsb
lret
pop
cmp
or
adc
lret
jge
aas
js
sub
dec
cs
mov
dec
bound
push
inc
mov
jmp
bound
jae
mov
shl
xor
dec
pop
push
xor
mov
sub
lock
and
sbb
jnp
jp
jnp
int3
inc
out
mov
fimull
pop
sub
cmc
sub
fistl
or
pop
adc
dec
sbb
sbb
fwait
inc
dec
ret
xchg
jns
cmc
push
fiaddl
mov
dec
popf
pop
jmp
out
add
xor
adc
xchg
mov
jae
mov
outsl
shll
xor
popf
and
xchg
sub
mov
aaa
sbb
adc
inc
jnp
push
andb
out
or
pop
scas
sub
movsb
sbb
mov
aad
out
in
js
inc
add
push
in
insb
outsb
pop
gs
push
test
inc
hlt
out
inc
test
jnp
orps
jge
cmpb
jbe
lds
pusha
in
xchg
mov
mov
fxch
mov
mov
js
cltd
mov
lock
lea
jo
cmp
push
mov
push
jbe
lcall
push
jns
mov
adc
in
mov
test
jae
test
jb
cs
shlb
icebp
push
pop
shrb
stc
inc
jns
pop
add
data16
jbe
push
mov
sbb
ja
lcall
mov
cmp
mov
xorb
out
dec
or
mov
sub
sbb
sbb
std
data16
dec
cmc
pop
mov
xchg
gs
pushw
mov
test
movsl
and
lea
pop
adc
dec
jle
arpl
mov
call
dec
cmp
scas
cmp
mull
sbb
cld
and
add
mov
xor
xchg
adc
add
out
nop
add
push
push
jno
cltd
jge
adc
js
fld
outsb
fmuls
inc
enter
out
fcompl
dec
mov
jno
add
out
rcrl
pushf
push
stos
add
jne
add
fisttpll
jmp
fldl
sub
insl
sub
fnstsw
fiaddl
and
mov
in
bound
push
fdivl
fs
adc
push
xchg
movsb
and
out
xchg
ja
adc
adc
push
fadd
push
push
mov
jle
test
inc
xor
out
ds
push
jge
pop
sub
add
movsb
pushl
rorb
mov
inc
jae
out
push
sbbl
mov
cmc
scas
add
pop
ret
push
fidivrs
mov
mov
mov
scas
ret
add
mov
or
mov
xor
shl
and
jmp
dec
xlat
stos
sbb
data16
add
imul
test
bound
mov
or
inc
dec
pop
jmp
scas
adc
push
push
fstpt
xchg
fsubrp
repz
mov
or
mov
ds
jnp
pop
jg
dec
sahf
mov
adc
loopne
xor
xor
std
popa
mov
sub
add
clc
push
or
and
inc
cli
xor
in
sub
or
jb
sbb
arpl
orl
push
in
cmp
dec
jae
adcb
mov
mov
mov
pop
in
std
out
xchg
les
add
pop
loope
mov
and
xor
negb
dec
rcrl
aaa
push
push
mov
xlat
push
push
add
push
mov
insl
cld
fsub
lcall
gs
ljmp
outsl
sub
ds
xlat
and
or
test
loope
add
jo
push
inc
mulb
inc
scas
shlb
sahf
add
pop
or
or
test
add
movb
lahf
push
fcompl
xlat
mov
into
or
lret
das
dec
ja
fnstcw
sub
int
and
mov
std
or
pop
aad
xchg
cmp
or
cwtl
insl
loopne
add
movsl
adc
cmp
fisttpl
xchg
adc
imul
xor
dec
adcl
inc
sbb
leave
dec
adc
rcr
cmovbe
fsub
lds
int3
sbb
add
pop
push
imul
lret
fdivrs
push
xor
stc
sbb
sbb
ret
lret
xchg
sbb
popa
cmp
push
scas
add
inc
push
icebp
dec
pop
cmp
adc
push
cli
idivb
sbb
or
cli
repnz
ficompl
mov
xchg
push
sbb
pop
mov
loop
push
fsts
fiadds
sbb
pop
fst
hlt
cmp
and
ficoml
jge
jecxz
mov
pusha
xchg
inc
cmp
pusha
pop
jae
push
cli
dec
mov
js
xchg
mov
fsubl
and
je
mov
lock
mov
sahf
and
aam
cli
pop
ret
rcr
int
inc
inc
jno
mov
cmp
adc
mov
pushf
jp
jmp
in
xchg
dec
dec
mov
jle
sub
stos
cmp
data16
cld
xchg
aad
scas
popf
jl
clc
cmpsb
mov
test
hlt
adc
xchg
dec
cltd
in
push
lahf
js
cmp
insl
mov
dec
pop
and
or
jnp
sbb
call
imul
jmp
stc
lea
mov
dec
jmp
jp
out
bound
popa
cwtl
jge
adc
dec
jmp
xor
pop
jmp
jns
mov
test
inc
mov
fsin
arpl
fwait
cmp
out
rorl
cmc
gs
dec
add
jo
outsl
nop
xchg
iret
sub
out
mov
or
push
subl
push
inc
scas
xchg
push
sti
push
sbb
test
cmp
popa
jmp
movsl
mulb
sub
inc
sub
les
lods
sub
pop
xor
add
popf
addr16
push
push
sub
push
inc
pop
jge
pop
andl
pop
xor
dec
sub
cmpsl
fstps
xor
gs
sbb
decb
jbe
push
pushf
push
sub
mov
mov
and
repnz
pop
lds
lret
jb
adc
cmpsb
mov
and
insl
dec
mov
push
push
or
push
jnp
cmp
enter
adc
cmp
test
push
xlat
cmp
out
mov
xchg
add
test
xchg
mov
add
fistl
lret
mov
dec
xchg
cmpsb
xor
clc
aam
xchg
cmpsl
mov
popa
mov
mov
and
dec
sbb
js
ficoms
fs
ss
rorl
pop
mov
cmp
fwait
mov
cmp
push
jae
shlb
mov
mov
iret
xchg
push
popf
mov
push
push
xchg
mov
xchg
add
push
and
mov
je
fidivrs
pop
daa
ljmp
icebp
ljmp
pop
stos
jne
add
clc
lcall
add
test
inc
aaa
inc
mov
mov
arpl
inc
pushl
inc
dec
and
push
cmp
sahf
cmp
cltd
inc
add
loopne
mov
xchg
aas
rorl
sbb
es
sub
repz
pushf
adc
bound
sahf
dec
xchg
ret
int3
ljmp
scas
lock
dec
xor
inc
jl
ss
mov
fwait
enter
lcall
sete
lods
jecxz
xchg
repnz
dec
fidivrl
rcrl
rorl
popa
dec
int
mov
outsb
fsubs
dec
fwait
hlt
inc
mov
sub
stos
in
repnz
add
test
xchg
sahf
xor
push
cwtl
mov
mov
xor
sarb
jge
test
movsb
jbe
cmp
mov
pushf
xchg
shll
lock
sub
insl
cmp
sub
cmp
xorl
repz
aaa
mov
imul
xor
popf
hlt
out
or
outsb
cmc
repz
mov
inc
adc
test
aad
dec
jg
jecxz
lods
and
xchg
mov
sahf
xchg
jp
dec
in
lea
sub
imul
aaa
ret
xchg
movsl
jl
adc
mov
std
out
push
push
dec
pop
mov
je
mov
test
xchg
fcompl
aas
roll
mov
sbb
aas
in
lods
sub
push
lods
rcr
jne
pop
lods
test
dec
pop
jmp
jns
xchg
pop
pop
xchg
push
ds
shr
push
or
cmpsl
xor
mov
imul
pop
cld
repz
es
sbb
ret
das
dec
cltd
gs
mov
mov
fadds
imul
mov
sahf
push
push
xchg
sbb
ret
test
mov
in
stc
sbb
aaa
push
insb
test
pop
xor
rorb
or
fninit
add
ja
sbb
loop
push
sbb
xchg
test
test
leave
insl
cmp
imul
insl
arpl
xchg
jbe
xchg
inc
and
jle
or
cmpsb
xchg
mov
testb
notb
divb
out
mov
neg
insl
imul
movsb
cmp
mulb
jp
sahf
in
mov
mov
daa
iret
sub
lods
pusha
lock
int3
jge
imul
xchg
gs
stc
mov
mov
pop
or
rorb
pop
daa
xor
inc
mov
pusha
es
cmpsb
mov
js
adc
sbb
sub
sti
pop
or
xchg
and
or
xor
xor
mov
stc
mov
call
and
pusha
mov
inc
cld
xchg
and
into
jg
sbb
stos
jge
mov
pusha
lahf
int3
and
cmp
popa
pop
jle
xor
scas
aad
rolb
dec
push
daa
xlat
cmp
lock
pop
aad
rorl
xor
iret
subb
jle
or
cmpsb
mov
call
push
dec
cmp
jne
xchg
out
stos
hlt
pop
das
sbb
lock
fisubs
mov
push
outsb
jge
mov
xchg
pop
test
rcrl
mov
push
sbbb
lock
fcompl
fcoms
add
mov
and
int3
pop
in
je
dec
xor
cltd
dec
js
pusha
out
pop
pop
mov
bound
pop
mov
mov
pop
stos
xchg
pop
cwtl
xor
xor
daa
and
push
or
pushf
mov
out
stc
ds
shll
xchg
ret
push
xor
gs
jae
dec
pop
add
dec
sub
call
inc
pop
dec
adc
cli
gs
sub
dec
scas
mov
fld
lea
jb
cli
icebp
cmpsb
out
jg
and
sbb
lock
or
or
adc
or
pop
popa
mov
jecxz
and
lods
push
jae
out
push
pop
xchg
push
arpl
add
roll
or
inc
mov
cmp
leave
mov
out
pop
pop
cmp
gs
mov
sahf
sub
int
pop
and
jge
adc
je
in
mov
jns
and
xlat
push
inc
ret
cmp
pusha
push
scas
mull
mov
xor
cmp
mov
inc
mov
pop
pop
sub
leave
sahf
push
sub
cmpl
clc
sahf
and
movsl
rol
jno,pn
and
and
sub
push
roll
fld
xchg
xchg
fdiv
or
and
push
sbb
add
xor
xor
loope
jno
sbbb
pushf
lcall
das
push
pop
push
scas
jo
andl
pop
scas
pop
add
and
rcl
pop
fs
test
popf
shlb
mov
pop
xchg
adc
pop
jne
popa
mov
icebp
add
inc
or
std
outsb
add
xchg
sbb
popa
mov
mov
push
iret
sarl
gs
ss
adc
ds
fdiv
outsb
lds
add
dec
cmova
push
pop
and
call
inc
orl
inc
or
sub
cli
add
inc
jne
sbb
jo
jo
push
stc
add
mov
loop
mov
mov
xchg
pushl
rcrb
sbb
add
dec
jne
mov
jge
ja
sub
mov
pop
test
jbe
ds
ret
js
dec
ds
jnp
arpl
xchg
aad
inc
dec
add
out
stos
es
rclb
mov
lds
fidivl
jnp
fwait
js
fists
inc
dec
in
sub
mov
add
js
in
cmp
sbb
or
mov
dec
fmul
inc
cmpb
mov
sub
pop
mov
mov
add
mov
sub
lock
and
jmp
cltd
cmp
mov
jmp
aam
push
cmc
ret
adc
jle
xchg
cmp
bound
xorl
xchg
enter
dec
nop
sbb
or
fldt
shll
into
dec
and
push
add
xor
xchg
shl
cmp
loopne
sbb
or
mov
jo
aad
pusha
jae,pn
jne
cltd
iret
jnp
xlat
mov
mov
loop
xchg
lods
jae
insb
mov
inc
out
out
insl
repz
xchg
lds
lcall
loope
ds
dec
dec
pop
or
dec
out
push
sbb
or
lahf
inc
mov
push
repnz
aam
mov
add
sbb
adc
add
inc
out
mov
loope
loope
and
outsl
mov
push
stc
pushf
inc
repnz
add
dec
adc
ret
adc
or
es
das
push
push
std
mov
aam
inc
in
pop
test
and
xchg
cld
mov
xor
and
push
jne
jg
ss
dec
push
dec
pop
ret
xor
icebp
push
or
sub
cbtw
loope
jbe
outsb
lahf
adc
sbb
mov
push
stos
scas
mov
iret
daa
add
dec
mov
cmpsb
xchg
mov
aam
repz
imul
pop
addr16
stos
test
add
lret
fsubrs
dec
or
frstor
clc
sbb
jne
jo
data16
xor
iret
xor
ss
xchg
jle
add
mov
ret
and
adc
jne
loop
push
jge
pop
dec
jge
adc
js
lea
pop
shr
cli
pop
notb
cli
pop
mov
mov
and
sbb
cs
push
test
mov
mov
inc
xchg
repz
es
xchg
cmpsb
hlt
scas
hlt
scas
mov
das
mov
xor
das
push
dec
jmp
dec
incb
outsl
mov
sub
lret
gs
jge
xchg
idivb
repnz
daa
pop
outsb
adc
into
mov
roll
inc
lods
xor
call
fs
jns
or
in
aad
aas
inc
add
pop
jl
push
call
icebp
push
push
push
sbb
fstl
mov
aam
jge
push
mov
fidivs
out
jns
mov
mov
std
push
out
lds
mov
loope
orl
sbb
push
gs
ret
adc
pop
add
adc
xchg
sub
push
ret
mov
or
pop
jnp
lahf
cs
push
sbb
stos
and
cli
mov
imul
push
bound
jl
vpunpckhbw
mov
dec
push
sbb
pop
cwtl
mov
ljmp
outsl
pop
lods
push
dec
data16
jne
leave
insb
stos
cld
repz
inc
inc
fadd
dec
and
xchg
mov
ljmp
dec
pop
dec
repnz
loopne
popa
sarl
or
jne
sbbb
cmp
gs
mov
or
dec
addr16
and
adc
mov
xchg
stc
xchg
imul
mov
or
push
fldcw
shll
icebp
test
sub
cmp
cltd
push
mov
cmp
lret
adc
cli
mov
mov
fsubrp
xor
daa
dec
mov
sub
xchg
cmpsb
fsubr
sbb
fnsave
inc
jo
jl
add
test
mov
loop
mov
shrb
xchg
pop
cmpsb
adcb
ret
add
mov
pushf
xor
aad
xchg
out
sub
adc
leave
mov
xchg
cli
popl
or
lcall
jbe
xor
movsl
adc
fists
inc
dec
cltd
add
mov
ja
cwtl
xor
dec
outsl
mov
aas
jne
dec
rep
loop
ret
sbb
or
in
fdivp
xchg
es
xor
push
sub
out
add
push
mov
jp
push
jne
mov
movsb
in
es
or
cmpsb
cli
push
cmp
sahf
cltd
std
push
inc
xchg
pushf
iret
hlt
inc
jge
pop
ss
or
outsb
pusha
and
pop
sub
leave
mov
mov
xor
mov
mov
xchg
pop
mov
js
pushf
pushl
lcall
ret
push
xor
imul
adc
rclb
push
les
movb
cld
cltd
jge
cmpsl
push
popf
add
rclb
fnsave
xchg
mov
pushf
hlt
sub
dec
jbe
xchg
scas
jb
jecxz
xchg
int3
jb
mov
inc
xor
add
sbb
into
xor
out
cmp
mov
mov
pop
add
fmuls
addr16
dec
add
push
mov
les
repnz
add
sub
das
xlat
sbb
pop
xchg
mov
sub
push
sub
inc
dec
loope
enter
add
sahf
fildll
test
mov
or
iret
mov
fwait
aaa
subb
push
lret
cli
mov
jnp
test
jae
mov
jmp
adc
insl
sbb
push
and
jecxz
stos
ja
push
xor
add
jns
outsl
xchg
aam
sbb
cmp
mov
fildll
inc
cltd
mov
loope
and
jmp
mov
sahf
inc
add
jp
pushf
fs
es
adc
push
mov
cltd
hlt
and
push
jbe,pn
lret
push
adc
xchg
stos
inc
arpl
sbb
dec
mov
sbb
cs
push
sbbb
adc
xchg
sbb
mov
fs
cmp
and
pop
imul
mov
lea
in
ficompl
adc
push
jge
ja
mov
push
xchg
mov
hlt
es
inc
ds
sti
lds
mov
or
aaa
fsubrs
std
mov
inc
in
pusha
and
lock
sub
movsb
mov
in
arpl
clc
iret
aas
aad
in
nop
lret
loop
inc
or
cmpb
push
mov
out
sahf
cmp
mov
xchg
jl
sub
pop
push
mov
popf
dec
rorb
cmp
ja
sbb
mov
push
scas
push
xchg
mov
push
or
push
sub
data16
sbb
mov
js
repz
cmpl
xor
dec
pop
mov
ficoms
xlat
imul
hlt
jecxz
daa
mov
lahf
fnop
decb
mov
int
sarb
test
pop
push
adc
enter
mov
pusha
jbe
sbbb
adc
adcb
add
loope
jb
scas
pop
jns
mov
insl
mov
xchg
cli
push
sbb
cmp
cld
testb
negb
lret
das
jg
dec
pop
out
fnstcw
dec
psubw
dec
daa
fwait
xchg
push
popa
jne
sub
js
sbb
push
outsl
inc
mov
push
lea
xchg
sbb
movsb
jmp
aaa
lret
jge
aam
mov
dec
pop
xchg
cmpsl
fucomip
jns
dec
mov
aad
and
aas
shl
pop
fs
imul
sub
fs
int
movsb
jle
inc
clc
out
cltd
xlat
iret
cmp
mov
imul
xchg
push
ds
inc
adc
xchg
test
push
jns
and
mov
jae
aas
xor
clc
jnp
das
and
and
mov
sub
or
test
std
pop
imul
pop
in
jae
ret
adc
cmp
stos
jbe
pop
xor
cmp
cli
mov
push
sbb
xchg
xchg
xchg
imul
adc
cltd
xchg
cwtl
xchg
ljmp
fsubl
lret
and
mov
rol
pop
mov
popa
push
sub
push
or
ret
lret
mov
mov
adc
or
pushf
adc
lcall
ret
sub
ljmp
bound
xor
push
adc
pop
in
add
in
push
xchg
leave
push
sub
lret
into
push
or
xor
cmp
gs
mov
dec
cmpsb
or
aas
sbb
enter
insb
das
add
sub
pop
hlt
jecxz
mov
in
orb
movsl
add
mov
scas
xchg
push
xchg
mov
mov
fisttps
arpl
dec
dec
outsl
sub
jb
sub
push
pop
cmpl
enter
ljmp
push
les
xlat
lds
aad
adcl
movsb
lahf
or
cmp
jp
mov
add
stos
xchg
and
es
shll
jo
cs
jge,pt
push
imul
hlt
adc
rclb
or
add
jbe
in
cwtl
ss
imul
xorl
fwait
pop
pop
cmp
xchg
mov
sahf
and
add
cmp
int3
dec
xor
and
xchg
xchg
xchg
jmp
sub
and
mov
push
outsl
data16
addb
adcb
leave
fadd
or
sbb
data16
out
inc
inc
adc
push
xchg
sbb
mov
pop
and
push
sub
loopne
dec
ljmp
cmp
push
push
dec
test
shlb
xor
mov
xchg
pop
and
mov
mov
jno
sbb
adc
xchg
shrl
xchg
sarl
mov
mov
lret
rcll
pop
int
ja
jmp
insb
data16
lret
insl
pop
mov
push
mov
test
lahf
cmp
xor
add
push
push
or
sub
dec
aaa
or
out
aam
mull
cmc
mov
ljmp
iret
or
cmp
inc
jg
mov
ret
xor
xchg
or
fdivp
mov
push
fldt
xor
sub
dec
shrl
mov
mov
test
scas
mov
fistpl
inc
cmp
xor
cli
in
xor
xchg
cmp
sbb
dec
push
outsl
cli
es
in
sbb
mov
insl
test
cmp
aad
jl
mov
pop
dec
out
or
push
jb
test
and
ret
xor
sbb
popa
stos
cs
and
pop
mov
mov
xor
push
jne
mov
pop
sti
dec
lods
jne
ror
mov
push
test
in
lret
mov
cmpsb
into
int3
cmp
sbb
call
xchg
cmp
push
jl
push
sbb
cmp
cmpsb
into
jb
mov
cwtl
sub
mov
scas
xchg
dec
mov
cmp
cmp
xchg
sbb
mov
loopne
mov
sbb
jl
gs
ror
add
aaa
das
test
mulb
sahf
imul
push
jno
pop
lret
movsl
cmp
push
or
popf
sbb
in
in
aas
xchg
hlt
rcrl
xor
lods
and
pop
sbb
xchg
mov
push
je
mov
pop
sbb
push
xor
and
out
inc
sti
dec
sbb
fs
rolb
enter
sarb
push
dec
lods
xchg
push
lahf
push
jno
lahf
stc
cmc
in
mov
sub
adc
or
pop
dec
ss
push
test
push
xchg
mov
pop
and
lahf
mov
bound
sbb
dec
dec
ljmp
cmpsl
call
popa
lods
inc
iret
aam
mov
push
and
ss
mov
and
cmpsl
dec
pop
sub
xchg
mov
std
xchg
inc
iret
pop
xchg
scas
jnp
hlt
or
sti
inc
aam
aad
fs
mov
aaa
andl
sub
je
mov
jge
hlt
inc
outsl
pusha
mov
jmp
add
push
fistps
push
aas
xchg
jno
add
sbb
mov
js
pop
jge
jge
imul
fstps
adc
dec
jo
outsl
xor
insb
pusha
mov
xchg
xchg
repnz
push
mov
int
sub
push
sarb
mov
das
lahf
add
out
sub
lahf
out
movsl
test
pop
adc
mov
outsb
scas
les
add
push
shl
ja
sub
adc
dec
push
jns,pt
outsl
inc
sbbl
adc
fldcw
push
inc
mov
push
inc
out
inc
xchg
dec
mov
das
adc
pop
pusha
fldt
fsts
add
inc
ss
mov
mov
mov
or
aad
out
das
pop
mov
popf
lcall
in
push
mov
xchg
and
rorb
cmc
adc
xlat
push
mov
mov
adc
sub
dec
fistpl
and
dec
movsl
nop
pop
pop
jl
sbb
hlt
fidivrl
and
rcrb
leave
iret
push
jnp
fdivrs
sub
das
inc
into
mov
popa
xor
mov
dec
push
adc
test
std
and
mov
mov
fs
test
pop
push
pop
cmp
mov
dec
cltd
insb
lret
imul
lret
pop
outsb
mov
mov
xor
cli
out
xchg
xor
scas
es
rcrl
xor
aam
inc
mov
mov
divb
push
inc
dec
mov
stos
not
stos
out
je
daa
mov
pop
push
stos
das
mov
jge
jno
outsb
mov
mov
or
mov
jmp
sub
jmp
test
cmc
adc
pop
inc
out
stc
rclb
or
cmp
cmc
jbe
sbb
stc
fisttps
xchg
sub
jmp
jbe
push
adc
push
outsl
mov
repnz
js
filds
adc
cmp
pop
pop
fs
dec
add
or
gs
loopne
leave
gs
sub
jo
repz
or
aas
ds
mov
loop
lock
push
aas
lret
mov
mov
jae
cmpsb
xlat
dec
out
push
ret
inc
out
jnp
xor
push
sub
sahf
inc
xchg
xor
pop
adc
sbbb
dec
jb
fwait
inc
fsts
mov
cmc
fs
cwtl
popf
mov
xchg
jmp
stos
pop
push
add
lds
cmpsb
and
add
decb
aas
insl
insl
fildl
cltd
cld
xchg
push
xlat
jbe
push
bound
adc
sbb
adc
out
or
out
orb
imul
or
cmc
bound
adc
in
adc
cmc
movsl
imul
xor
pop
or
sahf
call
lahf
inc
jmp
sub
pop
fnstcw
pop
je
sub
mov
lahf
mov
in
sbb
adc
fcoms
ret
jge
jbe
dec
scas
adc
in
mov
sbb
jp
xchg
jnp
lods
outsb
mov
sub
ret
mov
xchg
cmp
lcall
leave
push
addr16
jno
push
push
dec
out
sbb
lock
pop
pop
leave
fistps
cmp
fcomps
sbb
cmpsb
jne
sbb
lcall
xor
movsb
lock
dec
or
and
sbb
es
push
stos
test
mov
xchg
inc
in
rolb
push
or
push
outsl
popf
mov
inc
shrb
ja
sub
leave
add
push
int3
sub
rol
xchg
shlb
call
and
cmp
aas
sbbl
push
into
loopne
in
gs
dec
lods
mov
pop
jno
cmp
sub
xchg
and
sub
xchg
aad
bound
pop
sbb
jle
mov
mov
sbbl
push
in
fnsave
xchg
cmp
andl
mov
imul
outsb
lcall
add
sbb
xor
fnstenv
shlb
lret
pushf
and
pusha
dec
int
pop
test
in
dec
xchg
mov
lahf
inc
cs
mov
jl
mov
inc
xor
int3
add
pop
sahf
fcomp
xor
cltd
lahf
pop
push
out
movsb
scas
push
int
mov
inc
mov
mov
stos
push
inc
xor
xchg
icebp
aaa
popf
xchg
jne
add
sub
xor
push
cld
stos
gs
std
dec
dec
cmpsl
jmp
and
mov
loope
rclb
mov
jle
insl
lea
cmp
add
fcoml
addr16
out
imull
loop
stc
or
xor
cs
ja
mov
sub
add
push
mov
testl
in
repz
jae
out
add
push
push
sahf
sbb
sbb
or
jns
xor
mov
aad
mov
test
push
cmp
push
jnp
sahf
in
push
pop
jl
xchg
insb
sbb
lods
dec
adc
jne
push
stc
aad
push
sbb
or
fs
and
aam
aam
faddp
lcall
int
sbb
orps
push
xchg
push
pusha
iret
cmp
hlt
mov
jmp
sbbb
mov
xchg
notb
cmp
filds
add
incb
push
stos
cwtl
lea
ljmp
jbe
adc
lods
sub
xchg
addl
into
stos
fwait
cli
out
pop
cltd
imull
stc
ret
lcall
inc
subl
mov
sbb
popf
je
adc
xchg
pop
lock
xor
sub
xchg
add
push
ss
addr16
and
pop
jno
sub
push
xor
in
sahf
insl
fisubs
shlb
ficomps
cmp
lds
dec
xchg
push
testl
dec
nop
hlt
pop
repz
cs
and
push
flds
pop
ljmp
test
insl
cmp
nop
and
dec
jle
lcall
xor
insb
sub
sbb
aaa
repnz
popf
pop
and
cmpsl
inc
or
xchg
sub
inc
jecxz
es
cmc
pop
hlt
outsb
lock
dec
cmc
int
or
push
test
sbb
dec
cmpsb
call
dec
pusha
push
inc
adc
xor
imul
push
rclb
out
pop
pop
adc
outsb
push
das
mov
daa
push
mov
mov
adc
mov
dec
dec
ds
or
pop
cs
add
and
and
mov
pop
pop
add
loop
xor
inc
mov
je
mov
xor
bound
sub
jo
int3
push
pop
fnstcw
lock
add
rol
ffree
int
xor
xchg
jb
sub
outsb
cmc
and
and
add
sub
cmp
data16
fsubrl
add
cmpsb
pop
divl
and
sub
pop
cmp
sti
jecxz
repnz
cmp
test
mov
cmp
pop
jmp
orb
inc
push
jg
aas
fwait
out
add
adc
fistpl
int3
and
mov
mov
adc
and
or
sub
jae
outsl
mov
insl
xor
sbb
aad
subb
xor
mov
push
ret
mov
lock
leave
adc
mov
sub
cltd
mov
fsubrs
cltd
aaa
stc
sbb
inc
popa
pop
movsl
mov
mov
xchg
jge
adc
icebp
xchg
rorb
xlat
jbe
and
int3
add
aam
hlt
jns
ds
hlt
mov
sub
aas
jecxz
sub
push
into
jg
fmul
lcall
xrelease
sub
add
iret
adc
dec
and
jecxz
push
les
mulb
mov
xlat
ljmp
ret
ror
xchg
test
xchg
rorl
mov
xchg
mov
fdivrs
das
push
push
test
xchg
push
dec
jecxz
jno
or
scas
jp
roll
sbb
cwtl
sub
mov
add
or
fistpll
jg
mov
dec
and
aam
inc
addr16
push
cli
adc
into
and
push
pop
popa
rcl
and
pop
inc
and
cli
lcall
jp
sti
loop
dec
or
push
test
shlb
xor
sub
xchg
nop
xor
scas
imul
popa
or
mov
fisttpll
sti
out
out
jecxz
mov
sub
sbb
lds
or
fs
xor
mov
xor
lret
mov
jle
xor
imul
fidivrl
mov
lds
adc
pop
jmp
hlt
fisubl
adc
jmp
ss
bound
xchg
pop
popf
inc
mov
daa
mov
lahf
das
rcr
fcomp
cli
fincstp
pop
mov
adc
push
pop
add
mov
scas
aam
cltd
mov
jg
shrl
jne
scas
mov
ffreep
nop
hlt
lock
or
and
js
ret
mov
add
ss
xor
ficompl
pusha
and
shlb
rcrl
adc
loop
mov
movsb
xchg
inc
or
fsubr
cmpsb
rclb
stos
arpl
shr
out
xor
xchg
outsl
in
in
cmpsb
rolb
cmp
xlat
mov
jg
daa
imul
add
push
test
jo
js
push
cs
addr16
cmpsl
in
fwait
insl
xchg
or
jae
cmpsb
addl
out
test
cmpsl
jmp
sahf
cmp
sub
or
add
jg
ficompl
repnz
movsb
scas
push
sub
xor
clc
mov
push
dec
pop
push
test
mov
or
jno
jae
out
ret
or
scas
movsb
cwtl
pushf
or
cmp
scas
negb
pop
test
fwait
hlt
in
outsl
pop
and
lock
mov
das
mov
cmpsl
cmp
jmp
push
adc
sub
pop
sbb
push
xchg
loope
test
mov
mov
in
popa
out
stos
xchg
repnz
lock
loope
cld
ss
push
adc
fwait
test
xchg
jmp
jl
jecxz
pop
int3
aaa
xchg
and
xor
daa
pop
push
or
imul
sub
xlat
loopne
out
push
xchg
and
inc
cmp
xor
in
xchg
cmpsl
xchg
xchg
mov
insl
cmpsb
mov
push
loop
fstl
xlat
subb
push
pop
scas
iret
mov
and
push
loope
out
sti
mov
inc
sub
jne
lds
jp
out
repz
pop
mov
pushf
inc
gs
rcr
xorl
repnz
pop
arpl
xchg
and
inc
cs
or
lcall
js
imul
int3
fwait
testb
pop
mov
mov
imul
dec
sahf
adc
cmp
mov
add
jmp
int3
adc
jb
in
pop
jp
pop
enter
imul
in
xor
mov
loop
jnp
adc
cmpsb
jno
divl
or
es
lods
aaa
inc
lret
test
adc
lods
push
pushf
mov
sbb
sarb
mov
cmp
std
xchg
xchg
xorl
lret
inc
iret
lret
sbb
call
jb
push
scas
dec
cmp
idiv
mov
add
addr16
insb
jbe
push
inc
das
pop
inc
jnp
mov
push
ds
xchg
fs
ja
inc
popa
jp
data16
dec
cs
pop
lcall
pop
mov
fdivrl
pop
lods
cmc
mov
ss
push
or
int
jb
aam
sbb
cltd
mov
xchg
push
lods
xchg
lods
movsb
add
adc
or
inc
or
movb
addr16
int
sbb
jnp
mov
sbb
ja
jo
je
mov
loop
xor
or
inc
pop
adc
sahf
xor
js
push
sbb
pop
push
inc
xchg
dec
push
daa
std
out
pusha
sti
and
cmp
lahf
fmul
mov
xchg
lret
and
jb
inc
decl
sti
inc
dec
ja
pop
and
aaa
add
xor
add
sub
imul
ljmp
push
xor
dec
mov
xchg
lahf
push
xor
sahf
in
cmp
dec
mov
cmp
jle
xchg
dec
dec
sub
scas
jg
ja
sub
test
mov
movsb
pop
bound
mov
mov
sbb
dec
repnz
stc
adc
dec
jae
ror
movsb
imul
jge
dec
lea
shr
cmp
nop
and
lods
cwtl
test
out
loop
fisubrs
movsl
fdivrl
and
cli
mov
mov
mov
mov
fs
push
sbb
clc
inc
daa
pop
mov
mov
dec
int
pop
iret
fdivs
les
add
je
shr
sarb
push
pop
decb
add
xchg
push
stos
dec
mov
iret
and
xor
negl
inc
and
cmp
sti
rcl
inc
addb
jl
xor
std
popf
scas
inc
mov
mov
cmp
test
jo
in
das
pop
arpl
repnz
and
xor
arpl
push
push
pop
pop
mov
mov
cli
cmp
sub
push
js
imul
sub
and
add
data16
jmp
sub
data16
pop
push
pop
and
lods
mov
xor
popa
addr16
push
insb
jge
xlat
add
xchg
or
mov
cmpsl
jbe
leave
or
mov
in
test
jno
jns
xchg
cmp
push
idivl
and
in
das
or
mov
cmp
scas
movsb
les
pop
fdivr
aam
dec
scas
adc
xor
push
push
inc
negb
add
xor
add
dec
inc
add
stos
cpuid
pusha
dec
add
nop
jg
pop
xchg
jns
out
adc
adc
pop
push
cli
jge
jno
jg
xor
je
sub
jae
psubsw
hlt
push
cwtl
jge
jp
lahf
or
test
sub
cmp
mov
jmp
pop
xchg
push
stc
clc
mov
add
mov
adc
inc
pop
rcrb
and
icebp
ret
int
insl
pushf
push
jo
cli
push
push
xchg
or
mov
lods
mov
mov
sub
dec
mov
out
xchg
dec
jmp
imul
cltd
mov
mov
inc
add
gs
sub
test
jg
loope
int
cmp
fcmovbe
andl
cmp
sbb
mov
sbb
jecxz
lret
jb
or
int3
addl
dec
ljmp
adc
sahf
jp
fsubr
scas
dec
and
jle
adc
rcrb
mov
cmc
decb
xchg
pushf
in
das
dec
sbb
int3
int
sub
movaps
inc
lods
pop
push
xchg
sbb
movsb
hlt
icebp
and
cli
insb
push
inc
je
aaa
mov
and
push
insl
pop
loopne
arpl
inc
fstpt
mov
repnz
sub
jg
decb
inc
and
int3
push
sub
adc
out
pop
pop
ljmp
push
js
jmp
scas
frstor
vfrczpd
mov
mov
dec
outsb
sahf
inc
pop
and
adc
or
mov
cltd
pop
std
in
jo
inc
jne
lret
jmp
adc
bound
stos
xlat
iret
cmpsb
mov
push
jle
adc
xchg
add
and
push
sbb
mov
pusha
lock
jns
xchg
jle
xor
dec
jns
jl
jg
loope
xchg
jb
stc
clc
add
cli
iret
cmp
adc
cmc
addr16
mov
pop
stos
icebp
mov
leave
xchg
xchg
jbe
mov
loop
rcll
pop
sbb
into
mov
stos
andb
or
testb
shlb
cmpsb
sub
das
sahf
leave
push
stos
call
fldcw
adc
sbb
sbb
sti
cmp
iret
push
mov
fstpt
cmp
icebp
push
jmp
sub
dec
int3
cmp
fnstenv
pop
fidivl
inc
mov
jns
dec
mov
adc
xor
cmp
lcall
push
pop
js
xor
fidivrl
movsb
les
scas
outsb
push
and
xor
daa
jnp
pop
aad
loop
mov
outsb
loopne
mov
sbb
and
jne
fdivl
sbb
stc
aad
lds
inc
jp
pop
xchg
notb
js
fs
movsl
sbb
je
or
aam
mov
int3
loop
popa
jnp
cld
out
out
ds
arpl
or
sbb
pop
and
mov
jp
push
aad
jo
mov
in
in
or
mov
mov
pop
cmp
pop
add
mov
bound
pop
xor
test
cmpsb
inc
ret
xchg
fs
roll
pop
outsb
insb
mov
mov
in
hlt
xchg
outsl
push
add
loop
cmp
es
aad
in
fdiv
pop
mov
xor
hlt
and
scas
cmp
jle
pop
fimull
push
fildl
stc
sub
push
or
adc
jnp
push
push
mov
dec
or
aaa
adc
cmpsl
imul
mov
sbb
ds
jbe
or
cltd
lahf
cmc
call
adc
fidivrs
fidivs
pop
cltd
loope
dec
and
fnstcw
arpl
mov
push
aas
mov
testl
mov
test
in
testb
mov
dec
loope
mov
cmp
in
or
jnp
fs
loope
aaa
movsl
es
inc
repnz
aad
cld
xchg
sub
loop
xchg
jg
insl
cwtl
and
insl
shr
pop
jmp
mov
mov
xchg
mov
out
adc
push
sbb
dec
hlt
in
sahf
outsl
repnz
sub
xchg
xchg
add
mov
imul
shlb
sbb
add
cmp
mov
mov
or
popf
push
loope
js
sbbb
add
push
loopne,pn
lahf
testb
lock
out
xor
and
mov
jecxz,pn
pop
sbb
gs
xor
jmp
jnp
arpl
mov
int
rol
aad
or
jb
outsl
hlt
push
rcl
bound
adc
xchg
in
mov
add
stos
cwtl
adc
fadds
stc
jb
cmp
into
movsl
pshufw
fmull
adc
jne
stc
in
jae
repnz
out
scas
xor
repnz
shll
xor
and
setle
jno
cmp
and
aaa
push
push
in
repnz
fwait
jns
outsb
adc
gs
xchg
jl
mov
pushf
insb
imul
xor
imul
out
int
int3
or
xchg
mov
cvttps2pi
xchg
adc
jne
sahf
adc
cmp
jecxz
and
push
cmp
stos
mov
repz
xchg
icebp
out
and
jns
cli
mov
lret
cmp
cmp
aaa
lock
pop
push
mov
mov
xor
inc
add
in
mov
outsl
mov
ja
scas
je
mov
ss
xor
push
jne
xor
mov
aam
mov
and
xchg
mov
dec
adc
mov
aaa
adcb
push
pop
lods
es
outsl
or
xchg
mov
cmc
mov
adc
add
movsb
or
insl
and
scas
cmpsl
fists
pop
mov
xchg
sub
enter
inc
gs
lods
cmpsb
pop
or
jle
mov
xor
add
pusha
pop
adc
popf
sarb
or
imul
pusha
jno
pop
add
dec
jge
test
repz
mov
pop
movsb
int
push
push
jo
cmp
xor
fidivs
stc
pushf
mov
cmp
sbb
js
mov
push
jb
jecxz
aad
add
pop
repnz
cld
mov
dec
dec
lea
sub
std
insl
lret
cmp
loope
push
mov
std
bound
addl
xchg
jns
fdivrs
push
aas
out
adc
js
call
lret
mov
inc
inc
pop
scas
fnstenv
push
sub
gs
adcb
gs
js
push
ret
and
jbe
scas
adcb
add
sbb
xchg
push
daa
add
add
sub
adc
pop
test
popf
cmp
jne
cmp
push
mov
nop
jp
mov
adc
aad
pop
sub
add
stc
int
stos
and
xchg
xor
fisubs
popf
iret
push
je
adc
mov
and
and
sbb
push
xchg
xor
fwait
out
mov
mov
mov
xchg
dec
push
xchg
add
mov
dec
ds
dec
dec
mov
in
mov
jb
sbb
aas
out
popa
imul
cmc
add
mov
push
jnp
mov
clc
loope
std
cld
push
mov
sub
xor
dec
adc
xchg
loope
pop
jbe
jns
ljmp
jno
and
mov
jne
fwait
pop
jne
hlt
and
dec
mov
pop
int3
jmp
mov
scas
iret
dec
pop
cltd
sub
dec
dec
imul
insl
push
pop
lret
add
rclb
mov
xor
or
aas
xchg
enter
inc
cld
hlt
inc
addr16
mov
nop
popa
data16
xlat
mov
test
dec
jbe
pop
sbb
stos
icebp
gs
icebp
inc
sbbb
das
push
cmp
mov
movsl
mov
in
xchg
pop
loopne
cmp
adc
push
cmp
idivl
sbb
stc
aas
iret
cmp
testl
mov
cwtl
es
ss
jnp
pop
insl
inc
sub
lea
dec
and
mov
and
dec
aas
mov
les
icebp
fld
clc
jb
xchg
mov
leave
fs
xchg
sarb
xchg
stos
cmp
nop
sti
add
cmp
rorb
jmp
ds
mov
popf
adc
int
xor
fistl
rcrb
push
sahf
dec
push
jmp
mov
test
in
dec
cmp
fnstsw
ja
pop
push
les
mov
nop
fbld
jno
cmp
cmp
test
sahf
push
jo
dec
xor
daa
sub
mov
lods
data16
movsb
cmp
shl
add
xor
rorb
add
jp
scas
iret
push
aaa
lods
inc
sti
adc
mov
mov
daa
int3
sbb
stos
sbb
add
subl
insb
sbb
test
mov
in
sub
and
aad
sti
xor
mov
adc
hlt
fldl
add
idivl
push
sbb
adc
add
push
dec
sbbb
xchg
adc
push
andb
ret
sbb
clc
ljmp
leave
mov
mov
and
inc
push
mov
std
repz
test
jge
inc
enter
es
jge,pn
mov
lds
jp
imul
sub
shlb
je
arpl
inc
arpl
outsb
jb
jp
mov
xlat
sub
out
push
aam
or
dec
adc
and
dec
sbb
into
mov
nop
les
add
sti
sbb
mov
fsts
je
add
movsb
adc
push
dec
les
repz
lds
inc
inc
fcos
xor
adc
inc
fstpl
shll
ret
adc
fwait
lods
jnp
mov
das
ja
lods
das
mov
inc
insl
mov
inc
and
adc
mov
mov
cmc
push
call
std
pushf
inc
jmp
jnp
dec
mov
sub
mov
cmpsb
std
shll
clc
adc
inc
jl
cmp
push
nop
mov
sarb
inc
inc
stos
subl
and
jne
and
js
cmp
adc
out
xor
inc
xchg
add
adc
inc
push
sti
inc
stos
sub
sub
aaa
popw
pop
or
les
test
sub
pushl
imul
das
mov
std
mov
sbb
or
das
mov
push
adc
sbb
pop
or
ljmp
add
mov
mov
dec
in
xlat
cld
push
cltd
pop
out
mov
mov
xorl
pop
xchg
out
cmp
sbb
ret
jg
fmuls
lock
pop
outsb
push
jp
inc
lods
lods
ret
xor
push
adc
adc
xchg
jecxz
add
mov
xchg
sbb
mov
fstpl
inc
es
data16
jb
xchg
rcl
mov
outsb
stc
adcl
jno
pop
pop
and
sahf
dec
mov
into
push
cmpsl
pop
add
mov
xchg
push
shl
inc
cld
pop
lret
xor
add
push
loope
hlt
add
inc
sbb
ja
pop
cltd
lret
and
or
push
jmp
outsb
jmp
inc
add
jb
push
sti
mov
jge
imul
lods
xor
jbe
pop
add
jmp
movsb
mov
xlat
scas
leave
xchg
sub
xchg
xchg
cmovne
push
aas
mov
xlat
stos
js
movsb
push
cmpl
push
out
sbb
popf
add
ja
mov
jo
push
mov
ja
divl
push
add
push
das
mov
push
jb
xchg
mov
pop
filds
cmp
cwtl
mov
push
push
or
into
push
out
int3
lret
xor
mov
push
inc
mov
and
xchg
pushf
and
push
std
jl
add
and
xor
add
enter
push
mov
cmpsb
je
sub
jns
out
sub
fistpll
xchg
pop
sahf
mov
add
inc
pop
sahf
movsl
movsb
xchg
lahf
int3
sbb
nop
jae
pop
inc
xchg
mov
out
xor
imul
pop
push
outsb
sub
or
sbb
int
mov
int3
push
cmp
iret
or
loopne
or
and
test
jmp
or
push
pop
stc
jbe
in
mov
hlt
sbb
fcomip
lds
fbld
cmp
sub
std
es
add
and
xchg
rclb
push
in
pop
shlb
cmpsb
orb
push
add
enter
es
jns
inc
push
inc
adc
xor
dec
fs
adc
mov
push
ss
rcl
add
mov
xchg
popa
rclb
push
dec
mov
add
pusha
and
daa
sbb
stos
dec
xor
stc
call
cmp
mov
lahf
gs
mov
pop
pop
cmc
jb
push
fisubl
mov
xchg
cmpsl
ds
mov
sub
dec
mov
dec
imul
lods
lret
pop
xlat
mov
mov
jl
add
mov
sbb
push
out
pushf
arpl
aad
xchg
repnz
dec
jns
cmp
stos
pop
add
mov
outsl
test
ss
sub
xchg
pop
lcall
sbb
push
add
xchg
inc
sbb
jmp
out
pop
cltd
iret
inc
mov
jmp
loop
fisubrs
push
fsubs
sub
jg
dec
pop
js
cmp
mov
in
jecxz
subb
push
sbb
jae
cld
je
cmpb
adc
repnz
mov
jbe
cmp
les
loopne
aaa
scas
inc
ror
xor
lcall
pop
cs
shl
test
push
clc
cs
shl
xchg
nop
ret
imul
mov
test
jmp
mov
dec
push
into
out
inc
into
xchg
pusha
xor
das
mov
or
mov
loope
stos
stos
xchg
sub
cmpsb
or
out
fnstenv
cmp
and
test
repz
dec
cld
add
pop
je
cmp
inc
cmp
push
jg
mov
cmpsl
xor
out
inc
nop
daa
jl
stos
daa
addr16
jle
add
aaa
mov
inc
dec
popa
jno
ret
sbb
fadds
shll
and
jne
xchg
or
cmpsb
cs
outsb
leave
pop
inc
cmp
icebp
aas
enter
adc
sahf
inc
mov
mov
aas
mov
dec
test
js
clc
push
bound
pop
mov
out
jno
minps
sbb
mov
and
roll
rcll
xchg
fisubl
adc
fldenv
leave
mov
sbb
pop
xor
pop
jnp
push
or
stc
xor
and
imul
xchg
gs
fdivrl
add
movl
jl
dec
loopne
test
lahf
jmp
push
sub
mov
ds
push
pop
mov
or
xchg
pop
mov
pop
jno
mov
push
aad
arpl
cmp
jg
cmp
subb
lock
frstor
inc
scas
jae
outsb
inc
arpl
jl
and
pop
and
lcall
mov
insb
inc
or
add
fidivs
add
cmc
sub
mov
insb
lcall
in
pop
cmpsl
jg
test
out
and
clc
test
mov
sbb
jg
or
xchg
lret
dec
inc
test
pusha
mov
sub
mov
out
cmpsl
adc
ja
aaa
add
outsb
ret
fcomps
outsl
into
sbb
fsts
push
or
jo
pop
imul
fsubl
or
inc
xor
imul
mov
add
xchg
sbb
andb
hlt
sbb
mov
shlb
pop
mov
cld
shll
jle
mov
push
out
pop
sbb
enter
aas
push
pop
lock
xor
int3
into
adc
dec
or
xchg
insl
shll
xor
lret
pop
pop
les
jo
lds
je
leave
in
lods
repnz
sbb
aad
gs
mov
cltd
inc
pop
jb
stos
pop
push
mov
stc
cmp
inc
in
push
dec
insl
jle
or
adc
rorb
es
sbb
jg
mov
or
add
and
insl
dec
mov
add
cmp
and
xchg
addr16
mov
inc
aam
add
out
pop
sbb
xor
push
cmp
xchg
cmpl
das
int
sub
lcall
data16
outsb
add
jecxz
push
mov
add
in
test
adc
bnd
fwait
hlt
scas
in
mov
sti
sar
fdivrl
inc
jmp
es
sub
test
sbb
std
xor
in
xor
enter
or
xchg
jb
loopne
imul
or
ds
add
pop
xor
dec
inc
sub
not
xchg
xchg
mov
and
and
sub
cmp
dec
aas
pop
leave
cmc
add
ffree
mov
inc
sub
lcall
adc
test
mov
ficoms
lods
int
jle
cwtl
nop
lahf
aas
lds
push
add
xchg
cmpsb
pop
adc
sub
mov
bound
nop
scas
lds
mov
cmp
pop
pop
push
sub
into
add
clts
lods
add
daa
jmp
cmp
cmpsb
fs
stos
loope
data16
insb
test
push
fdivrs
mov
sub
lcall
inc
ljmp
pop
push
mov
dec
or
pop
and
jmp
pop
push
loopne
jp
in
pmullw
rcl
sbb
cmpsl
mov
dec
or
imul
fbld
and
shlb
sub
sbb
loope
xor
test
stos
dec
jg
subl
lea
xor
push
insb
adc
aad
sbb
jg
mov
lods
repz
inc
aaa
mov
xor
cmp
fsts
pop
pop
cmc
jno
xchg
mov
das
andl
out
cmp
xor
inc
push
sub
mov
dec
xor
push
jns
push
insl
stc
or
jns
dec
push
mov
icebp
in
mov
xlat
mov
les
adc
mov
push
ss
lret
pop
fdiv
jge
and
mov
data16
jp
inc
ret
dec
cs
sub
out
in
popa
andb
fdivl
outsl
cmp
adc
dec
or
rcll
sub
xchg
push
loopne
cmp
mov
fsubrs
test
push
not
xchg
adc
aam
jp
jae
cmp
aas
xchg
and
add
mov
arpl
cmp
add
es
cwtl
push
or
mov
xchg
mov
mov
mov
push
rolb
xor
pop
xchg
inc
imul
insl
sahf
xchg
adc
xlat
mov
cli
insl
inc
inc
popa
repz
daa
icebp
cmp
xor
sub
jo
cmp
push
add
or
shr
pop
xchg
inc
jmp
inc
fcoms
mov
jmp
jno
imul
dec
xchg
sub
or
and
xchg
push
dec
jae
cmpsb
push
lahf
push
mov
or
pop
js
jnp
sbb
or
adc
push
cmpsl
fdivl
push
addb
popa
stos
stos
xlat
jae
sbb
mov
sub
adc
dec
cld
cli
jnp
add
ja
into
pop
mov
xchg
adc
int
sbb
movb
xor
int
movsl
cli
mov
xor
addr16
jp
dec
cwtl
out
sub
hlt
cld
xchg
mov
add
push
out
or
push
loope
test
ret
add
or
push
mov
test
and
push
insl
mov
mov
mov
icebp
inc
and
inc
sbb
roll
lcall
inc
jl
xchg
cmc
rcrl
mov
xlat
dec
or
jmp
rorl
dec
rcrb
add
enter
xchg
dec
stos
mov
outsl
cmpsl
popf
in
inc
in
or
sub
daa
mov
cmp
fldl
hlt
lds
aas
xor
jg
jg
push
jne
andb
loop
in
mov
jg
pop
jg
cs
sbb
arpl
int3
mov
xchg
ss
sub
push
clc
cltd
out
add
push
jnp
mov
inc
mov
xchg
mov
xor
test
call
enter
pushf
adc
fistl
out
inc
sub
fildl
cs
xchg
dec
mov
sbb
and
je
cli
enter
sbb
outsb
ret
add
sahf
stos
xchg
neg
ljmp
sub
sbb
adcb
lods
loop,pn
jp
pop
inc
add
xchg
jl
shll
xchg
stos
scas
stc
notl
add
mov
mov
xchg
jg
push
test
push
adc
add
add
les
shlb
lret
ds
movaps
sbb
fstpt
arpl
cmp
clc
repz
adc
dec
and
jecxz
shlb
mov
dec
push
jp
add
mov
ret
aam
stc
loope
ljmp
mov
cmpsb
leave
sahf
outsb
and
mov
xchg
subb
out
lahf
push
fs
scas
incl
sub
sbb
shr
xchg
sbb
mov
mov
sub
mov
or
jae
imul
addr16
les
inc
js
js
aad
sbb
test
or
and
jge,pt
cmp
inc
xchg
leave
and
xchg
rorl
mov
inc
adc
insb
cmp
xchg
cmc
inc
inc
js
sbb
popa
mov
pop
xlat
stc
jp
notb
scas
or
jnp
xchg
push
out
lods
loope
pop
ret
push
ret
and
fcomps
movsl
lret
xchg
ficompl
loope
sbb
sbb
push
shlb
popa
sub
outsb
in
dec
sbb
fwait
pop
adc
inc
imul
in
lret
or
lods
jmp
adc
stc
xlat
jno
test
mov
jbe
ds
jne
sub
add
out
in
mov
push
xabort
daa
pop
add
pop
lret
adc
xor
out
sub
pushf
pop
jg
xchg
loop
out
jnp
decb
mov
inc
repz
pop
pusha
test
stos
cmc
sti
mov
popa
lahf
cmpb
js
pop
jns
cmp
sbb
adcb
inc
std
sbb
out
pop
stc
lret
mov
aaa
lods
cmc
rcrl
mov
fidivs
imul
movsl
cmpsl
jmp
scas
insl
pop
aas
dec
xchg
sbb
enter
mov
leave
pop
jle
lea
push
lods
lods
lret
xchg
adc
ret
rorb
cltd
inc
repz
mov
and
ret
sbb
lock
test
pop
xchg
cltd
inc
icebp
cmpsb
test
sub
roll
cmc
push
lock
into
lods
lahf
sbbb
in
sbb
test
pop
add
lods
mov
out
mov
push
dec
xchg
mov
add
mov
aam
push
push
mov
adc
lahf
jp
cmpsb
nop
rol
push
inc
loope
mov
pop
xor
dec
ror
lods
insl
shll
outsl
inc
inc
jo
int
fldl
fdivrp
dec
sti
push
loop
sub
or
insb
movsl
push
fidivrl
dec
jmp
mov
add
mov
mov
les
cmp
rcrb
popa
mov
scas
fwait
or
push
fwait
mov
insb
pop
push
cs
or
cs
xchg
fwait
dec
sbb
jge
out
push
inc
sub
pop
popf
pop
sbb
pusha
dec
adc
inc
add
leave
adc
fs
iret
sti
jg
push
into
push
push
jecxz
rcll
cmp
mov
sub
in
add
outsb
int
and
and
adc
xor
lds
add
int3
adc
inc
or
dec
outsb
sbb
sbb
mov
or
mov
sub
and
imul
dec
imul
outsl
sub
daa
shrl
shr
lock
fsubl
cmpsb
lahf
clc
test
jbe
mov
mov
repnz
fistl
mov
movsb
sarb
movsb
in
loope
and
rolb
movsl
lock
mov
cmpsl
scas
lret
sub
jns
and
jecxz
mov
fs
lods
leave
pushf
lods
mov
sub
adc
in
out
jge
out
lcall
mov
out
adc
add
lret
sbb
jne
mov
cwtl
inc
push
inc
jne
adc
lahf
push
repnz
pop
cmp
push
fldl
mov
add
jle
movsl
repnz
stos
icebp
aas
cs
pop
xchg
out
jb
mov
dec
hlt
int3
ret
lds
add
sub
pop
std
cwtl
mov
mov
pop
outsl
jbe
out
push
xor
inc
jle
sub
jo
cmp
cmpsl
pop
in
in
arpl
sub
lea
xchg
cltd
sbb
rorl
add
xchg
cltd
sbb
repnz
fisubrs
cmp
push
dec
adc
adc
dec
inc
arpl
stc
aad
jle
and
test
or
mov
into
aad
jae
sbb
scas
lahf
les
sbb
dec
xchg
xchg
or
aad
testb
push
mov
pop
loopne
in
ss
insl
inc
call
icebp
add
mov
lods
scas
dec
mov
ljmp
xchg
jmp
stos
cmp
test
push
jle
mov
insb
leave
xchg
imulb
dec
sbb
xchg
push
out
dec
test
pop
cld
jmp
sub
cmp
addr16
icebp
mov
xor
mov
into
pop
adc
lods
mov
mov
aaa
cmp
dec
cmpsb
outsl
pop
popa
and
and
addr16
xchg
dec
and
std
in
xorb
jb
loope
mov
popf
inc
popf
pop
subb
out
cltd
push
mov
fxch
gs
sbb
in
dec
gs
xor
push
xchg
mov
push
sbb
bound
mov
adc
xchg
push
push
and
cmc
divb
inc
aaa
inc
ds
dec
rcrb
movb
push
aam
xchg
mov
sbb
inc
lret
and
sahf
cmp
clc
rclb
mov
adc
pop
aad
stos
repnz
or
ss
xchg
or
scas
cli
in
dec
cmc
test
push
rcr
adc
popf
mov
push
xchg
mov
mov
jp
jns
xor
push
xor
das
cmpsb
fcmovne
lahf
decl
stos
xchg
cmpsl
fisttpll
pop
andl
mov
or
sub
dec
das
stos
call
aas
out
xor
and
mov
xchg
and
int3
push
adc
in
sbb
dec
sbb
enter
int3
arpl
add
int3
cld
sub
and
adc
jo
adc
scas
sbb
dec
rorl
jle
call
dec
sbb
repz
xor
loope
add
push
ret
test
add
test
push
fdivl
decl
cmp
jnp
sub
pop
xchg
sbb
fwait
cmpl
icebp
cmovno
xchg
pushf
fstpt
push
pop
movsb
in
dec
rcrb
call
push
push
push
jp
idivl
sub
ja
mov
pop
xlat
lea
inc
jb
paddusb
shll
repz
iret
lret
shl
jnp
jle
lds
ret
push
pop
jbe
stos
dec
sarb
ret
push
adcb
dec
xor
std
gs
mov
and
loopne
lret
and
aas
aaa
mov
mov
push
movl
in
cmp
dec
push
scas
leave
mov
mov
insb
test
out
mov
and
and
mov
ret
fnstenv
inc
inc
lahf
adc
push
outsl
jne
xchg
pusha
adc
dec
add
enter
js
mov
add
repz
int3
rol
sub
adc
imull
pop
fwait
sti
pop
xor
mov
push
daa
cmp
dec
dec
sahf
jg
outsb
cmc
xchg
dec
loope
imul
fsubl
movsb
scas
sbb
pusha
inc
test
mov
int
es
jmp
mov
adc
sti
daa
rcll
sbb
dec
xor
jns
and
cwtl
test
or
inc
aad
js
ret
outsb
shll
xor
mov
dec
jb
movsl
jmp
dec
xchg
rolb
and
jne
scas
push
idivb
adc
mov
xor
fadd
adc
push
cld
pop
dec
stc
jl
mov
inc
push
inc
cmc
cli
rcrl
popf
imul
out
xor
cmc
stc
test
pushf
mov
pop
scas
cmpsl
lods
lea
pushf
cmp
enter
mov
jnp
push
cmp
inc
mov
mov
lock
outsl
icebp
xor
flds
cmp
inc
pop
lahf
pop
es
into
push
jmp
gs
sbbb
mov
adc
push
push
adc
fnstsw
lds
dec
cmp
scas
in
das
clc
cld
push
xchg
mov
shlb
xchg
and
jecxz
es
and
loope
jne
sbb
int
sub
loopne
add
mov
icebp
addl
sub
jg
mov
add
mov
xchg
xor
sbb
sbb
push
dec
fwait
jle
lret
sub
mov
jmp
and
aas
or
stos
inc
aam
repz
movsl
mov
mov
xchg
add
or
iret
and
mov
jns
stc
pop
imul
lods
mov
mov
out
popa
cmp
sbb
lock
or
lock
jle
inc
test
adc
adc
push
daa
addr16
sub
repz
test
push
mov
push
sbb
fldcw
sub
xchg
shll
bound
add
push
jnp
mov
mov
xchg
mov
mov
in
cmp
loope
int3
loopne
imul
subl
dec
jl
in
sbb
out
pop
aas
es
leave
cmpl
or
cmpsb
xchg
sti
cmp
mov
jmp
push
push
scas
bound
push
shr
sub
sub
mov
cwtl
int3
pop
in
repz
mov
add
repnz
adc
add
andl
mov
testl
push
std
sahf
inc
jg
jne
ret
jns
cmpl
push
testb
pop
or
add
mov
imul
inc
pop
push
inc
xlat
mov
push
cltd
fwait
imul
stc
jge
xor
in
mov
sbb
jmp
inc
into
frstor
ja
pop
cltd
cld
mov
jmp
roll
pop
push
mov
mov
hlt
notl
mov
in
rcl
mov
xor
jl
adc
pop
mov
ret
jae
sbb
jp
mov
xor
xlat
sbb
scas
vaddsubps
sub
cmpsl
lret
add
jecxz
insl
mov
fcomps
push
push
jne
sbb
mov
mov
filds
imul
push
dec
rorl
lea
adc
fstps
ficomps
call
sar
cmp
sub
mov
pop
loopne
pop
sub
loop
movsb
inc
and
pop
cmpsb
push
cmp
jno
jl
xchg
push
ret
mov
outsl
xlat
mov
sbb
cwtl
adc
in
mov
sbbb
cld
loope
xchg
out
jp
cs
out
scas
fstpt
adc
and
mov
fs
sub
xchg
mov
gs
cs
lcall
out
popw
mov
cmpb
or
shr
pop
adc
mov
loopne
movsl
fs
ss
movsb
xchg
lea
ficompl
fs
sbb
mov
pop
or
icebp
mov
inc
aas
aas
enter
and
pop
fisttpl
insl
dec
sub
icebp
push
mov
sti
xchg
ss
sub
aam
cmp
rcrl
or
pop
negl
xor
pop
ss
push
test
cmp
inc
mov
mov
cmp
arpl
adc
into
cmp
xor
es
adc
imul
fs
push
and
jecxz
sub
xchg
pop
mov
adc
lahf
je
movsb
mov
data16
pushf
push
andb
xchg
push
shll
movsb
jbe
into
sub
lock
js
fcomps
cmpb
jle
into
jg
cltd
dec
add
xor
ret
sti
es
and
loop
clc
add
xchg
fs
movsb
jecxz
mov
sahf
pop
into
adc
repnz
andb
adcb
cs
jae
cld
sbb
xor
fiaddl
mov
shl
test
daa
adc
loopne
and
lods
stos
arpl
push
sbb
or
push
hlt
pop
inc
into
jae
sar
jbe
lahf
xchg
cmpsl
xchg
test
pop
cmp
sub
cld
cmp
aam
es
dec
lcall
sarb
or
push
xlat
insl
inc
push
adc
adc
jae
loop
daa
pop
loopne
push
mov
sbbl
jmp
sbb
xor
pushl
push
or
adc
mov
repz
shlb
adc
and
pop
mov
push
lret
in
jnp
dec
mov
mov
mov
mov
ss
inc
mov
mov
mov
not
call
ficoms
jbe
testl
cmpl
imulb
ss
fld1
testl
fisubrs
repnz
adc
loope
cmp
pop
in
outsl
mov
push
mov
lods
inc
jae
add
cmpb
push
inc
leave
push
xchg
pop
mov
or
and
pop
push
aad
push
add
inc
mov
jmp
test
ja
shrb
push
sbb
dec
push
pop
sub
jns
les
or
ss
sbb
notb
mov
mov
xlat
jae
fs
jmp
std
int3
das
cmp
ret
dec
push
outsl
insl
jp
lock
push
pusha
mov
imul
in
ja
dec
pop
fsubrl
cmp
loop
lock
repnz
push
cmp
popf
sbb
mov
mov
sub
sub
inc
mov
repz
js
je
fstl
leave
loop
and
xchg
sbb
mov
lods
xlat
dec
into
hlt
mov
sbb
pop
lret
xchg
xorl
icebp
inc
aam
push
aas
fwait
add
push
std
imull
sbb
ljmp
xor
pop
cmpb
push
mov
sbb
pop
fldenv
scas
mov
out
pavgw
jne
mov
out
movb
jp
mov
fwait
mov
test
fidivrl
push
scas
or
imul
mov
push
xchg
mov
popf
lds
xchg
enter
adc
pop
in
mov
cltd
aad
add
dec
push
push
lcall
lods
pop
cltd
cmpsl
jle
imul
adc
mov
adc
pop
and
mov
add
jmp
popf
aaa
pop
sub
jb
xor
jmp
mov
inc
inc
lds
lods
dec
mov
popf
rolb
jle
mov
movsb
cmp
ljmp
cmc
mov
xchg
add
in
xchg
adc
cltd
dec
cmp
cmc
test
jecxz
dec
ljmp
cltd
das
mov
pop
jne
shlb
push
or
scas
mov
mov
mov
inc
lret
inc
xor
and
aad
or
mov
mov
loope
fnstenv
cmpsl
pop
xlat
icebp
sahf
jbe
aam
sbb
adc
stc
mov
dec
jo
dec
or
xchg
lahf
in
pusha
loope
mov
mov
scas
inc
push
fcomip
fistl
jbe
xor
adc
mov
cmp
fldcw
cwtl
test
or
in
aam
and
inc
nop
in
xor
mov
pop
imul
mov
push
inc
dec
les
cmp
mov
mov
and
out
sbb
scas
les
loopne
or
leave
push
cli
xchg
hlt
rcll
pop
fists
pop
jg
imul
das
pop
add
mov
cmp
pop
jmp
cmpsl
mov
jp
lods
out
sbb
leave
dec
sub
dec
jl
inc
stc
aam
rcl
cmp
mov
jns
adc
push
lods
adc
sub
pop
divb
sbb
sbb
pop
dec
hlt
or
xchg
nop
stos
xor
sti
loope
push
xchg
mov
dec
cmc
push
test
sbb
in
test
inc
fisttps
in
pop
cmp
push
hlt
test
out
icebp
xchg
add
into
in
xor
sarb
rol
arpl
andl
push
scas
sar
ja
mov
popf
fimuls
repnz
scas
cmp
mov
xor
jbe
cs
call
pop
orl
pop
dec
sub
das
pop
sar
sti
subl
jmp
pop
lret
pop
pop
mov
xor
jge
test
sub
cmpsb
mov
sub
inc
or
sub
cmp
call
add
mov
mov
sbb
jmp
sbb
push
xor
fnstsw
jae
and
mov
daa
push
cld
push
fdivl
sub
pushl
xor
scas
lods
loopne
push
xchg
xchg
sbb
push
push
cld
subb
scas
sub
test
movsb
xchg
jbe
xchg
into
mov
scas
xor
lock
push
adc
subl
and
xchg
pop
ljmp
push
cmp
xchg
loope
pop
jmp
lahf
sbb
movsl
mov
inc
jl
jmp
cmp
frstor
sub
adc
in
pushf
lahf
xor
cmpsb
imul
daa
push
lret
or
and
xchg
testl
sbb
push
shll
pop
inc
cmp
stc
add
dec
push
insl
js
inc
cmpsb
insl
ljmp
psraw
in
sbb
jae
call
out
push
mov
mov
imul
int3
cmp
mov
or
out
dec
popf
mov
ss
outsb
dec
mov
aad
les
cmp
or
into
mov
subl
cli
push
push
fcoml
or
mov
mov
push
jb
jmp
push
add
aad
sbb
into
into
lret
movhps
dec
dec
je
popf
daa
test
rorb
jb
sub
jns
sti
loope
inc
scas
pusha
cmc
loope
in
cmpsb
pusha
popa
mov
xchg
push
lret
jns
sbb
mov
inc
or
jmp
mov
rcll
inc
call
cld
mov
pop
popf
push
and
divl
jge
mov
adc
inc
jne
outsb
cmovnp
jg
es
mov
adc
jg
mov
into
sar
pop
aam
mov
jns
push
mov
jg
cmp
mov
and
sbb
out
mov
fwait
jbe
icebp
cmp
xchg
add
insl
and
mov
rcrl
loope
mov
xor
stc
sbb
cmp
psubusw
fimuls
cmpl
iret
fcmovnbe
cmc
inc
adc
pcmpgtw
and
sub
mov
out
call
aam
xor
adc
movsl
loopne
inc
dec
pop
push
in
cs
subl
push
and
mov
mov
cli
sti
cli
scas
jbe
jno
xchg
inc
decb
das
sbb
fsts
mov
mov
movsl
pushf
sub
out
pop
jnp
push
addr16
jo
lcall
iret
cld
lcall
dec
jnp
dec
arpl
icebp
arpl
stos
pusha
pusha
push
inc
mov
sub
fxch
test
loopne
jae
push
jle
mov
out
lods
stc
fwait
pop
sarb
xchg
aas
stos
stos
int
popa
sti
stos
mov
push
arpl
push
out
jns
out
imul
add
xchg
xchg
jne
andl
rorl
fisubl
xor
dec
lahf
outsl
jle
mov
and
jnp
ret
fisubl
movsb
lahf
cmp
fidivrs
dec
mov
mov
das
mov
addl
sti
jmp
aam
cmpsb
insb
nop
add
dec
fstpl
lcall
mov
cmp
ljmp
out
sub
in
xchg
xchg
mov
jo,pn
lods
jnp
testl
cwtl
fldl
int
mov
cmp
pop
mov
orb
jmp
fs
test
sbb
cmp
fwait
inc
les
add
repz
mov
cmpsb
mov
cmpsl
data16
int3
arpl
fistpll
jg
mov
adc
and
cmp
into
dec
pop
adc
ret
lahf
push
add
aas
adc
test
adc
push
or
jne
mov
adc
fists
rcrb
ficoml
lods
and
lock
xor
push
dec
xchg
lahf
sbb
xchg
imul
rolb
xchg
sub
dec
lods
jnp
dec
adc
aas
sbb
pusha
pop
jne
ljmp
push
sbb
cmc
ret
cmp
mov
dec
xor
bound
andl
add
mov
xor
bound
out
out
shlb
xor
jmp
jp
sbb
mov
test
int3
pop
add
in
test
arpl
mov
cmpsb
aad
cli
fwait
aam
call
xlat
ljmp
cwtl
or
mov
xlat
xchg
mov
push
pop
ficoml
xor
repz
xchg
mov
test
and
push
and
sub
les
aad
pop
push
gs
vpsubw
lods
mov
add
pop
ror
adc
jl
imul
dec
push
rorl
test
in
push
mov
cs
jo
mov
adc
and
mov
test
cmp
jne
out
mov
shrl
jb
sahf
inc
sbb
repnz
loope
xchg
inc
xor
add
add
jle
fisttps
inc
mov
pop
ret
push
fs
jnp
cmp
daa
push
dec
sbb
inc
mov
stc
repz
cli
call
call
outsb
xor
jmp
mov
inc
pop
inc
movsb
jae
int3
js
jne
mov
cmp
pop
and
and
test
mov
adc
jno
icebp
xchg
lock
lret
sbb
push
inc
and
or
stc
arpl
pop
pop
xchg
push
int3
xlat
mov
jp
loope
mov
insb
push
clc
and
clc
jb
mov
inc
cltd
cmp
out
dec
sub
cmpsb
inc
in
cmp
lock
scas
sub
into
lods
or
dec
or
pop
pop
cwtl
adc
mov
insb
stos
clc
jle
ret
int3
sub
xor
push
in
dec
and
sarl
in
xor
jnp
js
fndisi(8087
lock
sbb
movsb
aad
out
stos
push
jb
mov
or
sarb
mov
push
imul
out
sub
lret
push
cmp
fnstcw
push
aad
adc
jl
sbbl
xchg
mov
dec
inc
xchg
ljmp
repnz
leave
mov
scas
xchg
mov
lea
or
pusha
pop
mov
bound
cmp
aaa
nop
add
insl
sbb
and
sbb
xor
sbbl
mov
and
mov
mov
ds
data16
jle
sbb
jg
movsb
test
mov
ficompl
inc
push
aam
in
imul
or
ds
outsb
cmpsl
jg
cmp
adc
into
dec
sbb
stos
mov
lods
and
clc
jmp
xchg
jb
jnp
push
into
dec
les
jg
nop
add
mov
mov
popa
jp
sbb
mov
or
in
sbb
xchg
jmp
ja
cmp
xor
mov
lret
mov
jne
test
std
jae
iret
popa
mov
mov
inc
imul
jle
pop
popw
sbbl
mov
in
lods
mov
jae
push
pushf
cmc
adc
sub
in
dec
push
sbb
lcall
out
inc
xchg
test
pop
sbb
sbb
aas
dec
xor
xchg
imul
into
nop
jl
push
shl
hlt
xchg
jp
test
stos
pop
ja
fs
jae
xchg
ret
clc
push
inc
mov
push
lret
insb
or
cmp
lock
nop
pop
xor
ret
addb
fisttpl
adc
outsl
mov
lds
clc
cmp
in
negl
mov
mov
loop
jns
icebp
lods
in
inc
mov
mov
xlat
or
mov
loopne
inc
dec
in
mov
aad
dec
lock
jg
testl
mov
sbbl
pusha
iret
push
icebp
adc
jecxz
jecxz
mov
out
jne
mov
cmp
mov
popa
dec
dec
addr16
fldcw
sahf
jge
fcmovnu
xchg
xor
aam
fmuls
jb
call
pop
gs
pusha
adc
cltd
fsubrp
rcrl
outsl
addr16
xchg
pushf
mov
repz
jg
ror
repnz
stos
jl
cltd
mov
fstpl
push
push
cwtl
ret
adc
popf
add
outsb
mov
in
jg
in
mov
xchg
lods
sti
loop
out
xchg
js
je
adc
or
adc
sub
shlb
dec
sbb
dec
mov
sbb
dec
push
data16
pop
andl
lods
movsl
pop
mov
or
pop
rolb
ret
fsubp
scas
pop
repnz
ret
in
and
mov
and
push
lock
jb
or
in
cmc
mov
sbb
insl
xor
adc
push
movb
cltd
xchg
andb
arpl
push
iret
stos
je
jmp
dec
neg
lret
dec
and
rclb
adc
mov
bound
aas
or
push
pop
scas
int
mov
in
mov
fnstsw
xchg
xchg
ljmp
stos
sahf
cli
sub
out
cmpsl
sbb
adc
lret
mov
leave
lahf
cli
mov
dec
cmc
jecxz
incb
in
mov
leave
mov
int
insl
cmp
iret
cli
lock
and
test
jno
pop
jecxz
rolb
roll
jmp
mov
daa
pop
into
pop
push
jno
aas
push
push
xchg
add
mov
addr16
pop
mov
cmp
adc
cmp
push
ja
cmc
insb
aas
push
fbstp
sub
faddp
rorl
mov
ja
orb
and
aam
mov
insb
mov
adc
add
pop
adc
dec
mov
sub
leave
test
add
out
or
lahf
xor
sti
or
outsl
stos
cmp
ja
sub
push
lods
push
addl
subb
divb
scas
cmp
push
inc
out
adc
fs
inc
pop
xchg
push
mov
nop
int
loopne
or
incb
xchg
xchg
mov
jo
int
mov
lods
pop
out
rcl
movsb
es
fwait
jmp
sub
jbe
rcl
es
mov
mov
and
test
adc
loop
stos
push
popa
mov
jmp
lea
pop
push
jb
pop
push
data16
mov
push
or
aaa
xchg
icebp
dec
push
dec
rorb
lods
repnz
test
mul
hlt
cmp
inc
pop
ficoml
jge
inc
lret
inc
sbb
jbe
sahf
aas
xor
xchg
dec
sub
fs
mov
pop
push
enter
pop
ret
push
pop
dec
arpl
scas
pusha
adc
in
ja
add
mov
xchg
push
pop
sbb
xor
mov
xchg
idiv
adc
jb
push
or
inc
mov
add
pop
dec
sub
cmp
mov
ror
or
stos
sbb
inc
sub
xchg
loop
push
insl
out
or
dec
daa
adc
inc
iret
jnp
dec
jp
push
push
jno
mov
jnp
loop
cmc
out
mov
dec
pop
add
in
lret
stos
mov
daa
mov
sbb
sarl
movsb
sbb
xchg
add
lds
jl
push
jmp
cltd
push
jb
rcll
mov
loopne
outsl
lcall
push
pop
cmpsb
add
xor
mov
mov
insb
leave
fs
sti
push
inc
pop
or
mov
jle
adc
cs
mov
aam
adcl
lcall
push
mov
pop
in
cwtl
push
jno
and
dec
sahf
ret
outsb
push
inc
outsl
push
cmpsl
xor
sarl
call
jg
ret
pop
sub
add
lcall
push
xor
lock
pusha
ljmp
dec
and
cmp
inc
xor
push
dec
push
dec
scas
js
add
xchg
xchg
sub
inc
dec
lret
mov
mov
inc
js
lock
in
sbb
pop
int
sub
add
in
icebp
int3
subb
add
xor
xchg
mov
adc
aam
inc
pop
adc
mov
notrack
inc
test
inc
stos
pusha
xchg
push
int
in
push
cmp
outsl
es
sbb
sbb
inc
cs
dec
dec
mov
sbb
mov
jno
div
leave
repnz
cmp
loope
bound
inc
leave
loope
sub
jg
adc
ljmp
cmp
scas
sbb
pop
sti
lods
push
add
push
in
cmp
mov
jle
and
dec
adc
cld
xor
aas
test
xchg
sub
into
lret
mov
push
adc
std
dec
pop
push
mov
jb
or
fs
cmp
add
cmp
jae
fs
pop
xchg
fwait
cwtl
std
insb
sub
test
inc
test
mov
mov
iret
push
mov
bound
fiaddl
pop
adc
xsha256
cmpsb
pop
shl
dec
pop
mov
lret
xor
movsl
push
repz
icebp
or
mov
push
insb
lcall
lret
and
nop
ret
or
jl
jecxz
call
sbb
scas
test
dec
in
in
cmpsl
bound
enter
cwtl
sbb
and
fwait
jge
rcr
into
mov
and
inc
xor
jne
xchg
stos
loopne
jle
es
or
jmp
cmp
sbb
mov
andl
sub
add
out
hlt
fwait
and
push
sbb
out
hlt
dec
popa
jb
enter
xchg
addr16
inc
arpl
jecxz
jo
cmpsb
lds
or
ja
stos
jl
shlb
mov
pop
sbb
mov
cli
adc
mov
mov
das
pop
pop
outsb
add
lods
sarb
cli
push
test
fstpl
inc
gs
test
or
adc
push
xchg
jp
addr16
xor
outsb
scas
mov
push
xor
xchg
adc
mov
lret
fsubs
add
enter
pop
repnz
dec
std
movsl
xchg
or
fsubr
out
das
imul
inc
push
jno
imul
arpl
pop
mov
insl
cmp
daa
sbb
psubb
arpl
dec
enter
std
mov
fimuls
ljmp
cwtl
mov
cmp
inc
mov
les
inc
xlat
jmp
mov
adc
cmp
andb
jl
iret
xlat
sbb
mov
inc
hlt
sahf
sti
or
inc
or
dec
fnclex
mov
ret
mov
adc
fisubs
pop
and
inc
mov
inc
and
and
shl
loopne
mov
lds
inc
mov
imul
xchg
adc
dec
jl
cltd
pop
hlt
fcoml
push
popa
lret
jl
sbb
and
lcall
jno
sub
nop
adc
pop
dec
icebp
js
scas
mov
test
and
repz
rcr
and
xchg
xchg
fstpt
and
mov
adc
mov
lahf
jnp
in
lcall
pop
and
repz
xlat
or
rolb
jbe
add
outsb
push
mov
insl
test
mov
cli
jno
cs
leave
leave
fcmove
in
loope
ret
mov
insl
xlat
mov
adc
or
cmp
into
push
fwait
mov
or
cmp
rolb
je
mov
imul
mov
sub
jg
mov
pop
fstps
out
jo
in
or
push
addr16
icebp
mov
mov
inc
scas
lret
push
add
cwtl
sub
add
and
dec
scas
push
data16
imul
xchg
mov
sti
xchg
enter
jecxz
lahf
push
add
xchg
adc
jo
add
mov
mov
mov
sbb
loopne
sahf
xor
lahf
cmp
mov
lret
mov
lahf
add
ds
cs
enter
cmp
dec
mov
pop
dec
jle
aad
jns
jl
test
jae
xor
mov
dec
or
pop
xor
sti
filds
int
cmpsb
lahf
outsl
cmp
lods
push
jle
mov
sub
rcll
and
cmc
sub
cmp
rol
rcrl
outsl
push
mov
xchg
sub
out
ret
sti
out
mov
and
rcll
pop
ss
ret
out
push
iret
dec
cmp
fcmovnb
ret
dec
ret
pop
lret
add
clc
hlt
mov
push
push
scas
ds
outsb
pop
mov
dec
sub
and
repz
mov
ror
inc
xchg
pop
dec
into
xchg
dec
push
outsl
ds
das
jo
sub
xchg
test
mov
pop
in
cmp
in
add
mov
adc
inc
stc
cwtl
imul
inc
pushf
int3
scas
push
lcall
into
dec
jp
ljmp
inc
dec
inc
sub
or
mov
daa
add
pop
insb
xor
pop
in
mov
adc
lret
in
or
sub
push
cwtl
xchg
fisttpl
mov
in
shll
flds
jne
xor
pop
cmp
outsb
and
imul
popa
xor
shl
addr16
and
pop
in
fisubrs
fidivs
xchg
gs
inc
xchg
push
and
cmp
js
mov
jl
push
pusha
iret
outsb
mov
test
lcall
outsb
jl
pop
insl
sar
fcoml
mov
or
insb
mov
xor
mov
aaa
addr16
cld
add
sti
fucom
jle
sub
jmp
xor
sbbl
mov
sbb
jae
sahf
and
cwtl
push
data16
jecxz
jp
sub
cltd
lock
adc
test
push
inc
int
or
mov
pushf
mov
dec
insl
in
sub
push
mov
push
std
dec
jmp
or
aad
insl
bound
push
sbb
cli
loopne
cs
xchg
out
call
ss
dec
test
add
js
call
stos
fsubr
inc
stos
and
fwait
cmpb
daa
and
mov
and
outsl
jbe
mov
dec
inc
int
sbb
mov
sti
inc
imul
push
pushf
mov
xor
dec
outsb
xchg
fs
cmpsl
out
mov
lret
mov
xchg
pop
push
sub
or
in
clc
inc
inc
repnz
fisubrs
sub
xchg
mov
sbb
mov
lds
xchg
pusha
outsl
or
xor
notl
leave
popa
and
ret
dec
xor
xor
arpl
mov
les
jne
xchg
xchg
dec
and
mov
inc
hlt
sar
lods
lods
popf
add
je
mov
xlat
and
aam
mov
int
iret
ja
rol
push
mov
test
insb
mov
int3
in
jecxz
xor
lcall
adc
add
das
stc
inc
icebp
sub
adc
cmp
mov
ljmp
mov
imul
mov
sti
cwtl
ret
jo
movsb
out
cmp
and
ja
lret
xchg
jecxz
jb
dec
aaa
insb
mov
add
lret
cltd
and
inc
in
sti
sbb
cmpl
pop
imul
shlb
in
aad
push
adc
popa
es
push
mov
test
mov
scas
jl
in
dec
cmc
sti
loop
add
mov
into
insl
es
imul
sarb
data16
jae
jle
cmp
xchg
insl
aam
cli
lret
inc
das
movsb
pop
or
cmp
mov
loope
mov
cmc
ljmp
push
inc
add
cmp
sub
push
dec
dec
in
push
movsb
sarb
je
dec
cmp
cltd
push
and
fistps
pusha
lret
or
shlb
orb
loop
xchg
ss
jb
mov
xor
sti
scas
test
mov
movsl
cmp
sahf
mov
sub
add
mov
es
sbb
movsl
idivb
push
xchg
and
or
das
inc
mov
test
das
out
test
sbb
mov
jl
mov
xchg
dec
lods
enter
lock
xor
and
push
or
cmpsb
pop
and
pop
inc
inc
mov
mov
movsl
dec
sbb
cmpl
mov
mov
or
shlb
imul
ss
hlt
sub
fdivrl
les
push
loope
cmpsb
ficomps
inc
pop
xor
lret
lds
adc
or
mov
popf
jnp
bound
enter
lret
xor
das
jle
icebp
pushf
fiaddl
mov
loope
jl
outsb
or
push
mov
mov
iret
rcll
push
inc
jae
xchg
jb
sub
nop
adc
fcomip
cmp
mov
and
lock
xchg
push
insb
stc
adc
call
sti
dec
data16
jp
mov
lock
movsb
mov
es
lret
xchg
pop
bound
dec
dec
xchg
and
imul
push
xchg
mov
aas
outsb
pop
add
mov
push
rcrl
in
jns
and
add
adc
xchg
pop
mov
xchg
push
cmp
mov
push
das
adc
ret
rorl
add
mov
out
push
in
add
in
and
das
sbb
jnp
fucomip
daa
clc
inc
orb
push
in
cmp
and
mov
cmp
adc
stos
mov
push
test
cmp
sti
sbb
es
fadd
ja
inc
cmpsb
sub
and
mov
lcall
pop
and
insl
stc
cmpsl
scas
gs
cs
push
ss
mov
cld
imul
xor
sbb
mov
test
sbbl
out
pushl
test
icebp
jo
lods
pushf
push
or
inc
mov
addr16
fwait
inc
fs
mov
push
jge
or
xchg
or
or
adc
addr16
pop
mov
xchg
or
inc
lret
roll
test
in
mov
hlt
fstp
das
pop
mov
pop
lods
and
ja
icebp
mov
das
sub
mov
pusha
fs
cmpsb
dec
push
or
fs
movsb
mov
scas
neg
push
outsb
push
call
jecxz
addr16
xchg
call
out
xor
adc
sub
leave
xchg
popf
cmpsl
mov
ret
mull
cmp
fdivs
adc
nop
lods
mov
push
mov
mov
aam
xchg
pop
shrl
jp
xor
jne
std
les
idivb
push
add
movsl
push
pop
das
es
jl
mov
cmpsb
shrb
sbbl
sub
loopne
repnz
loope
mov
add
push
mull
sub
adc
incb
fsubs
add
push
sahf
fistl
dec
inc
mov
and
int
inc
pop
push
hlt
call
fdivrp
ret
jg
cmc
ds
roll
sub
dec
ds
dec
enter
dec
cltd
mov
push
dec
sub
push
imul
pop
inc
movsl
sub
cmc
ret
cltd
sbb
jnp
arpl
mov
jno
aad
or
ds
repnz
js
xchg
out
sbb
xchg
sbb
cmp
jae
sub
pop
scas
or
and
or
je
pop
jae
out
push
imul
push
jmp
jp
dec
xchg
and
push
mov
xor
mov
fwait
lret
shr
dec
shrl
insl
imul
test
imul
sub
sbb
cmp
insb
loope
cltd
xchg
xchg
mov
xchg
test
fldl
jmp
cld
inc
bound
mov
pop
das
jg
leave
les
mov
push
cltd
mov
in
sub
mov
sub
pop
push
dec
aam
jge
and
and
jl
mov
inc
mov
out
insb
xor
cmp
cmp
xchg
inc
dec
int
ret
inc
cld
mov
jecxz
fldcw
pop
jns
or
xlat
pop
pop
pop
fdivl
mov
outsb
xchg
aas
mov
insb
or
push
sbb
cmpsl
int3
ret
stc
cmp
add
inc
movsl
push
in
ret
or
aaa
and
cmp
adcb
rcrb
insb
dec
xor
jmp
adc
ss
dec
icebp
in
add
push
enter
xchg
jbe
mov
orb
in
fcmovb
popf
lds
adc
pop
xor
lret
daa
push
ret
pop
add
dec
hlt
rcll
nop
cmpsl
pop
inc
addl
cmp
inc
xchg
arpl
dec
into
lods
jno
pop
xchg
data16
jge
gs
into
pusha
dec
pop
imul
call
icebp
add
outsl
pop
xor
jne
pusha
or
add
mov
pop
cmp
mov
xor
fs
mov
mov
mov
jmp
pop
push
push
mov
lahf
in
cld
in
imul
and
push
push
fwait
jbe
fucom
or
mov
mov
daa
mov
fsubrl
ja
jle
mov
add
insb
pop
shll
stc
imul
je
fxch
das
out
in
sub
ja
push
test
test
ret
add
xor
sbb
add
test
inc
mov
lea
imul
mov
pop
push
dec
jg
test
ds
sub
call
out
push
sub
dec
out
xor
mov
sbb
dec
jns
cmc
iret
add
in
gs
fbld
imul
iret
pop
out
adc
jp
jns
dec
aad
or
out
adc
in
xchg
shll
sub
call
mov
push
out
gs
lcall
int3
mov
fwait
mov
xchg
inc
test
push
daa
insl
repz
mov
or
fcoms
add
pop
outsl
nop
sbb
loopne
jl
call
add
sub
lret
adc
ljmp
in
lds
push
imull
movsl
sub
loopne
adc
hlt
sahf
xchg
add
in
out
outsl
repz
push
inc
daa
icebp
adc
xchg
xor
adcb
pop
pop
incl
lods
ror
inc
mov
mov
pushf
imul
mov
mov
mov
popa
lcall
aaa
cmp
xor
mov
popa
push
add
dec
stos
mov
in
mov
dec
lock
fs
and
adc
cmpsl
aad
or
fucomi
subl
nop
lods
cmc
adc
lods
call
and
nop
lahf
sbb
cmovo
lahf
lods
mov
divb
and
lea
aam
stos
jle
jae
jne
inc
ljmp
add
or
mov
test
mov
rsm
cli
ljmp
out
xchg
adc
addr16
ja
xchg
dec
int
xor
pop
rorl
adc
sub
and
lcall
cmp
out
push
and
pop
push
stos
sub
sub
dec
and
and
xchg
fwait
mov
insl
xchg
jecxz,pn
add
popa
and
xchg
aaa
pop
cmp
sarb
mov
xor
cmp
adc
mov
ds
mov
daa
enter
sarb
and
test
out
push
cmpsl
push
imul
movsb
jne
cmp
inc
mov
lds
adc
mov
fildl
and
sub
adc
negb
inc
and
cmp
aas
push
pop
daa
pop
xor
xor
sbb
icebp
stc
test
inc
jbe
ljmp
cwtl
call
xor
xchg
and
pop
xchg
pusha
mov
cs
add
test
inc
std
stos
mov
add
enter
push
cmc
leave
pop
mov
loop
loope
adc
add
sub
jns
jno
insb
addb
hlt
sbb
xchg
pop
mov
fstl
outsb
jg
cli
adc
popf
rclb
lods
pop
adc
cs
test
mov
push
imul
pop
sahf
xchg
out
jge
cmpsb
xchg
ja
jge
cmpsb
lahf
jmp
addr16
aam
aam
fidivs
sub
pop
notl
mov
call
scas
mov
dec
xchg
mov
lea
insb
pop
add
mov
jne
loope
int3
or
scas
stos
inc
les
xchg
pop
inc
cli
cli
add
addb
push
dec
adc
push
aad
jno
sbb
repz
pop
sbb
push
fucomip
rol
mov
pop
adc
jg
mov
or
mov
mov
xchg
mov
in
mov
jmp
xor
rorb
shlb
in
popf
dec
dec
sti
push
dec
add
dec
das
mov
movsl
jno
icebp
in
inc
jbe
outsl
xchg
insl
fsqrt
jmp
push
in
sbb
inc
cmp
mov
out
enter
push
imull
sbb
or
dec
icebp
cmc
sub
push
jno
sub
add
sbbb
or
lcall
mov
lahf
cmp
adc
push
roll
in
jnp
movsb
loope
es
insb
inc
add
push
sbb
pop
stos
imul
insl
mov
cmpsb
adc
pop
pop
mov
pop
jge
or
xor
push
add
jae
sub
aas
adc
xor
push
repz
and
loope
pushf
and
mov
cmc
adc
push
add
push
cmpsb
lods
in
fstl
mov
jns
and
stos
mov
pop
stos
mov
sub
push
lahf
jecxz
mov
pop
mov
test
pop
inc
adc
sbb
pop
movsb
mov
inc
imul
xorl
pop
pusha
inc
push
dec
sti
mov
cwtl
push
fwait
cmp
or
loopne
fs
repz
test
inc
ds
cmp
pop
pop
std
sub
daa
lcall
les
cli
jmp
orl
popf
daa
push
push
xor
stc
mov
stos
xchg
or
pop
xor
inc
in
call
or
mov
and
add
mov
cltd
popa
test
pushf
push
xchg
add
push
mov
insb
in
aad
mov
jle
xchg
mov
outsl
mov
sub
cwtl
in
adc
adc
dec
inc
loope
lods
iret
or
sub
sbb
scas
aaa
mov
push
ja
fsubp
mov
mov
xchg
jle
lret
mov
ficoml
pop
pop
xor
sbb
lds
daa
sub
bound
sub
int3
insb
pop
sub
push
popf
mov
fwait
pop
fsubrl
cmp
cmpsb
ljmp
fwait
push
xchg
adcb
mov
andl
sahf
daa
in
or
pop
movsl
or
jnp
jecxz
push
mov
jle
and
movsb
lretw
push
out
mov
test
mov
add
sub
pop
loopne
ja
rcrb
and
pop
mov
cmp
in
cltd
xor
xchg
mov
lea
andl
rcrl
out
mov
jg
stc
les
jmp
out
xchg
push
aas
and
sbb
loop
mov
fwait
bound
lea
out
jle
in
mov
xor
rorb
je
push
mul
mov
nop
and
cmp
mov
dec
scas
sbb
mov
out
push
imul
mov
in
push
add
pop
push
lea
scas
dec
add
icebp
fstpt
pinsrw
test
out
sub
jecxz
push
lods
fmuls
adc
xchg
pop
testl
je
lcall
lods
mov
jle
xchg
pop
xchg
les
lret
ret
js
jb
and
or
sbb
push
inc
icebp
mov
xchg
jecxz
xchg
outsb
dec
pop
cmp
scas
outsl
cmp
imul
mov
push
dec
je
cmp
xor
cmp
adc
inc
and
mov
enter
push
and
mov
sti
ret
or
lea
or
stos
xchg
mov
or
and
push
test
pop
sbb
leave
pop
lahf
adc
scas
aad
pop
add
cmpsb
call
imul
das
push
dec
xchg
stos
cmp
add
dec
in
mov
xor
adc
push
mov
or
psrlw
arpl
leave
test
mov
mov
ret
push
fmul
mov
inc
inc
mov
fwait
sub
fsubp
adc
pop
mov
cli
xchg
ljmp
cld
or
fbstp
add
arpl
fcoms
and
sub
mov
adc
adc
sbb
adc
dec
dec
pop
mov
fs
inc
mov
cmp
push
and
pop
xor
mov
leave
jbe
std
pop
xchg
jae
mov
xor
movsb
xor
stos
jnp
mov
loope
jo
lods
jns
outsb
in
sub
jns
popa
dec
sbb
pop
and
cmp
adcl
adc
in
shll
divl
lock
leave
fildll
cwtl
mov
fildll
ret
add
jno
or
icebp
dec
iret
mov
mov
cmp
pop
mov
sub
nop
lret
lcall
rcr
sbb
jno
xchg
pop
jb
ror
sub
xor
cmp
mov
cwtl
cmc
mov
cmp
jnp
out
arpl
addb
sbb
mov
das
in
ds
inc
lods
nop
adc
pushf
cwtl
and
maxps
stos
xchg
xchg
sub
es
dec
nop
cs
push
push
in
mov
ror
lock
cltd
stc
outsb
out
mov
sbb
std
das
clc
jnp
ja
in
jle
push
movsl
sti
pushf
jmp
incl
enter
push
jmp
mov
jecxz
sub
mov
or
jge
outsl
mov
cmc
and
dec
cmp
mov
jmp
test
add
mov
lret
push
and
fldenv
enter
mov
jns
call
clc
push
sbb
lcall
inc
data16
sub
cld
xchg
popa
pop
shll
lods
jmp
jb
cmpsb
push
adc
and
push
aaa
fbstp
sub
test
mov
mov
stos
iret
xor
aaa
hlt
or
loope
jg
and
into
mov
mov
pop
pop
pop
incl
mov
fisubl
and
ljmp
pop
mov
shll
mov
repz
xchg
and
or
adc
xchg
dec
dec
and
xchg
shrb
mov
lea
out
imul
mov
mov
pop
cmc
cmp
pop
lcall
pop
cwtl
push
xchg
mov
add
out
testl
in
mov
mov
cld
movsl
and
mov
frndint
sub
cmc
or
mov
adc
in
addl
pop
out
fsubrl
inc
nop
dec
mov
aad
mov
sarb
pop
and
mov
idivb
mov
xor
mov
cmp
inc
push
mov
shlb
dec
fcomi
stc
dec
xchg
test
ficoms
sub
fcmove
lock
nop
or
inc
push
cmp
xor
lods
cmp
or
call
fcoml
mov
lea
xchg
into
xlat
fdivs
push
jae
pop
jns
sbb
jns
movsb
jno
daa
ss
enter
popf
fsubrl
mov
cmp
pop
jb
mov
pop
aad
sub
and
mov
iret
inc
inc
inc
add
push
cmpsb
push
movsb
push
mov
daa
stos
cmc
mov
sbb
inc
loop
pusha
xor
into
jmp
mov
push
je
rcl
fwait
les
ror
inc
out
mov
mov
dec
xlat
hlt
outsb
fwait
mov
jb
push
xor
and
cmp
rolb
and
pop
lret
hlt
outsb
lret
cmp
sub
loopne
faddl
sti
pop
sbb
push
in
mov
xchg
leave
pushf
push
lret
lods
or
aam
call
sbb
out
mov
in
and
and
ljmp
lret
clc
jo
xchg
inc
fs
outsl
rclb
roll
lcall
insl
lcall
cmpsb
outsb
adc
mov
cmp
insl
inc
or
sub
fadds
jl
dec
loopne
xchg
dec
adc
push
lock
add
ss
or
sti
xor
sub
lcall
push
sub
sub
fwait
int3
lods
es
test
in
sti
sbb
push
adc
inc
cli
dec
aam
pop
js
popf
xchg
mov
cmc
mov
sub
or
clc
mov
scas
adc
sbbl
in
call
inc
mov
or
loopne
movsl
dec
popf
dec
lds
sub
fnsave
pop
add
push
sbb
gs
aaa
clc
clc
sub
lods
fimull
sbb
pop
inc
incl
push
stos
and
pop
add
ret
sbb
popa
or
xchg
out
and
mov
pop
inc
mov
add
inc
xchg
test
fimuls
aam
cmp
pop
popf
jge
out
mov
lret
cmp
scas
jno
cli
mov
xor
rcrl
ficompl
pusha
scas
testl
insb
xchg
je
dec
add
ljmp
sub
sub
push
mov
dec
jb
cmp
pop
pop
cld
adc
cltd
mov
mov
mov
lock
mov
and
lock
lret
pop
add
shll
jecxz
xchg
mov
xlat
lahf
xor
shl
mov
mov
test
sbb
jnp
cmp
arpl
sub
mov
mov
or
outsb
inc
inc
data16
fiaddl
or
jmp
cmc
pop
adc
and
jo,pt
iret
jo
test
inc
movb
insl
sbb
push
xchg
jp
mov
cmpsb
ret
int
sub
push
push
or
bound
jge
adc
outsl
mov
push
dec
add
cmpsb
test
mov
dec
inc
and
popf
sub
sub
cwtl
sub
pop
addr16
jne
add
adc
pop
test
xchg
push
fisttpl
push
cmpsb
data16
inc
mov
and
pop
or
jg
aaa
ljmp
aas
hlt
add
scas
mov
and
mov
clc
lret
inc
inc
and
fs
lahf
lock
icebp
sti
xchg
jmp
dec
push
sahf
adc
cmpsb
mov
int3
movsb
pop
mov
lock
sbb
jns
stos
bound
mov
xor
out
push
outsl
dec
cmp
and
cmp
sub
cmp
sub
sbb
push
lahf
lret
add
pop
fisubl
xchg
es
decl
push
adc
jp
xchg
pop
decb
push
sbb
inc
idivb
das
in
add
jl
push
xchg
add
loope
jb
loop
fisttps
cmpsb
mov
repnz
sub
bound
and
cmp
cld
push
scas
lea
cmpsb
fisttpl
cmpb
fimuls
mov
iret
xor
mov
and
fadds
fildll
jle
sbb
and
leave
roll
mov
push
jne
dec
add
rclb
cmc
mov
xor
push
adc
pop
mov
mov
push
or
out
push
movsl
frstor
subl
lahf
cmpsl
pusha
ljmp
sar
loopne
or
jb
rorb
iret
iret
push
cmp
mov
lods
mov
and
xor
daa
pop
cmp
dec
add
scas
mov
jo
arpl
faddl
xchg
inc
mov
test
loope
jg
add
push
rcr
inc
sahf
cmpb
pusha
rcrl
and
and
jbe
rclb
scas
jns
cmp
movsl
ja
mov
nop
and
pop
mov
dec
mov
add
cld
mov
movsb
pop
cmp
adc
xchg
pushf
ljmp
xchg
push
and
jo
sub
add
in
cmp
movsl
lahf
imul
mov
sbb
loope
imul
push
sarl
dec
popf
pop
jge
mov
push
outsb
shlb
fmul
in
mov
movsb
je
sub
pushl
sbb
pop
sbb
dec
cli
cmp
pop
loop
dec
mov
je
les
and
repnz
or
scas
adc
adc
cli
or
mov
push
and
ficoms
jb
xchg
iret
into
repnz
and
mov
add
cmp
scas
cwtl
pop
stos
push
add
andb
clc
icebp
sbb
mov
or
inc
pushl
sub
clc
jl
movsl
jne
inc
mov
adc
fsts
mov
mov
ret
cmovg
mov
xchg
and
xor
das
fs
add
pop
inc
xchg
stc
mov
ret
aad
dec
jbe
leave
shlb
or
outsl
xchg
sahf
stos
mov
mov
inc
in
sti
call
lods
jmp
clc
mov
cmc
and
sub
push
or
mov
xor
mov
fs
push
icebp
sub
xor
sarb
dec
icebp
jno
in
or
jno
push
mov
addl
insb
pop
xor
adc
lret
fimull
out
sub
pop
sarb
mov
dec
incb
test
jae
lock
mov
or
fisubrl
iret
push
je
jb
mov
fmull
and
pop
cmpsl
iret
xor
loop
or
sub
and
xor
fs
ret
jo
sbb
add
scas
push
cld
jecxz
inc
mov
int
mov
cmp
addr16
jle
or
cmp
mov
jle
dec
ja
pop
imul
push
adc
enter
push
leave
xor
stos
xor
leave
cmp
std
shll
xlat
out
addb
mov
jg
pop
jp
mov
sar
mov
call
jle
mov
aad
add
in
sbb
mov
cmp
push
cmp
push
and
add
call
in
add
add
ret
jp
inc
push
xchg
sub
mov
lret
int3
dec
leave
loope
int3
sub
pushl
scas
dec
pop
aam
jge
sbb
mov
pusha
scas
out
aam
sub
inc
fwait
idivl
out
leave
or
xor
stos
int3
ds
cli
pop
add
sbb
je
fidivrl
add
add
xchg
sbb
push
mov
frstor
mov
rcrl
loope
add
cmpsb
jne
in
in
daa
clc
sbb
aas
push
push
das
popf
push
mov
shlb
push
int3
arpl
icebp
mov
imul
fidivrs
in
js
xor
pop
pusha
mov
or
xor
lcall
loope
cs
mov
xchg
jae
mov
fidivrl
dec
pop
push
stos
inc
enter
push
mov
lret
xor
and
ret
jle
push
fimull
dec
aas
dec
mov
pop
out
aam
rcll
sub
std
mov
and
add
int3
push
and
mov
inc
jbe
xchg
lret
je
dec
inc
je
inc
imul
clc
inc
cli
jp
push
xchg
or
loop
call
lods
mov
cmp
mov
sbb
scas
adc
mov
nop
test
pop
aas
out
test
loopne
test
push
pushl
xchg
test
xlat
and
ja
add
out
adc
add
jbe
pop
int3
hlt
add
outsb
movsl
cs
imul
dec
int
aam
add
xor
inc
aas
out
fsts
mov
xor
and
icebp
adc
mov
aad
idiv
pop
pop
cltd
mov
xorl
jmp
into
stos
les
imul
push
jl
xchg
xchg
mov
jp
out
xor
jo
xor
dec
cmp
or
outsb
loop
mov
in
dec
in
push
loop
xor
dec
cmp
pop
inc
sbb
lock
adc
dec
push
xchg
lcall
cwtl
xchg
mov
ja
lods
dec
ret
mov
mov
mov
outsl
fs
or
pusha
xor
mov
das
loop
sbbl
shll
mov
or
jne
xor
or
pop
loope
mov
push
cmc
sti
mov
sbb
roll
dec
je
lods
loope
test
pop
loope
pop
lods
movsl
outsb
lods
scas
bound
movsb
sti
mov
and
out
or
mov
add
or
xchg
insl
lea
rcrl
sub
fmuls
popf
jbe
pop
jle
sub
cli
aas
add
daa
icebp
jno
fwait
sub
stc
int3
aas
xchg
xchg
adc
lcall
mov
adc
pop
jnp
cmc
xlat
lcall
dec
push
sbb
xchg
imul
sub
test
out
in
ja
mov
push
movsb
pop
mov
sbb
mov
pusha
inc
sub
mov
inc
popa
pusha
cmpsb
imul
sbb
shrb
inc
lds
adc
shl
xor
aad
xor
loopne
out
mov
mov
arpl
rcrl
aad
in
ss
xchg
mov
cli
out
outsb
mov
pop
or
mov
sub
mov
sahf
movsl
jnp
pop
lcall
jne
lahf
xor
xchg
add
inc
sbb
fs
lahf
iret
cmp
jnp
push
add
cmpsb
push
fldl
in
push
add
xlat
inc
mov
arpl
clc
sbb
sbb
inc
mov
add
mov
test
push
push
scas
jmp
incb
or
cli
jo
pop
cli
pusha
push
pop
out
movsl
pop
cmp
jmp
xor
hlt
inc
subb
jecxz
mov
repnz
nop
push
or
jno
or
jecxz
cmp
dec
fwait
and
mov
stc
push
leave
sbb
push
pusha
aad
stos
adc
inc
sbbl
or
mov
or
lahf
and
add
sub
jnp
mov
pusha
mov
shlb
aas
mov
loopne
clc
aam
dec
arpl
push
loope
lret
cmpsb
fs
xor
or
imul
add
inc
push
inc
mov
sbb
xchg
mov
jge
outsl
push
je
fbld
imul
gs
imul
pusha
or
push
inc
lock
jbe
lea
push
xchg
outsb
cmpsb
lock
in
inc
xor
fchs
lcall
or
sub
xchg
out
xchg
fidivrs
lret
mov
clc
insb
hlt
sub
lods
xor
int
imul
sub
sub
test
ds
mov
jae
lea
xchg
lahf
pop
mov
fstp
sub
add
stos
fwait
mov
jno
xor
xor
pop
in
sub
jmp
dec
jle
popa
es
mov
into
push
lods
mov
fnstcw
cmp
ljmp
loop
lds
and
push
or
pop
int3
sbb
lock
mov
shl
repz
outsb
repz
add
into
into
loope
or
lcall
xlat
cmp
sti
push
push
xchg
sbb
idivb
hlt
fisubs
pop
dec
sbb
idivl
mov
not
mov
jo
out
call
sbb
jnp
lods
push
jbe
dec
in
enter
jns
jb
ljmp
fcomi
mov
inc
ja
mov
lcall
sarb
loopne
push
sahf
arpl
pop
in
ss
cmp
add
or
ss
ss
and
rcrl
pop
mov
inc
inc
ret
clc
orb
add
addr16
jns
int3
aam
xchg
test
fdivs
pop
imul
fcmovu
mov
cmc
shll
leave
js
fidivl
sbb
sub
cmp
or
or
sub
cmp
es
mov
pop
stos
push
xor
es
addr16
pop
cmp
pop
push
int3
push
fcmovnb
pusha
pop
add
fs
imul
jle
and
leave
push
inc
pop
dec
inc
fisubrl
pop
push
cltd
pop
out
aad
aas
pop
jle
jo
call
xchg
cmp
lahf
fdivrl
lret
lods
aaa
xor
and
rorb
dec
xchg
hlt
xor
out
popf
sahf
lret
nop
and
in
pusha
fcoms
popf
fdivs
push
subl
sahf
xor
test
roll
loop
fstpl
xchg
aas
xchg
sub
popf
push
cmp
and
mov
dec
gs
je
jae
mov
fimull
mov
icebp
add
dec
adc
call
clc
lods
mov
adc
push
push
push
cmp
pop
testb
xor
mov
es
mov
push
cld
dec
push
mov
daa
sahf
jp
scas
scas
push
cmc
std
and
lea
or
out
mov
pop
pop
scas
mov
add
adc
jl
das
mov
in
pop
or
adc
push
jecxz
pop
testb
repnz
mov
sti
inc
mov
cmc
rolb
lods
and
loope
xchg
add
push
in
mov
push
jae
jmp
mov
push
jns
add
in
int3
stc
mov
inc
scas
dec
push
jmp
or
fcoms
imul
mov
pop
sub
cltd
sub
pop
shll
roll
int3
jmp
into
jp
add
jle
dec
fs
mov
xchg
and
in
or
inc
jb
xorb
add
jecxz
adc
add
pop
int3
data16
cmpsb
and
mov
pop
iret
adc
movsb
push
ja
mov
push
xchg
ja
inc
inc
pop
pop
in
mov
cmpl
push
jge
pop
sti
aaa
adc
or
movsl
scas
push
lock
mov
add
js
sub
mov
mov
cmpsl
sub
and
and
and
push
test
aaa
aas
cmpsl
int
lcall
pop
sbb
out
mov
or
fsubrs
push
stos
test
cld
mov
lea
cmp
movsb
cld
test
sub
sti
into
in
mov
sarl
mov
leave
rorl
nop
int
paddb
shrb
mov
ss
std
xchg
xchg
sub
outsl
pushf
sbb
cmp
inc
inc
push
rorl
mov
mov
mov
inc
ds
add
push
and
ljmp
mov
outsb
mov
fisubs
ljmp
xchg
test
push
ja
add
add
fdivrl
mov
out
aas
mov
mov
data16
cmp
adc
movl
sub
adc
lock
ret
movsb
xchg
xchg
xor
cltd
gs
ds
rcrb
xchg
push
mov
cli
push
xor
cld
push
fildl
out
inc
xchg
jns
outsl
movsl
sub
mov
out
les
jae
jo
jg
adc
pop
mov
xchg
insl
popf
mov
xchg
mov
in
movsb
sbb
call
pop
cmp
stos
inc
cwtl
fnstenv
fistpll
lods
jns
adc
push
das
push
in
js
insl
mov
call
fdivl
mov
mov
out
sbb
xor
stos
lods
mov
lds
js
add
addr16
enter
rorb
mov
mov
sub
cmp
sbb
js
mov
jle
movsb
out
icebp
test
and
fstpl
cmp
xchg
fmull
xchg
mov
sbb
push
jbe
or
ret
ret
mov
loopne
cmpsl
shr
test
ficomps
repz
sarl
jne
xchg
js
dec
imul
scas
mov
mov
aam
cs
mov
stos
repz
sarl
and
imul
pop
pop
sub
xchg
rcrb
mov
push
in
jb
dec
ret
cmp
and
outsb
dec
inc
dec
mov
cmp
mov
outsb
gs
jmp
std
enter
les
cmp
btr
movb
sbb
and
mov
dec
dec
daa
inc
push
pop
outsl
jno
mov
cs
in
frndint
loopne
faddl
outsb
es
sti
xchg
inc
test
aad
out
pop
stc
movl
mov
cmp
pop
fists
rcll
gs
push
roll
lods
lods
sub
imul
push
jmp
outsb
pusha
stos
aam
push
or
aam
inc
jns
adc
add
imul
sub
scas
adcl
sbb
mov
mov
dec
inc
xchg
movsb
mov
cmpsb
in
in
loope
push
dec
in
jecxz
loope
dec
mov
cmp
adcl
dec
sbb
imul
add
jo
addr16
iret
push
and
lds
dec
test
aaa
scas
add
sub
xchg
xsha1
cmpsb
into
loop
inc
cmp
lret
pop
fisubrl
xchg
std
mov
cmpsb
sarb
stos
fldcw
mov
jge
xchg
loopne
enter
mov
xor
add
icebp
sbb
mov
cmp
lods
loop
push
xor
add
cmc
movsb
outsb
adc
push
dec
stos
mov
add
fwait
pop
sbb
fimull
movsl
push
mov
xchg
aad
sbb
sbb
rorb
pop
dec
cwtl
push
mov
or
mov
jecxz
sub
lahf
inc
xor
shlb
sub
cmpsl
push
sbb
mov
insl
into
aam
mov
dec
mov
lcall
dec
inc
arpl
lea
addr16
xchg
fs
cmp
pusha
mov
fiadds
shll
xor
insl
mov
jmp
fwait
dec
jae
lahf
sbb
mov
scas
fimuls
test
sahf
xchg
jb
push
mov
pop
push
repnz
push
xchg
mov
aaa
and
xor
push
fnstsw
mov
or
push
sbb
jae
cld
jmp
stc
fucomip
les
outsb
xchg
mov
inc
enter
xchg
decb
push
push
lods
adc
ror
fs
ret
stos
mov
push
xchg
push
fimull
mov
jecxz
adc
inc
cmp
stos
adc
aad
push
jecxz
or
mov
jnp
mov
ljmp
xchg
dec
push
inc
int3
push
stos
or
int
pop
or
jno
in
lret
das
pop
aam
shrb
and
dec
inc
cmp
xchg
pop
ficoml
cs
lds
sbb
dec
dec
push
icebp
imul
gs
or
iret
mov
ret
fwait
insl
pop
sub
cld
mov
jb
adc
fucom
cmpsb
adc
jne
mov
and
inc
int
push
sub
dec
aas
and
aad
out
pop
push
fiadds
pop
sahf
add
push
enter
jns
mov
add
mov
sbb
lea
shrb
jno
xor
inc
add
or
lret
mulb
cmpsl
pop
ljmp
movb
sbb
movsb
push
adc
lock
arpl
loope
fs
cmp
or
jmp
out
cmp
jns
push
mov
repz
imul
dec
insl
dec
adc
in
daa
inc
dec
out
dec
push
jmp
jecxz
pop
push
rclb
push
push
stos
jge
lea
shll
loop
mov
shlb
in
push
lcall
pop
std
repz
call
punpckhdq
es
push
mov
fisubrs
dec
sti
mov
mov
pop
fsubrl
gs
inc
add
xchg
arpl
stos
add
les
jl
out
mov
mov
dec
pusha
adc
jge
cmp
sub
xchg
outsb
mov
shll
cwtl
lret
leave
jecxz
repnz
fwait
jge
imul
push
cmp
xchg
mov
stos
xor
or
sbb
and
mov
cmp
imull
sbb
pop
in
inc
inc
push
mov
mov
imul
inc
mov
and
xchg
mov
inc
popf
or
and
xchg
inc
cwtl
in
xor
push
fsubs
imul
or
test
adc
into
call
sub
and
std
bound
push
mov
mov
dec
xchg
mov
adc
push
push
ja
jle
and
insl
dec
lods
sahf
lds
cmpsl
rorb
loopne
out
or
pop
repz
push
push
arpl
add
mov
add
mov
and
das
cs
push
orb
mov
mov
sahf
aad
stos
clc
movsl
cltd
cmp
movsb
sub
subb
pop
cli
jb
test
adc
add
ficompl
inc
pop
mov
push
jae
fcompl
sbb
jae
jbe
xchg
and
xchg
sti
inc
pop
pop
jl
adc
shll
mov
dec
repz
add
pop
sti
sub
push
xlat
mov
fisubs
push
fcoml
pop
pop
pop
out
pop
leave
roll
stos
insl
mov
fsubs
inc
repnz
in
cmp
push
mov
fdivr
int
xor
ljmp
ljmp
mov
mov
movsb
xlat
jmp
or
fwait
rcrb
outsb
xchg
pop
ret
lods
adc
dec
sub
cmp
pop
xor
fdivrl
stc
cmc
pop
sbb
add
ljmp
das
pop
fs
lret
cmc
xchg
xchg
cs
add
xor
sub
sbb
xchg
sub
cwtl
dec
ljmp
cld
adc
fidivrl
dec
loope
jb
xchg
ret
bound
rcll
xor
mov
sbb
lret
mov
out
flds
addl
inc
push
xlat
adc
pop
popf
repz
and
imul
mov
loopne
outsb
mov
or
xchg
push
ret
mov
pusha
icebp
sbb
mov
or
mov
xor
jns
das
and
pop
cs
or
sarb
sbbl
push
jmp
sub
ss
imul
xchg
pop
jle
push
scas
out
jbe
mov
iret
cmp
insl
adc
xor
mov
jo
mov
or
inc
icebp
into
mov
lahf
rclb
nop
pop
sub
push
push
enter
testl
or
mov
cmp
in
clc
xor
bound
xor
push
div
xchg
call
les
mov
out
cltd
push
lret
xchg
dec
jecxz
push
sbb
mov
leave
mov
sbb
aad
pop
xor
cmp
adc
xchg
jge
pop
sbb
cmpsb
ljmp
adcl
sub
push
push
pop
push
movsl
iret
xor
lds
cmpl
shrb
and
xor
or
loope
outsb
xchg
dec
or
xor
enter
and
and
aad
dec
pusha
mov
mov
push
test
push
xor
pop
out
push
test
mov
xor
enter
add
and
cmp
dec
cwtl
aam
jmp
repnz
jno
dec
imul
inc
or
sbb
push
jns
add
xchg
jmp
add
arpl
ficompl
daa
push
or
mov
in
rclb
inc
std
sub
cmp
sbb
push
xor
xchg
jnp
sub
out
xchg
or
xchg
lods
inc
and
stos
subb
dec
inc
popa
mov
mov
lret
xlat
sti
fs
out
loop
mov
sbb
xchg
ret
ficompl
scas
inc
jl
inc
mov
aas
dec
jecxz
adc
out
pop
sub
ror
stos
cmc
cmp
or
dec
inc
cmpsb
mov
dec
imul
xor
in
dec
mov
int3
mov
cwtl
cmp
xor
push
aas
std
add
lock
inc
jecxz
movsl
movsl
jb
add
mov
cmpsl
xor
mov
mov
add
rcll
sbb
push
sub
lock
out
push
jo
xor
dec
cltd
pop
push
pop
jge
mov
mov
hlt
sub
pop
cmp
push
fsubrs
inc
out
and
mov
fdivs
cmpb
addr16
jns
mov
add
shrb
sub
mov
mov
mov
xchg
sbb
test
imul
mov
jmp
insl
mov
jge
stos
dec
lret
mov
jp
cli
test
push
pop
jnp
je
mov
insl
leave
mov
add
sti
xor
xchg
sarb
dec
xor
push
into
inc
insb
mov
jle
xchg
push
inc
cmp
adc
dec
push
sbb
pop
xor
inc
ficomps
or
add
inc
add
lahf
sti
mov
arpl
test
push
pop
stos
sub
subl
dec
das
leave
ret
push
pop
enter
addr16
sbb
cmp
mov
les
rcll
fwait
pop
mov
arpl
lock
jle
mov
les
push
addb
dec
inc
leave
outsl
pusha
jo
jne
xor
push
xor
subb
or
cld
inc
pop
adcb
out
adc
test
or
jne
adc
xor
mov
cmc
jg
push
jmp
repz
inc
popf
xor
xor
outsb
lods
das
leave
dec
jge
scas
adc
lahf
sar
les
pop
stc
scas
lahf
jno
fwait
je
nop
int
inc
add
mov
pusha
pop
std
shlb
pusha
sbb
xor
mov
mov
xchg
cmpsb
cmp
xor
outsb
pop
jb
mov
scas
scas
out
dec
cwtl
adcl
jge
cmp
inc
or
cmp
loop
inc
stc
push
jge
sbb
pushf
dec
leave
outsb
xchg
xchg
or
adc
sub
sub
fldt
pop
sti
inc
pop
xchg
fidivl
outsl
sub
dec
mov
mov
lods
or
xchg
negl
mov
push
mov
js
js
push
fcmovbe
jne
push
xchg
test
aas
ret
aas
push
xchg
mov
xor
push
mov
mov
out
mov
jmp
fidivrl
add
pop
inc
jmp
out
out
lret
adc
adc
sbb
add
xor
in
dec
roll
repz
lahf
inc
aad
popf
push
lods
mov
mov
out
in
sbb
mov
adc
lcall
push
inc
dec
out
or
or
jle
cmpb
cmpsb
adc
movsb
mov
insl
inc
lock
mov
push
ror
jno
jb
sbb
repz
pushf
test
xor
subl
pop
in
xchg
daa
mov
scas
sar
xor
pop
xchg
mov
xchg
sub
popa
and
aaa
inc
testb
jne
test
repz
push
dec
rcr
xor
in
push
inc
dec
and
mov
movsb
add
les
xlat
push
inc
outsb
xorb
sub
push
cmc
outsl
repnz
pusha
jle
stos
imul
out
add
mov
dec
cli
outsb
int3
nop
or
dec
or
imul
mov
shr
and
cmpsb
ret
jo
mov
mov
cld
scas
test
xor
mov
mov
xchg
add
aaa
or
test
popa
jb
jns
fcomps
das
test
pop
bound
lret
jmp
jge
adc
add
scas
daa
mov
arpl
lahf
rclb
in
pop
cmp
and
jb
xchg
cmp
xchg
mov
jecxz
int3
adc
mov
movl
push
fnsave
das
jno
das
mov
mov
jg
cmp
sar
and
jl
mov
out
lds
mull
mov
pop
mov
repz
sbb
mov
push
pop
clc
popa
sbbb
aad
test
push
sbb
stc
push
sub
adc
xchg
xchg
dec
pop
cs
xchg
iret
sbb
push
pop
nop
jg
pop
dec
mov
and
js
rcl
pop
and
push
lods
sahf
popa
sbb
jb
lea
stc
lret
imul
cmpsb
repnz
and
add
push
inc
loopne
add
or
pushf
out
outsl
call
xor
jb
mov
pop
fwait
lcall
loop
cmp
shl
cmp
jnp
js
enter
cmc
pop
daa
cmp
sbb
loop
dec
lea
sbbl
nop
inc
sti
inc
fcoms
xor
jae
addb
sbb
jg
out
scas
movsb
sarb
stos
mov
cmc
fdivrs
adc
gs
push
mov
mov
cmp
jp
xor
loop
and
int
jmp
lahf
inc
push
insl
in
xchg
mov
into
adc
push
dec
lcall
lahf
lcall
push
push
addr16
add
out
xchg
xor
loop
fs
pop
mov
in
scas
push
and
lret
lret
out
mov
cmc
clc
into
je
push
ficoml
and
rcr
xor
xorb
xchg
nop
mov
aas
int
adc
xchg
xor
jecxz
aam
mov
lock
aad
outsl
push
aaa
mov
pop
adc
out
cli
lret
ret
and
jnp
repz
jmp
dec
mov
shlb
das
ds
or
lcall
roll
add
mov
insb
mov
popf
out
int
sub
push
cmp
pop
adc
mov
sbb
push
addl
cmp
sbb
cmp
insb
push
mov
adc
xchg
insl
sbb
inc
and
mov
into
sahf
rolb
ljmp
xchg
or
pop
inc
sub
stc
cmove
sub
fisttpl
dec
scas
cwtl
mov
cs
add
jg
mov
jmp
and
mov
pop
inc
push
shrb
rcrb
pop
ficomps
clc
xchg
and
sti
js
sub
in
dec
addr16
fildll
sbb
rcrl
adc
lds
sbb
jo
push
add
jo
fs
push
mov
mov
sbbb
cmp
out
sbb
jne
adc
mov
xor
sub
insb
xlat
dec
inc
es
mov
jnp
adc
pop
pop
int
mov
push
outsb
cwtl
jg
push
ljmp
mov
lds
add
mov
fs
mov
mov
mov
and
push
int3
xchg
sub
cmpsl
push
les
pushf
dec
mov
pop
xchg
cmp
adc
ret
inc
mov
stos
add
jne
ds
stos
pusha
mov
rolb
cld
pushf
sbb
jmp
xor
mov
shll
stos
jge
cwtl
adc
mov
dec
lods
cmp
mov
mov
cmp
mov
push
in
sub
or
push
lock
push
imulb
mov
mov
add
ret
outsl
or
xor
push
imul
mov
lret
gs
imulb
addr16
mov
mov
adc
xor
call
lods
outsb
mov
mov
or
lcall
mov
sub
call
or
inc
lods
jg
push
js
push
mov
mov
add
lcall
loope
dec
cmp
clc
popf
shrb
lret
lods
inc
or
lahf
mov
xchg
imul
int3
xchg
into
jmp
loope
mov
lcall
mov
arpl
loopne
loopne
popf
sar
push
mov
es
shll
and
repnz
pop
pop
push
pushf
sub
inc
mov
mov
xor
cmpsl
sbb
sbb
imul
jno
pop
mov
daa
btr
adc
nop
in
adc
int3
ret
or
rclb
rolb
int3
jne
cltd
jg
out
int3
stos
ret
push
push
push
mov
popf
test
sbb
shr
jecxz
or
pop
push
shlb
fisubrs
sub
sar
xacquire
fxch
out
dec
enter
mov
nop
popa
popa
sahf
or
adc
cpuid
iret
pop
sub
sub
pop
mov
sub
or
mov
das
out
ret
pop
jno
jg
int
loopne
or
sub
mov
pop
pop
xchg
call
jae
dec
fwait
lcall
shrb
lods
pop
adc
imul
ds
jg
push
cltd
push
test
jecxz
imull
dec
inc
inc
or
sbb
sub
cltd
pop
sbbl
add
ss
sub
xchg
dec
sub
add
xchg
mov
scas
push
into
int3
dec
aas
push
stos
mov
mov
in
ljmp
popf
stos
or
jne
out
mov
fdiv
gs
mov
in
into
sub
loop
aad
loopne
mov
es
dec
je
cld
in
cmpsb
push
add
int
mov
pusha
insb
xchg
idivb
inc
mov
testl
xchg
ljmp
mov
testl
fcmovb
iret
in
jnp
sbb
fistl
push
adc
popa
inc
mov
arpl
push
js
xor
es
xor
inc
xlat
ds
pop
sahf
test
std
jae
jge
mov
test
and
int
xchg
lahf
jae
jmp
dec
aas
in
mov
cmp
sub
pusha
push
cmp
int3
repnz
iret
sahf
sbb
mov
xchg
xor
push
inc
lods
sub
clc
mov
cmp
test
cmc
pusha
inc
mov
sarl
subb
in
inc
add
push
pusha
ret
sbb
mov
sbbl
sbb
jb
cmp
push
dec
xor
rcrb
insl
jne
test
sbb
aad
stos
xor
rolb
stc
fwait
aam
sbb
cmp
dec
and
push
push
mov
push
call
sar
pop
mov
inc
shlb
sbb
or
sub
fadd
fs
test
add
add
mov
test
pop
push
int
pop
enter
hlt
jge
push
xor
and
cmp
jmp
mov
pop
cli
cmp
bound
jl
mov
inc
or
stc
daa
pop
and
sbb
pop
notb
ss
insl
mov
push
test
or
decl
fstps
cmpb
dec
xlat
or
out
rcrb
xor
les
mov
adc
repnz
push
xchg
inc
pop
enter
push
mov
add
pop
sahf
daa
xchg
fcompl
enter
scas
pusha
fs
sub
nop
test
out
into
mov
push
jo
or
jmp
lock
push
adc
adc
movsl
jge
sbb
icebp
es
lahf
dec
cltd
jnp
mov
cmpsb
push
and
xor
lds
rcr
ljmp
rcr
xchg
jnp
sbb
in
cmpl
nop
xor
incb
ret
lahf
fwait
jbe
stc
aaa
mov
inc
dec
add
inc
cli
xchg
cmp
cwtl
shrb
test
add
mov
je
lret
imul
out
call
and
movsb
xchg
lret
or
pusha
mov
gs
je
dec
clc
mov
je
andl
xlat
mov
sub
lea
call
sbb
mov
sub
push
cmp
mov
call
insb
in
jae
mov
fucomi
loopne
mov
push
dec
nop
lds
mov
jp
ss
cli
idivl
inc
mov
mov
pop
add
bound
mov
xor
xor
jbe
dec
adc
dec
push
ds
and
adc
push
ss
fwait
lods
clc
push
push
xchg
fwait
rcrb
lcall
icebp
adc
or
adc
andb
push
jb
cmc
ret
les
roll
test
add
sbbl
mov
adc
mov
arpl
bnd
jnp
push
add
insl
push
dec
xchg
shlb
stos
cmpsl
call
nop
mov
stos
call
sar
mov
mov
out
outsb
push
cmp
dec
xchg
jle
stos
pop
enter
cmp
enter
jae
jb
jecxz
xorl
nop
scas
mov
xor
test
adc
gs
mov
add
jns
pop
aaa
mov
mov
gs
add
sti
mov
fadds
mov
pop
cmp
add
loop
sti
xchg
cmc
mov
movsb
sahf
popf
cmp
cmpsb
sub
fisubrs
xchg
stos
js
adc
inc
pop
jae
mov
pop
adc
and
notb
pop
xchg
xor
movsb
ds
jae
lds
jl
adc
xor
sti
hlt
int
jae
xchg
lret
cld
mov
xor
pop
push
pushf
xlat
jns
ss
iret
sbb
lcall
push
jg
cvtdq2ps
fimuls
fnstenvs
clc
shlb
mov
notl
mov
in
cli
xchg
mov
cmp
add
jp
jl
inc
insl
pushf
inc
jo
popf
jecxz
fisubrs
lret
test
mov
shr
jg
jo
dec
mov
sub
cmpsl
mov
imul
arpl
test
xchg
addl
fcomps
or
add
mov
cmc
je
add
push
cld
in
or
and
sub
ja
data16
test
xor
xor
fwait
xchg
clc
dec
inc
cli
or
fisubs
fadd
fcomip
sbb
fwait
pushl
jnp
ljmp
sbb
mov
xor
mov
mov
sbb
subb
in
insb
js
mov
ss
cmp
dec
xchg
xor
in
jl
push
mov
adc
fucomp
push
and
outsl
dec
test
push
inc
mov
test
ficomps
adc
xor
inc
mov
adc
stos
in
outsb
xchg
adc
pop
inc
jge
int
dec
sub
jecxz
in
pop
js
sarl
jns
push
inc
xor
pop
out
xchg
add
ret
inc
sbb
jns
lds
movsl
stos
out
ret
lret
rolb
and
and
add
cmpl
dec
xchg
mov
addr16
mov
xchg
cmpsb
aas
mov
test
dec
cmpsb
push
popa
mov
xchg
pusha
test
mov
add
outsb
xchg
je
mov
pop
lock
ds
mov
into
sbb
cli
inc
mov
sti
pop
push
hlt
je
fnstenv
movsl
push
lods
fldenv
adc
divl
cli
leave
sub
jp
fwait
rclb
mov
test
jge
mov
sub
loopne
insb
clc
sub
jno
adc
sti
cltd
stc
shrl
ss
or
popa
xor
jbe
cmp
scas
cmp
pop
push
shll
adc
add
loope
adc
movsb
orb
insb
fstpl
inc
mov
inc
xor
sub
popa
push
jb
add
mov
push
sub
loope
orl
cltd
mov
push
aaa
rclb
push
mov
and
into
push
or
int
mov
popa
cs
cmpsl
in
cmp
adc
fnclex
lds
les
mov
icebp
bound
push
inc
mov
xchg
fsqrt
mov
mov
ds
mov
mov
lret
sbb
xor
cmp
movsl
xlat
mov
fadd
mov
sbb
lds
clc
aaa
cs
xchg
andb
in
daa
and
xchg
sbb
in
arpl
pop
and
das
cmp
outsb
movsb
sbb
adc
bound
sub
imul
ud0
jmp
mov
xlat
int
lret
mov
lods
movsl
loopne
adc
aam
pop
xor
loop
int3
jns
sub
hlt
enter
mov
movsl
icebp
jecxz
lcall
push
jg
push
js
dec
mov
jae
cmpsl
inc
mov
adc
sub
mov
arpl
pop
push
mov
mov
cwtl
pop
arpl
insl
jg
jge
dec
pop
ja
push
cmp
rolb
lcall
lds
ss
push
fisubrs
jno
adc
adc
dec
jecxz
lcall
pop
icebp
push
jmp
stc
or
xor
adcb
mov
and
outsb
xchg
int
adc
pop
les
ljmp
aad
fstpt
ficoms
int3
mov
and
push
cmp
js
stos
testl
pop
cmp
and
jnp
cmc
dec
jmp
movsb
outsl
mov
add
outsl
jae
popa
mov
adc
icebp
xchg
shlb
into
jmp
lods
jno
leave
stos
mov
nop
js
aas
cmc
mov
pop
sbbb
movsl
pop
pop
icebp
in
stc
ss
or
mov
sbb
int3
pop
dec
push
dec
js
dec
push
push
cmp
xchg
mov
push
aad
out
in
and
pop
push
cmpsl
movsl
jmp
mov
cltd
sbb
pop
and
xchg
mov
int3
adc
pop
rclb
mov
js
das
push
outsl
push
std
aam
mov
outsl
push
enter
pop
scas
mov
mov
call
pop
jg
lods
rcll
aaa
dec
adc
dec
push
cld
add
and
movsl
clc
mov
mov
pop
sub
orl
aam
in
mov
sbb
lret
orb
add
sub
xor
jecxz
cmp
cmpsl
push
mov
pop
popf
pop
ret
push
jp
mov
add
cs
sub
jle
adc
repnz
inc
cmp
clc
outsb
jae
inc
incl
test
mov
dec
mov
loope
jg
push
cs
dec
les
xor
gs
addl
adc
je
cmp
pusha
add
add
dec
movsl
pop
inc
xor
jge
sbb
lea
xor
fs
subb
sbb
lret
mov
ljmp
sub
or
in
add
xchg
scas
jnp
divb
and
adc
xchg
out
bound
iret
lods
ret
or
sahf
mov
adc
in
cs
mov
std
test
pop
add
out
xor
iret
ja
jnp
xor
gs
mov
data16
xchg
sbb
ss
in
iret
sub
xchg
stos
out
mov
jo
xor
or
mov
test
mov
mov
inc
out
inc
movsl
stc
jo
nop
or
dec
sbb
repz
pop
add
clc
sti
outsl
cmpsb
or
stos
inc
lods
orb
cs
stos
jge,pn
add
jnp
add
sahf
fisttpl
out
sbb
jbe
push
cmpsl
lea
and
push
pop
cmc
out
fdivs
cld
and
fildll
das
in
pusha
sbb
cmp
int
sub
out
clc
lahf
add
in
sahf
sar
lret
mov
cli
popa
sub
jp
or
out
repz
bound
cmpsb
sbb
xlat
xor
dec
mov
xchg
adc
in
push
dec
mov
adc
pushf
jbe
es
dec
stc
add
lcall
in
cmp
cmp
clc
arpl
test
lds
inc
int3
fstps
push
mov
or
adc
pop
js
xchg
outsb
ljmp
sub
push
outsb
push
mov
xchg
ret
push
pop
shlb
inc
out
adc
mov
fcmovnu
mov
out
jecxz
push
xchg
dec
fnsave
xor
rcll
cld
xchg
inc
xchg
andl
xchg
shll
cmpsb
fwait
pusha
cltd
call
scas
push
xor
dec
xchg
and
cltd
jae
mov
inc
xchg
pop
enter
sub
pusha
pop
pop
inc
es
negb
push
xor
adc
sub
cmp
test
sbbl
jo
mov
fs
ror
aad
dec
std
pop
rolb
jno
push
jecxz
leave
xorb
lds
push
sbb
and
cmp
rcll
pop
lahf
pop
sti
cmp
jmp
insl
dec
push
scas
mov
xchg
scas
jb
pop
jmp
js
aas
std
out
lods
lods
popa
jns
lds
xor
mov
inc
fcomps
jbe
insb
ds
xlat
sarb
rcrl
aaa
or
mov
ss
repz
js
sub
daa
shrb
xlat
out
push
cltd
aas
cltd
xchg
inc
pop
and
lcall
sahf
mov
dec
cmp
lcall
je
add
testl
mov
add
pop
mov
lcall
rorl
cmc
cmp
cltd
xchg
mov
nop
mov
stos
ret
inc
mov
mov
sbb
xchg
sbb
pop
cmp
ljmp
push
in
lcall
pop
imul
add
and
je
jge
cmp
je,pn
push
sbb
aaa
in
call
mulb
and
and
pop
push
addl
nop
mov
shll
xor
mov
mov
out
gs
mov
adc
pop
scas
or
lret
inc
lock
idiv
xchg
mov
roll
movsb
push
mov
fs
jmp
mov
insb
mov
testb
sbbb
pop
mov
dec
dec
add
sbb
and
scas
add
mov
mov
cmp
lret
out
mov
jbe
sti
je
loope
push
and
fwait
shlb
inc
dec
cmp
cmp
dec
sbb
mov
movsb
bound
xor
pushf
cltd
cmp
movsl
stc
cmc
out
sbb
in
sub
int
jno
enter
enter
cmp
inc
jle
adc
dec
lret
cmp
fcoms
leave
jmp
mov
push
mov
mov
push
imul
dec
out
pop
adc
mov
sbb
push
lods
dec
call
hlt
add
fistl
mov
ljmp
jle
add
fbld
adc
mov
dec
insl
gs
movl
sub
arpl
fistpl
loopne
sub
imul
into
and
mov
enter
iret
cmc
loopne
outsl
adc
lock
mov
push
sbb
gs
mov
xchg
and
pop
jae
clc
inc
sbb
pop
mov
cli
sub
ret
and
jge
out
jl
add
xor
mov
jns
mov
cmp
cmp
inc
daa
idivb
push
jns
mov
adc
outsb
pushf
dec
bound
fisubrl
jne
jmp
loope
adc
add
jb
mov
sbb
jbe
cmp
popf
mov
nop
mov
addr16
and
add
insl
in
jno
sub
mov
stos
push
fsub
pop
in
or
nop
fwait
or
add
add
jge
es
mov
xchg
jge
scas
loop
sub
outsl
loop
mov
push
add
dec
dec
scas
lcall
and
dec
adc
in
and
adc
stos
lock
fucom
ficompl
fcomps
out
cmp
aam
cld
xchg
mov
sub
shll
and
and
test
stc
sahf
xor
adc
sub
lret
shlb
out
subb
dec
out
add
out
cmc
mov
push
roll
int
loopne
imul
rorb
xor
addr16
sbb
fmull
dec
lcall
loopne
clc
clc
cmp
add
dec
or
pushf
mov
xor
insl
cmp
enter
xchg
sbb
push
movb
pushf
mov
lcall
or
shlb
mov
jmp
pop
aad
mov
outsb
pusha
xchg
pusha
int3
call
scas
push
nop
jo
shrl
stc
jae
push
mov
test
in
dec
xor
mov
into
dec
cmpsl
or
subb
jo
jae
sahf
sbb
xchg
dec
xchg
lods
lret
sub
into
ja
cmp
bound
lahf
imul
pushl
pop
push
dec
subb
and
cli
sub
gs
pop
jo
inc
add
addr16
int
inc
in
push
or
gs
or
jge
shlb
inc
adc
into
push
sbbl
loopne
scas
inc
pop
mov
jge
inc
div
cmp
inc
mov
int3
inc
xor
pop
xor
mov
rcrb
hlt
cmp
xchg
aam
mov
jnp
ret
fst
sub
mov
mov
and
sub
add
xor
jg
cmp
pop
hlt
gs
subb
sbb
xor
lret
fwait
stos
enter
sti
outsl
mov
out
out
bswap
xor
mov
js
add
mov
mov
jg
stos
sarb
test
adc
xchg
in
lods
cmp
fcompl
daa
dec
mov
call
loopne
push
jp
js
imul
mov
add
xchg
scas
cs
mov
imul
mov
push
sub
mov
xchg
loope
pusha
mov
sub
xchg
imul
and
lods
mov
jp
fisubs
fisubl
ljmp
adc
imul
js
aas
push
mov
loop
pop
inc
outsl
enter
add
cmpsb
or
pop
fdivrp
push
sbb
aam
xor
mov
je
cmp
lods
xchg
add
insb
jo
je
ror
inc
mov
inc
inc
jne
push
rcrl
sub
cmp
sub
mov
daa
xchg
cld
mov
mov
mov
xchg
mov
shll
test
das
mov
fisubrs
add
and
loop
mov
in
mov
or
jl
test
pop
iret
popf
ljmp
push
dec
pop
adc
imul
imul
push
in
and
iret
dec
xchg
fmuls
adc
pop
lcall
sub
das
lcall
int
gs
loope
cmp
push
and
jae
add
mov
or
jns
jae
and
push
pop
imul
out
or
jp
ja
popa
inc
ret
das
cli
add
add
sbb
cli
out
xchg
out
ds
pusha
or
adc
repnz
lret
and
test
aas
jg
adc
push
sub
repz
mov
iret
xor
jl
outsb
cmp
cmp
mov
xor
loopne
mov
popf
xor
popf
xor
ret
in
jb
mov
xchg
jb
jae
insl
jle
push
mov
add
cmp
test
and
push
sub
sub
mov
pusha
adc
xchg
icebp
or
mov
ret
lret
push
xchg
jl
ss
add
pop
js
ljmp
pop
cmp
jg
xchg
sub
mov
cmp
aad
fsubp
stc
push
lock
xchg
mov
cmp
fidivl
test
leave
push
lods
mov
fcoms
push
xor
inc
add
cli
imul
mov
jns
xor
xor
jg
lret
stos
pop
pop
sbb
stos
inc
mov
pop
sahf
fsubs
lods
sbb
jge
and
pushf
scas
sbb
lret
sub
ja
or
xor
in
push
pop
add
jns
or
add
sahf
ret
bound
ret
cwtl
and
test
mov
std
adc
scas
outsb
loop
out
decl
mov
call
pop
sbb
cmp
cltd
pop
adc
ds
pop
dec
pop
dec
cmp
jae
mov
xorb
sbb
ljmp
mov
mov
shll
add
mov
push
jae
push
shrb
add
mov
outsb
not
out
cmovb
ret
rol
fildll
fimuls
jp
or
jne
jb
test
call
mov
xchg
mov
ljmp
addr16
and
ja
sub
xchg
mov
aad
outsl
dec
fidivl
or
push
icebp
mov
xchg
subb
mov
movsb
outsb
mov
jb
repnz
test
inc
and
cmp
out
inc
arpl
fsubrs
inc
xor
enter
call
xchg
and
lret
les
cmpsl
aas
or
push
jmp
mov
addr16
jmp
lret
push
dec
mov
fsts
xor
nop
or
add
int
cltd
push
add
sbb
mov
add
aam
dec
sbb
mov
lcall
sti
sbb
jle
and
dec
jge
cmp
jne
clc
inc
into
rcll
xor
inc
iret
xchg
pusha
pop
mov
addl
cld
int
and
sub
xchg
vpunpcklbw
sub
gs
and
add
call
dec
lds
cld
mov
icebp
bound
movsl
mov
dec
xor
lahf
mov
das
push
pop
sbb
stos
mov
sbb
sarl
push
xchg
in
add
aas
mov
or
addr16
cwtl
das
adc
icebp
int
mov
pop
sti
not
aam
xor
mov
mov
xor
or
test
sti
sbb
push
aas
jge
sub
dec
xchg
insb
lock
mov
addb
add
jns
incl
rorb
mov
pushf
aam
testb
jmp
sub
mov
xchg
sbb
movsl
xchg
sub
mov
pop
aam
jo
loop
jl
scas
test
mov
in
in
pop
sub
push
mov
jb
xor
enter
repnz
repnz
mov
daa
xor
inc
lods
xchg
mov
rorl
lds
mov
push
xor
movl
loopne
jmp
fcomps
repz
std
pusha
push
lods
xchg
ret
jl
or
xchg
and
mov
jo
cld
lds
int3
das
je
xchg
sar
pop
icebp
jne
mov
cld
shrl
std
sub
push
sbb
jo
jecxz
mov
adc
xchg
mov
or
cwtl
mov
add
aas
pop
push
mov
pop
cwtl
cmpsb
xchg
adc
xchg
xchg
xchg
mov
inc
or
loop
cltd
pop
subb
pop
mov
or
xor
orb
das
pop
inc
jle
dec
pop
pop
mov
fsubr
or
test
mov
xchg
add
mov
cmpsb
daa
xchg
pop
ds
loopne
add
movl
loopne
loopne
pop
lret
movsl
lock
ss
popa
dec
lcall
jne
sbb
ljmp
mov
test
push
fprem1
pop
mov
popa
jge
xorb
fistl
jnp
icebp
addr16
loop
std
movsl
or
repnz
lret
fwait
fmuls
outsl
fmul
and
test
mov
in
mov
lds
cmpsl
mov
bound
scas
mov
pop
mov
xlat
fisttpl
popf
stos
sub
jge
outsl
inc
loope
or
mov
xchg
push
gs
mov
je
mov
push
ja
add
pop
xchg
sbb
popf
or
daa
imul
jge
xchg
xor
je
lock
pop
sbb
loope
cmp
ret
movl
cld
jns
icebp
mov
inc
mov
sti
xor
xchg
das
sub
adcb
ds
shrl
pusha
adc
xchg
dec
jbe
sub
xchg
pop
and
dec
out
daa
mov
fildll
das
ds
xor
jl
xchg
mov
not
mov
pop
ret
cltd
icebp
popf
fistps
mov
jbe
leave
test
sbb
adc
cmpsl
repz
cmp
aad
cltd
pop
xor
adc
mov
repnz
sub
fsubr
push
xlat
outsb
shl
pop
fmulp
pop
xor
mov
dec
jnp
inc
pusha
cmc
cmp
fcoms
pop
loop
push
jnp
cmp
or
out
gs
jg
test
lds
clc
push
int3
mov
pop
inc
hlt
cld
jo
in
xor
repz
js
xlat
adc
das
data16
and
pop
mov
ss
leave
stos
cs
daa
dec
addl
or
mov
repz
dec
add
jmp
sub
rorl
aas
imull
mov
cltd
in
pushf
mov
inc
xlat
mov
mov
rolb
jge
push
pusha
scas
dec
mov
cld
sub
mov
les
cmpsb
loopne
hlt
jl
xchg
sbb
fcoml
dec
cwtl
bnd
pop
mov
lret
movsl
ret
or
mov
and
ficoms
xchg
enter
fcoml
cli
xorl
or
mov
movsb
xchg
adc
add
dec
test
dec
hlt
cmpsl
add
dec
push
out
inc
out
cmpsb
cmp
adc
lret
jge
pop
fdivrl
mov
sbbb
popa
push
insl
aaa
dec
es
mov
lcall
xor
cli
sbb
adc
rcll
and
push
jb
mov
cltd
xchg
outsb
push
cmp
hlt
sub
cmp
mov
and
and
rorb
fwait
test
jp
adc
out
push
xor
mov
test
enter
fcoms
push
jg
stos
mov
inc
mov
pop
adc
xor
das
xchg
stc
fwait
movswl
lahf
imulb
push
jp
dec
inc
test
sbb
das
outsl
sbb
lret
test
idivl
push
mov
and
dec
mov
xchg
cmc
fistps
mov
jg
add
fs
repz
scas
int3
stos
ja
cmpsl
xchg
push
jno
push
ljmp
enter
pushf
xor
jno
adc
lret
pop
jne
lahf
jl
inc
std
ret
jg
mov
sbb
adc
das
out
outsl
jmp
stc
sbbl
mov
gs
aas
push
or
add
jae
std
jg
pop
xchg
jl
fdivrl
loope
mov
pop
mov
cmp
shlb
scas
mov
loop
int
inc
or
je
rolb
mov
bound
js
jbe,pn
jmp
out
idivl
mov
mov
lods
cmp
mov
lret
xor
cmp
xchg
push
popa
out
sub
scas
sub
in
test
aaa
jns
popa
xor
mov
enter
loop
xor
dec
mov
pop
cmp
ret
std
in
fadd
pop
test
mov
sbb
xor
shl
push
mov
pop
mov
js
xchg
xchg
js
clc
adc
jnp
aam
adc
mov
jecxz
add
xchg
aam
ss
pusha
cmc
loopne
inc
scas
in
cmc
icebp
aas
rolb
adc
xor
pusha
or
fstpt
push
jae
mov
xchg
or
iret
leave
pop
cmc
xchg
out
lret
mov
test
test
popl
jbe
mov
les
lret
lret
mov
dec
push
and
mov
test
outsb
lods
lret
aam
push
jo
jl
sbb
xchg
push
dec
pushf
imul
and
cmp
std
shl
push
ret
mov
jmp
ljmp
es
imul
addb
inc
pushl
add
stc
data16
xor
mov
pusha
orl
jecxz
dec
inc
fistl
xchg
insl
push
dec
repz
sub
out
inc
add
mov
imul
xchg
addr16
sar
push
mov
mov
push
iret
lds
xor
in
out
mov
cltd
dec
dec
xchg
clc
icebp
out
mov
sbb
leave
lcall
or
inc
adc
out
pop
jno
push
mov
movsb
dec
insb
repnz
lcall
std
push
pop
mov
rolb
sbb
loope
xchg
in
rolb
or
popf
cs
cmpsl
rcll
sub
or
pop
jmp
rolb
shl
lods
mov
int
std
cmp
cld
mov
sub
bound
dec
xor
mov
pop
sub
ret
xor
pop
xchg
jb
xchg
outsb
jno
pop
push
iret
cld
stc
xchg
movsb
fiaddl
dec
dec
sub
ds
inc
inc
cmpsl
test
cmp
sbbb
fiaddl
inc
pop
shll
xor
mov
sbb
daa
icebp
lahf
out
fsts
jae
dec
pop
xchg
out
adc
mov
dec
ljmp
scas
out
imul
mov
inc
stc
addr16
call
stos
pop
call
ljmp
ret
xchg
mov
mov
add
push
xchg
mov
jns
mov
mov
jmp
xor
std
das
cmp
aaa
leave
push
dec
popf
add
pop
and
mov
push
jns
aaa
in
ret
adc
push
jmp
sub
push
test
add
and
aaa
popa
jg
nop
into
es
and
popf
cmp
push
cmp
adc
dec
push
xchg
sbb
in
mov
jbe
dec
sub
push
out
add
addr16
imul
xchg
pop
call
lret
add
adc
cmpsb
movsl
pop
xchg
or
shl
jmp
cmpl
push
fisttpll
lock
add
std
jl
mov
mov
xchg
mov
cmp
leave
sub
mov
test
sub
cltd
pop
push
cmc
mov
fs
mov
imul
dec
mov
sbb
cmpsb
mov
lcall
lods
cs
int3
jle
aas
addr16
jbe
xchg
cmp
sti
subb
faddp
imul
mov
int
push
jbe
mov
and
add
mov
and
jle
repz
pop
lcall
sbb
sub
outsl
sbb
gs
inc
mov
mov
mov
test
inc
icebp
adc
ret
add
xchg
inc
push
les
xor
or
xchg
shl
aad
popf
imulb
adc
jmp
fdivrs
out
aad
movb
vmread
xchg
test
mov
in
jge
lods
inc
ret
inc
loopne
inc
lods
fnstsw
xchg
loope
push
or
mov
adc
fisttps
dec
int3
rep
subb
fsubr
jp
mov
cli
push
popf
mov
and
xor
jb
repz
gs
jecxz
xor
jb
lret
jbe
into
in
movsb
in
cmp
sub
in
push
rorl
add
shll
out
subb
das
mov
mov
js
out
dec
cmp
dec
cmc
dec
xchg
loopne
test
aam
outsb
aam
ret
nop
clc
imul
pusha
adc
dec
lods
push
int
or
and
dec
leave
add
mov
inc
xor
xchg
mov
jne
mov
cmp
imul
pop
jbe
shll
mov
fwait
out
dec
scas
pop
sbbl
cld
push
mov
imull
dec
lods
mov
hlt
sub
orb
fisubl
cmpsl
xchg
out
js
mov
mov
orb
scas
jns
movsl
iret
xchg
aaa
mov
xlat
orps
sbb
push
cli
out
les
dec
daa
add
fidivl
add
push
push
adc
xlat
in
pop
dec
mov
sbb
scas
out
pop
test
sub
arpl
mov
lcall
mov
ficompl
mov
inc
mov
fwait
jl
arpl
call
add
iret
imull
push
je
in
fistpl
inc
inc
jns
std
mov
push
scas
pop
enter
jge
loop
push
sbb
inc
dec
xchg
or
fildll
push
pop
mov
cli
test
mov
bound
xor
dec
gs
cld
lret
or
mov
idivl
sub
mov
add
and
sub
mov
sub
mov
or
sbb
addr16
js
cmc
ror
sub
jge
jg
mov
jo
add
push
adc
inc
jno
inc
add
es
or
aas
rolb
sbb
jbe
insb
jmp
xor
cli
sub
inc
test
add
bound
or
cmpsl
inc
clc
or
push
scas
lock
scas
insl
dec
fsubrl
inc
dec
mov
test
ret
or
lret
call
aad
sub
adc
cmp
rcrl
test
inc
xor
or
je
leave
jecxz
cmpb
or
out
aas
inc
sbb
inc
add
mov
jge
xchg
dec
insb
xlat
xor
call
enter
sarb
mov
sub
adc
imul
sub
or
and
sbb
pop
int
fcoms
lods
test
xchg
mov
jnp
in
mov
lods
xor
pushf
xor
pop
nop
lret
mov
dec
xchg
arpl
in
inc
mov
mov
sub
ja
andl
not
add
inc
aaa
dec
jmp
out
sarl
xchg
fdivrl
mov
js
in
dec
lret
cwtl
push
aad
adc
rorb
push
scas
ss
sub
ss
pop
ds
dec
cmc
pop
sbb
ficompl
in
jl
insl
aam
jmp
xchg
pop
mov
sub
lea
xchg
mov
jns
sarb
pushf
sub
shlb
and
addl
test
mov
fs
jae
jl
mov
iret
rorb
mov
push
js
cmp
pushf
imul
not
or
xchg
mov
sti
push
inc
ja
ret
insl
call
int3
push
sbb
or
or
lahf
ds
xchg
push
mov
mov
jmp
xor
outsb
pop
cmp
xor
dec
addb
cli
sub
pop
push
and
xor
add
in
in
iret
ja
js
lret
pop
xor
insl
sahf
or
xor
or
sub
shlb
fldl
testl
in
sbb
mov
mov
xchg
cmp
dec
xchg
inc
inc
testl
je
mov
pop
call
xchg
mov
adc
cmpsl
adc
jecxz
inc
aad
andl
int
mov
add
ljmp
push
push
cmpsb
pop
dec
mov
aas
push
mov
into
insl
movsl
jg
leave
push
push
dec
and
cld
inc
cmpsb
dec
adc
sub
jne
mov
adc
out
aad
pushf
xor
cmpsb
dec
lret
mov
divl
xor
shrd
ret
adc
jecxz
fstpl
or
stos
and
add
push
les
cmp
xchg
out
cs
fistpll
les
stos
ja
jecxz
lahf
dec
inc
imul
rclb
pop
push
lret
push
lea
xchg
xlat
sbb
and
xchg
ficompl
lock
jp
loope
out
mov
inc
xor
jo
sbb
and
and
mov
push
dec
inc
out
pop
mov
pop
mov
popf
das
dec
dec
and
movsb
push
jle
sarl
int
pop
sbb
push
and
ret
outsl
ffreep
loope,pn
mov
jbe
daa
fwait
out
mov
repz
sbb
insl
into
jne
rorl
dec
js
dec
push
lcall
outsl
lret
testl
pushf
or
repnz
lret
jp
sub
test
insl
leave
pusha
or
std
jb
jo
xchg
mov
xchg
jno
das
test
sub
mov
pop
pop
sbb
dec
notb
ds
and
mov
clc
xchg
mov
mov
sub
lods
pop
imul
je
cmp
cmpsl
lahf
mov
and
cltd
sti
mov
and
mov
loope
or
cltd
fmuls
sub
and
sbb
lods
mov
je
loopne
fidivl
push
sbb
and
xchg
jo
adc
push
ucomiss
and
xor
stc
or
pop
cmp
and
mov
outsl
cld
repnz
aam
out
push
nop
push
and
add
fwait
cmp
scas
cmp
or
out
mov
es
mov
jbe
jo
adc
in
shl
inc
pop
fldcw
sarl
fbstp
popf
fistl
jp
fstps
stc
xor
out
arpl
add
aas
push
jnp
push
add
cli
or
push
adc
inc
ret
jbe
loop
pop
int
ljmp
loopne
aaa
mov
dec
cmp
cmp
or
adc
add
xor
cmp
sti
sarl
mov
jno,pt
jl
rorb
into
cmp
jne
inc
jle
mov
stc
adc
xor
mov
pop
call
std
or
in
mov
shll
cmp
mov
pop
scas
lds
jae
scas
push
test
jo
inc
movsb
aas
shrl
in
ret
jecxz
jle
clc
push
data16
adc
addb
lret
push
jge
cmp
adc
mov
xor
icebp
push
push
lcall
or
mov
dec
or
inc
shll
mov
subb
xchg
push
fwait
sub
inc
xchg
xchg
add
and
sbb
pop
ret
xchg
inc
sbb
xor
sbb
and
imul
js
push
sarb
gs
dec
dec
cmp
clc
xlat
lcall
xchg
cmpsl
mov
daa
mov
inc
jne
adc
mov
mov
test
mov
mov
mov
dec
mov
sbb
pop
and
data16
jmp
lock
cmc
xor
add
insb
addl
in
cmpsl
dec
int
inc
dec
std
sbb
lret
movsb
in
add
in
jg
pop
and
xchg
out
inc
repnz
aad
sub
aaa
lods
sub
enter
inc
xor
xchg
jl
ret
frndint
sarb
jp
leave
outsb
iret
int3
fwait
add
push
mov
fdivl
test
or
sbb
insl
aam
jle
jge
shlb
xchg
push
mov
sub
adc
enter
dec
scas
pop
adc
add
pop
cmpb
mov
pusha
dec
xor
or
xor
outsl
jbe
fnsave
sarb
adc
mov
mov
loope
cmp
dec
jb
add
nop
flds
mov
mov
adc
jnp
out
push
icebp
test
and
fidivl
int3
vpackssdw
inc
or
leave
sub
mov
xor
mov
hlt
add
jle
fimull
sbb
fstpl
lods
jg
rol
daa
outsl
mov
and
inc
in
insl
mov
frstor
xchg
dec
lods
add
dec
enter
inc
lahf
sbb
ja
pop
mov
leave
std
mov
test
mov
cld
mov
test
fidivl
test
std
lock
dec
push
stos
xchg
or
lock
sub
xchg
inc
lret
push
mov
pop
xchg
stos
clc
xchg
push
test
cwtl
lock
sub
stos
push
cmp
imul
mov
xor
mov
push
jbe
mov
sahf
hlt
sub
cwtl
int
lea
sub
aas
jg
gs
lods
loopne
cwtl
xor
jns
pop
cmp
rcll
lock
ljmp
jo
sbb
cmp
fisttpl
add
and
mov
int3
xchg
push
clc
nop
xor
cmc
addr16
add
xlat
sbb
mov
inc
add
pop
xor
pop
pop
mov
test
jg
pop
lret
fisubrl
fwait
dec
out
xchg
mov
xchg
fdivrl
and
mov
mov
aaa
jbe
addr16
aad
pushf
mov
sbb
movsl
pop
push
mov
les
pop
mov
sbb
adc
push
dec
sbb
cmp
jne
mov
jo
dec
adc
jns
add
loopne
or
or
jb
mov
enter
out
mov
gs
xchg
std
mov
sbb
pop
sbb
xchg
ss
adc
fdivl
test
leave
or
dec
jbe
sub
ja
mov
pop
sbb
mov
xchg
pop
rcrb
jecxz
imul
cli
int3
push
sbb
mov
jne
dec
cmpsb
sbb
inc
mov
sub
into
push
adc
fs
add
cld
jno
into
xchg
add
mov
mov
test
mov
jbe
pop
sbb
jno
inc
push
adc
xchg
push
shll
push
sub
jns
mov
jl
fldln2
insl
ss
jp
add
loope
inc
adc
sarl
jne
ja
cmp
mov
xor
fnstcw
inc
clc
pushf
test
pop
sahf
sub
data16
pushf
inc
ljmp
xor
sbb
jnp,pn
pop
sbb
dec
and
aaa
cltd
bound
fwait
neg
and
xor
dec
mov
or
cmpsb
test
repnz
add
cmp
mov
int
fmull
dec
push
pop
adc
dec
clc
xchg
push
fldenv
loopne
xchg
pop
sbb
pop
push
inc
xor
cmp
movsb
sub
push
addr16
sbb
dec
jb
cmp
push
shll
sahf
add
adc
leave
out
or
xchg
jecxz
lcall
pop
rorl
or
pop
scas
stc
dec
lea
mov
push
xchg
push
mov
loopne
mov
push
cmp
pop
jo
or
push
lds
xchg
cs
pop
cltd
rcll
and
fimull
mov
es
push
push
jge
xor
cs
js
fwait
jb
sbb
lock
loopne
loope
das
lods
cli
movsb
mov
sbb
and
shlb
add
mov
outsb
scas
jmp
stos
sahf
js
mov
popa
decb
das
incl
das
lret
dec
cmp
sbbb
and
push
xor
repz
push
insl
xchg
cmp
push
jmp
out
mov
cmp
les
mov
mov
push
fldt
xlat
adc
dec
mov
sahf
jmp
inc
fwait
sub
xchg
mov
and
stos
pushf
pushf
mov
test
mov
in
xchg
ficoml
test
dec
in
xchg
mov
add
sti
nop
jne
jg
pop
aad
pop
jne
out
sub
popa
pop
dec
sbb
ficoml
adc
jae
pop
out
xchg
dec
insl
test
pop
mov
mov
in
mov
cmp
cs
pop
pop
inc
testb
leave
insb
and
xlat
mov
push
mov
adc
fstl
push
loope
sbb
test
stos
mov
and
mov
imul
pop
or
jo
arpl
lods
sahf
pavgw
movsb
mov
loopne
popf
ja
in
mov
xor
jp
mov
sbb
mov
mulb
xchg
lods
inc
lret
scas
lret
sti
orb
mov
mov
cmp
cltd
jmp
pop
mov
push
test
dec
jl
adc
out
inc
sub
inc
xchg
stos
subb
sbb
or
mov
pop
xchg
xorb
xor
mov
mov
in
and
sahf
ljmp
mov
xchg
adc
imul
hlt
jns
xor
shll
mov
and
aad
int3
xchg
jl
fbstp
cmpsb
std
aas
push
inc
jb
das
mov
leave
or
add
imul
inc
test
adc
pop
mov
mov
call
jmp
cwtl
ret
icebp
dec
lcall
sbb
xchg
sbb
lcall
adc
lds
inc
mov
xchg
or
stos
nop
pop
and
sbb
adc
int
bound
jmp
adc
xchg
cmp
subl
add
scas
repnz
and
imul
popf
push
shrb
xor
fisttpl
adc
inc
cmpsl
insb
sub
cli
daa
addr16
and
cld
cmp
repz
rclb
add
hlt
or
jbe
aas
inc
rcr
inc
imul
dec
dec
xchg
inc
inc
jmp
out
in
fsts
cld
mov
sbb
cmpb
jbe
test
mov
cmp
repnz
insb
push
dec
cs
sbb
bound
fsubrl
cwtl
mov
pushw
xchg
sub
cs
pop
repz
adc
enter
into
xor
mov
mov
out
test
testb
sbb
inc
fnstcw
out
stos
inc
xor
mov
jo
fnstcw
stos
cmp
pop
mov
inc
jne
movsl
pop
pop
out
add
insb
dec
jbe
dec
mov
lcall
dec
xor
out
push
xor
mov
mov
dec
sub
imul
pop
dec
roll
push
sbb
cmp
or
mov
filds
mov
ss
sarl
jno
lret
lahf
fstpt
mov
cmp
inc
stc
push
or
jnp
aam
sub
push
cltd
rcll
push
jbe
je
enter
xorb
inc
jle
sbb
loopne
movsl
test
mov
and
and
xor
xor
push
test
xchg
bound
add
or
lret
clc
pop
adc
mov
adc
aaa
inc
add
ret
popa
mov
mov
fdivrs
leave
pop
es
jno
cltd
xchg
leave
mov
and
into
xlat
cmp
dec
aad
cmpsb
or
pop
pop
imul
mov
out
or
cmc
dec
ljmp
insb
or
ja
jg
push
pop
xchg
mov
insl
pop
and
and
dec
mov
add
shll
dec
mov
test
jmp
or
sbb
sti
cmp
outsl
mov
int3
lods
icebp
xchg
pop
icebp
xchg
int
in
mov
pop
es
sub
ret
pop
push
push
mov
push
sub
stos
mov
push
stc
xlat
mov
incl
dec
push
mov
xchg
dec
roll
push
outsl
or
adc
out
or
pushf
out
ret
insb
xor
movsb
mulb
and
mov
adcb
mov
ss
mov
int
dec
sbbb
bound
mov
sub
mov
pusha
fstpl
daa
lock
adc
cmp
jle
inc
sbb
shl
cmp
jmp
sbb
add
loop
cwtl
std
shrb
jae
shll
cmp
pop
cwtl
dec
mov
jmp
outsb
scas
pop
lea
stos
lcall
gs
mov
or
mov
dec
add
mov
dec
outsl
jle
out
cmc
inc
imul
and
or
nop
mov
ret
cmp
dec
andl
imul
pop
sub
stos
xchg
or
inc
jbe
cltd
arpl
jge
mov
out
mov
ret
scas
shlb
pushf
scas
push
xchg
dec
arpl
outsl
in
jnp
push
pushf
push
sub
or
cmp
ljmp
lods
jl
sub
cmpsl
insb
loop
sbb
lds
jl
push
jg
mov
mov
sbb
ffree
scas
inc
int
fs
push
mov
jecxz
adc
leave
loop
ja
mov
add
inc
incb
xor
insl
fcmovnbe
out
sub
add
dec
xor
ss
sti
xchg
sub
sbb
jnp
repnz
xchg
test
sub
in
pop
inc
adcb
push
out
ja
addb
xchg
sbb
push
mov
ja
test
xchg
adc
push
pop
leave
cld
test
call
int
and
push
cld
out
jns
cs
or
push
cmp
lret
stos
and
sbb
imul
mov
adcb
arpl
fcomi
mov
nop
add
sbb
xor
repnz
jmp
lea
add
mov
jmp
stos
jbe
push
sbb
hlt
faddl
cmp
or
and
jno
test
push
sahf
mov
pop
pop
insl
mov
jno
push
xor
lahf
cmpsb
sbb
lock
add
add
btc
sub
out
daa
xorl
lds
jg
test
iret
push
mov
add
call
cmp
adc
mov
in
in
nop
add
jbe
popa
xor
pushf
push
fstps
in
shll
mov
cmp
shll
xchg
insb
xchg
shll
mov
inc
out
sbb
jae
lea
adc
pop
stc
bound
and
cli
xchg
sub
rcr
jle
sbb
mov
jno
movaps
add
pop
dec
sahf
out
adc
dec
adc
lcall
les
dec
mov
or
sarl
into
pushf
gs
adc
loope
pop
jne
push
xlat
movsl
mov
mov
ja
jno
push
mov
adc
mov
insb
icebp
test
cmp
jge
cli
pushf
imul
addb
sub
rcrl
inc
cltd
scas
mov
mov
xor
mov
sbb
mov
test
vpmaxsw
pop
inc
sbb
jp
addr16
mov
int
pop
inc
lock
jle
mov
ja
jnp
stc
adc
mov
mov
dec
insl
pusha
and
mov
out
push
xchg
imul
into
testb
ss
sti
cltd
or
das
xor
xor
inc
adc
insb
jp
or
pop
mov
xchg
inc
mov
cmc
xlat
or
add
xchg
push
mov
bnd
pusha
push
test
xor
push
fcoml
jecxz
fadd
sub
sub
add
mov
dec
aas
push
mov
dec
ret
es
push
aam
jne
fs
xchg
xchg
imul
js
pop
mov
jns
xor
xchg
aam
aas
inc
fdivs
xchg
push
mov
mov
mov
das
xor
lods
clc
mov
inc
pop
inc
xchg
mov
inc
pushf
iret
mov
fdivr
cmpsb
push
iret
ret
cmp
cmpl
pop
cs
cwtl
ds
adc
dec
and
mov
out
fwait
push
mov
add
gs
out
in
pop
les
xor
mov
pop
test
jecxz
dec
add
and
or
sbb
xchg
push
filds
int
mov
das
jns
call
out
pop
sub
ljmp
jp
xchg
jl
out
insl
mov
cmp
and
das
xor
inc
mov
ds
js
iret
add
inc
inc
stc
add
inc
mov
sbb
adc
clc
ljmp
inc
adc
int
xor
inc
js
mov
push
cs
cmc
add
cmpsb
pop
push
mov
aad
push
mov
aam
mov
outsl
jae
shl
dec
popa
sub
ljmp
mov
add
mov
xchg
mov
jbe
lahf
mov
mov
adc
ss
pop
add
jg
or
repz
lds
and
and
ja
inc
sbb
inc
inc
xchg
xchg
pop
in
enter
fiaddl
pop
jbe
loop
cmp
addl
sbb
in
je
icebp
fsubrs
dec
faddl
pop
xchg
pop
lahf
daa
adc
jbe
movsb
pushf
pop
outsl
jne
mov
and
out
aas
pop
dec
xor
ss
lods
arpl
int
loop
xchg
lret
loopne
pushf
jecxz
fisttps
in
lahf
add
xchg
or
inc
sub
aad
mov
xchg
test
lret
mov
insl
imul
mov
aam
add
fnstenv
push
dec
sahf
xlat
push
scas
pop
imul
inc
loope
or
mov
sbb
and
pop
inc
stos
xor
pop
fisttpl
out
lret
shll
add
mov
iret
cmpsl
insl
sarl
mov
lcall
arpl
cli
pop
xchg
xor
sub
sub
sahf
imul
fs
mov
repz
les
pop
push
loop
sbb
aaa
mov
add
mov
pop
insl
outsl
lret
dec
cmpsl
add
add
sbb
cmc
dec
xchg
sbb
mov
jae
xchg
prefetch
repnz
or
xor
rorb
mov
sbb
cmpb
dec
cmpsb
hlt
add
nop
mov
mov
out
bound
repz
cmp
fldenv
lods
cmp
ret
mov
std
cwtl
pusha
arpl
jo
stos
adc
fdiv
xor
insb
adc
dec
int
and
mov
lret
mov
mov
insb
roll
andb
lcall
sbb
aaa
mov
push
lock
ja
jmp
mov
mov
cmp
pop
lcall
test
fstpl
mov
sub
insb
cld
lret
roll
pop
stc
cmp
lds
stc
fstps
push
mov
push
pop
cmp
lea
iret
rolb
jo
dec
mov
ret
pop
inc
xchg
shll
aad
loope
add
daa
int3
imull
das
jno
jmp
xor
jmp
mov
dec
sti
xchg
jne
and
subl
dec
mov
pop
scas
test
and
mov
xchg
dec
sub
xor
push
aaa
test
xor
sbb
push
ret
arpl
jl
xlat
mov
mov
pop
movsl
aam
fstp
adc
pop
jp
daa
cmp
fsubrs
leave
or
rcr
repz
dec
js
ljmp
pop
cs
jl
push
adc
inc
xchg
pop
icebp
pop
stc
push
aad
sbbl
or
dec
repz
pop
add
loop
mov
fidivrl
movsb
testl
mov
je
xchg
sahf
push
add
add
int3
adc
enter
jne
inc
insb
out
mov
lret
aad
add
test
movaps
and
mov
hlt
xor
lds
repnz
jae
xor
ret
lods
daa
push
push
inc
jb
pop
cld
sub
cmp
lods
std
mov
xchg
aas
add
jge
js
gs
addr16
data16
xchg
hlt
pop
cmp
ret
mov
cmp
mov
sub
mov
je
cmp
leave
movsb
lods
movsb
inc
push
out
push
stos
sub
es
gs
arpl
mov
mov
fisttps
jle
mov
rcll
popa
and
out
pcmpgtb
or
aam
pop
scas
or
sbb
loopne
mov
movl
mul
xchg
add
loopne
dec
cmpsb
nop
push
gs
lods
add
js
dec
pop
sti
scas
jl
push
fstpl
mov
movsl
in
xor
dec
xorl
hlt
push
xchg
or
mov
ljmp
sub
dec
push
xchg
cmp
shrd
repz
std
cmp
icebp
shlb
aaa
mov
push
pop
jecxz
stos
imul
ja
out
mov
pusha
in
cmp
adc
sub
and
mov
and
jge
mov
jp
lret
lcall
pop
adc
mov
inc
pop
mov
xor
fisubs
iret
mov
push
in
adc
rcrb
sahf
mov
outsl
mov
sub
je
popf
in
pop
loope
or
js
mov
mov
lret
mov
idiv
add
add
cli
outsl
jne
xchg
and
jae
cmp
and
pop
sbb
cld
scas
pmaddwd
push
xchg
sub
pop
ds
imul
test
xchg
mov
insl
andb
sbb
mov
adc
xchg
dec
pop
mov
inc
mov
repz
mulb
int
lods
jge
cmp
jle
jnp
les
dec
mov
fldl
loope
movsl
jbe
inc
nop
xor
popa
inc
mov
mov
jns
inc
push
mov
add
sbb
ds
dec
arpl
mov
popa
mov
and
lds
inc
xchg
sub
in
inc
lahf
inc
insl
jns
sbb
and
leave
dec
lcall
xchg
xor
popa
jle
test
mov
idivl
dec
test
jecxz
mov
rcrl
test
jns
push
out
icebp
test
das
or
push
mov
test
loopne
xchg
xor
push
fwait
cmp
loopne
mov
aas
xchg
mov
sub
sti
in
mov
xchg
nop
test
sub
rcrb
mov
shll
popl
add
or
mov
int
sbb
mov
jbe
pop
outsl
outsw
repz
push
sbb
clc
and
mov
cmc
movsb
sub
lcall
aas
fwait
mov
fstp
jp
mov
dec
jne
mov
loope,pt
lahf
pushf
mov
push
xchg
stos
mov
jb
lcall
cwtl
add
xchg
sub
nop
das
outsl
mov
sbb
mov
or
mov
lret
inc
inc
inc
pop
pop
cmp
pop
sub
xrelease
nop
in
adcb
jle
jge
loopne
sti
xchg
cmpsb
cmpsb
out
sub
call
mov
daa
in
xchg
les
xchg
sahf
xchg
inc
inc
push
dec
cmp
fisttpl
adc
ret
xor
jle
mov
jl
call
mov
mov
jg
unpckhps
pop
pop
out
xchg
push
es
push
arpl
mov
rcr
jmp
push
popl
add
xor
sub
testb
rclb
std
mov
sub
xor
dec
sub
jg
sub
xor
call
loop
xchg
push
jl
into
jecxz
daa
pop
inc
dec
mov
in
popa
dec
push
arpl
into
pop
test
or
cli
cs
gs
rcrb
mov
lock
cmc
jae
mov
sub
push
fistps
cld
add
inc
jns
int
or
inc
in
sub
ret
fwait
cmpb
mov
mov
mov
ffreep
inc
das
ds
pop
mov
loop
mov
push
loopne
ret
lcall
xor
cli
push
xchg
mov
fucomp
std
imul
dec
xchg
jb
push
ret
mov
pop
lock
call
out
arpl
dec
fldcw
jp
mov
or
mov
addr16
sarl
push
mov
out
int
stc
pop
sub
sbb
pop
push
cs
clc
clc
rcr
add
jmp
orb
mov
enter
inc
negb
cmpsb
lods
cmc
dec
lcall
icebp
mov
insb
add
in
outsl
inc
cmp
mov
push
push
mov
xor
outsl
adc
jge
or
ds
and
repnz
mov
hlt
test
dec
cmp
arpl
dec
or
outsl
sti
int3
push
inc
jmp
sbbl
cmp
mov
rcll
sub
iret
imul
aam
lret
into
inc
int
dec
negb
inc
xchg
dec
cwtl
and
inc
mov
mov
sti
adc
ss
icebp
mov
cmp
pop
fwait
iret
fadds
mov
popl
fsubl
fcomip
jns
mov
sub
dec
add
inc
mov
mov
adc
xor
lods
sbb
fsubrs
adc
rcll
sub
dec
les
pop
fbstp
push
in
mov
dec
cs
sahf
ds
mov
nop
rorl
jmp
add
sbbl
jmp
push
sub
in
mov
xor
mov
xchg
sub
addl
mov
mov
lret
xchg
jge
inc
imul
cmpsl
sarl
mov
xor
push
adc
gs
push
add
jp
in
inc
sbb
jns
mov
testb
xchg
daa
xchg
cmc
push
leave
fisttpll
dec
cmc
popf
cmpsb
pop
push
cmpsb
and
or
sbb
and
stos
repz
out
jge
mov
lods
icebp
in
xchg
ss
test
fs
or
in
repz
pop
push
cmp
fs
pop
mov
xchg
jne
aas
xor
push
jmp
in
pop
and
push
pop
cld
push
negl
mov
mov
jbe
lods
lret
mov
divb
lods
push
pop
jp
push
sahf
pop
repnz
mov
xor
pop
inc
add
pop
add
ljmp
rcll
add
mov
jno
pop
push
fs
loop
aas
fbstp
fwait
jo
xor
sub
mov
add
jp
movsb
lret
jecxz
and
mov
pop
ja
in
in
adc
int
add
pop
cltd
shlb
sbb
lret
sbb
push
inc
cld
fsubp
pop
sbb
jb
enter
xor
mov
popf
mov
sub
test
jns
cmpsb
enter
xchg
or
cs
icebp
pop
repz
xchg
scas
shr
mov
in
cmpsl
into
xchg
push
inc
test
cmp
adc
andb
stc
mov
insl
aas
fcmovnu
mov
inc
in
das
mov
cmp
subb
mov
stos
out
adc
pop
int3
mov
scas
icebp
inc
js
jle
subps
mov
lcall
outsb
pushf
lods
bsf
mov
fcomps
adc
lcall
sahf
movsb
adc
xlat
movsl
lods
push
mov
inc
sahf
stc
jo
out
roll
in
lcall
push
sub
xchg
lods
ficoml
cmc
xchg
xchg
test
and
fisttps
mov
sub
aas
popf
sbb
add
add
mov
sbb
push
les
mov
ret
cs
sbb
pop
pushf
xchg
adc
add
ja
fcoms
test
push
lods
jns
xor
mov
pop
mov
mov
jle
mov
sub
aam
in
mov
movsl
enter
outsl
cmp
mov
inc
movsl
out
fucomp
jmp
and
loop
clc
dec
mov
pop
adc
lret
int
repnz
stc
mov
roll
inc
int
bound
cmpsb
mov
ss
jno
jo
aad
push
mov
imul
rolb
ljmp
fsubrl
or
mov
xchg
mov
sub
pop
push
dec
btr
ss
lcall
xor
cld
cld
out
sbb
pop
inc
mov
or
aaa
shrb
ret
rorl
mov
sbb
lcall
test
push
lea
test
add
and
das
sub
movq
cld
cmp
dec
sub
imul
sti
xor
jae
mov
sahf
sti
icebp
sbb
lahf
mov
lret
push
popa
xchg
call
aaa
and
mov
cmpsl
stos
xor
push
fiadds
inc
adc
rorb
sahf
stos
xchg
cwtl
pop
loopne
xor
pop
lcall
push
adc
xchg
sbb
xchg
inc
mov
jo
sbb
mov
loope
lret
jno
xor
enter
hlt
add
add
add
cltd
rolb
or
lock
sbb
sbb
loope
int3
mov
outsl
es
mov
ret
test
fldl
or
divb
lock
mov
adc
mov
or
pause
mov
lcall
and
int
movl
in
cmc
add
rcll
cmpsb
dec
aaa
imul
movsl
mov
sbb
adc
lods
mov
fldt
add
adc
fwait
lds
adc
in
push
lret
fildl
mov
enter
pop
dec
aaa
inc
add
aaa
div
jae
std
cmp
jle
mov
and
jnp
mov
pusha
xchg
inc
xchg
adcb
pop
mov
mov
xchg
push
inc
ljmp
daa
dec
dec
out
cmc
xor
cmp
popl
jge
stos
scas
lea
les
aaa
pop
andl
and
push
cmp
mov
xchg
pop
testb
repnz
dec
das
jl
inc
xor
push
add
inc
xchg
adc
lea
jb
mov
add
xchg
leave
out
mov
fidivrl
pop
loop
leave
imul
or
sti
fs
lds
mov
insb
divl
shll
mov
lea
bswap
cmp
pop
or
jbe
xor
jns
fwait
jbe
cltd
clc
cmp
scas
sti
loope
push
mov
cwtl
lods
push
mov
stc
data16
ret
fsubrs
shll
fbld
sbb
scas
push
in
cltd
or
jno
jo
iret
push
fstps
outsl
or
fsub
js
or
ljmp
fcmovnbe
mov
aad
add
lret
xchg
mov
add
sti
xor
cmp
push
das
call
mov
fimull
mov
outsl
call
add
jae
je
push
xor
loope
call
outsl
out
push
xchg
push
pop
je
dec
and
mov
mov
ds
jle
and
mov
sahf
paddd
mov
cs
lret
lret
xchg
jg
pop
xchg
sbb
pop
push
scas
ds
xchg
lahf
pop
cmp
cmpb
lea
push
pop
roll
lock
imull
rcll
idiv
pop
adc
push
movsb
data16
ficoml
in
and
and
repnz
aas
aam
xchg
ds
orb
aad
sub
stc
and
and
jns
jne
mov
jno
enter
stos
push
adc
sub
push
xchg
mov
leave
and
and
imul
jo
add
es
stos
mov
fs
pop
lods
loopne
xchg
cmc
sub
shrb
cltd
mov
push
out
shll
mov
mov
imul
pop
loopne
test
push
adc
jge
sbb
push
xchg
cmp
fnsave
in
mov
add
fisubrl
pop
push
rorl
and
add
cmp
mov
and
cmp
and
xchg
aad
sbb
data16
shl
jecxz
scas
pop
cli
inc
cmpsb
lahf
mov
cltd
push
data16
jl
mov
hlt
mov
mov
arpl
mov
andnps
mov
sbb
leave
or
mov
pop
lods
sti
xor
stos
pop
rcpps
inc
mov
dec
xchg
jno
js
adc
push
mov
sub
movsl
push
shll
adc
push
xchg
cmpsl
add
cmp
sarl
add
ds
inc
sahf
and
lds
mov
and
rclb
inc
xor
cli
dec
test
lea
mov
fadd
not
cmp
in
sti
lcall
pop
data16
mov
arpl
lcall
cmpsl
xchg
out
fimuls
iret
cmp
xor
sti
sub
and
dec
cmp
shl
cltd
push
inc
imul
and
push
ds
nop
inc
int3
addr16
arpl
fcomps
dec
add
iret
and
and
jmp
lret
inc
push
or
xchg
push
push
aam
mull
in
sahf
sbb
fcompl
sub
and
jle
out
aaa
adc
push
cmpsl
orb
lea
lds
call
mov
cmp
jns
jbe
and
xchg
call
test
or
mov
mov
stos
dec
fstpt
mov
or
aaa
jg
mov
adc
fwait
mov
lods
dec
in
sub
pop
and
fcmovu
aas
fwait
stos
mov
push
pop
mov
push
fucomi
ds
and
add
rcrl
push
clc
push
mov
jl
push
cmp
xchg
insl
xchg
xor
fildll
jp
xor
cmp
mov
jne
aam
bound
mov
pop
fwait
ljmp
jo
or
nop
aad
testb
arpl
fisubrs
mov
jmp
xchg
sbb
shr
dec
cli
roll
pusha
mov
js
adc
push
aad
jbe
js
cmc
pop
inc
cmpsl
pop
ficoms
outsl
repz
subb
xchg
nopl
pop
movsb
add
add
and
mov
inc
add
outsb
push
sahf
inc
push
ret
jno
mov
ja
adc
loop
xlat
js
js
es
mov
jp
in
rorl
fcmovb
in
lcall
in
cwtl
fadds
cmp
mov
inc
test
jl
xchg
cmp
std
das
ss
push
nop
pop
pop
xor
je
cwtl
mov
cmc
jp
and
call
or
test
rorl
pushf
loopne
je
push
pop
scas
rcll
lods
push
inc
mov
dec
outsb
outsl
mov
cld
sub
stos
lcall
or
test
orl
ljmp
jecxz
jb
mov
cmp
sbb
insb
jge
sbb
idivb
dec
test
mov
iret
ret
out
pusha
outsb
bound
fwait
xchg
nop
push
and
loope
inc
ljmp
pop
inc
fcmovne
xchg
add
fs
popf
xor
iret
clc
jmp
jecxz
xor
mov
aam
cmp
jnp
cmp
push
mov
popf
dec
clc
es
mov
sbb
push
leave
iret
jmp
rcll
pop
push
add
mul
or
loop
xchg
int
mov
hlt
call
and
jne
out
fsubrs
cmp
jae
iret
xchg
sbb
xor
arpl
inc
pop
std
loopne
insb
cld
xchg
xor
stos
cmp
xlat
adc
stos
aam
call
mov
adc
out
call
iret
push
pop
xchg
dec
cs
in
pop
in
mov
pop
mov
add
insb
mov
push
sbb
insb
cltd
jb
in
pop
mov
mov
sti
sbb
pop
push
rorb
and
sub
rorb
push
mov
sti
divl
push
neg
adc
lahf
pop
cld
jno
in
dec
scas
ss
mov
inc
cwtl
adc
xor
or
cs
sub
shl
jl
aad
pop
ret
sbb
mov
in
hlt
fdivr
mov
call
pop
sbb
inc
loop
clc
fadds
dec
mov
pushf
dec
scas
cs
loop
cmp
sub
mov
lret
inc
js
out
cmpsl
adc
xchg
sub
scas
test
xchg
dec
mov
fisubrl
popf
mov
shll
jge
xchg
add
lock
es
lds
sbb
sbb
inc
adcl
or
adc
ret
and
adc
imull
popf
stos
test
cmp
fsubl
dec
xor
jno
push
outsl
push
scas
mov
dec
roll
rorl
scas
xor
sub
mov
out
and
shll
cmp
sbb
cmp
sahf
bound
inc
pop
stc
flds
mov
jno
dec
lret
test
aam
adc
nop
jne
mov
jg
divb
addb
popa
cmpsl
out
in
push
xchg
mov
rcr
or
movsb
ss
and
loopne
aas
mov
jmp
inc
icebp
adc
sarb
aas
mov
sbb
sbb
push
movsl
aas
add
jne
loope
pop
movsb
loope
mov
les
mov
imul
pop
or
push
mov
out
lods
sub
or
push
add
cmp
and
es
adc
daa
fnsave
mov
mov
jb
inc
mov
sbb
adc
push
cmp
xchg
loope
pusha
sti
cmp
shrl
out
int3
nop
sbb
mov
push
hlt
out
mov
in
mov
cltd
adc
mov
mov
daa
adc
fs
dec
out
xchg
inc
aad
rorl
xchg
pop
xchg
pop
mov
jge
out
push
fisttpll
stc
pop
addb
push
jmp
int3
sahf
mov
or
imul
lods
sub
push
mov
xlat
repz
mov
jo
jge
adc
sti
iret
cmp
leave
or
dec
pop
pop
pop
inc
lahf
pop
imul
push
mov
in
cltd
out
or
movsb
loopne
cmp
mov
lds
cli
jae
pop
add
pop
sub
aaa
add
mov
lods
sbb
sti
xchg
sub
push
sub
clc
test
xchg
ret
or
stos
mov
add
insl
jns
ret
cmp
iret
fisttpll
jno
divb
and
call
xor
int
lret
enter
xor
add
fistpl
fmul
cmp
or
or
jnp
push
mov
xor
mov
inc
shll
fbld
jae
cmp
pop
jl
rcl
cs
jp
jns
pop
mov
adc
das
repnz
cltd
add
mov
push
cmpsl
mov
jecxz
in
pop
jo
and
and
mov
push
and
jae
imul
adc
aam
adc
cmp
cmp
hlt
xchg
push
add
loopne
cmp
out
or
sahf
imul
movsb
or
sub
mov
aas
sti
cs
cmp
mov
push
push
cmp
mov
mov
xchg
jg
shr
sbb
data16
es
xchg
fildl
jmp
test
imul
jae
xor
cmp
lods
lea
inc
or
out
gs
pop
mov
arpl
popa
std
lcall
leave
push
pop
in
fwait
out
and
add
dec
je
mov
and
fwait
pop
xor
xchg
mov
and
dec
sbb
cmp
lcall
push
gs
popa
cli
cli
das
cld
loope
mov
test
mov
mov
inc
sub
fidivs
nop
nop
mov
fmull
push
add
shl
pop
mov
sub
and
aaa
xchg
add
cltd
aam
mov
stos
icebp
pop
fnstsw
dec
repnz
sahf
je
inc
fistpll
adc
repz
jecxz
movsl
pop
out
xchg
add
dec
mov
mov
cwtl
inc
inc
pop
adc
sub
mov
mov
mov
mov
pop
mov
xchg
ds
sar
inc
xor
or
ds
stos
pushf
jle
cltd
arpl
shrb
aas
inc
jb
outsl
rdtsc
cmpsl
je
push
stos
mov
cmpsb
cmc
les
stos
ljmp
in
jmp
daa
scas
jbe
subb
or
roll
addb
outsb
lahf
mov
add
xchg
add
xchg
sub
adc
aad
xor
add
das
pop
inc
jge
jnp
jle
jl
push
in
push
fistl
int
xchg
push
fisubrl
repnz
xor
pop
lea
mov
dec
insb
mov
es
cwtl
dec
or
out
xchg
out
test
inc
jb
jmp
fbld
and
mov
add
inc
fidivrs
mov
push
icebp
xorb
sbb
jo
leave
pop
lea
stc
push
mov
loop
repnz
inc
sahf
dec
insl
bswap
mov
and
dec
dec
pop
adc
or
movsb
and
jg
cld
gs
ljmp
insb
filds
cwtl
sub
aam
mov
xor
or
mov
jns
adc
sbb
push
scas
outsl
cmpsb
fdivl
ljmp
inc
lock
je
sub
mov
adc
inc
jo
fmul
stos
popa
mov
mov
push
jns
cwtl
sbb
add
ret
mov
cld
add
inc
stc
insl
movsb
addr16
sub
push
notb
lea
smsw
mov
into
adc
mov
xchg
ret
jmp
mov
hlt
sar
dec
stos
pop
sub
and
lar
out
fstps
cmp
and
jns
mov
push
or
dec
insl
stos
dec
mov
nop
mov
cmp
enter
pusha
pop
stos
movsb
jl
adc
testl
cmp
scas
jle
js
jl
xlat
cmpsl
sarb
enter
sbb
rcrl
nop
pop
xor
aaa
stc
add
jl
in
ret
add
adc
test
add
mov
xchg
xchg
cmp
scas
adc
dec
or
jno
clc
leave
ret
jle
lahf
rcll
sti
imul
xchg
sub
shl
mov
adc
xchg
iret
jp
push
jae
dec
sbb
add
insb
push
dec
jle
loop
sti
xchg
ret
xchg
rolb
mov
jle
fmuls
pop
jmp
divl
call
cmp
xchg
cmpsl
test
mov
gs
cmp
loop
sub
cwtl
sbb
sbb
xor
inc
cmp
sbb
add
inc
into
insl
aas
loopne
mov
clc
sub
dec
or
rcll
lea
icebp
mov
adc
lock
in
std
repnz
ljmp
aaa
pop
aam
fwait
fwait
mov
xchg
jae
lds
adc
mov
sbb
das
test
testl
cltd
inc
xchg
or
mov
scas
fwait
sub
xrelease
ret
shll
leave
js
xor
stos
cmp
mov
test
and
jmp
cmp
out
xchg
lods
stc
lods
xlat
pusha
mov
xchg
cmpsb
adc
sub
mov
test
jns
jne
cld
inc
lret
jge
rol
aas
xor
mov
jb
loop
adc
jae
inc
icebp
jns
fcomps
in
or
push
daa
in
xor
jl
pusha
insb
std
jp
repz
aaa
push
cmpsl
pusha
lret
and
shrl
mov
mov
aaa
in
jnp
or
push
fsubl
fisubrs
adc
and
jge
dec
mov
add
sahf
push
cltd
adcb
xor
push
test
pop
fs
jns
cmp
and
in
xchg
pusha
or
or
jmp
pop
xor
mov
sbb
jbe
mull
mov
inc
push
leave
add
std
cmpsb
cmpb
rorb
jge
leave
jnp
push
pop
jmp
push
sbb
cmc
mov
idivl
pop
xchg
xor
add
int3
jb
cs
in
xchg
data16
push
pop
push
jge
pop
xor
test
adc
push
fnsave
cmpsl
out
arpl
into
xor
mov
test
xchg
mov
loopew
test
push
cmc
inc
das
adc
sbb
sbb
jo
inc
cwtl
add
dec
inc
das
cmp
xor
pop
pop
jae
xor
je
mov
or
mov
push
pop
dec
push
nop
mov
xchg
in
mov
lods
movsb
fsubrs
dec
inc
pinsrw
out
and
dec
push
pushl
lock
mov
pop
sbb
cmp
mov
push
jecxz
mov
hlt
and
add
lods
push
push
cmpsl
fdivrs
int
pusha
jge
push
repz
sbbl
popa
mov
sti
sbb
fisttps
cltd
xchg
pushf
sbb
cltd
cmpsb
add
xchg
jbe
dec
mov
repnz
lods
push
xchg
in
stos
push
frstor
sub
adc
ljmp
and
sbb
and
jo
int
push
push
mov
mov
ss
std
fisubrs
fcmovu
ss
cmp
jae
jmp
iret
cli
push
xor
cmpsb
pushf
lods
pop
or
push
ss
mov
loopne
fs
int
test
iret
insb
cmp
sub
aas
mov
ss
jo
je
std
sbbb
imulb
add
faddl
imul
pop
les
cltd
and
call
mov
mov
es
xlat
shl
test
ret
push
test
mov
sub
mov
cmp
dec
inc
xchg
les
andb
xor
sbb
cmp
jnp
jne
sbb
pop
cmpsb
notl
dec
cltd
enter
xor
jp
cmp
lahf
lock
ficoml
clc
scas
outsl
jns
adc
addb
dec
add
jb
lds
inc
loopne
sbb
mov
ja
mov
loope
sti
mov
pop
mov
push
mov
cli
cmp
fwait
les
add
adc
and
lds
repnz
test
inc
push
aam
jl
pop
mov
mov
arpl
lret
or
pop
repnz
hlt
xchg
jo
lretw
negb
out
shrl
mov
stos
jb
cvtdq2ps
pop
hlt
adc
jo
push
loop
arpl
mov
adc
jne
or
dec
add
xchg
iret
lahf
sbb
lret
loope
bound
push
jbe
inc
xor
lcall
sub
sbb
incl
or
pop
fnstenv
cmp
adc
daa
inc
test
adc
adc
stc
jge
out
or
aam
dec
xchg
imul
mov
dec
jmp
push
xchg
fstl
mov
cmp
mov
mov
into
stos
push
das
sub
xor
rclb
ds
jl
sbb
outsl
sbb
add
dec
mov
mov
pop
adc
addr16
push
pusha
dec
roll
outsb
ljmp
movsb
hlt
iret
sub
cli
fildl
jge
sub
jmp
lcall
push
ljmp
stos
shrl
outsl
clc
jbe
ja
outsl
and
test
cmp
xchg
and
dec
sbb
es
mov
add
lret
aas
stos
sub
mov
mov
out
push
jbe
shrl
sub
out
jb
mov
cmp
xor
xchg
add
xchg
daa
push
scas
lods
mov
pushf
add
das
xchg
push
xchg
lods
dec
xor
xor
fnsave
fbld
into
test
push
popf
stos
leave
ja
aas
sbbl
sbb
cltd
je
imul
lahf
pop
sub
mull
add
add
cmp
fwait
jbe
push
jns
loope
and
dec
adc
dec
clc
xor
or
adc
loope
call
mov
in
aam
dec
cmp
jp
cmc
pop
cmpsl
mov
add
out
xchg
push
jb
pop
loop
dec
inc
movsl
mov
stos
mov
test
pusha
jle
outsb
gs
dec
in
xor
push
or
xor
pop
popf
outsb
mov
sti
faddl
or
es
push
sub
mov
jecxz
sub
pop
push
and
xor
mov
pop
pop
or
add
mov
iret
fwait
mov
arpl
pop
mov
xchg
adc
adc
hlt
add
outsb
mov
jecxz
pushf
inc
push
mov
add
jne
imul
in
pop
imul
pop
add
call
arpl
cmovb
das
inc
stc
iret
mov
cmpsb
test
cmc
inc
cmc
jle
test
pop
inc
pop
into
sbb
or
and
call
cmp
cmp
add
ret
sub
add
loope
push
cmpsl
xchg
iret
mulb
icebp
xchg
daa
jbe
aas
int3
xchg
loop
inc
cmpsb
lret
inc
adc
test
pop
mov
stos
mov
mov
adc
mov
ret
pop
cmpsb
cmovs
xchg
jecxz
xor
lahf
negb
cmp
push
mov
lret
les
daa
mov
mov
xor
ja
js
das
daa
mov
std
rcrb
jns
ds
shl
push
inc
mov
xor
ljmp
cltd
pop
mov
dec
sbb
sbb
pop
outsl
ljmp
loop
cmp
sbb
jmp
xadd
or
inc
pop
fs
aas
adc
sahf
add
push
sti
xchg
test
and
pushf
jcxz
xorl
xchg
imul
lds
pop
loopne
mov
jmp
movb
lods
lea
int
dec
in
pop
in
mov
repnz
jge
imulb
lret
pop
xchg
adc
rorb
cwtl
stc
movsl
jg
add
faddl
ljmp
sub
sbb
add
add
xchg
xchg
xor
jnp
jle
sbb
cltd
mov
mov
call
mov
xor
jecxz
jle
pop
in
pushf
je
das
inc
loopne
mov
inc
pushf
ret
data16
hlt
shll
dec
pop
aad
pop
divb
and
or
lods
stc
and
je
jnp
jge
adc
sbb
push
dec
mov
push
mov
and
loop
sub
testb
insl
ret
cld
xlat
in
insl
mov
inc
cmpl
xchg
push
mov
xchg
mov
lcall
add
addl
jg
sarl
xchg
dec
inc
xlat
mov
lahf
adc
xor
pushf
pop
inc
in
loopne
data16
xchg
push
jmp
push
mov
xchg
mov
jmp
cmp
repnz
lods
lcall
dec
aas
cmp
push
mov
test
rolb
pop
inc
fldt
dec
push
mov
push
ja
pop
inc
mov
sub
bound
lods
cmpsl
lods
add
js
jge
repnz
lds
sub
push
sub
lcall
mov
push
jne
ret
and
fdivrs
mov
movsl
ret
jmp
ret
aaa
jge
fldcw
sbb
jg
sti
cmp
jo
mov
cmp
shll
cmp
addl
add
dec
xchg
inc
aas
or
push
xor
mov
std
les
dec
pop
ljmp
das
dec
jae
xor
push
imul
xor
jae
fbstp
popf
or
mov
mov
pop
out
into
mov
mov
fstl
pop
sub
out
adc
push
push
add
int3
sbb
cs
push
sub
popf
insl
xchg
ss
mov
loop
xchg
stos
std
es
mov
in
insb
cmp
jns
daa
lock
shrb
je
cli
dec
adc
add
dec
mov
push
jecxz
ret
jnp
cmp
jbe
cmp
push
das
ljmp
arpl
push
or
and
push
imul
mov
in
pop
loopne
dec
or
or
xor
in
les
lcall
aaa
rorb
mov
xlat
mov
xor
add
mov
push
cltd
cmp
cmp
sub
mov
xor
ljmp
out
mov
push
adc
push
mov
sbb
push
pop
in
xchg
jp
es
xlat
mov
xchg
aaa
push
push
mov
loopne
test
aas
adc
xchg
repnz
sub
xor
outsb
lods
into
inc
sbb
xor
aas
int
jmp
loope
and
xchg
das
call
pop
negl
subl
push
popa
inc
inc
mov
insl
xor
adc
adc
push
fs
jb
stos
push
sbb
pop
mov
sbb
lea
sbb
inc
lahf
cmpsl
scas
jno
cltd
dec
arpl
xchg
mov
push
xchg
add
ret
sub
sbb
jnp
mov
ficoms
lods
rcrl
ljmp
mov
push
bound
sub
dec
jl
push
sbb
push
push
cmp
jb
aad
jg
sbb
data16
aam
shl
pop
insb
jmp
in
test
nop
sbb
push
push
pop
loop
pop
xchg
jbe
clc
in
push
stos
jmp
leave
lahf
and
mov
mov
cmp
popa
daa
or
fmuls
cmc
dec
mov
mov
out
orb
jnp
inc
add
pop
xchg
sbb
je
insb
aad
or
cmp
and
aas
jp
loopne
shll
jnp
mov
cli
cmp
int3
in
sub
push
mov
ss
es
jnp
out
ret
jecxz
pop
sti
and
fcomip
pusha
mov
inc
dec
jl
stos
and
ljmp
mov
xor
dec
dec
mov
popa
lds
inc
or
xchg
jmp
cmp
xor
test
mov
jno
push
mov
test
mov
mov
cmp
mov
shlb
aad
addr16
and
gs
mov
addr16
mov
xor
xor
cmp
fs
push
lds
rcl
push
out
outsl
mov
pop
jo
lock
push
xor
cmp
aaa
dec
rcrl
mov
sbb
mov
cwtl
mov
sub
xchg
xchg
xlat
pop
cmp
push
ljmp
xchg
stos
xchg
jge
xchg
mov
sub
mov
in
loope
out
push
sahf
inc
scas
or
mov
in
dec
and
push
mov
fildll
test
sti
lds
or
mov
out
and
dec
mov
pop
cmp
cmpsl
jl
adc
mov
fimuls
mov
sti
pop
pop
push
adcl
xchg
and
jecxz
cmp
or
cmp
add
lds
stos
cmp
or
pusha
test
pop
adc
xchg
pop
sbb
hlt
cmp
pop
add
notl
mov
push
rorl
lret
mov
test
push
ret
mov
lret
lret
cmp
sub
sbb
or
repz
inc
testl
mov
sbb
enter
adc
mov
arpl
jp
mov
add
shlb
mov
sub
xchg
das
mov
mov
sbb
jns
fists
or
iret
push
mov
xlat
sbb
xor
imul
dec
outsl
out
dec
aaa
stos
into
ret
mov
cmpb
xchg
mov
int
sub
lcall
out
cmpsl
xchg
push
ss
mov
test
lcall
sub
out
jne
add
repz
jb
in
daa
jmp
sub
pop
push
inc
mov
cs
lret
aam
xchg
or
inc
in
adc
cld
mov
cmp
dec
clc
and
push
loop
cmpsb
outsl
add
push
mov
fmuls
cmp
xchg
jl
mov
sub
gs
sbb
mov
dec
sub
mov
add
mov
fiadds
repnz
adc
dec
mov
and
push
push
fcompl
jo
in
mov
jp
jge
outsb
in
pop
dec
mov
insl
xlat
xor
lea
sub
adc
xchg
fsubrs
add
aam
fwait
sub
into
push
negb
push
lea
cld
ret
daa
ret
jp
bndldx
push
dec
push
std
fisttpll
sahf
pop
fwait
fs
out
sarl
jmp
lock
dec
daa
and
jmp
cmpsb
aam
xchg
mov
add
fisubs
fst
insb
mov
lods
sahf
insl
or
jnp
out
jae
or
push
cmp
in
cmc
mov
ds
ja
out
imul
cmc
aad
add
mov
cmp
enter
les
mov
orb
sbb
jnp
add
ljmp
jbe
add
add
jb
xor
ja
mov
cmp
ret
aam
mov
jmp
andb
mov
push
pop
dec
xor
imul
dec
pop
adc
lahf
into
mov
arpl
push
push
jns
sbb
add
movsb
inc
mov
popf
dec
jg
jnp
iret
jno
or
mov
jl
jp
pusha
mov
stos
cmc
icebp
push
and
aad
cmp
or
xor
test
dec
sbb
jmp
add
mov
stos
xchg
movsb
jmp
pusha
fimuls
rcl
gs
sbb
cmp
or
sarb
mov
ljmp
aad
push
push
dec
cmp
mov
lock
inc
jp
inc
orb
jl
xchg
cmp
insl
mov
daa
lret
xor
xchg
in
inc
insb
lret
jg
insl
cmp
jne
into
jne
cmc
enter
es
pop
mov
arpl
lret
jl
int3
cmp
jmp
inc
inc
into
cltd
fisubs
shll
aad
daa
pop
ret
lods
push
mov
imul
ficoms
xor
mov
mov
test
push
mov
pop
aad
int
scas
les
fwait
sbb
or
rcll
jbe
not
mov
xchg
push
sti
sahf
ficomps
nop
cmpsl
out
int3
cmp
and
lea
add
push
mov
decb
mov
out
fcoml
pop
xchg
das
sbb
cmp
push
aas
rcrl
add
dec
sar
sbb
cld
mov
inc
mov
rdpmc
imul
pop
fwait
ds
sub
sti
popf
fstps
cmpsl
xchg
fists
xchg
sub
mov
shll
sub
mov
rcrb
add
enter
cmp
sub
sub
outsl
test
mov
and
icebp
int
mov
fildl
rorb
cmpsl
nop
xlat
jp
mov
cwtl
mov
fwait
sub
mov
inc
sub
adc
mov
gs
cmp
into
jo
sub
mov
fsubp
and
cmp
mov
inc
cmpsl
xchg
cmp
pop
inc
jae
arpl
fs
fistpll
dec
scas
push
mov
xchg
adc
lcall
addr16
sti
inc
xchg
mov
imul
lret
mov
in
add
mov
or
std
xor
pop
add
push
fstps
insb
outsb
out
lds
push
push
or
insb
push
mov
js
cld
and
jecxz
lret
test
mov
pop
pop
sbb
ret
into
cs
sbb
fcoms
sbb
int3
outsl
aaa
adc
xchg
cltd
mov
out
scas
xchg
ljmp
fsubrl
into
jno
mulb
inc
popa
add
stos
mov
cmp
icebp
scas
xor
dec
ljmp
pushf
insl
mov
push
inc
aad
fmulp
mov
mov
std
inc
cmp
popa
lds
cltd
cltd
aaa
xor
sti
rcr
test
mov
aad
mov
xor
adc
jp
lods
fwait
imull
sbb
ljmp
roll
shrb
mov
call
or
mov
bound
jecxz
jle
std
out
lea
jns
addb
xor
mov
jecxz
xor
xor
ss
sbb
cmpsl
mov
and
push
leave
int
aas
mov
push
push
lret
xchg
cmp
jns
call
int3
mov
out
push
fcmovnbe
pop
nop
outsb
nop
stc
mov
dec
mov
sub
lea
stos
int3
insl
pop
fwait
dec
lret
movsl
dec
xor
xor
out
sahf
sub
dec
popf
fcmovnu
jno
mov
inc
and
mov
test
xchg
mov
add
inc
xchg
cmp
mov
das
or
dec
aas
addr16
cmp
out
jnp
push
dec
pop
adc
insl
and
sarb
daa
push
sti
jo
stos
pop
scas
and
pop
aas
jge
inc
insl
pop
or
pop
or
scas
out
int3
sbb
jmp
in
pop
stos
cmp
xor
shrl
jno
sbb
sbb
ficoml
sbb
sbb
push
insb
daa
fdivs
xchg
push
mov
sub
pop
daa
lret
or
sbb
dec
rcr
outsb
shrl
lds
or
movsl
xchg
push
mov
clc
or
test
and
pop
sub
jle
jmp
sbb
push
cmpsb
pop
dec
cmp
push
imul
inc
xlat
loop
push
add
push
mov
add
fdivs
inc
sahf
fstpt
and
popf
lcall
xchg
loopne
push
insl
scas
ljmp
xor
xor
sbb
aas
ret
sbb
insl
sbb
std
push
je
cltd
into
inc
addl
andb
inc
inc
fistpl
sti
arpl
imul
in
cwtl
push
cmpsb
mov
ds
int
cs
popf
imulb
jno
jp
add
lahf
adc
adc
in
pop
loop
dec
add
aaa
fiaddl
xchg
sbb
shlb
sub
sub
jo
and
divl
aas
sbb
cli
std
lock
iret
insl
add
dec
neg
sub
iret
and
push
or
stos
jne
jl
sbb
sbb
sbb
mov
nop
loop
push
xchg
cltd
pop
lds
int
jnp
pop
inc
into
cwtl
and
addr16
or
popf
fsubrs
shl
je
std
hlt
mov
sbb
incb
push
dec
push
gs
xchg
loopne
cmp
sbb
cs
lahf
xchg
jno
push
ret
mov
ljmp
imul
cmp
and
les
stos
jmp
ret
push
insb
jno
sahf
mov
lods
aam
dec
adc
aas
les
shlb
popa
sbb
mov
icebp
inc
xchg
pop
jb
in
push
cmc
xchg
xor
sbb
jbe
stc
aas
jecxz
ja
loop
mov
das
ljmp
push
inc
xchg
jno
add
imul
or
int
cmp
aas
add
mov
ret
insl
jb
jne
mov
fadds
sahf
pop
push
jns
test
aad
fs
mov
fsub
jl
in
fwait
sub
sub
stos
test
faddl
fimuls
icebp
and
or
push
sbb
and
add
jecxz
or
sar
cmpl
lret
mov
xchg
xchg
les
mov
and
jg
or
and
sub
sub
sahf
cwtl
lret
and
push
icebp
addr16
pusha
sub
stos
push
outsb
icebp
push
lret
fldenv
cmpsb
test
stos
es
cmc
lahf
ss
lahf
or
add
sbb
addl
jge
mov
or
addl
inc
inc
push
mov
xor
mov
mov
out
jo
insl
mov
jl
lret
mov
inc
xor
ret
stos
ret
mov
mov
sub
in
sbb
aam
mov
pop
les
mov
aad
int
cmp
lahf
loope
sub
movsl
push
inc
ds
jno
cmpsb
cmpsl
fs
xchg
gs
mov
loope
or
pop
shrb
mov
movsl
dec
mov
movsb
aam
dec
push
addr16
add
orl
dec
outsl
xchg
xchg
scas
xchg
jbe
jae
arpl
fisubs
ljmp
shll
fnsave
push
shll
and
sbb
cmc
push
lcall
nop
insl
mov
dec
out
sub
sub
push
xchg
data16
pop
in
jno
lock
push
and
ljmp
pop
aaa
int3
inc
mov
xchg
cs
imulb
ss
add
loope
xor
lock
push
out
xchg
mov
cmpsl
mov
dec
cmc
push
jge
cli
fsts
adcl
mov
cld
xchg
mov
push
js
mov
cli
lea
out
ret
int3
adc
jge
hlt
add
call
adc
in
cmp
and
or
test
cmp
les
sub
mov
call
iret
pop
mov
sysexit
cmp
or
imul
mov
sub
loop
mov
lret
mov
shlb
sub
adc
xchg
cld
inc
cmp
iret
roll
outsl
out
clc
mov
in
stos
rorl
jle
jge
sti
xlat
sbb
lret
mov
iret
push
je
test
lahf
mov
pop
dec
fs
push
add
jecxz
int3
and
sarb
jne
pop
jns
mov
xchg
lret
pop
add
lret
nop
roll
mov
xchg
test
or
jg
aas
ss
or
sub
add
scas
cmp
addr16
shl
stos
test
fimull
xlat
adc
sub
and
in
cmp
fadd
inc
push
popf
sub
ss
dec
nop
pop
or
or
fstpt
call
mov
movsb
pusha
out
mov
xchg
jo
lea
test
cs
ret
mov
cmc
fcomps
sbb
and
lcall
cmp
pop
sbbb
xchg
cmp
xor
repnz
mov
cmp
dec
test
dec
addr16
int
daa
ljmp
push
sahf
stc
cmp
lret
jge
fwait
int3
aad
repz
xchg
pop
and
lods
mov
fs
js
ret
pop
adcb
arpl
roll
mov
xchg
loop
out
mov
mov
push
movsb
jae
clc
aaa
sahf
sub
and
pushf
aaa
and
push
mov
addb
dec
popa
xor
test
outsl
repz
sbb
lret
outsb
in
or
into
std
jecxz
lcall
sbb
lods
dec
repz
repnz
mov
pop
jne
add
fs
sub
cmp
adc
push
xchg
mov
loop
mov
dec
scas
xor
negb
sub
ss
test
sub
pop
add
cmc
adcb
cld
mov
xchg
xlat
or
push
mov
jge
and
and
cld
sbb
add
aaa
mov
add
popa
ja
insl
push
inc
xchg
cmp
fdivrl
jmp
sub
cmp
mov
inc
stos
addps
sbb
adc
das
mov
sub
xor
aam
cwtl
mov
fwait
mov
xor
mov
add
mov
cmp
xchg
in
int
adc
stc
stos
sarl
sub
leave
cmpsb
faddl
cwtl
outsb
popf
sarb
mov
pop
mov
xchg
dec
mov
incb
les
test
divb
stc
fldl
insl
adc
les
adcl
mov
push
cwtl
or
push
lods
cmpsl
gs
xchg
inc
ljmp
pop
jne
mov
dec
jg
sub
add
jb
add
test
icebp
mov
out
test
push
and
sbb
cmc
push
push
dec
sub
jmp
xor
testb
xchg
cmp
push
pop
repnz
popa
std
out
inc
jno
mov
imul
out
push
test
and
cmp
sar
shrl
repnz
push
and
clc
or
mov
pop
lock
lods
iret
xor
pop
jmp
jle
lds
cmp
add
fists
loopne
or
sbb
mov
sbb
add
sbb
int3
les
in
hlt
dec
pop
mov
incl
pop
test
mov
cwtl
lds
outsb
and
inc
or
ljmp
jg
inc
icebp
ja
dec
lods
push
dec
test
loopne
mov
adc
xlat
rcrl
push
test
loope
xor
testl
loopne
mov
fs
fsubs
cmp
fidivs
jo
shrl
xor
add
mov
sbb
call
jae
loop
arpl
pop
push
add
jmp
adc
and
cltd
les
sahf
test
clc
mov
inc
push
movsl
push
and
mov
pop
jae
push
cmpsl
mov
push
xor
push
adc
jb
ret
lods
sub
insl
in
fsts
repz
mov
cmp
lods
jle
mov
aad
call
call
stos
cltd
sbb
cmp
out
sub
pop
mov
dec
dec
push
inc
fcomip
call
or
and
and
mov
dec
push
mov
test
cmc
mov
jg
gs
sub
aam
pop
dec
out
out
push
ret
pop
scas
cmp
jecxz
pusha
pop
push
out
test
clc
lods
lret
and
ficoms
cld
bound
dec
enter
jnp
mov
imul
test
mov
pop
mov
in
and
adc
push
pop
mov
push
mov
cmp
icebp
iret
mov
xor
outsb
stos
daa
jo
aas
inc
mov
pop
jmp
enter
shrb
cltd
arpl
push
js
add
test
jmp
mov
shll
fdiv
and
es
xchg
mov
mov
out
fsubp
xor
sub
sbb
movhps
jo
int
enter
cmpsb
mov
cmp
adc
push
pop
cmpsl
add
xor
dec
les
imul
lret
sbb
mov
adc
stos
roll
aas
inc
fwait
push
js
sub
and
idivl
cmpsb
lock
leave
inc
jl
push
hlt
loope
sub
sbb
shll
nop
inc
fwait
add
add
test
mov
ficoml
pop
mov
imul
mov
xlat
inc
mov
or
dec
xor
cmp
sbb
xchg
xchg
insb
push
xor
mov
mov
adc
sub
mull
add
and
stos
cwtl
pusha
pop
lret
lock
movsb
iret
pushf
push
sbb
push
fmuls
dec
xor
daa
icebp
roll
add
mov
jge
outsl
jno
push
mov
faddp
loop
in
jl
sub
das
sbb
xorl
mov
inc
insl
outsl
cmp
inc
jbe
cs
hlt
pusha
push
xor
outsb
addb
test
or
pop
jns
mov
jmp
adcl
cmpsl
ficomps
xchg
lock
mov
sub
cmpb
aam
in
xchg
or
jmp
repnz
sbb
adc
adc
adc
cli
ljmp
addb
lods
incb
add
xor
in
jns
jo
sbb
mov
adcl
or
sub
int3
imulb
adc
enter
pop
mov
fsubrs
je
push
pop
push
jne
rcrl
aas
cmp
aaa
ss
mov
adc
test
popf
pushf
jmp
jae
cmp
mov
jbe
xor
rclb
dec
cmpsb
push
out
dec
daa
sbb
xacquire
mov
add
push
or
mov
fbld
mov
push
fwait
clc
ja
sub
dec
push
roll
add
push
fs
scas
push
xchg
fs
xor
adc
pusha
clc
xchg
adc
pushf
mov
xchg
jo
cmp
add
mov
insb
repz
jne
xchg
ret
ja
inc
into
insb
stos
xchg
lods
lods
cltd
cs
cmp
push
daa
mov
sub
adc
fcmovbe
rcrb
cwtl
push
xor
xor
inc
into
mov
imull
rcll
repz
jg
mov
mov
sarl
pop
jecxz
movsl
jg
jp
dec
or
lahf
call
bound
dec
addb
sbb
aaa
mov
sbb
adc
imul
mull
push
insl
inc
fbld
adc
jl
imul
push
jns
inc
hlt
scas
data16
adc
scas
ljmp
mov
pop
dec
mov
loope
mov
subl
pop
pop
loop
cmp
cmp
or
gs
loope
mov
or
jae
mov
sbb
aad
dec
sbb
pop
push
mov
jbe
test
pop
pop
in
cmc
xlat
mov
jl
mov
into
mov
repnz
out
mov
sbb
cmp
adc
and
add
std
mov
cmpsl
pop
aas
sbb
iret
push
jo
push
nop
xor
imul
jne
or
xchg
mov
test
cmpsl
mov
stos
jg
sub
jno
dec
sub
rclb
aaa
jl
out
mov
sub
push
lea
rolb
mov
es
inc
sub
rolb
sbb
push
cmc
jg
jle
shll
xchg
lods
cs
add
frstor
popf
popa
sub
and
and
cmpl
int3
jge
xchg
inc
push
loope
cli
andb
jne
sub
sub
stos
and
mov
popa
out
fidivs
xchg
dec
icebp
cmp
fcomi
xor
mov
movsl
dec
mov
lahf
icebp
and
rcr
mov
in
jecxz
cwtl
xchg
cmp
insl
ljmp
stc
push
stos
arpl
int
popa
pop
pop
xchg
popa
sub
jo
andb
dec
xlat
push
scas
jp
mov
cld
mov
mov
or
aas
xor
out
dec
sbb
dec
hlt
sbb
jnp
outsb
scas
test
mov
fsubs
adc
sti
imul
mov
mov
iret
push
leave
arpl
inc
popa
and
stos
inc
and
inc
mov
mov
mov
inc
loopne
test
add
dec
lcall
jo
pop
out
inc
fnsave
out
mov
lahf
jnp
fmul
sub
xchg
cmp
or
ret
sbb
fsubrl
jns
iret
sbb
fisubrl
pop
addr16
rorb
dec
xchg
les
addr16
mov
dec
mov
mov
jmp
in
add
aaa
gs
nop
int3
cmp
add
int3
xor
test
bound
jmp
mov
pop
repz
dec
mov
push
das
clc
mov
or
shr
in
push
push
lret
repz
aas
cld
push
xor
mov
adc
pop
movsl
add
mov
xlat
iret
xorb
add
and
xchg
dec
jg
or
fwait
and
push
out
rcrb
scas
jmp
sbb
jmp
pusha
pop
mov
int3
sub
mov
les
scas
call
push
dec
in
sub
mov
in
dec
insb
ror
or
test
imul
pop
test
sbb
or
push
jnp
fwait
out
test
js
dec
mov
xchg
rcrl
jae
inc
xchg
in
cmc
push
inc
rep
in
sbb
xor
ret
add
xchg
fmulp
xchg
add
mov
cmpl
andb
pushf
jmp
mov
sbb
pusha
pop
out
shlb
ret
push
pop
dec
inc
outsb
and
add
xchg
call
mov
adc
leave
push
std
inc
jg
xor
pop
xorl
xchg
inc
dec
imul
cltd
push
stos
sbbb
xor
lds
dec
and
ds
jae
lret
sbb
push
aas
cld
lods
or
sub
clc
pop
mov
ret
jae
and
lret
insl
dec
fcomps
and
sahf
xchg
dec
icebp
or
push
out
test
sbb
repnz
daa
pop
arpl
push
push
pop
movsl
lock
sub
mov
aas
mov
repz
icebp
or
inc
jl
or
pop
pop
scas
cmp
cmpsb
das
push
aas
mov
add
cltd
repz
jge
or
out
mov
pop
scas
cmp
push
movsl
sti
adc
les
sbb
adc
inc
sub
iret
repz
sub
movsb
rdtsc
cmpsb
mov
cmovl
nop
mov
cwtl
out
outsl
mov
xor
push
jnp
dec
mov
adc
pop
mov
dec
loop
aas
sbb
jmp
pusha
pop
mov
and
mov
lcall
pop
imul
sbb
push
inc
fstl
cmp
xchg
cmp
test
sbbb
std
mov
add
js
xor
sbbl
imul
xchg
cmp
repnz
insl
add
push
mov
cmp
iret
loop
notb
iret
xchg
cld
movsl
add
mov
inc
inc
add
mov
pop
daa
add
pusha
rclb
xor
add
sbb
ja
int3
adc
in
cmp
lcall
js
mov
arpl
mov
je
push
arpl
mov
ja
jp
in
in
dec
js
pop
movb
int3
pop
push
pop
out
ja
out
lds
mov
pop
xor
dec
stc
add
lea
test
cmp
les
stos
pop
daa
add
pusha
rorb
jp
shll
sti
daa
imul
orb
aaa
stc
gs
movsb
dec
test
subl
jnp
xchg
push
dec
imul
mov
std
mov
iret
sub
daa
popa
cs
dec
jb
and
xchg
xor
mov
scas
shr
mov
and
cmp
test
mov
mov
mov
inc
jnp
repnz
bswap
cmp
cmovno
dec
ret
les
loopne
mov
xchg
or
mov
int3
pop
pushl
mov
jmp
mov
pop
sub
imul
pop
xor
inc
jg
mov
in
dec
in
cltd
mov
insb
push
cmp
lcall
icebp
xor
outsb
dec
and
inc
pusha
jo
iret
add
pop
dec
inc
jne
inc
pushf
out
imul
cmc
add
mov
aaa
xchg
es
dec
cmpsb
xchg
dec
pop
cld
aaa
stc
mov
aas
data16
lcall
xor
insb
xor
mov
or
fiaddl
dec
out
or
pusha
or
dec
pop
cld
xchg
or
xlat
inc
repz
js
ljmp
test
add
inc
cmp
jle
popf
in
push
cmp
imul
rolb
lds
sub
repz
stc
push
addl
stc
sub
sub
or
jmp
pop
cmp
movsb
inc
loopne
sahf
mov
xchg
clc
or
xor
dec
subb
mov
por
push
fldt
out
inc
or
adc
fadds
dec
outsb
mov
cs
or
es
aaa
jns
repz
xchg
dec
pop
lock
movsl
push
cmp
xlat
movb
outsb
and
clc
test
icebp
pop
out
std
loope
jne
aaa
pop
inc
inc
cwtl
js
mul
ja
les
sar
aas
insl
cmp
cmp
xlat
adc
dec
pop
lods
mov
jne
rcrl
cmc
sub
cmc
mov
ja
out
jne
int3
and
mov
mov
lahf
sbb
or
adc
add
test
and
and
cmc
cmc
add
mov
pop
lock
add
hlt
xor
jnp
loop
sbb
push
ss
jno
leave
pop
fldl
addr16
sbb
xchg
mov
push
cmp
sub
adc
icebp
xor
sbb
hlt
xor
mov
push
mov
data16
push
popa
int3
js
imul
std
pmulhuw
xor
xchg
int3
xchg
idivb
xchg
cmpsb
jecxz
and
fadds
adc
sub
int3
push
xor
sbb
hlt
dec
inc
lock
insb
adc
xchg
cld
cmp
jl
inc
xchg
mov
or
sub
hlt
push
sti
std
xor
std
js
inc
pop
out
addr16
sub
rcrb
jae
dec
pop
xor
inc
sub
in
xor
test
sub
icebp
xor
fwait
cmp
lret
nop
push
mul
jg
push
and
xchg
xor
sbb
mov
mov
movsl
notl
mov
imul
cmp
add
and
pop
mov
add
icebp
xor
aas
outsb
and
or
ds
or
addb
arpl
mov
inc
jbe
jp
sti
sbb
push
nop
sti
ljmp
pusha
cs
mov
in
data16
add
lcall
or
ds
mov
mov
sahf
cmp
sub
fs
xchg
push
mov
imul
inc
xorps
movsb
inc
test
mov
arpl
mov
pusha
mov
ds
pop
mov
addr16
xor
inc
sbb
adcl
push
or
mov
leave
sbb
jne
mov
jle
lds
cmp
lahf
leave
cltd
jge
jp
add
popf
clc
cmpl
push
pop
out
shlb
fdivs
mov
rorl
adc
sar
xlat
mov
and
movnti
mov
pusha
push
out
push
les
mov
enter
jbe
out
mov
push
lcall
push
mov
mov
pop
cld
lock
icebp
push
pop
xchg
mov
lods
sbb
add
movntq
out
imull
cld
movsl
add
into
sahf
inc
jnp
in
sbb
movsb
cli
xor
daa
lahf
lahf
icebp
and
add
or
xchg
iret
inc
dec
fwait
cmpsb
mov
jecxz
push
inc
flds
addr16
mov
sbb
imul
push
ret
movl
das
mov
inc
jo
inc
jmp
leave
jns
add
cmp
icebp
xor
inc
outsb
xor
push
fldcw
add
pop
cmp
jns
insb
jp
mov
mov
mov
leave
fiaddl
mov
xchg
dec
inc
dec
outsl
cmpsl
mov
dec
mov
jecxz
push
loope
xor
js
mov
fs
or
clc
adc
cmc
stc
xor
test
aaa
jno
or
cmpl
cmp
sahf
push
das
xor
dec
cmp
mov
dec
popa
fbstp
aaa
out
pusha
rorl
popf
cmpl
incl
cmpsl
inc
dec
push
sti
dec
xor
subb
imul
jmp
dec
movsb
in
bound
out
cld
out
test
dec
mov
sub
mov
icebp
lods
shlb
xor
pop
in
movsl
push
mov
xor
lret
hlt
add
inc
xor
xor
push
repz
add
xor
sbb
pop
xchg
fnstenv
dec
lret
cmp
lret
clc
das
and
movd
adc
in
ret
sbb
inc
loope
fs
sub
jmp
cmp
repz
and
and
push
faddl
ja
xchg
into
dec
or
cmp
insb
xchg
or
pop
rorb
arpl
push
insl
pop
in
xchg
or
xor
pop
arpl
enter
xor
orl
sbb
rcrb
les
loopne
xor
push
add
mov
inc
or
sbb
dec
and
test
dec
jmp
mov
ljmp
pusha
add
xchg
push
adc
movsb
mov
repnz
scas
inc
sub
mov
inc
ja
js
test
andb
incb
dec
add
icebp
inc
sbb
push
mov
adc
mov
cmp
subl
xor
xor
or
lods
sbb
movsb
pop
mov
test
subl
faddl
cld
lods
sbb
mov
js,pn
in
icebp
mov
sub
mov
jne
outsb
pusha
in
in
js
add
inc
mov
lea
inc
in
mov
cmp
fmuls
je
nop
test
mov
outsb
mov
pop
or
and
pusha
imul
dec
pop
rolb
loope
jmp
pop
sbb
packuswb
stc
les
cmpl
insb
push
fsubrl
sub
push
dec
icebp
xchg
jmp
mov
ficomps
or
add
cmc
pusha
push
incl
fs
sahf
mov
mov
pop
out
jecxz
pop
cmpb
push
iret
jecxz
push
faddl
ja
push
faddp
rcrb
adc
das
cmp
lea
repz
paddusb
ja
sbb
int3
adc
xor
out
enter
cmpl
add
xorb
add
or
mov
rorb
das
push
out
shrb
mov
loop
push
fmull
jne
or
mov
repz
addr16
xor
out
subb
mov
pusha
or
sub
mov
hlt
dec
jle
sbbl
data16
sub
stos
aaa
rclb
sahf
stos
fisubs
lods
leave
mov
cmp
nop
insl
sarl
decl
sub
dec
mov
fists
xor
sub
cmp
in
cmpsb
ds
xchg
fistl
push
sub
sub
and
scas
outsl
xchg
test
sbb
mov
xor
sbb
lock
sub
mov
jno
loopne
outsb
mov
dec
int3
jb
inc
jl
pop
xchg
mov
mov
adcb
jno
cs
test
loope
movsl
stos
inc
icebp
into
xlat
test
and
sub
and
mov
filds
xor
xchg
jg
or
nop
insl
xor
cmp
iret
repz
daa
xlat
icebp
out
and
mov
lea
xchg
mov
cmp
cmpsb
sbb
mov
lahf
lahf
sahf
xor
xor
clc
scas
or
popf
inc
fdivs
enter
mov
sbb
movsl
jae
shlb
movsb
mov
jge
inc
sbb
mov
inc
push
mov
jecxz
dec
in
in
mov
or
dec
adc
xlat
mov
clc
scas
xchg
pusha
jae
je
dec
dec
repnz
test
data16
neg
in
test
jo
jg
stos
rclb
imul
sbb
cltd
cmp
das
clc
nop
ficompl
pop
stos
sbb
ds
inc
push
mov
adc
lcall
mov
stos
outsb
mov
cmp
loop
sub
or
fidivrs
ds
inc
lods
movl
mov
ds
and
mov
and
repnz
sti
xor
inc
or
sub
xor
scas
mov
aaa
mov
jae
repz
jmp
lock
ds
movl
sub
into
aad
daa
jae
jmp
or
sbb
enter
shl
jl
cli
dec
sahf
mov
jnp
cli
out
xlat
ljmp
pop
out
repnz
stos
rcll
scas
fisubrs
push
arpl
cmp
and
mov
das
xor
fistpll
jnp
lcall
jns
xchg
lods
clc
jb
push
loope
clc
cmc
loope
test
std
push
sbb
stos
bound
nop
call
adc
insl
sbb
loopne
loope
outsl
les
fucomp
jmp
jecxz
adc
shll
push
aaa
pop
or
and
repnz
lods
fldl2t
cmp
clc
divb
push
push
neg
scas
dec
outsl
push
cli
or
mov
fcoml
pusha
adc
xor
sub
pop
inc
mov
jg
cmpb
scas
cmpsl
add
jmp
sbb
aam
fnsave
jbe
and
mov
and
adc
shlb
insl
sbb
mov
push
stos
andb
fstps
xchg
or
popf
inc
push
test
rol
adc
xchg
push
out
ret
lds
pop
xchg
mov
int3
mov
divl
hlt
mov
or
stos
and
mov
push
adc
pop
mov
jp
sub
mov
les
fcomps
sbb
popa
outsb
fldl
jl
imul
jo
outsl
cwtl
push
push
mov
cmp
pop
adc
mov
rclb
push
mov
jne
lds
test
xchg
xor
aad
mov
stc
cwtl
inc
push
inc
popl
mov
loop
int3
lods
dec
aad
in
std
into
add
mov
jl
cmpsb
mov
movsb
cld
jnp
jbe
ljmp
out
lock
pop
fdivl
add
out
into
rcll
xchg
push
lods
xchg
mov
lahf
and
add
lods
jg
bound
rcrb
in
push
jp
xor
sbb
jae
into
fcmovnb
jle
fsts
cmp
dec
repz
sahf
std
out
pop
jnp
stos
aad
int
inc
test
aam
sub
loopne
cmp
mov
aas
scas
mov
adc
data16
scas
in
bound
xchg
out
leave
imulb
cli
or
xchg
push
out
es
inc
lret
loop
or
sbb
pop
hlt
scas
mov
dec
pop
mov
loopne
sub
jge
sahf
insl
jns
sti
fstpt
push
insl
sbb
and
lea
mov
adc
or
mov
jb
popl
jno
cli
mov
mov
sub
or
bound
mov
insl
mov
daa
or
push
inc
loope
dec
stos
sub
idivb
add
testb
jp
or
shrb
inc
into
adc
dec
xchg
loope
adc
rcl
jle
andb
mov
in
inc
cmp
cmc
push
push
les
mov
mov
rclb
adc
aam
mov
loope
pop
mov
jne
lods
cmpsb
loopne
xchg
mov
shr
mov
mov
and
and
sub
xor
loop
pusha
stc
notl
cmp
repz
xchg
cmp
push
push
adc
xchg
jecxz
gs
push
loop
cmp
adc
rcll
push
jmp
sub
xchg
push
xor
pop
push
pop
xchg
push
enter
enter
sar
into
std
lret
mov
sub
xchg
or
popf
add
in
cmpsl
lds
inc
adc
mov
out
test
jmp
dec
sbb
fwait
cs
mov
loopne,pn
repnz
push
push
fistl
imul
jg
and
xor
xor
movsl
jge
mov
mov
fldl
inc
movb
xor
fmul
aam
adc
adc
inc
inc
dec
dec
xorl
lahf
mov
je
fs
or
mov
in
std
das
lret
mov
jo
sbb
add
mov
and
pop
gs
xchg
cmp
cwtl
inc
es
fmul
mov
pop
jbe
repz
jecxz
comiss
xchg
int3
aad
xchg
je
xor
insl
cs
mov
and
scas
sbb
mov
lahf
sbb
xchg
movd
cs
rcll
cmp
pop
mov
jno
pop
xchg
das
sbb
jae
test
sbb
mov
outsl
stos
cmp
pushf
dec
mov
popa
fld
or
mov
jmp
lcall
notl
inc
sub
scas
fiaddl
addr16
mov
mov
fimull
xchg
dec
sbb
lods
push
es
aas
lret
iret
pop
ja
sbbl
cmpb
dec
test
aam
fs
imul
sub
mov
imul
lock
fnsave
dec
add
shll
popf
gs
cmpsl
je
je
sti
pop
pop
and
sbb
mov
jg
cwtl
mov
mov
fs
sbb
sub
lea
mov
cli
lds
mov
loop
out
sti
stos
lea
push
lcall
iret
outsl
mov
or
and
adc
outsb
out
mov
out
lcall
dec
xorl
push
pop
test
mov
adc
mov
dec
gs
sub
dec
fs
mov
push
int
imul
sbb
lret
mov
fldl
mov
jo
int3
add
pop
imul
push
jle
dec
push
cltd
cmp
and
mov
adc
sbb
add
scas
out
iret
int
mov
rcll
sbb
push
inc
pusha
cmpsl
cmp
sub
adc
frstor
push
ja
pop
push
push
pop
repz
divl
mov
in
arpl
les
fs
sahf
test
ljmp
or
push
aad
test
fdivrp
nop
test
inc
ja
imul
movsb
jbe
push
lcall
arpl
push
push
pop
dec
imul
leave
inc
jge
sbb
aad
sbb
mov
sub
lea
sub
pop
shl
add
clc
ret
pop
rolb
or
and
flds
mov
mov
xchg
pop
xor
and
or
jnp
push
aas
sahf
inc
scas
movl
and
mov
hlt
ja
aad
dec
jl
ja
mov
fdivrs
or
mov
ret
mov
mov
sbb
mov
xor
mov
jo
cmc
mov
outsb
outsl
cmp
mov
xchg
jl
icebp
in
ljmp
ds
gs
xor
adc
lds
call
andb
jecxz
imul
das
mov
pop
and
add
pop
pop
jle
lea
imul
lfs
mov
fcomi
and
stc
and
add
cmp
fwait
sti
or
inc
add
repnz
sbb
add
fdivrl
out
jl
jbe
bound
push
push
or
test
test
in
and
inc
pop
repz
or
rcrb
pop
xchg
clc
adc
in
sbb
packuswb
add
jno
lret
mov
sarb
loopne
in
dec
pop
std
mov
mov
fistl
out
xchg
and
lret
xor
cmpsl
or
repnz
cmpsb
enter
es
out
stos
adc
shl
mov
cmp
movsb
shrb
push
sub
inc
fs
sbb
iret
xor
cli
inc
jmp
dec
inc
loope
inc
das
jmp
adc
dec
icebp
adc
mov
aaa
scas
imul
push
pop
scas
data16
mov
mov
xor
dec
inc
test
stos
sbb
lea
sub
sbb
popf
aas
fnsetpm(287
add
std
inc
pop
cmp
ret
sub
push
push
adc
fisubrs
xor
or
xor
leave
movsl
push
sbb
xchg
insl
push
xchg
dec
or
dec
mov
or
pop
push
sbb
subl
lahf
out
cmp
adc
adc
fsub
dec
add
lcall
push
sbb
jmp
pop
xorl
lret
lock
stos
mov
mov
xor
addr16
xlat
mov
mov
lahf
int
int
hlt
xor
dec
lock
jmp
dec
sbb
xchg
daa
push
divl
add
aaa
push
push
mov
sbb
jle
in
push
and
loopne
adc
out
jle
add
adc
into
add
ret
cmp
nop
xlat
pop
and
jle
leave
incl
or
data16
xchg
mov
ret
fildl
or
subl
sub
push
imul
dec
aam
jb
orb
std
insl
andb
mov
pop
repnz
in
ljmp
pop
xchg
inc
mov
mov
fidivrl
cmpsl
enter
mov
xor
imul
push
xchg
mov
mov
cmc
mov
jbe
xor
mov
jp
sarl
jle
out
ja
gs
hlt
rcrl
mov
pop
or
gs
inc
push
adc
cmp
loopne
xchg
push
loopne
jp
xchg
imul
push
cltd
mov
into
sbb
xchg
test
dec
out
dec
pop
in
mov
jo
xchg
xor
pop
pop
mov
in
cli
sahf
inc
sbb
mov
push
xchg
ret
mov
cmp
or
mull
lret
outsl
test
data16
sbb
in
sub
clc
call
lret
xchg
mov
outsl
outsb
insb
rcll
leave
pushl
sti
ret
shrl
aaa
js
cwtl
inc
xor
out
je
int
inc
sbb
fcoms
shlb
test
dec
jne
out
les
frstor
fnstenv
sar
inc
cmp
test
dec
mov
pushf
repnz
inc
adc
xchg
leave
xor
aas
loop
push
mov
mov
fbstp
push
push
pop
out
mov
mov
jnp
cmp
sub
cld
mov
leave
lods
or
std
push
lret
scas
mov
or
cmpsb
sbb
mov
jmp
jo
popa
shll
adc
pushf
and
data16
xchg
in
push
ja
sub
nop
es
and
jmp
add
ret
stos
xchg
lock
xchg
push
scas
hlt
push
push
or
and
xchg
fs
jae
in
sub
ja
popf
cmp
pop
mov
dec
fstpt
incb
repnz
fs
out
mov
cmp
or
xchg
dec
hlt
add
popf
jnp
shrl
adc
xchg
insl
inc
adcb
mov
enter
stos
mov
mov
testl
les
and
adc
and
adc
inc
inc
shll
sar
icebp
adc
sub
sbbl
into
fadds
xchg
test
ret
rcr
fisttps
aaa
xlat
inc
cmpl
push
mov
stos
aas
or
sar
sarb
aam
adc
pop
loope
nop
fisttpll
xor
mov
xchg
negb
sti
jns
adc
xor
daa
pop
jp
js
xchg
add
shll
gs
sub
jge
sti
imul
mov
outsl
jno
fs
xchg
ret
in
mov
push
mov
scas
popa
mov
stos
push
in
in
mov
rclb
mov
rcrl
je
fistl
imul
aam
fimuls
test
jle
mov
jecxz
sarb
mov
xchg
lea
and
pop
or
cmp
push
scas
cs
outsb
or
bound
cmp
addb
addr16
leave
cmp
mov
outsl
icebp
cmp
xor
inc
adc
pop
loopne
shrl
scas
and
inc
and
ss
sub
add
pop
jl
stos
mov
add
stc
fbld
jge
or
mov
cld
sub
jo
push
or
aaa
fcoml
dec
jne
and
inc
icebp
mov
and
scas
add
pusha
mov
mov
cwtl
xchg
imul
popa
add
lock
pop
out
cmp
push
push
pop
lea
les
jmp
stos
cmp
cmp
movsl
daa
es
aaa
dec
into
mov
movsl
sbb
and
loope
dec
xchg
adc
aad
shlb
sti
mov
inc
repnz
mov
adc
push
stc
dec
loope
dec
jp
lock
push
xor
mov
in
pop
aam
adc
jle
mov
test
jbe
pop
negl
nop
repnz
clc
xor
xor
mov
xorb
lods
or
lcall
movb
mov
mov
mov
mov
cmp
stc
std
call
adc
fisubrs
int
pop
dec
insl
jnp
pop
dec
fistpl
cmc
mov
fdivl
movsl
call
sbb
addr16
mov
lods
nop
cmp
dec
push
pop
lock
jbe
insb
xor
mov
jns
lods
gs
test
sbb
xor
push
dec
sar
push
xlat
or
ds
movsb
push
sbb
pusha
sub
jae
out
notb
cmp
sbbl
ja
fistpll
or
fldenv
int
pushl
je
loopne
jb
jo
push
test
cmpsb
mov
add
sub
jae
mov
testb
mov
stos
jb
push
daa
pop
lret
jl
or
inc
pop
push
addb
imul
push
movsl
shlb
lcall
sbb
mov
pop
lds
fiaddl
in
adc
lods
fcmovnu
popa
cmp
ud2
pop
pop
jg
add
in
xchg
rolb
stos
mov
ja
cmp
call
or
test
push
out
lret
arpl
cmpsl
pushf
popf
cmp
in
dec
jle
out
orb
outsb
negb
mov
movsb
mov
jne
mov
xchg
stos
mov
jg
int
xlat
jecxz
or
push
adc
or
rcr
pop
rcl
repz
daa
mov
xor
mov
ret
mov
and
testb
adc
mov
pop
mov
test
xorb
scas
inc
test
jbe
dec
push
and
daa
inc
and
jb
sbbb
inc
sub
inc
add
dec
ret
dec
xchg
or
fxch
sbb
add
adc
mov
or
icebp
mov
aad
sti
enter
push
sub
cmp
jae
dec
sbb
nop
pop
lahf
mov
sahf
mov
ljmp
fsubrp
adc
das
inc
ss
and
dec
xchg
and
nop
jl
movsb
das
outsb
add
fbstp
mov
inc
cmpsb
popa
sub
or
outsl
pop
jb
out
xchg
or
mov
mov
aam
mov
sub
mov
adc
lahf
inc
cld
lods
dec
dec
add
cwtl
add
cltd
push
lock
sub
enter
ret
inc
adc
sbb
mov
xchg
cmpsb
sbb
sbb
pop
mov
lahf
adc
pop
fsubrs
sub
xchg
xchg
pop
jg
xchg
fsubs
test
pop
rclb
pop
pop
xor
xchg
icebp
int3
cltd
test
adc
sbb
out
and
dec
lret
lcall
cmp
loopne
mov
sub
fistpl
push
add
idivl
xor
jae
inc
repz
jge
imul
push
movsl
je
sub
adc
hlt
data16
bound
mov
andl
push
push
xchg
std
es
jns
inc
mov
xchg
inc
por
test
shr
insb
test
mov
mov
cmp
fisttps
xor
fnstsw
adc
ds
int3
fidivl
push
xchg
push
mov
push
sbb
dec
int
jmp
lock
pop
cli
xor
daa
inc
jg
orb
pop
sub
mov
mov
loop
xor
ds
out
shl
push
mov
jb
cmpsl
mov
adc
mov
xchg
jl
popf
pop
test
lds
loop
push
cmp
outsb
mov
mov
les
sub
jl
or
sub
nop
jnp
fisttpll
push
add
sub
push
jne
pop
loopne
clc
dec
daa
xor
in
mov
jecxz
hlt
adc
mov
lahf
int
out
mov
adc
hlt
lds
imul
enter
xor
fldenv
hlt
jo
mov
pop
mov
fldenv
out
rorb
out
jg
cmp
or
xor
mov
and
int
jp
cwtl
mov
loopne
dec
stos
pop
mov
mov
imul
lret
cli
add
jmp
dec
dec
mov
inc
jmp
or
movsb
ds
dec
je
cmp
dec
shlb
push
xchg
xor
bound
push
lret
jns
push
jle
test
stos
xchg
sbb
into
xlat
lcall
mov
mov
sbb
sub
fldt
push
adc
mov
int
sbb
push
ljmp
hlt
pop
ss
test
lret
mov
cmp
in
mov
hlt
mov
adc
testl
jno
movl
rolb
cltd
ljmp
xchg
jmp
mov
icebp
ror
cli
jns
in
sbb
pop
popf
jne
xchg
mov
into
sahf
inc
data16
push
pop
roll
sar
daa
pop
movsl
mov
inc
pop
sarl
out
mov
fidivrl
repnz
sarb
aaa
push
jecxz
sub
das
call
cmp
pop
dec
or
dec
mov
mov
mov
in
xorl
rorb
movsl
sti
in
sbb
jg
mov
mov
adc
sbb
imul
pop
add
je
push
imul
jno
sbb
iret
and
rcll
xchg
pop
cmp
mov
push
push
inc
xor
mov
into
fcomps
rclb
lret
hlt
sbb
arpl
fmull
jno
sbb
aam
fsubr
mov
jmp
lcall
pop
jp
nop
stc
xor
in
inc
stos
jecxz
ja
enter
lahf
cmp
push
jnp
mov
imul
out
lea
loope
or
cld
jg
pop
mov
mov
lret
mov
mov
fmull
add
cmpsl
popa
add
push
enter
outsl
xor
aas
pop
xchg
loop
mov
ret
aaa
insb
sbb
mov
push
lock
sbbb
addr16
jno
push
in
outsl
sahf
or
insb
addr16
insb
xor
lock
xor
cmp
aam
mov
xchg
jl
push
cmp
fsubrs
mov
lahf
lods
cld
inc
scas
xchg
lds
inc
sahf
mov
aad
push
mov
cmp
sti
icebp
sti
jo
repnz
xchg
jae
sbb
test
xor
or
push
mov
clc
mov
jne
jle
jno
int
inc
sti
cmp
mov
enter
sbb
aam
in
sub
icebp
inc
dec
pop
xchg
sub
test
and
ja
std
decl
lods
mov
roll
dec
mov
pushf
jp
mov
mov
cmp
das
adc
cmp
xchg
fldcw
add
sti
inc
arpl
xor
movb
mov
mov
push
stos
js
imul
aaa
push
jp
ja
xchg
sbb
dec
add
mov
mov
push
arpl
out
lahf
lods
mov
mov
js
std
push
sahf
fdivrs
je
push
jecxz
ss
clc
not
push
or
mov
adc
lods
dec
mov
and
or
lods
xor
lcall
add
inc
jle
jl
jecxz
pop
sub
cmp
xchg
pop
dec
icebp
gs
inc
dec
cli
ljmp
sub
das
into
inc
inc
int
incb
enter
jne
inc
test
push
cwtl
cmp
popf
mov
bound
push
push
adc
in
mov
lock
dec
dec
xlat
scas
jg
testl
data16
pop
sub
fidivrs
mov
sbb
mov
fsubl
jge
sbb
fisubrl
pop
shld
loopne
add
push
xchg
mov
ret
fs
outsb
mov
cmp
dec
iret
pop
imulb
roll
fsubl
inc
mov
or
cmp
cltd
xchg
ret
jae
outsb
and
xchg
pop
clc
and
and
dec
xor
mov
ss
call
out
sbb
int3
fs
cmp
sbb
mov
adc
or
pop
add
dec
js
movsb
lret
push
add
jae
mov
sub
mov
add
ljmp
flds
popa
nop
rorl
fwait
pop
xchg
repz
mov
inc
outsl
inc
test
xorb
pop
mov
adc
mov
mov
call
lods
andb
jmp
fdivrp
mov
dec
sbbb
lret
cmpb
cmc
adc
add
dec
pop
sbb
jb
jmp
std
lds
ds
lods
jmp
leave
lahf
and
mov
push
jbe
dec
lahf
xlat
das
inc
repz
inc
imul
in
mov
fld
je
mov
fisubs
ficompl
mov
dec
xchg
sub
xchg
push
sbb
add
arpl
test
or
xchg
jge
and
in
mov
dec
add
push
dec
add
ficoms
jl
fwait
mov
sbb
fucomp
movsl
push
jmp
pop
and
ja
inc
xlat
stos
dec
bound
adc
adc
lahf
in
pop
pop
or
stos
in
sbb
lcall
popa
inc
sub
test
xor
fidivs
push
mov
push
ja
fbstp
or
xchg
gs
and
inc
pop
cmpsl
xor
push
cwtl
mov
es
aaa
test
or
add
ss
dec
ret
sbb
mov
push
jmp
cmp
and
cs
jo
andb
popa
mov
mov
arpl
add
cmc
rcrb
mov
pop
mov
out
pusha
mov
adcb
add
sub
sub
xchg
cs
xor
jnp
mov
fiadds
jle
rorb
lcall
add
xor
pop
insl
ds
pusha
test
jle
jecxz
scas
lahf
shll
sti
mull
stos
lahf
xchg
jo
mov
lahf
mov
lea
cld
stos
stos
add
fmul
int3
add
je
pop
cld
mov
repz
fidivrs
adc
or
test
arpl
cwtl
popf
mov
mov
or
mov
jecxz
mov
dec
xchg
in
inc
gs
imul
cmp
push
out
dec
insl
pop
mov
jns
rcrl
push
test
imul
mov
sbb
mov
les
lea
insb
sbb
test
in
flds
in
cwtl
mov
add
js
ret
add
add
sti
jp
fistl
pop
fsubrp
dec
lods
popa
cmc
fdivl
fisttpll
test
adc
enter
inc
sti
les
mov
jae
and
jp
loope
xchg
sbb
test
adc
pop
js
shll
roll
mov
mov
test
testl
fiaddl
sbb
add
and
mov
pop
stc
loop
aad
pop
xchg
fldenv
fisttps
cld
cmp
xor
inc
push
leave
and
xchg
mov
movsb
mov
mov
inc
xchg
addl
js
out
push
out
mov
fwait
jecxz
xchg
js
movsb
mov
push
mov
push
adc
js
sub
inc
in
test
iret
xor
xor
cmp
inc
in
cwtl
popa
out
push
pop
adc
lods
sbb
jge
popa
imul
inc
mov
jecxz
sti
in
dec
inc
inc
mov
add
out
add
outsb
and
out
push
outsl
and
gs
pop
mov
mov
and
inc
aaa
cltd
fdivp
add
nop
add
fildl
ret
popf
frstor
repz
mov
sti
in
jmp
fdivr
in
push
das
add
stos
rol
mov
mulb
and
mov
mov
stos
xor
inc
leave
mov
cmp
adc
mov
es
jmp
icebp
int3
fdivrl
lcall
repnz
les
mov
or
mov
jg
and
outsl
fldenv
in
mov
jne
fcoms
call
add
pop
xchg
pop
jg
inc
jg
xchg
xchg
sbb
xlat
add
xchg
push
jg
sarl
mov
jmp
popa
fcmovnb
ficompl
mov
push
cmp
mov
xor
pusha
adc
ja
add
cmpsb
in
add
dec
xchg
movsl
hlt
pop
int
adc
js
insl
push
pop
lock
js
inc
adcl
andb
mov
lock
xchg
mov
xchg
cmpb
popl
ja
les
adc
sbb
jns
mov
imul
mov
rorl
cmp
lods
sahf
mov
xor
icebp
clc
cmp
add
sti
in
and
xor
ret
mov
xchg
fldl
cmp
mov
subb
jle
cmp
mov
and
lods
rclb
pop
jbe
jg
mov
mov
std
push
mov
orb
dec
sbb
mov
test
subl
nop
pop
pusha
cmc
inc
cmp
xchg
movb
or
inc
pop
aam
fcoms
inc
dec
dec
adc
cltd
xor
jae
jmp
add
cmpsb
jbe
inc
lea
cs
adc
jnp
pop
adc
in
into
je
rolb
in
dec
mov
outsl
pushf
sbb
mov
imul
notb
aad
aaa
es
leave
dec
cmpsl
pushf
aas
shrl
fcmovbe
jge
jns
repz
sbb
mov
mov
call
sbb
aas
scas
xchg
lahf
jb
fldl
aad
lods
dec
scas
mov
or
push
shlb
xchg
incl
pop
gs
into
insl
dec
lods
stos
xor
sbb
sbb
mov
mov
sub
shrd
cs
aam
pop
es
sbb
cmp
jno
lcall
paddq
fsubrs
call
jo
repnz
pop
clc
mov
lods
and
adc
jo
ss
pop
pop
iret
jns
lret
cmp
loop
adc
mov
fldt
mov
dec
imul
or
cld
dec
jae
lea
or
push
sub
adc
rep
adc
push
and
fwait
int
aas
lahf
cmp
xchg
sbb
push
push
inc
cmpb
sbb
fbstp
shlb
aas
or
lds
pop
and
mov
fsub
incl
ret
mov
push
jg
cmpsl
stos
xchg
add
adc
sbb
push
jo
push
sti
sbb
mov
lret
jp
sbb
lea
jp
daa
adc
movsb
sub
xor
adc
inc
ljmp
lea
mov
rcll
test
jo
pop
jbe
sbb
mov
fldl2e
xchg
adc
stc
mov
das
inc
dec
enter
pop
add
inc
pop
inc
fwait
pop
add
push
cmp
inc
lods
xchg
sahf
cwtl
pop
push
pop
aaa
xchg
mov
xchg
pop
bound
rol
addr16
mov
and
push
cmpsl
jne
sbb
jne
popa
loop
insl
dec
popa
stos
insl
mov
mov
sbb
out
sbb
aas
mov
mulb
lock
or
test
shlb
pop
and
in
jecxz
outsb
dec
inc
out
call
jg
xchg
sbb
in
pop
stc
jo
inc
push
sbb
xchg
push
shl
cmp
mov
cmp
ss
or
movsl
mov
fmull
jle
inc
xchg
movsl
stc
jl
mov
xchg
fisubrl
xlat
in
outsl
jmp
fisubs
sub
fsts
add
imul
mov
adc
add
or
icebp
call
fdivl
xchg
push
les
adc
adc
cmp
mov
in
gs
dec
rorl
repz
cmc
sub
movsl
xchg
xor
popa
sarb
imul
or
std
into
or
jge
mov
inc
lret
dec
push
push
lods
ds
cmp
push
shrl
hlt
scas
test
out
aad
stc
mov
mov
or
jecxz
jp
cwtl
outsb
add
mov
lret
inc
push
xor
inc
cmp
mov
orb
leave
roll
cmp
imul
pop
out
jae
scas
sbb
mov
dec
push
xor
imul
dec
les
imul
adc
popf
outsb
mov
cmp
cli
mov
lret
stos
cmpsb
rclb
pop
shl
mov
imul
sub
jp
push
push
xor
sbb
jg
fsubl
pop
sbb
shlb
sub
addr16
das
jb
push
adc
dec
loopne
loopne
push
insl
movsb
jo
mov
stos
shrl
shlb
mov
push
addr16
sti
dec
mov
hlt
xor
jbe
hlt
inc
xchg
xchg
dec
loope
jae
jnp
mov
out
loopne
jbe
push
jns
lret
sahf
out
test
mov
fstpt
sar
jmp
xor
or
mov
push
aad
pop
lods
adc
inc
inc
push
jbe
xor
mov
sti
js
push
lods
or
push
push
cmpsl
add
loop
sbb
sbbl
out
cmpsl
cmp
lret
push
xchg
popf
or
xchg
pop
icebp
sub
mov
jno
aaa
dec
addr16
incb
aam
inc
into
jp
inc
int
lcall
icebp
inc
mov
mov
dec
cmpsb
cld
aas
push
repnz
outsb
sti
pop
pushf
stos
rorl
js
clc
out
test
xlat
ss
sti
sbb
mov
in
jns
data16
sbb
jmp
add
stc
ret
sub
inc
out
push
call
cltd
in
lods
lret
jae
jb
daa
addr16
fisttps
rcl
jbe
jp
xor
cmp
push
mov
inc
fwait
pop
shrl
xor
sbbl
dec
cmp
add
in
test
ret
roll
or
jbe
mov
jne
loope
mov
adc
addb
mov
adc
push
movb
imul
cmp
hlt
ficoms
push
in
cmp
out
sbb
std
int
xchg
lret
test
pop
cltd
or
shrl
clc
push
adc
add
adc
inc
and
in
loopne
xchg
or
mov
leave
pop
sbb
xor
pusha
rcll
jns
into
cld
aad
sub
push
mov
push
mov
dec
je
xchg
mov
xor
lds
fcomip
cmp
push
cmc
dec
test
lret
inc
movsb
cmp
insl
xchg
pusha
stos
mov
xor
js
mov
loope
push
outsl
push
add
std
pop
xchg
jns
dec
js
in
mov
jle
imul
inc
dec
imul
test
scas
mov
in
sbb
leave
mov
inc
cs
xor
movsb
and
xchg
jg
push
inc
xor
mov
sub
in
in
nop
outsb
fcoml
dec
and
shlb
fs
sbb
subb
add
sbb
push
insb
shrb
xchg
xor
fisubs
pop
clc
inc
or
sub
pushf
and
loope
js
popf
iret
std
xor
in
sbb
cwtl
out
je
test
cmp
and
xchg
icebp
sub
mov
loopne
push
push
mov
into
fsts
out
jb
cmp
dec
jo
mull
jp
cmpsl
mov
sub
sub
insb
stc
jmp
cmc
decb
push
imul
lods
inc
cltd
jb
mov
lds
je
ljmp
sub
cmpsb
xchg
push
idivl
push
lret
or
loop
rclb
daa
inc
push
loope
mov
bound
pop
cmp
jmp
dec
je
xor
in
or
cmp
insb
xor
repnz
ja
repz
adc
sbb
fs
mov
jo
out
adc
jne
jbe
enter
xchg
mov
imul
mov
ds
xchg
gs
sbb
mov
xor
inc
mov
mov
inc
xchg
xor
jmp
xchg
jecxz
in
and
adc
xchg
cmc
jle
sahf
inc
stos
das
xchg
stos
out
ds
das
jmp
mov
xchg
mov
cmp
dec
xchg
xchg
imul
or
lcall
lea
or
std
shrl
insb
in
es
bound
cmpsl
cmc
mov
sbb
sub
mov
in
pop
jmp
stc
adc
mov
insb
xorl
and
in
imull
loopne
or
mov
dec
sbb
mulb
xor
popfw
mov
fsubrs
pop
mov
inc
int
popa
pop
cmp
push
mov
dec
mov
ret
xchg
ja
test
sub
pop
xlat
sub
or
dec
icebp
add
test
inc
mov
repnz
gs
cld
mov
pop
pop
or
or
cmpsb
sbb
mov
subl
jecxz
jnp
or
mov
xor
rclb
fimull
ja
scas
mov
adc
xchg
cmpsb
notl
fwait
push
dec
xchg
lahf
or
stc
mov
jae
xchg
sub
xor
add
adc
out
pop
xor
das
sbb
imul
jne
fistps
popa
sub
push
dec
or
xchg
cld
push
fldcw
icebp
incb
add
cmp
push
mov
sub
mov
movsl
lahf
xchg
bswap
lods
dec
cld
jne
imul
adc
out
test
insb
jo
sbb
mov
jo
xorl
dec
das
insb
aas
xor
or
dec
fsts
out
cmc
mov
orl
out
pop
lahf
push
sbb
std
jns
cmp
cmp
lahf
popa
fildll
stos
add
add
sbb
add
in
je
push
mov
nop
je
push
mov
pop
shr
push
mov
insl
sub
incb
jo
push
icebp
cmpsl
lahf
les
scas
sbb
int
mov
ja
insb
adc
shl
pop
pop
mov
mov
mov
out
inc
add
stos
jo
inc
xor
insb
pusha
js
rcl
mov
gs
test
push
not
lret
test
and
xor
scas
repnz
sub
adcb
loop
leave
or
xor
lods
sbb
pop
jp
popf
sahf
fimuls
pop
jo
mov
push
shrl
add
mov
hlt
ss
inc
nop
mov
rclb
add
ljmp
rorb
sahf
mov
jmp
cmp
int3
push
imulb
mov
test
mov
pusha
add
fiaddl
fs
mull
jo
cwtl
add
push
inc
jno
test
sub
adc
jb
add
pop
mov
call
int
daa
add
xchg
rorb
adc
or
xchg
xor
les
icebp
mov
test
int
inc
pop
das
jl
dec
mov
xor
lods
arpl
jecxz
lret
fistpll
pop
add
icebp
clc
icebp
stc
adc
popa
mov
jp
cld
dec
call
repnz
cmp
add
arpl
push
sbb
shll
push
or
dec
dec
dec
sub
mov
hlt
ret
aad
stos
jbe
or
iret
mov
shll
push
and
into
repz
and
xorl
xor
rorb
xchg
mov
outsl
sahf
push
sub
mov
ss
hlt
cmp
sbb
pop
mov
add
mov
addb
pop
xor
push
dec
mov
pop
hlt
and
dec
pusha
xor
lock
mov
divb
pop
imul
xchg
mov
fstpt
add
movsb
or
cmp
mov
adc
cwtl
aas
hlt
mov
cli
jno,pn
lock
scas
nop
mov
divb
cmpsb
mov
mov
push
ret
xchg
test
add
jbe
and
mov
out
mov
enter
bnd
dec
jbe
mov
cmp
ljmp
pop
inc
fsub
sbb
std
mov
les
insb
push
jo
sub
adc
mov
adc
mov
test
bound
aad
ret
outsb
cltd
cmp
dec
and
test
dec
push
or
fsubs
inc
addl
and
std
push
mov
jno
cli
mov
mov
in
dec
fists
add
add
pop
fwait
cmp
inc
xchg
sbbl
lahf
into
jnp
sti
pop
adc
adc
fdiv
outsb
lcall
push
mov
push
inc
sub
mov
jmp
dec
mov
in
pop
dec
dec
and
sti
test
lds
cli
pop
dec
cmp
in
mov
inc
and
loope
cmpsl
jp
or
xchg
cmp
or
mov
cltd
notl
mov
mov
push
cmp
ds
jl
push
and
enter
xor
push
push
jg
mov
testl
repz
mov
push
or
sub
int3
adc
stc
fsub
mov
lds
push
icebp
imul
push
adc
loopne
sbb
sar
push
xchg
sti
mov
int3
call
inc
jne
insl
imul
mov
shrb
imul
dec
sub
pop
es
incl
add
lahf
inc
mov
inc
scas
addr16
pop
jns
jl
int3
pop
es
dec
xchg
sbb
fcompl
mov
pushf
add
outsb
and
cmp
out
push
fwait
addr16
cmp
shl
punpckldq
aam
dec
movsl
repz
inc
xchg
pop
ds
mov
daa
and
jb
inc
loop
add
shrb
jge
mov
mov
sbb
xchg
lods
scas
add
fnstsw
in
inc
aam
addb
mov
daa
aaa
sbb
jge
cmp
stos
xlat
fwait
outsb
or
and
loope
mov
push
push
xchg
inc
xchg
dec
lods
mov
pop
add
pushf
ficomps
push
jp
mov
xchg
mov
cs
repnz
adc
xchg
xchg
jecxz
mov
nop
and
jns
rol
dec
lods
dec
in
out
jnp
rorb
pushf
stos
pop
roll
iret
fcomps
mov
orps
ja
xchg
mov
lcall
and
je
add
mov
jo
mul
mov
xchg
out
hlt
dec
scas
pop
pop
aam
xchg
sbb
cmpsb
mov
pop
and
es
out
shl
xlat
stos
add
out
mov
insl
or
mov
in
fs
jno
int
cli
dec
lret
xor
dec
push
dec
mov
pop
jno
push
push
and
rcr
and
jl
cmc
mov
lock
repz
pop
lcall
xor
mov
loopne
jp
arpl
and
adc
movsl
ss
cwtl
std
push
push
and
xchg
into
mov
sahf
test
sbb
mov
jne
daa
fwait
xchg
sbb
push
push
lret
mov
mov
ffree
inc
popf
xchg
arpl
mov
cmp
rcl
xchg
js
add
aas
outsb
lret
nop
lods
cmp
mov
add
mov
std
cltd
dec
call
push
mov
aam
data16
cli
xor
mov
inc
arpl
cld
xor
xor
sbb
inc
xor
push
jmp
lea
mov
jae
push
or
popa
mull
pop
rol
mov
and
sbb
incb
pusha
std
xor
mov
loope
sbb
mov
jecxz
fdiv
mov
mov
cmp
pop
jno
fidivrs
stos
in
pop
jno,pn
pop
into
jg
adc
lret
mov
push
sub
test
jmp
mov
int3
mov
std
lock
lods
sub
dec
or
imul
dec
mov
xlat
lret
addl
js
inc
add
mov
rorb
out
mov
test
fcompl
testl
dec
les
jmp
inc
and
maskmovq
imull
xor
cwtl
js
sub
push
loopne
aas
out
jg
push
push
xchg
sbb
jg
imulb
add
push
incl
push
iret
jg
cmp
mov
jne
mov
mov
lock
xor
xchg
cmpsb
sub
cs
cmp
fbld
mov
push
scas
pop
sub
push
pusha
nop
test
rclb
das
jl
push
sti
dec
rcll
add
insl
cmp
js
rcrl
xor
mov
sub
and
xor
scas
cs
ljmp
or
jnp
test
addr16
loop
outsl
xchg
mov
push
xor
popa
sarb
jne
mov
mov
dec
shlb
les
pop
sbb
cld
add
pop
into
sub
mov
lret
orb
fucom
int
popa
fstpl
in
lods
leave
mov
imul
cs
jnp
testl
imul
hlt
dec
mov
mov
push
cli
lret
xor
test
test
push
xchg
mov
or
sbb
jmp
rclb
sbb
jno
pop
data16
fdivrl
pop
rolb
popf
popf
push
pminsw
xor
clc
inc
xchg
mov
and
inc
adc
cmpsl
insl
pop
outsl
jno
mov
ret
cltd
hlt
push
sbb
sbb
pop
pop
lea
and
xchg
lods
js
and
mov
fs
xor
hlt
sub
push
ficomps
popf
lret
push
js
into
test
mov
pop
iret
data16
sarl
jno
mov
jecxz
leave
push
xchg
dec
mov
sti
ffree
ret
pusha
cmc
sub
lcall
sbb
cmp
int3
mov
icebp
jo
inc
pop
sub
mulb
das
and
xchg
or
rclb
cmp
dec
lds
ja
push
sbb
xor
ret
icebp
jg
pop
loop
pop
repz
jmp
outsb
mov
int3
inc
and
mov
faddp
push
js
sbb
pop
popa
aaa
adc
repnz
jmp
lods
cmp
xchg
sub
iret
call
lds
rorb
movsb
xlat
push
adc
cmc
les
in
inc
std
in
cwtl
xchg
or
int
cwtl
cmpsl
mov
test
push
xchg
and
imul
int3
sub
add
adc
leave
mov
xor
dec
js
sahf
push
adc
sub
insl
fiadds
jo
and
push
cmpsl
mov
stos
mov
sub
pop
daa
inc
lahf
and
add
pushf
and
out
pop
xchg
cwtl
push
icebp
xor
sub
mov
add
lock
inc
addr16
in
pop
les
sbb
jle
fbld
scas
das
js
pop
inc
iret
sbb
bound
push
xchg
cld
xchg
jno
or
stos
sub
mov
test
in
xor
repnz
xor
cmp
and
mov
iret
clc
out
cmp
es
inc
mov
xchg
mov
adc
sbb
inc
or
jecxz
and
add
pop
pop
mov
ja
test
push
stc
cmpsl
lret
cmovp
ret
into
dec
xlat
mov
cltd
mov
adc
sti
pop
and
orb
jbe
jo
and
jno
imul
fstp
push
sysexit
test
rcl
testl
subl
aad
cmpsb
shll
cmp
in
push
and
inc
or
mov
aad
lds
decl
movsl
fwait
popa
rcll
xor
mov
addl
int3
and
push
xor
sahf
jb
cmp
push
mov
jg
sub
mov
cld
test
lods
fsubs
mov
jl
ds
push
lock
fcoms
call
mov
push
add
mov
rcr
div
push
ja
mov
sub
inc
adc
fwait
pop
or
and
aas
sti
cmpsb
cwtl
stc
adc
cmp
fwait
stc
aam
je
fdivrl
xchg
mov
orl
xchg
or
mov
xlat
sbb
icebp
xchg
jb
sub
pop
sub
xchg
imul
outsb
mov
jnp
into
mov
sub
mov
cltd
call
jne
push
mov
rcrb
xor
push
mov
insb
dec
lahf
lods
mov
out
and
add
roll
or
xor
xchg
inc
popa
scas
and
xchg
dec
jecxz
jbe
jg
outsl
shl
mov
fs
pusha
and
in
xlat
jmp
nop
push
divl
aad
popf
xor
loopne
push
jo
test
pop
inc
push
jg
mov
or
and
cmpsl
xchg
or
or
inc
inc
mov
pop
rorb
cli
movsb
xor
fs
add
mov
dec
fwait
arpl
pop
cmc
xor
xchg
xchg
fs
movsb
mov
xchg
sub
fwait
and
push
push
mov
repz
sbb
imul
dec
dec
mov
insb
mov
adc
xchg
dec
repnz
pushf
add
xlat
lret
test
push
or
push
pop
mov
jg
and
dec
add
test
aad
or
lcall
cwtl
mov
fcompl
mov
lods
mov
mov
lods
ss
iret
sbb
push
mov
push
xlat
mov
jno
lods
xor
loop
fstps
aaa
pop
rorb
adc
ret
stos
sbb
pop
and
shll
leave
or
xchg
pop
roll
lds
shrl
lock
cwtl
mov
insl
sub
adcb
mov
aas
sti
int3
cmp
sbb
dec
fcmovnb
dec
dec
icebp
or
aas
mov
mov
in
mov
sbb
or
jno
in
lahf
int3
mov
cmc
sar
insl
orb
aad
rclb
xchg
mov
scas
mov
jp
movb
test
stc
adc
lock
push
scas
or
push
lods
push
mov
push
repnz
mov
test
in
in
mov
ljmp
push
xchg
cltd
mov
pop
sub
addr16
dec
aad
adc
mov
add
and
xlat
mov
cld
xchg
scas
mov
jge
xchg
enter
mov
lods
dec
sub
mov
pop
pushf
xchg
fwait
mov
or
xchg
pop
stos
in
mov
jno
mov
lret
push
xor
popa
xchg
lret
dec
xchg
pop
sub
das
in
cmp
push
loopne
xor
jb
pop
enter
cmp
cmc
mov
insl
push
add
iret
mov
lfs
mov
adc
bound
insl
mov
sbb
xchg
aad
stos
or
clc
lods
jo
inc
cmpsl
jnp
push
cmp
popa
movsl
push
scas
sar
push
shr
popf
cwtl
adc
lock
adc
mov
fcmovu
sarb
adc
jle
add
push
pop
dec
ret
sbb
movsb
mov
aad
sbb
fstl
ficomps
stos
lea
inc
repnz
imul
hlt
dec
cmp
scas
cltd
jno
dec
mov
push
test
test
push
lods
jg
mov
mov
addl
adc
adc
lds
sub
sahf
and
jns
jmp
in
data16
mov
or
pop
add
test
cmp
icebp
jmp
xor
jb
aam
adc
jns
xchg
pushf
mov
in
aaa
xchg
mov
or
adc
loop
rcrl
add
adc
outsb
push
and
xchg
jnp
movsl
clc
mov
mov
cli
jg
je
scas
std
lods
es
and
daa
lods
xor
pop
inc
js
jns
sbb
add
in
ja
mov
lcall
or
das
pop
xor
jmp
pop
pop
or
repz
pop
dec
lods
xor
loopne
inc
lock
aam
adc
push
in
loopne
rcrl
jno
jae
fadd
xchg
loop
xor
and
mov
aaa
imul
cmc
push
mov
stos
aaa
pop
xchg
mov
push
int3
jl
cltd
fsts
or
jne
or
enter
sub
outsl
pop
pop
mov
add
lret
adc
sbb
loope
cmpsl
add
lds
bound
aaa
pop
push
sbb
fldl
push
nop
cmp
jb
cmpsb
aad
and
lock
or
sar
adcb
mov
daa
jmp
out
clc
push
lock
pop
addb
ss
test
test
pop
push
xchg
mov
scas
cmp
pop
push
lods
fwait
pop
inc
mov
cltd
xor
adc
out
in
xchg
repz
push
mov
pop
fsubs
jg
inc
xor
push
lods
dec
repz
icebp
sub
xor
push
and
imul
scas
sbb
sar
mov
call
add
xor
or
int
jo
mulb
jbe
lret
adc
inc
pop
aas
pop
cld
movsb
jecxz
push
cs
mov
mov
repnz
outsb
mov
repnz
roll
insl
ljmp
push
sti
into
mov
test
mov
mov
ja
xchg
hlt
xlat
xlat
fdivs
xor
pop
das
dec
rorb
jno
sbb
xchg
and
lods
in
jg
outsb
addr16
loopne
adc
int
xchg
test
push
int3
cmc
mov
fwait
lahf
push
add
cmp
sub
mov
xchg
push
mov
sub
jb
mov
adc
and
shll
rolb
loope
dec
or
clc
adc
dec
pop
xchg
fistl
into
imul
cmp
and
add
aaa
ret
cs
imul
adc
rclb
cltd
push
sarl
adc
dec
aaa
sbb
int
vpackuswb
movsb
xchg
mov
sub
mov
push
add
jecxz
test
pop
cmp
add
mov
dec
mov
movsl
fiadds
or
jmp
fldt
jnp
lcall
xchg
pop
clc
add
jecxz
sbb
inc
insl
dec
sti
xor
jae
int3
jo
fwait
dec
jno
int3
mov
or
rcl
add
fistps
mov
rcll
shll
add
out
ds
pusha
mov
lahf
xchg
movsl
or
test
pop
jns
mov
test
xlat
mov
loop
xchg
mov
mov
jle
icebp
cwtl
mov
mov
loopne
rorl
inc
in
in
xchg
cmp
fiadds
fdivrs
push
cs
out
pop
test
test
sub
lds
mov
rcl
insl
mov
mov
nop
loope
dec
lock
out
ret
outsb
icebp
jo
in
iret
popf
fwait
mov
out
ret
test
addl
or
outsl
idivb
sub
mov
or
or
jecxz
loop
leave
divb
lods
cmp
push
test
push
xorps
push
or
into
je
cmpsb
fnsave
sub
jl
sub
mov
outsl
into
cmp
add
mov
or
xchg
movsb
cli
jg
sub
cltd
xchg
pop
jno
aad
jbe
jmp
sbb
cmc
mov
bound
pusha
mov
inc
rcrb
lods
daa
mov
rcll
loope
out
mov
lods
xlat
or
addr16
inc
into
icebp
jle
xchg
mov
lahf
stos
ja
add
mov
lcall
repz
add
test
push
and
cmp
cld
lods
popf
xor
push
clc
cld
and
leave
lock
lods
andl
ret
mov
leave
inc
divl
test
popa
pop
fdivl
and
fcomps
movsb
testb
xchg
jb
mov
in
jo
xchg
movsb
xlat
into
out
pop
mov
sbb
imul
addr16
fcoml
mov
dec
popf
cli
ret
mov
out
adc
insb
cld
addl
inc
shll
loope
jecxz
lods
nop
movsl
xlat
sahf
add
ds
jo
scas
dec
inc
or
orb
push
cs
and
mov
jb
fimull
pop
icebp
into
xchg
loopne
insl
jb
repz
je
frstor
int
dec
fscale
andl
inc
movsb
sbbb
adc
or
movsl
popa
inc
rolb
ljmp
ret
flds
mov
push
out
cmp
inc
push
jecxz
push
mov
add
jl
xor
fwait
ljmp
dec
in
stos
push
mov
pop
mov
mov
push
out
loope
mov
pop
adc
pushf
add
mov
add
movsl
jp
test
into
int3
ss
inc
push
inc
adc
cmpsb
testl
pop
fcmovne
dec
dec
adc
mov
dec
icebp
ds
clc
loop
xchg
in
outsl
mov
xchg
arpl
lret
cmpsl
pusha
dec
jae
outsb
push
jbe
push
jg
jle
les
and
inc
dec
outsl
xchg
call
movsl
push
push
push
sbb
mov
push
daa
rorb
add
test
lods
mov
push
hlt
lea
ljmp
aaa
inc
mulb
mov
dec
push
sbb
mov
cs
ficoms
mov
dec
fwait
or
cld
shll
add
popa
loope
lods
and
or
pop
xchg
cs
ret
push
test
xlat
mov
xor
repz
adc
xor
stc
mov
pop
xchg
or
pushf
loope
cld
or
out
xchg
movsl
mov
dec
scas
adc
mov
xor
loop
cmp
negb
repnz
in
cmp
mov
test
cmp
mov
dec
xor
iret
xchg
out
lods
mov
data16
xor
pop
arpl
xchg
xor
in
test
cld
dec
jecxz
push
cwtl
loopne
loope
leave
xchg
rorl
xor
dec
push
paddw
add
sub
add
dec
mov
cwtl
or
iret
ljmp
nop
mov
sbb
pusha
mov
outsb
xorl
add
xchg
popa
cvtpi2ps
or
in
repnz
loop
jmp
leave
sbb
into
adcb
mov
inc
jbe
jae
add
fists
sub
cltd
jmp
xor
and
pop
jmp
add
jecxz
lret
pop
out
mov
push
hlt
cmp
je
sub
sbb
std
inc
cmp
aas
fs
add
sub
pop
push
outsl
inc
inc
pop
lahf
cltd
sub
sub
push
mov
dec
lret
adc
or
int3
sbb
push
ljmp
adc
lea
out
xchg
mov
sbb
xor
xor
icebp
and
ja
adc
mov
fldcw
int
xchg
jnp
xor
ljmp
pop
xor
xchg
je
xor
pop
sti
imul
jno
scas
push
mov
sti
in
mov
les
es
loope
jp
movl
pop
xor
ret
jbe
sbb
cmp
dec
fxch
add
outsb
cmc
and
cltd
loope
xlat
lret
push
ljmp
mul
mov
mov
pusha
cmp
sub
sti
sarl
outsl
jns
divb
in
scas
jns
pop
ffreep
sub
dec
pop
fscale
xor
movsl
xchg
arpl
push
add
stos
mov
mov
xchg
or
mov
and
cmpl
sub
jle
mov
jns
xor
decl
mov
in
xor
push
mov
push
xchg
mov
cmc
dec
pusha
push
push
rcrb
ret
mov
imul
jb
adc
out
lahf
test
pusha
add
jmp
xor
cmp
daa
jnp
lret
sbb
or
sbb
or
shll
push
or
sub
mov
andl
cli
mov
imul
mov
sbb
pusha
inc
movsl
sub
and
or
dec
pushf
ds
xchg
xchg
mov
xlat
mov
mov
hlt
addr16
and
ficoml
add
push
mov
repz
inc
sbb
adc
mov
jns
in
sub
in
cmpsl
test
mov
cmp
repz
inc
jp
lea
cltd
push
orl
adc
xor
mov
cmc
out
idiv
mov
jae
into
pushf
sbb
out
and
and
mov
hlt
dec
sti
jecxz
imul
ds
inc
pop
xchg
mov
mov
pop
scas
cltd
or
or
cmpsl
sbb
divb
rcll
jl
xlat
inc
inc
mov
repz
out
pushf
ret
or
movsb
addr16
mov
xchg
xor
mov
pop
leave
outsl
or
mov
sbb
je
sbb
push
jnp
test
mov
inc
dec
and
dec
or
mov
xchg
cmp
mov
xchg
std
icebp
xchg
movsb
sbb
xlat
sub
iret
mov
lret
sbb
xchg
gs
aad
jp
sbb
mov
push
pop
adc
rolb
jnp
xchg
fs
jp
inc
aad
pop
mov
xchg
outsl
jge
add
push
out
ss
addl
subl
inc
push
mov
pop
enter
pusha
cmp
inc
dec
add
loopne
shll
jno
leave
push
mov
adc
nop
push
and
shrl
pop
fcom
scas
cmp
fistpl
ret
fildll
cmp
or
push
inc
xchg
das
aam
sub
aad
xchg
insl
andl
or
sub
inc
cld
mov
popf
push
sub
sub
insb
pop
imul
mov
pop
mov
iret
push
aam
cmp
xchg
sub
adc
data16
dec
push
stc
and
inc
nop
test
dec
adc
pusha
xor
fidivs
aam
pop
cmp
lret
scas
or
adc
cmpsb
push
nop
or
jnp
sub
cmpl
mov
jp
cli
test
inc
mov
xchg
mov
pop
in
xchg
daa
push
mov
sbb
rcr
cli
mov
sbb
orb
mov
loop
add
aad
sub
js
jns
test
push
in
out
inc
loope
frstor
ret
lahf
lods
fdiv
sbbl
dec
xor
pop
and
rolb
xchg
enter
or
imul
sbb
test
pop
gs
push
loopne
inc
pop
xor
sbb
xlat
les
aad
clc
xor
xor
mov
xor
xchg
or
inc
dec
dec
outsb
inc
ss
jno
fcoms
aas
pop
sub
cmp
outsl
inc
mov
out
test
pop
and
gs
and
daa
fsubl
out
xor
fwait
out
into
outsl
dec
or
mov
clc
mov
ss
js
fucomi
jle
mov
jge
pop
pop
hlt
push
sub
ss
test
mov
orb
jge
dec
xchg
dec
or
xchg
mov
xchg
jle
movsb
xchg
addr16
ficompl
or
loope
pop
cld
es
mov
sub
and
aam
pop
cmpsl
sub
rcrb
pop
sub
dec
mov
std
adc
dec
repz
int3
in
jne
sub
into
sti
jb
pop
jae
sub
mov
lahf
or
cli
cmpsl
popf
lret
sbb
clc
popa
push
cmpsl
add
sbbb
cmp
sbb
cmp
out
test
fisttpll
push
or
hlt
in
xor
int3
mov
xor
xchg
stos
mov
ret
jns
sbb
shll
aaa
sub
add
stos
or
int
pop
or
iret
insb
inc
sarl
sbb
inc
das
and
sarl
inc
sbb
rcll
mov
cs
xchg
fwait
insl
stos
shll
xor
xor
pop
xor
sub
adc
repnz
mov
jmp
xor
jnp
cld
popf
push
jg
leave
mov
fs
add
mov
clc
ss
clc
pop
int
or
sbb
push
lods
stos
into
xor
insb
mov
xchg
cmp
xchg
jae
cmp
enter
lods
rclb
push
ja
out
jns
mov
xchg
ja
push
nop
cmp
adc
sahf
push
add
mov
lods
mov
imul
movsb
negb
cmpsl
ficompl
push
popf
lods
adc
push
add
mov
fadd
ss
pusha
cli
sbb
pop
sbbb
jp
lret
jb
and
add
push
add
xlat
xor
mov
data16
ret
test
movsb
out
pop
ljmp
js
sahf
roll
pop
dec
cwtl
sub
cmp
movsl
fwait
in
shrb
fistpll
push
nop
xor
mov
in
lret
popa
xlat
add
xor
xlat
dec
sahf
ss
enter
call
je
jno
sub
test
or
or
loope
out
mov
inc
dec
cs
mov
lock
aaa
lcallw
dec
icebp
inc
push
loopne
push
sbb
int
mulb
sbb
dec
shl
jno
daa
ljmp
hlt
pop
cmp
or
rcrl
pop
pop
je
push
sarb
adc
push
addr16
dec
rolb
clc
jne
scas
sbb
in
in
jge
mov
call
push
or
or
lahf
sti
xchg
jnp
cld
sbb
inc
xlat
push
xor
sar
out
loope
inc
outsb
cmp
sub
mov
fstpt
popf
sahf
fcmovu
inc
mov
shl
push
jo
int
ret
in
and
xor
aam
test
dec
divl
divb
or
or
or
imul
insl
mov
push
movsl
hlt
add
adc
arpl
adc
add
bound
sub
push
insl
or
enter
fucomi
inc
inc
push
incb
sub
mov
dec
das
clc
or
mov
jg
jnp
loop
push
std
or
jns
adc
or
mov
movsl
inc
adc
insl
ret
pushf
inc
in
and
je
dec
or
fsts
cmp
cmp
lret
fisubs
std
inc
mov
mov
add
shll
mov
add
test
lea
cmp
rol
jmp
test
les
sub
sub
jae
jae
jns
and
outsb
or
xor
mov
push
xchg
dec
xchg
stos
and
lock
push
adc
sbb
pop
xlat
xchg
add
pop
inc
pop
int
subl
sbb
push
and
aaa
jle
and
mov
icebp
push
aaa
xor
pop
popa
push
jg
jns
pop
add
mov
cmpsl
mov
and
xor
popf
in
jl
popa
dec
popf
push
sub
or
aam
sbb
mov
push
fcmovnb
shll
frstor
in
pop
cs
dec
aas
aas
dec
or
mov
jl
inc
push
jnp
cmc
nop
sbb
fs
dec
mov
xchg
aas
lock
add
icebp
mov
adc
sub
rcll
lahf
cs
sbb
iret
jne
pop
faddl
xor
push
aas
lahf
mov
inc
add
icebp
inc
lret
aas
loope
ds
cltd
sub
cmp
push
xchg
decb
inc
js
mov
outsb
pop
in
push
mov
pop
outsl
fcomip
cld
jno
dec
test
in
int3
enter
mov
mov
inc
mov
mull
and
adc
lds
dec
mov
lahf
jae
std
test
inc
out
es
js
lahf
push
clc
outsb
cmp
and
je
orl
fucomp
out
lret
jno
jo
dec
jne
add
xlat
scas
imul
fists
movsb
xchg
sbb
movsb
or
inc
jmp
aas
mov
and
test
jle
fdivrl
add
jle
inc
push
lods
fsubs
or
popa
push
aaa
addr16
mov
fstpl
dec
inc
cmp
push
mov
inc
and
out
shrl
aad
jmp
aaa
mov
mov
rol
dec
jbe
dec
int3
jns
push
jmp
popa
subb
lret
mov
and
pop
dec
sti
dec
jecxz
rolb
movsl
add
adc
adcl
mov
lods
jle
aam
fdivs
insb
mov
inc
xchg
nop
in
pop
jmp
cmp
cmp
int3
xor
cltd
mov
shrl
cmp
pop
loop
lret
test
insl
mov
add
cld
popa
out
cmp
aaa
pop
or
cltd
test
sbb
mov
jb
cld
ret
into
pop
xchg
popl
and
pop
xchg
add
sbb
and
int3
mov
repnz
cmc
hlt
popa
cld
shr
mov
and
cli
lret
inc
and
or
nop
test
decl
mov
push
lcall
jae
mov
icebp
jne
out
jmp
xor
add
mov
xchg
scas
sub
cmp
repz
xor
outsb
into
mov
adcl
ljmp
mov
fistpll
add
xorb
sub
iret
xchg
stos
push
pop
inc
xor
jo
xor
push
in
insb
fldt
mov
mov
or
mov
cli
imul
shll
xchg
lds
push
jl
sub
and
mov
push
outsl
fmull
lret
inc
fisttpll
dec
out
int
cmp
jns
xor
xchg
adc
inc
repz
test
aam
filds
flds
fsubrs
mov
pop
pop
mov
or
outsb
fnstenv
stos
cmpsb
push
sbb
mov
fwait
scas
in
stos
cmc
and
push
push
sahf
scas
mov
aaa
pop
jecxz
sbb
ljmp
fwait
jns
pop
cld
sbb
out
jnp
ja
hlt
add
inc
add
std
jb
fimull
clc
mov
in
jmp
decb
push
imul
mov
xor
or
es
lret
repnz
cmp
mov
in
movsl
iret
mov
cld
pop
aaa
mov
mov
int3
ja
lds
jae
adc
aad
jl
and
push
mov
mov
frstpm(287
and
xchg
daa
data16
pop
mov
outsl
mov
xorb
mov
outsl
das
xor
sbb
bound
mov
test
sub
addr16
jb
sub
std
dec
or
xchg
push
push
arpl
mov
and
pop
sbb
sub
out
or
nop
inc
or
lock
mov
dec
pop
and
jl
ja
int
sub
imul
jae
pushf
mov
fsubs
pop
or
scas
jle
stos
xchg
sbb
mov
inc
adc
fcoms
fisttpl
push
fsubrl
push
out
sub
and
cmp
in
loope
xlat
and
sbb
outsb
cmp
sahf
es
movl
mov
push
int3
mov
jmp
dec
inc
mov
imul
lods
or
out
in
adc
inc
dec
or
daa
in
rdtsc
xor
xchg
mov
les
pop
xchg
testb
int
fmull
addr16
icebp
pushf
add
push
bnd
inc
mov
mov
mov
push
pop
pop
pop
cs
lcall
xchg
push
adc
dec
mov
mov
test
inc
ret
lahf
sbb
icebp
aas
inc
or
and
outsl
repnz
sti
and
movsb
xor
aaa
lahf
inc
add
movsb
sbb
wbinvd
pop
divl
dec
mov
gs
cltd
push
mov
dec
imul
xor
pop
sub
jne
les
ja
mov
inc
test
dec
add
aaa
mov
pushf
jg
cwtl
ret
jle
mov
testl
mov
mov
pop
test
sbb
cld
jae
outsb
push
aam
push
cmp
sbb
or
mov
loope
test
gs
dec
push
pop
out
xchg
mov
xor
lds
inc
icebp
aad
shll
fmull
xchg
ljmp
jle
jle
into
in
andl
mov
add
mov
not
xchg
jmp
sbb
mov
push
out
xchg
jae
insl
imul
jno
mov
in
rorb
jo
push
jl
inc
sbb
xchg
add
xor
pop
adc
aas
imul
inc
sbbb
mov
jnp
sbb
stc
iret
jae
push
lahf
xchg
dec
shl
mov
mov
ret
push
xchg
or
stos
aas
int
popa
inc
into
push
cwtl
push
fwait
cmpl
mov
or
testl
insb
nop
pop
or
push
or
cli
mov
pop
xchg
sub
adc
ss
push
xor
jg
lds
imul
jecxz
decl
jmp
sub
mov
cld
sub
push
and
in
nop
seto
imul
and
inc
dec
lods
rol
push
push
xor
lods
ret
sub
dec
inc
test
pop
push
fists
add
jno
jle
adc
out
xchg
inc
pop
jmp
out
mov
fimull
in
and
or
push
clc
jb
dec
inc
push
add
es
cmc
pop
or
xchg
lahf
sub
cli
add
sub
dec
cwtl
push
lds
push
or
jl
mov
add
cwtl
mov
jae
loop
lret
inc
mov
dec
jo
jb
rcll
xchg
jge
sarl
jns,pt
add
ss
iret
popf
repz
mov
xchg
xchg
out
jle
xchg
notl
mov
ret
xor
sbb
fwait
cmp
ja
in
push
fdivrs
mov
inc
adc
leave
push
shlb
xor
shr
pop
or
les
in
popa
pop
jae
sbb
rclb
jge
gs
mov
mov
sti
rcrl
fwait
adc
sub
insb
incl
inc
xchg
shrl
jp
popa
xor
and
js
pop
testb
lahf
enter
test
jle
lods
lcall
dec
inc
or
jne
push
ja
dec
fidivl
rclb
std
push
repz
lock
and
jmp
filds
int
xchg
out
subl
inc
pop
out
dec
jge
movsl
push
adcb
sub
cmp
into
dec
jmp
cmp
mov
rorl
inc
sbb
mov
jge
call
xchg
cmp
xchg
shll
cli
inc
fimuls
fiadds
cs
inc
scas
call
cs
idiv
movsb
lods
gs
pop
dec
lods
imul
cmp
movsl
lods
add
mov
or
cmp
pop
jnp
sub
jnp
add
and
inc
shlb
pslld
loopne
inc
xor
negl
outsl
push
adc
dec
mov
or
hlt
cmc
pop
pop
push
enterw
cld
jle
loop
jbe
and
repnz
andb
repnz
mov
jo
std
and
repnz
stc
sub
sbb
popa
dec
jo
push
inc
add
pop
mov
fs
es
or
push
rcrl
imul
adc
jb
push
test
inc
in
add
lock
bound
repnz
ja
mov
sahf
jb
and
push
cmp
sbb
popa
mov
int
daa
divl
xchg
xchg
dec
and
cli
enter
cmc
cmp
aas
xor
movsb
pop
mov
jp
iret
shlb
xor
cmp
mov
loopne
jmp
and
mov
xchg
fildll
mov
sbb
and
insb
call
inc
dec
and
fidivl
psraw
mov
bnd
adc
jle
sub
leave
lret
imul
imul
jge
sub
jecxz
jbe
mov
into
push
dec
repnz
cld
out
daa
movsl
cwtl
xchg
ja
mov
aaa
outsb
cmp
fisubrs
lret
jns
mov
call
and
fistl
pushf
cmp
sub
inc
lcall
pop
ds
mov
inc
push
mov
popa
in
daa
push
push
pop
pop
imul
jle
and
iret
sub
xor
cmp
add
negb
sahf
lcall
fidivs
push
jg
rsm
test
scas
dec
mov
in
sub
aad
jg
xchg
push
cli
sbb
mov
fadds
gs
push
and
xchg
dec
cltd
notb
out
stc
and
mov
dec
js
je
push
lcall
adc
cmp
xchg
add
insb
cs
cltd
decl
out
das
cwtl
push
or
inc
fistps
jl
sbb
cs
popa
lods
dec
bound
scas
orl
mov
movsb
cwtl
in
rcll
les
jle,pn
pop
cmpsl
jno
rclb
pop
mov
push
hlt
push
dec
insb
cmp
fidivs
adc
xor
loopne
std
adc
sub
out
subb
adc
inc
mov
adc
pop
add
push
popa
cmp
fsub
popa
into
jns
sbb
mov
xchg
mov
jno
shl
call
mov
jbe
xchg
lods
scas
mov
idivb
fimuls
mov
rcrb
mov
lahf
xchg
cmp
iret
aaa
or
sub
xchg
adc
or
jae
xchg
or
and
or
arpl
cwtl
call
xchg
aam
mov
jno
add
daa
imul
dec
xor
rolb
sub
sub
mov
je
stos
leave
fistpll
fisubrs
add
jo
shl
mov
push
mov
ja
pushf
push
adc
inc
push
aad
sbb
pusha
mov
lock
xor
xchg
scas
into
daa
outsb
xlat
ja
mulb
fsubs
mov
push
in
and
mov
xchg
jecxz
mov
push
push
hlt
push
out
mov
imul
orb
mov
lods
mov
imul
xor
ja
jg
jb
xchg
jl
pop
dec
adc
and
insb
jle
ja
push
dec
clc
js
fidivrs
push
mov
roll
jl
mov
push
rcrb
pusha
dec
mov
js
adc
mov
dec
pop
dec
adc
adc
adc
sahf
cmpsl
add
arpl
push
call
sbb
jno
dec
mov
dec
pop
jmp
movsl
xchg
sub
and
fistpll
out
call
test
pop
or
add
jge
xchg
xor
repnz
mov
pop
por
cmpsl
pop
or
mov
mov
adc
mov
sbb
fildll
es
push
ja
xor
std
enter
jg
jno
mov
or
add
xor
xor
push
xchg
outsl
mov
pop
out
movsb
add
push
jg
scas
gs
je
dec
sub
adc
pusha
sub
daa
pop
and
in
inc
jg
dec
in
mov
fwait
cli
mov
stos
mov
inc
mov
cmp
lcall
push
jno
mov
sub
dec
sbb
push
and
push
fs
test
add
lret
je
mov
movsb
movsb
or
xchg
aas
shrb
pop
sarl
mov
mov
xchg
xor
imul
adc
push
sbb
mov
call
cmp
shrl
adc
and
fistl
lock
xor
mov
stc
add
xchg
sub
mov
sbb
jecxz
loop
push
je
cmp
xor
jmp
pop
enter
sbb
or
fisubs
scas
xchg
es
stc
cmpsl
push
test
movsl
sbb
scas
mov
fcoms
test
mov
imul
sub
ss
lds
mov
xchg
inc
rcrl
or
push
mov
xor
iret
iret
outsb
and
add
xorl
call
fldl
pop
movsl
mov
jno
jno
xlat
das
incl
jbe
in
ljmp
jbe
das
aad
enter
xchg
out
jae,pt
cmc
dec
jl
pop
lea
mov
pop
sbb
pusha
in
sbb
dec
push
or
into
dec
std
cmp
adc
jp
pop
sub
test
lahf
lods
data16
ljmp
jb
mov
push
stos
or
insl
jne
jle
pop
rcrl
movsb
adc
sbbl
and
imul
jmp
lds
test
inc
or
out
xor
pop
inc
lods
or
dec
insl
xchg
pop
xchg
mov
or
mov
xchg
sub
repz
cmp
push
or
dec
push
clc
aad
fisubrl
and
pusha
sbb
call
mov
cld
push
rclb
pop
nop
stc
adc
inc
mov
aam
pop
add
addb
dec
mov
and
das
jmp
repz
jo
xor
jae
cltd
imul
vpavgb
icebp
mov
in
lods
sbb
mov
mov
nop
push
testb
data16
xchg
or
out
scas
fdivrs
xchg
sub
pop
jno
mov
loop
push
push
aas
xchg
mov
je
inc
ljmp
push
idiv
movsl
addl
xchg
and
fucompp
stc
call
leave
out
rclb
fsubs
push
push
sbb
jg
mov
adc
or
push
pop
cmpsl
push
int3
leave
push
dec
push
outsl
in
ret
pop
jg
sbb
lahf
ss
inc
dec
or
stos
call
or
xor
xor
scas
jmp
es
clc
inc
mov
xchg
adc
sbb
mov
xor
mov
cmp
cs
pop
inc
fs
movsb
xor
xor
jae
push
push
adc
loopne
cmp
shlb
inc
mov
scas
push
mov
add
fimuls
lods
outsl
cld
bound
sbb
xchg
pop
je
dec
xor
enter
and
lods
movl
ficoms
mov
jb
std
or
and
test
and
sti
shrb
sub
or
push
in
pop
repnz
lods
sub
push
inc
inc
jne
mov
inc
daa
jno
and
adc
cmp
loope
lock
jb
and
roll
jp
or
pop
sub
ljmp
je
jge
mulb
pop
push
fcoml
loope
out
call
ret
mov
cmpsl
ss
mov
pop
in
incb
push
out
mov
add
aam
push
xor
jle
jg
ficoml
add
xchg
add
lret
add
cmpsl
cmp
push
mov
stos
sub
sub
dec
xchg
ret
ljmp
rol
jne
mov
and
fdiv
cltd
inc
inc
into
pushf
jne
and
lds
jmp
pop
push
jecxz
lcall
loopne
inc
rcr
xor
sbb
sub
cli
or
enter
xchg
pop
xchg
mov
mov
loop
pop
outsb
add
sub
adc
adc
icebp
out
push
jg
add
sti
pop
jmp
js
cmpsl
inc
les
jne
outsb
pushf
cmp
mov
loopne
adc
ds
addr16
mov
nop
push
mov
loopne
test
mov
sub
mov
mov
out
mov
push
add
adc
mov
mov
pop
subb
dec
decw
xor
hlt
and
jo
es
mov
or
jnp
lcall
flds
mov
hlt
adc
jbe
xor
outsl
jnp
adc
arpl
sbb
les
cwtl
adc
out
adc
or
inc
jp
mov
data16
xor
sbb
mov
inc
and
cmp
popf
cmp
lahf
je
rolb
xor
repnz
es
pop
idivb
stos
std
stos
cmp
pop
mov
or
xor
xchg
in
sbb
fs
rclb
pop
jno
inc
scas
scas
sbb
xchg
and
fsubs
nop
std
xchg
fcmove
es
xchg
call
popa
sbb
insl
sub
sub
add
repnz
std
sbb
sub
mov
and
jp
xor
jno
call
lret
ja
shrl
aad
lret
pushf
das
out
cmp
inc
mov
mov
lret
sbb
enter
mov
sub
cmpl
pop
or
push
push
inc
adc
mov
in
add
mov
push
xchg
iret
out
mov
imul
sti
inc
and
scas
add
push
cmp
mov
movsb
xlat
mov
in
cmp
jp
mov
push
xor
loop
rclb
xor
arpl
add
addr16
adc
aad
movsl
pop
aam
std
pop
cmp
scas
cmp
sbb
out
in
xlat
xchg
cmp
fbstp
sub
pop
orl
mul
xchg
stc
cmp
outsl
jecxz
icebp
mov
jnp
xor
cmp
gs
xor
orl
ss
aad
dec
mov
imul
cmp
push
jno
jle
ret
cmp
mov
bt
pop
inc
aam
or
pushf
rolb
bound
fwait
add
sbb
stos
push
push
mov
and
in
dec
nop
inc
fmuls
mov
mov
jno
mov
je
xchg
ret
lahf
jnp
push
sub
lock
loope
inc
adc
test
popa
inc
sbb
insb
sbb
bound
andb
ret
pop
sbb
xor
into
xchg
dec
ret
int
jnp
rcr
int3
dec
jmp
add
mov
mov
or
ret
add
dec
push
mov
cmp
dec
call
push
xor
pushw
push
fwait
dec
dec
pushl
pop
and
add
jae
pop
jae
pop
cmpsb
into
xor
cmp
out
push
dec
lods
push
clc
mov
aam
xor
nop
adc
and
pop
xlat
stos
nop
ficompl
inc
out
outsl
aad
movsl
testl
pop
lcall
dec
cmc
xchg
jo
ljmp
and
mov
xor
inc
push
pop
inc
dec
mov
lock
sbb
or
jo
mov
jl
jmp
out
enter
mov
cld
or
stc
mov
xor
stc
int3
loopne
out
and
and
mov
pop
push
ret
or
sar
sbb
xor
dec
mov
out
nopl
add
flds
int
cmp
adc
repz
fs
aaa
aad
jmp
xchg
adc
les
ja
and
push
daa
mov
xlat
adc
dec
mov
lds
orb
xchg
jbe
pop
add
mov
cmp
xchg
push
or
xchg
aaa
mov
pushl
cmp
mov
rorl
pop
push
add
addl
call
fistpll
movsl
ret
cmp
add
movsb
addr16
mov
jmp
cmp
mov
pop
add
fistl
loopne
data16
jo
mov
mov
jmp
mov
sar
xor
fs
and
push
out
mov
inc
int3
and
jbe
mov
incb
shrl
dec
sarl
cmc
pop
ds
pop
push
aas
pusha
sti
lret
dec
sbb
repz
jl
pushf
in
adc
imulb
add
adc
cmp
repz
in
mov
push
dec
lods
mov
push
jmp
pop
jg
icebp
mov
pop
out
push
pop
incb
cmp
pop
sahf
dec
xlat
cli
clc
daa
xchg
mov
and
mov
xor
mov
lods
dec
les
rorl
movb
jg
lcall
mov
neg
jge
into
in
push
ds
cmp
mov
and
ret
shll
imul
xor
mov
jmp
xchg
stos
rorl
inc
dec
leave
inc
adc
pushl
or
jb
pop
movsl
xor
fcom
int3
pop
dec
cmp
shlb
and
inc
lods
xchg
ljmp
in
push
adc
xlat
hlt
imul
push
mov
imul
dec
and
mov
jmp
inc
arpl
leave
sbb
xchg
mov
int
and
xchg
outsb
test
or
push
jecxz
jnp
ljmp
lret
dec
jae
pop
mov
scas
loopne
sub
cli
ficoml
xor
xor
jl
inc
or
xchg
cld
xor
imul
popf
sub
roll
mov
fsts
or
lea
repnz
mov
add
xchg
rcll
xchg
fucomip
lock
pusha
cmpsb
jo
mov
jl
and
jns
je
xorb
jo
mov
sub
dec
pop
arpl
and
insb
js
adc
cli
mov
and
push
test
repz
fsubl
adc
and
repz
daa
mov
orl
pop
ret
mov
pop
data16
adc
lds
sti
movsl
ret
jmp
push
mov
into
movb
mov
mov
inc
jo
movsl
lahf
sbbl
arpl
push
cmp
push
outsb
sbb
out
sbb
xchg
mov
or
mov
mov
lock
or
inc
test
or
mov
cwtl
and
clc
push
out
daa
ss
adc
push
fcompl
xor
or
pop
push
ret
dec
mov
sarb
out
xor
mov
mov
lds
cmp
popa
xchg
mov
and
jecxz
xchg
verw
adc
mov
adc
sbb
xacquire
push
dec
sahf
jnp
hlt
jmp
mov
inc
pushf
dec
sub
jnp
inc
data16
movb
cmp
jno
loope
pop
and
adc
repnz
or
pushf
cmp
mov
jbe
xor
repz
add
push
fldcw
cmpsb
adc
fwait
push
imul
sarb
mov
jns
lret
fadds
test
mov
cmc
pop
and
stos
fistpl
push
loopne
cmp
push
iret
and
push
in
fdivs
xor
sub
sub
ss
in
dec
adc
stos
ljmp
in
inc
fimuls
mov
outsl
aad
mov
cwtl
lret
xchg
push
in
and
or
pop
cmp
out
es
and
add
popf
push
addb
out
mov
fcomp
cltd
mov
in
aas
mov
stc
rorb
enter
xor
je
jle
repz
movsl
or
loop
mov
cmp
xor
ret
cmpl
jle
xchg
xor
add
push
jne
or
jno
cmp
incb
nop
scas
xor
sbb
push
jge
dec
jo
xchg
mov
push
jne
adc
daa
cmpsb
mov
mov
jnp
push
cli
lds
xor
push
sub
mov
xchg
xchg
shll
out
pop
inc
xchg
aad
sti
xor
mov
rol
notb
mov
bound
lret
mov
rorb
iret
adc
pusha
add
push
jnp
cli
stos
mov
icebp
add
adc
mov
hlt
pop
mov
sub
mov
lret
jbe
repz
push
or
adc
imul
std
jb
sbb
add
cmp
mov
stc
mov
lahf
aam
shrl
push
les
sub
orb
lahf
mov
hlt
incl
add
sbb
push
outsb
jne
mov
push
inc
jg
lea
test
insb
adcl
ds
push
jae
mov
sub
cmc
push
mov
mov
lods
dec
ds
data16
mov
stc
xchg
shl
xor
fidivrs
cmp
xchg
inc
dec
jne
jle
sbbl
sub
dec
hlt
mov
push
das
xor
adc
sub
lcall
mov
inc
divl
push
cs
push
cmpsb
fisttps
stc
mov
adc
sub
dec
mov
mov
jnp
mov
pmaxsw
adc
cmp
pop
pop
mov
popa
adc
jecxz
outsl
mov
lods
test
ja
push
push
dec
bound
mov
lcall
call
add
ret
push
xchg
inc
or
push
or
fstpl
dec
or
xchg
rorb
hlt
mov
ljmp
sbb
rol
mov
cli
push
jne
jecxz
pop
cmpsb
and
mov
test
aas
mov
inc
insl
and
and
add
inc
sbb
shll
es
shl
xchg
add
inc
mov
cmpsl
push
mov
addb
push
sub
mov
pusha
jmp
xchg
insl
pop
xchg
gs
decb
es
and
aam
outsl
adc
ss
fisubs
pop
adc
adc
lods
pop
iret
in
arpl
mov
cmpsl
data16
sbb
pop
push
push
cld
inc
adc
mov
jno
mov
xor
mov
mov
dec
in
pop
stc
ljmp
cmp
push
pop
sar
xchg
pusha
push
fwait
nop
aas
scas
push
int
jl
sbb
push
xor
iret
mov
pop
jae
shlb
imulb
jbe
stos
out
cmpl
push
addr16
xchg
lcall
push
push
push
inc
das
cmpb
dec
ss
rorb
pop
adc
add
insb
outsl
xlat
cmp
push
xor
xchg
jge
pop
divl
rcrl
movsb
fs
in
or
pop
sub
mov
mov
outsb
dec
xor
xor
mov
dec
aam
jle
js
mov
sub
mov
outsb
sbb
add
movsb
test
pop
cmp
std
jge
pop
cmp
sbbl
adc
fidivl
sub
inc
jecxz
ljmp
jnp
mov
out
imul
ret
add
sub
cli
les
inc
mov
aam
movsl
add
cmpl
mov
shll
aad
mov
pusha
mov
out
push
decb
jl
fsubs
jle,pn
incl
clc
mov
pop
loopne
movsb
stos
sbb
xor
popa
jmp
es
arpl
sbb
add
loopne
mov
mov
or
pop
cmp
out
dec
mov
ja
seto
insb
pop
dec
gs
int3
adc
mov
arpl
mov
dec
divb
jno
sub
mov
add
mov
xchg
movsb
mov
mov
jne
xchg
nop
aas
dec
outsl
jmp
adcb
dec
sarb
xchg
cli
jnp
cmp
mov
into
jle
ljmp
scas
push
push
inc
jp
arpl
lock
aas
add
cltd
out
pop
sub
orb
test
mov
mov
cltd
xchg
cltd
pop
fildll
cmp
and
and
test
inc
mov
cmc
mov
addr16
push
jnp
dec
lret
loop
loope
xchg
in
inc
mulb
and
mov
cmp
cmp
or
jne
jo
hlt
xor
in
sub
icebp
and
and
and
jp
fidivs
lods
mov
or
clc
sbb
inc
cmp
test
in
stos
shlb
jg
loop
jmp
inc
sub
sbb
dec
fistps
lods
sti
xor
dec
sbb
mov
push
mov
jmp
gs
icebp
push
pop
inc
cmc
addr16
mov
insb
mov
aaa
add
xchg
pop
int
bound
xchg
sub
movsl
jecxz
adc
pop
or
pushf
add
jecxz
es
or
xor
push
daa
movsb
les
stos
or
ss
jbe
adc
xchg
out
sbb
stc
cmpb
and
ljmp
sbb
push
adc
cld
jmp
or
or
int3
jns
jo
iret
push
rcll
js
mov
add
daa
mov
sub
rcrl
mov
cmpsl
je
subps
mov
xor
pop
sbb
ficompl
xor
stos
and
xor
bound
sbb
xchg
rclb
dec
sub
insl
sub
jo
mov
mov
out
mov
inc
dec
and
sarl
mov
sbb
sahf
xor
mov
hlt
dec
xchg
mov
cld
lret
aad
adc
outsb
mov
xchg
xor
outsb
mov
mov
hlt
ret
jmp
fimull
xchg
cmp
cltd
xorl
push
jmp
jne
xorb
or
lret
mov
pop
insl
inc
bound
mov
xchg
inc
push
andb
xchg
cltd
inc
outsb
jmp
jne
subl
int
out
xor
mov
je
push
adc
xor
add
push
push
shll
mov
and
mov
inc
sub
push
scas
mov
in
test
xchg
fcmovnbe
and
std
movsl
fnsave
cwtl
fstl
mov
jecxz
stos
movsl
or
repnz
fistpll
xchg
popl
jg
in
mov
jge
or
cld
dec
jne
pop
ljmp
aaa
inc
ja
out
addr16
pop
inc
in
leave
mov
inc
or
int
imul
cmp
sub
inc
jno
mov
push
push
jbe
js
jmp
jb
sbb
jp
sub
cmp
idivl
inc
dec
dec
jb
push
pop
xor
repz
cmp
dec
jb
and
loop
int3
cli
mov
stos
cmp
hlt
inc
add
enter
aaa
jo
jge
shll
lea
aaa
nop
fisubs
lahf
nop
add
xchg
setb
mov
rcl
ds
cmc
pushf
nop
inc
scas
outsl
int3
cmp
in
fstpl
sbb
xchg
cmp
pop
dec
push
push
sbb
pop
lret
cld
sti
call
das
and
fs
jmp
sbb
pop
loope
sub
mov
icebp
ret
push
xchg
stos
iret
xor
mov
loope
xor
cwtl
and
adc
ljmp
call
stos
jbe
cmc
mov
mov
sbb
mov
aam
dec
mov
dec
dec
and
jo
mov
into
in
inc
mov
addr16
cwtl
xchg
jnp
push
bound
push
dec
pop
shr
xchg
popa
push
push
test
mov
xchg
mov
mov
lahf
das
shr
xchg
push
ss
int
outsl
jmp
ljmp
imul
cmpsl
leave
fmul
inc
xchg
push
in
or
or
sbb
lret
inc
aad
aaa
cmp
pop
push
pushf
jmp
dec
adc
hlt
test
or
mov
adc
cmc
sti
mov
lcall
jne
jmp
or
cmc
loope
pusha
xchg
popf
clc
xchg
jp
pop
ss
push
adc
jmp
jae
xor
pop
add
cltd
adc
loope
pop
roll
shl
xor
pmullw
sbb
or
mov
or
in
test
or
push
inc
enter
xchg
xchg
xor
xchg
push
cmp
xchg
addr16
aaa
inc
cmp
rol
andb
cmp
test
xchg
jo
xchg
push
sub
mov
shll
shlb
aas
xor
clc
xchg
cmc
pop
call
dec
pop
ss
out
sub
iret
fiaddl
stos
loop
jl
dec
outsb
dec
push
sub
in
add
add
xchg
xchg
aad
pop
sahf
xchg
jg
inc
in
leave
add
xchg
gs
mov
lret
movsb
mov
scas
cltd
sub
pop
mov
pop
enter
ds
pusha
cmp
mov
push
and
aad
mov
push
pop
test
fs
lods
sahf
cmpsl
sub
inc
sub
inc
jbe
xchg
pop
and
push
test
mov
movzwl
add
fidivl
cltd
jae
pusha
mov
stos
mov
jo
and
cmp
mov
stc
fs
lods
les
add
aaa
sub
xchg
dec
test
xor
xchg
sub
cltd
add
fs
mov
std
mov
std
and
mov
ret
gs
cld
sbb
mov
popl
inc
pop
add
ret
pop
add
fistpl
out
lock
dec
mov
push
dec
jmp
add
jmp
inc
adc
dec
fstpl
repnz
cwtl
daa
lahf
sub
add
and
xchg
add
loope
mov
mov
repnz
xlat
icebp
inc
insl
or
push
in
add
xor
js
xchg
cltd
rclb
fs
push
push
inc
mov
out
add
bound
faddl
ss
lcall
mov
outsl
lret
sub
in
cmp
fnsetpm(287
or
data16
mov
aad
std
cmc
inc
sarl
movl
aas
dec
int3
adc
mov
loope
mov
iret
mov
aad
loope
addl
inc
push
outsl
or
test
cmc
mov
or
sar
rcl
sbb
out
jmp
in
insb
outsb
cmp
repz
pusha
bound
es
pop
shl
jmp
xor
sarb
lods
ss
setno
scas
push
pop
int
int3
stos
jp
cmp
mov
mov
jmp
bound
or
add
jg
xor
mov
lds
sub
xchg
into
push
sbb
dec
dec
ss
adc
leave
push
xor
shll
call
mov
sub
into
lea
adcl
fsubrl
mov
mov
mov
xor
jg
cmpsl
gs
or
cmovb
xchg
push
push
push
jl
out
mov
push
jmp
hlt
lock
dec
hlt
xor
into
stos
xor
jecxz
test
jno
sarl
mov
fistl
inc
fisubrs
mov
jns
daa
adc
into
hlt
mov
cli
mov
ret
shrb
mov
orl
jnp
and
out
xchg
inc
cmp
mov
mov
xchg
jl
jg
popf
mov
icebp
shlb
loopne
lahf
cmp
imul
faddl
mov
sbb
jne
dec
cmc
cmp
mov
push
inc
pop
repnz
cmpsl
insb
inc
xor
das
cmpsb
cmp
int
xor
pushl
xor
lcall
arpl
sub
sub
add
sub
push
lretw
adc
aas
jne
mov
add
sbb
inc
push
sarl
mov
fidivs
int
and
inc
prefetch
and
cmp
leave
mov
inc
in
inc
leave
test
sub
daa
stos
cld
add
in
push
scas
xor
ficomps
adc
adc
imul
std
lret
xchg
subb
xchg
jp
daa
rorl
inc
mov
dec
call
outsb
test
jl
lock
sub
adc
or
inc
ret
pop
mov
jecxz
mov
in
mov
jg
test
push
lcall
xchg
adc
cmpsb
stc
adc
jns
dec
add
push
enter
lods
faddl
enter
jns
test
sub
push
cmp
hlt
sbb
maxps
mov
iret
push
jne
mov
inc
adc
pop
sbb
data16
xchg
mov
imul
or
into
and
or
stc
aas
movsl
add
insl
stos
ret
jg
jo
jecxz
inc
sbb
cld
test
and
lods
imul
aad
pop
and
or
push
dec
adc
pop
int
lcall
sub
popf
inc
sbb
fisubrl
xor
fcoml
mov
sbb
jmp
cmp
aam
mov
je
scas
outsl
in
mov
sbb
sbbl
repnz
scas
ljmp
in
lods
dec
test
movsl
dec
inc
lret
lds
or
add
repnz
ljmp
or
stc
cld
iret
cmp
xor
ds
pop
mov
inc
test
adc
or
addr16
dec
adc
test
test
jae
or
sbb
rcrl
jb
add
adc
mov
sbb
cmp
inc
shrb
jae
aas
sbbl
repnz
dec
push
fistl
inc
xor
fildll
mov
sbb
pop
fistpll
pop
inc
rorb
inc
jno
pop
inc
imul
imull
sar
in
or
scas
xchg
imul
loope
lods
in
enter
cmp
xchg
ljmp
mov
pop
sub
xchg
fs
push
jg
dec
aas
and
mov
ret
dec
inc
jb
push
ljmp
arpl
dec
mov
inc
mov
call
sbb
cli
loope
insb
push
add
je
sub
scas
in
sub
pusha
xor
stos
push
and
lods
adcb
stos
mov
outsb
lret
shll
outsl
cmp
add
pop
popa
and
fisttps
ds
das
cmpsl
negb
mov
adc
sub
cmpl
push
lret
fstps
push
xchg
jno
dec
mov
mov
push
and
dec
bound
xchg
xor
push
jno
and
inc
stos
and
cltd
push
call
inc
loopne
cli
dec
xlat
cmc
ja
jle
imul
mov
add
mov
pop
sub
enter
xor
adcb
jl
movsb
int
inc
fistps
jmp
and
xor
iret
movl
sahf
mov
mov
stos
fimull
out
ds
and
std
loope
das
cld
gs
xor
jne
pop
xchg
xor
push
dec
inc
daa
inc
push
push
sub
mov
xor
mov
cltd
pop
or
jae
arpl
lahf
xchg
fbld
mov
sbb
adc
adc
adc
jle
cld
adc
add
jecxz
shlb
jne
dec
lret
mov
mov
out
cwtl
movsl
pusha
jno
cmovb
clc
push
push
insl
push
adc
ds
nop
cltd
das
sub
xchg
cltd
xchg
xchg
call
aam
adc
pop
push
xor
mov
inc
adcb
push
nop
data16
pop
pusha
pop
imul
jbe
mov
xor
xor
int
dec
inc
arpl
and
add
scas
ret
push
lods
or
jns
stos
pop
loopne
inc
add
sub
pop
rorb
cmp
mov
pop
sarb
dec
ffreep
cmp
flds
in
shrb
lds
jle
lahf
rorl
xchg
addl
ds
std
or
in
sahf
cmp
sbb
and
fs
and
push
out
adc
movsl
jns
sbb
out
je
in
loop
fadds
inc
popa
shll
int
add
mov
mov
inc
inc
negb
lahf
sbb
and
mov
addr16
ror
pop
loope
mov
mov
mov
xor
add
push
push
in
fsub
push
pop
mov
lock
into
cmc
sbb
pop
addr16
aas
rcr
mov
cmp
aas
add
sahf
pop
push
sub
cmp
sbb
mov
xchg
cmp
popf
gs
mov
lahf
inc
jne
movsl
test
scas
inc
jecxz
loope
jbe
iret
sub
das
test
test
push
in
out
andl
cld
jl
fsts
sub
adcl
mov
imul
cwtl
mov
les
and
inc
in
lcall
imul
dec
and
or
mov
lcall
mov
pop
pop
sbbl
or
aam
xchg
aaa
push
popa
pushf
adc
je
lods
pop
movsl
into
jmp
pushw
pop
push
nop
dec
add
dec
in
inc
sbb
int
xchg
fidivrl
mov
xlat
rcrl
dec
mov
out
sub
cmp
adc
sbb
inc
jno
add
ret
jno
ss
or
mov
sbbb
stc
push
clc
push
push
fxtract
test
dec
or
cmpsb
addr16
inc
dec
inc
scas
jle
ficoml
mov
out
xchg
or
push
fs
pop
lods
dec
jo
ret
inc
ss
mov
mov
lods
insl
fisubs
inc
push
daa
pop
mov
inc
scas
dec
pop
imul
popf
int
movsb
push
pop
and
sbb
enter
insl
nop
pavgb
pop
inc
fwait
hlt
jno
insb
insl
push
jecxz
jge
stos
xchg
mov
push
adc
cs
xor
test
fs
std
hlt
or
icebp
cmp
out
cwtl
aam
lods
cmp
mov
mov
pop
push
shll
mov
or
enter
mov
dec
mov
jmp
ja
repnz
inc
movsl
popa
repnz
push
shlb
xchg
cmp
ss
adc
faddl
adc
jns
and
cli
and
jne
add
fdivrs
inc
and
pop
in
add
and
in
lds
push
pop
rolb
in
outsl
cmc
aad
pop
fidivrs
xlat
add
out
dec
out
repnz
jge
in
or
mov
mov
aaa
adcl
insl
mov
mov
pop
xchg
movb
aaa
jns
mov
int3
js
addb
insl
sbb
inc
subl
inc
jmp
jecxz
jecxz
call
and
add
in
pop
mov
push
imul
sub
xchg
or
adc
cmpsb
mov
fdivrs
mov
push
mov
sub
stos
mov
int3
notb
cli
jp
adc
push
pop
mov
ja
stc
sbb
push
arpl
inc
and
insb
add
cmpsb
mov
push
cmp
jbe
dec
mov
test
push
int
push
dec
icebp
jb
enter
adc
outsl
mov
bound
imul
hlt
out
push
lock
dec
cs
lds
loop
mov
je
push
aad
in
sub
add
subb
add
mov
cli
xor
cld
add
dec
jb
inc
jnp
clc
pop
adc
iret
cmp
and
inc
dec
xor
lock
fs
ret
negb
cmp
dec
push
pop
push
and
inc
fwait
out
jmp
fcoml
repnz
test
xchg
and
mov
jo
in
jbe
or
sbb
xchg
aaa
and
sub
cltd
mov
in
mov
int
rcl
xor
push
aam
cltd
pop
lret
cwtl
stos
hlt
mov
or
mov
loopne
mov
fwait
out
mov
or
jns
daa
fldl
adc
lods
dec
stos
adc
fcmove
in
sbb
cmp
mov
push
aad
bnd
inc
xchg
sbb
jg
mov
xchg
xor
ret
mov
rolb
push
cli
pusha
std
pop
aad
cmpsb
rep
inc
mov
and
je
xchg
sub
lahf
pop
cmp
aad
gs
pushf
ror
inc
sbb
ret
cmpsl
adc
mov
mov
andb
pop
pop
repz
addb
es
adc
cmp
xor
xchg
mov
jecxz
cmpsl
and
popa
insb
popf
add
xchg
or
in
xor
adc
adc
gs
stc
adcb
jae
in
inc
inc
sub
and
push
dec
or
add
subb
ret
imul
lcall
negb
xor
ja
pop
push
jmp
outsb
adc
sub
cmc
adc
mov
test
add
xchg
dec
sub
xor
cltd
adc
fdivs
lock
cltd
jl
negl
ret
sarb
jge
sub
mov
lret
jge
sub
pop
adc
mov
xchg
popf
push
push
pop
push
xchg
fdivrl
fistpl
mov
gs
outsl
or
fimull
and
iret
lcall
in
add
push
inc
lret
sub
dec
iret
out
adc
sbb
mov
sub
loope
lods
je
push
stos
mov
dec
js
adc
mov
out
adc
pop
into
jns
test
scas
pop
sarb
xchg
inc
leave
cltd
cmpsl
lcall
es
xchg
dec
inc
sbb
shlb
je
ror
push
adc
sub
bts
xchg
cmc
push
test
cmp
ret
insl
daa
jl
xchg
popf
push
inc
hlt
cli
inc
cs
xor
jbe
push
push
mov
leave
sahf
outsl
fnstcw
adc
add
jbe
jge
fwait
rcll
icebp
jg
sahf
popa
cmp
outsb
mov
adc
sub
imul
aam
jmp
add
adc
sbb
aaa
cli
mov
fsubs
mov
inc
pop
shll
add
lods
and
sbb
aad
cmp
mov
push
dec
or
mov
ss
lret
xchg
out
bound
cmpsb
mov
adc
sahf
stos
mov
shll
sub
mov
cmp
adc
jbe
xchg
inc
fcomi
out
test
repnz
sbb
dec
mov
pushl
ret
jle
pop
jg
add
shl
sbb
dec
inc
adc
inc
push
dec
add
xor
movsb
fwait
pop
in
and
lret
pop
popa
xor
ljmp
mov
adc
and
dec
cli
mov
add
cmp
mov
fsubrl
sbb
fistps
movsb
pusha
jbe
rclb
push
push
mov
xlat
jno
into
in
and
sbb
dec
push
lahf
shlb
mov
xchg
add
lds
ret
insl
mov
mov
pushf
add
es
lret
jae
and
outsl
or
push
xchg
add
xor
pop
inc
and
insl
ret
fcmovnu
lea
add
testb
sbb
iret
push
sti
dec
or
ja
leave
and
cltd
dec
jae
jmp
hlt
xor
sub
mov
or
adc
pop
sub
dec
jno
cld
movsb
jmp
push
inc
scas
movsb
insl
popl
leave
sbb
mov
sub
leave
mov
mov
out
inc
or
xchg
inc
imul
loop
xor
pop
mov
lods
inc
sbb
push
add
xor
add
aaa
xor
subb
inc
xor
cmc
outsl
out
pushl
inc
or
cmp
roll
rcrb
aaa
ds
fwait
dec
pop
arpl
and
dec
xor
add
inc
and
test
dec
out
sbb
imul
lcall
out
icebp
loop
mov
mov
xchg
cmp
pop
sub
jmp
add
shrl
lods
adc
adc
loopne
lahf
hlt
pop
fdiv
cmp
bound
or
pusha
adc
lods
jmp
sahf
scas
inc
mov
mov
dec
adc
sbb
mov
inc
dec
ss
pusha
test
pop
or
mov
pop
cwtl
push
stos
pushf
loopne
pushf
push
shrl
stos
shlb
cli
mov
pushf
inc
fdivrl
stos
mov
out
aas
and
in
cmp
inc
loop
xor
rcr
adc
push
mov
xchg
out
mov
popf
repnz
addr16
ljmp
mov
jb
scas
les
jge
or
shl
ja
sbb
adc
int
ret
mov
loopne
dec
lock
jb
xchg
test
rclb
ret
xchg
dec
sbb
jmp
fidivl
sbb
shlb
ret
cli
test
fisttpl
jmp
lret
ja
or
adcb
movsl
fsub
cs
repz
xchg
mov
push
cmp
in
cmpsl
add
mov
xor
pop
lcall
mov
mov
stos
stos
inc
ficoms
push
adc
pop
stos
pusha
pop
enter
imul
jl
sbb
cmp
xor
jb
mov
pop
cmpsl
xor
mov
push
hlt
ss
mov
fsubs
lret
xlat
mov
xor
pop
popa
adc
mov
fists
push
mov
cmp
aaa
mov
mov
push
mov
shl
jge
sahf
inc
int
mov
mov
shlb
sti
fs
movsl
ret
shll
xchg
and
add
sub
sbb
sbb
lock
jo
pop
push
or
pop
cs
inc
pop
stos
mov
push
lret
mov
repz
jns
sbb
nop
jb
sbb
mov
push
leave
movb
sbb
cwtl
mov
popf
push
cmp
jns
push
jne
movsl
mov
jl
mov
outsb
xchg
cmpsl
and
fbld
cmp
cmp
ficoms
loop
insb
xor
fdivrl
push
cltd
dec
mov
sahf
mov
add
xor
loop
pop
icebp
std
out
ds
mov
cmpsb
inc
xchg
adcl
xlat
mov
ljmp
xchg
nop
adc
mov
imul
loop
cmp
in
dec
mov
imul
inc
mov
or
sti
cwtl
xchg
mov
ret
dec
and
xchg
add
popf
out
lock
gs
fldcw
xchg
mov
out
xchg
and
stos
ss
cld
and
mov
lcall
pop
icebp
add
gs
cmc
pop
incl
call
mov
outsb
dec
dec
add
dec
imul
pop
xchg
aad
in
lcall
shl
pushf
jb
aam
push
or
out
lret
and
es
mov
push
popf
stos
in
mov
mov
jbe
sbb
cmp
and
sub
out
shl
jmp
nop
mov
mov
dec
subb
cmp
lock
pop
adc
cltd
or
mov
cltd
jl
adc
sbb
fdivrs
popf
repnz
mov
sbb
incb
pop
ja
cmp
mov
and
mov
rclb
test
cld
adc
mov
scas
and
movsb
pop
pop
movsb
sbb
pop
call
movb
idiv
aad
call
imul
pop
pop
fsubrl
cmp
adc
sbbb
push
jmp
xor
inc
push
rcrb
int3
push
jo
movsb
test
and
imul
adc
fldt
sub
xorb
push
xor
sub
mov
cltd
pop
fnstsw
dec
aam
add
insb
sti
repz
mov
push
loope
mov
rol
sub
fsub
out
sbb
pop
fs
icebp
sbb
mov
pushf
push
jne
mov
pop
inc
pop
ss
adc
add
and
push
fwait
cmpsb
test
sbb
arpl
pop
mov
divl
inc
dec
mov
sub
cli
arpl
xor
lds
jg
xlat
inc
mov
cmp
lahf
pop
andb
push
ds
bound
cmp
sahf
push
out
add
in
outsb
ljmp
and
or
aas
xchg
and
js
xchg
add
inc
into
jno
dec
pushf
mov
pop
pop
popa
icebp
mov
in
mov
js
and
ljmp
add
popl
xchg
loopne
aam
mov
adc
out
push
pop
dec
gs
mov
aad
dec
insl
fisubl
mov
fists
sahf
jg
ds
xor
ficoms
sub
and
xor
jae
dec
nop
xchg
out
sbb
std
lds
scas
ja
scas
dec
add
and
push
mul
or
lcall
rcrl
add
int
scas
clc
mov
inc
jns
jne
and
jbe
icebp
lret
xor
dec
ss
cmpsl
dec
xchg
xorb
cmpsb
xlat
push
sub
inc
cli
test
js
dec
sub
cli
push
ss
stos
pop
jo
mov
fsubs
inc
aam
adc
lods
out
jb
movsb
lods
or
cmpb
roll
out
pop
mov
mov
lcall
pop
movsl
xlat
xlat
jbe
in
ljmp
and
clc
adc
sub
lods
pusha
add
xlat
pop
cmp
fmull
inc
mov
fcomi
out
inc
ret
lock
lret
sbb
rcr
fucomi
shlb
imul
sub
fcoms
out
dec
sub
fstpt
mov
sub
pop
iret
jb
xchg
sub
enter
notl
push
jb
mov
mov
inc
mov
jge
sub
mov
stos
dec
nop
xchg
iret
xchg
shll
xchg
jno
sti
cs
sub
orl
xchg
xchg
lea
addl
addl
stc
sbb
stos
movsl
test
shrl
dec
push
shrl
xchg
and
xchg
test
ljmp
inc
pop
ss
push
shlb
test
jp
xchg
test
fdiv
xchg
enter
sub
outsb
imul
mov
fsubrl
das
movsb
pop
push
add
push
out
fwait
and
stc
push
mov
out
sub
rorl
inc
bound
cmp
cmpsb
adc
lock
sub
add
xlat
iret
and
pop
xchg
lahf
stos
out
cmp
push
jg
inc
fwait
cmpsl
sbb
testb
lea
xchg
xchg
test
mov
stos
hlt
imul
arpl
or
lcall
jg
lock
stos
lods
sbb
lahf
dec
dec
xlat
imul
iret
xor
jg
ret
andb
jo
adc
rcll
and
test
movsb
sbb
mov
add
push
subb
idivl
or
js
lahf
sti
xor
jne
sbb
mov
sub
xorl
mov
cmpsl
addr16
xchg
sub
aad
outsb
and
inc
adc
xor
aaa
enter
out
and
and
je
dec
lock
fistpll
xor
test
sub
ret
loopne
add
lds
testl
fwait
lds
inc
andb
lahf
lret
rcl
mov
fs
push
cmp
cwtl
call
add
lds
hlt
sbb
or
lods
repnz
pop
sbb
and
fstpt
in
sub
inc
fs
les
shll
cmp
and
fcmovnb
pushf
icebp
pop
jmp
jo
adc
insb
or
xchg
mov
jae
inc
test
xchg
adc
jmp
jne
ljmp
lea
pop
sub
pop
and
inc
xchg
out
or
out
xchg
cmp
jne
fisttpll
std
sub
add
add
inc
lahf
jno
rorb
mov
test
cmp
out
or
lret
jge
das
mov
cwtl
in
add
adc
and
cwtl
iret
jmp
out
hlt
xor
and
sub
dec
cld
xchg
stos
cmp
jl
add
mov
add
aam
lret
adc
xchg
dec
jns
movsl
push
mov
mov
std
adc
or
dec
hlt
mov
call
add
mov
xor
pop
mov
mov
xor
imul
js
and
xchg
aaa
push
shr
cli
hlt
ss
push
test
je
sbb
cmp
jp
push
push
fnstenv
aad
mov
outsb
dec
call
or
scas
lret
and
movsb
hlt
aad
shlb
sbb
sbb
push
addr16
sbb
sbb
fxch
dec
cwtl
and
popa
shlb
dec
scas
dec
ffreep
add
xchg
cmc
aaa
mov
cmp
xor
mov
inc
sti
insl
push
dec
or
pop
cltd
or
cmpsl
imul
mov
dec
inc
nop
adc
xchg
inc
inc
fs
arpl
xchg
jno
mov
and
aad
pushf
les
daa
mov
aas
sbb
ljmp
fs
int
jns
mov
push
push
pop
repz
pop
outsl
dec
mov
outsl
add
out
mov
pop
nop
test
pop
pop
jo
push
das
jo
notl
pop
dec
jle
xor
js
or
add
mov
xor
inc
xchg
mov
std
ljmp
xor
mov
mov
lret
inc
lods
push
xchg
mov
pop
hlt
adc
dec
sbb
addr16
popf
xorb
pop
mov
loope
ljmp
je
pop
js
imul
outsl
push
adc
adc
pusha
shl
imul
fwait
les
cld
rol
imul
sbb
or
pop
jno
inc
push
lea
gs
jo
sbb
push
add
rcrl
out
jle
imul
cs
xor
push
push
addr16
lds
insl
fwait
cmc
push
arpl
mov
lret
pop
das
clc
mov
jecxz
testb
inc
push
icebp
or
mov
push
mov
xchg
andb
pop
and
xorl
inc
aam
ljmp
xchg
movsl
or
push
clc
jae
mov
rorl
mov
cmp
ret
xchg
js
xor
mov
mov
xchg
cmpsl
cmp
adc
rorb
push
xchg
repz
inc
sub
imul
cmp
add
aaa
call
gs
sub
clc
xor
adc
aam
mov
gs
mov
xchg
imul
push
dec
jmp
ss
sub
jecxz
sub
mov
out
cmp
pop
push
jecxz
xor
movsl
cmp
rcr
imul
xchg
cmp
insl
mov
mov
mov
pop
fmull
out
pop
jbe
aad
xchg
dec
mov
pop
fisttpll
pop
cli
xor
sarb
int3
rorl
sub
into
cs
pop
adc
dec
and
pop
cmc
add
mov
mov
pop
fmul
icebp
xchg
mov
mov
rcl
sbb
mov
push
add
mov
hlt
adc
dec
scas
sub
mov
jmp
or
scas
lret
ret
add
subl
dec
dec
jbe
les
dec
lods
fs
inc
add
jge
in
pop
stos
stos
andb
sub
mov
inc
jl
lea
pop
aam
or
jo
and
fwait
or
test
repz
sub
mov
pop
inc
loope
xchg
push
cmp
pop
pop
nop
jnp
add
push
pop
or
add
movsl
pop
sub
inc
pop
add
mov
pop
lods
push
jns
out
std
push
adc
icebp
push
in
loopne
ss
push
dec
test
jae
out
ja
cld
out
shll
das
data16
push
outsb
in
push
lea
add
dec
adc
dec
fstl
dec
mov
sub
inc
loopne
loopne
out
or
and
arpl
cltd
ss
jmp
shll
cmp
push
jle
pop
sub
dec
dec
fcoml
xchg
mov
dec
loopne
arpl
nop
inc
jae
jle
push
leave
ss
jb
xchg
call
data16
loope
daa
jae
sbb
test
push
aaa
mov
test
cmpl
dec
ljmp
fildll
movsb
test
mov
fcoml
pushf
push
loop
loop
xor
es
mov
dec
fwait
aam
out
fsubs
jae
inc
pusha
push
addr16
loope,pn
lahf
pop
push
ret
sbb
mov
xchg
sbb
bound
and
cmp
rolb
or
fiaddl
stc
jne
mov
pop
imul
and
pop
dec
imul
repnz
inc
mov
sti
mov
rol
mov
addr16
inc
xchg
add
jmp
mov
cs
push
dec
movsb
mov
insl
sbb
jmp
and
dec
mov
xlat
fstl
pop
xlat
and
loop
loop
cmpsl
pop
lds
mov
insl
out
xlat
add
lret
and
enter
stc
pop
inc
push
pop
clc
outsb
clc
sub
push
mov
pop
push
jo
in
pop
cmpl
mov
mov
daa
and
pop
push
sbb
scas
or
adc
adc
mov
imul
imul
sub
inc
psllw
movsb
dec
ret
dec
pop
add
cld
fs
fisttpl
push
inc
movsl
mov
push
lret
mov
dec
push
cmp
cmpsb
sahf
jmp
push
push
jb
pop
adc
into
je
cs
adc
test
out
jae
jmp
cmpsb
mov
xor
lret
addr16
adc
pop
cmp
cmp
clc
cmc
out
dec
add
mov
jne
or
loopne
ss
fst
xlat
push
rclb
in
imul
and
into
xchg
fcomi
imul
les
cli
test
out
lock
xor
cmpsl
sbb
inc
pushf
sbb
mov
insb
fstps
and
pop
mov
sub
negl
pop
fbstp
add
xor
pop
fcmovne
sbb
mov
mov
cmpsl
fbld
xor
aam
and
lcall
jne
inc
mov
push
xchg
sbb
roll
mov
push
cli
jne
push
mov
dec
pop
test
pop
out
cmc
pushf
aam
mov
cltd
fisubrs
fmuls
inc
jmp
jmp
loop
stos
scas
xchg
xor
inc
lods
std
test
aaa
jmp
and
fmul
sub
xchg
call
js
loopne
xor
popa
lahf
or
jp
dec
std
aaa
jbe
lods
pop
lock
out
cmp
push
xchg
adc
or
fadds
jnp
fsts
pushf
test
cli
lcall
arpl
add
dec
xor
xchg
fs
mov
jle
pop
outsb
and
mov
sbb
addr16
mov
mov
fneni(8087
and
mov
mov
push
mov
dec
xchg
lret
fsubr
jnp
adc
inc
and
loop
in
inc
push
ljmp
push
in
lds
push
xor
push
push
dec
and
and
jno
jmp
and
daa
xchg
mov
mov
xlat
lea
pusha
xchg
loopne
ret
mov
and
mov
fistpl
cmp
mov
and
loop
shlb
es
cmp
push
jne
pop
pop
repz
and
test
in
inc
lret
fldenv
test
rol
dec
outsb
mov
dec
xchg
dec
ljmp
and
push
push
int3
adc
dec
in
rorl
loopne
sub
cmp
push
and
sub
xchg
addb
inc
or
int3
mov
fwait
pop
jg
sub
sti
sub
into
and
iret
mull
xchg
or
xor
push
add
cmp
call
aam
pop
clc
notl
and
jo
popa
sub
mov
call
mov
adc
pop
leave
jb
ja
fmull
int3
ret
imul
jnp
test
sarl
xchg
jb
sub
cmp
cmpsb
imul
sbb
test
adc
test
adc
jmp
mov
dec
stos
roll
push
xchg
adc
les
fsubs
sbb
or
sub
and
out
pop
ds
pop
mov
pop
test
push
pop
xor
stos
loope
push
shrb
rorb
test
out
mov
sub
sub
lods
lcall
jb
push
sar
xchg
inc
pop
lock
push
or
sbb
mov
xchg
adc
lods
push
jns
inc
decl
into
popa
cmpsb
adc
xchg
fucomp
shrb
adc
push
cmp
push
mov
aas
cltd
inc
sti
insl
mov
pop
cld
dec
hlt
xor
dec
inc
push
imull
jo
mov
lock
mov
lcall
aaa
pop
add
mov
adc
pop
pusha
das
push
mov
roll
push
cmpl
adcb
gs
lret
xchg
enter
jge
and
mov
stos
ljmp
xorb
jge
xor
xchg
inc
iret
dec
pop
cmp
fucomi
push
and
fcomps
inc
adc
sub
gs
cmp
mulb
stos
lea
fistpll
setns
aam
fisubs
dec
push
fmuls
pop
stos
adc
sub
push
rcrb
inc
and
mov
or
sbb
cmc
push
and
rolb
push
mov
push
insb
xor
dec
pop
mov
fisttpll
xor
add
ja
add
adc
mov
roll
xchg
cwtl
outsl
dec
test
mov
test
inc
mov
mov
cli
addb
jno
lret
ficompl
addb
imul
in
or
loop
cs
push
lods
insl
and
pop
adc
sahf
mov
sbb
pop
leave
jo
test
jmp
adc
push
jmp
mov
sti
inc
mov
jp
push
sti
lret
add
pop
imul
xchg
in
in
es
sub
in
aad
jo
scas
loopne
rcrl
addr16
xchg
cltd
add
inc
imul
add
push
and
bound
les
loopne
out
nop
push
mov
lods
lret
xor
inc
idiv
or
adc
std
push
in
adc
lahf
faddp
xor
add
mov
mov
dec
sbb
gs
sub
into
add
or
dec
add
mov
out
adc
mov
dec
arpl
repnz
lea
aaa
push
add
pop
xchg
push
jne
int
cmp
xlat
add
mov
repz
pushf
xchg
cwtl
loop
xchg
fisubs
mov
ffree
repz
dec
dec
repnz
je
push
lret
imul
aaa
jno
push
fcmovb
push
add
xor
pop
shrb
ja
out
jo
inc
pop
mov
ss
daa
xor
add
add
mov
ljmp
jmp
sbbl
push
fucomp
incb
sub
test
mov
cmc
sbb
sub
and
push
or
pop
xor
sarl
add
xchg
pusha
sarl
sbb
cmp
mov
mov
jl
pop
push
aaa
cmc
dec
fcomp
das
and
ret
hlt
xor
xchg
sbb
mov
mov
add
push
lret
ret
mov
or
repnz
icebp
movsl
xchg
and
sti
gs
loopne
fdivl
mov
adc
rclb
cmp
push
dec
aaa
outsb
jecxz
sub
push
repz
mov
ja
rclb
push
sub
pop
int
iret
out
fisubrl
adc
mov
stc
jbe
ret
push
xchg
mov
fimull
ret
cs
mov
cmpsl
mov
movsb
or
iret
mov
pop
hlt
push
gs
sub
outsl
pop
lea
sub
xor
lea
mov
jo
neg
mov
int
ljmp
notb
xchg
fwait
imul
subb
sub
and
sbb
dec
mov
iret
in
mov
dec
fdiv
lcall
ljmp
movl
jb
xchg
push
cld
or
shrb
test
inc
mov
mov
mov
xchg
and
or
and
orb
push
sbb
fwait
xor
mov
adc
notb
out
sbbb
jecxz
rcrb
jo
out
gs
std
mov
jo
and
fcom
pop
push
push
mov
push
xchg
clc
dec
or
test
icebp
pop
cwtl
and
jecxz
add
enter
pop
repz
int
cmp
scas
and
and
cld
push
xchg
cmp
push
mov
cmp
iret
arpl
jge
mov
fidivl
mov
or
das
mov
or
cwtl
xlat
mov
scas
push
push
mov
pop
ret
jns
lock
addr16
mov
loope
stos
ficomps
xor
xor
mov
notl
jns
xchg
repnz
pop
jne
adc
nop
fldcw
hlt
push
sbb
and
lret
ja
cmpl
ljmp
repnz
xor
sub
jbe
arpl
mov
add
cmp
add
cmpsb
inc
cwtl
sub
xchg
jb
mov
popa
mov
iret
mov
mov
icebp
imul
cmp
mov
pusha
ja
inc
inc
loopne
enter
push
mov
adc
je
test
popa
fnstsw
mov
dec
sbb
les
fwait
sbb
into
mov
data16
or
movsl
sbb
sbb
cmp
push
xchg
ficomps
in
cmp
ds
push
aas
push
fists
lret
faddp
inc
and
jae
out
dec
test
push
dec
call
and
lods
and
mov
not
xchg
sub
js
pop
sub
in
xchg
sub
lods
push
inc
aam
fs
test
xlat
ficomps
insb
jecxz
inc
aam
nop
repz
cmp
cmpsl
pop
jl
repz
pop
icebp
lods
cltd
and
pop
mov
add
lahf
xor
lahf
push
ret
mov
pop
mov
cld
inc
jnp
sub
mov
jo
sub
dec
add
fs
scas
sbb
cmc
hlt
fstps
mov
rorl
jmp
add
sti
jb
sbb
negb
daa
cmp
add
fsubs
add
jecxz
stos
stos
decl
xchg
jae
mov
sti
out
mov
adc
xlat
adc
push
inc
insb
sub
adc
subb
movsb
movsb
sub
xchg
mov
lds
leave
adc
cli
sbb
pop
mov
lret
rcll
or
insb
push
scas
mov
icebp
xchg
movsl
stc
dec
inc
pop
test
shrl
pop
nop
sub
testb
inc
cmp
mov
rolb
xchg
sti
mov
andl
pushf
jp
inc
aam
inc
push
mov
pop
ret
out
test
adc
adc
push
ret
cmp
sti
cs
rolb
mov
adc
std
push
inc
adc
daa
test
call
imul
fs
adc
arpl
arpl
jne
lods
xor
ret
mov
sub
cmp
popf
fists
ret
inc
jae
hlt
scas
and
fisubl
and
scas
or
test
jb
into
fcoml
movsl
daa
cmp
inc
mulb
hlt
jb
inc
mov
mov
arpl
filds
add
sbb
push
mov
aad
je
test
xor
rcrl
int
push
popa
inc
adc
xchg
test
leave
or
cvtps2pi
xchg
or
ss
leave
or
jp
shl
sub
and
adc
mov
loop
lods
insl
shlb
pop
jle
hlt
lea
sub
push
lret
push
pop
scas
sub
cltd
cmpsl
push
in
jg
lods
pop
mov
in
mov
add
mov
jns
push
dec
lock
push
push
test
sbb
stos
notl
sub
sbb
adc
bound
xor
add
xchg
popa
cli
arpl
mov
pop
adc
sub
adc
pushf
les
mov
pop
jmp
sarb
pusha
mov
int
inc
dec
pop
ficomps
mov
pop
mov
cli
xchg
xchg
ficoml
dec
loopne
xor
lcall
out
mov
add
lret
push
mov
stc
lods
shlb
sbb
or
fcmove
or
into
add
jo
inc
sbb
add
adc
sbb
inc
jmp
insb
xchg
lret
add
and
jo
pop
cld
jb
dec
push
sti
cmpb
ror
cli
iret
scas
pop
scas
popa
push
pop
cmp
mov
divl
aad
stc
cmpsb
fildll
sub
pop
clc
pop
cmp
inc
scas
sbb
roll
inc
jg
xlat
adc
or
outsl
sbb
das
out
fs
jmp
jp
addl
in
push
mov
out
inc
bound
adcl
adcl
out
fisttps
popf
and
push
jp
jg
ret
pushl
inc
mov
push
inc
cmc
jns
es
popa
sbb
lret
orl
gs
out
mov
mov
nop
aad
xor
pop
aam
adc
rcrl
cmp
movsl
icebp
jbe
jp
push
hlt
pusha
and
gs
cli
lds
mov
int3
mov
jge
inc
dec
divl
lret
push
call
push
stc
daa
sbb
cmpb
adc
xlat
ret
aaa
add
hlt
icebp
mov
sub
sub
imull
mov
fwait
clc
notb
pop
mov
add
sub
in
loop
cmp
loope
repz
pop
gs
lahf
add
out
jle
jnp
test
inc
sub
pop
jge
mov
cmp
jle
aam
inc
subb
lods
inc
sbb
pop
cs
or
mov
inc
pop
out
mov
in
repnz
rcrb
jnp
sahf
lret
mov
push
xor
adc
xchg
push
int
test
std
or
mov
decb
call
xchg
or
cmp
ja
xchg
cltd
and
cmp
jp
xor
mov
push
clc
je
js
fistl
xchg
and
inc
iret
in
test
inc
sub
stc
inc
mov
mov
lahf
imul
ret
fnstsw
es
call
bound
in
scas
out
xor
call
jns
adc
aas
inc
mov
mov
nop
lret
or
inc
mov
cmp
xchg
incb
add
dec
cmp
shll
repz
sub
add
mov
shrl
dec
mov
neg
jno
in
rolb
cmpsl
push
movsl
sub
ljmp
data16
fistpl
roll
out
add
mov
xlat
dec
push
sbb
push
sbb
sub
add
pop
xchg
mov
cli
xorb
inc
mov
sbb
es
xor
jne
mov
or
or
jb
xor
push
jo
xchg
cmp
xor
in
cmpb
shll
stos
stos
ret
mulb
sbb
ret
scas
hlt
std
push
jmp
or
push
sbb
in
orl
or
lcall
and
adc
popa
dec
xchg
jge
sbb
lods
cmp
andl
popa
shrb
sbb
imul
fbld
loope
jbe
adcl
xchg
lret
mov
jns
mov
ss
xchg
push
jae
shll
add
scas
xchg
jns
sbb
pop
mov
jle
push
xchg
sbb
add
mov
das
cltd
xchg
test
fists
repnz
mov
lods
adc
inc
cmpsb
sbb
test
or
push
sahf
mov
imul
lret
push
xchg
mov
les
js
shlb
stos
outsl
inc
aas
lock
jbe
xchg
cmpsl
mov
nop
add
mov
and
lods
xchg
decb
popa
divb
pusha
fcompl
add
sub
pop
jl
xchg
pop
out
popa
jbe
rorb
cs
leave
out
push
xchg
add
addb
test
cmp
aaa
out
in
aad
cmp
mov
aad
or
or
into
mov
out
inc
insl
int3
inc
ss
popa
cli
leave
movsl
add
xchg
daa
in
sarb
ret
fs
test
push
jecxz
xchg
lds
out
fs
push
das
push
inc
cld
dec
ret
xchg
out
xor
sbb
jns
mov
int
push
inc
test
aad
cwtl
fistpl
adc
fcomip
insl
mov
dec
inc
push
and
jecxz
push
leave
in
sub
pop
push
pop
push
mov
movb
scas
xchg
jle
inc
popa
sbb
jg
mov
cld
jo
loope
jg
dec
fistps
test
pop
popa
fs
jbe
test
aaa
sbb
jecxz
xchg
testb
mov
in
xchg
sahf
ret
pop
test
test
inc
push
adc
jecxz
mov
test
xchg
roll
and
lods
dec
dec
rclb
test
cmc
cmpb
mov
push
out
cld
sti
int
mov
clc
stos
imul
lret
xchg
cltd
iret
xchg
sbb
fidivrl
pop
mov
addl
adc
mov
enter
inc
insl
xor
sbb
mov
xrelease
icebp
rclb
pop
imul
mov
inc
mov
xchg
movsb
or
pop
cmp
pusha
mov
fs
sbb
rcr
cmpl
adc
xor
repz
add
das
mov
xor
adc
sbb
or
inc
stos
jno
mov
cld
je
cmp
loopne
in
aas
sub
and
cmpsl
and
mov
mov
pusha
and
imul
fwait
xor
aam
dec
in
jecxz
sub
lcall
in
mov
stos
stos
aas
out
notl
imul
ret
add
and
mov
adc
ret
fs
sub
adc
lock
jl
orb
jmp
fnstenv
pop
sub
or
jge
imul
stos
sbb
push
sbb
jl
inc
scas
and
xchg
lret
dec
dec
or
pop
push
add
jp
je
push
out
mov
sbb
push
popw
je
push
push
push
mov
scas
in
xchg
mov
into
mov
dec
sub
mov
jge
adc
mov
icebp
and
and
sbb
nop
testl
scas
int3
push
xchg
xor
add
cmp
inc
inc
stos
js
and
int
mov
push
jns
call
pop
out
pop
das
pop
loopne
push
inc
push
jb
aaa
std
cld
ljmp
cmp
cmpsb
pop
out
fmul
and
jp
aas
adc
arpl
mov
cli
popa
inc
stos
lods
cld
leave
mov
push
andb
sar
bound
call
and
shll
rcr
in
mov
out
adc
subb
push
data16
xlat
jmp
cwtl
push
adc
cmp
rcl
push
aad
mov
mov
mov
add
cmp
fndisi(8087
dec
adc
js
jae
xchg
jne
inc
insb
mov
aas
xor
call
jae
mov
pop
sub
fisubrl
pop
arpl
xor
cld
fldcw
adc
mov
addr16
inc
push
clc
adc
test
xchg
jbe
adc
and
push
int
out
test
jb
enter
jae
repz
push
mov
fcmovne
or
push
cli
jno
outsl
loop
push
add
push
std
mov
inc
aaa
push
cmp
orl
sahf
pop
pop
pop
das
inc
mov
loop
inc
push
sti
iret
cmc
lcall
inc
or
stos
mov
xor
xlat
xchg
cmp
hlt
xor
jge
cmc
lret
jns
xor
rclb
in
push
ja
pop
mov
inc
in
bound
cmp
pop
or
es
push
inc
mov
lret
fiadds
mov
dec
pop
hlt
push
enter
add
fsubrs
popa
adc
imul
xor
and
mov
gs
push
test
push
mov
mov
inc
clc
push
pop
lock
dec
xchg
inc
scas
xor
call
icebp
push
xor
mov
rclb
ficomps
lret
and
enter
xchg
sarl
mov
mov
and
xchg
fcoms
adc
into
push
mov
sub
xor
cmp
popf
sub
rcll
jle
sub
pop
add
mov
in
push
mov
stos
push
shlb
inc
ret
and
leave
push
xor
shrb
push
add
jmp
adc
xchg
mov
jno
mov
mov
push
and
jbe
arpl
decb
push
scas
mov
hlt
cmp
xchg
sar
or
lds
shrl
in
add
add
xchg
cmpsb
push
arpl
mov
inc
jg
cmp
rcrb
mov
fdivl
rcrb
movsb
imul
loopne
out
mov
and
jnp
roll
sub
pushf
out
mov
fwait
pop
mov
add
xor
inc
flds
pop
or
mov
movsl
lods
mov
mov
fs
push
fidivl
loope
mov
xchg
xor
add
lret
mov
inc
fldl2t
scas
movsl
dec
push
jns
sbb
pop
sub
rorb
out
xchg
add
push
jmp
adc
int3
mov
push
jle
scas
sar
push
lret
mov
jle
loopne
pop
stos
lret
jnp
rcll
mov
sub
dec
pop
lret
mov
les
popa
scas
add
stos
dec
cmp
mov
xchg
cwtl
fcmovne
add
sub
lds
add
out
jecxz
gs
stos
push
cld
xchg
dec
mov
movsl
subl
inc
pop
jne
pop
add
mov
mov
pop
outsl
in
leave
dec
inc
call
jno
test
and
sti
or
cmp
jns
sub
mov
cmp
rcrb
jne
mov
es
inc
stc
stos
outsl
pop
dec
mov
gs
push
nop
mov
fadds
sub
std
push
jno
shr
std
lea
xor
popf
lods
mov
gs
jb
pop
call
push
ret
and
pop
mov
repz
jp
lea
push
push
mov
mov
mov
popa
loope
inc
es
and
fbld
das
cmp
mov
sarl
fnstsw
push
scas
test
or
xchg
aad
mov
clc
scas
cmp
ja
jae
pop
and
test
mov
push
sub
daa
pop
add
and
sub
stos
sub
xchg
imul
add
test
test
enter
lcall
lods
add
xchg
pop
dec
jns
or
aas
jnp
pop
sbb
iret
jg
pop
mov
scas
nop
and
roll
jecxz
fisubrs
dec
int
inc
pop
dec
dec
lret
inc
repnz
stos
es
mov
pop
mov
stc
outsb
sbb
loopne
pop
push
ss
mov
das
sbb
sti
dec
aaa
or
xor
xor
into
xchg
mov
sbb
stos
bound
xlat
inc
xchg
sahf
dec
add
mov
std
mov
dec
push
mov
add
mov
mov
dec
sahf
xchg
mov
cmp
pusha
shlb
mov
aas
inc
mov
aad
rcrb
add
dec
xchg
jbe
test
mov
dec
leave
aad
insl
scas
push
int3
xor
xor
dec
into
sbb
imul
jo
pop
idivl
jnp
mov
jns
mov
aas
lcall
jb
icebp
add
repz
aad
pusha
mov
and
pop
jne
mov
aam
repz
dec
mov
mov
fcompp
insb
repz
push
dec
jge
xchg
arpl
dec
cld
inc
pavgb
test
pusha
xor
fbstp
or
xlat
dec
cli
inc
push
xor
inc
cli
sbb
sub
xchg
sbb
icebp
out
mov
pop
pop
push
and
pop
int
ja
push
ds
adc
addr16
cwtl
ret
add
push
std
push
add
lods
and
cmpsl
pop
pop
fwait
ror
sub
fdivl
ja
pop
jno
xchg
lds
js
loopne
sbb
mov
fimuls
gs
pop
add
pop
jbe
jbe
and
xchg
mov
jecxz
mov
sub
jnp
std
rorb
mov
insl
sub
push
cmp
inc
dec
int3
iret
xorb
pop
inc
stos
rorl
mov
xlat
stos
fcomps
sub
jecxz
push
test
out
movsb
into
scas
inc
subb
push
cltd
cmpsl
cli
mov
repz
scas
xor
lods
cltd
dec
push
lret
iret
push
fiadds
arpl
inc
icebp
sub
jmp
js
dec
cmp
pop
dec
push
int
cmp
movsb
push
leave
movsl
xor
in
lcall
add
fs
pop
add
xorl
inc
popa
inc
or
faddp
cld
in
pop
sub
fstps
aaa
movsl
test
push
push
mov
nop
sarl
ficompl
int
out
rorl
ja
jp
mov
push
insl
mov
out
xchg
sub
arpl
pop
jle
in
imul
repnz
xlat
lds
jae
fmul
aaa
movups
adc
jbe
jae
incl
lret
xchg
and
cwtl
mov
cs
or
pop
pusha
xor
sarb
jns
ja
repnz
das
arpl
mov
aam
loop
mov
repz
sbb
dec
jno
repnz
fsubrp
sbb
push
xor
andl
and
gs
vshufps
xchg
in
lea
mov
into
dec
leave
pop
lret
jb
loop
lcall
pop
roll
or
in
test
inc
push
or
sahf
mov
stos
popa
fs
pop
push
push
mov
jbe
dec
adc
inc
cld
sub
ja
pop
cmc
test
mov
push
xchg
jecxz
adc
sbb
dec
sbb
adc
fsub
cwtl
out
xchg
ret
inc
aam
add
fildl
push
adcb
jb
jae
adc
dec
divb
aad
call
fisttps
dec
cmp
fstps
fwait
imul
bound
jns
std
imul
gs
push
sub
insl
test
js
pop
adcl
fbld
jbe
jno
mov
sbb
and
push
aaa
out
int
pop
out
jo
inc
xchg
mov
mov
add
pop
stc
leave
mov
push
and
add
mov
mov
xor
test
jae
push
dec
xchg
xor
mov
stos
out
scas
movsl
adc
xlat
adc
inc
ss
mov
push
lret
add
sbb
or
jl
das
daa
inc
mov
mov
lods
dec
mov
or
pop
xchg
dec
insb
outsb
ret
popf
dec
jge
jg
xchg
addr16
shrl
lea
aam
fldenv
mov
rcr
cmp
stos
outsb
add
jge
xor
push
out
inc
dec
mov
jno
cli
aas
adc
xlat
daa
mov
rolb
testb
mov
lahf
jne
mov
jne
adc
xchg
fmul
mov
test
arpl
sub
js
loope
loope
in
push
fcompl
xorl
enter
add
in
xor
pushf
add
loope
aad
fsub
out
daa
inc
mov
sub
cltd
ret
ret
imul
dec
push
and
mov
and
leave
adc
xor
ja
cli
mov
add
stos
pusha
sub
jl
mov
inc
outsl
test
loopne
sarb
xor
lea
cwtl
push
add
lcall
xor
call
adc
lahf
movsl
add
bound
push
negb
ja
test
push
loopne
lods
mov
xchg
mov
mov
mov
ljmp
inc
or
out
push
mov
addr16
push
jg
push
xchg
adc
out
ja
inc
jmp
lcall
cmp
jb
cmp
dec
and
sti
mov
inc
sbb
sbb
lds
pusha
push
or
ljmp
pop
enter
dec
jmp
mov
sbb
and
add
adc
add
add
add
imul
jnp
iret
add
push
cmp
xchg
enter
sbb
in
sub
scas
jmp
aas
pop
mov
pop
cmpsb
push
jecxz
dec
xlat
cmp
cmpsb
pop
sub
xor
div
dec
cmp
pop
add
push
jmp
fisttpl
ss
daa
jae
mov
popa
ficoms
addr16
xchg
mul
or
mov
xchg
fs
cltd
loop
test
and
add
add
add
and
and
add
inc
add
mov
add
roll
add
insb
cmp
ljmp
je
and
xchg
xor
into
subl
pushf
and
jae
adc
aaa
out
push
fs
xchg
ret
push
test
xchg
ja
call
pop
mov
jge
dec
lcall
inc
clc
xchg
jmp
inc
cltd
iret
and
lcall
dec
sub
ja
jle
xchg
dec
rclb
decb
ljmp
jae
add
arpl
xchg
jae
sbb
mov
cwtl
sub
xor
sub
pusha
enter
fildll
mov
adc
dec
push
sbb
sbb
stos
sub
insl
lret
aad
cltd
jle
outsb
push
nop
es
pop
and
clc
sahf
test
clc
xlat
fdivrl
mov
cmp
aaa
cmc
jns
xor
repz
les
inc
jmp
icebp
lcall
loop
dec
adc
sti
rorl
xchg
jecxz
cmp
or
loope
popf
call
in
xchg
mov
leave
mov
movsb
mov
jo
daa
arpl
mov
test
mulb
xchg
push
dec
xchg
shll
ror
fs
push
outsb
arpl
mov
xchg
icebp
dec
add
sub
add
sahf
xor
cmpsb
insb
insb
lcall
xchg
push
movsb
in
out
mov
pop
push
ljmp
int
fisttps
and
and
nop
cmpsb
xchg
push
xchg
mov
xchg
test
test
ret
sub
xchg
cmpsl
mov
dec
or
hlt
gs
mov
sar
sbb
testl
adc
jg
icebp
in
dec
inc
jo
call
icebp
mov
sub
add
ret
imul
adc
gs
jg
xor
nop
pusha
xchg
cmp
ftst
jae
hlt
xor
test
sbb
add
cli
dec
add
mov
mov
idiv
pop
repz
jnp
pusha
repnz
nop
sub
loop
dec
jp
orl
inc
add
jns
push
int
pushf
jp
nop
rcr
xchg
fwait
xchg
jno
mov
xor
outsb
lahf
rolb
xchg
inc
sub
push
dec
xchg
fsubr
in
dec
add
push
rcll
scas
repnz
jp
xchg
cmovp
mov
push
es
lea
outsl
xor
insl
flds
adc
cmp
les
sub
jne,pn
dec
dec
movsb
ljmp
inc
fists
mov
cmp
repnz
push
out
xor
loopne
das
cltd
mov
ljmp
sbb
inc
add
in
jg
mov
sti
dec
mov
push
cwtl
xchg
mov
out
sbb
push
cltd
in
pop
xchg
jno
stc
inc
xchg
cmp
or
add
xchg
adc
in
popa
icebp
and
lcall
sbb
xchg
or
popa
sarl
out
lods
dec
stos
dec
push
sub
test
mov
scas
stos
push
mov
out
add
cmp
mov
xchg
jnp
leave
and
or
dec
dec
sbb
push
sbb
push
dec
or
popf
and
mov
or
out
adc
ljmp
cmp
adc
orb
cwtl
push
adc
jl
mov
mov
or
ds
ljmp
pop
mov
out
stos
mov
bound
pop
add
xchg
sahf
mov
pop
mov
push
movb
cld
push
pop
jno
jecxz
arpl
loop
cmc
jnp
loope
or
fildll
lock
push
push
jbe
mov
int3
and
pop
push
cmp
dec
mov
push
cs
scas
movsb
sub
sub
inc
push
adc
loope
test
push
xchg
popl
cltd
cs
xor
gs
mov
popf
pusha
loopne
push
repnz
pop
ret
sbb
movb
jnp
mov
lea
sub
xchg
add
jecxz
insb
pop
jo
sub
push
mov
adc
mov
inc
or
fistl
dec
push
or
push
gs
or
dec
cmc
dec
jg
xlat
repnz
out
movups
pop
jle
mov
cmpsl
popa
xchg
xchg
and
mov
mov
jecxz
fs
ficoml
imul
jns
movsl
mov
lds
aad
daa
aad
adc
jae
xchg
jnp
push
loope
outsl
in
push
aam
pop
scas
mov
outsl
nop
imul
ss
fchs
fstp
clc
std
lock
xchg
outsb
rclb
mov
cmc
jae
xor
pop
repnz
xor
lods
nop
or
ljmp
loop
aas
rcrb
in
aas
mov
fs
out
mov
mov
out
pop
repnz
pop
data16
fldl
mov
sbb
add
jmp
lret
pop
push
ret
fistpll
sub
fsubs
lahf
jg
jbe
inc
out
mov
mov
jge
out
inc
mov
sbb
jb
insl
clc
sbb
insb
mov
ja
mov
leave
adc
pop
add
in
enter
adc
jg
outsl
jp
fsubrs
adc
add
imul
flds
xchg
sbb
mov
orl
push
sbb
sbbb
cli
out
lods
jo
or
xchg
cmp
ljmp
push
mov
add
movsb
pop
pushl
scas
add
cmp
jle
loop
int
scas
dec
push
lods
jmp
std
sbb
xor
or
in
fimull
or
adc
ret
cmpsb
adc
jbe
das
xchg
mov
mov
inc
hlt
pop
es
and
or
insb
xor
cmp
mov
xchg
ret
jnp
sub
lds
imul
pop
loopne
icebp
fwait
out
lea
clc
jo,pn
rsqrtps
test
lret
cmp
arpl
ficomps
sub
push
mov
pop
mov
dec
fwait
cwtl
push
fwait
sar
in
add
sbb
or
adc
loop
pop
stc
mov
outsb
or
xchg
rcrb
jge
and
mov
gs
pop
sub
mov
add
push
cmc
ffree
lret
sbb
fisttpll
fidivrs
das
adc
pop
es
dec
in
cmp
mov
sahf
not
mov
mov
in
pop
pop
mov
scas
ss
repnz
push
dec
scas
jb
cmp
mov
mov
cli
dec
inc
fiadds
xor
pop
dec
call
insl
scas
movsb
sbb
and
and
scas
test
aaa
int3
sub
mov
shrb
cmp
cmp
inc
outsw
gs
leave
pop
cmp
andl
aam
fs
int
cmpb
adc
sahf
insb
loope
pop
imul
addr16
push
stos
xor
cmp
inc
out
sahf
rorb
pushf
test
cwtl
cmpsb
ret
cmpsb
cmp
sbb
imul
cmp
inc
loop
imul
ss
xchg
into
xor
cld
or
xchg
mov
lcall
imul
pop
adc
push
shll
rcl
push
jmp
pop
xor
mov
lret
add
ret
rorw
movl
test
aam
sbb
repnz
out
addr16
adc
sbb
mov
jle
jnp
inc
sahf
mov
push
popa
mov
cs
and
inc
insl
xor
jns
lahf
ds
jl
ret
xchg
arpl
or
pop
xor
cmp
insb
stos
sarl
icebp
lret
popa
pusha
scas
pop
testl
add
fcomi
xchg
jle
rclb
add
jo
jl
push
sar
and
mov
xchg
xchg
movsb
push
push
inc
mov
gs
xchg
and
mov
pop
and
data16
or
dec
rcl
or
mov
inc
incb
int
out
lcall
psubsw
cmp
std
hlt
cmp
adc
fs
aaa
cmp
xchg
sub
testl
jns
lahf
pop
mov
repnz
aas
jg
fwait
clc
jns
add
repz
std
mov
rolb
and
loopne
shl
stos
paddb
std
cmp
xor
aaa
arpl
adc
popf
mov
sti
dec
iret
cmp
dec
inc
mov
or
dec
ret
int3
dec
jge
cmp
mov
push
push
hlt
test
cwtl
sahf
jge
add
rolb
cmp
jb
push
dec
push
adc
aas
andb
add
insb
scas
les
psraw
jge
mov
sahf
insl
sbb
cmpb
dec
insl
ss
inc
addr16
mov
cli
or
scas
pop
fimuls
mov
aaa
cltd
cs
out
lret
cwtl
and
imul
push
fs
int
scas
mov
xor
dec
cltd
inc
ret
insl
ds
fs
daa
das
loopne
push
dec
xchg
pop
cli
mov
cmp
mov
in
push
leave
fcompl
push
movsl
and
icebp
repz
rolb
mov
cmp
aad
jo
push
scas
stos
or
lahf
das
push
or
sbb
or
pop
ja
movsb
test
add
xchg
push
push
lret
sub
mov
popf
xchg
das
or
cmp
fprem1
cmpsb
dec
fbstp
xor
fs
cmp
mov
and
hlt
sbb
mov
and
std
andl
jae
mov
push
fsts
orb
in
cmp
ret
pop
inc
mov
inc
int
mov
add
scas
lea
xlat
cmp
in
stos
push
cmp
pusha
ljmp
cmc
or
cmp
scas
imul
repz
lds
das
ja
imul
popa
sbb
test
jne
cmc
mov
scas
arpl
sub
sub
andb
and
mov
jle
rcll
lock
xchg
dec
cmc
push
add
pop
adc
das
mov
mov
dec
push
sub
inc
pop
addr16
out
or
clc
in
cmp
jp
and
in
adc
sbb
dec
arpl
or
add
pop
sub
xchg
mov
cmp
push
lds
inc
rolb
aam
push
fidivrl
mov
orl
cmpsl
and
out
fstl
push
xchg
mov
push
jb
ds
ja
pop
mulps
cmp
push
jmp
adcb
inc
pop
pop
push
shl
fwait
rorb
mov
pop
lds
lret
xchg
inc
or
jp
cmp
mov
or
jecxz
and
sbb
mov
sar
shll
or
inc
rcrl
jl
insl
inc
cmp
push
mov
sub
addl
push
pop
addl
and
pop
addl
fcmovu
sbb
pop
and
outsw
jg
js
sbb
in
or
xchg
sub
mov
insb
fildll
ljmp
add
sti
push
sahf
pop
std
stos
pop
fnstenv
call
arpl
mov
fbstp
gs
jns
jecxz
mov
test
arpl
lret
lods
inc
fbstp
jne
add
or
pop
sub
and
pop
mov
clc
mov
hlt
lock
lcall
enter
pop
divl
sahf
icebp
in
and
push
pop
cli
neg
nop
fsubl
rcll
jp
mov
lods
jl
dec
es
xlat
push
push
jb
outsb
aas
notb
push
cmc
insl
incl
sub
jp
iret
nop
inc
push
in
shrl
cmp
jl
clc
aas
jmp
mov
cs
fidivl
sub
xor
add
lret
push
mov
dec
push
dec
rolb
pop
dec
faddp
pop
fisubl
add
sub
testl
push
cli
negl
popl
mov
cmp
jge
test
mov
pop
push
sub
shlb
push
cwtl
sbb
ja
rolb
pop
test
jg
cmp
negl
mov
ficoml
test
add
ljmp
in
ficoml
enter
ret
call
jmp
push
pop
enter
cmp
push
les
mov
shlb
pop
mov
pop
and
cmp
or
popf
out
repz
mov
dec
out
xor
lcall
push
rcr
jge
jns
mov
rorb
movb
inc
movsl
scas
mov
mov
mov
adc
add
in
out
adc
popa
cmc
inc
adc
fsts
mov
sbb
out
lods
pop
fwait
cwtl
pusha
push
cmpsb
aaa
loop
sti
call
shl
jmp
pop
adc
cmpsl
mov
xchg
lock
dec
cmpsb
xchg
jo
cmpsb
in
lahf
push
xchg
mov
stos
icebp
test
or
rorl
or
test
shl
push
lret
xchg
dec
dec
xchg
inc
sbb
int
jecxz
and
in
pop
xchg
bound
xchg
fincstp
mov
lret
rcl
imul
cltd
xchg
gs
subb
push
mov
rep
or
jae
jno
pop
xor
jle
add
pusha
loope
adc
add
cmc
sbb
mov
std
dec
sub
push
or
and
sub
xchg
loopne
dec
fdiv
inc
sbb
jbe
popf
add
mov
xchg
cmpsb
ljmp
daa
jbe
cwtl
ret
scas
dec
in
jne
xor
mov
lods
pop
rol
dec
inc
notb
lret
push
pop
and
arpl
and
ja
mov
je
mov
xchg
sub
add
je
and
test
imul
in
gs
xor
outsl
addr16
or
xor
pusha
or
adc
pop
jbe
and
aam
jb
sub
fnstenv
out
add
adc
mov
push
scas
adc
ret
lock
imulb
cmp
sbb
inc
jbe
add
rclb
fnstsw
pop
add
scas
xor
jge
bound
aad
cmp
movsb
mov
in
mov
dec
cmc
jnp
testl
shrl
loope
jnp
mov
pop
mov
jmp
imul
sub
or
scas
push
mov
xchg
add
cmc
mov
mov
sbb
std
inc
cwtl
lcall
sti
cld
fwait
adc
cmc
mov
xor
in
add
cmp
test
aas
jge
in
mov
xchg
cld
and
insb
dec
pop
loopne
mov
clc
cwtl
add
push
or
test
rcll
sbb
nop
jnp
into
jp
scas
inc
add
xlat
push
inc
in
mull
into
test
call
ja
lods
mov
mov
xchg
and
push
add
nop
jbe
dec
pop
lods
mov
stos
push
xchg
in
sbb
push
mov
fcomip
sbb
rol
mov
pop
ret
mov
adc
aad
cmp
or
arpl
mov
loopne
call
mov
or
call
je
icebp
daa
negl
mov
jle
sub
inc
and
and
sahf
hlt
xchg
mov
dec
fwait
mov
add
jo
jle
icebp
rorb
dec
mov
push
mov
mov
cwtl
sahf
pop
cwtl
xor
inc
adc
xchg
mov
pop
adc
and
xchg
mov
das
cmpsb
popa
or
ljmp
adc
ljmp
xor
lock
je
mov
dec
xchg
pop
fists
aas
sbb
addr16
or
inc
adc
jp
movsl
in
or
push
pushf
cmpl
repz
loopne
mov
dec
movsb
test
dec
sub
lods
xlat
iret
int
divl
je
inc
adc
push
xchg
mov
dec
test
cld
notl
push
cmp
xor
pop
adc
xor
and
les
inc
pusha
movsl
test
cmp
xchg
push
jno
push
cmp
sbb
lds
inc
push
and
xor
stc
dec
ret
sbb
call
push
push
je
movsl
adc
out
dec
out
pop
push
xor
jne
adc
sub
pushf
aas
je
mov
inc
push
jp
lea
dec
mov
mov
outsb
cmp
fisubrl
dec
fbld
push
aas
lea
dec
jp
sub
aas
or
popa
adc
mov
shl
lods
lods
in
mov
xor
enter
xor
and
cld
pop
jecxz
stc
mov
pop
adc
nop
es
jo
aas
cmp
jo
data16
adc
mov
fstpt
pop
testb
jg
add
jae
mov
outsb
andl
adc
jne
ret
pop
jne
sbb
mov
shlb
shl
jnp
pop
or
adcl
dec
jno
push
pop
dec
pop
lds
lret
mov
xchg
fwait
xor
push
mov
mov
ds
cli
sbb
data16
sbb
and
and
push
fsubrs
push
popf
xchg
ja
mov
add
jne
stc
jg
out
or
pop
or
mov
rcrl
dec
pop
dec
fs
sbb
sar
add
mov
jge
xor
sbb
cmp
mov
lret
cld
or
in
dec
repnz
lret
cmp
pushf
lods
mov
inc
jmp
aad
cmp
movsb
add
jecxz
xchg
sbb
and
sti
dec
push
add
scas
repnz
fcompl
push
daa
test
push
inc
lea
or
add
jecxz
idivb
mov
imul
cmp
and
imul
push
xchg
arpl
enter
sahf
lahf
rcrl
mov
lret
mov
subl
mov
test
lea
and
ss
std
sbb
xchg
cwtl
jnp
mov
add
out
test
lds
push
popf
push
lock
shll
roll
fisttps
pusha
mov
sub
jle
mov
mov
hlt
pop
push
jmp
ss
jae
icebp
add
loopne
imul
push
push
sub
lahf
jne
inc
mov
repnz
imul
out
cli
ret
ret
pop
and
call
fisubl
aas
aas
sbb
test
dec
out
dec
repz
pop
out
adc
and
outsb
jg
and
fcoml
xchg
push
fsubrp
mov
ret
and
pusha
mov
dec
sahf
stc
pushf
js
sbbl
mov
rorl
pop
sub
ljmp
shll
or
mov
pop
xlat
fwait
adc
xor
test
xor
cmc
ret
push
push
push
int
inc
pop
jnp
sbb
or
in
push
push
dec
rorb
sbbl
push
mov
jmp
sbb
xchg
push
pop
mov
fmuls
pop
call
add
mov
lahf
xor
in
repnz
fdivrs
and
dec
in
ret
and
inc
fistl
jns
mov
hlt
cmp
sub
xchg
outsb
xor
or
mov
aam
lods
sbb
je
dec
cld
jns
repnz
mov
cld
int
mov
xchg
mov
sub
jecxz
jno
and
pop
and
imull
in
xchg
negl
loope
xor
pop
popf
push
mov
nop
jmp
push
cmp
out
lret
mov
sbb
jae
aas
dec
cmpsl
inc
ds
cmp
fs
rol
int
stos
aam
or
mov
pusha
hlt
adc
ss
or
adc
outsl
and
cld
pop
cli
cwtl
pop
aas
out
dec
inc
jge
dec
mov
pop
dec
andb
subl
push
lret
fistpll
inc
xchg
ljmp
popf
leave
pop
jg
push
cld
cmpsl
nop
cli
insb
and
pop
fwait
data16
rcrb
sub
mov
xlat
in
cmp
add
imul
xor
xchg
test
mov
std
add
bound
dec
pop
out
sub
push
xchg
mov
lahf
xchg
pop
sbb
inc
aas
lret
insl
outsb
je,pn
mov
gs
add
xor
inc
push
sub
mov
push
cmp
test
xchg
dec
pop
xchg
mov
movl
repz
stos
xor
or
ds
and
jne
sti
nop
or
pop
pop
xorl
xchg
fstpt
cmc
data16
and
push
rcrb
in
rclb
insb
and
push
mov
push
cwtl
adc
pop
outsl
fldcw
jmp
mov
push
lcall
inc
sub
mov
dec
pusha
int
data16
xor
dec
mov
pop
dec
xor
pop
rolb
insl
popa
jo
push
mov
shlb
adc
data16
xchg
cs
addr16
sbb
lods
loop
mov
mov
push
lcall
fcompl
out
cmp
xor
cmp
lods
sub
push
mov
je
jp
andb
cwtl
enter
mov
xchg
mov
stos
pushf
lcall
or
fisubrl
loop
clc
aad
out
pushf
sbb
pop
test
test
push
lcall
mov
loop
lahf
aas
xchg
dec
hlt
push
xchg
sbb
cmp
pop
adc
adc
lret
sub
and
call
mov
jo
dec
jg
push
inc
xor
add
sbb
fmull
loopne
xor
dec
idiv
and
out
mov
cld
pop
data16
nop
pushf
sbb
lcall
popl
pop
mov
push
dec
add
inc
in
and
into
aad
mov
aad
ror
push
inc
int
mov
jno
mov
push
dec
or
loope
xor
push
mov
sbb
sub
filds
or
and
shr
jmp
dec
mull
push
mov
mov
dec
loop
push
ds
mov
or
jmp
add
stos
lods
or
in
jbe
xor
mov
mov
and
mov
push
fs
mov
sub
mov
ss
lret
pusha
ja
lea
and
add
jnp
aaa
movsb
rorl
inc
cmpsl
psrlw
jb
in
and
mov
pop
sub
or
inc
aas
dec
stos
jmp
out
fistl
orl
nop
lahf
sub
or
hlt
pop
adc
mov
fadd
ja
dec
sub
lcall
jmp
dec
and
sti
frstor
mov
outsb
and
xchg
mov
pop
pop
frstor
or
dec
and
dec
arpl
test
xchg
and
in
mov
jo
repz
or
iret
aas
in
shr
push
inc
arpl
test
add
imulb
push
loopne
push
push
inc
push
ds
pop
xorb
scas
dec
sbb
xlat
inc
ffree
inc
data16
xchg
xchg
repnz
int3
in
xor
mov
lods
ret
ja
repz
repnz
movsl
ficoml
xor
loope
add
shll
mov
and
sbb
call
sahf
hlt
dec
les
cmp
pop
negb
lods
gs
add
or
cmp
shl
imulb
lods
pop
scas
mov
jne
stos
jne
jl
xorb
push
or
mov
xchg
push
dec
mov
lret
fistpll
sbb
mov
scas
sub
in
out
inc
jp
bound
xchg
jo
insl
inc
lret
insl
mov
fadds
mov
and
cmpsl
add
stos
arpl
inc
das
dec
out
push
push
dec
sbb
jl
test
mov
pop
or
aaa
jo
pop
decl
pop
sahf
add
lret
mov
fst
stos
stc
imul
cmpsl
mov
std
mov
mov
shrb
jmp
sub
mov
test
cmp
or
jge
loope
pop
cmp
sbb
outsb
xchg
outsl
pop
add
arpl
mov
or
cmp
xorb
movsl
divl
rolb
loope
pop
mov
mov
mov
out
and
or
adc
dec
inc
popl
popa
cmp
test
sub
push
xor
icebp
push
jno,pn
pop
repz
cvttps2pi
ret
add
lods
fistpll
call
ret
mov
mov
inc
aad
mov
jmp
dec
ds
or
es
dec
jnp
rcl
dec
mov
je
or
pop
lods
push
jl
cmc
into
jmp
adcl
and
inc
and
cmp
push
scas
gs
test
mov
cmp
into
or
xchg
int3
pop
sbb
jne
mov
mov
dec
mov
jecxz
mov
cmc
aas
fildl
dec
pop
and
fwait
ss
cs
add
dec
pushf
pop
dec
sub
push
scas
jge
cs
mov
or
test
scas
cltd
lret
push
jbe
mov
fldt
xchg
enter
test
aaa
fucomip
jp
xchg
dec
mulb
mov
mov
jb
aam
ret
popa
xchg
xchg
lcall
sahf
adc
dec
hlt
stos
cli
adc
or
mov
mov
ret
cs
mov
ret
mov
fildll
sub
loopne
jmp
js
aaa
pop
imul
xchg
sbb
fisubrs
dec
mov
jb
mov
int3
lea
cmp
lahf
jge
test
ljmp
push
jae
or
pop
imul
insl
arpl
mov
aas
out
jbe
dec
pop
mov
fwait
dec
xchg
in
fcmovnu
cmp
push
push
std
rcl
pushf
pushf
cmp
dec
jno
or
adc
and
add
mov
sbb
je
xor
icebp
sbb
pop
outsl
stos
push
xor
mov
test
gs
ret
jmp
das
dec
cmp
mov
jg
in
mov
stos
sbb
test
sti
inc
pop
loopne
hlt
scas
clc
fs
and
push
sbb
mov
popa
lock
rcrb
sbbb
sbb
imul
jmp
roll
and
int
les
pop
ret
bound
dec
jp
movsb
cmpb
xor
add
adc
add
das
dec
or
inc
dec
xchg
sbb
testb
xchg
mov
lock
aam
xchg
shl
jecxz
pushf
aas
pop
add
inc
push
mov
dec
call
popf
xchg
icebp
iret
xor
daa
xor
mov
pop
jecxz
mov
sub
lock
test
in
cmpsl
std
mov
sbb
mov
mov
push
sti
cmpsb
cs
jmp
xchg
mov
lcall
pop
test
fsubrs
mov
xchg
cmp
adcb
mov
rclb
data16
aas
cmp
ret
pop
pop
imul
mov
into
xchg
pusha
fdiv
sti
mov
pop
jle
jb
push
shll
cmp
insl
movsb
jno
lock
int3
mov
dec
pop
popf
xor
jge
sahf
aaa
pop
or
pop
out
repz
in
pop
jp
inc
push
insb
enter
mov
sbb
pop
inc
inc
cmpsl
shll
push
aam
movsl
jo
ljmp
ljmp
fisubl
sbb
and
sbb
mov
inc
int3
mov
mov
dec
fstpl
xor
sar
imul
ficompl
inc
fs
or
dec
sarl
iret
js
jmp
insb
pcmpeqw
add
xchg
addr16
stos
mov
cs
insb
sbb
sub
fs
xchg
cmpl
enter
cmp
push
cmp
incb
outsl
jg
pop
xor
mov
outsl
out
xor
clc
sbb
xor
xorb
ffree
add
cmp
adc
pop
dec
outsb
mov
je
mov
nop
xchg
mov
mov
sbb
cmp
inc
sbb
pop
inc
incb
or
imul
add
mov
cmp
frstor
fs
or
cmp
rcl
repz
adc
and
repnz
cmp
mov
lret
mov
push
mov
pop
push
fmuls
aas
mov
mov
jns
imul
jnp
xor
jl
mov
push
outsl
aam
aaa
jbe
sub
movsb
mov
mov
dec
xchg
jns
adc
std
dec
xor
mov
or
sti
inc
jge
pusha
inc
out
mov
push
into
push
outsb
test
add
rcr
movsl
mov
hlt
es
fs
jnp
add
roll
and
loopne
and
xchg
mov
push
push
sbb
mov
add
add
fcomps
vdivsd
jge
add
xor
divl
adc
lods
push
out
adc
mov
xor
in
cmp
dec
lahf
sti
pop
push
pop
pusha
ljmp
cmp
inc
and
mov
sub
sbbb
cmp
lods
sub
in
addr16
sub
cmpsl
mov
adc
in
ret
inc
stos
loop
mov
in
push
pop
mov
cmpsb
and
mov
jns
push
sub
out
lahf
cli
xchg
sub
dec
andl
push
pop
enter
movsb
or
out
testl
or
push
arpl
cmpsb
mov
je
js
shrb
mov
pop
lret
sub
imul
mov
jne
pop
test
sub
mov
cmpsl
push
jecxz
lret
mov
adc
mov
fdivl
subl
jecxz
movsl
mov
es
mov
out
movl
imul
adc
xchg
dec
fidivrl
inc
fcoml
in
in
mov
rcrl
aaa
in
aad
push
xor
dec
sbb
hlt
cmpsb
scas
cmp
sbb
scas
faddl
xchg
pushf
idiv
sbb
subb
es
mov
push
lcall
jp
xor
jns
inc
xchg
xor
add
xor
push
cmp
pusha
mov
lahf
loop
push
pop
out
add
mov
and
jne
mov
stos
xchg
mov
jno
jl
and
adc
stc
dec
or
outsb
sub
dec
pop
cmpsl
inc
inc
in
pop
loopne
popa
fildll
imul
or
fstpl
test
cmpsl
sbbb
cli
fistl
cwtl
xchg
push
xchg
lods
and
test
clc
ficompl
sbb
ficoms
arpl
scas
or
lret
fisubl
mov
mov
inc
add
and
ds
int3
nop
mov
pop
movsb
jle
and
dec
inc
pop
push
pop
sub
imul
xor
mov
ds
cmp
aaa
jno
jg
cmp
sub
out
aaa
sbb
and
loop
stos
arpl
push
shlb
xchg
pop
mov
sti
je
scas
push
jle
xor
jg
or
mov
popa
pop
stc
sbb
xor
loope
cmp
movsl
insl
aad
inc
lods
push
fwait
stc
lea
test
jae
ud1
mov
mov
fldenv
movsl
sbbl
enter
mov
movsl
xchg
fimull
push
fsubp
out
lcall
add
xor
pushf
ds
add
addr16
cmc
mov
mov
add
cmp
jg
xor
rcrl
mov
mov
push
jl
add
and
dec
mov
mov
adc
xchg
sbb
les
adc
cmp
fldt
dec
imul
js
mov
imul
sbb
rcll
fsubrp
cmp
subl
mov
pop
jg
lods
punpcklwd
stc
mov
out
and
adc
sub
mov
adc
pop
mov
or
xor
jp
sbb
jnp
push
aam
sbb
inc
pop
push
and
inc
push
mov
in
dec
lahf
lea
mov
stos
imul
fistl
xlat
mov
lds
mov
push
das
inc
jge
or
out
jecxz
adc
mov
lcall
loopne
in
mov
push
or
cmp
sbb
adc
and
aad
adc
inc
andl
inc
lea
push
fwait
inc
test
inc
scas
inc
iret
aaa
pop
stos
push
lock
loop
or
or
and
mov
sub
adc
mov
rorl
cmp
adc
cmp
push
fcoml
pop
std
imul
inc
pop
xchg
ds
add
mov
xor
mov
add
lcall
scas
lcall
scas
add
outsb
adc
sbb
mov
xchg
sub
xorb
xchg
call
rclb
in
mov
jmp
bound
mov
ds
ret
popa
imul
cld
movsl
movsb
jecxz
int
cltd
pop
push
hlt
fdiv
jmp
add
aas
mov
jecxz
test
ja
dec
mov
addl
iret
mov
int
rcl
push
or
or
jb
inc
push
call
push
sub
loopne
sbb
stos
pop
les
pushf
inc
dec
adc
mov
into
dec
add
push
test
test
test
mov
xchg
xlat
lods
or
loopne
bound
sub
mov
mov
call
pop
out
and
and
shrl
cmpsl
sub
in
xlat
ror
add
mov
mov
addr16
outsb
mov
xor
lcall
sub
cmp
test
fs
cmpsl
cmc
push
jge
cmpsl
xor
push
leave
cmp
dec
jae
rorb
add
bound
push
push
imul
xor
subl
xchg
push
cmp
cwtl
jge
mov
lock
test
insl
mov
jb
dec
bound
mov
movb
ljmp
and
loope
jge
loop
scas
repnz
int3
pop
mov
shrl
adc
adc
add
lock
jae
sbb
push
lds
leave
incb
mov
jns
xor
out
mov
arpl
lds
xchg
and
arpl
add
fidivs
mov
loopne
std
jle
into
xorl
jecxz
stos
psrlw
sti
mov
inc
rorb
xor
or
lret
clc
xchg
rcrl
fs
aas
and
stos
mov
xchg
dec
cld
aad
repnz
pop
iret
pusha
sbb
fistpll
jbe
aam
dec
andb
or
push
push
rcrl
out
fwait
and
dec
mov
cmp
sbb
lahf
fwait
xchg
xchg
iret
insl
mov
mov
pop
xor
pushf
aam
int3
fs
xor
mov
xchg
xchg
jp
sbb
push
pop
xchg
jp
adc
jo
arpl
jmp
pop
mov
test
push
jne
cmp
fisttpl
negb
mov
lcall
push
or
sub
insl
je
jo
pop
lret
clc
pop
ret
ss
insl
cli
mov
xlat
jle
pop
mov
aaa
bswap
imul
hlt
pushf
mov
jecxz
ljmp
mov
inc
int3
stos
dec
xchg
push
mov
and
push
pop
xchg
loop
test
cmpsb
cmp
mov
jnp
in
sub
insb
xlat
sti
fidivs
mov
pop
inc
ret
rclb
mov
mov
in
call
int
adc
sub
or
inc
push
or
fcoms
inc
mov
test
adcl
mov
dec
inc
mov
push
pop
out
cmp
lret
dec
insl
lcall
add
outsb
cltd
mov
mov
and
jnp
jo
push
dec
cli
loope
dec
lods
pop
out
adc
sbb
shrb
lcall
into
repz
enter
stos
mov
fdivrs
pop
int
call
jno
adc
sbb
inc
test
gs
mov
mov
repz
cmp
mov
lds
push
mov
cmpsl
mov
lret
in
cwtl
jmp
rcr
dec
push
ret
and
cmp
cmp
push
ja
and
aam
insl
icebp
dec
mov
ja
lock
jl
pop
lods
lahf
xor
push
mov
lds
sub
mov
lods
add
jo
inc
push
push
out
les
jno
lea
js
mov
xchg
pop
xor
sbb
bound
dec
or
mov
les
adc
test
std
and
icebp
mov
jmp
xchg
into
cld
add
into
cltd
movsb
mov
jno
inc
dec
data16
dec
mov
int
mov
add
ss
push
dec
dec
xchg
lret
cltd
shlb
test
sub
lret
push
jle
bound
in
cmp
adc
pop
jne
mov
mov
loopne
dec
pop
sbb
inc
aad
std
xchg
popf
mov
test
sbb
inc
adc
popf
out
and
push
lea
clc
mov
popl
add
stc
subl
or
fidivrl
and
rcll
push
cmp
popl
inc
mov
in
flds
fiadds
hlt
sbb
andl
fstps
adc
test
mov
dec
cmpsl
push
pop
testb
jg
out
aad
xlat
pop
jg
leave
inc
pop
mov
decl
mov
xchg
xor
sub
pop
xchg
cmp
iret
cmp
out
sbb
ficomps
pop
jmp
mov
pop
cli
repz
cmc
inc
mov
mov
je
imul
sub
cmp
fwait
in
outsl
add
test
jb
mov
lcall
lret
icebp
stos
sti
jae
cmp
push
mov
sbb
leave
fninit
ret
pop
push
lahf
popf
pop
nopl
lock
cmp
or
push
ficoml
ret
pop
leave
icebp
push
aas
divb
fs
cmp
sbb
pop
or
cwtl
mov
push
sub
sub
xchg
inc
xlat
cmp
sahf
cmp
add
sarb
test
ret
xchg
jmp
or
sti
fs
pop
fs
js
push
fcmovnb
mov
lock
aas
fisubrs
cmp
mov
mov
jmp
mov
mov
in
jge
adc
fnstenv
mov
xchg
leave
sbb
add
xor
lods
and
sub
cmp
lret
mov
dec
cmp
aam
inc
lea
and
push
cmp
mov
sub
gs
stos
sub
xor
push
sub
pop
jecxz
push
mov
outsb
pop
addr16
add
xchg
leave
cmc
xor
movsb
out
add
inc
sbb
leave
or
or
addr16
inc
sti
sbb
inc
mov
and
test
je
aas
mov
repz
xor
mov
mov
adc
cltd
adc
pop
aam
popf
cmpsl
out
in
cli
push
popa
enter
ja
test
fcmovu
into
inc
xor
dec
insb
mov
fucomi
in
ror
stos
mov
outsb
and
add
mov
xor
and
jmp
outsl
out
sub
cli
fsub
mov
in
out
mov
test
jmp
inc
xchg
inc
aam
js
sbb
movsl
stc
std
and
js
aas
mov
cmp
cmpsl
and
lea
sbb
insb
push
dec
test
dec
std
add
ja
sub
rclb
sbb
inc
mov
sbb
sahf
cmp
test
scas
xor
andl
imulb
cmp
es
ja
rcl
mov
and
push
xor
mov
loopne
ja
xlat
iret
and
data16
cmc
or
and
pusha
lret
ret
cwtl
int3
aaa
sbb
push
push
mov
adc
xchg
outsl
lea
cmp
sarb
push
out
ret
int
sub
movsl
mov
hlt
xor
int3
filds
inc
sbb
pop
push
jne
pop
popa
mov
jne
and
or
xchg
add
xor
xor
sub
jmp
mov
mov
mov
sbb
push
stc
cli
bound
pusha
cmpsb
xlat
std
cmp
pop
ljmp
mov
out
out
push
hlt
push
push
sbb
jns
jbe
repnz
aad
test
sti
push
imul
pop
cmp
nop
outsb
enter
adc
mov
lcall
inc
loopne
rolb
mov
xor
scas
mov
insb
push
cmpsl
cs
inc
clc
stos
mov
addl
int
xchg
xor
jg
sbb
loope
ljmp
in
pop
in
mov
ret
inc
pop
pop
xchg
jge
lock
xor
das
ret
fbld
xor
out
and
lahf
sub
int3
cmp
mov
mov
psubb
adc
outsb
sti
mov
and
lock
inc
cmp
push
xchg
inc
lock
rcll
xlat
sbb
fwait
cltd
mov
fs
sub
xlat
loope
out
out
add
mov
push
adc
push
imul
sub
scas
push
adc
scas
enter
roll
aad
outsb
adc
dec
sub
add
jno
add
sbb
faddp
cltd
and
mov
rorl
and
jb
je
dec
or
mov
in
dec
jmp
faddl
jmp
arpl
mov
ret
and
and
sahf
int3
push
pop
ljmp
in
fadds
bound
ds
mov
jle
popa
mov
pop
pop
cli
xchg
xchg
sub
cmc
add
mov
dec
andl
jb
rcr
push
and
cmp
lock
notb
pusha
lahf
xchg
mov
push
test
add
in
adcb
movsl
xor
inc
cmp
es
add
aaa
and
and
sub
pushf
fdivrl
inc
lds
out
jbe
add
jmp
pushf
aas
sti
in
push
insl
lcall
push
arpl
ljmp
outsb
sbb
pop
insb
lds
sar
dec
jmp
fmuls
je
mov
insl
es
es
mov
dec
xor
psubw
jge
ficompl
inc
into
push
jne
cmc
mov
sbb
xchg
repnz
add
xchg
xchg
jns
inc
mov
cmp
inc
jl
ljmp
mov
sub
sub
cmp
fidivrl
popf
or
loopne
mov
scas
mov
mov
imul
mov
dec
lock
bound
fs
in
sub
xor
dec
dec
stc
jo
cmc
es
inc
mov
xor
xchg
cmpl
scas
xor
xor
loopne
adcb
mov
pop
enter
mov
inc
xchg
mov
adc
mov
out
sbb
out
sub
hlt
or
add
lods
loop
int3
add
push
jae
call
loop
or
jbe
or
fnsave
jae
test
pop
test
sub
add
mov
outsb
nop
jle
pop
pop
inc
test
popf
fnstenv
aad
and
roll
cmp
int3
or
adc
daa
cmpsb
jo
pushf
push
mov
xlat
test
mov
mov
push
in
cli
pop
cmp
xor
mov
je
or
or
inc
mov
ljmp
mov
mov
jge
pop
test
dec
es
xor
cmc
xchg
je
aas
repz
mov
cmp
pop
stc
jmp
push
shlb
mov
xchg
leave
in
lock
aas
dec
push
sahf
sub
cld
xchg
ss
xrelease
add
and
sti
mov
out
cmp
aad
push
in
insl
mov
mov
mov
das
test
lret
fs
cmp
ds
mov
mov
pop
jmp
jecxz
sahf
xchg
repz
jmp
iret
and
xor
bound
jnp
adcb
pushf
mov
jmp
pop
and
sub
in
scas
or
sub
cltd
or
enter
dec
ret
jecxz
inc
iret
and
xchg
xor
mov
lods
xor
xchg
jmp
adc
js
ljmp
mov
push
add
mov
and
and
int3
and
or
sahf
xchg
mov
pop
lret
xor
cmpb
push
mov
loopne
lsl
pop
sbb
lahf
and
adc
bound
in
imul
stos
cmpb
push
in
mov
push
jb
jg
repz
nopl
fwait
sub
jle
push
jmp
xlat
ss
xchg
cmpxchg
outsl
pushf
scas
sbb
out
fstpl
ljmp
inc
mov
fiaddl
mov
pop
jl
orl
add
pusha
shlb
pop
loope
in
test
dec
mov
pop
subl
sub
inc
mov
dec
out
mov
mov
inc
push
cli
mov
push
loopne
jmp
push
cmp
fs
test
jb
out
nop
adcl
cwtl
lods
fs
aam
repz
push
inc
cli
xchg
lods
mov
adc
or
jns
and
adc
das
sbb
aaa
mov
lock
orb
jno
cmp
cwtl
xor
inc
and
mov
push
push
imul
in
shlb
dec
push
stos
stos
loop
std
pop
inc
cli
and
arpl
and
xchg
and
sbb
in
loopne
jne
fistps
pop
es
jecxz
dec
add
fwait
dec
sbb
out
rcr
cs
loop
and
fsubrs
das
dec
mov
ds
lahf
mov
jnp
je
mov
ljmp
xorb
popf
cmp
mov
lcall
mov
rcrb
push
or
loope
cmpsb
testb
jge
frstor
push
sbb
mov
lds
ljmp
test
mov
ja
xor
xchg
mov
es
lods
pusha
jo
mov
add
mov
mov
pusha
mov
jl
xor
arpl
lods
mov
xchg
aam
mov
xchg
in
orl
psrlq
inc
mov
stc
loop
pop
push
iret
dec
inc
inc
pop
lock
test
add
cmp
mov
roll
cmpb
mov
cmp
aam
mov
push
fcoml
repnz
les
xchg
repz
cs
pusha
add
lea
xor
and
ljmp
je
cmp
sbb
mov
mov
lahf
jg
push
dec
jmp
loope
sub
sub
fsubrs
dec
or
jns
sahf
mov
sub
push
dec
inc
mov
jno
ror
test
rcrl
dec
push
mov
add
fucomp
dec
add
xchg
mov
mov
repnz
and
les
dec
mov
jns
push
scas
jae
insl
scas
insb
add
das
pusha
loope
jne
call
push
xor
testl
jecxz
xchg
lock
dec
int3
dec
sub
stos
mov
std
jns
stos
arpl
andl
sbb
push
xchg
xlat
sbb
insb
in
sbb
push
std
stc
mov
mulb
mov
jo
lock
pop
test
mov
ljmp
lods
shrl
cwtl
xor
in
lea
xor
cltd
icebp
jp
and
mov
ljmp
jo
mov
inc
rorb
ficoml
cmpsl
xchg
mov
test
int3
mov
jp
xor
jne
in
sub
jno
loopne
pushf
cmp
bound
mul
decb
sbb
imul
sub
push
xlat
test
xor
and
cmp
std
adcb
push
or
jp
mov
mov
lods
and
stos
outsl
fs
in
mov
sbb
shlb
sbb
shr
fstl
jmp
or
xchg
xchg
imul
jmp
sarb
sub
lock
jle
cmp
lea
pop
ret
rclb
sbbl
andb
fs
rcll
xchg
out
add
daa
mov
movsb
mov
or
or
int
push
pop
and
lret
pop
sub
sbb
inc
test
jno
ret
nop
cmp
leave
aam
cmp
in
lcall
add
fcoms
sbbb
push
clc
sub
cmpb
mov
add
xor
adc
in
dec
cmp
adc
cs
ret
cmp
cmpsb
mov
cmpsb
push
cmpsb
xor
ljmp
push
movsl
pop
cld
mov
filds
jo
hlt
dec
push
out
add
jmp
jmp
stos
jnp
jecxz
push
or
mov
in
sarb
out
aas
fmulp
mov
xchg
or
mov
mov
cld
cmpb
cmpsl
adc
shlb
out
stos
add
add
out
test
stos
je
mov
shll
imul
lock
inc
aaa
mov
repz
jo
imul
jg
loope
xor
jle
jmp
xchg
and
out
pop
clc
daa
xor
fstpl
outsb
mov
int3
cmp
fbstp
push
xchg
jne
scas
jg
mov
aam
push
pop
mov
or
stc
fwait
js
cmp
xor
jae
xor
gs
daa
pusha
cmp
cltd
push
adc
and
aas
das
lock
xchg
adc
jnp
fimuls
push
sbbl
inc
mov
xchg
call
mov
scas
sbbl
sub
sahf
insb
leave
xor
mov
jg
lods
rorl
lods
pop
outsb
mov
jge
mov
mov
add
xor
xchg
lcall
cli
gs
bound
pop
shl
push
pop
repz
adc
std
inc
stc
mov
ds
inc
jns
lods
sti
inc
cmp
mov
or
pop
out
cmp
cmpsl
pop
fldcw
push
rorl
jns
faddl
movsb
or
push
add
jne
int3
call
sahf
and
inc
daa
add
adc
mov
push
or
push
jmp
inc
xchg
or
shrb
sbb
outsl
rclb
pop
leave
mov
adc
fimull
or
nop
add
mov
inc
lret
add
xchg
xlat
fwait
mov
jnp
dec
jg
pop
push
mov
ret
lea
shr
mov
inc
out
xor
push
adc
std
sbb
pop
and
mov
mov
scas
mov
sub
cmp
and
dec
lret
gs
jbe
jo
es
push
test
retw
xchg
add
gs
test
xchg
push
aas
call
and
int
repz
test
in
insb
xchg
xchg
or
call
inc
dec
push
in
and
lcall
dec
mov
shll
jo
test
std
jl
dec
adc
cmp
or
stos
sarl
lea
gs
mov
cmp
fstl
jns
outsb
and
popf
jo
jecxz
pop
dec
adc
hlt
loope
idiv
mov
sub
pop
or
stc
mov
pusha
mov
movsl
adcl
xchg
cmpsb
sbb
sub
add
push
jb
add
xchg
add
fcmovb
add
push
add
imul
push
mov
mov
jb
xchg
mov
jg
dec
or
icebp
mov
xor
pop
xlat
je
push
pop
xor
int3
dec
stos
mov
cltd
xchg
ss
inc
test
mov
xchg
mov
sub
aaa
xchg
movsl
pop
or
xchg
inc
outsl
pop
inc
mov
add
or
push
sbb
pop
lcall
ss
jp
jnp
test
movsl
aam
adc
fdivrs
and
fistl
push
dec
clc
cmp
dec
mov
jnp
and
or
stc
dec
sbb
nop
lea
ss
stos
add
inc
ret
jl
jmp
adc
test
clc
add
icebp
or
mov
popa
xchg
aam
popl
pushf
cmp
push
mov
mov
jb
call
add
lea
in
out
mov
lock
leave
sbbl
xor
filds
adc
addr16
dec
roll
lcall
mov
mul
rcrb
cli
rcr
aad
jl
cld
xchg
filds
leave
outsl
pop
in
movsl
cmpsb
fdivrs
push
pop
lahf
stos
inc
cltd
repz
lret
jge
aad
sub
sbb
mul
iret
xchg
push
sarb
dec
fs
adc
scas
pusha
inc
ss
push
fmuls
popa
int
push
mov
dec
fnstsw
add
jl
mov
jg
cmp
and
and
addr16
mov
and
test
add
das
xor
cmp
call
and
xchg
in
scas
std
jae
daa
test
and
jp
pop
add
mov
addb
iret
jge
cmpsl
icebp
call
comiss
push
test
dec
jno
pop
sub
loope
repz
fs
dec
pop
in
dec
xchg
out
fiaddl
jp
jmp
add
fs
adc
pusha
cs
aam
lret
out
sbb
xor
lret
loope
and
mov
pop
jbe
xor
push
xor
sahf
popa
fcmovne
push
scas
and
pop
mov
in
repnz
mov
xorl
outsl
std
add
xchg
xor
outsb
sti
pushf
and
pop
dec
xchg
push
sub
out
xor
xor
jge
in
or
fldcw
mul
cmp
and
mov
popf
add
mov
insb
cmp
das
push
mov
cmpsb
mov
insb
pop
adcl
fcoms
cmp
mov
add
or
xchg
aad
mov
frstor
fidivrs
push
leave
xchg
out
push
jge
xchg
sti
dec
sbb
aaa
add
dec
fs
xor
test
mov
jo
imul
fcomps
push
pop
mov
adc
rcrb
daa
sub
dec
hlt
fmuls
dec
loop
sahf
or
and
xor
xchg
mov
or
out
dec
xor
roll
push
or
ficoms
cltd
cwtl
jnp
add
imul
fbld
push
cmp
mov
and
push
push
pusha
insb
jl
cmp
pop
add
inc
xchg
xlat
lods
shlb
mov
cld
subb
cmc
inc
adc
cld
cwtl
mov
xlat
imulb
sbb
les
test
sub
push
lods
push
out
inc
fdivs
jge
jge
fadds
rdmsr
mov
adc
pop
in
or
or
movsl
xor
mov
imul
mov
mov
int3
movsb
std
mov
cmp
xchg
jge
xor
mov
jle
out
ret
mov
std
cmp
pop
xor
and
pop
rorb
ds
xchg
inc
outsl
out
and
xchg
lock
loopne
pop
and
ja
aam
out
mov
dec
jb
nop
jle
cmpsb
push
mov
and
jae
sbb
sub
lods
fwait
xchg
aad
xchg
adc
pop
mov
cmpsb
mov
out
push
into
cmc
add
ret
ss
lds
fs
push
push
xchg
popf
jecxz
cltd
adc
insb
sbb
push
clc
push
pop
xchg
add
icebp
pop
mov
aam
rcll
xchg
in
test
hlt
adc
add
into
xchg
ss
stos
daa
sarb
inc
add
jle,pt
out
cmpsl
orl
aam
cmc
adc
push
cs
gs
mov
stos
insb
sbb
fdivs
ret
sbb
das
dec
repnz
and
or
lock
cmc
cli
push
cmpsl
cmc
lods
xor
mov
cmpsl
in
outsb
add
sub
fs
aaa
xlat
inc
mov
fsubrl
or
xlat
test
adcb
xor
pop
push
push
cs
jnp
sub
outsb
pop
jae
pop
mov
loop
cmp
xor
or
loopne
ss
pop
xchg
lods
sub
mov
jo
call
outsl
aas
and
test
pop
xor
push
mov
sbb
insl
mov
cwtl
mov
cs
ja
xchg
notb
cs
jns
sbb
pop
mov
dec
lock
push
lret
pop
pop
fsub
mov
cld
imull
fists
push
in
daa
or
pop
subl
cmpsb
into
mov
inc
outsb
xor
int3
push
out
rcll
mov
pushf
aaa
lods
psubusw
lods
dec
sub
cs
mov
mov
jb
fnsave
scas
dec
mov
lods
pop
push
sbbb
push
xchg
psrad
add
inc
jg
pop
outsl
and
jge
popf
in
ds
stos
pop
cmp
sarl
mov
adc
add
push
hlt
cmp
adc
push
or
out
addl
clc
xchg
repz
or
and
cmp
cmp
pop
inc
pop
sbb
jnp
pop
jge
and
sarb
lea
outsl
addr16
mov
sti
dec
add
bound
or
mov
mov
sti
iret
inc
sub
cld
out
push
rcll
or
xchg
cmp
adc
shrl
xchg
or
mov
test
rcll
dec
and
pusha
std
inc
sub
mov
stc
and
mov
push
lods
mov
stos
cli
fisttpl
pop
inc
push
mov
jno
mov
dec
inc
pop
inc
sti
or
push
pop
push
cmp
iret
pop
shufps
lea
jle
push
push
mov
pop
sbb
mov
mov
push
fldcw
sub
sbb
cmp
mov
cli
lret
cli
jmp
sbb
adc
lods
xchg
cmpsl
out
ljmp
push
pop
mov
add
daa
fwait
pop
sbb
aaa
mov
scas
fnsave
push
jecxz
arpl
and
push
aam
push
outsb
mov
mov
sbb
rorl
or
mov
pop
outsb
in
mov
inc
inc
push
icebp
push
fdiv
in
or
cmc
imull
scas
iret
sbb
add
lock
mov
pop
lods
push
into
ret
cs
mov
cmpsl
ljmp
insb
test
ret
and
cmpsb
inc
mov
jne
pop
cs
mov
subb
fs
insb
shlb
inc
in
pop
inc
in
into
jmp
movsl
jmp
mov
lods
sbb
jo
test
and
pop
cs
sub
mov
or
cmpsl
sub
inc
push
cmp
jl
lcall
shrb
lods
inc
jae
mov
out
adc
dec
dec
dec
push
add
xor
je
aam
iret
les
out
mov
or
call
mov
in
jo
fdivrs
lret
in
mov
test
xchg
mov
fsubr
popf
pop
ljmp
and
xchg
aad
mov
lods
jmp
or
pop
inc
xchg
rclb
mov
inc
jecxz
inc
cli
push
aas
movsl
xor
sub
mov
cli
dec
cmp
mov
dec
mov
jge
xor
je
mov
addr16
jp
data16
inc
cwtl
mov
mov
hlt
jae
dec
je
sbb
mov
adc
outsl
je
in
push
or
cs
shl
lea
and
mov
orb
xor
mov
adc
in
aaa
push
cwtl
call
lcall
jae,pn
ret
and
fldenv
jae
ret
test
cmpsl
out
adc
lock
inc
push
xchg
inc
xchg
lods
jmp
call
dec
ror
test
fsubrs
rcrb
inc
xchg
xchg
or
lods
mov
mov
lret
mov
imul
mov
xchg
icebp
jecxz
das
sub
shlb
mov
xlat
pop
out
std
lcall
xchg
ret
adc
xlat
push
push
aad
add
jae
mov
xor
pusha
ja
rcll
jge
inc
sbb
xchg
inc
add
stos
push
nop
mov
or
cwtl
push
sub
pusha
push
sbb
clc
fs
mov
test
addr16
call
out
mov
jle
pop
int3
mov
out
mov
dec
jp
xchg
fwait
lock
dec
lods
idivb
push
jecxz
pusha
mov
pop
jmp
pop
cmp
or
ret
dec
pop
repz
pusha
in
xchg
inc
imul
addr16
jns
aas
ret
hlt
xor
adc
xor
add
dec
fdivp
mov
orl
fisttpl
add
sbb
jl
push
cld
int
push
int
add
or
push
fdivl
test
pop
fs
pop
fst
cmpb
and
push
inc
jnp
cld
stc
data16
xchg
iret
cmpb
pop
testb
adc
and
cmp
lds
xchg
or
fmul
jno
pop
loop
sbb
icebp
dec
or
sub
xor
mov
dec
lea
sub
and
mov
enter
sub
jbe
push
and
les
pop
xchg
gs
and
jnp
shlb
mov
and
in
out
test
push
jae
and
mov
out
add
cmp
pop
xor
out
sbb
xor
rcl
out
xor
or
popa
dec
out
mov
xor
bnd
out
cmc
inc
gs
dec
popa
das
push
sub
jecxz
aad
out
xchg
xlat
xchg
cli
nop
das
js
das
jno
xlat
repnz
inc
out
push
mov
jnp
into
cmp
push
xchg
dec
add
cmp
popa
push
cmc
inc
or
inc
daa
xor
iret
ret
xchg
mov
arpl
xor
dec
push
lahf
push
int3
out
ret
je
lds
add
inc
push
jle
sbb
and
jne
or
mov
xor
mov
bsf
inc
add
fisttpll
std
jge
cld
std
fdivr
jns
and
mov
push
pop
pushf
dec
mov
jp
icebp
push
add
add
push
dec
jae
xchg
or
daa
cmp
rolb
lahf
mov
sub
aaa
xchg
lret
out
xor
push
cmp
ret
push
jmp
and
xor
jmp
insb
push
push
fstps
lods
cli
inc
test
cld
rorb
divl
jbe
dec
cli
stos
sarb
iret
idivl
loop
jb
mov
insl
jnp
push
jmp
dec
mov
sub
sbb
and
gs
sbb
xor
mov
xchg
lods
call
adc
xor
test
fdivp
mov
xchg
mov
cli
subl
push
mov
loop
jecxz
xlat
mov
or
call
movsl
ret
sahf
adc
sub
aas
les
je
mov
pop
sub
test
xchg
add
cmp
xor
add
dec
mov
cli
ret
pop
das
mov
push
fisubrl
arpl
mov
mov
pop
lea
push
andb
and
push
out
push
adc
push
fndisi(8087
movsb
imul
xchg
push
push
bound
jp
in
loop
jecxz
jbe
popa
jnp
dec
push
test
jl
icebp
ss
into
movsl
enter
fisttps
mov
loopne
stos
bound
jno
wrmsr
lods
adc
push
out
adc
adcl
mov
clc
xchg
out
lahf
push
pop
xor
popa
insb
daa
inc
pop
mov
ss
or
popf
and
ds
xchg
nop
push
clc
inc
mov
mov
lods
xchg
stos
insl
jmp
sub
mov
loop
mov
loopne
ret
xchg
sbb
rolb
aaa
insl
jg
inc
or
loope
daa
jne
add
xchg
pop
sbb
push
nop
mov
or
or
ret
xchg
mov
ret
pop
mov
jecxz
das
pop
movsb
xchg
adc
cmc
addr16
iret
aam
insb
push
loop
ret
ljmp
push
mov
mov
xchg
arpl
arpl
pop
shll
push
dec
jmp
pcmpeqd
push
mov
sbb
shll
sub
xlat
fisubs
sub
and
xchg
add
adc
hlt
or
movsb
jge
jnp
outsb
jnp
or
stos
addr16
adcb
je
lahf
movsb
xchg
scas
mov
pop
push
xchg
les
adc
mov
test
sarb
xlat
out
popf
adc
dec
mov
lods
sub
in
cltd
adcb
and
xchg
pop
add
dec
sahf
mov
mov
je
icebp
add
fstpt
jnp
xchg
repz
pop
inc
ss
inc
ud1
repz
fucom
xor
faddp
in
jnp
mov
mov
fldenv
adc
pushf
pop
fidivrs
sbb
xor
pop
sbb
mov
jns
mov
loope
xchg
sti
xor
inc
lea
fwait
mov
pop
cltd
push
xor
inc
stc
stos
xchg
insl
sbb
lret
inc
adc
push
lock
iret
jne
add
aaa
sub
cmp
popf
icebp
jbe
hlt
movsb
hlt
test
stos
clc
stc
fidivrs
ja
xor
bound
dec
into
ljmp
jne
mov
insl
push
int
add
popf
into
insl
or
arpl
insb
sub
imul
inc
pushf
out
and
cmpsb
enter
xchg
lock
xor
aam
lods
jne
in
dec
test
dec
mul
mov
out
push
xchg
jmp
xor
pop
add
push
push
test
dec
push
inc
xchg
dec
pushf
xor
lret
add
mov
fidivs
push
lret
jb
jmp
jno
or
lcall
lock
xor
fists
xor
shrb
divb
out
cwtl
dec
or
sahf
jmp
out
hlt
xor
sbb
jp
pop
adc
add
jecxz
std
push
ja
fwait
dec
scas
pushf
dec
ret
jo
cmp
xchg
xor
push
mov
mov
adc
mov
pop
mov
jb
xchg
dec
push
call
mov
add
lret
inc
movb
lods
dec
mov
arpl
jmp
repnz
push
mov
into
add
inc
inc
lods
dec
add
loope
push
sbb
insl
icebp
in
fnstenv
shll
stc
pcmpgtw
xchg
dec
das
fdiv
cmpsl
repnz
fadds
and
mov
xchg
mov
jle
ja
jmp
aad
and
lahf
int3
mov
lods
xchg
dec
loopne
cmc
pop
jo
icebp
jg
mov
jmp
or
pop
cmp
adc
sti
fwait
dec
iret
mov
add
mov
cltd
jae
and
adc
inc
and
hlt
enter
popf
jns
addr16
and
das
data16
push
xor
loope
mov
pusha
insb
sub
jbe
pop
movsb
mov
jbe
dec
out
adc
lods
out
ljmp
mov
push
jae
pop
push
dec
jb
pushf
scas
xchg
jnp
xlat
add
push
pushf
test
pop
fistps
ds
jae
mov
inc
jbe
call
sbb
mov
or
pop
dec
sarb
jb
xor
xchg
mov
xor
push
pushf
inc
psubusw
cmp
dec
repnz
push
dec
pop
ds
push
test
imul
mov
insb
mov
cmp
push
xorl
push
inc
fsts
test
and
mov
push
or
or
and
push
dec
out
lcall
mov
insl
loope
xor
inc
pop
push
std
ss
test
and
add
clc
push
xchg
cmpsb
frstor
dec
add
sub
fs
fdiv
jle
sbb
movsl
dec
je
pusha
je
mov
dec
xchg
js
cmpsl
adc
stos
loopne
in
mov
add
nop
cmp
adc
popa
and
jb
outsb
mov
inc
xor
push
roll
jle
mov
xor
push
or
and
ret
in
jmp
xchg
or
sub
push
xchg
jo
push
enter
or
push
and
pop
mull
mov
stos
cmp
xchg
push
lahf
adc
adc
lods
nop
adc
or
cmp
push
xchg
out
enter
ficomps
popf
jmp
push
shlb
add
pop
das
popf
in
xorb
mov
adc
enter
and
mov
jle
jp
dec
rcl
ret
push
in
scas
mov
adc
imul
aad
mov
outsb
filds
fwait
aad
fwait
fs
push
sbb
inc
jmp
hlt
insl
std
cli
inc
mov
mov
inc
scas
xor
cmp
ds
bound
loopne
nop
push
sub
shl
jbe
mov
shl
movsl
push
mov
stc
mov
push
adc
jecxz
pop
daa
mov
aas
dec
repnz
inc
ret
pop
mov
xlat
fcom
dec
mov
cwtl
fucomi
and
aaa
cwtl
adc
hlt
call
mov
push
xchg
addr16
lds
notb
ss
int
imul
and
jge
sub
sbb
mov
adc
shrb
loope
daa
jbe
mov
clc
xchg
xor
int3
mov
lods
sub
adcb
inc
pop
jl
idiv
jecxz
and
int
inc
xor
xor
mov
insb
test
push
icebp
sub
in
xchg
jp
daa
in
jmp
in
in
pop
lea
dec
inc
clc
dec
in
pop
int3
fldcw
scas
mov
push
mov
cmp
mov
pop
push
popf
icebp
test
push
repz
sarb
test
insl
mov
mov
lcall
and
xor
jae
inc
add
adc
add
xor
leave
int
push
sahf
sub
jnp
incl
push
int3
jnp
stos
sbb
popf
and
xor
cmp
push
xor
xchg
sahf
xlat
sub
jecxz
mov
xchg
fisubrs
adc
adc
out
xchg
insb
sti
ja
fcomi
scas
mov
lods
cmc
movsl
shr
sub
fistpl
dec
mov
fdivs
je
pop
pop
jecxz
add
mov
sbb
jns
sti
orl
cmp
sahf
outsb
add
ret
js
lahf
iret
adc
nop
xchg
mov
adc
rol
sbbl
shr
in
inc
adc
and
loope
sbb
mov
mov
push
out
in
jl
test
rorb
push
xchg
nop
xor
xchg
mov
lea
xor
cmpsl
sar
mov
xor
mov
xchg
stc
or
cwtl
mov
cmc
mov
nop
push
adc
xor
mov
cwtl
cmp
les
lea
xor
shll
adc
mov
lea
in
fstpl
ss
mov
push
loope
jnp
cmpb
mov
or
jbe
adc
add
sbb
xchg
dec
ss
loop
jecxz
fiaddl
jo
leave
outsl
cmpl
mov
dec
loope
mov
fstpl
mov
andb
faddl
rclb
cld
aam
filds
push
pop
stos
add
or
lds
cmpsb
test
mov
xor
jp
mov
rorb
mov
mov
test
pushf
popa
jnp
xchg
sti
jo
xor
jg
sbb
cmp
cmc
subb
pop
mov
hlt
sbb
sbb
arpl
pop
push
jp
arpl
jp
popf
in
sahf
inc
lahf
mov
push
fists
mov
loop
push
cmp
adc
mov
push
gs
cmp
or
jae
rcr
fnstenv
mov
aaa
mov
jnp
lcall
loope
sub
and
mov
pop
jp
xchg
in
mov
sahf
jg
cmpsl
mov
mov
test
ss
mov
fucomp
inc
push
decl
jns
lcall
add
mov
out
pusha
scas
pop
in
iret
inc
mov
int
sub
adc
inc
pop
inc
test
pop
dec
ss
movsl
and
jp
enter
add
inc
dec
xchg
js
das
add
push
jno
sbb
pop
leave
jp
sub
in
data16
and
xchg
test
mov
loop
shrb
mov
xor
stc
leave
push
xchg
shlb
jg
test
xor
push
and
ficomps
cmpsl
mov
not
mov
pop
add
aam
dec
push
and
pop
xchg
sti
nop
and
mov
mov
mov
mov
aad
ficompl
enter
push
jo
jmp
dec
aas
add
fs
dec
arpl
ficompl
repz
lods
pop
in
fwait
insl
clc
int3
imul
fidivs
jecxz
cli
cmpsl
cmp
mov
movsb
dec
adc
in
xchg
mov
std
dec
lods
mov
mov
out
lret
or
jbe
outsb
or
push
or
xor
mulb
or
add
lea
and
leave
pop
and
add
mov
add
in
je
jle
loopw
sbb
push
adc
and
and
xchg
mov
xchg
push
pop
jne
adc
hlt
adc
cmp
lret
adc
mov
jne
ja
or
push
cmp
mov
int
lret
adc
push
mov
mov
push
mov
sahf
adc
push
cwtl
fwait
sbb
daa
and
mov
imul
sub
aaa
pop
cmpsb
cwtl
cwtl
rclb
xchg
push
inc
popa
addb
jne
fstpl
adc
inc
xchg
lret
sbb
mov
mov
mov
jnp
add
adc
jl
mov
stos
or
in
cmp
arpl
fcoms
add
pop
cltd
out
cwtl
inc
loope
cmc
xlat
jae
or
push
mov
sub
loope
push
xor
ljmp
adcl
adc
jecxz
mov
push
addr16
pop
mov
jmp
lods
insb
repz
out
cmc
pop
jmp
and
dec
add
inc
fcmovnbe
in
mov
add
and
movsl
jns
inc
push
push
in
jne
adc
mov
cmp
mov
mov
jmp
ja
or
mov
add
test
mov
xchg
inc
xchg
adc
cmp
adc
xchg
int3
jae
push
or
fmul
mov
hlt
cli
xchg
faddl
popf
ret
sub
loope
sar
fwait
dec
test
mov
adc
pushw
inc
jle
lods
jle
or
push
mov
lea
jno
push
cltd
xor
push
adc
xchg
cld
mov
adc
or
adc
sti
xor
xor
sub
xchg
pusha
or
cmp
cmp
test
ret
fistl
loope
sub
jg
jne
dec
mov
rcrl
sarl
inc
fstps
shlb
ss
int3
xor
mov
out
nop
lods
subl
jecxz
cli
les
xchg
jbe
adc
sbb
lea
out
loop
adc
jb
call
es
dec
das
mov
cmp
sbb
pop
mov
xor
xchg
aam
xchg
or
out
rorl
popa
jge
xchg
dec
sub
cmpl
add
scas
add
nop
aam
andl
inc
scas
ljmp
mov
cs
dec
fucomp
imul
ret
sub
ss
mov
sarl
push
mov
ret
in
stc
jbe
stos
lods
icebp
pop
rcrb
mov
xchg
and
pop
jae
in
subb
mov
xor
xor
stos
mov
pop
mov
fs
repnz
and
stos
sbb
es
mov
cmp
inc
and
xchg
inc
dec
xchg
pop
scas
hlt
fwait
cwtl
les
dec
mov
iret
or
sub
aad
out
out
add
cmpsb
xchg
xchg
dec
mov
je
xchg
daa
aaa
push
mov
dec
add
mov
mov
sbb
or
shl
pop
sahf
jl
in
and
ret
dec
cmpsb
jnp
jbe
pop
cmc
mov
xchg
das
sahf
push
push
jne
sbb
mov
mov
add
sbb
sbb
lock
and
mov
push
push
sub
aam
mov
ret
jnp
xchg
cld
ret
add
out
adc
dec
and
aas
pusha
inc
out
push
sbb
aas
mov
adc
sbb
mov
orl
outsb
adc
ss
fs
mov
push
and
enter
gs
add
push
insl
std
jnp
enter
hlt
adc
jecxz
sub
adc
jp
notb
jmp
adc
jmp
mov
and
sar
outsl
push
pop
enter
icebp
into
jg
jno
mov
sbb
enter
cltd
dec
shr
xor
cltd
outsl
and
mov
push
mov
mov
cmpsb
imul
add
lahf
negl
cmpsb
shl
sbb
clc
fwait
rcr
fs
aaa
call
movsb
and
test
insb
push
into
aaa
scas
xor
cmp
sub
jp
outsl
inc
rolb
mov
sub
xor
mov
and
rclb
sub
cmpsb
ret
test
lcall
dec
fsubs
jg
and
addl
loopne
mov
sbb
mov
pop
sar
enter
xchg
cs
xlat
std
add
jo
popa
jp
sbbb
inc
dec
xchg
dec
cmpsb
cmp
jbe
mov
inc
dec
lods
loopne
sub
mov
negb
sbb
lcall
xchg
inc
testb
fwait
out
cmp
push
rolb
xchg
inc
mov
xchg
mov
out
aad
lds
pop
out
push
mov
sarb
pop
call
or
pop
pushf
add
loopne
into
stos
sti
test
sbb
adc
frstors
lret
pushf
mov
cwtl
into
lods
cmp
mov
xchg
xor
push
xor
push
add
pusha
push
push
mov
push
or
jmp
push
sbbb
mov
stos
dec
jecxz
out
lds
stos
add
jae
icebp
dec
xchg
xchg
in
mov
mov
cwtl
xchg
mov
jl
stc
mov
push
out
xor
cmpsb
sbb
pop
mov
aad
mov
pop
fdivs
sbb
sahf
roll
push
push
pop
ss
loop
fstpt
movsb
cmp
sub
jae
jno
push
pop
imul
dec
aaa
pop
dec
cmp
xchg
xchg
lcall
aas
jne
xorb
in
cld
lds
push
ret
push
dec
push
ret
stos
xor
cmp
inc
mov
into
mov
outsb
repz
pop
pop
mov
jle
inc
xchg
mov
mov
push
sub
xchg
push
jne
jg
ja
sbb
into
stos
xor
into
negl
cmpsb
int3
pop
fnstcw
add
call
mov
inc
jle
lahf
mov
popa
jnp
imul
jno
lret
xchg
aam
sbb
jl
pop
push
lock
jae
xor
in
jg
outsb
jb
mov
xchg
out
mov
cmpsl
mov
or
stc
push
imul
adc
mov
push
shll
mov
leave
ja
outsl
push
cmp
stos
and
js
aas
xchg
and
xor
and
outsl
inc
scas
mov
xor
rcll
repnz
fprem1
cmp
sub
push
in
pop
push
cmp
cmpsl
int3
pushf
or
dec
xchg
hlt
mov
push
dec
pop
fldl
ret
and
es
fisubl
fidivrl
pop
mov
repnz
insb
dec
sbb
fisttps
call
mov
dec
push
cmpsb
iret
cli
push
stos
inc
aas
std
dec
leave
mov
popa
cli
mov
cmp
mov
or
push
cmpsl
jg
inc
ret
pushf
dec
mov
fcoms
call
das
stos
lcall
pusha
fwait
push
jp
mov
xchg
xchg
pusha
adc
pop
aaa
push
sub
aaa
enter
lahf
movsb
push
out
mov
sub
mov
push
out
icebp
enter
or
enter
das
xchg
adc
imul
lods
fisubrl
aam
cwtl
mov
das
jb
rcll
incl
add
cmp
push
add
movsb
stc
jnp
into
or
cwtl
imul
xor
lret
out
pop
pop
cmpsb
mov
sub
js
nop
mov
shl
sub
jbe
in
xor
dec
popa
sbb
out
orb
test
pop
cmp
ret
das
out
jge
nop
mov
sbbl
movsl
xchg
jne
sbb
mov
int
scas
ja
enter
test
mov
mov
adc
xor
mov
mov
cmp
loope
in
pmaddwd
add
add
cld
mov
lods
add
jge
repz
in
xor
adc
aam
orl
fmulp
mov
cmp
add
sub
jbe
jno
insb
insl
aas
insb
cmpsl
xorb
mov
gs
pop
je
push
mov
cld
or
and
dec
mov
or
cmp
pusha
rorb
ljmp
xchg
pop
cmpsb
lods
mov
in
fistps
jl
dec
mov
cli
cmp
cmp
sub
jns
pop
lds
fcom
and
hlt
ljmp
dec
sbb
fidivs
push
pop
out
lock
div
out
cmp
in
ret
in
fmul
push
sbb
inc
or
popf
sub
lahf
mov
mov
xor
scas
in
ds
notl
ljmp
xchg
xchg
idiv
mov
incb
mov
popf
movsl
mov
pop
stc
sub
jg
add
jmp
int3
or
mov
inc
jle
test
les
cmp
push
shl
enter
and
inc
arpl
sbb
repnz
sbb
enter
pop
mov
pop
ja
les
pop
loop
xchg
leave
xchg
insb
dec
pop
jo
mov
sub
lcall
stos
lods
mov
jge
ret
stc
lods
scas
pop
sbb
sub
adc
cmpsl
xor
loop
sub
lret
and
mov
xchg
in
andb
out
xchg
movsl
insl
push
xor
inc
dec
dec
jecxz
fwait
cli
bound
es
ret
cmc
xchg
jo
jl
repz
inc
sub
push
notl
xor
outsb
mov
lods
fdivrs
test
shll
jecxz
push
fadds
dec
insb
sbb
push
out
push
sti
xor
movsl
xchg
nop
xor
mov
scas
aad
movsl
xor
fdivl
filds
mov
jo
or
pushf
dec
mov
popa
leave
push
or
mov
jns
inc
lock
cmpsl
out
ss
pushf
lock
push
or
loopne
mov
popf
push
insb
fidivl
cmp
adc
xor
outsl
loopne
inc
pop
aam
cmp
lock
nop
ja
cmpsb
cmp
mov
cmp
outsb
add
divl
imul
mov
fsubr
mov
out
xchg
mov
mov
ret
inc
mov
jge
jb
out
pop
loopne
daa
cmp
bound
jne
dec
inc
xlat
in
es
sbb
jb
jmp
mov
and
jnp
lcall
jmp
jl
ja
xor
fs
lods
scas
fsub
mov
or
mov
jg
les
mov
in
pop
or
sbb
lahf
fucomi
mov
pusha
push
adc
pop
push
repnz
add
sub
rcr
jecxz
cmp
fstps
dec
inc
xchg
ror
add
dec
out
cmp
icebp
iret
insb
jg
mov
pop
cmp
add
push
mov
cmp
fwait
aas
adc
jecxz
push
add
je
push
sti
std
sbb
jmp
pop
adc
stos
mov
mov
pop
xlat
cld
mov
test
out
clc
sub
mov
mov
or
adc
repz
xchg
jmp
jo
daa
adc
mov
jmp
addr16
add
sahf
movsb
iret
mov
mov
pop
xor
repz
loopne
sbb
sarl
das
mov
mov
push
mov
xchg
cmpsl
xchg
fidivrs
in
pop
ret
mov
mov
arpl
decl
popf
xor
pushf
mov
stos
lea
repz
jno
inc
insb
loopne
xorb
mov
int
nop
cltd
jg
pop
add
bound
inc
ds
xor
jmp
cmpsb
and
mov
insb
pop
ret
daa
adcl
xlat
fldenv
jnp
int
mov
mov
mull
add
das
xchg
mov
sti
dec
mov
push
pop
rol
in
data16
mov
cli
ljmp
mov
xlat
std
mov
mov
mov
sub
adc
cmp
jle
xchg
pop
in
xlat
mov
sbb
inc
sahf
push
mov
inc
mov
xchg
inc
data16
cmp
mov
rorb
xor
or
aas
jecxz
clc
stos
inc
jbe
mov
add
jl
push
xchg
push
pop
mov
mov
adc
sub
in
and
lea
add
call
cmpsl
jle
cmp
add
or
in
mov
movsb
ss
add
mov
andl
push
out
or
xchg
into
fldenv
dec
and
mov
cmp
scas
adc
in
dec
push
jecxz
ficompl
aaa
je
sbb
sub
enter
mov
cwtl
sar
jnp
mov
mov
fstps
or
out
fsubrl
pop
push
pop
push
and
mov
cltd
adcl
lea
add
ljmp
scas
insl
pop
loope
in
push
mov
arpl
dec
and
ficomps
push
adc
push
jo
cmpsl
scas
sbb
fldl
jg
adcb
mov
push
push
mov
inc
push
jecxz
bound
dec
sbbb
lea
orl
popa
jl
gs
cs
fsubl
in
push
sbb
xor
mov
fldcw
add
or
add
push
inc
pop
jns
pushf
fsubrs
add
fs
leave
mov
mov
mov
or
imul
sbb
pusha
xchg
inc
in
sbb
roll
dec
loop
jecxz
lahf
mov
dec
incb
aam
xchg
je
push
sub
push
mov
sbb
push
fistps
lret
outsb
inc
mov
xor
mov
cli
jbe
jno
xor
repnz
les
fnsave
rorb
dec
rcrb
subl
std
jge
mov
dec
sub
aaa
mov
dec
dec
xor
movd
and
arpl
loopne
fidivrs
int3
dec
pop
adc
sbb
mov
dec
push
jo
mov
into
pop
int3
insb
test
pop
inc
cmp
dec
arpl
dec
cmp
cmp
mov
pop
aad
pop
sbb
dec
cld
aad
and
and
stc
mov
inc
jno
cmp
sub
add
pop
dec
or
pop
mov
lea
push
or
ret
mov
sbb
lock
in
popa
stos
pop
mov
mov
xchg
loope
subl
movsb
jge
mov
mov
add
fdivrs
and
sahf
dec
sbb
in
and
in
imul
jne
test
mov
mov
bound
scas
inc
ss
mov
pop
popa
xchg
sbb
rcrl
ret
add
loope
mov
mov
loopne
or
dec
sbb
jl
je
stc
out
xor
movsb
push
sbb
repnz
call
dec
std
enter
jp
stc
in
push
loop
out
pop
fidivrl
arpl
push
dec
mov
add
imul
fstpt
inc
fwait
sbb
add
pusha
movsl
xchg
in
in
inc
jecxz
cmp
jp
push
les
int3
pop
rcll
mov
and
insb
push
push
in
mov
sub
or
jecxz
popf
cmp
sarl
inc
add
cmpsb
popf
xchg
mov
lret
cmc
lods
jp
jp
mov
inc
into
pop
lock
lods
in
cmp
mov
negl
ret
sub
inc
out
cs
and
popf
enter
aad
mov
sahf
sti
mov
xor
xor
jno
jp
dec
sub
int
xchg
and
cmp
push
jl
cmp
jno
filds
mov
xor
sahf
mov
inc
fimuls
add
add
sub
mov
push
mov
jno
cld
mov
add
fisttps
jbe
int3
aad
shr
std
out
dec
jnp,pt
push
pop
jno
sub
fld
dec
xor
push
jmp
fistpl
mul
mov
fs
or
xchg
pop
pushf
and
mov
repnz
idivl
sbb
lret
subb
push
push
jmp
cmc
push
sub
and
cmp
insb
decl
dec
stc
jecxz
or
addr16
xor
lret
pop
jo
xor
and
mov
imul
cs
loop
pop
repz
inc
push
xor
sub
in
sbb
mov
testb
jae
inc
ja
into
dec
out
cmpsb
mov
cmpsl
mov
sti
daa
insl
sub
insl
cmpl
jge
sbb
pop
inc
in
jp
jae
insl
pop
clc
ja
das
inc
pop
lahf
xor
or
add
mov
inc
mov
out
jmp
fcoms
dec
mov
dec
loopne
adc
inc
inc
aad
add
enter
or
lds
sti
shlb
aam
mov
lds
push
xor
add
lods
jnp
sarl
insl
sbb
js
xor
push
adc
mov
rcrl
sub
in
mov
mov
aaa
inc
lret
rcl
addr16
int3
cmpsl
mov
mov
mov
xchg
int3
xchg
pop
into
push
mov
lock
jae
repz
jp
sub
mov
test
and
lea
popa
inc
ja
daa
inc
insb
sub
mov
into
cwtl
sbb
mov
mul
ss
jbe
fcoms
mov
pop
mov
jb
mov
and
sbb
or
lock
jge
mov
fwait
cmpsl
out
sbb
sub
sbb
scas
xor
lds
std
sub
mov
push
popf
mov
nop
mov
subb
lods
sti
add
pop
mov
mov
aam
dec
cli
cmpsb
clc
idivl
jne
pusha
scas
fidivs
je
fists
hlt
rol
fsubrs
xchg
daa
andb
test
shrb
sarb
push
cmp
imul
fisubs
mov
cmc
loop
mov
nop
fisubrl
jns
fmuls
add
test
std
mov
ret
imul
inc
repz
iret
adc
jge
mov
fcmovbe
enter
jb
dec
push
repnz
xor
add
xor
jp
out
inc
mov
push
or
ja
daa
pop
inc
xor
mov
enter
jnp
out
push
push
jno
xor
sub
lahf
mov
push
sub
in
cmp
push
and
inc
addl
bound
fisttpl
lahf
mov
mov
fcmovne
shrl
sbbb
pop
test
mov
push
push
out
jge
int3
jne
pop
icebp
enter
sub
mov
enter
test
pop
xchg
add
fsts
cltd
cmpsl
xor
fcomp
scas
add
jno
push
cmp
inc
frstor
leave
cmp
outsb
adc
fsub
outsb
nop
fcmovne
xor
test
jnp
mov
dec
or
adc
add
sub
jl
add
jae
inc
xchg
int3
xchg
cld
mov
mov
fstpt
mov
mov
mov
icebp
jmp
mov
aad
jmp
sbb
xchg
fs
out
insl
mov
push
ret
and
mov
lods
dec
mov
outsl
push
test
ja
es
jge
xor
repnz
jo
in
cli
push
lods
add
pusha
sarl
or
mov
adc
sbb
ja
sub
xor
and
cld
outsl
outsl
cwtl
popf
out
sarl
dec
scas
dec
push
iret
mov
aam
out
mov
ss
dec
mov
jmp
pop
push
pop
lret
pop
lret
ss
fwait
inc
cltd
orl
roll
addr16
data16
pop
mov
imul
popa
bound
fisttps
ljmp
imul
sbb
cmpsb
mov
enter
lret
in
out
inc
sub
addr16
cmp
mov
cltd
push
in
sbb
add
add
push
out
adc
inc
std
inc
arpl
dec
dec
push
sub
and
pop
jg
adc
in
lret
and
xor
sbb
data16
xorl
orb
fnsave
or
loop
push
and
xor
push
adc
sub
test
enter
bound
mov
rcll
cld
int3
lret
pop
imul
mov
fiaddl
cmc
je
jecxz
jo
mov
test
std
inc
test
je
data16
pusha
adc
adc
ss
pop
or
cmp
int3
xchg
dec
fadds
mov
or
push
cmpsl
js
or
xor
xchg
rolb
inc
idivl
loopne
cmpsl
or
mov
scas
scas
push
push
mov
xchg
sbb
ja
and
push
xchg
jb
sub
cmp
test
xchg
jno
xor
or
push
xor
add
int3
add
lret
jne
out
sub
lds
dec
xlat
adc
fnsave
fldt
nop
xchg
mov
iret
dec
lret
aas
scas
loope
inc
lcall
add
xchg
lcall
adc
dec
sbb
ret
cmpl
mov
out
push
add
mov
mov
fnstenv
dec
push
sub
outsl
pop
jbe
jg
negl
or
jno
inc
cmp
xor
sbb
jl
addb
pop
pop
mov
repnz
add
cmpl
jge
sub
fwait
or
cmc
inc
jmp
pushf
jne
push
in
cmpsl
inc
fcmovu
nop
jle
fisttps
xchg
fcoms
sub
cltd
packuswb
and
stos
xor
mov
inc
pop
xor
cmp
cmp
sub
aaa
imul
inc
dec
mov
push
xchg
mov
add
lea
jnp
aad
mov
cld
push
push
push
lret
cli
popf
insl
enter
pop
scas
test
mov
jo
rcrl
int3
inc
enter
pop
jne
xor
mov
dec
shlb
pop
cmp
aam
inc
xor
in
push
add
push
mov
call
add
sti
enter
call
mov
jecxz
js
mov
scas
sbb
dec
loope
fisubrs
sub
xor
adc
inc
outsl
pop
jmp
insl
adc
nop
pop
gs
inc
mov
popa
rcr
or
ret
addb
mov
push
in
pop
daa
xor
lret
or
or
jge
adc
fstps
cmp
es
jno
push
add
push
cmp
sbb
rorl
jl
mov
sub
popa
inc
mov
add
dec
pop
pop
xchg
mov
mov
out
jnp
jl
inc
sbbl
shlb
lahf
jg
lcall
ret
adc
mov
addr16
xor
ja
rorl
mov
cmc
jo
pop
pop
push
sbb
pop
test
out
push
jnp
mov
pop
nop
shlb
add
xor
aad
sub
mov
mov
xchg
pop
pop
dec
verr
pop
mov
sbb
daa
and
clc
popf
je
dec
out
fidivs
test
or
push
aaa
adc
push
add
inc
movsl
dec
xor
add
mov
jno
fiadds
jmp
xchg
test
xchg
adcl
dec
cmpb
mov
imul
lcall
xchg
add
daa
jae
inc
mov
xchg
cmp
test
lahf
xor
arpl
sbb
ljmp
in
cwtl
xchg
or
and
dec
sub
movsb
fnstsw
pop
pop
sub
adc
mov
dec
cmp
outsb
and
mov
jo
ss
or
mov
xor
int3
pop
jl
push
mov
add
js
sub
das
add
inc
aad
adcl
push
jnp
push
sbb
ucomiss
pop
das
and
push
cmp
stos
je
inc
adc
push
xor
sbb
outsb
cmpsl
cmp
ret
sti
push
fcoms
mulb
les
ret
xor
dec
dec
call
cmp
sbb
pop
subl
ficoml
inc
imul
adc
ret
inc
inc
shrl
into
leave
push
pop
fistps
adc
or
ds
push
ja
mov
sbb
or
jo
nop
dec
lds
sbb
test
jo
popa
mov
xor
fdivp
imul
xchg
lret
stos
mov
pop
push
sbb
xchg
or
mov
xchg
mov
fs
inc
out
sbb
cmp
pop
inc
scas
mov
jge
test
xchg
mov
mov
lods
stc
xchg
rol
aas
cmp
sub
lret
mov
jne
inc
mov
inc
idivl
cmp
enter
gs
mov
es
fcoml
pusha
pop
cmp
inc
push
movsb
data16
sbb
xor
adc
pop
test
dec
mov
rcrl
xor
xchg
cltd
sbb
xchg
cltd
jno
repz
idivl
xor
or
jg
mov
das
pop
outsl
lea
inc
fildl
cmp
jp
lret
mov
aaa
lret
mov
lret
xor
jo
sbb
mov
and
xchg
fbld
inc
sbb
std
pop
and
lea
cmpsb
mov
test
insl
and
js
imulb
ja
dec
mov
pusha
and
call
cmpsb
xor
push
mov
gs
push
add
pop
test
inc
ss
or
pop
push
mov
xor
iret
scas
push
mov
inc
ljmp
push
pop
imul
sahf
leave
jge
add
das
dec
sub
jge
xchg
fs
orl
negl
lock
pop
pushf
mov
sbb
outsl
test
or
test
mov
jl
mov
add
or
test
scas
jg
mov
mov
mov
aaa
scas
mov
sub
adc
sbb
out
lret
inc
cmpsb
jp
push
sbb
xor
ja
inc
xchg
jmp
inc
inc
jg
sub
pop
mov
ror
mov
test
pop
aad
xchg
push
in
lret
ds
sahf
ljmp
sub
daa
sarl
jo
fisubrl
mov
repz
mov
mov
bswap
adc
or
and
or
sub
ljmp
xchg
shr
aam
movsb
insl
cltd
mov
fildl
jmp
cmc
or
cmp
xor
push
fidivs
xchg
push
adc
sbb
mov
test
fsubrs
inc
lsl
jmp
add
nop
jo
add
mov
add
les
mov
mov
inc
push
sbb
fcmovne
and
je
std
push
adc
cmc
inc
addr16
sbb
ljmp
ds
ljmp
stc
xor
icebp
cld
shrb
js
aas
out
mov
ljmp
or
cmp
fimuls
out
mov
adc
dec
hlt
outsb
mov
dec
and
mov
xchg
test
pusha
dec
jg
cmp
cmpsb
jb
jp
and
adc
inc
mov
and
dec
adc
fnstenv
and
add
mov
les
lcall
push
pop
mov
cmp
enter
scas
out
jmp
stos
stos
repz
aaa
fidivl
adcl
push
xor
imul
sbb
pop
cmp
daa
test
pop
fstl
or
xor
insb
and
cmp
jns
btr
enter
daa
sub
leave
fwait
sub
dec
inc
push
jae
adc
push
fidivs
cmp
cmpsl
push
push
adc
addl
pop
pop
cltd
xchg
mov
pop
aad
test
ss
sub
imul
mov
and
mov
mov
jbe
fsin
jge
mov
cltd
inc
filds
add
ja
or
inc
inc
dec
inc
adc
dec
jae
mov
sbb
js
add
xchg
xchg
addr16
jle
out
into
xor
in
jecxz
push
cmpl
add
jge
enter
cmpb
test
out
cld
cmp
pop
mov
pop
and
mov
sbb
das
pop
push
aam
and
popa
xchg
adc
scas
mov
pop
pop
sub
jl
movsl
push
sahf
test
sti
mov
fwait
mov
adc
rorl
loopne
subb
arpl
xchg
dec
sbb
jmp
or
push
mov
push
sbb
push
into
test
cmpsb
or
les
xchg
adc
jge
mov
mov
lret
pop
adc
xchg
lods
sbb
popa
xlat
leave
cmc
out
rcr
repz
jg
and
xchg
nop
pop
pop
popl
popa
jns
sti
push
push
rcll
or
pop
dec
stos
imull
dec
xcrypt-ofb
adc
push
shr
lock
jp
mov
mov
push
pop
xchg
lret
adc
dec
inc
pop
pop
pop
addr16
filds
in
in
lds
leave
jns
je
dec
pop
xor
sbb
cs
or
inc
push
jmp
dec
test
xchg
pop
sarb
sbb
dec
idivb
or
sub
jge
insb
mov
je
in
xorl
popa
inc
push
push
add
and
imul
xor
pop
cmp
test
hlt
push
sub
jecxz
or
push
bnd
pop
xchg
scas
mov
pop
dec
call
pop
ds
push
adc
aad
imul
sbb
pop
js
or
pop
insl
mov
sbb
mov
mov
jbe
movsb
xor
outsl
fisubl
jge
jnp
sar
arpl
mov
ss
std
cld
ljmp
dec
adc
xor
leave
fistl
fwait
jae
scas
adc
pop
fs
pop
icebp
xor
jo
popf
cmp
pop
pop
inc
jno
cmpsl
and
adc
jecxz
jb
sahf
mov
cld
dec
mov
add
sbb
std
dec
int3
jns
aaa
fcmovnu
insl
or
inc
lcall
or
sarb
mov
nop
outsb
jle
sbb
rcr
pop
dec
out
lret
mov
stc
xor
je
inc
call
sti
pop
or
js
mov
dec
xchg
mov
cltd
fs
loopne
loop
or
lcall
std
insl
adc
mov
rcrb
cs
icebp
jno
aas
pusha
xchg
in
xchg
pushf
dec
and
rcrb
adc
lcall
push
fs
cmp
ret
xor
pop
cmp
xor
jae
movsl
gs
push
pop
push
fisttps
and
adc
mov
data16
pop
mov
popa
or
jmp
aam
mov
ja
testb
push
cmp
jne
adc
enter
fsts
pop
cwtl
xor
and
push
aad
in
xchg
cltd
fildll
sbbl
rcl
fstl
mov
jne
aas
mov
imul
fldenv
mov
and
daa
xor
fwait
das
aam
imul
aam
test
movsb
in
jb
sub
fldpi
stos
lock
fildll
add
mov
lods
stos
std
and
pop
ds
int
int3
sbb
scas
orb
xor
inc
mov
mov
jecxz
jecxz
xchg
xchg
test
push
out
sbbl
insl
xor
fwait
cmp
data16
lea
leave
xorl
cmp
sub
decb
inc
iret
mov
into
push
leave
push
sbb
sahf
test
scas
fnstcw
dec
fisubs
mov
xchg
mov
mov
push
subl
xlat
test
out
clc
dec
push
mov
cmpsb
inc
test
adc
mov
or
in
lock
out
fwait
sub
sub
faddl
mov
xchg
popa
inc
add
int
lea
jne
pop
std
pop
ds
add
scas
xchg
std
or
daa
and
das
int
or
xchg
adc
inc
push
mov
xchg
mov
ljmp
xchg
sub
stc
aaa
in
loope
push
sbb
mov
xchg
leave
clc
lods
push
add
inc
lcall
jcxz
in
push
xor
push
std
ficompl
cmp
pop
push
sbb
pop
and
jae
jbe
sbb
imul
or
or
xchg
loop
push
fcmovnbe
cmp
mov
repz
pop
push
fstpt
push
pop
test
push
clc
cltd
cmpsl
in
and
mov
bound
mov
dec
stos
xchg
ja
pushf
jp
inc
outsl
inc
sub
xor
test
push
cmpsb
into
xchg
fcmovu
ret
or
xchg
out
xlat
xor
ja
xchg
fists
addr16
push
daa
sub
pop
call
ret
pop
lcall
pop
cmc
mov
ja
aad
or
push
cmc
inc
iret
stc
cmpsb
adc
or
cmp
imul
rcl
cmp
aam
scas
test
xor
xor
inc
scas
sbb
jle
or
inc
xor
push
dec
cmpsb
mov
xchg
push
pop
aad
popf
adc
test
sbb
fdivrs
jnp
mov
rcrl
out
dec
sbb
cli
out
stc
nop
cmp
lea
dec
add
cmp
ret
mov
pop
test
jo
mov
lods
jns
push
xor
ds
push
scas
push
push
jb
xor
push
fstpl
loopne
jge
jne
mov
xchg
call
sti
dec
mov
sbb
sbb
jl
adc
sub
push
adc
sti
mov
aas
cmp
inc
int
jp
stos
push
xchg
mov
sub
jno
in
mov
mov
pop
pop
dec
xlat
add
inc
or
pop
cwtl
jb
ds
inc
sbb
imul
cli
outsb
arpl
push
xor
or
push
mov
stos
icebp
sub
jb
push
and
repz
sti
add
popa
lods
mov
jo
std
aaa
cmpsb
sbb
pop
dec
jmp
inc
jmp
mov
or
xor
push
jp
sub
js
push
add
push
jmp
jg
adc
sbb
out
ljmp
jl
mov
jl
pop
xchg
sub
xchg
test
test
add
mov
ljmp
mov
cmpsb
xor
int3
fcmove
fisubs
xchg
insb
sbb
or
bound
test
dec
arpl
sbb
add
inc
int
pop
cmpsl
nop
pop
fs
xchg
test
pop
test
pop
pop
pusha
xchg
adc
icebp
mov
enter
inc
sbb
pop
sbb
push
push
stos
xchg
or
xchg
loopne
xchg
add
sti
cs
inc
daa
mov
pop
lea
xlat
sbb
or
das
pop
inc
mov
aad
lret
sub
insb
jb
mov
sub
cmpsl
sbb
or
inc
and
and
test
repnz
out
inc
out
lret
lret
push
js
mov
adcl
loopne
jl
dec
clc
int3
pop
out
sarb
xchg
adc
jmp
xchg
sbb
out
pop
jle
mov
repz
mov
pop
data16
and
jl
adc
jecxz
stos
mov
lret
jae
mov
aam
mov
addr16
in
cli
sbb
dec
and
stos
repz
push
call
xchg
cmp
hlt
mov
cmp
xchg
popa
jmp
xchg
jg
jecxz
popf
hlt
mov
in
or
xorb
pop
fdivp
into
jle
lock
imul
cmp
sbb
add
push
ljmp
jecxz
lds
inc
jns
mov
mov
add
or
sbb
lret
mov
pusha
sbb
sbb
jbe
outsb
add
sbb
sub
mov
imul
cmc
movsb
inc
add
pushf
into
jno
imull
out
mov
loope
movsl
sbb
ret
pop
fimull
mov
aam
cwtl
in
out
daa
cmp
jae
jns
inc
inc
in
cmp
jmp
mov
jp
jbe
ficoml
and
or
push
enter
aad
push
inc
sub
cmp
mov
loopne
inc
add
sub
out
lcall
mov
clc
js
cli
enter
adc
cmp
xchg
lods
ret
inc
test
jle
sub
cmc
stc
jmp
push
dec
push
or
dec
outsb
out
push
popa
int
cmpsb
stc
lds
sbb
sti
insb
mov
loope
sub
or
or
in
cmpsb
push
fsubrl
aas
pop
pusha
popa
and
mov
pop
cmp
mov
adc
into
fldt
sbb
dec
mov
scas
or
js
jb
xchg
fwait
sbb
gs
rorb
mov
or
decl
jecxz
xchg
pop
inc
sub
lea
sar
sbb
sub
icebp
movsb
cmpsl
loop
dec
dec
daa
js
push
pop
mov
mov
jns
adcl
mov
mov
testl
dec
mov
sbb
insb
sub
sbb
sbb
jmp
hlt
sub
cwtl
int3
mov
dec
das
pusha
inc
cs
clc
loope
and
mov
push
fucom
jmp
push
sub
loope
xchg
add
fistps
loop
test
inc
cwtl
ja
in
pop
gs
mov
sub
stos
and
nop
fcmovu
mov
enter
mov
insl
push
push
jge
cmp
mov
cmp
shrb
inc
movsb
push
cwtl
mov
xchg
sbb
pop
inc
inc
cld
add
int
xchg
add
lods
push
fwait
int3
push
adc
sub
stos
cli
inc
and
gs
pop
sbb
or
xor
sbb
or
sbb
jg
jno
aaa
int
fdiv
sbb
push
fists
push
in
cmp
stc
adc
mov
cld
or
outsb
addb
sbb
cmp
arpl
loopne
ds
out
xchg
cmp
divl
jns
sbb
sub
pushf
cmp
jb
lcall
stc
dec
sbb
loop
mov
cmpsb
decl
rep
and
or
je
cli
pop
addb
push
je
fisttpl
jg
cli
repnz
mov
push
jno
clc
jno
mov
and
cli
aas
push
or
mov
pusha
fst
fsubrl
jl
out
fmulp
mov
xor
and
xor
adc
fisubl
aad
sub
lea
gs
jg
mov
lret
push
mov
xor
jecxz
or
decb
arpl
dec
mov
nop
lret
sub
gs
mov
pusha
pop
inc
das
add
insb
adc
pop
mov
test
out
iret
push
arpl
ja
repz
adc
mov
dec
sub
dec
jmp
cmpsl
lods
out
xlat
jne
push
push
fs
xor
lret
inc
dec
or
jo
mov
xchg
inc
push
ja
jns
xchg
push
cmp
gs
pop
jno
clc
lods
das
scas
xchg
dec
or
lcall
out
int
sbb
cs
roll
fcoml
loopne
mov
mov
jle
stos
add
clc
decb
ret
mov
mov
fucom
jp
test
std
aam
in
cwtl
cmpsl
cld
in
jo
jp
bound
int
xor
jns
and
or
fisttps
inc
pop
cmpsl
xor
pop
dec
cli
sbb
test
into
pop
mov
mov
mov
call
cwtl
pop
sbb
fbstp
adc
jecxz
shr
loope
mov
inc
dec
out
data16
xchg
mov
ss
es
out
push
pop
dec
adc
ss
inc
push
mov
and
adc
insl
insb
pop
outsl
jnp
fidivl
lds
xchg
mov
testl
pusha
cmp
pop
push
insl
lods
aas
ljmp
popf
call
mov
rclb
jns
mov
std
adc
call
pusha
mov
lcall
call
js
dec
adc
lea
inc
sbb
jns
xchg
xchg
add
inc
pop
mov
inc
add
enter
js
test
xchg
dec
and
adc
mov
inc
xor
popf
mov
ja
inc
scas
js
stos
shlb
cs
xchg
pop
mov
push
jb
mov
pusha
xchg
loope
clc
add
sbb
cmc
call
mov
loop
in
cmp
adc
pusha
xor
mov
int
jmp
cmc
cli
ljmp
lds
jb
xchg
out
dec
in
bt
lea
pop
ss
mov
outsb
adc
ret
sbb
and
push
lret
push
insb
sub
jl
ret
xchg
repz
and
les
adc
pop
pushf
push
mov
sti
mov
addl
in
xchg
mov
push
and
js
or
adc
ss
aad
aad
jo,pn
mov
cmp
add
imul
inc
xorl
test
xchg
pop
jae
mov
pop
cmpb
xlat
lret
andl
push
sarb
fadds
jo
dec
xchg
xchg
in
or
arpl
mov
jl
inc
jmp
lahf
loop
xchg
imul
push
addr16
hlt
loop
test
sub
or
repz
fwait
out
mov
adc
movsb
loopne
fsubrp
jp
add
cld
mov
cmp
mov
movsl
roll
mov
iret
fdiv
aas
push
sub
insl
inc
bound
xchg
dec
add
data16
and
loop
gs
cld
std
fwait
push
push
lods
fimuls
and
cmp
dec
movsl
and
fidivrl
mov
aas
xor
lods
sahf
fnstenv
pop
mov
nop
xchg
sub
dec
mov
outsl
lea
adc
xor
push
int
jb
fists
xchg
imul
fs
mov
loopne
mov
push
negl
xchg
xchg
sub
test
jb
xchg
cmpsl
mov
xchg
xor
test
and
decb
lods
or
and
jb
je
ss
and
push
cmpsl
setp
pop
inc
int3
dec
pop
push
dec
arpl
iret
mov
xchg
loopne
mov
add
and
lods
xor
fiadds
jb
inc
pop
mov
rol
pop
out
xchg
in
sti
mov
xor
mov
xlat
mov
fnstcw
fmuls
mov
adc
fcompl
popf
mov
and
stc
mov
es
cmpsl
push
mov
mov
mov
aas
inc
imulb
fldt
sbb
fs
int3
clc
pop
mov
in
and
adc
pop
repnz
idivl
mov
jae
in
pop
jne
aad
or
les
cwtl
inc
andb
mov
stos
clc
mov
xchg
pushf
movsl
jmp
jo
and
fcomip
mov
aaa
xchg
lahf
out
xchg
daa
jmp
mov
xor
mov
pop
stos
sbb
stos
repz
inc
xchg
mov
adc
fbld
cmpsb
adc
jle
or
pop
push
dec
addr16
dec
unpcklps
sti
and
cld
cmpsb
loope
jmp
sub
imul
fiadds
lea
xor
movb
in
test
ja
or
jg
xchg
fsubl
dec
jns
out
pushf
inc
arpl
xchg
dec
inc
xor
ja
jns
loop
inc
sbb
call
pop
and
jnp
cmpsb
call
lret
jge
les
lahf
aaa
add
pop
push
in
and
xor
fstps
pusha
sub
test
mov
mov
or
cltd
fimuls
jl
in
sub
stos
sbb
ja
and
icebp
imul
pop
mov
cltd
and
push
stos
test
pop
int
clc
push
popf
or
outsb
popa
push
jmp
pop
stos
inc
xchg
xchg
xchg
arpl
fwait
addl
dec
imul
pop
inc
adc
or
pop
in
cmpsl
mov
outsb
mov
jo
sub
xchg
cmp
faddl
push
movsl
inc
mov
mov
stc
push
jb
loope
and
adcl
hlt
pop
cmp
mov
xor
insb
insl
mov
xor
out
fistpl
xchg
push
push
jb
cmpsl
sbb
out
lock
pop
in
jle
sub
test
jg
dec
add
imul
mov
xchg
xor
test
xchg
in
or
inc
in
les
jb
inc
outsb
imul
imul
xchg
lcall
push
mov
loope
or
xchg
mov
xor
dec
xor
sub
push
out
mov
or
and
push
or
mov
inc
push
sahf
cmp
lret
xchg
add
leave
fsubs
cmp
xor
popa
cmp
sub
sarl
sbb
fldcw
mov
test
test
jp
hlt
mov
pop
imul
or
and
imul
in
sub
xor
xor
pop
icebp
pusha
mov
iret
cltd
xor
enter
adc
xchg
out
cltd
mov
pusha
adc
sub
loopne
mov
xor
cmp
loopne
ja
ljmp
xchg
pushf
adc
jecxz
sbb
in
dec
jge
hlt
popa
in
outsb
lret
or
icebp
aaa
push
jg
leave
lahf
add
in
cmpb
and
mov
sbb
sub
jo
xor
roll
stc
mov
xchg
lods
inc
das
imul
mov
cltd
loop
dec
test
ss
bound
test
cmp
movsl
sub
mov
cwtl
pop
hlt
push
out
enter
push
jle
in
mov
into
sub
xor
mov
pop
fdivs
sub
scas
cmp
and
adc
pop
andb
les
pop
sbb
jmp
mov
xchg
lock
ds
push
popa
dec
dec
jb
out
mov
dec
shrw
jbe
add
cmp
cmpsb
stc
data16
fdivr
jecxz
in
jbe
movsb
mov
push
xchg
or
test
adc
ror
push
pusha
mov
lods
outsl
lcall
xchg
cld
push
int
jno
test
sbb
in
push
test
xor
dec
jno
int
add
push
cmp
and
outsb
pop
repz
sub
mov
xchg
push
sub
scas
sar
xchg
adc
imul
outsl
sub
stc
adc
in
iret
xor
std
mov
stc
and
aaa
pop
lea
leave
lret
mov
fadd
mov
sub
xchg
mov
jmp
in
mov
add
pop
mov
lock
enter
inc
jle
and
jno
movsb
enter
jno
leave
dec
inc
sub
das
cmp
pusha
xchg
inc
mov
in
jb
lcallw
lahf
cli
fld
dec
adc
mov
cmp
aam
out
lods
push
mov
xchg
addr16
insb
ret
push
or
xchg
ljmp
ljmp
loopne
mov
push
lods
jb
push
push
in
addr16
dec
pop
xor
lret
popf
ds
xchg
loop
jmp
lcall
adc
lods
mov
and
sar
roll
rcr
sub
inc
sub
scas
sbb
lods
lahf
jecxz
jmp
xchg
aas
add
mov
xlat
sub
fldcw
repz
loopne
js
fistpl
stc
lcall
adcb
movsb
dec
jno
mov
push
sbb
lds
fst
push
pop
movsl
sbb
aas
cwtl
cmpsl
popf
stos
rorl
jge
sub
jb
loope
pop
or
imul
stos
leave
subl
inc
xor
inc
and
push
outsl
pop
push
jns
xchg
and
and
mov
mov
pop
dec
add
into
cmp
jmp
dec
pop
js
xchg
mov
and
nop
je
aaa
adc
adc
dec
sbb
ret
fnop
dec
iret
sbb
int
xchg
mov
mov
movsb
mov
xchg
push
lret
sbb
xlat
cmp
push
clc
loop
imul
push
andb
push
pop
lahf
jo
int3
sbb
imul
sbb
inc
mov
xchg
add
cli
fs
xchg
fwait
lret
dec
mov
mov
push
loopne
sub
test
push
ss
lahf
inc
cmpsb
mov
mov
xor
sub
scas
sbb
mov
dec
add
pop
loopne
cmp
cmp
xor
jno
out
xchg
test
or
cmpb
jle
pop
or
cmp
iret
scas
xor
or
or
mov
adc
dec
adc
jmp
xchg
in
push
inc
sbb
cltd
dec
xchg
outsb
xor
xor
and
subb
aam
movsb
bound
jb
sub
pusha
nop
mov
jnp
outsl
fistpl
jl
and
pop
add
in
arpl
xchg
jge
cmp
imul
and
outsb
fdivs
leave
sub
xor
or
aaa
dec
push
je
and
outsl
rclb
in
cmp
shl
outsb
daa
dec
mov
or
inc
push
jo
cmpl
test
into
jno
test
jnp
stc
sbb
add
paddb
sbbb
cld
ljmp
roll
mov
js
push
cmp
andl
rclb
test
and
loope
mov
or
sti
mov
cmpsb
cmp
popa
push
jg
pop
adc
outsb
in
mov
out
adc
mov
aam
sbb
mov
xchg
mov
ja
out
repz
outsb
pop
inc
push
jmp
cmpsb
pop
imul
jo
cmp
sbb
mov
aaa
ljmp
cli
arpl
stc
mov
icebp
jnp
ror
int
je
insb
movsb
test
test
imull
sti
mov
jge
sub
lock
cmp
push
lock
pop
and
ss
xchg
sarb
add
adc
aad
pop
cmp
mov
jg
sub
add
es
push
mov
cwtl
cmp
repnz
fwait
mov
rcrb
pusha
mov
fcoml
mov
lret
data16
pop
dec
jo
aas
dec
add
je
stos
xor
adc
cmp
stos
adc
ficomps
jb
cmp
cmpsl
xor
inc
popa
xor
dec
repz
xor
jle
push
xlat
cmp
add
out
mov
sub
mov
rolb
xor
adc
test
std
jbe
xchg
decb
ret
lock
outsb
pop
in
mov
push
lock
dec
sub
jl
movsl
sub
and
jno
dec
mov
loopne
cs
call
dec
int3
rorl
fcmovnbe
ret
adc
jge
out
ja
ja
pop
xchg
sar
ja
scas
fisttpll
insb
jae
sub
xchg
pop
pushf
sbb
popf
int3
sub
gs
push
inc
push
fdiv
cwtl
cld
dec
ret
and
mov
lcall
in
dec
xchg
outsb
sahf
sub
sub
add
dec
inc
inc
push
push
dec
push
pushf
and
mov
cmpsb
adc
out
mov
leave
push
rcrl
and
add
push
lret
sbb
mov
adcl
stos
jno
imul
scas
jne
xor
add
and
inc
in
sub
insb
or
pop
pop
mov
lock
aad
push
adc
xor
mov
pop
out
scas
mov
sbb
pop
dec
sti
mov
xchg
test
pop
idiv
and
nop
ljmp
and
outsl
loopne
xchg
pop
stc
jmp
mov
insb
dec
lods
and
mov
in
out
dec
sbbl
data16
mov
or
xchg
hlt
cmp
call
aaa
js
js
int3
daa
jbe
test
xorl
jns
push
insl
out
xchg
ficomps
add
and
scas
jb
push
push
ds
arpl
pop
test
fdivrp
mov
and
lea
aam
sahf
stos
pop
mov
cmp
cltd
mov
add
rolb
outsb
lea
xchg
pop
xchg
sub
jge
xchg
jmp
loop
push
aad
clc
add
sub
jmp
or
nop
push
jmp
mov
movsl
or
mov
fwait
insb
out
ljmp
xor
push
and
dec
push
fisubl
neg
ds
les
in
out
bt
out
pop
xchg
dec
addr16
in
inc
stos
jle
outsl
dec
cmp
jl
pop
movsb
add
fstpt
jbe
xor
inc
xor
out
mov
xor
pop
pop
call
iret
addb
aas
loope
inc
xchg
test
jle
popf
jl
sub
push
jg
sbb
push
outsl
xor
add
mov
mov
in
ljmp
sbb
mov
fwait
ja
test
inc
mov
xorl
jo
andb
push
jg
jge
cli
jnp
ret
mov
cmp
pop
movsl
cmp
pop
int
push
mov
addl
xchg
inc
das
add
enter
pop
adc
lret
inc
cmp
sub
push
mov
pop
lahf
push
sub
xor
sti
push
aad
push
gs
mov
mov
mov
in
cmp
aas
and
in
adc
arpl
jno
cmpsl
insb
popf
jge
push
xor
cmp
cmp
out
fnsave
push
inc
push
jno
out
dec
lret
fcos
push
lret
outsl
sbb
cs
sub
mov
jno
iret
test
xchg
shll
xchg
jno
mov
or
sub
ficoml
iret
mov
ret
or
lea
jp
fbstp
jbe
pop
cmp
xchg
cmp
inc
sti
jbe
cltd
xchg
push
lods
inc
push
stos
mov
push
shlb
enter
jb
sti
inc
sbb
jle
and
dec
mov
adc
mov
mov
and
sahf
push
movsb
pop
adc
out
test
daa
insl
add
sbb
or
leave
inc
xchg
mov
lods
xchg
lds
pop
mov
es
jb
out
or
mov
add
je
and
popf
and
dec
call
xor
cmc
or
sub
sub
ss
add
cmpsb
hlt
adc
mov
jbe
lock
jge
out
or
test
add
fdivrl
jb
arpl
adc
adc
xchg
push
in
dec
in
mov
popa
pop
aas
insl
addb
mov
into
inc
std
leave
repnz
and
rcr
rol
cmp
xchg
xor
push
pop
sub
adc
inc
inc
je
mov
repnz
rcr
fimull
jbe
fildll
pop
cmp
push
mov
push
repz
add
mov
in
cltd
je
jns
rorb
xor
repnz
xor
pop
push
shrl
sub
xlat
sbb
rorb
cmp
aam
popa
repz
pusha
mov
test
xor
mov
fistpll
sbb
sar
daa
xchg
push
arpl
jecxz
fcompl
add
mov
std
fdivrp
pusha
xor
push
inc
xor
cwtl
xor
flds
xorb
outsl
arpl
sub
jbe
cmc
xor
lods
mov
push
pop
dec
mov
insb
aad
mov
test
mov
cmp
std
mov
xlat
es
jnp
repnz
add
icebp
xchg
push
cmp
xchg
add
mov
arpl
xor
adc
pop
lret
and
and
out
jo
cmp
mov
popl
aas
xchg
pop
ljmp
mov
mov
dec
test
and
or
cmpsl
mov
fldt
pop
ret
cmpsl
fstl
add
ljmp
jns
pushl
in
rol
sbb
add
in
push
popa
rolb
test
or
outsl
jo
into
popa
xorb
add
lret
xchg
mov
xor
lcall
aam
pushf
xchg
fistpll
cmp
push
push
jne
bnd
mov
and
mov
out
in
ret
xchg
stos
xchg
mov
xor
fsubrs
cmpsl
or
mov
or
fdivrp
cwtl
nop
cmpsl
pusha
loopne
push
push
popa
adc
mov
jmp
sub
cmp
pop
scas
inc
pop
mov
mov
pop
push
sub
dec
lea
daa
rolb
push
pop
outsl
subl
jo
mov
pop
in
pop
dec
xchg
pop
mov
push
sarl
xorb
insl
mov
dec
insb
mov
dec
add
pop
iret
jecxz
add
push
xor
enter
mov
cltd
stos
test
xchg
jl
xor
in
icebp
insl
xchg
and
aad
ror
out
jbe
jecxz
fistps
jae
rclb
jae
out
xor
adc
shrl
iret
popf
fiadds
xchg
inc
add
lods
sub
sbb
adc
fcmovu
sbbl
nop
cmp
or
ret
inc
xor
jnp
loop
xchg
int3
pop
fldenv
gs
mov
adc
sbb
lock
push
xor
es
xchg
ret
inc
mov
pop
mov
cli
jg
insb
cmpsb
push
jle
jg,pt
pop
sub
cmpb
insl
pop
push
or
fcmovbe
inc
jbe
push
fnsave
js
clc
sbb
xlat
jge
scas
movsb
dec
pop
arpl
insl
jle
in
out
clc
sub
and
loope
into
mov
sbb
or
aaa
mov
adc
mov
lahf
jge
sarl
in
jns
or
roll
pop
aam
movsb
pop
dec
ret
adc
inc
loop
ret
mov
mov
addb
sub
cmc
sbb
jle
mov
test
aas
push
push
inc
je
loopne
or
add
imul
dec
in
cmpsl
sbb
aam
inc
je
rclb
ljmp
test
sub
adc
xchg
add
cwtl
mov
movsl
cmp
jb
out
adc
lods
insb
cmc
or
sbb
cmp
idivl
insl
test
push
mov
pop
adc
pop
lahf
inc
fsubrs
mov
sbb
mov
sarl
jp
xchg
pop
std
int3
and
int3
in
bound
adc
daa
pop
jmp
pop
dec
lcall
mov
lret
int
data16
mov
stos
out
adc
fsts
inc
int3
xor
test
lahf
notb
inc
pop
fdivrs
sub
sub
aam
dec
adc
add
movsl
mov
xor
cmc
jno
xchg
nop
pop
sub
hlt
cli
dec
in
test
xchg
aam
ja
lods
add
mov
and
jne
repnz
mov
xchg
aas
dec
jo
fs
or
add
dec
sbb
xchg
add
lds
push
dec
add
push
lcall
sbb
scas
pop
dec
push
push
in
jg,pt
or
jae
push
cmp
mov
add
inc
ret
iret
mov
mov
leave
mov
dec
jne
fisubl
in
out
sub
in
push
in
jle
xchg
mov
mov
or
and
fnstcw
push
jmp
sahf
and
sub
add
xchg
leave
test
stc
movsl
mov
mov
mov
sbb
outsb
ja
xor
mov
pop
aas
add
pop
jae
sbb
fwait
mov
call
sbb
scas
cmp
cmpsb
lret
xchg
add
xor
and
mov
mov
cmp
push
pushf
adc
dec
dec
outsb
push
fldenv
aam
inc
roll
and
pop
loope
pop
or
inc
cs
push
lods
push
mov
sbb
sbb
fistpl
aam
jnp
dec
cwtl
pop
sub
in
mov
xor
sub
pop
mov
mov
xchg
je
aam
int3
addr16
xor
add
xor
rolb
je
xchg
mov
daa
ret
sub
dec
cmc
insb
fisttpl
mov
cmp
adc
das
enter
cmp
cmp
push
pop
jecxz
mov
pop
cltd
sti
cmp
mov
cs
adc
push
adc
insl
jg
lds
arpl
push
stc
in
lahf
and
add
test
pop
sub
cmc
sub
pushf
push
inc
xor
add
dec
push
inc
inc
jmp
inc
imul
gs
xchg
lods
xchg
mov
or
xchg
pushf
ja
imul
cmp
stos
cmp
sbb
test
out
and
mov
xchg
sub
and
loopne
dec
int
xchg
inc
cmp
mov
pop
shlb
push
sub
mov
cld
cmpsb
aas
sbb
jne
jge
jno
cltd
or
sub
xchg
cmpsl
xor
push
dec
cs
leave
push
test
out
adc
insl
in
sbb
add
cmp
push
jge
lods
in
hlt
inc
in
sub
loop
addr16
mov
inc
insb
enter
pop
cmp
es
mov
jbe
adc
mov
es
imul
fwait
pop
mov
inc
insb
adc
sub
in
sbb
mov
insl
pop
add
shll
out
inc
addl
enter
clc
pop
lahf
lea
mov
and
adc
call
popf
out
loopne
push
into
mov
rcll
test
xor
les
mov
inc
push
mov
mul
test
push
test
xchg
outsl
dec
push
and
cltd
mov
enter
and
pushl
xor
push
sahf
mov
repz
cmp
popf
imul
inc
cmp
cmpsl
adc
hlt
and
out
in
dec
dec
sub
lret
pop
dec
iret
cmpsb
or
iret
out
jb
cli
inc
mov
mov
xor
ds
outsb
jbe
fdivs
jecxz
and
das
push
out
jne
scas
xchg
mov
inc
sub
add
sbb
cmc
hlt
push
cmp
sub
cli
stc
push
movsw
lock
popf
xchg
popf
dec
shll
int
fucompp
shll
lahf
int
sub
subl
scas
daa
mov
test
mov
clc
sub
cmp
sub
pop
rclb
mov
inc
jg
dec
xchg
pushf
sub
lret
andb
pop
pop
fisubrl
cmpsl
fcomi
push
or
les
test
pop
fdiv
out
outsb
xor
in
jp
fdivrp
mov
and
and
push
sti
pop
adc
xchg
movsl
cld
gs
xor
andl
ljmp
dec
inc
inc
bound
fistpll
imul
or
les
inc
outsl
cmpsb
jns
adc
call
adc
das
jg
cmp
rclb
sahf
or
sub
sbb
hlt
push
arpl
lahf
outsb
js
push
das
in
inc
xor
add
cld
fwait
adc
mov
mov
pop
xorl
mov
mov
repz
cmpsl
push
out
adc
ss
mov
sbb
dec
ret
mov
and
push
jb
mov
lds
mov
loop
fimuls
dec
add
lds
scas
inc
inc
cmc
enter
movsb
sub
paddq
xchg
push
aad
or
push
mov
negb
jo
jnp
decb
mov
js
or
adc
out
push
hlt
inc
les
lret
inc
popf
cmp
adc
clc
cmp
repz
scas
lods
jb
jmp
popa
in
lahf
fs
inc
cmp
push
bound
sbb
mov
shrl
sbb
stc
or
lcall
xchg
shlb
jmp
fprem
cmp
or
jl
or
jmp
cmp
cwtl
jo
push
push
int
imul
testb
add
xchg
pushf
pop
pop
sub
xchg
dec
xor
inc
jle
aam
dec
inc
inc
call
int
or
popa
dec
sub
call
pop
sub
sbb
pop
cmp
fwait
inc
stos
xchg
das
mov
xchg
and
imul
les
sub
ds
test
scas
lds
jae
cmp
mov
or
jp
sahf
inc
add
add
in
dec
out
lods
out
sahf
loop
andb
lahf
cmpsb
mov
xchg
out
fidivrs
lret
pop
cmp
movsb
or
stos
out
jns
mov
cmpsb
scas
pop
inc
and
fcomp
sub
or
pop
in
sbbl
stos
push
pushf
fisubs
flds
push
lret
cmp
test
js
add
pop
fbld
xor
fists
pop
jo
mov
test
sbb
mov
lcall
dec
ljmpw
test
aaa
lock
outsb
mov
and
cmp
jno
fisttpll
pop
xchg
loope
in
add
sbb
cmpsl
dec
jno
cmp
cmp
or
test
mov
imul
dec
stos
cltd
std
mov
sub
pop
inc
mov
add
repnz
sbb
adc
imulb
push
mov
lods
dec
aas
in
pusha
repnz
adc
cwtl
insb
mov
aad
lret
jg
jb
adc
pop
fs
or
imul
das
fwait
xor
jbe
pop
xor
mov
imul
lods
sarb
hlt
jbe
lods
sub
and
push
pop
jae
ret
int
adc
ja
fsts
daa
xor
cli
jl
bound
je
outsl
addr16
fildll
out
sub
mov
pop
jno
and
roll
fdivr
ljmp
xchg
or
push
cmp
sbb
xor
pop
and
pop
adc
mov
rclb
movsl
push
xor
lret
orb
dec
jo
jnp
lds
ds
xchg
xor
rolb
jnp
xchg
lahf
int3
mov
loop
jbe
mov
and
cmpsb
mov
ljmp
jo
adc
popf
cmp
push
dec
pop
decb
push
adc
sub
jle
cli
xchg
lods
pop
push
mov
cmp
subb
xchg
cld
push
adc
clc
mov
les
out
aas
fldt
imul
test
imul
pusha
mov
push
or
test
xchg
or
hlt
out
stos
sbb
adc
arpl
nop
repnz
mov
cmp
pop
clc
js
cld
es
call
dec
fbld
cmp
and
jecxz
and
cmp
notb
jle
xchg
jle
dec
out
push
addr16
and
dec
pop
pop
mov
push
or
xor
mov
divb
mov
cmp
push
and
jne
leave
rclb
repz
adc
int
push
inc
shl
ljmp
div
insl
mov
mov
stos
sub
fcompl
pop
push
or
xchg
mov
lret
in
lods
shll
adc
xadd
dec
pop
sarb
aas
js
inc
insb
sub
adc
into
add
fisubrl
pop
or
popa
pop
sbb
outsb
cld
ret
sbb
push
pushf
mov
mov
inc
jns
lret
push
xor
fnstenv
fs
cmpsl
add
movsb
add
into
mov
mov
lds
or
inc
inc
leave
dec
fidivrl
pop
dec
fisubrl
sbb
stos
into
fwait
lock
inc
and
imul
aam
jno
push
in
outsb
fadd
cwtl
nop
push
dec
subb
je
mov
adc
leave
inc
xchg
mov
loop
mov
fs
mov
out
sahf
sbb
int3
daa
mov
cs
or
sub
add
add
pop
push
popa
push
dec
inc
mov
inc
push
das
lods
pop
leave
sbb
loopne
pop
popa
fsubs
add
push
jl
mov
push
icebp
push
imulb
popa
fnstenv
xchg
pop
mov
js
xchg
mov
inc
xor
push
flds
push
mov
clc
insb
lea
in
lahf
xchg
in
inc
mov
data16
push
adc
push
fisubrl
adc
inc
sbb
test
lock
cmc
mov
fbstp
int3
xlat
cmp
mov
cmp
inc
adc
push
jg
or
lea
outsl
mov
and
imul
sbb
and
stos
lds
xorb
and
xor
loopne
mov
xchg
pop
ss
aaa
fadds
sub
fbld
push
fwait
push
rcrb
sbb
pop
jp
push
aas
scas
adc
cmp
mov
call
hlt
pop
xchg
stc
in
push
cltd
lods
sahf
fbstp
lock
data16
add
scas
les
filds
outsb
xor
addr16
xchg
call
movsb
pop
adc
jle
pushf
test
leave
les
cld
cmp
insl
and
clc
outsl
cmpsl
add
mov
cmp
aaa
cmpsb
push
sahf
out
insl
cmp
jae
hlt
imul
or
cmpsl
jns
sub
cmpsl
xchg
mov
mov
bound
out
pop
mov
out
cmp
or
movsl
adc
scas
and
cmp
mov
xchg
fwait
dec
adc
sar
outsb
clc
nop
jae
sti
stos
inc
xchg
mov
stos
loopne
adc
mov
js
arpl
xor
sub
inc
idivl
xchg
sbb
adc
xchg
or
pusha
add
fdiv
out
push
fstp
inc
mov
push
insl
pop
add
or
mov
pusha
sbbl
or
adc
jnp
push
xchg
xchg
xchg
push
adc
fmulp
rcll
push
push
cli
inc
cmp
lret
mov
mov
xor
roll
add
movb
sub
push
dec
mov
add
push
mov
mov
cmp
and
sarl
loop
or
adc
xchg
jae
shrl
clc
mov
inc
int
scas
repnz
iret
push
pop
in
dec
pop
fs
cmp
test
add
lea
jno
push
popf
inc
xor
jae
dec
bswap
mov
jp
xchg
insb
ja,pt
int3
dec
out
jl
inc
enter
adc
adc
in
add
in
andb
test
shrb
jg
xlat
cmp
pop
lahf
xor
xchg
mov
icebp
dec
push
xchg
lods
out
cmp
outsl
sahf
in
out
insl
repnz
jle
jecxz
movsb
adc
inc
add
sarb
cmp
mov
test
in
test
cmp
daa
shll
loopne
pop
xchg
enter
and
test
xchg
iret
mov
fcomps
daa
sub
xchg
xchg
mov
and
mov
sbb
sarb
xchg
out
pusha
add
pop
cmp
js
inc
test
aam
push
lock
add
mov
xchg
cmc
mov
popa
dec
cltd
rcrl
push
adc
ret
lahf
insl
or
pop
inc
sub
push
or
or
mov
sub
out
dec
push
inc
shrl
mov
outsb
leave
fistl
xorb
filds
stc
stc
fistps
leave
mov
adc
inc
sub
adc
out
pop
adc
and
mov
pop
push
mov
outsb
ret
jmp
or
addr16
inc
mov
inc
mov
repz
jmp
rol
sarb
xchg
adc
adc
pusha
add
mov
inc
das
ds
lds
bound
sbb
in
out
jno
xor
popf
jl
cmp
push
loopne
repz
lock
xlat
nop
jb
mov
enter
add
pop
sbb
push
js
inc
fidivrl
cli
cld
andl
sub
jle
aas
test
xlat
inc
rolb
adc
andl
sub
stos
adc
sbb
and
dec
nop
out
jnp
in
icebp
mov
stos
xor
xchg
xor
mov
fistpl
nop
adc
idivb
popf
les
pop
push
pop
loop
pop
push
mov
out
sub
push
mov
cmp
fwait
out
pop
and
insb
scas
inc
push
mov
pop
sbb
aam
adc
aad
xor
hlt
xor
lea
mov
enter
inc
stos
xchg
mov
sub
mov
fs
jmp
lcall
int
stc
push
lds
sahf
fsubrl
hlt
lcall
cs
push
push
lea
dec
and
cmpsb
xor
das
insl
and
xor
sbb
rorl
add
data16
jbe
rcl
dec
daa
and
shrb
cld
inc
pop
adc
inc
sti
pop
sub
clc
push
mov
xor
loop
iret
int
dec
dec
adc
aad
stos
add
lahf
decl
push
sub
outsl
pop
daa
xor
loop
call
push
vmaxsd
lock
xor
mov
sti
int3
push
dec
push
movsl
pop
push
fistpl
adc
pop
aad
ficomps
xor
jle
cmp
inc
jbe
inc
ret
daa
lcall
ja
daa
arpl
xchg
jnp
pop
xchg
adc
in
push
shlb
hlt
jno
cmpsl
inc
add
dec
shlb
popf
test
jae
mov
pop
inc
je
lret
fistpll
aad
xor
ljmp
shrb
lods
movsl
pop
cli
ret
sub
jne
push
cltd
shll
adc
std
shlb
sbb
pop
cmp
mov
pusha
jp
cmp
scas
andb
or
inc
fwait
lcall
in
out
jle
out
push
mov
scas
cld
pop
jo
test
in
clc
andl
ret
push
and
push
cltd
add
mov
push
jle
jge
mov
jns
into
jl
pusha
lds
repnz
pop
mov
dec
fidivs
xchg
cld
or
mov
mov
je
mov
adcl
jg
cmp
mov
addr16
clc
jnp
fs
pushf
in
jmp
cwtl
leave
inc
mov
sahf
mov
imull
stos
xor
mov
or
iret
mov
xchg
push
pop
jge,pn
dec
leave
loopne
sub
and
dec
mov
push
or
pop
popf
adc
imul
or
popf
mov
jmp
and
enter
dec
int
sahf
jo
lds
pop
out
daa
inc
pop
jns
rorl
adcl
xlat
mov
arpl
movsb
addr16
out
outsl
cli
sub
adc
int
jmp
mov
pop
mov
adc
ffreep
add
sbb
test
pop
testl
lret
orb
insb
lcall
bound
sub
shl
loop
jae
push
lods
rol
mov
add
ficomps
test
imul
mov
or
push
gs
lods
cli
add
leave
movsb
loop
cmp
dec
and
xchg
mov
stos
dec
lcall
xchg
out
cmpsb
repnz
add
dec
cmpsb
inc
dec
adc
mov
repz
xor
add
mov
repnz
and
scas
out
pop
fildl
inc
ds
dec
scas
lock
xor
fwait
movsb
pop
or
cmp
xchg
jb
test
push
cmp
jmp
negl
push
dec
adc
pop
push
ja
nop
cli
aaa
test
test
lret
mov
insl
or
aam
jb
stos
xor
addr16
cmp
add
xchg
mov
add
jbe
ja
mov
rcrb
pop
loopne
mov
aas
lds
test
lahf
add
test
mov
scas
inc
push
adc
jp
dec
dec
sub
sbb
cmp
popf
sub
dec
mov
imul
mov
iret
dec
sbb
xorl
jp
jne
jl
scas
pop
faddp
mov
xor
cmp
int3
gs
push
jge
clc
add
sahf
cmpsl
mov
jge
lret
lahf
not
add
mov
lds
adc
loopne
add
jo
jne
xchg
negb
adc
sbb
lret
lret
inc
jbe
stos
loopne
cmpsb
push
push
add
pop
push
jecxz
in
jnp
jne
cmp
es
popf
mov
xor
adc
add
out
mov
sub
stc
push
je
jae
fs
xor
add
test
fcmovnb
test
mov
stos
cmp
and
cmp
in
xchg
mov
stos
jbe
add
aas
xlat
mov
push
or
outsl
iret
dec
insl
test
jge
std
ljmp
push
jp
fst
into
sti
mov
sub
inc
ljmp
mov
xor
sahf
jp
addb
adc
test
fucom
outsl
out
je
andl
push
pop
xor
jne
mov
dec
flds
cmpsb
push
xor
pop
in
inc
dec
rcl
popf
sahf
cmpsb
mov
test
dec
pop
lods
mov
iret
cmpl
dec
ljmp
cmp
lods
arpl
mov
add
clc
push
fisttpll
dec
add
into
adc
out
sub
cmp
mov
mov
or
and
das
into
xchg
stos
xchg
xor
addl
bound
add
daa
mov
xchg
andl
shlb
cld
pop
pop
int
bound
xor
aam
test
imul
adc
mov
lods
dec
leave
jne
aam
pop
cmp
mov
insl
scas
adc
jmp
pop
sub
inc
push
mov
das
pop
inc
sub
ds
jo
or
js
out
mov
inc
lahf
add
pop
push
xchg
out
es
inc
sahf
loop
push
pop
and
mov
push
mov
movsl
xchg
fs
dec
pop
cmpsl
pop
int
cltd
xor
add
ss
dec
cmp
or
cmp
push
enter
push
insb
outsl
adc
popa
mov
pop
adc
fmull
mov
hlt
sbb
inc
shlb
int3
adc
into
mov
jne
cmpsl
push
mov
push
jne
testl
sbb
sbbb
or
mov
test
push
xlat
cmpsb
push
inc
pop
vmovddup
aas
aas
mov
xor
imul
pushf
mov
movsl
mov
mov
mov
sbb
push
jl
rorb
lea
sub
push
pop
add
mov
sub
insl
je
ret
mov
sbb
aaa
mov
gs
cmp
call
sar
mov
hlt
repnz
lahf
and
out
scas
xor
xchg
leave
lds
mov
sahf
andl
aas
pop
add
fcmovnu
imul
push
and
push
mov
inc
out
and
push
add
and
dec
mov
or
aam
jo
out
and
scas
sbb
lods
pop
testl
push
mov
cmp
pop
shlb
gs
fdivr
pop
test
inc
push
jmp
lret
adc
lods
dec
xchg
inc
add
and
sbb
and
adc
add
outsb
fldl
fucomip
mov
call
sub
jp
push
gs
dec
divl
pop
fidivrs
xor
outsl
lods
decl
sarl
in
cmpsb
xchg
rolb
insb
rorb
adc
add
popf
cmp
lock
mov
xlat
in
insl
adc
enter
xor
hlt
xor
adc
cli
fs
les
test
dec
arpl
es
out
cmc
jnp
and
mov
out
scas
or
pop
pushf
xchg
in
dec
std
sti
lods
push
mov
xor
pmuludq
sub
in
and
inc
pushf
lret
addr16
jg
lods
mov
xchg
sahf
push
leave
push
xchg
mov
push
push
loopne
push
cmpsl
mov
push
xchg
imul
dec
cmp
arpl
in
pop
insb
xchg
lret
test
fimull
out
pop
adc
ja
movsl
jl
and
cmp
dec
xor
jl
adc
ja
inc
adc
cmp
mov
xor
mov
mov
push
jae
mov
jbe
mov
testb
cld
daa
pop
adc
shll
das
subb
mov
fstl
je
imul
out
fs
sbb
push
inc
popf
mov
sti
or
mov
movsb
push
pop
test
in
push
out
xor
push
and
cmc
inc
push
cmp
xchg
loop
pop
stos
jno
jne
test
in
sarb
ja
out
cmpb
mov
ss
lds
xchg
popf
into
fiadds
in
mov
aam
lea
int
pusha
push
push
sbb
in
jl
jo
ds
xchg
dec
popl
xchg
dec
dec
jmp
mov
sbb
sbb
inc
lock
ljmp
sbb
outsb
leave
ljmp
mov
scas
dec
mov
js
in
ret
lds
roll
xor
adc
into
inc
xchg
fisttps
pop
adc
jmp
inc
push
lcall
insl
xchg
push
jp
push
cld
mov
jnp
mov
aas
loopne
lods
sub
arpl
and
inc
mov
int3
mov
xchg
dec
jl
aam
add
test
pusha
test
stos
dec
lcall
fistpl
sbb
mov
or
mov
push
xor
push
push
jne
lret
xchg
cmpsl
adc
lock
repnz
movb
add
out
in
rcll
jb
icebp
loope
pusha
add
rcrb
dec
or
loopne
mov
jmp
cmp
es
rclb
sbb
jno
and
sarb
mov
inc
notb
int
movsb
xor
fmul
imul
and
in
dec
js
sar
lret
cmp
daa
cmp
push
clc
mov
repnz
arpl
mov
movsl
inc
mov
popa
cmpsl
jnp
sbb
stos
addb
stc
mov
fstcw
in
mov
sbb
jp
cwtl
add
jo
jae
popf
inc
cld
push
mov
pop
cmc
mov
lods
push
pop
pop
insb
xor
into
jmp
mov
sub
mov
iret
add
sbb
sub
rorb
