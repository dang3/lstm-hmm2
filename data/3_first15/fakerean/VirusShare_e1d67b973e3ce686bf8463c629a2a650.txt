sbb
add
mov
xchg
fdivrl
mov
fmuls
adc
stos
insb
fimull
imul
add
mov
adc
and
cwtl
and
add
shrb
lret
push
pop
sub
sbb
ds
cs
cmp
stos
mov
push
lahf
jb
xchg
cmp
sti
mov
jae
sub
subl
jae
and
inc
pop
pop
mov
mov
scas
and
xor
push
push
sar
cmc
inc
inc
dec
push
fnstsw
mov
and
lcall
dec
dec
mov
in
mov
or
test
fstps
out
add
add
dec
ljmp
mov
pop
ror
add
cltd
into
sub
dec
mov
adc
and
sbb
inc
into
imul
mov
stos
enter
movsl
cmp
and
pop
mov
cwtl
es
enter
fwait
pop
mov
dec
jnp
call
imul
mov
pushf
icebp
loope
jl
in
in
ficoms
jg
inc
cmp
jno
outsb
cmpsl
adc
cmp
add
adc
ds
imul
mov
insl
jno
jle
jne
sahf
das
lds
hlt
dec
inc
dec
ljmp
test
addr16
fstpt
dec
inc
mov
movsl
das
push
jb
scas
xor
xchg
cmp
arpl
mov
cwtl
push
add
mov
mov
mov
std
xchg
mov
lahf
decb
popf
ret
mov
movsl
mov
or
pusha
adc
sub
add
or
push
bsr
ret
inc
jo
mov
lea
mov
lds
jns
popf
decb
sti
aas
imul
aaa
dec
std
je
dec
roll
aam
aas
roll
inc
or
mov
xchg
xor
jns
mov
mov
test
js
call
adc
out
addr16
mov
jo
subl
out
test
cmpsb
push
notb
lcall
out
mov
pop
enter
dec
shlb
jb
addl
xchg
pushf
mov
adc
loopne
sub
dec
arpl
dec
or
mov
push
icebp
cmp
mov
mov
inc
mov
sub
push
add
insl
fnstenv
mov
ret
fisttpl
es
jmp
mov
sbb
lahf
pop
xchg
mov
pop
push
dec
out
lret
movsl
imul
mull
cmp
dec
es
test
mov
stc
adc
mov
scas
ljmp
shl
call
dec
jmp
fnstsw
outsl
add
mov
andb
fcmove
push
pop
xchg
pop
and
mov
imull
fs
and
loopne
xchg
leave
jns
das
lret
dec
cmp
out
add
lea
andl
std
xorb
cmpb
rcr
orl
mov
cmp
sub
adc
inc
lret
int3
jno
sbb
push
mov
jecxz
xchg
dec
jl
push
pushf
inc
adc
jae
loope
jne
div
out
lcall
cmp
rcrl
mov
cmpsl
addr16
adc
aam
push
cmp
and
pop
loop
sbb
pop
out
imul
add
xchg
push
ja
cld
inc
rcrb
gs
jno
dec
popf
add
cli
cmp
repnz
dec
dec
mov
jl
push
stos
scas
jne
js
scas
cmp
leave
cltd
in
push
repnz
pushf
test
push
mov
pop
out
int
rol
sbb
dec
jg
in
mov
and
cli
and
lods
pop
mov
mov
xchg
mov
adc
insb
arpl
dec
xor
es
mov
sub
dec
push
addps
cmp
or
out
pop
rorl
cmpsl
inc
lret
xchg
dec
out
pop
decb
mov
das
sbb
jmp
pushf
push
dec
mov
jns
fs
pop
shl
aas
jecxz
push
ror
jnp
arpl
outsl
or
or
push
out
mov
inc
test
insb
mov
sbb
popf
hlt
cmpb
pop
es
jno
xor
out
out
mov
mov
pop
xchg
movsl
repz
in
sub
in
push
in
lock
sbb
testb
adc
inc
jae
outsl
jp
fcoml
frstor
mov
addr16
xor
mov
mov
hlt
adc
pop
inc
and
idivl
in
mov
clc
movsl
jnp
cmp
imul
imul
mov
and
je
lret
sbbb
cmp
xor
mov
movb
pop
das
jecxz
inc
testl
adc
mov
ja
stos
lahf
lock
jne
pusha
sbb
xchg
les
sub
je
inc
xorb
jge
sti
lcall
mov
adc
xchg
push
and
add
test
pop
jbe
imul
adc
and
push
lahf
xchg
inc
in
int
cmp
cld
iret
inc
cmp
push
cmpsb
out
mov
mov
jne
sub
cmpsb
aaa
pushf
lcall
stos
sub
mov
xorl
xor
iret
jae
jae
jmp
add
mov
push
mov
sub
pop
mov
xor
or
xchg
ficoml
cmp
add
int
loopne
mov
mov
aam
icebp
mov
jns
push
fcmovne
arpl
int3
xorb
xchg
into
incl
loopne
adc
sub
daa
add
inc
or
or
adc
mull
hlt
sbb
and
xlat
and
rorb
inc
pusha
pop
xchg
xlat
cmpsb
add
in
mov
cmpl
fwait
xchg
stos
cmpsb
mov
stos
xor
fsubl
stos
adcb
xchg
pop
jge
inc
mov
je
out
dec
push
inc
lock
mov
dec
out
add
lds
ret
iret
loope
lods
mov
addb
inc
push
adc
aam
mov
stc
cmpsb
inc
les
sarl
cld
ret
sub
sub
dec
sub
inc
lahf
daa
arpl
sahf
mov
xchg
subb
jmp
mov
fsubrl
ljmp
push
cmp
mov
add
add
xchg
add
das
adc
sahf
push
incl
mov
mov
xlat
shll
jmp
mov
xchg
mov
fstl
jmp
pop
sbb
fildl
mov
mov
mov
and
imul
sub
dec
lea
mov
int3
sbb
aas
sub
mov
add
push
std
sbb
scas
cmpsl
xlat
cwtl
push
fwait
aaa
sbbb
loop
push
leave
mov
jnp
sahf
mov
mov
sbb
dec
jnp
fidivs
add
pop
jg
add
mov
les
add
ljmp
mov
cmp
jns
jmp
cmp
pop
or
iret
xor
ret
jbe
call
sub
or
je
rcr
xor
push
aas
stos
sub
add
jle
jne
loope
in
lret
xor
or
xchg
adc
orb
je
jge
cmp
fdivl
out
ret
and
sub
inc
jae
je
aaa
sbb
fcomps
sbbb
adc
mov
jmp
mov
mov
xchg
outsl
aad
mov
hlt
jne
mov
mov
add
call
or
push
aas
xchg
jp
sub
mov
cs
push
push
dec
sbbl
adc
cs
movsl
inc
push
jo
ss
jge
pushw
sbb
dec
outsl
enter
testb
call
lods
jne
sbb
rorb
fadds
pop
jo
shll
nop
neg
stc
repz
push
out
rolb
icebp
rcrl
mov
inc
cmp
pop
xchg
xor
mov
xlat
in
dec
faddp
movsl
movsl
sub
sub
mov
test
inc
arpl
rol
jno
mov
jo
movb
lock
fnsave
lret
inc
inc
je
sub
iret
sub
inc
mov
adc
xor
mov
and
aad
fidivrl
or
cmp
ljmp
mov
or
xorl
cmp
enter
fwait
inc
sbb
jl
xor
jb
mov
cld
pop
jp
cmpsb
lods
lds
lods
mov
aaa
xor
cmp
sarl
jg
xchg
mov
xchg
aas
cmp
sub
lods
jge
inc
and
insb
std
or
mov
subb
cmp
pop
sub
fwait
aas
mov
pop
icebp
adc
stos
push
add
test
or
mov
mov
sub
fdivl
fisubrs
cmp
sbb
std
lahf
jp
hlt
pop
test
jle
pop
adc
fimull
sbb
aam
and
repnz
cmp
xchg
lock
xor
std
test
add
xor
aam
add
cld
pop
jb
stos
cmp
std
xchg
cmp
lds
std
push
xorl
stos
jg
jae
jmp
fwait
popf
imul
and
push
or
std
push
int3
cmp
sub
outsl
leave
cwtl
es
divb
mov
lock
pop
push
outsb
out
data16
arpl
inc
arpl
andl
or
addr16
add
inc
cmp
and
std
push
cwtl
fsubp
ds
mov
sub
mov
mov
cmpl
sahf
jp
jecxz,pt
cmc
xchg
xchg
mov
jle
or
dec
jle
or
fldcw
mov
aad
lea
outsb
les
ret
fcmovu
mov
mov
push
stos
pop
xchg
fdivrl
or
js
sub
outsl
cmc
ss
dec
mov
cmp
iret
ja
xchg
push
push
nop
mov
jecxz
jne
inc
fnstenv
shl
push
push
inc
pop
push
lods
cmp
xchg
xchg
fstpl
decb
rcll
sbb
cltd
dec
lods
cmpsl
dec
dec
popf
inc
cltd
jbe
dec
fists
xor
pop
xor
sub
cmc
xchg
inc
cmc
rcll
lret
sub
outsb
mov
pop
push
scas
push
inc
mov
scas
xchg
fldenv
jnp
loope
loopne
sahf
int
and
sahf
andb
cmc
stos
mov
jmp
stos
cmpsl
loope
addb
adc
mov
add
jecxz
cmp
in
or
mov
sarl
sbb
jnp
out
nop
mov
xchg
mov
in
push
push
push
mov
add
add
cwtl
mov
scas
add
les
out
pop
or
cmp
popf
or
insb
popa
lock
repz
mov
xorb
lock
push
pop
mov
push
std
jnp
sub
mov
jp
popf
mov
test
mov
lahf
test
hlt
xchg
inc
gs
adc
xor
dec
out
scas
cmp
xchg
rolb
inc
jne
cmp
inc
es
jnp
mov
js
mov
movsl
sti
gs
popa
pop
cmp
sbb
and
iret
sti
stos
adc
inc
cmpsb
icebp
sbb
xor
sarl
int3
adc
xchg
icebp
adc
jo
repnz
test
movsb
fimull
in
add
mov
das
adc
lods
inc
pop
xor
push
sub
push
dec
mov
das
sbb
adcb
and
mov
aad
pop
xor
add
out
insl
sub
bnd
sbbb
outsb
addl
sub
dec
pop
jnp
imul
and
enter
push
lea
or
xchg
mov
mov
mov
das
aam
aaa
add
dec
rcrb
jmp
pop
shlb
loopne
into
xor
fistps
jae
jnp
sub
in
jp
mov
fsubrs
pop
push
push
les
mov
mov
scas
sbb
roll
and
push
inc
fucom
push
ds
fstpt
pop
xchg
daa
jmp
into
xor
or
jae
inc
lods
jo
adc
or
dec
out
lock
mov
cmp
pop
pop
jle
insb
mov
sbb
sahf
dec
mov
mov
inc
out
int3
pop
in
and
cld
fwait
shlb
jnp
lods
sub
scas
xor
inc
nop
dec
sub
addb
push
dec
jmp
addl
dec
add
adc
lods
mov
flds
inc
xor
je
movsb
lds
or
inc
ds
adc
out
inc
push
sub
into
sti
in
call
inc
scas
mov
cmpb
mov
std
int3
adc
xor
enter
iret
int3
jmp
xchg
push
adc
inc
negb
out
sbb
cli
adc
add
xchg
mov
gs
data16
int
scas
arpl
fstl
stc
cwtl
movsb
pop
mov
jb
and
add
fisubrl
in
add
add
fimuls
scas
lock
pop
push
xchg
jmp
ret
ret
dec
ret
hlt
jnp
dec
stc
shrb
sub
push
dec
mov
into
xchg
add
idivl
dec
mov
mov
data16
arpl
pop
sarb
out
scas
outsb
out
imul
out
rclb
sbb
and
pop
inc
xor
jns
jno
insl
gs
xchg
ja
push
movsl
loope
sbb
jecxz
pop
xor
or
and
push
or
hlt
or
cmc
stos
or
aam
mov
mov
inc
fistpll
jecxz
sub
je
or
sti
fwait
sub
test
mov
sbb
sbb
out
loopne
mov
js
fadds
ficomps
mov
test
jbe
jge
jle
jnp
xor
fdivrs
push
adc
and
mov
into
adc
pop
lcall
sbb
lcall
fs
cs
ljmp
insl
scas
pop
cmpsb
iret
cli
ds
or
cmp
sahf
cld
xchg
mov
fdivrs
cmpl
fdivl
xlat
movsb
dec
and
or
or
adc
pop
mov
jmp
mov
icebp
add
xlat
shl
es
dec
jge
lret
bound
mov
mov
mov
daa
imul
test
mov
sarb
cld
jnp
xchg
jne
push
xor
push
add
add
jne
sbb
lds
pop
leave
and
popf
fisubrs
push
cwtl
xchg
lcall
cmp
pop
jmp
jnp
fmull
or
cld
push
and
das
mov
idivb
jb
addr16
xor
mov
pop
fldt
fidivl
addb
sbb
popa
mov
adc
xor
sbb
mov
mov
test
enter
pusha
addl
mov
sub
add
sub
inc
add
ret
mov
dec
sbb
outsl
fwait
es
push
xor
adc
jmp
aaa
adc
xchg
cmp
inc
mov
and
jnp
sub
lods
xchg
push
push
push
popf
mov
lods
push
in
loope
push
ret
ss
xchg
in
sub
sti
cmp
mov
lcall
clc
ret
stc
mov
addr16
test
loope
mov
test
mov
js
push
xor
fisubrl
inc
sub
in
cmove
nop
add
js
and
and
inc
int
inc
jb
mov
jnp
inc
jns
or
test
xlat
out
ret
rcr
push
mov
ror
fnsave
mov
lods
pop
icebp
adc
dec
dec
adc
movsb
mov
pop
cmp
push
sbb
xorb
or
bound
cmpsl
ja
xor
rclb
xchg
ljmp
lret
imul
add
scas
add
divb
jl
xlat
lea
jbe
push
fsubs
test
fstp
fwait
sbbl
sbbl
test
das
push
mov
mov
push
mov
xchg
xlat
out
mov
jo
jmp
inc
loop
cld
jns
mov
adc
or
jge
repz
inc
sti
stos
xlat
and
lret
in
lock
xchg
call
scas
and
fwait
xchg
aas
in
pushw
inc
loop
mov
xchg
push
aam
icebp
fwait
bound
add
xor
pop
and
hlt
mov
int3
aaa
and
fiaddl
dec
repz
pop
mov
in
jecxz
aam
xor
sti
scas
int3
in
mov
add
loop
mov
pop
stos
push
add
gs
scas
sub
daa
into
test
jg
data16
jge
ret
enter
outsl
jle
cli
sub
xchg
jle
add
cmp
subb
sbb
mov
jns
sbb
inc
mov
stc
adcl
out
sbb
dec
push
je
or
insl
and
dec
rorl
insb
icebp
mov
jb
movsb
or
lahf
fidivrs
sbb
mov
cmp
mov
loope
ud2
clc
sti
cld
push
pop
outsl
ds
and
sub
ja
and
popf
xchg
xchg
mov
jecxz
inc
mov
loope
inc
ds
dec
in
jmp
fimull
dec
adc
xor
in
addr16
xor
mov
enter
xchg
push
dec
movsl
mov
jg
lcall
shlb
xor
ret
xlat
dec
dec
data16
and
js
dec
jg
in
pop
xchg
xchg
lods
mov
xor
and
fs
test
notb
mov
insl
clc
or
rorb
mov
outsb
add
in
popf
inc
cmp
fwait
lret
loop
pop
add
add
rol
and
mov
inc
fwait
inc
gs
stc
mov
add
mov
or
xchg
sub
aaa
jle
mov
ds
sbb
xchg
call
insb
bound
daa
out
cmp
jne
xchg
call
sub
mov
ss
push
and
inc
xchg
mov
notl
xor
adc
es
test
ja
jg
mov
insb
and
xchg
rcll
pop
mov
aas
arpl
jmp
push
xchg
iret
xchg
mov
gs
and
fisttpll
stc
push
cli
iret
dec
sbbb
fistl
data16
jno
aaa
ss
cmpsb
pop
es
inc
mov
jns
inc
jnp
sbb
sub
xchg
les
fmull
inc
mov
jge
sbb
jg
mov
xor
or
pop
inc
mov
fwait
dec
cwtl
je
cwtl
xor
test
out
xor
push
dec
add
rcrl
push
in
xchg
mov
mov
dec
leave
pop
and
xchg
lds
out
jbe
lea
fadds
xor
push
out
mov
adc
push
lret
inc
adc
dec
sub
cwtl
mov
push
insl
jo
outsb
fld
clc
xor
jmp
jno
xchg
iret
idivl
movsl
loop
pop
lret
add
inc
daa
or
lahf
mov
jns
cmp
pushf
iret
enter
nop
cmp
sbb
add
jecxz
xlat
pop
and
sub
push
mov
jmp
push
jecxz
jb
xchg
aas
cmp
mov
jns
int3
xor
out
loop
fmuls
sbb
sti
lahf
sti
outsl
sbb
in
test
xor
lret
ss
or
pop
inc
push
sub
leave
pop
testb
pusha
add
ds
lcall
sub
or
cmpsb
push
ret
je
pop
mov
jb
ret
movsl
sub
orps
test
and
mov
push
icebp
mov
and
movsb
cmp
jbe
mov
xor
add
adc
xor
inc
fsubs
cmc
cltd
mov
ret
loop
gs
movsl
jge
mov
and
inc
lock
pushf
mov
stos
loopne
cld
adc
pop
add
pop
cwtl
test
rorb
cmc
inc
jo
jle
sub
aam
xchg
ss
sti
cs
sbb
mov
jb
cwtl
lfs
cmp
pop
ds
out
pushf
adc
adc
rcrl
cld
dec
jmp
cmp
add
sahf
jle
movsl
pop
sbb
dec
xor
xchg
mov
popf
push
pusha
mov
or
cmp
xor
jl
imul
jb
inc
xchg
testl
mov
sbb
movsb
arpl
jle
nop
mulps
fnsave
and
dec
or
jb
shr
andb
cmp
add
movsb
jl
scas
fcmovne
lock
maskmovq
negl
mov
mov
push
pop
push
push
lock
addr16
inc
jne
inc
fbstp
outsb
and
pop
push
enter
out
loope
pop
sbb
lret
lcall
xchg
pop
pusha
lret
sub
ret
inc
adc
lret
dec
jge
popf
jge
je
stos
jne
jne
cmp
notl
dec
stc
test
and
lahf
out
mov
sbb
sub
insb
cmp
aas
ret
jg
fsin
andb
test
je
inc
jl
adc
pop
lahf
mull
jns
dec
js
test
fs
mov
push
xlat
imul
add
or
and
sar
sub
mov
dec
sbb
fisubrs
and
dec
mov
inc
ja
hlt
sub
in
test
daa
adc
pop
ljmp
xor
pop
cmp
jle
cmpsl
jp
add
test
push
das
cmc
sub
mov
int3
in
push
bound
jl
cwtl
outsl
scas
fnstenv
add
dec
sbb
and
push
mov
xor
call
jne
cmc
sarl
mov
and
movsl
orl
ljmp
ja
scas
cmp
test
xchg
add
pop
jnp
xor
sbb
mov
lea
fwait
cmc
or
cs
cwtl
es
jns
cltd
add
cld
lods
push
adc
dec
ret
mov
popf
popa
mov
cmc
int
lods
repz
mov
iret
push
repnz
xor
push
cmp
inc
sub
arpl
push
aad
inc
mov
sahf
divl
leave
mov
cmp
into
inc
push
jl
orb
call
mov
xor
push
sti
std
pop
ds
fwait
add
pushf
sti
xchg
arpl
loope
imul
push
pop
and
mov
push
pop
icebp
xor
call
push
arpl
add
push
and
ffree
js
shll
movsb
mov
push
xchg
fildl
inc
in
cmp
jae
or
mov
repnz
xchg
push
fistpll
hlt
jne
or
mov
pop
sub
mov
or
cmpsl
insl
lea
lea
or
sbb
inc
adc
je
gs
cli
stc
int
add
sbb
lahf
sub
adc
adc
and
iret
push
ja
cs
inc
cmpsl
jnp
lret
jp
and
jg
dec
cmp
sub
add
lret
data16
sub
adc
push
inc
mov
mov
inc
pop
pop
push
and
jnp
mov
gs
jmp
jl
int
rep
add
adc
cmp
xchg
add
adc
mov
push
mov
pop
pusha
out
mov
lret
mov
mov
int3
test
enter
outsl
cltd
fcmovbe
mov
scas
sub
lahf
movsb
leave
xor
or
mov
icebp
in
jo
inc
dec
jae
and
test
es
inc
iret
lods
xor
in
jae
pushf
xchg
call
push
push
mov
dec
cmpb
ljmp
loopne
imul
fstpl
jns
pop
sti
out
aaa
aad
adc
inc
and
jns
jge
jge
aas
std
mov
jne
js
mov
adc
cmpsl
fcmovb
adc
push
mov
push
or
aas
sub
repz
cmp
mov
lret
shrb
xchg
popf
hlt
xchg
rol
xchg
mov
into
rcr
addr16
mov
lods
dec
rclb
loopne
mov
ljmp
psllq
roll
jns
dec
inc
ss
mov
xchg
cmp
inc
or
jb
imul
jle
mov
adc
lods
repnz
lea
arpl
icebp
sti
cmp
ja
mov
out
pop
scas
stos
add
mov
xlat
jp
push
mov
xchg
mov
std
out
mull
jnp
aam
mov
inc
dec
sbb
sub
add
les
lahf
int
arpl
pop
sbb
mov
mov
fs
xchg
jmp
hlt
sub
inc
stos
es
rolb
push
shrl
mov
inc
mov
and
out
pop
jnp
popa
in
xchg
outsb
lock
mov
call
mov
insb
mov
imul
loop
jl
mul
cmp
out
sti
fisubl
mov
dec
jae
or
jb
loope
sub
jmp
cmp
adc
ja
daa
push
movsb
jne
dec
cmp
jg
push
adc
int
pop
push
xchg
and
sub
xchg
shl
cmp
bound
inc
pop
imull
jle
in
mov
jns
push
xchg
std
xchg
mov
movsb
jmp
inc
fldcw
popa
clc
leave
std
out
mov
aas
les
dec
cli
push
jns
jp
aad
xlat
xor
pop
enter
push
inc
ljmp
cmp
pop
dec
add
inc
mov
and
and
push
dec
imul
jno
cmp
adc
mov
imul
jne
adcb
rol
or
in
dec
add
out
inc
jne
and
mov
and
ja
lahf
ds
loopne
or
cmpsb
cli
xlat
xchg
pop
lret
jbe
dec
insl
sbb
data16
ljmp
rolb
pop
dec
sar
ljmp
ja
xchg
gs
flds
inc
inc
jnp
test
ljmp
jne
xor
adc
data16
pop
mov
out
mov
inc
add
sbb
pop
mov
sbb
dec
mov
xor
cmp
stos
jbe
push
mov
jmp
jb
push
or
divl
sbb
add
sbb
icebp
aam
and
testl
enter
and
lret
push
cwtl
inc
inc
mov
cld
imul
xor
bound
adc
test
aaa
rcr
mov
cs
pushf
outsl
pop
jg
cmpl
add
jle
or
int
shl
arpl
push
mov
mov
xchg
loop
arpl
push
pop
ljmp
mov
ret
mov
or
xlat
or
mov
pop
mov
dec
adc
xor
jno
int
mov
cltd
pop
scas
mov
aaa
pop
imul
loope
pop
loopne
cmp
mov
sbbl
adc
mov
cs
mov
clc
push
sbb
stos
adc
jne
mov
pop
subl
sbb
mov
rcr
jle
add
cld
je
jns
sub
xchg
adc
test
int3
jns
mov
fsubrp
ret
scas
fs
add
dec
mov
jno
and
push
sbb
add
or
add
cmp
sub
dec
out
adc
sub
aas
mov
mov
push
sub
ret
ljmp
scas
push
xlat
push
cmpsl
cltd
loopne
adc
or
notb
push
mov
insl
aaa
jo
bound
push
mov
jecxz
jg
outsl
inc
inc
addb
mov
lods
scas
stos
push
sbb
jge
pop
mov
xor
jae
mov
out
or
pop
mov
fstpt
jns
mov
sub
fists
jo
cmpl
mov
push
sub
cli
dec
mov
clc
loopne
push
or
in
icebp
add
cmp
sub
insb
pop
imulb
inc
cmp
adc
lea
shlb
dec
pusha
or
jnp
push
mov
and
cld
aas
xchg
ret
and
pop
ret
in
mov
push
ret
dec
lret
xchg
pusha
sbbb
rorb
daa
mov
test
test
inc
mov
divl
scas
sub
push
push
fsubrl
adc
mov
add
icebp
insb
cmpsl
mov
out
pop
jo
jb
fs
xor
add
ja
adc
or
sarb
or
fcoms
mov
loope
iret
mov
jp
or
lret
and
jnp
push
jbe
jnp
outsb
adc
fbstp
mov
xchg
aad
ret
xchg
loop
arpl
int
pop
mov
shll
mov
dec
testl
push
add
mov
cmpsl
mov
push
xchg
push
mov
xor
int
outsl
mov
sbb
dec
mov
xor
jo
sub
out
pushf
mov
push
lahf
lods
andb
pop
or
leave
push
pop
sbb
mov
lret
aas
mov
ja
dec
add
push
and
xor
xchg
mov
cld
movsb
fbld
sub
and
inc
lahf
in
out
pop
push
push
fimull
decb
add
mov
mov
adc
fnstenv
imul
xor
in
xchg
dec
iret
pusha
shll
sbb
mov
add
jne
xor
mov
pop
xchg
les
adc
ds
cli
mov
inc
stc
ja
mov
loopne
mov
stos
add
test
lock
mov
jge
push
mov
mov
adc
mov
xor
inc
and
std
sbb
mov
xor
fdiv
ss
icebp
xor
jns
aam
out
xchg
xorl
push
arpl
push
in
ret
xchg
inc
pop
xor
lret
mov
cmp
int3
addr16
and
popf
xchg
fcoml
push
jg
sar
pop
roll
dec
jns
leave
push
movsl
or
lcall
outsb
in
sbb
jg
mov
dec
add
push
pop
inc
nop
mov
mov
pop
js
adc
mov
dec
cs
rcrb
outsb
enter
ffreep
gs
pop
sub
or
pushf
mov
push
in
adc
xor
mov
fs
divb
push
push
aas
dec
rcr
iret
dec
aam
in
add
push
mov
rorl
mov
add
enter
lock
dec
scas
test
dec
jbe
rcl
pop
cmp
aam
xor
ret
pop
xor
jmp
enter
scas
out
rcll
ja
dec
xor
jp
pop
jae
xlat
mov
dec
pop
mov
dec
push
js
test
test
int
mov
aad
inc
repz
add
fisubrl
sbb
nop
adc
loope
push
sub
adc
test
out
and
insl
lods
add
out
stos
mov
dec
inc
rcl
adc
mov
add
mov
sub
ja
mov
adc
lods
sbb
shll
aad
jge
daa
pop
outsb
mov
pop
into
adc
pop
into
into
shlb
imul
push
mov
js
data16
iret
pop
addr16
cltd
cmp
cwtl
inc
arpl
push
shlb
jns
aas
xor
bound
pop
repz
mov
cmp
jge
sbb
jl
xor
imul
cmp
ja
movl
pcmpgtd
jecxz
dec
cli
jae
sub
imul
cmp
in
popf
dec
js
ret
dec
and
pop
ret
pop
stos
pop
sbb
minps
pop
enter
inc
fcomps
sti
push
lret
pop
fldl
into
lret
mov
mov
out
mov
jge
call
roll
and
roll
outsl
into
mov
fdivrl
sub
xchg
insb
dec
lds
xchg
jo
and
and
icebp
jbe
or
int
add
adc
xchg
or
movsb
jo
mov
push
sub
mov
push
inc
push
add
cmpb
test
loop
repnz
jns,pn
inc
lcall
push
aas
lods
out
pop
add
push
sar
inc
and
test
and
mov
fs
dec
jle
jb
inc
push
popw
aam
in
out
jo
mov
xchg
sub
ljmp
sbb
mov
mov
push
cmp
xchg
adc
cs
in
ret
jnp
jl
xchg
push
inc
cld
push
jns
mov
out
jns
stc
adc
mov
add
hlt
shl
and
jge
pushl
inc
mov
ja
inc
ss
mov
pop
lahf
xor
cmp
push
xor
push
adcb
aad
cmp
or
pop
jns
pop
mov
add
dec
add
push
push
jg
lret
daa
and
lods
test
push
cltd
loopne
push
xchg
and
sub
mov
add
sahf
sbb
dec
repz
mov
mov
cli
and
js
cmc
iret
dec
xor
pop
aad
test
add
dec
out
insb
popf
dec
in
mov
call
xchg
sub
test
mov
pmullw
cmp
adc
out
pop
or
test
std
movsb
dec
or
sub
mov
ret
pop
push
pop
adc
sub
xor
push
xor
sbb
adc
stos
mov
lods
jno
pop
das
inc
fs
add
sub
push
sahf
in
addb
imul
aam
das
lahf
pop
insb
push
int
ror
aas
mov
cs
inc
mov
out
xor
or
inc
leave
pop
fwait
xchg
jae
push
xlat
jecxz
test
ror
cmp
adc
fldenv
push
add
mov
add
filds
xchg
lds
aad
cmpsl
xchg
ror
out
pop
inc
gs
or
test
adc
clc
sub
pop
ljmp
insl
mov
sub
bound
jle
test
inc
xchg
aam
xchg
lahf
imul
adc
push
inc
hlt
sub
out
pop
and
out
repnz
cmpsl
jns,pn
mov
ret
ss
frstor
inc
push
sub
push
jmp
push
out
cmpsb
fstpl
and
ret
inc
dec
cmp
xchg
gs
sub
sub
cmc
jg
lods
ds
enter
xor
aas
mov
xchg
jbe
loop
rclb
mov
mov
das
out
sahf
cmp
add
xchg
outsb
gs
inc
test
int3
xlat
adc
push
aam
dec
mov
cmp
pop
icebp
pop
add
jbe
jae
fildl
out
loopne
push
fldcw
scas
add
jbe
stos
scas
insl
and
pop
add
aas
xchg
xor
jae
xlat
inc
xchg
loop
cmp
mov
nop
call
ftst
sub
xchg
lock
fdiv
hlt
push
shl
xor
adc
add
sti
jg
push
mov
sub
xorb
std
sbb
xor
add
pusha
lcall
lock
cmpsb
nop
cs
or
lock
mov
jecxz
or
push
les
outsl
in
mov
out
cmp
cltd
mov
outsb
cltd
dec
sbb
inc
scas
inc
fwait
inc
and
shrl
dec
fcompl
xchg
cmp
jle
out
mov
cmpb
jmp
add
in
sti
lret
addr16
clc
push
fcompl
and
jl
sbb
jns
fwait
mov
and
fsubrl
xchg
mov
and
fucom
mov
in
aad
pop
popf
inc
and
nop
test
je
inc
mov
rcll
push
sbb
xchg
jno
and
mov
das
inc
mov
mov
pop
inc
mov
inc
call
add
aaa
lahf
sbb
mov
mov
setle
push
sbb
pusha
je
xchg
dec
adc
das
or
and
xchg
adc
pop
clc
sub
adc
shrb
out
nop
nopl
xchg
pop
in
jg
out
sbb
sub
inc
fsubs
sbb
push
push
pop
ja
adc
inc
add
icebp
xchg
test
aam
mov
lea
mov
add
lret
lods
or
insb
int
pop
test
shlb
mov
lret
jo
sub
push
scas
sub
adcl
sar
ss
cwtl
jle
repnz
dec
hlt
jne
jp
pop
adc
inc
mov
lcall
mov
xchg
push
imul
shl
mov
xchg
leave
mov
dec
std
sub
and
jne
jo
cmp
mov
mov
sub
es
mov
ds
jmp
xchg
pop
iret
ficoms
fcomps
cwtl
stos
push
stos
jns
dec
sbb
pop
lret
fwait
jae
jmp
pushf
lds
test
cltd
push
pop
pop
subb
mov
and
sbb
inc
es
rcll
push
pop
into
jo
push
shlb
sub
bound
aam
fldcw
loope
out
int
jnp
je
jb
dec
sub
cmp
test
ljmp
daa
stos
cltd
push
mov
clc
loop
jbe
mov
jo
jp
push
add
scas
sub
mov
stos
ja
das
stos
xlat
or
repz
cmpsl
dec
lret
fcmovbe
js
pop
inc
sbb
sbb
jl
xchg
ds
sar
or
daa
insl
dec
cmp
ss
jmp
loopne
into
add
push
clc
sub
xor
jmp
dec
pop
mov
add
ljmp
fbld
loop
or
stos
dec
add
into
xlat
stos
fidivrs
pop
push
or
cmp
dec
or
inc
cmpsl
mov
mov
mov
dec
movsl
push
loope
in
jl
les
adc
aad
clc
cmp
pop
repnz
cmp
jno
idiv
je
les
popa
xchg
jl
out
mov
pushf
fidivrs
faddp
push
mov
pop
mov
xchg
push
hlt
mov
and
mov
push
mov
cmp
enter
jecxz
and
js
nop
inc
cltd
mov
or
lret
scas
add
mov
dec
dec
mov
addr16
cmc
std
mov
and
pop
shll
adc
adc
cmpsb
pop
in
int
mov
shll
dec
ret
dec
daa
inc
xor
mov
sub
test
int
pop
mov
iret
cs
stos
shl
jecxz
push
in
jp
rcrl
sbb
or
ss
bound
add
xor
ja
pop
pop
inc
pop
lds
aaa
cli
lock
and
out
lods
testl
jns
mov
addr16
and
mov
push
ss
pop
add
jge
test
xchg
mov
adc
push
add
add
inc
pop
jnp
out
cmp
cmp
flds
jecxz
push
mov
mov
pop
pusha
lods
pop
mov
sbb
jb
lods
jg
dec
pop
or
add
or
push
aaa
or
aam
stos
ja
rcrl
and
aas
push
mov
inc
mov
and
sub
pop
out
popa
lea
or
mov
movsl
loop
sub
lea
fsubs
xor
rcpps
inc
fwait
xor
aam
divb
dec
cltd
fs
pusha
push
stc
popf
mov
pop
add
mov
loop,pn
in
add
push
sbb
add
test
or
out
lret
or
add
sbb
inc
scas
inc
sbb
imul
mov
dec
lahf
lret
and
sbb
xchg
cmc
dec
jne
xchg
fnstcw
fwait
dec
cli
mov
add
push
add
addr16
jg
ret
mov
mov
int3
sub
pop
pop
jns
mov
inc
and
jnp
mov
pop
in
mov
repnz
adc
xor
mov
fwait
push
iret
int3
cmp
jecxz
fwait
xchg
test
dec
inc
jne
jo
ss
je
adc
imul
dec
or
ret
pusha
lret
rclb
outsb
push
das
pop
xor
fs
mov
add
jl
mov
insb
xchg
dec
add
mov
orb
sbb
popa
imul
dec
jecxz
sub
data16
dec
out
int
jae
aas
lret
mov
mov
sub
lahf
test
dec
add
filds
fwait
pop
mov
xor
repnz
icebp
cmp
cmp
insl
mov
sub
jns
xchg
mov
pop
in
test
test
lock
ljmp
mov
mov
xchg
sbb
push
or
mov
insl
mov
pop
pop
or
icebp
cmp
and
dec
into
rcl
sbb
jmp
adc
push
std
mov
cmp
cmp
sub
aaa
mov
mov
sub
pop
cli
out
arpl
aas
cmp
ja
push
sbb
jl
xchg
jp
cmp
push
and
xlat
xor
push
sub
and
cltd
xor
adc
pusha
push
test
adc
sub
pop
push
lock
dec
push
in
dec
inc
dec
ret
mov
jnp
mov
fidivs
out
je
push
or
cmp
cmpsl
pop
push
push
loopne
ret
aas
add
xlat
fbstp
scas
sub
insb
aam
jle
outsl
lret
xlat
add
negl
dec
and
aas
fsubs
xchg
cmpsl
xchg
lcall
xchg
lcall
mov
sub
push
jno
lods
das
mov
mov
pop
out
xor
shll
jmp
int
movsl
push
cmp
out
rclb
sub
sub
add
aas
mov
add
and
les
push
pop
test
xor
cmpl
cmp
and
xchg
xchg
push
mov
icebp
in
je
iret
es
adcb
negb
xchg
cmp
cmp
lods
jns
jb
aad
lahf
dec
gs
push
in
bound
iret
test
daa
out
jo
sbb
gs
mov
aam
xor
push
out
out
mov
sub
outsl
and
jno
pop
lret
mov
adc
repz
stc
testl
loop
or
in
dec
jne
jge
repz
faddl
cmp
jge
push
mov
test
lcall
cld
fsubrs
mov
int
cwtl
loope
jo
pop
dec
mov
or
and
mov
push
adc
dec
in
outsl
std
adc
out
nop
filds
int3
imul
and
imul
or
stos
sbb
aam
jecxz
mov
es
jle
daa
lock
lods
mov
lret
test
mov
neg
inc
in
sub
mov
mov
es
aam
pop
lret
out
mov
jl
sahf
mov
mov
mov
add
rcrl
aas
jns
mov
movsb
xchg
lea
mov
sbb
cmp
xor
mov
fidivrl
mov
cmp
into
je
dec
ds
xchg
mov
sub
and
jo
jp
int
mov
mov
cld
cld
lcall
into
xchg
je
jge
scas
sbb
out
ret
iret
sti
popf
pop
movsb
sub
lods
loop
cwtl
mov
jo
std
add
sarl
aas
std
pop
cld
cmp
sarb
movsl
pop
mov
mov
mov
faddl
push
or
xor
je
xchg
pop
and
repz
pusha
inc
divb
ja
mov
xchg
pop
in
inc
dec
jle
push
jnp
xor
pop
and
outsb
loopne
sub
js
test
mov
fnstcw
clc
aas
mov
pop
cs
xchg
scas
sub
jb
imul
add
mov
stc
push
sbb
xchg
sub
add
dec
or
mov
js
cmp
movb
mov
outsb
sahf
xor
push
pop
popw
shlb
movsb
bound
mov
push
mov
sub
xchg
jnp
lret
rcl
mov
and
xchg
adc
mov
dec
add
pop
xchg
xor
lcall
jecxz
jg
push
lcall
cmp
mov
test
xchg
std
lret
add
add
lds
shl
inc
fisubl
push
and
push
call
out
imul
mov
pop
sahf
in
xchg
xor
orl
cmp
mov
jecxz
lcall
adcb
mov
dec
adc
gs
xchg
adc
mov
jp
fcmovnbe
pushf
js
out
xchg
sub
je
cmp
into
push
push
sti
sub
mov
inc
repnz
ret
leave
add
insb
jnp
mov
push
and
adc
xchg
dec
push
mov
scas
sbb
add
in
add
push
xorl
adc
xchg
and
lcall
inc
xor
push
add
lods
lods
in
ljmp
push
push
sbb
stos
int3
cmp
ljmp
and
mov
jae
ja
shrb
lret
cmpsl
mov
push
inc
sub
movl
shlb
in
sbb
mov
es
sbb
pusha
les
mov
stos
in
cmp
test
pop
mov
dec
mov
xchg
hlt
mov
out
cmp
and
inc
sbb
shlb
cmpsl
shlb
stos
mov
lret
pop
out
repz
sarl
adc
pop
lret
in
jg
xchg
nop
push
jae
cmp
mov
xor
jnp
pop
or
jbe
fidivrl
xchg
arpl
ds
xchg
je
dec
ljmp
sub
sub
adc
inc
push
jns
add
jne
cwtl
aad
ljmp
sbb
fistps
jnp
movsl
fstpt
mov
sbb
and
hlt
push
jecxz
pop
mov
das
loopne
cmp
mov
cmpsb
adc
cmp
loop
cmp
inc
sub
adc
js
mov
mov
mov
mov
adc
test
cs
frstor
shll
sbbl
js
adc
ja
int3
lock
lock
pop
push
pop
ficoml
js
out
sahf
sbb
xor
mov
popa
loope
stc
push
inc
mov
cmp
cmp
pop
push
pop
add
iret
push
push
fstpl
pop
movsl
adc
cmpb
jle
add
adc
cmpsb
fstpt
push
sahf
inc
sub
add
mov
lock
and
sarl
in
mov
jl
push
das
push
sbb
and
dec
pop
dec
cltd
aaa
mov
sbb
jg
push
jg
mov
out
mov
cmp
fsts
or
pop
in
lods
pop
sbb
mov
mov
popf
adc
xchg
and
bound
lds
test
cld
mov
test
inc
sahf
sbb
popf
sti
out
sub
leave
push
test
hlt
lods
gs
adc
pop
lret
pop
shrl
iret
pop
xor
ja
cli
arpl
dec
inc
mov
lcall
push
cwtl
mov
cmp
mov
repnz
nop
mov
out
jbe
jge
cmc
and
lock
jecxz
adc
mov
arpl
test
inc
mov
into
xchg
mov
pop
addb
lret
xor
stos
dec
jmp
cmp
je
imul
jp
jne
orl
cmc
mov
fwait
enter
pop
pusha
jae
insl
push
cmc
lods
leave
sbb
mov
dec
in
rolb
xor
rolb
sahf
clc
inc
xor
mov
orl
cmp
dec
xchg
add
pop
jge
fs
xchg
enter
dec
dec
cmpsb
and
pop
gs
aam
xchg
sub
leave
das
rclb
out
mov
push
and
scas
mov
sahf
xchg
sbb
jmp
out
inc
fwait
shrb
sahf
mov
je
and
in
pop
psubd
xorl
xor
fsubs
and
cli
add
adc
lret
pop
nop
leave
mov
out
mov
mov
jne
mov
and
loope
test
dec
sub
fsubrs
bound
scas
mov
loopew
pop
sub
sub
stc
sti
inc
cwtl
cmp
loopne
dec
jge
adc
mov
insl
les
fsubp
xor
mov
jo
fisttpl
popa
nop
push
cmp
dec
in
adc
cld
xor
in
pop
xor
js
mov
inc
pop
jg
ljmp
and
es
out
lret
out
lods
int
and
jnp
dec
into
fbld
inc
adc
rol
popf
xchg
mov
xlat
add
fistl
pop
fdivrs
jo
mov
mov
mov
repnz
popa
loop
inc
xchg
cmp
mov
fmul
pop
mov
pop
cmp
hlt
fcompp
fwait
scas
mov
aam
cmp
sbb
cmp
mov
sahf
std
jmp
cltd
dec
ljmp
pop
in
scas
lock
add
popf
adc
pop
fucomip
dec
popf
or
cli
jmp
in
insl
fs
mov
nop
mov
cltd
int
lods
jge
mov
adc
es
dec
inc
jno
mov
in
out
scas
lock
pop
fcompl
mov
sub
add
push
or
lock
fsubrs
sub
inc
mov
adc
aam
push
fsts
scas
add
in
gs
or
add
jge
cmp
in
stos
adc
xchg
es
pop
mov
int
jne
scas
push
mov
xor
push
pop
push
fwait
jmp
jmp
ss
sub
das
addr16
dec
in
jle
cmpsl
mov
and
pop
sbb
test
aaa
adc
inc
adc
int3
add
cmp
stc
pop
pushf
xchg
jmp
jae
lea
or
xor
fsubrs
mov
dec
test
pop
push
js
int3
out
or
popf
add
adc
xchg
jl
mov
clc
cmc
cli
jle
cmp
pop
pop
adc
inc
or
mov
mov
jp
aas
bound
dec
jecxz
push
call
iret
xchg
jp
xor
sbb
cmc
sbb
mov
fadd
jb
cs
dec
xor
lret
pop
mov
jae
jl
and
sti
cwtl
push
mov
cmp
sbb
dec
jnp
push
jle
enter
pop
pusha
test
mov
or
scas
jne
out
push
imul
cwtl
call
jmp
dec
rorl
sbb
test
in
repnz
aam
into
cmp
push
test
cmp
stos
fucomip
lahf
iret
enter
daa
cmp
adc
and
cmp
push
sbb
repz
push
dec
xchg
test
std
fs
mov
pop
cmp
jmp
mov
or
andb
mov
mov
mov
pop
cmp
scas
nop
mov
ja,pn
jno
aaa
mov
cmpsb
sub
cmp
and
dec
push
jge
mov
xor
loopne
jns
mov
in
push
fwait
mov
inc
push
aad
and
dec
mov
add
leave
pop
or
cmpsl
add
and
fimull
push
cmp
imul
pop
out
inc
jg
fdivrp
jbe
mov
pop
add
mov
and
ljmp
int3
lcall
fs
inc
lea
movsb
or
sbb
mov
xchg
shr
push
loop
js
sbb
movsl
jmp
jp
dec
and
call
dec
mov
sbb
or
dec
xor
out
dec
rcrl
ja
xor
jae
gs
sbb
in
pop
jns
ja
add
int3
mov
ret
push
or
stos
xchg
mov
sub
inc
push
or
mov
sub
xchg
loop
mov
dec
mov
mov
push
ds
dec
inc
push
sub
dec
adc
sbb
jae
and
mov
mov
fiadds
aaa
mov
pop
cmc
shr
pop
int
ret
sbb
mov
aas
mov
push
shl
int3
roll
push
add
jne
pop
xchg
loope
inc
and
adc
sbb
stc
mov
movsb
pop
inc
mov
mov
sub
mov
and
jbe
jg
cwtl
jg
mov
fcmovnu
aam
lahf
adc
add
scas
rcl
lds
sub
inc
mov
js
je
or
add
add
jns
mov
jnp
dec
sar
jmp
divl
jg
sahf
pop
idiv
jb
and
dec
add
into
add
int
ja
pop
iret
sub
and
outsb
pop
fcoml
loop
in
cli
mov
hlt
pop
or
daa
adc
push
outsl
test
call
cmc
out
divb
mov
add
and
in
inc
loop
push
or
movsl
rcrl
mov
dec
loopne
push
cmpsb
add
aam
adc
push
or
popa
scas
pushf
adc
movsb
nop
xor
push
cmc
flds
mov
mov
mov
mov
add
mov
push
sbb
iret
sub
fcompl
fwait
insb
push
lock
pop
in
mov
addb
xor
jl
mov
sub
stmxcsr
scas
jmp
cmc
ret
xor
fcmovnbe
ret
dec
or
push
rol
lret
sub
rorb
ja
mov
jnp
inc
or
mov
inc
cli
xor
dec
je
ljmp
fcompl
xor
jnp
sti
ret
aam
push
in
dec
mov
jl
mov
add
mov
sti
clc
das
lret
inc
inc
xchg
cmpl
movsl
xor
movsb
jbe
out
add
out
sbb
push
leave
xorl
mov
or
push
pop
icebp
push
test
mov
lret
jl
cmp
mov
jns
sbb
jmp
rcrb
cld
fidivs
inc
dec
out
xor
popa
sub
pop
addr16
and
fnstcw
rolb
jno
sti
xchg
test
decl
ret
inc
fildl
jnp
cmpb
add
pop
push
rep
sub
lea
loopne
push
and
insl
dec
in
pand
cmp
or
inc
jge
pop
jns
xor
mov
repnz
jae
mov
pop
adc
jecxz
js
mov
push
push
int
mov
in
sbb
std
inc
lahf
mov
nop
mov
mov
mov
mov
push
and
dec
imull
test
outsl
xor
or
jmp
push
inc
cmpsl
xor
or
pop
sub
shrb
lods
jmp
pop
cmp
sub
and
std
xor
ds
adcl
mov
push
and
mov
or
push
ljmp
mov
push
add
jb
daa
out
out
enter
inc
movb
cltd
mov
test
out
dec
loop
inc
clc
push
int3
out
clc
sbb
adc
xor
aaa
cmp
xchg
mov
flds
xor
lahf
addps
push
sub
lret
cmp
cli
gs
push
jl
popf
imul
pop
in
cli
push
cli
jnp
and
mov
idivb
clc
mov
mov
pusha
cmp
rorl
add
imul
adc
xor
cmc
mov
out
std
push
sbb
sbb
incb
fildl
cmpsb
leave
mov
and
add
cmp
leave
jl
push
pop
push
sub
xor
icebp
sub
lahf
cmc
fs
jae
gs
pusha
or
xor
cmpsb
and
inc
popa
cli
dec
mov
test
out
das
mov
jne
orl
fisttps
jg
inc
sbb
sub
or
adc
ret
das
dec
repnz
fildll
mov
pop
jnp
cmp
les
jmp
icebp
scas
bound
mov
jns
mov
and
test
add
sub
ret
and
push
mov
test
pop
fdivl
cmpsb
aam
outsl
pushf
push
in
sub
or
jmp
xchg
pop
inc
xorb
mov
decb
sti
je
cmpsb
test
popf
xchg
popl
push
jns
sub
fadds
lret
and
jmp
dec
int3
mov
and
xor
fildll
jl
adc
mov
sbb
cmp
pop
dec
pop
adc
repnz
mov
xchg
das
push
in
outsl
stc
addr16
and
out
inc
clc
filds
push
pop
sahf
out
outsl
stc
or
mov
adc
pop
pushf
js
or
movsl
mov
jb
jbe
xor
dec
mov
loop
lods
jle
in
xchg
jecxz
leave
pop
push
inc
or
imull
notb
rcrl
jbe
sbb
xchg
jg
das
cld
mov
ret
xchg
subb
xchg
sub
jno
movsl
lcall
or
out
fmuls
or
push
push
or
mov
sub
pop
fidivrl
cmp
scas
inc
jnp
sbbl
in
test
inc
enter
cmc
fdivs
cmp
push
in
enter
mov
aaa
icebp
cli
or
inc
movsb
pop
mov
es
or
mov
sub
jle
pop
jne
out
mov
mov
mov
sub
cmc
mov
sarl
inc
lea
push
sti
and
pop
dec
add
not
ljmp
cmpw
or
mov
add
xor
jne
mov
xchg
or
rorb
clc
arpl
push
inc
fwait
pop
jne
xchg
and
or
jp
mov
xlat
stc
jecxz
pushl
shll
push
lret
shrl
or
and
or
dec
cld
dec
sub
sub
cld
repnz
mov
gs
jl
pop
pop
cmp
movsl
fadds
fcoms
movsb
mov
jnp
sbb
loope
aam
mov
jmp
outsb
sbbl
add
mov
insb
inc
ja
pop
mov
iret
xchg
pop
inc
iret
repz
loopne
push
jnp
xor
jno
out
adc
xchg
rol
cmp
insb
pop
cmc
pop
clc
mov
pop
in
lock
lahf
mov
or
icebp
cmp
out
xor
jl
mov
movsl
push
popf
mov
sub
xor
push
or
pop
pop
cmp
les
call
adc
inc
xchg
push
cmp
push
loop
push
xchg
jp
pop
in
sbb
jns
mov
dec
mov
andl
jbe
push
sub
fisubs
push
fistpl
adc
pop
cs
xchg
or
sub
push
lds
lds
xchg
inc
jle
jge
ret
sahf
jge
push
jmp
mov
adc
add
xor
or
push
pop
push
pop
adcb
not
mov
sbb
out
je
jg
int
lcall
ss
xchg
insl
mov
jb
stc
out
push
lods
lcall
in
lret
icebp
call
mov
jbe
sarb
xlat
pusha
aas
test
ljmp
mov
sbb
jb
leave
inc
test
ror
rorl
test
lret
sub
xchg
sbb
movsb
fistps
leave
xchg
xor
sub
cmp
mov
mov
sub
add
stos
negb
fdivrs
xchg
movsl
cld
xor
les
iret
ffreep
shll
je
outsb
push
cli
in
dec
cltd
dec
and
into
hlt
insb
jmp
sti
inc
shr
or
or
xchg
scas
inc
shrd
arpl
lret
mov
inc
cmc
ds
cmp
addb
pop
jb
xor
mov
xchg
mov
xor
add
lods
jg
cmp
scas
je
out
push
shll
icebp
mov
sbb
outsl
test
lret
adc
into
fs
fwait
call
addr16
scas
mov
push
xchg
adc
popf
fldcw
xor
xchg
int3
dec
sub
test
jle
mov
adc
sbb
pop
aam
add
push
mov
insb
pop
mov
std
out
jecxz
or
fbld
pop
cmpsl
mov
push
enter
lods
jp
jecxz
mov
fistps
out
jb
inc
dec
dec
mov
and
inc
loope
xchg
jno
lret
pushf
sti
or
ret
scas
daa
xor
push
mov
jnp
and
fidivs
push
jb
push
dec
dec
call
or
sub
pop
insb
daa
or
sbb
pop
inc
ret
test
ds
add
movsl
lret
shr
inc
xor
or
xchg
call
and
in
xor
dec
cltd
add
ss
cmp
cwtl
jo
sbb
dec
cs
dec
xor
fimuls
repz
arpl
call
push
mov
sub
je
scas
insl
push
rorb
in
mov
arpl
jp
aas
fmull
popf
sbb
fbstp
fimuls
scas
jo
decb
gs
sub
test
inc
push
cwtl
sahf
adc
pop
test
jle
and
mov
adc
cmpsl
in
inc
incb
rorl
arpl
daa
xor
nop
add
out
cmp
mov
nop
iret
xor
jecxz
movsl
mov
hlt
dec
pop
mov
jle
subl
add
adcl
cld
pop
les
mov
mov
inc
dec
std
lcall
sbb
push
fs
adc
mov
popf
out
sbb
mov
es
push
lret
or
push
ficompl
hlt
xor
lods
jl
inc
push
mov
cltd
lods
sarl
int
inc
push
mov
xchg
lods
repz
pushf
pop
ret
or
std
jno
or
adc
sub
inc
mov
sar
sbb
es
mov
push
dec
cmp
aad
es
pop
jae
fimuls
or
ja
lds
inc
pop
pop
dec
jbe
loopne
cltd
add
adc
push
bound
and
filds
pop
lret
pop
push
inc
std
mov
cwtl
inc
pop
inc
shlb
dec
xchg
xchg
lret
inc
loopne
sbb
lret
lea
bound
es
xor
loopne
push
sbb
push
out
xchg
ret
sbb
adc
bound
test
inc
inc
push
push
xchg
lea
cmp
sbb
xchg
mov
inc
xchg
leave
and
mov
pop
xchg
ja
inc
jp
xorl
inc
jle
cld
jbe
clc
adc
out
mov
xchg
adc
andb
inc
sub
mov
adc
sbb
out
jmp
stos
push
scas
jne
pop
pusha
lret
add
repz
sbb
push
add
sub
adc
xchg
adc
lods
pop
loopne
cwtl
mov
push
in
mov
sub
sbb
dec
lahf
shll
lcall
push
mov
push
jmp
fmull
int3
push
cltd
jo
and
sbb
sub
sbb
fisttps
mov
push
xor
shl
jb
notl
xchg
ja
sub
adc
cs
mov
xor
jecxz
or
and
sbb
sbb
cli
xlat
shll
pop
and
jmp
gs
call
aad
ljmp
gs
mov
sub
cli
adc
in
out
repz
lahf
cs
adc
int3
mov
push
and
inc
mov
and
dec
mov
sub
adc
inc
in
pusha
adc
xor
mov
mov
adc
adc
scas
mov
push
popf
dec
dec
js
push
pop
jge
dec
jae
movsb
pop
std
jnp
jb
inc
cld
xlat
loope
pop
push
jecxz
xchg
insb
popa
dec
cmpsb
xchg
sahf
stos
cmp
xlat
and
scas
lods
mov
nop
ud1
jl
imul
push
lahf
out
sbb
inc
sub
cmp
sub
sahf
idivl
pusha
adc
gs
pop
sbb
sti
inc
pop
fistpl
insl
push
inc
pop
dec
fimull
test
or
jae
mov
out
lods
mov
jno
das
aad
inc
adc
dec
icebp
sub
stos
jp
jb
std
mov
jbe
lahf
pop
or
pop
stos
adc
xor
arpl
fbld
int3
mov
push
jle
into
mov
pop
fisttps
jle
push
call
stos
xlat
adc
push
movsl
sbb
sub
xchg
rclb
jg
ret
sbb
sub
and
sahf
loope
pop
adc
fisubrs
lods
mov
jbe
push
jo
ljmp
int
mov
add
and
pushf
inc
ss
jmp
es
fiaddl
std
test
mov
jg
aas
lods
lret
mov
and
mov
pop
mov
mov
dec
and
and
pop
gs
push
dec
jecxz
mov
xchg
dec
popf
inc
lea
adc
pop
std
shll
mov
sub
lret
inc
enter
dec
shrl
inc
popf
out
fidivrs
mov
insl
inc
addl
in
push
xchg
or
rorb
inc
fmull
fwait
jbe
or
mov
cmp
mov
inc
frstor
sbb
xor
fwait
adc
jge
fisttps
shlb
add
cmp
hlt
inc
daa
lcall
test
mov
loopne
shll
lahf
and
cmpsl
sub
push
sbb
fwait
push
adc
stos
push
orb
inc
mov
jne
add
jne
mov
push
pusha
inc
xor
clc
call
mov
push
mov
jne
xor
loopne
mov
subb
jl
mov
xchg
xchg
ret
out
inc
lahf
popa
pop
jns
enter
mov
pop
cltd
jp
sahf
inc
mov
sbb
xor
ljmp
and
push
cmc
cltd
xchg
cmp
mov
shlb
jmp
stos
in
lods
and
xor
lcall
and
out
mov
movsb
or
cwtl
push
xor
mov
and
add
out
mov
fnsave
or
aaa
cmovbe
icebp
dec
aam
xchg
dec
cld
pusha
sbb
in
inc
or
jp
push
mov
hlt
roll
hlt
push
jle
xor
adc
gs
loope
adc
xor
pop
dec
mov
bound
push
test
cmp
fwait
adc
add
test
push
vandps
mov
std
lea
lea
ljmp
mov
adc
fmull
test
jge
xlat
xor
imul
rcrl
dec
aas
pusha
adc
sub
mov
adc
mov
lods
enter
leave
pop
movsl
scas
push
cli
pop
xor
pop
xchg
fiaddl
sbb
jne
lea
mov
sub
xchg
adc
loope
arpl
out
cwtl
cs
in
pusha
cmpsb
aam
jle
jb
and
ljmp
gs
cmpsl
cmp
dec
jae
outsl
jg
movsl
out
fwait
in
mov
sub
push
cmpsl
loopne
pop
xor
xor
icebp
lods
push
jg
sbb
mov
cmpsl
js
jmp
or
xchg
add
xchg
mov
pop
aaa
mov
clc
or
pop
std
mov
cmp
dec
push
rcrl
or
mov
mov
shl
ficoms
add
push
sub
out
adc
pop
lock
sarb
push
mov
jmp
and
and
data16
cwtl
mov
cs
ret
mov
fisubrs
and
dec
mov
xchg
lock
jmp
push
aaa
jl
pop
sub
popa
out
bound
movsb
call
or
mulb
push
push
movsl
out
cmp
leave
or
stc
ficoml
sbb
push
insl
adc
mov
xchg
mov
loope
xlat
cmp
lahf
adc
sahf
dec
sub
push
mov
shl
test
cmpsl
mov
movsb
das
dec
and
adc
shll
and
cmpsb
push
push
dec
and
cltd
int
inc
out
std
mov
xchg
outsl
ret
or
cli
lret
or
inc
mov
lods
xchg
test
jge
ss
iret
adc
dec
stos
mov
outsb
aas
mov
mov
ljmp
cmc
inc
dec
lahf
xor
pushf
mov
or
dec
mov
cwtl
adc
push
lret
or
pop
jo
add
xlat
orl
in
out
lcall
dec
ds
push
xor
out
rcl
mov
int
lods
int3
fstps
mov
mov
pop
push
clc
insl
test
test
nop
daa
cs
push
cld
mov
cmpsb
sub
cmp
jo
mov
stos
mov
pusha
jo
jl
lods
sub
pushf
push
push
pop
dec
inc
push
lock
or
jno
mov
in
lock
mov
and
clc
in
lock
ja
cld
rcrl
nop
add
lcall
mov
test
lods
pop
mov
pop
sub
std
xchg
lcall
pusha
std
adc
movsl
sub
loop,pt
cmp
push
sbb
push
push
or
fldt
nop
sbb
pushf
cld
or
cmpsb
push
aaa
lods
and
mov
subl
aad
fildl
xchg
pop
insb
outsl
sbb
movsl
das
pop
cmp
cltd
scas
mov
cmp
out
xchg
push
ficoms
sbb
add
scas
sub
sub
cmpsb
sub
mov
add
adc
xchg
ja
or
dec
scas
cwtl
mov
pop
push
pop
gs
das
sti
xor
adc
out
sti
pop
outsb
push
ja
test
pop
inc
mov
scas
test
dec
fwait
vsubsd
daa
adc
mov
push
push
out
push
and
push
jmp
jl
cmp
and
xor
add
ss
xor
popa
icebp
jecxz
xor
js
and
pop
jns
sti
movsb
lods
jns
in
add
cs
jb
fnstcw
out
pop
xor
loop
push
sub
mov
icebp
es
icebp
mov
and
inc
arpl
lret
or
push
ret
cmpb
and
movsl
addr16
mov
inc
dec
lds
movsb
inc
pop
xchg
ret
aad
xchg
rcrl
scas
mov
push
sub
fidivs
icebp
xchg
xor
fnstenv
jmp
addl
fs
movsl
imul
or
out
sbb
lock
dec
push
leave
dec
sbb
mov
test
adc
pop
sarb
sub
sbb
scas
insl
aad
adc
mov
xchg
pop
outsl
push
sbb
data16
lahf
inc
fst
orb
cmp
jae
imul
ret
lock
mov
xchg
dec
add
out
mov
clc
stos
pusha
add
pop
lret
mov
fldt
mov
pop
and
push
adc
cmp
insb
std
int
mov
adc
jecxz
enter
xchg
sbb
pop
test
sbb
add
imulb
sahf
mov
adc
mov
outsl
loop
lods
xchg
test
insl
mov
or
fistpll
dec
add
lds
iret
cmp
pop
push
fdivrl
xor
mov
cmc
loop
adc
lods
jg
mov
test
mov
fsubl
add
in
call
push
or
sbb
insb
scas
mov
outsl
sahf
sub
and
andb
je
push
push
test
es
dec
xor
jmp
sahf
shrb
mov
xchg
sub
fistpl
dec
ss
push
xchg
push
hlt
cmc
jo
mov
mov
push
push
xor
push
into
mov
or
out
fistpl
idivb
inc
fisubrs
adc
pop
int3
pop
fldt
pop
jns
jno
subl
lahf
out
sub
push
cwtl
add
sar
add
or
ret
push
add
cmp
dec
inc
mov
mov
testl
sbb
mov
or
ficomps
scas
aaa
fcmovnb
push
adc
jmp
mov
xor
shlb
scas
push
or
nop
lock
iret
leave
cld
add
mov
cmp
push
pop
rolb
fnstcw
fdivr
icebp
out
inc
sub
xor
mov
cmp
arpl
dec
add
mov
sub
mov
pop
pop
pop
ret
mov
rolb
dec
cmp
jl
ftst
or
push
aad
xchg
pop
xor
and
cmp
inc
pop
cmp
out
lea
and
icebp
pop
xlat
sub
bound
sub
adc
fwait
push
popa
ja
ljmp
cmp
jae
stc
ds
mov
in
mov
xchg
dec
pop
adc
sbb
xchg
inc
and
sub
xorb
mov
in
pop
cwtl
lods
and
add
fwait
scas
inc
sub
push
inc
sub
test
mov
xor
rcrb
addr16
cltd
and
push
cld
adc
inc
es
movsl
mov
icebp
insl
pop
xor
jns
sbb
ljmp
loopne
push
dec
mov
jle
mov
xor
mov
jmp
xor
xor
std
pop
fcomi
jne
arpl
dec
icebp
push
pop
es
pusha
jmp
daa
inc
sbb
out
sub
xor
cmp
cmp
cs
lock
or
testl
push
lret
ror
xchg
adc
sbb
push
inc
fnsave
repz
mov
je
gs
or
sbb
cltd
shlb
push
jae
push
shll
sbb
out
addb
xor
pop
xchg
cmp
mov
fs
and
outsl
inc
jno
aaa
mov
sub
pop
icebp
pop
xchg
lds
shrl
cwtl
push
dec
cmp
xor
inc
mov
pop
cli
xchg
aad
sbb
adc
add
xchg
mov
roll
dec
insb
aaa
es
add
loope
xor
mov
xor
test
cld
pop
lock
xchg
pop
test
or
mov
out
jo
fidivrl
mov
out
cld
arpl
jne
nop
or
aas
mov
imul
and
mov
pop
or
push
sub
test
gs
jg
sahf
mov
and
xchg
or
sarl
popa
jmp
out
xor
test
insb
xchg
negb
repnz
gs
dec
int3
or
ds
mov
les
lret
mov
hlt
cli
sub
xor
mov
hlt
mov
call
push
inc
mov
std
clc
pop
push
xor
and
add
mov
icebp
cli
mov
leave
pop
push
stos
cltd
out
mov
in
mov
mov
jno
ret
push
pop
sbb
and
popa
pop
insl
ja
pop
add
je
fwait
std
xlat
test
adc
aad
mov
es
add
int
fwait
mov
test
pop
ret
scas
inc
push
pop
test
push
xchg
xchg
inc
sub
xor
scas
xor
clc
stos
aas
jno
pop
test
mov
add
pop
nop
jge
ret
divl
sbb
pop
dec
mov
bound
in
out
incb
test
add
rolb
ficoms
or
in
ja
mov
and
xor
pop
push
dec
int3
sub
cmp
push
int3
loopne
push
outsl
in
add
insl
adc
xor
push
pminub
and
push
xchg
inc
xchg
arpl
push
push
cmp
pop
push
dec
pushf
xlat
jmp
les
mov
popf
int3
ja
cs
shlb
mov
int
pop
add
js
push
xor
pop
jo
mov
aaa
test
mov
out
frstor
mov
movsb
or
out
cmpb
mov
mov
scas
mov
lret
jl
ret
xor
xor
jbe
fnstsw
stc
or
addr16
aaa
outsb
icebp
pop
aaa
fs
imul
push
dec
insb
cmpl
xor
jmp
ljmp
xor
stos
adc
lods
lods
jo
dec
xchg
cli
lret
clc
outsl
sbb
repz
or
enter
xor
push
jne
pusha
push
dec
dec
repnz
repz
jle
mov
push
pop
lret
and
adc
test
mov
pop
jno
je
add
or
pushf
insb
rolb
cmp
dec
stos
adc
jno
insl
dec
rcrl
test
popa
int3
addr16
inc
add
cmpsb
jg
jle
adc
sbb
out
dec
sub
xorb
test
lea
mov
ljmp
pop
xchg
out
test
mov
cmp
jbe
fs
aad
mov
lahf
mov
add
jmp
test
sarl
and
and
insb
cmpsl
rcrl
mov
xor
rorb
cs
xor
or
and
out
nop
jg
cs
jb
cmp
push
mov
pop
jae
divb
lock
or
jge
iret
mov
test
cmpsb
orb
ljmp
fistpll
test
adc
imul
out
cmp
sarb
lcall
cmp
nop
loop
fsubrs
dec
jp
popa
mov
pop
mov
mov
sbb
add
xor
les
jecxz
cmp
cmc
ss
and
out
ja
ret
into
xor
push
inc
pop
test
adc
sub
sub
test
jne
jp
pop
inc
dec
call
adc
sbb
sbb
mov
int3
mov
xor
push
inc
call
xor
mov
and
mov
negb
mov
mov
inc
aaa
lods
jo
sbb
jne
push
insl
mov
inc
mov
lods
push
mov
lds
arpl
test
push
mov
cmc
les
add
sbb
push
push
mov
nop
sub
addr16
or
xchg
adc
aaa
imul
outsl
scas
pop
cmp
cmc
cli
rcl
push
fmull
xor
fldcw
jmp
mov
pop
lcall
cltd
aas
arpl
cmp
fmuls
mov
xchg
pop
test
and
divl
jae
or
and
cmp
sub
add
mov
jecxz
pop
aas
jmp
sahf
lcall
adc
push
int3
xlat
pop
imul
jl
mov
push
add
xchg
popa
mov
rorl
rcrl
out
push
sbbb
pop
leave
inc
ret
add
push
in
lahf
mov
mov
lret
sbb
xchg
fistpll
adc
stos
push
inc
xchg
dec
testl
mov
scas
iret
dec
jle
inc
dec
inc
es
and
mov
clc
dec
mov
int
imul
fisubs
inc
pop
dec
adc
push
out
test
and
insb
test
subb
mov
mov
sbb
iret
out
lods
mov
leave
enter
adc
push
add
std
mov
or
fcoml
addb
sbb
add
pop
mov
icebp
aas
cltd
mov
out
mov
scas
pop
lcall
xchg
repz
shr
xchg
xor
push
xchg
mov
lds
idiv
mov
jne
inc
pop
push
mov
fistps
rol
xor
jb
pop
rcrl
mov
xor
xor
mov
jns
mov
scas
cmp
addr16
jo
sub
add
lods
popf
sub
inc
cmpb
pop
and
out
sbb
out
adc
neg
inc
call
push
push
xchg
icebp
imul
and
shlb
xor
lods
roll
cmp
mov
ss
inc
std
push
mov
inc
popa
mov
mov
xor
mov
movsb
inc
inc
fldt
cs
mov
and
jle
xor
pop
sub
shll
sahf
jge
decl
sahf
loop
enter
pop
inc
fcmove
push
pop
out
mov
cmp
mov
shll
lock
ja
cmp
pop
adcl
gs
insl
stc
jo
in
ja
test
repnz
andl
popa
ftst
adc
mov
mov
imul
cmp
inc
std
mov
lea
push
jle
stos
add
pop
fdivrs
shll
cmpsb
fisttps
pop
push
shll
xlat
xor
push
sub
sti
mov
dec
sbbl
xlat
les
jle
insb
mov
cmc
rcrl
faddl
jle
sbb
cli
add
xchg
lret
in
lret
les
das
ret
loop
add
insb
inc
addr16
dec
fimuls
pop
mov
and
out
mov
lds
mov
mul
shrl
notb
add
sbb
sub
inc
addr16
popa
rclb
xor
lods
cltd
shl
pop
push
push
mov
pusha
mov
adcl
mov
or
fs
movsl
jecxz
jmp
push
shll
cmp
cmp
dec
dec
jecxz
jns
lret
pop
xchg
aad
xchg
mov
imul
test
into
adcb
insb
mov
pop
push
imul
incb
xchg
rclb
add
ljmp
es
hlt
add
mov
or
mov
adc
repnz
sbbl
xor
mov
out
mov
gs
jp
mov
jbe
iret
jo
push
push
dec
sub
stos
clc
ficoms
push
sub
push
popa
mov
shr
pop
shll
mov
dec
mov
loope
xchg
xor
sar
in
fildl
pushf
inc
cltd
adc
mov
in
ds
inc
lcall
arpl
stos
jle
cmp
push
mov
add
rorl
add
dec
lcall
jl
push
mov
imulb
out
je
pop
test
mov
push
mov
xor
lds
sbb
push
sub
and
add
inc
out
enter
ljmp
repz
arpl
pushf
into
test
aas
sarl
add
clc
adc
out
scas
scas
push
dec
jecxz
dec
outsb
icebp
lcall
mov
pop
mov
fnstsw
aas
cmp
or
dec
push
sub
mov
adc
or
jns
dec
mov
jmp
scas
inc
mov
sbbl
mov
add
cmp
jle
adc
and
pop
ret
cmp
inc
push
inc
std
leave
and
and
inc
cmp
push
ljmp
lods
stos
or
lock
mov
scas
cmp
mov
ret
iret
mov
in
mov
addr16
cltd
insb
xor
jge
push
out
data16
movsl
xchg
inc
xor
or
lea
xchg
mov
mov
mov
sbb
inc
outsl
das
sbb
jns
mov
xchg
pusha
xchg
cmpsl
inc
test
xchg
out
xchg
pushf
out
lods
cmpsl
cmp
push
out
mov
mov
pop
js
call
ret
push
mov
test
sub
jns
fnstsw
leave
dec
mov
push
jp
push
bnd
mov
jmp
cmp
out
in
and
insb
bound
dec
popf
pop
sub
mov
or
xchg
fists
ret
enter
fisubrl
push
jbe
push
sub
negb
insb
ja
sub
mov
add
xchg
jp
movsl
mov
fsubl
jns
sbb
xor
cmp
xchg
lods
ljmp
sbb
stc
xchg
or
mov
fsubs
xlat
mov
in
negb
xor
fwait
add
xor
jl
iret
std
clc
aam
xchg
cs
rcrl
cmp
inc
rep
push
mov
mov
arpl
xchg
xorl
push
jo
je
dec
aad
lret
mov
sbb
es
cmp
or
or
add
mov
ret
pop
mov
leave
mov
cmp
cmp
inc
pop
sbb
std
jb
dec
xor
sub
add
fwait
arpl
in
mov
jae
push
mov
cmp
decl
sbb
push
in
sub
mov
leave
loop
inc
nop
cwtl
inc
fldl
aam
adc
pop
adc
sbb
iret
out
push
mov
push
inc
in
jae
xchg
mov
bound
or
push
stc
mov
outsl
pop
loop
add
mov
xor
jnp
or
inc
pop
sub
and
dec
rorb
sub
cwtl
inc
push
fs
clc
sbb
pusha
fst
imul
retw
xchg
dec
rcll
pop
arpl
imul
addr16
notb
push
inc
fmul
push
lret
leave
lods
inc
inc
movsb
je
loope
push
ret
sbb
pop
adc
sub
repnz
inc
and
xchg
sub
jmp
divl
movsb
and
add
sub
dec
sub
mov
mov
movsl
into
outsb
sub
dec
mov
rorb
mov
sub
pop
xchg
dec
cltd
and
xor
out
ret
pusha
rolb
cmp
and
addb
mov
shl
xor
cmpordps
aas
mov
mov
imul
aad
sbb
aas
stc
sbb
and
and
nop
fistps
cmp
mov
loope
dec
push
push
aad
roll
int3
or
mov
pop
dec
repz
mov
movsl
mov
xchg
and
adcb
flds
and
psubb
loop
inc
and
lret
ss
aad
das
pop
cs
jns
xchg
xchg
mov
aas
and
add
cmpsb
cmpsb
inc
inc
test
ficoms
aas
adc
test
jecxz
testl
outsl
gs
sub
fnstsw
pop
jns
inc
cli
sub
enter
sub
shr
ret
addr16
pushf
cmp
aad
out
out
inc
fwait
out
add
mov
mov
mov
imul
sbb
fmull
mov
and
pop
jp
or
cwtl
sbb
inc
outsl
iret
pop
fisttps
or
imul
imull
pop
dec
mov
sub
fnstsw
inc
xchg
adc
mov
dec
sbb
stos
pop
mov
sbb
cmp
mov
pop
cmp
lock
das
jbe
xchg
fucompp
aam
repz
sub
andb
aam
push
or
std
popaw
imul
fwait
jge
cld
sti
jecxz
fstp
in
lret
loop
xor
sqrtps
mov
mov
push
and
les
or
out
movsb
movsb
push
cmc
sub
mov
cwtl
cwtl
or
imul
add
pop
les
in
inc
loop
int3
rep
clc
mov
in
cmp
repz
fs
jae
push
mov
or
frstor
std
xchg
lods
jno
fldl
mov
jg
imul
xchg
cmpsl
jle
dec
fmull
pop
dec
out
in
lret
and
in
aas
mov
fcmovnu
stos
mov
clc
sbb
setg
lods
aam
jmp
icebp
sub
iret
scas
andl
std
pop
cmpsl
dec
les
jp
sbb
out
enter
push
rorl
and
imul
jno
inc
imul
mov
push
mov
mov
adcb
clc
ja
dec
pop
mov
xchg
js
scas
js
sbb
xchg
mov
outsb
pop
lret
cltd
inc
adc
cmp
mov
xchg
lcall
enter
pop
sarl
xchg
mov
stos
inc
ja
mov
mov
sub
inc
dec
push
cmp
jns
dec
jecxz
fmuls
pop
shrb
aad
cs
mov
adc
pop
mov
scas
faddp
cmp
add
mov
push
fldt
adc
ret
push
cltd
pushl
aad
aaa
push
adc
mov
in
stos
pushf
lret
rcl
lods
dec
xor
dec
lock
push
sub
mov
lods
into
fs
decb
out
out
int
sarl
mov
notl
int
hlt
jmp
push
int
inc
jmp
mov
dec
cmp
cmpsl
cmpsb
mov
idiv
dec
and
fnstenv
mov
adc
pop
lret
loopne
stos
push
sbb
xchg
cmp
pop
bound
aam
add
adc
jae
mov
ret
popf
xchg
and
imul
cmpsl
push
dec
test
into
jne
loope
aad
sbb
xchg
aaa
aaa
fistpl
nop
xchg
cmc
sbb
movsl
mov
push
paddsw
fsubl
aaa
xor
mov
int3
or
mov
adc
mov
out
pop
sub
stos
in
testl
arpl
pop
inc
test
xor
push
nop
xor
les
bound
sbb
cmp
fs
test
push
push
fs
mov
insl
je
into
add
out
adc
or
jbe
leave
lret
test
lahf
sarb
in
roll
ficompl
les
bndstx
xor
add
mov
or
jp
sbb
call
out
cmpsl
inc
dec
xchg
lret
ljmp
out
cli
mov
jo
std
sbb
divb
iret
lods
xor
icebp
adc
mull
jecxz
ret
pop
imul
test
push
fmuls
jbe
jnp
mov
stos
pop
pop
scas
mov
icebp
push
sub
andl
loope
arpl
data16
mov
pop
mov
sbb
inc
sbb
fcomps
sub
or
xchg
cmp
fcos
out
adc
cmp
ds
xchg
mov
fadds
daa
ljmp
dec
xchg
xchg
pop
cmc
mov
mov
ret
sub
jp
or
add
dec
xor
gs
cli
testl
mov
ret
jnp
and
push
in
xor
js
subb
mov
repz
or
or
ljmp
xor
fs
fimull
iret
adc
dec
mov
test
push
bound
push
mov
out
test
in
mov
hlt
call
mov
sbb
pop
imul
orb
inc
int3
push
sbb
imul
out
xor
xchg
into
lds
addr16
out
push
mov
movsb
push
dec
dec
mov
mov
xchg
lret
or
movsb
cmp
fs
stos
mov
repz
xchg
movsb
mov
xchg
dec
push
jno
add
or
xor
mov
out
xchg
pushf
dec
add
lds
or
orl
leave
jl
pushf
mov
mov
aam
das
fwait
cmpsl
mov
fildl
mov
jne
cmpsb
dec
xor
pop
dec
and
or
jp
outsb
loop
je
jge
cmc
call
cbtw
iret
cld
out
lods
cwtl
scas
xchg
push
cmc
hlt
mov
cltd
into
rorb
push
pop
in
sub
jns
add
cmc
cmpsb
cld
cmc
push
fnstcw
lcall
push
fsubl
mov
leave
int
jnp
in
inc
xchg
lods
jb
mov
js
push
lahf
lds
sub
pop
pushf
xchg
stos
pop
jp
jecxz
push
aaa
sub
nop
jle
mov
push
les
add
mov
add
push
cmp
std
arpl
cmpsl
add
pop
into
stos
mov
dec
cmc
imul
dec
ret
push
pop
dec
mov
rol
test
cmpsl
inc
mov
outsl
pop
bnd
push
xlat
or
jle
push
push
jbe
pushf
fiadds
jp,pt
jp
div
fldcw
push
stos
cmp
nop
mov
lret
and
or
popa
fdiv
and
mull
xor
jp
aaa
call
into
pop
jns
popa
in
mov
outsl
xchg
popa
mov
xor
outsl
and
inc
loopne
dec
ss
dec
les
hlt
or
cli
jmp
ja
nop
jo
call
add
xchg
add
mov
sub
shll
ds
pushf
sub
push
int3
sti
sbb
lcall
shlb
pushf
cmp
movsl
sbb
push
adc
pop
lret
repnz
xchg
into
inc
popa
mov
sbbb
push
xchg
jmp
fimuls
push
sub
aad
cmp
ds
shrl
int
jl
in
and
in
sbb
add
imulb
hlt
sub
lods
adc
mov
lret
lea
dec
jb
mov
dec
pop
jmp
addr16
xchg
scas
aaa
mov
dec
push
mov
add
sub
ret
rcrl
addl
adc
mov
les
or
xor
mov
shr
test
mov
and
adc
add
mov
xchg
sub
sub
mov
adcb
adc
ret
scas
pop
mov
sub
add
pop
repz
jle
and
rcll
shl
add
movsl
cmpsb
push
in
push
pop
and
mov
test
outsb
lahf
inc
testb
leave
call
inc
idiv
out
sbb
jle
cs
scas
cmc
sbb
lds
adc
jge
mov
jg
jecxz,pn
out
add
ret
push
not
ljmp
imul
repnz
xor
cltd
pop
mov
xor
adc
jo
dec
cmpsb
dec
inc
inc
sub
mov
in
push
adc
sbb
leave
les
fistl
xchg
aaa
mov
dec
or
xor
aam
push
mov
gs
and
inc
into
jl
xchg
cmp
or
in
cltd
jecxz
mov
xor
into
pushf
loope
push
adc
ret
fisubrs
scas
fists
lods
aaa
xchg
mov
mov
xor
out
mov
jmp
cwtl
lret
out
add
xor
add
cmp
jns
mov
sbb
into
push
mov
test
xchg
out
pop
daa
pop
adc
adc
xlat
incl
out
lods
push
inc
out
mov
xchg
and
xor
inc
jle
mov
dec
mov
out
shl
pop
inc
pop
inc
cmp
mov
fidivrl
or
jne
pop
lret
or
jmp
sbb
idiv
push
mov
sbb
sbb
dec
xchg
sub
xlat
push
loop
add
sarl
pop
xchg
ficoms
push
lock
sbb
aaa
addb
fcmovu
adcb
jns
jnp
sti
fcomp
sti
mov
jp,pn
pushf
sarb
ja
mov
nop
scas
lea
cmp
cmp
popf
pop
sub
in
xchg
loop
out
pop
push
sti
sbb
sbb
js
shll
test
fs
int3
mov
sbb
push
test
inc
xchg
out
cmp
or
mov
inc
dec
cli
sarb
or
mov
xor
sbb
mov
imul
or
cmp
pop
sbb
lcall
loopne
mov
jae
fstpt
xchg
cmc
mov
mov
imul
fisubs
sbb
mov
test
or
fsubs
mov
sbb
cli
shlb
pop
add
pusha
enter
pop
xlat
rorb
sub
test
push
mov
add
xchg
pop
push
cmp
sub
push
xor
pusha
fld
imul
into
inc
dec
mov
xchg
lods
and
and
cmp
jb
cmp
pop
stos
cs
test
test
enter
xchg
cmp
push
or
xor
add
aas
xchg
sbb
dec
pop
in
xlat
cwtl
pop
aas
pushf
ficomps
push
add
sbb
xchg
sbb
add
js
jg
xchg
call
inc
iret
pop
xor
xchg
adc
sbb
insb
stos
sub
fsub
cmp
enter
cmpl
cmp
imul
push
jb
mov
ds
sbb
lcall
aam
jo
popf
adc
pop
js
push
popf
xchg
dec
ret
inc
or
idivb
arpl
les
sarl
test
or
fwait
pusha
js
xchg
and
test
and
dec
fisubrs
xchg
arpl
stc
loopne
ficoml
out
jp
xor
cmpsl
es
movsb
xor
ljmp
fmul
inc
mov
and
inc
addb
and
xor
pop
mov
dec
or
call
std
ret
inc
call
pop
inc
push
pop
jmp
subb
mov
insb
sub
mov
imul
cmpb
shll
cmpsl
cmc
add
mov
into
add
ja
inc
fadd
push
in
push
add
cmc
sbb
jo
pop
pushf
pop
push
in
ret
shll
jne
fcmovnu
rol
mov
cltd
push
fbstp
dec
rolb
xchg
cli
aad
imul
outsb
je
pop
jae
imul
mov
es
in
lret
addb
das
cmp
loope
sbb
lods
lahf
fsubr
xchg
lret
dec
fiaddl
pop
jmp
xchg
idivl
std
and
int3
jae
sahf
xchg
jle
loope
insb
push
push
and
lahf
xlat
movsl
xor
fmul
xor
jno
ss
mov
in
sub
or
xchg
out
movsb
push
jecxz
push
or
arpl
cmp
xlat
aad
mov
sbb
loope
cmp
push
lcall
cli
fcmovne
enter
cmpsl
sbb
pop
cltd
lea
push
xchg
inc
ds
popf
dec
cmp
addr16
enter
sub
xor
pop
ljmp
cli
sbb
lret
js
add
pushf
divl
hlt
jecxz
xchg
pop
imul
arpl
mov
xor
pop
xchg
inc
fcmovbe
dec
ficoml
jl
shrl
shl
ljmp
cs
dec
ficoml
ret
mov
bound
loop
mov
mov
shrb
inc
inc
add
aas
push
inc
leave
mov
jns
sbb
js
mov
sbbb
jns
jecxz
xchg
sahf
nop
and
fdivrs
sub
dec
dec
lods
or
insl
add
ret
test
mov
mov
cs
mov
rorb
mov
pop
in
daa
iret
cmpsb
inc
add
cld
clc
push
adc
xchg
test
lret
pop
or
sbb
repnz
movsl
test
pop
mov
shrb
inc
in
loopne
jne
pop
fisttpll
add
and
rcll
cmpsl
fwait
pop
je
adc
fildll
lds
xor
les
sbb
lds
pop
xchg
jnp
xor
and
int
mov
cld
in
cmpsl
jg
iret
in
fisubrs
std
dec
inc
pop
push
filds
xor
dec
and
add
arpl
sub
data16
leave
add
idivl
es
mov
push
inc
mov
daa
sbb
push
arpl
xchg
jg
scas
shrl
daa
out
stos
adc
ja
dec
mov
mov
and
ss
fnstcw
add
pop
lods
popf
pop
int
cs
xchg
push
es
test
pushf
mov
rorb
inc
lcall
cmp
mov
addb
bound
pop
add
aas
mov
xchg
add
int
mov
sti
enter
xlat
xor
imul
cmp
js
aam
in
in
pop
mov
jecxz
mov
adcl
xor
std
das
inc
jns
dec
out
ljmp
sub
jle
inc
push
pop
fidivs
dec
loope
aaa
mov
ljmp
mov
mov
call
adc
inc
dec
insb
or
lret
sahf
bound
push
push
mov
lock
adc
sbb
addr16
sbb
push
hlt
stos
mul
mov
lret
adc
inc
pop
ret
nop
sbbl
pop
inc
sub
sub
ja
popa
arpl
addr16
cmp
bound
or
or
int
add
push
and
inc
in
cmpsb
xlat
mov
imul
jbe
xchg
fcoml
and
jo
push
mov
mov
test
mov
out
jnp
push
cmp
inc
mov
hlt
inc
sbb
in
das
mov
mov
shr
stos
lret
test
cmc
lret
es
dec
push
jmp
dec
adc
cmp
jmp
in
ja
or
mov
pop
enter
clc
or
sub
and
pop
dec
and
out
push
std
cltd
loopne
adc
lret
aam
ja
test
sar
ficoml
push
jne
and
aaa
push
repnz
ror
jbe
push
in
adc
iret
push
stc
jo
xor
je
dec
gs
subb
and
xor
or
xor
xor
std
jmp
mov
mull
out
lahf
inc
mov
aaa
arpl
int3
inc
pop
mov
int
cwtl
mov
stos
sbb
mov
enter
shl
mov
mov
cltd
jo
add
sbb
sahf
jne
mov
add
mov
and
jecxz
call
insb
fnsave
push
or
pop
adc
jnp
xorb
repz
cmp
gs
movl
add
mov
xchg
lods
mov
xchg
aaa
out
sub
dec
push
fstps
jnp
sub
pop
idiv
in
push
dec
adcb
sti
std
out
jbe
clc
lds
test
daa
sub
orl
add
mov
cwtl
xor
xchg
dec
sbb
xchg
fucom
outsl
in
shlb
aad
sbb
xchg
nop
xchg
cmpsl
clc
sbb
jns
jbe
je
cld
lret
popf
xor
outsb
das
xchg
ljmp
push
clc
loop
test
inc
sbb
mov
or
jecxz
dec
stc
out
sbb
es
inc
nop
mov
imul
and
mov
loopne
fiadds
xor
fstp
mov
cmp
xor
xor
lret
fists
xor
and
loope
xor
rclb
lret
mov
and
mov
cmp
ret
imul
cmp
adc
jge
loopne
and
faddl
insb
mov
arpl
imul
dec
es
xor
data16
in
ret
adc
movb
loop
cmpsb
pop
lret
jns
rclb
or
int3
daa
popf
add
dec
mov
scas
push
sbb
sarb
xor
adc
cmp
cmp
adc
mull
out
pop
cs
repnz
xor
sbb
xchg
mov
mov
std
or
cmp
dec
push
fcomip
pop
xchg
daa
lea
fcoml
or
mov
inc
icebp
shl
inc
outsl
adc
push
mov
sti
and
or
adc
sarl
dec
jb
pop
sti
ds
negb
in
mov
sbb
jp
jo
jae
ror
mov
sub
popa
cmpsb
mov
out
out
add
sub
mov
add
int
mov
and
mov
rorb
sbb
mov
cwtl
inc
scas
adc
shrl
or
xchg
call
push
aas
push
mov
data16
mov
pop
lret
jo
or
fsubs
sub
and
fists
popa
cmp
sbb
repz
ret
xor
out
in
lret
xchg
sub
scas
addr16
xor
cmc
dec
addr16
lods
iret
aad
sbb
xchg
movsl
cmp
fildl
push
out
sbb
sub
dec
mov
and
pop
aad
xor
aam
out
rorb
dec
test
sahf
jl
pop
imul
push
fistl
and
daa
xorl
loopne
sbb
ret
movsb
push
jecxz
sub
clc
push
clc
sbb
shl
dec
pop
push
gs
mov
rcrb
and
notb
sarb
pop
ljmp
test
sub
subb
cmp
inc
and
pop
adcl
rcll
xor
cmp
out
popf
cmpsb
fs
sbb
ds
rolb
mov
dec
dec
dec
add
jmp
jle
add
test
adc
test
add
fistl
dec
jae
cmp
xchg
and
sbb
jecxz
sub
outsb
dec
mov
ficoml
cltd
pop
push
inc
cmp
xor
sub
mov
and
push
adc
mov
cli
mov
pushl
loopne
movsb
test
adc
lret
and
xchg
jg
loopne
test
add
scas
stos
mov
leave
sbb
push
inc
roll
imul
xor
xchg
push
and
xchg
pop
out
daa
add
add
test
cltd
rcrl
cmp
cmp
cmpsl
add
cmp
insl
adc
xchg
insl
pop
adc
adc
outsb
xchg
imul
dec
sub
repnz
pop
lods
dec
mov
xchg
xchg
dec
inc
lock
mov
push
jb
adc
adc
sub
push
fdivl
mov
jl
in
loopne
fisttpl
pusha
pusha
lea
add
mov
lods
cmp
inc
mov
out
push
dec
mov
mov
jns
mov
cltd
rorb
inc
jno
add
mov
push
mov
ja
jmp
pop
inc
dec
cwtl
fisubs
inc
orb
dec
sbb
inc
repz
test
sar
mov
push
push
loop
scas
iret
inc
adc
mov
xor
cmp
or
xchg
push
mov
shlb
repnz
jg
enter
gs
adcl
cld
mov
lock
in
jmp
jne
push
adc
push
jno
movsl
xchg
pop
fsubr
mov
rorb
outsl
int
push
dec
out
pop
fdivp
adc
mov
push
iret
push
mov
sbb
mov
leave
lds
stos
xchg
xchg
or
mov
xchg
adcb
int
jno
popf
mov
out
jnp
push
loope
outsl
test
shlb
jle
dec
lods
pop
pop
scas
sti
push
sbb
lret
cmp
xor
sbb
or
inc
lret
push
push
daa
pop
imull
imul
push
test
ljmp
cmpsl
std
xchg
int3
push
fs
and
or
lret
sub
dec
pop
arpl
sbb
pop
adc
test
jp
icebp
inc
pop
sub
push
push
push
sub
rep
jne
les
pop
jle
mov
fildl
or
les
nop
or
adc
bound
xchg
pop
dec
movsl
jns
jl
push
mov
mov
xchg
fildl
push
push
cmp
in
popf
mov
pop
sahf
aas
adc
mov
inc
dec
fimull
mov
popf
mov
insl
xor
lret
xchg
loop
and
cmp
test
mov
push
inc
arpl
sar
cmp
sbb
jne
clc
ret
pop
into
enter
stos
xor
loop
push
inc
popf
mov
aad
sbb
movsb
sbb
cwtl
jo
sbb
xchg
addr16
and
jbe
dec
stos
jle
cltd
mov
inc
hlt
cmp
xor
es
pop
lods
sub
or
cmc
push
ss
repz
lahf
cltd
imul
or
push
int
mov
adc
pop
push
popa
cmp
add
pop
daa
jp
imull
pushf
sub
fistps
jg
test
jns
adc
movsb
jle
mov
mov
fildll
lret
cmp
adc
aad
pop
mov
mov
add
cmp
mov
inc
xor
lock
aas
add
adc
std
jmp
cmpl
xchg
add
xchg
dec
mov
inc
cwtl
es
in
jle
pop
gs
inc
les
stc
pushf
test
int
pop
pop
lret
ja
and
mov
test
jb
cmc
mov
int
sub
mov
xor
fmul
mov
dec
ss
fists
fstl
data16
xchg
xchg
scas
push
rclb
cld
mov
adc
adc
mov
subl
cltd
cmp
adc
cltd
add
dec
leave
jge
and
leave
xchg
pop
jmp
jne
ds
imul
pop
and
fsubrl
jcxz
mov
sbb
mov
shl
es
dec
xlat
jno
cltd
test
inc
push
sub
mov
dec
xchg
nop
subb
pop
xchg
sbb
dec
iret
inc
insb
cmovns
sbb
adc
stos
mov
loop
mov
bound
adc
push
mov
sub
pop
lret
sbb
ljmp
bnd
js
sub
divl
sub
pop
mov
js
out
jecxz
lahf
mov
mov
ss
push
xchg
rolb
dec
pop
jmp
jno
cmp
aaa
ss
ja
inc
lcall
int
xor
xorb
mov
sbb
mov
or
sub
js
add
lcall
sbb
fsub
cwtl
xchg
popf
js
test
mov
add
aas
dec
shll
popf
stos
mov
insb
mov
push
xor
adc
fwait
push
jnp
rol
pop
xor
jo
sarl
pop
jbe
outsl
psubsb
jge
xor
inc
insb
pop
mov
nop
ds
xchg
sti
shll
aas
mov
cmp
or
push
aam
xor
call
adc
mov
scas
stos
cmp
xor
jge
mov
movl
xor
push
xor
loopne
jge
pusha
sub
cmp
dec
pusha
cli
ss
mov
push
sbb
inc
sidtl
sbb
lods
dec
mov
xor
or
out
addr16
mov
test
imul
es
rolb
adc
mov
pop
mov
ljmp
jle
jge
gs
add
sbb
or
xchg
incb
in
add
push
test
jo
xor
nop
insl
loope
sbb
ljmp
or
ret
movlps
mov
xchg
mov
cmp
loopne
loope
adcb
or
pusha
and
adc
jae
test
ja
or
mov
mov
sbb
testl
push
add
jp
jns
jmp
xor
imul
loope
push
xchg
pusha
imul
jbe
jno
dec
cmp
mov
mov
into
sbb
sti
pop
cltd
and
pop
push
aam
imul
not
inc
jo
ja
test
xchg
movsb
add
jp
sub
push
push
inc
xchg
sbb
fbstp
cmp
into
or
mov
lods
pop
icebp
xor
pop
fs
scas
bound
out
adc
je
aam
call
push
or
int
dec
rep
adc
and
out
mov
fbstp
ljmp
gs
lea
jle
shlb
mov
mov
cs
call
repnz
mov
cwtl
xchg
jae
cmp
insb
icebp
and
sbb
fbstp
jge
out
pop
in
cld
leave
pusha
lods
push
sub
xor
mov
mov
pop
repz
cmpsl
repz
pop
mov
call
jp
xor
out
out
sbb
insb
sub
cltd
data16
adc
mov
dec
jl
jae
pop
scas
mov
adc
aaa
movsb
iret
lahf
bound
dec
xor
xchg
cs
loop
pushw
out
jae
and
cmp
lcall
test
mov
jno
or
call
pop
ret
mov
jg
divb
mov
mov
xchg
jl
cwtl
scas
test
iret
xlat
jae
jbe
fnstsw
loop
mov
mov
sbb
ss
lret
xor
inc
out
dec
cwtl
pop
shlb
add
mov
cmp
pop
dec
mov
cmp
sub
leave
mov
mull
cmp
pop
cmp
push
ljmp
xlat
xchg
pop
sbb
fadds
pop
or
ret
mov
sbb
pop
inc
lcall
cmc
or
outsb
xorb
adc
mov
into
nop
jecxz
and
mov
fsubrl
xor
jp
adc
ret
push
popa
dec
inc
test
addr16
xor
movsb
push
xor
ret
dec
cs
btr
fistpll
sbb
sti
aad
mov
jb
imul
mov
push
mov
sahf
bound
dec
out
mov
sbb
stos
mov
mov
lcall
inc
pop
and
faddp
mov
pop
xchg
in
loope
cmp
push
push
popa
lahf
ficoml
mov
push
add
clc
das
test
add
sbb
cmp
loope
add
leave
stc
pop
sti
inc
lret
popf
xrelease
mov
mov
pop
cwtl
cs
lret
rorb
xor
loope
xlat
jne
pushf
push
xchg
mov
lcall
test
cmc
cmova
jo
cmc
sub
cmp
fwait
sbb
jmp
sbb
lret
lcall
test
cli
xchg
xchg
inc
cs
cmc
sbb
jb
inc
xorl
in
mov
or
lods
and
js
mov
and
fdivrl
cmp
adc
xor
das
mov
out
jno
jge
in
mov
rclb
incl
fsubrl
iret
inc
int
mov
jo
pop
jmp
and
or
and
adc
jno
xor
ret
adc
inc
sbbb
sub
jno
xor
cmpsl
pop
call
fcoms
mov
push
out
popf
lret
jb
rcr
pop
jg
mov
push
mov
fwait
push
enter
push
inc
adc
jl
mov
mov
repz
mov
dec
inc
and
ljmp
sub
sub
pop
mov
loop
fidivl
jb
cmp
xchg
test
stos
push
push
ljmp
pop
insl
fcomps
cmp
xor
jns
sub
and
lahf
les
fdivl
mov
rolb
flds
jg
jb
popa
dec
cmp
lahf
pop
movb
mov
sub
adc
jnp
mov
mov
lods
inc
aaa
nop
xor
xchg
stos
sbb
scas
or
pop
aaa
rorl
mov
rep
dec
xlat
jg
dec
fisttpl
ret
inc
push
filds
dec
stc
addr16
inc
es
jp
add
xor
or
cmpb
xor
add
inc
sbb
sbb
cld
fwait
pop
mov
mov
pop
jmp
ja
cwtl
cmpsl
cmp
pop
jne
pop
dec
scas
sbb
hlt
jmp
mov
jbe,pn
test
mov
pop
jae
movsb
pop
insb
mov
scas
in
clc
push
fdivs
sbb
mov
loop
push
ucomiss
aam
insl
xor
inc
std
or
xchg
repz
push
jge
pop
imul
std
fiaddl
aam
jmp
dec
mov
ltr
popf
mov
pop
sti
jnp
ja
jae
inc
cli
andl
je
push
aam
test
cmc
cmp
mov
shlb
dec
add
movsl
jecxz
push
sbb
mov
ljmp
inc
cmpl
fdivrl
xor
cmp
xchg
or
xor
fisttpl
fisttps
push
cmp
inc
mov
jnp
rorb
pop
xlat
insb
stos
inc
pushf
insb
arpl
push
xchg
cmp
jp
and
in
adc
pop
movsb
jae
push
int3
ds
adc
add
movsb
mov
jg
push
negb
fmulp
ret
sub
fsubrs
adc
or
pop
dec
pop
fsubrl
into
jmp
lea
push
sbb
call
jp
stos
sbb
lods
and
mov
xchg
sahf
stc
inc
sbb
mov
adc
push
sub
cmp
ret
stc
xor
aad
aad
out
ret
dec
mov
rcrb
mov
out
sar
cmpsl
xchg
cli
jne
imul
lds
mov
dec
mov
push
outsb
cmc
xor
sub
jno
repnz
mov
xor
lds
xlat
ret
out
sti
pop
jno
loope
es
cmp
xchg
add
add
push
cmpsb
pop
cmp
jecxz
lea
mov
sub
aas
add
push
lcall
mov
lret
icebp
lods
in
decb
hlt
add
outsl
stos
ficomps
lods
movsl
inc
mov
sbb
cmp
ja
insb
sub
pop
mov
lcall
in
dec
dec
std
inc
jp
aas
int
sub
xchg
adc
dec
mov
mov
ja
pop
cld
out
ficoms
mov
mov
mov
data16
ret
test
jecxz
lods
mov
or
fstl
aaa
cmpxchg
mov
push
pop
mov
mov
jl
mov
sbb
pop
pop
cmp
xchg
cmp
mov
xchg
cld
push
scas
pop
cmp
jne
jl
push
jns
out
int
or
fldcw
mov
add
fcomi
xchg
or
xor
cli
adc
jo
cmpsb
and
test
arpl
iret
les
divb
ficomps
icebp
lea
and
dec
adc
fiaddl
mov
xchg
add
add
mov
jecxz
cmpsl
mov
xchg
ret
adc
aaa
sarl
and
and
mov
aad
jge
mov
fisubrl
mov
and
sarl
sbb
push
lods
cmpl
repnz
pushf
mov
and
pop
je
adcl
test
mov
out
scas
addr16
ja
call
fwait
xchg
lcall
inc
aaa
jmp
adc
adc
daa
pop
mov
sbb
out
pop
jbe
shll
cmp
push
into
cld
stos
push
mov
mov
aam
testb
sbbb
cmp
xchg
frstor
push
cmp
call
loope
inc
fcmovbe
push
push
jge
xor
cwtl
popa
arpl
ret
sbb
mov
xor
inc
pop
mov
push
xchg
enter
jno
xchg
add
jecxz
jge
mov
in
pushw
add
adc
hlt
adc
adc
mov
jns
xchg
shll
imul
push
xchg
jb
movsl
dec
push
jl
int
push
lcall
lcall
addr16
je
adc
xor
cld
sub
data16
cmp
std
mov
pop
cli
leave
xor
jno
mov
std
xor
cmp
adc
add
xchg
scas
jl
cli
mov
mov
adc
bound
push
filds
xor
push
mov
mov
pop
mov
or
cmp
scas
outsb
and
cmc
cmpsb
jecxz
or
cmp
cmpsb
movsb
out
in
and
cmp
fisttpl
dec
pop
sbb
dec
shl
mov
stos
adc
ror
cmp
add
shlb
add
xor
movsb
xor
test
lret
or
xor
mov
mulb
dec
sbb
push
pop
addr16
xlat
ja
xchg
mov
hlt
lds
repnz
push
sarl
fs
mov
outsb
gs
sbb
inc
lret
sbb
xorb
insb
out
movsb
push
push
pop
push
xchg
add
push
int
iret
and
jno
dec
fimuls
xlat
add
xlat
mov
jecxz
jge
ds
xchg
pop
inc
hlt
into
mov
push
mov
dec
imul
lds
pop
sbb
mov
stos
pop
mov
pop
rcr
fcomip
dec
adc
je
mov
push
adc
gs
pop
jecxz
rclb
inc
adc
pusha
jecxz
imul
push
adcb
mov
in
jns
mov
xchg
pop
mov
fdivs
stos
jae
popa
push
call
push
insb
cld
mov
adc
out
dec
xchg
rcl
mov
xchg
or
mov
cs
add
movsl
push
mov
adc
iret
cwtl
jge
in
lea
sbb
dec
icebp
clc
or
push
jns
jl
jne
dec
ret
movsb
enter
das
jns
lds
nop
pushf
dec
cmpsb
divl
xor
xchg
addr16
ret
dec
lock
pop
xchg
dec
push
pusha
jo
cmp
sub
inc
mov
sbbb
cmp
mov
xchg
sbb
mov
jno
add
jl
pop
rcll
push
dec
jl
shr
xchg
xchg
out
sarl
add
imul
pop
dec
dec
test
push
inc
in
cmp
xorl
rcrb
xchg
in
xor
mov
sbb
mov
mov
push
jecxz
repz
inc
clc
push
mov
mov
pop
es
mov
mov
sub
xchg
out
les
lods
popf
jbe
out
inc
sahf
outsl
enter
cmpl
push
mov
pushf
mov
inc
push
lock
cs
loop
aas
je
inc
pop
sbb
out
mov
ja
rclb
outsl
jl
cld
xor
xchg
shl
es
jp
fdivr
or
mov
fisttps
fs
cwtl
dec
pop
nop
rorb
jae
sbb
in
or
mov
mov
push
mov
stc
push
pop
nop
mov
outsl
or
fsubp
dec
xor
xchg
outsl
arpl
pop
push
mov
mov
sbb
mov
outsb
cmpsb
pop
inc
stc
dec
adc
add
loope
loop
test
dec
dec
dec
jg
lock
adc
or
sbb
dec
cmc
mov
sub
mov
add
aas
in
lods
mov
jle
push
cli
ret
movsl
call
es
cmp
adc
into
mov
push
cmp
insl
gs
sbb
xor
jbe
jg
or
int
roll
fs
dec
dec
popa
clc
jg
inc
out
into
aaa
xor
aaa
dec
xchg
call
mov
dec
and
xlat
mov
push
jo
or
ja
add
je
lock
adcl
out
xor
jb
imul
repnz
cmp
jnp
stc
rcrb
inc
mov
dec
dec
pop
jne
xchg
sub
dec
aaa
testl
adc
xchg
adc
sbb
std
idivl
add
mov
in
iret
mov
mov
insb
inc
adc
sbb
inc
pop
sbb
scas
push
dec
dec
mov
mov
cmc
or
cmc
mov
ja
add
push
mov
std
jge
sbbl
mov
loop
shlb
int3
and
adc
sbb
rorl
push
jne
stos
scas
addr16
scas
inc
shrl
push
push
add
xchg
dec
jb
push
out
out
dec
sbb
or
fcomps
loopne
testl
jmp
cmpsb
scas
gs
sbb
insb
jne
xor
push
dec
dec
mov
push
add
sub
ja
mov
lret
adc
mov
test
xor
mov
xchg
mov
out
pushl
mov
popa
push
and
lahf
mov
popf
ds
and
pop
jb
sub
cltd
mov
arpl
or
fld
add
enter
fcmovnb
adc
dec
or
mov
inc
clc
sbb
dec
ljmp
pop
mov
mov
push
decb
push
out
push
inc
movsb
inc
lds
cmp
and
out
bound
xor
or
ss
je
pop
inc
sub
adc
adcl
pop
sub
jo
test
test
test
xor
mov
adc
mov
mov
iret
cmc
xor
push
fcmove
mov
sbb
jecxz
cmp
push
test
in
cmpsb
ljmp
sub
push
mov
out
mov
mov
fwait
push
cld
rorb
pop
and
lea
cmp
out
push
orb
inc
repz
fsubr
or
shlb
cmp
in
mov
sbb
sbb
fmull
cld
out
jle
fs
dec
out
jnp
shlb
dec
pop
push
imul
std
xorl
sub
pop
enter
sar
jmp
movsb
jge
bound
roll
pop
iret
orl
fdivl
push
sub
push
mov
sub
push
gs
xor
mov
or
sahf
mov
xchg
movsb
out
inc
xchg
jle
mov
out
dec
mov
xchg
ficompl
leave
sbb
out
pusha
fisubs
in
out
mov
int
inc
fadd
insl
push
push
int3
and
adc
mov
in
pop
out
dec
sub
jmp
jbe
imul
mov
jbe
mov
int
or
cmp
ret
repz
push
hlt
adc
push
pop
jmp
clc
mov
cmp
or
ja
test
add
xchg
jl
out
inc
pop
or
xchg
jae
push
mov
jg
dec
ljmp
add
test
cmpl
mov
inc
mov
or
loopne
cmp
fisubrl
aaa
jl
and
xlat
adc
insl
pop
add
pop
mov
inc
xor
xor
mov
or
insl
shl
test
mov
clc
and
dec
push
ja
adcb
or
sub
ret
outsb
mov
fs
push
sub
jnp
add
mov
repz
push
jge
adc
push
mov
shrb
jge
ret
adc
xchg
lock
mov
iret
mov
fcomip
add
xchg
mov
out
jmp
cmp
xchg
lds
pop
fucom
jmp
xor
or
pusha
mov
out
pushf
jb
shl
add
das
sbb
jecxz
jnp
inc
daa
shl
mov
repz
cmp
std
xchg
cs
mov
mov
pop
rcll
jecxz
lcall
icebp
add
dec
lea
fucomi
lret
in
push
rol
xchg
outsl
mov
out
and
imul
add
rolb
shlb
dec
sbb
mov
cmc
test
sub
sti
pop
cltd
test
add
int
test
movsl
scas
inc
cmpsb
fildll
inc
cmp
inc
icebp
mov
xchg
sub
cmp
cmc
pop
inc
in
roll
xchg
xor
mov
pushf
fisubrl
push
popa
and
nop
hlt
xlat
iret
lods
scas
push
push
int
fisttpll
dec
xlat
out
jge
jne
inc
xor
xchg
push
and
push
out
push
out
inc
add
popf
xor
mov
loop
outsb
or
call
loope
icebp
icebp
cmp
mov
mov
ja
add
mov
sar
mov
cmp
jge
pop
adc
push
fdivrp
in
dec
das
jno
xchg
push
xor
mov
lods
int
jle
xchg
punpckhdq
lock
int3
mov
mov
mov
jnp
or
mov
std
je
adc
mov
int3
xchg
xor
in
ret
or
mov
and
ror
jecxz
shll
pop
cmp
mov
sub
in
repz
subb
sub
ss
xchg
cmpsl
popa
scas
lahf
dec
or
and
into
sub
jl
and
cmp
mov
xchg
stos
push
adc
clc
fcmovnbe
xchg
inc
pop
aad
loop
cmp
in
testl
inc
aam
mov
push
cmpsl
or
mov
shlb
cmp
push
push
mov
leave
sbb
xor
lea
btr
mov
mov
jns
jns
mov
js
shrb
mov
push
sub
fsubr
ljmp
rcll
sbb
or
push
stos
adc
scas
je
push
xor
cmp
test
cmp
mov
iret
loope
push
shlb
pop
clc
jl
lock
jo
pop
jns
or
sti
add
sub
aas
push
pushl
fmul
pop
cmp
xchg
pusha
inc
jmp
sub
sub
adc
push
in
cmpl
push
xor
xchg
mov
dec
and
in
mov
jbe
push
push
xchg
pop
fs
js
fldcw
cwtl
stos
jne
pop
add
lods
push
adc
inc
mov
mov
insl
ret
fwait
jnp
rcrl
ja
dec
lods
jns
out
or
dec
cmp
jle
shl
push
shr
sbb
outsl
xchg
rcrl
xchg
call
mov
mov
mov
sbb
repz
cs
inc
shlb
or
repz
pop
pop
cmp
sub
call
dec
cmp
mov
fwait
push
data16
or
int3
pop
fnstenv
inc
ffree
leave
mov
push
dec
movsl
aaa
cmpsl
cmp
incw
mov
ljmp
loope
stos
pop
mov
mov
nop
lods
push
int
ds
out
jne
xor
adc
mov
fsubrl
dec
cmp
fstpl
lret
sbb
sbb
iret
mov
xchg
pop
xchg
inc
out
push
stc
scas
xlat
mov
loopne
add
mov
dec
sbb
lret
jp
mov
mov
push
fistpl
cmp
sbb
dec
lcall
cld
pop
mov
pop
adcl
ds
inc
aas
leave
das
add
enter
inc
lret
xchg
out
fnop
push
cmp
or
rcl
jmp
leave
insl
les
addl
stos
jg
shlb
dec
aam
stos
aas
shrb
lds
push
or
push
push
xor
xor
daa
sbb
fs
xlat
sbb
sub
sub
jle
push
xlat
mov
mov
or
pop
fmuls
lcall
es
std
es
in
imul
or
sbb
pop
mov
sub
mov
push
push
dec
sbb
pop
and
lret
pop
pop
andl
stos
ficomps
stc
adcl
addr16
das
les
xor
and
xor
into
insl
stos
out
outsl
push
xchg
and
or
push
add
add
in
mov
fildll
mov
mov
sub
cmp
push
shll
dec
or
lret
dec
push
adc
jmp
adc
mov
insb
icebp
adc
shlb
sbb
popf
outsl
ret
inc
mov
xchg
test
sub
dec
push
or
sub
pop
jb
push
xchg
test
sarb
subb
add
rcrb
gs
mov
vpunpckhqdq
sti
sbb
and
movsb
xor
in
stc
add
imul
outsb
jg
jl
or
bswap
sbb
icebp
push
inc
aaa
cmp
insb
lret
fisttpl
xor
lret
les
sbb
add
aas
xchg
mov
mov
push
mov
lods
sbb
mov
adc
jne
adc
repz
adc
mov
add
inc
pusha
cmp
cmp
cmp
xorb
testb
xor
repz
loope
outsl
cltd
and
int
mov
cmp
mov
or
bound
jbe
gs
sub
cmpsl
repnz
xchg
cmc
arpl
xchg
mov
push
bound
lcall
push
dec
scas
pop
push
sbb
mov
push
cmp
inc
jno
jecxz
inc
fdivrl
sub
aaa
je
push
int3
push
loop
or
xor
aas
test
movsb
lea
out
cwtl
aas
test
fs
in
je
ret
outsb
loop
pop
lcall
sarl
xor
dec
daa
jb
dec
xsha256
cmpsb
pop
adc
jp
dec
test
jmp
int
ljmp
fwait
scas
das
mov
movsl
into
xorl
mov
cwtl
test
sbb
nop
out
int
or
add
es
filds
out
repz
pop
addr16
fsubl
loope
and
sub
inc
scas
jle
stc
xor
sti
pop
push
mov
jb
lea
dec
daa
sub
sbb
aam
rcrb
and
jae
mov
and
divl
repnz
aam
add
cmp
int3
pop
pop
sbb
push
les
mov
sahf
fimuls
js
xchg
inc
icebp
test
pop
mov
stc
inc
into
cmp
xlat
andb
aaa
mov
push
enter
and
push
xor
ss
mov
jg
repnz
cli
dec
push
aam
jle
ret
fwait
int3
xchg
inc
push
popf
popa
std
push
cmpsb
mov
add
lret
xchg
jl
push
adc
sub
mov
dec
cmp
xchg
xchg
loope
push
ret
or
in
imul
dec
cli
mov
ret
aam
fwait
mov
mov
dec
adc
call
mov
push
add
mov
stos
mov
hlt
cmpsl
clc
into
push
dec
mov
sub
ret
push
and
mov
mov
pop
arpl
dec
scas
out
rorb
fists
add
sbb
shrl
push
sar
pop
mov
das
imul
fmul
arpl
lret
mov
ja
push
xchg
in
testl
push
lahf
mov
xchg
xchg
cmp
adc
cmp
mov
xlat
cltd
and
jne
inc
adc
enter
mov
sub
xchg
jmp
push
sub
or
sbb
arpl
scas
js
mov
insl
arpl
push
pop
add
xor
push
arpl
push
xor
aam
shrl
stos
inc
dec
in
xor
loopne
mov
movsb
sti
ret
mov
lods
subb
inc
out
add
out
hlt
or
push
mov
mov
cmp
mov
xor
and
pop
js
xor
jnp
rolb
jecxz
filds
out
push
mov
or
icebp
sub
cmc
call
xchg
and
gs
mov
pop
xchg
popf
call
push
xor
mov
andb
adc
cmp
jbe
xor
stos
enter
mov
sub
pop
sbb
inc
movsl
add
adc
out
lret
mov
int3
mov
mov
xchg
add
mov
mov
dec
adc
jns
xlat
repnz
mov
lock
stc
shll
inc
dec
pop
and
std
mov
cmp
pushf
adc
mov
mov
dec
lcall
fidivrl
ja
pop
xlat
cmp
je
dec
or
add
push
bound
jl
sbb
xor
aam
mov
sub
mov
aaa
mov
rcrl
hlt
mov
je
pusha
out
xchg
hlt
js
add
addr16
cmp
mov
push
adc
and
jl
xor
mov
inc
arpl
sub
mov
xchg
ret
lahf
fadds
fld
fstpl
mov
pop
pop
xor
ss
nop
nop
sub
mov
shr
xchg
hlt
pushf
stos
or
rcl
mov
xchg
lock
sub
in
dec
out
scas
in
out
cmpb
out
mov
jl
stos
mov
mov
cmpb
push
jnp
mov
sbb
loopne
fisubrs
inc
lret
xchg
aaa
dec
inc
add
js
and
push
mov
jmp
push
mov
insb
xchg
pop
xor
pop
push
loope
or
mov
jae
jp
jg
adc
stos
pop
leavew
popa
loop
adc
andl
lods
fdivl
cwtl
jl
shrb
pop
icebp
sbb
cmpsl
xchg
xchg
push
adc
loopne
dec
sbb
scas
xchg
iret
jle
cmp
lea
loopne
aam
push
add
adc
ror
push
stos
mov
sub
cmp
in
mov
adc
fstpl
popf
xor
pop
sbb
rcr
mov
ja
dec
xor
push
insl
push
inc
ja
inc
lret
test
pop
mov
lods
int3
cmpsl
mov
mov
cmp
add
cmpsb
movsl
add
add
xor
sub
sub
xchg
adc
adc
mov
xchg
add
or
mov
int
sahf
std
arpl
out
cmpsb
jecxz
es
imul
outsb
fdivl
mov
jbe
or
fcomip
jg
add
push
jmp
or
mov
aam
mov
lret
test
add
das
pop
mov
into
jp
jno
cmpsl
cmp
mov
ljmp
repnz
add
dec
lods
mov
lock
pop
aam
xchg
sbb
jle
mov
dec
ss
aas
mov
xchg
cmp
int3
add
les
scas
pop
or
pop
sahf
add
ljmp
hlt
cwtl
inc
jns
mov
std
inc
inc
cmc
or
mov
addr16
movsb
fimull
xchg
jb
push
andl
inc
dec
es
mov
sbb
cmp
or
push
fmull
in
adc
push
sub
or
jb
clc
fs
inc
daa
and
and
fs
fwait
andb
mov
ficoml
rolb
mov
cmpsl
jne
inc
fdiv
lret
outsl
cmp
movsb
or
arpl
push
inc
scas
xchg
loope
pusha
ficoml
mov
cmp
shll
imul
inc
pop
aam
jno
mov
and
ficompl
and
xchg
rclb
dec
dec
push
sub
roll
sbb
into
jle
lea
pushf
sbb
iret
hlt
ret
sbb
repnz
pop
aam
es
out
stc
mov
pop
add
mov
cmp
mov
mov
out
int3
mov
mov
vpextrw
and
pop
in
sub
dec
dec
jge
test
dec
push
inc
ljmp
iret
adc
push
scas
xchg
mov
negl
and
cs
pop
xchg
xlat
aaa
xchg
and
push
dec
hlt
aas
jnp
test
push
or
lods
movsb
js
lahf
cmpsb
lcall
and
and
jo
addr16
xlat
stos
bound
inc
addb
sbb
pop
inc
push
inc
xchg
add
in
add
adc
rcrb
sbb
xchg
sub
jb
mov
lea
add
mov
adc
call
popf
push
fstl
cmp
ret
or
loope
jge
imul
mov
push
push
fwait
into
inc
push
push
aaa
cmpsl
sbb
loop
in
stos
jp
stos
or
popf
and
lea
imul
sub
xor
rcll
sub
add
into
cltd
mov
in
push
mov
fs
movsb
dec
in
mov
rdpmc
jns
in
fmulp
roll
repnz
fstps
stos
les
lret
repnz
loope
and
dec
mov
sub
sbb
push
imul
mov
mov
sub
push
jmp
mov
das
mov
cltd
inc
enter
dec
mov
cmp
xchg
rclb
cld
aaa
add
jb
ror
jo
flds
out
mov
int3
mov
lret
fs
mov
inc
fwait
or
pop
mov
jl
pop
lods
and
in
dec
and
jb
fnsave
aam
cltd
aas
inc
jae
punpckhdq
push
xchg
mov
inc
sub
push
lods
push
add
pop
movsl
adc
add
scas
shl
sbb
lret
push
push
mov
jge
fwait
stc
mov
xor
jo
loope
data16
jnp
jns
jae
out
sub
shl
mov
out
or
leave
clc
xor
jae
pop
jns
arpl
aaa
mov
ds
mov
sub
and
xchg
mov
xor
adc
iret
mov
mov
push
insl
add
mov
mov
ss
or
pop
sti
sbbb
add
into
sbb
notl
jge
or
xor
mov
clc
dec
cmp
mov
scas
lret
mov
repz
xlat
jno
mov
add
out
ds
inc
sub
aaa
fldt
add
jo
cmp
xchg
jmp
cmp
jne
jge
mov
add
cmp
mov
sbb
mov
push
ja
sbb
jbe,pt
subl
xor
out
fdivr
or
aaa
sub
jo
cltd
jne
aaa
aam
movsl
or
mov
mov
adc
xor
adc
out
or
xlat
or
sbb
cmpsl
inc
testl
in
xlat
or
mov
fsubl
data16
movsb
into
push
lahf
aaa
addb
jo
fistpll
or
test
andl
std
loopne
cmp
xchg
orb
ds
xchg
xchg
sti
lods
jbe
dec
clc
pop
andl
lahf
lahf
inc
jmp
or
sbb
adcl
ss
sbb
dec
pop
mov
test
scas
sbb
mov
jmp
dec
xor
push
adc
jle
aaa
mov
in
nop
cmp
ss
xor
xor
pop
daa
sahf
dec
ret
out
fisttps
in
pop
pop
and
pop
aam
repz
cmp
ficomps
jge
jge
sub
dec
daa
shlb
push
sbb
imul
sub
loopne
adc
xchg
int
popa
hlt
xchg
loope
repnz
pop
add
cmp
mov
pop
xchg
pop
pop
pop
cmovnp
test
sbb
pusha
xchg
inc
xor
mov
xchg
sub
jl
or
gs
add
scas
push
pop
dec
rcrl
dec
jmp
or
pop
mov
fs
cmp
ds
pop
mov
sbb
mov
lret
inc
mov
ja
sub
adc
notb
push
ja
icebp
stos
push
lret
movsb
js
dec
fwait
sbb
into
pop
icebp
cmp
sarb
sub
addr16
shrl
sub
sbb
mov
xchg
clc
aad
fwait
mov
js
xor
sub
in
sub
cmpl
hlt
icebp
xor
dec
dec
add
mov
sbb
lock
jge
push
dec
or
lods
xor
mov
or
jl
or
or
and
js
adc
mov
rcrl
cmp
add
pop
pop
pop
scas
das
mov
mov
mov
js
jae
subl
dec
add
das
push
inc
cmp
mov
fwait
and
add
sbb
fld
and
sub
sarl
jae
adc
popa
mov
imull
in
dec
mov
shlb
in
test
inc
xchg
push
mov
push
call
inc
cmp
jecxz
jbe
daa
mov
sub
mov
mov
jne
loopne
adc
mov
push
mov
ret
inc
loop
push
push
and
lahf
push
inc
mov
dec
cwtl
dec
mov
add
stos
nop
mov
xorb
add
out
dec
mov
adc
jp
mov
pusha
out
cmp
mov
push
orb
lret
imul
frstor
sbb
push
mov
xor
addr16
xchg
lahf
add
mov
mov
divb
sub
push
data16
pop
ret
sbb
mov
pusha
mov
loop
movntps
mov
xchg
jecxz
push
dec
inc
in
scas
loope
fidivrs
addr16
dec
shrb
lret
iret
mov
inc
dec
daa
sub
lock
fwait
mov
push
push
fstps
data16
xlat
push
hlt
jle
adc
stc
fmul
lods
repnz
pop
sbb
inc
mov
push
mov
mov
inc
jecxz
push
sahf
jbe
or
cli
rcl
adc
ds
cmp
pop
jl
mov
dec
mov
js
popa
jb
mov
popl
lret
sti
mov
xchg
insb
fsubs
cmp
popf
xor
sub
ret
xor
imul
inc
lock
sub
loop
movsb
xor
scas
mov
pop
inc
adc
or
pop
sub
mov
or
xchg
add
stos
pushf
mov
subb
sahf
add
xor
test
and
push
push
out
cmp
sub
ret
dec
add
aaa
push
hlt
mov
orb
dec
test
pop
mov
xchg
pop
aas
sub
pop
xchg
mov
and
lahf
sti
fstps
into
jae
push
mov
mov
fisubrs
test
ja
mov
ret
dec
sahf
jge
xlat
cmpb
shl
rclb
stos
xor
icebp
cwtl
cmp
je
sub
mov
xchg
mov
lcall
and
inc
jp
mov
popa
jmp
jmp
push
in
cmp
ret
pop
and
jno
push
mov
cmp
and
cmpl
out
aam
aaa
push
push
push
ljmp
jl
dec
inc
and
push
jle
jbe
cltd
push
rcrb
pop
scas
mov
fdivs
mov
adc
fwait
or
scas
lcall
call
dec
aaa
out
addr16
jo
ss
inc
inc
fdivrl
xchg
mov
ja
lret
pop
pop
iret
gs
lret
aam
dec
xchg
inc
pop
push
add
inc
push
push
ds
cmp
cmc
pop
cmpsl
addl
adc
push
lahf
xchg
xchg
mov
mov
xlat
jle
sbbl
mov
cwtl
xchg
mov
or
jbe
push
xchg
ret
fisubrs
jbe
sbb
lods
cmp
or
mov
jg
pop
sub
int3
addl
or
cld
sti
outsb
push
out
jl
jge
aas
xor
jbe
clc
dec
imul
sbb
fdivrl
arpl
into
in
shl
dec
sub
or
shr
test
repnz
push
sarl
dec
cmp
pop
or
lahf
and
add
pop
jb
scas
adc
and
sub
push
sbb
mov
je
addr16
jno
add
aam
xchg
pop
imul
inc
push
les
lret
imul
aam
dec
mov
and
lock
hlt
mov
sahf
out
xchg
or
inc
int
dec
bound
push
pop
and
jbe
cs
jmp
add
adc
sub
mov
loope
lcall
stos
shlb
cmp
or
stos
mov
mov
xchg
cmp
jnp
aam
jo
mov
inc
cmp
fildl
inc
pop
loopne
inc
push
adc
inc
repnz
loope
mov
out
pusha
cmp
jne
jmp
adc
jbe
out
adc
int3
fsubr
cmp
lret
aam
cli
jmp
sbb
or
lods
jae
jbe
xchg
dec
imul
stos
cltd
add
test
scas
dec
xlat
sbb
inc
cmc
pushf
popa
mov
push
ret
jne
cltd
hlt
fidivl
pop
cld
div
sub
cs
aam
and
lret
lods
les
cmp
inc
pop
inc
lods
lods
inc
cmpsb
loope
pop
sbb
adc
dec
fisttpl
or
fsubrs
push
jle
adc
in
lret
pusha
test
es
mov
push
fidivrl
cmovnp
add
dec
xlat
pop
adc
leave
mov
add
jbe
popa
insl
stos
add
and
xchg
icebp
mov
aam
mov
std
clc
movsl
inc
mov
outsl
lods
pop
pop
push
je
test
aaa
add
add
sbb
sti
push
repnz
adc
lcall
jmp
push
xor
out
cmc
dec
and
cmp
fildl
mov
mov
scas
lock
inc
fsubrs
bound
fsubrs
pop
and
faddl
cmp
jne
loopne
pop
shl
push
add
in
shrb
push
mov
mov
adc
xor
dec
push
cmc
gs
lahf
imul
cmpsb
sub
repz
aas
ja
lcall
aad
in
dec
xor
pop
sub
xchg
iret
js
push
push
fmull
data16
mov
cmp
roll
pop
dec
pop
std
dec
mov
fucomp
push
into
loopne
jnp
xchg
out
add
xor
mov
xor
adcl
push
test
data16
mov
ret
sub
adc
sbb
mov
cmp
sub
jae
adc
je
cmp
cmpsb
lret
into
lcall
or
int
loopne
out
mov
jp
push
or
iret
adc
jg
loop
popa
mov
pop
adc
jae,pn
xor
in
push
cld
cmp
je
dec
add
cld
pop
jo
jle
adc
or
dec
adc
lcall
ljmp
shlb
adc
lock
enter
and
pop
xor
movsb
popa
sub
addb
scas
mov
loopne
xchg
sub
pop
movsb
inc
inc
mov
sbb
clc
mov
xor
mov
negb
repnz
outsb
cmpsl
in
insb
sbb
leave
mov
fildl
jo
sbb
stos
cmp
inc
inc
mov
std
add
popa
loopne
sub
in
pop
mov
ds
jb
lret
xchg
stos
icebp
jne
jmp
push
out
xchg
enter
push
add
adc
mov
pop
icebp
sbb
add
out
mov
cmpsb
icebp
daa
jl
cmp
jle
ss
lretw
pop
and
sahf
cmpsb
nop
sbb
inc
sub
xlat
mov
mov
cmp
sub
in
cmp
mov
gs
in
ljmp
or
repz
sarl
jmp
cmpsb
mov
mov
negl
in
clc
mov
mov
adc
mov
jl,pn
pop
pop
loope
popf
and
sbb
jo
cltd
out
icebp
out
jno
outsb
adc
stos
fnstcw
dec
scas
inc
cmp
pop
adc
scas
mov
inc
repz
cmp
je
adc
inc
sbb
sub
jl
push
hlt
or
sub
pop
dec
cwtl
xor
sti
jl
push
cmp
cld
mov
aas
dec
xor
jb
pop
iret
je
pcmpeqw
push
rcl
or
cmp
out
sahf
popf
orb
mov
mov
or
into
test
add
ja
mov
rorl
out
pop
mov
jae
ud1
pop
lret
or
test
addr16
nop
mov
cmp
repz
xlat
lret
xor
lods
out
add
mov
push
xchg
add
sub
pop
int3
hlt
aad
inc
lcall
into
mov
cmp
dec
iret
pop
xlat
pop
cs
pop
jo
pop
cmp
adc
ss
mov
sarl
xor
out
loop
adc
ss
lock
cli
add
cmpsl
aam
int
jge
cmpsl
rolb
imul
popf
cwtd
xchg
outsb
mov
jge
sbbb
ljmp
sub
mov
add
push
mov
data16
lret
js
jp
outsl
mov
xor
xor
sub
mov
add
incl
dec
in
sarl
call
pop
insl
and
push
das
outsb
imul
sub
fdivp
sub
mov
in
mov
aas
push
fsqrt
jbe
xchg
movsb
fimull
mov
xchg
ljmp
sbb
sahf
outsl
cli
pushf
sbb
repnz
cmpsl
aad
rorl
jae
cmpsb
cli
xchg
hlt
cmp
adc
inc
pop
popf
out
sub
cmp
mov
sbb
aad
into
mov
or
or
push
push
mov
mov
adc
aaa
and
in
out
out
or
lea
mov
dec
int3
daa
in
loop
cmp
hlt
stos
cmp
sbb
fisttps
push
repnz
lahf
ret
adcl
into
sub
pop
fstsw
sbb
lret
mov
sub
std
xor
and
or
into
push
fidivs
adc
jne
ret
das
rolb
mov
cmpl
ss
out
push
dec
shrl
dec
insb
dec
lea
fwait
popa
movsl
clc
movsl
fmul
call
std
xchg
mov
cmpsl
jbe
scas
push
out
in
or
jmp
fcomp
inc
mov
iret
fs
adc
dec
and
sub
xor
dec
mov
sbb
push
movsl
mov
push
add
cmpl
and
pushf
jae
or
mov
in
and
jo
faddl
inc
mov
sbbb
ja
gs
cs
xchg
gs
push
popa
loop
inc
fimuls
arpl
adc
push
lcall
adc
icebp
and
addr16
sti
fsub
jge
sbb
jp
inc
pop
daa
jp
clc
pop
ret
stos
hlt
add
es
cmpsl
sbb
int
lods
fwait
imul
mov
dec
inc
nop
push
loope
xchg
pop
shlb
sub
test
das
mov
pop
imul
pop
andb
movsl
fdiv
pushf
sbbb
std
push
mov
push
and
loop
enter
or
dec
xchg
inc
sbb
repz
xchg
push
pop
xor
ror
repnz
pusha
inc
xchg
insl
sbb
inc
adc
mov
pop
loopne
lea
mov
lahf
inc
push
mov
roll
adc
jg
shlb
inc
mov
faddp
int
into
xchg
mov
jbe
cli
call
lock
pop
mov
dec
or
imul
mov
inc
cwtl
sub
jnp
jo
mov
and
sbb
mov
adc
leave
fdivrs
xchg
fwait
sbb
jmp
xchg
test
fstpl
inc
push
addl
adc
add
pop
push
fwait
je
jle
cmpsb
mov
fwait
out
out
cmpb
jo
jp
mov
jbe
cmp
popa
cwtl
sub
push
mov
fcmove
fildll
fisubs
mov
imul
fiaddl
dec
inc
xor
fisubrl
cli
sahf
data16
cmpb
call
mov
pop
leave
jl
inc
nop
dec
fwait
addb
cmp
xor
push
imul
jae
sub
xor
outsb
cwtl
ds
pusha
dec
mov
ret
jge
adc
inc
jg
in
ds
lahf
call
and
inc
in
dec
sub
ret
adc
mov
lcall
lea
lret
xchg
push
in
mov
mov
pop
ljmp
fmull
testl
cmp
sub
insb
adcl
pushf
fldcw
leave
xchg
lret
add
push
jb
into
enter
dec
mov
aam
push
mov
pause
jge
mov
insl
fidivrl
andb
test
adc
adc
jecxz
fstp
dec
rcrb
jmp
sub
imul
or
cli
add
and
cs
or
rorb
out
and
push
cmp
dec
xchg
pop
mov
jo
mov
lock
cltd
aaa
sub
std
fs
lahf
mov
inc
mov
fiadds
data16
fstps
or
inc
mov
pop
and
adc
adc
pcmpeqb
iret
fsubr
je
das
cld
mov
mov
inc
push
adc
pushaw
fldenv
insl
and
hlt
ja
std
jbe
lods
xchg
addr16
and
insl
imul
xor
push
pushf
mov
mov
xor
push
push
into
out
xor
aam
dec
mov
mulb
out
shll
mov
mov
jns
testb
test
out
xor
out
mov
pushf
pop
iret
andl
es
fistpll
lcall
xor
sbb
push
repz
mov
test
inc
push
mov
std
mov
test
daa
sub
jae
test
xchg
lcall
sub
push
or
or
data16
es
lret
lahf
jnp
push
xor
sub
add
fcompl
fstl
es
push
js
repnz
and
xlat
push
sbb
pop
fdivrs
stc
mov
push
clc
repnz
imul
mov
mov
outsb
sub
int
mov
xchg
and
jge
add
sbb
aaa
jb
xor
scas
fisubs
adc
dec
js
push
negl
dec
or
pop
and
xchg
sub
inc
je
arpl
addr16
or
imul
mov
pop
int
adc
int
test
hlt
repnz
aas
insb
xchg
lock
popa
dec
xlat
shlb
and
ret
mov
enter
call
ja
loope
lods
and
into
sub
dec
inc
dec
fmull
imul
mov
xchg
xlat
adc
mov
pop
jge
sti
mov
pop
sbb
sub
inc
sbb
cmp
add
test
mov
repnz
jb
mov
push
sbb
and
jo
lock
xor
xor
pop
push
enter
test
cmp
fildl
and
cli
push
xchg
dec
xchg
sarb
jo
xchg
push
push
cmp
cmpsb
jns
fs
xchg
lock
out
and
incb
ret
call
repz
jo
jbe
jg
lcall
clc
repnz
mov
insl
dec
out
and
xor
add
in
jmp
inc
jge
add
ds
pop
mov
sbb
leave
mov
movsl
mov
mov
pop
xchg
mov
mov
sbb
aas
jp
and
pop
and
add
lods
mov
mov
lret
cmc
lahf
mul
popf
xor
dec
jmp
dec
xchg
and
jae
adc
push
mov
push
ret
or
stc
test
xchg
imul
daa
dec
add
je
scas
push
mov
pushf
cmp
lock
int
mov
jg
cmc
ficomps
mov
xchg
jl
hlt
xor
std
pop
mov
in
inc
jo
jb
push
dec
xchg
dec
ret
jnp
sbb
cmpsb
cltd
mov
pop
inc
cmpsl
movnti
mov
mov
push
mov
dec
mov
adc
ds
push
sbb
fnstsw
nop
stc
je
inc
test
or
fucom
mov
jne
ret
xor
mov
repnz
push
push
stos
cmp
sub
mov
adc
out
adc
mov
adc
adc
cmp
pop
pop
out
sbb
or
outsb
mov
test
shr
jecxz
dec
add
orb
call
mov
push
cmp
and
dec
lcall
mov
pop
cs
mov
mov
dec
and
adc
adc
stos
pop
in
adc
fwait
mov
xor
loop
mov
popa
aad
ret
cmc
ja
popf
cmp
dec
jne
in
in
aad
icebp
inc
ss
imul
cmp
mov
dec
cmpsb
push
fisubrs
mov
push
xor
movsl
pop
mov
popf
mov
int
es
add
add
adc
repnz
lea
xor
push
xchg
adc
subb
sti
push
inc
hlt
xor
mov
push
loopw
xchg
orb
mov
fstps
cwtl
adc
shr
iret
xchg
cmpsb
pop
inc
and
inc
mov
in
dec
filds
cmpsl
adc
push
sub
popa
xor
pop
jmp
out
sahf
test
pop
push
cmpsb
inc
out
hlt
add
push
fwait
add
inc
mov
pop
xchg
dec
mov
push
sbb
lret
negb
movsb
pop
popf
dec
push
int3
adc
mov
push
repnz
cli
xor
fsubrs
add
call
mov
mov
test
mov
cs
fsubrp
dec
stos
mov
dec
lock
mov
jl
test
mov
jae
das
jno
insb
mov
push
ror
loopne
cmp
mov
fimull
cmp
or
gs
ss
arpl
pop
outsl
sti
hlt
in
mov
xor
sbb
iret
into
lcall
rcrb
xor
adc
icebp
inc
into
pop
cwtl
clc
call
cmp
and
inc
std
in
and
xor
sbb
leave
gs
xor
movsb
pop
test
jmp
aad
adc
cmp
cld
add
mov
ret
jae
cld
subl
je
sahf
pop
pop
sub
pop
xchg
sbb
cmc
add
xchg
jp
aam
mov
das
cmpb
out
stos
bound
pushl
pop
filds
hlt
push
call
xchg
stos
mov
gs
jmp
jbe
movsb
in
inc
pop
pop
adc
loopne
test
pop
sub
sahf
push
mov
popa
hlt
std
les
fistl
into
push
imul
jp
scas
sahf
cmpsb
push
js
sub
pop
leave
fcomps
cmp
lods
xor
rclb
jnp
mov
mov
not
mov
mov
cmp
icebp
pusha
data16
push
add
in
int3
inc
xor
push
loope
xor
inc
xchg
insl
out
out
mov
push
sbb
or
and
dec
xor
push
xor
fldcw
fcoms
sbb
or
xchg
or
adcb
out
loopne
nop
xchg
test
xlat
daa
cmp
xchg
popf
push
jbe
mov
pop
cwtl
or
out
lea
dec
push
outsl
scas
lahf
or
test
les
push
cwtl
jge
iret
jnp
sub
dec
imul
shll
fidivrl
and
xchg
xchg
jbe
mov
adc
or
jnp
mov
cltd
mov
dec
sti
adc
insl
jo,pt
dec
iret
insl
iret
inc
dec
pop
mov
insb
pop
cmp
inc
jg
or
stos
jecxz
sub
xchg
test
idivl
mov
test
mov
and
inc
mov
add
adc
jb
mov
mov
sbb
inc
nop
mov
mov
adc
scas
mov
add
rcll
subl
jno
lock
push
ret
push
pop
ljmp
dec
cli
add
and
push
mov
pop
lods
xor
cmc
pusha
inc
test
loop
mov
push
ficomps
stc
sti
pushl
mov
fisubs
orb
icebp
jmp
repz
hlt
pop
dec
and
sbb
lock
movsb
mov
pop
rorb
repz
stos
jg
sbb
movsl
or
adc
mov
and
cmp
lret
mov
pop
cmpsb
push
arpl
inc
call
ja
sbb
fidivrl
push
dec
hlt
and
lret
outsb
adc
call
push
inc
pop
stos
mov
in
or
mov
jmp
pushf
add
jg
jno
shr
jne
jne
mov
sub
test
push
add
dec
xchg
mov
iret
dec
push
cli
pushf
insl
fadd
sub
push
push
jmp
xchg
add
or
sbb
mov
push
ss
into
mov
lcall
xchg
cmovb
mov
out
cmp
int3
push
cld
adc
incb
cmc
test
and
fs
fbstp
fcompl
in
sbb
add
arpl
or
aaa
sub
test
std
sub
push
insl
inc
movsb
cmp
lahf
movsl
adc
jecxz
jno
iret
add
outsb
mov
sbb
pop
dec
sub
adc
or
cwtl
std
decb
mov
xor
xchg
adc
dec
push
jecxz
adc
out
cltd
add
das
out
adc
xchg
sub
fildll
push
or
add
xor
lcall
test
jne
loopne
rcl
pop
jmp
dec
mov
push
mov
fs
int3
push
shlb
lock
int
jns
dec
pminub
fisubrs
addl
dec
adc
or
shll
test
pushf
mov
fldl
jl
orb
or
fbld
push
or
fxch
fnsave
add
and
adc
dec
xor
xchg
movsl
lds
jle
pop
insb
adc
lea
inc
mov
add
xor
add
icebp
mov
and
pop
pop
and
es
xor
mov
push
pop
sahf
rcrb
jno
sbb
pop
push
mov
add
fcoms
push
mov
stos
mov
icebp
inc
and
and
negb
mov
or
push
sbb
fucomp
adc
adc
shll
test
push
adc
lock
stos
decl
movsl
sahf
push
das
jns
iret
sahf
dec
mov
scas
cmp
jo
pop
add
outsb
ror
mov
inc
and
xchg
cmp
mov
and
mov
aaa
dec
add
mov
fcmovnbe
mov
mov
lcall
add
mov
cmpsb
int3
xlat
idivb
jle
into
outsl
or
mov
in
push
loopne
shrl
mov
lds
dec
lahf
add
xchg
je
aas
rcll
loop
loopne
sub
adc
outsb
xor
pop
cmp
push
repnz
data16
cmpl
cld
lahf
stos
addr16
pop
gs
mov
inc
sub
cli
js
mov
fwait
and
lcall
shrl
add
ret
inc
ja
dec
subb
sbbl
testb
push
es
leave
xor
in
out
ret
jno
fmuls
mov
mov
lcall
xchg
mov
sub
sub
jl
mov
mov
mov
popf
fcomip
lahf
sub
sarl
mov
es
push
jb
out
sub
insl
cmpl
pop
movsb
sub
call
dec
push
pop
mov
cmp
sbb
ret
pop
push
inc
jb
push
mov
fwait
dec
mov
dec
pop
leave
fiadds
lahf
mov
pop
in
xchg
cs
enter
push
les
add
shll
or
push
add
dec
fcomi
mov
sub
xchg
imul
cli
ja
cmpl
xorb
adc
xchg
inc
push
xor
inc
das
rorb
fsts
ret
sbb
cmc
fwait
sub
pop
or
sbb
shr
push
rcr
mov
lods
sahf
imul
cwtl
jae
cwtl
jnp
rolb
cmpsb
lods
out
idivb
xlat
sbb
hlt
pop
rorl
arpl
call
stos
into
cmp
pop
insl
and
or
lds
icebp
in
jg
sub
xlat
sbb
mov
outsl
sub
jl
stos
scas
mov
and
movq
sub
adc
loopne
jb
pusha
jg
ljmp
cmp
push
push
cmp
push
lds
push
xchg
sub
lods
inc
push
pop
pop
lds
fiadds
xchg
in
cmp
aas
cmp
push
inc
push
inc
mov
cmp
jmp
or
shrb
push
or
scas
or
mov
xchg
mov
dec
lock
lock
xchg
lahf
xchg
lods
mov
aam
stc
sbb
and
xor
jno
pop
pusha
add
jae
jmp
insb
mov
add
pushf
sub
push
jbe
jno
jle
lods
xor
mov
jo
ss
stos
add
cmp
divb
and
out
pusha
imul
imul
and
stc
mov
nop
sbb
out
mov
jle
in
dec
add
out
ja
call
loopne
xor
jecxz
cmp
das
mov
scas
iret
daa
pop
or
jns
pusha
test
pop
aad
fists
subl
pushf
outsl
inc
pop
lds
lods
lods
sub
out
frstor
push
ja
xchg
mov
pop
test
sahf
jns
mov
pop
jne
sub
and
scas
push
sti
jge
iret
arpl
out
adc
scas
sbb
arpl
cmp
out
dec
sbb
jnp
faddl
out
xchg
xor
xchg
lods
xchg
repnz
test
cld
mov
cmp
out
jns
rclb
ret
dec
jp
xor
jne
cmpsl
xchg
clc
push
outsb
cmp
sti
lods
xor
shl
mov
or
inc
sbb
or
rclb
movsl
and
pop
add
arpl
loopne
jne
push
adc
add
jbe
dec
je
adc
mov
cmp
shlb
daa
jo
ss
cmpsb
icebp
jne
cmp
lock
out
shlb
pop
incl
leave
call
dec
sub
sahf
int3
dec
xchg
ret
and
dec
fidivs
pop
bound
cmpsl
dec
arpl
add
push
insl
jbe
cmp
popa
bound
adc
iret
movsl
aas
lret
jbe
and
dec
cmc
push
mov
xchg
test
and
jl
push
cld
push
mov
dec
push
int
mov
cmp
inc
jmp
nop
and
test
push
sub
pop
pop
push
mov
loop
jns
sarb
mov
popf
ret
inc
clc
int3
add
inc
int3
clc
add
test
rol
xchg
xor
adc
iret
sub
adc
push
dec
mov
jne
inc
es
xor
push
adc
mov
test
cwtl
add
insb
sti
bound
dec
xchg
cmp
sub
sti
iret
jnp
test
jne
jge
cmpl
mov
cmpsb
vmread
push
inc
sub
dec
cmp
sbb
insl
pop
fstps
repnz
out
sbb
or
jle
pop
repz
movsl
xchg
pop
arpl
adc
jp
cmp
add
xor
add
into
imul
repnz
cs
iret
out
popa
int3
and
in
mov
inc
or
mov
andl
mov
jp
and
lods
xlat
cld
cmp
or
add
daa
push
dec
xchg
fildll
mov
fistps
inc
xor
mov
scas
loope
outsl
mov
or
mov
jns
inc
rcr
adc
add
paddsb
loopne
in
pop
push
and
enter
push
fistpll
inc
xor
ljmp
inc
jbe
arpl
push
flds
fs
sahf
push
mov
sub
push
aam
lret
push
cwtl
pushf
pop
jb
mov
test
lods
adc
fwait
test
sub
dec
test
jae
sbb
xchg
jl
lods
jb
add
jne
jecxz
pop
xor
dec
mov
push
mov
daa
mov
in
jo
cmp
push
xor
or
xor
mov
roll
test
out
fstpt
jbe
jnp
fsub
pop
dec
pusha
fildl
lahf
cmp
mov
fwait
mov
pop
cmp
add
jbe
sbb
in
xchg
into
jns
out
adc
cmpb
outsl
ret
jns
or
adc
pop
faddl
sub
ret
movsb
jge
inc
jb
push
jle
lock
movsb
lret
adc
inc
and
fs
pop
les
mov
int
insl
popf
mov
and
and
add
dec
popa
and
push
adc
ret
in
andb
ficomps
int3
sbb
fstpl
push
iret
push
dec
xor
mov
mov
fstl
cmp
sub
icebp
andb
popf
jl
adc
loopne
cmp
fsubl
aam
xchg
xchg
or
jge
inc
pop
stos
stos
jmp
jp
dec
push
or
ror
cmp
jo
into
shr
mov
dec
lahf
pop
test
sbbl
mov
mov
cmp
push
xor
lret
popa
fwait
xchg
pop
jg
add
fs
fs
fs
movsl
test
sbb
push
loopne
cmpsl
dec
xchg
sti
mov
pop
std
mov
xor
mov
ret
stos
cwtl
push
dec
call
adc
inc
dec
push
movsl
mov
lret
xchg
adc
arpl
mov
imul
scas
popa
ja
xchg
stos
fcompl
inc
mov
scas
mov
andl
cld
repnz
pop
or
mov
dec
xor
sub
cmc
loopne
xlat
and
sbb
outsb
push
mov
in
pop
dec
ret
mov
cld
movsb
xor
imul
dec
jecxz
xor
push
andl
cli
cwtl
jmp
xor
rclb
mov
sbb
cmp
push
cmp
out
test
repnz
dec
xchg
jb
mov
cld
mov
dec
push
pop
sub
jl
das
mov
xchg
xchg
push
mov
xchg
outsl
ret
jg
aaa
or
adc
call
jno
decb
fldcw
mov
mov
mov
mov
insl
aas
xor
inc
mov
lods
jl
and
xor
cmp
inc
insl
mov
sbb
jecxz
lret
mov
pop
push
in
jg
ret
mov
mov
lds
mov
ret
jle
adc
sub
out
push
or
lcall
icebp
dec
jmp
shrl
add
shr
mov
dec
fisubrs
inc
jb
pop
in
outsb
ret
std
pop
out
add
aam
inc
add
sub
cld
les
sbb
in
lock
std
fs
imulb
cmp
push
frstor
cli
push
jmp
sarl
enter
and
iret
into
and
jmp
sbb
rcll
mov
pop
pop
mov
fbstp
inc
mov
fs
xchg
lea
rcpps
pushf
pop
mov
out
push
aaa
or
ljmp
cmp
lret
clc
inc
orl
cmpsb
sti
push
jl
and
xchg
adc
pop
dec
loope
add
xchg
sub
fcmovnb
inc
test
and
dec
mov
fdivl
xchg
out
or
test
sbb
pop
fimuls
pop
fwait
jp
dec
adc
out
jge
jg
inc
ds
adcl
adc
lcall
mov
sahf
inc
xchg
xchg
cltd
add
mov
jnp
xchg
add
jo
inc
inc
mov
and
mov
adc
scas
out
push
rcr
loop
ret
mov
mov
sub
clc
cs
lds
sbb
fisttps
sti
cld
cltd
dec
pop
mov
ss
xor
lcall
inc
fdivp
push
add
outsl
lock
cwtl
jp
ret
fcmovbe
into
imul
dec
int
pushf
mov
cli
xor
sbb
add
subb
add
movsl
stc
or
sbb
or
inc
mov
mov
adc
mov
xchg
clc
sahf
aad
popf
stos
clc
mov
lods
xlat
push
incl
pop
pop
lods
sub
scas
in
adc
add
aas
pop
fwait
lods
push
inc
dec
popf
js
mov
jle
sbb
out
cmp
mov
insl
xchg
push
arpl
dec
popf
or
adc
push
mov
xchg
cmp
or
in
sub
stos
xor
sub
cli
jbe
pop
pop
stc
test
clc
in
bound
out
add
out
adc
jns
out
jge
and
xchg
and
bswap
ljmp
ret
movd
cs
mov
inc
inc
mov
fisttps
or
sar
mov
ret
or
lods
jle
insl
stos
lods
mov
jle
clc
addr16
call
pop
test
nop
iret
fdivrs
mov
aam
lock
inc
mov
push
iret
add
shlb
dec
inc
and
jl
add
mov
out
idivb
pushf
xchg
sbb
dec
addr16
add
pop
cmp
stos
repz
sub
jge
add
out
or
inc
aam
cmc
jg
lahf
test
mov
insb
xor
dec
shlb
adc
push
ds
jnp
xchg
inc
pop
addb
xchg
js
mov
lock
pop
lahf
test
push
into
push
js
ret
ret
push
cmpsl
sub
pop
das
mov
mov
cmp
repnz
dec
sub
pop
fdivs
sbb
mov
es
adc
dec
push
mov
into
lods
das
mov
xor
add
je
inc
push
repnz
loopne
mov
bound
cwtl
aad
cli
mov
in
push
sub
ss
jb
ja
stos
or
bound
xchg
stos
cmc
sbb
outsl
mov
or
popf
push
push
kmovw
mov
addr16
pop
sarb
cwtl
popf
mov
test
xor
sarb
ret
xchg
repz
loope
cmpsb
add
add
push
stc
bound
cmp
sub
adc
sub
sti
pop
daa
sub
dec
lock
outsl
fadds
mov
inc
test
outsl
and
data16
outsl
push
addr16
xlat
xor
xchg
jno
pop
outsl
dec
push
outsl
and
and
in
shll
pop
mov
dec
cmp
sub
roll
fadd
jp
clc
or
sub
jae
add
test
inc
iret
test
cmc
addb
jbe
jle
dec
mov
test
sar
add
xor
mov
push
leave
mov
push
test
xlat
inc
int
pop
mov
std
jge
or
sub
into
jo
scas
addb
pop
lret
jecxz
popf
iret
fldt
jbe
inc
dec
jae
ret
lret
test
add
sub
push
push
inc
dec
and
jg
or
cli
pop
pop
and
int3
xchg
gs
ud2
jno
adc
aaa
lret
rol
js
mov
add
das
int3
xlat
and
jecxz
inc
cmpsl
bound
adc
into
fimull
fimuls
inc
inc
movsl
sbb
adc
lcall
inc
sbbl
js
in
push
rcll
pop
lahf
rcl
shl
push
pop
aad
push
adc
lcall
in
cmc
repnz
pop
stos
xor
inc
out
fnstsw
cwtl
sub
out
arpl
mov
cmpsb
cmp
scas
mov
ficomps
ret
std
in
mov
adc
xchg
dec
cmp
stos
out
mov
dec
mov
mov
repnz
je
mov
xor
into
scas
ljmp
loopne
stc
inc
pop
adc
xchg
enter
sbb
std
sub
mov
js
subb
dec
mov
and
cmp
in
mov
and
ljmp
xchg
in
pop
mov
mov
mov
cmp
pop
and
stos
sub
cmp
push
mov
sub
jae
lahf
push
das
aad
jmp
cld
decl
rolb
out
pop
fdivrs
xor
idiv
adc
aad
push
call
cld
int
sbb
lret
dec
lods
fbld
fists
dec
out
push
shll
push
mov
cmp
mov
dec
cmp
movb
pop
sbb
push
gs
in
jne
add
ja
std
push
out
mov
jo
movsl
xlat
jl
aam
pop
lock
cmp
movsb
inc
inc
ret
mov
pop
outsl
jno
je
mov
hlt
getsec
sbb
push
mov
out
adc
mov
xchg
sbb
mov
stos
push
insb
sub
mov
xchg
dec
inc
sbb
fsubr
rcrl
xchg
ffree
jb
rcl
pop
loope
into
xchg
shll
aaa
xchg
jnp
and
and
xchg
repnz
mov
jno
or
sbb
mov
xchg
icebp
pushf
stos
pop
mov
lock
xor
fdivs
mov
xorb
icebp
lret
aam
lahf
decl
aas
nop
mov
stc
jo
mov
movsl
cmpsl
ss
and
cmp
insl
dec
icebp
arpl
icebp
pop
and
jmp
inc
jg
dec
icebp
imul
and
flds
movsb
pusha
outsl
pop
hlt
push
and
les
cmc
sub
push
lods
push
dec
lods
xchg
arpl
xor
jg
sbb
pop
xorl
pop
stos
clc
mov
ljmp
sub
adc
std
sbb
pop
test
xchg
je
mov
jbe
jbe
sbb
dec
sbb
push
cs
inc
xor
sub
bswap
mov
int3
adc
ret
cmc
lea
mov
push
lock
lret
jecxz
test
mov
sbb
add
xor
cmc
sub
adc
adc
mov
dec
cmpsb
cmpsb
xchg
add
cli
les
jg
dec
sub
add
or
mov
add
adcb
and
iret
mov
pop
xor
xchg
rclb
lds
jnp
jo
mov
stc
movsl
in
loop
jge
repz
pop
mov
mov
mov
aad
sub
lock
test
fcomps
fildll
xor
rolb
adc
loope
idivl
cmp
ljmp
imul
xchg
lea
das
xor
xor
adc
in
lods
std
push
addr16
js
sub
repnz
into
loopne
loope
sbb
jle
mov
mov
fsubrl
adc
mov
mov
stos
sub
int3
sbb
or
add
and
push
pusha
mov
cwtl
xchg
mov
add
out
dec
fcmove
sbb
jmp
pop
xchg
jecxz
push
xchg
pop
cmpsb
rcl
subl
repnz
fstpl
mov
jns
daa
stc
inc
test
dec
int
aas
inc
jge
push
in
fadds
mov
jge
dec
push
test
stc
mov
mov
negb
in
rolb
ljmp
xlat
sbb
ds
xor
and
mov
out
xor
jecxz
add
in
inc
cmpsb
xchg
imul
std
out
mov
ljmp
xchg
imul
out
adc
push
adc
or
out
push
jne
sbb
adc
push
cmpb
xor
mov
out
and
mov
sbb
push
enter
les
pop
ror
movsb
pop
add
dec
sbb
mov
fadd
test
inc
icebp
decb
rolb
and
subps
mov
lahf
and
mov
push
fucomp
addr16
int3
push
jbe
xor
lds
adc
mov
mov
pop
test
test
xchg
mov
sub
lock
push
sbb
mov
outsb
sbb
or
pop
sbb
push
push
xor
push
xchg
movsb
dec
mov
sahf
inc
lea
or
shrl
insl
lcall
das
xchg
popa
add
fists
adc
scas
leave
pop
aaa
sub
mov
jle
scas
push
mov
out
dec
test
sarl
add
push
fdivs
pop
xchg
sbb
imul
sbb
adc
xchg
frstor
dec
popa
or
add
test
adc
subl
or
ss
pop
inc
jae
pop
dec
pop
int
jmp
cld
out
push
add
xchg
lcall
mov
rcl
mov
pop
pop
dec
in
cmp
and
xlat
in
inc
add
imul
cmp
adc
mov
mov
fyl2xp1
mov
outsl
jo
adc
out
sub
jns
add
adc
lea
in
dec
push
scas
pop
inc
or
mov
or
mov
xchg
jmp
push
jmp
adc
insb
int3
ret
dec
ja
adc
inc
cmc
mov
arpl
cmp
sbb
jbe
xchg
jecxz
push
movsl
bound
enter
in
fimull
pop
inc
lods
mov
ja
loopne
add
testl
jne
push
arpl
jno
sbb
div
ficoms
xchg
cmp
inc
inc
jmp
cwtl
lds
bound
inc
sbbl
insl
jo
incl
add
and
fidivs
addb
cwtl
stos
lea
arpl
je
sub
test
jnp
add
out
loop
aad
repnz
pop
icebp
mov
int
vpsubusb
inc
or
out
sub
lods
jnp
jp
sbb
jl
sbb
pop
mov
out
push
xchg
push
push
adc
dec
in
bnd
xchg
inc
ret
les
push
es
dec
fbld
sub
out
scas
cli
push
fcom
fsubrl
jno
sbb
cli
jg
fcoml
insl
or
lahf
imul
loop
pop
lock
out
iret
xor
xor
xlat
sub
dec
lds
aam
dec
mov
icebp
inc
adc
mov
loop
aam
arpl
enter
fsubrl
inc
fimuls
lods
sub
adc
gs
sbb
jmp
lret
add
jp
push
mov
mov
jno
mov
pop
dec
test
xor
add
fwait
push
enter
fnsave
adc
mov
jl
je
lods
mov
movsb
mov
mov
mov
adc
mov
pop
xchg
dec
and
loop
push
xor
xor
xor
pusha
xchg
sbb
dec
jne
mov
mov
loop
mov
adc
leave
bound
xchg
fcoms
es
push
fimuls
mov
sub
sub
rcll
push
mov
sbbb
and
jg
mov
out
sub
mull
cli
int3
push
or
dec
js
test
jle
push
inc
pop
stc
pushf
into
adc
sub
inc
push
outsl
mov
repnz
and
fsubr
lcall
push
addb
mov
int
and
test
vmovmskpd
sub
add
movsb
or
ficomps
cmpsl
cwtl
add
mov
es
ffreep
xor
cmpsl
fsubl
test
cmp
loop
xor
mov
inc
test
sahf
testl
or
daa
cmp
sahf
daa
gs
imul
mov
adc
add
jns
imul
sub
mov
aaa
mov
jbe
adc
jge
movsb
add
scas
sahf
pop
fwait
jg
push
fcomp
pop
lock
pop
add
sahf
loope
ss
xchg
jb
mov
adc
rcrb
out
iret
jns
cmpsl
repnz
pop
sbb
xchg
sbb
lods
out
sbb
rorl
movsl
out
aaa
push
pushf
dec
rcrl
mov
aad
sub
mov
jne
aas
fwait
mov
mov
loope
lret
jg
cmp
mov
dec
sub
inc
test
cmpsl
popa
inc
dec
lret
stos
shll
push
aam
sbb
add
rolb
adc
cwtl
jle
cmpsl
mov
jge
push
add
xor
dec
jecxz
pushf
fstl
dec
repnz
inc
push
shl
out
outsl
mov
push
mov
pop
es
mov
xchg
fimull
mov
inc
pop
xor
mov
cwtl
lds
cmpsl
fidivl
jg
loopne
xor
fwait
jae
push
xor
ljmp
ds
sbb
cmc
jp
outsb
jge
testb
out
das
pop
or
les
mov
mov
add
mov
cwtl
cmp
stos
pop
in
shr
adc
test
cli
and
enter
aas
ret
nop
inc
fwait
inc
lret
mov
push
mov
into
sbb
ja
rcr
mov
xchg
cmp
test
sub
add
scas
shlb
mov
ljmp
nop
int3
subb
xor
inc
sub
cld
lods
std
shrb
cmp
lods
sti
mov
mov
xchg
mov
cmc
and
cmp
sub
out
push
xor
jle
and
xchg
mov
pushf
cli
andl
pop
mov
mov
sub
mov
faddl
push
sbb
int3
enter
fstpt
dec
rorl
subl
mov
js
lret
or
sub
pop
clc
mulb
fxch
mov
mov
repz
subb
or
cmc
xlat
and
push
fisttpll
push
ret
sbb
sub
mov
mov
push
call
adcl
sbb
lock
cli
lret
jg
mov
sbb
jmp
aam
jg
adc
or
sub
hlt
in
pop
loop
scas
sbb
incl
sbb
mov
inc
orb
pop
ljmp
and
into
add
pop
push
hlt
jbe
fists
bound
lret
push
out
out
rol
cmpsb
pusha
aam
dec
enter
dec
jl
sbb
mov
mov
ds
outsb
movsb
and
mov
aam
nop
mov
repz
sub
pop
addr16
test
test
jnp
dec
pushf
mov
insb
jp
in
aaa
lea
cmp
push
add
pop
and
nop
popa
lea
cmpsb
repz
rclb
and
xlat
inc
push
add
lods
mov
sub
dec
cmp
arpl
ljmp
jb
fs
xlat
mov
ret
mov
aad
mov
push
outsb
lock
xchg
dec
adc
cmpsl
jle
icebp
dec
xor
xor
adc
mov
stc
inc
xlat
lcall
push
xchg
sbb
mov
inc
sarl
les
jne
inc
stc
sub
sbb
pop
adc
outsl
inc
lods
pop
xchg
outsb
pop
fwait
or
cwtl
std
push
mov
xor
dec
sub
adc
xchg
dec
inc
test
ja
xor
xchg
xchg
mov
outsb
mov
scas
ret
or
aaa
out
icebp
cmpl
or
mov
add
add
push
xor
add
inc
popa
jo
xor
jne
mov
scas
sahf
insl
push
insl
out
movsb
test
jo
dec
push
or
lock
or
push
mov
movsl
pop
addl
sbb
filds
scas
sbb
xor
ret
push
lahf
loop
fisubrs
xchg
fwait
icebp
add
aas
push
xor
lahf
adc
push
xlat
shr
xchg
mov
add
mov
imul
sub
jae
inc
fisttpll
je
aad
or
jne
stc
jle
daa
rclb
and
div
sbb
xor
int3
mov
fdivrp
mov
pusha
lcall
add
xchg
inc
fs
pop
xor
sub
sub
xchg
xor
and
xor
xchg
mov
inc
lret
mov
in
std
push
movsl
sysexit
ret
xor
les
cmp
dec
sub
mov
ret
incb
mov
inc
movsl
push
ret
add
lock
nop
lock
fimull
rcl
cmp
dec
arpl
lret
xor
pusha
push
xchg
fdivrp
lods
lods
sbb
jbe
sbb
lods
ret
sti
pop
push
cmp
fdivrs
mov
and
xchg
call
imul
test
gs
bound
push
inc
cmp
mov
jge
subl
fidivrl
jnp
push
add
scas
dec
mov
cmp
jno
sbb
mov
lea
icebp
in
dec
jne
inc
pop
enter
scas
cs
dec
fwait
cmp
push
fiadds
xlat
aad
stos
shlb
mov
inc
scas
jl
sbb
dec
stc
pushf
jne
insb
loop
negb
in
mov
in
jnp
mov
jecxz
mov
stos
lcall
or
jbe
ss
iret
sbb
pop
adc
mov
inc
push
dec
adc
testl
je
lahf
aas
mov
nop
push
insb
mov
cs
push
test
sub
mov
dec
dec
adc
adc
or
ret
call
clc
sub
cmpsb
dec
mov
and
aaa
push
ljmp
xchg
ret
ret
jp
and
icebp
mov
pop
and
scas
jo
mull
imul
addr16
cmc
pop
ss
pop
inc
cld
dec
mov
jl
cmc
mov
sti
adc
jnp
push
and
mov
in
jo
sahf
dec
lods
jmp
jecxz
outsl
xor
mov
iret
jmp
in
jle
fadd
sub
test
mov
add
add
push
test
mov
cli
iret
js
subb
jnp
or
sbb
in
add
lahf
pop
addr16
aam
insb
jnp
mov
icebp
mov
xchg
xor
jle
mov
sub
mov
adc
fcmovnbe
shrl
sbb
mov
jge
cmp
sub
mov
lret
push
fnstsw
and
mov
mov
scas
mov
mov
mov
imulb
sbb
add
and
inc
in
inc
jo
fsubs
push
xchg
add
jns
jno
cmpsb
inc
push
hlt
jle
cmp
lahf
mov
pop
negb
in
push
push
lea
repz
mov
cmp
fnstsw
js
out
dec
cmc
inc
pop
push
incl
cwtl
xchg
data16
pop
cld
stos
cmp
mov
pop
mov
stc
ljmp
or
jne
mov
and
inc
mov
mov
imul
lahf
test
or
cmp
cmp
and
dec
push
mov
push
int
sbb
stos
repnz
mov
ret
mov
aad
ljmp
in
sub
inc
lcall
push
mov
sub
in
push
mov
dec
sarl
dec
insl
jge
in
pop
mov
sbb
aad
iret
aas
mov
add
loope
je
rsm
sub
fimull
hlt
xor
pop
adc
inc
or
jae
loop
and
pop
movl
push
sahf
fs
pop
movsl
repz
xchg
fbld
mov
pop
cmp
push
xor
call
mov
push
iret
in
fwait
sbb
addr16
jb
imul
les
or
jl
test
cld
cmp
mov
in
dec
enter
mov
or
lock
ds
leave
dec
pop
add
push
ja
push
mov
aam
lods
rclb
dec
cld
xor
shlb
or
pushf
jns
sbb
mov
aad
mov
jns
mov
inc
sbbb
mov
xor
sbb
push
decl
mov
sbb
lock
sbb
inc
fiadds
out
add
in
pop
push
push
les
mov
xor
or
in
push
out
adc
mov
sbb
push
fdivs
scas
in
inc
shrb
rol
out
mov
push
outsb
gs
pop
imul
nop
pop
sub
loop
mov
rorl
sub
shl
cmp
pop
shrb
jecxz
jg
ja
clc
mov
pop
mov
mov
inc
add
sub
addr16
xchg
pop
pusha
dec
ja
mov
xor
int
in
mov
sub
mov
out
push
scas
bound
push
xlat
and
pop
insb
aam
mov
movb
mov
adc
pop
jge
lret
jne
popf
or
scas
xchg
push
lret
xlat
in
lret
repz
fcmove
pop
mov
popf
out
adc
mov
fcoml
xchg
adc
movsb
sbb
pop
or
movsb
lods
scas
cmp
std
andb
test
daa
xsha256
cmpsb
push
js
add
pusha
mov
je
sub
mov
lahf
incb
and
cwtl
sbb
jb
sbb
jo
dec
clc
dec
sbbb
adcb
mov
or
movsb
push
bound
arpl
insb
loope
sub
mov
mov
js
in
and
clc
repz
stc
jne
cmpb
push
stos
push
sub
outsl
mov
addr16
mov
and
outsl
mov
jp
ficompl
nop
push
add
cmp
inc
dec
mov
push
push
xchg
jno
cs
enter
inc
adc
mov
in
and
or
jecxz
repz
sub
aas
xchg
fwait
push
aam
jp
push
sub
jns
add
add
xor
mov
push
mov
pop
jge
adcb
xchg
shlb
decl
sbb
into
inc
inc
jne
mov
andb
movsl
ret
popa
jp
jns
sub
loope
or
data16
mov
loopne
inc
imul
pop
mov
xchg
hlt
jl
inc
sub
lods
movsb
xlat
ret
lret
pop
add
jecxz
mov
adc
dec
push
push
dec
cmp
ljmp
lcall
cli
xchg
sbb
iret
icebp
popa
testb
jmp
sub
cwtl
outsb
cld
push
rolb
shrb
xor
fdivs
loop
in
sub
jne
test
subl
sbb
rcl
pop
lods
arpl
dec
pop
push
std
jae
pop
mov
movsl
movsl
data16
xchg
xchg
push
in
push
push
cmp
sub
push
dec
xchg
and
push
insl
inc
push
and
pmuludq
sahf
sbb
sbbb
fsub
mov
xor
addr16
jae
popa
add
shl
xorl
jp
cld
pop
lret
fistpll
sbb
out
push
test
jbe
lock
push
mov
enter
into
jns
loop
or
stos
adc
dec
dec
jbe
mov
stc
or
mov
loopne
in
or
insb
out
fistpl
mov
xor
fwait
mov
jnp
mov
in
xchg
insb
xchg
jg
out
or
or
cmp
mov
cwtl
xor
dec
sub
push
in
pop
sub
pop
mov
dec
stc
test
mov
sahf
rorb
xor
daa
fstpt
dec
inc
mov
out
and
aas
push
stc
gs
stos
shlb
stos
stos
inc
call
inc
sti
pop
jne
mov
arpl
pushf
or
je
jb
adc
pop
sub
xor
jmp
int
rolb
push
add
inc
jnp
adc
jmp
or
inc
pavgb
loopne
mov
rcll
out
xchg
outsl
jae
rclb
ss
call
ss
push
imul
lret
arpl
ss
in
lahf
imul
outsl
sahf
push
arpl
arpl
fdiv
test
rcrl
into
sti
pop
shlb
stc
sbb
cmp
loope
cwtl
out
mov
or
cltd
je
lods
iret
and
pushf
inc
add
clc
jmp
popf
in
adc
xlat
aad
mov
dec
lret
or
testl
or
dec
jg
mov
sbb
out
test
or
mov
cwtl
and
cmpsl
add
push
mov
sahf
pop
or
xchg
cmp
lahf
xchg
fiaddl
cltd
or
xor
scas
xor
mov
cmp
jbe
es
inc
addr16
xchg
mov
lods
test
pop
jg
rcrl
dec
jmp
fldl
cli
pusha
push
jp
mov
dec
cs
xchg
inc
mov
dec
mov
insl
cmp
cmpb
cmc
push
mov
adc
add
adc
push
mov
je
mov
lret
mov
lret
mov
leave
jns
rcl
imul
xchg
adc
lods
mov
fidivrl
sub
adc
inc
test
add
mov
enter
mov
andb
jbe
imul
fadds
xor
cmp
xlat
addb
test
sub
les
jb
jns
xor
lret
lahf
cld
mov
enter
sbb
lret
lret
mov
addr16
lcall
and
leave
dec
pop
fisubrs
dec
dec
mov
inc
fistpl
imul
cmpl
jnp
jne
mov
loope
mov
xchg
push
pop
inc
test
dec
and
cmc
lods
push
xor
mov
push
dec
scas
cmp
out
push
int3
or
pmulhuw
test
popa
mov
mov
jp
sub
test
loopne
std
cmp
dec
lods
and
xor
sub
inc
cmpsb
xor
pop
jmp
add
sbb
push
sub
sahf
jecxz
lea
subl
jmp
scas
sti
out
outsl
inc
mov
les
loope
out
lcall
mov
int
pushf
xor
jg
jmp
pop
shr
mov
mov
xchg
lret
pop
clc
dec
mov
push
std
sahf
std
sbb
inc
jno
mov
pushf
jno
in
push
inc
repnz
jl
outsb
pop
jae
mov
mov
lods
xor
loop
ds
hlt
iret
cmp
inc
movl
mov
cmp
push
jecxz
mov
mov
cmp
unpckhps
add
ficoml
movsl
adc
cmp
pop
call
pop
mov
rolb
mov
mov
addr16
inc
jle
lock
testl
test
orl
pop
jecxz
sub
xor
jmp
fmuls
add
clc
test
loope
aaa
daa
mov
mov
jne
in
out
xchg
xchg
sbb
or
push
fdivrs
and
dec
pop
fistps
roll
adc
arpl
inc
mov
lahf
clc
popf
mov
in
jb
jmp
sarb
shlb
enter
ss
adc
loope
in
shlb
cltd
sub
cmp
jae
sub
sub
ret
jne
push
pushf
fstps
lods
jnp
std
mov
iret
adc
rcl
xchg
jns
xor
dec
int
lea
mov
pop
sti
xchg
mov
and
les
xor
sub
sbb
insb
aad
lds
dec
mov
insb
je
rorb
xor
pop
dec
lcall
inc
ret
mov
aaa
pop
mov
pop
popf
sub
cmp
icebp
cmpsb
pop
mov
and
fadd
sub
int
in
in
fsub
mov
push
in
and
sub
js
into
push
dec
dec
out
insl
loopne
imul
enter
shll
mov
jge
and
add
pop
dec
rcl
in
or
lea
sahf
and
xor
ss
test
notb
ja
in
iret
inc
mov
stos
or
mov
jle
dec
sbb
mov
sbb
shrl
nop
daa
addb
ds
das
jg
mov
clc
xchg
cmp
add
out
clc
movsl
lret
dec
push
xor
subl
cs
pusha
jbe
dec
lods
push
into
xorb
lar
cltd
daa
shrb
xchg
add
push
dec
dec
mov
sbb
fiaddl
out
ds
sarl
stc
fidivs
int
mov
push
or
inc
pop
repz
out
aad
pushf
pop
cmpsl
insb
rolb
pop
xor
jecxz
cli
dec
push
iret
subl
mov
mov
fdivrl
insb
adc
cmpb
std
xchg
leave
fcoms
test
out
lods
fmuls
cwtl
mull
adc
cmp
inc
mov
clc
shlb
jo
mov
pop
mov
inc
push
movsb
movsb
inc
and
jb
aad
cwtl
jae
and
movsl
fisttpl
and
adc
imul
cmp
add
out
pop
mov
lret
pop
cli
orl
inc
pop
mov
scas
mov
push
and
andb
mov
pusha
aad
add
out
or
loope
jae
mov
push
in
mov
inc
adc
inc
call
and
hlt
adc
sahf
xlat
ljmp
push
icebp
mov
xlat
and
xor
jg
inc
fs
or
aas
iret
scas
into
out
sbb
icebp
repz
push
std
pushf
icebp
pop
popa
sbb
pop
push
daa
nop
dec
mov
push
push
sub
xor
pop
dec
stc
gs
push
cli
jmp
cwtl
and
imul
adc
lods
adcl
lahf
clc
sub
dec
xor
aam
fs
inc
push
xor
test
inc
mov
sbb
cmp
and
js
icebp
fidivl
dec
aam
sahf
dec
add
paddw
scas
mov
orb
mov
sbb
inc
popa
in
adc
mov
iret
xchg
xchg
push
fstpl
mov
mov
aad
sub
repz
daa
enter
sti
cmpsb
in
out
jbe
and
cmp
cmp
xchg
arpl
add
rcr
inc
mov
jne
inc
sbb
jnp
cld
adc
outsl
movsb
adc
add
adc
jp
sbb
mov
add
rcrb
inc
std
inc
mov
pop
aaa
testl
pop
mov
xor
sbb
mov
and
popa
dec
xchg
add
mov
lods
adc
jp
sbb
imul
test
jmp
loopne
daa
scas
xor
inc
js
mov
test
sub
shll
push
loope
cmc
pop
leave
fisubrs
add
arpl
cmc
ljmp
pop
mov
outsb
push
and
fimull
adc
and
out
cld
xchg
jg
inc
mov
lock
push
push
cmpsb
jg
nop
test
push
lret
loope
imul
dec
mov
ss
inc
out
mov
mov
in
das
jmp
repz
xor
xchg
fs
add
and
add
loopne
cmc
aaa
jmp
push
mov
and
call
cli
pop
xchg
or
xchg
sub
test
dec
mov
cmp
sub
lea
js
cwtl
push
push
dec
arpl
fstp
insb
or
jmp
std
jne
and
test
dec
jg
popa
test
dec
mov
mov
jns
adc
jp
push
outsb
in
popf
in
lret
add
addr16
cmp
dec
lahf
addl
sub
xor
shrl
sub
cmp
shlb
icebp
aam
sub
fs
in
pop
mov
negb
jmp
fs
out
jnp
lcall
imul
jbe
cs
inc
test
mov
jle
adc
imul
xor
movsl
dec
mov
dec
or
xchg
and
pop
out
lods
mov
iret
aad
pop
mov
ja
test
in
mov
ja
mov
mov
jmp
adc
es
cld
addr16
mov
je
rep
std
mov
test
ljmp
popl
lds
or
jle
frstor
repz
inc
out
mov
nop
ret
int
jmp
sub
push
add
jo
je
testl
shll
test
and
icebp
inc
dec
aaa
mov
aad
in
dec
mov
in
ss
xchg
sub
jno
lods
icebp
dec
out
cwtl
adc
lret
ds
inc
cmp
ja
ret
and
sbb
jae
lahf
sbb
cmp
and
mov
mov
addl
lds
mov
imul
pop
sahf
add
or
je
push
push
pop
ficoms
or
add
lock
std
jo
dec
aaa
cmp
filds
cmc
movsl
xchg
lock
loope
add
repz
cmp
shl
add
outsb
bound
icebp
repz
repnz
jg
jae
iret
repnz
icebp
mov
jl
sbb
fdivl
divl
and
mov
decb
addr16
add
sti
push
and
cmp
lahf
pop
inc
push
xchg
in
aad
and
dec
and
adcl
ds
fmull
xchg
push
addr16
fs
mov
mov
push
mov
pushf
jns
or
jge
outsl
jne
xor
fnstcw
mov
cmp
jp
fs
pushf
loope
jns
ljmp
mov
ljmp
fs
fstpl
or
les
cmpsl
ds
push
and
subb
dec
ljmp
dec
cmpsb
dec
in
shrl
fmull
lock
mov
cmpsl
mov
adc
fisubl
outsl
enter
dec
popf
xor
dec
sbb
test
sub
xchg
dec
mov
into
jg
cld
cmp
sti
mov
sub
sti
lret
adc
or
sbb
inc
stc
in
xor
loop
sub
dec
sbb
cmp
aad
popf
out
adc
push
mov
lahf
jg
cli
ret
iret
push
mov
fidivl
mov
jle
push
inc
lahf
daa
ror
or
enter
pop
sbb
leave
inc
push
mov
pop
xchg
and
shl
cmp
inc
mov
loop
icebp
leave
mov
aas
sbb
mov
cld
jecxz
sub
inc
cmp
mov
xor
pushf
mov
and
aaa
pop
cmc
xor
add
andb
insl
lret
and
mov
cld
test
lods
cmpsb
mov
movsl
cmp
or
xor
mov
fadd
and
negb
aas
xchg
hlt
in
test
stos
mov
mov
loopne
cmp
inc
xchg
jae
jmp
loopne
or
add
push
pop
iret
popa
popf
in
stc
pushf
lahf
cwtl
cli
push
aaa
hlt
js
dec
out
fcmove
pop
pop
xor
idiv
daa
mov
test
push
cltd
pushf
in
lds
adc
xchg
shlb
xor
std
test
test
push
xchg
and
cmp
mov
sub
xlat
add
fwait
add
in
sbb
bnd
int
cmp
or
inc
in
push
lret
inc
mov
cwtl
and
cld
scas
jbe
enter
jbe
add
jp
and
and
mov
xchg
push
jne
in
pop
test
popa
sbb
mov
lods
dec
xor
pop
imul
fsts
sub
shrb
mov
pushf
enter
out
cld
daa
or
mov
push
decl
add
out
mov
vpminsb
movsb
mov
pop
daa
fmull
mov
cltd
aas
ljmp
iret
lods
in
push
scas
dec
jbe
out
pop
rcll
dec
and
add
imul
dec
xchg
add
stos
fs
out
adc
push
out
and
xor
mov
sub
and
repnz
ret
mov
add
daa
cmpb
jp
fmul
je
fisubrl
push
adc
addb
int
or
jecxz
dec
push
or
jle
int
mov
push
mov
outsl
outsl
xor
lock
hlt
mov
xchg
xchg
fs
xchg
int3
int3
or
push
repz
fcompl
xor
jbe
inc
mov
inc
icebp
lret
andl
or
dec
loope
mov
testb
push
shrl
cld
pop
push
ss
mov
cmp
loop
lock
int3
dec
mov
movsb
pop
hlt
ljmp
sti
xchg
cli
aaa
std
lock
mov
fsubs
sbb
cmpsl
xchg
cmp
inc
repz
jmp
loopne
scas
loope
xchg
popa
push
out
cmpsb
iret
and
xchg
jbe
pop
add
xchg
xchg
rclb
xchg
jmp
gs
xor
stos
cs
call
in
inc
jmp
jl
je
add
fdivrs
inc
sub
push
pop
mov
sbb
cmp
push
push
aas
ss
and
xchg
je
mov
adc
push
pop
or
and
in
sub
xchg
hlt
add
inc
shld
inc
dec
fldenv
rcl
arpl
jb
les
jg
adc
xchg
xor
push
dec
jp
xchg
testb
pop
fwait
cli
movb
imul
je
xlat
js
in
push
insl
lods
loop
jecxz
mov
mov
ss
cli
adc
or
add
dec
push
lret
xor
push
sub
adcl
in
xor
push
clc
mov
xor
sbb
je
push
adc
push
mov
outsb
add
fidivrl
outsb
pop
out
stos
lret
dec
inc
js
push
ja
mov
cmpsb
lea
mov
push
leave
push
cld
aaa
repz
mov
scas
loopne
jae
mov
inc
cltd
inc
lea
sub
mov
aam
repnz
fisubs
out
call
adc
pop
push
aaa
sbb
jbe
dec
test
push
ljmp
sahf
in
xor
xor
sub
frstor
xchg
dec
xor
adc
out
bound
movsb
jnp
mov
mov
mov
addb
or
jle
push
fbstp
pushf
dec
xor
rcl
push
xor
aaa
sub
les
adc
push
shr
sti
xchg
sarb
jg
loop
sub
push
push
jae
xchg
or
xor
jle
xlat
add
sub
adc
test
shlb
addr16
fisubl
inc
adc
push
outsl
sbb
out
imul
sbb
aam
mov
jno
sbb
mov
sahf
add
adc
dec
loopne
aam
xchg
mov
icebp
sbb
or
test
std
icebp
sbb
jae
imul
push
stos
pop
pop
inc
les
cmc
fwait
insb
sbb
push
out
es
sbb
int
bound
sub
or
jge
inc
shrb
rcll
cmp
dec
sbb
mov
ret
pop
xchg
mov
popf
xchg
clc
xchg
clc
fstpt
mov
call
jle
sub
mov
mov
sarb
and
or
mov
adc
gs
xlat
clc
rcl
jecxz
pusha
je
cmpsl
mov
insb
add
push
mov
pusha
push
ljmp
ret
cwtl
jnp
ror
jp
dec
mov
cmp
pop
ds
sahf
shrl
lods
add
fucomi
icebp
inc
ds
sbb
mov
push
out
mov
mov
pushf
daa
cmp
inc
sub
aas
jae
int3
jno
inc
ficompl
outsl
add
adc
fwait
cli
and
outsb
xlat
lahf
out
mov
ja
xor
int
data16
pop
push
call
push
ja
push
out
inc
adc
rorl
pop
movsb
and
test
mov
mov
stos
ja
hlt
fcoms
push
mov
or
sti
orl
xchg
mul
test
pop
inc
ljmp
mov
out
mov
add
and
pop
scas
and
jno
lcall
lcall
fsts
push
sahf
xor
dec
or
push
xor
inc
movsl
pushf
adc
popa
andl
sbb
das
insb
and
sbb
push
mov
mov
mov
mov
mov
stc
adc
cmp
aas
cmc
dec
pop
dec
loope
addr16
or
test
sbb
mov
fwait
cltd
mov
loop
repnz
call
in
insb
pop
aad
mov
out
mov
dec
pop
incl
or
in
jge
push
fstpt
mov
inc
imul
insl
inc
hlt
loopne
or
sbb
ffreep
rclb
ficoms
cmpsb
insl
pop
xchg
shll
push
xor
jg
cs
in
jp
lds
fcoml
ret
cli
add
push
push
cmc
rol
stos
jno
push
jl
xchg
nop
pop
add
fwait
jg
sbb
mov
inc
xchg
insb
jo
and
cmp
lock
pop
pop
sahf
xor
lea
sbb
sub
jp
loop
repnz
dec
in
pop
cmp
mov
jle
mov
test
outsb
cmpl
popa
outsb
mov
xor
mov
cmc
dec
fcomp
mov
adc
test
mov
add
scas
fsts
mov
pop
mov
pop
ficoms
inc
sahf
cmpsl
outsb
and
loopne
insb
mov
imul
cmc
pushl
stos
fcomps
in
mov
out
in
pushf
aam
data16
jp
cmp
int
push
std
orl
mov
icebp
jbe
cltd
pushf
xchg
inc
loope
ficomps
shrb
stos
fcoms
pop
add
pop
and
pop
insl
mov
cwtl
outsb
rol
arpl
loope
decb
add
lret
clc
cld
inc
xchg
pop
jnp
dec
enter
jae
pusha
cmp
in
mov
loope
imul
adc
inc
std
imul
xor
xchg
push
insb
movsb
outsb
dec
inc
mov
xchg
add
and
mov
les
add
cmpsb
add
mov
lock
insl
xorb
xchg
push
jmp
xchg
mov
lcall
rorl
js
and
lods
add
iret
ret
sarb
test
xlat
sub
sbb
gs
cmp
cmpb
sbb
cmp
in
cmp
in
aas
bound
arpl
push
mov
scas
push
stos
into
fsub
mov
sbb
jle
push
inc
add
jo
shrl
or
gs
pop
bound
lahf
arpl
cltd
jnp
dec
test
out
daa
inc
mov
push
aad
mov
test
pushf
push
push
mov
xor
movb
iret
les
fnsave
rdmsr
cmp
mov
test
insl
xchg
lock
and
jle
mov
out
icebp
stos
std
pop
jb
mov
pushw
jnp
iret
add
adc
insl
pop
push
cwtl
xor
pop
test
xchg
imul
cwtl
outsl
je
insb
enter
jmp
jbe
xchg
jmp
popa
mov
add
cs
jmp
cmp
leave
jb
push
cwtl
jge
test
repz
fisubrl
xchg
cld
sbb
jno
cmp
or
or
mov
popf
mov
xchg
and
ljmp
jnp
sub
divl
mov
fsin
movsl
pop
push
cmpl
mov
aas
mov
sbb
cld
imul
adc
adc
jne
mov
lcall
jnp
sbb
mov
pop
lock
sahf
xor
sub
cmp
les
dec
pop
cltd
pop
and
push
cld
jb
push
mov
jo
shlb
push
das
and
adc
jecxz
and
clc
push
xchg
and
cmc
arpl
lcall
xchg
test
mov
xchg
ljmp
pop
mov
adc
jge
orb
cmpsl
scas
mov
shr
and
adc
mov
lods
fs
out
mov
shrl
pop
int3
lret
xor
ja
and
dec
mov
add
push
and
dec
outsb
sub
cld
out
xchg
insl
stos
pushf
sbb
or
push
rcl
out
lret
lret
icebp
js
jnp
push
and
mov
test
mov
jp
call
repz
shll
cmp
xchg
sarb
sub
movsb
xchg
fcoms
shll
pop
jmp
sbb
lds
push
test
dec
cwtl
mov
das
pop
adc
xor
push
cmp
arpl
push
cmpsl
sub
pop
jae
cmc
out
sbb
inc
jl
push
xor
rolb
push
inc
outsb
xor
jb
aas
out
aas
filds
pop
sub
divl
lret
in
push
fsubrs
xor
hlt
dec
pop
dec
pop
in
insl
push
add
stos
sub
es
insb
dec
aas
sub
iret
push
popf
loop
stc
xorl
jg
xor
pop
xor
scas
mov
jmp
inc
jae
movsb
sub
cmp
cmovae
incl
mov
sub
pop
addr16
dec
push
push
dec
enter
testb
xorl
cmpsb
lods
fnstenv
outsl
cmovl
les
hlt
mov
aas
imul
xor
jmp
jmp
add
cld
je
pop
dec
add
imul
mov
dec
dec
jl
roll
adc
push
add
mov
outsl
icebp
out
adc
xor
stc
jo
scas
insl
add
cltd
mov
in
lcall
rcrl
sbb
ds
out
pop
mov
and
or
xchg
xor
movsl
call
lea
shrl
int3
add
xchg
add
mov
cwtl
mov
pop
clc
mov
mov
mov
lock
cmp
sbb
mov
frstor
decb
das
lods
loope
fdivrs
add
adcb
in
movsb
inc
cmp
cld
mov
arpl
dec
call
out
inc
in
ret
mov
dec
push
popf
and
jo
xor
pop
add
add
sub
ljmp
shl
loope
nop
out
fsincos
add
adc
adc
inc
adc
cmp
or
jmp
lahf
into
filds
push
clc
out
mov
or
mov
test
lods
lds
add
popf
pop
scas
xchg
bound
push
and
adcb
daa
xchg
fldt
adc
pop
pushf
and
mov
adc
mov
mov
pop
push
jg
xchg
mull
push
xchg
pushf
xchg
js
xchg
jno
aam
mov
push
sbb
add
mov
scas
push
stc
popa
push
ret
jecxz
mov
mov
jg
push
dec
or
cmpsb
inc
and
dec
cmpsb
dec
push
shrl
ret
into
add
lcall
push
inc
jo
scas
popf
bound
popa
jecxz
mov
outsl
sahf
or
mov
scas
xchg
fcomip
xor
mov
dec
mov
loope
add
ror
mov
out
loopne
jne
insl
lock
lret
mov
jp
les
ss
pop
mov
daa
std
xor
mov
in
call
sbb
mov
leave
adc
inc
popf
pop
jmp
mov
and
sbb
shlb
inc
in
es
aad
mov
cmp
dec
jb
scas
push
nop
shll
repnz
out
jne
jg
mov
xor
decl
sbb
test
jg
mov
mov
mov
fdivrp
cmpsb
mull
test
xchg
mov
sbb
or
fisttpl
test
add
mov
je
adc
mov
xchg
pop
cmp
imul
sbb
add
mov
bound
rorb
mov
fidivl
push
mov
jle
fwait
push
out
lods
ljmp
outsb
inc
in
lods
xchg
jl
mov
pop
ds
cli
cltd
out
jne
sbb
pop
lock
xchg
cs
jle
dec
jnp
mov
mov
movsb
test
fidivrs
clc
jg
mov
insb
idiv
enter
nop
push
jae
fsubl
rorl
and
mov
pop
jmp
loope
fcoms
in
adc
mov
rcl
add
mov
sahf
repnz
lcall
test
xchg
gs
sub
in
push
mov
push
push
jb
push
add
inc
dec
in
mov
outsl
sbb
into
mov
cmpsb
in
push
pop
test
insl
jge
loopne
inc
enter
mov
outsl
push
add
sbb
bound
das
sbb
dec
add
sub
inc
xor
sub
xchg
pusha
mov
gs
sar
mov
sbb
mov
xlat
div
fstps
push
mov
mov
pop
mov
push
jns
cmc
sub
mov
mov
loop
cmc
mov
popf
dec
out
test
jnp
enter
sub
sbb
xor
adc
sar
imul
mov
xor
lds
sbb
sbb
test
stos
pop
xor
in
jns
jle
or
call
sub
jno
add
icebp
fs
repnz
mov
shr
das
cltd
loopne
pushf
out
clc
pop
fiadds
test
movsl
jmp
shr
in
popf
mov
add
or
jge
ret
fwait
or
roll
mov
fdivrs
pop
and
test
lea
xchg
push
in
dec
push
xchg
xchg
dec
loope
enter
mov
mov
xlat
icebp
int
sbb
cmp
cmpsl
repz
icebp
das
lret
inc
mov
or
loopne
mov
aam
add
and
lock
shlb
es
lock
mov
arpl
insb
push
jg
jns
xor
jecxz
mov
pop
jmp
inc
in
aad
inc
cltd
and
dec
jno
push
mov
pop
or
and
xorl
inc
scas
mov
mov
std
rclb
xchg
push
sbb
mov
ffree
dec
jae
xlat
ljmp
addl
ret
out
adc
sub
add
fdivp
push
or
mov
and
popa
shlb
jne
add
inc
data16
hlt
adc
mov
and
inc
jnp
or
push
push
das
pop
xlat
dec
mov
movsl
lock
cli
inc
cmp
xchg
and
icebp
mov
sbb
mov
cmp
lods
test
xchg
xchg
lret
ds
xlat
mov
mov
jnp
sub
cwtl
roll
out
adc
ljmp
add
cmp
or
jg
add
sub
fwait
xlat
xchg
pop
imul
pop
mov
pushf
outsl
fwait
jnp
out
andl
add
cmp
inc
push
mov
repnz
fmulp
pop
inc
icebp
nop
aad
push
mov
push
mov
mov
sub
sbb
aas
and
sub
fcompl
inc
sub
cmp
movsb
sub
xchg
enter
cs
mov
scas
jno
gs
jne
in
movsl
int
enter
call
sub
push
loop
or
repz
fildl
pop
lods
test
xor
mov
ret
sbb
hlt
push
mov
mov
addr16
in
lret
sub
in
sub
jb
and
pop
or
fstpl
jmp
mov
add
jl
jnp
cmp
shl
dec
addr16
push
xor
and
lods
xlat
dec
js
xor
mov
and
add
push
and
mov
or
add
gs
fst
lret
push
dec
sbb
jo
shll
enter
mov
mov
xor
add
enter
out
adc
add
jae
dec
cmp
mov
dec
outsb
xchg
cmp
mov
repz
fidivrl
out
in
push
jecxz
lret
stc
mov
daa
or
cs
cmp
add
inc
jg
push
in
mov
or
xlat
ror
sub
nop
adc
cld
daa
adc
bound
js
sbbl
push
or
lods
push
adc
ljmp
and
pop
fstl
icebp
mov
xor
inc
stc
add
aad
mov
cmpsl
xchg
scas
lea
or
jae
iret
mov
out
jo
push
adc
xor
int3
add
mov
xor
sar
xor
xor
cmp
test
scas
sbb
push
cmpsl
cmp
mov
xchg
lcall
pop
inc
xor
jae
incb
push
lock
sub
xchg
xlat
int3
clc
lret
or
test
test
sbb
xchg
pop
xlat
test
loope
fwait
aad
enter
cmpsl
pushf
hlt
and
int
dec
dec
lahf
gs
or
fsubrl
pop
movsb
xlat
leave
pop
push
push
inc
mov
push
js
aas
ja
xor
and
inc
in
sub
mul
mov
outsb
adc
add
iret
adc
jp
cmp
fsubr
repnz
push
fldt
rclb
test
dec
dec
mov
inc
insb
sub
pop
inc
out
mov
fwait
cwtl
sti
or
jnp
mov
push
test
je
xor
jne
xlat
mov
iret
addb
sbb
testl
stc
push
push
push
loop
adc
add
lea
mov
xor
fnstsw
xchg
ljmp
mov
xchg
push
dec
popf
test
xor
or
jp
dec
popf
lea
test
mov
div
xchg
sub
shll
test
mov
enter
mov
out
inc
push
popf
xchg
adc
xor
xor
mov
testl
mov
sbbb
sahf
loop
aam
jnp
imul
pushf
out
dec
lcall
mov
and
cmp
test
stos
push
loopne
cmpsb
jb
imul
and
adc
inc
and
outsb
lods
and
pop
test
jns
nop
ja
mov
cmp
push
jbe
addr16
cwtl
rolb
and
int3
scas
jae
jl
xchg
rolb
mov
cmp
arpl
aam
in
scas
iret
mov
adcb
dec
les
mov
je
in
jp
popa
xchg
into
adc
xorl
dec
push
sub
test
sarb
out
jb
xchg
adc
xchg
push
push
popf
sub
jne
aaa
test
mov
iret
fisubrl
pop
xor
mov
jb
push
mov
das
adc
into
sub
mov
mov
ds
push
push
lods
in
sbb
pushf
jmp
mov
push
push
in
in
in
imul
sub
mov
xchg
stos
mov
xor
jno
fisubs
sub
dec
ror
rorl
ja
adc
rcr
imulb
xchg
mov
test
or
mov
and
aas
xchg
adc
fnstenv
cmc
sbb
mov
loope
in
and
or
push
in
mulb
inc
fwait
pushf
movsb
mov
cs
jle
jmp
aad
push
mov
loope
leave
out
or
mov
lods
loope
fs
sub
sbb
dec
sub
arpl
icebp
inc
aas
or
push
nop
cmp
sahf
mov
push
or
push
in
add
dec
mov
shr
fsts
and
mov
fstps
push
mov
mov
lcall
aas
adcl
mov
lsl
cvttps2pi
imul
or
hlt
jns
push
pop
cmp
push
push
or
adc
movsl
jmp
and
push
loop
xchg
mov
pop
out
and
push
mov
ss
out
and
loop
xchg
lret
nop
outsl
imul
push
jp
sbb
dec
mov
jmp
sbb
push
sub
push
pop
loopne
sub
in
mov
jo
or
mov
inc
mov
mov
mov
mov
pop
adc
add
mov
mov
loopne
sub
add
xor
mov
testl
and
push
sub
xchg
test
cmp
lret
out
stos
movsb
mov
shlb
iret
jb
mov
outsl
xor
stos
scas
clc
pop
daa
dec
test
outsl
mov
sub
ret
clc
push
mov
sub
jbe
fisttpl
mov
int
pop
jbe
jb
add
xor
cld
xorb
xor
sub
ret
push
jmp
pop
mov
loopne
mov
mov
add
adc
adc
aad
or
dec
movsl
popf
lds
sbb
xchg
sti
jo
loopne
push
push
clc
pop
adc
inc
fdecstp
cwtl
hlt
jns
fwait
ret
mov
sbb
mov
mov
xchg
mov
jno
add
out
addr16
sbb
cltd
inc
insl
xor
aam
inc
ds
mov
xor
and
cmp
incl
jno
into
test
jo
imul
xchg
in
xchg
sbb
jne
push
mov
pop
in
subb
shl
fs
stos
fwait
pop
scas
pop
fmuls
aas
addr16
dec
dec
movb
sbb
sbb
fcoml
push
cld
sarl
in
add
mov
and
push
dec
imul
fdivrl
loopne
jge,pn
inc
es
jle
movsl
sbb
rcrl
push
repnz
fs
leave
and
mov
xchg
js
push
ja
test
inc
xor
in
pop
adc
xchg
xchg
and
jl
mov
bound
sub
inc
cli
imul
mov
mov
push
imul
push
scas
mov
outsl
xchg
cmp
out
xchg
pop
in
mov
les
gs
ss
dec
and
push
sbb
cmpsl
mov
lock
mov
nop
notl
xchg
jno
push
hlt
pop
aas
or
dec
movsb
les
dec
adc
insl
pop
cmpsl
and
nop
and
setns
jg
inc
test
and
lret
jne
int3
cwtl
arpl
cmc
and
pop
loopne
pop
scas
pop
mov
sub
daa
cmp
jbe
stos
dec
int3
jle
or
out
inc
insl
add
out
fs
cmpsl
cltd
mov
out
lret
pop
fdivs
mov
lods
loopne
xor
jbe
out
clc
xor
xor
pop
test
stc
add
jge
lret
icebp
xor
xchg
divps
jge
pop
popa
lods
imul
inc
inc
test
int3
lea
lods
push
arpl
mov
lods
jo
fstpl
push
ficompl
fcompl
test
adc
imul
fwait
inc
dec
iret
mov
enter
adc
rcll
cmp
lret
push
mov
push
or
xchg
imul
sub
aad
add
imul
rcr
ja
popf
and
jge
push
or
aad
pop
sbb
mov
jecxz
mov
imul
push
xor
aam
mov
jle
lret
mov
insb
cmp
sarl
imul
addr16
push
lea
xor
add
pop
adc
sub
jmp
xchg
lahf
sarl
mov
and
adc
rcrl
arpl
or
cli
jns
add
test
jmp
jecxz
add
rcll
loopne
divl
orl
shll
dec
jge
ficoms
lcall
and
call
push
repnz
push
inc
lock
xor
lcall
sub
mov
ror
push
fsubrs
cmc
xor
loop
arpl
sub
jle
or
lret
loopne
push
xchg
xor
add
or
insl
fwait
lds
fnstsw
clc
shl
aas
outsl
fdiv
data16
out
test
add
iret
cltd
shll
xlat
rolb
jle
dec
outsl
daa
shll
lods
xchg
sub
dec
and
xchg
xor
cmp
adc
scas
movsl
lea
enter
inc
test
js
movsb
nop
repz
lods
imul
xor
cwtl
add
lods
dec
leave
out
mov
and
cld
dec
js
push
cs
aas
jbe
jp
inc
cmp
mull
inc
adcl
fdivrl
adc
cmpsb
cltd
xchg
mov
mov
xchg
rclb
mov
loope
sbb
mov
xchg
out
adc
les
jmp
add
sub
js
pop
xor
mov
xlat
jnp
fsubrl
mov
fdiv
add
nop
sbb
jecxz
jns
scas
jecxz
fsubs
movsl
bound
push
push
mov
mov
sub
out
or
and
push
int3
cmpsl
test
fcomps
pop
and
inc
mov
sti
pusha
pop
mov
movsb
xchg
mov
or
dec
adc
adc
or
outsl
xchg
movsl
ds
cmp
add
lock
cmpsl
or
int
push
sbb
imul
arpl
lret
sahf
cmp
ss
add
cli
inc
add
jmp
rcll
pop
repz
cmp
in
pop
aaa
push
adc
cs
sti
xor
sub
push
xchg
dec
sahf
push
loope
call
xor
mov
inc
pop
jmp
movhlps
mov
dec
push
jg
gs
adc
cmpsl
jl
jne
dec
sti
mov
pop
sbbb
add
aad
mov
pop
rorl
lods
lret
in
fbstp
imul
jae
inc
rcl
bound
stos
xor
xorb
lea
push
add
jecxz
sub
dec
xor
and
lea
cmpsb
inc
pop
repnz
shll
pop
pop
jg
out
rcr
aad
sub
and
lods
push
out
mov
outsl
xchg
iret
jg
fidivs
jmp
push
insl
xchg
pop
in
lret
test
scas
sbbl
out
pop
aad
icebp
clc
cmp
pop
xchg
or
mov
mov
jp
ljmp
popa
out
jp
push
in
xor
push
sub
dec
dec
inc
andb
mov
mov
jge
sub
repz
mov
sbb
add
push
xor
jno
inc
repnz
mov
imul
cltd
push
xchg
jle
inc
dec
jno
mov
in
push
test
jmp
outsb
sub
in
in
dec
push
test
dec
xor
mov
or
repnz
cmpsl
movsl
mov
or
imul
sub
push
dec
pop
lahf
loope
shll
sarl
xchg
cmp
hlt
inc
popa
fisubs
andb
rclb
cmpsb
jnp
es
pop
adc
pop
daa
stos
fcomps
or
jmp
mov
inc
repnz
ret
xor
ficompl
lret
xchg
cld
loope
and
pop
aaa
cli
dec
or
div
lahf
dec
mov
mov
mov
dec
clc
das
data16
hlt
xlat
iret
mov
or
mov
popf
popf
adc
aas
jmp
mov
call
gs
mov
cmpsb
cmp
stos
shll
mov
xchg
fnstenv
lahf
outsl
fldl
in
adc
dec
xchg
leave
nop
dec
mov
mov
mov
loope
xlat
test
push
jbe
ret
rol
cmp
sub
push
int3
adc
push
pop
fistl
xchg
mov
cmc
pop
xchg
js
jno
pop
lods
jl
aam
jno
push
insb
rorb
fcmovu
dec
ss
mov
inc
jecxz
push
fdivrs
cltd
xor
rcr
xor
xchg
mov
adc
in
inc
xchg
xor
leave
cs
mov
js
and
adc
testb
push
out
cmpl
fnstcw
outsl
pusha
inc
adc
dec
dec
lods
stos
add
imul
insl
cmp
push
or
or
xlat
jmp
push
popf
xorl
cs
dec
test
xor
or
cmc
fimuls
mov
aad
jae
fwait
pop
dec
shll
mov
test
and
test
imull
jo
aam
addr16
cmp
lds
icebp
dec
negl
mov
jne
sub
mov
insl
jo
leave
dec
cmpsb
or
push
jmp
iret
push
add
inc
dec
add
mov
push
pop
and
jecxz,pn
pop
xor
jle
xor
cmp
movsl
cmp
cmp
sub
add
les
add
ljmp
pmaddwd
mov
cmp
out
cmp
sbb
mov
push
mov
ljmp
cmpsb
out
mov
add
fimuls
rcrl
pcmpeqb
movsb
and
jmp
mov
dec
stos
xchg
mov
xchg
aas
pop
push
mov
sarl
stc
loop
jp
aaa
mov
call
pop
mov
sub
xchg
divb
push
cmp
xor
ret
ja
and
mov
sar
mov
iret
movsl
lea
clc
inc
push
movsb
pop
pushf
negl
jmp
dec
xor
pop
sbb
or
pop
or
je
sub
pop
inc
ret
lds
adc
push
jne
iret
xor
cmc
sub
pop
loopne
lret
pushf
mov
mov
loope
push
icebp
xchg
daa
shll
imul
pop
pop
push
repz
jb
inc
jnp
shlb
jge
inc
js
repz
imul
std
pop
mov
mov
imul
outsl
out
icebp
es
pop
push
das
pushf
repnz
iret
sbb
loope
jnp
dec
aam
and
mov
push
es
sub
mov
mov
aaa
jecxz
pop
sub
jp
fcmovnu
pop
mov
shlb
lods
shll
jle
lret
xchg
loope
cld
test
imul
sbb
cmpsl
add
cmp
sub
push
xlat
mov
sub
and
mov
js
xor
mov
mov
cli
mov
cmc
xchg
out
mov
mov
push
inc
pusha
rcrl
inc
lcall
pop
inc
push
out
dec
xchg
ret
xchg
test
or
mov
push
dec
fiadds
pop
cmpsb
aam
push
cmc
outsb
loopne
ja
pop
pop
cmp
sub
mov
xlat
dec
cmp
test
adc
dec
sub
dec
dec
xlat
shlb
cmp
pop
rolb
add
rcl
inc
imul
push
xor
jno
test
test
test
pushf
xor
fidivs
fnsave
je
stos
sbb
adc
jnp
roll
xor
and
add
mov
mov
dec
fsubl
cmc
adc
xchg
adc
addr16
sbb
aas
pushf
in
push
fimuls
mov
inc
pop
bnd
test
mov
mov
cmp
loop
fsts
sbb
aad
out
mov
pop
pop
popf
ljmp
mov
int3
xorb
cmp
out
loop
xor
pushf
jnp
pop
mov
xchg
int3
fiadds
insb
out
aad
mov
repz
xchg
pop
test
mov
push
fndisi(8087
add
mov
inc
mov
fisttpll
inc
mov
imul
lret
xchg
sbb
push
jne
push
sti
jle
inc
std
adc
push
out
lret
sbb
mov
mov
fadds
cmp
inc
jmp
inc
push
ds
xchg
mov
jmp
pop
pop
xchg
cmp
add
xchg
adc
sub
push
xchg
pop
mov
dec
icebp
add
sbb
pop
ljmp
pop
test
clc
mov
enter
mov
sub
cwtl
cld
add
mov
cli
int
in
int3
push
jnp
jb
sub
dec
lock
inc
sbb
jno
js
cmp
out
clc
xchg
sub
fisttpll
sbb
ljmp
adc
mov
fisttpl
imul
mov
ret
mov
mov
jne
into
cmc
cli
adc
test
bnd
ret
adc
mov
ja
pushf
inc
dec
add
sub
sbbl
aaa
jl
sbb
and
pop
ret
xor
cmpsb
push
dec
inc
sub
out
xor
lods
test
xor
mov
or
and
xchg
mov
mov
imulb
xor
cmp
add
push
pop
loopne
jne
mov
mov
fmul
add
and
dec
je
out
in
push
hlt
or
mov
fmuls
test
scas
divb
in
in
fcmovnbe
cmp
cwtl
lret
test
jp
movsl
jae
cmp
lea
ror
cmpsl
ffree
sub
stos
ljmp
or
and
xor
pop
adc
inc
loop
cmp
js
pop
lea
mov
sbb
fs
pop
dec
jge
ss
dec
bound
jmp
icebp
aas
push
pop
mov
push
shll
in
xchg
mov
jnp
xchg
out
push
shll
aam
push
xor
sarl
rcll
pushf
pop
add
adc
push
xor
shll
cmc
jns,pt
ss
mov
and
xlat
test
or
rclb
lret
dec
imul
mov
sbb
out
adc
inc
subl
into
lcall
mov
dec
enter
rcll
inc
lcall
xor
ja
hlt
add
jb
mov
movsl
xchg
clc
into
in
mov
cmp
dec
lahf
jg
cmp
imul
adc
sarb
push
mov
dec
push
daa
sbb
add
mov
inc
inc
int
dec
xor
mov
jo
inc
pop
mov
sahf
cmp
push
test
stos
enter
xchg
sbb
and
outsb
jns
fs
test
add
mov
arpl
pusha
clc
and
add
rep
xchg
jo
sbb
dec
xchg
push
bound
mov
sub
jne
andb
hlt
push
xchg
push
add
fidivrl
sub
jbe
pop
fidivrl
pop
pop
test
rcrb
stos
enter
int3
dec
cmpsl
lds
adc
cwtl
and
cmp
cmp
movsl
ret
jne
mov
test
sub
push
clc
es
xor
jp
out
add
adc
adc
sbb
pop
cli
jo
jns
push
and
scas
mov
xchg
ja
jge
rcll
add
pop
add
fs
int
cli
push
pop
jmp
inc
insl
fs
inc
mov
mov
imul
jp
cs
test
fldcw
xchg
inc
pop
insl
sub
mov
insb
or
dec
lret
jp
out
jnp
std
push
clc
jbe
imul
jne
pop
in
jns
enter
in
dec
xor
jp
mov
adcb
fs
mov
fidivl
dec
push
add
std
fst
pop
mov
std
add
lret
xchg
pop
adc
jnp
sbb
inc
aam
daa
popa
es
enter
xchg
insl
sbbl
mov
aam
fisubrs
xchg
imul
sahf
stos
mov
jb
out
pop
loop,pn
repnz
push
dec
leave
xor
aam
sub
lods
daa
xor
xlat
sbb
mov
push
add
insl
inc
es
push
xchg
mov
rol
adcl
fsin
pushf
fcom
je
cli
cmp
xor
outsl
sub
sbb
or
cmp
leave
mov
jmp
push
addr16
ficomps
jnp,pt
dec
int3
les
fcompp
aas
sbb
test
loopne
rclb
insl
ss
sti
mov
out
cwtl
repz
mov
test
dec
xor
cmpsl
sti
jp
mov
fstps
jge
mov
pop
sbb
out
adc
dec
sub
pop
outsb
xchg
popf
inc
into
in
popf
inc
jns
sub
jp
push
jp
mov
out
mov
rclb
cltd
cli
lret
insb
adc
sbb
sub
sub
fsubp
jbe
sbb
andb
leave
aaa
inc
pop
cmp
cli
xchg
xchg
jnp
sub
rcr
mov
mov
cmpb
outsb
cmp
pop
mov
xor
jecxz
or
xor
mov
add
adc
mov
inc
fisttpll
test
add
inc
jg
icebp
fldenv
sbb
add
cltd
push
cwtl
pop
and
ds
adc
push
cmc
shlb
shl
movsl
and
cmp
loopne
sarl
nop
dec
push
int3
divl
ss
lcall
jns
test
shl
adc
rcrl
push
popf
adc
fsts
jo
mov
jno
jb
xor
fs
scas
push
in
cmp
fldt
in
xchg
stos
arpl
mov
rcrl
pusha
aas
mov
xor
out
imul
pop
jo
pop
mov
je
pop
push
mov
push
lock
outsl
imul
shl
push
sbb
in
imul
js
sbb
rol
repz
stos
ja
scas
iret
fnsave
aas
push
cmpsb
adc
xchg
cs
js
jl
xor
cmpb
div
fmull
add
xchg
add
lahf
jae
pushl
mov
jb
in
mov
rolb
jne
daa
or
mov
add
lock
or
push
cmp
or
scas
mov
nop
into
and
and
pop
jae
mov
mov
push
fwait
lret
loope
inc
cmp
sub
dec
daa
ret
scas
jmp
aam
jne
dec
mov
or
push
shl
inc
je
or
pop
dec
inc
outsb
pushf
xchg
cmp
cmp
std
iret
jae
cli
mov
ret
rcll
test
cmp
std
sub
andl
lahf
mov
pop
pop
cmp
cmpl
adc
or
mov
pop
cli
jge
sbb
sub
nop
out
mov
push
and
inc
ret
mov
popf
inc
sti
scas
and
aam
sbb
pop
aam
out
std
mov
orb
fsub
cmp
data16
scas
aam
les
fs
stc
xlat
mov
lods
jge
cmpsb
mov
fs
enter
pop
xchg
pusha
xchg
shr
sub
jo
fwait
push
int3
mulb
mov
mov
hlt
into
mov
aaa
iret
xchg
xbegin
ss
xchg
js
xor
je
adc
jo
jg
stc
subl
hlt
sub
in
out
jae
mov
xor
pop
lahf
mov
or
fbstp
ss
adc
shlb
mov
jp
xor
xchg
inc
add
dec
repnz
pop
clc
xchg
or
loope
mov
or
clc
in
dec
mov
mov
daa
jne
pop
mov
pop
pop
adc
cs
jl
cmpsb
jae
cli
fisubs
sahf
popf
xor
lcall
mov
pop
mov
lods
cltd
movsb
xchg
sbbl
fiaddl
cs
adc
sbb
mov
scas
lea
cmc
mov
out
mov
in
mov
pop
scas
sub
adc
push
jge
inc
fists
enter
lsl
sbb
mov
or
and
das
and
and
subl
xchg
xor
xor
xchg
sbb
out
lods
aam
sbbl
pop
cli
adc
cmpsb
cmp
mov
add
adc
or
retw
lcall
sbb
or
inc
sbb
cmp
fadds
icebp
inc
mov
adc
mov
filds
xchg
fwait
jecxz
in
mov
and
xchg
cmc
ss
aaa
sbb
fs
mov
aaa
push
xchg
sbb
test
add
adc
mov
jle
sbb
mov
push
mov
xor
mov
popf
mov
lods
push
ret
addl
fcmovnu
inc
push
mov
out
pop
std
insb
xchg
mov
mov
adc
sub
pop
or
nop
adcl
jl
leave
mov
sti
adcl
clc
rorl
shl
add
test
and
jne
sti
sbb
xlat
out
lea
outsb
mov
mov
cmp
xchg
mov
es
lods
dec
orb
xor
not
mov
fisttpl
iret
pop
inc
out
jl
fidivrl
iret
or
or
add
fnstcw
cmp
repnz
call
lods
adc
das
xchg
sti
push
adc
test
cltd
push
and
ljmp
jle
adc
aam
enter
add
inc
lahf
xchg
bound
popf
cmc
pop
fabs
sahf
sarb
pop
adc
xor
jae
addl
add
adc
or
cmpl
push
jg
xchg
and
inc
cmp
sbb
push
fists
pop
pusha
xchg
xchg
mov
enter
cmp
daa
mov
out
lcall
push
and
jge
pop
cli
mov
mov
mov
mov
xchg
aaa
pop
lds
lods
les
shlb
mov
rolb
mov
xchg
inc
sahf
push
lea
push
roll
inc
popa
adcb
cwtl
xchg
push
nop
stc
das
mov
into
sbb
adc
sub
xchg
and
adc
js
mov
stos
ret
ret
rol
mov
mov
sbb
js
pop
push
andl
lods
rclb
ror
scas
mov
popa
dec
sub
shlb
adc
test
frstor
xor
fcompl
jae
movsb
push
pop
pop
mov
lret
dec
push
mov
outsl
mov
stos
cmp
mov
out
pop
std
in
outsb
fisubrl
and
frstor
movsb
fistpll
mov
loope
stos
mov
aam
rorl
ja
dec
out
or
out
cmc
push
and
xchg
int
mov
int
push
jb
fiaddl
aad
and
ret
adc
pop
icebp
in
xchg
inc
cs
popf
pop
adc
sbb
int
xor
adc
ds
iret
mov
lods
jnp
mov
push
dec
loopne
cmpsl
push
repz
cli
jnp
aad
add
or
adc
inc
imul
push
dec
xchg
fstl
jg
cmp
pop
das
dec
add
out
push
jb
das
xchg
push
ljmp
roll
push
imul
push
in
xor
xorl
jl
add
pop
adc
push
in
inc
inc
pop
mov
cvtdq2ps
daa
fiadds
jne
jecxz
lea
mov
imul
push
insb
adc
pushf
mov
mov
dec
adc
jno
scas
mov
jne
push
pop
rcr
lcall
inc
gs
lds
cld
and
push
test
movb
add
dec
lods
push
imul
pop
orl
xchg
scas
es
xchg
movsl
add
sarl
out
fldcw
sar
mov
std
leave
mov
push
adc
or
fisttpl
mov
push
add
fdivl
das
sub
cmpl
in
sub
fdivl
mov
pop
mov
loopne
outsl
add
iret
pop
jnp
out
inc
fdivr
call
mov
leave
pop
jcxz
xchg
loope
lahf
lea
push
jge
mov
in
jp
add
sbb
inc
stos
xor
lret
mov
ljmp
cmc
call
shrb
mov
mov
dec
push
test
adc
in
inc
sub
pop
push
daa
addr16
dec
jb
cltd
aas
sbb
pop
cld
ss
int3
test
or
add
mov
stc
jae
hlt
mov
xor
cmc
lea
out
sub
stos
dec
jl
mov
call
ss
jbe
lahf
lods
cld
mov
dec
add
sub
loopne
xor
pop
mov
leave
in
lock
dec
aas
addr16
enter
sub
mov
out
test
push
pop
jo
or
ja
dec
sbb
push
out
orl
mov
in
fisubl
mov
mov
cs
shr
dec
push
add
mov
rorb
shll
mov
fnstsw
popa
pop
test
jg
and
jne
and
fcoml
inc
mov
iret
mov
inc
jle
adc
int3
adc
pushf
add
test
ljmp
sarl
bound
gs
hlt
jge
add
add
or
mov
cmpsb
out
xor
sub
sub
lcall
add
mov
dec
dec
dec
pop
movsb
test
xchg
mov
test
cld
loop
out
das
jge
sbb
jb
mov
pushf
out
mov
mov
std
xchg
sbb
leave
shll
loopne
adc
hlt
shll
push
lcall
fldcw
rcr
or
out
les
pop
dec
pushf
cmp
jge
mov
lret
or
rclb
test
mov
scas
hlt
cmp
mov
fists
xchg
outsl
sahf
mov
stc
push
out
xchg
xchg
out
jno
push
cmpsb
fmul
inc
sbb
xor
lcall
cltd
bound
cmp
lret
in
cmp
jl
jo
push
frstor
sbb
gs
iret
xchg
mov
jae
jecxz
enter
lcall
jecxz
daa
daa
test
and
mov
add
adc
mov
sbb
sub
aas
out
enter
lahf
add
int3
sar
push
lds
in
stos
or
xor
dec
movsb
sahf
sbb
push
shl
jno
push
pop
add
inc
call
jo
inc
enter
test
mov
push
xchg
sarl
insb
add
mov
out
fwait
pop
jae
cld
pop
cmp
lret
mov
ds
inc
dec
jbe
mov
mov
pextrw
imul
push
jge
sbb
xlat
outsb
cmp
xchg
data16
sti
shl
sbb
mov
push
dec
gs
lea
ret
cld
pop
cld
mov
inc
test
aad
enter
xchg
loopne
out
inc
adc
sti
shlb
fimuls
insb
je
cmpsl
sub
aaa
imul
or
repnz
ret
inc
bswap
popa
jecxz
insl
pop
pop
push
dec
push
mov
movsb
and
pop
mov
aad
dec
cmp
adc
test
insb
pop
cli
pop
sbb
sahf
icebp
mov
cmp
sub
dec
jl
lods
xchg
sub
adc
int3
pop
inc
incb
sbb
lcall
ja
mov
pop
dec
adc
mov
jno,pt
fwait
dec
adcb
leave
rolb
movsb
xor
inc
dec
ret
push
and
and
jnp
sbb
and
js
daa
lods
gs
jno
lahf
hlt
loop
xchg
xchg
popf
outsl
mov
andl
call
gs
mov
lret
dec
and
mov
lock
sub
or
mov
pop
mov
ss
pushf
push
pop
lea
ja
shl
sub
cmp
sbb
cmp
iret
movsb
clc
popfw
loopne
aaa
mull
lcall
or
jle
sub
mov
jmp
mov
sbb
call
movsl
xchg
inc
fs
adc
iret
popa
lock
ret
jb
clc
dec
xor
mov
pop
jns
cmpsb
dec
das
pop
jecxz
mov
sub
xlat
bound
lea
fisubrl
inc
add
in
cs
mov
std
jmp
jb
inc
ret
test
sahf
and
test
xchg
test
dec
prefetcht0
insb
mov
mov
push
pop
fldl
pop
adc
xor
pop
adc
sub
add
mov
cld
out
mov
inc
push
mov
and
xchg
jne
mov
insl
pop
push
rol
xlat
imul
pop
and
pusha
scas
jl
xor
imul
mov
sub
rolb
xchg
ja
xorl
das
cltd
mov
fimull
lcall
loop
xchg
and
fcoms
add
push
loop
les
rorb
popa
push
pop
push
iret
arpl
in
mov
mov
movsb
sti
or
in
push
leave
push
lret
mov
mov
cmp
jge
xchg
xor
rcr
pop
cltd
roll
add
push
xlat
mov
repnz
sub
jae
cltd
ret
cmc
mov
shr
leave
xchg
sbb
mov
data16
faddl
mov
pop
imulb
popa
and
mov
xor
pop
jl
lods
pop
mov
add
pop
jbe
jnp
add
loopne
es
mov
adc
data16
out
ret
fstpt
test
dec
shll
add
mov
nop
insb
insl
push
fsts
test
inc
aam
je
xor
fwait
push
jbe
jo
adc
mov
cmp
ds
loop
pop
xchg
mov
gs
lods
and
xchg
ds
xor
nop
das
or
les
cmp
aad
rcll
push
fdivs
adc
cltd
push
cmp
xor
loop
cmp
aam
dec
push
dec
mov
inc
pop
push
es
iret
shlb
adc
xchg
lcall
or
mov
and
push
les
mov
in
pop
cmp
es
fsubrs
sub
pushf
lahf
ds
inc
add
insl
icebp
insl
cmp
mov
jl
pop
jne
xchg
movsl
or
push
mov
bound
or
gs
jg
xor
jp
xchg
xor
gs
out
jno
dec
xor
or
sub
mov
push
pop
movsb
stos
les
cltd
daa
orb
shll
add
rcrl
sbb
pushf
lods
testl
pop
or
gs
jo
adc
push
pop
xchg
loopne
ss
pop
js
mov
mov
inc
stc
xchg
rorl
xlat
fmull
mov
popl
aam
test
mov
lret
xchg
fsubrl
xchg
push
js
xor
and
xor
pop
mov
shrb
scas
push
xchg
aas
fcoml
arpl
lret
xchg
sub
adc
sbb
xlat
fidivl
dec
sbb
push
lahf
cld
sbb
lds
sub
mov
repnz
sbb
int3
dec
stos
jmp
mov
mov
aam
cmp
pop
adc
movsl
add
mov
jns
xchg
lret
mov
adc
fstpl
ds
mov
mov
jno
sub
cs
repz
js
and
dec
lret
mov
sub
mov
test
and
or
and
mov
fstl
push
mov
out
lods
inc
add
filds
or
lds
mov
push
ja
lret
adc
dec
stos
jp
loopne
dec
test
popa
push
ja
test
sub
inc
arpl
mov
pop
xor
cmp
das
das
dec
daa
cmp
add
aaa
xchg
lods
test
sbb
mov
ljmp
loopne
das
pop
add
mov
add
in
mov
sbb
or
stc
mov
lock
push
rolb
xor
gs
outsb
ret
pop
sti
daa
fldenv
repz
fcomps
mov
sbb
adc
loopne
mov
or
inc
pop
inc
xchg
or
xchg
or
in
adc
jmp
xor
jne
inc
movsl
popf
and
sbb
adc
or
add
mov
jle
jae
test
jno
sbbb
pop
movsb
lret
int
clc
bound
dec
mov
push
aas
ficomps
test
out
inc
in
ficomps
test
sub
leave
xchg
inc
in
mov
mov
push
ret
data16
mov
xor
cwtl
das
sub
sbbb
fwait
adc
push
jecxz
push
add
push
sub
flds
mov
mov
cmp
mov
add
iret
icebp
fsubl
mov
clc
xchg
test
out
pop
jecxz
and
pop
pop
in
mov
loop
ljmp
inc
jecxz
sbb
js
push
push
xchg
stc
enter
xchg
jnp
xchg
or
mov
sbb
test
aad
movsb
mov
or
jbe
pop
outsb
adc
inc
insb
xor
push
push
imul
sbb
cwtl
test
mov
subl
push
mov
outsb
nop
orl
pop
sahf
cmp
add
shlb
jmp
iret
push
das
jns
orl
inc
mov
mov
xor
es
addr16
popa
pop
arpl
pop
inc
mov
mov
cmp
out
xor
imul
adc
sahf
bnd
fnstenv
cli
pop
jae
xchg
add
aaa
or
sbb
jbe
sbb
push
jae
jnp
arpl
daa
fsubrl
cltd
xchg
adc
cmp
out
xchg
cmp
mov
mov
inc
mov
dec
sbb
xor
ret
push
and
out
shlb
xchg
xchg
inc
clc
lds
lret
sbb
jg
leave
push
scas
pop
mov
mov
or
xor
push
in
add
das
pop
pop
in
mov
adc
cmp
xchg
add
and
jb
adc
sub
pop
rorb
jl
mov
int
or
and
sbb
mov
clc
mov
ja
psllq
out
loope
add
adc
mov
dec
lcall
dec
mov
xchg
inc
cs
decb
jnp
ljmp
aam
inc
dec
and
test
scas
xchg
jmp
leave
jl
inc
jg
xor
cmp
jmp
sbb
push
inc
out
int
mov
mov
push
cs
add
mov
fiaddl
cmp
daa
mov
clc
push
and
mov
incl
pop
cld
and
in
xor
popf
cmp
push
xor
mov
xchg
jo
je
pop
sbb
fnsave
mov
jg
add
pop
aad
gs
mov
or
clc
sub
and
push
inc
mov
loop
push
xchg
or
dec
push
mov
sub
xchg
xor
push
cmp
mov
in
rclb
pop
sub
sbb
cmp
mov
inc
in
pop
dec
pop
sub
push
ret
pop
inc
xor
mov
icebp
fldl
or
imulb
jl
mov
dec
xlat
in
enter
mov
mov
add
or
jno
push
mov
movsl
daa
int
push
adc
xor
adc
sbb
fnstenv
lods
mov
pushf
loope
and
sbb
call
jnp
clc
cmp
repnz
out
xor
jb
into
scas
jno
cmpsl
jp
test
add
lods
int
hlt
pusha
hlt
adc
mov
mov
xchg
pop
jmp
fstpt
pusha
arpl
inc
inc
nop
sbb
inc
imulb
sub
ret
pop
rorl
cmp
add
pushfw
xor
inc
aad
test
scas
mov
sbb
mov
mov
cmp
mov
jecxz
pusha
add
dec
sbb
out
or
push
scas
xor
mov
ret
in
mov
pop
cld
jnp
jmp
and
outsb
mov
and
pop
push
adc
inc
in
add
push
fiadds
in
xchg
int3
aad
mov
and
lcall
mov
xor
test
data16
fcoml
mov
aam
jae
in
and
add
or
pop
arpl
sub
es
sub
scas
push
mov
loop
cwtl
adc
push
outsl
out
in
mov
mov
push
mov
rolb
mov
mov
or
fbstp
mov
push
lods
lea
mov
fwait
xchg
fdivl
out
cwtl
sbb
jle
and
popa
lea
pop
rclb
aam
test
xchg
and
ss
data16
fs
or
jle
inc
mov
cmpsl
sub
xor
jge
shll
pusha
imul
mov
mov
aaa
andl
add
inc
xorb
inc
mov
mov
outsb
nop
xor
sub
ss
mov
add
mov
out
dec
xchg
in
inc
insl
loop
or
scas
enter
push
jns
push
cmpsl
sub
xor
or
or
and
mov
jp
mov
cmp
addl
add
cmpsl
sbb
xor
lea
comiss
stc
negb
xchg
hlt
aam
sub
mov
push
jo
dec
sbb
pop
es
cmc
sub
imul
test
pop
xchg
dec
push
test
and
add
add
push
inc
mov
imul
outsl
xchg
xchg
push
cmc
cmp
lods
rcrb
push
ja
js
jbe
addr16
fs
dec
inc
xchg
cmp
cmpsb
sub
mov
or
ret
clc
outsl
fs
dec
and
mov
gs
iret
xchg
repnz
out
xor
push
scas
rcll
dec
sub
push
data16
xchg
mov
mov
ret
add
sbb
mov
add
inc
inc
add
lods
cs
push
push
sub
jmp
push
cmpsb
int
cmp
push
or
pop
cmp
fbld
mov
loopne
nop
inc
je
cmpsb
repnz
sub
test
add
and
jae
mov
loop
xor
mov
cmc
in
js
pop
nop
repnz
dec
out
xor
mov
adc
cmp
cmc
pop
pop
pop
jge
ss
stos
aaa
dec
clc
into
push
pop
sub
inc
push
adc
mov
ljmp
pushf
mov
sub
rorb
xor
outsb
mov
clc
xchg
movsl
mov
roll
xchg
addr16
mov
sub
pusha
and
icebp
push
aaa
jg
pop
sbb
lods
lahf
iret
hlt
jb
xor
mov
aaa
adc
xlat
adc
out
xor
add
sub
jl
fidivl
call
add
mov
jb
in
inc
inc
lods
icebp
ds
out
or
mov
fsubrl
shll
mov
dec
movsl
notb
sbb
sbb
gs
les
rcrb
mov
clc
pusha
adc
push
sub
movsb
aaa
into
mov
iret
dec
inc
adc
add
sbb
push
mov
jb
test
rcrb
push
xor
jl
aaa
outsb
xchg
sbbl
cmp
or
adcl
or
or
ds
popf
push
sub
lds
stos
pop
jp
jmp
int
lcall
sbbb
xchg
sub
dec
test
das
fs
sbb
xchg
add
sub
add
push
push
in
mov
jno
lods
test
xor
mov
mov
push
xchg
aas
xor
pushw
cmp
addl
xor
ja
loop
fbstp
mov
pop
cmp
jne
aas
sbb
and
std
adc
cmc
lods
lret
xchg
sub
sbb
ljmp
mov
nop
mov
pop
jnp
ljmp
leave
stos
xchg
js
das
sahf
addb
dec
outsl
xchg
push
test
mov
sub
xor
sub
pop
jo
cwtl
call
sub
mov
xchg
xor
mov
mov
mov
or
scas
bound
cltd
movsb
adc
movb
or
ljmp
faddp
je
xchg
pop
fsts
jnp
ds
sub
ja
lcall
into
lds
or
push
xor
push
sub
and
out
jmp
or
pusha
sbb
mov
insl
fldenv
out
aad
jmp
enter
jmp
pusha
movsb
out
scas
push
jg
sti
pop
inc
xchg
jbe
cmpb
xor
test
pop
jns
jecxz
arpl
pop
or
push
rorl
push
sub
cld
mov
or
cmc
stos
xor
test
orb
jo
cmp
push
jg
scas
inc
int3
xor
imul
sbbl
and
jg
lea
iret
xor
out
aas
incl
imul
repz
push
daa
dec
movsb
jmp
lahf
push
mov
mov
int3
and
fdiv
adc
imul
hlt
dec
call
xor
add
xchg
scas
push
fiaddl
add
mov
inc
sti
jmp
repz
cmp
sarb
pop
leave
es
test
inc
or
stos
ljmp
add
pop
xchg
jne
call
idivb
repz
call
pop
mov
test
repz
ret
test
mov
loop
mov
lret
mov
jg
add
stos
add
jo
mov
add
xchg
jbe
lock
dec
int
lods
and
push
sbb
cli
mov
out
imul
insl
inc
add
gs
mov
jnp
cmpsb
repnz
pushf
jae
stos
outsl
xchg
fdivr
cmc
das
fdivrs
jmp
jge
xor
lods
xor
aam
ss
fcmovbe
call
aaa
bnd
push
bound
mov
adc
inc
in
pop
push
jo
cmpsl
out
cmp
push
leave
push
inc
push
lock
aam
or
mov
mov
push
xchg
mov
dec
shrb
xor
inc
ficoms
sbb
xor
pop
ljmp
cmp
dec
and
bound
movhps
xchg
lods
pop
aaa
mov
push
cmp
ret
cs
les
int
jl
cld
outsb
mov
push
in
out
fxam
shl
stos
dec
inc
aam
and
sbb
inc
and
das
xchg
out
jne
jg
jae
cwtl
pop
xchg
mov
leave
std
lods
scas
hlt
push
repz
cmp
sub
lods
movsb
sti
fmuls
cmpsb
adc
sbb
mov
add
in
jle
lcall
add
int
inc
mov
outsb
stos
xor
sub
push
nop
rorl
jno,pt
push
in
cmp
in
int
sti
out
lds
in
jae
nop
push
es
mov
and
xchg
in
sahf
push
cmpsl
mulb
jno
test
dec
push
fsubl
adc
xor
fcmovbe
xchg
fstps
int
out
push
hlt
adc
adc
sbb
and
sbb
jmp
loopne
aas
cltd
icebp
shlb
add
lahf
decl
push
adc
cmpsb
jp
adc
push
xor
sub
dec
nop
incl
pop
das
ret
pop
pop
xchg
inc
sub
inc
or
or
inc
daa
xchg
sub
and
push
jmp
mov
mov
imul
in
outsl
sbb
nop
mov
inc
sub
xchg
mov
push
xchg
push
pop
fisubrl
add
es
mov
fidivs
loop
push
rorb
into
xchg
clc
mov
enter
hlt
sbb
repnz
mov
into
jo
sub
mov
mov
mov
add
sbb
aad
and
push
jmp
lea
jp
mov
clc
xchg
fisubs
jecxz
ljmp
jg
mov
jmp
dec
out
inc
pop
ret
and
sub
arpl
sub
in
loope
inc
ret
and
cltd
negl
mov
sub
lock
js
lock
out
ret
dec
sti
dec
mov
inc
and
mov
sti
lock
mov
cmp
mov
outsb
cmc
jae
adc
push
xor
popa
in
inc
cmp
xor
push
push
cmp
aad
test
mov
lods
lods
aad
jg
adc
sti
inc
sbb
xchg
xchg
inc
xchg
pop
fdivrl
ds
je
in
add
in
ret
inc
mov
les
orl
cmpsb
cmp
adc
mov
ljmp
adc
or
sub
mov
in
pop
mov
rcrl
test
es
dec
push
aad
and
inc
sahf
adc
in
inc
xlat
or
push
and
jns
cmp
cmpsb
aaa
loop
jle
xchg
mov
inc
and
sub
mov
cmp
push
push
ret
xchg
in
test
ret
repnz
fisttps
jg
mov
xchg
push
das
and
lcall
cwtl
xor
push
lods
incb
mov
xchg
movsb
dec
add
int3
adcl
push
and
bound
dec
insl
cmpsl
xchg
cltd
inc
bound
lahf
cltd
movsl
push
insl
pop
add
lods
dec
mov
outsb
dec
pop
mov
xchg
imul
or
xor
stc
pushf
push
cmp
stc
push
std
jl
in
daa
outsb
sub
clc
mov
mov
xor
idiv
mov
movsb
neg
jge
je
push
mov
pop
push
loope
pop
outsb
fldcw
cmp
jmp
mov
add
jge
ja
daa
pop
xor
js
cmp
and
and
in
xchg
mov
lock
dec
out
call
inc
push
xor
stos
pop
imul
sbb
fimuls
cli
jno
hlt
inc
sarb
xor
sub
mov
pop
cld
push
push
popf
jmp
add
std
xor
push
cld
jmp
scas
inc
xor
inc
shrb
mov
sub
fildll
test
test
lods
bound
dec
xchg
push
push
push
jmp
loopne
and
cmp
mov
arpl
or
push
pop
adc
mov
addb
je
push
es
jge
fimuls
je
into
jo
jge
push
fwait
nop
mov
lods
mov
sbb
popa
js
cwtl
inc
and
clc
add
fimull
popf
jle
push
lock
xlat
xchg
push
imul
or
pop
xor
mov
rolb
call
jo
stos
sub
pop
ja
pop
pop
adc
test
inc
out
lods
jp
cmp
push
and
push
outsl
testl
pop
aas
jmp
scas
sti
xor
incl
movsb
enter
cmp
xchg
sub
xor
pop
dec
mov
out
adc
adc
sti
adc
mov
sbb
insb
xor
daa
dec
jecxz
cmpsb
call
pop
int3
movsb
outsl
int3
imul
rcl
dec
mov
xor
movsb
add
lret
shl
ds
mov
and
or
xchg
mov
addr16
addr16
lahf
ja
lods
test
bound
test
xor
test
mov
fs
mov
xchg
pushf
inc
mov
push
scas
jb
fidivrs
push
cld
inc
xchg
and
jo
mov
mov
in
jbe
mov
adc
lods
jb
xlat
lcall
call
bound
add
inc
and
mov
insb
add
sahf
jg
aam
sub
sbb
add
dec
movsl
mov
jge
ljmp
dec
xchg
or
fs
out
or
arpl
outsb
jnp
push
out
xchg
outsl
cmpl
dec
push
adc
and
xor
jecxz
pop
push
cs
mov
cld
dec
cs
addb
sbb
mov
int
cmp
push
add
out
sbb
jle
into
jae
pusha
mov
shlb
xor
movsl
push
push
popf
pop
jb
lea
add
repz
outsb
sbb
push
flds
inc
nop
fbstp
inc
push
in
cmp
push
mov
jp
fwait
jae
in
xchg
dec
push
movsl
int3
push
mov
ljmp
subb
out
xchg
mov
mov
xchg
push
js
jmp
cmp
movsl
stos
cmp
xchg
in
scas
xor
pop
jns
shrb
mov
and
jbe
iret
inc
scas
lret
jl
mov
pop
imul
mov
dec
or
xchg
cmpsb
sahf
inc
popf
scas
xchg
cmp
aad
fldcw
out
ror
cwtl
sbbl
push
je
in
xchg
leave
mov
adc
stos
js
sbb
movsb
mov
inc
inc
addl
xchg
cmp
aas
push
enter
xchg
jnp
pop
int
les
jns
sub
jno
and
fucomp
cmp
aas
cmp
lcall
adc
in
cmp
and
adc
pop
dec
xchg
jle
push
push
jae
rolb
mov
fadds
pusha
ret
mov
jo
xchg
xchg
push
fwait
cmp
xor
data16
lods
imul
jp
dec
xchg
or
bound
mov
shll
xchg
lahf
inc
data16
test
xlat
pop
leave
ret
sub
or
mov
and
pop
jno
and
mov
mov
gs
int3
out
mov
push
jbe
lret
aam
stc
daa
mov
mov
push
jge
pop
call
mov
jp
add
adc
mov
fisubrl
cwtl
mov
pop
arpl
fs
lea
int
int
es
roll
add
cmpb
pushf
out
xlat
call
sbb
xor
pushl
mov
cmp
xor
push
dec
lds
ljmp
imul
xchg
pop
mov
cmp
stc
orb
jbe
mov
test
inc
imul
pop
adc
outsb
pop
cltd
rcrb
data16
scas
je
xchg
ficoml
mov
test
and
lahf
shl
sub
cltd
aam
pop
lahf
adc
cmpsb
bound
cmp
cmp
add
or
pop
testl
xchg
bnd
and
dec
loop
jmp
stos
lock
push
pop
inc
sbb
xor
dec
loopne
xor
pop
xchg
mov
or
and
in
loopne
scas
rorb
dec
pop
xlat
pop
test
stos
das
sub
ljmp
push
sub
jl
adc
insb
mov
test
and
xor
or
dec
out
mov
test
xor
or
jmp
sub
and
repnz
inc
es
jecxz
fldenv
pushf
pop
or
cs
add
adc
jbe
xchg
adc
jecxz
pop
sbb
rolb
push
push
leave
and
jbe
aaa
bound
jp
ret
fbstp
outsl
or
mov
in
pop
ret
in
sub
jg
fsubrs
addr16
aam
lds
fsts
pop
dec
jl
dec
jp
push
cmpsb
jle
ret
mov
cmp
or
dec
test
cli
dec
push
pop
pop
cmp
movb
mov
mov
rcll
sbb
jno
std
jge
sub
addb
movb
and
jns
mov
decl
push
clc
orb
and
push
push
mov
dec
fcmovb
adc
push
lds
mov
shrb
outsl
push
adc
xor
cltd
fmuls
lds
clc
popa
ret
in
dec
mov
rorb
repnz
mov
mov
mov
pop
sbb
mov
sbb
mov
cmp
aas
fdivs
nop
les
mov
cmp
mov
lahf
jge
sbb
jl
loope
mov
cltd
inc
adc
mov
lcall
es
imulb
aad
inc
add
shrb
rcr
into
in
fnstsw
rcrl
outsl
jmp
push
loopne
hlt
int
das
or
pop
jle
ljmp
stc
sbb
loop
subb
mov
out
adc
push
leave
lock
sbb
stos
lahf
jmp
push
ss
out
imul
xchg
jp
fidivrs
and
stc
pop
push
and
fsubs
or
sbb
xchg
jmp
imul
adc
cmc
push
cmp
dec
jmp
out
push
fcoms
loopne
shrb
adc
add
mov
or
in
dec
jb
lea
shll
fs
or
nop
adc
repz
repnz
inc
mov
push
movsb
dec
fdivs
mov
jl
shl
movsb
sub
push
ficoms
mov
das
sub
pop
push
or
lds
int3
enter
push
push
enter
inc
adc
adc
jmp
xor
pushf
les
call
int
pop
mul
aaa
mov
add
add
xor
lcall
pushl
push
out
jmp
fnstenv
fsubl
dec
cmp
aam
xor
popf
and
mov
sub
test
adc
mov
sti
pushw
jecxz
xor
cs
lret
or
adc
mov
add
push
pop
movsb
das
inc
dec
lret
lahf
mov
es
inc
mov
push
or
push
scas
or
mov
popf
lahf
xor
sub
aaa
mov
cmp
lds
mov
mov
xlat
jl
rolb
incl
popa
subl
out
add
ficoml
jle
stc
ret
mov
testl
andb
xchg
ds
mov
iret
in
std
adc
or
sahf
sub
dec
or
outsl
inc
and
jmp
in
nop
pushf
data16
sti
mov
cltd
aam
psubusw
inc
push
sahf
loop
popa
gs
dec
sbb
aas
sbb
shrb
pop
push
out
in
test
xchg
push
xchg
jae
mov
add
inc
adc
xlat
push
push
call
push
imul
and
pop
fsubrs
lea
jl
leave
xchg
rorl
fcomp
shrl
mov
sbb
jae
arpl
xor
xor
mov
cmpsl
pop
dec
adc
aad
jl
and
fisttpll
shl
and
sarb
push
ja
jne
je
add
fildl
shlb
shll
pop
mov
imul
adc
lods
sub
jmp
xor
cmp
mov
ljmp
mov
stc
sets
dec
fildl
out
adcl
xor
std
push
push
int
mov
push
xor
icebp
ret
cmp
xchg
les
loopne
cmp
or
jge
mov
or
int
adc
adc
out
aam
movsl
mov
sarb
data16
xchg
xor
and
or
daa
shll
filds
fnstsw
ret
sbb
jle
xchg
loop
lret
inc
stc
lock
inc
mov
jnp
xor
xor
adc
aam
xor
push
pusha
inc
cs
adc
leave
in
fstpl
ffree
push
out
out
pop
aad
cmp
or
cmp
out
xchg
mov
sbb
cwtl
mov
les
jo
xor
mov
ret
mov
fs
xor
and
lret
jmp
or
popa
cmp
out
fcmove
sti
dec
jg
cmp
push
lds
sbbb
mov
xchg
inc
xor
xchg
jno
loopne
hlt
mov
andl
or
pushl
cltd
inc
mov
nop
pop
push
dec
and
mov
lods
in
inc
loope
adc
add
xchg
bound
adc
xor
cwtl
mov
insl
sbb
pop
push
nop
xor
adc
jo
add
xor
sub
gs
sub
xchg
xor
sarb
mov
popa
sbb
push
addl
adc
sbb
mov
loopne
loopne
jg
or
ss
shr
fwait
sub
roll
jle
dec
in
mov
cld
adc
insl
lods
shl
cmp
adc
add
mov
andb
mov
sbb
pop
and
xor
aas
loopne
xchg
sub
repnz
leave
insl
pop
je
out
or
pop
or
mov
or
dec
fwait
insb
or
xchg
inc
mov
lock
mov
inc
cwtl
je
lcall
lods
data16
xchg
push
or
ljmp
jo
xor
rorb
or
push
jns
cmp
add
xchg
cli
and
jo
xchg
pop
pop
xorl
movsb
imul
push
mov
jg
ja
push
mov
jmp
inc
loope
push
imulb
dec
ljmp
add
lcall
xchg
test
jmp
fidivrl
xor
in
pop
jnp
pop
sti
push
cwtl
push
push
pop
xchg
popf
clc
fimuls
xor
dec
mov
lahf
mov
jg
sub
mov
aas
xchg
iret
mov
jecxz
lods
lret
fadds
push
call
insl
mov
pop
negb
cmpsl
cmp
out
fcoml
xchg
inc
stos
xor
lcall
mov
add
inc
jno
repnz
dec
push
mov
xchg
ja
es
push
push
mov
dec
inc
addr16
outsl
cmp
xor
mov
mov
jge
in
stc
mov
in
xor
fcompl
or
cmp
popa
cmp
mov
lret
adc
nop
dec
pop
enter
sti
sbb
pop
pop
jg
dec
cmpsl
fdivrp
xchg
mov
iret
sbb
mov
adc
cmp
imul
iret
mov
stos
adc
pop
inc
and
sub
adc
out
in
popl
adc
push
dec
std
test
sarb
mov
mov
icebp
xchg
iret
xchg
loopne
pop
inc
lea
cltd
adc
mulb
faddl
push
dec
hlt
xchg
cmp
add
xchg
pop
cwtl
push
test
mov
hlt
xchg
fwait
ljmp
cwtl
cwtl
aad
aam
sahf
mov
cmp
jb
jp
out
testb
and
fsubp
fcom
push
mov
shrl
bound
imul
imul
scas
xchg
adc
inc
test
je
or
jb
lock
xchg
lcall
adc
cld
stos
aad
outsl
jecxz
sbb
cld
adc
add
push
loope
xchg
icebp
fsubrl
mov
rcrb
mov
pop
orl
mov
adc
and
lds
aad
test
loop
fsubp
xchg
push
mov
subb
mov
loop
jmp
pop
mov
mov
test
inc
lods
outsb
std
push
repz
add
inc
or
jno
ss
movsl
out
aad
popf
sbb
inc
mov
adcb
jns
jnp
pop
ljmp
int
mov
lahf
jbe
cwtd
addr16
inc
je
aas
mov
fcoms
xor
adc
or
mov
xor
sahf
fdivs
mov
jb
sub
jge
pop
pusha
in
subl
inc
dec
jnp
jns
inc
dec
insb
adc
dec
jae
jecxz
jecxz
xchg
popf
inc
or
pushf
out
jge
loope
cmp
and
addr16
inc
adc
clc
add
cwtl
cltd
scas
sbb
lcall
lods
push
mov
adc
insb
mov
repz
push
cmpl
shl
push
insl
sub
fdivrl
sti
pop
xchg
jno
pop
mov
adc
push
and
pop
pop
out
cwtl
fcom
mov
or
push
mov
repnz
inc
pop
ror
pop
push
push
jns
sub
mov
das
ret
push
rcll
cmp
les
jne
mov
in
enter
ret
cld
xor
lods
mov
inc
addl
mov
pop
movb
pop
out
or
shll
mov
aam
adc
sub
fstps
push
je
iret
dec
fidivl
adc
jge
and
loopne
daa
sub
jecxz
or
sub
ret
sbb
add
scas
push
rcrb
movsl
xchg
mov
and
scas
test
out
outsl
rorb
jmp
adc
and
xchg
and
mov
das
test
push
push
adc
sub
mov
ret
pop
fucomp
fs
cmpb
fs
bound
movsb
adc
inc
cmp
lds
out
inc
ds
xchg
lret
jmp
outsb
push
mov
cmpsl
mov
adcl
aas
ja
jmp
adc
xchg
jmp
push
mov
fiaddl
dec
pop
mov
mov
loop
xor
loop
mov
adc
out
add
cli
jo
pusha
stos
lods
push
repz
loopne
mov
add
iret
pop
add
insl
adc
mov
sahf
xchg
jns
lds
outsl
aaa
mov
or
fwait
cmp
cmpsb
ret
add
fs
std
xchg
adc
sarb
cmpsl
cmp
cli
ja
xorl
cmc
in
jb
sub
sti
loop
or
pop
ss
ljmp
xchg
mov
mov
jbe
dec
mov
inc
mov
popa
xor
loopne
lret
cltd
sub
lods
jmp
jle
or
iret
sbb
mov
lods
lea
or
stc
xchg
mov
int
ss
hlt
sub
xor
lret
insl
jle
jmp
push
sar
sar
add
pop
sar
adc
lahf
je
xchg
xor
lret
xchg
or
popa
ljmp
inc
sbb
dec
xchg
hlt
or
call
mov
loop
push
test
xchg
and
dec
dec
push
test
or
inc
dec
outsl
int3
inc
or
sub
add
inc
push
arpl
cltd
ljmp
inc
or
ret
lcall
hlt
insb
jle
or
xchg
jno
push
push
cmpsb
add
inc
cmc
mov
dec
mov
pushf
lea
sub
xor
cmp
dec
imul
call
mov
fldenv
add
inc
adc
mov
pop
xchg
sbb
push
sub
lock
push
cs
or
fistl
pop
and
dec
xchg
xchg
loopne
adc
hlt
rcll
insb
or
fwait
sub
sbb
jo
sub
sbb
pop
mov
jg
jns
mov
call
lods
pusha
add
dec
out
adc
xchg
jb
das
cmpsb
in
notb
xchg
xor
mov
mov
mov
fdivrl
sbb
dec
cmp
stos
gs
frstor
jle
mov
ret
mov
mov
clc
arpl
sub
add
jns
arpl
mov
leave
rcrb
arpl
scas
ret
out
xorb
mov
jg
out
imul
mov
pop
pop
dec
inc
ds
add
in
jb
xchg
aaa
mov
sub
push
arpl
lods
clc
je
je
mov
jle
inc
es
cwtl
fisubl
add
add
adc
fwait
cltd
insb
cmp
addr16
add
push
test
and
pop
in
lcall
lds
push
mov
add
cmp
jp
xor
adc
mov
setl
mov
or
sbbb
xor
pop
leave
fmuls
cli
inc
std
rorb
adc
and
cmp
push
in
push
int
jecxz
mov
out
xor
jp
push
clc
adc
add
test
fiaddl
rcll
add
scas
repnz
mov
ss
push
sbb
scas
adcb
std
xchg
lea
sbbb
jno
mov
pop
clc
pushf
xchg
test
out
mov
push
push
jne
adc
jl
gs
mov
inc
ja
es
test
jb
and
dec
movsl
lock
and
mov
mov
pop
shl
nop
ss
sbb
int3
fadds
lcall
lahf
xchg
jo
adcb
cld
aaa
lahf
adc
add
add
andb
fcomi
test
leave
cmp
repz
push
mov
mov
sahf
in
arpl
sub
push
sub
cmp
push
mov
cmp
ljmp
stc
cmp
rorl
test
ljmp
add
orl
mov
enter
popa
std
pusha
js
rorl
cs
js
repz
xchg
or
test
push
aad
out
sarl
cld
and
jge
ret
or
pop
jns,pt
cmc
lock
lcall
or
cmp
repz
jmp
ret
adc
outsb
xchg
jmp
push
jno
jns
movsb
lea
fiadds
loopw
inc
adc
out
test
clc
lcall
sti
insb
repnz
movsl
pop
mov
scas
pop
adc
dec
inc
subb
cwtl
pop
std
test
sti
fnstenv
pusha
lods
xor
aam
dec
jnp
cs
mov
test
das
mov
mov
xchg
xor
data16
aaa
stos
xlat
pop
mov
jno
xchg
lea
test
cwtl
sbb
fistps
xchg
dec
pusha
imul
jne
fst
fsubrl
inc
mov
rcrb
add
push
dec
push
jne
add
mov
cmpsb
xor
inc
popa
icebp
and
sbb
push
out
data16
cli
stos
imul
stc
fs
in
sbb
roll
or
es
jecxz
mov
pop
arpl
lods
xorb
mov
cmp
push
mov
pop
push
nop
pop
mov
divb
cwtl
mov
mov
and
adc
in
lods
inc
fwait
rolb
add
mov
jg
add
movsb
cmp
mov
orb
push
xchg
xchg
jb
mov
or
flds
imul
xor
mov
rclb
inc
movsl
sub
lods
jno
mov
lcall
lock
xor
pop
sub
cmp
jbe
mov
clc
les
sub
and
cmp
sbb
pop
mov
bound
dec
mov
sub
sbbb
lret
mov
dec
pop
mov
add
cmp
es
mov
filds
xchg
sbb
mov
sbb
int3
jp
xchg
je
insb
sbb
inc
rcrl
outsb
jg
in
outsb
inc
into
les
rcrb
filds
or
inc
or
bound
cmc
subl
mov
es
add
shrl
enter
cltd
jb
cmpsb
test
jo
lods
push
inc
repz
mov
and
int3
cltd
jae
pop
fwait
notl
aas
xor
jno
adc
test
mov
push
jecxz
nop
lock
xor
nop
mov
scas
jo
push
test
enter
cmp
push
sbb
pop
andb
hlt
dec
mov
cmpl
push
cs
leave
xchg
dec
adc
cmp
les
xlat
jmp
test
mov
push
mov
jmp
les
mov
adc
inc
out
sbb
sbb
pop
pushf
adc
subl
jp
adc
add
push
mov
fidivrl
or
testb
inc
fnstcw
mov
push
push
inc
in
or
fsubl
xchg
inc
jmp
rorb
or
test
push
outsl
loop
nop
fwait
xchg
rol
cwtl
cld
fdivrl
and
sbb
xor
xor
sbb
iret
xchg
adc
fsts
mov
popf
cmp
pop
xor
lock
loope
mov
or
test
mov
loope
mov
outsl
lahf
test
and
pop
fisubrl
mov
fistpll
pop
cmp
pop
mov
cld
addr16
add
out
pusha
pop
pop
mov
xchg
sub
xor
adc
loop
popf
or
lock
ficompl
pusha
jne
push
nop
mov
add
arpl
push
fld
scas
jmp
dec
inc
gs
nop
cwtl
add
stos
mov
pop
outsl
pop
movl
icebp
push
sub
lahf
jae
loop
add
movsl
xor
fptan
je
xor
call
sub
sub
outsb
shl
xchg
push
mov
sub
lret
popf
lahf
mov
out
hlt
fistpll
lock
mov
cld
icebp
mov
fidivrs
into
push
jp
stos
pop
push
fs
mov
add
dec
push
mov
mov
xor
into
push
jb
enter
cltd
lea
cs
add
push
cwtl
jle
fiaddl
cld
and
out
ja
cs
sbb
xor
stc
dec
jp
pop
jle
adc
xlat
lods
lods
mov
sub
jp
bound
imul
insl
ss
sbb
pop
cwtl
ud2
add
aaa
and
bound
std
jo
fs
pop
ljmp
and
push
aam
adc
js
lcall
mov
outsb
loop
fnstsw
cmc
add
insb
or
cld
xchg
aad
sbb
adc
pop
push
dec
js
fnsave
stos
and
cs
sub
lret
mov
mov
jle
sub
push
das
ret
mov
test
xchg
and
add
mov
jnp
jnp
mov
xor
push
jo
jno
or
lea
in
push
fsubr
sbb
rcl
cmp
mov
dec
xor
dec
and
pop
ds
xor
pop
mov
add
xor
pop
jo
or
pop
ret
sbb
push
push
xchg
addr16
jb
push
xor
inc
adc
loope
jo
xchg
mov
cmp
pop
in
jb
and
sub
decl
dec
fwait
clc
jp
dec
js
pop
jle
push
jnp
loop
or
sub
lds
cltd
faddl
scas
xchg
movsb
jge
mov
fxch
push
fdivl
jae
cmp
mov
sahf
aad
sbb
js
mov
push
lret
mov
push
mov
mov
lds
push
aaa
cmp
jge
pusha
loope
pop
fwait
js
inc
hlt
jno
cmp
sub
mov
clc
lcall
sub
push
jle
lret
xchg
add
sahf
outsl
or
or
mov
test
jle
cs
mov
outsb
mov
js
jae
scas
pop
leave
mov
inc
adc
stc
clc
or
xchg
inc
mov
cmc
mov
jmp
lcall
loopne
das
lds
cmc
mov
dec
sti
mov
aaa
jle
sar
repz
mov
les
add
inc
cltd
jo
andps
xor
xchg
movsl
addr16
inc
enter
jle
inc
xor
das
nop
pop
xchg
dec
jge
call
mov
sarl
mov
cmp
fadds
repnz
mov
pop
pusha
xchg
mov
int
fistpl
aam
cmp
sub
into
sub
or
or
cmp
mov
rcll
mov
ljmp
fmulp
xchg
mov
movsb
add
xchg
xor
add
mov
jbe
ds
movsb
adc
bound
leave
out
data16
sub
or
das
in
xchg
sub
insb
cmp
cmp
or
xor
lcall
xor
xlat
inc
outsb
jbe
clc
mov
cmc
clc
dec
or
fwait
xchg
mov
cmp
and
jb
insb
or
xchg
cmp
movlps
push
out
test
scas
adc
sbb
outsl
imul
mov
xchg
sbb
push
push
add
push
test
xor
jg
fistps
js
into
stos
mov
cmp
mov
out
cmp
je
hlt
insb
jno
xor
stos
push
out
nop
sub
push
fisttpll
inc
sbb
lods
mov
inc
cld
sub
inc
movl
cmpsl
jae
or
int
icebp
iret
enter
xchg
mov
jmp
int
push
xchg
mov
mov
push
insb
sbb
sub
jno
aam
mov
in
inc
repnz
or
and
add
arpl
mov
test
or
mov
add
cmp
orl
push
xchg
enter
and
sti
ljmp
ret
push
jnp
in
xor
ja
inc
scas
ja
cs
test
pusha
xor
dec
fwait
xchg
cmp
sbbb
ret
and
outsb
insb
jno
cmp
leave
pop
fdivs
nop
out
aad
sbb
mov
mov
jo
imul
movsl
push
jae
xchg
push
cmp
jge
jp
inc
int3
fsubp
add
cmp
fsubrs
mov
add
fcoms
insb
cmp
pop
test
pushf
cwtl
push
push
sub
dec
sub
cld
xchg
xor
arpl
addr16
call
sar
and
ds
imul
and
and
fwait
repnz
push
fdivrp
push
aas
dec
add
pusha
push
inc
sub
into
push
cmp
js
fstpl
pop
push
popa
dec
fucomi
xchg
jne
andl
lret
adc
js
pusha
mov
mov
hlt
movsb
push
fsubs
mov
adc
mov
adc
pusha
mul
loope
sbb
lret
sbb
jo
push
push
xchg
xor
pop
add
lcall
cmp
jmp
xor
xchg
inc
fs
cld
mov
ja
aas
mov
xchg
push
cmc
aam
les
sbb
push
mov
jns
and
xorb
and
pop
test
xor
lock
movb
cmp
into
ja
loop
push
stc
xchg
stos
inc
std
push
mov
arpl
jns
or
push
shll
outsb
js
or
fdivl
xchg
dec
cwtl
repz
mov
and
xor
xchg
scas
mov
in
sbb
mov
adc
dec
mov
imul
pop
mov
andb
in
loop
and
add
and
push
sbb
mov
js
jmp
enter
or
repnz
mov
gs
sbb
add
push
in
nop
lret
push
add
dec
mov
xchg
pop
mov
es
mov
dec
arpl
mov
loop
and
inc
mov
sti
fmull
push
jl
and
pusha
std
jnp
leave
jno
test
xchg
cs
adc
or
cmp
push
jnp
jne
pop
mov
pop
dec
mov
test
out
mov
dec
mov
cmpsb
or
fistl
adc
sbb
roll
call
in
inc
ljmp
shlb
mov
mov
jnp
fs
std
fisubl
xlat
dec
data16
cmpsl
cmpb
fs
pop
mov
push
add
stos
adc
mov
loopne
ret
pop
cwtl
inc
mov
subl
mov
sub
or
in
pushl
push
fldenv
cs
jns
xor
orl
stos
add
dec
jge
mov
or
mov
pop
test
jge
cmp
jo
jae
pop
iret
cmp
inc
sarb
add
fdivl
orb
pop
test
int
pop
lret
cmpsl
mov
fstpl
and
inc
in
pop
fwait
adc
cld
xchg
enter
arpl
mov
ja
into
sti
cmpsl
inc
cmp
fcompl
test
es
out
iret
dec
aam
mov
jo
cltd
sbb
ljmp
sub
add
inc
fwait
cmpsb
mov
jmp
push
add
xchg
or
xor
mov
cwtl
push
in
mov
jmp
adc
jge
push
enter
test
enter
xchg
shll
cli
aad
loope
mov
les
jmp
and
cmp
lcall
out
inc
and
pop
mov
es
dec
pop
xor
loope
into
adc
cld
or
popa
in
gs
cmp
fstl
sbb
push
cld
xor
adc
sbbl
push
dec
sbb
and
mov
bound
stos
push
pop
fs
xchg
lcall
push
fwait
pop
ds
mov
pop
xchg
lcall
add
cs
std
daa
lcall
neg
repz
mov
test
loope
out
ss
fadd
mov
or
ja
imul
ds
xchg
inc
movsb
push
std
mov
xchg
push
mov
jmp
jbe
fstpl
pop
pop
dec
xchg
push
jle
mov
push
shr
add
ficoms
loopne
adc
fsubl
icebp
insl
sbb
inc
out
icebp
lods
emms
xor
pop
pop
push
push
loopne
int3
jbe
out
cltd
cmp
outsl
push
xchg
sub
cmc
push
adc
clc
push
test
jne
add
mov
mov
shll
pop
cmc
sti
cmc
jecxz
sbb
pop
and
imul
cwtl
cmpsl
xchg
insl
popa
dec
jbe
pop
sub
fisubs
xchg
sbb
jbe
inc
cli
push
add
jbe
xchg
dec
push
cmc
pop
push
mov
cmp
pop
mov
sarl
mov
sbb
repnz
fists
mov
pushf
and
adc
mov
icebp
repz
and
pop
fdivrs
mov
push
dec
icebp
icebp
adc
and
outsl
sbb
inc
xor
or
pop
pop
sbb
jae
fsub
pop
and
into
sub
stos
movsb
inc
jecxz
lods
aad
push
daa
ja
or
cwtl
arpl
mov
adc
iret
xor
pop
push
aas
and
dec
push
inc
sti
pop
pusha
pop
cmp
jae
mov
jb
adc
cmp
cli
out
les
bound
rolb
bound
scas
dec
and
xchg
cmpsb
xor
aam
sti
imul
sub
pop
out
or
push
lret
jle
cltd
je
out
cmp
xchg
xchg
je
nop
dec
loopne
adc
sarb
fs
shrb
fiadds
lods
jge
nop
pushf
adc
fidivl
jno
adc
rcrl
daa
xor
mov
push
mov
mov
or
fs
lret
scas
mov
xor
enter
jmp
pushw
dec
and
push
xchg
push
jecxz
dec
xchg
mov
or
xchg
sbb
clc
inc
clc
xor
mov
dec
add
sub
xor
jmp
jno
lea
adc
in
jecxz
hlt
dec
out
and
lock
es
lds
inc
ret
mov
out
jno
inc
xchg
inc
sbb
mov
push
into
out
adc
mov
mov
cmp
inc
fisttps
add
fwait
iret
mov
loop
stos
adc
xor
pop
cmp
scas
adc
and
jle
daa
vmovupd
subl
pop
sub
xchg
sbb
add
insl
cmp
sti
addr16
mov
and
je
mov
jnp
in
aad
dec
push
cmp
push
in
aam
push
or
jge
add
cmp
ret
inc
mov
test
imul
iret
push
fdivrs
shl
dec
test
js
fisttpl
in
add
addb
ja
into
aad
mov
jns
rolb
cld
stc
sbb
icebp
shl
jl
sbb
mov
sub
scas
iret
push
inc
in
mov
pop
jb
add
inc
dec
enter
mov
jnp
sbb
in
lods
lret
jle
notrack
dec
stos
jo
ret
and
dec
inc
stc
repnz
adc
add
xor
rorl
adc
stos
test
ja
sbbl
mov
cmp
notb
xor
es
clc
cmp
orb
pop
adc
mov
aad
lret
pusha
insl
inc
imull
int3
es
and
sub
loopne
into
lcall
xchg
in
sti
xchg
cmpsl
mov
pusha
mov
dec
xor
insl
push
adc
inc
loopne
sbb
jb
es
stos
fsincos
jg
repnz
add
outsl
cmpsl
dec
fnstsw
fistpl
lea
xchg
mov
mov
hlt
outsl
lahf
pop
loopne
stos
data16
inc
mov
jno
fucomip
lds
lret
jg
mov
jo
iret
mov
aas
pop
les
aas
adcl
push
pop
cmp
mov
pop
pop
mov
mov
xor
out
mov
pop
fbstp
jl
or
inc
or
mov
pop
mov
sub
pusha
inc
lds
jle
cmc
es
fucom
xor
cmpsb
dec
push
push
sbb
int3
shl
fsts
in
rcrl
sub
sahf
jmp
inc
xor
add
jge
leave
cmp
lcall
sbbb
das
push
dec
rorb
pop
sub
sbb
daa
daa
adc
or
xlat
in
push
sbb
or
sbb
pop
push
cmp
ljmp
adc
jecxz
jl
inc
xchg
loop
mov
imull
xor
adc
inc
push
jmp
push
mov
sbb
push
sub
imul
shlb
adc
mov
inc
xor
jp
loopne
mov
jnp
pop
mov
cmp
repnz
mov
pusha
add
pop
aam
lret
push
mov
or
rcrl
mov
scas
popa
mov
lock
mov
dec
pop
xchg
test
dec
std
in
fldl
stos
jl
into
lods
mov
lds
and
loop
sbb
xor
xchg
cmp
lock
xchg
fidivrs
das
fmuls
test
jg
adc
add
jns
cmpsl
mov
fdivs
insb
add
repz
sub
push
pop
xchg
pop
mov
xor
jecxz
movsl
mov
sub
jbe
dec
subl
mov
sahf
cmp
lret
rolb
pop
cmp
je
dec
loop
pop
sbb
inc
mov
mov
jecxz
inc
mov
cmp
mov
lds
inc
dec
jbe
and
jns
push
outsw
xlat
push
jno
enter
cli
pop
mov
nop
adc
or
inc
xchg
dec
sub
mov
lret
cs
sti
out
loope
fst
hlt
js
xchg
insl
mov
lret
in
test
lret
rol
je
or
push
jp
pop
int3
mov
or
mov
jg
lret
xor
xlat
les
lret
rcr
or
pop
shl
ds
sarl
sub
fs
jb
sub
aad
ret
into
jae
shlb
popf
pop
test
mov
aas
pop
aaa
lock
fadds
jne
pushf
inc
mov
movsl
sbb
xor
push
and
jp
or
mov
arpl
aaa
aam
lahf
pop
lds
fiadds
mov
sbb
repnz
test
mov
add
jns
add
cmp
sbbl
pop
mov
push
repz
pop
push
xlat
cltd
das
jp
push
cmpsb
sub
mov
fwait
pushl
adc
jle
imul
sbb
jecxz
aaa
dec
ljmp
xor
mov
ret
insb
cmc
lahf
out
imul
aaa
sub
cld
cmp
xor
mov
xor
mov
call
gs
stos
mov
and
xchg
or
lods
sub
mov
imull
sbb
add
lods
or
sub
push
sbb
ljmpw
add
dec
mov
data16
jmp
xchg
outsb
mov
add
roll
lea
mov
xorl
sahf
jne,pn
jl
pusha
fisubrl
fildll
sub
push
cmp
iret
enter
mov
cmpsl
mov
pop
enter
inc
test
cmp
mov
cmc
lahf
jae
jecxz
or
pop
out
jl
je
adc
sub
out
fisubrl
lods
lds
sbb
or
cmp
out
loopne
pop
out
mov
inc
ret
test
mov
mov
push
jl
mov
outsb
enter
dec
addr16
movsl
enter
mov
pop
sbb
ftst
iret
shlb
ret
xor
lods
arpl
jae
aam
dec
test
inc
in
lods
stos
jp
cmp
and
icebp
bnd
fldenv
push
in
push
pop
div
sti
stos
inc
aad
repz
push
sbb
jmp
mov
pop
ja
sub
lret
icebp
scas
sarl
cmpsb
loopne
out
mov
into
sub
jle
mov
out
fistl
into
push
jnp
push
adc
insl
xchg
inc
out
ss
cmc
xchg
adc
pop
cli
xor
out
mov
mov
outsl
in
dec
fwait
dec
shlb
mov
out
inc
dec
mov
jb
fwait
mov
push
popa
sbb
ret
js
rcrl
sti
add
and
cmpsb
cmp
aas
mov
rdtsc
std
arpl
aad
das
out
sbb
cmp
mov
sbb
dec
xchg
jo
xchg
inc
fidivs
adc
pusha
adc
loop
insb
adc
mov
repnz
adc
pop
into
aas
pusha
test
lahf
imul
out
inc
inc
pushf
rclb
jl
or
lahf
sarl
or
push
jmp
pop
icebp
inc
inc
mov
cmp
inc
ss
jl
push
push
pop
cs
cmp
fnop
jnp
sbb
xor
cmpsb
fiaddl
inc
out
and
push
push
push
cmp
adc
add
and
mov
imul
push
cli
mov
mov
mov
hlt
sahf
and
shl
in
add
xchg
xor
je
pop
mov
mov
subl
jae
test
mov
jle
repnz
jbe
pop
test
lds
ror
lcall
hlt
imul
call
outsl
push
lret
setp
imul
xor
sub
aad
inc
mov
jle,pt
repnz
sarl
and
inc
fidivl
add
repz
aam
movsl
and
adc
repz
das
mov
nop
adc
adc
addr16
mov
sbb
cmpsb
cmp
mov
or
mov
outsl
or
inc
pop
push
cmp
pop
sbb
fadds
je
and
mov
mov
lods
inc
add
jno
jnp
loop
push
mov
pop
adc
cmc
shr
fisttpl
out
inc
inc
movsl
adc
rcrl
out
jo
cmp
fwait
dec
inc
scas
mov
pop
pop
push
test
test
fidivl
aad
out
xor
push
rol
and
mov
or
loope
and
pop
sahf
fistpl
scas
pop
inc
addr16
sbb
fwait
mov
into
add
pop
enter
cmp
xchg
jle
hlt
and
add
test
outsb
jbe
data16
or
sub
cld
xchg
dec
add
mov
in
rcrl
cmp
stos
or
jbe
cmp
shrb
aad
repz
dec
insb
fsubrs
dec
jmp
roll
xchg
mov
lret
movsl
jno
daa
jno
orl
mov
jb
push
lea
das
sub
pop
sbb
cmpsb
mov
jg
loopne
stos
cmp
bound
dec
or
sub
imul
or
pop
aaa
int
dec
in
cmp
xchg
sti
les
add
movsb
push
push
xchg
in
xchg
pop
stos
adc
js
filds
loopne
ljmp
sub
cmp
out
testl
cmp
pop
in
sbb
repnz
mov
int3
call
inc
and
xchg
mov
mov
fadd
jmp
inc
fisubrl
nop
stc
push
mov
imul
mov
aam
mov
sub
stos
mov
push
mul
push
pop
test
pop
test
fbld
mov
loop
cmpb
shll
sti
jo
call
cmp
stos
adc
fs
pusha
arpl
inc
popa
sbb
imul
or
sub
mov
jnp
call
movsb
or
cmp
popl
cmp
jp
sub
add
rol
pop
mov
dec
cmp
and
pop
mov
jg
pop
outsl
jne
xchg
add
push
sahf
imul
fbld
push
lea
outsb
repnz
outsl
adc
inc
mov
mov
xchg
stos
icebp
in
aaa
call
pusha
xor
pop
push
out
cmp
loop
fisttpll
xor
add
outsb
lods
cmp
cmpb
dec
and
sarl
sbb
std
cli
pop
xchg
mov
xchg
and
mov
lods
inc
push
in
adc
vphaddubq
add
iret
and
lods
xchg
xchg
js
rolb
daa
push
lret
push
mov
andl
lret
jbe
cmc
cli
adc
lret
push
and
pop
sti
movsb
cld
cmp
pop
icebp
cmpsl
sbb
lock
or
cmp
cld
lds
loope
fwait
add
sub
push
pop
outsb
and
mov
add
jmp
adc
fsubs
sbb
dec
clc
jbe
adc
cmp
sub
pop
insl
sub
xchg
fs
sbb
xorb
in
adc
std
or
addl
pop
xchg
mov
add
mov
xor
xchg
sahf
cmp
mov
call
xlat
dec
jo
ljmp
ja
jge
fs
leave
xor
mov
popf
int3
loopne
cmp
bound
jns
push
inc
pop
mov
cmp
xchg
fdivs
cwtl
cld
rcrl
inc
pop
mov
loopne
adc
jg
jb
add
cmp
imul
cmp
xor
jecxz
clc
subb
dec
je
dec
lahf
call
mov
pop
cli
add
test
xchg
int
outsl
push
cmp
rolb
push
roll
lret
icebp
pop
pop
iret
add
mov
setb
repz
jbe
cs
pop
push
sub
jae
test
xor
stos
mov
fsts
mov
cli
cmp
jl
popa
dec
mov
mov
push
cmpsb
xor
dec
rclb
int
pushf
orb
testb
or
nop
mov
sarl
mov
jmp
xor
repz
sar
pop
daa
les
add
ficompl
fcoms
push
into
call
fnstcw
sbb
jecxz
xchg
data16
push
loop
daa
loopne
sti
hlt
and
inc
rorb
add
int
mov
push
aam
mov
adc
std
pop
loopne
das
push
enter
pop
inc
adc
ljmp
dec
dec
mov
es
sbb
movsl
add
mov
lods
mov
popf
inc
mov
arpl
or
mov
lods
inc
mov
shlb
int
cmp
insl
sbb
inc
mov
jecxz
fcoms
dec
dec
inc
sarl
rorl
add
sbb
hlt
pop
pop
mov
data16
jecxz
cltd
push
out
sbb
mov
icebp
push
or
add
mov
lods
movsl
push
ja
cltd
out
jae
iret
lock
add
ss
jae
xchg
xchg
push
test
imul
loopne
out
push
xor
dec
mov
popa
movsl
push
lret
jne
xor
push
sub
jl
into
mov
in
loopne
dec
pushf
insb
cmp
push
push
push
call
adc
inc
int
xor
jp
xchg
pusha
xchg
daa
mov
aaa
out
jmp
das
incl
cwtl
push
jnp
in
cs
dec
mov
sub
aam
lcall
jno
popf
xchg
cmp
mov
into
mov
es
call
jb
dec
orl
pop
pusha
push
stos
cmp
sbb
in
xchg
jne,pn
ffree
and
das
mov
mov
sbb
xchg
mov
xlat
pop
jns
xlat
push
add
in
push
nop
mov
jnp,pt
pusha
das
jecxz
nop
pushf
and
es
pushf
cmc
inc
pushf
push
int3
out
out
xor
dec
mov
inc
mov
mov
jns
pop
ss
add
lds
int3
xor
rorl
test
jge
bound
jns
jo
push
arpl
jne
inc
lock
out
mov
or
scas
sub
aaa
ret
mov
sub
add
mov
sti
or
repnz
js
mov
jmp
lods
jae
and
ret
mov
lret
pushfw
cmpsb
pop
jl
or
xchg
jp
mov
mov
faddl
stos
pop
dec
dec
stos
call
leave
in
ljmp
or
and
or
leave
mov
sarb
pop
out
pop
stos
mov
fcmovb
ljmp
mov
movsl
xchg
push
inc
in
testl
pop
mul
or
mov
inc
lock
push
adc
mov
jge
jo
xor
push
jg
loopne
add
enter
or
mov
cld
mov
add
fisubl
ror
sbb
loope
xor
xchg
xchg
andl
adc
push
mov
decl
repnz
scas
xchg
adc
cmp
es
mov
bound
sbb
adc
sub
xor
js
testl
pop
mov
cmpsl
mov
cli
test
add
push
ljmp
xor
ret
sub
push
sbb
pop
add
push
push
adc
divl
mov
mov
adc
xchg
dec
sub
das
loopew
std
subb
pusha
push
mov
sbbb
cmp
cmp
mov
xorb
sub
lock
out
and
fadds
pop
cwtl
jnp
jno
xchg
adcl
push
mov
sub
aam
dec
cmp
cwtl
xlat
stos
bound
out
addr16
sub
or
loope
jl
imul
or
cwtl
scas
mov
cmp
cmp
xchg
lods
or
fstpt
roll
pop
or
hlt
inc
ja
cli
xchg
test
xor
jne
mov
loop
add
lret
mov
fisttps
push
repz
leave
push
hlt
notl
lahf
notl
push
mov
les
cmpsb
fs
jg
repz
add
lahf
bound
scas
in
js
fadds
gs
push
sub
mov
push
in
pushw
push
push
cmp
es
mulb
push
fidivrl
sbb
dec
fildl
or
sbb
cltd
pop
jp
rcll
jnp
pop
daa
cmpsl
roll
dec
in
or
push
jns
fcmovne
loopne
test
mov
mov
xor
and
adc
jnp
cmpsb
lcall
xor
test
ss
daa
or
hlt
call
jle
cmp
push
xchg
push
outsl
popf
test
mov
lsl
xlat
jle
sub
adc
sahf
ljmp
jb
movsb
cmp
cmp
mov
dec
sbb
stc
sbb
test
sbb
dec
popf
outsl
in
jmp
jae
inc
mov
loop
enter
or
cmp
adc
mov
les
mov
mov
negl
repz
ss
test
test
rcrl
jp
mov
and
cmc
insb
add
loopne
xlat
cli
cltd
inc
inc
jnp
int
lds
ja
out
inc
pop
push
sub
ds
jne
jle
sub
insl
mov
popf
jnp
into
mov
pop
xor
push
push
call
cmp
inc
push
inc
jp
jmp
mov
int
fwait
bnd
and
ja
test
or
outsl
scas
stc
ja
fistpl
mov
and
inc
movsl
iret
xchg
add
jle
add
mov
add
xor
adcb
push
ljmp
mov
push
mov
jns
mov
xchg
pushf
std
bound
shl
in
jmp
jae
sbb
adc
ss
insl
jmp
int3
mov
jbe
pop
pop
adcl
inc
ret
aad
sub
fmuls
es
cs
jnp
inc
sbb
decb
movsb
lcall
xchg
mov
mov
sub
dec
lahf
mov
add
sbb
xchg
mov
cmp
jmp
inc
dec
inc
lock
jg
cli
adc
add
lods
shll
push
mov
xor
pop
xchg
xor
mov
and
ljmp
aaa
or
test
dec
shr
or
in
scas
fimuls
sar
ficoms
rcll
push
sub
jge
cmp
dec
sbb
loopne
jno
jecxz
ficomps
xchg
pusha
ss
sbb
les
and
pushf
lcall
inc
xchg
xor
or
scas
mov
inc
imul
lock
std
dec
cld
call
pushf
xlat
sub
std
dec
js
mov
lea
and
mov
push
scas
xorl
xchg
lea
add
shrb
xchg
sub
or
addr16
icebp
adc
mov
out
cmp
xor
jmp
and
xor
in
xchg
gs
sbb
sbbb
xchg
lahf
inc
mov
inc
cmp
sti
shlb
mov
sub
pop
and
pop
jg
loopne
lret
adc
lods
rorb
push
int3
mov
mov
xor
cmp
pop
out
push
ss
xchg
stos
dec
inc
adc
xchg
stos
outsl
loopne
mov
adc
int3
add
mov
xchg
loop
jle,pn
push
sbb
ljmp
jns
mov
adcb
mov
incb
or
fisttpl
out
add
mov
das
pop
mov
in
pop
adc
jnp
aam
lret
out
xor
jbe
dec
inc
aad
fidivl
stc
jae
mov
sarl
mov
pop
cltd
out
mov
mov
test
inc
movsl
push
add
push
dec
ss
pushf
cli
mov
or
mov
icebp
adc
dec
xchg
push
cli
push
dec
mov
ds
in
pop
jae
mov
mov
mov
int3
xor
xchg
adc
jg
push
cld
lahf
cmp
imul
inc
mov
icebp
movsl
add
pop
sub
sbb
ds
fwait
iret
sbb
jo
cltd
add
fiaddl
dec
loope
xchg
data16
mov
in
xor
fstps
jmp
jmp
out
cmc
mov
in
sbb
xchg
popf
pop
insl
xchg
sub
jns
int
mov
in
test
mov
call
and
mov
loopne
jnp
jl
xor
test
sbb
dec
out
aas
cwtl
jns
mov
je
adc
std
xor
cmp
dec
push
mov
xlat
and
fisttps
jecxz
cmp
add
add
es
arpl
jge
pop
mov
outsl
xlat
jo
ret
mov
lds
mov
ds
xchg
or
jns
roll
adc
or
stos
scas
sti
jae
sub
jmp
lds
lahf
enter
xor
icebp
cmc
sub
aad
cmp
gs
adc
push
mov
imul
scas
xchg
push
lock
dec
and
pushf
fsubrl
sbb
cld
mov
ljmp
dec
jne
xor
ficompl
popa
std
mov
inc
pop
xor
push
sub
lods
mov
stos
orl
rcrb
mov
daa
out
or
mov
fistps
mov
pop
adc
je
arpl
push
into
inc
fnstenv
mov
iret
aam
outsb
push
or
push
and
adc
xor
fnstsw
xchg
cltd
xchg
outsl
mov
dec
leave
dec
sbb
fs
push
loop
out
jmp
mov
ja
and
ds
pop
and
jmp
std
inc
xor
push
pop
xchg
pop
mov
jno
adc
test
in
cmp
add
lret
or
mov
or
push
adc
fnsave
mov
sub
xlat
and
mov
mov
cmp
cmp
xchg
mov
in
clc
fiaddl
mov
leave
jo
movsb
adc
sahf
adcl
sahf
push
xchg
in
mov
and
and
inc
popa
add
fnsave
das
cmp
mov
lcall
push
ds
inc
repnz
mov
fdivr
loop
js
cmp
rorl
jns
dec
shll
outsl
mov
pop
mov
mov
fistl
aam
out
push
xchg
scas
in
test
lods
adc
cltd
test
pushf
mov
stos
or
data16
inc
sbb
sbb
ret
adc
loop
pop
dec
mov
xchg
xchg
in
jae
mov
cltd
call
sbb
ds
nop
nop
push
ret
jg
inc
pop
aam
addr16
loopne
xchg
fcmovbe
jno
pop
clc
dec
push
and
jecxz
jns
cmc
out
in
or
sbb
and
sbb
jne
or
sbb
mov
jae
adc
lods
sbb
inc
in
repnz
inc
xchg
je
and
add
pop
in
stos
mov
fnstcw
dec
mov
and
add
sbb
mov
test
les
repnz
sub
add
sahf
add
xchg
jnp
out
cltd
jns
lods
cmp
pop
stos
fcoml
inc
push
test
jge
mov
test
push
lcall
in
stc
ret
push
push
test
dec
repz
xor
jns
ficoms
ret
jecxz
jnp
sub
shl
dec
jnp
stos
loopne
mov
lods
les
xchg
fwait
dec
incb
jg
pop
pop
add
inc
inc
mov
fwait
outsb
out
rcll
mov
mov
xchg
jno
push
sub
and
sub
fistpl
xchg
cmp
mov
mov
pop
jecxz
sub
stos
inc
push
adc
ret
gs
fldln2
std
pop
int
imul
cmc
push
mov
mov
div
add
push
fimuls
popa
or
addr16
jle
and
dec
pushf
mov
xor
push
dec
loope
or
int3
cmc
xor
out
fldenv
ja
or
lods
pop
movsl
push
aad
mov
mov
pop
mov
pop
cmc
pop
jnp
xor
pop
mov
push
mov
fisubl
cmp
je
fildl
adc
mov
lods
push
dec
int
aad
push
xor
add
xor
fists
xor
jg
mov
ret
mulb
movsb
dec
in
in
jp
ds
aas
and
aam
fwait
nop
into
int
test
mov
scas
in
lock
xchg
mov
mov
push
clc
dec
jmp
mov
add
sbb
jmp
jge
mov
mov
mov
js
dec
in
inc
mov
mov
push
pop
addr16
xchg
push
cmp
xlat
jbe
in
cli
add
cmp
jl
inc
lahf
sbb
addr16
jnp
sbb
xchg
xchg
mov
in
lods
or
int3
jmp
shlb
mov
hlt
test
andl
loopne
pop
mov
dec
dec
dec
dec
pop
adc
out
orb
mov
test
xchg
bnd
sub
lahf
mov
aad
sbb
dec
xlat
mov
xchg
int
add
call
and
pushf
pop
lock
je
or
jb
push
jb
cmp
dec
dec
inc
leave
fsubrs
inc
cmp
pop
int3
js
in
insl
adc
outsl
addr16
pusha
pop
mull
jmp
mov
int
jmp
xchg
shrb
out
cmpsb
push
or
sbb
loope
xchg
mov
sbb
repnz
xor
pop
ficompl
cs
outsl
xchg
pop
mov
xchg
xchg
mov
mov
mov
jp
cli
pop
lods
adc
fdivp
ja
xchg
mov
pop
or
sub
mov
mov
xor
jmp
mov
scas
dec
inc
push
adc
pop
mov
or
jnp
fstl
mov
pop
pop
es
adcl
jge
sbb
imul
pop
jne
test
aaa
inc
mov
testb
in
xor
push
call
sbb
sub
in
lret
fsubrs
jb
insb
sti
pop
cs
xchg
gs
add
push
add
loopne
push
cli
mov
xchg
fldt
jmp
pop
cmp
cli
xchg
and
dec
jne
adc
je
sbb
sbb
sbb
ljmp
xor
rclb
ret
ret
das
pop
sti
mov
in
mov
mov
cmp
test
popl
sbb
nop
cmc
pop
ss
sub
pop
dec
icebp
out
xor
in
adc
and
ljmp
fwait
js
cmc
jns
data16
shl
and
dec
push
jge
mov
test
clc
pop
sti
jae
stc
sbb
xchg
jmp
mov
addr16
mov
pop
mov
lahf
sub
popf
add
aaa
add
stos
sbb
sub
out
xchg
fadds
orl
push
adc
cmp
push
arpl
inc
insl
fbld
iret
movsl
mov
and
sub
mov
pop
hlt
and
ds
test
fmul
bsf
adcl
rorl
mov
push
pop
cmp
sub
popf
jge
push
xchg
mov
ds
into
scas
pop
in
mov
and
xor
adc
push
add
ret
push
dec
mov
mov
adc
or
shlb
mov
repz
outsl
mov
sub
data16
adc
sbb
xchg
mov
sub
loopne
or
sbb
mov
fsts
dec
push
mov
sbb
ja
into
lret
dec
xor
ret
dec
lods
insb
mov
fdivs
jns
jne
notb
cmp
xlat
sbb
enter
pop
inc
push
das
je
mov
popa
jb
divl
mov
jae
mov
xchg
jns
push
sub
jg
dec
mov
and
jg
pandn
xor
call
mov
and
xlat
fidivl
sbb
cmp
mov
xor
add
mov
std
xor
mov
cmpb
inc
inc
outsb
push
mov
cmc
cmpsb
mov
or
popa
push
daa
cld
cmpsl
or
outsl
xor
mov
or
xor
jmp
push
inc
scas
cli
push
fcomps
push
push
mov
in
jns
out
popa
aad
movsb
pusha
jg
lret
pop
enter
mov
aad
ja
addr16
xchg
sarb
push
movsl
mov
int
dec
sbb
sub
pop
das
int
mov
fwait
cli
loop
int
xchg
pop
fldcw
dec
test
mov
sbb
iret
ljmp
and
sub
mov
jg
and
pop
or
ss
sbb
xchg
push
cs
add
lods
pop
std
inc
mov
push
lods
mov
ja
pop
sub
or
sub
hlt
gs
enter
jno
mov
cmp
dec
adc
mov
push
mov
xchg
stc
inc
xchg
xor
xchg
fwait
insb
push
pop
jl
jbe
fucom
xchg
loope
cmp
stos
dec
outsl
jp
aaa
call
imull
cltd
push
call
pushf
xor
shl
dec
frstor
xchg
int3
mov
scas
dec
dec
push
or
sti
hlt
pop
pop
mov
xchg
ja
pop
push
lods
loope,pt
out
jnp
fsubl
fidivrl
mov
out
daa
adc
ret
ds
lds
or
mov
xor
lock
push
push
add
int3
dec
jecxz
call
inc
ret
sbb
and
lea
insl
std
xchg
ret
arpl
dec
rcll
shrb
jge
push
flds
cmpsb
add
mov
dec
outsl
adc
mov
and
jno
jns
aad
or
roll
cmp
mov
and
mov
mul
cmpsl
push
push
je
add
mov
mov
xchg
jnp
insl
scas
js
adc
movl
xlat
xor
xlat
test
cltd
out
out
or
dec
xrelease
int3
jnp
adc
xchg
and
test
gs
sahf
xchg
pop
sahf
mov
lret
mov
test
push
xor
jnp
or
sub
cltd
push
ret
scas
out
out
and
add
or
movsl
lds
jne
push
sub
jle
or
jge
and
mov
fs
shl
lcall
out
lret
push
pop
fdivl
in
push
filds
outsb
in
cmp
test
pop
paddusb
hlt
das
into
push
mov
adcl
xor
add
or
cmp
sbb
sub
dec
jge
pop
pushf
movsl
mov
xchg
bound
push
ljmp
xchg
imul
movaps
ljmp
pusha
ss
movsl
pop
outsl
xchg
pop
adc
mov
ljmp
scas
inc
daa
xchg
test
push
cltd
loopne
test
subl
or
sarl
mov
push
xchg
pop
out
sub
ror
jo
or
out
bnd
xor
or
push
ljmp
xor
sti
xor
sub
pusha
adc
not
flds
loop
loope,pn
dec
ds
mov
xor
sub
out
adc
adc
in
stos
outsl
xchg
scas
cmpsb
xor
cmpsb
sarb
std
jns
or
shlb
cmc
test
xchg
out
sbb
loope
pop
adc
push
and
hlt
and
lret
das
mov
scas
inc
cld
or
cmp
testl
daa
push
mov
out
orl
loop
add
dec
sbb
das
dec
std
arpl
mov
testl
inc
leave
out
cli
jae
xchg
inc
push
je
bound
sub
call
pop
push
nop
jnp
mov
hlt
sub
aam
insl
mov
push
ja
xchg
lretw
push
rep
adc
scas
out
daa
in
jo
push
jo
ljmp
pop
dec
scas
push
jns
in
mov
mov
add
jmp
outsb
dec
into
xor
leave
push
pop
jne
jne
ror
imulb
arpl
jge
sub
das
jge
add
addr16
sub
popf
push
sub
xchg
adc
in
add
mov
sbb
mov
pushf
iret
jnp
xchg
lds
movsl
daa
scas
hlt
xor
push
cmp
or
shr
inc
jae
dec
mov
mov
or
jg
lods
dec
clc
cmpsb
mov
add
cmp
inc
cmp
mov
xchg
mov
inc
std
sbb
mov
add
xchg
in
jp
push
icebp
xchg
mov
daa
inc
out
xor
out
or
std
xchg
and
imul
fisubl
xchg
push
push
sbb
scas
jl
clc
aaa
jnp
out
and
sar
pop
out
mov
mov
xchg
orb
push
dec
cld
fnstsw
loopne
int
inc
mov
xor
mov
popa
cwtl
mov
pop
and
jge
dec
mov
fisttpll
add
loop
ret
out
outsl
mov
dec
aad
mov
insl
cmc
vunpcklps
pop
or
mov
mov
dec
cmpsb
sbb
jnp
outsl
pushf
or
pop
mov
shl
add
mov
aaa
imul
lcall
int
std
xchg
or
les
ficompl
nop
pop
pop
add
ret
clc
or
adc
mov
lods
pusha
jp
scas
jne
mov
add
orl
and
push
cmp
jecxz
mov
gs
stc
sbb
mov
movsb
push
xlat
bswap
int3
fisttpll
cs
push
ss
loope
jbe
rorb
jbe
xchg
je
add
imul
je
cmp
shll
push
inc
inc
ja
mov
jo
js
dec
xchg
fs
mov
mov
leave
mov
jmp
int3
es
orl
mov
cmpsb
pop
insb
xchg
mov
add
or
out
in
dec
xor
iret
out
int
sbb
or
or
ja
lods
enter
mov
stos
jge
pop
test
and
mov
add
jg
and
xchg
dec
cld
int3
mov
mov
mov
bound
sub
pop
fsubrp
xchg
bound
xchg
or
xchg
or
rol
or
xchg
cmp
add
jge
insl
pop
push
addl
inc
dec
daa
rolb
inc
test
inc
push
nop
pop
mov
mov
ds
jno
dec
loope
lret
int3
aas
xor
pop
mov
dec
adc
lret
push
out
pop
lahf
inc
fs
das
fidivs
pop
dec
into
mov
and
repnz
push
call
inc
mov
loopne
xchg
mov
out
lods
and
leave
push
mov
lahf
es
sub
shll
mov
mov
jg
pop
mov
mov
into
mov
call
cs
push
cmp
pop
in
rolb
aaa
push
xor
mov
lret
test
adc
sub
pop
aaa
mov
es
punpckhbw
mov
adc
inc
jae
lahf
lret
aad
lahf
arpl
dec
in
arpl
adc
mov
push
jb
cmpsb
int
mull
dec
stos
cld
jg
das
iret
jb
lret
xchg
adc
cmpsl
adc
sbb
jecxz
jp
bnd
push
sbb
push
or
dec
pop
popl
inc
mov
pop
cli
push
sti
repz
dec
cmc
dec
out
jge
cmc
mov
sbb
pop
pop
out
dec
jo
test
pop
cmpsl
dec
cmp
mov
jne,pn
rolb
push
adc
shl
or
sti
popf
add
rclb
sub
std
lcall
rorb
cmp
lock
lret
in
adc
push
push
lock
xchg
mov
das
pop
mov
and
ljmp
xchg
orb
add
xlat
hlt
insb
adc
pop
or
inc
or
mov
add
test
jne
mov
nop
cmp
mov
cmp
dec
popa
sbb
cmp
and
cmpsl
mov
inc
lret
das
fdivs
adc
pop
hlt
lcall
push
inc
leave
ret
dec
decl
xchg
inc
shll
jmp
lcall
mov
loope
adc
cli
sbb
push
sbb
push
jno
pop
xor
mov
insl
and
push
mov
xorb
cmpb
xchg
mov
jge
cs
mov
mov
rclb
lea
jmp
pop
add
in
sbb
mov
mov
cmc
ss
inc
sbb
icebp
jbe
xchg
cmpb
lret
stc
xchg
shlb
xchg
and
ret
enter
out
jg
jnp
decl
loopne
sub
adc
mov
mov
mov
mov
scas
mov
int
fcoms
cltd
mov
aam
xor
bound
lret
out
mov
sbb
or
sbb
loopne
add
aaa
mov
movsb
mov
loopne
sar
add
or
add
int
mov
or
dec
inc
xor
add
cli
jg
cli
insb
xchg
sahf
rcll
repz
push
ljmp
rcrb
loopne
pop
add
fmul
std
xchg
cltd
mov
orl
inc
xchg
pop
adc
xor
test
lret
out
jbe
shlb
mov
inc
and
hlt
jbe
stos
rclb
push
out
enter
add
jl
popl
push
add
and
shrl
push
clc
push
repz
daa
das
leave
add
icebp
mov
sub
mov
je
cmpsl
fisttpll
cmp
stos
mov
subl
cmpsb
jb
cmp
inc
popa
push
sarl
dec
push
fxch
test
fidivrs
outsb
repz
rcl
push
mov
pop
xor
les
or
cmp
or
or
and
ljmp
mov
xor
scas
cltd
notl
outsb
pop
and
jo
jmp
dec
jne
dec
outsl
pop
push
lahf
mov
inc
mov
sti
add
cmpsl
dec
movb
rclb
inc
loope
shrb
mov
add
out
add
ljmp
call
dec
test
cmp
lods
lahf
push
dec
sub
shl
add
xchg
sub
pop
xor
push
dec
pop
inc
data16
repnz
mov
and
mov
daa
fldln2
out
loope
ds
jae
jge
dec
mov
push
mov
jne
dec
mov
xchg
shll
jl
insl
jae
rolb
rolb
mov
xchg
mov
fs
push
inc
push
adc
push
insl
sbb
stos
pop
dec
xor
test
jnp
popf
cld
xchg
jmp
int
cltd
outsl
jae
dec
mov
mov
sbb
leave
push
mov
cmp
addl
push
bound
sbb
popa
pusha
test
arpl
fs
mov
jle
in
fcmovu
out
push
dec
lret
je
or
cwtl
push
cli
out
fisttpl
mov
pop
fisttpl
mov
test
fimuls
int
push
xchg
xchg
pushf
add
sti
dec
lock
pop
and
xchg
fwait
or
pop
jmp
jmp
mov
arpl
bound
mov
add
fcoms
or
test
sahf
sahf
fistps
ficompl
jl
jl
jle
dec
adc
outsb
shl
loop
cmp
ljmp
jecxz
gs
adc
mov
shrl
mov
jne
rorb
adc
jmp
rcrl
repz
mov
decl
jnp
mov
stc
rolb
push
jnp
inc
pop
xor
test
dec
stos
repnz
in
ds
xor
jbe
inc
iret
lret
fmuls
mov
jb
mov
fsubl
dec
sub
jg
test
dec
lahf
cmpsb
lea
mov
das
jnp
inc
repz
aas
add
lret
leave
and
rcrl
push
xor
or
pop
mul
add
stos
popf
test
add
pop
mov
or
jno
adc
inc
imul
push
es
push
cli
push
hlt
outsl
movsl
in
lcall
gs
mov
lods
inc
add
sgdtl
and
push
pop
sbb
pop
and
fwait
sbb
iret
sti
fistl
inc
cmpsl
leave
je
pop
test
mov
cmp
push
mov
mov
div
sbb
lret
cmc
push
xchg
int
pushf
mov
mov
inc
xchg
lods
inc
pop
push
andl
icebp
dec
fldz
test
mov
sub
shlb
mov
mov
xor
dec
leave
orl
insl
fdiv
dec
das
inc
add
stos
jecxz
addl
nop
inc
or
dec
int3
aaa
push
sbb
jb
add
lea
bound
fldcw
int3
mov
fmulp
test
call
rclb
scas
fnstcw
mov
push
in
clc
sub
push
cmpsl
nop
fimull
mov
aam
mov
pop
push
jo
ljmp
push
push
jno
push
inc
xor
aam
add
popf
mull
pop
pop
popl
jno
nop
push
push
jne
gs
mov
dec
rclb
mov
inc
fisubrl
fimull
push
iret
daa
lcall
sub
flds
push
daa
lahf
jp
cmpsb
xlat
inc
nop
hlt
daa
adc
dec
pushl
jle
add
mov
sbb
scas
mov
iret
lea
repz
outsb
jae
jae
cmpsl
out
cmp
push
call
adc
or
les
sbb
xor
jp
sbb
call
fdivl
sbb
mov
adc
push
xor
xor
sbbb
rcrl
data16
cmpsb
inc
imul
jge
mov
cmp
push
adc
dec
mov
inc
gs
xorb
outsl
pop
icebp
add
xlat
mov
lcall
and
fcoms
popa
call
ds
dec
or
adc
repz
js
mov
adc
mov
daa
pop
fs
out
fbld
jo
adc
push
mov
pop
push
and
cmp
sahf
fs
and
jne
ret
push
sbb
lret
lods
sbb
jecxz
xlat
mov
add
push
pop
dec
inc
ja
mov
pop
lds
jmp
sub
ds
xchg
cmp
adc
pop
rcrb
xchg
movsb
std
mov
mov
arpl
nop
mov
fidivl
xor
inc
pop
mov
mov
push
mov
pop
sarl
xchg
or
iret
xlat
ja
jb
repz
pop
add
sub
int3
dec
or
xchg
into
add
sub
popf
stos
sbbb
push
and
dec
push
sbb
cmpsl
in
mov
push
js
fnstenv
jb
jnp
mov
push
cld
mov
pop
push
lahf
lods
fdivrs
and
shrl
jbe
inc
lcall
lret
mov
repz
mov
push
dec
aam
pop
cmp
jne
imul
push
or
es
es
in
lods
ret
xchg
mov
and
cmp
push
movl
jnp
mov
insl
pop
push
sub
xor
jge
lcall
push
xor
jmp
add
andb
jmp
mov
test
ljmp
xor
pop
leave
cmp
sbb
push
sub
pop
fstl
push
pop
outsl
and
pop
or
loopne
lods
adc
cltd
xchg
sub
jae
dec
dec
loop
or
imul
push
das
ja
clc
xor
nop
mov
inc
ret
fs
movsb
dec
mov
loope
push
jne
push
or
ret
xchg
mov
inc
or
sub
inc
push
clc
in
ror
push
imul
inc
mov
movsb
aad
je
mov
lahf
sbb
xorb
cmp
mov
imul
dec
scas
cmp
fwait
subl
sbb
aad
push
adcl
les
jae
push
lcall
stc
adc
mov
xchg
push
out
cltd
es
dec
jge
lods
push
pop
nop
and
fadds
incb
dec
jp
pushf
add
cmp
add
sub
push
xlat
xor
jnp
sub
push
add
lock
add
sub
xchg
inc
sbb
or
repz
mov
sub
roll
xchg
dec
fwait
aam
inc
add
popf
fbld
and
sbb
lahf
jecxz
sbbl
ret
rclb
cmc
sbb
in
test
mov
repz
push
sbb
filds
sbb
mov
movsl
jp
ljmp
dec
or
rcl
loopne
add
cmpsl
cld
xchg
lcall
dec
xor
sarl
jg
ja
add
dec
jne
lcall
dec
mov
sbb
sbb
fimuls
mov
lods
jg
movsb
andb
inc
xchg
mov
add
out
jno
leave
imul
mov
cmp
pop
mov
mov
call
sub
cmpl
sbbl
fs
enter
inc
and
cli
xchg
sub
xchg
xchg
cmp
cmpsb
sahf
jnp
fs
jmp
pop
jb
gs
pop
jbe
sbb
int
in
and
pop
dec
pop
test
repnz
in
nop
in
mov
cmp
popa
mov
cmp
in
inc
out
push
and
dec
jb
xor
lods
packuswb
insb
add
pop
sub
jmp
sbb
out
dec
push
push
jne
sti
add
aas
daa
imul
sbb
iret
test
orl
imul
jno
sub
lret
cmc
daa
imul
push
movsb
and
cwtl
mov
out
jnp
add
sub
andb
pop
shr
iret
push
call
subl
fyl2x
test
xorb
repnz
inc
pop
jecxz
mov
push
lods
and
mov
lds
sbb
mov
inc
inc
popf
sbb
push
adc
out
xlat
xor
jo
gs
mov
pusha
cltd
loopne
out
out
sbb
mov
mov
adc
or
out
mov
andb
jnp
push
sbb
stos
cltd
cmpsb
pop
inc
shll
lock
sub
xor
test
mov
push
add
or
or
mov
push
and
xchg
ja
xchg
adc
cld
sbb
popa
xchg
lcall
mov
in
jno
popf
out
sbb
and
sub
or
jno
jle
mov
cmp
push
sub
mov
out
int3
pop
add
fisttps
inc
xor
fisubrs
jnp
adc
lods
or
cld
and
fnsave
sub
inc
add
xor
adc
stos
in
mov
jle
sub
rolb
mov
pop
ds
inc
sbb
cs
aas
push
xchg
ljmp
data16
pop
outsb
lcall
pop
in
sub
popf
arpl
jp
jecxz
dec
aas
int
inc
jb
lret
int3
lret
pop
mov
inc
cmp
cld
and
and
or
sbb
cmc
cmpsb
sbb
dec
je
xchg
ficoms
imul
or
cmpsl
or
cmpsb
cmp
sti
xchg
daa
popf
es
mov
test
mov
xor
in
adc
mov
outsl
mov
lcall
pop
fbstp
mov
aaa
cmp
cmp
push
iret
jae
fidivrs
cwtl
adc
xchg
hlt
aas
lods
rcl
or
out
sbb
arpl
icebp
lods
outsb
das
cmp
push
mov
pusha
lret
ret
pop
loopne
xchg
xchg
fs
movsl
jbe
mov
mov
jge
test
mov
popa
mov
leave
inc
movsb
push
into
jmp
inc
mov
mul
push
dec
adc
mov
jp
jae
sti
push
sub
mov
push
mov
pop
inc
test
jmp
andnps
mov
sub
xchg
pusha
add
dec
pusha
xchg
cs
mov
adc
sbb
sub
andl
mov
scas
mov
imul
jg
jge
pop
sti
inc
adc
inc
mov
sub
xlat
bound
dec
pop
adc
or
mov
inc
addr16
mov
mov
lods
pop
or
adc
mov
call
mov
inc
lods
dec
xlat
push
data16
sahf
sbb
stos
int3
or
sbb
in
cld
mov
test
loop
xchg
enter
jge
scas
xlat
bound
in
cmp
xor
mov
rclb
fidivrs
sub
mov
add
adc
aas
inc
divl
mov
fimuls
shrb
xchg
sarl
pop
inc
icebp
mov
and
mov
je
insl
jo
adc
enter
ficompl
fsts
mov
scas
mov
sub
test
lods
sub
hlt
xchg
es
test
cmovge
push
adc
dec
xchg
jge
jle
mov
mov
mov
lahf
out
xor
mov
add
fimull
loope
bound
jns
xlat
mov
mov
shll
xchg
into
sub
dec
clc
rolb
leave
and
loope
xchg
cmp
cmp
add
xchg
repz
movsb
and
cmp
test
aaa
leave
push
dec
add
sbb
mov
dec
pop
dec
addr16
xchg
ret
mov
mov
dec
popf
aas
pop
jmp
dec
inc
cmc
shll
faddl
shll
out
push
inc
pop
xor
test
sbb
imul
iret
arpl
and
push
or
inc
loop
repnz
mov
inc
cmp
sbb
lret
mov
decb
pop
mov
daa
inc
push
fwait
or
sub
leave
subl
dec
in
pop
and
sbb
and
sub
inc
push
lcall
mov
into
pop
pop
fildll
outsb
push
outsl
xchg
dec
movsl
mov
xor
cmpsl
xchg
lds
mov
dec
push
xor
adc
pop
mov
push
fs
js
lods
inc
mov
aad
ljmp
xor
clc
add
dec
clc
dec
mov
dec
and
pop
aam
xor
daa
adc
add
jo
jbe
lcall
pop
sbb
jmp
ret
shll
mov
xchg
or
add
cmp
xchg
scas
mov
movsl
cwtl
fisttps
hlt
cld
adc
aad
sub
sub
std
dec
xlat
dec
sub
minps
inc
jge
ret
sbb
adc
fwait
movsl
inc
jmp
imul
xacquire
pop
lret
and
lea
xlat
in
gs
push
xchg
addl
test
xor
fidivrl
mov
mov
rclb
push
test
jecxz
or
pop
fbld
push
in
fiadds
mov
jo
imulb
jo
cmpsb
mov
out
les
lret
fdivs
int
add
xchg
adc
dec
scas
cmpsb
pusha
add
xchg
xor
testl
fucomip
sbb
sub
xlat
ja
xor
lds
std
out
scas
scas
add
sbb
sti
pop
mov
jmp
fsubl
pop
shlb
xlat
adc
xchg
inc
inc
sbb
pushf
inc
push
cmpb
cmpsb
dec
or
sub
push
mov
fwait
dec
mov
xor
lods
ret
imul
mov
xor
fidivrs
movsl
xor
mov
xor
imul
or
jns
in
jp
xchg
jmp
fmulp
dec
rclb
addr16
cmp
lods
xor
das
scas
mov
push
or
jns
cmp
jo
dec
inc
out
and
in
mov
stc
pop
gs
jo
divl
sub
jns
cwtl
imul
mov
jle
xchg
pop
in
jg
push
dec
jo
add
cld
push
ljmp
aaa
push
cltd
sarw
in
xchg
jns
adc
repz
cli
xor
cmpsl
xor
test
aad
repz
inc
adc
adc
sub
cmp
mov
inc
insl
and
inc
push
sar
cmp
in
scas
mov
push
lods
test
add
jbe
lods
cli
aam
dec
push
fdivrl
xor
and
mov
pop
mov
daa
ja
hlt
cwtl
jno
xor
mov
jle
pop
test
sbb
pop
cs
adc
data16
popf
and
mov
jns
push
mov
ljmp
mov
pop
jae
ja
pop
sub
lcall
repnz
test
pop
pop
or
std
mov
jge
sahf
mov
inc
dec
push
xchg
gs
adc
scas
aad
sbb
or
sti
pop
in
jnp,pt
mov
clc
push
xchg
sahf
inc
cmp
mov
mov
xchg
sbb
pop
jo
shll
xchg
out
imul
jb
add
mov
test
je
sub
scas
fsub
es
dec
lcall
ret
push
sbb
xchg
out
ljmp
cmp
xor
xor
xchg
in
inc
mov
jae
xchg
push
xchg
jae
jle
pop
cs
lret
xchg
adc
sbb
mov
xchg
dec
aam
test
rolb
addr16
jae
aam
adc
pop
jns
pushf
stc
push
add
out
sar
test
lods
push
outsl
lods
push
pusha
lods
movsl
pop
fs
cbtw
jbe
les
sbb
fsubr
inc
lret
jb
dec
cwtl
imul
jecxz
cmpsl
mov
mov
loop
xchg
jbe
aas
pop
in
push
sub
push
ss
lods
ds
push
dec
push
movsb
hlt
xor
pop
push
jp
xor
mov
push
sub
adc
lahf
movsb
in
int
addr16
jle
or
pop
dec
sahf
sbb
jae
out
pop
loop
into
or
ficompl
mov
dec
int
sarb
xlat
lock
out
adc
push
outsl
movsb
or
pushf
push
mov
sub
negb
ret
mov
or
iret
mov
dec
jge,pt
sti
sbb
iret
inc
scas
sbb
inc
push
sub
push
lahf
sahf
inc
and
shrb
cmp
pushf
and
mov
out
aam
mov
push
adc
shll
loope
int3
lods
mov
push
dec
jbe
test
mov
ror
stos
pop
stos
push
add
xor
sub
notb
ss
test
subb
loope
inc
cmp
out
int3
xlat
or
insb
lahf
cmp
xor
and
push
mov
into
dec
mov
imul
add
aam
inc
mov
sbb
mov
mov
mov
add
cmc
jbe
jb
leavew
lcall
sub
and
out
sbb
insb
fsubrs
xchg
add
and
lcall
add
pop
xor
dec
dec
icebp
ret
xor
scas
in
scas
push
xor
movsl
sub
adc
push
cmpsb
push
dec
pop
loopne
mov
fistpll
test
push
dec
daa
nopl
pop
push
cltd
es
cli
hlt
pop
fs
pop
mov
lret
pop
sbb
mov
andb
popa
pop
addr16
push
dec
sub
inc
push
mov
fldt
mov
jle
pop
push
jg
inc
pop
test
shlb
cli
cmpsl
jnp
pop
lea
xlat
jl
mov
dec
add
mov
sub
addb
adc
inc
sbb
xlat
push
lds
jle
adc
loopne
mov
std
inc
mov
mov
test
aas
stos
movsb
fldl2e
xchg
push
and
add
test
sbb
sbb
xchg
test
pop
add
push
insb
xchg
into
jb
and
mov
push
out
pop
orb
mov
inc
xchg
mov
insl
and
fiaddl
cmp
inc
pop
sbb
test
cli
jnp
cld
sub
loop
xchg
jns
pop
pop
notl
fadd
cmc
sbb
mov
push
mov
push
add
cmp
or
lods
fadds
bound
mov
inc
dec
fistps
movsb
ss
movsl
aam
out
ljmp
mov
pop
fnstcw
sbb
cmp
int
xchg
int
cwtl
leave
and
pop
xorl
mov
lock
pop
xchg
mov
fistpl
inc
fimull
outsb
mov
jge
gs
cs
fwait
test
add
sub
pushf
push
mov
lcall
daa
jmp
mov
add
jg
jae
int
insb
dec
testb
mov
popf
adc
ja
mov
out
mov
ljmp
add
ss
repnz
inc
out
sub
insb
rorl
lea
mov
clc
or
mov
inc
fpatan
xchg
lcall
out
lock
in
loopne
pop
sarb
shll
mov
mov
cwtl
add
test
pop
ret
movsb
xchg
ss
rol
pushf
mov
mov
mov
pop
ret
cmp
sbb
adc
push
inc
cmpsl
insl
dec
out
mov
loope
sti
xor
and
hlt
fdivrs
mov
mov
insb
and
or
dec
cmp
mov
or
stc
dec
std
rorb
inc
test
scas
out
dec
dec
pop
insl
sbb
sbb
cmc
clc
jecxz
inc
xchg
pop
imulb
cwtl
mov
clc
or
adc
into
lds
out
in
push
lods
pop
data16
dec
mov
shr
scas
dec
or
mov
hlt
push
mov
data16
repz
xchg
pop
mull
aaa
cmc
inc
je
gs
xlat
fstl
sti
xor
mov
xchg
mov
in
fdivp
xor
push
mov
mov
jo
and
daa
xor
xchg
orl
cmc
lea
pop
je
aaa
pop
adc
stos
sub
xchg
push
pop
dec
inc
subl
cmc
mov
inc
ret
bswap
xchg
scas
popf
mov
mov
add
dec
fists
stc
xchg
int3
testb
out
sub
push
repnz
push
mov
lods
test
xchg
addb
icebp
adc
cmp
in
popa
fldpi
inc
add
sti
dec
repz
jb
out
mov
dec
call
xor
pop
mov
cmp
mov
and
or
test
and
stos
data16
inc
cmc
loope
lret
sub
iret
fwait
shl
xor
pop
sub
sbb
pop
test
cmpb
pop
test
mov
dec
aas
nop
shll
int3
ljmp
pmaxub
int
iret
mov
mov
and
in
rcrb
ret
xchg
jno
xchg
insb
jae
fildl
sub
adcb
inc
mov
fwait
pop
mov
or
mov
test
hlt
out
cmp
in
jbe
push
xchg
jae
mov
mov
pusha
enter
cmp
negl
icebp
push
es
cmp
lock
nop
or
inc
inc
ficoml
repnz
bound
imul
js
lcall
xor
jns
and
sbb
loope
scas
pop
sub
insb
mov
imul
pop
es
iret
ret
fwait
mov
shlb
mov
sub
add
mov
xchg
loopne
icebp
fwait
iret
jg
jl
dec
mov
jbe
fdivs
xchg
jo
sbb
aad
jl
negl
mov
scas
xor
mov
sub
pop
dec
cmp
aaa
js
aas
mov
mov
and
or
rcrb
add
test
mov
inc
and
push
lret
imul
loop
sub
enter
and
add
sbb
cmpsl
sbb
jne
js
lods
mov
cmp
scas
add
loop
pop
and
pusha
mov
sbb
inc
loop
adc
adc
sti
or
movb
loopne
sub
dec
psubd
xchg
shlb
dec
jb
test
adc
mov
mov
pop
and
jmp
xchg
mov
dec
insb
fs
scas
or
lret
and
ficompl
jb
das
mov
mov
cmp
lds
fwait
add
and
fs
std
insl
int3
push
arpl
push
das
xchg
test
push
mov
fstps
pop
push
int3
xchg
cld
dec
xchg
inc
roll
fsubr
xchg
mov
lret
mov
rclb
lock
das
dec
dec
fldenv
cmp
mov
or
xor
int3
cmp
pop
mov
into
std
cmp
xlat
fstps
xchg
jae
lret
xor
push
mov
call
push
rolb
mov
sti
xor
lahf
add
inc
mov
ret
xor
xor
std
testl
cltd
sbb
pop
call
jl
mov
jmp
pop
pop
clc
fidivl
cld
test
sub
ret
add
subb
pop
add
add
fstpl
xor
inc
mov
jo
fistpll
cmp
fstps
pop
mov
xorb
movsb
sub
xor
test
fcom
adc
ficompl
data16
jecxz
jbe
sub
cmp
cmc
mov
xlat
mov
pop
lock
fisttps
adc
and
int3
xchg
mov
out
fnstcw
xor
imull
lods
sbb
ds
daa
pop
es
inc
ror
jb
lods
in
mov
cmp
bound
ds
push
mov
cltd
int3
out
xchg
les
das
or
jge
pop
pop
sahf
cmpsb
test
mov
out
push
fistpl
dec
jge
inc
pop
insb
lock
fsubp
in
mov
and
mov
scas
lcall
nop
adc
cltd
push
out
push
or
out
lods
cmc
push
js
add
xor
stc
aam
test
xchg
xor
mov
adc
repnz
das
ficoml
std
push
push
cwtl
ss
dec
out
inc
lods
lcall
add
jmp
out
mov
je
cmc
cli
loopne
lret
push
aam
sbb
movl
jne
xor
lret
lods
or
push
and
dec
xor
sbb
js
scas
cmp
push
adc
xor
and
adc
cmpsb
mov
push
adc
fwait
cld
les
out
inc
std
dec
jno
pextrw
movsl
bound
pop
mov
shrb
mov
xor
pop
jmp
jne
sub
cmc
dec
mov
mov
lahf
xor
adc
jo
enter
lods
mov
push
out
add
call
lods
es
repz
ja
ret
or
pop
lock
adc
cltd
push
into
lods
push
out
aas
aas
mov
pop
jecxz
insb
imul
or
mov
cmp
lds
popa
movsb
jbe
mov
mov
xor
lock
mov
insb
dec
test
pop
lods
inc
mov
mov
dec
out
jo
outsb
xor
divb
clc
inc
insb
pop
movsl
or
cmpsb
mov
es
add
cmp
sbb
cmp
enter
in
lods
cmp
xchg
and
fldenv
jl
mov
push
pop
in
stc
add
in
push
mov
les
xor
sar
mov
sti
xor
xor
sti
test
test
lret
clc
test
cmp
mov
add
testl
and
stos
add
jmp
jne
mov
mov
sub
jmp
mov
mov
pushl
pop
pop
in
or
pop
mov
fildll
popa
out
or
sarl
adc
pop
dec
push
test
dec
or
push
push
sbb
sarl
push
int
jne
into
jbe
int3
dec
sbb
jns
xchg
js
mov
xchg
dec
sub
dec
rcll
pop
push
cld
inc
jne
dec
loop
xor
sbb
les
fdivrs
mov
pushf
push
inc
adc
push
cwtl
xor
mov
or
sbb
mov
scas
mov
mov
lods
jle
push
dec
mov
mov
adc
mov
xchg
adc
jns
jecxz
repz
gs
subb
cmpsb
push
pop
test
imul
push
inc
xor
dec
inc
ds
xchg
jmp
cli
loope
mov
jnp
push
and
fisubrl
push
cmp
jbe
add
dec
call
insl
out
fucomi
js
sbb
leave
repnz
xchg
lods
fldt
pop
je
xchg
jb
add
call
sbb
in
cltd
xchg
mov
cmpsl
xor
push
mov
mov
pop
mov
mov
pop
repnz
into
jnp
ret
or
xor
add
test
jmp
mov
mov
dec
aam
push
mov
cmpsl
add
sbb
call
mov
lds
jle
and
daa
and
mov
sbb
push
test
sub
jg
or
pop
sbb
add
xchg
icebp
cmova
sub
imul
dec
jo
mov
or
push
sarl
aad
and
mov
das
lcall
mov
stc
sbb
inc
xchg
and
and
cltd
lahf
jnp
sbb
ja
inc
pop
es
sahf
lock
mov
and
xor
bound
mov
popf
jl
out
int3
mov
push
mov
and
pop
popw
rcl
push
fdivrl
test
adc
mov
clc
add
cmp
lods
or
sbb
jmp
dec
imul
cmc
dec
call
or
ja
mov
cli
dec
loopne
dec
push
insl
mov
mov
jnp
iret
xlat
je
sub
orb
test
jp
lods
inc
inc
push
or
arpl
cmc
cmp
shll
xchg
hlt
lods
sbb
dec
enter
shl
fdivs
sbb
push
or
lock
push
addl
out
mov
push
xchg
out
jle
xor
sub
mov
aad
add
jl
push
xor
or
jbe
es
sub
aad
sti
push
xor
inc
inc
sbb
in
ror
mov
cmp
mov
push
xlat
xchg
outsl
outsl
inc
push
jns
shll
or
pop
testb
ret
sbb
inc
pop
fwait
popf
jle
daa
pop
les
pop
aam
adc
sub
and
sub
flds
iret
inc
mov
or
out
dec
cwtl
test
xor
push
jl
roll
fstp
sub
mov
js
sbb
cmp
pushf
andb
outsl
bound
outsl
or
lods
jge
sub
jp
and
sub
xchg
xchg
xchg
icebp
dec
cmp
movsl
mov
mov
sub
dec
jp
xor
arpl
inc
inc
ret
pop
es
pop
cld
dec
sub
popf
fwait
push
mulb
cli
add
into
and
mov
ret
add
fdivs
sti
orb
lret
outsb
repz
push
push
mov
ds
addr16
cmp
out
inc
xchg
arpl
lds
xchg
in
xor
or
jmp
or
or
jmp
pop
ljmp
in
mov
sbb
adcb
sbb
lahf
fwait
mov
jae
inc
mov
testb
pushl
inc
cmp
push
dec
jle
out
sub
shll
pop
dec
mov
jge
xor
pop
pusha
mov
dec
cmp
pop
dec
clc
xchg
cmpl
mulb
sub
movsb
imul
cwtl
xor
adc
aas
cli
or
lea
add
xor
push
lock
iret
fbstp
xor
ljmp
imul
push
cmp
cmp
xchg
adc
inc
leave
popf
jnp
xor
nop
adc
xchg
in
jns
data16
mov
inc
fsubs
sub
mov
dec
out
mov
mov
flds
pop
pop
fs
mov
cli
out
inc
lea
loopne
dec
sub
jecxz
push
pop
pushf
addr16
dec
sbb
pushf
lods
sub
add
sbb
xchg
adc
in
lea
imul
cmp
mov
lret
add
lret
data16
pop
aam
cmp
cltd
cmp
jmp
idivb
inc
mov
jb
pop
les
sub
clc
sub
shrl
aaa
mov
stos
pusha
jbe
mov
xor
or
movzwl
les
loope
pop
xchg
call
outsb
jno
sub
sbb
fildll
lcall
add
mulb
adc
mov
or
ret
sbb
mov
push
cld
adc
and
pushf
hlt
out
and
inc
mull
mov
sbb
aad
dec
pop
or
cmove
scas
jnp
cmp
sbb
jb
and
testl
insl
pop
jb
dec
xchg
or
pop
or
out
or
mov
sbb
repnz
mov
fdivrs
adc
xchg
mov
imul
mov
pop
testb
pushf
jge
mov
pusha
bound
mov
orps
xor
jns
dec
lods
or
mov
dec
dec
dec
xor
outsb
cmpsb
mov
dec
scas
inc
inc
inc
mov
and
inc
pop
ret
mull
adc
xchg
sahf
push
cmp
pop
das
pop
andl
dec
scas
push
push
xchg
ret
std
add
cmp
iret
xchg
or
repz
mov
xor
sub
dec
ds
jbe
cwtl
xchg
mov
or
mov
scas
push
out
mov
inc
loop
movsl
loop
sbb
daa
and
fnstsw
push
addl
inc
cmp
imul
cmpsb
or
adc
insb
mov
lods
adcb
push
aaa
xor
dec
jns
add
add
pop
aaa
xchg
cwtl
mov
idivl
stos
pop
inc
dec
xchg
cwtl
cmp
pop
imul
stos
mov
shrl
lea
js
out
nop
iret
sbb
jp
dec
push
inc
xchg
push
mov
or
stos
jo
icebp
cmp
dec
lock
xchg
mov
gs
mov
jbe
push
jp
dec
jmp
enter
imul
loopne
dec
imul
idivb
sub
push
out
nop
nop
and
mov
push
inc
inc
fistps
loop
scas
sbb
mov
xor
push
rolb
ret
sub
inc
in
fcompl
mov
xchg
sbb
lret
stc
inc
cmp
dec
mov
mov
mov
xchg
ds
or
inc
imul
lods
add
push
mov
adc
push
movsb
or
in
and
push
jne
stc
mov
rcr
enter
xorb
pop
dec
pop
outsl
xor
inc
lods
fimuls
jl
sub
adc
push
ljmp
addr16
lds
ret
out
push
xchg
loopne
adcl
ja
arpl
outsb
icebp
sbbb
xchg
int
jl
and
int
les
adc
xor
and
std
xchg
divb
jne
jmp
push
cmp
mov
sti
cmpsb
cmp
mov
add
lock
lret
aam
fistpll
cmpsl
dec
mov
dec
pop
clc
add
push
inc
sbb
das
xor
xor
mov
dec
lods
icebp
mov
sbb
cmp
push
iret
lcall
jno
push
jl
xchg
push
xchg
mov
pop
cmp
or
mov
std
and
insl
testb
push
mov
push
aam
lahf
enter
and
mov
xor
sbb
js
mov
das
mov
daa
push
out
sub
push
int
test
mov
mov
out
sahf
shrb
pop
sub
ficoml
and
arpl
pop
in
iret
lods
inc
mov
mov
cmp
lcall
mulb
lds
mov
movsb
aaa
sbb
inc
adc
pop
and
dec
dec
push
push
scas
mov
xchg
pop
jo
pusha
and
jns
mov
push
jp
push
fs
icebp
dec
inc
mov
adc
sub
jge
repnz
jmp
fwait
jb
and
cltd
mov
pop
sub
cmpsb
ret
arpl
cmp
and
push
mov
adc
cld
push
popf
jl
mov
lea
push
xor
mov
jae
add
or
stc
outsb
push
dec
sbbb
mov
adc
lods
mov
insb
mov
or
stc
es
add
pop
xchg
sub
inc
and
pop
ret
cmpb
dec
xchg
out
xchg
pop
imul
fs
mov
adc
test
cmp
pop
test
jg
cld
pop
or
jno
cs
xorl
or
lea
or
leave
scas
sub
test
mov
stos
shlb
aad
mov
mov
fildll
sub
pop
push
or
or
mov
xchg
cmpsl
ret
mov
popa
xchg
xchg
std
loope
mov
mov
cmpsl
or
shlb
es
dec
out
jo
mov
cmp
incb
cltd
aas
add
mov
dec
flds
adc
mov
leave
leave
mov
ret
loopne
mov
je
mov
fcmovbe
dec
loopne
pop
push
pop
or
fsubrs
jbe
fwait
push
ss
out
pop
andb
adcb
mov
inc
mov
icebp
push
lock
ja
lret
xchg
mov
mov
push
sub
and
pushf
xor
into
mov
sbb
jno
adc
fwait
sub
pusha
adc
sbb
cltd
pop
lret
inc
inc
push
cs
lods
test
test
outsb
jno
push
sbb
mov
repz
mov
fidivl
mov
mov
out
pop
cmp
testl
ds
lret
and
int3
inc
fisttps
mov
cmp
ficoms
xor
pop
inc
inc
jg
and
mov
cmpb
lcall
scas
push
cmpsb
ret
out
mov
sbb
cmp
xor
adc
imul
or
loop
cmp
xor
xor
xchg
mov
imul
cmc
lret
adc
xor
fst
dec
cmp
add
pop
iret
mov
test
dec
mov
test
xchg
cmc
pop
mov
and
mov
push
jnp
ds
aas
pop
cmp
and
xchg
xchg
ficoml
roll
jmp
inc
ss
inc
rol
out
mov
pop
or
or
fisttpl
lds
sub
bound
inc
or
mov
fbstp
inc
xor
repz
push
das
sti
mov
pinsrw
jne
adc
jmp
sti
or
xchg
xor
lahf
or
inc
fdivrl
pop
and
adc
cltd
cmp
insb
lret
mov
loopne
jecxz
xchg
add
aaa
cmp
inc
shll
xchg
movsl
repz
mov
xor
sahf
aam
gs
push
pop
cmpsl
into
fsubs
push
mov
imul
or
lds
out
clc
xchg
push
mov
ret
hlt
stc
ja
mov
cmpsl
push
enter
inc
push
stc
mov
mov
xorb
js
pop
in
add
push
popf
repnz
repnz
fstps
and
mov
jp
xchg
scas
push
mov
jl
pop
jo
test
pop
and
test
les
int
adc
cmpsb
out
dec
mov
lea
iret
jecxz
cmp
dec
jl
call
pusha
or
sahf
mov
test
xchg
xchg
push
inc
and
mov
mov
in
dec
adc
int3
xchg
cli
mov
std
pop
mull
leave
cmp
aam
sbb
repnz
lods
lcall
stos
adc
jb
sbb
rolb
or
or
pop
dec
js
xchg
sti
jge
pop
iret
out
lock
and
test
movsb
push
lcall
mov
and
xchg
aaa
test
daa
pop
lods
mov
xlat
rolb
push
push
nop
data16
test
sub
fcomp
mov
orb
aaa
dec
lcall
out
icebp
lcall
mov
mov
mov
or
inc
inc
mov
xchg
xlat
push
int
js
daa
cmp
adc
repz
aas
xor
jl
xchg
jne
mov
xor
sub
dec
aad
enter
cmpsl
mov
jg
pop
add
test
lock
push
loope
mov
inc
dec
mov
es
fstps
repz
push
fidivs
shrb
mov
in
mov
jmp
adc
jp
push
cmp
lods
jae
sub
lds
pusha
testb
dec
shr
cltd
sub
dec
cmpsb
cmp
les
cmpsl
loop
mov
jmp
cmc
mov
mov
iret
lock
xchg
push
xor
loop
adc
jb
loopne
jmp
movsb
push
mov
sbb
adc
movb
push
addr16
stos
adc
popf
nop
push
adc
test
js
mov
pop
es
aam
insb
ja
mov
push
mov
mov
xor
jne
or
ret
jns
scas
sti
dec
cmpb
stc
movb
jb
xor
jns
aaa
sbb
xor
mov
push
loop
push
popa
test
xchg
scas
or
stos
pop
lea
jbe
scas
rolb
pop
lret
ljmp
cmp
inc
repz
xor
dec
shll
jle
mov
mov
mov
in
test
mov
addb
mov
ficomps
dec
adc
call
sbb
mov
mov
insl
or
sbb
ret
xorb
std
out
scas
xor
dec
lods
jecxz
aas
inc
imul
int3
sahf
loop
pop
inc
xchg
or
aam
roll
sbb
inc
push
stos
lods
or
call
mov
and
mov
in
mov
push
pushf
mov
fucomip
add
imul
into
jno
mov
in
movsb
movsl
clc
jae
mov
ss
jno
add
adc
loop
scas
inc
cwtl
or
inc
bound
outsb
je
stos
push
pushf
out
cmp
fstpt
pop
lods
and
scas
jl
leave
test
shll
sub
jnp
out
test
repnz
fs
imul
and
mov
inc
movsl
loope
jns
jne
jge
push
cs
pop
sbb
roll
xchg
fyl2xp1
sti
mov
mov
cli
mov
js
xor
cmp
iret
adc
jo
mov
sahf
popf
call
in
mov
mov
popl
pushf
inc
mov
mov
fdivs
dec
decb
cmp
mov
mov
sub
xor
pop
mov
stc
mov
in
into
mov
in
jb
incb
pop
adc
sbb
mov
aaa
gs
enter
arpl
add
std
pusha
xor
jnp
push
cmp
sub
fs
mov
and
ja
adc
cmp
jp
jg
fimuls
sbb
subb
inc
das
cmp
movsl
mov
clc
adc
push
adc
das
pop
xchg
pop
lds
add
jbe
mov
rcrl
mov
sahf
sbb
mov
jae
mov
shll
into
sub
xor
sub
inc
xlat
mov
inc
outsl
iret
into
out
ljmp
je
aaa
pop
pop
cld
push
and
aam
or
sti
mov
repz
sti
adc
add
hlt
mov
ret
test
push
mov
aam
mov
out
popfw
mov
push
lcall
cli
push
xor
adc
inc
sahf
add
adc
test
addr16
mov
add
push
insl
cmp
testl
dec
mov
inc
add
int3
and
call
cmp
outsb
push
lea
lret
dec
roll
sub
push
lock
fisttps
mov
mov
jge
cmp
push
jl
outsb
fcompl
or
xor
aad
push
inc
pop
scas
int
dec
jbe
bound
sbb
jmp
test
cmpb
sbb
pop
sbb
mov
sbb
mov
xchg
loope
inc
mov
loopne
pop
pop
or
dec
push
sbb
cli
or
test
jge
push
mov
jne
inc
insb
pop
dec
mov
loopne
adc
dec
cmp
inc
stos
inc
aam
dec
pop
add
in
xorb
in
cmp
cmp
dec
in
inc
mov
dec
inc
mov
add
adc
xor
add
and
mov
or
push
lahf
fs
sub
or
cwtl
hlt
jno
in
or
pop
fwait
xor
movsb
push
sbb
pop
add
adc
jbe
xchg
sub
sub
mov
and
jb
adc
mov
sub
movsb
out
mov
das
test
adc
jbe
xchg
ljmp
cmp
or
inc
mov
sbb
mov
xchg
cmc
push
mov
imul
ret
push
sbb
outsb
dec
mov
xor
pushf
pop
les
leave
out
pushf
cmp
pop
icebp
xchg
mov
cmp
iret
adc
std
sub
lods
sub
mov
popa
fidivrs
int3
sub
jo
clc
int
cmpsb
fsub
push
int3
cmpsl
std
jns
out
sbb
sbb
scas
push
pop
jp
sbb
test
push
test
xchg
mov
xchg
or
add
mov
mov
cmp
test
rclb
pop
sub
mulb
outsb
mov
fxch
mov
pop
jl
dec
fistpl
cmp
mov
and
fdiv
cmc
mov
aas
subb
mov
lret
xchg
mov
add
sbb
jp
pusha
out
mov
xlat
sbb
shll
rcll
mov
adc
pusha
pop
pop
jnp
loopne
lds
or
pusha
push
mov
pop
jg
xchg
cmpl
xchg
mov
xchg
cs
inc
add
push
mov
das
jno
sbb
add
paddsw
ja
loope
xchg
sahf
mov
and
cmovne
sbb
aam
repnz
bound
mov
mov
inc
jge
roll
out
stc
les
imul
push
arpl
jne
test
ja
imul
xchg
mov
or
cmp
pop
sub
jl
adc
inc
xchg
ret
xor
clc
adc
je
nop
ret
and
rol
ss
subb
pusha
mov
sahf
nop
mov
mov
cmp
mov
test
pop
xor
xchg
xchg
cmp
fsub
inc
cmp
or
or
aas
cld
and
sbb
cli
insb
andb
sbb
add
scas
xchg
jge
push
movsl
jae
lret
and
xor
inc
repnz
add
xchg
notl
pop
sub
jnp
cmp
xor
sbb
inc
mov
sbbb
rolb
inc
mov
je
and
inc
rclb
or
testb
inc
or
mov
test
push
xlat
add
ss
aad
lcall
xchg
or
shrb
sbb
inc
dec
test
fstps
rol
sbb
mov
fldl
je
lret
xor
arpl
loopne
inc
xlat
std
enter
repnz
pop
push
inc
test
arpl
icebp
pop
lret
sbb
add
cli
sbb
cmc
fwait
jmp
das
and
into
loop
into
sub
jne
outsb
mov
imul
push
pop
mov
adc
inc
lret
stc
mov
lahf
lsl
push
int3
stc
and
mov
scas
decb
pop
stos
mov
cmp
pop
mov
pop
push
shll
leave
push
sbb
add
jecxz
cmp
add
cmp
adc
ficoml
xchg
or
imul
xor
outsb
inc
out
in
scas
adc
lods
cmp
iret
mov
jne
push
inc
mov
stos
mov
lods
cmp
arpl
test
adc
or
je
insl
push
enter
cs
or
out
mov
les
enter
pop
add
pop
xchg
and
test
shrb
and
popf
mov
jl
ja
repnz
mov
inc
enter
aas
std
pop
rclb
push
fbld
cmp
pop
pop
js
jp
cmp
repnz
adc
cmp
push
xchg
sub
xor
sarl
dec
test
cli
repz
sbb
test
test
fldlg2
lea
fcompp
ss
xchg
cltd
inc
inc
mov
andl
insb
mov
dec
leave
sti
and
nopl
ds
xor
jle
adc
xlat
add
xchg
jle
ljmp
rcll
sbb
add
adc
arpl
insl
add
push
push
jge
das
inc
cmpsl
push
add
pop
sbb
mov
lret
mov
xchg
divl
add
pushl
push
or
jns
ffree
adc
xor
sub
pop
popf
jle
or
jge
push
out
es
jo
or
and
jo
add
jo
nop
fdivrl
sti
dec
sub
in
pop
test
call
mov
pop
xchg
push
iret
mov
xchg
cmc
jp
pop
push
cmp
mov
xchg
test
sbb
bswap
js
sbb
sbb
and
xlat
int3
jecxz
xorb
enter
dec
mov
icebp
shlb
call
ja
or
lds
jg
sahf
pop
jl
sbb
je
push
mov
sar
adc
sti
jnp
mov
in
in
rolb
inc
ja
mov
les
xchg
scas
mov
xchg
or
sub
sti
pop
xor
ret
xchg
sub
fmuls
pop
loope
and
or
mov
pop
scas
cld
or
sub
fcoms
or
push
mov
das
das
cmp
insb
or
adc
scas
shll
sub
xchg
imul
sbb
gs
int
push
push
add
pop
push
mov
dec
add
sbbl
lods
sub
mov
fprem1
cmpsb
cvtps2pd
popa
xchg
xor
pop
mov
push
loop
cmpsb
sbb
xchg
test
test
sbb
test
xchg
out
test
push
pushf
outsb
jo
jae
mov
xchg
xchg
push
mov
mov
repz
lods
push
in
in
or
imul
cmpsl
add
jg
test
sub
xchg
inc
push
jecxz
movsb
adc
jae
jae
mov
mov
jl
pop
lret
adc
add
push
push
rorl
addr16
or
push
add
mov
mov
lock
pop
cwtl
rcll
push
mov
dec
in
fistps
in
mov
dec
repnz
and
dec
stos
call
bound
sbb
and
pop
ffreep
rcrb
and
mov
xchg
mov
push
add
sahf
inc
ds
rcll
in
or
movsb
pushf
adc
inc
lret
call
scas
shlb
mov
xchg
dec
clc
lock
mov
adc
xchg
iret
mov
repz
divl
mov
ret
jmp
dec
dec
aas
mov
lret
cli
sub
daa
sahf
xlat
push
movsb
ret
pop
mov
or
push
sti
aaa
xchg
loopne
imul
sbb
jns
push
mov
inc
sbb
pop
pop
push
aam
mov
into
imul
div
add
fs
nop
cs
mov
pop
xchg
dec
inc
mov
mov
cmpsb
fwait
or
mov
enter
adc
jnp
jo
popa
orb
movsb
in
or
cmc
sbb
mov
daa
fildll
pop
push
dec
mov
sbb
lahf
test
xorl
dec
ljmp
pop
imul
cmc
imul
cmc
push
mov
hlt
and
sbb
add
aam
int3
imulb
pop
or
or
outsl
rorl
cs
xchg
in
les
adc
sbbb
movsb
scas
sarb
in
inc
or
xchg
adc
push
xor
inc
ret
lods
sbb
hlt
push
and
cmc
jbe
xchg
in
jge
mov
filds
pushf
inc
inc
push
jg
inc
sbb
stc
cs
pop
push
xor
pop
inc
add
mov
dec
cmp
xchg
movsl
rcrl
stos
cmp
dec
push
fcoms
push
mov
pusha
outsb
mov
out
fmul
pop
mov
insb
pop
cmp
adc
push
jg
push
dec
cltd
sub
jl
stos
popa
inc
fnstsw
and
mov
sbb
rcr
push
cmc
stos
adc
arpl
test
sub
pop
pop
loop
pop
xchg
xchg
sbb
inc
pop
addr16
cs
and
shrd
mov
into
test
lea
mov
xor
into
loope
sub
hlt
mov
push
mov
push
fmuls
cmpsb
push
inc
xchg
lods
aad
jl
pop
movsb
mov
add
jmp
dec
lods
xchg
add
in
jne
data16
jnp
adcb
dec
pop
sbb
dec
mov
cmp
repnz
jb
pmaxub
mov
testl
sub
icebp
js
mov
and
push
mov
lea
and
sbb
and
cwtl
cmpsl
ror
lods
nop
lock
push
inc
sub
aad
mov
adc
and
sub
and
jmp
xchg
mov
pop
pop
js
es
addr16
std
mov
mov
mov
cmp
mov
mov
and
fmuls
in
cwtl
shrl
or
fcomp
out
loope
mov
loop
addr16
cltd
mov
bound
dec
mov
mov
cmp
xor
pop
scas
pop
lods
push
repz
lret
test
int
jne
mov
in
mov
ret
test
push
mov
outsl
mov
das
pop
fisubl
pop
xchg
sahf
xchg
mov
into
hlt
imul
in
mov
sbb
inc
jp
xor
mov
std
adc
sbb
mov
push
das
sbb
ret
sbb
mov
mov
mov
ret
rcr
mov
ret
xchg
jmp
dec
imulb
fldl
jge
push
out
mov
dec
aas
dec
cmc
pop
data16
js
jg
sub
shrl
cmp
add
mov
mov
shll
sbb
mov
iret
push
mov
cmp
xlat
out
scas
jp
es
jl
mov
push
in
cld
jne
adc
lret
xchg
sbb
fbld
popl
and
ds
lds
imul
lds
jmp
sub
mov
rcll
out
loope
push
pop
std
jns
push
jne
jo
test
shlb
add
sub
lods
imulb
mov
nop
js
mov
cs
pop
cmp
out
jl
jns
push
cwtl
pushf
xor
arpl
xor
mov
int3
test
fstps
jo
cli
test
sub
std
xor
int3
subl
lock
add
pop
fstpl
pop
pop
jge
push
xchg
xor
mov
inc
dec
xor
inc
push
mov
mov
pusha
jp
shrl
subb
insb
gs
inc
inc
xchg
dec
out
jb
mov
mov
aas
add
xor
mov
cld
ss
int3
pop
shlb
push
ss
xchg
loope
cli
pop
add
jecxz
pop
clc
lcall
sbb
xchg
out
and
in
clc
sar
out
push
inc
jbe
jecxz
sahf
inc
pop
ds
pop
xor
xchg
pop
mov
inc
xchg
jmp
stos
mov
lret
popf
xchg
xchg
cld
mov
cwtl
sub
jle
push
lock
inc
fstpt
mov
jo
loope
inc
mov
jne
sub
outsb
sbb
arpl
fnstcw
arpl
inc
push
test
jecxz
jns
dec
cmpsb
inc
popa
aad
test
dec
or
shrb
jb
inc
ret
mov
int3
fsubrs
inc
notl
test
xor
pop
dec
push
and
outsl
dec
dec
addb
add
in
xchg
imul
mov
cltd
lock
cld
mov
mov
push
in
mov
mov
pop
cli
stos
pop
out
push
xor
or
pushl
xchg
out
fldt
mov
iret
jb
sbb
xchg
mov
jle
mov
or
mov
and
scas
pop
inc
inc
stc
mov
cs
repnz
insb
jp
mov
push
xchg
bound
jbe
add
cmp
or
outsb
aad
clc
mov
xchg
out
popa
lock
rcrl
shl
adc
jae
les
imul
sti
inc
push
jl
jns
mov
addb
adc
lods
loope
jge
std
mov
mov
pop
aas
mov
mov
nop
jg
push
mov
mov
jecxz
xchg
out
mov
cmpsb
sub
and
jg
mov
mov
jge
loopne
test
xor
push
inc
jecxz
int3
xchg
lahf
test
xchg
push
andb
add
stc
xchg
mulb
dec
stos
aad
fcomp
lods
push
clc
pop
push
faddl
add
dec
xor
inc
pop
mov
mov
and
arpl
or
jmp
xlat
scas
out
pusha
ds
in
mov
inc
repnz
xchg
hlt
fsubp
xchg
jae
dec
jp
scas
mov
push
cmpsb
pop
jge
or
cmp
popa
xchg
aam
jge
mov
fwait
addr16
mov
dec
out
xchg
mov
xlat
pop
test
jno
sbb
inc
or
outsb
movsl
daa
nop
add
jo
inc
test
add
add
mov
mov
mov
push
scas
movsl
mov
imul
shlb
mov
mov
inc
divl
or
rcrb
xchg
and
test
imul
in
ret
push
stc
aaa
shlb
or
adc
aas
push
mov
xchg
repnz
sahf
mov
xchg
inc
out
xchg
adc
cmpsb
sub
imul
dec
sub
lods
push
sub
xchg
loopne
sahf
das
enter
test
icebp
test
fistpl
dec
aas
lods
dec
rorb
stos
popf
push
cmp
sbb
rorl
jecxz
lods
jno
mov
mov
repnz
imul
stos
mov
xchg
clc
mov
cmp
sub
jecxz
sar
xchg
push
scas
fwait
xchg
rolb
fs
or
int
xor
in
and
pushf
sbb
leave
mov
jp
mov
lfs
ss
cmp
fwait
push
insb
es
cwtl
add
sar
fildl
cvtdq2ps
out
xor
repnz
mov
cmp
aam
lods
jb
push
or
decl
xchg
xchg
adc
xor
in
movsb
jp
loope
sbb
lds
fwait
dec
lea
mov
cwtl
mov
xchg
jecxz
jns,pt
mov
cmp
bound
cmp
jl
adc
outsb
jno
leave
bound
dec
sbb
mov
jne
add
loope
jge
sti
mov
stos
ret
das
jnp
mov
dec
movsb
xchg
and
inc
push
mov
enter
dec
shl
insb
dec
cmp
push
inc
fmull
rorb
push
data16
dec
stos
ret
lcall
repz
repnz
xor
xchg
mov
push
xchg
mov
outsb
inc
pop
dec
dec
insb
pusha
mov
or
ret
jmp
mov
push
push
test
aaa
pusha
lods
out
jnp
mov
push
fwait
pop
pop
push
lods
js
jae
mov
movsl
int
imul
push
nop
lret
ja
aad
mov
xchg
inc
mov
add
mov
int3
cmp
lods
and
stos
pop
out
cli
adc
dec
repz
inc
pop
or
cmp
movsl
scas
sub
jnp
jmp
jle
jp
out
call
jb
int3
int3
ret
sub
scas
sbb
loopne
push
xlat
jle
je
ja
push
dec
lahf
jb
pop
leave
pop
mov
test
push
ret
mov
inc
pop
fsubrl
cwtl
jns
mov
fs
lock
jnp
add
outsb
mov
mov
insb
push
pop
shlb
dec
cmp
fs
rcrl
les
xor
mov
dec
jl
push
sbb
ds
inc
push
adc
rclb
pop
das
lock
sub
enter
cltd
jae
adc
sub
repnz
ret
lahf
mov
dec
jge
sub
pop
andb
hlt
inc
test
test
mov
jl
or
mov
mov
inc
cs
mov
adc
pop
ret
cmpl
cmp
andb
dec
xchg
jbe
mov
adc
out
dec
xor
jl
aad
mov
pop
mov
outsb
cmp
in
enter
cmpsl
shl
comiss
and
imul
mov
sbb
loope
push
addr16
loop
and
in
cmp
loope
and
or
mov
out
les
lahf
sbb
icebp
shrl
and
mov
inc
into
clc
xchg
ss
aam
cmc
xchg
mov
push
adc
pop
jmp
leave
call
dec
push
fistpll
leave
pushf
mov
decl
lret
movd
sub
lock
fst
movsl
aas
xor
rolb
cld
xrelease
fadds
inc
mov
pop
shlb
inc
movsl
jmp
bswap
inc
pop
dec
addl
and
rorb
test
pop
cwtl
inc
jecxz
pushf
int3
pop
jmp
mov
addr16
in
adc
mulb
sbb
mov
frstor
xlat
fwait
je
adc
sahf
jecxz
mov
pop
dec
mov
push
inc
cli
xchg
dec
jl
scas
or
add
adc
fstps
rolb
out
aam
inc
cs
fstl
repz
in
lods
add
fmul
sbb
loopne
lea
into
mov
or
push
insl
jae
popf
lea
or
lods
xchg
sub
mov
into
inc
push
mov
cmc
pop
pop
loop
nop
out
and
xor
movsb
cmp
or
sbb
mov
xor
mov
add
xchg
lret
adc
fwait
std
or
inc
lods
lahf
mov
sbb
pop
sbb
ljmp
pop
jns
lret
fwait
je
fistps
jnp
mov
cmp
mov
outsl
jne
xlat
jae
mov
jecxz
cmc
cwtl
sbb
fistpl
test
mov
stos
push
sub
mov
cmpsb
popa
pop
mov
loope
xchg
sbb
into
jb
push
and
xchg
imul
cmp
push
mov
pushf
movsb
aad
jl
stos
out
or
or
and
leave
pushf
cld
out
add
jns
mov
movsb
xorl
or
std
and
adc
jle
mov
test
insb
ret
addb
ss
pop
cmpsl
pop
fimull
stos
adc
mov
test
adc
aam
add
mov
push
jecxz
loop
or
sti
sti
xor
jno
fadd
test
jne
mov
out
stos
add
pop
loope
mov
sbb
sbb
sub
push
insb
mov
shll
push
jp
xor
xor
ret
mov
adc
adc
push
jae
sbb
adc
ljmp
lret
xor
jmp
jne
and
es
in
mov
fldcw
lods
stc
shlb
notb
dec
pop
pushf
out
hlt
or
jae
sbb
shlb
stos
adc
xlat
das
xor
adc
or
fidivs
add
add
jecxz
sub
insl
mov
inc
push
jns
xchg
int
lds
mov
pusha
inc
call
in
fcmovbe
mov
cwtl
and
leave
push
sbb
fsubl
jnp
je
adc
or
sub
dec
test
shlb
cmp
xchg
jmp
call
xchg
ds
or
adcl
in
xor
roll
sub
inc
jbe
je
and
shl
mov
fsubl
je
test
push
xor
hlt
cmp
movsl
push
sbb
xchg
and
sub
inc
xchg
das
xchg
sbb
xlat
pop
imul
sti
mov
call
dec
mov
dec
mov
imul
ljmp
mov
test
xor
shrl
add
jo
outsb
push
and
pop
ret
jle
mov
icebp
jnp
xor
fstps
popf
push
les
lahf
dec
adc
cmp
add
mov
lcall
xor
mov
xorl
mul
int3
xchg
or
lcall
sub
cwtl
fldcw
popa
repnz
cmp
mov
sbb
and
sahf
int3
bound
fiaddl
nop
push
push
outsl
xor
pop
rcll
push
sub
lds
xchg
xor
jg
call
add
mov
ja
stos
and
jecxz
xchg
inc
sahf
ss
test
rcl
into
addr16
cmp
repnz
sbb
popa
ss
mov
pop
jae
ja
lret
inc
int
inc
dec
scas
test
inc
lods
stc
mov
inc
shll
sub
in
push
pop
test
jae
addr16
and
ljmp
push
push
mov
pop
out
cld
rorl
addr16
repnz
std
fnstcw
push
ja
cltd
test
cld
ljmp
cmpsl
daa
sbb
mov
mov
test
fbstp
or
pop
jns
les
cmpsl
mov
pop
nop
mov
aam
ret
cmp
jns
or
or
sub
imul
mov
dec
rorl
xorl
jb
mov
dec
pop
insl
cmc
cmc
mov
jnp
cld
mov
insl
mov
mov
ljmp
pop
cmp
adc
jp
pop
mov
push
mov
xor
out
mov
je
mov
xor
or
cmp
ficoml
add
xchg
scas
and
fistpll
into
pop
jge
lahf
dec
or
iret
adc
dec
xchg
hlt
xor
xchg
pusha
adc
imull
mov
cld
sbb
in
sbb
inc
ja
dec
mov
shrl
js
testl
xchg
add
daa
adc
pop
push
add
pop
inc
mov
cwtl
fldenv
dec
loop
xor
xor
stos
xor
fsubrp
lret
and
mov
sub
push
cmpsb
or
fs
cs
adc
sbb
int
ljmp
fildll
mov
mov
sub
pop
hlt
jmp
or
ret
out
adc
dec
sub
leave
jo
push
inc
mov
mov
sbb
lret
inc
jns
outsb
sahf
sub
sub
jmp
xchg
fsubrl
xchg
in
mov
je
pop
std
dec
aad
mov
jne
js
mov
xlat
aam
mov
lahf
lds
mov
loope
adc
cmp
add
xorl
pop
and
int3
sahf
int
mov
fistps
out
jle
sti
loopne
xchg
mov
jnp
push
in
stos
mov
mov
mov
movsb
cmc
push
sbb
sahf
dec
xchg
cmc
dec
and
adcb
mov
shld
cs
mov
cmp
ja
test
rorb
xchg
xor
lds
jp
add
push
ret
test
clc
out
sub
fcoms
enter
push
pop
test
mov
imul
or
sarl
int
jp
pushf
int
push
jno
es
adcl
mov
xor
jp
xchg
test
add
cmp
sti
xor
repz
fwait
pop
dec
jne
push
fisubrs
mov
mov
cltd
mov
xlat
or
lahf
pop
sarl
insl
mov
mov
add
mov
pop
stos
movsb
cmp
es
leave
jle
rol
test
pop
ja
imul
xor
movsl
mov
int
or
jmp
mov
inc
fidivl
mov
data16
inc
orb
xchg
xchg
mov
bound
inc
clc
dec
jecxz
xchg
cltd
ss
fidivl
movsl
or
aaa
jnp
adc
aaa
push
sub
add
int
movsl
xchg
shlb
js
sahf
adc
adc
lds
mov
mov
dec
mov
mov
or
out
pushf
push
bnd
cmp
cltd
mov
clc
and
pushf
or
loop
adc
cmc
pusha
fwait
pusha
adc
stc
fldenv
mov
es
and
pop
jo
insl
xchg
arpl
rclb
push
mov
mov
mov
lods
aad
add
leave
gs
out
mov
jns
movsb
mov
out
es
ss
in
xor
sub
sub
sbb
jo
dec
xchg
pop
fisttps
cmpsb
or
addl
cli
cmpsb
in
cmpsb
sub
push
sar
adc
sbb
mov
cvttps2pi
outsl
scas
loopne
sbb
or
mov
mov
ss
cmc
add
ret
mov
ljmp
xchg
stc
daa
arpl
sub
push
sbb
aam
xchg
fimull
sub
iret
push
xor
addr16
pusha
test
fisttps
pop
rcrl
mov
insb
sub
arpl
outsl
fildll
push
pop
rclb
mov
sbb
xlat
lret
jge
imul
ja
push
std
jge
push
mov
dec
repnz
jno
arpl
push
mov
je
aaa
rcrb
in
sbb
mov
jne
scas
pop
orb
xchg
cmpsl
leave
push
mov
in
and
ficoml
sbb
xchg
sub
and
shlb
sub
and
mov
jmp
adc
aas
or
inc
adc
test
fidivrs
mov
in
cmpsl
in
jmp
push
xchg
in
xchg
jbe
popa
cmpb
pop
fdiv
sub
frstor
add
subb
aad
lahf
gs
daa
inc
loop
addl
push
in
in
dec
stc
mov
pusha
into
in
adcb
inc
imul
push
cmp
and
push
lea
pop
sbb
and
jne
mov
scas
movd
repz
sbb
cmpsb
inc
in
or
orb
and
jbe
add
or
mov
adc
lcall
bswap
mov
mov
pop
mov
and
insl
xor
pop
push
ja
inc
mov
stos
mov
or
mov
enter
pop
jo
loope
jle
xchg
loope
ficoml
divl
xlat
in
cvttps2pi
dec
fcoms
sbb
frstor
loopne
test
cs
and
cmp
pop
std
loopne
bound
insl
jne,pn
loop
iret
outsb
and
adc
int3
call
mov
test
jge
push
js
dec
pop
mov
das
sub
movsb
clc
mov
pusha
push
out
adc
xchg
mov
les
popa
push
add
lcall
jns
lret
mov
and
cmp
shrb
cwtl
adcb
dec
ds
sub
pusha
cmc
sbb
movsb
jg
mov
fildll
stos
dec
jb
imul
xchg
adc
xor
iret
mov
pop
xor
jnp
out
gs
ret
lds
arpl
mov
mov
or
cmp
out
or
pop
out
jne
or
mov
or
sbb
cwtl
dec
dec
jbe
loope
ss
repz
outsl
sub
jae
add
and
and
cmp
sub
into
pop
jecxz
sbb
out
das
pop
test
mov
pop
cmp
pop
mov
or
dec
xor
mov
mov
sbb
pop
jp
sbb
mov
pop
mov
scas
cltd
or
pop
xor
sbb
mov
outsb
push
cld
mul
dec
loopne
pop
fidivs
sub
outsl
pop
movsb
mov
fcomip
or
jmp
jno
inc
and
xorl
jle
dec
mov
xor
cmpsl
add
movl
pop
mov
pop
xor
das
sbb
adc
jecxz
jo
pop
outsb
iret
lret
adc
and
cmp
inc
leave
xorb
lds
cmp
push
xchg
sbb
outsl
testb
sub
add
xlat
into
and
jb
jns
xor
popf
out
mov
cltd
pop
and
in
jg
outsb
out
jno
xorl
jg
stos
imul
mov
ror
push
mov
out
icebp
call
pop
stc
mov
fwait
sbb
add
jmp
dec
je
sbbb
inc
in
ret
pop
imul
cs
jae
daa
daa
int3
mov
xor
mov
call
mov
js
clc
xor
mov
insl
lahf
xchg
xchg
pop
sub
jl
xchg
inc
inc
sub
fisubs
mov
pop
lret
shll
in
dec
aam
or
mov
cmpsl
mov
xchg
aas
addb
push
fdivp
mov
mov
jo
pop
or
and
nop
fs
add
pop
stos
lret
fidivrl
inc
arpl
jo
orl
and
xor
dec
sub
int3
adc
mov
ficompl
je
or
mov
jno
aam
bound
push
das
fisttpl
enter
pop
fisubl
add
out
cmc
dec
shr
cwtl
xor
mov
fs
testl
push
enter
dec
jmp
jl
jo
jno
sbb
mov
push
ss
lahf
popf
loop
sbb
xor
sub
or
rcl
jne
out
cld
ss
adc
cmpsb
mov
outsl
cltd
popf
dec
mov
xor
hlt
pusha
pop
xor
enter
push
pop
and
cmp
mov
popa
sbb
mul
mov
and
popf
test
mov
inc
cmp
mov
fnop
call
pop
lret
dec
dec
inc
test
jnp
jmp
das
pop
aas
push
inc
out
xchg
xchg
cmpsb
adc
repnz
or
or
enter
aaa
loop
mulb
jb
dec
movsb
sbb
ljmpw
mov
stos
test
cmp
xchg
pop
fwait
xor
jecxz
aad
fisttps
add
or
inc
mov
sub
cltd
iret
mov
pop
pop
adc
dec
dec
xchg
pushf
jecxz
xchg
dec
and
fnsave
add
out
jge
push
cmp
sahf
mov
cmovg
cmp
inc
aam
stos
je
stos
lahf
mov
fwait
test
iret
push
shlb
dec
cld
cmp
addb
and
mov
mov
into
push
adc
inc
lock
pop
xchg
stc
sti
mov
sub
push
pop
sub
dec
std
outsb
push
jnp
dec
add
cmp
mov
cmp
orl
das
out
inc
shll
sub
add
sbb
clc
test
cld
push
or
pop
cs
ss
fbld
sbb
addr16
lods
xchg
and
xchg
dec
out
mov
and
mov
iret
xor
xchg
cmp
jae
test
insb
lret
mov
cli
mov
cld
mov
and
lock
iret
dec
pop
jge
lock
ja
sysenter
repz
cmpsb
std
dec
pop
push
xor
xor
or
sub
jne
repnz
mov
push
sbb
mov
sub
test
movsb
int
mov
ss
xor
push
lret
xchg
mov
fistpll
push
pushf
ljmp
pushf
dec
out
loop
arpl
loopne
add
xchg
outsb
pop
daa
cmp
nop
das
or
das
adc
push
in
mov
xor
lcall
stc
adc
xchg
scas
pop
xchg
negb
add
stos
das
std
je
dec
xchg
xchg
mov
nop
imul
lcall
lods
cs
shlb
nop
cli
clc
stos
bnd
add
insl
lock
adcl
add
or
jecxz
mov
or
xchg
push
aam
or
insb
sti
pop
loopne
inc
cmc
lret
insb
inc
mov
mov
icebp
shrl
shrl
out
sti
sbb
mov
dec
repz
adc
adc
nop
add
and
pop
bound
mov
shrl
mov
mov
jecxz
popa
fidivrl
out
jecxz
insb
lret
xchg
adc
orb
mov
mov
mov
sbb
or
clc
mov
mov
dec
jle
clc
xchg
jno
xor
mov
lcall
push
mov
imul
inc
lea
pop
pushf
or
arpl
or
sbb
cltd
dec
in
adc
bound
loop
and
xor
movb
pop
inc
stos
xchg
push
es
and
aad
push
xor
add
cmp
xchg
aaa
xor
sahf
cmp
daa
pop
leave
lods
dec
xchg
ds
xlat
push
lahf
inc
ja
mov
mov
out
ss
imul
push
das
jge
mov
jl
add
outsb
dec
push
repz
jl
std
jecxz
cmp
or
int
xchg
ljmp
push
jg
mov
push
ljmp
jnp
pop
xor
xchg
xor
jae
push
or
clc
and
addr16
dec
pop
dec
sarb
data16
movsl
fldl
adc
inc
das
add
mov
push
scas
in
adc
imul
adc
dec
jo
xchg
xor
std
nop
mov
aam
out
imul
testl
sub
fisttpl
mov
push
dec
iret
mov
sub
aad
sub
test
andl
xchg
and
insb
sbb
sbb
mov
jae
and
cmpsb
mov
sbb
dec
xchg
aas
mov
mov
lcall
push
inc
aaa
mov
xchg
mov
data16
les
pop
imul
jb
xchg
adc
leave
imul
bound
pop
sti
push
repnz
dec
inc
cmpsl
in
pop
xor
pop
push
daa
sarb
ret
adc
outsb
mov
dec
push
and
lret
xchg
movsb
add
stc
adc
loop
js
test
shll
dec
or
inc
outsb
dec
adc
lods
mov
insb
test
jb
js
out
jp
lret
pop
cmpsb
push
jno
push
shr
add
jno
jae
add
es
js
cmpsl
aam
pop
and
xchg
int3
mov
pop
mov
and
add
icebp
xor
stos
push
push
pop
pop
xchg
cmp
fldenv
jne
hlt
cmpsb
adc
dec
sarb
fnsave
mov
pop
ret
pop
dec
cld
es
in
arpl
cmp
or
rcll
ljmp
and
sub
mov
jl
jbe
test
nop
ss
mov
mov
les
jnp
scas
test
pushf
cmp
ror
pushf
cmp
lahf
dec
scas
dec
icebp
sahf
add
mov
arpl
cltd
pop
repz
sub
ss
and
dec
cmpsb
sbb
pop
in
div
out
lock
lahf
inc
and
fwait
or
stos
aam
lds
sbb
inc
mov
pop
xchg
ret
cmp
arpl
sbb
mov
fstpt
mov
push
arpl
sahf
push
pop
and
sbb
jns
or
out
adc
push
in
mov
repz
leave
jecxz
inc
add
lods
jae
shlb
fcmovu
jle
jp
rcr
in
fwait
das
outsb
js
sub
fists
shr
add
fstpl
mov
mov
xchg
inc
fildl
movsl
adc
lods
loopne
andb
imul
fstp
add
mov
jnp
scas
sbb
imul
xchg
js
jge
lods
mov
inc
mov
rolb
pushf
mov
negb
divl
cs
cmpsl
pop
or
xchg
js
mov
jl
sub
test
std
xchg
es
mov
pop
mov
in
xchg
add
mov
mov
ja
xlat
and
pop
aaa
add
sahf
call
and
addb
xchg
xchg
mov
jne
mov
push
fcom
add
jge
xchg
movsl
add
jbe
mov
jbe
sub
aam
xor
into
add
push
ret
sbb
lcall
in
jbe
xchg
inc
sub
sbb
jns
icebp
arpl
fnstenv
out
sti
dec
jo
xchg
and
test
outsl
movsb
xchg
xlat
sbb
add
sub
fwait
ja
push
push
std
mov
push
jnp
inc
inc
pop
fists
push
mov
cmp
loope
mov
cmp
jo
add
and
scas
lock
jl
xchg
add
dec
xor
pop
pop
popf
inc
or
inc
mov
push
jecxz
cmp
lahf
arpl
xor
es
repnz
jmp
mov
lods
sbb
add
push
call
loop
pop
clc
mov
dec
jne
mov
es
push
popa
es
imul
dec
rcrl
ficoml
fwait
das
pop
ficompl
fsubl
jae
mov
push
pop
lahf
jns
ret
push
jp
pop
sbb
xor
xchg
jg
fimuls
add
sub
cmp
repnz
int
xchg
in
xchg
dec
pop
and
sbb
pop
mov
ret
out
push
leave
jge
lahf
inc
or
outsb
dec
shrl
mov
fidivrl
xor
mov
clc
aad
cmp
cmp
jb
push
dec
inc
jno
addl
inc
scas
xor
cmp
xlat
or
xchg
add
out
sbb
and
insb
icebp
fwait
push
leave
jnp
sub
push
sbb
jecxz
cmp
mov
fwait
mov
and
dec
scas
sub
mov
mov
or
pop
xchg
pop
push
mov
adc
fidivl
stc
cmp
jl
cli
movsb
mov
sub
out
ds
inc
and
hlt
loopne
je
divl
clc
mov
push
adc
mov
xor
push
negl
add
cld
icebp
sub
loop
jnp
js
loop
int3
mov
xchg
xchg
negb
in
jb
pop
push
pop
nop
or
jne
into
and
adc
popf
fsub
into
jmp
sti
xor
or
adc
or
mov
loope
jl
ficoml
mov
je
or
or
sbb
lret
out
shr
sub
mov
adc
mov
jo
dec
sub
dec
ss
ljmp
push
arpl
sahf
mov
dec
and
inc
mov
adc
inc
xchg
cli
pop
xchg
dec
xchg
mov
cmpsb
jmp
jmp
mov
mov
dec
inc
pop
iret
mov
mov
lods
cmpsl
xchg
test
bound
js
arpl
cmp
pop
cwtl
test
orl
cmpsb
add
inc
or
fsubl
ja
push
or
pop
xchg
movsl
fadd
ret
jbe
popa
pop
arpl
inc
and
cmp
cs
add
fcoml
cmpsb
adcl
mov
out
cwtl
inc
push
outsb
hlt
and
icebp
lahf
mov
inc
imul
xchg
mov
mov
cmc
mov
mov
les
push
and
or
mov
pop
or
subb
and
test
lods
imul
sahf
insl
fnstcw
cmp
mov
pop
mov
mov
push
mov
pop
cld
jbe
cmp
mov
mov
lods
fwait
fs
lret
jg
stos
xor
in
or
test
sbb
mov
dec
bound
ljmp
sar
mov
sub
andl
mov
jecxz
lcall
daa
mov
cs
mov
inc
cwtl
mov
dec
ror
and
lcall
pop
inc
inc
cmp
outsl
jmp
cltd
mov
lea
push
xchg
stos
fwait
bound
int3
inc
cmpsl
xchg
movsl
cmp
xchg
add
mov
jp
repnz
stc
and
ljmp
xor
mov
cmp
test
or
shll
stos
daa
ret
push
stos
rcll
loopne
xor
pop
insl
int3
and
aaa
pop
jg
rcr
call
inc
stc
and
sub
jbe
cmp
lock
mov
inc
stc
mov
mov
imul
fidivrl
in
outsl
je
jnp
xor
insb
loope
cmp
adc
pop
call
sbb
mov
dec
jo
push
sahf
js
stos
fwait
or
dec
inc
mov
fwait
xor
add
cmp
icebp
inc
cwtl
cmp
loopne
fisttps
movb
cmp
aam
jg
mov
leave
sbb
pop
lret
add
adc
idivb
pop
mov
dec
mov
xlat
gs
imull
sub
or
shll
add
out
subb
mov
fstps
pop
inc
pop
bound
push
sub
rorb
jmp
add
mov
mov
repz
mov
mov
sti
cmpb
mov
popl
test
fbstp
cmp
in
pop
xchg
add
mov
and
jb
paddusw
mov
xchg
cmp
iret
push
add
jo
inc
aad
jle
jmp
mov
mov
or
outsl
data16
xchg
sbb
adc
mov
fcomps
push
push
mov
repnz
loopne
out
xor
adc
mov
xor
mov
jecxz
jg
cld
xchg
lds
or
mov
js
hlt
sub
or
push
pushf
mov
cwtl
mov
shlb
xor
jp
push
mov
adc
leave
cmp
jbe
or
pop
xchg
push
push
jecxz
arpl
sbb
jae
push
jns
adc
pop
inc
jnp
push
dec
xchg
pop
scas
pop
mov
ljmp
mov
mov
int
hlt
or
mov
sbb
sahf
pop
popl
std
outsl
sbb
inc
je
mov
les
adc
jno
and
cmp
in
mov
fldt
jnp
fcomps
mov
vhaddpd
pop
jp
cmp
leave
das
aam
call
iret
pop
js
pop
jno
std
mov
push
mov
popf
sub
call
cltd
sti
shlb
fcmovb
and
mov
mov
in
popa
fisubl
call
imul
std
mov
les
btrl
les
jl
jmp
jg
int3
sti
or
sub
addl
add
cwtl
push
mov
dec
movsb
inc
jne
out
add
cmp
mov
cmp
out
push
adcb
movsb
cmc
push
mov
inc
rcl
sbb
ds
mov
mov
add
fisttps
js
pusha
pop
test
mov
mov
or
dec
js
mov
sub
pop
stos
les
mov
out
mov
sarb
outsl
inc
jb
mov
jg
es
insb
aam
cwtl
fs
pop
and
daa
push
inc
lret
stos
ffree
fidivrl
cmpsl
fbstp
xor
push
and
cmp
jecxz
pusha
repz
and
dec
xchg
or
scas
push
lds
lea
enter
xchg
stos
lret
add
xor
notb
jg
insl
sub
pop
vpsrad
lods
push
imul
shlb
xor
xchg
adc
adc
mov
mov
mov
cmp
sar
and
pop
mov
cmpsl
mov
pop
pop
and
push
mov
xchg
aaa
pop
es
mov
mov
int3
xchg
or
sub
push
mov
xlat
scas
mov
adc
pop
cmp
ret
xchg
pop
imulb
pusha
dec
sub
mov
xor
lods
add
cmc
and
loop
mov
shl
add
xchg
dec
adc
imul
cli
xchg
dec
xor
mov
ficoml
inc
jg
dec
fiaddl
cmpsl
push
push
sbb
xchg
adc
inc
inc
cmpl
mov
cmpb
add
test
insl
fwait
repz
das
mov
insl
inc
add
push
or
cmp
sbb
int3
pop
shll
scas
mov
jno
loope
inc
xchg
mov
ljmp
mov
stos
faddp
loop
jbe
sbb
or
out
cld
and
add
and
lret
mov
cs
jne
pop
test
cmpsl
dec
jb
xor
cmpb
lret
jno
shrb
xchg
cs
or
dec
or
popa
aas
mov
push
shrb
cmp
test
aaa
fistl
sub
jnp
rol
sbbb
lock
push
jne
adc
adc
dec
inc
lcall
add
mov
sbb
aas
and
pop
mov
fs
test
loope
jmp
sub
mov
mov
pushf
lds
in
pop
outsl
push
std
in
fucomip
add
mov
xchg
out
cmpsl
rorb
or
jns
or
fisubrl
fcoml
cltd
lods
dec
xor
fcmovnb
inc
jb
daa
pop
jp
cmp
push
sbb
jnp
js
clc
les
fistl
jne
aam
je
xchg
mov
push
cmpsb
mov
pop
loope
out
mull
daa
cmp
test
adc
and
jb
stos
stos
adc
aam
std
rolb
mov
mov
lahf
imul
pop
mov
call
jp
bound
or
lds
gs
loope
jmp
bound
sbb
adc
int3
jmp
xchg
rcr
inc
jnp
insl
pop
pop
or
jge
sti
and
mov
movsl
add
lods
adc
pop
repz
xor
fcomip
inc
leave
shll
ss
sbb
jo
das
and
dec
cmp
ljmp
mov
and
pop
loope
bound
mov
and
icebp
sbb
and
popf
cmp
xchg
pop
fdivr
pop
jle
mov
sbb
cmp
xor
xor
xchg
fldenv
push
ss
hlt
mov
out
js
adc
movsb
jne
cmpsb
xlat
push
xchg
sub
and
cmp
cmp
js
inc
nop
sub
in
jae
push
push
ret
ret
and
enter
mov
lea
shll
stos
nop
ss
daa
dec
call
sub
scas
jnp
insl
push
mov
in
into
push
popl
je
sbb
sub
jnp
fcomps
cmp
fcomps
mov
push
loop
test
inc
jg
sar
xchg
repz
hlt
jg
jnp
dec
jne
stos
xchg
pushf
sbb
mov
xchg
call
mov
pushf
mov
sub
mov
xor
lds
sti
loop
popa
xor
andl
xlat
in
sbbb
test
push
push
pop
mov
shrl
and
cltd
ljmp
push
sbb
mov
rorl
call
mov
xchg
mov
xor
push
mov
adc
in
test
jmp
nop
xor
rol
pop
sti
pop
loop
or
mov
push
mov
test
test
movsl
fnstsw
lods
std
pop
sbb
imul
dec
jg
jbe
test
fimull
shrl
sti
mov
or
or
fistps
jge
inc
test
fsubrs
jp
xor
xor
fbstp
data16
insb
or
cmp
adc
xchg
inc
xor
out
fwait
inc
sarl
or
mov
push
pop
jp
movsl
dec
jns
sub
dec
or
cs
adc
add
mov
jo
hlt
mov
pop
rorb
in
adc
adc
sub
stos
mov
xchg
mov
pushf
xorl
and
dec
pop
dec
mov
sbb
mov
fcmovne
arpl
mov
rcr
push
xchg
pusha
mov
dec
imul
jns
mov
mov
stos
adc
ss
aam
dec
dec
or
lret
test
cwtl
rorl
aaa
sahf
pusha
lahf
mov
enter
add
pop
adc
mov
add
mov
rcrl
popa
mov
mov
cld
mov
lcall
and
inc
aad
lahf
adc
xor
iret
dec
cltd
lcall
addl
fcomp
sub
test
outsb
scas
and
dec
in
lahf
pop
repz
stc
xchg
add
pop
jb
lahf
ja
pop
jg
inc
dec
movsb
pop
mov
lods
mov
mov
pop
ljmp
stc
cmp
decb
jo
ds
inc
mov
pushf
jecxz
arpl
xchg
enter
inc
mov
sub
stos
arpl
inc
pop
pop
jmp
dec
jb
adc
mov
insl
xor
subb
enter
clc
mov
ret
sbb
rclb
push
push
xchg
popf
add
les
mov
dec
sbb
dec
and
sub
inc
ja
push
ja
pop
mov
adc
mov
sbb
outsb
push
call
lea
xchg
sbb
cld
jmp
mov
dec
push
dec
lea
hlt
add
aas
cmpsl
punpckhdq
mov
push
mov
jne
movsb
loope
mov
fimull
mov
jp
adc
inc
xchg
pop
xchg
sarl
insb
dec
mulb
xlat
fildl
rcrl
mov
xor
movsl
and
out
in
es
adc
fiaddl
add
arpl
imul
mov
inc
gs
dec
inc
mov
push
ljmp
je
mov
testl
adc
outsb
sub
fstp
push
xchg
aas
js
std
jp
sarl
add
and
add
jnp
call
in
incb
pop
dec
xor
jnp
je
xor
push
add
jmp
fiadds
test
shll
and
fs
xchg
mov
jmp
adc
push
xor
adc
lods
adc
inc
add
dec
repz
negb
out
sahf
push
jo
rolb
iret
adc
lods
daa
xchg
xchg
cmp
mov
pop
and
jecxz
enter
stos
adc
sub
icebp
stc
jnp
pop
push
mov
pop
push
cmc
out
js
pop
jo
cmp
int3
cmc
xchg
jmp
jecxz
sbb
aam
push
xchg
adc
mov
push
pop
cmp
hlt
cmpsl
repnz
loopne
pop
xchg
adc
cld
add
add
push
rol
mov
clc
push
fcmove
repnz
test
push
out
adc
mov
fcompl
fs
outsb
pop
xchg
fstp
mov
movb
stos
cmp
idivb
flds
mov
insl
xor
inc
xor
js
push
icebp
inc
das
inc
fimuls
imul
ret
mov
imul
xlat
xor
dec
jnp
push
lds
mov
decb
rclb
push
in
or
pop
mov
mov
mov
in
push
mov
push
xchg
jle
add
out
les
js
adc
mov
pushf
xchg
fs
leave
inc
cmpsl
mov
hlt
dec
jns
insb
lahf
xchg
aad
fidivrl
mov
dec
or
mov
fildl
fimull
xchg
sti
mov
js
pop
test
pshufw
lock
stos
scas
xchg
jge
and
mov
jae
mov
push
mov
insl
cltd
rcrb
outsb
aas
into
enter
ret
or
call
repnz
aad
sub
xor
and
pop
rcll
jge
int
push
leave
mov
out
xchg
xchg
repnz
jne
inc
out
pusha
inc
inc
arpl
aas
and
push
cmc
jmp
fnsave
xchg
les
sbb
xchg
stos
data16
mov
cmp
cmpsb
push
es
aam
rcl
rol
sbb
movsl
es
lods
adc
adc
aam
lret
lret
in
mov
test
loopne
shl
les
cmpsb
negb
xor
fdivrp
adc
aam
test
stos
insl
dec
sub
jmp
sbb
into
cmc
popf
mov
mov
jno
out
jns
sahf
aad
push
movl
aam
scas
xchg
add
in
mov
jecxz
inc
jb
lds
pusha
aad
mov
push
mov
inc
insl
icebp
mov
pop
jns
add
stos
rcrb
inc
push
pop
mov
cmp
sub
pop
xlat
inc
add
inc
mov
addb
adc
push
mov
loope
out
or
inc
stc
jns
mov
jno
xchg
adc
jle
xor
imul
lcall
daa
jecxz
lods
ret
sub
out
mov
jns
dec
cs
inc
dec
adc
insb
popf
xchg
jns
orl
stos
rorb
lret
outsb
sbb
lods
in
dec
push
fs
mov
imul
jne
shlb
push
das
rcl
lahf
lret
std
xchg
mov
pop
sub
xchg
add
push
add
call
mov
cmpsl
cmp
jno
xchg
inc
xchg
out
out
shrl
adc
outsl
mov
adc
pop
and
jae
lods
mov
or
dec
test
adcb
cmpsb
negl
js
daa
nop
nop
je
mov
orb
mov
add
lahf
mov
pusha
xchg
addr16
andb
sbb
mov
cmp
add
dec
xchg
mov
sbb
pop
das
ret
ja
fstpl
sub
mov
fmul
fadd
gs
mov
mov
ret
sub
iret
mov
jmp
scas
subl
jle
in
jne
jo
jne
jge
shl
push
arpl
mov
xchg
out
mov
f2xm1
outsl
inc
lods
cs
ficomps
push
inc
dec
inc
into
sub
push
js
mov
adc
imul
mov
sub
loopne
pop
jne
mov
xor
mov
lock
push
push
and
cmp
addb
imul
mov
cmpsb
ja
rcll
jns
push
fcmovne
and
dec
test
jae
outsl
sub
inc
push
dec
pop
or
lret
jb
movsl
aaa
insl
mov
dec
push
or
jl
push
out
out
xor
xchg
lods
call
dec
loopne
jl
outsl
xchg
stos
xchg
test
fistpl
xchg
les
sbb
dec
dec
pop
dec
xor
jno
hlt
fdivr
jp
insb
scas
xchg
cld
andl
sbb
in
stos
mov
pop
inc
popa
cltd
lret
clc
pop
cmc
out
pusha
jge
loop
xchg
lea
sbb
fwait
shlb
or
adc
scas
out
and
and
pop
push
stos
mov
aad
in
or
in
sbb
mov
mov
and
scas
pop
inc
mov
inc
xchg
in
and
pusha
mov
rcll
adc
xchg
int
cmpsl
lcall
test
xchg
popa
xlat
daa
enter
inc
xchg
fcomip
adc
cmp
jmp
push
adc
mov
jle
or
out
pop
lret
mov
out
jae
movsb
pop
or
and
lret
leave
lahf
cmp
pusha
jl
xchg
jae
mov
jl
dec
test
sub
ljmp
test
add
sub
lea
sub
xchg
xor
shlb
jle
shlb
mov
out
or
pop
pop
outsb
in
sti
imul
push
or
lahf
in
sub
mov
test
dec
bound
fistpll
inc
ficompl
push
inc
jo
nop
in
call
lock
retw
cli
ss
xor
adc
add
sbb
ds
enter
fildll
pop
or
jl
test
cmpb
pop
add
cmpsb
and
nop
push
ja
fld1
xor
dec
cmp
push
fmuls
insl
mov
mov
lock
cmp
rcll
add
mov
ret
jno
add
xchg
pop
stos
sub
add
lods
mov
andb
adc
pop
adc
pop
leave
dec
mov
pusha
mov
mov
inc
scas
pop
stos
cs
dec
test
insl
sbb
leave
stos
xor
jns
push
push
stos
mov
push
std
stos
dec
pop
lods
imul
lods
fisubs
aaa
in
push
push
adc
test
ret
inc
and
or
ret
inc
in
adcl
sbb
adc
push
data16
loope
in
enter
loope
jns
mov
sbb
faddl
sbb
das
sbb
lock
enter
lea
pusha
sub
inc
lods
jno
fdiv
jecxz
arpl
ret
cmp
jae
lret
dec
loopne
leave
jg
cwtl
xor
adc
sub
jo
push
mov
push
or
out
pop
stc
inc
ja
cltd
pop
setnp
xlat
lods
subb
pcmpeqd
cwtl
and
inc
dec
dec
popa
cwtl
nop
stos
movsb
sbb
daa
xchg
out
dec
ret
adc
jnp
push
inc
bound
mov
and
ja
pusha
rcr
xchg
sarb
push
pop
mov
lret
repz
lret
dec
xchg
movsb
sub
lahf
mov
loope
test
jb
sahf
imul
cmp
aaa
jae
xor
test
lret
add
sti
repnz
cmpb
lret
decb
dec
add
mov
jmp
fistl
sbb
fnstsw
pop
mov
mulb
pop
negl
pop
mov
cld
pop
loopne
imul
rcr
pop
fnsave
rcr
sbb
mov
adc
mov
fstpt
sti
and
adc
int
rcr
addr16
sbb
imul
imul
mov
gs
shl
and
sbb
stos
xchg
sbb
rcrb
arpl
add
xor
sarb
fcomps
das
ret
js
faddl
push
sarb
pop
xchg
cmp
sub
mov
sahf
iret
fnstsw
dec
mov
sahf
and
outsb
in
jnp
push
and
inc
test
push
xor
mov
loopne
cmpsl
add
sbb
ljmp
jns
cmpsb
nop
fsubr
mov
dec
xchg
mov
fstps
bound
fildl
loope
out
and
repz
and
insb
push
inc
incl
sbb
xor
psllq
mov
pop
push
clc
mov
fstl
cmp
mov
leave
cltd
and
push
push
in
sbb
cld
insl
cmp
xchg
mov
mulb
mov
inc
cmc
out
and
add
shlb
pop
in
sub
jnp
mov
leave
xchg
xchg
mov
jne
daa
mov
dec
data16
ret
sahf
int
xlat
ret
pop
out
fcompl
pop
or
pop
jns
sbb
jmp
flds
aaa
cmc
std
ljmp
repnz
nop
mov
dec
roll
mov
push
jle
inc
xor
aaa
sub
fs
inc
inc
push
sub
nop
aam
pop
adc
bound
loopne
stc
xchg
xor
sub
insb
fldt
xchg
add
jecxz
andb
fs
pushf
imulb
aad
idivl
xchg
ja
clc
jle
dec
fistpl
mov
jo
or
and
ss
add
push
in
enter
dec
lea
adc
out
jno
ret
jl
cmp
loopne
and
aam
call
cmpsl
pushf
inc
pop
or
dec
mov
fisubrl
repnz
inc
int3
rorb
out
shr
dec
sub
push
rorl
cmpl
xchg
rcr
in
push
sti
or
mov
repnz
xchg
rorb
pop
rol
inc
imul
cmp
jmp
fsubr
push
xor
insb
in
dec
push
and
jecxz
push
insb
push
and
jg
in
or
mov
aas
pop
cmc
mov
sub
xchg
aam
dec
cmp
scas
xor
pushf
rep
insb
sti
xor
sub
push
pop
lock
sub
stos
jmp
mov
cli
xchg
mov
out
xlat
pop
jmp
sbb
popf
rcrl
jmp
test
xlat
icebp
icebp
push
pop
pop
aaa
aaa
pop
fidivrl
xchg
xor
xchg
je
mov
dec
push
dec
mov
mov
stos
mov
xlat
xchg
mov
repz
mov
xor
das
and
mov
das
scas
xlat
std
in
addr16
dec
shl
xor
pop
add
subb
test
sub
popf
add
jl
insb
adc
int3
mov
test
stos
or
xchg
test
cli
in
cmp
mov
addr16
xor
outsl
imulw
jge
xor
push
add
xchg
mov
imul
daa
sub
xor
jecxz
xlat
mov
pop
and
jmp
inc
sbb
mov
and
ffree
mov
pusha
sbb
fdivl
jns
das
sbb
inc
mov
pop
pop
mov
fisttpl
shrl
mov
cmpsl
push
xchg
loopne
xchg
aad
into
shrl
out
adc
mov
adc
jno
shll
mov
mov
loope
xchg
rcr
or
sub
stos
fcoml
jp
sarb
and
lret
aam
andl
jbe
out
inc
adc
int3
xchg
jmp
jb
pop
push
lods
and
mov
jecxz
lods
add
or
aam
xchg
hlt
icebp
add
xor
sbb
xchg
std
push
mov
out
pop
mov
mov
imul
scas
xchg
pop
mov
fimuls
mov
lahf
dec
test
push
pop
gs
push
in
push
pushl
aam
cmc
sbb
push
daa
out
mov
int3
jns
lret
fs
stos
das
mov
jl
cmp
test
xor
cmpsb
and
lock
stc
sub
aaa
jb
mov
mov
add
adc
cmc
push
les
ret
mov
faddl
sub
cltd
je
jnp
lret
ret
and
pushf
pop
adc
lahf
pop
stos
aas
ja
dec
lock
roll
or
jo
push
and
push
scas
bound
clc
mov
les
mov
sub
add
jg
mov
stc
xchg
test
andl
pop
push
push
xchg
fidivrl
adc
incb
jb
es
outsb
push
lea
test
pop
dec
fnstenv
fwait
push
in
push
jne
push
sbb
ljmp
popa
std
into
xchg
adc
mov
gs
aad
mov
or
out
adc
daa
xchg
adc
mov
call
mov
lret
divb
scas
sti
cmp
inc
shrl
and
daa
dec
ljmp
mov
fwait
inc
push
or
inc
fnstsw
lods
sub
imulb
rcl
ja
movsl
sub
xor
mov
cwtl
pop
xchg
aad
xor
or
imul
test
lods
adc
imul
loopne
adcl
mov
fdivs
push
and
adc
sub
imulb
cld
push
pop
pop
sbb
sub
fimuls
ljmp
sbb
dec
pop
dec
jo
in
clc
into
loopne
push
xor
mov
leave
xlat
xchg
outsb
lods
faddp
sti
aam
mov
leave
push
enter
js
adc
es
push
stos
mov
jnp
push
int3
es
int3
pop
xchg
cmpsl
inc
push
orb
mov
mov
add
sbb
sub
adc
jmp
jmp
shll
xor
add
movsb
or
shl
rorb
imul
aad
cmp
imul
mov
adc
xchg
test
test
repnz
mov
inc
sbb
lds
lds
cli
aam
and
sub
xor
out
inc
lret
popa
in
roll
lods
pusha
dec
in
or
jle
cwtl
sub
adc
sub
sbbb
cmp
into
dec
or
rorl
jne
lret
sub
or
jbe
mov
ret
dec
pop
xor
xchg
out
addl
push
movsb
ja
cmc
hlt
out
movsl
stos
pop
or
jmp
mov
jo
sti
fcomps
leave
aas
jno
sbb
in
shrl
cmp
mov
dec
mov
jge
or
ljmp
nop
aas
test
mov
pop
sub
push
xor
mov
shll
inc
movsl
ret
push
xchg
insb
test
dec
cmp
rcr
jmp
test
pop
push
aas
push
call
sub
add
or
push
adc
pop
sub
andl
push
movsl
fdiv
repz
mov
test
data16
jge
jmp
mov
das
filds
insl
lds
push
orl
inc
xchg
inc
cmp
cmpb
xchg
mov
mov
sub
and
sbb
adc
pop
mov
add
std
pop
dec
je
mov
into
xor
fcomps
xor
fbstp
fsubrl
jbe
jno
cmpl
cs
cwtl
popf
sbb
or
push
mov
mov
inc
sahf
les
adc
mov
push
jl
in
icebp
adc
push
dec
ljmp
pushl
sbb
fimull
imul
cli
cmc
loopne
fwait
cwtl
and
scas
push
xor
xor
jno
sub
stos
jbe
push
sub
pop
add
inc
mov
lds
push
cli
push
sarb
pop
sti
fs
test
lea
and
adc
gs
xchg
in
ds
icebp
xchg
jno
ret
loop
xchg
cli
push
out
sbb
aad
arpl
adc
adc
rcrl
sub
lret
push
aas
xchg
mov
and
ret
inc
mov
fists
js
cltd
and
mov
cmp
gs
data16
fld
xchg
inc
ss
dec
imul
cmp
loope
adc
pop
sbb
inc
push
xor
js
inc
push
pop
dec
mov
scas
or
je
jb
jp
xchg
dec
arpl
jb
jmp
cmp
jne
test
mov
mov
jnp
mov
push
into
test
test
push
imul
repnz
mov
and
mov
adc
ja
mov
cli
cmpsb
mov
sub
int3
hlt
or
out
dec
das
js
cli
outsl
inc
fs
cmp
insl
sbb
aad
xor
es
jbe
sarl
add
or
push
mov
in
out
lahf
into
out
or
dec
or
repz
adc
or
cmc
adcb
or
push
cmpl
pop
loope
scas
fstps
imull
inc
repz
xchg
cld
stos
jb
xor
shlb
xchg
push
imul
imul
jle
mov
cmpsb
cmpsb
xchg
jg
sbb
shll
ret
icebp
mov
int3
out
xchg
mov
mov
orl
or
fs
inc
push
test
sub
xorb
sbb
lods
xor
sub
jno
outsb
repz
push
push
addb
push
aaa
test
repz
lods
jl
dec
inc
mov
shrl
ljmp
subb
sub
jne
mov
gs
fwait
rorl
nop
into
xchg
add
push
push
stc
jne
in
adc
cmp
inc
or
icebp
add
xor
stos
jp
xchg
mov
jns
xchg
or
icebp
data16
mov
adc
dec
sbb
mov
shll
out
iret
into
sub
add
and
xchg
xchg
jo
shrl
and
fwait
leave
mov
lds
add
sbb
adc
pop
jne
mov
sub
les
in
lods
call
iret
mov
and
scas
mov
stos
in
inc
sub
loope
cs
ret
cmp
rcl
pop
or
cwtl
lods
imul
xchg
dec
fsubrs
inc
in
rcl
sbb
rcl
xor
pop
xchg
dec
xor
shlb
mov
int3
cmc
xchg
lea
call
sbb
add
sbb
push
dec
mov
fcomp
mov
ljmp
and
clc
fsubl
cs
mov
xor
stos
and
decl
cmc
cmp
lock
or
repnz
mov
cmp
sub
mov
xor
stos
xchg
imul
popf
testl
jle
out
ljmp
push
cmp
arpl
jnp
push
std
test
mov
dec
icebp
mov
sbb
pop
or
jl
and
notl
push
push
aam
lcall
jge
dec
sub
test
pusha
cmpsl
push
xor
xchg
cmp
mov
arpl
gs
mov
cmp
sub
daa
call
xlat
mov
lock
rcl
scas
xrelease
iret
movl
movsb
pop
test
sbbb
and
mov
cmp
adc
pop
arpl
jl
fmull
xor
pop
mov
sbb
ficompl
dec
sbb
cmp
sbb
pop
outsl
scas
inc
or
hlt
xlat
into
es
int3
icebp
push
cli
and
sbb
lret
lock
cmc
dec
pop
push
lock
std
test
mov
test
ljmp
mov
dec
fists
movb
arpl
push
mov
inc
fnsave
pop
dec
call
fwait
inc
cmp
nop
shlb
mov
andl
das
fisubrl
popf
push
dec
add
repnz
fscale
movsb
xor
das
lea
test
push
lock
in
mov
scas
adc
stc
or
pushf
and
jmp
movsb
pop
int
cmpb
inc
inc
fisubrs
iret
pop
mov
pop
pusha
iret
wrmsr
mov
xlat
mov
inc
mov
in
repnz
fcompl
shrl
popa
clc
out
cltd
sub
jb
into
hlt
push
loopne
fdivs
xor
inc
into
loop
xchg
inc
test
cmpsl
aad
sub
pusha
in
outsb
mov
lret
into
icebp
cmp
out
push
lea
or
xchg
lods
jge
dec
pusha
scas
adc
cld
add
mov
fcmove
mov
sub
jae
insb
jno
mov
stos
fsts
nop
lret
in
popf
mov
adc
les
and
and
pop
dec
das
sbb
and
nop
mov
daa
mov
cli
mov
cmpsl
out
pop
jmp
pop
mov
and
imul
fchs
add
mov
and
pop
aaa
incb
push
cltd
add
fisttps
inc
and
push
test
test
adc
mov
orl
cmpsb
repnz
loopne
mov
xor
divl
inc
mov
es
repnz
dec
pop
cmpsb
and
imul
push
dec
inc
in
lret
mov
mov
pop
fisttpll
sub
enter
dec
jno
sbb
mov
es
mov
insb
roll
out
push
sbb
push
cmp
repz
out
cld
dec
adc
scas
xchg
sbb
and
push
pop
fldt
daa
dec
mov
jecxz
ss
loop
fldl
je
sbb
cmp
in
rorb
cwtl
adc
sahf
sbb
or
push
std
jg
bts
sarb
popf
loope
mov
repz
pusha
jmp
ja
jmp
out
adc
jbe
jno
ds
rol
inc
ds
dec
or
lods
imul
inc
movsl
stos
ret
adc
js
sbb
lock
lock
sahf
sbb
inc
push
sub
inc
and
pop
shl
mov
aam
jno
inc
enter
adc
inc
lds
std
inc
mov
mov
sub
mov
test
sti
sbbb
sbb
dec
repnz
stos
mov
mov
xlat
xchg
jnp
rol
stos
in
xchg
leave
cmp
loopne
mov
aas
pop
test
sti
or
xchg
xchg
inc
shrl
mov
sub
ljmp
lcall
xor
mov
adc
rcr
jp
push
pop
clc
sub
xchg
cli
mov
push
sub
mov
enter
mov
out
scas
push
daa
bound
arpl
popf
into
adc
and
xchg
data16
add
cmp
push
xchg
fimull
xor
pop
xchg
dec
test
inc
repz
cmpsb
dec
pop
adc
sub
xor
add
adc
in
lods
jl
jo
jp
push
mov
sti
stos
mov
dec
jbe
dec
sub
sbb
xor
mov
loope
dec
mov
call
aad
pop
pusha
mov
fstpt
or
jg
aam
je
push
or
sbb
and
mov
sub
arpl
mov
push
imul
imul
jmp
sbb
pop
xor
movsb
or
jp
mov
jmp
movsb
mov
mov
xor
inc
xchg
lods
cmc
cwtl
cmp
inc
push
and
mov
sbb
clc
sub
out
jns
std
cmp
and
push
push
inc
in
cltd
dec
mov
notb
push
std
sub
and
push
leave
imul
dec
mov
int3
xor
adc
in
sbb
inc
es
repnz
xchg
push
ja
pushf
das
ljmp
fcoms
mov
popf
push
cmp
xchg
fwait
cmc
and
xchg
xor
fwait
xchg
or
push
mov
pop
xchg
mov
mov
dec
mov
dec
sbb
fisubl
pop
aam
aad
es
imul
lea
les
hlt
or
stos
push
mov
enter
xor
test
jnp
scas
jmp
or
jnp
add
jle
and
scas
inc
jge
cltd
shrl
popf
xor
outsl
scas
mov
jmp
clc
ljmp
inc
and
adc
and
xor
mov
inc
and
inc
sar
xor
sbb
cwtl
clc
popa
das
pop
stc
add
sarb
push
sbb
out
aam
ret
mov
or
imul
daa
mov
int3
inc
or
pop
jae
shrb
setbe
sti
stos
push
pop
aad
lea
sub
pop
dec
pop
iret
ljmp
sahf
loopne
jnp
fwait
push
adc
out
pop
xor
mov
cmpsb
or
loopne
pop
lds
and
jnp
inc
push
inc
lock
inc
xchg
and
insl
cmpsb
xlat
xor
lret
jne
mov
jae
mov
lret
jns
lret
dec
or
cwtl
jb
sahf
aaa
xor
xchg
adc
lea
jbe
xchg
add
dec
mov
cs
or
mov
mov
add
cwtl
xor
xor
pop
data16
mov
call
jle
mov
pop
add
and
xchg
jae
mov
lock
inc
incl
into
inc
xlat
mov
push
adc
sahf
fyl2xp1
test
iret
pop
mov
pop
jle
test
dec
pop
push
shlb
mov
xor
into
add
fwait
pop
outsl
add
fistpll
cltd
cmpb
nop
mov
or
cli
frstor
icebp
aaa
push
inc
lds
cmc
leave
inc
xor
repz
add
sbb
fsubrs
inc
dec
pop
xchg
das
add
sbb
loop
jne
in
dec
push
sbb
mov
jbe
push
add
jecxz
movsl
shlb
mov
lret
push
pop
cwtl
in
jae
shlb
movsl
xor
dec
push
lea
mov
fwait
or
je
mov
add
movsb
mov
xchg
adc
or
sub
imul
inc
fistl
out
mov
cmc
scas
or
or
mov
stos
xchg
out
pushf
scas
push
xor
inc
outsb
scas
jno
mov
mov
pop
pop
inc
lods
jno
insl
mov
mov
inc
orb
sahf
xchg
mov
lahf
mov
push
gs
jns
mov
inc
sahf
leave
fidivl
lahf
bound
dec
pop
popa
push
push
inc
pop
jp
adc
test
cmp
adc
jecxz
ljmp
cmp
cmpsl
mov
cli
sbb
dec
pop
mov
or
in
pop
mov
xor
mov
or
pop
repnz
mov
mov
pop
mov
jb
outsl
in
idivl
test
xor
cwtl
roll
or
mov
sbb
popf
jp
cmp
lds
fdivs
mov
mov
add
popa
mov
pop
idivb
sbb
xchg
sahf
nop
lahf
fwait
push
xchg
mov
jo
add
fucom
outsb
push
cmp
js
sbb
inc
push
stc
xor
out
inc
fcoms
mov
loopne
es
mov
xchg
pop
rorl
mov
fs
pop
fwait
dec
mov
push
faddp
push
mov
push
lods
lcall
shlb
ds
or
push
push
pushf
sbb
dec
insb
hlt
mov
pop
fdivrs
aaa
inc
test
outsb
xor
test
inc
insb
lcall
jne
push
sbb
xchg
popa
aas
xorb
cmpsb
push
lret
cmpsb
imul
lods
xor
clc
ficomps
loope
fistps
fwait
mov
push
lret
mov
pushf
jno
pop
pop
xor
or
push
rolb
lock
adc
movsb
or
fdivl
stos
adc
dec
stc
popf
lods
adc
pop
rcll
cmp
ss
ja
stos
sub
cmp
push
call
mov
nop
cmpsl
push
std
leave
adc
mov
aaa
popf
fmulp
push
cmp
arpl
mov
inc
shll
jp
jb
in
jecxz
mov
push
ljmp
dec
add
in
pop
add
jbe
or
pop
test
dec
lahf
les
mov
rclb
adcb
in
movsb
push
mov
arpl
inc
mov
jbe
aas
xor
fsubp
xchg
push
cld
and
cs
sti
stc
sbb
insl
test
jno
inc
pop
jmp
movsb
cmp
fsubl
lret
cmp
sbb
sbb
cli
or
pusha
add
out
out
mov
sbb
sub
sbb
rorb
test
fs
inc
ja
inc
sbb
jno
cmpsb
lock
pusha
dec
out
test
test
adc
cwtl
push
out
enter
xchg
aam
stc
cmpsl
add
sbb
hlt
fnstenv
int3
int
and
inc
mov
scas
xchg
xor
xlat
or
xor
push
idivl
adc
xchg
fcmove
das
stos
add
xchg
or
das
jns
xor
stc
fdivrs
push
orb
jp
add
xor
rorb
pop
shrb
in
xor
jo
lahf
sub
lea
in
stos
mov
and
jmp
test
sbb
es
cli
push
cmp
xor
push
mov
jle
test
jno
sub
jo
outsb
testl
repnz
push
fdivrl
and
inc
test
ret
xchg
sbbl
rorl
xchg
cwtl
pop
jne
shll
ret
inc
jns
add
add
lahf
mov
pop
jg
pop
xchg
fldcw
inc
add
stc
mov
push
jmp
cmpsl
jbe
adc
shlb
sbb
inc
nop
out
fistpl
inc
into
aam
daa
fstl
stos
jg
pop
add
loope
jbe
adcb
test
sub
je
orl
sbb
in
and
xor
adc
dec
mov
gs
cs
lret
mov
and
movsb
jecxz
pop
lds
sbb
jbe
sbb
pop
fistpll
add
or
sub
xchg
pavgb
or
push
mov
mov
dec
out
std
mov
mov
roll
mov
les
shll
jg
push
pusha
imul
dec
jns
js
add
sbb
lret
cmp
or
dec
shlb
and
scas
cmp
ret
jg
sbb
mov
mov
ja
add
fstp
bound
xorl
cmp
popl
xchg
call
lods
fidivl
ret
rcrl
cmp
or
mov
ret
pop
outsb
sar
mov
sbb
push
cmc
adc
cmpb
xorb
in
mov
pop
mov
cmpsb
pop
jb
and
nop
jmp
xchg
test
repnz
es
mov
jmp
adc
imul
sub
mov
fwait
aaa
adc
inc
popf
sub
test
adc
push
inc
adc
sub
mov
xchg
sbb
pop
or
adc
push
insb
into
fcmovu
fistpl
xor
pushl
pop
into
jle
push
dec
scas
xlat
sub
push
addr16
repz
in
scas
mov
push
aam
ja
and
fisttps
mov
cwtl
add
xor
and
inc
icebp
or
mov
in
insl
push
sbb
sub
dec
xor
jmp
add
movsl
rcr
pop
mov
or
add
repnz
sbb
leave
test
or
call
lret
dec
push
shlb
test
add
setb
je
push
dec
fdivs
insl
mov
adc
arpl
xchg
inc
dec
scas
lahf
std
sbb
sbb
cmp
mov
sbb
pop
add
xor
inc
scas
inc
cmc
xor
xchg
xor
inc
sub
jl
xorb
cwtl
jae
push
rcll
jmp
clc
lcall
inc
jo
dec
mov
pop
and
subb
pop
mov
fnsave
dec
push
lret
fistpll
or
sbb
mov
xchg
mov
jge
test
jnp
data16
push
rclb
lret
lock
push
adc
push
std
or
cwtl
dec
fimull
mov
lcall
xchg
iret
jae
movsl
fs
outsb
ds
test
gs
ss
fstpl
std
iret
push
push
push
stos
ja
imul
push
push
xlat
imull
mov
clc
adc
xor
pop
mov
cwtl
fisttps
outsb
out
orl
xchg
adc
cs
mov
call
push
cli
fcomps
push
cmp
mov
or
neg
outsb
inc
push
inc
pop
cmp
sbb
daa
mov
cwtl
shrb
xor
pop
orl
rcrb
xchg
aad
push
not
mov
pop
mov
dec
ss
cmp
push
xchg
ret
jle
sbb
xor
aad
mov
mov
repz
inc
out
push
push
mov
jle
ret
repnz
jns
cmc
jmp
lahf
ds
ror
inc
loop
dec
and
mov
jmp
cmp
mov
scas
test
adc
add
gs
fdiv
sahf
mov
loop
repz
in
jb
add
rorl
fwait
cmp
scas
int
notb
mov
mov
mov
mov
or
mov
sub
movl
js
enter
pop
xor
pop
int3
xchg
xor
shrb
push
filds
into
arpl
xor
or
incb
and
mov
or
scas
jmp
xchg
lcall
ds
scas
movsl
and
push
xchg
stos
inc
andb
mov
scas
mov
ret
les
jno
xor
jb
mov
or
loop
jae
push
mov
clc
add
add
jle
mov
test
xchg
rcr
test
cmpl
mov
daa
or
stc
das
cmpsl
sub
notl
jns
pusha
xchg
sub
xchg
idivl
mov
imulb
movsl
repz
scas
jno
out
cmp
mov
inc
clc
mov
outsb
sub
pop
and
sub
test
push
insl
xchg
out
insl
icebp
ss
mov
mov
mov
and
adc
push
pop
jns
fldt
mov
pop
mov
loopne
aas
xor
lea
push
jb
scas
cmpsb
arpl
clc
in
dec
mov
leave
idivb
cmc
insl
cld
into
aad
ljmp
out
xorb
sahf
dec
mov
in
fimuls
mov
xor
add
fs
xorb
pop
pop
and
pop
pop
xchg
mov
mov
xor
pusha
out
add
mov
bound
pop
out
and
mov
adc
add
fisubrs
js
push
dec
cmovle
fsubrl
in
iret
adc
movsl
call
sub
pop
add
shr
je
cltd
pusha
cmpsl
aad
test
push
sub
and
jge
cmp
cmp
jge
cmp
dec
movsb
arpl
cmp
outsl
inc
mov
jno
push
lods
pop
mov
ret
cltd
lret
lcall
cmp
mov
xor
xlat
les
add
mov
ja
and
adc
cmp
cmp
pusha
and
lea
js,pn
xor
out
cwtl
mov
cltd
xchg
lret
or
stc
popf
push
sub
andb
fmull
loop
xor
push
popf
cmp
sbbb
mull
nop
sbb
repnz
clts
frstor
pushf
add
orb
mov
sub
cmpsl
mov
jle
and
pop
mov
rolb
lock
pushf
push
jbe
outsb
jmp
or
pop
and
fwait
jno
mov
aas
test
xchg
sahf
enter
out
adc
cmp
inc
jge
mov
mov
in
int3
into
stos
ja
call
pusha
adc
add
fadds
inc
cmpb
and
pop
cs
xchg
adc
push
fld
pop
cltd
lods
pop
adcl
or
pusha
fmull
ret
in
loope
adc
into
sub
dec
in
inc
mov
jb
jg,pn
sub
lahf
and
inc
mov
das
dec
in
xchg
xor
or
pop
sahf
pop
fs
mov
or
push
adc
jne
xor
dec
in
jg
je
lock
mov
inc
dec
pop
mov
inc
pop
lods
in
inc
inc
jno
xchg
jl
sub
inc
ror
pop
jae
aas
cltd
outsl
inc
dec
lcall
inc
mov
and
sbb
sbb
mov
mov
roll
sub
xor
addr16
jle
sbb
xor
aaa
cwtl
andb
add
mov
mov
sub
push
cld
xchg
sbb
pop
lret
mov
xchg
aad
xor
popa
mov
inc
push
out
mov
int
and
data16
into
or
faddl
push
mov
mov
xchg
jbe
aam
fldcw
push
pop
pop
push
push
rcr
movsl
lods
dec
add
arpl
mov
mov
ja
pop
mov
das
in
pop
sub
mov
pop
in
xor
inc
mov
mov
jbe
loopne
adc
xlat
adc
pop
inc
dec
fwait
jmp
adc
xchg
popf
sbbl
subl
sub
dec
lcall
loopne
sub
sbb
mov
dec
in
cld
pop
dec
lods
push
jae
inc
or
sub
add
mov
mov
test
mov
loope
in
icebp
sahf
lcall
inc
inc
jg
aas
test
imul
mov
mov
jecxz
pusha
cli
push
pop
inc
sbb
pop
scas
aas
test
aam
jl
jb
in
out
mov
push
fidivrs
into
or
jnp
ljmp
dec
adc
jo
aaa
jo
push
icebp
mov
jle
add
call
in
push
dec
push
mov
mov
add
add
cli
mov
imul
lret
lods
push
mov
mov
push
and
jbe
xor
ds
stc
mov
icebp
or
push
pop
pushf
es
jl
imul
mov
pop
sub
push
imul
lea
lret
int3
xchg
push
out
aas
mov
jle
gs
addb
cmpsl
popa
or
movsl
fincstp
adc
add
sbb
add
rcrl
fistpl
sub
mov
test
daa
rclb
inc
sbbb
aas
fbstp
xchg
insl
and
int
insl
scas
call
sbb
sub
mov
lds
jbe
mov
sub
push
inc
add
in
xchg
jnp
dec
mov
push
cmp
fsub
outsb
ret
push
lock
mov
ja
insb
dec
sarl
movsl
sbb
sbb
sti
out
adc
mov
stos
les
cmp
repz
gs
sub
movsb
pop
jae
cmp
or
mov
daa
jb
mov
aad
push
xchg
hlt
push
out
cmp
std
arpl
out
test
repnz
xchg
repz
in
xchg
in
in
xchg
xor
mov
push
in
pop
orb
fs
inc
adc
rol
sub
xor
lret
cltd
outsb
adc
or
pop
mov
fsubrl
out
mov
fnsave
dec
push
ljmp
lds
test
mov
push
test
push
lcall
std
dec
push
mov
lcall
js
or
loopne
sub
xchg
ficoms
into
lods
mov
popa
clc
in
mov
lret
adcl
cmpsl
push
cmpsl
adc
test
sti
or
imul
cmp
push
xchg
mov
dec
push
inc
and
cltd
icebp
popa
rolb
mov
mov
jmp
daa
hlt
jle
out
arpl
adc
adc
adc
push
sub
pushf
imul
add
outsb
enter
fisttpll
jne
or
xor
repz
sahf
cli
leave
adcl
dec
lahf
xor
mov
dec
iret
fucomp
insl
adc
aam
sub
cltd
add
in
xchg
outsb
das
cmp
xchg
mov
loopne
jmp
call
pop
enter
xchg
add
mov
cld
add
sbbb
dec
lds
mov
push
inc
adc
xchg
pop
das
out
out
lods
inc
mov
je
repz
daa
cmp
fs
cs
xchg
add
cmp
jg
adc
in
xlat
imul
dec
icebp
xor
movsl
or
out
mov
test
or
adc
filds
cld
inc
xchg
adc
lods
mov
loopew
fdivrl
xlat
out
enter
movsl
dec
add
sar
pop
and
jp
pusha
fildl
test
pop
loope
adc
sbb
jmp
aad
daa
leave
js
and
or
cmp
cld
rolb
jl
cmc
inc
fistpl
adc
js
and
repnz
clc
fs
cwtl
sarl
and
cwtl
inc
mov
add
bound
mov
cltd
lods
and
imul
scas
dec
xor
lcall
fwait
pop
addr16
shl
mov
or
repnz
test
popa
icebp
test
sub
xor
lds
add
jle
sbb
pop
and
pop
inc
pop
pop
or
fdivl
push
sti
adc
jle
push
jno
popf
cwtl
aam
scas
add
shl
negl
xor
ret
xchg
stos
jnp
rcrl
clc
cld
cmc
xchg
sub
enter
jnp
adc
mov
sbb
adc
xor
iret
pop
sbb
mov
sbb
mov
push
jns
jl
inc
mov
xchg
push
mov
and
and
cs
hlt
jp
xchg
jg
pusha
ds
les
inc
cmp
add
pop
pop
sub
jecxz
andl
inc
adc
jl
cmp
js
fadds
bound
nop
cmpsl
cltd
rcll
das
rcll
jecxz
addl
adc
jle
sbb
xlat
test
xor
cmp
fidivl
pop
into
cmp
mov
or
test
fisubs
jecxz
int3
pop
push
in
loope
dec
in
loop
js
add
fwait
push
dec
das
push
or
mov
push
insb
cli
adc
jge
mov
lea
mov
or
outsl
xchg
xchg
adc
cld
mov
jnp
cmp
es
adc
fs
aam
sbb
cwtl
popf
adc
mov
cwtl
add
ret
in
lret
jp
xchg
in
jo
outsb
lds
xchg
adc
mov
out
pop
adc
aam
jns
divb
nop
push
add
pop
and
sbb
and
inc
jmp
je
xor
xchg
adc
in
mov
imul
shlb
iret
das
outsl
popf
mov
insl
jae
xor
jo
lahf
fldenv
inc
ss
jmp
idiv
repnz
mov
add
pop
adc
lods
and
mov
jnp
mull
out
mov
sbb
push
cmp
cltd
cmp
adcl
std
fs
out
dec
sub
fwait
insb
aaa
rclb
push
xor
xor
pop
enter
push
mov
mov
shl
outsb
or
cmp
cmp
sub
sub
lcall
cwtl
pop
stos
ret
jno
pop
adc
mov
test
in
pop
cwtl
stos
mov
rcr
xchg
outsl
fs
in
jae
and
pop
in
cmc
adc
subl
push
or
sbb
mov
jbe
hlt
mov
push
adc
pushf
loopne
clc
inc
adc
sbb
outsl
addl
data16
outsb
je
inc
clc
std
push
nop
jae
sub
mov
push
data16
jns
int3
int3
in
les
add
mov
jns
inc
jnp
xor
daa
pop
shl
and
sub
adc
leave
fsts
add
dec
cmp
pop
jle
std
out
or
mov
sarl
xlat
sahf
xor
push
mov
sub
xchg
dec
cmpsb
cmp
pop
mov
or
add
xor
dec
push
sbb
lcall
jmp
sub
lret
and
test
fst
movsl
adc
mov
leave
cmpsl
ja
sub
cmpsb
dec
mov
sub
stos
movsb
les
les
jg,pt
pop
sti
inc
jl
in
push
adc
adc
pushf
add
cmpsb
out
or
sbb
cmpsb
sub
out
xor
fimull
pop
jp
and
jle
add
test
pop
mov
call
pop
adc
fadd
jns
js
scas
popa
and
mov
fistps
pop
sarl
pop
popf
je
imul
std
sub
inc
or
xchg
mov
popa
and
popf
je
andl
sbb
lahf
jns
out
movd
imul
imul
push
rcll
cltd
mov
js
cmp
pop
xchg
iret
push
icebp
fidivl
popa
out
addr16
in
hlt
imulb
cld
out
sbb
and
js
xor
mov
aas
cld
mov
shr
jns
mov
xchg
sbbb
sbb
mov
data16
lods
push
call
aas
movsb
jbe
mull
movsl
gs
insb
pop
sbb
cmp
loope
and
ret
aas
rcll
mov
aad
es
jg
movsl
pop
outsl
sbb
in
lahf
lock
push
std
mov
aas
mov
xchg
fcompl
loopne
xor
stos
mov
cltd
aam
sub
dec
xorb
cld
popa
ljmp
push
push
jo
ljmp
out
mov
leave
movsl
ja
test
das
out
mov
shlb
imul
test
sahf
cmpsl
jbe
and
shll
push
pop
push
add
lock
js
pop
dec
nop
cmp
push
jp
pushf
test
sub
xchg
into
cmpsl
fistpll
flds
dec
sbb
push
rclb
out
xor
add
sbb
push
or
sbb
inc
lcall
movsb
sbb
push
inc
inc
std
xchg
jmp
shlb
xchg
sub
mov
sti
and
jl
in
sub
sbb
fstps
jno
ljmp
subl
sbb
sbbb
add
xchg
inc
push
inc
subl
lds
and
mov
mov
jl
mov
outsb
dec
pop
pop
addr16
cmc
and
push
sub
sub
mov
jmp
push
fnsave
pusha
and
cltd
mov
pop
fcompl
jnp
fstpl
mov
push
cmpsb
or
sbb
cli
xchg
js
add
popa
ja
push
sub
sarb
fwait
daa
mov
cmpsl
insb
mov
mov
mov
movsb
ret
dec
or
mov
push
jl
fdivrl
push
scas
dec
jge
push
inc
cmp
mov
cwtl
sbb
inc
mov
or
sbb
inc
repz
inc
test
add
in
pop
dec
stc
and
cmpsb
jae
adc
dec
int
push
mov
push
pop
fsubs
cmpsb
jae
ss
daa
pushl
inc
dec
iret
sbb
push
repz
test
fimuls
js
fildl
lret
pop
add
fcomip
sbb
bound
mov
jecxz
inc
mov
sbb
clc
jg
movsb
repnz
enter
std
mov
aam
xchg
and
jecxz
pop
or
idivb
lods
in
ret
inc
lahf
mov
push
add
mov
xor
xor
movsb
push
pop
adc
int
add
mov
gs
repnz
mov
jl
loopne
mov
and
pop
and
dec
xchg
xchg
adcl
mov
inc
mov
iret
mov
and
xor
or
fs
mov
cld
xchg
inc
sti
ret
dec
lret
dec
jb
push
jno
jp
jbe
sahf
dec
dec
pop
dec
xor
jne
xor
fsubl
sti
pushf
pop
rol
fwait
pop
es
dec
mov
jb
jno
mov
xor
adc
scas
lahf
cmp
jmp
add
lock
or
adc
je
adc
mov
cmp
cmp
jae
mov
lret
out
sbb
xchg
out
add
add
mov
fdivs
pop
xor
movsl
xchg
adc
or
sbb
ss
decb
dec
adc
pop
and
mov
pop
icebp
bound
push
inc
sbb
push
xor
enter
dec
xchg
test
xor
loope
inc
mov
fbstp
test
aad
fisttps
negb
call
inc
imul
lds
mov
stos
add
xchg
push
pop
jle
cli
nop
or
arpl
ret
mov
mov
and
jg
fsubl
loopne
jb
in
test
loope
sbb
lds
sbb
pop
push
sbb
pop
aas
repnz
sub
sub
xchg
mov
call
sbb
lds
adc
jb
mov
dec
inc
pushf
sub
inc
lods
roll
adcl
cmpsb
mov
out
pop
js
pop
fs
pop
cmc
or
cmpsl
push
jmp
push
sub
sub
stos
cwtl
or
dec
sbb
decb
stos
fcmovnb
int3
dec
out
pop
mov
or
jo
out
cmp
xchg
stos
or
lea
lret
push
ja
outsl
fstl
pop
int
ljmp
sbb
and
daa
cmp
fwait
rorl
dec
cmp
xchg
mov
add
adc
pop
mov
mov
rol
adc
dec
data16
stc
out
lea
aas
xor
inc
and
mov
pop
jns
clc
add
mov
cmp
fldt
and
xor
imul
mov
pop
sub
inc
jno
xor
in
mov
je
dec
pop
js
add
outsl
dec
decl
inc
sti
ds
and
mov
lret
cmpsl
and
lods
sahf
xchg
movsb
rorb
loop
xchg
pop
jge
icebp
sub
fisubl
cltd
mov
sbb
imul
imul
dec
mov
out
xlat
fiadds
outsl
mov
jne
xor
xchg
mov
push
repnz
repnz
push
repnz
ret
cwtl
dec
jno
loopne
and
cmp
mov
ret
inc
mov
aas
push
cmc
mov
xchg
sub
jb
mov
jmp
jae
mov
jmp
cltd
push
loop
enter
test
adc
cli
ss
dec
inc
ret
bound
inc
mov
push
movsl
call
sbb
mov
mov
ficompl
dec
insb
daa
mov
cmpsl
pop
int3
and
sti
mov
jns
out
fimuls
jg
sub
sub
andb
pop
cwtl
fwait
cmc
mov
jl
sub
push
push
sub
test
xor
les
out
gs
test
les
jmp
jge
cltd
in
fld1
mov
in
fucom
loop
mov
lds
mov
pop
push
les
jp
mov
enter
idivl
hlt
ljmp
je
lock
loop
gs
mov
mov
xor
lods
aaa
jl
aas
sub
pop
xchg
lret
fwait
mov
imul
stos
dec
insb
pop
jb
xchg
aad
jnp
sbb
sahf
inc
sub
sbb
loope
shll
insb
and
in
inc
stc
mov
jmp
mov
shlb
fldcw
dec
popa
sub
sub
pushf
mov
lahf
icebp
cmp
xchg
mov
std
out
rcrl
sahf
cwtl
pop
cmp
adc
pop
xor
imul
mov
cltd
jns
mov
pop
xor
pop
fistl
xchg
je
stos
stos
data16
stos
add
jecxz
add
dec
call
scas
nop
pcmpgtd
mov
and
mov
dec
mov
scas
xchg
sbb
call
xchg
test
lods
rcl
push
or
insb
stos
addr16
adc
sub
clc
and
mov
pop
int3
cld
pop
shll
sub
adc
in
les
mov
fsubs
je
popl
aad
xchg
outsl
inc
popf
mov
test
ds
add
sbb
mov
int3
mov
arpl
lock
adc
mov
mov
shlb
jns
mov
push
dec
and
pop
inc
or
andb
call
and
adc
mov
les
aam
testb
popf
cmpsl
imul
fcompl
xor
fcoms
adc
negb
shrl
mov
push
insb
cld
jbe
es
pop
aas
clc
mov
lea
cli
jns
push
dec
dec
jle
or
push
je
repnz
or
rolb
push
xchg
call
shll
inc
dec
cmc
cmp
sub
sti
rcrl
pop
mov
pop
lods
xor
sub
xchg
push
fistpll
push
or
or
push
inc
leave
mov
cwtl
repz
imul
xor
xchg
fbstp
cwtl
xor
sub
rcl
popf
idivl
aad
mov
addb
sti
mov
cmp
jno
push
or
das
dec
mov
mov
xchg
jne
jo
call
leave
scas
mov
fwait
jne
lcall
xchg
fildll
xor
lahf
sahf
orl
iret
out
mov
inc
cmp
mov
fcomps
push
aam
loop
adc
stos
mov
shrl
ds
adc
jns
jno
or
or
mov
sub
push
xchg
sub
mov
sub
pop
gs
insb
roll
in
jmp
dec
jns
push
out
adc
dec
movsb
nop
adc
stos
cmp
push
enter
out
sbb
inc
jb
sbb
jle
je
pop
stos
cld
cmp
sahf
adc
gs
dec
mov
and
mov
add
dec
addr16
and
clc
jae
ds
sub
scas
sahf
jp
popl
ljmp
test
jbe
push
out
mov
mov
cli
notl
fwait
pop
int3
pushw
pusha
mov
adc
lods
out
jle
adcl
in
pop
pop
mov
andl
push
or
imul
mov
arpl
add
cmpsb
xlat
cmpb
pop
lds
xchg
dec
jns
fildl
xor
and
adc
or
inc
cwtl
cmpsb
xchg
enter
push
mov
pop
pop
push
loop
stos
fsubl
mov
je
repnz
and
outsl
mov
sbb
cmpsl
mov
mov
mov
jp
in
xchg
enter
js
dec
mov
mov
xchg
ret
inc
fldenv
loopne
sbb
jno
fmulp
rol
popf
fcomi
xlat
xor
jl
pushf
js
push
inc
jbe
mov
pop
xchg
adc
lcall
mov
push
mov
jle
mov
mov
adc
jp
rclb
or
ror
xchg
rcll
push
inc
xor
cmp
rorb
dec
loopnew
mov
jno
inc
mov
adc
dec
aaa
adc
cmc
shlb
leave
jl
out
rorb
cmpsl
add
in
aam
mov
lcall
cli
std
lock
jl
cmp
stos
push
sub
test
mov
sbb
and
sub
scas
push
aad
pushf
lret
cmpsb
cwtl
jmp
xchg
cmc
sbb
jne
pop
adc
jo
addr16
cmp
add
lahf
and
in
fiadds
lret
xchg
loop
xchg
push
dec
cli
jle
jnp
pop
push
add
pop
aam
mov
cmp
ljmp
add
mov
adc
pop
adcl
inc
stos
cmp
scas
imul
scas
cmp
cmp
or
push
movsb
sub
xchg
pusha
adc
pop
pop
popl
cli
fnstenv
out
mov
mov
dec
movb
and
jb
int
ljmp
les
cmp
les
out
push
sub
mov
push
cmp
test
mov
inc
fwait
bound
jo
nop
mov
rcll
lock
or
sbb
leave
in
int
jo
mov
dec
lcall
lods
fwait
or
std
or
mov
push
push
fs
jne
mov
in
add
pop
dec
or
scas
mov
ret
int
movntq
sub
lea
in
sub
jl
imul
sbb
jne
push
les
movl
sbbl
nop
cmp
pop
dec
pop
test
dec
cmp
or
cld
push
fcom
pop
adc
stos
ficompl
lahf
lock
test
pop
push
sbb
leave
lret
pop
dec
cmp
enter
sbb
xor
iret
inc
sub
cltd
pop
cltd
mov
mov
push
sub
shll
xchg
pop
xor
repnz
jle
daa
push
xchg
inc
and
addr16
outsb
add
dec
nop
outsb
mov
sub
mov
int
dec
sbb
sti
fldt
push
or
push
pop
sbb
rorb
das
jl
fwait
dec
dec
or
or
ss
add
jge
rorb
popf
xchg
fidivrl
in
mov
jo
ljmp
dec
xor
imul
sbb
push
or
or
test
mov
jmp
dec
mov
sbb
rcrl
cmp
stos
dec
pushl
lahf
adc
test
lods
mov
mov
es
pop
in
lcall
jae
ret
stos
fimuls
and
test
loop
push
jge
or
out
xlat
in
cmpsb
inc
pop
pusha
unpckhps
jecxz
lock
fmul
add
aaa
pusha
aas
xor
sbb
cmc
adc
arpl
cmp
outsb
addl
or
pop
das
in
mov
daa
adc
popa
dec
mov
sub
mov
lcall
fistpll
das
jmp
out
int
mov
add
mov
xchg
add
mov
add
jbe
lret
pop
mov
lea
bound
xchg
dec
enter
jmp
sbb
fwait
or
push
xchg
icebp
test
pop
lock
sbb
pusha
mov
in
mov
shlb
mov
pop
mov
loope
into
cmp
cmp
aas
jp
adc
sbb
lods
mov
mov
out
dec
clc
dec
aas
sub
xchg
or
mull
xchg
inc
orb
icebp
mov
enter
sarl
pop
and
jmp
push
fst
cmp
inc
outsl
rcrl
inc
xor
rolb
jns
sbb
pop
adc
xchg
or
sbb
pop
xor
std
push
sub
jge
adc
lcall
jl
add
fisubrl
jo
fmul
inc
cwtl
jmp
dec
popa
out
popa
mov
sbb
movsl
pop
push
popf
xchg
fwait
sbb
fwait
mov
dec
into
xor
push
mov
mov
mov
sub
mov
sbb
mov
and
test
test
fsubrl
adc
xchg
aam
push
mov
pop
inc
sub
mov
sti
notl
fidivrs
cmp
pop
mov
cmp
addb
xor
pop
xchg
mov
push
scas
inc
inc
aad
push
adcl
enter
cmpsl
data16
ret
pop
cmpsb
inc
jge
shl
fucomi
jnp
ja
cmp
nop
out
add
cmp
lods
and
and
enter
xchg
out
push
mov
pop
adc
ficoml
sbb
push
repz
sarb
pusha
push
or
movsb
aaa
inc
sub
or
inc
dec
out
mov
push
inc
adc
push
push
cmp
loope
fistl
adc
and
jno
inc
aaa
push
sahf
adc
jo
lods
aaa
xchg
loopne
pop
mov
adc
pop
rcrl
out
mov
shll
bound
pushf
andl
pop
movb
ret
mov
imul
or
xor
cli
add
adcl
mov
ret
inc
div
int
xor
and
push
mov
lea
or
ds
xor
out
fimull
inc
jle
pop
mov
mov
or
je
shr
aas
daa
inc
inc
xlat
and
pop
das
add
icebp
fldl
jbe
lods
push
pop
and
cld
lods
addb
push
pop
dec
lods
add
jo
or
cmpsl
aad
xchg
mov
xchg
cmp
rclb
adc
fwait
pop
xchg
ds
ss
mov
fsub
cmpsb
and
mov
or
mov
pop
mov
in
inc
jle
rclb
cld
or
dec
les
aas
arpl
xchg
push
test
fsubl
push
xchg
daa
and
aam
sub
mov
repz
mov
xlat
jnp
ffree
and
gs
push
mov
xchg
add
add
shl
mov
dec
stos
mov
xorps
add
addb
stos
shrb
in
cmp
mov
mov
stos
jecxz
outsl
or
call
push
add
insb
mov
lds
popa
out
ss
sub
hlt
lods
mov
push
mov
xchg
sub
jg
aam
fcom
icebp
sub
pusha
pop
sub
icebp
aas
push
inc
ljmp
add
push
sbb
inc
sarb
pop
mov
xchg
push
xlat
cs
add
add
jb
lock
divl
inc
inc
jmp
add
lock
daa
dec
fdivrs
call
idivl
cmpsb
daa
add
sub
bound
sbb
aas
xchg
jle
fisubrs
data16
jae
push
ret
lods
jle
push
stos
mov
ds
scas
pop
mov
cmp
mov
aaa
sahf
cld
adc
repnz
inc
xor
pminsw
lods
push
pop
or
jns
sub
sbb
std
int3
pop
push
or
xchg
pop
xor
push
inc
and
movsb
stc
jp
or
xchg
imul
sub
push
test
add
stc
push
lods
jb
sbbb
cld
inc
xor
mov
add
sahf
push
xchg
fwait
pop
ret
repz
mov
xor
jp
sub
pop
test
lcall
pop
mov
cld
and
lods
pop
daa
imul
jbe
mov
cmp
jmp
dec
jle
push
in
xchg
andb
ud1
mov
out
inc
imulb
jg
or
ja
stos
adc
mov
mov
cvtps2pd
andl
shrl
sbb
nop
jge
dec
xchg
adc
insb
ret
aas
mov
and
mov
fs
xor
pop
call
out
loopne
loope
xchg
stos
test
mov
pusha
push
jbe
nop
mov
push
cmpb
insb
mov
repz
cli
add
out
pop
pop
xor
int3
aaa
aad
push
cmp
adc
inc
jnp
inc
xor
mov
popf
mov
ja
adc
adc
movsb
icebp
lcall
leave
rorl
xchg
xchg
mov
cs
cmp
or
jg
mov
jg
xor
orl
out
xchg
xor
sbb
dec
into
ljmp
gs
mov
add
aaa
inc
test
mov
aas
cmp
lods
jp
lret
fwait
push
lret
or
xchg
jle
insl
fs
adcl
mov
jne
or
cmp
sub
adc
or
cld
imul
or
pop
cmpb
and
sahf
mov
in
ud1
xchg
jmp
xlat
out
cs
adc
push
iret
push
adc
sbb
xchg
jno
sbb
pop
insb
sti
lods
jle
and
mov
dec
mov
mov
sub
iret
add
sti
jnp
pusha
lods
sahf
adc
and
aad
jnp
iret
xchg
cmp
sbb
pop
shll
dec
mov
jp
dec
subb
cmpsb
sbb
std
xchg
je
mov
psrad
fwait
repz
les
adc
xor
bound
sub
mov
add
lea
mov
iret
leave
adcl
popf
dec
mov
mov
jae
mov
push
xor
es
xchg
into
inc
xchg
xlat
pop
pop
mov
movsb
shlb
adc
mov
cmpsl
or
add
cmpsl
fwait
repz
mov
pop
add
add
lcall
pusha
mov
test
repnz
pop
mov
loope
fwait
jecxz
mov
or
sub
add
sbb
push
repz
mov
fdivs
pop
mov
aas
mov
bnd
adc
mov
int3
pop
pop
and
popf
jp
fneni(8087
lock
test
cmc
mov
sbb
out
adc
movsb
loopne
add
mov
in
adc
push
cmpsl
inc
inc
popf
sbb
icebp
lea
popf
push
add
mov
mov
mov
push
mov
mov
push
mov
imul
in
jle
dec
dec
dec
push
mov
int3
xor
mull
mov
scas
cs
arpl
push
dec
pop
lcall
cmp
out
jne
mov
jge
or
out
gs
fistl
xorl
loope
adc
cmp
xchg
push
sub
icebp
or
sub
xorl
inc
sbb
div
std
ja
test
xlat
dec
insb
lahf
mov
imul
test
or
cmp
jo
cmp
pop
xlat
imul
imul
dec
lods
push
pushf
add
je
inc
ss
andb
mov
pop
popa
pop
push
in
mov
xchg
aam
mov
test
xchg
ret
or
mov
dec
bound
sbb
or
ret
shrb
pop
bound
xchg
adc
cltd
jl
mov
mov
add
lret
test
push
imul
mov
gs
mov
push
idivb
mov
repz
or
inc
clc
dec
sub
xchg
lock
inc
ja
scas
push
mov
inc
and
push
sbb
mov
xlat
pop
cmp
xor
test
mov
add
dec
ljmp
or
add
lcall
mov
stos
pop
stos
pop
inc
idivl
push
sti
pop
aaa
pop
push
or
popa
xchg
lret
test
dec
dec
cmp
in
mov
imul
push
sbb
pop
inc
and
sub
movsl
mov
or
cld
sub
out
outsb
fcomps
pusha
jmp
jb
sub
xchg
push
add
inc
out
pop
xor
adc
inc
clc
pusha
push
push
push
insb
jmp
dec
test
inc
cld
and
push
push
sub
pop
js
sti
sbb
iret
sbb
stos
cmpsb
scas
jecxz
inc
mov
jae
sti
xor
mov
and
inc
clc
fstl
xor
adc
push
sub
scas
add
push
in
cmc
int
sbb
mov
sbb
cli
push
fists
push
inc
femms
aas
or
cmp
push
sub
sbb
inc
int
mov
jns
sbb
adcl
arpl
adc
sub
lods
sbbb
dec
std
test
pop
fwait
in
je
lcall
subl
mov
push
jne
and
jecxz
cmp
in
mov
xor
mov
mov
mov
or
ds
cwtl
fmulp
hlt
xor
lret
mov
and
testl
ss
jbe
mov
push
lea
es
out
or
scas
imul
insl
repnz
dec
stos
fisubs
xchg
xor
sub
xchg
fs
test
dec
sbb
inc
mov
and
xor
add
dec
popa
mov
mov
je
ljmp
inc
push
xor
adc
inc
push
bound
mov
mov
pop
gs
in
adc
pusha
push
inc
mov
push
and
popf
dec
mov
cmpsl
push
outsb
push
fstpt
xlat
ljmp
mov
clc
fimuls
xor
in
scas
adc
icebp
mov
cmp
pop
pop
popa
pop
xchg
stc
stos
cmp
in
in
xchg
dec
mov
and
cli
adc
push
in
jno
hlt
lods
lret
cmpsb
lret
outsl
add
and
mov
fs
fists
mov
rcl
inc
xchg
test
jno
fwait
mov
sti
test
add
imul
mov
inc
imul
sbb
mov
push
sub
les
orb
mulb
push
scas
movsb
scas
ret
ret
in
repz
mov
jno
in
push
push
stos
jl
or
addb
xor
icebp
jne
mov
lcall
jbe
imul
inc
jnp
and
out
xor
mov
sbb
inc
push
pop
fstpl
ret
ret
ret
jae
inc
mov
sub
adc
data16
in
jp
add
sbbb
mov
adc
mov
into
xorl
test
ss
out
or
lods
aam
cmpsb
push
pop
test
loop
fs
mov
xor
cwtl
scas
xor
push
je
das
pop
repnz
dec
stos
outsb
inc
xor
inc
xor
adc
dec
roll
insl
sub
or
xor
add
push
push
push
xchg
leave
add
dec
cwtl
fimuls
ja
pop
test
test
cld
jb
je
test
fadd
popa
jl
cmp
cmc
imul
sahf
adc
lods
xchg
es
aam
pop
repnz
inc
fiaddl
bound
repz
hlt
loopne
lahf
sub
and
inc
mov
in
mov
jbe
push
mov
js
shrb
fcoms
fnstsw
and
push
fs
add
pop
dec
mov
inc
pop
shll
in
adc
cmp
sub
xchg
cmpsl
outsl
mov
adc
fwait
testl
scas
dec
and
mov
pop
adc
mov
and
pop
out
or
bound
in
aad
push
xchg
cmp
push
and
mov
jnp
mov
inc
or
mov
inc
dec
push
movsl
lret
push
rcrb
sbb
shrb
add
inc
mov
nop
into
orl
addl
ja
mov
imul
inc
cmpsl
dec
push
jg
divb
fwait
inc
shl
clc
xor
mov
inc
mov
std
popa
pusha
repnz
pop
add
out
mov
lock
pop
lods
xor
lret
push
xchg
mov
inc
push
stos
enter
insb
inc
sti
repz
fiaddl
test
insl
mov
adc
dec
mov
add
cmpsb
fwait
pop
adc
xchg
and
xchg
call
movsb
fdiv
mov
movsl
loopne
jl
sti
lret
jno
movsb
jl
test
shll
cmpsb
mov
or
test
and
in
lea
stc
cwtl
pop
dec
xchg
push
sub
sti
fidivs
sbb
mov
sarb
xchg
or
je
jno
out
mov
xchg
mov
dec
sub
cld
imul
enter
inc
stos
repnz
mov
or
sti
sbb
push
imulb
lods
ror
dec
sbb
adc
jnp
pop
mov
scas
out
mov
lock
ljmp
mov
test
mov
int3
ucomiss
pop
xor
mov
sahf
int3
pop
mov
ja
sub
int
loopne
hlt
out
idivb
add
jb
pop
cwtl
test
int
push
cmp
cmpsl
adcb
enter
jb
sbb
pop
push
mov
fwait
cmp
jmp
cltd
mov
dec
xor
out
ds
repnz
and
adc
stc
bndldx
lods
sbb
push
push
je
xor
xchg
fs
lahf
cmpsb
push
push
movsb
lds
adc
push
fistl
cli
pop
push
pusha
mov
pop
pop
dec
dec
dec
adc
addl
push
pop
icebp
clc
and
mov
stc
inc
sub
jle
jno
arpl
loop
sti
mov
filds
jb
adc
insb
out
mov
pop
pusha
fcmovb
das
fdivs
mov
test
push
mov
addr16
sbb
cltd
sbb
ror
mov
in
pop
lcall
into
xchg
icebp
fs
sbbl
sbb
loope
mov
test
int3
sub
mov
addr16
jbe
bound
movsl
adc
jbe
mov
aam
adc
or
loope
xchg
test
stc
mov
push
outsl
or
testl
jmp
call
mov
xchg
leave
inc
dec
sub
push
loop
inc
fwait
aam
jmp
jl
jle
into
out
int
jp
mov
xchg
and
jp
lock
inc
pop
mov
mov
mov
fsubr
mov
imul
adc
mov
inc
in
leave
scas
cmc
inc
jnp
dec
sbb
mov
add
xchg
out
inc
mov
jo
mov
fwait
lds
push
add
out
add
push
ret
das
fists
out
ja
adcb
movsl
mov
adc
cmp
push
sahf
sub
nop
sbb
jl
lahf
lahf
mov
sbb
push
or
or
adc
xor
push
push
repz
inc
jle
stos
cmc
sbb
lea
cld
ja
push
sbb
xor
clc
mov
xorb
test
adc
mov
stos
cld
inc
dec
xchg
mov
push
pop
testl
fcompl
stos
cmp
jmp
ss
orl
cmp
ficomps
stos
or
cwtl
das
push
out
dec
or
test
loope
mov
sbb
pop
iret
jae
or
in
pop
cwtl
loope
rol
cwtl
mov
dec
jbe
test
out
roll
pop
test
push
idivb
lods
push
in
pop
adc
inc
popa
xchg
mov
lock
mov
mul
mov
sbb
and
pop
mov
scas
gs
jae
mov
xchg
dec
and
lods
adc
xor
ret
ret
bound
pushf
xlat
adc
jo
inc
test
cld
push
ss
mov
lods
sub
popa
jmp
jb
imul
arpl
xchg
pop
cltd
xchg
pop
jg
fcompl
lods
lods
mov
xchg
pop
unpcklps
push
call
mov
in
mov
add
pusha
or
lret
cmp
inc
lret
in
dec
inc
sub
mov
fucomp
test
xlat
push
es
xor
push
aam
mov
test
pop
js
in
or
adc
xor
xor
cli
sub
es
jno
push
jg
bound
xchg
jne
and
mov
lock
xchg
clc
mov
dec
arpl
jbe
cld
sub
test
lahf
lret
jae
pop
lds
sub
aad
and
imul
rcl
pop
pop
icebp
xor
sbb
not
data16
popf
hlt
out
cmp
ret
xchg
mov
push
popf
push
cmpsb
ret
cltd
lods
mulb
pop
stos
xchg
mov
pushw
test
lock
sbb
call
jnp
fucomip
cmp
adc
and
ret
loopne
and
ja
push
loope
aas
outsb
fwait
xor
cmp
cmc
jmp
aaa
or
adc
fld
mov
hlt
xchg
xchg
mov
leave
pop
loop
pop
mov
jge
adc
ds
in
dec
jae
lods
sti
clc
loop
test
add
pop
mov
mov
adcb
or
mov
xchg
fistpll
jle
add
mov
lcall
jae
bound
mov
sbb
lcall
outsb
sbb
pop
ret
push
xchg
fimuls
mov
fmull
outsb
cwtl
test
mov
popa
or
lock
insl
or
dec
bound
ficoms
pop
add
jae
xlat
xchg
jbe
int
cmpb
jb
movsb
div
mov
dec
add
lcall
cmp
mov
pop
fmulp
mov
or
mov
pusha
lds
xchg
stc
ja
cmpb
dec
cmp
pop
mov
ret
adc
mov
shll
xor
or
loop
aam
xor
or
dec
pushf
and
test
sub
sub
fimull
xchg
enter
dec
cli
add
mov
testb
sbb
aam
mov
push
stos
xchg
fisttpl
mov
adc
insl
pop
fadds
mov
mov
add
jp
sbb
xlat
into
iret
sub
pop
cmp
add
in
clc
dec
in
pop
in
mov
dec
scas
nop
xor
push
scas
cmp
jno
mul
adcl
mov
iret
and
xor
test
xchg
jp
jmp
push
mov
sbb
push
mov
insb
mov
out
jle
fistpll
dec
dec
dec
push
test
mov
ljmp
pop
pop
mov
icebp
hlt
inc
jp
push
out
repnz
rol
or
pop
fnsave
jmp
sub
fsubs
inc
sbb
jp
add
jecxz
in
outsb
pavgw
out
jns
or
stos
jle
mov
imul
out
push
mov
js
cs
sub
jo
movsl
mov
rcll
cltd
call
psubw
sub
aaa
mov
sub
shrl
out
sub
into
pop
shll
sub
add
addr16
sub
fidivs
adc
dec
push
js
arpl
ret
push
adc
int
fcomp
sub
fstps
add
sbb
xor
fxch
call
pop
daa
stos
sub
scas
inc
sub
mov
sub
cmp
mov
test
lock
cmp
pop
mov
push
push
lret
mov
insb
cld
sub
push
iret
cltd
mov
loop
mov
test
mov
mov
push
enter
and
dec
push
mov
pop
mov
out
and
imul
inc
cli
testl
mov
adc
lret
inc
bound
cmp
inc
fs
jns
add
lods
mov
cltd
inc
iret
cmc
arpl
xchg
cwtl
sub
movsb
mov
cwtl
and
daa
pop
pop
call
in
lods
dec
dec
ljmp
into
movsb
ljmp
mov
cld
cmp
cmc
cli
and
or
mov
repz
jge
gs
loopne
mov
test
mov
sub
cltd
xor
jbe
xchg
pop
popa
cmp
push
pop
lods
pop
lret
pop
pop
mov
mov
es
insl
es
dec
xor
and
cmova
mov
addr16
mov
or
int3
sub
jae
jo
cmpsl
inc
add
mov
test
sub
aad
ljmp
or
mov
pop
hlt
adc
jns
nop
xchg
sbb
push
mov
cwtl
popa
stos
into
ss
subl
fmull
inc
dec
xor
mov
inc
in
dec
push
cmp
cmp
fldpi
stc
push
fcomps
gs
mov
sub
in
adc
sbb
test
lods
or
lcall
dec
iret
adc
pop
mov
mov
jns
stos
mov
mov
loop
fnstenv
in
add
inc
push
es
stos
sbb
sbb
dec
inc
repz
cmp
call
cwtl
xchg
mov
lcall
sub
in
pop
lods
pop
mov
push
xchg
repz
xor
lock
mov
add
pop
jecxz
sbb
popa
in
lea
es
sbb
mov
mov
incl
pop
rcrb
inc
lret
addr16
outsl
mov
xor
mov
inc
mov
pop
mov
out
mov
push
push
cmp
fidivl
lods
icebp
movsb
jmp
inc
cltd
push
xor
lret
mov
popa
sti
mov
repz
xor
dec
inc
xchg
sbb
mov
dec
sub
inc
roll
arpl
adc
stc
test
pop
lods
nop
lea
movsb
pop
int
mov
mov
cli
outsl
popa
push
movsb
loop
fstpl
test
push
dec
xchg
push
andl
jne
movsl
jecxz
cli
mov
jb
and
dec
cwtl
and
xchg
sti
sub
jmp
pop
cs
mov
pushf
popa
push
dec
in
iret
fldenv
adc
xchg
scas
sub
add
out
mov
mov
sti
pop
lahf
pushl
mov
push
adc
sarb
jl
neg
notl
xchg
dec
pop
cld
and
or
mov
push
hlt
lret
outsb
xchg
pop
xchg
divl
or
mov
rcrl
jbe
lds
scas
adc
adc
xchg
add
push
jl
sub
cli
sub
scas
or
jle
mov
jp
mov
insl
fistpll
mov
jo
ret
jns
test
sbb
leave
test
jmp
lods
cltd
icebp
dec
sbbb
outsb
inc
test
push
in
cmpsl
push
mov
sub
hlt
ret
jl
push
add
ror
pop
inc
icebp
adc
lret
sbb
fst
int
xchg
pmulhuw
movsb
pop
mull
sbb
nop
jo
mov
mov
outsb
loope
cs
int3
lock
lret
fistpl
or
mov
adc
jb
xor
loop
popf
imul
dec
scas
push
jmp
rcl
or
xor
sti
fistpll
push
out
push
dec
stc
ljmp
xchg
cmp
xor
cmc
mov
xchg
and
xchg
mov
xlat
ror
pop
or
xchg
mov
xchg
fcomi
lret
cmp
pop
fdivr
cld
subb
nop
out
icebp
test
lods
mov
xchg
mov
and
xchg
inc
mov
or
fs
sub
loop
adc
in
push
adc
stc
xchg
in
inc
sub
movb
adc
dec
mov
stos
data16
xor
mov
mov
int3
pcmpeqw
adc
dec
mov
pop
pop
daa
stc
repz
dec
insl
inc
stos
sbb
jo
out
sub
sub
xor
lret
jecxz
dec
popa
xchg
xchg
cmp
inc
ret
mov
sub
jp
sarb
jp
stos
jae
sub
mov
enter
pop
mov
mov
xchg
add
lock
sub
loop
aam
daa
pop
gs
cmpb
xor
inc
xor
dec
insl
fs
and
xchg
imul
pop
scas
mov
les
adc
xchg
sub
stos
xor
jb
push
or
iret
es
push
aad
jb
add
cmp
pop
jnp
fsubrs
or
stc
fidivrl
movsl
xchg
movsl
inc
ror
mov
add
test
inc
lds
pop
lds
stc
test
mov
arpl
leave
loopne
jmp
push
inc
imul
ficoms
mov
fnstcw
emms
ret
adc
pop
push
clc
jno
sbb
jp
cltd
push
arpl
shl
mov
or
or
sub
lods
lret
pop
sbb
frstor
cmpsb
rorl
daa
bound
sbb
outsb
imul
xchg
xor
add
shrl
in
xor
mov
repnz
jl
sti
sbb
or
inc
sahf
test
xchg
add
xchg
sbb
ds
outsb
enter
pop
movl
cmc
sub
or
das
add
xlat
jns
mov
hlt
xor
mov
daa
cmpsl
jnp
inc
stc
out
or
push
sbb
inc
sub
pop
sbb
jge
mov
or
mov
lcall
fimuls
out
dec
xor
in
andl
mov
push
pop
ficoml
shrb
fwait
xor
mov
add
cmp
insb
xchg
fstpl
push
pop
ret
aad
cltd
mov
dec
lock
dec
push
cmp
xchg
pop
outsb
jnp
fcompl
cmpsb
cwtl
sub
lahf
inc
shl
jp
mov
in
mov
push
je
cltd
mov
lds
push
jbe
sbb
out
pop
rolb
cmp
push
aad
sarl
or
setne
push
cmp
pop
or
dec
sub
clc
mov
pop
jg
int3
int
scas
sbb
aas
fcomps
mov
fisubrs
pop
testb
sbb
fiadds
mov
leave
lret
roll
and
icebp
dec
xchg
dec
in
lcall
sti
into
rorl
mov
out
stc
mov
mov
sbb
insb
out
jns
dec
mov
sub
mov
ret
inc
jae
jnp
pop
fisubl
mov
or
iret
notl
mov
lret
mov
inc
and
mov
lods
sti
xchg
sbb
add
cmp
fidivrs
mov
data16
sub
jecxz
xchg
rclb
xchg
roll
xor
add
hlt
divl
pop
out
push
stc
leave
sbb
test
es
push
jmp
cmc
fidivl
mov
mov
xor
and
mov
xchg
jmp
out
pop
cmc
test
mov
lea
push
mov
inc
and
pushf
adc
dec
sub
lahf
cld
fdivrs
pusha
mov
mov
imul
imul
adc
rcrl
inc
pop
pop
ds
mov
fwait
lret
dec
xlat
pop
mov
xor
lret
fcmovne
jno
mov
pop
enter
push
aad
data16
mov
dec
js
xor
mov
outsb
imul
int
hlt
xlat
mov
push
orl
xchg
sbb
gs
lds
xchg
or
add
lock
in
jne
push
add
xor
cltd
movsb
test
cmpsl
cmp
testb
iret
add
popf
jo
and
sub
mov
sti
adc
inc
push
aaa
dec
adc
call
mov
sbb
jae
scas
sbb
jp
mov
fwait
scas
mov
mov
data16
sub
jns
sub
push
fadds
jb
fbstp
dec
push
pop
lahf
jg
loopne
fists
mov
cmp
dec
pop
sti
addr16
mov
mov
stos
sub
inc
push
in
jle
jecxz
lods
push
sub
shll
mov
lret
popa
outsb
fsubs
jns
rorb
push
sbb
stc
enter
cld
testb
add
or
out
lret
int
sar
into
in
add
jo
ljmp
mov
in
adc
fwait
sahf
and
loop
mov
sbb
js
fidivrl
mov
test
lds
ret
push
mov
inc
mov
pop
push
stc
mov
imul
gs
pop
sub
push
and
push
in
ljmp
cmp
sbb
fxch
pop
cmp
jl
dec
loop
pop
addr16
push
inc
or
cmp
xchg
rorb
push
leave
cmp
push
jb
dec
inc
xchg
adc
lea
cmp
xlat
or
sub
mov
andl
loop
ljmp
jb
lret
add
cld
fidivrl
cld
bound
or
ljmp
cmp
setg
cmc
jo
jo
iret
dec
or
lret
call
add
aad
loopne
and
push
das
push
dec
xlat
pushf
out
push
mov
mov
ss
inc
fwait
jbe
ljmp
cmp
sbb
xchg
cli
mov
pop
and
inc
adc
icebp
jg
out
and
xchg
pushf
test
frstor
jbe
jo
cmp
sbb
insb
adc
ret
mov
jmp
and
fstpl
stos
cmpsl
inc
adc
add
int3
aas
mov
sti
int
shl
imul
mov
mov
fadds
inc
outsb
shll
test
and
stos
cli
outsl
ljmp
mov
outsb
pop
leave
int
mov
mov
pushf
mov
push
adc
xor
mov
mov
repz
sbb
movsb
push
or
adc
jae
cmp
incb
flds
and
popf
and
mov
es
adc
mov
ficomps
test
mov
add
and
popa
xchg
adc
jbe
xchg
mov
fs
xchg
mov
pop
outsl
or
lret
mov
xchg
fwait
enter
movsl
scas
addl
jnp
iret
xchg
arpl
test
mov
pushf
fisubl
xor
jo
fisubrl
dec
loopne
pop
and
mov
out
ss
filds
data16
sub
and
fidivrl
push
scas
sub
mov
lret
jno
mov
mov
dec
test
jmp
ja
or
mov
ret
out
push
xchg
xor
add
in
xchg
inc
xchg
into
enter
mov
mov
mov
test
xlat
dec
xor
mov
jp
in
jns
cmp
adc
out
adcl
iret
bound
in
xchg
pmulhuw
sahf
cwtl
and
mov
dec
aas
call
jge
movsb
sub
mov
in
rcll
out
outsl
loopne
and
into
jae
jl
mov
outsl
mov
inc
push
pop
jecxz
push
ljmp
jb
or
sbb
int3
pop
mov
or
loope
mov
xor
push
fisubl
lods
and
loopne
inc
test
nop
sbb
imul
cwtl
xorb
push
jae
lods
gs
mov
mov
test
je
inc
jnp
jbe
aas
mov
lret
sbb
sbb
loopne
sarb
mov
mov
clc
or
leave
fidivrl
jbe
cmp
jae
push
push
outsl
xchg
mov
mov
mov
cmp
pop
cmp
dec
bound
cmp
in
push
sub
mov
flds
or
iret
das
adc
pop
jb
test
sub
push
dec
add
cmpsl
xorl
jge
sarl
dec
and
rcrl
add
in
aaa
dec
sti
js
sub
dec
add
sub
or
or
mov
dec
or
cli
xor
cmc
xchg
ret
iret
push
sub
mov
hlt
scas
lods
movsb
or
std
jmp
imul
mov
sbb
mov
sbb
jge
fwait
decl
jae
mull
jl
sub
add
sub
mov
stos
mov
outsb
add
test
stos
dec
push
mov
test
mov
mov
mov
adc
dec
add
xchg
xchg
enter
mov
inc
mov
or
xor
cmp
rolb
or
cld
sbb
push
and
sub
mov
fdivrs
lock
mov
aas
out
outsl
sbb
decb
jns
and
stos
add
mov
shr
jnp
lcall
imul
in
rcr
clc
xor
jge
cmpsl
test
add
pop
xchg
decb
imul
clc
jmp
mul
int3
xchg
dec
adc
outsb
cmp
imul
shl
push
je
mov
sbb
dec
in
lahf
inc
sbb
je
int3
and
lcall
pushl
push
imul
ret
add
int
mov
jp
pop
shl
fidivs
jo
sub
cmpsl
inc
push
cmp
pushf
ret
xor
jmp
and
in
mov
or
stos
mov
jno
dec
fidivrs
mov
insb
fwait
mov
mov
into
inc
repz
or
lds
mov
adc
and
push
pop
fmull
fucomp
rclb
xor
aas
jne
pop
inc
pop
jbe
imul
mov
xchg
sti
mov
jnp
jae
pop
fs
lahf
loope
cmc
or
sub
pop
in
xchg
xor
inc
mov
xchg
and
in
inc
mov
push
dec
mov
sub
push
adc
cmp
add
xchg
pop
adc
aad
in
andb
cmp
lahf
dec
fwait
iret
dec
stos
pop
shrd
pop
and
gs
xchg
shlb
mov
jne
clc
adc
ds
cmp
mov
cmp
int3
push
xchg
inc
or
test
jbe
insb
add
dec
lahf
pop
mov
and
mov
mov
mulb
mov
xbegin
jb
hlt
and
and
pop
dec
lods
add
fldt
nop
pop
jmp
and
jo
hlt
stos
jnp
mov
or
push
adcb
xor
ret
add
push
cmp
sbb
add
jecxz
mov
out
hlt
adc
aaa
jnp
mov
mov
addr16
pop
loopne
dec
push
push
ret
lds
scas
adcl
sbb
push
xchg
xchg
xchg
adc
mov
call
pop
lods
pop
insb
mov
xchg
xchg
notb
rcll
mov
mov
nop
loope
mov
mov
jecxz
pop
sub
test
sbbb
or
adc
and
aaa
popf
ljmp
cs
and
bnd
cmp
lret
dec
lahf
fists
idiv
mov
test
xor
or
cmp
loopne
cmpsb
mov
lea
mov
xor
xor
inc
icebp
adc
daa
jae
add
dec
imul
mov
or
stc
movsb
cs
mov
into
fwait
cmp
push
ljmp
fnsave
stos
sub
je
pop
frstor
dec
out
int
dec
inc
add
lcall
inc
cmc
pusha
imul
in
bound
push
ja
inc
xchg
mov
adc
push
xor
sbb
ja
mov
xor
mov
inc
adc
xor
lods
jmp
call
adc
mov
jge
or
sahf
add
hlt
mov
push
dec
scas
call
dec
jnp
icebp
bound
or
not
mov
ficompl
add
std
lods
add
push
fwait
push
or
adc
ret
pop
cltd
iret
mov
mov
rorb
jb
mov
mov
repnz
scas
ret
push
add
inc
jge
xchg
push
shll
dec
fidivs
lahf
lahf
dec
and
mov
ret
in
push
repz
push
dec
lret
xor
pushf
cwtl
jl
jo
xchg
ss
lahf
fidivrs
cwtl
repz
jb
inc
adc
loope
fwait
ret
scas
mov
jno
enter
xchg
popa
or
add
mov
jge
lcall
stc
cmp
pushf
mov
ljmp
pop
sahf
mov
add
pop
js
fistps
or
in
dec
leave
cmpsb
sahf
pop
jecxz
addr16
pop
leave
fdivrl
add
adc
mov
imul
push
cmp
mov
sbb
les
iret
call
into
sub
cs
fisubrs
data16
subl
bound
mov
daa
adc
aam
mov
or
in
lods
shr
inc
cld
lds
mov
roll
incl
pop
adc
cmp
cltd
cmp
test
in
cmp
mov
mov
fldl
cli
mov
push
sub
scas
fstl
out
sarb
fildl
stos
stc
add
test
jmp
push
xchg
xchg
leave
mov
mov
jnp
pop
mov
cmp
imul
repz
iret
add
aaa
lcall
mov
lea
adc
mov
or
repnz
add
or
js
stc
imul
shl
cli
push
and
xor
mov
sahf
inc
mov
stos
inc
and
mov
es
and
andb
and
dec
cld
scas
loope
jbe
add
xor
in
fisttps
dec
arpl
cmp
sbb
aaa
sti
inc
cmp
scas
loope
sti
pop
mov
loopne
xlat
mov
ret
dec
dec
adc
pop
out
cmp
xchg
mov
xchg
add
les
divb
movsb
mov
decb
sahf
jne
lcall
xor
mov
mov
mov
add
push
jmp
mov
ficoms
xchg
jno
mov
or
xchg
xor
add
inc
and
mull
mov
jnp
and
mov
inc
mov
daa
scas
rep
xchg
mov
icebp
in
in
push
imul
adc
fwait
dec
repnz
pop
and
jecxz
dec
pop
lods
subl
mov
decl
xchg
adc
popa
mov
jle
cmp
mov
jnp
lds
hlt
mov
outsl
testb
cmp
jl
xchg
inc
pop
mov
test
pop
inc
out
ret
mov
cli
mov
sub
sbb
add
jne
scas
imul
mov
jl
push
jmp
test
sub
rclb
xor
add
ret
shl
loope
add
das
sbb
lods
fdivrp
sahf
sub
and
imul
movsl
cmp
add
sub
cs
leave
enter
insl
sub
sbb
leave
lods
mov
cmpsb
lahf
add
loope
cs
pushf
dec
mov
insl
dec
jo
sbb
push
dec
inc
push
inc
hlt
imul
enter
fidivs
mov
xchg
lret
adc
popf
or
push
xchg
test
cmpsl
call
mov
inc
or
daa
push
clc
in
pushf
mov
push
jno
out
outsl
fisubrs
iret
pop
fisttps
xchg
aad
andl
push
clc
sahf
icebp
mov
add
cwtl
mov
imul
imul
and
in
ja
sbb
test
mov
data16
je
jnp
cmp
cmc
loope
jmp
sub
movsl
inc
sbb
mov
pop
push
fst
jo
test
xor
push
xlat
call
add
mov
inc
xchg
orl
lcall
mov
lds
imul
out
pop
jp
mov
push
loopne
test
mov
ljmp
ss
push
idivb
xchg
inc
movsl
mov
push
nop
cld
inc
int
push
out
sub
bswap
inc
arpl
mov
ljmp
negb
arpl
add
inc
in
das
add
sbb
sbb
js
test
push
cmpsl
pushf
popa
mov
sbb
nop
data16
leave
adc
pusha
cmc
pop
inc
cmpsl
stos
fbld
jp
mov
ds
jo
lret
aaa
repz
sub
xor
mov
je
pop
bound
jmp
call
or
or
sub
jg
pop
xchg
pop
xorl
ret
cmpsb
mov
jo
mov
sbb
xorl
fcoms
inc
imulb
hlt
outsb
dec
stc
push
out
insl
inc
into
jecxz
jno
rol
repnz
fstpl
xlat
pushf
in
cmp
fwait
int3
add
outsb
push
push
into
scas
aad
mov
lods
sti
sub
mov
inc
cltd
xchg
popl
and
xchg
ret
lahf
cli
push
inc
mov
or
rcrb
fdivr
loop
bound
sahf
int
rclb
test
mov
sti
xchg
mov
inc
mov
inc
or
mov
pushl
imulb
pop
sbb
push
sbb
push
cmp
push
mov
adc
lea
gs
mov
je
addr16
lcall
cs
mov
mov
jg
in
and
popf
mov
sub
scas
xchg
out
adc
cmp
jb
ficoms
arpl
outsb
jp
lds
mov
cmp
push
or
stos
or
adc
xor
sbb
adc
enter
xor
xorl
add
xlat
aad
shll
fs
sti
leave
dec
imul
sbb
xor
mov
push
adc
cmp
xor
mov
inc
lods
mov
dec
daa
cld
mov
es
repz
pop
cmpsb
roll
sub
push
jle
or
divl
cmp
int3
lods
cmpsb
in
xchg
sub
xchg
mov
icebp
fiaddl
lods
jge
fstps
test
jnp
mov
or
sbb
scas
outsb
lods
cmp
and
mov
sub
xor
and
enter
jo
test
or
int3
push
add
mov
lds
out
xchg
mov
lods
fcomip
sbb
adc
sbb
inc
fidivrs
pop
mov
inc
xchg
adc
insb
and
xor
enter
pop
bound
xor
lret
arpl
in
push
adc
push
outsb
adc
cmp
dec
daa
dec
or
mov
lods
sahf
lds
mov
pop
pop
gs
test
or
imul
fiadds
dec
push
dec
xor
mov
mov
stos
inc
rolb
sbb
sbb
outsl
xlat
sahf
xor
out
sbb
fbld
popa
mov
in
fdivs
adc
adc
jl
mov
insl
xlat
fdivrl
add
mov
adc
jl
cmpl
xchg
pop
mov
cmp
shll
or
mov
shrl
bound
push
adc
push
mov
jno
sbb
add
push
leave
sahf
in
lods
xor
cmpsl
imulb
ret
je
pop
out
jle
dec
mov
mov
push
out
sahf
cmp
pop
xor
add
xor
mov
xchg
sub
arpl
scas
cmpsl
or
add
xchg
jno
pop
sbb
outsb
xor
jbe
scas
stos
mov
ud0
sub
in
jmp
subl
or
aaa
lea
pusha
stos
mov
and
outsl
inc
in
xchg
mov
mov
inc
shlb
dec
cld
aas
mov
cs
cmpl
sub
adc
aad
clc
pandn
fmuls
jecxz
inc
in
xor
cmp
dec
lock
hlt
xchg
inc
outsb
push
and
lret
sub
ljmp
push
inc
cmc
cmpsl
sbb
lahf
dec
add
inc
sbb
cmpsl
bound
jp
cmc
out
mov
mov
cltd
dec
jecxz
mov
and
or
xchg
pop
imul
mov
sbb
and
push
sub
popa
pushf
pop
pushf
cmc
mov
int3
or
inc
aad
out
sub
dec
adc
or
push
es
repnz
insb
ret
add
mov
jnp
loop
imul
mov
mov
movsl
mov
and
dec
sub
addr16
dec
mov
sbb
dec
inc
sar
insb
pop
mov
popa
add
and
jns
mov
mov
mov
sbb
lods
gs
fdivl
xchg
push
push
gs
sub
or
lret
outsb
mov
insb
mov
scas
xchg
push
pop
jge
imul
or
ficoml
das
stc
ljmp
ret
inc
insl
pusha
in
mov
nop
push
mov
repz
scas
leave
ds
mov
mov
mov
lret
sub
adc
adc
scas
sub
subb
and
sbb
lea
pop
adc
lods
cmp
sub
pop
mov
mov
jmp
xchg
sbb
les
sub
add
ror
jbe
xor
and
add
int
add
cmp
xor
mov
cwtl
dec
mov
in
xor
nop
in
lret
xor
mov
jle
cld
adc
lods
inc
or
adc
movsb
movsb
repz
subb
sbb
adc
add
lea
fdivs
test
gs
popa
pop
mov
mov
ljmp
arpl
jne
push
enter
jne
push
add
add
fmull
jnp
and
pop
mov
and
xchg
mov
repz
enter
pop
add
fmul
fadds
testb
insb
ficoms
pop
or
cmp
bound
and
cltd
jmp
and
dec
out
fldl
mov
frstor
movb
xor
fiadds
push
lods
pop
xorl
pusha
ds
ss
ss
pop
mov
push
pop
clc
daa
adc
lock
push
push
sbb
and
mov
pop
push
xor
int3
adc
xor
push
je
pop
stc
and
leave
adc
ret
or
or
sbb
pop
sub
dec
js
hlt
repz
mov
sbbb
and
out
push
test
xchg
out
push
pushf
je
add
dec
rcrl
mov
int
and
in
dec
scas
add
cmp
and
jge
adc
or
mov
cmp
cltd
stos
and
jp
sub
or
lret
dec
and
dec
inc
movsb
lret
xchg
mov
popa
cli
ja
or
or
push
in
xchg
notb
inc
jnp
dec
cmp
sub
mov
jnp
daa
ss
mov
scas
inc
cmp
add
xor
ret
inc
mov
mov
pop
and
outsb
loopne
stos
inc
sbb
mov
cmp
mov
push
std
in
jb
or
movsb
testl
fstpl
aad
inc
ljmp
imul
mov
or
push
pop
outsl
dec
je
xchg
es
test
out
loopne
repnz
pop
insl
shlb
or
mov
insl
xchg
or
mov
cs
mov
stos
xchg
adc
jmp
mov
jp
adc
cld
hlt
scas
rolb
mov
sub
cs
test
adcb
xchg
dec
mov
pop
sub
and
daa
pop
dec
inc
into
jg
fidivl
imul
or
mov
mov
hlt
cmpsb
clc
mov
cwtl
out
dec
or
insl
dec
pop
or
dec
xor
cld
sbb
gs
xlat
pusha
loopne
js
inc
aas
push
mov
mov
sub
fstps
add
or
lock
adc
leave
imulb
notl
pop
in
insb
push
xchg
movsl
jle
xchg
or
pop
sahf
call
int
add
leave
push
jp
adc
in
cli
test
in
xchg
pop
jae
add
jo
lret
push
xlat
sub
fcomi
mov
dec
jno
out
sahf
jg
fdivr
and
jecxz
or
shl
xchg
adc
fbstp
or
cmpsb
inc
jmp
aad
in
mov
in
loopne
jmp
fildl
xchg
xchg
adc
sbb
rcll
mov
mov
sbb
pop
lods
jae
in
movsl
sti
sbb
mov
adc
mov
dec
scas
jno
fistpll
adc
xchg
or
lret
mov
sbb
frstor
inc
pop
push
or
lea
cld
mov
and
mov
lret
stos
loopne
das
push
insb
push
jne
mov
push
bnd
cltd
or
outsl
jb
push
inc
in
mov
mov
adc
out
idivb
push
xchg
fisubrl
insb
jecxz
push
lock
clc
xchg
push
xchg
inc
ret
or
push
lret
outsb
inc
hlt
add
out
xchg
and
mov
addr16
lret
in
inc
shl
aad
mov
mov
aas
mov
aam
les
cmp
mov
bnd
push
pop
loope
push
mov
push
adc
mov
movsb
xchg
jge
into
xor
xchg
or
jmp
and
aam
dec
pushf
test
cmpsl
adc
adc
and
fwait
cld
loop
mov
sub
inc
and
loopne
xchg
mov
jmp
xchg
mov
test
jge
jns
jno
sbb
stos
popf
iret
das
push
mov
push
lds
cmp
sbb
ljmp
push
push
dec
insl
pop
or
dec
notl
and
cmpsl
cwtl
lock
or
mov
jno
cwtl
lret
mov
jg
inc
jb
in
jns
xor
shlb
push
loope
and
orb
loopne
mov
dec
mov
jns
jecxz
bound
and
pop
mov
xchg
stos
fidivrs
or
jmp
std
pop
pop
fisubs
xor
jl
or
mov
dec
adc
sub
inc
lods
add
add
cmp
jg
xchg
cmc
xor
push
fs
in
mov
repz
adc
push
cli
roll
dec
xor
je
loop
adc
pop
movsb
add
jae
mov
stos
ds
dec
and
call
ret
cmp
ja
les
rorb
lret
enter
mov
shlb
into
addl
jecxz,pt
or
subl
shrb
andl
je
dec
sub
fldenv
test
mov
fmull
mov
out
adc
jb
lods
jb
fs
jmp
or
and
fists
aad
xor
jb
xor
or
pop
aaa
inc
fsubl
into
iret
or
xlat
cmp
jns
pop
and
mov
sti
add
and
dec
adc
jae
dec
pop
xchg
movsl
fstps
imul
imul
add
stos
mov
sbb
mov
cmp
sbb
ljmp
aad
rolb
cli
cmc
lea
repnz
add
pop
sti
mov
lret
roll
test
add
sar
sub
xchg
iret
xor
pop
xor
mov
fcmovnbe
cmc
xchg
pop
mov
bound
pop
and
enter
test
inc
stos
or
mov
mov
aas
mov
jge
push
out
sbb
cld
jo
mov
sar
push
jno
jo
cmpsb
add
cld
push
fdivrs
push
xchg
xor
test
pop
out
or
pop
andl
sar
arpl
mov
adc
testb
dec
inc
pop
cmp
sub
in
scas
test
lret
add
and
je
sub
stos
jmp
gs
pop
movl
nop
lods
popa
xlat
lret
imul
sub
cmpsb
or
test
or
and
push
sub
cld
pusha
adc
mov
stos
adc
aas
mov
negb
mov
and
mov
sbb
insb
or
and
arpl
notb
loop
jmp
shl
gs
sub
jne
stos
jmp
mov
test
mov
outsb
pop
adc
jg
jle
ss
lds
jl
outsb
mov
xor
and
sbb
xchg
pop
push
fnstenv
dec
xlat
pop
xchg
repnz
mov
rorb
mov
xchg
in
push
mov
xchg
add
xchg
adc
dec
or
imul
icebp
repz
les
cs
inc
and
fcmove
ss
std
inc
leave
pop
sbb
ret
movsl
jns
push
hlt
add
mov
inc
adc
push
pop
or
xor
fisttpl
sub
rcll
and
cwtl
inc
and
int3
adc
scas
in
jnp
inc
rorl
sbb
cmp
and
outsb
pushf
cmp
sub
sub
scas
aam
jg
scas
or
push
sbb
ret
push
or
mov
xor
or
pop
in
dec
mov
inc
adc
jg
sbb
xor
inc
movsl
test
popa
adc
push
data16
sub
fldl
fisubrl
int3
xchg
movsb
fldt
xor
push
daa
stos
jg
imul
shlb
lods
test
mov
jle
jp
divl
xchg
push
cs
ljmp
repz
pop
out
or
add
fisubrl
movsl
jae
lods
fucomi
loopne
add
mov
jmp
mov
out
mov
adc
loopne
lock
data16
sbb
mov
xlat
rclb
xchg
xor
imul
testl
push
mov
das
xlat
and
xchg
popf
dec
sub
mov
adc
lea
pop
xchg
jae
orl
mov
hlt
push
imul
xor
scas
add
or
dec
cmpl
out
adc
mov
ljmp
xor
pop
mov
mov
faddl
push
xchg
push
mov
adc
fyl2x
push
sbb
xchg
sub
sbb
dec
imul
not
mov
ret
cmp
sar
fsubl
shrb
xor
imul
addl
mov
xchg
and
inc
cmp
fwait
adc
push
inc
cmpsl
adc
sbb
pop
ja
push
cli
outsb
sahf
hlt
xchg
push
loop
xchg
ljmp
aad
imul
scas
daa
sarl
fdivrp
sbbl
push
scas
pop
lock
push
nop
xchg
mov
inc
outsl
dec
andb
sub
sub
jge
mov
add
xchg
hlt
adc
push
nop
cmc
cmp
adc
cmc
mov
sub
cmp
sbb
pop
lock
or
es
mov
pop
inc
das
adc
ss
mov
mov
bound
add
ja
jae
dec
add
iret
mov
cmc
rcrb
pop
sub
xchg
imul
jg
fnsave
and
mov
es
jo
cli
fwait
push
pop
lea
js
add
mov
and
repz
je
xchg
inc
stc
xchg
xchg
or
push
mov
dec
and
andl
and
and
mov
jecxz
mov
mov
sub
out
sbb
cmp
daa
in
in
adc
movb
push
aam
popf
add
adc
and
jb
dec
and
mov
mov
dec
jp
push
or
xchg
shll
add
mov
mov
jg
pop
cmc
jmp
push
loopne
or
ja
test
scas
call
and
adc
jb
xor
sbb
lcall
fsubrl
sub
cmp
pop
and
pop
test
andb
lock
popf
lcall
add
cs
popf
into
cli
dec
mov
fadds
scas
into
push
mov
or
adc
mov
pop
dec
je
dec
cmp
ror
mov
aad
sbb
mov
gs
addr16
xchg
movq
repz
int
shrl
aas
xchg
jns
addr16
dec
xor
pushf
idivl
adc
rorl
ficomps
inc
lahf
dec
aaa
mov
xor
and
sbb
sbb
sbb
mov
imul
mov
mov
scas
inc
lea
or
mov
cmpsl
fmull
je
mov
dec
mov
and
jl
rcr
xchg
jg
xchg
jecxz
jp
jns
push
out
push
mov
iret
or
nop
popf
aad
js
rcrb
xlat
ljmp
add
out
mov
jg
xor
test
mov
lahf
leave
pop
out
sbb
push
xorb
and
pop
mov
mov
mov
inc
mov
or
jmp
xlat
add
stc
mov
or
dec
cld
inc
daa
inc
ljmp
cmp
or
dec
add
outsb
sub
test
stos
and
loop
insb
ljmp
pop
pushf
cmp
or
outsl
es
neg
dec
mov
mov
mov
pop
fnsave
imul
cmp
and
dec
nop
pop
sub
cmp
and
xchg
lret
bound
dec
fisttpll
mov
xchg
adc
scas
lods
dec
and
jge
call
rclb
mov
jns
cltd
mov
insb
push
xchg
inc
sub
inc
inc
ret
xor
out
arpl
cwtl
div
inc
int3
mov
mov
lds
pop
pop
pop
cmp
and
aam
lds
jne
test
pop
pop
sbb
adc
add
lods
mov
lods
inc
jnp
xor
sti
sbb
or
push
mov
mov
jae
or
add
sub
mov
daa
sbb
ds
jne
shlb
xor
je
cmp
xchg
icebp
dec
shr
outsl
imul
or
jg
sahf
inc
mov
stc
mov
cli
dec
push
jecxz
mov
mov
mov
inc
test
and
jmp
adc
mov
sbb
outsb
pop
imul
adc
and
push
scas
call
inc
test
aam
xchg
push
mov
or
and
fstpl
fnsave
push
test
js
pop
lahf
and
mov
fdivrs
mov
ljmp
jmp
inc
pop
jbe
mov
cmp
repnz
push
sbbl
cwtl
xor
mov
adc
push
add
cmovo
lcall
mov
push
adc
fdivs
push
sbb
dec
mov
dec
in
adcb
notl
pop
movsb
xchg
inc
rcrl
xor
mov
mov
sbb
movsb
mov
pop
int
or
aaa
imul
sti
cltd
mov
lcall
or
jo
jo
je
mov
lock
lea
pop
jbe
adc
out
xor
cmp
sbb
add
ss
jb
mov
cmpl
dec
out
pop
jae
sahf
push
pop
repz
push
negb
pop
cmp
cmp
incb
dec
ds
mov
xchg
jmp
lods
mov
xchg
jp
inc
push
add
inc
in
mov
loope,pn
sbb
idivb
sbb
aam
rcrl
shrl
inc
aad
dec
jns
or
dec
pop
mov
frstor
scas
jns
call
xchg
rorb
fcmovbe
mov
or
push
push
les
mov
repnz
xchg
test
call
pop
inc
cli
ljmp
shlb
ljmp
je
test
jnp
xlat
adc
pop
pop
pop
pop
cmc
mov
xchg
adc
out
mov
push
jmp
xchg
mov
int3
jno
cmp
pop
mov
ss
addb
xlat
sbb
jecxz
mov
sbb
mov
and
xchg
push
sbb
divl
jb
and
and
scas
ret
aam
jge
ficoms
jmp
or
and
int
push
int
jae
mov
push
add
outsb
jmp
pop
daa
enter
adcl
add
xorl
fdivr
push
imul
arpl
and
adc
jbe
or
out
xchg
ret
loope
jno
add
adc
xchg
push
fcomip
lods
and
movsl
mov
clc
xlat
fmull
ficoml
sbbl
rep
xor
lods
inc
dec
ljmp
push
ljmp
mov
cmp
movsl
dec
xor
imul
push
and
mov
loopne
inc
push
sbbl
fmull
int
je
jns
out
sbbw
popa
aam
fmull
dec
sub
divl
push
lods
pop
jnp
hlt
cli
dec
cmp
in
xor
and
mov
sub
loop
dec
fadds
fs
movsl
lret
sti
inc
jns
stos
packsswb
mov
enter
or
scas
mov
xchg
jle
jnp
sahf
push
notl
fstl
push
jns
mov
cld
sub
inc
sbb
stos
out
sbb
inc
sbb
in
xchg
and
cwtl
push
push
out
xchg
aam
sbb
imul
pop
or
xchg
in
and
mov
jbe
iret
leave
pop
lods
and
std
lcall
sub
jae
jle
xchg
xor
sti
nop
xchg
fadds
clc
insl
inc
push
cmp
adc
rcrl
clc
das
fcompl
out
add
cld
test
mov
pop
cltd
test
imulb
movsl
cs
inc
jg
scas
or
dec
lret
sbb
cltd
push
cmc
xor
jb
mov
lods
jg
loope
sub
out
lret
stos
cmp
mov
test
repnz
aad
repz
lret
inc
jl
jb
pop
int
std
roll
inc
arpl
push
scas
mov
xor
pop
pop
push
hlt
jp,pn
inc
jae
stos
addr16
dec
cmp
jl
sbb
loop
add
addr16
cmp
lahf
xchg
push
sbb
and
mov
mov
aam
fcomip
aas
scas
data16
inc
insb
aaa
adc
sti
imul
rclb
enter
add
call
test
jge
addr16
in
andb
mov
iret
insb
inc
mov
xlat
add
jo
outsb
cmp
mov
pop
hlt
scas
and
fisubl
cmpsb
loop
lods
in
add
xchg
inc
or
shlb
rcr
pop
add
ja
push
push
popa
push
popf
leave
push
ret
cmpsb
sti
out
add
xchg
nop
dec
inc
mov
dec
xor
mov
outsb
push
pushf
int3
adc
adc
popa
xchg
fldenv
wbinvd
add
ja
dec
divb
cmp
inc
or
data16
lods
cli
mov
xchg
mov
jne
cmp
adc
mov
add
js
das
out
and
mov
add
push
sbbl
sbb
mov
cmc
inc
jp
sbbb
inc
ds
dec
ja
or
sbb
cmp
fwait
xchg
js
popaw
jb
mov
enter
nop
xlat
pop
pop
push
popf
lds
sub
jne
push
cs
push
popa
push
out
or
cmp
icebp
aad
inc
bound
repnz
sub
pusha
inc
or
outsb
fstpt
lahf
sar
mov
ss
pop
int3
jb
clc
mov
scas
sbb
ror
das
insl
clc
ret
inc
int
mov
xchg
test
iret
push
dec
add
in
sbb
addr16
mov
daa
sub
xor
cwtl
loopne
int3
pop
stos
jb
jmp
ja
data16
lds
or
add
xor
pop
arpl
adc
gs
jo
pop
mov
nop
idivl
es
xlat
push
fs
hlt
test
ror
scas
add
es
cmpsl
mull
inc
rolb
lcall
imul
hlt
add
scas
add
xchg
cmc
icebp
lock
mov
arpl
mov
lods
mov
clc
dec
fsubp
stos
stos
lret
outsl
xor
loope
push
imull
fildll
mov
lds
mov
xchg
jle
or
rclb
sub
rcrb
iret
push
push
enter
and
sub
into
in
adc
adcb
xchg
popa
fsubrl
sub
mov
pop
lock
bound
test
push
pop
mov
inc
fdivl
sbb
test
mov
mov
fstpt
mov
xchg
mov
ret
repnz
jl
daa
popa
fisubrs
imul
or
inc
sbb
fadds
scas
mov
es
push
pop
jne
add
into
and
and
jle
inc
repz
repz
pop
out
ja
insl
rcrl
cmp
rol
sbb
pop
jb
jmp
mov
xor
add
pop
cmpsl
xor
cmp
int3
in
bound
out
xchg
test
scas
and
or
adc
jno
aaa
adc
push
sahf
dec
lods
arpl
mov
cli
cmc
mov
mov
lahf
int
jne
jns
mov
xchg
pushf
mov
push
fsts
xlat
push
xor
mov
jge
push
add
jno
lcall
in
mov
inc
outsl
nop
mov
into
jmp
jmp
push
int3
add
push
lods
cli
jg
pusha
xor
xchg
and
mov
popf
js
jp
orb
sbb
sar
dec
and
and
cwtl
js
jl
xlat
sub
bound
inc
inc
xchg
add
fmul
jg
inc
sbb
mov
inc
cmc
sti
mov
jns
fisttpl
outsb
sub
mov
outsb
dec
repz
xchg
pop
cmpsb
sbb
mov
clc
add
mov
stc
mov
sub
out
out
popf
and
popf
inc
out
sbb
movaps
adc
into
test
arpl
jne
pop
cmpsb
popa
cmp
push
rcrb
in
cmp
sub
jb
cld
add
out
stc
aad
dec
add
rcll
roll
dec
mov
out
in
mov
xchg
clc
stos
loop
inc
xchg
cwtl
cmpsb
loopne
or
pop
cmp
jnp
jne
ficompl
jg
test
cmp
xor
movsl
imul
sahf
xchg
sti
mov
jne
mov
les
pop
fsubrl
pop
movsl
sti
and
test
sbb
fadd
push
clc
mov
jne
inc
cltd
cltd
rorl
cld
inc
xchg
sub
in
sub
in
mov
lods
cmpb
insb
dec
push
and
dec
adc
je
rorb
pop
mov
pop
xor
in
lods
xlat
jl
xchg
mov
adc
push
loope
lahf
add
call
add
inc
jbe
fisttpll
orb
ret
pop
mulb
inc
adc
popl
scas
leave
xor
scas
les
gs
fcmovnbe
lods
lods
inc
and
pop
and
int3
loope
das
xor
test
cmp
cmpsl
add
fwait
lret
lcall
stos
js
push
or
add
mov
shlb
aam
adc
mov
and
push
cmp
push
in
mov
sbb
fisttpl
adc
daa
sub
jmp
xor
add
jp
cld
pop
mov
fs
je
jmp
push
movsb
in
push
push
call
push
inc
mov
add
pop
inc
test
or
jecxz
call
xchg
sbb
mov
xchg
cmpsl
decb
dec
pop
or
add
mov
mov
xchg
sbb
aam
push
xchg
scas
faddp
imul
mov
sub
mov
stos
insl
mov
lret
push
jb
push
jnp
mov
mov
fistpl
push
push
test
inc
inc
orl
dec
cwtl
pop
addr16
jmp
and
call
xor
jno
sub
pop
xor
fmul
xor
pop
push
push
out
mov
cmp
and
roll
rorb
pop
fadds
jb
jp
movsl
mov
adcl
mov
dec
jecxz
dec
inc
jnp
addr16
sbb
das
int3
lret
xlat
lea
mov
lods
sub
push
shrl
and
push
pop
pop
outsb
mov
inc
xchg
hlt
cmp
push
jg
and
mov
sub
xor
jle
pop
ljmp
addl
and
xor
stos
xor
enter
xchg
ja
pop
sarb
mov
push
cwtl
or
int
push
fstpt
sub
mov
daa
movsb
lods
xchg
mov
dec
insb
sti
mov
enter
insl
cmp
sub
jmp
das
cmp
scas
imul
dec
push
ljmp
push
cmp
roll
out
rorb
add
or
les
das
mov
adc
call
aaa
lock
stos
testl
jmp
xor
and
enter
inc
mov
ffreep
cmc
mov
mov
clc
mov
mov
pop
hlt
adc
cmpb
lods
xchg
push
pushf
lods
or
inc
lea
jo
imull
push
xlat
sub
or
shlb
mov
fldenv
fs
xchg
sarl
je
and
lret
outsb
nop
xor
mov
outsb
sbb
cwtl
cs
dec
xor
adc
and
adc
in
fs
popa
mov
mov
and
mov
test
repz
xor
lock
cmc
push
pop
shld
sub
arpl
pop
dec
dec
sbb
and
xchg
outsl
mov
arpl
daa
out
popf
add
sbb
push
push
test
sbb
adc
cmpsl
dec
or
movsl
imul
cmp
adc
pushf
in
jnp
andps
and
pusha
xlat
scas
or
jbe
and
inc
adc
scas
jge
and
mov
push
sub
mov
ret
and
imul
and
repz
and
test
cmp
mov
mov
or
jb
addr16
shll
inc
mov
pop
cmpsl
mov
imul
loopne
sbb
mov
addr16
mov
mov
push
dec
or
ss
std
fwait
pop
outsl
cwtl
sbb
mov
into
pop
and
add
lods
mov
outsb
ljmp
cli
fs
test
ret
adc
mov
jne
std
repnz
xchg
xor
cli
scas
cld
add
or
dec
push
movsb
in
int3
inc
jb
insb
stc
mov
xor
mov
cmc
mov
dec
cltd
mov
jle
xchg
scas
ret
xchg
pop
lea
ja
fs
iret
loop
in
xchg
mov
ret
sbb
cmp
pop
imull
add
xor
je
insb
or
mov
rcrb
push
fwait
push
cmp
pop
mov
lods
cmp
outsb
cmp
dec
lock
push
inc
enter
popf
jns
jnp
xchg
sbb
mov
sti
mov
mov
pop
hlt
mov
pop
mov
insb
fisttpll
ss
orb
out
sub
and
sub
mov
push
push
xchg
sbb
push
fisubs
int3
mov
lahf
fldenv
fldlg2
sbb
xchg
pop
or
mov
shrl
dec
mov
ss
aaa
sbb
insb
in
repnz
xchg
jne
cmp
sbb
scas
add
sbb
lock
jle
dec
mov
pushf
cmp
inc
jno
adc
cmp
cli
imul
and
mov
jle
aam
add
jnp
fistpl
jae
sahf
mov
je
imul
mov
int3
sub
lea
pop
mov
push
fs
repz
repz
pop
pop
xor
loopne
popa
popa
inc
je
jb
stos
in
push
imul
and
or
ljmp
mov
icebp
ficoml
add
mov
mov
leave
lea
aas
mov
orl
test
sub
inc
pop
lea
jg
sub
push
and
sbb
nop
fimull
xlat
mov
cmpl
add
ljmp
inc
jl
mov
dec
test
stos
xchg
sarb
ret
stc
or
icebp
add
jno
negb
or
inc
pop
jnp
adc
inc
aad
in
push
in
repnz
pop
mov
push
ret
addb
outsl
cmp
call
adc
shl
adc
mov
out
leave
ja
jl
mov
push
loopne
add
jno
jb
addr16
clc
call
mov
mov
jp
and
cmp
rcll
insb
int
stc
push
inc
es
and
or
jae
in
cmp
insl
sahf
fcomip
data16
and
cltd
fidivrl
pop
xlat
and
es
pop
dec
mov
jb
movb
fcoml
adcl
cmpl
shl
test
incb
int3
cmp
jmp
dec
push
adc
cmp
icebp
je
and
mov
fs
cltd
js
mov
repz
mov
and
ljmp
sub
inc
les
push
bsf
repnz
jmp
iret
imul
test
sbb
pusha
or
jg
pop
sbb
pop
push
inc
rcrl
mov
imul
stos
jns
and
dec
scas
dec
add
pop
pusha
insb
mov
push
sbb
and
adc
pop
dec
test
mov
divl
adc
adc
ret
test
test
les
xorl
movsl
or
popa
adc
imul
lea
push
and
leave
xor
xchg
fadd
inc
push
loope
add
shlb
push
push
jo
movsb
pop
ret
jp
adc
mov
cmp
or
lods
jle
popa
insl
and
dec
popl
and
dec
cmp
test
push
jb
shrb
sub
jae
xchg
sub
pop
lods
mov
dec
and
stos
adc
mov
mov
mov
jl
int3
jl
std
jne
and
mov
xor
dec
mov
xor
cmp
adc
adc
mov
fwait
add
mov
mov
enter
daa
pop
dec
inc
shrl
sbb
enter
movb
data16
or
add
aas
pop
pop
repnz
jno
sub
and
add
push
inc
into
mov
ljmp
dec
shll
xchg
test
rorl
rorl
sarb
or
outsb
jp
lock
mov
sbb
inc
js
sti
retw
push
cmp
aam
add
out
je
sbb
sbb
dec
dec
arpl
dec
rcl
jp
fdivl
insl
mov
pusha
push
into
bound
stos
loopne
int
imul
addr16
cmp
or
aad
xchg
adc
inc
xchg
jb
mov
out
scas
dec
cmp
and
fidivrs
mov
outsl
sub
mov
add
jge
push
push
notb
inc
cmp
push
pop
aas
testl
arpl
mov
add
jge
push
in
pop
repnz
or
rcr
inc
cmp
pushf
add
aas
fimuls
test
rorl
shll
and
inc
repz
and
mov
scas
aad
out
loopne
cli
push
fisubrl
dec
sub
mov
mov
loop
insb
and
add
cmp
fwait
push
sub
popf
or
or
mov
or
inc
add
mov
or
stos
cmp
hlt
cli
int
or
sbb
loopne
fdivrl
test
or
pop
xchg
add
fildll
mov
jg
dec
and
pop
fisubrs
push
cmp
or
mov
adc
lock
add
add
add
cmpsl
imul
mov
cmpsl
int3
and
adc
mov
xchg
adc
imul
inc
scas
push
bound
aas
cmp
lea
popf
mov
jnp
and
mov
insb
xchg
cmp
stc
mov
jbe
in
pop
cmpl
dec
inc
inc
cmp
icebp
mov
pusha
or
sbbb
push
das
pop
test
inc
cwtl
stos
mov
hlt
xchg
in
movsb
and
rorl
adc
fldl
leave
fnstenv
shrb
cmp
aaa
push
jnp
lret
push
pop
inc
xchg
push
mov
or
daa
in
jne
inc
jge
cmp
cltd
pop
stos
cmpsl
ja
pusha
mulb
lcall
bswap
pop
mov
cmp
xor
int3
pushf
and
testb
jp
cpuid
fistl
adc
int
push
popl
adc
bswap
pop
sub
mov
mov
cmp
or
test
insl
mov
inc
xor
mov
lock
cmp
lock
sbb
pop
xchg
xchg
or
popf
push
adc
sbb
std
call
test
push
mov
sub
push
mov
mov
fildll
lods
movsb
mov
fsubrl
call
adc
sbb
jno
jge
movsb
sbb
sbb
in
lret
cmpsl
cld
sbb
out
push
jg
mov
cmp
aad
mov
inc
pop
clc
inc
push
call
enter
pop
push
jecxz
in
repnz
mov
addr16
xchg
jbe
ljmp
orl
inc
mov
std
popf
mov
fcmovu
xchg
jb
pop
ss
sbb
sbb
iret
dec
inc
and
jb
adc
scas
mov
mov
ret
push
cmpsl
jecxz
out
xor
pusha
mov
inc
and
mov
imul
sbb
push
loopne
sub
jnp
add
sbb
out
outsl
sub
decl
jne
and
push
insl
push
push
ret
icebp
cmp
push
js
xchg
jns
cs
inc
inc
incl
jp
sbb
add
sub
fsubs
cmp
daa
cmp
clc
orb
fwait
bnd
xchg
outsb
pop
push
cmp
lret
cmp
fildl
pop
ja
adc
fisubrs
pushf
fsubl
add
pushl
adc
insl
bnd
test
bound
outsb
out
filds
or
sub
cmp
mov
or
mov
mov
daa
fdivrs
xchg
cmpl
mov
pop
imul
stos
inc
jp
pushf
loope
add
loop
jbe
shll
mov
jl
out
mov
cli
jnp
mov
je
loopne
jo
xor
cltd
addl
popf
outsb
jo
ds
mov
int
cs
mov
sbb
mov
xlat
inc
mov
xor
or
and
mov
fsubp
jmp
mov
sbb
add
setbe
sub
daa
jo
fnstsw
xor
jno
push
icebp
repz
aas
and
out
imul
sbb
jecxz
xor
test
xchg
notb
jmp
bound
cmp
add
xchg
push
pop
roll
sti
sti
cwtl
mov
das
stos
lods
push
jmp
push
addb
xchg
jl
sbb
jnp
pushf
out
and
xor
stc
shlb
mov
cld
sbbb
pop
inc
pop
mov
xor
popa
out
loopne
outsb
in
iret
stos
mov
aad
inc
mov
push
mov
inc
clc
subl
dec
inc
sbb
pop
scas
std
cmpl
rep
in
mov
mov
cs
pop
mov
ret
and
push
jmp
stc
loope
notl
fisubl
das
lahf
les
imul
mov
jp
mov
es
and
jne
pop
inc
adc
pop
adc
pop
scas
repz
cmp
or
mov
insl
daa
insl
stc
in
out
aad
ret
push
fwait
ljmp
pop
or
cmpb
cld
push
outsl
decl
and
pusha
xchg
sbb
inc
iret
pop
mov
sbb
and
sbb
pushf
lea
jge
pavgb
sbb
cmp
js
in
hlt
sbb
cmpsl
or
pop
sti
jo
and
adc
flds
out
lea
insl
test
xchg
scas
outsl
push
test
sub
scas
insb
xchg
cmp
mov
pop
repnz
mov
aas
test
int
mov
mov
aam
and
push
mov
pop
push
clc
les
sbb
out
mov
imul
lods
push
mov
fwait
adc
aam
jp
test
and
jbe
cld
cmp
xchg
xchg
dec
gs
mov
push
sbb
ja
jo
jb
lret
mov
test
sub
and
jae
or
push
insl
adc
scas
in
sbb
shll
and
adc
fnstcw
insl
into
inc
adc
sar
mov
adc
push
sahf
or
fcomps
js
es
lret
ret
inc
in
shlb
popf
fstps
js
cld
or
icebp
pop
inc
sbb
mov
mov
pop
adc
sbb
scas
fwait
dec
xchg
dec
js
cmp
mov
push
and
inc
mov
inc
push
ret
mov
pushf
add
orb
inc
pushf
mov
insl
sub
xor
lods
out
xchg
inc
imul
mulb
cmp
pop
adc
nop
dec
into
push
fsts
pushf
add
aaa
push
xchg
orb
xor
lret
fwait
xor
in
add
pop
fistpll
mov
es
cmpsb
jle
xchg
jecxz
repnz
repz
scas
adc
mov
outsl
push
pushf
cmp
out
xchg
inc
and
or
adc
inc
mov
jl
adc
sub
and
inc
mov
xchg
mov
out
ljmp
xchg
mov
pusha
inc
jns
mov
ret
xor
push
mov
and
shlb
push
data16
pop
sub
push
xchg
iret
sti
rorb
enter
xchg
push
xchg
cld
push
xor
mov
addr16
jecxz
mov
dec
dec
and
add
aam
and
mov
jle
aad
test
iret
sbb
sub
cli
inc
mov
sub
movsb
fimuls
mov
inc
std
and
sarb
or
jb
lods
mov
out
jne
xor
in
ljmp
push
fidivrl
mov
push
lcall
popf
xchg
fimull
xor
sbb
mov
mov
jecxz
pop
fstl
out
xlat
ja
outsl
mov
enter
push
lahf
mov
insb
add
xchg
dec
sub
adc
sbb
repz
fstpt
sbb
movsb
mov
jns
sub
sub
or
sbb
scas
cmpsb
or
bound
hlt
rcl
into
lock
xchg
cmpsb
ljmp
out
push
push
xchg
pop
sarb
int3
lahf
lods
cmc
and
cmp
push
shll
xor
sub
iret
mov
sbb
out
xchg
push
sbb
pop
imul
repnz
sbb
xchg
cld
mov
daa
pop
ret
subl
push
cmp
scas
jbe
mov
push
and
insb
pop
inc
xlat
xor
sub
jle
jo
xlat
imul
incb
xchg
dec
mov
pop
inc
add
pusha
aad
push
test
and
jmp
cmpsl
adc
sub
loop
jns
mov
in
push
sub
pop
into
sti
lret
stos
sahf
jmp
jno
andb
dec
fldenv
fs
inc
test
jbe
add
outsb
mov
shrb
daa
sbb
outsl
inc
repnz
sub
mov
push
cmpsl
mov
loope
repz
add
jbe
sbb
addr16
xchg
xor
movsb
insb
jl
lds
xchg
pop
pop
pop
dec
mov
les
andl
mov
sub
lcall
ret
push
in
and
lahf
repz
xchg
scas
and
sub
in
pushf
jmp
mov
test
divl
pop
or
scas
jmp
add
stos
sbb
jg
xor
idivb
xlat
ffreep
inc
xchg
sub
repnz
mov
sub
insb
pop
iret
and
push
xchg
mov
cmpsb
jge
jo
sbb
inc
outsb
or
divb
mov
jecxz
dec
imul
and
sbb
lds
cmp
pop
int
cmpsl
out
movsl
shl
out
push
lcall
jecxz
popa
adc
inc
cmp
mov
inc
int3
imul
sub
popa
inc
js
mov
dec
push
mov
xchg
cld
jg
and
int3
lods
and
shl
mov
xchg
mov
xchg
lods
imul
lock
rcl
or
lock
dec
movsl
or
push
adc
movsb
arpl
sub
insb
jl
mov
frstor
lahf
sub
xchg
andl
mov
cmp
xor
dec
push
pop
xor
xor
mov
push
in
cmp
sbb
std
in
cwtl
outsl
add
rcll
sbb
fsubrs
xlat
inc
or
mov
sbb
int
into
aam
fcoms
mov
ror
cmp
mov
push
fisubrl
inc
imul
push
in
mov
xor
jecxz
lds
stc
inc
ljmp
and
je
or
jge
into
lret
jns
push
adc
xchg
nop
cmp
mov
scas
inc
out
mov
jae
jg
pop
xor
lcall
es
mov
or
or
ds
and
adcl
adc
jnp
das
jns
rcrl
aad
pop
push
test
cmp
or
in
xchg
push
fmuls
je
sbb
lret
cmp
psubusw
inc
jmp
push
cmp
mov
jns
nop
and
hlt
dec
jns
and
cmpsb
fwait
mov
shlb
push
xlat
outsl
mov
gs
and
xor
push
gs
mov
adc
xchg
std
cmp
pop
jl
sarb
sub
js
xchg
mov
hlt
loopne
sub
jmp
cmp
xlat
inc
movsl
lret
and
mov
add
dec
add
fildll
in
dec
inc
sub
mov
imul
aam
xor
js
mov
lods
mov
mov
sti
inc
adc
popa
daa
nop
in
pop
addr16
pop
loopne
cli
test
and
ficompl
adc
rorb
or
cli
cmp
inc
inc
out
sub
dec
xchg
push
addr16
loopne
outsl
lods
lret
subl
add
pop
pop
or
shll
push
jmp
fidivl
aaa
call
mov
xor
into
int
mov
imul
jb
sub
jecxz
xchg
and
pusha
pop
mov
cwtl
adc
pushf
rcr
inc
out
jne
loope
outsb
frstor
lods
jp
repz
adc
mov
pop
shll
test
and
loopne
inc
xchg
pop
scas
mov
push
adc
xcrypt-cbc
cmpsl
aam
push
sbb
outsb
nop
push
jge
mov
lahf
jae
mov
adc
divb
jbe
jbe
xor
push
lcall
cmp
cwtl
push
jge
push
js
mov
cmpsl
sbb
jp
xor
sub
sub
shll
lds
cmc
mov
shlb
fcmovne
decl
jp
or
jo
mov
dec
mov
lret
fsubl
nop
adc
ljmp
push
leave
add
inc
mov
lret
mov
dec
push
cmc
adc
popf
pop
pushf
dec
and
shrb
sbb
mov
cmp
mov
push
dec
mov
dec
pop
fxam
notb
inc
jecxz
jnp
sbb
mov
fsubs
jl
mov
movsb
lcall
insl
outsl
insb
inc
xchg
ds
sub
sub
adc
or
in
dec
jl
jp
xor
push
cltd
inc
insb
movsl
cmp
fwait
mov
add
push
out
sbb
shlb
stc
sbb
enter
sti
push
mov
imul
in
cwtl
mov
xchg
cmovns
stos
clc
pusha
fisttps
sub
jge
cld
outsl
inc
test
ljmp
loopne
mov
scas
divl
pop
jne
iret
pop
or
mov
cmp
je
pop
mov
mov
sahf
sub
push
sbb
mov
std
inc
mov
mov
fisttpll
xchg
sbb
cli
fisubl
fstpt
mov
lcall
test
pop
xlat
daa
mov
pop
mov
bound
adc
popf
cmpsl
xchg
test
dec
mov
mov
in
das
dec
scas
cltd
scas
das
mov
icebp
arpl
mov
sub
cmp
mov
lods
xchg
lds
add
cmc
call
or
loopne
jg
aas
jecxz
and
dec
lods
inc
sti
cltd
inc
bound
mov
into
pop
mov
loope
popa
lcall
pop
inc
loopne
icebp
fiaddl
es
scas
fsts
adc
mov
mov
out
movsl
pop
xlat
xor
ret
sub
fcoml
gs
test
or
jns
lret
cld
and
lea
imul
pop
cmpsb
int
enter
and
adc
ds
loop
push
lds
xchg
lea
outsl
adc
mov
cmp
ret
dec
popf
or
pop
cmc
xchg
iret
dec
pusha
leave
std
std
icebp
push
pop
out
mov
cs
fistl
jmp
sbb
stos
out
popf
dec
bswap
mov
adc
pop
addr16
and
mov
lret
add
mov
movsl
sub
dec
jle
sbb
mov
mov
data16
lock
js
movsl
mov
sbbb
inc
adc
xchg
out
cmc
xchg
mov
inc
xor
cmc
je
xor
pcmpgtd
push
repz
cmp
xchg
xor
mov
dec
outsl
jp
adc
dec
fisubl
ja
or
pop
dec
sarb
pop
loope
cltd
pop
pop
push
add
pop
mov
int3
mov
push
sub
mov
fidivl
scas
lcall
inc
repnz
xor
xchg
xchg
lahf
xorl
icebp
fs
sbb
shll
add
sub
pusha
pop
and
movsl
fwait
inc
xor
jp
xchg
pushf
and
xchg
stos
pop
mov
lret
shr
popf
sub
sti
cmp
xor
cmc
ljmp
mov
dec
xor
pop
ret
add
mov
jp
pusha
mov
sbb
adc
cmpl
stos
mov
cmp
adc
dec
sbb
mov
add
push
bound
jge
mov
xor
pop
xor
pop
and
jo
fisubs
frstor
xchg
sub
pop
popa
xchg
in
scas
mov
sub
cmpsl
adc
movsl
dec
push
popa
dec
mov
xchg
sub
fmull
push
cs
rcrl
pop
inc
pop
sub
movsl
sub
or
cs
jp
inc
in
fildll
loopne
dec
mov
test
stc
loop
push
fmull
clc
xchg
and
lahf
mov
jns
mov
sbb
pusha
aad
dec
clc
lcall
cltd
mov
imul
gs
test
shrb
popa
sub
or
sub
sbb
sbb
shlw
jo
pop
sub
mov
cmp
cld
dec
jg
mov
packuswb
pop
addr16
sbb
mov
gs
insl
dec
sti
test
setae
hlt
jns
inc
jbe
or
jae
add
and
adc
pop
mov
daa
outsb
cmp
leave
cli
mov
rcl
inc
pop
xor
lds
mov
dec
test
insl
mov
insb
in
and
repnz
je
push
sub
pop
das
hlt
mov
inc
jo
ds
lret
ljmp
jp
hlt
inc
pop
mov
repz
pop
lcall
cwtl
xchg
lret
mov
stos
jmp
ljmp
jge
fs
mov
ret
xchg
pop
out
sbb
cld
xor
cwtl
mov
js
mov
pop
iret
repz
hlt
addr16
leave
push
xor
orl
scas
mov
inc
out
xor
rclb
xchg
push
sbb
xor
out
nop
and
int
fidivl
dec
pop
lods
or
scas
add
mov
jmp
mov
dec
fildl
fbstp
js
push
cmp
pop
mov
sbb
fcompl
xchg
or
enter
mov
loope
mov
and
or
push
ds
sub
adc
icebp
dec
test
push
std
gs
mov
sbb
scas
imul
lods
cmp
int3
sub
shll
jae
mov
idiv
add
cmpsb
add
push
aaa
cmpsl
xchg
pop
ret
outsl
jmp
xchg
dec
fistpl
nop
push
out
xchg
stos
mov
dec
movsb
scas
or
pop
stos
mov
jl
in
push
push
xchg
jne
stc
stos
leave
xchg
adc
cmpl
dec
push
mov
std
movq
cwtl
xchg
cmp
push
arpl
jg
sti
or
shr
fnstenv
adc
enter
mull
push
cmc
arpl
and
jg
call
test
loop
lds
push
or
ss
rorb
push
cmpsb
rcrl
xchg
inc
pushf
sbb
pop
sti
mov
or
imul
push
mov
sbb
push
insl
cmp
sbb
cmp
shrl
cmp
lahf
sbbb
ss
xchg
fcomp
mov
ret
popa
jb
xchg
pop
call
and
cmpsb
cli
insb
in
popa
iret
iret
push
orl
je
pop
jecxz
in
popf
outsl
push
xchg
adc
dec
fdivrs
pop
out
jle
andl
jmp
inc
daa
fbld
fcmovnu
push
xchg
jnp
pop
std
aas
mov
cmpsl
js
sbb
dec
enter
mov
inc
fstl
pop
mov
daa
mov
push
js
mov
jne
test
sub
arpl
outsl
ss
xchg
push
pop
sti
inc
pop
pop
js
cmpsb
xor
lret
ret
add
push
sub
fwait
sahf
out
int
pop
repnz
and
ss
mov
je
push
jge
das
ds
js
mov
cmp
jb
shll
mov
pop
dec
inc
dec
add
sub
lock
push
fwait
mov
mov
out
jmp
xchg
pop
ret
adc
add
sbb
into
inc
pusha
pop
imul
icebp
mov
ffree
pop
dec
faddl
mov
repz
int3
or
clc
pop
lods
jl
dec
inc
aaa
add
push
mov
and
mov
mov
sbb
mov
push
mov
dec
xchg
ja
pop
push
rcrb
mov
aad
sub
aas
movsl
pop
test
pop
repz
lods
mov
je
sbb
jo
outsl
outsl
sub
jbe
lret
into
cmp
packsswb
ror
sub
inc
add
dec
sub
push
shlb
add
in
mov
leave
jecxz
sub
pop
mov
imul
clc
sub
loop
sarl
xchg
jmp
outsb
dec
je
andb
push
dec
scas
and
and
xor
icebp
aaa
in
out
rclb
hlt
insb
repnz
lret
jnp
mov
sub
out
pop
js
add
push
sub
outsl
test
dec
lret
sbb
mov
filds
pop
pop
sbb
mov
filds
mov
fistl
mov
dec
in
roll
xchg
in
or
inc
dec
int3
clc
test
adc
call
push
js
inc
negl
cmp
xchg
jp
xor
push
mov
mov
ds
xor
aad
push
xor
mov
sbb
sbb
mov
lock
jecxz
or
fimull
fneni(8087
adc
cli
clc
js
ljmp
cld
xchg
jg
js
mov
mov
mov
cmpsb
pop
cmp
je
add
pop
cmp
rolb
jmp
mov
inc
je
mov
ljmp
pop
pop
mov
fmull
lods
scas
xchg
outsl
arpl
mov
jg
mov
out
pop
inc
aas
popa
fdivrl
jns
mov
xor
lea
mov
push
dec
in
ljmp
je
adc
roll
mov
jg
loopne
dec
mov
push
jnp
out
scas
and
aad
dec
out
inc
fdivrs
ljmp
xor
xor
mov
out
sarl
test
inc
jecxz
push
test
mov
dec
inc
mov
cmpsl
adcb
dec
lea
pop
mov
push
es
mov
xor
nop
ret
loopne
cmp
lods
icebp
hlt
popf
sbbb
cmpsb
addr16
sbb
or
shrb
sub
jnp
mov
insl
xor
mov
pop
pop
xchg
mov
mov
jno
test
or
cwtl
cld
jl
std
push
xchg
punpckldq
aaa
jg
sub
dec
loope
inc
xchg
or
faddl
mov
sbb
jns
jle
add
pop
ret
mov
mov
ffree
push
pop
jl
fdivrl
lea
js
call
ja
lret
xor
stos
shlb
xlat
add
pop
sbb
adc
movsb
frstor
leave
shl
xchg
cmp
test
sbb
in
lret
xchg
xor
lock
lahf
sub
rcrl
xor
ja
sti
dec
adc
test
jns
addr16
roll
mov
mov
divb
ljmp
pop
data16
or
mov
sub
cmc
imul
push
lods
aam
sti
arpl
mov
ss
out
cmp
imul
call
xor
lds
sti
add
or
jle
pop
jp
cmp
repnz
jb
fisttpll
movsb
lret
mov
hlt
loope
mov
test
jmp
lret
dec
jnp
addl
lret
repz
sub
popa
push
pusha
mov
pop
xorb
cmc
add
push
lods
lret
icebp
dec
pop
inc
adc
fdivrs
jl
jb
sbb
subb
loopne
popaw
mov
int3
outsl
dec
and
aad
negb
mov
ja
adc
addr16
xor
xchg
movsl
mov
shl
inc
xchg
fcmovnbe
incl
jl
and
inc
pop
movsl
adc
dec
psadbw
pop
scas
push
xchg
mov
sbb
mov
or
jp
or
aas
sub
mov
divl
or
pop
rcrb
cmp
insl
adc
xor
mov
ljmp
mov
lea
testl
inc
jg
ljmp
or
cmc
outsb
fucomip
inc
add
pop
sub
xchg
jb
and
mov
add
pushf
mov
pop
push
nop
or
lcall
inc
fdivp
ja
jp
sbb
and
aam
push
sub
sub
cmp
ficomps
mov
in
pop
inc
repz
cwtl
rclb
mul
insl
xchg
cld
push
sahf
add
mov
or
pusha
xor
xchg
and
cmc
insl
ret
or
xchg
mov
popa
and
pop
test
sarl
pop
std
xchg
in
in
fs
dec
dec
and
outsl
mov
inc
jne
add
push
ret
xchg
mov
ficomps
adc
sbb
test
mov
mov
push
out
sti
cli
and
insb
adc
xor
div
pop
jmp
cmpl
push
lods
fldcw
mov
pop
and
pop
push
pop
lret
enter
rep
lods
adc
nop
lea
cmc
movsb
pushf
fs
xor
lds
or
gs
stos
cmp
cmp
mov
lcall
adc
lahf
ds
js
scas
das
pop
test
sarl
push
mov
aad
fnsave
sub
cs
cmp
es
push
mov
cmp
dec
lods
sbb
loopne
add
inc
ljmp
xchg
pusha
fucomi
inc
push
mov
in
push
and
inc
hlt
popa
adc
push
adc
int3
ret
dec
mov
jbe
lcall
mov
div
jne
ss
pushf
mov
stos
call
sbb
sbb
daa
aas
add
in
dec
insl
add
rclb
scas
repz
in
dec
pop
sti
sub
ret
push
cld
and
mov
andl
or
scas
inc
ret
sbb
cmpl
aaa
jae
movsb
outsb
and
or
repnz
jecxz
jg
push
jmp
sub
adc
sub
pop
mov
adc
dec
test
cli
jmp
mov
and
mov
shll
xchg
adc
adc
cmp
xchg
inc
xchg
mov
pop
or
shrl
das
or
cmc
push
hlt
pop
iret
test
mov
mov
xor
xor
leave
ja
xchg
add
mov
pushf
es
pop
iret
cmp
ja
ret
loope
out
mov
jne
lods
dec
mov
xor
flds
shl
mov
push
push
mov
mov
inc
pop
dec
xchg
sbb
jmp
rcl
push
and
pop
mov
xchg
dec
test
pushf
test
jmp
arpl
testb
cmpsl
dec
vmovshdup
loop
cli
sub
int
and
push
cmpsb
xchg
pop
lret
inc
pop
out
cmpsl
dec
dec
inc
cmp
mov
fs
lea
popa
bound
pop
test
enter
xor
js
ficoms
mov
sub
cmp
or
mov
movsb
xlat
mov
mov
push
fidivrl
ljmp
xor
or
xor
jecxz
out
in
lea
add
push
fsubrp
cmp
enter
xchg
mov
and
loop
sbb
push
mov
dec
pop
test
mov
arpl
jb
mov
mov
mov
xor
cltd
xchg
or
jb
lcall
inc
cmp
je
out
outsb
addr16
jg
loope
mov
dec
or
aaa
cmp
or
repnz
push
push
daa
or
and
dec
cmp
std
aas
clc
in
data16
cmpsl
xlat
xor
dec
inc
jge
out
negb
jmp
or
jp
cmp
es
push
push
test
add
je
sbb
inc
cmpsl
push
outsb
mov
mov
pushf
repz
stc
push
xor
add
mov
jnp
push
jno
jae
lods
out
paddb
int3
xchg
shl
inc
loopne
cmp
stos
or
ficompl
and
push
out
rorl
push
add
aaa
stc
jge
dec
xchg
repnz
sahf
jns
in
mov
inc
aad
scas
test
aaa
enter
jle
xor
and
jle
jge
push
jmp
mov
xor
aaa
xchg
out
jg
incb
repz
adc
xor
test
movsl
xor
imul
je
xchg
inc
adc
and
ret
push
mov
xor
daa
insl
mov
push
cmpsl
fcompp
pop
or
mov
icebp
loope
repz
test
pusha
mov
dec
jmp
mov
sbb
fdivrl
lods
pop
out
out
and
adcl
mov
jne
push
or
push
popa
js
and
or
fbld
jb
sub
cmpsl
xor
int
movsl
daa
inc
hlt
cmp
pop
xchg
or
aam
cmc
loopne
mov
cmp
mov
lods
int
pop
imul
test
mov
or
mov
cli
pop
or
setg
xor
popa
mov
incl
dec
sbb
in
jg
or
cmp
jbe
push
je
aas
repnz
mov
push
mov
loop
cltd
outsb
jg
dec
dec
fistps
popf
jp
jecxz
or
push
add
in
cli
inc
fsubs
pop
cmp
lds
mov
test
jo
in
pmaxub
test
xor
push
sahf
pushf
mul
test
mov
inc
dec
test
jecxz
push
dec
and
movsb
mov
cmp
imull
jl
xchg
stc
mov
pop
push
add
and
pop
fs
dec
and
inc
xchg
and
iret
lea
sbb
inc
in
dec
or
inc
lds
test
pop
pop
ficompl
addr16
outsb
add
popf
cmp
adc
aad
shlb
xor
in
and
into
clc
mov
mov
sub
addr16
fisubl
fdivrl
das
shrb
mov
add
push
xor
cmp
mov
sub
fsubs
out
cwtl
fwait
shll
sbb
and
jp
dec
mov
mov
jmp
hlt
imul
das
cmp
and
or
jmp
dec
psraw
jno
std
push
std
arpl
push
je
pop
les
jp
cmpsb
scas
adc
or
rcr
out
cmp
xchg
sub
test
sub
stos
xchg
fwait
dec
fildll
sub
ja
into
ds
inc
jg
rorb
sub
repnz
lret
inc
cmpsb
cmp
fstl
xchg
mov
xchg
scas
gs
fwait
or
add
icebp
mov
cmpl
mov
into
xchg
xchg
jno
adc
jmp
rol
nop
push
xor
jl
jnp
pop
cwtl
pop
xor
call
cli
pushf
dec
dec
and
sub
xchg
adc
mov
mov
add
xchg
cmc
add
sbb
andl
ss
and
jmp
xlat
lcall
sub
jne
sti
scas
imul
xor
loopne
test
addr16
stos
xchg
in
into
int
ja
mov
sbb
mov
mov
data16
daa
mov
mov
inc
xchg
je
xor
imul
inc
nop
push
cmp
imul
adc
cmp
mov
and
leave
mov
addr16
scas
int3
sub
mov
bound
mov
or
xchg
mov
out
rcll
arpl
call
sub
sbb
pop
push
cmp
lret
mov
enter
xor
and
aaa
psubw
mov
out
cmp
mov
jno
movsb
popa
mov
cmp
mov
push
cmp
pop
outsb
jae
sbb
push
mov
and
leave
subb
add
data16
xchg
xlat
movsb
mov
jo
loope
xchg
into
mov
sbb
mov
mov
lret
insl
pushf
orb
lahf
in
inc
cmp
loope
dec
pop
mov
repz
sahf
jge
leave
or
imul
jle
jl
bound
inc
fnsave
jl
mov
test
xchg
mov
aam
pop
ret
cmpsl
dec
insb
and
xor
test
adc
cli
ja
sub
and
dec
inc
mov
and
je
xlat
adc
aas
out
mov
dec
add
jl
scas
dec
inc
es
flds
mov
lret
std
loop
and
int
ja
cmpsb
fcmove
dec
leave
pop
add
pop
ja
pop
or
add
fnstenv
mov
push
lds
sbb
mov
or
sub
and
dec
clc
ffree
fsubp
inc
repz
cmp
cmpsl
negl
add
hlt
in
iret
and
sub
stos
dec
pop
and
in
pop
xchg
jne
mov
mov
mov
cmp
inc
clc
test
lods
add
ja
xchg
push
repnz
ljmp
pusha
mov
xchg
pop
hlt
pop
mov
dec
fwait
mov
mov
mov
lods
popa
mov
clc
dec
sub
mov
insl
dec
push
fdiv
test
aad
insl
sbb
fidivl
cmpsb
cmp
jmp
push
lods
cmpl
arpl
scas
push
cli
xchg
jl
lods
adc
dec
sub
push
sbb
pop
je
ja
cwtl
dec
in
rcrb
cmp
pop
pop
cmpsb
std
dec
mov
lahf
mov
sub
mov
jmp
iret
into
lods
js
pop
cmp
cmpsl
mov
xor
mov
clc
dec
fsubs
movsb
mov
sbb
jo
xchg
insb
imul
mov
popf
mov
mov
repz
hlt
add
inc
mov
sub
dec
sbb
sar
mov
xor
mov
add
jb
inc
dec
mov
jns
ja
je
jmp
out
repz
aaa
lea
push
daa
dec
mov
andl
insb
xchg
jg
bound
ja
ftst
adc
pop
add
imulb
mov
pop
xchg
lods
les
mov
popf
adc
mov
cltd
aam
dec
mov
jns
sahf
aaa
daa
push
stos
push
pop
unpckhps
push
sbb
mov
inc
or
cmpsl
mov
test
xchg
sub
insb
jle
mov
cmpb
fcompl
iret
mov
push
jns
int3
jbe
out
push
xchg
sarl
enter
and
dec
jno
or
inc
mov
jle
push
int3
fidivrl
jge
push
icebp
je
addb
mov
push
cld
inc
outsb
outsb
popf
fstps
lret
mov
in
inc
mov
dec
sti
dec
jp
push
mov
fs
pop
movsl
sbb
xchg
push
add
jne
pop
pop
call
movl
stc
and
and
es
xchg
in
in
xor
jnp
mov
mov
xor
es
add
inc
call
sub
daa
rcrb
cmp
add
jns
xchg
imul
fldl
shlb
cmp
mov
lret
xchg
sbb
insb
bound
xor
imul
mov
mov
inc
dec
xor
lret
dec
inc
add
pushl
pop
mov
mov
and
or
pusha
repnz
sbb
inc
push
xor
jns
add
fnsave
push
test
rorl
lahf
popa
les
js
pop
cmp
out
and
and
out
stos
xchg
iret
testb
xor
cli
mov
aam
cmpsl
jae
popa
ror
xchg
out
leave
mov
ljmp
lahf
pop
arpl
xor
fadds
rcll
sub
scas
add
sub
cmp
pushf
dec
sub
push
and
add
xchg
je
xor
jno
push
inc
or
nop
add
jge
inc
imul
fsincos
cmc
fnstsw
push
imul
add
mov
fcoms
xor
push
imul
les
aam
ret
inc
add
jb
fs
stos
mov
xor
fstpt
mov
mov
cmc
test
jae
add
xchg
add
cmp
inc
xchg
aaa
stos
dec
push
xchg
inc
scas
or
mov
fstpl
lret
xchg
loope
out
dec
sahf
divl
cmp
popf
sbb
jo
jo
idivl
jno
sub
or
loope
scas
enter
mov
ret
sbb
inc
leave
add
xlat
pop
fistl
add
popf
adc
mov
dec
inc
jmp
je
js
push
popf
xchg
xchg
sub
inc
sub
sti
pushfw
pop
mov
sbb
aas
shl
in
xchg
sbb
jmp
jno
mov
and
cmp
shl
das
mov
jecxz
shl
test
xor
aaa
inc
add
jmp
fdivrl
enter
adc
es
push
lea
pop
xchg
cwtl
sub
mov
inc
mov
mov
test
push
adc
push
push
std
and
ss
adc
sub
ljmp
es
add
mov
mov
sahf
out
push
ljmp
pop
mov
dec
mov
jo
push
mov
sub
cmpb
ret
dec
mov
and
xor
fistpl
xchg
adc
inc
insb
clc
addr16
js
in
sub
jg
popa
or
rcr
adc
ret
stc
dec
call
xchg
cwtl
push
and
mov
jns
fdivl
push
push
mov
arpl
add
mov
out
dec
add
and
aad
cmc
popa
lods
sbb
imul
push
loopne
sub
jecxz
mov
aam
push
and
push
ds
call
dec
lret
inc
add
aaa
jb
fisttpl
pop
int3
in
fs
out
aas
rorl
and
movsb
outsl
in
adc
in
xchg
mov
es
add
in
adc
add
dec
aad
mov
mov
and
aam
add
mov
pop
jno
popa
jp
imul
adc
lret
cmp
xor
stc
cmpsl
das
ljmp
inc
xor
sbb
ret
mov
gs
fldl
jecxz
imul
sahf
xor
push
mov
xchg
cmp
imul
fwait
ja
mov
jnp
das
sbb
clc
xchg
mov
shlb
xor
mov
add
les
push
jo
dec
arpl
push
push
xor
stos
jecxz
adc
out
adc
adc
push
jge
sub
sbb
pop
mov
sti
jnp
adc
add
and
and
cs
lock
dec
insl
bound
sub
inc
lds
cli
in
rcr
lcall
cltd
dec
bswap
push
jnp
clc
mov
lahf
push
bound
cs
xor
shlb
jmp
or
sub
enter
roll
cld
adc
sbb
or
int
add
fidivrl
xchg
xchg
add
out
pop
jge
lods
sub
in
cwtl
out
ds
lds
test
adc
mov
cmp
popa
testl
fidivs
lods
or
dec
unpcklps
js
push
imulb
nop
aam
xchg
out
sbb
add
clc
std
or
jne
lret
call
shlb
sub
icebp
lds
push
daa
imul
xor
lock
sbb
push
es
jg
jl
add
and
aas
push
jae
jge
or
pop
mov
cmp
popa
stos
fs
push
or
pop
arpl
stos
mov
out
and
cli
mov
adc
sub
inc
flds
mov
push
pop
out
push
xchg
fistps
pop
lds
sbb
sub
adc
imul
inc
test
push
mov
cs
cmpsb
adc
cmp
adc
pop
ror
jno
mov
cwtl
mov
nop
mull
in
jl
ret
push
mov
scas
lods
push
mov
fidivl
stos
sub
mov
stos
cmpsb
mov
loop
stc
outsb
repz
shll
mov
aam
mov
aas
popf
stos
popf
mov
sub
cmp
inc
pusha
or
aam
cmp
shll
rol
sub
push
dec
pop
or
int
push
idivb
aam
or
push
inc
out
cmp
or
out
xchg
xchg
push
loopne
mov
fnstenv
sub
jno
adc
sub
bound
mov
jo
mov
mov
cld
fiadds
xchg
xor
lea
mov
cmp
in
dec
call
ss
sub
sub
sub
inc
shll
idivb
imul
mov
mov
xchg
push
roll
xchg
aas
add
xor
push
lret
and
xchg
or
or
test
push
mov
out
sub
out
loopne
dec
push
push
loopne
jle
lcall
adc
int
lock
sbb
test
push
xlat
jae
sub
into
mov
mov
sbb
pop
ds
lds
jmp
jns
push
jno
jns
pop
scas
sbb
fmulp
cmp
cli
popf
push
mov
and
xchg
xchg
mulb
clc
and
mov
test
cld
das
xor
fimull
mov
adc
sarb
aas
pop
jns
inc
push
jl
in
sub
rorl
nop
std
mov
lret
daa
push
ss
and
in
aas
shrb
adc
adc
out
mov
fisubs
lock
and
push
icebp
inc
mov
into
leave
mov
push
xchg
xor
mov
sub
lea
lods
sar
call
jmp
push
shrb
jecxz
add
or
cld
sub
or
gs
nop
dec
imul
popa
mov
cmp
mov
push
sbb
mov
adc
in
sbb
inc
mov
outsl
and
mov
shl
ss
testb
fimuls
mov
cli
xor
xchg
jle
in
leave
mov
repz
fistps
jle
test
add
pop
xchg
jmp
or
push
push
call
sbb
push
addr16
mov
and
xor
push
divl
cli
dec
out
sbb
lcall
xor
nop
add
popa
push
enter
and
sbb
or
and
clc
and
shl
sub
xor
icebp
inc
or
call
clc
roll
jg
and
jge
repz
lret
xor
sub
lahf
jle
sbb
test
cmp
push
fwait
mov
popf
inc
into
imul
xchg
pop
push
hlt
out
mov
sub
outsl
ljmp
push
adc
test
lret
test
aaa
push
in
nop
shll
dec
shr
es
or
pusha
pop
cmp
ss
pop
cmp
pop
inc
mov
jbe
addr16
cmpsb
sub
inc
scas
cmp
ret
loopne
push
rorl
push
mov
je
cltd
out
mov
mov
popf
cmp
test
xlat
shlb
andl
xor
push
jo
rorb
leave
imul
sub
scas
pop
and
lea
sbbb
das
loopne
and
pop
test
xchg
adc
insl
cmp
inc
xchg
jb
loop
xchg
push
adc
inc
test
push
sarb
mov
sbb
lcall
shll
aaa
and
iret
inc
jnp
jmp
and
adc
ret
sub
xchg
idiv
repnz
aad
cld
jle
jmp
or
xchg
popa
test
mov
cld
pop
jb
cmpsb
xchg
enter
dec
test
decb
bound
push
pop
shrb
adc
jecxz
add
fstpl
dec
jb
xor
insb
clc
aas
or
subps
and
push
mov
leave
mov
cmpsl
aam
sbb
es
add
shl
cltd
lret
dec
sbb
sbb
shll
pushl
arpl
adc
insb
mov
inc
std
arpl
dec
outsb
aas
cli
sub
jmp
std
into
test
sub
clc
push
sbb
rorb
mov
inc
dec
cmp
mov
mov
xor
iret
push
cmp
mov
pop
pop
jg
push
pop
mov
dec
adc
sub
adc
mov
mov
dec
jbe
xchg
push
xlat
loop
and
jno
pop
xchg
loopne
or
jno
xchg
lahf
or
dec
push
into
repnz
xchg
andb
add
add
jns
sub
jge
daa
pop
adc
and
xchg
jno
xchg
add
jmp
mov
push
adc
shl
es
ss
sbb
or
push
stos
insl
push
sub
js
fs
lahf
frstor
imul
sti
lods
adc
add
cld
push
das
fs
pusha
jmp
loope
data16
es
xor
lret
into
dec
and
add
push
fucomi
outsl
ror
imul
push
loopne
add
pusha
daa
or
pop
dec
loopne
ret
andl
sub
adc
sub
clc
mov
repnz
inc
push
inc
out
iret
punpckhbw
cmp
mov
lcall
push
bound
dec
sbb
aaa
mov
pop
jg
test
lret
xchg
fstpt
adc
lods
fnstsw
lods
lret
add
jp
push
das
roll
pusha
testl
or
es
rcrl
sub
push
arpl
inc
stos
cmpsl
inc
fcomps
pushf
movsl
push
cs
out
xor
dec
outsl
sub
push
mov
inc
cmpl
mov
cltd
imul
clc
fsubrl
mov
dec
mov
mov
sub
fimull
inc
inc
dec
jb
and
mov
jnp
call
pushf
pop
mov
mov
dec
out
xorb
clc
test
xchg
xchg
and
mov
out
add
adc
dec
fidivl
cmp
inc
ljmp
pop
adc
fyl2xp1
push
sbb
dec
outsl
and
mov
cld
jns
inc
push
pop
popa
mov
in
cltd
jb
rcll
rorb
jo
mov
outsl
imul
pop
ljmp
out
xchg
out
xchg
inc
dec
xor
dec
xchg
or
or
mov
xchg
xchg
xchg
cmp
xchg
dec
lds
xchg
mov
and
mov
dec
sarl
push
xor
addr16
mov
add
mov
cmc
fs
mov
stos
adc
sbb
push
add
sahf
ss
fbld
lret
sti
dec
testl
mov
aad
mov
scas
cs
loopne
pop
out
mov
pop
pushf
aas
clc
addb
ds
push
fcomps
add
fisttps
sbb
xchg
mov
int
mov
out
jecxz
and
sbb
add
imul
ret
inc
aaa
sahf
cmpxchg
pop
cmp
sbb
cmc
movsb
testb
loope
sbb
in
test
pushf
popa
dec
pop
loop
sbb
sbb
sti
call
sbbl
push
popl
rcr
and
jo
lcall
ja
outsb
mov
push
xchg
in
loop
push
pop
jl
pop
outsl
jns
push
xor
jg
add
dec
add
cmp
cmp
in
f2xm1
sarl
fisttpl
mov
sahf
clc
cltd
mov
pop
out
dec
fisttps
cmp
shlb
shll
outsb
incb
pop
mov
fimull
jno
push
add
pop
adc
inc
dec
inc
xor
push
aam
xor
lods
and
cmc
imul
and
mov
jl
cltd
mov
mov
dec
scas
lds
nop
out
adc
arpl
out
mov
shl
jp
pusha
jnp
and
fcomp
cld
jl
jbe
inc
add
lods
and
xor
sub
push
lods
test
insb
mov
xchg
cld
push
int3
ss
lock
xlat
fmul
test
push
dec
popf
stos
mov
cmpsb
sub
cmpsl
shlb
mov
cwtl
pusha
rcl
sub
pop
ljmp
inc
icebp
loop
xchg
inc
push
iret
pushf
or
adc
repnz
ret
lahf
sub
pop
xor
add
es
fistpl
push
mov
fwait
jne
and
xchg
mov
ljmp
mov
popf
std
arpl
es
mov
mov
jecxz
imul
testl
lret
outsl
jp
das
enter
popa
mov
add
lea
pop
jp
jo
out
rcr
push
fwait
cmpsb
fcoml
shl
cmp
push
xor
stc
jb
mov
pop
mov
mov
cmp
out
jle
lock
add
dec
lods
popf
jg
sbb
jecxz
jecxz
fmul
jo
sbb
arpl
mov
repz
sarb
stos
loope
cs
ljmp
andl
pop
in
mov
outsl
int
inc
sub
jne
or
ja
imull
dec
xor
jg
pop
or
sub
mov
xchg
mov
cmp
sbbb
cmp
dec
pop
in
testb
adc
hlt
cmpb
test
imul
hlt
inc
jg
mov
gs
cmp
xlat
test
jge
cmpb
lret
xchg
add
lcall
popf
incb
mov
jb
inc
iret
push
and
xchg
int3
arpl
cld
jecxz
sbb
xlat
testb
ds
push
xorl
inc
shll
push
or
mov
xchg
jns
fs
icebp
pop
adc
adc
stos
mov
daa
and
dec
adc
daa
xchg
icebp
shlb
and
adc
push
cmp
pop
cli
inc
push
xchg
jnp
sub
xchg
ja
rcll
jo
mull
inc
les
pop
dec
popa
mov
push
repnz
sbb
lcall
inc
xor
shll
test
pop
pop
jae
iret
push
addb
push
gs
jb
mov
mov
inc
xchg
addb
pop
andb
cmp
addb
mov
and
fcompl
mov
jnp
mov
xchg
f2xm1
inc
jp
call
push
aam
adc
xchg
iret
mov
stos
pop
cwtl
mov
pop
mov
mov
cmp
pop
jb
shl
lahf
jp
add
pushf
mov
mov
jnp
popa
xor
sbb
adc
dec
in
sbbb
fisubrl
inc
or
aam
pop
mov
out
xchg
test
ja
in
aad
les
test
gs
cs
mov
pop
int
pop
sub
in
and
push
jo
in
mov
aaa
push
fisubrl
xor
out
add
scas
repnz
xor
movsl
jbe
jns
jg
ja
shr
out
mov
sbb
cmp
aaa
popa
dec
and
mov
push
dec
adc
mov
cmpsb
imul
mov
mov
dec
mov
adc
xchg
add
jp
jg
jp
jbe
dec
push
imul
cmp
cld
mov
pushf
cmc
and
rolb
adcb
imul
mov
inc
pop
out
push
fsubs
sar
in
dec
arpl
lret
mov
sbb
rorl
aad
sub
into
fcomip
lcall
out
sub
xor
cmpsl
ret
in
push
cli
fldpi
ljmp
imul
mov
loope
cld
adc
jle
cmp
inc
xor
mov
inc
in
add
lods
cmp
lret
adcl
jne
mov
fs
pop
or
lcall
sub
out
shr
pop
mov
jp
lods
jns
or
and
fisubrs
pop
repnz
pusha
sbb
push
ja
jle
adc
mov
lret
cld
xchg
iret
shrb
or
sbb
aam
orl
popl
nop
test
aam
sti
dec
pop
ds
cld
xor
inc
adc
jb
je
sti
call
cmpl
mov
lea
enter
mov
repz
stc
xchg
add
out
xchg
dec
aad
clc
add
sub
jns
cmpsl
and
jne
mov
fmull
mov
loop
jb
or
pusha
xchg
dec
xor
fs
int3
push
dec
lea
cmp
xchg
lods
lds
xlat
xchg
jl
push
arpl
xchg
js
and
sub
fs
fyl2x
xchg
stos
push
incl
mov
push
pop
call
stos
and
cmpsb
ss
sbb
xlat
fldcw
movsl
fnstsw
fsubl
in
push
sub
lret
testb
nop
inc
inc
je
scas
sub
push
xchg
inc
rcr
push
test
push
jle
jb
js
mov
dec
ret
mov
xchg
xor
fmuls
in
add
enter
adc
out
imul
inc
or
negb
pop
stos
mov
mov
inc
fcmovu
mov
aaa
jmp
xchg
jmp
test
data16
xabort
int
mov
or
test
xor
repnz
pop
mov
arpl
cmpsb
inc
jns
mov
int
loop
lods
pop
lods
test
fwait
add
mov
sbb
pop
mov
leave
fucomi
das
and
or
mov
cmpsl
in
subl
xlat
mov
push
cmp
dec
rclb
xchg
xor
dec
rorl
lds
mov
arpl
rorl
sarb
pop
xchg
test
sahf
add
sub
mov
mov
jp
vpaddd
fadd
sbb
lret
push
mov
xchg
lock
repnz
mov
aas
add
sub
pusha
fimuls
mov
or
xor
xchg
stos
test
sti
and
faddl
popa
cwtl
jne
mov
push
fdivl
and
xchg
stos
pusha
sub
mov
pop
sub
enter
jns
xlat
sbb
jmp
int
cmp
adc
sarl
call
stos
icebp
ds
int
push
inc
in
sub
xor
adc
sub
or
fisubl
daa
imul
add
xor
pushf
inc
in
pop
inc
mov
sub
out
rcrl
push
mov
movsl
imul
pop
inc
ds
arpl
mov
test
lahf
cmp
dec
cmp
jecxz
ss
adc
mov
hlt
jg
lret
xor
lret
sbb
fisttpl
mov
ret
jbe
push
xor
sbbb
mov
cmovae
and
lock
fistl
iret
aaa
sbb
in
mov
sarb
pop
sub
ret
pop
jecxz
mov
stc
mov
ret
sub
and
pop
xchg
push
dec
pop
sbb
sub
push
in
push
ret
shrb
mov
fwait
mov
pop
push
imul
adc
popa
add
into
jne
mov
dec
push
mov
jecxz
lret
jmp
and
sbb
xor
fsts
push
sbb
mov
sbb
jb
adc
pop
mov
jns
lahf
insb
jl
fdivrp
aaa
test
data16
xor
pushf
add
aas
fstps
cmp
pusha
adc
imul
adc
incl
pop
push
lahf
cltd
data16
sbb
ss
lea
popa
cs
pop
jno
adc
cmp
leave
cwtl
pop
sbb
adc
add
pop
pop
js
jb
cs
ret
adc
jo,pt
inc
pop
mov
jno
dec
dec
outsb
mov
cmp
and
jle
popa
adc
mov
jmp
xor
jle
jns
fmulp
pop
outsl
test
sahf
jns
orl
add
ss
lahf
aas
mov
out
and
lcall
xchg
cld
dec
adc
adc
aaa
push
imul
add
dec
in
aam
dec
sub
add
mov
push
int
cli
cmp
cmp
xchg
pop
lsl
test
mov
scas
icebp
sub
daa
loopne
rorb
jne
mov
jecxz
je
aaa
rcrb
jge
dec
pushw
cld
cmc
jl
pop
sub
and
imul
aas
inc
dec
test
cld
dec
mov
sub
call
ret
add
inc
test
js
icebp
lods
xor
stos
cltd
sbb
scas
sub
mov
mov
cmp
inc
wrmsr
iret
test
jg
xchg
fimull
in
xor
popf
js
jle
push
call
dec
cmp
jne
adc
jnp
push
jbe
push
imull
movsb
and
pop
mov
sub
cmpsl
fistl
movsb
cs
push
ja
cmpsb
pop
mov
ret
ja
jle
mov
add
and
popa
das
sbb
jp
xchg
pushf
js
push
pop
sarl
jnp
pop
out
int
sub
pop
lcall
aad
jp
mov
sti
testb
ja
shll
es
data16
dec
stos
mov
ja
inc
filds
or
pusha
inc
orl
xor
daa
mov
imul
xchg
int
xchg
ljmp
pop
mov
cwtl
lahf
sub
jp
mov
fldenv
mov
icebp
inc
or
das
jnp
sbb
dec
or
std
dec
test
dec
sub
jl
adc
push
mov
xchg
xor
ret
stc
int
cld
adc
test
jo
and
aad
xchg
loopne
cmp
hlt
loopne
jnp
add
inc
aas
cs
mov
jns
adc
scas
ret
mov
pop
repnz
cld
mov
addr16
mov
test
mov
jb
mov
jecxz
ljmp
cmp
int3
and
shll
aad
int
fisubrs
mov
dec
inc
bound
xor
into
mov
movsl
adc
push
or
cmpsb
nop
lea
mov
jo
dec
push
sub
out
gs
lcall
ja
rclb
andl
mov
lds
fidivl
cwtl
pop
cld
jge
ljmp
or
mov
mov
inc
jge
stos
jg
addl
sub
nop
roll
ljmp
lock
inc
cmpsl
pop
mov
in
aas
jmp
inc
jle
xor
mov
loopne
jns
push
bound
jnp
outsb
cld
mov
daa
movsl
mov
es
pop
popl
mov
lods
sbb
adc
je
cmc
aam
push
das
test
dec
repz
shr
pop
jmp
dec
stos
aam
js
cmpsb
jp
pop
and
outsb
out
test
jle
mov
popl
enter
aam
cmp
mov
xchg
jns
out
sub
jmp
call
andl
cwtl
fnstcw
fwait
sub
cmp
xchg
lret
mov
out
pop
jle
add
iret
push
xor
insl
dec
pushf
mov
sti
adc
cmc
arpl
sbb
fisttpl
xchg
scas
inc
loope
cli
mov
ds
add
movb
xchg
loopew
cwtl
nop
mov
lock
sbb
insl
dec
fadds
adc
xchg
pop
lds
mov
mov
cmpsb
nop
int3
scas
sub
into
lods
add
or
inc
pushf
loop
rcr
add
mov
and
cmp
out
repz
push
mov
and
jae
pop
pop
ret
decl
mov
out
rcll
iret
mov
jns
push
subl
jl
adc
fistps
sbb
pop
and
shl
dec
movsl
daa
cmp
cmp
push
pop
push
mov
subb
sub
xchg
mov
hlt
xchg
cmp
aad
xor
jg
lcall
xchg
cmpsb
stc
or
std
out
pop
sub
xchg
lds
adc
hlt
mov
sarl
push
addr16
lea
mov
outsl
and
and
repz
push
stc
divl
ds
pop
push
mov
icebp
mov
jno
je
adc
xchg
push
or
js
push
movsl
imul
cmp
add
mov
scas
inc
outsb
scas
push
mov
cmpsl
mov
fmull
jne
adc
add
mov
les
jns
loop
cli
xor
add
orl
shr
or
inc
cmp
sahf
jg
mov
ret
jg
fisubl
lahf
push
repz
and
xor
shlb
adc
leave
dec
sbb
push
push
cli
nop
movsb
jb
out
jnp
sbb
rcrb
xor
std
pop
push
test
popa
aas
sbb
add
cwtl
mov
ja
push
ss
xor
sbb
xchg
cmpsb
in
cld
lret
faddp
out
push
xchg
sahf
rorl
jo
js
aad
and
stos
sbb
and
sub
pop
notb
adc
xchg
pop
xchg
into
push
sub
dec
int
inc
mov
pop
cmp
mov
cltd
shlb
jbe
ffree
or
insb
test
and
lds
pop
hlt
adc
call
aam
push
or
sahf
mov
xor
pop
addr16
add
mov
cmp
pop
inc
push
dec
call
fwait
xor
andl
lods
adc
lret
je
dec
pop
pop
cmp
mov
mov
clc
sub
inc
arpl
iret
or
mov
dec
frstor
jmp
pop
sub
fildl
ficoms
mov
cli
mov
lock
add
inc
lret
sbb
sbb
pop
data16
fisubrl
mov
out
ds
and
mov
rorl
lahf
rcll
std
jae
push
xor
sub
ja
lcall
fwait
iret
fpatan
sub
inc
popf
outsl
push
cmpsl
in
or
das
and
testb
loopne
movsb
std
in
movsl
out
push
imul
sarb
xchg
xor
sub
add
bound
les
lea
push
sahf
notl
adc
lahf
cmpsb
aam
lds
dec
clc
shlb
cmp
test
dec
rcl
shll
addl
int
add
clc
loopne
cltd
adcb
xor
jl
fcomip
movsl
mov
and
mov
gs
movsb
pop
lea
rcrb
push
loop
xor
push
or
insl
jmp
pop
jnp
rcrl
fistps
movsl
aad
jb
add
test
jb
push
mov
jl
mov
out
icebp
dec
clc
out
fdivs
aad
sbb
adc
jo
sbb
arpl
ret
and
clc
ret
mov
add
mov
mov
stc
pushf
test
int3
xor
aad
and
inc
in
mov
cmpsl
into
sarb
hlt
pop
dec
hlt
ss
pop
jecxz
or
addl
aam
in
mov
sub
sahf
or
xchg
mov
adc
sub
idiv
xchg
fidivrl
mov
jo
in
in
cmpsl
dec
stc
loope
add
mov
es
jo
insl
inc
pop
out
pop
cmp
aas
inc
jle
pop
sbb
mov
or
or
jmp
call
nop
lret
nop
cli
hlt
pop
sub
pop
cmp
lods
aas
mov
stos
nop
adc
repnz
and
stos
jno
lcall
push
cmpsl
out
jl
insl
add
pop
jns
cltd
jge
add
xchg
mov
adc
or
mov
add
pop
jmp
pop
movsl
test
aad
das
daa
cmp
sbb
pop
decl
dec
fwait
mov
lcall
xor
loopne
xchg
mov
jno
int3
jg
leave
ds
outsb
push
xchg
es
and
push
push
mov
xor
outsb
jmp
scas
add
pop
mov
sub
adc
inc
insl
aaa
pop
dec
mov
mov
fcoml
fists
insb
cmpsl
add
and
aam
aam
jmp
cmp
xchg
adc
fucomi
push
int
jmp
add
aad
lret
sub
add
sbb
fistpll
add
sbb
stc
pop
pushf
les
mov
out
jg
int
add
sbb
push
mov
fcom
lret
push
mov
push
das
jne
adc
add
inc
add
xchg
enter
mov
mov
inc
shll
cmp
aas
xchg
insl
sahf
fcomi
or
pusha
stos
mov
cmp
sti
lea
bound
pop
mov
ret
push
aad
in
ror
and
outsl
xchg
jb
repz
xchg
mov
fdivs
daa
sbb
cmp
addl
imul
push
pop
sub
fucom
xchg
push
sbbb
sub
mov
pop
xchg
call
jg,pn
and
push
addb
lret
inc
orl
imul
push
mov
cld
sti
cli
add
ja
mov
jmp
adc
cmp
mov
and
dec
mov
out
or
in
stc
and
cmp
pushf
xchg
mov
js
sub
xlat
xchg
push
push
mov
adc
inc
outsl
mov
call
mov
call
pop
aam
stos
subb
mov
or
fsubs
mov
sub
rcl
dec
sub
and
iret
dec
mov
jae
arpl
fadd
inc
sahf
dec
ret
inc
subl
fadds
mov
xchg
jp
fwait
popf
sarb
in
ja
jne
out
inc
inc
sub
xchg
sub
push
dec
pop
icebp
cmc
inc
sbb
mov
jecxz
iret
int3
mov
dec
iret
push
dec
std
xlat
and
ljmp
mov
jnp
cmp
xor
sub
or
mov
mov
sub
xchg
sub
mov
in
lret
xor
mov
adc
xor
xchg
xor
cmp
inc
popf
inc
cmp
daa
outsl
lods
ja
loope
mov
and
dec
jns
shrb
pop
mov
jnp
bound
adc
or
jnp
mov
andl
pop
jns
popa
in
pop
into
repnz
pop
sbb
jge
mov
mov
mov
pop
bsf
mov
push
nop
gs
testl
mov
lock
lods
andb
loop
and
lock
jge
and
cltd
ret
push
xor
pop
ljmp
xchg
loope
outsb
add
fldt
decl
dec
aam
ds
scas
add
and
or
andl
dec
jp
cmpsl
pop
mov
js
mov
fcom
test
cwtl
inc
ds
jnp
pop
xchg
stos
fmul
cmp
lret
dec
rcrb
int
cmp
js
sti
jne
xchg
jecxz,pn
sub
sarl
stos
and
sahf
xor
mov
mov
mov
mov
negb
xor
aad
enter
sbb
mov
bnd
cld
push
mov
mul
movsl
push
xchg
xor
aaa
inc
mov
and
flds
rorl
cld
shrl
fucomip
imul
push
repnz
repz
and
push
mov
pop
pop
scas
jnp
lcall
adc
dec
mov
push
add
inc
add
pop
shll
xchg
lcall
xchg
data16
pop
ds
xchg
fcompp
pop
add
cli
movzwl
sbb
sub
pop
outsl
jb
scas
cld
mov
add
pop
call
jmp
lods
aas
or
dec
in
notb
stos
xchg
mov
push
lods
lods
jo
sbb
sbb
cld
or
dec
daa
push
cmp
sub
outsb
sub
push
push
test
call
std
and
jns
cltd
dec
push
pusha
add
out
pop
add
hlt
ja
fcmovnb
fnstenv
lods
sbb
mov
cmp
mov
mov
repz
or
daa
lds
jmp
push
je
in
dec
inc
jns
inc
or
call
lahf
std
and
das
sbb
loop
xor
adc
pop
pop
jae
xor
ret
and
sbb
mov
inc
movsl
inc
add
or
jne
data16
jno
sub
movsb
push
lock
pop
sbbl
fbld
xor
xchg
out
popa
test
adc
adc
aam
inc
sbb
inc
fwait
out
pushf
adc
mov
pushf
push
mov
loop
adc
xchg
dec
mov
sbb
inc
aaa
mov
fcomps
aaa
pop
outsb
push
push
pop
aam
adc
push
inc
xchg
js
test
jle
push
push
push
in
dec
mov
test
imul
ds
cmp
mov
dec
pushf
aas
insl
dec
xor
test
test
loope
jae
xlat
adc
test
or
or
inc
outsl
in
leave
adc
jno
lret
js
pop
std
sub
and
iret
inc
mov
cmp
jecxz
je
in
dec
rcll
std
push
mov
mov
mov
ss
sarb
pop
pop
jmp
xchg
ds
ret
jo
xor
fmull
cli
cmpsb
das
xchg
and
out
cmp
push
push
fisubrs
adc
aam
shlb
pop
ds
mov
ffree
dec
test
stc
enter
sub
inc
outsb
cmpsb
out
in
or
jg
mov
repz
outsb
out
outsb
push
mov
pusha
xor
sbb
repz
xor
mov
xchg
loopne
inc
mov
fwait
push
dec
and
push
das
xor
pushf
outsb
in
test
sbb
int3
add
mov
repz
and
xchg
fildl
fs
add
push
mov
cmp
rcll
jb
push
cmp
movsb
lods
movsb
dec
ljmp
roll
inc
test
hlt
scas
into
push
and
incl
and
fwait
enter
xchg
or
sbbb
dec
add
stos
push
xchg
cltd
inc
clc
dec
or
jbe
xchg
or
adc
xchg
iret
mov
mov
bound
push
xchg
or
mov
dec
xor
out
mov
fiaddl
mov
dec
out
mov
add
pusha
mov
inc
inc
in
or
lds
mov
sbb
sub
or
jmp
pop
cli
mov
mov
outsl
push
and
cwtl
mov
mov
lds
push
insl
ret
mov
adc
insl
inc
lods
or
or
jp
das
into
xchg
dec
jne
icebp
push
ljmp
iret
xchg
sahf
or
mov
mov
je
and
push
pop
inc
push
movb
xchg
mov
outsb
test
enter
adc
cmpsl
rcll
adc
cmpsl
cmp
mov
mov
stos
mov
xor
stos
mov
mov
into
xor
insb
not
dec
mov
jmp
push
inc
adc
sbb
cmpsb
ljmp
and
rcrl
test
incb
imul
es
dec
popf
fimuls
push
cmp
xor
fimuls
arpl
jl
xor
stos
xchg
fidivrl
or
icebp
popf
imul
add
pushf
into
lods
sahf
xlat
fdivs
test
pop
cli
pop
inc
ret
adc
xchg
mov
ljmp
sbb
repz
shlb
inc
decb
mov
imulb
insl
mov
outsb
jae
stos
sbb
in
jmp
sbb
ja
test
mov
rcrl
scas
rcll
inc
sbb
dec
outsb
push
mov
jbe
inc
push
insl
je
xor
scas
test
xor
and
in
in
mov
and
jp
lret
int
test
lahf
mov
xchg
xor
pop
xor
xchg
pop
mov
mov
mov
sti
mov
mov
xor
pop
scas
sbb
jae
pushf
jge
pop
fwait
cmp
pop
jl
sbb
pop
xor
je
adc
call
mov
mov
jg
inc
lret
sbb
mov
sub
sahf
in
push
aas
sti
pushf
shl
ret
arpl
pop
sub
ss
mov
nop
sbb
bswap
shr
jno
aad
inc
je
and
jecxz
and
fnstsw
scas
mov
cmc
ret
dec
xor
mov
cmp
aam
mov
andl
jbe
movsl
aad
aas
adc
movsl
push
setno
add
pop
arpl
fdivr
inc
ret
into
xor
cli
ljmp
fisubl
clc
sub
jno
cs
lahf
das
lret
out
jae
data16
sbbb
cmpsb
lcall
dec
out
cmpsb
lcall
bound
outsl
das
repz
cmp
loop
mov
and
daa
or
cmpsl
int3
fidivs
enter
mov
sub
out
or
dec
mov
dec
dec
sbb
dec
xor
call
sub
lahf
inc
and
sbb
add
xlat
sti
cwtl
sub
clc
and
fstpl
cmc
cwtl
jbe
xchg
ret
or
mov
scas
pop
xchg
xchg
jo
mov
cmpsb
negl
gs
cmp
repnz
mov
pop
test
xchg
dec
cli
mov
mov
out
call
adc
hlt
shr
jmp
xchg
out
enter
cli
imul
mov
lock
in
hlt
sbb
imul
lds
dec
test
rep
push
push
leave
lret
test
pop
jp
mov
cli
mov
gs
push
fmull
jle
aad
jo
jg
std
mov
cmp
orb
pop
sbb
mov
stos
pop
push
xor
in
cmp
clc
jne
pop
xlat
jo
push
xor
insb
ljmp
jne
in
fstpl
sbb
xchg
xor
or
mov
push
or
inc
ret
sbb
cmp
jg
mov
xchg
xchg
pop
fcoml
out
sub
insl
js
out
mov
std
popf
dec
mov
xchg
dec
mov
and
add
cmc
data16
jne
jl
pop
movsl
xor
dec
mov
or
rsqrtps
addr16
aaa
rcpps
or
mov
ror
xchg
test
mov
loopne
dec
pop
and
ds
shll
dec
pop
or
rcll
sti
ljmp
mov
cltd
ror
or
shll
mov
push
mov
push
pop
cs
ficoml
mov
fnstcw
outsl
out
leave
fstpl
jbe
push
inc
or
adc
imul
push
xor
or
jae
mov
adc
test
mov
hlt
leave
aaa
xchg
cmc
mov
mov
pop
in
rcr
sbb
xchg
test
loope
scas
sbb
dec
ds
fidivrs
mov
popf
xchg
testb
add
ret
into
fdivrl
pop
rorl
push
cmp
insb
adc
or
ss
mov
sub
idivb
ja
sbb
mov
sarl
mov
jp
push
jecxz
fistl
insb
and
inc
and
push
iret
sub
aaa
cs
test
or
jnp
push
dec
mov
lods
mov
icebp
scas
xor
mov
xor
adc
mov
adc
xchg
inc
add
test
dec
cmp
enter
pop
mov
aam
mov
jnp
or
mov
pop
les
jnp
sbb
cmpsb
dec
in
jp
add
mov
push
dec
pop
jp
pop
addr16
xchg
sti
sub
pusha
pop
neg
mov
cmp
mov
inc
push
jl
fs
ja
xchg
hlt
jge
adc
sub
or
jle
dec
movsb
push
push
clc
loopne
inc
dec
jmp
push
movsb
js
iret
pop
push
sbb
pop
mov
cmp
jmp
in
arpl
arpl
dec
push
xchg
nop
xchg
cli
inc
add
stos
cmp
xor
fwait
aam
popa
lds
mov
mov
sub
inc
in
cltd
ds
jns
and
mov
fcompl
test
daa
cmp
dec
push
or
and
sbb
fnstenv
push
xor
jo
mov
jg
jg
or
dec
lahf
mov
lock
cmpxchg
or
sub
movsl
jne
jg
movsb
nop
xor
and
addr16
pop
js
outsb
jp
cmp
cmpsl
mov
test
shll
sub
dec
insb
dec
xchg
pop
outsb
pushf
add
push
fstl
mov
mov
leave
cld
fisubrs
ljmp
dec
and
xor
flds
call
std
fists
rol
je
popa
xchg
pusha
cmpsl
inc
cmpl
cwtl
repnz
notl
mov
jbe
sarb
or
xchg
mov
addb
ljmp
adc
xor
ret
mov
add
jl
andb
adc
inc
popf
dec
dec
jecxz
fdivrp
jp
mov
inc
loop
inc
test
ds
rcll
gs
cmp
push
inc
dec
mov
lcall
fdivs
cmp
xchg
stc
mov
inc
sbb
inc
push
sub
and
push
inc
shrl
sbb
movsl
sbb
in
mov
push
fsubrs
out
xor
push
push
sbb
mov
mov
aam
push
sar
in
push
jnp
cmp
movsl
pushf
or
ja
lods
pop
inc
sub
and
js
cmpsl
cmpsl
dec
jge
pop
pop
mov
test
in
mov
jno
iret
int
jno
cmp
ret
mov
out
lret
cld
jo
add
mov
push
dec
repnz
je
mov
and
fs
ret
test
out
dec
hlt
scas
adc
xor
mov
push
mov
int
sub
ret
push
dec
frstor
das
fsts
mov
insl
adc
pushf
mov
mov
arpl
pop
insl
imul
inc
js
sbb
movsb
or
push
sbb
imul
data16
cmpsl
fistpl
cmp
outsb
xor
mov
cmc
cs
fcompl
mov
xorb
xor
shlb
xchg
dec
je
pop
mov
daa
or
mov
mov
xchg
push
lds
repnz
jne
stos
cmp
sarb
cli
lods
out
add
adc
cld
dec
int
jnp
movb
stos
jns
or
repnz
mov
scas
sarb
lods
fldcw
inc
mov
mov
sbb
nop
repz
mov
pop
fimull
leave
and
jnp
outsl
decl
jmp
fcmovnu
aaa
xchg
rcll
lds
movsb
in
sub
mov
and
cmp
outsb
sbb
bound
pop
cmp
pushf
sub
lret
mov
dec
movsl
adc
mov
daa
adc
rcrl
sbb
addr16
ficompl
sbb
pop
aas
xor
cld
xchg
nop
xchg
jp
in
mov
cmc
xlat
xor
addr16
add
inc
xchg
sub
sub
movsl
dec
insb
xor
loop
in
clc
mov
test
loopne
cmp
lods
xchg
inc
testb
push
lods
sub
bound
ficomps
test
addr16
andl
int
jns
mov
xchg
repnz
repz
je
add
lods
adc
je
daa
sbb
pushf
shrb
dec
jl
or
sahf
int3
and
cli
and
stc
cmp
xchg
jmp
xchg
jnp
inc
vmread
sbb
or
jnp
xor
aam
push
cmc
cli
pusha
jbe
xchg
aaa
pusha
movsl
mov
les
bound
test
jmp
stos
sbb
add
daa
movsl
test
jle
mov
out
mov
stos
xchg
popa
pop
push
xor
aam
out
test
cmc
jp
inc
xor
push
fwait
cli
xor
mov
std
icebp
and
insb
and
maxps
bound
jns
jae
cmp
adc
rcll
cmp
aad
lock
push
insb
push
les
inc
mov
mov
jl
imul
xchg
test
pop
clc
aas
mov
popa
sarb
mov
and
stos
mov
in
popf
xor
pop
xor
andb
mov
scas
dec
add
sbb
shll
test
sbb
pop
jns
into
cmpsl
popa
push
movsl
or
lds
mov
shlb
imul
cmp
call
ds
leave
inc
push
mov
mov
jp
aam
xchg
enter
mov
dec
adc
sub
movsb
xchg
mov
add
inc
dec
lret
push
cmpsb
mov
dec
icebp
test
jnp
pop
cwtl
mov
imul
adc
fdivp
xchg
stos
dec
fwait
pop
inc
jle
fidivrs
pop
jb
mov
add
sub
inc
ljmp
imul
pop
icebp
push
sbb
add
push
loop
or
int
nop
out
xor
adc
cmpsb
or
mov
test
test
or
push
rolb
mov
inc
push
adc
dec
gs
jb
push
loope
cmp
stos
pushf
ja
in
cltd
icebp
push
dec
lods
loop
adc
movsb
shrb
scas
mov
and
imul
cmpsb
xchg
pop
and
mov
cmp
outsb
adc
jge
je
fcoms
in
cmp
daa
inc
shl
leave
jp
xor
fisubs
in
loopne
sbb
lahf
popf
test
pusha
or
pop
inc
mov
leave
cli
arpl
adc
pushf
rcl
in
into
cmpsl
mov
dec
pop
scas
jle
xchg
jp
or
hlt
cmp
inc
inc
mov
or
int3
push
lcall
mov
pop
mov
dec
jge
jle
xor
scas
pop
pop
pop
mov
xchg
outsl
mov
pop
jbe
dec
je
hlt
ret
mov
jmp
cs
xbegin
sub
cli
stos
adc
orb
fadd
cmpsb
data16
xor
outsb
repz
loopne
jle
xor
xor
test
in
mov
push
adc
lods
fsubrp
dec
and
mov
stc
repz
push
aaa
cli
inc
jp
sarb
pop
mov
sbb
imul
add
xor
ss
fistps
dec
js
fmuls
out
xchg
mov
mov
out
push
movsb
xchg
sarb
cmpb
xchg
je
stc
xchg
daa
inc
pop
loop
fdivl
jae
inc
push
fisubs
enter
popf
and
repz
mov
push
lret
js
fwait
in
pop
jl
push
cmpsb
or
bswap
scas
ds
xchg
push
adc
lea
cli
lcall
dec
lret
push
cmp
call
int3
inc
push
repnz
loop
mov
leave
add
and
pop
push
lds
ljmp
fsub
imul
mov
mov
stc
outsl
jg
mov
mov
sbb
sbbl
jle
jle
dec
jne
cmc
sbb
and
jmp
imul
pop
fldt
dec
push
inc
and
inc
push
or
xor
xchg
arpl
adc
lods
addr16
dec
cmp
iret
dec
test
sbb
push
ffree
sbb
ret
lea
cs
ja
pop
hlt
daa
jp
xchg
nop
inc
mov
push
mov
in
das
cmp
aaa
jle
ror
sub
push
int
es
fs
xchg
xor
std
lods
dec
jb
scas
cmp
jg
adc
out
aas
cmp
mov
push
inc
addl
sbb
jnp
sar
test
andl
mov
mov
and
ffreep
add
imulb
aaa
inc
pop
int
hlt
mov
scas
cmc
test
xchg
adc
dec
cwtl
and
mov
in
out
or
sub
mov
cmc
ds
imul
insl
push
jp
xchg
loope
mov
mov
and
push
inc
push
mov
pop
dec
push
je
dec
pinsrw
sbb
xor
clc
lcall
mov
add
icebp
mov
lea
sbb
jno
in
lahf
mov
and
in
xchg
gs
repz
jnp
pusha
or
hlt
lahf
mov
rorl
leave
pop
xchg
int3
jp
leave
leave
mov
dec
dec
pop
inc
aad
cmp
and
imul
dec
repnz
adc
push
mov
dec
adcl
mov
and
test
mov
mov
lods
ljmp
cmc
mov
jo
orl
inc
add
fstpl
xor
mov
pushf
push
or
or
push
mov
out
dec
aaa
mov
sub
scas
and
cmp
subl
or
lret
std
test
ss
sub
sub
lods
gs
rcrb
lods
xchg
xchg
fcoml
sub
mov
mov
fnstsw
sahf
xor
mov
lcall
cwtl
lods
sarl
shlb
cvtps2pi
jp
push
or
mov
ss
jne
xlat
loopne
mov
pop
jae
nop
adc
cmp
push
inc
push
stos
iret
sub
idivl
jnp
push
lret
mov
shlb
clc
mov
shrb
or
bnd
jp
inc
movsl
mov
dec
imul
push
mov
push
mov
inc
test
sub
es
in
push
cltd
ljmp
loope
imul
xor
hlt
push
add
jl
inc
jle
cmp
push
and
push
mov
lret
ljmp
loope
popf
mov
mov
mov
insb
dec
jmp
lret
pop
and
out
cmp
sub
jg
xor
push
mov
adc
inc
arpl
mov
gs
bound
in
daa
outsl
rcl
sub
and
mov
xchg
sub
rcr
cwtl
sbb
pushf
push
push
dec
cmp
incl
out
in
jnp
daa
mov
fcmovb
pusha
cmp
mov
test
lds
pop
aaa
xchg
jmp
sub
leave
lods
test
mov
je
jne
inc
add
daa
sub
dec
push
xor
aam
rcrb
dec
inc
mov
push
mov
and
cltd
lods
or
sub
xchg
sbb
xchg
pusha
mov
lret
outsl
insb
xor
int3
push
repnz
mov
xor
inc
stos
push
jae
xor
jne
loop
pop
mov
push
xchg
and
pop
push
jns
rcrl
int
inc
mov
pop
cli
inc
inc
std
xchg
sbb
pop
push
in
ss
ret
mov
popf
repz
inc
and
adc
daa
and
xchg
xlat
pop
fs
in
push
aaa
push
xor
push
mov
out
and
jmp
add
xor
inc
dec
sbb
fldcw
jp
push
mov
jmp
std
decl
popf
push
adc
mov
xor
xchg
notb
leave
or
nop
fwait
mov
dec
pop
adc
push
lock
add
pop
cwtl
daa
sbb
and
int3
nop
adc
aam
mov
in
pop
into
mov
adc
outsl
int3
pop
lret
inc
xlat
sub
push
mov
xchg
sbb
fldcw
cli
mov
je
adc
cld
mov
mov
ljmp
and
pop
sarb
outsb
cs
repnz
jo
xchg
adc
xchg
rcrb
sub
in
cmpsb
push
jmp
push
cmc
ljmp
xchg
xchg
sub
inc
decl
cs
testl
stos
mov
push
repz
ret
push
mov
mov
pop
push
imul
inc
sti
imul
pop
inc
cld
jno
jno
pop
sbb
incl
add
movsb
aaa
xor
loopne
icebp
popa
sbb
fmull
xchg
push
xor
neg
and
and
fwait
or
or
push
sbb
mov
das
scas
mov
into
lret
pop
rcrb
out
aam
sbb
ret
fnstcw
out
les
push
cmp
mov
sbb
sbb
je
jmp
je
ja
push
push
sbb
cmp
pop
add
fisubl
cmpsb
xchg
mov
out
cltd
pop
jne
mov
jo
into
int
loop
ret
mov
cmpb
push
dec
sub
subl
jbe
inc
push
lds
jmp
sahf
push
mov
mov
add
or
jmp
mov
cmc
xchg
adc
mov
inc
pop
mov
cmpsb
mov
scas
pop
inc
sbb
aas
push
adc
popf
ja
add
aas
add
lahf
push
repnz
in
cli
mov
or
sbb
mov
insb
mov
jp
je
cmpsb
push
fisttps
cltd
and
sbb
mov
pushf
pop
sbb
fs
sbb
adc
push
movsl
jns
and
insb
dec
mov
cmp
shl
adc
adc
sahf
in
mov
and
jge
sbb
push
out
push
push
and
jne
daa
or
insl
jmp
xchg
mov
dec
sub
add
push
jmp
cmp
aaa
notl
add
pop
and
cmpsb
int
lahf
mov
fidivs
cmp
orl
dec
pop
cmp
mov
subb
and
cmp
xor
jle
add
rolb
add
int3
int3
mov
int3
inc
push
mov
xor
cmp
mov
mov
jo
dec
decb
ret
cmpsb
mov
mov
fadd
adc
cltd
jecxz
insl
sub
test
mov
test
adc
mov
pcmpgtb
test
cmp
mov
xchg
xor
adc
jne
inc
adc
insb
inc
jge
and
xchg
xchg
leave
sub
fistps
push
push
addr16
hlt
rorb
pop
inc
lods
push
imul
jns
pop
cwtl
popf
movsb
je
dec
jae
ja
and
push
into
neg
push
pop
std
push
inc
jbe
jne
aad
aaa
dec
or
scas
dec
or
adc
insl
fnsave
mov
mov
loop
pushf
aam
inc
mov
push
cmp
push
dec
movsl
xor
jg
or
cmovno
dec
hlt
cwtl
xchg
jg
ret
rcll
inc
data16
mov
inc
mov
out
lods
sub
inc
lcall
dec
sbb
pop
jb
mov
data16
int
ja
lock
sub
xchg
and
out
imul
mov
mov
and
sub
rep
aam
subb
dec
loope
and
dec
subl
inc
dec
pop
iret
pop
in
cwtl
int
add
orb
lods
mov
movsb
push
shlb
pop
stos
jns
imul
das
xor
jmp
outsl
xchg
adc
jp
fnstenv
cli
xchg
sarb
rcrb
pop
outsl
or
pop
xchg
sbb
dec
fcoml
pop
scas
les
or
daa
cmp
xchg
cmp
nop
imul
mov
test
dec
insb
sub
xor
jbe
jecxz
mov
lahf
mov
mov
testb
sbb
lock
outsl
pop
popa
sbb
xor
loopne
dec
outsl
push
enter
or
sti
sbb
ret
sbb
out
dec
sbb
dec
lods
pop
pop
dec
stc
fisubl
push
mov
test
add
mov
push
jecxz
daa
xchg
enter
ds
movsl
mov
sub
sbb
xor
jp
clc
jae
ljmp
cltd
testl
repz
jne
stos
xor
sbb
sub
fistpl
jmp
mov
jnp
stc
in
sub
idivl
jl
sarl
rcrb
or
cs
ja
mov
fyl2xp1
and
movsl
inc
mov
xchg
xchg
repnz
jno
xchg
enter
cmp
push
out
and
in
push
jo
xlat
cmp
or
xchg
iret
stos
repnz
movsb
inc
sbb
pop
addr16
insb
and
ss
stos
sub
adc
jmp
jl
cld
daa
mov
mov
pop
and
adc
sbb
jnp
call
or
into
dec
out
xor
nop
std
mov
scas
dec
movsl
cmp
aaa
push
xor
pop
cld
sti
fdivl
push
or
repnz
mov
mov
push
mov
lret
rol
fcomps
in
ss
push
daa
lcall
xor
dec
shll
push
inc
push
roll
mov
add
ds
jl
ss
adc
and
adc
xor
mov
jnp
fstl
cmp
pushf
sbb
jns
cmp
pop
xchg
aas
pop
fwait
jnp
xor
push
cmp
cmpl
sbb
xchg
and
lcall
mov
dec
lret
mov
repz
cli
inc
xchg
test
and
add
push
xchg
das
sbb
scas
fsubr
push
cmc
adc
add
flds
cli
xchg
and
dec
enter
mov
les
mov
insb
cmc
or
loop
ret
cmp
pushw
inc
mov
cmp
stos
or
jge
in
jge
xchg
inc
pushf
subb
push
sub
dec
jg
mov
pop
pop
mov
shl
repz
repnz
jmp
mov
push
daa
ret
push
push
jl
jns
repnz
scas
call
sbb
rorb
jp
or
sbb
mov
inc
rcll
cmp
jae
or
ljmp
mov
lea
popa
mov
push
jecxz
sub
jnp
notl
lret
negb
sub
addr16
mov
xchg
ljmp
and
js
cmp
sub
xchg
add
lods
lret
sbb
js
xor
and
cmova
cmp
pop
adc
ljmp
jle
dec
mov
bound
ds
inc
mov
push
sbbl
and
notl
pop
fidivrl
movsl
sbb
xchg
xchg
loope
mov
mov
cmp
jbe
imul
imul
mov
call
arpl
push
or
imul
hlt
fsubs
inc
add
mov
inc
ret
xchg
jmp
pop
test
cltd
cmp
lcall
test
inc
out
dec
loopne
jecxz
ret
inc
mov
scas
andl
lods
loop
sarl
mov
inc
push
mov
xchg
sahf
scas
lret
fsincos
fldt
int
inc
ficompl
pop
pop
jmp
sub
mov
leave
xor
test
sar
mov
and
cltd
mov
adc
jmp
xlat
cmp
ret
or
jbe
push
out
push
sbb
jns
jo
shll
push
fstp
lret
scas
stos
test
or
push
adc
jp
mov
adc
dec
jne
mov
or
jnp
ss
ja
cmpsl
or
and
lods
cmp
int3
test
add
mov
cmp
cs
adc
lcall
rcrl
mov
mov
orb
fbstp
in
sbb
arpl
paddw
add
jmp
jl
mov
adc
out
xchg
jns
stc
popf
xchg
lods
das
and
mov
inc
mov
imul
cmc
add
loope
js
icebp
cli
xor
inc
ds
cmp
mov
insl
xor
or
xor
lcall
and
arpl
xchg
pop
addb
rorb
imul
mov
inc
in
into
in
fiaddl
mov
int3
imul
mov
mov
mov
push
push
sbbb
mov
adc
aaa
xchg
mov
js
jp
xchg
mov
imul
addb
inc
and
ret
scas
nop
mov
insb
movsl
test
push
outsb
sub
pop
dec
call
push
iret
fnstsw
inc
fs
les
xor
test
mov
and
push
daa
sub
add
outsl
lahf
sahf
xchg
test
push
mov
hlt
inc
sbb
pop
and
mov
pop
pop
arpl
xor
rorl
dec
add
sub
icebp
mov
mov
lock
cmpsb
adc
sti
jo
jle
outsl
xchg
push
rolb
pop
insl
shll
lea
push
ret
and
jb
mov
sbb
mov
ds
jbe
mov
push
bound
adc
pop
mov
xor
jb
adc
mov
imul
push
inc
iret
mov
mov
or
int3
and
cmpsl
lods
dec
cmc
call
push
js
xlat
pop
jae
test
xchg
and
xchg
adc
fld
scas
je
cld
in
xchg
loopne
rorb
insl
call
repz
add
faddl
cmpsl
sub
ret
insb
jecxz
cmpsb
jmp
sub
mov
jmp
popf
sub
cmpsl
pop
js
lods
out
decb
inc
cs
push
xchg
mov
rclb
xchg
sbb
mov
int3
int3
lods
outsl
arpl
mov
int3
and
xor
cs
adc
fsts
shrb
test
xchg
xchg
push
adc
enter
inc
dec
imul
pop
in
jmp
cmp
pop
shl
inc
mov
sub
nop
fdivp
adc
mov
sub
adc
fidivrs
test
inc
jb
das
jno
sub
jnp
pop
mov
je
push
jbe
adc
jne
pop
sbb
mov
sbb
push
adc
sbb
es
out
and
fiaddl
dec
lods
xchg
add
mov
stos
rclb
pop
mov
add
ret
out
or
or
es
push
sbb
std
icebp
or
inc
rcrb
mov
add
xor
call
lds
adc
xor
pusha
icebp
sbb
or
lods
cmpsb
lods
adc
std
adc
lock
rolb
push
aas
out
push
push
inc
jno
sbb
aam
clc
sub
xchg
fdivs
adcb
cmp
loope
imul
bound
inc
icebp
sub
dec
leave
mov
jo
movsb
push
loope
loopne
adc
es
sub
jecxz
adc
lds
lahf
clc
cmp
cmp
jmp
jmp
cmpsb
bound
fidivrl
sub
sub
test
scas
sub
dec
cmp
pop
or
pop
push
cmpl
jbe
aas
mov
sub
pmullw
mov
jae
xor
jge
xor
xchg
push
sarl
int
in
out
daa
inc
setno
jl
inc
divb
jne
mov
pop
jge
sbb
pop
ja
les
mov
xchg
jb
cmp
pop
jg
loop
pop
add
pop
je
push
insl
pusha
pop
xchg
mov
leave
fsubrp
fcmovbe
cmpb
lods
mov
jmp
mov
dec
push
pop
push
and
ret
shr
int
inc
les
sub
mov
fmuls
les
adc
mov
pop
sti
add
add
aas
adc
stos
stc
jno
push
repnz
rcrb
jecxz
imul
adc
sbb
xor
mov
sahf
pop
mov
pop
push
inc
insb
mov
mov
scas
das
add
arpl
inc
or
dec
inc
fisubrl
and
test
dec
lea
lds
pusha
mov
xor
push
sarl
adc
test
lret
inc
or
and
adc
add
pop
mov
or
sti
loope
popf
pop
sbb
das
out
mov
xchg
mov
inc
das
movl
cmp
pushf
or
outsl
push
sbb
mov
pusha
insl
add
iret
aam
hlt
fldln2
out
and
push
clc
les
test
mov
shll
or
dec
enter
dec
push
lret
rcl
xchg
lods
sbb
lods
je
pop
dec
and
mov
outsb
mov
data16
pop
mov
test
aam
gs
and
push
in
arpl
xchg
shll
js
xchg
mov
xchg
lock
shll
jecxz
and
add
adc
mov
jge
sub
sub
shlb
sti
pop
sbb
adc
outsb
xchg
jns
sti
clc
sahf
daa
sub
pusha
jge
clc
push
orb
test
inc
mov
std
test
inc
stos
fnstcw
push
adc
lock
jle
sub
sub
inc
cmp
stc
mov
sub
loopne
pop
aaa
pop
dec
ficoms
sub
xor
insl
jo
cs
mov
xchg
pop
jge
mov
insb
jl
xor
mov
mov
dec
arpl
pop
xor
icebp
push
mov
movsl
add
mov
xor
je
add
popf
xor
inc
aaa
adc
imul
cwtl
stos
es
in
push
sub
pop
jg
jnp
jmp
ficompl
test
jae
push
mov
daa
shrb
sub
cli
ljmp
popf
sbbb
pop
xor
jo
shrb
jecxz
shll
aad
inc
cs
loopne
jecxz
pop
dec
xchg
out
xor
aam
jb
mov
rcrb
lret
movsb
lret
add
in
fimull
dec
add
push
add
leave
add
mov
sahf
or
aad
adc
mov
push
leave
loop
fsubrs
xor
imul
int
int
pop
shrl
xor
cmpsb
scas
ljmp
mov
xchg
shll
jo
add
xchg
fs
xchg
push
sbb
aas
pop
xchg
add
inc
mov
rcrl
dec
fisttps
or
ja
and
fcomi
and
cld
pop
cs
outsl
cs
pmaddwd
enter
cmc
push
jp
scas
in
out
mov
pushf
mov
dec
push
mov
ffree
add
leave
dec
sub
lods
aam
iret
mov
jno
cmp
test
inc
jmp
jnp
mov
outsl
sbb
xchg
jnp
dec
cmp
jne
inc
addr16
shll
sub
xchg
es
mov
cwtl
add
fsubp
stc
push
enter
jne
scas
push
dec
pop
and
mov
sub
rclb
daa
mov
sbb
xchg
mov
cmp
mov
jl
add
add
xchg
and
insl
sbb
mov
mov
ss
pusha
nop
xor
cs
or
mov
fadds
xchg
sbb
aaa
cwtl
lds
sahf
outsb
imul
cltd
push
into
jnp
je
add
repz
dec
mov
fcoms
inc
lcall
ja
cltd
insb
mov
jg
outsl
out
out
enter
aas
mov
test
test
or
je
push
pop
popa
hlt
inc
inc
mov
push
fadd
add
jns
adc
jnp
cmp
call
fistpll
jns
xor
ss
cs
stos
xchg
inc
subl
mov
test
xor
mov
mov
inc
sbb
dec
out
cmp
cmp
daa
sub
mov
fcomps
sahf
fmul
out
xchg
stos
pop
jecxz
ret
dec
mov
push
pop
sahf
xor
dec
scas
out
push
pusha
pushf
mov
sbb
xor
cmpsl
dec
in
loop
or
mov
icebp
outsl
sbb
cmp
lods
xor
scas
clc
adc
lret
adc
imul
jnp
ffreep
fisttpll
sbb
mov
aas
dec
popa
wrmsr
pop
jns
fidivrs
mov
idiv
xor
xchg
jnp
jecxz
aad
test
cwtl
fildll
andl
push
and
add
mov
jl,pt
inc
ja
int
pop
xchg
and
add
push
out
dec
xchg
movsl
jnp
pop
insl
outsl
dec
pop
in
fimuls
xor
ja
jns
adc
popa
loope
clc
xchg
loop
sbb
adc
xchg
in
fbld
repz
shlb
fs
dec
mov
push
call
or
iret
nop
jecxz
das
cmc
cmpsb
mov
sbb
divl
je
jno
ret
leave
dec
mov
adc
inc
jbe
pop
int
push
sbb
jg
mov
xchg
mov
bound
movsl
jge
pusha
repnz
dec
nop
or
retw
subl
sub
sbb
mov
outsb
lods
adc
pop
fdivl
les
dec
and
dec
mov
btsl
sub
outsl
and
test
cmp
or
add
sbb
ret
mov
adc
int3
xchg
aaa
inc
out
shll
je
pop
in
pop
jg
dec
mov
mov
test
lcall
push
mov
pop
in
mov
mov
mov
dec
or
sub
divl
mov
jns
mov
aaa
and
movsl
lret
fidivs
or
arpl
cmp
iret
mov
mov
ja
mov
jmp
mov
add
push
push
ds
jle
or
pop
outsb
movsb
and
sub
mov
push
and
stc
int3
rcrb
push
aad
out
or
and
scas
cmpb
ret
sbb
pop
push
dec
inc
js
jg
outsl
je
aaa
mov
adc
inc
inc
xor
mov
test
cli
sbb
inc
xchg
out
je
pusha
mov
mov
fstpt
out
xchg
cmp
cld
cmpsl
ss
push
cmp
jb
pop
inc
je
push
inc
neg
add
cmp
je
lds
adc
mov
cmp
push
jp
pop
xchg
sub
gs
jl
mov
push
shll
pop
into
mov
inc
jb
xchg
mov
xorl
lahf
out
and
jp
test
mov
sbb
iret
mov
sbb
sub
aam
cwtl
sbb
out
or
std
sti
adc
or
nop
cmpsb
jne
fidivl
cmp
adc
inc
insl
sub
push
dec
push
mov
lods
or
movl
dec
cli
sahf
xchg
je
mov
sub
cmp
repz
push
hlt
je,pn
adc
inc
fwait
jg
dec
cmc
and
mov
or
aas
js
js
cmp
cmp
xchg
in
shlb
jmp
mov
test
push
lret
ds
adc
cmp
inc
or
js
add
xchg
dec
pusha
js
xor
lcall
jae
stc
shrb
jmp
stos
push
mov
jle
sub
lock
mov
rorl
dec
inc
mov
mov
mov
rcrl
sbb
or
es
inc
xlat
adc
mov
mov
leave
sbb
pop
push
rorb
out
repnz
ds
les
pop
subb
stos
aas
push
mov
pop
mov
lods
es
adc
fbld
and
std
arpl
sub
adc
push
movsb
push
lcall
push
cld
mov
add
jno
roll
into
sahf
scas
xor
test
leave
jb
push
adc
and
dec
in
sub
std
dec
dec
mov
pop
ficompl
sahf
js
pushf
push
adc
jae
inc
push
ret
inc
add
arpl
and
in
dec
addl
xor
pushf
and
add
gs
add
outsb
mov
movsb
loopne
add
cltd
mov
test
dec
daa
mov
mov
push
lea
mov
lds
add
pop
mov
pop
add
outsb
mov
es
fstps
jmp
sub
pusha
jae
loope
adc
aaa
jmp
mov
dec
insl
mov
sub
cwtl
cmp
cltd
mov
gs
lret
test
lcall
aam
fbstp
pop
aam
rcll
decl
cmp
ja
fldcw
test
sub
clc
inc
sbb
pusha
lahf
push
cmp
push
gs
jecxz
mov
jae
subl
fildll
sbb
jle
and
add
push
dec
out
cmp
stos
fwait
jno
in
int3
fdivs
xor
add
int3
cmp
push
pusha
arpl
enter
iret
lods
jp
or
les
sub
test
or
xchg
adc
addr16
or
xor
data16
and
inc
repnz
fnstcw
add
inc
sub
jne
fisubrl
cmpsl
mov
js
or
jmp
in
push
sahf
cld
scas
jmp
push
jp
lods
dec
sub
cmpsl
pop
in
ljmp
mov
arpl
pop
push
push
push
cltd
jbe
or
lahf
mov
mov
and
outsl
sub
sub
add
iret
and
sbb
std
sub
inc
in
std
push
xchg
inc
xchg
push
lds
int
test
pop
dec
sub
jle
cli
xchg
or
or
xor
mov
xor
sbb
clc
repz
xchg
pop
jmp
sbb
cmp
js
int
sahf
jecxz,pn
aaa
xor
mov
sbb
jle
shl
jge
mov
lods
push
sbb
sub
add
mov
xchg
xor
jecxz
icebp
xor
push
xor
scas
stos
in
and
xorl
jnp
cmc
lods
jb
je
cld
add
push
mov
dec
push
shrl
inc
mov
les
mov
adcb
mov
or
movsl
mov
test
clc
insb
sub
pop
push
ret
mov
lcall
jo
dec
sldt
hlt
cmp
je
lret
sbb
cmpsl
and
adc
xchg
adc
mov
jb
es
clc
idivb
testb
test
xor
push
xchg
push
adc
push
or
ds
or
test
adc
shrl
sub
popf
test
mov
aaa
cmp
fisubrl
outsb
cmp
out
daa
push
gs
test
xchg
cmp
and
mov
mov
and
nop
cmp
xchg
ss
push
mov
sub
add
je
push
pop
dec
mov
push
aad
push
movsb
fidivrs
inc
pop
mov
ds
cs
imul
leave
jns
xlat
cmp
add
rcrl
pushf
xor
mov
mov
jg
test
pop
xor
push
jmp
xchg
mov
fistpl
je
fdiv
sub
adc
cmp
mov
inc
fistps
cltd
add
enter
cld
jl
xchg
in
in
hlt
adc
dec
stos
pusha
lods
daa
shlb
aaa
mov
cmp
ret
mov
cmp
loopne
mov
fbld
dec
aad
enter
hlt
mov
sahf
add
add
lock
loopne
fwait
cmpsl
jae
push
push
cli
lods
lret
popf
jmp
sbb
repz
sbb
sbb
dec
jo
sub
sub
inc
mov
pusha
jg
cld
xchg
loope
inc
jne
fistps
cmp
cmpsl
jb
mov
jmp
pop
cwtl
mov
and
mov
sub
arpl
lods
push
push
stos
nop
cmp
iret
loopne
lods
push
push
and
pop
push
mov
lods
sbbb
ja
mov
mov
pusha
dec
jmp
cmp
jns
inc
insl
sub
xchg
scas
lods
mov
sbb
mov
pop
dec
fwait
loopne
mov
scas
or
mov
fsubl
cwtl
rorl
insl
inc
shlb
les
dec
and
push
clc
test
dec
jecxz
inc
xchg
mov
mov
pop
jae
orl
mov
hlt
push
pop
jne
pop
mov
pop
push
adc
xchg
fisttpl
fidivrl
jg
mov
dec
inc
mov
out
in
and
fcom
inc
sbb
cmc
insb
dec
sub
in
mov
push
js
mov
icebp
jbe
adc
cmc
pop
adc
adc
mov
dec
popf
scas
ja
mov
mov
pop
jbe
pop
cmpsl
scas
test
scas
imul
fs
xchg
and
js
or
xchg
xor
add
insl
pop
xchg
mov
stc
lahf
and
pop
dec
adc
cmpsl
mov
push
adc
fsubs
cmpsl
xor
adc
and
dec
int3
add
inc
xchg
mov
test
flds
movsl
stos
stc
adc
add
cli
pop
rcll
mov
mov
bound
mov
inc
mov
mov
push
test
adc
test
outsl
sub
adc
mov
pop
and
sbb
pop
add
arpl
inc
sbb
adc
mov
cmc
gs
xchg
sbb
pop
in
fwait
jecxz
pop
and
push
es
push
ret
lds
into
jo
insb
pop
jl
call
imul
mov
pop
shll
cmpsb
fistl
inc
adc
cli
mov
mov
or
jnp
cmp
sub
jecxz
mov
fmuls
push
mov
push
movsb
sub
pop
stos
test
sub
loopne
inc
push
in
or
std
mov
movl
ss
cs
out
or
xor
add
or
mov
addr16
push
add
fwait
imul
xor
mov
push
mov
std
movsl
outsl
ljmp
in
push
pop
shrb
cli
mov
mov
push
out
mov
outsl
push
jne
push
repnz
sti
jecxz
mov
push
adc
jp
dec
leave
mov
and
out
cli
call
lcall
lret
mov
jle
inc
adc
cmp
jno
lods
mov
scas
shr
loopne
cmpsl
pop
and
ret
sbb
push
movl
ret
daa
and
or
je
add
jmp
pop
cmp
bound
fdivrl
insl
mov
andb
add
fistl
xchg
out
in
push
cltd
mov
insb
pop
aad
icebp
ror
pop
mov
in
push
out
mov
mov
imul
fists
jmp
sbb
fcmovnb
enter
ljmp
inc
out
cmp
sub
mov
jmp
lcall
fidivs
xor
lds
xchg
imul
jecxz
push
mov
pextrw
add
adc
cmp
dec
inc
sbb
test
mov
add
pushf
mov
out
xchg
roll
lret
rclb
cwtl
test
aas
mov
adc
test
or
in
sub
ds
popf
cs
loope,pt
rcll
sub
dec
test
or
sub
aad
cld
dec
inc
jl
divl
adc
ja
cmp
pop
mov
cmp
leave
and
dec
ret
xor
push
fs
cltd
cmp
push
stc
loop
mov
pop
sub
les
loope
rcrl
test
hlt
cmpsb
icebp
int3
jnp
lcall
sbb
xchg
jle
sub
and
dec
std
lods
add
cmp
cli
mov
repz
movsb
and
ja
aad
sub
add
nop
cld
adc
out
cwtl
daa
sub
daa
xlat
jg
enter
out
jne
popf
mov
out
fdivrl
adc
add
loope
mov
push
pop
in
je
adc
popl
enter
out
push
mov
and
sub
out
inc
xor
testb
popf
aas
push
cld
ja
cli
xor
jp
mov
or
mov
sahf
dec
jge
jmp
add
and
leave
outsl
inc
cltd
dec
cmp
stos
pop
cmpsl
loop
lcall
ljmp
adc
loop
push
sub
jg
aam
outsb
cmp
gs
pop
dec
xchg
pop
jecxz
adc
jle
dec
mov
cmp
xchg
subl
add
mov
insb
adc
pop
aaa
in
mov
lods
out
and
sahf
jne
mov
dec
fstpl
sub
ss
adcl
imul
add
lods
imul
dec
inc
pop
in
or
out
inc
sbb
shrb
mov
cld
arpl
mov
inc
je
aam
mov
push
adcb
jge
aad
fists
movsl
rcl
insl
cmp
adc
cmp
test
lahf
xlat
adc
and
loopne
cltd
cmpsl
and
jl
fiadds
lods
movsb
sbb
loopne
push
jno
aaa
xchg
pop
or
sub
sbb
jae
mov
loopne
adc
pop
fwait
imul
dec
test
leave
jp
sub
fists
cld
xchg
and
pop
shl
les
sub
nop
and
stos
mov
xchg
adc
pop
xorl
mov
add
imull
gs
sub
adc
pop
sarl
int3
pminsw
xor
mov
arpl
dec
cmp
push
mov
push
leave
nop
shr
xchg
and
or
push
jae
mov
test
pop
addr16
jnp
imul
test
stos
das
sbb
dec
mov
imul
sbb
loope
or
and
jmp
add
xor
or
testl
ljmp
push
test
mov
or
and
add
jg
rolb
cld
cmp
inc
push
cmp
add
dec
callw
hlt
rclb
lock
sahf
jnp
movsb
sub
std
je
dec
pop
sbb
cmp
mov
jno
mov
popa
pop
mov
loopne
mov
nop
jl
pop
adc
pop
das
movlps
xor
or
push
jns
test
leave
push
pushf
adc
idivb
push
ret
ficoms
das
dec
lock
jnp
inc
movsl
jg
push
aad
xchg
movsb
push
fnsave
subl
int
stos
cs
push
and
xchg
bound
fnstsw
scas
inc
push
sub
xchg
jge
add
push
sbb
add
xor
std
mov
xor
jge
pop
push
lock
and
lock
mov
sbb
popf
daa
ficompl
pop
jnp
mov
lcall
add
mov
icebp
cld
pop
daa
mov
test
fucomip
outsl
cmp
xchg
shll
call
fwait
mov
jo
decl
aad
in
ffreep
scas
adc
incb
test
jg
sarb
stc
pop
dec
arpl
movups
enter
sub
and
movsb
xor
xor
es
rol
stos
rolb
fisubrl
ret
fiaddl
or
lahf
aas
adc
sub
xor
inc
inc
insb
ds
jmp
and
adc
aas
ljmp
int3
pop
jecxz
and
jae
adc
shl
mov
push
mov
jbe
negl
push
pop
adc
cmp
frstor
sub
loope
clc
pop
cmp
loopne
and
mov
shlb
cld
shrl
scas
dec
jno
and
mov
fisttpll
xlat
std
dec
xchg
jno
leave
test
sbb
and
jns
cmp
test
scas
mov
mov
lret
call
cmp
pop
dec
push
test
cmc
sahf
dec
in
push
clc
test
pusha
lahf
and
and
repz
fldenv
mov
cld
mov
int
sub
jnp
sub
movsl
xor
popa
mov
push
jae
mov
mov
and
lods
cs
imul
mov
jmp
sbb
push
int
cli
jbe
imul
add
and
jae
pop
push
cld
fimull
xchg
mov
popf
clc
jb
and
roll
add
cmpsl
xchg
dec
and
pushw
jns
xor
std
lfs
aas
inc
fs
mov
gs
mov
fsubrp
movsb
sahf
shrl
inc
outsl
cmp
jae
sbb
add
popf
xor
iret
push
xor
and
inc
movsb
shrl
xchg
xchg
dec
pop
sahf
lret
adc
iret
ds
fldenv
daa
mov
mov
cmp
or
inc
sub
xchg
dec
pop
or
inc
pop
mov
lock
stos
pop
mov
icebp
pusha
lods
or
loop
into
xchg
sti
push
xchg
pop
sub
jnp
add
dec
stos
daa
insl
mov
xchg
inc
and
mov
mov
add
movl
jmp
push
mov
lock
loope
out
ret
jns
out
inc
movl
cmc
jbe
jae
fwait
repnz
ja
sbb
xchg
or
jecxz
out
push
insl
mov
push
jp
add
mov
add
ljmp
dec
adc
enter
add
fs
movl
pushf
and
popf
or
loop
mov
push
xchg
fldenv
dec
push
mov
sarl
sbb
je
jle
jmp
mov
filds
adc
mov
test
fidivs
js
lahf
cmp
test
shll
dec
adc
cmp
insl
movsl
xchg
stc
outsb
repnz
test
pop
inc
das
outsl
mov
sbb
mov
jecxz
jge
push
shll
lods
stos
imul
mov
inc
xchg
sar
clc
pop
adc
add
outsb
movsb
xor
adc
out
pop
mov
sbb
xchg
push
shrl
popa
mov
add
mov
subb
mov
sbb
int3
test
rolb
and
dec
adc
hlt
mov
loopne
in
inc
adc
cmp
inc
adc
pop
push
push
inc
mov
jns
mov
fsts
dec
mov
sbb
cmp
push
mov
outsb
dec
popf
push
shlb
inc
pop
sub
and
rcrl
adc
inc
mov
push
bound
pop
pop
addb
sbb
outsl
cmc
cltd
cmpsb
hlt
pop
pop
mov
call
mov
or
fs
push
and
xlat
bound
push
cmp
or
adc
adc
add
mov
cmpsl
fdivl
mov
ljmp
dec
sbb
or
mov
je
and
outsl
add
inc
test
xor
jecxz
imul
mov
fs
push
scas
sub
push
insl
push
cmp
sti
enter
push
mov
js
movsb
rcr
repnz
subb
mov
xor
push
jns
push
mov
xchg
mov
mov
es
xchg
push
xchg
lds
add
sbb
lret
js
std
ss
push
ja
sbb
jl
mov
jecxz
push
bound
pop
push
inc
lock
cmp
popa
mov
cmp
push
clc
sub
and
mov
outsl
sub
and
jae
ljmp
ret
inc
stc
pop
cmpsl
sbbb
xlat
xchg
mov
leave
sub
add
add
pop
cmpsl
es
cmpsb
enter
add
sbb
in
pop
jg
iret
sbb
mov
pop
sar
add
in
pop
ret
mov
cmp
inc
sub
lods
pop
call
cltd
sub
push
sbb
movsl
xchg
fwait
xor
mov
mov
xor
loope
dec
dec
gs
push
ljmp
and
cmc
lcall
cmp
pushf
xlat
adc
popa
imul
pop
mov
nop
dec
xchg
or
adc
movsl
mov
adc
in
push
es
out
jns
cwtl
nop
out
push
fucomp
and
je
dec
sub
sarl
push
xchg
cmp
xchg
or
subl
fbstp
dec
cmpsb
xchg
jmp
ljmp
or
xchg
fnstcw
push
lea
std
fistl
inc
xchg
pop
add
dec
cld
sbb
lret
aam
add
insb
sbb
push
pop
push
aas
cmpsb
in
fdivrl
das
mov
add
or
mov
jl
jns
xchg
mov
jmp
fnstenv
pop
roll
fisubrl
xchg
push
sub
out
push
fidivrl
fisubrl
sti
push
gs
test
push
pop
inc
imul
dec
add
pop
sarb
fldenv
adc
push
cmp
adc
repz
es
cmpsb
mov
push
adc
adc
and
inc
in
push
pop
adc
lds
mov
dec
mov
jp
jo
cmp
xor
cmp
into
jl
mov
sbb
or
cmp
or
mov
xor
pop
aas
sbb
cmc
and
push
jg
sbb
dec
aaa
cmove
in
gs
shr
mov
dec
jmp
lock
add
mov
orl
cmc
test
push
inc
jg
in
jl
mov
mov
pop
inc
aam
sbb
mov
fistl
adc
jae
inc
xorl
jbe
nop
pushl
dec
cmp
and
fadd
inc
cpuid
pop
sbb
xor
iret
aaa
rolb
adc
clc
sbb
jnp
and
jno
inc
popa
shl
repnz
bound
data16
scas
fbld
pop
jp
out
psubq
mov
into
push
outsb
jmp
loopne
rolb
mov
mov
in
fdivrs
cld
mov
mov
daa
push
mov
cmp
js
loopne
fists
mov
pop
pop
mov
outsb
pop
adc
aam
fdiv
pop
int3
fsts
fwait
lret
dec
test
cmp
jns
mov
adc
push
mov
shr
mov
in
pop
test
shll
mov
xchg
gs
cmc
fsubrs
mov
cmp
es
lea
mov
es
aaa
add
xchg
jmp
lods
pusha
pop
subl
mov
cld
mov
outsb
js
add
pop
cmpxchg
sbb
les
adc
push
iret
mov
or
xchg
call
stos
std
mov
negl
cmp
adc
in
add
push
mov
and
dec
push
pop
icebp
lods
inc
inc
lods
pop
mov
lock
movsl
push
inc
mov
js
and
push
icebp
nop
mov
repz
scas
xchg
jo
stos
xchg
jecxz
pop
push
sub
pop
out
frstor
enter
int
in
lret
and
test
outsb
push
nop
test
mov
push
xor
outsb
push
pusha
in
stos
jg
andl
or
sahf
test
pop
insl
inc
rcl
addr16
mov
add
aaa
adcl
xchg
xor
ret
andb
xor
pop
and
pusha
subl
dec
mov
cwtl
fldl
mov
jmp
daa
outsb
fisubrl
mov
clc
lret
cmp
outsb
mov
rorl
test
jecxz
nop
sbb
mov
jo
pop
and
add
lds
sub
and
jne
dec
clc
pop
daa
mov
nop
and
mov
jecxz
xchg
inc
cmc
test
xor
ret
mov
mov
mov
add
fwait
hlt
xchg
jmp
cld
pop
lahf
sub
loop
popf
dec
in
or
sub
xchg
inc
inc
adc
in
jecxz
aas
push
mov
mov
lgs
orl
inc
pop
sbbb
out
fidivl
pop
repz
cmp
outsb
push
xchg
int
loopne
mov
dec
aaa
imulb
sar
add
mov
xchg
pusha
in
cmp
jns
mov
les
cltd
push
sbb
jp
fs
int
mov
push
scas
mov
mov
jne
aas
mov
test
stc
icebp
mov
adc
dec
xor
ss
and
ret
mov
mov
jmp
sahf
or
nop
mov
dec
lods
xchg
dec
push
loope
jmp
insb
popf
mov
out
mov
push
cmc
lods
cmpsb
dec
in
and
cmp
push
hlt
jnp
or
int
inc
addr16
in
test
push
pop
xor
xchg
inc
cmpsl
xchg
xor
xchg
cwtl
cwtl
js
shlb
cmp
cltd
cs
cwtl
and
mov
aas
rol
sahf
sbb
sub
data16
shlb
adc
mov
add
ja
lea
ljmp
in
into
dec
rclb
daa
ret
jmp
nop
mov
mov
mov
outsl
or
outsl
imul
or
mov
shl
xor
test
fildll
pop
addl
xor
dec
pop
jns
push
sti
lret
out
mov
cmp
jp
jmp
push
and
push
or
add
dec
out
negb
xchg
dec
lcall
popf
push
or
mov
out
aam
lods
fistpll
mov
and
mov
or
xchg
jp
jmp
addl
xor
loopne
fldcw
mov
mov
push
xchg
popf
jle
push
pop
cli
movsb
sbb
fimull
js
cmc
xlat
and
pushf
push
nop
in
inc
sbb
mov
fistps
jbe
les
xlat
iret
ljmp
cmp
inc
add
add
jo
rcrl
mov
shr
xchg
inc
loop
out
fwait
sub
cmp
mov
mov
sub
mov
add
cmpsl
int
lea
ret
adc
js
mov
xor
push
cmp
and
out
jb
jmp
jge
add
xchg
and
out
xlat
rolb
cs
add
jg
inc
aam
jno
aam
sub
mov
lock
push
xchg
icebp
cltd
je
pop
mov
xchg
insl
cmp
out
sub
or
pop
pop
popa
call
or
leave
jg
aas
call
dec
mov
cmp
es
sub
xor
test
repnz
mov
xor
mov
aad
daa
pop
add
xor
mov
aaa
lock
jg
dec
fdivs
jo
sbb
std
adc
inc
ror
xor
mov
iret
sti
pop
icebp
rcll
pop
fsts
xchg
mull
stc
sbb
xchg
lret
testl
or
xchg
adc
xor
enter
xchg
sbb
pop
adc
movsl
or
xor
insl
xchg
loopew
outsb
js
xchg
inc
popa
js
jne
lea
leave
and
add
mov
xor
dec
sbb
sti
jp
lods
daa
outsb
mov
popf
outsl
mov
stc
scas
pop
jno
pop
sub
pop
or
enter
push
push
push
test
xor
out
rorb
mov
sbb
cmp
mov
inc
cltd
xchg
das
outsl
add
andb
dec
in
scas
ret
lea
xlat
mov
pushf
icebp
fs
icebp
cmp
sbb
pop
addr16
shll
ljmp
jge
fstpt
add
push
cmpsl
mov
pop
les
jle
xchg
std
dec
movsb
xor
push
test
inc
lods
sbb
pop
inc
loop
int
sti
clc
dec
add
lcall
inc
xchg
xchg
out
ss
dec
adc
insl
fdivl
adc
std
in
shll
mov
mov
xchg
mov
or
es
mov
icebp
sahf
push
jecxz
jno
sbb
inc
mov
sbb
bound
movsb
or
push
lock
and
and
dec
xchg
in
ss
jns
add
outsl
mov
add
mov
xor
pop
ret
sub
mov
and
jle
repz
rorl
and
xchg
lret
out
add
xchg
cmpb
lret
inc
or
and
adc
xor
gs
sub
idivl
sub
jmp
dec
sbb
repnz
gs
mov
inc
iret
enter
icebp
test
add
mov
push
lret
sub
scas
fldl
xor
pop
cmp
mov
sbb
cmp
outsl
jo
pushf
test
mov
cmpsl
jl
mov
push
inc
jecxz
jb
add
xlat
jae
pop
xorl
iret
sub
pop
test
fbstp
sarl
pop
xor
repz
stos
icebp
imul
xor
into
sub
and
testb
lret
mov
lds
outsb
and
loope
bound
in
mov
lods
in
icebp
dec
sub
lahf
outsl
dec
sbb
push
in
mov
mov
mov
mov
stos
into
pop
stos
cmp
sub
jns
out
mov
xchg
push
arpl
cmp
test
jl
mov
cs
pushf
stos
pop
outsb
int3
arpl
dec
xor
pop
and
sbb
inc
mov
in
cmc
ret
in
addr16
mov
dec
cmc
das
rcl
push
fidivs
or
test
adc
or
pop
cmp
xchg
push
mov
and
mov
push
lret
xor
mov
mov
push
sbb
inc
orb
jge
cmp
pop
sbb
adc
add
out
test
das
or
dec
pop
adc
or
mov
mov
sbb
test
cmp
mull
lds
and
repnz
fwait
mov
mov
and
iret
xor
mov
pop
add
movsb
mov
mov
dec
sub
and
push
sub
adc
mov
mov
jge
pusha
sbb
xor
jnp
push
iret
jo
jecxz
mov
xchg
push
jmp
repz
and
aad
mov
inc
int
pushf
pop
mov
arpl
out
mov
mov
ret
push
sbb
fsts
int3
jo
mov
xchg
mov
xchg
push
ret
or
aas
jmp
mov
call
aad
xor
xchg
cmpsb
into
repz
jae
in
push
add
lahf
jge
pop
cmp
clc
daa
loopne
push
sub
lret
je
mov
pop
sub
jno
mov
lahf
in
mov
pop
addr16
pop
dec
or
fbstp
loope
pop
fnsave
sbb
daa
in
mov
sarl
hlt
std
jnp
sub
out
jns
mov
pop
mov
out
shll
faddl
dec
adc
adc
lods
dec
add
dec
or
daa
pop
dec
push
mov
mov
sub
inc
scas
lds
sbb
or
mov
das
stc
jae
bound
dec
xor
mov
imul
adc
in
test
jne
push
push
arpl
inc
pusha
adc
fwait
sbb
fstps
insb
fsub
inc
outsl
cs
pop
mov
mov
adc
cwtl
movd
test
sub
mov
mov
loop
out
sbb
inc
out
adc
xchg
jle
mov
call
jmp
sub
push
loopne
jae
aad
jle
xchg
je
out
push
add
cmp
imul
jl
mov
js
dec
ljmp
int
mov
jae
jg
jae
mov
hlt
and
ficoml
xor
lods
adc
xor
xlat
mov
cwtl
sub
int
icebp
lret
mov
inc
stc
mov
mov
jl
rolb
shll
pop
pop
ror
cmp
push
test
xchg
shrl
mov
xchg
and
mov
jle
cmp
adc
mov
arpl
cwtl
aaa
xor
ds
scas
arpl
jne
mov
inc
dec
lods
and
out
fs
xchg
hlt
cmp
jle
aas
inc
mov
add
sub
test
mov
push
nop
mov
bound
pop
and
sti
test
cmc
xchg
lret
mov
cs
adc
test
decb
or
xor
sti
mov
test
xor
mov
stos
stc
mov
scas
loopne
sti
fcomp
push
sarb
repz
adc
mov
pop
and
mov
push
popa
push
int
dec
int
cpuid
sbb
push
popf
cmp
inc
out
shlb
sub
or
ds
adc
arpl
outsb
stos
dec
xor
xchg
mov
mov
scas
dec
push
add
aad
mov
mov
jmp
test
jle
jno
push
push
sbb
cmpsl
sahf
test
jae
pusha
lahf
into
jmp
and
xchg
mov
fcomps
or
fsubrs
and
std
xchg
adc
and
inc
dec
out
push
fnstenv
fs
cmpsb
xor
cmp
push
jae
cmp
push
int3
xor
push
xor
xor
mov
mov
jge
jnp
cmc
xchg
pop
push
push
dec
ficoms
out
cmp
mov
jecxz
adc
lock
push
loopne
stc
sub
sbb
cmp
int3
test
outsb
xchg
xchg
xchg
ds
lock
dec
push
pop
rolb
mov
ja
lods
cs
push
gs
xor
sti
push
scas
and
mov
call
pop
xchg
lret
push
inc
addr16
mov
in
xchg
hlt
or
xchg
and
pushl
push
lret
loopne
xorb
sub
add
push
in
shll
mov
xchg
repz
mov
pop
hlt
xor
xor
jb
test
rol
addb
out
es
sub
lods
cmpsl
rcll
dec
push
mov
insb
push
sti
mov
or
data16
stos
add
pop
stc
xor
sub
mov
inc
lock
hlt
and
hlt
sbb
dec
out
mov
xchg
push
iret
pop
shl
mov
pushf
sbb
pop
mov
loope
out
sub
mov
xor
mov
lds
aaa
rcll
xor
xchg
xchg
outsl
mov
xchg
lret
pop
adc
xchg
out
xchg
cmp
out
roll
ret
fcmovbe
addr16
cmp
int
sbb
ja
push
andl
adcb
xchg
insb
mov
loopne
bound
push
cmp
jp
movsl
lret
pop
mov
dec
xor
push
ljmp
mov
or
repnz
sbb
cmc
icebp
mov
sub
lock
add
out
scas
loopne
xchg
rolb
jp
mov
sti
jae
test
scas
adc
clc
in
xchg
jge
jle
push
loopne
dec
xor
sti
and
cmc
xchg
adc
movsl
add
loopne
push
xchg
xor
xor
in
adc
dec
js
pop
cs
pop
sbb
or
inc
cmp
pop
inc
fisubs
jae
jge
xchg
flds
mov
loope
mov
fs
sti
lods
stos
push
push
fwait
pop
mov
les
lea
fs
aad
or
mov
adc
xchg
sub
and
rorl
mov
in
call
das
icebp
add
imulb
fstp
in
and
imul
ds
loope
jb
imul
cmp
sarl
in
stc
push
jns
test
jp
or
jns
adc
test
jae
mov
dec
out
adc
jecxz
int3
psrld
sti
push
add
fcoml
xchg
flds
xchg
dec
push
adcb
rcrb
adc
lods
repnz
repz
xorb
fnstenv
push
in
dec
sub
out
lods
ret
ss
roll
cmp
sarb
cmp
mov
adc
jb
out
sub
imul
aaa
gs
in
lahf
pop
mov
std
mov
stos
add
data16
dec
idivl
or
pop
les
mov
mov
sbb
movsl
test
insl
std
dec
adc
pusha
pop
in
ss
lea
jl
addl
mov
or
pop
int3
xor
cs
push
ja
out
popf
aam
push
mov
cmp
lea
mov
pop
lods
lahf
aad
pop
jl
jl
push
and
cmpsb
mov
ret
ret
testl
test
or
cmp
and
jg
fiaddl
jg
push
test
cmp
jp
mov
push
movsb
sarl
movsb
sahf
sub
inc
je
add
and
push
addl
arpl
int
fsubr
jns
inc
jmp
sub
lret
rcrb
popl
push
jns
lock
out
xlat
popf
mov
dec
dec
clc
adc
jne
mov
lock
lahf
aas
dec
and
arpl
mov
leave
push
sbbb
jb
dec
jb
jmp
lock
sahf
fs
mov
push
fcmovne
lret
aaa
repz
subb
cmpsl
pop
add
leave
jno
cltd
jmp
push
cmpsb
mov
scas
fistps
push
dec
pop
xor
mov
push
dec
cmc
movsb
ret
jns
inc
push
dec
adc
mov
and
lea
xchg
push
jae
fcmovbe
mov
loope
in
addr16
out
test
aad
stc
sbb
adc
bound
jmp
sub
and
test
imul
fdivrl
pop
shll
hlt
aaa
xor
and
sbb
pop
iret
dec
sbb
int
mov
mov
test
loope
invlpg
push
lea
fucomi
lret
std
iret
gs
pop
sbbl
mov
shll
sbb
adc
dec
mov
aaa
dec
daa
jb
popf
andb
fwait
dec
sub
roll
jp
xchg
adc
dec
push
insb
inc
pop
and
popa
adc
ljmp
jl
mov
pop
ret
loop
cmp
call
sub
inc
vpaddusw
pop
or
fistpll
stos
into
and
push
ja,pt
addb
sahf
cmpsb
xor
hlt
xorl
cmc
es
jnp
fsubrs
mov
data16
adc
add
addb
cmp
adc
add
andl
add
push
popa
lea
cmpsb
xor
xchg
pop
mov
push
loop
pop
xchg
xchg
and
je
addr16
inc
aad
aad
into
cmpsb
add
or
in
pop
push
dec
push
ret
sub
loopne
stos
popa
dec
ljmp
sbb
test
leave
je
lret
mov
and
push
xchg
cld
cli
insb
sbb
dec
xor
frstor
mov
push
or
lock
loopne
jg
push
mov
jmp
fs
mov
shlb
pop
in
bound
mov
push
push
push
sti
inc
imul
in
in
mov
cmpsl
mov
pop
cmc
mov
cwtl
scas
int3
cmp
mov
das
add
fstl
cmp
mov
push
iret
or
cli
imul
and
lret
jecxz
std
out
or
cwtl
pusha
lcall
movsl
xor
outsl
das
pop
jb
test
jbe
inc
stos
retw
ljmp
adc
gs
dec
shrb
jg
inc
movsl
shlb
dec
mov
bound
pop
pop
je
shrb
pop
jle
fbld
cmp
mov
fmull
jp
lret
inc
in
lret
dec
fimull
inc
scas
mov
push
in
xchg
and
mov
cmc
lock
push
add
or
jge
aaa
addr16
movsb
xchg
jle
pop
orb
cmp
sub
push
push
pop
sahf
pusha
jnp
fdivl
add
fidivrl
mov
jbe
pop
mov
nop
fstpl
mov
ret
mov
cmpsl
outsl
cli
pushf
xor
and
xor
faddl
xchg
xchg
pop
mov
mov
lret
pushf
insl
mov
ret
mov
test
pop
sbb
sti
push
or
scas
xchg
pushf
es
ret
notl
addl
lcall
and
adc
xchg
pop
jge
or
inc
cld
push
cmpsl
movsb
dec
subl
sub
and
cli
jb
movsb
shl
push
mov
push
adc
les
or
sbb
mov
push
cmpl
jl
jae
sbb
adc
or
add
mov
data16
mov
outsb
jle
and
jg
icebp
and
cmp
in
inc
scas
aaa
popa
and
mov
out
xorl
frstor
cmp
jnp
push
inc
dec
shll
loopne
push
adc
and
cmp
mov
in
xor
pop
dec
lea
or
repnz
sbb
xor
pop
inc
neg
dec
or
jg
dec
andl
movb
sbb
das
pop
fs
mov
dec
push
es
mov
ficomps
mov
or
repz
sbb
dec
cmc
xchg
jb
insb
in
sub
pop
push
jmp
sbb
push
pop
pop
mov
adc
les
and
lods
mov
xor
inc
out
or
popa
add
mov
leave
mov
xchg
jg
in
in
mov
inc
fldcw
lret
add
mul
adc
roll
mov
mov
ja
inc
inc
jle
xor
rolb
sbb
and
mov
sbb
enter
add
shlb
orb
jno
pop
or
push
sbb
lahf
arpl
or
pop
fists
inc
push
fwait
cwtl
dec
in
pushf
push
lahf
jbe
or
testb
addr16
aam
adc
mov
push
fnsave
jnp
adc
out
enter
xor
inc
adc
aas
aaa
pop
xchg
stos
adc
pop
mov
inc
das
mov
add
jb
cmp
xchg
roll
mov
mov
pop
arpl
cmpsb
js
adc
fdivs
das
fiaddl
xchg
insl
js
sti
inc
push
fisubs
test
out
or
insb
jb
into
fisubl
inc
shrb
cltd
in
daa
fdivrl
fwait
rcll
rorb
lret
cmp
stos
push
outsb
cltd
xor
test
xchg
jno
rep
cmpsb
loope
push
and
pop
inc
adc
sub
loopne
iret
jp,pn
jle
idivl
pop
icebp
les
nop
xlat
and
fld
lock
dec
movsl
dec
adc
arpl
inc
adc
jmp
add
dec
mov
clc
xchg
mov
lds
push
cli
xor
mov
ret
mov
sti
adc
test
mov
adc
xchg
jg
adcl
clc
lret
push
cmp
mov
mov
jg
push
and
outsb
lock
leave
cltd
ss
cmp
fsubrs
cli
aad
mov
pop
and
ffree
jg
pop
out
ds
call
xchg
shl
xor
inc
leave
cmovl
stc
lea
xchg
pop
out
jecxz
loopne
mov
fildll
das
out
negl
cmc
in
and
add
or
loope
mov
fcoml
fwait
cmp
out
jmp
adc
xor
lret
jl
jo
mov
sub
pop
xor
lret
outsb
imul
lods
ja
or
inc
imul
rcl
pop
decl
enter
pop
cmp
test
and
cwtl
jmp
push
sbb
cmp
jo
inc
pop
in
ljmp
mov
mov
mov
push
test
loope
ret
pop
inc
arpl
imul
loopne
sbb
push
rolb
aam
xchg
mov
out
sbb
jns
int
in
mov
lods
js
dec
jmp
dec
imul
enter
iret
inc
adc
inc
orl
fbstp
scas
sti
repnz
adc
movsb
mov
or
inc
jp
dec
fsubp
adc
lock
inc
mov
dec
jg
mov
add
xor
mov
lcall
arpl
pop
stos
pop
xchg
sahf
aas
loopne
lcall
outsl
fsub
sbb
and
les
cli
out
xor
lds
pop
pop
mov
idiv
cltd
cmpsb
mov
fstl
lret
sbb
push
and
jbe
and
pop
pusha
push
adc
lea
pop
sbb
dec
imul
test
jp
movsb
jne
mov
inc
dec
pop
dec
shll
std
andb
int3
sub
cwtl
add
adc
push
mov
clc
hlt
jns
mov
pop
repnz
je
or
or
push
fmull
aas
jb
pop
adc
add
cmp
jmp
or
adc
mov
inc
cmp
dec
cmp
add
cmp
call
add
jle
mov
mov
cmpsb
push
mov
xchg
mov
push
ds
mov
test
mov
lea
or
cmp
cmp
div
dec
cmp
push
daa
int3
iret
insb
adc
int
mov
mov
movsl
rorl
lods
xor
push
and
popa
nop
cmp
xor
mov
leave
push
fsts
dec
cmp
orl
out
sahf
push
and
out
xchg
pop
lahf
mov
les
adc
mov
sahf
addr16
cwtl
cli
lock
mov
and
cmpsl
nop
sub
jns
mov
sub
sub
pop
xor
nop
jae
je
je
xor
xorb
mov
pop
scas
fcoml
mov
jnp
stc
or
push
xchg
mov
xor
mov
xlat
insl
cmp
cwtl
sbb
mov
enter
cmp
loopne
dec
jl
cmp
push
sub
xor
adc
inc
inc
movsl
inc
ljmp
ljmp
mov
mov
xorl
rcll
cltd
jae
cmp
cmp
andnps
into
sti
imul
scas
mov
or
cmp
sbb
mov
imulb
jne
jg
test
js
xor
push
jle
and
in
inc
inc
ds
dec
gs
movsl
xor
push
xchg
pop
fcoms
push
pushf
sub
rcll
mov
lahf
inc
cmpsb
test
inc
ret
fbstp
adc
pop
push
and
sub
insl
into
xor
rcl
nop
ljmp
mov
pop
sub
push
sbb
out
push
in
jl
je
ljmp
dec
mov
push
xchg
je
jbe
cmp
cs
dec
cmp
push
adc
jg
in
xchg
lea
imul
mov
cmp
sarl
paddusw
popaw
fsubrs
adc
xchg
inc
rol
out
stos
push
out
test
cmc
test
xor
mov
pop
pusha
xchg
adcb
out
test
je
push
insl
push
push
and
mov
aaa
cmpsb
xchg
lock
cmpsb
dec
stos
mov
add
pop
xor
pop
arpl
bound
inc
mov
leave
push
xor
hlt
in
int
inc
push
mov
nop
mov
jmp
jno
dec
outsb
out
testl
and
movsl
in
push
adc
mov
insb
pushf
popf
push
adc
lahf
aam
xchg
aam
shr
and
jno
pop
jbe
mov
std
xorl
jmp
jecxz
movsb
dec
inc
sub
loopne
and
mov
and
jno
pop
adc
mov
adc
mov
lcall
sub
cld
cwtl
push
inc
dec
inc
sbb
dec
inc
aad
mov
hlt
shll
int3
mov
jne
mov
shlb
lahf
nop
repnz
pop
aad
ja
mov
pop
sarl
jno
fisttpl
push
imul
cli
push
mov
lcall
pop
pop
rcl
nop
and
stos
inc
rcl
or
sbb
call
and
xchg
xchg
and
push
dec
faddl
and
sub
push
mov
inc
in
mov
push
or
adc
cmp
movl
xor
movsb
xchg
stos
jbe
push
mov
cmp
pop
mov
jo
aas
idivl
add
std
and
and
add
filds
pextrw
and
int
nop
mov
or
xor
xor
rcrl
mov
and
mov
in
loopne
xor
data16
test
insb
call
adcl
mov
jge
nop
push
lret
adc
sbb
jmp
dec
shlb
jo
les
notw
push
cmp
jg
mov
mov
je
pop
sahf
adc
fisttps
orb
fwait
in
daa
push
jg
dec
jne
addr16
xor
jmp
xchg
aam
out
xor
cltd
and
mov
push
movsl
enter
arpl
pminsw
movsl
sub
mov
jno
loopne
sbb
lahf
add
adc
jl
xor
push
andb
push
mov
mov
jge
xor
cmpsb
xchg
addr16
jb
mov
push
pop
sbb
cltd
jb
mov
fsin
sub
out
push
lds
xchg
jp
std
jb
sub
pop
xor
sbb
lock
mov
mov
out
inc
ds
cs
insb
dec
mov
xchg
inc
mov
mov
movsl
push
mov
stos
testl
xorl
aaa
add
ret
or
or
cmp
and
shl
rorl
jo
and
scas
lods
push
ja
jmp
pop
cmp
leave
mov
icebp
jg
shll
mov
test
xchg
inc
lcall
xor
test
neg
mov
mov
xor
add
pop
xor
sbb
rolb
aas
sub
pusha
jge
mov
and
aad
mov
std
stos
loop
pop
mov
fidivs
es
fdivr
or
sub
xchg
adc
cmc
mov
push
xchg
iret
xlat
and
push
push
lds
arpl
lret
fidivrl
xchg
push
into
pop
sti
lods
dec
mov
xchg
popf
popa
push
addb
push
ds
or
cmpsl
jbe
lods
xchg
bound
ret
shr
movsl
mov
int3
adc
mov
out
push
jge
mov
popa
test
movsbl
push
cmp
rolb
nop
and
sti
and
loope
dec
sub
lods
fs
leave
repnz
xchg
mov
fcomps
mov
cmpb
loope
stos
clc
mov
lds
rorl
cmp
gs
pop
dec
inc
push
push
outsb
mov
inc
std
jg
cmpsl
sub
idivl
pop
xor
mov
ds
mov
xchg
dec
cmpsb
cmc
jecxz
push
cmp
pop
xchg
mov
inc
fdivrl
pop
adc
pop
je
dec
mov
es
jg
add
fnsetpm(287
mov
ljmp
sbb
rcrb
mov
ret
aaa
xchg
ljmp
lcall
mov
inc
out
pusha
inc
and
repz
in
inc
adc
add
lods
in
repnz
and
add
jl
dec
xchg
push
mov
call
push
xor
add
fbld
into
popf
cmp
icebp
and
or
sub
mov
jno
mov
cmp
and
fldt
enter
loop
sbb
pop
push
int
mov
push
xchg
or
mov
fwait
icebp
mov
xchg
inc
jp
pop
std
xor
pop
mov
dec
inc
sbb
sub
test
push
and
mov
push
cmp
subb
mov
cmp
pop
sti
mov
lahf
add
pop
sbb
dec
addr16
sahf
scas
add
cmp
cmpsb
and
popf
push
popa
inc
fninit
xchg
mov
add
add
mov
out
cltd
cltd
ret
pop
sarb
lods
in
call
lock
inc
je
push
jne
stos
mov
subl
mov
sti
lds
iret
addr16
adc
cmpsb
cltd
xchg
sub
bound
add
sbb
xor
je,pt
xor
outsl
in
std
cmp
imul
loopw
inc
adc
lods
and
repnz
adc
sbb
les
push
dec
shlb
mov
arpl
loopne
mov
pop
enter
mov
popf
mov
adc
aas
and
rorb
pop
outsl
fists
sbb
xchg
les
sbb
push
jno
add
jl
sarb
outsl
sbb
mov
ja
pop
cld
jl
mov
xorb
int3
mov
mov
loopne
adc
mov
mov
xlat
subl
push
inc
lcall
adc
mov
dec
xchg
shrl
daa
sbb
mov
adc
imul
call
insb
lcall
int
shrl
push
or
adc
pop
inc
ret
cld
mov
push
jle
mov
das
subl
sarl
pushf
mov
xchg
cmovno
inc
loope
imul
das
mov
lods
push
sub
or
dec
jecxz
aaa
ds
mov
xchg
fbld
movsb
sub
iret
in
sbb
sub
gs
inc
cmp
mov
xchg
dec
and
and
lret
adc
sar
mov
and
ja
shrl
cmpsl
incb
test
or
cs
inc
sbb
sbb
pop
pop
and
out
call
ss
mov
and
ret
add
mov
push
jae
addr16
jl
fnsave
scas
insl
pop
push
ret
fcompl
sbb
jno
push
test
sbb
dec
enter
jl
push
push
fists
inc
push
pop
rcl
mov
je
push
sti
cli
enter
xor
int3
test
ficomps
pushf
and
cmpsb
xchg
ret
push
cltd
xlat
lahf
push
mov
icebp
mov
add
dec
push
jecxz
jecxz
adc
ds
mov
inc
jg
and
popa
add
and
arpl
jne
sbb
mov
stos
stos
testl
jmp
xchg
les
mov
mov
mov
sub
test
mov
bound
inc
cmpsl
cmp
iret
cmp
test
stos
pop
insl
je
inc
cwtl
pushl
imul
xor
push
lahf
add
cmp
sub
clc
jge
outsl
rol
inc
xor
lods
sahf
sub
das
roll
jbe
xchg
jg
imul
cs
gs
mov
in
pop
je
aaa
xchg
std
push
add
add
negb
mov
out
pop
cmp
aaa
sbb
jp
dec
jl
xorl
incl
sbb
xor
enter
aaa
xchg
xchg
cmpsl
inc
mov
cwtl
pop
add
hlt
ljmp
rolb
cwtl
sub
jecxz
dec
pop
sti
out
fwait
push
stos
mov
mov
dec
or
pop
testl
sub
cld
sub
dec
repnz
mov
mov
push
shl
stc
mov
inc
insb
gs
data16
ret
loopne
out
mov
cmp
int
mov
shlb
xchg
pop
int
sub
stos
dec
mov
push
enter
fsubp
sub
sti
inc
cmp
outsb
inc
mov
popf
xchg
jb
in
cmp
cmp
aad
fsubs
rclb
adcl
inc
or
insl
stos
push
scas
cmp
adc
rcrb
dec
rcrb
popa
jb
shrb
js
pop
sbb
je
imul
mov
xor
xchg
add
clc
rcrl
repz
mov
cmpsb
rcrb
subb
mov
add
mov
mov
push
fisubl
scas
push
inc
repz
or
jecxz
jmp
leave
cmpsl
lret
cmp
out
sbb
xor
mov
imul
pop
mov
sbb
mov
int3
jo
ja
sub
pop
and
inc
inc
shlb
pop
std
sub
mov
push
cltd
test
push
or
dec
in
imul
clc
sbb
sub
in
or
in
push
adc
pop
jp
and
pop
mov
insl
mov
cli
sub
mov
cmpsb
aad
idivb
cs
or
add
into
movsb
push
sub
aam
sbb
addr16
adc
sahf
push
mov
les
das
fsub
cmp
xchg
adc
dec
ss
cmp
jbe
mov
mov
out
andl
and
ja
subb
sub
sbb
push
mov
cli
imul
or
pop
xchg
xor
fstpl
addr16
cmp
mov
jge
scas
lret
iret
int
jne
out
xor
lock
pop
mov
popf
mov
xor
rorb
popa
xor
aas
adcl
pop
leave
roll
mov
sub
mov
mov
sub
mov
shll
add
mov
pusha
into
lds
out
fistps
pop
or
or
repnz
push
jnp
es
std
push
out
mov
mov
mov
xlat
inc
dec
jbe
sub
rcrb
pop
fildll
fcompl
xor
jmp
in
ljmp
sti
xor
mov
shrl
xor
jg
and
in
xchg
fsubrp
fcomps
push
subl
cmp
imul
dec
pop
mov
out
add
adc
iret
outsb
xchg
bswap
sub
enter
dec
and
in
jb
xchg
and
out
pop
inc
fmul
lods
jb
push
lds
inc
mov
xor
lock
jmp
mov
sahf
adc
dec
add
scas
jp
shlb
cmp
sub
mov
mov
xchg
sub
lods
sbb
rclb
jnp
xchg
inc
sbb
adc
data16
cmpsb
addb
pop
pop
add
fwait
cli
ror
call
mov
dec
addr16
ret
add
popl
jne
cmp
in
xor
xor
or
call
push
xor
lret
enter
test
daa
xchg
push
push
mov
ljmp
and
sbb
pop
xor
scas
call
cmpsb
rcl
push
dec
rcll
lods
lcall
dec
lcall
loope
ljmp
sbb
cmpsl
dec
cwtl
xchg
or
inc
lret
mov
repz
gs
xchg
loop
mov
lods
popa
shlb
negb
dec
jecxz
outsb
xchg
jmp
sti
mov
dec
adc
lods
dec
or
iret
cmpsb
andl
sahf
lea
test
lea
push
subb
push
pop
pop
addr16
adc
es
into
scas
imul
sahf
xchg
dec
cmp
inc
sbb
popf
stos
out
mov
fnstcw
dec
cmpl
or
inc
imul
add
cs
jp
bound
pusha
mov
add
lds
les
stos
mov
mov
js
mov
lock
bound
movsl
leave
lock
mov
and
ret
and
incb
leave
mov
lcall
add
xlat
dec
in
iret
or
frstor
lcall
sub
insb
pushf
inc
test
enter
stos
mov
sub
nop
inc
lods
or
push
mov
inc
dec
xor
shrl
jb
cmp
outsb
fcomps
jmp
pop
pop
jge
popf
push
call
out
push
shll
add
adc
mov
jl
sub
and
mov
mov
or
and
xchg
repnz
test
cwtl
mov
sbb
hlt
jno
mov
pop
scas
mov
aam
shrl
incl
in
pushl
shrb
adc
pop
ljmp
cmp
bound
clc
imul
ret
sbbb
add
aam
jno
mov
or
dec
test
push
movsb
sbb
hlt
aad
mov
sti
mov
stos
mov
dec
and
arpl
sbb
sub
insl
mov
pop
dec
das
fisubs
pop
pop
cld
repnz
loope
cld
xchg
pop
out
cmp
decb
stc
jle
jp
ljmp
inc
insl
out
xchg
pushf
cmc
push
push
mov
sub
sbb
or
cwtl
cmp
push
push
add
in
cmpsl
lods
xor
mov
popa
test
mov
or
adc
std
xor
or
insb
out
lahf
lret
imul
imul
push
mov
inc
jno
sbb
call
add
add
cmp
and
mov
push
sti
fs
xor
push
mov
addr16
pop
vpavgw
adcb
push
incl
hlt
mov
push
pop
sarl
lahf
rol
sub
cmp
xchg
movsl
and
jno
push
pop
mov
dec
and
mov
daa
add
aaa
js
repnz
out
cmp
ljmp
pop
jge
cld
out
or
nop
ss
xlat
mov
jge
push
mov
fcmove
lret
popf
shll
arpl
dec
xchg
fs
mov
hlt
dec
pop
arpl
nop
mov
imul
push
fsubrs
mov
xor
sub
xchg
dec
xor
ljmp
xchg
lods
movsl
inc
adc
xor
xlat
clc
in
mov
popa
jmp
test
hlt
add
test
sub
sbb
push
cmp
mov
mov
test
add
sbbb
xor
jmp
xchg
imull
js
jnp
dec
out
mov
mov
xchg
jns
lret
mov
mov
mov
pop
inc
popa
jne
push
jnp
jno
sbb
mov
inc
das
out
jnp
xlat
ss
sub
fwait
dec
loopne
mov
cmp
mov
sub
adc
lods
jae
out
lret
mov
and
push
jg
push
cmp
cmpsb
push
pop
pop
pcmpgtd
xchg
rorb
or
rcrl
andb
mov
popl
sbb
lahf
mov
pop
pushf
sbb
lahf
push
movsl
or
lret
or
in
call
enter
mov
int3
push
ds
repnz
loope
gs
sub
sti
jp
arpl
call
mov
mov
sbb
xorl
inc
enter
sub
fcmovne
call
imul
popf
cmp
push
mov
jmp
aam
jne
or
mov
and
mov
movsl
mov
fcom
fisttpl
mov
idivb
sub
xor
je
or
cwtl
subb
pop
jmp
mov
daa
adc
and
stc
add
xchg
adc
shll
xchg
call
xor
pop
icebp
inc
and
lods
icebp
inc
call
imul
repnz
out
sbb
jo
cmc
std
and
ss
mov
mov
negl
jno
pop
jb
add
xchg
xor
sbb
sub
aad
into
jge
mov
stos
rcrb
cmp
addr16
ror
jno
mov
jmp
dec
divb
mov
repz
sub
mov
xchg
pop
outsl
inc
mov
and
mov
inc
dec
mov
sbb
pop
hlt
mov
sub
lret
outsl
sub
rcll
cmp
loopne
push
add
fwait
adc
fadd
mov
xor
pop
hlt
gs
out
fwait
xor
and
loop
jmp
xor
jp
fucomi
jp
pop
or
push
es
cli
ret
push
sbb
xor
fcomps
aaa
sub
cmp
sub
add
andb
adc
inc
mov
xchg
pop
pop
and
addl
push
add
xor
push
rorl
ds
cmpsl
cmpsb
dec
call
sub
or
loopne
aaa
or
jge
out
inc
clc
push
fwait
mov
lea
add
jecxz
jmp
add
pop
repz
nop
or
and
sub
jae
pop
pop
mov
cmp
cld
dec
es
inc
mov
xor
mov
insl
cmpsl
ds
insb
pushf
add
push
stc
cmpsl
xchg
or
stos
mov
lcall
xor
and
pop
mov
dec
fs
addr16
mov
mov
lea
gs
sub
jg
nop
adc
addr16
pusha
testb
sti
aad
push
repz
dec
push
clc
mov
push
xchg
xchg
dec
xchg
ss
std
aad
mov
fwait
out
scas
sti
pop
mov
stos
mov
push
cmpsl
mov
popf
or
xchg
pop
jno
icebp
stos
loope
push
mov
jmp
into
test
hlt
mov
or
mov
call
push
ljmp
xchg
mov
clc
clc
or
jns
sahf
dec
mov
rorb
mov
cmc
jmp
xchg
ror
and
and
push
sub
xchg
mov
mov
xchg
cmpsb
pop
scas
jl
jns
inc
icebp
push
out
rcrl
and
out
subl
xor
insl
add
pop
popa
sub
std
cli
jmp
orb
clc
mov
mov
cmc
jbe
jmp
scas
xor
enter
mov
jle
jbe
mov
xlat
ret
cs
or
mov
pop
sbb
ret
pop
aam
insl
das
mov
jno
aas
cmpsl
insb
out
mov
in
pusha
outsb
scas
cltd
int
dec
out
fldt
push
out
aaa
jmp
subb
sbb
cmc
adc
lds
adc
and
imul
in
jmp
and
stc
inc
cs
arpl
pushf
and
sbb
jmp
leave
inc
dec
add
jbe
mov
fdivrs
ficoml
fbld
mov
mov
imul
or
ret
das
mov
hlt
sub
notl
test
dec
push
xchg
push
adc
inc
ljmp
aam
jp
cli
mov
inc
xchg
pusha
cwtl
sub
add
repnz
sbb
in
push
js
dec
bound
mov
cmp
data16
or
adc
jne
inc
cmpsl
mov
call
les
cmp
adc
movsb
add
and
jnp
adc
cld
mov
out
xchg
push
xor
and
das
loopne
pop
orb
dec
outsb
outsb
std
rorl
and
jmp
mov
pop
inc
aad
andb
imul
cltd
mov
push
insl
cmp
adc
jnp
mov
mov
sbb
jns
inc
int
inc
dec
dec
mov
scas
add
in
jo
into
xor
inc
das
int
testb
loop
pop
mov
mov
fsubs
mov
jl
dec
mov
cmc
lahf
data16
or
mov
ret
push
push
hlt
jns
push
or
icebp
mov
gs
jecxz
pop
mov
adc
mull
cmp
pop
repnz
sub
test
and
mov
ret
jge
leave
lods
sbb
mov
lods
outsb
xchg
sub
popf
inc
xchg
inc
sub
push
mov
or
mov
and
xchg
mov
xchg
fxch
pop
popf
ss
and
mov
insb
sbb
stos
push
gs
xchg
je
nopl
cmp
xchg
xor
inc
clc
loope
mov
jecxz
xchg
xor
insl
mov
pop
mov
mov
xchg
nop
hlt
ljmp
push
inc
xchg
xor
in
repnz
dec
adc
loop
add
mov
insb
dec
adc
shll
inc
xor
iret
mov
ljmp
dec
push
sbb
bound
in
ds
mov
popa
aam
push
jecxz
pop
add
cmp
fidivl
mov
loope
xchg
xor
scas
xlat
pop
jg
mov
jg
inc
jo
or
sar
outsb
hlt
testl
and
mov
jns
lea
xlat
stos
stc
pushf
mov
or
mov
dec
dec
add
add
cmpsb
mov
xchg
pop
or
fsubl
insl
pop
lretw
aaa
enter
fbstp
mov
test
and
and
movsb
push
push
out
mov
lahf
add
loopne
pop
sbb
bnd
hlt
movsb
fs
xchg
or
pop
push
mov
xor
pop
push
push
je
mov
fistps
xor
iret
fisttps
inc
loop
xchg
pop
repnz
dec
pop
mov
aas
or
out
std
add
test
dec
cmp
cmp
rcr
mov
stos
xor
insb
repz
aas
adc
add
test
cs
mov
mov
daa
mov
cmpsb
dec
pop
mov
pop
loopne
fmull
int
in
push
arpl
rclb
mov
and
js
fildll
mov
mov
or
push
dec
lcall
dec
mov
push
outsb
and
out
call
es
mov
dec
sub
push
pop
and
mov
negb
dec
js
or
fsubrs
jno
lea
add
and
jae
sub
scas
loop
inc
push
ret
xchg
leave
or
jg
jmp
mov
dec
adc
js
dec
xorl
out
je
lahf
test
out
sub
jne
push
ljmp
fs
jmp
adc
sub
sub
jne
inc
out
dec
add
dec
and
imul
stos
xorl
cmp
sti
xor
dec
add
xchg
dec
mov
inc
push
loop
or
add
jo
sub
es
fcoms
aas
or
xchg
sub
dec
and
call
dec
xor
or
dec
mov
sahf
loopne
cmp
add
add
in
sbb
inc
mov
lock
sbb
pop
call
inc
dec
scas
sti
adc
dec
ljmp
cmp
enter
sbb
lods
sbb
pop
cmpl
add
xchg
or
cwtl
jbe
mov
fnstsw
jge
inc
in
in
lcall
popf
cmp
jmp
mov
push
out
orl
jae
mov
inc
add
sub
inc
sti
pop
xchg
add
and
cmc
push
into
repnz
mov
cmp
adc
mov
outsb
out
adc
lods
sar
imul
mov
aas
cwtl
xor
std
mov
or
push
mov
pop
mov
pop
push
push
fstpl
popf
mov
mov
mov
dec
inc
cmp
xor
mov
jnp
fsubrl
clc
aaa
outsl
fs
leave
ja
ret
push
push
pop
ds
imul
sahf
stos
xor
outsb
mov
mov
lods
sbb
das
pushl
adc
sbb
test
iret
mov
inc
xchg
sarb
xchg
sub
rcrl
in
mov
lock
clc
pop
sub
scas
dec
adc
ret
test
or
div
mov
mov
movsb
jp
dec
jp
mov
jns
je
or
gs
or
pushf
xor
insb
push
scas
lds
jecxz
sbb
sti
cmp
jl
dec
movsl
js
divb
or
lods
lret
ficoml
push
jno
cmpsl
xchg
ja
sub
stc
pop
arpl
ja
frstor
dec
push
xchg
ja
inc
mov
scas
push
or
cmpsl
cli
ror
mov
lret
bound
cmpl
cmpsl
adc
gs
jmp
jae
mov
inc
sub
lods
add
jb
int3
inc
sbb
fisubrs
ret
and
jae
fcoms
fbstp
daa
jp
out
daa
ss
mov
inc
jne
sbb
jne
sbb
iret
mov
inc
inc
lock
iret
mov
push
rol
insl
sub
leave
lcall
mov
sub
dec
scas
insl
stos
loopne
jl
loope
out
daa
push
xchg
jae
aas
shl
test
mov
push
push
xchg
outsb
push
add
repnz
sbb
fldl
lds
mov
lahf
jmp
fisttps
loop
bound
sbb
shr
inc
xor
inc
cld
fst
pusha
push
pop
mov
inc
inc
sub
pop
roll
out
movsb
leave
roll
mov
ljmp
and
insl
jl
jle
lds
pop
dec
cmp
fistps
lret
es
popa
mov
or
jns
call
outsl
shlb
sbb
mov
sub
add
cmp
ljmp
sbb
loopne
pop
mov
ret
outsl
mov
mov
rcrl
xor
cmp
add
gs
mov
ror
mov
inc
jae
int
pop
xlat
outsb
xchg
pop
sahf
pop
in
inc
mov
test
ret
jecxz
push
out
xchg
push
push
leave
and
cmp
mov
xchg
add
lahf
and
jb
push
ljmp
lods
add
mov
adc
sub
and
outsl
ja
sarl
outsb
cmp
inc
push
xchg
xor
or
xchg
lds
bound
pop
jnp
fcoms
les
sbb
lret
insb
lds
mov
shrl
push
or
insl
pushf
inc
test
idivb
repnz
in
cltd
jge
sbb
imul
lds
and
inc
xor
pop
lds
loop
sub
xor
push
iret
movsb
das
jmp
fsubl
adc
pusha
jmp
jae
enter
aaa
pop
dec
xor
sti
nop
or
add
lods
imul
mov
cwtl
movsb
sarl
mov
sti
sti
bound
arpl
xor
mov
add
dec
int3
xchg
fcmovb
mov
stos
int
add
pop
addl
cmpsl
loope
xchg
lret
out
shrb
popa
push
jg
cs
push
stos
xor
das
dec
add
loop
mov
mov
adc
jmp
mov
daa
pop
movsb
xchg
push
mov
rorb
and
adc
inc
sbb
pop
arpl
sub
sub
sub
jle
fiadds
jmp
mov
mov
bound
push
push
or
push
dec
xchg
rclb
call
sbb
add
lea
inc
cmp
movsb
xchg
mov
sub
iret
and
imul
imul
inc
and
loope
bound
sbbl
shll
pop
inc
and
or
out
stos
fsubr
mov
test
loope
gs
aad
ret
mov
pop
mov
push
pop
push
js
das
add
sub
or
test
dec
ja
shll
jno
lcall
xchg
add
ja
sub
imul
lods
sbb
jnp
cltd
data16
adc
sbb
lahf
push
ror
loope
lret
icebp
shll
mov
xchg
xor
cmpsl
mov
sarl
imul
test
pop
push
imul
jle
lcall
push
push
xor
jnp
push
out
push
testl
mov
das
in
loope
jecxz
js
jge
push
mov
sub
xchg
adc
cli
sub
sti
xor
adc
lods
mov
lds
mov
xorl
push
dec
addr16
add
mov
jl
mov
pusha
xor
sub
jge
addr16
cmpsl
adc
cmp
push
inc
xchg
jl
sub
dec
loope
repnz
sub
jle
jge
aas
xchg
dec
or
fwait
pop
cmpsb
xor
pop
negb
push
adc
push
jge
fwait
mov
insb
or
adc
push
push
inc
nop
pop
or
adc
addr16
pop
lods
and
sbb
stos
push
and
pop
orl
sub
stc
mov
push
mov
xchg
les
jmp
je
mov
fnsaves
pop
xor
jle
pop
in
add
data16
es
inc
pop
inc
push
pop
scas
ljmp
mov
adc
jae
cmc
test
int3
pop
jp
pop
cli
dec
push
cmp
arpl
lret
sbb
or
outsb
xchg
cs
dec
push
cli
inc
popf
in
xchg
lahf
movsb
daa
insl
mov
jmp
xlat
mov
xchg
add
lea
lret
push
and
push
mov
je
add
inc
int3
xchg
cmp
lds
adc
push
nop
and
xchg
xchg
lret
pop
fcoms
cld
inc
push
mov
lock
outsb
movsl
outsb
rol
xor
addr16
vpaddw
sbb
imul
cmp
pop
int
sarl
test
fsubrl
insl
inc
or
pop
push
xchg
or
andl
inc
add
idivb
xor
sub
call
std
lret
cmpsl
push
pop
sub
fildl
sbb
push
ss
xchg
pusha
mov
lret
or
xchg
or
ret
sub
inc
jb
out
cs
repnz
mov
jl
iret
neg
pusha
repz
mov
ja
fmull
adcl
and
stos
mov
sbb
pop
or
push
or
cmpsb
mov
outsl
rclb
es
mov
in
test
sbb
in
or
outsl
inc
adc
loop
lcall
xor
imul
in
pop
cmpsl
dec
movsl
mov
nop
sbb
clc
loopne
mov
stos
nop
mov
test
inc
jmp
ret
repz
cmp
or
cli
mov
adc
ds
add
ds
mov
out
xchg
je
fs
mov
sub
sbb
jbe
pop
pop
xor
dec
or
cld
cmp
mov
or
mov
jle
lret
jl
adc
cli
sub
adcb
icebp
iret
shll
or
or
vrsqrtps
xchg
fildl
popf
stc
mov
dec
mov
cmp
dec
mov
aam
push
cmp
shrl
fistps
sbb
loop
dec
sbb
decb
enter
cmp
cltd
xchg
test
xchg
sub
mov
test
pop
sub
adc
sbb
mov
push
icebp
nop
sahf
jnp
sbb
repz
mov
cmp
xor
mov
addr16
jne
loopne
mov
jp
mov
jnp
adc
out
repz
push
stos
jg
arpl
push
add
cltd
cli
pop
gs
ja
loope
stc
dec
xchg
jns
lods
lahf
add
scas
xor
insb
inc
test
jb
lret
pop
lret
inc
add
inc
test
or
ret
xor
mov
lret
ror
xchg
add
out
mov
pop
ss
movsb
pop
inc
rcll
daa
addr16
xchg
sub
xchg
jle
lock
imul
int3
mov
sbb
mov
inc
mov
sub
mov
stos
jno
xchg
mov
cmp
stc
daa
ljmp
lcall
xor
push
add
jo
pop
imul
insb
mov
loopne
xor
pop
and
aaa
aaa
clc
xchg
add
mov
ljmp
dec
or
adc
mov
and
mov
aam
ret
cmp
inc
mov
xchg
out
xlat
int3
data16
xor
or
pop
inc
test
dec
mov
addr16
mov
lcall
xchg
lea
pop
and
jp
xlat
add
cmpsl
pop
mov
push
jecxz
mov
inc
out
fmuls
sbb
ja
xchg
cld
in
jnp
imul
dec
in
lcall
loop
pop
data16
cmp
sub
cs
test
cmp
inc
imul
gs
inc
mov
sbb
push
xor
mov
push
pop
sub
add
scas
popa
cld
fwait
lahf
scas
bound
dec
and
arpl
mov
fistps
push
jns
test
pop
push
test
pop
mov
repnz
addr16
mov
add
inc
ss
fcomps
std
adc
rorb
and
xor
pmaddwd
mov
cmp
or
sbb
hlt
dec
mov
shll
adc
and
sub
ficomps
out
in
jp
dec
xor
push
jb
xor
push
push
ficomps
test
mov
push
ljmp
pop
push
mov
jae
cmp
data16
push
sub
test
push
inc
cmp
insl
mov
inc
cmp
cwtl
cmpl
push
adcb
push
and
ret
movsb
mov
and
ss
iret
push
ret
sub
sbb
mov
xchg
mov
jp
mov
fisubrl
loop
push
aam
push
sbb
repz
movsl
rcrb
repnz
push
push
cmp
addr16
xchg
adc
push
and
insl
mulb
imul
cmp
mov
out
sub
mov
or
jl
mov
sbb
mov
push
clc
sub
inc
out
loopne
daa
fcmovb
clc
incl
lods
fwait
mov
inc
push
outsb
pop
push
push
stc
mov
xor
push
stos
fiadds
push
pop
test
xchg
xchg
aam
mov
loope
mov
je
inc
lods
push
cmpsb
push
pusha
cmp
push
mov
adc
jg
notl
dec
and
mov
lds
dec
pushf
nop
test
je
mov
sbb
mov
inc
out
sbb
enter
int3
xor
inc
push
enter
ds
or
rcl
xor
and
sbb
scas
mov
or
and
or
mov
pop
mov
or
add
xchg
rcll
push
gs
jns
fmul
shlb
push
cmp
pop
and
mov
dec
aaa
xchg
mov
int
sub
mov
mov
jb
outsl
loop
mov
popa
bound
sub
movsl
arpl
sbb
cmpsl
repnz
mov
call
xor
pusha
adc
cmpsb
adc
jae
push
movsb
div
loopne
mov
divl
dec
pop
out
lret
cs
xchg
aas
jo
gs
sbb
mov
adc
mov
out
flds
cmpl
pop
pop
lea
cmp
jne
test
pop
push
jg
fidivrs
sti
inc
dec
div
adc
into
push
imul
es
imul
adc
sbb
mov
sbb
and
into
push
mov
ret
dec
adcl
outsl
mov
mov
lds
int3
flds
fucom
jnp
lahf
sub
jbe
xchg
ret
in
lcall
inc
xchg
sub
xor
std
mov
enter
dec
push
pop
daa
jnp
cmp
or
push
mov
test
adc
movsl
push
dec
rol
in
jmp
xor
dec
fbstp
and
cmpsb
add
sub
enter
add
nop
or
mov
or
mov
mov
cmp
cltd
mov
lea
mov
scas
sbb
adc
add
stos
jg
ja
lods
pop
jg
sub
add
fld1
push
sbb
les
cld
push
xchg
mov
aad
ret
push
mov
pop
pop
and
sbb
and
inc
imul
mov
xchg
lret
mov
aaa
pop
sbb
sub
lret
dec
ds
rol
arpl
fisubrs
jecxz
and
aaa
mov
sbb
mov
imul
sbb
inc
dec
pop
popa
push
lods
stc
insb
aam
sbb
pop
outsl
sarb
std
mov
bnd
mov
call
add
mov
sub
movsb
pop
mov
inc
fisubl
sub
iret
subb
sbb
dec
sbb
jo
xchg
xor
iret
shlb
jge
add
lea
and
test
inc
lret
outsb
sahf
jmp
pop
pusha
cmp
ss
xor
das
mov
adc
arpl
inc
ror
stos
shrb
lea
daa
dec
aas
push
mov
cmc
and
mov
sbb
dec
add
in
mov
sti
shll
fildl
push
xor
sbb
mov
push
into
push
loop
arpl
dec
pop
cmp
adc
mov
mov
mov
js
adc
sub
in
orb
mov
movsl
or
loop
pop
je
mov
dec
jno
ljmp
jecxz
repz
or
pop
repz
lds
or
inc
sbb
test
pop
in
imul
sbb
mov
add
arpl
xchg
dec
inc
out
fistl
xlat
leave
lea
mov
pop
sub
adc
hlt
jae
dec
inc
mov
inc
push
mov
call
negb
add
jge
int3
jo
adc
testb
add
dec
push
pop
add
cwtl
adc
mov
mov
rcl
inc
xchg
jp
dec
divb
popf
push
fisttpll
push
mov
loope
jbe
or
mov
sub
ss
cmp
mov
outsb
jmp
adc
data16
loop
jle
dec
in
sbb
and
test
clc
jg
enter
sbb
xchg
enter
pop
loopne
cltd
xchg
movsb
mov
jns
xchg
mov
lret
nop
aad
xchg
add
adc
fnstsw
inc
test
test
inc
pop
and
nop
aad
jg
sahf
lret
sbb
cmp
hlt
lock
and
cmp
jge
or
xor
daa
xchg
stos
clc
and
xlat
out
push
nop
stos
jne
mov
out
shll
inc
add
insb
addb
sarb
jp
sub
repnz
pop
test
sarb
andl
lods
nop
dec
xchg
xor
mov
push
scas
in
jbe
loope
movsl
push
shl
aam
mov
cmp
in
or
lods
std
lods
push
sub
push
xor
cmp
ffree
mov
sub
push
shrb
inc
mov
movsb
add
lret
daa
mov
sub
pop
mov
and
push
stc
push
sbbb
mov
mov
hlt
xor
clc
or
mov
or
add
outsl
test
cmp
dec
ds
xchg
jbe
pop
test
xchg
xchg
inc
jle
jno
push
jmp
add
sub
push
in
or
pop
into
shll
sub
jnp
shll
adc
xchg
lea
push
aas
bound
pop
and
ficompl
mov
insb
lods
int3
repz
cmp
bnd
mov
lds
or
jmp
out
cld
repnz
repnz
jne
xor
ds
pop
mov
pushf
ss
pop
or
repnz
pushf
ja
inc
test
lret
movsb
es
xlat
push
lcall
sbb
push
xchg
xorl
xor
adc
stos
cmp
or
repnz
inc
ljmp
rclb
ljmp
imul
adc
gs
js
inc
mov
sbb
jmp
xor
mov
push
sahf
aaa
jne
subb
push
sbb
inc
jne
insl
push
mov
iret
test
inc
data16
out
mov
testl
in
adc
in
pop
clc
subb
sahf
outsb
mov
call
fimull
pop
and
and
push
xchg
cli
sbbl
mov
push
out
or
insb
and
loope
iret
and
div
cmp
mov
push
add
lods
out
lds
aaa
dec
mov
xchg
mov
mov
mov
mov
xchg
xorb
jo
and
adc
sbb
aas
mov
aaa
cmp
adc
jp
cmc
loop
pushf
xor
push
sub
test
sbb
je
xchg
mov
inc
data16
lods
fpatan
push
mov
inc
pop
add
sub
cmc
xchg
xchg
jmp
pushf
clc
sub
sub
fdivl
les
rcrl
mov
jle
stos
sbb
dec
jno
xor
mov
pushf
aaa
dec
cli
dec
inc
sahf
mov
push
test
dec
test
fstpt
push
cs
pop
pusha
xor
roll
fistpl
outsl
aaa
mov
mov
add
shl
inc
stos
insb
add
pop
and
fucom
ret
xchg
cmp
jno
fcomps
lock
imul
xchg
xorl
dec
pusha
outsl
ret
sbb
push
adc
call
outsb
fcmovbe
adc
imul
inc
flds
mov
ret
inc
sti
xor
insb
and
inc
mov
shrl
mov
repnz
insb
pop
in
fistl
into
adc
push
or
mov
dec
mov
ja
subl
ret
jge
into
hlt
xchg
int3
in
pop
fcomp
fs
mov
mov
fadds
outsl
mov
ret
movsb
inc
dec
stc
ss
jmp
fbld
test
push
imul
push
fwait
push
xchg
sbb
pop
cwtl
data16
test
mov
jmp
or
mov
iret
xor
sti
cs
cmp
push
push
jp
xchg
movsl
ja
jne,pt
arpl
roll
shll
xor
jmp
mov
imul
dec
jge
shlb
rcr
sub
fdivs
enter
push
shrl
sbb
fs
cmp
lock
push
xchg
enter
mov
sub
mov
jp
or
jne
jno
xchg
and
add
adc
fisubl
outsl
xor
mov
sti
loop
ds
xchg
inc
fdiv
add
xchg
and
ret
cmp
cmp
cmpsl
xor
shr
jae
jb
lods
jnp
mov
cli
cs
outsb
jns
dec
lcall
mov
lcall
sub
cmp
lock
sbb
xor
xor
and
pop
mov
push
loopne
test
shr
push
push
sub
mov
sub
cmp
movsl
stos
or
shrl
inc
gs
adc
filds
fmulp
jne
out
mov
fwait
outsb
jb
xorl
std
lahf
mov
and
push
mov
addr16
mov
mov
inc
cmp
cmp
mov
sub
out
cmpsl
xchg
rorl
cmpl
cmp
mov
jg
pop
out
mov
mov
jge
repnz
out
cmpsb
inc
adc
jb
mov
adc
lcall
es
cmp
and
inc
push
in
jb
lock
mov
icebp
dec
iret
inc
test
mov
out
mov
mov
lcall
dec
mov
call
ret
ret
pop
mov
push
repnz
nop
arpl
mov
test
bound
mov
and
movsb
stc
cmp
xchg
ja
xor
push
jns
xor
cmp
jo
add
inc
and
inc
lret
scas
addr16
and
add
lea
xor
fadd
test
mulb
fistpll
adc
std
sbb
xor
push
adc
mov
lahf
ss
sbb
mov
roll
inc
loop
imul
cmp
out
mov
sbb
pop
daa
repnz
inc
and
inc
neg
pop
mov
rolb
jecxz
or
pop
addb
out
push
adc
out
mov
in
inc
test
ds
adc
ja
push
jecxz
pop
std
push
mov
adc
daa
iret
hlt
mov
mov
cmpb
sub
lea
std
push
sbb
mov
sti
xor
fildll
sbb
out
jl
cwtl
dec
bound
mov
loopne
repz
icebp
add
ss
sub
push
rdtsc
shlb
inc
mov
xchg
iret
and
es
mov
mov
pop
push
jecxz
jb
hlt
mov
xchg
push
repz
fists
add
lods
cmpb
mov
gs
shl
pusha
icebp
xor
scas
test
test
mov
je
int
outsb
add
cmpsl
es
and
inc
bound
pop
loope
call
bound
adc
mov
push
cmp
xchg
sbb
std
es
popf
cld
and
adc
hlt
repnz
jne
jo
add
sbb
jae
lock
out
inc
adc
cmp
add
mov
xchg
stos
cmpsl
jle
push
outsl
push
mov
xor
mov
jno
push
cmpsb
arpl
bound
aaa
inc
movsb
es
xchg
iret
ret
jmp
pop
add
hlt
and
pop
in
iret
js
test
lret
xchg
xor
mov
jmp
insb
imul
inc
shlb
mov
subl
outsb
add
andb
pop
sti
loop
push
iret
icebp
push
scas
nop
xchg
ja
sbb
cmp
dec
mov
les
xorl
aam
jb
inc
ljmp
mov
xchg
mov
mov
push
lret
testb
mov
lahf
faddp
adc
pop
movsb
or
icebp
std
call
dec
movsl
shl
and
add
mov
ficoml
mov
mov
enter
sub
sbb
xchg
adc
fst
push
in
push
add
out
mov
push
repz
pop
dec
arpl
push
cltd
ret
push
int
sahf
cmp
bound
aam
repz
or
mov
ss
sub
cmp
pop
jmp
add
popa
lret
fidivl
aam
jbe
leave
pop
mov
jmp
xchg
out
mov
add
shll
loope
jp
push
push
les
lret
cs
mov
sbb
push
pop
stos
nop
or
cld
inc
dec
ljmp
lret
sbb
outsb
push
sbb
fdivl
daa
mov
sbb
cltd
scas
sub
testb
shrb
mov
fwait
subb
push
aaa
jle
and
fcomps
push
jg
cmp
mov
add
cmpsb
push
push
mov
fcmovne
inc
cwtl
lods
pop
pusha
negl
xchg
inc
insb
dec
xlat
loopne
ljmp
inc
xchg
mov
es
xchg
lret
jmp
xorb
popa
jge
js
and
lds
sti
mov
adc
dec
das
repz
inc
fimuls
ret
lea
push
sub
cltd
bound
out
arpl
sub
cmpsl
mov
push
or
cmp
dec
andl
imul
dec
xchg
sub
leave
addb
in
cmp
jmp
or
cmc
and
xor
inc
adc
loop
mov
inc
jl
and
mov
cmpsl
mov
mov
and
fdivs
data16
or
push
sahf
fnstenv
loop
push
and
lock
lods
jns
push
pusha
das
pop
adc
sub
inc
sbb
fwait
and
sbb
psubusb
das
xorl
subl
push
test
sbb
ds
cmpsb
cs
mov
adcl
sbb
stos
push
dec
xchg
pop
cmc
shll
dec
push
hlt
ret
pop
mov
and
fistpl
test
stos
std
jecxz
lret
cmp
add
jg
fwait
imul
sbb
aaa
js
xchg
dec
mov
cltd
repnz
mov
xor
nop
add
push
xlat
cmp
cmp
xor
aaa
jmp
xchg
xchg
or
adc
inc
out
shll
daa
add
inc
adc
popf
xor
push
push
fistpll
in
add
push
mov
mov
std
jne
jno
ret
test
shr
sub
jo
test
inc
adc
fwait
pop
jne
pop
xchg
fdivl
jge
push
push
arpl
aaa
fsubrs
imul
enter
cmp
mov
lods
mov
dec
lods
push
mov
dec
dec
adc
fiaddl
add
stos
pop
sub
mov
mov
cmp
pop
loope
mov
pop
in
cwtl
xchg
jbe
jle
cli
leave
push
push
cmp
lods
pop
xchg
jle
xchg
ljmp
xchg
test
jecxz
or
mov
flds
fnstsw
scas
movsl
in
scas
arpl
pop
sbb
mov
insb
xchg
outsl
add
adc
xchg
pop
pop
imul
ja
fdivr
mov
ror
mov
fidivrs
sbb
inc
aad
sbb
rclb
push
sbb
mov
push
movd
call
test
jg
aad
imul
inc
outsl
dec
dec
ja
xor
cltd
lcall
xchg
pop
iret
leave
pop
andl
daa
adc
test
push
iret
pop
push
popa
push
dec
not
je
insl
xor
out
cmp
mov
gs
pop
dec
pop
inc
add
rclb
stc
sarb
popa
xor
hlt
push
cmp
mov
jb
mov
mulb
xor
push
imul
js
fisubs
pop
sti
push
jl
mov
in
xchg
imul
adc
movsl
fs
push
nop
fsts
or
inc
std
movl
mov
les
mov
push
mov
aam
cs
sbb
mov
rolb
push
ss
imul
pop
mov
lret
movsb
rolb
fsubrs
enter
dec
adc
or
xor
pop
dec
sbb
shr
std
jne
or
aas
les
push
int
into
leave
jnp
push
dec
int3
cld
stos
or
or
negl
xchg
mov
sub
mov
pop
mov
jl
sub
mov
std
xor
mov
outsb
pushf
sbb
adc
xchg
sbb
test
scas
jmp
push
jb
inc
loop
iret
shlb
sub
push
adc
movsl
aam
mov
popa
ret
shl
inc
cmp
push
xchg
mov
mov
pop
cmp
mov
test
xor
cltd
add
dec
jnp
sub
mov
mov
les
mov
pop
pop
call
les
pop
jne
imul
xchg
inc
xor
insl
test
movsl
pushl
aas
push
push
test
js
subl
sbb
jmp
stos
lret
fwait
adc
cltd
outsb
arpl
sub
jmp
push
or
push
pushf
fisubrl
sub
pop
cmp
cltd
xor
sub
std
arpl
daa
fbstp
cmpsb
icebp
cmp
dec
adc
dec
jno
data16
mov
cltd
int3
int
xchg
jmp
pop
and
push
cmpsl
cmpsl
mov
call
adc
test
mov
cmp
out
aas
shlb
mov
jmp
cmc
mov
data16
ds
lahf
push
testb
push
jbe
out
jae
mov
pushf
out
add
jns
aad
cwtl
inc
and
ret
sarl
push
sbb
faddl
cltd
mov
outsl
shrb
cmpb
sbb
repnz
xor
ds
mov
mov
mov
add
cwtl
xchg
daa
adc
xchg
lods
sub
cmc
sbb
enter
jns
loopne
lods
jecxz
inc
dec
out
aam
aam
scas
adc
std
jl
adc
push
or
dec
jo
pop
dec
adc
mov
in
ja
daa
jge
inc
xor
clc
mov
pop
mov
popa
dec
roll
push
xor
mov
inc
imul
add
cmp
std
test
mov
push
mov
mov
stos
mov
add
lcall
pop
mov
xchg
mov
mov
cmp
dec
les
out
dec
icebp
enter
mov
aaa
xchg
and
push
push
dec
xchg
aad
mov
jmp
lret
sar
jns
mov
out
aad
fsubr
pop
pop
ss
pop
jg
js
push
not
jmp
repz
jmp
sub
loope
outsb
push
lahf
dec
ss
data16
push
and
outsl
mov
lods
repz
sahf
dec
cmpsl
jge
pusha
mov
sub
rol
xchg
sahf
cld
push
hlt
push
stc
inc
push
mov
in
mov
pop
fcoms
adcl
xchg
xchg
cmpsl
and
inc
sahf
fists
mov
jne
adc
sbb
pop
addr16
std
fs
repnz
inc
sub
fs
xchg
inc
out
mov
ret
inc
ss
mov
push
xchg
clc
add
xchg
aas
std
cli
ret
or
inc
cltd
das
loopne
inc
adc
add
xor
aad
ret
int3
movsb
lahf
test
and
or
inc
mov
fldlg2
cmc
dec
xor
push
and
fucom
lret
mov
ja
dec
popa
pusha
sahf
push
rcr
rcrb
cltd
test
jge
sbb
shl
test
out
push
in
cltd
and
sub
inc
adc
pop
adc
jne
adc
nop
mov
or
mov
cmpsb
mov
push
scas
std
and
pop
push
scas
sarb
pop
sub
rcrl
adc
imulb
or
int
jg
push
cmp
push
or
xor
sub
or
stos
test
arpl
xor
nop
dec
loop
add
rorb
fwait
mov
push
add
sub
or
jb
outsb
inc
add
scas
push
pop
ss
jb
sub
lods
push
jae
adc
sbb
pop
xchg
fstl
jle
adc
jmp
xor
ljmp
fs
addr16
call
out
xor
jae
sub
xlat
push
mov
add
jne
adc
mov
add
aas
test
sarl
sub
and
push
push
bnd
movsb
nop
in
iret
add
in
adc
fwait
and
std
stc
xchg
pop
cwtl
rclb
push
sbb
cmpsl
lahf
lea
jne
cmp
negl
mov
sub
rorb
lods
dec
int3
fwait
adc
aaa
daa
xchg
imul
ficompl
icebp
fists
imul
dec
sub
sub
call
ljmp
dec
pop
xor
push
and
xchg
scas
dec
scas
test
movsl
mov
fadd
xchg
adc
adc
mov
xor
and
push
stos
and
insb
dec
andl
pop
cwtl
inc
stos
xor
push
and
out
fidivrs
pop
or
pop
xchg
push
and
inc
xchg
inc
cmpsb
cmp
fwait
pusha
sub
sbb
in
add
fs
into
mov
mov
pop
negb
and
and
push
enter
in
jno
mov
nop
adc
pop
mov
lcall
fwait
mov
stc
xor
stos
inc
js
jge
lret
sub
or
jns
add
loope
mov
mov
test
mov
orb
push
cli
sti
sti
or
adc
scas
add
xchg
loope
pop
xchg
pop
std
das
out
jmp
leave
testb
andb
inc
mov
divl
fnstenv
sbb
pop
out
sbb
adc
test
adc
add
mov
outsb
xchg
or
inc
push
or
test
dec
adc
and
mov
addr16
and
add
fiaddl
test
in
cmp
cld
in
repz
out
xor
bound
das
xor
jo
or
shrl
pop
pop
imull
cmpsl
sarb
sub
mov
movups
and
add
and
daa
and
out
fs
mov
jne
popf
insl
leave
sub
lcall
jbe
stc
dec
jne
mov
enter
aas
push
push
sar
cwtl
mov
scas
mov
in
sub
call
sub
popf
lret
shrb
jbe
in
test
loop
cmp
aas
addr16
aaa
jo
cmp
inc
and
imul
arpl
or
xor
push
push
pop
lret
cmpb
std
aas
enter
fs
fwait
inc
jg
push
les
mov
xchg
inc
mov
jl
fs
out
sbb
xor
test
out
xchg
repnz
clc
jo
xchg
das
or
or
mov
and
jg
jecxz
mov
aas
sub
aad
je
dec
js
into
mov
jb
stos
sub
outsl
pop
ret
push
jp
mov
test
cmp
jg
cli
adc
xor
mov
ds
shlb
dec
sbb
repz
data16
mov
btc
lock
or
nop
insb
fwait
cmpsl
and
lret
inc
ror
add
imulb
cli
xlat
test
or
in
inc
shr
pop
cmpsl
xor
stos
mov
sub
pop
jg
pop
mov
outsl
sub
mov
mov
ss
fisttpll
iret
cmp
cmp
rcrl
cld
cs
inc
popa
xchg
shrl
mov
rcl
jne
mov
adc
jbe
cmpsl
lret
xorb
cmpsl
imul
or
add
stc
inc
js
sbb
pop
mov
fldcw
xchg
sub
imul
daa
push
sub
cmpsb
int3
ja
dec
clc
sub
or
scas
gs
and
jns
cld
pop
mov
or
and
icebp
ficompl
insb
es
dec
xchg
adc
pusha
in
dec
imul
adc
fdivs
push
pop
iret
sahf
pop
popa
lock
out
inc
fwait
inc
hlt
mov
inc
xchg
pusha
add
into
sub
aad
aam
xor
lahf
sbb
jle
es
inc
jns
dec
cmp
adc
mov
mov
gs
xlat
popl
test
lcall
mov
xchg
adc
sub
pop
ljmp
mov
imull
stos
repnz
outsl
fs
jbe
fistpl
cwtl
add
push
mov
lock
clc
cmp
movsl
call
mov
hlt
pushl
mov
cld
mov
bound
loope
les
add
jecxz
inc
sub
outsb
insl
je
adc
les
cmp
adc
xorb
test
adc
pop
sbb
cs
sbb
jl
loopne
inc
clc
jmp
jl
mov
js
mov
pop
push
ficoml
or
xchg
call
je
test
insb
ds
mov
stos
adc
pusha
mov
hlt
sub
ja
jmp
in
inc
rcrb
lods
lret
fisubrl
pop
rolb
pop
aam
xorb
pop
inc
jecxz
inc
cvtps2pd
dec
in
mov
enter
cltd
or
lahf
into
jne
out
fs
imull
inc
jg
inc
lods
jno,pt
jns
in
adc
imul
out
xchg
xor
jp
mov
jg
js
repz
add
loopne
loopne
rcl
adc
xlat
ljmp
pop
adc
sbb
testl
aad
lea
ds
mov
aam
shll
push
jp
xchg
mov
stos
adc
ljmp
in
pop
push
movsl
or
sub
rcr
push
std
movsl
xchg
lea
push
add
lret
and
inc
and
addr16
sbb
lahf
pusha
cmp
sbb
pop
xchg
ljmp
pop
insb
aad
mov
inc
out
sbb
push
pop
sbb
aam
lahf
clc
or
cmc
repz
cld
daa
adc
clc
ret
loop
lock
push
push
lods
and
inc
lret
fldt
push
jne
jp
xchg
adc
out
cwtl
jns
aad
xor
out
test
jecxz
ror
sbb
lret
outsb
mov
add
or
push
imul
popa
xchg
scas
in
pushw
jle
and
xor
dec
insl
push
and
loope
sub
in
cmpsb
rol
xchg
test
clc
popa
jge
ret
ret
in
test
outsb
push
ds
es
mov
data16
shll
fcompl
pushf
aas
jle
movsb
into
sbb
push
lret
pop
fldcw
xchg
lahf
dec
push
in
call
adc
and
push
ds
jnp
add
dec
pop
stos
les
dec
loopne
sub
pop
movsl
test
adc
add
xchg
xchg
rcrb
xlat
mov
aad
call
pop
cltd
inc
out
jns
pop
loop
mov
or
or
dec
xchg
clc
mov
sbb
mov
cli
mov
rorb
cs
cmc
add
lcall
lret
mov
mov
fadds
inc
push
push
mull
or
sub
xchg
sti
add
cmp
stc
jno
popf
sub
xchg
int3
sahf
out
xor
sub
add
jmp
loope
aas
add
loopne
mov
dec
xlat
mov
test
dec
mov
insl
mull
test
stos
jo
mov
jmp
sub
test
cmp
push
and
xchg
test
repz
inc
sahf
imul
stos
addr16
leave
data16
xchg
and
xchg
add
or
ds
in
sahf
cmp
push
push
or
outsl
cmp
pusha
push
mov
out
inc
push
js
hlt
or
sub
sub
adc
jmp
adc
in
and
inc
popf
rorb
xchg
addr16
jo
je
ljmpw
cmpsb
jmp
in
pop
mov
inc
push
cmp
and
aam
xchg
dec
adc
call
push
aad
stc
push
and
inc
ret
push
mov
insb
scas
or
cltd
sub
or
jae
shlb
je
cwtl
push
push
jae
fxch
out
es
enter
jnp
loope
nop
fimuls
adc
inc
faddl
xlat
cmp
xor
mov
dec
cli
cli
call
ds
mov
inc
in
mov
imulb
adc
dec
or
orl
negb
mov
dec
arpl
outsl
js
dec
pop
fildll
repnz
lcall
push
push
ret
mov
xor
in
mov
mov
jne
xor
cmpl
imul
js
frstor
and
mov
pop
mov
cmp
lods
jo
add
dec
test
icebp
dec
push
jmp
repz
int
push
cmpsb
das
xchg
sbb
inc
pop
lock
jp
das
movl
shrb
inc
ljmp
adc
push
sbb
pop
jl
fildl
or
add
cmc
mov
xchg
out
jae
push
and
push
or
jnp
sbb
and
add
cld
cmp
popa
xchg
push
aad
fldenv
test
jns
cmp
ds
fsubl
bound
adc
test
mov
sbb
mov
popf
hlt
gs
push
ss
pop
xchg
cltd
cld
shlb
std
push
inc
shrl
xor
pop
addr16
mov
pop
sbb
fst
and
xchg
stos
test
mov
mov
adc
xor
cmp
mov
test
jl
cmpsl
or
cwtl
scas
push
dec
xchg
shll
stos
sbb
fwait
xor
push
mov
inc
dec
pop
rorl
mov
movsl
int
movsl
xchg
out
iret
mov
add
push
or
push
push
jnp
adc
cmp
mov
xchg
inc
sbb
add
jno
sub
jle
and
rcrl
mov
dec
mov
addr16
aaa
lods
pusha
xor
xor
outsl
cmp
loop
imul
push
xor
adcb
and
or
mov
and
repnz
jbe
popa
mov
jge
test
icebp
cmp
xor
jge
aaa
or
adc
inc
je
sub
inc
nop
pminsw
lds
jp
jg
dec
out
mov
lods
or
jae
xchg
sti
or
jge
popa
mov
js
mov
cmpsl
sbb
sub
imul
shl
mov
adc
dec
xchg
movsb
test
cmp
pop
mov
popf
xor
fwait
popa
icebp
clc
je
and
data16
lcall
mov
repnz
sub
dec
add
sti
sbb
jae
xor
bound
out
data16
enter
pop
aaa
cmp
mov
cld
or
aas
push
mov
jbe
push
iret
scas
adc
lods
les
lods
enter
adc
sahf
or
add
iret
test
outsb
emms
mov
out
cltd
movsb
loope
outsb
xor
xor
jmp
ds
jecxz
popf
pop
pop
cwtl
outsl
and
mov
push
fiadds
je
adc
je
popf
cmpsb
jbe
mov
mov
mov
cwtl
sahf
shrb
jb
in
dec
fisubrl
imul
sbb
pop
imul
mov
xor
lods
outsb
dec
ret
xchg
test
aaa
decb
sbb
pusha
cmp
adc
cwtl
cs
sbb
jnp
adc
mov
mov
imul
jle
and
add
pop
out
jne
jmp
loop
loop
cmp
int
jb
out
outsl
dec
loopne
inc
adc
out
cmp
jg
fsubl
inc
inc
jae
in
fidivrl
das
and
and
and
ljmp
ret
lea
imul
cmp
gs
xchg
pop
cs
div
dec
out
mov
mov
mov
add
xchg
push
cmpsl
repnz
ret
es
mov
testb
xchg
insb
jb
push
jno
jae
fcoml
ds
inc
loop
rcr
jg
int
push
stos
imul
out
mov
push
push
dec
out
mov
lcall
sarl
push
popa
dec
test
fldl
mov
mov
incl
dec
fists
cld
jmp
xor
adc
orb
mov
mov
dec
out
cmc
cmc
lcall
push
jne
das
gs
scas
imul
mov
jp
movsl
jle
clc
sbb
xor
push
xchg
xchg
mov
in
push
ficoml
cmp
sub
push
pop
popa
sub
sub
add
into
dec
add
or
scas
call
jmp
ret
out
mov
pushf
sbb
cltd
sub
mov
sub
cs
jg
push
loop
dec
dec
cmp
lahf
loopne
mov
jae
popf
popa
mov
fucomi
aaa
xlat
in
cmp
mov
fsubrs
in
jns
movsl
out
enter
inc
and
mov
sbb
inc
pop
cmp
aad
adc
lahf
xchg
icebp
fdivs
pop
sub
pop
sti
mov
add
lods
je
outsl
nop
and
nop
in
sbb
xchg
mov
imulb
test
fs
adc
scas
jmp
pop
pop
popf
pushf
inc
out
inc
lret
and
cmpsb
inc
clc
std
ljmpw
dec
and
fisubrs
loop
hlt
inc
stc
mov
push
cwtl
and
add
enter
icebp
out
jne
std
cmpsb
sub
loopne
dec
clc
call
pop
xor
pop
rolb
adc
notl
and
mov
cmp
out
gs
cmp
pop
mov
imul
sub
in
mov
jo
and
xlat
daa
pop
aam
sub
fdivrl
sbb
sbb
testb
cmc
jbe
add
xlat
mov
mov
ror
cs
jle
jle
movsb
lds
xchg
sbb
sub
lods
dec
add
je
stos
jge
jecxz
mov
mov
sub
ret
in
pushf
mov
and
jnp
mov
rcll
cld
out
jnp
jge
test
je
push
into
pop
or
xchg
aam
sahf
xchg
call
and
dec
mov
xchg
pop
push
dec
xchg
rcrb
pop
mov
inc
int3
adc
rcrb
loop
out
repnz
shrl
jne
and
pop
test
xchg
mov
lret
or
jl
outsb
mov
xchg
enter
cltd
stos
pop
lea
inc
std
inc
rol
nop
add
push
lds
das
lds
mov
pop
mov
mov
outsb
inc
stos
rcrb
insb
xchg
adc
repnz
stc
pop
push
pop
idivb
mov
data16
and
xchg
jmp
mov
loope
push
inc
adc
sub
add
push
jne
and
cmp
jecxz
mov
cwtl
movsb
push
dec
cs
orb
add
dec
pop
xor
subb
lea
aas
repz
push
dec
push
sbb
jo
out
ss
dec
insb
xor
jl
inc
in
xor
inc
test
mov
xchg
mov
lds
cltd
dec
xlat
fdivs
mov
out
and
arpl
shll
mov
push
aad
ret
or
je
jp
push
mov
mov
test
lahf
jno
iret
pusha
into
aad
jg
xchg
int
or
push
push
aas
inc
stc
mov
xor
mov
sub
push
push
sub
lret
mov
sbb
mov
ror
clc
lret
jno
inc
and
outsl
les
mov
jns
mov
out
arpl
das
out
xor
es
subb
dec
movsb
adc
inc
lods
leave
mov
ljmp
add
cmp
push
jnp
out
cmp
or
jle
aaa
mov
shl
imul
adc
sbb
aaa
js
es
stc
dec
jno
jo
jnp
rolb
mov
fistl
mov
popa
xor
xchg
pop
insb
sbb
add
mov
pop
js
inc
mov
cwtl
sti
scas
lret
adc
pushf
sub
cmp
fcoml
pop
dec
shlb
jecxz
push
xchg
je
mov
repnz
dec
mov
or
inc
cmp
aaa
test
mov
ficoms
fldt
aad
sub
push
or
push
stos
adc
fisubrl
pushf
push
and
mov
cmp
add
aad
dec
repz
nop
mov
and
pop
ljmp
inc
mov
fbld
mov
sbb
lds
cmpsl
push
mov
ror
ret
lods
mov
dec
jmp
je
insb
push
repz
sbb
push
je
cltd
dec
mov
test
gs
sbb
mov
outsb
pop
lock
ret
adc
repz
jl
add
lret
sub
mov
push
cmpsl
in
scas
jmp
mov
bound
out
inc
mov
dec
test
cmp
pushf
sbb
push
mov
icebp
sbb
pop
gs
adc
in
leave
push
jmp
dec
xor
stc
dec
mov
repz
pushf
into
lahf
jmp
add
mov
out
insb
xchg
pop
inc
push
mov
pop
sti
icebp
mov
ja
dec
fwait
xchg
jle
mov
pop
testb
push
cmp
mov
mov
pushf
mov
rorb
mov
push
dec
scas
mov
mov
loope
fs
roll
and
daa
pop
rcll
xchg
loope
arpl
cltd
xchg
xchg
sbb
sbb
add
xor
ret
cmp
adc
mov
mov
jecxz
jmp
mov
mov
lret
popa
pop
mov
icebp
lock
in
pop
and
pushf
or
push
xor
push
ret
pop
enter
adc
out
or
sub
fcmovne
aad
into
xchg
mov
in
inc
pushf
stc
and
mov
pop
mov
fimull
icebp
pop
jno
jg
cli
cmp
mov
int
jnp
xchg
jecxz,pn
xchg
xchg
push
inc
shl
push
cmp
push
cmpl
repnz
out
scas
mul
push
mov
push
arpl
pop
dec
and
fcomps
pop
jno
mov
jo
test
mov
in
out
subl
sub
scas
dec
mov
sbb
jmp
add
lods
pop
add
xor
das
fndisi(8087
xorl
inc
pop
pop
in
ljmp
scas
ss
imul
cmp
push
shrl
repz
js
ljmp
inc
subl
aaa
and
cwtl
sub
mov
outsb
mov
mov
aad
sbb
out
nop
ds
jle
add
xor
gs
sbb
daa
inc
inc
adc
and
jns
fisttps
pop
js
je
aam
or
nop
adc
cmp
mov
test
hlt
jnp
pop
mov
call
xchg
in
pop
sbb
int
adc
mov
enter
and
cltd
sbb
fwait
into
loopne
ret
call
push
lret
popa
outsb
or
mov
sbb
mov
lahf
aad
jno
arpl
push
add
xchg
push
inc
mov
rcrb
fidivrl
lods
mov
daa
test
xor
jp
mov
iret
cmp
add
and
pop
cltd
scas
das
pushf
jo
xor
mov
fadds
ret
inc
mov
xchg
lock
pushf
mov
adc
mov
loope
sub
cmpsl
sub
shlb
mov
outsb
iret
nop
ret
int
rorl
out
adc
fdivl
movsb
mov
push
sbb
mov
jmp
mov
mov
pop
mov
cli
dec
insb
jg
xor
iret
fcomip
xorl
int3
jb
mov
sbb
lods
xorl
push
adc
mov
add
pop
mov
fcomps
sbb
xchg
ds
mov
xchg
push
imul
in
inc
dec
xchg
push
adc
mov
cmc
jmp
out
aas
test
jno
outsl
fnstsw
test
enter
sti
cmp
pop
ss
inc
xchg
sub
push
cmpsb
inc
sub
mov
add
nop
mov
imul
dec
sti
fwait
mov
jp
mov
lds
xchg
pop
mov
adc
dec
sbbl
lds
fs
je
std
dec
xor
arpl
in
sbb
ds
test
ficompl
frstor
orl
pop
int3
int3
mov
insl
inc
sub
arpl
mov
or
or
mov
push
push
loope
sub
fbstp
mov
cmp
jg
jnp
std
xor
xchg
sub
push
cli
popf
sti
sub
enter
push
push
pusha
jmp
out
out
loop
dec
int
push
push
and
pushf
jmp
xor
test
lock
inc
or
loop
adc
cli
jb
inc
jl
repnz
and
shrb
jg
mov
sbb
sub
xchg
xor
mov
je
divb
scas
xchg
or
in
jnp
inc
movsb
in
jp
lahf
test
ljmp
icebp
test
lcall
jp
icebp
pop
aam
repnz
gs
jnp
sub
adc
xor
fsubr
push
in
aam
jl
aam
loop
shrl
cltd
popf
or
adc
mov
or
gs
adc
cli
popa
or
faddp
lds
sub
add
dec
shlb
xor
pop
xchg
cltd
lret
mov
xchg
stc
test
add
and
push
aad
outsb
out
adcl
and
rolb
sbb
in
sbb
xor
mulb
repz
aas
scas
sbb
adc
pop
daa
dec
adc
dec
sahf
or
lret
outsl
or
and
lods
inc
lds
dec
push
adc
mov
and
or
xchg
sbb
pop
jnp
ja
ljmp
add
or
xchg
test
ret
inc
dec
out
mov
jp
xchg
leave
pop
in
test
pop
inc
mov
adc
mov
sub
cmp
lods
cmp
cmpsl
popf
outsb
outsb
xchg
inc
push
mov
daa
daa
aaa
data16
pop
cltd
dec
jbe
xchg
lods
sub
dec
jae
jae
clc
adc
mov
scas
jl
scas
xlat
cli
jecxz
mov
fwait
loopew
loop
cmp
hlt
shll
jge
and
adcb
jmp
sbb
add
and
xchg
inc
int
sbb
inc
mov
xchg
push
xchg
lret
insl
and
shll
shrl
pop
addr16
mov
shll
and
ret
sbb
cmp
in
js
insb
inc
sub
push
call
xchg
pop
aaa
xorb
scas
cmp
push
adc
nop
dec
xor
lea
movb
insl
pop
cltd
iret
cs
das
repz
xlat
fdivrs
cmp
into
jnp
dec
icebp
xchg
or
push
add
cmp
mov
dec
or
jl
jecxz
mov
cld
pop
add
fdivrs
repnz
xor
xchg
mov
and
adc
xchg
cld
out
shll
cmovp
mov
icebp
mov
ljmp
mov
lds
mov
add
pop
pop
dec
sbb
movsl
xor
inc
dec
cli
sbb
and
jno
or
roll
push
imul
mov
lret
push
ss
ss
adc
or
call
jne
xchg
pop
int
pusha
dec
push
movsb
movsb
cmp
xchg
or
cmp
add
fisubs
fwait
push
fs
lock
push
mov
fdivrs
xchg
iret
or
fnsave
fstl
dec
push
bts
cmpsb
mov
inc
sbb
adc
clc
jae
imul
lea
cwtl
adc
daa
mov
push
orb
jge
mov
lcall
sub
mov
xchg
sub
stos
xchg
add
mov
jmp
xor
mov
notl
shrl
and
jne
xchg
cld
leave
loope
adc
scas
mov
xor
pop
div
or
movsl
adc
or
sti
jp
rorb
loop
stos
adc
les
enter
xor
adc
and
movsl
in
adc
cltd
out
fisubs
lock
push
insb
test
addps
stc
pop
sbb
mov
sbbb
nop
add
inc
mov
xchg
pop
sub
fisubs
mov
cmp
push
sbb
stos
adc
xor
iret
jmp
cmpsl
fmul
add
in
cli
ja
mov
pop
rcrb
jmp
or
and
push
push
rcrb
mov
scas
lret
mov
adc
dec
mov
lret
jb
dec
xchg
mov
cmpb
lods
int3
test
ficoml
nop
jg
aaa
lea
out
dec
cmp
pop
add
lret
pop
nop
mov
aam
popa
mov
popa
roll
sbb
pop
cmp
dec
add
dec
sbb
pusha
or
push
fistps
pop
push
cmp
cmp
dec
sbb
pushf
pop
icebp
rcr
stos
lods
pop
adc
nop
insl
lahf
jb
add
sub
scas
inc
dec
cmpsl
adc
push
jo
adc
nop
fwait
lock
jp
sbb
faddl
xchg
pop
mov
and
fildll
push
test
jb
adc
cld
add
sub
mov
pop
cmp
int3
iret
pop
jbe
sub
push
movsb
fstl
and
xor
aaa
or
jno
fcoml
into
fdivs
jg
mov
daa
es
hlt
adc
mov
stc
mov
mov
notb
cmp
adc
jne
xor
pop
pop
sahf
dec
pop
fwait
outsl
sti
push
and
outsb
pop
ds
and
mov
into
rorl
cld
mov
je
mov
push
je
and
iret
andl
subl
dec
popf
fbstp
xor
arpl
cli
movsl
xor
push
and
adc
into
mov
and
shrb
jmp
cmp
int3
push
rorl
inc
xchg
jae
or
pop
sbb
lret
xor
pop
lcall
pop
sbb
sbb
fsubrl
sub
mov
enter
cli
xor
sub
data16
push
pushf
test
and
dec
inc
repnz
mov
mov
int3
ret
adc
pop
jp
pop
test
lret
cmp
sub
jg
mov
pop
adc
pop
ss
mov
inc
pop
movsb
jle
push
jl
iret
stos
repz
movsb
rcr
fmull
or
aas
ljmp
jg
rol
xor
pop
pop
je
xor
ljmp
jae
xchg
xchg
cmpsb
int3
fs
jbe
sbb
sub
adc
mov
ljmp
cmp
mov
dec
pop
and
push
mov
and
push
movsl
push
xor
int3
call
imul
movsb
gs
jnp
jbe
xor
push
aam
push
rorl
mov
outsb
jg
mov
rclb
pusha
and
je
and
xchg
mov
and
imul
jg
cmp
jae
jecxz
sub
cmp
mov
test
insb
sub
inc
data16
jnp
sahf
pop
jmp
ret
mov
stos
cld
jne
cmp
add
shlb
mov
mov
fwait
movsl
mov
jp
adc
adc
xchg
notl
xchg
les
outsl
jge
sub
leave
cld
shll
imul
mov
mov
fdivr
adc
sub
out
lret
les
dec
jae
stos
flds
xchg
jns
sbb
mov
int
repz
mov
into
adc
dec
orl
xor
sahf
inc
mov
mov
test
sub
xor
push
pop
fstps
or
fsub
ja
dec
xchg
rorl
clc
pop
push
and
lock
push
inc
imul
inc
sti
lahf
pushf
adc
hlt
mov
mov
mov
dec
out
jg
sub
jo
faddl
popf
and
mov
push
add
xor
cwtl
loop
mov
iret
pop
mov
lock
adc
cmp
out
jmp
sub
lret
cmc
cmpsl
push
aam
stc
and
xchg
fbstp
daa
repnz
or
or
dec
lahf
dec
or
dec
jg
jg
sti
test
xchg
or
out
fmull
xchg
ljmp
fmul
rolb
or
jp
push
push
cmp
pop
push
cmp
fists
lret
loope
inc
fldcw
stos
loope
add
sahf
sub
or
jecxz
jns
ljmp
adc
jbe
data16
cltd
stos
mov
fdivrp
jnp
mov
mov
dec
jl
sbb
dec
subl
mov
mov
insb
shrb
lods
lret
xor
or
mov
icebp
fstl
jp
pushf
lock
inc
xor
shll
ret
mov
int
mov
adc
mov
add
inc
loope
fsub
nop
out
sbb
je
cmp
mov
popf
mov
fcmovbe
adc
shlb
pusha
inc
pop
mov
mov
xchg
xchg
and
enter
jg
imul
fimull
xor
jno
cmpsl
jo
mov
add
nop
mov
pop
sbb
repz
fisttpll
mov
mov
cmp
xchg
pop
loopne
sbb
xchg
int
inc
test
fsubs
mov
test
pop
xor
push
stos
push
adc
or
in
xchg
test
jb
pop
stos
jnp
cmp
sarl
and
dec
mov
add
outsl
sub
scas
loope
inc
mov
pushf
pop
cmp
data16
out
ret
push
mov
into
lods
or
pusha
xor
dec
pushf
inc
dec
add
rorb
loop
lods
inc
in
fsts
mov
fmuls
outsb
cmc
sbb
lods
push
lcall
int3
mov
cwtl
dec
mov
xchg
or
pushf
xor
add
test
shll
into
mov
sub
das
mov
pusha
and
in
out
lods
cs
pop
jne
mov
addb
add
lock
mov
xchg
cltd
mov
inc
xchg
leave
dec
add
lret
fs
adc
cmpl
repz
sahf
test
and
loope
jnp
dec
cmp
pusha
scas
lcall
imul
and
mov
mov
out
lcall
jb
cmp
jmp
daa
or
mov
dec
bound
jae
push
jnp
clc
jge
stos
and
cmp
push
push
lahf
cld
lea
cmp
and
push
inc
sub
insb
fisubs
push
mov
jne
daa
mov
aad
lahf
xchg
adc
mov
lods
xorb
sarb
imul
int
push
ret
push
mov
out
and
push
aad
adcl
aas
add
jbe
mov
flds
xchg
pop
les
lock
rorl
xchg
jno
xchg
cmpsl
loop
sub
pop
adc
push
sbb
pop
aad
adc
lret
bound
rcrb
cld
pop
ret
pop
jmp
cmp
pop
fmuls
mov
mov
and
ljmp
adc
les
xor
into
push
call
xchg
jb
cmpl
ret
aad
cwtl
pusha
pop
push
movsb
lcall
dec
cli
fsubrl
movsl
and
cmpsb
int3
movsl
pop
je
cli
stos
xor
pop
lahf
push
mov
rcl
cmp
lcall
xchg
not
add
outsb
xchg
mov
ja
les
cltd
and
mov
mov
jne
ja
fbld
fsubs
dec
rcll
adc
sbb
inc
dec
and
testl
mov
aaa
push
jmp
rcll
mov
pop
jbe
mov
adc
negb
jns
or
sub
sbb
in
daa
cmpsl
rolb
or
push
sbb
add
mov
jl
or
sub
jmp
ret
cmp
mov
dec
mov
ss
pop
repnz
int3
in
inc
iret
pop
push
jno
mov
mov
das
mov
jae
mulb
xchg
pop
xor
shll
aaa
mov
add
mov
sub
push
xchg
adc
push
loopne
popa
jle
sbb
insl
push
mov
push
andb
loop
out
jecxz
fnclex
shll
aam
dec
mov
xchg
push
inc
leave
sahf
sbb
int3
adc
cmp
iret
add
outsl
fsts
sub
lret
cmp
notrack
dec
adc
sbb
jle
dec
imul
pop
push
imul
je
add
pop
or
or
push
test
cmpsl
cmpb
fcomps
ja
ss
push
jge
dec
jle
lcall
xchg
lods
pop
outsl
xchg
and
sub
xor
aaa
inc
xchg
adc
mov
adc
mov
out
mov
int
or
ficompl
and
in
loop
pop
repnz
lret
jne
rorb
ret
adc
sub
pop
out
mov
notl
cwtl
jge
mov
ret
push
jg
cmpsl
mov
jle
lcall
jbe
add
cmpsb
cmpsl
mov
pop
adc
enter
call
mov
lret
rcrb
sbb
jnp
pop
pop
mov
dec
ljmp
xor
outsb
sbb
push
popa
repnz
bound
sahf
push
test
stos
or
fcoml
xor
pop
out
pop
push
mov
jb
fwait
cli
sbb
mov
js
xchg
jae
pop
lret
sub
sub
inc
pop
jo
lcall
mov
addl
push
loopne
mov
hlt
add
sbb
and
jmp
lret
rorl
mov
aam
insb
jecxz
cmc
mov
sti
adc
int
xchg
push
lret
ds
xlat
mov
dec
xchg
push
xchg
int3
adc
stos
cwtl
std
shlb
stc
cmp
cmp
inc
xchg
push
int3
adc
mov
adc
mov
push
jbe
jb
lds
inc
pop
mov
repz
dec
je
fisubrl
jmp
mov
data16
ja
mov
mov
xorl
cli
loopne
fmull
test
xchg
mov
rcr
data16
mov
adc
dec
rdmsr
aad
sbb
cmpb
pop
les
ja
push
push
mov
rcl
dec
and
inc
call
mov
cwtl
push
stos
push
sub
pop
ret
leave
mov
add
or
in
dec
mov
scas
in
aas
xchg
int
inc
insl
jecxz
loope
int
pop
out
gs
int
adc
push
loop
inc
and
add
clc
mov
dec
xchg
call
imul
hlt
fcmovnu
mov
dec
jb
pushf
ljmp
out
repz
inc
in
std
idivl
imul
xchg
outsl
sbb
mov
push
mov
push
and
loop
cmp
mov
mov
inc
lds
repnz
mov
gs
and
in
pop
andb
add
test
pop
cmp
xor
pop
pop
movsb
push
xchg
sbb
mov
sbb
cmc
inc
dec
add
sub
ljmp
dec
sbb
test
dec
xor
xchg
adc
in
fnstenv
sub
cmp
cltd
mov
xor
xchg
jne
mov
sahf
pop
out
jecxz
mov
push
and
test
gs
mov
aam
loope
in
ljmp
aas
dec
lods
andb
in
ficoms
and
ljmp
xchg
sbb
or
ds
mov
lahf
out
mov
push
and
movsl
mov
dec
mov
sbb
sti
or
cmp
call
adc
add
test
jmp
inc
or
imul
add
cwtl
cmp
jp
test
jb
repz
sbb
inc
cwtl
adc
fwait
push
jbe
xor
in
mov
fists
shrl
pop
and
jno
out
pop
lods
push
inc
jbe
mov
sbb
mov
leave
fidivs
cmpsb
xor
cmp
fcompp
int3
fwait
aam
or
out
inc
inc
mov
aas
mov
test
aas
ret
rolb
movsb
mov
scas
int3
inc
mov
xlat
lods
loope
icebp
jl
add
movsb
inc
bound
push
mov
xor
xchg
add
and
sub
fistpll
fwait
or
push
pusha
cmpsl
loopne
dec
loopne
je
sub
jb
or
jg
mov
sub
outsb
push
inc
cmpsb
loopne
lds
cwtl
xor
sub
adc
inc
xor
jb
or
repz
insb
inc
xorl
mov
or
dec
jb
test
into
jge
push
repz
in
popf
cmp
loop
or
cmc
mov
adc
xor
sti
or
pop
cmpsb
lock
cmp
pop
int3
in
mov
cmp
fidivrl
stos
jp
dec
push
adc
data16
mov
pop
je
adc
insb
xchg
sub
stos
dec
pop
cmp
mov
or
sbb
mov
push
aaa
rcrb
movl
jns
push
push
lea
xchg
xchg
dec
test
out
popf
hlt
sub
fdivs
aam
out
jo
mov
fnstcw
stc
out
idivl
cmp
stos
sbb
inc
nop
dec
xor
in
test
add
lock
shrl
lods
or
in
or
lahf
or
pop
mov
xchg
mov
lods
cmpsb
scas
or
cmp
emms
out
mov
rol
sub
imul
lock
popf
xor
or
jmp
xor
dec
shl
or
repz
out
cmp
fwait
jecxz
sub
incb
sub
pop
push
dec
scas
push
shl
stc
cmp
pop
ljmp
or
xchg
out
les
lods
int3
sbb
fstps
movsl
xchg
xlat
push
lds
lret
outsb
sahf
ds
jbe
rcll
mov
dec
or
popa
push
add
scas
sub
sti
inc
cmp
add
out
jb
mov
jno
sub
push
cwtl
push
cmp
cmc
loope
fs
loopne
sub
and
push
or
inc
movsb
and
push
mov
xlat
mov
cli
fadd
mov
mov
sub
sub
cmovs
jb
cmp
out
daa
push
repz
mov
ljmp
fidivl
or
ficomps
scas
cld
daa
out
dec
lret
js
or
cli
pop
popf
mov
push
adc
repnz
orb
ljmp
push
icebp
cmp
lahf
jp
xchg
adc
dec
sub
enter
ret
in
fcompl
xchg
pop
aas
pop
adc
loop
cltd
aas
inc
xchg
mov
sbb
mov
cmp
pusha
rcrb
into
and
mov
adcb
sahf
pop
jae
adc
mov
jp
or
cmp
test
insl
enter
mov
xor
call
cwtl
sbb
push
lret
lods
shll
rol
mov
ret
mov
leave
das
ret
inc
ficompl
inc
aaa
loop
inc
sub
xchg
fwait
xchg
mov
pop
dec
adc
mov
shrl
stos
mov
pushf
lcall
out
movsl
sub
rolb
lods
negl
jle
adc
adc
and
clc
sbb
or
sbb
das
cltd
je
movsl
call
out
rcrl
pop
mov
jnp
mov
aas
repz
adc
test
cwtl
and
sbb
mov
push
inc
pop
xlat
mov
pop
adc
lahf
loopne,pn
add
pop
lret
insl
jmp
cmp
cwtl
int3
mov
push
pop
mov
rolb
xor
dec
and
into
mov
and
mov
push
xor
fidivl
cmp
cmp
inc
scas
fucomip
adc
lahf
out
cltd
stos
pop
mov
xchg
push
push
aaa
mov
mov
push
pop
inc
inc
mov
std
outsl
push
sahf
mov
inc
xlat
stc
out
lods
int3
push
iret
inc
std
add
cmp
dec
std
daa
xor
xor
out
mov
sbb
and
pop
adc
es
lahf
faddp
adc
jno
jbe
loopne
jae
es
stos
pop
or
push
inc
stc
in
mov
and
or
dec
cmp
pop
jbe
test
mov
lret
xor
mov
fbstp
jge
or
pushf
push
xor
sub
cmp
dec
out
mov
xor
and
cmc
mov
xchg
mov
push
push
out
sbb
xchg
ds
jmp
add
imul
mov
lahf
jbe
into
push
mov
push
icebp
cwtl
lock
iret
sbb
aam
call
sbb
cld
mov
jmp
xor
outsb
mov
enter
ret
ss
mov
lods
cmpsb
inc
div
mov
rorb
cwtl
lods
and
icebp
jno
fwait
sbb
xchg
mov
fdivr
imul
inc
pop
and
pop
ljmp
mov
testl
push
and
int
lock
mov
hlt
pop
lret
sbb
xor
inc
out
imul
push
cmp
add
movsb
or
push
cmp
test
xor
push
outsb
pop
in
or
push
cmp
xchg
push
add
push
icebp
loope
lock
adc
jp
movl
push
fisubs
lods
mov
push
mov
ljmp
add
call
xor
mov
test
cmpsl
or
mov
loope
or
ja
mov
add
push
dec
push
sub
andb
jb
adc
mov
rorl
push
in
je
mov
sub
lcall
dec
push
push
cmp
das
push
cmp
mov
mov
rcr
cs
inc
lret
dec
imul
xchg
js
and
push
clc
dec
add
mov
inc
dec
daa
repnz
mov
int
inc
arpl
push
dec
clc
and
inc
stos
and
daa
lcall
loopne
rorb
xchg
inc
and
pushf
push
add
out
inc
mov
xlat
je
popa
faddl
xor
int3
mov
push
jae
or
sub
orb
push
pop
sbb
cmp
rcll
mov
cmp
jg
enter
call
cmp
jecxz
cmpb
roll
adc
icebp
push
outsl
xchg
lock
iret
int3
sbb
pop
hlt
jmp
in
mov
pop
pop
mov
pop
std
mov
leave
sub
scas
fnstsw
sbb
jge
jnp
jo
xchg
dec
add
sbb
repz
out
aad
fstpt
outsb
cli
pusha
inc
sub
cmp
sbb
cmpl
mov
and
sbb
pop
push
jge
loop
sbb
add
and
leave
das
dec
movsb
mov
push
jg
push
or
fistl
popf
xchg
dec
jbe
bound
or
aam
dec
jae
orl
pop
hlt
icebp
add
xchg
add
insl
jae
mov
adc
inc
in
jb
repz
je
inc
pop
shl
test
aad
jmp
cwtl
push
mov
cmc
mov
pushf
clc
push
add
inc
mov
lret
jmp
inc
pop
mov
test
mov
movsb
outsl
pusha
cmc
cmp
dec
pop
leave
ret
jmp
outsb
cmp
push
push
cwtl
xchg
cmpsl
cltd
add
pushf
sub
mov
push
pop
fs
lock
mov
jo
negb
scas
and
push
cli
mov
popf
sbb
and
push
jle
popf
add
ret
ja
por
xor
in
in
shl
fcomps
loope
pop
dec
loope
push
inc
pop
adcb
mov
loop
ljmp
popf
cli
adc
and
dec
int
dec
add
mov
mov
push
add
jns
pop
sub
xchg
aaa
or
lret
jo
cmc
push
cltd
pop
in
xchg
fmuls
or
xchg
add
xor
pop
add
ja
jl
dec
in
loop
or
add
iret
cmp
cs
add
out
fcmovbe
xchg
jns
pop
adc
sub
pop
mov
push
fs
test
cmp
jbe
mov
sub
test
and
dec
out
cmpsl
fdivs
nop
pop
fwait
in
sub
and
out
data16
mov
inc
loope
scas
dec
push
ds
and
and
stos
into
add
mov
inc
mov
gs
mov
xchg
imul
inc
pop
jbe
cmp
xchg
das
movsb
es
add
cs
xchg
adc
pop
aaa
and
sbbb
aas
popa
jnp
mov
movsl
clc
inc
jecxz
sub
lea
push
cltd
insl
movsb
push
rcrb
jno
fidivrs
dec
bound
movsb
dec
lcall
loop
int
rcl
sti
xchg
cltd
mov
insb
pop
mov
push
push
outsl
pusha
mov
inc
cmp
mov
repz
repnz
pop
lods
jae
xor
cmp
out
sub
adc
mov
shrl
fldl
loope
cmp
sbb
shll
add
pop
push
sbb
pop
adc
std
stc
data16
jo
and
inc
aaa
lea
jle
clc
push
mulb
incl
xor
mov
add
lods
fstps
jg
mov
mov
cld
popf
das
popf
mov
mov
jge
xlat
lods
cld
inc
cmp
dec
std
push
dec
bound
xor
dec
mov
int
fcomps
repz
rolb
jns
adc
jne
outsb
dec
stos
clc
data16
mov
icebp
xchg
loope
cmp
movsb
mov
xlat
xchg
jno
pop
lret
ja
mov
and
inc
jl
cmp
xor
js
xor
ds
mov
mov
popa
repnz
addr16
inc
mov
bound
inc
enter
enter
std
mov
lret
sbb
out
inc
pop
addl
int
mov
popf
out
xchg
dec
insb
out
or
arpl
sbb
ja
repz
jne
les
dec
das
jne
lahf
out
adc
cwtl
push
imul
int3
xchg
push
loope
cmp
je
aas
divb
aaa
dec
subb
arpl
cmp
add
cmp
mov
push
movsl
ret
mov
pop
push
xor
mov
lds
fnstcw
dec
or
xchg
fwait
inc
inc
jecxz
push
mov
in
xlat
dec
rcll
cmp
ljmp
test
jmp
mov
inc
cld
enter
or
add
fsub
fnstsw
cmp
lret
aas
test
pop
mov
dec
pusha
lods
es
add
stos
xchg
daa
sbb
gs
or
jecxz
inc
or
into
jp
leave
into
rcl
pop
stos
int3
or
jo
mov
mov
leave
pushf
dec
inc
das
push
mov
mov
fnsave
jp
jno
hlt
rorb
cmp
ret
shlb
daa
or
test
xlat
or
pop
int
in
xor
jns
lcall
adc
pusha
pandn
fsubs
in
test
popa
inc
insl
stc
imul
mov
jne
lcall
dec
jae
pand
jnp
adc
movsb
ficoms
xor
ret
add
mov
inc
popf
mov
jno
pop
jno
sub
sbb
popa
jp
mov
ljmp
cltd
and
bound
iret
fnstsw
andb
aad
je
movsb
or
jle
sbb
mov
repnz
inc
pop
jl
test
mov
out
cmpsl
lds
add
mov
add
aad
test
movsb
inc
xor
jg
cmp
cli
pop
adc
lcall
mov
push
data16
cmpsb
mov
in
jmp
testb
xor
ja
jo
or
mov
inc
push
cld
mov
push
xchg
push
xchg
cld
sar
pop
insl
xor
subb
mov
fdivl
cmp
shll
push
fwait
push
xor
xchg
inc
mov
xchg
xor
icebp
xor
fwait
in
in
sub
lods
lahf
fwait
or
push
cwtl
sbb
jnp
cmp
sub
xlat
fdivs
ficoml
mov
lods
jmp
dec
test
fistpll
stos
dec
jae
xchg
mov
enter
cmp
push
xor
add
ds
xchg
in
call
repnz
xlat
popa
loop
mov
popf
dec
in
adc
lds
push
xchg
push
jmp
push
aad
cld
mov
mov
inc
sbb
and
filds
andl
mov
mov
lods
mov
test
jge
mov
iret
mov
test
mov
out
or
mov
cmp
lds
sbb
not
pop
hlt
rcrl
out
sub
pop
sub
insb
test
sub
test
jp
xor
cmpsl
aas
jmp
negl
hlt
je
enter
arpl
cmp
dec
imul
inc
and
xchg
clc
fwait
ret
jecxz
divl
fld
mov
push
es
add
ljmp
subb
cmpsb
mov
and
mov
lods
push
pop
mov
fbstp
sbb
cmp
js
out
pop
icebp
cmp
into
push
sti
mov
sbb
leave
jecxz
aas
or
out
cmp
in
int
ret
cwtl
adc
and
je
cmp
rol
in
addr16
rolb
and
rcll
dec
jns
popa
jecxz
loope
cmp
or
pop
pop
dec
fisttpll
pusha
dec
mov
xchg
test
sbb
adc
ret
shlb
aaa
xchg
xchg
inc
adcl
mov
lock
cmp
daa
stc
out
sbb
ret
sub
mov
mov
mov
call
jne
mov
push
mov
jle
fbld
xchg
rcrl
mov
jp
pop
lods
pop
fsubrl
cs
push
xchg
jbe
sbb
call
loop
movsl
dec
neg
xor
mov
adc
sbb
inc
aad
ds
dec
testl
in
aas
inc
jecxz
dec
cmc
aam
movsl
ret
ret
imul
mov
add
inc
xchg
dec
imul
in
xor
cmpsl
adc
es
aam
push
sahf
lret
fnstenv
popf
cmp
cmc
in
sub
outsl
mov
xchg
inc
push
mov
cwtl
add
add
imul
mov
lcall
notl
xor
or
push
xchg
cmp
lahf
or
push
repz
sbb
mov
clc
and
adc
cs
insb
lds
lcall
call
xor
fdivrp
aad
xchg
add
or
push
and
cmc
or
arpl
jl
sbb
dec
or
jg
pop
rorl
rcll
and
call
xchg
mov
cmp
add
jnp
js
jge
sub
adc
sub
dec
imul
arpl
sbb
cmpsb
cmp
popf
push
fadd
dec
jle
outsl
lds
xchg
mov
pop
cs
push
ss
stos
xor
xor
jge
adc
fsubr
imul
mov
adc
mov
mov
enter
orl
push
negb
stos
or
push
push
dec
fdivs
xchg
les
test
jmp
sub
adc
cmp
cs
repnz
popf
jno
jnp
div
xor
mov
push
ret
gs
shrl
stos
jl
and
inc
inc
or
addr16
test
mov
and
int3
add
xor
sti
mov
jmp
jl
mov
xor
fists
sbb
movsl
jnp
insl
mov
ror
jae
data16
shl
jmp
mov
fcmovb
pusha
lret
mov
dec
xchg
addb
imul
push
mov
push
and
push
stos
adc
dec
shlb
xchg
scas
insb
inc
pop
pop
xor
add
inc
in
sub
lods
or
jo
xchg
jmp
adcb
insb
jnp
inc
adc
sub
inc
pop
out
pusha
cmp
fs
shll
adcb
mov
data16
add
adc
fldcw
sbb
pmaxub
and
and
add
out
push
out
push
int
sub
xor
cmc
mov
xor
daa
mov
cmp
and
inc
xchg
and
inc
sbb
cmp
ss
mov
sub
adc
push
sub
cmp
fcom
cld
adc
sbb
xchg
cmp
xor
xchg
rol
add
xor
pusha
add
mulb
push
ret
insb
pop
mov
iret
cmpsl
stos
lds
jmp
nop
cmpsw
dec
in
xchg
mov
jno
mov
mov
jp
mov
jmp
push
testb
xor
jmp
mov
iret
dec
pushf
jne
sub
add
test
sti
test
sbb
outsl
sub
int
ss
ljmp
fstpl
mov
imul
in
js
cmp
mov
and
mov
enter
add
movsl
xor
leave
jl
xlat
stos
jmp
repnz
outsb
pop
jae
ljmp
mov
dec
cltd
pop
pop
arpl
xchg
cmp
push
mov
gs
xor
cmp
cmp
lods
gs
popf
fadds
mulb
lods
mov
push
sbb
sqrtps
mov
inc
mov
jb
or
popa
mov
add
jmp
je
ja
jmp
mov
fldt
test
xchg
lahf
inc
adc
xchg
fistl
xchg
into
xor
mov
sti
and
mov
pop
pop
outsl
in
push
mov
cmpl
xlat
fs
mov
pusha
adc
std
xor
cmp
les
in
lcall
xchg
popl
adc
sbb
test
dec
or
mov
iret
mov
mov
xchg
lcall
jo
cmc
mov
iret
test
pop
push
cmp
ret
mulb
int
icebp
sbb
popa
je
and
mov
ss
mov
jb
cmp
cmp
mov
je
hlt
lret
fcmovb
bound
xor
aad
inc
fdivrs
xchg
ljmp
lock
and
mov
jns
pop
xlat
outsl
jns
lea
loopne
mov
dec
xor
jne
test
fldenv
sbb
fldl
inc
sub
aad
jnp
sahf
aad
pop
dec
rcrl
add
fcmovnbe
jns
lods
repnz
xor
idivl
mov
sbb
ret
mov
mov
mov
stc
sbb
subl
sbb
movsb
cmp
add
pop
inc
and
fistpll
adcb
out
lods
adc
ret
sbb
rcr
xchg
mov
dec
aas
cmp
outsl
pop
mov
push
cmp
mov
add
mov
mov
fimull
or
sub
inc
sbb
not
dec
mov
pushf
push
push
add
push
enter
push
adc
movsl
jge
or
mov
cmp
movsb
scas
xchg
cmpb
sub
movsb
sahf
pop
fmul
xor
mov
mov
pusha
in
xchg
movsl
push
mov
ret
int
fbstp
mov
cmp
cwtl
and
setle
jbe
mov
jge
jl
jbe
jmp
dec
stos
int3
mov
aam
push
dec
jmp
jmp
aaa
push
and
cld
push
sarl
cmp
xchg
mov
lret
out
push
or
bound
sbb
ds
adc
incl
mov
js
xor
leave
ret
repnz
dec
xor
adc
and
jl
ficoml
push
and
pushf
mov
mov
ret
subl
xorb
mov
push
loopne
test
xor
mov
mov
lods
lods
pusha
push
jg
loop
xchg
jne
inc
outsb
insb
das
dec
pusha
mov
sbb
sub
icebp
mov
inc
cmpsb
outsb
daa
sub
jne
jae
out
ret
xchg
xor
cmp
sub
sub
push
ss
les
and
ds
xchg
or
adc
outsl
inc
cmc
mov
gs
out
lods
jg
cmp
jnp
pop
jp
sti
dec
enter
int3
jg
cmpsb
int3
sbb
jne
sbb
imul
xor
inc
mov
xchg
dec
cmp
pop
jle
add
mov
pop
xchg
flds
lods
rep
add
cmp
mov
jno
pop
xor
sti
or
cmpsl
xchg
aad
mov
add
lahf
pop
pop
in
inc
jb
mov
jo
sub
roll
in
jo
add
xchg
es
popa
sbb
xchg
and
movsl
cwtl
xchg
pop
testb
js
xchg
jb
inc
nop
aad
lcall
mov
ds
ss
fsts
bound
filds
xor
inc
insb
xchg
adc
mov
call
sbb
cmp
mov
adc
mov
push
xor
int3
pop
and
shll
cmp
jg
pusha
jp
addl
stos
fs
and
mov
out
cmpsl
push
inc
lods
ja
mov
iret
pop
xchg
lar
and
pop
mov
and
or
xor
cmp
mov
rolb
xor
ljmp
jecxz
or
inc
cmpsl
sbb
rcll
call
arpl
out
mov
int3
mulb
and
xlat
int3
or
xchg
push
out
rorb
and
push
xchg
jb
push
mov
mov
clc
push
or
cmp
cmp
mov
and
mov
sbb
mov
mov
outsb
xor
cmp
mov
xchg
fsubrl
ds
int3
push
mov
jl
in
adc
cltd
aam
ljmp
jecxz
xor
mov
sbbb
pop
adc
lock
jne
push
test
add
popf
mov
xchg
and
sti
pop
popa
push
in
test
lock
sub
adc
cld
daa
push
in
ror
push
mov
aam
iret
in
shll
pop
scas
lcall
push
scas
scas
lret
stos
cli
mov
dec
pop
mov
arpl
or
mov
insb
pop
int
movl
sub
inc
pop
xchg
into
icebp
in
pop
cmc
aas
push
sbb
lods
fcomp
cltd
xor
xchg
cmp
lods
jb
xor
es
shll
push
dec
push
hlt
jge
sub
push
fidivs
ljmp
cmpsl
mov
jbe
xchg
inc
fs
sti
dec
fcoms
mull
push
pop
jno
into
xlat
out
mov
push
inc
inc
cmp
lock
fdivp
add
jb
dec
push
and
xchg
pop
push
int
mov
out
or
add
adc
inc
or
ret
and
sbb
dec
cli
sub
jns
xchg
xchg
xchg
nop
or
xor
aaa
jne
mov
add
jl
clc
rcr
test
add
jno
fstps
sub
adc
sbbb
into
scas
clc
das
or
aad
or
sub
mov
inc
push
mov
int3
pushf
push
xchg
loop
jmp
dec
and
jnp
sub
inc
in
sbb
xor
jg
out
inc
test
sbb
pop
pop
adc
movsb
sbb
mov
xor
aaa
lock
repz
daa
jno
popf
fwait
and
ss
push
mov
std
xchg
xor
sbb
push
lea
out
sub
xchg
stc
popf
pop
xchg
push
lea
pop
inc
aam
add
dec
dec
sub
in
jae
push
cmp
push
icebp
sahf
push
xchg
cmc
and
enter
lahf
pop
xchg
cmpb
dec
xor
mov
mov
fcoml
out
stos
or
xchg
js
pop
scas
jmp
adc
mov
js
popl
pop
lds
mov
addr16
mov
int3
jno
mov
cmc
cmp
dec
popa
xchg
out
inc
adc
jae
jns
daa
inc
neg
cs
cli
shll
add
push
pop
jo
pushl
js
ds
sub
and
or
adc
xchg
jae
dec
ret
pop
fabs
mov
xchg
push
lods
hlt
push
mov
xor
or
fidivl
cmp
jo
cmp
mov
gs
fstpl
arpl
daa
cmp
mov
sub
or
mov
mov
push
sub
pop
add
lds
idivl
outsl
fimuls
jp
in
push
out
cltd
mov
mov
aad
pop
loope
mov
cmp
mov
test
ret
and
mov
inc
test
cld
fldl
jb
aas
pop
xor
jl
xchg
ja
pop
jbe
xor
test
inc
push
xchg
in
outsb
test
push
fisubrs
xor
ja
loope
mov
out
adc
pusha
pop
lret
add
cmp
xor
add
lahf
cmc
out
add
fisubrs
adc
xchg
lods
sbb
jge
int3
bound
lea
xchg
cmp
mov
push
int
decl
popa
fsts
dec
insb
sbb
jbe
clc
mov
mov
cmpb
gs
stc
in
cmpsl
or
in
adc
fwait
pop
ret
mov
sbb
outsb
mov
mov
ret
push
fistpll
or
inc
stc
jnp
xchg
outsb
out
lds
shlb
sbb
dec
inc
cmp
outsb
sbb
mov
add
cmc
add
pop
aas
pushl
insb
imul
adc
out
sbb
js
mov
scas
and
in
sahf
rcll
test
out
pop
aam
stos
sbb
xchg
pushf
int3
dec
pop
adc
xlat
out
pop
mov
daa
sub
and
pop
hlt
cmp
push
shll
sbb
and
insl
xor
lods
jge
hlt
jnp
mov
outsl
mov
push
push
enter
jno
sub
lds
loopne
mov
dec
xchg
cltd
test
dec
xchg
out
in
pop
daa
push
pusha
pop
aad
rclb
and
jl
xchg
mov
mov
jne
pop
ljmp
sub
inc
mul
xor
xchg
mov
adc
jbe
sub
mov
gs
arpl
xchg
push
sti
out
xor
stos
cmp
push
mov
cltd
push
and
adc
aad
or
rol
mov
push
sbb
std
out
ljmp
pop
push
pushf
jns
cmpsb
mov
mov
push
in
cmp
pinsrw
dec
mov
cmp
cld
inc
dec
testl
dec
push
push
bnd
mov
mov
mov
cmp
addr16
xchg
out
stc
nop
xchg
imul
sub
pop
and
movsb
jns
lods
pop
mov
dec
mov
xchg
push
fildll
sbb
pushf
js
insb
dec
call
push
pushf
xchg
cld
pop
popa
or
sbb
movsb
outsl
or
mov
sbb
jno
dec
fisubl
mov
xor
mov
std
sub
inc
into
addl
fldt
lret
loopne
push
mov
or
pop
ljmp
popa
pop
xor
inc
test
push
popa
lods
lcall
push
push
dec
in
es
fwait
cmp
fildll
int
pop
jno
cmp
push
xor
loop
cwtl
pop
iret
subb
add
or
lahf
push
sahf
sbb
jnp
xor
pop
pop
xchg
gs
inc
jg
cmpps
sahf
pop
pop
clc
add
je
std
pop
dec
sbb
cmpsl
sub
ljmp
hlt
pop
rclb
ret
push
cmc
adc
push
or
movsl
outsl
stos
test
and
add
jle
mov
test
notb
cs
sbb
sub
fsubrl
jl
push
mull
leave
and
jne
call
loope
sub
push
pusha
cmpsb
addb
mov
insl
mov
add
xchg
pop
inc
mov
es
sub
mov
ret
sbb
js
pop
mov
add
mov
dec
mov
inc
loope
add
shll
and
notl
sbb
test
cld
xchg
addb
push
lds
fnsave
jae
out
sub
bound
dec
mov
inc
scas
mov
insl
jecxz
dec
jmp
jle
out
pop
adc
jb
pop
xchg
fmull
jno
or
jns
cltd
imul
pop
fucomp
rcrl
add
pusha
movsl
push
pop
xchg
outsl
dec
mov
add
or
push
out
test
sbb
mov
out
and
test
mov
fsubrs
sbb
ds
sub
iret
cmp
popa
cmpsb
mov
mov
inc
imul
adc
jg
cmpsb
xchg
sub
lods
mov
pop
rclb
cs
mov
out
das
popa
fcom
test
mov
pop
mov
jo
cmp
lahf
or
jl
imul
je
arpl
add
pop
gs
out
or
test
push
mov
pushf
repz
sbb
add
xor
xor
test
push
inc
orb
push
xor
pop
mov
mov
mov
das
mov
mov
lea
jl
rdpmc
addl
inc
fnsave
test
or
jp
mov
pusha
add
pop
mov
push
mov
add
lods
inc
ljmp
push
add
mov
cli
in
daa
xlat
pusha
les
xor
and
lods
or
xchg
sub
adc
push
ds
movsl
fadds
imul
fdivrs
into
insl
or
jnp
fcoms
adc
lahf
clc
push
lcall
push
bound
push
lret
repz
lea
ret
mov
mov
aas
in
adc
in
out
pop
push
mov
sbb
test
xor
adc
xchg
push
push
xor
or
or
sub
lds
inc
in
fbstp
scas
cmp
sbb
int3
negl
mov
jae
jmp
sarl
push
ds
imul
mov
les
mov
jg
int
or
sub
mov
out
jns
adc
shl
int3
pop
jg
loope
shlb
xchg
rcrb
testl
int
ffree
add
pushf
add
and
xchg
mov
subl
mov
sbb
push
xor
inc
inc
cmp
adc
mov
sarb
gs
sbb
repz
pop
pop
cmp
fs
stc
sahf
or
into
adc
adc
cmp
sub
sbb
mov
movsl
mov
lret
xor
movsb
sbb
mov
pop
ret
pusha
fnstsw
mov
insb
cmpsl
das
out
test
das
decb
andl
popf
leave
in
leave
fidivrl
inc
and
push
insl
jnp
inc
or
xchg
xor
in
xchg
xor
sub
inc
mov
iret
dec
rclb
jmp
imul
add
cli
aam
in
out
aas
mov
jnp
or
push
das
xor
add
shll
rcr
pop
sbb
divl
and
fimull
sarb
fnsave
mov
sub
rorb
xor
outsl
inc
loop
outsl
pop
in
inc
dec
cmp
pushf
pop
xor
add
xchg
or
scas
adcl
mov
cs
orb
adc
les
ficoms
cli
fistl
test
ja
mov
sahf
pop
out
xor
inc
or
rorb
xchg
in
jmp
in
adc
int3
xor
mov
push
sarl
xchg
push
jnp
mov
iret
arpl
lret
test
push
pop
cltd
adc
sti
ds
sbb
hlt
cli
mov
add
scas
lea
pop
and
dec
mov
movsl
sti
fidivl
out
ss
outsb
adc
xor
repnz
sbb
insl
test
jb
cs
push
jae
xor
jp
dec
mov
pushf
testb
cmp
and
sbb
xchg
or
pushf
xchg
sbb
lahf
pop
lds
cld
test
popa
and
or
sbb
addl
mov
jae
outsb
sbb
pusha
cld
sti
loop
cmp
nop
jae
jbe
sbb
or
lcall
cld
enter
xchg
cmp
jo
fstpl
fisttpll
les
jae
in
test
insb
sub
gs
add
sbbl
in
cmpsb
xor
cmp
scas
sti
test
adc
mov
jecxz
dec
shlb
fcomps
push
xor
lahf
pop
jl
and
movsb
push
xchg
sti
out
movsb
sub
pop
pop
cmp
shll
enter
push
mov
inc
arpl
pop
js
sbb
sub
sbb
mov
scas
push
push
inc
xorl
jno
fdivrl
sub
pop
add
mov
push
pop
jnp
mov
mov
mov
push
cmpsl
push
mov
mov
ret
lods
xchg
pusha
mov
popa
out
fstpl
popa
push
out
repnz
push
push
add
in
enter
into
shrl
rorl
das
push
sbb
pop
xchg
in
mov
scas
int3
push
lret
mov
sub
loopne
mov
lret
shrb
cmp
into
es
ljmp
stos
inc
pop
fs
xlat
xchg
loope
inc
cmp
scas
orb
xchg
adc
cltd
pop
or
pshufw
call
push
fcmovnu
pop
adc
shlb
cs
mov
orl
imul
jg
push
pop
pop
ds
aas
imul
or
xchg
inc
dec
rclb
sbb
daa
mov
sbb
fimull
mov
and
lcall
fs
cld
iret
fld1
ret
cmpsb
and
loope
in
sub
sahf
dec
push
sub
sbb
inc
in
ljmp
clc
cmc
lea
xchg
mov
jge
fs
cld
mov
or
sbb
mov
addl
jno
mov
mov
pusha
fs
aad
rcrb
adc
repz
popf
mov
popa
mov
ljmp
cmpsl
cld
dec
nop
inc
lret
popw
xchg
imull
imul
clc
sbb
js
fbld
popa
cwtl
pop
jmp
xchg
dec
gs
and
fs
mov
xor
cmp
fistps
fs
xchg
push
cmpsb
in
add
xchg
jmp
cmp
or
outsb
mov
or
pop
mov
aam
sti
cli
aam
test
inc
popf
push
adcl
js
cmp
mov
sub
in
test
mov
fwait
movsl
lds
push
addr16
call
adc
nop
mov
arpl
dec
cmp
cmp
dec
xor
push
loop
and
enter
ss
js
mov
sbb
pop
mov
pop
imul
pushf
stc
movsb
sbb
sub
jle
test
cld
sub
hlt
es
push
xchg
lret
lds
jecxz
ja
lcall
fcoml
push
pop
add
cltd
sbb
add
inc
test
add
outsb
test
lods
jmp
adcb
mov
popf
pop
cmp
in
int3
pop
loope
add
aaa
and
mov
jb
js
and
gs
dec
xchg
mov
xchg
fildll
subb
push
xlat
add
sbb
int3
jecxz
mov
nop
add
dec
dec
ljmp
jle
mov
jne
bound
dec
mov
cmpsl
shl
ret
add
sti
jno
lcall
adc
add
scas
add
lods
jp
inc
adc
mov
dec
pop
je
js
out
jmp
push
xchg
stos
mov
imul
push
inc
inc
leave
lea
xchg
jle
shll
and
pop
push
sbb
mov
adc
adc
xchg
ror
sbb
int
mov
in
or
dec
scas
adc
cmp
xor
xchg
fldenv
es
push
imul
cmp
push
sarb
gs
sub
lret
stos
ficompl
dec
dec
adc
xor
lock
int
imul
insl
int
loop
or
test
mov
ds
add
shrl
add
and
xor
std
mov
cmpsl
test
push
ss
sub
or
mov
adcb
or
jp
cmpsl
in
xchg
inc
adc
loope
pusha
pushf
outsl
dec
push
and
jne
test
stc
stos
mov
and
ja
push
fcomps
sub
pop
aaa
mov
aas
movsb
imul
dec
dec
aaa
in
lcall
rclb
cltd
sbb
mov
pop
stos
mov
cli
lret
dec
inc
filds
jae
cmpsb
dec
sub
dec
ja
cwtl
add
jge
jg
push
push
jmpw
xor
gs
faddl
mov
jge
push
sarb
sarl
ljmp
pop
in
push
or
dec
push
loopne
sbb
in
adc
fdivr
mov
insb
dec
pusha
jl
mov
int3
aas
shll
push
xchg
pop
or
sub
mov
negl
popa
pop
sbb
stos
or
pusha
pusha
leave
jae
cmpsl
mov
orb
dec
mov
mov
dec
xchg
lds
add
dec
enter
fsts
mov
repz
ss
add
outsl
mov
mov
popa
mov
push
sub
mov
jp
test
shl
add
cmpsb
aad
jbe
adc
js
xchg
fistl
xor
fcoml
inc
outsb
call
dec
icebp
rclb
mov
cmp
lea
ret
rcl
mulb
push
fsubrs
add
aaa
movsb
idiv
pop
rcll
push
dec
adc
and
push
mov
add
jl
rcrb
jle
imul
lret
lcall
push
sbb
into
stos
jmp
cmp
stc
xchg
push
aam
jle
inc
adc
call
xor
lret
aad
mov
outsl
mov
out
lcall
fnstenv
push
shrb
sbb
mov
pop
mov
addr16
xor
add
add
daa
dec
push
popa
mov
inc
popf
test
arpl
sbb
sti
jecxz
sbb
xchg
push
loope
add
jno
lds
test
mov
push
in
movsb
and
fcoml
mov
ret
bound
mov
adc
lret
mov
cmp
inc
xchg
std
jo
add
ret
dec
lods
mov
dec
cmp
stc
lret
movsl
sysenter
sbb
jmp
xor
jmp
mov
mov
nop
dec
cmc
aaa
cmpb
push
lea
in
popa
add
cmpsb
in
mov
test
mov
pushf
xchg
fstpt
filds
xchg
notl
out
bsf
mov
push
ret
stos
std
inc
clc
fs
lret
sbb
inc
mov
fwait
fs
xchg
or
mov
cld
push
stos
xorl
jns
push
icebp
ja
rol
mov
xchg
mov
rcrb
into
add
loope
ds
bound
inc
fwait
arpl
push
pop
jge
call
add
in
jb
lret
rolb
xacquire
gs
xor
int
fxch
adc
addr16
scas
mov
rorl
aaa
in
lods
decl
popf
nop
aas
jbe
cli
data16
fisubrl
inc
in
test
pop
xchg
mov
sub
mov
inc
gs
sub
enter
stc
aas
roll
lds
aam
js
mov
mov
mov
std
sbb
xor
hlt
icebp
inc
mov
repz
mov
in
xor
jo
aaa
jne
jg
add
xlat
popf
je
movsl
and
or
push
js
bnd
jg
sbb
jns
loopne
mov
jne
dec
loopne
jmp
scas
jl
notl
cmp
and
movsb
lods
jp
sbb
adc
push
popa
pop
or
xor
xchg
and
pusha
pop
and
cmpsb
mov
jo
rcl
and
fsubrp
and
mov
mov
xor
mov
imul
idivb
jl
inc
sti
xchg
dec
aaa
aam
mov
clc
mov
sahf
lret
repz
ficoml
inc
pusha
sbb
dec
or
fidivrl
jmp
add
outsb
mov
cld
mov
mov
push
adc
mov
jge
call
faddp
sbb
sub
cs
ret
pop
not
pushf
test
dec
jns
int3
mov
pop
mov
insl
rcrb
lcall
rol
enter
adc
je
loope
dec
aam
loope
or
adc
adc
insl
dec
dec
pop
mov
scas
mov
adc
cld
ja
nop
ret
push
sarb
push
in
adc
cs
stos
insb
sub
loop
sub
ret
pop
sub
mov
add
mov
aam
pop
pmaddwd
mov
push
into
test
xchg
aam
cmp
lret
mov
lcall
push
adc
adc
es
sub
imul
adc
sub
sti
lea
ss
dec
fadds
lret
insb
sub
cmp
pop
ret
repnz
pop
push
sbb
or
fnstenv
ret
cmp
fmuls
je
add
xor
fxch
add
add
push
in
push
cwtl
les
mov
push
cmp
movq
and
lret
mov
pusha
leave
add
push
ficomps
mov
mov
int3
push
push
cmpsl
mov
in
pop
inc
fsubrl
sub
mov
fcoms
inc
nopl
dec
mov
push
icebp
jbe
push
mov
cmp
sar
lock
cld
sbb
in
scas
sbb
mov
lahf
mov
addr16
test
and
xor
xor
inc
insb
lret
lahf
sbb
xlat
push
lret
pop
inc
nop
and
pop
aas
add
pop
xor
dec
inc
mov
mov
push
mov
out
cmpsb
loopne
mov
dec
sub
mov
ja
fwait
or
in
addr16
jno
push
out
jb,pt
xchg
sub
loopne
inc
sbb
jmp
add
xor
fcoms
ss
adc
mov
arpl
jne
mov
in
ss
test
mov
inc
sub
movsl
adc
je
int
insl
mov
sub
xlat
mov
movsb
jge
pxor
adc
insl
out
clc
inc
popf
mov
repnz
ljmp
jns
mov
cli
xor
mov
je
or
mov
mov
enter
mov
pop
mov
repz
jb
hlt
pop
nop
shrb
push
push
add
dec
stc
mov
mov
test
xchg
and
cmc
mov
out
les
popa
jns
stos
out
mov
pop
lahf
dec
add
int3
addr16
inc
subb
loope
aad
aam
mov
mov
sbb
and
sbb
add
das
jg
push
aas
loopne
ljmp
rclb
pop
cmp
icebp
daa
mov
adc
rcrl
addl
dec
dec
test
mov
mov
lock
pushl
ljmp
push
test
dec
loopne
xor
add
mov
xor
sub
mov
out
mov
lret
cwtl
xlat
jmp
sbb
mov
jno
jbe
jo
mov
mov
cmp
xchg
cli
gs
xchg
and
fistps
xor
or
mov
pop
ret
xor
push
pop
aam
icebp
jecxz
icebp
movsb
in
inc
xor
in
mov
push
inc
cmc
or
or
dec
jecxz
lds
shl
push
xor
pop
xchg
fstpl
leave
das
jp
out
mov
into
sub
lods
fiadds
push
or
mov
jnp
out
frstor
add
mov
popf
int
xchg
and
data16
push
push
push
adc
jge
jno
push
mov
xor
ds
arpl
pusha
sbb
sub
loopne
add
sbb
cmp
ret
cmp
inc
les
sub
lahf
loope
sar
dec
jnp
dec
xchg
or
add
fidivrs
push
sub
cmpsl
dec
mov
jbe
aas
dec
or
out
testb
mov
pop
imul
or
cltd
xchg
inc
jmp
les
sbb
cmp
arpl
xchg
mov
ret
shl
adc
xor
lea
jp
cmc
xor
lcall
cmc
mov
inc
mov
imul
add
lret
pop
mov
sub
push
mov
test
and
add
push
cs
shr
dec
sbb
jp
sbb
je
movsb
pop
mov
movsl
jns
jle
push
test
push
sub
cwtl
aaa
dec
xor
sbb
inc
add
xchg
push
mov
push
sahf
dec
cltd
aad
icebp
lods
sbb
add
pop
xchg
outsb
jg
incb
push
mov
and
jl
sub
pop
mov
or
icebp
scas
shll
push
out
rcl
cld
mov
jns
jns
out
cltd
push
out
ljmp
fsubr
in
repz
stos
pop
ficoml
dec
in
xchg
scas
fs
je
xchg
push
add
jne
rep
rolb
rclb
push
xor
or
cmp
jnp
and
insl
fcoml
cmp
mov
addr16
rcrb
cwtl
cld
adc
lea
out
mov
sbb
ret
xor
out
je
and
cld
insb
jmp
stos
pop
dec
pop
insl
mov
dec
sub
fs
pop
pop
fsubs
fwait
adc
cmp
add
test
lea
imul
jge
cmpsb
mov
divb
lret
lods
fisttpll
xchg
adc
hlt
cmpsb
iret
add
rcr
cltd
ja
stc
inc
dec
sar
jb
inc
add
ret
fsts
or
frstor
mov
cmp
cmp
leave
adc
clc
out
loopne
cmp
fst
into
sbb
cltd
in
jb
add
jae
push
add
xor
inc
and
sbb
rcrb
xchg
bound
js
jle
mov
fmuls
cld
testl
mov
sub
call
out
adc
adc
mov
scas
inc
ja
call
out
inc
enter
adc
dec
adc
popf
mov
aaa
stos
cmpsl
fs
bound
and
data16
aam
mov
es
cmp
cs
dec
inc
pop
loopne
mov
adc
dec
or
mov
cmp
in
pop
jecxz
mov
mov
jp
ljmp
pop
scas
fdivrs
mov
jge
inc
mov
outsb
inc
je
mov
mov
imul
xchg
add
push
cwtl
lods
movsb
inc
int
setle
mov
mov
mov
or
xchg
std
xchg
xor
xor
ret
scas
adc
sbb
add
dec
push
mov
test
aaa
mov
popa
or
out
fsubrl
cmpsb
mov
iret
adc
rcl
icebp
in
aad
int3
mov
jno
mov
cli
lds
jmp
call
jo
xchg
orb
push
insb
lret
lret
mov
pop
jo
push
mov
adc
lcall
in
cwtl
lea
jne
clc
jp
sbb
push
adc
out
mov
pop
cwtl
pop
sub
cmc
cwtl
iret
testl
dec
adc
outsb
cmp
cmpl
jns
rcll
sti
out
hlt
xor
pushf
pop
sbb
and
xchg
and
mov
mov
mov
movsl
push
jl
mov
imul
push
jae
xchg
subl
not
pop
dec
roll
push
divb
stos
insl
shr
jmp
sbb
jecxz
pop
enter
push
jb
stos
cmp
jmp
inc
jp
mov
loopne
nop
stc
decb
sub
cmpsl
cmpsb
jge
ret
lock
and
insb
adc
mov
daa
mov
adc
int
cmc
sub
push
gs
adcl
test
mov
jge
inc
addr16
pop
imull
mov
mov
cltd
xchg
in
popa
jae
and
je
sbb
sbb
xor
xor
icebp
sub
imul
push
cmp
imul
ds
push
loopne
fxam
pushw
or
push
js
cwtl
ljmp
ds
and
outsl
ret
cmpb
push
es
mov
popf
add
add
xor
xchg
lcall
mov
xchg
out
fisubrs
jp
stos
imul
jne
sub
mov
push
scas
fwait
mov
stc
popa
hlt
sarb
gs
testl
shrb
adc
and
add
cltd
pop
mov
push
jno
enter
cmp
leave
cmp
fimuls
or
inc
mov
mov
filds
data16
lahf
cs
xchg
sbb
pop
ds
xor
test
jne
push
jne
jae
icebp
lcall
and
rcr
xchg
fucomp
je
dec
testl
ds
pop
into
addr16
pop
mov
mov
push
mov
cmp
fisubrs
dec
stos
pusha
xchg
jnp
cltd
jecxz
arpl
lahf
pushf
dec
ja
pop
dec
fsubrs
mov
jns
sbb
leave
outsb
cld
xchg
frstor
add
xor
int
dec
hlt
or
fldt
sbb
jnp
cmc
xor
cld
push
testl
pusha
jo
push
je
cmp
sbb
mov
fwait
mov
dec
jg
sete
mov
jmp
sub
repz
jle
das
mov
gs
cli
daa
mov
push
mov
pop
scas
push
gs
cmp
and
mov
lea
enter
mov
xchg
pusha
fwait
aad
sbb
shr
movsw
push
or
out
mov
jp
mov
movsl
into
cltd
and
and
xorl
pop
dec
sub
sub
rol
std
ret
pop
xchg
mov
or
popf
pop
test
subb
insl
mov
shll
divb
lock
add
pop
mov
ret
jle
in
or
xor
out
mov
out
jmp
dec
mov
sahf
xor
inc
mov
insl
xchg
sbb
and
cmpsb
pop
stc
add
dec
rorl
push
rorb
xlat
mov
loopne
or
mov
pushf
push
mov
jmp
pop
xchg
sbb
fdivr
lods
cmp
inc
xor
fidivs
ljmp
cs
and
or
jmp
cmp
jl
adc
inc
jg
or
or
notl
mov
imul
das
lods
das
sti
negb
cmp
cwtl
jmp
sub
cs
push
mov
inc
xchg
ret
in
adc
jp
xchg
out
add
dec
addb
push
or
out
push
pop
mov
mov
andb
cmp
jno
jg
adc
idiv
loop
jle
jbe
xor
mov
sar
mov
daa
pop
cmp
or
pop
xor
shlb
fisubrs
adc
sbbl
repz
xor
imul
mov
xchg
push
inc
mov
or
xchg
lock
and
jg
and
pop
jnp
xor
scas
outsl
stos
cmpsl
or
sub
mov
push
fdivrl
mov
fstpt
mov
xchg
gs
lahf
daa
sub
mov
jle
int3
inc
js
adc
fwait
lock
sbb
mov
sbb
je
mov
and
gs
add
jne
and
fnstsw
adc
sahf
xchg
jo
xor
aas
jmp
out
aas
cmp
push
cli
mov
add
inc
cltd
xchg
xchg
inc
push
mov
mov
imull
or
aad
pop
stc
inc
in
leave
jle
dec
mov
push
incl
popf
fistpll
in
rolb
mov
flds
bound
pushf
add
ds
pop
jb
jne
xor
xchg
jo
ljmp
dec
add
call
push
mov
enter
bound
stc
xchg
ljmp
push
sbb
les
bound
enter
push
pusha
adc
xor
outsl
leave
mov
setg
fsubr
pop
dec
xchg
dec
dec
xchg
dec
mov
dec
mov
xchg
ds
push
inc
stos
push
sbb
rol
cmp
adc
out
xor
std
add
mov
aad
inc
jle
lret
jmp
mov
sub
pop
pop
rclb
sar
and
xchg
sub
mov
enter
and
arpl
cmp
push
jb
xlat
push
ficoms
or
mov
scas
fwait
jge
repnz
sub
shlb
dec
and
sbb
sbb
cmc
mov
mov
add
jnp
push
std
xchg
and
movhps
iret
mov
add
dec
inc
shll
test
pop
xor
popa
mov
mov
mov
pop
int3
incl
gs
movb
into
imul
push
jecxz
sbb
sbb
cmpsl
mov
icebp
jns
lcall
out
adc
mov
ret
adc
mov
and
enter
pop
les
xor
inc
push
jg
icebp
ljmp
jl
sbb
xchg
sbb
fsubrl
int3
push
iret
shlb
ljmp
in
adc
outsb
sub
and
push
sub
mov
pop
inc
and
movsb
mov
aad
es
push
out
lret
dec
ja
ja
das
leave
subl
mov
push
jns
lret
call
or
mov
cld
and
popa
orl
fwait
sahf
jl
and
int3
cmp
mov
jno
shrb
push
cmp
shll
pop
cmp
rcr
into
xor
sub
fistpll
mov
fs
movsb
or
int3
adc
xor
pop
loope
and
dec
pusha
dec
mov
xchg
jle
daa
dec
stc
fwait
lcall
or
cltd
stc
adc
push
sti
xorb
or
cmc
sti
mov
pop
jp
adc
arpl
cmpsl
xchg
and
xchg
cmp
movb
xor
and
xor
inc
leave
jge
pop
enter
aas
jl
or
lods
jle
mov
lods
scas
int3
hlt
pop
xor
cmpsb
cmp
arpl
push
dec
xchg
je
dec
mov
xor
fisubrl
out
dec
pop
mov
jge
cmc
ret
cli
adc
js
in
push
sub
mov
mov
in
das
testb
cltd
push
inc
xor
cli
mov
test
jl
mov
jl
nop
xor
pop
cmp
sub
dec
imul
sub
pop
cmp
outsb
xchg
es
mov
or
mov
jbe
adc
aaa
aad
les
aaa
mov
insb
dec
or
xlat
sub
mov
andb
filds
inc
fwait
xor
cmp
jno
jge
shr
mov
ja
inc
pop
mov
pop
mov
into
push
aad
adc
in
mov
out
les
cmp
iret
test
add
xchg
jmp
int
cs
pop
xchg
dec
cmp
daa
jle
xchg
xor
aad
or
scas
push
add
test
mov
and
icebp
sbb
cmp
test
xchg
outsl
lret
js
jl
or
test
adc
ficoml
sbb
rcll
dec
pop
adc
push
pusha
nop
addr16
sti
xor
mov
cmp
mov
xchg
adc
jo
mov
fwait
jbe
xor
xor
mov
js
imul
fcomps
dec
mov
pop
in
popf
jmp
lea
fistpl
xorl
test
je
pop
aas
mov
cwtl
cmp
leave
inc
add
push
fnstsw
cmpsl
and
mov
out
mov
lods
cmp
push
jns
nop
cltd
adc
lret
jl
inc
enter
and
jne
jecxz
ret
into
pop
out
xor
cmp
mov
mov
dec
mov
cld
imulb
sub
push
js
ret
cmp
cmp
lods
or
cmpsl
daa
aad
lret
jnp
in
daa
sbb
fldcw
sbb
sub
dec
xor
cmp
xchg
add
jg
or
clc
add
push
pop
push
imul
outsl
push
jle
jg
adcl
mov
cmp
jecxz
add
call
fcomps
jecxz
cwtl
ss
cmc
jns
and
sbb
inc
js
adc
ret
push
mov
adc
loop
and
cmp
clc
out
imul
or
stos
add
mov
dec
orl
mov
out
sub
lahf
loop
mov
fs
lea
or
dec
nop
sub
sarb
daa
push
xchg
test
ds
pushf
es
movsb
ficomps
mov
mov
stc
test
inc
movsb
cwtl
subb
jbe
mov
jb
mov
or
push
ret
and
jge
push
xchg
inc
int3
fmul
cltd
and
xlat
cmp
stos
inc
jno
and
aad
and
mov
jae
inc
out
pop
or
sbb
xchg
sbbb
lret
sub
pushf
lahf
and
lret
add
hlt
mov
enter
addr16
push
into
fsubs
or
cmp
xchg
adc
mov
jmp
and
adc
jg
sarl
inc
adc
push
test
enter
cs
testb
stos
dec
xchg
lock
pop
scas
and
pop
mov
stc
les
cmovl
mov
mov
push
inc
pop
repnz
test
push
xchg
push
js
testb
lock
inc
jmp
xor
cmp
mov
add
and
xchg
outsb
push
pop
neg
imul
sbb
pop
or
sbb
mov
lea
roll
xchg
mov
mov
cli
lods
sbb
cltd
mov
dec
call
inc
add
outsl
push
lock
lcall
fstpl
lea
push
out
jno
jbe
xchg
push
test
addl
dec
in
pop
arpl
enter
mov
imul
rorl
clc
jae
inc
popa
nop
das
inc
mov
mov
mov
adc
ret
dec
repz
inc
jp
xor
xchg
xchg
nop
icebp
test
jg
mov
sbb
aad
xchg
mov
cmp
jbe
mov
inc
mov
lcall
icebp
pop
into
imul
aam
dec
dec
mov
xor
jne
mov
mov
ljmp
add
or
int3
cltd
cmp
mov
pop
mov
fstl
mov
mov
icebp
mov
push
pop
mov
pop
and
xchg
sti
pop
push
cmp
das
cmpl
lods
incb
mov
fs
jbe
jp
adc
lds
jle
sbb
sbb
fucomi
xchg
les
push
ss
mov
lret
js
pop
mov
gs
mov
xchg
xchg
jl
sarl
imul
in
jecxz
adcl
sbb
shlb
push
xchg
popa
cmp
cmc
outsb
pop
stc
dec
sbb
push
pop
ljmp
xchg
test
add
test
mov
rcrl
lods
mov
and
mov
add
dec
sahf
dec
sub
ljmp
and
push
lahf
jg
aaa
dec
sub
ss
xchg
xchg
imul
cli
es
lahf
aas
dec
push
inc
lods
pop
xchg
ja
shll
pop
loope
mov
push
ljmp
icebp
mov
decb
mov
pop
loopne
cltd
mov
adc
mov
and
lcall
xor
sub
pop
pusha
mov
jbe
sub
fdivs
or
sbb
push
cmp
popa
in
ds
sub
cwtl
push
add
push
mov
outsb
mov
nop
sbb
adc
cltd
dec
orb
lods
mov
scas
test
inc
lret
daa
int
add
sarl
mov
ret
neg
jae
xor
or
decb
adc
jbe
test
pop
mov
fiadds
aam
rcrb
sbb
ret
in
mov
iret
cmpl
out
stos
clc
ret
jo
pop
nop
jns
mov
add
push
in
pop
mov
repnz
push
movsb
mov
bndldx
lret
mov
mov
add
lret
adcl
or
dec
push
or
pop
notl
jg
mov
push
int
jg
repnz
pop
push
cli
pop
adc
stc
sahf
inc
in
pop
jae
cli
xor
mov
push
sti
sti
jp
pop
jne
jns
inc
int
xchg
mov
push
mov
iret
lods
int
lods
inc
sbb
js
fisubs
cmpsb
or
rcll
in
insb
xor
ret
icebp
lds
cmp
inc
sahf
arpl
call
xcrypt-cfb
cmpsl
mov
fstp
adc
sub
inc
or
clc
iret
cmp
iret
iret
inc
out
jle
fs
in
out
adc
out
push
sub
mov
cmp
jb
ja
or
mov
fildl
lods
bound
jns
adc
aas
jae
scas
mov
lcall
int3
jno
add
adcb
or
push
cmp
jg
int
out
lret
sbb
mov
lret
stos
inc
pop
or
fisubs
loope
mov
cmp
inc
insb
jns
or
pusha
push
push
test
leave
push
cli
aas
xlat
fists
push
loop
cmp
daa
sub
jl
aas
sub
inc
ljmp
arpl
hlt
fst
loope
out
clc
xor
lahf
movsl
push
movsb
std
and
pusha
rorl
mov
adc
loope
pop
cwtl
cld
out
push
mov
lock
mov
imul
add
pushf
xadd
jg
scas
pop
xor
push
inc
arpl
aas
dec
pop
aad
push
and
daa
lds
push
sbb
js
pop
cmp
pop
push
ljmp
push
inc
push
dec
in
mov
imul
xlat
push
mov
cs
jl
push
dec
xchg
sti
into
and
dec
gs
in
xor
mov
push
dec
outsl
pop
dec
test
divl
xchg
jne
movsb
pop
in
repz
adc
mov
mov
dec
and
fnstsw
pop
or
dec
ret
lret
push
pushf
sub
sbb
leave
fstp
push
pop
fistpl
test
std
insl
sub
movsb
pop
dec
jno
xchg
dec
lods
aaa
test
jne
fbstp
les
jnp
jl
inc
rcll
mov
pop
ret
ret
out
or
or
repnz
inc
and
pop
daa
sbb
xor
movl
mov
jb
scas
adc
or
push
cmp
out
popa
inc
sub
shr
outsl
rcr
mov
xchg
lahf
jl
sbb
mov
rcrl
inc
out
cli
out
dec
dec
dec
fs
testb
aas
sbb
sbb
leave
xchg
dec
pop
lock
push
pop
adc
jnp
xchg
rcl
cs
ljmp
jbe
mov
sub
faddl
pop
xchg
mov
pop
dec
mov
xor
add
scas
inc
sbb
lods
aas
movsb
mov
lock
or
scas
je
ss
fnstsw
sahf
pop
in
sbb
sub
jp
fmul
mov
ss
jmp
mov
mov
cwtl
out
jl
arpl
mov
hlt
add
inc
andb
adc
in
sahf
inc
sahf
xchg
adc
xchg
das
mov
sub
lcall
jge
data16
add
sarb
pop
in
xorps
add
mov
inc
xor
lock
lahf
arpl
popl
negl
add
sbb
sub
push
sbb
ficoms
mov
iret
xor
in
ja
imul
shrb
and
xor
mov
cmp
mov
or
rcl
lahf
test
fwait
int3
mov
and
adc
xor
xor
and
mov
xchg
push
sarl
add
push
nop
cs
push
loop
mov
fcmovnbe
mov
movsb
jle
pop
mov
adcb
dec
add
cmp
sub
pop
sub
jle
imul
out
jge
or
xchg
rorl
lahf
nop
and
dec
mov
add
fcompl
call
push
mov
loopne
ret
mov
sbb
pushf
icebp
xchg
push
add
sbbl
repnz
cmpsl
dec
cmc
repz
jne
ss
xor
stc
mov
cmp
stos
add
jg
push
pop
pop
sub
inc
mov
inc
leave
xchg
mov
xchg
sbb
ret
sbb
mov
imul
push
xor
mov
cmp
sbb
xchg
enter
dec
enter
or
push
mov
jb
mov
jmp
xlat
adc
je
and
hlt
sub
xor
jge
xchg
sti
inc
ja
jns
jmp
les
jns
dec
push
lea
dec
movsl
xor
adc
in
adc
mov
test
dec
sti
dec
pushf
or
sub
imulb
sub
fucom
icebp
lods
xlat
xor
andb
or
repz
push
out
das
mov
hlt
xchg
loope
sarb
mov
and
add
sub
mov
mov
pop
cwtl
sbb
cmpsb
xchg
fidivrl
push
xor
pop
popf
add
lea
loope
inc
movb
pop
xor
sub
mov
jne
outsl
sub
fcmovb
out
mov
mov
or
dec
mov
jb
inc
or
add
push
adc
repz
pop
jle
xchg
pop
arpl
mov
daa
pop
imul
push
iret
enter
xor
push
push
test
inc
sbb
mov
cmpsl
inc
das
and
test
fldcw
loop
test
add
lea
hlt
pop
add
sarl
cmpsl
adc
inc
sub
pop
inc
push
adc
repz
and
adc
test
xor
jb
jg
cld
xchg
test
mov
inc
pop
and
mov
sbb
loopne
mov
stc
push
push
dec
lea
xchg
mov
inc
gs
into
lea
loop
aad
leave
sbb
inc
cli
cmp
mov
enter
add
out
inc
test
dec
dec
gs
or
xchg
test
xchg
int
push
jns
lret
in
ficoml
mov
in
push
cltd
adc
std
data16
stos
pushf
mov
xor
or
cmp
sti
mov
pop
movsl
cmp
dec
shlb
mov
cld
jb
divl
gs
xor
mov
or
repnz
add
sbb
loopne
mov
mov
jne
daa
fistl
addr16
xchg
xor
push
add
popf
roll
bound
rclb
imul
aam
pop
pop
xor
loope
jg
adc
xchg
addl
pop
pop
lods
cwtl
cmpsb
inc
sbb
jns
cmp
mov
rcr
xchg
xchg
jno
pushf
dec
jbe
mov
loopne
push
and
aad
ret
and
inc
mov
iret
push
movsl
dec
ds
popl
nop
test
push
gs
and
std
sub
mulb
pop
jp
mov
ror
sub
sub
jmp
push
push
push
sub
sbb
xor
fildl
dec
aad
cmp
mov
sub
xchg
mov
in
mov
shrb
jnp
aas
sbb
aas
subb
ficomps
mov
fbstp
ds
ret
jge
sub
es
mov
add
sbb
nop
aad
cmp
mov
xchg
je
rcrl
inc
xchg
aad
push
jl
pop
jmp
das
fcmovu
into
pop
inc
mov
das
gs
jp
sub
cmp
dec
mov
bound
inc
cs
stos
test
mov
inc
outsl
lret
stos
pop
cli
fdivs
mov
fldt
ja
jae
mov
aad
mov
sbb
push
dec
roll
out
mov
xorb
adc
out
jno
out
sahf
mov
fdivl
call
out
adc
jg
icebp
xor
mov
loop
jb
int
adc
rclb
test
adc
push
and
add
push
xor
adc
cmc
jnp
xchg
imul
push
fst
popf
ffree
in
or
pop
ror
in
cs
push
push
mov
rorb
cmp
mov
sbb
jbe
inc
pop
xchg
mov
pop
inc
mov
cmp
sarl
scas
out
adc
xchg
movsb
popf
jg
cmpsb
jae
inc
jge
push
adc
cld
lods
lods
cmp
xor
std
fldt
pop
sbb
divb
or
rcrb
out
and
cmp
gs
inc
addr16
jbe
push
jmp
mov
outsb
js
pop
inc
adc
mov
cmp
jbe
adc
or
mov
add
xor
movsb
cld
shl
sub
push
je
bound
xor
lock
imul
loop
loopne
test
push
scas
lret
jae
daa
push
ja
mov
xor
inc
adc
sbb
inc
cmp
add
push
int
push
nop
ljmp
push
push
notb
pop
loope
int3
pop
ja
add
ss
or
cmovne
mov
adc
icebp
pop
push
jmp
sbb
pop
int3
jb
fists
ja
loope
js
enter
mov
cmpsb
jae
jp
insl
shrl
add
sbb
mov
loopne
add
or
jge
pop
adc
jp
xorb
cmc
out
pop
negl
mov
or
or
sbb
cmp
lahf
fisubrl
cmpsb
rcrb
cmc
sub
out
xchg
iret
testb
jo
sbb
cmp
jb
movsb
jno
gs
movsl
popa
adc
mov
cli
adcl
int3
out
negl
jno
jo
repnz
popf
data16
les
shl
imul
add
dec
jnp
sbb
out
xchg
jb
movsl
fsub
sbb
pop
sbb
mov
jmp
cmp
pop
pop
data16
inc
mov
mov
jmp
xor
nop
push
es
add
mov
sub
dec
pop
shll
or
mov
mov
jmp
dec
fdivs
imul
mov
sti
jle
pop
pushf
int
xor
jae
es
jo
cmp
cltd
stos
mov
sub
ds
push
inc
cmp
mov
movsb
stos
push
fwait
xchg
hlt
pop
jge
call
jg
std
cmp
movsb
mov
aam
les
inc
sub
mov
aad
push
mov
movl
sbb
notl
lock
fsub
mov
int3
and
sub
mov
outsb
jb
sbb
push
mov
or
leave
mov
xor
and
lea
push
fcmovne
mov
adc
mov
fs
cmp
sub
push
orl
repnz
orl
sbb
xor
jmp
xchg
outsb
cwtl
lea
in
daa
xor
fsubs
push
gs
pop
pop
aam
and
aas
sub
addr16
adc
shl
fidivrl
fcoms
sub
shll
lcall
cmp
sbb
repnz
in
popf
xchg
sbb
or
push
into
xchg
fsts
and
lret
divl
or
dec
cli
sbb
mov
ret
jg
dec
sti
lods
hlt
fwait
in
jns
imul
je
clc
clc
movsl
cmpl
pop
xor
mov
cltd
xchg
outsl
test
leave
pusha
or
inc
ss
xchg
das
sbb
mov
aam
jp
cs
sub
sahf
push
js
push
aam
and
icebp
std
mov
mov
push
or
nop
jge
and
stos
and
pop
and
loope
mov
cmp
fs
push
add
in
repnz
or
icebp
jge
cmp
inc
xor
mov
jbe
and
lcall
inc
iret
gs
push
adc
push
loopne
outsb
out
cwtl
pop
pop
or
flds
xchg
push
mov
in
les
in
push
lret
addl
mov
das
pusha
cmp
and
stos
repz
ret
xor
bnd
push
adc
xchg
in
leave
stos
push
hlt
xchg
push
jecxz
and
jl
fwait
adc
cmp
out
pop
icebp
insb
enter
lcall
je
and
in
clc
gs
and
or
mov
in
js
fildl
fnsave
mov
xchg
mov
or
lret
cli
sahf
cmpsb
aas
add
xlat
mov
pop
fmull
pushf
mov
xor
les
ljmp
jb
mov
shl
xchg
pop
rolb
mov
or
adc
xor
mov
lods
push
pushf
sbb
sub
dec
je
pusha
sahf
adc
imul
sbb
inc
mov
aam
loope
sti
pop
and
add
sub
mov
add
or
xchg
adc
and
leave
inc
sbb
mov
adc
push
addr16
inc
lahf
outsl
ja
popf
or
pop
xchg
mov
and
movsb
movsb
xchg
js
push
xchg
add
pushw
cmp
dec
mov
hlt
push
inc
sbb
in
daa
es
js
ficoml
mov
sub
aaa
adc
in
xor
testl
mov
rolb
xor
mov
pop
aaa
xor
mov
fldl
xor
push
push
xchg
sbb
mov
add
fidivl
sahf
pop
add
hlt
adc
clc
repz
cmp
jo
sbb
ljmp
or
xor
cltd
popf
add
jne
push
call
leave
sub
and
cmp
adc
cs
sarl
enter
xor
popf
adcb
cmp
fdivrl
imul
popa
or
enter
jg
and
shr
mov
mov
loopne
dec
sbb
fistpll
xchg
pop
mov
pavgb
pusha
stc
sbb
inc
sbb
pushf
int3
lret
fildl
push
adc
mov
sub
test
pop
pop
movsb
movsb
jbe
push
cmp
jae
cmp
jmp
insb
push
lea
adc
movsb
sbbl
push
jb
xchg
repz
in
jle
xor
idivb
or
orl
push
lret
test
or
pop
jge
dec
push
pop
add
lahf
aas
push
xor
iret
andb
adc
movsl
push
test
in
mov
cwtl
repnz
cmp
ds
aad
xor
mov
mov
dec
xchg
sbb
mov
test
or
dec
sbb
sbb
sub
fdivs
in
fnstenv
out
cmp
rcrb
in
jg
mov
sub
call
in
pop
mov
fdivrs
jl
xor
pop
push
insb
iret
aam
xlat
sub
fcoml
ja
mov
jp
sbb
je
or
jne
mov
and
mov
pop
into
je
movsl
or
xchg
fidivrl
cmpsl
pusha
adc
adcb
ret
stc
out
mov
push
je
jno
jns
pop
xchg
xchg
int
aam
jp
nop
rol
jne
mov
xor
mov
lods
fnstcw
jle
sbbb
inc
adc
es
lea
movsl
jb
shl
mov
js
jb
ret
pop
rolb
stos
test
and
jmp
sub
push
jnp
in
nop
cmp
pop
ljmp
stos
sbb
adc
mov
push
sub
stc
cmp
ljmp
mov
mov
mov
adc
pushf
push
jl
cltd
imul
add
mov
push
adc
in
aas
cltd
xchg
sbb
mov
sub
je
jo
xor
inc
lcall
and
mov
push
pop
clc
sbb
adc
insl
shrl
sbbl
xchg
adc
or
mov
fstps
mov
jns
push
fisubrs
rcrb
push
adc
push
cmc
faddl
adc
lahf
into
ret
cmp
and
fsubs
scas
xchg
movsl
pop
inc
mov
sub
es
cli
mov
scas
pop
dec
inc
push
jp
and
scas
push
adc
push
ss
ret
fidivrl
int3
push
out
les
fs
cmc
repnz
cmpsb
jle
inc
add
add
int3
into
lods
insl
movsl
es
stc
inc
dec
and
xlat
dec
xchg
mov
insb
fsubl
into
push
js
ficomps
sub
pop
sub
rcrl
fs
pop
imul
divb
aad
ja
test
iret
rclb
lcall
shlb
mov
idivl
push
mov
sti
out
rclb
movsb
mov
inc
or
add
push
pop
ss
fadd
ds
mov
adc
or
cld
sub
inc
shlb
mov
out
ret
jg
insl
clc
mov
fnsave
in
add
inc
seta
ror
xchg
sub
daa
pop
add
scas
rcrl
scas
pop
inc
mov
fstpt
std
pop
int
jl
hlt
push
mov
and
in
jl
popa
test
xor
insb
mov
js
inc
jecxz
xchg
insb
dec
aad
daa
fadds
fidivrs
pop
jnp
xchg
jmp
into
adc
cmc
push
or
int3
pop
xchg
int3
push
pushf
mov
pop
push
jl
pop
adc
test
test
cmc
jge
inc
test
cld
or
dec
cld
mul
push
and
mov
icebp
std
sahf
test
imul
stos
insb
lcall
jne
mov
xchg
mov
xor
lret
fnstenv
push
jb
stos
lods
add
out
xchg
in
xor
andb
push
jnp
sbb
movsl
xor
ljmp
int3
test
ds
pop
mov
add
mov
push
pop
jp
std
roll
shrl
inc
xchg
cmp
pop
cld
stos
ljmp
jp
jbe
jp
dec
push
and
mov
pop
stos
stos
jbe
mov
and
xchg
mov
lods
add
push
lods
mov
fidivrs
jae
lret
dec
aad
push
push
inc
imul
leave
and
inc
rclb
add
ja
loopne
ds
pop
cli
add
inc
cmp
mov
ret
outsb
xchg
jecxz
je
adc
adc
popf
mov
adc
cmpsb
repz
sbb
xchg
fs
mov
jo
sbb
xor
ja
ret
jae
dec
stos
iret
pop
push
lahf
iret
daa
hlt
xor
cmc
ds
fildl
dec
pop
ds
in
scas
jno
cmp
xchg
or
jl
pop
cltd
mov
xor
xorb
and
xchg
das
in
xor
movsb
adc
addl
ds
fsts
adc
jne
mov
repnz
int
out
cmp
nop
aas
cmp
subl
mov
push
cmp
mov
adc
jp
push
cwtl
lea
andb
and
pop
lods
push
cmp
mov
cld
popf
call
in
out
xchg
push
push
mov
dec
sbb
lock
xchg
cmp
push
mov
push
xchg
rcrl
or
xchg
mov
jb
aas
push
loop
cmp
repnz
mov
or
hlt
out
jb
clc
mov
or
lock
negb
inc
push
push
lret
outsl
icebp
stos
push
cmp
push
mov
test
dec
lahf
in
incb
stos
out
sbb
rep
push
enter
jno
mov
mov
mov
in
imul
outsl
xor
xchg
inc
cli
call
xchg
xchg
sti
cmpsb
lret
insb
fcompl
cmpsl
call
js
pop
enter
xor
lcall
sti
jb
lods
and
test
rcrl
mov
jbe
arpl
dec
xchg
lret
add
cmp
push
mov
inc
inc
fnsave
aaa
xor
mov
push
ja
movsl
inc
das
mov
pop
cmp
xor
jmp
mov
adc
push
add
xor
dec
fs
cmp
inc
jno
out
stos
xor
mov
faddl
cmp
pop
sub
mov
pop
cmpsb
push
jbe
add
or
dec
jnp
out
mov
sbb
lahf
pop
xchg
and
dec
adc
xchg
into
lret
es
and
jo
hlt
loop
mov
gs
cmp
dec
imul
test
orb
lahf
sub
push
into
movsb
in
sub
jnp
jecxz
pop
outsb
imul
inc
fucomip
imul
jb
xchg
mov
jl
insl
icebp
push
mov
adc
dec
inc
inc
adc
add
sub
jb
or
sarb
pop
and
in
enter
out
and
mov
xor
enter
out
shrl
in
and
test
in
hlt
jae
fmull
loop
rcrb
push
movzwl
or
sbb
repnz
test
inc
add
sbb
jge
push
push
add
ja
push
loope
mov
jle
adc
xchg
mov
mov
inc
mov
push
pop
cmc
inc
dec
int
pop
jne
and
inc
bound
cmp
xchg
loop
repnz
loope
aad
aam
dec
xchg
sub
lea
loope
imul
aad
lock
mov
pop
jb
cmp
inc
and
mov
add
shll
dec
cmp
ret
inc
cld
pop
push
popf
inc
dec
rclb
enter
fstpl
mov
dec
insl
mov
insl
cli
and
hlt
adc
test
and
push
in
push
push
push
adc
pop
fildll
and
mov
lcall
out
or
cmp
sbb
cmp
sbb
sub
mov
lds
pop
pop
popa
mov
pop
dec
ds
clc
je
jns
or
daa
sahf
and
add
xchg
and
mov
das
or
faddl
cmp
outsl
jle
aas
jmp
inc
lret
dec
stos
or
or
loop
jecxz
push
sbb
push
jnp
outsb
aam
loope
out
xor
sub
ret
dec
xchg
int3
arpl
cli
subps
cmp
shl
shrl
movsb
mov
or
jecxz
fstps
push
test
cmp
imul
xchg
pop
jne
adc
add
sub
mov
js
lret
repz
aad
loopne
nop
jmp
imulb
mov
rolb
fadds
cmp
xor
inc
into
jns
jnp
push
loopne
dec
add
icebp
and
mov
cmp
cmp
mov
or
mov
mov
in
addr16
test
push
mov
add
std
lea
hlt
jg
dec
xor
std
pop
mov
mov
jp
push
xor
pop
adc
or
movsl
mov
and
movsb
dec
mov
jmp
inc
mov
test
mov
lods
sub
xor
icebp
push
sub
push
shrl
dec
xchg
add
mov
mov
mov
cli
fnstsw
jecxz
leave
xor
xchg
fistl
sub
loop
dec
ret
jge
pop
cmpsl
push
inc
jle
push
scas
adc
mov
push
fbstp
dec
scas
push
rol
out
pop
push
xchg
jne
int
jle
add
fwait
inc
mov
sbb
push
or
outsb
fidivrs
push
xor
imul
cltd
in
push
mov
add
aam
in
out
out
into
mov
mov
xchg
repnz
ljmp
int3
dec
lret
inc
sbb
loop
mov
and
stos
push
or
sbb
test
adcl
mov
aas
into
mov
jg
mov
push
inc
cmovno
and
ljmp
jmp
roll
les
mov
repz
xchg
fcmovne
int3
or
inc
stos
mov
cmp
xchg
cmp
mov
xchg
dec
dec
rclb
sti
jno
cltd
xchg
insb
enter
fisttps
rol
xor
jb
jo
mov
xor
arpl
mov
cmpsb
shrb
out
and
ja
clc
jno
dec
inc
or
loopne
fstps
adc
jae
cs
inc
pop
or
mov
mov
adc
imul
xchg
inc
adc
jbe
xchg
pop
rorb
outsl
adc
cmp
push
adc
out
pop
enter
mov
push
stc
xchg
aaa
dec
ljmp
dec
push
mov
cltd
jno
out
roll
and
cltd
pusha
adc
scas
and
mov
push
or
jbe
inc
or
dec
pop
push
cmpsl
or
loope
aad
pop
push
cmp
stos
sub
push
jp
jnp
cmpsl
push
add
mov
loopne
imul
xchg
xlat
sbb
lds
test
out
cld
lods
cmp
ret
xchg
cwtl
push
loope
cltd
dec
jle
cld
mov
inc
jbe
push
out
sbb
je
out
repz
dec
cld
push
cmp
lret
push
ret
int
lret
fstl
xchg
fnstsw
pop
xor
lret
sub
mov
jno
and
fmull
mov
arpl
pop
inc
mov
dec
sub
and
stos
data16
cwtl
mov
cmp
jmp
nop
pop
cld
jle
jecxz
jmp
add
stc
ror
mov
ret
in
xchg
sahf
mov
imul
add
add
inc
rclb
mov
aas
mov
and
stos
and
adc
mov
cltd
mov
out
call
cmpsl
inc
dec
lock
jp
sbb
xchg
imul
push
xorl
sbb
lret
lds
or
je
cwtl
dec
inc
je
push
loope
imul
lds
aam
in
push
jp
cltd
sarl
int3
lret
out
fucomi
mov
lds
shl
xor
lret
mov
jb
adc
dec
ja
mov
mov
sbb
ljmp
jp
lahf
cltd
mov
in
test
push
mov
and
test
lea
dec
adcl
ja
mov
mov
mov
add
das
mov
stos
inc
repnz
sub
fdiv
adc
cmp
xchg
test
jmp
test
jno
inc
or
mov
add
insl
mov
mov
stos
ljmp
add
pop
sbb
lcall
roll
lock
fmull
inc
lea
push
imul
pop
lods
loop
lahf
sub
cs
cmp
jne
cltd
xchg
out
lcall
fcomi
iret
push
inc
je
cltd
ja
xor
jmp
cmp
std
and
pusha
push
dec
mov
aam
jmp
xlat
push
mov
out
jle
fsts
fnsave
sub
sub
mov
pop
mov
stos
push
stos
and
jmp
ss
xchg
dec
in
xor
mov
push
inc
out
lahf
xchg
push
push
lock
outsb
bound
cltd
push
mov
adc
xchg
in
push
pop
dec
lock
pop
mov
push
test
pop
mov
adc
dec
xor
sbb
mov
outsb
xchg
dec
lods
movsb
in
into
cmp
pop
push
sbbl
stos
fs
push
cmc
add
mov
pop
mov
pushf
add
das
negl
jmp
or
mov
fistl
in
cmp
push
call
lcall
mov
enter
je
cmpsb
rcl
sub
xor
mov
das
mov
inc
test
and
lahf
adc
repnz
hlt
lods
cmp
mov
repnz
or
mov
repnz
pop
pop
fnstsw
xor
in
xchg
inc
enter
pop
or
out
bound
xor
push
mov
clc
or
cmp
sbb
enter
xor
imul
jbe
dec
hlt
or
add
push
jmpw
dec
push
add
and
mov
scas
jno
mov
mov
mov
mov
pop
mov
stos
lods
push
dec
in
fs
popa
mov
or
cmp
jge
or
nop
leave
scas
andb
stos
mov
push
das
dec
dec
jnp
push
mov
insl
push
leave
adc
hlt
outsb
ret
mov
lahf
mov
mov
push
inc
sbb
lods
jne
cmp
push
popf
mov
mov
inc
mov
movsl
pushw
sbb
imul
mov
mov
movsl
mov
xor
subb
mov
cmp
adc
shlb
iret
pushf
xchg
mov
into
jl
mov
xchg
push
inc
and
not
cmp
and
adc
fwait
ds
nop
jb
mov
cmp
inc
arpl
loopne
outsb
jne
out
test
and
adc
mov
insl
movsb
loop
js
push
pop
sbb
push
pop
testl
push
or
insb
lods
lret
pop
sub
rolb
call
hlt
addr16
call
pop
xchg
sarb
mov
rolb
stc
inc
jmp
loop
subb
rol
xor
pop
fdiv
cli
mov
xchg
xor
lods
add
cld
sbb
ficoml
cwtl
cmpsl
stc
or
idivl
push
push
lock
aad
faddp
in
and
cltd
cli
pop
movsl
adc
outsb
imul
or
pop
addl
test
pop
stc
outsb
cli
or
mov
gs
hlt
fwait
subl
je
ss
fwait
in
dec
stos
lcall
imul
xchg
out
sti
or
test
sub
inc
xor
pop
stos
cmpb
or
pop
add
int3
leave
mov
or
sbb
sbb
push
rcrl
mov
cmc
mov
adc
repnz
sub
mov
xor
lods
stos
jl
dec
scas
xchg
cmc
out
mov
push
dec
sbb
mov
scas
push
sub
and
enter
insb
adc
ret
aas
pop
xlat
mov
inc
icebp
ret
hlt
out
mov
fstps
rclb
cld
clc
add
xchg
jno
or
inc
sbb
xor
sbb
rorb
int
pop
push
jp
adc
repnz
les
test
add
mov
fcmovu
adc
mov
add
jecxz
adc
in
push
xlat
sti
push
shll
cmp
mov
and
mov
mov
leave
mov
je
mov
push
rclb
dec
xchg
fsubs
xchg
loop
aam
rcll
cmp
jmp
sub
dec
test
hlt
gs
pop
inc
and
mov
cmp
push
and
je
push
imul
jmp
fisubs
in
es
lods
sub
or
xchg
pop
push
and
mov
ljmp
je
jno
dec
and
xchg
fadds
imul
fimuls
mov
or
and
jo
rorb
add
mov
popa
fcoms
sbb
aas
push
fnstsw
cmpl
clc
aad
mov
scas
hlt
fwait
bound
push
adc
mov
sbb
inc
mov
ret
push
fucomi
mov
cmp
xchg
fnsave
or
adc
mov
enter
call
lcall
jo
adc
xchg
fldenv
daa
mov
xchg
test
pop
inc
jb
mov
dec
cld
faddl
jle
aas
sar
or
push
jmp
push
jg
fcoms
out
nop
mov
mov
ret
ja
insb
cmpsb
xchg
movsl
sub
pop
xchg
enter
loope
adc
aad
mov
adc
and
push
in
fld
pop
jle
and
add
ret
out
std
mov
stos
push
or
adc
and
aas
cli
in
test
sub
xor
add
in
jp
jmp
ljmp
add
or
nop
hlt
fwait
test
sub
cmp
mov
notb
lcall
movsb
gs
lods
movsb
fistps
xchg
test
sbb
ja
hlt
inc
mov
mov
pop
fldenv
ret
mov
xor
mov
mov
jae
cmpsl
and
popa
mov
outsl
lahf
mov
stos
data16
lret
jg
dec
in
jmp
jne
addr16
inc
cs
push
mov
jo
cltd
movsb
sbb
mov
shrl
stos
sub
add
mov
cltd
js
push
pop
xchg
sbb
jae
mov
mov
orb
hlt
and
mov
mov
outsb
clc
sbb
lods
aaa
push
sarb
xchg
mov
jle
jnp
cld
push
jbe
idivl
out
mov
cmp
mov
das
xor
hlt
mov
std
inc
sbb
or
sti
repz
aas
xlat
aad
push
out
xor
dec
mov
xchg
jl
pop
pop
xor
les
fists
imul
xchg
movsb
ret
or
mov
shll
cmp
pop
lock
test
sub
xor
inc
fcmove
adc
sbb
ret
outsb
push
add
divb
out
and
outsl
out
xor
adc
iret
add
es
cli
faddl
adc
in
sub
cmp
push
cmp
and
cmpsb
or
xchg
cmpsb
and
sub
pop
imul
push
das
add
fiaddl
mov
xchg
jmp
or
xorb
icebp
mov
cli
adc
ljmp
sub
out
push
scas
icebp
mov
cmp
or
sbb
mov
mov
jo
mov
aad
std
fcompl
out
xor
loope
cli
popf
sbb
out
pop
std
mov
lods
mov
push
cmc
push
add
scas
ja
pop
movsb
bound
pop
aam
mov
outsl
cmpsb
ljmp
jne
shlb
jae
popa
mov
adc
dec
lods
std
mov
pusha
and
inc
ss
test
decb
push
and
sub
sahf
sub
cs
sete
pop
mov
andl
or
xor
add
inc
mov
sbb
mov
test
stos
xchg
cmp
test
rolb
js
fs
pop
nop
jmp
lods
push
inc
loope
loope
ds
loope
ljmp
pop
out
mov
int3
icebp
jmp
and
cmp
xchg
std
ret
xchg
jl
shr
into
adc
mov
mov
mov
fisubs
xchg
sub
shrb
and
fistl
in
pop
jnp
sti
dec
and
lret
aam
shlb
xor
sbb
mov
insl
ss
add
and
iret
cmp
add
loop
jns
push
jo
adc
cmpsl
push
cmp
jmp
outsl
pop
aaa
outsl
cmp
addr16
adc
xchg
mov
mov
and
hlt
popf
inc
jo
ss
pushf
gs
inc
pop
mov
cmp
pop
stos
ljmp
push
add
dec
icebp
push
push
fwait
xor
xchg
sbb
js,pn
data16
fsubl
popa
add
xor
jns
jg
adc
pop
testb
in
loop
fs
and
das
jno
loope
dec
inc
cmp
push
clc
ret
stos
in
cld
arpl
mov
stos
jl
int3
sub
jg
push
push
pop
loope
cli
loope
xchg
cmp
int
sbb
das
arpl
dec
call
movsl
xchg
repnz
aad
push
call
je
int
jbe
sbb
in
and
repz
inc
mov
mov
cmp
cmp
sbb
lea
enter
out
mov
xchg
loope
add
mov
push
ja
add
sbb
push
push
shll
cmc
and
or
ror
cmp
mov
test
lcall
mov
test
mov
lds
sub
mov
icebp
sub
dec
sbbl
ljmp
testb
outsl
add
cmc
mov
and
pop
flds
mov
into
sub
ljmp
lahf
mov
sub
mov
push
aad
cmp
popf
jg
cmpsb
sbb
xorl
xor
fcoml
push
ret
lahf
stc
clc
add
pop
xorb
xor
jne
push
push
or
jne
dec
ds
scas
mov
fst
notl
subb
adc
cmp
dec
mov
je
pop
inc
add
mov
lods
mov
inc
imul
xchg
fwait
shl
test
add
mov
and
xor
push
outsl
fldl
clc
push
xor
je
sub
nop
fdivrl
fcomps
rorl
jecxz
mov
xor
adc
dec
js
cmpsl
fldenv
test
insl
cwtl
push
add
insl
mov
stc
imul
jnp
lods
inc
sub
repnz
mov
aaa
add
das
sub
sahf
ficompl
add
jo
pop
add
push
mov
inc
shr
push
rclb
jns
mov
push
dec
inc
repnz
push
push
xor
fdivrl
pop
dec
fcoms
insl
pop
hlt
cmp
scas
jno
mov
inc
movsl
mov
mov
inc
aam
imul
in
push
mov
xchg
loope
lock
les
lods
dec
add
mov
mov
sbb
mov
lret
cmpsb
repz
scas
mov
or
mov
or
or
ljmp
inc
dec
xorl
mov
scas
dec
stos
push
xchg
in
inc
push
aaa
ss
mov
in
test
mov
jecxz
or
enter
sbb
shl
mov
mov
loopne
pop
test
sarl
insb
mov
adcl
subl
cmc
xor
test
adc
in
mov
inc
pop
addr16
test
adc
mov
int
sbbb
int3
mov
xchg
or
xchg
cwtl
mov
jmp
xchg
jbe
leave
xchg
icebp
xchg
mov
jle
iret
test
outsb
cmp
jg
or
pop
das
mov
push
pop
inc
lcall
sub
or
insl
mov
lea
lahf
cwtl
mov
mov
imul
out
inc
pop
mov
jle
sbb
lea
adc
aam
andb
and
les
pusha
push
aam
inc
jmp
dec
mov
or
outsl
xorb
xor
test
cmpsb
cltd
xchg
scas
push
dec
push
mov
test
xor
mov
ss
shl
les
popf
pop
push
xchg
shl
test
fisttpll
adc
out
or
dec
dec
xor
fisubrl
das
mov
addr16
dec
pop
push
mov
and
xor
mov
enter
cld
iret
and
movsl
mov
cmp
xor
dec
std
pop
out
mov
mov
nop
mov
cmc
xchg
inc
pop
call
adc
enter
fcoms
push
add
in
dec
shrb
ret
jmp
bound
movsl
and
cmp
add
arpl
pop
sub
data16
push
je
mov
inc
testb
stos
mov
fnstcw
stos
add
adc
mov
in
mov
mov
out
cld
sub
dec
cs
adc
sbb
dec
push
adc
sbb
sti
jp
add
xor
scas
add
rcl
lock
dec
test
loope
mov
or
test
mov
jmp
mov
mov
pushf
adc
jmp
out
inc
aaa
sbb
mov
and
sbbb
gs
push
adc
pushf
ja
or
jp
jae
inc
add
mulb
and
in
pusha
xor
outsl
jmp
mov
insb
cmp
insl
add
rorb
push
mov
mov
loop
inc
adc
or
ja
add
adc
pop
and
mov
lcall
addr16
inc
insb
scas
data16
test
pop
fsubrl
bnd
push
aas
in
mov
xchg
sub
and
xor
fs
add
jg
cmp
mov
sub
arpl
mov
sahf
inc
pop
in
arpl
jo
mov
lret
dec
ret
xchg
aaa
inc
repnz
movl
push
lret
add
out
dec
addr16
sub
paddsb
dec
sarb
jl
int3
inc
jno
sti
dec
cwtl
bound
sub
add
inc
jecxz
mov
test
mov
xchg
xor
push
fiadds
imul
int3
push
fcomps
xlat
lahf
add
idivb
pop
push
cwtl
out
and
fidivs
dec
jnp
loopne
cmp
orl
jl
in
repnz
imul
inc
xor
nop
or
aaa
pushf
fidivl
outsb
test
clc
test
fs
sar
push
jl
adc
mov
adc
bound
jae
mov
mov
pop
imul
ja
cld
mov
or
sarb
pop
dec
xchg
enter
mov
lea
aaa
scas
inc
ja
mov
nop
cmc
jl
clc
mov
mov
xor
sti
data16
cmpsb
sti
add
push
mov
fcoml
push
sbb
xor
push
pop
and
sarb
pop
cmp
xlat
sub
sbb
outsb
cli
das
outsl
cmp
ds
jb
inc
es
cltd
in
scas
es
imul
inc
stos
pop
aaa
in
leave
shr
sub
shll
out
add
ficoms
cmc
dec
mov
stos
jns
xor
cmp
inc
push
mov
cmp
ret
mov
fisttpll
int
test
cwtl
data16
dec
sahf
add
xchg
testl
mov
test
int
or
push
mov
fnstenv
sbb
push
cs
rcr
push
cmpsl
mov
jl
and
scas
dec
in
push
int
jb
xchg
sub
push
jae
or
xchg
adc
jne
push
jo
pop
cmpl
rorl
insl
mov
pop
or
das
or
fistpl
sub
xor
mov
add
pop
xchg
sub
ret
lds
jmp
or
pop
mov
ds
ret
cmp
das
push
in
inc
test
mov
jl
inc
xor
and
mov
jb
clc
inc
push
xchg
pop
jl
nop
gs
stc
inc
pop
cmpsb
jns
inc
popf
ds
js
mov
pop
xor
insl
jbe
mov
jbe
mov
jmp
push
enter
or
cwtl
repnz
or
arpl
xor
popf
mov
mov
rorl
test
test
out
cmpsb
sti
adc
int
je
ret
mov
push
sub
mov
loop
pop
push
mov
shl
fcoml
ret
ds
lods
into
inc
gs
arpl
idiv
sub
mulb
mov
xchg
pop
cmp
test
xchg
cmp
jno
jge
test
jecxz
dec
les
fwait
jl
xlat
sbb
jp
lock
pop
jnp
jle
call
aas
aad
xchg
in
rcll
dec
xor
clc
jae
sbb
loopne
andb
pushf
jo
movsl
xchg
mov
ljmp
out
repz
mov
aad
mov
push
pusha
xchg
loop
or
lock
insb
xchg
push
mov
pushf
int
inc
cmp
dec
push
test
sahf
ret
xchg
push
push
out
jne
test
push
aas
add
cmp
orl
push
xor
inc
mov
or
sub
add
js
and
or
out
pop
mov
pop
mov
sbb
cmp
jmp
mov
sbb
xor
xor
jo
ret
cmp
or
add
in
aad
mov
sbb
cmp
clc
in
jno
jns
lock
movsb
inc
xchg
mov
pop
mov
pop
stos
aas
inc
sub
cld
data16
mov
lds
dec
jne
lods
aad
aad
dec
mov
push
clc
and
adc
call
xor
mov
in
cs
push
and
popa
xchg
push
fisttps
mov
aaa
ljmp
jb
outsb
ffreep
lret
xchg
mov
and
jmp
lods
push
sbb
jno
stos
xor
sbb
mov
sahf
shl
sub
sbbl
adc
sub
iret
in
adc
popf
inc
lret
xchg
aam
xor
aad
lods
shr
out
out
andb
sbb
xor
repz
sarb
test
sub
cmp
out
addr16
mov
xchg
nop
mov
scas
call
xchg
and
jg
push
ret
test
es
jae
xchg
mov
adc
dec
pop
pop
mov
jge
mov
enter
adc
xchg
es
mov
std
and
loop
push
and
mov
lods
inc
jo
into
push
pop
insl
ljmp
mov
lret
leave
inc
xchg
and
lods
sbb
jb
nop
or
or
push
and
lock
call
xchg
lods
leave
xor
loopne
push
movsl
and
jnp
and
cmpsl
daa
pop
cmp
mov
mov
jecxz
mov
mov
dec
xor
pop
xor
popf
loopne
xchg
add
pushl
aas
in
jmp
pop
cmpsl
mull
notb
rclb
movsb
fmulp
push
lret
xchg
insb
shl
lods
cmp
xlat
ja
mov
rclb
fstps
dec
aad
stos
aaa
dec
mov
inc
jp
outsl
mov
jmp
shrd
fs
xorb
push
stc
adc
loope
aaa
arpl
xor
inc
or
cmc
iret
imul
jne
mov
hlt
add
jno
insl
out
rol
std
lods
jb
pop
pop
and
arpl
out
mov
insl
repz
pop
lahf
call
aaa
sbb
xchg
aam
xchg
in
call
stos
cli
lahf
dec
inc
xor
iret
jg
pusha
outsl
pop
cmpsb
jecxz
jo
or
dec
subb
dec
push
xchg
xchg
ss
jle
and
push
mov
jge
fistl
test
add
sarl
mov
cltd
ja
pop
push
jno
sbb
jno
cmpsb
out
mov
mov
std
xchg
adc
mov
ja
test
outsb
jnp
mov
pop
cmp
lcall
scas
adc
push
enter
xor
pop
fimuls
xorl
adc
fisubrl
cmp
aaa
jg
imul
ficomps
or
pop
inc
cmp
push
dec
adc
sbb
popa
lods
sbb
stos
incb
mov
and
cmp
cmp
jae
cmpb
adc
mov
pop
adc
jnp
bound
mov
push
xlat
dec
movl
mov
xor
ds
mov
movsl
js
push
adc
int
int3
test
adc
pop
jae
fs
dec
fistpl
mov
in
jl
fcoms
push
call
inc
pop
js
mov
jnp
mov
or
cmp
xchg
inc
push
inc
push
inc
stos
cmpb
and
shlb
aad
in
movq
inc
sbb
push
cmp
adc
cmp
mov
nop
cmpsb
dec
mov
ds
enter
stos
or
and
mov
sbb
icebp
mov
int3
jns
aas
xor
lock
dec
pop
je
jecxz
jp
in
mov
cltd
mov
fcoms
and
mov
inc
or
lods
pop
aam
je
outsl
mov
push
not
shlb
pop
dec
mov
pop
sti
inc
dec
shlb
popl
nopl
mov
and
fwait
popf
mov
xchg
and
dec
push
mov
pop
cld
stos
push
shlb
das
mov
or
xor
lock
sti
mov
xor
lods
mulb
loope
dec
sbb
popf
pop
std
mov
iret
sub
in
cmp
cmp
fstp
mov
mov
dec
or
dec
sbb
cmp
les
rcl
ss
ljmp
xchg
call
push
ja
push
insl
or
mov
loopne
cmc
shl
mov
out
or
fnstsw
arpl
fists
jge
inc
leave
jo
negl
and
xchg
sti
push
mov
shr
mov
push
leave
push
scas
aaa
cmpsb
lret
int
pop
in
movsb
ds
scas
ljmp
test
fisubrl
and
jecxz
popl
call
push
xchg
fisttpll
pop
cmc
xor
int
popa
xchg
inc
fsts
and
mov
aam
je
sbb
out
stc
imul
xor
lcall
xchg
stc
pushf
iret
fildll
push
insb
inc
in
jg
xor
mov
sub
mov
insl
ja
sti
popa
sub
dec
shr
push
sbb
xchg
repz
and
sarb
mov
jle
pusha
mov
cmp
lea
data16
popf
jg
nop
dec
pop
iret
in
in
xor
cmp
scas
enter
jb
btc
imul
repnz
jno
shrl
pop
adc
inc
xchg
dec
stos
mov
sti
cmpl
add
mov
adc
arpl
sbb
add
out
imul
jnp
inc
pop
sbb
adc
jo
adc
lret
in
iret
jbe
xchg
out
push
push
out
in
in
mov
adcb
dec
and
inc
xchg
jo
mov
mov
aas
addl
stos
mov
subb
notl
insl
mov
data16
movsb
add
xchg
jns
cmp
or
sub
and
movsb
nop
add
inc
out
cld
mov
jo
imul
fmulp
jp
xchg
dec
addr16
sub
push
mov
mov
cmp
pop
ss
repnz
fwait
jns
rolb
int
test
adcl
into
xchg
sbb
xchg
push
lods
jl
pop
xchg
push
rorb
enter
iret
xchg
add
fmuls
or
ljmp
out
sbb
out
mov
lcall
les
notl
and
cwtl
pusha
fstpt
test
jg
cmp
inc
in
and
call
leave
mov
adc
mov
cmp
mov
cmp
daa
in
mov
push
mov
clc
pusha
dec
outsl
rep
push
xchg
shll
pop
mov
sbb
fisubs
fmull
in
jmp
add
jno
mov
in
mov
jb
outsb
sub
sbbl
sbb
mov
jns
fidivrs
mov
leave
push
scas
lods
xchg
cmp
adc
or
or
mov
inc
xchg
pop
ret
sub
fdivs
jp
int3
pop
cmp
clc
enter
xor
frstor
xchg
testb
lods
addl
jne
stos
sub
jg
insl
sbb
or
inc
loop
jb
sbb
sbb
in
dec
cmp
sbb
in
cmc
fwait
stos
push
lods
cmpsl
shlb
inc
shll
mov
test
sub
and
mov
pop
mov
lcall
xchg
loopne
inc
mov
mov
sbb
push
sbb
add
jmp
jb
add
jno
mov
xchg
ret
addl
sub
loope
mov
mov
push
sbb
scas
jp
cmp
stos
xor
or
pop
iret
outsl
imul
repz
in
fcompl
ss
iret
hlt
cmp
mov
rcll
ret
icebp
ror
push
and
rorb
rcrl
out
push
imul
data16
icebp
iret
stos
adc
jae
lods
and
cmp
or
cli
push
inc
aaa
and
mov
sub
xor
dec
fistpll
add
xchg
add
sbb
pop
adc
dec
cmpsl
cmpsl
in
sub
push
fsts
pop
mov
xchg
stc
test
fistpll
addr16
lock
addr16
pop
add
inc
aam
inc
bnd
test
enter
xchg
inc
scas
jne
test
push
push
out
es
cwtl
xchg
xor
sahf
aam
xchg
add
in
jmp
xor
and
fwait
mov
pop
daa
sbb
loop
in
clc
jb
orb
movsb
pop
test
mov
pop
cmp
or
add
mov
aad
loope
scas
mov
sbb
sub
pop
jge
xlat
xchg
and
dec
repz
xchg
jae
mov
adc
or
adc
sbb
adcb
mov
pop
imul
pop
sub
stos
imul
push
xchg
fldl
movb
sub
jmp
dec
lea
mov
aad
cmp
push
in
xchg
xor
inc
movzbl
sbb
add
add
jae
sub
xor
repnz
js
cltd
push
cmp
pop
push
je
lods
mov
inc
sub
dec
rcl
pop
scas
pushf
xchg
sub
or
sbb
jp
repnz
fwait
jmp
add
cmp
bound
cmp
cwtl
xor
in
pop
loop
shll
sbb
jns
jne
pop
repz
mov
data16
lahf
lret
cmpsl
lcall
xchg
out
outsb
jnp
shlb
test
ds
adc
xor
pop
mov
cmc
dec
int3
cmp
push
cmpsl
pop
push
scas
and
aad
cmpsb
stos
nop
push
adc
js
mov
mov
pusha
add
rcrl
mov
adc
xchg
roll
and
movsb
xor
test
mov
and
ret
push
outsb
sub
aas
or
jl
jmp
pop
or
or
in
fcom
sub
imul
mov
xchg
sbb
repz
test
push
mov
inc
test
cmp
jb
mov
aam
imul
arpl
loop
pop
adc
mov
jbe
mov
dec
cmp
popa
fmul
pop
sarb
cltd
pop
mov
add
xorb
mov
or
in
divb
xchg
inc
xor
lock
mov
test
and
inc
hlt
cmpsb
mov
adc
cmpsb
loop
dec
dec
jo
movsb
jmp
mov
mov
pop
fldt
into
data16
sub
arpl
or
bswap
add
jnp
insl
add
push
je
push
xor
pop
and
jmp
pop
push
in
add
push
popa
imulb
pushf
or
jecxz
loopne
inc
fiaddl
mov
outsl
push
pop
xor
cltd
dec
add
jge
sbb
and
and
test
xor
xchg
xchg
inc
cmp
cmp
ficomps
test
jbe
jbe
or
imul
mov
out
or
mov
sub
dec
loope
pushf
push
pop
test
aas
movsl
ret
shrb
lods
pusha
nop
or
clc
rcr
xor
jmp
daa
stos
in
xor
xchg
jp
loopne
ficompl
sbb
ss
mov
lcall
push
jb
jmp
xchg
mov
dec
outsl
pop
cmc
or
cmp
adc
push
xor
dec
cmc
leave
inc
cmp
fbstp
mov
fdivrl
addr16
idivb
mov
and
ret
pushf
dec
js
adc
adc
lret
sub
mov
sbb
iret
lret
push
scas
pop
add
dec
mov
jne
stos
pop
pop
push
push
in
bound
gs
push
push
leave
lcall
xchg
imul
cwtl
jle
rclb
test
pop
mov
cmpsb
push
mov
mov
aaa
loop
insb
jecxz
mov
lods
pop
xor
out
orb
pop
loope
mov
lret
loopne
mul
pushf
subl
xchg
bound
inc
call
stos
scas
pop
testl
xchg
iret
pop
mov
lahf
jle
data16
fisubrs
lods
mov
das
jae
jb
pop
pop
rorl
pushf
push
xor
mov
idivb
add
pop
jg
xchg
ss
and
cmpsl
push
stos
into
lret
push
out
adc
push
adc
push
sub
and
popf
cld
and
popfw
jne
test
lret
cs
push
scas
out
xchg
push
cmp
dec
popf
addl
gs
cld
mov
pushf
gs
in
inc
loopne
test
push
fisubrl
and
jnp
inc
xchg
push
repz
mov
sti
or
ss
mov
sbb
lret
js
dec
int3
push
pop
insl
movsb
jg
pop
dec
or
or
mov
test
fldenv
cmp
fnstenv
mov
jnp
inc
sahf
inc
sub
ffree
clc
or
inc
xchg
std
stos
sbb
lahf
cmp
xor
ja
jnp
std
ret
loop
push
arpl
in
mov
mov
sbb
and
jae
mov
aad
ss
adc
shlb
cmp
lahf
cld
or
and
lcall
jg
out
cmp
sbb
push
dec
lret
xchg
sbb
dec
mov
mov
outsb
or
pop
lea
clc
cmp
pushl
pop
adc
push
sbb
push
data16
fldenv
lods
cmp
push
xor
jnp
pop
or
cwtl
fidivrl
das
shlb
sub
cmpsb
adc
mov
xor
std
jmp
dec
mov
call
dec
pop
push
push
inc
hlt
pop
or
in
insl
icebp
in
sahf
and
outsl
cmp
dec
mov
or
stos
xor
lods
adc
inc
imul
pop
push
pop
push
sbb
sahf
push
adc
xor
shrb
lret
jge
add
out
lret
mov
jecxz
mov
std
mov
daa
and
scas
cmp
push
stos
rcr
mulb
add
adc
fsubr
or
cmp
jle
inc
cli
sbb
lock
push
jmp
pop
scas
xchg
adc
call
insl
in
sbb
loop
dec
sarb
xchg
ss
sub
lods
jno
xorl
mov
mov
fxtract
push
cmc
int
das
loop
shrb
or
sub
pop
cmc
add
or
mov
mov
test
into
loop
mov
push
cmc
gs
jno
and
cmpsb
adc
cmp
push
orb
cmpsb
mov
and
xchg
jae
je
and
add
cmc
shrl
and
sahf
nop
stos
js
inc
movl
sub
xchg
cmpb
cmp
int3
mov
fisttpl
mov
sub
popf
outsl
out
scas
cld
push
data16
ret
adc
ja
mov
imul
push
out
les
repz
or
stos
adc
adcb
xchg
es
push
cs
pop
ljmp
in
in
rolb
cmp
dec
cmp
or
adc
and
js
mov
adc
hlt
jne
xchg
dec
mov
call
cltd
mov
loopne
jo
popf
out
add
movsl
mulb
rcr
jge
add
test
mov
dec
jae
lds
hlt
and
mov
pop
push
stos
pop
cmp
push
inc
xchg
inc
pop
ds
xchg
fnsave
out
mov
insb
test
mov
jge
mov
std
pop
xlat
push
mov
sbb
fldl
adc
jp
dec
cmp
push
inc
mov
push
out
fucom
xor
out
ja
cwtl
rcl
arpl
mov
call
mov
jnp
sbb
xchg
outsl
jnp
fs
sub
decl
fidivrs
pop
mov
aam
xchg
and
repnz
out
fildl
adc
cmpb
lahf
mov
push
in
test
je
pop
inc
rol
stos
and
inc
lods
in
cmp
pop
or
movsl
outsl
or
pushf
xlat
xchg
in
and
fadds
dec
adc
cmp
adc
pshufw
andb
cmp
enter
test
loope
jmp
mov
add
loopne
pushf
loope
das
das
mov
ja
push
addb
dec
xchg
push
inc
sbb
mov
dec
ret
adc
mov
nop
xchg
or
push
es
aam
inc
sbb
xchg
mov
inc
or
lret
ficompl
lds
cmp
loop
fsubrl
lahf
sub
int
andb
mov
stc
jle
out
xchg
negl
and
into
pop
and
push
sbb
mov
je
mov
xor
nop
pop
push
mov
and
addb
in
mov
les
pop
sbb
les
mov
lahf
adc
fisubl
pop
and
xchg
hlt
sbb
xchg
repz
loopne
dec
scas
in
cli
xchg
and
movsb
sbb
pop
jne
cs
mov
jne
dec
jmp
sub
inc
push
mov
lcall
pop
repz
mov
push
pandn
jns
push
cmc
test
dec
into
movsb
sbb
test
test
mov
or
lcall
mov
clc
iret
fstps
push
in
xorb
xor
push
mov
dec
xor
jecxz
ret
lahf
aam
cmp
mov
lods
mov
int3
xor
rcrb
inc
inc
ret
xchg
pop
int
adc
stos
cmp
dec
hlt
rorl
mov
mov
in
fsts
adc
addr16
daa
jbe
inc
dec
lds
nop
jle
not
jl
xor
lcall
and
arpl
scas
mov
inc
jp
mov
clc
sbb
dec
jb
aad
loopne
cwtl
or
mov
mov
aas
and
push
cmp
movsb
push
cmp
ret
cltd
inc
notb
shll
jb
sub
lock
push
les
add
mov
mov
add
cmp
cmpsl
js
jp
arpl
imul
in
xchg
or
jno
js
iret
out
out
dec
jmp
and
lods
js
jne
xlat
jns
mov
xor
mov
out
mov
repz
sub
push
inc
xchg
imul
int
jp
adc
xchg
or
stc
mov
xor
push
cmc
nop
sbb
sub
daa
repnz
loope
std
call
push
jmp
test
inc
adc
pop
aas
sub
inc
pop
mov
pop
mov
inc
mov
test
ss
jmp
and
lds
add
xor
mov
push
daa
mov
insb
pop
loope
imul
and
push
or
push
xchg
in
movsl
imul
adc
xor
jnp
push
cmovne
pop
ret
jo
push
push
sub
and
sub
cmp
pop
shll
xchg
sbbl
xchg
pop
jns
stc
cmpsl
jne
dec
lahf
repnz
rcrl
stos
mov
mov
jb
cmp
test
sub
lock
lahf
xchg
sub
adc
arpl
jp
dec
mov
out
jg
movsl
stos
xchg
push
xor
mov
lods
dec
or
cmp
ss
adcb
jge
icebp
jl
int
decl
xchg
sbb
inc
std
cli
jnp
jecxz
add
xchg
mov
adc
adc
ror
repnz
fucomp
sahf
loopne
sbb
enter
lock
push
cmp
xchg
jle
jp
mov
sub
dec
pop
mov
pop
cmp
in
push
pusha
imul
movsl
cld
pop
fs
sbb
xchg
ss
ds
fnsave
adc
jge
stos
mov
dec
enter
std
sbb
in
daa
repnz
mov
lea
call
je
faddl
push
shrb
inc
mov
jl
jecxz
or
xchg
jmp
ss
jae
fucomp
repnz
sbb
popa
inc
and
adc
pop
ljmp
xchg
lret
mov
cmp
bound
xchg
aam
inc
xchg
lods
cmp
or
jbe
jmp
xor
mov
stos
adc
adc
pop
jle
cmp
lds
xlat
jl
lret
je
mov
jno
mov
push
out
pop
dec
fdivs
push
push
sbbl
pop
mov
lahf
rcrb
aas
test
and
popl
ja
sub
lahf
xorl
data16
xor
pushf
mov
sbb
jbe
test
mov
aas
leave
and
popf
jbe
cld
add
mov
xchg
into
add
shr
ret
ljmp
mov
jg
sub
into
cmpsl
test
mov
jbe
and
xchg
pop
and
xchg
inc
add
jns
mov
test
icebp
movsl
push
lret
imul
push
sbb
adc
push
aas
test
out
push
mov
xchg
fstpt
add
xchg
cmp
xchg
call
add
nop
mov
mov
pop
repz
andb
xchg
std
pusha
lea
pushl
arpl
out
clc
add
xchg
out
aas
xchg
dec
or
sahf
inc
sub
pop
in
dec
pop
pop
or
sbbl
into
lock
out
int
mov
std
sbb
daa
pop
mov
push
rcll
movsl
sub
in
xlat
test
adc
scas
popf
xchg
loopne
xlat
add
flds
or
mov
sub
push
sub
es
int
and
mov
das
loop
sub
or
in
inc
aam
jo
ds
loope
scas
dec
and
cld
es
lods
lea
xlat
stos
dec
daa
mov
js
and
cmp
outsb
addb
fstl
mov
jo
rolb
cmpsb
push
call
add
andb
lcall
and
jns
scas
icebp
xor
push
cli
notb
jl
cmpsb
test
faddl
dec
daa
xor
mov
adc
sub
shr
and
adc
add
xor
shl
mov
gs
pop
push
clc
cmp
icebp
hlt
cwtl
into
jne
test
pop
sub
cltd
sahf
jge
adc
dec
push
push
dec
and
int3
dec
dec
mov
aaa
xchg
fucom
into
imul
mov
data16
inc
stc
or
or
mov
inc
js
xchg
aas
lods
and
adc
push
jb
movsl
outsl
in
insb
data16
sbb
dec
xchg
test
dec
cmp
orb
in
dec
push
fs
jb
inc
std
sbb
js
jp
icebp
test
loopne
mov
outsb
cwtl
xchg
xor
fsubr
push
aas
lret
pushf
ret
cmp
out
fsubrl
xchg
sub
lret
sbb
lock
out
cmpsl
push
cli
adc
or
aas
popa
xor
cld
pusha
scas
sti
or
mov
neg
outsl
bound
ja
inc
push
or
ljmp
imul
mov
pop
ja
je
rcll
jbe
mov
add
sti
mov
or
mov
js
pop
push
or
popa
or
or
in
jbe
bound
call
mov
imul
je
xor
sub
and
and
xor
sub
cld
jl
or
aaa
mov
xlat
lods
or
adc
leave
out
jno
ja
fimull
push
enter
cmp
push
add
je
push
jnp
adc
loope
xlat
push
mov
es
imul
aad
mov
data16
cmpsb
subb
jg
fwait
add
icebp
sbb
bound
sub
or
pop
mov
and
int3
out
lcall
aas
out
scas
push
sbb
cmpsl
cli
or
pop
fmuls
sbb
popf
xlat
lcall
test
dec
repz
daa
mov
jns
out
mov
cli
push
pop
out
shrb
insl
sbb
jno
jne
mov
inc
add
popa
jle
dec
pop
stos
push
push
jb
push
ret
std
arpl
pop
ds
call
aam
inc
mov
addr16
nop
cmp
push
data16
dec
ss
xchg
fwait
xchg
std
xor
pop
cmpsl
pop
and
xchg
outsl
andl
es
sbb
pop
or
mov
enter
push
push
faddl
jmp
imul
popw
inc
ljmp
mov
cmpsl
mov
test
xor
test
int3
dec
pop
cmp
or
sti
lods
xchg
xchg
dec
repnz
mov
sbb
out
sub
rcrl
stos
es
dec
push
or
inc
mov
and
sbb
push
xchg
pop
data16
cli
mov
mov
xchg
mov
xchg
mov
filds
mov
sub
push
dec
sbb
and
cmp
adc
sti
out
cmpsl
pop
xor
xchg
xor
dec
push
inc
lret
adc
push
sti
xchg
mov
mov
jg
mov
cs
add
xchg
in
lods
mov
loop
sub
mov
xchg
adc
lds
fbstp
push
push
je
push
sahf
pop
and
pop
mov
inc
popf
into
rclb
xchg
lds
repnz
mov
jle
xchg
xchg
ret
xchg
popa
add
push
pop
sub
sbb
icebp
add
dec
and
sbb
pop
and
pop
out
jnp
fs
pop
mov
xor
push
inc
inc
xor
adcl
mov
in
or
xchg
ljmp
pushl
jo
inc
jmp
mov
cmpsl
scas
shll
jp
in
mov
push
roll
shlb
jae
dec
xlat
push
mov
out
int
int3
out
ja
das
jbe
mov
jge
mov
pop
or
adc
dec
mov
les
mov
jns
loop
aam
fs
mov
dec
jmp
aam
pop
adc
xchg
pop
push
pusha
test
inc
lret
sub
mov
cwtl
sbb
xlat
sbb
and
sbb
xchg
fldl2t
cmpsl
mov
bound
call
rcrl
scas
daa
out
stos
mov
push
and
dec
es
ret
cmp
rclb
outsb
xor
xor
dec
or
pop
mov
aam
mov
mov
out
hlt
xchg
cli
xchg
xchg
jne
cmp
dec
mov
lods
out
cltd
xor
mov
jno
pop
data16
addr16
jmp
inc
cmp
daa
cmpsl
aam
loope
cltd
jns
xor
cmp
and
mov
in
int
adc
push
mov
cmp
mov
outsb
and
sub
movsb
and
mov
test
dec
aaa
gs
stos
ds
mov
cmpsb
sbb
sub
lret
add
push
push
rorb
lahf
xor
adc
jge
jg
mov
std
xchg
and
and
addl
cmpsb
mov
mov
pop
dec
jp
inc
push
or
fdivrs
shl
cmp
inc
into
sub
scas
fisubrl
add
call
jnp
test
adc
iret
pop
push
negl
ja
sti
ljmp
fwait
shl
call
adc
and
in
roll
dec
xor
adc
mov
fcmovb
sub
add
jp
xlat
pop
jge
cwtl
scas
inc
sahf
aad
xchg
dec
cmp
dec
lcall
jmp
inc
jle
mov
and
into
dec
aad
loope
mov
cmp
movsb
stos
pop
cmp
int
pop
scas
cmp
sbb
jg
loop
cmp
pop
push
dec
mov
fs
in
cmp
outsl
add
add
push
dec
iret
stc
mov
push
fisubl
rcl
sbb
in
mov
test
pop
imul
test
ss
incl
or
adc
mov
xor
imul
shlb
fildl
movsb
je
sarl
mov
rcl
fsubs
int3
stos
xchg
hlt
scas
adc
adc
jns
xchg
push
jns
jno
les
cmpsl
rorb
roll
xor
pop
dec
nop
xchg
jecxz
or
lahf
sbb
inc
pop
and
cmp
repz
in
mov
inc
dec
aad
in
xor
dec
in
inc
mov
pop
mov
outsl
std
cmpl
pop
scas
gs
aam
pop
dec
ret
dec
mov
adc
jno
mov
js
adc
pop
cld
sub
jge
dec
xchg
shll
xchg
cli
and
dec
imul
mov
fs
rcr
xchg
icebp
leave
pop
add
push
cmp
aam
jno
outsl
test
ds
jmp
movsl
mov
and
outsl
jp
jae
orl
scas
push
test
aas
mov
pop
cmpsb
jle
and
stos
dec
sbb
add
fisubrs
loop
enter
cmp
pushf
in
cli
stos
mov
sub
sub
jmp
mov
cld
into
nop
pop
or
dec
pop
dec
add
outsb
adc
aaa
push
test
icebp
or
test
push
sbb
inc
mov
mov
lds
or
lahf
mov
jmp
data16
fst
das
jb
mov
enter
xchg
push
dec
repz
lea
or
dec
ss
inc
fdivrl
xor
jno
sahf
stos
xor
or
mov
test
pop
mov
add
mov
jnp
or
out
xor
dec
mov
movsb
mov
ret
lcallw
in
mov
rcr
adc
outsb
iret
out
es
sub
jge
add
enter
sahf
mov
in
pop
jo
mov
rcll
and
repz
pushf
out
into
mov
dec
test
adc
dec
popf
fdivrl
push
in
mov
in
js
movsb
fisttpl
lock
adc
mov
xor
jo
cmp
push
testb
jecxz
mov
jae
popf
inc
xchg
pop
dec
dec
pushf
cmpsl
lea
imul
and
hlt
ja
pop
adc
or
cs
jl
add
mov
out
cmp
or
jns
enter
imul
fwait
sub
ret
loop
negl
faddl
pop
push
mov
lock
jnp
dec
xor
adc
lock
cwtl
fs
pop
dec
ret
xor
dec
loope
pop
imul
das
jg
out
push
mov
sub
in
mov
jno
jge
jge
or
mov
adc
pop
gs
mov
inc
xchg
mov
push
push
aas
stos
push
xchg
xor
mov
mov
sbb
int3
test
imul
nop
mov
push
sbb
mov
icebp
sbb
and
cltd
popf
dec
stos
or
jl
ja
sub
sbb
dec
int
jo
ret
fcomi
jle
cmp
push
pop
inc
int3
popf
icebp
cmp
call
loop
in
mov
xchg
shlb
lods
fsub
push
lds
pusha
or
xchg
fcmovbe
mov
repnz
into
sbb
push
out
pop
scas
rol
iret
jne
cmp
push
leave
fldl
inc
imul
and
lods
cmpsl
mov
adc
iret
test
dec
stos
inc
inc
push
or
aad
jne
jb
mov
sbb
xlat
pop
cltd
lret
ja
ds
outsb
fcomps
aas
movsl
pop
add
mov
cmc
adc
loope
inc
lods
pushf
xor
ss
push
inc
stos
fsubl
addr16
out
rolb
sbb
lahf
test
jecxz
jno
js
nop
jne
mov
dec
data16
inc
adc
pop
xor
testl
cli
pushf
jne
mov
dec
jae
popf
jne
inc
push
repnz
nop
mov
jle
ljmp
inc
cmc
pop
hlt
jle
icebp
out
mov
imul
stc
divb
cmp
and
inc
rolb
data16
outsl
mov
lcall
ds
cld
add
icebp
mov
clc
lret
fcomi
or
loop
imul
aam
js
inc
adc
mov
fildl
and
cwtl
and
jle
sbbl
and
dec
arpl
jmp
xchg
stos
mov
or
repz
xlat
adc
comiss
pusha
dec
rcrb
test
gs
sbb
mov
imul
fsubp
mov
mov
mov
int3
cmpsb
orl
xchg
arpl
sahf
or
scas
testl
setbe
int3
cmp
inc
nop
sahf
mov
mov
in
cmp
out
cmp
popa
mov
dec
jp
call
movsb
clc
rolb
test
repz
shll
ret
push
jmp
jo
inc
adc
das
les
mov
xor
mov
dec
inc
mov
push
jne
movsl
xor
ljmp
iret
mov
xchg
lock
sbb
idiv
push
inc
or
jmp
dec
aad
inc
shrl
stos
adc
cmp
xchg
xchg
loopne
inc
mov
adc
or
xchg
mov
inc
pop
icebp
pop
mov
lcall
cmp
stos
xor
jmp
loop
push
mov
pop
pusha
int3
cmp
movl
xchg
add
adc
mov
daa
inc
mov
mov
in
outsl
scas
addb
adc
popa
pop
nop
inc
jo
pop
or
mov
pop
sbb
stos
imul
mov
add
add
int
mov
lret
push
mov
fbld
loope
jle
and
mov
sbb
rorb
sbb
sahf
dec
xchg
andl
cmp
or
or
subl
push
push
daa
xor
push
mov
mov
fwait
cmp
lret
dec
sbb
sub
ds
cmp
mov
dec
enter
cmp
mov
fstl
aas
mov
push
pop
lods
lods
sbb
mov
arpl
add
xor
mov
mov
fstpl
mov
cmp
pop
adc
mov
jbe
push
loopne
sub
loop
cwtl
inc
cmpsb
mov
lcall
ficomps
daa
mov
mov
push
pushf
js
lahf
mov
addb
add
mov
add
sbb
adc
jle
into
stc
jl
das
sbb
add
ss
adc
and
lea
scas
lret
mov
or
adc
insb
mov
xor
or
and
cmp
mov
dec
rcll
cmc
pop
out
mov
jo
add
in
add
xor
add
scas
pusha
xor
and
cmpsb
in
scas
test
je
dec
lock
and
mov
mov
add
or
data16
dec
pop
or
adc
test
lret
sbb
inc
and
cmp
test
pop
push
pop
ljmp
test
fsubrp
testb
pop
cmpsl
mov
mov
add
add
shl
mov
mov
sub
push
add
and
jp
ja
mov
call
mov
addr16
dec
lret
dec
enter
iret
fwait
adc
or
test
bound
cwtl
inc
dec
add
jmp
xlat
ss
mov
les
sti
push
out
loop
jne
push
ss
fildll
inc
insb
es
dec
cmp
insb
and
or
and
cli
movsb
and
jp
inc
insb
dec
daa
jnp
xchg
xor
shrb
mov
or
push
rcrl
cmp
push
fisttpl
and
dec
insb
lret
and
sub
mov
sub
int
push
or
rcr
mov
insb
and
mov
push
lods
aam
mov
push
sub
xchg
jbe,pt
dec
adc
mov
icebp
adc
lret
loop
js
ret
int3
lock
fldcw
clc
push
inc
xlat
push
or
lods
push
mov
sub
std
es
imul
leave
sub
sbb
psubusb
int
call
insb
ljmp
icebp
out
push
mov
bound
fildll
sub
sarl
jno
test
loopne
add
je
sub
push
mov
fwait
fs
enter
add
pinsrw
nop
push
enter
inc
xchg
jno
fs
loop
ret
into
popa
lret
push
mov
xor
add
lcall
movsl
pusha
inc
push
jle
gs
sbb
mov
into
push
and
in
add
insb
mov
xorb
mov
int
shr
add
stos
jo
adc
jo
jae
ror
and
jo
or
xor
inc
or
or
rcl
push
xchg
fwait
cld
mov
pop
xchg
js
mov
pusha
insb
fldl
mov
push
dec
xchg
or
adc
xor
mov
andl
sub
cmp
jmp
adc
mov
pop
scas
bound
xor
add
cli
add
cmp
cld
in
cmc
sbb
sti
sub
popf
mov
popf
push
lods
nop
cs
and
gs
cmp
and
mov
je
daa
aaa
repnz
push
add
scas
lret
inc
or
stos
push
cmp
out
xchg
push
clc
xor
loope
test
push
mov
mov
xor
cmpl
or
out
and
cmp
xchg
sub
mov
xchg
outsb
mov
mov
ret
or
sub
jne
mov
mov
lret
lods
repz
aam
stos
jo
cmc
xchg
xchg
push
pusha
aam
push
insl
std
mov
push
xor
out
lcall
mov
add
icebp
mov
cltd
sbb
xchg
cmp
out
sbb
ja
pop
imul
or
mov
pop
aad
add
orl
cmp
jne
mov
sub
cwtl
sub
mov
test
decl
mov
sub
inc
fs
je
mov
fmull
loop
sub
push
shl
xchg
ror
shrl
push
jecxz
popa
das
nop
jecxz
and
stos
loop
loop
dec
or
xor
xchg
and
dec
mov
fsubl
out
xor
push
jnp
lcall
add
fimuls
cmc
into
adc
mov
push
add
fcompl
fimuls
cmp
add
jns
lret
and
int
inc
adc
dec
sub
adc
popf
push
outsb
js
mov
xor
pop
mov
sbb
mov
stos
and
pop
mov
or
mov
fisubs
or
mov
sahf
test
gs
pushf
dec
lret
int
fcom
aas
push
popa
scas
mov
mov
ret
adc
add
mov
cmp
jne
xor
lahf
test
hlt
call
pop
jge
push
mov
int3
pop
push
mov
jge
mov
sbb
stos
into
mov
jns
push
dec
adc
push
mov
push
sbb
cmp
or
lret
rcrl
loopne
hlt
in
lods
push
add
aad
fwait
sbb
dec
jmp
rcr
pop
push
xchg
xchg
adc
test
pop
fidivrl
xor
popa
cli
adc
mov
lds
lret
orl
mov
mov
or
cmp
lods
pop
sub
ljmp
je
test
outsb
std
aas
clc
push
mov
aam
jbe
push
or
fst
imul
filds
mov
lcall
jge
push
sarl
and
andb
pop
dec
or
fdivl
or
inc
insl
dec
pop
sbb
loop
ja,pt
clc
xor
cmp
lret
nop
jno
and
stos
in
add
or
gs
adc
fstl
push
andb
sub
push
orw
xchg
mov
jnp
test
rcr
fdivr
arpl
jbe
inc
into
fcomps
lods
cmc
cmp
mov
or
push
adc
jno
adc
inc
push
dec
jnp
or
xchg
mov
xor
or
not
int
stos
and
cs
std
jecxz
jg
das
lret
push
movsl
and
sbbb
ffreep
sub
mov
jnp
add
add
push
xchg
iret
mov
cmpsl
mov
sub
mov
sti
cmp
popf
mov
dec
cli
inc
mov
lcall
ss
pop
loope
test
popa
imul
xor
test
sbb
jb
xchg
in
xorl
stos
lcall
insb
inc
jne
push
pusha
into
movsb
inc
cld
das
push
in
out
xor
inc
ds
cwtl
mov
fdivs
pushf
in
into
and
enter
jge
xor
inc
dec
arpl
dec
mov
pop
inc
mov
sub
pop
inc
sbb
sbb
fs
cld
and
and
or
mov
mov
notb
push
cmp
jge
lods
out
cmpsl
fildll
dec
sahf
or
pop
and
inc
jmp
loope
and
mov
inc
dec
pop
insl
lock
and
inc
dec
or
xor
nop
pop
nop
in
dec
ds
sub
shl
sahf
push
dec
pop
jg
idivl
fwait
nop
dec
xchg
jbe
sti
shl
mov
xchg
mov
rcr
jns
daa
out
cs
aas
sbb
jae
mov
push
pusha
xchg
add
not
test
dec
jge
insl
into
in
push
xor
cs
daa
ret
iret
or
sbb
mov
sbb
pop
xchg
stc
enter
cmpsb
fsubr
push
push
dec
mov
lock
insb
sahf
cmp
adc
outsl
mov
movsb
push
cltd
mov
jecxz
or
addr16
outsb
and
test
mov
adc
cmp
insb
xchg
push
adc
ljmp
xchg
push
add
sub
mov
inc
aas
mov
pusha
mov
dec
mov
adc
stos
ja
mov
jge
xorl
pop
mov
add
inc
je
in
push
ret
push
int3
out
insb
imulb
mov
xabort
and
fcomps
pop
add
mov
mov
cwtl
rcr
or
in
sbb
test
cmpsb
std
in
jp
ret
inc
sub
leave
scas
dec
push
pmulhuw
push
cmp
ss
mov
jne
lret
xchg
frstor
mov
fiadds
test
inc
jb
scas
inc
jp
std
inc
dec
xchg
fisubl
test
sub
jo
jb
sub
push
mov
sbb
out
and
and
lret
jl
xchg
jae
int
pushl
es
enter
xor
test
xchg
aad
cmpsl
aas
jge
jb
mulb
mov
xchg
lds
jo
mov
xchg
sub
cmp
arpl
hlt
icebp
adc
adc
push
shl
sahf
stc
in
int
sbb
xor
mov
xchg
and
lods
push
repz
mov
inc
cmpsb
or
and
aam
and
lcall
sbb
xchg
add
sbb
popf
mov
adc
stos
add
jmp
lret
dec
ss
sub
sub
mov
mov
pop
sbb
xor
enter
pop
inc
xor
mov
mov
pcmpgtw
lods
dec
out
sbb
pop
dec
and
jnp
hlt
out
vmread
jo
repnz
fidivrl
ss
push
scas
sahf
into
imul
cmp
add
adc
jge
lods
in
lea
rol
js
pusha
mov
ja
mov
test
sbb
fistl
sub
inc
test
mov
xor
fsubs
stos
lock
shll
ret
into
ljmp
daa
xchg
inc
sub
mov
out
jl
or
or
loop
cmp
adc
jge
and
cwtl
xor
aaa
and
mov
adc
jo
adc
aaa
mov
inc
jmp
in
in
int
bound
ss
and
push
add
push
mov
and
mov
push
sbb
sbb
in
jle
sub
in
lds
cwtl
loop
fsubl
cwtl
mov
and
sbb
testl
fstl
push
out
lock
cmp
cld
loop
sbb
push
fiaddl
repz
add
imul
push
sub
ficompl
cmc
sub
loope
xor
lods
leave
ror
ja
clc
mov
sbb
cli
pop
iret
or
lret
insb
fmulp
test
les
cmc
cltd
sub
mov
ret
push
or
sub
pop
cmp
int3
or
cmp
pop
jae
cwtl
mov
outsl
pusha
xchg
lahf
aaa
sub
jle
movsl
cmp
aam
sub
imul
scas
inc
fsubrp
mov
dec
dec
mov
mov
cld
scas
or
xor
jge
lds
shrl
das
jl
mov
fidivrs
loop
lds
and
push
stos
movsl
pushf
lret
int3
and
pop
inc
mov
lret
sub
les
aas
add
loopne
fisubs
mov
aam
inc
adc
xchg
scas
shll
mov
xlat
int3
data16
push
jnp
lret
shrb
in
mov
mov
add
xor
inc
fidivs
push
jle
insl
xorl
mov
pop
dec
stc
cltd
fimull
out
pop
jg
aad
int
shll
out
int3
lret
sbb
dec
mov
les
pop
cmc
and
cs
getsec
addl
fildl
or
loopne
sub
data16
and
add
pop
xchg
sub
mov
fisttpll
sub
fisttps
shlb
xlat
push
add
stc
sub
push
loopne
je
inc
pop
es
insl
aas
cmc
xor
inc
push
jo
in
fstpt
imul
arpl
aas
and
fbstp
insl
xor
mov
jge
js
dec
popa
lods
xor
std
in
mov
mov
mov
add
jecxz
add
mov
and
out
js
out
sahf
lahf
jl
dec
push
dec
push
push
adc
aas
inc
fst
movsb
es
push
push
dec
add
jle
sarl
in
pop
sbb
cltd
xor
sahf
jg
mov
scas
rcrl
xor
jl
mov
xchg
sbb
call
and
rcrb
insb
imul
mov
leave
aam
pop
sub
outsb
scas
mov
push
or
ret
push
mov
int
jbe
rorl
lods
arpl
bound
cli
pop
sub
push
ss
dec
cli
repnz
pop
sub
je
mov
fsts
push
pop
mov
adc
or
push
xor
sub
add
imul
mov
gs
movb
push
inc
fimull
clc
add
das
imul
sbb
xor
sbb
cli
lods
sbb
and
xor
push
xchg
or
outsb
js
push
pop
mov
ljmp
arpl
inc
adc
or
dec
jbe
std
ljmp
or
dec
aam
push
mov
push
jle
jb
out
adc
xor
aam
test
xorl
cs
pop
jle
xchg
arpl
int
cmp
lods
cmc
test
dec
cmp
sbb
fistpl
dec
imul
dec
sub
adc
int3
sub
lret
jnp
gs
mov
inc
shll
adc
fscale
cli
popf
movd
inc
cmp
roll
inc
and
out
xchg
out
jo
dec
sbb
fmuls
movsl
sbb
pop
cmpb
cmc
mov
stc
pop
mov
repz
xchg
enter
scas
cld
pop
dec
out
dec
popa
shlb
es
jecxz
dec
jnp
jae
jecxz
loopne
or
popa
mov
repnz
inc
popa
sub
sbb
jmp
hlt
jb
sbb
arpl
lahf
imul
inc
adc
outsb
sub
jno
and
jmp
dec
dec
test
cmc
es
adc
pop
leave
out
lret
mov
cld
scas
out
pop
rcll
cwtl
push
xchg
inc
lahf
jecxz
pop
mov
mov
inc
push
fildll
movsb
mov
mov
mov
adc
dec
mov
idivb
out
nop
jmp
jne
xchg
pop
cmp
cmp
rcrb
or
mov
pop
adc
imul
add
jo
xor
dec
insb
lea
in
jmp
test
dec
jne
mov
cmpsl
pop
leave
push
mov
enter
out
jle
add
jmp
xchg
ret
ja
pop
adc
loop
dec
out
cmp
mov
out
into
mov
mov
dec
jno
sbb
mov
sub
sbb
inc
movnti
jne
dec
push
rcl
sub
js
in
and
pop
xor
jns
pop
mov
inc
ficomps
dec
fidivl
popf
fsubrs
mov
dec
and
icebp
and
inc
ffreep
xchg
inc
xchg
repnz
push
push
pop
add
lock
test
push
es
addr16
pop
jle
mov
jno
imul
dec
cmpl
lahf
aas
pop
jae
jge
idiv
sbb
call
je
push
dec
push
mov
jp
mov
and
jo
mov
push
ficoml
imul
push
ret
cmc
scas
jne
test
pop
pop
cwtl
mov
jp
cmp
xor
inc
xchg
lret
sti
mov
test
mov
ljmp
idivb
leave
add
cs
lcall
xlat
das
jge
inc
popa
inc
in
jl
repz
sub
pop
mov
and
ljmp
sahf
inc
add
das
lret
iret
dec
arpl
movsb
xchg
sbb
add
imul
aas
sarl
cmpsb
jne
pushf
pop
mov
ftst
cmp
fisubrs
dec
pusha
nop
outsb
lea
ret
sbb
sahf
and
jge
xor
add
aam
ret
xchg
jmp
lcall
imul
stos
xchg
pop
sub
xchg
addr16
pop
leave
mov
pop
adc
sub
dec
xor
lcall
add
fdivrs
lods
mov
mov
int3
notl
mov
and
add
cmpl
lret
jp
jno
shlb
insb
jle
or
mov
loope
mov
mov
ja
sti
or
adc
sbb
sbb
jo
xlat
aas
pusha
dec
nopl
hlt
xlat
insl
jno
sub
dec
push
pop
mov
rclb
sbb
jmp
push
cmp
adc
mov
mov
or
xor
lret
sub
loopne
adc
fidivrl
adc
jo
out
mov
push
mov
or
xor
jmp
jns
push
in
mov
cmp
and
mov
inc
push
mov
sbb
iret
cmpsb
push
mov
fs
in
sbb
mov
pusha
pop
mov
sbb
data16
adc
inc
inc
add
xchg
lea
push
mov
dec
push
pop
pop
inc
xlat
push
xor
dec
mov
or
push
xor
and
mov
shll
into
push
fistpll
outsb
ret
inc
mulb
popf
inc
push
mov
subb
lcall
dec
ror
sbb
ss
mov
mov
xchg
movsb
lret
or
rcll
sub
sub
push
shlb
mov
ljmp
popa
mov
repz
idivl
mov
xor
jmp
cmp
aam
push
loope
dec
loop
mov
mov
lcall
out
imul
sub
lods
sbb
lods
add
lahf
inc
int
sub
inc
outsl
cs
sub
add
leave
popf
pop
mov
test
js
rolb
filds
sbb
sub
adc
jbe
outsl
aad
and
pop
imul
jns
add
jle
push
mov
add
mov
jmp
inc
xchg
push
je
mov
lods
jle
sbb
mul
inc
and
fs
jnp
jo
lea
fdivp
pop
dec
lods
xor
js
dec
pop
and
dec
inc
and
pop
js
insb
xor
sbb
adc
inc
aaa
shlb
xor
jb
test
pop
push
shrb
sbb
loope
and
stos
mov
or
nop
xchg
or
pop
add
or
in
pop
dec
xchg
pop
adc
sbb
outsb
andb
cmp
mov
jbe
mov
rep
jnp
pop
and
dec
loop
popf
aam
lds
scas
out
lods
push
pop
pop
dec
inc
add
mov
stos
pop
mov
mov
mov
sub
and
dec
mov
xor
in
rolb
cmp
cmp
subl
push
inc
insb
xor
mov
cwtl
pop
mov
or
mov
iret
or
or
sahf
push
rcll
aam
sahf
in
addr16
rclb
and
dec
jnp
stc
push
mov
or
imul
push
outsb
push
das
test
dec
iret
push
shll
dec
push
mov
mov
iret
or
pop
leave
xchg
sbb
les
mov
dec
push
cmc
mov
push
adc
lret
dec
mov
sbb
into
icebp
mov
inc
ss
dec
fs
adcb
add
cmp
cmp
ljmp
out
repz
adcb
idiv
daa
mov
cmp
stos
lea
jb
mov
sub
lods
pop
jb
add
mov
das
xlat
lsl
out
sarl
push
clc
lods
jg
jo
pop
loopew
inc
and
dec
or
int
cmp
fcomi
sbb
decb
xlat
mov
adc
sub
mulb
xlat
cmpsl
xlat
push
adc
std
or
jb
push
add
pop
aam
out
lea
bound
andb
push
nop
dec
in
std
sbb
dec
fstpl
shll
xchg
mov
and
movsb
rcrl
and
and
out
je
inc
fisttpl
sbb
cs
sub
sbb
push
loop
arpl
add
test
in
pushf
mov
ret
ret
sbb
adc
mov
pop
add
jae
sub
jge
scas
sbb
ja
xorb
fildll
adc
dec
push
out
outsl
aaa
andb
push
jecxz
ret
inc
jo
lahf
cmp
sbb
arpl
fdivp
test
pop
sbb
mov
adc
mov
cli
adc
int
add
inc
rolb
push
sbb
mov
sarl
fwait
in
sub
push
jle
mov
xchg
xor
jp
stos
mov
movsl
dec
inc
lcall
or
filds
clc
xor
mov
scas
ficomps
pop
insb
pop
sub
jle
push
cmp
mov
iret
out
mov
je
popa
mov
xor
adc
out
or
movsl
ljmp
add
pop
add
adc
icebp
or
insl
inc
popa
icebp
or
xor
out
cmc
cwtl
out
xchg
and
cs
push
cmp
jp
mov
lret
jle
sahf
test
gs
xor
stos
pop
xor
sbb
jae
dec
fsubr
les
pop
and
jg
jle
push
into
push
mov
pop
inc
andb
cmp
cwtl
outsb
cmc
push
fcmove
dec
jae
sbb
adc
mov
jb
fidivrs
mov
xor
cmc
push
push
xor
js
test
pop
jp
mov
insl
nop
mov
sbb
pop
sbb
mov
sub
popa
fcmovbe
cli
inc
in
or
enter
ficoml
fistpll
push
fucomi
dec
insl
sub
mov
ja
leave
out
sbb
ja
aam
pop
sahf
icebp
xor
push
pop
out
dec
pop
pop
adc
call
jbe
jbe,pt
aad
xchg
sub
push
push
xor
in
jno
outsl
les
and
fisttpll
xor
shlb
aam
jns
mov
loope
stos
dec
enter
xchg
sbb
add
mov
sub
xchg
cmp
xlat
mov
jecxz
mov
push
xor
and
mov
test
mov
sub
or
inc
dec
xchg
addl
pop
mov
cmp
and
and
sub
dec
mov
movsb
loop
sbb
jno
cltd
jno
jl
leave
insb
inc
icebp
sub
lock
adc
and
cmpsl
pop
fdiv
iret
mov
iret
adc
lods
sbb
daa
sbb
or
leave
fstl
ret
pusha
fcoms
int
pop
jnp
xor
insl
lds
mov
inc
mov
pop
adc
mov
rorb
inc
push
cmc
inc
mov
sub
pop
pop
rcll
stos
sub
xchg
outsb
jbe
bound
adc
iret
xchg
stc
dec
sbb
pop
jle
sbb
adc
add
aas
add
fstps
sbb
cli
jb
fnstsw
je
fwait
fs
aam
cmpsl
inc
ljmp
faddl
int
add
xor
das
or
outsl
dec
adc
push
mov
ljmp
js
test
js
out
push
push
xor
scas
imul
sbb
jecxz
and
mov
dec
mov
sub
pop
in
mov
lret
orl
mov
stos
push
dec
jae
mov
mov
movb
out
cmp
mov
inc
push
jp
sub
inc
xor
cmc
popf
out
pop
jl
adc
xchg
ret
ret
xchg
ja
dec
fistpll
jnp
test
add
fmull
cli
cli
shrb
sub
pop
pop
jle
dec
popa
adc
adc
and
stos
mulb
mov
les
and
rcrb
leavew
sub
in
push
add
movsl
cmc
or
adc
repz
inc
adc
xchg
insl
bound
push
mov
repnz
push
pop
sbb
es
xchg
xor
loope
add
adc
pop
push
push
lret
or
mov
or
iret
mov
cmovge
fisubl
fstps
jbe
lods
ja
push
fdivr
in
jnp
cmp
loope
push
mov
clc
cltd
mov
call
sub
int
mov
add
addr16
inc
pop
push
xor
hlt
adc
jne
dec
cs
dec
add
jecxz
jae
loope
faddl
test
clc
and
scas
in
leave
imul
cmpsl
jmp
push
adc
xchg
leave
pop
hlt
mull
outsl
stos
sahf
mov
dec
adc
pop
cmp
jbe
pop
fsubs
mov
retw
or
shr
int
psllw
js
push
mov
mov
sbb
lret
dec
nop
daa
lods
jecxz
mov
sbb
mov
ja
test
dec
iret
xchg
push
cltd
push
cmpsb
in
jnp
andl
insb
mov
xchg
sub
mov
or
or
lea
ret
push
mov
jle
bswap
imul
es
push
les
ss
push
push
and
mov
dec
fisubl
mov
shll
inc
xchg
and
pop
mov
xor
sbbb
shrd
je
mov
mov
mov
lret
mov
sub
call
loopne
sbb
into
fldt
jb
jno
aad
jl
insl
pop
out
or
sar
cld
enter
xchg
push
cmp
cmp
mov
andl
xor
mov
std
fsubrl
xchg
mov
adc
into
xor
cmpsl
push
mov
sbb
add
jmp
jge
icebp
rclb
pop
repz
sarb
pop
jbe
xor
xor
sub
push
repnz
mov
inc
sbb
pop
es
mov
pusha
mov
out
stc
sub
je
ljmp
add
or
insl
xchg
xor
add
pop
fsts
dec
fstp
or
popa
pop
clc
fndisi(8087
xchg
rclb
stc
adc
or
xor
or
and
rorb
shlb
pushf
sbb
xor
mov
mov
dec
mov
pop
xlat
sar
lret
dec
pop
jecxz
inc
inc
push
xchg
push
sub
xor
mov
pusha
and
in
cmp
cmpsl
test
aad
enter
inc
sub
mov
in
jl
ret
dec
rcrb
sbb
je
push
adc
adcb
call
fsts
and
outsl
imul
push
subb
adc
pop
pusha
lret
ret
dec
cmpsb
gs
and
popl
sarb
mov
sub
dec
add
out
push
test
into
xchg
aaa
sub
push
or
lds
and
popf
push
aaa
xchg
imulb
push
push
sahf
xor
jmp
fidivrl
add
add
test
pop
stc
subb
jle
jbe
push
inc
fsubrl
or
rcr
mov
and
roll
test
dec
lods
fdivrs
inc
adc
jmp
jecxz
push
sbb
gs
mov
popl
xor
scas
rorl
mov
jno
inc
pushf
xor
out
ljmp
push
adc
jb
imul
inc
lods
fildll
aaa
fists
add
arpl
inc
fcoml
shll
adc
inc
mov
pushf
pop
psrld
sub
mov
mov
aam
cmp
add
jb
incb
xor
inc
adc
push
inc
cld
mov
jle
cltd
out
dec
call
xchg
fnstcw
test
imul
or
jnp
ret
out
add
sub
dec
add
icebp
cltd
lock
xchg
lcall
dec
sub
aas
pop
lea
pushf
orb
push
pop
push
in
mov
sub
ret
jmp
fcom
imul
out
test
dec
pop
push
repz
mov
ja
inc
jns
sub
bnd
adc
imul
scas
xchg
push
sub
pop
mov
and
adc
imul
mov
mov
cmp
lcall
inc
jg
hlt
aad
ret
add
das
fimull
adc
das
pop
das
pop
xchg
ror
enter
lcall
or
push
mov
mov
or
aas
push
imul
cs
dec
sbb
ret
fidivl
int3
mov
xor
in
xchg
mov
mov
add
lods
dec
imul
xor
and
xchg
out
jmp
pop
dec
mov
int3
stc
xchg
pop
fmuls
pop
cmp
out
cli
and
ds
fwait
loopne
add
mov
repz
scas
in
sub
sbb
lods
out
xchg
jmp
test
sbb
xor
xor
das
cltd
jp
fmul
clc
lahf
jb
or
mov
jbe
sbb
or
iret
cmp
clc
adc
sub
pushf
jecxz
mov
lock
mov
mov
pop
push
enter
stc
jg
fstl
repz
or
test
push
lcall
loope
xor
or
dec
imul
sub
inc
cmp
and
test
iret
test
dec
out
mov
daa
mov
out
stos
jne
popf
clc
push
mov
popf
pop
adc
lods
xor
pushw
add
and
mov
dec
outsl
mov
cmp
push
cmpl
in
je
in
add
ja
mov
js
mov
sub
sub
mov
inc
cmp
inc
jge
fildll
xchg
sub
cmp
js
xchg
mov
push
inc
hlt
insb
pusha
jmp
sar
add
mov
and
ret
es
dec
movsb
sbb
popa
sub
jnp
jne
sub
push
stos
lcall
jae
ficoms
sbbl
pop
nop
enter
outsb
dec
mov
sbb
sub
shll
jne
or
test
cmc
pop
xorb
arpl
dec
push
adc
sub
mov
push
in
and
mov
pop
lcall
mov
inc
aad
mov
out
push
and
pop
jecxz
cmp
in
xor
fstl
add
mov
lcall
popa
lods
mov
and
fwait
mov
and
mov
jle
mov
pop
fsubl
push
lahf
sub
imul
aad
xchg
shll
sbb
and
push
add
dec
into
xor
push
ljmp
les
push
std
call
ret
aas
loop
mov
mov
jl
sbbl
rcll
add
lret
into
aam
xchg
mov
adc
movsb
aad
popa
mov
in
lods
in
iret
enter
stos
out
mov
push
fwait
das
testb
repz
dec
add
dec
int
lods
imul
mov
iret
xchg
pop
xchg
lea
xchg
mov
mov
cmp
jl
fadds
pop
arpl
cltd
cmp
mov
inc
mov
inc
popf
cmp
xor
inc
addr16
xchg
int3
mov
insl
push
mov
or
daa
xchg
adc
iret
aam
and
mov
int
ds
icebp
adc
rorb
fdivr
nop
mov
jbe
xchg
dec
xor
adc
add
das
inc
or
pop
loope
rorl
rcrb
lret
and
insb
fdivl
add
inc
cmp
cmp
in
jno
aas
mov
xchg
in
repz
sub
sub
xor
data16
fcmovnb
inc
lret
and
mov
cld
inc
ror
cld
std
xchg
inc
mov
cld
popf
mov
clc
xor
jne
cmp
xlat
push
jg
out
lods
test
scas
popa
or
push
mov
cmp
lcall
xchg
push
cmpb
into
sbb
lock
jmp
fnstsw
imul
adc
sub
xchg
aaa
mov
lods
orl
in
sub
mov
mov
sbb
jne
inc
sti
xchg
dec
cmp
xchg
je
jp
sub
rcll
rolb
mov
cli
and
xor
mov
outsb
mov
xor
rol
jmp
inc
push
cld
mul
in
xlat
je
cltd
push
faddl
pop
push
insb
or
jle
xor
or
int3
xlat
hlt
sbb
mov
fbld
cltd
insl
sbb
sbb
jns
mov
adc
mov
std
or
push
test
inc
adc
ljmp
out
cmp
ficomps
jbe
out
sbb
lret
push
cli
pop
jb
cmpsl
insl
jo
cmp
cmc
fidivrs
xchg
or
jge
imul
cmc
int3
lcall
out
test
inc
in
out
add
pop
xor
push
je
fdivs
lahf
cmp
sub
dec
adc
dec
adc
jmp
cmp
imul
and
in
daa
sub
inc
cmp
xor
fs
pusha
cmp
xlat
sbb
loopne
and
mov
add
mov
pop
push
fst
and
mov
jne
or
sub
fcmovnbe
stc
mov
addr16
or
es
and
imul
xchg
popa
daa
into
scas
xchg
sahf
stos
mov
fisubrl
sbb
push
rclb
and
jne
sti
sub
sub
cmp
rclb
cmpsl
jbe
sub
push
jg
loopne
mov
call
ds
xor
in
aad
mov
push
aam
and
out
sbb
inc
ljmp
jg
add
addl
inc
dec
jmp
loopne
or
dec
pop
outsl
mov
pop
mov
xor
sub
sub
jmp
cmp
xchg
mov
sbb
mov
xor
xorl
scas
insb
pop
std
addr16
or
adc
push
cmc
jnp
out
out
mov
pop
xchg
mov
in
shr
mov
fidivrl
mov
pop
rcrl
adc
sub
fs
xchg
sbb
std
or
mov
mov
inc
jnp,pn
jl
testb
lods
or
fiadds
fs
je
sbb
or
xlat
push
cmpsl
psrld
add
outsl
pop
jo
fcom
nop
push
scas
out
gs
fisttps
fdecstp
mov
xchg
fsubr
mov
mov
add
mov
lods
into
mov
adc
mov
and
sub
jnp
shrl
fdivp
movsb
xchg
inc
ja
les
mov
jecxz
aas
mov
xchg
fwait
dec
mov
in
sbb
jne
mov
push
sbb
mov
ja
cltd
and
pop
mov
movsl
scas
shll
xor
loope
jb
cs
jl
scas
and
or
loopne
movntps
push
clc
rcr
add
xchg
sub
fisubl
xor
cmp
std
mov
leave
fidivrl
mov
jp
neg
push
cwtl
dec
lds
cmp
sub
cli
mov
call
fcoml
arpl
adc
and
hlt
xchg
xchg
out
adc
jbe
leave
ret
enter
and
inc
or
mov
mov
enter
push
fisubrs
jle
sbb
jae
cmpsl
xchg
add
insl
add
test
cltd
mov
adc
sbb
mov
call
jno
insb
mov
loope
inc
pcmpgtb
outsl
xchg
shrd
push
sbb
sbb
mov
insl
stc
adc
dec
push
call
jmp
outsb
dec
and
shl
jnp
mov
dec
popf
jmp
rcl
inc
mov
fstpl
inc
loope
sub
adc
sar
ret
orb
sbb
in
addr16
test
xorb
jb
adc
mov
dec
fdivrl
daa
andl
jl
lret
adc
mov
cmp
ret
xor
mov
push
jnp
insl
aaa
roll
rcrl
xlat
fistl
je
cmp
adc
rcl
test
sti
sub
hlt
jae
sbb
and
test
and
lods
mov
es
aas
dec
std
sub
shl
clc
aaa
or
or
es
or
dec
mov
iret
or
mov
push
cmp
inc
scas
adc
popa
adc
in
sub
filds
cmp
fisttpll
mov
xchg
mov
mov
mov
in
insb
mov
sbb
xchg
sbb
movsb
xchg
fisttps
mov
ds
clc
sbb
hlt
mov
cmpb
jno
stos
cmp
push
cmp
and
mov
dec
jge
inc
out
mov
ss
jmp
bound
cmp
push
in
dec
mov
fimull
jp
fimuls
addr16
sti
and
sbbl
sahf
js
dec
cmp
inc
lcall
pop
clc
enter
fistpl
or
and
pop
or
mov
dec
data16
mov
aam
jne
or
xchg
push
jl
rorb
sub
cmp
and
out
mov
add
mov
mov
movsb
mov
jnp
stc
movsl
mov
sbb
scas
xor
rsm
lcall
sub
inc
lods
xor
dec
test
fistpll
dec
bound
outsl
xor
aam
sbb
xor
inc
push
insl
dec
insb
popf
iret
int3
pop
or
cmpsl
cmp
mov
lods
mov
fwait
popa
in
mov
and
sbb
sub
sub
dec
aaa
mov
lea
xchg
addr16
aaa
push
out
pop
push
out
sbb
cmc
adc
jno
pushf
lods
jle
fs
clc
idiv
pushf
fmul
push
cmp
test
mov
add
test
insl
ficoms
add
cmp
mov
jno
jp
mov
scas
xor
xchg
inc
je
es
push
mov
xchg
imul
aaa
ja
jmp
push
iret
mov
xchg
icebp
into
movsb
push
mov
mov
bound
les
insl
mov
fsubp
mov
scas
or
scas
out
fwait
adc
in
xchg
scas
nop
cmp
mov
adc
movsb
sbbl
pop
mov
loopne
call
aad
push
lods
ljmp
push
xchg
push
fldenv
sub
xor
mov
mov
adc
test
test
subb
popa
jge
sbb
xchg
xchg
insl
sahf
push
std
mov
gs
pop
lret
sbb
sub
dec
jae
jmp
mov
add
stc
adc
popa
dec
dec
fistps
lock
iret
cmp
loopne
loopne
push
data16
and
nop
mov
inc
enter
lods
xchg
imul
sahf
mov
add
and
iret
insl
cmp
pop
push
or
xchg
imul
dec
setle
pop
jl
lea
call
mov
add
inc
lret
outsl
ret
fisubrs
cmp
pop
call
daa
in
shlb
pop
pavgb
cli
fsubrl
push
jno
inc
ret
mov
mov
fstps
movsl
dec
adc
mov
mov
add
dec
mov
xor
inc
xchg
inc
cld
lret
mov
rol
mov
mov
cmp
add
push
xor
sahf
jmp
addr16
outsl
stc
mov
mov
jo
add
aam
sub
orl
push
mov
cld
mov
test
sub
or
jnp
mov
pop
jno
mov
rclb
adc
sub
push
jns
jge
je
pushf
sarb
push
call
push
jno
cmp
sbb
int
cmp
in
les
xchg
xchg
mov
push
out
loope
pop
xchg
cwtl
aas
jl
sub
xchg
iret
and
xchg
stos
push
and
outsw
inc
mov
cli
cmc
inc
lds
or
daa
ljmp
or
test
or
inc
xlat
pop
imul
mov
cmpsb
jecxz
push
push
data16
pop
mov
fstpt
cmc
sbb
xchg
popl
enter
cmp
leave
adc
xor
popa
sbb
mov
movsl
jae
aas
xor
mov
rorb
xchg
pop
push
sub
xor
xchg
xchg
cmpsl
mov
ds
push
das
inc
push
negl
getsec
sarb
lcall
and
jp
lds
pop
pop
pop
mov
mov
push
inc
aam
xor
add
js
pop
cli
sar
sub
inc
mov
mov
or
cmpsl
idiv
mov
sarl
xor
cmp
adc
cmp
inc
jmp
jl
int3
call
add
sub
or
pusha
fwait
pop
sub
test
xor
push
scas
pusha
sbb
cli
movsl
jns
outsl
insb
addl
pop
in
xor
int3
cmp
jae
push
mov
insb
pop
fwait
stos
mov
push
shlb
shl
sub
and
and
subb
js
repnz
xor
dec
dec
fadds
int
jp
push
leave
fdivrs
pop
sti
adc
and
cmp
xlat
jmp
push
out
test
cmc
pop
in
lock
ss
cmp
or
mov
out
dec
push
sbb
push
scas
out
int3
call
xchg
data16
xchg
rcrl
add
cmp
sahf
push
cmpb
inc
and
into
lock
stos
andl
mov
negb
add
jmp
cltd
inc
lret
cltd
pop
sbb
insl
lahf
fildl
aas
sub
js
cli
jl
mov
pop
hlt
ret
or
sbb
mov
loopne
sahf
cs
mov
stos
ficoms
dec
jno
pop
data16
aaa
pop
nop
fisubl
out
mov
or
fstpl
xor
mov
int3
xchg
push
repnz
inc
push
test
or
mov
jo
and
jmp
inc
test
stc
in
stos
out
cmpsl
add
test
add
out
xchg
dec
lock
cmc
data16
pop
adc
or
xchg
lock
xchg
fldl
add
repz
stc
iret
push
mov
xor
loop
int3
jo
push
jmp
jb
cmp
xlat
lcall
fiaddl
gs
enter
mov
cmpsb
adc
es
ss
push
and
xor
cmp
cmp
pop
shll
popf
jmp
xchg
aad
mov
jecxz
xchg
dec
hlt
cmp
ret
out
sub
pop
pop
adc
sub
jge
divb
mov
pushf
gs
test
jae
push
xchg
outsb
sub
mov
mov
daa
jns
mov
adc
je
fmulp
leave
and
xchg
cmp
mov
ja
push
outsb
xchg
jo
cmp
mov
push
jae,pn
iret
loopne
test
jbe
scas
push
pop
cmp
rclb
mov
xchg
addr16
sub
leave
adc
adc
xchg
cmp
dec
test
xchg
nop
jge
inc
ret
aas
insl
movsb
and
jmp
xchg
imul
jp
int3
push
daa
adc
push
ret
dec
cmpb
adc
fists
enter
ljmp
sub
pop
lcall
lods
or
xchg
add
shlb
pop
add
jbe
jg
lds
sbb
mov
out
add
jl
adc
enter
push
push
shr
mov
out
stc
dec
push
sub
outsb
in
je
jo
cmpsl
or
pop
das
dec
es
xor
xor
add
test
jae
test
imul
js
mov
es
xlat
sbb
adc
outsl
shrw
pop
xchg
ja
leave
sbb
enter
rcrl
or
inc
loopne
imul
enter
es
testl
cmp
adc
gs
cmp
push
sub
sbbl
loopne
dec
add
inc
ja
roll
lcall
sbb
in
ret
push
adc
add
loop
rorl
mov
adc
outsb
cs
jmp
data16
test
xchg
add
imul
and
ds
adc
adc
push
adc
push
jmp
ret
inc
jg
mov
add
cmp
pusha
loopne
or
ret
outsb
jae
out
mov
add
jecxz
cmpsb
repz
pop
out
loope
mov
jno
cmpsl
cmp
pop
repz
adc
sub
inc
ret
push
adc
inc
lock
and
pop
lea
cmpsb
push
fsubr
xchg
mov
leave
gs
or
dec
dec
and
mov
inc
or
push
aad
rcrl
mov
mov
xor
mov
add
mov
inc
push
push
push
mov
lahf
mov
or
xchg
and
sbb
sub
or
sti
sub
cmp
stos
pushf
lea
mov
mov
dec
clc
mov
inc
and
stos
aad
scas
test
jecxz
outsl
mov
imul
xor
repnz
sbb
call
inc
sti
add
notl
outsb
lods
push
mov
sar
je
dec
fxch
scas
fucomip
rcrl
sbb
push
iret
cld
sti
insl
jae
sbb
xor
push
int
nop
inc
icebp
cmp
add
jmp
testb
fists
inc
aam
inc
repz
je
movsb
sahf
pop
hlt
push
jno
push
daa
mov
add
cmp
or
inc
and
mov
int3
pushf
jmp
jp
cmc
insb
xor
or
add
inc
mov
dec
rorl
cmp
push
into
jge
add
sbb
pop
mov
faddl
push
jl
icebp
aam
cmp
or
and
mov
adcl
pop
scas
nop
sti
xchg
dec
out
mov
loop
leave
mov
scas
rcrl
aaa
add
incb
xor
into
sti
pop
xor
add
aad
jbe
rorl
jne
lahf
aaa
int
mov
aam
and
adc
sub
xor
pushf
sbb
arpl
ljmp
lods
or
mov
add
mov
scas
xchg
mov
in
or
mov
push
shr
mov
adc
lea
sbb
cmc
shll
xchg
and
outsl
nop
dec
sbb
push
mov
xor
out
dec
sub
andl
mov
sub
xor
sahf
dec
ret
cmpsb
cmc
mov
lret
mov
cld
sbb
in
mov
dec
xor
and
lods
mov
mov
inc
cmp
jno
or
arpl
cmpsb
loop
and
mov
fwait
mov
lea
sbb
cs
int
imul
dec
jge
shlb
ret
pop
cmp
dec
and
dec
add
call
pop
lock
repnz
lock
popl
add
imul
test
dec
jnp
popa
imul
add
or
jmp
rcll
jge
ret
ret
jne
xor
cwtl
loop
scas
jbe
mov
or
pop
mov
inc
xchg
clc
jl
scas
cltd
cmp
pop
ja
xchg
fstpt
sbb
xor
test
inc
or
xor
movsb
fildl
fisubl
add
sbbl
jno
mov
dec
push
outsl
in
cmp
icebp
add
pop
lahf
mov
adc
or
adc
test
sub
mov
mov
rclb
and
and
jecxz
jo
cmp
insl
hlt
cmpsb
inc
push
call
js
push
daa
out
popf
arpl
cmp
jb
xor
push
add
lahf
ss
shrb
xchg
xchg
inc
mov
xor
arpl
dec
jo
in
xor
mov
rorl
outsl
mov
pop
test
xor
fldt
jge
les
ja
or
fnstsw
and
jle
and
cmpsb
add
sarl
sahf
mov
sbb
lcall
xor
loop
lods
dec
arpl
insb
roll
or
shlb
pop
cltd
inc
jnp
mov
into
mov
fstpt
neg
outsl
ret
cld
jnp
or
inc
lret
js
out
shll
pop
ret
xor
xor
sub
push
dec
les
fdivrl
sbbb
mov
sub
scas
push
inc
cmpsl
ret
ret
out
sbb
mov
dec
jno
xor
and
dec
mov
fucom
pop
movl
test
pop
adc
mov
mov
and
push
dec
mov
leave
fcmovnbe
jbe
ret
or
mov
int
stos
rcll
push
jge
repz
sbb
mov
popa
cmp
mov
pop
pop
inc
insb
mov
pop
idivl
xor
xor
cmpl
mov
aaa
fistpl
mov
out
push
mov
mov
mov
xchg
negb
dec
jne
out
mov
ljmp
jnp
jne
out
iret
mov
daa
cmp
cmp
jns
sub
into
jl
test
pop
push
mov
adc
repz
js
loope
movsl
jno
icebp
cli
daa
cmp
cmp
inc
push
sbb
repz
scas
push
test
jbe
or
pop
jno
push
icebp
pop
fsubrl
idivb
ss
mov
stc
aas
mov
addr16
repnz
adc
sub
roll
sbb
sub
into
repnz
mov
pop
add
and
cmp
inc
bound
lea
jnp
or
mov
inc
rorl
ret
negb
or
add
sbb
jne
mov
test
leave
cltd
mov
sub
add
mov
mov
dec
aad
adc
pop
or
js
test
dec
lahf
push
mov
pmaxsw
or
xchg
adc
xor
in
pop
mov
adc
insl
shr
push
mul
movsl
aad
inc
jp
mov
sahf
jl
nop
adc
ja
ret
shll
mov
push
adc
mov
add
push
inc
outsb
jg
adc
jp
or
int
lock
mov
inc
add
lods
and
out
push
and
mov
pusha
sbb
daa
cld
jl
and
pop
xchg
pop
cwtl
fiadds
or
mov
push
mov
adc
pop
pop
enter
sbb
mov
or
dec
cltd
ret
mov
aad
jo
mov
mov
and
movsl
add
xchg
mov
dec
adc
rcrb
pusha
mov
add
test
mov
adc
out
inc
mov
add
add
nop
out
insl
push
cmp
xchg
rol
pop
xor
negb
in
call
das
mov
push
enter
jae
aad
jo
shrb
aas
int
push
movsl
ror
pop
xchg
pop
jnp
fdivrl
test
cmpsl
popa
ljmp
scas
cmp
push
mov
mov
mov
mov
dec
or
insl
and
cmc
and
sti
pushf
adc
ret
test
aas
jno
out
add
mov
imul
push
push
jmp
inc
mov
dec
jl
ljmp
fisttps
scas
pusha
pusha
cmpsl
lock
into
nop
pop
xor
or
incl
push
outsl
daa
sbbl
les
jge
mov
push
mov
lds
insb
sub
mov
int
xchg
aad
stos
pusha
mov
sahf
jb
push
movsl
out
pusha
cmp
js
and
sbb
repz
mov
push
das
inc
sub
lods
xchg
xor
jno
adc
pop
push
cmpsb
or
xor
mov
stos
push
mov
mov
mov
rclb
and
push
fldt
popa
test
xorb
xor
popf
mov
jnp
mov
mov
mov
clc
fistpll
mov
push
sbb
scas
cwtl
pop
or
sbb
xor
adc
jp
adc
hlt
mov
push
jo
out
pop
or
cmc
jmp
or
cmp
xor
imul
lds
cmp
lods
int
xchg
jg
or
aas
cmp
adc
icebp
xor
dec
cltd
leave
inc
mov
xchg
cmp
jnp
das
inc
add
jp
inc
jae
sbb
xchg
adc
outsb
repnz
scas
lods
mov
sub
test
dec
add
jp
std
pop
gs
cmp
and
xchg
push
insb
pcmpgtd
push
add
aam
jle
xchg
outsb
sbb
arpl
xor
iret
fdivrl
ss
mulb
aam
push
jecxz
and
sub
scas
stos
jb
jno
dec
jg
fwait
mov
mov
sbb
xchg
arpl
sub
arpl
out
mov
pop
jle
xlat
aad
sbb
lds
aad
ja
cltd
add
add
pop
stos
and
dec
fcoml
inc
add
lds
push
test
outsl
and
add
mov
xchg
jle
rorl
mov
outsl
cmp
imul
cmc
rol
das
push
mov
test
lods
lods
mov
addr16
aas
and
push
nop
xchg
mov
xchg
and
lea
mov
call
pop
mov
mov
xor
jl
adcl
push
ss
pop
aam
and
or
push
add
inc
shlw
in
mov
rcll
insb
adc
sub
or
inc
daa
jnp
push
pop
add
fdivr
fdivr
inc
hlt
cwtl
push
mov
xor
adcl
cmpsl
les
lods
aad
outsl
scas
adc
mov
or
lcall
inc
push
test
pop
add
push
movsl
xchg
inc
and
nop
mov
mov
xchg
ljmp
jl
mov
out
out
add
xor
jmp
push
cmpsl
mov
add
add
mov
fmuls
and
mov
mov
inc
adc
xlat
push
xchg
xor
testl
int
dec
ret
pop
jnp
add
dec
enter
dec
jecxz
leave
or
shl
jo
loopne
test
or
fdivrs
cmpsl
out
das
push
pop
add
and
jae
xor
and
jle
mov
xchg
xor
lea
sbb
lret
aas
inc
cmp
push
rolb
ja
mov
cmp
lods
sahf
adcb
jle
xchg
daa
lcall
mov
mov
mov
imulb
ds
xor
les
jne
push
fldl
or
inc
jle
xchg
jns
push
fistps
jae
mov
push
inc
out
test
or
xchg
cmp
cli
shr
daa
dec
aas
out
data16
xlat
scas
dec
sub
pop
aad
repnz
dec
fisttpl
or
cs
stos
inc
stos
jmp
mov
lcall
sbb
fsubrp
mov
stc
jns
jmp
inc
push
xchg
adc
scas
sub
jp
cmpsl
repz
jg
mov
arpl
xor
mov
dec
add
mov
or
jae
pcmpeqw
ds
inc
pop
iret
or
and
std
or
and
sub
scas
add
adc
insl
adc
sub
mov
stos
push
dec
iret
push
lcall
mov
pop
xor
mov
and
mov
fstp
shrl
add
cmpsl
adc
dec
scas
sbb
mov
pop
jg
push
sub
out
bnd
inc
ret
ret
loop
xchg
in
mov
xor
jno
dec
pop
jnp
and
and
dec
or
pop
iret
xchg
shrb
sbb
push
shr
andl
mov
es
xchg
ret
mov
jb
jmp
mov
add
pop
cmpsb
fs
xchg
jns
cmc
negb
popf
mov
test
shlb
mov
scas
dec
or
mov
mov
push
dec
jge
syscall
ffreep
pop
mov
dec
add
xchg
loopne
imul
inc
addl
push
jp
xor
pop
loope
mov
xchg
repnz
fs
dec
fsubl
loop
repnz
arpl
push
adc
sbb
xchg
cld
sbb
jno
stc
inc
fnstenv
jbe
pop
cmp
out
push
in
mov
pop
push
adc
mov
scas
xchg
cmp
ret
sub
aad
xchg
test
into
and
or
das
in
out
and
mov
nop
sbb
sbb
fildll
cmp
mov
xchg
sub
pop
xor
test
jmp
xchg
cmp
rcl
mov
sbb
arpl
xchg
int
out
xchg
sbb
ret
mov
loope
cld
push
mov
mov
sahf
adc
cwtl
fidivs
jb
xor
cwtl
outsb
std
inc
pop
aad
loop
shll
shr
sbb
mov
sbb
mov
mov
ljmp
and
bound
fstps
pop
rclb
push
mov
jmp
pop
add
cld
test
adc
sub
and
lahf
xchg
mov
aad
popa
dec
and
cmp
xchg
adc
fists
outsb
sahf
xchg
jmp
jle
sub
iret
stc
in
in
jl
ret
push
push
out
test
icebp
fidivs
add
pop
xchg
arpl
add
push
fcomps
in
push
sarb
popa
out
gs
iret
mov
sub
mov
push
push
repnz
int
add
repz
out
jae
add
adc
fisubrs
xor
ds
in
test
mov
out
mov
push
xchg
push
aas
das
leave
jns
xor
imull
xchg
cmpsl
xchg
insl
inc
hlt
div
repnz
test
mov
sti
jecxz
mov
andl
jnp
mov
aam
push
pusha
or
sbb
bound
icebp
jb
dec
cmc
loopne
jmp
fdivp
test
push
bound
jns
sbb
mov
js
shlb
inc
or
fmuls
push
clc
scas
and
jns
and
xor
push
pop
rcl
push
arpl
imulb
mov
push
xchg
sbb
mov
pop
sti
xor
sbb
mov
pop
nop
movl
cwtl
repnz
add
hlt
pop
in
mov
out
push
add
sbb
xchg
idivb
jb
pop
repz
nop
out
hlt
lods
adc
pop
xchg
sbb
fimull
pop
mov
ljmp
mov
add
sbb
jmp
imul
mov
cmp
adc
mov
neg
cmp
insb
add
in
inc
jno
dec
add
xchg
lret
xor
or
test
mov
pop
mov
iret
jle
add
lcall
movsl
sub
mov
jmp
push
pop
rcrb
or
mov
aam
orl
std
imul
dec
test
push
mov
neg
call
or
mov
das
nop
sahf
jl
push
leave
mov
notb
add
mov
xchg
lock
mov
shrl
or
shr
push
dec
repz
cmp
das
sbb
subb
pop
cmp
xchg
es
jbe
sub
push
fs
inc
add
inc
mov
jg
mov
sbb
dec
rolb
test
push
in
dec
mov
jno
mov
cs
xchg
jnp
add
xor
cmp
sar
shlb
mov
dec
in
xchg
xchg
mov
push
ss
jle
and
adc
sahf
and
shl
fcomi
les
sub
fcompl
cmc
out
popl
or
aam
mov
cmp
fistpl
shrl
or
cli
imul
ficompl
subl
sub
sub
pop
pop
fdivrl
das
aas
push
mov
cmpsb
or
stc
rcll
in
push
jmp
pop
mov
mov
fwait
scas
push
push
fisubrs
bound
dec
push
into
add
mov
bound
out
pop
push
shlb
mov
dec
adc
imul
push
dec
and
mov
clc
fwait
sbb
aas
aaa
push
shlb
cmpsl
nop
stos
leave
fcom
xor
jg
dec
mov
sbbl
lret
mov
xor
add
or
sbb
lcall
jl
pop
inc
not
xchg
loop
jns
daa
inc
mov
scas
xlat
ja
mov
ja
jnp
pop
xchg
pop
jl
xchg
dec
pop
cmp
shlb
cmp
cmp
outsl
daa
mov
out
jp
ss
cli
or
push
sub
cmp
jg
xor
in
fs
add
shrl
aad
mov
pop
jno
mov
in
inc
pop
rorl
xor
aaa
pop
cmp
mov
outsl
mov
pop
push
pop
inc
pop
movsb
dec
lret
repnz
les
adc
daa
iret
mov
in
movsl
nop
popa
lret
out
hlt
imul
rorl
test
mov
mov
fsub
lea
lds
mov
push
sbb
in
xorl
sub
mov
push
jb
into
mov
and
outsl
mov
iret
or
lods
mov
mov
sub
dec
dec
pop
fidivs
inc
or
fwait
stc
clc
testl
inc
cmp
xchg
cmpsb
pop
movb
aam
cmpl
sbb
pop
movsb
mov
leave
subb
inc
sub
mov
enter
lahf
int
inc
add
leave
xchg
sub
add
dec
xor
and
in
dec
adc
pop
leave
inc
dec
cmp
test
lahf
testb
ja
cmpsl
cld
xlat
loope
push
push
ror
cmp
pop
add
xchg
aaa
mov
pusha
pop
mov
push
mov
or
les
inc
jp
mov
pmullw
cmp
mov
sbbb
into
mov
fs
outsb
outsl
imul
jecxz
pop
sub
xchg
outsl
sbb
insb
ja
je
jmp
sahf
shll
push
mov
int
test
shll
push
cmpsb
fists
cmp
mov
fldenv
cmp
inc
dec
push
das
aaa
enter
in
cmpsl
push
out
lock
insl
xor
ret
mov
fidivl
lock
add
cmp
call
call
push
insl
shlb
outsb
lock
cs
icebp
mov
ficoms
sti
cmp
jmp
movsb
lcall
jecxz
dec
lahf
xchg
jae
mov
cmc
adc
push
adc
sbbl
dec
fisttpll
inc
or
push
cli
pop
int
hlt
inc
push
adc
mov
fisttps
int3
jecxz
mov
in
fldl
and
sub
cmp
in
popa
cwtl
push
sbb
jmp
pop
repz
ret
sbb
in
mov
jl
testl
inc
stos
scas
loop
jno
cmp
pop
pop
xor
clc
nop
or
and
sbb
push
fists
imul
and
dec
xor
bound
arpl
dec
inc
add
pop
mov
or
lcall
rcll
mov
je
xor
xor
lahf
jl
daa
aaa
xchg
movsl
mov
inc
stc
popf
xor
xchg
fld1
jecxz
stc
pusha
out
int3
dec
rcrb
adc
das
sbb
jg
lods
fldcw
gs
cli
sbb
das
dec
arpl
inc
pop
psubb
add
sbb
repz
jl
aaa
or
fcmovnu
inc
xchg
cmpsb
jmp
mov
ljmp
icebp
xchg
pop
fildll
arpl
or
and
push
int3
fdiv
ficompl
xchg
push
inc
sub
or
xchg
push
jp
iret
mov
pushf
sub
movsl
dec
rcr
shl
data16
je
sti
cmp
dec
fisubl
pusha
mov
addr16
loopne
icebp
in
cmp
fwait
ja
pop
xchg
popa
xchg
gs
fidivrl
ficoms
mov
test
mov
or
negb
inc
cwtl
out
out
cmc
ss
and
xchg
push
stos
pop
rol
lods
xchg
pop
iret
adcb
pusha
leave
inc
das
push
jno
adc
jae
add
cmc
cmp
mov
or
ret
mov
leave
push
xchg
mov
inc
je
adc
mov
cmp
leave
fsubl
sbb
pop
inc
dec
fwait
ds
jecxz
lahf
lods
sbb
vmovhps
call
add
inc
dec
push
mov
cltd
ret
lcall
xchg
xor
fdivrl
dec
cld
fidivrl
aad
jge
dec
sbb
inc
push
ja
jle
imul
xor
mov
add
add
insb
jo
sarl
dec
mov
jmp
inc
js
push
cwtl
or
in
jp
push
hlt
cwtl
fimull
loope
hlt
out
fcmovne
testl
stc
aam
pop
fistpl
lret
dec
in
add
in
push
cmpsl
xchg
cmpsb
jae
add
jno
leave
jmp
mov
psubsb
xor
mov
popf
jge
adcl
flds
cmpsb
jno
inc
jg
sbb
nop
inc
data16
mov
xchg
xchg
aas
cmp
push
insb
lret
stos
repnz
es
fcmovnbe
aas
les
adc
mov
pusha
popa
cmp
jnp
in
arpl
arpl
pop
and
mov
in
and
stos
inc
sbb
sahf
jmp
mov
ja
cwtl
jle
mov
xor
adc
loopne
add
xor
pop
pop
push
in
mov
stos
push
lcall
jns
loope
xchg
sbb
hlt
fbld
and
insb
out
cmp
test
xor
or
fsubr
out
xor
push
lds
hlt
fs
mov
xor
fdivr
add
pop
cmp
lock
pop
mov
outsb
icebp
cmp
or
cs
mov
ljmp
ret
push
add
mov
sub
mov
scas
cmp
jle
inc
or
add
pop
loope
mov
icebp
mov
jb
xchg
mov
lahf
lahf
mov
push
jbe
icebp
push
add
mov
fbld
pop
cmpl
mov
inc
mov
push
pop
push
out
or
cmp
stos
inc
mov
xor
pop
xor
lahf
add
test
and
int3
jl
jo
mov
fldl2t
out
fcom
repz
jae
jg
pushw
adc
mov
gs
push
repnz
mulb
mov
ret
add
xchg
pop
fcoms
loope
rcr
adc
xchg
gs
or
call
inc
jle
in
xchg
jnp
fmuls
jp
or
fwait
xchg
ds
mov
aam
pop
mov
pushf
sbb
mov
push
test
or
das
mov
aad
sub
jo
mov
loop
xor
jb
xlat
shrb
loop
sahf
sbb
test
xchg
sbb
shl
sahf
adc
ja
mov
dec
cmp
fwait
mov
daa
inc
and
xor
pop
mov
loope
data16
in
cmp
mov
cmpsl
sub
mov
ss
pop
cltd
mov
and
xor
not
mov
xor
mov
dec
rcll
sbb
push
jl
mov
aaa
and
mov
mov
cwtl
int3
push
enter
inc
sub
cmp
popf
inc
or
into
lds
mov
xlat
dec
gs
iret
xor
mov
inc
push
cmc
fists
scas
out
pop
or
mov
dec
dec
pop
in
ret
xor
dec
enter
scas
out
test
roll
mov
sti
mov
nop
addr16
leave
mov
inc
pop
aad
push
mov
lcall
stos
cs
hlt
inc
outsb
imul
add
sub
cs
adc
mov
data16
icebp
sbb
cli
and
pop
add
cltd
xchg
leave
in
xchg
movsb
sub
mov
out
aad
pushf
mov
or
mov
sub
xor
cmp
hlt
jl
in
scas
loop
jle
pop
loop
jae
out
cli
les
cwtl
frstor
xchg
push
hlt
and
aaa
jae
push
fsubl
imul
fcomps
stc
ret
adc
ss
adc
fistpl
xlat
test
sbb
add
out
inc
or
sbb
sti
sbb
pusha
lds
dec
jbe
int3
leave
mov
push
bound
add
cmc
inc
jecxz
pop
das
add
loop
adc
addr16
lods
and
dec
inc
dec
in
xlat
mov
push
and
stos
or
and
xlat
sub
jno
sbb
idivb
lea
out
push
pop
push
mov
mov
xchg
daa
fdivs
dec
lret
pop
adc
int
imul
dec
cmp
jo
xchg
cmp
or
xchg
and
ret
pop
xchg
xchg
stos
cmp
xchg
ljmp
jae
add
sbb
fmuls
and
lea
inc
aas
push
cmpsb
out
adc
aam
pop
rorl
cmpsl
stos
in
sub
and
xor
push
cmpsb
cmc
stc
sub
sub
mov
and
jno
xor
int
or
or
lods
mov
mov
push
int3
mov
andl
cmc
mov
test
leave
jae
in
pop
testb
movsb
sbb
jno
aam
adc
ja
scas
jle
out
ljmp
in
jnp
neg
pop
push
dec
hlt
xchg
lods
int
loopne
fwait
imul
ret
lahf
mov
push
cmp
pop
shl
fidivrs
sub
js
pop
and
les
out
inc
dec
push
pop
lahf
mov
mov
pop
jl
and
rcrl
pop
xchg
out
mov
mov
cld
cmp
out
les
jge
out
add
in
aad
and
out
jp
mov
xchg
mov
sbb
pushf
lock
lods
adc
mov
or
adc
arpl
outsl
call
imul
sub
mov
imul
dec
das
jecxz
es
cld
mov
loopne
inc
lock
popa
mov
jle
out
lea
ds
jl
ss
adcl
repz
shrb
dec
outsl
jecxz
add
stos
orl
mov
cli
fucomp
push
leave
leave
shrb
mov
in
sub
push
mov
shll
mov
das
add
and
xchg
cmp
adc
add
stos
rcrl
scas
mov
cmc
lods
adc
iret
inc
fldt
dec
ret
fldt
mov
sti
pop
jmp
add
mov
pop
scas
jae
imulb
jns
or
mov
sub
fdivrl
daa
stos
xchg
das
imul
out
xor
dec
bound
popf
xlat
xor
fs
add
mov
faddl
or
mov
xor
lds
out
push
jns
jg
movsl
popa
movsl
pop
push
call
pushf
mov
xchg
jnp
in
pop
cmp
loop
mov
jb
sti
push
mov
fst
dec
sti
ss
mov
xchg
test
clc
mov
clc
inc
dec
das
jns
dec
and
xchg
ret
sub
sub
ds
mov
and
scas
data16
push
push
jmp
jmp
xor
add
stos
dec
push
cmp
rcl
orb
xor
ficoms
cmp
mov
and
cmpsl
push
jne
inc
subb
ja
and
pop
aad
jg
das
xlat
addb
cmc
bound
push
xor
xchg
pop
mov
or
and
pop
jp
movsb
into
adc
inc
bound
out
push
in
xor
jecxz
or
and
sbb
push
mov
nop
mov
cwtl
add
xor
dec
aas
orl
inc
ljmp
cmp
and
push
sbb
adc
loopne
rolb
out
pop
jno
mov
adc
cmp
adc
sbb
and
decl
int
pop
sahf
mov
outsl
sbb
loope
into
movsl
dec
or
jl
dec
sbb
decb
mov
mov
dec
add
jmp
rcr
addr16
inc
and
rcll
addl
mov
icebp
add
and
popf
sbb
adc
sub
dec
xor
xor
cs
jmp
sbb
pop
cmp
push
rcl
mov
ret
cld
sbb
xchg
xchg
sbb
mov
orb
xchg
iret
jl
mov
shlb
gs
in
js
jb
xchg
mov
int
lahf
cli
pop
jmp
add
inc
dec
mov
pop
jge
je
mov
mov
jg
push
pop
pop
imul
push
mov
and
sahf
fs
fbstp
imul
fwait
addr16
mov
packsswb
and
shlb
outsb
mov
fldl
or
das
ss
mov
dec
pop
popf
call
pop
dec
call
dec
and
call
inc
sub
mov
outsl
mov
or
xchg
or
stos
pop
xchg
add
mov
dec
inc
mov
add
add
add
mov
lret
out
sti
sub
mov
out
pop
adc
cmp
cmp
cmpsl
jne
sub
sub
es
sbbb
test
pop
push
stos
fcomps
jecxz
imul
movsb
xlat
negb
scas
in
sbb
int
out
sub
fimuls
inc
test
xor
leave
test
hlt
jo
pusha
adc
sarb
repnz
ds
frstor
jl
mov
mov
dec
mov
rorb
or
push
push
and
pop
lods
xor
cmc
push
jb
mov
pop
js
or
push
lahf
xchg
lcall
test
mov
push
sbb
test
sahf
inc
outsb
into
rorb
lods
cmp
scas
mov
into
mov
add
popa
outsl
xchg
and
nop
loope
gs
or
push
mov
sub
scas
ss
dec
in
or
wbinvd
push
push
cmpl
mov
test
mov
leave
cmp
jno
or
mov
add
cwtl
mov
iret
pop
mov
out
push
leave
cmc
xchg
jo
add
sbb
xchg
lret
decb
imul
mov
xchg
xchg
into
mov
dec
call
and
mov
mov
sbb
dec
mov
fldenv
lea
jl
jle
insb
imul
sahf
lahf
outsb
jbe
xor
mov
mov
pop
push
iret
fsubrl
gs
repz
sub
cmc
test
mov
xchg
xchg
fnstenv
pusha
enter
mov
xlat
push
pop
cmpsl
jecxz
xchg
pop
cmp
cld
insb
sbbb
pop
fincstp
daa
xor
dec
cmp
lds
cmp
pop
adcl
aam
gs
jp
mov
out
arpl
dec
pop
ds
push
test
gs
sbb
inc
repz
inc
enter
aad
fldt
rorb
adc
data16
and
jg
ret
cmpsb
int3
mov
das
nop
lea
sub
lds
loope
mov
fdivl
in
outsb
es
ljmp
or
aas
and
and
rcrl
shl
mov
fidivs
into
add
sbbl
push
inc
push
out
push
int3
push
into
dec
mov
pop
mov
xchg
in
fsubl
mov
rcrl
hlt
out
dec
xchg
repz
into
in
jns
dec
inc
iret
stc
movsl
push
inc
lahf
add
outsl
lea
lea
jnp
xlat
inc
je
sub
shll
lret
call
fdivl
sub
dec
shll
add
xor
addr16
xchg
and
idivl
push
inc
cmpb
pusha
scas
pop
sub
mov
fcomp
mov
mov
pop
outsb
dec
cmp
add
rol
add
iret
push
int3
popa
sub
cli
or
mov
cld
ljmp
scas
mov
mov
mov
rcr
imul
aaa
test
mov
imul
jg
test
xor
ds
std
cmc
fldl
mov
not
jbe
call
int
inc
rcll
fldcw
stos
lcall
jbe
aaa
push
push
scas
pushf
xchg
js
call
inc
out
enter
in
inc
mov
inc
or
mov
pop
xchg
xchg
stos
pop
mov
mov
push
lahf
mov
ret
negl
push
mov
inc
subl
loopne
lea
adc
jle
xor
xchg
cmp
andb
push
push
aaa
aam
xor
movsb
movsl
aas
test
mov
sbb
push
insb
int3
or
xchg
inc
ret
rcrl
and
cli
lds
or
das
lods
mov
mov
inc
mov
and
in
push
mov
inc
pop
jg
jno
xchg
pop
or
loop
push
mov
and
in
pop
and
push
out
sbb
outsl
inc
sahf
fdivrs
into
lds
cmp
daa
cmp
lods
add
mov
fistpll
adc
sbb
in
jo
push
repnz
imul
cmp
pop
push
xchg
aaa
add
out
mov
lods
pop
inc
loope
hlt
or
fstpt
xchg
sbb
bound
lods
fwait
loop
cmovp
daa
stos
js
mov
lods
mov
jo
loop
jne
outsb
mov
popf
cmpsl
mov
add
and
or
call
loopne
notl
loop
sbb
fistl
clc
mov
mov
cs
sahf
push
imul
and
or
cmp
mov
mov
cmp
cmc
jbe
lret
fcmovne
mov
jl
jnp
adc
xchg
jge
sub
out
push
add
fs
mov
mov
sbb
xchg
sbb
xchg
jg
push
aas
add
xchg
sahf
arpl
jle
dec
icebp
mov
add
adc
adc
jno
sub
mov
pop
cmp
mov
pop
adc
cmp
inc
fnstsw
xchg
sub
je
in
or
shrl
nop
mov
ja
mov
out
lcall
data16
or
in
sbb
sbb
inc
mov
mov
movsb
jge
repnz
dec
cmpsl
mov
cmp
push
scas
fwait
add
cmp
jns
ret
bswap
mov
adc
sbb
ror
scas
ds
arpl
cmp
xor
scas
or
stos
shll
sub
jl
cltd
jne
outsb
rolb
bound
push
repnz
popa
aam
out
mov
dec
ljmp
cs
pop
cmp
cmovns
and
bound
adc
lds
or
add
xchg
lds
add
and
enter
ss
shlb
sub
pusha
movb
and
jge
imul
mov
aaa
mov
add
add
shlb
imul
rcll
push
ret
lods
push
lods
aam
mov
mov
sbb
fs
outsb
add
out
imul
mov
mov
mov
pop
mov
shl
jbe
lods
jmp
and
loopne
repnz
sub
push
cmp
hlt
jle
xchg
ss
dec
adc
cmp
dec
pop
mov
movsl
and
nop
fdiv
sub
nop
daa
jne
jge
cwtl
repz
loopne
into
aad
xor
mov
popa
mov
stc
mov
or
or
xchg
cli
ret
push
ret
aaa
adc
scas
mov
or
jmp
insl
mov
loopne
xor
inc
xchg
sub
add
ss
rcrb
cmc
les
mov
pop
sub
arpl
add
adc
xor
aas
test
iret
push
xchg
rolb
jmp
fisttpll
sub
les
pop
xchg
icebp
adc
pop
out
bound
sbb
lahf
jp
stos
mov
mov
inc
mov
add
arpl
xor
xlat
and
dec
scas
mov
movsl
cs
test
mov
sahf
sub
add
leave
adc
mov
jecxz
ss
xchg
jbe
mov
mov
xor
inc
daa
arpl
aaa
addr16
aad
push
out
popa
jb
inc
lods
dec
xchg
int
mov
pop
fmul
adcl
add
xor
sub
pop
or
push
fsts
jno
je
xchg
nop
or
push
jb
movsb
fldlg2
lret
insl
push
sbb
repz
loop
and
scas
add
pop
add
and
push
movsb
fmul
push
push
push
addr16
xor
idivb
and
and
mov
loop
fnstenv
mov
adc
les
subl
stos
push
out
into
mov
leave
inc
int
sarl
out
sub
push
out
fistpl
cmp
mov
scas
xor
mov
cld
pop
ss
adc
repz
mov
pop
add
push
into
push
outsb
xchg
cwtl
icebp
xchg
shl
fistpll
int3
dec
push
int
add
mov
sbb
insl
sub
out
xor
sarl
cli
cmp
out
push
mov
jp
clc
xchg
inc
or
inc
test
outsb
arpl
or
sub
movl
and
sub
mov
ljmp
mov
push
cmp
sbb
scas
inc
mov
cmp
loopne
adc
fwait
jo
cltd
loopne
mov
pop
xor
jmp
lock
push
jecxz,pt
mov
dec
icebp
add
jmp
enter
inc
movnti
mov
cs
hlt
aaa
icebp
mov
lcall
push
add
insb
adc
dec
push
lcall
mov
insl
add
sbb
xchg
repz
dec
dec
shrl
or
je
push
adc
xchg
jo
sub
aam
js
adc
aaa
lret
hlt
mov
rolb
mov
sbb
push
push
dec
push
sub
adc
and
push
push
in
sbb
mov
cmpsb
iret
jae
pop
in
pop
shrl
pop
and
dec
jno
adc
movsb
addr16
xchg
in
popf
test
xchg
icebp
es
bound
or
mull
and
hlt
xchg
test
adc
popf
pop
mov
icebp
jmp
add
sub
leave
jo
and
mull
mov
ret
mov
aas
mov
and
addl
fs
jecxz
sbb
aas
push
addr16
jmp
mov
push
pop
push
testl
scas
and
mov
mulb
mov
mov
cmp
push
jae
and
fidivl
mov
out
ja
int3
cmp
pop
dec
or
push
test
insb
scas
out
pop
xor
or
out
xor
mov
jecxz
inc
mov
aaa
cmp
imul
dec
pop
inc
inc
es
xchg
xchg
mov
je
jb
xor
in
adc
sub
mov
lret
lret
xor
or
pop
push
es
xor
xchg
fistps
pop
dec
rcll
or
jg
movsb
push
pop
insl
push
imul
jnp
mov
cmp
jbe
cmc
xchg
inc
bswap
and
out
scas
lock
nop
sti
addl
fwait
and
sbb
rorb
add
jmp
lcall
push
inc
fdivs
test
push
mov
sbb
fdivrl
adc
outsb
jmp
xor
jns
iret
fmull
push
rcl
test
call
scas
pusha
cmpsb
dec
xor
cmp
roll
mov
movsb
push
lods
imul
cmpsb
sti
out
repz
mov
cmp
loopne
aas
add
loope
jge
jnp
jne
out
pop
push
push
cmp
int3
xchg
lods
jmp
add
cmp
hlt
push
add
mov
pop
jmp
and
mov
mov
mov
sbb
fldenv
mov
mov
or
adc
iret
out
enter
sbbb
sbb
sub
sbb
out
and
xorl
stc
sbb
or
popl
inc
aad
imul
idivl
cmp
pop
flds
divb
inc
cwtl
inc
aaa
ret
test
aaa
mov
push
ret
cld
outsl
insl
gs
xor
jp
andb
mov
cmp
aad
mov
cs
lcall
sub
int
cli
shr
inc
je
ret
cmovbe
pop
pop
pop
dec
pop
in
mov
rclb
xor
sbb
out
es
lcall
pop
frstor
or
mov
movsl
push
xor
fildl
pop
inc
xor
fmul
scas
das
and
push
mov
jge
jge
push
xchg
sub
bound
mov
xchg
rol
sbb
mov
mov
js
pop
push
inc
jg
mov
fnsave
sbb
or
js
shll
stos
jns
js
and
or
pop
cmp
ficoml
mov
push
inc
push
and
lcall
sub
pop
outsb
aas
jl
sar
int3
or
jp
lahf
test
int
out
xchg
cmp
adc
test
data16
out
mov
pop
jbe
test
push
dec
lret
lahf
jns
insl
add
jp
in
hlt
mov
push
xor
aad
push
xorb
mov
cmp
stos
enter
outsb
adcl
clc
test
mov
in
arpl
cli
lods
arpl
xchg
int3
jns
fnstenv
into
jb
adc
mov
adc
movsl
xchg
ja
pop
xorl
xor
int3
imul
jecxz
test
dec
popa
sbb
loopne
scas
sbb
inc
out
dec
sbb
mov
mov
cmp
sub
jecxz
dec
or
mov
lea
lahf
cwtl
dec
out
bound
outsl
dec
sbb
out
sahf
imul
push
pop
movsb
mov
sar
mov
lea
sbb
lret
xlat
stc
or
into
rclb
mov
xchg
inc
sub
adc
mov
xchg
lret
leave
int3
adc
test
pop
fnsave
icebp
xchg
xchg
xchg
sbb
imul
sub
jns
ret
xchg
jne
dec
lock
mov
sti
inc
into
and
mov
xchg
xor
add
nop
or
rolb
aas
pop
sub
loopne
sbbb
cmpsl
imul
and
pop
cmp
push
inc
aas
and
xor
and
mov
sahf
xor
cs
push
fdivrp
cmpsb
pop
mov
fs
clc
cmpsl
inc
sub
xlat
icebp
adc
imul
psrlq
sbb
mov
push
sbb
mov
sbb
xor
into
push
xor
mov
or
in
test
lahf
add
lret
lahf
imul
jno
outsb
dec
xchg
push
add
out
jae
stc
jp
out
mov
mov
loop
lcall
popa
sub
cmp
pop
fisttpl
and
test
jne
psrlw
mov
jg
jmp
sub
jo
jns
jl
js
int
cmp
xchg
adc
mov
nop
push
add
int3
das
mov
add
mov
sub
lock
push
sti
aam
push
cmp
mov
pop
mov
adc
pop
mov
fldcw
flds
sbb
mov
jecxz
enter
mov
cmp
dec
lret
mov
pop
lock
lret
fsubr
mov
push
loope
jb
out
loop
daa
add
mov
test
lods
shl
push
cmp
and
cmp
inc
mov
fld
int3
aas
cmp
mov
lcall
lret
ret
jo
xchg
addr16
mov
cmpsb
fstp
mov
adc
adc
jmp
jecxz
inc
jg
push
dec
arpl
ss
mov
into
adc
and
lahf
test
jae
sbb
xchg
and
jmp
sbb
stos
cmpsl
cmc
and
push
jmp
and
shlb
mov
push
mov
icebp
lods
shrl
sbb
pusha
mov
xchg
cmpsl
pop
xorb
or
xchg
or
xor
inc
pop
in
lret
int
test
jp
lods
std
out
jg
test
shlb
or
test
mov
movsb
dec
xchg
repnz
js
popf
xchg
fwait
inc
shll
adc
mov
aaa
repnz
enter
mov
orl
push
aad
and
addr16
fimull
cli
xor
into
cltd
jp
hlt
js
fimuls
add
fadd
fsubr
or
or
pop
call
sti
rolb
push
sub
mov
jne
out
push
cmp
jnp
jo
mov
repnz
push
aad
in
xchg
xor
fsubs
cmp
arpl
push
in
ret
adc
shll
dec
fistps
mov
sub
outsb
paddq
test
imul
mov
inc
das
sub
sbb
mov
loope
test
es
stos
pop
xor
int
insb
hlt
and
loopne
push
xchg
xor
mov
xor
out
pop
shld
in
lds
mov
scas
inc
insb
push
cmpsb
or
fs
movsb
gs
aad
sahf
jbe
pusha
addr16
mov
movsl
ljmp
sub
sbb
fldl
cmp
test
jg
sbb
movsl
mulb
pop
sbb
push
and
mov
std
out
outsb
jp
aam
xor
movsl
sub
bound
bound
dec
and
imul
jg
cmp
xchg
mov
or
adc
pushf
sbb
mov
add
cmp
sahf
divl
mov
sub
mov
ja
nop
jp
xor
add
pop
push
fistl
xchg
fwait
mov
lods
jge
aad
out
inc
lahf
xor
jns
sbb
into
add
scas
jne
inc
mov
sub
aas
lods
or
push
movsb
loop
adc
adc
sbb
jle
inc
pushf
pop
dec
mov
ror
jp
lea
sbb
sbb
insl
or
sbb
or
cmp
jecxz
jae
xchg
shr
mov
int
jae
gs
std
mov
pop
jnp
lcall
ljmp
aad
dec
pop
mov
jno
and
dec
mov
xchg
add
test
lahf
insb
pop
push
pop
iret
sbb
lods
xor
repnz
cmp
jns
or
inc
mov
hlt
jb
push
dec
mov
out
cmp
jne
and
inc
addr16
and
push
clc
mov
pop
repz
rcl
test
mov
cld
cmp
mov
pushf
xchg
ja
push
jb
ret
pop
or
pop
mov
cmp
and
xchg
sbb
push
sub
and
jl
dec
mov
lcall
xchg
ljmp
test
mov
push
out
leave
hlt
xor
sbb
xor
ljmp
pushl
in
jb
scas
mov
sbb
fs
mov
mov
push
jo
jno
jb
push
hlt
cld
cld
call
es
adc
sbb
pop
pushl
xchg
jle
insb
pop
dec
dec
push
ret
aad
cwtl
push
cwtl
icebp
add
cld
add
and
scas
jb
push
adc
gs
aas
mov
outsb
lret
lods
dec
std
or
add
arpl
incb
or
sti
xchg
and
dec
mov
or
lods
cmp
fistl
mov
in
mov
test
insb
data16
je
lea
mov
sbbl
mov
adcb
pop
enter
sbb
outsb
popa
std
and
jae
pop
pushf
test
lds
or
or
jo
into
add
mov
dec
xchg
add
adc
addb
jns
mov
ret
int3
add
fidivrl
gs
jecxz
pop
add
mov
ss
mov
outsb
dec
adc
and
jmp
lock
add
sub
xor
xor
stos
inc
add
xchg
cmp
in
fsubr
mov
lcall
pop
jmp
push
lret
jl
adc
push
add
or
jg
outsb
repz
scas
jl
add
dec
push
mov
daa
fs
lcall
fcmovbe
sbb
cmp
out
mov
and
inc
cltd
rcr
or
addb
mov
loop
scas
lock
addr16
push
bnd
ss
in
push
mov
xchg
sbb
dec
xchg
lahf
push
das
ficoms
or
ret
mov
fldl
lods
dec
ds
push
mov
aad
fnsave
ficomps
in
xchg
leave
jo
into
mov
cld
out
cmp
outsl
aas
add
shlb
mov
pop
rep
add
push
dec
adc
add
mov
ffreep
shrb
fcomip
jmp
hlt
lret
jmp
xchg
outsl
xchg
mov
sub
into
mov
test
sub
rcrl
adc
jge
or
test
out
dec
scas
mov
daa
or
pop
notb
and
jb
xor
push
pop
rcrb
lea
jae
mov
stos
mov
ljmp
push
bnd
inc
iret
test
xlat
stos
ja
mov
sarb
repnz
test
mov
lret
mov
and
subb
push
adc
cmpsl
rorl
xchg
fucom
sbb
loopne
sbb
movsb
add
add
rol
sbb
xorl
xchg
rcrl
add
fs
adc
inc
fs
mov
in
xchg
jb
xor
xor
and
fadds
ljmp
pop
and
sbb
outsb
and
xor
xchg
fbld
outsb
aam
inc
pop
jnp
mov
hlt
testl
adc
int
jb
jp
xchg
inc
mov
ljmp
ror
ja
add
js
xchg
in
stos
cmp
jae
mov
lock
fadds
lret
pop
fnstenv
xor
movsb
jl
xlat
mov
pop
in
jno
jo
sub
dec
sbb
push
fbstp
stc
sub
mov
les
push
mov
jne
ret
fimuls
mov
lds
daa
xor
test
pop
and
call
xchg
dec
cmc
aad
inc
pop
inc
scas
test
xor
jae
mov
mov
sahf
sub
mov
enter
dec
cs
andb
das
aad
rorb
mov
inc
cmp
sahf
ret
and
hlt
xchg
ds
sbbl
xor
rclb
mov
fcomip
mov
call
lds
sbbl
dec
pop
scas
lea
repnz
dec
leave
or
pop
cld
push
test
xor
sub
jge
shlb
in
jl
jae
mov
popa
fists
or
lcall
jge
ret
inc
adc
and
pop
pusha
inc
jo
mov
cmp
jnp
dec
sbb
sub
fidivrs
sbb
addr16
fcmovne
hlt
roll
adc
outsb
pop
dec
scas
pmaddwd
or
xor
or
inc
shrb
pop
xor
aaa
inc
loopne
lods
idivl
lock
pop
icebp
cld
jge
nop
cwtl
sbb
pop
cmpsb
in
sub
adc
sub
xor
mov
adc
adc
inc
ret
ret
mov
jecxz
shl
inc
mov
cmp
test
and
xor
mov
push
jb
std
sar
jo
pop
into
or
add
adc
dec
cmp
std
mov
sbb
imul
add
mov
je
scas
loopne
mov
daa
add
add
jno
inc
jnp
dec
and
lock
or
sbb
sti
pop
out
cmp
mov
cmp
mov
xor
mov
push
movl
das
xor
sub
pop
lods
les
mov
aas
mov
lds
pop
push
xchg
pop
loope
outsb
mov
sbb
mov
mov
adc
bound
mov
pop
rorl
aam
jge
xchg
dec
in
orb
add
cmp
pushf
data16
mov
aam
jg
mov
fcomps
mov
rclb
fists
sbb
xor
loope
test
dec
dec
loope
addr16
and
ss
sahf
sub
ja
mov
cmpsl
or
imul
movsl
hlt
push
and
xchg
pushf
out
loope
rcr
push
jno
and
lahf
ret
inc
mov
jne
add
mov
and
dec
cli
out
jl
scas
pop
mov
imul
xor
out
xor
test
add
dec
cmpsb
dec
in
fisttpl
hlt
cmpsb
shlb
add
mov
pop
adc
arpl
mov
icebp
pop
outsl
gs
cld
lock
ret
xchg
pop
mov
std
lcall
mov
insb
add
push
dec
xchg
xor
movsb
xchg
xchg
gs
mov
roll
mov
fcompl
imul
js
in
dec
aas
dec
popf
fbstp
xchg
cli
and
push
mov
push
rclb
pushf
mov
cli
dec
or
mov
jle
jmp
shl
and
dec
popf
cmpsb
mov
dec
sub
jne
in
imulb
xor
mov
ja
sub
push
fidivrs
cld
mov
jmp
nop
push
dec
add
shrb
jno
repz
inc
test
sbbb
hlt
xchg
dec
mov
arpl
xlat
mov
les
add
insb
mov
sbb
sbb
fimull
xchg
sbb
mov
jp
jnp
pop
cmp
out
loop
add
test
jno
pop
dec
dec
test
jbe
xor
cmp
fcomps
movl
mov
fs
test
xchg
push
lret
iret
xlat
fiaddl
add
mov
dec
mov
rcrb
xor
inc
push
dec
fcmovne
or
adc
fsubrs
cmp
pop
jne
sbb
inc
ss
mov
pusha
inc
jne
gs
test
cmp
stos
test
or
std
data16
pop
or
adc
rcrl
in
call
add
lcall
fwait
testl
mov
sub
pop
nop
js
adc
adc
cmp
adc
lret
rolb
sub
push
nop
in
ss
lds
xor
je
ds
pop
pop
in
mov
push
std
dec
aad
cmp
pusha
xchg
inc
adc
push
clc
or
add
das
pop
mov
addl
and
lods
xchg
mov
lret
nop
xor
cmp
shlb
dec
adc
popa
mov
jge
iret
sub
mov
insl
dec
mov
pushf
neg
fistps
xor
sbb
xor
jg
inc
sti
pop
test
fs
xchg
adc
push
sbb
scas
add
stc
in
cs
ljmp
nop
out
dec
lock
in
and
or
pop
call
jbe
or
adc
mov
mov
dec
scas
adc
mov
or
es
clc
divl
mov
push
cmp
daa
jge
jns
inc
fstps
pusha
inc
aaa
or
add
jbe
dec
xchg
cmp
sub
cmpb
aas
add
pop
repnz
push
aaa
scas
sahf
pop
jae
mov
in
movsb
dec
mov
popa
and
mov
cs
add
fmull
or
repz
out
push
popa
push
pop
int3
repnz
in
add
scas
pushf
int
data16
sub
icebp
adc
out
pop
mov
cld
add
out
dec
mov
dec
fcoml
test
js
test
or
pop
sbb
jae
push
iret
add
pop
and
sub
or
shlb
dec
inc
mov
gs
sbb
dec
idiv
daa
push
mov
and
ret
xor
push
jmp
call
add
pushf
roll
push
jle
fistl
dec
add
outsb
clc
sarl
outsb
adc
arpl
fdivs
inc
pop
movsb
or
add
in
or
outsb
jbe
inc
and
mov
dec
xchg
add
add
aaa
lret
push
imul
push
xor
data16
sub
cmp
sbb
test
cld
pop
pop
jns
int
xor
int
inc
outsb
inc
movsb
adc
adc
hlt
enter
fnstsw
aas
popf
xchg
rcrl
push
imul
mov
insl
dec
pop
pop
pushf
lods
sub
mov
loope
add
cld
xlat
xchg
nop
loop
sub
dec
aam
repz
add
aad
stos
loop
push
lock
cmp
daa
scas
add
push
mov
lock
push
pop
popa
int3
jbe
adc
xchg
and
test
loopne
mov
xchg
sbb
cmp
mov
fsubl
andb
aad
mov
clc
jae
push
pusha
fisubrl
jbe
push
addr16
rorb
mov
push
mov
push
iret
add
cmpsb
stc
sti
mov
mov
xchg
fdivl
sbb
xchg
fdivrp
ficomps
loopne
test
das
inc
mov
out
adc
add
pop
push
loope
enter
imul
dec
xor
aaa
hlt
cmp
test
fsubl
pop
inc
inc
sub
ljmp
xchg
idivl
aas
mov
inc
inc
xchg
and
cmp
push
int
jb
pop
mov
gs
sbb
ret
xchg
aas
mov
inc
pop
jno
mov
into
aam
test
lahf
xchg
out
aam
xlat
js
jp
sub
xchg
arpl
dec
inc
ficompl
aas
arpl
js
aad
outsl
sbb
lahf
lods
stc
push
imul
xchg
sub
popf
jno
cltd
pop
mov
jmp
popf
push
sub
aaa
lret
xor
popf
mov
enter
andl
je
xor
mov
ret
outsb
push
mov
jae
mov
jmp
outsb
in
pop
sarl
leave
and
pop
out
cmp
adc
pop
cmp
imul
pop
or
push
lcall
test
cli
dec
aas
ror
push
fimuls
sbb
push
add
jecxz
push
xchg
enter
push
repnz
jo
jns
mov
rclb
and
cwtl
arpl
js
jae
sbb
test
jmp
daa
repnz
jp
data16
xchg
gs
mov
test
andb
cmp
xor
add
lds
push
dec
call
nop
pop
dec
push
or
mov
inc
adc
shlb
adc
xchg
fidivrs
mulb
jno
xor
inc
adc
dec
outsl
or
sbb
xchg
inc
lea
insl
push
adc
bound
ljmp
movsl
aas
inc
cmpsb
mov
fstp
jns
add
pop
popf
js
pop
adc
popf
lods
fsubl
jbe
xor
movsb
or
iret
mov
mov
adc
repnz
mov
call
test
movsb
mov
jl
int
xchg
xchg
inc
stc
pop
dec
incb
adc
arpl
add
push
arpl
iret
int
das
icebp
enter
lods
nop
and
aaa
jl
es
neg
xor
fwait
ss
loope
sahf
xchg
and
xchg
sbb
pop
in
and
aaa
jg
mov
lods
mov
cmp
mov
pop
rcrl
inc
jns
add
mov
outsb
jmp
cmp
in
dec
cmc
add
cmp
das
xchg
mov
std
addr16
cltd
mov
sbb
enter
mov
shr
insb
jl
sbb
jnp
adc
cltd
icebp
cmpsl
mov
mov
out
sub
jmp
and
or
jge
cmc
jg
ljmp
cmp
mov
lahf
push
add
xchg
push
or
aad
ror
aas
leave
cli
mov
jg
pop
cmpsl
dec
sbb
push
fwait
jb
push
sbb
and
or
shrb
dec
jb
in
ret
popf
mov
lret
pop
adc
pop
out
or
clc
imul
in
lahf
daa
mov
push
in
jg
loope
mov
pop
xor
out
push
mov
repnz
add
sarb
mov
sti
jo
xchg
ret
jl
aam
xchg
jmp
test
and
fcomp
inc
mov
or
push
cmpsb
jge
bound
or
lret
cmc
or
pushf
mov
aas
scas
cmpsb
sbb
xchg
outsl
add
insl
mov
js
ss
mov
xlat
pop
aas
in
jecxz
je
leave
xor
inc
dec
jl
in
or
ja
mov
sub
jno
mov
and
sub
das
pop
and
les
sub
mov
fdivrs
dec
xor
add
dec
cmp
out
enter
in
xlat
add
loop
daa
ret
xchg
out
clc
sub
cmp
push
imul
mov
add
adc
in
mov
pop
cmp
adc
repnz
push
orl
mov
inc
jbe
les
jne
in
shrb
cmp
addl
jmp
xor
or
push
mov
iret
adc
mov
sahf
push
aaa
std
push
xchg
daa
int3
mov
sub
xchg
iret
inc
imul
pop
and
in
lods
aas
jle
pop
mov
scas
es
push
addr16
cmp
xor
xchg
inc
inc
push
xor
ljmp
icebp
nop
mov
inc
inc
dec
jge
pop
and
and
sub
dec
movsb
dec
jae
fcoms
cld
repz
jle
mov
enter
ss
sub
popf
in
out
leave
sbb
pop
jbe
inc
fs
xchg
enter
adc
sbb
mov
mov
adc
imul
shlb
ret
movsl
sub
and
fldenv
int3
movsb
pop
mov
mov
rorl
in
movsl
pop
xchg
mov
lcall
movsb
cwtl
insb
sub
gs
and
imul
and
cmp
push
jae
repnz
es
sub
sub
mov
repnz
mov
fs
and
cmp
divl
bound
pop
aas
adc
cmp
mov
jne
adc
aad
xchg
push
jae
jle
lods
arpl
mov
fs
shll
adc
mov
gs
xchg
add
xchg
jns
xchg
jp
jle
xor
mov
mov
gs
lods
mov
adc
fdivl
cli
or
xor
adc
cld
push
add
movsl
xchg
in
adc
loope
loop
repnz
shll
ja
jl
mov
les
xchg
jne
mov
popa
mov
mov
int3
inc
push
adc
dec
stos
and
dec
xchg
inc
stos
lret
pop
sbb
jbe
dec
dec
das
sub
xor
jns
outsb
rorb
sbb
scas
in
inc
xor
out
jo
mov
xor
pop
inc
mov
jns
sub
cli
mov
out
dec
dec
leave
push
push
adc
and
mov
shlb
movsb
dec
xchg
pop
inc
scas
cmpsb
adc
out
in
out
cmpsb
sahf
inc
jmp
out
fwait
ret
mov
xchg
push
shrl
setno
dec
jns
dec
adc
scas
push
pop
jl
dec
dec
sbb
inc
push
fwait
dec
in
ss
push
movsl
scas
inc
and
sbb
outsl
mov
movsb
pop
cwtl
clc
inc
xlat
adc
cmp
pop
xor
push
stos
aas
add
mov
test
xchg
mov
xor
insl
push
add
cmp
push
idivl
nop
popf
dec
cmpsl
stos
pop
xor
gs
xchg
cld
enter
mov
idivb
cmpsb
push
imul
pushf
sbb
pop
adc
push
sbb
mov
outsb
jae
mov
divb
aas
add
cwtl
dec
cmp
xchg
insb
xor
test
std
je
cmp
fisttpll
lea
cmp
push
lcall
push
mov
cld
mov
popf
mov
in
add
add
jae
lods
jmp
or
nop
ret
xchg
inc
popa
pop
ds
mov
rcrb
rorb
jl
fcompl
loopne
js
icebp
dec
movsb
ror
cs
bound
add
aad
mov
nop
ss
aaa
mov
add
adc
aam
xchg
bound
aaa
data16
xchg
sub
lods
lret
dec
xchg
scas
js
and
iret
lock
lds
pop
pop
lahf
outsb
hlt
cld
int
sub
and
fldl
fsincos
mov
and
pop
clflush
push
dec
jg
xor
inc
outsl
sub
mov
sbb
lods
shl
roll
xchg
popf
adc
jnp
sahf
sub
sbb
cld
mov
mov
popf
mov
sahf
dec
lcall
jno
in
push
and
or
loope
sbbl
jg
imul
xchg
sbbb
fs
rcrl
pop
out
iret
lret
adc
scas
fimull
mov
pop
icebp
lods
cmp
popa
add
fcmove
pushf
gs
call
pop
cwtl
test
gs
in
push
into
jb
test
push
rcrl
mov
xchg
xchg
in
stos
pushf
mov
push
or
gs
movsl
push
inc
jecxz
mov
mov
stos
dec
lret
sbb
mov
frstor
daa
cmp
ljmp
xor
shll
pop
je
out
push
mov
inc
add
in
push
addr16
jge
prefetchw
sub
sbb
xchg
cs
mov
push
mov
xor
cmpsl
jno
stc
xchg
in
cmp
inc
repz
cmpl
mov
ficomps
notl
mov
push
sbb
mov
fs
add
stc
mov
insb
xor
test
pop
sbbl
es
fdiv
cmpsb
lds
ss
xlat
popa
jmp
dec
sub
enter
das
sub
cmpl
or
lea
xchg
and
test
test
ja
mov
or
ss
sub
pop
push
outsb
subb
and
push
add
sbb
loope
inc
push
es
jbe
lods
dec
fwait
mov
or
jg
push
roll
xorb
movsb
xchg
bound
mov
int
pop
ja
mov
push
cs
lret
popf
lcall
adc
jge
mov
jmp
xchg
sbb
int
mov
lock
or
xlat
or
push
jle
sbb
xchg
push
sbb
sub
xchg
cli
dec
mov
sub
sahf
sub
clc
dec
test
sbb
add
sub
es
cmp
sbb
aas
fnstsw
test
ljmp
cmpb
pop
inc
ss
out
pushf
inc
das
mov
jae
ja
cmp
ficompl
scas
lds
decb
gs
les
into
xor
mov
int
mov
jp
push
shrb
ja
mov
test
stc
add
dec
xchg
daa
inc
adc
aas
mov
xlat
je
and
push
subl
inc
mov
lahf
xor
in
mov
dec
push
jl
mov
dec
aas
into
lock
pop
add
js
fwait
pop
jecxz
setle
lret
or
inc
inc
sarl
mov
aad
mov
mov
push
push
es
and
inc
out
repz
daa
push
mov
arpl
adc
lods
adc
scas
mov
jl
subb
pop
mov
jo
xchg
inc
lods
mov
movsl
or
mov
xchg
or
add
out
sub
sub
pop
sub
gs
mov
add
adc
and
or
jle
sub
negb
cmp
lock
rcll
repnz
fnstcw
push
movb
or
repnz
hlt
sub
leave
lret
xchg
test
in
stc
mov
test
fnstenv
sti
shll
jnp
sub
xchg
addr16
mov
popa
cmp
gs
mov
insl
test
loopne
cwtl
xor
ljmp
daa
movsb
add
arpl
rcr
push
cmp
cmpsl
negl
insb
lods
mov
scas
cmp
jmp
pop
out
inc
lods
add
test
jmp
or
lret
inc
cmp
mov
cltd
push
scas
mov
xlat
push
insb
bound
hlt
pop
aaa
pop
pop
pop
daa
mov
adc
and
in
mov
ret
loopne
je
pop
test
add
sub
and
dec
and
or
push
sub
cmp
mov
mov
das
fcmove
test
or
pop
scas
dec
dec
xchg
cs
xchg
cmp
bound
dec
and
push
jo
or
pop
inc
es
test
adc
pusha
mov
into
mov
xlat
mov
nop
ret
in
jnp
fwait
js
aaa
ret
in
mov
adc
lret
addb
push
inc
mov
add
sub
mov
inc
add
pop
adc
pop
adc
xchg
sbb
push
jg
icebp
lcall
push
movsb
es
inc
jecxz
test
or
in
outsl
fcompl
and
xchg
sub
je
pop
xchg
push
hlt
stos
push
std
or
int
cld
movsb
les
cmp
scas
jl
cmpsl
push
nop
pop
les
dec
test
call
xchg
push
aam
jb
call
inc
or
insb
les
daa
cmp
out
inc
arpl
in
adc
imul
and
aas
jno
aad
popa
lods
leave
xchg
jbe
or
push
lret
cmp
mov
pop
and
sti
pop
mov
insb
mov
and
fldl
add
cmp
sbb
mov
push
mov
xchg
mov
add
push
adc
xchg
aad
push
or
je
push
in
mov
pop
jns
cmp
ja
test
or
adc
lret
or
inc
enter
fcom
mov
jle
fs
and
in
push
dec
xor
clc
sub
ret
ja
mov
and
lock
repz
adc
push
and
xlat
sbb
or
out
sahf
insl
movsl
aaa
pop
xor
dec
pop
jg
subl
ret
push
inc
fs
mov
scas
roll
xchg
ja
or
xlat
lahf
out
stc
lods
orl
call
sub
testb
inc
cltd
ret
shrb
push
dec
xchg
pop
dec
jno
in
jbe
and
mov
cmp
push
inc
mov
fsubrl
inc
adc
mov
mov
leave
rorb
aas
stc
cltd
test
js
pop
movsb
mov
mov
ss
lods
fnsave
out
pop
ret
aas
stos
mov
dec
out
rcll
xor
adc
gs
add
xor
push
je
mov
adc
fwait
and
loop
pop
inc
mov
movsl
cmp
xor
push
fcoml
mov
sbb
negl
divb
lret
adc
outsb
test
cmp
in
lcall
test
add
push
ja
es
xchg
pop
faddl
lea
addr16
adc
test
incb
lea
push
mov
push
mov
or
sub
add
and
sti
hlt
xchg
mov
mov
mov
sahf
jo
mov
add
add
sub
loop
std
add
cmp
push
cmpsl
rclb
js
jmp
mov
mov
mov
adc
and
pop
fmull
xchg
fadds
jmp
sbb
cmp
push
sub
cmpl
out
pop
fistpll
inc
fidivs
sti
cmc
dec
or
outsl
mov
push
js
adc
xor
shrb
push
mov
cmp
dec
sbb
lcall
loopne
fldcw
loopne
ljmp
test
mov
loope
scas
push
int
or
cmp
jnp
or
ss
mov
mov
loopne
cwtl
sub
xchg
mov
daa
mov
sahf
aaa
fistpll
cmova
cwtl
clc
sub
pop
fwait
int
in
daa
pop
xor
mov
rolb
sub
push
push
int
decl
sbb
mov
jl
cmp
stos
mov
mov
inc
push
cmp
pop
stc
lods
lea
mov
movsb
cmp
adc
das
pop
dec
cmp
nop
orl
mov
mov
dec
filds
arpl
cmp
dec
loop
push
fistpll
loop
inc
dec
and
push
scas
sub
aad
mov
lods
sub
mov
insb
xor
loop
test
mov
inc
lret
or
test
lahf
test
stos
adc
mov
push
fistpll
insb
stos
or
arpl
inc
add
andb
xor
popf
cmc
out
ss
cmc
adc
in
dec
push
into
sbbb
sbb
xchg
adc
push
jge
aam
sub
js
cs
testl
sbb
xor
cmp
jb
insb
shl
pop
fwait
xchg
cmp
sbb
sub
in
loopne
push
jbe
cmp
pushf
pop
adc
outsl
lcall
stos
jg
gs
leave
sub
data16
xor
inc
jmp
inc
mov
std
jo
lea
test
jne
cld
lcall
mov
aam
lods
xor
dec
sbb
jne
movsl
rcrl
jne
enterw
push
pop
inc
lcall
inc
sub
mov
imul
enter
fdivrl
outsb
sub
mov
movsl
lock
pusha
inc
ja
or
aam
sti
jb
lahf
inc
dec
cmpsb
dec
push
nop
mov
fcomp
dec
lea
mov
cltd
psrad
mov
orb
aam
jecxz
loope
mov
sbb
jno
les
data16
movl
cs
daa
pop
hlt
ljmp
fwait
adc
sbb
call
push
push
adc
loop
sbb
jae
jo
adc
mov
sti
popf
pop
sar
in
fld
out
mov
dec
jg
lods
out
test
shll
pusha
aaa
jge
jbe
xchg
dec
mov
outsb
mov
das
sahf
mov
xchg
mov
stos
pop
jmp
out
lea
xchg
out
mov
add
add
daa
sub
mov
pushf
adc
add
and
lods
popf
or
mov
movsb
repnz
daa
push
nop
sahf
ret
add
dec
sub
je
fcomp
ret
iret
or
test
push
insb
lahf
push
bound
jno
or
jo
hlt
xor
clc
ss
adc
push
mov
and
xlat
lahf
mov
xlat
lods
fisubrs
sbb
mov
push
mov
or
aas
inc
fmull
push
les
cmpb
fbstp
adc
xchg
push
les
xchg
push
inc
insb
repnz
lahf
fwait
stos
test
push
cmp
ljmp
test
mov
push
rcrl
int
out
imulb
lahf
push
xlat
fcoml
cmp
sub
mov
sbb
stos
push
sahf
jnp
fprem
rorl
sub
xor
sub
add
push
dec
pop
jle
in
jb
mov
aam
mov
repnz
inc
fdivs
lea
loope
cmp
add
rcr
psubusb
lds
sub
fcoml
and
fcomi
cmp
jne
push
ret
lods
jge
into
sti
loop
subb
add
loopne
xchg
out
xor
or
cs
imul
pop
inc
adc
incl
dec
adc
add
loop
add
inc
mov
jns
pop
mov
cli
cwtl
pop
mov
ret
loope
in
jbe
xchg
int
add
and
add
data16
inc
xor
mov
xchg
pushf
into
push
addr16
xchg
lds
push
xlat
mov
ss
add
data16
add
sbb
dec
sbb
or
fbld
cmc
mov
mov
loopne
jp
scas
add
xchg
cmp
clc
push
and
lret
pop
or
out
lds
addl
mov
pusha
aaa
mov
out
push
jnp
clc
xchg
mov
sub
aaa
mov
pop
jmp
in
pop
ret
cmp
out
jecxz
mov
inc
ret
sbbl
mov
cmp
scas
repz
jmp
inc
mov
sbb
sbb
push
in
sbb
ja
mov
test
movsb
or
xor
test
cmpsl
mov
dec
sbb
das
xor
push
iret
add
fcoms
in
lods
adc
xor
js
out
ret
jns
lods
sbb
and
js
sbb
in
hlt
pop
scas
mov
test
xchg
cwtl
out
jb
jl
aad
pop
cli
hlt
lcall
adc
xchg
stos
ljmp
in
fwait
out
or
in
push
mov
aam
cltd
lods
ds
sub
dec
iret
jb
test
je
icebp
out
ljmp
loop
pop
cmpsl
push
mov
or
daa
in
dec
dec
arpl
adc
dec
pusha
or
adc
ja
cli
rclb
movl
xchg
or
push
sbb
aas
mov
std
and
loopne
int3
adc
push
arpl
lret
sbb
neg
daa
or
xor
pop
mov
jg
movsl
call
push
lea
pop
mov
or
mov
shlb
dec
mov
sbb
popf
imul
insb
mov
ljmp
mov
in
stc
shll
scas
es
nop
push
testl
movlps
fmuls
mov
test
cmp
fstpl
or
cmpsl
push
jbe
ja
sub
notl
push
add
sub
or
aaa
mov
pop
mov
imul
sbbb
stc
or
popa
mov
xor
jae
scas
cmp
mov
popf
movl
ljmp
rcr
aam
rcll
sar
stc
xor
xchg
mov
nop
loopne
pushf
fwait
sbb
xchg
fsubl
jnp
test
mov
outsb
push
push
out
and
psubq
jge
orl
xchg
dec
scas
xchg
into
fnstsw
es
das
sbb
mov
fs
out
mov
push
pop
sbb
adc
pop
add
add
pop
jl
jge
add
insb
test
mov
or
loopne
mov
pop
and
lahf
or
push
shl
xlat
and
or
jb
fdivrs
xchg
xchg
mov
out
sub
stc
xor
call
cmp
fs
jge
pop
in
lret
rorl
in
push
insl
stos
jbe
mov
lcall
bound
aas
sbb
mov
imul
sarl
push
lea
stc
add
sub
leave
rclb
or
js
jns
leave
dec
ldmxcsr
sbb
dec
fnsave
orl
inc
mov
pop
frstor
je
in
outsw
mov
mov
push
mov
aam
mov
sbb
clc
lret
sbb
pop
jp
pop
loop
aas
aad
pusha
sbb
jb
cmp
sub
sub
mov
test
xchg
stos
incb
and
xchg
dec
and
jae
repnz
pop
mov
cli
pushf
xchg
das
out
cmpps
add
jmp
xor
xlat
outsw
mov
jae
xlat
repz
dec
orl
sub
cwtl
and
aad
add
cmp
jmp
cmp
test
arpl
jb
add
fisttpl
add
pop
in
push
cmp
ret
and
inc
fmul
lret
addr16
mov
mov
subb
sti
rclb
ds
jg
mov
mov
mov
sti
sbb
mov
movsl
clc
push
out
xchg
cmp
fs
and
and
cmp
movsl
imul
in
jbe
jecxz
jo
daa
aaa
mov
jl
aam
lock
cs
lock
pop
mov
push
cmp
lgs
stos
bound
ljmp
adc
shll
fwait
cltd
int
in
sahf
pushf
call
inc
mov
dec
xchg
repnz
aas
pop
mov
decb
insb
dec
outsb
dec
lock
xchg
cmp
mov
das
cmpsb
insb
adc
stc
mov
cld
and
mov
or
movsb
xor
filds
cwtl
mov
mov
pop
xchg
mov
mov
push
test
xchg
inc
xchg
fnstcw
mov
pop
in
sahf
sbb
lcall
xlat
and
inc
dec
shr
dec
ret
daa
or
ret
fbstp
es
mov
fstpl
inc
lods
sub
popf
pop
push
jge
jbe
jns
sbb
and
pop
fstpl
cmp
cwtl
sbb
fidivl
push
or
xor
sahf
jp
fsub
dec
imul
test
push
addr16
dec
or
xchg
or
mov
decb
inc
into
aaa
jo
test
rolb
idivl
push
js
imul
inc
add
ficomps
mov
repnz
push
lods
mov
sbb
mov
mov
data16
aaa
ret
cmpsl
lret
sub
enter
lods
lcall
popf
cmp
or
jns
les
fucomi
xchg
gs
adc
dec
notl
push
lods
loopne
neg
sub
or
jno
mul
out
test
mov
mov
jae
adc
pop
pop
inc
xchg
and
xlat
push
lods
jnp
fdivrs
in
movsb
cmpsb
mov
loopne
push
pop
xchg
inc
movsl
ss
mov
scas
mov
sbb
push
daa
jmp
mov
mov
mov
mov
lret
test
inc
icebp
mov
push
jne
cmpsl
add
sbb
das
jno
fisttpll
test
mov
fidivrs
add
mov
cmp
test
leave
lret
xor
sub
daa
lds
push
lret
push
mov
sub
dec
mov
scas
cltd
fld
fsubrl
lcall
rorl
sbb
sti
xor
mov
xchg
and
nop
push
out
lock
sbb
and
jp
fistps
negb
ds
push
out
cltd
jne
push
add
xor
data16
push
pop
mov
mov
das
cmp
xor
lock
inc
sub
sub
mov
pop
int
fstl
fstps
or
mov
movsb
or
jecxz
lahf
in
rol
iret
or
and
daa
gs
mov
out
sbb
std
cmpsb
mov
and
xlat
rorl
lahf
cmp
mov
fdivrl
sub
add
stc
jnp
cs
dec
pop
push
dec
ret
cmpsl
out
and
bound
cltd
and
pusha
out
in
ret
pushf
mov
sti
pushf
popf
jmp
jbe
mov
repnz
outsb
mov
in
mov
leave
in
pusha
inc
jbe
jmp
dec
sub
into
enter
jecxz
sbb
cltd
jns
jl
and
pop
adc
jge
in
mov
repz
ror
dec
and
dec
or
mov
icebp
je
push
lea
mov
rorl
xor
rorb
mov
lahf
aam
lods
jmp
mov
lahf
popa
and
mov
xor
jns
in
lcall
das
scas
pushf
push
mov
nop
dec
xchg
and
mov
mov
sub
popf
orl
aam
shl
bound
hlt
add
sub
jmp
push
dec
adc
hlt
insb
in
stos
cmpsl
inc
dec
mov
jg
fcoms
or
repnz
addb
test
imul
sbb
popf
mov
sub
std
sbb
jbe
inc
fadds
notb
xor
mov
stos
repnz
and
outsl
btc
flds
fsubl
xchg
fistps
dec
add
fcompl
outsb
int3
movsl
sbb
sub
outsb
rcll
add
dec
pop
xchg
js
pop
add
out
test
dec
push
mov
mov
repnz
jecxz
add
pushl
insl
pop
imul
or
lods
xchg
dec
ljmp
inc
outsl
adc
je
outsb
sbb
cmp
jl
xor
loopne
push
sbb
out
dec
fiadds
mov
daa
in
into
mov
push
jp
and
rorl
inc
cmp
sbb
loopne
aad
dec
pop
mov
jne
mov
popf
xchg
push
sbb
ret
jne
orl
cmp
fbstp
dec
icebp
mov
icebp
arpl
mov
xor
aaa
xchg
out
pop
jge
movsl
mov
and
sbb
lds
dec
push
cmp
pop
sub
push
cmc
cltd
lret
lret
adc
in
js
xor
aas
inc
stos
sbb
push
fmull
int
mov
test
xor
in
addr16
or
repz
dec
sbb
lcall
test
jo
femms
jmp
sbb
or
jae
das
fiadds
fwait
pop
mov
scas
lahf
lcall
pusha
xor
cmp
sbb
ja
dec
fcoml
push
mov
cmp
icebp
test
test
outsb
xchg
shrb
cwtl
cmp
cmp
sbb
lock
or
push
shll
sbb
adc
mov
xchg
gs
insl
push
fwait
es
jns
jbe
dec
icebp
cs
aam
xor
push
lcall
jnp
add
cmovge
inc
sahf
fcompl
outsl
outsb
pop
and
xchg
push
sub
mov
jle
xchg
cs
and
bound
add
test
popf
lock
or
sub
nop
std
es
or
lods
adc
nop
dec
mov
scas
lret
mov
cwtl
inc
xor
jbe
in
ret
fcoml
mov
out
sub
sbb
push
or
lds
std
lret
or
push
and
xchg
and
adc
dec
hlt
mov
fldcw
dec
jmp
cmp
ljmp
jmp
jae
pop
mov
pop
jl
push
clc
or
xor
cmp
into
push
pop
int3
rcll
sbb
and
sti
out
mov
icebp
pop
out
mov
adc
inc
sub
and
pop
lds
pop
xlat
or
sbb
cmp
mov
pop
mov
inc
mov
sbb
pop
shll
mov
inc
test
push
sbb
pusha
insb
xlat
setnp
xor
aaa
xor
ret
jae
and
mov
das
scas
pop
fwait
push
cld
pusha
lret
aam
stos
fucomip
dec
xchg
push
push
inc
outsl
scas
and
mov
mov
std
mov
imul
mov
cmc
scas
mov
shlb
mov
test
push
movsl
test
jno
adc
jb
sbb
or
adc
and
pop
pop
add
jbe
int
test
dec
pop
in
xor
mov
ret
rol
leave
data16
inc
cmp
push
inc
xchg
push
or
sub
icebp
inc
jle
fimull
repz
jnp
inc
xor
cmp
insb
daa
mov
add
jae
pop
fldl
push
lahf
cmc
and
mov
jne
loope
leave
mov
lea
xor
xchg
xor
push
stc
inc
inc
xchg
cmpsb
jbe
cli
mov
stc
inc
std
pop
cs
or
dec
dec
xlat
addl
sub
pop
push
sbb
int
mov
out
pop
mov
and
xor
scas
lret
push
inc
loop
aaa
es
das
cltd
js
xchg
in
cwtl
adcl
arpl
rcll
aas
xchg
and
popf
or
dec
addr16
aam
mov
movsl
es
xor
fwait
jns
cli
xchg
add
fmulp
inc
insb
jo
sub
adc
cmp
xchg
mov
push
mov
sbb
sub
sub
aas
into
push
sbb
inc
int
lret
enter
xor
mov
cltd
lret
dec
mov
pop
and
out
hlt
je
cltd
pop
subl
add
cwtl
jl
fucomp
inc
sub
jbe
out
imul
rorb
push
mov
mov
in
stos
jmp
mov
mov
enter
add
shrb
in
mov
pop
movsb
sbb
jbe
dec
mov
jge
mov
stos
dec
xchg
jbe
mov
adc
jle
mov
pop
into
jg
mov
add
lock
loope
and
pop
pushf
in
test
loop
mov
cmpsl
sahf
std
pop
cmpsb
nop
add
andl
xor
and
into
mov
repz
rolb
cmp
cli
adc
adc
call
in
push
fcmovne
sbb
popf
sbb
dec
push
push
add
shl
xor
fs
or
fwait
cli
lss
ret
sub
xor
lock
sub
or
and
fldt
and
fcmovb
decl
imul
mov
push
scas
add
pop
test
fdivrs
cmp
test
xchg
das
sub
test
mov
popf
add
dec
xchg
lret
insl
aam
pop
pop
data16
inc
xchg
pop
push
pop
mov
icebp
mulb
insl
ret
stc
scas
cmp
dec
add
push
xor
loope
loope
dec
jle
push
inc
pop
xchg
sbb
cmp
cmp
insb
mov
xor
outsl
jecxz
sti
sbb
cmp
movsl
mov
stc
es
leave
add
pop
push
out
jle
cmp
jp
ds
xor
fwait
dec
jmp
sbb
sub
cmp
nop
aaa
movsb
pop
or
outsl
push
xchg
add
or
mov
int
mov
test
xchg
lds
xchg
cli
pop
mov
inc
jecxz
mov
and
stc
inc
cwtl
fs
pop
icebp
fsubs
cmp
shrl
dec
aam
sbb
nop
and
pop
mov
adc
sub
pop
and
fsubs
movzwl
push
jo
jnp
out
pop
cmp
push
adc
rcll
inc
iret
mov
adc
mov
push
mov
mov
ret
les
cmp
mov
inc
xchg
insl
stos
mov
sub
mov
or
std
fmuls
or
clc
add
jne
movsb
sti
pusha
or
bound
int
sbb
sub
adc
lahf
and
fwait
aam
cmp
xchg
sub
outsb
outsb
test
dec
loop
push
outsb
sub
mov
mov
xchg
fisttps
jae
cmp
add
dec
mov
cmpsb
hlt
les
or
push
mov
data16
xchg
je
cmp
movsl
mov
or
cmovno
mov
data16
mov
inc
loopne
nop
push
lret
and
jle
dec
mov
jecxz
imul
or
ret
cmp
pop
sbb
sbb
push
pop
inc
dec
es
xor
fs
jp
shlb
mov
add
out
xor
shll
js
addr16
std
jle
mov
addb
popf
xor
adc
or
add
call
jle
js
adc
into
jl,pt
sub
xchg
icebp
push
mov
mov
mov
pop
mov
jge
pop
xor
jnp
pusha
mov
push
out
rcl
lea
mov
into
cmpsl
leave
test
or
sub
dec
out
int3
push
sbb
mov
xchg
mov
sub
xchg
xor
cmp
stos
pushf
push
pop
aam
inc
adc
enter
or
pop
loopne
ds
out
or
or
std
rcrl
outsb
js
inc
push
mov
pushf
in
mov
inc
mov
and
repnz
daa
nop
dec
mov
mov
xchg
adc
int3
mov
cmpsl
and
rcll
cmpb
mov
data16
movsb
mov
jl
outsb
cmp
int3
sbb
mov
adc
jl
lods
mov
enter
in
in
xchg
std
jl
aad
or
jb
movhps
lock
das
subl
clc
orb
xchg
xchg
bound
std
lcall
pop
add
lods
mov
in
sub
mov
fwait
mov
push
or
and
out
xchg
sub
orb
mov
lock
jg
dec
fistpl
dec
stos
inc
test
xchg
mov
pop
and
mov
jg
jecxz
lret
push
aam
xor
mov
jno
inc
mov
insb
cwtl
leave
xor
lock
nop
xchg
and
addr16
mov
push
add
inc
mov
and
hlt
pusha
cmpsb
mov
inc
mov
push
fimull
add
in
xchg
sbb
cmpsb
xor
or
pop
cmpsl
push
xor
int3
push
inc
or
push
rclb
and
push
jb
cmpsb
out
gs
lock
sti
jae
and
add
lods
popf
sbb
jecxz
push
movsb
dec
push
stc
mov
rorb
inc
xor
adcl
movsl
jae
push
mov
testb
scas
xor
arpl
inc
je
xor
add
popa
add
fisubl
out
inc
lea
fs
dec
jecxz
adc
daa
shrb
and
inc
popa
daa
pop
or
jp
daa
jg
lock
add
cmpsb
dec
scas
dec
or
mov
int3
xor
add
test
pop
jmp
cmp
adc
lahf
das
movsl
fwait
mov
leave
shrb
add
jecxz
les
xor
or
and
pop
adc
jle
icebp
cmp
adc
test
or
inc
popf
insl
in
pop
shll
int3
fcoml
mov
adc
xor
lds
shll
and
ret
arpl
jmp
pop
fists
je
jbe
out
dec
xchg
jge
scas
dec
outsb
ret
jmp
inc
or
sub
aam
jle
xor
cli
adc
xlat
rcrl
jo
push
test
dec
xchg
adc
xchg
es
inc
lock
cmp
inc
xchg
in
xchg
stc
or
or
pop
fstp
aad
lcall
fucomp
xchg
add
dec
push
mov
sarl
imul
xorl
or
pop
in
inc
dec
test
dec
push
lret
jmp
adc
repnz
sub
pushf
and
push
add
push
rcl
push
or
out
jbe
jb
adc
fadds
ret
fstl
xchg
adc
jb
lods
iret
loope
xorl
pop
pop
and
scas
add
or
shrb
mov
sub
ds
xor
lods
jns
mov
adc
jae
in
data16
je
es
addr16
fwait
sti
push
jns
sub
popa
sub
dec
nop
fs
lahf
push
sub
cltd
inc
pop
adc
lcall
das
ret
xchg
pusha
repz
lock
loopne
push
add
mov
ljmp
mov
jb
aaa
xor
push
icebp
pop
push
cli
or
mov
data16
and
push
daa
sub
pop
xor
mov
int
mov
xor
mov
and
repnz
mov
cli
or
pop
iret
loop
pop
in
or
mov
stos
std
addr16
test
push
jg
cmp
popa
aam
cwtl
fwait
jbe
fnstenv
lahf
mov
push
inc
lret
cmp
xor
mov
fcmovne
or
pop
jmp
pop
inc
lret
jb
daa
or
dec
push
mov
xorl
add
bound
cmp
jmp
add
out
mov
pop
aas
dec
mov
fistps
cmp
mov
in
aaa
in
pop
loop
gs
and
add
mov
cmpl
sbbb
popf
push
mov
and
adc
icebp
stos
jnp
dec
cwtl
imul
push
fstpl
mov
insl
pop
adc
dec
dec
test
pop
hlt
mov
es
mov
jbe
jbe
popf
push
inc
mov
cmpsl
stos
out
rorb
imul
dec
call
je
icebp
rolb
mov
mov
cld
test
fdivrs
out
lcall
pop
mov
jne
jle
sub
sub
mov
arpl
sbb
push
inc
xchg
mov
rorl
xor
mov
arpl
xor
out
xchg
nop
jg
push
jns
dec
add
jo
pop
xchg
icebp
xchg
das
pop
xlat
mov
das
outsl
xor
pavgw
push
fimuls
cltd
call
test
xor
and
jg
pop
push
and
sub
mov
sub
call
xchg
out
xchg
cmc
xchg
ljmp
mov
inc
inc
insb
push
test
xchg
fdivs
mov
pusha
jle
mov
xchg
pop
inc
pop
test
movsb
xchg
xor
sbb
mov
jge
push
mov
push
jge
lock
imul
popa
add
std
jg
adc
shlb
cmpsb
push
push
insb
xchg
mov
pop
dec
xor
mov
jge
pop
mov
push
jmp
sub
loope
jecxz
fisubrs
hlt
stc
fsts
pop
adc
int3
fcomps
pop
rorb
jecxz
xor
ds
xlat
xlat
cmp
lods
cmp
jle
jle
sub
aas
fiadds
int3
mov
sbb
loope
inc
mov
jle
setae
hlt
sahf
or
xor
clc
pop
test
sbb
iret
mov
lahf
and
dec
add
sbb
out
mov
ret
repnz
mov
xor
and
fldenv
mov
mov
xor
cs
mov
push
pushf
rorl
xlat
xchg
fisttpl
shll
sti
frstor
xchg
pop
aad
imulb
mov
push
adc
fildll
into
in
repz
cmp
push
js
out
mov
push
and
jl
ret
ss
sub
dec
fnop
mov
sub
repnz
push
push
adc
pop
adc
adc
in
sub
fisubrl
push
add
mov
sbbb
adc
add
sbb
jecxz
push
adc
cwtl
xchg
dec
inc
outsb
push
xchg
adc
or
sub
pop
push
nop
push
mov
dec
jecxz
int
pop
xorl
mov
mov
mov
int
sbb
cltd
in
and
xorb
push
js
jae
dec
jmp
popa
jae
test
inc
int3
pop
gs
jle
pushf
cld
sarl
xlat
fildll
jae
int3
sbb
dec
pop
stc
jmp
pop
xor
call
cmp
clc
jb
pop
or
mov
insb
mov
sbb
add
add
mov
mov
sbb
push
push
or
addb
cmp
pop
jmp
dec
add
xlat
and
mov
lods
and
xchg
xor
ret
rolb
lahf
daa
test
hlt
stos
pop
jmp
inc
out
jo
pusha
mov
cmpsl
fisttps
pop
mov
dec
imul
das
mov
test
adc
push
push
jae
scas
fwait
rclw
xor
shrb
or
inc
and
xor
push
ds
push
sub
fstpl
jmp
jne
clc
cmp
fisttpll
sti
rclb
nop
jmp
adc
inc
clc
fldl
into
sub
insb
pop
jb
dec
sbb
cmp
lds
sar
gs
mov
inc
pop
les
hlt
mov
inc
add
aas
das
adc
xchg
movsb
cmpsl
mov
jnp
cli
lods
ret
add
xor
adc
sub
inc
fldl
in
je
clc
inc
push
xchg
fcmovnu
mov
int
jo
inc
push
icebp
test
fisttpl
iret
pop
jge
fs
es
in
sub
xchg
movsb
movsb
or
inc
les
inc
cltd
lods
lahf
inc
add
in
pop
js
xchg
shr
in
pop
mov
mov
repz
inc
sbb
ja
stos
mov
jno
ret
add
push
cmp
push
push
push
xchg
sahf
xor
push
xor
js
les
dec
fcmovu
cmp
dec
and
pop
xchg
jbe
movsl
xchg
xchg
and
jo
pop
dec
bound
out
inc
nop
mov
fnstcw
leave
shll
rcr
cmpsb
lods
outsl
enter
pop
pop
mov
xlat
mov
jnp
shr
xor
xchg
push
pop
sub
testb
mov
or
xlat
mov
adc
cltd
mov
sbb
and
ljmp
cs
jl
add
in
popa
mov
rsm
in
xchg
jmp
push
insb
lock
outsb
das
shll
cmp
or
cs
test
push
cmp
xor
pop
jmp
mov
mov
movsl
andl
push
pop
push
mov
jno
js
ret
aam
fimull
mov
int3
sub
pop
jo
mov
enter
push
test
add
jns
adc
out
mov
mov
retw
or
js
mov
mov
jle
insl
imul
repnz
xchg
or
outsb
int
or
push
inc
clc
and
fdivl
movsb
xor
test
nop
push
push
adc
push
xchg
pop
push
roll
mov
push
sub
ja
xor
fadd
xlat
in
jle
cli
inc
add
cmpb
fistpl
mov
jae
add
push
aas
lods
cwtl
xor
add
stc
mov
and
sbb
xchg
fnstcw
lods
lds
push
push
iret
mov
fdivl
stos
shld
sub
dec
imul
std
push
add
or
adc
cmp
scas
imul
sarb
mov
icebp
rolb
out
sbb
xchg
stos
inc
push
xchg
push
pushf
mov
lea
sti
inc
je
nop
aam
xor
adc
and
subb
daa
out
fimull
xchg
xchg
adc
lock
or
dec
std
leave
jecxz
lods
outsb
jecxz
jmp
lods
pop
loope
arpl
adc
cs
cmovbe
stc
out
push
ss
adc
nop
pop
adc
insl
sbb
dec
fidivrs
lods
xlat
sahf
mov
pop
roll
sbb
addb
jns
jno
movsl
lret
insb
cmp
xchg
negb
dec
pop
das
xor
pop
inc
mov
mov
fsubrs
lea
jae
and
jne
mov
push
add
clc
jg
stos
and
out
and
pop
pop
xor
adc
sti
push
or
jno
cmpb
pop
fwait
iret
xlat
sbb
mov
xor
fs
stc
scas
movsl
mov
aam
std
ret
data16
popf
jge
je
dec
arpl
dec
int3
jnp
jne
or
or
pusha
andl
stos
stos
test
cmpsl
cli
outsb
jle
nop
mov
arpl
dec
xor
aas
xor
movsl
or
jbe
ljmp
out
push
imul
lcall
push
stos
pushf
stc
mov
and
movsb
push
mov
aad
das
in
outsl
mov
lock
nop
mov
repnz
sub
fs
push
daa
dec
test
jle
xor
lcall
mov
stos
stc
ss
mov
imul
mov
xchg
pop
std
add
movsl
pop
and
das
mov
dec
jo
mov
pop
fnstsw
sahf
pop
popa
imulb
or
cmp
lret
xchg
sahf
scas
push
idivb
cwtl
iret
or
ffreep
mov
inc
lods
adc
inc
pop
dec
cltd
push
xchg
sub
pop
fidivl
pop
dec
and
lcall
adc
sub
xor
xor
and
mov
mov
movsl
sbb
inc
pop
lds
stos
bt
mov
mov
mov
mov
cld
sub
outsl
out
fcompl
add
mov
mov
adc
add
lret
aad
pusha
shlb
out
jle
pop
cmp
xchg
mov
push
jno
clc
pop
dec
addl
or
rorb
lods
inc
inc
mov
dec
and
cmpsl
adc
xchg
in
push
pop
adc
sbb
jo
stos
pop
xor
or
lahf
in
roll
mov
mov
cwtl
and
outsb
push
xchg
mov
out
xchg
xchg
adc
js
mov
out
xor
iret
test
pop
pop
rorb
fmuls
or
mov
or
fnsave
pop
enter
adc
dec
pushl
push
rcl
stos
jno
jp
and
push
ficoms
adc
xchg
sub
add
fnstenv
mov
lret
inc
loop
add
dec
push
lea
imul
or
bound
lret
mov
mov
push
test
scas
orl
lsl
jle
push
nop
sub
dec
aad
ja
pop
push
cld
test
dec
test
sbb
out
jne
mov
out
fimull
dec
ret
mov
inc
cmp
mov
imul
stos
xchg
in
fdivs
adcb
add
pop
jge
xor
sbb
repz
xabort
stos
fwait
jle
push
add
cwtl
shlb
lret
dec
fdivrl
add
mov
int3
addr16
bound
dec
jmp
push
cmp
push
add
jb
pop
test
ret
cld
addl
out
loope
clc
aad
or
mov
mov
pop
and
lock
jo
inc
sarl
mov
fwait
into
and
outsb
xlat
cs
xor
dec
pop
cmp
lods
push
fisttpl
push
in
push
jne
negb
mov
fistpll
subl
cld
mov
ret
sub
sbb
mov
int3
xorb
jmp
ja
arpl
lea
or
cltd
loopne
mov
xchg
add
int
fdivl
stos
mov
pop
imulb
mov
insb
call
sub
dec
cmpsb
or
dec
ja
cmp
mov
aad
cmp
shll
ds
pop
or
scas
sub
push
cmp
cmp
mov
xor
cmpsl
ja
call
sbbl
arpl
xchg
popa
xor
inc
daa
in
sarb
popa
ja
imul
xchg
cli
or
iret
dec
mov
cmp
adc
fsubp
cli
push
and
mov
pop
nop
int
mov
je
notl
ffree
loope
in
mov
xsave
pop
daa
test
in
mov
push
add
ljmp
iret
mov
dec
sub
mov
mov
es
mov
hlt
pop
mov
or
xor
daa
insb
sbb
out
leave
xchg
or
movsb
xchg
sbb
cli
jp
xor
sbb
outsl
in
mov
cli
cwtl
movsl
mov
dec
mov
jl
inc
dec
pop
cmp
pop
nop
fldcw
and
scas
jo
test
xor
out
xchg
push
fcomps
mov
insl
mov
mov
addb
add
sbb
jnp
mov
pop
subl
nop
mov
es
pop
mov
stos
and
fnstsw
push
mov
cmc
mov
loope,pt
pop
adc
mov
mov
lcall
xor
mov
fcompl
dec
pop
leave
ror
xchg
adc
jp
ds
fcomps
je
sbb
jge
into
xchg
insb
scas
rcrl
lods
pop
xor
xchg
jnp
cli
xchg
int
xor
idiv
jg
pop
dec
aad
pop
repz
fiadds
insb
ss
or
in
je
xchg
jo
mov
scas
dec
stos
mov
and
mov
movsb
stos
dec
dec
mov
jnp
mov
fisubrl
jbe
movsb
imul
jecxz
xchg
push
lcall
popa
xchg
and
ret
lcall
je
or
fs
jae
lret
fwait
sub
cmp
mov
sbb
xor
xor
das
xor
repz
dec
adc
mov
fldt
jne
pop
push
repz
mov
in
or
xor
pop
test
add
test
cmpsl
push
pop
jle
into
les
movsb
loopne
fs
test
inc
inc
xchg
loop
iret
or
in
push
xchg
das
pop
push
sub
adc
data16
sbb
ja
adc
test
out
scas
push
loop
cs
stc
stos
fwait
xchg
or
insb
aas
dec
mov
xor
daa
loop
xchg
imul
pop
cltd
out
das
mov
jo
clc
pop
dec
scas
xor
in
gs
std
mov
jecxz
aad
test
loopne
mov
mov
cmp
in
cmp
scas
fs
sbbb
movsl
xchg
push
daa
mov
push
clc
jl
dec
fst
test
dec
jae
jp
cmpsl
sahf
jle
xchg
aaa
push
inc
dec
loopne
sub
hlt
mov
in
ja
popf
pop
mov
inc
sub
push
xor
add
inc
xchg
adc
pop
inc
popf
push
lods
pusha
xor
outsl
jecxz
fndisi(8087
jg
int
jge
ja
sub
push
cmp
xor
ficompl
lahf
sub
movsb
shrb
dec
add
iret
sbb
stos
inc
adc
test
cmp
popa
ret
pop
cs
pop
test
aam
std
stos
xchg
pop
mov
cwtl
lods
jecxz
icebp
popa
push
insl
pop
dec
sub
pop
pop
dec
sahf
in
add
and
movsl
cmp
rcll
mov
cmp
or
jmp
test
mov
dec
xchg
pop
ljmp
sub
arpl
es
test
mov
add
aad
fildll
nop
adc
jg
xchg
fwait
dec
pushf
push
adc
pop
pop
fmull
js
sar
mov
push
inc
mov
dec
int3
scas
or
sbb
mov
fldl
pop
cmc
dec
repz
mov
jmp
dec
decb
mov
add
pop
std
std
neg
addb
rcrl
mov
ja
inc
add
xchg
mov
jnp
sbb
inc
fwait
push
aas
xor
lret
add
cmp
cmc
pop
fbld
push
pop
bound
xor
sahf
aam
push
decl
fadds
cmpsb
sbb
pop
sub
bound
pop
xor
sahf
inc
mov
inc
jmp
icebp
addr16
popf
loopne
cli
andl
test
cmp
mov
sbb
sub
pop
sbb
mov
mov
dec
popa
add
addr16
outsb
sbb
pushf
dec
int3
push
aad
mov
cli
adc
sbbb
loop
call
dec
outsl
repz
lock
cmpsb
subl
test
mov
pop
jg
loop
cmpsb
cli
out
add
mov
inc
jns
xchg
xchg
jne
jmp
cwtl
xor
push
nop
imul
shll
stos
fcmovnu
shrl
xor
mov
mov
es
int
inc
xchg
pop
lret
pushf
cmp
mov
cmpb
sar
sub
out
insl
ret
lret
and
bound
lret
sub
push
xchg
mov
jbe
cmp
jmp
and
sub
shl
fwait
sbb
movsb
lock
mov
mov
aaa
inc
cmpsl
fwait
dec
cld
mov
stc
ja
push
and
adc
sub
inc
shrb
cmpsl
jb
cmp
fwait
cmc
cmpsl
aaa
leave
pop
jecxz
lods
mov
push
mov
jb
call
push
sti
cmp
pop
stos
inc
inc
test
sub
jmp
pop
sbb
ljmp
in
fisttpll
or
dec
fwait
mov
or
aad
sbbl
cltd
or
lea
jmp
les
inc
mov
aaa
mov
rorb
lds
idivb
mov
out
aad
xchg
xchg
mov
xchg
xchg
cmp
jne
ljmp
loope
repnz
ds
mov
lahf
arpl
addr16
adc
sub
std
sbb
out
fldenv
push
pop
stos
aas
pop
xor
pop
sub
rcl
cmp
dec
ret
jle
xchg
aaa
dec
push
push
mov
sbb
addr16
stos
insb
les
int3
push
push
cmp
cmp
stc
ret
and
sbb
jb
mov
mov
mov
fldenv
dec
jbe
cmp
popa
stos
rorl
cs
arpl
mov
test
fildll
jae
mov
aam
sarb
int3
and
inc
sbb
sub
push
push
jno
pop
ret
lods
nop
cmp
ret
jmp
add
xchg
jb
jno
aad
in
repnz
push
add
lods
shrb
and
das
add
call
push
cmp
scas
repnz
mov
jae
pushf
jb
adc
ret
cwtl
inc
out
imul
mov
aaa
pushf
dec
mov
xchg
inc
mov
sub
data16
sbb
xchg
adc
push
push
and
push
mov
xchg
and
mov
cwtl
push
cld
lret
mov
mov
movq
scas
or
dec
xlat
sub
push
push
sbb
in
push
xchg
push
dec
xchg
mov
popl
scas
inc
jecxz
push
test
cltd
cli
jo
and
repnz
jge
leave
scas
inc
sarl
int
js
dec
fsts
push
dec
insl
mov
cs
and
inc
push
mov
mov
lea
stos
push
push
jle
or
ljmp
push
leave
out
mov
adc
dec
xor
xor
inc
pop
popf
clc
in
adc
fldln2
inc
mov
lea
in
insb
ret
shll
insl
gs
int3
or
or
mov
shlb
popf
mov
nop
clc
lcall
push
sub
sbb
scas
mov
xchg
cs
pop
jae
rcr
sub
aam
fs
jno
or
or
and
scas
gs
jge
jno
or
push
push
push
mov
cmp
sbb
aam
add
in
inc
sbb
sub
sahf
lcall
mov
adc
ljmp
xchg
jns
inc
push
mov
adc
push
mov
xor
fcoms
enter
mov
hlt
cmc
sub
ljmp
push
popf
loope
dec
mov
jo
xchg
sub
mov
inc
pushf
js
mov
lcall
adc
fadds
inc
adc
xor
push
add
out
sahf
repz
dec
scas
pusha
cmpsb
inc
ficoms
testb
adc
jmp
adc
mov
lcall
nop
adc
mov
sti
iret
jne
sub
subb
out
pop
xor
pop
inc
dec
pop
or
outsb
dec
fadds
iret
dec
aam
mov
sub
sti
adc
faddp
rcrl
jae
xchg
js
nop
in
les
mov
jecxz
adc
mov
es
push
add
cmpsl
loope
lahf
jmp
xorl
clc
loop
aam
cmp
and
lds
jmp
neg
inc
fnsave
mov
lods
cmc
lret
ficomps
fidivrl
rorl
adc
push
mov
jo
sub
iret
jb
flds
sahf
push
dec
jecxz
fiaddl
stc
and
ljmp
mov
ds
ja
xor
int3
pushf
test
add
shl
sti
shrl
imul
insl
insl
sbb
loop
mov
loope
and
mov
push
lds
lock
addr16
ja
sub
xchg
push
arpl
jae
in
sub
jne
adc
lods
in
dec
daa
xchg
sbb
and
ret
aad
sub
xchg
jnp
inc
daa
cmp
stc
mov
pop
mov
cmp
std
fwait
cmpsl
repnz
mov
gs
xor
inc
push
or
hlt
push
xchg
sbb
sbb
pop
jp
aad
jno
rorl
enter
or
rclb
mov
fadds
pop
out
fldcw
xchg
dec
mov
stos
dec
inc
sub
adc
inc
pop
sqrtps
pop
sahf
rcrl
insl
test
scas
inc
push
iret
xchg
fldenv
pop
add
movsb
push
into
sbb
fisubrl
fstpt
test
sbb
mov
fdivrs
sub
and
dec
sbb
add
push
lods
lods
mov
out
outsl
lods
and
in
cli
push
mov
fsubs
shrl
and
mov
jns
xor
dec
xchg
push
test
push
out
add
les
arpl
movsb
dec
sub
sub
sti
mov
arpl
gs
insl
dec
mov
adc
dec
aad
push
pop
pcmpgtd
scas
imul
mov
push
and
insb
nop
jnp
popf
sbbb
divb
add
pusha
bswap
lret
out
dec
lret
mov
fildll
mov
jo
popf
adc
cli
cmp
pop
fucomip
mov
vpcmpgtb
or
loopne
xorl
mov
les
cs
push
mov
cmpb
mov
test
xchg
pop
pushl
hlt
mov
dec
add
je
inc
jge
push
jp
push
jbe
mov
aad
test
dec
xchg
add
mov
lret
push
fildl
inc
mulb
imul
iret
dec
shll
xor
sbb
in
dec
out
shr
add
repz
movl
popa
pop
fsubrl
push
dec
push
cmpsb
shl
push
test
fisubrl
out
cmp
ja
sub
xchg
stos
jno
adc
inc
and
iret
fmulp
cmp
int3
jbe
mov
push
and
inc
push
es
sahf
mov
sti
loopne
fstpl
ja
dec
popf
sbb
imulb
subb
lret
sub
les
push
adc
int
jae
stos
jnp
pop
mov
mov
addr16
iret
aad
sub
mov
mov
mov
mov
xor
shrl
inc
loope
shlb
mov
or
sub
movsl
xor
int3
push
lcall
jns
add
int3
dec
mov
mov
jg
adc
cmp
adc
leave
or
jns
push
ja
ds
loop
lods
push
push
clc
jo
mov
or
jo
mov
fdivrl
rcll
add
fs
nop
icebp
jbe
outsb
lret
mov
cmp
fwait
or
mov
insb
adc
or
xor
fcmove
mov
inc
aas
aam
pop
loope
fwait
xchg
test
es
cmpsb
add
adc
cmp
imul
push
ret
or
loope
stos
les
push
mov
lods
std
nop
es
xchg
pop
add
fwait
adc
cltd
cs
dec
out
xor
and
sub
inc
pop
stc
xor
or
cli
push
loop
cmp
mov
push
jae
mov
lcall
aam
xchg
pushf
push
jmp
sbb
rcrb
push
int
adc
int
imul
jecxz
mov
cmp
imul
push
mov
hlt
sub
fwait
xchg
cli
and
mov
inc
imul
ret
add
mov
cmc
adc
xlat
mov
fadds
pushf
mov
bound
inc
popa
int
add
loope
rol
xchg
push
js
jge
or
jp
enter
sbb
push
jg
inc
popa
or
cmp
adc
push
cmc
sbb
dec
cwtl
rorl
ja
addb
lods
adc
xor
cli
jb
ja
cmp
and
and
gs
sbb
cmp
fwait
scas
scas
ja
arpl
nop
cwtl
pop
sub
add
ret
dec
and
ret
inc
sub
mov
add
or
leave
shrb
inc
push
lret
jno
repnz
mov
pop
lcall
ret
cmpsl
dec
enter
pop
xchg
sub
add
xchg
and
stos
notl
xchg
or
xchg
xchg
inc
fwait
pop
xchg
loopne
nop
sbb
pop
adc
mov
pop
dec
iret
popa
andl
add
mov
cmpl
fadds
fidivrs
movsl
clc
inc
scas
xchg
lods
outsb
cld
add
add
push
xchg
aaa
lock
sbb
inc
insl
repz
cli
cmc
fsubl
mov
movl
cltd
jp
shlb
jmp
mov
mov
iret
push
sub
fs
fdivrs
imul
into
lea
ss
push
cld
mov
inc
repz
and
dec
jp
mov
pop
adc
movsl
sbb
cmp
xor
cmp
push
std
dec
pushf
add
dec
sbb
push
and
or
imul
inc
or
and
outsl
loopne
js
xchg
xchg
loop
test
push
mov
cli
pop
dec
stos
cmc
xor
sbb
pop
xor
mov
push
mov
inc
aad
fldl
sbb
add
push
lock
mov
pop
out
cld
fs
dec
sbbb
ljmp
mov
sbb
sbb
js
je
push
stos
imul
push
xor
mov
fists
testl
rclb
pop
xor
les
adc
push
cmp
dec
imul
mov
cmp
test
into
icebp
fbld
mov
and
testl
outsl
push
sub
mov
sti
insb
sub
fldl
jns
jnp
decl
jnp
clc
repz
mov
mov
xor
dec
mov
cs
pop
repz
in
mov
cmpsl
lahf
pusha
and
push
xor
popl
sub
sbb
inc
test
es
sbb
pop
lods
cmp
push
and
lock
repnz
or
cmp
shrb
pop
add
or
inc
cli
push
cltd
adc
pop
aad
lea
aaa
mov
fdivrs
jnp
test
lds
lea
xchg
mov
inc
addr16
rcrb
adc
cmp
pop
jns
inc
inc
add
dec
hlt
idivb
sub
jecxz
dec
stos
out
rorl
lods
jp
xor
mov
or
int
ljmp
push
shll
pop
and
cmp
fdiv
adcl
lret
andb
into
dec
adc
add
in
mov
mov
arpl
sub
scas
std
and
adc
ljmp
sub
ss
fmull
inc
loope
lock
cmp
loop
push
lea
ret
lds
or
insb
mov
mov
es
inc
jne
push
or
cvtps2pi
andb
scas
or
repnz
xchg
jns
roll
push
in
cmpsb
movsb
xchg
test
rcrb
dec
iret
movl
jmp
push
dec
lods
push
dec
push
idivb
loopne
sub
nop
loop
repz
jle
jne
and
push
pop
xchg
xchg
repz
les
les
fscale
in
push
jp
jp
popf
shr
cmp
mov
mov
nop
ficoms
int3
dec
loope
mov
mov
jbe
daa
loope
adc
cwtl
inc
test
stos
test
and
pop
or
mov
arpl
sub
jmp
jp
arpl
cmc
xor
xchg
pop
minps
dec
sub
js
pop
inc
pop
adcl
push
push
movsl
add
xorl
dec
into
out
xchg
push
pop
repnz
sbb
ret
popa
cs
icebp
shll
mov
push
or
not
inc
bound
shrl
xchg
lcall
inc
std
ja
mov
aam
int
mov
or
cmc
add
aaa
sti
mov
push
mov
scas
sub
add
mov
add
fwait
cmp
pop
popf
mov
cmp
fstp
mov
pop
std
add
pop
xchg
inc
adc
test
imul
in
jecxz
inc
xchg
dec
jb
dec
mov
sahf
dec
push
push
and
xchg
scas
daa
scas
imul
sub
mov
mov
jp
out
clc
movntq
out
jnp
ficoms
sub
dec
or
dec
decl
jb
or
or
fucomip
xchg
int3
jo
dec
std
sbb
jbe
inc
rcrl
out
hlt
xchg
sub
mov
bound
adc
test
mov
in
and
les
aas
rol
hlt
roll
enter
repz
rcll
nop
sarl
xchg
and
iret
negl
push
test
add
in
mov
push
fsubrl
aad
in
test
jle
repz
cltd
cmc
pop
or
icebp
xchg
mov
cwtl
fs
xchg
mov
mov
leave
push
fildl
push
andl
push
in
das
mov
insl
test
adc
testb
xchg
pop
jle
xchg
test
push
push
mov
stc
dec
sbb
lock
fstpt
insl
lock
xchg
mov
add
adc
dec
xchg
push
xlat
mov
rcll
jmp
out
cwtl
sub
push
cltd
or
or
jb
movsb
push
idivb
adc
pushf
addr16
aad
scas
push
push
xchg
and
xchg
cwtl
mov
or
imul
fdivl
negb
and
dec
push
xor
or
lea
add
push
inc
rcl
popf
jo
pop
orb
inc
sbb
sub
and
pushl
or
aam
repz
dec
pop
sbb
mov
rcl
jnp
jae
jns
arpl
scas
repnz
sub
inc
dec
cmc
hlt
mov
pop
push
cmpsl
push
jae
leave
loop
dec
andl
loope
inc
fcomps
add
mov
aam
cmpsb
inc
dec
inc
add
sub
rcr
xor
imul
call
add
xchg
insl
popf
mov
cmp
cmpsl
insl
das
fisubs
push
xor
test
or
sbb
aas
sbb
add
cmp
repz
sbb
repz
jbe
pop
cltd
popa
adc
sub
ja
push
adc
loopne
dec
aas
leave
call
xchg
sub
shlb
xchg
fdivs
orb
sti
dec
or
cmp
pop
adc
jmp
dec
roll
js
ret
mov
in
cmc
sbb
push
or
out
sti
xor
orl
cmp
xlat
enter
aad
mov
inc
add
lock
jecxz
sub
mov
mov
dec
and
popf
clc
push
or
loopne
in
nop
out
fnstsw
les
sub
cld
leave
cmp
dec
js
cli
insl
movsl
mov
fwait
push
inc
shll
repnz
ljmp
pushf
rcl
aam
ret
aas
shll
cwtl
sub
mov
data16
std
ljmp
mov
xchg
fmull
test
loop
imul
out
or
ja
mov
mov
push
std
or
data16
inc
add
push
int
ds
repz
xchg
cmp
or
inc
mov
jmp
out
add
fidivl
pop
jl
lods
sub
jle
rcrl
or
pop
mov
daa
or
out
outsl
mov
add
xor
ja
mov
into
cli
or
dec
xchg
test
dec
repz
and
adc
icebp
mov
in
jmp
sub
mov
push
or
mov
add
jle
dec
andb
rol
xor
dec
push
xor
xchg
lock
js
rcr
jmp
cmp
gs
ljmp
jmp
jno
in
ss
popa
xor
stos
rcrl
push
testb
icebp
sub
std
test
sbb
cld
ja
imul
dec
arpl
les
mov
nop
jno
rclb
or
stc
lahf
mov
mov
mov
pushf
dec
stos
adc
inc
repnz
and
mov
cmp
jnp
ss
mov
ljmp
dec
stc
jecxz
or
push
push
xchg
enter
fsubp
cmp
jecxz
inc
pop
cmc
and
inc
mov
test
cmp
das
push
jno
jbe
xor
xchg
xchg
pusha
outsb
push
inc
cwtl
pop
je
pop
rcr
hlt
mov
push
mov
xchg
xchg
lock
add
mov
jbe
push
cmp
fisubrl
popf
dec
loopne
shl
jbe
fnsave
mov
pop
ljmp
int3
jl
aad
cmc
test
or
hlt
cmp
mov
xor
cmpsb
and
movsb
mov
jne
mov
sub
dec
push
ds
mov
stos
jb
iret
bound
mov
int
imul
jne
pop
in
jbe
negl
adc
mov
lods
ss
enter
fdivrs
pop
or
push
mov
push
add
push
fsubr
repnz
inc
test
loopne
fisttpl
sub
pop
mov
push
xor
mov
sub
cwtl
add
stc
adcl
xor
xchg
cli
mov
or
lock
fistps
xchg
imul
testl
mov
arpl
push
adc
jnp
adc
fwait
stos
xchg
adc
mov
sbbl
cwtl
inc
jae
test
mov
ds
jno
stos
adc
mov
inc
dec
fxch
cmp
jl
ret
inc
mov
mov
repnz
mov
stos
movsl
in
inc
push
in
push
pop
pop
mov
xchg
pop
mov
dec
push
into
jge
cmp
fdivrl
pop
repnz
rol
mov
pop
mov
fstpt
mov
lret
inc
decb
mov
fs
sbb
mov
pusha
lock
movsb
inc
add
inc
adc
out
push
add
mov
dec
and
cwtl
xchg
flds
ret
adc
push
push
shr
mov
test
pop
pusha
pop
imul
mov
mov
push
shll
xchg
es
dec
rcrl
push
inc
fsubl
or
out
jns
cli
inc
xchg
adcb
fimuls
adc
addr16
stc
std
mov
cmpsl
pop
adc
pop
ds
or
test
imul
push
mov
enter
add
lret
push
flds
ja
push
cmp
push
lahf
ja
jne
push
sbb
xchg
sar
notb
sub
aad
push
mov
scas
jae
rcll
jne
daa
mov
scas
xchg
ljmp
adc
inc
push
xor
sti
mov
adc
lds
mov
popf
test
ja
rclb
faddl
xchg
adc
movsb
or
outsl
into
mov
rorb
sub
mov
mov
inc
int3
aad
cmp
pop
xchg
add
movsb
pushf
bound
daa
cmp
daa
popf
stos
shrl
mov
dec
rorb
cmp
sbb
nop
jo
jle
mov
leave
xchg
add
call
inc
push
mov
pop
push
sarb
loopne
fs
mov
fnsave
dec
pop
sar
aas
and
mov
notl
jae
jno
test
sti
mov
clc
jne
cmpsb
push
inc
cli
call
push
dec
sahf
shl
cmp
add
std
bound
mov
mov
pushl
xchg
sbb
subl
mov
daa
cmpsl
shll
mov
mov
cltd
mov
iret
sub
push
cmp
pop
ja
ja
ret
lcall
or
lahf
aaa
pop
aad
jno
scas
push
push
mov
mov
rol
push
daa
sbb
cmp
cmp
enter
mov
push
push
mov
leave
add
pusha
mov
inc
mov
mov
stc
leave
fsubrl
jnp
xor
lcall
adcl
sbb
into
and
push
mov
pop
mov
outsl
shll
outsb
testb
gs
in
leave
mov
nop
pop
subl
push
and
dec
mov
in
mov
cmp
push
xchg
or
icebp
das
dec
dec
ljmp
pop
fdivs
daa
jmp
xor
jecxz
cmc
adc
lds
aad
xchg
out
sub
repnz
sub
sbb
push
popf
aam
dec
ret
leave
jo
daa
les
mov
sahf
stos
sbbb
xchg
fwait
and
test
add
mov
ljmp
and
nop
into
pop
xchg
push
mov
and
out
bound
xlat
fsts
pop
and
ljmp
movsl
inc
js
out
inc
jp
adc
pop
and
mov
shl
xor
std
cld
sbb
pop
xchg
inc
adc
outsl
mov
pop
lock
imulb
insl
enter
bound
mov
push
pop
loope
stc
push
shlb
popa
add
jno
stos
push
cmp
jbe
dec
sti
jno
xor
addr16
negb
scas
sbb
pop
adc
cmp
jg
fisubl
lahf
cwtl
out
jle
sub
in
scas
adcl
add
cmp
pop
popf
sub
stos
and
or
xor
fwait
iret
mov
xchg
xchg
into
jne
sbb
mov
int3
das
out
mov
sub
pop
pushf
cltd
outsl
aad
mov
push
cwtl
mov
rcrl
dec
std
test
addr16
mov
pop
cltd
push
xchg
loopne
and
int
jns
cmp
inc
jge
push
xor
addr16
imul
pop
sbb
dec
push
aas
gs
mov
cltd
add
push
xchg
xlat
rorl
xchg
lds
cmpsl
mov
sub
dec
cmpsb
addr16
mov
shl
mov
movsl
aam
fmull
push
popa
add
sub
mov
enter
jl
xor
jns
add
imull
nop
xorb
jbe
fmul
aas
cmpsb
dec
in
xchg
fwait
int
stos
xor
cld
mov
mov
sub
movsl
jo
insb
pop
sahf
ret
js
pop
or
aam
mov
sub
sub
imul
sarl
and
push
stos
cmp
dec
pop
pop
inc
adc
push
xchg
lea
xchg
cmp
cwtl
push
repnz
int3
sarb
in
cwtl
mov
mov
lahf
daa
and
push
out
stos
movsl
aas
pop
and
bound
dec
pusha
inc
stos
inc
jge
adc
jno
aam
xchg
icebp
inc
pop
sahf
mov
sub
test
es
mov
loope
push
addl
dec
mov
stos
std
jbe
cmp
or
sbb
setno
mov
push
sub
mov
outsl
push
lret
cld
add
cs
dec
testl
jbe
out
incb
mov
push
jmp
jnp
cmp
dec
xor
sbb
fwait
repnz
scas
fidivl
sub
out
std
int3
repnz
into
in
mov
test
push
in
je
stos
jg
inc
push
out
xor
push
neg
or
sbb
insl
shl
dec
and
cli
int3
mov
pop
fwait
cmp
mov
ja
scas
inc
daa
iret
or
mov
mov
mov
jbe
xchg
xor
in
jno
stc
fstpt
or
movsb
jnp
mov
out
outsb
pop
adc
pop
xor
pop
iret
push
imul
popa
nop
mov
in
ret
leave
and
mov
sbbl
lock
pop
sti
cmp
mov
xchg
xchg
mov
sub
das
mov
in
inc
insb
in
movsb
popw
test
jmp
or
mov
xchg
sbb
xchg
mov
ss
sbb
pop
insl
test
cli
jno
mov
dec
fists
inc
xchg
push
lods
push
lahf
call
out
icebp
jmp
lods
pushw
decb
sbb
jbe
ret
xchg
inc
mov
out
popf
aas
fs
fbld
and
xchg
mov
push
inc
xor
pusha
pop
push
andl
xchg
and
mov
shlb
inc
inc
in
lock
mov
add
pop
inc
mov
cs
mov
call
push
add
sub
pushf
jo
xor
movsb
jmp
adc
xor
shl
add
int3
outsb
mov
aam
sub
sbb
test
jmp
inc
fldl
push
add
and
mov
pop
pushf
out
dec
cltd
repnz
cwtl
repnz
add
sahf
sbbb
mov
cmp
call
fistl
dec
sbb
stos
loopne
pop
xor
dec
jo
int3
enter
imul
lds
into
shlb
in
pop
dec
roll
in
adc
rcrl
adc
idiv
xchg
mov
ret
inc
pop
and
sbb
aad
movsb
mov
into
and
dec
push
or
sti
cmp
push
gs
fwait
idiv
ret
xor
push
pop
ret
sub
repnz
mov
and
lds
std
add
mov
aad
mov
orl
or
aaa
ret
ds
out
in
push
push
jne
sahf
pop
fnstsw
clc
clc
inc
loop
out
movsb
nop
sbb
lods
dec
sarb
mov
pop
jle
lret
pushf
xchg
addb
addl
mov
dec
ja
lahf
xchg
movsl
arpl
mov
bound
int
fs
in
aas
pop
cmp
cld
xchg
aaa
mov
outsb
sbb
ljmp
rorl
rcr
push
data16
cmp
and
inc
aas
push
add
push
pop
ss
sbb
sbb
out
jmp
scas
mov
call
cmp
jp
adc
inc
testb
ret
push
mov
ja
mov
cwtl
cmp
popf
sbb
popa
xchg
and
clc
mov
sub
repz
cwtl
cmpb
sbb
sub
xor
jns
jne
fsin
xor
stos
jns
rcll
pop
or
cmp
sbb
mov
adcl
cld
cmp
pop
mov
mov
adc
xor
std
add
sbb
dec
and
push
sbb
ret
add
testb
xcrypt-ofb
cmpsl
lods
mov
mov
pop
adc
adc
sahf
push
jp
rcrb
mov
inc
lret
lret
sub
jge
adc
pop
cli
popa
adc
pushf
xchg
inc
out
mov
scas
add
imul
sbb
stos
cmp
adc
sub
aas
call
sub
pop
add
cmc
mov
push
enter
adc
or
scas
cmpsl
or
mov
xor
xor
push
insl
push
cwtl
pop
jb
gs
fcmovb
iret
xchg
cmp
int3
int
mov
add
xchg
xor
inc
dec
out
rcr
or
rclb
xchg
cwtl
and
push
dec
ret
daa
popa
sub
cli
cmp
insl
imul
xchg
pop
out
pop
xlat
cmp
push
xchg
pop
into
jns
mov
adc
notb
push
in
repz
in
call
sbb
scas
xor
arpl
ds
pop
cmp
mov
aad
rcrb
sub
mov
repz
int
popf
cmp
imul
push
lahf
adcl
sbb
in
shl
scas
bound
xchg
or
dec
adc
mov
popf
or
arpl
add
jp
sbb
sbb
sbb
mov
sbb
in
push
jmp
adc
movsb
sbb
add
inc
rorl
in
and
or
cltd
ds
pop
adc
sahf
pop
xchg
dec
int3
pop
rolb
popa
dec
jle
mov
std
arpl
push
shrb
test
adc
or
test
je
cs
jbe
ret
pop
dec
loopne
or
mov
hlt
sti
in
sub
mov
mov
loope
pop
mov
test
dec
mov
sub
popf
in
add
iret
jg
popf
les
fsubl
in
mov
cmp
pop
and
push
or
mov
and
sbb
cmpsb
push
mov
stos
jo
or
test
jb
insl
cmp
xchg
in
divl
or
ds
mov
mov
fisubrl
ret
iret
jl
clc
push
test
loopne
add
fs
add
sbb
loope
mov
ret
inc
xor
adc
xor
inc
in
icebp
dec
incb
mov
test
xchg
in
mov
and
mov
test
push
pop
cli
lods
repnz
into
xchg
pop
push
out
outsb
outsb
gs
fwait
cs
mov
add
arpl
xchg
icebp
pop
mov
xlat
push
ss
pop
mov
inc
pop
or
cmc
push
out
cmp
mov
orb
inc
je
push
adc
push
xchg
sbb
xchg
fldcw
mov
pop
push
jecxz
mov
and
xchg
pusha
stos
in
repnz
dec
mov
pop
adc
or
aas
pop
pop
mov
ja
adc
push
sub
add
push
sbb
stos
jno
dec
fisttpll
cmp
push
fisubl
ja
and
pop
movsb
sub
push
inc
mov
mov
scas
xchg
mov
iret
repz
mov
push
inc
xchg
shll
lods
sub
test
fbstp
mov
xorb
mov
outsl
js
cld
mov
xchg
mov
jg
cmp
pop
adc
call
lds
jo
push
std
xchg
jle
dec
mov
mov
aam
lahf
mov
add
mov
lahf
stos
pop
sbb
xchg
dec
pop
test
add
push
add
xor
push
outsl
and
jbe
out
push
mov
xchg
pop
sbb
jno
in
xchg
in
add
cmp
mov
rcrl
fucom
push
and
roll
outsl
xor
clc
shll
sub
push
lret
adc
xchg
stos
mov
decb
dec
notb
psrlw
jmp
xor
movsl
mov
lea
ljmp
loop
ret
movsl
jb
sahf
mov
cld
in
mov
inc
scas
push
dec
dec
lods
cmp
dec
aas
stc
insb
in
dec
dec
fdivr
int3
pushf
cld
fidivrs
and
cmpsl
adc
aam
clc
inc
std
and
mov
jno
add
xchg
inc
loopne
jbe
fwait
aad
cmp
imul
adc
rorb
aam
aad
out
dec
pusha
pop
int
aad
ficoms
adc
ja
pop
stos
adc
push
loopne
mov
icebp
lods
pop
cmpsl
aaa
int
repz
pop
mov
and
fadds
std
add
inc
jns
subb
add
push
mov
xor
ficomps
xchg
icebp
loopne
out
movsl
push
xchg
push
xchg
das
xor
sub
sub
push
and
dec
cmp
jno
aaa
ficoms
shll
cmp
mov
sbb
mov
adc
cmc
push
mov
mov
xor
cmp
pop
mov
jae
push
jnp
out
insl
xor
cmp
arpl
jno
mov
nop
or
jae
pusha
repz
cld
das
xorb
mov
pop
stos
subl
jmp
ret
test
mov
mov
shrl
into
roll
cmpsl
popf
loop
call
sbb
jecxz
sub
push
xchg
add
sub
in
mov
xor
arpl
js
mov
fidivl
cli
std
xchg
sbb
icebp
sbb
rcrb
xor
inc
fildll
mov
jo
cld
pop
pop
xchg
out
enter
leave
add
inc
push
sbb
nop
es
inc
add
sti
lret
into
xor
rorl
f2xm1
inc
pop
cmpsl
negb
in
in
push
pop
dec
push
lods
mov
push
iret
and
or
inc
jo
dec
mov
inc
mov
rcrl
or
jns
sub
test
xor
sbb
adc
aas
jnp
popa
mov
inc
push
pop
lcall
add
dec
inc
fistpll
inc
and
lods
aad
outsl
push
dec
cmp
push
jbe
cwtl
cmpsb
std
repnz
xchg
sbb
mov
loopne
popf
pushf
data16
xor
pushf
mov
das
enter
repz
into
sub
in
rcrl
or
inc
inc
in
in
and
loop
xchg
xchg
cs
inc
inc
cmp
fs
xchg
gs
sbb
pop
adc
sahf
in
pop
arpl
fsubrl
dec
movsb
fistps
fsubrs
inc
add
out
es
int3
shll
fidivrl
pop
pushf
adc
add
daa
push
mov
icebp
cmp
jmp
dec
cmpsb
mov
sub
or
fisubrs
mov
clc
cmp
cmp
imul
mov
dec
sbb
dec
mov
push
adc
cmpsl
xchg
insl
dec
loopne
stos
and
stos
or
iret
xchg
cmp
and
outsl
mov
les
dec
rol
xchg
fists
jb
mov
dec
aad
inc
cli
gs
and
arpl
mov
mov
movsl
add
cwtl
jns
in
xor
popf
jb
jp
pop
pop
adc
adc
sub
nop
lahf
mov
rcrl
scas
pop
dec
add
pop
into
fmuls
jp
stos
xor
out
adc
out
mov
mov
sbb
xor
add
repnz
mov
enter
dec
pop
sbb
push
insl
mov
leave
xor
dec
insl
lahf
and
out
mov
add
lret
lds
mov
popf
mov
in
add
pop
repz
rcrb
imul
pop
sbb
or
xor
pop
sbb
push
mov
fsubl
iret
loop
movsl
adc
imul
adcb
fmul
mov
sti
imul
mov
pop
push
jecxz
movsl
cmp
push
pop
out
mov
add
inc
sub
mov
xor
lock
fcompl
das
lcall
fstp
and
ljmp
xchg
mov
aad
pop
add
inc
dec
push
nop
sub
push
decl
aad
mov
xor
lahf
std
push
xlat
comiss
movsb
shufps
lea
aaa
mov
js
or
test
jmp
mov
push
jno
xbegin
int3
imul
mov
sti
dec
dec
push
and
cli
jl
add
sbb
fs
sbb
pushf
sbb
ret
or
mov
mov
int
cmp
mov
cmp
push
xchg
cld
dec
push
enter
in
repz
mov
insl
xchg
pushf
imul
add
push
mul
jmp
int
hlt
xor
es
push
pushf
into
jns
add
cmp
xchg
and
stos
xor
int3
fdiv
mov
cmp
jp
repz
in
call
aas
jbe
fsubrl
lcall
xchg
mov
xchg
cmp
popa
iret
xchg
popf
dec
adcb
negb
ja
sub
sbb
sub
xchg
test
ret
movsb
insl
add
push
pop
mov
and
dec
hlt
mov
int
sub
dec
mov
push
mov
jmp
inc
pushf
out
lods
jle
push
mov
xchg
arpl
pop
lods
jecxz
xchg
mov
pop
loop
push
fdivrp
stc
loopne,pn
pop
mov
push
or
mov
inc
jg
cld
push
push
add
jb
or
jmp
xchg
add
imul
fimuls
fadd
sti
xor
out
cmp
sub
and
mov
cld
movsl
popf
movsb
divl
jp
js
push
or
add
xor
outsl
xor
outsl
adc
and
inc
sub
imul
dec
xchg
ror
mov
xchg
dec
dec
movsl
dec
test
js
add
jecxz
sahf
xchg
jge
dec
js
sub
sub
jae
cmpb
push
sbb
cmp
ud0
call
and
and
adc
xchg
add
sbb
nop
pop
mov
jecxz
push
jl
jle
xchg
push
mov
sti
outsl
pop
sbb
dec
out
aas
inc
pinsrw
iret
iret
or
sbb
mov
repnz
cmpsb
lods
shlb
aaa
inc
xchg
mov
int
lret
test
mov
xor
test
sti
push
lods
lds
jns
shll
leave
pop
lret
cmp
in
push
out
rcll
sub
jg
je
sbb
xor
shr
fimuls
mov
jbe
pop
lcall
xor
pop
loope
xchg
mov
push
stc
scas
in
aaa
scas
lret
xchg
jle
int
inc
int3
or
outsl
fs
mov
cmp
imul
int3
and
aam
out
push
and
clc
cmp
ret
arpl
add
jge
pusha
sbb
xchg
lods
mov
jo
push
xor
add
pop
out
sbb
dec
lret
test
hlt
out
xchg
jo
arpl
mov
mull
jmp
pusha
push
or
pop
out
or
inc
int3
xlat
daa
add
lret
fisubrs
adcb
bnd
sub
lret
jle
xor
lods
mov
rolb
adc
push
sarb
lds
in
jae
push
lahf
xchg
inc
stos
rorb
into
je
scas
lret
lcall
mov
sbb
mov
inc
mov
jle
xor
stos
imull
pop
jo
push
loopne
ss
cmp
jbe
cs
jbe
jmp
lcall
pop
leave
push
xorb
arpl
sub
cld
pop
out
enter
sub
movsl
movb
je
mov
add
or
xor
lret
test
aaa
in
xchg
sub
mov
ljmp
icebp
sbb
push
repz
push
jle
mov
dec
dec
jle
push
test
dec
repnz
icebp
insl
push
popa
mov
cwtl
dec
out
jp
scas
inc
mov
cmp
dec
sub
dec
jmp
lcall
sarb
aam
jle
das
xor
cmp
popf
cmp
mov
push
inc
or
loopne
fnstenv
in
gs
mov
or
in
into
arpl
dec
jnp
and
mov
scas
xchg
xor
lock
lret
ja
or
testb
mov
inc
test
xor
add
mov
mov
test
int
icebp
xchg
xchg
mov
test
sub
sub
repnz
out
inc
xor
mov
test
insb
inc
bound
dec
sbb
sbb
dec
or
push
loop
nop
popf
jnp
sbb
jns
and
subb
rcll
sbb
sbb
loop
testb
dec
xchg
xchg
fs
cmp
hlt
movsb
mov
or
sub
sub
cmp
stc
inc
lock
cld
mov
mov
cmp
movsb
pop
arpl
or
aaa
sbb
xor
stos
lret
inc
fnstsw
mov
ljmp
enter
pop
je
xchg
shlb
fbstp
mov
jae
jg
je
push
lds
jle
lods
repnz
fstp
int3
ficomps
test
dec
out
shll
lods
dec
cli
into
mov
cmp
push
xor
pop
fsts
mov
jbe
psrad
ret
out
pop
loope
and
sbb
sub
ret
mov
nop
jp
sbb
ss
rcrl
xchg
sbb
lea
or
or
or
jae
mov
push
xor
test
rol
loop
hlt
xchg
jnp
iret
xchg
and
flds
or
mov
fcom
inc
jb
jmp
mov
cmpsb
out
mov
xchg
inc
inc
xor
cmpsb
std
xchg
sbb
scas
or
mov
jge
mov
lret
sub
rcrl
mov
mov
xchg
mov
fldl
dec
stc
cwtl
sub
insb
mov
and
jnp
mov
icebp
inc
cltd
push
es
loope
ja
or
adc
int3
xchg
popf
lahf
sbb
mov
js
sub
ret
xchg
mov
mov
adc
pop
pop
lcall
mov
pop
lret
lret
insb
push
cmp
out
in
add
sub
add
adc
push
out
xor
adc
sub
xor
leave
cld
sahf
mov
repnz
leave
lods
sbb
iret
test
out
sbb
popa
push
cmp
or
fildll
pop
enter
xchg
mov
dec
hlt
or
xor
inc
or
jnp
out
faddl
pop
xchg
jne
iret
cmp
inc
sbb
jle
mov
lds
stc
test
and
mov
cwtl
into
or
sub
cmp
js
add
lods
push
cmp
adc
fisubrl
inc
xor
fcmovbe
dec
adc
xor
fmul
adc
negl
xlat
and
push
inc
fcoml
fsub
xor
add
mov
stc
or
add
pop
sarb
or
orb
dec
leave
fnstcw
imul
icebp
xchg
xchg
sbb
jmp
pop
and
sub
jns
call
rorl
mov
scas
inc
jmp
mov
lods
mov
popa
mov
cmp
pop
loop
aaa
pop
mov
cwtl
popa
pop
shrb
fildl
cmp
jecxz
fdivs
std
xchg
ja
and
cltd
push
cwtl
repnz
rcll
repz
scas
les
and
cld
sub
int3
fsubrs
add
int3
sar
add
insl
loope
into
xor
pop
and
stos
xorl
subb
jmp
movsl
dec
inc
jge
ds
jb
inc
es
cmp
jg
jle
cmc
and
or
imul
jb
push
pop
sub
xor
sti
push
and
or
and
iret
shll
shll
mov
sbb
push
insb
inc
jmp
fnsave
dec
add
push
imul
xlat
pop
xor
scas
sahf
sti
shlb
fcmove
lods
xor
enter
popa
jle
adc
sub
cmp
cmp
mov
inc
pop
pop
scas
mov
cmp
pop
cmc
lcall
scas
jl
es
add
xor
adc
push
test
pushf
jno
jg
setno
es
mov
mov
push
xchg
pushf
jecxz
jnp
pop
imul
push
mov
mov
xorl
mov
in
fistpll
xor
loope
dec
add
or
ret
dec
jnp
shlb
aam
and
ljmp
mov
int
inc
jle
das
jle
stc
cs
notl
dec
setae
clc
fcompl
dec
dec
aad
xchg
pusha
push
lock
xchg
imul
shr
arpl
in
loop
out
xor
pop
das
inc
in
orl
fs
mov
sbb
pushf
xchg
adc
insl
imul
fcomp
xlat
fsubrs
mov
xchg
out
push
insb
leave
dec
fstpl
or
jne
scas
jbe
cmpsl
bound
iret
or
addr16
sbb
dec
movsl
adc
mov
out
and
call
xor
dec
paddsb
sbb
out
nop
dec
push
push
and
nop
and
stos
push
mov
xorb
arpl
jmp
fistpll
jl
pop
xor
ds
imul
add
psubq
das
jmp
sbb
jae
in
jnp
lahf
cli
jbe
iret
scas
negb
and
and
and
pop
add
hlt
lock
cmp
fs
pop
into
mov
push
push
sbb
fisubrs
into
imul
push
jbe
out
mov
pop
sub
mov
jmp
pop
xor
mov
fistpll
loop
dec
add
cmpl
push
aad
sti
out
inc
jmp
jl
inc
and
loop
out
cmpsb
cmc
sbb
cmp
pop
jns
adcb
shlb
xchg
mov
icebp
outsl
insl
sub
cmp
or
cmp
or
add
add
mov
mov
and
xchg
arpl
popf
adc
cli
xor
sub
fmul
not
ficoml
and
push
imul
dec
in
pop
inc
xchg
and
mov
jo
push
mov
jecxz
pop
add
xor
xchg
test
pop
jo
xchg
pop
xor
int3
fisttps
and
shrl
enter
pusha
sub
cmc
pop
pop
and
jle
arpl
lcall
inc
mov
add
mov
inc
enter
cs
lret
lret
jns
fdivl
adc
pop
out
hlt
pop
test
lock
mov
jl
inc
sub
pop
fnstsw
or
inc
sbbl
pop
dec
test
xor
int
cwtl
cmp
into
inc
inc
pop
mov
xor
xchg
les
aam
sbb
nop
xor
jecxz
and
jge
stos
lret
out
mov
imul
insl
ret
int
pop
out
push
js
push
xor
cmpsb
jg
lcall
or
cmpl
out
hlt
sbb
jb
jp
mov
push
scas
lcall
add
test
loope
push
jecxz
cmp
scas
ljmp
jo
test
mov
xchg
mov
fmull
mov
xlat
adc
adc
xchg
add
std
pop
mov
adc
pushl
test
adc
imul
dec
enter
adc
inc
div
jg
push
and
mov
outsb
inc
fwait
sub
xor
xchg
cltd
dec
je
mov
push
in
xor
imul
ljmp
out
pop
push
seto
jae
mov
add
stos
jns
jle
jbe
int3
or
jns
insb
sbb
jae
mov
shl
mov
push
dec
jbe
inc
inc
and
sti
fistpl
jbe
lcall
dec
ret
lret
ret
sbb
jle
adc
sbb
xchg
inc
sub
sub
push
fwait
sub
mov
xor
jno
or
sbb
xchg
fstl
and
outsl
call
pop
push
repz
and
inc
sub
enter
inc
jae
daa
and
jmp
fbld
xor
adc
lock
movsl
add
dec
rcrl
and
lds
out
loopne
hlt
icebp
cwtl
insl
and
cmp
pop
lcall
in
mov
mov
xchg
loope
fdivp
je
enter
mov
pop
inc
imul
mov
or
inc
mov
push
je
mov
loopne
sbb
int3
jae
sub
xorl
inc
addb
and
jp
bound
orb
shrl
lcall
es
push
and
or
xor
add
push
mov
and
pop
xchg
lahf
je
test
push
cmp
lods
pushf
fiadds
sub
push
insl
icebp
inc
sub
shlb
jg
xor
sti
into
sahf
add
xchg
or
les
dec
call
and
js
mov
push
sub
xchg
fisttpll
lea
arpl
sub
or
pusha
sbb
das
add
dec
push
aad
js
inc
jno
lret
andb
sarl
mov
adc
jnp
cmpsb
mov
movsl
js
rorl
sub
add
call
mov
and
cltd
mov
cmc
push
dec
ror
lahf
dec
addr16
sub
pop
out
or
push
xor
push
jmp
out
or
xchg
dec
dec
mov
in
mov
aaa
push
lds
out
sbb
mov
rorl
adc
enter
xchg
pushf
lahf
leave
add
and
adc
in
jns
outsl
scas
in
insl
cmp
dec
int
mov
divl
das
out
psllq
movsl
pop
fidivrl
push
add
mov
test
xor
adc
and
in
dec
pop
xchg
jle
xchg
outsb
js
test
lds
ror
out
mov
and
fwait
mov
dec
dec
cmp
ret
fildll
loope
mov
sub
aad
dec
dec
iret
lret
fdivrs
pop
or
daa
test
dec
data16
jnp
pop
inc
cmpsl
sbb
mov
gs
rcll
pop
add
xchg
adc
ret
popf
mov
ret
and
test
cli
imul
insl
out
pushf
movsl
shll
out
stc
mov
jp
movsl
shlb
xor
sub
ret
daa
cwtl
xchg
mov
mov
into
fidivs
xchg
dec
lahf
xlat
in
mov
push
xor
mov
jno
mov
rcrb
ljmp
pop
lret
push
mov
repnz
cltd
and
pop
pop
jno
mov
dec
cmp
inc
xchg
test
add
sbb
sbb
leave
leave
imul
test
or
xor
sahf
mov
dec
bound
ss
ljmp
add
movsl
cs
rclb
push
gs
test
or
dec
rclb
arpl
out
xchg
or
rcrb
aad
call
adc
jecxz
cmp
std
and
into
popa
lret
pop
fstl
aaa
xchg
pop
add
pop
pop
std
and
ret
jmp
and
or
push
dec
sarb
inc
mov
inc
sub
in
push
mov
and
mov
mov
in
jno
mov
out
xchg
or
test
mov
rcrl
imul
push
dec
inc
xorb
ret
cmp
scas
adc
jo
test
or
pop
fwait
test
add
push
dec
cmpsb
mov
mov
fildll
dec
dec
mov
or
rcr
adc
pushf
fmuls
lea
pop
test
pop
jle
sahf
fisttps
fstpl
and
mov
push
rorb
ja
or
mov
push
test
pop
icebp
aam
xchg
out
notb
cli
jb
xchg
lds
incb
dec
cltd
ret
push
add
dec
jmp
jo
mov
das
in
mov
cmpsl
jg
lret
loope
add
popa
pop
sbb
fcmovu
test
loopne
ret
hlt
mov
push
xor
inc
mov
sbb
jl
xchg
leave
movsl
pop
inc
pop
daa
or
sub
fsts
pop
cmpsl
xchg
mov
sbb
es
add
lcall
and
mov
ja
xchg
inc
xor
dec
push
lcall
xchg
dec
cmpsl
xor
add
pop
arpl
cmpsl
faddp
jmp
lock
push
pop
sahf
adc
cmp
sub
cwtl
inc
out
pop
inc
jbe
rclb
adc
lea
sar
jae
cwtl
xchg
sahf
mov
flds
cmpsl
cmp
mov
lahf
sub
loop
cmp
xchg
xchg
into
test
cmp
xchg
cmp
lret
lds
shll
sbb
inc
movsl
cmpsl
fwait
call
add
jmp
jmp
sub
int3
cld
ficomps
rcrb
jle
sbb
repnz
inc
push
sbb
das
jbe
dec
pcmpeqb
mov
push
out
mov
sbb
adc
loope
lret
inc
in
push
add
push
push
aam
or
push
sbb
add
xor
int3
mov
outsl
push
add
cmp
loope
jo
dec
call
mov
int3
jg
in
pop
lret
imul
xor
lea
xor
aaa
ret
sub
testb
mov
sbb
test
lahf
loop
stos
or
mov
enter
pop
adc
mov
setle
adc
out
enter
fiaddl
or
jns
mov
popa
xchg
mov
popf
pop
sbb
lods
inc
push
shl
ficompl
mov
mov
jl
sub
sahf
add
hlt
sub
mov
xchg
sti
jecxz
or
fmuls
mov
push
loope
push
out
mov
lods
jp
xchg
divb
pop
jo
int
into
push
outsb
mov
jbe
fistpl
inc
test
cmpsb
sbb
jbe
jecxz
shlb
push
mov
lods
push
aam
and
cli
movsb
es
popa
sbb
and
mov
insb
mov
stc
xor
mov
mov
sub
inc
jl
and
cmp
addr16
dec
stc
adc
scas
cmpsl
and
pop
xor
jae
mov
daa
aas
test
cltd
shlb
mov
push
cli
dec
out
into
sarb
out
sbb
cmp
jle
add
cmp
imul
mov
aad
movsl
pop
insl
add
data16
or
iret
fbstp
xchg
and
dec
pop
mov
rcl
add
inc
movsb
ret
xchg
aad
insl
inc
movsl
ja
in
outsl
add
adc
add
stos
movsl
loopne
and
jno
push
adc
aaa
clc
cwtl
sbb
pop
inc
xorl
adc
jnp
xor
aas
lahf
sahf
add
pop
std
xchg
bound
rcrb
rclb
mov
loopne
push
jmp
ss
inc
mov
cs
sbb
ds
ret
or
pop
sbb
shlb
adc
jp
mov
fistps
int
popf
mov
jmp
mov
pop
jne
inc
sbb
jg
dec
lea
es
out
mov
data16
xor
repz
aam
ret
dec
gs
icebp
push
rcr
clc
bnd
ss
mov
fs
sub
cmp
and
xor
or
sbb
gs
and
dec
in
jmp
dec
sub
pop
push
sub
add
mov
xor
or
ss
dec
aad
push
or
fwait
ds
cmpsb
jns
pop
rcrl
ret
xchg
inc
xchg
mov
ja
outsl
and
cwtl
mov
cltd
push
push
into
lret
lahf
ret
loop
imul
push
push
lea
xchg
add
enter
lahf
push
cmpsb
int
xchg
dec
inc
cwtl
xchg
stc
sub
cli
adc
sub
cld
add
mov
scas
mov
clc
pop
adc
jecxz
mov
xor
std
mov
fdiv
clc
pop
add
adc
in
add
out
add
sub
pop
pusha
or
pop
sbb
dec
jb
inc
push
inc
rcr
xchg
sbb
jle
in
test
int
push
mov
not
gs
out
movsl
xor
add
ret
scas
js
addr16
jbe
fldl
xor
daa
call
mov
cli
and
scas
sub
mov
mov
push
mov
cltd
add
sbb
daa
popa
sub
dec
mov
pop
shrl
push
pop
and
mov
mov
xor
inc
fnstsw
or
mov
fs
fwait
js
fwait
das
std
stos
push
jno
xor
push
lret
mov
cli
popf
test
aad
jb
call
adc
std
pop
jns
and
iret
mov
inc
sbb
call
lahf
xor
or
xchg
pop
adc
xchg
jmp
ret
push
adc
enter
xor
andl
jnp
aad
mov
jns
adc
pushf
pop
inc
bnd
int
std
mov
andl
aad
xchg
js
mov
fwait
negl
xchg
fiadds
fstps
dec
lret
call
int
into
or
dec
mov
jnp
test
int
push
mov
cmpsl
repz
fxch
cwtl
dec
test
inc
out
fsubrs
icebp
ret
iret
adc
pop
xchg
push
mov
dec
lds
xor
jmp
push
fldl
dec
loop
out
adc
fwait
add
xor
jne
inc
pop
push
fnstsw
stc
sub
push
push
in
shlb
or
pusha
aas
pop
xor
repnz
lods
inc
pop
mov
xchg
xchg
sbb
or
es
ljmp
sbb
cltd
hlt
cmp
pop
sar
lock
jne
jg
mov
das
lcall
sbb
mulb
lcall
push
and
sarl
mov
pushf
loop
adcl
mov
cmc
or
loopne
scas
leave
jns
xchg
out
sbb
js
mov
dec
lds
test
cmpl
ret
das
popa
cmp
jecxz
lods
filds
mov
inc
popa
stc
pop
dec
repnz
into
sbb
cltd
rol
pop
mov
mov
mov
sbb
jg
testb
push
sub
push
mov
mov
fidivs
jo
leave
mov
mov
pop
lret
push
lcall
test
or
sbb
ljmp
test
and
push
fisubl
vmaxps
mov
cmp
inc
jecxz
insl
cmpl
jnp
repnz
clc
xchg
adc
popf
sub
movsb
jno
scas
mov
sbb
aaa
jecxz
inc
jns
lahf
dec
mov
leave
test
cmp
jg
mov
sub
das
dec
cmpsl
out
pop
sbb
enter
popf
mov
lret
sbb
repnz
sub
add
sub
dec
ss
es
aaa
mov
cld
fistl
pop
sbb
cmp
mov
hlt
jge
xor
ljmp
into
sbb
sbb
dec
inc
aam
push
out
mov
sub
and
sub
jbe
cmp
xor
push
stos
mov
mov
mov
pop
cmp
test
push
and
aaa
push
xor
pushf
xchg
mov
mov
pop
push
cmp
adc
mov
mov
xor
iret
lods
jg
push
cltd
mov
xor
pop
loope
push
fdivs
aad
push
xchg
dec
or
lods
rcl
iretw
mov
cmpsb
popf
repz
repz
sarl
subb
dec
adc
mov
jle
and
or
aas
jge
das
popl
adc
xor
add
mov
mov
mov
insb
sub
imul
es
lds
loope
movsl
mov
and
jmp
ror
xchg
int
mov
imul
loop
jbe
xor
mov
lods
dec
cli
cs
gs
and
and
cmp
sbb
stc
mov
fldenv
adc
outsb
cld
mov
jle
or
add
outsb
jmp
repz
ficoml
repnz
mov
or
cmp
adc
mov
into
pusha
xlat
rcrb
sub
movsb
and
arpl
mov
push
int
jecxz
mov
punpckhwd
xchg
push
incb
add
xchg
inc
loope
movsb
lcall
icebp
pusha
mov
out
mov
ljmp
cmc
aaa
or
fists
ret
dec
fst
out
sbb
pop
sar
mov
push
jns
sbb
setge
dec
into
test
mov
mov
adc
mov
lods
mov
inc
bound
jb
iret
fmul
mov
inc
xchg
mov
pop
arpl
repz
adc
cmpsb
or
push
add
sub
jge
adc
loop
jecxz
cmp
mov
ja
stos
in
lock
xchg
xor
and
push
shll
inc
dec
fcoml
push
dec
dec
inc
lret
inc
sub
das
cli
dec
add
mov
xchg
mov
aad
push
lahf
out
mov
out
lea
add
movsl
cmp
insl
add
adc
inc
sahf
mov
out
cli
sti
jne
rolb
xor
add
movsl
xchg
cwtl
repnz
and
jle
adc
xor
out
dec
ja
fcomps
adc
jbe
adc
jmp
add
leave
jb
rcrb
mov
and
int
cmp
jg
xchg
add
hlt
push
push
mov
push
call
fnsave
pusha
and
or
outsl
movb
and
push
in
ficoml
mov
je
or
jo
mov
mov
adc
cmp
cld
add
jge
vmovd
xor
popf
ja
mov
sub
pushaw
in
nop
hlt
mov
xor
arpl
xor
push
sbb
add
sub
gs
std
inc
jp,pn
lahf
cmp
mov
push
lds
imul
dec
fldenv
in
fidivrs
and
addr16
ljmp
xor
setge
xchg
out
outsl
call
ljmp
xchg
negl
imul
sub
pushf
aas
jns
adc
ds
jbe
xchg
add
fs
test
xor
mov
in
xchg
cltd
sub
mov
jns
cmp
dec
shrl
imul
and
adc
push
or
adc
pop
into
adc
mov
add
jb
sub
daa
xor
mov
movsb
inc
and
inc
popf
das
ss
mov
cltd
mov
xlat
pushf
ds
loopne
enter
xor
lcall
sub
ljmp
cmovge
in
iret
push
in
cmp
xchg
jmp
sub
test
and
adc
fistpl
dec
lahf
aad
add
push
add
adc
out
lods
out
lea
adc
int3
adc
dec
xchg
mov
ds
enterw
outsb
pop
or
xchg
push
out
outsl
inc
jnp
adc
add
xchg
sbbb
mov
inc
fwait
push
roll
out
filds
xchg
sahf
dec
or
adc
ja
push
sbb
inc
dec
mov
dec
adc
testb
push
in
cwtl
lods
inc
les
pop
outsl
xchg
mov
push
and
out
ds
sti
pop
hlt
lret
cmp
push
and
into
stos
pop
rorb
ret
inc
or
rorb
icebp
mov
js
es
add
loope
call
dec
sbb
fadds
mov
pop
clc
adc
nop
repz
fstps
popf
and
jmp
es
in
jle
pop
and
clc
sbb
xchg
shlb
or
jge
adc
mov
inc
aaa
xchg
mov
repnz
ficoms
cmc
dec
fsubl
fmull
or
in
jns
sub
pop
insl
stos
push
subb
mov
cmp
les
jle
inc
insl
int3
mov
scas
xchg
fld
shlb
push
mov
pop
sahf
mov
out
scas
stos
cs
xor
sub
xlat
out
clc
inc
mov
push
xchg
das
ljmp
adc
test
lret
adc
adc
pop
outsl
mov
imul
js
xor
dec
fiaddl
inc
mov
inc
fisubrl
fiadds
push
inc
popf
push
sub
inc
xchg
sti
mov
cmp
jge
repnz
in
cmc
xor
pop
imul
test
cmc
push
mov
lahf
pop
pop
in
pop
test
sbb
lea
insl
lds
xor
and
pop
xchg
test
fcomps
outsb
ret
enter
mov
dec
popf
lds
xlat
pop
mov
test
lock
hlt
dec
rcl
cwtl
jp
mov
cmc
add
push
sbb
pop
fwait
fs
jp
sub
sbb
stos
notb
ret
lods
pop
aaa
aad
pop
mov
faddp
sbb
pop
pop
arpl
mov
dec
pop
cmp
mov
jge
mov
jo
pop
push
lock
cmpsb
cwtl
dec
ja
cmpsb
scas
inc
nop
pop
stos
fcmovbe
mov
add
aaa
xor
xor
xchg
mov
in
jae
lock
mov
test
mov
add
hlt
ficoms
sub
push
out
mov
sarl
and
fsubs
stos
adc
push
aad
inc
and
popa
mov
dec
ret
lock
and
sbbb
in
aam
mov
in
fdivp
popa
andb
sahf
fdivrl
cmp
in
push
pop
mov
mov
outsl
in
aas
clc
and
adc
xchg
pop
pop
sbb
bnd
lods
lods
bound
jb
inc
jnp
jge
popa
or
jle
rorb
xchg
repnz
repnz
testl
or
xchg
jle
imul
pushl
loope
push
mov
xchg
mov
sub
in
inc
mov
in
lret
push
repz
clc
ds
insl
inc
add
mov
es
cld
outsl
mov
jns
mov
dec
clc
sbb
in
and
daa
push
int
cmpsb
inc
aam
data16
scas
mov
in
pop
ja
push
inc
xchg
adc
pop
cld
mov
xor
xor
sbb
push
mov
in
inc
xor
jge
push
lahf
sub
add
lahf
ljmp
stos
out
aaa
nop
mov
mov
ret
xor
call
lcall
stc
daa
mov
fstpl
lds
pop
inc
imul
cmp
pop
lret
push
mov
movl
out
icebp
sbbl
call
push
popa
out
ds
in
add
lock
add
inc
icebp
testl
sarb
jo
dec
xchg
mov
ret
xchg
pop
je
test
mov
add
add
push
lods
imul
in
xor
cmp
sar
xchg
jne
sub
push
xchg
shrl
pop
addr16
and
fcomps
xchg
jbe
adc
mov
decl
adc
fildll
repz
mov
fs
das
in
add
fwait
or
push
stos
pop
inc
xor
push
adc
and
dec
xchg
xor
inc
fsts
push
addr16
xor
cmc
mov
xchg
int
int
inc
mov
add
mov
mov
jo
test
add
push
mov
aaa
repnz
fmull
repnz
dec
xor
mov
xchg
jne
mov
push
inc
pusha
outsb
mov
mov
int
mov
dec
cmp
addr16
movaps
shl
js
fidivrs
xchg
or
test
and
add
pop
or
in
aas
or
pop
adc
cmp
push
push
int3
in
nop
or
movsl
out
scas
mov
mov
bound
push
dec
daa
sub
shr
mov
add
fldln2
sub
pushf
cmp
lahf
pop
add
mov
and
mull
xchg
fsubrl
cmp
pop
daa
dec
push
scas
test
sahf
sbb
imul
frndint
das
test
fcmovnu
jbe
mov
loope
xor
push
ljmp
pop
idivb
push
inc
movsl
sub
inc
test
inc
or
push
sbb
cmp
cld
mov
in
lret
int
sub
mov
push
xor
pop
pop
lods
lret
jecxz
jno
enter
call
sbb
mov
incb
inc
ret
jbe
arpl
in
pop
mov
mov
adc
fldt
mov
mov
es
sbb
cli
jb
rcrl
add
rcrl
add
add
sub
jmp
pop
jecxz
sahf
lcall
mov
divl
aad
mov
mov
sahf
or
cs
inc
fisubrl
lock
scas
movsb
ror
sub
neg
out
jo
xor
rcll
out
movsb
sub
sti
sbb
jb
scas
mov
or
pop
xchg
lods
xchg
mov
sub
add
or
cmp
das
xchg
xlat
stos
mov
mov
mov
mov
iret
repnz
mov
or
testb
xchg
testb
insl
push
pusha
pop
cmp
int
or
or
pop
inc
and
leave
lahf
sbb
inc
sub
xchg
daa
or
pop
jl
dec
push
shlb
add
mov
xor
jle
psllw
repz
mov
push
clc
pop
dec
push
mov
sahf
jae
scas
jecxz
inc
cmc
cli
insl
fsubrl
imul
xchg
das
aas
dec
cmp
insl
loope
pop
and
outsb
and
jg
or
in
mov
aaa
jg
cwtl
mov
imul
dec
push
dec
shll
test
lods
inc
inc
fisttps
les
mov
inc
mov
fcoml
xor
sub
xchg
dec
add
adc
outsl
pop
lahf
jecxz
movl
jge
add
jo
dec
jno
or
mov
shl
inc
cltd
int3
outsl
das
test
adc
jo
pop
imul
push
push
in
pop
pop
pop
jl
cs
leave
fucomi
pop
inc
ljmp
int3
std
inc
pop
dec
nop
sub
insl
sti
sbb
jnp
adc
out
pushf
add
fsts
cs
mov
sbb
mov
inc
cli
lods
mov
mov
les
xlat
and
inc
xlat
fwait
push
and
dec
cli
xchg
sub
mov
lock
je
push
xchg
xchg
aas
cs
push
adc
test
add
packsswb
dec
addr16
and
out
dec
mov
repz
mov
pop
cmp
inc
inc
xchg
test
int
loopne
icebp
pusha
mov
dec
sbb
push
pop
dec
loopne
adc
push
leave
mov
cmpsl
xor
subl
dec
xchg
mov
push
push
in
cmpsl
into
cmpsl
sahf
xchg
xchg
pop
add
es
push
xchg
lock
es
bound
mov
mov
xchg
pusha
aad
pop
and
call
dec
or
push
or
adc
or
mov
mov
jl
mov
xchg
setns
gs
push
movsl
jecxz
dec
jmp
mov
sti
sub
mov
push
mov
jge
or
mov
dec
imul
jne
pop
and
mov
adc
inc
dec
movb
inc
rcl
push
clc
pop
xlat
push
mov
cwtl
xor
add
in
shr
inc
lret
fs
nop
ds
sub
push
sbb
es
mov
or
sahf
pop
shrb
dec
jno
lret
and
sbb
inc
add
mov
loope
mov
out
inc
xchg
push
xchg
or
lcall
pop
shll
outsl
cmp
imul
popf
cmpsl
xchg
gs
or
mov
loope
cwtl
icebp
pusha
stos
cmpsl
jns
or
mov
mov
or
cmp
les
xchg
cmp
jb
push
mov
call
cld
aam
push
ljmp
adc
mov
cmp
rolb
and
push
aaa
and
outsb
movl
insb
hlt
in
dec
xchg
jecxz
mov
nop
test
mov
scas
xchg
or
xor
dec
in
int3
xchg
cmp
jge
sub
std
cmp
jae
jno
adc
out
or
int
mov
cli
mov
lcall
sbb
cmp
mov
out
cmp
gs
mov
xchg
pop
sbb
cld
jae
orb
inc
in
repnz
insl
in
mov
fisttpl
je
jl
aas
iret
adc
mov
inc
jbe
push
adc
mov
cltd
ja
es
cli
adc
inc
imul
pop
mov
and
sarl
enter
iret
sub
xchg
pop
sub
mov
lcall
jno
jbe
mov
cmp
daa
xor
xchg
xor
adc
xchg
out
fdivl
mov
adc
cmp
pop
xchg
ret
ja
dec
std
sub
cwtl
in
dec
pop
lock
ljmp
inc
pop
push
mov
dec
repnz
push
out
cmp
popf
je
mov
movsl
pusha
out
data16
mov
ficomps
sbb
fistps
mov
jg
jecxz
enter
in
fnsave
or
scas
adc
cmc
rcr
gs
lcall
push
cs
push
mov
sub
pop
notl
out
push
xchg
jl
or
pop
push
sbb
sub
or
mov
and
push
mov
and
pop
mov
movsb
int3
push
and
pop
xor
mov
fcompl
out
pop
jbe
and
roll
int3
inc
fcomps
stc
mov
pop
movsb
ljmp
stc
nop
jnp
cmpsb
mov
jne
mov
inc
cmc
push
sub
dec
lods
stos
pop
jg
mov
cli
adc
push
out
es
xchg
imul
mov
sbb
rorl
sub
inc
shlb
add
pop
mov
dec
cmpsb
inc
jg
aad
hlt
dec
cs
cmp
ljmp
add
jl
stos
out
arpl
xorl
in
stc
mov
add
xor
sub
fs
lea
lret
ret
popf
fwait
xchg
dec
repnz
or
aam
adc
stc
sub
cmp
aaa
xchg
xor
mov
cmp
test
pop
mov
daa
inc
fstl
in
mov
clc
sub
xchg
rcrl
and
cmpsl
stos
xchg
lea
lds
pop
jae
dec
mov
dec
scas
je
inc
cmp
mov
int3
lods
add
ljmp
test
adc
pop
mov
repnz
ret
dec
leave
cmp
add
shlb
sub
jbe
idivb
addr16
mov
outsb
jo
pop
stos
mov
sub
push
scas
stos
aam
xchg
dec
add
xchg
movsl
frndint
xchg
stc
iret
popf
and
out
lods
sub
jg
push
mov
shr
inc
or
fs
cmp
mov
lahf
or
aad
xor
negb
enter
filds
jne
jecxz
js
push
mov
vandps
push
mov
es
mov
loope
lock
inc
or
xchg
ljmp
push
test
out
scas
fstl
in
lret
sub
inc
xor
cmp
and
shr
popf
jnp
or
push
xor
mov
xchg
add
lcall
imul
and
call
ja
nop
lods
frstor
push
out
rep
inc
ja
lock
inc
lods
xchg
inc
jle
fnstcw
jb
lods
cli
cmp
cmp
adc
je
xchg
bound
dec
jno
push
test
mov
ret
test
scas
dec
psrad
movsb
jg
jp
faddl
pop
xchg
lods
insl
mov
and
xchg
outsb
mov
popf
cmp
fdiv
lock
add
cmp
or
in
cmp
xor
cld
lds
aas
add
jg
or
mov
mov
mov
data16
repz
inc
inc
add
int3
push
mov
jge
aam
push
hlt
lods
pop
lods
jo
or
push
jbe
pop
mov
sub
xchg
and
pop
xlat
inc
sbb
std
rorb
loope
sub
and
out
test
test
mov
test
push
jg
pop
xchg
adc
sub
mov
push
push
push
rol
push
mov
xchg
dec
xchg
pop
cmc
xchg
call
fnstcw
leave
movsl
xchg
jo
iret
lods
movsb
stc
mov
fucomip
sub
xchg
in
gs
loop
push
leave
sbb
fisttpll
xorl
ret
sub
jmp
push
push
lcall
xor
out
cltd
fidivrs
or
mov
add
loope
cmp
and
push
ret
loop
push
or
imul
xchg
repz
cmp
mov
orl
or
jae
adc
pop
clc
cmp
inc
gs
call
pushf
sub
stos
cld
pop
mov
aam
xor
push
add
push
or
jecxz
fs
sbb
les
mov
pop
ret
sbb
mov
xchg
push
mov
or
sbb
out
inc
mov
shlb
mov
stos
fldt
aam
dec
adc
fstps
add
cmp
ret
imul
and
rcrl
or
jnp
orl
test
dec
dec
xor
je
shll
pop
or
xor
lret
inc
cmp
lods
popl
sub
mov
ret
in
sbb
xor
mov
lahf
jns
mov
sbb
xor
cld
nop
sbb
into
add
adc
aad
jmp
jae
adc
inc
or
sub
arpl
sbb
add
and
fldenv
icebp
or
fdivp
sbb
sarb
jmp
in
jno
inc
inc
mov
pusha
mov
mov
es
jbe
or
nop
push
push
clc
fnstsw
mul
hlt
jno
xor
test
int3
test
xchg
inc
imul
push
ja
jl
sub
aad
xor
rcrl
jo
cmpsb
dec
and
xchg
clc
cmp
mov
jo
ljmp
je
testb
ret
rorl
mov
test
repz
lock
push
jb
sub
out
push
rcrl
cld
scas
sbb
inc
push
test
push
orb
stc
and
leave
aaa
scas
mov
push
cmc
repz
xor
adcl
insb
inc
mov
fmuls
push
xor
scas
negb
leave
mov
xor
fldenv
xor
push
adcb
adc
pop
jnp
ret
cltd
mov
cmpsb
and
test
in
xchg
push
repnz
icebp
cmpl
jno
mov
in
in
icebp
adc
repz
ret
jae
and
jne
lods
loopne
fdivrs
mov
sbb
out
mov
lea
and
fldl
mov
out
dec
insl
cwtl
sbb
and
jne
cwtl
iret
pop
push
or
mov
xchg
std
popa
fildl
push
pop
pop
jg
xchg
inc
jnp
js
dec
cmp
leave
mov
and
sbb
cmp
xchg
ljmp
mov
popl
scas
jp
mov
sbb
lods
adc
pop
xlat
mov
cmp
mov
rolb
test
lcall
aam
int3
or
test
leave
enter
cs
add
sbb
bound
in
int3
les
ja
test
ljmp
test
mov
popa
and
xor
add
shr
jl,pn
dec
movsl
or
in
lods
push
fistpl
jno
out
xlat
repnz
xor
dec
jle
fmul
inc
jne
cmp
jecxz
adc
add
ljmp
pusha
push
clc
dec
test
pop
std
xor
sub
in
lea
mov
test
adc
cwtl
inc
test
push
icebp
cmpsb
test
inc
mov
push
mov
aad
sbb
imul
push
jp
bound
xchg
and
cmp
pop
add
test
push
mov
xlat
data16
mov
lret
fldz
bound
in
mov
mov
push
sbb
divb
fs
fcoms
pop
sbb
pusha
sbb
jmp
adc
push
push
xchg
xchg
jae
sbb
add
fs
and
inc
xchg
adc
test
cmc
or
in
xchg
mov
and
xor
mov
out
hlt
andb
lret
les
mov
mov
aas
clc
xlat
lds
pop
adc
lsl
pop
pop
imul
cld
mov
xchg
dec
jo
int
push
lods
aaa
xor
or
mov
jns
pop
inc
xchg
jecxz
cmp
movsl
nop
mov
mov
adc
call
mov
addr16
mov
inc
push
mov
pop
out
addr16
add
dec
push
dec
inc
xchg
dec
dec
bound
pop
jno
xor
test
mov
fnop
cmp
subb
add
sbb
aas
sub
pushf
or
add
sub
pusha
push
outsb
movsb
adc
xchg
fbstp
mull
jmp
scas
jns
xchg
test
add
pushf
cli
jp
mov
mov
mov
or
repnz
mov
inc
cmp
in
sbb
cmp
mov
and
test
pop
cmp
inc
push
xchg
leave
stos
popf
addl
lret
cmp
iret
lds
pop
xchg
mov
mov
jb
cwtl
inc
sbb
loope
sarb
orl
pop
xchg
jl
jae
enter
cmpsb
fiadds
out
cli
push
mov
jnp
mov
fadd
repnz
pop
mov
repz
fnstenv
xchg
std
mov
mov
dec
or
stos
sbb
sub
cli
mov
push
jle
inc
mov
adcl
je
jecxz
mov
or
push
das
sbb
sbb
fiaddl
popf
mov
sbb
out
ret
pop
sbb
push
push
mov
cmp
gs
push
popf
lock
cmpsl
push
push
or
fmull
dec
adc
push
mov
sub
imul
xchg
lock
lea
loopne
daa
xchg
dec
pop
sbb
mov
inc
stc
ret
jmp
push
xchg
aam
push
aad
adc
decb
adc
fldcw
inc
pop
adc
je
addr16
and
push
pop
dec
dec
fildll
out
inc
cmp
notl
dec
iret
stos
push
mov
ficomps
push
xchg
pop
int
mov
das
sub
lret
xchg
xchg
dec
loopne
jl
inc
adc
loop
jp
pop
sbb
imul
imul
fst
out
dec
add
lods
lods
aam
mov
lock
cmp
add
fstpl
dec
loopne
sahf
add
push
xlat
mov
arpl
fcomps
xchg
and
mov
aaa
nop
cmpsl
mov
push
lock
cmpsb
hlt
and
clc
and
ljmp
jnp
pop
cmp
cltd
scas
lea
push
xchg
push
std
sbb
outsl
mov
outsl
mov
inc
imul
mov
xchg
je
inc
add
jp
jmp
jbe,pn
jne
push
cmp
add
xor
and
sub
data16
dec
test
push
pop
popf
inc
mov
push
adc
dec
mov
mov
mov
repz
shrl
cmpsl
fstpl
mov
pop
fcomip
pop
inc
adc
sbb
push
das
loop
xorb
cmp
and
and
mov
mov
cmp
int3
adc
dec
xor
pop
in
pop
mov
lods
push
push
movsl
mov
fsubrs
mov
scas
arpl
xor
jl
mov
mov
mov
sbb
mov
es
mov
xor
imul
insb
cltd
push
cmp
add
cmpsl
mov
xlat
and
imul
sub
mov
mov
test
ljmp
xlat
sbb
hlt
mov
and
push
push
out
mov
scas
fimuls
outsb
mov
cmp
divl
lahf
or
aaa
ret
mov
mov
jo
pop
nop
fwait
jnp
lods
sbb
push
stos
test
cmp
loopne
leave
push
cmp
inc
inc
leave
add
mov
shr
pop
push
popf
mov
add
cmc
outsl
xchg
jmp
inc
out
sbb
bt
mov
pop
lahf
test
daa
es
es
xlat
ds
fidivl
xor
pop
clc
adc
or
sub
out
and
in
mov
rcll
scas
sti
mov
mov
movsb
mov
xchg
sbb
sub
push
cmp
ja
into
pop
jo
cltd
dec
pushf
jo
add
mov
mov
cmp
inc
js
iret
or
add
pop
inc
pop
add
shl
pushf
push
cltd
mov
jo
test
cmp
adc
mov
rorl
mov
pop
jle
xchg
mov
xchg
loop,pn
sub
decl
popf
fcoms
into
into
mov
sbb
test
mov
lret
mov
cmp
lahf
lock
pop
pushl
sbb
stc
fwait
cltd
dec
push
fnstsw
mov
jb
fists
sbb
insb
mov
popa
cmp
add
xlat
pop
gs
cmc
add
push
ljmp
mov
sti
xlat
inc
mov
cli
adcb
xchg
dec
rorb
or
lahf
dec
cmp
sarb
mov
jecxz
inc
pop
mov
mov
jge
js
ss
adc
xchg
sub
sub
sbb
pop
xchg
addr16
lock
jnp
sub
loopne
jo
adc
jecxz
in
sub
jns
xacquire
jno
mov
push
js
mov
and
mov
imul
ret
fisubrs
cmp
xor
cmp
in
movsb
mov
je
push
iret
xchg
fnstcw
or
int
sub
in
jae
cwtl
cld
push
in
mov
push
mov
mov
stos
pop
xchg
psrad
inc
sub
repnz
push
push
xchg
int3
movsb
jne
mov
xlat
xor
nop
xor
out
data16
and
push
mov
adc
shrl
loop
adc
repz
or
add
adc
push
shl
fnstsw
add
jbe
or
insl
push
scas
dec
jns
test
mov
add
push
dec
push
xor
je
icebp
mov
jl
aam
adc
js
cmp
mov
rcrl
lods
or
int
adc
loopne
mull
lret
mov
add
lcall
fidivrs
dec
inc
stos
bound
nop
mov
dec
dec
fcmovu
jl
sahf
push
push
int
enter
adc
or
sahf
out
clc
test
mov
in
mov
stc
adc
sbb
popf
mov
test
push
jns
pop
push
repnz
adc
push
pusha
mov
addb
jmp
mov
push
add
sbb
out
jg
fisttps
cmpsb
dec
gs
cmp
sahf
sbb
add
into
lock
int
daa
sub
sbb
aaa
sub
fcmovne
mov
push
pop
ja
enter
xchg
cld
cmpsl
repnz
push
fiadds
add
sarl
xchg
es
push
push
pusha
mov
rorb
std
push
stc
xor
in
adc
dec
movsl
jle
pop
jae
outsl
cs
and
cli
insl
xchg
adc
and
and
push
mov
daa
adc
pop
mov
scas
testb
lret
cmpsl
inc
roll
xchg
std
test
shll
in
sbb
in
mov
add
fnstsw
sub
jno
push
mov
xchg
dec
stos
das
and
inc
inc
cs
out
rclb
bound
aaa
pop
imul
repnz
push
es
xchg
scas
ja
mov
mov
iret
add
cmpsb
mov
push
cmp
jecxz
ficoms
ret
mov
adc
das
into
cmp
std
int
ss
in
and
aaa
mov
push
or
cmpsb
push
cltd
mov
cmp
ret
ljmp
mov
loopne
pop
jecxz
dec
jb
sbb
popa
dec
pop
mov
push
push
add
cwtl
pop
loopne
sti
and
pop
fs
pop
ficompl
sub
xor
mov
pop
rolb
test
or
mov
push
push
push
ret
out
mov
lods
adc
loop
rcrl
sbb
les
dec
dec
daa
mov
rol
ret
pushf
sti
xchg
and
adc
in
pop
push
insb
dec
into
xchg
in
xor
push
xchg
dec
and
cmp
jecxz
mov
jmp
mov
jns
jbe
xchg
rcll
adc
mov
add
fsubs
lcall
aas
cmp
sub
jb
dec
pop
out
loop
mov
sub
xchg
or
xchg
sbb
fwait
lods
mov
mov
sub
sub
cli
jns
shlb
rorl
push
mov
imul
jbe
or
rorb
xor
sbb
ficoms
faddl
imulb
imul
add
out
xchg
int3
dec
negl
adc
outsb
push
mov
mov
and
adc
popa
shlb
add
loop
xchg
jmp
in
mov
or
scas
mov
jg
js
das
sbb
lods
pop
mov
pop
pop
shrl
test
mov
stc
cli
xor
inc
test
dec
xchg
icebp
andb
mov
mov
rcrb
add
data16
call
fs
mov
inc
out
inc
pop
mov
imul
inc
xchg
mov
jne
enter
leave
into
pop
lods
fs
loop
arpl
filds
mov
inc
out
lret
loopne
mov
inc
cmp
mov
sbb
inc
xchg
stos
jge
pop
mov
je
ss
and
cmp
inc
test
sahf
jecxz
std
jge
shrb
push
sub
mov
xchg
mov
sub
add
dec
inc
pop
xchg
sbb
push
popf
xchg
addr16
nop
jmp
sub
sub
out
mov
paddusb
sbb
in
jne
or
sub
rcll
mov
jle
sub
sbb
test
push
push
inc
mov
bound
pop
pop
mov
inc
sar
and
inc
mov
jae
imulb
lock
xchg
and
sbb
outsb
push
and
dec
shr
notl
loop
jns
adc
adc
push
jle
rcll
lods
mov
lock
fnstenv
outsb
call
adc
xlat
fsub
mov
movlps
jg
hlt
inc
repz
xchg
push
nop
jo
jmp
out
add
gs
test
pop
inc
add
ss
xor
aad
scas
sarb
and
lock
dec
fwait
fwait
cmc
add
sub
bound
and
outsb
push
enter
fsubl
cmc
in
out
push
int
mov
inc
jno
sar
xor
fiaddl
xchg
add
call
std
je
cld
xor
dec
dec
leave
inc
stos
das
inc
je
leave
or
das
xchg
mov
es
inc
xchg
push
shrb
push
setno
out
lods
inc
mov
scas
ss
mov
jae
push
mov
add
xor
bound
or
mov
andl
ret
lret
add
aaa
xor
popf
xchg
orl
xchg
push
pop
mov
and
adc
leave
aas
mov
cmp
sti
std
push
lods
les
cmpsl
mov
cmp
or
sbb
loope
dec
inc
adc
cmp
mov
in
sahf
add
mov
push
sub
mov
das
repnz
es
addr16
or
mov
and
lods
jae
mov
pusha
enter
pop
pop
pusha
rcl
xchg
insl
add
sub
push
xor
inc
inc
shlb
push
addr16
inc
movsb
push
inc
bound
cmpsl
hlt
outsb
movsl
rclb
movsl
out
insb
pop
mov
lahf
xor
push
add
dec
add
outsl
jle
test
push
hlt
inc
rcrl
into
movsb
in
ds
jb
outsl
fiaddl
mov
rorl
ja
ja
add
lods
jmp
pop
cmp
inc
loop
in
outsl
mov
fwait
iret
cmc
add
into
orl
fildll
test
dec
inc
ljmp
std
add
sbb
jle
xchg
cmp
sahf
stos
mov
sub
dec
fistl
out
add
imul
xlat
xchg
mov
std
loope
call
ljmp
lcall
pusha
lahf
shrl
jp
pop
cwtl
sbb
aam
popl
jae
insl
cld
aam
rcll
push
push
nop
movsb
pop
out
call
mov
fwait
aas
loope
and
jnp
dec
add
xchg
jp
stos
mov
xor
sub
bound
test
or
jo
pop
shrd
out
js
lahf
fs
pop
mov
sbb
add
sarl
mov
filds
in
inc
pop
or
xor
out
outsb
jecxz
out
jmp
popf
and
roll
jmp
imul
lahf
loope
xchg
ds
fwait
outsl
fwait
imul
push
enter
out
cmp
arpl
fsubr
aas
and
cmp
cld
cli
pop
pop
popa
lods
xlat
fcomp
imul
and
idivl
xchg
movsb
inc
mov
js
arpl
fldcw
pop
xchg
stos
les
aam
adc
sbb
push
fwait
mov
leave
movb
mov
ret
mov
fdivs
es
into
ret
movl
cmp
sahf
sarl
push
dec
mov
xchg
aad
lds
dec
add
data16
mov
pop
or
jecxz
pop
fidivrs
pop
call
adc
ffree
lods
xor
jl
test
stos
insb
insl
mov
xlat
add
lcall
push
xor
dec
jecxz
pusha
inc
std
pop
out
bound
mov
mov
add
xor
push
iret
aas
cmpsl
gs
xchg
sub
stc
dec
fmuls
imul
fs
imul
ds
xchg
aam
or
dec
sub
mov
ret
xchg
insb
inc
sub
out
cmp
xor
addr16
jl
mov
mov
dec
mov
imul
rolb
jl
mov
imul
sub
inc
mov
jnp
dec
rcll
mov
and
mov
adc
mov
xchg
mov
and
add
xchg
enter
or
fwait
imul
xor
sub
mov
movsb
sub
sbb
out
xchg
add
movsb
cmp
repz
cmp
les
jp
pop
mov
cmpsl
sbb
sub
fucomi
aad
push
movsb
aam
mov
mov
push
mov
aad
sarl
xor
fwait
adc
inc
pop
test
std
sbb
fcoml
loopne
mov
and
push
jbe
mov
std
je
movsb
enter
pop
iret
xchg
mov
push
test
cmp
aas
push
mov
or
mov
xchg
scas
sarl
gs
aam
push
mov
movsb
cmp
push
test
sbb
data16
stc
loop
sub
out
out
inc
out
dec
mov
pop
fldcw
inc
addr16
orb
dec
and
nop
pop
std
push
out
dec
enter
fisttpll
cs
rcll
or
imul
enter
push
xchg
insb
loopne
mov
ljmp
and
cmpl
add
jb
inc
aas
sub
stos
mov
mov
jl
std
ljmp
cltd
mov
inc
add
or
es
pop
add
jae
xor
push
stc
sti
mov
cmp
sahf
nop
push
cmpsl
fcmovnu
cmp
fidivrl
push
call
push
pop
jp
or
mov
arpl
ja
xchg
fimuls
xor
bnd
mov
or
lea
das
push
std
pop
cwtl
dec
sub
clc
jg
fistpll
jge
ss
cmp
dec
ffree
lret
push
fwait
push
scas
push
sub
cs
fnstcw
popf
test
cmpsl
xorb
push
xchg
sbbb
subl
mov
outsb
mov
pusha
shrb
pop
sahf
aam
cmp
mov
dec
dec
cmp
inc
rolb
leave
mov
leave
jne
in
jno
test
test
sub
mov
mov
in
inc
lods
andb
mov
pop
mov
bound
std
out
adc
popf
pop
inc
sbb
aam
lods
push
pop
xchg
sub
inc
out
leave
xchg
pop
sub
jle
fnstenv
xor
sbb
mov
outsl
or
ret
orl
mov
mov
icebp
push
jo
sub
and
pop
addr16
add
aad
add
inc
or
sub
loope
div
cmp
in
push
jle
lahf
sahf
inc
mov
pusha
fs
jl
xchg
mov
or
jo
int
xor
mov
outsb
int3
and
imul
inc
test
popa
and
jb
lcall
mov
and
inc
es
mov
push
repnz
push
adc
daa
testl
or
cmp
dec
inc
ret
jbe
mov
hlt
xchg
cmp
fisubrl
inc
jp
xor
movsb
cmpsl
cs
dec
inc
jmp
inc
repnz
int
sti
hlt
and
jno
stos
push
jecxz,pn
out
jne
mov
flds
daa
adc
cmc
inc
fwait
mov
clc
imul
sub
mov
adc
jl
lds
and
mov
jbe
pop
ljmp
or
mov
mov
repz
inc
push
jmp
cmpsl
rcr
enter
and
notb
lret
stos
mov
hlt
sahf
enter
jecxz
xlat
xor
int3
ss
cmc
lods
ss
lea
adc
cmp
pop
mov
xchg
push
mov
cmp
jmp
mov
jp
pop
and
add
inc
ja
xlat
add
jns
sahf
leave
sti
push
xchg
cmp
shlb
dec
in
ja
jmp
or
inc
dec
test
xor
mov
mov
pushl
rolb
sahf
pop
jns
mov
mov
ret
mov
add
xchg
mov
jmp
and
sbb
iret
stos
or
cld
mov
clc
lods
imul
je
cmp
in
mov
lcall
aam
movb
xchg
notb
jb
mov
cmp
mov
xor
cli
test
repz
loop
push
in
inc
mov
mov
loopne
into
gs
test
sub
xor
loope
adc
incb
int
xchg
out
dec
mov
test
jg
scas
in
les
in
adc
rolb
movsl
std
and
pop
push
mov
fdiv
scas
or
xchg
lea
sbb
mov
data16
xor
lahf
es
inc
sub
insl
loop
sbb
std
mov
mov
popf
sub
push
mov
inc
sti
nop
pop
mov
popf
cld
imul
jecxz
je
xchg
pop
psadbw
dec
xor
daa
ljmp
lcall
test
aam
and
notb
data16
into
int3
pop
rorb
in
movsb
scas
mov
sbb
or
cmpsl
mov
xor
xor
adc
repnz
xor
fbld
inc
jp
xor
jle
inc
out
dec
test
lods
jg
mov
xchg
cmp
in
ss
test
popf
jne
sub
stc
sub
repnz
fcompl
jo
repz
cmp
aas
test
inc
mov
add
ljmp
xchg
aaa
ud0
rorb
repz
or
sahf
adc
lods
push
call
out
and
and
lcall
daa
pop
popf
scas
sti
movsl
jns
xlat
pop
dec
cmp
stos
sub
mov
or
or
stos
sbb
loopne
and
gs
jno
je
xor
lods
jbe
stos
sub
add
sbb
mov
movsl
push
push
xchg
mov
mov
dec
inc
mov
in
inc
scas
mov
mov
sub
cs
or
add
pop
and
dec
movsb
inc
jl
adcl
repnz
repnz
lahf
mov
mov
pop
ja
jmp
sbb
shr
cmp
into
mov
test
xor
or
js
aad
mull
push
jns
lds
fsubs
push
mov
mov
mov
push
lock
mov
call
sbb
bound
mov
leave
xor
sbb
ja
push
shll
scas
mov
inc
mov
lahf
roll
or
or
aam
and
imul
push
icebp
stc
bnd
push
scas
and
xor
mov
rcrl
sub
and
test
int
je
jecxz
xor
jg
leave
lea
out
cli
pusha
inc
mov
packssdw
je
test
repnz
push
in
inc
jno
stc
std
call
aad
fs
or
je
xchg
jge
push
ja
dec
sbb
jno
imul
sbb
icebp
xchg
sbb
test
add
jge
out
adc
imul
and
add
imul
push
inc
jns
fstl
sub
loop
mov
insl
cmp
mov
daa
mov
insl
int
pop
test
dec
jge
pop
push
stos
push
jl
and
add
add
adc
int
orb
ja
push
inc
sahf
adc
out
fstpl
pop
out
push
leave
xchg
sbb
xor
jecxz
pop
fistpl
mov
lock
pop
addb
dec
or
enter
dec
rolb
jl
push
les
iret
dec
sbb
clc
lahf
adc
movsb
push
sti
fcoml
aaa
repnz
adc
push
sub
push
jge
adc
in
sbbb
jb
jb
scas
jo
sbb
scas
repz
outsb
and
test
ds
dec
xor
repnz
mov
pushf
sub
addr16
push
je
icebp
into
xchg
notb
lahf
fidivrs
test
and
pushf
sbb
call
mov
rcrb
fcom
fildll
sub
outsl
xchg
jle
jno
icebp
rolb
pop
dec
daa
dec
add
sahf
data16
lahf
xchg
jnp
popf
push
xlat
inc
pop
popf
fistpll
sub
loop
mov
add
scas
fwait
sub
cmp
dec
negb
inc
mov
lcall
out
fisttpl
dec
inc
cltd
insl
xchg
pop
setg
insb
mov
icebp
bound
or
sub
sahf
daa
fldenv
cmp
jb
jg
xor
adc
inc
mov
aad
cmp
shrb
inc
jp
mov
push
in
out
clc
in
add
idiv
xchg
add
cmc
pushf
das
sti
test
data16
fucom
and
xchg
mov
rcll
jnp
sub
pushf
cli
xchg
xor
mov
subl
xchg
dec
sarb
pushf
lret
sub
pop
push
rorb
pop
inc
pop
pop
int
mov
icebp
pop
stos
inc
and
sbb
inc
jecxz
push
scas
mov
push
sub
push
bound
mov
xchg
pushf
jbe
sahf
jmp
lcall
pop
xor
and
ja
in
mov
or
xor
fsubrs
fistps
mov
push
pop
mov
fcompl
lods
jmp
orl
jbe
cwtl
inc
repnz
ret
adc
xchg
jl
cmp
cs
mov
rorl
stos
mov
jb
fdivl
cmpsb
lcall
add
push
mov
mov
mov
dec
dec
pop
pop
scas
fwait
stc
sahf
or
adc
jmp
es
mov
pop
jge
popf
jg
sti
pop
cmpsl
out
push
sub
or
iret
imul
sbb
incb
ja
pop
icebp
dec
xchg
fsubs
int
adc
xorb
push
mov
aaa
lahf
or
add
jmp
clc
mov
xlat
dec
lods
push
scas
sbb
aad
sbb
push
add
cmp
insb
xchg
sub
inc
jns
xchg
push
ljmp
or
adc
mov
jo
iret
repz
jecxz
rcl
jg
inc
clc
push
daa
xchg
xchg
enter
sbb
add
sub
cs
add
jbe
or
in
adc
mull
or
adcl
incb
in
and
cli
cmp
cmpsl
sahf
adc
das
movsl
clc
xor
lret
pop
test
or
popf
dec
sub
xor
cmpsb
ficomps
pop
lods
inc
outsb
enter
adc
or
iret
pop
test
adc
popf
ja
insl
mov
xor
stos
iret
outsl
adc
ret
lods
lahf
xchg
adc
ljmp
mov
add
fildll
repnz
mov
fildll
lret
mov
push
or
adc
and
jmp
sbb
dec
das
cmpsb
mov
ficoms
lret
xor
xchg
xchg
jb
sahf
aas
fcomps
adc
mov
or
scas
xor
jb
jge
clc
aam
adc
mov
push
fstp
clc
scas
std
pop
mov
mov
pop
sar
sbb
ds
sub
and
hlt
mov
aam
push
repnz
mov
ret
jne
mov
push
xchg
add
or
testl
or
ss
test
shr
xchg
mov
cmc
movsb
lea
loopne
fxam
cmpsl
and
in
xorb
lds
test
jmp
aaa
or
sbb
in
mov
out
sahf
in
cmp
subl
adc
cmpb
adc
repnz
fwait
cmp
out
inc
mov
and
out
fcomps
dec
popf
adc
mov
iret
mov
sbb
cmp
inc
fsub
xor
mov
mov
or
jno
ret
sub
push
lods
cltd
popa
push
ds
cltd
mov
loope
in
mov
into
sbb
inc
je
aam
cli
call
mov
adc
dec
and
mov
fisubl
inc
leave
cmpsb
popf
rcrb
push
and
cmpsl
mov
loopne
lcall
jbe
cmp
xchg
and
stc
mov
ss
pop
pop
jge
dec
xor
xchg
ret
fwait
mov
popa
in
clc
pop
cmp
dec
test
xchg
pop
ja
cmp
in
dec
mov
push
shlb
xchg
ret
xchg
jb
in
mov
mov
sti
sbb
stos
enter
sti
out
repnz
repz
dec
fidivs
sub
push
test
pop
imul
pop
lret
inc
mov
mov
pusha
sti
mov
push
inc
pop
into
lods
fidivl
es
mov
rclb
dec
mov
adc
cmc
push
jl
or
push
icebp
iret
addr16
jp
sbb
enter
or
repnz
addr16
mov
jne
inc
xchg
repz
and
xchg
pop
js
imul
cwtl
cwtl
push
mov
jo
subb
push
es
mov
mov
bound
adc
jp
push
pop
cwtl
adc
cmp
stos
xor
scas
sarb
mov
push
push
mov
add
inc
mov
xor
jae
jge
gs
sub
test
stos
push
push
or
aad
daa
insl
jmp
dec
jl
inc
or
cmp
aas
mov
and
cmc
test
scas
xor
adc
mov
pushf
xchg
popf
rorl
inc
cli
inc
icebp
loopne
mov
push
in
and
inc
push
push
push
cmc
out
lock
out
aad
aad
lret
jae
push
push
daa
cltd
in
fldt
iret
cmp
xchg
mov
mov
movsl
mov
movsl
inc
xor
xor
inc
add
das
jmp
dec
aaa
adc
sbb
movsb
jno
fmuls
add
mov
in
dec
push
add
and
sbb
dec
or
cmp
fildll
jecxz,pt
fdivl
js
xchg
ss
into
sbb
pusha
rorb
out
mov
lods
stos
cmp
enter
cmp
ficoms
outsb
dec
ret
xchg
push
ret
add
stos
adcb
sbb
js
roll
xchg
es
dec
xlat
mov
outsb
mov
into
enter
je
add
mov
ret
lcall
or
or
jo
push
inc
clc
arpl
mov
cmpsb
xor
cli
mov
sahf
and
adc
cmp
out
cmp
xrelease
mov
inc
adc
mov
ds
dec
ret
fnstcw
and
dec
and
adc
inc
je
dec
mov
mov
xchg
jns
xchg
jb
xchg
mov
pop
pop
bound
lret
fsubrp
or
pop
cltd
pusha
jge
pusha
dec
addr16
std
pop
push
xchg
arpl
cmp
pop
rorb
or
add
sahf
sbb
loopne
push
scas
push
sub
out
add
mov
or
ret
scas
ret
aas
enter
rclb
or
xor
sub
scas
adc
insl
int3
mov
leave
push
in
jg
jl
lcall
xchg
mov
out
call
jne
daa
sub
pop
pop
mov
adc
fs
ret
faddl
fs
add
sub
mov
cmp
scas
jecxz
stc
inc
loop
cmp
addr16
mov
adc
aam
cmp
fwait
jle
rcll
cmc
push
aad
ret
movsl
add
add
adc
movsl
inc
inc
ret
dec
mov
aad
gs
inc
int
dec
mov
fistpll
mov
fsubl
movsl
shll
and
lcall
sub
and
mov
mov
adc
mov
sbb
sbb
fcmovne
subl
out
dec
jbe
movl
cmpsb
add
sub
mov
sahf
sbb
ret
jp
or
jae
push
cmp
std
jecxz
out
jns
test
stc
daa
sub
adc
cld
aas
stc
xor
mov
fstpl
or
out
in
loop
decl
cmp
and
push
push
sub
fcmovnu
in
shlb
shr
je
rcll
add
fists
pop
xchg
aam
xor
add
pusha
rcll
sahf
rcr
scas
xchg
sub
sub
test
sbb
xchg
mov
xchg
pavgw
mov
stc
and
jmp
outsb
stos
jl
sbb
loopne
in
lods
frstor
scas
in
cwtl
ret
mov
out
sbb
xchg
loope
lret
mov
fdiv
jae
nop
sbb
negb
lahf
sub
xor
jo
inc
xor
ss
fdivrl
leave
cmpsb
push
and
jg
ficomps
or
pxor
cmp
cmp
push
cmc
addb
inc
das
sbb
fs
ds
sbb
outsl
mov
mov
adc
mov
ret
movl
and
jae
jmp
test
pop
adc
lret
cmp
lods
dec
mov
cmc
ds
pop
pop
das
or
dec
xchg
ljmp
out
aam
sbb
push
lret
out
mov
pop
mov
lret
andl
cmp
je
subl
pop
sub
repnz
push
push
pop
nop
shlb
xchg
xor
loopne
int3
aaa
mov
lcall
cltd
fldenv
sar
xlat
pop
inc
sub
sti
in
adc
and
out
clc
cli
add
inc
pop
pop
cwtl
jno
sbb
iret
movsb
jno
mov
and
sub
out
dec
or
das
testl
and
lods
mov
fdivrs
sbb
mov
aad
sti
pop
add
sub
mov
add
scas
imul
into
sbb
vprotd
cltd
rcrl
and
and
xchg
sub
xchg
lret
push
inc
mov
test
out
mov
out
or
or
scas
cmp
fstl
add
jp
hlt
loope
pop
xor
icebp
addb
mov
ret
loope
mov
popl
jb
mov
rcrl
mov
mov
mov
and
lods
xchg
sbb
cltd
out
mov
repz
mov
sahf
mov
nop
add
mov
ret
push
sar
icebp
icebp
das
mov
xor
xor
push
test
add
mov
outsb
in
test
ss
call
imul
stos
call
mov
inc
fwait
stos
and
in
call
leave
pushl
inc
lods
pop
sti
fs
pop
mov
sbb
imulb
cmpsb
xor
insb
inc
test
mov
cmp
pop
movsl
cltd
repz
sarb
push
jno
xchg
testb
sub
mov
out
jle
adc
in
inc
movsl
int3
and
pusha
or
dec
je
pop
shrl
je
mov
sbb
shlb
inc
popa
pop
mov
dec
sub
dec
adc
xchg
lds
inc
inc
in
sub
jne
aas
nop
movsb
out
aam
mov
fcoml
test
rorl
sbb
stc
jbe
fwait
jp
push
add
mov
jne
bound
int
repnz
int3
xchg
imul
imull
shrl
mov
jp
ficoms
cmpsl
mov
mov
loop
xchg
ja
sub
cwtl
adc
sbb
mov
and
mov
std
mov
push
out
push
imul
imul
das
xor
push
xlat
pop
scas
xchg
mov
sbb
mov
jmp
mov
cmc
fistl
rclb
sub
iret
sub
pop
insb
pop
mov
lods
xchg
in
scas
cmpsl
inc
fadds
xor
jmp
ret
or
xchg
add
cmp
insl
pop
xor
jo
push
into
mov
je
addr16
movsb
dec
and
jg
popf
ret
leave
mov
aas
push
jmp
popf
jle
mov
out
sbb
sbb
femms
iret
ds
ja
ret
mov
sub
lock
xchg
into
mov
mov
xchg
xchg
nop
dec
divl
mov
fsubr
jo
mov
lahf
cmp
cmp
orb
or
xchg
and
push
inc
addr16
imul
sub
int
mov
jnp
daa
push
std
mov
push
mov
nop
jns
int3
popf
fsubl
mov
push
fcomps
jle
jo
jnp
clc
pop
sbb
pop
cs
out
movsl
into
add
cmpb
sub
sbb
xchg
incb
fidivs
call
mov
or
xchg
lret
int3
dec
pop
rcll
adc
dec
push
fs
sub
jl
xchg
rclb
dec
xor
pop
xchg
pop
or
or
das
movsl
mov
stos
sti
stc
lock
dec
adc
testl
and
adc
fucomi
push
adcl
scas
and
outsl
sbb
sbb
jae
inc
and
movsb
push
ret
and
adcb
rol
mov
data16
fmulp
jns
fwait
sti
add
lret
inc
push
loope
xor
sbb
lea
push
test
test
xlat
aam
ljmp
je
repnz
cmc
adc
push
out
out
ljmp
push
mulb
je
sub
daa
dec
imul
inc
xlat
inc
mov
int3
jge
pop
mov
cmp
cmp
mov
mov
gs
or
das
and
and
mov
lock
lds
and
outsb
aam
dec
xchg
sti
fisubrl
mov
pop
mov
cmp
shl
inc
sbb
cltd
out
or
xchg
sbb
and
rcrl
fdivl
mov
or
je
inc
int3
jo
enter
cs
lret
push
mov
daa
adc
push
daa
mov
xchg
int
lds
fimull
jno
mov
mov
inc
xor
lods
notb
mov
cld
into
jp
pop
aad
mov
push
jg
xchg
xor
enter
insl
in
inc
in
movsl
pop
icebp
add
lahf
lea
sarl
sbb
cmp
jl
pop
lock
je
and
rcll
jmp
sub
jmp
fldl
push
dec
dec
rol
xchg
scas
insb
push
mov
xor
filds
mov
push
jno
inc
xlat
call
pushf
loop
mov
sarl
lret
mov
pop
dec
mov
cmp
popf
mov
std
ret
and
pushf
call
mov
popf
inc
fwait
das
push
sbb
fdecstp
cld
sbb
add
or
mov
jo
mov
xchg
sbb
mov
and
cmp
scas
sub
mov
mov
xor
xchg
jge
mov
jl
cmpsb
xlat
xchg
pop
cmp
push
fstps
inc
mov
or
jnp
xchg
std
sub
jne
jns
ds
push
lahf
cmpsl
inc
addr16
lcall
and
ret
popf
xchg
sub
mov
inc
sub
mov
imul
sub
rorb
in
mov
push
push
jb
outsl
mov
aaa
andb
aam
jmp
cmpsl
outsb
mov
or
daa
clc
stos
cmp
xchg
jae
cltd
fwait
sub
add
mov
push
addl
and
dec
mov
scas
scas
jmp
aaa
xor
jl
in
or
sub
cmp
cmpsl
shrb
pop
je
mov
add
jns
adc
popf
fdivl
test
std
pop
cmp
int
imull
push
and
cmc
push
lds
xchg
movsl
xor
lret
cli
cmp
std
xor
repnz
push
ret
bnd
push
fwait
mov
add
icebp
mov
mov
lea
sbb
out
cmpsb
movsb
aam
stos
mov
pushf
pop
or
inc
mov
jb
jo
push
aad
cmp
mov
cmpsl
out
arpl
call
insb
loope
mov
dec
adc
in
jb
in
je
or
outsl
mov
loope
mov
sbb
pop
std
addr16
jns
adc
idiv
das
push
call
jns
in
jg
in
bound
je
mov
out
jnp
jne
in
adc
jmp
test
js
adc
inc
popa
pop
ja
jg
leave
xchg
imul
adc
sbb
pushf
cmpsb
push
inc
mov
xor
hlt
and
cmc
xor
push
mov
mov
outsl
mov
gs
sbb
mov
frstor
inc
dec
shll
mov
cmp
aad
jl
pushf
jp
xor
je
rep
inc
push
inc
std
bound
dec
in
lods
out
lahf
in
jo
inc
xchg
push
mov
inc
stos
pop
andb
jge
clc
rcrl
test
cltd
mov
fisttpll
ret
xor
xor
xor
xchg
dec
test
adc
push
cli
pop
fwait
jbe
adc
xlat
scas
rcrl
jno
test
adc
dec
out
xor
dec
lea
repnz
inc
cmc
les
inc
mov
jb
lcall
jbe
fsubrl
add
loopne
cmc
jae
stc
mov
fabs
scas
test
lods
enter
repnz
andb
mov
adc
xor
ficoms
cwtl
jle
cmc
jge
sub
push
cmp
imull
cmp
pop
int
repz
out
xor
test
jnp
mov
cmc
pop
sar
lds
push
jae
push
add
jnp
mov
out
cmpsl
fucom
dec
out
shll
cld
inc
mulb
scas
leave
add
cmc
lcall
fsubrl
mov
ds
sti
popf
adc
cmp
cmp
ss
loop
fdivrs
and
out
popf
push
clc
or
imulb
add
lcall
mov
mov
xor
xor
mov
test
enter
add
xchg
les
rolb
mov
std
pop
icebp
cwtl
imul
push
dec
mov
icebp
test
or
loop
add
ja
jne
mov
jb
mov
xchg
gs
rorl
mov
jne
cmp
insb
inc
dec
adc
in
repz
ljmp
imul
shl
push
lret
test
dec
iret
cmc
ror
mov
pop
ljmp
lods
mov
push
sub
push
xor
out
sub
stos
inc
lock
fcompl
rorl
imul
xor
in
popf
add
pop
mov
xorb
or
lret
fists
popa
fidivl
insb
xchg
arpl
dec
lock
addb
stc
shlb
xor
punpckhdq
mov
jne
cs
xor
xor
cmp
pop
rol
pop
mov
add
fdivl
mov
mov
aad
lret
inc
ja
inc
xchg
jg
call
push
in
cmc
stc
mov
add
sbb
fsubrl
insl
cmp
icebp
cmp
sbb
lret
mov
xchg
lock
aad
lods
inc
jb
xchg
dec
es
icebp
shll
cmpsb
popa
xchg
rcl
popl
cwtl
insl
push
inc
and
add
xchg
add
or
call
add
inc
test
dec
xchg
cwtl
cmp
pop
nop/reserved
sahf
pusha
in
in
rcr
std
jp
adc
push
dec
test
stos
jns
nop
mov
pop
lea
cmpsb
data16
fs
mov
jmp
jbe
mov
addr16
cwtl
dec
hlt
ljmp
lods
push
sub
push
add
xchg
test
and
mov
pop
or
mov
xchg
inc
push
mov
cmpsb
sbb
cld
push
push
cmp
sbb
test
stc
mov
lods
orb
inc
xchg
sbb
stc
mov
imul
inc
xchg
in
int3
mov
repnz
mov
inc
xchg
cmc
loopne
arpl
mov
addl
es
montmul
cmpsb
add
packssdw
sub
sbb
mov
pop
sbb
stos
lods
lods
pop
push
loopne
in
lret
push
dec
jl
cmc
push
in
out
lods
mov
inc
ret
adc
push
sbb
fldl
andb
pop
inc
shlb
js
fisttpl
ds
inc
mov
clc
hlt
jno
fbstp
int3
push
adc
clc
out
sub
jne
lret
xor
jl
sbb
or
sti
dec
out
lret
test
sub
jg
out
sbb
fcomip
inc
neg
jp
adcl
cmc
xchg
shr
rol
xor
outsl
pop
xor
das
test
pop
lea
mov
inc
push
mov
fwait
jl
xchg
dec
xchg
xor
xor
add
dec
stos
mov
xor
int
jb
pop
in
pop
pop
orb
popa
rclb
popf
scas
pop
fwait
jnp
pand
sub
pop
and
jge
jl
ljmp
daa
or
cs
jl
imul
stc
and
outsl
bound
xchg
rorl
cmp
or
sub
pop
inc
push
or
jnp
decb
push
mov
into
clc
mov
subb
mov
aas
push
test
xchg
add
adc
call
ss
xor
icebp
xor
insl
ret
inc
inc
cmp
ds
insl
cmp
pop
inc
dec
stos
jp
stos
shll
in
sti
add
fs
cmpsb
push
adc
lret
push
lea
mov
scas
loop
loopne
or
cltd
es
fs
pop
add
out
nop
mov
lret
mov
xchg
fsubrl
and
jns
jns
mov
mov
xchg
lods
addr16
or
loopne
aam
lds
adc
add
mov
cmp
out
lock
in
test
xorl
dec
dec
or
mov
xchg
loope
int
sub
out
popa
ret
jecxz
lcall
mov
jle
inc
push
inc
icebp
push
xchg
cmpb
cmp
test
adc
pop
pop
jae
or
cmp
inc
pop
into
and
es
dec
pop
sbb
push
faddl
jg
cli
pop
jno
jae
xor
sbb
sbb
ss
daa
xchg
fwait
daa
rorl
sarb
sbb
sub
das
add
pop
fildll
fdivrp
scas
outsb
scas
imul
xor
mov
lahf
adc
dec
fdiv
jo
or
in
or
or
fnstsw
addr16
or
outsl
pop
aas
add
lds
fldl
add
fs
sarb
sbb
std
aam
push
dec
jne
popf
xlat
in
cwtl
arpl
sub
addl
jb
sub
ret
aaa
inc
fs
add
icebp
sbb
mov
negl
clc
fstps
adc
mov
mov
fsubrl
mov
xlat
pop
mov
xchg
nop
mov
cmpsl
ljmp
not
xlat
xlat
outsb
sbb
cmp
lock
arpl
sub
test
lea
adc
int
inc
cli
cltd
call
push
mov
add
clc
inc
cmp
dec
mov
cmpl
mov
mov
fs
loope
xchg
push
and
sub
shlb
jb
outsl
inc
pop
int
jge
clc
sub
mov
ja
mov
jae
scas
push
pushl
mov
dec
into
arpl
mov
xchg
cmp
jo
mov
sbb
clc
mov
imul
aas
push
mov
adc
xchg
fdivrl
cld
fidivl
repz
adc
jg
fs
int3
mov
mov
or
add
jns
jae
cwtl
call
push
and
mov
loop
inc
or
dec
outsb
daa
and
pop
daa
dec
inc
mov
xchg
push
adc
test
and
dec
cmp
loope
repnz
jns
add
xchg
adc
push
adc
movsb
mov
inc
and
pop
test
fs
mov
test
jae
pop
and
jge
lods
loop
iret
aad
adc
mov
adc
lcall
fdivrs
movsb
xchg
into
sbbb
test
xchg
mov
and
pop
addr16
int3
into
mov
shlb
cld
pop
cmp
in
or
lock
push
xor
sbb
jnp
loope
and
and
rcrb
and
mov
pop
push
dec
inc
rolb
loope
dec
loop
cwtl
xor
jl
sub
or
subl
pop
sbb
mov
clc
jg
outsl
lcall
push
add
in
push
fcmovnu
cmp
xor
mov
outsl
ret
pop
adc
insb
insl
push
and
inc
fldl
inc
popa
or
push
dec
and
mov
jle
adc
xchg
push
outsb
or
pop
ret
sbb
or
pushf
bound
mov
repz
dec
xchg
mov
xor
cmp
jbe
cmp
or
hlt
outsb
xor
sahf
into
xlat
pushf
cmp
fs
sub
jecxz
inc
std
xlat
push
not
mov
push
loop
fsubl
mov
mov
xchg
cmp
popa
push
or
push
dec
into
icebp
lock
mov
inc
dec
mov
enter
arpl
dec
cmp
mov
cmpsb
out
xor
sub
fwait
sysexit
sub
xchg
mov
imul
fnstenv
xchg
pop
push
xchg
orb
shrl
lcall
push
je
push
mov
hlt
notl
lods
repnz
dec
push
adc
sub
mov
fiadds
jnp
xchg
test
and
push
rclb
in
xchg
jmp
sarb
push
xor
sarb
mov
or
lods
leave
xor
or
push
mov
lds
sbb
stc
pop
sbbl
pop
data16
or
test
lcall
mov
jns
aad
and
mov
jl
lds
movsl
adc
dec
xorl
ja
xchg
ret
cld
ficoms
jmp
cmp
mov
dec
jns
xchg
push
js
cmp
nop
es
cltd
loopne
shr
mov
movsb
int
inc
mov
or
mov
mov
adc
or
mov
cmp
test
out
ss
cwtl
mov
sahf
adc
fdivr
add
imul
or
xor
jb
jnp
jg
push
cmp
stos
in
out
push
mov
aas
and
xchg
adc
adc
jg
je
mov
xchg
push
cmp
jecxz
cld
lods
xor
loop
xchg
loop
imul
mov
std
pop
jb
or
dec
mov
aaa
out
and
mov
cmc
sbbl
aas
lods
xchg
stos
or
sbb
cmp
push
xor
fistpl
loopne
in
mov
xorl
add
adc
and
mov
pop
xor
ljmp
lock
or
mov
push
aaa
mov
dec
sti
stos
xor
stc
lahf
pop
mov
pop
and
wbinvd
nop
in
mov
mov
adc
ss
mov
fmulp
cmp
push
push
sbb
mov
fmul
popf
movsb
rcll
add
in
lea
or
rorl
out
inc
inc
fdivp
lret
mov
push
ret
mov
push
lods
jge
ds
sub
mov
sub
daa
xlat
ss
push
dec
into
pop
push
sbb
stos
inc
lods
mov
stos
into
jg
pop
imul
jmp
inc
fistpll
and
xchg
mov
dec
mov
cmc
testl
and
pop
ret
jmp
cmc
cwtl
pop
mov
jmp
in
out
inc
call
sub
and
jns
sub
mov
push
cltd
dec
stc
movb
ljmp
or
xor
out
mov
aas
hlt
mov
sahf
jmp
pop
cmp
xor
loopne
imul
mov
dec
and
mov
test
cmp
movsb
jle
and
mov
sub
jb
xchg
xchg
adc
mov
xor
add
xchg
ljmp
mov
imul
sub
inc
push
loopne
shrl
jns
add
mov
es
push
jl
loop
mov
jecxz
ss
xor
in
aas
lret
push
test
nop
push
jmp
out
mov
xor
xchg
std
mov
cmpsl
aas
fs
cmp
pop
or
push
or
ds
push
movsl
push
mov
ret
pushf
adc
in
adc
adc
cli
js
dec
enter
xchg
daa
insb
mov
into
cmpb
adc
je
dec
mov
dec
ljmp
mov
aad
xchg
and
push
lcall
dec
mov
lock
lods
iret
lcall
dec
adc
mov
je
push
add
fmul
jo
mov
xchg
jmp
andb
popf
dec
aam
leave
insb
add
mov
out
push
fwait
in
das
fstl
jbe
ja
aas
mov
adc
incb
sbb
and
mov
mov
imul
mov
or
adc
bound
daa
xchg
mov
cmpsl
loop
xor
out
mov
cwtl
cmp
push
sahf
fsub
sub
mov
add
xor
in
cwtl
ljmp
sub
or
sbb
subl
mov
shlb
das
arpl
dec
jns
cltd
lahf
fwait
lahf
das
jecxz
mov
and
mov
adc
dec
jne
ja
mov
push
and
punpcklbw
fdivs
ret
and
or
in
sbb
cs
cmp
je
xor
xor
and
and
repnz
xchg
in
add
push
or
inc
jp
daa
stos
gs
push
pop
repz
movb
sub
stos
push
xlat
lretw
mov
mov
push
jnp
jp
xor
stc
pop
sub
or
outsl
lcall
mov
mov
sti
dec
mov
inc
ret
popa
xchg
fnstsw
cmpsl
jmp
mov
sub
mov
jle
and
push
dec
call
sbb
push
sbb
mov
test
sbb
dec
mov
push
dec
jg
arpl
xchg
mov
mov
sub
push
aaa
sti
insb
or
stc
and
mov
fdiv
xchg
dec
xor
sarb
inc
insb
stc
cmpsb
mov
outsb
shl
call
cmovg
lds
cltd
jg
mov
adc
movsb
pop
fwait
lock
int3
in
sub
xor
add
pop
push
call
xlat
cmp
arpl
incl
call
imul
inc
mov
mov
or
sbb
loop
push
movsl
xor
mov
aam
pop
sbb
xor
jns
bnd
dec
shlb
adc
jo
add
imul
push
frstor
inc
insb
imul
pop
mov
adc
addb
nop
or
test
movsb
inc
sub
repz
mov
sbb
js
pop
arpl
push
jmp
in
movsb
pop
rsm
fldl
cwtl
inc
mov
xchg
mov
add
call
call
inc
insl
sub
out
aaa
xor
popa
outsb
xor
bound
adc
xor
jns
dec
int
rcrl
or
in
and
shlb
cmp
test
test
mov
dec
loope
inc
sbb
inc
daa
pop
pop
aad
inc
pop
test
daa
sbb
aam
cmpsl
xor
ja
out
lret
jae
sbb
push
jo
cmp
nop
ljmp
xchg
sub
lock
test
imul
push
push
icebp
sbb
xor
aam
cmp
je
fisubrs
mov
and
mov
inc
std
dec
xor
je
push
mov
lcall
jns
lods
push
sub
int
outsb
outsl
loopne
pop
xchg
bound
push
clc
ljmp
jg
push
mov
sbb
fistpll
sub
sahf
test
dec
jo
sbb
aam
mov
add
xor
les
nop
mov
cmp
inc
test
jg
lock
xor
inc
xor
mov
into
cmp
fistl
test
lods
sbb
movsb
inc
inc
js
mov
mov
mov
or
jmp
imul
adc
xchg
and
lods
mov
stos
lahf
mov
enter
loope
jbe
and
mov
adc
cs
aad
loope
inc
xlat
int3
dec
test
cmp
pop
js
mov
scas
mov
repnz
aas
stos
push
in
imul
ficoms
sub
xor
or
xor
mov
add
popf
mov
sti
adc
les
push
data16
or
and
add
arpl
add
shlb
cmpsl
out
xor
jmp
imulb
dec
mov
jo
hlt
std
js
jae
xchg
mov
ljmp
mov
mov
test
xchg
xor
inc
outsb
fcmove
mov
mov
add
xchg
inc
test
leave
in
out
js
fidivrs
push
fisubrl
jge
pop
sbb
jnp
xor
inc
add
les
dec
mov
adcl
fchs
pop
sbb
and
les
ds
mov
enter
mov
xorb
or
cmpl
dec
inc
fisubrs
mov
repnz
xchg
ljmp
rcl
lahf
push
aam
add
and
jl
pusha
lods
ret
hlt
bound
in
push
call
outsl
outsl
int
mov
cltd
jg
int
fnstsw
xlat
xorl
lock
aaa
bound
pop
outsl
dec
dec
daa
mov
test
movsl
movsb
mov
xor
xor
or
repnz
daa
jp
inc
add
push
pop
xchg
mov
and
in
shlb
negl
icebp
push
faddl
adc
dec
and
push
inc
cmpsl
sub
sarl
add
popa
dec
std
sar
adc
mov
idivb
sub
jb
lods
popa
jb
jb
mov
xchg
out
aam
mov
jl
scas
insb
sahf
push
iret
ret
push
inc
dec
push
call
icebp
les
test
ja
imul
ljmp
push
inc
ficoml
pop
sbb
xchg
lods
gs
stos
pushf
jns
xchg
push
xchg
mov
push
push
inc
cmp
movsl
adc
dec
mov
push
mov
addr16
push
ljmp
jg
iret
das
adc
push
push
jno
dec
enter
js
iret
dec
cmp
mov
pop
dec
mov
cmc
push
mov
push
cmp
cmp
and
adc
arpl
sti
pop
push
mov
push
inc
cmp
mov
and
sub
ss
pushf
push
adc
in
data16
pusha
xchg
push
jno
jbe
lcall
adc
inc
popa
pop
popa
mov
push
dec
lock
jl
inc
int3
pop
xor
or
test
in
and
and
mov
inc
cmp
xor
movsb
arpl
or
arpl
adc
movsb
xchg
popf
pop
shlb
enter
test
push
test
test
jge
out
lahf
dec
xor
cltd
scas
xor
dec
pop
das
jne
and
dec
mov
mov
sub
out
or
push
mov
pop
push
mov
movsl
lods
add
xabort
xchg
ret
xor
fnsave
xor
xchg
mov
rorl
call
xchg
mov
sbb
adc
xchg
push
pop
push
into
xorb
fwait
rcr
mov
test
out
or
or
mov
and
enter
fildll
jbe
imul
pop
gs
popa
xchg
jae
sbb
enter
jo
adc
dec
jae
nop
loopne
aas
pop
popf
sbb
sbb
ret
inc
fisttpl
inc
mov
add
dec
inc
pop
push
pop
lock
aas
jmp
mov
out
stos
adc
jecxz
shrb
and
aad
pusha
sbb
jnp
push
ret
mov
xchg
dec
pushf
sub
lods
jns
inc
cmp
jge,pn
pop
add
push
ja
xor
call
jge
jl
dec
jno
adc
jno
cmp
pushf
imul
cmp
jl
dec
inc
repz
pop
cmc
loope
add
nop
mov
add
sub
movl
scas
or
pop
out
aam
and
sub
dec
dec
mov
pop
repnz
subl
mull
cmp
and
push
aad
call
iret
adc
xlat
js
mov
xor
dec
loope
cmp
push
cmp
cs
clc
mov
out
test
outsl
test
jnp
sub
iret
stos
loopne
push
cwtl
sahf
jne
mov
pop
mov
in
cmp
add
arpl
sub
add
cmpsb
push
aas
insl
push
sarl
sbb
icebp
gs
adc
lds
sbb
inc
dec
cs
mov
fwait
sahf
pop
adc
js
scas
mov
inc
mov
sub
and
fcompl
inc
push
add
imul
fisubs
push
repz
test
sub
fucomip
or
mov
stos
into
fidivrl
test
std
jl
jo
xor
mov
mov
inc
mov
lret
loope
pminub
das
xchg
out
shlb
mov
imul
aas
or
sbb
dec
into
rorl
mov
xor
addr16
insb
out
add
sub
lea
call
out
sub
xchg
rcll
jne
sub
mov
jae
nop
push
push
test
lods
arpl
mov
popf
inc
push
out
sbb
mov
xchg
or
sub
addl
mov
sti
mov
and
sarb
mov
push
cltd
aaa
in
ja
cmp
cmpsl
and
js
sub
cwtl
and
adc
cmpsl
testb
jo,pt
jns
sub
push
das
icebp
or
dec
mov
sahf
push
xor
pop
push
xchg
nop
mov
or
sbb
cmp
lret
push
mov
push
stos
dec
adc
jns
sbbb
jo
outsl
cmp
push
mov
push
imul
cmp
sub
in
fstps
sub
and
push
push
or
mov
xchg
dec
xchg
nop
cmp
sbb
xor
iret
clc
sub
mov
cmc
mov
nop
divb
push
pop
push
daa
xchg
je
inc
mov
jns
jae
sub
sahf
aas
and
lcall
out
mov
sub
xor
pushf
add
cmp
mov
ds
jmp
repz
int
add
cmpsb
lock
mov
mov
dec
push
mov
fldcw
data16
loope
mov
stos
cli
sbb
ret
leave
sub
fimull
and
xor
push
je
ret
pop
enter
mov
push
shr
sub
ss
mov
cmp
js
fldt
outsl
leave
push
cmpsl
add
icebp
jb
bound
push
or
xor
outsb
pushf
jne
testl
scas
xor
push
fiadds
adc
sti
add
jmp
test
mov
cmc
mov
mov
push
dec
lret
lds
xor
push
dec
push
je
mov
mov
mov
scas
mov
inc
icebp
xchg
jnp
xor
rcrb
pop
xor
popf
pop
divl
add
xor
dec
lret
push
push
inc
ljmp
stos
add
scas
sub
hlt
test
in
cli
cmpxchg
xor
mov
xchg
or
mov
push
aaa
movsb
idivb
cmp
adc
int3
mov
adc
fidivrs
mov
mov
andb
mov
mov
outsb
pop
push
mov
stos
jo
or
sbb
push
fisubrs
xor
out
jecxz
pop
popa
lods
pop
fsubs
mov
je
outsl
push
out
push
mov
jbe
jmp
fld1
sub
pop
jno
inc
dec
stos
adc
je
fstl
lret
mov
das
popf
outsl
call
insb
pop
sbb
inc
sti
push
test
sbb
insb
sti
mov
scas
or
insb
sub
out
add
mov
push
ds
xor
adc
add
hlt
push
nop
and
mov
pop
cmc
jno
bound
es
sbb
movsl
out
lcall
fistpl
sub
in
push
inc
jo
xlat
and
jbe
push
sub
xchg
jbe
add
testb
inc
mov
jne
std
and
sub
mov
lcall
pop
push
cmp
rorl
rorl
sub
fnstenv
mov
inc
jbe
data16
ja
pop
pop
cmp
xchg
xlat
pop
lret
mov
fisubl
adcl
cmc
mov
sbb
sbb
fsub
add
mov
pop
imul
mov
in
cmp
outsb
lods
arpl
cmc
sti
xchg
loope
jns
std
adc
ja
iret
mov
jg
pop
in
out
adcl
adc
push
xor
inc
shrb
adc
ror
inc
dec
imul
and
aam
add
jecxz
xchg
jle
imul
cmpsb
sarl
inc
fdivrl
repz
in
mov
push
popf
cmp
js
mov
fs
push
bound
xchg
inc
pop
out
sbb
xor
pop
pop
jge
mov
jbe
fisttps
mov
leave
leave
add
jb
iret
pop
bound
sbb
shrd
mov
push
pop
xor
pushf
je
stos
and
icebp
rclb
or
dec
mov
push
mov
xor
xor
ds
cwtl
imul
loopne
add
aaa
hlt
fimuls
cld
bound
fstpt
ret
pop
sbb
lahf
jb
scas
xor
loop
adc
jge
push
adc
cmpsb
push
fwait
push
inc
add
subb
es
push
and
out
popa
into
adc
outsb
popl
adc
mov
imul
pop
ljmp
push
lods
cmp
test
jae
pop
subb
daa
or
out
fadds
cmp
jnp
je
inc
pop
scas
and
outsb
cmp
cmp
xchg
std
mov
subb
xchg
or
mov
sub
outsl
cld
push
inc
roll
pop
out
jbe
inc
or
jmp
pop
xchg
cmp
xchg
push
mov
stc
sbb
bound
push
push
mov
js
out
sbb
aam
pop
push
xchg
fs
addr16
mov
stos
sub
sbb
push
pop
xor
adc
push
xorl
arpl
jno
ljmp
cltd
das
test
push
mov
push
sub
out
sahf
outsl
adc
sbb
fwait
call
cmp
fistpll
fildl
or
xchg
subb
leave
sbb
ret
jne
cwtl
lods
imul
mov
mov
and
xchg
inc
ja
shrb
outsb
or
ss
fs
cmp
sbb
xchg
es
mov
js
mov
mov
negl
es
mov
mov
cld
push
pop
fxch
dec
lahf
sub
mov
addr16
test
or
in
aam
xchg
push
jnp
aad
xchg
in
or
push
insb
subb
fsubrp
dec
pop
sbb
lret
into
mov
shl
ret
roll
push
inc
xchg
scas
mov
pushf
lock
mov
sbb
mov
into
jge
movsb
xor
repz
xchg
out
sub
arpl
or
inc
leave
aas
mov
outsl
and
sub
pop
js
pushf
and
ja
int3
and
loopne
mov
or
dec
inc
movsl
push
sbb
shlb
push
ret
addr16
mov
pop
xchg
mov
cltd
insb
imul
xor
mov
imul
push
icebp
sub
push
push
pop
add
inc
cmpl
ret
mov
out
cltd
sub
add
call
jne
pop
cld
xor
jno
mov
sub
fdivrp
lret
jge
divl
sub
xchg
or
test
and
mov
mov
lods
subl
pushf
mov
add
inc
mov
mov
xor
sar
pop
mov
jbe
cs
dec
inc
loope
outsb
dec
popf
in
push
repz
outsb
and
sub
icebp
inc
insl
adc
or
stc
sarl
push
scas
dec
push
sub
sbb
fwait
outsb
fsubrs
int
sbb
adc
pop
or
sarb
ds
inc
xorl
add
or
adc
xchg
call
pop
and
testb
scas
mov
mov
fstl
jo
rclb
in
arpl
decl
test
outsb
flds
and
repz
call
arpl
rcrb
iret
out
dec
xor
lods
push
movsl
shrl
xor
cmp
in
lret
xor
out
in
and
mov
xor
test
mov
mov
test
outsb
xor
fs
clc
mov
loop
fwait
mov
xchg
push
add
data16
lret
or
ret
clc
mov
sbb
in
xor
dec
int3
sub
jns
inc
popf
lods
lcall
gs
lret
cmp
mov
repz
ret
sub
push
popf
cmp
jecxz
ljmp
xchg
pop
into
sbb
lea
lahf
and
jmp
sahf
or
dec
add
dec
scas
push
push
loop
push
adc
lock
daa
add
and
xchg
push
jmp
aam
gs
rclb
push
ds
das
in
mov
jns
lds
add
push
lods
cs
sbb
mov
leave
sbb
bound
push
cmpsb
cmp
les
je
sub
or
movsb
dec
or
push
inc
mov
in
cmpsl
add
mov
aas
imul
or
fsubs
outsb
fimuls
inc
inc
lea
fs
ss
jo
mov
dec
inc
xchg
ljmp
aaa
push
mov
mov
fwait
mov
sar
mov
jecxz
div
cmp
sarl
dec
jno
xor
inc
les
cmpsl
cwtl
mov
js
mov
nop
and
mov
arpl
fisttpll
movsb
inc
cwtl
jne
adc
inc
mov
clc
test
js
mov
jecxz
pop
xchg
popa
adc
popf
xchg
mov
xlat
xchg
xchg
das
leave
mulb
pop
lock
jne
into
roll
out
ja
jne
jp
repz
rcrl
dec
xor
push
insb
pop
outsb
add
lahf
xchg
jmp
push
loopne
xchg
outsb
repz
and
push
pop
dec
mov
sbb
and
cmp
outsb
cmpsl
push
je
push
fcomi
nop
adc
sarl
and
test
dec
lret
fists
pop
lods
idiv
leave
cmc
mov
shll
loop
push
insl
inc
adc
mov
lret
cwtl
iret
int3
fldcw
out
push
push
gs
lds
adc
mov
lods
lahf
xchg
aad
subl
stos
into
xor
jmp
inc
lret
ljmp
bound
xor
or
inc
fldcw
and
or
push
ss
lret
and
fldenv
xlat
jbe
stos
fnstcw
loopne
idiv
push
add
lock
and
push
movsb
xor
movsl
jnp
cmpsb
and
cmp
cltd
cmpsl
push
mov
ds
inc
in
jae
xor
and
xor
clc
mov
outsb
xchg
pop
and
sub
cwtl
pop
mov
mov
ret
or
sbb
dec
std
sub
xchg
mov
mov
mov
inc
test
aas
dec
cs
jne
add
cltd
inc
addr16
xor
mov
pop
lods
and
cmc
xor
mov
pop
xchg
movl
mov
mov
test
pop
arpl
mov
push
xor
in
adc
mov
in
pop
ja
or
xchg
lret
jnp
cmc
xchg
leave
std
dec
jno
stc
sbb
dec
mov
cltd
cltd
ds
pop
or
sahf
inc
xor
test
jno
cwtl
inc
test
arpl
mov
pop
das
fsubrl
xor
iret
jae
mov
mov
cwtl
pop
xchg
push
sub
mov
pop
imul
sbb
sbb
iret
adc
jg
sbb
pop
xchg
xchg
mov
sub
sahf
loopne
or
dec
sbb
movsb
subl
jg
pop
outsb
cmp
mov
cmp
push
rcrl
dec
cmp
pop
loop
push
lret
test
test
fs
push
inc
adc
jle
fdiv
xchg
fldl
sbb
sub
lret
scas
cmpsl
push
outsl
cwtl
mulb
les
cltd
adc
fdivs
cmp
fcmovnu
cmp
cmpsl
lret
fsubs
int
jmp
aam
dec
adc
enter
mov
cmp
int
push
dec
pop
sub
or
sahf
arpl
xchg
or
mov
fisttpl
lret
jo
xchg
xchg
pop
or
xchg
pop
mov
nop
insb
xchg
mov
inc
idiv
jb
pop
in
sbb
sahf
notl
fwait
int
mov
mov
stos
inc
imul
jnp
cli
scas
data16
pushl
dec
push
cmpsl
sti
cltd
push
test
rep
ja
inc
je
and
push
and
adc
lods
roll
mov
gs
adc
shrb
push
inc
inc
xchg
mov
das
mov
xchg
stos
cs
lahf
aas
int
insb
cmp
pop
test
sub
outsl
mov
mov
addr16
mov
mov
jge
mov
out
and
lret
xor
xchg
test
addb
inc
call
and
clc
jle
pop
push
jb
pop
mov
repz
es
mov
mov
mov
fstpl
lahf
loope
sbb
mov
hlt
outsb
shl
ds
cs
dec
in
loopne
sbb
xor
adc
ficompl
int
ret
dec
pop
cmp
ret
scas
stos
sti
pop
dec
in
mov
pop
icebp
scas
out
adc
aas
mov
outsb
mov
and
pop
imul
add
xor
push
and
xchg
in
out
rcl
cmp
enter
add
stos
and
mov
popf
xchg
dec
cs
adc
jb
xchg
out
iret
loop
cmp
lds
mov
leave
and
dec
dec
faddl
or
fwait
sub
das
pushf
mov
mov
lret
xor
scas
js
lds
push
xor
test
adc
mov
leave
cmp
xchg
fnstsw
push
lahf
leave
pushf
dec
fdivs
adcl
fisubs
in
push
pop
or
and
mov
xlat
add
test
pop
orl
cmp
shl
jb
pop
je
mov
mov
movsl
stos
or
jno
lret
std
mov
scas
pop
or
out
xor
xchg
sub
outsb
mov
pop
stos
fcoml
dec
addr16
outsl
lods
cmpsl
out
addr16
lret
jbe
sub
add
movl
ja
jo
mov
inc
loope
cs
pushf
cltd
pushf
xchg
cmc
fs
sub
jmp
xchg
xchg
repz
test
or
sub
enter
dec
leave
jnp
cltd
push
aad
imull
daa
repz
subl
mov
ficompl
pushf
sub
jnp
push
arpl
dec
int
in
jae
bound
cli
inc
mov
dec
cwtl
mov
rorb
sbb
pop
inc
push
scas
fmulp
push
xchg
mov
cmp
pushf
insl
dec
aad
inc
xchg
aam
xchg
hlt
movsl
jmp
pop
and
push
push
sbb
lods
mov
das
xchg
mov
jnp
mov
je
xsha256
cmpsb
xchg
or
jo
aad
sbb
shl
jg
or
dec
nopl
sbb
lret
push
inc
mov
mov
jle
ja
cwtl
jae
push
outsb
mov
ficoms
mov
adc
jb
mov
lods
lods
out
loop
sahf
out
push
push
shll
push
shrb
add
inc
push
cmc
lcall
add
jbe
mov
outsl
fisubrs
mov
pop
imul
hlt
jb
sub
mov
out
pop
xchg
sbb
leave
mov
fcomp
cmpsl
bound
mov
mov
adc
adc
inc
leave
push
cmp
pop
daa
jecxz
aaa
add
mov
add
aas
cwtl
and
jmp
test
adc
fs
insb
cli
inc
flds
fwait
rcll
inc
push
jp
jns
std
sub
jb
mov
insl
pop
cmpsb
push
lret
mov
pop
inc
sub
les
mov
pop
mov
sub
das
icebp
sub
jae
mov
fsubr
cli
lods
sub
sbb
xor
xor
xor
and
mov
pop
lock
xorb
mov
cltd
sbb
cmpsl
pop
imul
sahf
ret
mov
xchg
push
adc
mov
cmp
xchg
adc
mov
mov
xor
mov
call
rorb
push
addb
jl
inc
jns
and
orb
cmp
or
in
cld
dec
push
cwtl
xor
xlat
ss
mov
insl
sub
adc
add
cmp
adc
rorb
hlt
xor
mov
cli
rcrl
test
mov
jge
in
adc
cltd
rorb
adc
xchg
cmp
adc
lea
arpl
repz
or
xorb
lds
mov
es
sbb
mov
pop
mov
aaa
stos
sub
movsl
imul
in
les
fcmove
in
sbb
xchg
xchg
es
fstps
ja
fldt
loop
enter
fdiv
scas
mov
je
subl
sti
leave
jnp
out
gs
sub
imul
dec
orl
dec
pop
lret
jno
and
jecxz
dec
mov
daa
mov
jb
insl
jnp
xor
in
aam
lahf
push
inc
inc
into
rcl
dec
shlb
jne
inc
jmp
js
add
mov
lret
and
sar
jns
mov
dec
das
xchg
inc
add
int
lods
scas
jecxz
pmulhuw
gs
sahf
inc
and
mov
cmp
push
scas
ja
fbstp
aad
sub
nop
and
ss
movsb
xchg
fsts
cld
pop
pushf
inc
ucomiss
test
dec
mov
repz
push
inc
mov
inc
add
aad
mov
popf
scas
out
mov
lods
jbe
mov
add
shlb
sbb
mov
into
pop
mov
sub
inc
out
mov
dec
mov
nop
je
aam
pop
push
or
push
xor
cmp
shlb
lds
inc
mov
dec
push
sbb
fisttpll
scas
cmc
int
xchg
adc
out
xor
and
ja
inc
push
test
aam
inc
pop
testb
sub
lahf
push
les
dec
sbb
pop
inc
int3
and
jl
jmp
xchg
xor
pop
hlt
inc
and
cmp
aaa
cmp
lea
mov
rcrb
xor
dec
scas
xor
test
enter
dec
insl
mov
pop
mov
rcrl
sub
ss
rep
icebp
jbe
mov
imul
popa
and
mov
nop
icebp
jge
add
enter
mov
and
xchg
dec
mov
movsb
jno
jbe
xchg
je
pop
mov
ret
rcl
push
movsb
out
jo
aad
int3
scas
je
aad
xorb
pop
jo
sub
insb
pop
jb
fnsave
mov
movsl
xor
add
lods
cmpsb
jmp
jo
push
add
nop
out
or
add
jge
rorb
ret
push
pop
and
int3
sbb
sbb
ret
nop
sub
sub
mov
neg
inc
dec
lcall
inc
addr16
pop
xchg
xchg
mov
push
nop
add
push
xchg
push
mov
fsts
add
std
adcl
push
lcall
and
fs
adc
and
add
adc
fwait
aam
cmp
inc
or
push
sub
xchg
mov
add
pop
aam
jae
call
idivl
mov
fnsave
arpl
insl
mov
int3
pop
or
lock
ss
gs
into
xchg
bt
cmpsb
pop
or
mov
movlps
mov
repz
shl
cs
imul
mov
cli
xor
in
pop
push
ljmp
and
out
imul
lods
ljmp
mov
les
in
cmp
mov
jl
mov
and
pop
cmp
nop
inc
daa
sar
idivl
jecxz
mov
pop
cmc
leave
out
repnz
mov
mov
inc
jl
inc
std
aam
xchg
ror
aaa
call
adcb
or
lret
cli
js
orb
pop
andl
inc
sub
pop
iret
jmp
cmc
add
clc
add
outsb
mov
push
sub
js
addl
cwtl
call
xor
push
mov
in
out
fcmovnu
push
loope
mov
mul
aas
push
lods
pop
jno
xchg
iret
inc
out
mov
movsl
cmp
adc
inc
jnp
inc
mov
inc
lods
mov
cmp
stos
out
mov
mov
cmp
xchg
push
jno
or
aad
cs
mov
jg
xor
xor
fidivs
pop
test
xor
inc
dec
dec
or
push
icebp
ss
cmp
xor
lahf
aas
clc
push
add
out
leave
nop
push
push
xchg
nop
outsl
adc
cmp
scas
call
adc
xor
pop
xchg
out
mov
jmp
outsl
dec
sarb
mov
push
andb
bound
add
punpcklbw
add
testb
pushf
xchg
das
adc
mov
movsb
xor
mov
enter
push
sbbb
xchg
mov
xchg
push
mov
dec
push
std
xlat
jne
or
outsl
push
mov
xor
lret
push
repnz
sbb
push
mov
outsl
imul
jae
mov
adc
pop
jmp
in
dec
inc
jl
cmp
sbb
call
xor
test
cmp
cmc
xor
jne
cld
push
scas
cld
and
and
imul
mov
jbe
mov
pop
cmc
cmp
movsb
mov
out
imul
js
jmp
inc
lret
sub
jle
mov
mov
fisttpll
addl
dec
popa
inc
lcall
add
and
ljmp
mov
mov
fucomip
out
and
outsb
loope
jmp
mov
loope
sub
jl
sbb
data16
out
divb
fldcw
sub
mov
ret
sbbb
adc
das
lock
dec
es
xor
jp
dec
mov
inc
xchg
int
repz
pop
jo
jno
push
adc
hlt
inc
gs
mov
add
cvtps2pi
sbb
jb
push
dec
je
fistps
and
in
pop
or
jno
lds
jmp
and
fidivs
add
pop
sub
jbe
popa
stos
and
sbb
out
inc
cmpsl
jg
test
inc
gs
test
cmpl
xchg
and
jp
cmp
adc
data16
jnp
dec
cmp
sbb
mov
mov
lods
or
jo
imul
lods
test
xchg
cmp
data16
sub
insb
inc
cmp
mov
sub
ljmp
xlat
sti
xchg
lcall
mov
sub
add
pop
add
mov
or
aad
and
pop
rcrl
pop
pop
or
cmp
sub
inc
cmp
and
iret
test
inc
popa
pop
and
fcmovnb
fnstenv
call
push
xchg
pop
outsb
pop
addr16
aad
adc
fisubl
insl
sahf
dec
inc
pop
jle
sub
mov
hlt
xlat
mov
mov
fwait
push
sbb
inc
or
sbb
inc
mov
loopne
je
out
ret
imul
icebp
xor
pusha
sbb
js
mov
jnp
int
mov
loopne
fidivrl
sbb
stc
orl
ss
adc
inc
cmpb
imul
mov
test
das
popa
xchg
movsb
cmp
loopne
adc
and
push
adc
xor
orb
outsb
mov
loope
mov
rolb
push
divb
lods
in
mov
pop
sub
shlb
inc
ret
stos
popf
stc
dec
cmpsb
xor
sarb
push
stos
ja
and
outsb
mov
loop
orl
add
inc
sbb
idivb
clc
jne
push
jbe
xchg
in
pop
jg
sub
sti
in
cmp
daa
jno
add
mov
scas
cmpsb
fiaddl
xor
movsl
je
outsb
xlat
in
jmp
hlt
mov
inc
aam
cbtw
adc
and
shrb
add
mov
push
jne
fsubr
aad
jno
pop
mov
dec
xor
mov
arpl
hlt
verw
roll
loope
test
add
xor
loop
adc
loop
fcmovb
adc
pusha
pop
xchg
adcb
jno
mov
xlat
iret
push
test
push
add
xchg
jp
pop
lahf
scas
pushf
dec
addr16
pusha
push
xchg
fst
aaa
jl
xchg
inc
cwtl
orb
mov
push
cltd
shll
es
popf
cmc
or
stos
rorb
leave
inc
scas
adc
adc
jg
add
popf
dec
sbb
adc
stos
jmp
jge
sar
jmp
push
add
stos
sti
pop
test
xor
and
sahf
add
add
imul
movsl
pop
push
addr16
arpl
sbb
scas
scas
mov
add
popf
test
mov
lock
jnp
or
adc
in
scas
dec
jp
test
std
xchg
mov
or
jno
adc
and
and
mov
mov
cmc
test
insb
out
pop
ds
dec
or
popf
es
dec
jecxz
xchg
push
or
jnp
push
push
adc
fs
loope
rolb
lods
icebp
jmp
outsl
add
cmpsl
shlb
repz
cmp
dec
ljmp
pop
mov
ficoml
mov
loopne
xor
pushf
imulb
loope
cmc
add
push
sbb
push
adc
push
pop
mov
or
ret
ror
or
mov
pop
and
or
or
sbb
fwait
in
jecxz
iret
mov
ret
insl
push
loopne
test
addl
cmp
pop
push
push
mov
sub
dec
mov
mov
push
mov
lahf
mov
test
add
std
sub
jne
mov
jns
adc
inc
data16
cli
push
mov
aad
add
and
pushf
les
pop
mov
cmp
mov
inc
rcrl
lea
dec
pop
iret
lahf
and
sbbl
ds
push
fwait
int
jge
loopne
or
push
test
test
stos
inc
call
pusha
ss
pop
rcll
lret
js
ret
cwtl
xchg
lods
and
outsb
mov
insl
mov
mov
push
or
aaa
add
pop
sbb
fmul
sbb
dec
jge
incl
jg
push
into
adc
in
xchg
push
or
push
and
xchg
push
das
icebp
inc
cmp
test
jecxz
pop
aam
pop
mov
aam
movsl
xor
cmp
shlb
shrb
lret
mov
sbb
cmp
push
ja
pop
jb
mov
iret
jns
sahf
cmp
inc
nop
stos
or
lods
mov
loop
mov
jmp
mov
jmp
xchg
in
daa
jmp
mov
enter
adc
mov
stos
ljmp
in
jmp
scas
jge
loop
mov
adc
fsubs
jb
repnz
das
and
adc
into
ja
mov
test
pop
mov
cmpsl
lods
pop
xchg
cmp
sub
adc
jge
call
fldt
pusha
fistps
add
mov
pop
or
push
pop
pop
scas
jge
jecxz
es
clc
mov
fcom
xchg
sarl
mov
ja
push
push
cmp
inc
lcall
dec
push
xor
in
push
mov
cli
mov
stos
je
xchg
das
hlt
jne
je
mov
add
mov
int3
mov
out
inc
rcr
inc
into
jae
sahf
testb
pop
ret
jmp
sar
out
fbld
jbe
pand
ret
push
cli
xchg
inc
inc
repz
divl
rol
push
std
mov
xchg
xor
xchg
lcall
or
adc
imul
dec
pusha
iret
inc
xor
cmc
mov
sub
push
push
jle
out
test
lret
scas
pop
imul
fldl
shlb
push
mov
je
clc
outsl
ljmp
das
sbb
lds
xchg
je
lea
mov
test
out
rcr
fcompl
mov
cmp
pop
sub
sbb
pop
nop
mov
and
cli
cltd
ret
cmpsl
iret
dec
mov
jb
dec
fcomi
sahf
addps
dec
xchg
ss
inc
std
inc
mov
jge
xor
addr16
jecxz
cli
xor
in
adc
rorb
add
and
sbb
scas
ds
scas
call
pop
shrl
cmpxchg
inc
mov
or
hlt
sub
xor
andl
mov
mov
inc
loopne
imul
incb
mov
push
pop
dec
mov
fwait
inc
mov
jns
sbb
shlb
cltd
push
push
iret
mov
add
in
xor
lods
stos
mov
add
lods
and
jns
inc
pushl
std
out
inc
gs
xchg
cs
sahf
stos
lret
mov
fmuls
push
sarb
push
shrl
loopne
or
push
and
out
jge
es
lock
and
andb
jbe
and
call
rorb
cld
lahf
lcall
inc
sbb
lods
jnp
test
int
mov
frstpm(287
into
mov
sbb
jnp
pop
cmpsb
push
xchg
sbb
je
pop
mov
and
xor
push
fsubrp
dec
sub
sbb
xor
test
aas
add
fwait
loopne
ret
sbb
push
pop
aaa
and
mov
xor
inc
dec
xchg
sub
mov
cmp
sahf
pop
insl
dec
ljmp
cmp
dec
fadd
cld
shlb
leave
loop
sahf
push
mov
adc
cld
std
jle
and
or
fld
dec
test
dec
cmp
in
cmp
mov
inc
push
ja
and
movsb
mov
out
ret
shlb
jge
ss
cmpb
xor
sbb
xlat
test
out
sub
ret
das
in
mov
pop
inc
jae
pop
and
mov
adc
cltd
jb
xor
mov
jbe
push
aas
push
push
scas
into
dec
lret
popf
ja
sub
xor
sub
pop
divb
jg
ljmp
adc
sub
xchg
loope
push
cli
inc
jne
popf
sbb
sbb
jecxz
sbb
xchg
cwtl
adc
jns
push
mov
data16
lahf
lret
mov
xchg
out
sbb
push
or
mov
daa
ret
lahf
popf
push
scas
sub
in
ror
sub
ds
add
dec
xchg
adc
pop
popa
push
pop
cmpsl
cmp
jo
mov
jp
mov
ret
mov
inc
insl
xor
lcall
adc
xor
sti
inc
jns
mov
or
or
add
pop
bound
cmpsl
gs
inc
gs
mov
xchg
insl
pusha
dec
sbbl
pushf
mov
aam
insb
adc
add
or
mov
ret
sbb
push
fidivs
mov
jne
ss
shrl
or
cmp
stos
ds
dec
jmp
in
in
pop
mov
xchg
inc
cmpl
xchg
in
or
std
dec
add
imul
les
std
xchg
mov
pushf
dec
mov
imul
add
cld
jl
push
inc
repz
add
adc
dec
shrl
sub
mov
dec
pusha
pop
scas
jns
and
mov
mov
pop
or
mov
shrb
cmp
outsb
outsb
lods
add
stos
adc
xor
sub
lret
cmp
lock
sbbb
push
xchg
or
sbb
mov
jp
jne
jl
inc
pop
pop
xchg
jns
jge
data16
cwtl
push
shrd
cli
jo
cmp
lret
ds
out
pop
mov
iret
mov
add
lahf
cmp
or
jg
sbb
jno
sbb
push
lret
cmp
aaa
lret
cmp
gs
cs
dec
cmp
pop
lea
fs
or
loop
in
sub
icebp
fsubs
fildl
aas
and
pop
sbb
inc
xchg
lcall
insl
icebp
pop
push
out
cmpl
add
mov
pop
push
pushf
gs
push
pop
or
pop
cmp
rolb
mov
and
jl
dec
loop
andl
push
sub
xchg
es
decb
push
xor
fcmovnb
inc
push
rorl
fwait
dec
enter
cmp
mov
push
inc
call
pop
mov
ljmp
pop
mov
cmp
das
js
leave
stos
or
xchg
add
mov
or
xchg
or
jle
cmp
dec
pop
xchg
xor
jbe
mov
fldl
jp
push
repnz
shrl
xchg
loop
adc
pop
jae
hlt
inc
pop
ret
lahf
dec
mov
insl
mov
xchg
mov
sbb
adc
push
jl
idivl
dec
sarb
and
mov
pop
cmpsb
ja
lcall
jp
sti
push
ss
dec
mov
sbb
cwtl
xor
divps
sbb
arpl
mov
je
dec
cs
cmp
dec
cltd
dec
adc
dec
pop
add
xchg
in
adc
daa
mov
repnz
mov
lret
les
out
cs
mov
inc
loopne
lods
mov
pop
mov
ret
fsubs
adc
xchg
pop
shlb
and
xor
mov
jns
sar
inc
jmp
inc
test
xchg
mov
xchg
dec
out
stos
int3
push
dec
xor
add
xlat
cmpsl
addl
outsb
rclb
and
dec
enter
loopne
mov
lock
popf
adc
mov
sti
loop
and
pusha
pop
orl
push
mov
xchg
adc
jb
les
mov
inc
lahf
push
test
inc
xchg
xor
lea
outsl
xor
cwtl
jp
daa
fistps
mov
cmp
sti
ret
dec
cli
add
cmp
aam
dec
ljmp
xchg
and
and
mov
sub
pop
dec
movsb
gs
sbb
xchg
or
pop
mov
inc
sbb
bound
jns
push
cltd
mov
arpl
sub
sub
fwait
push
jle
fcomps
nop
add
adc
jns
push
push
in
xor
loop
jnp
divb
push
push
xchg
movsl
xchg
call
scas
cmp
int
xor
iret
stos
stos
jo
and
sahf
inc
adc
sahf
roll
das
jmp
mov
repz
push
movsl
popf
ret
mov
outsb
mov
imul
leave
out
sub
pop
push
dec
mov
lcall
movsl
xor
dec
sarb
int3
xlat
mov
and
ljmp
xchg
adc
out
stos
pop
sub
dec
fs
xchg
leave
cmp
push
test
fistpl
push
hlt
xchg
sub
pop
rcrb
cmc
stos
or
mov
repz
jns
test
mov
jnp
add
movsl
aaa
cmpsl
or
and
jo
fistps
fs
cwtl
adc
je
mov
cmp
fdivs
nop
xlat
xchg
mov
inc
mov
jbe
sbb
sbbb
scas
das
pop
sbb
in
ret
lods
gs
inc
insb
push
mov
fwait
in
cltd
int
jo
imul
test
scas
addr16
in
movsl
mov
fdivrs
test
xor
sub
add
jmp
and
lcall
test
out
jmp
jge
xchg
cmc
sahf
ret
mov
push
xchg
andl
or
call
repz
imul
push
xor
xchg
push
xor
in
sbb
and
lahf
xor
pop
sti
push
test
lret
and
lds
aad
mov
sbb
ss
out
sbbb
mov
dec
dec
popa
lock
jmp
jo
fists
sti
push
adc
jecxz
xchg
aad
enter
ret
testl
roll
mov
outsb
jle
push
mov
jo
fucomip
mov
sub
push
adc
add
andl
iret
int3
push
xchg
enter
xchg
cmp
je
fstpt
sbb
cs
cmpsl
add
adc
inc
pusha
test
adc
sub
sbb
add
subb
push
xorb
jns
arpl
jle
insb
imul
mov
add
insl
and
xor
cmp
inc
mov
lds
aas
sub
push
cmp
sbb
mov
sbb
pop
jmp
icebp
gs
ss
fadds
mov
jecxz
sbb
stos
movsl
pop
lods
sbb
cmp
test
mov
movsl
fcomps
jecxz
cmpsl
mov
test
add
cmpsb
mov
xchg
cmp
add
fdivrs
dec
jo
push
ds
push
cmpsb
stc
xchg
sub
push
jmp
or
je
ror
test
sbb
push
in
es
cmc
lds
inc
bound
push
mov
push
out
cmp
ret
or
pop
jb
iret
cmp
push
rcll
xor
lods
or
ret
icebp
add
enter
jmp
out
mov
andb
stc
xchg
bswap
push
lock
jb
ja
ljmp
sbb
mov
lock
jge
push
pusha
ss
dec
push
xchg
add
jle
and
or
sub
xchg
push
leave
adc
xchg
xor
jnp
cmp
idivb
movsbl
xchg
add
stos
fisubl
push
imul
aam
dec
pop
push
gs
and
hlt
scas
test
out
sub
test
test
mov
xchg
sbb
arpl
mov
out
lret
notb
push
ret
mov
cmp
sti
ficompl
lock
push
xchg
lds
xor
cmp
sub
fistpl
out
adcb
mov
sub
jne
sarb
dec
adc
pop
stc
ret
popf
pop
sti
adc
pusha
call
sbb
mov
sub
pop
sub
int
lret
into
mov
mov
in
pop
rcrl
test
sbb
rorl
aam
xor
sbb
lret
add
xlat
nop
mov
and
shl
into
cmp
cld
xchg
aad
das
lret
movsl
push
ljmp
clc
dec
pop
xor
movsl
sub
iret
cmp
jecxz
loopne
mov
xchg
lea
push
call
addr16
dec
lock
lret
jge
ret
xchg
cmp
loop
adc
jmp
icebp
rcr
call
pop
cli
in
xchg
test
jo
dec
ret
adc
sti
fcmove
stc
insl
daa
andb
add
push
enter
subb
insb
leave
ret
movsl
pop
js
jno
mov
mov
imul
stos
mov
and
push
fisttps
out
pop
pop
push
push
pop
std
pop
fcoms
jmp
fsubrl
xor
mov
mov
and
repnz
sub
mov
test
pop
pop
mov
dec
aad
test
lret
sbb
ljmp
shlb
inc
scas
mov
leave
int
cmpsb
add
jae
scas
in
xor
loope
sahf
inc
sbb
lcall
lahf
dec
repz
daa
pop
dec
repnz
push
pusha
jb
pop
add
outsb
loop
adc
sub
mov
xor
adcb
inc
adc
in
or
mov
pop
add
pop
loopne
adcl
push
adc
xchg
fcmovnbe
stos
xchg
pusha
aam
xchg
and
pop
lahf
cmovge
push
or
cs
cmp
xlat
js
pop
sub
imul
fistl
cmp
jecxz
das
dec
in
fidivs
mov
movsl
xor
in
xchg
loop
aas
pop
jb
nop
test
call
daa
dec
dec
call
pop
in
mov
rolb
movsb
fwait
mov
dec
enter
jge
mov
subb
rolb
xor
out
aaa
sti
inc
mov
xchg
jo
clc
add
cmpsl
mov
call
lds
cmpsl
int3
xlat
sahf
ja
imul
dec
cmpsl
or
lcall
jns
or
sub
adc
ret
and
imul
fs
pop
repnz
dec
test
fsubrl
in
inc
cltd
dec
or
pop
out
fistl
lahf
add
call
ds
hlt
sub
or
mov
xchg
mov
inc
pop
das
push
inc
jecxz
addr16
int
dec
or
nop
mov
into
scas
fnstcw
insb
adc
pusha
cmp
fimuls
test
leave
movsb
shrl
out
cmp
or
xlat
sub
inc
out
and
add
inc
jb
aaa
push
cmp
stos
loop
psubsb
add
cmp
sbb
popa
jno
adc
loopne
aaa
in
out
and
dec
test
dec
repz
adc
movsb
scas
sbb
lds
je
or
into
lock
jne
sbb
adc
mov
dec
call
stc
xchg
fldt
pop
push
sub
test
loopne
mov
es
add
cwtl
jb
lock
loopne
incb
iret
movsl
sti
sahf
jmp
pop
loopne
shlb
add
push
lcall
inc
push
cmp
inc
sub
stos
jo
add
mov
nop
add
xor
leave
mov
lcall
imul
movsb
push
mov
add
or
and
adc
xor
call
and
mov
xchg
sub
ja
rcrl
mov
shl
mov
mov
pop
mov
sbb
adc
shlb
popa
or
enter
sub
loop
in
subb
cmpsl
mov
loopne
cmp
cli
adc
int
int3
adc
movsl
aaa
sti
mov
mov
dec
pop
cmp
comiss
add
xchg
in
push
aad
adc
jmp
aam
or
nop
jg
jg
jp
test
stc
xchg
int
into
cmp
ja
loope
iret
in
jecxz
clc
test
add
test
iret
inc
push
cs
mov
mov
and
out
lcall
cltd
mov
add
adc
lock
dec
sbb
outsb
inc
xor
and
xor
xchg
lret
mov
dec
sbb
loopne
cwtl
sub
cmp
das
lret
icebp
daa
inc
mov
mov
or
pop
andb
pop
fiaddl
push
fwait
sub
push
or
ret
ss
adc
out
and
jb
pop
sbb
bound
sahf
loope
pop
adc
mov
pop
les
and
mov
sub
pop
push
pushf
mov
jns
mov
mov
cmpsl
shrl
and
fidivrs
mov
lods
cmpsb
push
jae
je
push
daa
or
xchg
jg
jns
xchg
or
out
es
jmp
or
out
xchg
cltd
adc
jp
add
and
mov
fldl
sub
sbb
or
mov
ret
lahf
jmp
pop
popa
jns
pop
inc
aam
insl
adc
lcall
push
lret
xor
sub
jno
shlb
adc
cmp
das
or
mov
fs
add
pop
sbb
mov
jle
popf
jnp
cmpl
or
lret
es
mov
push
pop
cltd
lcall
mov
loope
dec
repnz
ja
mov
shlb
mov
jmp
in
lods
pop
sti
xchg
inc
sti
lea
shlb
mov
js
lds
xchg
aaa
and
loop
or
xor
insl
mov
test
xchg
add
pop
push
in
in
call
cwtl
cltd
test
mov
mov
mov
push
and
mov
call
imul
dec
xor
push
mov
jmp
bound
pop
popa
mov
loopne
jmp
ffree
push
fsubp
shrl
or
push
and
loope
mov
test
pop
loope
ljmp
xchg
insb
pop
imul
jp
mov
inc
or
xorl
xor
ss
nop
cli
js
cld
jmp
jle
nop
adc
dec
jno
push
inc
stos
mov
int
addl
mov
subl
pop
fildll
and
aaa
push
test
les
stos
jp
dec
inc
or
jl
data16
loope
mov
aad
push
mov
in
sbb
aas
xchg
cmp
push
dec
dec
mov
inc
push
jae
pop
add
add
mov
sbb
inc
pop
add
xchg
sar
inc
dec
adc
setns
mov
mov
shll
cs
arpl
mov
fdivrp
mov
aaa
pop
cwtl
je
movsl
stos
xorl
jp
add
push
test
jb
sahf
push
dec
jmp
dec
xorb
cmpsl
cwtl
stos
or
insl
cmp
pushf
repz
insb
push
outsl
jecxz
clc
divl
stc
movsb
cmpsb
rcrl
mov
push
clc
clc
jnp
mov
push
dec
fcoml
cld
adc
sub
dec
or
movsl
pop
jmp
or
and
mov
or
xchg
ret
adc
cmp
data16
inc
icebp
and
roll
xchg
add
fldcw
lods
mov
mov
add
mov
xor
pop
jo
and
dec
sbb
cli
pop
mov
orl
clc
mov
push
cmpsb
mov
rcrl
and
cmp
mov
jg
cmc
xchg
pop
add
jno
or
mov
out
ds
add
cwtl
and
lret
push
inc
bound
lcall
sbb
dec
andl
xor
fcompl
nop
aas
sub
xchg
pop
lea
and
inc
les
mov
or
ja
loop
pushf
and
cmp
mov
adc
and
xor
sar
dec
sbb
pop
dec
mov
xchg
icebp
lahf
addr16
imul
sbb
dec
testb
testl
xchg
jae
mov
xchg
jge
add
jecxz
rorl
mov
sub
je
jns
dec
ret
cltd
or
in
mov
adc
lahf
pop
pop
iret
movsl
and
lods
dec
pop
imul
ret
in
shll
cwtl
dec
push
outsl
cwtl
sarb
ja
push
and
sbb
push
sbb
mov
mov
push
js
mov
push
add
push
dec
bnd
jl
sarb
scas
mov
push
imul
dec
dec
gs
rcrl
jg
lods
xor
dec
loopne
xchg
dec
jbe
mov
xor
sub
in
pop
test
lcall
xchg
pop
sub
pop
rorb
xchg
pop
mov
stos
or
jmp
xchg
fsubrs
fsubrl
mov
pushf
jo
aam
or
mov
pop
cmp
pmuludq
cmpsb
mov
dec
jb
aad
aad
jae
and
cmp
pushf
movl
inc
mov
dec
sub
test
out
pop
or
ret
cli
fs
movsl
and
repnz
in
mov
jae
cmp
xchg
ret
hlt
or
push
push
daa
test
dec
xchg
out
mov
mov
add
ffree
inc
mov
int3
lcall
movsb
sbb
jp
cmp
enter
mov
les
movsl
xor
clc
int3
jmp
dec
leave
push
dec
and
ds
int3
pop
ret
push
movsb
sub
push
or
aam
popa
insb
cmpsl
es
jl
lahf
inc
lock
adc
les
hlt
dec
push
in
nop
push
aad
add
shll
xor
cmp
cmp
test
mov
iret
or
cwtl
pushf
ret
xchg
inc
popf
cld
test
pushf
gs
icebp
mov
mov
push
cld
lods
dec
dec
or
adc
loope
hlt
and
repz
fcom
or
inc
or
mov
and
xchg
into
fcmovnbe
jp
push
xchg
sbb
subb
cmp
xor
scas
sub
jg
sbb
sub
jbe
cmp
in
loop
fsubrl
mov
ss
mov
cmpl
fbstp
mov
or
pop
repz
cld
fmuls
xor
cmp
leave
mov
cmp
scas
sub
int
sbb
aad
cs
mov
inc
test
mov
inc
imulb
fnstcw
fcmovb
icebp
cmp
stos
aas
mov
es
mov
jmp
cmp
push
sbb
mov
iret
arpl
mov
lahf
sbb
js
mov
add
movsb
pop
iret
mov
mov
jne
cmc
mov
lret
lods
pop
inc
int
xor
dec
sbb
outsb
sarl
push
and
mov
imulb
jle
lea
push
jp
mov
outsl
into
mov
ss
das
mov
les
rcrb
and
lods
jmp
insl
mov
popa
xchg
aam
add
sbb
mov
mov
in
fildll
dec
stos
adc
fsubrs
mov
enter
push
and
fadd
lea
push
dec
jne
xor
incb
jno
and
jne
add
dec
push
fwait
add
pop
push
pushf
in
adc
xchg
shlb
or
lret
mov
xchg
mov
cmp
push
xor
pop
loopne
mov
int3
jnp
mov
xor
jle
cmpsb
xchg
sbb
push
xchg
lcall
push
andl
push
daa
cmp
mov
sbb
inc
sub
aas
in
cld
dec
cmp
sub
lret
xor
push
mov
outsb
fisubl
lahf
mov
dec
sarl
xor
shl
ret
sbb
sbb
sti
xchg
ja
outsb
aaa
cwtl
test
mov
mov
js
cli
sahf
and
int3
cmp
jg
dec
jns
mov
push
les
jno
aad
fucomip
loopne
in
cli
jo
cmp
shrl
jecxz
jb
pop
and
or
and
loop
rorb
jl
xor
xor
stc
cltd
fcomp
shl
cmp
bnd
cmp
loop
pop
pop
rol
and
sbb
xchg
outsl
xchg
movsl
ficomps
lret
stos
ljmp
ret
ficompl
mov
adcl
lds
sbb
cmp
mov
and
add
xchg
and
xchg
jge
lods
jl
or
sub
lock
xchg
sub
jmp
jg
test
repnz
inc
mov
ret
xchg
push
push
lea
sub
loop
mov
dec
aad
jno
sub
xlat
test
mov
push
push
push
fdivrp
pop
fsqrt
test
xor
add
adc
and
adc
sub
clc
cs
add
dec
mov
push
jle
mov
sub
adc
shrl
fcoms
jecxz
sub
mov
cltd
shrl
dec
xchg
and
flds
xor
dec
in
sub
fcomip
dec
lcall
and
add
push
divb
sub
cs
inc
mov
push
hlt
adc
dec
test
mov
sbb
stos
stos
jo
sub
iret
xchg
push
cmp
mov
roll
leave
lret
int3
sub
cltd
loope
testl
push
dec
push
sbb
clc
clc
jnp
aas
cmp
lods
arpl
or
fnstsw
scas
dec
lods
out
cmp
icebp
fnstenv
fsubrs
rcrl
js
in
mov
push
mov
cmpb
int
push
dec
lods
in
fbld
pop
dec
out
xchg
and
lea
loop
scas
imul
rcr
cmp
xchg
inc
jp
in
test
mov
mov
cld
ljmp
test
test
inc
cmp
fnstsw
or
cmpsb
ljmp
sbb
jle
push
out
imul
popf
jnp
orl
xchg
push
pushl
sarl
data16
notl
sbb
jo
cld
popf
jbe
pop
mov
and
jge
in
divb
push
inc
cmp
adc
mov
lret
jp
mov
pop
push
scas
pushf
je
mov
iret
push
mov
out
icebp
push
jmp
push
push
lret
call
jmp
shlb
push
adc
aam
cwtl
push
loopne
pop
push
push
mov
scas
inc
mov
dec
jmp
xor
aad
add
fwait
or
incl
fmuls
cltd
xchg
shl
icebp
or
mov
loopne
paddsb
and
dec
jle
rcll
and
jmp
cmp
pop
pushf
xor
xchg
adcl
adc
cs
leave
mov
outsl
adc
test
jbe
leave
push
dec
mov
and
add
sbb
aaa
data16
mov
dec
lret
pusha
mov
and
lock
in
and
pusha
mull
pop
mov
mov
mov
jnp
divb
dec
cld
cmp
divb
addr16
xchg
popf
jecxz
aaa
cmp
fs
cmp
xor
inc
fdivrs
jb
push
repnz
cmpsl
adc
push
or
sti
stos
sbb
mov
mov
into
xchg
cwtl
shlb
push
mov
adc
fdivrp
push
push
jmp
cld
fistl
scas
aam
loop
push
jp
push
outsb
in
shll
adc
xchg
pop
cmpsb
push
stos
sbb
repnz
ret
xor
pop
pusha
fwait
push
cs
pusha
pop
arpl
outsl
es
lea
sbb
pop
xchg
sub
xrelease
pop
jae
sub
jns
sbb
xchg
test
lahf
enter
lds
jbe
mov
xchg
dec
jae
test
inc
call
ret
pop
push
cld
iret
sarb
mov
mov
pop
mov
lods
mov
popf
add
ret
mov
push
bound
or
cmp
test
and
popa
add
or
add
gs
jne
icebp
notb
xchg
stos
sbbl
cmp
shl
fs
or
push
daa
ficoml
and
cwtl
dec
pop
hlt
aaa
jmp
mov
xor
pop
aad
and
push
jle
dec
std
inc
or
lret
xor
xchg
xchg
jecxz
idivl
iret
sbb
jmp
jbe
enter
push
daa
or
lock
gs
stos
cmp
ret
and
mov
cmpsb
out
lcall
lret
jmp
daa
loop
adc
jmp
xchg
popf
int3
add
int
sbbb
add
add
and
mov
pop
cmpsl
fistl
das
stos
add
mov
jg
jns
xor
jo
test
and
loop
add
lahf
inc
sub
and
add
mov
dec
test
sub
sti
lds
push
push
idivl
jno
data16
pop
and
movsb
dec
fdivr
push
jg
cwtl
iret
int
cmp
shl
inc
xchg
inc
mov
out
pop
std
mov
xchg
in
and
push
or
adc
push
invd
mov
xchg
dec
loope,pn
cld
pop
mov
bound
xor
ret
xlat
pop
jp
mov
rcr
fwait
push
and
mov
lcall
int
sti
ds
aas
mov
divl
pop
mov
mov
xchg
fistl
sbb
jns
movb
push
fstl
pusha
test
lret
sub
mov
jne
mov
jmp
shrb
rclb
mov
mov
pop
xchg
pop
jecxz
adcb
push
fcomip
hlt
push
cmp
push
ja
xor
lahf
sahf
fstp
das
and
aaa
imul
clc
clc
lods
jl
mov
xchg
dec
cmp
idiv
adcb
or
adc
jle
pop
pop
jbe
pop
test
pop
movsb
cmp
sub
mov
sbbb
mov
clc
imul
xchg
push
or
and
imul
scas
stc
aam
inc
fisubs
fcom
or
mov
test
test
fidivl
lods
call
jnp
rcll
sub
mov
adcl
mov
scas
push
popa
testl
xchg
pop
outsb
cmpsb
sbb
sub
sbb
or
leave
inc
xor
pushf
lds
mov
sub
sbb
jno
test
dec
inc
adc
and
inc
jmp
push
insb
shr
jno
lret
fildll
test
outsl
push
and
pop
test
inc
inc
ja
ss
addl
sub
inc
jecxz
ret
jb
fdivp
xor
js
jg
loop
je
push
mov
out
pushw
iret
mov
test
cmp
or
push
daa
popa
test
stos
orb
push
jmp
cmp
dec
pop
and
jae
inc
dec
clc
add
or
add
fs
loope
jge
scas
repz
sub
sbb
mov
inc
push
jae
adc
mov
xchg
je
outsl
pop
in
je
cld
inc
xchg
hlt
adc
add
push
xor
cmp
in
mov
pop
test
push
sub
dec
pop
pop
push
sub
adc
movsb
cmp
stos
movsb
stc
popf
xor
mov
jae
fisubl
add
jne
jbe
mov
loope
dec
jp
push
cli
xchg
mov
adc
sub
mov
mov
jae
je
jns
xchg
shll
cmpsl
or
mov
lcall
in
pop
stos
cmp
mov
or
push
scas
mov
jns
test
mov
cmp
ljmp
sti
in
icebp
ret
sub
push
pop
inc
aas
push
dec
lahf
sbb
inc
mov
rorl
pop
and
in
outsb
lock
xchg
push
icebp
cmpb
inc
cmp
cli
jbe
jns
cmpsl
sti
cmpl
lods
adc
outsl
andb
or
mov
add
pushf
and
ror
xor
sti
and
adc
push
mov
and
or
ds
cli
xchg
mov
jbe
inc
cmc
mov
dec
pop
popl
pop
push
mov
xchg
arpl
call
or
cmp
movsb
into
mov
pop
jp
sarl
cmpsb
fiaddl
dec
inc
shl
out
xor
test
jle
ljmp
adc
subb
xor
out
out
lods
out
jp
mov
mov
inc
mov
cmp
xchg
or
out
jg
add
xchg
xor
or
dec
mov
lret
icebp
sub
mov
insl
fiadds
ficomps
std
cmp
push
push
into
orb
into
or
lds
fimull
subps
mov
je
add
sbb
repnz
scas
xlat
fwait
je
add
jecxz
add
sbb
and
push
das
in
push
stos
push
xor
jnp
lahf
dec
dec
mov
jg
mov
es
xor
fsubrp
lret
lods
into
aas
xchg
dec
and
mov
shr
cmp
pop
in
lret
xor
xor
repnz
iret
jb
mulb
je
aaa
loop
lock
inc
push
arpl
repnz
jb
xchg
jmp
inc
push
mull
in
or
adc
sar
ss
sbb
xchg
stos
test
loop
mov
xor
leave
adc
pop
lret
pop
stos
mov
jnp
xlat
mov
mov
dec
cmpsb
mov
aam
fstps
inc
imul
mov
xchg
loopne
fadds
dec
mov
mov
adc
sahf
cmp
lret
outsl
das
push
scas
outsb
daa
pop
shl
repz
cmp
addr16
fidivrs
push
adc
imul
push
jbe
movsb
fistps
xchg
and
rcl
or
adc
push
lds
in
and
sbb
mov
sbb
cmp
fwait
dec
pop
rcrl
push
pop
sub
lds
xchg
push
fnstcw
pop
enter
add
call
std
cwtl
jnp
shll
push
push
sbb
jge
sbb
repnz
sbb
cmp
mov
dec
fmull
push
fwait
xor
cmp
out
lret
cmp
ss
mov
mov
adc
cwtl
mov
stc
push
pop
outsl
in
xchg
pushl
mov
cmc
outsl
mov
negl
add
ljmp
lea
cltd
sub
cmpsb
rol
jb,pt
and
fiadds
filds
pop
jle
jmp
inc
loopne
jo
xchg
nop
xchg
gs
lds
jb
imul
adc
mov
aaa
sarb
mov
and
aad
cmp
mov
vpsrld
xchg
jbe
sbb
cmpl
enter
add
dec
sbb
pop
lahf
add
push
sub
jne
push
add
pop
lret
out
mov
shrl
mov
xrelease
sbb
sbbl
inc
and
ret
je
loop
les
cmp
dec
ja
inc
xchg
in
sbb
sbb
inc
push
push
jo
mov
sub
imul
jmp
cmp
shll
or
scas
fldcw
scas
sub
mov
lret
pop
pop
stos
add
xorl
movsb
ret
pop
xor
xor
or
in
js
cs
pusha
into
jmp
sti
pop
sbbb
xor
outsb
fst
inc
xor
sti
cli
stos
addb
out
add
jp
push
adc
push
shll
aam
stc
inc
cld
ds
jo
sub
push
arpl
and
and
dec
xchg
mov
adc
insb
rol
test
lods
sub
jp
out
mov
pop
rcrb
push
mov
add
pushf
add
iret
mov
fdivl
inc
and
mov
cmp
fidivrl
or
push
and
push
pop
int
add
pushf
mov
pusha
sub
das
outsb
dec
in
stos
sti
cmpsl
pushf
scas
fwait
adc
jae
sub
xor
mov
and
cli
aad
loopne
pop
jmp
shr
push
loop
jp
jp
les
lcall
sbbb
pop
jbe
xor
cli
push
jmp
not
pop
add
je
fsubrl
ja
jnp
and
adc
test
sbb
adc
xchg
in
lea
lods
fiadds
xor
mov
cmp
add
call
and
addr16
fwait
inc
cld
rcr
loopne
dec
add
push
bound
ja
jbe
popf
add
pop
out
nop
std
inc
mov
lds
fisubrl
loope
cli
add
ljmp
and
test
xchg
lcall
push
inc
pop
dec
enter
addr16
ss
jno
xor
js
adcl
loope
push
pop
mov
and
mov
int
ss
push
and
push
push
push
addr16
cmp
scas
push
dec
dec
cmp
add
xchg
ret
dec
xchg
push
fisttpl
scas
adc
ficomps
repnz
iret
pop
xchg
leave
test
in
imul
inc
xchg
mov
add
negb
push
lods
pop
push
in
dec
mov
adc
ds
ficomps
out
dec
pop
call
adc
adc
sbb
push
in
in
jle
je
cmc
mov
xlat
mov
mov
fldenv
sbb
les
push
pop
fcoml
jge
fistpl
call
dec
mov
inc
in
and
or
mov
je
fldt
pop
pushf
out
int
ljmp
push
mov
jo
inc
movsb
ljmp
pop
sub
out
mov
xchg
xor
sub
aas
dec
fistpl
dec
jno
sub
adc
inc
lea
in
test
adc
xor
fldcw
into
push
xchg
ljmp
fxch
and
mov
andb
mov
out
inc
sub
add
imul
push
jnp
pop
mov
or
test
rcl
lea
inc
adc
jmp
or
pop
cmp
xor
adc
push
lcall
or
push
inc
xchg
call
test
roll
rcl
jae
mov
mov
pop
push
fnstcw
or
fdecstp
jg
and
stos
je
lcall
bound
das
negl
iret
mov
pop
pop
add
shl
mov
rclb
aad
mov
mov
push
loop
add
adc
jno
sub
sbb
mov
pop
adc
xor
jge
lods
repz
push
adc
loopne,pt
push
in
jg
pop
jb
fists
pop
lgs
shll
lea
push
push
fmull
sbb
pinsrw
sub
pop
sti
movsl
mov
std
call
iret
insb
push
cmp
loopne
stc
outsl
or
add
fldl
bound
movsl
gs
testl
lret
add
sbb
sub
xchg
lock
cmpsb
push
inc
sub
adc
jmp
inc
cmpsl
std
sub
lcall
mov
outsb
sbb
es
pop
sub
in
mov
movsl
cs
mov
sbb
cli
pop
mov
enter
or
inc
mov
jg
mov
xor
stc
and
popa
cmp
jge
xorl
xchg
pop
imull
mov
outsb
or
mov
sub
jg
mov
arpl
mov
js
gs
xchg
out
push
cmp
mov
adc
cmp
sub
adc
jg
sub
les
fcoms
outsb
nop
mov
ds
je
cmp
push
jno
mov
adc
outsb
into
xchg
mov
jbe
loope
jmp
dec
out
dec
mov
push
pop
jo
aam
xchg
fidivs
mov
xor
fidivs
inc
cmp
add
dec
stos
inc
xor
sbb
dec
fdivp
pop
push
popa
sbb
inc
xchg
aaa
mov
xchg
lret
add
icebp
push
out
aas
call
pop
enter
test
stc
shr
dec
pop
xor
sbb
movsl
or
mov
movsl
lcall
add
add
jne
mov
and
scas
outsb
push
loope
scas
fidivl
inc
or
xor
cmpsb
cli
cmp
insb
mov
in
enter
mov
dec
ret
sti
xor
fninit
sub
jg
push
cs
aad
xchg
lock
jae
push
xor
inc
mov
and
add
pop
lds
lea
ficoml
aam
shll
clc
mov
dec
jle
cmp
dec
add
movsl
adc
or
xlat
pop
bound
outsb
mov
sbbl
mov
mov
ss
ljmp
outsl
jmp
push
xchg
xor
pop
loopne
int
scas
xchg
jnp
sub
push
inc
and
jnp
xchg
les
arpl
fnstsw
jg
push
xchg
xchg
fldenv
mov
orl
sub
aad
ret
pop
ljmp
cmp
adc
or
insb
mov
aas
jle
adc
popa
out
js
push
faddl
fdivs
ret
out
mov
sbb
xchg
dec
sahf
cs
cmpsb
dec
sbb
jbe
addps
cmp
out
and
pushl
jnp
pop
repz
aaa
nop
shrb
xchg
mov
movsl
sbb
das
ja
in
rcll
fiaddl
sub
jl
int
inc
cmpsb
xchg
mov
and
adc
jp
pop
outsb
aam
dec
in
xchg
in
adc
cs
mov
sbb
repz
es
jb
and
testb
xchg
dec
repz
iret
test
sahf
cmpsb
mov
fs
mov
call
aam
setge
popf
scas
xchg
cmp
adc
xchg
lds
push
sarl
call
inc
xor
and
fistpll
jnp
and
in
addl
mov
xchg
adc
ficompl
xchg
dec
data16
cmp
sbb
lds
pop
cmp
xlat
incl
push
or
sbb
jno
cltd
cmp
pop
sbb
lods
or
dec
test
mov
mov
inc
fcoms
mov
or
bound
fidivrs
mov
ss
cmp
popf
ljmp
js
lods
xchg
adc
push
mov
jge
adc
xchg
ljmp
xor
cmp
or
pop
jg
push
xor
in
jb
loop
push
or
mov
in
dec
enter
ljmp
xchg
rclb
adc
and
pop
push
repnz
cli
stos
int3
push
or
scas
bound
mov
aaa
add
dec
cmp
jecxz
scas
mov
leave
test
lret
jae
pusha
leave
icebp
and
fnsave
je
cltd
or
in
adc
les
in
or
bound
or
out
push
and
push
pop
stos
pop
mov
xorb
popa
mov
lods
jg
std
push
loopne
mov
adc
imul
xchg
add
fmul
into
orb
data16
jp
lea
cli
add
leave
mov
in
addb
sbb
cld
pop
fidivrl
fcmovnbe
push
add
cs
in
xor
xchg
adc
dec
orl
inc
dec
cmc
sbb
in
stc
push
jp
pop
xchg
mov
and
fmuls
loop
movb
ja
icebp
and
aam
mov
lcall
mov
jge
insl
ja
dec
lods
and
loope
shrb
and
cs
pop
cmp
mov
ret
add
jecxz
loopne
pop
outsb
jne
pop
push
adc
xor
inc
add
cmpsb
add
push
es
jno
pop
jb
sti
dec
mov
jge
mov
hlt
popa
adc
dec
outsl
dec
ljmp
adc
ret
jae
sub
nop
mov
mov
mov
pusha
mov
xor
out
xchg
cmp
push
lret
imul
xor
push
inc
js
sbb
dec
aad
cs
pop
sbb
dec
inc
leave
scas
sbb
add
fimull
mov
sti
inc
jnp
xlat
imul
fisubrl
and
in
bound
or
sub
mov
mov
pop
outsb
cmp
lret
xor
inc
jns
cmpsb
int
scas
push
mov
mov
loopne
movsl
dec
fldl
sbb
or
add
pusha
or
addr16
scas
scas
les
lods
pop
add
add
in
jecxz
popf
bound
cmp
loop
movsb
push
inc
in
pop
mov
test
clc
mov
sub
lea
and
pop
movsb
mov
shll
inc
and
dec
lods
shl
xor
fcomps
jb
aaa
dec
call
inc
cmovne
mov
mov
mov
mov
mov
lcall
mov
xlat
mov
xchg
repnz
inc
sbb
push
stos
inc
inc
pop
xor
outsb
jmp
push
mov
pop
js
lahf
les
mov
movsb
pop
dec
sbb
cmc
aas
aas
sbb
jnp
adc
je
int
xor
idiv
mov
mov
cltd
push
lea
sub
mov
scas
dec
xor
pop
popf
inc
jmp
iret
push
in
mov
sbb
jb
adc
test
add
adc
fsubrs
adc
jbe
pop
jne
sbb
xchg
mov
loope
nop
jns
inc
test
test
cwtl
adc
stos
jge
push
jb
in
arpl
jns
lcall
and
or
inc
pushf
add
pop
shlb
ret
add
aam
int3
mov
mov
mov
cltd
cmp
xor
or
and
mov
mov
and
in
insb
jecxz
std
push
js
mov
inc
jae
sub
mov
hlt
out
imul
test
sarl
sub
push
push
mov
das
jo
or
fs
leave
xchg
push
cs
nop
in
jge
fimull
and
inc
mov
jno
roll
fcomp
jne
xor
mov
jg
hlt
aaa
xchg
stos
lods
mov
scas
xor
pop
fisubrs
dec
in
loop
pop
mov
cmp
les
repnz
and
jo
ret
or
and
push
fmulp
xchg
fmull
pop
xor
pop
mov
mov
sbb
xchg
pop
in
imul
call
cmp
arpl
loop
mov
push
daa
mov
scas
mov
inc
sahf
inc
fadd
repnz
or
jle
adc
xchg
and
test
pop
xor
movsl
les
push
aad
lock
test
jge
pop
fcmove
inc
jno
lods
pop
int
out
adc
out
imul
fbstp
or
fdivl
xchg
or
push
add
xlat
sub
repz
push
fistpl
sbb
jno
xchg
pop
popa
test
js
int
mov
rolb
test
aaa
cltd
xor
or
mov
mov
ss
inc
out
and
aaa
push
push
fcmovnu
aad
insl
fldenv
inc
and
gs
or
add
jp
movsl
lods
outsb
mov
mov
test
enter
out
enter
jno
inc
dec
ja
dec
or
mov
pop
jno
shl
dec
call
mov
call
xor
dec
adc
mov
adc
and
cmp
popa
addl
pop
std
movsb
std
sti
inc
cltd
mov
in
mov
xchg
mov
lcall
ja
scas
mov
xchg
insb
and
adc
dec
lock
out
cmp
lcall
dec
and
lcall
or
lcall
popf
in
push
jmp
mov
jnp
sbb
jl
push
add
jae
out
push
lock
add
jg
sbb
fiaddl
adc
cli
in
and
add
dec
jne
xor
or
nop
push
sbb
push
dec
cli
lcall
jmp
inc
mov
xchg
inc
xlat
lea
mov
ja
mov
ljmp
add
sbb
sbb
inc
testl
and
push
push
or
aam
rep
andb
in
jo
lcall
and
push
add
or
incl
mov
lahf
scas
cld
arpl
aas
push
mov
ret
mov
out
sbb
fdivl
push
pushf
cmc
cmp
xchg
dec
jg
jns
cmpsl
test
inc
xchg
inc
pop
pop
aaa
mov
xchg
dec
cmpsb
dec
bound
arpl
sbb
out
outsl
xchg
add
ret
lahf
inc
pushl
enter
xchg
mov
mov
inc
dec
or
adc
jl
mov
mov
xchg
lds
cmpsl
push
push
mov
incl
sti
lock
sub
sti
pop
shrb
dec
fildll
fists
cs
mov
icebp
popf
out
inc
inc
adc
rorb
mov
aam
dec
fldl2t
mov
push
fidivl
jge
cli
fs
mov
sub
das
jp
sbb
pop
and
cli
out
push
repnz
pop
aam
scas
dec
mov
lret
push
jmp
popf
push
mov
enter
pop
mov
xchg
test
lahf
mov
cs
out
ficomps
mov
and
push
not
pushf
frstor
mov
aas
icebp
xor
push
pop
int3
adc
push
movsb
addb
mov
cld
push
cmp
jmp
and
ret
aad
shlb
mov
xor
pop
mov
aam
dec
push
fmuls
int3
xor
in
sub
sub
mov
sub
mov
push
mov
sbb
jnp
jle
hlt
push
jge
and
mov
sbb
dec
outsb
jle
inc
push
or
mov
scas
das
dec
mov
mov
arpl
adc
and
stc
pop
shlb
nop
dec
daa
stos
stc
cmp
adc
mov
fiadds
pop
aad
hlt
les
ds
daa
stos
movsl
or
lods
sbb
hlt
ljmp
test
adc
das
mov
into
mov
aas
push
rolb
aaa
jmp
addb
xchg
cmp
mov
pop
inc
jne
iret
add
idivl
les
in
push
iretw
das
cld
in
adc
mov
inc
dec
or
rclb
jbe
mov
shlb
enter
fwait
cmc
aaa
dec
loop
mov
mov
leave
xchg
movsl
dec
mov
outsl
dec
xchg
xor
lock
and
clc
sahf
adc
mov
jecxz
js
mov
sub
mov
sahf
arpl
xchg
adcb
mov
and
iret
arpl
je
mov
mov
mov
mulb
push
or
cmp
mov
nop
inc
hlt
mov
aas
and
ret
arpl
mov
xor
loopne
jne
pop
imul
cmovl
jnp
jb
cmpsl
mov
cli
jns
loopne
stc
adcb
jp
add
push
cld
std
test
xor
xchg
xchg
xor
je
pop
jecxz
mov
or
cmp
pushf
rolb
inc
or
xchg
mov
xlat
mov
repnz
icebp
xchg
pop
bound
arpl
mov
cltd
mov
repnz
jmp
cmpsl
sbb
loopne
out
movsl
mov
cmp
adc
inc
in
xchg
loop
in
int
jg
mov
and
bound
popf
jmp
cmp
xchg
out
jbe
or
fiaddl
stc
mov
jmp
fstl
aaa
mov
sub
mov
jp
add
ds
push
ds
jnp
cwtl
xor
mov
xchg
mov
outsb
cmpb
pop
xlat
push
adc
and
insb
mull
pop
sbb
push
movsb
dec
fcoml
in
sbb
lods
jp
fcmovbe
push
or
pushl
les
and
adc
int
add
cmp
fisubl
aam
inc
xchg
dec
and
int
aas
add
ss
and
out
add
lret
sub
movsb
lcall
imul
mov
jnp
adc
cmc
pop
sbb
arpl
dec
xor
mov
mov
sub
leave
push
mov
leave
fcmovu
stos
push
mov
mov
push
add
sbbl
jno
imul
dec
fcmove
cwtl
cmp
jne
xchg
sub
test
push
outsl
dec
dec
cmc
adc
aaa
addl
sbb
xor
mov
add
cltd
push
mov
sbb
dec
dec
add
mov
mov
mov
jbe
cwtl
ds
pop
cmp
mov
lea
inc
cmp
pop
jecxz
push
dec
pop
push
and
popa
fwait
iret
test
jecxz
ja
les
or
sarl
or
and
ficomps
push
leave
dec
sahf
push
jge
cmp
int
add
fnstsw
lahf
rcrl
sub
mov
mov
push
stc
add
cld
sub
cmc
repz
hlt
pushf
xor
fadd
aad
fs
loop
inc
out
je
mov
insb
cmp
std
adc
adc
cli
ja
lea
xchg
xchg
sbb
add
push
jmp
inc
pop
or
cmp
pop
aam
ds
aam
addl
sub
mov
ret
mov
test
incb
sub
aaa
lahf
add
or
sbb
dec
sub
xchg
out
xlat
dec
fsubr
jo
iret
mov
dec
push
mov
cwtl
clc
subb
add
pop
jge
mov
sbb
ja
aaa
jnp
pop
out
shr
and
out
dec
pop
sbb
insl
push
jg
sbb
xor
pop
or
xchg
xor
fisttpl
in
pop
jge
adc
in
pop
cmc
popf
pop
data16
sub
mov
jmp
mov
push
or
les
pop
push
inc
mov
push
or
and
or
xchg
mov
cmp
inc
mov
mov
or
ss
popw
arpl
inc
xchg
dec
test
movsl
xor
imul
dec
mov
les
dec
xor
sub
xlat
addr16
jg
pusha
pop
shlb
lods
je
pop
ljmp
and
sti
js
loopne
stc
jbe
lret
test
stos
sub
pop
inc
clc
cmpsl
dec
fsts
pop
sbb
lret
clc
popa
fnstsw
jg
dec
cld
repz
inc
jo
cltd
pop
aas
add
mov
addl
mov
mov
aas
into
mov
icebp
aas
in
ds
loop
es
bound
push
lods
xor
imul
ret
sub
sbb
add
hlt
cltd
sub
sbb
int3
popa
pop
xchg
dec
repnz
test
mov
mov
jae
xor
or
nop
gs
push
pop
mov
jge
jecxz
testl
inc
mov
mov
fdivrp
fdivrl
jo
xchg
testb
lahf
sub
sbb
mov
insl
ss
popa
push
xchg
andl
mov
and
adc
adc
jne
ljmp
or
pusha
pop
and
dec
mov
push
dec
mov
add
sbb
stos
mov
add
jge
mov
cmp
seto
test
mov
push
mov
xchg
or
xor
adc
ret
push
inc
and
inc
sbb
decl
arpl
push
mov
je
adc
out
addl
push
adc
jns
pop
ret
int3
pop
les
cmp
outsb
repz
sti
mov
popa
fwait
dec
cmp
ljmp
sub
test
std
mov
sbb
xor
ljmp
and
and
test
int3
fs
mov
mov
aad
movsl
cmp
or
hlt
inc
mov
js
scas
inc
leave
std
mov
add
cli
iret
lock
inc
lcall
gs
dec
repz
jecxz
dec
mov
aas
jbe
hlt
adc
popa
mov
xchg
add
test
xchg
inc
std
mov
xchg
icebp
cwtl
ds
push
aad
cmp
inc
pop
push
stos
inc
cwtl
xor
and
fsubr
popa
ljmp
cmp
into
ja
inc
or
dec
sbb
xor
int
and
pop
ss
xchg
pop
inc
or
cmc
pop
jo
outsb
mov
js
mov
ror
out
sbb
mov
add
pop
in
mov
sbb
push
int
shrb
outsl
jp
mov
sbb
out
iret
in
cltd
xchg
cltd
out
into
inc
push
cmp
xor
xchg
mov
cmp
push
or
inc
add
mov
xlat
push
lock
dec
dec
fcmovnb
shll
jle
pop
fs
fstpl
cmp
cmp
sub
imul
ret
or
or
clc
add
rcrb
and
dec
mov
inc
add
pop
mov
inc
mov
shlb
es
insb
cmp
pop
mov
aam
icebp
shll
ja
rcrb
cwtl
iret
add
cmp
ljmp
and
sbbl
xchg
mov
fs
jl
arpl
hlt
insb
pop
fwait
mov
and
pushf
lds
or
icebp
push
dec
jg
mov
test
and
aas
cs
add
inc
inc
mov
gs
pop
jge
mov
sbb
push
and
mov
es
xor
mov
push
lahf
lea
mov
orb
adc
ss
adc
iret
push
cmp
inc
icebp
testl
dec
int3
jle
pop
adc
div
stos
dec
lods
addr16
sub
repz
lock
out
mov
movsb
jmp
xchg
sub
adc
aam
push
rol
in
cmpsb
aam
test
dec
mov
popf
scas
aam
cmp
cmp
cltd
iret
sarb
fs
mov
jp
xlat
mov
fists
jmp
and
jns
add
pusha
jb
shr
bound
and
and
push
clc
pop
adc
je
mov
xor
or
add
call
clc
in
pop
push
dec
push
lret
lods
jle
and
icebp
mov
jnp
mov
xor
add
repz
sub
xor
cmp
and
pop
push
fsubr
xor
jne
cli
sar
js
iret
outsb
clc
cmpsl
outsl
push
lds
xor
push
xchg
rcrb
xlat
out
push
es
cmpsb
push
xor
pushl
pop
jbe
cmpsb
cmp
repnz
mov
sbb
lds
xchg
scas
mov
or
mov
inc
mov
jae
test
out
jmp
adc
xchg
outsb
outsb
xor
xlat
movsl
sbb
dec
xchg
js
jae
lods
imul
add
mov
shrl
xor
test
mov
push
jle
shr
ja
mov
xor
int
into
adc
mov
adc
and
sub
mov
orb
jnp
add
dec
sbb
mov
stos
and
mov
add
push
hlt
js
lahf
cmp
xchg
mov
mov
push
cmpxchg
xchg
mov
inc
je
lahf
sarl
inc
push
adc
flds
mov
fdivrl
pop
mov
add
in
fwait
mov
iret
orb
push
pusha
lods
inc
into
mov
and
adc
imul
stos
orb
jo
sub
stc
fwait
cmpsl
enter
shlb
lret
push
sub
repz
outsb
xchg
mov
sbb
in
inc
mov
inc
cld
jecxz
mov
push
cli
in
mov
mov
pop
and
lods
into
jmp
pop
shrl
mov
stos
push
subl
pop
sub
or
fmulp
or
mov
in
xchg
lea
jns
xlat
ljmp
pop
sbb
aam
mov
mov
mov
fs
call
mov
rclb
sub
xor
hlt
or
hlt
lahf
add
stos
cmp
push
in
sbb
shll
imul
pop
notb
dec
test
cmp
das
xchg
cmp
jnp
sbb
mov
js
test
cmp
ljmp
xchg
jge
xor
pop
push
push
mov
rclb
aad
iret
xchg
fs
repz
dec
ret
aad
jns
movsb
mov
insl
dec
gs
sub
insb
or
ret
fnsave
ds
cltd
dec
test
test
push
adc
pop
push
fs
mov
rolb
lret
cmp
cltd
repz
jbe
gs
cmp
sbb
test
ljmp
jnp
pop
dec
ljmp
rcr
mov
adc
mov
sub
adc
jecxz
repz
mov
mov
push
daa
lahf
and
repz
xor
lea
mov
mulb
test
fwait
cmp
stos
mov
inc
jmp
mov
pusha
mov
xchg
sub
daa
cmpsb
loop
mov
mov
mov
push
outsb
test
dec
pop
sahf
mov
pop
pushf
cmp
ss
inc
adc
or
or
out
hlt
mov
or
ret
movsb
fwait
mov
dec
stc
popa
sbb
outsl
dec
mov
or
addr16
jecxz
ficompl
fcompl
in
sbb
fucom
push
fs
inc
imull
and
shll
or
inc
test
es
pusha
int
and
dec
add
push
sti
lret
and
sbb
mov
or
insb
shlb
jg
push
in
adc
sub
push
push
int
cld
in
repz
xlat
cs
sbb
mov
pop
sbb
xor
idivb
imulb
pop
xchg
enter
sbb
dec
clc
adc
ss
mov
jne
add
adc
inc
fcmove
jae
adc
in
xchg
pusha
pop
pop
scas
mov
subl
jbe
cmpsb
lret
mov
inc
aam
daa
push
xlat
xchg
jp
pop
jl
and
je
scas
fs
xchg
xchg
pushf
test
mov
stc
lret
mov
popa
jl
ret
mov
stos
fwait
cmpsb
mov
addr16
jge
jge
sbb
insb
adc
imul
insb
sti
jmp
xchg
jo
loopne
adc
or
mov
dec
add
pop
jo
insl
cli
inc
in
xor
test
and
lret
leave
add
push
iret
xor
mov
cmp
lds
ficoms
pop
and
bound
fimull
stos
hlt
shrl
int
sbb
sub
fisttpl
cmp
dec
movl
movsb
push
lcall
mov
sub
cmp
push
mov
ds
aas
and
sbb
inc
inc
popa
icebp
mov
xchg
ds
test
mov
das
je
jne
aaa
scas
xor
daa
insl
ficompl
test
jmp
cmp
enter
mov
fisttpll
popa
mov
jne
int
sbb
dec
jns
sbb
xchg
lods
sahf
cmpsb
mov
bound
cmp
mov
lret
xchg
push
aad
les
push
mov
sbb
cmpb
push
sbb
in
ret
aam
or
pop
or
in
ret
scas
jno
enter
sahf
pop
call
out
stc
inc
clc
das
mov
fisttpl
xchg
scas
sub
out
adc
add
add
out
arpl
iret
insb
adc
jl
sub
or
lcall
aad
ljmp
sub
sti
repz
mov
or
fisubs
stos
pop
push
insl
or
fneni(8087
add
push
mov
jns
ljmp
and
addr16
lods
xchg
or
sti
cmp
mov
push
in
cmp
lock
jb
popa
push
je
hlt
or
cmpsl
ds
push
sub
jne
roll
inc
movsl
bound
insl
andb
pop
mov
arpl
xchg
cltd
shl
dec
and
jmp
addr16
push
pop
xor
and
ss
or
aaa
adc
xchg
imul
jp
or
test
lret
insl
test
shll
sbb
scas
ficomps
insb
push
add
sahf
mov
xchg
out
pop
or
int
cmp
mov
adc
paddq
cmp
movsl
shlb
sti
dec
sahf
mov
or
mov
inc
cmp
adc
mov
lret
orb
xchg
rcrb
mov
push
mov
jbe
sbb
sahf
int
scas
pop
out
pop
add
dec
sbb
dec
jbe
cmp
pop
shll
mov
push
aam
das
insl
mov
sbb
out
inc
mov
push
lods
push
rol
iret
addb
sbb
sub
lahf
adc
nop
inc
mov
mov
iret
xchg
mov
aad
loope
mov
in
mov
enter
mov
lds
dec
fsts
push
sub
icebp
sbb
fs
sti
push
sub
push
in
aaa
mov
pop
loop
pop
jmp
xor
cltd
imull
ficoml
push
inc
mov
clc
fsubp
pop
sbb
arpl
je
inc
in
mov
sub
sub
pop
addr16
push
popa
add
hlt
arpl
popf
push
mov
dec
push
jge
xchg
out
jp
call
cmp
add
je
out
inc
dec
rol
push
xchg
inc
mov
adc
lock
push
push
scas
imul
cmp
decl
pop
add
lret
jmp
jno
mov
fdivl
pop
imul
mov
gs
jecxz
test
pop
ds
xchg
pop
inc
movsl
cmp
jbe
adc
xor
scas
mov
scas
les
mov
out
dec
sbb
dec
push
aas
movsl
daa
or
jno
cmpsl
les
push
dec
mov
into
push
lahf
loop
out
scas
lea
sti
mov
jg
ja
jge
fs
cs
mov
ljmp
mov
adc
incb
xor
aas
jp
mov
jp
xor
in
fiadds
add
sbb
xchg
cmp
shl
mov
jo
je
out
ret
cli
popa
imul
push
and
push
mov
mov
sar
test
fadd
cmp
insb
ret
xor
xor
imul
scas
pop
mov
mov
popa
mov
mov
dec
push
outsl
and
fisubs
mov
jg
adc
insb
fwait
sti
push
std
insl
inc
jp
xchg
push
xor
cmp
rcr
mov
cwtl
jp
cmp
pusha
test
jns
xorl
hlt
xchg
mov
negb
fldl
pop
in
xor
loope
add
fstps
pop
pop
or
jae
mov
jo
mov
sub
inc
xchg
inc
das
adc
jecxz
insb
lods
into
stc
cmpsb
int3
push
stos
movsb
lcall
mov
into
push
pop
push
ror
daa
lock
leave
mov
sbb
push
push
sti
jno
imul
mov
test
outsl
adc
cmpsl
insb
mov
aas
sub
popa
pop
xchg
fldl
xchg
mov
sahf
dec
fisubrs
mov
pop
ret
sbb
les
aad
arpl
pop
cmp
cmpb
pop
cmp
and
jns
pusha
mov
popf
rolb
inc
xor
ss
stc
adc
lods
pop
xchg
mov
out
in
in
or
cs
lcall
stos
and
cmp
js
ret
sbb
mov
test
add
adc
repnz
test
push
cmpsb
push
in
adc
sub
add
into
loop
scas
pushf
jb
xchg
xor
gs
idivb
dec
mov
dec
inc
test
sbb
int
mov
data16
stc
mov
imul
popf
das
std
sahf
adc
fstpt
sub
mov
or
out
jbe
jne
loop
or
mov
sub
xchg
pop
shll
cmp
inc
std
pop
fldcw
dec
icebp
mov
mov
mov
cmp
outsl
jnp
cmpsl
or
xlat
xor
xchg
add
cmp
mov
jo
cmp
and
mov
divl
mov
cmpsl
popf
push
das
scas
scas
leave
mov
std
push
or
xor
lea
push
cmc
adc
dec
fiadds
push
mov
imul
sbb
jb
call
leave
xor
adc
es
cmp
adc
gs
pushf
mov
dec
movl
xor
pop
dec
std
cwtl
mov
or
nop
out
push
inc
mov
int3
fnstcw
push
jae
mov
mov
mov
pop
out
mov
movsb
ror
jmp
fiadds
test
lds
push
insb
push
mov
and
cmp
xor
rcrb
gs
xchg
add
les
scas
mov
mov
xchg
jecxz
movsl
push
sub
mov
std
jecxz
andl
mov
mov
aas
or
ds
jae
mov
sub
mov
loope
movsl
clc
test
in
sahf
inc
inc
xchg
push
outsl
leave
pop
mov
jne
lahf
sub
pop
bound
xor
lcall
xchg
add
push
lock
pop
push
sarb
loopne
add
mov
fidivrl
popf
fmull
xor
shlb
out
jno
ljmp
sbb
popa
sub
mov
push
cld
push
mov
adc
push
loopne
lods
xchg
xor
idivb
xchg
push
mov
and
fsubrs
imul
mov
not
jl
imul
mov
into
mov
pushl
and
pushf
loopne
or
shll
and
pop
or
mov
addl
inc
imul
pop
xchg
adc
pusha
inc
adc
cli
fists
out
cmpsb
sbb
push
mov
inc
and
divb
imul
popa
mov
idivl
pop
addb
push
ficompl
ljmp
mov
adc
jbe
leave
into
pop
sbb
scas
push
je
dec
mov
cmpsl
je
pop
ret
jae
and
cwtl
mov
mov
sub
mov
mov
mov
jp
cmp
imul
dec
in
loopne
inc
fsubrl
inc
or
and
insb
xor
xchg
push
sub
scas
lds
std
mov
addr16
dec
pushfw
push
xchg
bound
add
mov
add
outsl
mov
push
inc
jge
xlat
inc
cmp
imul
cmp
test
xchg
dec
pop
inc
add
jl
push
int3
ss
lods
addr16
out
insb
mov
ds
ljmp
xchg
push
loop
mov
push
add
cmpsb
mov
test
sub
cli
push
cld
mov
dec
jnp
clc
jecxz
xchg
cld
mov
xor
test
out
imul
sbb
xchg
mov
leave
jecxz
lcall
push
ret
adc
xor
scas
add
jno
sbb
insl
fidivs
cmp
xor
ss
cltd
and
sub
mov
loop
bound
add
pop
xlat
push
cmp
adcb
ljmp
mov
mov
sbb
scas
popa
jo
jo
sbb
lcall
sub
fisubs
out
test
adc
adc
jecxz
cmpsb
inc
xchg
loope
jns
callw
insl
adc
outsl
scas
lahf
lods
test
mov
in
fisubrl
dec
xlat
mov
mov
dec
iret
les
jbe
stos
sub
jmp
push
icebp
in
pop
add
leave
arpl
out
popa
test
pop
xlat
or
mov
pop
mov
mov
mov
das
popf
pop
jg
mov
movsl
test
pop
pop
rol
in
pminsw
mov
ljmp
adcl
lea
cmp
fildll
aad
jae
or
fldcw
jmp
sub
popf
xlat
push
lock
fcompl
clc
sub
jnp
jp
insl
add
nop
inc
mov
cmc
shl
mov
inc
sbb
pop
xor
sub
repz
xchg
or
lods
xor
ljmp
ja
ret
add
dec
mov
ja
cmp
jbe
dec
inc
xor
rcl
xchg
in
lahf
idivl
repnz
imul
shr
dec
sahf
mov
lock
mov
jno
pop
stos
ret
sub
sbb
gs
cmp
fwait
aam
test
pusha
mov
arpl
push
push
sbb
iret
int
lea
lahf
push
sbb
icebp
leave
minps
jbe
hlt
cmp
xlat
repz
add
cmpsl
and
push
call
push
add
xchg
sahf
lahf
mov
fld1
ffree
roll
mov
or
in
iret
fcomi
jbe
fwait
testb
inc
push
fdivp
nop
jns
cs
xchg
dec
jno
lods
gs
sahf
icebp
xchg
cwtl
das
add
push
setb
js
lods
cmp
sub
push
outsl
mov
mov
clc
push
loope
lock
lret
xchg
or
mov
mov
mov
cmp
ss
xlat
leave
cmp
mov
out
rcrl
add
mov
je,pt
mov
jae
jp
imul
jo
iret
popf
xlat
das
xchg
lock
ficoml
loope
fnstenv
and
push
push
pusha
test
add
fcompl
fldcw
mov
int3
fnstcw
insl
shrl
mov
pop
insl
jbe
mov
inc
xorl
push
rcrl
inc
pusha
inc
stos
mov
lret
pop
mov
ret
cmp
ret
iret
ret
subb
xchg
xchg
daa
ret
sbb
std
mov
push
aad
mov
fistpll
pop
mov
aas
cmpsb
ja
dec
in
xlat
xlat
jg
mov
cmp
push
or
mov
lods
in
shll
xor
loop
jle
mov
push
and
inc
into
dec
in
hlt
xor
lods
addb
cltd
jmp
hlt
add
into
gs
pop
outsb
mov
adc
movsb
fdivs
lret
lods
pop
outsb
mov
cmpl
ja
cld
bound
scas
lret
mov
addl
cmp
mov
push
sub
cmc
movl
aas
mov
adc
mov
dec
mov
dec
cmp
and
push
outsb
jg
xchg
imul
dec
sub
jp
out
rcl
sub
cmp
and
push
es
pop
pusha
movsb
andb
repz
in
mov
inc
les
mov
mov
adc
pushf
ret
cwtl
iret
mov
sbb
pushf
cli
xchg
xor
dec
jo
adc
aad
fsubrs
test
aam
pop
movsl
jmp
xor
ja
pop
mov
mov
lods
data16
lds
call
push
aas
gs
cmp
lods
pop
lock
jecxz
pop
imulb
jp
xorb
sbb
sub
mov
mov
inc
sub
pushf
out
out
dec
mov
pop
idivl
loope
shll
mov
outsl
and
mov
stc
mov
mov
imul
and
sbb
jbe
cmp
mov
sbb
call
imul
pusha
adc
jecxz
test
and
int3
adc
icebp
hlt
movsb
add
inc
pop
pop
jmp
mov
add
jno
scas
inc
fisubs
inc
push
outsb
fs
mov
ret
push
mov
mov
out
adc
sbb
jmp
add
aaa
ds
mov
add
or
scas
les
cmp
jmp
sub
jle
out
or
or
sbb
push
bound
rorb
ds
jb
loop
xor
js
push
call
out
cmp
dec
cmpsl
add
loop
adc
jmp
jne
xor
cld
loope
mov
int
je
lods
jg
fdivs
cmp
icebp
aas
xlat
mov
push
orb
push
xor
jmp
nop
dec
int
std
dec
xor
lret
sbb
inc
mov
data16
jge
xchg
sbb
ret
fdivl
roll
arpl
xor
sbbb
or
insb
add
mov
pavgb
and
stos
cmp
push
and
fidivl
jp
push
mov
jg
pusha
int
adc
mov
inc
sbb
lcall
rclb
testl
jmp
add
sarb
inc
inc
cmpsb
ficompl
mov
cltd
jp
js
jle
add
aam
gs
adc
sbb
rcl
mov
cld
push
push
cmpsl
insl
sub
push
sbb
cli
insb
stos
add
mov
mov
and
das
outsb
lret
sbb
jns
xchg
xchg
in
add
mov
cld
jmp
cs
loop
or
adc
and
in
adc
movsl
jmp
mov
xchg
xor
mov
or
test
mov
jmp
movsl
test
cmpsl
fwait
add
es
mov
int
cmpsl
mov
mov
shlb
jne
insb
push
sub
cmp
cmp
sub
sbb
rorl
test
or
push
fwait
cmp
sbb
insb
adc
fwait
inc
pop
jmp
xchg
pop
pop
mov
dec
sbb
adc
cmpsl
push
subl
in
stc
in
ss
int3
addr16
push
adc
dec
add
push
popf
lods
movsb
shrl
jge
push
aam
pop
ds
lahf
mov
dec
add
dec
cli
cmc
enter
in
popa
mov
and
push
fldl
jp
stos
inc
xor
mov
cs
jl
cmp
inc
bound
or
test
scas
int3
sbb
mov
mov
lret
cmpsb
dec
shr
ret
push
inc
push
data16
push
mov
cmp
jl
pusha
push
dec
sarb
fs
jbe
cmp
push
and
repz
insl
xor
mov
sbb
mov
ds
in
pushf
jno
add
pop
cwtl
inc
enter
lds
mov
mov
lahf
test
into
pusha
xor
or
lock
pop
sar
or
lret
fdivs
andb
mov
hlt
and
ljmp
push
and
std
fcoml
and
shrb
rorl
call
out
dec
aam
jb
jecxz
pop
lret
clc
jl
pop
push
or
loop
mov
mov
add
pusha
lods
mov
ljmp
pop
xchg
sahf
aaa
je
sub
cmpsb
stos
cld
mov
dec
jnp
clc
push
and
jae
mov
push
xchg
test
inc
sbb
cmp
loop
out
adc
ret
bound
aas
jae
ss
ljmp
test
pop
mov
ds
and
jne
xor
js
jecxz
fstps
mov
lret
xor
adc
lret
jae
aaa
fwait
in
push
fwait
mov
sub
dec
loope
add
mov
outsl
mov
addb
ja
add
mov
stos
dec
and
adc
lds
cltd
mov
nop
aad
sbb
movl
ja
ds
out
ljmp
int3
imul
adc
add
jbe
int3
inc
into
shrl
test
inc
das
mov
lahf
pop
jp
adc
or
jbe
cmp
movsb
push
es
ja
push
jb
out
mov
push
sub
movsb
loope
roll
jbe
stos
fs
pop
scas
cwtl
js
pop
inc
and
inc
pop
aam
inc
sbb
rcl
jae
les
add
ret
pop
sub
inc
hlt
pusha
lahf
pop
xor
lds
inc
dec
or
and
inc
pop
push
test
xchg
sete
in
pushf
int3
rorl
cwtl
xchg
ds
popa
std
repnz
es
pushf
mov
outsb
and
int3
dec
mov
std
push
mov
ror
aaa
or
mov
xchg
fildll
daa
in
mov
loopne
mov
sbb
pop
mov
and
scas
inc
ljmp
in
test
pusha
sbb
scas
movsl
xor
aam
repz
outsb
jecxz
aaa
inc
divps
and
mov
movsb
pop
pop
lret
add
pop
sbb
lods
lret
xchg
icebp
mov
xlat
dec
sbb
mov
inc
sub
test
sub
mov
push
jb
lahf
sbb
inc
hlt
cmpb
xlat
std
loope
mov
mov
or
stos
orl
sub
pop
dec
jle
shl
in
push
and
gs
xchg
sub
adc
fwait
push
and
push
int
imul
xchg
mov
test
jne
sbb
mov
int3
outsl
add
call
stos
das
push
push
add
pop
in
sbb
fildl
jno
enter
jns
es
inc
adc
dec
popf
pushf
push
inc
fsubl
mov
pop
push
pushf
stc
sar
adc
rorl
cmc
fldl
icebp
fdecstp
fnop
mov
push
adcb
aad
add
push
jle
std
push
inc
js
push
imul
jne
xor
jb
fldenv
mov
cltd
mov
dec
pop
lods
jp
and
mov
and
pop
out
dec
lret
jne
insl
sub
xchg
jle
pop
xchg
lea
or
mov
pop
or
js
xchg
mov
cmpsl
and
cmp
mov
jl
sti
decl
pop
and
xchg
jp
loope
sbb
je
repnz
arpl
mov
testb
jmp
pop
or
inc
insl
pop
cmp
xchg
xchg
dec
sbb
imull
jge
mov
xchg
insb
xor
shrb
inc
cld
dec
mov
popf
cmp
repz
das
andl
inc
dec
out
xor
or
cmp
out
mov
mov
add
pop
inc
imul
xchg
cwtl
pop
adc
xor
in
jns
lret
imul
out
flds
shr
sub
push
jne
push
sahf
jne
mov
movsb
enter
pop
add
pushf
sub
out
sub
sub
in
sbb
lea
xchg
fstl
repz
rcl
shll
imul
jae
arpl
dec
ljmp
scas
sub
push
test
xor
add
jle
xlat
enter
ret
jecxz
xchg
ds
inc
jae
jo
loope
dec
mov
push
xchg
xchg
insl
pop
inc
cwtl
mov
shll
add
and
shrl
jns
sub
movsb
sub
int3
mov
mov
add
inc
inc
push
sbb
or
inc
in
inc
sub
xor
div
pop
pop
pusha
jp
js
xchg
pop
or
call
push
adc
leave
push
pop
data16
mov
loop
xor
leavew
loope
fcom
in
fsub
fistpll
clc
xchg
stc
xchg
cmp
xor
pop
xchg
fstpt
inc
adc
out
popf
sub
sub
jb
adcl
out
dec
movsl
cmpl
jmp
sub
push
mov
insl
dec
scas
cld
mov
ret
xchg
dec
cmp
mov
icebp
xorl
repz
add
data16
jo
adc
jl
std
jae
pop
xor
mov
ja
or
inc
leave
in
inc
and
aas
jmp
in
stos
xchg
fstpt
sbb
mov
or
adc
push
lods
jp
inc
cmpsl
lret
test
and
xchg
rolb
cmp
gs
ret
mov
cmp
sahf
in
jecxz
lds
fmul
cmp
testb
mov
hlt
cli
enter
dec
xor
rorb
stos
cmp
add
or
push
fadds
xchg
inc
add
je
fnstenv
fwait
jp
test
sub
ret
popf
not
mov
xor
loope
push
iret
xor
in
je
inc
inc
mov
xor
cmpsb
sub
add
scas
adc
pushw
nop
icebp
xor
cmp
dec
mov
mov
jb
mov
adc
xchg
in
leave
pusha
xor
repnz
imul
lret
sub
mov
das
out
movsb
sbb
out
out
mov
aam
inc
pop
enter
pop
mov
rolb
adc
sbb
cmpsl
jne
sub
daa
jl
test
adc
adc
jo
xor
mov
mov
in
sub
stos
lods
inc
shr
mov
call
ljmp
xor
jnp
sarl
sbb
dec
cwtl
pop
and
ret
pop
sti
mov
cwtl
lcall
data16
mov
sbb
dec
in
aad
mov
pushf
inc
fwait
sbbl
xchg
data16
mov
aas
loope
jne
cmp
in
scas
and
or
inc
imul
jge
ds
insl
pop
xchg
pop
cltd
clc
imul
mov
xor
stos
or
cmp
mov
cmpsl
cmp
pushl
mov
xchg
outsb
mov
pop
sbb
mov
or
jne
sbb
in
jmp
push
pop
mov
shl
adc
aam
inc
bound
xchg
mov
pop
jo
pushf
add
testl
xchg
adcl
lock
xchg
pop
addr16
test
jae
sub
add
sarl
push
sbb
test
stc
push
sarl
pop
call
pop
xchg
subl
popf
ljmp
mov
pop
xchg
in
stos
loope
xor
add
loopne
sar
addr16
or
out
xor
push
sbb
cwtl
inc
push
mov
and
adc
jp
dec
adc
mov
dec
repz
jle
jp
test
xchg
sti
out
jmp
and
dec
movsl
xchg
adc
push
and
mov
sub
push
jnp
lds
ficoml
les
test
sub
scas
fwait
push
lahf
clc
fildl
call
scas
pusha
imul
icebp
lods
xorl
popf
ljmp
add
jecxz
cs
loopne
mov
or
ljmp
rcll
push
push
notrack
cmpsb
jno
insb
mov
insb
cmp
filds
hlt
fldl
xchg
out
xchg
jp
iret
cmp
out
ret
imul
pop
inc
fcomps
pop
cmp
test
pop
jmp
out
pop
call
pop
test
stos
test
test
cmp
push
stc
mov
movsb
adc
xchg
xor
loopne
adc
xchg
sub
idivb
pushl
or
cmp
pop
int
stos
daa
dec
sarb
movsl
aam
xchg
sbb
lods
mov
xor
scas
push
mov
dec
aad
jae
in
add
shr
push
das
mov
and
popf
cli
imul
dec
sub
cmp
into
mov
mov
mov
adc
scas
or
addr16
push
fmuls
jns
dec
mov
and
mov
sar
fcoms
iret
shrb
cs
sub
mov
cmp
sub
daa
adc
xchg
cmp
cmp
pop
in
sti
xor
push
and
pop
stos
repnz
icebp
mov
outsb
out
jno
jl
xchg
fs
mov
ja
push
movsb
test
js
add
aas
pop
adc
je
dec
shll
jne
xor
jge
push
fs
fwait
inc
xchg
sbb
dec
int
loop
inc
aas
adc
xchg
xor
fsubrp
dec
or
xchg
ret
xor
je
and
inc
outsl
aas
mov
push
sbb
xchg
insl
testb
dec
popf
mov
adc
iret
push
mov
pop
fstps
in
js
push
jle
out
inc
scas
cli
adc
pop
push
shr
or
sbbl
cmp
or
cs
inc
jns
push
fld
lret
cmpsl
sbb
fwait
in
inc
mov
popa
pop
jge
pop
push
push
test
rcl
pop
cmp
mov
mull
jg
aas
mov
adc
pop
lcall
jmp
add
push
cltd
add
mov
shlb
mov
call
jae
int
xor
dec
pop
ret
enter
clc
mov
mov
cld
cwtl
ja
aas
xchg
inc
xor
inc
pop
dec
lcall
xor
das
adc
adc
dec
insl
push
lret
pop
ret
out
aam
xchg
dec
outsb
fcmovne
sbb
imul
inc
or
div
cmp
inc
adc
inc
jbe
lock
hlt
sti
and
dec
shr
scas
popl
mov
xchg
mov
nop
pop
jmp
jmp
pop
popa
inc
data16
sbb
pop
out
ret
stc
inc
xor
push
push
push
mov
aas
outsb
or
push
lcall
pop
leave
pusha
fidivrs
ljmp
iret
mov
sub
cmp
outsl
xor
aam
sub
cld
sbb
shr
adc
and
push
mov
jno
xor
aas
das
xor
mov
xor
jbe
mov
inc
fidivl
insb
sbb
das
xchg
out
pusha
lahf
adc
addr16
loopne,pt
rcr
dec
lods
imul
xchg
cmp
inc
je
fimull
mov
pop
mov
pop
out
sub
into
loope
push
pop
dec
xchg
in
jb
mov
ljmp
frstor
pusha
mov
cli
out
movb
aaa
pop
fwait
jmp
aam
add
xor
adcl
loopne
pop
mov
enter
mov
fiaddl
std
fldenv
xchg
inc
bound
jecxz
push
push
mov
in
xchg
lret
scas
rolb
loopne
dec
inc
fsubrp
loopne
dec
daa
fs
mov
les
inc
sub
pop
push
repz
or
inc
mov
out
cwtl
aad
sbb
adc
aam
outsl
mov
inc
dec
sbb
in
pop
je
push
cmc
jne
add
xor
test
in
inc
lds
sub
inc
mov
scas
aam
call
cs
and
int3
les
fnstsw
popf
out
xchg
orl
push
les
sti
gs
pop
test
in
into
scas
add
fsubrp
mov
inc
shll
popf
movsl
xchg
cmc
sub
mov
adc
inc
mov
inc
xlat
add
and
fisttpl
aas
push
push
arpl
fwait
call
push
adc
cmp
sbb
jae
push
push
mull
jae
push
sub
gs
jmp
or
lret
sbb
test
fdivl
dec
pusha
and
push
lahf
scas
lret
mov
xor
rorl
fidivs
push
jo
shlb
xchg
jg
adc
das
fisttpll
xchg
dec
test
xchg
sub
adc
insb
and
and
jbe
push
mov
add
adcl
inc
sub
mov
add
fldenv
dec
mov
push
push
mov
add
and
rclb
scas
push
cmpb
or
ret
inc
dec
rcrl
push
jne
imul
in
xlat
lds
cld
mov
subl
jns
ljmp
push
ljmp
sahf
jl
ds
sarl
mov
mov
ret
mov
mov
cmpsl
sti
js
push
lahf
ret
data16
push
int
ljmp
fcomps
stos
int3
insl
inc
sub
cltd
inc
stos
loop
adc
and
xlat
and
adc
inc
cmpsl
in
arpl
sbb
cmpsl
push
xchg
es
ds
mov
rcrl
xchg
fldt
adc
ja
mov
lret
jnp
xor
xchg
and
sbbb
insl
or
pop
add
mov
lret
mov
sbb
push
mov
rolb
dec
cmp
adc
xchg
inc
btr
xor
dec
addr16
ja
or
add
jne
pushf
in
fimuls
stos
mov
fsubs
out
pop
loop
sbb
test
cmp
push
push
bound
push
xchg
call
push
pop
xchg
out
ja
pusha
or
or
in
mulb
mov
sbb
icebp
inc
call
test
adc
clc
andb
sarb
rcrl
into
jl
mov
ret
test
enter
lods
pop
mov
mov
loop
sbb
enter
aad
add
inc
jns
add
jg
pop
add
sub
and
popa
repnz
jmp
lds
or
pop
imul
cltd
push
inc
push
rclb
pushf
mov
popf
sub
cld
mov
ljmp
mov
mov
xchg
fwait
aam
jle
push
jecxz
test
push
and
test
movsb
fcoml
insb
pop
cld
and
pop
test
loop
std
lods
jo
bound
or
mov
in
lcall
repnz
mov
enter
adc
daa
repz
xor
movb
mov
sub
xchg
adc
insl
scas
jnp
or
xchg
pop
lcall
lds
fimull
push
in
dec
mov
mov
aad
jp
dec
clc
adc
cwtl
dec
mov
clc
scas
pop
jecxz
mov
cmpsl
sbb
lods
mov
xor
xor
arpl
pop
jns
jl
sub
lret
jae
push
push
cld
cmpsb
add
into
scas
ljmp
mov
repnz
xor
outsb
dec
mov
test
mov
fidivs
xchg
jbe
sahf
lret
sub
std
repnz
test
xor
stos
push
sub
xchg
ljmp
add
add
outsb
or
sahf
int
je
xor
test
mov
imul
mov
aas
lret
mov
outsl
push
pop
sbb
jnp
cmp
movsb
pop
cmp
jecxz
lret
cmpb
dec
add
sar
dec
add
rcll
xchg
lods
cli
and
sub
aad
jl
dec
leave
mov
jbe
xor
and
aaa
jp
xor
mov
and
popa
ljmp
sub
lds
lcall
push
lods
dec
pop
mov
xchg
es
add
inc
insb
leave
sbb
mov
sub
cli
mov
cmpsb
pop
scas
push
iret
repz
jne
mov
push
adc
push
insl
inc
shll
popf
sti
cmp
xchg
xor
or
aam
sub
jle
inc
push
repz
xor
mov
ds
insl
lret
mov
sub
jno
sti
jmp
int3
cld
adc
leave
ljmp
cli
sbb
xor
ss
cmp
mov
pop
inc
loop
mov
popf
lahf
or
scas
cmpsb
mov
jmp
shrb
movsb
cmc
aad
cmp
cmp
mov
jno
jg
mov
cmpl
and
dec
aam
call
call
repz
js
inc
inc
inc
movsl
jmp
cs
fidivrs
cltd
imul
enter
jns
fimuls
aas
jp
ret
xor
test
rolb
mov
lds
inc
es
leave
push
xor
xor
add
mov
fidivs
jp
adc
fcomi
mov
cmp
in
negb
add
inc
js
pop
scas
or
xchg
orl
pop
je
jg
lock
repz
insl
dec
adc
xlat
js
xor
inc
cmp
push
mov
sti
lret
add
push
adc
nop
repnz
cmp
popa
nop
das
cmpsl
cmp
xchg
mov
loopne
test
sti
stos
sti
and
xor
scas
and
loopne
xchg
pop
cmc
fs
cmp
outsb
icebp
insb
bound
xchg
jge
movl
mov
push
dec
push
stos
loop
xor
outsl
int
dec
mov
sbb
jp
and
or
dec
cmp
dec
in
add
mov
data16
cmp
out
fimull
adc
lock
lcall
or
negl
mov
push
or
repz
mov
push
add
xchg
sub
or
or
jp
adc
test
pop
add
out
into
jmp
jmp
dec
clc
or
pop
and
lods
add
lea
adc
jo
cmpsb
pop
jbe
cs
sub
scas
cmp
jbe
jl
add
aad
inc
cmp
mov
jl
imul
aaa
hlt
fsubr
inc
pop
cwtl
mov
pop
rcrb
xor
movsb
or
mov
ljmp
adc
adc
imul
push
adc
cmpb
js
scas
jg
dec
in
imul
mov
outsb
cmp
je
mov
mov
testb
push
js
pop
fidivrl
out
out
addr16
faddl
adc
in
shl
mov
adcb
xor
xchg
test
aam
fwait
mov
daa
adc
mov
pop
mov
sub
jg
inc
sbb
cmc
pushf
outsl
pop
out
outsl
lods
out
std
popa
mov
mov
xchg
cmpsl
adc
pop
xchg
sqrtps
jbe
sbb
rcrb
sub
push
jle
jbe
dec
push
sbb
pushf
aam
fcmovne
dec
mov
aaa
inc
or
or
stos
out
sbb
arpl
inc
push
jmp
cmpsl
mov
add
add
mov
mull
jb
and
mov
inc
push
pushf
or
fcmovnbe
dec
mov
dec
mov
ret
or
cwtl
jae
mov
cmp
add
int3
rorb
cmpsl
add
out
push
lds
pop
inc
dec
sti
sub
jecxz
cmp
nop
sbb
inc
lret
dec
jmp
push
inc
lods
cld
retw
sub
ja
mov
mov
push
cs
mov
adc
fistps
push
sub
jg
mov
aas
fistps
sbb
or
push
adc
repz
loop
xlat
cmp
add
dec
jno
and
arpl
jno
jle
xchg
cmc
jo
cli
fwait
jae
out
gs
jle
repz
insl
mov
add
ds
fwait
adc
mov
leave
lods
sub
push
aam
jp
orl
jg
cmc
pop
push
or
adc
xchg
lds
push
push
and
push
xlat
bndstx
loop
xchg
ror
aam
jb
out
dec
xchg
in
xor
sbb
cmp
ffree
push
mov
push
lods
push
leave
fiaddl
dec
cmpsl
aaa
sahf
xor
sbb
scas
int
repnz
out
push
aas
or
push
dec
into
repnz
popf
mov
insl
fisubrs
add
cmp
andl
or
fsubrl
push
daa
mov
dec
jns
or
cmp
add
fwait
mov
arpl
mov
xchg
cli
pop
pop
add
out
lea
mov
push
xchg
insb
xchg
out
jbe
push
push
sarb
fnsave
mov
dec
sbb
push
push
adc
mov
jmp
imulb
cmpb
rol
add
movsb
adc
aaa
mov
jb
aad
xchg
ljmp
mov
add
inc
ss
sbb
sub
mov
mov
or
cmpsl
push
xchg
cmp
cld
sbb
add
popf
xchg
imul
in
andl
xchg
cmp
sbb
into
mov
push
sub
jl
test
mov
dec
or
inc
sbb
pop
jge
pop
imul
ret
fs
fimull
inc
push
orb
pop
mov
idivb
das
dec
sbb
xor
pusha
sahf
push
lods
adc
and
mov
mov
adc
xor
inc
rcrb
xchg
lds
stos
mov
jp
js
inc
mov
cmp
mov
inc
movsl
pop
xor
inc
push
mov
sbb
push
imul
mov
and
push
add
leave
in
fbstp
scas
gs
xchg
sahf
jo
cmpsb
cmp
adc
sub
and
mov
xchg
aam
and
cmpsl
imul
push
js
push
xchg
add
mov
clc
push
daa
xor
test
daa
insb
loope
repnz
pop
add
leave
outsb
cmp
mov
aas
add
push
sub
leave
or
loop
in
mov
and
pushl
sbb
mov
pop
gs
fs
inc
gs
addl
movsb
cwtl
je
cmp
aas
inc
dec
insb
push
jg
nop
movsl
pop
adc
push
add
test
icebp
lret
nop
cmp
pop
pop
or
stos
jae
daa
js
adc
loope
das
xor
subl
or
pop
cmp
mov
addl
or
xchg
adc
in
adc
fs
out
stos
negl
mov
cltd
daa
dec
jne
push
rclb
rcrl
cwtl
lret
inc
movsl
or
in
dec
mov
push
leavew
adc
mov
cltd
xchg
sbb
xor
fdivl
ret
inc
cmpl
orb
jmp
mov
and
pop
pop
mov
out
sbb
ljmp
jmp
inc
pop
mov
inc
or
push
fucomip
or
ss
lret
test
inc
pusha
dec
dec
add
mov
and
stc
sub
add
pop
ljmp
je
ficompl
pushf
rorb
sar
ljmp
ret
stc
clc
aas
push
mov
mov
test
xor
mov
xchg
mov
cld
aas
pushf
cmp
bnd
ret
fsubs
xor
adc
pop
jp
mov
sbb
out
push
stos
lods
and
dec
std
mov
xchg
andb
push
mov
dec
aad
adc
out
inc
daa
dec
mov
es
adc
mov
fbstp
das
sbb
dec
jb
test
inc
jecxz
aas
add
inc
cmp
nop
lcall
clc
dec
pop
xchg
adc
enter
pop
loopne
and
mov
push
cmp
fstpl
rol
sarl
mov
imul
iret
pusha
push
push
outsb
inc
or
cmp
and
lods
mov
dec
pop
add
xor
fadds
aas
xchg
in
dec
mov
adc
rorb
cwtl
add
daa
dec
aas
int3
mov
sarb
lcall
scas
adc
mov
lds
sub
shl
fidivl
mov
sbb
xchg
cmp
lcall
mov
jle
arpl
iret
sub
daa
xchg
shll
ret
stos
leave
daa
pop
test
or
into
adc
push
xor
imul
cmpsl
loopne
adc
fmull
push
int3
mov
push
pop
fistpll
jo
or
xchg
ds
scas
ja
jo
fcmovnbe
cmp
mov
nop
mov
out
or
lcall
addr16
repnz
iret
mov
out
cmp
push
fwait
movsb
pop
inc
je
sub
ja
dec
addr16
scas
xchg
inc
out
mov
inc
mov
test
mov
push
pop
and
aaa
inc
data16
popf
mov
xor
repnz
sub
repz
repnz
jae
sarb
mov
adc
xchg
subl
jp
insb
mov
mov
or
pop
mov
loope
mov
movsl
jns
ljmp
dec
aad
mov
jg
push
push
lcall
lods
dec
push
cmpsl
adc
xchg
dec
pop
stos
cmp
mov
lea
shl
test
test
aad
push
xlat
dec
jae
adc
add
and
or
repnz
aad
movsl
insl
adc
out
mov
inc
sbb
xchg
xor
stc
lods
pop
cmp
loope
mov
out
orb
cmp
in
popa
xchg
ret
in
std
xor
add
push
inc
push
or
mov
fdivs
sub
lock
jp
inc
insb
xlat
rcl
les
shlb
xlat
imul
mov
outsb
cmp
add
test
mov
push
sub
lcall
test
imul
jecxz
sub
push
jmp
inc
icebp
test
push
lods
jns
and
test
aas
shll
jno
lret
adc
pusha
movb
pminsw
mov
stos
jns
js
or
out
mov
mov
mov
xlat
sbb
and
icebp
cmp
rcrl
in
jecxz
fsubrs
cli
js
pop
addb
xchg
loop
and
imul
xchg
push
add
add
push
movsl
fs
push
bound
pop
fs
xchg
call
testl
push
cltd
shl
cmp
xchg
cwtl
into
in
xor
ds
inc
test
sub
pop
inc
adc
std
andl
rorb
cmp
ret
cmp
ljmpw
pop
sub
dec
cwtl
dec
in
adc
enter
pop
fmul
xchg
dec
sub
popa
shll
xchg
enter
push
movsb
cwtl
pusha
mov
in
aaa
stos
mov
lret
sbbl
jmp
test
aad
imul
and
jp
push
jo
inc
push
mov
pusha
pop
jae
aas
xchg
fisubrl
loop
lcall
inc
shl
inc
mov
lods
pop
xor
sub
fdivrs
jmp
xchg
stos
mov
or
leave
idivb
imul
pop
fcomps
sarb
cmpsb
xor
je
jle
scas
adc
adc
mov
adc
or
das
aas
fcomps
arpl
adc
fnstsw
jge
into
and
jl
out
and
pop
out
scas
fwait
addr16
adc
lods
mov
jbe
jge
outsb
popf
shl
iret
in
shrb
sub
test
cmp
mov
jl
mov
out
pop
cmp
jne
push
or
xchg
cmp
mov
aad
in
leave
fs
cmpsl
jno
jmp
and
out
movsl
ljmp
sbb
sub
mov
sub
jmp
push
sbb
imul
adc
cmc
imul
movsb
mov
push
cltd
icebp
int
ljmp
loop
jl
pop
clc
xchg
fsts
sahf
xchg
add
mov
push
mov
pop
push
lret
sbb
outsl
adc
pop
mov
push
xchg
mov
adc
sbb
js
je
je
stos
repnz
lds
addr16
repnz
test
mov
scas
test
ret
sub
mov
push
add
mov
pop
cmpsb
aas
xor
shl
jno
and
xchg
xchg
push
cmpb
cs
lods
xor
bound
add
pushf
out
lret
mov
cwtl
rcrl
xor
pop
rorl
sbb
stc
sbb
sbb
jnp
in
mov
je
and
and
test
cmp
push
scas
mov
in
cmp
adc
notb
inc
lret
js
popf
and
dec
pop
jmp
adcl
lods
jmp
movsl
fmulp
cmpsl
sbb
adc
movsl
nop
fisttpl
sbb
push
mov
lock
cmpsb
stos
repz
jo
jb
mov
jae
ja
mov
jnp
divl
sbb
or
mov
cmp
in
outsb
lods
jmp
mov
jmp
mov
mov
sub
adc
mov
and
lock
lods
cmc
xlat
mov
sub
dec
mov
mov
push
push
nop
sub
inc
xchg
add
repnz
sti
cli
pop
xor
lcall
or
xchg
cmp
add
fwait
push
loop
gs
xchg
cmpb
out
mov
test
or
out
rorb
lahf
push
ret
test
jge
imul
mov
adc
pop
inc
mov
sbb
add
pop
and
aaa
and
jo
daa
int3
push
mov
xor
push
jns
pusha
hlt
jmp
fcmove
mov
xchg
movsb
adc
adc
and
testl
ret
movsl
decb
imul
pop
push
pop
sub
push
fstps
scas
inc
mov
jbe
jge
push
loopne
repz
sti
lods
cmp
lods
pop
adc
add
mov
or
fidivs
xor
mov
add
fs
or
out
push
mov
push
inc
ja
ss
rcll
xor
stos
inc
daa
inc
test
iret
xchg
lods
jbe
adc
jecxz
mov
dec
xchg
adc
sbbl
cmp
push
adc
adc
lret
rcl
or
xor
imul
and
inc
xor
xchg
xchg
lock
push
cmc
sub
xor
jl
iret
ja
pusha
in
roll
int
inc
or
arpl
mov
mov
or
sti
xchg
mov
addr16
inc
mov
xchg
cmp
nop
fisubs
add
adcl
subb
jge
inc
call
mov
inc
ds
pop
outsb
cmp
push
push
or
notb
jmp
dec
mov
adc
jno
pushf
push
jecxz
bound
popf
adc
cmp
test
pop
js
cmp
shll
push
out
jne
cli
ret
cmp
idiv
xor
mov
and
scas
movsb
jnp
bound
mov
add
push
adc
out
in
mov
mov
pop
mov
mov
stos
sub
and
push
sbb
mov
mov
popa
inc
jbe
jo
and
jmp
push
cmp
jp
jl
xor
mov
add
and
sar
loopne
xchg
aas
inc
mov
sbb
xor
cwtl
stos
rclb
add
loopne
pusha
and
push
push
cmp
mov
push
into
test
arpl
dec
lahf
mov
out
insl
lds
cs
cli
inc
pop
int
sti
outsb
mov
xchg
mov
jnp
cmpl
mov
mov
jle
sarl
ds
sub
lahf
adc
test
xchg
aam
addr16
out
push
mov
fcom
sarl
add
cmp
xlat
sbb
rcr
sbb
add
orl
in
dec
sar
dec
inc
movsl
subb
daa
loope
mov
lods
add
call
fstl
shlb
mov
jmp
icebp
cmc
dec
insb
jnp
xor
pop
rolb
outsb
repnz
addr16
push
pop
idiv
jecxz
mov
add
ret
loop
in
mov
and
push
ret
aam
enter
dec
and
pop
roll
scas
call
cmp
fadds
insb
mov
in
mov
sbb
les
lret
ret
jno
es
dec
mov
ret
lods
xchg
int3
mov
rorl
fstpl
addr16
shrb
scas
cmp
adc
and
push
or
das
inc
add
mov
outsl
sti
les
adc
es
inc
lcall
and
fcoms
pusha
out
sbb
fnstenv
cmp
jnp
out
imul
cmc
js
nop
add
xchg
mov
imul
inc
fwait
mov
addr16
or
nop
push
iret
cmp
sbb
data16
jae,pt
lock
push
nop
popa
or
dec
or
movsl
das
sahf
mov
jg
js
jae
jl
stos
mov
cmp
outsl
test
cmp
arpl
adc
fwait
xchg
int3
xor
dec
enter
cld
cmp
sbbb
ds
loope
xchg
enter
addr16
mov
push
mov
cli
ss
push
xlat
cwtl
cld
sbb
sub
cli
adc
lret
imul
and
cmpsb
fcoml
bnd
mov
or
repnz
mov
div
out
mov
mov
xchg
mov
mulb
pop
mov
mov
add
pusha
mov
adc
outsb
jnp
mov
mov
push
insb
daa
sub
jno
ljmp
mov
xchg
push
or
jb
sub
xor
pushf
stos
stos
inc
jecxz
jne
sti
inc
std
and
out
mov
xor
mov
imul
popf
es
sti
or
insl
mov
sbb
adc
movsl
mov
bound
shll
cmpsl
push
das
push
adc
js
lcall
ja
or
movsl
hlt
int
nop
call
fistpl
in
repnz
sti
fnstcw
in
cmp
xchg
dec
xchg
mov
xchg
cmp
lea
movsb
movl
adc
sub
inc
dec
push
sub
push
xlat
inc
jmp
jl
rclb
xchg
mov
les
test
je
je
lock
cmp
mov
jnp
jns
shl
in
iret
xchg
sbb
das
imul
xor
jle
mov
xor
xlat
aas
or
stos
stos
mov
lret
nop
es
cs
pop
mov
leave
jb
sbb
ss
cmc
add
sahf
sbb
sub
or
test
aad
leave
mov
ret
xchg
mov
mov
and
jno
push
push
pop
cli
cmc
inc
addr16
sub
adc
mov
movsl
sbb
outsl
inc
addr16
cwtl
loop
movsl
je
daa
pop
jmp
or
ss
mov
jae
aad
in
mov
mov
repnz
mov
or
adcb
push
jbe
and
push
jmp
xchg
ja
push
xchg
pusha
pop
jecxz
sub
in
jo
fidivs
xor
or
push
push
xchg
mov
adc
stos
sbb
adc
shlb
adc
cli
pop
fbstp
adcb
or
sub
fcmovb
jg
icebp
xor
ja
jne
imul
lds
adc
cmpsl
mov
pop
std
push
adc
adc
or
adc
imull
dec
loopne
xor
mov
popa
jp
pop
out
aad
lret
dec
ret
mov
clc
sti
add
sbb
jb
adc
mov
dec
or
inc
xorl
lret
fcmovnb
das
jge
xor
mov
mov
mov
scas
dec
loope
je
cmp
scas
rorl
pop
dec
loope
xchg
cli
xlat
mov
dec
divl
nop
aam
repnz
xlat
repz
andb
mov
or
mov
sahf
inc
jno
mov
addr16
gs
cmp
xor
mov
dec
xchg
aaa
xchg
push
jb
and
stos
mov
leave
andnps
cmpb
loop
push
cmpsl
cli
ds
idivl
xor
adc
incl
mov
stos
aas
inc
icebp
and
das
fsubs
out
push
hlt
cmp
cmc
fneni(8087
jne
sub
notb
movl
mov
orb
clc
xor
mov
lret
out
in
jl
xchg
cmp
es
scas
dec
xor
xor
xchg
add
test
push
arpl
sbb
rorl
jnp
mov
imul
or
pop
loop
sub
stos
jb
jecxz
jg
cmp
insb
inc
sti
lds
sbb
mov
dec
jne
out
mov
cli
movsl
and
xor
out
push
sbb
shrb
cwtl
pop
or
aas
negb
sub
mov
dec
inc
add
repnz
push
mov
out
inc
test
or
and
imul
data16
mov
leave
les
jae
out
es
jl
iret
repnz
clc
pop
xchg
adc
pop
sbb
es
sbb
inc
mov
ret
cs
push
jb
les
insl
lahf
std
inc
push
in
cmp
cli
and
test
mov
pusha
or
addr16
or
or
dec
lret
cmp
sub
ja
inc
and
pop
shl
loopne
stos
push
call
pop
adc
add
jg
cmpsb
std
pop
cmpsl
adc
cmp
and
in
xchg
stos
pushf
arpl
mov
mov
inc
jmp
xchg
jne
sti
mov
lds
outsl
enter
ret
lods
cmp
cmc
inc
pop
sub
adc
add
sbb
shll
and
bnd
jne
lods
adc
add
push
sbb
push
popa
in
pushf
shll
inc
les
adc
sbb
adc
in
gs
xcrypt-cfb
cmpsl
movsb
icebp
cmp
js
push
das
movsl
inc
jno
fidivs
aas
or
jecxz
addr16
mov
jl
mov
mov
stc
xor
imul
out
sub
mov
fidivl
or
fisubrl
mov
sahf
adc
push
sub
xchg
jo
lds
aad
rolb
mov
gs
pop
sbb
add
mov
in
mov
cwtl
jne
inc
mov
data16
mov
mov
movsl
mov
test
xchg
div
mov
xchg
aas
stc
out
out
mov
pop
push
inc
add
out
jp
mov
push
cld
nop
adc
in
mov
add
adc
inc
jl
mov
inc
mov
push
mov
cli
push
pop
lret
shlb
sub
add
into
addr16
out
inc
lds
enter
pop
lea
adc
inc
mov
xlat
pop
mov
lods
xor
xor
pushl
incl
sbb
jb
dec
mov
or
pusha
shr
pop
popa
lret
lock
mov
insl
popl
cmpsl
adc
push
add
xor
and
ficomps
leave
push
sub
imul
hlt
push
sbb
ffree
dec
cmp
ret
sub
push
mov
pop
int
push
addr16
mov
pop
or
ja
jecxz
adc
mov
ret
adc
sub
shlb
pop
sub
movsb
test
push
fcmovnbe
lock
or
mov
sbb
mov
mov
add
sbb
insb
pop
ds
xlat
incb
xchg
sub
aam
or
xor
jg
push
nop
sbb
mov
mov
mov
dec
inc
int
loopne
lret
pop
cmp
sbb
sub
faddp
iret
push
xor
leave
cmp
xlat
mov
gs
mov
or
sub
cs
notb
xor
gs
jg
scas
dec
popl
push
add
mov
jl
mov
in
insb
dec
aas
icebp
test
std
xor
pop
fs
or
aam
iret
aas
ds
repnz
xchg
push
or
dec
and
pop
dec
pop
dec
mov
jmp
in
mov
add
push
adc
mov
push
cmp
cwtl
pop
mov
fdiv
cmp
mov
push
push
xchg
jae
pop
pop
ret
int3
or
push
repnz
push
lods
xchg
imul
jbe
loopne
and
hlt
ljmp
adc
adc
in
sbb
outsl
xchg
inc
push
int3
xchg
jb
sbb
mov
mov
call
pop
insb
dec
mov
lret
sub
push
inc
stc
loopne
jno
mov
pop
mov
int3
mov
sbb
push
sub
xor
and
push
cs
mov
insl
mov
test
mov
sbb
cmp
ss
out
adc
pop
ja
fistpl
cmp
jle
fs
loope
push
pop
nop
fmuls
cmpsb
out
icebp
jb
push
sub
shl
jb
xor
lods
cmpsb
sbb
or
aaa
xor
mov
popa
imul
dec
jno
negl
or
jo
out
les
cbtw
pop
push
cmp
inc
aad
push
pop
add
out
add
lahf
jno
and
cmp
repnz
sahf
xor
push
add
pop
inc
fisttpll
movsb
testl
jns
test
pop
int
pusha
mov
lahf
mov
and
mov
mov
dec
sub
mov
or
clc
imul
xor
data16
andl
ja
loope
xchg
das
out
in
lds
xchg
ja
sbb
pop
es
pop
xchg
mov
add
pop
and
sub
nop
ljmp
fisubl
popa
mov
mov
push
and
xchg
into
rcrb
mov
xchg
add
inc
fimuls
pop
xchg
popa
pusha
int
lods
pop
xchg
sahf
inc
decb
push
xchg
cmpsb
cmp
and
dec
leave
push
push
sub
sub
pop
xor
cwtl
into
mov
mov
mov
xchg
cltd
dec
sub
scas
cmp
sbb
mov
and
frstor
call
cmp
shlb
ret
xchg
dec
ret
movsb
jmp
ret
idivb
dec
mov
pop
or
mov
test
adc
pop
mov
mov
in
sbb
xor
ljmp
stos
pop
jnp
jno
push
jge
cmp
dec
inc
das
mov
jne
and
pop
scas
pop
cmp
test
cmc
push
push
repz
push
and
push
mov
xchg
insb
andl
mov
orl
aad
xor
ftst
mov
adc
cli
and
add
dec
fs
sub
push
sbb
jns
repz
out
fwait
sub
fnstenv
add
mov
mov
lcall
xor
jbe
xchg
push
out
and
pushf
push
inc
notb
mov
inc
adc
decl
jbe
cmp
test
sub
les
stos
gs
add
fcom
in
cmp
orb
mov
cmp
push
jb
divl
and
arpl
repnz
fnstsw
enter
stc
push
cmp
or
mov
leave
ficoml
inc
mov
sbb
pop
lret
aad
sti
mov
or
outsl
fimull
mov
inc
xchg
andb
into
xlat
arpl
mov
push
in
push
stos
adc
lods
sbb
in
cmc
jle
fwait
cmc
cmp
mov
mov
xchg
xchg
jmp
cmp
imul
push
mov
xor
movl
ss
xchg
xor
sti
cmp
jbe
push
mov
cmp
cwtl
xchg
andl
push
inc
jp
sbb
mov
cmp
ret
jmp
aas
add
lea
jae
imul
mov
hlt
shll
mov
xchg
jg
aaa
xchg
or
lea
jl
fidivrs
shlb
inc
xchg
lahf
push
cmpsw
and
add
test
inc
push
push
pop
inc
inc
jg
sub
xchg
lret
gs
testb
lahf
sbb
cmp
cmc
lcall
pop
and
lret
sub
or
lahf
lods
sub
aaa
daa
dec
or
hlt
add
aam
push
pop
xchg
rcrb
mov
sub
mov
xchg
cltd
repnz
xchg
js
incl
pop
rcr
int
inc
mov
dec
cmpsl
fldt
fcmovnbe
adc
jecxz
pop
inc
jne
push
dec
pop
scas
shlb
pushf
clc
fwait
mov
cwtl
mov
lock
into
repz
int3
pop
dec
mov
ss
or
mulb
xchg
les
cmp
pop
js
test
mov
cmpsb
add
in
cmp
inc
cmp
pop
lods
lcall
fistpll
out
adc
jl
jns
xor
shrb
aad
comiss
xchg
ds
adc
pop
or
je
fisubl
sarl
xor
test
cmpsb
and
daa
ds
sahf
inc
pop
inc
imul
lret
mov
scas
orb
inc
or
mov
mov
aaa
hlt
ret
adc
lods
test
sbb
mov
test
adc
push
adc
loop
push
dec
mov
dec
js
inc
push
add
ss
jns
pop
fs
not
daa
testb
push
and
mov
fnsave
and
dec
dec
inc
cmp
push
ret
inc
dec
push
scas
imul
loope
sti
hlt
insb
jne
addps
jo
or
leave
jecxz
in
adc
subb
add
jbe
ja
lods
je
fdivl
sub
mov
lods
dec
les
mov
or
adc
and
popa
cmp
out
fcoml
xchg
cwtl
or
sub
mov
dec
inc
jmp
aaa
loop
stos
jle
mov
xor
mov
xor
iret
dec
pop
idivb
les
lcall
jo
inc
mov
cmpsb
sbb
fucomip
mov
ret
sub
subl
cltd
stos
arpl
dec
das
cltd
xchg
dec
jg
xlat
out
push
cmp
fdiv
test
mov
jge
jmp
xchg
mov
jle
lds
push
add
cltd
xchg
ret
loopne
dec
push
cmpsb
inc
cs
lcall
ds
push
xchg
shll
sbb
xor
out
dec
xchg
cmp
cmpsl
pusha
pop
lahf
lret
pop
mov
outsl
les
icebp
lea
adc
outsb
jns
fs
push
mov
stc
jns
add
mov
das
and
xchg
sub
ja
mov
dec
mov
inc
mov
and
mov
sub
outsl
out
cwtl
cmp
sub
loopne
out
ror
shrl
jbe
cmpsb
inc
dec
mov
adc
leave
pop
mov
fwait
sub
sbb
out
ds
scas
out
add
daa
ret
shll
jne
ds
sbb
dec
mov
hlt
out
out
lods
xchg
xchg
xchg
mov
mov
push
jne
mov
ja
mov
js
jo
inc
in
mov
insl
cmp
push
cmpsb
ss
add
fcomi
jmp
out
sbb
movsb
inc
ret
sbb
push
fsubl
and
pop
or
push
je
add
adc
push
je
outsb
sti
arpl
mov
lea
xchg
insb
std
jmp
fwait
int
cltd
and
scas
ficoms
shll
jle
orl
mov
mov
pop
mov
add
hlt
jmp
sub
mov
lods
lds
rol
pop
inc
in
mov
movsb
insl
sbb
fwait
adc
shrb
int3
cs
pop
popf
es
and
pop
sbb
test
test
xchg
fwait
mov
les
xchg
xchg
data16
std
mov
popf
cmp
mov
add
imul
xlat
xor
gs
jns
or
cli
outsb
lock
xchg
adc
call
clc
sub
testb
mov
jmp
mov
push
and
fcmovnb
out
es
jmp
xor
add
scas
into
test
add
mov
adc
test
pushf
scas
cmpsb
ljmp
imul
dec
mov
xchg
inc
pushf
rcl
pop
push
and
rcll
xor
je
in
arpl
add
jl
add
mov
dec
bound
bnd
jmp
cli
in
loop
loope
jl
mov
mov
sarb
fistps
cmp
jno
mov
add
sbb
aad
cli
popa
inc
mov
or
pop
insb
int3
inc
push
ret
and
insb
test
xchg
out
push
jo
push
and
outsb
inc
cltd
aas
mov
cmp
xchg
sbb
adc
push
push
or
es
fsubrl
xchg
cmp
mov
sbb
and
cmp
pop
jl
inc
fbstp
int
or
arpl
outsb
mov
jmp
and
cld
adc
adc
ja
mov
add
fs
imul
filds
test
inc
int
add
cwtl
das
cmc
mul
data16
or
sub
jecxz
jmp
lock
mov
mov
and
pop
sbb
xchg
push
dec
stc
cmp
mov
enter
mov
sbb
jbe
inc
mov
push
push
cmp
push
icebp
cmpsl
sbb
pushf
dec
testl
add
call
xor
xchg
popf
or
mov
jle
mov
inc
test
pusha
lea
sti
cltd
push
sub
lea
add
mov
xorb
jo
stc
insb
mov
xlat
or
mov
xorl
mov
fstpt
es
inc
sahf
jnp
adcb
inc
sbb
cmpl
lods
cli
push
pop
pop
xor
jp
push
hlt
push
mov
out
jnp
lods
adc
aad
aaa
hlt
decl
pop
insb
out
ret
aaa
mov
fstl
add
negl
fs
mov
ss
mov
or
js
in
mov
fadds
sbb
push
dec
and
xchg
mov
mov
incl
cs
repz
pop
sbb
mov
xchg
mov
clc
fs
movsl
push
inc
xchg
mov
aam
mov
nop
mov
leave
pushf
cmp
test
adc
popf
dec
lcall
leave
fisubrs
jnp
idivb
xchg
and
scas
inc
cmp
dec
mov
lods
push
pop
das
fs
shll
fisttps
loopne
dec
xchg
cld
icebp
leave
daa
cmpsl
push
inc
xchg
je
mov
mov
sub
inc
lods
aam
mov
mov
jne
xor
cmp
cs
lea
imull
jns
neg
out
mov
icebp
push
movsl
ficoms
cmc
je
lcall
pop
out
push
fsubrp
dec
movsb
stos
into
dec
push
ja
xchg
pop
lea
xchg
bound
imul
pop
ja
pop
out
jbe
cmc
mov
mov
loop
lcall
popa
jo
sbb
ja
nop
rclb
loope
stos
xlat
add
inc
lods
int
mov
movsl
out
xchg
cmp
jne
out
aad
inc
fmuls
daa
mov
scas
lcall
stos
mov
cmp
push
jl
cmp
mov
inc
mov
js
sub
cli
jbe
inc
aaa
pop
cmp
test
rcr
loope
movl
aas
add
sarb
sti
dec
and
adc
fwait
lods
pop
jmp
ficoml
adc
lahf
bnd
or
sbb
fisttpl
add
sbb
inc
pop
xchg
es
xor
jg
mov
or
or
jge
adc
test
inc
cmp
fmul
popa
movsb
push
mov
ljmp
test
mov
jo
jge
cmp
mov
xor
xchg
mov
inc
movsl
cmp
jle
adc
xchg
jno
and
mov
gs
jne
pop
js
movsl
lret
sub
mov
test
out
push
cltd
outsl
js
mov
cmp
or
and
out
loopne
dec
pop
inc
pop
cmpsb
sbbb
clc
into
xor
andb
sub
inc
push
jae
imul
cwtl
scas
lcall
outsb
ljmp
push
dec
shlb
sub
add
stc
cs
out
mov
cmpsb
in
in
ret
subb
fildll
sub
repz
mov
cmpsb
push
xchg
in
ficomps
aas
mov
out
xorl
push
and
ret
andl
mov
pop
pop
mov
mov
scas
cltd
xchg
inc
cmp
jne
dec
lcall
fstpt
stos
dec
pop
add
mov
push
and
arpl
mov
push
xchg
jo
cmc
xchg
sbb
call
pop
adc
mov
aam
dec
xchg
cmpsl
adc
jge
nop
vmovntdq
test
jb
cltd
jmp
mov
dec
jb
scas
idivl
pop
xchg
aaa
movsl
cmpb
clc
xchg
dec
mov
out
or
or
mov
mov
fwait
loope
test
fiadds
jecxz
push
clc
ss
sub
inc
add
fwait
nop
push
push
int3
xor
stc
mov
or
test
mov
cld
dec
repz
push
mov
cmpsl
sub
rol
xchg
mov
cmp
mov
faddp
push
push
imul
mov
sti
outsl
shlb
sahf
adc
xchg
xchg
and
lods
rcl
addr16
adc
sub
inc
bsr
xchg
jecxz
std
aad
aad
enterw
mov
lea
jge
testb
testl
rcrb
jg
xor
xchg
xor
lret
clc
mov
mov
das
lods
ret
jns
xor
ret
decb
fidivs
xor
fnstsw
inc
xchg
lea
loope
xchg
aas
out
push
mov
sar
lret
lcall
sbb
push
out
stos
rcrl
jge
sbb
or
shlb
out
dec
xchg
and
fmull
dec
cld
adc
mov
jmp
ljmp
mov
sarl
push
rcrb
sti
sbb
mov
pop
rclb
shll
push
xchg
stc
xor
out
nop
push
jo
test
subb
fsubl
mov
sub
xlat
jmp
sbb
cmp
push
test
xchg
push
mov
incb
xchg
xor
or
testb
jmp
jns
cmp
pop
xor
mov
adc
push
repz
or
in
aam
imul
sahf
sbb
lret
iret
sti
outsb
push
aad
out
add
sub
out
jo
cmpb
push
mov
xchg
outsl
adc
ffreep
ret
aad
mov
stos
fbstp
pop
stc
push
xchg
jo
dec
subl
sbb
sub
jg
or
fisttps
test
or
jnp
lret
or
outsb
stos
fidivrl
arpl
push
pusha
lods
inc
sarl
inc
mov
iret
jbe
dec
test
out
mov
add
sub
xor
pop
dec
insl
fdivrl
pop
aad
int3
lahf
adc
iret
xchg
sahf
lahf
insl
or
adc
ficoms
cmp
pusha
push
cmp
jg
push
sub
outsb
xchg
jne
pop
pop
mov
loopne
mov
iret
cmp
jns
hlt
jns
or
dec
adc
sarl
jae
imul
iret
mov
and
cwtl
inc
push
stos
pop
cmp
dec
jmp
ljmp
cltd
testl
sub
imul
cmp
fists
stos
cmp
jo
push
jb
xchg
sarb
sub
xchg
cmpsb
and
adc
popa
or
es
fistpl
jge
bound
das
lahf
jns
movups
sbb
push
sbb
sahf
xor
loop
mov
dec
cmp
lods
or
or
jbe
mov
call
arpl
mov
fiaddl
lock
mov
dec
insl
mov
lret
lret
adc
mov
mov
frstor
test
xor
add
pop
fidivrs
and
loop
xlat
and
mov
and
ss
xchg
fwait
dec
es
aas
inc
xchg
push
ret
je
cli
mov
pusha
fisubl
pop
pop
fstpl
pop
dec
inc
push
std
sbb
xor
push
xchg
adc
divl
push
sbb
pop
push
mov
pop
jnp
mov
iret
push
sbb
sti
ss
mov
and
push
inc
lcall
int3
out
lahf
ret
dec
lret
loop
pop
lret
pop
sbb
jmp
inc
xor
aad
and
repz
nop
mov
push
xor
xor
mov
mov
les
into
jnp
pop
push
in
out
dec
adc
bound
or
push
and
in
push
adc
scas
sub
xor
mov
xchg
arpl
mov
push
fidivs
cwtl
movsb
out
adc
aam
dec
mov
push
xchg
lret
int
aas
repz
lock
dec
push
ficompl
sub
pop
pop
jbe
loop
xchg
jae
lods
fsubp
fcmovnb
push
lcall
xor
mov
push
sub
jnp
lcall
add
ret
lahf
fildl
pop
jl
mov
xchg
or
mov
mov
inc
sbb
sub
jb
loopne
inc
cmp
dec
mov
mov
scas
loopne
lahf
repz
cltd
aas
xor
inc
call
incl
orl
or
fidivl
shrb
xchg
adc
movsl
mov
dec
mov
hlt
mov
mov
stc
mov
jo
mov
pop
pop
data16
jg
push
add
mov
cltd
cmpl
mov
push
sti
jns
das
je
adc
test
movsl
out
test
fnstsw
cmp
outsb
and
es
clc
out
xlat
adc
xchg
xchg
dec
lret
dec
pop
xchg
sti
dec
or
mov
fidivrl
sub
and
and
mov
out
mov
sub
jmp
out
out
and
orb
in
lret
clc
mov
inc
mov
jno
popf
xorb
xchg
push
scas
cld
test
in
mov
int3
mov
mov
and
sub
test
add
and
dec
inc
sub
lods
sahf
push
mov
adc
das
mov
mov
or
push
lea
and
loope
shlb
push
mov
in
push
mov
out
jns
sti
arpl
sbb
mov
es
stc
and
cmc
sub
in
iret
stos
pop
sub
out
sub
fcomi
xchg
std
dec
popf
movsl
pop
xchg
cwtl
bound
sub
jecxz
add
sub
sub
cmp
dec
mov
aaa
sarl
pop
and
mov
xchg
int3
cmp
adc
add
punpckhbw
pop
bound
dec
aad
add
dec
rclb
mov
pop
dec
lret
sti
js
rcrl
and
cmp
je
in
push
add
shll
into
adc
add
or
test
jno
push
adc
adc
jmp
aam
xchg
xor
daa
incl
cs
cwtl
or
shl
push
sbb
fbld
filds
adc
insl
sbb
mov
mov
mov
and
fs
cmp
dec
test
mov
les
sbb
inc
jbe
ja
inc
data16
pusha
pop
add
lods
pop
imul
mov
popa
push
jg
shl
dec
xor
fcompl
iret
dec
enter
and
add
pushf
mov
insb
and
jmp
inc
cld
add
rcrb
leave
sub
xor
fdivr
arpl
scas
inc
mov
es
js
xchg
imul
inc
imul
sub
xor
test
leave
inc
movsl
dec
dec
push
jge
dec
pop
aad
popf
lahf
aad
add
jns
imul
stos
and
sub
xlat
xchg
push
fnstsw
xchg
ljmp
add
cmp
cld
sub
movsl
out
data16
std
idivb
jmp
imul
xchg
enter
jge
pop
dec
or
sbb
call
repz
sti
sbb
jg
movsb
xor
int3
cmp
push
mov
inc
xor
test
daa
icebp
rcrb
mov
mov
test
test
popa
push
pop
out
add
pop
xchg
mov
push
aas
mov
aaa
dec
fwait
sar
imul
xchg
into
clc
push
cltd
inc
push
mov
and
in
fisttpll
jecxz
call
out
lahf
xor
dec
mov
xor
and
test
int
pop
test
xchg
movsl
pop
sahf
sub
jno
push
pop
movsl
xchg
jbe
mov
mov
aam
pushf
ljmp
xor
add
fistps
fnstsw
insl
dec
arpl
jle
and
outsb
sbb
cmovg
mov
mov
adc
ljmp
lret
mov
xor
adc
stos
or
aam
shl
dec
sarl
add
push
mov
push
sbb
inc
and
pop
int
xchg
add
shrb
in
xor
iret
jb
mov
jb
xchg
test
ds
jg
push
call
and
dec
cs
dec
cmpsl
insl
mov
cmp
xchg
pop
fld
cmovns
jmp
jns
push
aaa
xor
sbb
adc
fimull
cltd
push
flds
js
pop
in
sub
aaa
enter
movsl
pop
cltd
je
jmp
aaa
movsb
aad
add
cmp
sub
xchg
xor
sub
shlb
mov
add
add
jl
mov
cmpsl
mov
popf
push
add
idivb
jge
out
test
and
mov
jmp
or
xor
sub
push
jne
nop
cmp
jl
cs
aaa
pop
jmp
xchg
dec
mov
aaa
dec
notl
dec
xchg
and
lock
dec
mov
fldl2e
jg
or
loopne
pop
insl
dec
jne
aad
mov
repnz
mov
jnp
das
adc
xchg
jg
enter
adc
subb
jge
in
jg
insl
bound
dec
sbb
pop
xchg
inc
sub
sbbl
dec
pop
fisubrs
pop
movsb
jae
idivl
jae
fbld
sub
xchg
add
mov
outsb
inc
loope
sbb
xor
cmp
jbe
mov
push
pushf
mov
sbb
lret
cmp
gs
int
pusha
and
lock
mov
cmp
lcall
cltd
mov
insb
pop
adcl
aad
sbb
sti
popf
ror
inc
jmp
pop
push
mov
andl
jg
nop
int
stc
insl
cmpsl
jle
push
mov
cmp
jmp
dec
push
arpl
cwtl
and
hlt
add
int3
push
adc
clc
add
mov
add
sti
insl
push
out
repnz
shll
fidivl
xlat
add
mov
mov
inc
adc
sub
mov
add
cmp
sub
shlb
xor
das
ljmp
ja
testb
aad
sbb
cld
inc
pop
cltd
out
xchg
out
pop
cltd
pop
fucomp
push
loop
cwtl
sbb
xchg
inc
or
xlat
mov
mov
jo
fisubrs
xchg
push
cmp
out
dec
cmp
ja
dec
push
arpl
mov
inc
or
xor
cmpl
call
mov
ret
add
shl
loope
lcall
push
mov
aaa
lock
lahf
in
hlt
test
rorb
fldenv
push
mov
mov
or
xchg
fs
mov
push
pop
adc
pop
mov
push
mov
inc
push
jnp
std
test
adc
mov
mov
out
gs
mov
mov
add
lock
cmp
cmp
fs
mov
jne
repz
pop
ss
call
inc
mov
inc
sbb
subl
lret
divl
shrb
jbe
repz
arpl
and
movsb
in
push
int
jmp
mov
and
jnp
mov
lods
insb
jecxz
add
inc
push
dec
adc
fnsave
xlat
mov
push
daa
and
mov
inc
movsb
mov
leave
popf
or
mov
in
out
jns
sbb
rclb
mov
sub
push
pop
cwtl
loope
xchg
mov
adc
mov
mov
adc
xchg
dec
lcall
ds
pop
leave
ljmp
cmp
jg
jle
adc
sbb
jmp
mov
pop
jle
insl
cmp
sti
mov
mov
cmp
sub
in
js
je
sub
fucomp
leave
pop
gs
sub
push
inc
push
cli
dec
and
sub
in
iret
cmp
xchg
in
push
arpl
push
sub
jg
in
negl
in
fnsave
lds
sti
call
call
div
call
mov
dec
push
ljmp
shrb
push
das
jae
fldt
xor
xor
out
aad
and
pop
and
and
push
cmp
pop
push
into
idiv
in
aaa
xor
mov
shlb
xchg
jo
adc
jge
cmp
imul
or
ds
mulb
aas
stos
in
imul
xchg
lret
sbb
sub
xchg
mov
pop
icebp
das
xchg
jbe
sub
test
stc
int
addl
fldenv
xor
dec
in
and
dec
mov
xor
lret
out
mov
jne
les
xchg
add
or
sub
mov
jp
sub
and
lds
adc
pop
mov
add
cmc
repz
into
cmp
dec
pop
das
imul
leave
inc
mov
xchg
outsb
dec
lods
xor
fdivrp
cld
inc
pusha
mov
mov
cmp
arpl
cmpsb
sbb
fbld
addl
xor
pop
cld
leave
shrb
inc
inc
das
xchg
je
and
icebp
lods
enter
adcl
fisttps
sbb
xor
adc
xorl
or
loop
mov
test
mov
cs
pop
in
pop
jmp
mov
leave
xchg
roll
mov
adc
mov
inc
add
jp
and
push
jp
adc
xchg
stos
xchg
mov
mov
bound
mov
push
test
rclb
popf
mov
dec
xchg
mov
sbb
dec
ja
mov
jns
xlat
sbb
outsl
icebp
ror
adc
cmp
dec
scas
mov
fmull
outsl
aad
mov
das
stc
jbe
inc
jae
loop
pmulhuw
xchg
cmc
mov
mov
mov
jp
and
jns
je
dec
lea
loope
jg
mov
scas
adc
cmpsb
and
jns
lds
jbe
stc
icebp
jmp
mov
push
pushf
push
sahf
dec
fsubr
pop
xchg
mov
out
std
xor
out
add
xchg
mov
repz
icebp
mov
push
inc
das
aaa
cmpsl
pop
mov
cmp
and
add
fwait
push
loope
cmp
imul
and
sub
fdiv
popa
adc
neg
fstps
loop
enter
push
mov
mov
inc
cs
aad
dec
nop
dec
dec
imul
and
jns
add
and
repz
mov
pusha
pop
push
inc
cmp
test
mov
fwait
inc
xchg
out
in
or
roll
arpl
rcrb
pop
test
jp
xchg
pop
imul
fnsave
pushf
lret
lock
pushf
mov
mov
or
sub
lret
pop
mov
inc
lods
inc
mov
fimull
ljmp
jl
mov
jle
xchg
sub
scas
dec
xchg
adc
mov
inc
mov
ss
add
xor
icebp
xor
f2xm1
xorl
jl
idivl
aad
imul
mov
sub
push
shlb
nop
mov
ficomps
je
loopne
std
pop
inc
in
shll
pop
cld
je
sti
cmp
fnstenv
outsl
pop
mov
adc
jmp
and
in
and
sub
xor
sbb
inc
sahf
jno
shl
inc
insb
lock
jbe
ficompl
pop
xchg
cmc
test
mov
sbbb
sti
jae
jecxz
lret
inc
and
cmp
hlt
in
fidivrs
mov
insb
push
jne
call
xabort
sbbb
inc
lds
lods
and
push
pop
in
adcb
mov
push
push
clc
jb
mov
add
adc
roll
dec
pop
push
xchg
lahf
pop
stc
enter
jecxz
lret
mull
sbb
or
pop
jecxz
mov
mov
adc
mov
sarb
lret
aas
mov
sub
les
pop
adc
push
enter
in
inc
pop
ss
and
xchg
cmp
enter
xchg
push
jle
mov
jecxz
nop
pop
pop
inc
out
mov
add
test
jg
mov
xchg
rep
ret
aaa
adc
nop
cmp
ficoms
ds
movsl
mov
push
rorb
int
add
and
stc
cs
pop
call
std
push
mov
icebp
lahf
add
push
and
push
xor
shll
add
pusha
scas
pusha
popa
mov
mov
push
fs
cltd
push
jl
jbe
stos
loop
mov
and
imul
imul
ljmp
loope
and
ss
cld
gs
stos
repz
adc
dec
xor
out
lods
pop
mov
xor
sti
mov
jno
mov
data16
test
push
shl
and
or
rclb
mov
xchg
shrb
cmp
iret
xchg
fxam
out
sbb
lds
pop
add
pop
inc
cmp
ret
ja
iret
lret
jmp
mov
mov
fs
mov
pop
in
jns
repz
xor
sti
test
mov
addr16
dec
cmp
inc
xchg
inc
mov
sbb
ret
mov
outsl
int3
imul
in
gs
or
addr16
xchg
mov
and
sub
xchg
pop
lock
aad
call
popa
push
push
es
adc
cwtl
shll
xchg
test
popf
lret
movsl
jnp
pop
inc
mov
sbb
push
daa
gs
fldenv
stos
mov
dec
push
outsl
arpl
data16
lret
jno
arpl
pop
sti
mov
jbe
cmpb
xchg
mov
leave
lock
lahf
dec
sub
mov
push
mov
aas
mov
cmp
fadds
sbbl
cltd
repnz
ret
jne
add
fstpt
insb
mov
add
scas
sub
hlt
xchg
mov
movl
xchg
test
lcall
lods
cltd
jmp
gs
mov
out
xor
cmp
pop
inc
lret
sub
xorb
arpl
fwait
jbe
jb
dec
add
xor
js
stos
and
cmp
cmp
xchg
add
out
call
mov
lods
push
jmp
add
mov
push
lods
sbb
leave
dec
or
stos
pop
mov
sub
imul
repnz
addr16
lods
mov
ficoml
sahf
push
inc
testb
icebp
jge
xor
ret
outsl
xchg
inc
pushf
or
cmp
mov
insl
or
mov
ljmp
cmp
mov
lea
cmpl
insb
lds
ret
fsin
nop
xor
sub
addr16
adc
xor
stos
inc
mov
scas
xchg
ss
and
je
push
loopne
push
out
mov
jb
lods
sti
pop
xchg
sbb
ljmp
xor
sbb
push
mov
adc
shl
ljmp
addb
lods
add
dec
push
les
inc
icebp
adc
pop
jecxz
fsts
cwtl
cmp
adc
insl
push
mov
dec
mov
fwait
jp
sub
pop
jmp
cltd
jl
js
xchg
sbb
or
sahf
sub
sbb
mov
xor
pushf
jge
lods
stos
push
cld
in
xor
xchg
and
sub
outsl
lea
push
mov
sbb
gs
sarl
adc
jmp
movsb
and
sub
es
xor
or
mov
mov
cwtl
push
insl
or
rolb
rclb
inc
rcr
mov
cmp
outsl
pop
ss
rorb
sbb
fidivrl
sbb
ja
add
mov
std
xchg
shll
ror
out
bound
js
dec
lahf
stc
inc
jge
inc
cltd
call
mov
pop
cmc
jp
pop
insl
inc
cwtl
mov
daa
sub
shlb
std
scas
fs
cs
sbb
loopne
mov
xor
vmread
mov
jb
sbb
fincstp
jnp
repnz
jmp
sub
pop
pop
mov
cmp
aam
inc
mov
sub
rolb
dec
popf
ds
jb
enter
sub
repnz
jmp
ret
pop
fsubp
out
xor
mov
or
cmpsl
add
std
insl
out
ret
adc
test
popf
mov
push
dec
hlt
mov
pusha
jecxz
pushf
cld
adc
data16
dec
leave
pop
in
sbbl
insl
and
imul
sub
mov
adc
in
cmp
mov
scas
divb
mov
leave
mov
pop
sti
or
push
mov
int
lcall
pushf
xchg
cmp
dec
dec
mov
mov
adc
fadds
inc
add
and
in
mov
stos
jg
cmp
dec
mov
pusha
pushf
je
dec
mov
scas
mov
mov
shlb
clc
leave
aas
jecxz
xchg
jge
dec
xor
test
jp
mov
sahf
mov
adc
sahf
mov
js
pushf
jns
mov
repz
sub
lods
dec
xor
addr16
jge
std
xchg
in
cmp
movb
pop
out
jge
add
pop
inc
push
push
repz
popa
inc
push
out
jle
leave
pop
popf
cmp
push
mov
jmp
in
into
pop
ret
inc
in
mov
stos
sub
mov
into
mov
jbe
mov
xor
and
stos
stos
inc
out
cltd
xor
cmp
sbb
adc
add
arpl
rol
or
scas
dec
leave
xor
mov
add
repnz
mov
sbb
jecxz
outsl
int
enter
and
push
cs
pop
into
lods
test
dec
shll
pop
lds
das
cmp
gs
lcall
mov
outsb
and
mov
dec
mov
jge
test
movsb
sbb
sbb
xor
jnp
adc
hlt
or
jle
xchg
mov
sub
in
ss
outsl
std
in
jae
inc
pop
lret
adc
stc
xchg
jp
mov
push
out
outsb
std
daa
stos
push
adc
and
enter
push
pusha
adc
clc
lahf
or
loopne
test
mov
xchg
ret
jmp
dec
ljmp
jge
inc
test
sub
adcb
stos
cmpsl
adcl
adc
jne
insl
or
imul
dec
fmull
test
jp
orb
inc
sub
or
adcl
push
insb
sbb
sub
imul
loopne
leave
inc
stos
les
repz
adcb
or
add
and
movsl
ljmp
add
pop
push
rcll
outsb
iret
arpl
sbb
mov
fwait
mov
jno
xchg
xchg
stc
outsb
loop
test
push
pop
adc
sahf
sbb
orb
push
mov
in
push
mov
sbb
and
pusha
add
outsl
adc
xor
movsb
xchg
fs
jnp
mov
or
jo
pop
sbb
fistpl
dec
push
xor
mov
cmp
call
push
sti
adc
add
add
mov
fidivrl
aad
cwtl
data16
lret
cmpsl
outsb
pop
or
or
test
jmp
stc
in
iret
test
in
sub
adcb
pop
or
pusha
sub
xor
inc
into
adc
and
adc
mov
pop
gs
popa
add
adc
test
cs
out
push
add
sbb
arpl
jo
mov
sbb
xor
pusha
add
jne
mov
stos
cmpsl
adc
sarl
push
or
sub
fimull
stos
aas
clc
sahf
push
mov
push
out
test
imul
xor
iret
mov
not
fmulp
add
sti
sahf
hlt
mov
sbb
addr16
xor
mov
xchg
mov
jg
aas
push
sbb
jle
test
std
cmc
sub
xchg
dec
inc
mov
jno
pusha
and
push
cwtd
stos
incb
aam
rorl
or
pop
lea
scas
aam
xchg
sbbl
enter
push
pusha
mov
sub
xchg
mov
jle
lea
mov
mov
gs
jae
add
ja
push
pop
data16
out
mov
xchg
scas
arpl
cmp
mov
mov
xchg
fwait
xor
js
jg
orb
sbb
stc
movsl
jae
and
mov
adc
sbb
loope
in
aaa
inc
push
pusha
cmc
scas
mov
jne
call
or
ret
push
cmp
xchg
cmp
mov
add
jbe
inc
data16
fwait
jns
out
clc
cmpsb
pop
jno
iret
pop
jg
sbb
xor
in
lret
repnz
je
adc
cmp
pusha
xor
inc
mov
adc
arpl
je
mov
lods
aaa
lock
bound
shlb
mov
scas
cmpl
lret
and
pop
imul
pusha
lods
test
repnz
jb
sub
andl
jecxz
sbb
dec
enter
lods
and
mov
mov
xchg
sbb
push
and
or
xchg
and
or
test
pop
push
xchg
stos
sub
xor
inc
sbb
and
in
loope
mov
mov
or
call
pusha
shld
imul
pop
jg
adc
and
imul
std
dec
test
iret
mov
and
ja
push
call
and
repnz
mov
jb
push
shl
pop
arpl
sub
sub
lea
stos
cwtl
adc
xor
push
mov
popa
pop
and
push
dec
addr16
ds
mov
iret
ljmp
dec
pop
dec
cli
imul
mov
mov
out
pop
sbb
add
jbe
mov
loopne
int
fsubrp
aam
inc
jbe
pop
and
into
daa
lret
movsb
and
bound
aaa
xor
lea
mov
in
mov
cmp
cs
or
jle
push
fmul
andb
in
and
cltd
mov
add
int
xor
pop
pop
pusha
ror
cmp
adc
into
pop
js
jg
sahf
sbb
or
add
cmpsb
push
fsts
loop
rorb
scas
sti
adc
xchg
rcl
stos
lcall
sti
out
push
xchg
sbb
pop
push
mov
push
mov
dec
xchg
inc
je
ficoms
sub
gs
jmp
mov
add
lods
dec
cs
inc
repz
clc
mov
sub
xchg
jge
push
loopne
cmpsb
shll
cmc
ds
sub
sbbb
addb
icebp
mov
lret
out
cmp
lahf
dec
fbstp
pop
adc
icebp
add
sub
ds
jbe
mov
in
push
or
iret
cmpb
outsl
xorl
sbb
dec
mov
shl
sti
sbb
mov
lret
pushf
pop
xor
lods
dec
out
xchg
ret
xor
jp
ficompl
pop
out
in
arpl
xor
imul
iret
pop
and
inc
dec
pusha
push
add
mov
jns
leave
add
jno
pop
ss
mov
repz
fwait
leave
jg
insl
nop
push
fbstp
lret
push
cs
pop
roll
jg
mov
shr
mov
push
pop
int3
push
lods
mov
xor
out
or
call
sub
imul
imul
or
adc
dec
inc
in
pop
imul
movsl
and
daa
dec
jne
scas
xchg
cltd
pushf
add
sub
mov
jl
cltd
test
pop
sbb
dec
nop
mov
int3
cmp
xor
cmpsl
aas
ret
pop
xchg
sub
push
pop
inc
xchg
push
or
stos
cmpsb
add
and
data16
adc
jp
out
clc
jmp
popa
daa
add
negb
add
lods
in
push
repnz
push
sub
push
jns
outsl
xor
lea
popf
adc
jne
pusha
out
jno
sub
lds
xor
pop
xchg
fldcw
cmp
add
mov
and
repz
adc
xchg
sbb
jp
movsb
dec
or
aam
or
inc
in
push
pop
in
jmp
pop
ja
sbb
sbb
test
cmp
int
sti
ret
fdivrl
fistl
scas
mov
daa
push
cs
push
xchg
push
adc
inc
mov
fstpl
adc
or
and
add
pop
rolb
mov
cmp
push
or
gs
movsl
xlat
in
push
stos
jle
lahf
out
clc
push
in
push
mov
ss
cltd
and
test
pushf
cltd
icebp
and
adc
inc
cld
iret
lcall
les
imul
cld
lea
loope
xchg
xchg
xchg
sbb
mov
or
pop
inc
cmp
lods
xor
cmp
jb
addb
pop
sub
gs
adc
imul
adc
mov
cmp
testl
je
pop
cmovle
inc
ret
add
ret
iret
pop
outsl
pop
mov
outsb
sub
xchg
add
std
sbb
xchg
dec
test
stos
shr
lds
cmp
or
jns
cli
movsb
mov
jo
jmp
ret
jg
jecxz
push
sub
icebp
push
jb
pop
das
int
test
clc
jnp
lods
addr16
xor
aas
jno
ret
loop
pop
in
and
into
jo
sbb
into
jb
ja
mov
push
cmp
lahf
dec
xchg
cmpl
pop
mov
das
xchg
rcrl
roll
nop
pop
pop
cmc
stos
andl
xchg
in
push
cs
pop
out
mov
or
xchg
push
pop
push
xchg
pop
cmp
insl
adc
cmpsb
js
push
lds
or
jg
xor
xor
cli
andb
ss
test
jo
andl
inc
inc
cmp
addr16
xchg
movsl
divb
xchg
or
hlt
jmp
sub
in
enter
push
out
pushf
push
ds
and
inc
popf
sub
sub
mov
jmp
lret
xchg
ret
cltd
rclb
and
iret
test
jmp
out
adc
jns
lock
shl
xchg
jge
xor
jne
lock
imul
ret
sub
mov
xorl
xchg
pop
pusha
xor
mov
adc
cld
inc
push
repnz
xor
cmp
push
lahf
gs
lret
xor
scas
fdivl
mov
mov
cmp
out
cli
not
jns
in
push
repz
inc
fistpll
inc
adc
pop
or
xor
push
int3
lret
pop
fimull
ds
push
mov
push
push
out
push
lods
leave
mov
sub
inc
hlt
mov
add
sbb
push
mov
or
push
add
ljmp
fsubrs
lock
xchg
mov
ror
xor
mov
fcmovnb
test
or
sbb
imul
daa
adc
or
push
scas
xor
xchg
cs
xchg
jae
mov
add
lods
loopne
in
jnp
xchg
mov
cmp
jne
cld
xchg
sub
lea
lock
adc
clc
test
xor
loope
mov
xchg
jmp
fadds
inc
push
xchg
in
dec
jns
mov
ret
sub
stos
test
add
bound
xchg
push
lahf
scas
sub
aaa
jo
dec
mov
pushf
aad
pop
rclb
pushf
jno
push
fcomp
fadd
pop
mov
aam
adc
pusha
insl
jmp
pop
pusha
push
dec
or
roll
mov
sub
mov
cmp
inc
rol
pop
mov
push
std
nopl
test
mov
decb
jne
fbstp
mov
xor
mov
je
sbb
shrb
xchg
cmp
into
push
inc
and
mull
test
hlt
fsts
mov
testl
mov
push
je
insl
push
out
cmp
popa
int3
aaa
cmpsl
mov
pop
movsb
fcoms
jo
sti
or
enter
dec
add
pop
xor
push
mov
fisubs
ds
lods
repnz
aaa
js
mov
cmp
sub
test
enter
jmp
xor
ret
xchg
mov
mov
pushf
sub
pop
dec
test
loope
rol
and
nop
test
sub
arpl
push
sbb
ljmp
cs
xchg
fmull
jmp
adc
xor
fisttpll
lea
addr16
cmovg
icebp
cli
and
sahf
mov
stc
fwait
and
sbb
mov
inc
jecxz
fsubr
and
mov
mov
add
add
rcrl
cs
push
and
jo
jns
sti
mov
pop
aam
xchg
sbb
fsub
ret
adc
mov
add
out
push
stos
adc
xor
push
jae
sbb
jle
arpl
iret
rorl
rorb
dec
mov
push
dec
fsts
pushf
dec
xchg
push
lds
mov
xorps
ret
xor
jmp
lahf
lea
inc
sub
cmp
cwtl
daa
rcrl
inc
faddl
fdivl
mov
mov
cltd
pop
mov
jl
sbb
test
clc
cmpb
dec
iret
out
adc
stos
mov
and
adc
jg
nop
mov
jo
dec
imul
jl
push
in
jbe
lds
sti
loope
clc
xchg
jmp
xor
pop
ja
mov
adc
sbb
cmp
add
sbb
xchg
fdivl
mov
push
or
cmpsl
scas
xchg
pushf
mov
rcrb
out
into
fs
fcmovu
mov
std
shll
jne
rorb
sub
mov
loop
xchg
dec
push
lock
out
or
dec
xchg
dec
xchg
ret
sub
mov
in
sbb
add
xor
cmp
xor
sbb
je
add
ret
or
lahf
mov
xor
ret
jnp
push
mov
inc
jns
sbb
xor
xor
cltd
lock
decb
test
xchg
mov
push
xor
aas
jb
inc
adc
push
insl
ret
cmpsl
mov
cwtl
cmp
aad
mov
push
jbe
rorb
pushf
push
xor
in
outsb
xchg
cmp
pop
scas
aad
pop
add
lods
leave
xchg
into
adc
arpl
lock
in
test
xor
pop
cs
push
dec
fidivrs
outsb
mov
stos
cld
incl
cwtl
mov
es
es
out
daa
clc
sub
stos
lds
adc
je
aaa
insl
je
and
or
inc
fcoml
inc
lahf
stc
test
mov
xor
pop
stc
das
stos
push
mov
and
cmp
movsb
push
movb
enter
push
daa
jns
adcl
add
imul
inc
shl
mov
ss
sbb
sbb
iret
repnz
test
rclb
loope
and
or
testl
inc
dec
xchg
mov
xlat
push
cltd
jp
xor
fcomp
jb
sbb
cmp
mov
jnp
ja
mov
rcr
pusha
roll
fisttpll
iret
int3
loope
xlat
inc
xchg
test
das
mov
arpl
gs
inc
dec
push
jle
ret
mov
mov
jecxz
lret
ret
dec
cmpsb
into
std
inc
movsl
sti
dec
sbb
cmp
pop
cmp
repnz
adc
out
xor
movsb
clc
shl
cmp
pop
in
mov
fistl
dec
inc
xchg
cmp
adc
outsl
popf
jmp
jb
xorl
mov
iret
mov
cmc
add
cmovs
bound
popa
popa
pop
popf
mov
mov
daa
lods
mov
fcomps
pop
mov
adc
jne
inc
cmpsl
inc
inc
mov
jo
rolb
push
jp
testb
and
popa
push
jp
popf
lock
pop
jmp
push
pop
add
test
out
aaa
call
push
add
test
or
int3
cmp
xchg
pusha
insb
cmp
clc
pop
lret
test
aas
xchg
rcll
lret
lods
jae
popa
lea
mov
xor
fwait
inc
jp
mov
lods
fldt
ljmp
scas
pop
xchg
xchg
loope
adc
call
xchg
stos
lea
xchg
popf
mov
inc
out
stos
push
pop
inc
jb
sub
loopne
fimuls
and
xor
popa
sbb
repz
and
sub
push
sbb
movb
dec
push
mov
dec
mov
stos
pop
pushf
and
aas
aas
pop
jmp
test
out
cmpsb
sub
mov
arpl
jecxz
jbe
mov
loop
lods
adc
sbb
and
sarb
filds
dec
movsb
cmp
xor
push
inc
repz
and
add
dec
mov
pop
mov
out
stc
jecxz
arpl
xchg
mov
and
lahf
xchg
or
cmc
push
add
mov
inc
das
outsl
mov
insb
lods
adc
push
push
lock
mov
fistps
out
popf
jno
mov
clc
xlat
cltd
scas
je
inc
cmp
push
cmpsl
loopne
ljmp
jg
in
xor
movsb
loopne
int
cmc
mov
enter
mov
popf
aam
imul
jmp
loop
hlt
sub
or
lods
fcmovnb
or
jecxz
and
adc
push
inc
push
add
xor
out
gs
ret
pop
pop
lods
push
push
push
stos
add
pop
add
testl
clc
cmp
add
movsl
inc
or
gs
lahf
test
lret
pop
mov
jno
xchg
dec
sar
xchg
aad
loopne
add
mov
dec
push
mov
cmp
mov
xchg
push
push
cwtl
pop
xchg
push
lcall
repnz
fistpll
cmp
jge
lahf
pop
outsb
mov
aad
mov
jl
mov
mov
lret
andl
ja
insb
cmp
inc
fisttpll
mov
jo
dec
loopne
ljmp
addr16
lods
push
outsl
mov
mov
rorb
adc
mov
fisttpl
pop
lods
aaa
mov
jb
lahf
lret
xor
xor
psubusw
testb
pop
icebp
es
mov
mov
jl
js
aad
sub
in
mov
xchg
jo
lahf
flds
pop
je
mov
inc
pop
repnz
sti
sub
hlt
xchg
test
hlt
movsl
adc
mov
xchg
cmp
sbbb
cli
testb
jge
icebp
pop
mov
push
mull
inc
in
or
test
outsb
add
jnp
shll
fs
in
repnz
xchg
in
fmulp
jmp
js
inc
lahf
adc
or
test
fsubl
sahf
jle
xlat
fidivs
add
fnstcw
scas
test
fcmovnu
sti
push
inc
repz
mov
test
mov
push
mov
clc
xchg
insb
and
push
mov
fistl
mov
cltd
sbb
or
pushf
mov
int3
push
dec
mov
cmp
cmpsb
ja
push
mov
and
popa
inc
icebp
xchg
bound
movsb
sub
fisubs
adc
sbb
lods
jb
add
je
dec
pop
pop
js
test
lahf
ss
mov
sahf
cmp
sahf
leave
sti
cmp
icebp
pop
movsl
sub
ret
sub
or
pop
xor
iret
xchg
fnstenv
mov
dec
add
fadd
sbb
jnp
and
in
jne
ret
icebp
cmc
rorl
mov
or
push
pop
aad
aas
fdivs
les
mov
sub
clc
mov
pushf
pop
jae
xchg
xchg
rcrl
mov
push
arpl
ret
mov
iret
xchg
mov
in
hlt
adc
loop
sub
mov
clc
test
xchg
and
icebp
aam
pop
mov
cmp
add
test
cli
add
push
daa
cli
xor
adc
or
lret
push
push
loop
imull
pop
lcall
fcoml
xchg
jmp
das
out
dec
out
mov
jmp
test
ficoml
mov
iret
call
xchg
pop
insb
aas
adc
xchg
loopne
scas
pop
lock
pop
cs
add
cmp
in
cmp
xlat
test
mov
inc
xchg
sbb
mov
push
inc
mov
cmp
inc
and
cmp
add
dec
jae
pop
pop
int3
or
jno
mov
in
imul
inc
iret
daa
pop
inc
call
push
insb
shlb
pop
inc
jnp
inc
push
mov
cld
push
cmpsl
mov
pop
or
xchg
inc
push
adc
dec
pop
jecxz
subb
pushf
in
fiadds
adc
stc
add
mov
aam
pop
push
shl
neg
aaa
iret
inc
inc
push
iret
sbb
pop
push
pop
cmc
stos
in
dec
repz
popf
jae
add
inc
mov
sub
adc
inc
sbb
sbbl
adc
shlb
hlt
push
sbb
sub
mov
in
aam
js
dec
imul
xchg
or
adc
add
lret
ret
lods
negb
jg
es
jb
imul
push
fmull
iret
xchg
rolb
jo
lock
pop
out
adc
lock
pop
fwait
movsl
jo
adc
cmp
shl
jle
adc
rcr
sahf
es
xor
adc
idivl
fldenv
jecxz
adc
mov
inc
lods
or
nopl
das
push
xor
sarb
or
cmp
outsb
nop
mov
pop
cmp
sbb
jb
push
sbb
test
pusha
test
jno
lret
adc
int
push
push
jnp
shrl
xchg
andl
pop
leave
fwait
rol
adc
clc
ss
sub
push
imul
das
repz
in
inc
pop
decb
xchg
push
dec
jae
dec
mov
pop
xchg
push
cli
arpl
subl
cmpl
aam
inc
fdivrs
test
cmpsl
divl
jmp
cmp
in
rdmsr
movsb
pop
call
repnz
pop
push
mov
cld
sub
sarb
aas
and
pop
sahf
mov
cmp
xor
and
mov
and
in
fwait
das
outsl
push
lcall
shl
push
into
stc
mov
iret
movsl
pop
iret
or
shlb
fimuls
mov
mov
jg
fisubrs
imul
adc
mov
and
pop
add
jae
pop
lea
fucomip
js
bnd
outsb
xor
les
pop
mov
aad
push
addr16
jns
lea
das
push
shr
pop
xchg
mov
push
inc
enter
cmp
mov
xchg
fucom
jg
cmpsl
arpl
in
jbe
std
out
cld
cmp
cmpsb
es
cmp
add
mov
fmull
sub
mov
adc
kmovb
out
fneni(8087
xor
mov
test
and
aad
mov
xor
aad
dec
ret
xor
adc
push
bound
mov
cwtl
jl
imul
or
popa
mov
jmp
xor
sub
xor
sbb
int
dec
test
jae
dec
mov
push
jp
flds
outsl
iret
in
add
xchg
dec
mov
xchg
inc
inc
dec
fisubs
mov
ja
aas
pop
add
test
std
xlat
sbb
mov
or
pop
xlat
out
in
ret
xlat
jns
xor
cmp
dec
daa
mov
jmp
inc
jns
sub
sti
loop
loope
hlt
sarb
xchg
jae
jno
push
test
ds
adc
lods
or
and
cwtl
js
hlt
lcall
cmpsl
jp
pop
pop
outsl
and
jge
in
mov
stos
cld
popa
and
loop
add
adc
adc
int
inc
sub
push
call
push
int
fcoms
cmp
lret
and
add
test
dec
push
cwtl
movsb
sbb
std
clc
lahf
xor
movsb
popf
mov
in
push
and
push
mov
icebp
mov
or
mov
mov
mov
fisttpll
and
leave
mov
dec
push
dec
adc
mov
xchg
cld
and
and
inc
pop
shlb
mov
jmp
lds
fpatan
repnz
adc
dec
push
xchg
xchg
fldcw
xlat
frstor
daa
lcall
fsubrl
and
mov
push
ss
jae
jns
das
in
pop
push
icebp
xor
xor
push
push
cld
xor
clc
push
test
xchg
sub
mov
mov
cmp
popf
and
int3
mov
cmp
aam
push
in
or
inc
mov
xor
mov
cs
data16
sub
jl
xor
mov
inc
pop
popf
lcall
sub
stos
test
push
xchg
sub
jge
add
push
lret
mov
fimull
adc
adc
push
out
jmp
sbbl
imul
cmc
fxch
jae
cmp
xor
pop
ret
sub
push
jmp
cmp
add
pop
xchg
cmpsl
fidivrl
jmp
mov
scas
arpl
push
lds
stos
cmp
pop
xchg
cmp
test
pop
popf
inc
mov
cs
cmp
add
xchg
scas
cmpsb
push
movsb
aaa
std
mov
fidivrs
mov
pop
push
and
jae
int3
pop
mov
out
mov
pop
pushf
and
cmp
out
pop
xor
pop
loope
push
icebp
adc
or
sub
lret
adc
jae
ret
ret
or
xchg
cmp
test
rcrl
addr16
aaa
push
adc
insl
out
mov
int3
test
fcoms
insb
mov
pop
pop
lods
push
or
adc
addr16
in
insl
out
inc
mov
inc
jl
mov
test
adc
es
sbb
test
std
dec
fistpll
jle
push
add
cld
xchg
inc
sbb
test
mov
inc
sub
push
push
mov
sub
subl
pop
jmp
cmp
fstpt
inc
pop
jl
mov
add
sbb
imul
shld
jl
sub
sub
cmp
js
and
das
add
sysenter
sub
sub
enter
mov
stos
dec
lahf
jb
pop
mov
addr16
mov
mov
xor
add
sbb
scas
or
or
add
ja
imul
and
loop
out
clc
in
notl
cli
cmpsb
imul
orb
add
cmp
adc
insb
in
es
loopne
movsb
push
into
xor
loope
jecxz
jb,pt
or
adc
fnstenv
int3
fildll
shlb
ljmp
std
ret
xchg
jne
loopne
aaa
insl
and
pop
push
xchg
sub
test
int3
cmp
or
xlat
adc
dec
push
popf
mov
subb
fdivrs
push
int
sarb
orl
mov
inc
stos
pop
xchg
fistl
mov
sbb
cmp
pop
sbb
mov
xchg
movsb
ret
pop
dec
pop
xor
sbb
sbbb
dec
lods
mov
in
mov
leave
xchg
addr16
and
push
inc
adc
push
xlat
jno
hlt
mov
sub
mov
xchg
and
popf
test
mov
fbstp
shlb
cs
mov
fldt
cmp
push
xchg
inc
mov
dec
fisttpll
cwtl
ret
pop
jg
mov
jns
lock
test
sbb
pop
int
pop
mov
sbb
xchg
subb
inc
cmp
pop
add
add
cmpsl
pop
and
jle,pt
repz
leave
fcompl
lcall
xor
ljmp
subl
aaa
inc
push
pop
jns
mov
shl
out
icebp
lcall
adc
xchg
push
icebp
mov
ja
and
and
and
mov
dec
out
xchg
aam
xor
cmp
dec
xchg
adc
cmpsb
push
mov
fsts
jmp
ror
push
fadd
xchg
shlb
add
or
sbb
or
stos
stc
sbb
cmpsl
outsb
mov
sbb
daa
cmpsb
fs
inc
xor
pop
enter
bound
cmp
cmp
pushf
mov
push
rorb
pop
loope
mov
inc
push
dec
add
xchg
negb
lea
das
xchg
movl
in
ja
push
dec
or
shr
sti
inc
sarl
mov
cmp
outsb
shrl
nop
pop
sub
dec
xchg
push
out
test
incb
mov
inc
mov
test
dec
mov
mov
mov
jge
stos
test
or
xor
lock
push
or
in
movsb
xor
mov
hlt
cmp
outsl
and
aad
sahf
sub
push
jno
int
and
dec
dec
inc
ficompl
jae
lock
stos
jbe
and
pop
sbb
mov
push
jl
ljmp
shrl
clc
jle
mov
test
inc
add
sub
sub
ficoms
push
in
mov
add
mov
sbb
dec
ret
shlb
nop
cs
xchg
shr
aad
scas
repz
decb
mov
scas
mov
and
stos
je
js
mov
pushf
cltd
shlb
mov
dec
call
fildl
mov
frstor
stos
orb
data16
cwtl
mov
fcoms
popf
mov
xor
subl
movsb
mov
cmp
fwait
mov
ljmp
inc
popa
push
pop
clc
iret
push
xlat
jbe
movsb
lock
lods
jg
lods
leave
outsb
jmp
add
dec
xchg
xchg
sarl
mov
insb
push
mov
cmp
ficomps
sbb
je
mov
cltd
cmp
lock
dec
jns
dec
in
frstpm(287
xlat
xor
je
push
cmp
gs
outsl
or
repz
lock
js
outsb
cltd
jge
add
mov
mov
data16
add
dec
in
push
or
in
mov
lods
and
or
int3
pop
lcall
dec
mov
pop
jb
or
mov
xor
xchg
scas
inc
push
leave
out
pop
shr
xlat
jge
daa
int
clc
loope
cld
rcrl
sbb
sbb
cmpsb
pusha
lods
daa
ja
add
mov
xorb
mov
js
data16
mov
cmp
add
lods
lock
cmp
cmpsb
in
adc
mov
data16
and
insl
fcmovbe
in
fsubr
add
cmpsl
jmp
xor
sub
mov
dec
mov
stos
mov
hlt
cmp
dec
inc
test
xor
adc
dec
jns
inc
xchg
or
xor
cmp
or
sbbb
sti
sbb
mov
inc
out
pop
sarl
data16
push
mov
in
push
or
pusha
pop
push
jmp
rcr
sbb
sub
cmpsb
cmpsl
xchg
dec
daa
inc
cld
test
inc
jae,pn
push
movsb
icebp
dec
and
int
or
lds
sets
pop
push
outsl
push
into
push
insl
call
stos
push
movb
adc
lds
pop
and
repz
or
xor
push
mov
test
icebp
push
enter
and
rcrl
nop
inc
push
test
sbb
pop
lret
fs
in
sub
lcall
cmpsl
orl
loope
cs
adc
cmp
sbb
xlat
dec
adc
cmpsl
int
and
cli
pop
outsb
test
enter
add
sbb
lods
jp
movsb
pop
xchg
lock
mov
stos
xor
sbb
add
bound
push
xor
in
dec
mov
nop
mov
pop
adc
in
js
scas
jb
cmp
jg
cmp
mov
ds
cmpsl
ret
mov
les
negb
dec
or
cmp
mov
stos
bnd
mov
sub
mov
aad
mov
ds
cmp
in
stos
inc
add
ret
xchg
mov
jle
popf
sbb
cmp
movsb
add
jne
xchg
xor
inc
aad
jne
adcl
add
mov
cmc
scas
push
and
push
push
dec
nop
es
mov
leave
fildll
push
ds
push
sub
mov
imulb
jl
cld
jb
mov
pop
subl
inc
inc
sbb
mov
pop
pop
cmp
ljmp
xor
mov
mov
cmp
paddb
mov
push
icebp
sbb
sbb
das
mov
lods
lea
lods
adc
imul
je
mov
aad
xchg
testb
pop
lock
jno
mov
adc
xchg
cmp
jo
push
lea
mov
dec
mov
divl
or
mov
les
loope
sbbl
push
sbb
dec
inc
push
push
lret
fidivrl
dec
repz
jg
mov
mov
repz
std
cld
lods
cmp
outsl
mov
push
idivb
flds
jno
xchg
xor
idivl
lods
adcl
push
loop
shl
and
push
pop
sbb
add
ret
cmpsb
and
cmp
arpl
and
es
xor
scas
aad
mov
sub
xchg
dec
push
pop
pop
or
lea
lea
xor
mov
js
pop
mov
ss
das
cwtl
ret
dec
sbb
add
dec
pop
cmpl
das
aam
cld
jbe
mov
sbb
fptan
jne
push
out
stos
cmp
lock
jno
xchg
add
add
cmp
push
xchg
jecxz
xor
test
lods
adc
inc
fbstp
sub
mov
pop
xor
enter
outsb
stos
lods
and
add
repz
push
jl
jmp
mov
in
repnz
fcomi
xchg
mov
mov
jp
mov
sbb
jnp
xchg
add
pop
dec
repnz
jo
or
or
cli
cs
imul
arpl
cwtl
in
int
pop
add
sub
cmc
mov
pusha
pop
cwtl
xor
outsb
rcll
testb
lock
sbb
adc
enter
sbb
jecxz
ds
mov
sti
lock
decl
push
pushf
mov
fwait
rorb
insl
pop
mov
fucomip
adc
inc
push
lea
movsb
adc
cmpb
loopne
cwtl
adc
lods
jp
mov
or
inc
and
mov
lcall
dec
lods
add
out
arpl
cli
inc
out
sbb
xchg
dec
fadds
add
jle
nop
js
clc
push
sub
aaa
adc
test
popa
dec
in
cltd
inc
hlt
sub
lods
xchg
sbb
dec
xor
mov
in
mov
int
push
adc
lcall
pop
and
mov
push
cmp
pushf
pop
faddl
out
jo
pop
shll
mov
mov
lock
jne
fwait
loopne
xor
inc
and
push
fldl
adc
movsb
xor
mov
idivb
das
push
jne
out
adc
aaa
pusha
adc
cld
pop
ret
rorl
mov
mov
insl
dec
jmp
js
in
loope
cmpsb
dec
jg
add
push
js,pn
pop
ficompl
jnp
cmc
jle
pop
lret
adcl
or
pop
jnp
ljmp
leave
push
cmc
add
jp
stc
daa
xor
ret
mov
movsb
sar
cli
in
adc
dec
lds
scas
jno
jae
mov
and
sub
leave
test
call
iret
sbb
and
mov
mov
lds
in
leave
or
jo
loopne
dec
orb
xor
mov
outsb
leave
add
inc
nop
clc
insl
xchg
cmp
xor
repz
sub
mov
pop
cmp
mul
sti
adc
outsl
cwtl
pop
stc
pop
xchg
jge
inc
and
mov
sub
xchg
fcomip
or
loope
jb
popa
push
cmp
pusha
cmp
mov
jns
loopne
pop
xchg
mov
in
adc
pop
push
and
pusha
sbb
movsl
lods
scas
and
pop
ret
adc
inc
or
push
fcoms
add
les
nop
inc
and
lret
sub
lret
mov
adc
mov
jne
adc
adc
shlb
cmp
loope
inc
mov
jp
scas
dec
dec
pop
dec
jae
dec
and
and
lods
push
ja
loop
or
fcomps
and
je
xchg
fs
push
dec
cmpsw
fimull
sub
jecxz
cmp
pop
mov
xor
jg
imul
push
in
xor
pop
mov
sub
mov
lds
mov
adc
cmpsl
push
lahf
popa
inc
or
test
addr16
out
pusha
ljmp
adc
sti
or
add
mov
rep
icebp
and
xor
ret
popa
fdiv
lock
out
fistpll
xlat
push
lock
mov
jo
dec
and
inc
fistl
test
cld
push
mov
adc
cmp
or
jae
xchg
cmp
shll
sub
sub
mov
pop
push
cmp
fidivrl
loop
js
xchg
stos
iret
sub
mov
icebp
lret
nop
add
das
cli
mov
push
test
inc
call
gs
in
xor
xchg
xlat
divb
xchg
lods
in
fnstcw
popf
inc
mov
and
ret
and
mov
test
sub
mov
call
cwtl
and
mov
mov
cld
push
cmp
xor
and
inc
mov
scas
add
ds
jp
ret
jp
icebp
ret
push
int
xor
nop
sbb
gs
fsubs
js
adc
ror
int
push
mov
sbb
popa
stc
push
xor
cmp
lea
dec
lahf
push
adc
dec
sbb
dec
loop
jecxz
fucom
xor
pop
std
inc
fsubrs
dec
fdivrl
imul
sbb
aad
repz
dec
cmp
inc
mov
mov
xchg
mov
aaa
mov
lahf
out
inc
mov
dec
lock
push
push
mov
or
adc
push
cmp
fcoml
inc
cmp
movsl
nop
inc
and
das
out
mov
in
hlt
dec
inc
push
jl
sbb
adc
icebp
push
and
or
lcall
push
push
pop
adc
gs
imul
stos
out
out
mov
push
cmp
dec
test
nop
loope
and
adc
mov
inc
pop
add
or
pop
mov
adc
mov
pop
mov
add
and
test
inc
mov
lcall
inc
js
dec
andl
pop
mov
push
cmp
incl
adc
enter
xchg
mov
inc
lea
push
inc
sarb
mov
nop
lods
scas
mov
stc
insb
jb
xor
or
es
inc
sarl
mov
add
dec
test
cmpl
cmc
andb
mov
ja
movsl
mov
or
jl
lret
imulb
adc
push
mov
xchg
cmp
add
add
call
imul
dec
cmp
pop
jns
imul
lret
pop
mov
mov
lock
adc
aaa
xor
cs
xchg
lahf
push
push
sub
mov
mov
xchg
add
sbb
lahf
cmp
mov
push
xchg
mov
push
bound
mov
gs
mov
lock
lea
lock
int3
push
loope
jmp
pop
cli
test
mov
adc
iret
jae
jne
cli
sbb
push
jmp
jns
rorl
addr16
fwait
outsl
fcomps
cmp
and
push
sbb
lods
cwtl
stos
int3
sub
mov
rolb
and
cmp
mov
mov
push
mov
and
add
cmp
pusha
mov
mov
rcrl
mov
xchg
call
ret
inc
iret
out
in
jns
push
jecxz
push
adc
push
sub
dec
popf
pusha
mov
pop
mov
test
ficoms
add
dec
imul
lods
insb
push
xchg
cmp
stos
adc
xor
jo
jecxz
mov
andb
jne
inc
imul
in
xlat
xchg
mov
pop
inc
cmp
lcall
mov
jns
xor
sbb
popa
out
mov
and
or
movsl
imul
adc
sti
cltd
mov
sub
pop
and
mov
ss
addr16
lahf
pusha
mov
cmc
leave
jg
das
pop
add
ret
jnp
in
lcall
lea
shlb
sbb
rclb
mov
and
aam
shrl
jp
jbe
pop
pop
xchg
cmp
test
pop
add
aad
pop
dec
xorl
xchg
mov
add
mov
inc
pushf
inc
loop
scas
mov
loopne
lock
in
push
ret
add
addr16
es
pop
insb
nop
fbstp
pop
xchg
push
in
sub
push
out
lock
adc
je
mov
jae
ljmp
clc
cltd
ds
cmp
gs
inc
out
mov
pushl
mov
cli
pop
lret
adc
stos
imulb
cld
in
movhps
adc
xor
loope
xor
mov
insb
lahf
jnp
push
stc
cmp
mov
rcrl
mov
iret
call
and
inc
test
jbe
in
lahf
aam
leave
ds
out
test
xor
pop
mov
rolb
cltd
out
add
insl
fcmovnbe
adc
and
push
gs
mov
std
pop
xor
repz
lret
aaa
jne
or
pop
or
sub
popf
and
ss
loopne
cltd
xor
jle
jp
je
dec
cmp
bound
fcoms
sub
aam
out
mov
mov
aas
dec
je
scas
fdivs
sbb
call
popa
pushf
jle
xlat
movsb
in
insl
mov
cmp
mov
call
or
sub
mov
mov
cmp
fdivr
or
or
pop
push
ja
xor
lds
mov
inc
push
scas
subl
pop
jmp
mov
or
and
pop
add
stc
mov
es
enter
cs
outsl
cmp
push
iret
ret
push
lcall
pop
push
xor
movsb
push
in
sub
bound
and
xchg
loopne
xchg
maskmovq
imull
in
and
mov
adc
and
sbbl
fucom
xor
es
xorw
cmp
shl
push
mov
sub
and
adc
push
cwtl
xchg
mov
ret
mov
jb
adc
nop
xchg
push
push
adc
test
sarl
iret
fimull
sbb
bound
shll
push
mov
loope
pop
xlat
jle
fdivr
pop
punpckhdq
es
sbb
jge
mov
cmp
jmp
mov
pop
lret
mov
xchg
popa
test
mov
inc
insb
xor
repnz
add
jecxz
mov
fdivs
add
outsb
mov
adc
mov
leave
push
hlt
into
rcll
pop
pushf
sarl
or
dec
pop
imul
ret
sarl
lcall
mov
cs
pop
pop
pop
push
xchg
adc
sbb
and
inc
aad
jne
aad
dec
xchg
aas
xor
or
or
fbstp
dec
xor
push
arpl
mov
inc
psubusw
mov
loopne
mov
hlt
jl
arpl
in
sbb
outsb
cmp
in
dec
std
jle
lcall
mov
add
pop
cmp
sahf
nop
cltd
ret
mov
bound
inc
je
imul
pop
push
popa
pop
push
cmpsb
jmp
cs
add
cmp
mov
cs
dec
out
xor
jecxz
cli
xor
data16
pusha
sahf
jp
push
sub
push
cli
insl
sub
cmpsb
cltd
adc
js
xlat
sub
sbb
inc
ljmp
nop
out
ds
loop
push
out
cmpsb
sbb
fcoms
outsb
sub
dec
or
insb
int3
xlat
out
not
ficomps
es
add
add
pop
cmp
cld
cmp
leave
xor
xchg
jle
and
jne
icebp
es
jle
inc
iret
cmp
cmpsb
rorb
xchg
icebp
and
lcall
lret
aaa
pop
or
outsl
push
mov
cmp
xor
and
cmp
and
dec
enter
mov
pop
or
repnz
insl
xor
cld
mov
imull
enter
hlt
adc
icebp
push
fistps
mov
and
out
mov
cmpsb
xchg
push
cmp
adc
ljmp
mov
cmp
pop
adc
ror
sbb
pop
sbb
xlat
or
cmp
push
inc
inc
mov
or
add
fistpl
dec
data16
dec
outsl
in
movl
lds
jle
stos
insb
movsb
in
lods
sbb
dec
pshufw
mov
inc
js
nop
int3
push
mov
daa
xor
jp
mov
inc
xchg
movb
dec
cmpsb
cmpl
into
sbb
xor
pop
sbb
and
push
call
cld
nop
subl
xchg
lcall
push
mov
xor
xor
push
xor
dec
xchg
in
in
mov
inc
fldl
movsl
ficomps
lcall
mov
rcll
cmp
bound
add
daa
subl
jmp
fwait
loop
arpl
adc
inc
lahf
shlb
repz
lret
cmc
inc
pop
mov
push
fildll
clc
or
loop
fcmovb
rorl
jge
fisttpll
int
dec
pop
mov
subb
pop
cld
add
ret
adc
sub
jno
lret
and
bound
mov
adc
jbe
xchg
rcrl
add
push
insb
xchg
test
add
and
push
insb
fs
in
popl
scas
dec
ljmp
nop
jle
mov
xor
ret
inc
sbb
sbb
in
loop
dec
pop
mov
dec
std
push
lods
xchg
lcall
shrl
test
mov
add
mov
dec
push
mov
mov
out
adc
and
aam
aad
cmp
stos
adc
lcall
push
jno
cmp
xor
sbb
xchg
lods
sbb
jb
sbb
cmp
inc
js
add
icebp
outsl
mov
lods
xchg
cmp
jb
or
sub
mov
pop
repz
mov
add
and
in
test
mov
inc
add
test
repnz
fstpl
jns
lock
xchg
pop
shlb
scas
cmp
stos
jmp
mov
jo
inc
add
nop
and
aas
mov
rclb
cmp
hlt
and
xor
adc
inc
lds
idivl
xchg
dec
inc
xor
leave
roll
dec
iret
jnp
and
pop
aaa
jl
loop
sub
mov
aas
xchg
sub
clc
jne
mov
ss
push
and
nop
fnstenv
arpl
pop
inc
add
out
push
dec
cmpsl
subb
aad
iret
loop
in
jnp
push
adc
push
mov
bound
out
sbb
lret
hlt
mov
cli
push
les
add
pop
lds
fcmovnbe
jp
sbb
into
push
mov
ljmp
push
inc
xor
out
rorb
jl
add
lcall
out
into
xchg
cmp
cmp
in
ficoms
into
fisubs
and
hlt
fld
and
cli
push
cmp
pushf
pop
mov
xchg
call
push
cld
push
aas
sub
pop
sarb
int
nop
cmc
and
inc
out
imul
repz
fsubs
outsb
test
dec
in
mov
and
and
cmp
add
mov
sub
ss
mov
cmp
mov
cmc
xchg
jns
push
mov
dec
pop
dec
ret
fcoml
cli
cmp
mov
push
ficomps
fmuls
in
pop
lods
dec
fildl
xor
mov
in
adc
push
dec
jg
scas
cmpsb
add
lea
inc
pushf
movsl
pop
outsb
insb
loop
and
clc
adc
adc
stos
aam
stos
pop
xchg
data16
int
mov
sbb
mov
jmp
inc
mov
jl
fwait
in
pop
dec
inc
jg
cwtl
jno
jb
jge
sub
push
cmpsl
es
scas
cmpsl
shlb
xor
mov
or
icebp
or
movsb
xchg
shrl
je
test
in
add
dec
cmc
jb
outsb
adc
push
add
daa
push
scas
sub
imul
cwtl
addr16
cmp
lock
xchg
adc
dec
sbb
cld
fimuls
cltd
xor
inc
loopne
addr16
mov
sbb
aam
and
lahf
adc
mov
inc
insl
xchg
iret
in
testl
and
jle
and
push
adc
or
mov
add
lahf
lret
nop
add
inc
sti
xchg
jno
mov
jge
into
std
inc
mov
hlt
or
and
cmp
icebp
add
lcall
jno
into
fwait
cmp
repz
in
jo
es
push
daa
sti
xor
icebp
sbb
push
imul
out
jl
mov
mov
das
cltd
add
movsb
int3
cmpsb
enter
popa
lahf
push
into
push
and
andb
enter
imul
std
out
push
mov
push
in
leave
sbb
lret
cld
jmp
push
fstpl
xor
and
add
inc
aaa
or
std
sbb
sarl
dec
fistpll
sahf
cmp
adc
jbe
aad
add
insb
test
outsl
pusha
pop
mov
jmp
fcmove
mov
icebp
out
fildl
in
dec
in
lods
es
xor
packuswb
jle
aas
xchg
push
adc
and
push
adc
push
and
pop
mov
xor
shlb
dec
enter
mov
mov
inc
das
inc
mov
pop
das
sbb
das
stos
shll
outsl
cs
imul
mov
das
aaa
lea
push
adc
cmp
mov
gs
mov
insl
mov
subb
pop
pop
mov
xacquire
push
jmp
cld
and
mov
xor
cltd
std
push
enter
out
and
add
inc
mov
sti
sbb
fdivrs
repnz
ss
dec
inc
pop
test
cmp
adc
pop
into
xchg
mov
jnp
cmc
inc
sub
addr16
adc
xchg
and
jno
pop
cwtl
shll
pop
cltd
push
clc
xlat
xchg
mov
ret
dec
aam
addr16
pop
mov
in
add
scas
in
ljmp
pop
adc
push
fidivrs
loope
int
orb
xchg
scas
fcomps
xorb
xchg
shlb
adc
push
inc
inc
jnp
out
popf
scas
sahf
scas
xor
clc
mov
sbb
rorl
and
ficomps
sub
out
mov
cmp
repz
movsb
mov
loop
jb
lret
push
mov
lods
push
icebp
loope
inc
outsb
test
popf
repz
decl
ret
std
icebp
mov
cmpsl
or
add
insl
mov
and
mov
in
es
out
aaa
adc
pop
jae
jl
mov
sbbb
add
pop
sbb
lahf
mov
das
inc
shll
les
ret
icebp
ds
ss
adc
mov
mov
xor
and
pop
leave
dec
clc
sbb
xchg
mov
push
push
es
xorl
and
jg
das
fildl
cld
lock
cli
lock
mov
mov
stos
mov
mov
clc
test
jne
adc
stos
in
jmp
mov
xor
pop
mov
and
mov
imul
xchg
std
push
inc
pushf
or
dec
ljmp
push
or
dec
int
xchg
pop
pop
jns
push
mov
sbb
add
xor
ret
roll
je
sbb
outsb
sbbl
xchg
aas
bound
repnz
mov
std
cmp
xchg
sarb
arpl
rcl
jecxz
xor
ds
inc
adc
sub
les
gs
outsl
or
cld
xor
push
pop
fucomi
fisttps
aaa
jl
in
cwtl
lcall
sub
or
test
decl
loop
xor
mov
jae
movsl
mov
in
pop
xchg
lea
push
and
outsl
sub
inc
test
test
xchg
int3
push
int
jnp
mov
inc
mov
out
jo
xchg
xor
nop
je
mov
fldcw
cmpsl
and
mov
sub
jl
sahf
add
jno
hlt
sbb
pop
rclb
les
cmpsb
cmc
push
jo
xchg
nop
xchg
sub
sub
scas
sub
stc
daa
or
and
sub
cmp
mov
ljmp
cmpsl
dec
mov
fldcw
xor
ljmp
add
mov
cmpsl
push
fidivl
sub
xchg
mov
mov
cmp
mov
mov
mov
cli
lahf
adc
inc
clc
dec
sbb
hlt
pop
fst
lock
fisttpl
pop
ret
adc
cmpsb
cld
pop
neg
xor
push
shrl
std
adcb
cmc
push
and
xor
ds
fcompl
adc
scas
dec
mov
loopne
mov
xchg
mov
lock
mov
cmp
cmp
cmpsl
pop
and
jle
fistl
mov
dec
dec
mov
fldl2e
inc
push
cmp
push
push
cld
jl
add
inc
fs
mov
pushf
fcompl
pop
fisubrl
and
or
xchg
test
jg,pn
mov
ficoml
push
bound
stos
and
xchg
xchg
fwait
pop
cmpsl
and
ss
xor
add
inc
sbb
lcall
adc
xchg
add
dec
inc
push
fmull
lret
iret
push
inc
scas
mov
cli
test
insl
and
push
iret
test
mov
ror
or
adc
inc
sahf
xor
pop
sub
addr16
lock
dec
sub
jo
aad
xchg
out
leave
pop
jb
movsl
fists
adcb
mov
fdiv
sbb
lea
and
lock
mov
das
in
sub
mov
adc
cmp
idiv
daa
insb
daa
mov
bound
aam
loop
ja
xchg
sub
daa
sahf
xchg
jae
cltd
add
stos
xchg
mov
or
fcomps
mov
gs
inc
xlat
push
push
mov
push
and
xlat
iret
sub
dec
push
or
xlat
fists
jecxz
dec
jns
cmp
add
cmp
inc
into
mov
add
stos
es
mov
movsl
in
push
outsl
push
fs
xor
rorl
jns
push
jns
daa
aaa
xor
cmp
dec
sbb
js,pn
popa
add
xor
mov
call
addr16
cwtl
outsl
dec
sub
inc
in
sbb
mov
pop
nop
addr16
xchg
ss
inc
je
ficomps
mov
rol
mov
mov
xchg
adc
jmp
and
mov
mov
lods
xorl
inc
out
xor
mov
or
ret
fidivrs
add
dec
dec
in
ja
xchg
lret
dec
sub
lcall
add
cmp
xor
mov
sahf
jns
lods
mov
cmp
mov
mov
test
push
in
dec
jp
fildll
jle
pop
movsl
ficompl
cmpsl
inc
xchg
cwtl
pop
jecxz
mov
rorl
sub
fstps
pusha
sub
sahf
mov
add
clc
clc
outsb
inc
ja
pop
inc
les
add
ficoml
imul
ds
ja
mov
iret
mov
icebp
mov
sbb
insl
adc
add
outsl
das
lods
pop
xchg
js
jp
adc
adc
inc
shrb
sbb
enter
push
lret
mov
add
pop
push
or
outsb
cltd
adc
or
cmp
dec
xor
pop
mov
jne
or
data16
xchg
addr16
fisubrl
mov
pop
lret
imul
loope
int3
jg
dec
mov
sbb
ja
or
sbb
fisttps
test
sub
inc
adc
adc
pop
ret
or
xchg
xchg
adc
cmp
cltd
jle
fwait
mov
mov
divb
lcall
fcmovb
fstpl
mov
es
in
pop
rclb
cmp
or
mov
fiadds
mov
sbb
aaa
pusha
sbb
mov
and
inc
sbbb
mov
jnp
adc
loopne
mov
repnz
cmc
dec
and
inc
movsb
pop
dec
dec
rol
mov
orl
stc
pop
dec
mov
mov
mov
jne
pop
dec
jns
cltd
or
sub
sbb
dec
mov
in
xchg
sub
fisttpll
jl
stc
and
add
je
repz
lret
or
mov
leave
enter
pusha
mov
jl
mov
xor
das
imul
adc
or
lcall
pop
push
add
pop
nop
data16
cs
aaa
mov
sbbl
dec
pop
lea
les
jns
daa
arpl
push
test
add
xor
sub
aam
cwtl
lock
lret
icebp
mov
ja
push
dec
xor
sub
jle
sbb
outsb
xchg
in
add
inc
stc
inc
xchg
repnz
sub
mov
jecxz
bound
cld
fcoms
pop
sbb
mov
shll
add
pop
ljmp
pop
xor
mov
repnz
pop
js
sub
mov
test
push
lods
fs
out
sahf
mov
push
test
dec
dec
js
in
cmp
jb
int3
mov
sarb
jns
arpl
leave
sbb
test
mov
push
mov
sbb
test
insb
inc
stc
pop
sub
inc
lahf
mov
pop
adc
daa
into
inc
xchg
push
or
mov
cmp
mov
cli
and
nop
inc
xchg
pop
pop
mov
imul
out
mov
jne
lcall
mov
xchg
fistpll
jno
inc
push
mov
mov
aaa
inc
push
pop
cmpsl
data16
enter
daa
call
jl
pop
loop
xor
stos
jo
or
into
idivl
push
xchg
inc
and
jmp
inc
sbb
xchg
push
push
cmp
xor
int3
mov
jbe
push
sub
inc
or
lods
in
nop
leave
pop
and
mov
pop
iret
lods
inc
dec
pop
sahf
pop
pop
jge
pop
pusha
test
jg
mov
aas
pop
pushf
jae
pushf
pop
fistpll
jae
push
sub
cmpb
pop
sub
mov
ja
lock
shrb
adcb
repz
inc
pusha
in
dec
add
movsb
add
insl
fbstp
fisttps
popa
pop
jbe
jmp
add
clc
adc
xor
xor
andl
sbbl
fs
fidivs
les
push
dec
push
andl
incl
inc
inc
xchg
data16
test
fisubs
mov
sub
fbld
loopne
and
add
xchg
into
mov
push
xchg
out
or
add
stos
push
mov
jp
imul
xor
add
mov
pusha
aam
mov
inc
daa
divb
in
in
jmp
mov
stc
adc
inc
outsb
push
jecxz
movsl
mov
ret
jl
test
mov
cmc
cs
rorb
pop
lds
fiadds
xchg
xor
xor
cli
or
int3
hlt
or
loop
imul
xor
stos
jp
imul
pop
test
mov
jle
lret
lods
push
imul
pop
dec
pop
fnsave
lods
ja
cmp
adc
or
rclb
xchg
cmp
push
and
pop
test
add
ljmp
outsb
ret
stos
pop
dec
ss
sub
hlt
fs
stc
mov
cwtl
xor
add
scas
pop
into
and
jle
lea
outsl
mov
cmp
pop
mov
aam
dec
or
xchg
pop
out
shll
shl
mov
push
les
or
cmp
dec
out
cmp
stos
cs
ds
or
dec
cmpl
add
jg
mov
insl
addr16
push
movsl
addr16
or
int
shrb
enter
stos
imul
adc
ja
adc
xchg
sar
stos
mov
movsb
cltd
dec
and
lods
cmpb
push
inc
dec
mov
popf
dec
stos
jg
or
aas
and
out
push
sbb
or
mov
loopne
xor
add
adc
jl
jno
adc
std
fisubl
into
ret
daa
idivl
mov
jl
xor
idivl
jns
in
dec
ret
xor
mov
inc
ffreep
mov
xchg
les
jge
enter
subl
je
int
jns
mov
test
and
mov
cltd
data16
lahf
cmovg
mov
cmpsl
xchg
lods
clc
inc
fstpt
out
inc
loop
mov
imul
jge
cltd
cmp
and
pop
mov
mov
testl
push
add
dec
jmp
fs
inc
mov
test
lds
dec
ss
outsl
loope
in
mov
ss
jmp
jg
pop
dec
in
xchg
je
jp,pt
dec
das
push
jbe
jb
jne
fstpt
clc
mov
sub
pop
lea
into
mov
lock
adcb
lret
add
sub
sahf
dec
jmp
out
cmp
fmull
xor
mov
hlt
or
xchg
push
scas
addr16
jb
fiadds
mov
or
mov
mov
cmp
sub
call
pop
pusha
ja
adc
ds
push
std
decl
mov
xor
cwtl
jne
into
jo
xchg
aas
mov
sbb
fiadds
or
movsl
mov
mov
lcall
xchg
out
dec
pop
je
iret
shrb
dec
enter
dec
popf
inc
mov
jmp
push
dec
lahf
aam
and
inc
iret
fdivrp
inc
sub
jl
pop
cmp
xchg
negb
mov
jl
add
fists
and
xchg
int3
inc
stos
inc
sbb
push
gs
out
sbb
out
iret
bswap
outsb
movsl
scas
jl
cwtl
mov
push
dec
popa
cmp
inc
cmp
shl
clc
push
jle
js
je
arpl
sub
fcompl
xor
mov
filds
sub
lret
pop
aad
out
and
arpl
lret
xchg
movsb
icebp
stos
push
mov
sbbl
in
mov
nop
mov
dec
jle
in
pop
add
addl
push
mov
popf
sbb
popf
test
cli
lods
clc
push
or
mov
enter
rcll
ss
in
lahf
out
je
add
addl
ja
out
fnsave
lcall
out
sbb
xchg
xor
pop
sub
je
je
fcompl
xor
xlat
inc
aas
iret
insl
punpckhdq
add
insb
pop
lods
popa
pop
icebp
jp
enter
in
cs
jecxz
jp
ss
or
insb
mov
xor
dec
cmpsb
xchg
test
bsf
bound
sbb
adc
push
inc
push
mov
and
sbb
adc
xchg
lock
movsl
loopne
fadds
and
scas
fisttps
adc
fucomip
xchg
cmpsb
mov
push
inc
lock
iret
pop
dec
das
mov
add
movsl
pop
fmull
add
mov
mov
jge
inc
adc
mov
shlb
push
xor
loope
push
xchg
mov
dec
push
add
push
aam
mov
loope
pop
sbb
inc
aad
fwait
iret
mov
in
xchg
mov
ja
pop
fnstsw
shll
xor
pop
repnz
xor
clc
mov
int3
mov
lahf
mov
fcoml
jle
test
hlt
pop
push
cwtl
xchg
dec
mov
mov
cmp
dec
ret
outsl
arpl
into
aaa
push
sbb
fbstp
dec
imul
sbb
sub
pop
out
xchg
cltd
dec
jl
fst
jl
mov
and
out
xchg
ret
inc
loopne
pop
pop
dec
arpl
add
movsb
xchg
sbb
dec
mov
or
pop
add
xor
mov
gs
out
lret
sbb
repnz
adc
and
out
fst
pop
fstpt
and
inc
push
and
inc
arpl
bound
rolb
mov
lret
jg
in
insl
inc
xchg
fwait
mov
sarb
scas
jne
in
xchg
imul
ret
mov
sub
lret
push
add
xchg
clc
inc
cs
sbb
stos
jb
scas
push
sarl
jne
jne
aas
movsb
sub
imul
mov
sub
sbb
adc
lods
popf
out
or
repnz
in
push
mov
test
and
insb
icebp
push
cli
sbb
xchg
mov
mov
aam
xchg
mov
fidivl
mov
das
adc
xchg
stc
stos
mov
cli
xlat
out
inc
bnd
std
out
push
cmpl
or
lods
mov
nop
in
and
sub
shll
mov
cmp
cmp
rcrb
ss
fdivrs
cmp
inc
enter
addb
sbb
adc
sahf
incb
xchg
pop
adcw
cmp
push
std
in
mov
mov
jns
daa
mov
scas
inc
test
call
jl
icebp
or
out
icebp
pop
js
outsl
out
fcmovnbe
pop
dec
shr
std
movsb
stos
fwait
add
inc
lds
push
jg
jecxz
rclb
jle
xchg
add
xchg
rolb
pop
pop
outsl
out
pushf
fsub
out
mov
add
mov
pop
fwait
pop
xchg
cmp
fcoml
ds
mov
jg
fs
scas
jnp
xchg
aas
cwtl
pop
push
or
mov
jp
pop
fisubrl
xchg
pop
ja
inc
out
out
inc
leave
pop
xor
sti
sub
in
out
into
in
adc
xchg
pop
push
icebp
fadds
es
jae
and
jp
xchg
jmp
cmp
mov
in
or
in
lds
xchg
repz
mov
push
addr16
mov
push
std
pop
push
lcall
loopne
add
mov
cwtl
jbe
inc
in
frstor
push
stc
imul
cmpsb
lahf
movsb
cld
sub
cmp
data16
lcall
jge
jne
lea
pop
push
push
push
xchg
in
ja
inc
mov
mov
in
jg
or
pop
pop
push
cmpsb
xchg
add
inc
clc
adc
mov
push
shlb
movd
out
outsl
in
cmc
bound
popf
inc
sub
mov
testl
dec
dec
insl
es
jmp
and
in
jg
and
lods
adcl
push
fs
sbb
shrb
jne
lds
shrl
mov
xchg
aam
stos
mov
sub
aam
int3
jmp
push
sub
mov
sarl
fistl
or
add
roll
fucomi
shlb
mov
les
xchg
inc
inc
add
cmp
stos
loop
mov
push
nop
xor
sbb
xor
jg
cmp
negl
test
or
sub
loop
sar
jmp
fsubrl
and
push
add
or
test
jbe
iret
or
xchg
mov
into
in
jg
push
pcmpgtd
pop
icebp
stos
adcb
addr16
mov
enter
mov
data16
cmp
int3
scas
mov
sbb
into
vfnmaddsd
adc
push
jg
ror
scas
into
dec
imul
out
leave
sbb
nop
cmp
ret
inc
fildl
add
sub
test
out
push
mov
push
loopne
mov
cmc
xchg
cmp
cmpsb
dec
jnp
mov
cmp
inc
aas
mov
cld
pop
adc
sbb
call
cwtl
shlb
mov
cmp
dec
fcomi
dec
sub
das
pop
mov
fwait
fwait
mov
xchg
cwtl
mov
jb
inc
dec
movsb
sahf
mov
sbb
lcall
add
pop
sbb
and
jae
pop
cmp
nop
flds
js
push
add
roll
ss
jmp
lods
rorb
je
or
fmuls
aam
out
pusha
sahf
lcall
idivb
push
aad
sub
and
mov
ss
leave
fwait
sti
out
loopne
enter
jmp
add
jmp
pop
xchg
or
test
cmpb
inc
inc
sub
xor
subb
mull
enter
ds
cmp
out
subb
sbb
push
test
je
mov
dec
mov
lods
loope
dec
add
lahf
test
leave
xchg
pushf
adc
jle
lret
mov
sbb
sub
cltd
xchg
or
sub
and
cwtl
mov
mov
ja
jnp
in
aam
sub
adc
popa
dec
xlat
jp
arpl
sub
mov
add
scas
insl
and
adc
aas
loopne
and
hlt
mov
sbb
loope
mov
imul
and
scas
jmp
cmpsb
aaa
ss
pop
xchg
repnz
xor
lock
mov
mov
leave
mov
repnz
sub
and
push
mov
mov
mov
mov
in
fnsave
sub
imul
in
push
hlt
dec
fistpl
and
jne
adc
inc
cmp
daa
dec
push
loop
lods
push
inc
lahf
bound
adc
fistps
sbb
mov
push
xchg
test
xor
pop
dec
dec
adc
aam
or
stc
pushf
scas
fidivs
and
ljmp
inc
enter
cmpsb
push
lds
movsl
lods
fimull
and
sbb
int
enter
mov
popa
sub
lret
lcall
in
dec
mov
add
jecxz
lret
pop
cli
fwait
pop
or
int
push
add
sbb
cli
jb
xor
push
jp
push
clc
std
mov
scas
out
xor
adcl
dec
icebp
repz
arpl
aaa
fisubrl
mov
xorb
mov
fcoml
sub
mov
test
gs
mov
xor
xchg
andb
mov
in
push
mov
mov
sub
mov
fdivrl
mov
adc
in
stos
pop
mov
cmpl
push
jmp
jmp
out
int
rclb
dec
mov
sbb
pop
sub
lret
mov
ret
push
in
inc
mov
rol
pop
add
inc
test
dec
sub
das
in
out
pushf
mov
dec
push
or
adc
aas
xchg
test
xor
xchg
add
mov
adc
push
pushf
jmp
rcr
xchg
daa
dec
jnp
call
mov
mov
lock
fwait
test
adc
cld
xor
xchg
lret
stos
inc
jo
fucomp
fstl
add
test
das
shlb
sahf
ror
mov
pop
sarb
adc
ja
xchg
xchg
lods
xchg
dec
sbb
call
gs
xlat
clc
lock
icebp
sbb
inc
mov
inc
mov
cmp
push
daa
fwait
jge
xor
push
movsl
pop
pushf
out
push
push
push
pop
lds
dec
lea
clc
imul
jle
jns
push
jg
lret
mull
or
lods
cld
push
cwtl
cwtl
les
mov
fists
or
inc
inc
xchg
jae
cld
pop
clc
ret
aaa
scas
test
out
mov
fs
loopne
jg
rorb
inc
xchg
insl
pushf
xor
clc
test
or
cmp
adc
jge
cmc
adc
jge
out
icebp
pop
jge
xchg
rcll
std
xlat
ljmp
mov
out
xchg
std
es
and
and
cwtl
pop
mov
adc
adc
adc
nop
scas
stos
je
popa
lods
inc
popl
inc
sbb
les
mov
mov
stos
sub
es
enter
inc
sub
movsb
adc
repz
mov
movsl
cmp
dec
push
popl
dec
subl
test
or
adc
sub
and
test
outsb
jno
sub
mov
pop
mov
cs
aam
loope
push
arpl
out
push
dec
leave
mov
inc
xchg
sbb
aad
mov
lods
pop
pop
loope
lret
stos
leave
imul
push
add
movsb
sub
dec
enter
lods
jl
add
adc
add
mov
mov
add
fwait
mov
pop
cwtl
pop
iret
std
call
fadd
popf
mov
dec
pop
call
outsl
pop
mov
jp
fimuls
xchg
imul
fbstp
pop
push
push
inc
mov
xor
cmp
gs
sbb
pop
cmpsl
xchg
xadd
in
ds
je
stc
out
mov
in
xorb
and
fstpl
mov
cmp
cmp
ret
mov
jl
sbb
dec
pusha
add
or
add
movsb
fistps
pop
or
or
push
xor
pusha
push
mov
inc
test
not
mov
mov
cwtl
pop
pop
pop
lods
pop
pop
push
fs
sub
int
xchg
inc
test
cmpsl
insb
inc
sub
rorl
data16
pusha
mov
out
pop
out
movsl
lods
lock
mov
jnp
nop
mov
int3
jl
or
lahf
lahf
outsl
mov
and
xchg
js
and
cltd
pop
inc
sub
fidivrl
mov
pop
out
xor
aad
clc
adc
push
dec
ficompl
and
lods
adc
loop
or
clc
mov
outsl
dec
jne
ret
dec
xchg
or
pusha
adc
aad
push
push
cli
andb
mov
or
pop
aas
or
inc
test
mov
mov
sub
mov
cmpsl
icebp
out
pop
pop
xchg
js
jne
dec
subl
add
icebp
shll
pop
push
and
or
jl
cmp
add
mull
mov
xchg
cwtl
xchg
mov
je
mov
adcb
leave
mov
cmp
int3
xchg
cmpsb
imul
dec
test
sub
clc
xor
dec
frstor
into
lcall
mov
push
imul
iret
pop
scas
jge
xor
orb
cmp
shll
push
sub
mov
fstl
push
out
lds
and
les
ljmp
repz
std
sub
push
push
int3
adcl
and
cwtl
loopne
insl
xchg
lods
mov
nop
mov
or
es
js
icebp
xor
dec
mov
jbe
mov
sub
mov
or
mov
mov
cwtl
push
fidivrl
sub
rol
ret
mov
dec
pop
movsl
shll
sbb
icebp
cmpsb
push
stc
or
rcr
incb
xor
mov
and
inc
aam
pushf
loop
push
fcmovb
sub
out
xchg
decb
ret
or
xor
ljmp
imul
test
push
mov
aam
xchg
aas
push
pop
add
lds
dec
inc
incb
aam
adc
pop
xchg
ljmp
push
xchg
int
in
mov
test
xchg
fidivs
xchg
or
jae
int3
aad
sub
fnstsw
lret
xchg
jns
or
mov
repnz
push
out
xchg
dec
inc
cmp
sub
std
or
jno
xchg
stos
fsubr
int
pop
inc
xor
mov
stos
fcmovnbe
or
loopne
aad
push
add
lock
fists
sti
inc
xchg
insl
pop
fisttps
pop
jge
loop
into
jmp
jge
xchg
push
ficoml
cwtl
insb
ds
stc
push
xor
into
xchg
adc
fwait
imul
sarb
inc
adc
mov
daa
imul
jp
dec
ljmp
test
dec
pop
xchg
adc
loop
cmpsl
mov
fistpll
xlat
xchg
loop
push
xchg
xchg
lods
xchg
sub
push
cmp
xchg
dec
sbb
pop
loope
jne
shrl
push
pop
sbb
stc
aas
and
out
out
inc
in
pop
cld
xchg
mov
xchg
inc
out
cmp
iret
enter
dec
stos
les
jb
xor
bound
and
ljmp
sbb
adc
loope
and
pushf
push
cmp
add
cmp
fidivs
dec
mov
insb
jb
jl
call
das
dec
and
insl
cmc
dec
pop
rorb
jg
mov
out
mov
or
loope
add
aaa
out
cs
jne
pop
inc
ss
mov
inc
scas
xor
sbb
fscale
pop
cli
xchg
fsubr
fs
sti
in
into
jnp
xchg
scas
cli
mov
ds
ljmp
push
les
push
and
repz
test
and
push
xchg
and
mov
jp
xor
inc
stc
sbb
das
fdivrp
sbb
jb
push
push
push
test
pop
dec
jb
jge
inc
sbb
test
or
in
je
dec
adc
mov
xor
out
aaa
and
dec
in
stos
adc
push
arpl
decb
mov
lcall
sub
cmp
jl
fdivl
loop
inc
inc
dec
mov
mov
push
notl
mov
adc
cmp
push
lds
dec
call
adc
mov
jno
sub
fdecstp
fsubl
lea
mov
xor
xor
ret
mov
mov
pop
push
addb
stc
lods
mov
pop
add
mov
gs
sub
mov
stos
sbb
push
test
lret
xor
push
fmuls
stc
pusha
or
aad
mov
xlat
jl
add
and
daa
xchg
stos
adc
stc
xchg
add
inc
jae
pop
push
lret
into
push
inc
lret
and
pop
or
pusha
in
dec
add
push
call
aad
leave
and
ja
xchg
out
add
sub
cli
test
jle
loopne
ss
into
inc
sbb
vpmulhuw
jmp
leave
lret
cmp
add
sub
push
test
xchg
icebp
and
bound
in
push
jo
fldt
in
push
pusha
jne
inc
mov
dec
in
lds
lcall
pop
xchg
ja
insb
ja
jne
push
mov
aaa
push
cli
jno
cmp
dec
sub
addr16
adc
les
into
inc
xor
push
sbb
adc
scas
stos
cmc
jbe
sahf
pusha
sub
imul
scas
sub
mov
idivl
mulb
into
mov
mov
lret
push
lock
repnz
test
call
xchg
orl
pop
lods
sub
imul
mov
fsubl
test
add
popa
adc
add
sti
repnz
cmp
pop
jne
sub
cltd
xchg
imul
repz
jecxz
jmp
imul
popf
lock
mov
jmp
shrl
sbb
pop
loopne
shll
and
test
mov
sahf
dec
hlt
ja
dec
dec
dec
sarl
stos
mov
insl
mov
sbb
push
cmc
inc
and
cmpsl
ficoml
xorl
pop
sbb
sub
xchg
leave
repnz
jae
adc
fidivl
out
mov
dec
jnp
inc
mov
xor
sbbb
cmp
rclb
sbb
mov
addr16
mov
or
lock
push
xchg
call
out
mov
jb
inc
sub
mov
push
fcomip
sarl
outsb
fiaddl
sahf
lret
or
inc
movsb
sbb
in
jns
inc
shrl
daa
test
in
movsb
das
or
push
sub
or
cmp
xchg
insl
add
add
pop
loop
or
rorb
nop
fs
repnz
fldcw
sar
loop
cmp
dec
sbb
add
push
cmpb
xchg
icebp
shlb
iret
cwtl
test
repz
push
sub
ret
cmpb
mov
lcallw
filds
push
push
mov
and
mov
addr16
leave
test
stos
rclb
nop
rolb
int
adc
dec
stos
stc
cmp
mulb
mov
lcall
push
or
xchg
js
cld
and
negl
movsb
push
jnp
out
bound
xchg
inc
sub
or
rcll
sarl
add
mov
sarb
aaa
pop
hlt
fdiv
mov
andb
mov
gs
out
sti
jae
enter
jle
loope
pop
popf
push
pop
cmp
insl
ljmp
or
and
and
mov
ljmp
dec
movsl
popf
hlt
dec
mov
cmp
inc
mov
adc
daa
sub
loope
ja
shl
jg
sub
cmp
xchg
mov
ja
pop
imul
xor
test
mov
cli
xchg
cmpl
mov
sub
mov
out
scas
lds
push
in
test
cmpsb
movsl
push
cwtl
cld
aam
cmpl
fistpll
push
scas
orl
xchg
dec
stos
xor
aaa
dec
pop
gs
das
ret
sbb
inc
jns
divb
hlt
and
mov
decb
lds
cs
or
pop
lock
inc
aaa
pop
shrl
fdivrp
dec
addr16
clc
inc
add
test
xor
inc
and
xchg
push
loopne
mov
inc
pop
cmp
in
inc
aaa
stos
xor
cmp
and
loope
dec
int
xor
ret
imul
test
pop
fisttps
xchg
pop
xchg
jbe
dec
rol
cmp
imul
sbb
cld
cmp
dec
dec
push
adc
mov
add
adc
and
inc
decl
xor
or
adc
out
adc
lret
sub
inc
mov
outsb
adc
ficoms
sub
cmc
jnp
cmc
sub
loop
dec
clc
das
xor
repnz
pop
push
scas
sbb
pop
jae
out
stos
in
pushf
jae
loope
sub
push
xchg
sub
jns
sbb
in
push
sbb
inc
movsb
cmp
adcb
sbb
pop
mov
aas
and
scas
mov
xchg
xor
dec
daa
and
push
addl
cwtl
shl
pop
imul
iret
jbe
inc
push
mov
sbb
leave
jno
stc
cmp
jnp
iret
or
inc
int3
cmpsl
cltd
push
cmpsb
sbb
push
or
jl
push
inc
pusha
or
jg
repnz
or
sbb
cs
aad
mov
lods
stos
es
pop
adc
inc
outsb
daa
arpl
js
jne
rclb
std
dec
mov
aaa
push
cmp
in
pop
mov
addr16
push
push
or
fs
push
pop
lcall
dec
cmp
movsb
cmp
xchg
add
jbe
call
daa
and
sbb
pusha
and
push
mov
mov
aad
mov
call
arpl
dec
popf
popa
pop
sbb
in
out
mov
dec
pop
js
fbld
bound
pusha
jle
push
sub
jne,pt
pop
xor
std
pop
mov
mov
jmp
dec
fdivrl
xchg
or
sbb
mov
mov
mov
fcmovne
or
pop
pop
xor
test
out
je
popl
jo
add
cmp
aas
xchg
cmp
pop
fstps
stos
sbb
mov
test
movsb
adc
decb
out
sbb
mov
nop
xor
cmc
scas
sbb
xor
xor
xor
mov
xchg
mov
add
popf
ret
fcmovnbe
push
loop
adc
clc
aas
adc
sbb
mov
mov
hlt
rorb
sub
mov
mov
addl
inc
mov
daa
mov
inc
test
sub
push
jecxz
or
lods
cmp
loope
mov
push
rol
ret
aam
xchg
or
sbb
lret
movl
ja
mov
ljmp
cs
mov
jp
xchg
mov
loopne
push
sbb
movsb
jno
jno
fs
roll
testl
mov
addr16
lods
int
dec
sub
sub
call
cmp
stc
xor
xchg
dec
test
sbb
fstl
xchg
aad
hlt
arpl
push
imul
outsl
adc
xchg
lcall
lret
imul
jbe
mov
sbb
clc
je
lea
stos
gs
xor
fwait
call
mov
lea
mov
sub
and
fsts
cmpsl
cmc
shrb
lds
dec
xchg
push
mov
enter
pop
or
andl
or
outsb
dec
rcrl
inc
ficoml
jno
pushf
add
das
int3
shr
loope
or
call
cmpsb
dec
aam
clc
mov
adc
aad
and
inc
mov
rcrl
mov
push
push
or
inc
push
add
jne
lahf
loop
movsl
loop
aad
mov
mov
jg
adc
fisttpll
int3
insb
out
add
mov
dec
mov
cmp
xchg
cld
add
xchg
push
dec
arpl
inc
lahf
sbb
movsb
dec
or
std
xor
mov
addr16
leave
sbb
pop
sarl
testl
lods
or
fidivrl
test
inc
cwtl
mov
test
or
jo
outsb
dec
loop
in
mov
cli
pop
shr
ja
cmp
icebp
mov
mov
scas
cmovbe
fidivrs
bound
dec
push
out
jl
data16
icebp
cmp
mov
pop
dec
bound
jg
xchg
je
fs
or
jl
push
xchg
movsb
stos
outsl
cmp
icebp
outsl
in
jmp
adc
pop
cmpsb
cs
mulb
push
xchg
je
add
ret
pop
loopne
mov
sahf
repnz
ss
mov
push
popf
ds
js
repz
inc
movsl
or
lret
in
fidivs
sub
test
fidivrl
ss
lods
and
int3
lcall
pop
outsl
out
nop
ret
add
sbb
out
cmpsb
cmpsb
leave
and
test
xchg
adc
xor
push
fmul
int
out
pop
and
fidivs
xchg
xchg
mov
sub
inc
cmpb
daa
ror
mov
mov
push
imul
daa
movsl
dec
loop
sub
leave
inc
push
or
lcall
push
jl
cs
mov
scas
adc
insb
or
ret
mov
jae
les
sbb
popa
cltd
inc
daa
sbb
xchg
repz
pop
add
into
adc
sbb
xchg
adc
js
push
cld
cmp
pop
movsl
loop
mov
xor
and
mov
dec
clc
iret
mov
outsb
cmp
sahf
shrl
inc
es
sub
pushf
test
jae
cmp
insb
shrb
testl
push
jno
jae
jns
aam
pop
jae
pusha
mov
cmc
mov
cwtl
mov
jl
fistps
pop
loopne,pt
mov
fsubrl
and
fisubrs
fwait
add
test
pop
sbbl
outsl
setbe
out
adc
loop
aaa
mov
lods
addr16
out
xor
lret
sti
pop
dec
insl
jle
or
jne
jo
push
shlb
xchg
pop
add
in
push
lret
out
scas
mov
sbb
inc
cmp
outsb
subb
sub
inc
pop
push
mov
repz
repnz
pop
fcmovnbe
out
inc
xor
movsb
fsts
mov
jo
mov
jb
adc
xor
pop
xchg
fwait
je
cmc
mov
xchg
cwtl
addl
xchg
mov
stos
out
pop
repnz
sbb
sbb
shrl
pop
xchg
test
cld
jecxz
pop
iret
orl
cmc
cmp
loop
repnz
lcall
push
xchg
inc
inc
jae
cmp
mov
push
icebp
cmpsb
or
sub
das
jne
movsl
jmp
incl
mov
pop
jae
arpl
adc
mov
add
and
jge
add
loopne
ljmp
ljmp
into
fildll
dec
popf
jae
mov
xchg
and
sahf
insb
nop
xchg
sub
jp
es
cmp
mov
leave
push
cmpl
loop
ret
lods
cltd
and
mov
mov
sbb
pop
xchg
adc
out
xor
shl
xchg
ret
das
push
jnp
lcall
jnp
enter
dec
sub
in
sahf
mov
jg
dec
or
xchg
or
cmp
movsl
scas
mov
cmp
aad
pop
addr16
aam
enter
shrb
imul
fldt
jg
int
movsb
sbb
ja
les
repnz
jno
xchg
push
inc
lea
outsb
jne
js
and
lock
dec
sbb
mov
pop
lods
in
add
std
push
out
push
out
sub
mov
pop
out
push
cmp
sbb
loope
addr16
xchg
dec
lcall
jae
icebp
leave
fs
imul
das
sbb
dec
dec
out
sbbb
add
mov
jo
mov
and
mov
push
fdivrs
adc
push
xchg
scas
bound
mov
ss
pop
pop
pop
sub
test
sbb
xsha256
cmpsb
shrb
adc
inc
div
repnz
stc
movzbl
mov
aam
pop
and
emms
fisubrl
jle
xor
mov
add
adc
scas
xchg
and
call
jle
jne
xchg
cmp
mov
inc
xor
pop
mov
aad
orb
jecxz
sub
xchg
movsl
mov
jb
lea
cmp
fistps
jg
cwtl
xor
mov
std
cs
xchg
jnp
mov
dec
dec
sub
and
jns
das
dec
loopne
fucomip
add
mov
sti
mov
sbb
repz
or
insb
inc
out
or
mov
test
lods
movsb
xchg
sub
sbb
mov
test
popa
rorl
mov
out
out
pop
xchg
lods
mov
hlt
ljmp
lahf
out
xchg
or
fadds
das
cs
adc
sarl
nop
and
je
loopne
loopne
sbb
push
out
sub
push
xor
sub
rcrl
inc
mov
cmc
jnp
rolb
sbb
push
pop
aad
inc
push
das
push
mov
mov
xchg
xchg
jns
dec
ret
jns
ss
jns
es
inc
fnstcw
xchg
cltd
imul
inc
imull
add
push
test
out
leave
or
xchg
xchg
test
int
iret
xor
add
xlat
or
xor
cmp
fists
int
in
cmp
pop
inc
mov
test
add
lcall
enter
insb
cmp
add
ret
in
xchg
xlat
test
cmp
stos
add
mov
jmp
pushf
gs
mov
sarl
jns
jne
lods
sarb
add
test
out
push
gs
lret
out
add
nop
decb
xor
dec
adc
adcb
leave
lods
inc
ja
xor
xor
out
jae
adc
ficompl
dec
in
sbb
mov
xchg
mov
fwait
lods
in
dec
push
into
jb
dec
sti
repnz
cld
stos
in
inc
ret
jo
pusha
pop
mov
mov
loope
or
fwait
mov
or
cmp
inc
scas
aam
pop
fdivrl
lods
and
nop
push
fsubr
inc
inc
cmp
add
or
sarb
jle
lahf
mov
sbb
gs
sbb
and
add
mov
push
mov
add
fwait
cmpsb
mov
rorl
rcll
jmp
jae
pushf
adc
xchg
js
lock
icebp
add
xor
sbb
mov
jmp
cmpsl
xor
mov
lods
int3
mov
outsl
push
push
cmpl
xlat
mov
sub
mov
cmp
push
fsqrt
lcall
adc
andb
inc
je
jb
lcall
push
mov
push
or
lds
jno
mov
or
fiaddl
std
xchg
dec
lods
or
stc
aad
mov
icebp
mull
inc
sbb
sahf
add
pop
rclb
outsb
mov
xor
imul
or
outsl
pop
mov
adc
lods
xor
mov
push
adcb
mov
jle
jns
pop
hlt
add
mov
in
arpl
cmpsb
pop
xchg
mov
ret
cmpsl
push
repz
cwtl
lahf
filds
dec
cmpsl
out
inc
test
pushf
aas
test
cmp
mov
ja
das
fdiv
or
pop
mov
add
jne
in
je
iret
sub
cltd
test
scas
in
xchg
sbb
mov
cmp
jae
aas
outsl
pop
jb
adc
imul
aad
jo
pop
mov
pop
nop
and
cmp
sub
cmp
cmp
aad
nop
jae
xor
pop
rolb
adc
mov
add
push
mov
pop
jge
mov
int3
sets
mov
mov
dec
mov
adc
jbe
and
adc
cmp
pop
xor
lret
in
push
xor
into
push
mov
ja
gs
test
ja
fimull
and
test
xchg
mov
rclb
xchg
lea
xor
adc
jmp
mov
pop
test
and
cli
or
sbb
repnz
add
into
inc
fdivrs
and
daa
push
xlat
push
movsb
leave
and
cmc
and
adcb
mov
std
int
push
sub
daa
js
or
loope
or
test
mov
sub
xchg
xchg
jnp
add
sbb
ret
fsubrs
jge
dec
inc
les
push
out
adc
cmp
mov
inc
lret
cwtl
push
mov
mov
lret
pop
sub
push
jmp
xchg
call
rcr
aam
imul
inc
pop
or
stos
mov
stc
jg
icebp
pushf
dec
inc
dec
sbb
in
cwtl
out
cmpsb
pusha
adc
idiv
push
xor
xor
clc
es
pop
fidivl
pop
or
and
leave
cmpsl
iret
es
and
fwait
sub
or
jge
test
mov
stc
mov
lret
sbb
pop
test
jbe
or
pusha
xor
shl
negb
fwait
adcl
cmp
and
jle
decb
test
aam
outsb
mov
push
push
repnz
in
mov
xor
es
mov
mov
lods
adc
repz
mov
dec
adc
or
and
out
mov
icebp
add
push
adc
rcrl
xor
push
ret
add
adc
mov
fbld
jg
or
cmp
in
push
push
lods
xor
push
data16
jae
or
and
push
cmp
in
in
push
shl
sbb
insb
dec
sub
inc
mov
cmp
imul
insb
push
imul
imulb
jno
out
cmp
xor
test
cmp
and
xchg
cs
mov
pop
push
scas
stos
gs
cmp
loop
int
std
test
sbb
jp
mov
iret
arpl
sub
std
xchg
sti
ja
bnd
jp
mov
cmp
lret
push
negl
push
mov
dec
dec
mov
imul
bound
shr
jmp
lock
ret
jge
in
dec
jmp
in
add
fadds
and
mov
sar
mulb
adc
mov
push
jle
sub
mov
mov
mov
lcall
push
arpl
dec
into
daa
andb
and
dec
cld
mov
hlt
insb
adc
out
dec
jecxz
cmp
xchg
inc
shll
add
adc
sub
stos
outsl
inc
pop
out
adc
movsl
aad
test
xor
xchg
xchg
lea
fsubrp
jbe
adc
popf
jl
pop
test
icebp
pop
inc
sub
jge
and
jbe
dec
sbbl
and
ljmp
in
dec
js
mov
fs
push
adc
loop
loop
xor
pop
mov
or
dec
cmp
dec
popf
mov
mov
adcb
mov
outsl
inc
sub
call
add
ss
push
mov
cmp
vcvtdq2pd
movsb
lods
jne
lret
push
jne
test
xor
std
inc
stos
mov
dec
stc
nop
das
xorl
popa
addl
mov
ret
imul
lock
xchg
sub
cld
je
add
sub
lods
push
sbb
sub
lea
fcmovnbe
push
inc
xchg
push
jmp
sbb
scas
and
push
or
adc
enter
xor
out
daa
subl
stc
push
roll
xchg
xor
cmp
aas
or
call
dec
add
pop
pop
add
movsl
mov
or
lock
jns
jmp
ret
sbb
lods
sti
outsb
dec
sti
or
pop
dec
and
cld
pop
pop
adc
or
ss
hlt
std
inc
gs
sarb
jg
pushf
jno
inc
pop
rcrb
jbe
cmp
jns
jecxz
outsb
push
testl
aad
aaa
push
xor
sahf
dec
push
push
out
xchg
push
inc
add
add
push
mov
shll
int3
cmp
fstl
scas
inc
mov
cmc
cmp
mov
adcb
pop
negl
arpl
aas
mov
ret
lret
jb
or
dec
fsubl
stos
push
dec
test
mov
jg
ret
rorl
nop
cwtl
ret
xchg
data16
push
shlb
aaa
pop
lods
test
cmp
mov
fisttpll
mov
sub
dec
mov
dec
mov
je
sbb
test
sbb
scas
in
cmc
jmp
mov
add
loope
cmp
idivb
stos
or
std
lods
mov
rorb
loopne
jne
cmpsb
and
push
or
inc
jmp
mov
pop
sti
dec
test
btr
jge
in
movsl
jmp
mov
popf
loop
xlat
jp
adc
inc
xor
rol
sub
jge
xchg
test
cli
push
xchg
xchg
dec
mov
pop
popf
outsl
dec
lods
cs
dec
aaa
ss
mov
cs
jge
or
and
push
xchg
dec
pop
mov
add
loope
ljmp
test
loopne
xor
xor
sub
addr16
jle
jns
out
sbb
aad
dec
scas
stos
loope
into
fistl
add
stos
push
pusha
nop
ss
repz
sbb
adc
fisttpl
sbb
push
sahf
mov
sti
and
hlt
or
lret
std
inc
dec
cmp
cwtl
xor
and
lret
call
pusha
shll
ja
dec
loope
mov
pop
imul
fsubr
inc
mov
dec
mov
pop
push
shlb
cmp
stc
add
sub
pusha
pop
es
cli
js
mov
stos
std
arpl
imul
std
fdivs
loop
rolb
imul
scas
pop
pop
shll
cwtl
cmp
add
add
cmpsl
sbb
mov
mov
inc
jp
xor
int3
std
negb
sbb
in
in
int
push
and
jmp
gs
repz
repz
add
push
mov
jg
adc
mov
jg
mov
fwait
lret
das
mov
fistl
popa
aaa
and
bound
adc
mov
rcr
adc
imul
hlt
pop
cld
cmp
insl
andl
push
fsub
repnz
and
adc
lahf
test
jmp
icebp
das
lcall
xchg
out
inc
xchg
jmp
ja
mov
mov
lods
lods
out
popa
out
stos
xor
mov
and
sub
or
push
frstor
cmc
sbb
mov
sbb
adc
dec
incl
adc
jbe
out
lahf
out
push
lcall
nop
insl
test
mov
add
inc
sub
shl
push
idivl
outsl
stos
pop
mov
inc
cmp
test
cmp
mov
mov
pop
jne
jns
cmp
fildl
push
pop
clc
int3
outsl
rorl
xor
add
cli
dec
sub
xchg
fidivl
jae
fnstenv
cmp
data16
das
jb
into
mov
stos
dec
dec
imul
icebp
lods
adc
xorb
mov
pop
out
mov
sbb
adc
jp
fnstsw
xor
ret
or
dec
test
pop
stos
pop
rclb
out
inc
dec
jnp
shlb
pop
std
je
jnp
dec
aas
pop
dec
pop
int
rcr
and
push
pop
loop
test
int
call
and
mov
jp
jno
popa
sub
je
push
xchg
imul
push
repz
pusha
adc
xor
stc
push
jnp
push
lds
hlt
shll
ud1
lds
nop
insb
jl
ja
pop
sbb
mov
and
neg
xchg
fmull
and
outsb
inc
call
dec
lret
ljmp
push
rcl
cmp
fs
xor
push
nop
pop
aad
das
les
or
jbe
call
xor
push
mov
push
aaa
mov
inc
inc
daa
popa
cmp
sar
sub
cmp
ja
push
push
or
outsb
outsl
js
dec
dec
or
pop
lcall
nop
push
xchg
fcom
stos
addr16
sub
jmp
testl
sub
sbb
lea
mov
pop
cwtl
mov
call
dec
adc
rol
fists
lret
cmp
das
scas
sbbb
mov
cwtl
test
adc
std
cmp
cmp
outsb
xchg
outsb
call
push
aam
imul
mov
or
mov
push
or
in
jecxz
xchg
in
inc
mov
cmp
push
das
mov
rorl
add
adc
mov
add
pop
and
mov
pusha
hlt
cmpsl
rol
rep
cs
popl
xchg
es
sub
jle
mov
cmc
lret
out
and
ficomps
ja
push
fs
stos
and
stos
enter
std
hlt
cs
xchg
mov
gs
mov
or
xchg
sub
push
pushf
std
lods
push
outsl
cli
or
xchg
inc
sti
and
fisttps
mov
dec
mov
and
and
sub
add
je
test
xor
adc
mov
sbb
fwait
ss
mov
xchg
popa
mov
mov
nop
dec
int
lods
inc
arpl
es
push
jecxz
test
xor
lods
jecxz
inc
jbe
xor
or
mov
jb
xlat
jle
jg
lods
xchg
jmp
mov
addb
pop
or
shlb
into
add
xchg
ss
adc
inc
mov
std
andb
push
mov
jge
ljmp
cs
sbb
pushf
popf
mov
cwtl
sbb
js
bound
xor
push
cmpsl
sub
cmp
in
imul
jb
push
imul
xchg
test
clc
xor
mov
mov
sbb
jge
mov
adc
pop
pop
shll
push
adc
jbe
lea
lahf
std
sbb
and
jae
mov
sbb
outsb
je
pop
jge
mov
test
inc
dec
xor
clc
dec
movsl
lcall
aaa
sbb
xor
sub
inc
pop
mov
je
notl
mov
pop
test
xor
loopne
aaa
dec
int
push
mov
in
mov
cmp
xchg
dec
jae
faddp
mov
addr16
push
jne
cmp
mov
insl
dec
enter
jmp
add
mov
bound
je
add
cltd
or
in
or
lret
out
jl
ljmp
fs
idivl
lcall
pop
lahf
sub
or
int
daa
roll
ss
cmpsl
scas
xor
jae
xor
pop
stos
and
adc
push
jae
push
loope
fisubs
test
jp
das
test
cld
pusha
xchg
iret
hlt
bound
std
adc
and
lahf
inc
jecxz
in
jle
mov
cmpsl
xor
rcll
lret
cmpsb
xor
stc
lcall
mov
sbb
rcll
das
enter
popa
imul
cmc
adc
xchg
and
mov
call
push
pop
movhps
dec
push
loopne
out
rclb
pop
ret
inc
jp
ds
jmp
test
and
bound
fucom
call
cmp
add
shrl
in
cs
push
ja
fstpl
scas
xor
adc
jp
pop
fcoml
pop
cwtl
in
xchg
js
movsb
fisubrl
lcall
cmpsb
dec
cmc
enter
test
pop
mov
lcall
mov
loop
mov
mov
xchg
imulb
or
xlat
movsl
cs
jns
pusha
xorb
dec
in
pop
and
jge
aaa
or
rol
cmc
lret
push
xchg
adc
cmpsb
mov
cmp
pop
aad
pop
out
add
aas
mov
or
push
jg
out
or
insl
xor
int
dec
mov
add
sub
movsb
push
test
adc
dec
push
mov
inc
enter
or
rorl
inc
std
ja
jbe
sbb
cs
xchg
and
mov
sahf
stc
cmp
jge
add
outsl
dec
movsb
mov
or
dec
push
fdivrs
and
jns
aam
add
push
jns
les
and
mov
mov
fidivrs
cltd
xchg
mov
cmp
add
or
push
mov
adc
cmp
pop
jg
lret
das
in
jle
shl
filds
sub
add
jbe
lods
das
stos
loopne
push
xchg
inc
inc
jle
repz
or
lret
loop
or
into
inc
cmp
insl
ret
and
das
imul
lods
add
adcl
lods
js
sti
sbb
std
add
lock
ret
mov
mov
jbe
inc
shll
in
outsb
out
ds
or
pop
sub
or
inc
mov
test
in
call
mov
outsb
dec
scas
cmp
xchg
cmp
mov
mov
sti
dec
pop
push
xor
inc
testl
aaa
test
push
cmp
jmp
cmp
fistpll
sbb
aaa
jae
mov
or
adc
jns
lock
popf
dec
fistpll
xor
inc
jle
mov
jl
in
jo
lret
cmpsl
dec
mov
adc
aas
xchg
push
mov
mov
sbb
inc
mov
cmp
scas
std
arpl
or
mov
std
movsl
daa
cmp
mov
mov
jecxz
jnp
cmp
outsb
in
pop
mov
shl
fwait
sbb
adc
aam
inc
xor
aaa
sbb
stos
jns
mov
bound
or
inc
cmpsb
roll
sti
push
and
je
fwait
xor
and
pushf
stos
add
push
pop
aas
cli
mov
xchg
push
ljmp
cmp
iret
in
ror
add
adc
lret
sahf
mov
or
or
test
dec
icebp
jg
mov
shrb
push
idiv
cmp
cmp
divb
rcr
loope
pop
inc
je
hlt
sub
push
andb
popf
dec
jnp
xor
lea
inc
jmp
shll
fwait
pop
aas
pop
xchg
and
or
outsl
gs
push
movsl
mov
add
or
enter
lret
or
pop
push
aaa
ljmp
push
and
push
lds
sub
xor
sbb
fnstcw
jnp
lods
mov
sahf
loope
jne
or
sbb
or
fcmovne
pushf
roll
push
cmpsl
aam
sti
movsl
sahf
dec
sarl
daa
imul
popa
cmp
mov
frstor
jp
or
cli
fdivs
out
push
in
dec
mov
addr16
dec
fiaddl
sub
addb
test
pop
iret
flds
mov
or
outsl
jb
cmp
call
xchg
in
cmpsb
sub
cld
les
lds
leave
or
jecxz
jp
push
add
aam
mov
dec
int3
xor
mov
aas
dec
xor
cmpsb
hlt
sub
popf
jo
shlb
scas
mov
push
outsl
jbe
mov
je
cmpsb
mov
cmc
sahf
ss
dec
pop
inc
sub
bound
enter
sbb
push
jp
mov
and
pop
ret
loope
cwtl
gs
fistpll
mov
notl
leave
add
xchg
push
adc
sbb
outsb
pop
jbe
mov
popf
addr16
mov
into
inc
enter
divl
cmc
push
jle
mov
add
sbb
sbb
pop
push
int
cmp
outsb
add
pop
inc
jo
jne
mov
cmp
lret
out
add
arpl
or
or
inc
sbb
int3
addl
scas
insl
push
jmp
call
fwait
sub
pusha
jmp
out
xor
push
dec
subl
add
scas
in
lods
fbstp
jp
pop
imul
ja
aad
sub
ja
lret
movsb
mov
mov
pop
mov
iret
xchg
sbbl
aas
lods
sbb
lcall
cmpl
pop
fadds
and
sub
cmp
cmp
call
pop
fidivrs
and
outsb
rcr
sub
aad
neg
scas
out
push
cmp
pop
loopne
fs
pop
push
inc
dec
in
inc
fwait
gs
and
fwait
dec
dec
sub
xor
sub
cmp
dec
cmp
xchg
dec
jmp
xor
jp
jae
scas
fsubs
cmpsb
lcall
mov
cs
popf
xacquire
mov
out
cmpsl
out
outsb
hlt
jmp
shr
mov
xchg
jns
mov
push
xlat
mov
dec
cwtl
lahf
negl
pusha
stos
pop
mov
cld
xchg
pop
xchg
xor
jmp
sub
lcall
in
pushf
bound
jnp
mov
repz
inc
add
adcl
or
shlb
movsb
fdivrl
cwtl
sub
mov
add
cmc
mov
lock
cvttps2pi
xchg
stos
or
fs
pushf
insl
xor
sbb
xchg
testl
lock
push
xchg
ds
xor
cmpsb
jg
mov
inc
sti
add
cwtl
stos
test
cmpsb
stc
jbe
int
adc
enter
jmp
xor
cmp
pop
loope
and
dec
add
push
in
fisubrs
rolb
or
or
mov
cmpsl
fildl
fldlg2
sbb
addl
inc
mov
clc
movsb
jno
adc
cmp
adc
adc
xor
dec
gs
xor
shlb
repz
sbb
imul
rolb
fidivrs
popa
pushf
sti
sbbl
xlat
cmp
add
jge
adc
jno
lcall
cmpsb
cld
push
pop
push
je
iret
pop
aas
add
jne
je
adc
mov
and
cmp
lret
sub
mov
add
test
shll
xor
lods
pop
xchg
int
out
mov
ljmp
mov
scas
popf
lcall
movsl
jp
jmp
add
pusha
je
inc
and
ljmp
test
push
dec
cmp
mov
movsb
cmp
in
dec
xchg
ljmp
or
fldenv
sbb
sbb
lahf
ss
out
sbb
sbb
cld
xorl
sbb
cmpsl
add
push
dec
jno
dec
lea
test
ss
jle
jae
rol
mov
push
cltd
sbb
lock
addb
sbbb
out
out
or
dec
call
popf
idiv
repnz
dec
ljmp
jp
ret
fstp
pusha
add
adc
mov
jnp
jl
mov
jmp
pop
push
lret
popf
mov
xchg
ret
sbb
inc
xlat
mov
mov
jno
mov
pop
xor
mov
jge
icebp
repnz
push
pop
push
and
dec
mov
sbb
push
int3
lods
nop
movsl
outsb
dec
mov
insl
jg
xor
sbb
jne
or
push
lea
pop
fs
or
sub
jae
addr16
push
int3
push
fbstp
pushf
push
icebp
inc
xchg
push
inc
cltd
aas
xchg
repz
xlat
rcl
xchg
enter
jo,pn
ljmp
scas
popa
and
out
sub
mov
ret
into
repnz
jbe
xor
mov
scas
into
rcll
mov
popa
pop
lret
int3
dec
mov
cmp
xor
insb
mov
dec
cmovg
orb
ret
xorl
dec
adc
test
inc
and
adc
aam
jnp
testb
pop
lcall
popa
xchg
out
mov
mov
adc
mov
jmp
orb
inc
scas
mov
in
pop
dec
jbe
xor
adc
dec
lret
cli
scas
push
push
mulb
sub
je
aad
xlat
stos
mov
xchg
jle
call
xor
xlat
adc
mov
adc
test
mov
xchg
cmpsb
aam
and
loope
cmp
add
jg
push
mov
arpl
aaa
bound
jns
insb
int
mov
push
ds
mov
add
jge
jae
addr16
lahf
cmpsb
ret
pop
add
mov
push
ljmp
cmc
mov
and
fists
xor
ljmp
lahf
mov
cmpsl
nop
bound
pop
pop
loopne
cmp
or
inc
gs
push
xchg
mov
push
mov
mov
clc
lds
pop
inc
xor
add
cmc
repnz
sahf
or
outsb
adc
sub
sub
js
push
mov
mov
leave
fstpl
loopne
add
ss
shll
das
push
cmp
mov
jne
mov
and
out
mov
pop
jge
dec
sbb
cld
push
and
mov
pop
push
test
mov
adc
xor
push
scas
xchg
fmull
aas
push
adc
jp
xchg
xchg
shl
pop
cltd
mov
inc
mov
mov
xor
aad
xor
pop
test
xor
sub
mov
push
stos
jl
xor
scas
jg
xchg
test
mov
inc
or
xchg
push
andb
sbb
dec
hlt
sub
inc
sub
jecxz
fnstenv
jno
inc
mov
add
pop
inc
int3
mov
aad
int3
aas
fstl
clc
das
movsb
and
mov
jno
xor
pop
xchg
dec
into
inc
testl
sbb
adc
cmp
scas
jge
xor
dec
xchg
icebp
adc
es
jmp
les
jmp
divl
dec
iret
and
cmp
sbb
loopne
sbb
push
push
jge
push
stos
cld
loop
inc
jno
cmpsl
out
cli
mov
repz
test
std
popa
in
jg
or
js
mov
fimull
pop
sub
loopne
loop
hlt
mov
xchg
sbb
sub
xchg
icebp
rcrb
js
pop
add
or
add
ret
cmp
adc
sbb
adc
dec
fs
inc
inc
je
loopne
push
jae
mov
sti
shr
cmc
arpl
movsl
jge
dec
movsb
push
popa
les
or
inc
mov
loop
xchg
jbe
jmp
cmpl
aam
gs
jp
xchg
cmc
and
in
jecxz
fistpl
xor
insb
fsubrl
insl
push
push
test
mov
fisttpl
ret
mov
xor
icebp
pop
cmpsb
fsubr
push
decb
mov
xchg
arpl
lds
jbe
pop
out
sub
xchg
adc
loop
jle
mov
mov
xchg
pop
notl
xchg
es
push
adc
sbb
pushf
push
mov
ret
add
xchg
shrb
in
mov
aad
repz
js
jg
jns
js
mov
dec
fidivrl
popf
pop
lods
pop
pop
jmp
pop
imul
jp
push
jge
sti
int
stos
shl
imul
add
add
arpl
std
repnz
ljmp
xchg
bound
ljmp
add
loopne
fildl
adc
arpl
xor
inc
enter
pop
adc
aaa
outsb
add
inc
sbb
inc
mov
cld
idivb
sbb
mov
jl
lcall
scas
lods
out
gs
cmp
sbb
mov
sub
lcall
movsb
imul
lret
add
adc
inc
cwtl
xchg
jo
push
addr16
nop
cmp
jae
fildl
or
icebp
fmul
mov
sub
in
jne
adc
pop
lret
cli
push
xor
jns
js
mov
xchg
fnsave
addl
pop
mov
out
sub
shrl
mov
mov
dec
subb
jge
dec
test
je
cmp
rcll
jo
arpl
in
aad
lods
push
pop
mov
pop
into
mov
sbb
scas
sbb
mov
enter
mov
or
lock
js
in
or
daa
dec
adc
les
push
clc
movsb
sub
popa
enter
dec
jmp
mov
aaa
add
ja
add
xor
enter
imul
sbb
scas
mov
rolb
je
mov
jnp
loop
fwait
sbb
inc
das
xor
pop
rclb
pop
push
leave
lods
push
scas
ret
fsubrl
jne
int
aam
cmpsl
addr16
enter
dec
push
push
out
push
dec
insl
jle
cmp
pop
inc
adcl
daa
push
push
call
jne
repz
mov
pop
call
pop
and
fistps
insb
lock
cwtl
xchg
cmp
xor
mul
popf
mov
in
pop
aaa
rorb
rorb
dec
das
sub
ja
xchg
fstl
adc
adc
or
or
insl
mov
sahf
or
pop
jmp
pusha
jno
xchg
xchg
mulb
xor
cmc
push
pop
orb
mov
pushf
in
push
push
popw
or
xor
pop
jae
jge
mov
out
add
jo
push
or
insb
pop
push
clc
or
xchg
mov
aam
lds
fwait
enter
lods
and
shr
pop
sbb
fcmovb
push
stos
decb
ret
insl
ljmp
std
push
stos
stc
nop
in
das
add
pop
mov
out
push
or
dec
popa
roll
jb
sti
add
mov
pop
into
mov
inc
pop
std
mov
push
rcrl
jae
in
pop
in
inc
rclb
ljmp
mov
jno
mov
int3
sbb
movsb
mov
mov
loope
pop
mov
xor
jle
lahf
mov
xor
js
mov
add
repz
mov
cmp
push
jmp
addb
scas
pop
in
jno
clc
pop
lods
or
pusha
mov
js
loope
das
outsl
in
adc
fmull
mov
fcoml
add
inc
insl
adc
cmp
je
and
adc
push
mov
mov
mov
xchg
xchg
test
mov
sbb
mov
adc
fst
push
lods
jo
pop
xchg
cmp
cwtl
mov
add
out
loop
insl
icebp
push
mov
fisubl
inc
sub
sbb
push
sub
outsl
scas
fsubl
fwait
inc
xchg
cmpsl
rcr
lods
jo
fidivrl
mov
dec
mov
aam
mov
adc
mov
sbb
loop
cltd
es
mov
adc
mov
mov
mov
pusha
fadds
add
mov
nop
or
out
mov
lea
jecxz
call
mov
jg
jle
cmp
jg
movb
ss
adc
xor
fwait
sbb
rol
xor
xor
push
xor
dec
xlat
ds
jne
fldl
icebp
mov
jnp
hlt
leave
ret
vcmpps
mov
aam
cmc
aas
mov
popf
mov
mov
movsb
mov
movsb
ljmp
mov
xchg
movsl
call
cmpsb
jge
je
arpl
inc
pop
sbb
add
pop
es
lock
pop
outsl
or
dec
das
lds
lods
cmpsl
std
repz
xor
repnz
out
stos
frstpm(287
add
or
ss
mov
adc
std
leave
scas
push
mov
xor
jbe
xchg
xlat
xor
sbb
pop
dec
gs
pop
inc
push
loopne
adc
sahf
mov
mov
xchg
push
and
xorl
sbb
jecxz
pop
cmp
and
xchg
mov
push
fadds
add
xchg
push
loope
jb
inc
shl
fimuls
fidivrl
loop
in
repnz
test
jmp
and
sub
fidivl
out
dec
adc
sbb
cltd
push
dec
mov
out
mov
lods
push
notb
out
aam
mov
aaa
xchg
gs
push
xchg
add
xchg
leave
dec
lock
leave
ljmp
push
test
sbb
mov
daa
sub
adc
lods
jle
or
lret
in
lret
xchg
jle
mov
imul
mov
out
bound
test
adc
push
aam
loopne
mov
fsub
add
cmp
insb
das
mov
xchg
mov
ds
loop
jno
mov
rcrb
imul
lahf
jl
rorl
sub
fistps
dec
aam
pop
ljmp
sbb
add
pop
and
inc
test
fisubrs
filds
ja
inc
popf
mov
jne
xchg
frstor
jo
pop
add
xchg
add
insl
mov
ss
sbb
sbb
es
scas
mov
push
sub
fdivl
add
in
dec
aad
xor
jno
dec
sbb
lahf
cmc
jg
daa
pop
push
loopne
push
enter
leave
pusha
jo
xchg
fsubs
repnz
fs
xchg
xor
stos
testl
fucomi
push
lods
inc
in
jnp
or
xchg
xchg
jl
sarb
lea
lret
mov
test
sbb
add
xchg
data16
xlat
lods
cwtl
jg
cmp
mov
and
fdiv
loope
add
mov
enter
lcall
dec
mov
jge
lret
or
nop
xor
cwtl
fimuls
xchg
mov
sub
sbb
popl
shlb
add
loope
repz
mov
push
add
imul
and
enter
and
jmp
xchg
or
dec
pop
jae
xor
fcomi
inc
or
sub
cmc
jge
add
loope
insb
je
sti
in
es
call
imul
jp
sub
ret
fldln2
lret
xchg
inc
mov
bound
jbe
cltd
add
pop
xlat
fidivrs
jmp
stos
or
cmp
repnz
jl
iret
jo
xorb
neg
push
ret
ret
into
sbb
insb
out
aad
xor
xchg
lea
mov
add
fistl
adc
pusha
mov
imul
je
pop
out
mov
test
lds
dec
add
fcomps
call
mov
insl
add
into
jne
sbb
js
mov
icebp
pop
xor
ss
cmp
test
mov
sub
fdivr
sub
push
cs
or
arpl
jb
sbb
sbb
or
ret
pop
xchg
dec
pushf
add
or
inc
pop
insl
fistpl
push
stc
mov
mov
xor
cmp
fdivrl
or
inc
inc
lods
ljmp
mov
push
dec
loop
out
nop
or
roll
inc
add
mov
mov
xchg
mov
mov
sbb
cmp
popf
sbb
mov
xor
lret
and
inc
push
xchg
jnp
loop
adc
xor
mov
popf
mov
xchg
mov
sub
insl
inc
arpl
mov
aad
jle
jl
in
cwtl
mov
mov
or
fbld
adc
cmp
hlt
xorl
pop
and
icebp
frstor
sub
xlat
jno
mov
rorl
icebp
aad
in
notb
aaa
ror
adcl
bnd
adc
cmp
fisubrl
and
jbe
test
out
jnp
hlt
icebp
not
mov
dec
les
sahf
sub
mov
fs
xchg
mov
mov
ja
movsb
xchg
arpl
cmp
dec
mov
mov
and
cli
sbb
jnp
lock
xchg
mov
push
incb
push
ds
shll
jb
jg
add
loope
jae
sbb
movsl
out
ss
movsb
bound
stos
arpl
lcall
inc
push
cmpsl
fwait
movsb
dec
mov
repz
inc
pop
add
adc
imul
push
sub
inc
sbb
jns
imulb
cmc
inc
mov
fs
scas
mov
pop
dec
arpl
ljmp
loope
or
mov
add
test
xchg
pushf
cmp
dec
mov
jno
xor
and
xchg
inc
cmp
mov
push
ret
push
rorb
std
pop
inc
lds
rclb
xchg
int3
fs
aam
stos
and
mov
sub
or
sahf
mov
mov
lock
mov
sbbl
rcrl
scas
mov
dec
fadds
sub
notb
nop
lret
ja
or
ja
enter
sbb
out
push
mov
xor
jno
andl
and
adc
jmp
xor
stos
jbe
sbb
inc
cli
cmp
pop
dec
jmp
out
lock
pop
cmp
adc
loope
cmpsb
mov
stos
lcall
fcom
sbb
lcall
sti
test
jecxz
adc
xor
push
and
add
arpl
pop
add
shlb
aaa
cmp
xchg
mov
jecxz
fnstcw
icebp
xchg
ret
cmp
daa
dec
sbb
xorl
adc
sub
push
adc
and
fcoml
inc
xor
fstpt
mov
int
sahf
push
icebp
jl
xchg
dec
and
nop
insb
lods
pop
cwtl
pop
dec
xchg
lds
outsb
pushf
xchg
or
out
dec
imul
sub
cmp
loop
sub
push
mov
cmp
aad
cld
outsb
xor
iret
fisubs
jl,pt
jnp
mov
popa
inc
sub
mov
fsubrs
inc
or
pop
loop
add
jno
mov
clc
in
xchg
jns
mov
or
jmp
das
pop
fwait
xchg
or
hlt
jg
adc
jl
imul
mov
lret
lcall
outsl
out
aas
add
dec
fisubs
pop
inc
fdivs
inc
push
xlat
ss
xchg
dec
in
push
jl
add
mov
and
cltd
jne
pushf
imul
push
xor
fwait
xchg
xlat
sub
pushf
fldenv
pop
mov
lea
sub
cmc
mov
or
cmpsl
or
push
test
std
xchg
pusha
ds
lret
mov
out
lods
insl
hlt
inc
sahf
pop
icebp
sahf
imul
jo
sub
add
or
add
xchg
outsl
inc
aaa
dec
fadds
inc
push
aaa
cmp
inc
andb
cmp
sbb
and
int
adc
insb
adc
jl
mov
aad
push
scas
push
inc
mov
rcrb
pop
shll
pushf
xchg
frstor
filds
xchg
lcall
or
mov
mov
inc
or
ds
loope
mov
paddsb
cmp
mov
and
sbb
fcmovbe
pop
inc
out
in
pop
jns
mov
sbb
mov
mov
mov
or
sub
mov
mov
popf
inc
insb
mov
push
and
mull
test
pop
mov
lcall
mov
sub
fcoml
shrb
pop
mov
dec
into
cs
lods
or
stos
inc
lods
adc
mov
pop
mov
aad
mov
add
pop
jbe
mov
lods
pop
ljmp
shll
jge
jnp
hlt
sbb
addr16
inc
rolb
in
ljmp
dec
fwait
mov
mov
das
add
xor
push
popf
dec
push
and
mov
in
xchg
mov
mov
pop
out
pop
ret
mov
scas
es
arpl
pop
adc
fildll
adc
lods
rol
cmc
pop
dec
jle
mov
idivl
dec
jno
or
pop
jecxz
jmp
sub
pop
test
fldl
movsb
mov
popa
fimull
add
lds
adc
xchg
adc
sub
leave
cmp
xor
ret
fucomi
or
push
subb
rorb
je
dec
inc
mov
fsubrl
mov
aas
cmovbe
adc
xchg
repz
add
jb
mov
or
jae
push
inc
push
aas
xchg
xchg
sbb
icebp
clc
mov
push
frstor
and
sub
push
xlat
addb
push
mov
les
mov
mov
or
cmpsb
outsl
ljmp
push
jbe
lock
popa
add
mov
ret
jno
or
push
mov
jl
xor
fistpll
fld
dec
sub
repz
and
mov
xor
aam
iret
cmp
xchg
cmpb
scas
push
fsts
scas
in
adc
sub
mov
imul
cmp
cmpsl
jecxz
scas
scas
xchg
pushf
inc
jbe
pop
and
push
mov
movsb
aas
aad
addr16
and
pop
add
fstl
stos
pusha
cmp
push
out
push
pavgb
cmp
and
xor
std
movsb
pop
sub
inc
cmpsl
cld
mov
ds
cwtl
dec
add
adc
das
stos
shlb
sbb
and
mov
mov
movsl
dec
lahf
xor
pop
mov
mov
push
adc
xlat
xor
out
sbb
das
mov
test
sbb
rcrl
inc
dec
fldpi
in
cmpsb
push
lahf
sbb
or
dec
lcall
aas
out
ds
dec
imul
out
stc
mov
outsb
das
xchg
jb
and
or
inc
addr16
xchg
lds
je
dec
divb
cmp
mov
mov
fcmovnbe
nop
push
cmc
testl
and
int
xchg
mov
and
cmpsl
imul
mov
int
test
std
cld
cltd
pop
lds
test
jmp
shlb
mov
scas
out
mov
icebp
inc
aas
or
in
ja
xchg
mov
loop
push
cmp
aaa
push
pop
adc
push
push
xor
add
jno
adc
jne
sub
ja
cmc
push
cmp
adc
cltd
mov
insb
movsb
mov
add
lds
fpatan
pop
xor
das
in
jns
adc
fwait
mov
sub
clc
cwtl
adc
pop
movsl
sub
arpl
subb
sbb
pop
sub
ret
mov
xchg
aad
lods
das
push
and
arpl
lock
hlt
jns
sub
push
sub
mov
mov
data16
or
aas
cs
xchg
jae
cmp
hlt
dec
nop
jb
out
aam
in
dec
das
pop
cmp
xchg
rol
data16
aad
jbe
sahf
mov
dec
sub
js
or
dec
movsl
movb
mov
cwtl
gs
jmp
lods
sub
mov
jge
and
cmp
dec
lcall
cld
fdivl
mov
data16
push
inc
jo
push
notl
or
in
jg
repnz
xlat
mov
and
imulb
adc
pop
jae
jne
popa
jecxz
je
xor
adc
pusha
mov
pop
and
mov
insb
dec
inc
ret
push
push
cmp
movsb
in
jae
cs
test
je
or
clc
cltd
test
push
xchg
mov
test
xlat
repz
xor
jnp
push
jns
sbb
inc
push
xchg
mov
push
push
sbb
lret
in
cld
xor
lds
jno
pop
test
pushf
pop
mov
rcl
dec
xchg
push
rcrb
cli
roll
push
mov
inc
test
lods
orb
jmp
sarb
sub
cs
mov
stc
and
test
sub
fstps
cmp
movsb
add
jle
push
shll
lods
fcomi
add
mov
outsb
sbb
loope
cli
jecxz
pop
ds
adcb
add
pusha
mov
das
pop
jg
adc
mov
mov
loop
jnp
cmpsb
push
jb
mov
mov
adc
xchg
rcll
jbe
in
add
push
jne
xchg
sub
adc
scas
jo
mov
pop
xchg
jge
popa
and
or
mov
cmpsl
mov
jo
adc
mov
pop
mov
jge
popf
lods
nop
pushf
jmp
sbb
aad
lock
xchg
test
pop
enter
xchg
std
mov
test
dec
das
cltd
dec
push
mov
scas
loop
mov
mov
data16
mov
xchg
xchg
and
pop
push
sbb
sub
ffree
jnp
les
xchg
fcompl
jbe
js
jle
add
out
aas
dec
popf
nop
jmp
sub
lret
xchg
jmp
stc
cld
cmp
cmp
mov
js
lods
xorb
lds
outsb
das
aas
in
rorl
mov
xchg
subb
or
clc
jle
in
stos
add
or
lret
mov
ret
sub
adc
cmpsb
xchg
inc
cmc
movsb
mov
fstpl
jge
xor
mov
push
bound
loop
push
jbe
sbb
push
inc
test
add
adc
mov
fistpl
adc
or
je
sub
repz
test
fs
dec
sbb
push
inc
add
pushf
orb
adc
imulb
mov
lods
fistpl
loop
pop
push
xchg
add
inc
cmp
psrlq
test
out
xchg
int
into
pop
mov
cmpsl
push
stos
negb
inc
or
xchg
cli
jno
xchg
mov
jo
jle
stc
xor
cwtl
ja
mov
push
adc
jo
add
mov
fistl
sub
outsl
mov
xchg
adc
and
adc
sbb
mov
jg
into
and
mov
fmull
xor
insl
je
mov
imul
pop
xor
aad
push
xchg
in
insb
jns
jo
dec
sub
imul
sti
cmpsb
push
or
out
pop
fcompl
rol
lds
and
into
ja
xor
inc
or
decb
cwtl
fs
sarb
stos
adc
xor
inc
cmp
clc
je
mov
gs
push
cwtl
test
pop
xor
mov
scas
pop
dec
pop
or
xchg
stos
dec
add
sub
in
outsb
jmp
sub
ja
jle
lock
divb
xchg
mov
fstl
lcall
adc
adc
mov
lret
or
mov
cmp
sub
inc
xchg
frstor
dec
dec
rol
mov
fsubrs
xor
fwait
loope
add
in
and
inc
dec
jle
fldl2t
cmp
inc
pop
mov
decl
sub
stos
ds
shlb
adc
pop
jnp
pop
push
lret
xor
int
test
xor
mov
mov
lahf
jg
cwtl
inc
lock
ret
enter
xchg
dec
jbe,pt
sarl
test
push
int
mov
or
and
sarl
out
mov
cmp
mov
popf
push
mov
mov
pop
stc
rcr
into
mov
push
ljmp
push
cmp
cmp
ret
or
gs
fnstsw
fsts
imulb
lods
jmp
pop
mov
jl
ljmp
sbb
cmpsb
into
sbb
xlat
sar
sbb
and
cld
mov
enter
shlb
or
ja
stos
lahf
bound
in
xchg
and
bound
movsb
inc
lcall
pop
clc
inc
add
shlb
bound
ds
iret
mov
sbb
mov
leave
lahf
ja
pop
enter
repnz
mov
xchg
add
mov
testb
adc
add
test
loopne
int
jg
inc
and
inc
xchg
xchg
sti
mov
or
pop
sub
adc
punpckhbw
addr16
sbb
scas
push
lcall
test
dec
mov
mov
adc
aas
or
mov
mov
hlt
inc
push
into
push
and
inc
xor
inc
dec
enter
xchg
mov
jne
movsl
out
or
fstps
push
leave
sub
inc
call
mov
xchg
push
sbb
mov
sbb
int3
daa
add
fcmovu
sbbb
and
cmp
xor
xchg
js
xlat
fxch
std
sbb
inc
push
daa
test
fadd
xchg
and
imul
push
pop
insb
or
in
adc
pop
jnp
add
repnz
icebp
add
cmpl
les
out
scas
test
pcmpgtb
loop
pop
cmp
mov
and
or
fdivl
and
into
repz
add
push
dec
rcrl
sub
mov
daa
cmp
ds
add
xchg
or
cmp
retw
jns
mov
lahf
and
jne
mov
aas
repnz
xor
xchg
mov
or
mov
mov
dec
test
nop
pop
xor
cltd
repnz
sub
punpcklwd
int
jge
pop
mov
outsl
cmp
xchg
imul
dec
mov
xor
andb
xchg
cltd
mov
inc
sbb
or
add
cmc
jb
ret
insl
ss
cmpsb
and
sahf
push
sti
or
inc
push
dec
adc
cli
sbb
outsl
dec
jns
push
scas
stos
jns
fsubs
fimull
adc
or
stos
lahf
or
push
insl
adc
dec
fildl
outsb
nop
shr
mov
push
scas
push
xor
pop
fs
pop
jnp
and
test
and
dec
add
push
add
or
rclb
cmpsb
or
stos
xchg
cld
scas
adc
adc
cmp
mov
icebp
incl
cld
je
push
js
cmpsb
sbb
daa
loopne
pop
pop
pop
add
outsl
mov
sub
add
dec
psrad
rclb
jbe
call
cmp
push
mov
fwait
sub
das
sbb
push
cmp
testl
xchg
dec
mov
rorb
movsb
test
and
mov
push
mov
sbb
push
cmc
stos
inc
mov
pushf
fisttpl
cmp
insb
cwtl
fisubrl
mov
xchg
iret
fcmovb
lahf
jae
add
xchg
push
push
xchg
subb
jg
and
dec
ds
ss
out
pop
icebp
in
sbb
out
popf
mov
mov
xchg
ja
push
add
fistpl
fxch
pop
or
std
loop
push
xchg
in
add
aam
push
pop
pop
stos
pop
add
inc
or
lret
daa
add
test
mov
arpl
push
add
imulb
outsl
fiadds
mov
fsubrl
je
ficoms
scas
sub
mov
jns
jge
pop
inc
imull
movsb
mov
loopne
insb
popf
mov
mov
scas
and
adc
call
xchg
mov
mov
dec
xor
xlat
mov
jmp
jmp
mov
mov
js
xor
sbb
jno
pop
jae
in
imul
or
lods
insb
adc
xor
jmp
test
push
and
xor
mov
cltd
sub
out
mov
sbb
call
push
cmc
push
xor
inc
mov
fucom
mov
cli
cmc
std
push
lods
pop
dec
test
sbb
mov
imul
repnz
push
dec
shlb
adc
test
sub
int
jg
adc
iret
scas
xchg
inc
test
je
cld
pop
pop
sub
sub
addr16
enter
sub
jb
push
popf
rcl
filds
pusha
int3
inc
incl
adc
adc
pop
fisubrs
or
add
jo
or
inc
out
js
sti
cwtl
lods
sbb
xor
pop
out
push
mov
add
je
pop
push
rol
jl
stos
aam
xchg
out
jno
js
xchg
pusha
pop
out
nop
pushf
add
push
int
sub
ljmp
jp
lcall
mov
dec
testl
xchg
lahf
addr16
cli
and
sti
add
cmp
add
mov
arpl
in
aam
lods
push
pusha
sub
gs
nop
jle
pushf
ljmp
sbb
xchg
into
adcb
inc
and
subl
aad
lea
pop
ret
mov
cmpsl
dec
push
mov
sbb
xor
jb
nop
push
cmpb
lahf
or
aaa
push
xor
in
dec
fwait
mov
rcl
mov
mov
jge
xchg
xor
aaa
adc
addl
aam
adc
fidivrs
mov
loop
xchg
int3
stos
cli
inc
aad
dec
inc
fmull
xchg
or
xchg
mov
adc
fbld
rorb
popl
mov
daa
aam
inc
pop
mov
addr16
stc
iret
pop
mov
xchg
pop
sub
mov
xor
adc
xchg
pop
add
test
stos
xchg
mov
pop
push
xor
adc
fsubrs
xchg
mov
rcrl
data16
adc
es
fcoms
xchg
lods
aad
inc
mov
mov
dec
push
mov
fisttpl
outsb
out
sbb
in
sub
sbb
shrl
mov
xor
cmp
das
nop
movsl
addl
xchg
mov
out
lcall
inc
xor
mov
push
ljmp
mov
fsubs
add
test
aas
es
mov
inc
icebp
mov
or
jp
sbb
sbb
mov
mov
scas
out
jnp
inc
loop
outsb
cmp
aam
xor
scas
imul
xchg
push
adc
pop
mov
gs
repz
aam
pop
pop
sbb
mov
popf
and
jg
add
ret
mov
push
loopne
add
shll
ret
cli
and
or
insb
and
jp
mov
mov
add
push
sbb
ds
sbb
and
dec
call
aam
jg
test
and
xchg
pop
dec
aas
jge
pop
ljmp
loope
arpl
pop
dec
lock
lea
dec
or
dec
jb
inc
test
movsl
ret
inc
sbb
or
repz
dec
loope
ljmp
inc
xor
sub
jl
inc
mov
stc
das
jae
repnz
sbb
movq
xchg
pop
es
cmp
push
fdivrl
pop
pusha
mov
jae
sbb
fisttps
sub
dec
je
call
rep
and
jecxz
or
push
incl
jecxz
icebp
adcb
test
xchg
add
ret
dec
out
lock
invd
inc
mov
out
cmp
push
nop
add
pop
push
ret
pop
add
cmp
jl
mov
mov
or
xor
xchg
adc
push
jns
lahf
xchg
repz
mov
xorb
mov
fistpl
ja
stos
xchg
insb
sub
wrmsr
leave
mov
jle
mov
inc
ret
jge
xchg
sahf
lods
xor
aaa
das
mov
cmp
sbb
fwait
inc
dec
sub
sub
fcomi
xchg
mov
jb
push
fildl
xor
mov
xchg
push
cmpsl
mov
adc
sbb
jecxz
xor
fs
mov
mov
hlt
mov
in
inc
fistps
mov
adc
pop
and
addr16
xor
adc
jl
aas
cmpsb
ret
lock
fildl
mov
add
test
jmp
dec
sub
into
push
sbb
subl
aaa
adc
loopne
inc
push
mov
mov
in
jb
xor
mov
jb
repz
pop
lret
mov
leave
nop
cltd
andb
mov
clc
aam
mov
popa
mov
cmpb
adc
aad
cmpsl
jg
cmp
push
hlt
ret
ss
scas
and
or
fisubl
jle
aaa
sub
jne
shl
push
pushf
xchg
or
iret
jae
mull
loope
notb
jmp
shll
int3
movsb
xchg
mov
push
sbb
mov
and
iret
movsl
jp
sub
iret
or
mov
xor
mov
gs
fcmovbe
imull
mov
ficoml
lods
addr16
jne
sbb
clc
idiv
nop
das
sbb
stos
cmp
fldt
add
cmc
mov
negb
push
jno
int
inc
out
mov
aam
les
test
fisubrs
arpl
imul
pushf
insb
daa
xor
jbe
mov
shlb
cld
mov
lods
shrl
jle
cmp
cmp
sub
es
mov
cmpsl
icebp
push
lcall
add
mov
xor
insb
fildl
xor
rcrb
mov
addr16
sub
das
out
mov
rolb
dec
dec
mov
es
add
or
push
stos
add
ret
sarb
repz
push
xor
loope
mov
not
inc
mov
shlb
scas
inc
mov
std
ret
in
jo
fdivrp
xor
inc
dec
xchg
mov
mull
movsl
movntq
cmpsl
je
and
and
in
out
push
pop
dec
push
mov
lods
lods
pop
daa
and
test
faddl
push
push
stos
dec
js
or
insb
enter
lret
mov
repnz
popa
xor
fwait
mov
imul
cmpl
inc
ret
xchg
mov
pop
sbb
gs
loope
loope
pop
insl
cltd
test
adc
stos
mov
push
test
jge
and
divb
fdivs
imul
popf
and
mov
pslld
ja
dec
aam
clc
sub
lea
mov
cmp
les
cltd
lock
jnp
dec
sahf
cmp
lret
mov
push
xlat
dec
loope
fidivrs
push
lea
or
inc
leave
pop
ss
push
inc
fidivrl
sbbb
stos
sarl
xchg
and
les
lds
fwait
add
loopne
fisttps
mov
dec
adcl
in
mov
mov
adc
loopne
icebp
mov
xor
dec
lods
inc
and
push
inc
push
jl
jae
mov
mov
andb
mov
int
loop
jb
pop
mov
xchg
es
jg
xor
hlt
aas
lods
or
mov
add
jle
das
pop
xchg
in
xchg
mov
mov
push
pushf
adc
repz
not
sbb
mov
and
pop
mov
fucom
push
xchg
mov
loopne
pop
mov
inc
repz
xchg
mov
xchg
jmp
push
aaa
daa
xor
cmp
scas
cmpsb
add
inc
xor
sbb
icebp
sub
lea
sbb
iret
hlt
sbb
push
scas
jmp
mov
dec
sbb
inc
jmp
push
add
das
or
lcall
inc
sub
enter
xor
mov
cltd
xchg
in
scas
les
push
jnp
xchg
and
inc
std
dec
sbb
faddl
inc
and
jmp
test
push
movsb
mov
or
movsb
xchg
xchg
cmp
adc
dec
mov
push
in
push
movsb
fcoml
mov
mov
and
cmc
lds
sbbl
or
sbb
iret
ljmp
jo
sub
jp
sub
dec
std
or
push
push
fistps
xor
mov
xchg
and
sub
adc
mov
fstl
mov
adc
orb
jo
jge
sbb
cmp
sub
push
cmp
imul
insb
mov
pop
jle
sbb
les
cmc
or
pop
mov
xor
pop
cltd
insb
das
xchg
sub
ret
dec
dec
rcr
mov
add
ds
xor
sub
fildl
dec
jge
mov
xor
xchg
jbe
pop
pop
pushf
out
sub
outsl
ljmp
je
xlat
or
in
xchg
ss
ret
push
push
or
cmp
clc
dec
mov
mov
mov
fnstsw
out
xor
sub
jle
jecxz
lods
ds
ret
aas
out
sub
scas
fldl
and
loopne
in
jns
test
loopne
or
clc
outsl
mov
jecxz
mov
dec
ljmp
push
mov
nop
and
sub
lock
jo
add
sbb
pop
sarb
sbb
ret
scas
pushf
movsb
roll
rcrb
push
and
fcomip
or
nop
dec
xor
xchg
imul
in
cs
jle
xor
fwait
dec
lret
or
or
push
inc
inc
mov
add
sbb
enter
mov
cmpsb
test
dec
call
pop
hlt
in
push
sti
or
xor
add
mov
shl
aad
xchg
pusha
and
lret
sbb
jecxz
mov
test
std
mov
dec
rol
lods
adc
mov
add
in
adc
cwtl
mov
xlat
test
rcrl
and
adcb
mov
arpl
sar
cmp
inc
in
mov
jle
sbb
js
cmp
mov
cmp
es
adc
inc
pop
jl
pop
push
hlt
and
sbb
mov
push
dec
inc
xor
notl
insl
cs
sbb
dec
xlat
shrb
mov
mov
leave
cmp
jnp
and
mov
jnp
xor
push
xchg
mov
cld
mov
adc
adc
inc
ja
xor
add
in
push
push
jmp
les
and
cmpsl
popa
adc
scas
inc
xchg
xchg
dec
jne
mov
adc
xor
adc
sub
fcompl
sbb
sarl
repnz
je
xor
loopne
adc
sarb
mov
in
pop
sbb
mov
xor
push
mov
movsb
aam
jmp
xchg
repnz
ss
push
in
add
les
push
imul
xor
iret
and
roll
ret
adc
test
pop
cmpsb
fstpl
out
ret
test
sub
add
mov
adc
repnz
fistl
ret
imul
bts
pop
aad
test
cmp
lods
mov
cmpsb
pusha
push
jecxz
and
adc
lods
xchg
dec
mov
mulb
mov
adc
lea
sbb
and
dec
sbb
and
cmp
popl
sub
mov
nop
fdivr
jne
pop
xorb
fnstsw
xlat
inc
mov
imul
mov
cld
xchg
das
xchg
push
xchg
ret
and
sub
xchg
movsb
in
icebp
and
push
cmc
repz
xor
sbb
mov
jbe
jno
aaa
xchg
imul
das
cmc
jae
mov
sar
lock
add
or
scas
loop
xorl
mov
jmp
jb
add
pop
test
in
push
int
mov
or
notl
jmp
mov
mov
xchg
test
mov
bound
btrl
mov
adc
or
cmp
push
lret
cld
or
cmc
mov
ror
and
lea
sahf
xor
pop
arpl
rol
mov
or
push
dec
mov
add
lods
dec
dec
adc
fistpl
mov
imul
sbb
out
mov
dec
in
cwtl
aaa
jns
insb
shll
and
je
mov
std
and
pusha
mov
sbb
fiaddl
mov
fnstsw
lcall
mov
nop
jp
jae
sarb
es
push
mov
push
jo,pn
adc
aaa
push
xchg
mov
or
adc
mov
hlt
subl
bound
xor
enter
mov
mov
pop
dec
imulb
loop
cltd
xchg
insl
js
xor
rorl
loope
movsl
adc
mov
shll
outsb
and
dec
les
inc
adc
xor
fistl
mov
addb
mov
mov
cld
sub
xchg
sub
decl
inc
shlb
and
pop
mov
push
xor
inc
lret
add
imul
inc
jg
andl
adc
inc
insb
inc
adc
out
xchg
ret
lret
ja
sbb
es
push
sbb
in
ds
cmp
dec
add
adc
in
sbb
lods
cli
push
in
dec
mov
loope
mov
and
inc
je
inc
sbb
add
out
loope
and
in
cmpsb
roll
mov
dec
push
lea
sbb
jp
fcomip
inc
andb
dec
pushf
fimull
in
mov
mov
inc
mov
lds
and
push
stos
mov
aad
push
sub
xor
clc
sbb
das
pop
mov
pop
fldl
out
int3
pop
xchg
loopne
xor
cmp
ret
xor
aaa
and
cltd
push
sub
cmpsb
lret
xchg
jb
push
inc
into
leave
in
jg
fstl
cmpl
and
adc
jns
xor
lods
inc
mov
pop
xchg
jg
dec
inc
mov
mov
pop
adc
xlat
shlb
mov
ja
mov
sbb
pop
jnp
fs
into
movsl
jp
fdiv
cmp
mov
mov
scas
incl
gs
test
cs
cmp
pop
mov
jb
negl
cmp
pop
push
aas
sbb
mov
sub
ja
add
xchg
mov
sti
popf
divl
jno
mov
ror
inc
sub
lods
pop
int
mov
pop
mov
adc
fs
int
das
xor
adc
mov
popa
mov
mov
adc
pop
jo
adcb
in
loope
or
xlat
push
mov
mov
clc
mov
imull
shrl
sahf
or
mov
xchg
mov
jmp
xor
or
adc
lcall
pop
ret
icebp
mov
mov
jno
jae
jmp
popf
test
push
mov
pop
xchg
inc
popf
imul
add
mov
inc
pop
jns
movd
pop
push
or
sbb
jecxz
xor
cmpsb
xor
sub
cmp
sub
int
lds
or
sti
fldenv
leave
sahf
or
les
filds
pop
rclb
pop
es
addr16
cwtl
xor
in
sub
in
jno
lds
mov
icebp
ret
inc
jg
pop
add
dec
negl
push
sbb
outsb
mov
ds
jno
notb
and
xor
cmpsl
jecxz
ljmp
pushf
mov
data16
icebp
clc
fstl
inc
pop
push
adc
xchg
imul
fucomp
sbb
aad
cmp
xor
pop
test
aad
push
insb
test
xchg
movsl
mov
stos
out
jae
lret
inc
lret
cmpsb
and
divps
dec
fidivl
pop
std
push
mov
push
mov
mov
lret
push
push
test
sti
imul
or
les
push
test
int
es
mov
mov
not
lret
adc
or
aaa
push
jmp
sub
xor
inc
dec
push
cmp
push
inc
test
pop
inc
cmpsb
mov
dec
cltd
jnp
dec
mov
add
jmp
stos
inc
repz
push
aad
in
pop
cmpsb
pop
dec
mov
sbb
jae
arpl
or
dec
das
das
aam
cmp
mov
xor
test
sbb
mov
sbb
lods
in
cmc
aad
in
and
or
inc
js
jecxz
xchg
pusha
in
jp
mov
loop
cmp
xchg
and
jl
fdivrs
xor
mov
imul
sbb
mov
mov
fldt
xor
movsb
mov
add
or
mov
scas
or
push
xor
push
cmp
jne
pop
add
sub
push
enter
data16
gs
jbe
pop
daa
mov
sti
jecxz
push
pusha
arpl
mov
std
popf
stc
or
sub
repnz
ss
mov
pop
and
push
sbb
vcomiss
jmp
test
jne
pop
rcl
daa
iret
mov
xchg
jo
das
scas
ficomps
cwtl
movl
pop
dec
loopne
test
inc
push
xchg
sbb
cmp
xor
dec
push
cmpsb
mov
or
addb
xor
dec
bound
dec
cli
adcl
or
movntq
out
xchg
enter
repnz
jecxz
aad
lahf
and
jo
sbb
jbe
jnp
fsubs
lret
dec
dec
movsb
cwtl
std
sbb
sub
mov
and
jno
mov
cmpsb
test
and
fsubs
jne
dec
scas
cmp
test
push
inc
pushl
jge
hlt
mov
lods
mov
xor
out
movsb
shl
ret
dec
pop
mov
sub
sub
push
push
rcll
cmp
ret
fdiv
jbe
push
sbb
outsl
movsl
cli
and
popa
pop
shlb
or
scas
pop
in
or
je
loopne
cs
shll
cmp
xchg
jns
es
movzbl
add
test
sub
ss
dec
mov
cmpsb
add
mov
int
fstl
mov
negl
enter
and
ja
jmp
in
in
mov
rorb
jns
mov
aaa
jb
xchg
jb
lret
xchg
mov
push
inc
std
push
add
pop
sbb
jne
mov
add
mov
movsb
imul
sbb
and
test
cmpsb
aas
fistpl
pop
out
int
pop
inc
or
push
mov
xor
cmp
inc
call
mov
int3
fcom
ja
mov
pop
inc
test
sub
ja
and
leave
jne
cmpsb
gs
test
jne
add
lret
xor
dec
mov
xchg
push
jnp
loopne
mov
scas
sub
push
pop
push
repnz
cmp
outsl
and
add
ljmp
fidivrl
mov
push
push
not
adc
add
sbb
sbbb
stos
lods
sub
sbb
mov
hlt
out
lahf
popf
insl
xlat
in
insb
xor
sbb
adc
jns
and
mov
or
je
mov
test
and
mov
push
lods
mov
aaa
xor
mov
sbb
fucomip
and
sbbb
mov
fsubrs
adcl
pusha
imul
sub
mov
inc
xor
mov
insb
mov
fiadds
sub
inc
mov
pushf
and
sub
inc
sti
xlat
or
fwait
mov
mov
push
popf
decl
faddp
sbb
cmp
mov
xor
pop
cmp
and
and
fstl
add
iret
in
jo
mov
mov
dec
push
pop
es
into
movsl
in
daa
and
in
stc
lds
or
add
cmp
aad
adc
cltd
push
cs
repnz
xor
out
shr
add
adc
inc
mov
bound
cmpsl
int
daa
push
inc
lock
jg
xchg
iret
popf
sub
add
sbb
push
pop
aad
cmp
es
repz
xchg
ficoms
adc
lods
mov
inc
jp
lock
imul
jl
jp
divl
jne
outsb
sti
jne
jmp
flds
fildl
or
xor
enter
cmp
xor
mov
jno
ss
mov
jge
cmp
fnstsw
loop
xor
cmp
in
cltd
pop
xchg
scas
inc
pusha
scas
into
mov
and
loop
cmp
push
mov
testb
xchg
lods
lds
out
and
outsl
mov
int
mov
push
dec
ds
rclb
fdivr
or
mov
cmp
sti
insb
shll
bound
and
push
dec
and
les
test
xor
and
dec
xor
mov
xchg
xor
scas
insl
rcll
cmp
cmp
pop
xor
ss
insb
xorb
jmp
adc
pop
push
pop
test
incl
int3
mov
cmp
inc
out
lods
clc
int3
push
loope
fimuls
out
push
sbb
pop
arpl
in
push
mov
add
pop
mov
jbe
mov
jae
in
xor
lcall
or
cmpsb
je
and
popl
mov
fsubrp
mov
jno
push
data16
and
pop
push
dec
movsb
fnstcw
sbb
sbb
xchg
pop
stos
pusha
jp
jnp
sbb
xor
loopne
add
lret
mov
cltd
add
imul
enter
into
addr16
pop
cmp
dec
cmp
fidivrl
push
cmp
mov
lods
out
mov
jae
into
jmp
or
ljmp
test
ror
lret
fsub
in
shrl
dec
or
xchg
arpl
in
jmp
loopne
dec
fucomip
call
mov
jecxz
sbb
mov
mov
dec
je
leave
and
and
inc
inc
push
xchg
inc
andnps
decl
or
add
cli
arpl
and
fstp
inc
mov
out
push
jl
outsb
stos
push
js
add
cmp
jnp
adcb
aas
inc
xchg
shll
xchg
repz
fs
lahf
inc
cmc
aad
xchg
jp
sahf
test
add
dec
orl
cmpsl
xchg
mov
les
dec
stos
cltd
inc
addr16
mov
nop
hlt
aas
fsts
cmc
push
mov
cli
fldenv
or
add
pushf
lods
push
mov
inc
dec
into
mov
adc
add
lock
ret
push
rol
ficompl
add
test
vcmppd
lahf
cmp
shr
inc
or
adc
xor
scas
addr16
mov
jo
mov
sub
addr16
fsubs
bound
cmp
out
inc
fistps
das
idivb
mov
xchg
stos
std
sub
push
mov
cs
subb
push
mov
lret
adc
push
jnp
insb
test
das
repz
inc
dec
mov
or
and
inc
pop
jp
cmpsb
and
jae
test
xchg
psrlq
mov
ret
or
insb
cwtl
js
inc
mov
mov
in
in
lret
pop
xor
cmp
push
jmp
aam
sbb
adc
and
pop
enter
scas
inc
push
fcomps
test
and
mov
in
mov
pop
push
in
fisttps
dec
push
add
mov
push
pop
mov
xchg
clc
outsb
dec
outsl
pop
add
add
repnz
pop
xor
movsl
in
adc
cmpsb
adc
scas
imul
inc
lcall
out
dec
mov
lock
test
cmp
jp
dec
push
mov
int3
xor
cwtl
xchg
adc
scas
test
aaa
mov
and
int
sub
jg
and
xor
mov
inc
xchg
dec
in
xor
sbb
jnp
scas
mov
xchg
aaa
mov
aad
out
and
mov
push
adc
push
pop
xchg
pop
mov
pop
aaa
mov
pop
insb
sbb
cmp
outsb
mov
push
mov
push
ss
mov
mov
es
mov
push
shll
lcall
insb
dec
insl
fs
movsb
aad
mov
xchg
orl
push
add
inc
fstl
lret
jne
dec
cld
imul
mov
xchg
inc
jnp
out
imul
shlb
das
pop
stc
call
push
shll
insl
or
sahf
gs
xor
push
es
scas
scas
xor
aam
add
xor
xchg
jecxz
jp
mov
pop
jmp
xor
ss
loop
in
data16
mov
orl
sbb
sub
in
fiaddl
xchg
mov
test
inc
jo
mov
fiaddl
adc
adc
stos
pusha
jnp
push
hlt
das
sub
cmp
mov
push
mov
or
add
es
pop
xchg
movsl
cmp
mov
fsubp
cli
xchg
xchg
jp
mov
repnz
dec
mov
cli
jmp
cmp
pop
cmp
xor
add
sahf
xchg
addr16
pop
fldpi
cmpsl
adc
xor
dec
xchg
test
jb
or
loop
sbb
xor
into
jno
lds
mov
cmpsb
adc
movsl
cmp
nop
xchg
pop
push
add
out
icebp
in
xchg
mov
inc
add
aaa
jl
xchg
mov
mov
clc
shlb
xor
lret
adc
scas
cli
inc
ds
pop
mov
les
sbbb
push
dec
popa
test
les
sub
xorl
mov
and
pop
dec
add
mov
adc
mov
sbb
cmp
fdivr
ja
hlt
xchg
cld
or
dec
jmp
ss
push
push
and
jno
xor
sub
imul
fimull
push
jae
ja
sub
sahf
or
cmpb
test
sub
ficoml
jge
orl
jnp
dec
out
jne
mov
pop
jne
popf
lret
or
les
mov
dec
scas
mov
sub
inc
jecxz
adc
stc
inc
jecxz
outsb
icebp
imul
jmp
popa
lods
jae
and
cmp
pop
xor
in
and
hlt
xor
push
pop
jl
mov
fisubrs
inc
sbb
es
data16
pop
je
cmp
jge
xlat
shrl
mov
sub
or
mov
das
sti
lock
dec
in
pop
test
lods
iret
dec
inc
pop
fs
aad
sub
xchg
xchg
mov
lcall
mov
mov
insb
fildll
test
cmp
adc
rcll
pop
iret
shl
mov
sbb
int3
loop
push
jae
add
lods
pop
dec
lret
xor
mov
adc
jg
lods
mov
and
gs
cli
dec
push
std
fldt
jl
mov
rolb
popa
jae
rorl
stos
dec
ficompl
lock
pop
punpckhbw
movsb
ss
jecxz
xor
fbld
imul
sub
mov
lods
jl
fwait
std
fldcw
inc
cmp
pop
jl
out
mov
push
mov
add
mov
insl
jp
shrl
outsl
ja
inc
repz
negb
cwtl
jno
rcr
lea
pop
js
fst
pushf
pop
arpl
and
lea
cli
inc
ja
xchg
stos
cli
nop
stos
and
xor
fldt
scas
clc
out
mov
icebp
fcomps
loopne
scas
leave
lcall
lods
push
or
inc
in
jl
ficoms
or
xchg
cmp
movsl
out
xchg
mov
fdivrs
dec
or
xchg
pop
fstpl
andb
sub
leave
push
mov
stc
dec
lock
mov
into
mov
sub
sub
data16
add
out
dec
iret
dec
aaa
arpl
dec
cmp
test
shrb
popa
inc
and
pusha
lret
pop
xchg
aaa
fstl
xor
adc
push
xor
jl
dec
pop
adc
jmp
cmp
jg
stos
mov
test
cmp
lret
ljmp
mov
sub
icebp
ret
imul
stos
adc
je
mov
ljmp
push
leave
push
pop
pop
into
sub
add
das
add
mov
push
das
xchg
fwait
test
sub
dec
out
stc
pop
xchg
push
adc
shl
fsubr
jge
push
xchg
xchg
mov
pop
mov
orb
call
and
mov
cmpb
xor
roll
push
outsl
sub
ret
xor
inc
xchg
xor
ds
or
adc
sub
stos
xor
ret
jbe
mov
js
cmc
xchg
sbb
sbb
daa
jo
loopne
sahf
rdrand
movsb
pop
jnp
idiv
sbb
xchg
mov
lods
std
sub
or
out
add
lods
push
mov
imul
fwait
insl
xorl
mov
xchg
sbb
mov
xor
jp
inc
jbe
int
mov
ret
adc
es
inc
xor
aam
xchg
ret
ret
mov
int
or
aam
lods
xchg
fsubrs
cmp
sub
lret
mov
cltd
insl
adc
dec
cmp
popa
popf
cltd
jge
out
sub
sub
in
cmpsl
adc
in
xlat
push
mov
or
sub
insb
pop
mov
lahf
stc
popa
pushf
dec
inc
fcoml
push
pop
clc
dec
or
xchg
xchg
push
lahf
pop
push
adc
cmp
dec
scas
out
add
cmc
out
jns
ds
cs
cmpsl
mov
in
cmp
cs
cmp
stos
pusha
mov
push
mov
outsl
add
je
push
jo
mulb
xchg
dec
les
mov
mov
stos
or
scas
cmc
add
nop
sarb
adc
popa
ret
inc
test
jnp
push
xchg
pop
jge
jl
xor
dec
std
or
stc
ja
mov
mov
stos
sbb
inc
sbb
push
scas
rorl
in
mov
rorb
shll
jp
adc
and
mov
and
andl
jl,pn
jmp
pusha
pop
cli
xchg
repnz
scas
add
aaa
scas
pop
cli
mov
xchg
or
popa
inc
mov
jl
pop
cmp
int
pusha
enter
mov
sbb
push
cli
es
cmp
sub
mov
pop
mov
adc
dec
stc
jbe
leave
daa
inc
lock
and
pop
sub
hlt
out
xlat
xor
js
push
pop
inc
cmp
jne
daa
xor
nop
sbb
mov
cld
mov
out
inc
fsubs
test
or
cmp
mov
es
mov
inc
cmp
pop
cwtl
pminub
push
jnp
or
out
es
inc
les
test
je
or
sahf
sbb
jp
adc
dec
nop
int3
cmpb
hlt
jmp
xor
pop
sbbl
sub
pop
sahf
mov
push
rclb
lcall
notl
ret
imul
ret
imul
sbb
dec
push
push
repnz
xchg
or
mov
adc
repnz
mov
cmp
lock
movl
popa
jae
pop
and
push
push
dec
shll
xorl
jns
pop
lods
add
dec
dec
leave
enter
sbb
inc
sub
loop
dec
inc
mov
rcrb
repnz
xchg
dec
push
incl
jne
and
jg
in
jecxz
in
cmpsl
and
arpl
xchg
push
xchg
test
out
adc
aad
sbb
pushf
dec
mov
dec
adc
sbb
pop
mov
daa
adc
pop
jnp
push
pop
int3
aaa
int3
dec
faddl
jmp
sbb
dec
inc
inc
outsl
sub
out
pop
mov
jl
push
xchg
cld
popa
xchg
lock
cmpsl
fcompl
push
fcoml
add
fstps
test
jecxz
out
imul
push
or
pop
push
sub
dec
dec
push
push
jge
xchg
pop
pusha
adcb
fdivs
fdivl
insl
daa
pop
or
loope
pop
mov
and
push
out
outsb
push
push
sub
cwtl
decl
jmp
aad
insl
leave
mov
outsb
andb
int
aad
out
je
call
in
mov
mov
repnz
enter
push
sahf
dec
shrl
out
fs
sub
dec
push
lds
stc
inc
inc
sub
leave
dec
push
xor
mov
xchg
lea
cmp
sbb
add
pop
lock
add
shlb
outsl
sub
shlb
push
int
push
mov
cmp
mov
pop
test
mov
int3
fdivp
cmp
inc
inc
mov
adc
add
cmp
xor
sub
outsb
mov
xlat
pop
lcall
out
xchg
outsl
lds
inc
mov
pop
popf
test
fwait
ljmp
inc
add
push
xor
int
dec
mov
outsl
mov
xchg
lock
fsub
mov
jge
xchg
enter
mov
lea
pop
push
hlt
adc
mov
outsl
cmp
fcmovnu
pop
push
jmp
ds
mov
bound
rorl
shrl
jge
clc
std
movsb
test
adc
scas
xor
and
or
mov
xor
push
push
ds
jns
mov
lahf
jns
adc
push
bound
test
aaa
pusha
clc
into
xchg
push
push
cmc
pop
jecxz
movsb
cmp
mov
sub
stos
divb
jle
fisubl
loopne
iret
insb
cmp
mov
scas
add
loopne
jmp
arpl
sub
fstps
das
pop
inc
test
pop
pop
xchg
shlb
aaa
insb
stc
lds
outsl
dec
push
out
out
push
fsts
mov
das
insb
jmp
fstps
mov
loop
jns
test
in
mov
push
aaa
adcb
mov
jmpw
int
scas
pop
mov
jns
add
bnd
insl
jo
lods
pop
xorl
push
adc
repnz
mov
jae
mov
aad
out
add
push
xorb
lcall
outsb
call
fnstcw
mov
lcall
nop
outsl
popa
aad
xchg
push
rorl
insb
adcl
pop
pop
adc
enter
jb
mov
push
in
xor
jmp
add
divl
icebp
pop
cmc
ret
inc
adc
dec
push
sahf
out
hlt
lret
popf
in
rcl
imul
dec
orb
mov
fisubl
std
dec
or
ror
imul
mov
repnz
pop
sbb
mov
int
pop
fwait
and
jecxz
insl
outsb
cmpl
lcall
bndldx
fdivrs
dec
cmpsl
adc
sub
pop
ss
loope
adc
repnz
aad
jns
or
adc
sub
jecxz
mov
cld
sbb
pop
int
dec
mov
lea
jbe
fidivs
outsl
call
add
mov
adc
jb
pop
aaa
pop
loop
mov
add
call
jmp
cmp
mov
pusha
ficompl
push
fdivl
jl
ja
sahf
push
or
mulb
clc
or
and
cmpl
nop
xor
and
jmp
adc
jmp
test
mov
adc
stc
xchg
js
or
pop
mov
jl
inc
je
xor
dec
pop
insl
imul
test
stos
daa
adc
or
and
hlt
call
add
jnp
addb
mov
sub
mov
aas
dec
hlt
scas
push
push
adc
lret
and
sbb
sbbl
jbe
jns
leave
sbb
sub
jmp
sahf
gs
pop
add
cld
pop
shrl
pop
mov
add
repz
jo
shlb
lock
pop
shrl
mov
jnp
and
inc
add
and
xor
jno
pop
inc
xor
and
ja
ret
mov
lods
jb
sbb
xor
xor
adc
push
es
push
inc
gs
pop
movsl
add
push
sbb
sbb
sub
push
push
xchg
popa
lret
sbb
into
adc
mov
icebp
xchg
push
fsubrp
inc
hlt
test
cmp
mov
leave
jmp
frstor
aam
dec
xor
neg
negb
lret
mov
mov
mov
in
xchg
cmpsb
inc
xlat
xchg
repnz
sti
adc
xchg
or
pop
lock
pop
loop
jecxz
scas
sbb
mov
mov
mov
dec
shl
mov
in
push
out
pop
iret
sub
inc
add
pop
adc
adc
int3
fimuls
leave
in
adc
call
jnp
mov
jge
int3
repnz
inc
icebp
jns
fimull
les
push
pop
cmp
mov
iret
and
xorb
dec
mov
lds
fstl
nop
xor
mov
adc
push
shll
pop
clc
das
fisubrl
outsb
sarb
in
sub
cmpsl
jg
outsb
into
cmc
and
xchg
or
push
scas
addl
rcr
jecxz
mov
mov
jecxz
sub
mov
pop
aaa
sbb
jle
dec
mov
mov
or
fiadds
inc
aam
adc
imul
jae
adc
lret
jns
data16
stos
xor
push
mov
in
adc
jle
imul
mov
inc
test
jne
xchg
fwait
xchg
loop
mov
inc
sub
imul
xchg
jne
sti
mov
mov
push
pop
xor
repz
adc
inc
sbb
adc
cwtl
sub
inc
test
dec
mov
inc
mov
cmp
adc
mov
mov
and
mov
xor
fs
push
inc
add
test
adc
ljmp
adc
mov
mov
js
orb
push
std
sub
push
loop
push
pop
movsb
pop
test
sti
sub
in
cltd
fldl
xchg
pushf
jp
mov
adc
sub
ret
add
out
mov
adc
bswap
xchg
jo
add
jo
out
push
daa
push
xchg
je
lea
test
out
jno
lret
cld
in
icebp
cpuid
jp
imul
orl
mov
mov
imul
out
push
ret
int
sahf
sub
inc
cs
pushf
sbb
lahf
cmpb
insl
loop
fcmovnbe
xlat
ljmp
cmp
and
adc
fistps
test
cmpsb
mov
std
xor
pop
add
mov
and
dec
xchg
adc
jb
lret
insb
jno
lea
call
jmp
pop
leave
ret
fisttpll
push
mov
mov
add
outsb
push
mov
mov
push
popf
adc
es
xchg
sub
mov
xchg
aad
push
add
pusha
mov
notl
sub
pop
out
cmpsl
push
mov
fs
loopne
pop
cltd
xchg
jle
ds
adc
inc
push
sbbb
pop
scas
dec
cmp
mov
stos
jge
mov
or
lds
adc
mov
xor
iret
cltd
cld
push
push
add
add
inc
adc
mov
icebp
xchg
imul
add
mov
cmp
sahf
cld
add
pop
addr16
loope
jae
cli
and
xor
aad
mov
scas
or
shlb
std
xchg
or
aad
imul
xchg
push
lock
lods
sbb
pop
out
mov
ljmp
push
ljmp
sbb
addr16
push
jno
test
xchg
xor
mov
sarb
sbb
insb
dec
pop
mov
adc
mov
flds
lcall
stos
outsb
push
push
xchg
jne
out
fstpl
fbstp
lea
test
sbb
daa
loop
cwtl
jbe
scas
mull
sbb
cs
cmc
sub
push
jp
sbb
sbb
in
xchg
aam
ffreep
lahf
movsb
adc
fwait
jns
sarl
shlb
push
stos
xlat
jns
insl
cmc
mov
fxch
stos
ja
sub
ds
sti
inc
shr
sub
out
adc
lods
mov
shl
cli
sahf
in
das
sbb
int3
aam
sub
cli
adc
xchg
gs
inc
fiadds
idivl
push
mov
out
dec
ss
fiadds
insb
jge
mov
push
nop
imul
insb
lods
and
ljmp
fmuls
pop
push
or
jnp
repz
loop
jle
push
sub
test
pop
sub
insl
add
push
cmp
mov
xchg
mov
jl
mov
add
pop
lea
repnz
cmp
ret
mov
aas
pusha
xor
jae
xchg
mov
xchg
sub
fimuls
cmp
cli
icebp
clc
mov
add
mov
test
test
cltd
stos
inc
sub
or
addl
flds
xorb
scas
int3
and
shlb
inc
cmp
cmc
ss
lock
std
data16
std
jmp
int
adc
pop
mov
hlt
dec
dec
out
in
jbe
out
lds
cmp
mov
stos
pop
dec
push
jle
insl
lds
cmpl
out
inc
push
mov
pop
popa
lock
mov
pop
jp
fidivrs
inc
or
dec
mov
mov
int
push
repnz
mov
adc
fdivp
adcl
mov
jbe
push
sarl
cmp
push
pop
mov
add
inc
data16
mov
stos
mov
mov
and
ss
jle
data16
sbb
cmp
fcompl
xor
jae
mov
pop
out
pop
icebp
cmp
pop
sbb
int3
js
lods
pusha
mov
test
adc
mov
jecxz
adc
nop
xchg
pop
movsl
scas
xor
sub
inc
cmp
or
sub
out
pusha
lock
mov
addr16
outsb
std
mov
push
insl
and
addw
or
into
mov
xchg
lea
inc
and
fwait
sbb
fdivrl
pop
setp
rcr
jo
sub
sbb
sub
jb
iret
xor
inc
cmp
adc
and
sub
stc
mov
sub
faddp
cmpsb
andl
jmp
mov
fiadds
clc
incl
xchg
inc
jecxz
shll
mov
mov
stos
rol
add
in
ror
mov
popa
inc
add
hlt
xchg
mov
fs
add
lods
iret
xor
adc
fwait
mov
jnp
dec
mov
pop
std
mov
push
or
push
add
dec
inc
out
insl
lret
inc
loop
pop
test
movsb
add
pop
add
sbb
jle
ss
pop
jns
popa
cmp
and
insl
imul
ret
sbb
insl
movsb
jecxz
or
sub
out
and
xchg
insl
rcr
push
outsl
mov
xchg
push
rcr
les
andb
cltd
outsb
or
aaa
stos
out
dec
addb
pop
adc
pop
push
unpcklps
scas
sbb
std
and
popa
jmp
pop
and
imul
test
bound
js
fs
jmp
out
aas
mov
pop
sbb
mov
xlat
jg
jno
in
pop
fs
cmp
lods
mov
std
clc
clc
sbbl
sub
fwait
jne
xchg
jns
popf
jae
jns
push
mov
repz
mov
pop
orl
jge
jecxz
lods
push
push
xchg
lock
jle
xchg
jns
into
pop
mov
jle
dec
fdivl
inc
push
xchg
shrl
and
jo
imul
int3
in
flds
adc
inc
xlat
cmp
lock
inc
int3
lret
jns
jge
pop
inc
sbb
mov
loopne
rorb
inc
and
xchg
loop
pop
iret
outsb
mov
sbb
enter
sbb
jo
sbb
out
iret
jmp
push
call
icebp
scas
cwtl
sbb
xchg
cmp
in
adc
mov
mov
push
ja
mov
fdiv
lcall
xor
lock
mov
aaa
pop
jmp
aaa
jne
mov
int3
loop
fists
in
xor
fidivrl
inc
push
inc
pop
addr16
pusha
push
dec
xor
stc
int
adc
pop
add
sbb
les
cmpsl
fldt
jae
std
inc
pop
lds
push
daa
mov
ret
fnsave
mov
icebp
sub
push
xchg
sbbl
repz
popf
add
mov
dec
jg
mov
mov
cld
jbe
test
jb
inc
into
pop
xchg
dec
cmc
nop
push
cli
loope
push
lahf
adc
cmp
pop
cmpl
lcall
in
mov
add
or
xlat
ljmp
dec
push
aad
inc
pop
sbb
cmpsb
into
jge
pop
pop
aam
aam
xchg
cmc
jne
rcrb
or
jns
andb
inc
xor
or
mov
mov
jp
cmp
gs
stc
pop
jmp
imul
dec
mov
clc
xorb
rorb
push
mov
stos
mov
mov
jb
adc
js
mov
int
mov
cld
dec
xchg
clc
cmp
xlat
or
cmp
orl
or
xchg
bound
cmc
jecxz
popf
ficoms
dec
fs
or
push
mov
rorb
inc
mov
pop
sar
mov
xchg
mov
je
mov
imul
inc
nop
sti
pop
push
mov
mov
jge
mov
icebp
sbb
cmp
fcomi
iret
mov
bound
stos
dec
cmp
sbb
lea
sbb
int
pushf
adc
xchg
fcoms
sbb
daa
ja
loope
xchg
mov
stos
ds
push
fucomp
inc
mov
inc
xor
jge
jge
scas
xchg
cmpsb
add
sti
jecxz
mov
xchg
scas
sub
cmpsb
mov
xor
push
in
xchg
out
inc
xchg
cli
inc
rcrb
fldl
and
jecxz
repnz
and
inc
adc
xchg
xor
adc
pop
ret
and
dec
leave
jmp
xchg
in
stos
nop
mov
xlat
mov
adc
mov
cmp
xor
stos
push
out
mov
pop
dec
xadd
jmp
subb
fadds
mov
lcall
mov
pusha
dec
mov
sbb
mov
mov
fcompl
sbb
pop
add
xchg
stos
xchg
pushl
mov
fldcw
repz
rcrb
inc
cmpsb
xor
aam
insl
nop
mov
popa
lret
xchg
mov
inc
cmp
sahf
cmc
scas
lret
cmp
inc
out
inc
mov
ds
jl
cmp
mov
mov
and
add
add
decl
loopne
mov
cli
xor
xchg
neg
and
call
jb
pop
or
test
jbe
pushf
insl
sub
xor
cwtl
std
push
stos
pop
fcoms
fcomi
push
mov
jo
loope
adcl
idivb
arpl
mov
add
out
pop
fidivrl
add
and
jnp
andb
pop
popa
dec
xchg
xchg
popf
or
fnsave
xchg
and
sub
xor
enter
jle
dec
arpl
das
xchg
cmp
in
leave
popa
cmp
mov
scas
sti
pop
push
or
sbb
addr16
jge
out
int
mov
pushf
mov
sbb
movsl
sub
scas
mov
xor
sti
int
mov
iret
popa
mov
mov
xchg
popa
mov
jg
rcrl
pusha
sbb
push
cmp
cmpl
jecxz
inc
arpl
insb
out
paddusb
xchg
out
pop
mov
adc
lods
mov
xchg
icebp
sarl
add
jb
cli
push
dec
inc
lock
cwtl
fdivl
jns
xchg
js
je
mov
mov
popl
or
xchg
dec
xorl
dec
std
decb
ljmp
push
sbbl
subb
into
and
imul
xor
iret
in
lret
dec
repz
sub
cmp
xor
jmp
adcb
sbb
fwait
jbe
incl
scas
stc
sbb
cmp
out
fstps
mov
add
scas
add
bnd
sbb
rol
aaa
cmp
outsl
popf
adcb
data16
out
add
mov
pop
and
imul
xchg
mov
dec
xor
sbb
mov
cmp
int
inc
mov
test
icebp
xchg
cmp
pop
and
add
push
out
cmp
mov
push
test
xchg
sbb
pop
mov
pop
inc
out
xlat
add
xor
sbb
sbb
sbb
sar
mov
andl
jb
out
lods
lods
inc
cs
xchg
les
inc
fdivrl
outsl
jmp
and
imul
movsb
cmp
cmpsl
and
js
test
out
push
push
pop
xor
pop
cmp
sbb
andl
ja
mov
xchg
loop
push
adc
dec
mov
scas
dec
cmp
pushf
mov
inc
xor
push
mov
rcll
cmp
jg
or
sub
fs
xchg
mov
rcr
and
lret
cli
ret
in
js
or
jmp
out
add
leave
cmp
mov
mov
inc
dec
adc
std
cs
cmp
inc
mov
hlt
cmp
mov
fisubrs
ds
popa
and
dec
and
ficoms
repnz
mov
loop
sbb
inc
or
sub
xchg
popf
sub
mov
imul
xchg
int3
pop
ret
hlt
push
dec
xchg
sub
xchg
int3
xor
jp
sarl
rcl
mov
inc
inc
cld
mov
jno
inc
fdivs
inc
pop
lock
cmp
lret
daa
jp
in
mov
scas
and
pusha
movsb
and
sub
cwtl
sub
xor
push
in
in
or
mov
mov
lds
pop
mov
mov
pop
test
loopne
setnp
sbb
xchg
out
xor
mov
jmp
lds
push
dec
mov
pop
cmpsl
cmpl
mov
int3
das
inc
push
xor
int
repnz
sub
xchg
data16
jnp
sub
push
xchg
mov
mov
icebp
add
movsl
mov
je
inc
xchg
pusha
pop
mov
test
loopne
jno
bound
mov
and
fwait
sbb
stc
jb
lret
sub
dec
int3
push
lret
adc
adc
inc
jbe
or
test
adc
push
out
adc
lds
and
xabort
fildll
and
adc
mov
mov
adc
xchg
mov
out
push
movb
mov
push
mov
or
int
dec
sti
mov
inc
adc
adc
arpl
mov
jmp
sub
jo
movsb
adc
adc
mov
pushf
cli
cli
jns
das
repnz
cld
out
jo
in
jmp
call
leave
lahf
pop
cli
or
loopne
icebp
test
jg
addr16
and
loop
or
dec
das
imul
fwait
mov
ret
pushf
dec
xchg
mov
pop
ljmp
insb
or
dec
sub
add
gs
pop
jge
cmp
inc
ficoml
cmp
popf
leave
xor
jno
or
add
rorb
push
or
push
movsb
loop
xchg
adc
sbb
fwait
icebp
xor
xlat
or
out
lods
xchg
xchg
xchg
mov
cld
gs
xlat
push
add
ret
lods
rcr
imul
in
std
int
xlat
fistpl
rcll
es
cmp
sub
divb
lret
icebp
xchg
repnz
mov
jle
push
cld
leave
out
rorb
repz
pushf
cmpsb
mov
aaa
hlt
push
ret
shlb
addr16
out
lea
jne
jmp
pop
gs
mov
dec
icebp
mov
rolb
inc
jbe
cmpsl
inc
jg
mov
dec
mov
and
adc
std
xchg
scas
cmpsl
cmp
stos
mov
stos
clc
inc
std
lret
imul
adc
and
mov
scas
in
push
sbb
or
fmull
icebp
and
sbb
fisttps
push
cmp
or
jg
ret
leave
sarb
into
clc
and
pop
jnp
mov
and
cmpl
and
mov
jno
cmp
out
rorl
and
jbe
lret
bound
push
call
fdivl
sbb
shr
js
sarb
out
mov
cmp
pop
call
adc
and
pusha
subl
fldenv
movsb
or
scas
dec
or
les
xor
cmp
pop
scas
lods
cwtl
in
mov
and
cmp
imul
adc
loopne
inc
aaa
sbb
inc
xchg
ret
push
cmp
out
ljmp
loope
dec
ljmp
pop
jl
decb
pop
pop
sub
icebp
in
lret
or
push
push
jle
mov
sbb
movsb
mov
pushf
das
xor
inc
fwait
push
lcall
and
cmp
or
aaa
mov
je
shlb
inc
lahf
cmpsb
sub
loope
adc
pop
jae
mov
sbb
sub
addr16
aaa
pop
andl
das
cli
es
jb
shr
mov
adcb
pop
add
xor
out
fldcw
fs
je
call
xchg
call
dec
dec
mov
out
inc
arpl
mov
out
into
and
int
dec
xor
fsubs
add
cmp
call
cmp
enter
aam
sbb
test
in
jmp
sbbl
adcb
xchg
jecxz
icebp
test
out
pop
sbb
push
and
ss
ret
leave
mov
movsb
mov
mov
enter
mov
rcrl
fisubs
test
push
push
test
repz
fstps
ret
repnz
into
pop
push
test
pop
sub
dec
xchg
jge
or
lock
jbe
and
mov
ret
xchg
jp
cltd
push
mov
stos
add
movq
outsb
add
adc
scas
push
subb
fdivrs
mov
adc
or
sub
xchg
push
sahf
dec
pop
xchg
inc
mov
ss
xchg
xchg
add
mov
xchg
das
lock
push
lock
fildll
pop
stos
mov
mov
inc
cs
mov
xlat
mov
mov
add
inc
fsubrl
or
adc
mov
gs
stos
test
mov
loop
inc
cmp
fldcw
jno
and
repnz
hlt
fstl
dec
jb
xor
imul
stos
lret
cmp
pop
jl
and
xchg
fimuls
cmc
aad
xchg
xor
cmp
out
sub
stc
push
jp
popa
and
and
icebp
mov
xchg
pop
ja
pop
inc
daa
lock
and
int3
xor
idivl
mov
test
jno
cmp
mov
daa
subb
mov
dec
mov
daa
xchg
push
test
and
pop
mov
inc
js
inc
in
push
push
pop
gs
xchg
out
dec
mov
xor
mov
jecxz
xor
xor
cmp
mov
sub
sahf
add
or
add
dec
push
cmp
and
gs
add
stos
mov
sbb
test
xlat
sbb
insb
shrl
ret
cwtl
add
sub
pop
iret
dec
cltd
hlt
mov
testb
and
mov
fwait
push
mov
mov
fs
add
adc
icebp
mov
lret
btc
sbb
sbb
loopne
sahf
sub
adcl
lret
adc
imul
or
pop
cld
pushf
push
cmc
inc
pop
mov
cltd
fistl
and
popa
pusha
aas
sahf
dec
mov
and
hlt
jg
add
cmp
jnp
jl
decb
xchg
stos
pop
mov
popa
out
mov
call
mov
orl
jp
xchg
cmpsb
aas
das
cmpsl
xchg
xchg
or
inc
cld
add
test
decb
inc
mov
xchg
addr16
jecxz
sub
xchg
mov
and
pop
mov
jns
pop
sub
sbb
mov
xor
add
add
xor
mov
adc
fcmovbe
jl
xchg
movsb
mov
xchg
jmp
les
mov
hlt
mov
mov
mov
push
add
mov
jae
insl
jno
call
fcomp
and
nop
stos
fistpl
mov
pop
push
lret
fwait
sbb
pop
enter
mov
incb
mov
adc
or
adc
popa
inc
cmp
push
popa
jg
push
sbb
ja
repz
mov
loopne
fsubl
add
xchg
cmp
das
push
in
push
mov
mov
mov
sbb
xlat
in
loop
loopne
cs
sub
addr16
sahf
into
movsl
lret
lahf
jae
mov
add
lods
ss
dec
pop
add
out
mov
sti
jg
pop
and
xor
lret
iret
adc
icebp
dec
in
roll
dec
adc
daa
xchg
mov
std
decl
sbb
int
mov
das
jge
std
inc
sbb
xor
in
jl
sbb
aam
pop
fdivp
mov
mov
ror
push
sbb
dec
aam
push
add
aas
push
sbb
and
sbb
fdivrp
stc
enter
fistpll
mov
aaa
lcall
xor
pushf
lret
jo
mov
pop
cmc
imul
push
pop
push
sub
in
icebp
insb
xchg
dec
aaa
sahf
movsl
fstpt
movsb
xchg
xor
sbb
jg
mov
dec
mov
dec
testb
mov
xor
aaa
add
mov
mov
xchg
pop
data16
mov
fbld
jge
push
pop
xchg
mov
inc
mov
es
ss
popa
and
xlat
sbb
std
es
push
jo
pop
push
mov
loope
push
lea
test
mov
fldt
add
imul
mov
sbb
lods
repz
mov
mov
jo
add
std
sub
cs
add
dec
push
sbb
mov
pop
add
aaa
scas
mov
mov
es
in
jne
in
pop
lea
pop
sbb
leave
aam
mov
roll
cmp
stos
outsl
pop
pushf
enter
cmp
mov
jge
cmp
mov
jae
mov
xor
cmc
leave
adc
std
call
lret
lods
adc
mov
jb
jb
inc
in
add
pop
and
mov
fldt
pop
lahf
je
sub
and
or
jge
jbe
popa
lods
rcl
inc
sbb
push
ss
push
xor
bnd
inc
cmp
xlat
dec
push
and
cltd
leave
ret
popf
jmp
ret
xchg
clc
jb
js
add
cmp
add
nop
mov
outsl
push
xchg
cld
out
jecxz
add
shl
mov
mov
les
rcll
aad
scas
std
jl
pop
or
ret
add
jno
stos
loopne
pop
aad
sub
adc
pop
int
add
xor
call
mov
pop
imul
inc
cmp
sbbl
loop
and
add
jae
add
loopne
rcll
in
js
sbb
adc
xchg
or
pop
pop
mov
mov
hlt
push
scas
scas
shr
adcl
xchg
xchg
pop
dec
xchg
mov
lock
fdivrl
inc
mov
cmp
mov
mov
cmp
xor
mov
or
adc
negb
fsubrs
je
lahf
out
ljmp
and
push
movsl
push
pop
or
test
loope
push
sub
sarl
jae
xor
stc
fwait
mov
push
sti
xlat
xchg
inc
push
lret
addr16
stos
ret
xchg
dec
dec
int3
fldenv
loopne
xchg
addl
jmp
imul
mov
outsl
inc
sub
push
adc
pushf
ficomps
or
test
clc
outsl
add
cmpsb
rcrb
dec
arpl
xlat
mov
lret
es
imul
cli
dec
in
add
scas
xor
loope
loop
loopne
ja
fdiv
arpl
fmuls
das
cmp
fmull
cmp
jbe
sbb
lods
inc
lcall
jle
mov
mov
es
push
lret
add
movsb
cmp
in
fs
push
xchg
adc
cld
ficoml
or
jle
cmc
cli
fldl
mov
dec
in
add
pop
add
or
out
cmpsb
test
jmp
lret
dec
xchg
aas
es
in
test
add
and
movsl
or
scas
xchg
insb
ficompl
cmp
rcl
je
stc
add
mov
push
and
mov
out
mov
cwtl
cmp
sbb
inc
and
sahf
sti
data16
cmp
fnstsw
enter
test
test
xchg
adc
fucomip
insl
adc
push
or
jge
aam
adc
call
mov
dec
pop
and
popf
out
adc
xchg
popa
xchg
pop
mov
inc
add
lods
mov
or
popa
pusha
cs
stc
arpl
icebp
dec
sbb
std
jns
cmp
or
lahf
pop
stc
xor
adc
xchg
inc
inc
lea
cmp
dec
cs
popf
test
aad
jo
pop
inc
inc
mov
andl
push
jae
xchg
popf
in
lds
lea
out
and
cmpsl
imul
mov
out
enter
dec
pop
mov
xchg
dec
cmc
stos
call
pop
mov
pop
jae
lods
dec
fdivp
out
adc
lahf
aam
outsl
ss
cmp
jnp
leave
shrb
push
mov
sbb
adc
daa
repnz
adc
push
mov
ljmp
jle
adc
mov
mov
adc
mov
decb
push
cmp
cmp
jns
out
adc
vmwrite
aam
mov
shr
adc
and
dec
push
iret
mov
jae
test
xorb
in
lea
std
rorl
adc
mov
das
les
ret
sti
sub
imul
test
and
cld
inc
sti
rcrb
rclb
pop
push
lret
xchg
out
add
jnp
push
fiaddl
mov
jmp
or
fdivr
lds
and
movl
xchg
sbb
hlt
cmp
or
sub
enter
jmp
mov
icebp
test
lea
js
mov
into
mov
fstpt
jnp
test
adc
int3
call
loopne
in
jl
and
sbb
and
xchg
xchg
pop
popf
sti
ds
cltd
push
hlt
mov
mov
adc
mov
mov
pop
xlat
push
out
mov
sbb
pop
sbb
sbb
imul
add
clc
push
mov
mov
sub
int
push
mov
jp
or
imul
pop
fsubrs
adc
sub
leave
rol
out
adcb
pop
xor
adc
lock
inc
outsl
and
in
addl
xor
jge
push
or
and
xchg
shrb
push
daa
adc
jle
dec
es
pop
nop
dec
sbb
push
pop
int3
gs
cwtl
jbe
jecxz
mov
pop
pop
out
dec
daa
fstpt
push
stc
mov
repz
push
sbb
lods
aam
sbb
or
mov
out
pop
pop
lret
scas
mov
xchg
in
pop
jle
repz
mov
cmp
and
push
mov
push
mov
insb
stc
dec
cmp
outsb
sbb
jp
lock
adc
inc
stos
mov
push
xor
cmpsb
in
sbb
fsubl
stos
xlat
cld
rclb
cs
les
pop
pop
test
shr
call
add
xchg
aam
xchg
scas
dec
mov
outsb
nop
dec
fcoml
sbb
mov
cwtl
adcb
call
adc
ficompl
ss
stos
xchg
mov
pop
inc
enter
jg
test
leave
dec
popa
mov
stc
pop
inc
scas
fwait
adc
mov
popf
das
lret
adc
mov
sbb
or
sbb
sbb
addr16
xor
mov
inc
push
ds
ror
mov
and
sahf
or
add
sbb
add
enter
rcll
test
scas
sahf
leave
rorb
cmpsb
or
fnstenv
and
sahf
dec
mov
movsl
popf
sarl
aas
into
stos
push
inc
cmp
je
mov
out
push
cmp
je
hlt
into
jne
ret
in
and
sub
lods
jbe
push
ljmp
jo
adc
cmp
jbe
insb
mov
in
outsl
out
out
adc
test
or
cmp
sbb
ja
lods
push
cmp
push
shll
or
cmp
js
sbb
adc
dec
dec
push
test
mov
cmpsl
mov
loope
cmp
lahf
jge
in
movups
arpl
adc
sub
fcoms
test
mov
and
popa
outsl
paddsb
test
mov
mov
gs
pop
add
out
int3
xor
mov
movsl
and
or
jmp
dec
dec
fwait
mov
jbe
scas
and
sub
and
inc
scas
fs
jae
aas
arpl
movsb
test
fidivs
aas
adc
xchg
cmp
das
inc
mov
jle
xor
add
insl
sub
xor
xor
loopne
mov
push
leave
xor
in
aad
pop
or
cmp
decl
dec
outsl
lods
sbbl
and
int
push
hlt
lcall
xor
cmp
test
push
push
fsubl
mov
orl
xchg
imul
shrl
xchg
sahf
pop
int
pop
sbb
in
sahf
add
pop
scas
in
pop
mov
mov
out
pop
pop
roll
add
aam
insb
mov
into
movsl
mov
cltd
bound
clc
mov
dec
add
int
jmp
lea
mov
hlt
repnz
dec
mov
js
into
jmp
rcrb
push
pop
inc
xor
aas
ljmp
mov
cmpsl
pop
pop
xchg
roll
rep
sbb
fstps
sti
std
das
sbb
mov
xchg
orl
sbb
lock
pop
mov
add
cmc
xchg
ret
pop
push
push
jns
xor
inc
stos
sbb
push
test
ds
leave
and
push
dec
push
out
jl
inc
add
or
sub
jb
movsb
jecxz
imul
loopne
jecxz
mov
bound
inc
push
sub
aaa
jmp
pop
repz
subl
addr16
pushf
ja
das
jge
dec
maxps
and
jbe
iret
mov
xchg
cmc
gs
xchg
adc
shlb
shrb
cltd
loopne
out
dec
cli
xor
mov
cmp
popa
movsl
fbld
or
add
jno
sarl
imul
rorl
movsl
lea
fstp
pop
pop
push
jecxz
fadds
ss
dec
scas
pushf
mov
mov
cld
cmp
push
in
enter
in
push
insl
pusha
sub
and
inc
out
fcomip
insl
and
push
test
xchg
dec
or
cmp
or
mov
sub
adc
rcl
push
jo
stos
push
ja
inc
hlt
cmpsb
mov
int
insl
push
addr16
add
mov
lods
push
sbb
cwtl
pop
pop
cmp
ficoms
xchg
loop
pop
out
cs
movsb
hlt
jle
push
enter
scas
mull
ja
test
imul
shll
rcrl
xchg
mov
mov
cs
xor
shrb
cmpsl
jae
dec
imul
inc
jp
xor
pop
in
add
icebp
in
and
lea
ljmp
fsubp
and
mov
add
cltd
or
inc
fwait
push
dec
sbb
inc
testl
sub
movsl
and
dec
stos
mov
sbb
roll
out
shrl
aad
sbb
sbb
or
shlb
frstor
iret
aas
icebp
ret
aam
sub
pop
jg
mov
jne
loopne
stos
pop
xchg
ss
xlat
into
aaa
xor
pop
inc
shlb
insl
inc
push
aas
cmp
pop
es
pushf
mov
mov
movsl
rorl
out
in
fnstcw
xor
pop
in
lret
mov
outsl
cli
mull
in
imul
pusha
lcall
mov
daa
jg
test
jne
mov
push
adc
incl
loope
push
je
add
fwait
aaa
push
andb
jbe
mov
stos
adc
int3
sbb
push
imul
or
sbb
popf
dec
outsl
sub
aad
adc
push
pop
sub
fldcw
push
xchg
nop
stos
or
or
dec
mov
push
xor
or
es
add
hlt
ds
icebp
pop
lods
cmc
cwtl
data16
mov
xchg
test
addb
push
add
les
or
cli
mov
push
jne
sub
pusha
js
pop
xor
testl
mov
fwait
adcl
jmp
fs
mov
cmc
or
fistps
fwait
mov
or
mov
sbb
js
mov
cmp
lcall
inc
std
ret
xchg
push
shlb
inc
adc
mov
cmpsl
xchg
xlat
xchg
outsl
dec
pop
xchg
adcl
adc
sti
mov
mov
xchg
out
mov
cmp
inc
xchg
jno
jo
and
sub
das
cli
sbb
pop
jno
or
inc
scas
adc
sti
out
or
jo
jne
clc
imul
frstpm(287
imul
cmp
xor
test
sbb
push
inc
add
lret
mov
fldcw
fnstsw
inc
imul
inc
loope
repz
cmpsl
xlat
repz
jns
ljmp
xor
cmp
incb
gs
push
mov
xor
xor
cwtl
aad
in
addr16
orb
dec
and
sub
adc
iret
aam
or
push
test
xchg
test
mov
stos
out
bt
std
inc
adc
xchg
fwait
hlt
fimuls
sti
movsl
popf
xor
dec
fmuls
mov
aam
lret
lock
aam
push
jae
dec
mov
mov
outsb
add
mov
scas
js
jmp
sub
add
jbe
adc
leave
repnz
and
mov
sub
inc
sbb
xor
stos
icebp
lret
sti
jb
dec
out
out
vmwrite
aad
sub
inc
into
stc
out
repnz
lcall
sbb
bound
lcall
jne
and
xchg
jl
mov
xchg
stos
cmp
in
mov
insb
lea
sar
and
fists
push
xchg
sbb
lret
rorl
sar
sbb
add
sub
nop
mov
inc
mov
imul
sbb
repnz
movsl
add
mov
subb
lahf
mov
fpatan
cltd
mov
aaa
dec
push
mov
push
test
fidivrs
xchg
cmc
sub
out
scas
shlb
sub
xlat
jg
aam
mov
cmc
call
add
loop
ljmp
dec
xor
and
push
bnd
mov
sub
sbb
ja
jo
enter
mov
cmp
clc
into
addl
push
adc
cmp
and
inc
or
test
out
pop
adc
shlb
stos
mov
and
push
icebp
xor
int3
frstor
dec
pxor
adc
cmpsb
xor
test
cmp
lret
sarl
add
cld
lea
and
mov
mov
inc
sti
xor
fstl
daa
cmpsb
push
test
in
cmp
cmpsl
dec
jno
mov
xor
gs
insl
pop
sbb
int3
mov
sbb
push
xor
ds
aad
shll
cwtl
div
mov
jecxz
pand
push
aam
scas
dec
bnd
andl
fdivr
sbb
inc
jno
jae
test
divb
pop
mov
sub
mov
inc
popa
in
inc
add
fmuls
add
xor
push
icebp
sbb
cld
mov
add
lahf
fwait
adc
cmp
cmpsl
cli
inc
push
fsubs
div
mov
push
mov
cmp
adc
pop
jb
pusha
shr
or
mov
dec
push
scas
out
mov
adc
ror
aam
test
pop
jne
jge
lods
cmp
incl
lock
and
pop
sbb
lcall
adc
or
outsb
xchg
xor
in
nop
lret
orl
mov
mov
adc
aad
imul
sbb
xchg
clc
and
fnstenv
loopne
jnp
mov
and
xor
subb
sbb
mov
and
jnp
ret
mov
add
xchg
sahf
push
mov
jbe
gs
xchg
mov
inc
fisubrl
jns
lcall
das
bound
insl
lahf
cwtl
lahf
cmpl
fcmovnu
fstpt
sbb
cmp
loopne
sub
pop
cmp
icebp
ret
ds
cmp
aam
jl
loope
cmp
and
jle
pusha
mov
mov
pop
bound
push
ret
ljmp
pop
push
xchg
sti
insl
loope
pop
sbb
xor
imull
shlb
into
stos
leave
mov
jle
repnz
cmpsl
divb
lret
pop
mov
or
mov
add
in
dec
mov
in
popa
cmpsb
andl
fadd
jmp
mov
in
mov
xchg
aaa
lods
push
scas
dec
andl
adc
and
push
dec
sub
insb
or
clc
in
int3
pop
out
or
out
es
inc
int3
mov
ljmp
and
pop
out
js
pop
add
adc
jp
fucomip
rol
push
js
adc
cltd
jge
je
shll
jle
ss
ss
dec
lods
add
scas
and
and
and
jmp
cmp
dec
out
popa
lods
jecxz
aaa
int3
jle
cmp
daa
int3
cs
mov
pop
inc
or
shr
cltd
pop
lea
shll
xchg
adc
stos
dec
or
test
rol
inc
pop
loop
bound
or
mov
test
loopne
dec
sub
xchg
test
iret
add
arpl
mov
or
orl
jp
js
hlt
pop
mov
movsb
lods
testl
int3
push
jns
cwtl
mov
movsb
mov
or
sarb
lds
ds
mov
outsb
push
rorl
test
mov
sbb
pop
gs
test
shlb
xchg
pop
inc
adcl
in
jbe
xchg
or
test
imul
jnp
js
jp
das
lcall
sub
cld
sarl
xor
cmp
jns
add
add
mov
push
push
cli
jmp
sahf
or
dec
je
cmp
mov
subl
rcr
ret
xchg
jns
jnp
lds
addl
push
sub
and
jl
cwtl
aam
aam
test
in
and
popf
and
mov
jno
cmpsb
mov
lea
and
into
pop
test
push
int3
es
outsl
lahf
fdivl
xor
lea
ret
mov
lcall
jbe
out
xor
adc
jmp
xor
jg
std
bound
jg
leave
insl
jo
int
popf
lock
push
ljmp
push
clc
xor
sub
out
outsb
dec
jl
cs
mov
out
adc
push
out
and
or
push
adc
mov
xchg
push
inc
or
je
jmp
cmpsl
into
ja
mov
push
les
xchg
or
stc
pop
cmp
icebp
ds
mov
sbb
je
pop
inc
ljmp
jno
or
jg
incl
testb
mov
lcall
lods
mov
insb
xchg
push
add
fidivs
or
cmp
fs
rcll
mov
fisubrs
repz
clc
mov
adc
das
fldl
sub
cmp
outsb
movsl
test
jnp
loope
inc
or
sub
bound
repz
and
out
mov
push
or
jae
pop
cli
mov
push
insb
scas
mov
cwtl
or
mov
lahf
and
pop
js
fimuls
jnp
fstp
mov
icebp
xchg
lds
sub
call
es
movsl
ret
push
iret
pop
pop
add
movsl
mov
int3
cli
je
fsts
dec
mov
aas
pop
addb
fdivs
add
clc
pop
and
pop
pop
sbb
dec
jl
insb
cltd
or
test
push
xchg
jnp
lahf
pop
pushf
shr
leave
inc
push
pop
and
mov
andl
dec
outsl
dec
shlb
mov
add
roll
lahf
mov
mov
cmp
xor
push
pop
dec
bound
mov
jnp
push
sbb
imulb
insb
pop
popa
push
sbb
pop
push
jnp
les
out
add
cmp
test
xchg
jg
pop
imul
dec
jle
dec
jmp
inc
adc
mov
mov
push
add
sti
and
and
pop
test
sbb
out
adc
scas
adc
xchg
mov
nop
mov
xchg
or
js
loope
adc
rolb
push
mov
cmp
in
push
add
out
and
sbb
jle
jge
loop
repz
or
gs
call
sti
scas
test
pop
ret
lds
cmp
inc
pop
es
mov
mov
scas
xchg
pop
je
ds
adc
add
sti
xchg
mov
in
movsb
cld
xor
fstps
add
pop
in
pop
adcl
mov
out
sbb
inc
fnstsw
cltd
jno
jno
sbb
repz
push
test
pop
xchg
xor
out
adc
jnp
icebp
sub
mov
loope
shll
gs
cld
addr16
sub
mov
add
lds
outsb
xchg
sbb
xchg
out
jge
mov
sbb
cltd
jmp
dec
jo
fisttps
in
sub
subl
hlt
mov
push
xchg
jle
fdiv
pop
pop
mov
test
test
inc
push
mov
mov
stos
dec
jb
pop
fldt
mov
pushf
cmp
push
add
mov
jge
mov
cmp
in
jmpw
les
adc
shlb
mov
test
mov
ret
mov
jae
inc
int3
dec
or
xor
aaa
jge
test
pop
and
cmc
sub
lret
stos
adc
mov
test
and
outsb
and
fs
movsl
ret
inc
inc
fdivrs
mov
call
jnp
iret
adc
add
ficompl
xchg
xchg
iret
push
mov
adc
shrb
shrl
push
movsl
movsb
or
pusha
nop
adc
mov
sti
sbb
cmp
adc
jp
mov
inc
aaa
dec
iret
imul
enter
in
inc
pop
fwait
jnp
incl
mov
mov
call
inc
adc
pop
mov
and
ret
mov
fnstenv
clc
push
jl
in
or
and
aaa
out
cmp
adc
loopne
popa
push
xchg
mov
fistl
xchg
out
jbe
and
adc
mov
aam
sbb
insl
sbb
mov
fsubrs
lods
or
mov
int
add
ljmp
iret
popf
inc
mov
and
fwait
orl
sbb
sbb
sub
addr16
addr16
xor
sub
adc
cld
mov
or
or
hlt
mov
sbb
sti
xchg
sbb
cmp
les
pop
imul
add
pop
xor
loopne
mov
pop
or
mov
inc
hlt
mov
std
or
add
lret
adc
add
sbb
and
cmp
jp
adc
outsl
mov
push
popl
lahf
or
cmpsb
cmp
xchg
jae
jb
push
dec
daa
pop
movsb
nop
or
cmp
pop
cwtl
add
lret
sub
push
bound
and
xchg
iret
push
mov
loop
mov
ret
jle
divb
mov
sub
movsl
pop
xchg
iret
pusha
adc
add
es
jnp
push
xchg
sbbl
push
daa
repz
ret
stos
int
mov
or
popf
mov
xor
inc
xchg
xchg
xchg
mov
in
xchg
and
dec
and
repnz
inc
jbe
test
dec
adc
js
into
dec
push
lock
pop
mov
xchg
hlt
lcall
dec
out
mov
push
inc
sbb
aad
sbb
mov
std
jp
or
icebp
adc
adc
fbstp
loope
mov
repz
int3
add
cli
in
movsl
ret
pop
cmc
arpl
cmp
jecxz
in
test
lahf
stos
fcomps
daa
lret
or
test
mov
cmp
iret
lahf
xlat
pop
push
repz
mov
mov
mov
inc
and
xlat
add
dec
xchg
add
adc
push
out
mov
daa
dec
shrb
or
pop
outsl
mov
sbb
movsl
sub
sbb
test
xor
xchg
pop
jmp
stos
ljmp
add
xchg
mov
sub
stc
mov
into
push
imul
dec
xor
pop
lods
loopne
fs
out
sbb
xchg
test
dec
sub
pop
cltd
adc
add
sbb
ret
jmp
push
mov
inc
daa
jle
push
fs
stc
lahf
bound
scas
shr
test
ss
mov
enter
in
mov
adc
jle
and
jl
push
mov
filds
sbb
fdivl
add
xor
and
repz
orl
jo
sbb
insl
int3
xor
sub
cmpsl
push
dec
and
jae
sbb
push
imul
fnstsw
and
addr16
push
lcall
inc
bnd
sub
or
jl
inc
nop
mov
popa
and
adc
pop
cwtl
xor
mov
mov
or
pop
or
lret
fildl
xor
sub
jecxz
call
xchg
push
and
scas
cmp
push
mov
sbb
scas
mov
xor
jecxz
dec
out
push
stc
push
dec
insb
or
lcall
ficoms
mov
dec
pop
les
xchg
stos
mov
add
adc
cs
or
jge
xchg
push
imul
mov
sub
pop
into
cs
sbb
sahf
mov
dec
and
inc
sahf
sub
andb
iret
cltd
mov
call
or
xchg
lea
and
in
xor
xor
enter
repz
addr16
lret
scas
dec
aaa
stos
xchg
addr16
inc
das
inc
inc
inc
pop
add
sbb
and
out
push
push
roll
cmc
pop
jbe
xchg
ja
das
out
mov
add
popf
xchg
xchg
test
jmp
fcoml
es
out
aad
cmp
jle
inc
and
jns
push
fsubrl
sbb
leave
push
mov
xor
push
dec
fisubrs
js
and
inc
pop
jp
dec
outsb
data16
mov
mov
dec
jg
pop
or
in
pop
xor
in
sbb
fiadds
mov
flds
fwait
mov
dec
mov
cmp
push
pop
mov
rcr
movsb
loop
cmp
lret
ss
sub
push
outsb
loopne
das
pop
into
sbb
adc
outsb
cli
cmp
outsl
aam
xor
loope
cmp
sahf
cltd
gs
popa
mov
test
dec
add
xchg
push
jp
stos
into
movsb
imul
inc
in
cmpsb
subb
icebp
or
popa
jle
and
fmull
arpl
jl
or
popf
add
sub
out
orl
leave
ret
add
and
or
sub
inc
sahf
dec
mov
jle
mov
scas
shll
inc
fcmovu
dec
cltd
or
scas
mov
ss
or
mov
sbb
or
mov
jb
lcall
xchg
cmp
cmp
repnz
in
mov
movsl
sahf
adc
mov
sbb
xchg
mov
add
or
dec
mov
jbe
test
xchg
dec
xchg
nop
push
xchg
xor
jmp
push
sti
xor
cmpsb
push
in
sub
data16
out
sbb
push
stc
dec
pop
add
flds
testb
pop
addb
mov
and
add
mov
andb
cmpsb
mov
jnp
adc
sarb
lea
das
dec
push
mov
mov
lods
sti
jle
test
imul
xchg
lret
cmpsb
dec
or
push
shlb
cmp
mov
adc
or
cld
xor
dec
jmp
jle
jae
arpl
ss
out
cltd
incl
loopne
mov
addr16
cmp
cmpsl
and
aad
and
xchg
lahf
out
call
cmp
push
xchg
movsb
cmpsb
enter
xchg
mov
xchg
test
sbb
call
popf
push
and
inc
je
scas
repnz
adcl
stc
xchg
jbe,pt
fsubrl
jno
call
mov
mov
repz
cmp
jg
mov
sbb
call
add
subb
mov
xor
jge
out
xor
aad
stos
popa
dec
cmpsb
pop
cmp
pop
fs
or
or
test
xchg
sub
sti
std
add
lcall
stc
push
pop
ja
push
cltd
jge
add
sar
pop
push
mov
adc
jns
xor
adc
sbb
push
cmpsl
imul
pop
out
fcomps
dec
push
xor
mov
sti
sub
bound
inc
mov
sub
sbb
cmpsb
loope
rolb
and
jl
mov
mov
fbstp
jnp
sbb
push
dec
add
xor
sti
inc
mov
pushf
and
push
or
dec
jbe
bound
mov
test
pop
mulb
ljmp
test
into
movsl
sub
xchg
or
popf
hlt
mov
ss
mulb
daa
inc
xlat
cmc
xchg
and
sbb
push
and
aad
repnz
sub
out
int3
jno
mov
mov
hlt
into
xchg
xor
cwtl
dec
mov
fcmovnu
lret
call
es
insl
test
subl
push
xor
pop
and
jne
inc
cmp
sbb
les
repz
xorl
push
in
cmp
xchg
add
mov
mov
sub
cmp
ljmp
sbb
mov
cmp
mov
fidivrs
jecxz
or
xchg
out
enter
call
xor
jmp
or
adc
sbb
inc
jnp
les
cld
push
inc
daa
dec
outsb
ss
xlat
add
xor
fidivrl
xor
pop
in
push
out
inc
adc
pop
sub
inc
inc
xlat
lea
ret
popf
push
int3
pop
xchg
sub
pushf
es
shll
adc
rdmsr
and
xchg
sti
testb
loopne
addl
mov
shl
sub
jecxz
cmp
stos
mov
dec
cmpsb
les
mov
jne
or
xchg
out
sarl
ret
add
out
sahf
outsb
insl
stc
cmp
xor
pop
xchg
inc
into
into
shlb
cmp
and
popf
mov
jno
les
loop
mov
stos
les
int3
mov
shll
push
orl
dec
pop
hlt
xchg
add
sbb
pusha
sarb
jl
clc
out
mov
jge
popf
xor
pushf
hlt
mov
mov
lods
cltd
je
pop
stos
sbb
popf
xchg
jb
xchg
loop
cmp
inc
xchg
sub
cs
std
subl
or
xor
push
inc
aas
movsb
out
dec
rcll
mov
xchg
xor
lret
push
sub
add
fstpl
out
xor
jecxz
aas
sub
pop
or
pop
mov
push
cmovs
pop
and
popa
lods
and
jne
dec
push
push
push
in
and
jb
mov
cli
mov
push
jno
outsl
mov
sbb
jg
int3
bound
cltd
and
jno
push
in
cwtl
sarb
in
cmp
cwtl
and
roll
or
arpl
inc
xor
sub
push
outsb
in
test
aaa
rcl
mov
fs
pop
daa
dec
int
into
popl
and
ficomps
std
inc
leave
inc
xor
loope
jns
dec
jle
mov
adc
adc
pop
arpl
or
movsl
ret
jge
xchg
scas
out
jle
arpl
jle
pop
inc
push
xlat
dec
add
loopne
sti
pushf
mov
imul
ss
lock
and
sahf
dec
add
fwait
dec
mov
jle
and
xor
data16
fdivrl
mov
inc
rcrb
xchg
sbb
or
lahf
cld
icebp
lea
dec
sub
xor
data16
fwait
push
mov
movsl
push
call
jae
scas
hlt
mov
nop
stos
sub
cmp
gs
dec
dec
fs
arpl
cmp
es
rolb
inc
pop
push
mov
cs
push
dec
mov
adcb
dec
xor
dec
xor
sbb
mov
mov
arpl
jge
lds
xchg
add
sbb
dec
clc
hlt
jecxz
jl
pop
clc
cmp
shr
rcrl
mov
mov
cmp
fcoms
xchg
fcompl
pop
lods
push
xchg
mov
cmpsb
cmp
lret
stc
pop
dec
daa
in
popf
push
mov
decb
shll
pop
pop
mov
push
mov
scas
jmp
adc
mov
rcl
fsubs
dec
xchg
pop
leave
hlt
loope
pop
pop
cs
in
mov
push
jg
sub
in
cmpsb
xchg
call
pushf
mov
mov
sub
sbb
es
sub
roll
xor
out
dec
push
or
fidivl
dec
mov
xor
xchg
mov
out
mov
mov
cltd
je
sub
fisubl
js
jo,pn
ffree
repz
test
loopne
pop
bound
iret
lods
xor
mov
femms
mov
push
dec
leave
sbb
es
loope
sbb
insl
jb
or
cmp
cmp
arpl
or
mov
push
pop
push
and
in
cmc
push
lret
lcall
repz
in
fs
int
pop
mov
ficoms
pop
xchg
ficompl
sbb
out
xlat
xor
cli
clc
or
inc
std
mov
shl
aam
or
jno
lea
xchg
mov
inc
hlt
mov
push
xchg
jmp
xor
jnp
repnz
mov
fsubl
dec
clc
icebp
daa
test
outsl
lods
in
add
dec
mov
aaa
fdivrs
or
and
pop
sub
cli
jmp
mov
push
jne
push
out
jno
jl
pop
mov
xor
sbb
pusha
popa
add
sub
xchg
imul
repz
daa
rol
xor
xor
dec
stos
xchg
mov
pop
fildl
popl
mov
push
sbb
dec
pmaxub
sub
cld
in
out
scas
cmp
inc
in
lret
dec
xchg
mov
mov
movsb
les
dec
mov
insb
xorl
ret
call
or
daa
fld1
addl
adc
nop
lods
cmp
push
pop
int
cmp
jo
sub
mov
mov
aas
sti
sub
jne
or
jp
leave
stos
push
lods
imul
iret
mov
push
loop
adc
fsubs
or
push
push
test
stos
fnstcw
push
mov
dec
mov
js
cld
sbb
dec
shr
push
aas
jecxz
dec
add
push
push
mov
mov
inc
jb
insl
sbb
imul
push
pop
fldenv
in
pop
adc
xor
lret
stc
inc
pop
xchg
nop
pop
cmpsl
rorl
inc
pop
movsl
jl
ficomps
mov
movsb
and
mov
shll
xor
mov
fnstcw
aam
jecxz
adc
ja
je
add
std
outsl
adc
jle
cmp
into
loop
in
cmp
fildll
sub
call
sub
insl
cmpsb
mov
sub
sbb
imul
mov
xor
xor
xchg
movsl
loop
mov
mov
rol
mov
pop
lret
ret
pushf
inc
xchg
push
add
sub
mov
test
mov
iret
das
int
sbb
rclb
test
sub
push
sti
mov
xor
add
add
imul
and
add
mov
and
add
iret
dec
mov
cmp
add
and
arpl
pop
jns
leave
and
xchg
mov
xchg
and
sub
das
jno
xchg
outsl
mov
jl
loope
decb
call
fs
std
or
pop
xor
push
sbb
cmpl
push
sub
jge
out
lods
cmpl
loopne
outsb
jne
add
test
pushl
pop
adc
jbe
push
movsl
pop
sti
sub
add
adc
or
jno
iret
dec
pop
stc
push
movswl
adc
inc
push
flds
sbbb
sahf
sahf
mov
decl
lock
out
ljmp
dec
ret
add
call
mov
mov
or
mov
jmp
push
sbb
lret
andl
sub
cmp
mov
mov
idivl
addr16
or
ret
icebp
dec
push
scas
mov
xchg
fldt
pop
sub
js
ficomps
stos
data16
int3
movsl
inc
push
add
xchg
pop
push
fdivrs
add
arpl
xchg
stos
push
mov
lock
pop
jo
mov
inc
add
add
jns
mov
fbstp
sub
push
mov
adc
mov
sub
jns
push
push
sbb
cmpsl
sti
or
pop
ljmp
test
add
adc
lock
out
sub
test
mov
xor
xrelease
clc
test
aam
inc
mov
stc
mov
pop
mov
aas
xchg
jp
push
test
cld
or
repnz
adc
hlt
sub
dec
bound
inc
les
rcll
jecxz,pn
insl
mov
or
imul
push
add
clc
jge
ljmp
iret
push
lds
ds
jnp
shlb
push
mov
and
cli
cmpsb
push
sbb
sub
inc
xchg
adc
or
xchg
cmc
lcall
cmp
call
daa
xchg
sahf
adc
cmpsl
push
fstenv
sub
inc
inc
rol
add
cmp
jne
jbe
xor
divl
lock
scas
xchg
les
pop
mov
mov
add
out
je
rcl
insl
inc
out
lea
jecxz,pt
xchg
pop
or
xchg
rcl
mov
push
mov
and
arpl
daa
push
std
push
jg
and
fdivs
gs
outsl
fbstp
dec
push
adc
aad
jge
addr16
adc
rcr
sbb
inc
aas
cmp
int
xor
jb
pushf
cltd
mov
adc
sbb
in
das
enter
test
fs
loope
sbbl
das
xchg
pop
xchg
hlt
jle
dec
mov
push
cld
push
std
pop
inc
push
mov
xchg
shrl
es
adc
ret
cmpsb
test
fsubrl
out
jmp
fdivrl
arpl
aam
sub
adc
rclb
out
stos
mov
ss
in
int
sbb
pop
xchg
and
icebp
inc
insb
xchg
push
int3
jae
fstp
fs
aad
xor
fsubp
repz
push
or
out
jecxz
into
pop
jnp
xor
inc
mov
mov
pop
gs
dec
mov
or
inc
lods
dec
cmp
sarb
add
test
pop
popf
mov
fldl
lcall
jae
in
popf
dec
fs
mov
xor
pop
stos
scas
push
inc
movsb
push
test
add
add
aas
push
sbb
lcall
adc
test
repz
popf
je
pop
fstpl
xchg
call
xlat
pop
pop
dec
jae
mov
or
push
adc
arpl
mov
ljmp
or
add
mov
xchg
mov
inc
stc
aam
mov
fs
arpl
inc
pop
test
add
xchg
frstor
mov
mov
outsb
outsb
call
push
xchg
pusha
fnstcw
mov
in
das
and
loope
xchg
pop
add
xchg
sub
adcb
xor
pop
jbe
dec
imul
and
cwtl
rolb
das
sti
rorl
xchg
mov
inc
xor
dec
xchg
cmpsl
push
scas
xor
cmp
test
movsb
pop
mov
in
rorl
mov
mov
pop
jmp
push
mov
into
lret
xchg
jbe
or
adc
daa
in
nop
or
or
inc
or
scas
mull
es
push
loop
out
mov
add
ja
cmp
in
lret
sbb
ss
repnz
push
jmp
int
cs
cmpsl
jp
cmp
xor
into
out
notb
mov
mov
inc
or
or
xchg
push
mov
xor
imul
or
or
je
aas
shrb
xchg
mov
test
xchg
add
jno
push
insl
dec
xor
pop
xchg
lods
push
xor
imul
je
je
fs
pop
mov
cmp
dec
out
frstor
adc
jp
les
xchg
ret
add
cltd
scas
mov
lods
pop
pop
pop
sbb
jns
hlt
mov
jno
mov
push
push
push
mov
cltd
sbb
xorl
pushf
setns
or
jne
call
notb
ficoml
fs
es
jno
lret
movsl
add
adc
or
mov
fistpll
test
ret
dec
add
adc
pop
nop
stos
js
or
push
aam
test
xor
cmp
in
push
sbb
and
test
push
lods
in
and
or
dec
enter
dec
adc
sbbl
test
mov
mov
adc
dec
sbb
ss
mov
push
cmp
int3
cmc
repz
fistl
inc
mov
ds
pop
stos
hlt
bsr
push
clc
xor
mov
cmp
mov
sub
pop
and
into
out
call
fisubrl
mov
ja
adc
jnp
and
pusha
mov
hlt
sub
xlat
out
cli
iret
jnp
into
xchg
jge
cwtl
leave
daa
mov
fs
mov
jb
sbb
sahf
mov
add
jmp
pop
xor
push
rorl
stos
dec
sbb
mov
loope
sbb
ret
inc
mov
push
test
cli
das
xor
das
adc
sbb
xchg
xorl
cmpsb
mov
mov
addl
out
mulb
jle
dec
xchg
sub
jle
mov
sbb
loope
pushf
mov
inc
in
insl
sub
iret
ljmp
cltd
mov
push
pop
in
adc
lods
xchg
adc
push
xor
ret
inc
insb
pop
ret
repnz
pop
loop
daa
aam
movsl
lahf
mov
or
arpl
mov
int
xor
inc
insl
and
cmpb
jecxz
and
sti
adc
pop
xlat
scas
pop
mov
sti
add
ret
jb
nop
ljmp
xor
hlt
dec
addl
out
rcl
repz
aad
jns
mov
pusha
add
in
pop
aad
lds
sbb
mov
or
mov
ds
pushf
movsl
and
in
shrl
frstor
mov
stos
das
shll
push
push
negb
jmp
add
pushf
lcall
mov
inc
inc
inc
xor
testl
mov
data16
or
inc
sbb
pushf
dec
rcll
jbe
pop
int3
cmpsb
rorl
sbb
sub
xchg
and
movsl
pop
xchg
fdivrp
mov
idivb
mov
lret
not
xchg
hlt
cmp
hlt
dec
loopne
cmp
sbb
cmp
mov
inc
xchg
aas
jge
cltd
sar
mov
iret
call
or
rorl
pusha
add
out
je
sub
jecxz
outsb
push
cli
popa
dec
mov
pop
movb
dec
lods
xlat
sub
cmp
xchg
sbb
cmpsl
cmc
pop
in
sbb
xchg
out
lea
xor
test
and
fmull
fwait
or
sbb
push
mov
cmpb
mov
mov
add
push
and
stos
mov
cmp
out
in
add
stc
clc
pop
mov
ss
popa
loopne
dec
inc
mov
jne
cmp
jbe
jecxz
add
ljmp
sub
jbe
add
lret
cli
hlt
sti
outsl
insb
jle
out
xor
and
aaa
stc
push
or
lcall
mov
test
outsb
movb
or
sbb
dec
sub
pop
push
sbb
mov
in
pop
pop
jnp
mov
mov
adc
xor
repz
popf
dec
lods
out
iret
stos
clc
sti
call
push
cmp
push
ficomps
fidivrl
mov
adc
nop
fidivs
movsb
pop
bound
dec
gs
out
insb
rcrl
pop
inc
subb
sub
lea
jp
cmovle
jecxz
int3
int3
out
pop
pop
les
add
xlat
mov
mov
or
or
mov
mov
int
daa
push
mov
cmp
test
insl
pop
movsl
test
push
xchg
inc
adc
mov
mov
jle
loopne
mov
stos
mov
in
jp
push
jne
cmp
pop
clc
xchg
xor
cmc
mov
inc
sahf
test
enter
ljmp
icebp
ljmp
sub
lds
add
cs
out
sub
push
inc
add
jmp
sbb
adcb
subl
cmp
adc
mov
rcrl
jnp
outsl
jmp
sbb
cmp
mov
sbb
push
push
or
pop
fisttpl
popa
cmp
jns
pop
icebp
push
jns
xorb
push
mov
es
pop
add
dec
add
add
mov
pop
and
out
adc
jmp
and
loop
or
leave
fsubrl
add
into
js
jp
and
pop
jmp
add
popa
shl
xchg
scas
jle
aaa
or
and
repnz
and
xor
inc
or
adc
pop
loop
scas
jns
mov
fdivrs
mov
or
sbbl
and
shlb
jae
roll
pop
cmp
les
adc
and
or
or
jle
ret
inc
xchg
mov
js
jge
lods
mov
mov
cmp
adc
inc
add
lds
fnstcw
push
adc
andb
push
loope
aam
and
ss
fmuls
xor
cmpsl
std
cld
jo
cmp
cmp
out
aas
icebp
loope
jmp
dec
cmp
push
or
popf
stos
addr16
mov
clc
mov
in
mov
in
fmuls
xlat
int
cmp
push
js
pop
incl
dec
adcl
je
lods
lds
xchg
jbe
imul
xchg
jnp
mov
xchg
pop
shrl
adc
int3
jge
and
inc
push
mov
sbb
repnz
push
arpl
insb
inc
inc
addl
cmp
push
push
repz
cmpsl
cltd
stos
repz
scas
sub
inc
inc
and
mov
fisubs
inc
notl
jo
jo
add
sahf
sbb
sbb
je
sahf
mov
rorb
out
add
popa
js
and
xchg
sahf
notl
pushaw
out
movsb
roll
jp
mov
ret
cmp
popf
dec
xor
fisttpl
cmpl
pop
pop
xchg
inc
pop
mov
fiadds
jno
jg
out
addl
mov
shl
movb
inc
or
xlat
hlt
pusha
jecxz
cmc
test
mov
jo
cmpsb
jne
pop
jecxz
lods
out
insb
push
daa
or
or
mov
jbe
sti
push
mov
adc
dec
push
mov
xchg
jbe
xorl
jle
movsl
mov
fidivrs
cmc
lock
int
push
clc
sbb
out
fdivs
fs
daa
add
inc
iret
fcmovb
in
aad
adc
aam
or
jb
jns
hlt
lret
ds
inc
pushf
or
jmp
or
and
push
mov
push
repnz
or
mov
push
ljmp
pop
xor
test
xchg
add
sbb
pusha
sub
call
push
dec
add
cmp
or
sahf
cmp
adc
ret
loope
mov
sbb
pop
ljmp
mov
aam
push
dec
lahf
mov
es
imul
cwtl
fimull
fdivrs
loope
sbbl
xchg
in
cmpsb
xchg
xorps
rcrl
mov
stc
jl
jl
add
movsb
jecxz
sbb
mov
les
mulb
mov
mov
out
xchg
jecxz
jae
pop
lods
and
xchg
fidivrl
cli
loopne
or
lea
push
cmp
movsl
adc
dec
mov
js
jmp
in
imul
lret
jae
mov
adc
inc
pop
sub
mov
push
mov
test
xchg
xchg
dec
sub
ljmp
xor
shl
dec
cmp
xchg
mov
mov
jg
hlt
out
ljmp
mov
jne
sbb
or
outsl
in
sub
aad
aam
xor
popf
jl
fbstp
and
pop
in
data16
or
ret
mov
jnp
mov
outsl
in
mov
inc
jl
aas
cmp
in
jge
daa
mov
mov
dec
int
jecxz
mov
in
shll
in
dec
mov
fwait
cmp
les
lock
cmpsb
xor
aam
pop
out
shrb
xor
sub
and
lods
inc
xor
daa
sbbl
shlb
jecxz
xchg
cld
sarb
daa
in
out
loopne
ss
jns
mov
stos
into
mov
shl
add
daa
mov
sub
test
push
idiv
leave
dec
mov
loope
cld
das
pushf
inc
aam
les
xlat
out
js
andl
jg
lret
js
or
gs
pop
ss
in
dec
frstor
imul
scas
fnsave
frstor
mov
and
inc
ret
sub
aaa
ret
fdivrl
fcomps
call
jae
or
adc
mov
push
es
jg
jno
enter
and
adc
repz
and
sbb
shrl
push
mov
mov
xchg
add
sub
jno
ljmp
mov
ss
out
jbe
jmp
daa
jno
cli
inc
fimuls
push
jns
xor
aad
movsb
lcall
cs
mov
jmp
cmp
push
mov
pop
stos
mov
cmpsl
pop
rdpmc
sbb
leave
fnsave
data16
pop
loopne
pop
jle
xchg
and
add
jne
xchg
jnp
test
mov
inc
mov
and
or
add
out
jno
inc
mov
fwait
cmp
inc
es
sbb
mov
push
decl
adc
sbb
mov
adc
lods
pop
jne
bound
mov
js
fstpl
lcall
orl
aas
mov
mov
notl
add
adc
push
mov
lcall
lea
insl
xchg
cmpsb
dec
lea
dec
fnstenv
lock
mov
lods
or
dec
clc
add
or
pop
test
je
add
add
mov
test
xor
sbb
arpl
movsb
sbb
pushf
loop
iret
pop
arpl
xlat
cmp
test
mov
mov
pop
cld
in
jmp
dec
push
or
pop
outsl
push
pusha
mov
jb
stos
jno
hlt
mov
testl
lret
testl
jbe
sub
inc
ja
and
pop
push
into
test
mov
imul
cwtl
outsb
leave
dec
rorb
shlb
dec
adc
ljmp
xchg
inc
pop
ljmp
and
fs
push
push
fadd
mov
repnz
popf
or
repnz
subl
dec
cmc
les
xor
lret
sbb
or
dec
int3
xchg
or
daa
push
ljmp
cltd
adc
push
fimuls
das
out
bsf
repz
push
sub
shrb
rorb
out
sub
jnp
jl
xlat
cltd
mov
stc
push
out
outsb
sti
cmc
sub
lds
pop
adc
push
adc
sar
cmp
aad
dec
push
stc
cld
push
lahf
dec
mov
ret
repnz
adc
sbb
fimuls
adc
mov
or
mov
test
movsl
sbbb
orb
aas
bound
adc
flds
hlt
sbb
xchg
out
pop
repz
jae
loopne
add
fcoms
add
out
arpl
xlat
jecxz
dec
mov
aam
xchg
push
scas
nop
imull
mov
std
mov
mov
mov
jbe
pop
stos
pushf
test
cltd
repnz
xchg
mov
je
or
or
mov
mov
or
xor
push
arpl
xchg
rol
aaa
adc
int
mov
fcmovb
fsub
out
sub
pusha
stc
push
frstor
cld
shlb
push
or
mov
adc
cmp
add
ds
stos
adc
xchg
lcall
das
sbb
jp
test
xchg
out
fnstcw
mov
std
leave
ret
sbb
popf
nop
jbe
jg
std
push
add
call
mov
outsb
adc
icebp
pushf
ljmp
popf
cmp
mov
adc
in
push
push
out
call
cltd
push
test
push
pop
inc
imul
lods
sbb
mov
sbb
push
in
rclb
gs
gs
inc
stc
leave
cmp
add
lret
inc
pop
mov
push
mov
mov
in
jp
adc
clc
pushf
inc
rclb
cmp
cmp
cmovs
cwtl
fcomi
and
add
sarb
mov
fadd
push
push
jmp
or
iret
add
jmp
inc
sub
pushl
mov
cltd
lods
mov
test
cmp
sbb
xlat
fucomip
in
outsl
mov
lret
ret
stc
in
inc
nop
addr16
mov
add
loopne
test
fs
imul
movsl
xor
and
adc
push
sub
push
ret
mov
test
repz
rep
xor
aas
inc
jge
int3
sub
jno
fisttps
cmp
outsb
push
lods
fcompl
insl
in
ja
stos
push
or
stos
lods
xor
and
int
scas
or
inc
dec
addr16
not
std
and
orb
in
ss
dec
cmpsb
jmp
mov
data16
mov
sub
popf
sti
call
mov
jns
cmpsb
dec
cwtl
out
xor
insb
call
xor
scas
rorl
jns
iret
outsb
jbe
sub
stos
push
lret
test
inc
fmuls
inc
dec
aaa
loope
repnz
rorl
dec
rol
mov
push
pop
adc
inc
pop
push
xchg
add
pop
dec
mov
iret
bound
xchg
jp
test
inc
inc
adc
ja
addr16
data16
inc
jbe
or
and
mov
outsl
pop
add
push
jne
flds
test
xor
cmp
sbb
push
scas
cli
ret
fistl
fstps
lods
leave
aad
sub
mov
enter
je
shll
sahf
cmp
xchg
incl
and
xlat
xor
dec
sbb
jecxz
sbb
movsb
addr16
insl
inc
addr16
fmuls
out
pop
imul
inc
xor
cmp
es
jl
and
rclb
jecxz
loop
push
xor
cld
into
xlat
iret
rcrl
in
fsubr
mov
add
and
push
cmp
pop
stos
loop
jns
ds
inc
addb
loop
pop
or
xor
out
in
mov
or
dec
fildll
iret
sbb
insb
in
mov
mov
xchg
sub
movsb
lds
adc
push
xor
jb
out
pop
movsl
cmp
cmpsb
and
mov
inc
push
pop
call
push
sub
enter
inc
dec
dec
or
cmpsl
mov
ret
cmc
xor
imul
xor
movsb
notl
dec
cwtl
xchg
bound
xchg
cs
lods
call
mov
cltd
push
sbb
jle
push
mov
xor
jne,pt
movsb
and
dec
loop
jg
cmp
lods
stc
divl
setb
rol
das
scas
add
cmp
rcl
filds
out
push
xchg
push
in
pop
xor
dec
and
cmp
add
cltd
test
daa
dec
sub
enter
in
jbe
push
mov
cmp
mov
adc
cmp
push
dec
scas
aas
xor
testl
cs
fidivs
repnz
jge
into
lea
xchg
inc
lret
stos
cmp
data16
fndisi(8087
stc
lahf
clc
int
and
fstp
das
jle
xchg
jg
fwait
cmp
icebp
adc
cmp
cmpsl
repnz
hlt
inc
mov
cmc
xor
jnp
jl
mov
mov
ds
and
sub
sti
and
inc
clc
and
mov
mov
dec
xor
arpl
or
push
addr16
nop
xlat
lahf
xchg
jmp
mov
ja
nop
sub
cmc
push
cmpsl
mov
or
inc
shlb
testl
int3
inc
in
add
cmp
lods
pushf
jmp
or
pushl
std
enter
mov
mov
mov
lods
add
imul
fdivrl
popf
and
cmp
lret
pmaddwd
add
dec
iret
je
sti
enter
stos
xchg
jl
dec
gs
jge
sahf
insl
mov
or
xchg
mov
mov
inc
push
or
sbb
stos
arpl
div
add
mov
jbe
pop
es
fidivrl
pusha
pop
int3
les
sarl
adc
pop
sbb
jns
es
push
xchg
mov
adc
pop
in
adc
pop
fisubrl
loope
push
lods
in
insb
and
inc
clc
or
in
sbb
lds
xor
outsb
lcall
sub
scas
sbb
push
push
test
lret
and
and
mov
xorb
adc
imul
jle
dec
mov
popf
xchg
mov
jbe
cmp
push
ret
mull
dec
xchg
jne
sub
sar
xor
movsb
roll
data16
xor
dec
js
add
loopne
mov
pop
jo
push
dec
pop
inc
sbb
add
mov
andb
lods
pop
jle
adc
mov
mov
fsub
push
push
mov
orl
pop
jno
push
in
xor
and
fdivrl
xchg
lods
dec
xor
loop
pop
out
push
mov
stos
loopne
cmp
adc
into
outsl
mov
cmp
fmuls
mov
xchg
xor
in
out
add
lds
lcall
adc
push
pop
jl
jb
pop
scas
das
shr
adc
int3
repnz
mov
in
pop
cmpsl
mov
or
sbb
ljmp
xchg
add
jecxz
xchg
dec
mov
fnsave
pop
sbb
adc
sub
push
ret
xchg
in
adc
adc
mov
mov
loop
sub
cmp
dec
aas
xor
insb
push
xchg
lea
push
stos
movsb
test
mov
push
push
mov
inc
aad
and
ficompl
dec
outsl
inc
and
mov
mov
xor
mov
and
pop
adc
cmp
jne
lret
scas
jmp
out
cwtl
loopne
mov
movsb
push
mov
mov
xchg
mov
inc
push
ss
sub
data16
lea
jl
movlps
test
stos
dec
mov
imul
xor
stc
xchg
xor
movsb
xchg
and
in
adc
shrl
in
shll
lds
adc
mov
fstpl
rclb
in
adc
lret
arpl
sbb
cwtl
and
insl
imulb
jg
ja
loopne
out
xchg
xchg
jmp
ljmp
xorl
sub
inc
ret
out
mov
inc
insl
idivl
scas
add
inc
jp
xchg
xor
bound
add
jp
out
daa
inc
fsubp
ficoms
mov
jmp
cmc
xchg
mov
repz
jne
cs
jp
mov
xchg
pshufw
xor
out
or
out
mov
and
imul
push
mov
inc
dec
mov
cmpsl
sahf
xor
icebp
mov
dec
lret
cmpl
fcmovbe
imul
cli
and
imul
dec
mov
incl
jp
sub
jae
or
add
sbb
stc
push
je
leave
and
test
fwait
testb
idivb
inc
cli
cmpsl
jmp
or
lea
dec
add
sub
add
mov
xchg
or
les
add
cmp
xor
xchg
xchg
xor
test
jmp
push
nop
xor
push
jnp
data16
rcrl
or
mulb
sbb
sub
xchg
jae
repnz
lcall
mov
and
icebp
jns
sub
sar
adc
pop
or
mov
pop
cmp
xchg
icebp
push
cmpsl
stos
xchg
xchg
loopne
imul
lock
mov
jo
dec
and
sub
in
mov
in
jmp
int
dec
imul
fisttps
rorb
gs
sub
pop
adc
icebp
pop
in
into
inc
lret
test
xchg
push
outsl
arpl
push
sub
sub
sub
popa
xchg
test
inc
enter
push
sbb
scas
mov
push
mov
and
scas
jnp
jmp
leave
icebp
rcrl
mov
push
jbe
dec
add
es
adc
shlb
test
or
roll
jg
pop
xchg
leave
imul
in
fisttpll
adc
pop
pop
inc
sbb
ret
inc
sbb
dec
and
enter
pop
in
ficomps
adc
push
in
mov
add
movsb
xchg
dec
iret
popf
fbstp
and
dec
dec
mov
or
pop
mov
stos
dec
lcall
ds
cli
je
jg
mov
stos
call
or
mov
or
mov
iret
aaa
or
dec
push
loope
jns
add
int
pop
push
xor
inc
fistl
sub
push
mov
jns
ljmp
add
dec
push
push
push
cmp
test
arpl
inc
jmp
mov
add
inc
mov
add
inc
push
jno
push
sub
lea
insl
pop
add
mov
adc
lcall
movsl
and
clc
test
jae
loopne
xchg
pop
adc
xchg
mov
mov
mov
or
cmp
bound
or
push
inc
add
ficoml
or
xchg
adc
fsts
or
add
ret
mov
mov
mov
cmc
aas
outsl
xor
xor
sbb
popa
stc
pushf
lds
xorb
cmp
mov
ja
xchg
jnp
or
mov
sub
sub
daa
push
data16
movsl
cmpsb
or
pop
xor
inc
mov
mov
cmp
xchg
orb
hlt
arpl
les
rol
stos
iret
sbb
push
mov
aaa
sub
out
cmp
lods
mov
push
lods
push
add
jbe
jae
pop
lcall
outsb
dec
or
jmp
pop
repz
popa
mov
enter
mov
xor
scas
insl
outsb
mov
pop
or
cmpl
or
leave
xchg
jns
ficoml
fucomp
mov
xchg
in
xor
xor
aas
je
test
rolb
pushf
jnp
mov
jb
shl
shll
inc
mov
int
fisttpll
push
pop
pusha
or
sbb
ja
addr16
and
push
or
movsb
out
push
cltd
sub
mov
rcl
inc
dec
outsb
adc
and
push
jg
dec
jnp
cli
pop
je
pop
std
dec
stos
outsl
ror
sub
mov
xchg
cmp
icebp
push
lret
push
jle
scas
std
mov
cmc
lahf
push
bt
inc
xchg
adc
rcrl
mov
inc
jno
mov
ficompl
jmp
push
sub
mov
xlat
inc
xchg
icebp
mov
lahf
dec
mov
lret
inc
add
mov
pop
push
mov
mov
xchg
jl
jno
push
jle
mov
mov
rorb
shlb
dec
sti
ljmp
mov
lods
xchg
adc
pop
hlt
jbe
cmp
dec
push
mov
jecxz
out
ds
mov
adc
div
out
push
dec
fisttpl
icebp
pop
stos
sti
clc
add
jae
mov
push
in
mov
out
or
sub
cmpsl
gs
leave
mov
pop
cmp
fwait
sahf
adc
imul
inc
and
push
nop
jae
in
dec
es
mov
roll
in
mov
mov
out
mov
sub
int3
decb
adc
push
cmp
or
cmp
aam
cmp
dec
repnz
je
xor
mov
fmull
lds
ja
mov
inc
sub
mov
clc
cmp
mov
decl
lret
pop
mov
sbb
adc
lea
dec
mov
push
inc
or
push
xchg
stos
adc
push
je
shll
lods
scas
pop
dec
lods
mov
test
fisubrs
cmp
data16
notl
xchg
push
cmpsb
sub
dec
int
xchg
call
out
outsl
mov
out
test
lock
xchg
shlb
es
in
iret
hlt
repz
mov
sub
ret
cmp
popa
sbb
aas
subl
decl
inc
dec
dec
push
in
push
push
and
in
jns
sbb
cmpsl
rorb
xor
ret
cmp
outsl
mov
aaa
adc
stc
test
push
pop
sbb
pop
stc
inc
cmp
inc
lock
mov
and
ss
fcoml
and
in
push
mov
mov
lods
inc
xchg
push
shrb
fildl
xchg
stos
bound
jns
addr16
mov
cltd
cmp
out
loope
scas
popf
dec
daa
push
xor
fidivl
push
sarl
test
sti
decb
movsb
jbe
jo
lds
adc
push
aas
dec
repz
loope
cwtl
mov
xor
add
in
mov
xor
jnp
jb
es
das
sbbb
sbb
sbb
dec
adc
or
aad
add
mov
sbb
add
sbb
rorb
mov
xchg
js
adc
movsl
jle
mov
xor
or
xor
repnz
ret
cwtl
jge
bound
sub
mov
stc
cmp
fwait
add
cli
and
jge
out
fimuls
dec
in
sub
xchg
movsl
and
xchg
cli
sub
lods
mov
push
popa
movsb
dec
jns
or
add
andb
mov
dec
mov
mov
movb
xor
call
dec
mov
pushf
lea
mov
jno
jns
adc
enter
mov
xor
mov
lods
jnp
mov
xchg
stc
jbe
mov
pop
pop
inc
xchg
cmp
fwait
std
scas
shl
stos
push
arpl
xor
jns
xchg
pusha
or
jle
fsubrs
xchg
push
xchg
in
add
int
mov
mov
ss
sbb
mov
int
cmc
gs
pop
mov
cmc
sahf
subb
cmpb
lcall
fucom
pop
xlat
nop
orb
sub
jae
in
sub
mov
fdivs
mov
out
mov
mov
loopne
xchg
scas
stos
jp
jge
mov
rcr
aas
mov
or
pop
pop
and
mov
xchg
fnstenv
mov
xchg
mov
sbb
arpl
mov
mov
xlat
lret
or
push
sbb
xchg
pop
push
or
fiaddl
std
cmp
das
pusha
pop
js
mov
dec
xor
push
sbb
xchg
jns
inc
fnstcw
repz
pop
pop
inc
push
add
cltd
add
imul
cmp
std
call
retw
outsl
lds
mov
call
lods
xchg
cmpsb
push
aas
lods
cltd
arpl
in
jae
loop
pop
jecxz
lahf
inc
add
dec
mov
ret
xchg
pop
repz
loope
jbe
cmp
lea
int
mov
or
icebp
pushf
push
dec
lds
decb
xor
lods
fs
add
pop
push
ljmp
xchg
repnz
mov
lods
inc
in
xchg
aad
inc
or
aad
mov
inc
and
sarb
int
inc
mov
sbb
popa
call
cli
dec
dec
notl
repnz
push
in
inc
sub
lea
ret
ljmp
dec
adc
pop
cmpb
xchg
cmpsl
mov
rcrl
cmp
mov
add
pop
outsb
js
inc
lock
sahf
out
mov
rcrb
shll
test
add
aas
fmuls
or
pop
inc
pop
xor
cld
incl
popa
insb
les
gs
fwait
xchg
xchg
ljmp
pop
pushf
adc
lcall
sub
push
mov
cmp
test
test
mov
jg
mov
xchg
add
xchg
rclb
rep
je
ds
push
push
enter
mov
inc
fnstcw
lret
movb
push
js
mov
pop
imul
xchg
cmp
or
jecxz
cmp
repz
jecxz
or
push
lds
sarl
mov
xchg
int
sub
das
movsb
mov
shlb
pop
adc
sub
or
loop
add
in
sbb
xchg
xchg
xchg
and
ss
inc
dec
call
or
jp
mov
push
mov
cmpsb
xchg
dec
jne
mov
out
pop
ds
pop
cs
ret
scas
cli
ret
push
cmc
cmp
loop
sbb
jbe
pop
test
cmpsb
mov
push
iret
pop
imulb
mov
sbb
dec
lret
mov
dec
repnz
push
je
iret
rorl
out
ss
mov
test
xchg
jb
negl
int3
push
je
mov
or
xor
xor
push
outsb
in
xchg
adc
xor
mov
add
sub
subb
xchg
scas
popf
stc
pop
cld
jp
leave
arpl
stos
cmp
icebp
nop
push
add
mov
in
lcall
inc
xchg
pusha
push
dec
adc
ja
dec
jno
ret
mov
pop
pusha
testb
scas
pop
sub
cmpsb
cmp
cltd
inc
jecxz
pop
lret
mov
inc
call
jmp
or
cwtl
or
cmp
jnp,pt
fsubl
leave
ja
into
fstps
loopne
sahf
pop
sarb
andl
notb
adc
lock
test
mov
pusha
mov
sub
fdivl
and
cmp
sbb
mov
cmp
lea
daa
dec
xor
mov
arpl
mov
es
loopne
xor
and
jbe
push
xor
add
stos
stc
push
dec
adc
mov
xchg
mov
mov
lahf
fstps
push
hlt
and
pop
cmc
daa
push
xor
insl
lret
xor
inc
push
sahf
sbb
xor
mov
xor
stos
shll
repnz
jp
ja
add
dec
adc
andl
fs
dec
test
pop
or
pop
pusha
stc
cmp
mov
jg
ret
cmp
mov
out
orb
xchg
and
ja
xchg
nop
repz
bsr
or
aam
jg
sarb
jg
shl
pop
fsubrl
packssdw
dec
pushf
imul
outsl
lds
cmp
int
sbb
mov
push
out
ds
es
jnp
mov
adcl
push
pop
insl
cmpsb
fcmovu
idivb
fs
lods
jns
and
icebp
xchg
hlt
xchg
aad
les
push
jo
repnz
xor
sbb
pop
nop
pop
arpl
pop
xor
and
adc
test
int
into
out
fmull
insl
out
or
and
ss
mov
push
jmp
xlat
fsts
aad
push
into
and
xchg
lea
push
into
ja
xor
add
cmp
out
mov
in
sub
pop
popf
dec
mov
push
push
nop
dec
bound
or
or
inc
fs
fldenv
stos
out
sbb
ds
push
xor
into
or
insl
das
fwait
pop
in
lret
insl
pop
pop
data16
int
mov
push
ret
jno
daa
push
addr16
mov
jno
sub
inc
es
jo
stc
repz
sub
pop
sub
sub
push
aas
mov
pop
sub
mov
subb
push
inc
mov
ficompl
aas
mov
daa
daa
fists
leave
cmp
scas
xchg
xchg
ds
pop
jne
enter
shl
pop
mov
sub
push
or
mov
sbb
outsl
xor
stos
daa
repnz
xchg
adc
mov
push
lds
xchg
mov
enter
ror
inc
fwait
repnz
pop
loopne
shr
xchg
mov
jb
push
ret
or
pushf
fistl
add
lods
push
popa
or
xor
cmp
out
pop
inc
sub
out
std
cmp
mov
cs
mov
xor
lret
mov
adc
stc
add
fcoml
in
add
mov
cmpsb
insb
cld
cmp
adc
fcomi
xchg
cs
jne
pop
mov
pop
sub
repz
or
mov
and
and
inc
push
cmp
or
aaa
push
lcall
stos
jns
xorb
sub
daa
or
jmp
mov
xchg
fdivs
les
cwtl
push
aas
or
stc
inc
xchg
cli
dec
imul
push
das
cmc
push
adc
jo
sub
cmp
gs
lret
leave
call
addb
or
xchg
gs
push
aam
adc
xchg
pop
cltd
repnz
push
xor
pop
lds
pop
inc
fists
xor
adcb
call
and
and
dec
cmpsl
hlt
rcll
sbb
fwait
dec
mov
pop
mov
inc
fmuls
xchg
push
cs
mov
xchg
clc
movsl
bound
or
rcr
in
cmp
imul
aam
pop
xchg
fistpll
sbb
xchg
lock
daa
lock
mov
bound
fbstp
icebp
iret
push
into
fwait
xchg
lock
xchg
cmp
or
out
adcb
cwtl
jle
xchg
aas
lahf
lcall
inc
mov
fisubs
mov
add
aam
add
xchg
adc
cmp
add
repnz
cli
dec
pop
rolb
pop
xlat
sub
mov
cltd
add
std
popf
movsl
stos
repnz
add
pusha
pusha
ljmp
sbb
fdivl
out
in
jle
jecxz
mov
ret
outsb
jb
mov
push
scas
xor
fwait
push
dec
ss
mov
push
in
add
jne
pop
shr
inc
xchg
loope
ret
subb
js
mov
xchg
bound
jl
addr16
inc
nop
mov
sbb
adc
mov
shr
loopne
outsl
adc
sbb
data16
test
aam
imul
jg
cmp
sub
insb
mov
mov
enter
loop
or
jle
adc
and
addr16
outsb
out
ss
add
mov
mov
lahf
loop
bound
jecxz
rcrb
faddl
fcoml
jle
lods
cmp
inc
scas
push
pusha
jmp
xor
mov
add
scas
and
pop
pop
push
mov
and
stos
shlb
fwait
add
sbb
cmp
inc
ljmp
out
sbb
mov
jle
cmp
mov
xor
xor
popa
lahf
lcall
leave
pop
push
add
xchg
mov
xlat
pop
out
mov
test
loop
mov
rcrb
dec
bswap
and
push
mov
insl
or
xchg
fidivrs
fcompl
ds
xchg
mov
pushf
and
movsl
push
fidivrl
mov
adc
add
sbb
dec
imul
xor
pop
testl
mov
push
das
mov
and
sti
push
or
adc
add
rcr
jle
cmp
cmp
sti
sarl
dec
cmp
outsl
sahf
push
and
aam
aas
insl
movsb
sbb
cmpsl
or
aad
je
data16
push
insl
mov
stos
ss
lret
jns
pop
int
out
adc
repz
mov
lret
pop
add
jl
mov
pushf
jg
push
pop
mov
add
fiaddl
pop
idiv
call
pop
and
adc
rcr
dec
sub
push
mov
push
mov
stos
pop
push
sbb
out
rcrb
or
mov
pop
mov
dec
scas
sbb
inc
jnp
mov
pop
test
add
push
cli
in
inc
mov
xchg
divl
lods
cld
lods
mov
pop
mov
cld
sub
adc
into
ss
cld
dec
dec
std
jge
aam
xchg
stos
nop
outsb
inc
dec
mov
dec
push
mov
cmovs
xchg
gs
pushf
dec
repz
repz
mov
jmp
or
fidivrl
movsl
lock
sub
xchg
inc
push
pop
ja
sub
or
mov
fsubrs
push
adc
pop
aas
test
jb
das
test
mov
inc
adc
scas
repnz
jmp
ja
gs
loopne
insb
push
jb
aaa
xchg
mov
rolb
cmp
mov
addb
pusha
sbb
popf
bound
lds
mov
cmp
mov
mov
test
xchg
mov
push
dec
cmp
pop
push
movsl
xor
enter
sub
mov
cltd
test
mov
sub
ljmp
lcall
pop
jns
cmp
dec
arpl
adc
mov
cltd
cmp
sbb
mov
dec
popa
aad
dec
mov
ret
daa
jecxz
jecxz
decl
sub
dec
dec
imul
push
cmp
sbb
sub
fdivr
push
jne
jns
sub
popf
jb
nop
fs
cs
fsubl
arpl
loope
pop
fdivs
or
xor
jns
or
fimull
pop
dec
daa
push
xor
leave
leave
popa
bound
pop
pop
dec
mov
test
or
pop
push
sub
pop
insb
out
jno
adc
stos
cld
iret
int
jmp
xor
out
xchg
adc
lea
mov
dec
std
pop
cmc
inc
enter
jp
lods
enter
shlb
bound
ljmp
push
cmp
add
pusha
andl
cwtl
test
in
mov
mov
dec
inc
pushf
add
roll
mov
bound
call
mov
aad
cmp
shr
cmpb
std
jecxz
mov
mov
xchg
sbb
shlb
sub
mov
in
out
ja
cmp
test
push
cmp
mov
push
inc
cmc
jb
jl
cmp
mov
jae
aas
mov
mov
sub
or
mov
daa
sahf
insb
dec
xor
sbb
cmp
sbb
subl
lahf
sbb
mov
lea
sub
mov
mov
testb
cmc
inc
sub
xchg
jns
add
repz
xchg
jl
pop
lea
loopne
pop
loop
mov
hlt
cmp
push
shrb
mov
jno
sbb
pop
cmc
cmp
mov
sbb
mov
or
fsubs
jbe
sub
out
fucomp
mov
vpmacsww
imul
imul
push
sub
mul
out
movsl
clc
iret
cs
push
gs
mov
mov
fisubrs
enter
cli
sbb
mov
push
adc
mov
sti
pusha
xchg
jg
dec
sbbl
sbb
test
outsb
sarb
push
je
daa
adc
mov
filds
loopne
jle
adc
ret
mul
fstp
sbb
cmp
lock
inc
push
movsl
mov
rclb
addr16
or
out
ret
cs
or
aad
add
mov
mov
push
xor
shrb
nop
cmp
sub
js
xchg
sub
sub
lods
imul
std
out
aaa
jae
stc
jo
cmovp
sub
data16
int
int3
test
in
sub
div
mov
sbb
sbb
gs
leave
je
cs
hlt
out
cmp
inc
testb
dec
fldt
js
cli
inc
popa
xchg
mov
test
mov
or
mov
mov
shl
cmp
popa
lods
jne
cwtl
fucomp
sub
addr16
and
loope
jo
sub
xchg
pop
xor
push
icebp
cmpsb
je
aam
fcompl
lods
cltd
sti
scas
lods
sbb
add
fiaddl
das
popf
pop
or
mov
call
sbb
jmp
pop
pop
mov
mov
xchg
imul
pop
mov
and
sbb
xor
xor
test
xchg
adc
divb
fs
fldt
out
sub
sbb
dec
daa
cld
mov
stos
xchg
and
sub
mov
loope
fmuls
sub
cwtl
rclb
xlat
sarl
xchg
add
mov
mov
aad
push
sbb
ljmp
ss
and
fs
es
mov
cmpsb
inc
or
jl
jecxz
aam
repnz
ljmp
push
inc
ret
lcall
movsl
or
scas
push
jnp
jb
and
cltd
insl
xchg
adc
in
and
mov
jge
and
push
xor
dec
icebp
mov
stos
xor
rcr
xor
pop
add
imull
sbb
adc
or
movsl
cli
popa
and
mov
addb
push
ss
inc
mov
cwtl
arpl
mov
movsb
jae
scas
xchg
insb
cmc
ss
inc
mov
xor
arpl
pop
cs
stc
jnp
xchg
or
out
inc
sbb
daa
inc
inc
fisubrl
enter
xchg
ds
loopne
xor
adc
scas
hlt
jne
je
inc
fstpt
xchg
and
pop
cwtl
out
add
fiadds
test
mov
pusha
icebp
stc
and
sahf
lcall
pushf
and
es
ja
fcoms
loopne
mov
subl
scas
xorb
nop
repz
pusha
test
or
or
push
popa
es
lret
mov
and
scas
into
xor
lock
sbb
insl
xchg
js
cltd
fcoms
inc
cmc
maxps
test
xor
outsb
insb
cmp
add
flds
in
orl
int
push
sub
adc
sbb
sub
pop
scas
call
popa
decb
fisttps
or
bound
lret
cmpb
add
fnstenv
orb
shlb
loope
lds
mov
out
mov
mov
mov
insb
sub
push
repz
xchg
test
es
xor
jae
leave
push
lret
cmpsb
sub
lock
push
dec
sbb
popf
xchg
lds
sti
inc
dec
bound
stos
push
cld
sbbb
add
lods
out
mov
js
loop
xor
fcmovnu
mov
icebp
out
push
push
cmp
mov
incb
and
into
inc
stc
cmp
sbbb
ljmp
and
cmp
sub
xorl
gs
adc
mov
cltd
fidivrs
sub
adc
cmpsl
sub
iret
mov
sbb
lds
pop
repnz
lock
in
xchg
sti
sub
loopne
icebp
out
ss
add
mov
xor
adc
xor
lcall
xlat
jbe
sub
dec
sub
cli
rdpmc
mov
les
xor
movsl
mov
fs
dec
stos
xor
push
fsubrl
jnp
mov
cmp
cmp
call
clc
mov
popa
or
pop
cmpsb
adc
lock
inc
pusha
test
jl
mov
adc
add
xchg
jle
sub
test
imul
dec
or
push
pop
stc
call
xlat
add
pop
clc
in
pop
mov
sti
inc
xlat
inc
stos
fdivr
sub
ja
mov
dec
leave
jp
mov
jle
in
push
jmp
fidivrs
inc
das
mov
add
pop
fists
daa
repnz
mov
jecxz
xchg
int3
jo
sahf
xor
jbe
xchg
ja
rclb
lret
shll
inc
and
jecxz
sbb
push
pop
rcrb
inc
push
add
mov
test
loope
inc
cmpsb
xor
sbb
xchg
xchg
sbb
dec
and
fistpll
test
insb
scas
push
arpl
mov
gs
mov
cmpsb
rcll
pop
push
lds
aas
fcompl
pop
sbb
hlt
fstpt
leave
bound
shlb
jle
mov
in
jns
cmp
jae
pop
mov
stos
dec
dec
add
mov
sub
inc
orb
xchg
xor
mov
jae
fwait
xor
inc
leave
aad
arpl
xlat
ljmp
fsubp
xor
out
addr16
jns
ficompl
cmp
inc
repnz
je,pn
mov
xchg
cmp
loop
fnclex
or
xor
stc
push
jno
out
std
in
popf
das
mov
pop
sti
inc
incl
out
addr16
faddl
cmpsb
pop
dec
sub
fldt
mov
icebp
mov
imul
fdivs
jle
in
fwait
add
idivb
push
cmp
mov
push
adc
or
and
jl
jmp
jnp
xor
jns
dec
or
das
dec
je
lret
daa
jg
xsha256
cmpsb
xchg
add
mov
repnz
mov
mov
dec
add
mov
aam
mov
pop
test
mov
lcall
xchg
imul
sub
mov
aaa
cmpsb
jb
jp
nop
fwait
and
sti
pop
out
inc
mov
mov
outsb
sub
mov
rcll
leave
mov
fldcw
out
sbbl
repnz
pop
jle
pop
pop
mov
hlt
aaa
int
inc
lret
mov
sti
jge
lea
cs
adc
and
sub
enter
ret
sarl
pop
mov
hlt
push
add
inc
lock
shr
out
dec
inc
jle
repz
cmp
scas
mov
pop
movsl
or
stos
insl
add
outsb
cli
aaa
xchg
int
in
push
and
push
cs
ja
pop
repz
and
je
dec
sbb
mov
xchg
arpl
mov
jmp
rcrl
sahf
cmp
scas
sbb
in
pusha
shll
sti
mov
adc
lods
lret
push
mov
arpl
imul
stc
jl
sbb
dec
lock
ret
mov
rolb
xor
loop
cmp
xor
int3
cli
outsb
adc
pusha
xchg
nop
stos
pop
add
aam
xchg
add
rcrb
mov
je
xlat
dec
cmpsl
inc
cmpsl
cwtl
xor
fsubp
pop
or
or
push
mov
mov
and
lret
mov
lahf
mov
stos
pop
leave
dec
xor
mov
pop
jno
mov
cli
push
cld
data16
mov
cltd
enter
cmp
imul
addr16
stos
fnstcw
jmp
push
pop
mov
push
shlb
jne
out
cmp
je
xor
jne
push
or
fnstsw
ja
iret
in
push
div
adc
sub
mov
adc
subl
inc
dec
data16
repnz
testb
hlt
lret
sahf
shr
inc
or
xchg
push
sub
sub
cld
fs
and
pop
into
not
cmp
cmp
out
in
fisttps
fsubrs
pop
test
rcpps
mov
cs
adc
pop
jnp
jl
hlt
mov
dec
push
fcoml
push
mov
jno
and
pop
out
push
leave
mov
pop
dec
or
mov
jno
pop
les
in
xchg
push
outsl
pop
in
int3
adc
sbb
jl
cmpsb
movsl
jge
addr16
pushw
xor
cwtl
stos
pop
movsl
sbb
inc
fdivr
lock
pop
fwait
scas
stos
pop
adc
je
sbb
add
push
xchg
int3
sbb
rolb
cmp
cmp
mov
jg
sarl
or
xchg
popa
mov
jae
xchg
arpl
push
push
pop
test
hlt
les
inc
aaa
sti
scas
xor
xor
lahf
mov
push
loop
sbb
lods
or
movb
fldt
dec
mov
lcall
adc
mov
imul
ja
ret
ret
push
push
mov
push
ss
test
roll
push
jmp
test
and
stos
aas
int3
jge
andb
lods
repz
mov
xchg
sub
sarb
push
adc
mov
push
insb
mov
adc
inc
sub
dec
int3
or
shll
xor
aam
daa
out
js
xchg
xlat
xor
outsl
or
mov
lret
lcall
mov
or
into
int
push
cld
sub
ljmp
push
out
cwtl
shr
mov
shll
or
mov
mov
mov
mov
int3
pop
pop
inc
out
jne
scas
cltd
push
les
adc
pop
out
nop
push
adc
fidivrs
dec
sub
lret
pushf
mov
or
add
lea
sbb
adc
scas
adc
mov
jno
call
mov
orb
or
mov
shl
jnp
outsl
cmp
sub
mov
mov
mov
inc
ss
push
out
ror
cmpsb
enter
push
sbb
mov
fsub
xor
js
inc
add
and
movsb
ja
stc
adc
sub
adc
pop
adc
mov
lcall
and
sub
pop
out
cmp
andl
push
hlt
orl
je
dec
pop
setae
mov
pop
test
in
fsub
pushf
insl
bound
cmp
or
adc
jmp
jnp
andb
ljmp
nop
pop
lea
addb
mov
sub
les
mov
jae
sbb
sbb
inc
cmp
push
ss
mov
and
in
push
cld
dec
mov
inc
scas
adc
or
xor
xor
or
stc
jge
stos
cmc
add
out
fstps
sub
cmpsl
jno
dec
or
lcall
push
adc
fs
sub
fidivs
call
dec
or
lds
add
mov
popa
inc
fcmovb
lcall
sub
or
fiaddl
or
pop
data16
sbb
ds
xchg
fs
mov
and
arpl
dec
pop
adc
or
sub
insl
iret
aam
in
test
sbb
es
xchg
dec
or
xchg
inc
faddl
test
xchg
mov
lret
int3
xor
movsb
pop
outsb
xchg
loop
xchg
inc
sub
cmp
jno
rorb
dec
pushf
add
test
leave
mov
mov
adc
sbb
jns
addr16
xor
inc
icebp
xchg
lea
push
xchg
xor
adc
paddusw
leave
lea
mov
in
mov
dec
cmp
nop
mov
mov
xor
push
ret
pusha
mov
sub
cmp
test
inc
push
xchg
imulb
insb
sti
imul
ret
inc
test
ljmp
test
add
mov
fildl
out
lret
dec
and
xchg
dec
cltd
push
in
mov
jns
decl
or
sar
jecxz
cmp
stc
popa
std
jmp
mov
add
adc
pop
cmp
into
mov
lods
sarb
dec
jo
movsb
sub
mov
popa
sarl
aam
jae
fistps
fcoml
lds
inc
xchg
push
inc
add
ret
cmp
lcall
ja
sub
stc
ljmp
rcr
adc
and
jle
incl
push
ljmp
mov
mov
fwait
mov
push
int3
xchg
and
mov
lret
imul
lcall
xchg
pop
pop
std
out
addr16
jo
shll
jns
imul
outsl
mov
pushf
stos
xchg
lods
lret
sbb
cmp
push
inc
mov
fidivl
pop
or
or
es
fcomip
jl
sbb
das
sbb
icebp
fdiv
pop
mov
add
mov
pop
jbe
mov
and
and
jge
pop
xchg
outsl
cli
cmp
mov
adc
xlat
cld
roll
nop
ljmp
xchg
inc
xchg
hlt
lods
mov
xor
loope
test
in
mov
pop
movsl
push
sar
xchg
pop
xor
cli
data16
mov
dec
orb
sahf
cmp
xchg
push
sub
push
xor
sub
andl
es
mov
sbb
pushf
pop
negb
mov
pop
inc
xor
loope
lret
movsb
cltd
test
test
lcall
out
subb
ret
mov
push
in
inc
dec
inc
fprem
mov
es
lods
xchg
aas
lds
cmp
sbb
sub
jmp
popf
popa
mov
repz
add
adc
lcall
jbe
testb
lock
outsl
jo
inc
das
enter
xorl
cmpsb
push
mov
add
xor
divb
inc
and
push
int3
sub
mov
pop
xchg
adc
mov
lret
fmuls
cmp
cmp
lahf
iret
sti
lret
xchg
jecxz
arpl
setl
insl
pop
cmp
sti
cmp
lea
cmp
xchg
pop
and
inc
or
fisubrs
xchg
imul
negb
push
jl
mov
xor
frstor
xor
mov
add
xchg
pop
lcall
cmpl
mov
push
inc
cmp
into
jle
fisubrs
sbb
inc
stc
test
les
or
push
dec
mov
mov
pop
and
loopne
inc
mov
mov
xlat
mov
int3
mov
ss
notb
popf
les
cltd
shlb
add
repnz
faddl
loop
fnstsw
mov
daa
icebp
dec
es
dec
lahf
xchg
dec
mov
call
dec
daa
mov
xor
adc
in
insb
fldenv
fs
pop
fmuls
sub
cld
popa
sti
lock
cmpsl
std
iret
lret
jl
dec
mov
pop
sbb
sti
fisttps
jbe
je
sbb
out
ret
mov
push
xchg
mov
dec
cld
pop
pop
sub
and
jo
mov
jb
lods
mov
mov
rclb
jbe
imul
sahf
pop
aam
insl
push
jg
and
mov
add
adc
xlat
lahf
rclb
in
fsubl
dec
add
bound
lcall
cmc
imul
in
mov
repz
sbb
cwtl
cmpsl
icebp
pusha
sub
dec
in
out
out
mov
test
js
call
jns
add
outsb
aad
lret
cmpsb
push
clc
jnp
clc
insb
pop
add
imul
jp
sub
sub
les
cmp
imul
lds
cmp
or
inc
sbbb
ss
adc
add
add
js
xchg
jns
subb
aaa
cmp
xor
jo
ja
test
add
push
pop
jp
sbb
lea
in
cmp
insl
sub
ret
push
mov
xchg
push
add
mov
mov
aaa
repnz
dec
pop
mov
lcall
xchg
mov
mov
xchg
or
fistpll
xor
aam
insb
or
cld
out
push
push
call
int3
sbb
add
decl
jmp
pop
pop
pop
cmp
xor
jbe
xchg
ja
xchg
not
mov
mov
lea
mov
ja
outsl
out
cli
rorb
inc
mov
cmp
mov
inc
movb
adc
es
pop
imul
sbbl
addr16
xor
dec
inc
mov
pop
call
push
out
mov
into
movsb
jecxz
int3
xchg
or
sbb
mov
js
push
mov
add
ffree
dec
jnp
mov
mov
mov
adc
inc
clc
lods
mov
in
mov
push
sub
push
pop
sub
or
push
dec
or
nop
iret
fistl
movlps
adc
pushf
je
push
add
and
push
int3
pop
sub
dec
jle
push
or
movsl
lea
mov
mov
jbe
or
daa
pop
inc
inc
testb
sbb
fstl
insl
xchg
and
and
mov
outsl
hlt
fdiv
lret
lahf
xor
test
xchg
add
sti
cli
jp
aad
cmp
pop
xchg
and
lock
push
andl
fwait
inc
or
jle
add
mov
cwtl
jne
push
push
mov
rclb
pushf
cmp
pop
inc
jbe
xor
sbb
cltd
push
xlat
jp
add
pop
or
and
adc
cld
dec
jne
or
call
das
in
jbe
lret
dec
in
adc
fwait
sbb
data16
lock
aaa
fcoml
xorl
lods
mov
mov
pusha
fists
and
das
lret
mov
mov
mov
jmp
push
into
not
scas
mov
mov
comiss
incl
aam
xor
lcall
xlat
jae
imul
es
out
pop
xchg
xchg
push
icebp
sbb
inc
aam
aas
aam
adcb
sbb
out
inc
and
pop
data16
loopne
dec
fisubs
sub
ja
xchg
and
lea
int
jb
push
test
cmp
mov
into
or
aaa
fbld
pop
pop
les
rolb
outsl
pop
and
orb
enter
xchg
cli
cmp
iret
aam
aad
add
std
cmp
sbb
dec
test
jno
push
push
pop
and
lret
dec
jne
nop
in
cld
pop
iret
repz
push
leave
pop
fcompl
movsb
lret
cmp
or
or
sbb
push
sahf
lret
insb
int
jne
and
xchg
popf
dec
test
int
or
dec
repnz
ljmp
rorl
daa
jecxz
cwtl
and
arpl
add
pusha
aas
gs
popf
xchg
clc
xchg
shlb
test
je
sti
js
inc
sbb
pop
cmpb
sub
pop
mov
xor
inc
ret
dec
xor
inc
in
sti
xchg
adc
cwtl
cmp
pop
mov
and
mov
and
addr16
insb
lret
sbb
fmull
cmpsl
mov
jp
das
jp
std
mov
jb
sbb
xchg
push
clc
mov
push
jge
ret
fmuls
pop
jg
cmc
fldcw
mov
sub
sub
sub
sbb
orl
add
inc
lock
or
and
and
mov
insb
xchg
out
insb
mov
pop
int
movsl
rcrb
mov
sbb
xchg
dec
fs
xchg
xchg
iret
xor
fs
mov
push
or
xchg
gs
fdivrl
call
dec
pushf
cmc
adc
add
jmp
or
push
adc
xchg
es
sti
or
xor
call
subl
loop
dec
aam
dec
dec
push
fstp
test
sub
push
ds
jae
mov
scas
pop
sub
lret
cmp
xlat
test
in
dec
fs
or
sbb
in
inc
push
cld
push
repz
sbb
ja
cmpsl
dec
push
and
xchg
je
push
sub
mov
ficoml
pop
nop
int3
push
fsub
data16
push
xchg
imul
lcall
mov
lcall
inc
mov
loop
cmp
mov
add
adc
jne
addb
mov
loope
xor
or
or
movsl
jbe
or
mov
nop
addr16
cs
out
rcrb
jo
lcall
cli
jmp
add
cmc
stos
lcall
sarb
dec
aam
ja
out
xor
jge
mov
std
ja
pusha
jge
xorl
push
mov
out
ret
and
push
push
bnd
xor
xchg
mov
movsb
into
fstl
cmpsb
xor
mov
jo
pop
ja
pop
jbe
stc
mov
je
ja
xlat
sub
adc
ficoml
xor
mov
xor
mov
inc
mov
push
stos
inc
fiadds
sbb
inc
dec
adc
adc
or
pusha
mov
sub
xor
jmp
mov
pushf
mov
mov
dec
out
into
xor
and
and
js
jns
int
lock
sub
loopne
xchg
push
push
push
xchg
jecxz
add
into
cmc
or
jno
add
stos
cmp
jbe
inc
icebp
fldcw
ss
add
push
ljmp
adc
ds
jbe
mov
pop
push
jae
je
adc
sbb
xchg
pop
mov
aam
xchg
sub
out
imul
mov
cmp
xchg
push
nop
sti
mov
clc
nop
loop
mov
push
add
nop
adcb
mov
nop
inc
iret
sbb
fldt
mov
xor
sub
stc
push
scas
dec
inc
jge
les
xorb
mov
pop
xor
arpl
push
cmp
fidivl
mov
lcall
push
ret
or
mov
jp
aam
dec
subb
sahf
fnstcw
mov
pop
jl
pop
std
or
cmpsl
jbe
push
psraw
js
dec
bnd
or
sub
rep
xchg
push
clc
xchg
jl
pop
js
or
jbe
mov
jne
icebp
and
aaa
push
dec
cmp
cld
int
cmp
xchg
xor
or
loop
mov
mov
push
outsb
xchg
out
cmc
cmc
or
sti
in
sub
dec
pop
or
push
mov
mov
cli
and
inc
adc
test
pop
scas
mov
shrl
jb
mov
sbb
or
clc
in
lods
pop
xchg
rcrl
pop
outsl
popa
sti
cli
insb
cltd
adc
xchg
lock
fildl
repnz
mov
push
cld
push
ss
pop
sti
jbe
arpl
scas
push
shll
call
inc
jb
jb
negl
and
add
add
lea
sub
jae
lahf
pop
loope
rol
and
shrl
lcall
repnz
sti
lret
ljmp
push
xchg
inc
mov
add
inc
cmp
mov
repnz
adc
jg
mov
pop
jo
aad
inc
sub
out
stos
and
push
sbb
or
mov
cmc
popa
fisttpll
pop
pushf
push
daa
movsb
repnz
lea
xchg
movsl
add
xchg
jae,pt
mov
fsubl
enter
stos
fdivrl
push
pop
in
jne
sub
lock
ja
dec
test
fs
or
ret
dec
pop
jle
loop
sbb
fwait
dec
sbb
push
adc
rol
sbb
out
push
icebp
outsb
push
cwtl
jg
pop
or
in
repnz
inc
pop
clc
push
mov
cli
jmp
cmpl
cli
mov
cli
push
rcrl
mov
jg
pop
dec
icebp
pop
gs
rclb
wbinvd
je
add
fdivp
mov
mov
mov
in
or
pop
or
pop
mov
ret
jle
adc
jmp
fdiv
repnz
adc
jge
std
data16
xchg
push
cld
int
mov
or
cmp
and
mov
add
cmpsb
pop
lret
adc
int
push
mov
rclb
xchg
pop
loop
mov
stc
movsb
sbb
xor
insl
fwait
xchg
je
sbb
sbb
xor
nop
pop
es
adc
popf
mov
fs
hlt
cld
mov
das
in
lds
jle
mov
add
pop
es
mov
jg
in
out
sub
mov
xchg
adc
loope
test
mov
popa
push
lahf
or
or
in
mov
mov
jp
mov
mov
pusha
decb
mov
stc
mov
cmpsb
pop
pushf
js
xchg
fisubrl
cli
popf
mov
iret
add
mov
mov
movl
fldl2e
shr
pop
and
and
or
xor
mov
lcall
push
push
push
or
sbb
inc
shll
cmp
mov
jmp
pop
inc
iret
push
push
nop
pop
sub
testl
mov
scas
xor
loopne,pn
xor
sub
jecxz
lds
sbb
pop
mov
notl
or
and
mov
push
cmpsl
ficompl
and
or
call
cmp
icebp
mov
je
test
lea
inc
out
lcall
push
adc
icebp
iret
xor
push
data16
ret
add
jae
testl
mov
mov
xor
sub
cmp
push
inc
xor
jp
inc
inc
and
cmp
in
jmp
cld
iret
les
push
adc
mov
pop
scas
jmp
cmp
stos
mov
xchg
mov
rol
push
repz
fimull
lcall
repnz
divl
mull
ljmp
imul
inc
scas
fsubs
fcoml
push
and
fadds
inc
es
loop
xor
mov
nop
sub
sahf
sbb
jno
mov
cmp
outsl
and
mov
popa
mov
pop
jmp
xchg
adc
push
outsb
xchg
insl
jbe
mov
xor
arpl
std
dec
pop
jae
imulb
jge
test
xchg
mov
jmp
and
movsb
outsl
mov
dec
push
cli
mov
int3
inc
mov
stc
lods
repnz
jp
arpl
sti
or
fwait
xchg
xchg
popa
sub
fdivs
inc
pop
pop
adc
add
cld
dec
mov
popa
inc
mov
pop
push
jl
fildl
fs
movsb
lods
dec
sbb
sub
or
mov
jae
adc
imul
inc
add
sub
push
lods
outsb
and
pop
mov
sahf
sub
mov
jmp
ret
mov
addr16
pop
push
dec
dec
loopne
and
jp
sbb
mov
pop
jae
lds
mov
fwait
mov
xchg
cmpl
adc
in
pop
lea
movsb
or
out
mov
pushf
or
rorb
xchg
pop
aaa
mov
int3
lret
fs
jecxz
jl
pop
cmp
mov
data16
jmp
or
xor
xchg
cmc
jo
push
or
ret
pop
dec
pcmpgtb
push
xor
jg
add
pop
lock
inc
test
pusha
imul
loope
out
cmp
and
push
inc
mov
rorl
cmc
mov
daa
movsl
into
inc
inc
pop
in
lahf
inc
rcrb
mov
lods
insb
cmp
loop,pt
cmpsl
or
add
aaa
sbb
sub
hlt
ret
outsb
std
inc
jecxz
mov
repz
daa
and
lea
cs
pop
dec
mov
leave
dec
icebp
pop
adc
daa
in
and
adc
loope
sub
jp
test
in
mov
mov
rcll
stos
adc
je
cld
lods
stc
insb
adc
dec
push
push
dec
les
sarl
adc
mov
dec
mov
std
and
lret
inc
fsub
lcall
or
inc
xchg
xchg
lock
or
in
outsl
mov
jge
orb
mov
mov
push
pusha
in
mov
cmpsb
out
lahf
mov
enter
orb
pop
or
mov
dec
fimull
das
sarl
and
data16
pop
mov
aam
es
and
mov
xor
push
sti
test
cmp
xor
sub
gs
push
adc
xor
jne
or
or
pop
add
incb
sub
jo
mov
mov
push
adc
add
js
dec
adc
jmp
jmp
jbe
cmp
pop
cmp
aam
mov
xchg
fiadds
and
jno
and
negb
repz
or
xchg
test
hlt
mov
jno
dec
sub
fnclex
pop
lock
fimull
push
xchg
lahf
xchg
sub
push
in
jo
dec
jl
je
fxch
int
add
xor
mov
lods
sub
xchg
aad
xor
imul
aad
sub
fimull
pop
mov
das
mov
cltd
xchg
lds
mov
fnsave
aaa
hlt
in
int
cld
aaa
pushf
and
movsl
stc
sbbl
imul
xor
cs
sbb
cli
call
xchg
xchg
movsl
push
jge
or
roll
mov
cli
jge
fistpll
and
cs
orb
xchg
jmp
jmp
jbe
cld
push
test
lea
ss
out
pop
add
adcl
mov
xor
adc
inc
pushf
int
lcall
inc
test
clc
jo
aas
adc
stos
std
or
inc
adc
sar
xchg
jl
and
xchg
dec
in
lds
push
loopne
call
xor
dec
rcrb
stos
in
aas
jle
add
popf
insb
inc
pop
inc
fidivl
pop
xorb
mov
iret
or
xor
mov
std
mov
repz
push
out
or
dec
rol
iret
icebp
sub
pushf
scas
push
inc
les
fstpt
enter
mov
mov
pop
cmpb
sub
sub
or
xchg
mov
mov
data16
pop
rcr
loop
xor
or
pusha
pop
sbb
icebp
sbb
arpl
gs
leave
and
and
push
rcrb
repnz
xchg
int
dec
roll
ljmp
jno
aad
ret
sahf
in
dec
arpl
imul
call
sub
insl
arpl
jbe
std
inc
add
popa
xchg
xorl
adc
stos
rol
or
in
inc
mov
jecxz
cmp
cs
aas
push
adc
pushf
int
mov
icebp
lds
pop
adc
test
xor
adc
dec
cld
pop
fisubl
mov
insb
pop
loopne
add
iret
lea
jp
in
mov
push
ret
and
aas
mov
fwait
mov
out
mov
xor
pop
js
ficoml
lods
ret
fdivrs
cmp
dec
push
jecxz
repz
loopne
mov
pop
pusha
mov
mov
push
fbld
lret
dec
jl
nop
pop
int3
sbb
adc
addb
inc
jg
sbbl
add
pop
xor
das
insb
cltd
out
mov
hlt
mov
cmpsb
clc
in
scas
and
sub
ljmp
add
repnz
inc
jl
cmovb
pop
jle
jbe
cltd
rclb
insl
adc
lds
dec
in
cwtl
pop
push
jecxz
jo
int3
ret
imulb
clc
jecxz
xchg
pop
flds
sub
scas
inc
cmp
nop
int3
pop
push
xchg
loopne
and
lahf
mov
mov
inc
daa
jno
or
cmc
sub
jne
insl
popf
inc
xlat
pop
xchg
dec
stos
sbb
jo
aaa
sbb
mov
jmp
xorl
sarl
rolb
inc
mov
mov
jb
cs
mov
lods
or
arpl
xchg
loop
dec
mov
add
cmp
leave
cmc
sbb
inc
sbb
mov
lods
mov
lahf
dec
shrb
out
call
push
pushf
mov
jmp
fmul
adc
je
jle
pop
or
in
addr16
fdivr
repnz
xor
sbb
pop
push
inc
sbb
ljmp
and
lret
jns
lds
mov
xchg
sbbl
imul
leave
jmp
push
rcll
sbb
sub
mov
pushf
add
mov
push
mov
cmp
mov
jbe
movsb
xchg
push
stos
fwait
jl
ret
mov
mov
imul
dec
or
mov
cwtl
jle
add
das
cmc
mov
outsb
mov
dec
and
fwait
lock
jns
mov
and
lds
adc
test
sub
xor
xchg
aam
in
fsub
pop
jg
mov
pop
pop
leave
fsubrs
ret
pushl
int
sub
push
xchg
dec
xor
mov
mov
fdivrs
jae
cs
mov
mov
add
and
push
repz
mov
or
or
out
aas
pop
mov
mov
or
or
adc
mov
inc
add
movsb
sbb
cli
push
mov
test
or
jl
cmp
xchg
cmp
and
arpl
jle
movsb
mov
leave
test
popa
cmc
mov
jecxz
arpl
outsl
and
sbb
cmpl
mov
les
or
mov
sub
rcrl
inc
push
jmp
xchg
sub
add
adc
decl
das
pop
cmpb
mov
lret
mov
leave
or
insb
inc
lcall
mov
sub
cmpl
jae
inc
and
repz
jns
pop
sbb
jb
mov
popa
or
inc
nop
repnz
lock
movsl
stc
fisttps
or
adc
jg
sbb
aam
push
popf
ljmp
mov
and
cmp
not
ljmp
iret
out
or
adc
jecxz
icebp
inc
adc
enter
xor
jecxz
jg
mov
into
add
rcrb
jbe
sbb
hlt
mov
mov
in
mov
or
inc
cmp
sbb
xor
jecxz
enter
mov
data16
jmp
inc
addr16
cmp
xchg
mov
fmul
enter
mov
pop
sbb
push
pusha
inc
inc
addr16
jne
xchg
ret
push
into
jno
int3
inc
jl
out
fdivl
bound
jmp
adc
adc
xor
adc
loope
test
mov
bound
loope
stc
mov
das
mov
pop
xchg
fucomip
sbb
and
cmpsb
lock
cmpsl
inc
aas
sbb
out
push
xchg
jns
fldlg2
sub
or
popf
sub
xor
sbbb
sti
xor
or
xchg
jmp
dec
fwait
pop
or
fsubl
xchg
pop
je
dec
mov
jg
push
cld
popf
lahf
fcoml
repnz
dec
add
adc
sbb
and
lahf
adc
mov
pop
cli
xchg
cltd
nop
push
mov
sub
dec
sub
mov
sub
xchg
pop
xchg
or
daa
dec
pop
push
out
mov
mov
popa
rcrb
adc
iret
jo
stos
in
in
pop
push
fucom
mov
xor
and
mov
push
pushf
and
mov
ret
in
sbbl
icebp
or
sbb
lock
movsb
push
cmp
mov
pop
in
loopne
mov
adc
jge
les
ljmp
shll
movsl
cltd
or
test
xor
dec
and
sbb
push
inc
ret
lret
incl
sbb
pop
loopne
sbb
adc
insl
push
addb
movsl
aas
push
arpl
loop
imul
xor
out
iret
push
xor
and
lahf
jge
push
and
addr16
cmc
pushl
jecxz
clc
dec
or
add
push
sub
mov
ficoml
cmp
push
stc
movsb
loop
popa
outsb
sti
cld
cwtl
adc
iret
in
lds
xor
je
fstps
cmp
adc
mov
mov
mov
pop
jp
sub
enter
imul
xchg
jecxz
daa
divl
pop
test
pop
clc
push
fimull
ja
push
lahf
jno
mov
hlt
mov
fiadds
out
jmp
jns
jns
enter
sbb
cmp
pop
pop
divl
push
jmp
lcall
call
popf
dec
in
cld
or
adc
divl
mov
lret
jo
push
clc
push
js
adc
jo
and
push
push
loopne
lret
mov
pop
lahf
jno
test
fidivrl
cmp
jno
inc
xchg
pusha
and
ss
dec
jmp
add
inc
int
sbb
or
jo
jg
xor
icebp
ss
adc
hlt
mov
stc
out
or
in
adc
pop
xchg
cli
mov
cmp
ljmp
mov
xchg
adc
sub
or
aaa
jnp
loopne
sub
and
dec
jg
in
leave
icebp
mov
stos
adc
xchg
ds
addr16
xor
mov
mov
bound
jne
lds
ret
pop
jp
adc
std
push
imul
int
in
adc
repnz
andb
xlat
arpl
push
cld
iret
aas
inc
xor
adc
jmp
pop
sbb
mov
outsl
dec
hlt
shrl
dec
jmp
call
iret
mov
xor
jae
pop
sub
dec
sti
stos
data16
xlat
test
fldenv
mov
and
mov
push
je
in
pop
xor
lahf
shll
fs
xchg
mov
jg
daa
jo
ficoms
or
fs
mov
clc
mov
repnz
xchg
fimuls
test
jle
sub
add
loopne
insb
dec
add
arpl
pop
jl
push
je
inc
out
dec
arpl
stos
push
push
cmp
mov
dec
xchg
cmp
mov
add
int3
das
imull
ja
or
sbb
xchg
and
pop
fs
loope
repnz
sbb
and
sbb
inc
pop
dec
cmp
rcll
mov
pop
pop
sub
jb
mov
pop
outsl
inc
inc
pop
adc
push
decl
jo
push
pop
shl
js
fisubl
hlt
cmp
jb
cltd
mov
push
or
and
repz
mov
imul
divb
setnp
pop
lock
stos
add
and
inc
stos
sub
cmp
je
mov
push
xchg
scas
addr16
push
lds
test
test
push
adc
cli
rolb
je
andl
add
xor
stc
aas
and
rcl
test
add
repnz
mov
stos
push
fcmovnbe
mov
dec
stc
pop
inc
cmpsb
loopne
mov
cltd
jnp
push
jmp
call
push
pop
lods
test
mov
pop
int
outsl
nop
push
pop
loopne
push
fnstsw
inc
testl
fimull
cmp
pop
push
pop
shlb
lods
les
stc
ljmp
push
xor
popa
inc
lods
fnsave
shlb
pop
aam
jge
xor
lcall
nop
mov
movsl
or
xchg
pop
fwait
dec
pop
jnp
cmp
out
ljmp
pop
roll
push
stos
xor
scas
insl
or
addr16
sub
shl
in
loope
mov
adc
pop
popl
mov
nop
mov
cwtl
das
pop
mov
js
mov
popf
pop
and
cwtl
adc
js
mov
sbb
xchg
and
cmpsb
and
adc
cmp
cmp
jbe
inc
ret
push
add
fwait
push
sbb
jle
push
jb
cmp
fists
mov
mov
into
mov
fxtract
xchg
lock
aaa
push
testl
fsubrl
insl
jecxz
cmp
shl
lock
mov
mov
dec
negb
and
ja
test
jecxz
lahf
dec
daa
loop
movsb
fiadds
rorb
xchg
outsb
mov
inc
mov
cs
stos
xor
mov
pop
xchg
inc
cmp
stos
dec
jle
xor
mov
imul
shll
push
lahf
in
inc
daa
jno
test
scas
xorb
in
sbb
das
lret
iret
sbb
add
repz
cmpsl
fucomip
repz
jae
jns
adc
call
enter
inc
out
sti
shrl
pop
sti
adc
stos
iret
pop
push
jl
iret
sub
inc
cmp
jg
lods
push
xchg
outsb
cltd
js
cmp
push
push
jo
hlt
jbe
push
mov
push
and
mov
out
mov
notb
mov
pushf
lea
lret
lock
outsl
pop
and
insb
xchg
pop
push
pop
movsl
cld
ds
inc
clc
or
or
arpl
sbb
into
jae
xchg
mov
shlb
bound
fidivrl
maskmovq
negl
dec
adc
push
and
ror
repz
dec
mov
lds
inc
es
fmulp
aas
xor
push
repnz
in
pusha
dec
push
pop
jns
imul
jbe
push
ss
cwtl
mov
rclb
movsl
mov
mov
int
push
inc
xchg
lea
add
out
fimuls
cmpxchg
idivb
or
in
sbb
sti
cld
idivl
jp
int
outsl
xchg
adc
add
mov
pushf
mov
test
ja
outsb
push
xchg
nop
fsubrl
pop
iret
mov
sub
hlt
jg
inc
add
jae
jae
jmp
adc
mov
inc
adc
inc
inc
lret
push
mov
and
dec
cmp
imul
ret
movsb
ret
ret
sbb
push
and
jp
xlat
or
pop
cld
fisubs
out
inc
inc
push
stos
adc
push
xor
and
xchg
inc
lock
xchg
gs
mov
lea
sbb
fisubrs
jne
scas
js,pn
or
aam
mov
pop
aad
ds
inc
jge
adc
push
push
cli
fs
test
frstor
lcall
xorl
pusha
sbb
ljmp
jmp
sbb
sub
sub
and
test
dec
fimull
insl
or
jecxz
lock
mov
jae
fbstp
cmp
mov
cld
or
fldenv
insb
bound
mov
js
pop
jnp
into
push
push
shr
dec
mov
flds
mov
adc
jbe
pop
fiaddl
sub
jecxz
sub
cmp
xlat
xor
imul
jb
out
mov
jp
inc
lahf
data16
inc
inc
mov
add
cli
arpl
aaa
dec
leave
mov
jo
mov
pop
inc
push
mov
int3
mov
mov
jbe
sub
mov
imul
fs
add
hlt
adc
push
mov
pop
clc
js
imul
div
xchg
dec
cli
or
push
nop
in
fisttpl
test
scas
les
pop
adc
shl
cltd
pop
inc
push
add
in
xchg
out
cltd
jg
push
nop
or
mov
fmul
lea
mov
pop
inc
xor
movsb
pop
or
adc
jnp
lea
and
sti
lret
mov
sbb
scas
lods
test
pop
push
shrb
test
inc
dec
scas
mov
pop
sub
in
xchg
mov
sbb
lcall
pop
mov
js
mov
in
or
mov
sub
mov
jge
dec
jns
or
mov
pop
adc
lea
sbb
out
sub
dec
and
push
push
jae
cwtl
cmpsl
lcall
pop
xlat
mov
dec
mov
mov
lcall
sub
test
aad
imul
sahf
dec
ss
loope
jne
scas
adc
mov
mov
cmp
sbb
inc
jmp
jle
mov
fstpl
hlt
rcrb
dec
jle
mov
xchg
lods
jb
adc
mov
cmc
imul
cmp
xor
push
int3
fsubrs
cmpsl
ljmp
pop
xor
hlt
sub
ret
jge
fwait
jge
dec
arpl
loopne
sub
rcl
inc
insl
push
ss
hlt
push
push
int
or
lret
icebp
popf
and
test
cmc
pshufw
cwtl
adc
ljmp
sub
sahf
push
adc
leave
ss
subl
in
inc
lods
sbb
nop
ret
sub
cmpsb
repz
dec
scas
inc
mov
clc
jns
mov
jg
pusha
xchg
fwait
fwait
sti
xor
ret
pushf
ljmp
cli
sub
push
test
stos
xchg
mov
xlat
lret
pusha
sarl
jae
notb
ret
lret
jge
xor
mov
clc
std
mov
mov
mov
arpl
mov
enter
lret
mov
mov
sbb
add
test
clc
ffreep
push
and
out
pop
adc
pop
lcall
push
test
pop
xor
xchg
sbb
pop
mov
loop
cli
js
repnz
mov
pop
test
gs
pop
cmp
or
mov
es
in
repz
mov
pop
rcll
add
add
clc
test
test
jne
mov
test
pop
int
cli
stos
mov
pop
pop
fsubp
imul
pop
sti
pop
push
mov
aam
outsl
xchg
lea
in
lods
enter
pop
push
xchg
scas
sbb
mov
push
xchg
sub
outsb
cli
addl
jne
scas
adcw
js
jns
push
in
mov
cld
pusha
popf
mov
xchg
hlt
mov
cmp
xor
mov
leave
fadds
mov
or
inc
movsl
and
daa
ljmp
lahf
cmp
lcall
loop
mov
in
inc
jns
pop
inc
loope
sahf
repnz
push
out
das
dec
lret
out
shll
cmp
push
loope
into
or
sbb
pop
mov
js
inc
mov
cmc
xor
lcall
jae
stc
jo
stos
jmp
inc
jge
sbb
cmpl
lahf
sbb
in
xchg
inc
jns
popa
decb
aas
pop
push
rcrb
xor
hlt
push
pop
jg
dec
addr16
add
pop
adc
push
es
inc
lcall
or
add
cmp
testl
loope
push
sub
ss
add
sbbl
jle
movhlps
int
cmpsb
jne
or
inc
mov
aam
sbb
inc
mov
adc
xchg
cmpsl
dec
icebp
mov
xchg
ss
mov
pop
and
xchg
mov
iret
jns
jne
ret
pop
jbe
mov
insb
mov
jp
lret
loopne
test
cmp
sbb
call
xchg
xor
je
xor
out
shrb
in
mov
je
or
mov
sub
jbe
loopne
insb
cs
aas
cmp
xor
pop
fistpll
dec
adc
cmp
cmp
lods
cwtl
jecxz
pop
xor
das
cmp
add
or
pop
sahf
fs
flds
xorb
popf
mov
push
push
out
push
stos
insb
fs
cmc
out
xchg
inc
mov
mov
cmpl
pop
push
mov
jae
roll
xor
and
fistps
mov
dec
dec
and
bound
mov
xor
jne
inc
inc
adc
jmp
ja
test
mov
sub
adc
xor
cmpsb
loop
ss
cwtl
incb
add
and
push
jge
iret
push
ret
ja
pop
repz
dec
dec
mov
rcrb
pusha
cmpsl
mov
psubq
mov
lds
push
imul
sbb
addr16
sbb
fidivrl
inc
cmp
sbb
lea
mov
lods
into
jns
dec
mov
int
jns
adc
data16
insb
push
dec
test
mov
enter
mov
sti
pop
xlat
idivb
jnp
jmp
mov
pop
es
test
sbb
fidivs
pop
ljmp
clc
and
or
sbb
icebp
leave
push
in
sub
inc
mov
rcr
call
fldcw
je
pop
decl
call
out
lods
ficomps
pop
icebp
lods
dec
insb
ss
rcll
mov
shl
xchg
sbb
or
fiaddl
in
jg
add
fistpll
enter
pop
bound
mov
test
push
mov
repnz
jnp
xchg
xor
in
pop
lcall
out
pushf
mov
adc
mov
sbb
xchg
clc
popf
es
cmp
leave
pushf
cmp
push
jge
ja
cmc
push
rorl
rcll
stos
sub
fcmovnb
sbbb
cmp
sub
rclb
xor
lret
xchg
adc
int
shll
test
test
fcmovbe
mov
add
rol
inc
repnz
pushf
pop
fdivrs
jae
lods
mov
idivb
das
mov
push
popa
inc
jno
clc
ds
sbb
jmp
sub
xchg
lret
dec
aaa
jle
pop
or
sbb
fisubs
lret
or
mov
sbb
enter
clc
inc
push
xor
out
loope
fsubs
pop
shlb
repz
jg
idivl
push
wbinvd
cli
int3
jle
mov
inc
xchg
dec
insb
shrb
fwait
mov
dec
dec
rorb
fbld
cwtl
sbb
dec
rcrl
shll
add
inc
cmp
popa
jmp
aad
push
jg
jns
fwait
mov
out
jle
aam
xchg
adcl
fwait
lcall
rclb
shl
cmp
out
cli
jmp
daa
fwait
jnp
repz
xor
ret
std
andl
fldt
adc
mov
add
or
aas
and
mov
enter
lock
addl
outsb
add
clc
shrb
cmp
fsubrl
hlt
stos
mov
or
jl
fists
mov
dec
pop
pushl
jle
push
sbb
mov
push
scas
push
sub
and
cmpsb
ret
mov
out
push
mov
dec
aam
stos
mov
fsubl
cmp
sbb
aas
lods
ss
cltd
sub
mov
addr16
aad
aas
or
push
int3
sub
addl
pusha
mov
or
jmp
add
adc
sub
jo
xor
les
cmp
pusha
jle
and
mov
aaa
lock
add
lods
movsl
and
sub
mov
fstpt
jb
sub
sbb
cmp
and
loop
cmp
loope
fcmovne
push
push
inc
push
out
ss
mov
inc
push
inc
adcl
repz
mov
push
mov
pop
das
cmp
mov
mov
mov
push
je
fwait
cmpsl
in
jae
enter
ficoml
cwtl
test
add
pop
pushf
cli
xor
jecxz
add
cmp
adc
push
sub
idiv
and
lret
or
cmp
inc
or
sbb
dec
adc
rolb
adc
lret
mov
push
add
mov
outsl
test
loop
cltd
sbb
mov
jo
out
lock
push
dec
pusha
ja
xor
jmp
xor
bound
and
and
or
fiadds
pop
mov
or
stos
cltd
mov
cli
adc
scas
rorl
mov
and
mov
pop
inc
dec
arpl
xlat
pop
repnz
inc
pushf
lods
push
jo
cmp
movsb
mov
mov
lret
pop
cmp
and
dec
sahf
lcall
imul
xor
xorb
test
xor
test
insb
scas
mov
mov
lret
cmp
movsb
pop
fdivl
mov
subb
mov
mov
xchg
xchg
add
neg
icebp
les
inc
fidivl
daa
mov
cltd
adc
sub
insl
mov
outsb
shlb
sbbb
add
add
lock
mov
mov
dec
test
pop
jl
data16
mov
pusha
inc
int
out
push
cmp
push
scas
int
out
leave
sbb
andl
scas
shlb
out
xchg
jb
sbb
scas
jg
jecxz
clc
test
push
jle
push
mov
test
adc
pusha
movsb
sub
ds
or
test
repnz
rcrb
mov
and
outsl
and
gs
aaa
mov
shl
lods
fidivrs
sub
pop
cltd
mov
sub
sub
or
mulb
dec
inc
and
push
and
xchg
push
pop
fidivl
mov
lret
mov
cmp
pop
rcr
adc
xchg
and
js
mov
rcll
xor
adc
cmpsl
mov
mov
jmp
orl
adc
jl
fstpl
push
addr16
jecxz
push
mov
je
mov
aam
jb
aad
jo
and
vpaddusb
inc
movsl
clc
cli
repz
jp
cmp
test
stos
add
jge
mov
aas
loop
ja
repz
pushf
cld
push
add
jae
pop
inc
inc
pop
nop
mov
add
addb
cld
je
mov
xchg
push
fisubrl
pop
push
in
inc
aam
mov
mov
jns
sub
add
movsl
push
xchg
pop
mov
mov
test
sbb
mov
ss
jno
mov
jle
leave
adc
xor
jp,pn
shlb
xlat
push
xor
imul
cmc
scas
and
pop
iret
imul
mov
aas
es
push
hlt
cmp
bound
cmp
jmp
inc
lock
cmp
ljmp
jns
add
lahf
movsb
push
mov
movsb
mov
mov
mov
sbb
lcall
scas
xor
mov
add
adc
cmpsb
pop
mov
sbb
stos
xor
mov
push
andb
test
and
call
cld
shll
ret
loope
mov
xchg
aad
jbe
pusha
iret
cli
aas
inc
sbb
pop
sub
cmp
xchg
das
push
in
fcomps
sahf
jmp
lret
adc
xchg
sub
adc
shll
xor
ret
outsl
push
std
mov
mov
jmp
arpl
ret
jl
mov
and
pop
xchg
cmp
test
cmp
inc
xchg
fisubrs
int
xor
gs
rcl
aas
jne
mov
leave
pop
jl
call
in
shl
out
into
std
fstpl
jmp
std
push
arpl
mov
sbb
xchg
and
ss
test
imul
jno
cmc
mov
push
add
dec
mov
movsl
adc
aam
adc
cmpsb
push
or
sbb
and
sub
sub
push
mov
cmp
push
or
stc
iret
push
sub
arpl
in
push
mov
or
jp
or
leave
outsb
ror
out
aad
dec
mov
mov
push
rolb
adc
mov
sti
into
roll
popf
stc
mov
mov
adc
enter
xchg
xchg
sub
push
adc
cvtpi2ps
repnz
lds
fnstsw
xlat
dec
and
imul
lock
sti
sub
push
cs
mov
js
dec
push
inc
or
int3
and
test
std
inc
add
adc
jle
dec
jne
fcoml
dec
mov
out
jno
dec
cs
jo
sub
insl
bound
dec
addb
loopne
daa
mov
adc
mov
out
imul
cltd
xchg
pop
push
lods
jge
scas
xor
daa
sahf
sbb
adc
leave
push
hlt
in
pop
inc
fmull
cs
mov
fwait
adc
sbb
cmp
push
and
and
adc
lods
lods
xchg
jnp
pop
push
dec
addl
jge
fpatan
sub
jae
sbb
dec
sti
xor
mov
add
push
mov
add
inc
daa
sbb
es
push
adc
hlt
push
in
jo
push
ss
aas
pop
stos
xchg
ret
stc
push
les
popa
pop
pop
adc
sub
adc
shll
imul
adc
mov
popa
cmp
lcall
push
jl
nop
cs
add
rcll
or
out
inc
cmp
pushf
repnz
xorb
imull
pop
jbe
dec
inc
mov
jo
faddl
jge
mov
sub
pop
mov
xor
insl
sub
sub
jmp
stos
adc
imul
push
stos
xlat
inc
mov
pop
shll
xor
popf
sbb
push
lods
mov
clc
data16
je
pop
repz
addl
sub
dec
out
fiaddl
xchg
cmc
test
addr16
xor
push
daa
in
cmp
loope
rcrl
push
outsl
fistps
jbe
pushf
sbb
mov
dec
in
xor
push
int3
mov
pop
jmp
scas
cmp
xchg
lds
jns
je
loop
inc
cmp
out
xlat
add
std
mov
hlt
and
add
push
cmp
fcom
push
dec
mov
int
call
int3
addr16
rep
call
in
jp
jl
scas
ret
adc
push
push
aam
mov
ret
lret
xor
jnp
cmp
push
pop
jbe
xchg
and
loope
loope
add
inc
fcoml
popl
mov
filds
push
lock
jns
mov
stos
ret
adc
rolb
xchg
movsb
not
sbb
movswl
sbb
adc
jno
fwait
cltd
lret
mov
xor
cli
addr16
dec
lods
mov
dec
adc
test
jae
sbb
xchg
xor
jg
imul
or
xor
fmull
sub
sbb
stc
sub
sub
icebp
or
cmpb
mov
and
pop
xchg
icebp
outsl
add
jl
mov
js
push
mov
gs
pop
and
dec
push
test
push
mov
xchg
jp
pop
adc
mov
mov
pop
sub
ljmp
push
mov
sub
lahf
cmp
push
fiadds
mov
repz
mov
cli
mov
xchg
mov
dec
jmp
xor
out
pushf
test
push
cltd
adc
dec
lcall
add
fucomi
enter
sub
add
mov
shr
jecxz
cmc
es
sti
scas
mov
aad
cld
not
xor
fcomip
mov
jb
call
rorl
fucomi
cltd
shlb
out
mov
out
scas
stos
xchg
lock
mov
sub
cmc
popa
lcall
push
je
jbe
xlat
push
pop
pop
call
mov
imul
mov
mov
jo
not
adc
jge
leave
mov
jecxz
arpl
andl
mov
movsl
push
lock
xchg
repnz
in
insl
mov
enter
es
push
dec
jo
mov
jno
jmp
das
dec
sub
paddusb
jecxz
dec
dec
mov
aaa
mov
sarl
xchg
mov
xchg
iret
fs
cmp
sbb
ds
cwtl
fidivrs
sub
jns
xchg
adc
and
out
andb
inc
out
out
mov
mov
in
and
loop
dec
lods
in
cld
iret
mov
pop
sub
mov
in
adc
jnp
loop
adc
in
out
mov
test
gs
addr16
decl
icebp
out
or
in
movsb
cmpsb
cwtl
inc
cmpsl
push
cmp
cmp
xchg
inc
jno
mov
pop
pop
cs
cmp
in
jns
xchg
and
adc
mov
and
push
int3
mov
add
les
testl
mov
insb
mov
cli
rclb
mov
iret
popf
xor
aam
inc
out
mov
cltd
push
pop
lods
sbb
cmp
adc
xor
test
fwait
mov
jo
sahf
call
movsb
cs
push
sbbl
sbb
sbb
mov
frstor
xorl
or
mov
hlt
push
push
sbb
and
and
stos
in
pop
and
jge
lds
test
mov
xchg
mov
iret
xchg
mov
cmp
imul
xor
mov
scas
mov
iret
jecxz
fidivrs
mov
pop
cmpsb
and
mov
jno
push
push
std
cwtl
lret
xor
mov
dec
sti
xchg
adc
mov
dec
pushf
inc
mov
push
in
repz
rcll
mov
int
jb
inc
ficomps
fs
vpcmpgtd
pop
std
in
mov
rcll
js
shrb
add
sub
mov
mov
mov
xchg
or
mov
lar
enter
aam
lods
je
or
int3
push
push
sub
into
inc
insl
pushw
xchg
add
add
aam
mov
xlat
and
adc
shll
aad
inc
testb
xor
loope
outsl
test
stc
aam
and
ret
movsb
call
lea
push
rcr
push
js
shrb
inc
and
cld
mov
cmp
jecxz
movsl
mov
mov
cmp
ret
aas
pop
test
test
xor
inc
ja
clc
in
xchg
xor
mov
sbb
insb
sub
movsl
mov
add
adc
add
sbb
insl
mov
push
mov
xchg
xchg
and
stc
in
insl
cmp
sbb
add
ss
jne
test
jbe
neg
inc
fcomip
cmpsb
pop
mov
pop
jo
adc
add
dec
int
inc
adc
in
rorb
inc
sub
in
mov
dec
movsb
cld
mov
push
add
movsl
or
add
leave
movsl
mov
pop
mov
out
xchg
mov
or
fisttps
cmc
packsswb
add
imul
jmp
movsl
mov
mov
dec
ss
mov
stc
shrb
or
xchg
or
sti
lock
mov
lcall
and
or
xchg
mov
jnp
into
or
cmp
push
jo
out
sub
faddl
dec
push
testl
jge
rcll
hlt
sahf
jne
sti
into
dec
cmp
cwtl
daa
inc
push
in
data16
frstor
mov
int3
movsb
jmp
jnp
in
jns
mov
ret
mov
inc
or
and
rcrl
fdivr
jmp
push
loopne
shl
orl
cld
inc
adc
lea
pop
pop
dec
enter
nop
loop
mov
je
push
sub
adc
setno
mov
jns
mov
xchg
add
jne
cmp
in
mov
imul
mov
jg
mov
lret
pop
mov
test
mov
sub
gs
pop
pop
in
pop
sub
or
js
pop
mov
movsb
dec
cmpb
sahf
mov
or
sub
adc
arpl
mov
fisttpll
mov
aaa
jmp
jp
rolb
imul
test
sbb
repz
xor
stos
xor
xchg
or
pop
lods
mov
mov
out
cmp
inc
mov
ret
pop
xchg
das
mov
and
adc
in
out
jo
adc
dec
add
in
aam
lea
shl
mov
mov
movsl
and
xorl
or
das
mov
scas
jp
push
mov
jg
in
mov
sbb
arpl
testl
pop
cwtl
lahf
idivb
cmp
sub
in
into
shlb
xor
dec
sub
out
dec
sub
fdivp
mov
push
adc
sbb
ljmp
cmp
jns
push
lret
pop
daa
testb
mov
adc
test
xor
push
dec
pop
clc
push
pushf
jnp
lods
xor
shrl
pushl
cltd
ret
lahf
popa
jge
in
push
xchg
push
rorb
adc
in
jge
cmp
mov
daa
inc
push
into
cmp
ja
cwtl
mov
pop
mov
imul
add
ja
push
movsb
not
push
and
sbb
xlat
stos
loope
push
nop
fiadds
cwtl
sub
sbb
mov
jmp
fbld
cmp
add
mov
out
pop
push
mov
add
mov
xchg
xor
jle
shlb
sbb
pop
psllq
aaa
ss
orl
pushf
sub
loopne
dec
outsl
insl
out
fisttpl
in
stos
jno
nop
jg
cmpsl
adc
bound
sbb
mov
cmpsl
rcll
or
les
sub
jae
dec
outsb
aad
xor
fdivrl
imul
leave
or
and
mov
cmp
mov
jmp
mov
gs
fistpl
pop
xor
les
mov
sti
fs
test
push
sub
data16
or
add
test
mov
add
push
pop
arpl
sbb
mov
push
inc
push
adc
in
sub
xor
mov
int3
cmp
inc
jge
daa
push
das
jno
les
sete
jb
imul
cmp
add
mov
fst
or
push
inc
sub
mov
cld
mov
mov
out
faddp
fimull
dec
adc
cmpsl
push
icebp
ja
in
repnz
loope
jg
mov
fstpt
jecxz
sub
outsb
adc
cmp
ds
in
pop
inc
dec
outsl
out
xor
cmp
mov
ret
xor
lock
xchg
mov
jb
pop
xor
push
mov
mov
arpl
mov
insb
or
lea
xchg
xor
or
shl
jns
inc
sbb
iret
divps
xchg
ja
test
roll
scas
ja
mov
pop
mov
andl
fs
lahf
fwait
and
pop
cmc
jno
cmp
lcall
and
jno
shll
sbb
loop
popf
and
jae
leave
xchg
lret
outsb
sbb
xchg
and
jle
inc
push
inc
daa
test
push
push
pushf
adc
pop
cltd
jg
sbb
or
jns
mov
std
adc
subl
iret
dec
cs
xchg
in
push
add
fs
in
les
inc
lods
lods
inc
into
stc
dec
jne
xchg
and
mov
fnstsw
incl
pop
cmpsb
ja
lcall
repnz
fcomps
pop
loopne
and
xlat
gs
lret
push
xor
data16
inc
rorb
in
jl
xchg
cs
shll
jae
mov
fdivrl
mov
mov
idivb
push
fstl
or
daa
sub
jl
ss
xchg
jo
sbb
mov
add
loope
and
out
divb
cmc
xchg
ss
and
mov
mov
adc
outsl
inc
push
arpl
inc
addr16
pop
jp
pushf
jmp
das
xchg
mov
push
and
push
add
scas
pushf
xchg
sbb
movsb
movsb
dec
add
mov
lret
leave
pop
aas
mov
mov
jecxz
mov
sub
add
ret
jno
js
repz
stos
dec
ja
cmc
roll
add
mov
inc
sub
lret
out
fistpll
push
shl
mov
fptan
adc
add
jmp
inc
data16
fisubrs
enter
fisttpll
sahf
cltd
out
popa
stc
push
mov
jecxz
jne
push
hlt
mov
push
inc
shlb
xor
or
in
or
test
insl
outsb
rorb
pop
sbb
push
xor
dec
mov
in
and
fsubrl
imul
pop
adc
leave
push
xchg
mov
imul
xchg
fcoms
push
in
inc
jne
and
fdivr
repnz
jp
insl
data16
aam
xor
lcall
les
mov
jb
jecxz
sbb
mov
mov
aaa
lcall
mov
ds
sub
xor
push
and
out
adc
pop
mulb
addl
outsl
sub
cmp
jne
leave
xor
ret
enter
insl
repnz
add
xor
shrl
aaa
mov
fsubl
ret
inc
mov
push
xchg
dec
and
test
int3
sbb
mov
jo
xor
ljmp
cld
xor
xchg
out
shrb
aam
ja
jnp
xorb
mov
int3
rclb
xchg
or
jbe
cmp
xchg
je
add
mov
jns
rolb
in
ss
mov
dec
mov
out
aas
aas
xchg
mov
push
xchg
dec
mov
sarb
inc
sbb
push
cmp
adc
mov
cmp
rcrb
test
scas
xchg
dec
bt
popf
pop
add
je
xchg
out
pop
lds
lret
jae
or
xor
cld
repnz
inc
xchg
dec
mov
ret
aad
sbb
scas
dec
and
push
sbb
mov
repz
mov
mov
xchg
xchg
movl
ja
in
mov
and
sub
test
js
cltd
mov
scas
aaa
sbb
sbb
mov
mov
shll
mov
lret
add
jbe
xchg
mov
in
negl
cmc
xlat
rol
int
subl
popf
test
aas
cmp
mov
sarl
out
sahf
mov
jp
dec
xchg
sbb
xor
fwait
int
inc
stc
jp
jg
test
lds
inc
and
inc
mov
pop
das
pop
nop
jge
push
lret
data16
pop
mov
add
or
mov
add
pop
out
lcall
fisubrs
and
jns
loope
mov
int3
pusha
cmp
mov
sarl
clc
call
shll
dec
das
aam
daa
mov
mov
cmp
pop
xor
xorb
pushf
jno
xchg
lods
jp
out
jae
inc
test
pop
mov
insl
and
stc
lret
addl
sub
mov
lcall
dec
push
js
hlt
pop
mov
xor
adc
stc
ret
jecxz
fs
dec
sub
mov
dec
repz
insl
xor
adc
rol
mov
xchg
stc
push
or
sbb
mov
das
jmp
mov
cltd
sbb
sub
push
sub
mov
cld
xchg
popa
jmp
rorb
adc
pop
sbb
fdiv
popa
fmull
fstpt
mov
addr16
shlb
mov
sti
jmp
push
ljmp
or
shrb
jl
cmpsl
add
lds
fldenv
lods
pop
xchg
shll
mov
jae
enter
mov
or
jbe
add
jns
imul
ja
mov
pop
or
repz
mov
cmp
adc
sti
test
mov
imul
aam
sub
xchg
loope
popa
rcrl
rcll
ds
lret
or
cwtl
ret
pop
adc
push
inc
sti
mov
push
sub
dec
clc
jns
jecxz
pop
out
dec
push
jmp
fwait
stos
dec
mov
and
mov
in
lahf
adc
xchg
dec
mov
lds
dec
movq
xor
imul
mov
ret
cltd
sbb
cmc
sbb
sub
mov
mov
xchg
pusha
push
pop
pushl
jbe
mov
arpl
pop
aas
sub
push
jge
shrl
cli
outsl
cld
test
cmpl
and
popa
xchg
mov
inc
movb
xlat
adc
mull
and
add
mov
push
sti
xchg
jns
mov
inc
mov
xchg
repz
out
inc
in
xchg
movl
xor
sbb
cs
aad
and
mov
loop
in
fidivs
push
movsl
pop
add
orl
cltd
mov
aad
and
sbb
sbb
sub
dec
fwait
mov
adc
shl
push
push
xlat
xchg
cmc
jp
les
inc
mov
dec
adc
mov
xor
push
mov
ja
or
or
mov
cmp
add
mov
sub
dec
test
rcrl
aaa
push
xor
mov
pusha
cmpsb
mov
icebp
pop
sbb
mov
or
shlb
out
sub
leave
adc
test
mov
jbe
cs
lret
jns
int3
inc
leave
das
jecxz
fisttps
dec
int3
jl
xor
insl
mov
ds
bound
fwait
sbb
shlb
xchg
ljmp
cmp
sbb
mov
enter
incb
sub
jp
outsb
sbb
jl
xor
pop
lods
or
imul
scas
jmp
fsubs
nop
ret
je
or
xor
das
mov
adc
int
sbb
push
divl
aas
repnz
in
xchg
mov
dec
test
jg
mov
sub
ljmp
sbb
dec
test
adc
and
xor
in
bound
sar
push
and
mov
test
xchg
adc
mov
mov
mov
pop
cltd
dec
xor
stos
in
fwait
repz
cmp
jne
sbb
jns
sbb
popf
xlat
add
add
lods
adc
roll
jecxz
int
push
mov
addr16
jbe
mov
popf
fwait
xor
sahf
in
adc
jg
cltd
mov
xchg
aad
imul
sbb
es
and
out
fdivrl
sti
add
out
cmpsb
cli
and
add
or
repnz
insb
test
mov
leave
push
xchg
fisubl
out
and
pusha
pop
push
rolb
xor
xchg
dec
filds
and
clc
stos
sub
call
pop
outsb
sub
push
cwtl
mov
xor
add
inc
add
push
mov
icebp
lods
shrl
into
test
test
mov
and
pop
data16
jp
pop
jns
mov
and
dec
push
loopne
in
xchg
add
imul
add
scas
adc
dec
lcall
sub
popl
jns
mov
inc
call
dec
xor
subb
test
loope
loope
mov
dec
mov
inc
xor
mov
lret
shl
cli
cs
pop
pusha
jg
fwait
push
in
and
mov
push
rolb
mov
fucom
mov
in
xor
push
xlat
int
mov
fsubr
mov
outsl
mov
push
xchg
dec
pop
sub
movsb
xchg
out
push
mov
pop
pop
rorl
addr16
push
mov
leave
xchg
lahf
mov
cmp
popfw
or
movsl
cmp
and
mov
dec
mov
jno
xchg
fwait
cmc
jl
cmpsl
loop
sub
push
addl
sbb
mov
std
xlat
out
pop
leave
shrb
jae
shl
xchg
cmpl
outsl
hlt
ret
rolb
sub
and
into
xchg
cmp
sti
push
cmp
or
repz
pop
adc
lret
test
bound
inc
test
pop
lods
and
pop
pop
push
or
daa
xchg
pop
int
pop
subb
sti
push
sahf
mov
jp
mov
or
mov
or
insl
aad
pusha
push
lock
in
mov
mov
sti
mov
scas
outsl
push
adc
add
cwtl
in
dec
mov
enter
fisubrl
test
jbe
pop
out
push
jmp
icebp
fsubs
xchg
dec
xor
loope
dec
cmp
fadds
mov
in
mov
adc
movsb
add
sub
inc
inc
inc
ljmp
and
xchg
dec
cli
outsl
sub
clc
cltd
in
movsl
mov
sbb
mov
mov
mov
or
shll
xor
outsl
xchg
inc
shl
xor
inc
mov
sti
inc
add
shll
or
inc
dec
xchg
or
pop
mov
es
dec
inc
add
push
mov
mov
test
out
mov
movsl
push
popa
xlat
xchg
or
adc
cli
mov
xchg
mov
adc
jg
sarl
cld
and
inc
push
push
adc
sar
cmc
add
push
ret
addr16
inc
popa
lret
std
fnstsw
movsl
lds
jns
push
add
sub
fidivrs
aam
xchg
mov
jmp
daa
daa
xchg
mov
sbbb
sbb
iret
ja
fdiv
fnsetpm(287
adc
sbb
jle
aas
insl
inc
xchg
clc
xor
xor
mov
enter
or
mov
call
leave
pushf
mov
push
mov
mov
add
or
cld
sbb
pop
dec
arpl
jle
sti
lds
test
es
mov
cmp
pop
into
lret
jb
mov
pop
cmpsb
cmpsb
stos
dec
stc
fwait
and
mov
test
stos
xor
jo
xor
mov
popf
xor
mov
jle
adc
cmp
pop
inc
imul
jo,pn
mov
inc
xchg
mov
stc
xor
aad
fdivl
jbe
mov
addb
shrb
mov
inc
inc
sub
or
cmp
ds
mov
push
pop
add
push
sbb
mov
daa
aam
iret
jecxz
lea
xor
in
decb
repnz
push
jne
dec
or
or
push
les
mov
pusha
jp
mov
inc
inc
fwait
mov
lock
xor
jno
or
mov
std
enter
sarl
xorw
lcall
enter
mov
addr16
iret
nop
aam
inc
mov
cltd
cmpsl
test
lret
mov
sub
fs
push
push
push
fs
insb
dec
push
aam
pushf
xor
mov
xchg
mov
xchg
push
icebp
mov
imul
repnz
ss
rcrl
pop
inc
repz
inc
lret
and
pop
mov
mov
add
inc
stos
push
out
mov
fwait
lods
adc
jae
subl
pop
je
movsl
pop
push
scas
ss
pushf
mov
mov
inc
sub
adc
pop
inc
outsb
or
stc
pop
adc
pushf
fnstsw
adc
mov
adc
mov
stos
fidivrl
cmc
arpl
cs
fldt
aaa
jecxz
and
loop
in
mov
mov
cmp
lcall
and
js
gs
mov
repz
aas
push
jb
into
insb
rclb
icebp
mov
sub
imul
mov
sub
jae
and
pop
mov
out
inc
mov
sbb
xchg
xor
mov
stos
sub
push
add
mov
andb
movsl
filds
incb
sbbb
jmp
or
lcall
cli
xchg
enter
xor
push
gs
cld
call
xchg
inc
out
pusha
scas
mov
mov
cmp
cmpsl
xchg
pop
mov
jg
cmpsl
test
xor
lahf
testl
leave
push
sub
or
and
hlt
scas
jae
mov
hlt
inc
mov
mov
sub
fidivrl
inc
mov
pushf
dec
xor
pop
mov
sub
jno
test
dec
mov
pop
add
popa
outsl
fnsave
insb
xor
jns
fsubrs
mov
lahf
adc
xchg
cmpsb
and
es
dec
insb
aaa
mov
adc
jbe
push
sbb
stc
out
mov
in
xchg
sti
fildl
inc
lods
out
and
dec
mov
rol
jns
mov
jmp
sbbl
pusha
mov
cmp
mov
push
lods
incb
xor
ljmp
fnsave
fcomps
fcmovne
fldenv
mov
push
inc
dec
jmp
mov
or
test
and
and
fistps
leave
arpl
loopne
xchg
xchg
push
jb
mov
mov
test
push
xor
mov
sub
cmp
mov
lret
push
fsubp
in
cmp
xchg
fistl
fidivl
andb
xchg
repnz
xchg
test
xchg
jbe
mov
loopne
dec
push
mov
sub
mov
cmp
loopne
mov
xchg
mov
test
ds
fsubs
idivl
jae
in
fistl
inc
js
add
jle
mov
xchg
and
repnz
pushf
or
sub
lods
and
or
adcb
cmp
jb
stos
ss
shrl
cs
mov
loope
faddl
cmp
cmp
inc
ror
fistps
insl
xor
dec
mov
repz
inc
nop
lods
pop
pop
inc
fs
fcoms
cmp
pop
cmp
dec
dec
sbb
push
mov
in
leave
adc
inc
stos
mov
jg
jl
jmp
mov
jo
sub
in
cmp
sub
and
out
pop
dec
inc
test
sbb
es
jecxz
jecxz
jge
in
pusha
pusha
in
jle
push
mov
daa
out
cli
pop
lcall
mov
in
add
inc
adc
test
aad
xchg
pop
mov
inc
and
or
adc
pop
ljmp
movsl
mov
jge
fwait
mov
adc
mov
popa
or
lcall
jecxz
stos
sub
jecxz
int3
shl
pop
fcoml
movsb
in
lea
pop
jae
push
inc
cli
jg
jge
shrb
pop
inc
out
push
mov
adc
sub
inc
mov
pop
mov
push
cwtl
jecxz
jnp
jo
jmp
loop
adc
scas
mov
mul
pop
lcall
jb
lcall
and
dec
fwait
hlt
push
pop
movsb
in
cmp
bound
lods
mov
cmp
pop
incb
lods
add
cmc
jb
xor
lock
sahf
mov
xchg
sub
mov
in
inc
aam
test
in
int3
ja
xlat
sub
adc
adc
gs
inc
mov
fdivrl
pop
jecxz
sub
out
loopne
sub
mov
mov
sub
or
icebp
sbb
inc
adc
mov
jge
hlt
push
loope
in
mov
lea
jl
ja
jp
pop
scas
mov
stc
stos
push
incl
xchg
mov
fwait
daa
or
sub
push
enter
pop
arpl
xor
cmp
xor
xor
sub
outsl
imul
adcl
adc
inc
jnp
mov
pop
pop
pop
shl
push
imul
pop
sarl
cmp
jp
jno
dec
test
lcall
jae
pop
fcomi
lds
pushf
cmpl
adcb
adc
push
jne
sahf
std
and
rclb
movsl
sbb
add
lods
arpl
stc
cmp
ljmp
in
or
add
and
and
dec
add
mov
nop
pop
into
pop
aam
xor
jg
fisubs
mov
add
push
cmp
aas
inc
pop
sbb
jmp
pusha
pop
outsb
jae
nop
mov
inc
pop
cwtl
or
xchg
sbb
mov
adc
mov
frstor
mov
fmuls
sbb
pop
push
or
mov
push
stos
fwait
push
lds
push
add
cwtl
adc
push
xor
sbb
je
test
bound
ret
xchg
lods
pop
call
into
fs
loope
shll
mov
data16
aam
sub
mov
xchg
scas
loop
push
mov
in
addr16
enter
mov
js
out
sbb
jge
sub
pop
mov
leave
aam
shll
xor
dec
mov
mov
adc
adc
fs
mov
jnp
imul
push
mov
mov
stc
push
leave
stc
fnstsw
loop
or
mov
or
cmp
loopne
add
loope
in
cs
mov
jmp
int3
sbbb
aam
call
gs
add
sahf
lods
dec
in
jp
mov
cs
ljmp
in
outsb
or
imul
cmpsb
xchg
xchg
dec
aas
loope
or
imul
cmp
aam
pop
out
call
lret
into
adc
addr16
or
xchg
and
add
sbb
rclb
loopne
jb
test
push
inc
insl
sahf
and
inc
adc
inc
and
incl
inc
aam
std
mov
pop
xor
ret
xchg
jb
hlt
mov
cmovg
push
push
ret
lds
mov
push
stos
or
or
daa
popf
in
xor
pop
int3
xchg
clc
mov
or
xchg
clc
stos
sahf
xor
iret
fst
cmpsl
or
jge
mov
cld
pop
icebp
hlt
dec
add
sbb
pop
gs
scas
and
cmp
xchg
cmpsb
rorb
xchg
clc
push
push
mov
jbe
pop
push
jbe
inc
sbb
mov
cld
jae
add
cmp
aaa
lods
xor
test
or
adc
push
mov
icebp
inc
dec
fucomp
es
mov
insb
movsb
or
adc
pop
aaa
xlat
cmpsb
in
lcall
outsb
ret
jno
outsb
outsb
or
mov
fs
mov
rcrl
js
pushf
or
lods
adcl
scas
into
mov
or
pop
mov
add
stc
sahf
push
andl
ret
testb
lock
rcl
test
push
pop
faddl
pop
fmull
icebp
pushf
jge
pusha
mov
adc
insb
mov
sbb
jns
jle
lret
mov
sbb
dec
cmp
mov
mov
jg
jle
popf
jg
add
inc
in
inc
mov
andb
popf
or
fcomps
addr16
lahf
in
push
cmp
ja
inc
scas
jne
cltd
jp
pop
insb
sar
xchg
sub
adc
insl
add
repnz
aas
jl
mov
xchg
push
ljmp
lods
sbb
jmp
jmp
add
and
aas
stc
dec
xor
ss
xchg
jg
push
sbbl
je
aaa
mov
hlt
fsts
mov
test
mov
and
int3
or
jae
in
js
stc
sbb
mov
test
aas
stc
lods
out
push
lcall
leave
xchg
pop
and
add
mov
adcl
mov
out
and
lods
sar
mov
push
cmpsb
sbb
push
imull
stos
stos
add
pop
sbb
lret
test
jmp
add
mov
lcall
add
faddl
fwait
movsb
xchg
adc
xor
pop
clc
fucomp
std
or
jae
mov
sub
in
mov
in
pop
cmp
mov
inc
push
cmpsb
test
js
jnp
xchg
repnz
in
or
shlb
inc
pop
jecxz
shl
js
adc
dec
push
ja
adc
lret
cmp
cs
mov
lea
push
je
cmpsb
int
arpl
shlb
lret
pop
jns
xor
adc
xchg
mov
in
icebp
mov
jp
cmp
test
aad
ret
cmp
into
and
outsb
sbb
roll
not
push
test
cld
pop
cmp
xchg
mov
pop
xor
or
dec
in
mov
adc
jo
xor
lret
mov
aas
insb
add
and
loope
and
xor
mov
fldcw
add
int3
int3
sbb
mov
xchg
xchg
data16
in
inc
sti
sub
mov
mov
cmpsl
xlat
mov
lahf
ffree
mov
clc
stos
mov
xchg
loopne
or
xlat
inc
jno
cmp
cld
popa
pop
push
stos
jmp
jecxz
lods
sbb
inc
and
cs
loope
push
outsl
push
rcrl
popf
mov
fnsave
fndisi(8087
stc
loope
in
test
lahf
xchg
enter
mov
lds
lods
mov
inc
or
loopew
sub
cltd
add
or
add
jb
cltd
test
xchg
or
pusha
push
xor
hlt
cmpsb
pop
repz
sbb
push
xor
aad
shrb
sub
dec
pop
mov
stc
and
jge
add
lret
xor
and
jp
dec
dec
imul
add
orb
negb
insl
lea
mov
inc
loop
insb
std
cmp
outsb
incb
push
hlt
ljmp
imul
mov
outsl
imul
insl
jle
mov
aad
sub
inc
bswap
adc
push
movntq
sub
push
adc
jl
repz
adc
pusha
lods
mov
jb
popf
je
dec
xchg
adc
popa
inc
xor
shll
push
mov
and
xchg
enter
push
jge
fucomp
push
mov
sub
xor
push
test
xorb
mov
aas
adc
sub
adc
lcall
lock
mov
jmp
mov
xchg
aas
insl
mov
mov
ss
and
test
cmp
jb
sbb
fidivl
xchg
stos
gs
in
sub
cwtl
pusha
das
mov
test
adc
test
test
jno
adc
push
popf
mov
mov
in
and
add
cmp
test
pop
test
xlat
pop
mov
sub
jae
jno
pop
mov
xchg
dec
or
je
ror
sub
inc
dec
push
scas
pop
cmpsb
mov
cltd
and
lds
xlat
out
mov
cmp
ss
xor
sbb
jecxz
add
jl
mov
fld
iret
int3
xor
add
enter
jle
push
inc
push
pop
xlat
xchg
je
mov
jge
pop
sub
pushf
jmp
std
xlat
mov
mov
ret
fsubs
mov
jl
mov
xchg
ss
ss
and
cmp
cmp
mov
and
pop
cmpsb
sub
jg
xchg
mov
test
dec
dec
out
sbb
mov
sbb
dec
add
sar
movsl
jb
ret
jns
xchg
sbb
xchg
outsl
jg
sub
pop
mov
and
mov
ss
adc
movsb
sbb
add
movsl
xchg
xchg
or
adc
cld
pop
sbb
cld
sbbl
jecxz
adc
in
mov
cli
fwait
call
mov
lods
dec
jne
xchg
jl
push
mov
mov
pop
inc
inc
xlat
xor
cltd
daa
idivl
stos
cmp
ret
push
mov
xor
or
jbe
lds
mov
xchg
fldcw
jns
inc
push
aas
mov
add
push
fwait
repz
addb
mov
mov
ja
adc
push
stos
xor
or
in
mov
data16
ret
inc
jns
mov
pop
dec
mov
mov
xor
jo
pop
dec
ss
cmp
stc
cmp
mov
mov
fnsave
ljmp
cli
jne
rorl
stc
pop
and
in
dec
mov
add
stc
pop
inc
stos
push
xchg
jmp
add
hlt
mov
jecxz
shll
dec
inc
insl
dec
push
xor
cmp
jb
addr16
mov
dec
inc
leave
adc
add
cli
cltd
popa
push
sub
inc
adc
aad
fnstenv
xor
bound
pop
ss
mov
decb
dec
and
aam
enter
test
pushf
jl
nop
ja
jl
push
stc
outsb
and
lods
pop
enter
cld
mov
add
dec
mov
int
lret
cmc
fisttps
jmp
ret
xlat
jle
mov
loop
jle
aas
cmpsb
outsl
inc
subb
or
mov
std
xchg
sarb
lods
xor
push
sbb
sbb
mov
mov
push
mov
leave
jmp
jb
cwtl
movsl
cmp
dec
or
cmp
mov
in
clc
cmp
stos
lods
cmp
repnz
push
in
testb
or
fwait
push
in
lret
nop
in
clc
imul
add
fistpll
enter
mov
push
mov
loope
aad
bound
jp
and
std
mov
or
jge
sti
inc
cmpsl
outsl
sub
out
push
imul
inc
je
pop
dec
out
push
mov
ja
push
mov
popa
sbb
push
fcoms
lea
cmp
iret
clc
mov
mov
repnz
jne
or
mov
sub
dec
or
xchg
cmp
es
je
lods
jns
cmp
push
mov
and
cmp
out
sbb
pushl
call
jg
xchg
cmpl
cmp
loopne
jbe
cwtl
jl
enter
pushf
jb
xchg
inc
xchg
lods
cmc
mov
and
aas
andb
mov
adc
test
push
push
rcrl
xchg
mov
pop
xchg
adc
xchg
sbb
loopne
lret
int3
pop
mov
jle
movsb
sub
dec
mov
ss
pop
mov
fildll
nop
fwait
sub
mov
in
and
sbb
lea
in
push
outsl
arpl
into
jp
sub
xor
int
sbb
stos
ds
fucomp
jne
rcr
movsl
xchg
and
adc
mov
pop
mov
mov
fdivs
insl
mov
sbb
cmpsl
xchg
shll
sub
sub
loopne
pop
fxch
sbb
sbb
pop
subl
sahf
mov
popaw
mov
js
inc
pusha
ror
mov
fwait
or
and
call
jo
inc
add
sbb
fcompl
dec
cwtl
ds
or
push
mov
stos
lret
jb
cmc
xchg
inc
jno
dec
addr16
je
pop
sub
test
stos
mov
fnstcw
or
inc
pop
sub
stc
pop
xchg
dec
rcrl
stos
cli
sar
test
out
mov
repz
push
nop
pop
dec
call
sub
cmp
push
cld
xchg
int3
repz
and
mov
sub
cmp
push
xlat
mov
adc
shr
pop
movsb
mov
scas
dec
mov
cmp
mov
sub
out
in
paddq
jge
loop
dec
and
xor
bound
add
popa
popa
gs
cmp
cwtl
les
das
mov
sub
pop
rcll
mov
outsl
dec
aas
arpl
insl
sbb
xchg
or
dec
roll
jmp
aad
cmp
sub
mov
sub
les
cmp
cmp
pop
shll
sub
rcl
or
popa
jge
sbb
cmp
cmp
cmp
test
pusha
xor
jmp
ficoms
mov
sbbb
aaa
pop
mov
sbb
movsl
incb
ja
pop
lea
in
jae
ljmp
and
rclb
xor
push
xchg
pushf
sbb
xchg
rcll
sahf
cwtl
push
mov
push
pop
pop
jnp
push
imul
loop
in
inc
sbb
cmp
rorl
jne
jmp
or
add
nop
mov
pop
xchg
push
xlat
push
roll
mov
mov
xchg
fwait
out
es
jle
shll
sahf
call
and
mov
aaa
nop
test
lahf
jmp
jnp
and
fwait
dec
inc
mov
jmp
fs
or
xchg
xlat
popa
clc
lcall
mov
je
stos
xchg
adc
jae
mov
pusha
xorl
xchg
push
mov
test
jns,pn
pop
cmp
rorb
lret
out
movsl
rep
mov
mov
push
lods
popf
jae
stc
mov
shlb
add
push
sbb
xchg
xchg
mov
xchg
push
sub
pop
gs
push
test
cmp
push
ds
outsl
jno
js
xchg
adc
dec
xchg
lods
xchg
leave
adc
loope
stc
sbb
in
jae
js
les
ds
shlb
repnz
pop
sub
push
and
mov
cmp
xchg
mov
pushf
popa
ffreep
sbb
lods
xchg
mov
imul
cmc
adc
push
mov
cli
ror
imul
mov
sub
pop
jne
fbstp
and
pop
mov
aas
test
mov
mov
inc
in
xor
insb
loope
jg
or
dec
cmpsl
popa
sti
mov
push
pop
test
leave
mov
add
or
popf
jecxz,pn
push
push
nop
pop
jmp
gs
pop
mov
sub
dec
add
sub
lretw
push
inc
mov
xchg
out
testl
adc
pushw
imul
imul
push
push
ret
roll
roll
rcll
mov
in
push
mov
push
lahf
in
repz
cmp
int
xchg
xor
sbb
inc
pop
or
shlb
mov
clc
pusha
adc
adc
adc
adc
lcall
shlb
pop
mov
cmp
nop
addr16
test
clc
push
clc
add
in
sarb
xor
lods
add
repz
lea
jb
dec
sub
es
popf
pop
xor
xchg
icebp
mov
repnz
mov
arpl
pop
mov
push
sbb
dec
and
fisubrs
and
insb
bound
jns
test
cs
push
ds
movsb
cmpsb
stc
cmp
orl
cmc
bound
loopne
mov
mov
sub
enter
adc
mov
in
sub
and
out
jae
inc
clc
jl
outsl
pcmpeqb
jp
test
push
lods
xor
les
cmp
lods
movsb
sub
xor
push
inc
mov
pop
andb
pop
ja
push
outsl
lahf
cmp
sub
xchg
scas
sahf
sbb
pop
inc
add
push
jecxz
mov
add
shl
ret
jns
test
pop
addr16
xor
add
jnp
cld
cld
mov
and
jno
pop
cmp
jbe
arpl
push
or
psadbw
lret
outsl
pop
and
dec
inc
gs
stos
std
pop
mov
ja
or
sub
dec
subb
into
out
jne
inc
ret
out
inc
das
lods
mov
add
stos
push
stos
push
mov
jno,pt
adc
pop
test
sbb
stos
in
pop
add
addr16
out
or
mov
shlb
mov
and
lds
and
adc
out
xchg
add
cld
pop
jmp
xchg
pop
sub
sub
xchg
ss
das
pop
xchg
jo
and
arpl
pusha
and
inc
add
mov
dec
push
or
in
jmp
std
mov
push
icebp
pop
loop
out
cmpl
popf
test
mov
es
cs
out
sbb
jg
loope
js
and
leave
push
repz
xchg
xor
fnsave
or
andb
lahf
xor
lods
aam
sub
hlt
cmpsb
adc
jp
push
aam
movsl
mov
imul
cmp
jle
cli
pop
pop
jmp
lds
dec
testl
pop
xor
xorb
in
stos
sbb
add
inc
js
xor
and
out
inc
cmpb
and
push
adc
push
insl
cmpsl
rolb
push
jae
xchg
mull
push
inc
testl
jcxz
dec
cli
add
js
pop
sub
push
sarl
rcrb
mov
dec
xor
fistps
mov
test
pushl
lea
lods
stos
mov
push
popf
mov
ds
loope
inc
xor
repnz
lcall
sbb
push
ret
mov
enter
hlt
ret
push
movsl
mov
aam
sbb
hlt
rorb
test
sub
inc
xchg
push
pusha
orb
popa
mov
hlt
insb
ficompl
ljmp
pop
push
mov
mov
fstl
addr16
add
xlat
movsb
xchg
shl
mov
into
xor
mov
sub
push
jb
inc
int3
std
out
lods
xor
int
sti
jecxz
pop
test
je
push
pop
and
cmp
cmp
xchg
jne
sub
adc
sub
flds
cmp
push
xchg
fnstsw
orl
jmp
add
movsl
xlat
mov
mov
mov
inc
or
adc
push
jge
fmull
dec
inc
xchg
insb
orl
dec
push
push
data16
in
inc
inc
and
leave
sub
in
push
scas
adc
mov
repnz
push
jecxz
pop
jge
push
loope
sub
sbb
push
addr16
and
push
mov
stc
out
mov
pop
aas
mov
mov
clc
pop
aaa
or
jecxz
inc
icebp
or
aad
enter
push
movsb
int3
add
cmp
jnp
jl
pop
inc
push
dec
push
pop
sub
xlat
or
xchg
cmpl
sub
xor
dec
mov
clc
aas
sub
mov
lods
dec
out
ret
inc
shlb
lcall
test
dec
inc
jbe
and
inc
push
pop
cld
xor
mov
push
pop
or
add
jge
pop
std
adc
gs
push
popf
scas
orl
and
ret
das
jecxz
adc
aad
fsubr
rcrb
je
shr
rclb
jns
outsb
stos
or
fsubrs
loop
pop
cmovne
imulb
sub
or
dec
in
inc
aaa
pop
pop
pop
dec
sbb
fildl
or
sbb
push
jbe
pop
cmpb
jno
pusha
and
inc
sti
push
mov
add
mov
nop
xor
sub
xchg
xchg
das
mov
push
faddl
push
jb
sbb
push
data16
ds
aad
std
out
and
pop
jp
ja
stc
mov
xchg
push
add
inc
stos
jns
sub
out
pusha
shrb
push
pop
dec
jecxz
ljmp
dec
insb
push
dec
ja
inc
sub
imul
test
jmp
insl
push
ljmp
xor
repnz
cmpsb
xchg
push
jb
adc
mov
jl
lds
jg
fisubrl
jp
push
dec
dec
ret
inc
pop
cmpsb
cmp
dec
mov
test
jge
rclb
adc
sbb
loope
jmp
lret
add
mov
mov
cld
jnp
mov
ss
leave
sbb
and
cld
into
push
cld
mov
mov
mov
pusha
or
stos
scas
jge
jge
imul
lods
jns
xor
stos
pop
sbb
fdivrp
cltd
jno
mov
les
loop
mov
inc
xor
jmp
sbb
fbld
xchg
dec
negl
sahf
aad
jecxz
ja
shl
sub
cs
mov
pop
repnz
xlat
add
dec
insl
lods
dec
sti
mov
jo
inc
mov
push
int
jae
xchg
btc
lcall
xchg
xchg
sti
out
push
mov
jae
aad
add
cmp
xchg
loope
roll
loopne
adc
pusha
cli
push
scas
lahf
dec
sub
mov
push
mov
enter
push
cli
leave
inc
or
push
shll
adc
std
jo
sub
adc
aas
cwtl
push
test
push
out
cmp
cmpsb
in
xchg
dec
cmp
add
sbb
rorb
mov
loopne
sbb
pop
or
inc
pop
adc
loop
jnp
sub
es
mov
or
ss
or
xchg
mov
and
into
rcll
mov
dec
push
dec
inc
hlt
fs
scas
in
mov
jae
out
das
jne
cmp
mov
fs
data16
push
or
lods
mov
lret
jmp
es
mov
pusha
nop
lods
cltd
movb
sub
aas
mov
aad
scas
in
jmp
or
cli
incl
inc
pop
and
imul
xchg
std
dec
cmpsb
gs
sub
dec
dec
mov
push
inc
mov
push
ret
sets
sub
testl
scas
stc
sbb
mov
rcll
xchg
dec
dec
popa
adc
jmp
popa
dec
add
stc
pop
ret
lret
dec
jns
lock
stc
xchg
mov
ret
ret
aas
fstps
push
inc
mov
xchg
dec
mov
sbb
sets
arpl
subl
les
sbb
lcall
xchg
call
pop
sub
or
add
xchg
or
sub
lcall
bound
loope
test
jbe
test
and
xchg
push
sbb
sahf
fnstsw
xchg
ror
dec
xorb
mov
ljmp
push
mov
fwait
pop
mov
pop
out
pop
add
loope
lret
repnz
test
or
push
add
lods
sbb
xchg
xor
pusha
in
in
mov
fistps
ret
je
aaa
jbe
inc
and
xchg
rorl
add
or
mov
pop
adc
mov
repz
mov
jno
jecxz
bound
sbb
dec
scas
and
ljmp
sub
jmp
push
jl,pn
aam
sbb
pop
jbe
jbe
cmpsb
jno
push
lds
mov
ss
sub
outsb
repz
lock
pushl
call
push
out
out
mov
xchg
aaa
insl
dec
or
in
fistps
aaa
out
iret
int3
jb
dec
mov
jae
xor
out
mov
lret
inc
idiv
ja
jne
das
xchg
xchg
dec
shll
das
and
pop
xor
pop
movsb
sub
es
data16
and
movsl
push
lret
jg
pushf
sbb
call
aaa
pop
mov
ja
xor
cmp
dec
xchg
mov
mov
bound
punpcklwd
and
testb
icebp
outsl
aaa
lea
or
adcb
out
dec
xor
cmpl
xchg
adc
ds
inc
sbb
popa
test
hlt
pop
jp
mov
jmp
jp
and
pop
mov
call
xor
aaa
add
sbb
cmc
mov
arpl
cmpsb
xchg
sbb
jno
mov
push
push
pushf
ja
adc
out
roll
les
lret
xchg
mulb
push
mov
xor
sbb
fdiv
or
aas
bound
aad
imulb
fisubl
movsl
jmp
adc
stos
movsl
bound
addl
mov
dec
jbe
adc
cmp
out
roll
jmp
out
dec
lahf
out
xchg
inc
iret
jno
cltd
fidivs
xchg
jae
push
js
test
jno
shrl
jns
ljmp
lahf
fidivrl
jl
sbb
loopne
inc
or
scas
loop
jecxz
orl
loopne
jae
inc
inc
fimull
pop
and
aad
std
and
jp
insb
mov
inc
cmpsl
in
pop
movl
sub
mov
dec
jb
jmp
sbb
xchg
add
jbe
push
movsl
mov
fsubl
mov
test
mov
filds
xchg
push
dec
loopne
pusha
mov
mov
cmp
ds
icebp
xor
jmp
outsb
movsb
jl
pop
pop
xchg
inc
sbb
sbb
inc
imul
sub
lahf
call
hlt
sbb
inc
or
shl
dec
aaa
xchg
lret
sbb
iret
testl
sub
jns
shl
jb
inc
sbbl
xchg
mov
jae
pop
dec
int3
inc
pop
sbb
int
xor
and
sub
jle
icebp
pop
popa
mov
sbb
xor
cmp
xor
nop
xchg
jae
mov
in
outsb
inc
stc
imul
jns
pop
xchg
jecxz
mov
fcmovu
xchg
lods
and
rorb
cmp
dec
push
mov
aas
add
jbe
mov
adc
cmp
push
xchg
stc
sbb
cmpsl
add
pushf
cmp
xchg
sub
dec
gs
adc
inc
cli
scas
adc
mov
mov
or
fisubl
adc
scas
daa
repz
xor
aad
icebp
dec
xchg
jge
cld
xchg
ds
cmp
push
jo
adc
adc
fucom
xchg
fcoml
loop
fsubrs
sbb
push
ror
sub
loop
add
mov
or
xor
jge
pop
mov
pop
mov
ss
sbb
jmp
pop
cmpsl
sbbb
and
push
fnstsw
in
mov
icebp
fwait
inc
jae
inc
mov
jmp
mov
mov
and
mov
push
jmp
pop
xor
lea
pop
inc
inc
es
lea
setns
jg
dec
sbb
pop
jl
scas
pop
mov
mull
lods
roll
stos
xchg
les
leave
js
push
in
and
insb
out
cmp
stos
fdivs
test
jcxz
mov
fimuls
ds
outsl
jns
jb
and
or
data16
shrl
jb
ja
fcomip
int
je
mov
jecxz
dec
adc
mov
and
inc
push
cwtl
popa
push
sbb
mov
fstpt
xor
xor
imul
fsubp
sub
sub
repz
aad
adc
and
loope
cmp
daa
mov
out
mov
nop
popf
push
sub
rorl
movsb
pop
fimuls
pop
shll
call
xor
imul
mov
dec
push
add
movsl
xchg
cmp
and
insb
sbb
or
mov
mov
lock
leave
pushf
xchg
xchg
sbb
push
xor
sbb
mov
lock
fiadds
inc
push
insl
sub
arpl
inc
xor
jle
adcb
data16
pop
pop
xchg
test
inc
cmc
jne
lret
icebp
aad
mov
inc
or
and
in
lods
lock
in
cmpsb
stos
mov
ret
push
cmp
cmc
mov
ret
mov
insb
pushf
or
pop
pusha
mov
mov
mov
stos
xchg
addb
movsl
ja
adc
inc
pushf
inc
jmp
sbb
outsb
push
in
dec
lock
adc
int3
cmp
mov
fdivl
cmp
outsb
mov
vpcmpgtb
sbb
in
test
push
fidivl
sub
xchg
push
popf
jmp
sarb
mov
jle
out
fs
cmp
pop
xchg
mov
cld
fidivrs
dec
or
inc
push
add
and
push
in
leave
cmpl
xchg
adc
inc
jl
call
add
dec
lcall
and
add
cmp
repz
rolb
pop
pop
jge
jle
push
test
repnz
imul
ret
rcll
add
aam
popf
mov
cs
call
cmp
aad
and
inc
mov
xchg
or
and
xor
and
inc
enter
push
jp
xchg
mov
pop
push
fnsave
inc
jae
pop
std
add
cmp
imul
pop
add
popa
push
pop
pop
daa
fs
cld
out
xchg
sub
mov
bound
in
movsl
cwtl
jae
sub
rclb
jp
subb
jmp
add
xchg
aaa
push
aas
cmp
add
movsl
lods
iret
dec
test
aad
lock
cltd
mov
sbb
xchg
inc
repnz
xor
and
fadd
or
mov
mov
xor
sub
fucomi
add
out
jns
cld
addr16
in
mov
push
mov
push
mov
sub
adc
das
das
and
fidivrs
sbb
idivl
jg
mov
jge
rcll
aas
lea
xchg
mov
add
sub
push
pop
xchg
imul
mov
jnp
xchg
cs
xor
bound
pushf
pop
push
arpl
sub
add
mov
dec
ret
cmpb
pop
iret
clc
cmp
sbb
stos
mov
das
cs
pop
jl
aaa
xor
mov
cli
insb
inc
imul
nop
aam
xor
out
add
lret
xchg
lahf
mov
rolb
les
pop
adcl
jb
pop
mov
sub
dec
adc
and
sub
cltd
mov
mov
cmp
lret
orl
add
mov
and
push
push
cmpsb
dec
inc
mov
nop
into
add
xchg
sbb
int
fcoml
cltd
outsb
jmp
jb
cmc
es
add
lods
ficomps
dec
jecxz
xchg
cmp
mov
lret
inc
adc
stos
or
sbb
jp
mov
and
cmp
pushf
imul
mov
mov
adcl
cld
icebp
mov
mov
sti
es
mov
mov
stos
insl
cli
sub
in
lods
repz
pop
negb
inc
dec
dec
cmpsb
outsb
dec
mov
ljmp
cltd
mov
sub
push
mov
ret
cmp
jne
fnstcw
mov
pop
push
out
lods
daa
mov
add
add
mov
mov
bound
ss
inc
fldl
in
jbe
loop
arpl
outsb
addr16
fsubr
addr16
xorb
es
jg
aas
and
mov
pop
sbb
adc
shrl
pop
out
pop
push
aas
or
jb
into
stos
lods
outsb
decl
mov
rcrl
dec
inc
xor
xchg
mov
cvtpi2ps
negb
jge
dec
jl
std
push
adc
dec
ret
inc
fs
psubq
cwtl
pop
and
jp
mov
rol
rclb
aaa
push
inc
push
call
pop
fistpll
lea
rorl
pop
dec
jbe
sub
je
nopl
pop
scas
pop
sub
inc
shll
cmp
fldl
push
std
decl
push
in
mov
dec
iret
jns
aas
mov
sti
in
mov
clc
xchg
push
adcl
icebp
push
test
dec
ja
cmp
mov
and
sbb
dec
fildll
mov
push
lret
mov
push
push
andl
mov
adc
sbb
clc
inc
pop
fwait
add
push
xlat
movsb
dec
pusha
pop
xchg
test
leave
xchg
ljmp
scas
push
sbb
push
xor
stc
sbb
inc
mov
sub
lret
adc
jbe
daa
mov
mov
xchg
data16
xor
arpl
cmc
iret
mov
jge
mov
in
fildl
aam
les
inc
repnz
lds
push
in
add
mov
push
out
test
xor
mov
xor
mov
pop
sbb
push
sub
idivb
xchg
test
lea
xor
cs
and
addr16
iret
xchg
iret
mov
mov
push
push
lock
mov
push
sub
dec
into
xchg
mov
lret
jge
outsb
mov
test
clc
xchg
mov
jbe
push
pop
stc
mov
das
and
sub
js
mov
iret
dec
cmp
dec
mov
mov
pop
orb
adc
std
loop
out
imul
mov
jno
loope
mov
std
push
fmul
mov
mov
cltd
int
push
cld
ficoms
cmp
push
std
testb
or
lock
xchg
jl
aaa
jmp
repz
or
aad
jne
mov
lods
sbb
push
xchg
mov
push
adc
je
fistpll
push
cmp
push
inc
mov
add
adc
adc
cltd
sbbl
sub
test
dec
lds
sub
and
mov
rclb
mov
mov
aaa
cmpsl
nop
lahf
test
leave
stos
push
in
scas
pop
cmpsl
or
js
jmp
jle
mov
pushf
insl
pusha
sub
pop
or
and
ljmp
bound
inc
mov
xchg
mov
sarb
lahf
mov
lret
mov
adc
aaa
ret
ja
or
xchg
cmp
lock
xchg
xchg
cld
pop
and
es
pop
ds
mov
bound
mov
pop
xchg
xor
jmp
lret
int
popa
mov
jl
sbb
aam
jg
push
rcr
iret
jle
test
mov
mov
outsl
pop
xorl
xlat
mov
in
mov
ljmp
mov
add
add
scas
push
repnz
mov
rcll
pop
cmp
loop
pop
inc
dec
fucomi
sub
ficoml
je
add
pop
fs
aas
mov
push
ret
mov
sbb
inc
sti
cltd
add
cmp
and
adc
aam
or
jg
filds
sub
dec
call
mov
mov
sub
icebp
and
andl
and
jge
sub
fistpll
stos
adc
ljmp
mov
push
imul
mov
xor
inc
dec
adc
push
cmp
in
aas
mov
movsl
ljmp
cmp
ds
sbb
xor
popf
pop
ja
lods
and
cmp
mov
ret
lahf
imul
mov
inc
sbb
sbb
rclb
mov
add
cltd
stos
gs
dec
mov
ror
ror
cmp
repnz
dec
ret
pop
add
xchg
cwtl
js
xorb
mov
aaa
dec
in
cmp
xor
push
ja
or
add
movb
insl
lahf
xor
sub
jl
lret
js
add
pop
xor
stos
mov
jecxz
xchg
hlt
xchg
inc
inc
mov
push
je
lock
pop
in
fld
fldenv
sub
mov
and
movsb
outsl
mov
stos
jg
mov
insl
fwait
repz
pop
inc
and
sbb
inc
insl
pop
loop
pop
movsl
loop
mov
xchg
int
dec
fsubr
scas
int
pop
std
and
xchg
mov
js
push
inc
insl
pshufw
mov
xor
cmp
sbb
mov
scas
xchg
push
mov
clc
inc
loop
jmp
pop
xchg
loope
pop
in
ret
xchg
icebp
out
or
lret
jg
lods
mov
mov
or
mov
mov
jb
or
lds
dec
mov
push
lods
inc
xchg
and
stos
pushf
pushf
js
jecxz
mov
in
cwtl
insl
js
add
mov
mov
adc
fnstsw
movsl
loopne
sbb
jo
out
iret
and
ret
adc
nop
add
lods
stos
push
outsb
cmp
jp
or
jnp
int
or
aaa
sbb
jns
mov
les
sbb
and
xchg
ljmp
lret
das
leave
mov
push
js
lcall
add
sub
sbb
jnp
shll
push
sahf
rol
je
push
mov
mov
arpl
sub
idivl
jae
loop
sbb
mov
rclb
cmp
inc
push
notl
cmc
repnz
lahf
adc
dec
inc
imul
ror
imul
imul
test
mov
jmp
jne
push
adc
mov
sub
bnd
idiv
mov
jns
xchg
jae
or
inc
dec
nop
iret
and
add
xor
add
xor
sub
xor
xchg
pop
cmp
and
int3
lds
cmpsb
sbb
sub
sub
sub
jg
lock
sbb
adcl
jl
daa
mov
adc
movsl
repnz
inc
push
cs
nop
je
adc
pop
stos
sbb
cmpl
adc
ja
adc
sbb
fnstcw
es
lcall
je
cmp
in
pop
push
sbb
repz
xchg
mov
cs
adc
fstl
movl
gs
lcall
mov
outsl
xchg
xchg
into
push
push
mov
in
dec
add
mov
test
mov
push
shll
test
fwait
movsb
fcmovnbe
fwait
pop
int
cmp
push
pop
dec
in
add
mov
pop
xor
sbbb
jne
push
test
and
fwait
outsl
xchg
adc
pop
pop
push
push
int
xchg
adc
call
mov
loopne
xchg
mov
jmp
jge
fcmove
fists
jecxz
jns
clc
ljmp
push
pop
mov
add
inc
in
sarl
jne
lahf
bound
push
mov
enter
inc
repz
lods
lods
test
iret
and
clc
and
xchg
mov
imulb
enter
push
or
jmp
fsub
jbe
jle
xlat
outsb
push
rorl
inc
push
call
das
dec
inc
dec
jbe,pn
sub
test
push
jg
mov
push
bound
ret
daa
push
jne
mov
fsubl
mov
testb
and
cmp
xor
stos
repnz
mov
aaa
xchg
loop
mov
add
sbb
nop
jp
cmpsl
enter
mov
jbe
in
loope
std
imul
test
sbb
pop
andb
xchg
je
mov
and
leave
das
push
popf
xchg
inc
sbb
ljmp
in
mov
pop
js
xchg
pop
daa
mov
out
pusha
and
adc
mov
stos
cmpsl
loopne
gs
cmp
in
sti
adc
xorb
and
push
xchg
cltd
pop
jge
pop
sar
and
or
mov
test
in
out
cmpsl
pop
mov
mov
icebp
fidivrs
xchg
xchg
jl
xchg
leave
out
fstl
add
xor
jne
sarl
mov
jnp
popf
mov
cs
lret
sub
movsl
jo
scas
mov
xchg
and
test
sbb
push
into
jmp
lds
js
push
int3
int
mov
xchg
cli
jp
in
xor
lods
inc
xor
gs
je,pt
fdivr
cwtl
pop
mov
iret
push
aam
out
xchg
sbb
std
movsl
cli
dec
cmc
stc
bound
mulb
push
adc
addr16
xchg
cmp
es
outsb
rcrl
out
inc
sub
arpl
bound
inc
jae
jg
scas
leave
jp
push
sahf
std
pop
mov
add
shlb
popf
pop
xor
ss
push
insl
scas
pop
mov
sbb
sub
subb
dec
mov
out
imul
xchg
dec
sti
clc
xchg
lahf
andl
jle
jle
iret
jge
fmull
pop
test
mov
jo
inc
loopne
lods
jmp
sahf
icebp
mov
testb
inc
fcom
push
xchg
sbb
adc
add
or
dec
cmpsl
xchg
scas
push
push
push
daa
push
pushf
mov
imul
sahf
or
stos
insb
jmp
aad
and
pop
mov
inc
pop
imul
add
mov
icebp
stos
icebp
das
mov
mov
jns
loope
jl
pop
jp
mov
lock
mov
insl
dec
int
bound
cs
fbstp
iret
sahf
outsb
mov
mov
pop
fsubrl
add
dec
pop
xchg
aaa
lods
lods
rcrb
fstpt
and
push
lahf
enter
fsubs
adc
adc
jae
out
push
out
lret
aam
cmp
sbb
pop
mov
pop
dec
xor
mov
js
mov
lret
xchg
cli
dec
call
dec
inc
adc
daa
xchg
jge
sti
and
dec
sbb
loope
cmp
xor
cmp
jbe
and
mov
in
dec
sub
xor
je
bound
xor
mov
pop
sub
adc
mov
jbe
cmp
pushf
dec
mov
mov
adc
dec
cmpsb
sti
inc
scas
mov
xchg
aad
xchg
jbe
xchg
movsb
cli
add
inc
pop
inc
es
mov
sti
dec
pop
pushf
pushf
add
loop
pop
add
outsb
lahf
push
loope
jmp
jb
xchg
adc
add
clc
xchg
in
stos
mov
loope
js
mov
repnz
or
es
aad
or
loope
in
cld
fstpl
test
data16
inc
fildl
push
es
lret
jg
jl
ljmp
jecxz
xchg
decl
inc
data16
imul
adc
psubw
std
cld
test
movsb
in
lea
xor
pop
arpl
mov
aad
adc
adc
sbb
cmc
lcall
xchg
ja
sbb
sub
shll
mov
push
inc
adc
mov
xlat
out
loopne
mov
adc
cmp
stos
call
and
add
stc
push
out
push
cmp
testb
xchg
pushf
sbb
in
push
xlat
lcall
xchg
xor
jg
lea
xchg
inc
or
inc
mov
cmc
and
stos
cmp
out
std
sbb
in
xor
in
mov
mov
mov
jmp
mov
nop
jg
push
filds
sbb
movsb
loope
sahf
ss
lods
lods
mov
scas
pop
add
jmp
loop
push
dec
mov
mov
mov
movsb
testb
mov
dec
ret
dec
cmp
adc
pusha
xlat
jbe
push
push
adc
xchg
repnz
mov
pop
gs
les
xchg
test
enter
test
daa
inc
call
push
push
lret
cs
into
sbb
lret
mov
dec
pop
mov
push
inc
inc
jge
jo
out
sub
rclb
jmp
outsb
cltd
dec
mov
push
sub
pop
iret
ljmp
xchg
jno
sti
addb
or
mov
pop
xor
pop
xor
call
sub
mov
dec
or
jae
adc
inc
inc
xor
loopne
cmpsb
call
popl
xchg
mov
xlat
add
inc
push
lahf
orb
loopne
in
in
push
and
divl
mov
adc
push
jns
ja
mov
orl
stos
lods
push
jns
leave
xorb
test
fidivrs
push
mov
lock
test
sti
pop
loope
xor
mov
or
jbe
adc
lcall
scas
pop
ds
jge
or
imull
push
in
jp
lahf
mov
sub
outsl
test
mov
pop
sbb
in
jl
stos
lods
in
inc
pop
pop
mov
bound
jl
aaa
ja
jmp
rorb
mov
mov
sbb
jbe
loopne
mov
sub
push
sub
call
and
repz
movsb
outsb
out
fs
ljmp
push
shlb
stc
xorl
cmp
setne
add
leave
pop
mov
rclb
jbe
fstl
mov
jo
mov
and
loope
and
xchg
xorb
icebp
test
add
inc
inc
xchg
pop
in
jge
daa
mov
inc
aaa
fwait
pushf
xchg
mov
cmp
cmp
push
ljmp
and
jmp
mov
popa
lcall
add
pop
inc
mov
inc
cmp
test
imul
flds
xchg
nop
aas
sbb
outsl
fdivrs
pusha
and
mov
xchg
sbb
push
lods
test
inc
popa
ret
je
push
mov
xor
clc
dec
xor
popa
test
out
mov
or
and
jnp
repz
sti
sbb
mov
mov
xor
sub
inc
sarl
jp
inc
imul
loop
jo
sar
imul
or
dec
cmpsl
call
mov
mov
jb
fimull
xor
test
inc
inc
fldenv
fwait
shrl
aad
ljmp
inc
mov
xchg
aam
sbb
pop
lret
pushf
xchg
or
mov
push
jmp
mov
std
pop
jmp
ror
mov
inc
imul
adc
sbb
dec
aam
mov
gs
jne
add
pop
jns
push
cltd
sub
lcall
jae
into
ss
cmpsb
sub
fmull
cwtl
mov
cmpb
mov
inc
les
daa
cltd
in
mov
mov
lods
gs
scas
mov
xchg
jne
sbb
sub
cmp
and
stos
pop
sarb
or
adc
cmp
adc
fwait
and
and
outsl
jecxz
mov
sti
mov
shlb
negb
cli
ds
mov
movl
xchg
nop
xchg
xor
mov
cwtl
rcrl
fdiv
cs
push
or
jg
sub
push
ret
pop
jb
ret
mov
in
add
scas
aam
aas
jmp
xchg
mov
inc
jl
lahf
mov
pop
adc
and
bound
mov
out
cld
les
push
jne
xchg
mov
out
cmpsb
pop
test
insl
push
push
mov
stos
sub
fistpl
or
jae
xor
dec
push
inc
sub
sbb
xorb
jae
lds
push
scas
in
sbb
cmp
xchg
in
lcall
into
xchg
push
cmp
inc
test
or
jg
mov
repnz
aad
push
addr16
pop
sub
mov
aam
js
inc
pop
lock
int3
lods
push
arpl
ss
add
cld
sbb
inc
jne
ljmp
xchg
decb
imul
cmp
in
adc
loop
hlt
das
mov
adc
data16
decl
pop
fpatan
das
gs
orb
int3
jle
jno
mov
test
ficompl
in
sub
fists
pop
pop
jb
sbbb
jge
push
sub
mov
mov
cmp
xor
mov
bound
adc
mov
jmp
icebp
pusha
stc
fsubrs
enter
fwait
adc
out
rcl
cmpsb
or
jp
mov
rorb
das
loop
push
mov
popa
xor
ds
add
iret
lods
lcall
xchg
add
test
popf
dec
jae
imul
adc
jns
fstpt
fnstsw
popf
test
adc
fistl
roll
cmp
fildl
and
into
jge
xchg
imul
lea
xor
mov
sbb
inc
adc
jnp
xchg
fwait
inc
jo
sbbb
add
mov
pop
in
inc
adc
jns
push
dec
loopne
jbe
jmp
mov
dec
gs
rclb
cmpsb
pop
cmp
fiadds
push
loopne
push
popf
lret
and
lds
aad
xor
and
jg
dec
jb
pop
mov
dec
jno
push
or
out
push
leave
loope
inc
dec
sub
faddl
sub
rol
pop
fistpll
mov
cld
push
addr16
insb
cmp
ds
sbb
mov
jbe
lock
movups
call
push
fmull
xchg
mov
inc
dec
aaa
loop
mov
jl
sbb
mov
mov
repnz
arpl
inc
mov
daa
fneni(8087
outsl
rorb
ljmp
call
sub
adc
pop
test
xor
add
fldenv
daa
mov
in
jmp
xchg
test
or
je
mov
push
inc
xor
pop
push
sub
mov
out
stc
setl
xlat
mov
stos
xor
dec
dec
roll
mov
mov
xchg
sub
and
push
mov
fs
cltd
push
aas
add
lds
xchg
jle
rol
enter
cs
ss
pop
push
mov
sub
je
ljmp
cs
outsb
popf
aad
push
stos
stos
fcmove
and
dec
xchg
imul
xchg
mov
mov
sub
inc
pop
in
xlat
mov
adcl
xor
or
pushf
xchg
mov
js
cwtl
push
adc
cmp
xor
movsb
mov
into
mov
dec
repz
xor
fimull
xchg
adc
inc
or
adc
add
andb
mov
push
mov
arpl
imul
filds
mov
inc
les
rcrl
xlat
xchg
fldenv
sarl
mov
clc
int
sahf
mov
add
xchg
xor
scas
mov
or
and
pop
adc
xor
fmul
sub
xor
imul
fsubs
mov
push
inc
popf
pushf
sbbb
mov
cs
fdivs
cmpl
loop
mov
imul
jb
test
mov
sub
xor
arpl
sbb
adc
push
into
adc
pop
scas
lcall
jmp
sbb
mov
dec
dec
mov
repnz
sub
adc
xlat
roll
or
movsl
inc
subb
je
stos
xor
jns
mov
dec
scas
pop
push
cld
or
push
cmp
sbb
push
inc
push
cmp
addr16
push
pop
jle
sbb
jl
push
dec
data16
jmp
push
lock
lahf
xchg
push
mov
pop
adc
inc
clc
push
adc
pop
jl
loopne
fwait
inc
cmp
inc
jbe
mov
pop
cmp
sti
adc
mov
pop
sar
aas
je
push
je
test
jo
mov
imul
adc
sub
adc
cmp
bound
ret
xor
cwtl
push
leave
out
fdivp
pop
adc
or
jne
dec
icebp
out
and
pop
xor
push
mov
adc
loopne
fs
inc
fldt
xchg
add
push
aam
adc
mov
mov
cli
into
sub
or
or
xchg
test
mov
icebp
push
loope
push
lret
aaa
addr16
jge
outsl
popf
or
pop
cmpsl
movsl
ja
jbe
sahf
cmc
add
sub
mov
adc
inc
and
jl
pop
pop
mov
fmulp
popf
xchg
jns
sub
pusha
or
sbb
xchg
jle
xor
iret
and
sbb
sub
iret
out
dec
sub
mov
xor
lcall
enter
ret
popf
cmp
push
pop
ds
je
or
mov
int
dec
popa
or
addb
cmp
imul
imul
cli
fbld
inc
es
out
fdivs
pop
push
jle
pop
push
sbb
xor
mov
sbb
xor
adc
inc
add
push
mov
ljmp
nop
daa
cwtl
or
sbb
fisubs
sbbb
sub
xchg
cmpsl
and
test
add
insb
lds
add
mov
mov
mov
std
pushf
ret
sbb
jae
mov
outsl
xor
test
outsb
dec
mov
mov
imul
outsl
repnz
data16
repz
sbb
mov
sbb
adc
xor
arpl
movzwl
sbb
ret
std
mov
out
das
mov
mov
scas
or
ret
add
into
or
std
fsubs
adc
std
push
test
sub
xchg
clc
cmpsb
or
pop
dec
sbb
xor
xchg
jmp
insb
movsb
cmpsb
lcall
aam
out
out
cmp
push
rcrl
ja
lahf
inc
rol
xchg
dec
and
xchg
iret
or
imul
inc
popf
pand
je
lods
fcomps
sub
xchg
incb
push
dec
inc
jecxz
arpl
adcb
adc
or
cli
jmp
fdivs
mov
loop
jecxz
cld
lret
scas
mov
lcall
cmp
xchg
fs
mov
addr16
iret
mov
imul
insb
lods
mov
and
inc
movsl
dec
aas
lret
cmp
dec
imull
aaa
cmpsb
mov
jl
sbb
and
pop
and
xchg
push
jb
lcall
push
push
mov
mov
jge
pop
into
jo
lret
insl
push
xchg
mov
ret
mov
add
outsb
mov
lret
daa
sti
or
icebp
orl
addb
cmpb
into
pushf
je
xor
fs
xorl
sti
sub
mov
sub
insb
pop
push
out
xlat
push
mov
sbb
and
add
enter
mov
icebp
call
pusha
xor
jo
ss
xchg
mov
and
jl
mov
push
daa
inc
arpl
in
test
adc
xor
sub
push
push
push
popf
loop
dec
xchg
out
iret
xchg
nop
cmp
jns
je
insl
and
xor
xchg
stos
mov
loope
mov
into
int
jmp
mov
mov
je
sub
insb
addb
dec
pushf
pop
mov
aaa
mov
and
in
fidivl
inc
std
ret
xor
or
fdivl
call
dec
pop
jp
enter
sub
call
jns
mov
mov
dec
shr
scas
push
adc
cmpsb
cmpsl
cmp
orl
bound
adc
lods
jb
imul
dec
addr16
or
push
insb
inc
rcrl
out
pop
loope
loope
test
xchg
iret
xchg
pushw
xor
mov
push
addr16
sti
adc
cmp
fidivs
push
fildll
cld
lret
mov
push
testb
sbb
mov
stos
mov
jns
mov
mov
pop
dec
mov
hlt
pop
outsl
iret
sti
mov
cmp
lea
inc
movsl
sbb
pop
es
out
loope
movsl
adcl
loope
sub
imul
mov
push
jge
xor
push
adc
gs
orl
test
bound
inc
insl
loope
bound
xchg
imul
popa
jp
jne
or
aas
lods
sahf
movl
mov
das
mov
adc
test
enter
rolb
dec
xor
and
pop
mov
push
cmp
out
mov
pop
fdivl
jno
hlt
push
int
add
xchg
adc
dec
cmp
dec
mov
ret
mov
mov
fs
loopne
mov
into
andl
jp
inc
data16
out
fisttpll
outsb
repnz
add
sahf
addl
cmpsb
fcoms
test
das
leave
fnstenv
leave
mov
pop
xchg
aad
rorb
pusha
xchg
or
enter
loopne
or
enter
testl
and
lods
pop
in
mov
jnp
pop
cs
lahf
jnp
flds
fsubs
jo
frstor
cltd
jnp
ret
sbb
xchg
in
in
in
xchg
dec
aad
mov
inc
dec
xchg
in
lret
push
repz
adc
ljmp
push
jge
sub
mov
icebp
icebp
mov
or
rcrb
push
ret
add
mov
pop
mov
add
stos
push
mov
jp
xchg
push
rorl
in
cmp
mov
xchg
jnp
cmc
sbb
adc
pop
xchg
inc
sub
jp
notb
mov
cmpsl
into
rcrl
jns
test
daa
inc
arpl
xchg
out
mov
mov
mov
popf
sahf
dec
lahf
das
rorb
pop
push
push
dec
sbb
fdivrs
les
inc
repz
cmpsl
push
rclb
push
and
jb
je
fdivrl
cmpb
in
pop
hlt
js
repnz
cmp
push
dec
add
data16
out
loopne
incl
adc
in
aaa
dec
add
sahf
sub
pop
in
daa
sti
out
xor
ficompl
sbb
jae
pop
inc
or
sarl
addr16
test
out
in
mov
pop
xor
in
pop
sbb
aas
idivl
sbb
sub
pushf
xor
and
ja
int
enter
jo
pop
shlb
imul
jge
and
mov
shll
clc
sbb
loope
fldenv
xchg
add
jmp
pop
sub
sahf
out
and
xor
push
das
xchg
xor
sbb
ss
xor
add
push
mov
jg
mov
push
dec
std
cld
add
mov
sarb
push
into
and
cmc
pop
xor
xchg
xchg
ds
int3
sbbb
xchg
stc
jbe
cmp
int3
mov
shlb
sub
sub
or
lods
jge
push
sbb
sbb
cs
cli
mov
sub
loope
outsl
or
nop
adc
rcrb
dec
adc
sbb
lods
aaa
sbb
xor
aad
mov
pop
push
enter
xchg
scas
mov
mov
jo
jbe
pop
jne
iret
jb
in
stc
xor
call
sub
jno
dec
shrd
imul
incl
vphaddudq
sub
mov
popf
and
dec
ret
pop
and
dec
lahf
pop
push
jle
dec
sbb
dec
gs
add
pop
fs
out
bnd
xchg
add
stos
xchg
mov
mov
mov
cmpsb
push
das
ret
pop
jle
mov
or
push
and
jge
insb
push
lret
dec
out
push
cmpb
int3
mov
cmp
or
and
mov
ds
rcll
shlb
subl
sub
mov
pop
cmc
xchg
push
mov
dec
arpl
add
jle
and
sbb
pop
popa
int3
cmp
push
orb
mov
das
stc
cmpsl
mov
inc
lret
push
mov
sub
out
and
aas
clc
aam
dec
and
or
push
mov
xchg
xor
or
movsl
inc
xchg
nop
aad
mov
daa
push
lods
scas
mov
add
aas
inc
cmp
aad
ja
adc
shrb
gs
xlat
ds
sbb
fs
int
sbb
subl
mov
inc
cmpsb
and
arpl
test
push
mov
pop
pop
dec
and
jo
pop
dec
mov
ds
pop
fldcw
sub
pop
cmpsl
adc
lods
cmp
inc
into
mov
leave
pop
and
or
aaa
mov
lahf
pop
inc
stos
jecxz
mov
andb
xchg
lods
inc
out
xchg
push
imul
xchg
mov
push
or
psrlw
push
jg
fisttps
mov
sar
mov
jns
clc
jl
xchg
and
int
adc
mov
inc
mov
sub
jae
stos
sbb
mov
fwait
aas
mov
push
add
mov
call
dec
cmpb
leave
fistpl
aaa
cmc
xor
mov
inc
scas
cs
jbe
ret
mov
adc
push
movsb
cwtl
loopne
mov
inc
xchg
out
sbb
pop
xor
add
scas
dec
leave
aas
cltd
addb
lret
lds
inc
sbb
adc
es
icebp
fsubrl
and
adc
std
addb
sbb
or
cs
in
push
xor
lcall
pop
daa
aad
inc
imul
add
cwtl
jns
bound
push
or
jb
xor
mov
mov
mov
cld
xorl
iret
push
scas
in
cltd
pop
and
dec
xchg
hlt
in
xor
mov
ss
pop
adc
push
push
scas
test
aam
sti
movsl
adc
push
lods
cmpsl
cmpsl
mov
scas
inc
cmp
movsb
sub
jecxz
jle
arpl
cmc
jne
test
mov
pop
sbb
or
jbe
cwtl
bound
lea
sub
and
pop
xchg
push
inc
push
iret
sub
mov
push
cmp
imul
shr
inc
inc
cmpsl
xor
das
lcall
sub
insb
dec
jo
lds
ret
mov
mov
sbb
jnp
mov
daa
push
jne
stc
repz
pop
mov
mov
xchg
or
cltd
dec
sti
dec
arpl
push
loopne
jae
add
out
lods
call
into
push
or
pop
sbb
repz
mov
and
sub
lret
sti
sub
xchg
dec
mov
jle
sub
es
insl
sbb
xchg
out
push
mov
stc
jl
mov
jb
repnz
outsb
mov
ror
movsb
cli
loope
fucomp
and
fwait
adc
je
pop
pop
subb
mov
fisubrl
lcall
mov
push
and
inc
fwait
cmpsb
xor
leave
xor
imul
in
pop
or
mov
ret
lock
pusha
adc
dec
push
mov
jl
mov
xor
jl
lock
aaa
outsb
rol
fisubs
or
ss
xchg
fsubl
popf
popl
jmp
dec
sti
sbbb
jae
out
pop
lea
push
loope
cld
std
mov
into
in
outsb
and
fs
or
addr16
add
xchg
inc
inc
lods
xor
std
mov
add
fs
popa
xor
lds
lret
test
jl
mov
dec
add
pop
or
insb
into
fmuls
sub
imul
cmpsb
mov
cmp
clc
mov
lods
faddp
add
dec
or
cmp
iret
add
dec
es
scas
pop
cwtl
int
sbb
stc
add
adc
popf
mov
not
cmp
adc
jnp
mov
jnp
sbb
push
mov
add
adc
andb
bound
xchg
call
xor
mov
in
jmp
or
cmpsb
lds
adc
test
mov
cld
rorl
pop
sub
out
rclb
xor
mov
push
loop
flds
movsl
cmp
xlat
hlt
cli
or
ficoml
in
xor
popa
inc
jp
jb
in
push
jno
ret
cmp
addr16
popa
or
mov
cmp
adc
or
pop
clc
fs
add
cli
add
mov
xchg
call
fucompp
cmp
aam
lds
and
popa
lds
in
mov
stos
adc
out
loope
stc
scas
add
add
ret
lea
mov
outsb
hlt
ljmp
leave
fwait
test
cmpsl
mov
xor
into
xchg
mov
xchg
jmp
frstor
icebp
scas
fucomp
pushf
lock
xor
xchg
lods
push
dec
pop
fisttps
jle
push
sub
aam
data16
pop
sarl
xor
psrad
push
cmp
test
aas
xchg
mov
in
mov
sub
int3
mov
fisubrs
jnp
call
pop
and
mov
aaa
and
shl
and
sbb
sub
and
sub
popf
je
flds
lcall
cmp
insl
jle
data16
xchg
insl
fsub
jnp
ret
mov
mov
loope
and
shrb
testl
xchg
push
mov
pop
cmp
push
int
pop
mov
pusha
out
jno
ret
mov
push
pushf
lcall
ljmp
imul
scas
pusha
ljmp
push
es
push
adc
jo
dec
mov
int
sub
xchg
mov
out
add
test
adc
stos
xor
int3
cmp
pushf
xchg
popa
pop
das
in
insb
out
sub
enter
fldt
addr16
mov
dec
fiadds
push
sbb
inc
lret
cmpsl
and
daa
in
sbb
adc
dec
fbstp
stc
cmpsb
cmp
test
gs
pop
fistpll
ja
les
lea
pop
fcomi
sti
mov
push
sbb
pop
mov
add
fdiv
je
pop
pop
popf
pop
cwtl
push
loopne
xor
xchg
ja
out
xchg
loope
pop
sbb
dec
add
repnz
dec
sub
popa
sub
xor
icebp
jmp
sub
rorl
scas
pop
inc
fcmove
testb
sub
adc
div
je
inc
dec
stos
xchg
inc
movsl
cmp
pop
cmp
push
add
sbb
mov
inc
ss
jne
cmp
mov
out
dec
pusha
ljmp
or
rcr
push
pushf
hlt
in
sub
xor
scas
cwtl
mov
add
pop
std
sub
pop
test
xchg
lahf
in
icebp
xchg
in
jmp
ret
dec
enter
orl
stos
out
loop
shlb
pusha
sub
jb
inc
add
fmull
mov
outsb
daa
and
sbbl
pop
popa
jne
stos
cmp
test
adc
adc
lods
sub
aam
cmp
inc
test
loope
in
sbb
cmp
andl
sub
mov
mov
xor
inc
push
push
pop
dec
aas
aad
jp
add
xor
popf
faddl
addb
mov
add
mov
push
add
cwtl
mov
repz
jl
push
inc
js
mov
aad
push
push
push
subb
mov
shlb
insl
lret
nop
pop
fnstcw
and
out
mov
inc
adc
mov
nop
dec
icebp
adc
pop
lds
in
push
ret
xchg
movsl
shll
outsb
add
mov
sub
jl
sbb
push
aad
imul
enter
lods
xor
ss
out
inc
adc
and
mov
or
mov
out
fs
adc
test
pop
push
sbbb
pop
sbb
inc
or
and
mov
jmp
mov
dec
mov
subl
ret
and
out
and
sbb
mov
pop
and
fdivrl
xor
push
mov
mov
loope
js
push
jl
adc
xchg
xchg
push
loopne
sbb
bound
lcall
shlb
push
stc
mov
loope
xor
sub
lods
into
out
leave
dec
push
jb
iret
imul
and
xlat
aaa
mov
xor
and
mov
dec
dec
aad
jno
pop
add
add
mov
push
ret
and
jnp
sbb
lahf
pop
repnz
mov
mov
inc
subb
push
inc
sbb
add
sub
loopne
sbb
lods
inc
test
jae
and
sbb
mov
mov
ret
sbb
insb
xchg
in
sbb
outsb
bound
sbb
dec
rcrb
stos
std
shr
pop
jecxz
pop
cmp
movsb
ret
shll
push
push
mov
test
imul
cmpsb
popa
in
and
cwtl
popf
xchg
daa
imull
inc
dec
add
ljmp
test
gs
inc
jns
mov
jp
mov
lods
test
mov
pop
in
add
push
inc
cmp
push
clc
subl
adc
dec
andl
xor
movsl
fcoms
cmp
mov
push
pop
aam
ja
pop
pop
in
mov
pushf
and
test
enter
shll
pop
out
lahf
jle
pop
pop
loopne
xchg
mov
dec
mov
push
hlt
mov
loop
push
push
adc
mov
insl
ret
xchg
mov
mov
mov
dec
lret
popa
mov
sbb
inc
pop
daa
test
dec
xor
shrb
faddp
cmp
xchg
in
stos
pusha
and
mov
enter
or
gs
add
jle
lcall
inc
mov
out
in
sbb
mov
das
push
add
xor
in
stos
push
jb
nop
inc
adc
scas
ret
xor
lcall
test
adc
movsl
cmp
cmp
fiadds
mov
in
out
jae
dec
hlt
out
inc
movsl
movsl
stos
adcl
mov
pusha
ljmp
aam
test
rcr
cmp
dec
push
dec
dec
int
push
cmp
dec
in
pop
ret
stc
mov
or
adc
je
jb
enter
push
and
popf
dec
xlat
sub
je
xor
int
jmp
shrb
sbb
std
call
inc
jb
inc
adc
cmp
mov
cmpsb
loope
mov
adc
xchg
roll
fnsave
lods
insb
inc
das
ret
ljmp
pop
pop
cmp
in
pop
mov
or
pop
xchg
out
xchg
cmp
push
popf
addr16
outsb
mov
inc
mov
fs
arpl
and
call
insb
lds
mov
pushf
mov
sahf
icebp
clc
and
sbbl
adc
daa
xchg
cmpsl
out
ret
mov
sti
mov
aaa
push
sbb
xchg
inc
jne
loope
pop
adcb
mov
or
test
mov
mov
popf
mov
call
rolb
cs
or
jbe
jbe
sbb
in
inc
jg
jmp
dec
cmp
cltd
std
dec
nop
cmp
jp
xchg
mov
fscale
and
add
fwait
cmp
mov
out
int
mov
fldt
sub
push
pop
insl
sub
lods
in
insb
cmpsl
mov
xor
mov
sbb
pop
jne
sub
test
das
fcoml
mov
cmp
cmp
jae
fdivl
xor
in
push
mov
mov
or
mov
fs
push
mov
test
pop
hlt
into
or
test
cld
mov
mov
xchg
rcrl
jl
mov
dec
pop
or
lahf
shll
mov
test
dec
leave
jle
inc
xor
imul
sub
daa
sbb
xchg
mov
lret
mov
xchg
xor
push
dec
pushf
iret
adc
xlat
inc
or
lods
neg
xlat
std
rcrl
cmp
fadds
adc
and
ds
divl
xorl
test
stos
mov
and
test
test
outsl
mov
test
mov
mov
or
loope
mov
fnstcw
pause
jae
lock
adc
cmp
cwtl
mov
aaa
ljmp
in
dec
pop
into
out
rorl
xor
lahf
in
js
xchg
insb
loope
inc
addr16
xchg
jle
loop
sbbb
js
push
mov
lret
iret
mov
fbstp
fildl
popf
mov
xor
testl
inc
jecxz
clc
mov
femms
dec
fcompl
ljmp
cmp
out
imul
in
xchg
jb
inc
or
call
ljmp
incl
dec
xor
lret
push
rclb
mov
mov
hlt
sbb
push
adc
ljmp
xor
push
inc
push
mov
mov
push
mov
repz
or
sbb
cmpsl
sbb
add
fwait
push
jbe
jl
pop
outsl
loopne
pop
out
shrb
mov
push
lcall
push
out
in
stos
xor
adc
dec
xor
sub
xchg
mov
mov
jl
xchg
add
dec
shll
jbe
mov
fdecstp
icebp
mov
js
xbegin
loopne
sub
add
xorl
fcompl
loopne
jnp
scas
xor
jae
in
jmp
and
pop
and
rorl
adc
pop
insl
push
add
jb
addr16
push
mov
or
enter
mov
and
ficoms
movsb
insl
inc
inc
fcomip
lock
int3
test
loop
and
mov
repnz
inc
push
scas
sarl
out
nop
mov
out
pop
imul
test
sub
clc
mov
test
add
sub
push
lock
xchg
cs
xor
xorb
iret
mov
cmp
lret
jge
xchg
sti
pusha
pop
inc
xchg
ljmp
mov
loopne
je
bound
data16
test
movsb
out
xchg
pop
aam
lods
les
adc
push
fbstp
add
pop
daa
lahf
bnd
rol
cmp
adc
and
adc
mov
sub
and
adc
mov
push
mov
xchg
aad
mov
shll
mov
push
sbb
lcall
clc
jae
lret
adc
jne
in
fcmovnb
dec
xorb
xchg
imul
cs
pop
lea
push
fisubrl
or
fwait
lock
pop
into
rorl
cld
mov
jne
jo
lret
insb
sahf
mov
sti
or
loop
jmp
xlat
pusha
loop
push
out
ds
push
cwtl
fs
inc
push
add
and
or
es
leave
push
or
or
xchg
sub
mov
and
fwait
enter
add
xchg
cmp
lock
jmp
jg
xlat
cmc
stos
jge
bound
shlb
int
add
jb
jno
cs
sbb
push
aam
daa
xchg
lahf
mov
and
cmp
push
lock
jb
pop
gs
lahf
pop
mov
sbb
je
insl
dec
pushf
inc
jno
add
push
push
sbbb
push
adc
xchg
add
push
sahf
add
ljmp
ret
cwtl
sahf
mov
push
pop
in
enter
inc
cmp
ret
sbb
movsb
jnp
icebp
push
push
mov
movsb
cmpsl
cmp
fsubrp
cmpsb
ret
je
inc
dec
das
and
cmp
shl
int3
aas
insb
push
mov
fistl
sub
jmp
scas
stos
xchg
and
xchg
inc
mov
add
jns
and
push
addr16
out
andb
dec
bound
fstpl
xor
dec
fidivrs
or
daa
stos
insl
ret
push
fwait
dec
movl
int3
cmp
jne
lcall
loope
hlt
sbb
imul
mov
jle
imul
add
and
repz
adcl
inc
jmp
int
xor
push
sbb
ljmp
mov
jbe
scas
test
jge
mov
lcall
mov
cwtl
popl
push
fwait
lock
call
dec
andps
xor
mov
in
mov
xchg
fwait
sarl
pop
nop
daa
mov
mov
fwait
dec
pop
add
pop
sub
cmp
stos
hlt
std
adc
push
add
cmpb
scas
mov
pop
out
stc
roll
cmpl
fstl
flds
pop
fnstcw
fistpll
mov
jmp
jo
pop
mov
add
sub
jnp
jp
rep
mov
push
add
scas
xlat
mov
icebp
in
scas
and
fcmove
jge
inc
lret
fsubr
xlat
lock
fnstsw
and
xor
ret
mov
lock
adc
nop
or
aaa
repnz
out
adc
shll
push
push
xor
insl
and
xor
out
stc
inc
ficompl
pop
sbb
sub
int3
inc
inc
adc
inc
pop
pushf
push
add
cltd
xchg
cwtl
dec
out
aad
les
mov
ds
sbbb
cmpsb
repz
aam
xor
or
push
xlat
xchg
rolb
jmp
aam
cmp
cltd
mov
sub
cs
int
inc
fidivl
mov
fcomip
aas
cmp
lock
push
loopne
fistpl
leave
je
cmpsl
xor
xorb
out
lret
push
push
test
push
in
inc
cmp
call
scas
lds
shlb
pop
adcb
es
iret
sbb
mov
dec
add
jmp
into
in
js
jae
sbb
lods
push
daa
jge
push
dec
out
fstpt
idiv
jbe
adc
pop
pop
push
push
fsubs
lahf
inc
loop
hlt
mov
rclb
mov
roll
jp
out
lods
ret
cld
in
mov
ja
outsl
sbb
jb
mov
jae
into
xor
xchg
ss
addr16
mov
or
pop
cmp
push
out
jge
jo
xchg
sbb
and
iret
push
add
lret
mov
test
adc
mov
std
dec
push
pop
dec
lods
pop
mov
xchg
fldt
pop
pop
mov
out
sub
inc
mov
adc
hlt
outsb
daa
je
or
in
push
notl
call
adc
sbb
ret
pop
cmp
jecxz
and
mov
dec
jnp
dec
mov
loope
frstor
mov
arpl
outsl
lods
stos
xchg
pop
mov
and
div
popf
sub
cmpsl
inc
mov
cmp
popl
pusha
pop
scas
loopne
and
repz
sbb
lods
pop
dec
scas
pop
adc
lods
jnp
jge
movsb
push
pop
push
pop
testl
int3
jmp
push
pop
sub
jge,pn
cmp
pop
xor
xor
cmp
xor
push
xchg
das
cld
xor
cmp
push
cmp
popf
jmp
adc
push
aaa
aad
push
out
and
and
ds
dec
hlt
inc
outsl
or
inc
inc
adcl
mov
scas
pop
mov
ja
dec
adc
inc
test
test
rcl
testl
xlat
inc
inc
inc
out
mov
cmp
and
call
mov
fidivrs
sarb
outsl
les
mov
sarl
insb
push
popf
mov
mov
add
adc
mov
test
push
ret
mov
sbb
andl
fadd
mov
jg
cmp
clc
in
ja
dec
stc
sbb
in
xor
xor
mov
push
ds
cmp
icebp
mov
sbbl
sub
aam
hlt
and
jle
push
rorb
mov
ljmp
jb
inc
push
loopne
sbb
mov
dec
mov
addl
scas
jnp
shlb
mov
aaa
pop
mov
adc
and
xchg
ret
push
sub
mov
pop
loopne
push
inc
fisttpl
cmpsl
and
dec
cmp
mov
mov
loopne
or
sub
jnp
icebp
xchg
cmp
and
out
cmp
cld
loop
sub
jecxz
lret
dec
outsb
call
mov
push
adc
inc
sbb
fisubrl
std
nop
stos
and
jns
sub
xor
rcl
push
ret
pop
push
popa
fwait
mov
inc
push
xchg
mov
xchg
mov
inc
or
inc
and
sub
push
jb
sahf
lds
sub
sbb
cltd
dec
repz
jnp
mov
add
ret
cmp
sbb
mov
xchg
insb
scas
adc
jnp
mov
ret
add
les
out
sbb
sub
add
jb
sbb
call
pop
adc
icebp
je
push
mov
insl
out
scas
or
lret
lea
cmp
fmull
push
sub
add
or
das
mov
jecxz
xchg
sahf
adc
nop
call
pop
and
xchg
inc
dec
andb
jns
arpl
les
jo
mov
mov
aam
pop
bound
cli
mov
into
out
jo
pop
adc
cmpsl
lahf
orb
mov
jnp
pop
push
popa
mov
adc
scas
div
cmp
xor
shrl
adc
cld
test
pop
xor
xchg
gs
or
mov
scas
fisttpll
sub
rorb
pushf
xchg
jno
popf
ret
cmpsl
out
fldl
cmp
les
xchg
sbb
mov
sbb
sbb
data16
or
xchg
or
lods
xor
mov
or
shr
daa
jnp
and
mov
in
addl
ss
or
adc
xchg
ja
mov
lods
mov
div
rcr
dec
movsl
fs
mov
push
push
sub
sbb
rorl
popf
shlb
mov
and
push
popf
add
cmpsb
js
pop
enter
jecxz
sti
xchg
xchg
cmp
ret
leave
lret
mov
rorl
add
mov
aas
pop
dec
mov
enter
xor
and
xorl
pop
and
inc
mov
stos
mov
out
push
cli
stos
sarb
and
or
pop
xchg
jecxz
sti
xchg
mov
addl
loope
push
in
mov
inc
xchg
mov
sub
and
stc
xchg
mov
push
mov
push
fisubs
orb
xchg
mov
adc
mov
mov
sahf
inc
aad
lods
je
pop
sub
imul
xchg
out
das
sub
xchg
jl
in
stos
jnp
test
adc
add
xchg
shrb
jge
add
push
imul
lds
jmp
fsub
cmp
push
cwtl
cltd
bound
into
adc
inc
ficoms
enter
push
test
loopne
gs
sbb
jbe
sub
adc
fs
mov
sbb
dec
add
push
dec
int3
push
inc
jecxz
das
pop
daa
sahf
add
sar
fstpt
pop
pop
sub
cmpsl
jmp
adc
cmp
enter
daa
or
cmpb
inc
mov
and
mov
push
adc
sub
ss
cmp
mov
add
fdivl
scas
int
jne
int3
mov
fisubs
jns
push
sub
xor
add
ret
adc
xor
add
cmp
or
pop
sbb
xchg
sub
inc
les
pmaxub
xor
add
stos
lods
jb
out
sub
addr16
cmp
mov
aas
nop
inc
or
fildl
pop
mov
fcomp
outsb
loopne
les
ja
lods
cmpsb
or
andl
xchg
push
sbb
cmp
cmp
cmp
cli
pop
dec
cmp
jle
dec
mov
sub
cld
pop
push
iret
and
dec
sbb
pop
pop
xor
mov
out
ljmp
mul
jmp
inc
leave
pop
jmp
pop
sbb
and
ja
js
sbb
fidivl
mov
mov
bound
lods
stos
fdivl
test
lea
cli
add
repnz
add
movsl
and
into
and
out
test
lea
add
imul
xchg
subb
sub
popf
xchg
cmp
and
cmpsb
xchg
dec
ds
mov
jecxz
in
lods
imul
mov
inc
ret
add
fwait
shll
mov
adc
lods
fxch
imul
popa
adc
aaa
xor
and
loope
fnsetpm(287
pop
xchg
in
sbb
sbbb
mov
jno
pop
sbb
add
inc
add
and
testb
mov
loop
pop
mov
cmp
push
xlat
stos
loopne
sahf
lret
xchg
dec
repz
dec
pop
cmp
mov
dec
mov
decl
push
dec
aas
lock
xor
fcmovu
jg
cmp
xchg
sbb
and
jg
push
int
push
adc
dec
jno
xor
adc
divb
push
cmp
mov
cwtl
mov
cmp
or
jb
fldl
xor
movl
dec
or
js
icebp
int
add
rcrb
cli
movsb
fistps
adcl
ds
cmp
ret
cmpsl
lret
sbb
sbb
push
adc
cmpsb
dec
mov
push
repz
out
movsb
push
jb
push
adc
movups
shlb
adc
push
or
dec
dec
sbb
mov
and
mov
jge
testl
push
inc
sbb
xchg
rorb
ret
lock
daa
lock
pop
inc
dec
shl
xchg
push
sbb
and
mov
out
test
add
jmp
loope
jge
dec
aaa
adc
mov
sub
and
mov
cmp
scas
imul
pop
dec
jo
imul
rclb
rclb
xchg
sti
cwtl
aas
hlt
lods
mov
fnstsw
imul
jmp
xor
lods
mov
and
test
dec
incl
aas
mov
or
bound
add
ret
es
insl
push
out
cmpsl
ja
or
out
or
iret
jecxz
jle
enter
jp
add
insl
les
ss
fdivr
push
clc
sbb
mov
mov
mov
ljmp
add
inc
repnz
pop
sarl
push
push
sub
dec
inc
cmp
dec
sbb
stos
scas
xor
mov
jno
mov
jecxz
mov
sub
es
lods
js
xchg
ret
jbe
aad
fs
ljmp
and
fwait
ja
inc
fs
inc
xor
xor
push
shll
and
dec
mov
insl
xchg
ss
xor
push
dec
test
cmc
fisubrl
jg
fidivl
lea
xchg
mov
mov
mov
cmp
push
adc
shrl
fcoms
das
mov
icebp
lahf
xchg
test
or
iret
jp
lret
ss
mov
and
inc
sbbb
cs
add
jmp
addr16
shr
pop
xchg
mov
test
je
add
shlb
inc
cmp
xor
xor
addl
lods
push
and
sub
add
push
push
int3
dec
dec
cwtl
and
xor
adc
hlt
js
aad
aad
xor
cmp
jb
clc
movsl
push
outsb
jge
xchg
sub
les
inc
in
addb
rcr
inc
sbb
sahf
jmp
xchg
push
lods
push
pop
sbb
xchg
or
xor
cwtl
imul
xchg
and
push
or
repz
lcall
push
push
or
dec
mov
push
jmp
xor
lret
inc
fsubl
and
imull
scas
fisttps
loop
add
push
inc
xor
push
mov
cmpsb
hlt
sbb
cmp
dec
dec
xlat
dec
ret
and
ja
jae
scas
and
fs
test
mov
push
and
jle
cmp
aad
xor
push
scas
or
adc
roll
mov
and
dec
jb
mov
push
sbb
jb,pt
and
sar
cmp
scas
pop
mov
sbb
add
lahf
xor
sub
clc
ja
mov
aas
cs
lock
std
mov
pop
pop
or
cltd
add
int3
push
fistpll
fs
mov
push
pusha
inc
mov
cmp
add
mov
loope
or
push
mov
inc
stos
pop
sbb
or
rorb
ret
leave
cli
sbb
notb
inc
or
mov
stc
scas
scas
cmpsl
arpl
xchg
mov
into
stc
xchg
and
mov
jg
mov
pop
add
dec
fadds
pop
inc
addr16
fwait
pop
adc
rorl
inc
loopne
les
push
scas
xchg
adc
adc
not
jle
fistpll
cmc
nop
cwtl
or
movb
pushf
out
aam
ds
mov
mov
mov
xchg
ds
lcall
sub
mov
mov
and
xor
mov
sbb
jnp
iret
data16
in
out
dec
push
lea
xorl
stos
or
in
test
mov
lds
or
sub
xchg
stos
dec
cli
lret
jb
mov
notb
pop
mov
pop
jecxz
ja
xor
fidivs
mov
ror
inc
xchg
cmp
call
in
sbb
je
rcr
and
stos
in
xchg
cmp
shlb
inc
mov
mov
sbb
rorl
mov
rcrb
xor
in
jae
jp
xlat
sbb
fwait
and
sahf
sub
add
mov
push
sahf
push
mov
shr
fcomip
por
jne
ja
mov
shlb
roll
sti
adc
mov
lret
aad
rcrl
aas
mov
inc
stos
push
les
out
mov
push
jne
push
sub
jl
mov
test
shrb
and
xchg
mov
into
sbb
subb
call
jl
mov
push
bound
aas
mov
mov
lahf
jecxz
cwtl
pop
and
rolb
subl
pop
adc
aas
adc
inc
cwtl
enter
pop
fldenv
jnp
sti
sbb
out
int3
adc
fildl
or
out
notl
outsb
loopne
mov
loop
aaa
loope
push
fmuls
daa
dec
pop
inc
push
cmc
mov
dec
imul
aad
mov
push
inc
ffree
sbb
insb
icebp
lock
or
jp
outsb
xchg
dec
and
push
lods
inc
aam
fwait
mov
aam
add
adc
insb
mov
pop
pusha
push
jg
xlat
mov
test
fs
adcl
dec
cmpsl
sarl
mov
jo
jl
test
mov
mov
push
or
ja
scas
imul
inc
jo
and
ficompl
mov
loopne
pop
rorb
sar
dec
jge
fistpl
hlt
addr16
push
fbstp
ret
std
fcompl
hlt
jb
pop
sbb
ret
inc
icebp
dec
daa
push
adc
xchg
fucomip
fabs
stos
mov
sarb
lcall
and
add
pop
shrb
xor
push
push
mov
cmp
mov
loop
ss
adc
and
cmc
mov
shl
cli
int3
mov
in
pushl
cld
into
cltd
testb
out
jmp
adc
dec
cli
dec
mov
sbb
push
bound
xor
loope
loope
cs
dec
mov
inc
dec
jns
dec
aas
mov
cmp
in
sub
mov
fsubs
lea
push
pop
rorb
lret
cwtl
xchg
pop
lahf
test
fnsave
sbb
rorb
push
or
lea
je
sbb
roll
cmc
pop
and
fnstenv
jg
inc
mov
mov
jg
push
sub
mov
aas
and
rcrl
push
inc
je
xchg
mov
add
cs
xor
fldcw
inc
call
pop
dec
add
popa
add
jbe
fnstcw
pop
jbe
mov
int3
leave
xchg
mov
push
outsl
mov
xchg
out
inc
ss
out
and
push
addr16
mov
lds
push
mull
sbb
bound
pushf
xchg
ja
dec
pushf
mov
call
fsubrl
pop
cwtl
mov
das
xor
shl
add
leave
out
jg
cmpsb
jecxz
outsb
cwtl
shr
cwtl
shrb
jbe
fld
push
push
xor
mov
pusha
mov
jmp
pop
ret
xor
mov
cwtl
fimull
jo
iret
ja
jne
add
add
ds
std
pop
add
push
cmp
out
ds
or
pop
aas
sti
jb
jbe
push
lcall
jns
xchg
jo
ficoms
push
and
sub
ljmp
inc
inc
mov
dec
ret
insl
mov
push
hlt
and
jns
aas
jmp
xchg
push
cmp
mov
lret
addb
push
test
xor
mov
dec
jecxz
fmull
cmp
lret
sub
imul
cwtl
pop
loop
stc
add
xchg
inc
pop
lea
mov
sbb
mov
ds
inc
inc
inc
push
pushf
test
mov
enter
test
mov
pop
cmp
pop
rcr
cmp
mov
subl
cmpsb
xor
pop
loopne
add
fcompl
or
dec
lcall
xor
xchg
arpl
out
sbb
in
cwtl
addl
xor
cli
dec
subb
add
js
clc
mov
mov
in
cmp
stos
push
push
jl
mov
adc
repnz
mov
push
lds
cld
mov
ffreep
mov
js
scas
je
ret
cld
test
in
xor
xor
and
stos
mov
push
or
push
mov
shll
cmp
sar
loop
ja
pop
es
fisubs
and
jge
mov
fdivrs
mov
mov
xchg
std
push
pop
mov
faddl
cmp
nop
shl
mov
loop
jge
loope
sbb
leave
push
mov
popf
in
sbb
mov
ret
fiaddl
sub
adc
sbb
subb
xlat
add
enter
add
fidivs
adc
lret
movl
jae
std
lods
lods
mov
ret
push
hlt
cmpsb
lods
sub
ja
mov
mov
dec
in
push
mov
sarb
mov
push
jo
inc
lcall
outsl
cmp
sbb
loop
push
or
pop
mov
dec
inc
cmpsb
test
adc
out
leave
pop
fsts
fucomip
fsts
cmp
mov
shr
and
ret
lods
jecxz
repz
scas
mov
rcrl
in
jbe
sub
stc
pop
mov
int3
or
flds
gs
pop
pop
cmp
pop
push
mov
pmaddwd
sbb
repz
or
fsts
icebp
test
xlat
push
jmp
fwait
nop
pop
sbb
into
cmp
cli
inc
int3
sbb
dec
ss
es
push
fnstenv
fxch
cs
pop
add
repz
pop
xchg
add
or
adc
or
cmp
push
mov
mov
mov
sub
adc
in
pushf
js
push
and
mov
mov
push
mov
push
lea
pop
mov
pop
pop
cmp
jmp
pop
inc
jmp
sub
xchg
jge
ret
push
dec
or
sti
xor
pop
sbb
jle
push
fimuls
pop
pop
cmp
sarl
in
push
lds
bound
out
and
mov
sbb
jge
addl
push
lods
iret
inc
sub
int
pop
pop
or
mov
lret
cmp
test
iret
xor
adc
mov
jno
or
or
jmp
push
lret
loopne
out
shlb
pop
in
out
insb
sbb
data16
add
sbb
lret
inc
adc
repnz
mov
les
rorl
xchg
popa
and
psllq
adc
ret
mov
rorb
sub
mov
subl
enter
sbb
jnp
aad
stos
push
imul
mov
push
lock
push
and
or
in
arpl
lods
call
xor
or
mov
lock
lods
ljmp
jge
jns
jecxz
push
mov
xor
mov
jp
lods
or
and
aas
jle
sbb
test
fildll
clc
or
mov
out
fcoms
adc
mov
iret
icebp
popf
push
xor
ret
dec
dec
popa
dec
data16
hlt
pop
inc
sbb
push
aas
sub
cwtl
cmp
rorl
test
push
jge
xchg
test
out
xlat
scas
xor
iret
adc
xchg
sbb
test
rcrl
xchg
fwait
int3
jnp
aam
std
pop
test
dec
bound
xchg
dec
inc
loop
push
es
sub
mov
xlat
test
int
mov
stos
dec
bound
aas
call
into
push
mov
in
mov
in
inc
fildll
dec
mov
sub
pop
jg
jg
pusha
xchg
imull
movsl
sub
mov
cmp
mov
movsl
pop
arpl
iret
push
imul
imul
rol
push
and
je
pop
sbb
xor
leave
xor
pop
pop
out
jecxz
ja
mov
or
inc
jle
or
mov
add
sub
pop
dec
lret
dec
lods
test
add
arpl
fimuls
cmc
fsubs
in
cmpsl
jae
es
cwtl
les
cmpsb
mov
cltd
add
or
fmulp
add
ret
mov
mov
mov
mov
pop
popa
out
dec
push
jne
mov
scas
inc
mov
hlt
pop
or
push
outsb
cmpsb
mov
pop
cmpsl
idiv
inc
out
adc
gs
mov
out
and
pop
daa
mov
jecxz
int
ja
ss
cmp
cmpsb
test
lret
fwait
jge
repnz
insb
cltd
xchg
pop
mov
jne
mov
or
xlat
xchg
movsb
insl
das
xor
repnz
in
mov
mov
mov
out
test
jge
pop
rcrl
or
add
add
in
mov
cmp
andl
in
cwtl
lock
xor
and
or
cli
mov
push
into
xor
mov
pop
inc
push
jecxz
push
inc
stos
sub
sahf
jl
push
inc
jnp
cmp
fdivrl
sbb
pop
adc
stos
aam
cmc
adc
inc
xor
mov
mov
xor
mov
outsb
fisubs
std
pop
xchg
aaa
mov
cld
cmp
push
mov
jae
lret
jbe
stos
jle,pt
js
cli
ljmp
stos
jmp
incb
add
xor
pop
push
or
push
sbb
add
xlat
mov
dec
fbld
adc
enter
hlt
cltd
sbb
ja
jecxz
mov
stc
xor
mov
mov
add
mov
movsb
ret
rorb
pop
push
popl
popa
outsb
sbb
cmpsb
mov
and
adc
out
insb
daa
test
out
lcall
cmp
dec
lock
loop
push
out
into
push
xchg
loope
xor
sbb
rol
inc
jne
scas
xchg
loope
jg
xor
in
mov
jg
aam
inc
imul
and
mov
sbb
inc
push
das
psubsb
sub
cmpsb
jnp
icebp
data16
psllw
cmp
in
in
sub
arpl
imul
mov
clc
fmull
add
loopne
push
shll
int
lahf
loopne
je
ja
xor
movsl
lahf
and
pushf
or
sub
jnp
ss
mov
loop
rorl
push
sbb
cmpsl
pop
hlt
adc
mov
lcall
sub
call
jbe
jp
icebp
gs
sarl
cmc
subl
loop
inc
fstl
sub
pop
loop
arpl
int3
sbb
je
inc
jl
les
enter
add
and
push
or
in
fistpll
sbb
lret
or
nop
xchg
mov
cmpsb
mov
imul
sub
cwtl
pop
lcall
xor
adc
dec
out
aad
icebp
lahf
les
or
sub
addl
mov
mov
andl
popa
daa
xor
insb
es
xchg
dec
inc
xchg
stos
nop
push
jg
jb
inc
repz
cmp
add
jo
sahf
cmp
jbe
mov
xchg
xchg
fwait
xchg
cs
sub
negb
mov
nop
rcll
pop
adc
dec
inc
pop
dec
pop
xchg
jge
pop
shlb
subl
jb
mov
adc
aas
and
aas
fiaddl
xor
popa
filds
cmpsl
inc
lea
in
or
mov
sbbl
call
pop
jne
jg
cld
shll
mov
cld
stos
xor
mov
dec
inc
mov
aas
and
imul
mov
movsb
jge
pop
xchg
dec
sbb
and
dec
cmp
or
xchg
mov
scas
fcomps
das
adc
push
arpl
rcrb
loopne
jns
js
or
leave
xlat
xor
push
push
ret
stos
sbb
arpl
rcrl
out
xorb
push
fistps
aas
and
inc
ds
pop
or
icebp
cmp
push
lea
ljmp
or
es
int3
pop
adc
inc
jb
jmp
or
pop
subl
aaa
adc
stos
ja
cmp
push
xchg
xchg
cmc
mov
sub
push
sub
fs
es
lock
sub
fstps
addr16
jmp
shl
mov
xchg
int3
je
call
sbb
mov
jmp
mov
push
xor
pop
jns
adc
sub
cmp
pop
jge
adc
leave
adc
jge
add
int3
mov
into
cvtpi2ps
pop
lahf
in
cmp
mov
cmp
std
pop
pop
push
lods
test
push
rcll
xorl
cmp
pushf
lret
mov
dec
dec
pop
clc
outsl
or
enter
and
mov
icebp
shll
scas
in
scas
push
fisttpl
sbb
scas
loope
in
mov
fs
stc
aam
cltd
and
adc
neg
xlat
in
xchg
xor
js
cmp
lea
xchg
mov
daa
push
js
shll
mov
cmp
pop
cmp
xor
mov
cmp
mov
add
xor
jmp
pop
fsubs
or
sub
jns
fsubl
add
xchg
mull
pop
xchg
sbb
or
loopne
aaa
iret
cwtl
les
sbb
mov
popa
xchg
mov
fistpl
add
inc
sbb
xchg
pop
div
mov
dec
adc
pop
sbb
xchg
lret
outsb
cs
ror
sub
xchg
jnp
cmp
in
mov
gs
xchg
outsl
movsb
push
dec
jle
bound
lock
sub
orl
fsubl
mov
xchg
mov
lods
loopne
inc
cltd
cli
outsb
repz
sbb
sub
int3
inc
push
mov
jno
outsb
into
dec
mov
aaa
leave
lahf
out
cmp
dec
adc
dec
cmpsl
popl
jb
or
out
adc
dec
pop
cmpl
subl
mov
inc
lea
xchg
pop
inc
pop
sub
mov
jg
fcomip
arpl
push
mov
pop
fsubrs
sub
sub
mov
adc
repz
addr16
add
pop
mov
shr
adc
or
mov
int
mov
repz
pop
leave
cli
inc
mov
inc
flds
xchg
ret
fldt
insb
filds
arpl
aas
mov
adc
pushf
sahf
movsl
fmuls
xor
or
icebp
mov
jl
cmp
nop
ja
out
dec
or
sub
icebp
cmp
jmp
adc
loop
xor
xchg
push
mov
mov
scas
xor
mov
ljmp
sub
sub
ret
loopne
div
fs
mov
int3
xor
add
imul
cmp
es
mov
ljmp
lock
aam
rorl
lods
and
and
mov
test
in
bound
xchg
pop
dec
data16
jnp
sub
pop
popf
pop
dec
movsb
push
gs
aaa
and
mov
lahf
mov
mov
and
and
movsb
stc
sub
es
inc
push
and
xor
mov
xchg
xchg
fsts
adc
xlat
and
mov
cmp
enter
out
push
notl
insl
adcl
in
nop
adc
cltd
pop
adc
add
and
pop
and
dec
pop
push
ficompl
pop
mov
sub
sti
xor
mov
push
mov
push
fstpl
rcll
dec
in
mov
lret
push
stc
adc
add
push
loope
push
dec
cmp
mov
hlt
mov
in
orb
and
pop
cli
adc
insl
cmp
out
test
dec
ss
insl
jno
inc
data16
push
dec
adc
aad
mov
pop
or
jl
rcrb
test
xchg
xlat
jp
in
cld
jo
ljmp
xor
sbb
aaa
imul
add
arpl
mov
outsb
hlt
xchg
popa
sarb
stos
xchg
leave
add
call
call
or
into
jg
dec
push
mov
dec
jae
lock
lahf
ret
lea
insb
mov
filds
add
inc
enter
cmp
jl
dec
xor
xor
xchg
mov
xor
mov
push
out
push
inc
or
rcr
add
dec
xchg
push
fsubl
cmp
jbe
popf
mov
xchg
shlb
xchg
xchg
in
ret
and
dec
mov
ret
cmp
xchg
je
xor
xlat
imul
ljmp
test
jno
insb
mov
clc
push
rol
jl
ret
or
imull
mov
loopne
mov
fmuls
test
pop
lods
jno
push
xor
or
sbb
sti
icebp
insb
jns
movsl
or
adc
push
push
loop
or
imul
ljmp
push
iret
sub
out
gs
jno
lret
sbbb
repz
adc
insb
mov
leave
fidivrl
mov
push
mov
push
or
loop
cmp
das
lahf
adc
test
inc
cli
cmp
xchg
sub
cmpl
sbb
xor
sbb
lock
in
nop
rclb
xor
out
dec
fs
test
push
je
push
jne
pop
add
paddq
stc
fbld
mov
jge
adc
icebp
mov
inc
pusha
je
mov
out
sub
ret
mov
jae
data16
adc
jle
xor
les
dec
popl
ljmp
xchg
sub
fstl
add
imul
in
ljmp
subl
xchg
test
add
pushf
and
dec
outsl
test
push
xchg
sub
out
fisubrl
push
or
and
xchg
cwtl
inc
pop
popaw
inc
adc
mov
into
insl
repnz
fmul
ret
and
inc
es
leave
lret
inc
sbb
ss
pop
in
movsl
push
imul
aaa
adc
nop
jp
mov
gs
jmp
sub
cmp
and
popf
and
in
push
lock
jnp
pop
and
cmp
push
loope
add
idiv
inc
sub
add
fs
in
into
dec
popf
xor
cmp
repz
dec
jnp
into
andb
jo
bound
mov
xor
popf
test
cmp
jns
pop
adc
push
push
mov
fldenv
test
and
aad
or
ret
popa
lret
stos
lret
sub
mov
pusha
test
notb
in
mov
sub
scas
nop
lock
cmp
push
adc
gs
pop
inc
fs
adc
insl
mov
aas
adc
dec
add
adc
sbb
add
dec
xor
xchg
cld
lcall
iret
sub
cmp
lcall
test
andb
and
sbb
jns
push
pop
push
jae
sub
mov
stos
xchg
mov
dec
or
sbb
jge
aaa
push
adc
lcall
sbb
and
xchg
dec
and
dec
arpl
mov
xor
adc
loop
or
add
sbb
inc
sbbb
bound
push
ss
cmpsb
xor
pop
clc
inc
insl
mov
xor
mov
inc
jae
inc
fadds
sbb
in
dec
xadd
imul
push
mov
and
arpl
inc
pop
adc
jbe
sub
std
test
js
pop
push
addr16
xor
mov
arpl
lods
aas
dec
je
lret
faddl
push
adc
aaa
lret
jae
ja
cmp
or
or
or
or
or
and
subl
ret
test
out
sbb
sub
sub
call
mov
jl
inc
and
xchg
fcoms
dec
jbe
add
lds
nop
cwtl
xor
push
stos
add
int
test
mov
scas
scas
movsl
jo
dec
out
dec
cmpsl
mov
cmc
dec
xchg
and
ret
inc
aad
adc
mov
jp,pn
ja
adc
mov
lods
fstps
lds
lock
fidivrl
sub
lea
xor
pop
test
inc
je
rdtsc
pop
insb
leave
call
idiv
adc
in
jge
leave
push
cmp
ds
cmp
lret
daa
ja
sub
and
sbb
movsb
and
jp
push
loop
and
push
insl
mov
mov
repnz
cmp
shr
inc
add
adc
mov
adc
jmp
add
scas
jge
inc
dec
jmp
sub
mov
jmp
test
movsb
out
das
cmp
inc
inc
gs
cmpsb
add
inc
mov
shll
mov
cmpsl
dec
pop
shrb
mov
mov
out
test
cld
imul
pusha
lret
mov
js
xchg
jno
jecxz
pminsw
into
in
data16
add
sub
ljmp
imul
sbb
jnp
add
test
jmp
call
insb
xor
jns
stos
clc
in
inc
popa
loopne
out
lods
adc
test
popf
or
fcomps
lahf
inc
mov
mov
jb
adcl
mov
lods
push
imull
jne
xchg
sbb
push
mov
or
faddl
cmpsb
mov
les
loop
sub
and
cmp
leave
pop
iret
loop
imul
add
mov
int
inc
arpl
dec
adc
stos
lock
and
xchg
pop
xor
jg
pop
push
insb
rcrl
push
loopne
bound
fnsave
push
mov
mov
xor
pushf
mov
sbb
movsl
rcrb
leave
and
and
daa
cld
loope
inc
add
jle
cmp
mov
dec
mov
loope
lahf
icebp
scas
jns
mulb
fwait
mull
inc
pop
sub
les
mov
iret
xchg
lods
dec
ret
pop
adc
mov
out
fldcw
jmp
addr16
std
jmp
inc
pop
fisubl
jae
test
adc
jl
sarb
sub
mov
push
and
adc
lret
idivl
mov
and
push
or
mov
mov
and
or
ret
lret
push
pop
test
mov
cli
das
and
xor
jns
pop
jnp
lods
into
pop
push
jg
shlb
and
dec
push
lcall
pop
xchg
pop
cltd
vshufps
lea
jecxz
repz
sbb
inc
iret
test
jns
sub
pop
ljmp
imul
sub
ds
inc
dec
enter
cs
inc
shll
mov
adc
ret
fstp
push
xor
imul
iret
nop
inc
movsb
icebp
dec
sarl
hlt
pusha
imul
bound
dec
icebp
sbb
or
mov
cmpsb
arpl
movsl
push
jmp
push
shlb
call
xchg
test
sti
cwtl
add
sub
xchg
jo
dec
mov
add
push
mov
inc
stos
jo
fsubrs
mov
imul
jg
cmp
push
cmp
adc
fimull
outsl
out
out
cwtl
call
sub
xchg
cmp
lcall
fmulp
jns
and
mov
mov
enter
pop
push
and
popa
jg
ljmp
pop
ret
or
add
dec
dec
repz
lahf
fstl
cmp
add
cmp
add
push
mull
xchg
andb
add
ds
lcall
imul
xchg
call
notl
daa
dec
pop
xor
push
jnp
arpl
mov
sbb
xchg
xchg
add
nop
sahf
popf
adcl
dec
push
hlt
ja
pop
roll
sub
jnp
pop
jo
inc
fs
cmpsb
insl
push
cwtl
jp
loopne
dec
fldcw
ficomps
scas
add
jbe
or
lcall
adc
ja
sbb
mov
mov
pop
mov
or
jne
out
loop
mov
xchg
and
pop
mov
push
aam
addb
popa
lret
sbbl
pusha
mov
jp
mov
cmp
push
fwait
sub
call
dec
cmp
popl
repnz
inc
cmp
xrelease
jg
adc
filds
push
cs
ret
xor
in
add
adc
xchg
cmp
mov
data16
or
popa
cs
shlb
add
rcrb
or
ret
out
sti
cwtl
stos
in
mov
push
sbb
mov
xchg
xor
push
ss
mov
sbb
arpl
sbb
push
aad
imul
lret
mov
push
std
adc
arpl
arpl
shlb
mov
int
subl
lahf
or
inc
in
push
gs
lock
xor
dec
add
test
jno
jb
sbb
pop
inc
inc
sar
loopne
mov
cmp
xor
add
cmpsl
out
notl
adc
sub
jp
xchg
lcall
les
or
cmpsl
jns
inc
jb
mov
testl
jne
lret
sbb
push
movsl
fcomp
cmpl
cmc
test
loope
dec
mov
push
lcall
ja
inc
cmp
sarb
popf
popf
jne
adc
push
mov
or
and
pop
jne
add
xor
insb
xchg
mov
mov
cwtl
mov
push
imul
outsb
cmp
push
jno
mov
mov
lret
rol
and
sarl
sub
ljmp
sub
ljmp
lock
sbb
cwtl
out
sub
inc
imul
xchg
es
mov
and
nop
dec
test
push
adc
fistl
insb
jne
pushf
mov
mov
mov
ljmp
xchg
in
sbb
int3
les
push
or
adc
shlb
jecxz
inc
daa
push
pop
fistps
push
subb
dec
or
cs
rorl
jae
mov
ds
shlb
xlat
bound
mov
je
dec
shrl
popf
negb
xchg
mov
jp
push
sub
sti
nop
pop
xchg
add
xchg
adc
movsl
and
or
push
out
cmp
pop
jnp
cmp
and
or
cmp
sbbb
xor
or
xchg
repz
test
cmp
mov
imul
enter
lret
lcall
ret
in
push
imul
outsb
scas
jmp
mov
mov
call
rcr
mov
sub
sti
mov
xchg
rcrb
arpl
sbb
sbb
ror
sub
lahf
pop
xor
es
clc
mov
mov
jg
jp
jae
push
cs
mov
std
aaa
dec
dec
jo
pop
aam
sbb
stos
jge
lret
call
push
adc
cld
das
jnp
inc
loop
imul
loope
hlt
repnz
insb
inc
inc
mov
loopne
cmpsb
lret
les
and
inc
fmuls
push
xchg
lods
mov
adc
push
rclb
adc
adc
lret
cs
scas
xor
cmc
sbb
shll
in
xchg
mov
add
bnd
scas
jl
and
lret
pushf
pusha
out
scas
repz
and
sub
daa
out
pop
jmp
shrb
mov
jnp
mul
sbb
and
dec
jnp
testl
stc
add
pop
push
addr16
pop
and
fimuls
dec
mov
sbb
mov
into
fildll
mov
mov
xor
fsqrt
inc
xchg
sarl
int3
xor
inc
mov
ljmp
imull
jge
push
mov
inc
mov
mov
add
mov
jg
xor
outsl
repz
push
imull
mov
adc
sbb
and
xchg
or
or
nop
or
out
fcoms
stos
pushf
aas
pushf
pop
ja
rcrl
push
push
jae
and
mov
rcr
inc
add
mov
in
test
push
xchg
scas
xchg
fucomp
cmp
pop
fldcw
sub
xchg
mov
and
idivl
mov
jbe
xor
pop
jnp
push
lret
sub
dec
push
lcall
cli
lods
adc
mov
mov
out
das
rclb
mov
scas
icebp
push
jne
mov
aad
int
fstpl
dec
fnstsw
push
loop
and
fbld
push
push
sbb
fidivrl
jne
or
rcl
repnz
push
psubsb
mov
adc
jbe
loopne
or
add
scas
mov
into
cld
mov
sub
in
sbb
inc
xchg
sbb
loope
xor
mov
enter
in
icebp
and
mov
ret
cwtl
ja
je
lods
adc
mov
jne
cs
call
ja
mov
rcrb
or
test
rcrb
lret
mov
xchg
lds
adc
jnp
sub
fisubl
loope
mov
jb
cmpsb
cmc
fwait
add
adc
out
cltd
inc
adc
scas
xor
lret
movl
pop
and
test
repz
dec
lods
add
jns
add
dec
xchg
mov
or
jns
xchg
dec
inc
cmpsl
das
inc
adc
add
mov
inc
aaa
xchg
sub
add
add
or
sub
xor
pop
fdivrs
sbb
dec
int
pop
xchg
outsl
add
xchg
nop
cmpsb
iret
ret
fbstp
jb
js
gs
in
ja
adc
pop
dec
jecxz
es
sub
imull
lds
out
mov
mov
push
or
adc
or
sahf
arpl
inc
pop
je
int3
movsb
push
xor
jecxz
test
aaa
sub
xchg
and
out
cli
mov
scas
les
mov
divb
stos
movl
in
mov
aas
sbb
sbb
mov
lcall
pushf
xor
mov
sbb
das
ss
cmpl
mov
stc
mov
push
and
xor
in
mov
jle
mov
or
loopne
outsl
js
jl
dec
aas
insl
xor
jnp
pop
mov
pop
testb
mov
popf
popf
cmp
cwtl
or
mov
shrb
and
adc
and
sbb
xchg
xor
test
cli
addl
xchg
or
jl
ret
xchg
and
fiadds
mov
inc
fucom
stc
int
pusha
dec
test
adc
stos
palignr
outsl
leave
sbbb
pushf
mov
pusha
mov
test
adc
xchg
cld
insb
nop
std
in
fstps
scas
inc
enter
xchg
push
jae
movsb
cmp
add
pop
inc
lret
ret
stos
mov
add
ds
dec
ret
jl
dec
add
notl
push
adc
aas
dec
aam
mov
mov
mov
rcll
lods
scas
inc
into
jge
jg
or
mov
or
cmp
jl
jnp
lcall
cs
sub
cwtl
pop
push
out
popa
leave
mov
rolb
clc
out
pop
stos
or
and
sub
inc
push
outsl
bound
dec
xchg
das
jae
dec
idivb
cmp
cmp
pop
xchg
test
gs
out
pusha
or
sub
cmpb
mov
mov
add
mov
add
sub
mov
push
inc
int
lret
mov
test
das
int3
out
lods
sub
xchg
pop
loope
and
call
icebp
adc
cmpsl
arpl
jle
inc
and
test
xchg
mov
xor
popf
or
clc
pushf
xchg
xchg
jno
jmp
mov
scas
dec
lock
adc
cmp
insl
mov
test
mov
jp
stos
sbb
push
mov
test
push
push
loope
pop
mov
les
adc
mov
in
les
sarl
jge
jl
xchg
js
add
ljmp
aas
push
cltd
movb
sbb
fcompl
cmp
dec
stos
aaa
test
xor
aam
sarb
mov
test
add
adc
jae
add
jmp
xchg
cmpsl
xor
call
hlt
lret
pop
mov
push
push
pop
mov
stc
ja
ja
add
aas
mov
insl
pushf
mov
cld
adc
pop
imul
add
push
orl
mov
adc
inc
mov
jbe
icebp
mov
sbb
push
lret
test
aad
mov
and
cmp
pushf
aas
inc
test
jns
pop
aas
pop
jmp
in
aas
inc
push
and
lcall
mov
push
or
mov
inc
or
sub
dec
cmc
popa
dec
stos
lods
mov
sbb
cmp
ja
adc
into
add
xor
int3
add
xchg
mov
adcl
lock
ljmp
add
movsl
jmp
adc
pop
push
leave
mov
mov
sbb
xor
testl
enter
lods
mov
mov
lret
and
and
inc
jb
inc
push
lahf
test
cmp
push
add
mov
lds
out
sbb
mov
jne
pop
ljmp
push
add
cmp
roll
mov
sbb
and
hlt
or
adc
cmc
inc
loopne
push
jne
fildl
addb
insl
jmp
gs
push
aas
sahf
adc
ret
and
aam
dec
maxps
movsb
jne
or
sbbl
outsl
gs
sub
mov
outsl
mov
mov
cli
mov
fcmovnb
fldcw
or
push
push
loopne
pop
gs
call
xor
push
aaa
push
repnz
shlb
push
mov
es
out
inc
out
dec
aas
shrl
addb
jle
inc
out
jae
xchg
enter
dec
xchg
pop
es
jp
xchg
arpl
icebp
cmpsb
dec
das
lods
fcoml
mov
add
mov
adc
mov
or
mov
adc
shlb
push
leave
mov
xor
idivb
mov
fs
xchg
jp
lds
sbb
loopne
scas
push
rclb
lds
negl
xchg
mov
dec
decb
in
sub
das
jle
and
les
notb
enter
lahf
clc
jge
addr16
insb
mov
aaa
mov
lcall
and
ds
xchg
stos
imul
mov
icebp
xor
xchg
pop
mov
jno
cmpsb
lahf
xchg
push
inc
mov
mov
mov
sbb
xchg
call
mov
mov
mov
jnp
fistps
fdivrl
insl
outsl
out
pop
lret
lcall
icebp
pop
push
repz
mov
xchg
jo
or
sbb
sbbl
imul
lods
ret
mov
mov
int
inc
xchg
cli
add
int3
mov
xchg
sbb
test
jle
xchg
movsl
cli
dec
and
push
mov
and
je
cltd
and
fwait
insl
mov
fsubrp
pushf
cmpsl
and
mov
pusha
jecxz
ficoml
xchg
mov
xchg
mov
inc
ds
adc
xor
clc
xorb
fldt
cmc
stos
imul
pop
rorl
int
lock
and
lret
mov
add
push
sub
loope
cltd
cltd
xchg
aas
cmp
dec
in
push
xchg
lss
dec
and
scas
add
push
arpl
xchg
out
inc
mov
fistpl
jne
out
lds
push
and
or
and
dec
mov
daa
and
js
push
inc
lock
sbb
movsl
shll
xchg
inc
in
mov
addr16
xor
lcall
ljmp
push
inc
movsl
dec
stos
push
movsb
inc
ret
lds
push
pop
fstl
inc
xlat
shlb
nop
add
mov
jle
or
dec
jle
inc
and
aam
adc
fldt
adc
sti
rcrb
pop
ficompl
push
aam
mov
cmp
stc
push
mov
push
pop
sub
ljmp
incl
mov
cmp
aaa
sub
ror
inc
lret
pop
dec
movsl
jno
sub
pushw
es
fsubr
or
jae
pushaw
lods
push
ret
push
cmp
mov
mov
and
pop
ficompl
cmp
ret
pushf
test
cmp
mov
gs
cmpsl
mul
adc
sti
ds
fs
in
mov
jo
les
xchg
arpl
test
jno
jbe
sahf
imul
dec
sbb
dec
lcall
or
dec
fisttps
loopne
jmp
jle
mov
fbstp
scas
movsb
sbb
adc
iret
cmpsl
inc
int3
int3
sub
push
jns
mov
inc
mov
sub
movsl
out
jecxz
xchg
pusha
lcall
xchg
std
inc
in
das
adc
inc
outsl
cld
pop
rcrl
fcompl
incb
sbb
mov
fnstcw
jae
add
or
jle
sbb
mov
inc
inc
or
xchg
insb
sahf
imul
shlb
or
mov
dec
movsl
push
jns
lds
pop
jl
push
fdivrs
popl
mov
scas
sbb
xchg
daa
adc
nop
movsb
rorb
sbb
push
pop
adc
jmp
sbb
imull
or
rcll
and
sbb
push
fnsave
repnz
inc
jbe
in
fs
sbbl
in
repz
mov
cld
cli
popf
cmpsb
inc
idivl
cwtl
lcall
movsb
cmp
aam
push
mov
sub
into
sarb
or
add
cmp
sbb
aad
push
mov
aad
dec
gs
jecxz
sub
jns
pop
jbe
sub
icebp
sub
repz
imul
sbb
jp
dec
loopne
xor
out
xor
jbe
sbb
adc
insl
fnstsw
push
xor
int
dec
sub
movaps
js
mov
insb
repnz
push
es
cmp
fsubs
mov
rolb
stos
mov
push
aam
dec
popf
sub
jmp
push
les
les
gs
dec
jmp
lea
adc
jg
push
idivl
xor
sbb
push
sub
add
dec
xchg
addr16
dec
sub
lcall
sbb
or
cli
stos
pop
inc
mov
in
mov
xchg
pushf
inc
rcll
inc
sahf
xchg
cltd
and
xor
cmc
mov
iret
sbb
shlb
shlb
stc
xchg
jl
lock
test
stos
adc
bound
daa
mov
or
jno
xor
mov
adc
int
jnp
push
inc
dec
ja
setne
arpl
cmp
call
ljmp
rclb
dec
sub
push
add
adc
xchg
call
cltd
shll
dec
lods
sbb
fwait
cmp
clc
mov
call
pop
pop
pop
jnp
vunpckhps
or
loopne
mov
inc
push
and
mov
jp
inc
xor
stos
mov
in
sbb
rolb
imul
cwtl
mov
push
stos
fldl
popf
inc
lret
test
push
filds
enter
mov
js
xchg
into
js
dec
jl
testl
push
xchg
push
enter
popl
mov
push
arpl
ret
rorl
call
dec
push
fmull
in
sahf
add
jp
filds
leave
in
in
mov
loop
cli
dec
lret
jb
dec
adc
cli
in
sbbb
vpsubusb
call
aas
outsl
jnp
arpl
mov
mov
xchg
jp
xor
idiv
push
movsl
test
mov
loope
mov
mov
pop
dec
mov
arpl
mov
sbb
adc
add
sti
mov
adc
out
and
mov
pop
ja
sbb
sbb
sub
and
jle
std
pop
jne
xchg
jae
cmp
pusha
cs
lods
in
cmp
aad
sub
cmpsb
jmp
das
mov
and
sbb
leave
xor
vandnps
adc
andb
shll
mulb
ror
mov
fnstsw
mov
sbb
outsb
icebp
sub
adc
xor
into
xor
xchg
inc
lret
add
mov
and
mov
pusha
insl
mov
cmp
jb
mov
fadds
repz
jle
pop
ds
xchg
push
cs
jne
jae
mov
data16
inc
or
jge,pt
cmp
sub
ret
idivl
and
inc
mov
pop
xchg
fcoms
rclb
outsl
aas
shrd
and
call
push
xchg
push
movsb
test
xor
test
sub
ror
sub
push
xchg
fimull
test
stc
push
xor
cmp
sub
jecxz
test
xor
dec
in
jmp
loop
out
mov
push
cwtl
jno
inc
out
notb
mov
ret
adc
hlt
sub
popf
mov
mov
rcl
call
shr
orb
mov
cmp
test
xchg
mov
or
mov
sub
sbb
sahf
jnp
call
cmp
jb
xor
dec
scas
in
cltd
push
xchg
out
pop
idivb
push
sub
jp
cmp
mov
ja
pop
nop
jl
jb
scas
jne
cmc
sub
inc
hlt
std
mov
xchg
sbb
inc
mov
outsb
jmp
outsl
pop
inc
add
add
push
mov
adc
loope
add
shl
aaa
loope
or
jb
and
out
add
inc
mov
fnstcw
cmp
sub
jo
shl
movsl
push
mov
mov
daa
mov
outsb
adc
fmul
add
jecxz
xor
cltd
xor
pop
push
and
outsb
push
or
pusha
sub
je
lock
dec
shl
and
sbb
mov
adc
repz
popa
mov
fiaddl
lcall
scas
aaa
les
inc
and
rorl
mov
pop
pop
inc
mov
or
cmpsl
lret
aad
fisubrl
adc
not
or
insb
jmp
inc
lahf
mov
out
outsb
int
inc
std
cmp
inc
mov
push
jle
jae
sbb
fstps
daa
push
insl
sub
subl
mov
jg
loopne
xchg
or
sti
je
mov
cwtl
inc
pop
rorl
cmp
sub
lcall
aas
adc
sbb
shr
inc
imul
jp
dec
adc
out
insl
repnz
je
fidivrl
sub
add
xor
xchg
int
inc
inc
cmc
or
divb
or
jbe
xor
ror
push
push
fdivr
sub
fstpt
lea
jb
fiaddl
mov
movups
iret
outsl
dec
push
rcr
loopne
mov
pop
mov
aam
push
cmp
xchg
xor
mov
daa
or
aam
iret
insl
div
and
ljmp
push
mov
push
pop
sbbl
lods
cltd
cmc
or
imul
hlt
sahf
jns
xchg
ficoms
inc
jb
rclb
out
mov
ljmp
cmc
enter
sti
out
or
fsubr
jg
adc
inc
pop
jmp
sbb
aaa
enter
cmp
jo
bound
cwtl
out
push
and
adc
cmp
aad
mov
jge
aam
fdivl
sarb
sub
sub
aas
add
jns
maxps
push
push
lret
imul
or
inc
lcall
inc
or
mov
andb
xchg
ds
jmp
mov
lods
mov
adc
addr16
adc
xchg
fdivr
out
and
inc
aad
xorb
sbb
or
and
lcall
lret
cmc
xor
arpl
add
daa
mov
rolb
mul
mov
or
jns
sahf
push
mov
sti
cld
mov
xor
and
xchg
out
xor
adc
call
pop
aas
aad
mov
jmp
xchg
add
cwtl
push
xchg
push
gs
fwait
movsb
mov
pop
int3
xchg
enter
mov
mov
int3
inc
push
int3
jne
outsb
and
cli
mov
push
in
leave
sahf
mov
jge
es
sbb
fildll
hlt
aad
inc
scas
jmp
dec
adc
jmp
adcb
add
sbb
cmpsl
ret
sahf
aam
mov
sub
jne
jp
and
xlat
ret
pop
bound
fsts
jno
fsubrs
ffree
std
loope
xchg
decl
rol
jp
fnstcw
out
push
jae
xchg
stos
mov
or
pop
cmpl
pop
inc
cmp
inc
inc
sar
mov
mov
or
mov
mov
inc
dec
fs
push
pusha
es
aas
dec
jmp
jnp
test
or
mov
mov
dec
cmp
andb
sub
in
les
fcoml
mov
inc
test
jbe
jle
xchg
push
xor
clc
pop
cli
pcmpgtw
fnstenv
dec
fwait
or
pop
loopne
pushf
and
xlat
or
push
popl
mov
aaa
imul
mov
cmpsl
jl
stos
mov
push
jb
cwtl
dec
jl
jbe
cmc
xor
and
inc
add
lock
mov
sar
fistpll
inc
fnstenv
xor
xchg
aaa
sbb
aaa
xchg
fisttps
or
mov
xchg
inc
dec
cmp
dec
pop
jmp
adc
adc
and
shl
mov
xor
hlt
je
jne
pop
xchg
push
sbb
add
lret
out
pop
jl
out
mov
jns
rolb
bound
push
jae
mov
mov
mov
xor
mov
push
pop
aad
lea
adc
sbb
sub
out
in
jmp
cmp
subl
int
or
cmp
outsb
mov
mov
lcall
jge
aaa
pushf
mov
ret
cs
jle
sbb
je
sbb
mov
test
aad
xor
in
lret
jne
pushf
loop
mov
mov
cmp
nop
bound
enter
in
enter
loopne
call
lods
stos
inc
test
gs
push
ljmp
push
add
andb
loop
sub
ljmp
lea
fnstcw
lcall
jecxz
imull
cmp
rcr
dec
pop
or
fmull
and
imull
inc
rol
inc
roll
inc
loopnew
push
int
mov
out
imul
xchg
loopne
movsb
mov
std
jl
fs
mov
or
adc
stc
ja
mov
arpl
inc
pop
jo
mov
xor
test
xor
imul
out
jp
jae
or
popa
out
jnp
dec
ja
outsl
mov
push
std
xor
push
nop
xchg
xor
mov
sbb
sub
test
or
add
xchg
subb
sbb
shlb
adc
sub
cli
adc
addr16
lret
fwait
jns
jle
sti
jns
in
mov
popa
aam
sbb
aad
repz
mov
inc
aam
add
sub
into
add
mov
push
pop
push
inc
lea
inc
mov
das
repz
pop
mov
and
rcrb
xchg
orb
mov
iret
dec
mov
cli
jle
fwait
mov
mov
in
pmulhuw
mov
es
mov
sbb
sub
movsl
mov
dec
mov
pop
mull
loop
popa
gs
popf
repnz
xor
dec
out
scas
jnp
mov
xorb
pop
repnz
arpl
pusha
test
xor
push
nop
popa
testl
push
dec
and
xchg
repnz
add
daa
and
iret
xor
or
dec
pop
pop
mov
pop
inc
pop
sub
ljmp
mov
cmc
xlat
lret
mov
repz
mov
mov
cwtl
lret
fists
je
jo
into
sbb
cwtl
mov
lsl
push
mov
push
mov
inc
arpl
cltd
pushf
mov
adc
and
dec
scas
or
push
in
pop
dec
push
ss
xchg
ss
cs
js
je
rcrl
sub
xchg
fcompl
cs
push
les
testl
adc
dec
mov
pop
mov
xchg
mov
mov
adc
test
imul
idivl
mov
in
shrb
hlt
push
stos
jnp
and
jae
add
cmc
int
or
xor
stc
add
push
cmp
push
mov
arpl
outsb
loope
jle
add
fsub
cld
mov
cmp
pop
sub
outsb
pop
roll
and
jne
popf
lods
out
adc
movsl
imul
out
cmp
cmp
into
pop
stos
cmp
gs
movsb
mov
adc
pop
jae
daa
xor
jae
mov
push
dec
test
dec
jne
add
inc
movsl
sarb
inc
aam
test
incl
sub
or
lret
mov
add
clc
js
inc
pop
fisubrl
iret
or
mov
shll
adc
or
pushf
subl
pop
es
ss
mov
mov
ret
ja
je
shll
pop
dec
dec
sti
pop
push
rclb
in
pop
dec
clc
and
rcrl
mov
fwait
push
and
cmp
shll
andb
and
lea
in
mov
cmpsb
mov
xor
les
sbb
pop
pop
and
push
cmp
xchg
stos
out
dec
sub
mov
inc
cmp
mov
cwtl
sahf
sub
xor
push
cmc
pop
test
mov
fmull
cli
push
aad
or
ficoml
mov
jb
inc
fdivr
inc
mov
test
jp
and
out
jg
push
push
mov
sbb
dec
cmp
dec
mov
mov
inc
out
inc
test
loop
mov
sub
mov
and
test
dec
mov
aaa
hlt
sarb
hlt
and
in
sbb
ja
iret
mov
repnz
lret
sub
out
xchg
stos
push
xchg
cmpsb
pop
scas
sub
xchg
aaa
fists
subb
adc
jp
jmp
jecxz
and
push
rcr
fucomip
das
inc
sub
pop
inc
sub
pop
lds
xchg
inc
sarb
xchg
cld
cmp
cmp
addr16
ja
je
add
xchg
push
fdivl
aaa
push
xchg
imul
sbb
ret
mov
mov
and
or
sar
lcall
imul
push
mov
testb
push
andb
ljmp
push
fmuls
popa
adc
gs
push
shlb
popf
dec
pop
cmp
loope
xor
fstp
adc
fnsave
sub
jmp
int
jae
int3
sbb
andl
inc
fisttps
ss
lcall
fistps
push
pop
mov
xchg
cltd
data16
lahf
inc
push
pop
sbb
testl
dec
les
mov
lcall
dec
xchg
inc
push
xchg
test
xchg
in
add
mov
gs
add
xchg
push
fidivl
adc
jmp
sbb
dec
data16
jno
jmp
lds
ds
lods
dec
or
sarb
adc
psubd
mov
or
cwtl
cltd
jnp
imul
mov
dec
xchg
rcrb
jbe
or
xchg
leave
call
mov
sbb
je
and
and
jl
repz
lods
jge
sbb
insb
into
push
cwtl
push
shrb
test
lcall
adc
push
mov
in
fs
test
jp
sub
sub
xor
push
push
and
int
xchg
adc
sub
inc
cmp
cs
sub
adc
dec
sbb
lods
inc
arpl
sar
sti
add
xchg
inc
mov
int3
hlt
sbb
nop
enter
aam
cwtl
jae
std
pop
pop
dec
movsb
sahf
add
int
scas
outsb
pop
pop
jno
dec
scas
dec
inc
mov
jae
std
sbb
aaa
popa
jns
cmpsl
pop
xchg
out
out
mov
into
mov
int
pop
scas
push
add
cmpsb
icebp
xorl
or
stos
hlt
xchg
jae
pop
pop
int
mov
lods
ja
sbb
loope
ud0
pop
pop
xchg
idiv
fstpl
clc
adc
sub
out
imul
mov
mov
jbe
add
fs
cli
xchg
xor
lds
push
dec
ljmp
mov
adc
ljmp
add
fistl
sbb
xchg
mov
bound
or
mov
add
in
jnp
cltd
sub
cmp
jno
xchg
shlb
mov
jge
inc
rcll
xor
push
insb
loop
or
dec
inc
jo
xor
xchg
setg
cli
xchg
adc
mov
jne
or
and
mov
sbb
add
sbb
lods
inc
bound
fs
cmp
test
lahf
pop
dec
outsb
rorl
aas
gs
mov
dec
stc
loope
pop
adc
mov
sub
icebp
jp
xchg
lods
lock
pusha
mov
mov
push
inc
fdivl
push
sbb
rcrb
idivb
mov
mov
jecxz
push
pop
repz
adc
adc
jno
mov
or
adc
aam
aaa
cli
pop
out
xchg
xor
inc
test
iret
jecxz
popa
cwtl
pop
xchg
into
sub
das
xchg
lods
icebp
add
mov
cli
insb
hlt
andb
lcall
movsl
test
lcall
out
insl
test
pop
aas
stc
mov
and
or
scas
hlt
cmpsl
mov
mov
in
fidivl
movsb
adc
push
mov
cmc
scas
inc
sub
clc
repnz
mov
inc
xor
mov
pop
lods
imul
lds
adc
inc
fiadds
jns
cmp
aam
push
mov
fwait
inc
xchg
lahf
loopne
jb
add
imul
mov
or
incb
mov
mov
mov
hlt
mov
imul
cmp
lds
inc
aaa
call
sub
mov
and
lods
adc
mov
sub
enter
sub
xchg
xor
adc
dec
sub
push
leave
jle
add
clc
shlb
nop
cmpsl
in
jo
pop
movsb
lret
lcall
mov
xchg
adc
shrl
mov
fdivs
push
gs
xchg
dec
mov
cwtl
inc
jnp
nop
jmp
movsb
sub
pop
push
lret
dec
ret
add
pop
dec
cltd
popf
and
js
xor
add
dec
mov
fldt
push
sarb
insl
sub
lea
fidivl
rcl
in
mov
in
movsl
in
movsb
call
dec
sbb
nop
mov
pop
lcall
test
je
nop
xchg
cmc
dec
fidivl
inc
dec
daa
rdpmc
sbb
cmp
mov
add
xchg
in
lret
iret
adc
movl
fwait
mov
mov
repnz
cmp
clc
pop
inc
jmp
popa
adc
pop
add
sbb
pop
pop
xor
or
stos
cmpsb
fwait
cltd
dec
test
ret
dec
adc
andb
jp
fidivrs
mov
loope
push
sbb
inc
in
lea
jb,pn
popf
mov
inc
aas
inc
lds
cld
nop
and
pop
lock
xlat
fdivrl
scas
into
xchg
lods
imul
pop
xor
daa
scas
pop
scas
jo
adc
mov
cltd
mov
stos
addr16
adc
je
fs
jb
lock
sbb
mov
sub
mull
lcall
xlat
out
add
fs
xlat
xor
add
stc
rcrl
push
inc
xor
mov
inc
nop
xchg
inc
cmp
pop
and
ss
cmp
popf
mov
add
sqrtps
lods
imul
xor
ret
adc
popf
int
insb
mov
js
cmpsb
movsl
jge
cmp
enter
and
mov
pop
inc
call
adc
xor
xchg
cli
cmpsl
mov
ds
or
fcmove
popa
pusha
stc
cmp
sub
sub
test
std
push
mov
sub
das
int
test
jb
and
aaa
adc
pop
pop
ret
enter
dec
add
lcall
xchg
lcall
data16
sbb
mov
int3
test
jne
gs
enter
leave
add
sbb
negl
fsubrl
popf
push
fsubrl
lea
mov
cmp
sub
and
data16
orb
xor
sbb
sub
jmp
popa
adc
add
mov
nop
adc
mov
nop
leave
mov
scas
jp
cmp
jmp
push
inc
lods
pusha
jecxz
add
sub
cmp
mov
repz
push
orl
test
lret
add
cwtl
mov
cmp
jmp
ret
pop
cli
fldcw
pop
mov
mov
mov
sub
add
in
cmc
mov
xor
cmp
pop
xchg
sub
pusha
adc
add
cld
cmpsb
imul
sahf
lds
inc
add
mov
sub
les
inc
je
repnz
mov
dec
addr16
or
popf
loopne
pop
push
popf
mov
mov
push
loope
rcrb
sub
sbb
mov
je
dec
or
movl
mov
rcrb
ret
out
mov
in
imul
mov
add
jmp
ds
rolb
daa
cmc
inc
int3
jne
daa
aas
and
addb
addb
shll
cmp
pusha
jmp
add
or
iret
sbb
rcl
ss
out
out
jge
add
jge
adc
pop
sbb
scas
pop
rcll
fcomi
test
bound
jo
subl
cmp
mov
aad
sbb
fwait
inc
fidivs
sarb
mov
jge
lods
jns
jl
or
hlt
xchg
insl
xor
jg
mov
xchg
sarl
dec
inc
gs
in
movsl
xor
dec
cmpsb
push
ljmp
lcall
cmp
sahf
and
sub
inc
lods
sti
xchg
mov
out
roll
mov
sbbb
enter
xchg
or
pop
jae
out
xchg
xchg
pop
in
addr16
test
es
xor
dec
mov
and
xchg
lahf
push
inc
movsl
dec
jecxz
shlb
jno
and
repnz
ja
cmc
and
jo
sub
push
jge
xchg
fnstenv
xchg
lcall
jns
out
sti
shlb
sarl
inc
pop
call
adc
in
jae
pop
xlat
orb
inc
popf
mov
gs
and
pop
in
jbe
jnp
bound
js
xchg
scas
sarb
adc
xlat
mov
pushf
sar
xor
ss
mov
dec
cmpsl
mov
jnp
sub
pop
mov
push
outsb
lret
dec
cmp
sar
sbb
pop
sbbb
in
sarl
rcrb
lock
jb
pop
icebp
icebp
jg
push
xchg
add
adc
pop
hlt
adc
leave
lods
pop
xchg
lods
lea
mov
mov
testl
or
movsl
pop
les
cmpsl
xchg
jne
mov
cmp
pop
stos
fwait
ss
mov
ss
inc
cs
jne
inc
loopne
mov
and
cmp
pushf
adc
data16
in
ja
in
mov
add
jne
mov
sbb
cli
shrb
jg
inc
sbb
shl
cmpl
sbb
xor
insl
jbe
out
dec
mov
loop
call
lea
sahf
push
dec
jno
cwtl
repz
into
add
mov
repnz
cmpl
in
jbe
pop
icebp
inc
xchg
and
lret
xchg
jo
adc
lods
aaa
pop
nop
leave
xor
out
lea
add
xchg
inc
inc
mov
cmp
lret
sbb
mov
ss
or
inc
dec
cld
ret
dec
test
call
stos
mov
xchg
push
cmpsl
push
cmp
add
in
or
dec
add
imul
sahf
mov
mov
mov
stos
xor
fwait
stos
push
pop
pop
nop
loop
daa
inc
mov
ret
cltd
and
sub
ljmp
addr16
adc
mov
sub
out
push
insb
cli
push
xchg
imul
jle
push
dec
or
pop
cli
jae
jle
cli
cmp
push
mov
cmpsl
repz
frstpm(287
cmp
out
xchg
js
idivb
jnp
inc
and
arpl
jle
mov
neg
out
nop
push
movsl
add
negb
pop
inc
jmp
xchg
out
popa
sbb
jl
push
mov
adc
nop
stos
sub
cs
xor
xor
pop
or
and
je
cmpsb
sti
cwtl
addr16
mov
jno
inc
lock
jmp
sbb
sbb
ljmp
jns
mov
shll
xchg
cmp
arpl
jle
adc
pop
in
xor
imul
hlt
cwtl
cwtl
sub
mov
dec
fidivl
lds
sub
or
ds
or
push
or
std
xor
xorb
rolb
cld
xchg
test
loope
jge
xchg
xchg
xor
adc
ret
xchg
popa
dec
dec
addr16
aaa
mov
sub
out
je
pop
mov
cli
push
inc
and
push
xchg
cmp
xlat
mov
push
test
enter
movsl
jle
dec
popf
dec
pop
adc
lods
mov
addr16
adc
dec
adc
adc
clc
and
mov
sbbl
cmpsb
cmp
mov
jno
push
ror
jbe
xor
mov
scas
cltd
lahf
cmp
idivl
roll
push
mov
ficoml
adcb
icebp
lret
iret
pop
cwtl
popf
int3
loopne
xor
loope
mov
jne
shlb
jl
scas
add
cmp
gs
mov
xchg
sub
in
loopne
pop
hlt
mov
jge
aad
stos
test
in
sbb
sub
jecxz
fisubs
fs
pop
push
insl
xchg
nop
jnp
dec
insl
sub
xor
inc
xor
jae
or
jns
or
in
lods
dec
cmp
pusha
insb
cltd
sub
insb
jnp
fisttpll
insb
fiadds
push
in
aas
lea
lock
testl
ja
movl
iret
cmp
push
mov
lret
xchg
add
sahf
popf
push
and
pop
inc
std
xchg
sbb
sar
stc
mov
jp
mov
cmp
xchg
xchg
sub
xchg
ficomps
mov
add
test
mov
call
gs
stos
stos
add
addr16
imul
add
xchg
pop
std
movb
fs
scas
sub
and
enter
test
cli
adc
movsl
jb
and
ret
into
push
xchg
in
fimull
and
cs
aaa
int3
stos
fstp
shl
ljmp
or
xor
popa
es
and
cmp
ret
subl
scas
cwtl
cmp
sarl
xor
push
mov
dec
pop
lods
fldt
adc
rorb
jl
cmp
xchg
push
pop
sub
jl
or
ror
xor
loope
mov
push
ficomps
cmp
xchg
cmc
jmp
cmpsl
shll
lods
sub
and
xor
in
add
push
cli
add
shll
repnz
scas
lds
add
scas
out
idivl
jle
jne
adcb
lcall
cmp
lods
xchg
hlt
lds
mov
dec
jb
xchg
popa
ficoms
repnz
pop
pop
push
outsb
or
or
dec
daa
js
pop
dec
fisttpll
pusha
lds
aaa
call
lcall
mov
add
ljmp
in
pop
inc
arpl
inc
outsb
dec
jno
push
mov
jns
shl
pop
out
xor
dec
pop
shr
xchg
pop
cmp
and
fdivrl
dec
sub
mov
fcoml
cld
pop
push
sti
xchg
stos
lahf
jae
xor
pop
les
jge
les
movb
adc
shl
push
xchg
lahf
loopne
ljmp
sbb
cwtl
std
scas
xor
push
xor
mov
subl
hlt
arpl
lods
dec
popa
or
ret
dec
mov
movsb
aad
shlb
xchg
sub
cmpsb
inc
ds
das
add
mov
pop
add
je
xor
mov
lahf
push
fstps
mov
ljmp
movsb
inc
imul
pop
fadds
push
std
sub
pop
in
in
fcomip
sbb
je
or
or
into
fildl
orl
fs
das
inc
adc
ret
mov
rolb
or
mov
cmp
cmpsl
pusha
cli
rclb
dec
fwait
or
sbb
cmpl
jb
mov
mov
xlat
push
push
push
sbb
cmp
test
cmpsl
lea
jp
sti
sbb
pop
dec
scas
cmp
lea
call
repz
sbb
clc
lods
or
xchg
mov
int3
or
call
scas
mov
inc
mov
pop
shll
cld
mov
jp
sbb
xchg
cs
daa
dec
or
hlt
inc
push
inc
xchg
pop
push
xor
ljmp
dec
pop
aaa
xchg
jmp
sbb
data16
out
std
stc
sbb
outsb
sub
xchg
fidivl
xlat
je
cli
mov
sub
and
repnz
cmpsl
sub
jmp
push
xor
dec
adc
mov
xchg
add
inc
sub
cmp
mov
repnz
ret
out
ret
mov
push
lds
outsb
sbb
outsl
adc
add
xchg
mov
pushf
pop
lret
movsl
jno
jmp
les
pushf
pop
mov
cltd
cmp
xchg
push
into
fcmovb
push
fsubs
in
or
das
dec
sub
mov
xor
xchg
sahf
mov
lahf
adc
adc
ljmp
xlat
fimuls
inc
xchg
sahf
xchg
push
vcvtsd2si
mov
movsl
jae
or
cs
mov
jmp
adc
push
jl
insb
lret
std
notl
cmpsl
cmpl
mov
xchg
aad
adc
sti
mov
mov
xor
jp
mov
xchg
and
cmp
inc
mov
out
push
lds
adc
test
sub
sti
cwtl
or
jae
cmp
cwtl
fstpl
and
dec
bound
cmp
xchg
popf
test
insl
ret
insl
cmp
test
pushf
jp
int
in
or
int3
jp
orb
and
lods
push
int
mov
and
mov
call
pop
xchg
mov
pusha
leave
hlt
cld
add
push
aas
iret
or
int3
push
cmp
sub
mov
jl
in
andl
into
orl
sbb
sub
jg
iret
daa
lret
or
mov
hlt
stos
sub
clc
and
pushf
push
or
pop
sub
push
arpl
jbe
outsl
inc
cmp
fwait
xchg
add
orb
mov
rorl
unpckhps
mov
cmp
cmpb
fwait
rclb
xchg
sbbb
inc
lds
lcall
icebp
in
daa
popa
mov
push
mov
hlt
pop
call
lret
jl
inc
xlat
inc
arpl
jnp
addl
sub
mov
rol
ljmp
dec
gs
lahf
inc
jl
mov
out
into
cli
and
rclb
mov
add
mov
das
cmp
fldl
adc
pop
push
lock
push
fbstp
mov
movsl
xchg
sub
or
orb
dec
mov
outsl
mov
int
lds
or
pop
imul
pusha
mov
lret
xchg
mov
imull
subb
shrb
or
jmp
inc
idivb
cmp
push
lds
enter
subl
cwtl
xor
push
fwait
cmp
pop
push
popa
mov
sbb
cmpb
in
movsl
mov
aam
andb
dec
ja
xchg
shrd
loope
xchg
xor
out
and
add
arpl
nop
fstpt
and
call
testl
jp
pushf
or
jnp
das
dec
adc
xchg
xor
dec
xor
xor
dec
xor
and
aas
cmpsb
inc
inc
das
imul
ja
dec
cmpsl
bound
mov
pop
pop
sub
andl
fcomp
out
sti
orb
and
push
lcall
daa
jno
xchg
inc
jo
dec
dec
fistpl
push
sbb
xchg
sbb
cmpsl
add
inc
subl
lret
int3
xor
cmc
mov
sub
inc
testb
fs
jp
xor
lods
out
lcall
imul
fcoml
gs
cmp
mov
push
dec
push
cmp
jo
pop
es
mov
cmpsl
enter
out
dec
into
sbb
popa
in
add
hlt
and
push
repz
push
mov
fsubrs
inc
push
xlat
xchg
enter
mov
or
mov
roll
mov
fwait
or
movsb
mov
iret
jbe
ret
adc
xor
mov
ret
and
scas
sbb
lods
or
inc
xchg
je
mov
jns
dec
xor
call
mov
mov
mov
cmp
xlat
dec
xchg
mov
mov
addr16
stos
lods
shl
dec
das
mov
add
cmc
mov
aas
out
mov
ret
aaa
pop
lcall
push
inc
aad
and
pop
push
or
clc
dec
fimuls
in
mov
cmp
xor
lds
fldt
xor
xchg
sbb
dec
ss
and
pop
or
xchg
cmp
out
aas
xor
sbb
pop
mov
xor
inc
ds
mov
mov
out
sbb
adc
push
out
and
push
or
mov
adc
nop
mov
mov
sbb
aaa
call
mov
aaa
dec
std
mov
xlat
mov
push
mov
test
cmc
cmp
lds
rcll
pop
mov
outsl
sbb
cmpsb
and
dec
popf
mov
lods
add
add
imul
mov
dec
sti
fcmovnbe
mov
mov
and
ja
jne
icebp
in
push
aaa
pop
lock
push
arpl
mov
adc
push
insl
fisttpl
xor
ds
fldl
and
rcrl
rol
jmp
sub
pop
mov
inc
das
out
xchg
or
movsl
jbe
int3
mov
fs
movsb
rcrb
dec
push
daa
or
fsts
cli
cmp
xchg
dec
add
pop
or
loop
cld
jb
and
add
dec
inc
in
hlt
or
outsb
push
ss
sbb
xchg
xlat
pop
fwait
pop
xchg
insb
add
inc
xchg
mov
jle
aad
and
popf
cmp
cmc
aas
or
sbbb
dec
pop
jnp
sbb
pop
add
into
sbb
fdivp
and
adc
lock
jecxz
fisttpl
addb
and
lret
stos
call
mov
xchg
sub
xchg
cmpsl
aam
mov
mov
iret
dec
xor
repnz
cmp
mov
and
iret
icebp
push
pop
pushf
hlt
mov
and
adc
enter
insl
js
cmp
pop
int3
and
lret
das
dec
outsb
sub
jnp
testb
clc
inc
hlt
pop
xor
pop
push
aam
inc
out
fs
in
xor
xor
mov
mov
dec
test
jo
pop
in
shlb
ficomps
sti
in
jl
lea
fninit
rol
jb
jle
sahf
mov
sbb
cmpsb
jmp
popf
xchg
outsb
or
jae
jbe
jo
je
cs
inc
jae
lea
loopne
push
shll
and
mov
in
push
stos
dec
in
repnz
jmp
outsl
stos
int3
or
es
aad
cmp
push
js
xor
jae
jb
mov
push
in
dec
xor
lods
xchg
inc
sub
jnp
rcll
xchg
mov
jae
movsl
in
lret
dec
fcompl
fildl
inc
cmpsl
fs
jne
xor
cmp
push
insl
or
dec
mov
bnd
pop
push
cmp
inc
xlat
jmp
cmp
mov
sub
adc
mov
outsl
jle
cmp
shl
loop
inc
sbb
out
jae
and
testl
mov
xchg
pop
inc
test
movsb
xor
mul
lret
xchg
jns
jbe
xor
or
in
leave
fidivs
lea
xor
pop
ja
push
fiadds
mov
hlt
mov
mov
ss
outsl
inc
push
stos
sbb
or
orb
mov
rclb
out
pop
mov
insl
cmp
rcrb
dec
add
or
js
dec
mov
scas
jns
adcl
dec
out
lock
aam
xchg
out
pop
jb
movsb
add
mov
enter
dec
or
in
mov
xlat
popa
jae
ja
fstpl
and
dec
add
adc
jle
dec
notb
sahf
aas
xor
je
and
lds
mov
push
inc
ds
inc
dec
fiadds
shll
lretw
popa
in
xor
loopne
sbb
sahf
idivl
jne
ret
in
mov
repz
xor
adc
movl
jmp
enter
sahf
dec
adc
mov
loop
mov
mov
call
addl
push
xchg
push
js
es
sbb
mov
call
jmp
movsb
aad
mov
cmp
sti
leave
pop
xchg
repnz
pusha
cmpsl
lahf
lock
or
outsl
mov
xchg
or
jo
fisubl
cmp
test
fstpl
pop
shlb
xchg
mov
lret
popf
test
fcomps
cmp
shrd
or
push
and
pop
clc
jl
adc
and
or
test
dec
pop
jno
test
xor
loop
ffree
repnz
and
test
sub
hlt
rorb
faddl
jge
lret
lods
inc
xor
ja
inc
xchg
pushf
mov
aam
and
add
sub
shrb
dec
leave
stos
xor
adc
push
xchg
stc
ds
push
call
mov
add
cmpsb
lret
mov
push
add
jg
inc
jmp
pop
int3
shl
pop
ret
mov
leave
push
imul
sub
inc
cmp
lcall
xor
cmp
adc
dec
jnp
mov
mov
lahf
insl
loop
mov
sbb
or
jne
jne
push
and
es
push
mov
xor
jl
shrb
sbb
pop
addb
in
mov
pop
and
enter
sbb
ljmp
icebp
addr16
and
shll
push
fstl
loopne
mov
cmpsl
int3
ja
cmp
jne
cmp
jns
enter
nop
mov
mov
xor
inc
mov
lock
add
mov
sub
or
outsb
cs
jbe
xor
lods
xlat
dec
dec
or
jae
enter
sahf
xchg
stos
adcl
xchg
fs
call
loopne
push
mov
pusha
adc
lret
adc
popa
jbe
jg
cmp
bound
dec
jne
dec
cmp
repnz
clc
xlat
xor
sub
xchg
inc
mov
scas
cmp
xor
addr16
fildll
test
icebp
xor
cmp
pop
mov
push
sub
push
je
push
aas
movsb
out
out
mov
cld
mov
push
cli
bnd
rcll
int
push
cmp
out
mov
mov
or
ja
fs
int3
cli
das
cmp
xor
js
std
cmp
add
in
mov
jmp
movsb
icebp
mov
xchg
aaa
lahf
bound
das
inc
fsubrs
nop
push
push
fwait
dec
push
push
lahf
pop
xchg
mov
add
call
repz
xorb
orl
dec
test
jo
loopne
xorl
push
xchg
mov
adc
dec
cmp
pop
and
jp
adc
cli
sub
push
mov
mov
push
mov
iret
push
and
outsl
push
jle
xchg
scas
inc
mov
jmp
imul
xchg
push
dec
repz
dec
and
iret
ficomps
xor
push
xor
popa
addl
outsb
jmp
je
hlt
pop
ja
test
ret
test
pop
rolb
and
fcompl
mov
sarb
int3
and
mov
mov
sub
test
out
xchg
inc
cmp
xor
mov
hlt
stc
scas
lock
jmp
out
in
pop
sbb
inc
jecxz
inc
xchg
mov
sub
or
xchg
fdivs
loop
into
cmp
ja
cmp
add
imul
sub
push
pop
xchg
mov
je
add
outsl
outsb
sub
push
mov
clc
int3
stc
push
fsts
gs
xor
and
fldl
mov
std
mov
add
push
cmc
gs
out
cmp
pushf
mov
dec
xor
roll
sub
pop
arpl
push
push
and
in
stos
mov
lcall
jge
cmc
pop
std
adc
aad
int3
cld
inc
push
xchg
mov
add
loopne
xor
daa
dec
les
in
adc
inc
push
inc
paddw
and
test
jo
mov
fsubrs
imul
aaa
cltd
and
push
ret
mov
add
test
mov
pusha
subl
or
sbbl
test
dec
cmc
pop
mov
pop
push
sbb
orb
in
sub
mov
in
push
add
cmp
cmp
iret
fnstcw
jmp
sti
xor
imull
pop
aam
pushf
add
out
ljmp
bound
pop
int
aam
insl
jne
adc
jae
add
dec
movsl
rcrb
mov
repz
inc
ljmp
out
mov
add
lea
jnp
xlat
push
sub
mov
inc
movsb
lcall
pop
inc
cmc
lock
mov
or
insb
rcll
dec
inc
add
call
fdivrp
call
mov
sbb
or
push
mov
ja
in
pop
popa
jg
push
sub
cmp
or
xchg
pusha
xor
jb
cltd
cmp
adc
shrb
sbb
pop
in
rclb
push
push
cld
sub
pop
fildll
jae
jge
dec
mov
popf
cmpsl
push
mov
out
aas
jae
dec
flds
mov
jae
push
sti
loopew
fs
xor
dec
push
push
mov
ljmp
rcl
push
or
jo
loopne
sub
and
leave
push
jb
mov
lock
inc
pop
xchg
xor
mov
xchg
clc
call
mov
popf
cmpsl
daa
jbe
cs
and
push
xor
data16
jecxz
and
cs
inc
imul
and
pop
ret
inc
loope
hlt
sub
js
mov
lock
in
lret
ja
jge
mov
mov
mov
mov
jns
xchg
mov
movb
outsl
push
dec
dec
pop
lock
outsb
cs
sub
andb
dec
mov
pop
lds
mov
cli
scas
mov
and
mov
push
lahf
mov
repnz
jno
sub
daa
jae
roll
stc
xor
ds
enter
mov
adc
xchg
jl
aas
addr16
mov
mov
fiadds
xchg
fdivrp
pop
dec
jno,pt
ret
xchg
popa
mov
jge
xchg
mov
pop
data16
insl
mov
mov
sti
mov
pcmpeqb
cwtl
push
aam
in
mov
fnstsw
dec
and
stos
into
jb
shl
stc
mov
pop
lds
test
jge
fnstcw
sbb
cmp
sbb
jmp
bound
stos
push
xor
inc
add
mov
aad
test
lea
xor
ljmp
cmp
add
sub
shll
sub
mov
aaa
jo
aam
add
lea
jo
stos
into
rclb
repnz
inc
jnp
sti
ret
or
bound
in
iret
adc
mov
repz
les
inc
loopne
jp
add
aam
or
movsb
jno
dec
xor
loop
outsl
fimull
or
mov
testl
pop
js
sbb
mov
clc
lds
arpl
aam
in
ljmp
jecxz
jp
pop
mov
aam
dec
push
pop
stc
inc
adc
xorb
or
in
mov
std
push
inc
mov
adc
inc
repz
rclb
mov
popf
enter
fs
icebp
dec
push
roll
rorl
adc
adc
xchg
lret
jmp
ss
les
test
lret
push
xlat
pop
push
lret
bound
stos
pop
jb
mov
insl
lret
jecxz
dec
fs
test
mov
adc
test
insl
std
lock
sbb
mov
mov
jg
xor
dec
outsl
fstpt
lea
ret
ljmp
pop
enter
inc
loopne
rolb
iret
hlt
mov
in
mov
stos
repnz
xchg
fstps
lods
repz
cmp
cld
jae
sahf
xchg
cltd
adc
aas
es
mov
xchg
into
xchg
sbb
sbb
cmp
jge
pop
jbe
lods
push
cmp
pop
mov
sarb
push
mov
addl
std
push
scas
pop
insl
ljmp
cltd
lea
lods
add
clc
pop
popf
ret
jp
add
inc
mov
ret
cmp
stos
xor
mov
add
clc
pop
jmp
mov
test
outsl
sahf
rcrl
fldcw
dec
jo
push
push
jecxz
rcrb
in
xchg
xchg
popa
xchg
push
bound
shr
in
in
in
sub
int
lock
fbld
xor
into
inc
ss
ret
push
ds
mov
and
mov
cmp
push
xor
out
dec
mov
and
pop
and
cmc
add
dec
inc
sub
or
push
popf
outsl
mov
stc
pusha
lcall
mov
cli
xchg
jp
in
add
sub
cmp
pop
cmp
jp
repnz
cli
xchg
hlt
int
sub
push
iret
imulb
lods
push
cmp
cmc
jecxz
arpl
cmpb
and
dec
mov
or
rcl
ja
or
subl
sti
int3
icebp
in
out
out
sbbl
ljmp
dec
adc
and
movsl
pop
repnz
bound
adc
jne
inc
and
xchg
outsl
cmpsb
inc
incl
lcall
clc
notb
jg
sbb
jbe
add
xchg
add
inc
sub
add
ret
push
cmp
pop
jmp
sub
add
jo
mov
and
stc
pop
sbb
nop
push
lock
rol
mov
movsb
ret
mov
jp
inc
aas
adc
push
pop
das
sbb
arpl
mov
enter
xchg
pop
mov
pop
push
movsl
movb
dec
imul
into
into
incl
mov
mov
xchg
adc
cmp
outsb
lods
out
add
lock
jbe
fdiv
test
pushf
lock
cmpsl
cmc
inc
lds
xor
rcrl
fistps
cmpsb
cwtl
lret
jg
sti
call
cld
stos
adc
jo
rorl
sarl
xor
sarb
adc
push
rol
mov
dec
push
scas
sti
and
loop
adcl
and
push
clc
stc
fsubs
dec
push
mov
cs
mov
mov
insl
push
nop
push
addr16
jne
nop
test
jnp
push
jle
hlt
out
insb
mov
and
nop
loop
mov
mov
outsl
jg
fistl
mov
pop
test
adc
push
jbe
mov
mov
adc
jns
test
mov
aam
mov
movsl
xor
in
xlat
sbb
fwait
push
sbb
insb
sbb
fsubs
shll
and
or
jne
xor
icebp
mov
in
pop
cmp
inc
cwtl
lcall
xchg
xor
sbb
lea
or
inc
xchg
pop
mov
push
sbb
call
jge
inc
xorb
pop
popa
mov
js
add
mov
add
push
cmp
jmp
xlat
inc
xor
cmp
mov
push
dec
jmp
pop
shlb
ljmp
mov
and
test
xchg
xlat
pop
sub
jbe
jo
pop
sub
mov
push
mov
imul
cmp
aas
xchg
cmpsl
test
xchg
add
mov
sub
popf
in
jno
out
cltd
scas
mov
int
adc
movsb
and
ror
mov
adc
xor
push
sub
xor
out
test
rcr
or
mov
jno
cmpb
das
cli
rcrb
outsb
mov
sub
out
sub
daa
call
insb
or
cld
cwtl
ret
pop
cld
lret
pop
mov
xor
add
aad
fs
div
sub
mov
fldt
out
fs
mov
xchg
jb
out
push
daa
xchg
push
xlat
jmp
iret
orb
mov
cmp
cltd
ds
push
mov
ret
add
test
nop
add
je
mov
and
push
push
sub
fsts
sub
push
fstpt
subl
lahf
add
je
add
mov
mov
cmpb
orb
xor
xchg
sarb
aaa
ljmp
fwait
dec
in
and
in
loopne
cmp
stos
and
mov
inc
sbb
leave
push
in
mov
imulb
insl
and
inc
mov
loope
fimull
fwait
sub
sbb
popf
fs
lock
test
adc
and
rol
jns
mov
lds
mov
xchg
push
pusha
jmp
and
notl
xor
in
pop
imul
loopne
dec
inc
scas
add
addr16
fstps
mov
test
cld
add
mov
mov
adc
notb
lods
rcl
pop
test
push
cmp
sbbl
or
lcall
mov
and
sbb
rorb
popf
lock
add
cmp
inc
mov
lret
pop
add
fadds
mov
imulb
roll
sub
mov
xchg
in
ret
mov
sbb
pop
push
ficoml
stos
hlt
jmp
hlt
jp
cli
popf
pop
mov
in
inc
pushf
sbb
mov
lret
sbb
push
les
jp
xchg
mov
cvttps2pi
push
scas
mov
xchg
add
add
lret
mov
fsubrl
sbb
lea
mov
clc
mov
sbb
aam
push
fldt
inc
or
inc
daa
adc
testb
popf
adc
cmpl
pop
into
sub
in
inc
sti
aas
out
mov
ss
arpl
loop
sub
imul
data16
ret
fidivl
mov
push
subl
aaa
orb
out
adc
adc
mov
mov
jp
bound
mov
setl
cmpsb
push
insb
test
movsb
cmp
add
in
inc
aam
clc
mov
loope
repz
and
jo
mov
push
out
popf
int3
fbstp
sarl
in
loopne
jmp
pop
fs
cmpsb
xchg
jmp
inc
popf
test
int
clc
jno
cmp
or
pop
push
int
js
mov
inc
push
cmp
aaa
and
imulb
push
inc
xchg
into
std
sbb
cmp
dec
xchg
es
loop
or
xchg
jecxz
adc
pop
xchg
fnsave
stc
outsl
out
pop
xchg
cwtl
xchg
xchg
mov
add
insl
ljmp
xchg
lea
adc
xor
leave
aad
mov
cmp
cwtl
fdivl
icebp
test
shr
or
or
bound
pop
cli
sti
ret
fnstcw
cmpb
inc
pop
mov
jecxz
lods
sar
pop
push
lret
jne
jb
repnz
jae
mov
sbb
fwait
jae
stos
cmp
jecxz
xchg
pop
cwtl
jmp
fisttps
dec
add
jno
loopne
enter
clc
dec
mov
add
ret
mov
idiv
pop
leave
jbe
cmp
ret
mov
xchg
jae
popa
xchg
pop
ret
sub
mov
xor
adc
jbe
sub
sbb
jns
arpl
mov
dec
jno
push
sti
dec
scas
and
aam
dec
sbb
jb
scas
xchg
ss
adc
sub
jnp
les
push
mov
mov
das
dec
inc
push
sub
push
loop
adc
test
or
xchg
data16
daa
jno
jnp
xlat
sub
dec
mov
mov
xor
pushf
fdivl
fcompl
jae
stos
jp
rclb
jecxz
adc
lret
sbb
xor
shl
mov
lods
sbb
fiaddl
pop
xchg
jno
add
data16
fwait
push
int
ret
fwait
imul
and
divl
es
out
test
mov
or
call
jp
aaa
pop
jg
dec
sub
scas
fsubr
mov
mov
icebp
and
ret
and
cli
les
pusha
and
sbb
push
inc
pop
mov
or
repnz
fs
inc
cmp
int3
into
fnstcw
xchg
stos
movsl
pusha
shlb
imul
out
jne
das
repnz
pushf
aam
add
int
addb
sti
enter
mov
mov
push
inc
adc
cmp
les
arpl
mov
jno
and
dec
scas
out
shrb
ret
outsl
mov
stc
movsb
xchg
cli
sub
jne
sub
hlt
mov
adc
bound
imul
push
jnp
cltd
add
jl
hlt
test
cmp
test
xchg
xchg
mov
pop
stos
fstpl
xlat
xchg
cmp
scas
sbb
push
inc
arpl
fsubs
daa
cmp
cmp
push
popa
lods
xchg
and
adc
js
popa
js
mov
adc
cmp
jnp
push
loop
push
mov
pop
jp
gs
xchg
fdivl
pop
jle
sbb
in
xorb
scas
test
fbld
xor
add
stc
mov
insb
mov
sti
adc
js
lods
lods
jbe
rclb
sbb
and
test
sbb
test
out
shrb
dec
mov
mov
lret
xchg
popa
das
je
sub
fwait
rorb
icebp
movsl
cltd
mov
push
mov
movsb
lds
dec
xor
lret
repnz
dec
cmp
popa
add
and
cltd
repnz
idivl
test
nop
in
jnp
bound
mov
mov
out
outsb
mov
xor
in
cs
mov
fsubl
cmc
xchg
add
inc
call
andl
xor
xchg
fs
dec
into
out
xchg
mov
push
lea
pop
adcb
jg
es
cmp
push
lret
bound
faddp
ja
cld
out
lahf
fadd
jmp
cmp
pop
test
xor
mov
fwait
push
fwait
addr16
lock
mov
std
mov
pop
or
xchg
xchg
add
test
jp
call
lret
clc
mov
push
pop
arpl
jnp
test
mov
ffree
insl
data16
xor
cli
jmp
and
insl
test
or
test
sbb
ds
or
pop
pop
push
or
xor
shll
sub
mov
imull
jo
shrl
sub
aas
mov
std
xchg
cmc
push
mov
call
dec
push
and
loopne
xor
mov
mull
fstl
pop
cmpsb
sbb
sarl
mov
ja
and
lcall
out
or
das
mov
outsb
jge
rclb
in
cli
lods
test
push
in
iret
mov
push
dec
mov
test
lods
inc
inc
and
pop
fildll
adc
mov
orb
mov
jp
inc
roll
js
jae
cmpsl
imul
pop
jns
js
push
divl
cli
push
ret
cli
lea
dec
inc
popf
jmp
fnstcw
insb
in
fadds
hlt
ffree
xchg
cmp
push
rcrl
ss
shll
lock
les
jmp
adc
jmp
stos
mov
pop
stos
fbld
call
js
test
add
push
pop
cs
cmp
xchg
int3
lret
mov
xchg
dec
inc
call
data16
cs
mov
int
push
and
sbb
in
in
cmp
stos
or
int3
xchg
or
add
addb
sbb
int3
ror
mov
scas
sub
mov
cmpsl
fildll
iret
jbe
sub
jp
cmpsb
xchg
rorb
fldt
add
outsb
sbb
in
mov
lock
das
inc
es
jbe
sarl
sub
stos
mov
dec
push
mov
inc
sbb
lods
mov
cltd
xlat
leave
or
xlat
xchg
hlt
cltd
or
jmp
pop
mov
xchg
scas
lods
or
cwtl
sahf
cwtl
pop
dec
inc
add
stos
adc
and
std
mov
shlb
inc
xorl
mov
adc
ljmp
jns
daa
rorb
and
jae
lahf
mov
sub
inc
hlt
aad
fsubrs
and
aad
pop
mov
xlat
dec
and
arpl
xchg
addr16
fcoml
jne
outsl
or
clc
pop
icebp
iret
sub
sub
and
sbb
iret
daa
sahf
aad
mov
stos
jnp
das
in
xchg
push
xchg
jo
mov
mov
test
inc
lods
sub
in
lret
mov
in
inc
mov
pop
pop
rorl
inc
in
lcall
es
pop
mov
adc
xchg
jns
test
or
fadds
jns
movsb
xor
mov
mov
mov
lds
jne
mov
orl
into
jmp
out
and
gs
outsb
ds
jp
std
inc
xor
int
fstp
push
xchg
sub
dec
inc
les
aas
xchg
in
xor
jne
out
icebp
jnp
sbb
jne
dec
das
pop
xchg
jle
pusha
jb
stos
stos
out
subb
mov
ljmp
and
xchg
out
fisubrs
add
cmc
dec
jnp
notb
sub
xorl
cmp
xchg
sub
test
jle
dec
jnp
adc
pop
rol
dec
insb
jnp
or
mov
sbb
mov
cmpsb
mov
sub
mov
inc
pop
scas
das
push
cmp
xchg
hlt
push
jecxz
adc
test
popa
mov
pop
push
adc
xchg
addb
jg
sub
inc
fdivrs
adc
dec
add
jecxz
pop
popa
int
bnd
cltd
je
daa
xor
sbb
add
stos
jno
push
push
cmc
rcll
pop
addr16
fsubrs
cwtl
sbb
push
mov
pminub
vpavgw
add
mov
mov
jp
int3
mov
stos
add
inc
sbb
shlb
inc
cmp
dec
xor
jae
dec
insw
movsl
js
ss
roll
xchg
sbb
add
mov
sub
cltd
or
out
mov
mov
lret
gs
out
in
stos
push
mov
cld
dec
cltd
repz
fbstp
push
sti
ds
sub
push
cld
xor
mov
stc
cmp
or
imul
in
shll
dec
stos
adc
push
popf
lock
cmpsb
cli
and
or
or
mov
jecxz
sar
test
mov
jle
cmpb
test
mov
iret
std
insb
enter
into
mov
dec
adcl
dec
shrb
insl
push
push
and
dec
mov
int3
das
lret
cmpsl
aad
fstps
xchg
cld
and
mov
test
inc
pop
mov
and
ret
xor
aas
and
mov
sar
daa
add
pop
scas
bound
push
sbb
jle
scas
negb
xchg
pop
fsubs
inc
sahf
rcrb
int3
out
mov
js
mov
inc
lock
xchg
pop
movsb
inc
in
out
fistpll
sbb
mov
pop
jns
loopne
ret
int
movsl
add
xchg
mov
fcmovnu
mov
repnz
fisttps
test
pop
or
push
jo
pushf
xchg
push
insb
sbbb
aas
sbb
sbb
pushf
je
test
xor
in
in
ss
in
xchg
jle
imul
out
cs
push
mov
jo
push
in
inc
es
dec
cmp
pusha
push
andb
test
aas
out
cld
das
imul
fstps
arpl
je
xchg
ljmp
mov
mov
sub
ficomps
hlt
aam
pop
mov
fidivrs
xchg
or
jnp
into
xchg
mov
pushf
ret
xchg
fwait
or
js
subl
loop
pop
ret
fstl
cwtl
divb
mov
fldl
mov
or
out
add
xchg
sub
data16
fdivrs
addl
ret
stos
fsubl
lds
jge
pop
fiadds
xchg
inc
mov
xlat
and
xor
icebp
lcall
shll
jno
popa
push
jno
xlat
adc
ljmp
cmpsl
sbb
dec
ljmp
frstor
lods
test
xchg
sub
lcall
mov
hlt
jl
aad
in
iret
inc
xchg
rcl
mov
dec
adc
das
mov
cmpsb
bound
outsl
dec
insb
es
repnz
jbe
xchg
and
push
push
inc
jnp
add
xchg
negb
xor
pop
jmp
rol
push
cld
mov
and
pop
jae
rcrb
mov
sbb
adc
daa
add
repnz
xchg
mulb
aad
lcall
sbb
push
ljmp
cmp
divl
call
pushf
inc
pop
rcl
imul
and
shll
das
fisubs
ret
adc
sbbb
dec
clc
jnp
loopne
xchg
cwtl
scas
ror
daa
inc
lods
mov
jge
cs
xchg
mov
xor
dec
ret
jecxz
hlt
test
sub
inc
mov
adc
cmp
lods
inc
in
pop
in
out
xchg
fimull
xchg
cmp
adc
cmc
scas
decb
mull
pop
add
je
inc
out
and
inc
mov
aas
test
lcall
xchg
push
xchg
dec
and
cmc
popf
fwait
mov
ds
inc
sub
test
test
cli
jae
mov
or
out
mov
shl
lock
movsl
push
cwtl
test
mov
jge
jae
daa
inc
mov
pop
cmp
test
rcl
sahf
orb
mov
xor
fcoml
inc
int3
jo
int3
hlt
sbb
jno
pop
fcmovu
mov
and
cld
and
mov
push
and
pop
insl
adc
adc
add
xlat
outsb
and
das
or
movsb
and
or
hlt
sub
lahf
and
and
mov
mov
mov
int
leave
jo
cmp
push
bound
mov
scas
imul
daa
inc
lret
test
mov
push
mov
mov
stos
rcrl
aaa
sub
jns
inc
or
dec
dec
test
add
xchg
inc
cld
add
jmp
push
add
int
mov
aaa
loop
std
insl
xor
pop
stc
dec
or
mov
aaa
and
fdivrl
movsl
jmp
cmp
xlat
mov
dec
imul
inc
fcomi
in
and
in
fsubrl
mov
mov
imull
andb
or
movzbl
pop
jecxz
adc
push
frstor
dec
jecxz
jne
inc
sbb
and
jle
data16
pop
addr16
dec
mov
cmp
stos
push
jnp
mov
clc
lds
and
sbb
mov
jp
mov
jo
iret
lahf
xchg
dec
jge
out
mov
adc
jnp
mov
or
adc
stos
or
jno
xor
xchg
mov
adcl
pop
mov
test
sub
or
mov
adc
mov
jb
icebp
and
push
mov
cmp
jbe
mov
cmpl
roll
ret
std
pop
enter
mov
dec
and
inc
fistpll
vpsubsb
mov
mov
insb
pop
ja
sbb
sarb
and
or
adcl
shlb
or
aad
or
in
mov
int
call
ficomps
mov
lret
imul
mov
jge
push
lcall
aas
and
pusha
aad
test
mov
test
jns
jge
sbb
sarl
cmp
adc
push
test
mov
roll
sahf
fiadds
andl
shlb
and
jl
test
aas
mov
xor
std
pushl
movsl
shll
ss
out
or
push
cli
sbb
outsb
cld
mov
pop
les
mov
out
sub
mov
push
mov
or
jmp
bound
into
adc
lahf
leave
jl
push
cmpsb
add
mov
sahf
mov
mov
mov
rolb
adc
xorb
mov
dec
jns
push
or
adc
pop
xchg
sub
add
out
push
cmp
push
lock
outsl
in
jle
pushfw
mov
dec
dec
and
mov
int
xchg
stc
jno
fisubrl
add
cmpsl
dec
in
mull
lcall
arpl
shrb
inc
fcom
xchg
shll
cli
std
mov
push
adc
xor
clc
pop
loop
jmp
pop
mov
sub
in
mov
fsubs
repz
push
cmp
mov
sar
or
arpl
sbb
aam
mov
sub
push
sbb
xchg
mov
sbb
push
ficompl
cmp
adc
xor
fsubrp
sbb
xor
sahf
ret
sbb
push
sub
jbe
popa
sbb
add
pop
stos
jo
or
cmpsb
lret
add
aad
and
mov
pop
test
fmuls
stc
stos
subl
lcall
out
jbe
daa
scas
in
insb
fcomps
jmp
lret
xchg
push
adc
cmp
imul
cmp
dec
sub
jne,pn
mov
imul
rcr
call
ffreep
or
mov
std
call
repnz
out
adcb
std
mov
dec
sub
or
inc
adc
xchg
cmp
cmpsb
mov
cmp
mov
jmp
lods
push
push
push
inc
and
sarb
inc
imul
cmp
insl
popa
inc
outsb
cmp
push
fists
ss
and
arpl
imul
mov
dec
sub
testl
dec
adc
bound
inc
jecxz
fadd
pop
leave
sub
fiadds
and
pop
notb
cmp
or
add
stc
or
inc
aam
ret
dec
les
mov
es
stos
shl
inc
lret
mov
dec
pop
rcrb
jp
mov
scas
jge
pop
and
into
inc
lret
xor
or
adc
mov
push
out
movsb
mov
push
imulb
xchg
mov
fnstsw
cmp
shr
inc
movsb
mov
ficomps
pop
push
dec
jg
testl
scas
lods
mov
and
cmp
mov
sbb
stos
pusha
test
scas
jmp
xchg
mov
sub
inc
test
inc
scas
je
sahf
sub
addr16
in
negb
lret
sbb
mov
pop
mov
xchg
inc
pop
addr16
sbb
push
mov
xchg
mov
outsl
push
mov
dec
into
fwait
sub
mov
xchg
adc
jb
pop
inc
mov
ret
pop
pop
sbbb
cld
pushl
xchg
gs
and
mov
mov
xchg
jecxz
xchg
call
test
mov
popf
lock
sub
pop
xlat
mov
dec
movb
popa
and
cmpsb
shl
inc
in
jnp
stc
mov
scas
xor
xor
outsl
lret
mov
mov
bound
cltd
aad
push
inc
je
test
pop
insl
divl
loopne
ret
inc
mov
fmuls
pop
adc
cld
mov
adc
sub
lahf
and
mov
in
aaa
pop
arpl
fbstp
or
pop
xor
jl
sub
dec
arpl
test
outsl
xlat
adc
das
in
dec
mov
jae
mov
aad
out
repnz
and
in
cmpsb
lods
cmp
loope
sbb
sbb
cli
cmpsb
jge
mov
dec
data16
repz
ljmp
sahf
pushf
js
scas
pusha
rclb
sti
cmpsl
lock
outsb
cld
nop
movsb
adc
sbb
scas
pushf
loop
push
push
xor
sbb
hlt
clc
imul
xorl
push
sbb
orb
xor
sub
push
dec
mov
shr
sub
jmp
jg
sub
cmp
test
xchg
rorl
out
test
and
mov
lods
fldln2
subb
push
stos
insb
ret
movsb
es
movb
test
mov
lea
jnp
mov
mov
in
push
fmull
push
xchg
xor
jg
hlt
testl
movsl
cmp
in
dec
in
xor
add
jmp
lcall
xor
jnp
mov
fidivl
js
into
enter
pop
insl
and
or
aas
test
sbb
scas
mov
mov
leave
xchg
data16
shrl
call
aam
cmpsl
test
es
dec
icebp
pop
sub
jb
insl
pop
outsb
test
iret
test
fcoms
inc
jge
mov
lods
pop
test
and
cmp
sub
xchg
fisubs
mov
mov
enter
cwtl
dec
lods
cmc
push
cmp
rep
xor
inc
pop
call
mov
cltd
dec
jp
out
popa
in
mov
int3
cmp
xor
jb
push
jne
pushf
cmp
mov
or
sub
inc
push
gs
hlt
roll
dec
sbb
mov
insb
mov
mov
outsl
hlt
test
mov
in
or
xchg
cmp
sbb
gs
mov
dec
pop
outsl
scas
cwtl
fcmovne
cmp
mov
std
jbe
mov
and
mov
adc
mov
push
out
daa
jne
rclb
push
xorl
sbb
cmpsb
addb
cltd
sbbl
pusha
sar
dec
test
rorl
sub
scas
or
pop
lret
out
into
test
and
out
leave
sub
jne
xchg
mov
jae
aaa
into
dec
int
test
out
and
jae
cwtl
mov
sbb
add
testb
cmp
dec
ljmp
pop
fisubl
dec
leave
and
push
cmp
mov
xchg
xchg
jae
stc
loope
jp
lahf
icebp
das
stos
bound
popl
pop
push
outsl
xchg
sub
xlat
in
sbb
add
out
push
inc
pop
inc
add
mov
cld
push
jecxz
das
popa
sub
ror
mov
mov
pop
mulb
ret
mov
cmp
adc
dec
adc
ds
lods
push
push
dec
clc
test
ret
mov
pop
cmp
push
mov
in
pusha
or
mov
ficomps
dec
adc
sub
xor
sbb
loop
fsubs
sub
inc
sub
insl
test
gs
mov
pop
es
fisubrl
mov
and
imul
add
stos
lods
pop
and
das
adc
jg
in
mov
leave
movsb
popf
sahf
daa
aaa
icebp
jo
mov
xchg
jge
xor
stc
sarl
jae
imul
add
mov
mov
movsb
sub
lods
xchg
sti
mov
fstp
push
sub
ds
xor
xchg
xor
mov
xchg
pop
pop
mov
es
pop
dec
or
test
loopne
icebp
sbb
add
sbb
out
in
into
jb
adc
or
mov
leave
pop
jmp
insl
test
mov
dec
lret
xchg
aam
ficompl
fucom
xchg
repnz
lock
sbb
xor
push
adc
call
pop
mov
and
movsl
and
xor
pop
call
cmp
jno
sub
js
mov
or
xchg
cli
dec
ficomps
dec
mov
dec
mov
popf
test
jp
xor
push
sub
jmpw
lret
aad
xor
addb
cmp
mov
ss
dec
xchg
not
or
xlat
aam
stos
hlt
pushf
inc
or
sbb
add
dec
sub
cmp
cltd
je
xor
orb
ficoml
mov
ret
pop
in
mov
mov
jecxz
imul
push
xor
cmp
pop
stos
pushf
shrl
mov
add
int
sub
dec
sbb
push
sub
jno
rcll
mov
jbe
fbld
scas
loop
cmc
sub
jmp
repnz
fmull
add
mov
je
icebp
adc
bound
cli
in
cmp
adc
sub
add
pop
mov
sub
fcoms
and
fstps
cmp
enter
icebp
ljmp
xchg
ds
pop
or
test
lret
pop
inc
mov
push
pusha
in
jns
push
call
rolb
aaa
test
xchg
add
cli
out
cmp
mov
in
mov
pop
adc
adc
dec
adc
pop
gs
add
scas
xchg
insb
test
mov
xchg
inc
lods
in
sub
xchg
sbb
dec
push
pushaw
cld
mov
lods
enter
add
in
cmp
push
stos
aaa
imul
pop
xchg
ficomps
in
sbb
shrl
mov
sub
jno
icebp
addr16
adc
lods
pop
pop
repz
xor
add
add
in
sbb
fwait
jp
sub
divb
mov
xchg
mov
pop
pop
mov
jne
insb
mov
setp
lods
xchg
test
push
mov
adc
mov
push
cmp
xor
push
movsb
pop
repnz
lret
fimuls
dec
mov
in
rorb
mov
iret
mov
mov
es
xor
mov
mov
aam
frstor
test
sub
inc
dec
jg
fadds
inc
rol
cmp
push
addr16
arpl
inc
mov
cmp
in
adc
fcoms
mov
adc
mov
jmp
loope
lcall
ds
lcall
addr16
popf
scas
jno
mov
test
ffreep
cmpsb
in
call
int
xor
std
dec
pop
scas
and
lods
and
cmpsb
scas
in
add
cmp
pop
dec
pop
add
outsl
mov
push
xchg
shlb
lret
sbb
insl
jne
cli
movsb
int3
jne
or
sbb
pop
adc
aad
inc
xchg
inc
mov
pushl
mov
jle
push
push
pop
xor
xor
or
inc
lret
jno
gs
stos
inc
sbb
sub
subl
inc
jmp
pop
pushl
and
scas
jg
sbb
enter
jmp
pop
pushf
aaa
in
jae
cld
mov
pop
int3
pop
sbb
and
and
inc
cmc
sahf
xor
xchg
leave
sub
or
mov
xchg
out
aas
cmp
pop
and
sbb
loopne
in
fadd
mov
jae
data16
test
rcll
dec
pop
push
test
or
sub
out
movsb
into
lods
push
fcoms
setne
xor
test
dec
in
pop
or
mov
mov
cmpsl
mov
sbb
mov
call
mov
pop
pusha
jne
lock
out
mov
scas
sub
cltd
cwtl
push
xchg
sub
outsb
cld
mov
mov
in
out
dec
pop
loope
cli
dec
add
add
push
sbb
test
lret
xchg
out
add
inc
jne
std
mov
out
or
fsubs
pop
ret
stos
dec
sub
repz
xor
pop
or
ds
ja
inc
pushl
adc
lcall
mov
sub
mov
popf
movsb
imul
jnp
inc
mov
mov
or
cmpsl
stos
mov
shlb
out
in
out
stc
outsl
ss
stos
shlb
jo
test
jg
jne
push
adc
in
adc
mov
and
add
mov
aas
xlat
cmp
inc
fs
fidivl
inc
adc
pop
lods
fucomp
daa
cmp
xchg
int3
xchg
gs
insl
fsts
pop
in
shrb
sub
jae
mov
xor
icebp
xchg
rolb
incl
popa
outsl
arpl
loope
mov
fcompl
pop
jnp
inc
outsl
sub
xchg
arpl
sub
adc
push
into
dec
mov
and
inc
aas
fdivrl
sbb
cmp
push
mov
sti
mov
push
cmpsb
leave
mov
mov
push
test
push
adc
sbbb
or
cmc
dec
sbb
std
mov
mov
loop
mov
mov
decb
sub
int
xchg
push
add
cld
mov
push
mov
outsl
orb
outsl
sub
sbb
ss
sbb
cmpsb
js
adc
mov
jo
ret
hlt
fildl
insb
fdivrs
test
jbe
int3
mov
fs
add
jge
mov
push
push
pop
lock
jp
in
mov
mov
push
insl
sarl
lret
mov
addr16
sbb
push
std
mov
daa
imul
xchg
cmp
and
ret
test
pop
inc
lahf
cli
and
lret
aad
std
pop
arpl
pop
popa
out
vpexpandb
dec
in
xchg
mov
pop
rcll
jno
movsb
inc
dec
push
pop
adc
ret
enter
fcoml
loope
lds
jns
es
pop
clc
mov
add
xor
lret
pop
add
and
xchg
and
mov
popf
addr16
mov
push
jl
fimuls
outsl
cmp
sub
push
mov
sbb
xchg
in
das
test
inc
adc
jns
lods
pusha
adc
test
icebp
js
inc
sarb
inc
jge
fistpll
or
mov
cmp
testb
in
insl
push
shrl
jl
jno
xchg
xchg
movsl
lods
ja
std
clc
sub
mov
pop
push
adc
fcomip
cmc
pop
mov
dec
mov
mov
fbstp
xor
addl
mov
repnz
loop
ljmp
insl
cli
and
mov
adc
hlt
sub
cs
jmp
arpl
lods
xchg
inc
pop
ret
mov
enter
sbb
ja
mov
lods
popl
rorb
jns
or
xor
mov
xchg
xchg
mov
popf
pop
in
xlat
pop
jecxz
leave
sarb
xor
cmp
repnz
test
xchg
adc
icebp
xlat
out
mov
adc
insb
sbb
insb
test
andb
push
fdivrl
lods
ljmp
aaa
mov
es
dec
push
int
mov
mov
xchg
je
scas
cmc
imul
js
jmp
cmpsb
lahf
in
mov
je
ljmp
aad
scas
pop
imul
lret
mov
sbb
insl
push
xor
ja
mov
mov
negl
add
icebp
fsubr
pop
hlt
lret
push
jp
mov
pusha
mov
jo
inc
adc
lds
push
lcall
ljmp
lcall
lea
sbb
enter
jl
popl
data16
pop
pmulhw
sahf
inc
in
lret
sbb
popf
pop
dec
cmp
sub
movsl
push
cmc
mov
insb
or
insb
mov
mov
adc
pop
or
lods
push
push
insb
sub
mov
lcall
jg
test
inc
cmp
popa
sub
or
or
mov
add
or
in
ds
xor
xlat
mov
cwtl
mov
mov
es
mov
fiadds
jecxz
jns
stos
leave
adc
pusha
mov
aad
push
sub
or
scas
push
or
pop
div
add
push
jno
test
xchg
aad
xchg
mov
xchg
push
testb
daa
and
mov
out
loope
fimuls
aas
movsb
mov
enter
mov
cmpb
fs
ret
or
mulb
pop
lahf
divb
mov
mov
xchg
push
aad
bound
into
shll
pop
and
mov
subb
std
cmp
jbe
xor
pop
mov
sub
jno
imul
std
inc
cmp
xchg
inc
fcmovnb
push
dec
sti
mov
inc
xchg
cmp
xchg
xchg
lret
mov
test
and
jle,pn
test
int3
cld
testl
dec
sarl
fmuls
push
cld
lods
adc
divl
and
lret
testl
int3
ss
ds
inc
jg
cmp
ja
lret
xchg
clc
icebp
inc
scas
popaw
in
adc
in
dec
fmuls
and
mov
mov
or
push
cmp
mov
inc
rorb
vpmaxsb
or
push
dec
mov
loopne
xlat
std
popa
lods
daa
mov
or
nop
sbb
push
xlat
call
fimuls
dec
scas
adc
xor
jno
inc
test
adc
dec
and
mov
xchg
pop
mov
mov
xlat
icebp
loop
cmp
push
fidivrs
into
ret
rcrb
rcl
cmp
sbb
fmuls
je
pop
inc
mov
nop
jg
pop
dec
sub
arpl
test
imul
or
xlat
mov
aaa
dec
jae
jnp
and
ds
cmp
ret
jae
cmp
pop
or
out
xor
bound
imul
and
enter
enter
fwait
jmp
inc
test
mov
pop
xorb
lret
mov
mov
int
xorl
ds
mov
call
movsl
lods
jecxz
jge
shll
inc
sub
xchg
or
mov
xlat
nop
sub
test
xor
ret
movl
xchg
lea
dec
xor
mov
inc
xchg
cmp
in
std
push
and
shll
jne
shrl
cld
pop
inc
xchg
or
jne
clc
negb
sub
movsl
jmp
scas
push
out
mov
add
ja
mov
movsl
and
loope
cmp
jg
loope
fisubs
mov
mov
mov
shl
iret
cmp
imul
push
pop
and
loopne
stos
pop
std
xchg
nop
js
aad
fs
popa
fst
cmp
pop
mov
mov
jae
jecxz
sbb
nop
test
ljmp
push
mov
sub
in
xchg
jecxz
pop
push
pop
les
cmpsb
fildll
stos
mov
jbe
xchg
mov
loope
aad
push
ficoms
rclb
lods
mov
fstpt
push
das
loope
ret
ljmp
dec
test
sbb
push
loope
in
fs
or
std
inc
jg
xchg
xchg
push
xchg
in
adc
popa
cli
stc
call
or
aaa
push
movsb
adc
pushf
inc
or
cmp
jp
fldenv
fsubr
jecxz
pcmpeqb
push
test
pusha
daa
loop
out
andl
dec
dec
add
push
xor
lret
sahf
sub
add
dec
xchg
cld
test
ffreep
enter
pop
movb
ja
push
cmp
mov
inc
sub
push
out
dec
repnz
inc
xchg
ljmp
out
das
addl
push
leave
fstpl
enter
jne
xchg
cmp
or
cld
mov
xorb
loope
or
cmc
cmp
mov
in
cmp
fs
xor
stos
std
cmpsl
loope
lods
or
test
jl
xchg
divb
scas
push
and
les
xchg
cli
jge
sbb
mov
sub
or
int3
sbb
jmp
ljmp
in
or
insl
test
jl
mov
dec
adc
pop
xchg
out
fs
push
lods
scas
inc
popa
roll
or
adc
and
mov
loopne
xor
ds
adc
lock
mov
inc
dec
cmp
or
adc
mov
jp
mov
mov
xor
mov
or
stos
sub
push
cltd
xchg
pop
pop
jl
mov
push
ss
insl
lea
jmp
inc
inc
and
fistl
mov
in
ja
pop
lcall
pop
push
sub
cld
fnstsw
enter
popa
mov
cs
outsb
dec
fildll
in
push
push
pop
jp
mov
ret
sbb
das
xlat
cld
out
test
dec
push
popa
push
rcrl
and
push
xchg
xlat
mov
andb
loope
andl
lret
jnp
pop
ljmp
cs
and
adc
addr16
shl
pop
fldcw
mov
jmp
push
test
dec
push
mov
ljmp
mov
loopne
arpl
and
and
jo
xor
cmp
call
dec
push
shrb
lret
stc
loop
enter
adc
insb
and
out
ret
jae
xlat
adc
clc
les
xchg
xchg
or
adc
or
cmp
inc
mov
and
and
sub
daa
adc
imul
push
jge
daa
cmp
xchg
mov
fidivl
xor
xorl
add
loop
hlt
cmp
cwtl
and
sbb
repnz
dec
bndstx
xchg
sarl
sub
inc
sub
into
adc
or
mull
imul
je
jle
ljmp
and
inc
or
push
ja
and
insb
pushf
push
into
scas
adc
sbb
cwtl
pop
mov
cmpb
dec
aaa
icebp
mov
movsl
insb
mov
call
dec
sbb
dec
stos
fs
mov
mov
xchg
clc
and
jbe
inc
fwait
popa
mov
jge
add
xchg
jo
xor
stos
scas
fistps
add
repz
jmp
sbb
xchg
int3
fcomp
mulb
test
call
mov
dec
loop
aad
cmp
push
push
xchg
mov
mov
sub
push
jnp,pn
nop
les
stos
push
or
cmc
pop
loopne
xchg
addr16
xchg
push
insb
shrl
adc
mov
sub
or
dec
inc
leave
dec
push
outsb
push
aaa
call
hlt
ja
xor
and
push
mov
pop
shrb
and
jmp
pop
jae
jb
es
xor
call
test
enter
test
xor
pop
insb
sti
lret
aad
xchg
mov
jno
data16
lret
adc
jmp
mov
mov
mov
push
pop
call
mov
or
hlt
cli
dec
mov
mov
test
ja
bound
sub
mov
filds
dec
out
gs
and
imul
dec
in
repz
mov
mov
pop
pop
insl
ljmp
cmp
rcl
repnz
ret
sbb
popf
mov
fdivrl
les
stos
cli
dec
fstpt
xor
pop
loop
movsb
inc
test
ret
pop
daa
repz
sbb
inc
sub
jnp
dec
shll
call
add
sbb
fadd
and
cmp
pop
int3
add
jle
out
cwtl
or
xor
cltd
xchg
or
mov
lods
gs
mov
sti
sub
repnz
ret
fs
into
jne
ret
sti
mov
fs
out
pop
add
and
cwtl
into
add
lds
andl
xchg
push
sub
inc
call
xchg
sti
test
pop
and
sbb
int3
fimull
stos
push
fstpl
jno
outsl
fistpl
subb
xorl
and
jno
cltd
in
cmp
stos
jp
mov
sub
enter
or
dec
sub
dec
push
dec
jbe
add
hlt
mov
aam
popa
or
jg
int3
pop
pop
lcall
sub
fwait
mov
push
or
sub
jae
outsb
pop
and
xchg
push
and
hlt
jecxz
popa
cwtl
xchg
sbb
fbld
test
ja
test
mov
jae
or
cltd
test
push
clc
lret
scas
gs
aaa
mov
xchg
or
loopne
sti
inc
js
sbb
sbb
mov
cmp
push
add
rcll
fs
dec
xorl
push
and
xchg
add
popa
aas
sbb
test
test
push
test
gs
lea
and
fsubrs
sub
and
adc
dec
in
cmp
inc
in
scas
jp
or
std
fdivrs
sub
inc
fs
add
or
sbb
icebp
mov
push
es
pop
xchg
leave
mov
lods
push
mov
insl
dec
sbb
psrlw
outsl
cmp
mov
jno
xchg
jb
xchg
push
sbb
inc
and
mov
imul
cmc
ficoml
insl
jg
int3
or
mov
jae
and
cli
imul
inc
loopne
mov
pop
clc
bound
lcall
notl
inc
clc
xor
fadd
mov
int
mov
cmp
jae
mov
ret
pop
cmp
mov
mov
dec
lds
hlt
push
syscall
imul
push
sbb
dec
incb
sarl
jge
xlat
cmp
dec
mov
sub
clc
cmpl
es
and
aaa
pop
cmp
das
sahf
lods
jp
adc
fs
adc
pop
mov
or
xlat
xor
xchg
scas
std
inc
mov
pop
cmpsb
xchg
adc
fs
movsb
test
inc
add
pop
icebp
lods
roll
jns
jle
mov
pop
mov
xor
mov
loop
fbstp
xchg
jle
mov
cmp
xchg
clc
scas
les
jae
sbb
lock
xchg
icebp
loope
cmp
aad
add
push
jp
pop
jbe
gs
insl
mov
icebp
dec
mov
lds
lea
shlb
xchg
pop
divb
cmpsb
into
jp
scas
fnstcw
dec
xor
jmp
divb
adc
out
and
arpl
into
cld
popf
in
mov
cmp
addr16
imul
test
jo
lret
pop
sbbb
xor
jb
jl
mov
jns
outsl
je
sarl
sbb
loop
cmc
subl
push
insl
mov
sub
or
inc
sbb
mov
orb
cli
sbb
stos
mov
push
jl
pop
scas
inc
sarb
or
lock
nop
add
mov
pusha
rorb
frstor
and
scas
add
imul
je
push
jnp
add
push
cltd
cld
insl
mov
jns
jg
jae
and
fnstenv
pop
pop
pop
arpl
pop
inc
mov
pushf
adc
sti
jnp
mov
mov
mov
mov
test
xchg
xor
leave
or
js
pop
pop
pushf
mov
test
add
mov
push
mov
lea
xor
outsl
dec
mov
fimull
loope
repnz
jg
lret
das
ja
adc
ret
push
or
scas
mov
out
jg
sub
mov
out
ret
fisubs
bnd
sub
data16
movb
sahf
movsb
or
add
mov
pop
jns
addr16
jo
jno
mov
fisubs
pop
out
test
xchg
insb
push
fstpt
hlt
aaa
nop
xor
stos
mov
xchg
stos
jmp
and
pop
mov
jp
dec
add
outsl
inc
mov
xor
pop
lret
xor
inc
cmp
cld
xlat
loop
shlb
addr16
std
pop
int
gs
xor
jecxz
sahf
dec
mov
lcall
notb
loop
pop
lret
xchg
shrl
mov
dec
aad
stc
mov
ss
pop
sti
cltd
test
and
lods
int
pop
mov
movsb
xchg
cmpb
rcll
rorl
add
fsubl
ret
in
sbb
out
xor
lret
gs
push
jnp
pop
arpl
sbb
addr16
jne
xchg
and
out
fidivrs
fs
mov
loopne
outsl
xchg
popf
imul
jae
dec
lcall
mov
sarl
jl
adc
mov
or
in
cwtl
fcomps
inc
adc
xor
sub
pop
cmp
xlat
lret
pop
inc
or
sbb
push
je
gs
mov
scas
pop
test
pop
sub
xor
jmp
hlt
sti
push
sar
ljmp
mov
inc
dec
lahf
movd
and
mov
shll
xchg
test
inc
add
pop
ds
gs
adc
ja
mov
frstor
push
stos
imul
xor
in
mov
mov
sbb
and
add
xchg
dec
and
aaa
out
or
pushf
imul
dec
mov
je
push
sub
xchg
jnp
dec
daa
and
xchg
push
stc
scas
add
jp
pop
or
lock
push
call
cld
cmp
ja
insb
add
in
js
aam
jns
jge
pop
pop
gs
mov
divl
mov
std
mov
ret
seta
arpl
hlt
test
adc
movsl
inc
mov
aas
lahf
mov
adc
test
dec
js
push
xor
test
sub
xchg
lock
iret
fs
shrb
or
jnp
jmp
lcall
pushf
cld
push
pop
fwait
outsb
ret
pop
inc
arpl
or
xor
stos
setl
mov
in
std
ret
mov
repz
add
test
cmc
out
test
jb
xor
sbb
mov
ret
sti
outsl
jae
mov
pop
mov
cld
xchg
repnz
add
test
push
mov
sub
out
fwait
test
push
mov
test
xor
lods
arpl
gs
aam
pop
daa
call
clc
hlt
fldlg2
lret
inc
or
pop
xor
xchg
mov
jnp
iret
push
inc
ljmp
outsb
jp
sbb
mov
add
push
pop
fstpt
adc
popa
mov
popa
fxch
xlat
lock
jnp
sbb
mov
inc
daa
and
in
xchg
adc
push
mov
push
xchg
shlb
push
jge
out
xchg
sbb
pop
sub
dec
cmpsb
pop
lods
mov
fildl
rcl
cwtl
icebp
shrb
xchg
inc
pop
pop
pop
int
fs
cld
shll
sbb
push
push
sbb
fucomip
jnp
lret
jne
imul
lret
cmp
mov
clc
insl
mov
xor
andl
or
dec
mov
scas
and
daa
jnp
imul
xchg
jg
enter
lds
xchg
xor
fiaddl
in
push
jg
out
outsl
fsubr
push
xchg
dec
movb
mov
cmpsb
stos
cltd
and
sub
xchg
and
sbb
jmp
jmp
call
sbb
shrb
sbb
outsb
std
jmp
lahf
movsl
das
push
mov
push
pop
cmpsl
lret
dec
ds
pusha
mov
js
jle
mov
xchg
lret
loope
dec
jg
add
jae
js
push
adc
adc
ret
and
jns
or
ja
out
mov
iret
jp
mov
jmp
mov
push
aam
cmpsb
stos
or
inc
jle
sbb
dec
jg
loopne
lods
cmpsb
shl
les
adc
jge
in
jae
add
lds
cmc
cmp
sbb
subb
push
jo
pop
and
push
call
xor
int
pop
push
fs
cld
sub
cmpsl
fistl
out
cmp
jp
cmpsl
inc
push
movsb
icebp
pop
xor
adc
jne
ret
dec
jbe
adc
aas
jne
dec
fsubp
jecxz
das
jns
fwait
cmpsl
mull
xor
clc
cmp
cwtl
push
inc
out
fdivrs
scas
les
shlb
sahf
mov
cmp
cs
fistps
ret
inc
xor
icebp
sahf
and
cmpsb
ficoms
and
hlt
sub
dec
or
add
fistpl
mov
stos
or
pop
inc
push
mov
jne
jae
shrb
bnd
xor
push
and
sub
or
lods
ret
xor
push
sub
sbb
ds
mov
shlb
pop
sub
dec
aam
loopne
fnstcw
icebp
das
aaa
popf
icebp
dec
enter
sub
dec
mov
lock
mov
clc
push
insb
fsubrp
push
std
cmpsb
add
xchg
mov
xor
outsb
jnp
dec
cli
xchg
jb
in
shlb
arpl
add
mov
dec
sbb
std
popa
scas
xor
sti
jp
incl
inc
popf
lcall
dec
aam
js
and
clc
je
mov
outsl
gs
loope
scas
push
jns
sahf
pop
repz
cmp
push
xor
jno
push
jge
xlat
notb
ja
sub
push
mov
lock
repnz
fbstp
imul
fsubl
xchg
jmp
pop
sub
dec
sub
loope,pn
lret
sahf
inc
into
mov
in
jecxz
mov
cwtl
sbb
outsl
push
dec
rclb
dec
orl
mov
or
xchg
test
adc
push
gs
fwait
hlt
dec
cs
repnz
stc
and
push
scas
jno
int
mov
xor
inc
push
pop
lahf
addb
jg
popf
adc
push
mov
jno
and
sahf
in
imul
cmp
mov
outsl
jae
and
mov
mov
movsb
dec
cld
lock
xor
ljmp
aam
jle
adc
add
pop
fiadds
aad
mov
sub
ret
imul
mov
into
jbe
pusha
adc
inc
cmp
adc
cli
out
pop
popf
scas
pop
xchg
push
andl
jb
movsb
iret
daa
inc
xchg
cld
test
call
pop
adc
xchg
scas
div
push
xor
sbb
jnp
jg
int
enter
mov
inc
out
xchg
xchg
in
and
dec
add
outsb
jae
notl
jae
xor
mov
jbe
mov
pop
push
flds
popa
divl
jp
int
push
enter
cmc
or
mov
ret
cmp
mov
sub
outsb
mov
xor
or
xchg
push
xchg
sub
push
mov
or
xchg
insl
and
sbb
and
and
fsubrs
dec
xor
pop
pop
pop
scas
js
subl
pop
popf
and
dec
adc
mov
loop
ret
add
aad
inc
xor
fdiv
inc
stos
sub
sbb
jg
outsl
xchg
int
jmp
mov
mov
pop
pop
pushf
pop
out
insb
push
xor
int3
jno
fcompl
adc
inc
ljmp
orb
jbe
shrd
lods
or
xchg
aaa
cld
mov
sub
add
mov
iret
pushf
inc
lret
cs
dec
call
jecxz
call
test
cmc
shll
gs
mov
fnstsw
test
cmp
enter
push
fimuls
lret
dec
mov
imul
mull
rolb
daa
imull
cmp
and
test
leave
adc
test
fisttpll
jno
xchg
and
sbb
out
jl
cmp
push
pop
xor
or
aaa
jle
scas
mov
xor
or
adc
cmp
cltd
test
xchg
outsb
xchg
pushf
outsl
jg
enter
and
andl
xor
mov
sub
lret
shl
dec
ds
or
adcb
das
dec
add
dec
mov
xchg
xor
jb
movsl
hlt
loopne
sbb
and
out
mov
jb
in
lock
mov
arpl
out
outsl
sahf
dec
out
stos
mov
mov
push
inc
movsl
inc
add
std
pop
add
dec
inc
jge
xor
fidivs
cmp
fs
ret
dec
cwtl
sub
fistpl
mov
cmpsl
ja
fsubs
neg
or
push
push
les
test
shlb
ret
notb
dec
sahf
inc
loopne
mov
mov
xor
int3
test
adc
ljmp
adc
imul
cmpxchg
lret
jge
cmp
out
sbb
icebp
add
push
sahf
or
xorl
mov
xchg
dec
call
scas
jnp
sub
mov
adc
jo
jne
xlat
pop
jg
mov
fstl
adc
jmp
adc
jmp
insl
cmp
xchg
aas
outsb
leave
das
sbb
movsb
push
xchg
mov
fwait
test
pop
imul
lods
mov
dec
roll
cmpsb
mov
sarb
pop
mov
mov
adc
xor
pop
aam
stos
cmpsb
sub
jbe
adc
jg
inc
cs
jno
addb
mov
sbb
mov
push
sahf
insb
mov
xor
roll
mov
nop
mov
xchg
aas
inc
xor
lods
cld
lahf
xor
ret
dec
das
cmp
loop
ret
dec
dec
sbb
add
push
lret
mov
lods
and
in
xor
push
mov
imul
ror
or
and
sahf
mov
in
jno
fwait
xchg
mov
out
dec
lret
and
icebp
lea
sub
iret
movsl
push
movsl
xchg
scas
bswap
sub
into
push
inc
mov
push
pushf
jle
cmp
loope
ljmpw
push
lods
jge
ljmp
ret
cmp
stos
shlb
shlb
adc
xchg
loopne
xchg
ljmp
ss
or
or
sbb
inc
je
aaa
xchg
mov
arpl
adc
mov
sarb
xor
stc
adc
frstor
mov
test
shll
mov
pop
pop
out
lahf
dec
mov
jae
das
and
imul
dec
push
mov
scas
inc
pop
ret
sbb
daa
mov
stos
jnp
test
and
lcall
or
cmp
adc
and
es
imul
mov
shrl
push
mov
into
adc
mov
sub
adc
xchg
adc
push
insl
sub
aam
sti
das
jb
jmp
test
je
inc
repnz
fists
shll
loopne
adc
mov
cmp
out
lock
outsb
movl
cmpsl
cltd
xor
pop
adcl
in
push
adc
xlat
test
lea
leave
cli
repz
push
addr16
sub
es
mov
xor
jnp
cmp
andl
cmpsl
and
push
hlt
jle
imul
push
sahf
jge
roll
inc
mov
int
aas
mov
push
fcompl
mov
sbb
mov
mov
mov
cld
cmpsl
bound
les
out
mov
xchg
fistpl
pop
std
fwait
push
mov
xchg
sti
xchg
sub
xchg
fucomp
lock
xchg
mov
lcall
dec
push
pop
cmpsl
xor
je
fistpl
jge
mov
or
ret
xchg
and
daa
adc
pushw
jge
fucomip
xchg
cmp
xchg
mov
xor
and
packssdw
sahf
push
sbb
cmp
inc
xchg
in
mov
adc
frstor
lcall
mov
in
mov
xor
push
sbb
lea
jp
xor
in
stos
aaa
xchg
fstl
in
dec
mov
xchg
xchg
std
jge
fstl
sbb
or
lret
adc
mov
xchg
mov
fwait
mov
jl
lds
cld
sbb
push
pop
jmp
jne
fimuls
imul
test
push
test
push
xchg
or
jae
jmp
dec
or
lret
or
std
lret
aam
fdivrl
lock
test
aas
mov
repz
rclb
lcall
add
mov
adc
sbb
out
inc
movsl
pop
js
adc
xor
ret
popf
mov
outsb
cmp
or
push
inc
fistl
lock
cwtl
mov
pop
in
loope
ret
fcmove
jne
filds
sbb
mov
sbb
push
dec
add
xlat
addr16
or
pop
je
pop
insb
and
in
mov
pop
jbe
in
sbb
sbb
gs
adc
cmp
test
inc
bnd
mov
jg
or
ficoml
pop
mov
xor
pop
ds
sbb
xor
jno
push
push
popf
inc
aad
mov
xlat
mov
or
mov
pop
nop
xor
xchg
add
inc
mov
inc
add
inc
mov
scas
std
ret
rcll
mov
pushf
jp
adcb
dec
std
loop
push
sbbb
aas
xor
xor
mov
inc
subb
sub
sbb
dec
movsl
pushf
in
xorb
cli
push
out
lret
push
inc
rcrl
cmp
xlat
dec
neg
jmp
in
into
adc
sbb
loop
int3
pop
mov
adc
mov
sahf
lret
test
jo
sbb
les
mov
test
xchg
ja
push
inc
in
jns
xchg
mov
xchg
cmp
in
inc
mov
movsl
inc
mov
ret
xor
xor
xchg
lret
outsl
xchg
stos
cltd
pop
sbb
imul
xor
sub
das
in
push
xor
outsb
out
sub
push
mov
mov
inc
movsl
fsubrs
xor
or
lds
inc
loopne
ja
dec
into
lds
mov
jecxz
aaa
push
dec
data16
bound
popa
push
cmc
shl
pop
adc
fcmovnu
rcr
push
mov
inc
cmc
jae
loopne
popa
out
mov
xchg
jle
loop
ret
movl
push
inc
add
pop
mov
push
or
sarl
mov
xchg
cld
add
aaa
xchg
sub
jo
xchg
mov
and
in
pop
mov
jecxz
xchg
lahf
clc
mov
sbb
lcall
dec
push
icebp
arpl
lahf
adc
scas
lods
cs
or
test
sbb
add
push
jno
dec
pushf
in
mov
mov
jl
scas
fs
cmpsl
pop
in
shrb
mov
mov
jne
cmp
movsl
rcr
push
mov
mov
mov
ret
and
ret
xchg
punpckldq
popf
imul
out
xchg
int3
into
pop
xor
jecxz
pop
add
test
mov
out
pop
stc
cmp
lods
ljmp
or
out
cs
xchg
dec
mov
cmp
test
mov
in
add
and
lcall
xchg
js
or
push
adc
int3
lahf
sbb
pop
pop
sub
in
in
loop
imul
out
in
pushl
jbe
xor
jae
cmp
cmp
pop
jl
and
js
fistl
in
or
adc
mov
test
scas
call
push
inc
shll
cs
aad
mov
orb
test
mov
clc
sti
and
rorb
loopne
xor
cmp
mov
cmp
fldl
mov
int
or
shlb
mov
push
movsl
add
push
aaa
jo
jecxz
xor
sar
cltd
push
movsb
insl
pop
js
test
pop
pop
push
in
push
clc
inc
mov
cmp
adc
push
pop
mov
jnp
lahf
cmp
and
add
xorb
loope
iret
pushf
stos
scas
pop
imul
mov
and
scas
es
repz
les
pop
inc
int3
dec
jecxz
and
fs
js
mov
cmp
pusha
xchg
sub
xor
je
daa
push
popa
nop
sti
test
mov
popf
test
and
or
add
xchg
ss
popf
mov
sbb
and
repnz
cmp
pushf
mov
cwtl
insb
and
pop
iret
arpl
shlb
loop
movd
adc
xchg
jle
mov
sahf
mov
jg
sub
add
test
ljmp
push
mov
jmp
xchg
mov
lds
jle
mov
data16
cli
aas
add
scas
mov
lret
jmp
dec
lcall
scas
into
jecxz
push
push
out
jns
call
xchg
cmp
mov
fisttpl
sub
push
inc
fwait
mov
stos
dec
mov
and
jns
mov
mov
sbb
mov
inc
das
inc
lods
cwtl
adc
call
mov
xchg
lret
dec
xchg
pop
call
xor
iret
mov
out
adc
sbb
inc
mov
push
aas
mov
or
inc
shrl
sub
loop
pop
pop
mov
push
popa
pop
scas
addb
sbb
or
movsl
divb
mov
and
and
sbb
jle
xor
mov
lcall
xchg
out
movsb
mov
lcall
jmp
cs
movsl
stos
lcall
push
fists
sub
sbb
dec
sbb
mov
mov
addr16
call
xchg
scas
xchg
int
jbe
je
pop
pop
adcb
icebp
add
fimull
mov
and
in
add
add
jmp
xor
fists
cmovae
sub
push
and
xchg
in
cmpsl
pop
push
cmp
mov
sub
push
cltd
add
add
sbb
setl
stos
adc
mov
jo
push
mov
sar
cmp
cmpsl
mov
icebp
es
test
cmc
push
dec
shl
jl
or
push
ret
icebp
adc
pusha
js
or
iret
adc
xchg
ljmp
aad
ljmp
mov
cwtl
and
push
push
daa
xchg
xchg
jnp
xchg
inc
in
mov
hlt
stos
insb
idivl
lcall
cltd
addr16
jle
xchg
and
jno
sub
js
loop
stos
xor
xchg
push
scas
and
stos
js
adc
pop
mov
lret
sbb
cltd
mov
sbb
pop
in
push
notl
mov
shr
or
pop
scas
movsb
sub
test
cs
aam
aaa
push
sbb
inc
fmuls
mov
or
cli
jno
call
xchg
mov
inc
mov
cld
dec
lds
pop
mov
and
daa
and
xchg
pop
xor
push
lods
int3
js
fwait
add
sbb
lea
push
jecxz
shrl
cmpsb
jo
stos
cmp
insl
cmpsl
fcomip
add
into
cwtl
addr16
jl
and
int3
sar
movsl
imul
or
ffreep
sarb
dec
aam
sub
mov
inc
jae
mov
movsl
adc
mov
inc
adc
xchg
mov
add
mov
orb
push
xchg
cmc
btr
repz
cld
or
pminub
push
in
test
mov
push
jnp
fnstcw
mull
out
sub
mov
pop
ficoml
hlt
and
pop
pop
sbb
add
jne
push
addr16
test
or
cmp
loope
inc
mov
add
mov
push
imul
std
mov
inc
movsl
adc
insb
push
ret
test
divl
lods
adc
xor
into
xor
mov
cmp
sub
lea
sarl
pop
loopne
out
cmp
and
cld
icebp
es
gs
jns
dec
jl
les
add
and
dec
bound
cmp
mov
imul
jnp
fdivl
push
lahf
sbbl
cmc
pop
adc
inc
jmp
mov
out
sub
mov
test
pop
xchg
rclb
mov
push
mov
push
aam
mov
ror
mov
mov
das
push
insb
cmpsb
inc
mov
ret
mov
xchg
push
ljmp
cli
and
sub
add
sbb
mov
mov
fisubrs
pop
outsl
sbb
dec
mov
sbb
cltd
ja
mov
or
cmp
xchg
cltd
jl
cs
pushf
ficomps
icebp
test
cmp
rcpps
adc
je
mov
pop
mov
sbb
shl
fmull
jecxz
sub
ss
mov
pop
movsb
addl
add
add
incb
int
outsl
fucomi
dec
orl
or
loope
mov
sub
sub
add
lcall
cwtl
test
mov
jmp
jg
sub
jmp
lock
xchg
incl
inc
ret
and
xor
pop
hlt
pop
sub
loopne
fdivr
gs
insl
mov
mov
xchg
sbb
popa
test
idivb
add
stos
mov
dec
dec
sbb
sbb
pop
jno
pop
add
icebp
ljmp
adc
mov
lock
dec
adc
enter
and
pusha
int
in
lds
clc
mov
inc
add
jp
adcl
pop
pop
or
shll
adc
shll
cli
fsubrs
xchg
mov
inc
add
lret
dec
shlb
outsb
and
push
or
jns
out
imul
stos
cmp
jge
mov
loop
and
sbb
scas
inc
lcall
sub
in
ficoml
inc
rorl
daa
or
fst
add
dec
les
jecxz
test
or
and
shl
jns
test
add
pop
test
js
adc
xchg
addr16
mov
cmc
sub
pop
lods
pop
and
push
push
cltd
xchg
xor
imul
mov
mov
icebp
js
inc
jmp
or
xchg
sub
fstpl
movsb
push
xor
in
loopne
sahf
cmpsl
test
add
test
xor
in
loopne
jne
mov
sub
xchg
imul
mov
sub
jecxz
lds
mov
rclb
inc
pop
pop
adc
cmp
cmp
shl
add
sbb
push
enter
cmpb
scas
push
xor
xchg
push
push
popf
adc
test
cmp
sahf
mov
push
mov
inc
pop
fnstsw
jo
pop
sahf
cmp
nop
mov
push
movb
scas
or
mov
inc
push
mov
ret
ficomps
fs
mov
xor
outsb
add
and
pop
out
test
inc
imull
inc
cld
daa
pusha
xchg
mov
int3
xchg
mov
jnp
jb
sub
test
jp
add
das
mov
pop
in
loop
mov
mov
ror
push
iret
mov
pop
mov
popa
inc
add
int3
inc
divb
xor
leave
cmp
xorb
fxch
iret
xor
jmp
repz
mov
int
jno
scas
ret
aaa
mov
jbe
andb
lahf
aas
jge
push
aaa
sub
adc
enter
out
pop
bnd
dec
xor
fstl
jp
std
xor
ja
jge
inc
stc
jb
mov
mov
icebp
lock
inc
pop
sarb
xchg
xchg
and
lahf
pop
cs
jnp
and
adc
inc
push
addb
xor
xor
sub
jge
inc
dec
xor
and
dec
fwait
push
arpl
ss
pop
mov
push
jl
ljmp
mov
mov
adc
leave
jne
push
mov
or
test
fmul
daa
mov
mov
add
or
lahf
sahf
jno
or
dec
add
cmpsl
fstpt
insb
movsl
dec
cmp
cmpb
out
clc
xchg
movsl
cmp
sbb
lods
leave
xchg
mov
nop
call
xor
push
inc
jle
stc
ficompl
sub
arpl
adc
add
jmp
out
adc
fisubs
fwait
stc
in
push
mov
push
repnz
push
inc
sbb
data16
xchg
cmp
jmp
incb
in
xor
add
movsl
cmpsl
das
cmp
sub
fs
arpl
imul
xchg
gs
mov
faddl
inc
xor
icebp
shlb
clc
pop
add
push
aaa
dec
cmp
xchg
popa
or
outsb
push
sbb
pop
stos
inc
pop
lcall
adc
daa
not
daa
mov
test
pop
test
push
aaa
mov
sub
xchg
bnd
add
add
lcall
and
add
mov
rcll
inc
mov
dec
addr16
inc
sbb
sub
xchg
xor
add
sub
xor
insl
dec
fidivrl
jmp
push
pop
add
and
push
lcall
icebp
les
sti
mov
call
pusha
pop
cld
push
mov
adc
sti
lock
mov
sbb
fdivp
xchg
adc
and
jmp
shlb
testb
or
mov
and
imul
mov
jp
cmp
xor
iret
andb
fst
dec
cmp
outsl
test
xor
mov
aas
enter
scas
mov
les
data16
or
sbb
mov
push
leave
je
pop
mov
or
ljmp
out
or
int
sbb
push
or
enter
int3
popf
scas
rcll
push
ret
xchg
data16
xchg
enter
sub
xlat
inc
stc
loop
cmp
sub
mov
and
xchg
cmp
xchg
js
mov
mov
mov
dec
fnstcw
jp
fidivs
mov
xor
inc
dec
insb
not
mov
shlb
popa
adc
sbb
xchg
js
add
setae
sub
loop
fistpl
add
jmp
mov
sbbb
push
addb
dec
mov
jl
repnz
xchg
xchg
and
test
pop
fninit
sub
insl
jecxz
xchg
ljmp
in
pop
in
or
cmp
pusha
fs
jo
shlb
and
rclb
inc
pusha
lea
sub
or
jb
ja
iret
mov
mov
pop
jmp
jnp
outsb
jp
pusha
dec
adc
pop
addr16
test
repnz
sub
and
fisttps
adc
pusha
repz
mov
push
xlat
jl
not
das
lods
pop
and
sub
mov
jb
aad
jnp
clc
lea
mov
mov
andl
js
ret
lock
cmp
stos
cld
out
ja
or
push
clc
mov
out
testb
lods
cmp
jns
dec
fimuls
sub
sahf
aad
mov
jbe
insl
mov
mov
cltd
xor
jmp
adcl
cltd
push
shrd
fidivrs
test
lock
inc
adc
mov
filds
xor
inc
mov
mov
mov
out
sub
jbe
fcompl
dec
add
mov
or
push
inc
shlb
into
ror
pop
xorl
stc
add
fistps
jle
mov
mov
push
cmpsl
jb
dec
mov
xlat
xchg
add
push
push
push
dec
leave
mov
rclb
fbld
shrl
cltd
ret
xor
rclb
add
pop
rorl
dec
addb
push
aad
fwait
sub
sub
movsb
inc
idivb
fsub
pop
dec
xor
lret
ljmp
mov
dec
fs
in
inc
sub
fisubrs
pop
cmc
mov
rcrl
jg
cmp
pop
and
and
mov
and
stc
cld
push
loopne
out
cmp
leave
push
mov
loop
mov
fs
cmc
leave
xchg
dec
test
adc
clc
leave
xor
js
inc
mov
dec
mov
je
mov
jmp
inc
push
and
cmp
sbb
in
xchg
sahf
loop
sub
ja
dec
adcb
es
fiadds
jnp
cmp
push
xchg
nop
fsubrs
pop
xchg
or
insl
or
push
inc
ficomps
xchg
xchg
pop
mov
and
rolb
in
out
push
push
mov
arpl
push
sar
pusha
ret
es
xor
mov
sub
test
sub
scas
bound
xlat
push
jg
lret
xor
in
mov
jne
xor
add
cmp
push
hlt
lret
push
gs
push
dec
and
push
and
lock
roll
hlt
cmp
pop
xchg
ja
mov
add
popf
dec
lods
jg
rolb
inc
jb
int
xchg
dec
scas
movsb
sub
ljmp
lock
and
roll
jns
xor
mov
push
mov
push
scas
jnp
negb
call
in
repz
shrl
add
xchg
ficoml
into
pop
jo
push
push
ljmp
mov
sti
mov
cmp
out
adc
or
push
sbb
decb
jmp
imul
jbe
pop
jo
mov
pop
aam
jbe
pop
nop
arpl
ja
push
jg
mov
rcll
std
push
mov
xor
or
mov
jns,pt
into
pop
out
and
mov
add
leave
xchg
sti
dec
ja
add
cld
iret
cmc
cmp
cld
movsb
dec
xor
movsb
sbb
jo
sbb
mov
idivb
fucom
imul
notb
mov
int
sti
gs
mov
push
ficoml
iret
dec
pop
movsb
pusha
xor
mov
add
into
fldenv
pushf
or
je
jb
sbb
mull
leave
or
call
out
inc
pusha
sbb
mov
push
xchg
push
popf
cmpsb
icebp
jle
fldl
arpl
fistpl
lea
mov
fucomp
mov
lcall
in
sbb
mov
sub
add
jge
jmp
leave
lahf
mov
cmpsl
movsl
jg
loope
inc
add
mov
in
push
imul
adc
inc
aaa
movsl
aad
xlat
ljmp
xchg
addr16
xor
and
jg
adc
popa
jne
push
inc
pop
pop
out
and
jmp
push
not
cmpsl
into
pushf
sub
out
stos
add
loopne
std
ja
push
xchg
call
into
sbb
fldenv
jecxz
in
pop
dec
imul
daa
sbb
jmp
lret
push
jp
or
std
mov
mov
mov
dec
mov
pop
xchg
fcmovu
mov
cmp
pop
repz
pop
stos
xchg
xorl
sbb
mov
mov
mov
jge
outsl
pop
push
ficoml
ss
adc
cmp
stc
mov
scas
aaa
pop
enter
movsl
sbb
pushf
pop
adc
lret
rclb
mov
out
cmc
fnstcw
and
dec
sbb
push
test
orb
aaa
jle
adc
sub
ret
test
aam
or
add
jnp
in
fwait
shrl
mov
lcall
pop
xor
sub
jge
push
ftst
mov
mov
adc
pop
ret
xchg
out
jmp
cmp
roll
movsl
lea
jno
in
cmpsb
std
loope
sti
pop
outsb
outsl
into
and
dec
fildl
push
insb
sbb
dec
into
sbb
adc
sbbl
cmpsb
add
js
pusha
movsl
pop
inc
cmc
pop
fsts
lret
push
lret
out
pop
and
scas
arpl
inc
mov
test
inc
int3
push
pop
sbb
xchg
cmp
test
jmp
adc
push
in
out
mov
xor
push
scas
fcmovnb
and
mov
mov
flds
mov
jle
outsb
xchg
mov
fidivrl
call
cwtl
pop
jbe
loop
or
adc
imul
hlt
shll
test
enter
out
lret
daa
test
add
cld
inc
orl
shlb
ja
es
sub
daa
icebp
push
add
ja
ret
int3
into
pop
test
xchg
sub
sti
jmp
dec
mov
mov
orl
ss
cltd
je
add
cmpsb
aad
out
shrb
in
or
add
cli
push
pop
mov
or
or
adc
add
aam
in
imul
mov
test
stos
inc
mov
mov
xor
icebp
cltd
roll
movsl
insb
sub
cmpsb
add
mov
jl
jl
jmp
inc
and
loop
dec
fstpl
call
inc
jmp
dec
fsincos
or
loop
lds
jg
pop
in
addb
int3
mov
jecxz
call
in
rol
xor
jb
icebp
ror
inc
test
push
or
mov
jge
cli
sub
inc
jg
xor
inc
add
loope
out
xor
in
add
adc
adc
push
ljmp
jnp
sub
sbb
jae
es
out
movsb
into
jns
pop
push
push
lret
int
push
dec
pop
mov
sub
xchg
mov
cmpb
out
xor
out
dec
cltd
push
inc
lcall
fisubl
and
clc
dec
xchg
aas
mov
push
sub
adc
mov
xor
sbb
or
cs
or
jle
scas
cli
sbb
add
loope
dec
xchg
mov
pop
lret
les
or
jae
sub
push
mov
imul
pop
sub
es
xchg
sbb
out
or
ret
outsl
jmp
mov
lret
test
xorl
dec
mov
mov
sbb
gs
dec
xor
cld
mov
jne
mov
rol
mov
stos
mov
xchg
push
jnp
stc
push
cmpsl
sbb
xor
aas
push
jecxz
out
mov
ret
cld
aam
dec
dec
push
testl
mov
inc
enter
popa
shr
lret
mov
sarl
pushf
and
mov
sbb
cs
sub
add
dec
add
push
dec
int3
test
orl
xchg
xor
dec
call
pusha
bts
mov
sub
enter
xchg
xor
sbb
roll
xchg
pop
movsb
call
loope
mov
bound
loop
xor
jnp
movsb
sub
ds
xchg
cs
popa
sbb
mov
xor
sub
popf
imul
jo
mov
inc
in
cmp
mov
ret
pop
mov
mov
push
sub
fsubrl
popf
jecxz
je
inc
mov
or
or
ljmp
hlt
adc
xlat
testb
clc
cli
sti
mov
add
popf
sbb
pop
dec
popa
pop
pop
pusha
sbb
imul
dec
negb
add
sti
adc
mov
and
out
mov
dec
push
xchg
xor
jl
push
and
inc
sub
enter
fsubrl
sbb
xor
shll
jp
mov
mov
insl
fsubl
mov
add
adc
sbb
mov
pusha
and
xor
es
jge
repz
jb
out
in
push
test
xchg
gs
std
and
aam
std
add
jns
mov
bswap
rclb
pop
nop
lcall
stos
adc
xlat
loopne
cmp
inc
add
pop
loope
jge
in
cmp
adc
push
or
sbb
cld
inc
mov
xchg
frstor
jle
popa
pop
jge
cmpb
setbe
jle
pop
xchg
test
and
adc
jb
inc
sub
aaa
repnz
or
mov
mov
push
stc
pop
dec
and
fsubrl
rcll
aas
lahf
add
aam
in
cmpsl
cld
lcall
push
sbb
test
gs
out
and
jb
xor
aas
andb
jge
pop
rcl
int3
xchg
testl
and
pop
pop
add
push
cmpsl
add
pop
xchg
pop
mov
and
pop
mov
mov
push
jecxz
cmp
imul
cmc
adc
arpl
mov
pop
iret
aad
fdivr
pushf
adcb
outsb
ret
inc
and
fbstp
or
xor
ljmp
pop
pop
adc
push
fs
sbb
daa
sbbl
jbe
stc
repz
repz
cld
push
in
jecxz
push
mov
ficompl
dec
stc
cltd
lds
xchg
add
xor
dec
popf
pop
mov
inc
sbb
das
fistpll
push
insb
imul
iret
sub
or
loop
or
test
cmpl
jnp
push
loopne
insb
add
push
pusha
add
cmp
xor
out
test
stos
pop
pop
lret
sub
xor
insb
mov
sub
cld
mov
jmp
ja
fwait
pop
inc
add
push
mov
fstpl
xchg
lcall
cmp
pop
ret
aaa
xchg
iret
add
adc
cmp
cmp
lret
and
fisubs
dec
int
lahf
push
pop
inc
inc
bswap
or
mov
push
fisttpll
jmp
pusha
cmp
jl
mov
movd
mov
repnz
fdivrs
ret
imull
mov
dec
inc
sbb
cmp
or
outsl
test
mov
cmp
mov
and
cmp
sbb
aam
movsb
xchg
mov
addr16
adc
pop
pop
aam
add
stos
xchg
xor
xchg
add
dec
ja
jle
mov
xor
sub
sahf
jecxz
cmp
dec
push
mov
mov
fidivrl
outsb
fisubs
or
mov
andb
fs
mov
shrb
mov
pop
pop
xchg
add
pushf
mov
mov
in
aaa
imul
pop
cmc
loopne
loop
mov
jns
or
movsb
movsl
std
mov
mov
mov
loope
cmp
pop
inc
bound
mov
adc
les
sub
sbb
rol
xorb
push
sbbl
lods
inc
mov
pop
dec
cmp
js
cmp
mov
sti
mov
pushf
push
shlb
or
and
mov
call
in
testl
incb
sub
dec
cltd
xlat
xor
enter
sbb
push
icebp
std
and
xor
cmpsl
xor
mov
lret
adc
xor
mov
daa
push
adc
mov
jl
cwtl
inc
cmpsb
jecxz
daa
adc
mov
adc
sti
pop
cltd
aas
mov
dec
divl
push
nop
inc
sbb
jl
or
jecxz
popf
enter
jno
out
lds
aad
insl
and
movsl
andl
pop
add
adc
add
cmp
and
or
pop
inc
sbb
lds
add
mov
xor
and
das
or
cld
or
cmp
insl
hlt
leave
cld
or
test
push
sbb
in
call
dec
xchg
out
popf
inc
and
bound
mov
adc
mov
xchg
pop
nop
adc
lods
adc
sub
sahf
pop
std
bnd
or
cmp
add
mov
loope
mov
leave
clc
mov
add
movsb
jns
mov
mov
aas
lcall
push
mov
shlb
shll
fdivrs
sub
lcall
sub
mov
inc
bound
das
adc
je
xchg
lods
repz
add
mov
jb
les
lea
mov
push
dec
jns
pop
out
aas
dec
lcall
hlt
mov
xchg
arpl
fistpll
or
jns
pop
subb
or
in
sbb
xor
cwtl
pop
push
lahf
mov
xor
mov
into
lods
inc
pop
xlat
or
idiv
push
sub
mov
dec
xchg
ret
clc
pop
jle
inc
jp
in
ret
ficompl
adc
sahf
inc
mov
adc
aad
sbb
dec
lds
push
dec
aam
cmc
icebp
fisubrl
lret
jbe
imul
push
dec
je
or
cltd
jne
scas
xor
add
lea
enter
xor
xor
aad
pop
insb
mov
mov
mov
push
adc
fbld
stos
dec
and
jl
clc
xor
dec
mov
jno
xchg
sbb
in
sti
inc
sub
inc
gs
das
cltd
outsl
les
ret
fcomps
or
pop
adc
js
pop
es
notb
inc
loop
mov
iret
mov
int3
fs
adc
lods
aaa
cmp
inc
call
jno
inc
enter
pop
sbb
lods
and
mov
cld
add
vaddsd
jle
mov
movsb
mov
test
push
aad
mov
test
add
daa
je
xchg
pop
stc
dec
cmp
out
jbe
xlat
mul
xchg
repnz
outsl
rcl
insl
and
mov
xor
popf
xchg
arpl
fwait
aaa
jno
xchg
scas
sub
sbbb
daa
les
push
loop
adc
cmc
aad
scas
sbb
fidivrl
push
mov
icebp
push
sarb
sub
test
js
gs
push
aad
dec
xchg
sub
test
popa
rclb
scas
inc
stc
and
lds
or
sub
add
jnp
pop
rolb
xlat
pop
sbb
pop
fxch
xchg
lock
rol
pop
in
xchg
push
fsubrs
fwait
cmc
shl
outsl
lahf
call
sarb
inc
fstp
mull
sub
out
cmc
mov
jb
arpl
fucomi
lahf
sbb
mov
inc
pop
mov
testl
xchg
ds
rorb
add
sub
lods
sub
stc
jno
sti
xchg
cltd
mov
dec
out
mov
rcrl
cwtl
or
inc
dec
mov
or
add
popa
in
mov
in
mov
lcall
in
push
jno
pop
cmp
inc
setne
subl
mov
insb
in
pop
rcll
aaa
jne
fistpl
inc
inc
dec
mov
hlt
push
cs
mov
jb
push
xor
sbb
mov
dec
in
add
and
xchg
fmuls
push
pop
jle
leave
push
jg
xor
and
adc
push
and
fsub
mov
and
mov
ja
mov
lods
add
cld
or
aas
sub
je
xor
dec
mov
dec
int3
xchg
mov
jge
xchg
dec
push
pushf
pushf
in
movsb
orl
mov
ret
fs
push
jns
js
dec
fwait
andb
pop
mov
imul
hlt
xor
shll
inc
mov
insb
sub
jne
cmpb
mov
ljmp
loop
mov
lret
pop
jnp
jbe
add
lock
in
push
cmp
pushf
cs
adc
and
dec
or
ljmp
mov
push
dec
das
dec
xchg
lock
clc
sub
popf
xlat
pop
sbb
or
lea
gs
repz
mov
hlt
sub
out
push
xor
orl
rcl
test
mov
adc
lds
call
fs
mov
add
add
cmp
xchg
push
std
push
adc
pop
mov
and
push
lods
pop
cmpsb
std
lock
xchg
and
dec
arpl
fwait
test
out
mov
addr16
pop
mov
daa
dec
pop
sub
and
out
rcll
push
push
inc
cmp
mov
clc
icebp
lcall
jns
in
dec
mov
mov
jecxz
jno
popf
test
in
out
repz
or
pop
push
shll
mov
mov
out
mov
into
mov
in
lods
addl
lds
adc
ficomps
ds
jcxz
faddl
jl
subl
rolb
in
sub
fldl
inc
or
dec
test
adc
insb
xor
mov
or
enter
dec
sbb
lcall
xchg
sbb
rorb
movsb
fcoms
cmp
push
mov
aaa
pop
movsl
outsb
mov
sub
in
inc
lea
adc
jae
rorl
pushf
pop
push
shrb
shl
jecxz
push
xor
adc
adc
mov
lds
lods
lds
cs
jae
pop
test
decl
inc
insl
enter
mov
sbb
push
inc
hlt
rcrb
jno
imulb
lahf
or
popa
into
xchg
sahf
inc
xor
sbb
fsubrs
int3
push
cmp
arpl
push
xchg
outsb
ds
jnp
jb
jno
mov
dec
sahf
lret
mov
pop
scas
repz
sbb
cmp
pop
nop
mov
xchg
out
sahf
mov
mov
sub
aas
cli
add
sbb
stc
das
pop
xchg
out
inc
push
pop
rorb
sbb
sti
and
mov
lods
pop
dec
icebp
dec
push
sbb
jg
add
add
rol
xchg
cmp
imul
add
sbb
pop
fldln2
adc
scas
jecxz
add
leave
loope
ja
adc
sbb
and
mov
test
shl
fwait
jl
clc
adc
mov
adc
mov
push
shl
dec
mov
pop
xchg
dec
pop
jae
outsl
mov
push
lods
lcall
pop
inc
xchg
fadds
jmp
aas
fwait
scas
xchg
pop
xchg
adc
xchg
xor
dec
mov
rol
icebp
mov
imul
dec
push
or
addr16
pop
or
xchg
mov
xchg
jecxz
imul
into
or
es
sbb
adc
outsl
inc
int3
arpl
ljmp
push
out
push
push
test
push
and
push
push
out
test
insb
dec
stos
aas
cwtl
loop
or
outsb
and
stos
sbb
mov
sub
push
pop
in
cmc
or
adc
inc
mov
push
or
push
cmp
ljmp
jns
and
and
pop
out
or
arpl
mov
adc
dec
lock
call
into
and
xor
pop
mov
leave
scas
test
pop
test
mov
mov
lds
insb
push
add
int
cmp
out
adc
mov
pop
lea
xor
std
dec
fstpt
shrb
cmp
xor
pop
mov
icebp
std
push
iret
inc
mov
pop
popa
outsb
test
movsl
cmp
mov
test
test
or
inc
cmp
xor
js
int
adc
cmp
lret
add
ror
out
cli
outsl
cmovo
jbe
cmp
sbbb
pushf
outsl
rolb
pop
cmp
lods
std
xor
fisttps
jge
rcrb
ret
jle
adcb
mov
push
pop
lock
adc
xchg
and
pusha
and
mov
xlat
xor
in
into
dec
jmp
sub
cmp
pop
jge
add
xchg
jl
jle
into
aad
inc
push
and
mov
inc
enter
jne
push
loopne
dec
mov
add
sbb
mov
imul
jp
lea
mov
sub
mov
aaa
and
cwtl
insb
ss
and
add
or
stos
dec
les
icebp
mov
and
push
fisttpl
aas
mov
ret
mov
or
inc
cs
cli
lds
add
push
sti
dec
ja
mulb
mov
cmpsb
xchg
cmpsl
cld
lcall
cld
dec
jmp
cs
mov
push
add
xchg
inc
mov
shlb
jno
lret
int3
sbb
ret
push
adc
push
movsl
or
xchg
fs
insb
mov
fisttpl
inc
and
mov
fildll
fsubrl
mov
dec
das
mov
jb
xchg
mov
cmc
jl
push
and
jle
dec
mov
mov
sub
inc
cld
or
or
stos
aam
sbb
ja
mov
xor
mov
push
mov
out
xor
adc
dec
test
ss
dec
mov
inc
ss
or
cltd
adc
or
fimull
lret
push
xlat
xchg
and
inc
fildl
add
aam
inc
testb
xlat
jle
cmp
fst
mov
cmp
cmpsl
mov
js
shl
lods
dec
les
cmp
ds
adc
sub
pop
inc
dec
and
rclb
popf
aam
mov
ret
xor
pop
jmp
sarb
cs
shlb
inc
repnz
push
cltd
sbb
pushf
xor
cmc
fsubrs
inc
cs
aas
insb
cmc
pop
xchg
xchg
mov
std
inc
fwait
add
es
add
mov
sti
sub
mov
pusha
mov
rclb
adc
add
inc
lret
inc
cld
movsl
or
je
divl
sbb
fistpll
popa
xor
test
push
lea
mov
xor
scas
pop
hlt
mulb
mov
shll
jb
mov
adc
add
dec
ret
push
mov
shrl
popa
or
dec
xchg
mov
ljmp
push
adc
mov
insb
hlt
aas
pop
test
insl
adc
xchg
ja
jb
inc
dec
insl
hlt
or
stos
inc
jne
jmp
insl
cmpsl
in
fiadds
add
repz
std
fsubrs
leave
in
les
push
sahf
adc
hlt
xor
std
dec
insb
lcall
fldenv
jl
addr16
push
sub
fwait
lods
xchg
adcl
mov
cmp
pop
pop
clc
rcl
imul
out
jb
sub
popa
and
pop
and
dec
mov
xchg
xchg
inc
xor
cmc
inc
sahf
add
les
into
les
and
popa
cmpsb
sbbl
es
daa
inc
adc
in
fsubrp
dec
push
into
les
push
testb
pop
mov
addr16
std
lahf
movb
xchg
lods
bound
inc
bound
bound
mov
filds
sub
sub
fmull
insl
sbb
mov
adcb
lcall
aam
je
imul
dec
mov
shrb
arpl
push
pop
orl
inc
out
out
push
cmpsl
insb
into
mov
ja
and
mov
xlat
inc
adc
sarb
mov
ror
popa
stos
and
pop
aas
aas
test
lods
out
addl
mov
js
popa
push
jne
shrb
mov
mov
adc
std
mov
jg
pop
imul
repnz
jns
daa
inc
cli
cmc
aas
push
dec
or
push
pop
jl
pop
jno
jae
movsb
adc
iret
cmp
sbb
sub
push
popa
pop
insl
push
testb
int
sbb
xor
or
lcall
hlt
scas
sub
xchg
aaa
add
rcrb
mov
jne
pusha
push
push
mov
pop
lock
mov
cld
clc
call
xchg
cmp
sti
dec
jo
movl
mov
or
repz
movsl
iret
pop
in
outsb
jb
inc
xor
stc
inc
ret
dec
inc
pop
leave
out
add
pop
fiadds
leave
orb
loope
adc
pop
pop
push
xchg
loope
roll
or
mov
and
mov
lret
and
mov
aad
xchg
cmp
mov
mov
inc
js
lods
repz
pop
sub
pop
xor
jbe
xor
xchg
pop
bound
adc
daa
stos
and
insl
mov
pop
mov
outsb
in
mov
inc
daa
and
repnz
jae
fsubs
mov
xchg
into
mov
cmp
icebp
mov
idivb
cld
icebp
dec
lahf
loop
jbe
enter
scas
cmp
add
je
iret
pusha
inc
adc
pop
shrl
notl
cs
adc
inc
push
int3
ret
and
or
test
xchg
inc
movsb
fnsave
scas
int3
push
mov
fs
push
mov
xor
sbb
rep
stc
ss
ljmp
fs
out
inc
sbb
gs
lods
xlat
jo
das
popf
mov
pushf
sti
xlat
std
add
mov
pop
pop
adc
clc
xor
shrb
xor
enter
fisttps
push
jg
popa
sub
les
es
mov
xchg
cmp
mov
jp
mov
inc
mov
push
mov
pop
iret
inc
outsl
ljmp
push
repz
in
and
popf
mulb
sbb
cmp
xchg
or
incb
xor
gs
mov
jno
mov
jecxz
lahf
push
repz
out
jg
mov
call
cld
stos
cmp
aam
add
fidivl
xchg
cmp
inc
jns
clc
pop
jle
jmp
jo
jbe
stc
add
imulb
pop
xchg
jge
aad
pop
jp
shl
test
and
adc
xor
ja
push
movsb
cmc
push
in
xchg
scas
and
jl
rorb
loopne
fbstp
fdivs
sub
mov
movsb
testl
sub
iret
mov
lret
sti
lods
mulb
shr
cli
dec
in
ret
jnp
pop
pop
dec
inc
xlat
mov
mov
loope
test
lret
test
outsb
push
jl
sbb
icebp
in
sti
sub
das
jne
enter
xor
les
lock
xchg
lret
jbe
pop
test
lahf
data16
imul
adc
ja
xchg
lret
mov
dec
and
out
push
mov
and
mov
inc
int3
push
loopne
mov
mov
add
aaa
popa
push
insl
jg
xchg
ss
vpunpcklqdq
lock
icebp
xchg
std
sbb
lds
push
inc
dec
lods
insl
mov
rclb
or
and
inc
out
sub
pop
out
dec
pusha
in
add
imul
dec
push
mov
push
push
or
fnstsw
ss
cmp
sbb
xor
iret
mov
mov
mov
jg
arpl
add
mov
es
jge
jo
dec
lock
lahf
and
fistpll
inc
fwait
or
adc
sub
enter
test
lock
sbb
sbb
inc
lods
std
clc
sub
out
sub
pop
pop
sahf
stos
leave
rorl
imulb
icebp
fchs
xchg
ret
fnsave
sbb
push
pop
pop
mov
and
cmp
adc
or
int3
cmc
addr16
out
call
xchg
mov
dec
jl
xor
dec
daa
popa
aaa
mov
jge
es
jle
sub
xlat
in
xor
xor
mov
push
jp
dec
sub
cs
mov
push
jno
out
sbb
xor
push
xor
cs
mov
mov
xlat
jo
add
rep
xchg
fmull
xchg
sub
fwait
pop
xor
subl
cmp
xchg
stc
cmc
pop
fsubrs
clc
in
add
push
lret
in
push
jo
jp
scas
push
addr16
and
xor
pusha
cmp
das
imul
outsl
loop
push
jecxz
jge
rclb
ja
popa
in
jns
xor
pushf
cs
stos
out
cltd
inc
inc
fwait
xchg
sbb
addb
push
js
pop
mov
lea
xchg
enter
les
pusha
es
and
psrad
ret
sarb
stos
adc
mov
aam
jmp
mov
fwait
in
jae
je
movsb
add
jnp
and
data16
outsl
daa
xor
fcomps
push
lret
jl
pop
fyl2x
test
mov
push
push
jae
pop
aad
xlat
push
sahf
in
or
cmpl
sbb
fsubp
mov
test
filds
cmp
fsub
or
push
adc
ret
pop
arpl
jae
add
jns
or
int3
xchg
lods
fiadds
add
add
xor
in
lods
icebp
es
test
fmuls
or
cld
and
xchg
lods
mov
test
lret
mov
sub
stos
cmp
pop
insl
xchg
sub
pop
inc
mov
ljmp
mov
dec
xor
cli
mov
test
outsb
loope
popl
xorl
sbb
mov
mov
jo
dec
inc
push
adc
dec
sub
mov
jp
in
sti
lock
pop
in
aaa
jns
adc
in
jl
nop
inc
test
or
leave
mov
push
roll
push
lea
xor
dec
or
loopne
or
mov
popa
shll
xlat
push
xchg
add
mov
imul
xchg
dec
enter
cmp
inc
addl
cmp
pusha
xor
fstpl
pop
addr16
pop
sub
jo
pop
mov
cld
mov
lods
decb
xor
jno
sbb
adc
std
out
cltd
leave
mov
daa
jne
cmc
xor
adc
nop
add
jle
stc
subb
and
ja
rcrb
sbb
cwtl
daa
add
daa
sub
stos
mov
lret
aas
xchg
mov
ss
cli
outsl
xchg
mov
xor
jle
cmp
jmp
and
xor
icebp
movb
mov
add
pop
push
mov
adc
adc
ds
fiaddl
jno
mov
xchg
jnp
mov
scas
dec
outsb
jle
fcomps
ror
pop
mov
xchg
stos
adc
cltd
adc
jp
repnz
and
and
in
mov
add
outsb
insl
mov
jno
sahf
rcll
push
sub
inc
data16
xor
roll
aaa
out
insl
jp
cmp
leave
addr16
cld
incb
jae
push
sbb
insl
clc
mov
mov
xchg
iret
mov
out
cmp
in
fcompl
jne
cmp
jg
push
fstpt
in
lret
and
sub
loopne
push
es
fwait
mov
jge
orl
dec
adc
mov
adc
cmc
sub
xchg
xlat
outsl
jp
and
rclb
loopne
sub
jle
sti
iret
das
out
sbb
jle
addr16
popa
seta
lahf
pop
pop
inc
fldcw
jno
in
test
ss
mov
cmp
push
xchg
jne
sbb
and
xchg
daa
insb
adc
jp
xor
cmpsb
js
bound
imul
mov
jecxz
lods
push
jmp
xor
mov
dec
adc
cmp
pop
aad
js
and
and
loop
dec
outsb
shrb
out
mov
insb
shlb
adc
cmp
add
sub
xor
xlat
mov
mov
mov
popf
sbb
in
adc
jge
inc
or
shlb
fs
out
xlat
push
mov
xor
iret
shlb
loopne
dec
lret
pop
fstpl
call
sbb
test
pop
pushf
and
push
ss
lods
daa
add
mov
sbb
lods
cmpsb
repz
loopne
xchg
lods
icebp
pop
test
adc
dec
popa
jae
ljmp
mov
scas
popa
ret
jo
pusha
ret
in
adc
push
outsb
jp
xor
lea
mov
sub
mov
sarb
xlat
addr16
mov
xchg
adc
les
push
imul
xlat
dec
int3
ror
mov
push
xchg
xchg
loop
push
mov
xor
adc
sti
push
push
mov
dec
je
dec
inc
sub
pop
loopne
sub
jbe
jne
jle
test
ret
fistl
xchg
shlb
lds
scas
lock
das
push
inc
cmp
stc
dec
add
xchg
sbb
data16
pop
push
xchg
in
mov
in
mov
aam
mov
out
sarl
sbb
xchg
lea
insl
leave
insb
pop
xchg
adc
mov
xor
mov
xchg
adcl
jmp
out
inc
ret
sub
push
rcl
test
xchg
pop
cmpl
and
mov
rolb
adc
mov
ficoms
add
and
add
sbbl
test
dec
ljmp
pop
xlat
aad
std
xlat
addr16
test
add
xor
pop
mov
sarb
add
inc
sbb
dec
adc
inc
insl
jo
cld
sub
cmpsl
mov
lcall
inc
xchg
jecxz
sub
cmp
pop
stos
shlb
mov
mov
in
xchg
int3
or
inc
je
cltd
clc
push
ja
xor
push
push
aam
sbb
cmc
ss
arpl
mov
add
cmpsl
popa
xchg
lahf
js
fimull
and
cmpsl
in
icebp
push
mov
cmp
xchg
inc
aaa
movsl
pop
subl
sbb
jle
jnp
data16
mov
pop
or
cwtl
or
idivb
idiv
adc
out
in
mov
call
push
aas
xor
test
jns
xor
mov
dec
jbe
popf
imul
mov
push
add
pop
sbb
popf
jne
insl
cmp
mov
push
jne
insb
aad
xor
jg
mov
lds
xchg
sub
push
jns
and
inc
push
dec
mov
jae
pushf
out
jl
add
fs
xchg
or
mov
xor
nop
rcrl
in
inc
div
and
repnz
cli
add
pop
pusha
and
ljmp
xor
cs
jle
aad
or
add
mov
dec
fidivrl
xchg
push
xchg
lods
jecxz
xor
outsl
add
add
je
and
dec
dec
insl
iret
push
dec
addr16
scas
xor
xlat
ret
push
cmp
rcll
pop
cmp
inc
jae
movsb
xchg
data16
mov
sbb
sub
cs
pop
and
push
imul
loop
mov
pushf
pop
int
push
dec
adc
add
jae
jge
cltd
in
lods
std
pop
pop
icebp
fwait
shrd
push
lcall
or
sub
sahf
xchg
leave
ret
cmp
enter
or
clc
sbb
daa
jl
jbe
inc
out
aam
fistpl
movsl
pop
int3
adc
adc
pop
push
insl
ror
push
push
push
push
pop
adc
std
outsb
xchg
xor
lret
jmp
lea
test
or
cmp
push
jb
and
test
xor
and
mov
cwtl
mov
ljmp
int
jbe
push
sbb
outsl
fiadds
cmp
xchg
jo
pop
xchg
push
in
sub
shlb
and
fldcw
sub
sbb
sbb
add
mov
mov
arpl
xor
push
xchg
inc
outsb
rcrb
out
cmp
xchg
scas
pop
jnp
and
iret
test
das
loopne
add
lret
sahf
into
add
or
mov
mov
pop
xor
jecxz
dec
mov
daa
and
inc
pop
in
test
mov
push
lods
push
jmp
sbb
inc
in
pop
mov
into
sub
jmp
aas
fdivrp
push
test
adc
in
pop
adc
mov
add
inc
roll
xchg
mov
icebp
in
jmp
xor
push
jbe
mov
inc
fldl
sbb
outsb
or
repnz
addb
sarb
loop
sbb
das
pop
scas
icebp
mov
and
fiadds
scas
push
hlt
sar
add
scas
pop
add
pcmpgtd
jl
shll
jmp
insb
mov
in
xor
and
jb
aaa
shrb
sbb
testb
bound
jmp
xchg
pusha
cmc
cmp
xchg
lcall
sbb
mov
cltd
and
aam
push
insl
push
adc
daa
push
cmp
mov
adc
add
je
aas
addr16
or
lret
rorb
icebp
fwait
xchg
pop
ja
not
ret
and
or
mov
jb
xor
cmp
imul
in
pop
dec
lock
aad
inc
or
fbld
inc
je
push
jl
orb
test
mov
sub
fnstsw
lods
mov
stos
ljmp
sahf
lret
lret
sub
leave
cmpsb
aad
mov
xchg
jg
call
mov
dec
xchg
loopne
rolb
pushf
fnstsw
add
cs
fidivl
stos
mov
mov
popa
jg
in
adc
mov
andl
or
mov
movsl
sbb
call
shlb
push
adc
mov
lcall
mov
lret
lret
int
sub
jbe
in
in
pop
inc
repz
fmull
cmp
scas
insl
mov
fdivl
xchg
add
ret
mov
jno
ja
jnp
mov
xchg
push
mov
cmp
test
cmc
faddl
outsb
mov
ret
enter
mov
push
mov
mov
outsl
pop
cmp
push
jp
dec
test
dec
jg
jno
add
adc
jo
pop
loope
jo
cmpsl
dec
push
lret
test
sbb
scas
xchg
pop
dec
fwait
and
or
xchg
imul
daa
shrb
cmp
data16
fwait
out
sub
push
loop
or
fsubrl
push
pop
ret
dec
outsb
jbe
mov
dec
sub
pusha
leave
dec
mov
xchg
rdtsc
adc
add
mov
repnz
xchg
jnp
stos
sub
je
popa
sar
imul
adc
jns
cmp
ljmp
dec
sbb
pop
divb
and
jg
int
pop
popf
inc
ja
or
cmpl
loop
xchg
sub
adc
lahf
incb
scas
outsl
popa
popa
mov
je
cmc
stos
add
fstpl
sub
fwait
das
sub
xor
cmpl
dec
mov
mov
aam
sbb
int
add
fsubrp
fisubl
cwtl
xchg
or
lret
pop
cmc
jle
dec
mov
sub
xor
mov
nop
sbb
cwtl
nop
rcrl
dec
sbb
mov
popf
pop
out
dec
xchg
lods
sbb
lret
mov
mov
xchg
or
popf
es
pop
sahf
shrb
bound
push
stos
or
mov
dec
and
mov
daa
ret
inc
jmp
mov
ljmp
in
mov
fistl
push
mov
mov
aaa
mov
aaa
mov
add
jle
push
xchg
in
outsl
push
add
sahf
mov
fildll
or
mov
add
movsl
sub
cmpsb
dec
mov
lcall
aad
shll
push
mov
mov
cmp
add
mov
push
fnsave
lods
sub
scas
enter
pusha
push
cmp
lds
bound
cmp
cmp
cmc
int3
hlt
cwtl
cltd
push
repnz
scas
dec
aas
imull
mov
jle
push
shl
add
std
mov
cmpsb
fistl
sti
push
cmp
cltd
inc
or
ret
daa
das
jl
in
insb
icebp
sahf
mov
aam
gs
testl
mov
dec
pop
pop
adc
push
lcall
popf
adc
mov
daa
sub
loope
sti
cli
loop
sar
movsb
clc
cmc
lcall
xor
in
pusha
stc
dec
xchg
sub
xor
fsubs
inc
cmc
xor
cmpsb
jo
jno
mov
inc
ja
mov
xor
dec
movsb
fisttpl
mov
fmul
in
scas
out
xor
sub
repz
xchg
sbb
mov
les
and
sub
cmp
movsl
int3
nop
mov
imul
pop
add
and
arpl
add
movsl
pushf
call
mov
dec
inc
cmpb
ds
lret
leave
rcll
inc
cmp
jecxz
call
pushf
ret
dec
sub
jnp
loope
lea
push
hlt
mov
pop
xor
push
xchg
data16
inc
cs
push
dec
sbb
sub
mov
scas
mov
lahf
adc
mov
movsl
sub
pop
inc
pop
rclb
push
push
inc
aaa
inc
movsb
inc
add
ret
aaa
push
aam
jecxz,pt
mov
out
outsb
fsubrp
dec
jle
mov
or
addr16
outsb
out
dec
inc
leave
jne
mov
pusha
pop
out
into
imul
xchg
xchg
imul
out
push
cwtl
and
data16
push
mov
je
pop
clc
xchg
jge
das
iret
cmp
xor
ror
cmp
sub
pop
pop
xor
push
lock
push
mov
xlat
jle
aaa
jge
dec
hlt
cmp
and
mov
sub
lahf
add
cmp
xor
lds
out
ret
rorb
ljmp
fmuls
lea
aas
out
jae
sar
pop
popa
cmpsl
in
aaa
dec
testb
out
lret
pop
lea
ret
imul
lret
push
jl
hlt
mov
scas
test
xor
mov
fsub
movsl
xor
mov
push
and
push
xchg
mov
outsl
shll
inc
lret
aam
out
sbb
out
jle
mov
fwait
les
mov
mov
push
sbb
sub
ret
cmp
insb
or
clc
dec
jae
jle
test
les
mov
push
fisttps
sahf
dec
iret
xor
push
and
pop
mov
lret
and
or
xor
pusha
stc
sbbb
in
and
sbb
clc
mov
pop
sahf
movsl
mov
sbb
std
jbe
bound
repz
repz
xor
xchg
sarb
in
mov
mov
sbb
pop
sbb
adc
ficompl
stc
inc
dec
loop
jmp
sbb
pop
movsl
in
inc
push
lret
xor
ret
xor
or
fisttps
jp
and
das
les
movsl
enter
outsb
mov
mov
ret
stos
idivb
divb
pop
and
and
out
cmp
lods
call
mov
ss
sbbb
inc
or
cmpsl
jge
xchg
xchg
fwait
push
cmpsl
mov
gs
outsl
outsl
out
scas
pop
mov
mov
push
cli
pusha
shll
aas
ror
fcmovu
ss
sti
rol
mov
movsb
inc
int3
jl
lcall
adc
insl
push
stos
xlat
aam
scas
jae
mov
or
mov
sub
mov
or
stos
dec
push
mov
adc
movups
negl
shll
dec
inc
or
mov
jno
and
xchg
stos
pop
scas
leave
adc
cmp
jp
ds
int3
sub
mov
frstor
xchg
pop
fwait
sbb
xlat
push
mov
xor
lret
push
arpl
lods
sub
xor
les
shl
cmp
xchg
dec
dec
sbb
test
das
movsb
xor
mov
cmp
sti
and
sbb
or
scas
sbb
test
xchg
out
xchg
sbb
cltd
sbb
test
stos
imul
push
stos
cmp
sub
aas
inc
sbb
fisubrs
ret
jge
call
test
fsincos
add
push
inc
cmc
push
push
mov
aam
add
lock
or
jecxz
jb
or
leave
jb
int3
mov
lds
jb
pop
pushaw
jo
lea
mov
xchg
orl
cwtl
xchg
push
cmpsl
xchg
mov
imul
cmp
pop
jno
inc
loope
mov
fistpl
gs
in
sti
mov
addr16
jg
jp
xchg
push
push
adc
aas
jecxz
sbb
mov
sti
ja
xchg
add
mov
movsb
mov
lahf
scas
mov
sahf
pop
jecxz
mov
call
js
test
dec
fwait
mov
and
inc
push
cwtl
push
and
mov
add
add
bound
sub
xchg
in
lds
test
push
cld
mov
push
xor
add
adc
mov
mov
xchg
int3
or
in
mov
xlat
dec
movsl
xor
lahf
pop
add
cmpsl
adc
xchg
lds
pop
jbe
popf
inc
push
push
pop
out
test
test
sub
mov
pushf
or
mov
mov
call
adc
mov
dec
push
idivl
shlb
insl
xlat
lods
pop
cmp
mov
mov
fdivs
push
int3
loop
cmpsb
sub
and
and
add
mov
pusha
cmc
enter
mov
in
std
jmp
jl
stos
xor
inc
imul
add
fmull
sti
inc
in
mov
xor
roll
cmc
cmp
shrb
push
ror
sub
pop
mov
aaa
imul
or
jl
orl
add
fstps
cmc
dec
popf
fildl
mov
js
in
cmp
arpl
push
loope
shl
dec
into
xor
in
adc
scas
adc
sbb
cmovp
ret
iret
sub
je
xchg
test
aad
xor
pusha
and
notb
push
ljmp
stos
adc
outsl
cld
pop
aam
inc
mov
jno
jl
jp
sbb
adc
push
orb
fcom
cmpsl
scas
jl
add
xor
in
lret
xor
ficompl
lds
rcll
lock
fcomps
sub
adc
movsl
xchg
xchg
and
add
cmc
in
sub
shll
adc
gs
pop
jle
scas
mov
fs
mov
mov
sbb
daa
test
sbb
pop
pop
mov
adc
loop
lock
int3
ss
loop
leave
lock
mov
mov
or
scas
ja
test
jl
stos
nop
popl
mov
push
xchg
sbb
mov
cltd
jmp
dec
loop
pusha
jns
push
inc
mov
ret
or
sbb
lret
cmp
insb
and
jp
je
sti
pop
pop
dec
aad
lods
pop
fs
stc
push
out
sbb
jl
or
fmuls
mov
jge
mov
cmp
cltd
fs
xchg
cltd
and
repz
scas
mov
push
cmp
cmpsb
cmp
decl
and
ss
loope
pop
xchg
mov
inc
movsb
add
lea
sub
jl
jl
push
mov
sbb
lock
dec
aad
dec
xor
or
mov
mov
sub
sti
dec
test
adc
shrb
and
or
ds
sbb
push
inc
ss
mov
loopne
sbb
cmp
and
jp
add
pop
and
data16
aaa
pop
mov
cmc
nop
sahf
mov
sub
pop
push
ror
xchg
mov
sbb
sbb
jl
xchg
xchg
mov
ss
mov
rcl
adc
sub
sbb
push
xchg
pushf
xchg
push
shlb
arpl
lcall
ret
mov
sub
xor
in
test
cmpsb
push
movl
jnp
or
stos
div
sbb
test
fisttpll
jnp
js
fiaddl
jg
fistpll
mov
pop
push
mov
dec
inc
jae
insb
enter
sub
rcr
pop
sub
negb
cmp
pusha
cli
mov
push
cmp
push
push
jns
cmp
sub
push
fs
xchg
inc
imul
subl
inc
sbb
sub
out
add
ja
push
mov
jmp
jp
aaa
jle
dec
inc
ja
fidivs
fcmovne
inc
push
in
popf
in
scas
or
xchg
jne
pushw
mov
cli
adc
mov
sahf
lds
or
sub
fcomps
dec
enter
mov
int
insl
fcomp
es
je
push
mov
test
leave
pop
jbe
pop
inc
adc
or
aam
mov
pop
and
out
lret
jb
adc
ds
shl
sbb
jecxz
jecxz
imul
ljmp
add
mov
addr16
stos
push
std
popf
push
mov
push
push
xchg
jae
mov
lcall
jno
xor
pop
sbb
ds
xor
fdivrl
xchg
lds
movsb
lcall
int
mov
gs
mov
fldenv
adc
lea
mov
insb
mov
add
jo
outsl
and
jo
xchg
lea
divl
inc
add
xor
push
cmp
stc
imull
cmc
in
jbe
rclb
lahf
popa
and
push
aas
jno
fucomp
aaa
jne
rorb
popa
outsb
mov
mov
push
jne
sub
in
mov
scas
out
arpl
rcrl
clc
pop
dec
mov
aad
push
mov
cmp
mov
iret
fistpl
push
rcll
or
lcall
nop
add
cmpsb
jecxz
out
jp
lea
std
dec
lret
int
cmp
out
stc
add
into
sub
push
xchg
pushf
outsl
push
mov
cld
jl
dec
pop
push
push
scas
lcall
bound
repnz
inc
andl
or
dec
scas
insb
cwtl
or
xor
mov
enter
es
cmp
movl
dec
inc
test
inc
mov
lods
xor
or
mov
cmp
xor
fisubrs
push
pop
adc
mov
pop
mov
or
ja
push
mov
sub
xchg
mov
rcrb
adc
outsb
scas
call
cltd
or
lods
mov
loope
mov
mov
notl
hlt
js
mov
add
fisubrs
gs
lods
inc
add
lds
or
aad
out
clc
push
push
ss
mov
in
fistl
add
pop
rorl
mov
rorl
mov
rcl
add
movl
dec
jge
push
push
faddp
and
rclb
cli
stos
push
xor
faddp
outsb
fdivs
jns
das
jno
and
xor
cmpb
cmc
xchg
popf
nop
pop
jae
fimuls
mov
ds
aas
xchg
dec
add
rorb
lods
push
push
stos
movl
imul
dec
jno
push
stc
mov
test
fdiv
mov
icebp
gs
into
push
dec
sub
sub
popf
or
inc
or
jnp
dec
outsl
cmp
test
arpl
push
std
ret
pop
mov
cltd
into
fidivrl
fstpl
movb
not
into
cmp
sbb
stos
xor
and
mov
data16
mov
cmc
pusha
insl
in
push
add
les
cmp
adc
add
or
cmp
pop
fsubs
imul
push
ss
pop
loop
testb
ljmp
js
pop
inc
sbb
shlb
mov
mov
push
lods
sbb
fidivrl
jno
int3
fdivl
sub
stos
ljmp
cltd
gs
cli
or
es
iret
jns
popa
js
cmpsb
rcr
and
adc
inc
inc
cs
in
loope
dec
push
das
jmp
xchg
sbb
hlt
shr
shll
ja
in
push
dec
movsb
inc
mov
test
or
or
out
das
inc
bound
sbb
sub
sub
arpl
daa
adc
shr
sahf
pop
popa
jns
stc
pop
int
bound
add
fdivs
sti
xchg
aaa
jmp
and
lods
xlat
int
out
jno
scas
inc
mov
fldcw
in
or
cmp
cmp
push
lcall
test
mov
in
daa
ljmp
mov
mov
cmpsl
cmp
inc
lea
sub
fwait
mov
or
out
jmp
cmpsl
adc
adc
movsb
push
add
add
ss
repnz
stos
aad
sbb
inc
mov
bound
adc
mov
xor
fimull
mov
punpcklbw
psubd
mov
daa
jl
scas
mov
les
pushf
adc
imul
dec
dec
and
xchg
hlt
push
xor
or
imul
mov
dec
jnp
fistpl
push
int
movsl
int
adc
pop
out
mov
push
fcoms
sub
aad
insb
repnz
pusha
mov
pop
inc
ljmp
loop
inc
fwait
jae
mov
cmp
stc
ret
cmpl
push
add
sbb
test
cmp
fisubs
inc
xchg
sbb
pop
sti
movsl
ja
xorl
cmp
out
aam
out
outsb
xchg
testb
dec
and
adc
mov
rorl
sub
mov
negb
out
in
leave
mov
jp
gs
cmp
je
outsb
rol
mov
std
sbb
push
ret
add
sub
adc
pop
jl
ljmp
in
jo
push
xorl
out
aad
mov
inc
and
sub
arpl
cmp
and
jl
mov
jl
sub
ss
cmpsb
out
cltd
loopne
xchg
cld
cwtl
sbbl
and
bound
inc
xor
push
add
imul
iret
adc
sbb
int
notb
push
mov
adc
adc
fadd
xor
or
push
push
push
adc
sbb
adc
adcl
sbb
cmp
aaa
test
sub
cltd
pop
in
pop
and
gs
mov
out
lock
inc
mov
pop
dec
push
or
stos
lods
jno
mov
js
jp
fs
push
xor
in
subb
or
jne
push
jp
jb
push
cmp
sahf
icebp
aam
cmp
mov
dec
jns
or
sbb
adc
cmp
jnp
movsl
ljmp
xor
lcall
daa
ja
pop
mov
mov
jmp
pop
es
gs
fcmovnb
test
aaa
inc
xor
cld
sahf
addl
jb
outsl
in
dec
test
xor
inc
subb
int
pop
data16
pusha
pop
imul
mov
lahf
cmp
out
pusha
inc
inc
popf
add
test
xor
cmp
lahf
or
push
cmp
movsb
das
and
fstpt
sub
mov
mov
lret
movl
leave
repnz
mov
bnd
dec
mov
xchg
das
push
int3
xor
inc
add
ss
jg
je
testb
mov
loope
fldenv
adc
cwtl
push
or
dec
ret
sarb
xor
js
cmpb
subb
mov
pop
mov
mov
test
int3
insb
ljmp
cli
pop
pop
sbb
popa
cmp
mov
leave
jecxz
jnp
roll
fbld
inc
aaa
es
adc
mov
pop
xchg
adc
out
je
enter
popa
cmp
test
jbe
and
int3
add
sub
arpl
inc
lcall
pop
mov
cmp
loope
mull
pop
xchg
mov
lds
or
lods
int3
lock
dec
push
and
sbb
cwtl
popf
and
imul
dec
and
or
inc
fmul
ljmp
aad
cltd
sub
mov
cs
or
inc
xor
jmp
cltd
shr
es
push
xchg
aaa
movsl
add
pop
xchg
je
sbb
stos
adcb
push
mov
shlb
movsl
outsl
xchg
pusha
rcll
rclb
aaa
mov
sub
les
cmp
add
dec
dec
decb
lods
push
into
inc
jg
hlt
pop
or
cmovs
enter
add
imulb
cmp
xchg
popa
imul
cmpl
pop
jg
fdivs
pop
insl
mov
adc
cmpsb
aad
sbb
push
cmp
adcb
ret
imul
nop
paddb
lods
imul
outsl
jge,pt
xchg
iret
xchg
adc
std
adc
lods
mov
pop
xchg
xor
mov
mov
dec
add
icebp
push
sbb
mov
and
pop
xchg
hlt
sub
pop
push
dec
xchg
cmp
pusha
aam
in
jno
jmp
add
push
add
hlt
jns
in
jne
mov
jg
push
repnz
test
popa
pushf
icebp
cmp
in
loope
ds
dec
sarb
pop
divb
jl
inc
push
add
nop
push
mov
pop
xchg
orb
imul
dec
push
loop
jl
push
adc
pusha
xchg
lods
jmp
xchg
inc
sbb
xchg
test
jno
fcmovb
jo
push
cmp
cltd
and
sti
inc
outsb
lods
lods
xlat
and
addr16
ljmp
dec
imul
loope
push
popf
outsb
les
mov
mov
mov
data16
stos
into
icebp
jge
push
and
hlt
jg
dec
enter
lock
inc
lret
dec
pushf
xchg
jae
sti
outsb
lahf
or
pop
outsl
add
sub
sub
scas
jbe
outsb
rorl
fcmovnb
mov
cmp
pop
xor
xchg
std
pop
scas
pop
adc
dec
xchg
mov
daa
repnz
in
or
push
add
push
ljmp
cwtl
ja
mov
movsl
in
nop
out
sub
cmp
movsb
cli
lods
or
sbb
add
add
and
cli
ror
lahf
movsb
sbb
out
std
pop
fisubrl
jne
dec
cwtl
inc
movsl
xor
test
sub
test
push
lds
push
pushf
cs
pmulhw
xchg
adc
out
sub
and
mov
dec
mov
cmp
addr16
ds
xchg
xchg
dec
sahf
mov
nop
loop
prefetch
lret
push
mov
adc
int3
mov
popa
mov
lret
fidivl
out
hlt
jmp
jae
xor
cmp
jne
leave
lret
and
test
push
jae
sub
xchg
out
mov
cmp
jae
fisubrs
lods
mov
lret
movsl
pop
mov
sub
mov
mov
xchg
sub
xchg
outsl
jle
mov
addr16
jl
stos
push
in
int
mov
in
xor
cmpsb
adc
adc
les
sub
sub
push
loopne
std
dec
mov
jbe
es
and
push
cmp
notb
movsl
dec
jmp
sub
inc
jge
sbb
jb
icebp
insl
xlat
lods
or
fildl
sub
or
xlat
jne
add
dec
fldl
sub
dec
mov
daa
rolb
dec
mov
lret
adc
xchg
cmc
fwait
into
inc
jb
pop
sbb
dec
mov
or
xlat
adc
loope
sbb
and
aad
scas
dec
adc
iret
mov
or
or
outsl
lods
mov
cmp
dec
or
xor
clc
jle
movsl
data16
subl
xchg
int3
xchg
jmp
js
dec
mov
mov
imul
inc
or
das
aad
int3
xor
cli
out
repz
mov
mov
ljmp
scas
loopne
dec
push
jns
mov
data16
loopne
lret
sub
aam
test
xchg
jmp
ss
cld
inc
pop
mov
adc
mov
pop
mov
cs
mov
or
aam
sbb
mov
jbe
cmc
fwait
mov
mov
dec
pop
adc
and
gs
push
jp
neg
jbe
mov
out
mov
ds
adc
xorl
mulb
jl
imul
mull
sbb
jno
rorb
add
adc
mov
cmp
or
mov
loopne
mov
data16
inc
inc
jg
aam
cmpsb
aaa
xchg
xchg
xor
pushf
mov
inc
mov
xor
add
and
lods
out
xorb
push
xchg
mov
popf
mov
popf
jno
cmp
dec
int
push
inc
repz
in
dec
add
lea
pop
inc
push
pop
and
or
fildl
and
adcl
mov
jmp
jnp
pop
push
or
mov
arpl
sahf
dec
ljmp
sub
icebp
pslld
imul
dec
rcll
or
dec
cs
sub
add
addl
or
lret
lcall
mov
cmc
and
adc
ds
sti
sahf
cmpb
in
or
dec
or
fidivl
fidivrs
push
mov
test
mov
mov
aaa
or
push
lds
lods
in
leave
data16
pop
sbb
fiaddl
dec
daa
cmp
xor
add
jns
mov
mov
sub
arpl
jb
pop
sbb
cwtl
push
aam
insb
inc
push
cmc
dec
sbb
mov
xor
pop
mov
xor
out
cli
fmuls
mov
clc
shr
lahf
xchg
insb
lret
loopne
xor
out
cmp
mov
pushf
push
fwait
out
out
push
pop
popa
jg
jnp
cmp
mov
sbb
mov
jnp
mov
out
gs
jle
pop
test
fcmovnu
jne
enter
pop
arpl
inc
xchg
jg
iret
pop
and
nop
outsb
add
jb
push
lods
and
jmp
pop
jecxz
or
ret
push
mov
or
fisttps
mov
cltd
mov
aas
xor
idiv
loope
add
sbb
cwtl
and
sub
out
pop
out
xchg
cmovl
lods
mov
push
dec
pop
cs
out
xor
jmp
push
jae
inc
cltd
lcall
xor
add
ja
xchg
xorb
in
stos
movsb
aad
inc
xlat
add
fistps
fcomip
jge
or
push
sbb
mov
in
stc
sbb
in
pushf
push
xchg
pop
mov
mov
mov
nop
jb
fidivrs
mov
jne
xlat
adc
sbb
add
dec
jo
fsubl
orl
aas
sbb
enter
adc
mov
test
pop
mov
push
int
mov
nop
mov
cmp
push
dec
aad
rol
lods
sti
test
mov
and
stc
in
sub
add
das
loope
cltd
js
cmp
pop
imul
ljmp
inc
js
fs
stc
nop
in
pushf
xchg
mov
dec
sarb
data16
adc
jnp
fwait
mov
aad
xor
outsb
mov
fbld
or
insl
lret
test
inc
mov
lcall
or
pop
push
fucomi
and
inc
daa
mov
sbb
push
mov
jge
popa
stos
push
xchg
ja
push
dec
lret
xchg
push
jge
inc
aam
shlb
outsb
je
mov
fdivrs
pop
xlat
sub
pop
pop
andb
inc
pop
xor
push
dec
lcall
jae
add
and
add
mov
pop
jae
inc
jmp
xor
sti
pop
fcompl
dec
sarb
push
and
out
sbb
jb
aad
pop
lods
addb
out
scas
testb
jmp
jg
push
cmp
mov
xor
inc
es
mov
test
insl
cmp
stos
test
repz
mov
adc
ds
sub
cmp
jmp
lock
mov
mov
push
shl
pop
cmp
test
pop
pop
aas
adc
arpl
not
sub
jo
mov
pop
in
xchg
shll
mov
mov
sbb
jo
ret
pop
push
aaa
das
leave
push
sub
mov
mov
xchg
add
imul
test
jne
pop
cwtl
shlb
sbb
mov
ds
rolb
jb
cmc
orl
pop
cmpb
cwtl
push
es
mov
es
stos
jns
cld
repz
push
mov
or
cwtl
inc
mov
and
mov
movsb
pop
pop
daa
iret
aad
pop
xchg
pop
movsl
push
insl
leave
jbe
cmp
add
cld
pop
pushf
xor
sub
mov
pop
shll
in
xor
jo
pop
add
sar
xor
add
lea
add
push
mov
in
mov
testl
or
push
clc
cmp
std
rcl
and
ljmp
mov
jns
pop
rcl
cmpsb
popf
lahf
test
aad
insl
mov
aad
sbb
lret
nop
subl
loopne
cli
sub
mov
xor
add
jle
inc
mov
pop
sub
mov
divl
cmp
xchg
data16
pop
pop
pop
mov
std
mov
lods
loop
push
into
addl
mov
push
xchg
or
fistpl
cld
ljmp
mov
and
imul
cltd
push
inc
push
adc
imul
mov
jmp
and
testb
cmpb
out
inc
sbb
enter
or
add
test
jae
pop
and
pop
into
into
xor
fwait
jmp
sbb
and
addr16
pop
xchg
jp
xor
sbb
jnp
cmp
fs
inc
pop
xchg
xchg
adc
pop
mov
dec
test
push
addl
add
lods
cvtdq2ps
das
cwtl
xor
jl
and
mov
inc
mov
mov
sbb
notb
leave
scas
add
das
xchg
add
test
into
test
cmpsl
ret
xchg
push
mov
lcall
repnz
pop
loop
cmp
sbb
pop
jnp
cmp
mov
mov
adc
xor
jp
cmp
mov
jns
push
fwait
mov
icebp
stos
inc
imul
nop
hlt
outsl
movsb
xor
leave
add
and
xor
sub
ljmp
rorb
dec
lcall
leave
scas
cmp
pop
pusha
xor
lods
movaps
leave
and
lcall
out
inc
lahf
pop
je
xor
jae
xchg
rcr
cmpsl
or
stc
push
aas
imul
and
mov
je
stc
sbb
cwtl
push
push
adc
loope
push
in
jns
push
xchg
pop
inc
orb
rorb
xlat
push
xor
or
lods
ja
fidivrs
fs
add
mov
adc
mov
push
icebp
insl
shr
mov
xchg
in
mov
pop
stos
cld
mov
mov
movb
sar
dec
stos
out
lds
cmp
lea
leave
sti
je
jb
and
mov
dec
cmp
xor
loop
popa
lret
jmp
mov
jg
out
xchg
out
mov
addr16
out
bnd
adc
test
mov
outsl
into
daa
push
loop
das
fbstp
xchg
jl
pop
int
rorb
std
jae
inc
inc
mov
jg
insl
mov
push
test
shrb
call
push
stos
sahf
push
cmp
movsb
imul
test
mov
inc
inc
xor
xlat
xlat
mov
cmp
push
rol
je
rcrl
mov
sub
nop
int3
push
dec
inc
inc
mov
aad
hlt
inc
or
push
ret
shlb
rolb
sbb
scas
scas
mov
push
les
fwait
rorl
xchg
ss
lahf
pop
xchg
or
jecxz
mov
adc
xlat
mov
cwtl
hlt
mov
dec
bnd
add
add
or
aaa
mov
sub
test
sahf
les
stos
push
add
push
mov
movsl
pop
js
jne
push
xor
clc
int3
bound
xor
lds
pop
adc
mov
xor
cli
scas
sub
sub
jnp
inc
das
or
push
mov
addr16
mov
aas
push
bound
pop
and
or
push
inc
enter
fwait
rorb
cmp
inc
pushf
cwtl
pop
sbb
pop
cmpsl
mov
js
test
or
das
sbb
dec
push
fwait
lea
call
cmpsl
jle
adc
pop
adc
adc
out
adc
shr
xchg
imul
adc
push
mov
test
orb
test
mov
fsubrp
scas
test
dec
pusha
adc
mov
push
dec
jmp
mov
stos
and
mov
nop
aam
mov
cli
push
fsubrl
fildll
leave
fwait
in
add
push
mov
xlat
xor
jle
jae
fnstsw
out
xchg
cs
test
mov
sti
mov
or
jnp
sub
mov
mov
stos
and
xchg
stos
xchg
pop
pop
sub
lret
mov
or
dec
std
dec
cmp
xchg
pop
pop
es
fst
out
and
rclb
stos
bound
cmp
pop
orb
add
xchg
jb
jmp
and
xor
fcomps
mov
leave
dec
cltd
xchg
xor
cmpl
ret
imull
stc
xor
repz
xor
mov
int3
arpl
fwait
dec
push
jns
pop
inc
inc
repnz
sbb
pop
cld
mov
cmp
or
popf
dec
and
fwait
xchg
fcomps
lret
push
adc
aam
pop
jle
std
adc
fwait
mov
pop
cltd
dec
pop
xabort
das
adc
mov
rcrl
xor
dec
adcb
fldcw
jnp
fs
mov
lret
imul
or
in
inc
inc
jo
lret
into
cmp
vpsubusb
or
mov
ret
mov
mov
int3
into
mov
imul
loope
xchg
inc
shlb
mov
ret
dec
and
insl
push
inc
pop
mov
test
mov
push
mov
and
out
aas
cmp
in
adc
dec
dec
ja
fldt
loope
mov
ss
loope
icebp
iret
push
ljmp
xchg
addb
dec
js
test
jae
das
inc
lcall
hlt
xlat
mov
or
lea
adcl
mov
out
and
dec
xor
jg
xchg
push
push
jbe
sti
adc
sub
inc
xor
add
pop
das
adc
xor
dec
ja
icebp
xchg
xor
in
mov
iret
pop
xor
fcomip
xor
std
xor
xchg
pop
jecxz
xchg
mov
inc
sbb
jecxz
xchg
jecxz
jno
shrb
jmp
lea
inc
mov
lret
push
mov
and
jne,pt
inc
push
and
xor
scas
test
popf
push
sub
lea
mov
test
and
pop
test
jne
std
and
mov
xor
add
push
roll
and
call
lea
sub
or
mov
jg
add
stc
out
clc
sbb
imul
sahf
repnz
ljmp
jnp
xchg
or
or
push
fmuls
cmp
pop
sbb
es
insb
gs
pop
mov
mov
dec
and
int3
call
sbb
std
lret
xchg
mov
mov
inc
dec
pushf
xchg
cs
aas
jecxz
ljmp
mov
imul
dec
sti
or
iret
shrb
addr16
sub
jle
lcall
jge
gs
cwtl
cmp
sbb
xchg
dec
xor
aas
inc
jecxz
push
addr16
jg
scas
shl
jp
imul
pop
sbb
inc
mov
or
fistl
or
sub
outsl
mov
jbe
loopne
in
hlt
stc
iret
jle
scas
push
mov
or
jg
sbb
and
call
xchg
mov
sub
cmpl
movsb
sub
sbb
push
les
pop
xchg
hlt
movb
jo
pop
dec
aam
xor
push
or
xor
inc
cmpsb
jmp
pop
lods
mov
fcomi
in
mov
mov
add
xchg
les
jno
sbb
aas
jnp
loop
in
popf
test
test
rolb
sbb
sub
or
xchg
jno
test
das
dec
negb
out
xchg
jno
cli
ljmp
mov
popf
fiaddl
divl
jno
push
cs
pop
mov
sub
xchg
dec
mov
add
into
pop
into
mov
popf
ss
out
adc
icebp
mov
mov
xor
pop
mov
arpl
pushf
cmpsl
add
leave
xchg
push
shlb
xor
ljmp
or
mov
sub
and
mov
loope
nop
mov
inc
fs
xchg
into
sbb
sahf
loop
pop
push
in
aam
cmp
pop
sub
ja
sbb
inc
jbe
mov
lea
pop
add
mov
pop
mov
jp
ss
adc
fs
jb
mov
jmp
xor
push
push
push
lods
jno
fwait
ss
ds
cmp
inc
pusha
test
inc
test
pop
xchg
insb
sub
test
cmp
inc
popa
push
cmp
sbbb
std
shl
or
sub
fidivrs
int
pop
inc
pop
xchg
sub
mov
jnp
sub
mov
test
lahf
sbb
mov
sub
loopne
adc
in
orl
int
or
pop
fldt
das
shrl
add
popa
adc
adc
imul
movsb
out
movsb
das
adc
das
cltd
js
fiaddl
xor
xchg
fisubrs
insb
hlt
mov
test
mov
loopne
mov
xchg
inc
mov
addr16
cmp
fisttpll
xor
push
incb
push
jno
inc
cmp
jo
into
out
gs
xor
out
cmpsl
pop
pusha
xchg
das
push
shll
mov
cmpsl
push
sbb
inc
mov
cmpsb
mov
sbb
repz
gs
stc
xor
jo
mov
test
dec
mov
mov
sub
xlat
loopne
repnz
xchg
into
jmp
push
xchg
loop
mov
out
lcall
fistpll
push
ljmp
and
orb
mov
nop
fs
int3
dec
in
aas
and
add
jp
xchg
ljmp
imul
popa
pop
dec
daa
pop
mov
scas
cs
scas
cs
arpl
ret
outsb
mov
repnz
rcr
mov
pop
push
cmp
insb
cld
addb
xchg
daa
shlb
pop
pushf
stos
pushf
xlat
stc
push
mov
cmp
jg
in
pop
add
jmp
seto
sub
orb
inc
addr16
inc
inc
xor
mov
and
jae
mov
mov
stos
inc
cmpsl
jp
jp
insl
les
call
cmp
cwtl
and
jno
inc
daa
mov
ds
add
aaa
mov
ja
add
rclb
lret
push
sbb
adcb
inc
addr16
sbb
test
loope
stos
xlat
int
mov
fsts
mov
adc
inc
mov
cmp
jmp
add
fisubs
out
dec
std
add
mov
dec
popa
sbb
add
flds
arpl
pop
xlat
sub
jae
inc
xor
jmp
icebp
cmpsb
adc
mov
outsl
jo
pop
or
and
stc
and
inc
dec
adc
stos
cwtl
fcoms
shlb
rcrl
lods
cmp
insb
mov
or
xor
stc
outsl
mov
nop
lods
cmp
push
dec
jmp
sbb
dec
inc
pop
push
jp
or
jle
out
mov
pop
mov
loopne
in
in
fistps
orl
and
fnstsw
ss
inc
jmp
pop
jg
adc
cld
lret
mov
jns
jo
dec
std
inc
mov
addr16
mov
cmc
mov
into
clc
aaa
mov
sbb
or
inc
dec
xor
gs
pop
or
movsl
jg
in
or
pop
jns
cmpsl
leave
roll
xchg
popf
cmp
outsl
insl
andl
int
gs
test
test
into
jns
jmp
clc
push
or
imul
data16
push
sbb
jg
xchg
or
daa
or
mov
lret
iret
inc
lods
xor
pusha
fidivrs
stos
jge
ret
fdivr
pop
loopne
aaa
mov
fsubs
xor
adc
sbb
sbb
daa
pop
add
stos
cmpl
add
fstp
cwtl
mov
jl
dec
xor
push
push
xchg
push
insb
addr16
xor
mov
out
jae
mov
xchg
jl
orb
pop
imull
adc
dec
push
repz
xor
push
scas
dec
outsb
xor
pushf
sbb
out
mov
out
int
imul
sub
push
ret
fwait
jbe
fdivrl
out
cli
push
aas
add
adc
cmp
mov
and
int3
adc
jg
xor
shr
cld
gs
cwtl
dec
xchg
js
loop
js
lcall
sahf
and
jns
cmpl
repnz
inc
pushf
inc
sbb
dec
push
dec
icebp
mov
bound
popf
and
aaa
test
mov
movsb
pop
out
and
icebp
hlt
dec
stos
mov
addr16
mov
and
loopne,pt
bound
lcall
stc
loope
xchg
outsl
add
lds
notl
fsubl
testb
enter
cld
jp
push
lahf
ds
jo
mov
cmp
cmp
pop
or
sub
addr16
and
stos
rcrb
xor
or
jge
hlt
test
mov
mov
loope
cmp
addr16
jns
loop
fcom
xor
adc
in
xor
insb
movsb
js
fst
or
and
sbb
ficompl
rclb
jbe
xchg
ljmp
fdivs
lds
adc
adc
add
lods
xchg
push
or
in
inc
jle
lds
std
jb
push
mov
pop
adc
push
xchg
sub
rcr
jmp
lock
int
les
stos
andl
and
ror
fs
int3
push
push
jnp
pop
aad
mov
fadd
mov
cmp
ds
push
mov
adc
and
shr
scas
ja
cmp
sub
popa
pop
add
inc
lods
jbe
mov
test
or
xchg
sbb
dec
pusha
imul
in
dec
cs
lret
push
pop
ljmp
mov
dec
ret
push
push
xor
adc
lock
push
stos
out
xchg
sarb
pushf
cwtl
test
inc
pop
test
pop
mov
shll
sub
sbb
or
sbb
cmp
and
jg
je
daa
repz
push
scas
inc
sub
mov
jle
or
mov
cwtl
nop
adc
cmp
scas
mov
dec
test
sbb
dec
dec
ret
mov
mov
lret
shl
push
cs
cld
sbb
into
loop
dec
idiv
jae
xchg
push
subb
movsl
gs
and
popa
inc
adc
daa
jo
fsubs
leave
fcmovnb
test
or
sub
ss
loopne
ds
movsl
js
inc
mov
xor
cmp
ljmp
dec
dec
xchg
mov
adc
je
jmp
imul
movsb
dec
mov
fwait
das
mov
adc
outsl
mov
sbb
jge
xchg
out
fidivrs
dec
jle
inc
pop
pop
push
loop
out
xchg
sti
andb
dec
mov
aas
inc
pop
adc
aam
pushf
in
in
jns
int
dec
push
incb
mov
cld
mov
adc
add
add
loopne
inc
push
in
xor
inc
mov
and
jecxz
push
jp
inc
aas
lods
sti
add
test
dec
mov
test
stos
dec
xor
cmp
mov
rcll
mov
int3
mov
pop
ljmp
fstpt
dec
sti
rol
test
repnz
and
lds
and
leave
mov
dec
mov
sbb
or
inc
push
pop
dec
xor
cmpsl
push
lds
outsl
push
sti
adc
mov
fsubrl
das
aam
mov
ja
and
mov
push
scas
sbb
xchg
sbb
sub
cmp
filds
fiadds
mov
push
cmc
xor
cmc
inc
jmp
int
add
adc
or
pushl
dec
rcr
pop
mov
inc
daa
ret
lods
xlat
stc
jbe
stc
stos
data16
fcompl
stos
and
rol
into
loop
add
mov
rorl
xchg
pop
fwait
jnp
int3
mov
xchg
scas
aas
dec
mov
xchg
ljmp
dec
or
lock
dec
fs
cmc
dec
push
out
enter
pop
jg
sub
sub
es
sub
out
lea
mov
out
cli
ljmp
call
loop
dec
or
jnp
jp
dec
cmc
gs
lock
mov
xlat
adc
leave
mov
sbb
or
ss
or
jmp
push
loope
push
mov
lods
int
sbb
into
not
jmp
and
xor
push
pop
andl
out
out
cmp
jg
inc
sarl
test
jnp
dec
adc
stos
sbb
sub
push
push
push
sbb
pop
pop
sbb
rcrb
add
xor
bound
cmp
inc
cli
cmp
nop
imul
inc
in
movsl
lds
jae
dec
xchg
popf
xchg
clc
mov
adc
cmp
jecxz
gs
test
mov
in
repz
xchg
cltd
mov
popa
dec
hlt
popf
xor
cltd
jl
std
dec
ret
xchg
cld
xchg
mov
icebp
push
jnp
cmp
ret
add
call
rorl
mov
dec
cmp
stos
faddp
xchg
jp
and
dec
xor
gs
imul
imul
fidivs
loope
and
jne
mov
lahf
jns
pusha
fistpl
xor
bound
call
mov
mov
in
cwtl
stos
repnz
cmp
fldcw
dec
sbb
int3
imul
data16
sbb
mov
or
popa
mov
fisubrl
pop
inc
outsb
pushf
call
mov
addr16
scas
inc
push
jmp
test
fs
mov
or
dec
push
ss
mov
test
ds
outsl
test
xor
add
mov
push
mov
imul
lods
shlb
les
xchg
lods
rclb
jns
mov
xchg
mov
sbb
insl
cli
cmp
dec
dec
xchg
repz
in
js
scas
mov
or
jo
decb
xor
sub
or
es
xor
and
jno
mov
cwtl
sub
add
add
aaa
sarl
xor
aas
cs
les
adc
sub
into
prefetcht0
or
xchg
mov
push
mov
ret
sub
pushf
repz
shrb
mov
push
adc
les
div
mov
and
adc
mov
in
sbb
pop
push
in
inc
pop
and
push
adc
add
xchg
arpl
lods
mov
mov
adc
lods
sbb
push
xor
cmp
dec
sub
push
cli
ljmp
jne
push
lock
insb
cs
icebp
mov
adc
cld
inc
push
stos
scas
in
leave
shll
nop
cltd
jecxz
jne
adc
and
repnz
loopne
push
cmp
imul
repnz
leave
mov
pusha
jbe
sub
ja
mov
sub
cmp
into
sbb
test
addr16
jae
ljmp
inc
fists
lock
es
sbb
xchg
lahf
dec
pop
out
jns
mov
inc
cld
lahf
adc
cmc
and
fs
push
sbb
mov
lahf
or
scas
or
and
int
fidivrl
ja
mov
cli
test
pop
xor
pop
jo
xchg
cltd
enter
ljmp
xchg
push
jp
mull
hlt
loop
lods
inc
add
pusha
adc
sahf
sbb
in
out
push
roll
stos
dec
mov
cmp
lahf
fs
mov
mov
mov
cmp
mov
mov
cltd
sub
sti
fildl
and
inc
push
cmp
mov
add
movsl
push
add
mov
mov
and
out
mov
mov
gs
jg
xor
or
xchg
insb
fisubl
stc
add
out
popa
and
dec
dec
dec
mov
nop
stos
cmp
arpl
in
lret
repz
mov
xor
scas
fnstenv
mov
xchg
jbe
das
int
das
fidivl
imul
add
lea
jnp
xchg
xchg
mov
jae
fwait
pop
movsl
stos
dec
adc
mov
mov
push
mov
iret
stos
cmpsb
ss
int3
push
lahf
cmp
xor
or
sbb
jp
xchg
popf
jno
sbb
fs
sub
cmpsl
bound
das
sbb
xchg
mov
adc
mov
lods
cmpsb
filds
pop
add
mov
out
jmp
mov
loopne
pusha
add
xchg
mov
pop
ror
xchg
cmc
pop
cmp
vpunpckldq
cmc
in
lea
pop
add
jle
adc
loopne
cmp
out
jle
mov
clc
test
imul
lret
icebp
movsl
dec
cli
adc
aad
jge
push
xor
mov
jge
cwtl
clc
call
push
mov
ret
movsb
add
and
sub
cwtl
adc
fsubr
jbe
mov
cwtl
ja
pop
enter
inc
pop
push
or
fmul
inc
call
icebp
data16
pop
mov
adc
mov
or
lods
jmp
cmp
mov
jecxz
popa
mov
push
xchg
sub
pop
aaa
xor
xchg
cmpsb
pop
ss
pop
or
mov
adcl
cwtl
pushl
clc
xchg
lods
test
aad
adc
lods
movsl
cmp
adc
rcl
cmp
rclb
int3
lock
jecxz
add
loope
sbb
ficoml
aas
add
out
stos
inc
push
cmpsb
push
fists
repz
sbb
xor
add
mov
clc
movsb
inc
sbb
popa
mov
mov
lods
dec
pop
ficomps
fiadds
clc
lcall
stos
jg
and
div
inc
jg
dec
push
inc
loope
add
inc
adc
xchg
pop
lods
xchg
adc
jl
leave
out
adc
dec
push
inc
jmp
mov
les
sahf
cmc
mov
jg
push
xchg
rclb
pop
pop
pushf
mov
mov
jecxz
push
lods
mov
outsb
jp
xchg
xabort
nop
xchg
pop
jmp
iret
out
xor
push
in
cltd
pop
xor
jge
test
push
fistps
cmp
lret
mov
xlat
fidivrl
pop
cmp
mov
ret
xchg
lea
rcrb
jle
or
es
fwait
pop
aam
hlt
test
push
das
or
lods
xchg
mov
out
iret
int
mov
enter
sarl
or
bound
rcr
push
sbb
dec
sub
sahf
lret
fnstcw
repnz
or
bound
or
or
je
xchg
fcoml
mov
lods
lahf
leave
ss
mov
dec
fprem1
dec
xlat
dec
out
inc
test
mov
xchg
inc
ljmp
push
stos
jecxz
push
sub
fcmovbe
int
mov
mov
push
adc
lcall
cld
dec
push
in
imul
inc
add
popf
jb
and
xor
clc
test
rorl
mov
mov
push
sbb
repnz
jmp
das
subb
push
shlb
mov
repz
aaa
mov
inc
es
fildll
ss
pop
mov
test
add
lret
mov
cmp
adc
xchg
out
outsb
mov
push
pop
lods
cld
sbb
lret
mov
pop
mov
rcl
mov
xchg
popa
jle
pop
jae
orb
scas
adc
repnz
out
cmp
push
rolb
out
mov
gs
jno
in
push
push
xor
inc
mov
push
or
in
ret
aad
addl
lods
inc
sub
jg
leave
aam
inc
dec
xor
pop
xor
movsb
lds
addr16
pop
jge
push
dec
ds
repz
add
pop
cmp
imul
jle
adc
insb
sub
xor
jne
jmp
xchg
mov
push
inc
scas
imul
in
push
lds
push
adc
rclb
adc
lret
xchg
clc
mov
icebp
ret
add
adc
into
outsl
hlt
sbb
mov
jb
sahf
test
inc
loop
das
jnp
fistpll
mov
push
mov
adcb
ficoms
xor
inc
bound
sbb
aad
push
int
gs
movsb
nop
xchg
jbe
sub
aas
lret
cmpb
and
data16
jge
xor
inc
outsl
mov
jne
jno
mov
sti
test
mov
pop
and
lahf
mov
fstps
xor
js
sti
hlt
jb
ja
xlat
movsb
xor
pop
adc
orb
stc
ficoml
or
xor
pusha
outsb
mov
ficoms
ljmp
lcall
out
xchg
pop
sub
sub
or
mov
out
shr
push
mov
inc
sub
cmp
insb
pop
daa
jge
popf
out
xor
lret
xchg
dec
jbe
cmp
pop
movsb
sub
mov
mov
pop
outsl
loopne
call
mov
arpl
jb
sub
aad
sbb
xor
and
pop
pop
jle
mov
stos
mov
xorl
cwtl
push
dec
push
test
push
mov
cmp
xor
daa
rcrb
cli
fwait
mov
js
mov
mov
jg
fdivs
ljmp
adc
cmp
std
andl
mov
rorb
add
sub
adc
add
out
sbb
cmpsb
insb
js
jnp
imul
xorl
jno
inc
shlb
add
stc
mov
aas
aad
adc
push
ja
cmpsb
call
icebp
dec
mov
lcall
aas
pop
inc
bound
fcomps
in
mov
iret
ret
loope
test
repnz
xchg
adc
nop
jne
jno
dec
loopne
mov
jbe
lahf
mov
repz
fistps
stos
mov
adc
int
pop
in
xchg
pop
cmp
xchg
jmp
rolb
ljmp
sbb
push
pop
clc
mov
fdivrs
aam
xchg
adc
sub
test
mov
push
ss
pop
pop
push
inc
gs
inc
jae
pop
or
sub
xchg
inc
pop
or
in
scas
aaa
std
ds
hlt
aas
lcall
pop
add
and
push
das
xlat
xor
mov
rclb
pop
push
rclb
and
or
stc
ds
pop
sub
and
movsb
dec
adc
dec
js
xchg
xor
mov
push
rclb
jl
out
mov
pusha
push
sbb
outsb
push
out
dec
or
jb
scas
lods
pop
sub
sahf
stos
lds
xlat
push
shl
cli
shlb
stc
pop
stc
pop
js
dec
icebp
std
in
sarb
imul
push
stc
shll
sbb
shrb
dec
cmp
sub
ror
bnd
std
and
daa
insb
jecxz
sahf
lcall
fbstp
ds
and
out
sahf
mov
xchg
and
lods
jbe
add
stc
pop
outsb
and
mov
push
in
add
mov
add
cmp
cmp
ss
jg
or
stc
bswap
cs
stos
fs
in
imul
add
outsl
lock
outsb
or
xchg
jg
popa
push
inc
mov
push
inc
pop
sub
in
xor
ja
loop,pt
and
rolb
scas
scas
dec
xor
fcompl
ljmp
call
add
aaa
out
cld
push
lea
loope
pop
or
adc
inc
dec
sbb
aad
cmp
inc
sub
xor
decb
rorb
xor
dec
je
dec
mov
sub
xchg
js
pop
sbb
mov
jmp
sti
pop
mov
sub
ret
into
mov
mov
rcrl
jae
iret
xor
pop
add
lret
pop
push
jmp
xor
xor
rclb
fwait
test
push
mov
aas
ds
jle
hlt
int
jecxz
sub
sbb
out
dec
xchg
mov
fistps
dec
sbb
imul
pop
jno
fstpt
or
and
cmp
ret
mov
push
jl
stos
or
push
or
jp
dec
jp
push
cmpl
inc
mov
addl
movsb
lds
je
subl
or
in
sbb
cs
into
lods
add
cmp
in
gs
repz
push
cwtl
push
add
ret
xchg
dec
jecxz
daa
loopne
cwtl
sti
sar
dec
adc
dec
out
test
fs
in
cmpsb
gs
test
dec
push
aam
test
add
xchg
push
sbb
mov
pusha
filds
outsb
jae
sub
mov
andl
ds
cwtl
sbb
fstpl
sbb
std
jmp
cmp
mov
dec
int3
loop
mov
mov
pop
imul
loope
ret
ljmp
clc
and
mov
loope
xchg
outsl
fsub
addr16
sub
xchg
fldlg2
repz
add
lods
xor
push
dec
and
insb
pop
in
sub
sbb
xchg
je
add
cmp
cs
or
cmp
mov
cld
lock
dec
loopne
adc
cmpsl
or
jb
scas
or
popf
pop
add
mov
loope
sbb
cmp
jp
es
stos
addl
pop
insb
mov
imul
jbe
movsb
nop
cs
xor
mov
sbb
push
xor
inc
loopew
addr16
lods
mov
mov
xchg
jbe
or
jns
inc
rorl
sub
es
ret
jp
popf
cmpsl
cmpsl
out
pop
repnz
bound
dec
xchg
daa
xor
jge
add
or
fistpl
mov
pop
dec
jo
jo
int
sbb
cmovp
xchg
dec
and
icebp
mov
ds
xchg
repnz
sbb
aas
loopne
xor
and
sbb
leave
cmc
xchg
cmpb
adc
imul
add
mov
jecxz
add
rcll
cltd
es
sbb
call
dec
push
jl
pusha
mov
pushf
adc
cltd
mov
imul
xchg
shl
testl
inc
lcall
push
or
jg
lret
xor
mov
shrb
stc
mov
loopne
scas
add
add
test
mov
xchg
mov
pusha
movsl
icebp
pop
popf
out
js
jmp
enter
movsb
xchg
aas
es
sahf
pop
mov
inc
mov
cmpsl
loopne
pop
pop
xor
sub
push
mov
aam
cmpsb
pop
mov
fs
cmp
dec
imul
dec
call
xor
or
leave
pop
xor
dec
xor
stos
sub
mov
aaa
or
or
iret
xchg
xor
or
mov
out
cli
sbb
jl
mov
sub
jge
ret
pop
add
mov
in
aaa
mov
fwait
in
jle
das
es
jo
mov
sub
mov
ror
les
dec
and
mov
inc
xor
jge
lcall
adc
lahf
pop
lcall
or
lods
jnp
xchg
mov
shlb
mov
fdivr
into
out
xchg
sbb
inc
sbb
push
fmull
or
in
andl
jbe
insl
inc
nop
adc
push
int
inc
andl
icebp
xchg
ja
jp
sub
ret
mov
out
out
xchg
sub
lods
mov
daa
lods
stos
cmpl
or
sub
or
adc
mov
pushf
fisubs
aad
mov
push
shlb
out
mov
mull
dec
jb
rcll
jmp
push
popf
xor
in
cmpsl
dec
inc
pop
in
pop
mov
je
imul
push
les
push
daa
fnstenv
pop
into
jne
subl
in
in
xchg
testb
out
insb
repz
jp
popf
iret
call
push
notl
ja
outsl
fldenv
shr
rolb
lea
xchg
mov
fldcw
lret
inc
pop
fidivrl
mov
mov
cmpl
and
xchg
movsb
xchg
fsubp
aaa
pop
call
pop
xchg
mov
mov
rolb
lahf
cli
shrb
cmp
mov
test
pop
pop
add
test
inc
sbb
lods
inc
nop
shll
icebp
push
popf
push
stos
fstpt
aas
fcmovnbe
cltd
fwait
push
push
xor
ja
iret
repnz
jle
addb
add
icebp
fwait
adc
fadds
lcall
out
push
inc
and
lock
pusha
mov
out
in
add
rcr
hlt
movsb
int
stos
test
mov
je
dec
and
dec
cmc
jnp
ret
xchg
push
insl
mov
adc
sahf
cmc
mov
arpl
and
mov
scas
jl
xor
mov
es
fcmove
inc
xlat
jmp
jge
xlat
push
xchg
vcvtsi2ss
mov
dec
test
xchg
jae
xchg
in
mov
mov
dec
mov
lea
jne
sti
sub
fcoml
mov
daa
mov
push
xor
movsb
mov
xchg
mov
xor
sub
mov
pop
jp
add
cmpsl
in
add
fbld
sahf
dec
mov
daa
mov
mov
pop
aad
and
loope
xchg
sub
mov
push
pusha
aaa
xor
sti
in
push
mov
or
popa
icebp
pause
loop
pop
xorl
fisubrl
pop
es
lods
cmp
ror
into
jb
jae
push
loop
aaa
push
sub
mov
test
push
lods
xchg
sub
cli
sbb
aad
inc
mov
add
jne
ss
mov
jns
dec
and
and
push
add
shll
movsl
shlb
dec
rorl
mov
pop
and
aas
es
adc
test
sub
test
and
in
sub
fidivs
cmp
jl
std
movsb
incl
lods
mov
pop
dec
xor
cltd
or
add
push
mov
mov
or
and
out
jno
xchg
pop
cli
xchg
ljmp
cmp
add
mov
cltd
push
adc
mov
negb
lods
int
jmp
sbb
xchg
mov
pop
mov
incb
jecxz
pop
nop
add
xchg
xchg
adc
sub
sub
push
mov
push
lahf
lock
add
ljmp
out
mov
sub
in
aaa
scas
pusha
mov
mov
mov
ret
mulb
inc
xchg
inc
out
and
mov
stos
loopne
jbe
insb
lods
lea
je
js
jns
add
scas
das
dec
sbb
cwtl
adc
movsl
ss
push
fdivrp
ret
mov
xchg
and
arpl
cmp
dec
jle
repz
outsb
xor
rclb
dec
xchg
xor
insb
popf
cmpsl
push
pop
sbb
mov
stos
gs
jle
out
mov
ss
add
int3
mov
pop
inc
mov
xchg
push
pop
aas
add
push
mov
in
sarl
and
nop
stos
ljmp
aas
xorb
add
neg
push
ret
rolb
daa
mov
mov
mov
subl
int3
imul
movsl
sbb
jge
shrb
dec
inc
pusha
push
scas
nop
jecxz
mov
sbb
jmp
scas
dec
fimull
add
cwtl
shrl
or
pusha
xor
pop
stc
dec
leave
mov
xchg
cmpb
or
in
and
fstps
mov
imul
dec
pop
pop
dec
dec
cmp
outsb
arpl
dec
mov
xchg
cld
adc
push
xor
aaa
and
inc
scas
or
mov
xlat
roll
add
pushf
dec
fldcw
ret
movsb
and
mov
adc
adc
insb
xchg
aam
add
bound
jle
sti
mov
test
cmp
imul
insl
fstl
inc
xrelease
adcb
scas
sbb
lcall
pop
fcomps
dec
add
mov
andb
push
outsb
addr16
iret
inc
inc
mov
jg
sbb
and
out
add
push
stc
arpl
fwait
cmpsb
data16
sbb
jne
mov
inc
loop
mov
fdivrs
mov
cmovp
add
addl
pop
sbb
rcr
mov
xchg
add
mov
jne
push
xor
jno
mov
test
mov
dec
lods
cmp
or
leave
int
fwait
popf
mov
dec
lahf
adc
sub
sahf
ds
xchg
cwtl
push
bound
repnz
stos
mov
cltd
orb
pop
cmp
add
jo
jl
xchg
outsl
call
jno
outsl
inc
mov
cmp
and
sub
inc
repz
insl
scas
adc
pop
jge
sbb
push
and
mov
shll
xchg
sbb
lock
dec
popf
jb
pop
cld
xchg
cmp
adc
pop
pushf
ja
out
lcall
imul
in
pop
push
pop
fildll
inc
jns
cltd
mov
in
cltd
ror
imul
sbb
mov
cmp
sub
jo
jge
int
mov
lcall
mov
pop
divl
jo
mov
nop
lea
jae
mov
pop
test
pop
cwtl
add
in
jl
loope
lcall
sbb
test
cld
mov
adc
fidivs
and
lds
adc
arpl
mov
fisubl
mov
hlt
jae
andl
in
bound
jp
pop
xor
adc
push
pop
jecxz
leave
jl
sub
sbb
mov
ret
push
add
imul
cmpsl
std
cmp
mov
sub
nop
sub
dec
cmp
push
imul
and
jns
loopne
push
stos
das
out
icebp
jo
dec
stc
test
and
ja
jp
fistpl
aad
jnp
pop
or
pop
cli
fsubs
xor
cld
leave
fisubl
and
mov
pop
fcomi
cmp
repnz
sti
out
jns
push
cmp
leave
or
ss
push
add
imul
jae
rcrb
out
insl
mov
data16
or
fs
inc
rorb
stos
cmp
cmp
leave
pop
sahf
push
das
mov
ret
cli
lods
pusha
cmpsl
xchg
sar
rcrb
mov
dec
popf
popw
jl
push
popf
pop
cli
mov
mov
clc
mov
pop
and
inc
inc
xorl
xor
andb
xchg
fwait
jecxz
addl
mov
clc
aas
jecxz
sbb
dec
inc
adc
dec
pop
xchg
mov
lret
cmp
ja
leave
sub
cmc
repnz
cmpsl
out
mov
icebp
and
xchg
xchg
stos
gs
push
test
sub
dec
ljmp
repz
cmp
pop
icebp
mov
imul
movsb
ficomps
mov
mov
push
push
mov
jae
mov
push
mov
add
ret
jl
cmp
fs
inc
mov
lds
cmp
fldt
arpl
in
dec
jp
cwtl
iret
rcrl
daa
xor
sbb
ja
mov
in
sub
imul
int
and
mov
push
inc
addb
fstpt
pop
add
out
rolb
insl
and
push
fs
pop
push
imul
pop
sub
je
and
sub
lods
push
adc
cmc
or
sub
cmp
ljmp
dec
pop
cmc
scas
mov
push
pop
lea
test
fistps
add
or
sbb
jno
pusha
lcall
or
cli
fistpll
mov
es
out
pop
mov
sub
movl
xor
jmp
sarb
dec
pusha
mov
xchg
loopne
lods
mull
mov
sbb
dec
push
lret
aad
sub
or
daa
bound
adc
fwait
sbb
cwtl
add
cli
mov
xchg
mov
daa
sbb
in
repnz
pop
roll
leave
inc
aam
int3
test
or
mov
sti
mov
lods
cmp
pop
inc
lods
daa
inc
mov
aad
xchg
mov
cld
stc
pop
stos
push
add
xchg
ds
fcmovne
decb
jl
imul
cs
lods
test
outsl
outsl
iret
gs
adc
in
out
or
adc
out
movsb
cmp
xor
iret
pushf
and
jno
xchg
test
ljmp
xor
lret
in
and
mov
mov
in
push
test
imul
cld
mov
je
mov
fdivp
adc
sub
pushf
shll
pop
fmull
out
inc
ds
xchg
xor
stos
cmpsb
cwtl
subl
clc
icebp
iret
mov
xchg
xor
loop
dec
aam
ja
jl
out
adc
or
inc
cwtl
test
test
xor
ja
cs
mov
push
jp
mov
lret
sbb
icebp
or
das
mov
push
cld
ja
jae
inc
jne
mov
scas
scas
dec
rorb
shlb
fs
test
xchg
sub
neg
jae
stos
pop
pop
push
cli
or
fldln2
add
aaa
das
lock
xlat
das
cli
jno
inc
in
jns
pop
out
ds
out
and
xchg
enter
pushf
jbe
ret
nop
dec
subb
sahf
cmpsl
cmp
lret
adc
arpl
in
scas
jb
pop
scas
pop
lods
arpl
adc
xor
lret
cwtl
negl
jns
sbb
lea
jecxz
sarl
dec
jp
jo
shrl
lret
fwait
ret
insb
faddl
cwtl
lret
cmpsb
pop
fwait
pop
fcompl
lcall
daa
add
or
jg
inc
xchg
mov
loope
xor
adc
xchg
gs
test
cmpsl
push
lret
pop
insl
add
ds
nop
mov
fnstenv
sbb
test
dec
das
jl
lret
aaa
out
int3
fsubrl
pop
sub
jp
xchg
mov
jl
test
outsl
jmp
lds
pop
mov
adc
jecxz
mov
inc
xchg
jo
shrb
mov
bound
aad
mov
or
dec
scas
cld
popf
mov
aam
push
and
jle
adc
inc
lcall
jmp
add
sahf
jb
push
psllw
vcvtss2sd
pop
and
mov
lock
xor
sub
adc
dec
aam
les
hlt
push
imul
stos
icebp
into
fcmovne
call
lock
out
aam
pop
and
pop
std
in
fidivs
pop
fsubl
pop
mov
loop
pop
divb
loopne
popf
cwtl
or
inc
pop
daa
in
out
clc
sbb
pushf
sbb
aaa
fldl
jbe
aas
cmp
out
adc
cmp
xlat
out
mov
inc
ror
mov
shll
inc
mov
sub
lcall
cld
push
out
or
push
rcl
insb
or
jmp
mov
cmc
cs
shll
das
nop
fstpl
ret
repnz
push
stos
cmp
sbb
cli
mov
je
inc
adc
in
daa
js
iret
mov
fldl
loopne
test
aaa
sbb
inc
and
inc
xor
fwait
test
xor
adc
xorl
and
add
mov
xchg
fsubrl
and
and
pop
xor
xchg
adc
sbb
jge
test
sub
mov
cli
jle
ja,pn
sub
ret
adc
test
sbbl
pushf
pop
jne
es
ret
or
pop
js
cltd
pop
test
jl
xlat
cmp
adcl
sbb
roll
mov
cs
call
aaa
rorb
fwait
test
pusha
sbb
dec
ss
subl
jns
and
cmpsl
cs
imul
fisubrs
lret
jns
mov
imull
out
jecxz
pop
dec
nop
pop
pop
sub
cmc
ret
sub
leave
adc
mull
xchg
lret
std
arpl
mov
push
pop
dec
addr16
les
movsb
jae
shrb
inc
inc
jle
daa
mov
mov
lea
cmpl
push
sbb
xor
xor
sbb
jge
dec
and
in
repnz
pop
imul
pop
adc
add
ds
mov
sub
icebp
mov
popa
sub
mov
xchg
inc
movsl
cli
into
inc
ljmp
sahf
sub
stos
enter
leave
push
out
xchg
pop
rcrl
jns
push
xchg
divb
lds
mov
pop
adc
sub
push
mov
ficoms
icebp
adc
sbb
push
sbb
out
mov
mov
push
pop
pop
mov
testb
mov
call
jge
js
fwait
cmpsl
out
push
sbb
inc
jae
int3
in
aas
push
fiaddl
xchg
jecxz
arpl
push
mov
mov
addr16
test
aad
mov
push
lods
pop
sub
mov
filds
jne
xchg
mov
pushf
pop
dec
mov
jp
cmp
and
andb
out
in
push
push
xchg
pop
or
mov
jo
mov
push
jne
sub
ret
mov
loop
sahf
sahf
enter
xchg
in
cmovns
fsubr
pop
pop
xchg
xor
mov
sub
jp
cmp
nop
sbb
add
mov
jne
repnz
cmpsb
aaa
lods
or
movsl
ret
pop
or
jp
jle
push
jno
cld
dec
push
mov
mov
hlt
inc
sub
sti
dec
mov
rolb
mov
test
out
fadds
ss
shlb
or
sbb
mov
int3
add
inc
pop
pushf
stc
ret
or
dec
jecxz
jmp
jg
jg
jmp
inc
add
repz
mov
dec
mov
sbb
jne
pop
xchg
lret
fsubrs
push
pop
addl
push
repz
lods
gs
mov
mov
pop
xlat
sub
aas
popa
inc
push
lods
sub
mov
pop
cwtl
mov
pop
data16
sub
cli
je
jno
cmc
js,pn
inc
xchg
lret
jge
loop
lock
jl
mov
sarl
sbb
cmp
add
or
loopne
jo
nop
sahf
lds
daa
sbb
out
js
inc
fwait
std
mov
sbb
inc
into
dec
lods
shll
icebp
int3
dec
inc
int
push
xchg
jb
push
push
adc
data16
xchg
test
sbb
push
out
jb
xchg
mov
iret
sub
dec
in
mov
jg
push
int3
in
int3
jae
push
loop
xchg
sahf
sub
mov
cs
ja
inc
aaa
pop
push
orb
sub
cs
stos
mov
into
xor
xor
jne
smsw
mov
cmp
out
xor
dec
jle
out
mov
test
insb
pop
out
add
in
cmp
out
loope
pop
jb
mov
mov
mov
jbe
shlb
loope
push
movsl
mulps
sbb
cli
or
dec
leave
pop
js
fmull
dec
sahf
cwtl
dec
or
or
daa
int
dec
stos
cwtl
dec
in
push
inc
cwtd
addr16
popf
sbb
mov
cmp
mov
sub
push
xchg
fcomps
lods
jmp
mov
sahf
std
xor
dec
sbb
xor
or
mov
cmc
sub
add
stos
push
aam
xchg
es
cmc
je
jbe
cmp
mov
or
push
xchg
jno
jg
stos
loop
in
stc
and
jl
push
mov
out
inc
cltd
stc
pop
dec
sub
sarl
popa
ja
std
dec
or
loopne
aam
sub
stos
cmp
cmp
mov
sti
daa
or
push
jecxz
ret
xor
imul
js
movsb
xor
lods
inc
lahf
mov
enter
loope
xor
mov
jo
jns
xchg
daa
psrad
incl
push
cltd
xchg
sub
dec
les
jne
cltd
inc
pushl
dec
movsl
xchg
insl
cli
rcl
fsubr
or
leave
std
inc
push
add
pop
das
lret
sbb
sbb
outsl
aas
and
pop
sti
inc
fwait
bound
out
or
sahf
cmp
adc
je
adc
adc
cmp
or
pop
xor
push
test
insl
xchg
xchg
outsl
pop
inc
rcr
ret
pop
popa
mov
xor
inc
mov
outsl
xchg
mov
xor
fwait
push
mov
pop
pop
outsl
inc
cmc
fstl
pop
out
fsubl
gs
rcl
mov
xchg
mov
rcl
jno
xchg
out
repnz
sub
dec
in
cmpsb
adc
enter
xchg
sub
fistpll
sahf
fstpt
loop
leave
push
aam
paddd
cmpsb
push
cmpsl
and
dec
mov
mov
das
mov
addr16
and
lcall
cmp
out
dec
in
ret
inc
adc
mov
stc
rcll
xor
inc
mov
mov
xchg
mov
sbb
xchg
pop
arpl
cmp
js
movsb
jecxz
xchg
and
sub
mov
push
dec
pop
popa
ficompl
test
fmull
add
xchg
sbb
and
sub
or
aaa
pop
fidivrs
mov
dec
xchg
fstpt
cmc
jae
iret
repnz
rol
out
shlb
push
add
and
sub
out
gs
and
leave
jle
cli
add
and
cltd
cmp
call
jle
scas
in
lcall
je
popf
sbb
ss
pop
jo
fadds
mov
jnp
popf
jns
xchg
xchg
roll
adc
push
jmp
repz
adc
sub
loopne
movd
cmpl
adcb
sahf
jb
cmp
ja
fs
sub
mov
cld
xor
lahf
lods
jg
subb
inc
daa
jmp
leave
xor
xlat
addr16
mov
jmp
shlb
mov
decl
and
aas
js
imul
ret
fildl
stos
xchg
sbb
push
adc
in
ret
and
scas
inc
aas
mov
rcll
test
lret
xchg
xor
mov
arpl
roll
addr16
push
jp
lcall
dec
jle
in
dec
add
dec
sahf
sbb
dec
jno
outsb
fwait
cmp
add
mov
inc
sti
jg
xor
rcrb
sub
fwait
pop
pop
jmp
ja
mov
pop
sub
lods
rcrl
or
out
aaa
inc
ss
loopne
fnstenv
cli
nop
dec
dec
addb
push
or
insb
ljmp
psrld
mov
rolb
shll
mov
jns
adc
aad
sbb
pop
sub
jg
jmp
imul
push
push
inc
or
js
stos
and
mov
cli
cmc
push
mov
cmp
int
out
mov
dec
and
pop
cmc
aas
dec
lds
or
in
adc
popa
inc
cmc
aas
lcall
cmpsb
aam
fwait
shll
pop
call
lret
mov
xlat
inc
out
negb
xchg
ljmp
lds
shll
xlat
sbb
dec
jo
inc
mov
test
pop
cmpsl
mov
mov
mov
into
ret
mov
xor
jno
pop
mov
xchg
lock
mov
popf
pop
push
mov
xor
out
cmpsl
ds
push
pusha
int3
push
lahf
push
sbb
sahf
lock
or
sbb
adc
xchg
mov
jmp
cltd
xchg
sbb
inc
mov
cmp
lret
addr16
and
je
jbe
fistpl
mov
stc
pop
andb
divl
or
inc
cli
stos
loopne
inc
ret
dec
jge
add
mov
and
fs
xlat
xchg
mov
cli
fists
mov
dec
sahf
imul
int3
rcr
sub
mov
xchg
jmp
in
add
fsubl
scas
sub
xchg
test
pop
fdiv
jge
rcrl
ss
cmp
push
mov
push
mov
lahf
int
sub
rorb
add
inc
mov
xchg
xor
mov
mov
clc
mov
push
dec
dec
inc
mov
insl
test
pop
ja
pop
mov
inc
test
mov
inc
mov
inc
inc
std
cmpsb
pop
cmp
or
jb
push
lock
imul
xchg
jg
test
ss
inc
pop
fdivrp
add
mov
adc
out
pop
pusha
iret
mov
add
cmpsl
pop
test
sub
rorl
jnp
andb
iret
xor
negl
insl
out
jns
xchg
aas
xchg
pop
mov
inc
cld
jge
inc
mov
xor
pop
fstp
out
lret
dec
rolb
mov
cmpsb
mov
xchg
subb
adc
xlat
mov
jb
or
push
dec
and
enter
arpl
int3
inc
loop
add
cmp
pop
ficoms
lcall
cli
rclb
add
cmp
es
das
icebp
cli
sbb
lds
cmp
ss
inc
push
movsb
dec
jl
pop
mov
in
push
outsl
sbb
dec
and
pusha
xor
jnp
out
cmpsb
push
push
leave
mov
dec
sub
xchg
sub
ljmp
mov
cld
xchg
push
mov
mov
dec
cmp
xchg
aam
pushf
jo
sbb
test
scas
jg
mov
scas
xlat
imul
lret
dec
cld
gs
loopne
xchg
sbb
scas
sbb
arpl
aam
test
xchg
rclb
mov
shr
pop
push
call
add
popf
into
dec
test
sub
inc
mov
cmp
in
sbb
push
ss
repnz
sub
and
out
and
sbb
dec
xchg
aas
jbe
cmpl
jmp
shlb
sbb
pusha
xchg
xor
push
dec
add
fdivr
pop
and
mov
dec
enter
hlt
int3
mov
mov
int
test
xchg
cmp
pop
xor
jne
inc
pushf
icebp
pop
jg
mov
push
jecxz
add
sub
sub
adc
subl
cmp
sub
or
mov
cltd
ss
jnp
aam
xchg
sahf
dec
sbb
js
dec
fcomi
int
mov
inc
mov
mov
out
fmuls
ja,pn
into
scas
jp
outsb
push
insb
jle
mov
insl
xchg
xchg
imul
ljmp
push
lea
push
cmp
lret
dec
int
int3
fadds
jge
fdivrs
pop
nop
mov
imul
call
cwtl
jnp
cmp
pop
jmp
add
xchg
mov
mov
xorb
cld
pushf
cmp
outsl
pop
push
inc
arpl
ja
sbb
ds
jae
into
pop
mov
xchg
push
jae
mov
mov
pop
pop
hlt
movsl
andl
jl
fidivl
xor
lcall
gs
sub
es
ret
mov
daa
jnp
adc
int
lds
sub
mov
cwtl
sti
and
cmp
or
mov
roll
in
xchg
pusha
dec
imul
xor
test
les
outsb
adc
or
dec
push
lret
mov
inc
fsubs
mov
js
xchg
imul
jns
pop
mov
mov
adc
fcomps
and
jmp
insb
leave
pop
aad
scas
imul
sbb
inc
inc
enter
mov
in
pop
ret
jb
xlat
mov
push
pop
mov
sub
inc
xor
ss
mov
js
or
push
sub
leave
mov
jne
jne
lods
inc
ss
mov
jns
sti
stos
lret
movsl
mov
int
inc
out
and
pop
mov
pop
les
loopne
lods
shll
sbb
addr16
pop
sarb
aam
mov
lret
mov
loop
repz
aam
aad
shr
or
divl
mov
into
ja
cmpsb
or
dec
mov
and
sbb
jnp
xor
fnstcw
std
daa
cmp
pop
push
or
adc
outsb
cmp
xor
adc
sub
sti
jl
fcmovb
mov
insb
push
pop
imul
add
lds
sub
sti
movsb
scas
add
fbld
mov
fisubs
call
in
xchg
imul
cld
pop
fcomps
cmpl
pop
sahf
xchg
clc
and
lds
push
andl
sub
jl
adc
mov
inc
add
dec
cmp
ret
js
xchg
dec
and
mov
scas
popa
lock
bound
add
cld
mov
repnz
fs
sbb
test
fidivrl
mov
test
push
mov
in
cmc
mov
inc
gs
and
into
jnp
cmp
enter
mov
jne
jae
mov
dec
and
in
lds
cs
adc
sub
ret
mov
test
wrmsr
mov
sub
add
or
in
jbe
fildl
jnp
cld
mov
les
adc
sbb
jle
lret
lret
js
shll
cmp
jne
sti
sub
out
stc
stc
sub
xor
push
mov
mov
push
les
shl
ss
and
rcrb
pushw
pop
bound
in
fwait
inc
dec
stos
jne
icebp
cmpsl
ficoml
ret
repnz
insl
cmp
push
call
mov
sbb
sbb
ljmp
fadd
push
pop
jo
and
out
jg
fsubrs
les
or
adc
sbb
call
out
mov
push
mov
inc
mov
rorb
jecxz
clc
cmp
inc
inc
mov
inc
sarb
jnp
test
sub
daa
cmp
test
mov
jl
fdivs
xchg
xchg
or
test
pop
sti
out
test
push
sbb
aad
jp
lods
in
ret
pop
ret
in
cmc
jl
cmp
sub
iret
outsl
cmp
cmc
mov
and
jg
xor
mov
lods
or
push
hlt
call
push
mov
fldt
lods
test
xchg
js
cmp
cmpsl
int
or
mov
xor
pop
push
rclb
xchg
dec
pushf
jo
sub
push
xor
dec
mov
push
in
cld
jae
sbb
add
ss
fmuls
pop
out
inc
cmp
test
mov
popa
pop
jge
sub
push
iret
fisttpll
cmp
pop
pop
inc
push
call
lds
sbb
test
push
addb
in
je
jnp
add
push
es
push
notl
pusha
and
push
sub
inc
adc
mov
pushf
popf
pop
jo
je
jp
aam
pushf
cltd
lret
xor
inc
xchg
sbb
pushf
dec
addr16
mov
cs
mov
lcall
push
in
inc
mov
pop
mov
test
jl
inc
cwtl
jb
in
jecxz
jns
fists
jae
movsl
or
add
mov
sti
iret
insl
inc
movl
insl
xchg
xor
aaa
pusha
pop
sbb
imul
aas
roll
or
jmp
mov
and
pop
mov
lret
xchg
movsb
bnd
std
push
inc
and
lods
and
sub
cltd
xor
and
cltd
pop
and
pusha
cltd
and
adc
clc
enter
cmp
add
mov
dec
aaa
data16
sub
dec
loop
mov
xor
jno
xchg
call
adc
sahf
pusha
ret
jl
and
testb
inc
ss
mov
into
loope
xchg
cli
mov
or
cmpsb
into
mov
inc
ficompl
fnstsw
cmpl
and
int3
dec
popa
stos
rcl
fstp
dec
ljmp
movsb
or
xchg
sub
dec
push
in
outsl
sti
rcl
aaa
mov
aas
les
cmp
inc
je
outsl
clc
add
or
cld
jnp
into
into
cmp
xor
inc
mov
call
lret
mov
andl
frstor
mov
add
repz
mov
jp
inc
test
sbb
into
outsl
mov
outsb
push
ss
cmp
fwait
int
inc
sbb
mov
xor
push
mov
xchg
inc
cmp
lods
inc
shl
push
mov
incl
mov
dec
adc
pop
test
and
push
jmp
je
mov
or
mov
pop
outsl
mov
mov
mov
addr16
rcll
mov
fcompl
cmp
mov
push
mov
adc
pop
pop
xor
push
loope
rcll
outsl
xchg
jg
test
mov
pop
out
pop
cmpb
fstpl
inc
dec
add
jb
push
sti
into
xor
mov
add
jecxz
jge
loope
push
out
movsl
imulb
cmp
xchg
adc
pop
clc
pop
loope
pop
incl
jne
jp
imul
mov
ss
dec
dec
fs
and
mov
clc
lahf
adc
leave
push
nop
adc
mov
imul
and
shll
aam
and
mov
inc
repnz
aas
sub
inc
push
out
inc
ret
dec
pusha
jg
dec
mov
out
mov
mov
cmp
inc
push
cli
shll
push
insb
inc
ret
insb
or
lock
pop
nop
test
fnstsw
pop
xchg
orl
les
jle
fwait
scas
shl
pop
mov
pop
push
cmp
frstor
cli
fstps
xor
int3
cld
dec
aaa
pop
cmc
adc
xchg
inc
call
xorl
aaa
xor
cmp
int
stos
cmp
rcl
insl
add
stos
loop
xchg
dec
rol
iret
push
dec
les
in
xor
pop
insb
cwtl
in
jno
add
imul
sbb
and
lods
imul
daa
ja
movsl
jecxz
push
and
sarl
jge
lods
cmpl
mov
pop
fistl
mov
xchg
mov
int3
idivb
pop
xlat
push
or
cli
sbb
push
lock
inc
aaa
insl
or
pop
hlt
gs
lods
cs
pushf
mov
push
adc
dec
mov
call
dec
dec
dec
cmp
dec
nop
dec
xchg
and
add
rcll
dec
xor
jecxz
mov
stos
popf
or
sbb
inc
stos
test
mov
nop
imul
inc
int3
or
cmp
jbe
pop
mov
mov
enter
cmpsl
inc
movsb
repz
in
add
mov
xor
xchg
lcall
dec
gs
or
inc
push
xchg
jnp
mov
sbb
sbb
xor
xor
xchg
or
jnp
sbb
and
xchg
in
jbe
mov
mov
mov
and
ss
mov
cmpsl
sub
sti
push
sbb
adc
add
adc
sbb
or
xor
or
jge
sbb
fs
push
fldcw
xor
dec
jae
inc
bound
movl
rcll
xlat
dec
je
shrl
sti
pop
pop
or
adc
fldt
jmp
mov
inc
pop
xchg
and
inc
sub
inc
fisubl
daa
mov
cmp
add
in
bound
mov
movsl
sub
cmp
push
out
push
adc
pop
xor
xor
cmpb
mov
mov
push
add
jns
and
cwtl
test
fbstp
push
inc
in
pop
cmc
or
jg
test
xchg
mov
xchg
jmp
push
mov
mov
inc
out
mov
ret
cmpsl
xchg
or
sahf
in
inc
in
add
inc
in
jb
jnp
mov
add
stos
int3
popa
mull
jg
testb
enter
insl
push
adc
sub
sti
push
add
in
inc
cmp
mov
gs
lcall
aaa
mov
notb
aaa
push
shrb
and
xorl
push
or
cmp
mov
mov
xor
dec
pop
stos
int
into
cld
xor
or
xchg
ffreep
mov
aad
mov
mov
push
jb
cwtl
jnp
test
loop
popa
adc
popf
lahf
jo
xor
loope
sub
inc
or
addr16
in
stc
daa
dec
mov
xor
mov
pop
shl
test
sbb
sahf
fldenv
pop
fsubs
mov
lods
push
std
outsb
or
aaa
adc
rcrl
inc
ret
push
inc
add
mov
xor
cld
jbe
dec
shl
xor
mov
mov
xchg
stos
or
outsl
movsb
std
nop
es
ret
mov
sbb
test
sahf
dec
push
call
jne
mov
testb
addb
jb
lock
aam
sbb
adc
shl
pop
cmpsl
and
pop
mov
jnp
rcll
xlat
jg
inc
gs
movsb
push
xchg
push
loopne
fstps
imul
scas
mov
sub
push
adc
pushf
jmp
lret
dec
sbb
jne
inc
xchg
scas
lahf
jb
js
xor
sti
enter
add
clc
sbbl
or
jnp
mov
loope
cwtl
adc
out
fiadds
or
aas
and
addr16
hlt
test
inc
loopne
sarl
je
mov
pusha
jl
inc
add
mov
ret
in
loop
add
fstl
ret
sbb
aam
sarl
adc
push
fcomps
jg
stos
sar
sub
mov
leave
sbb
xchg
cmp
sub
lock
fbstp
jecxz
hlt
mov
enter
push
sub
fstps
movsb
dec
icebp
jmp
inc
loopne
dec
dec
scas
mov
mov
stos
xor
lods
xor
test
or
cltd
lcall
outsb
jge
lea
jmp
or
loope
pop
jno
pop
push
mov
xchg
scas
ja
or
fbld
leave
xchg
leave
cs
cmp
les
lret
sbb
cmp
add
jb
call
gs
sub
xor
inc
xchg
cli
adc
mov
outsb
rol
lock
mov
sbb
movsl
dec
dec
test
rep
pop
pop
repz
xor
and
pop
or
in
jle
iret
das
cmpb
subl
inc
mov
sub
and
ffree
sub
fistpl
cmp
push
outsb
sbb
aam
insb
inc
test
xchg
add
sbb
or
xor
lea
dec
xchg
and
stos
insl
popf
jl
xor
out
or
repnz
dec
aaa
jecxz
inc
test
ficoms
shlb
mov
mov
xor
fmuls
adc
gs
or
aas
add
xchg
mov
lahf
sub
push
jo
aas
movsb
cmp
xor
int3
out
mov
fs
lret
subl
fsubrp
adc
mov
cmpsl
loope
inc
mov
shlb
sub
popa
sbb
in
pop
psubusb
fstl
stos
cmp
mov
or
xchg
jl
and
arpl
jl
fcoml
mov
into
lds
push
mov
jb
ret
out
xor
out
rolb
cwtl
loopne
pop
jecxz
stos
das
fisttpl
jnp
mov
jae
pop
gs
push
mov
jmp
shrb
xchg
lret
les
inc
jb
xor
sub
jp
adc
mov
shl
daa
add
rolb
mov
test
je
orl
adc
jp
imul
adc
insb
sub
cmp
cli
fcompl
or
sub
cmpsl
in
sbb
fsts
icebp
add
adc
xlat
cmp
mov
sub
or
jne
xchg
mov
mov
enter
xlat
mov
mov
dec
and
rorb
mov
aas
mov
clc
fmull
add
imul
dec
or
jg
mov
add
test
sub
adc
pop
mov
sbb
sbb
cmp
movsb
jecxz
push
insl
jbe
dec
scas
adc
push
sub
cwtl
mov
aas
inc
cld
xchg
arpl
sub
clc
sbb
jg
and
daa
lock
adc
fdivrs
jl
icebp
xchg
loop
pusha
iret
bound
in
aam
inc
add
je
ret
add
xchg
inc
or
fbstp
enter
push
outsl
mov
cmp
ljmp
loop
scas
pusha
shlb
push
call
daa
pop
inc
and
jecxz
movsl
jo
icebp
clc
dec
andb
mov
repnz
or
stc
rsqrtps
mov
adc
sbb
stos
push
mov
inc
lods
jne
mov
dec
in
push
pusha
icebp
cwtl
xor
cmp
push
inc
mov
cmpsb
push
pushf
and
andl
call
movsl
sbb
pop
addr16
daa
sbb
pop
jno
cmp
dec
jge
into
jno
cmp
and
mov
scas
std
xor
mov
pusha
pusha
imul
push
scas
pushf
inc
mov
repz
movsl
inc
in
enter
xchg
js
push
dec
rol
outsb
and
out
inc
fstps
leave
or
sub
cmpsb
sub
or
fdivs
jb
jne
ljmp
lahf
xchg
push
mov
fadd
jb
loope
xchg
add
dec
adc
sti
adc
leave
cmp
cmp
test
sub
sub
or
or
mov
sti
mov
and
cli
data16
in
js
mov
mov
fbstp
and
out
roll
xchg
add
mov
test
lds
out
ja
mov
and
ret
adc
add
cwtl
loopne
sbb
jnp
cmp
and
jbe
mov
arpl
fsubrl
lahf
mov
xor
xor
dec
push
mov
push
sbb
int3
push
test
ss
jecxz
daa
sbb
cs
or
xor
or
fldcw
cltd
pop
pop
sbb
xchg
ret
pop
iret
xchg
stos
cmpsl
adcl
orl
js
call
xchg
pop
sti
daa
or
mov
test
xchg
in
or
push
add
into
mov
lret
adc
jno
inc
and
nop
std
test
jb
testl
divb
scas
pop
lods
xchg
mov
inc
data16
add
movsl
lcall
xchg
xchg
inc
pop
pushf
add
mov
icebp
outsb
add
ss
imul
push
add
jmp
ljmp
dec
std
dec
test
in
xchg
lods
sbb
jmp
or
adc
mov
adc
xchg
adc
xor
and
sub
jae
mov
jo
orl
ret
sbb
inc
or
fwait
jg
xlat
mov
xchg
dec
lods
arpl
sbb
add
sbb
dec
movsl
xor
mov
and
jp
jo
cmp
sbb
pop
jecxz
cmc
mov
clc
jbe
inc
and
pop
lock
faddp
lret
popf
cmp
test
or
gs
mov
repnz
mov
jno
push
mov
add
sbb
imul
ljmp
and
mov
jnp
jl
cmp
mov
inc
and
inc
in
iret
or
sbb
adc
adcb
call
iret
jge
pop
pop
push
xor
inc
xor
enter
xchg
test
icebp
es
or
xchg
in
shrb
mov
stos
and
dec
mov
mov
jns
dec
push
sub
mov
nop
loop
push
fwait
sub
push
dec
mov
test
cwtl
rolb
aad
data16
add
push
fstl
fisubl
cmp
sub
adc
ljmp
das
lahf
ss
dec
call
es
sbb
test
insl
or
inc
dec
sub
lcall
call
mov
pop
add
push
ficompl
cmp
adc
mov
fmuls
sbbb
cmp
mov
lock
jno
sub
add
or
sti
sahf
jg
lds
es
mov
loop
es
inc
popf
rcll
les
pusha
add
push
mov
pop
pop
imul
mov
xor
inc
int
sbb
sarb
lods
rcll
or
mov
das
ljmp
ljmp
popa
test
js
leave
pop
out
xchg
add
push
push
mov
sti
sbb
fidivrs
lret
mov
push
lret
adc
add
inc
jae
jl
lahf
popf
xchg
fcmovnb
jg
push
jle
push
dec
cmc
mov
cmp
aam
lret
cli
cmp
mov
jne
cli
outsb
xchg
ja
cmp
sbb
pop
imul
adc
mov
dec
xchg
loope
test
cmp
and
cmc
dec
sub
pusha
repnz
faddl
inc
xchg
fisubl
addr16
or
add
xlat
push
jmp
bnd
dec
dec
int
mov
adc
cwtl
test
loop
mov
lock
lock
add
jno
outsl
hlt
inc
add
cmovb
pop
xor
inc
or
iret
popf
xchg
jmp
sti
loop
icebp
shlb
fwait
pop
dec
adc
xor
mov
cmpsb
inc
ljmp
inc
push
stc
and
je
xchg
ret
xlat
fistps
mov
idivb
iret
stos
sbb
call
mov
lahf
aam
mov
push
mulb
jmp
or
xchg
insl
sub
sub
mov
xor
iret
mov
arpl
cmpsl
xchg
loopne
aam
pop
cltd
dec
es
sbb
push
mov
inc
in
pop
adc
lods
push
dec
aaa
cmp
fimuls
push
pop
sbb
loope
and
adcb
mov
dec
ja
push
call
push
mov
push
adc
fcomip
and
call
cmp
dec
cmp
loopne
lahf
daa
adc
mov
add
movsl
test
out
sub
inc
jle
dec
pusha
pusha
sub
pop
movsl
fwait
or
popa
fisttpl
dec
pop
lcall
cmpsl
shll
push
sbb
adc
lock
test
mov
mov
mov
add
shrb
cmp
stc
cltd
cmp
test
cmpsb
or
lret
xlat
sub
aad
push
mov
dec
ret
out
das
mov
cmp
lret
sbb
aam
lret
inc
inc
sbb
push
fcomip
add
scas
outsl
add
or
in
inc
sbb
inc
sahf
insb
pop
push
sub
mov
loopne
mov
adcb
or
push
inc
push
into
scas
cld
wrmsr
jo
cs
fidivs
outsl
mov
inc
outsb
sub
push
inc
sbb
mov
leave
mov
push
add
xor
insb
fists
pop
fwait
dec
pop
sbb
in
out
lret
data16
xchg
jns
jmp
pop
les
hlt
jp
or
stos
push
mov
push
and
sarl
pushf
hlt
dec
push
clc
mov
js
outsb
fstpt
mov
stc
lret
popf
fimuls
nop
in
repz
inc
mov
daa
and
fidivrs
sbb
lcall
adc
xchg
mov
subb
xchg
pop
inc
mov
push
inc
jae
ds
push
fwait
cs
insb
jne
mov
sti
movsb
shlb
fucom
adc
add
inc
hlt
jns
ja
push
push
mov
sti
test
xchg
cwtl
pop
dec
xchg
mov
xchg
push
popa
add
mov
dec
push
mov
mov
adc
inc
in
shrl
mov
or
or
cli
arpl
push
aad
inc
xchg
push
sub
enter
call
mov
add
mov
fdivs
jo
lret
orb
loope
pop
or
cwtl
aaa
mov
fbstp
inc
sar
push
pop
and
ret
push
sbb
push
push
cmp
dec
jae
jne
jnp
int
aad
imul
jne
dec
test
or
pop
fcmovu
xor
in
ja
imul
cmp
push
jmp
fists
divl
push
jl
push
push
add
sbbb
popl
lcall
or
and
imul
xor
mov
outsb
pop
inc
es
mov
std
fildl
sub
shr
push
xchg
cmpsb
add
xor
shr
cmp
lret
adc
xchg
addr16
sub
inc
inc
addb
lods
enter
xchg
cmp
data16
push
repnz
les
int
mov
out
push
xchg
shrl
adc
outsb
xchg
push
push
sub
scas
push
adc
xchg
and
and
push
pop
sti
push
negl
loop
out
rcrl
mov
enter
ret
jecxz
xchg
shlb
fwait
arpl
push
inc
lret
mov
fldenv
aaa
bound
dec
sub
jbe
mov
std
and
jp
adc
out
sti
mov
lods
das
mov
mov
lds
add
xor
out
arpl
cwtl
in
mov
push
dec
cmp
mov
push
cmp
hlt
out
mov
push
adc
fidivrs
dec
mov
mov
push
in
inc
adc
mov
data16
lcall
cld
fsubl
fs
int3
int3
fsubs
call
mov
mov
into
imul
notl
lock
test
jno
adc
loope
stos
inc
fildll
das
sbb
test
sbb
and
repz
lcall
xchg
bnd
popl
jmp
stos
lahf
out
ds
pop
cmc
ss
mov
push
int3
fs
add
mov
mov
dec
movb
outsb
sub
or
stos
jecxz
sbb
dec
pop
mov
ret
test
cli
sub
fs
inc
xchg
lds
cwtl
jo
stos
cmp
notb
rcll
mov
mov
cmpsb
or
or
mov
adc
bound
mov
xlat
jmp
pop
bound
pop
xchg
stos
jl
mov
cld
pop
xor
xor
add
dec
fbld
dec
push
jno
pop
jl,pn
andb
loop
push
pop
and
lret
cmpsb
nop
scas
data16
pop
loope
mov
test
jle
mov
clc
push
mov
out
neg
and
push
xchg
mov
push
inc
fcmove
xchg
xor
xchg
std
or
outsb
dec
inc
mov
pop
call
mov
data16
sahf
ds
xchg
icebp
sub
inc
dec
dec
mov
fsin
mov
pop
mov
mov
mov
add
insl
and
gs
out
pusha
jmp
out
adc
leave
adc
cmp
add
int
adc
push
rorb
jne
shlb
inc
jnp
fsub
in
jne
inc
fldl
sbb
fdivr
das
sub
add
jns
dec
data16
mov
push
xor
divb
add
pop
adc
push
inc
and
int3
cmc
fst
jne
inc
fs
push
jp
mov
aaa
arpl
inc
mov
scas
jb
or
sti
rcrl
push
ja
mov
push
filds
xchg
mov
pop
and
add
cmp
mov
out
gs
iret
testl
inc
lret
mov
jne
or
lds
pushf
add
mov
add
mov
jecxz
scas
mov
mov
xor
pop
xchg
test
int3
pop
shlb
jecxz
xor
mov
pop
out
cmpsb
int
incl
push
xor
insb
add
and
test
call
sub
out
cmc
popf
scas
push
arpl
std
xchg
shl
adc
shll
divl
fistpll
push
nop
dec
out
jae
jmp
mov
push
and
in
mov
adc
xchg
xchg
adc
sbb
iret
jp
imul
mov
mov
push
iret
jnp
mov
fisubs
push
xlat
xchg
aaa
inc
daa
xchg
mov
add
xchg
pop
aam
adc
packuswb
arpl
js
test
push
aaa
lcall
insb
or
cltd
dec
push
in
dec
lcall
adc
aas
inc
or
jl
imul
xchg
push
sub
jnp
mov
mov
inc
sarb
ljmp
cmpsl
inc
das
push
jmp
cmc
mov
dec
out
cmp
sub
sub
inc
push
inc
stos
daa
dec
xchg
mov
mov
mov
push
push
mov
xchg
pop
add
pop
cbtw
daa
xor
scas
push
mov
inc
cmpps
sbb
aad
imull
mov
push
insb
je
loope
in
stc
add
or
je
and
loope
xchg
pushf
push
outsl
xlat
inc
outsb
inc
dec
inc
sbb
in
test
movsl
or
cmp
mov
xor
mov
add
push
mov
imul
hlt
fwait
jmp
js
repnz
and
int
loop
inc
cld
sbb
push
repnz
dec
sar
push
je
cmpsl
xchg
fdivrs
cli
sbb
cmp
jb
and
sahf
jnp
shrb
push
xchg
aas
lea
fwait
cs
lea
push
mov
mov
push
mov
fbstp
pop
mov
cmp
sbb
loope
test
rolb
mov
popf
lret
loope
mov
jbe
cs
cmp
ds
mov
negb
or
pusha
mov
nop
xchg
mov
dec
aas
test
adc
push
add
jno
in
cmpsb
loopne
cltd
sahf
sbb
dec
in
dec
test
add
rorl
add
sub
lret
jno
xchg
in
iret
xchg
cmp
packuswb
or
or
mov
loope
pop
fwait
cmpsb
pop
jae
or
shr
rolb
es
pushf
sub
dec
mov
xchg
lcall
and
mov
int3
insl
aad
outsl
cmc
icebp
xchg
hlt
sub
mov
add
leave
or
test
mov
fnstsw
cltd
adc
jae
in
lcall
and
inc
aam
ret
ds
cmp
and
jne
test
in
hlt
dec
inc
repz
sub
out
add
pop
in
popf
outsb
inc
pop
sub
and
hlt
stos
fwait
in
push
adc
adc
cs
mov
into
mov
sarl
mov
pusha
push
dec
pop
push
xor
mov
push
stc
push
ds
and
call
imull
data16
and
xchg
pop
push
mov
mov
les
cmp
pop
sub
sbb
rorl
jbe
lret
imul
push
ret
sub
pop
mov
dec
jecxz
scas
mov
dec
cli
pop
push
dec
lods
pop
xchg
mov
inc
dec
and
frstor
hlt
jo,pn
pop
xchg
mov
pushf
sbb
push
popaw
pop
or
mov
mov
cmpsl
in
xor
lahf
mov
testb
push
les
adc
jnp
or
addr16
pop
mov
and
les
sbb
mov
icebp
in
dec
cltd
enter
fs
sub
or
dec
dec
jno
pop
test
pop
mov
mov
lret
mov
mov
ss
pusha
mov
mov
mov
ds
mov
fwait
mov
mov
mov
sub
pop
fsts
push
mov
aam
loope
inc
cmp
xor
dec
xchg
and
xchg
and
int3
insl
pop
out
push
adc
imul
xchg
mov
or
and
cmp
inc
fs
pop
add
int3
and
stos
push
push
fdivl
inc
arpl
sahf
stos
sbb
lret
aam
adc
sub
lods
in
in
jp
loopne
stos
int3
cltd
inc
aad
in
popa
cld
inc
jne
push
xor
rolb
inc
inc
inc
imul
add
fsubr
push
sbbl
cmp
filds
iret
jo
aaa
pop
stos
adc
cmp
xchg
lret
in
lods
push
xchg
or
das
xor
pop
jge
lcall
add
nop
xor
add
pop
mov
push
cld
mov
or
add
sub
stc
fs
jl
push
cmp
jb
aas
mov
pop
xchg
mov
cmp
out
imul
push
scas
imul
pop
sbb
sbb
fstp
and
add
es
iret
jle
jne
mov
test
mov
pop
loopne
dec
inc
push
sub
ljmp
inc
and
adc
jecxz
dec
arpl
loopne
push
mov
mov
in
jle
cltd
mov
pop
push
pop
imul
dec
mov
mov
leave
jg
pop
xchg
push
mul
aas
dec
mov
cmp
mov
mov
popf
es
or
jae
sbb
movsb
out
addl
popf
sub
and
pop
add
or
sbb
xor
cmpsl
xchg
mov
in
or
sbb
xchg
sbb
cmp
mov
cld
mov
lret
and
jo
repnz
imul
mov
xchg
add
push
jg
cmpsl
iret
lret
or
push
mov
push
mov
cmpsl
jb
inc
and
sti
and
and
or
arpl
inc
ja
inc
lahf
nop
iret
xchg
or
movsl
mov
cmp
movsl
sbb
push
cmp
scas
jae
out
jp
je
mov
cmpsb
jmp
push
stos
or
push
adc
fisubs
into
push
aaa
inc
sub
outsl
jl
xor
pop
test
pop
inc
cmpsb
cmp
mov
outsb
dec
mov
insb
or
mov
xchg
mov
out
mov
xor
bnd
lcall
inc
lea
sbb
pop
pop
aam
testl
add
cmp
xchg
mov
xchg
call
dec
ss
popa
mov
mov
sti
stos
aam
jp
mov
int3
or
sarb
ja,pn
ficoml
adc
test
adc
jb
les
imul
push
push
xor
or
pop
es
sahf
faddl
outsl
inc
lea
repz
shll
cld
addb
inc
imul
popf
sbb
ret
cli
xor
test
hlt
cltd
es
pushf
sti
sbb
inc
lea
pop
push
push
push
jne
iret
enter
in
jae
sahf
jno
out
and
xchg
lcall
ret
sbb
add
mov
or
jae
iret
adcb
adc
and
push
mov
xchg
mov
sbb
xor
adc
mov
pop
push
out
mov
inc
cmp
clc
sub
push
add
cmp
pop
and
popw
inc
inc
shlb
nop
sbb
fimuls
stc
pop
popf
and
add
mov
test
sbb
xchg
jmp
lcall
xor
cli
outsl
dec
and
cmp
mov
pushf
fs
mov
mov
mov
mov
push
dec
mov
pop
leave
jae
push
and
roll
jne
add
outsb
bound
push
or
cli
hlt
fwait
jecxz
pop
xlat
enter
xchg
add
or
pop
lea
cs
test
inc
lods
nop
cltd
push
mov
sub
pushf
adc
push
movsl
adc
mov
pop
xor
loopne
pop
int3
xchg
cli
dec
mov
pop
pusha
and
sbb
jae
xchg
jb
ds
jecxz
and
push
scas
push
test
insl
push
inc
ja
mov
ljmp
xchg
addr16
mov
lea
stc
push
push
fsubr
test
pop
xor
insl
je
push
push
test
sbb
xor
aaa
ljmp
inc
push
jp
outsb
add
lret
push
sub
xchg
insb
and
adc
ja
jns
or
sbb
jbe
xor
fiaddl
mov
stos
imul
js
int
dec
aad
jne
sbb
sbb
pop
jns
call
lods
std
fildl
cmp
js
repnz
movsl
mov
dec
sub
in
pop
xchg
movsl
dec
ret
popf
test
hlt
dec
sub
iret
insl
out
mov
gs
mov
dec
daa
lea
or
jo
cmp
movsb
mov
or
mov
xchg
lods
mov
shlb
cmc
call
aad
jo
cli
adc
insb
mov
and
xchg
nop
shll
dec
or
dec
outsl
jle
cmc
mov
xchg
mov
ljmp
dec
add
jo
in
add
popa
add
mov
stc
das
ss
jl
dec
popa
sbb
inc
or
push
sub
out
mov
out
xchg
sub
xchg
push
cmp
movsb
add
and
cmp
add
popf
ds
xchg
cld
mov
mov
xchg
adc
cmp
mov
mov
push
mov
lret
xchg
sub
mov
int
or
iret
js
stos
test
mov
xchg
pop
out
sahf
sar
ja
out
mov
mul
imul
pop
cmp
sub
adc
pop
add
in
test
xchg
add
mov
inc
sbb
shrl
or
mov
rorb
mov
das
xchg
insl
dec
dec
rcr
xor
out
mov
emms
loope
fs
cmp
jb
adc
data16
and
push
daa
xor
dec
mov
subl
dec
out
and
test
jne
add
sahf
xchg
lret
cltd
test
sub
or
sub
movsl
add
or
xor
mov
mov
and
adc
inc
testl
xchg
adc
sbb
push
xchg
lea
sets
insl
in
mov
sbb
adc
xorb
movsb
bound
sti
pop
cmc
orb
sbb
insl
or
mov
in
testl
add
test
cmp
loope
inc
fwait
jb
adc
dec
mov
add
pop
or
rcrl
xor
xor
mov
rorb
sbb
ret
xor
les
in
sub
jbe
shrl
inc
movsb
sbb
ficoms
mov
ret
mov
push
das
jle
andb
stos
not
scas
into
jecxz
mov
or
cmp
jns
rcrl
adc
add
mov
xor
test
jb
adcl
mov
push
rcr
and
or
outsb
test
repnz
cmc
popf
loop
sub
sbb
add
call
push
inc
je
shrb
mov
fsubr
cli
push
nop
jg
int3
mov
test
pop
data16
insl
sub
loope
int
push
jmp
mov
pushf
sub
jno
push
popl
out
popf
out
mov
cs
push
orb
pop
jb
push
pop
movsb
mov
mov
inc
pop
ja
or
push
pop
fstl
xchg
xorl
aaa
sub
das
sbb
add
fistl
pop
cltd
ss
fdivr
lds
dec
mov
es
xor
cmp
push
cmp
jl
cli
shl
mov
inc
fcompp
ror
pushf
mov
ja
sarl
aad
ljmp
jmp
mov
and
inc
push
cmp
and
in
push
sub
fnstenv
cmp
jb
dec
into
inc
clc
jmp
sti
jl
mov
lahf
mov
push
mov
xchg
or
jns
xor
pop
mov
or
xorb
inc
fcompl
xchg
adc
scas
mov
outsl
outsl
push
push
adc
leave
jo
or
out
jae
cmc
and
jae
mov
mov
add
sub
fldcw
divl
cmpsl
cmp
push
push
push
cltd
decl
add
testb
ja
xor
mov
pop
and
adc
and
adc
aas
out
and
pop
push
mov
in
cmp
lahf
dec
mov
out
js
std
jne
daa
push
mov
sbb
aam
mov
and
push
pushf
push
or
in
mov
dec
repnz
push
lcall
dec
inc
xchg
lret
daa
and
lret
pop
dec
into
scas
jp
mov
clc
inc
idivb
pop
lds
mov
aad
xchg
jmp
js
adc
jbe
subl
jmp
popf
pop
inc
push
idiv
outsb
mov
js
inc
ret
or
push
mov
jae
xchg
into
dec
xchg
jge
push
inc
push
adc
pop
stc
sbbb
jbe
add
sub
inc
addr16
std
jg
scas
jae
aam
pop
lahf
fcmovnbe
int
mov
mov
movsb
ret
leave
decb
inc
ret
shl
sub
xchg
sub
ret
fsts
mov
lret
imul
jns
call
jo
push
mov
cmp
lods
das
adc
dec
jo
iret
mov
xchg
push
outsb
add
insb
sahf
mov
sbb
in
cltd
inc
stos
mov
dec
push
aas
negb
xor
xor
add
cmp
inc
sbb
add
xor
jmp
cmp
mov
test
inc
inc
inc
ja
mov
ljmp
jge
sub
je
int3
insl
sahf
mov
out
add
jbe
pop
arpl
shll
or
stc
xchg
push
dec
or
mov
out
jg
call
or
fcomip
cli
pop
push
sub
cmp
lahf
or
sub
xchg
sti
arpl
repz
sti
lcall
cwtl
loop
stc
cmp
xchg
insl
outsl
shl
mov
stos
ds
outsl
das
fwait
dec
jp
cmp
test
adc
imul
xchg
loope
xor
ljmp
sbb
popf
inc
add
mov
xchg
push
aam
sti
dec
pop
jge
xor
pop
sub
notb
mov
subb
das
icebp
int3
addr16
jnp
push
cmp
out
iret
loop
fnstsw
sti
movntps
mov
inc
sbb
clc
mov
dec
subl
mov
or
inc
ljmp
ja
add
pop
or
call
or
les
xor
jbe
xlat
movhps
dec
dec
pop
pop
xchg
cli
notl
ss
adc
pusha
or
std
test
jecxz
xorb
cmp
mov
jg
mov
sbb
pop
mov
mov
jmp
pop
jl
adc
mov
pop
mov
mov
jmp
fsubrs
insl
outsl
dec
jae
loopne
lods
and
jecxz
fsubp
fldenv
stc
jbe
push
lock
pop
int
shr
roll
pop
sbb
push
aad
dec
aam
sbb
ds
notb
loop
data16
dec
or
push
repz
mov
ljmp
inc
les
fidivrs
cmc
jp
xchg
adc
jo
scas
in
out
arpl
mov
xchg
insl
neg
push
jecxz
lret
add
inc
inc
cmpsb
popf
lods
pop
addr16
adc
mov
push
mov
loop
int3
mov
mov
xchg
stos
int
dec
push
into
push
div
add
sahf
xor
imulb
sahf
in
jmp
jmp
out
imul
fcompl
push
leave
add
mov
inc
cmp
pop
rcl
pop
xlat
pusha
xchg
mov
in
cs
cmp
or
adc
ja
dec
jl
jne
push
and
test
dec
and
adc
xchg
push
fidivrs
outsb
adc
addr16
sbb
dec
or
push
in
sub
dec
popf
pop
cltd
insl
mov
lret
rclb
fdivs
jmp
imul
mov
jecxz
sbb
icebp
push
lods
fsubs
data16
add
add
add
sbb
dec
push
xor
sti
rorb
xchg
add
int3
cli
jns
hlt
ss
movsl
mov
ds
mov
icebp
xor
stos
or
cmp
jbe
cmp
jns
inc
outsl
subb
add
and
push
adc
das
ds
pop
fstps
mov
stc
addr16
pusha
xchg
xchg
gs
push
faddp
jecxz
mov
xchg
jmp
xchg
mov
mov
lock
nop
insl
push
sub
in
or
andb
out
inc
or
sub
aaa
mov
mov
fdivl
or
push
aaa
jecxz
xchg
mov
add
fisubs
cmp
repnz
test
add
cmp
sbb
jp
inc
stc
mov
xchg
xchg
cld
call
dec
mov
cmp
test
adc
pushf
sbb
js
das
jno
mov
inc
and
xor
mov
sbb
outsb
xor
fisubrl
mov
test
add
mov
xor
aaa
cmpsl
shlb
lret
call
inc
aas
cmp
popf
fmuls
int
push
mov
dec
stos
cmpsl
daa
cmpsb
testl
xchg
xor
sub
lret
pop
lock
xchg
imul
subl
mov
repnz
lret
cmc
je
fdivrl
test
movsl
sub
mov
mov
and
xchg
inc
or
dec
clc
dec
xchg
mov
push
or
imulb
add
add
xchg
cmp
add
mov
or
dec
cmp
inc
mov
movsl
imull
xor
repnz
ficoms
ds
adc
xchg
push
xlat
lds
push
sbb
stos
cmpb
mov
enter
pop
test
add
mov
pop
mov
imul
or
mov
sub
and
in
hlt
sbb
push
jo
mov
fdivrl
adc
lods
cmp
fwait
pop
call
and
int
popa
mov
cwtl
mov
sbb
dec
or
mov
sub
mov
clc
xchg
into
mov
and
dec
ds
clc
leave
test
fcmovne
push
dec
mov
or
ljmp
mov
pop
jmp
subb
gs
pop
jne
mov
into
jbe
das
jne
jo
xor
int
out
xchg
int3
cmp
dec
std
lret
into
jns
dec
and
rorb
add
or
jnp
xchg
mov
imul
mov
sbb
sti
mov
and
push
adc
adc
shl
push
mov
mov
or
scas
pxor
pop
and
xor
fwait
jnp
adc
cmpsl
fsubrp
cmc
sub
mov
int3
icebp
xor
add
mov
nop
mov
movl
push
push
movsl
cld
pop
aas
outsb
out
mov
adc
xor
xor
lds
xchg
je
ds
outsl
es
mov
and
aad
in
jge
jle
ja
adc
lods
mov
cmp
jae
icebp
mov
and
sbb
push
push
and
out
jmp
icebp
xor
fs
dec
ljmp
dec
jg
sbbb
andl
pop
aas
stc
movsl
std
mov
int3
sbb
jecxz
and
jecxz
bound
cmp
imul
push
ret
rolb
test
pop
inc
sahf
test
out
leave
push
sbb
stc
mov
xchg
repnz
int
fisttps
pop
ror
addr16
mov
fnsave
mov
shlb
mov
iret
xchg
inc
js
lret
aad
xchg
xor
dec
pushf
xor
inc
and
add
fucom
cmp
idivl
filds
jecxz
xor
adc
mov
mov
dec
in
mov
mov
add
mov
enter
dec
dec
int
xlat
imul
mov
lcall
std
stc
loopne
inc
xorl
dec
icebp
push
out
scas
cmp
push
imul
pop
testl
push
out
xor
jo
jecxz
mul
jmp
outsl
sbb
imul
mov
cltd
dec
xor
out
rclb
push
cmp
add
push
addr16
movsl
mov
jg
lret
cli
add
sub
jp
nop
mov
arpl
nop
cmp
insb
iret
sbbl
les
stos
enter
aad
ljmp
lea
xor
push
mov
jmp
push
pop
mov
sub
xlat
xorb
pop
aas
inc
sti
daa
jecxz
fildll
daa
enter
jmp
pop
adc
rorb
cmpsb
into
les
cmp
pop
fcoms
xchg
dec
push
je
roll
xchg
scas
cmp
jecxz
add
xchg
push
jmp
inc
push
out
push
popf
sbb
add
dec
mov
mov
in
lds
mov
adc
outsl
cmp
xorl
ret
std
push
in
test
andb
or
xrelease
clc
hlt
fidivl
push
push
fmull
imul
mov
or
push
sahf
mov
sbb
mov
pushf
aad
adc
push
fucomp
rorl
cmc
js
hlt
js
data16
dec
repz
jb
xchg
xor
push
push
ret
jecxz
jle
pandn
xchg
jp
inc
cmp
rcr
xor
jb
mov
and
stc
sbb
mov
aam
popf
ljmp
pop
and
push
inc
push
mov
xorb
mov
adc
dec
add
in
data16
out
stos
mov
aaa
rcrl
add
in
xchg
out
add
ret
in
sub
cwtl
lea
pop
test
outsb
xlat
xchg
je
mov
bnd
add
and
pushf
mov
inc
enter
mov
or
test
or
in
rorl
or
js
xchg
add
in
shr
mov
adc
loopne
xor
out
rorl
or
pop
mov
jne
or
and
jmp
hlt
cmp
sahf
mov
aaa
std
adc
mov
lods
or
divl
test
xorl
iret
in
jns
ficompl
cmp
sbb
sbb
nop
push
dec
test
shll
call
imul
push
jae
call
enter
adc
mov
rclb
fcompl
mov
xchg
sub
addr16
jnp
cmpsb
cmp
in
mov
icebp
jae
test
push
test
mov
pop
or
xlat
aas
jae
mov
filds
aaa
mov
add
cmp
sbbl
and
fstp
push
inc
shlb
or
cs
outsb
dec
push
dec
add
fsubrl
fsubrl
xchg
mov
or
cmp
add
mov
cltd
mov
sub
and
dec
ljmp
push
movsb
insb
add
mov
pop
icebp
and
fisubl
lret
xchg
pop
push
stos
pop
cmpsl
jne
outsl
push
mov
dec
sub
jmp
and
mov
das
insl
inc
cmpsl
outsl
imul
lret
pop
repnz
insl
nop
shlb
ror
pop
mov
cmc
je
sbb
push
or
mov
loope
ja
insb
xor
lds
dec
jo
pop
iret
inc
cs
ret
mov
xor
add
test
push
mov
ss
dec
pop
xlat
pop
adc
jmp
movsl
fisubl
rcrl
cld
sarl
mov
addl
maxps
in
add
imul
rol
mov
popf
mov
jnp
lods
push
ds
fs
and
mov
inc
pop
mov
dec
mov
iret
imull
inc
out
dec
pop
sub
shll
sub
outsl
pop
xor
inc
movsl
or
lods
and
mov
sahf
into
ret
push
mov
in
addl
mov
lds
add
sbb
and
insl
jge
dec
pop
inc
stc
add
daa
push
sbb
add
fdivrs
add
test
test
fistpll
dec
ret
lods
lds
mov
dec
pop
call
sub
or
lods
sahf
sahf
inc
fwait
adc
push
mov
push
jg
pop
js
sbb
dec
daa
xchg
adc
scas
jb
sti
icebp
add
fsubrp
pushl
inc
jg
in
cmp
mov
nop
sub
push
jns
cmc
out
jo
ds
and
mov
mov
add
mov
out
bound
std
aaa
stc
jp
sti
xchg
call
pop
mov
mov
icebp
daa
andb
stos
shlb
nop
pop
nop
mov
add
add
cmc
push
or
mov
stc
push
cmpsb
sbb
jae
outsl
test
out
mov
fstpl
scas
jecxz
leave
push
repnz
cvtdq2ps
sarl
outsb
aas
adc
test
iret
outsb
pop
out
stos
push
mov
xor
cmp
aad
or
jno
cli
incl
out
and
cmc
lcall
jmp
pop
push
andb
xchg
fs
ret
mov
jo
aas
out
xor
jns
call
rolb
add
pop
fistps
ret
adc
push
adc
mov
shlb
daa
icebp
cmp
fstpt
sbbb
testb
popa
jl
enter
cmp
dec
jo
jbe
repnz
push
movl
mov
fidivrs
jl
add
fcomps
fs
cmpb
lahf
stos
pop
mov
and
cmp
and
into
mov
and
lods
jbe
xor
loopne
jp
imul
mov
repz
or
das
mov
add
push
aaa
cs
mov
out
repz
jle
dec
adc
test
jno
cmpsl
movsl
cmp
inc
push
into
enter
inc
mov
or
inc
pop
pop
fs
cmpsb
mov
mov
xor
adc
movsb
xchg
xor
mov
push
mov
mov
aad
inc
out
pop
imul
push
cmpl
inc
out
stc
cmp
icebp
imul
iret
mov
lret
shrb
sub
je
outsl
mul
xor
insb
add
jecxz
cmp
dec
jmp
fwait
andb
xorb
mov
jb
enter
jmp
xchg
shl
outsb
into
clc
inc
adc
xlat
repz
pop
enter
out
pop
mov
repnz
mov
mov
jmp
add
sub
and
inc
add
jae
insb
enter
mov
hlt
cltd
or
push
test
cmpsl
mov
into
cwtl
shl
mov
sbb
sbb
pop
stc
sbb
pop
cmp
es
mov
sar
mov
or
xchg
push
pop
pop
jo
ror
enter
popaw
sub
icebp
sub
mov
loope
push
lds
ljmp
mov
in
in
mov
fsubrs
mov
je
in
xor
inc
pop
mov
mov
popf
aam
out
inc
outsl
adc
inc
ret
cmpsb
mov
test
movsl
dec
je
insb
je
or
xchg
test
and
push
adc
adc
mov
sub
es
pusha
inc
and
adc
mov
clc
push
mov
sub
jne
push
repnz
dec
lret
xchg
push
lds
decb
lods
push
or
std
mov
adc
xchg
xor
stos
xchg
pop
inc
arpl
out
or
push
loope
mov
lret
cmp
inc
push
movsl
clc
jo
push
rorl
mov
and
inc
ss
jnp
and
jl
push
jno
arpl
push
inc
repnz
ret
out
xchg
imulb
bound
lahf
push
rolb
xchg
ret
ret
jmp
insl
xor
mov
or
xor
mov
sahf
add
iret
fidivs
mov
fisubs
roll
or
sub
imul
mov
dec
out
pop
and
dec
pop
xchg
push
sub
xchg
rorl
cmp
xlat
jecxz
test
cs
sbb
and
push
dec
jo
in
push
pop
sub
icebp
push
gs
ljmp
mov
push
movsw
outsl
add
push
mov
cld
add
xorl
mov
push
pop
js
pop
enter
aas
or
xchg
clc
aad
dec
std
jno
sbb
rolb
push
or
mov
int
loope
xlat
sbb
mov
mov
cmpsl
push
sbb
sbb
sbb
jae
inc
fwait
xor
pop
adc
fsts
mov
je
pop
pop
inc
push
mov
sbb
adc
mov
xorl
jo
mov
dec
scas
sub
shr
sub
sub
push
xchg
adc
in
and
mov
sub
fwait
pop
jne
pop
test
and
sbb
fimuls
pop
mov
jae
jns
int
dec
test
out
push
dec
add
scas
mov
xchg
mov
cs
inc
xlat
loop
push
ss
push
int3
outsb
add
aaa
jg,pt
jp
mov
inc
fcomp
stc
out
shrl
or
nop
mov
test
repnz
stos
inc
sub
pop
out
aam
jg
mov
stc
aam
movsl
pop
andl
sub
pop
fwait
pop
push
mov
ret
cmp
das
lret
cmp
and
ret
add
xor
xorb
nop
xchg
or
inc
incl
inc
mov
cwtl
mov
shlb
xor
loope
aas
xchg
lcall
mov
pause
mov
inc
mov
mov
adc
in
adc
insb
jne
jle
jno
and
add
sarl
mov
and
adc
lds
xchg
stos
pop
push
xor
push
ljmp
cs
mov
jne
loopne
loop
cwtl
lret
addb
mov
or
inc
ret
rcrb
dec
in
fisubs
lea
jg
pop
pop
lods
xsha256
cmpsb
push
ds
daa
in
clc
pop
js
sbb
out
cmp
mov
repnz
fstl
push
push
push
sbb
sub
movsb
pushf
pop
dec
lahf
pop
je
fxtract
fldenv
add
pop
int
sbb
or
rorb
ljmp
les
orb
mov
sbb
pop
movsw
call
scas
cmc
push
rorl
mov
jnp
push
enter
pop
dec
loop
rcll
cltd
xor
in
in
jb
cld
pop
pop
lcall
sbb
out
pop
addr16
icebp
ja
mov
hlt
mov
je
mov
fldpi
xlat
lcall
push
jae
and
push
shll
push
dec
inc
pop
sbbb
lret
pop
add
mov
pop
movsb
mov
in
add
add
and
push
lcall
push
or
dec
or
js
jle
adc
shll
clc
leave
xchg
cwtl
fcompl
cmpsb
xor
je
aam
testl
loope
xchg
pop
out
loop
pushf
pop
and
pop
popf
pop
stos
aam
sbb
pop
mov
jae
jae
pop
fadd
fbld
mov
je
push
sub
push
and
mov
aam
mov
mov
in
mov
cltd
pop
xor
cmp
stos
mov
in
fldenv
lods
pusha
dec
mov
sub
jbe,pt
mov
jp
cmp
xchg
in
mov
pop
adc
shrb
cmpsb
ret
sub
leave
or
test
dec
fsubr
test
mov
jbe
mov
std
cmpsl
mov
xchg
iret
pop
in
mov
xchg
insb
or
stos
inc
mov
addb
inc
and
mov
mov
mov
iret
pop
push
int
mov
mov
lods
std
jbe
pop
mov
ss
dec
pushf
out
inc
xchg
out
mov
pop
xrelease
rolb
jg
into
dec
mov
mov
lahf
jnp
icebp
out
in
sbb
sbb
cmp
notb
inc
sbb
xor
sub
insl
test
sub
arpl
fisubrs
fs
fnsave
adc
inc
shl
pop
cmpsl
lds
xor
adc
cmp
mov
sub
add
subl
ljmpw
mov
shll
out
subl
add
in
mov
dec
push
iret
sub
mov
add
dec
insb
out
sbb
add
imulb
push
lahf
ja
fidivrs
push
adc
cmpb
insl
fs
jae
lea
les
add
stos
mov
pop
push
cld
out
js
loope
rcll
outsb
call
dec
hlt
ss
testb
lods
notl
inc
jecxz
adc
lods
nop
imul
xchg
mov
pop
daa
insb
cmp
cwtl
cmpsl
scas
add
lods
loopne
bound
xor
cli
or
lds
orl
aad
outsl
xchg
data16
pop
lods
mov
xor
cmp
mov
dec
xchg
insl
or
subb
scas
in
sub
nop
mov
mov
lahf
icebp
enter
inc
push
xor
js
inc
cmp
mov
popf
pusha
movsb
sti
divps
jns
cld
test
int3
sbb
aas
jmp
jp
xchg
loop
lcall
cmpsb
sbb
cmpsl
call
out
xchg
fs
pop
divb
lods
jns
dec
loop
lods
and
mov
mov
scas
test
and
cmp
lods
lea
inc
xchg
movsl
jae
dec
and
and
and
sbb
pop
repnz
add
scas
mov
inc
adc
enter
ljmp
sbb
push
enter
pop
xchg
push
pop
insb
mov
sarl
test
pop
inc
adc
push
pop
sub
or
jns
pop
aad
adc
adc
setns
ret
or
sub
fbld
pop
add
mov
push
out
mov
xchg
pop
into
xchg
adc
scas
lods
push
xchg
and
xchg
or
or
jl
fsubrl
out
inc
shlb
mov
jae
iret
push
loope
cmpsl
pop
pop
mov
repnz
ret
pop
insb
dec
mov
shll
or
lahf
inc
jecxz
jne
sti
mov
sahf
stc
insb
inc
add
rclb
mov
push
filds
std
movsb
mov
mov
and
js
pushf
rep
xchg
lods
push
cld
ss
dec
sti
sbbl
insl
pop
and
fsub
aaa
fsubrs
jbe
push
sub
push
cmp
mov
mov
push
fstpl
lock
call
push
jns
in
cmp
out
push
jge
push
inc
int3
stc
lahf
test
jl
xchg
jp
lods
pop
push
gs
inc
add
cmp
push
xor
push
aaa
nop
xor
in
addr16
sbbb
xchg
repz
aam
mov
pop
imul
push
loop
dec
ret
dec
or
mov
add
add
lock
push
dec
push
jmp
in
dec
mov
and
add
out
dec
mov
loope
pop
lds
sbb
out
adc
cmp
jae
popa
bound
pop
jl
outsl
cli
data16
mov
jmp
and
jb
idiv
pop
or
inc
push
jns
lds
xchg
xchg
sbb
fsubrl
ja
pop
jnp
pop
push
mov
int
jmp
into
nop
scas
xchg
fdivrs
jg
dec
mov
mov
ss
push
inc
hlt
xchg
or
movsl
and
rorl
pusha
mov
pop
fs
push
or
pop
in
clc
mov
outsb
xchg
cmp
xchg
mov
adc
shlb
jns
adc
push
sub
jno
inc
arpl
pop
test
mov
pushf
mov
mov
aaa
xchg
mov
cmpsl
dec
hlt
nop
jg
pop
cwtl
movsl
mov
pop
stos
or
ja
out
sbb
jl
lret
dec
dec
push
jl
jae
popf
jle
dec
dec
mov
fsub
xchg
jl
ret
lods
outsl
xchg
sti
or
mov
popf
dec
mull
aad
and
in
lods
sti
jo
gs
cltd
inc
mov
add
mov
or
jge
xor
inc
sbb
stos
sarl
sarl
jl
adc
data16
and
inc
nop
mov
mov
jo
pushf
push
loope
cmp
mov
push
add
xor
mov
cwtl
inc
pop
pop
ret
rclb
and
roll
ss
cltd
clc
pop
shll
inc
adc
int
mov
shll
jne
mov
adc
jns
ret
inc
and
push
popf
lret
in
inc
xchg
xorb
adc
and
mov
jle
orl
jmp
ss
cli
push
mov
push
sbb
shlb
mov
cmp
xor
daa
xlat
xchg
icebp
inc
jmp
test
jecxz
dec
and
sub
mov
int
movsb
aas
ds
xor
daa
cld
pusha
hlt
lds
stos
and
out
dec
sbb
mov
xchg
mov
test
inc
cmpsl
mov
mov
ja
fstpt
add
mov
out
xchg
jmp
fadds
cmc
mov
test
jnp
mov
mov
dec
lret
cltd
movsb
inc
xchg
sbb
or
sbb
pop
cmp
fwait
insb
pop
jl
loopne
outsl
in
lds
jo
dec
pop
jmp
xchg
andb
aam
dec
inc
dec
push
ud2
divb
lock
fs
dec
repnz
push
scas
cwtl
jno
int
dec
or
adc
out
jae
xchg
imul
adc
jnp
rolb
push
enter
mov
xchg
xor
lea
out
lods
and
fisttpll
sub
cld
push
inc
and
addr16
add
jno
enter
sub
cmp
cld
add
imul
mov
fidivl
xchg
push
xchg
pop
jo
push
cli
test
iret
cltd
pop
mov
cld
push
and
leave
jo
jae
mov
je
test
add
jecxz
sahf
push
mov
je
or
dec
loopne
hlt
int
push
jmp
in
aad
push
sbb
repnz
xchg
out
mov
sbb
repz
leave
push
into
and
mov
cmpsb
xchg
cmp
add
js
mov
inc
pop
push
out
data16
lahf
rclb
jp
add
data16
out
test
test
fidivs
cmp
addl
subl
dec
data16
push
ficoms
xor
or
hlt
xchg
test
mov
pusha
dec
fldt
insl
pop
xchg
aad
js
scas
inc
aam
in
repnz
sbb
fstl
cs
mov
test
scas
cmp
mov
fwait
int3
jle
xor
mov
pop
mov
cmp
pop
dec
xchg
shlb
adc
jbe
xchg
sar
fsubl
sti
test
mov
std
pop
xchg
pop
insl
sub
push
sbb
inc
or
fldl
cltd
ret
test
mov
popf
rcll
out
mov
cltd
dec
cmp
push
jg
mov
std
mov
mov
push
or
or
dec
lods
jl
adc
cmp
imul
cld
pop
lods
decl
push
out
frstor
push
pop
stos
cmp
movsb
jbe
jae
lods
sub
rorl
movsb
sti
mov
lcall
mov
pop
outsb
push
and
cmp
mov
shrl
mov
pop
rorb
mov
xor
jmp
xor
aaa
jae
movsl
mov
xlat
xor
cmp
daa
daa
cld
mov
movb
les
je
subb
cmp
cmpsl
jl
pop
shrl
xor
mov
loope
add
insl
jecxz
and
push
loopne
mov
ret
cmpsb
add
jno
loope
xor
int3
push
adc
sbb
adc
shll
outsl
sbb
shl
sbb
mov
cmp
cwtl
scas
jnp
push
lds
in
inc
aad
mov
xchg
push
fsub
test
push
cwtl
pushf
enter
repz
cmp
inc
mov
sbb
outsb
inc
push
jo
mov
pop
insb
js
push
negl
push
test
pop
std
cld
sbb
or
inc
mov
stos
int3
or
aas
inc
in
mov
or
jns
jge
mov
stc
mov
test
jnp
sbbl
stos
incl
les
fldpi
xor
sbb
enter
xor
shr
iret
jbe
call
mov
dec
shll
mov
ret
jl
sub
aas
jns
xor
cmpsl
sbb
add
add
xchg
lahf
inc
hlt
aaa
popf
js
movsb
cwtl
sbb
xchg
cmp
jb
insl
mov
test
aaa
mov
adc
sub
call
mov
jecxz
xchg
fcmovne
sahf
outsl
dec
sahf
lods
repnz
jae
outsl
pop
mov
jp
inc
movsb
xlat
test
js
mov
scas
aas
sbb
xchg
mov
xor
xor
sti
xlat
lret
dec
outsl
push
cmpsl
xor
aaa
mov
mov
shll
mov
ret
jno
inc
mov
sbb
and
jae
xchg
sbb
les
add
or
pop
shrl
imul
mov
inc
aaa
es
xchg
popf
sbb
fidivl
faddl
sbb
into
call
js
sub
jnp
sbb
aam
push
sub
cmpsl
fcmovnbe
orb
xchg
test
or
push
add
xchg
xorb
pop
mov
insl
mov
mov
and
cmp
lahf
mov
mov
adc
or
in
into
adc
mov
clc
lds
pop
inc
iret
jle
arpl
jp
sbb
lods
es
pop
add
test
adc
xchg
and
ds
xor
or
jo
scas
dec
mov
or
inc
xor
fnsave
int3
arpl
push
cli
jae
xchg
in
es
sub
and
dec
outsl
notl
ret
push
xchg
outsl
and
icebp
push
out
mov
mov
loop
fdivp
sub
xchg
cmp
stc
nop
in
lcall
xchg
sbb
test
call
jbe
jp
push
add
jne
cltd
sbb
pop
pop
inc
out
fldenv
or
out
shrl
and
xchg
inc
scas
out
pop
push
jmp
adc
xchg
xor
sub
mov
inc
xlat
out
sbb
push
inc
ss
ss
rcrl
or
and
push
cmpl
jp
insb
dec
mov
cmp
imul
cmp
inc
outsb
or
sub
mov
enter
or
and
sub
dec
movsb
mov
push
jle
xchg
push
cwtl
ja
pop
pop
test
add
hlt
jmp
cmpsb
movsb
fisubrs
sbb
jl
icebp
lret
push
sar
loop
cltd
push
int3
out
lret
cltd
movsl
stos
adc
negb
das
or
notl
sar
pushf
mov
rorb
xor
dec
popa
xor
mov
jne
out
lahf
add
pop
sub
in
sbb
mov
call
push
xchg
mov
data16
mov
push
xchg
jmp
dec
xchg
inc
lods
mov
stos
xor
pusha
pushl
dec
stc
cld
jle
lods
mov
xlat
push
push
loopne
sbb
push
fdivl
dec
pop
push
add
sbb
vunpcklps
mov
shlb
mulps
in
in
imul
fbstp
mov
push
lods
mov
dec
cmovnp
push
add
pop
sub
lret
sarl
adc
fmull
pop
test
inc
xchg
mov
iret
push
movsb
aas
jge
mov
test
cmp
jnp
add
scas
lret
pop
cmp
xchg
das
inc
adc
inc
movsb
or
add
adc
cli
cmp
iret
adc
mov
into
lcall
out
cmpsb
ss
pop
scas
data16
inc
jecxz
mov
outsb
adc
adc
cmp
lret
fidivl
roll
sub
mov
inc
mov
xlat
sahf
sub
mov
gs
shl
pop
cmp
loop
dec
or
mov
ficomps
cwtl
in
and
push
cltd
jle
bound
sahf
fsubr
movsl
pop
leave
mov
xor
pop
push
add
cmp
jle
xor
mov
cwtl
repz
pushl
popa
das
dec
dec
sbb
jno
cmp
sub
and
xchg
and
popa
or
add
into
pop
lret
aaa
daa
test
add
repz
lret
push
roll
adc
ret
stc
enter
imul
lods
sbb
mov
xor
repnz
stos
pushf
push
jno
in
push
popa
testl
arpl
inc
sbb
mov
jae
lret
nop
lods
fs
dec
addr16
and
dec
xchg
testb
xchg
xchg
divb
xor
sub
jmp
add
mov
fcmovb
sbb
icebp
pop
outsb
test
lcall
xchg
push
and
jle
pop
test
push
repnz
dec
aad
lahf
jg
ret
cmp
movsl
push
jae
movsl
sbb
in
pop
dec
inc
movsb
aad
inc
sub
mov
shl
fdivr
push
xor
jg
mov
and
enter
pusha
inc
gs
adc
xchg
dec
adcl
jle
int
xor
imul
push
rolb
push
je
je
sub
mov
fiaddl
shl
inc
out
bound
pop
mov
cmpsl
mov
out
add
test
xor
xchg
sub
cmp
push
pop
sub
cwtl
popf
fidivrs
fsts
daa
xchg
xor
jle
xchg
data16
ljmp
xchg
add
mov
or
cmpsb
xacquire
fisubrs
inc
xchg
fdivrl
sti
mov
pushf
subb
mov
shlb
std
mov
sbb
rcll
jge
js
cmpsl
xorl
in
mov
ja
sbb
pop
dec
mov
inc
arpl
push
xor
out
cmc
mov
pop
ja
adc
or
mov
ljmp
js
pop
lock
shll
jl
add
fnstsw
mov
fnsave
test
cmpsb
fucomp
movsb
loope
and
dec
jae
int
icebp
std
orb
jbe
ret
filds
push
jmp
push
mov
mov
cmp
jo
push
mov
jl
pop
popa
mov
inc
out
adc
aaa
hlt
and
jg
leave
negl
sahf
stc
sub
mov
lods
insl
jp
mov
push
or
cwtl
repnz
aam
gs
jecxz
push
push
mov
dec
sti
aam
daa
ds
sub
push
sbbl
in
lahf
fwait
fs
push
adc
leave
jge
shl
xor
fsubs
ficoms
lods
jge
int
popf
cli
mov
stos
cmp
or
dec
cmp
add
arpl
jb
lcall
push
jae
lods
push
sub
lock
inc
jg
adc
mov
sub
mov
mov
mov
inc
ja
mov
bound
pop
jge
insl
outsl
or
cltd
ss
push
clc
push
mov
pop
mov
lcall
pop
push
xchg
ja
stos
int3
sti
jae
call
loope
xlat
pop
in
fiadds
addr16
nop
imul
cmp
jno
outsl
cmp
push
or
and
add
lds
lret
and
fcmovnb
jns
gs
stos
outsl
int
lret
jo
movsl
jecxz
pop
ret
movhps
sbb
jo
or
cmp
fildll
roll
test
imul
pushf
cli
loope
and
and
sub
push
cs
pop
inc
inc
fstl
mov
scas
fnsave
jb
jp
test
push
icebp
ret
and
shlb
or
xorb
pop
arpl
test
xchg
loope
je
lret
mov
sbb
gs
jg
and
inc
insb
pop
outsl
pop
sbbb
adc
sub
push
insl
je
push
dec
sbb
mov
mov
sti
dec
cmp
add
or
hlt
call
push
test
mov
adc
mov
lret
in
lods
sbb
mov
dec
push
mov
dec
mov
adc
or
cmp
inc
es
adc
mov
push
or
sahf
jmp
cwtl
stos
leave
inc
jno
imul
jle
rclb
pop
mov
cmpsb
popf
in
cmp
xchg
dec
mov
in
inc
fcmovb
cmpl
and
in
sub
fcomps
dec
arpl
cmpsl
mov
xchg
jne
cltd
xchg
lcall
mov
inc
jo
adc
and
mov
push
dec
test
xchg
mov
jmp
cmp
xchg
outsl
sarb
and
jo
jnp
addb
xor
push
sub
mov
dec
mov
cwtl
sub
mov
mov
mov
mov
ret
inc
mov
push
sti
icebp
dec
iret
jl
sub
iret
xchg
sbb
lret
cmp
out
xchg
xchg
dec
out
outsl
jecxz
out
pushf
dec
sub
into
push
xor
movsb
mov
sub
in
sub
mov
xor
popf
icebp
cwtl
sbb
xchg
xchg
int
mov
jb
ficoms
and
lds
and
arpl
xchg
xchg
jle
stos
sub
adc
or
jae
dec
test
add
and
flds
repz
nop
je
mov
popf
push
sbb
int3
xorl
lods
sbb
aaa
jbe
cmp
push
dec
push
cmp
fidivl
adc
iret
inc
loop
ljmp
push
leave
mov
xor
aad
rcll
xchg
mov
pop
cmp
pop
push
inc
out
xor
stos
jbe
imul
jle
inc
test
ljmp
pushf
dec
mov
xchg
in
or
divl
xchg
inc
insl
std
frstor
jl
inc
out
call
push
adc
cmp
jmp
pop
arpl
cld
stos
and
lock
dec
push
xchg
sti
sbb
add
fsubrs
dec
ds
mov
shl
sub
and
dec
fsubs
addl
shl
push
test
movsl
xchg
mov
in
movsb
fsubrs
mov
mov
stos
dec
dec
adc
stc
int3
push
cmp
gs
je
or
aad
div
loopne
xlat
stos
or
mov
xchg
iret
data16
int
pop
clc
stos
dec
imul
dec
dec
loop
push
sbb
mov
lret
or
or
push
gs
std
pop
xor
sbb
push
lods
sbb
lret
pop
adc
testl
iret
jl
lea
xchg
popf
inc
mov
xchg
in
push
mov
push
cmp
push
mov
je
in
scas
bound
and
into
imul
xor
dec
int
inc
mov
cwtl
inc
enter
dec
icebp
cmp
aaa
sub
push
sbb
out
or
or
push
sbb
nop
bound
outsl
scas
pop
fdivr
lret
mov
insb
and
jg
add
arpl
mov
inc
iret
xchg
sahf
outsb
aam
mov
mov
fcompp
jns
cmpsl
add
dec
lods
or
push
jae
xor
shrl
repnz
pop
imul
stc
test
or
sbb
or
xchg
and
cmp
imul
jmp
leave
xor
addr16
sub
add
add
sbb
mov
and
sbb
loop
data16
les
mov
mov
mov
lds
mov
and
mov
mov
mov
and
dec
in
push
dec
std
int3
mov
popf
lahf
inc
push
repz
xchg
add
or
inc
loop
mov
mov
sbb
push
imul
xchg
xchg
fs
stc
int
push
pop
or
pop
add
xor
ljmp
xchg
inc
subl
in
fs
adc
repz
adc
sub
sahf
lock
outsb
test
cmp
sub
repnz
push
add
lods
or
push
sti
testb
clc
fidivs
mov
xchg
sub
es
cmpsb
jae
int
and
jl
jne
jle
sahf
sub
or
loopne
cmpsb
xor
adc
andb
stc
fistpl
xchg
sbb
dec
sbb
mov
and
fs
xor
dec
mov
pop
ret
in
outsl
pop
pop
mov
in
test
into
mov
ljmp
pop
inc
pop
add
adc
in
stos
gs
sbb
mov
inc
popf
jo
fcmovu
cmp
add
into
mov
ret
mov
push
jno
aam
popa
mov
cmc
popa
add
call
loope
stos
rcrb
jmp
frstor
mov
adc
and
ret
rcrl
dec
std
das
mov
lret
xchg
shll
leave
dec
int
cltd
addr16
adcl
mov
scas
std
dec
jg
cmp
dec
imul
pop
jg
push
dec
mov
push
jb
mov
xor
mov
scas
push
xchg
inc
jne
cmpsl
fmull
scas
xor
or
in
imul
adc
repnz
call
inc
adc
jb
in
mov
sti
mov
test
jbe
ficomps
or
cld
add
dec
push
jne
cmp
outsl
test
pop
xchg
pop
dec
inc
pop
add
push
xchg
adc
add
jp
pop
dec
cwtl
mov
testl
lret
fstpl
xchg
dec
pusha
sahf
sarb
pop
push
mov
sahf
fstpl
out
and
jnp
sbb
xchg
or
inc
ror
push
fiaddl
popf
cmpsb
pop
inc
test
sbb
dec
pusha
jmp
lods
xor
add
jb
sbb
jnp
xchg
jbe
jbe
call
loop
int3
adc
mov
scas
mov
dec
outsb
push
pushf
cltd
cli
pushf
mov
ror
addl
mov
in
sbb
mov
insb
lret
cmpsl
jecxz
popf
cmpsb
inc
and
aas
outsl
getsec
mov
pop
inc
leave
add
adc
jnp
imul
adc
cli
daa
loopne
jmp
jmp
outsb
push
sahf
adc
cmc
mov
sti
dec
jle
jo
shlb
in
xchg
daa
mov
lock
mov
mov
and
inc
lods
sub
and
xor
sbb
ljmp
cld
aad
and
daa
mov
jnp
aad
fbstp
push
movsl
pop
aaa
out
inc
pop
ret
fcoms
fbstp
sub
insl
inc
je
sbbb
mov
sub
loop
test
cld
add
daa
mov
repz
arpl
imul
or
sub
fildll
cmp
test
sub
mov
in
fildl
ljmp
jle
inc
js
lods
test
add
imul
fidivrs
xor
inc
jno
push
jnp
std
aaa
push
aas
femms
gs
mov
xchg
mov
pop
sti
loope
bswap
subb
inc
sbb
pusha
jmp
adcb
or
mov
stos
fisubl
sbb
cmp
xchg
mov
in
adc
lock
push
outsb
dec
orb
dec
mov
pop
add
mov
push
jmp
and
or
in
sbb
lret
push
fnstcw
in
or
adc
inc
pop
das
add
cli
mov
add
fsts
gs
or
pushf
shrl
adc
or
test
inc
cmp
adc
out
sarl
add
adc
loop
iret
push
cmpsb
cs
mov
sub
fisubrs
sub
push
sub
xchg
inc
xchg
xchg
out
jnp
sbb
and
pop
pop
das
pop
sub
mov
and
pop
call
sbb
and
insb
dec
adc
cmp
imul
mov
xchg
pop
inc
cmpsb
pop
push
mov
or
popa
xlat
frstor
les
pop
ljmp
cmp
jno
pop
mov
adc
fcoml
adc
cmpsl
mov
pop
pop
in
sbbb
loop
out
push
nop
sbb
addr16
mov
int
pop
cmc
jle
sahf
out
mov
inc
hlt
push
sbb
inc
inc
andl
mov
out
dec
test
nop
xor
pop
dec
push
mov
pop
test
fstps
jecxz
mov
sub
xchg
stc
stos
cmp
fwait
cmpsb
insl
mov
cmp
and
out
packssdw
pop
add
out
adc
or
push
rol
dec
mov
xor
mov
dec
ljmp
fmulp
xchg
cmpsb
outsb
sub
add
insb
stc
jmp
shlb
xchg
inc
xlat
in
test
push
cwtl
daa
dec
pop
aam
sub
jmp
vphaddbw
sub
std
lret
mov
lods
cmp
mov
int
xor
subb
and
in
or
test
ficoml
xor
cmp
push
push
js
jns
gs
sub
pop
xor
dec
ds
outsl
pusha
jo
xchg
pop
fs
push
mov
inc
mov
movsb
mov
insb
fwait
and
cmpsb
scas
sahf
mov
arpl
xchg
adc
lahf
ret
imul
jmp
jl
outsb
xlat
es
shrb
sub
sahf
adc
mov
aam
sub
inc
es
aam
or
dec
mov
or
push
ret
push
mov
data16
ret
mov
pop
js
pop
adc
rcrl
inc
adc
adc
popa
rorl
cmpsb
mov
xchg
and
insb
enter
call
aas
bound
rcl
je
mov
imul
loop
xchg
xchg
stos
das
das
xchg
xchg
cmpsl
push
repz
jno
rolb
rcl
mov
or
lret
adcl
push
sbb
adc
fs
cmpb
pop
rcrl
mov
hlt
mov
scas
mov
lock
adc
pop
or
cmp
add
test
int3
xor
mulb
sbb
ret
mov
cltd
pop
cmpsb
jmp
sbb
test
sub
divl
xchg
out
addr16
inc
outsb
sub
enter
call
mov
push
mov
scas
test
add
out
jp
mov
mov
add
cld
mov
dec
arpl
jl
sti
pop
add
arpl
cmp
dec
jo
cmp
out
mov
push
push
pop
xlat
push
out
adc
lcall
aad
xchg
push
or
inc
test
xlat
inc
int3
xchg
push
scas
imul
popa
jg
pop
xor
into
mov
aam
xchg
pop
jno
loop
mov
jmp
dec
adc
mov
lret
mov
subb
adc
push
cmp
adc
popa
movsl
jecxz
ds
add
popf
dec
cmp
mov
dec
popa
in
stos
xchg
jnp
pop
push
loopne
clc
push
notl
cmp
lret
sub
or
es
add
ja
outsb
fs
scas
sti
stc
sbb
scas
ja
adcb
and
xorl
fcmovne
dec
sbb
shl
stc
cld
sbb
push
inc
push
inc
pop
dec
dec
sti
pusha
mov
aad
xchg
inc
push
sbb
aam
xor
push
xlat
test
addr16
cwtl
movsb
inc
int3
cli
add
mov
jle
stos
jmp
and
daa
jbe
push
push
add
loopne
aad
add
adc
loop
outsl
lret
out
push
shll
repz
jle
cmp
mov
adc
xchg
je
dec
stos
mov
clc
push
sbb
sbb
fidivrs
mov
jmp
arpl
jnp
rcrl
cmp
fwait
xchg
in
jb
hlt
push
not
test
or
xor
ficompl
cmp
jns
and
lahf
es
xor
xchg
sub
xor
fldcw
add
mov
outsb
dec
rclb
movsb
adc
push
mov
add
inc
jno
xor
mov
sbb
movsb
mov
inc
push
subl
cwtl
jl
pop
sahf
push
push
int
cmp
loop
add
or
xchg
cmp
rorl
dec
movsb
cmp
sub
adc
test
mov
add
out
call
push
imul
cmc
jne
and
int3
push
fisubs
or
and
sub
ror
ss
sbb
pushl
and
dec
arpl
jb
jns
xchg
mov
hlt
rcrl
call
out
add
xchg
mov
es
stos
pop
or
or
xchg
insl
push
loop
jl
xchg
orb
adc
int
xchg
inc
xchg
lret
ja
shrl
push
jnp
js
leave
xor
in
test
mov
lret
xor
inc
lods
adc
insl
test
xchg
dec
mov
in
push
into
mov
shlb
jmp
xchg
pop
xor
shl
dec
clc
sbb
jg
push
inc
test
jle
dec
fwait
xor
xchg
inc
jbe
negl
cmp
cmpsb
inc
or
jle
icebp
inc
cmp
sub
xor
push
test
adc
fcmovnbe
sbb
sbb
ds
das
sbb
stos
insb
shl
and
insb
and
mov
vmread
and
push
mov
movl
push
cltd
mov
jae
jo
sbb
push
push
jb
mov
xchg
mov
mov
rolb
in
iret
sbb
in
imul
fmulp
jne
adc
cmc
pop
push
sti
add
pusha
lret
fidivrl
sub
jl
lds
jmp
fbstp
aas
and
inc
push
mov
inc
ja
push
fldl
outsl
ljmp
jg
mov
or
sbb
jecxz
lret
inc
sub
test
inc
pop
popf
mov
lods
cmp
pop
ds
lret
mov
cmpsl
mov
mov
aaa
jb
pop
repz
xor
push
inc
push
fstpl
mov
pop
jmp
ror
dec
dec
mov
and
push
cltd
lds
push
iret
pop
mov
imul
mov
adc
mov
or
popf
fisttps
mov
addb
and
mov
fwait
lods
cmp
dec
or
std
jecxz
cmp
xlat
xlat
mov
les
and
cli
or
rolb
sub
push
or
cmp
mov
push
adc
push
ret
je
call
in
and
aaa
ljmp
adc
inc
ss
push
pop
clc
sbb
or
and
cli
lret
xchg
mov
daa
insb
mov
xchg
jne
data16
iret
sub
cs
jne
into
fwait
stos
insb
inc
fstps
adc
dec
scas
and
sbb
xor
xchg
cld
mov
or
cmpsl
add
sbbb
or
jl
cli
fsubs
in
sub
cmp
inc
rcll
push
dec
je
call
xchg
mov
iret
mov
mov
movsl
shll
inc
aam
mov
movsb
jns
or
mov
les
and
jo
jecxz
or
adc
jo
sub
iret
shlb
inc
add
dec
cmp
pop
xchg
cmp
ret
push
imul
out
outsl
out
inc
xchg
sub
cli
test
in
scas
add
movsb
arpl
jg
ss
into
into
jns
fists
inc
stos
cmpsl
push
rorl
push
pop
jnp
mov
push
inc
mov
fistl
mov
fisubs
adc
mov
jg
in
in
loopne
orl
xchg
subl
dec
fidivrl
lds
and
sti
add
xchg
or
out
xor
cmc
fidivrs
push
sti
xchg
stos
dec
push
pop
push
scas
movsl
les
sub
push
in
iret
das
mov
xlat
push
mov
insl
lret
das
call
pop
jo
dec
loop
sub
call
jle
pop
loope
dec
cmp
sub
push
out
pop
jge
pop
xchg
pop
xchg
fs
insl
dec
jp
jnp
or
and
inc
jmp
adc
and
sub
mov
push
cld
fisttpl
lret
mov
lret
popa
jae
inc
aas
ficompl
or
mov
cmpsb
jle
or
repnz
imul
daa
pop
mov
stc
pop
xchg
popf
add
lret
popa
adc
rolb
mov
in
mov
adc
cmc
cmp
not
imul
addr16
mov
js
sarb
pop
pop
test
aas
dec
inc
mov
add
outsl
xor
repz
pushf
xor
pop
cltd
sarl
dec
negl
aaa
mov
mov
lret
loop
fdivl
lsl
add
aad
sarl
pop
sbb
jmp
adc
sbb
and
sub
cmp
lods
xor
inc
fstl
cmp
xor
jg
fbstp
adc
bound
lock
lcall
aad
and
jae
add
call
xchg
aam
mov
fmuls
ret
jecxz
pop
ror
icebp
adc
or
pop
cmpsl
out
and
xchg
jne
test
and
out
pop
in
jbe
push
dec
mov
loopne
lahf
sbb
andl
pop
xor
or
fmuls
hlt
mov
fisttps
xor
add
jmp
negb
add
mov
xlat
scas
cld
pop
pop
xlat
sub
jl
lods
rorl
push
or
popf
jo
enter
inc
shll
adc
pop
jns
scas
cmp
mov
mov
daa
popa
or
mov
fstps
popa
cld
mov
js
xadd
push
es
mov
jne
sti
mov
mov
cmp
shrb
add
jmp
cld
pop
jle
sub
push
sbb
jmp
mov
mov
xor
push
mov
cmp
inc
adc
inc
dec
or
jnp
je
into
rep
es
std
push
xchg
sub
add
sahf
cmc
xchg
add
dec
gs
pusha
jbe
push
xchg
pop
lahf
rcrl
popf
ror
mov
jge
hlt
and
es
stc
adc
push
push
inc
cmpsl
dec
jno
gs
jae
enter
sbb
jne
mov
iret
dec
into
cmpsb
stc
jbe
jge
and
outsl
rolb
sbb
ffreep
mov
fcomi
fwait
ret
andps
pop
dec
and
lea
mov
adc
fidivrs
int3
adcl
out
decb
das
pop
mov
lea
std
xor
pushf
imul
add
fs
sbb
xchg
dec
ret
add
pop
test
cwtl
fsubl
lahf
fidivrs
outsb
in
rcrb
xchg
sub
sub
inc
mov
push
cld
fs
add
mov
xchg
imul
ficompl
add
mov
leave
and
jl
in
into
xchg
call
lds
sbb
lcall
popf
stc
push
aam
mov
and
sub
inc
rol
jg
sbb
mov
mov
pop
stos
jg
dec
add
mov
mov
fdivrl
jns
lahf
inc
pop
addb
subb
out
cmp
and
inc
scas
xchg
mov
ret
js
mov
mov
nop
and
rcrl
cmp
pop
das
dec
mull
jae
icebp
daa
jb
xchg
mov
mov
jne
mov
in
mov
arpl
pop
lods
repnz
ret
rcll
inc
push
jnp
jl
xchg
in
negl
ss
and
cmpsl
cmp
pushf
mov
jns
adc
sbb
cld
push
push
jle
cwtl
sbb
push
xor
sub
and
add
mov
fisttpl
xor
xchg
addl
cmp
cli
mov
jno
xlat
inc
xor
imul
div
mov
into
push
fimull
xor
ret
pop
or
ficoml
roll
push
jle
cmp
adcl
repnz
sbb
mov
mov
stos
fimuls
cli
dec
jmp
mov
outsl
test
cs
pop
fidivrs
and
mull
or
pop
stos
and
stos
sub
stc
sarb
mov
jge
movsl
mov
inc
or
nop
adc
popa
inc
arpl
adc
lds
inc
rol
jle
mov
gs
popa
lods
cld
dec
lods
xchg
jmp
test
sub
sub
pop
jb
rcll
pop
xchg
sbb
aaa
xchg
in
sub
es
sbb
scas
xlat
or
push
xchg
push
and
dec
add
mov
movb
enter
inc
adc
ljmp
pushf
adc
pop
lods
shr
shlb
out
popf
jne
fidivl
popf
pushf
push
and
xlat
inc
das
stos
add
sbbb
ror
fcompl
pusha
insl
pop
pop
dec
lds
push
out
insl
int3
push
jg
shlb
or
and
jne
cmc
xchg
jge
dec
ret
jno
or
or
sbbl
pop
arpl
repnz
push
pushf
roll
pop
sub
mov
icebp
lret
sbbl
int3
vaddsubpd
cwtl
jle
mov
mov
aam
fmull
ds
js
ret
xor
or
mov
bound
mulb
add
adc
jo
jl
jl
ret
pusha
cmc
hlt
lods
mov
inc
xor
pop
mov
sub
popa
in
out
in
test
inc
jns
xchg
in
pop
mov
sub
movsl
jno
into
mov
lahf
rorb
mov
dec
ficoml
sub
pop
das
sub
xlat
sub
push
in
rolb
into
adc
fsubrs
enter
adc
cltd
cmp
in
cmpsb
movsl
pop
add
push
cld
shrl
mov
les
fs
hlt
mov
iret
jge
cmp
mov
mov
inc
outsb
cmpsb
repnz
push
out
dec
mov
lds
or
jno
add
adc
subl
mov
jmp
dec
stos
pop
fistl
xor
push
add
jns
lret
test
cmc
gs
sbb
stc
xchg
lcall
push
aaa
pop
or
and
out
xchg
data16
jae
mov
pop
sbb
or
movsb
cmp
nop
aaa
addb
cld
pop
adc
inc
dec
xor
or
stos
decb
adcl
mov
dec
mov
cltd
jl
xchg
sbb
pop
xchg
outsb
cmp
ret
push
cmp
daa
mov
jno
mov
lret
adc
xor
mov
inc
not
fwait
addr16
jae
lret
movsl
jg
rolb
jmp
sti
imul
and
movsb
iret
cmpsb
mov
insb
mov
adc
fs
add
inc
ljmp
xor
inc
imul
mov
xchg
movsl
out
push
fidivl
lret
pusha
and
push
push
xlat
std
lahf
cwtl
sbbb
mov
fwait
mov
nop
cmp
cltd
mov
pop
int3
mov
jbe
adc
cmp
fidivs
hlt
xchg
movsb
pop
mov
pop
push
int3
mov
add
xor
imull
andb
push
addr16
inc
lods
out
in
cmc
add
jbe
into
clc
testl
xor
sbb
stos
mov
test
adc
rcrb
sub
mov
xor
adc
lea
xchg
insb
frstor
and
push
mov
loopne
cwtl
dec
into
movsb
push
inc
sub
pop
xchg
xchg
and
jb
cmp
xchg
lcall
mov
andl
dec
repnz
sti
inc
push
mov
xchg
rcrl
inc
mov
jge
pushf
out
adc
pop
xchg
xchg
and
mov
mov
enter
adcl
les
xor
jmp
sub
mov
lret
mov
inc
arpl
ljmp
cmp
xor
insl
sub
inc
ss
dec
in
mov
pop
cmp
enter
pusha
hlt
push
lcall
hlt
ret
pop
or
xchg
inc
push
testl
push
and
adc
mov
ret
stos
sbb
cmpsb
sub
in
sub
and
jb
cmp
sbb
push
imul
inc
pop
mov
sbb
pop
mull
jne
pop
icebp
pusha
mov
jae
shl
mov
out
mov
leave
repnz
clc
cmp
stos
sub
push
dec
daa
push
xor
arpl
cmp
out
dec
popf
mov
out
and
pop
xchg
in
cld
sbb
stos
xor
add
rorb
mov
gs
jp
lret
jne
nop
int3
sub
mov
lret
clc
push
pop
push
mov
lcall
addr16
jae
shll
mov
pop
icebp
decl
jl
cltd
push
fildl
movsl
nop
xlat
in
jecxz
lock
dec
fildl
sub
imul
cmpsb
add
repnz
mov
inc
dec
ret
inc
aam
mov
stc
mov
sub
dec
adc
add
add
ss
sahf
mov
push
jmp
jg
mov
mov
movsl
shll
jle
xor
cmp
push
xor
push
sub
lahf
inc
mov
mov
cmpsb
int3
popf
int
loop
in
fdivs
xchg
dec
lcall
aam
bound
xor
aas
fimull
jae
jno
jmp
jge
pop
cmp
jb
aas
xchg
inc
sbbb
mov
lahf
or
shlb
push
fistpl
mov
push
js
inc
stos
pop
mov
jecxz
jmp
imul
pop
into
inc
jge
push
jg
lock
sub
out
clc
and
xabort
xor
pop
and
mov
add
pushf
sbb
ja
cwtl
sbb
adc
addr16
mov
and
stos
xchg
popa
xlat
jbe
fs
lock
add
pop
jle
lret
lods
jnp
cmpsb
mov
and
in
int
sub
aas
mov
sbb
hlt
decl
push
daa
mov
cmc
idivl
into
xchg
adc
aam
cltd
dec
sbb
mov
enter
add
popa
test
pop
aaa
add
test
and
in
iret
inc
movsb
pop
test
nop
and
test
jno
mov
rcrl
sub
sub
and
fstl
mov
or
out
xchg
jle
cmp
sti
cmp
sbb
dec
lds
insl
in
lea
cwtl
mov
add
push
outsb
je
or
aas
notb
and
sub
inc
mov
rcrb
nop
cmp
adc
dec
xor
mov
aas
xchg
outsb
aas
inc
jnp
mov
popf
xchg
mov
pop
mov
push
popa
inc
mov
dec
and
mov
iret
sub
add
dec
push
lcall
adc
std
popf
ja
clc
jg
mov
into
sub
fisubrl
aas
sub
pop
xchg
xchg
sbb
jo
dec
loope
dec
shl
mul
loope
rcrl
std
jne
pop
jge
scas
dec
repnz
aaa
cmp
call
adc
jge
test
loopne
into
or
or
into
outsl
arpl
sahf
repz
pop
repz
pop
push
popf
jb
add
imul
in
ror
leave
out
repnz
dec
pop
jge
fucom
adc
das
push
pop
push
xchg
dec
ret
and
test
es
gs
lods
movsl
push
xor
mov
adc
inc
push
out
data16
dec
jle
test
popa
sub
js
scas
test
scas
sbb
popf
jecxz
roll
cli
mov
mov
out
inc
dec
gs
cltd
inc
jns
vmread
mov
ljmp
inc
lahf
inc
lcall
dec
imul
sti
jb
mov
jnp
sub
das
xchg
push
int
mov
jp
fisubrl
push
adc
mov
cld
scas
out
pop
sahf
xor
jg
add
xchg
mov
mov
out
pop
aad
sahf
xchg
mov
or
mov
popf
mov
xchg
scas
inc
sbb
fbstp
jne
jg
in
dec
inc
inc
jb
shl
loopne
add
std
cmp
inc
aam
pop
add
push
cmp
pop
cmp
or
das
out
or
jmp
xchg
ret
into
mov
jle
mov
out
xchg
js
lock
push
adc
das
mov
pop
xchg
push
cmpsb
imul
or
mov
fcmovnbe
faddp
cltd
jge
add
orl
jge
mov
aaa
test
sbb
jns
in
mov
fs
nop
jge
lahf
dec
hlt
mov
push
lds
pop
and
mov
or
add
lock
sbb
and
les
pmulhw
mov
into
pop
cmp
xchg
aas
imull
sub
xchg
fmul
repnz
jno
cwtl
gs
std
push
cmp
das
or
int
fstps
mov
jb
push
sbb
sub
imul
mov
in
xor
and
sbb
outsb
in
fnstenv
cmp
mov
xor
add
xchg
pop
dec
adc
imul
xchg
fwait
test
jne
mov
add
adc
fiaddl
and
cmpps
pop
lret
mov
iret
shlb
iret
loopne
adc
adc
lods
jns
outsl
inc
dec
dec
and
pop
jo
or
adc
lods
in
sbb
jg
jne
xor
xlat
adc
repz
add
xor
in
mov
mov
sbb
hlt
xlat
stc
mov
clc
jbe
xor
jns
sub
fildll
mov
dec
sarb
push
lods
iret
les
out
ret
mov
ljmp
mov
jl
ret
sub
xor
cmp
stc
mov
xchg
popf
xlat
mov
pop
add
cmp
jbe
cltd
add
jne
fcmovb
mov
movsl
je
pop
push
push
jns
pushf
in
mov
mov
xor
xchg
jmp
addr16
sbbb
shrb
pop
shlb
sbb
and
popf
lods
insl
or
pop
cmp
movsb
dec
dec
pop
sub
inc
push
and
and
xlat
cmpsb
imul
mov
sbb
dec
sub
call
add
push
push
arpl
mov
in
aam
pop
push
and
add
call
in
dec
aam
inc
add
not
xchg
mov
xlat
popf
xlat
jne
popf
jb
mov
pop
mov
dec
fs
insl
mov
inc
jnp
rolb
test
inc
std
mov
jb
push
mov
fldl
es
arpl
sub
sbb
mov
sti
rorb
stos
pop
movsl
pop
insl
daa
in
or
add
cmp
push
cmp
ljmp
cmp
or
xlat
dec
adc
or
mov
xor
fld
into
push
and
mov
stc
mov
mov
or
icebp
aad
push
jnp
or
stc
mov
mov
mov
in
pop
das
pop
int
jecxz
sub
mov
popf
pop
jo
mov
loope
mov
add
pop
sbb
sub
add
shlb
nop
lahf
icebp
icebp
cmc
inc
xor
mov
jo,pt
xchg
dec
out
test
gs
xchg
arpl
jg
push
test
or
cmp
cmpsl
loope
imul
shrl
dec
fwait
inc
js
mov
out
out
lods
dec
push
jo
inc
std
add
cmc
mov
loopne
pop
and
mov
add
cmp
test
add
jnp
pushf
rcrb
cli
dec
mov
js
mov
jo
das
stc
cltd
ljmp
pop
scas
push
adcl
jl
incb
or
mov
lock
aam
test
sub
mov
mov
mov
push
adc
xor
xor
pminub
or
ja
lods
dec
dec
xchg
push
sbb
xchg
out
enter
popa
push
roll
xor
repz
push
or
std
cld
lret
add
stc
repz
repnz
mov
scas
loope
loope
mov
sub
imul
add
aad
and
scas
jecxz
sbb
dec
stc
and
mov
dec
lret
mov
ss
sub
xlat
cmp
loopne
fwait
fs
loope
xor
mov
fbstp
cmp
xchg
das
loope
dec
adc
dec
xchg
mov
rcrb
sbb
mov
xor
std
out
cmp
mov
dec
dec
gs
ret
push
jb
jb
scas
cli
xchg
and
scas
dec
test
inc
cmpsl
aas
sbb
in
jae
mov
ret
xchg
pushf
gs
fimuls
mov
roll
aaa
inc
adc
sub
je
sub
jns
push
mov
sub
icebp
incl
pop
pop
xorb
arpl
sbb
push
repz
rcll
inc
cmp
push
stc
mov
push
mov
dec
mov
xchg
adc
adc
dec
cli
aam
push
test
xchg
fwait
out
in
mov
das
roll
hlt
movsb
lret
and
lods
lods
aad
push
jae
mov
sti
ret
push
push
pop
fsubrl
or
and
jae
pop
push
fisubrs
cmpsb
mov
movsb
lods
mov
sub
mov
leave
jbe
movsb
scas
iret
inc
in
fs
adc
jnp
hlt
inc
sbb
inc
mov
jp
fwait
inc
mov
out
popf
sbb
cmpsb
insb
ljmp
arpl
push
jne
sbb
cmpsb
inc
push
sbb
insb
push
push
xchg
sbb
loop
repnz
gs
sbb
dec
cwtl
cmc
sti
cwtl
or
push
cmp
in
test
out
inc
sbb
std
mov
pop
clc
inc
rcrb
sub
cmpsb
ja
adc
or
scas
inc
mov
inc
jge
inc
add
fadd
xchg
roll
les
pop
lcall
dec
and
push
rep
mov
call
adc
push
cmp
lock
mov
fnsave
sahf
sbb
loop
pop
or
ja
outsl
sub
add
js
js
sub
loopne
pop
cmpsb
cltd
mov
mov
mov
xor
fisubs
ljmp
mov
add
mov
cmpb
push
fstpt
scas
ds
test
cmp
out
gs
adc
push
adc
cmp
mov
imul
dec
stos
movsl
orb
cmc
pop
pop
out
mov
xor
jmp
cld
adc
sbb
lock
hlt
jmp
sbb
das
jno
out
bound
daa
jno
nop
adc
pop
dec
sbb
scas
fistpll
pop
jp
mov
dec
cmp
push
pop
or
pop
jae
es
xchg
dec
clc
stos
sbb
ficompl
mov
hlt
xchg
into
lods
fldcw
fucomi
cli
addr16
lea
mov
xor
mov
enter
jp
orb
or
pop
xor
jg
subl
jns
dec
repnz
out
sub
stos
insl
push
jno
cmp
push
call
dec
or
and
mov
fcomip
add
loop
cmp
dec
cmp
decl
xor
outsb
stc
mov
addr16
sub
pop
mov
adc
jp
and
int3
mov
icebp
adc
pop
xor
sbb
push
inc
pop
aas
xchg
push
sub
notl
flds
imul
xchg
and
or
dec
fdivl
repz
lock
fwait
cmpsl
dec
sub
xchg
ja
in
pop
sub
in
push
jmp
nop
add
mov
popf
adc
mov
pop
sub
mov
push
xor
outsb
pop
inc
ljmp
sbb
je
pop
cmc
and
push
loopne
hlt
jge
push
dec
jmp
mov
js
mov
jno
int3
out
cmc
loope
jecxz
mov
popa
and
mov
push
inc
cmpsl
out
fisubs
jl
adc
mov
scas
in
daa
into
pushf
testb
jnp
push
lcall
cvtps2pd
stc
js
sbb
sub
jns
pop
mov
pop
lock
mov
std
push
sub
rcll
ja
cmp
pop
sbb
sarb
int
sarl
ja
mov
or
pavgw
adc
sbb
pmaddwd
sbb
adc
test
add
cmp
lahf
or
mov
sub
push
push
and
fiaddl
dec
shrl
fs
mov
xlat
mov
inc
sarl
ret
add
cs
cmp
dec
ret
push
pop
clc
jbe
ret
or
xchg
add
jp
push
pop
and
or
in
mov
jmp
pop
dec
mov
outsl
sub
xor
push
cli
fsts
lret
pushf
popf
in
pop
cmp
js
dec
sub
js
inc
into
push
inc
stos
fidivrl
nop
xchg
ret
dec
push
xchg
cmc
or
mov
jmp
rolb
pop
cmp
test
jecxz
popf
cmpsb
std
cmpl
inc
cmp
mov
jnp
or
mov
scas
scas
test
inc
sub
call
popa
mov
or
xor
pop
sbb
add
popa
std
push
loop
insl
in
testb
push
and
aas
jmp
mov
sub
xchg
outsb
inc
jns
sbb
and
aad
pop
test
mulb
ss
sahf
rolb
popf
test
xchg
lds
inc
mov
xchg
sbb
ret
aas
or
sub
dec
dec
jmp
xchg
lock
insl
mov
push
pop
push
sub
xchg
sbb
mov
ficompl
lods
fildll
lds
adc
sbb
fistps
aad
aam
adc
jg
lahf
ret
jp
movsl
out
pushf
mov
jo
shlb
fucomp
add
ljmp
dec
sub
sbb
dec
imul
push
repnz
shrl
test
clc
jno
testb
jmp
adc
popa
mov
leave
and
leave
mov
ljmp
aad
stos
loope
lods
rcrl
add
jge
sti
ficoml
shlb
pop
mov
fildl
rolb
lods
fs
in
fcomp
std
sti
push
clc
sbb
xchg
mov
push
in
and
sbb
or
lsl
testl
push
jle
jle
in
adc
and
lock
and
and
out
sub
into
adc
mov
adc
mov
sbb
int
cmp
sub
add
jecxz
shll
lds
sub
fimuls
adc
mov
jp
js
mov
call
fmull
lods
xlat
gs
movsl
push
aas
xchg
jae
add
add
and
cld
addr16
inc
sub
mov
hlt
lods
jo
cwtl
push
in
mov
adc
add
fdiv
mov
inc
cmc
fdiv
or
cli
push
xchg
jle
xchg
mov
xor
in
test
xor
xchg
push
addr16
xchg
push
inc
xchg
lds
insb
mov
pop
arpl
out
and
repnz
cmp
adc
xor
add
inc
jns
or
lods
rcrb
cmp
push
dec
popa
jno
add
sahf
jmp
mov
mov
cs
ss
mov
sub
addr16
std
jbe
out
and
dec
mov
sub
inc
ss
xchg
jo
mov
push
and
cmc
and
pop
enter
cs
adc
icebp
ror
test
inc
fistpl
jl
cmpsb
fisubrs
loop
inc
js
push
test
daa
jnp
and
jb
fwait
push
ljmp
jnp
or
jmp
add
popf
mov
imul
jbe
sbb
jo
daa
sub
jecxz
aam
cltd
cmp
sub
and
test
int
outsb
jmp
push
cmp
lds
loop
xchg
pop
sbbl
xlat
pop
dec
sbb
fwait
sub
lock
sarl
cli
ret
andb
es
pop
hlt
inc
mov
jge
lcall
out
cmp
pop
aas
shll
and
repz
sbb
and
data16
loop
inc
sbb
repz
data16
loope
fwait
cld
ret
cmpsl
inc
das
pushf
jmp
push
push
in
addr16
push
clc
pop
aam
sub
add
sbb
jne
js
mov
or
je
les
push
cmp
or
inc
stc
fisubl
fnstsw
sbb
mov
fadds
xor
mov
xorl
roll
bound
adcl
popa
test
dec
adc
in
mov
jbe
push
js
sub
and
mov
mov
xor
push
in
mulb
sbb
int
pushl
xor
push
jg
add
mov
push
cmp
mul
ja
and
decl
cmp
cmpsb
and
movsl
les
push
ss
aas
add
lods
sbb
jb
inc
add
mov
dec
fldl
inc
adc
push
mov
imul
aad
jno
imul
xchg
mov
adc
jmp
lea
lret
mov
mov
in
fisttps
mov
inc
jp
cmp
push
adc
pop
mov
test
sti
jecxz
mov
xor
adc
adc
cwtl
and
or
in
sbbb
jbe
pop
ljmp
pop
divb
into
es
mov
jne
push
cmpsb
add
mov
popa
sbb
jmp
scas
lock
in
pop
sub
mov
pop
aam
fs
sbb
adc
loop
andl
pop
xor
scas
sahf
mov
incb
pop
jp
push
adc
push
clc
dec
push
cwtl
pop
jmp
fisubrl
mov
pop
cmpsl
xchg
and
mov
out
xor
jnp
ds
jp
in
mov
aaa
dec
in
pop
push
or
adc
out
mov
add
iret
fsubr
mov
movsl
and
rorl
test
clc
or
aam
stos
pop
xor
or
lock
in
sbb
imul
lret
pop
pop
push
lds
dec
rorb
ret
push
adc
fadds
lahf
addb
aas
mov
gs
add
mov
and
inc
mov
sbb
xchg
mov
jnp
xor
push
scas
mov
mov
inc
sbb
mov
sti
and
loop
xchg
imul
addr16
test
inc
jmp
xchg
xor
xchg
imul
in
jnp
lcallw
sub
cmpsl
rcr
hlt
pop
lea
enter
je
adc
mov
cs
or
je
mov
scas
popf
insl
mov
fs
loope
mov
add
xchg
xorl
dec
cld
mov
loopne
xor
mov
test
inc
mov
out
push
stos
addb
jo
repnz
shr
fisubl
lahf
mov
in
push
leave
jmp
in
xchg
mov
int3
lods
jp
pop
popf
jle
shrl
ss
mov
or
sub
ret
stos
lret
jbe
xchg
push
cs
sbb
cld
xchg
out
cmp
sbb
popf
std
jnp
icebp
cld
sub
jge
pop
fidivs
dec
cmpsl
inc
add
clc
adc
jae
or
xor
sbb
rcrl
cmp
sub
mov
sub
pop
sub
sub
adc
hlt
out
add
lahf
out
lcall
sub
nop
adc
loope
xorl
xchg
adcl
pop
test
in
and
lcall
sub
pop
push
orl
mov
sbb
or
or
subb
adc
xor
jno
imul
cmp
and
test
mov
mov
adc
sbb
lea
pop
aaa
mov
push
cs
in
std
ret
pop
push
pop
cmp
stos
jg
scas
jmp
adc
fucomp
push
inc
in
xchg
cld
nop
rorl
mov
dec
int
adc
leave
inc
mov
lret
mov
add
cmp
or
xor
dec
cld
jb
mov
aas
cmp
or
insb
mov
call
push
mov
outsl
addr16
mov
adc
cmpsb
mov
stos
sti
in
int
lods
sahf
mov
dec
cwtl
mov
cs
pop
dec
push
js
lahf
jg
stos
repnz
inc
leave
bound
xchg
or
divl
ljmp
fiadds
data16
repz
sbb
ret
xchg
mull
mov
popf
cmpsl
inc
lcall
ljmp
push
lock
sbb
loope
out
xchg
mov
jno
xchg
addl
or
insl
aam
mov
adc
gs
aaa
sub
fstps
mov
sahf
and
jbe
add
cmc
repnz
out
xchg
out
or
cmp
push
cwtl
in
mov
test
xlat
and
mov
push
jae
push
jecxz
mov
inc
or
dec
iret
iret
xchg
loope
and
push
mov
and
insb
in
push
jno
pop
pop
xchg
js
lods
adc
inc
add
stos
repnz
dec
jp
cwtl
mov
das
and
daa
sub
push
inc
inc
daa
push
push
pop
jno
adcl
and
sbb
popf
and
das
dec
mov
das
dec
adc
je
mov
setl
stos
mov
and
clc
xchg
sub
mov
sub
popa
xor
inc
fwait
mov
mov
adc
mov
fdivrl
adc
jns
push
stos
cmpsb
jg
mov
shll
pop
push
fwait
or
pop
aam
jnp
out
mov
cld
shrl
fbstp
mov
pop
negl
and
cmp
popa
dec
fs
sarl
jns
pop
in
xchg
xchg
pop
xor
pop
dec
mov
enter
dec
dec
leave
inc
inc
adc
outsl
insl
lea
in
sti
sub
and
es
cmovno
fstl
cmp
rclb
adc
xchg
in
pop
int3
lahf
data16
mov
xchg
out
jno
shlb
pop
or
adc
inc
add
aas
mov
adc
imul
sbb
nop
xchg
cmp
clc
call
push
xchg
pop
fwait
ds
and
lock
jnp
or
arpl
ljmp
xor
mov
push
data16
xor
mov
xchg
dec
pusha
pushf
icebp
push
inc
mov
fsubp
push
pop
outsb
repz
jecxz
adcl
or
scas
popa
mov
jle
repnz
pushf
mov
mov
cmpsl
in
leave
push
popa
push
xor
enter
push
subl
mov
mov
push
jl
idivl
dec
mov
shrl
push
xchg
add
in
jmp
pusha
mov
repnz
in
aas
jg
cmp
insl
and
mov
cs
int3
ret
pop
cmp
lret
fcoml
pop
arpl
shlb
mov
push
stos
imul
xor
mov
sbb
in
adc
es
inc
mov
das
out
push
push
lods
jns
pushf
mov
ret
sub
repz
data16
xchg
popa
pop
xchg
ja
sar
dec
and
dec
xchg
aas
pop
nop
cmpsb
icebp
repnz
jle
ficompl
or
mov
push
mov
adcl
mov
loope
mov
pop
testb
daa
std
inc
mov
gs
xchg
in
jge
sbb
xor
sbb
imul
hlt
es
inc
fstl
cmp
ljmp
xchg
andb
jno
or
push
xchg
push
cmp
aam
inc
int3
call
pop
data16
mov
int3
add
mov
stc
nop
lret
pop
fwait
or
and
testl
gs
pop
mov
dec
cmp
into
cli
insl
xchg
test
push
enter
adc
lahf
je
movsb
pop
imul
mov
shll
fs
fidivrl
jo
stos
add
addr16
xchg
sub
fists
sub
imulb
cltd
mov
mov
mov
lds
ljmp
mov
scas
repnz
bound
test
mov
lret
out
cmpsl
sbb
in
fwait
and
dec
and
add
outsl
sub
movsl
cld
loope
aad
inc
pop
fidivl
lods
mov
mov
dec
call
xor
addr16
out
mov
jns
and
scas
jns
in
icebp
dec
or
mov
push
jb
outsb
push
fwait
out
scas
addr16
gs
stos
cmp
lods
inc
stos
jg
adc
pusha
mov
lea
push
cmpsb
dec
divb
sub
xor
xchg
sbb
push
sub
xorb
js
xchg
add
dec
push
in
dec
scas
dec
mov
nop
lret
push
mov
jecxz
add
add
loop
mov
mov
inc
loopne
int
movsl
cmpsl
in
adc
paddd
sbb
jg
ret
inc
loope
sbbb
sbb
cli
add
jp
mov
mov
jno
lock
scas
sbb
out
subb
mov
daa
push
fimuls
test
jmp
loopne
xchg
andl
subb
iret
lcall
lcall
stc
sbb
movsl
out
dec
mov
mov
lds
lahf
cltd
prefetch
push
dec
imul
stos
and
pop
push
or
mov
xchg
mov
fdivs
add
lds
insb
push
jnp
jmp
mov
mov
inc
jl
test
pop
sub
xchg
push
xor
and
sbb
movsl
mov
push
push
jl
mov
push
fucomip
dec
pop
dec
cmc
xchg
push
jmp
xchg
mov
push
or
popf
pop
dec
mov
lock
aam
popf
cmp
jp
jge
into
hlt
nop
aam
push
jmp
mov
push
dec
mov
mov
cmp
gs
dec
enter
adc
or
jo
xchg
xor
mov
das
cmp
pop
bound
and
lea
adc
add
add
shlb
in
leave
xchg
xchg
imul
adc
push
push
mov
scas
cwtl
jecxz
push
imul
jmp
xor
add
daa
in
mov
and
jl
addr16
xchg
ja
adc
repnz
in
insb
sbb
jae
rclb
mov
cld
mov
bound
repnz
sbb
test
xchg
mov
jle
aaa
xlat
xchg
mov
dec
in
mov
lea
mov
xchg
roll
push
loopne
dec
lods
scas
roll
js
mov
and
outsl
mov
dec
add
les
gs
ja
xor
in
daa
aaa
and
cmp
add
pop
pop
cs
in
inc
cmp
pop
xor
inc
cli
ret
push
lock
scas
clc
jl
aad
aad
cmp
push
dec
push
dec
jns
xchg
std
adc
in
clc
out
inc
test
mov
ret
fidivrs
inc
aad
or
mov
in
fwait
cmp
out
dec
add
push
xor
cmc
in
scas
add
jge
pop
push
nop
shll
dec
push
test
ja
popa
pop
mov
scas
fisubrs
jae
xchg
jae
dec
mov
pushf
xorl
inc
add
add
mov
lods
loope
push
repz
jno
pop
ljmp
jnp
jg
bound
arpl
xor
test
add
push
enter
repnz
insb
or
into
nop
test
xchg
mov
or
mov
push
pop
add
leave
test
stos
sbb
ffree
lods
testb
sub
imul
fldl
mov
push
and
das
lret
cli
adc
out
cmpsb
cmpsb
mov
mov
in
lret
aas
jbe
cmp
xor
add
sbb
dec
xchg
dec
insb
and
andl
or
lret
test
adc
xchg
cmp
xchg
gs
cmpl
mov
out
lcall
imul
aad
dec
push
or
stos
inc
mov
push
outsb
cltd
mov
test
pop
repnz
xlat
push
test
pusha
les
dec
repz
cmp
jne
rcr
push
pop
mov
sbb
cmp
pusha
mov
adc
subl
push
mov
xor
fs
sbb
mov
in
adc
add
shlb
cmp
data16
sahf
pop
sbb
in
dec
mov
fcomps
aas
add
xbegin
cmpsb
sub
lods
testl
stc
adc
sub
mov
mov
rorl
jecxz
xor
mov
pop
loope
add
test
imul
outsb
popf
mov
divl
cmp
movb
xor
ja
daa
mov
or
add
pop
pop
fisubl
pop
bound
shrb
jge
stc
and
cltd
dec
xchg
mov
xlat
fstp
movsb
push
dec
fs
pop
mov
jle
or
sti
mov
sarb
les
sub
jecxz
inc
out
test
jbe
nop
std
outsl
gs
xchg
fisubs
mov
mov
je
mov
xchg
rcrl
jecxz
mov
stc
mov
jg
test
xor
add
xchg
scas
sub
jecxz
xchg
push
test
lcall
pop
scas
push
xor
outsl
cmp
add
mov
add
sub
lods
add
dec
jae
jp
mov
mov
inc
aaa
idivb
jl
jg
int3
lods
push
sbb
xor
add
loop
fcmovbe
or
inc
add
cmp
sbb
pop
pop
cli
jns
jae
push
mov
mov
push
mov
jnp
sbb
sbb
scas
lret
into
push
adc
mull
sbb
sub
sbb
leave
gs
lahf
dec
push
clc
repnz
xor
aas
sbb
pop
pop
sub
adc
sub
and
lods
inc
mov
popf
adc
sbb
in
cmpsl
lea
idivl
lods
sub
hlt
adc
das
repnz
mov
jns
mov
xlat
movsb
mov
add
int
add
inc
in
xor
in
shll
pusha
cmp
clc
add
js
loope
fmuls
pop
mov
out
add
repnz
inc
jnp
arpl
mov
lods
cli
insl
les
jp
or
out
dec
bound
inc
push
mov
xor
dec
daa
cmp
inc
lret
ss
xchg
cmp
sub
dec
aad
inc
sbb
sub
fsubrs
in
ja
jle
xlat
shlb
jo
mov
ja
daa
mov
jg
popf
push
lret
notb
cmp
ds
xor
mov
cwtl
sbb
add
aam
int
les
push
pop
mov
pop
in
stos
cltd
and
pop
add
dec
test
loop
in
xor
push
scas
mov
loopne
xorb
mov
mov
mov
stos
dec
clc
icebp
insl
jecxz
repnz
xchg
dec
pop
inc
lods
incb
jmp
or
cmp
data16
pop
sbb
lock
mov
jno
inc
pop
daa
push
lds
adc
mov
pusha
cmp
loop
xchg
push
sbb
adc
mov
cmp
xchg
insl
adc
fbld
mov
clc
outsb
je
push
insb
inc
or
xlat
in
hlt
dec
int
popf
dec
sub
push
cli
pushf
inc
push
adc
bound
lea
or
int3
push
xor
stos
stc
mov
mov
cld
ja
hlt
jl
sbbb
mov
repz
push
xor
xchg
dec
jno
mov
mov
dec
mov
and
xor
out
arpl
and
out
imul
aad
xchg
rorl
lods
aas
inc
and
xor
xor
ficomps
adc
fstpl
xchg
mov
stc
cmpsb
stos
data16
shrl
xchg
adc
mov
xchg
lcall
std
add
loopne
jae
adc
mov
mov
pop
xchg
dec
lods
out
dec
sub
cmp
push
cmpsb
dec
pop
fldenv
sbb
lods
adc
out
jae
je
ljmp
mov
sbb
shll
test
fwait
aam
insb
rclb
ret
xchg
or
mov
inc
test
sub
and
xor
daa
bswap
sbb
sub
dec
outsb
jnp
sub
dec
cmc
jle
iret
nop
push
xchg
mov
outsb
push
pusha
xor
xchg
mov
lods
stos
dec
subb
out
sbb
in
rolb
bound
mov
mov
in
call
xchg
les
sbb
sbb
loop
or
stos
je
aam
sbb
push
scas
pop
or
popf
jg
leave
aad
pop
popa
sbb
jb
dec
push
cs
mov
pop
test
icebp
in
js
out
push
mov
sbb
gs
adc
aad
cmp
imul
sbb
mov
outsb
into
lahf
jbe
jg
loope
ds
push
das
ss
arpl
pop
pop
jno
arpl
add
in
push
das
jle
jnp
daa
icebp
jbe
or
js
das
scas
scas
sub
popa
popl
popf
lret
sub
lret
jne
js
pop
cmpsl
xchg
insb
cmp
lods
mov
arpl
mov
xlat
adc
pop
mov
push
cmp
scas
test
pop
in
xor
push
test
push
mov
inc
pusha
aad
add
xchg
jno
mov
push
lock
aaa
int
pop
inc
inc
loope
std
shlb
in
negl
testl
sub
movsl
outsl
test
addr16
add
inc
fildll
pop
xchg
dec
or
test
call
test
movsb
repnz
ret
jbe
jo
mov
dec
call
inc
mov
jbe
push
inc
xchg
test
sbb
cmpl
or
jns
mov
push
adc
push
mov
iret
scas
scas
out
xlat
std
sub
jns
xchg
add
mov
and
shl
add
sbb
cmpsl
sbb
in
dec
add
lcall
scas
cmp
shr
inc
jbe
sarb
dec
push
rorb
pop
stos
cmpsb
fsubl
mov
inc
dec
fs
dec
mov
sti
jmp
int
xor
or
pop
sahf
stos
cmp
xor
aad
stos
lcall
inc
mov
cli
pop
lods
je
dec
mov
push
push
shll
adc
mov
arpl
lahf
stos
push
and
or
rcr
std
dec
and
fsub
fwait
and
imul
es
mov
cmc
stos
clc
mov
gs
mov
fwait
cli
call
psrlw
add
sbb
movsb
cmp
das
out
adc
fwait
add
jbe
lods
daa
out
aam
scas
jp
or
popf
jns
or
push
sbb
sbb
mov
ds
outsl
inc
dec
mov
jecxz
xchg
das
lea
jl
rorb
mov
test
jmp
stc
ret
xor
mov
aam
test
inc
dec
jo
js
mov
mov
test
mov
push
mov
xchg
adc
mov
imul
pandn
jb
xor
ja
and
lods
lea
xlat
jmp
je
xchg
mov
stc
fdivrp
in
jl
addr16
mov
ds
cmp
fistpl
xor
xchg
rcrl
cli
push
inc
push
sub
cmp
scas
mov
inc
cli
mov
iret
jmp
cmc
inc
in
or
rcrl
mov
inc
and
pusha
jns
in
pop
cmpsb
loope
lods
cmp
inc
fwait
int
ja
xorb
fisubrs
add
cmp
data16
in
andb
xlat
repnz
adc
gs
xchg
mov
pop
dec
repz
loopne
jns
mov
test
jmp
popf
mov
add
add
and
cmp
add
insb
push
es
mov
out
push
jg
inc
rclb
mov
dec
popf
pop
jnp
aaa
lea
sar
add
mov
test
stos
bound
mov
fbstp
mov
mov
clc
jge
out
fisubrs
push
pop
jne
mov
in
sbb
push
and
mov
mov
dec
mov
jb
jmp
lcall
mov
xchg
sbb
dec
dec
cmpsb
insb
jp
popa
jmp
daa
cld
out
insl
ret
cmp
cwtl
ljmp
lcall
mov
add
xor
or
sahf
add
xchg
inc
jbe
aad
or
out
mov
sub
cwtl
inc
outsb
xor
add
int
mov
hlt
xchg
scas
jmp
fwait
int
pop
popa
xchg
aaa
lods
and
out
dec
lock
lret
lea
mov
mov
pop
jp
lea
sti
or
xor
lods
cli
shll
push
or
sbb
or
push
insb
ret
pop
mov
adc
fsubs
mov
push
or
jge
shr
sbb
xchg
arpl
sbb
scas
pop
fld
jecxz
mov
or
xchg
sub
xchg
jecxz
lock
cmp
sbb
add
sub
pop
sub
leave
add
stos
xchg
and
iret
cwtl
inc
outsl
xchg
mov
pop
data16
int3
pop
mov
inc
mov
stos
sbb
cmp
outsb
cmc
incb
jbe
sbb
daa
fdivs
mov
push
mov
push
mov
cmp
pop
pop
outsl
sub
in
sub
push
push
xor
sub
add
imul
xchg
lcall
xlat
pop
test
imull
call
and
stos
xchg
enter
adc
andl
es
cltd
jge
push
lcall
filds
sub
fs
sub
fwait
cmp
inc
sub
cmp
jecxz
fwait
sbb
sbb
xchg
stos
and
mov
cmpsl
push
icebp
jmp
adc
out
and
mov
js
gs
push
push
call
push
les
shl
mov
mov
mov
adc
cltd
in
mov
sub
sahf
sub
pop
or
and
or
fisubl
xchg
dec
aaa
leave
andl
fwait
mov
sub
dec
loop
leave
scas
push
inc
inc
imul
sarl
js
mov
mov
push
and
popa
lahf
stos
or
jbe
lods
cmp
es
push
lods
and
stos
les
jmp
push
and
leave
mov
push
ret
mov
cmp
cmc
jl
cmp
cwtl
loopne
faddl
mov
nop
pop
test
insl
lahf
sub
cmpsb
in
test
lret
aas
mov
mov
test
or
push
push
inc
out
aaa
and
adc
int3
xor
or
pop
ret
int
rcr
roll
insb
xchg
js
cwtl
xchg
sub
mov
push
mov
sbb
stc
testb
adc
inc
inc
rcrl
popa
inc
sbbl
in
repnz
jne
lods
cmp
int3
or
cld
mov
jb
push
lds
and
fwait
popa
sbbb
dec
jae
in
pop
cltd
jge
mov
cmp
cmc
push
jno
jmp
insb
xor
jbe
in
andl
popa
push
xor
push
mov
cld
inc
call
sbb
xchg
fbld
aad
insl
adc
shlb
or
testb
mov
mov
lock
scas
enter
adc
ljmp
mov
or
daa
bound
jbe
adc
mov
cwtl
dec
jecxz
rorb
jp
dec
sub
pushf
cmp
daa
test
das
inc
push
jns
pop
adc
mov
bound
int
sbb
pop
cmpsb
neg
xor
adc
sbb
mov
lods
lds
imul
adc
push
and
dec
rcrl
jnp
jno
cmpsl
mov
enter
cmp
mov
out
dec
dec
cmp
int3
imul
test
mov
cld
dec
xlat
mov
jo
cli
or
fbld
inc
sub
imul
jmp
repz
lcall
xchg
insb
nop
test
lods
std
inc
pop
xor
sbb
pop
pop
icebp
pop
mov
pusha
icebp
pop
inc
dec
fbstp
jecxz
pop
imul
lds
xor
in
push
out
lcall
push
ja
clc
cmpb
sub
mov
fwait
adc
popf
scas
dec
imul
mov
xor
jle
std
xchg
mov
outsb
mov
out
lds
sub
adc
dec
es
int3
sahf
repz
inc
je
cmp
stos
icebp
lds
dec
movsl
and
scas
shlb
or
movsb
sub
test
iret
adc
adc
jbe
hlt
xchg
pop
mov
cltd
ret
jp
mov
inc
ljmp
icebp
sbb
jns,pt
adcb
jb
sbbb
inc
ds
daa
mov
daa
push
insl
jg
sub
and
xchg
roll
shll
lods
or
aad
ds
fists
sti
sub
push
pop
jge
mov
inc
insl
xlat
je
push
dec
mov
leave
adc
and
push
loop
mov
push
popf
inc
fcmovne
lds
push
or
cmp
mov
lds
dec
clc
out
bound
hlt
xchg
cwtl
mov
test
mov
negb
fldenv
gs
lods
xchg
xor
sub
fmulp
add
push
dec
imul
cli
pop
mov
xchg
es
and
pop
rcll
outsb
push
sub
arpl
cmc
dec
pop
cmc
dec
ret
es
movsb
xchg
jnp
mov
add
ret
fwait
dec
aad
mov
mov
js
xchg
movsl
decb
pop
scas
pop
movsl
lretw
stos
jae
out
push
xor
lods
je
arpl
hlt
mov
iret
xchg
daa
adc
push
push
lahf
loopne
sub
add
push
and
adc
add
add
cmp
repz
xchg
dec
loopne
jg
outsb
jo
pop
into
push
test
mov
ja
jb
jmp
inc
pop
mov
les
xchg
mov
sahf
sbb
fs
push
sub
inc
pushl
pop
pusha
dec
inc
pop
out
les
mov
adc
adc
mov
sub
lods
cli
sbb
inc
loop
pop
mov
push
insb
jle
test
lcall
jae
dec
out
cwtl
movsl
mov
mov
jbe
cmp
push
mov
ret
in
mov
frstor
adc
lea
test
and
cmp
pop
outsb
das
adc
inc
cltd
xor
xchg
les
mov
push
push
push
pushf
shr
sbb
xchg
out
in
push
adc
or
push
push
xchg
ret
stc
mov
inc
or
adc
popa
adc
inc
insb
sbb
mul
stos
adc
sub
movsl
xchg
xchg
mov
xor
add
xchg
jns
push
repz
dec
subb
fcmovnu
sub
in
lods
test
xor
mov
leave
push
gs
mov
pop
mov
js
int
aam
lds
mov
inc
daa
sbb
xchg
mov
mov
jecxz
jbe
in
outsb
jae
adcl
mov
inc
shll
cmpsl
das
std
and
lea
lock
loopne
push
fucom
and
push
and
push
out
dec
cmp
es
fcompl
clts
mov
mov
es
daa
adc
nop
idivl
mov
add
pop
aas
pop
sbb
pusha
cmp
out
jno
dec
repz
and
dec
mov
xchg
and
fwait
xchg
fistpl
cmp
inc
push
mov
addl
cmp
mov
jmp
lcall
dec
mov
out
add
cmp
hlt
lods
push
enter
pop
test
es
mov
dec
sar
loope
mov
aad
jge
out
lret
lret
movsl
push
cld
cmp
call
inc
pop
mov
frstor
mov
adc
fadds
mov
mov
pop
jb
mov
pusha
imul
dec
fiadds
cmp
mov
lcall
and
scas
pop
pop
pop
mov
xorl
push
repnz
loopnew
imul
mov
insb
lock
sub
mov
mov
test
inc
push
jp
inc
mov
or
imulb
sbb
mov
les
push
cmp
dec
sbb
fcmovnu
out
dec
xor
sub
insb
mov
aam
cmc
scas
daa
fcmovnbe
pop
cmpb
sarb
les
test
ret
inc
mov
add
push
or
dec
mov
sub
push
adc
dec
xor
scas
incb
nop
dec
cmpsl
add
sub
inc
js
mov
sti
cmpsl
shll
cmc
pop
sarb
nop
dec
dec
xchg
mov
shl
jnp
ds
inc
xor
aad
push
xor
aas
sub
and
mov
sbb
in
pop
inc
fldcw
mov
sti
in
imul
cltd
mov
movsb
mov
div
mov
inc
iret
push
dec
xchg
fadd
dec
mov
shll
xchg
mov
roll
ja
outsb
dec
addb
cmp
aaa
pusha
xchg
jae
or
arpl
ljmp
mov
or
nop
jae
xorl
inc
cmp
inc
or
sbb
cltd
push
lret
aas
xchg
mov
rolb
fcmove
lods
std
outsb
sbb
arpl
inc
sbb
das
popf
lock
adc
push
mov
int
loopne
mov
mov
mov
iret
push
pop
gs
ret
je
dec
mov
pop
aam
mov
clc
enter
fistl
and
loope
cmpsl
pop
cli
negb
in
pop
popl
pop
mov
ret
mov
cmc
mov
call
adc
jnp
jecxz
ljmp
adc
xchg
shll
sbb
lods
cld
test
cmp
in
mov
lock
push
add
lret
inc
subb
mov
inc
pop
dec
sub
fbstp
push
dec
rorb
xchg
xor
add
sahf
daa
bound
jne
fisttpll
rcrl
sub
sbbl
xacquire
sbb
outsl
popf
mov
jle
or
dec
push
jb
sbb
movl
imul
enter
aad
or
popf
lret
push
xchg
enter
js
xchg
xor
mov
sbb
test
push
inc
xchg
cld
clc
rorl
adcl
dec
repz
lods
inc
adcb
jb
adc
sub
push
rcrb
pop
arpl
add
lods
lods
fiadds
push
sub
scas
ficoms
push
jne
movsb
insb
pop
or
mov
int
lods
ljmp
add
mov
push
add
mov
iret
syscall
adc
inc
jecxz
and
dec
das
xor
gs
pop
sub
ret
int
fwait
xor
mov
jnp
push
sub
xor
push
es
aas
pop
sub
jge
sbb
stos
push
mov
lods
iret
mov
int
andl
cltd
popf
and
imul
cmpsl
xor
rcrb
mov
iret
xor
negb
lret
jg
jg
mov
fstpl
dec
fcmovnb
dec
dec
cli
outsb
fnstcw
mov
fcmovnb
pop
mov
lret
jp
dec
das
xor
lret
cmp
sub
scas
std
mov
int3
jle
mov
jmp
cltd
movsb
cli
mov
std
mov
std
dec
pushf
rol
test
mov
cmp
push
cwtl
cmpsb
daa
stos
xchg
or
test
cli
pop
sbb
in
cmpb
inc
mov
insb
enter
arpl
icebp
pushf
push
mov
int3
iret
xchg
pusha
push
std
adc
and
aaa
in
or
jg
or
gs
inc
push
movsb
sbb
push
adc
dec
dec
cmpsb
jmp
mov
lret
mull
ret
jmp
in
xrelease
dec
jl
addr16
test
dec
pop
leave
mov
sub
add
mov
pushf
sti
sbb
mov
cmp
in
xchg
push
bound
xchg
sub
xor
mov
shrb
ret
iret
out
in
and
stos
cmpsb
xchg
imul
add
bound
adc
and
and
sbb
pop
add
in
and
negb
aad
jae
pop
and
pop
lds
flds
xor
in
push
push
pusha
imul
pop
jnp
push
das
pop
jl
fisttps
cli
jnp
stc
addr16
mov
add
inc
loope
cmpsb
test
jne
into
mov
and
or
pop
inc
inc
mov
dec
lea
mov
lcall
and
pop
cltd
push
out
add
jno
mov
scas
rorb
stc
ret
inc
add
pop
icebp
xor
mov
test
test
jmp
jo
es
les
or
mov
xor
or
push
in
dec
push
notb
dec
mov
push
gs
xchg
sub
out
adc
loop
imul
xchg
cmp
mov
jmp
sbb
fs
mov
fisubs
sbbb
jmp
push
cmp
add
adc
icebp
lahf
hlt
sbb
nop
cwtl
or
mov
outsl
mov
fsubrs
sbb
cmp
push
add
dec
sbb
dec
mov
lods
xchg
aas
out
ret
jne
lahf
outsb
or
push
or
inc
das
movsl
mov
adc
or
fucom
cli
leave
cmp
cmpsl
cmpsb
std
sahf
sbbl
cmp
mov
fsubrl
sub
inc
sbb
push
push
or
inc
xor
enter
sub
xor
scas
fldt
aas
jle
adc
jp
movsb
cwtl
pop
jb
jmp
pop
into
and
push
cmp
shr
lock
loope
mov
sub
pusha
ret
fwait
sahf
test
repnz
mov
lea
push
push
and
sbb
jo
andb
pop
push
inc
sbb
mov
adc
add
add
outsl
xor
add
cmp
jmp
mov
pop
mov
pop
ss
addr16
lcall
ss
out
pop
outsb
push
loopne
cmpsb
dec
add
mov
pop
sub
cmp
pop
or
xor
ds
xchg
pop
pop
ss
add
in
andb
ljmp
setae
mov
mov
jp
jmp
lods
loop,pn
shr
dec
xchg
xor
cli
xchg
mov
mov
inc
mov
testb
aam
jne
add
mov
dec
cwtl
int3
push
xchg
in
push
gs
fxch
and
test
mov
insl
sub
out
in
sbb
jb
testl
shll
sbb
sbb
loope
add
xchg
xchg
sbb
adc
inc
cmp
fnstcw
push
cmpsb
into
jnp
loop
sahf
call
enter
je
jg
std
adc
cmc
dec
sub
repnz
and
pop
adc
pop
mul
daa
movb
test
jmp
pop
pop
sbb
aad
xacquire
or
mov
add
movsl
in
or
push
cmc
lret
mov
ss
xchg
sti
data16
out
jo
add
dec
push
xor
nop
lock
and
lods
aad
xchg
addr16
xchg
or
outsb
arpl
adc
lcall
add
js
pop
jb
cld
pusha
xor
push
scas
cld
arpl
inc
cli
push
pop
xchg
stos
mov
jae
in
stc
adc
mov
or
cs
aas
jp
lret
sub
cltd
dec
mov
jne
dec
std
popf
xchg
or
inc
ljmp
andb
clc
pop
out
imul
ljmp
inc
adc
mov
cs
sbb
mov
cld
lahf
test
aad
adc
xchg
inc
pusha
xor
fidivs
inc
and
aaa
test
mov
lcall
repnz
adc
arpl
mov
data16
adc
jbe
mov
xor
adc
rcll
add
jno
sub
sub
sbb
pop
sbb
lcall
loop
mov
adc
mov
aam
add
mov
dec
dec
cmp
xlat
inc
mov
loope
inc
aas
sub
pop
push
mov
fmull
loopne
xor
jnp
and
and
jae
cli
repz
mov
mov
insb
test
push
xchg
mov
dec
sarl
filds
fabs
insb
pushf
mov
fcomp
icebp
mov
or
mov
add
push
call
sub
or
loop
lret
pop
shrd
mov
pop
cmp
imul
orb
dec
cmp
fcom
ss
push
inc
mov
insb
popa
shl
lahf
sub
inc
add
out
and
inc
sbb
or
or
add
mov
sahf
in
sti
jns
or
aas
mov
mov
dec
arpl
aad
jmp
aad
inc
clc
fwait
sbb
fisttps
inc
jge
loopne
sbb
dec
std
clc
out
adc
imul
jno
pop
mov
push
iret
cmp
lds
push
mov
adc
pop
aam
cmp
xchg
sbb
int
in
sarb
mov
push
push
jnp
or
fidivs
adc
dec
iret
mov
faddl
les
cltd
push
jns
lret
adc
pop
in
and
dec
adc
addl
cld
mov
xlat
cli
cmp
pop
push
mov
pop
add
inc
and
dec
jae
jle
andb
add
jae
iret
sub
xchg
or
cmp
iret
mov
shll
pop
mov
sub
cli
xchg
popl
lods
push
pop
mov
mov
mov
movsb
mov
jle
lret
add
shrb
aam
mov
dec
in
xchg
jb
in
ret
inc
mov
in
lock
xchg
mov
and
push
daa
push
pop
jae
ss
dec
mov
dec
shll
xchg
movsl
mov
add
push
jae
sub
sub
sbb
arpl
add
inc
lods
insl
nop
xor
pop
mov
mov
add
mov
inc
jmp
sti
jo
lret
and
data16
and
shll
xchg
push
mov
lcall
mov
sbb
xor
adcb
add
sbb
jno
or
pop
dec
sbb
mov
cli
bound
aaa
add
icebp
dec
int3
lcall
jnp
fsub
and
cmpsb
and
pop
inc
loope
sub
insl
and
mov
sti
adc
fsubr
push
les
add
mov
popf
das
outsb
pop
test
hlt
pop
loope
inc
in
mov
test
mov
add
icebp
pop
jb
inc
jl
cmpb
mov
fisubrl
inc
xor
dec
loop
ret
jb
jno
jno
push
mov
push
adc
xor
mov
js
push
std
shr
push
pop
push
subb
fisttpl
push
sub
cli
stos
loop
pop
push
repnz
xlat
xor
adcb
divb
push
mov
xchg
daa
xchg
ljmp
xor
fsts
rcr
pop
push
out
negb
and
stos
xor
into
cmp
and
aas
ret
cs
dec
lahf
cmp
mov
fldcw
pop
cmp
mov
pop
cmp
cli
push
xchg
mov
rorl
fdivl
cmp
sti
or
in
mov
pushf
push
jnp
pop
add
cmpb
cmp
aam
pop
sub
mov
cmpsb
push
xlat
xor
dec
jmp
rol
xchg
dec
mov
push
sbb
mov
or
cmp
pop
daa
ja
repz
xor
add
movsl
pmullw
testb
sub
cs
stos
pop
sbb
out
xchg
jge
mov
std
lock
xchg
nop
outsl
push
clc
mov
bound
icebp
sbbb
mov
fiadds
mov
adc
pop
sub
or
in
test
inc
inc
imul
sbb
sbb
push
mov
jg
and
subb
adc
fistl
movsb
or
in
subb
add
loopne
shll
imul
outsb
movsb
push
pop
xor
push
mov
mov
ds
mov
or
mov
xchg
jle
bound
sahf
lds
fbld
inc
cmp
pushf
mov
jle
shrb
andb
test
pop
sar
mov
dec
jge
movsb
mov
mov
sahf
mov
lret
ficomps
fiadds
dec
loopne
rcr
jnp
test
push
addr16
dec
and
mov
xlat
andb
outsb
xor
or
flds
in
jno
cmp
xor
in
es
pushf
call
mov
aad
cmp
lahf
stos
mov
inc
mov
xorb
inc
adc
or
mov
pop
pop
enter
adcl
out
cltd
test
in
lcall
sbb
jo
cs
xchg
sbb
dec
icebp
loope
add
lock
cmpsl
mov
test
adc
cmp
pop
iret
xchg
adc
stc
push
cmpsl
sbb
lock
cmp
mov
clc
mov
push
cmp
cld
fidivrl
xchg
outsl
pop
mov
mov
and
dec
xchg
xor
inc
mov
cmp
push
or
mov
cmp
jecxz
mov
xor
int3
xchg
push
xor
inc
jp
inc
jbe
jp
mov
js,pt
mov
pusha
leave
mov
or
clc
test
ja
cmpsl
mov
cmp
xchg
jo
into
xor
adc
mov
pusha
popa
mov
dec
pop
push
arpl
sbbl
stc
hlt
mov
aam
lcall
xchg
mov
fcompl
jecxz
test
arpl
jmp
scas
ss
addr16
jle
stos
cmp
dec
gs
dec
test
inc
test
push
xor
and
mov
cmp
jl
xor
sbb
outsb
or
dec
lds
push
test
inc
jae
loopne
leave
and
hlt
mov
mov
inc
pop
lahf
push
popa
outsl
arpl
mov
fxtract
xchg
xchg
mov
push
ds
push
and
xor
lahf
mov
add
ret
fiaddl
sub
jno
or
and
movsb
jl
cmpb
and
repz
add
aas
andl
or
in
lods
push
outsl
mov
sbbl
sahf
sub
push
add
mov
push
xor
jmp
push
mov
je
mov
lods
pushf
ljmp
hlt
inc
mov
mov
scas
andl
xchg
cmpsl
mull
mov
pop
dec
shrb
mov
and
cli
scas
ret
fisubrs
jo
jecxz
push
testl
mov
mov
repz
push
rclb
jns
sarl
lods
jb
mull
xchg
cmp
js
fadds
mov
inc
jo
pop
xor
cld
pop
mov
sahf
pusha
hlt
ficoms
pop
xlat
add
or
rcrb
mov
xchg
pop
leave
pop
movsl
js
loope
dec
incl
std
xor
lods
into
or
test
push
loop
cld
rorl
xchg
aaa
inc
and
in
inc
sub
or
std
dec
outsl
xor
test
aas
and
cmp
fidivs
repz
xor
movsl
push
adc
xchg
ds
mov
xchg
mov
push
movsl
xor
ljmp
cwtl
push
mul
sti
bound
aas
sbb
jg
jecxz
repz
mov
cmp
lock
and
or
lcall
jecxz
sub
sub
or
aas
in
mov
mov
ljmp
mov
mov
mov
aad
lds
or
lea
cwtl
mov
push
dec
dec
xor
sbb
dec
mov
aaa
sbb
sub
sub
fs
outsl
add
xor
mov
and
and
push
mov
add
and
inc
mov
mov
xchg
dec
fidivrl
ret
dec
iret
jnp
cltd
imul
lcall
stos
inc
out
push
mov
ds
pop
neg
push
or
js
dec
outsb
pop
enter
push
sbb
or
adc
jb
sub
dec
jnp
adc
fistl
xchg
bound
xchg
dec
cmp
aam
mov
push
aam
out
pop
jns
lret
sbb
or
int
les
sub
push
call
clc
loop
push
cmc
ret
fdiv
or
pusha
sbb
jne
inc
sbb
fucomi
jge
adc
or
insb
ds
sbb
dec
pop
push
jmp
and
and
jne
imul
sub
cmp
in
aam
daa
push
fnstsw
int
dec
mov
dec
xor
fadd
ds
add
mov
pop
or
lcall
mov
add
push
icebp
sahf
subl
loop
je
jl
push
or
jae,pn
jb
mov
jp
scas
popa
mov
out
cmp
popf
aam
call
int
lret
xchg
mov
hlt
mov
or
push
scas
or
cmpsl
sahf
daa
pop
push
ss
dec
rclb
sahf
mov
xor
lea
push
ds
mov
pop
sub
pop
xchg
or
xchg
call
adc
mov
add
and
xchg
mov
cmp
fistpl
rorb
mov
mov
adc
testl
jg
xchg
pop
xor
jnp
aaa
jno
daa
adc
mov
push
inc
lcall
dec
xchg
cltd
push
or
jmp
or
push
dec
xchg
add
sub
iret
jg
rcrl
xor
dec
aam
jg
out
add
sbb
xor
imul
jno
xor
xchg
push
sbb
pop
push
neg
into
push
bound
or
push
xor
jecxz
pop
loopne
jmp
mov
mov
inc
loope
xchg
mov
mov
dec
sahf
dec
test
inc
mov
cs
cli
xlat
testb
xor
rcrl
clc
ret
pop
or
mov
jae
mov
cmp
lret
lds
sbb
mov
xchg
mov
ret
inc
dec
ret
inc
xchg
xor
shrb
cmp
repz
or
pop
mov
fcomi
lahf
das
push
in
loopne
enter
or
mov
inc
rolb
mov
dec
sbb
cmpsb
add
adc
mov
jge
sbb
dec
lods
fstpt
add
jecxz
push
mov
sub
mov
test
pop
sbb
dec
imul
out
mov
mov
rol
insl
xchg
daa
das
in
adc
jb
mov
fs
push
jmp
mov
js
scas
adc
xchg
jne
mov
divb
xchg
data16
mov
jnp
outsl
add
data16
mov
cmp
sbb
dec
cwtl
fsubrs
or
lea
adc
xchg
fnstsw
sub
xchg
jp
mov
push
push
xor
lds
and
ljmp
and
inc
shrb
ret
cmp
or
adc
cmp
jle
jge
lcall
sbb
cmpsl
xchg
push
jmp
in
sti
hlt
sbb
or
mov
mov
aas
adc
aas
jl
sub
aad
not
jb
mov
outsl
rcrl
inc
hlt
fld
pop
ret
shll
imul
pop
subb
xchg
xchg
adc
sbb
mov
add
sahf
push
stos
sahf
scas
or
mov
dec
sub
sub
mov
lock
mov
cs
sbb
mov
mov
sbb
or
out
jns
repnz
jg
lret
inc
pop
dec
dec
and
loope
jo
or
ja
ss
repz
js
mov
push
jl
cmpsl
xchg
inc
unpckhps
aam
mov
push
xchg
fidivl
clc
inc
cmpsb
aas
mov
imul
jge
into
int3
lock
adc
cs
push
bound
inc
inc
test
outsl
lods
xor
mov
mov
push
dec
cwtl
mov
loop
mov
mov
dec
fildl
in
cmp
or
add
sub
fwait
mov
ja
bound
inc
subl
aad
xchg
adc
mov
int
fdiv
jge
sbb
or
pop
pop
test
mov
mov
inc
fsubrs
adc
inc
out
xlat
out
mov
sbb
mov
jo
ja
xchg
cmp
dec
dec
cmp
orl
jge
mov
sub
fidivs
jl
outsb
das
dec
dec
arpl
ds
jne
jne
loope
jg
pushf
pusha
mov
add
lahf
out
jg
jp
in
pop
cs
xor
xlat
and
mov
ret
daa
outsl
repz
xor
test
inc
pop
xor
xor
mov
mov
xlat
mov
add
and
jg
insb
lods
jecxz
lock
sti
shll
pop
or
enter
and
and
jno
xor
adc
cwtl
iret
dec
pop
jb
es
mov
pop
cli
adcb
push
inc
inc
and
jo
sub
stos
sub
xor
ja
push
shll
mov
sub
pusha
popf
jnp
fdivl
shll
and
cmpsl
adc
mov
sarb
jnp
xchg
adc
ljmp
popa
xchg
pop
rorb
push
test
and
push
jae
jbe
cmp
andl
in
mov
adc
mov
and
clc
xor
in
sub
in
ds
mov
in
loope
xchg
mov
ret
xor
aas
dec
nop
sahf
cli
out
hlt
xchg
aad
int3
fmulp
into
pushf
je
je
adc
out
jge
fistpl
add
sbb
pop
jge
cmp
adc
mov
repnz
cmp
repnz
roll
jbe
pop
jg
push
movsb
xchg
push
or
add
or
dec
je
sbb
jg
test
mov
xor
jae
sbb
rolb
fnstcw
add
xor
or
push
sub
idivl
push
lret
xlat
test
pushf
or
pop
dec
cmpsl
test
divb
mov
pop
pusha
sub
and
inc
sbb
inc
outsb
insl
sbb
lret
out
and
mov
mov
movsl
pop
and
cs
cmc
insl
insb
stc
jnp
into
call
test
cwtl
ret
mov
insl
dec
jmp
sti
dec
ljmp
push
dec
mov
mov
push
in
sahf
mov
dec
xchg
pop
dec
idivb
loopne
out
xor
adc
stos
mov
fcompl
jae
xchg
mov
stos
and
xchg
test
shrb
mov
mov
inc
out
jbe
repz
outsb
xchg
lahf
jne
mov
loope
sub
sbb
push
je
and
lahf
aas
lahf
in
daa
in
cmpl
push
push
pop
imull
scas
je
cmpsl
das
adc
jo
call
inc
add
mov
call
out
je,pn
imul
cmp
dec
stos
or
or
or
fsubrl
dec
xchg
in
ret
arpl
rcr
mov
dec
icebp
fwait
push
aad
stc
push
xchg
adc
lahf
lock
js
xchg
mov
mov
shl
add
lret
mov
and
stc
shlb
pop
xor
pushf
mov
adc
clc
movsb
in
cmp
cmpsl
fiadds
mov
xchg
cmp
das
fdivrs
dec
or
or
fwait
cltd
jns
test
mov
call
push
pop
cmp
mov
mov
mov
mov
dec
and
std
adc
jns
shll
call
lret
xchg
out
sub
aad
jecxz
push
fadds
leave
shl
cld
testb
mov
repz
mov
ja
aas
mov
sub
out
repz
sub
pop
adc
popa
imul
popa
shll
xor
mov
movl
add
out
and
cmpsl
xchg
jp
outsl
lods
imul
ss
and
lcall
xlat
push
popf
movsl
out
mov
sbbb
fdivrs
aaa
push
dec
xor
xorb
push
xchg
aam
pusha
jp
push
adc
das
jecxz
dec
outsl
push
ret
jp
repnz
ret
or
sti
lret
lea
add
movsl
std
cmpsl
das
push
jae
push
clc
pop
xor
jns
xchg
cs
hlt
mov
popl
mov
inc
sqrtps
inc
int
mov
and
repnz
pop
call
dec
scas
loopne
adc
scas
pusha
adc
xchg
dec
push
and
mov
cmp
lea
lds
movsl
mov
cmc
rorl
push
fisubrl
xchg
mov
jl
jg
push
mov
and
mov
mov
jecxz
push
push
in
rorb
adc
mov
mov
add
push
ficoms
and
out
push
clc
add
mov
mov
loop
notl
push
pop
inc
ret
nop
leave
stc
and
and
fs
adc
dec
jbe
and
sub
push
inc
pop
js
jne
adcb
aad
push
cmp
xchg
xchg
xlat
sub
xchg
arpl
sub
jle
mov
push
mov
adc
cmpsb
pop
add
xor
or
mov
mov
sbb
aas
pop
jno
jne
mov
nop
dec
popa
hlt
xchg
pop
push
jecxz
pop
scas
ljmp
add
stc
into
daa
jbe
ds
rol
fwait
scas
add
aam
cmc
std
bound
clc
and
movsl
adc
lahf
jge
inc
jp
aaa
cmp
jl
arpl
arpl
aaa
jae
push
fdivrl
loope
leave
push
jne
ds
push
sub
insb
mov
adc
int
cmp
rolb
jle
mov
mov
fnstcw
stos
xor
orb
pushf
nop
push
repnz
dec
fdivrl
shl
mov
mov
push
daa
or
pop
inc
and
push
adc
aad
aas
push
loop
sbb
mov
shrl
or
inc
push
push
mov
pop
repnz
pop
adcb
mov
out
xor
xchg
dec
in
test
fists
mov
push
push
inc
xchg
cld
lret
xlat
scas
xor
out
imul
cld
test
mov
in
xchg
jno
push
inc
fildll
sbb
mov
sub
leave
push
shl
xchg
sbb
jge
scas
cmc
add
int
mov
dec
js
xchg
xchg
movsl
rolb
popf
push
inc
inc
push
lahf
mov
aad
jb
pop
imul
jmp
out
mov
idivl
adcl
jg
or
jb
nop
mov
sbb
add
push
jge
or
mov
xchg
imul
xchg
jnp
mov
xor
mov
and
rcrl
push
sub
pusha
xchg
xchg
rclb
sbb
sar
mov
bound
cmpsl
fildl
fdivrp
fcomp
fisubrs
xchg
xchg
int3
cmp
repnz
jns
xchg
xchg
or
rolb
pusha
push
or
bound
pop
mov
xor
test
jno
jmp
in
sub
jecxz
daa
test
push
jmp
in
pop
push
stos
ret
mov
stos
ds
stos
push
jmp
and
loopne
inc
push
imul
out
aas
dec
ss
pushf
aas
inc
out
enter
adc
lahf
cltd
push
js
pushf
repnz
or
insb
cld
jle
cmp
mov
out
jmp
pop
xor
aad
dec
pop
testl
adc
pop
loopne
push
int3
sbb
mov
jbe
out
jge
jle
movsl
in
cmp
int3
adc
pop
mov
in
adc
aad
fistpll
mov
mov
add
mov
add
mov
icebp
mov
dec
js
out
sub
lock
rcrl
cmp
push
sbb
sub
push
insl
shll
mov
mov
mov
push
repnz
inc
in
fmull
mov
fstps
jno
dec
sub
mov
es
pop
pop
xlat
rcrl
push
sub
jbe
imull
dec
mov
inc
inc
push
outsl
imul
xchg
js
hlt
sub
movsb
sbb
test
mov
and
cmp
lcall
mov
fwait
ja
push
out
mov
or
inc
fidivs
and
mov
mov
or
mov
add
cmc
xchg
mov
xor
jge
pop
push
shll
mov
cs
jno
outsb
adc
mov
or
adc
call
mov
in
jecxz
scas
je
push
clc
outsl
popf
outsb
sbb
lret
sub
cltd
mov
inc
mov
out
add
mov
inc
hlt
mov
test
sarl
cmpsb
mov
sti
xchg
mov
mov
fisubs
mov
shl
cmpsb
jecxz
add
jge
or
stc
add
mov
fdivr
mov
and
sub
or
dec
xor
push
xor
jae
sbb
xor
loop
nop
sub
cmp
mov
mov
fucomip
mov
pop
adc
xchg
sub
or
pop
enter
fisttpll
sbbl
in
pop
jns
test
mov
push
xor
jmp
jp
out
imul
pop
insb
fisttps
sbb
push
popl
mov
lcall
jne
test
push
or
movsl
jbe
push
add
andl
xchg
jmp
mov
clc
nop
adc
cmpsl
jmp
or
or
jmp
push
cli
ret
xchg
mov
in
cld
std
xchg
dec
loope
lea
xor
xor
xchg
jmp
lret
aad
std
jge
lcall
mov
mov
mov
mov
push
adc
push
bound
or
mov
pop
mov
xor
dec
sti
dec
and
push
xor
aam
je
nop
mov
es
lcall
and
push
jae
and
inc
lods
fwait
push
xchg
sahf
ljmp
pusha
cmp
lods
or
dec
shrl
push
and
lret
out
or
xlat
fwait
pop
xchg
outsb
nop
push
daa
dec
pushf
in
or
insb
lcall
call
pop
mulps
ds
mov
jp
pop
aaa
cmpsl
inc
push
test
sub
repz
test
inc
test
decl
scas
lock
testl
dec
dec
pop
repnz
out
inc
inc
imul
push
pop
scas
fnsave
xchg
adc
and
push
sbbb
daa
roll
add
mov
xlat
pop
xor
cld
xchg
mov
stos
mov
jno
push
cs
adc
adc
fistpl
xchg
repnz
js
xchg
in
mov
imulb
dec
mov
mov
cmp
sti
xchg
jmp
and
sbb
mov
push
fdivrp
out
dec
fwait
iret
mov
pop
jne
fdivrl
iret
inc
test
pop
jmp
mov
ljmp
pop
jne
and
std
mov
cs
cld
rolb
rorb
add
fxch
add
cmp
xor
sbb
daa
cmp
mov
stos
fildll
fwait
jl
sbb
movsl
pop
dec
cmp
ja
mov
movsb
and
repnz
cmpb
mov
dec
mov
stos
fisubrs
ds
or
xor
jb
sarb
pop
sbb
push
sub
gs
push
dec
push
iret
push
push
push
jb
cmovl
fsubrs
pop
cmp
bound
dec
xchg
dec
dec
sub
jle
std
scas
dec
mov
test
ja
stos
mov
fwait
bound
mov
andb
push
push
mov
or
xchg
or
es
lahf
xchg
aas
imul
sahf
or
cs
jns
scas
lods
xchg
xchg
repz
pop
jle
in
cli
pop
js
aas
dec
lods
orb
sahf
cmpsl
add
stc
cmpsl
jle
mov
push
push
or
hlt
out
push
or
sub
mov
mov
shrl
scas
lods
rol
adc
es
mov
inc
mov
popf
into
push
mov
inc
data16
shrl
cmp
sub
lea
xchg
mov
pushf
ljmp
cld
ja
mov
mov
test
and
and
adc
pusha
orb
shll
add
int3
push
xor
filds
cli
or
adc
std
shlb
inc
std
jno
pop
out
popa
sbb
es
dec
dec
nop
scas
mov
dec
loope
cli
inc
dec
cltd
cld
mov
fisubl
enter
pop
xchg
dec
lock
jbe
xchg
lds
jmp
or
test
aaa
inc
fs
pop
xchg
add
sbb
mov
xchg
mov
inc
cmp
push
scas
or
test
mov
or
or
cltd
cmc
stos
clc
mov
cmp
sub
roll
clc
hlt
cwtl
lret
add
int
push
rorl
push
test
jge
popa
ljmp
ljmp
sbb
repnz
pusha
das
lods
idiv
and
out
out
push
jmp
in
pop
in
pop
ljmp
andl
insb
mov
enterw
int3
dec
pop
iret
ljmp
in
ret
mov
incb
adc
dec
ss
xchg
push
mov
pusha
fcomps
pushf
xchg
mov
shrb
sbb
fwait
mov
mov
adc
sub
jg
fidivrs
daa
movsl
repnz
cmp
mov
or
fisubs
test
adcb
les
add
subl
mov
cltd
adc
in
hlt
mov
out
or
xor
xor
mov
or
ss
stos
lock
mov
ja
dec
mov
jl
in
inc
dec
xor
lret
movsb
outsl
shlb
jp
mov
mov
cmpsb
fwait
dec
adc
add
push
lods
or
dec
cmp
inc
cmp
xchg
jl
pop
data16
jae
movsb
es
aaa
adc
stc
arpl
add
mov
idivl
jecxz
jg
push
mov
inc
daa
call
mov
in
test
fst
pusha
mov
aaa
mov
mov
pop
in
push
add
adc
test
dec
cmp
stc
mov
inc
loopne
dec
test
xchg
stc
dec
shlb
je
fwait
xchg
dec
push
xor
cmp
or
popf
sub
dec
xor
in
mov
call
jb
pop
mov
sub
rolb
pop
mulps
and
es
push
stc
xlat
sti
adc
addb
repnz
jmp
ljmp
cmpsl
mov
mov
dec
mov
or
enter
pop
in
shrl
xor
fistpll
sbb
inc
add
add
adc
and
or
pop
in
mov
mov
or
lds
xchg
ja
dec
rclb
jecxz
push
bswap
push
lahf
add
aam
mov
or
into
arpl
outsb
fwait
push
jg
lea
dec
adc
int
popa
xor
mov
mov
and
ud1
mov
in
movsb
ss
addr16
jb
mov
inc
inc
int3
stc
ds
dec
push
add
aas
insl
xor
andl
cmp
mov
enter
mov
jno
lahf
sahf
lea
hlt
inc
xlat
jle
push
call
fistl
jae
addr16
and
inc
das
push
adc
xor
dec
cmc
hlt
dec
test
popa
fadds
outsb
sahf
cmp
repz
hlt
adcb
dec
pop
jge
int3
dec
pop
fcoml
movsl
scas
out
pushf
setnp
gs
push
or
push
fnstenv
mov
jl
lcall
fcoml
pop
xor
xor
out
imul
sti
mov
lahf
sub
jmp
pop
stos
add
xlat
cwtl
pop
lods
xchg
popa
ret
test
adc
inc
add
je
fidivl
mov
test
loop
loope
cli
sub
mulb
and
mov
sub
push
mov
push
hlt
push
jns
and
add
lds
fidivrs
bound
add
mov
shrl
push
mov
ret
cmp
mov
jle
std
js
lock
cld
outsb
imul
into
mov
push
lret
push
mov
adc
ss
orl
jle
ret
mov
stos
mov
in
push
dec
jg
in
ljmp
xor
popf
and
or
lret
lcall
frstor
or
lahf
es
cmpb
ss
rorl
pop
jmp
push
xor
sbb
add
mov
sbb
inc
mov
gs
aaa
cmpsl
jge,pt
icebp
ljmp
mov
push
adc
lds
mov
incl
or
ljmp
push
aam
sbb
lods
andl
ss
push
and
stos
fwait
add
adc
aam
lahf
sbb
push
cmp
fadds
test
jne
test
mov
inc
in
mov
sbb
cmpsb
in
enter
xor
ret
divb
add
jge
ss
rorb
movsl
test
jno
pushf
push
repnz
sub
mov
dec
test
inc
out
adc
or
push
dec
fdivl
mov
inc
mov
mov
or
xor
cli
push
rorl
mov
stos
in
pop
ja
pmaxsw
imul
dec
cwtl
adc
imul
mov
out
jae
xor
inc
mov
outsb
mov
lea
in
rcll
add
jo
out
xchg
pop
push
lock
mov
fdivrs
fisubrl
mov
sbb
lret
push
test
pop
pushf
mov
ss
inc
ja
bound
inc
ljmp
fdiv
imul
xor
loope
popa
pushf
idivl
movsl
or
mov
fwait
je,pn
lds
in
push
or
jmp
in
pusha
jbe
push
aaa
shl
and
jl
mov
jp
pop
scas
dec
jmp
ret
ljmp
das
xchg
pop
stos
lods
test
dec
js
testl
nop
fildll
and
ret
pop
sub
incl
cmp
movsb
sub
cmp
lods
sbb
sar
je
and
cmpl
jno
sbb
and
fidivs
ss
aaa
mov
adc
mov
sbb
jno
out
ja
xor
add
sub
stos
fsubs
in
das
jb
pop
loope
outsb
mov
jge
leave
mov
js
test
mov
in
outsl
leave
insb
ret
rol
mov
push
repz
arpl
sub
aam
mov
sub
dec
dec
mov
rcll
fisttpl
adc
rclb
fcomps
sbb
dec
ror
ja
mov
jne
arpl
mov
and
test
decl
cs
push
repnz
mov
pop
mov
add
add
cli
lahf
pop
or
lock
in
lods
cmpsl
sbb
xchg
cmp
adc
fnstenv
push
test
push
jge
es
adc
cmp
adc
dec
inc
aas
jno
orl
in
ss
mov
adc
push
pop
in
jp
mov
push
mov
in
ss
xor
addr16
sti
lods
test
jbe
sub
pusha
or
fs
fimull
test
xor
and
jno
idiv
mulb
rcl
pop
adc
in
inc
scas
and
dec
pop
and
insl
dec
arpl
leave
cltd
int
popa
dec
fcomps
test
dec
scas
sbb
cmp
outsl
cmp
dec
cli
or
in
adc
inc
roll
stos
lea
test
push
mov
in
cmp
das
je
mov
les
mov
mov
je
jg
jo
inc
arpl
xchg
test
cmp
mov
xchg
mov
push
lret
imul
repnz
daa
push
mov
push
mov
sbb
push
push
sbbl
iret
adcb
jmp
cmp
inc
out
push
shrl
lock
aas
push
push
inc
mov
mov
ret
int3
jb
xchg
xchg
repnz
enter
lods
leave
je
aad
lods
addr16
fcomp
push
or
adc
sarb
shrl
mov
mov
jge
jmp
sub
inc
push
mov
push
push
cmp
push
stos
adcb
sbb
push
add
subb
aam
add
int
mov
push
sti
push
xchg
clc
fisubrs
jbe
sbb
xchg
add
call
xchg
xor
xor
push
daa
movsb
mov
mov
inc
sahf
fnstenv
popa
aas
and
mov
je
js
add
inc
fxam
jmp
orl
dec
into
inc
sub
dec
xor
imul
mov
mov
sar
imul
and
sbb
sbb
pop
inc
mov
insb
movsl
xchg
cltd
test
push
loope
fildl
mov
bound
adc
xchg
or
pop
cs
adc
and
or
aaa
stc
inc
cli
pop
mov
push
call
mov
std
mov
sub
jns
xchg
ret
jnp
frstor
cs
jge
jp
jg
xchg
adc
subb
jnp
xor
arpl
xchg
xor
ljmp
dec
mov
les
mov
sbb
pop
push
stc
or
ds
xorb
mov
and
jo
fcoms
inc
jo
mov
xchg
aaa
dec
mov
mov
mov
movsb
xchg
call
int
pop
mov
orb
push
dec
xchg
adc
roll
jns
push
cs
addr16
jae
mov
in
test
cmp
jb
popf
enter
sub
lods
data16
shl
fs
sbb
lock
ljmp
cmp
dec
pop
mov
out
popa
jg
cmp
cmp
push
mov
dec
and
pop
add
jge
add
inc
aad
ds
stos
xlat
mov
sbb
cltd
ljmp
ficomps
cmc
sub
test
ljmp
mov
push
inc
shrb
fcomps
adc
mov
insb
mov
jmp
mov
fs
sub
icebp
and
pushf
cmpsb
mov
lock
mov
jmp
mov
fistpll
pushf
or
lods
es
out
out
sti
and
adc
jbe
call
orb
and
adc
sbb
adc
sbb
push
in
sbb
sbb
mov
clc
gs
enter
xor
dec
mov
into
cli
loopne
ret
pop
xchg
xchg
mov
xor
rorb
pop
xorl
icebp
mov
in
ret
dec
jne
fdivp
pop
test
stos
stos
cld
test
or
cmp
dec
pop
ret
punpckldq
std
mov
and
cmp
cmpsl
sub
ret
push
iret
pop
xchg
jne
data16
xchg
cmpsb
lret
jno
mov
outsl
jbe
jl
cmpsb
fwait
sbbb
sub
adc
xorl
sbb
ror
ret
dec
pop
lods
xor
jbe
jns
and
int3
dec
pop
inc
sbb
loop
jns
mov
mov
cmpsb
mov
jb
and
mov
adc
pop
test
enter
pop
outsb
add
adcb
cmc
mov
adcb
xchg
loope
insw
test
mov
or
push
out
sarb
movsl
add
dec
ret
cmovs
and
arpl
pop
hlt
inc
mov
ds
fisttps
int
push
xor
scas
scas
psrld
xchg
xchg
or
in
stos
pop
xor
mov
or
repnz
inc
push
sbb
pop
out
cmpsb
push
inc
pushf
out
push
xchg
push
sbb
add
xchg
xor
ja
cmc
aaa
mov
and
popl
jae
push
mov
jae
add
xchg
sbb
jg
cli
sbb
mov
iret
mov
add
mov
imul
or
ljmp
push
xchg
notb
fsubs
jns
stos
and
xchg
jp
cli
mov
repnz
mov
sahf
sub
jl
sub
imul
push
xchg
xor
cmpsl
push
shufps
out
pop
idivl
dec
and
rcrb
mov
dec
movsb
mov
jns
fwait
js
push
es
ljmp
cwtl
cld
xchg
xchg
loopne
test
cmp
and
movsl
lock
les
mov
subb
scas
in
shl
lea
mov
fadd
cmpsb
test
rorb
pushf
jmp
cmpsl
add
xchg
fidivl
xchg
lea
inc
push
data16
adc
xchg
insl
cmp
and
push
add
cmp
movsb
jge
push
hlt
pop
mov
adc
dec
sub
out
aad
pop
int3
icebp
mov
dec
mov
sbb
and
sbb
sahf
sbb
inc
xchg
popf
cmp
icebp
imul
cwtl
lock
pop
push
jl
push
inc
or
orb
dec
push
adc
mov
lock
xchg
mov
cltd
sbb
adc
cs
inc
mov
rorl
iretw
lds
inc
dec
mov
lods
in
pop
or
mov
or
nop
add
xchg
adc
aad
stc
mov
push
add
ds
cmpsb
xlat
adc
sbb
mov
push
roll
cmp
adc
pop
ljmp
call
lea
ljmp
and
push
inc
hlt
fisubrs
mov
inc
mov
dec
scas
cmp
cli
pop
xchg
inc
adc
pop
push
aad
nop
dec
movsb
jno
cltd
lret
outsb
inc
mull
and
xchg
push
call
jmp
in
loope
mov
jecxz
push
dec
rcrb
dec
fs
arpl
fistps
mov
push
jb
rcll
dec
jb
test
cli
rorl
sahf
fiaddl
cmc
jo
mov
mov
xor
sub
sbb
jmp
int
mov
in
idivl
xor
in
ljmp
out
shrb
sub
and
les
or
js
aaa
or
xchg
stos
cmp
movsb
in
cmpb
mov
icebp
negb
mov
cld
pop
push
sbb
ret
rolb
int
add
movsb
rcrb
cmc
push
pop
cld
sarl
add
mov
mov
in
cmp
mov
xchg
cli
sbb
int
lcall
add
mov
andl
xchg
xchg
inc
shll
or
jo
adc
adc
cmp
mov
push
mov
mov
or
nop
in
adc
add
stc
mov
stos
cmc
sti
pop
add
insb
iret
xchg
dec
jmp
incl
xchg
std
adc
outsl
mov
jl
aad
pop
rorb
add
mov
pop
mov
lock
out
or
push
sbb
movsl
jmp
sub
adc
sub
sbb
pop
sbb
fwait
subb
ljmp
cmp
cmpsb
std
fs
pop
negl
adc
sti
push
repz
mov
lahf
cmp
inc
push
dec
sbb
jno
cmpsb
mov
imul
rol
in
adc
xor
shrl
dec
cmp
push
jge
fsubl
addr16
out
sbb
das
popa
les
push
pop
add
loop
cmp
std
or
lods
xor
popa
and
or
int
punpckldq
or
add
inc
idivb
cli
movsl
jp
mov
test
leave
cwtl
xlat
lret
mov
cmp
xchg
jb
clc
jb
and
stos
fwait
popf
sub
mov
add
pop
popf
jne
cli
test
cltd
mov
icebp
mov
daa
dec
mov
mov
dec
cmp
mov
dec
mov
js
adc
xor
int3
and
or
sbb
mov
pop
jne
and
xchg
aad
push
sub
pop
data16
xchg
outsb
ja
pop
adc
and
mov
push
dec
into
les
xor
mov
cmp
mov
stos
bound
push
and
lret
xlat
pop
stos
les
push
jmp
mov
cs
es
ret
bndldx
int3
sti
je
dec
in
mov
push
lret
gs
shlb
xor
dec
or
mov
addr16
mov
lods
scas
sahf
push
pop
cmp
mov
sub
inc
jg
addb
mov
sbbl
push
pop
aaa
mov
sub
lcall
sub
loop
dec
jmp
sbb
shlb
iret
inc
pop
xor
pop
add
push
mov
ljmp
cmp
rolb
lock
aas
scas
inc
inc
and
mov
add
mov
and
jl
mov
addr16
mov
hlt
adc
hlt
adc
add
fcompl
xor
lock
lcall
lcall
push
or
push
push
sahf
fsubrs
out
push
xchg
xchg
lcall
stos
in
jmp
inc
dec
and
testl
cmp
add
mov
mov
mov
je
fwait
decl
sbb
sbb
jg
pushf
fisttps
jle
sbb
inc
sbb
xchg
and
mov
mov
out
out
cmp
or
rcrl
push
cmc
jge
dec
push
sbb
cmpsl
xchg
test
push
mov
mov
call
aad
movsb
flds
lret
push
in
call
es
sub
fadd
xchg
jo
push
fsubrs
adc
sbb
lret
pop
or
or
lret
dec
push
in
sti
fsts
fidivrs
into
outsl
scas
xchg
mov
test
inc
push
stc
pop
outsl
mov
dec
lret
mov
daa
loope
jns
testl
data16
xchg
mov
add
push
lods
mov
int
sbb
xchg
lahf
sarb
and
shl
fsubrp
loop
and
push
sub
cld
adc
add
cmp
aam
mov
and
xchg
mov
add
dec
ja
lods
inc
orb
pushf
jb
stos
xor
stos
jecxz
push
mov
inc
pop
dec
sbb
popa
or
jae
push
add
bswap
nop
sbb
sbb
je
adcb
inc
cwtl
je
inc
push
hlt
cmp
jae
xchg
stos
test
push
xor
out
pop
xor
outsl
push
sub
inc
je
push
cltd
sbb
fsubrs
inc
inc
mov
roll
mov
rol
mov
sbb
lahf
cwtl
push
or
jae
cs
push
or
out
pusha
nop
rcll
jnp
push
add
sbb
fsubr
inc
fidivs
mov
mov
pop
and
adc
adc
add
divl
adc
fidivrl
mov
dec
outsb
fidivs
call
mov
pop
mov
push
daa
iret
sub
cltd
out
adc
adc
sub
mov
cs
js
mov
and
outsl
pmaddwd
wbinvd
and
sub
mov
and
jns
mov
sub
or
jle
decl
mov
inc
push
xchg
imul
pop
sti
cmp
repz
popa
mov
gs
mov
insl
mov
addr16
cmp
jae
inc
fs
add
into
shr
push
and
int3
sbb
mov
sbbb
xor
nop
dec
pop
aas
xchg
pusha
lods
xor
arpl
xchg
mov
lods
jmp
fsubl
out
js
mov
andb
push
or
mov
push
xorb
sub
lock
dec
popl
push
das
das
or
mov
shrb
dec
sub
jl
jge
shl
aad
jns
add
jnp
stos
ret
clc
or
pop
pop
stos
sbb
inc
mov
dec
lods
daa
mov
inc
push
test
push
cmp
inc
jbe
hlt
in
cmpsb
fdivrl
dec
test
les
xor
xlat
pop
loope
pop
sbb
lcall
test
xor
xchg
xchg
pop
mov
shrb
add
dec
mov
jbe
lods
mov
pop
cmp
or
add
leave
add
neg
jmp
mov
or
in
and
adc
ror
cli
and
jb
das
or
xchg
pop
add
cld
lret
xchg
cmpsl
pop
in
mov
in
aaa
jb
dec
pop
mov
stc
sbb
lret
mov
int
pop
mov
cmp
rclb
jecxz
adc
inc
jmp
jnp
add
bound
mov
pop
jnp
aas
jne
aam
push
sbb
sar
and
out
in
xchg
stos
push
add
pushf
jo
pusha
fwait
and
ljmp
jnp
jmp
sbb
mov
inc
mov
movsl
fistl
mov
testl
dec
scas
sub
repnz
scas
in
int3
aas
shll
outsl
mov
nop
or
mov
stos
xor
mov
decl
fistps
cmp
in
push
outsl
add
pop
jae
ret
fidivrs
iret
sahf
jne
xchg
and
aas
mov
inc
call
fbld
adc
stos
mov
xor
inc
mov
cli
jne
hlt
or
test
add
jno
imul
rolb
pop
pop
xchg
out
adc
imul
pop
fucomi
clc
xchg
lock
sbb
cmp
rorl
push
or
mov
sub
sub
add
mov
inc
lods
fsubr
bound
pop
or
sub
mov
test
stos
add
xor
or
pop
bound
dec
dec
sbb
movsb
fdiv
repnz
mov
je
test
outsb
out
xor
les
fisttpll
jnp
adc
inc
pop
mov
hlt
ret
mov
rolb
cmp
push
std
push
dec
scas
stos
fs
mov
imulb
adc
jge
pop
mov
lock
cmp
test
cmpb
sub
int3
lret
cwtl
into
insl
fisttpll
lock
cmp
pop
adc
insl
int
push
test
pop
je
mov
mov
cmpsb
mov
add
es
int
push
jnp
call
aas
out
into
push
insl
hlt
lock
jb
nop
test
or
xor
mov
fdivl
arpl
cmp
les
cmpsl
rcrb
jl
shrl
mov
mov
cmp
add
das
mov
pop
stc
add
xorb
enter
lods
es
xor
jmp
xchg
or
dec
les
cld
mov
jb
jo
icebp
cs
xor
cmp
insl
push
loope
xor
pop
fsubs
pop
insb
jno
nop
addl
test
pop
bound
and
mov
add
pop
loop
mov
jno
iret
cld
xchg
loop
pop
mov
pop
jnp
movsl
fbld
ret
addr16
jecxz
repnz
jae
into
pop
or
and
mov
dec
aam
leave
push
pushf
xlat
inc
jbe
and
loopne
gs
push
or
shll
imul
mov
scas
cli
mov
cmp
and
inc
jp
shlb
jbe
cmp
push
ljmp
pusha
ja
js
or
jecxz
insl
arpl
data16
fcoms
fldcw
or
push
pop
sub
xchg
mov
pop
loopne
cmp
push
or
or
in
and
ljmp
jg
ret
hlt
loop
aad
xorl
sbb
icebp
and
insb
stos
dec
in
mov
mov
mov
dec
je
insb
cmp
mov
out
cmpsl
dec
ss
fcmovb
pop
push
lcall
sub
cli
pop
lods
std
sbb
xlat
push
lcall
mov
scas
inc
push
jecxz
jae
dec
push
je
cmpsb
aam
jnp
pushf
pop
repnz
hlt
jmp
scas
add
dec
jmp
add
jae
mov
shlb
movsl
dec
outsl
imul
dec
push
subl
ja
jbe
ret
fiadds
cmp
dec
and
jb
push
aam
mov
mov
push
fldt
push
test
in
lahf
popa
pop
add
xlat
ficoml
lahf
cs
mov
pop
out
sbb
addr16
adc
push
stos
js
and
imul
push
sahf
push
hlt
fisubrs
fsubrp
lret
mov
nop
les
movsl
add
cs
mov
xchg
mov
lahf
pop
scas
jle
push
aaa
je
and
adc
or
repz
sub
and
sub
sub
mov
cmp
add
fisubrs
ja
mov
rcr
cmp
adc
xor
jnp
jne
rolb
data16
movl
ret
jle
xor
lea
add
and
inc
fadds
xchg
mov
imul
aam
mov
sbb
mov
test
dec
or
cmp
aaa
out
lods
pop
lcall
test
scas
fldl
cmp
call
inc
push
cmpsl
and
push
sub
jge
js
jb
and
sbb
mov
ljmp
cltd
ja
out
hlt
or
outsb
hlt
es
or
dec
cli
jb
stos
dec
adcb
out
fwait
ja
gs
dec
add
lret
sar
cli
pop
out
mov
xchg
mov
pop
pop
stc
cmp
scas
cmp
test
pop
push
mov
mov
call
std
inc
or
mov
xor
negb
mov
test
mov
push
stc
mov
jecxz
inc
fstpl
adcb
sub
push
aad
test
arpl
js
push
pop
jmp
lret
and
fisttps
frstor
dec
and
sbb
mov
jl
dec
xchg
je
pop
push
or
push
sub
pop
movsb
aas
shlb
push
in
sub
in
mov
mov
add
repnz
das
xor
and
pushf
mov
pusha
dec
imul
insb
std
sbb
jno
cmp
xor
mov
arpl
neg
daa
scas
xchg
xchg
sbb
lods
enter
lret
cmpsl
mov
fstps
push
push
lahf
mov
mov
jmp
pop
mov
hlt
push
imul
lods
mov
int3
outsl
mov
hlt
sub
fsubrs
or
nop
jle
cmpb
sarl
call
in
cmpsl
lods
movsb
push
and
add
js
cmp
sarb
xchg
leave
inc
mov
sarb
lret
fstl
pop
int3
gs
nop
daa
push
and
mov
fistl
lcall
push
aaa
js
loope
sahf
inc
push
jmp
sub
mov
in
popf
add
inc
rorb
xrelease
mov
or
lcall
pushl
push
xchg
or
mov
dec
and
mov
stos
dec
pop
adc
test
addr16
jno
jo
mov
daa
sub
imul
gs
mov
inc
mov
sbb
pop
sbb
xchg
imul
cmc
jmp
fdivrs
pop
jp
and
out
nop
jl
pushf
repnz
aaa
jbe
stos
stos
in
sub
add
addl
xchg
sbb
ja
jno
ja
loop
inc
cs
fstl
loopne
xchg
popf
pop
lret
mov
mov
in
sti
test
sar
fcmovnb
fidivrs
cmp
or
add
imul
scas
dec
push
test
repnz
ljmp
in
stc
mov
lods
inc
xchg
xor
stos
scas
sbb
push
lcall
clc
decb
lahf
fcmove
cmp
insb
or
js
jns
jbe
enter
inc
lds
jmp
cmpsb
xchg
mov
mov
push
inc
int3
test
dec
mov
stos
aad
mov
addl
mov
or
and
or
jmp
mov
inc
push
in
and
mov
imul
sbb
mov
mov
mov
or
daa
mov
xor
mov
mov
mov
lods
mov
pop
insb
xchg
and
inc
out
push
fisubl
es
fcoms
ja
or
jno
mov
aaa
or
push
inc
ss
adc
pusha
adc
dec
lds
outsb
and
leave
dec
push
clc
outsb
sub
gs
lea
jo
aam
mov
int
add
js
lahf
pop
aaa
rorl
ret
fcmovnbe
int3
add
sub
fildll
xor
ret
imul
adc
xchg
mov
fists
pop
sbb
sbb
and
sbb
mov
push
sbb
lods
dec
cli
dec
imul
loope
ror
inc
push
in
dec
xor
jmp
mov
cli
js
scas
lds
sbbl
sarl
mov
pop
inc
loopne
ss
mov
sbb
adc
rcrb
push
jg
ret
cwtl
mov
lods
insb
push
jg
dec
cmc
mov
inc
ss
cmpsl
test
xor
in
mov
ja
pop
insb
or
mov
push
cmc
pop
xchg
cmp
sub
push
ss
push
stos
sub
outsl
dec
jle
lret
push
or
dec
mov
inc
enter
dec
pop
push
sbb
adc
xlat
xlat
outsl
ds
sub
adc
jl
and
daa
call
inc
sub
mov
mov
push
inc
int3
inc
mov
aam
and
cld
arpl
out
mov
jle
cmp
xchg
mov
mov
add
dec
xchg
cmpb
pop
aaa
mov
mov
adc
mov
mov
cltd
push
and
inc
test
out
test
hlt
out
ficoms
jle
insl
and
jle
leave
ja
fisttps
push
sar
bound
popf
addr16
push
mov
or
movsl
in
cwtl
pop
and
cmp
xor
xor
call
sub
mov
mov
adc
sub
roll
or
push
adc
addr16
aam
xchg
dec
lahf
das
pop
sbb
push
adc
pop
adc
pop
jb
in
jnp
mov
jge
addr16
mov
push
icebp
xor
xlat
out
mov
rorb
repnz
adc
testl
cmpl
xor
enter
sbb
dec
mov
movsl
xchg
adc
sbb
pop
pop
sub
xchg
ret
cli
out
xor
lds
out
int3
mov
cmp
mov
jae
mov
jp
xlat
jle
inc
xor
out
xchg
cmc
xor
add
call
insb
nop
and
inc
cmp
mov
jae
or
out
add
or
push
or
dec
add
arpl
shll
js
inc
cmp
daa
ret
or
jbe
shrl
popf
xchg
cmp
pop
mov
lahf
je
and
cmp
and
jne
movsb
loopne
lret
dec
lds
adc
bound
xchg
jb
lcall
shrl
gs
nop
mov
jo
fisubrs
and
in
iret
mov
jg
push
fld
push
std
xor
orb
cwtl
jno
xchg
cld
mov
pusha
les
and
or
ret
or
enter
dec
jne
je
pushf
xor
jp
addr16
js
jnp
test
xor
add
xrelease
aam
push
inc
flds
aad
sub
add
into
fldenv
xchg
fwait
add
das
and
dec
xchg
icebp
xchg
push
jnp
insl
dec
fidivrl
mov
push
xchg
lea
inc
test
stc
and
orl
push
inc
iret
cmc
mov
sarb
or
sbb
dec
xor
sub
and
sahf
out
dec
xchg
jae
outsb
js
roll
sub
pop
call
cli
sub
xor
mov
lret
int
scas
pop
push
call
cld
sub
mov
das
sahf
ljmp
testl
and
loopne
outsl
loope
mov
das
mov
cmpsb
push
out
clc
push
push
xchg
fsubr
mov
movsb
int3
jne
push
xchg
rcll
pop
aas
out
push
data16
cmp
jmp
mov
dec
pop
outsb
add
mov
adc
push
jl
pop
sbb
sahf
pop
mov
lods
mov
dec
sahf
lds
sbb
ret
mov
mov
outsb
push
frndint
mov
rclb
in
loope
fwait
stos
imul
or
fsubr
sti
jecxz
adc
push
mov
std
mov
fsubs
cmpsb
jbe
push
into
addr16
xchg
cmp
cmpsl
cli
daa
inc
insb
cmpb
jg
das
bound
jne
mov
aad
mov
pop
mov
mov
fcom
and
fdivrs
in
inc
lds
stos
je
add
mov
cmpsb
jmp
add
inc
daa
adc
and
cwtl
outsl
mov
jnp
lock
in
adc
pusha
jecxz
adc
into
aaa
cmp
jecxz
mov
lods
int3
test
mov
add
iret
mov
sub
das
xchg
shl
push
out
adc
fwait
lahf
or
cmp
imul
pop
cmpsb
cli
and
mov
loope
mov
and
outsl
andb
xor
dec
push
mov
jb
cmp
xchg
pushf
jae
adc
repz
or
sub
fiaddl
pop
inc
outsb
das
sub
sbb
dec
sti
fldcw
jp
jl
in
psrad
mov
cmp
ror
fists
pop
or
xor
outsb
mov
shl
push
cmp
sub
sahf
cmpb
adc
cmp
sbb
mov
or
mov
add
lea
pop
fwait
dec
sarb
lcall
arpl
test
and
jbe
mov
jbe
xor
push
adc
int3
sti
or
stos
mov
lds
push
pop
sahf
mov
and
adc
jmp
mov
xor
bound
jae
lret
mov
add
insl
lea
xchg
mov
sub
js
lods
jge
and
mov
icebp
add
sbb
push
sbb
aam
dec
adc
mov
outsb
dec
in
adc
insb
shll
rcll
or
sub
mov
dec
movsb
and
mov
cmp
dec
add
pushf
mov
ljmp
ljmp
or
jmp
mov
test
fsubr
or
or
sub
mov
jg
dec
stc
push
and
fcom
pushf
inc
leave
rcr
repnz
movsl
mov
inc
sbb
push
cmpsl
pop
leave
push
jge
jno
gs
sbb
dec
out
imul
mov
inc
cmp
mov
rcrl
fmull
xchg
inc
xchg
lahf
clc
xor
pop
add
cmp
pusha
pop
cmpsb
sub
jge
std
addb
dec
clc
out
mov
bound
xchg
pop
adc
push
adc
inc
lret
iret
repz
sbb
sar
add
pushf
mov
test
jns
daa
orb
xchg
gs
ljmp
lret
add
fisttpll
xor
dec
mov
movsl
mov
aad
mov
lahf
add
add
fldt
push
loope
xchg
out
sbb
mov
dec
gs
sub
ljmp
cmp
andl
andb
adc
pop
push
dec
aas
mov
sbb
jae
inc
xor
add
mov
sti
xor
movsl
repnz
lret
clc
fimull
push
ljmp
add
mov
stos
pop
mov
mov
popa
push
aam
addr16
sahf
popf
cmp
push
push
lahf
add
add
ja
cltd
sahf
jne
cmp
and
pop
jecxz
push
lock
sub
jg
clc
fsubl
mov
gs
inc
stc
jge
mov
mov
stc
stos
pusha
jp
jecxz
aaa
inc
fadds
mov
dec
xchg
lds
mov
ljmp
sahf
popa
test
aad
sbb
dec
popa
out
mov
cltd
aam
adc
dec
imul
fsts
dec
jp
jmp
xor
xchg
dec
xor
loopne
fiaddl
xchg
outsl
inc
sbb
loope
int3
mov
mov
inc
adc
cmp
xchg
mov
xor
dec
leave
push
stc
mov
add
push
pop
dec
pop
stc
xor
push
jp
dec
pop
push
fistps
inc
pop
shlb
clc
or
test
sbbb
sti
and
lret
mov
sub
hlt
pushf
xchg
sbb
adc
dec
adcb
push
jae
adc
xor
add
mov
sbb
pop
jb
dec
out
in
pop
imull
lods
scas
arpl
pop
mov
cmp
faddp
cmp
push
cs
xchg
mov
push
dec
in
or
adc
xchg
mov
push
ja,pt
je
xchg
or
mov
jge
rcrl
adcb
pop
pushf
or
enter
xchg
adc
in
lret
stc
xchg
mov
cmp
sbb
push
rolb
pusha
daa
add
mov
adc
pop
xchg
cs
mov
sub
out
loope
es
cwtl
pop
push
pop
jg
sub
pop
fsubrp
scas
into
cld
outsb
lret
scas
dec
dec
push
sub
mov
push
call
scas
sbb
bswap
jmp
repnz
aad
or
js
shlb
aad
xorb
test
push
lcall
sbb
lods
mov
aad
out
mov
cmc
or
mov
popf
lar
and
pop
xchg
add
js
mov
bound
nop
push
mov
add
test
pop
cmp
push
roll
mov
and
pop
leave
push
or
cli
call
stos
push
or
dec
jecxz
mov
adc
push
sub
sahf
lea
jmp
cmc
pop
mov
sub
test
pop
jae
out
cmpsb
fisubrl
call
shll
ljmp
loopne
mov
mov
stos
cmp
sbbb
push
lret
add
stos
iret
movb
outsl
pop
pop
int3
frstor
jne
dec
enter
in
xorl
fidivl
je
push
mov
gs
in
stos
sub
in
flds
mov
stc
insl
sahf
sub
cltd
mov
sahf
sbb
mov
aam
cli
pop
rclb
jbe
mov
fldt
enter
dec
xchg
xor
scas
out
or
mov
or
jg
adc
push
xor
or
fucomip
add
jo
aaa
enter
mov
jl
mov
repz
xlat
pop
inc
push
push
test
xor
stos
sbb
ss
push
roll
imul
jmp
scas
testb
in
sbb
adc
mov
jecxz
ficoml
lods
fstpl
enter
mov
movsb
mov
subl
cwtl
adc
scas
xchg
lods
scas
mov
outsl
je
or
adc
ds
push
xor
push
into
stos
xchg
push
shll
pop
aaa
pop
xchg
and
aas
mov
mov
adcb
xchg
cmp
xchg
jmp
jg
fwait
lds
push
mov
stos
clc
xor
cmp
fbstp
or
lcall
jg
mov
push
inc
repz
xor
jb
push
add
sub
mov
test
fucomip
leave
dec
adc
js
lret
add
jo
xchg
mov
jmp
movl
push
cmp
imul
jecxz
mov
pop
mov
call
sbb
mov
pushl
leave
xor
call
repz
iret
mov
mov
clc
adc
sti
fdiv
jbe
mov
mov
jmp
in
mov
or
outsl
lods
rorl
mov
jge
scas
addl
mov
mov
jno,pt
pop
std
shll
xor
and
movsl
add
and
lcall
mov
mov
jl
sahf
mov
jae
rcll
jge
out
out
cmp
mov
movsl
loop
inc
aam
iret
push
fwait
mov
xor
arpl
push
fsubrs
push
mov
or
xor
sarb
push
xchg
push
fisubs
push
xchg
fwait
cmp
xor
inc
inc
jnp
sub
mov
sub
lret
mov
inc
das
jnp
aad
sbb
cli
or
sub
or
xor
pop
sti
aaa
into
mov
imul
sbb
cltd
inc
push
mov
mov
jb
repz
fdivrl
pusha
fisubrs
jnp
mov
rcrb
sub
xchg
adc
test
gs
repz
and
add
mov
push
imul
mov
sub
sahf
dec
inc
in
and
mov
andl
xchg
rclb
push
scas
lcall
out
movsl
frstor
pop
inc
icebp
int
aam
inc
test
cmpsb
xor
inc
push
scas
popf
ja
loop
in
cmp
pop
mov
jns
jb
mov
xorb
fucomip
les
or
mov
jns
mov
lgdtl
xchg
stos
ljmp
pusha
push
and
lea
into
aam
mov
out
sbb
inc
fistl
adc
sahf
stos
cmpsl
xchg
div
daa
mov
test
popf
jmp
adc
push
insl
jbe
mov
arpl
es
mov
jmp
lcall
or
add
or
xor
mov
jo
data16
sti
pop
fmul
mov
lds
cmp
dec
lcall
sub
pop
call
cmp
sub
scas
or
sbb
cld
mov
ja
sbb
mov
xchg
aam
shlb
test
fst
sarb
in
movsb
imul
lret
js
pop
pop
mov
mov
negb
or
xchg
mov
xchg
inc
cmp
cmp
mov
cmpsb
inc
aaa
mov
sub
adc
push
fldt
jns
mov
jg
test
pop
loop
fistpll
ss
popa
inc
in
cmp
fmull
in
aas
imulb
lods
data16
negl
mov
sbb
add
js
repnz
jmp
xchg
sbb
inc
out
push
push
cmp
pop
pop
mov
cmpsb
lret
adc
adc
adc
fcomip
cmp
dec
sub
mov
and
or
data16
sub
pop
imul
cmp
push
lahf
in
xchg
and
inc
or
mov
mov
cmc
and
cwtl
and
orb
popf
lea
fstpt
hlt
mov
frstor
xchg
xor
or
popa
mov
mov
movsb
pop
rorl
cmp
out
sbbb
jmp
jecxz
jb
jnp
xor
lahf
push
es
pop
xchg
addl
mov
mov
cmpsl
stc
pop
mov
push
je
bound
mov
push
movsb
std
ret
idivb
add
mov
jb
pusha
jecxz
pop
jecxz
dec
dec
fwait
lea
cmp
sub
mov
jge
loopne
data16
inc
ds
inc
cs
jl
xchg
in
push
outsl
pop
fisubrl
add
pop
stos
les
int3
inc
ret
hlt
jno
fcomip
jmp
inc
arpl
or
push
fisttpll
cmc
addr16
sahf
subb
push
lret
imul
mov
xchg
in
fdiv
pop
inc
mov
jl
sarl
imul
in
xchg
aaa
add
cmp
mov
jmp
in
out
pop
inc
in
repnz
cwtl
shll
inc
stos
and
cmp
sub
mov
dec
xchg
pop
rcll
jecxz
push
dec
ja
pop
scas
xor
mov
testl
das
mov
out
lea
fldl
in
jmp
mov
pop
lds
add
pop
sbb
sbb
gs
movsb
inc
or
and
and
loopne
ds
arpl
out
scas
xchg
pop
and
subl
pushl
push
adc
cmp
mov
xchg
outsb
subl
into
in
inc
movsl
or
in
pop
push
cwtl
push
mov
mov
jnp
jno
cli
adc
loop
sub
insl
mov
mov
out
loopne
pop
in
adc
fwait
inc
gs
cmp
cli
sbb
adc
jecxz
insl
sbb
daa
dec
ds
je
nop
xchg
loop
add
sbb
or
ss
add
mov
mov
cld
xor
call
mov
sbb
adc
movsb
pop
mov
aad
cmp
mov
pop
cmp
shll
mov
je
xlat
pusha
ja
iret
iret
mov
and
or
fwait
or
jne
lods
pcmpeqb
pop
xchg
movsb
pop
div
out
mov
mov
cmp
adc
mov
and
pusha
inc
js
sahf
data16
test
mov
pushf
xchg
adc
ret
jle
rol
adc
int3
and
cs
insl
jmp
dec
ja
xor
dec
lret
adc
std
in
in
js
enter
inc
jp
ret
lds
cmpsl
xlat
sub
inc
or
sub
test
test
mov
mov
cmpsl
ja
or
adc
lock
lock
int
jle
mov
jp
adc
sub
pop
or
aam
adc
in
inc
cmc
ret
hlt
inc
push
mov
inc
loopne
mov
add
insb
filds
mov
mov
addb
arpl
sbb
fsubl
fidivrs
push
imulb
or
mov
ljmp
pop
push
mov
in
dec
fs
pop
or
not
insb
push
lret
jns
fstp
in
arpl
cmpsl
jne
lock
scas
adc
mov
js
movsl
jle
add
ljmp
fstpl
hlt
pop
mov
mov
out
ljmp
lods
imul
pop
xchg
jl
ss
xchg
inc
addr16
sbb
mov
and
adc
cwtl
movsb
sbbb
xor
add
addl
mov
inc
div
cmp
je
push
or
scas
out
inc
mov
push
scas
or
in
mov
mov
pushf
lock
mov
dec
pop
stc
imul
pop
aaa
cltd
mov
inc
loope
fadds
das
cmpsb
lods
adc
mov
cld
out
rcrl
mov
fisttpl
lcall
mov
popf
pop
mov
test
dec
dec
sti
imul
or
add
xor
cmp
pusha
popa
loop
ret
jns
push
push
fcmovnb
and
xchg
xlat
mov
inc
out
imul
adc
jle
fnsave
mov
mov
movb
mov
mov
cld
out
cli
mov
iret
shrb
mov
repnz
and
mov
call
pushl
icebp
ret
cwtl
shll
jne
fsubrp
mov
pop
sbb
mov
cmp
clc
filds
push
movsb
sbb
popf
cmp
mov
sar
sti
jp
inc
into
mov
mov
adc
cmp
movsl
push
pop
xlat
push
call
mov
adc
sbb
lods
mov
or
leave
test
mov
loope
adc
mov
mov
mov
inc
fcmovnu
das
loop
pop
loopne
inc
adc
mov
mov
loope
rol
mov
pop
pop
sbb
jae
mov
dec
xchg
cli
inc
adc
mov
dec
std
cltd
dec
into
test
push
sub
rcrb
shlb
xor
inc
or
pushf
mov
pop
inc
xchg
lods
sbb
jno
sub
fwait
dec
mov
fwait
test
jbe
into
in
or
lahf
out
in
repz
add
push
int
imul
sbb
xchg
pop
or
push
inc
lods
pop
inc
adc
imull
movb
in
inc
leave
js
mov
inc
inc
jne
mov
scas
cmc
jno
daa
je
jbe
sbb
mov
lcall
fcompl
push
xchg
int3
mov
mov
test
sbb
sahf
daa
mov
iret
xchg
xor
cmp
addr16
js
test
idivb
xchg
pop
pop
cmpsl
cmp
pop
or
aas
sbb
or
rcl
in
xor
mov
rcll
fcmove
push
out
mov
repnz
push
sbb
frstor
sub
ja
cmp
mulb
inc
push
jnp
jmp
inc
fxch
sbb
call
popf
clc
cli
aas
and
mov
lea
dec
sub
inc
insb
in
out
fidivrl
popf
push
popf
or
mov
shll
stc
add
lahf
cmp
aaa
pop
sbb
dec
or
push
dec
lea
mov
subb
mov
pop
mov
repnz
sbb
shll
jecxz
or
dec
mov
clc
xor
and
mov
jle
stos
inc
jp
je
ljmp
cmpsl
and
orl
imul
jbe
mov
xchg
xchg
add
xor
fisubs
jl
lret
test
stos
adc
and
xchg
loopne
movsl
dec
xlat
push
xchg
add
cmp
fs
aam
mov
pop
bound
xchg
ds
xlat
aad
mov
cmp
xchg
jge
pop
movsb
repnz
dec
or
adc
mov
cs
push
xchg
stos
adc
test
jle
sub
adc
lret
push
cmc
cmp
call
xor
test
stos
out
cltd
les
mov
pop
sahf
push
punpckhbw
aaa
ret
sub
insl
fwait
int
xrelease
popf
adc
xchg
or
dec
repnz
cmpsb
dec
std
and
aad
sub
dec
mov
mov
inc
stos
lcall
repz
inc
mov
push
cwtl
cs
sub
sub
dec
mov
and
push
sti
fidivl
outsl
add
xchg
pop
mov
mov
cmpsl
inc
rclb
shrb
shl
sbb
lock
aad
lock
mov
add
inc
xor
or
int
xor
push
into
mov
mov
inc
fs
int3
pop
aaa
xchg
insb
jb
leave
mov
fisubrl
dec
cmp
mov
mov
outsb
add
hlt
pusha
fs
in
xchg
jbe
test
lock
outsb
inc
bound
mov
inc
sbbb
mov
cld
or
out
mov
dec
popf
xchg
dec
in
cltd
sub
pop
cwtl
sbb
in
loop
sub
repnz
cs
xor
pop
jnp
mov
mov
ret
scas
decb
mov
push
leave
xchg
inc
repz
mov
and
push
pop
pop
cmp
aam
pop
push
aad
mov
sub
ljmp
mov
jge
aam
loop
test
or
mov
popf
xor
adc
jg
pop
push
inc
ljmp
in
jge
adc
addr16
rcrl
iret
or
sarl
addl
pop
mov
test
pop
xchg
outsb
fisubrl
dec
add
mov
dec
cmp
sbb
cwtl
das
das
outsl
and
push
out
add
das
decb
push
inc
arpl
dec
mov
push
pop
sub
dec
mov
push
aaa
inc
shlb
mov
jnp
push
push
mov
inc
inc
mov
fildl
adc
mov
mov
lods
mov
mov
mov
mov
push
and
lock
mov
add
pop
mov
or
or
jne
cmp
xchg
lret
std
ret
sti
pushf
pop
aam
daa
xor
sbb
adc
cmp
adc
push
rclb
stc
mov
and
and
and
cli
clc
jle
dec
push
push
cmp
inc
icebp
out
cmpsl
xchg
loopne
pop
sub
xchg
lret
out
lcall
icebp
xchg
sti
not
or
xor
rcl
rorb
pop
aas
ljmp
adc
gs
das
and
stc
xchg
repnz
mov
cmp
int
stc
stos
mov
or
pop
mov
add
mov
pop
popf
cmc
into
pop
imul
push
xor
xchg
add
push
xchg
xor
jnp
inc
nop
xchg
push
jne
add
cwtl
outsl
std
std
inc
pop
mov
loop
jae
sbb
mov
push
lds
hlt
push
add
imul
mov
test
faddl
aad
fs
push
lods
movsl
test
lcall
pop
ljmp
outsl
jb
mov
rcl
sbb
icebp
jmp
jbe
insb
iret
sbb
fcomps
jle
ja
in
push
das
pusha
outsl
je
xor
mov
adc
sbb
out
mov
jb
fildll
adc
adc
lods
push
call
pop
ret
mov
sbbl
cmpsb
lahf
lahf
fwait
jle
call
xchg
stos
incl
jge
sbb
in
sbb
mov
sbb
jno
sbb
or
inc
or
aam
aad
mov
or
std
or
insl
xchg
jo
das
les
fs
mov
push
ficoms
mov
les
jle
xor
add
push
sub
push
stos
xor
rcr
inc
jns
std
inc
mov
into
or
or
sbb
imul
out
mov
je
inc
jne
pop
mov
imul
mov
subl
mov
jb
or
addr16
push
ds
call
sti
je
push
fchs
loopne
lea
pop
jecxz
inc
pop
sbb
jle
fistpl
mov
rclb
xchg
mov
inc
lds
adc
jecxz
fwait
stc
inc
jb
mov
jmp
lret
imul
mov
cmp
mov
frstor
imul
inc
divl
cld
and
call
xor
imul
pop
xor
mov
shl
ret
mov
test
ds
in
lock
loope
sub
cmp
mov
mov
and
push
add
je
fs
loop
inc
add
xor
jp
mov
mov
negl
or
loopne
mov
shll
or
push
lcall
pop
lods
enter
jle
mov
jmp
out
cmp
loop
cmc
or
mov
and
ljmp
mov
mov
mov
pop
xchg
arpl
shlb
lret
push
pop
in
subb
ficoml
movsb
test
xchg
sbb
mov
sbbb
pop
jp
or
jmp
les
sbb
inc
mov
shlb
das
ret
outsb
nop
insb
jns
stc
scas
and
dec
lret
push
inc
in
aas
inc
or
add
pop
out
mov
gs
sub
rolb
mov
std
jns
xchg
cmp
push
imul
jle
xchg
jmp
mov
fcmovbe
mov
ret
jmp
cwtl
sbb
push
cmp
cwtl
insb
test
push
icebp
in
mov
test
mov
rcrb
fdivrp
adc
movsb
inc
jl
jb
fnstsw
rclb
popf
mov
add
jbe
and
es
repz
add
mov
les
insb
xlat
push
push
push
jb
sbb
sbb
pop
in
push
sbb
lds
cltd
movb
lock
imul
stc
mov
mov
in
cmpsb
movsl
cltd
cmpsb
and
ja
sbb
mov
push
iret
int3
xorb
cwtl
pop
pop
inc
fsts
sbb
test
gs
nop
cmp
sbb
xchg
xor
jl
pop
psrlw
cmp
icebp
pop
adc
ret
mov
lcall
sti
add
jp
jne
shll
sti
adc
lock
daa
mov
out
pop
sub
test
bound
rcrl
sub
dec
in
push
enter
jne
push
idivl
dec
push
repz
mov
decl
jae
push
push
xor
dec
fcoml
mov
mov
xchg
inc
adcb
ds
inc
js
mov
aam
add
aaa
lcall
fbstp
ljmp
jbe
into
push
iret
cltd
inc
add
push
clc
iret
mov
mov
cmpb
and
mov
rclb
fs
push
in
movsl
lds
dec
add
subb
imul
jno
fwait
push
push
mov
loopne
dec
cmpsb
out
test
dec
pop
and
mov
fcomi
sub
cmpsl
mov
in
adc
sub
outsl
leave
je
mov
bound
jecxz
pop
daa
or
rorb
mov
es
add
mov
mov
xchg
push
xchg
dec
jne
fwait
and
stc
sbb
inc
cmpsb
adc
inc
ljmp
push
data16
jge
or
lods
lret
mov
jno
or
mov
cmp
es
dec
out
push
js
mov
inc
lret
jnp
dec
out
xchg
push
add
adc
xor
addr16
xchg
push
call
mov
loop
mov
in
scas
inc
cmp
push
or
adc
call
movsb
aad
mov
jnp
push
cmp
outsl
sbb
push
push
addb
rcrb
mov
cmp
inc
lcall
faddl
jae
sbb
mov
mov
mov
fs
pop
lods
sarl
repz
test
pushf
mov
adc
xor
xor
scas
push
dec
cs
fadd
icebp
lret
push
imul
jbe
cmovo
fldcw
adc
cmp
mov
cmpsb
mov
mov
add
popf
pop
xor
xlat
pop
xor
sbb
jno
aas
inc
enter
iret
movsb
sub
jno
xchg
push
in
or
push
dec
pusha
lret
out
lret
push
or
loopne
dec
xchg
mov
mov
sub
xor
fsubrl
pusha
sarl
je
in
inc
loop
xlat
cmpsb
dec
jae
xchg
shr
push
sti
jo
push
adc
or
xchg
jb
or
dec
aad
inc
or
jno
xchg
sbb
xchg
jno
pop
mov
lods
int
adc
std
mov
pop
rcl
jg
fs
dec
clc
cmpsl
mov
ret
mov
js
shl
mov
test
sbb
ds
xchg
int
mov
ror
dec
mov
es
adc
pushf
inc
mov
loop
inc
int3
loopne
sub
add
xchg
pop
cmpl
and
out
sbb
push
cltd
sub
int
mov
jl
cmp
pop
and
mov
pop
add
pop
lock
mov
mov
inc
pop
push
mov
pop
ret
mov
movsb
mov
addr16
add
dec
outsb
daa
sahf
fisttpll
imul
xchg
lock
cwtl
leave
xchg
xchg
addr16
pop
pop
or
fcompl
add
jb
cmpsl
jecxz
dec
lret
outsb
xchg
dec
lahf
xor
or
pop
pop
dec
fs
inc
pop
lds
xlat
push
jns
sbb
dec
pop
xor
and
dec
sbb
in
inc
jmp
mov
xor
arpl
inc
shll
test
xor
jae
sbb
cli
push
sbb
and
data16
call
inc
sahf
lods
pop
outsb
insl
adcl
push
dec
shr
xchg
dec
xchg
ljmp
aas
movsl
push
mov
lahf
dec
sub
and
push
je
dec
jne
push
shlb
bound
daa
repz
sbb
cwtl
insb
pop
xchg
jecxz
pop
cli
orb
pop
cmp
or
xchg
sti
mov
fimuls
fs
sub
adc
push
pusha
pop
loop
push
cmp
fisttpll
sub
insb
cmpb
mov
pushf
repz
inc
clc
mov
imul
nop
stos
in
jle
mov
pop
jnp
repz
mov
loop
pop
fidivrs
xchg
push
mov
lahf
push
cltd
rcr
mov
pop
test
lret
fisttps
stos
mov
mov
fisubl
repz
jge
sub
push
sub
dec
pop
cmc
and
into
je
stos
push
dec
sub
sub
fwait
xchg
inc
mov
popf
pop
call
cld
mov
inc
sub
push
pop
sub
mov
jbe
sub
mov
testl
bnd
xchg
cmp
push
jno
mov
icebp
lret
fisubs
xlat
sbb
jno
mov
fwait
sub
nop
or
movsl
mov
fwait
sbb
imul
push
xor
lock
arpl
jp
not
xlat
mov
pop
sub
sub
iret
sub
pop
xor
jo
stos
mov
xchg
xor
inc
xchg
sub
mov
mov
ljmp
subb
adc
mov
cli
enter
sub
jecxz
push
mov
mov
inc
cmc
and
dec
xor
cmp
push
xchg
lahf
and
fisttpl
mov
mov
sbb
inc
pop
mov
aas
int
mov
cmp
lret
add
mov
xchg
dec
add
out
or
pop
adc
xor
push
loope
mov
cmp
and
xlat
stos
leave
fistpl
into
sub
xchg
pop
inc
clc
mov
hlt
and
jae
mov
push
mov
mov
adc
push
cmc
pop
rclb
mov
mov
outsl
adcb
popa
out
push
dec
push
stc
sub
cmp
jge
cmpsb
fstpl
scas
iret
fimuls
ljmp
test
imul
insb
push
rcrb
daa
enter
push
dec
adc
push
cltd
outsb
pop
rcrl
adc
pop
popa
in
fwait
cli
pop
addl
loopne
fs
jecxz
addb
test
add
std
sbb
xchg
pop
fwait
dec
jne
ror
or
xchg
lcall
int
insb
sbb
jmp
sbb
mov
adc
dec
jb
jge
aad
lea
cli
xchg
pop
jno
push
je,pn
or
das
shrl
in
sbb
hlt
mov
xor
pusha
insb
dec
mov
int3
hlt
out
icebp
mov
loope
lret
aam
jge
cmp
rep
push
xor
test
dec
cmc
mov
xchg
rorl
and
stos
outsl
add
mov
cmpsl
push
xor
es
pop
dec
in
sub
daa
mulb
pop
mov
jb
fwait
das
inc
outsl
sahf
fistpll
mov
push
int
dec
xor
sub
loopne
cmp
jae
leave
lock
pop
pop
movsb
dec
inc
sbb
shrl
adc
mov
mov
shl
mov
sbb
adc
stos
out
mov
push
inc
push
xchg
push
sub
inc
push
scas
imul
call
pop
sub
rcrb
dec
mov
stos
dec
insl
loopne
outsl
in
mov
cmp
testl
adc
xchg
push
push
or
cwtl
dec
fisubrs
push
dec
jns
and
fwait
and
mov
mov
sbb
sbb
idiv
ds
sub
jle
mov
es
mov
test
inc
pop
jmp
dec
lcallw
mov
and
lock
and
repnz
aaa
sub
sbb
ds
pop
jbe
sbb
pop
das
int3
fldenv
cltd
inc
mov
fwait
stc
jmp
in
push
mov
pop
jmp
xchg
lds
jle
scas
repnz
std
inc
push
mov
loop
push
stos
pop
rorl
insl
cmc
sub
addr16
cmc
mov
push
sub
mov
int
dec
dec
shll
sbb
push
mov
js
rcll
mov
jns
aam
push
stc
push
in
add
cs
inc
sbb
mov
push
mov
mov
scas
and
inc
mov
xchg
xor
inc
add
inc
mov
cmp
cmp
jge
sti
pop
rorb
insb
mov
leave
nop
out
push
inc
fisttps
mov
cmp
jecxz
ja
sti
inc
in
xor
xchg
xor
inc
push
pusha
iret
pusha
pop
xchg
sbb
stos
pop
sarl
pushf
xchg
dec
rcl
hlt
sti
sub
cmpsw
fists
push
leave
jbe
or
inc
adc
fwait
insl
xor
rcrb
repnz
mov
adc
jmp
add
mov
outsb
or
aam
dec
sbb
jmp
in
mov
push
add
inc
cmp
fidivs
ret
push
xchg
mov
loopne
movntps
xchg
fucomip
jmp
jp
cmp
mov
push
xchg
jle
xor
mov
mov
movsl
mov
inc
lods
popa
daa
adc
shll
adc
jnp
into
xchg
gs
push
sbb
xchg
cmp
xor
mov
sub
push
jmp
mov
ret
mov
xchg
lret
je
inc
ret
loope
ror
clc
adc
imul
enter
repz
jp
cmp
or
pop
clc
and
fwait
lret
fdivrs
adc
fistpl
inc
dec
or
lcall
cmp
pop
sbb
push
leave
mov
inc
js
xchg
jmp
pusha
aas
xor
jne
xor
cmpsb
int
test
sbb
ret
and
mov
dec
mov
ja
rol
mov
jns
scas
or
jl,pn
fadd
int3
ljmp
movsb
jle
lret
adc
push
pop
lea
dec
xor
push
sub
icebp
stos
subl
sbb
push
sbb
cld
repnz
xor
sbb
lods
movsl
notl
movsb
decl
cld
mov
leave
and
inc
sub
popf
cmp
rcll
mov
lea
jnp
cli
lret
les
lcall
mov
add
mov
hlt
add
sub
sbbl
std
fstps
inc
push
aad
repz
mov
xchg
fidivrl
xchg
xchg
mov
or
fdivrs
mov
lahf
cmp
mov
push
test
hlt
lahf
insb
sub
inc
pop
inc
insb
pop
fstpt
adc
xchg
daa
and
out
js
bnd
sbb
xchg
cmc
cmp
xor
cmp
in
pop
popf
pop
shll
fs
cmpsl
or
adc
jecxz
test
shrl
xchg
fadds
dec
sub
imul
cmpl
dec
adc
xchg
fxch
loope
sub
lahf
jo
inc
sarl
stos
rcrl
xchg
je
gs
push
xor
call
dec
jns
sbb
jno,pt
and
jmp
adc
jns
ja
push
pop
cmp
ss
mov
sub
jmp
pop
fstpt
jnp
mov
popa
push
mov
lds
cmp
xor
push
pushf
dec
xor
xor
ret
cld
les
add
xor
or
dec
pushf
out
push
pop
cmp
xor
loope
mov
js
xor
xor
daa
outsl
dec
push
add
and
cli
ja
sbb
cwtl
imul
and
rcll
pop
leave
loop
imul
and
popl
xor
aad
dec
pop
push
jg
xor
repnz
out
scas
add
inc
cmp
lds
pop
adc
ret
cli
adc
jecxz
ds
aad
or
fisubrs
xchg
icebp
inc
push
cmp
lea
push
fdivl
fcoms
sbb
cwtl
jae
iret
mov
paddsb
push
fbstp
mov
push
dec
rclb
cs
daa
push
fnstcw
ucomiss
mov
mov
ss
mov
lods
cmpsl
and
addl
dec
mov
inc
mov
aad
dec
mov
dec
cs
sub
rcl
jns
nop
lods
xor
add
nop
sbb
call
cmp
dec
pop
fimuls
pusha
mov
loopne
sub
xor
mov
sub
scas
sti
rolb
and
test
xor
data16
loop
fistpll
push
std
push
push
cmp
scas
nop
loopne
cmc
cmpsb
insb
js
xor
lret
cmpsb
xchg
and
stc
nop
jno
add
in
js
shlb
mov
adc
sahf
incb
inc
clc
gs
mov
xor
out
xor
dec
les
sbb
fdivrl
and
lahf
dec
iret
mov
dec
adc
test
rorb
gs
and
ficoml
pop
mov
out
sahf
mov
ret
sbb
mov
pop
mov
mov
test
fistpl
dec
dec
pop
insb
mov
ljmp
pop
insb
xor
xchg
sbb
adc
iret
imul
pusha
push
push
shrb
cli
xor
outsb
movsl
or
loope
xchg
inc
mov
mov
push
mov
and
inc
push
insb
imul
xchg
into
xchg
xor
inc
sbb
sahf
jge
jecxz
xchg
pop
enter
iret
js
adcb
pop
into
mov
repnz
outsl
ret
subb
leave
jp
test
sbb
or
ds
jnp
jmp
inc
jmp
xchg
xor
outsl
and
rorb
mov
push
iret
push
dec
xor
jle
fstpl
add
imull
pop
cwtl
data16
das
es
popf
inc
mov
inc
lods
test
sbb
pop
cmp
dec
insb
jecxz
or
mov
fwait
mov
push
fstps
and
test
jns
scas
xchg
push
xchg
sbb
sarl
fdivrs
cmp
std
mov
inc
enter
out
mov
aam
mov
inc
jbe
addr16
pop
add
jle,pt
in
adc
xchg
or
push
mov
outsl
mov
fnstsw
adc
pop
xchg
push
pop
loop
mov
or
xchg
nop
leave
or
outsb
outsl
cwtl
inc
ret
leave
or
test
fnstenv
and
scas
ljmp
and
or
jge
push
popf
xor
dec
sbb
cmpsb
scas
into
sbb
cmp
test
sbb
mov
mov
jecxz
call
mov
int3
and
test
std
clc
test
and
dec
inc
xchg
cmp
adcl
stos
push
out
loopne
es
cwtl
jp
cmp
sbb
jge
mov
pop
add
clc
jecxz
inc
push
fnsave
jge
sbbl
xor
jmp
jp
sub
mov
sbb
push
adc
push
and
adc
mov
mov
gs
fistl
dec
and
xchg
fwait
push
lcall
roll
cs
shlb
xchg
fsubs
adc
insb
fmul
ss
pop
xor
jl
movsb
aad
shl
or
and
stos
test
and
mov
mov
outsl
mov
xchg
jle
mov
adc
xor
lret
jnp
out
pop
sub
cwtl
add
idivl
mov
inc
sbb
test
fsin
int3
jmp
int3
test
mov
pop
dec
mov
pop
xor
filds
and
add
push
outsl
mov
push
ret
outsl
inc
andb
dec
icebp
xlat
shr
jbe
push
cmp
faddl
sbb
insb
jnp
int3
add
jecxz
or
add
pop
test
or
popa
popf
jns
mov
daa
imul
or
xor
mov
popf
add
jae
data16
mov
push
data16
and
les
test
loope
mov
repnz
jl
lds
rcll
xor
pop
xchg
leave
add
je
cs
jb
lds
and
pushf
imul
mov
add
sbb
push
gs
xchg
xchg
mov
mov
dec
pop
inc
mov
loope
insl
xchg
rorl
mov
push
xlat
int3
jl
sub
push
loopne
scas
lods
ljmp
cmp
rcll
scas
sbb
xchg
leave
adc
lahf
mov
cmp
dec
pop
pusha
out
adc
xchg
imul
mov
daa
stc
movsl
jne
fldl
out
aad
mov
testb
and
in
aaa
mov
mov
cmp
mov
lcall
cltd
unpcklps
mov
xor
dec
dec
push
cmpsl
lcall
outsl
repnz
push
es
or
sbb
fistpl
in
std
bound
sahf
mov
xor
imul
mov
lods
xchg
jmp
inc
lcall
ret
cli
and
scas
stos
add
push
xlat
test
add
xor
xchg
pop
mov
insb
popa
add
and
pop
mov
cmpsl
fs
add
call
push
and
repz
or
popf
push
lods
and
call
xorb
adc
jnp
jb
cmp
aaa
inc
cwtl
pop
loop
sbb
push
mov
pusha
pop
push
sti
pop
outsb
test
sub
dec
in
test
loope
insb
aas
incl
movsb
in
dec
std
lcall
mov
mov
add
ret
inc
scas
cs
mov
call
gs
xor
or
sub
inc
iret
xchg
mov
leave
sbb
and
dec
inc
nop
add
cmpl
popa
insl
insl
pop
adcl
lea
daa
and
xor
mov
and
mov
adc
sub
dec
xchg
or
push
jmp
fldcw
in
inc
stos
into
and
push
in
push
push
and
gs
fdivl
scas
fsubr
outsb
xchg
loop
mov
movsb
xchg
pop
sahf
inc
inc
fwait
sub
jne
xor
testb
fstpl
inc
sbb
and
addb
call
mov
push
std
ficomps
sbb
push
mov
icebp
loope
push
cmp
mov
ror
outsb
cmpsb
aas
movsl
and
sbb
fwait
lock
ds
pop
cmp
stos
cli
inc
dec
mov
cltd
mov
daa
sbb
or
dec
notl
fists
and
int3
mov
and
pop
dec
ss
xchg
ficoml
mov
add
sub
add
pop
outsl
add
das
fsub
outsb
inc
pusha
and
jmp
repz
test
int3
sbb
push
insb
xlat
jmp
sarb
sub
sbb
popf
sub
xor
push
sub
cmpsb
jns
imul
insl
adc
je
sub
push
mov
imul
push
pusha
dec
lock
pop
ljmp
mov
fs
stc
rorl
lea
sub
imul
or
stos
jg
dec
adc
push
ret
stc
mov
inc
movsl
lock
imul
xor
lods
or
test
or
mov
ret
mov
in
mov
shrb
lds
mov
mov
sub
popa
rcrb
sub
and
std
sarb
xchg
sub
loopne
xchg
out
xlat
mov
dec
cmpsb
movsb
mov
test
pop
ror
push
ja
and
xor
loopne
addl
and
out
call
add
int
cld
adc
or
shll
xor
mov
push
mov
push
or
popf
mov
imul
cltd
aas
xor
jne
adc
mov
fldl
jmp
stos
ret
cmp
jle
fcomps
outsl
imul
mov
notl
add
mov
int
lret
mov
mov
mov
xchg
jle
out
stos
insb
xchg
xchg
pop
cmpsb
ds
sub
mov
decb
outsl
mov
aam
repnz
ss
mov
enter
sbb
push
push
popa
imul
cltd
pop
fidivs
pop
push
inc
je
jecxz
lods
dec
cld
test
stos
xchg
clc
out
adc
int3
sub
js
hlt
dec
xor
mov
clc
in
sbb
sbb
enter
ljmp
push
repnz
cmp
fmul
call
mov
push
dec
add
es
loope
cmp
jp
inc
sub
dec
popf
xchg
and
mov
jle
in
cmc
push
arpl
push
mov
imul
dec
aam
mov
mov
cmp
inc
pushf
or
dec
daa
movsb
shlb
test
nop
mov
sub
ficompl
loopne
sbb
mov
sub
sbb
clc
jmp
sbb
dec
pop
hlt
mov
je
bound
pop
out
mov
and
cmp
aad
rorb
insb
test
mov
jnp
mov
jl
enter
fisubrs
cwtl
jo
fnstsw
mov
xchg
and
int3
mulb
mull
cltd
sbb
pop
test
push
test
adc
cmp
add
cmp
cltd
bswap
push
add
jmp
push
in
dec
cwtl
pop
lods
enter
cmpsl
dec
fisttpl
mov
and
test
push
pop
push
mov
xor
cmp
mov
das
xlat
and
ds
xor
insl
movsb
xor
dec
mov
pushf
repnz
repnz
fstps
lcall
or
jbe
leave
push
rcrb
cmp
mov
add
jecxz
fidivs
daa
lds
je
sub
sub
sbb
arpl
xchg
fnstsw
mov
call
dec
cs
ret
mov
das
iret
xchg
jecxz
bound
rolb
test
shlb
sti
cltd
fwait
scas
or
cmpsl
icebp
mov
xchg
mov
mov
push
lret
sub
imul
in
movsl
adc
clc
xchg
test
data16
mov
shrl
jae
mov
subl
dec
cwtl
test
stos
cmpsb
lock
cmc
sub
sar
pop
shl
aad
add
xor
in
std
and
bound
xor
jg
cmp
adc
mov
jno
icebp
and
insl
mov
inc
jp
jns
xlat
lea
movsl
lea
xor
cmp
int
or
sti
mov
push
add
mov
les
in
subb
flds
and
int
mov
shlb
pop
or
mov
dec
mov
ds
lods
xchg
int
cvttps2pi
mov
push
push
js
stos
fsts
and
and
leave
xchg
cmp
leave
jbe
cltd
xor
jmp
sub
push
std
xchg
out
cmpl
nop
adc
insl
mov
mov
push
cmp
insb
repz
sub
not
jecxz
repz
jle
clc
push
cmp
push
movsl
pushf
jno
xchg
add
iret
mov
clc
xchg
dec
push
addl
fsubs
mov
aas
nop
mov
icebp
js
mov
mov
scas
andl
inc
mov
jp
loop
addb
pushf
out
mov
mov
mov
jl
mov
dec
xchg
or
adc
sbb
fistl
xchg
mov
icebp
test
shl
jno
das
push
jg
out
sub
mov
add
xchg
jbe
ret
mov
adc
iret
pusha
and
cmp
into
mov
loop
push
stc
shll
cltd
aad
stos
inc
or
or
ja
pop
xchg
adc
gs
es
jne
dec
incl
ficoms
je
imull
push
lods
aaa
ja
adc
add
lods
pop
insb
push
pop
push
push
and
push
xor
aam
bound
lcall
jg
shr
pop
add
lock
lds
mov
mov
sub
jle
negb
inc
ja
test
sub
adc
sahf
loop
je
sub
mov
mov
fcmovne
mov
adc
push
dec
mov
mov
aad
arpl
sbb
lea
sbb
orb
xor
push
mov
sahf
mov
mov
push
or
scas
popf
ljmp
cs
push
pop
das
aam
enter
scas
inc
push
repnz
pushf
and
imul
mov
insl
jecxz
hlt
movsb
adc
popa
push
jge
sbb
sbb
add
xor
pop
ret
xor
fimuls
inc
jge
psubb
pusha
sub
adc
dec
mov
cmp
sbb
or
dec
subb
or
or
mov
fidivrs
sub
pop
pusha
cmp
sub
daa
ficoms
cmp
aam
sub
sbb
xlat
sub
in
jp
jns
mov
enter
mov
xorl
add
test
pop
imul
pop
out
push
enter
xchg
sbb
push
pushw
std
xor
fldcw
rcrl
add
xchg
std
add
jecxz
adc
jp
pop
out
lahf
fidivrs
cmp
push
stos
push
cmp
or
jg
jl
or
das
mov
pusha
push
cmp
xchg
or
push
pop
loop
push
lock
imul
add
pop
jnp
mov
or
inc
and
mov
mov
sarl
mov
push
and
xchg
fimull
adc
les
push
sti
and
psraw
divb
aaa
mov
filds
cmpsl
mov
cwtl
popa
aad
jne
xor
mov
pop
aad
sti
icebp
outsl
jp
repnz
or
in
xchg
jo
lods
xor
or
inc
mov
mov
loop
adc
pop
mov
outsb
loopne
test
jle
leave
clc
bound
cmpsb
enter
sub
lea
sahf
out
fs
aas
xor
sbb
jne
sub
cltd
ds
mov
lods
jnp
jno
bound
sub
xchg
addr16
out
pop
imul
ja
pop
push
test
fstpl
mov
and
out
outsb
pop
js
mov
or
aad
jge
repz
test
push
sti
cmp
lret
hlt
pushf
pop
fs
aad
lret
jge
sbb
cmp
nop
rcll
icebp
insb
testl
fucom
push
aaa
mov
out
push
ficomps
cmp
js
lds
flds
das
nop
sbb
mov
push
jno
out
jne
jno
adcb
or
int
out
push
jecxz
mov
jbe
xchg
gs
push
cmpsb
inc
aam
inc
mov
test
dec
xlat
cmp
mov
and
lret
jo
inc
pop
or
adc
mov
push
ljmp
jo
sbb
pop
nop
and
dec
fnstenv
icebp
and
or
dec
pop
adc
in
addr16
in
dec
aad
out
rcrl
scas
push
shlb
imul
sub
inc
push
mov
outsb
bound
adc
pushf
xor
ss
inc
pop
mov
addl
repz
pop
mov
and
jecxz
sub
mov
aas
dec
adc
dec
hlt
or
fildll
add
cwtl
ret
sbb
sarl
jecxz
xchg
shrb
lret
add
jae
dec
rcrb
jbe
sub
or
out
dec
icebp
mov
addr16
nop
mov
mov
push
pop
cli
xlat
mov
sub
push
pop
adc
insb
ds
dec
jnp
out
imul
mov
dec
mov
ss
addl
pop
inc
imul
subl
mov
or
push
cmpsl
or
mov
aaa
sarb
cmp
test
inc
adc
inc
xchg
mov
push
and
xchg
sub
es
lret
scas
push
mov
sbb
pusha
les
js
sbb
mov
add
sub
ficoml
ja
int
stc
cmp
lock
out
adc
sub
cmpl
ljmp
xor
ljmp
mov
pop
push
add
jmp
jecxz
add
outsb
and
dec
fdivrl
mov
push
mov
or
push
push
mov
daa
iret
mov
and
scas
rcr
pop
pop
pop
in
jmp
cmpsl
cmp
popa
pop
mov
mov
dec
lahf
das
fstps
or
push
ljmp
sub
jae
sub
jecxz
rorb
loop
xchg
mov
pop
icebp
roll
and
push
mov
test
pop
out
jecxz
dec
arpl
cwtl
test
out
lds
cmp
bound
or
add
pop
fwait
ret
repnz
xchg
xor
pop
dec
daa
daa
inc
or
shlb
mov
shl
pop
push
push
mov
clc
js
pop
out
adc
sbb
push
inc
jmp
sti
popa
stc
push
pop
pushf
push
add
popf
icebp
popa
sbb
scas
xor
cmp
jmp
data16
mov
out
push
mov
loopne
add
imul
sti
mov
in
subb
pop
lods
es
sbb
inc
dec
xchg
divl
add
jecxz
ret
insb
rol
ficoml
mov
es
push
jge
leave
pop
dec
repnz
mov
inc
and
cli
pusha
adc
pusha
mov
xor
pop
or
call
cmp
ja
dec
pushl
bound
jns
inc
pop
sub
repnz
fsin
je
push
sbb
shrb
cld
cmp
daa
add
lcall
test
nop
xor
mov
rcrl
xchg
sbb
pop
dec
mov
jo
cmp
sbb
inc
loopne
jg
ljmp
std
clc
mov
cli
fnstcw
mov
xchg
sar
push
pushf
cmp
stc
fsub
sti
sbb
add
cmovo
xorb
fidivs
sbb
sub
nop
push
movsb
cmp
scas
pop
push
fwait
push
hlt
inc
loop
adc
xor
jp
ret
bound
nop
or
pop
mov
roll
pop
jne
dec
xor
out
sub
xor
sub
clc
and
sub
fildll
xlat
pop
xor
adc
push
push
mov
xchg
fisttps
inc
jns
cmp
pop
and
out
cli
scas
push
ds
mov
inc
addl
cld
mov
into
push
jae
test
mov
pop
stos
orb
shll
stos
mov
jl
in
adc
add
imul
jecxz
adc
dec
sbb
call
clc
mov
aaa
pop
je
mov
add
sbb
loope
jo
add
test
push
call
jg
scas
movsb
fdiv
mov
lods
cld
aaa
inc
lods
leave
stc
lret
lahf
push
aas
pop
xor
sbb
sub
adc
fnstsw
jl
out
aad
mov
mov
jecxz
adc
popf
movsl
bound
mov
shll
rcrl
jmp
pushl
call
add
sub
addps
pop
dec
push
dec
imull
add
bound
ret
xchg
rcrb
and
xchg
test
andb
inc
inc
mov
inc
xlat
fisubrs
sbb
xchg
js
add
mov
fdecstp
aam
in
popa
shl
mov
rorl
mov
das
push
bound
sahf
mov
outsb
xor
sub
sub
out
call
push
mov
mov
and
iret
xchg
iret
xlat
out
insl
xchg
jmp
pop
cmpsb
or
nop
inc
gs
jae
xor
lods
shlb
popa
loope
aas
mov
jno
or
cmp
out
ja
mov
push
andb
mov
lret
sub
iret
clc
scas
fidivl
rclb
idivl
xchg
xor
dec
dec
dec
cwtl
pop
mov
add
add
jle
fs
in
sub
add
mov
mov
sub
adc
lds
mov
pop
mov
gs
xor
repz
out
inc
ror
int
sub
test
das
test
stos
ficomps
imul
mov
adc
stc
lea
cmc
xchg
repz
lock
out
cs
cmp
jno
mov
push
cmp
adc
add
dec
xchg
call
sbb
xor
fidivl
insb
jle
mov
xchg
xchg
jbe
push
dec
std
push
mov
cs
ss
insb
sbb
lahf
fdivr
arpl
jnp
lret
xchg
fidivl
dec
pushf
xchg
push
movl
ret
test
xorl
add
add
mov
shlb
hlt
repnz
lock
adc
div
jle
lcall
cltd
xchg
mov
outsb
std
mov
xor
outsl
sub
mov
add
cmp
xchg
dec
scas
shll
xchg
jb
out
div
adc
and
lahf
in
pop
mov
shll
fnstcw
jo
or
cmp
jecxz
movsl
lcall
mov
popf
push
mov
insb
cmp
or
mov
xchg
ret
subl
and
test
or
loopne
xor
jle
ret
and
jmp
mov
add
jb
int3
inc
or
add
movb
repnz
jle
fstl
in
iret
out
sub
dec
xchg
push
ja
mov
cmpsb
lods
jecxz
inc
stc
push
addr16
pop
test
ljmp
jne
mov
aas
push
lret
outsl
pop
fcoml
js
icebp
shlb
push
and
test
dec
cmpsb
pop
xor
insl
loope
outsl
popf
mov
cmpsl
mov
inc
cmp
push
daa
ja
je
push
inc
int
pop
repnz
cwtl
into
fstps
lods
push
push
out
out
mov
sub
test
dec
out
sbb
icebp
sahf
fmull
jle
jmp
test
sbb
lahf
dec
test
lcall
pop
inc
fsubs
jmp
scas
ljmp
mov
movsb
sahf
test
push
es
cmpsb
mov
pop
sbb
mov
mov
mov
repz
add
repnz
jno
pop
stos
bound
dec
mov
icebp
testb
jbe
mov
imul
adc
popa
lea
fdivs
xchg
pushf
sub
mov
sti
dec
mov
pop
lods
and
jmp
rol
mov
out
mov
and
push
das
cld
stc
pop
sub
fistps
mov
loopne
jns,pt
lds
mov
inc
out
push
add
mov
ret
and
xlat
and
pop
push
or
pop
push
imul
pop
pop
push
cmpb
sub
mov
or
inc
ss
jns
xchg
movsb
lahf
xor
or
push
and
cmpl
or
outsb
or
imul
pop
and
push
sbb
and
loope
loop
pushl
int3
adc
xchg
xor
sbb
data16
and
js
and
imul
pop
clc
fs
inc
mov
jmp
pop
lahf
dec
icebp
push
mov
cmp
sub
cmp
or
cwtl
mov
int3
sbb
shl
mov
mov
pop
mov
lock
pop
lret
sub
test
addl
test
inc
repz
lea
dec
lret
inc
out
out
ja
mov
pop
in
cmp
push
mov
sbb
xchg
cmpsl
sub
test
mov
popf
sbbb
in
inc
inc
outsl
xor
pop
int3
repz
fldcw
inc
jb
adcl
jno
pop
jge
jb
cli
push
xchg
add
pop
insb
outsl
sub
cmp
or
or
shrl
addr16
pop
pop
out
cmpsl
push
testl
or
lret
pusha
lods
push
xor
ja
or
and
sbb
lahf
nop
or
js
imul
cmpsl
aam
mov
popf
push
into
adc
xorl
jae
jle
mov
pop
leave
int
xchg
mov
or
lock
fs
ret
andl
mov
jecxz
sub
sbb
or
xor
and
out
jle
xchg
and
push
into
daa
out
jmp
jne
in
cmp
test
push
int
fcmovne
jp
xchg
push
popf
sub
sti
fstpl
pop
out
aam
push
hlt
imul
cmp
fiaddl
negl
orl
lods
ja
and
ss
imul
gs
pushf
ljmp
movsl
imul
pop
push
sub
push
sbb
sub
sbb
test
mov
out
mov
add
push
push
loopne
dec
pop
mov
loope
rcrl
loopne
jb
shl
and
jmp
clc
push
mov
outsb
pop
add
push
rcrb
or
repnz
mov
mov
cld
mov
inc
movsl
imul
sub
pop
xchg
es
mov
fistl
int3
in
movsl
addr16
ljmp
ret
or
adc
push
jo
daa
rorl
cmp
je
fstl
js
gs
cmc
int3
adc
inc
repnz
pusha
cmc
push
ss
fs
fldt
inc
subl
sub
add
in
inc
je
loop
sub
dec
out
sbb
mov
iret
stos
orb
sbb
rclb
test
mov
lahf
add
mov
lods
cmp
loope
dec
cmp
mov
or
xchg
pop
aam
push
outsl
xor
push
cmp
insb
pop
dec
dec
push
sub
popf
and
xchg
or
dec
leave
cmpsw
sbb
dec
xchg
xor
std
mov
je
lds
movsl
cmp
pop
fisttpl
pop
fsts
jno
stos
lock
dec
ss
lea
add
scas
repnz
sbb
pop
std
stos
cld
push
outsl
stos
and
sbb
mov
xchg
lcall
call
fcompl
push
dec
fldl
popf
mov
pop
subb
push
nop
lret
adc
xchg
into
xchg
pusha
jge
test
js
and
and
mov
mov
push
gs
inc
add
mov
or
push
jne
sbb
mov
aam
fsubrl
dec
les
dec
fstl
scas
outsl
or
jle
inc
xchg
jle
mov
xchg
inc
cwtl
jb
mov
mov
lods
xor
aam
pop
pop
cmc
lcall
push
push
or
movsl
pop
mov
cmc
jae
notb
stos
test
outsb
xchg
in
out
aam
insl
cs
cmp
mov
pop
fwait
jbe
fisttpl
mov
cmp
andb
xlat
inc
or
or
dec
cmpsb
add
add
aaa
cmp
dec
in
jl
adc
repz
into
cmpsb
sbb
test
cltd
jl
fs
movsb
cmpsl
xchg
jbe
xchg
sbb
xor
popf
sbb
out
hlt
jns
leave
jmp
in
movsb
mov
movsb
fldt
pop
data16
mulb
sub
or
pop
inc
and
sahf
sahf
push
test
push
aam
mov
adc
push
stos
sub
fidivrs
xor
les
jle
inc
sbb
and
adcb
in
les
mov
and
pop
jge
jle
xchg
jbe
sub
push
xlat
jno
add
add
cwtl
add
pop
add
imul
cmpl
push
ljmp
xchg
aas
testl
stos
fs
mov
add
add
in
mov
dec
mov
ds
ljmp
pusha
jbe
dec
aas
inc
ja
and
and
mov
sub
lahf
loop
inc
dec
xor
mov
push
adc
mov
not
pop
ss
mov
inc
pop
loope
mov
out
sub
ret
sbb
jmp
fidivl
clc
xchg
lods
xorl
mov
es
xchg
pop
sbb
lea
adc
ret
or
cmpsl
push
pop
movsb
cld
push
outsb
pop
sub
int
dec
sbb
std
out
jae
adcl
nop
lods
inc
add
pop
loopne
cltd
add
in
js
daa
adc
popf
out
cld
scas
mov
mov
andb
insb
lds
lret
xchg
jnp
add
pop
xor
adc
mov
aam
pop
jnp
cmp
push
and
dec
lea
push
cltd
hlt
mov
es
or
xor
xchg
movsl
adc
push
add
pop
loope
push
cmp
sbb
mov
xor
mov
arpl
sti
mov
mov
ficoms
imul
mov
cmc
sub
sti
jbe
rorl
sarl
test
push
hlt
shlb
mov
mov
shr
jo
cmp
push
push
mov
and
je
add
icebp
or
jl
mov
fdiv
xor
mov
gs
cmpsl
adc
mov
addr16
mov
shlb
fcmovnbe
hlt
cs
vmovsd
adc
cmpsl
scas
repnz
jmp
subb
shl
not
subb
or
out
pushf
cmpsb
movsl
fadds
mov
xchg
lock
jecxz
sub
add
cs
stos
insl
pushf
movsb
cmp
out
mov
sub
mov
adc
inc
lea
mov
clc
shll
mov
int3
and
pop
mov
ficoml
or
mov
sub
js
sub
jno
scas
xchg
cwtl
scas
stos
push
roll
xorb
push
leave
inc
sub
pop
fcmove
adc
test
xchg
adc
out
imul
data16
bound
dec
sbb
dec
hlt
nop
dec
mov
xchg
test
and
mov
add
lods
inc
lret
adc
out
icebp
or
rcll
jmp
push
push
clc
std
test
aam
cmc
mov
xor
addl
cmpsb
jbe
test
inc
notb
add
push
xchg
xchg
mov
xor
enter
push
data16
mov
mov
push
inc
sub
mov
pushf
sub
jl
cld
loop
add
adc
ret
ret
inc
sahf
cmp
aad
jnp
mov
loopne
push
jnp
adc
mov
dec
scas
push
out
add
lods
lcall
adc
xor
xchg
cld
mov
and
dec
lock
repnz
shlb
sbb
jbe
roll
popf
xor
mov
inc
rolb
adc
stc
pop
jae
xlat
or
rorl
jns
jns
xor
fcomps
push
cltd
adc
in
scas
inc
xchg
loop
dec
fbld
xor
out
jge
cwtl
mov
push
ss
mov
cmp
je
pushf
inc
push
push
dec
enter
stc
repz
mov
cmpsl
testl
scas
testl
into
loope
cltd
iret
push
clc
xorb
fiaddl
adc
mov
pop
cwtl
clts
rorl
add
mov
mov
mov
dec
repnz
negl
adc
sub
xchg
pop
cs
enter
adc
je
pop
hlt
or
cmpsl
push
les
and
ret
shlb
cmc
mov
dec
jecxz
inc
sarb
cld
pop
cmp
or
es
fimuls
stos
aaa
mov
jns
pop
and
popa
daa
xor
inc
xlat
mov
mov
and
test
pusha
int
das
sub
sarl
and
pop
mov
sbb
loop
bound
shll
mov
ret
push
push
inc
mov
sub
std
fwait
data16
sbb
push
jmp
inc
sub
adc
push
push
repz
sahf
push
jno
inc
dec
sub
jns
cmp
pop
imul
push
or
outsl
jae
adc
dec
shl
fcomp
jge
mov
inc
call
mov
mov
rcr
es
xchg
add
adc
stc
pcmpgtb
mov
dec
inc
pop
sbbb
adc
or
pop
in
dec
shll
aaa
in
scas
push
daa
push
rclb
sbb
dec
dec
stos
call
dec
xlat
lods
lret
cltd
adc
in
sbb
cltd
xchg
and
cmp
xor
int3
icebp
ficoms
inc
mov
mov
mov
test
js
rcr
mov
xchg
inc
mov
pop
xchg
or
int3
add
pop
inc
or
popf
xlat
testl
dec
decl
insb
scas
fwait
scas
jg
dec
xor
mov
add
gs
enter
imul
cmpsl
test
jo
jecxz
dec
addb
jp
adc
cmp
aas
sub
ret
mov
jp
xlat
shll
jnp
mov
aad
xchg
into
in
cli
pop
popa
sub
mov
insl
aaa
jge
lods
or
stc
sub
jae
pop
rcr
and
mov
xchg
in
push
dec
fcoms
sbb
inc
fwait
aam
fsubrs
in
icebp
scas
mov
lds
pop
jae
ljmp
mov
aam
aam
pop
out
dec
adc
pop
mov
ret
mov
adc
mov
int3
aaa
jne
outsb
add
add
stc
movsb
fisubs
push
dec
mov
mov
rorl
sub
pop
mov
orb
xchg
xor
jmp
int
fcmovnbe
test
sub
inc
js
mov
out
pop
adc
repnz
mov
data16
adc
inc
push
movsb
push
and
stc
repz
mov
nop
jns
dec
sub
ret
xchg
ret
mov
push
xor
dec
push
xor
pop
dec
leave
mov
rorb
sbb
add
shlb
mov
cld
dec
and
imul
ret
jp
gs
imul
fdivrs
dec
inc
sub
pop
xor
cld
rcl
stos
push
cmpsb
int3
popa
push
mov
xor
sahf
xchg
into
xchg
lods
adc
xchg
les
repz
or
out
hlt
dec
pop
jne
fildl
mov
lea
stos
dec
mov
test
insl
pop
push
xchg
adc
dec
sub
lret
sbb
sbb
ja
add
into
sub
cmp
push
jnp
cmp
aam
dec
mov
adc
adc
xor
dec
shrl
or
or
mov
movl
je
ds
ljmp
loop
push
push
in
add
stc
xchg
ret
mov
iret
sub
fistpll
add
out
imul
sbb
adc
loop
pop
insl
ret
adc
ret
jge
movsl
ficoms
pop
dec
fstl
jmp
and
mov
fstpt
push
shll
jmp
push
xchg
xchg
jecxz
or
stc
lahf
mull
imul
jmp
adc
test
pop
sbb
jg
sub
and
inc
aaa
out
imul
jle
test
mov
push
cs
mov
fsub
xlat
push
lcall
mov
dec
stos
mov
aam
divl
sti
mov
mov
mov
pop
sahf
jno
mov
xor
into
mov
inc
adcl
cmp
fldenv
jmp
aad
fldenv
ljmp
mov
xchg
test
pop
pusha
pop
popf
sbb
mov
cmp
xchg
mov
std
mov
fsubr
xor
cs
pop
pop
insl
and
scas
fidivs
or
lock
pop
jns
mov
std
rcl
gs
xor
xchg
popf
push
cmc
xchg
test
movsl
jnp
or
idivb
aas
mov
mov
xchg
dec
std
cmp
aaa
xor
and
lahf
sbb
outsl
sbb
push
and
jo
add
sbb
pop
popf
das
jecxz
and
jne,pt
aam
call
data16
dec
ja
leave
cltd
mov
inc
jp
lret
pop
mov
int3
data16
mov
add
cltd
jbe
fmul
inc
icebp
in
stos
in
idivb
adc
mov
fiadds
insl
push
xor
jb
in
sbb
mov
cltd
int
repnz
js
jle
adc
mov
popa
scas
out
repnz
sub
nop
fildl
leave
rorl
cwtl
push
jns
mov
pop
inc
jl
and
and
test
sti
pop
sub
int
sti
loopne
and
xchg
adc
push
das
mov
adcb
and
ja
mov
bnd
add
inc
fadds
into
call
xchg
sbb
xchg
rcrl
sti
out
xor
push
mov
adc
fwait
mov
push
ss
orl
dec
in
pop
inc
cli
adc
mov
ficompl
mov
aaa
jbe
mov
movsl
mov
fadds
push
jge
xor
and
je
add
in
je
je
xor
insb
sub
cmpl
adc
mov
push
daa
shl
outsl
stos
fimull
adc
sub
pop
add
ja
pop
mov
sbbb
int3
xchg
andb
hlt
pop
ljmp
frstor
or
outsl
cwtl
mov
xlat
fnstenv
xchg
push
push
aas
stos
jo
nop
sbb
mov
mov
inc
or
insb
and
in
dec
pop
cwtl
mov
jg
test
inc
push
mov
popf
xchg
or
aad
or
xchg
dec
and
mov
xchg
and
sub
cmc
sbbl
cs
xchg
dec
pop
xor
add
clc
mov
outsl
daa
inc
ret
mov
xchg
dec
xchg
outsl
mov
sbb
xchg
fisttpl
cmc
rcrb
pop
test
aad
cmpsl
add
cs
insb
shl
push
sbb
inc
js
or
gs
sahf
mov
cmp
nop
lock
inc
jle
int3
cld
pushf
pop
pop
lea
jns
xchg
rolb
jmp
sub
addl
leave
cmp
test
pop
call
in
test
fldl
fsubrl
jmp
mov
insl
xchg
jo
pop
and
popa
pushf
sbb
mov
inc
cmpsb
fsubr
in
inc
jg
stc
mov
adc
pop
jle
movsb
sbb
jge
xchg
in
push
and
or
cmp
rolb
sarl
cmp
dec
orps
push
ss
mov
in
or
stc
adc
sub
in
cmp
pop
lcall
cmpsl
xchg
cltd
xor
aad
enter
repnz
cmpsb
iret
inc
stc
scas
int3
repz
xor
sbb
addb
push
adc
xchg
sbb
mov
mov
xor
das
loope
sarl
or
or
pop
sahf
push
sbb
imul
push
jno
out
and
lret
sub
mov
mov
loopne
adc
xlat
out
mov
adc
xchg
not
out
mov
xchg
fists
pushf
repnz
lcall
sub
mov
out
dec
sbb
jbe
jmp
enter
in
pushf
shrb
lock
dec
adc
hlt
or
inc
add
or
mov
jbe
adc
jae
jmp
push
or
fnsave
pop
mov
push
popa
adc
lock
lret
jecxz
push
mov
popa
sahf
pop
inc
jmp
mov
inc
in
repz
xchg
shll
insl
andl
push
int3
loopne
mov
jnp
add
mov
xchg
mov
std
sbb
fistps
xchg
or
hlt
cli
cmp
mov
push
mov
inc
insb
lcall
mov
iret
sub
stc
jl
mov
cmp
lret
or
ficompl
aam
pop
mov
cmp
pop
xchg
push
xor
repz
test
xor
add
mov
int3
pop
sub
dec
lods
insb
inc
insb
mov
fdivrl
cmp
inc
adc
fistl
inc
fldt
es
ja
mov
dec
dec
mov
add
xchg
jle
cmp
shrb
or
fdiv
xchg
das
les
leave
mov
into
adc
popa
pop
jns
imul
leave
ret
insl
push
mov
mov
mov
jg
mov
cmc
push
imul
ret
sarl
mov
push
xchg
pop
std
inc
sbb
push
sbb
inc
shlb
xor
cmp
iret
repnz
iret
push
sub
sahf
mov
mov
hlt
stos
adc
data16
cmp
cmpsb
dec
add
pop
lret
sbb
mov
push
outsb
enter
mov
pop
dec
call
stos
ljmp
das
fadd
jbe,pn
and
jg
daa
cmp
xchg
and
mov
in
fdivrs
mov
or
cmova
pop
add
cmpb
jbe
pcmpgtw
adc
icebp
outsb
fcmovnu
sub
mov
movsl
and
mov
test
dec
mov
test
mov
gs
or
insb
out
xor
cmp
jge
xchg
add
pusha
lods
lds
xchg
jle
inc
out
sahf
fisubl
cmp
jmp
pop
fdivrl
xchg
add
ljmp
sbb
popa
into
push
pop
adc
cmpsb
mov
inc
sarb
pushf
mov
xchg
add
sub
aaa
push
into
push
mov
aam
loope
roll
out
push
ds
and
rol
sti
jl
mov
enter
sbb
ljmp
xor
inc
xor
xchg
sbb
sbb
int
dec
dec
enter
xchg
sqrtps
hlt
dec
call
jp
aaa
pop
test
mov
fadd
sbb
ret
lret
mov
inc
repz
jnp
fwait
in
mov
fsubs
rcl
mov
add
lea
sbb
fadd
mov
add
cltd
pop
push
mov
jmp
mov
xor
movsl
incb
clc
jbe
rcl
and
rcl
mov
dec
in
add
mov
stos
cmp
push
outsl
loope
daa
cmc
xchg
leave
incb
xor
adc
push
add
jae
lock
fistpl
xor
ja
test
xchg
mov
jbe
adc
mov
inc
xchg
or
pop
and
in
jecxz
popf
and
stc
and
out
inc
imul
fisubs
es
ret
adc
test
loope
lahf
cmp
out
mov
sub
mov
mov
dec
lods
dec
xchg
push
xor
mov
repz
out
add
idivl
cmp
stc
xchg
rcrl
orb
rcrb
dec
cmpl
sbb
pusha
decl
xchg
les
xchg
fstps
and
xchg
imul
inc
cmc
pushfw
mov
cmp
ss
sbb
xchg
add
xchg
test
push
sub
xor
fsubl
pop
sub
adc
mov
jge
mov
das
test
insl
cmpsl
call
lock
and
int
fisubs
push
and
xor
fdivp
mov
push
jle
mov
mov
pop
push
ds
mov
inc
ss
cmpsl
ret
lea
xchg
push
test
lret
test
cmc
xchg
fbstp
or
xor
rcr
pop
icebp
and
leave
cmp
add
repnz
in
push
aad
fsubrl
lcall
dec
dec
pushf
mov
rolb
adc
imul
dec
les
mov
or
and
dec
sub
outsl
jmp
push
inc
test
xor
inc
xor
mov
out
mov
aam
ss
dec
xchg
cmp
xchg
or
sbb
mov
nop
push
aas
repnz
movsb
xor
gs
mov
sub
cmpsl
add
test
push
mov
ljmp
or
addr16
xchg
push
test
cmpsl
fldcw
push
mov
sbb
aas
pop
inc
dec
mov
cmc
xor
inc
jnp
popa
xor
jmp
xchg
lret
cmp
in
jnp
xor
test
mov
mov
sub
scas
test
pop
sti
inc
pop
xor
jg
inc
dec
cmpsl
sbb
scas
andl
gs
jmp
imul
inc
aad
jns
push
mov
mov
mov
out
xchg
clc
mov
pusha
in
xor
sti
push
mov
mov
sbb
movsl
shrb
out
mov
mov
icebp
mov
adc
lret
adc
and
sbb
cld
mov
je
adc
mov
push
inc
inc
sub
xor
ljmp
mov
cmpsl
xchg
mov
pushf
shll
test
clc
aas
outsl
scas
ja
and
xchg
decl
popa
jo
sahf
mov
and
mov
mov
dec
jmp
stos
push
xchg
mov
mov
add
in
xchg
outsb
and
pop
jbe
push
rolb
repnz
in
fdivp
add
cmpsb
and
adc
movsl
push
movb
jecxz
sbb
mov
clc
adc
lea
int3
pop
ljmp
test
sub
scas
int3
add
adc
loop
push
divl
les
and
xor
jnp
or
pop
inc
movsb
or
pop
xchg
jo
out
pop
aas
cli
sbbb
scas
lahf
pop
add
lret
stos
xchg
cmp
loope
sbbl
cld
pop
pushf
sti
or
push
ja
rol
mov
jl
pop
sub
imul
xor
jecxz
mov
pop
mov
js,pn
insl
sub
repz
rclb
xchg
xchg
lcall
xchg
lret
jmp
jecxz,pn
and
mov
jecxz
and
cmpsl
sub
cld
dec
sbb
dec
imul
push
cmovns
sub
cmpsl
mov
jo
inc
add
dec
aaa
ljmp
int
fdivrs
popa
icebp
std
sub
jae
out
popa
hlt
testb
mov
adc
pop
push
sbb
sbb
sub
adc
pop
and
aas
or
in
push
adc
dec
js
jae
push
xchg
popf
mov
repnz
mov
div
pop
hlt
outsb
sub
pop
or
jo
adc
outsb
dec
add
mov
call
popf
mov
push
pushf
mov
adc
je
mov
xor
xlat
dec
jb
add
pop
mov
jbe
mov
arpl
cmp
sub
push
ret
adc
push
xlat
shll
sbb
push
test
popf
scas
xor
sti
jle
imul
add
ret
ljmp
addr16
push
hlt
call
dec
inc
xchg
inc
dec
xor
imul
add
adc
xor
into
movsl
and
add
ja
ja
out
jl
rorb
cwtl
xor
xchg
mov
xchg
test
mov
cmp
cltd
mov
jb
scas
loop
and
xchg
clc
ljmp
dec
push
xorb
sbb
xor
out
dec
push
xchg
or
shl
mov
xchg
lahf
les
adc
in
repz
stc
or
inc
mov
mov
xchg
mov
cmpsl
je
mov
push
ss
xchg
mov
or
ja
stos
dec
lea
flds
loope
jp
fstps
pop
lds
out
mov
das
lea
setns
cmpsl
xchg
clc
mulb
div
cmpsb
lret
in
jle
add
scas
mov
push
cwtl
adc
sti
mov
sub
lods
inc
push
xchg
mov
and
outsb
jne
inc
jp
outsl
imul
xchg
roll
leave
movsl
aaa
pop
jl
xchg
xchg
push
adc
mov
daa
lods
cmp
add
adc
outsb
add
mov
aam
mov
fstl
add
inc
cmp
sbb
mov
push
mov
xor
std
test
cmp
lods
adc
aam
scas
jl
mov
xchg
clc
aaa
pop
push
in
fiaddl
lcall
inc
inc
jo,pn
repnz
fbstp
insl
sbb
das
int
leave
adc
insl
jmp
pop
mov
inc
push
sub
jmp
or
imul
mov
lods
jb
push
sub
dec
add
ret
ss
rol
sti
std
in
mov
std
xor
xchg
clc
or
mov
scas
out
and
call
ljmp
mov
jle
ljmp
or
stc
xchg
hlt
sbbl
fstpl
inc
movsl
inc
pop
sahf
lcall
popf
adcb
lds
fldl
mov
xchg
aam
cmpsl
stos
jnp
outsb
push
ffreep
mov
in
fwait
aaa
and
js
jp
jb
aaa
or
repnz
sbbb
int3
inc
cltd
cmpxchg
jb
popf
cmp
out
orb
nop
int3
push
cmp
bnd
fldl
and
xorb
cwtl
pop
add
mov
outsb
inc
pop
inc
cltd
aas
push
mov
and
sbb
inc
push
pusha
xor
or
outsl
fcomps
loop
ss
stc
cmpsb
pushf
cli
sub
fldenv
push
jnp
dec
xchg
incb
cltd
sbb
pop
add
add
out
xchg
inc
push
xchg
cli
inc
jnp
add
adc
inc
popf
testb
icebp
clc
movsl
lock
ss
je
mov
sahf
fs
scas
xchg
cmc
or
pusha
in
repz
test
fistpll
push
sub
push
shrb
pop
daa
sbbl
push
int3
pop
and
outsb
xchg
mov
or
inc
ret
push
push
pushf
push
sbb
insl
pop
mov
adc
mov
cmpsb
mov
pushf
pushf
adc
sbbb
bound
push
mov
in
repz
xchg
mov
sahf
inc
xor
outsl
lahf
aam
inc
int
push
jge
xlat
push
pusha
sub
daa
mov
push
mov
stos
mov
mov
subb
jmp
jg
push
leave
add
lods
mov
adc
jp
sahf
ljmp
xchg
inc
aam
xchg
mov
shl
mov
jecxz
movsl
lahf
jg
mov
lods
push
lcall
out
pop
cmc
std
rolb
stos
fwait
sbb
xor
pop
popf
push
jge
mov
ja
loopne
pop
mov
mov
pop
enter
xor
add
push
inc
out
adc
push
inc
negb
push
js
outsb
xchg
or
xchg
push
jle
mov
inc
cmp
lock
xor
add
cmp
movsb
movsb
cmp
inc
jg
cmc
popf
filds
aas
mov
xchg
push
mov
fwait
call
ret
das
mov
xor
aaa
dec
pop
add
cli
rcr
push
ss
sub
ss
jle
push
stos
dec
inc
je
iret
addr16
repnz
jo
repnz
fistps
popf
neg
jg
out
mov
arpl
sbb
xchg
mov
inc
or
mov
push
mov
and
xor
cmpsb
or
fstpl
int
out
push
mov
lret
orl
insl
movsl
add
fmull
insl
ficompl
xor
xchg
arpl
cmp
push
xchg
inc
xorb
loop
popl
dec
push
out
push
inc
test
inc
pop
and
clc
push
aad
fisubs
xchg
cmp
adc
in
and
and
jae
sub
or
fcomps
xchg
push
sahf
mov
popf
out
int
add
gs
fdivl
pop
lcall
mov
imul
sbb
fwait
imul
in
cmovno
shl
sbb
xchg
push
xor
movsb
call
stos
loop
popa
pop
je
push
xor
mov
and
jo
mov
add
push
mov
push
jo
jle
adc
das
xor
loope
dec
inc
orl
addr16
inc
lock
clc
sbb
psubsw
sub
int
xchg
jg
into
fidivrl
bound
scas
mov
adc
jns
lock
adc
and
fildl
testl
push
xchg
mov
testl
mov
mov
dec
inc
pushf
add
jo
nop
dec
cmpsb
mov
fsts
gs
cltd
int
iret
mov
dec
pop
sahf
or
dec
ss
cli
mov
jp
test
sub
and
or
xor
orl
dec
iret
inc
fwait
and
jp
jl
cmp
sub
dec
sub
dec
rolb
test
dec
das
inc
icebp
lock
xchg
or
loop
loope
or
fildl
imul
mov
xchg
imul
adc
in
aas
mov
fldcw
stc
idivl
xchg
inc
adc
jge
lods
sbb
shl
lret
mov
outsl
mov
ret
fcmovnb
jnp
lcall
cli
xchg
xlat
inc
inc
mov
shl
jns
pop
and
jbe
mov
push
pop
shrl
cmc
and
or
std
inc
cld
pop
cmp
push
out
adc
daa
cmp
dec
out
mov
in
sbb
andl
inc
cli
dec
inc
ss
test
insl
jp
mov
into
pushf
dec
adc
shl
push
cmp
jmp
int
cmp
in
ret
ffree
pop
dec
mov
outsb
shl
popf
jns
add
mov
in
xor
lds
mov
arpl
das
mov
mov
sarl
and
mov
cmp
mov
jns
clc
sbb
push
fidivrs
iret
mov
mov
jno
call
js
mov
jmp
mov
shl
jge
xor
sarb
xchg
int3
cmp
cmpsb
xchg
cmp
xor
int
movsb
cld
decb
push
frstor
push
cli
leave
shrl
mov
call
pop
dec
jge
cs
push
inc
cmp
mov
mov
or
and
dec
cmpsl
sbb
clc
mov
pop
mov
lret
mov
ss
mov
jmp
into
and
addr16
xchg
or
push
jne
and
das
push
data16
xchg
mov
movsl
inc
inc
mov
lret
inc
mov
mov
leave
jbe
sbb
adc
jo
xchg
mov
in
pop
push
imul
pop
mov
push
push
sbb
shrl
lods
mov
adc
sti
and
stos
les
adc
mov
cmp
mov
mov
sbb
ljmp
dec
dec
sahf
or
mov
xor
orb
xchg
mov
hlt
aad
xor
testl
ja
xor
int3
pop
mov
lock
pop
xor
lret
adc
popf
pop
in
ret
mov
shll
adc
sub
fcomps
mov
fimull
call
push
and
gs
mov
imul
cmpsb
lahf
jmp
push
aas
idivb
fnstcw
mov
lret
jle
out
cltd
add
stc
jae
cs
sbb
rolb
aaa
pop
dec
pop
xlat
pop
icebp
dec
popf
in
loopne
into
fistpll
outsb
jnp
sbb
jno
sub
sbb
in
inc
jg
out
popa
fs
sub
add
roll
xchg
in
cmpxchg
adc
dec
jle
xchg
mov
or
pminub
adc
call
sbb
mov
ret
fs
sub
xchg
pop
add
es
fs
sub
jne
mov
fnstenv
inc
adc
call
inc
fadd
xchg
push
xchg
push
nop
mov
mov
scas
inc
es
fstpl
inc
inc
scas
lods
xchg
push
cli
out
call
loope
cmp
lods
mov
xlat
inc
cmpsb
push
lods
add
test
xchg
dec
das
test
enter
outsb
jp
add
sub
mov
movsb
loope
lcall
int
push
dec
add
pop
and
sub
int3
imul
pop
dec
adc
leave
popa
fadds
sbbl
idivl
and
mov
mov
lret
insl
imul
loope
adc
cld
cmp
pop
sub
or
xchg
loopne
lods
xor
add
mov
icebp
pop
pop
xchg
test
pop
addr16
pop
testl
cwtl
jecxz
jl
subl
jb
push
mov
subl
ljmp
mov
jl
mov
pop
jno
mov
in
sub
mov
out
mov
xor
mov
mul
push
jle
aaa
cwtl
inc
lea
and
sbb
in
sar
jg
repz
shl
int
dec
loop
or
cmovb
aas
pop
cmpsl
xchg
je
sbb
aaa
sub
jnp
cmpsl
jne
out
inc
outsb
sbb
shl
inc
hlt
xlat
divb
fdivs
dec
aad
adcb
pop
popa
and
imul
jge
int
data16
rolb
shll
lcall
repnz
sub
mov
adc
insb
mov
test
sub
inc
sub
ja
jl
and
mull
sub
mov
push
shrl
xor
add
out
stc
mov
pusha
adc
aam
in
mov
xor
xchg
lods
xor
nopl
and
repnz
loop
xor
fcompl
push
sbb
repz
push
repnz
jns
pop
jl
in
cmc
pop
xor
adc
fs
sub
push
mov
ja
or
ret
cwtl
mov
movl
call
popf
pop
cmp
jae
adc
xor
cltd
mov
cs
adc
test
jns
add
jecxz
call
push
mov
add
sbb
out
or
outsb
push
and
clc
mov
ds
mov
mov
and
out
cmc
mov
jo
adc
mov
hlt
iret
arpl
add
cmpsb
icebp
mov
scas
dec
js
in
test
cmpsl
enter
sbb
mov
test
sbbl
mov
sti
jb
cli
in
jecxz
pop
push
mov
and
lods
mov
mov
movsl
xchg
xchg
push
je
pop
cwtl
cltd
sub
lods
lock
xor
push
sub
and
ret
pop
jl
filds
mov
sbb
movsl
mov
adc
subb
out
and
inc
in
out
in
and
cwtl
dec
dec
sbb
mov
pop
mov
arpl
cmpsb
imull
aam
push
in
into
in
and
je
mov
stos
xor
icebp
aas
je
jb
pop
and
xor
scas
fnstsw
call
pop
xor
fdecstp
ret
enter
orb
mov
add
push
loope
lret
in
outsb
dec
jg
jmp
idivl
orb
inc
aad
pop
into
call
cmpsl
inc
push
loopne
inc
fnsave
xchg
add
add
bound
stos
and
push
jno
xchg
xchg
outsl
aaa
dec
test
cmc
aas
dec
jg
add
or
cmpsb
xchg
sarb
hlt
jnp
rcll
or
nop
add
ret
inc
cmp
add
xorl
not
pop
loop
cmp
adc
pop
and
dec
add
push
idivb
push
dec
je
inc
pop
scas
sahf
mov
jbe
and
pop
ficoms
ss
mov
popl
sbb
icebp
inc
test
int
xchg
pop
sbb
inc
or
mov
mov
fstps
adc
xor
mov
filds
add
test
shlb
sub
xchg
push
mov
jns
negl
loopne
out
gs
leave
cmp
push
xchg
and
xor
push
lods
xlat
fs
sub
scas
and
xchg
add
xor
fisubrs
lret
std
repnz
leave
inc
orb
push
add
aad
xchg
fistpll
lret
mov
add
jne
ds
ds
xlat
fcmovne
clc
aad
fistpll
xor
and
rorl
jb
shr
rcrb
leave
int
push
xchg
push
es
lods
cmpsb
or
pop
mov
lahf
push
pop
insb
ljmp
js
push
pop
popf
jmp
mov
jp
lahf
and
xor
clc
push
std
ja
jne
dec
push
xchg
cmc
lods
xchg
sti
add
jnp
sbb
lcall
cmc
nop
les
xor
pop
push
dec
das
xor
and
jne
xchg
adc
jecxz
in
sbbb
jne
xlat
cmp
aaa
mov
xchg
ret
pop
hlt
sbb
shrl
add
in
push
jecxz
xor
add
shll
inc
push
and
pop
roll
call
imul
icebp
sub
lret
icebp
repnz
sbb
les
imulb
mov
dec
push
outsb
arpl
clc
adc
les
jmp
adc
jbe
sub
data16
pop
aas
jl
test
pop
push
or
faddl
xchg
ret
push
jp
inc
lea
adc
ret
xor
stos
fstl
pop
mov
bound
fxch
jne
retw
call
pop
sub
and
push
out
dec
mov
push
sub
xchg
inc
mov
lcall
hlt
inc
sub
pop
add
icebp
push
in
cmp
lret
sbb
nop
popf
xor
push
cmp
orb
add
sub
shrl
jb
add
dec
out
inc
test
popa
xor
sub
insb
push
ret
arpl
test
fcmovu
pop
pushf
stc
inc
outsb
pop
test
adcl
loop
jmp
arpl
or
lcall
xor
ljmp
xor
stos
adc
lret
push
loopne
or
fidivl
lret
jnp
fistl
and
daa
mov
cmp
cli
pop
inc
lods
into
hlt
cmp
push
jae
notl
jnp
cmpsb
push
mov
cld
push
stos
icebp
pushf
testl
lods
popa
cwtl
outsl
sbb
mov
out
or
loope
repz
les
incb
fcoml
leave
pop
insb
dec
in
rcrl
cs
decl
xor
cmpsb
adc
call
js
sbb
test
fmull
icebp
push
rorb
lock
mov
jo
mov
or
iret
fcomps
cmpsl
inc
pop
in
inc
inc
leave
push
fnsave
jbe
rol
xchg
mov
pop
mov
mov
fmuls
int3
cmpl
negl
mov
loope
inc
or
jae
mov
sub
fs
inc
mov
mov
popf
movsb
pop
ljmp
and
push
lret
cmpsb
sbb
cwtl
call
adcb
ljmp
imul
rorb
fiadds
push
subb
mov
xchg
mov
es
stc
pop
dec
addr16
add
cmp
movsb
adc
icebp
mov
sub
sbb
mov
rcll
leave
cmp
xchg
jae
into
subb
outsb
inc
sub
add
lea
jae
and
cwtl
rcrb
xlat
dec
mov
xchg
addl
adc
fucomp
xorb
lcall
adc
push
popf
jnp
enter
push
inc
js
mov
mov
ljmp
into
jmp
cs
fs
insl
ss
inc
mov
inc
add
add
push
test
mov
sbb
sub
insb
mov
mov
and
sarb
mov
cmp
dec
push
jo
dec
sub
out
jge
movsl
add
mov
sarl
incl
je
xchg
xor
sbb
lds
lods
push
mov
jae
mov
cmpsl
pop
movsb
xchg
leave
mov
pop
mov
fcomps
out
push
insb
jbe,pn
in
test
mov
jecxz
ja
xor
repnz
and
jge
dec
stc
test
pop
jge
cmpsb
fiadds
in
pusha
mov
lahf
in
push
pop
pop
lock
ljmp
adc
into
aaa
mov
xchg
push
cmp
jg
push
sbb
cmpsb
iret
or
xchg
std
movsb
loop
mov
and
add
xor
clc
push
mov
faddp
sbb
xchg
lock
test
aas
repz
pop
mov
mov
mov
cmc
lahf
test
shll
popf
aaa
daa
dec
mov
out
adc
mov
shll
adc
pop
cld
adc
fdiv
push
add
push
xchg
and
push
cld
int
push
inc
push
pop
ljmp
pop
adc
push
sub
fimuls
lret
in
xor
fidivrs
cld
sub
xor
out
in
stos
jns
cs
cs
pop
fadds
mov
xorl
aad
mov
andl
dec
imul
pop
out
mov
je
aad
pop
cmpsl
pop
outsb
sbb
inc
adc
dec
jl
fsub
or
ja
lahf
push
cld
insb
xchg
es
lods
push
mov
imul
shr
fst
sub
filds
sbb
leave
mov
aaa
ja
leave
add
subb
inc
or
dec
jmp
aam
sub
js
mov
insb
mov
add
lock
ud0
jnp
mov
addb
cmp
cmpb
xor
pusha
scas
mov
xchg
push
push
mov
mov
movsl
lahf
and
stc
jne
dec
stos
out
aaa
jae
sub
fwait
pop
or
fidivrs
pop
pop
push
inc
mov
or
lods
rolb
sahf
in
sbb
lods
sub
and
xchg
sub
pop
jg
xchg
pop
push
pop
or
xchg
mov
xchg
out
dec
adc
xchg
jb
in
inc
inc
loopne
pop
cmpsl
xchg
test
adc
inc
pop
movsl
icebp
xchg
shl
dec
mov
mov
addr16
fisubrl
ds
add
mov
loopne
xchg
push
add
or
rcrb
es
or
dec
add
lods
fisubs
bnd
jg
js
jecxz
jg
cwtl
imul
cmpsb
sbb
aam
xchg
ja
jecxz
into
dec
pusha
push
mov
xchg
test
cmpsl
inc
rolb
test
fs
jnp
fisttpll
dec
xor
sahf
sub
add
popa
in
jle
push
in
add
inc
scas
mov
inc
mov
push
push
decl
out
or
mov
mov
jno
jmp
xchg
pop
and
xchg
cmp
aaa
mov
and
and
mov
iret
popa
dec
adc
jle
push
rcrb
sbb
jo
lahf
mov
rol
jl
cmp
add
xor
xchg
popa
dec
jnp
xorl
jmp
push
cmp
add
fdivrp
in
shrl
leave
rcrl
mov
out
add
pop
outsl
xchg
add
mull
xchg
clc
sub
test
movsl
xchg
xor
das
cmpsb
cli
xor
sbb
xchg
lahf
pop
or
jle
mov
push
sbb
adc
es
mov
xchg
fstpt
or
out
adc
sbb
sti
fisttpll
call
in
mov
ret
dec
nop
xor
cli
insb
nop
push
inc
repnz
es
sub
cmp
cmp
jbe
jg
testl
stos
shrl
xlat
sub
lods
fimull
fcoml
pop
arpl
xlat
dec
ljmp
pop
insb
xor
pop
jp
aaa
mov
insb
dec
aas
pop
sub
mov
hlt
loope
add
les
sbb
mov
mov
ficoml
jl
dec
pop
testl
mov
rcl
inc
lock
inc
imul
repz
pop
lods
pop
test
push
and
fadd
jge
and
jne
mov
sbbl
and
xor
and
cmc
xchg
popf
pop
mov
jne
and
inc
jae
push
mov
daa
icebp
pop
push
hlt
and
repz
gs
test
mov
mov
jnp
ds
sahf
inc
fwait
lods
inc
test
repnz
hlt
aaa
mov
adc
cmpb
fisubrl
fiadds
and
rcll
and
xchg
push
nop
add
pop
xor
lds
in
or
addr16
mov
jne
add
in
jae
sbb
mov
addr16
loop
sahf
cmpsl
sbb
adc
inc
mov
loop
aam
ja
cmp
pop
xor
and
xchg
and
push
push
dec
jns
push
outsb
sbb
mov
push
imul
mov
bound
hlt
sub
mov
add
jecxz
ror
imul
fimuls
xor
sbb
enter
sub
xchg
or
shlb
adc
mov
enter
cmc
call
shll
aas
ret
out
inc
fbstp
insl
ret
ljmp
push
jne
xchg
in
xchg
dec
outsb
mov
mov
push
xor
xchg
sbb
inc
cmp
insl
inc
adc
push
outsl
fs
adc
sub
aam
outsl
mov
xlat
and
lret
ss
ret
repnz
mov
inc
jo
shll
xchg
daa
into
pop
into
stos
jge
pop
adc
data16
cwtl
in
sbb
fnstsw
in
nop
movsl
push
ss
gs
insl
orb
mov
das
adc
adc
icebp
jge
filds
scas
rcrl
aas
lock
or
mov
cmpsl
dec
mov
xchg
sbb
mov
std
pop
imul
popf
loope
mov
repnz
mov
lds
fstpt
cltd
mov
mov
rclb
dec
mov
push
mov
pop
and
popa
xor
movb
cmpl
jge
add
xchg
jecxz
sub
jae
cmc
push
add
push
push
int3
pop
sbb
mov
push
dec
pop
fimuls
add
sub
sarb
mov
ret
ret
aam
jo
std
push
mov
pop
cmp
cmpsl
sbb
mov
sub
out
push
ret
push
sbb
mov
adc
mov
pop
test
adc
jo
xor
pop
xor
sti
sbb
adc
in
mov
fisttpl
decl
inc
jp
pop
or
shl
aaa
movl
movsl
jno
mov
repnz
inc
fisubl
mov
or
mov
test
js
scas
stc
ret
push
xor
and
inc
mov
out
pop
and
loop
jae
and
adc
xor
mov
imul
adc
mov
push
pop
push
adc
scas
jle
push
mov
and
and
roll
push
add
call
stos
loope
cmp
xor
and
ja
xor
add
jle
mov
jb
adc
shl
fcoml
cmp
icebp
imull
mov
pop
push
pop
ret
cmpsl
push
or
lods
add
pop
pop
adcb
mov
scas
adc
mov
imul
test
negb
and
mov
sub
adc
push
mov
ds
lret
ss
in
sarl
rorb
push
mov
repnz
imul
dec
push
pushf
pop
test
aad
lea
add
bound
cmp
mov
loopne
xor
inc
xor
xchg
popa
cmp
inc
mov
and
sub
shlb
leave
fsubrs
push
in
mov
lahf
adc
push
es
mov
mov
lcall
cld
pop
dec
mov
inc
clc
cmp
jmp
or
in
fbld
nop
cld
mov
in
cmpsb
mov
xchg
add
dec
in
bound
sbb
divps
or
mov
xor
jle
cmc
jmp
xchg
xchg
incl
into
pop
and
jae
xor
mov
icebp
jle
cld
ret
stc
sub
jno
pusha
xor
shr
or
stos
scas
arpl
cmp
imul
pop
loope
xchg
add
shll
faddl
fldl
arpl
push
adc
loope
ss
add
addr16
xchg
js
stc
or
addl
dec
inc
les
xorb
inc
xchg
ljmp
mov
xor
js
adc
enter
mov
ret
inc
jnp
xchg
cmc
adc
loope
pop
test
lret
shrb
mov
mov
push
in
bound
aad
movsl
mov
sbb
cwtl
call
scas
mov
inc
cwtl
xor
das
out
dec
push
ret
cmp
or
or
mov
xchg
inc
sub
bswap
out
mov
cmp
int
mov
arpl
inc
daa
and
cmp
push
dec
sub
jbe
subl
mov
jmp
mov
mov
mov
loopne
shll
sahf
imul
rsm
mov
mov
iret
fldenv
jns
xor
movsl
cltd
xchg
cmp
ds
pop
pop
sbbl
lea
push
pop
adc
ret
iret
jb
xchg
mov
or
outsb
lea
inc
xor
ljmp
cmp
pop
mov
add
mov
repnz
push
stos
xchg
fs
jmp
lea
stos
pop
div
add
out
ret
lret
and
stc
movsb
mov
popf
or
mov
in
and
movsb
xor
jno
movsl
lock
and
movsl
pop
xchg
gs
xor
lock
mov
loope
imul
sbb
and
cmp
push
insb
jo,pn
and
jo
repnz
jp
xor
push
pop
fnsave
push
dec
mov
inc
pop
mov
cmpl
cwtl
mov
cmp
stos
fisubs
pop
bound
out
mov
sbb
icebp
mov
mov
or
jge
and
mov
xchg
cli
loopne
mov
cmpsb
xor
in
rcrb
and
cmp
mov
sub
adcb
insb
sub
cmp
push
or
cld
ret
stos
lahf
cmp
fadds
pop
and
mov
repnz
jmp
pop
ficompl
stos
dec
pop
inc
cmp
dec
lahf
xorl
cmp
adc
xchg
or
es
call
add
hlt
shlb
jle
inc
and
movl
add
xchg
pop
cmp
xor
inc
std
or
sub
leave
mov
ja
push
cld
out
mov
in
xor
hlt
repnz
adc
stos
xor
and
xor
cs
or
cmpsb
pop
stos
pusha
and
je
and
adc
dec
hlt
jno
enter
pop
hlt
sub
repnz
mov
lret
out
adc
jno
push
addr16
arpl
imul
ficoml
nop
jns
cwtl
rclb
insb
jae
push
mov
psadbw
jb
scas
pop
xor
or
dec
dec
jne
ret
cmp
xchg
jmp
pushf
inc
sub
stos
sub
shrb
and
test
push
imul
fnsave
jmp
mov
and
dec
mov
test
xlat
dec
cltd
inc
jne
mov
imulb
lock
aam
pop
cli
jno
or
jp
dec
std
or
std
or
or
push
push
js
pop
fdiv
jbe
mov
push
imul
sbb
lret
mov
mov
jae
pop
dec
in
push
jg
dec
scas
lret
cs
aad
jb
enter
movsb
jecxz
arpl
mov
and
and
mov
jae
pusha
test
fwait
jne
adc
mov
sub
lret
popf
or
adc
js
test
cmp
sub
int3
pop
jo
push
mov
sar
xchg
test
ror
xchg
daa
cmp
cmc
mov
rcrl
jbe
and
sbbb
pop
aad
mov
jnp
inc
adc
dec
arpl
cmpsb
mull
ret
or
pusha
sahf
xchg
sbb
imul
rorl
add
or
jl
mov
sbb
out
repz
push
jo
pusha
jns
sarl
cltd
add
pop
icebp
int
fldl
pop
mov
pop
xchg
fistpll
xor
jo
mov
push
sti
sub
pop
sti
enter
sub
out
add
dec
mov
mov
inc
mov
std
inc
nop
or
or
cmp
les
cltd
dec
dec
sbb
pop
xchg
cmp
cs
shlb
dec
push
jmp
mov
mov
popa
nop
xchg
cmp
jne
pop
add
dec
xor
popa
test
mov
or
mov
fwait
decb
dec
fidivs
cwtl
jae
xor
enter
add
add
mov
dec
or
sub
dec
hlt
popa
js
add
jbe
mov
loope
add
popa
jbe
push
in
mov
mov
and
out
in
int
cmp
pop
add
sub
imul
push
lea
or
popf
jg
data16
out
and
popf
jp
cmp
mov
faddl
in
or
inc
adc
cwtl
cld
push
jg
scas
loope
push
lret
cmp
vpcmpb
mov
daa
inc
lret
jmp
mov
in
ffree
ret
or
outsb
push
xchg
sub
push
outsb
js
mov
stos
xchg
into
sti
cwtl
ret
sti
cmp
jp
out
fwait
cmc
cmp
push
test
or
arpl
xor
dec
inc
lods
sbb
je
jl
sub
cmp
jae
out
test
add
dec
lds
jle
pushf
test
jmp
pop
cmp
ret
xchg
mov
cmp
mov
fcompl
and
orl
dec
add
push
enter
psubw
xor
lods
xor
dec
imulb
jo
ret
adc
mov
jne
add
ret
jns
ljmp
adc
pop
sbb
aam
lods
pop
adc
lds
stc
out
jp
gs
mov
xor
push
mov
test
sbb
je
ds
lret
cltd
insb
icebp
cmpsb
negl
jbe
or
sti
leave
dec
andl
int
sbb
add
dec
add
cmpsl
mov
ret
add
ficompl
sub
jmp
mov
dec
xor
mov
test
jmp
outsb
jge
test
lret
mul
aaa
outsl
cmp
pop
test
push
and
das
sbb
push
jecxz
cmp
mov
ja
cmpl
bound
shlb
xchg
xchg
andl
mov
shl
push
sub
dec
jnp
into
cmp
inc
stos
and
lcall
inc
cmpsb
mov
loope
stos
jno
cld
pop
cmp
mov
test
mov
movsl
or
enter
or
push
int
cmp
inc
pop
repnz
mov
jl
scas
mov
xor
jnp
xchg
test
lea
jecxz
xor
ss
lods
data16
jae
inc
inc
lock
cmp
test
sub
icebp
adcb
add
push
mov
or
scas
inc
filds
jb
mov
aaa
and
lret
adc
andl
js
dec
test
fimuls
lcall
es
pop
rcll
xchg
pop
xchg
les
jge
outsl
cmc
hlt
insb
test
shlb
cmp
leave
test
mov
xor
cmpl
lcall
ljmp
sbb
rorb
pop
ja
mov
test
lret
add
mov
sti
dec
mov
call
out
or
in
cld
sub
fwait
les
dec
das
cltd
mov
pushf
push
adc
outsb
or
hlt
daa
movsb
popf
mov
pop
add
jp
adc
add
lea
ror
jns
or
fucomp
xchg
xorb
push
dec
push
mov
addr16
mov
dec
mov
cmp
out
aas
jmp
test
xor
int
lret
push
xor
icebp
sarb
or
mov
ljmp
push
out
mov
scas
mov
sbb
jp
imul
pop
jo
sub
les
ret
add
cmp
adc
sub
out
inc
push
mov
sahf
out
test
inc
inc
and
flds
ret
sub
jmp
out
and
push
push
imul
stos
pop
lret
shr
fisubrl
out
xor
jne
xor
inc
shll
gs
sub
lret
out
out
dec
add
stos
sbb
outsl
jg
and
fmul
ret
pop
sbb
popa
inc
dec
rcrl
mov
or
xchg
jne
xor
pop
aam
push
fcoms
jmp
int3
inc
jmp
bound
inc
test
int3
adc
xchg
lods
iret
mov
add
shl
pop
in
clc
push
inc
cmp
into
jno
aam
lock
inc
imul
scas
aas
into
js
sti
mov
shrd
push
divb
sbb
nop
cmp
outsb
enter
addr16
cmp
mov
or
and
js
js
fstpl
ljmp
fdivrs
cmp
adc
leave
xchg
loop
cmpsb
hlt
jle
lret
fcompl
fisttps
mov
pop
loope
xchg
out
popa
sub
xor
int3
out
rcr
sub
out
pushf
pop
orb
cmp
dec
inc
jmp
fimuls
mov
sbb
sbb
jns
loope
pop
andl
sbb
or
popa
mov
ror
inc
sti
orb
int
loop
ja
or
loope
mov
lods
mov
xchg
popf
popa
shlb
jmp
push
mov
lds
xor
movsl
adc
out
pop
xor
cli
mov
cli
dec
cmp
mov
fldcw
dec
aam
mov
cmp
xchg
repz
ret
js
jp
mov
out
fisubs
es
mov
add
mov
stos
adc
aam
data16
movsb
dec
mov
sub
add
push
sarb
inc
mov
adc
or
lds
fcmovu
mov
in
adc
jo
pop
pop
mov
test
add
or
mov
lods
mov
pushf
inc
roll
add
insl
cld
mov
orb
push
scas
push
or
dec
jnp
cwtl
in
mov
fst
lock
dec
mov
das
shll
adc
mov
and
push
or
xchg
push
iret
or
leave
mov
mov
shlb
mov
lahf
stc
xlat
xor
fsubs
cmp
addr16
inc
jo
pushf
mov
ja
and
orl
xlat
hlt
int3
ja
je
fmuls
push
and
mov
lea
cltd
adc
sub
mov
imul
ds
jns
ljmp
cld
and
fadds
addr16
loope
aad
cwtl
or
push
push
lods
mov
and
pop
adc
outsb
call
in
popa
dec
in
sbb
jg
aas
shlb
adc
adc
adc
sar
push
outsl
inc
cltd
loop
stos
lret
aam
dec
outsb
cltd
in
stos
xor
hlt
pusha
adc
mov
inc
repz
jl
test
ss
hlt
inc
adc
cwtl
mov
cwtl
sub
dec
cmp
int
push
xchg
int3
ljmp
mov
jecxz
push
jge
inc
add
add
xor
bound
dec
lret
cwtl
sbb
lods
cmp
push
inc
aad
xlat
xor
pop
ds
lods
xor
mov
es
fs
test
aam
pusha
xor
mov
pusha
adc
pop
adcl
mov
adc
pop
inc
aad
shr
pop
adc
sbb
pop
repz
jns
sbb
xor
mov
xchg
fucomip
cmp
add
ret
adc
cmp
into
mov
sbb
scas
repnz
and
pop
pop
sbb
push
pop
leave
pop
mov
outsl
dec
rcrl
imul
inc
clc
insl
adc
pushf
out
xchg
dec
sti
inc
sub
push
and
mov
js
lods
scas
pop
lds
pushf
xchg
xor
cs
fwait
pusha
fildll
pop
popa
sub
xor
aas
jmp
repnz
xchg
lcall
xor
xor
loope
push
in
jne
notl
js
jae
stc
movsl
jb
adcb
adc
cld
rcll
inc
pop
mov
sbb
clc
push
ds
fbld
sbb
mov
es
out
and
bound
mov
shrb
jg
pop
adc
pop
roll
testl
xchg
push
filds
jmp
in
and
js
xor
xchg
imul
imul
scas
aas
inc
fstpl
push
scas
and
push
push
push
push
sub
cltd
jno
lods
adc
mov
xor
jae
out
scas
jno
ds
ljmp
inc
sbb
clc
shlb
inc
mov
in
push
xchg
aas
jmp
mov
std
xchg
les
loope
xrelease
insb
cmp
sbb
cld
iret
mov
xor
push
push
or
xor
in
aas
out
push
push
jns
pop
mov
stos
lcall
fistpll
pop
sbb
fnsave
lds
mov
sbb
xchg
cli
es
and
inc
mov
cmp
fsubl
push
in
popa
push
mov
add
shlb
or
fs
mov
push
lcall
jbe
push
sbb
mov
adc
ss
loop
push
mov
jo
push
mov
and
daa
dec
in
lret
push
xor
jecxz
loopne
sbb
add
je
fs
mov
or
call
jp
pop
scas
js
jb
pop
notl
mov
movsb
inc
repz
push
and
out
outsl
stc
lods
cmpsl
or
roll
adc
push
inc
lcall
std
scas
sub
inc
in
push
cmp
mov
jecxz
xor
mov
push
mov
sbb
jo
xchg
pop
cltd
fimull
add
sub
xchg
push
jp
jns
icebp
cmp
dec
les
cmp
fidivrs
sahf
inc
cs
movb
push
sbb
add
arpl
jbe,pt
ret
push
insb
pop
mov
cs
pushfw
loop
mov
int
fcmovbe
shr
test
jmp
mov
shlb
cld
push
push
push
mov
fstpl
mov
shl
ss
xor
ret
pop
adc
sbb
stos
xor
test
xchg
sbb
call
pop
xchg
inc
fiaddl
add
test
test
daa
fldcw
jg
sub
movsl
xchg
movsb
aad
cmpsl
les
mov
and
xor
mov
int3
xchg
addr16
and
mov
or
outsl
daa
and
inc
scas
daa
ds
xchg
mov
lret
adc
jo
pop
test
stos
ret
aaa
test
adc
sub
add
dec
dec
push
loopne
fsubr
dec
aas
and
in
aad
mov
xchg
and
aam
shll
aam
xor
repnz
xor
je
in
adc
mov
fs
enter
das
mov
push
rcl
out
jbe
mov
fucomi
add
jecxz
inc
mov
movsb
sahf
or
mov
sub
cmc
or
push
nop
xchg
jp
outsl
roll
inc
dec
jl
or
popa
mov
imul
mov
fiaddl
sbb
xchg
adc
lock
insl
out
loop
loop
inc
arpl
int3
sarb
mov
adc
push
cltd
outsl
loop
dec
mov
and
push
rep
add
out
loope
pop
cmp
xor
dec
cmc
pop
or
push
in
dec
jp
movsb
xchg
jmp
or
enter
sti
inc
push
or
xchg
pop
add
adc
ja
mov
jae
jl
jae
je
dec
hlt
scas
arpl
lret
ljmp
mov
mov
pop
push
mov
xchg
xlat
call
xor
sub
and
dec
push
jg
mov
jp
insb
pop
or
jbe
adc
inc
std
jle
lds
hlt
ret
jecxz
or
ret
and
repnz
jae
out
xchg
dec
icebp
andb
jno
dec
in
aaa
xor
lret
push
add
mov
push
or
inc
or
gs
test
fs
testb
inc
pop
ljmp
cmp
fiaddl
dec
jle
daa
dec
int3
jmp
inc
jb
nop
fs
not
mov
cli
cmp
cmpsb
jae
in
xchg
push
mov
xorb
aad
imul
lret
push
out
lcall
jnp
popf
es
icebp
sbb
adcl
stc
jl
insb
cmp
test
std
cmp
or
aam
jecxz,pn
cmp
popa
frstor
xor
add
cmp
jle
adc
std
das
in
mov
lds
xlat
bound
sub
arpl
test
xchg
je
and
test
outsl
je
sbb
xchg
pop
stos
jo
movsb
xor
push
gs
stc
in
push
mov
inc
loope
jge
xorl
adc
int
les
mov
divl
fwait
cmp
adc
jecxz
je
jae
loope
pushf
mov
or
stos
pop
insl
jmp
les
ja
jae
nop
ret
pusha
ffree
ja
cmp
mov
and
inc
cld
stos
add
and
cli
inc
xor
dec
bound
push
push
out
xor
clc
pushf
dec
out
xor
xchg
add
push
cmp
sub
xlat
cs
js
int
pop
xor
and
filds
in
cmp
mov
jbe
mov
push
cmp
mov
jno
insb
ljmp
data16
in
inc
das
pop
enter
cmp
pop
in
fadd
mov
mov
test
ret
mov
fcmovb
aaa
repnz
ja
mov
notb
sbb
mov
imul
lahf
jecxz
test
icebp
jns
int3
jo
repz
dec
shlb
lods
inc
mov
adc
aad
mov
jl
dec
inc
shlb
jg
cwtl
adc
and
fdiv
pop
loop
repnz
mul
and
pop
add
icebp
mov
push
pop
int
out
dec
lret
insl
push
inc
mov
stc
jge
xchg
pop
push
dec
push
insw
adc
or
lods
aad
adc
in
xchg
cmpb
add
inc
mov
cld
mov
pop
jge
mov
and
les
sbb
aam
sbbl
xor
pop
xchg
sbb
stc
inc
in
inc
cmp
lods
inc
lds
mov
stos
push
sahf
push
cwtl
sbb
popa
mov
mov
pop
and
aam
mov
stos
addl
push
dec
dec
call
cmp
add
inc
ficoml
out
loope
jecxz
aad
fnstenv
mov
jb
cmpsb
cmp
jae
add
xchg
stos
pop
sbb
mov
lret
adcl
mov
into
pop
inc
cli
xor
clc
mov
inc
hlt
inc
cwtl
jmp
fists
dec
xor
ret
xor
and
cmp
mov
jo
jp
movsl
pop
sbb
scas
mov
test
push
test
or
sub
pop
aam
mov
fdivl
cmp
sbb
xor
or
sbb
mov
sub
and
ret
cmp
outsl
dec
xor
sub
xor
or
sub
jecxz
pop
adcl
mov
push
es
nop
mov
lock
or
pop
pop
cmp
imul
adc
mov
mov
cmp
outsl
jecxz
inc
test
inc
mov
rclb
mov
sub
lret
push
cwtl
sbb
lret
sar
push
lret
inc
jle
in
inc
imul
add
pop
push
push
inc
cwtl
enter
mov
xchg
clc
xor
push
sbbl
inc
adc
xor
mov
mov
mov
das
or
add
xchg
aam
les
add
jno
mov
outsb
add
popa
push
push
bound
sbb
scas
test
push
inc
pusha
cmp
xor
rolb
scas
add
gs
lcall
pop
fnstsw
imul
cmpsb
shrb
adc
out
mov
push
jbe
loopne
cmpsb
inc
mov
sub
stos
jg
fs
adc
mov
mov
dec
out
inc
popf
mul
roll
xchg
es
mov
adc
nop
or
mov
in
inc
inc
xchg
cmp
loop
pop
fistpl
out
xlat
fcomps
xlat
sub
sub
popa
mov
je
jnp
jbe
xchg
and
cmp
mov
incb
cli
ja
cli
mov
jb
sub
sbb
sub
loope
ret
inc
jecxz
xor
loopne
mov
adc
dec
nop
pop
pop
pop
sbb
adc
jg
xchg
inc
inc
fists
fists
sbb
outsl
outsl
lcall
cmc
and
into
add
push
stos
shl
leave
lds
popf
mov
loop
adc
stc
pop
scas
pop
hlt
sbb
cmp
pop
or
push
rorl
inc
es
jno
pop
inc
leave
inc
insl
jl
jno
testb
fstl
mov
out
pusha
sub
pop
sub
hlt
mov
fstpl
push
ja
test
addr16
xchg
push
in
outsb
imul
mov
gs
int
outsl
leave
inc
xor
loopne
int
mov
dec
imul
mov
xor
movsb
or
mov
ficoms
in
push
cmp
out
stos
negl
jo
fstl
cmpsl
cmpsl
ret
xorl
cmp
push
push
dec
stos
in
ljmp
mov
cmpsb
add
dec
add
xchg
fnsave
xor
xchg
fbld
popf
push
adc
jl
cmpsl
lock
rcrb
inc
sub
call
cmpsb
sbb
in
gs
cmp
in
in
test
cmpb
xchg
hlt
std
adc
pop
repnz
loope
movsl
dec
movntps
adc
xor
push
bound
inc
push
mov
in
lret
ja
dec
insb
pop
mov
adc
inc
cmp
dec
lds
es
out
fidivrs
dec
sahf
cmp
and
test
pop
mov
pop
add
dec
lock
repnz
xchg
dec
adc
pop
dec
and
hlt
xchg
xchg
int3
jl
sbb
pop
pop
mov
mov
orl
lods
sahf
stos
fisttpl
push
sarl
leave
fidivrs
push
push
jno
push
inc
mov
push
and
leave
mov
in
jmp
and
jp
push
lock
imul
cmp
xlat
ljmp
xchg
lds
jl
aaa
ficompl
pop
lea
push
mov
adc
add
lcall
or
ss
hlt
mulb
enter
jae
cmpsb
les
fcomps
or
xor
pop
ds
sub
scas
jecxz
push
mov
push
xlat
testb
jno
shr
mov
sub
subl
mov
jg
and
pop
sbb
push
enter
dec
and
popa
add
sub
jno
adc
arpl
scas
push
pop
fcompl
push
and
cli
mov
push
adc
pusha
mov
mov
inc
sbb
loopne
jl
js
pop
ljmp
inc
push
mov
mov
js
ds
movsb
cmp
ja
adc
pop
cmp
lods
and
xor
adc
inc
jp
pop
jg
fs
insb
inc
leave
nop
push
mov
dec
fildll
lcall
push
or
incb
popf
bound
push
sub
data16
and
jg
mov
or
sbb
mov
xor
pop
stos
mov
jno
push
pcmpeqw
call
mov
push
dec
stos
das
cs
call
addr16
jae
cmp
adc
xor
push
movsb
push
bound
or
pop
sub
jge
xchg
add
imul
mov
dec
xor
iret
insl
lahf
sbb
push
cmp
mov
sub
cmp
sbb
xlat
and
dec
lods
test
jle
push
ffreep
aam
sbb
xlat
sub
mov
cltd
push
test
inc
rdmsr
neg
inc
jnp
repz
fisttpl
ret
ds
mov
jne,pt
insl
dec
dec
and
or
repz
xor
cli
fs
scas
dec
xchg
aaa
xchg
sahf
lcall
test
pop
push
add
jae
cmp
insb
insb
test
jno
js
mov
fisubrl
sarl
mov
gs
outsb
sbb
divl
data16
loopne
outsl
outsb
push
adc
jns
jbe
jnp
mov
jns
add
dec
movsb
pop
call
pop
push
fldl
and
mov
js
and
cmp
cltd
movsb
pop
cmp
inc
sbb
stos
scas
loopne
ljmp
je
dec
mov
aas
int3
push
jmp
add
out
test
jae
dec
lock
pop
loopne
xor
xchg
add
pop
cmc
push
pop
mov
xor
sar
addl
popf
clc
xchg
inc
daa
push
nop
jb
jg
insb
sbb
cmc
mov
je
aam
inc
xor
mov
lods
shlb
cmp
insl
inc
clc
cmp
and
add
loope
imul
xchg
push
mov
xchg
adc
dec
and
push
sar
cld
mov
jmp
xchg
sbb
and
adc
gs
rol
clc
adc
add
pop
xor
mov
outsb
push
lahf
rolb
les
sub
popf
push
test
and
in
pop
dec
mov
fstpt
adc
cmp
ficoms
xchg
jno
test
sbb
xchg
mov
sbb
ret
pop
add
popf
dec
iret
inc
and
shll
ljmp
jae
jb
ret
popa
mov
lock
xor
xor
shrl
xor
push
dec
lret
lcall
xor
call
out
xrelease
sbb
in
inc
adc
roll
pop
mov
and
xchg
test
push
cmp
outsb
mov
add
xchg
mov
pop
sub
lret
push
add
stc
ffreep
sub
sahf
push
roll
push
stos
push
pop
mov
jno
ficomps
cmp
jp
inc
or
push
out
mov
nop
and
lcall
or
mov
pop
mov
out
push
ret
imul
inc
inc
out
in
lds
test
rcll
dec
pop
loopne
rorl
cld
cmp
mov
les
rcrl
dec
adc
cwtl
in
jmp
das
inc
inc
adc
jecxz
add
icebp
fdivrl
adc
sar
nop
andl
push
jne
ret
ficoml
pop
stc
sbb
and
or
jmp
or
cmp
dec
mov
inc
mov
test
dec
in
add
dec
out
pop
adc
dec
mov
mov
mov
jns,pn
adc
into
mov
mov
lcall
xchg
outsb
stos
cli
movsb
fcmovnu
add
das
fsubrs
or
or
jnp
jmp
pop
outsl
ret
enter
stos
pop
fmull
das
xor
push
push
push
and
fstpl
mov
testb
jmp
out
imul
vandnps
in
dec
lret
iret
out
dec
icebp
xchg
sti
xor
daa
xor
test
add
and
or
or
dec
mov
inc
add
push
dec
jl
hlt
mov
dec
cmp
pop
or
mov
jp
sbb
cmc
mov
mul
push
sub
insb
xor
mov
call
mov
mov
outsb
fstpl
or
mov
in
sbb
inc
inc
push
push
scas
aam
out
mov
add
lret
imull
push
lods
leave
scas
orb
js
push
ljmp
mov
repnz
out
adc
sbb
shll
push
cmp
js
pusha
jge
push
push
jbe
shl
dec
shlb
pushf
push
loop
jb
daa
and
xor
sbb
jo
xchg
faddl
sbb
in
cs
scas
push
sub
orl
ret
dec
movsl
adc
mov
jl
sub
dec
push
lret
cmp
fwait
outsb
dec
adc
sti
xchg
test
sti
add
iret
lcall
popa
hlt
cmpb
fwait
out
and
sub
rorl
pop
pop
and
jmp
scas
and
jns
dec
jno
loopne
cltd
mov
inc
arpl
out
in
repnz
add
mov
pop
gs
stos
mov
ret
pop
jl
fnstenv
push
or
lcall
cli
icebp
push
mov
pop
pop
add
ja
dec
imul
call
fldl
in
and
mov
jp
fisubrl
lea
mov
pop
sub
std
test
xor
mov
cmpl
add
popl
daa
lock
or
and
lea
movsb
sbb
pop
push
dec
not
and
testl
mov
aam
inc
jmp
adc
push
int3
push
sub
inc
pop
jge
aaa
cmp
push
add
push
ja
mov
sbb
sbb
movsb
mov
hlt
es
xchg
int
push
mov
add
add
pop
in
in
lcall
aam
pop
add
xchg
repnz
push
test
adc
sbb
mov
mov
xor
mov
mov
insl
mov
shrl
jae
imul
sub
rolb
lds
pop
fimull
out
call
push
mov
pop
sbb
sbb
fcmovbe
cmp
push
fistps
mov
xor
in
aas
or
jno
xor
pop
loopne
push
push
sub
roll
in
aas
or
jo
cmp
xchg
xchg
jnp
adc
jmp
dec
aas
test
jg
ficomps
ds
inc
rorl
jnp
mov
xchg
rcrl
std
lea
add
dec
adc
dec
jmp
push
mov
or
and
jbe
jae
lcall
and
andb
push
xor
mov
jnp
mov
xor
call
das
add
push
cmp
add
aaa
divps
cld
or
cmovle
inc
aam
cmpsb
lock
dec
sub
push
cmpsl
and
test
adc
cld
loop
or
push
pop
adc
sbb
xor
lret
in
mov
adc
ljmp
idivl
dec
jb
adcb
lret
xchg
adc
push
dec
mov
pop
imul
ds
lock
lods
jno
loop
inc
inc
daa
mov
js
adc
adc
pop
and
gs
adc
loop
mov
mov
dec
lock
movsb
mov
xor
xchg
test
and
jbe
or
cmp
pop
push
sub
pop
inc
loope
rolb
iret
mov
in
xchg
in
mov
mov
addr16
aam
or
lea
dec
dec
scas
imul
lret
mov
push
sarl
aaa
lret
out
sbb
add
cltd
fs
ds
add
inc
cwtl
loopne
push
aas
add
fmul
mov
int3
bound
in
push
loope
addr16
ret
xor
mov
ljmp
and
push
xor
cmpsl
xor
insb
xchg
xchg
cmp
gs
out
lret
mov
jns
xlat
insb
adc
cmp
mov
test
mov
in
sbb
in
inc
mov
push
into
add
cmp
and
or
xchg
adc
mov
repnz
imul
mov
cmp
ret
xor
daa
dec
adc
ss
fstpt
push
daa
mov
call
push
test
fdiv
rolb
shlb
adc
pop
xchg
xor
mov
mov
shlb
jnp
inc
movnti
adc
and
push
lret
shlb
xchg
jle
xor
into
insb
adc
dec
loope
jno
jbe
mov
cmp
mov
mov
pop
mov
adc
dec
aaa
dec
in
push
repnz
fcos
jmp
popa
pop
jne
or
dec
mov
mov
xchg
or
push
pop
mov
xor
mov
jo
push
repz
add
fwait
inc
lea
faddl
push
xor
push
xor
mov
orl
xchg
xchg
pop
mov
push
cltd
hlt
mov
push
or
xor
idivb
fcmovnbe
cmp
ficoml
notb
imul
mov
sbb
aaa
adc
test
cmpsl
push
inc
ljmp
hlt
shr
mov
adc
cs
push
and
mov
inc
std
mov
imul
lods
fsub
add
leave
jmp
loopne
fdivr
mov
ret
or
movsb
mov
cltd
iret
mov
mov
cmc
or
xlat
lahf
mov
push
scas
dec
cmp
add
mov
sub
mov
jb
push
push
lahf
repnz
mov
jne
sub
sbb
andl
pshufw
jne
mov
pop
or
das
dec
lret
adc
add
pop
sub
ret
sub
xor
cmp
test
ja
in
mov
repz
leave
and
out
add
or
addb
cmp
loopne
pop
in
dec
mov
add
xchg
orl
xchg
or
fs
sub
les
adcb
dec
mov
add
test
and
ret
mov
fnstcw
in
pop
sub
iret
ss
mov
xor
scas
cli
xchg
dec
jp
sub
das
int3
add
or
mov
stc
cmp
xlat
movsb
sub
mov
jmp
stc
arpl
fisttpll
dec
outsb
js
cmpsl
loopne
xchg
popf
mov
push
and
adc
sub
push
add
dec
fidivl
andb
stos
roll
in
std
jg
lods
adc
lea
cmp
sub
or
inc
xor
stc
cmpsb
loop
clc
insl
fwait
xor
or
gs
lret
stos
jns
mov
cmp
repnz
dec
sbb
pop
lds
leave
loop
scas
lret
std
inc
sahf
insb
jg
jp
outsb
repz
fistl
inc
sub
mov
adc
test
mov
loop
push
sahf
pop
push
cmpsl
push
into
jg
adc
sbb
add
es
sarl
xlat
push
stos
dec
xor
cmpsl
sub
mov
mov
bound
jl
ret
out
pop
xor
lcall
adc
out
fidivrl
jb
cmp
mov
mov
jnp
mov
hlt
cmp
movsb
outsl
push
or
imul
sarl
nop
pop
stos
pslld
test
stc
sbb
cmpsb
add
ljmpw
cwtl
jno
cmp
push
jmp
push
lea
push
inc
fsubl
enter
jns
mov
jnp
mov
inc
imul
or
push
mov
adc
and
cmpsl
scas
ds
shll
fldz
aas
stos
cmp
pop
int3
mov
lret
js
movl
in
orl
subl
rcll
lret
outsl
jp
leave
cmp
popf
fimuls
enter
adc
rcrl
push
cmp
adc
fsubs
repnz
loopne
xor
xchg
or
pop
inc
popf
ffree
hlt
mov
hlt
cmp
jne
cld
or
insl
je
shlb
mov
ficoml
mov
xor
mov
inc
lcall
sbb
mov
dec
adc
mov
lahf
sti
loop
repz
push
mov
out
lahf
shrb
cli
or
mov
xchg
push
pusha
mov
pop
xchg
negl
pop
cwtl
rolb
addl
andb
out
mov
xor
cmpsb
push
lods
not
push
add
in
jbe
js
loopne
mov
lret
leave
dec
cli
imul
enter
daa
hlt
push
cli
ss
scas
ret
int
outsl
or
jne
mov
call
das
test
mov
dec
push
jg
and
mov
fidivrs
jbe
mov
cmp
stc
ror
mov
sti
daa
test
dec
nop
iret
jl
or
add
pusha
jg
cltd
aad
outsl
pop
mov
adc
je
and
lret
and
lcall
push
in
test
pop
or
daa
and
dec
test
push
dec
iret
iret
mov
pop
cmp
dec
xor
outsl
cli
je
xor
pop
and
cmp
loopne
es
loop
es
iret
push
pop
mov
mov
pushf
fwait
in
inc
jge
in
add
decl
aas
and
fildl
in
xor
cmp
js
mov
cltd
add
nop
xchg
fstpl
mov
xor
mov
jecxz
push
into
push
jo
pop
int
and
aaa
sub
pop
cld
pop
imul
in
std
fwait
loopne
call
popa
sub
adc
or
aad
out
adc
repnz
or
fistps
mov
sbb
jb
loop
outsl
call
fcomps
or
ficoms
fbstp
xor
ljmp
into
leave
mov
push
jmp
mov
shr
test
lcall
cmp
pusha
lea
xor
es
out
cmc
aam
cmpsb
mov
js
pop
stos
adc
xchg
mov
in
mov
fildl
out
mov
cld
mov
out
lcall
add
out
daa
aaa
repz
cs
xchg
test
lods
inc
or
mov
lret
cwtl
out
rcll
jo
loopne
addr16
cmp
or
int
rcrb
inc
in
fcomi
lret
and
mov
sub
das
subl
mov
jne
int
rcl
lret
lahf
repnz
sub
ljmp
out
push
incb
cli
push
add
xchg
popa
adc
pop
adc
in
hlt
shll
daa
dec
dec
lahf
popa
or
out
and
pop
scas
xor
push
icebp
mov
sbb
popf
pop
lcall
repz
pushf
cmp
enter
je
int
sub
aad
dec
mov
inc
stos
push
or
mov
shlb
paddusb
ja
fidivrl
nop
pop
mov
dec
addr16
hlt
jl
repnz
xchg
mov
or
sbb
xchg
ds
into
and
adc
dec
or
stos
adc
dec
ljmp
cs
xchg
addr16
movsb
mov
mov
xor
ret
sub
xor
mov
sti
shrl
lahf
pop
test
or
icebp
jnp
xor
push
push
push
adc
sbb
loopne
stos
cmp
movsl
and
mov
push
stos
pusha
cmp
xchg
lcall
fbld
add
xchg
pushf
mov
or
test
pushf
movsb
aad
mov
sbbl
cmp
aaa
jg
std
int3
data16
mov
subl
out
std
sub
pop
add
xor
test
rorl
push
int3
lret
imul
cli
cld
sarl
cmp
pop
mov
mov
dec
add
imul
xchg
pmullw
rorb
pop
rorl
sarl
pop
mov
push
mov
sarl
jg
add
pop
cld
add
lock
test
pop
bnd
mov
inc
and
ja
sub
cmp
and
push
xchg
dec
or
and
mov
fbstp
push
popa
fs
in
fdiv
mov
movsl
cmpsl
out
sahf
clc
in
addr16
jmp
jp
lret
incb
call
pushf
test
jns
data16
mov
or
inc
cld
insl
fstl
enter
cmp
gs
add
imul
sub
in
adcb
dec
pop
adc
jmp
mov
repz
jp
popf
fucomip
jbe
and
push
mov
fnstcw
and
int
out
or
enter
repz
jbe
mov
popf
or
inc
outsl
or
mov
mov
clc
lock
xor
pushl
mov
mov
bnd
xchg
or
mov
scas
shll
dec
sbb
sbb
adc
xchg
and
push
pushf
bound
push
ret
jbe
loop
iret
sarl
dec
pop
roll
lahf
pop
ljmp
add
fidivs
jb
jno
mov
cmp
test
xchg
pop
popa
and
add
pop
fdivrs
push
add
les
mov
or
mov
bound
and
out
mov
lods
dec
mov
dec
or
sbb
dec
test
sbb
and
xlat
iret
mov
push
cmp
inc
rolb
push
pushf
or
push
xor
push
push
data16
add
mov
mov
out
jne
sbb
push
sbb
mov
jns
es
pushf
jmp
mov
push
testl
out
dec
ret
sub
fistpll
rcrl
mov
xchg
or
ret
or
mov
jns
push
mov
pop
dec
aam
subl
movsl
sub
clc
and
gs
xchg
mov
pop
sbb
push
mov
outsb
ficoms
and
cmp
sbbb
xchg
les
mull
adc
out
inc
pop
divb
aas
data16
mov
sub
out
sub
jle
cmp
pop
imul
jmp
out
test
xchg
push
out
add
leave
adc
outsl
jle
inc
das
push
fiaddl
dec
cwtl
hlt
subb
dec
pop
xor
das
in
dec
dec
jns
inc
jb
sbb
sti
sbbl
imul
push
in
sbb
aaa
sub
loope
xchg
pop
mov
adc
lahf
jecxz
jge
mov
adcb
fiaddl
ljmp
sub
add
mov
push
fisttpll
adc
add
aas
fcmovne
shll
in
orb
nop
lods
fbstp
int3
ret
popa
popf
inc
mov
in
mov
fisttpll
xor
and
or
cltd
or
dec
roll
xor
shlb
inc
sub
stc
adc
ja
popa
roll
mov
xchg
cld
sub
dec
insl
loope
or
in
mov
xchg
fnstcw
mov
stos
and
sbb
add
insl
mov
neg
ret
mov
jbe
inc
adc
jge
xchg
mov
ljmp
mov
push
push
fmuls
aas
rol
xor
iret
int3
negb
scas
mov
bound
cmpsb
jmp
cmpl
fwait
daa
jae
lock
repz
jp
repnz
enter
stos
sbb
jecxz
lods
adc
aad
js
les
arpl
mov
inc
aas
jns
dec
jo
xchg
inc
out
add
pop
mov
into
into
jb
mov
and
mov
mov
bound
jae
lgs
aad
sbb
shll
xor
out
sub
mov
lret
inc
shlb
jnp
jp
mov
mov
sti
aas
or
and
jge
mov
cmpsl
xchg
inc
pop
sbb
mov
js
mov
push
aam
cmpsl
push
test
insb
cmpsl
pop
push
aad
push
pop
in
pushf
ljmp
vhsubpd
or
adc
add
or
enter
jns
sub
and
push
shll
mov
daa
test
dec
inc
rep
stc
and
cmp
std
lods
adc
dec
jge
inc
cmp
daa
push
jge
push
jl
insl
mov
jge
fs
pop
in
mov
adc
mov
jbe
lret
nop
inc
adc
mov
adc
jae
sbb
sahf
jecxz
cwtl
mov
sbb
pop
jne
repnz
add
movsb
fisttps
dec
fwait
out
push
lret
fadds
mov
fldt
les
add
and
xchg
out
sbbl
pop
xchg
jge
pusha
lock
jno
in
jae
pushl
ja
inc
les
pop
xchg
add
mov
pop
mov
icebp
icebp
jne
mov
scas
pop
jns
das
add
sbb
mov
jae
stos
icebp
fcmovu
lret
dec
fdivr
pop
rcll
add
pop
or
loope
out
mull
leave
xchg
testl
cmp
orl
pop
xorb
mov
pop
outsb
and
mov
add
dec
in
mov
test
xchg
cmpl
cld
mov
dec
pop
mov
mov
xchg
ficompl
insb
sub
xchg
push
adc
fildll
adc
push
movsb
adc
xlat
jmp
into
push
call
sub
loope
jp
cmp
mov
hlt
dec
pop
rcrb
and
mov
lret
gs
test
mov
loope
add
xchg
daa
mov
stc
das
fidivrs
in
loopne
pop
aas
cmc
pop
and
ret
and
inc
stos
jp
push
and
dec
or
sub
data16
mov
mov
jge
sbb
dec
pop
cli
push
jne
lret
test
xor
pop
xor
in
add
lcall
lock
nop
aaa
inc
cmp
std
gs
es
ret
mov
nop
push
sbb
xorb
ret
hlt
pop
flds
stc
call
cmp
xchg
push
xor
xor
fists
add
mov
cmp
sbb
div
mov
daa
into
jle
xchg
xchg
cmp
pop
fs
add
push
inc
imul
pop
or
inc
int
jns
pop
aad
fwait
in
mov
aam
pop
jl
mov
cmp
imul
jl
in
mov
and
push
dec
lcall
and
and
cmp
jno
popf
pop
subb
repnz
or
popf
fwait
sbb
sub
sbb
dec
xbegin
sbb
sahf
mov
cmp
ljmp
add
loop
sub
aam
lcall
ret
mov
cmpsl
and
scas
mov
nop
cmpsb
sti
shll
pushf
pop
lds
mov
leave
std
xor
pop
adc
imul
leave
dec
cmp
jno
xchg
sub
mov
inc
sub
mov
scas
mov
out
sub
outsb
cld
push
jo
das
jae
je
fnstenv
mov
xor
push
mov
cmp
mov
data16
jnp
int3
xchg
and
call
sub
cmp
cld
push
push
cli
sahf
adcb
enter
jl
xor
incl
aam
fisttps
hlt
and
pop
or
out
addr16
inc
scas
push
xor
dec
cmc
jne
push
pop
ja,pn
pop
jbe
and
mov
stos
stc
fdivrs
clc
nop
mov
nop
xchg
int
aad
repz
push
adc
stc
andl
sbb
jb
inc
ret
push
mov
js
hlt
push
invd
out
jno
test
insl
xchg
rcl
leave
xor
jecxz
adc
push
adc
add
jbe
lock
repz
jo
ret
decl
mov
or
test
xor
jns
jnp
jmp
cwtl
add
das
add
divl
arpl
jmp
stos
icebp
sub
cmp
jno
dec
rol
jmp
icebp
negl
cmp
adc
subl
sub
call
push
jl
data16
inc
xchg
add
in
jmp
mov
inc
lea
push
mov
movsl
inc
in
shrb
pusha
sbb
push
push
cmc
nop
cld
mov
xchg
repz
mov
mov
repz
pop
pop
frstor
mov
ds
xchg
jmp
ljmp
sub
mov
lock
cmp
loopne
mov
cmpsb
adc
sbbl
sahf
cld
insb
xchg
dec
push
and
inc
jo
cwtl
adc
mov
lret
lahf
jnp
fld
jp
jmp
pop
std
xor
pop
mov
cwtl
sub
cmp
fdivrs
xor
sub
fs
add
lods
sub
fwait
shll
mov
xchg
rcrb
lea
xchg
and
std
dec
dec
inc
pop
in
lret
mov
and
stos
push
shrl
inc
and
mov
jmp
sub
and
nop
cli
es
push
push
out
test
mov
cwtl
xorb
addl
adcb
rcrl
pop
cmpsb
ret
nop
in
cmp
out
cmp
out
push
mov
pop
pop
lods
ds
jecxz
fsub
lods
adc
add
push
cmp
lea
add
pop
repnz
inc
roll
pop
jge
lods
push
xchg
das
leave
stc
in
fisubs
and
fisubs
ficompl
out
lds
jge
mov
cmp
adc
add
or
insb
scas
cs
xchg
sub
xchg
int
or
inc
inc
cwtl
fcompl
mov
and
push
int
fidivl
push
lcall
dec
xor
jmp
jl
fisubs
lret
cmp
les
pop
mov
mov
ret
aam
xor
out
sbb
add
jge
addb
test
out
xchg
or
or
cmpsl
mov
cld
pusha
mov
mov
add
out
xor
dec
std
add
test
mov
cmpsb
pop
dec
mov
pop
mov
jno
and
addr16
in
xorl
push
pop
mov
fnstsw
mov
out
iret
lret
cltd
jnp
xchg
add
repz
clc
fimuls
mov
or
shll
je
cmp
int3
lahf
fimull
orl
mov
push
lea
sub
mov
dec
mov
mov
into
aam
std
adc
jg
xorl
and
aad
mov
movb
xchg
data16
mov
inc
sub
fsubs
insb
inc
inc
shrl
xor
cmpsb
mov
sub
push
cmpsl
dec
jbe
outsl
rorl
adc
pop
jne
fyl2x
dec
push
leave
and
lcall
jg
rorb
push
fidivs
inc
inc
and
test
loop
imul
data16
dec
call
scas
xchg
or
fldl
jl
clc
ret
xchg
es
adc
aad
and
shlb
lods
and
xchg
aam
inc
fidivs
and
pop
rol
dec
sbb
pop
sahf
ja
stos
cltd
popf
iret
adc
lea
incl
rclb
lods
mov
shrl
js
cmp
test
hlt
dec
push
scas
lods
sbb
ds
sar
lods
inc
push
sbb
iret
icebp
test
pop
inc
adc
xor
fldt
jbe
xchg
test
movsl
push
or
and
sub
std
jmp
sahf
jo
enter
sbb
add
cmc
test
dec
push
mov
push
lret
test
and
mov
repz
adc
fmull
dec
sti
test
test
push
jmp
fwait
or
ret
in
sbb
pushf
in
mov
cmp
xor
inc
fdivs
mov
xchg
adc
sub
jns
scas
mov
jb
mov
inc
mov
and
xchg
pop
xor
insb
inc
jmp
std
loope
aaa
pop
lods
fdivr
test
jo
lcall
cmp
jl
jecxz
loope
or
out
mov
xor
pop
fsubrs
add
jno
cwtl
in
xchg
cli
push
les
insl
jecxz
stos
inc
inc
add
cld
fsts
sti
mov
and
mov
movsb
mov
fnstsw
call
ss
xlat
and
mov
les
outsb
fcmove
fcom
lcall
mov
adc
lret
mov
mov
into
in
inc
xor
xor
outsb
ss
fisubl
xchg
adc
outsb
out
ret
andb
mov
xchg
inc
roll
les
sti
pop
jle
push
add
rcr
or
pop
fmuls
dec
inc
test
mov
pop
fdivrl
rcrl
sarl
test
adcl
cli
pop
push
sbb
cli
lods
out
mov
hlt
cld
inc
add
mov
mov
into
sub
mov
test
mov
ds
dec
cmpsb
das
xchg
pop
insb
jg
push
cmp
inc
scas
mov
jg
adc
pop
stos
add
cmp
std
mov
aam
sbb
je
sbb
dec
repnz
in
add
dec
lahf
cmp
adcb
arpl
jno
xchg
and
jmp
and
and
xchg
and
xchg
pop
jae
stc
popf
and
sub
jle
xchg
add
out
hlt
insb
lods
call
or
and
cwtl
fmul
sub
sahf
repnz
pop
stos
in
mov
mov
clc
push
int3
and
jbe
or
scas
lds
dec
movl
mov
jl
add
sub
or
ret
inc
pusha
lret
mov
sub
imul
cmc
xchg
cmp
loop
enter
jno
loopne
xchg
fists
xor
inc
mov
les
jae
shrb
add
xor
clc
push
dec
push
add
pushf
push
out
sti
sti
and
outsb
aas
or
sub
daa
add
add
adc
cmp
loope
dec
mov
inc
and
mov
repnz
sub
call
adc
clc
pop
xchg
loop
das
xchg
mov
push
imul
out
jp
sahf
lock
hlt
xchg
pop
sub
push
test
pop
stos
inc
jge
dec
movl
cltd
mov
jae
mov
clc
and
mov
xchg
xchg
dec
dec
or
xor
push
xor
xchg
or
mov
mov
das
dec
sub
jne
xchg
pop
xchg
test
in
sub
inc
sbb
fwait
cmp
shll
cmp
push
rcll
or
push
inc
xchg
rcr
mov
push
add
jp
xchg
pop
jle
arpl
mov
pop
add
cltd
dec
repz
xor
iret
mov
mov
and
cmpsb
adc
cmpb
pop
pop
leave
mov
push
repz
sub
pop
cmpsb
sub
cmp
rolb
lds
xor
insl
or
lea
cld
in
outsl
movsl
lret
mov
sbb
adcb
bound
into
adc
push
push
cli
lock
jl
imul
push
addr16
sbb
jmp
jmp
stc
hlt
mov
sahf
fldl
and
lods
stos
inc
sub
fdivl
lock
cmp
cmp
and
cs
inc
clc
mov
movsb
popf
sarb
and
sub
jp
add
dec
icebp
push
aad
test
sbb
mov
pop
loop
das
mov
mov
jno
or
shll
mov
jne
lods
rcll
lea
pop
mov
mov
in
cmp
lds
in
call
pop
jo
insb
lods
jge
repnz
add
add
mov
insl
pop
jb
mov
xlat
loopne
scas
pop
data16
in
cmpsl
jl
test
mov
xor
mov
inc
jnp
pop
rclb
mov
insb
js
stos
call
push
lahf
pushf
cli
int
or
cwtl
push
and
pop
sub
or
sahf
xchg
inc
pop
and
sub
dec
dec
pop
xor
int3
jo
jnp
adcl
xchg
je
push
das
jnp
sub
sub
cmpl
xor
or
mov
cmc
aad
inc
out
xchg
movsl
sub
add
mov
out
lret
in
adc
and
out
jnp
cltd
inc
test
sbb
mov
shll
pusha
add
dec
dec
inc
bound
pop
outsb
arpl
aas
shrl
mov
loop
mov
ror
ljmp
mov
fwait
xchg
xchg
pop
imul
flds
dec
in
rcll
pop
dec
push
adc
pop
jmp
shl
sbbl
test
add
in
scas
notb
or
sub
dec
dec
pxor
rorb
add
call
xor
push
bound
and
xor
push
dec
jp
lds
das
xlat
sub
in
loopne
sbb
jp
jne
insb
rcrb
xchg
sub
aaa
mov
add
mov
pusha
out
adc
inc
hlt
fs
add
shr
dec
cmc
push
lahf
repz
inc
mov
lds
ret
dec
addl
sbb
repnz
mov
in
cltd
ds
jge
out
jbe
fists
lock
push
sahf
sbb
stos
fwait
in
mov
push
add
mov
cltd
scas
mov
movsl
ss
or
add
cmp
mov
loop
sar
out
fisttps
insb
call
loope
dec
mov
fcmovu
into
cld
sbb
pusha
mov
sarb
loopne
adc
pop
lods
in
out
aas
jae
outsb
pop
and
mov
leave
inc
addb
and
mov
jle
outsl
cmp
jecxz
push
dec
fsub
and
in
sbb
mov
push
jle
sub
and
lock
xorl
out
push
mov
jns
jae
inc
inc
rcll
jbe
push
sti
sbbl
push
sarb
mov
rolb
mov
movsb
mov
and
xchg
xchg
inc
jmp
cmp
cmpsb
add
out
push
sub
fisubl
and
into
outsl
out
orps
push
push
mov
or
roll
jmp
push
and
js
xor
jns
jg
dec
movsl
int
mov
push
nop
cld
mov
cmp
add
xchg
in
mov
inc
fistl
jno
and
movsb
dec
add
rolb
popf
inc
out
cmpsl
sarl
and
adc
lea
iret
into
and
cltd
mov
test
add
in
pop
pusha
addb
cwtd
or
jge
fsub
stos
cmp
pop
inc
dec
sarl
test
loope
adc
jns
push
int3
in
or
pop
jne
paddsb
cmp
and
mov
mov
push
daa
subb
jmp
pop
dec
inc
clc
mov
lcall
incl
pop
loop
call
push
adc
daa
adc
orl
call
xchg
cmp
cmp
aam
pop
int3
or
movq
daa
push
sbb
pop
loope
into
ljmp
jnp
adc
mov
and
sahf
mov
xor
cmpsb
push
add
xchg
insb
xchg
pusha
ret
ds
xchg
mov
arpl
andb
mov
inc
aam
je
mov
orb
mov
jnp
cmp
andl
aas
outsl
and
loop
adc
test
adc
divb
xlat
fists
sbb
mov
aad
pushf
lret
mov
push
add
inc
inc
sub
std
sahf
insl
xor
fcoml
inc
fdiv
push
int3
std
test
sbb
lods
mov
cmpsb
xchg
fcmovb
inc
xchg
mov
enter
aam
rcll
inc
inc
adc
lock
cmp
movsb
push
adc
fdivs
iret
clc
mov
inc
loopne
popa
ret
fsubl
aad
inc
les
es
pop
xchg
nop
gs
imul
stc
inc
lock
mov
push
popf
sbb
jne
ret
iret
loope
scas
mov
fnstcw
jns
fs
dec
clc
xor
jo
adc
inc
jns
insb
push
mov
adc
je
movsb
jnp
jo
lock
popa
dec
rcl
or
outsl
stc
stc
out
shlb
inc
std
out
and
cwtl
mov
add
push
je
pop
arpl
xchg
mov
gs
dec
mov
push
stos
xor
and
enter
inc
sub
adc
enter
jbe
adc
cs
pusha
jle
orb
enter
mov
mov
dec
jmp
movsl
mov
dec
push
dec
add
mov
sarl
inc
inc
or
ljmp
aad
neg
insl
sub
or
sarb
sbb
mov
fcoms
nop
pop
gs
mov
xor
xor
test
fcmovnbe
call
sarb
sbb
aam
int3
and
cmp
adc
mov
or
in
cld
popf
xchg
movsl
shll
scas
ds
or
lods
fnstcw
mov
push
xor
jl
xor
dec
popl
adc
imul
aad
sub
cwtl
ss
inc
mov
dec
xor
bound
push
das
adc
mov
and
movsl
push
loop
fisubrs
popf
add
xlat
inc
mov
ds
add
or
sub
xor
loop
fadd
movsl
push
inc
in
aaa
xlat
jne
loop
adcb
aaa
sub
sub
dec
shlb
movsl
out
aaa
int
sbb
mov
and
mov
jb
xchg
sub
fnop
mov
rorb
gs
dec
mov
negl
add
sbbb
mov
int3
jb
stos
fimull
sti
cmp
mov
sub
out
out
into
test
pop
aaa
enter
add
mov
in
cs
push
jmp
sbb
xor
lret
adc
push
repz
mov
xchg
les
xor
mov
sub
stc
insl
cltd
mov
shlb
jbe
xchg
lcall
jbe
inc
fnstsw
nop
cltd
xchg
lahf
dec
mov
mov
fistps
add
fcmovne
imul
add
dec
jmp
fs
neg
inc
xchg
repnz
push
in
sub
adc
cltd
aaa
jnp
inc
jl
inc
and
sub
jne
out
pop
imul
loope
jns
test
jmp
leave
repz
and
sbb
pop
mov
adc
lret
js
outsb
jns
mov
xchg
jecxz
inc
inc
cwtl
insl
or
xchg
jbe
cltd
cwtl
xor
sub
cmc
push
mov
jnp
xchg
pop
repz
adc
or
test
subl
sbb
popf
mov
movsb
mov
negb
mov
das
cltd
push
or
icebp
fsts
push
sbb
inc
or
sub
lret
or
pushf
pop
lahf
xchg
xlat
cmc
stos
stos
add
out
jb
lods
mov
aas
sbb
movsb
and
inc
testl
jnp
add
mov
idivl
jge
push
mov
mov
lret
lcall
scas
sarb
icebp
jle
dec
jg
jnp
clc
cs
pop
fldcw
fsubs
pushf
sbb
push
js
jne
jp
fcomps
mov
mov
enter
ljmp
add
aam
loop
sbbl
xchg
ficoml
fstpt
nop
sub
dec
xchg
addb
sbb
push
testl
loope
jmp
aaa
les
sbb
fcomp
std
inc
cmpsl
pop
inc
lock
mov
adc
xor
shlb
mov
dec
dec
jp
clc
out
pop
jg
pop
jbe
xchg
or
dec
clc
imul
mov
or
xor
stos
mov
loopne
cmp
pop
cmp
fsubr
cmp
loope
mov
notb
out
xor
cld
ffreep
jl
mov
mov
cwtl
movsl
xchg
or
and
mov
ds
sbb
xlat
adc
in
dec
add
sahf
test
push
in
mov
scas
insb
jno
call
das
inc
and
pop
mov
push
mov
mov
push
fstpt
movsl
into
stos
or
stos
xchg
outsb
outsl
or
jg
shlb
inc
dec
pop
icebp
pop
jl
pusha
lods
hlt
ja
dec
dec
test
jb
sub
into
mov
icebp
sahf
or
scas
mov
in
ret
mov
stos
jg
inc
int
cmp
sti
orb
push
pop
in
lods
and
add
mov
js
jns
divb
clc
aas
push
mov
cmp
scas
sbb
jmp
dec
in
in
sbb
shll
mov
mov
fisttps
jno
pop
stos
je
dec
mov
lret
mov
pop
push
push
pop
mov
or
adc
rolb
lods
rclb
dec
jae
inc
sub
leave
mov
xor
add
lods
das
stos
cmpsb
mov
xchg
xchg
shlb
sbb
push
rcrb
icebp
ror
stc
or
test
mov
adc
jns
pop
dec
fldt
or
addb
lea
scas
or
loopne
call
or
addr16
imul
mov
pusha
loope
cltd
jns
mov
js
cmpsl
pop
jmp
push
hlt
cmpsl
iret
add
popa
test
movsl
out
mov
or
lods
dec
xlat
push
lods
pushf
fcomi
test
in
jle
xchg
sbb
icebp
outsl
jae
fcoml
pop
jecxz
jp
fcmove
mov
fimuls
in
fnsave
xor
int
cs
int
cmp
add
sar
adc
lret
cs
ljmp
ret
inc
cmp
adc
popf
jg
stos
dec
clc
iret
inc
inc
pop
sub
ds
test
jg
mov
xchg
loope
nop
bound
mov
mov
xor
and
lcall
loope
mov
ds
shrb
inc
and
inc
scas
inc
outsl
sbb
lods
test
and
cmp
push
rorl
sub
js
inc
mov
aam
call
jb
pop
mov
das
repnz
and
ljmp
or
je
lods
rorb
mov
std
outsb
cmc
xor
ss
mov
popf
xor
pop
shrl
inc
inc
ds
cld
sub
scas
mov
mov
push
push
ja
scas
lret
mov
jl
stos
into
and
std
push
das
sub
dec
xor
out
and
out
cmc
mov
mov
enter
xor
js
mov
pop
enter
stos
cmp
andl
sbb
fnsave
jmp
je
jbe
in
in
pop
popa
push
aad
mov
xchg
jns
dec
mov
movsb
daa
mov
cld
sbb
mov
jnp,pt
jno
in
fs
pushf
inc
scas
mov
add
mov
lods
inc
out
test
int3
loope
push
fcomps
mov
sahf
push
mov
push
add
mov
cmp
dec
cmpsb
or
xchg
pop
lcall
and
mov
or
xchg
sub
xchg
sar
div
or
les
sub
sub
fmull
jmp
aas
in
jl
cmovns
inc
xor
mov
sti
clc
ljmp
in
popf
sbb
inc
rdtsc
test
flds
dec
ds
mov
divl
aam
fstl
jae
iret
sti
arpl
mov
jne
aam
inc
int
add
cmp
test
and
and
mov
data16
xor
and
push
std
aas
hlt
out
cli
popf
aas
pusha
shrb
and
jbe
rcl
push
pop
mov
ja
add
fdivrl
mov
movsb
dec
sub
xchg
int
stc
movsl
lahf
int
pop
mov
test
push
ret
adc
test
rorb
push
pop
sbb
sbb
pop
mov
and
jecxz
sbb
jmp
addr16
fwait
sahf
repnz
ss
push
ja
mov
imul
mov
in
or
call
xchg
out
sub
imul
sub
notb
xchg
sbb
adc
in
jns
sub
loope
insl
mov
mov
or
addps
dec
add
rcrb
push
xchg
cmpsb
aas
mov
push
jbe
mov
jl
mov
subl
fwait
gs
mov
in
adcl
and
inc
inc
int
sbb
or
scas
fwait
ljmp
hlt
dec
xor
lea
fcoml
dec
cs
aaa
inc
mov
cmp
cltd
insb
mov
mov
mov
or
push
push
lcall
xor
cwtl
xchg
daa
mov
mov
test
cmp
out
cs
sbb
lret
mov
jne
mov
cs
mov
inc
inc
stc
sub
rol
jmp
xchg
add
jge
jg
xor
mov
xor
rclb
mov
loop
jae
jbe
dec
loopne
push
movsl
out
inc
sahf
xchg
jp
sbb
xchg
inc
lea
mov
mov
out
leave
mov
jno
divb
sub
bound
cmp
sub
jbe
hlt
leave
jnp
mov
inc
dec
and
rolb
loope
loop
icebp
xchg
cwtl
mov
divl
sub
lea
cmp
mov
push
mov
mov
loope
aam
mov
cmp
pop
mov
mov
push
gs
aas
js
ret
adc
mov
sbb
pop
adc
jp
lahf
mov
inc
or
in
icebp
movsl
movsb
fwait
adc
mov
mov
mov
mov
loopne
mov
pop
or
cmpl
xor
jne
imul
int3
jmp
cs
and
or
es
into
ja
ljmp
push
mov
jns
mov
jb
lcall
std
rcrb
xor
fs
pusha
sbb
mov
fs
addb
dec
mov
lcall
jle
int3
lret
cmp
movsb
dec
push
cmp
xor
in
sub
in
frstor
call
iret
push
notl
xor
lahf
cmpsb
test
cmp
inc
aam
rolb
int3
cli
andl
cmc
adc
imul
jp
add
adc
in
sti
jl
dec
loopne
repnz
faddl
xchg
jnp
ljmp
sub
or
es
cmp
dec
ja
lcall
mov
adc
cmp
addl
pop
sbb
jmp
pop
push
loopne
aaa
data16
in
xchg
into
adc
mov
push
testl
imul
jp
xor
adc
ficompl
out
loope
test
aad
fcomps
sub
mov
sbb
xor
lock
stos
aad
daa
frstpm(287
mov
lods
jle
imull
dec
icebp
out
or
mov
jl
inc
push
test
cmc
xor
sbb
aam
fs
lcall
mov
inc
insl
xchg
inc
rorl
pusha
fisubrl
and
stos
add
imul
loope
cmp
cmpb
push
fsubp
pushf
std
mov
notl
mov
xchg
imul
in
imul
rclb
push
shr
push
pop
add
xchg
sti
push
sub
inc
sti
dec
and
sub
and
xchg
fsubs
into
lret
lret
nop
cmpsl
test
clc
xor
cmc
cli
or
mov
push
sub
test
mov
enter
out
mov
mov
fmull
loopne
add
dec
pop
nop
push
or
push
mov
ss
repnz
sub
fsincos
test
xchg
mov
jg
mov
frstor
adc
ja
test
sub
or
outsl
inc
xorb
add
jb
xchg
push
jl
daa
aas
jne
mov
cld
add
cmp
mov
rorl
pushf
mov
sbb
xchg
cmc
mov
add
mov
outsb
mov
inc
inc
repz
cwtl
addl
stc
sub
jo
out
push
sbb
std
lea
lods
arpl
pop
das
pop
bound
stc
adc
mov
out
sbb
lret
idivb
cmp
stc
jp
inc
cld
pushf
jno
cmpsb
std
lret
loope
nop
mov
mov
sbb
or
cmp
loopne
ret
mov
inc
inc
mov
ret
in
or
ljmp
mov
jg
cmc
cmp
jnp
lahf
cmpsb
gs
mov
push
or
push
loop
je
cmp
scas
int
push
loop
int3
push
arpl
add
movsl
add
inc
bound
and
xor
loope
inc
cmp
cmpsl
fbld
mov
push
stos
push
in
call
xchg
rorl
push
xchg
add
fwait
je
xlat
aad
subl
mov
pop
dec
jae
xchg
push
adc
iret
sub
inc
mov
push
in
addr16
and
es
sub
sub
pop
pop
das
lahf
xor
mov
push
xchg
mov
mov
dec
fstpt
add
lret
addb
mov
pop
jmp
inc
push
fs
fisttpl
inc
xchg
decb
and
xchg
jno
sbb
popf
aad
imul
js
jb
fucomi
pop
insl
data16
xchg
mov
outsl
jns
data16
sbb
mov
pushf
dec
mov
pop
or
cmp
jno
test
cmp
test
shlb
and
fwait
ret
xchg
dec
dec
push
into
and
dec
and
mov
sbb
bswap
mov
push
pop
dec
inc
mov
adc
xor
std
int
hlt
pop
repnz
lret
mov
fcomps
lret
ja
rorb
shl
orl
cmp
jnp
hlt
jne
aam
imul
not
dec
xor
dec
pop
sub
xor
stc
add
jbe
and
fisttps
push
mov
shr
sti
iret
adc
cmpl
jnp
mov
testl
popl
mov
jne
xorb
aad
xor
outsb
add
ror
testb
mov
pop
adc
dec
dec
sahf
aas
lock
adc
and
push
je
push
addr16
xor
lock
mov
or
sarl
jge
fdivr
sbb
jp
insb
mov
adc
mov
adc
or
or
loopne
sub
mov
push
xchg
in
sub
shlb
ffree
cmp
pop
pop
test
lock
cmpsl
and
adc
mov
cmpsl
repz
aas
xor
pop
mov
ret
inc
fdiv
es
fiadds
mov
push
cwtl
push
arpl
iret
out
jnp
sbb
out
add
and
pop
filds
mov
adc
out
push
fisttpll
mov
inc
dec
ljmp
sbb
int3
cli
add
sub
xor
push
mov
push
aad
xlat
mov
orl
inc
xor
sbb
xor
adc
push
gs
push
imul
stos
push
insl
ss
jp
fnstcw
push
and
cmp
in
aaa
sbb
sub
mov
xor
xchg
sub
inc
cmp
dec
xor
insl
out
mov
inc
add
cwtl
fiadds
mov
inc
sbb
sbb
sbb
inc
sub
lock
lldt
mov
jmp
adc
add
repz
mov
jnp
xlat
add
jne
mov
sbb
in
xchg
or
jae
je
mov
mov
mov
push
or
addl
or
mov
testb
std
sti
movsl
cmp
addr16
cmp
fidivl
scas
cmpsb
xlat
adc
cmp
movsb
loop
in
fiaddl
test
mov
push
push
xlat
pop
mov
cmp
stc
dec
xor
mov
push
cmp
addr16
je
loop
xor
xor
outsb
fs
movsb
roll
fldenv
xor
dec
aaa
cld
das
cwtl
xor
gs
pop
jge
jmp
mov
xchg
and
add
push
and
jmp
or
adc
sub
int
icebp
add
loop
fsubs
xor
cmc
ret
push
jno
mov
xchg
out
rolb
push
in
mov
clc
mov
and
into
sarb
jmp
test
daa
adc
dec
cmpsl
stos
xchg
fldt
shl
xchg
fsubp
cwtl
jae
pop
jge,pn
andl
xor
jae
adc
pop
fdivrs
aas
mov
cmp
gs
rcll
inc
mov
stos
sub
mov
sti
cmpsb
ss
arpl
dec
adc
jge
xor
add
pop
pop
dec
jle
das
loopne
pop
push
push
pop
inc
push
int
adcb
out
dec
xchg
js
lret
sub
ja
cltd
popa
mov
arpl
mov
xchg
push
mov
iret
or
dec
sarb
dec
aas
ret
jnp
add
sbb
sub
add
adc
adc
and
jl
test
popf
inc
inc
xor
rorb
push
inc
or
xorl
ret
lods
sub
dec
arpl
push
push
aas
pop
and
inc
jnp
cmpsl
pop
in
fisttpl
ret
jge
sub
divb
lea
loop
sbb
in
rcrl
xchg
out
fstpl
sbb
mov
push
aad
fmuls
cmc
mov
adc
inc
inc
or
mov
rorb
jle
imul
inc
xchg
jle
je
mov
es
daa
fisttpll
mov
adc
out
sbb
xchg
test
cmp
ja
mov
out
leave
cmp
and
lret
jo
js,pn
ficoms
inc
inc
push
stc
es
lock
sub
std
pop
je
addr16
out
idivb
outsl
lret
mov
sti
add
mov
sbb
daa
and
and
jge
bound
cmp
dec
leave
or
push
sti
and
stos
jae
fildll
xor
in
xor
loopne
loopne
les
xchg
mov
icebp
lea
shr
ds
xchg
dec
mov
xchg
inc
mov
sbb
fs
inc
popf
dec
call
jge
loop
ret
xchg
cmpl
or
add
fwait
lea
or
aam
aas
outsb
add
mov
sbb
andb
aad
push
inc
xchg
cmp
lret
pop
xchg
inc
js
dec
lods
into
out
rorl
adc
cmpsl
dec
push
pop
jo
lds
inc
sub
out
cltd
inc
insl
mov
test
popa
fwait
dec
inc
mov
or
arpl
push
mov
fstpl
cmovl
stc
jp
sub
jl
sbb
jnp
fbstp
movsb
andb
les
stos
sub
pop
dec
cmp
sbb
hlt
jbe
jne
push
and
adc
pop
aaa
les
in
ficomps
mov
lods
pop
jno
jmp
rorb
out
mov
xchg
jb
and
bound
ds
js
fldt
scas
jne
or
mov
push
hlt
mov
jecxz
iret
pushf
mov
fnstsw
fmuls
add
inc
inc
xchg
sbb
outsb
jno
xchg
or
shlb
jne
popa
pusha
out
int3
scas
mov
dec
test
and
push
stc
sbb
lret
mov
xchg
push
dec
dec
push
pop
fldl
adc
sbb
mov
jnp
and
imul
int3
movsb
loope
test
std
pop
movsb
out
roll
jmp
fs
out
dec
or
jmp
in
lret
addl
pop
in
ret
pop
pop
xor
and
hlt
cmpsb
imul
push
add
dec
mov
pop
add
lods
loop
sub
call
cmpsl
hlt
mov
adcl
mov
adc
js
inc
data16
gs
call
pop
rclb
and
lock
jg
jo
pop
cmpsb
out
cmp
mov
outsb
adc
xlat
sahf
addl
adc
cmp
shl
sbb
out
aam
jl
or
ljmp
sub
adc
shr
std
ret
mov
mov
add
xchg
cmp
dec
jmp
subl
in
adc
mov
shrb
loopne
sbb
sahf
xor
push
sbbl
and
or
clc
lods
aad
mov
sbb
pop
cwtl
mov
notl
mov
push
repz
xor
mov
inc
repnz
cld
pop
or
jg
clc
adc
mov
push
arpl
sub
cmpsl
inc
lods
int
pop
int3
stos
scas
pop
in
scas
lods
adc
stos
add
nop
pop
xor
insl
js
ret
imul
add
es
xchg
cltd
jg
ret
lcall
nop
btc
ficoms
sti
pop
cmp
xchg
inc
fdivrl
test
in
adc
jne
and
or
adc
movsl
sub
dec
addl
aad
mov
sub
and
jp
imul
and
dec
add
dec
fisubs
std
mov
jl
testb
shlb
xor
cld
mov
out
and
cld
jmp
daa
xchg
push
sbb
pop
mov
in
int3
jnp
xor
jns
cli
ljmp
xchg
xchg
mov
mov
xchg
fadd
sub
js
lods
inc
or
jb
outsl
mov
mov
xor
xchg
ja
call
xchg
test
inc
dec
lea
loop
incl
fs
add
add
movsb
mov
test
inc
jecxz
dec
fiadds
aam
and
xor
or
loop
stos
mov
ss
aas
loope
iret
jecxz
inc
bound
xchg
fmuls
lahf
fmull
adc
mov
not
lret
fdivl
out
aaa
pop
push
jnp
arpl
pushf
dec
in
and
notb
fwait
xlat
ds
jne
test
mov
dec
mov
mov
mov
out
jp
out
adc
icebp
lcall
ljmp
ds
into
sbbb
hlt
vrsqrtps
clc
jb
pop
aas
sub
inc
sbb
mov
std
adc
jecxz
mov
sub
add
add
fdivr
xor
in
push
sahf
rolb
loop
das
mov
pop
xchg
dec
pop
dec
leave
adc
jle
test
shrl
sub
dec
cmp
nop
and
fwait
pusha
into
test
or
adc
and
lods
loope
mov
outsb
icebp
mov
dec
xchg
sbb
pop
dec
cld
cmc
add
xchg
lret
adc
mov
sub
sub
mov
sbb
add
insl
gs
jg
jl
out
pushf
aam
sub
or
scas
push
inc
sbb
orb
and
or
push
int
sbb
mov
mov
xorb
sbb
jne
pushf
sub
lret
jp
and
jne
ljmp
adc
out
dec
cmp
mov
stos
scas
pusha
xchg
sbb
loope
xchg
scas
jp
fbstp
outsl
loope
add
stc
pop
shl
das
ss
jno
mov
adcl
mov
mov
sub
outsb
insb
scas
mov
popa
jp
outsl
testl
jno
cmp
mov
and
outsb
in
sub
jb
hlt
stos
adc
sub
decl
jp
in
out
lock
and
into
add
clc
loopne
sbb
fisubl
mov
subl
sub
pop
add
dec
dec
mov
movsb
lahf
xor
das
sub
arpl
les
dec
leave
push
mov
pushf
nop
nop
push
pop
fidivs
jmp
dec
ficoms
xchg
shlb
mov
cmp
jmp
jb
sbb
dec
iret
xchg
or
mov
fldt
push
mov
xchg
mov
insb
pop
out
iret
mov
xor
mov
mov
pop
xchg
aad
sub
sub
or
adc
out
mov
ret
scas
shlb
mov
outsb
add
into
data16
mov
push
stos
mov
push
xchg
add
mov
xor
sahf
call
aad
push
pop
jnp
les
xchg
cmc
hlt
dec
mov
push
fdivl
mov
mov
xchg
xlat
xor
aaa
jmp
jns
scas
xchg
les
test
bound
ret
inc
lock
int3
mov
add
addr16
add
lret
sbb
fwait
push
movsb
pop
and
xchg
or
dec
push
jmp
cmc
imul
ret
imul
movsb
xlat
sub
push
xor
adc
outsb
jae
outsb
jns
incb
push
imul
cmp
nop
pop
jnp
das
mov
int
test
add
rcrl
add
or
jae
and
hlt
fnsave
adc
repnz
sarb
jge
rorl
das
jle
sub
out
popf
in
jecxz
ja
pop
cwtl
xchg
or
mov
cltd
ficomps
ret
aam
jmp
shl
lods
int
push
out
movsl
das
cmp
out
mov
adc
dec
sub
mov
lret
or
loop
adc
xlat
scas
ss
xor
mov
les
push
repz
movl
repz
jmp
dec
gs
sub
mov
add
das
test
mov
lahf
cmpsl
adc
dec
lds
mov
push
das
jnp
stos
stos
mov
mov
nop
outsb
mov
sbb
pop
cmpsb
fadds
adc
and
clc
pop
jnp
add
sbb
jb
in
jno
sub
dec
mov
xor
cmp
mov
sub
in
pop
mov
scas
daa
lea
mov
jo
sbb
jl
jl
loop
gs
inc
and
test
mov
sbb
mov
cs
jo
jl
mov
pop
cmp
das
test
fdivs
lret
or
inc
enter
ret
mov
sbb
mov
jne
inc
ljmp
push
data16
int
pop
cmpb
lods
push
cmp
pop
xor
test
cmpsb
xor
mov
adc
push
dec
dec
fimull
pop
fsubrs
pop
rclb
insb
outsb
jmp
imul
es
dec
icebp
lds
mov
dec
dec
sbb
fnsave
adc
adc
push
test
jo
aaa
add
xchg
aas
sub
enter
push
xchg
dec
pop
inc
es
mov
insl
pushf
cmp
sub
or
sub
push
mov
aaa
call
inc
scas
mov
ficompl
out
incw
cmpsb
fadds
sbb
ss
imul
insb
cmp
negl
out
xor
inc
sub
outsl
je
hlt
sahf
push
lods
imul
mov
in
fdivrl
lret
cltd
xchg
inc
dec
mov
pop
xchg
and
jl
push
sbb
adc
xchg
pop
jp
icebp
mov
mov
test
inc
inc
push
xor
das
or
out
jne
mov
imul
fs
and
jmp
sbb
loope
jbe
and
sarb
sub
mov
xorl
jbe
stc
pop
inc
int
in
jbe
std
out
aas
mov
xchg
in
inc
mov
daa
xchg
cmc
cwtl
test
push
cmc
mov
in
mov
cvttps2pi
insb
lds
mov
mov
sub
mov
sub
aad
jae
xor
pop
stos
insb
repz
ds
cmp
aam
popa
sarb
loope
mov
popa
jns
lea
and
sbb
hlt
sub
call
mov
fsubrp
mov
imul
cmc
and
lahf
cwtl
mov
mov
jl
leave
lcall
clc
adc
add
imul
jnp
dec
enter
sbb
xor
rorb
fadds
xchg
adc
push
mov
ds
movsb
sbb
jp
cmp
aaa
mov
into
dec
and
movsl
cmp
inc
stc
adc
insl
mov
jb
mov
sbb
and
pop
xlat
adc
mov
outsl
add
sub
mov
cmp
in
testb
jecxz
jnp
add
and
jb
ljmp
std
xor
fists
push
or
lock
mov
pop
ficomps
cmp
out
movsl
cmp
inc
inc
adc
in
pop
xor
sbb
pushf
jb
mov
in
push
xchg
repz
pop
shlb
nop
std
dec
mov
dec
imul
popf
xor
icebp
mov
xchg
sbb
mov
dec
cld
fwait
popa
cmp
add
testl
ret
and
xor
ret
lods
fnstsw
es
push
xchg
adc
idiv
push
xchg
adc
in
fnstsw
leave
cs
ds
sub
lock
and
fcompl
xor
cs
push
fnstsw
pop
push
push
aam
jg
add
cmp
adc
or
inc
scas
mov
test
push
and
mov
imul
sub
xchg
jmp
xchg
add
mov
imul
cmp
dec
test
adcl
pop
xchg
sub
loop
in
sub
cwtl
pop
outsb
xlat
adc
stos
movsl
mov
mov
lods
add
mov
cmp
cld
and
inc
pop
lahf
jle
test
stos
jmp
jge
cmp
dec
out
dec
pop
loopne
xchg
xor
mov
dec
lahf
adc
or
xchg
push
rorl
ja
in
or
add
xchg
fs
mov
lock
xchg
popa
into
mov
in
pop
sub
repz
or
call
scas
movsl
mov
out
lahf
daa
add
mov
mov
roll
test
scas
mov
stc
sub
mov
lods
inc
or
mov
xor
lds
xchg
idiv
dec
push
and
sti
and
pop
inc
test
nop
mov
jnp
lea
inc
sub
mov
sbb
pop
xchg
add
cmp
or
adc
mov
adc
adc
or
mov
stc
movb
cmp
push
lahf
orl
jl
popa
std
pusha
call
and
and
xchg
jecxz
pop
push
mov
aad
mov
mov
gs
shl
push
sub
jns
int3
xchg
or
mov
dec
popa
and
xchg
or
outsl
cmp
mov
sbb
jp
inc
xchg
pop
pop
mov
lock
enter
and
inc
ret
xor
ja
subb
inc
mov
dec
aas
inc
cltd
jb
inc
and
sbb
sarb
cmp
lcall
lods
sub
cmp
out
or
jnp
add
and
pop
in
dec
jns
jo
ss
mov
mov
inc
shll
loop
or
sbb
cmc
cmp
push
mov
push
repz
adc
ds
inc
jp
xchg
mov
mov
and
push
xchg
ljmp
lock
addl
cltd
sahf
pop
jle
inc
jns
jae
aaa
scas
imulb
dec
fcompp
outsb
cmp
fiadds
sbb
sahf
repz
insl
push
ret
mov
es
lds
repnz
fistps
lods
clc
stos
mov
and
arpl
fs
add
mov
push
stc
lock
testl
fistpl
aad
cwtl
mov
cmpb
jl
fistpll
xchg
push
std
and
fldl
iret
stos
jb
sbb
test
and
ja
daa
xor
mov
mov
ret
pop
cmp
lret
xchg
mov
adc
or
cwtl
lock
push
sbb
push
and
mov
cltd
push
push
lods
adc
push
cmp
int
cli
pop
add
sbb
mov
and
and
push
mov
cmc
pop
loop
movsl
dec
xchg
insb
ds
add
andb
or
inc
lcall
and
inc
inc
pushf
enter
mov
inc
push
push
sbb
cmpsl
insb
mov
in
xor
adc
inc
mov
adc
push
xor
gs
cwtl
jo
insb
lds
pop
movhps
cmpsl
mov
outsl
mov
cli
mov
enter
imull
cmp
add
js
xchg
dec
push
mov
mov
call
lret
aaa
incl
aaa
pop
int3
sub
mov
fs
out
ja
push
int
dec
imul
xorl
insl
stos
sti
stc
adc
and
push
push
outsl
aam
sbb
push
movsl
push
sbb
push
ffreep
xchg
adc
out
out
dec
adc
ds
or
iret
leave
add
ret
out
aad
sbb
pop
or
fsubs
pop
andl
mov
sub
rcrb
xchg
daa
inc
cmp
or
testl
jno
sub
xchg
faddl
inc
dec
and
mov
sbb
push
fsin
mov
mov
inc
inc
inc
push
xchg
xorb
arpl
xorl
jb
imul
rcr
dec
pop
push
cmpsl
cmc
jns
pop
sub
lods
pushf
jle
adc
dec
mov
shlb
pop
or
call
xor
pop
adc
in
jl
loopne
rorl
push
imul
movsb
push
mov
cmpl
and
sbb
jo
dec
xlat
xchg
stos
shl
in
cmp
js
mov
cmpsb
jge
iret
sbbl
xlat
pop
sahf
fcoml
push
fidivrl
push
pusha
xchg
out
mov
imul
std
cmc
add
fwait
cmpsb
pop
mov
jns
arpl
mov
cmp
pop
pop
pop
push
jae
add
pop
je
roll
sahf
xchg
scas
or
sub
les
or
mov
outsl
lea
pop
xlat
xchg
ja
outsb
add
in
and
pusha
and
fyl2xp1
arpl
repnz
push
icebp
push
push
rolb
jecxz
shlb
sbb
dec
jmp
ror
insl
or
stc
mov
adc
fdivrs
imulb
inc
mov
mov
gs
mov
mov
mov
push
adcb
sahf
mov
fbld
mov
xor
mov
loopne
das
out
jno
gs
push
push
aas
inc
es
cli
pop
push
stos
loopne
sub
pop
in
mov
out
out
sbb
jno
int
push
stos
pop
filds
push
jg
mov
stos
sub
sbb
push
xor
bound
push
es
rorb
jle
fiadds
fisttps
jmp
lcall
cs
movsl
xor
pushl
dec
pop
add
mov
mov
jecxz
mov
jmp
lods
mov
cmc
cmpsb
xlat
xchg
rcll
jmp
pop
or
and
outsb
pusha
sub
and
push
inc
cli
daa
mov
outsb
inc
push
jmp
add
xchg
mov
pushf
lcall
clc
jg
insl
in
shll
daa
lea
mov
dec
add
ljmp
and
daa
lock
ficompl
xchg
jmp
mov
leave
dec
inc
daa
pushf
cltd
adc
mov
cmc
or
mov
shrl
int
mov
sbb
out
loope
outsb
xchg
mov
popa
mov
mov
pusha
inc
sbb
fldl
int
add
sahf
mov
shll
out
ja
push
std
ret
icebp
lret
rorl
icebp
mov
mov
inc
xchg
insl
sbb
addr16
mov
pop
inc
push
ds
loopne
mov
fiadds
repnz
xchg
les
xchg
xchg
pushf
hlt
lahf
mov
xchg
sub
pop
adc
jne
popa
sub
std
outsb
arpl
mov
lods
enter
insb
push
das
out
jnp
inc
xorb
or
jns
sub
aaa
cmp
cwtl
adc
mov
icebp
imul
dec
xchg
test
cmpsb
xchg
or
mov
dec
jns
add
sub
jmp
jp
push
jae
aad
aas
into
cmp
cmp
sbb
xor
shrb
nop
lcall
jmp
in
into
mov
cs
bound
cmpsl
cmpsb
sbb
cmp
or
addb
les
out
and
nop
outsl
aaa
out
lock
in
cmp
pusha
cmc
mov
mov
sbb
mov
jnp
in
xor
gs
xchg
xchg
xchg
push
out
xchg
mov
mov
xor
repnz
mov
iret
bound
add
mov
lret
xchg
mov
sbb
ret
add
fcompl
subb
addr16
mov
shll
int
fisubl
lods
mov
test
sbb
xchg
repz
std
or
pop
repz
or
outsl
icebp
js
add
bound
pop
sbbb
fcomps
dec
and
xor
mov
pop
dec
outsl
push
and
rol
jo
fdivl
jl
add
test
or
mov
xchg
sbb
cmp
dec
sbb
inc
setle
push
and
xchg
xor
pop
arpl
mov
mov
xchg
nop
xor
mov
sarl
jns
out
jp
rclb
and
movsb
mov
test
and
out
dec
and
je
sbb
pop
out
fsts
xchg
scas
sbb
movsb
push
lret
jecxz
jmp
push
or
pop
lods
xchg
xchg
rcrb
fnstenv
mov
scas
sub
push
lret
mov
out
xchg
xor
and
enter
adc
lret
jecxz
fdivrp
dec
pop
ss
lods
jns
mov
xor
cmp
shll
adc
lea
push
outsb
mov
fstl
dec
in
clc
sub
xchg
int3
mov
shrl
rclb
ss
shrd
xor
sti
and
dec
mov
or
pop
cli
ljmp
mov
or
add
pusha
push
aaa
or
mov
bound
movsl
sub
scas
mov
jae
jg
lahf
faddl
setnp
sbb
jno
cmp
in
jl
int
and
enter
pop
lea
fldenv
int
stos
add
lahf
adc
cltd
popa
mov
addr16
dec
cmp
inc
push
xchg
inc
adc
in
sbb
mov
out
jle
sub
pop
leave
xor
arpl
cltd
push
sub
cmc
dec
fldenv
jmp
pop
push
ret
push
mov
jbe
mov
push
scas
sub
mov
cwtl
mov
imul
inc
mov
sbb
loop
add
or
add
int3
pop
test
pop
mov
shll
lds
xor
and
sub
rorl
ss
outsb
dec
cs
mov
subb
ret
stc
mov
and
test
and
mov
call
test
xor
movsb
and
adc
jb
xchg
faddp
pusha
or
sbb
jmp
in
cmp
and
loop
into
mov
jmp
xchg
add
push
cs
cli
mov
push
aad
xchg
imul
shrl
pop
ja
into
stos
hlt
int3
inc
es
pop
add
repnz
pop
mov
pop
mov
adc
xor
jbe
in
icebp
int
mov
inc
jno
fwait
dec
and
sub
and
dec
fcoms
xchg
push
lds
or
rclb
cmp
mov
imul
test
push
fidivs
mov
pop
mov
push
sbbl
in
mov
les
popa
inc
movsb
vpackssdw
ret
mov
adc
adcb
test
rorb
xlat
sahf
or
mov
stos
faddl
add
push
mov
push
repz
adc
outsb
adc
out
pop
lahf
stos
adc
test
test
das
dec
sarb
jmp
xchg
or
cs
pop
dec
xchg
aaa
xor
sub
cwtl
push
popl
fs
mov
and
cmp
in
inc
je
xlat
test
insb
bndstx
call
mov
push
test
movsb
mov
push
adc
xchg
dec
cmpsb
outsl
sarl
cmpsb
andb
test
outsb
ret
sub
xchg
jle
sub
dec
and
xchg
push
mov
cmp
aad
jnp
sbb
mov
lock
add
push
add
das
mov
imul
pop
cmc
icebp
cmp
mov
sub
mov
adc
inc
sbb
rcrb
and
cltd
mov
les
mov
and
arpl
js
ret
mov
dec
stc
sub
inc
out
mov
out
cmp
orl
mov
xlat
ret
inc
icebp
stos
rcrl
out
out
pushf
popa
das
jecxz
shrb
mov
out
inc
mov
sub
mov
icebp
or
ret
cmp
mov
dec
dec
fcoms
popa
enter
inc
pop
out
cmc
hlt
sub
sbb
pop
mov
xor
xchg
pop
mov
cltd
add
inc
jg
out
pop
lcall
rclb
lahf
mov
shl
sub
jp
fisubrs
in
pop
es
addl
push
insl
mov
lock
jle
inc
xor
xchg
mov
push
push
js,pt
in
jle
add
mov
lods
sub
mov
ss
dec
ret
add
and
xor
jecxz
out
sub
dec
dec
add
xor
cmp
lret
xchg
fcmovnbe
dec
mov
lcall
sbb
or
push
xchg
cmp
enter
push
jne
push
dec
xorb
sub
xor
xorl
gs
mov
mov
add
cmp
inc
dec
sahf
in
push
xchg
out
pop
or
iret
sbb
test
data16
xchg
pop
mov
add
mov
jne
mov
clc
aaa
mov
sbb
fisttps
pop
push
mulb
loop
xchg
cmpb
xchg
sub
push
sbb
cs
clc
fnstenv
xchg
ret
test
cmpsl
movsl
sbb
out
push
cmp
and
adc
into
cmp
out
enter
arpl
and
jb
inc
call
push
xlat
cmpsb
sbb
popf
mov
jmp
cld
test
jno
data16
pop
mov
dec
cmp
outsb
inc
ja
cmp
add
fs
aam
push
loop
add
xchg
scas
repnz
sarl
aam
js
aad
sbbl
pop
popa
pop
movsb
insb
test
jae
aas
lds
sub
hlt
cmp
push
and
and
lahf
testl
icebp
mov
lcall
sub
push
lahf
sbb
sub
pusha
add
cmp
sbb
xor
xor
or
aas
mov
push
inc
mov
leave
xchg
popa
test
ja
cltd
dec
arpl
xor
mov
iret
mov
dec
fiadds
in
mov
aad
stc
mull
fistpll
sar
loop
push
xor
inc
test
xor
and
add
test
push
jbe
add
insl
iret
cmp
sarb
dec
xchg
je
add
les
dec
xchg
xor
push
lahf
out
movsl
jne
movsb
mov
cld
cltd
lock
sub
hlt
pop
and
rolb
jg
stos
hlt
xor
insb
lret
nop
popa
sub
dec
pushf
in
fiaddl
inc
gs
and
mov
cld
or
out
mov
cmp
or
sub
mov
push
xchg
je
pop
lcall
arpl
repz
mov
and
jbe
jle
je
cmpsb
push
scas
movsb
cli
jl
adc
psraw
testl
cmc
jb
rcl
xlat
cmpsl
std
inc
add
adc
lcall
test
das
and
sbb
pop
xchg
add
in
test
jmp
xchg
je
test
leave
inc
aam
fists
int
xor
icebp
daa
outsl
cld
cmp
insb
in
and
outsb
icebp
out
in
xchg
pop
test
mov
xor
xor
jbe
pushf
ror
addr16
addr16
sub
cmpsb
mov
inc
inc
outsb
pop
mov
fcomps
jmp
push
dec
ja
xor
rcrl
in
push
inc
lock
adc
pusha
and
xchg
or
ds
xchg
add
int
and
pop
jmp
xor
aad
decl
dec
scas
jmp
jno
or
pusha
bound
nop
stos
sub
xchg
ret
sbbl
flds
mov
push
sbb
roll
pop
sub
jle
movsb
fs
outsl
les
adc
in
in
sti
out
sub
mov
sbb
push
pop
adc
or
sbb
or
hlt
das
daa
push
add
lret
stc
repnz
fildll
cmp
leave
mov
add
sbb
pop
ja
push
jge
cmp
xchg
mov
cvtdq2ps
sbb
mov
push
cli
mov
pop
sub
std
out
stos
inc
imul
aas
pop
outsl
arpl
cmp
mov
xor
rolb
or
out
sub
xor
scas
mov
push
bound
clc
cmpb
lret
sbbb
pop
cmp
insl
call
subb
cs
adc
out
ret
aas
int3
mov
cld
cmp
shl
inc
mov
and
jecxz
sbb
jnp
mov
addb
jae
mov
cld
jg
mov
push
iret
xchg
pusha
sarb
imulb
jo
into
add
jecxz
stos
or
int3
stos
stos
loopne
xor
adc
rcrb
outsl
mov
hlt
mov
stos
mov
sub
lcall
scas
or
jae
lods
mov
iret
inc
jmp
push
mov
xor
adc
cpuid
cmp
jle
dec
mov
in
or
movsb
into
mov
cmpsb
sbb
loopne
add
sbb
ljmp
stos
lldt
dec
lods
add
cld
mul
mov
ret
inc
ljmp
int3
cmp
xlat
in
and
sldt
xor
dec
orl
jp
aas
icebp
mov
jae
and
sahf
fstpt
arpl
fwait
xchg
iret
push
pop
shl
inc
push
sub
xchg
cmp
and
hlt
mov
dec
bnd
push
outsb
aad
rcll
or
push
mov
insl
add
xor
or
and
push
adc
leave
mov
pop
mov
clc
jmp
mov
push
pop
in
iret
sub
into
xchg
out
jno
clc
iret
ror
mul
cmp
repz
xrelease
pop
sub
xor
add
sbb
push
lea
inc
ret
push
cmpsl
into
mov
faddl
xlat
loope
subl
sub
jmp
cmp
aam
pop
cli
jb
imul
jmp
imul
xlat
pop
push
das
push
jmp
je
out
push
std
lret
push
dec
inc
jo
mov
aas
jge
fsubrs
xchg
or
pop
test
test
lcall
inc
cmp
jne
andl
int3
jne
loopne
insb
xor
ret
push
call
cmp
addr16
dec
fwait
cmp
inc
enter
mov
push
push
mov
push
leave
mov
pushf
sbb
mov
test
lret
stc
insb
test
shrl
stos
popa
fisubl
and
ficoms
xchg
mov
or
sbbl
xlat
adc
jl
jle
rorl
adc
hlt
pop
push
and
clc
mov
popa
inc
mov
xchg
lcall
loop
sbb
movsl
jl
out
pop
cli
xor
fsts
jae
std
pop
xor
push
lret
je
mov
test
cmc
sbb
bound
mov
mov
stos
cmpsl
sbb
xchg
or
ljmpw
inc
je
mov
and
push
pop
mov
movsl
or
adc
jne
dec
ja
jnp
in
mov
int3
mov
mov
dec
xchg
add
inc
dec
sub
mov
inc
shl
add
push
nop
sbb
dec
pop
enter
mov
pop
mov
arpl
lret
out
or
jmp
in
jns
push
and
fwait
pushf
popa
ja
std
ror
sub
pop
fimuls
cmp
pop
in
sbb
aam
nop
lahf
leave
gs
cmpsb
add
clc
cmpsl
mov
repnz
in
fsts
xor
sti
addr16
inc
in
or
pop
pop
sbb
imul
mov
test
pop
outsl
outsb
push
call
out
or
mov
inc
mov
add
test
xchg
or
cmp
dec
aad
aas
in
int3
arpl
shrl
in
mov
ret
jl
dec
lret
dec
sarl
jg
dec
insb
in
addr16
and
sub
mov
cltd
enter
rolb
imul
inc
das
cmp
lcall
jecxz
jnp
lcall
imul
adc
mov
adc
sub
mov
popa
cmpb
mov
push
mov
imul
loop
push
js
repz
ss
or
clc
push
test
pop
out
out
push
or
cli
stos
add
lcall
imul
add
dec
outsl
movb
stc
sar
cmp
stos
icebp
cmp
inc
sbbb
pop
mov
lret
push
imul
cmp
iret
into
je
pop
cmp
loopne
cli
mov
aas
test
mov
aam
mov
je
jge
into
in
push
fs
and
push
fisubrs
push
fcoms
repnz
jne
or
cmpsb
cmp
add
gs
and
jne
push
push
jne
xchg
test
and
cmp
cltd
cmpl
ljmp
add
inc
fisubs
jmp
ljmp
insb
clc
mov
xlat
inc
call
std
jl
dec
outsl
in
ss
sbb
pop
iret
add
stos
push
push
push
nop
adc
mov
jne
out
mov
sbb
sbb
push
aam
cltd
sarb
mov
mov
sub
scas
imul
lcall
jge
sbb
push
add
push
aam
xchg
movsl
adcb
xor
mov
jb
mov
cmc
xchg
pop
roll
nop
sbb
imul
fcoms
test
subl
ret
mov
sbb
cmp
sbbl
push
outsb
mov
xor
mov
cs
adc
aaa
testl
subl
repz
aas
cmc
xchg
arpl
xchg
in
leave
fiaddl
or
xchg
inc
xchg
adc
cwtl
push
orl
dec
clc
repz
bound
nop
pop
push
pop
fisttps
loope
jmp
inc
push
je
imul
pop
cmp
and
mov
hlt
sub
addl
scas
jmp
lret
pop
es
loopne
xchg
and
bound
imulb
mov
lcall
pop
xlat
push
cld
adcb
int3
jecxz
xchg
mov
pop
jl
jae
hlt
cwtl
ja
add
inc
mov
loope
das
cwtl
cmc
dec
in
push
mov
push
pop
mov
sbbb
pop
fists
stos
xchg
push
cs
cmpsb
jecxz
int3
movsb
dec
inc
mov
xlat
test
aaa
cwtl
rcrl
clc
sub
imul
sub
push
out
insl
sbb
pop
sahf
test
ds
addr16
lock
test
int3
test
mov
sub
dec
nop
inc
cmpsl
cli
pusha
add
dec
lds
sahf
xor
mov
mov
lods
aaa
or
add
roll
push
push
mov
repz
xor
add
fs
lock
mov
clc
xor
sbb
test
std
test
jmp
cmp
daa
daa
adc
lret
popf
push
popa
sbb
outsb
clc
mov
test
inc
andl
repnz
push
jl
mov
push
cltd
ret
fcoms
mov
js
mov
jecxz
sahf
mov
cs
cmpsb
sub
je
pop
jg
out
mov
cmpsb
dec
cmpl
jo
pop
jns
jno
xor
test
cmp
adc
and
jno
movsl
pop
test
enter
mov
fnstenv
pop
adc
loop
dec
adc
pop
mov
pop
es
pop
shll
mov
scas
xor
movsl
fmuls
pop
dec
jmp
mov
push
mov
or
and
ret
repz
ret
mov
aaa
nop
cmp
pop
inc
dec
jb
dec
cmp
mov
adc
pop
aas
jmp
mov
aaa
outsb
sahf
xor
sbb
test
cmc
mov
fmull
lfs
push
loopne
jecxz
clc
jae
push
leave
ljmp
cmc
push
pushf
loop
lcall
mul
xor
into
mov
loopne
cmp
aas
out
loope
testb
and
aaa
daa
bound
xor
push
rcrb
add
stos
into
mov
cmp
stos
inc
push
das
mov
sbb
xor
push
xchg
popl
jnp
pop
mov
dec
push
mov
fs
jecxz
hlt
cld
lock
daa
cmp
int3
dec
push
pop
lods
and
shll
add
inc
push
sub
jecxz
add
aam
rcll
adc
cli
adc
xchg
or
loope
into
std
mov
mov
pop
add
clc
fsubrs
pop
sbb
in
aas
or
pop
rcrl
xor
mov
es
inc
and
daa
pop
notb
into
psubsb
xor
les
mov
out
notl
fcompl
enter
out
sbb
pop
jp
inc
les
mov
mov
stos
fisubl
movsl
jnp
inc
pop
into
cs
cmp
dec
dec
lea
inc
in
jnp
and
mov
jbe
cmp
inc
jge
sahf
jge
imul
subl
loopne
outsb
insl
sub
gs
mov
xchg
inc
xor
or
lods
mov
and
pop
pop
roll
sbb
insl
in
mov
push
cmp
mov
or
enter
fisubrs
pushf
pop
and
dec
cmp
sub
dec
vpmaxub
clc
orb
mov
stos
pushl
sahf
rolb
jo
cmp
mov
xchg
mov
jg
shrl
jmp
add
or
cmpb
int
cmp
adc
jle
aad
push
mov
mov
pop
in
out
xor
jae
push
adc
fstpt
xchg
inc
push
jnp
lods
xchg
fnstsw
test
jae
arpl
clc
adc
jle
jno
add
sub
push
out
dec
xor
add
sub
in
xchg
roll
inc
imull
inc
stos
jmp
add
push
das
mov
insl
xor
mov
stc
and
sub
out
pop
inc
mov
clc
lock
xchg
aas
mov
mov
mov
adc
fsubrp
xor
pop
lret
movzbl
sub
jbe
jmp
test
mov
xor
stos
ljmp
dec
fldl2e
or
mov
cmpsb
cwtl
in
fmull
jl
mov
xor
sbb
testl
iret
jmp
sti
out
jg,pn
push
rclb
cmpsl
sbb
and
fidivrs
ss
hlt
test
dec
or
push
mov
pop
fs
cmpsb
ss
inc
fisttps
int
loope
aam
cmpsb
pop
loope
pop
ret
push
pusha
mov
xchg
jge
js
ficomps
cs
rclb
fildll
sub
sbb
cltd
adcb
shrb
sbb
add
lds
jle
pushf
push
test
xchg
mov
jnp
adc
je
push
je
add
data16
dec
jle
xor
nop
js
andb
cmpsl
iret
jp
out
mov
inc
push
or
aaa
or
sti
adc
jbe
out
and
cwtl
lods
in
addb
in
int
lret
popf
inc
mov
mov
mov
inc
stc
cmp
dec
add
push
jmp
fxch
imul
cs
inc
neg
in
sti
outsl
push
shl
jae
mov
or
push
je
shll
fwait
inc
bound
sti
push
mov
fwait
or
sub
ja
push
ret
sub
std
or
jb
int3
pop
gs
push
lods
mov
ss
sub
hlt
cmp
mov
push
nop
popa
int
shll
mov
dec
pushl
inc
outsb
cmp
push
mov
test
sar
dec
scas
fildll
or
lahf
jecxz
inc
js
test
fsts
popa
pop
js
imul
add
add
mov
cmp
xor
mov
aas
mov
dec
cwtl
cmc
cwtl
and
iret
xchg
jecxz
aad
mov
rcrl
imul
xchg
mov
fldl2e
call
stos
fisubl
call
loope
lods
mov
mov
add
pop
xor
and
and
es
add
lock
pop
jmp
sub
dec
shrb
int3
scas
mov
or
icebp
push
cmc
pop
and
idivl
xor
js
cmp
mov
stos
jb
jbe
xchg
lahf
stos
lds
or
mov
xor
cld
and
or
fcoml
test
movsl
orb
or
xor
lret
mov
jl
out
fnstcw
add
pop
mov
push
or
imul
pop
or
mov
adc
push
clc
mov
lret
mov
xchg
adc
sbb
cli
out
jle
fldl
add
out
xchg
rol
adc
out
sahf
movsb
movsb
pushf
mov
mov
sahf
loopne
cmc
xchg
stos
stos
cmpsb
int
inc
pop
and
mov
fcompl
push
jl
add
insb
stos
jne
lods
adc
ret
cmc
out
xor
lcall
cmp
mov
and
cmp
mulb
xor
dec
pop
cmc
loop
sti
jp
test
jg
aaa
test
fwait
in
or
out
dec
les
fcomip
dec
ss
xchg
shl
push
jno
mov
pop
xor
rcrl
fisubrl
jecxz
scas
or
xchg
pop
sub
inc
cmp
jle
rcll
psubusw
insb
je
adc
addr16
ret
xor
pop
or
inc
insl
popa
mov
xchg
imul
pop
xor
movsl
dec
daa
imul
dec
test
pop
pop
xchg
adc
mov
aad
dec
scas
pop
pop
add
shlb
pop
jecxz
add
in
loopne
dec
or
dec
xchg
js
mov
adc
addb
daa
adc
push
mov
aas
jp
mov
outsl
xor
jno
out
or
sti
mov
cmp
jns
mov
vpcmpgtw
pushf
add
test
stc
incb
mov
mov
mov
mov
ss
out
sbb
cmp
test
cmp
adc
adc
fnsave
daa
add
mov
ljmp
frstor
and
fbstp
pop
push
lock
and
aad
into
sbb
orl
gs
mov
enter
cmc
in
imul
push
mov
inc
inc
dec
jne
xchg
dec
fidivs
push
xchg
xchg
ss
push
rcr
cmp
rcll
push
dec
xchg
pop
push
inc
add
mov
pop
vfnmadd213ss
sbb
mov
in
push
push
shrl
fstp
push
rclb
ds
dec
mov
lock
lea
or
cwtl
ret
inc
pop
fiaddl
add
arpl
stc
lods
mov
mov
xchg
inc
fld
data16
sub
jns
int3
stos
or
xchg
dec
push
jmp
cmp
dec
adc
sub
addr16
aam
shll
xlat
mov
xchg
cmc
cmp
inc
fnstcw
test
inc
fnstsw
mov
jb
sbb
fwait
and
out
lahf
movsl
pop
mov
test
inc
mov
mov
rcrl
adc
stos
mov
lret
addr16
adc
ficoms
mov
jo
and
negl
push
fbstp
fimull
in
inc
xchg
in
and
call
pop
mov
enter
pop
adc
sbb
fdiv
lock
pushf
adc
leave
cli
add
shrb
nop
lock
push
sub
sbb
lcall
cld
xor
lea
mov
out
in
and
rol
comiss
mov
xor
add
add
xchg
sub
dec
lods
pop
dec
push
mov
or
sub
jmp
fwait
add
push
jmp
movsb
sub
mov
fsts
sub
in
push
scas
jecxz
adc
cmp
adc
inc
push
bound
js
mov
into
cli
push
mov
mov
sub
pop
pop
call
push
mov
jno
sub
xlat
inc
dec
in
stc
adc
arpl
xor
mov
sub
sub
ja
movsb
lea
loope
jmp
shrb
aad
ljmp
inc
push
mov
flds
ja
push
push
xor
mov
mov
imul
xchg
leave
jae
testl
paddq
lods
dec
push
das
fld1
call
aad
cmpsb
je
fldenv
push
ret
pushf
rcl
stc
sbb
cmc
sbbl
mov
notb
out
pop
sbb
dec
mov
jcxz
lcall
aaa
fsubr
cmpsl
hlt
add
les
xchg
dec
xchg
ss
iret
jg
loope
pop
push
call
mov
fimuls
mov
loope
sbb
pop
into
stc
adc
dec
dec
fadds
and
sub
test
fnstcw
pusha
repz
gs
cmp
push
xor
cmpsb
push
sub
inc
imul
aam
jmp
xor
je
push
push
xchg
cltd
cmpsl
lret
insl
imul
xchg
pop
ljmp
and
mov
mov
jbe
dec
int3
xor
add
scas
outsb
lret
cs
cli
and
jns
scas
rcrb
sub
add
lcall
cmc
in
into
stos
movsl
mov
mov
insl
fdivs
and
sbb
cmp
movsb
mov
push
test
xchg
in
cs
stc
mov
pushf
adc
jmp
jp
add
mov
or
lds
bound
mov
mov
sbb
cld
and
dec
and
pop
lods
mov
fimuls
xor
pop
pop
xchg
ret
xor
cmc
push
dec
cmc
pop
or
rcrb
fwait
int
in
inc
mov
push
pop
cmp
xor
outsl
outsb
int3
cmp
sub
xchg
or
popf
test
sbbl
out
add
mov
loopne
sahf
mov
inc
std
mov
gs
mov
xlat
mov
movsb
in
je
xchg
jp
mov
inc
mov
mov
xchg
std
lea
divl
sbb
setge
sub
inc
loope
cli
sub
or
aad
inc
push
ja
mov
or
jno
inc
jp
cmp
roll
lret
mov
sbb
and
xchg
xchg
cmpl
push
rolb
jns
rolb
sub
scas
and
ss
dec
lods
xlat
mov
lods
cmp
xchg
loope
xor
xchg
imulb
into
pop
mov
adc
dec
lret
cltd
cmp
scas
js
int3
push
icebp
pop
mov
mov
xchg
test
jge
or
dec
sbb
cs
in
mov
adc
inc
mov
push
jbe
cli
sub
jl
loope
jb
push
in
sbb
xchg
mov
mov
sahf
inc
mov
sbb
or
jb
lea
dec
rorl
test
dec
or
mov
fstl
sub
cmp
scas
aam
gs
test
inc
pop
pushf
sbb
mov
jns
out
pop
out
fmulp
enter
pop
cld
ret
pushf
mov
push
ss
mov
xchg
iret
lahf
mov
mov
ss
pop
imulb
dec
sahf
or
sub
pop
pop
outsl
dec
jne
out
push
daa
dec
in
add
and
pop
xchg
test
jle
imul
or
pop
sub
shlb
mov
mov
inc
pusha
gs
cmpsb
imul
inc
pop
add
sbbb
xchg
or
cmp
inc
cli
scas
jecxz
inc
imul
add
shl
lret
jo,pn
inc
sbb
or
pop
adc
scas
xor
inc
insl
pop
sub
add
roll
dec
cmc
mov
lock
jecxz
mov
mov
lds
mov
push
push
fcmove
imul
cs
loope
mov
nop
fstl
pop
xchg
add
inc
inc
fwait
gs
dec
movsb
stos
cmpsl
mov
adc
jg
dec
jp
xchg
ja
jmp
mov
lods
mov
orl
xchg
mov
fnstsw
pop
fadds
push
fmuls
jbe
or
pushf
lds
cmp
cmpsb
sbb
xchg
xor
jmp
mov
fs
jnp
sarl
mov
pop
jne
out
sub
xor
repz
dec
adc
pusha
push
mov
test
xchg
lods
out
mull
mov
aas
decl
xor
pop
xchg
loope
dec
fisubl
push
mov
pop
xchg
in
cli
arpl
xchg
mov
data16
mov
test
orb
push
mov
pop
scas
mov
and
mov
iret
in
push
add
int
sub
or
pop
and
mov
mov
jbe
jne
fisttpl
repnz
add
das
jno
cmpsb
gs
shll
push
cmp
dec
pusha
or
out
outsl
mov
les
mov
pop
rolb
inc
pop
in
sub
xchg
cwtl
in
sbb
pop
fcoms
dec
and
or
xchg
dec
cli
jle
idiv
jb
out
inc
enter
negl
xchg
inc
fcomip
adc
mov
loopne
cld
cmp
out
mov
imul
test
sbb
fs
xor
out
mov
mov
pop
lret
les
mov
sub
add
sbb
stos
jae
add
mov
adc
xchg
sbb
lea
inc
xchg
nop
int3
daa
inc
int3
in
std
cmp
es
cmp
sub
sbbb
add
loop
pcmpeqd
pop
sbb
pop
add
xor
dec
inc
dec
jl
jl
roll
out
jle
or
lods
mov
or
xchg
mov
push
mov
mov
sub
dec
nop
add
push
mov
sahf
fdivs
push
xchg
leave
stos
adc
push
frstor
lea
dec
sbb
cmp
int
inc
addl
xor
sub
jle
rcll
cmp
push
rcl
xor
inc
mov
popa
or
lcall
adc
lds
mov
dec
pushf
push
adc
test
inc
repz
leave
fwait
adc
xchg
dec
push
ret
dec
push
in
inc
xchg
fstpt
dec
mov
pop
popa
int3
mov
out
hlt
ror
push
adc
lret
dec
add
and
sbb
pushl
cmpsl
out
mov
and
enter
or
leave
enter
adc
xchg
xchg
dec
sbb
adc
pop
daa
hlt
es
arpl
pop
or
mov
xchg
in
movsl
les
andb
les
sbb
clc
jne
cmc
in
lods
jg
mulb
add
push
lret
mov
int
jbe
mov
mov
sbb
decl
xchg
add
push
insl
cmp
fdivrl
mov
call
sub
pop
mov
xlat
stc
xor
push
push
jns
cmp
insl
mov
sarb
or
mov
dec
cmc
xchg
ficoml
call
dec
fidivs
fadds
shll
push
cli
std
lods
push
fidivrs
jbe
insb
out
das
loopne
leave
jge
clc
mov
in
pop
lahf
pushf
ret
xchg
xchg
cltd
add
loop
dec
inc
xchg
gs
daa
sbb
movsb
jp
sahf
and
in
sbb
lret
sub
inc
loop
cmp
push
pop
imul
sbb
ljmp
jmp
or
stos
lds
mov
cmp
add
rol
lretw
pop
incl
adc
pushf
je
fdivrs
xchg
test
loop
sbb
or
fwait
lock
cwtl
adc
call
ret
pminub
stos
sub
adc
mov
jnp
clc
mov
add
dec
mov
scas
dec
rcrl
push
xor
mov
cmp
push
jp
ljmp
aad
rcl
int3
loop
push
addr16
stos
subb
pop
in
stos
mov
adc
out
fwait
pop
leave
inc
shll
lods
or
hlt
adc
repz
or
ret
jo
fldt
pop
enter
dec
addb
loop
test
fldl
dec
mov
adc
scas
rclb
xor
and
in
imul
fucom
inc
push
sti
jmp
jae
lcall
aad
pop
dec
repz
push
js
jns
dec
mov
pop
pop
sbb
cmp
jb
into
mov
jge
jge
lahf
lds
mov
and
and
push
gs
mov
push
lret
lret
push
mov
and
and
jmp
call
iret
mov
shll
push
js
lock
cmp
fs
mov
sahf
jns
lods
pop
sbb
jne
push
out
mov
and
jecxz
sbb
mov
ss
mov
cmp
lea
pop
cmp
loopne
mov
mov
nop
popl
sbb
jb
lret
mov
pop
pop
push
mov
jle
dec
stos
imulb
gs
jg
in
push
mov
fwait
rorl
xchg
scas
ffree
jae
adc
pop
xchg
scas
cmp
pop
fwait
xchg
sub
cmp
mov
and
test
xchg
loope
cmc
stos
aas
cld
hlt
sti
pop
movsl
add
in
and
sti
fwait
jno
ret
cmpsb
mov
fistps
and
les
cmpsl
pop
psrld
sub
movsl
lret
mov
inc
sub
scas
aam
jmp
mov
xchg
dec
jbe
dec
lret
mov
jle
pop
ds
xchg
stos
adc
and
mov
out
aaa
mov
cmpsl
pop
push
testb
fadds
mov
mov
push
sbb
pusha
jb
movsb
pusha
outsl
inc
nop
push
mov
loop
cltd
sub
sbb
mov
push
cmpsb
mov
cmp
in
dec
cs
xlat
out
sbb
lret
fistps
pop
dec
sar
movsb
cmc
popf
add
sub
pop
cmp
pop
leave
aaa
pop
add
mov
or
into
push
xor
dec
mov
in
dec
call
add
xchg
repnz
stos
sahf
es
movsb
jp
and
sbb
in
pop
push
inc
sti
stos
or
sbb
xchg
iret
fimull
lahf
xor
xorl
fdivrl
or
mov
mov
adc
xor
xor
repnz
push
in
mov
sub
or
bound
les
inc
scas
xchg
jge
ljmp
enter
in
sbbb
push
mov
sbb
sub
xlat
jge
mov
mov
ret
leave
sub
mov
and
mov
inc
test
sbbl
loope
jo
insl
inc
outsb
mov
mov
add
lea
loopne
fldt
fistpll
sbb
cmp
sbb
lcall
les
neg
add
ds
xchg
mov
xchg
mov
add
mov
dec
addb
lcall
sub
test
shlb
cs
stos
mov
push
mov
xchg
xor
cld
adc
std
or
call
jle
mov
fistl
sbb
shlb
xchg
mov
imul
paddw
scas
loopne
jp
jecxz
push
xchg
pop
sub
mov
mov
imul
das
push
and
push
lret
mov
lods
adc
or
in
jb
jb
jo
cmp
aam
jecxz
ret
lcall
aaa
or
decb
xchg
jae
adc
rcl
scas
and
popf
repz
push
in
cmp
je
cmpsb
cmc
or
outsb
sbb
out
pop
xchg
xchg
sbb
pop
loopew
ret
movsb
mov
ror
idivl
and
stos
sub
rorb
fimull
push
in
js
adc
mov
dec
lea
lret
jecxz
pushf
cmp
sub
dec
dec
jmp
andl
lea
repz
cltd
jae
sub
in
xchg
repz
sbb
jo
jl
lods
sahf
int3
sbb
out
outsb
jne
fmul
ret
decb
cmp
dec
dec
sbb
dec
inc
adc
mov
dec
and
loopne
sti
ret
xor
push
out
fdivrp
mov
pop
xor
nop
ret
pushl
nop
add
mov
xorb
and
repz
mov
xchg
in
add
mov
hlt
jmp
xchg
int3
repnz
call
insl
imul
js
dec
mov
xchg
cmp
outsb
xchg
pop
lcall
mov
mov
je
or
pushf
hlt
add
adc
xchg
lret
mov
jo,pn
rorl
jbe
inc
mov
sub
xlat
dec
sti
or
mov
es
int3
add
lock
icebp
xchg
or
jbe
push
jp
and
imul
sti
scas
adc
aaa
cmpsl
inc
pop
and
xor
add
mov
pop
fmull
jbe
and
hlt
xchg
inc
adc
subb
movsl
ljmp
sti
mov
pop
mov
or
pusha
iret
xor
xor
pusha
xadd
inc
lock
mov
ds
lret
add
mov
lret
jmp
sbb
fists
pop
or
and
jno
mov
add
mov
lahf
push
cmpsl
mov
lea
cltd
mov
mov
out
sub
sub
sarb
adc
idivb
cmpb
and
sahf
mov
leave
movsl
rcrb
mov
mov
sbb
fisubrs
push
mov
fisttpl
sbb
jmp
push
and
mov
out
ja
dec
push
jns
push
xchg
idivb
adc
stos
cs
pop
pusha
jecxz
fnstcw
jg
and
lret
fsubrs
pop
mov
mov
inc
lock
hlt
insl
ds
mov
scas
cld
jmp
lahf
loop,pn
dec
in
negb
out
fdivrs
inc
sub
sti
adc
cmp
lcall
push
inc
adcl
dec
cmp
mov
xchg
fmuls
pop
dec
or
push
add
loopne
mov
add
xor
inc
incl
inc
xor
xor
stos
int3
sarl
arpl
dec
inc
pushf
push
out
pop
js
xor
cmpsb
sbb
xor
lods
cs
sti
fidivs
pop
jecxz
mov
xlat
jmp
fwait
mov
mov
aaa
dec
clc
test
pop
xchg
push
nop
icebp
push
rcrb
dec
xchg
aad
imul
cmp
sbbl
mov
pop
push
mov
mov
int
or
inc
and
mov
lods
aam
testb
inc
or
xchg
xor
loopne
pop
cmp
cli
test
mov
lcall
loope
lahf
lods
lret
mov
jmp
rolb
xchg
mov
or
pop
loope
mov
stos
adc
les
gs
pop
hlt
add
add
push
in
cld
ljmp
jo
add
fcoms
scas
inc
andnps
dec
mov
cwtl
mov
dec
jns
out
repnz
imul
sbb
call
xchg
ja
pop
xor
mov
outsb
mov
inc
lods
daa
sbb
and
jae
cltd
dec
pusha
mov
mov
cmp
xchg
gs
arpl
push
popa
enter
pop
push
jae
adc
xlat
pop
or
in
ljmp
or
outsb
icebp
pop
in
inc
sub
hlt
int3
mov
xor
mov
filds
int3
jp
fsubs
repnz
fiadds
jae
jl
idivl
cmp
lods
mov
xchg
das
xchg
jle
roll
mov
add
mov
lods
mov
in
repz
data16
xor
pop
cmc
pop
xchg
icebp
repz
inc
or
leave
fmuls
cmp
pop
add
in
adc
mov
divb
popf
mov
clc
pop
nop
imulb
adc
out
lds
push
dec
and
out
js
sub
lock
cmovg
sbb
out
arpl
test
and
adc
dec
dec
mov
out
ret
mov
jge
gs
xchg
sub
in
or
or
out
jbe
xchg
rorb
inc
aas
ds
dec
mov
jmp
cli
xchg
sub
push
in
jnp
cltd
jbe
pop
aas
dec
sti
rcrl
xchg
popa
jae
daa
inc
xchg
movsb
aam
fisttpl
mov
cs
pop
lods
data16
and
xchg
ljmp
and
insb
stos
aas
aam
mov
js
daa
in
loopne
dec
jmp
push
stos
push
data16
mov
cwtl
push
stos
or
push
nop/reserved
cli
or
pop
loope
jmp
fldenv
adc
stos
in
stos
mov
and
lock
mov
fnstenv
xchg
imul
mov
mov
lret
or
push
lcall
clc
jb
popf
adc
cwtl
adc
ret
rol
sarb
js
sub
in
insl
fwait
pop
clc
js
sbb
jp
inc
mov
sahf
push
icebp
xchg
mov
pop
sub
inc
mov
sbb
roll
pop
mov
cmpsl
push
sub
ljmp
adc
loope
gs
jg
xor
rcll
inc
and
xchg
jb
mov
jmp
imul
ja
into
sub
bound
pop
mov
enter
mov
call
dec
scas
pusha
aad
dec
movsl
mov
adc
pop
dec
into
jecxz
sbb
decb
add
xlat
jl
out
popa
outsb
xchg
clc
sahf
mov
cmpsl
loope
adc
sub
mov
pop
lahf
lods
out
xchg
jmp
xchg
sub
pause
mov
cmp
cmc
call
rcl
pusha
mov
cwtl
aam
pop
and
outsl
sbb
inc
mov
pop
rcll
in
add
ss
mov
sub
loop
ljmp
inc
pop
es
sub
push
mov
cmp
repz
or
addr16
mov
out
cs
xor
aad
popa
dec
cmp
daa
inc
sahf
insl
xchg
dec
xor
dec
addr16
enter
cmpsb
rclb
mov
mov
enter
and
lock
mov
and
xor
push
mov
dec
je
loopne
fistpl
pushf
in
lock
loope
pusha
dec
stos
call
lock
add
les
push
push
shlb
and
aas
push
cld
mov
clc
addb
clc
mov
aaa
pop
hlt
push
popf
dec
mov
lods
mov
xchg
sub
pop
jmp
loope
adc
in
jg
loope
cli
and
in
jecxz
mov
pop
mov
push
mov
pop
jecxz
mov
sbb
mov
xchg
push
fsubs
mov
add
dec
js
adc
xchg
jns
mov
mov
mov
push
cmpb
inc
lea
push
mov
jne
inc
xchg
aad
lods
imul
inc
pushf
adc
je
int
jp
mov
lret
mov
pop
mov
xchg
lea
mov
xchg
imul
shlb
pop
inc
push
sti
dec
loope
pop
mov
or
and
cld
loopne
popa
add
stos
sub
int3
pop
lretw
loopne
adc
lods
test
cmp
and
xchg
mov
pop
adc
int
jge
add
and
arpl
out
mov
cmp
in
lock
cld
inc
mov
add
out
dec
insb
push
pop
lcall
dec
sahf
adc
xchg
xor
push
sub
inc
je
xchg
negl
pop
ljmp
scas
out
jmp
aad
mov
push
cs
out
mov
pop
inc
in
sbb
dec
xchg
int3
loopne
popa
cmp
dec
adc
js
fxch
ds
or
jmp
inc
loop
jne
mov
test
ja
sub
les
inc
mov
inc
lret
or
ret
imull
sbb
add
pop
jl,pt
jmp
sub
lahf
sbb
sbb
xor
dec
cmpsl
dec
and
dec
out
mov
adc
jnp
jge
sbb
iret
pop
gs
jb
cmpsl
dec
fwait
xor
ja
loopne
adc
jbe
sbb
jno
inc
lods
push
test
aas
outsl
mov
mov
push
stc
mov
inc
sbb
or
xchg
push
sbb
cmp
push
stc
int
mov
mov
push
mov
xor
pop
sub
pop
pop
shlb
push
cmp
mov
mov
out
cmp
movsl
lods
outsl
mov
push
insl
dec
dec
test
push
jle
out
out
dec
adc
and
movsl
cmc
hlt
fadd
inc
xor
shr
cwtl
jmp
test
dec
inc
mov
or
and
popf
pop
jle
rorb
or
push
cmp
imulb
sub
jbe
outsl
push
cltd
addr16
js
jbe
jbe
push
xchg
fadds
flds
leave
andl
orl
xor
clc
cltd
jne
pushf
add
sbb
cmp
xor
int3
iret
inc
sbb
int
shrl
notw
sub
addr16
cmpsl
int
stos
arpl
xchg
mov
xor
push
adc
inc
lods
mov
arpl
fdivr
xchg
popa
fdiv
jne
xchg
stos
push
clc
mov
stos
cmpsb
xor
int3
adc
or
add
leave
test
dec
xchg
mov
adc
xor
mov
imul
add
fcompl
push
pop
lret
cmc
test
out
inc
cwtl
jo
mov
xor
and
fs
lods
mov
sti
mov
movd
into
cs
pop
jne
dec
xorl
flds
fstl
dec
mov
add
pop
aam
sahf
xor
lret
lahf
arpl
cmp
mov
popf
or
outsl
dec
inc
xchg
push
outsb
stc
jnp
mov
adc
rorb
or
insb
cmp
test
sahf
inc
int3
adc
arpl
sub
popa
loopne
fs
insl
aad
loopne
fadds
pushf
cmpsl
push
xor
dec
les
out
loopne
jl
int
leave
rorl
mov
vcomiss
nop
rcrb
mov
shll
loop
mov
jge
or
xchg
add
or
and
dec
push
dec
outsl
mulb
fisubrs
fcomps
or
jns
aad
inc
lea
and
jl
loop
sub
pop
addr16
or
or
mov
mov
sbb
xchg
sub
out
mov
and
bound
sahf
push
das
jecxz
out
cs
xchg
sbb
cmp
cld
movsb
pop
hlt
inc
bound
lahf
icebp
imull
imul
jmp
pop
shrl
cmp
adc
arpl
movmskps
cmp
loop
out
int3
jno
mov
xchg
ret
aad
xor
xchg
fnstcw
int
mov
in
ss
into
jl
gs
sbb
cmpsb
mov
cs
dec
mov
out
rcll
repnz
mov
ret
mov
inc
mov
and
insb
imulb
xchg
jne
imul
adc
sbb
loopne
or
rcrb
cmc
lock
js
mov
mov
sbb
mov
mov
mov
push
out
xor
adc
sbb
dec
ljmp
jne
mov
mov
push
jne
jecxz
add
fucompp
or
lock
stc
bound
test
clc
int3
loop
pop
jl
inc
repnz
lcall
movsl
cli
sbb
dec
fidivrs
repnz
out
repz
inc
mov
in
sub
pop
mov
push
jb
in
adc
dec
inc
jns
or
xor
int3
pop
in
in
jb
xor
shlb
mov
push
vunpcklpd
sbb
mov
ja
push
jge
out
jno
ss
sub
repz
xor
inc
shrb
mov
addr16
outsl
insb
mov
jbe
xchg
mov
mov
movsb
dec
aas
xchg
mov
inc
pushf
mov
lret
push
pop
fcoml
cmp
sti
outsl
lea
ljmp
adc
icebp
mov
jo
push
cwtl
xchg
insb
pop
jne
inc
pusha
jecxz
in
mov
out
ds
shr
int3
out
test
mov
daa
or
lds
sti
mov
add
int
insb
in
inc
rcll
pop
jecxz
bsr
sbb
sbb
test
pop
push
and
or
adc
xchg
mov
shlb
cmp
jecxz
and
insb
rcrl
sbb
mov
xor
fisttpl
xor
arpl
movsb
cmpsb
stos
jp
fyl2xp1
enter
and
pop
cwtl
lods
xor
and
in
sbb
xlat
rcrl
inc
fcompl
fisubrs
inc
pop
ds
mov
pop
fcoml
fisubs
push
jmp
ret
push
adc
cltd
rorb
push
clc
cmc
popa
js
jmp
negl
sbb
pushf
fs
add
pop
mov
cltd
mov
jb
fiaddl
scas
xorl
les
stc
rcl
mov
fidivs
mov
mov
jp
cmp
shlb
enter
and
cmpsl
push
xchg
xchg
inc
scas
clc
adc
mov
lea
mov
mov
out
xchg
xlat
fadd
std
popf
xor
iret
sub
fxch
inc
xchg
fld
hlt
xchg
stos
cmp
dec
inc
sti
cmp
mov
mov
or
pop
jae
push
cmp
and
pop
jl
mov
sub
into
and
inc
lret
fidivrl
xor
test
pop
lock
or
es
lret
shlb
outsl
into
dec
outsl
xlat
clc
mov
aam
shrb
subb
rcrl
xchg
mov
out
js
lea
into
xor
jle
mov
mov
sbb
fnstcw
and
imul
mov
frstor
push
adc
adc
adcb
fbld
and
mov
imul
jo
test
xchg
cmpsl
ja
push
sbb
mov
hlt
jle
sub
xchg
xchg
int
movsl
movb
dec
or
test
mov
cmp
arpl
and
mov
cmc
loop
mov
mov
push
fnstsw
sbb
mov
mov
fiadds
jb
xor
ret
sub
xchg
dec
insb
fistps
shll
add
ljmp
mov
xor
sbb
dec
inc
nop
outsl
cmp
lahf
test
rorl
pop
movsb
sbb
cmp
add
add
jl
xchg
push
mov
mov
cmp
jmp
mov
inc
cmp
sbb
fdivrl
xchg
insb
aam
adc
lcall
add
loopne
daa
or
fldcw
sub
lret
jle
and
jbe
mov
jae
cmc
test
movsl
ja
mov
mov
shlb
or
mov
dec
shll
add
hlt
pop
dec
ja
pop
sbb
in
leave
and
xor
repnz
push
jnp
sub
sub
mov
sahf
push
hlt
pop
lahf
fisttpll
mov
pop
inc
push
scas
aad
insl
pop
loope
fsubs
push
out
inc
adc
movsb
sub
sub
cwtl
add
dec
push
mov
lahf
sar
adc
dec
fs
xchg
push
popa
dec
stos
and
out
push
jmp
sahf
dec
and
and
int3
jle
mov
and
in
insb
icebp
mov
lds
loope
push
add
sahf
xorb
dec
xor
mov
ljmp
test
jmp
fsts
sub
fwait
xchg
jecxz
jne
or
adc
das
or
xor
int3
inc
push
insl
out
lods
imul
ffree
add
mov
jmp
popa
aas
mov
sti
fs
pop
mov
push
jnp
and
dec
adc
in
les
sbb
les
testb
or
pushf
filds
repz
push
mov
jnp
mov
dec
je
jnp
leave
aaa
xor
push
pop
insl
fdiv
cmpb
add
faddp
jbe
xchg
fwait
loop
aas
mov
jmp
push
sahf
or
dec
fstps
cmp
mov
xchg
inc
dec
cmpsb
ret
rorl
mov
ljmp
lret
xchg
fbld
mov
daa
subl
lret
pop
mov
or
cld
pusha
lock
sbb
cmp
sub
popf
int
mov
cmp
xor
addr16
jge
ljmp
test
cmp
mov
imul
mull
mov
ds
mov
shl
in
mov
stos
xchg
xchg
mov
jle
stc
cmp
movsb
pop
sbb
dec
fnstenv
outsl
pop
dec
lods
iret
ja
js
pusha
sbbb
adc
push
jmp
mov
ret
dec
lock
jge
adc
push
cmp
cli
inc
aas
mov
das
das
ret
insb
or
pushf
add
out
inc
push
sbb
adc
mov
movsl
mov
dec
and
cmp
xchg
enter
mov
insb
jb
mov
loope
xchg
imul
inc
mov
call
and
add
outsl
in
ja
jb
cmpsb
iret
adc
js
pop
cmpsl
pop
cld
mov
loope
cmp
mov
sub
cmp
pop
jl
push
sbb
aam
loope
fyl2xp1
mov
jbe
into
dec
aaa
cwtl
scas
xchg
ror
popa
mov
add
lret
and
cmpsl
imul
aam
outsb
fcoml
add
jnp
hlt
or
push
and
test
cs
mov
fnstsw
out
mov
mov
lret
sbb
add
push
push
sbb
test
sti
mov
and
jb
pop
cmp
jnp
sub
icebp
fdivs
jno
ja
pop
std
shlb
test
int3
add
sub
jae
sub
adc
xor
stos
jno
icebp
cltd
and
movsb
and
cltd
shll
sub
mov
mov
adc
mov
clc
push
je
pop
mov
inc
rorb
lea
fisubrl
or
xor
scas
sub
adc
dec
sub
pop
pop
sbb
adc
inc
mov
pop
jo
inc
add
lret
jp
push
mov
jnp
mov
in
cwtl
int
mov
je
xorl
out
sub
fsubs
in
dec
int3
or
cwtl
mov
insl
mov
xor
je
jle
and
ja
fwait
jbe
lcall
movsl
ja
cmp
pop
xchg
adc
mov
xchg
lds
outsl
adc
push
mov
lcall
add
and
sbb
mov
jnp
scas
rcrl
mov
or
ds
stos
mov
out
int3
dec
in
lods
test
int3
movsb
sbb
stc
sbb
add
out
mull
push
sbb
iret
mov
push
mov
lcall
push
cld
fincstp
enter
loope
push
adc
add
insb
adc
push
ss
fwait
mov
inc
push
cmp
mov
sti
push
jl
ret
push
add
sbbl
sub
call
outsl
data16
pushf
mov
jbe
dec
push
inc
xchg
mov
jbe,pn
loope
call
lcall
sub
cwtl
pop
inc
idivb
dec
lcall
mov
out
xor
fimuls
bound
jmp
sub
add
fsubl
mov
cmc
lea
add
cmp
hlt
adc
sbb
and
jg
fisubrs
es
aad
inc
xorb
ja
insl
inc
cmp
jae
adc
xor
aad
sbb
in
and
push
lods
lds
cwtl
out
sub
repnz
mov
cwtl
cmp
and
stos
orb
lret
jecxz
or
lahf
cli
lods
movsb
movhps
icebp
in
mov
cmpsb
dec
test
shll
popa
and
in
fwait
cld
mov
inc
xor
jno
pop
insl
mov
hlt
inc
mov
addr16
mov
or
xchg
mov
inc
add
xchg
xchg
pop
xor
fidivl
jl
loop
fsub
in
or
imul
or
sub
dec
movsl
mov
sarb
push
pop
mov
arpl
sar
cmpsl
and
adc
xchg
mov
movsb
mov
fcomps
out
push
or
cmpsl
int3
or
out
int
mov
add
jb
mull
sub
nop
repnz
xchg
inc
adc
mov
scas
cmp
fiaddl
scas
cmp
insl
mov
xchg
dec
incl
or
aad
int3
bnd
pop
pop
cltd
pop
mov
ds
pop
cmp
in
adc
popf
mov
test
outsl
outsb
pop
push
or
xor
xor
pop
sahf
sbb
fwait
cwtl
add
mov
xchg
test
or
movsl
add
jmp
mov
jnp
rorb
shl
jmp
hlt
inc
nop
outsb
xchg
std
xchg
int
aas
mov
clc
cmp
aad
outsb
punpcklbw
jl
mov
lret
add
mov
xor
or
mov
gs
fs
cld
pop
stos
sub
push
jo
cmp
test
cld
xchg
mov
jmp
iret
push
pop
adc
andb
xchg
add
cli
es
in
sbb
xchg
scas
mov
enter
fildll
mov
negl
xchg
bound
outsl
xlat
ljmp
neg
push
dec
mov
mov
es
pop
mov
shll
add
dec
pop
lock
or
cmp
nop
loope
mov
xchg
or
xorb
out
movsl
rorb
rcr
mov
pop
push
into
push
punpckldq
test
mov
lea
into
pusha
loope
int3
arpl
imul
pop
mov
mov
cmp
push
pop
fdecstp
std
adc
cmc
mov
shl
jo
test
aas
ss
hlt
outsb
loope
clc
cmp
jecxz
push
pushf
imul
or
scas
fcoms
nop
loope
out
fdivl
or
xor
cmp
sbb
jecxz
and
daa
pop
adcl
or
daa
insb
sbb
sbb
mov
adc
mov
and
dec
out
rcll
out
iret
xor
push
ror
jmp
pop
pop
cmp
sti
int
jmp
inc
cli
xchg
push
stos
xchg
mov
dec
popf
xchg
cmpsl
clc
mov
add
and
mov
mov
cmp
mov
fisubrl
lcall
dec
jbe,pn
test
testb
ljmp
cltd
push
movhps
sub
jmp
mov
inc
rol
mov
mov
jmp
jb
xor
lret
lret
lret
or
loope
or
dec
mov
add
daa
int
xor
pop
stos
jno
mov
xlat
outsl
jne
nop
js
clc
pushf
adc
stc
mov
pop
insb
popa
mov
push
loope
mov
jg
mov
cld
stc
sbb
cli
sbb
repz
nop
pusha
push
mov
aad
jb
imul
out
jl
sar
sbb
jo
adc
sbb
pop
std
call
incb
lahf
push
jno
hlt
into
jae
pop
pusha
ds
mov
sbb
test
xchg
sbb
xchg
xor
inc
add
popf
into
push
je
fsub
add
popl
nop
bnd
xor
js
in
cmpb
xchg
loop
outsb
ret
outsb
ret
cmp
shlb
mov
jle
push
fwait
jbe
jge
or
cmp
jns
fdivrl
pop
shlb
aas
and
nop
and
into
mov
push
pop
insl
fisttpll
je
stos
xchg
test
xchg
lea
imulb
xchg
loopne
in
pop
mov
and
push
mov
hlt
mov
mov
aaa
mov
add
sub
mov
inc
or
push
xchg
mov
inc
loop
lret
in
jne
fisubl
mov
push
mov
mov
add
mov
sbb
insl
rolb
das
outsl
stc
test
and
add
fs
inc
stos
push
dec
xchg
outsb
lahf
lahf
lods
arpl
dec
mov
int3
pop
cltd
fistpll
lods
pop
scas
dec
push
push
cli
addr16
ja
adc
xchg
cli
xchg
loopne
sub
and
inc
adc
pop
sub
outsl
test
jle
outsl
sub
repz
jb
gs
xchg
ja
nop
clc
xchg
or
scas
mov
xor
mov
ret
lret
fcmovnb
sub
ret
add
iret
lods
fcomip
mov
dec
push
flds
test
pop
loopne
leave
dec
bound
mov
push
clc
jge
adc
fsubrl
rclb
stos
mov
fistpll
mov
mov
or
inc
stc
das
add
pop
aaa
mov
and
xchg
clc
outsb
push
aas
mov
or
xor
mov
push
push
inc
leave
arpl
dec
xor
jae
sarl
sub
cmc
push
call
in
push
cmp
fwait
inc
or
xor
push
pop
cmc
add
fdivrl
rcrl
xchg
in
filds
sub
and
in
out
pop
in
in
xor
and
sub
cs
add
sbb
ret
lods
or
sbb
out
xchg
sub
push
bound
pop
fdivl
xor
pop
pop
jae
clc
lahf
lahf
das
fsub
xchg
pop
inc
decb
popa
or
push
pop
push
or
shl
mov
push
push
repz
jmp
shlb
xor
jb
loope
jae
jmp
mov
sub
dec
or
hlt
ret
mov
cmpsl
scas
lock
das
adc
sti
aas
aas
stc
jb
jecxz
mov
ret
jl
movsl
jle
lods
push
mov
and
std
push
inc
ret
adc
mov
mov
push
cmp
mov
addr16
imul
mov
fsubrp
and
int
inc
fimull
mov
xlat
adc
je
jae
loop
pop
mulb
mov
sbb
pop
fisubs
or
fldt
hlt
ss
lcall
lcall
and
pop
rorl
lahf
aas
lahf
inc
jl
in
lds
inc
lret
mov
push
notb
xor
pop
stos
decl
dec
jb
idivb
shrl
mov
outsl
flds
aas
enter
cltd
cli
dec
xor
into
cmc
mov
stc
lahf
pop
xchg
shrb
mov
out
jne
orl
inc
stc
rorl
add
imul
lret
lahf
orb
lahf
push
add
cmp
lret
loop
pop
cmp
xlat
xorl
push
jns
sbb
sti
push
push
dec
sahf
hlt
cmpsb
aad
xchg
dec
test
addr16
imul
lcall
add
push
fnsave
jmp
lods
lds
pop
aas
push
movsl
es
and
sbb
push
dec
dec
xor
dec
xchg
mov
cmp
xlat
sub
or
addr16
insb
xor
fildll
sbb
lahf
bound
push
jns
add
aas
pop
sahf
inc
cs
loopne
in
pop
dec
test
ret
cmpb
adc
adc
inc
mov
pusha
insb
iret
adc
mov
inc
cmpb
mov
ljmp
or
cld
test
js
jae
fsubr
stos
sbb
ret
fs
iret
outsb
scas
inc
dec
mov
push
jns
jne
inc
push
mov
shlb
aad
popf
sub
jb
add
out
inc
jns
sub
js
or
dec
pop
and
pushf
mov
lds
add
popa
or
sti
push
push
cmp
movsl
jne
sti
and
cmpsl
jecxz
roll
sub
pusha
loopne
xorl
jnp
mov
das
jecxz
inc
test
mov
xchg
mov
je
fstpt
iret
fldln2
in
jle
cmpsb
pop
xor
sbb
mov
cld
jns
inc
cmp
test
push
in
lock
mov
xchg
das
fldln2
jae
xor
popa
fwait
cmp
sbb
inc
aas
imul
cmpsb
addb
orl
inc
aad
xchg
mov
test
outsb
jle
in
aad
xor
loope
mov
mov
mov
cs
sub
les
fs
jno
adc
rcll
pop
or
test
dec
sbbb
and
jo
push
movsb
pop
and
shr
mov
xchg
pop
dec
mov
sbb
and
cmp
xor
cmp
jae
enter
pop
dec
mov
gs
mov
jbe
mov
jp
es
ficoms
hlt
out
ret
mul
mov
xor
fldl
popa
xor
cli
ss
xor
faddl
inc
mov
cli
inc
lods
sub
adc
add
jno
xor
dec
lret
cmp
fsubl
mov
aad
pmullw
js
adc
add
mov
xorb
cmp
imul
test
xorb
pop
jecxz
data16
sbb
fiadds
xor
sbb
inc
rcl
sbb
cmpsl
cmp
jno
lahf
dec
sub
mov
cmp
jmp
imul
insl
adc
add
push
inc
icebp
loop
ja
jge
insb
sahf
fsubrp
mov
inc
sub
cwtl
adc
out
adc
repnz
mov
pop
movsl
and
stos
ret
and
shrl
inc
pop
fldcw
mov
in
hlt
push
xchg
mov
fs
push
push
adc
push
jns
xchg
mov
out
mov
fistpl
cmp
mov
mov
cmp
cs
clc
dec
loopne
jae
cmpsb
repnz
or
rol
sub
dec
dec
daa
es
aas
xlat
and
call
insl
lret
popf
cs
adc
mov
in
lock
aad
subl
or
imul
xchg
and
xchg
pushw
fildl
outsl
enter
jl
in
repnz
dec
xor
enter
mov
mov
pop
stos
jae,pn
clc
pop
pop
sbb
push
out
add
cmp
mov
or
nop
insb
outsb
sbb
push
fsts
mov
adc
mov
mov
into
jle
push
xlat
movsb
mov
xor
xor
push
int
data16
test
int3
xor
xor
mov
and
fimuls
stc
pop
outsb
shll
add
or
push
and
jbe
or
mov
jle
push
xchg
add
pop
push
test
dec
inc
cmp
pop
pop
gs
incl
add
int3
mov
add
push
push
pusha
push
jns
addr16
add
dec
lret
and
popf
add
bound
xchg
ss
pop
push
shrl
popf
or
je
das
cmc
jb
cmp
cmp
inc
cltd
insb
imul
cmp
push
lcall
iret
cmpsb
mov
push
adc
cmp
dec
pop
pushf
mov
ret
insl
arpl
mov
mov
mov
roll
sbb
sbb
mov
dec
xchg
std
stos
xchg
popa
mov
lahf
loopne
jl
mov
pop
jp
nop
mov
or
and
int
jo
icebp
insb
shrb
push
pop
sub
inc
mov
pop
repnz
jmp
rcrb
sbb
or
inc
jo
push
pop
mov
fildll
xchg
and
in
pop
arpl
and
icebp
popf
ret
shll
and
mov
xor
sub
jne
cmp
jo
xchg
testb
rorb
mov
ljmp
and
pop
push
lock
cmpsb
mov
outsl
in
btc
xchg
jmp
cmc
mov
or
in
leave
xor
pop
sbb
mov
idivb
cmp
mov
movsl
mov
mov
jb
xchg
clc
in
xor
add
pop
add
or
mov
add
mov
cmp
insl
pop
repz
ja
pusha
je
rorb
test
loop
pop
daa
jns
push
xchg
mov
call
lock
sbb
adc
test
xor
cld
orb
push
out
sub
push
jno
xchg
jmp
sti
xor
and
arpl
out
lret
stos
jnp
cmp
in
sub
sub
outsb
or
cmpsb
mov
xchg
adc
jl
dec
add
cmpsb
and
dec
sbb
cs
ret
sub
xchg
xchg
imul
xchg
scas
fs
mov
inc
cmpsb
or
inc
pop
push
mov
pop
sbb
mov
mov
mov
mov
addl
mov
cmp
mov
inc
std
or
imul
in
jp
push
mov
sub
pop
cmp
adc
add
outsl
das
les
xor
inc
xchg
add
inc
in
adc
rcrb
cmp
push
mov
mov
adc
sbb
fcompl
sub
add
lahf
push
ficoml
dec
mov
les
ds
fcomps
dec
shlb
ss
adc
fwait
sbb
mov
pop
and
jae
loope
loopne
ljmp
xor
xchg
push
xchg
ffreep
cld
ret
xchg
xchg
sbb
aad
dec
lcall
ss
adc
jns
mov
das
xor
imul
scas
dec
frstor
mov
push
mov
lds
into
data16
mov
stc
jae
aam
addr16
subl
push
lds
jno
into
popa
out
xlat
and
inc
mov
inc
push
nop
inc
mov
or
xor
or
sub
mov
aas
jbe
das
or
jnp
popl
cmp
mov
shrl
scas
xchg
hlt
mov
jno
std
lret
pop
aad
adc
pop
aas
stos
sub
lock
cmpl
je
cld
in
lock
jbe
add
lret
mov
aaa
enter
cmpsl
dec
mov
xchg
lock
dec
sbbb
das
lock
mov
mov
shlb
aaa
push
icebp
mov
xor
inc
jecxz
mov
dec
fs
xchg
enter
stos
dec
sbb
popf
nop
push
add
jl
xchg
pop
pop
push
xchg
mov
in
lods
jo
fneni(8087
rclb
jl
mov
adc
sub
aam
imul
inc
nop
ss
push
aad
hlt
xchg
cmpb
repnz
push
inc
cmpsb
in
mov
int3
jo
xchg
xchg
arpl
arpl
sbb
and
push
ret
xor
xchg
mov
test
mov
mov
les
addb
repz
sbb
repz
xor
mov
ljmp
cwtl
sbb
cmp
mov
xor
mov
xor
fsubs
xor
int3
inc
pop
pavgw
jmp
sub
dec
lods
dec
daa
scas
loopne
sbb
dec
jb
mul
lock
call
outsb
sub
xor
and
js
pop
mov
call
cltd
jb,pt
in
mov
imul
push
outsb
pop
rcrl
fwait
sbb
test
sti
shlb
aas
pop
stc
adc
inc
ja
movsl
xchg
cmp
cld
xchg
sbb
mov
adc
xor
cmp
data16
mov
dec
xlat
rcrl
stc
xorb
call
and
adc
jne
loope
inc
or
xor
dec
and
mov
add
out
aad
sahf
call
movsb
mov
or
mul
xchg
popf
nop
imul
sbb
push
jmp
jp
dec
pusha
sub
inc
lret
sub
sub
dec
xchg
xor
movsl
andb
sbb
xor
and
ss
pop
loop
lcall
mov
pop
gs
dec
int3
mov
sbb
dec
imul
push
or
jns
std
lcall
push
jne
insb
scas
sbb
push
adc
cmp
aaa
ret
mov
stos
cs
cmc
call
rorb
and
xor
mov
lahf
sbb
mov
xor
adc
push
fsubl
jge
daa
scas
push
nop
nop
daa
rcl
pop
shlb
inc
sub
neg
xchg
inc
sbb
outsb
insb
xchg
into
enter
pop
xlat
jle
add
repnz
loop
adc
lret
cmp
movsl
cltd
pop
add
or
stos
scas
push
xchg
push
pushf
stos
fcomps
mov
sub
push
mov
jne
pop
pop
fs
push
adc
loope
push
ss
movsb
and
pop
enter
or
int
adc
sub
fxam
movsb
cwtl
xor
das
shrb
call
movsb
repnz
fsubrs
xor
cld
sbb
data16
popf
xchg
aad
xlat
lock
je
cmpsl
orl
in
cmp
sub
out
sub
fldcw
ja
gs
and
pop
pop
lea
lods
outsl
mov
xor
mov
add
xlat
mov
rclb
inc
pop
fsubs
xchg
inc
stc
mov
cmc
insl
xchg
out
push
vcvtdq2pd
sti
in
cmp
sub
test
loopne
test
and
inc
test
xchg
stos
pop
ss
pop
pop
out
inc
popl
add
adc
sahf
xor
addr16
and
sbb
jne
pop
dec
cmp
movsb
push
inc
dec
stos
test
pop
fistpl
mov
mov
push
outsb
pushf
lods
decl
sub
jle
imul
aas
or
clc
cmp
dec
rcrb
pop
pop
push
jg
pop
mov
adc
add
shrl
cmp
xor
inc
aas
jbe
imul
mov
nop
push
add
mov
insl
xchg
loop
es
ror
jmp
in
mov
pop
push
pop
mov
mov
outsl
mov
lds
test
loope
add
inc
sbb
adc
pop
mov
imul
mov
fcoml
fwait
cld
sti
into
sahf
or
stos
flds
pop
jno
mov
aad
xor
dec
lea
cli
sbb
loopne
push
sub
adc
push
add
pop
add
les
aad
ret
cwtl
dec
sub
add
or
add
dec
xchg
aaa
push
popf
icebp
xchg
addr16
movsb
cmpsb
leave
or
jp
rolb
mov
jnp
inc
xchg
fldcw
popf
dec
cmp
and
push
es
and
test
icebp
adc
daa
mov
xor
mov
xchg
mov
ret
clc
or
sbb
loop
fdivrs
mov
mov
and
adc
insl
jo
loopne
js
call
loopne
sti
mov
push
sub
dec
out
repnz
loopne
push
inc
movsb
push
and
jne
mov
into
dec
das
jle
out
and
add
es
leave
mov
insb
fisubrl
in
pop
les
push
fisubs
pop
adc
scas
jl
jg
cwtl
insb
xor
inc
leave
ret
cmp
call
cmp
data16
mov
imul
shr
movsb
push
stos
sbb
jne
sub
sbb
mov
addb
test
xlat
fiadds
inc
pop
mov
fsubr
or
ucomiss
addr16
mov
pusha
das
push
repz
icebp
dec
loope
jno
aaa
mov
stc
mov
scas
fcompl
dec
push
push
xorl
jle
outsb
rcll
rorb
mov
inc
sbb
arpl
dec
cmc
test
adcb
or
aad
jp
popf
mov
mov
xchg
lods
out
mov
push
mov
mov
add
fs
out
add
push
jne
mov
xchg
mov
fdivr
fistpl
cmp
sbb
dec
sub
out
jmp
mov
es
mov
mov
mov
daa
fs
inc
cwtl
mov
stos
pop
mov
stc
cmpsl
into
lds
dec
add
jge
je
jle
mov
dec
rorb
mov
insb
adc
insb
int
rcll
mov
imul
pop
test
sub
inc
js
sbb
push
arpl
jmp
and
imul
movsl
xor
push
xchg
pusha
xchg
subl
jbe
xor
insb
icebp
sbb
cli
push
gs
loope
jns
das
pop
mov
sub
jl
sahf
xor
lcall
mov
cmp
mov
add
into
ja
frstor
fdivs
xchg
xor
dec
xchg
push
pop
subl
fstps
daa
ja
lret
xchg
mov
insl
cmpsb
mov
jnp
pop
mov
pop
add
dec
sti
adc
int
jge
sbb
add
outsb
push
lods
sbb
xchg
dec
pop
insb
fisubs
mov
pop
leave
lret
cmp
repnz
xchg
test
je
cmp
jb
xchg
test
push
dec
mov
rorb
mov
mov
cli
dec
fildl
dec
pusha
push
inc
mov
js
shll
jne
mov
lock
aad
pop
add
add
mov
out
popf
imul
sbb
lds
push
adc
mov
iret
push
add
popf
xor
jo
rorl
sbb
jbe
inc
scas
cmp
mov
push
loopne
iret
inc
dec
hlt
jge
loopne
mov
pop
cmc
je
mov
cmpsl
out
mov
cmp
fisttpl
mov
mov
add
xchg
js
inc
outsl
dec
and
loope
ja
sub
sub
push
mov
pop
ljmp
and
sub
or
adcb
xrelease
push
roll
subb
sbb
jne
ljmp
or
inc
jb
adcl
jp
xchg
stos
jle
dec
pop
or
sbb
xchg
mov
fwait
mov
jb
mov
loope
cmpsb
mov
pop
pop
xchg
mov
or
idivb
cmp
inc
cmp
inc
pop
pop
sbb
mov
inc
add
insb
push
ficompl
insl
push
rclb
int
enter
mov
xor
stos
icebp
adc
lea
je
aaa
cld
push
push
rolb
inc
sub
sbb
mov
aad
sti
decb
out
push
out
aaa
mov
loope
adc
pop
imul
pop
call
inc
xchg
adc
xor
lcall
repnz
xlat
data16
hlt
div
sbb
add
xor
jns
xor
loope
dec
jae
xchg
stc
sub
popf
adc
les
movsb
bound
dec
dec
cmp
inc
icebp
lret
icebp
es
sbb
fs
cmp
push
filds
adc
jne
jmp
sahf
fdivrs
std
push
mov
in
insl
in
ret
dec
mov
jl
lcall
div
mov
pop
fucomi
add
mov
movsl
mov
scas
in
outsb
imul
sub
pusha
sbb
in
fsubs
leave
push
push
inc
xchg
jae
rclb
imul
lret
shr
lock
push
test
push
cmp
insl
shll
hlt
sti
mov
int3
dec
mov
js
loope
fsub
stos
insb
adc
jg
fmull
andl
test
xor
into
rcrl
aad
pop
mov
adcl
sbb
xor
sarb
push
or
jno
push
mov
cmpsl
in
sbb
scas
sbb
fmuls
rorl
jnp
jmp
enter
mov
imulb
inc
dec
add
icebp
inc
rep
jmp
roll
test
pop
push
jg
adc
orb
notb
mov
lods
inc
scas
cli
nop
mov
call
xchg
dec
inc
jmp
movl
jbe
movsl
iret
jl
jns
jo
mov
sbb
push
filds
pop
sub
sbb
inc
xchg
pop
mov
mov
xor
sbb
jl
push
call
push
sbb
xchg
sti
lock
sub
inc
jg
arpl
and
pushf
sti
outsl
loopne
add
sbb
call
mov
test
out
lret
std
or
enter
sar
frstor
xchg
jmp
dec
repz
shlb
shufps
xchg
lret
scas
fldt
fdivrp
daa
jmp
mov
xchg
cld
scas
inc
jmp
sub
push
pop
xchg
push
push
mov
adc
cmpsl
push
imul
xor
adc
or
mov
mov
fcoml
cmc
jo
nop
std
xchg
cmp
push
sbb
ret
pop
mov
push
jbe
sarl
push
jp
pop
mov
int
jbe
push
lret
mov
in
mov
pusha
and
arpl
or
mov
je
movsl
ficomps
xor
in
xchg
mov
or
push
xlat
mov
stos
loopne
rcl
pop
vmwrite
add
jb
adc
jl
rcrb
push
clc
enter
into
dec
pop
out
iret
imul
xor
shrl
lahf
dec
mov
int3
sbb
hlt
fnstcw
jmp
push
inc
clc
pop
adc
xchg
fucomip
sbb
stos
mov
sahf
ficompl
rol
mov
fucom
cmp
jnp
dec
fidivs
aaa
and
rolb
adc
cmp
fwait
jns
bound
inc
pop
mov
sub
jno
icebp
add
sub
xchg
lock
pop
lods
or
or
sbb
out
popf
sbb
xchg
icebp
insb
jne
dec
rcl
dec
mov
adc
cli
pop
sbb
sti
movsl
pop
inc
add
icebp
int
mov
push
test
sub
push
ds
xor
sbb
lea
repz
lods
pop
bound
insb
sarb
xor
mov
add
pop
ja
jnp
fs
fbstp
repnz
jnp
push
mov
pop
insl
and
add
ficoml
adc
out
cld
cmc
sti
cmp
aam
in
dec
push
mov
sub
adc
sbb
cltd
pop
dec
xchg
stos
mov
mov
fs
mov
inc
mov
cli
out
push
or
lock
sub
cmp
mov
in
lea
sbb
out
add
stos
cld
mov
andb
and
cmp
lea
rolb
and
clc
ret
imul
test
and
das
out
es
out
mov
and
insl
in
inc
les
pop
mov
push
fs
xchg
mov
pop
mov
xor
ljmp
or
xchg
nop
and
pop
dec
mov
and
and
ja
scas
pushf
dec
std
js
dec
stos
cmp
scas
inc
stc
es
xlat
inc
gs
dec
cmp
rcrl
lahf
rolb
int3
out
mov
lret
rcll
pop
jle
pushf
sti
jnp
add
leave
or
push
enter
adc
push
pop
cwtl
and
mov
insb
jg
add
loopne
out
xchg
fimuls
outsb
sub
sub
xor
inc
mov
xlat
out
rolb
inc
fistpl
cmp
mulb
push
or
dec
lock
or
bound
pop
push
and
fimull
pop
loopne
imul
mov
inc
jecxz
fldt
push
iret
mov
ret
test
pop
insb
aad
rcrb
daa
xor
psubsw
dec
cmp
inc
sub
imul
out
mov
rcrb
test
jecxz
imull
pop
aam
lock
ljmp
outsb
test
dec
iret
inc
sarl
cmpsl
push
pop
adc
push
add
or
inc
jge
add
adc
movsb
mov
pushl
sti
gs
add
sbb
push
and
or
xchg
cltd
pusha
aas
out
jb
xchg
sub
fildll
jb
shll
and
das
pop
push
mov
pop
or
xchg
mulb
push
jnp
inc
add
mov
std
mov
in
pusha
xchg
rol
repnz
xchg
movl
xor
mov
sub
test
lock
jns
aaa
outsb
mov
imul
cltd
or
into
jg
xchg
mov
pop
stos
aad
sti
add
inc
lcall
xor
repnz
mov
pop
loopne
push
pop
jns
out
adc
fiadds
jns
jmp
add
pop
test
or
subl
addr16
and
xchg
das
mov
es
xchg
cmp
push
sbb
movsb
lcall
inc
jae
ss
sbb
in
or
push
rcll
loopne
fbstp
hlt
mov
ret
and
and
and
pinsrw
icebp
and
shlb
add
push
fwait
pop
jl
pop
xor
fs
sbb
adc
test
shll
xchg
push
mov
leavew
pop
inc
push
inc
xchg
test
mov
mov
ds
sbb
arpl
jle
std
add
ja
sub
mov
sub
scas
dec
xor
fdivl
pop
add
cmp
xchg
test
addr16
inc
pusha
rorl
out
jbe
jmp
lods
mov
jb
and
xor
loopne
xor
sbb
adc
adc
jecxz
lretw
scas
push
push
lcall
lret
mov
cmp
push
pop
test
xchg
or
addr16
btrl
adcb
out
clc
cmp
in
jp
insb
mov
testl
adc
xchg
cwtl
mov
mov
push
dec
sahf
fsubs
xor
xchg
stos
push
fwait
push
fwait
fs
xor
aas
mov
sbb
adc
shll
pop
mov
out
stos
lea
shld
xor
popf
or
fs
cmpsl
pop
mov
loopne
adc
fists
and
imul
adc
push
add
lret
inc
mov
mov
shll
sub
aas
shlb
pop
mov
fisttpl
xor
imul
das
aad
popl
test
cmp
sti
lods
push
out
xchg
mov
or
nop
sub
inc
adc
push
imul
mov
jnp
ljmp
test
and
test
loopne
enter
ja
clc
setp
les
xchg
cmp
jle
arpl
adc
fnsave
pop
lock
mov
repnz
iret
jns
test
mov
sub
mov
add
sub
sub
push
xor
mov
push
mov
rcrl
loopne
int
loope
sub
add
inc
pop
mov
push
adc
and
scas
jo
aas
sbbb
jae
popa
icebp
xchg
ds
jo
enter
xor
inc
mov
out
mov
or
ja
mov
ss
dec
fs
inc
push
mov
pop
insb
mov
cld
insb
clc
fucom
push
or
int3
orl
cmp
mov
inc
cltd
ficompl
mov
pop
test
inc
test
pushl
pop
subb
ficoml
subb
mov
pushf
adc
daa
jae
fstpt
push
adc
sbb
orl
dec
in
fldl
or
dec
sub
jp
mov
popf
pop
ds
insb
repz
push
pusha
or
xchg
in
popa
or
add
mov
jns
sbb
or
mov
inc
ljmp
fcom
std
or
and
clc
xchg
icebp
mov
loopw
mov
add
fdivrp
cld
jp
test
js
jb
mov
fcmovnb
pop
scas
mov
ja
inc
xor
xor
pop
daa
lret
push
fs
pusha
xor
add
mov
and
mov
fldenv
arpl
jae
cmp
loopne
dec
test
jmp
jecxz
push
mov
jl
xchg
xor
cltd
loope
xchg
pushf
inc
mov
inc
cmpsl
int3
loopne
push
xchg
lock
inc
xor
lahf
lret
jno
xor
xor
adc
pop
mov
adc
xchg
lahf
cwtl
add
sub
sbb
mov
test
mov
add
lcall
pop
or
mov
lock
sub
mov
imulb
sub
mov
popf
jg
xchg
or
xor
dec
adc
jbe
es
adc
fistpl
pushf
addl
pushf
aaa
outsl
mov
bound
cmc
dec
filds
or
cmp
dec
dec
adc
or
mov
cli
adc
add
repz
mov
rcrb
mov
daa
in
pop
or
pop
xor
push
data16
lock
enter
sbb
jp
xorl
xchg
lret
jbe
aas
out
adc
je
lods
fidivl
mov
inc
cltd
jge
pop
loopne
das
mov
imul
push
stos
dec
dec
mov
and
insb
sub
xchg
inc
clc
nop
aam
lods
jmp
jns
xchg
in
mov
push
vcomisd
pop
fdiv
adc
cwtl
insb
sahf
jmp
add
cld
packssdw
aam
jae
and
imul
in
aam
jl
jl
mov
xchg
and
sub
dec
std
mov
leave
lret
leave
roll
ficomps
aaa
mov
or
rclb
or
pop
addb
push
cmp
mov
or
or
mov
js
mov
cld
repz
mov
sub
imul
add
movsl
in
mov
fnsave
rolb
shlb
dec
cmpsb
ret
shrl
mov
pop
cmp
jge
add
xchg
neg
test
add
in
jg
clc
cmp
mov
dec
loope
in
push
xor
lods
hlt
or
xchg
mov
dec
cmpsl
or
pop
push
aad
js
inc
ljmp
test
jb
jb
add
xchg
clc
inc
pop
push
push
lods
pop
aad
jno
sti
pop
push
jbe
xchg
mov
out
lds
sbb
test
xor
popf
jge
das
test
insl
les
aad
inc
addr16
scas
push
loopne
mov
rcl
lods
cmp
repnz
sub
dec
sub
rcll
iret
test
loope
loope
cmp
sub
nop
pushf
cmp
fisttpl
out
sub
add
pushf
jne
lret
pop
jo
dec
test
in
arpl
mov
mov
lds
inc
in
dec
ja
jl
inc
and
mov
push
cmp
lret
and
lea
lods
fbstp
bound
cmc
sbb
call
sub
push
dec
in
iret
scas
in
pop
mov
sub
push
sbb
xor
cmp
cmp
xchg
test
aas
fidivl
mov
jne
clc
mov
test
insb
sub
repnz
dec
data16
adc
sub
jns
push
push
fs
sti
mov
sbb
pop
cmp
xchg
int3
and
sub
movsb
mov
scas
and
mov
dec
fisttpl
lret
adc
inc
add
inc
in
add
adc
into
xchg
pop
push
out
mov
mov
insb
test
fidivrs
jmp
bound
adc
add
lock
or
gs
mov
insl
pop
rcll
lea
xor
jb
sub
stos
repnz
push
lcall
int3
into
xor
lret
xchg
leave
inc
iret
in
pusha
cmc
push
inc
or
inc
scas
mov
push
pop
or
movsb
jg
cmp
dec
shrl
ret
mov
xchg
mov
mov
pop
rcll
inc
dec
out
jge
mov
imul
push
sub
cmc
std
push
jo
xorl
popf
jo
lcall
repnz
adc
or
imul
mov
cmpl
mov
test
loop
or
pop
jecxz
shrb
test
jmp
jge
sub
and
js
fldenv
cmc
es
jecxz
es
adc
cmp
lds
inc
dec
sub
fwait
or
or
mov
or
stos
pop
sbb
test
aas
insb
test
push
sbb
lret
inc
mov
insl
sarl
sub
jg
mov
in
repnz
movsl
shr
insb
jnp
lahf
loopne
outsb
int3
lock
sub
or
daa
add
dec
adc
push
push
push
or
ret
mov
jbe
pop
mov
inc
repnz
xor
xchg
fcoms
jae
push
inc
test
and
or
lahf
loop
mov
movsl
mov
jle
mov
sbb
xchg
stos
sbb
jl
sbb
hlt
sbb
pop
mov
lea
pop
sub
in
je
test
or
hlt
test
enter
shrl
pop
popa
int
testb
xor
arpl
or
movsb
mull
pop
pusha
stc
mov
aam
jo
xor
insl
cwtl
dec
es
sub
popa
je
insb
lods
push
fs
sub
imul
repz
xor
les
in
push
dec
pop
mov
cmp
rcrl
in
scas
aaa
lret
adc
lret
and
std
cmc
sahf
mov
cmpl
mov
xchg
push
mov
cwtl
cltd
insb
in
add
stos
push
mov
ds
cmpsb
pop
mov
outsb
push
aad
mov
movsl
mov
mov
push
pushf
pusha
xchg
jb
or
fstl
popf
push
scas
fsubrl
push
pop
jmp
mov
pop
or
rcrb
daa
iret
sub
adc
int3
jl
imul
nop
shlb
jle
cld
jbe
into
aam
push
xorl
clc
gs
movsb
cmp
jbe
push
dec
xchg
fs
sub
js
hlt
mov
pop
lds
gs
loope
inc
pcmpeqd
into
dec
icebp
andl
aas
test
jp
jnp
not
iret
mov
cmp
dec
cmpsb
sbb
lcall
jne
or
shlb
loop
jg
jno
inc
mov
into
mov
loop
inc
insb
aas
out
arpl
popf
adc
sbb
mov
or
jnp
jo
xchg
sti
jg
inc
xor
shrl
mov
jmp
shll
loop
popa
ljmp
repz
lahf
pushf
repnz
ret
push
ficompl
int3
jno
xor
add
cmp
push
inc
test
out
pushf
push
mov
insb
shll
fisubs
dec
scas
repnz
imul
rclb
cltd
or
stos
mov
and
loopne
fisubs
cmp
mov
mul
scas
out
int
and
cmp
xor
push
cwtl
jl
imul
loop
sub
std
mov
in
leave
dec
xor
leave
dec
ss
mov
loopne,pn
hlt
cmp
shrb
les
mov
or
fnstsw
jle
jmp
inc
add
mov
mov
xchg
mov
push
and
dec
shll
inc
cmpl
cmpsl
adc
or
filds
xchg
pop
push
imul
push
jno
je
popf
fisubl
xlat
sbb
lock
or
cld
addb
andl
mov
bound
in
lahf
scas
add
pusha
lods
xchg
mov
sbb
hlt
out
cld
mov
inc
sbb
fwait
xor
or
mov
aas
mov
and
sahf
nop
or
fadd
push
dec
adc
incb
mov
add
mov
mov
jb
cltd
aas
pop
fmul
test
inc
jo
cs
sbb
aam
xchg
in
movsb
cld
cltd
xchg
lods
sbb
jnp
adc
dec
push
lods
loop
sub
fldenv
or
push
sub
aam
lret
mov
fucom
inc
or
iret
out
clc
push
insb
sub
movsl
adc
pop
jo
or
lret
inc
je
iret
sbb
inc
test
daa
arpl
jo
pop
call
cltd
fstps
jp
add
sub
and
cli
inc
js
ja
bound
out
gs
test
aam
push
or
xchg
cmpsl
mov
cltd
xchg
inc
jns
mov
mov
scas
les
cmp
mov
push
cli
icebp
xchg
mov
sub
movsb
push
xchg
decb
and
nop
ja
dec
jnp
fldcw
inc
lret
sbb
cmp
bnd
ret
imulb
pop
cmp
daa
xchg
out
inc
jbe
fmul
push
lcall
push
dec
inc
into
sbb
les
psubw
mov
push
imul
dec
scas
xor
repnz
jno
cltd
repnz
inc
ret
or
enter
or
pop
sbb
mov
pushf
xchg
or
pop
arpl
or
repz
fwait
inc
in
and
sbb
xor
xorb
test
rcrl
iret
std
mov
clc
iret
out
mull
jno
fld
popl
vmovntpd
jmp
xchg
addr16
mov
cmp
fsubrl
dec
mov
dec
xchg
fiaddl
sub
fwait
inc
out
pop
xor
mov
mov
into
je
mov
fiaddl
loope
imul
dec
mov
jp
dec
mov
push
bnd
or
in
rcrl
ret
xchg
cli
lea
sbb
testb
mov
mov
aaa
lods
ja
aas
in
cmpl
adc
cmp
cld
in
push
jae
mov
cltd
push
sarb
cmpsl
jo
or
dec
aam
testl
shl
dec
cltd
fmull
jno
and
pop
test
and
xorl
jb
xchg
lcall
xchg
jno
or
xchg
sahf
cmpsb
jbe
jns
jbe
jae
inc
aam
push
pop
popf
jp
sub
in
mov
clc
mov
and
repnz
out
ljmp
in
or
test
mov
mov
rcrl
lahf
cltd
sub
rcll
pop
mov
loope
sbb
or
xor
pop
int3
test
int
add
pop
iret
or
addr16
repz
lret
movsb
imul
jmp
scas
popa
xchg
dec
test
inc
lock
ljmp
sbb
popa
xor
scas
jae
sbb
sti
and
fildll
insl
clc
repnz
or
add
jmp
jne
loopne
into
adc
mov
jno
ret
and
sub
cmp
andl
lret
cmp
fwait
mov
push
orl
sti
ds
push
cwtl
jmp
cmpsl
mov
lahf
gs
orb
or
nop
adc
push
je
icebp
aas
adcl
sub
adc
mov
rcr
fs
adc
add
inc
jge
cmpsb
jp
jle
mov
add
cmc
lsl
push
in
test
mov
sbb
lock
call
adcl
mov
dec
add
popf
sbb
mov
test
cmp
or
dec
pushf
mov
or
and
inc
enter
or
push
mov
xchg
lds
inc
mov
pusha
jns
ljmp
mov
mov
pop
or
sar
mov
leave
dec
cmp
dec
and
aaa
cmp
popa
mov
push
cmc
mov
mov
or
or
xor
fstl
aaa
or
cmp
data16
push
dec
jb
sub
mov
xchg
scas
out
ret
sub
call
aas
rcll
ret
iret
cmp
and
or
pusha
jns
dec
sub
mov
les
test
lods
xor
cwtl
xor
inc
jns
cmpsl
xchg
dec
mov
mov
leave
xchg
xor
mov
hlt
add
cmp
sbb
dec
cwtl
mov
pop
cmp
sub
or
xor
ss
out
mov
jecxz
neg
cmp
jle
lock
icebp
lahf
mov
cs
cltd
dec
pop
mov
repz
test
cmpsl
inc
lea
xor
hlt
test
add
push
cmpsb
xor
add
sub
leave
jo
mov
fdivrs
xorps
sar
push
push
test
jmp
out
andb
pop
out
test
jo
mov
out
out
mov
shll
shr
popa
loope
mov
and
dec
push
push
das
jmp
adc
hlt
sbb
pop
inc
jecxz
xchg
lcall
rclb
xchg
cmpsl
test
mov
rorb
push
inc
jno
or
loop
add
jnp
push
dec
popa
push
push
imul
pop
rol
jo
jmp
popa
xchg
cltd
and
jl
mov
push
cwtl
clc
pop
out
push
test
mov
xchg
add
cmpsl
jle
mov
or
lock
push
cmp
jbe
daa
jmp
xor
ljmp
enter
jnp
faddl
jg
xor
inc
push
pop
push
cld
jae
lcall
push
jae
mov
lods
jge
add
push
lret
adc
je
cmp
rolb
dec
adc
inc
outsb
and
push
pop
push
mov
push
and
mov
out
ss
sahf
por
lret
fisubl
adc
mov
lcall
std
insl
jo
xchg
scas
sbb
stos
clc
in
inc
mov
pop
testl
ret
jbe
cmc
mov
imul
inc
and
mov
cmpsb
inc
mov
mov
jno
mov
xor
es
or
cltd
xchg
insb
push
mov
inc
jl
cmp
pushf
mov
sbb
push
rclb
cmp
ja
flds
sbb
jae
dec
pop
lahf
xor
push
mov
mov
fnstcw
add
imul
js
vmread
xchg
inc
fildl
xorb
out
xor
cltd
adc
pop
cmp
push
mov
lret
adc
rcr
cmpsb
dec
xor
mov
cmp
inc
jle
lret
addb
stc
cmp
pop
jb
sub
dec
insl
or
inc
adc
adc
pop
out
insb
dec
sbb
clc
es
and
imul
sbb
mov
repnz
push
mov
push
jb
div
enter
push
mov
sar
sub
add
cmp
mov
mov
push
out
jp
pop
xor
add
movswl
movsl
dec
jne
shll
inc
ds
and
test
in
mov
cmp
insl
jnp
inc
es
mov
aas
pop
rolb
pop
xor
add
add
cmp
lods
fmuls
pushf
mov
popf
push
xchg
mov
mov
adc
shrl
mov
xchg
les
xor
es
xchg
jecxz
add
popf
mov
cmpsb
cli
addr16
shr
inc
rcl
sti
jno
pop
aaa
mov
xchg
mov
outsl
lods
xchg
test
fldl
jl
push
xchg
cmp
fdivrs
mov
push
and
daa
arpl
lret
cmp
push
sub
mov
cmp
adc
sbb
mov
mov
mov
cmp
mov
scas
je
adc
jl
cmp
idivl
mov
inc
iret
test
xchg
lods
mov
out
enter
hlt
fucomi
mov
sti
fcomps
int3
loop
xchg
inc
jp
inc
jne
add
jmp
jge
sub
pop
into
xchg
or
rcl
or
sbb
nop
cmp
mov
inc
pop
sbbl
add
lds
push
aas
xchg
sub
test
jae
sub
push
fildll
fdivl
mov
push
mov
fbld
mov
aas
test
add
or
mov
test
repnz
outsl
add
and
dec
stos
mov
arpl
pop
lcall
fmuls
rolb
pop
imulb
shll
ljmp
adc
iret
out
ja
push
mov
and
lods
mov
mov
sbb
cmp
push
rorl
cwtl
out
dec
clc
sub
sub
fmull
sbb
jmp
sbb
mov
mov
xchg
call
lret
jmp
xchg
or
mov
sbb
psllq
xchg
and
and
loopne
xchg
clc
lods
push
daa
aad
add
push
xchg
insl
insb
pusha
shll
xchg
mov
mov
push
sbb
dec
jae
scas
out
inc
dec
int3
in
and
add
pop
sbb
adc
and
dec
sahf
xchg
dec
mov
mov
mov
in
test
and
push
pop
mov
scas
cmp
mov
and
cmp
mov
inc
sahf
inc
ja
std
dec
fiaddl
adc
mov
fdivr
adc
orl
jb
rorb
and
icebp
mov
adc
inc
inc
and
jbe
sub
mov
push
cmp
int3
or
repz
out
cwtl
adc
ret
xchg
pusha
and
adc
mov
lock
aas
push
jp
pop
repz
xchg
dec
lods
fisttps
dec
mov
out
inc
cmp
js
and
sub
jno
mov
imul
xor
loop
and
jae
jne
sbb
adc
xorb
mull
pop
cmp
pop
sub
jecxz
int
mov
mov
and
fstpl
loop
sbb
std
pop
clc
lcall
adc
loop
mov
dec
enter
push
shrb
sti
add
xor
orb
xchg
jmp
ja
fsubrs
mov
fs
roll
push
push
sub
int
in
lock
stos
aaa
testb
xor
xor
cmp
add
lds
sahf
sub
shl
loope
shll
add
stc
xor
push
fistpll
inc
insb
xor
jp
and
je
arpl
add
lcall
fdivp
pop
sbb
or
sbb
lahf
aad
mov
mov
cmpsl
repz
lock
insb
sub
stos
mov
icebp
cld
mov
fcomip
ror
mov
js
lock
pop
in
outsl
lds
xlat
leave
dec
push
and
xchg
testl
inc
push
mov
mov
push
sti
mov
mov
inc
js
aad
push
addl
push
int
fadds
and
repnz
in
idivl
clc
cmpsb
jae
loopne
es
in
std
dec
jne
mov
lret
inc
push
jecxz
and
cmp
mov
leave
pushf
incb
inc
jecxz
scas
in
jae
lock
sub
movsl
pop
lds
stos
fildll
lret
add
pop
clc
add
bound
out
in
push
mov
jo
nop
scas
sahf
dec
dec
in
fstpt
mov
repnz
inc
mov
xor
stos
mov
sub
js
jl
xchg
mov
in
jb
pop
aam
cmp
push
inc
cmp
jo
out
mov
aad
inc
mov
jae
or
out
xor
xlat
pop
scas
in
xchg
cmp
cwtl
out
lods
xchg
fsubl
aad
out
sti
sub
jecxz
mov
lahf
mov
adc
inc
shrb
pop
dec
mov
mov
movsb
or
fistpl
push
and
push
leave
in
xchg
pop
insl
xorl
push
dec
add
call
out
dec
fldl
les
sbb
outsb
push
cmp
pop
outsb
lods
sub
in
jle
rcr
adc
int
repz
and
fbstp
jecxz
shlb
arpl
push
adc
pushf
dec
in
mov
inc
mov
xchg
cmp
loop
xor
and
inc
jg
out
icebp
inc
repnz
jnp
and
xchg
add
or
shl
xor
nop
mov
pop
daa
or
and
arpl
test
or
pop
icebp
pop
xchg
lea
adc
setl
incb
push
ss
fwait
stos
push
imul
xor
xchg
xchg
data16
scas
pop
int3
adc
push
shrl
pop
xchg
rolb
mov
cmp
cmp
lock
in
and
jge
gs
movsb
jae
scas
inc
jbe
loopne
roll
pushf
or
or
mov
into
add
or
lods
std
push
push
xor
adc
push
and
xor
fldenv
ljmp
and
popa
aas
cmp
jmp
jge
xlat
popf
cli
outsl
repnz
adc
imul
adc
shr
aam
jns
xor
stos
pop
inc
out
out
inc
adc
lret
push
xlat
shlb
fmuls
popf
mov
push
cwtl
sub
pop
mov
pop
xchg
dec
push
sub
call
jg
ret
xor
lods
aad
xor
adc
fs
jo
into
rol
and
gs
es
cmp
sbbl
cmpsb
push
mov
add
bound
in
out
lods
sub
cmc
fldenv
movsb
movsl
in
mov
sub
dec
popa
xor
repnz
mov
shlb
or
aad
mov
jbe
jmp
test
or
stos
pop
xchg
mov
sbb
mov
mov
inc
inc
xor
test
in
sbb
mov
mov
add
and
or
lret
dec
iret
dec
fbld
std
mov
cs
clc
push
mov
lods
mov
xor
mov
js
pop
ficomps
adc
lea
arpl
ljmp
outsl
pop
mov
push
in
push
insb
lret
pop
jmp
mov
mov
fisttpll
imul
arpl
push
dec
dec
sbb
xor
push
lahf
inc
fucomi
outsb
popa
push
insl
loope
insb
std
adc
xor
fiadds
mov
or
shl
mov
sarb
xorb
dec
leave
adc
and
dec
fistps
pop
rclb
out
out
cmp
ja
inc
pop
fs
andl
test
icebp
jbe,pn
lods
test
imul
in
bound
ret
mov
inc
stos
sbbl
add
or
jmp
adc
mov
mov
push
aam
jo
xchg
lds
ret
push
jne
jb
scas
pop
and
in
stos
jp
cmp
mov
repz
pop
aaa
xor
imul
fucom
popl
jge
jmp
jns
cli
cmp
or
mov
lods
inc
jb
mov
cmp
adc
pop
xchg
add
add
test
movsb
outsl
add
jno
insb
pop
cmp
push
cmp
ret
mov
and
outsl
mov
mov
sbb
test
mov
nop
loop
fcomps
inc
insl
mov
add
popa
and
subl
mov
push
out
adc
mov
es
outsl
push
jae
ljmp
cmp
xlat
push
stc
data16
or
pop
imul
push
loopne
cld
pop
sub
xchg
fisubl
pop
in
out
jae
rep
push
jo
push
mov
adc
sub
xor
mov
jno
xlat
arpl
loop
test
mov
mov
and
ret
daa
mov
mov
fs
inc
repnz
mov
pop
mulb
je
movsl
jbe
xchg
sub
cmp
xchg
int3
in
fsts
sbb
or
cmpsl
lods
clc
inc
lret
pop
std
pop
mov
mov
cmc
repnz
shll
jae
mov
stos
sub
adc
pop
push
jge
loop
adc
incb
mov
xor
cmp
and
cs
mov
xchg
mov
aam
and
push
pop
fsubs
dec
daa
mov
gs
pop
jmp
loope
clc
adc
push
stos
lods
cmp
fcmovnb
jge
shr
ret
jg
stos
ret
movsb
xchg
sbb
pop
insb
pop
pop
out
pop
mov
push
inc
fsubs
into
mov
and
dec
push
mov
cmp
inc
push
std
rcrb
add
xor
movsb
xchg
push
loop
les
nop
adc
mov
add
lret
pop
iret
cmpsb
mov
xchg
ljmp
pop
out
xchg
scas
lods
jo
jle
stos
int3
pop
xchg
inc
bound
es
xor
inc
pushf
outsb
push
push
push
repnz
mov
test
in
fstl
fdiv
mov
fsub
arpl
lods
movsb
repz
mov
mov
sbb
and
andb
lahf
push
jmp
mov
fidivrl
or
sub
aad
adc
lret
and
jmp
mov
push
test
mov
into
dec
mov
xor
cwtl
xor
jmp
mov
pop
jl
push
lret
push
mov
jne
pop
dec
test
add
and
or
pop
jge
add
jno
pop
fs
adc
inc
mov
inc
jg
push
sub
lods
pushf
xchg
jecxz
out
push
or
cltd
insb
fadd
dec
jp
popl
and
popf
inc
into
fs
push
sti
out
jge
and
or
xor
jno
std
test
mov
push
xor
and
mov
jl
mov
push
hlt
ljmp
pop
or
cli
imul
adc
adc
outsb
popf
leave
sub
adc
jp
or
push
lret
mov
push
les
cmpl
push
sub
sub
cmp
jp
xor
imul
jge
push
test
les
mov
in
ljmp
jmp
pop
aas
push
jae
jp
mov
ss
lds
test
bound
stos
lods
std
aas
mov
stos
ror
and
dec
pusha
aaa
add
in
fsub
push
fwait
and
rorb
cmpsb
mov
sbb
repnz
push
xchg
or
and
repnz
jns
add
jl
sar
test
adc
loopne
gs
loopne
push
mov
std
mov
in
jmp
popf
ja
nop
mov
out
pop
in
sbb
divb
push
jecxz
fsts
sub
lcall
icebp
push
sar
xchg
jno
lods
sbb
mov
call
jns
jecxz
jle
test
mov
imul
or
pop
aaa
sahf
aaa
nopl
adc
bound
cmc
push
test
addr16
jmp
das
or
clc
sub
dec
jne
jle
pop
pop
ret
mov
mulb
push
inc
sti
dec
dec
stc
arpl
sub
mov
pushf
sub
and
scas
rolb
rcrb
inc
xchg
and
push
jge
cltd
push
inc
mov
icebp
cmp
test
xor
dec
in
pop
arpl
pushf
jecxz
and
insl
xchg
xor
outsb
fsubr
jle
mov
xchg
leave
enter
repz
xchg
jmp
sarl
addr16
in
push
cmp
iret
lret
mov
in
xor
leave
aas
mov
lock
push
shlb
dec
ds
mov
or
ss
sub
out
mov
push
mov
dec
push
out
je
pop
mov
mov
dec
imul
jns
sub
icebp
call
shrb
std
add
push
cmc
aad
jno
inc
sbb
mov
inc
jo
aad
inc
pop
adc
sbb
adc
pop
mov
mov
daa
in
fcomp
negb
je
int3
test
mov
cmp
pop
lock
mov
fnstcw
cmp
es
cmp
cmpsb
sbb
push
jp
cli
mov
adc
inc
dec
and
push
cltd
outsb
nop
cld
inc
jle
mov
push
int3
xlat
lret
sbb
out
aad
adc
bnd
dec
push
pop
test
lods
push
repnz
cwtl
int3
and
cwtl
fs
xchg
jns
je
es
inc
or
cwtl
cmp
xchg
adc
and
out
mov
jp
mov
sbb
sub
sub
lods
out
jne
ret
and
cmp
mov
jne
sbb
fwait
test
lds
mov
stos
in
jg
sbb
sub
pop
popa
and
mov
les
inc
fstl
or
rcll
adc
cmc
push
dec
out
push
gs
jp
push
in
hlt
lahf
dec
dec
inc
xchg
ljmp
jb
add
jg
orb
pop
jo
rcl
repz
les
push
fisttpl
lret
fistpll
shl
push
jno
add
mov
adc
repnz
cmp
inc
ljmp
push
sbb
mov
lods
movsl
xchg
inc
stos
lds
aam
mov
and
repz
push
mov
cmpl
and
nop
mov
test
dec
popl
xor
scas
inc
mov
sub
jo
cmp
or
or
push
mov
pusha
mov
push
add
aas
out
xchg
cmp
sbb
jge
add
cmp
cmp
mov
cmpsl
test
iret
lock
scas
add
push
jno
rol
int3
push
int3
stc
test
cwtl
lock
fs
lahf
sub
and
sub
lret
add
loop
and
fldcw
push
xor
mov
loopne
xor
dec
stc
fs
fwait
sub
dec
push
xchg
dec
fs
movsl
out
popf
pop
xchg
mov
stos
loopne
pushf
fcmovbe
fistpll
pop
outsb
mov
jbe
dec
xor
aaa
int
fldln2
sahf
pushl
mov
jbe
xorl
and
cmp
clc
adc
adc
cwtl
dec
fwait
jns
xorl
jb
dec
or
ret
sub
out
fsubs
fisubl
ss
sbb
mov
mov
push
pop
xor
push
push
jge
andb
imul
aas
pop
push
arpl
jecxz
fcmovne
in
shr
and
test
aam
pop
test
leave
or
dec
xor
or
loopne
xchg
ja
add
movsb
xor
dec
imul
pop
mov
test
int3
mov
push
sub
and
mov
cmp
mov
fs
push
shrl
scas
sti
scas
mov
sub
mov
sbb
mov
mov
cmc
into
adc
and
insl
js
push
pop
and
fsubrl
xor
movsb
dec
jmp
adc
into
mov
cmc
mov
popf
fadds
adc
adc
js
inc
and
fidivrl
loop
xchg
push
int3
aas
pop
daa
imul
mov
xchg
stc
aad
mov
mov
in
sub
loope
jmp
imul
rcrb
push
scas
inc
jo
icebp
inc
shr
dec
jno
jbe
loopne
adcl
outsl
sub
sbb
jecxz
divl
cmpsl
adc
push
fimull
cmpsl
jnp
decb
das
cmp
outsb
lods
inc
mov
xor
in
and
lret
add
popa
insb
into
nop
pop
mov
and
and
popa
pop
add
call
sbb
loop
stc
mov
shrb
inc
les
mov
inc
adc
mov
mov
sub
push
ret
leave
daa
sbb
bound
loop
add
pop
adc
pop
pop
jne
xor
pop
inc
icebp
jle
fcoml
inc
out
add
jmp
xor
iret
sahf
or
mov
cs
cmpsl
lods
dec
mov
pushf
mov
lods
out
dec
mov
test
outsl
loop
sbb
add
inc
xchg
ss
clc
cli
jb
push
add
sbb
bound
xchg
aaa
aas
adc
xchg
and
iret
push
adc
incl
pop
insb
aaa
js
js
stos
loope
out
mov
shl
clc
ret
or
mov
fs
xchg
divb
test
and
add
fmul
pusha
fidivs
les
pop
jge
add
pop
call
push
cmp
mov
out
and
lds
insb
test
and
adc
aam
mov
jns
in
pop
and
fildl
jb
pop
jmp
or
jne
inc
mov
mov
push
sbb
pop
lea
mov
imulb
dec
movsl
jo
les
jecxz
popa
mov
push
push
aaa
jo
mov
jns
decl
adc
fs
xorb
in
imul
xchg
enter
shll
pop
cs
cmc
push
out
ja
pop
in
scas
inc
push
and
neg
aas
xor
jle
sbb
and
mov
mov
shlb
jne
cmc
pop
and
in
cmp
out
aad
push
cmp
aaa
fs
xor
inc
lods
mov
fwait
mov
mov
push
in
dec
pop
adc
stos
sarl
lds
mov
out
push
adc
lods
mov
bound
in
sbb
cltd
sbb
gs
and
inc
jne
or
addr16
cmp
out
out
sahf
fldz
shrb
nop
xchg
jb
and
inc
push
jns
subl
pusha
and
pop
mov
int3
rcll
and
push
addr16
ja
ss
mov
loopne
in
pop
inc
mov
xchg
add
jmp
lods
cmpsb
inc
les
xchg
jle
out
call
cmp
sahf
and
inc
icebp
aam
sub
arpl
loope
mov
push
call
rclb
popa
in
stos
lahf
stos
cltd
xchg
inc
sbb
mov
push
xchg
xlat
inc
xchg
mov
jb
xor
lahf
daa
push
cmc
leave
mov
inc
xchg
loop
sarl
imul
jno
pop
mov
test
mov
flds
test
insb
and
inc
pop
cs
pop
loop
insb
loop
xorb
mov
mov
sub
out
mov
rorl
push
add
in
cltd
enter
pop
pusha
pop
pop
mov
in
mov
mov
xchg
sub
in
les
xchg
add
xor
int3
shlb
test
mov
cmp
push
dec
aam
mov
imul
jns
pushf
and
xor
xor
insl
xor
lret
pop
pusha
push
dec
out
inc
addb
cmp
leave
dec
aas
iret
shl
mov
test
mov
pushf
outsb
cwtl
mov
ja
testl
or
jle
adc
xlat
add
sti
test
hlt
push
mov
cld
cmp
mov
cmp
sarb
ds
dec
pusha
cmp
xchg
mov
call
sub
add
lret
insb
stc
ds
fildl
pop
bswap
inc
jge
nop
inc
jbe
dec
fs
cmpsb
mov
pusha
mov
shrb
fwait
insl
pop
adc
repz
decb
pushf
lea
cmp
and
xchg
aad
pop
sbb
pop
ja
adc
shrb
dec
mov
aas
jbe
fs
mov
xor
jno
mov
cs
mov
mov
in
sub
test
scas
jb
mov
notb
fsubrs
test
or
test
mov
cmp
mov
mov
cld
out
lock
add
adc
sbb
std
or
xchg
cmp
sub
in
int
cwtl
insb
xchg
incb
addb
pop
mov
inc
adc
or
inc
insb
inc
jns
insl
stc
mov
cmpsb
das
fstpt
mov
mov
repnz
mov
lahf
sbb
cwtl
inc
jbe
repz
lcall
lea
lea
mov
mov
shlb
pop
mov
insb
push
fadds
mov
cmp
mov
xchg
inc
shrl
jl
arpl
sbb
hlt
loopne
das
xchg
in
sbb
loope
inc
push
xchg
fisttpl
lods
je
lods
inc
cwtl
and
rcl
scas
pop
jnp
clc
lahf
pop
out
nop
mov
cmpsb
addr16
push
adc
pushf
roll
sbb
and
pop
inc
dec
jnp
addr16
in
pop
xor
xchg
push
mov
test
iret
cs
xor
and
iret
insb
psadbw
mov
fistps
mov
lcall
shll
push
lea
test
pop
movsl
jp
iret
je
stc
jmp
jo
jns
sti
rcl
or
sbb
mov
and
dec
test
fsubrl
and
pusha
and
fisttpll
lcall
mov
xchg
dec
cmp
xchg
lret
sub
sub
pop
popf
or
ljmp
shrb
das
movsl
insl
sub
xchg
addr16
arpl
test
call
xor
nop
pop
jbe,pt
aas
cmp
push
test
ss
xchg
cli
push
sub
jl
ss
sbb
repnz
pop
jno
inc
sub
outsb
mov
sbb
je
dec
sub
bswap
adc
jg
fdivrl
fmull
mov
aad
mov
jb
pop
fistpl
xchg
lds
pop
jge
push
lahf
or
mov
data16
negl
fs
mov
xchg
fadd
jp
jbe
out
xchg
inc
jo
decl
out
mov
stc
pop
fs
pushf
mov
jmp
in
cmpsb
loope
add
out
mov
adc
mov
movsl
out
sbb
repnz
stc
sub
out
test
test
cmp
ds
mov
aas
popa
push
mov
xor
xor
mov
lret
out
sbbl
orl
jp
add
xorl
int
mov
mov
fs
xchg
and
dec
jge
or
hlt
and
lret
movsb
imul
add
fidivs
add
and
das
fidivs
enter
out
js
pusha
js
movsb
icebp
and
cmp
std
dec
sbb
push
jbe
cmpsl
sti
mov
aad
inc
push
popf
arpl
in
xor
icebp
inc
mov
mov
adc
sub
mov
ret
pop
popa
mov
shll
cmp
test
sbb
mov
inc
push
jnp
cmp
inc
fisubrl
sub
and
add
test
xchg
in
int3
dec
sub
push
jmp
bnd
xor
mov
out
xor
sbb
cmp
int
xor
xchg
sbb
test
dec
lods
pop
popa
push
clc
popf
jp
add
lods
and
xor
js
fisubl
pop
jns
jno
sub
fst
sbbb
sbb
enter
sub
add
gs
jl
adc
adcl
mov
lds
mov
clc
push
cld
loopne
fs
mov
xchg
ja
push
push
nop
in
outsb
sbbl
pop
pop
in
mov
push
stos
adc
xchg
inc
vsubps
mov
out
inc
stos
scas
aas
andb
push
sub
jno
ss
add
addr16
cmp
jb
dec
inc
mov
jno
popa
hlt
push
pop
cltd
aad
pop
out
pop
insl
adc
jl
mov
add
cmpsb
mov
ljmp
jne
cli
mov
pop
int
call
stos
test
movsl
aad
add
rcl
sbb
xchg
jno
rol
stos
and
std
out
notb
xchg
aas
mov
sbb
out
mov
outsl
movsl
jnp
imul
cwtl
pop
aad
daa
push
cwtl
and
jmp
jns
push
in
push
arpl
mov
mov
popf
and
pop
popf
cltd
out
call
sti
jecxz
sbb
cs
in
ljmp
lods
lods
xchg
cmp
mov
pop
push
or
mov
popa
pusha
das
mov
shl
out
push
jno
xor
stc
cmp
sti
sbb
fistpl
and
orb
out
das
and
fildl
out
insl
inc
mov
out
sbb
xorb
sar
jp
sbb
test
mov
imul
dec
pushf
push
xchg
mov
cmp
push
xchg
cmp
dec
lret
sti
stc
leave
repz
cmp
mov
insl
cmp
stos
inc
mov
aad
dec
rcll
and
mov
mov
sub
or
rolb
cmp
rclb
cmp
jecxz
cmp
std
inc
in
xor
fnsave
xchg
stc
addr16
adc
adc
add
adcb
jnp
jp
xchg
jge
mov
push
push
dec
enter
cmp
or
sbb
xlat
das
push
push
movsb
out
push
xchg
je
add
xor
out
stc
xor
inc
fstpl
test
xchg
lahf
or
lods
or
and
cmpsl
adc
ret
cmp
mov
xchg
jmp
dec
dec
mov
sbb
add
sbb
sbb
icebp
fiadds
jne
je
loop
insb
bound
jae
ss
cld
xchg
mov
insl
into
mov
repz
dec
fcmovbe
adc
pop
sub
sbb
imul
mov
dec
mov
mov
js
mov
inc
mov
rcll
enter
jmp
mov
scas
and
std
pop
sub
xor
out
out
sub
xchg
ljmp
mov
sti
aaa
pop
mov
sbb
nop
push
pop
test
and
repz
dec
lcall
rclb
cmp
pop
outsl
push
mov
fistps
mov
mov
inc
inc
js
mov
aad
out
addl
lods
pop
and
xchg
pop
das
cmp
cmpsb
xchg
xchg
test
jno
sbb
aas
addr16
lahf
popa
cmp
or
jecxz
in
popf
movsb
mov
push
xor
xor
dec
setg
jo
pop
push
mov
imull
mull
clc
clc
mov
test
hlt
xor
orl
lds
adc
push
sub
lds
inc
push
insl
repz
inc
jl
fdivs
pop
add
stos
jae
xor
xchg
nop
jo
or
test
mov
sub
jns
loopne
xor
data16
shrb
cwtl
mov
cmp
push
xor
dec
inc
lret
dec
mov
and
xor
loop
mov
js
or
jnp
cmc
cmp
ljmp
mov
pop
push
mov
jnp
clc
inc
add
ret
push
sbb
int3
scas
cli
js
mov
test
xor
out
mov
mov
dec
push
call
ror
add
push
out
pushf
cltd
jno
test
inc
push
pop
jmp
push
and
fnsave
pop
or
and
outsb
lods
and
stos
cmp
xchg
test
in
push
jb
arpl
sbb
mov
mov
pop
inc
push
lret
sbb
jbe
pop
adc
cmp
nop
pop
ja
scas
sub
mov
and
scas
bound
js
pushf
sbb
test
in
decb
out
and
jge
pop
push
fldenv
xor
adc
sub
outsl
or
out
adc
lahf
addr16
loop
vmovlps
and
cmpsl
shlb
xor
or
addr16
rorl
pushf
rol
fldl
and
aaa
inc
scas
fistpl
call
mov
xor
push
push
inc
test
out
or
cmp
pusha
and
std
rolb
sbb
mov
sahf
pop
xchg
mov
cmp
and
dec
fldenv
shlb
mov
insb
push
sub
movsb
bound
sub
inc
and
add
sbb
sbb
jbe
aam
fdivl
andl
pop
cmp
pop
mov
xchg
xchg
add
dec
outsl
enter
dec
add
test
ljmp
dec
ror
sbb
imul
push
repz
or
jge
mov
mov
enter
sbb
pusha
adc
fistps
or
std
data16
mov
sub
sub
and
jnp
xchg
jne
fldenv
pop
fsubrs
icebp
aad
outsb
push
adc
inc
addr16
and
les
lret
push
ja
mov
fistpll
call
inc
bnd
rclb
inc
add
fimuls
in
filds
aaa
test
pop
ficoml
mov
mov
loope
mov
clc
add
leave
xchg
inc
int
mov
sarl
push
cmp
in
add
push
lock
fcompl
and
movsl
gs
int3
iret
pop
ret
sub
lds
jp
inc
je
movsl
testb
mov
sbb
ds
cli
enter
mov
aas
cmp
sbb
push
je
cld
add
mov
call
mov
cmp
out
out
cmp
lcall
jmp
cmp
push
je
cmc
loope
or
dec
int
dec
dec
and
stc
mov
scas
mov
in
adc
sbb
push
movsb
adc
cmp
mov
pop
das
sub
dec
xchg
sbb
or
dec
cwtl
sti
pushf
jmp
cmp
lahf
adc
xor
int3
pop
out
xor
inc
jbe
je
pop
push
dec
mov
arpl
leave
jg
pop
inc
pop
sbb
sahf
ja
and
das
imul
scas
lock
adc
jp
shrl
icebp
ret
daa
ljmp
mov
dec
push
imul
jo
insl
popa
aaa
xchg
shr
cmp
in
sbb
nop
aam
xchg
clc
jmp
ss
call
mov
addb
jbe
mov
jp
fs
lds
mov
lret
jns
cmp
addr16
or
xor
adc
addr16
dec
xchg
mov
clc
fucomi
adc
sbb
cmc
mov
xchg
cmp
out
pop
test
jnp
rolb
inc
pop
mov
fxch
pop
push
xchg
popa
mov
insb
outsb
add
or
push
mov
jp
lret
cwtl
loopne
sarb
dec
jns
jns
xchg
sti
shll
mov
xchg
xchg
sti
loopne
sbb
sub
lock
pop
push
jecxz
aam
sbb
adc
repnz
ja
dec
cmp
jecxz
outsl
ret
cmp
test
xchg
es
shrd
cs
js
mov
scas
xor
faddp
leave
xor
lahf
lock
push
hlt
pushf
lock
or
xchg
mov
sbb
pop
xor
mov
addb
ja
cmp
ss
cs
mov
or
lahf
popf
ja
push
sahf
jmp
aas
popl
sar
mov
adc
subb
mov
pushf
loopne
out
dec
add
outsl
repz
pop
outsl
int3
sbb
or
sbb
cmp
arpl
adc
push
xor
add
mov
rcrl
mov
icebp
fiaddl
and
imul
notb
jg
in
rcrb
sahf
jo
dec
shll
jg
nop
cmp
and
or
cmp
jne
pop
push
or
movsl
scas
or
and
mov
push
into
mov
lahf
mov
add
sbb
js
enter
and
out
not
sarl
and
adc
pop
sub
mov
pushl
xor
or
mov
mov
inc
xor
pop
xchg
cmpsl
addr16
push
cwtl
mov
repnz
and
sti
fwait
sub
pop
cmp
jl
cltd
sbb
and
or
addr16
pop
adc
inc
or
test
xchg
js
sti
inc
inc
jle
xor
je
imul
push
cs
pop
mov
sub
mov
push
xor
scas
xlat
subb
rcrb
in
gs
mov
arpl
outsb
and
aam
jp
fcom
dec
sub
test
test
dec
filds
test
sbbl
cmp
rcr
aam
mul
xor
ljmp
mov
loopne
lock
data16
sbb
jbe
shlb
sub
hlt
lods
dec
mov
mov
iret
iret
pop
inc
aas
cmpsl
mov
mov
stc
jbe
add
std
cmp
xlat
jb
call
inc
les
pop
imul
or
hlt
xor
in
or
push
cs
lahf
lds
xor
pushf
nop
je
dec
or
movsb
inc
jl
out
test
imull
insb
fdivs
rorb
pop
pop
out
cmpsb
aas
xlat
mov
aad
adc
popa
push
jge
cwtl
adcl
sub
ret
daa
adc
enter
jne
je
icebp
xor
pop
inc
or
cmp
into
xor
incb
sbb
lret
pop
icebp
in
movsl
popa
mov
lret
xor
push
jle
mov
mov
jle
and
insl
retw
shl
loope
iret
fdiv
rclb
cmpsb
std
cmp
push
cmpsl
leave
lcall
or
je
sbb
mov
sbb
mov
test
js
add
jp
insl
dec
xlat
outsb
sub
roll
in
xchg
out
xor
and
sar
sbb
les
outsb
dec
adc
out
lods
stc
out
xchg
mov
out
cltd
in
fs
ljmp
popa
adc
divl
jp
jns
aam
xor
or
xchg
cltd
int
sbbl
inc
dec
orl
fstps
push
sbb
ss
push
jmp
xchg
xchg
sub
pop
loopne
inc
lret
push
stos
imul
fwait
stc
adcb
cmc
jno
mov
adc
xchg
add
mov
in
int3
sub
shl
add
popa
or
ss
mov
ds
rcr
ret
mov
daa
pop
pop
rcll
cltd
jo
mov
mov
mov
add
sti
cld
cld
or
pop
push
xchg
in
lret
jae
pop
and
sub
mov
add
mov
aad
popw
pop
and
popf
fdivl
push
repnz
fsubrl
cmp
lcall
cmc
lds
std
jle
fsubrs
scas
cmpsb
or
repnz
xor
mov
sbb
pop
jno
mov
xor
xchg
rclb
insl
sbb
lret
push
shll
pop
push
popa
pop
aaa
aaa
pop
push
ret
pushf
inc
sub
cld
mov
dec
xlat
fcompl
movsl
jno
sbb
pop
push
in
jo
clc
call
add
push
adc
incl
scas
bound
add
cmp
js
out
cmpsl
mov
loopne
lret
into
add
int3
mov
mov
xor
xchg
mov
sub
xchg
xchg
adc
shrl
sbbb
mov
and
dec
call
jno
sahf
leave
jle
rcll
in
repz
hlt
and
mov
pop
inc
stos
add
sahf
or
movlps
loopne
sti
inc
movsb
xor
adc
cld
outsb
bnd
cld
popa
les
pop
mov
insb
and
jno
out
pop
xlat
sar
cld
cmp
push
push
stc
adc
repnz
aas
mov
cmpsb
jp
shll
mov
outsl
in
cmp
add
andl
mov
jno
lods
cmc
and
cmp
loope
popa
and
mov
pop
pcmpgtw
add
push
xchg
ljmp
in
mov
daa
xor
xchg
hlt
jmp
or
mov
adc
sub
cmp
aad
cmpsb
mov
cmp
enter
ficompl
mov
lods
adc
push
cmp
fistps
xor
js
jno
jb
notl
jns
stos
int
mov
fstps
or
dec
lcall
cmpb
inc
xchg
pop
sub
mov
repnz
shlb
enter
leave
out
adc
cmpsb
imul
loop
jae
cmpsl
mov
insb
loope
lods
dec
les
test
jmp
cmpsb
mov
mov
movsl
inc
push
xchg
mov
outsb
icebp
addl
add
mov
shrl
cld
inc
pop
out
test
jmpw
adc
stc
jmp
sar
or
fldl
in
or
sub
in
lods
dec
cmpl
sbb
in
lret
cld
sti
stc
add
js
mov
and
sar
add
mov
mov
loope
xor
xchg
add
sub
insb
xlat
cmp
test
fiaddl
xor
xchg
bound
push
ud1
es
adc
cmpsl
into
xchg
add
sbb
popfw
ljmp
clc
repz
aad
cli
pop
inc
or
movswl
adc
es
inc
lods
xchg
xlat
sub
sub
popf
dec
data16
loopne
movsl
loope
sbb
jb
pop
loope
push
add
push
shl
sbb
mov
cli
fiadds
rcrl
dec
repz
dec
jmp
orl
lret
sbb
mov
scas
jmp
lret
push
or
pusha
xor
mov
pushw
and
sahf
out
lock
ja
pop
ftst
lahf
sub
sub
mov
cs
mov
mov
jl
mov
mov
fimuls
jg
adc
sub
pushf
fisubs
cld
add
pop
xorl
push
dec
pop
cmpsl
cmp
sbb
lcall
push
mov
je
add
push
mov
cmc
pop
notl
cld
shrl
xor
pop
clc
jnp
cltd
push
add
das
and
ljmp
mov
es
shrl
stc
ljmp
lods
iret
aaa
int3
test
lea
in
popf
inc
xchg
cmp
mov
pusha
dec
and
clc
pop
nop
jp
mov
scas
lock
mov
adc
rorb
in
jnp
jle
jg
sbb
push
cmp
add
add
int3
pop
sub
pop
cmpsl
lret
sbb
jbe
mov
fnsave
leave
cmpsb
mov
cmp
mov
insb
loope
adc
outsl
addr16
cmc
fwait
mov
loope
gs
pop
ljmp
lods
fisubs
lret
push
push
xor
cli
cmp
mov
shl
js
mov
or
iret
movsl
mov
dec
cmp
aad
cli
cli
js
popf
mov
dec
pop
or
lret
pop
xchg
sarb
fs
out
push
js
dec
in
push
push
mov
sub
rolb
and
ret
ret
xchg
xchg
mov
movsl
adc
lods
jae
sub
sub
imul
add
xlat
jmp
cmpsb
iret
sahf
push
jns
xchg
out
out
xchg
call
aas
pop
leave
js
shrb
popf
orl
in
or
call
mov
adc
add
xor
dec
jae
cmp
call
icebp
ja
addr16
push
push
mov
rcr
mov
sbb
outsb
ficoms
add
das
bound
shrl
mov
push
fwait
cmp
rorl
nop
les
imul
in
or
lods
cmpsl
sub
mov
adc
stos
xchg
aam
shll
add
pop
addl
ss
lret
pop
mov
lret
jne
xlat
repz
and
std
nop
pop
mov
mov
test
xlat
popf
lret
mov
fsubrs
adc
ret
add
cmp
scas
push
push
mov
dec
mov
sti
js
push
loope
jbe
in
push
in
pop
fwait
sahf
jp
jae
push
dec
iret
pop
jmp
xchg
leave
mov
pop
hlt
inc
add
mov
cs
cmp
es
and
je
jne
adc
leave
xchg
arpl
mov
adc
pop
fs
jl
dec
test
sarb
sbb
shrb
add
cs
or
fdivp
inc
jl,pt
out
gs
subl
xchg
mov
repnz
pop
out
sub
mov
cltd
mov
dec
or
lret
pushf
xchg
in
inc
scas
mov
add
push
movsb
scas
mov
out
fisttps
lods
push
mov
arpl
sub
fsubrs
push
push
xor
xor
sub
ret
or
pop
stos
je
pusha
stos
outsl
adc
mov
sub
outsb
popa
es
es
in
jge
mov
push
add
xor
jp
cld
xlat
inc
inc
sbb
movsl
mov
push
fstp
sub
and
xchg
jae
push
cmp
insb
and
sub
lods
adc
push
jb
mov
loopne
or
rcll
sbb
sub
arpl
mov
loopne
idivb
gs
xlat
mov
adc
add
cmc
mov
rolb
int3
fisttps
sub
addr16
mov
out
imul
shr
dec
fwait
mov
add
outsb
dec
outsb
inc
ss
dec
aaa
sti
sub
iret
inc
push
add
scas
lds
int
xchg
xchg
in
jp
sbb
pop
dec
fwait
ljmp
xchg
xchg
sbb
sbb
cmp
mov
xchg
add
outsb
mov
das
jne
mov
push
dec
pop
mov
dec
jbe
xchg
jnp
ficompl
popa
xchg
dec
mov
lea
inc
cmp
adc
mov
and
xor
adcl
mov
addb
pop
fstps
fidivl
sub
outsl
scas
pushf
jg
dec
ja
imul
cltd
out
loope
fcmovu
pop
adc
rclb
sub
mov
sbb
fadd
ja
mov
pop
and
lock
sub
add
int3
push
shll
icebp
ds
gs
sub
dec
cmp
mov
and
cmp
inc
out
les
or
stc
insb
jmp
jns
shll
push
xchg
push
rol
cmp
xor
test
ret
imul
dec
jge
mov
and
jbe
jmp
mov
shll
cmp
imul
jl
mov
and
es
loope
fistpll
cmp
dec
xor
jne
dec
hlt
shrl
jo
mov
movsb
je
and
cwtl
lcall
jle
inc
scas
rorl
xor
add
out
fwait
gs
cwtl
mov
jl
test
mov
mov
mov
or
scas
ljmp
add
push
jl
adcb
xchg
xor
cmpsb
mov
in
ds
cltd
sbbb
jnp
xor
mov
dec
test
sub
fwait
leave
hlt
pop
sbb
frstor
pop
push
mov
mov
jmp
je
cmc
pop
dec
lods
movsb
lock
lea
sbb
popa
lret
add
in
mov
pop
dec
bound
add
daa
cmp
inc
fnstcw
mov
dec
jecxz
dec
imul
dec
cmpsl
movsl
inc
dec
imul
mov
loop
pop
or
in
jl
dec
pop
loopne
daa
adc
fs
outsl
int3
les
outsl
pop
out
sub
out
mov
or
jns
lcall
jecxz
les
sub
ljmp
add
leave
testl
mov
sbb
dec
ret
stc
pop
sbb
xchg
mov
jnp
subl
rorb
ljmp
xor
mov
adc
xchg
int
outsl
push
andb
dec
xchg
pop
das
adc
add
fs
out
pop
leave
or
outsl
sbb
xchg
xchg
sbb
add
and
push
jno
add
imul
mov
cmp
sbbb
mov
or
pop
sub
fstl
aas
shrl
mov
pop
shl
xchg
push
cmpb
pop
stc
pop
imul
xchg
mov
fwait
inc
pmullw
xchg
sub
pop
incl
je
stc
mov
mov
cmp
iret
daa
or
je
in
jl
lock
lar
push
adc
mov
dec
in
les
cmp
pop
dec
aaa
pushf
cmp
inc
mov
popf
push
js
push
call
mov
and
fstps
cwtl
add
movl
add
mov
lds
push
push
pop
mov
ret
out
and
pop
imul
jg
popa
inc
insb
inc
inc
jmp
js
lret
movsl
sbb
sub
fsubrs
in
bt
pop
mov
movb
mov
dec
and
adc
adc
mov
andb
or
ret
les
mov
out
lods
cmc
push
loop
xchg
mov
cmpsb
and
pop
inc
addl
ljmp
fbld
xor
push
stc
iret
cmp
loop
push
mov
xor
outsb
test
or
add
cmp
sbbb
inc
push
mov
adc
cmp
jo
mov
ret
xlat
add
xor
leave
or
adc
je
inc
wbinvd
in
lcall
mov
adcb
movsb
xlat
test
adc
add
dec
push
inc
and
cs
pop
push
xchg
xchg
mov
out
and
mov
icebp
and
data16
and
shrl
dec
arpl
sub
bndldx
fs
dec
adc
sub
jno
jb
mov
mov
cmpsb
or
adc
pusha
fisttps
sbb
insl
xchg
cmp
xchg
js
or
push
pop
mov
jae
iret
nop
mov
scas
test
mov
xchg
or
cmp
add
lods
lcall
dec
pop
xchg
dec
cld
enter
rol
pushf
subl
mov
mov
mov
into
mov
mov
mov
shrb
jp
test
sahf
mov
aam
lods
jg
jmp
jecxz
inc
xor
adc
xchg
stos
lret
aaa
addr16
inc
ffreep
aas
sbb
pop
jnp
xor
cmp
cwtl
aaa
sub
out
push
xchg
lcall
outsb
mov
jns
shrb
leave
rcl
stos
jne
pop
mov
xor
in
pop
loopne
jmp
fxch
xchg
test
xor
gs
adc
sub
lea
add
outsl
xchg
jbe
dec
jp
leave
xchg
call
bnd
dec
adc
testb
idivb
dec
cwtl
xor
call
add
cmp
mov
std
push
test
xor
ds
dec
data16
fsubr
push
cmp
push
orl
imul
push
pop
cmp
repz
sub
mov
ret
cmp
cmpsl
roll
inc
cmp
sbb
jle
popf
pop
xchg
fildll
sbb
pop
xchg
addr16
lods
mov
outsl
das
cwtl
xchg
and
shlb
mov
push
in
fldenv
mov
cmpsb
rolb
mov
sbb
fcompl
pop
mov
xor
lds
out
leave
out
ret
mov
into
shl
or
in
fstl
dec
scas
into
mov
push
addl
sbb
dec
pop
jb
pop
lret
xor
xchg
test
shll
mov
loopne
icebp
mov
mull
and
sbb
xchg
xor
mov
mov
cltd
out
out
adc
add
mov
sub
int3
and
ljmp
sub
popa
and
add
jbe
cli
testb
jl
rcl
push
out
push
xchg
inc
cmc
imul
mov
insl
push
mov
loopne
pushf
call
ljmp
jo
mov
jne
mov
pop
push
into
xor
add
or
outsb
rolb
jecxz
inc
repz
sbb
push
pop
clc
test
cld
dec
xchg
dec
dec
jmp
lahf
in
cmp
sahf
leave
rcrb
cmp
xor
mov
jae
ret
clc
adc
push
outsl
andl
pushf
aad
test
push
mov
jg
js
movsl
and
dec
sbb
cmp
outsb
fnsave
out
and
jle
jmp
dec
scas
or
inc
out
push
push
cmp
mov
ret
jo
adc
xor
stos
jns
lret
xlat
dec
jl
xlat
or
or
pop
cmp
lcall
mov
xchg
push
mov
xchg
andl
mov
mov
sarl
rcrl
sbb
flds
add
push
es
dec
fwait
xor
hlt
mov
push
mov
out
int3
es
adc
add
and
popf
inc
push
xor
push
and
test
inc
ds
addl
fnstenv
shll
imul
mov
rcrb
inc
xchg
cmp
imul
cltd
hlt
sbb
movsb
shll
adc
stos
stos
cmp
or
call
cmpsl
in
pop
cmpsb
cs
xlat
int3
inc
sbb
xchg
and
jb
mov
inc
mov
xchg
test
add
out
pop
lods
es
jmp
mov
sub
dec
cmc
cmc
daa
repz
cmc
cmpsl
push
shl
mov
or
mov
je
pop
cmp
push
repz
pop
clc
or
or
push
xor
repz
inc
movsb
cmc
adc
mov
pusha
mov
cmp
in
or
dec
pop
xchg
pop
jmp
push
xorb
lahf
push
stos
daa
xchg
cmpb
mov
cmp
cltd
pop
stos
xchg
add
aaa
int
and
push
subb
push
out
cmp
insl
mov
adc
and
xchg
test
dec
jp
in
dec
or
lret
int3
aad
insb
sub
jle
aas
sub
xchg
push
movsb
push
cmp
mov
popa
inc
gs
inc
xor
popf
dec
mov
or
aas
int3
lret
push
inc
out
jl
inc
mov
out
test
movsl
add
xchg
push
or
lret
cld
mov
fwait
xchg
jno
dec
in
call
stos
pop
mov
push
sti
les
outsb
jne
int3
lret
scas
daa
sahf
xor
scas
fisttps
push
fidivrs
cld
push
insb
push
cmp
sub
push
mov
xchg
jnp
fadds
hlt
daa
sarb
pop
movsl
sahf
sbb
movsb
mov
fimuls
das
cmp
arpl
movsl
punpcklbw
sarl
outsl
repz
mov
add
inc
ss
int
push
mov
aad
mov
sub
push
jns
push
popf
jae
sbb
mov
ja
pop
or
push
test
test
push
adcl
mov
repnz
jo
fldl
outsb
scas
jl
jns
faddl
jno
es
xchg
pop
loope
mov
int
lea
ljmp
ss
pop
cmp
cmp
jns
gs
or
out
pusha
inc
mov
xchg
xor
fs
nop
leave
pop
popa
addb
test
scas
cwtl
int3
lcall
dec
push
rorl
push
scas
pop
shll
jo
adc
add
inc
sub
daa
add
push
out
xchg
xchg
dec
fdivl
test
test
inc
out
jb
enter
jecxz
pop
cmp
out
sub
icebp
fwait
lods
add
mov
dec
sbb
dec
adc
push
push
push
shlb
mov
mov
es
nop
cmpsb
push
jb
pop
rol
subb
xchg
push
pop
in
loopne
hlt
add
jo
or
or
mov
fwait
mov
aam
scas
into
loope
mov
dec
sahf
pushf
xchg
test
rolb
loop
call
jbe
clc
mov
xchg
pop
ret
movsl
rclb
pop
lock
sub
push
lcall
pop
hlt
ret
sbb
idivb
fcmovnbe
aam
fdivrl
xor
xchg
std
xchg
push
add
add
std
mov
aas
mov
push
adc
sub
orl
out
ds
orb
adc
or
push
ds
jg
fdivr
out
sub
jns
insb
adc
fldenv
mov
or
mov
mov
jb
scas
nop
jp
mov
sbb
pop
lret
stc
pop
jl
or
mov
aas
mov
cltd
js
jp
sbb
sub
lods
xor
cmpsl
push
daa
in
mov
sub
jg
lahf
and
push
sti
pop
and
push
cmp
pop
or
outsb
cs
mov
test
push
outsl
adc
and
fdiv
add
jo
cmp
test
push
mov
pop
icebp
cmpsl
loopne
or
mov
mov
cli
mov
enter
jecxz
mov
push
cld
xchg
fs
int
sub
nop
int3
push
gs
inc
lock
mov
adc
imul
jg
or
adc
lock
push
stc
negl
aam
test
insb
xor
mov
test
mov
nopl
std
loop
mov
lcall
and
add
push
fnsave
xlat
mov
pusha
in
push
imulb
push
xchg
mov
les
ja
cltd
mov
stos
xor
jbe
mov
psubd
inc
pop
mov
and
and
mov
pop
xchg
pop
jmp
inc
fwait
sbb
inc
orb
in
jno
or
mov
mov
dec
sahf
xchg
and
dec
std
inc
enter
mov
pop
aas
loopne
stc
add
adc
or
inc
lock
repz
mov
xchg
pusha
add
sbb
push
lahf
cmp
jo
push
icebp
sub
jne
ficoms
lock
jns
add
jecxz
mov
dec
xchg
gs
fdivs
add
xchg
aaa
test
ret
fimull
inc
add
popf
xchg
cmp
adc
mov
ds
xchg
and
std
jg
mov
les
push
push
scas
loope
jb
sub
ficoml
mov
subb
xchg
push
sub
das
rclb
add
jecxz
add
les
jg
jo
dec
scas
ss
out
mov
xchg
movsl
outsl
test
xor
nop
mov
push
xchg
push
jne
repz
test
fldenv
cmc
pop
cmc
idivb
clc
fcmovbe
pop
gs
mov
jbe
cwtl
aaa
mov
orb
inc
outsb
ss
push
mov
push
in
aad
fildll
inc
out
pop
incl
inc
sbb
je
mov
dec
push
cmp
xlat
push
mov
shr
lods
mov
es
and
lcall
push
outsb
cld
xchg
push
out
and
pop
adc
pusha
out
mov
push
and
test
sbb
pop
lods
cli
mov
xchg
sub
jnp
cmpsl
adc
nop
lea
daa
arpl
lret
out
mov
cld
sti
and
cltd
mov
add
andb
orb
or
aam
xchg
xor
mov
push
es
sub
mov
push
jl
inc
ss
pusha
int3
jb
mov
inc
int
jle
pop
jmp
mov
jne
movsl
out
pop
mov
sbb
jb
push
mov
push
inc
scas
hlt
cmp
and
lcall
xlat
mov
fs
mov
jno
lret
mov
cld
sbb
roll
subl
cltd
icebp
cltd
rcrb
outsb
pushf
add
outsl
mov
and
aas
mov
scas
jne
jae
inc
loop
mov
xor
mov
loopne
mov
mov
sub
dec
out
call
pop
push
aad
cmp
cmp
decb
insb
inc
sub
repnz
int
pop
xchg
or
sbb
leave
out
insb
mov
and
popf
mov
push
xchg
fnstcw
push
cltd
push
adc
dec
sub
or
xchg
imull
and
lcall
dec
adc
or
or
nop
cmp
add
mov
insb
cmc
ret
fisttpl
mov
mov
jle
shll
add
jl
testb
and
cmpsl
pusha
jecxz
mov
jmp
rcll
fisubs
inc
mov
jbe
scas
cmpsb
loop
push
push
cmp
aad
bound
add
xor
inc
mov
cmp
xor
adc
mov
mov
push
mov
push
int3
lock
dec
push
data16
mov
xchg
inc
inc
gs
sbb
mov
jnp
ret
test
xor
das
xchg
mov
or
xor
sub
data16
sub
mov
or
mov
cmp
testl
mov
insb
mov
adcl
nop
daa
enter
adc
loop
and
pop
fwait
push
subb
sub
jg
cs
jle
pop
add
sbb
mov
shll
lea
shrl
xor
sub
push
cmp
and
jecxz
in
mov
cmp
inc
lcall
roll
aad
pop
clc
fildll
ds
xchg
jae
lahf
xchg
cli
jnp
pushf
push
push
push
js
pop
aam
adc
fisubl
and
jp
psrlq
data16
jo
jo
jmp
pop
testl
cmpsl
lock
int3
movsl
and
mov
and
into
adc
rcl
xor
mov
pop
jb
sbb
aaa
jmp
and
jb
ret
stos
jo
jecxz
inc
mov
rcll
sar
and
sub
stos
xchg
lock
jns
push
cli
inc
sbb
lds
pop
push
nop
sbb
jle
jae
setbe
mov
lods
cmp
push
and
mov
push
cmpsb
mov
test
and
adc
loope
sub
sti
mov
loopne
in
jp
repz
mov
lods
les
sub
stos
jb
pop
inc
dec
mov
orb
cmp
insl
lret
xor
xchg
movsl
sub
lds
inc
test
aad
ds
pop
cld
adc
or
in
pop
cs
mov
or
mov
adc
jge
adc
movsb
adc
jno
adc
addr16
sbb
icebp
sbb
aaa
inc
xor
add
scas
fstpl
pushl
lret
push
fadd
inc
mov
ljmp
out
subl
jbe
add
inc
sub
loope
or
mov
push
fmull
icebp
popf
or
lret
jg
push
cltd
xchg
lret
push
fs
imul
and
shlb
xchg
out
ret
push
dec
faddp
aam
divl
int3
mov
cmpl
adc
int
mov
fldt
xchg
mov
out
dec
leave
imul
mov
cmp
hlt
mov
stos
inc
scas
dec
loope
sbb
out
iret
pushf
jne
push
mov
lds
incb
into
mov
or
lahf
ss
cmpsb
dec
adc
fsubrs
aas
and
sbb
and
cmp
cli
dec
in
sub
pop
popa
cmpsl
cmp
inc
int3
inc
dec
movl
loop
push
lcall
movsl
loop
lock
aaa
leave
mov
aad
inc
inc
popa
mov
mov
iret
mov
mov
out
out
sbb
movsl
mov
rcl
cmp
cmp
mov
fcompl
push
push
or
mov
pop
adc
or
xchg
and
gs
dec
addr16
dec
js
dec
and
mov
or
xor
popf
adc
or
outsl
push
call
push
push
int
jp
inc
mov
into
inc
sbb
scas
shrb
cld
xor
ljmp
negl
mov
cwtl
sar
cltd
testl
sub
idiv
and
iret
ss
inc
dec
stos
leave
vfrczpd
js
mov
dec
pop
sub
push
fwait
test
adc
sbb
cmc
mov
pop
mov
cld
bound
scas
iret
adc
int
je
add
out
push
sub
inc
rolb
and
jae
aad
xchg
movsb
fstps
or
fwait
and
and
inc
and
fsubs
cmp
xchg
imul
test
scas
pusha
jbe
scas
lock
jbe
dec
lahf
std
fdivrs
cmp
mov
push
xchg
mov
adcb
sub
adc
sub
mov
stc
aas
hlt
imul
std
shll
in
rcr
mov
inc
push
or
xor
jmp
jne
pop
daa
out
int3
mov
xchg
cmpsl
test
jne
push
inc
mov
mov
int
loop
rclb
dec
popa
rcll
adc
insl
pop
xchg
insb
ficomps
shll
fiaddl
mov
fsubrs
and
mov
fcoml
les
mov
mov
cmpsb
stc
jmp
fs
and
lcall
scas
jbe
xchg
or
bound
stc
mov
push
push
sub
in
pop
xchg
cmpsl
sub
int3
in
sub
cmp
call
and
add
pop
test
rorb
jle
add
jmp
xchg
mov
stos
fcomps
pop
inc
cmp
shlb
repnz
push
into
out
fsubl
rorb
insb
lds
jmp
mov
ret
psubusb
les
call
into
rcll
push
push
divb
call
add
adc
mov
movsb
clc
jbe
pop
adc
sub
leave
sub
pushf
iret
dec
mov
repnz
add
xlat
ret
scas
daa
sub
nop
cmp
clc
inc
sub
stc
or
and
jl
mov
and
nop
and
shl
pop
xor
gs
and
and
jp
and
jge
mov
cmpsb
imul
aad
int
fsub
mov
mov
adcb
cmp
cmc
aam
xlat
loope
sbb
add
xchg
pop
rorl
insl
xchg
or
pop
inc
xor
lods
and
pop
repnz
ja
push
cmp
jae
inc
clc
push
gs
rcrl
xchg
inc
loop
ja
pop
out
inc
adc
lock
xchg
jp
lods
lds
jnp
sub
push
adcl
lds
daa
jmp
jmp
dec
and
int3
adc
fs
push
outsl
in
nop
or
movl
mov
cmp
jl
test
ret
stos
push
fdiv
shl
adc
data16
xorl
mov
fcmovnu
cltd
aas
mulb
adc
pop
inc
add
xchg
inc
fildll
jl
or
adc
out
dec
stos
fbld
dec
nop
push
shll
push
add
cli
jnp
mov
inc
jnp
adc
push
je
push
lahf
out
mov
cmp
jle
xor
bound
jne
lds
xor
sub
jecxz
mov
adc
sbb
sbb
xchg
jge
lret
adc
mov
cmpsl
ja
sub
cmp
xchg
rcll
or
stc
hlt
sbb
lds
jle
jne
mov
ds
xor
push
dec
push
jmp
mov
inc
mov
lds
jno
sti
shll
pop
pop
add
test
jnp
int3
sahf
test
leave
ret
cmp
mov
popa
in
adc
jmp
aad
dec
in
jae
cwtl
or
ds
lahf
xchg
lret
testb
xchg
pcmpgtb
repnz
loope
cmp
cmp
repz
rcll
cmpsl
cli
mov
cmp
push
jb
repz
fnsave
jp
pop
or
pop
mov
cmp
out
pusha
mov
dec
movswl
adcb
leave
rcrl
or
jb
adc
jl
hlt
pop
mov
les
sbb
aas
mov
test
lds
push
ret
out
xlat
subl
icebp
data16
or
rcrb
std
mov
mov
fstpt
insl
jmp
mov
aam
add
adc
dec
xchg
sub
stc
fistps
mov
repnz
sbb
xchg
xor
scas
aaa
cmc
inc
dec
inc
mov
inc
dec
pop
cmpsl
iret
xor
lcallw
stc
movsb
hlt
pop
pop
sub
shll
xchg
pushf
popa
out
and
in
and
inc
icebp
push
add
rolb
pusha
cltd
ljmp
sbb
mov
cmpsl
xchg
push
sahf
lahf
dec
add
ds
js
add
es
jge
xor
sahf
outsb
sbb
pop
mov
lret
es
in
push
push
xorb
push
push
movsb
fisubrl
and
dec
xchg
std
inc
jbe
xchg
mov
arpl
int
in
aas
push
lret
test
cs
sub
icebp
outsl
cmpsl
and
sldt
enter
and
or
jge
dec
fistpll
mov
shrb
sub
xchg
jg
add
je
xchg
mov
jo
arpl
push
out
pop
jecxz
fldcw
xlat
mov
cld
shll
pushf
or
mov
stos
out
test
movsb
adc
and
xchg
mov
ret
xchg
js
add
cmp
lcall
dec
mov
jg
inc
inc
scas
aaa
and
popf
cmp
sti
inc
notb
repnz
or
push
push
jmp
outsl
enter
movsb
mov
in
test
cmp
ret
nopl
push
dec
popf
or
push
jno
dec
jg
lretw
jmp
jle
aaa
inc
inc
inc
sti
sbb
jno
inc
ds
pop
and
push
inc
rcr
js
push
xchg
pusha
sub
sbb
lods
xchg
pusha
and
and
push
ds
push
sbb
cwtl
or
xor
outsb
loope
sbb
xor
add
insb
mov
mov
jae
add
andb
push
mov
movsl
int
loopne
push
cld
sbb
dec
and
out
adc
lcall
sbb
fisttps
mov
enter
pop
jg
cli
out
add
cltd
iret
cmp
int3
add
mov
lret
stos
xlat
sqrtps
add
xchg
lret
mov
mov
insl
repnz
notb
in
lods
stc
mov
lret
jle
ret
xchg
jp
sub
dec
xlat
sbb
xor
aad
sahf
fsubs
xchg
jb
xor
jge
sbb
divl
popf
dec
into
pushf
adc
mov
mov
loope
mov
das
inc
push
cmp
cli
test
adc
jecxz
and
stos
mov
adc
lret
call
movb
dec
xchg
shlb
popf
push
stos
mov
adc
dec
test
imul
mov
fsubs
out
sbb
data16
lock
pop
jge
movsl
jecxz
fldl
xchg
rcl
push
mov
cld
and
cwtl
shrb
stos
jns
pop
cld
call
jge
lcall
xor
sbb
out
push
lea
mov
imul
lds
push
mov
mov
adc
imul
mov
in
xchg
into
bound
nop
add
jg
push
repz
pop
call
lods
cwtl
inc
xchg
das
lods
sarl
js
xlat
aaa
pop
or
stos
in
or
rolb
mov
jno
jle
jg
or
xor
and
aam
push
in
ljmp
es
and
pusha
dec
imul
iret
ret
stos
roll
cmp
mov
push
xor
adc
scas
inc
imul
pop
subl
shrl
icebp
dec
sahf
adc
mull
and
xchg
push
push
iret
mov
fdivrl
add
lea
mov
pop
insl
dec
notl
test
mov
fsubrl
js
sahf
daa
es
pop
dec
inc
ds
jle
cmp
cmp
jb
pusha
adc
mov
push
or
dec
jae
pusha
jmp
pop
cmp
jae
jp
mov
push
imul
xor
push
iret
pushf
mov
push
xchg
push
or
scas
add
xchg
imul
ljmp
pushf
ret
leave
icebp
aas
push
fcomp
and
lcall
popa
push
xchg
fstps
jb
fildl
inc
pop
shll
mov
add
inc
test
adc
push
inc
jbe
cmp
sbb
arpl
xchg
inc
shll
add
movb
and
jnp
xchg
xchg
imul
inc
dec
or
sub
cmp
lock
ret
add
in
xchg
mov
mov
ss
pop
iret
fadd
test
sub
cmpsl
repnz
xchg
ret
mov
popa
or
stc
or
mov
test
ss
cmc
and
inc
mov
add
or
xor
cmc
andl
imul
dec
mov
pop
jbe
xchg
xchg
mov
std
push
rcl
cs
test
popf
les
andl
outsb
sti
adc
add
sarl
adc
or
mov
aaa
push
sub
in
fistl
push
pop
jo
mov
js
push
inc
sub
in
cmpsb
or
inc
cmp
add
mov
punpckhdq
dec
das
dec
cmp
dec
pop
or
mov
inc
or
test
pop
push
push
lcall
xchg
shll
int
mov
aas
pushf
mov
pop
std
mov
xchg
mov
or
adc
sbbb
ja
mov
pop
stos
cltd
repnz
jl
std
jmp
push
leave
pop
dec
andw
and
fidivrs
cmpb
jg
aad
inc
loopne
push
in
stos
fsubrl
cld
dec
cmp
mov
xor
clc
adc
add
ja
push
xchg
mov
mov
cmp
cmp
mov
fisubs
fnstenv
xchg
xchg
inc
add
stos
sbb
test
int
aam
and
cmp
mov
cs
loope
mov
xlat
inc
testl
jecxz
hlt
jmp
pop
or
sbb
cmpsl
pop
sub
out
jmp
movsl
add
icebp
push
jp
popf
mov
jb
outsl
xchg
in
pushf
xchg
call
insb
sti
adcl
push
or
call
lds
add
stos
mov
and
jb
add
sub
call
mov
sub
mov
cld
popa
or
movl
cli
je
jb
lahf
mov
inc
fadds
cmp
sahf
cmp
push
xchg
sub
es
or
testb
shll
xchg
pop
loopne
push
inc
cmp
lret
adc
xor
cs
lcall
push
sbb
cmp
jle
adc
fisttpl
popf
dec
push
int3
mov
in
out
imul
orb
movsl
inc
mov
mov
push
adc
nop
sub
dec
push
inc
cwtl
push
call
hlt
inc
cltd
jp
or
mov
loop
mov
out
mov
pop
add
cmp
bound
cmpsb
mov
cld
aaa
mov
arpl
sub
decb
pop
dec
fcmovbe
movsl
adc
cmpb
inc
mov
test
jnp
ljmp
pushf
adc
mov
ja
in
dec
sbb
push
stc
stos
nop
popf
test
or
out
jae
idivb
cltd
shrl
cwtl
sub
jp
cli
cmpsl
add
pop
mov
jae
jne
outsb
xor
mov
ficoms
mov
mov
addl
stc
iret
and
fidivrs
fdivrs
mov
xor
imul
js
push
or
cmp
jp
ret
iret
mov
insl
adc
into
lret
jl
mov
pop
ret
xorl
out
add
lds
ja
mov
cld
sahf
cmp
and
xchg
outsb
psrlw
sub
cmp
mov
mov
and
sbb
nop
js
or
pop
ja
xor
dec
adc
sbb
mov
daa
mov
cmc
arpl
popf
es
dec
into
lcall
mov
js
mov
xchg
adc
shr
in
push
inc
jl
jo
ret
xchg
in
rol
lret
or
call
adcb
dec
mov
jns
xor
outsl
jg
inc
je
idivl
adc
jecxz
inc
in
ja
mov
or
cmp
aaa
jecxz
cmp
int
enter
stos
xor
pop
std
jnp
loop
push
dec
arpl
filds
add
out
inc
sbb
jbe
mov
pushf
test
or
adc
cmp
loop
fnstcw
psubd
shl
pxor
lods
xor
sub
negl
and
cmp
subl
mov
stc
push
mov
insl
lahf
scas
dec
add
imul
into
loope
inc
lcall
shl
xor
es
fstl
es
inc
xchg
cmc
add
jmp
inc
mov
pop
or
adc
mov
jno
inc
cmp
dec
pop
ftst
test
rcrb
adc
into
imul
jmp
aad
ret
test
mov
js
cs
adc
push
dec
inc
dec
sbb
mov
repnz
stc
call
and
sub
adc
xchg
fisttps
call
scas
mov
mov
jge
push
movsl
or
xor
sub
test
adc
push
mov
mov
mov
ret
jp
mov
mov
out
jno
filds
cmp
mov
das
jo
sub
pop
shll
ja
test
in
pop
sub
jbe
push
adc
mov
jae
mov
adc
mov
scas
mov
out
pop
pop
int
dec
jp
rorl
ficomps
xor
mov
test
stos
and
dec
pop
je
scas
mov
dec
icebp
andb
xchg
jmp
ljmp
pop
and
lock
xlat
push
jae
jb
cmpb
lahf
inc
pop
dec
or
setp
in
hlt
mov
das
ret
fiaddl
aaa
out
xchg
inc
xlat
xchg
mov
outsb
rorb
xchg
lock
rol
add
sub
imul
rcr
das
mov
int
dec
jmp
xchg
mov
ss
jbe
mul
add
inc
test
std
out
sbb
cs
dec
inc
decb
push
cld
jb
inc
push
sbb
dec
cmp
dec
dec
test
ljmp
lret
or
ret
add
daa
das
sub
mov
adc
je
cmp
sub
mov
das
orb
clc
mov
cltd
mov
xchg
or
mov
push
jns
and
aam
cmp
push
popa
lds
in
enter
imul
jmp
mov
and
repnz
add
les
pushf
add
cmp
jge
xor
adc
shll
les
xchg
mov
ret
jo
test
addb
mov
sbb
mov
and
aas
lds
or
add
jmp
mov
pop
cwtl
cmc
xor
adc
inc
jae
hlt
jne
int3
test
mov
flds
insb
adc
daa
fstps
subb
popa
int3
fmull
js
jne
sub
xchg
xor
mov
lret
sbb
mov
xor
in
cmp
inc
xchg
inc
xchg
daa
cmp
pop
adc
xor
sti
jmp
mov
repz
fs
inc
loop
pop
notb
or
insl
lock
inc
leave
sub
lods
push
xchg
jae
mov
aad
dec
fcoml
sbb
lods
jg
call
xchg
and
fmuls
adc
decl
and
add
repz
jbe
negb
push
sbb
inc
outsl
aad
loop
ljmp
repz
mov
arpl
mov
fwait
push
adc
scas
jp
cmp
xchg
in
lods
and
inc
mov
adc
stos
push
xchg
add
push
jg
inc
in
mov
lods
fidivrl
setne
xchg
or
inc
aam
mov
add
pushf
rorb
and
cmpsb
idivl
xchg
in
lds
into
inc
xlat
xor
pop
mov
ljmp
outsl
in
xor
push
sbb
inc
pop
cmp
push
and
pop
mov
xchg
outsl
cmpsl
popf
push
iret
jp
xchg
sub
mov
insl
cmc
popf
mov
fcompp
sti
out
push
jg
fst
repnz
fwait
mov
js
lods
rcll
push
shlb
inc
movsb
pop
ds
int
pushf
and
xchg
xchg
xchg
cmp
popa
hlt
mov
add
xor
aad
mov
iret
mov
aam
push
pushf
ret
pusha
mov
dec
jbe
cld
or
sub
ljmp
push
sub
mov
int3
adc
scas
rcrl
out
xorl
dec
fs
mov
mov
shr
int
sbb
sarb
or
aad
nop
adc
or
adc
dec
out
cs
jle
es
pop
jl
cmp
loopne
mov
xor
adc
out
jmp
pop
xchg
and
call
add
dec
pop
cli
xlat
push
loope
xchg
test
sbb
xchg
or
cmc
leave
mov
pop
movsb
sub
xchg
jp
lret
sahf
cmp
stos
sub
xor
jb
call
adc
fwait
ret
inc
jo
add
push
fsubp
mov
enter
add
test
fsubl
pop
add
lods
jmp
das
mov
ret
adc
inc
push
mov
cltd
sub
and
cmpb
negb
or
imull
ds
fwait
jmp
mov
div
sub
repz
stc
mov
jne
lahf
jne
pop
jno
or
lret
mov
cmp
inc
ficomps
push
dec
and
xchg
stos
das
fisttpl
push
jae
in
out
pushf
icebp
mov
ss
mov
lcall
cs
sahf
sub
shr
push
cltd
pop
xchg
test
fwait
add
adc
mov
push
mov
xchg
cli
iret
in
dec
mov
popf
inc
js
xchg
cld
jge
dec
arpl
dec
add
xlat
jg
xor
clc
mov
or
xlat
icebp
ljmp
pop
lret
in
addr16
sahf
aas
xchg
sbb
dec
jle
push
jnp
fists
jl
jo
cmp
xchg
mov
adc
outsl
mov
fcomps
js
xorb
divl
fnstenv
xlat
xor
hlt
loopne
mov
mov
and
mov
test
add
loop
mov
fisubs
push
fwait
adcb
sbb
iret
cli
stos
mov
xor
daa
sub
js
jmp
add
mov
ja
filds
out
pop
sti
jmp
adc
incb
push
out
in
push
daa
lahf
push
cmp
adc
daa
mov
ficompl
call
icebp
cmp
mov
aaa
cmp
lds
pop
xor
cld
mulb
flds
stc
loope
lods
das
fwait
divb
std
rcl
mov
addr16
mov
incb
lret
fisttpl
inc
shll
in
stc
test
add
mov
xor
add
add
outsb
loop
outsl
push
mov
push
or
jns
mov
pop
bound
ret
data16
lock
sub
fs
mov
test
dec
int3
in
gs
andb
ror
leave
scas
aas
push
xchg
gs
xorl
repz
ja
loop
xchg
and
loop
lret
cmc
add
inc
cmc
rcll
pop
iret
mov
cmp
enter
push
out
into
pop
jle
mov
cvtdq2ps
mov
hlt
jae
test
xchg
addr16
sub
adc
xchg
insl
xchg
in
ret
pop
and
mov
dec
xor
inc
out
cmc
ficompl
std
fdivrs
stc
or
scas
push
jno
mov
pop
loope
test
mov
cmp
call
xchg
mov
mov
add
mov
mov
test
int3
mov
pop
lods
jp
icebp
adc
bnd
fnsave
cmpsl
jbe
add
push
jae
mov
add
mov
sub
mov
dec
lock
pop
mov
mov
mov
daa
sub
cmp
adc
cmp
inc
mov
lret
xor
movsb
pop
xor
ret
xchg
xchg
lds
or
xchg
pop
les
imul
add
aad
lds
dec
fcoml
test
loopne
xchg
cltd
or
mov
inc
icebp
or
daa
jl
push
pop
add
dec
pusha
mull
in
xchg
lods
mov
movsl
lock
sub
bound
or
or
xor
es
sti
mov
mov
repnz
ljmp
add
dec
or
adc
xor
xor
pop
cld
inc
arpl
mov
sar
adcb
cmp
dec
jne
insb
mov
jno
sub
push
sub
shlb
rcll
imull
or
movsl
jle
mov
lea
cwtl
lret
mulb
jmp
aas
sub
mov
imul
add
and
cs
jne
cmp
daa
rcrb
sahf
jnp
adc
and
push
fsubrl
pop
aad
or
sub
ret
out
scas
pop
jne
push
enter
jl
pop
inc
test
dec
push
imul
shll
ja
testl
aas
stc
ljmp
movsl
ja
mov
mov
imulb
cli
daa
in
push
fsubs
jns
or
xchg
loope
cmp
mov
shrl
adc
scas
stc
jno
mov
repz
xchg
pop
pushf
test
push
lea
push
fists
mulb
fs
imul
mov
mov
jg
rol
jecxz
xor
cmc
push
adc
sbb
aam
push
cld
jle
iret
out
mov
out
xlat
jb
out
cmp
es
adc
dec
mov
leave
repnz
jl
test
mov
je
jle
xor
icebp
inc
fsubs
cmp
add
data16
mov
dec
sbb
mov
je
add
cmp
js
xlat
sbb
mov
into
cmc
push
jo
sub
in
mov
fnstenv
xchg
inc
arpl
mov
std
or
xchg
movsl
test
dec
cld
mov
adc
stos
sbb
sar
mov
mov
scas
insl
cmp
fcmovnu
test
push
lret
add
jle
in
outsb
orb
mov
mov
jg
ret
cmp
inc
es
je
add
sub
xor
pop
pop
mov
pop
push
fidivl
int3
daa
ret
test
xor
aas
push
nop
addr16
jne
xchg
and
lock
iret
and
add
mov
imul
pop
pushf
add
aam
mov
in
inc
push
sub
mov
aas
inc
sahf
sarb
xor
imul
jl
ss
dec
fcomi
pop
pop
jbe
fbstp
es
insl
cmp
inc
or
push
sbb
lahf
outsb
dec
out
mov
insb
int
adc
lret
out
cld
xchg
adc
add
hlt
lods
ret
adc
imul
movsl
test
orb
xchg
divb
lret
mov
fsubrl
pusha
ja
mov
iret
lret
andb
dec
aas
mov
fnstsw
imul
xor
fbstp
call
inc
loop
pop
es
and
dec
imul
jns
push
adc
sub
jb
js
dec
mov
mov
es
push
push
repnz
jnp
xchg
dec
cmp
mov
dec
insl
subb
cmp
adc
lock
pop
out
pushf
mov
pop
loop
and
pop
ss
popa
xor
mov
or
jmp
mov
std
push
cwtl
xchg
popa
mov
insl
test
lock
ret
ret
mov
jge
scas
out
jo
add
leave
lds
push
cmp
addr16
aas
add
mov
in
out
xchg
js
adc
daa
imul
movsb
push
cmpsb
pop
push
inc
or
jg
mov
push
imul
push
mov
std
movsb
or
int3
outsb
xlat
pop
mov
dec
sub
sbb
xlat
cltd
in
push
pusha
adc
pop
or
pop
pop
lahf
mov
add
push
fistl
pop
sbb
out
adc
ds
cltd
nop
out
mov
les
adc
inc
sti
inc
xor
cmp
loopne
mov
mov
mov
mov
sub
mov
xchg
aaa
fisttps
lock
xor
pop
xor
je
push
imul
jl
testl
mov
js
and
cmp
jmp
add
movsl
cmp
pop
sbb
dec
and
test
pop
in
sbb
xchg
xor
xchg
cmpsb
ret
sub
js
adc
cmp
pop
fwait
stos
sub
jmp
in
push
dec
and
push
clc
lret
sub
enter
jge
mov
push
lcall
leave
sub
int3
sahf
mov
or
jne
push
fs
gs
xchg
or
adc
or
pop
and
int
mov
decb
inc
lcall
jecxz
fsts
mov
xor
sbb
fstpl
test
call
jne
ss
fwait
loop
dec
into
lcall
pop
jo
cli
popf
pushf
lret
shrl
popf
cli
frstor
sub
dec
loopne
lret
dec
mov
pop
rclb
push
insb
add
xchg
arpl
add
jmp
mov
push
data16
xor
pop
out
rclb
insl
sbb
lods
cmpsb
push
mov
pop
fisttpl
push
add
imull
sub
stos
sbbl
push
fstl
jo
push
sbb
out
mov
xchg
push
loope
repnz
pop
popf
cltd
xchg
push
adc
cli
movsb
inc
incl
jns
divb
es
out
fisubrl
stos
pusha
mov
xor
mov
lahf
addb
or
pop
rcrb
xor
fs
dec
je
adc
ljmp
leave
add
popa
mov
push
fsubs
sub
mov
in
fptan
jle
xchg
fucom
lds
sbb
pop
in
jecxz
mov
add
inc
test
out
nop
mov
pusha
jo
out
sbb
push
out
xchg
bound
xchg
call
dec
shl
sbb
js
xchg
mov
mov
insl
adc
pop
loop
sub
xchg
mov
xchg
outsb
sbb
loope
cmp
mov
rcrb
call
in
mov
test
addr16
cmp
sbb
aas
cmc
pop
sub
cmp
into
xchg
jp
mov
cmp
clc
and
mov
xchg
pop
inc
adc
mov
lret
lahf
das
pop
and
shrl
sbb
inc
sbb
adc
pop
mov
stc
jecxz
jecxz
insb
in
lcall
jge
aaa
fnstenv
xor
cmp
mov
pop
inc
fdivrp
dec
pop
xchg
mov
add
cld
mov
push
mov
pop
int3
push
xchg
cmc
sbb
adcl
ffreep
sub
xchg
ds
imul
mov
cld
js
xchg
push
les
xchg
call
xor
adc
push
add
fbstp
mov
jp
cwtl
inc
jae
pop
mov
jb
ds
mov
int3
dec
cmp
and
xchg
shl
jb
sub
mov
lcall
ficompl
hlt
testb
stc
or
lds
or
sbb
mov
mov
or
mov
fcoms
add
add
pop
xchg
sub
mov
add
lret
les
icebp
push
mov
mov
sub
out
xor
movsl
ja
notl
loop
push
mov
sar
xor
inc
lods
std
cwtl
outsb
push
fwait
adc
push
jo
push
sbb
adcb
mov
cmp
jnp
cmp
aas
out
call
mov
sub
scas
adc
mov
ret
pop
inc
ret
lret
out
sub
push
dec
or
xchg
enter
fucomp
nop
cmp
sub
int3
aas
adc
stc
push
cmp
jp
jb
out
push
xor
xchg
das
dec
and
sti
out
in
xor
int
xor
inc
push
mov
inc
fwait
adc
jg
add
lods
cmp
mov
jge
test
ret
add
stos
out
sub
sbb
imul
cmpb
pop
pop
xchg
jecxz
mov
popa
loop
test
add
aad
dec
enter
and
inc
jns
ja
cmp
inc
add
fimull
js
popf
cmp
sbb
add
lock
lock
fldpi
mov
mov
dec
dec
cltd
xchg
push
sbb
add
push
je
enter
repz
pop
jo
sbb
inc
mov
mov
inc
pop
scas
sub
lret
sbb
fiaddl
adc
stos
leave
insb
or
stos
rcrl
dec
fsubrl
xor
mov
insl
cli
fstpl
mov
inc
xchg
pop
xor
mov
in
adcl
outsb
add
mov
outsb
cmpsb
fistpl
or
add
aaa
mov
pop
out
push
push
push
pop
dec
mov
dec
jecxz
cmp
cmp
fimuls
push
xchg
addr16
jge
call
insb
push
sbb
jecxz
mov
cld
xchg
cwtl
insb
push
lock
and
jle
pop
sub
fcomp
jl
stc
mov
clc
and
push
imul
jmp
sbb
test
pop
aad
xor
lods
cmpsb
mov
sbb
popf
sbb
pusha
adc
gs
mov
jecxz
loope
jl
lock
push
sub
imul
jmp
insb
mov
outsb
xor
sahf
mov
xor
or
mov
jne
mov
adc
int
cltd
adc
loopne
fldcw
or
cmpsl
ret
jge
pop
je
cli
push
adc
pop
nop
pop
cmp
mov
sbb
aas
push
sti
test
cmp
jecxz
mov
push
fists
inc
or
jg
sub
rcll
cs
shrb
push
fisttpll
mov
arpl
stos
mov
daa
cmpsb
jle
mov
in
das
push
push
jbe
mov
mov
push
jge
xor
ja
xchg
leave
js
or
test
add
ja
cli
push
jb
dec
add
mov
out
ds
or
aam
xor
stos
push
mov
arpl
stos
push
stc
xlat
adc
cltd
sbb
cmpsl
inc
je
mov
imul
ja
mov
mov
cmc
call
push
mov
adc
and
outsb
jge
xor
stc
xorl
pop
lds
xor
out
add
lahf
sub
test
sub
mov
addr16
loop
mov
outsb
push
sbb
push
sub
dec
sbb
enter
mov
cmp
push
loope
in
cwtl
sub
mov
lcall
test
xchg
aam
cmp
adcl
leave
inc
and
mov
mov
iret
push
jmp
stos
and
aam
in
push
fwait
test
cmc
roll
stc
lcall
push
pop
outsl
pop
ret
inc
lahf
and
loope
or
inc
xor
lds
jo
loope
xor
cmc
in
and
loope
into
sbb
imull
or
cmp
ljmp
or
xchg
arpl
lret
loop
test
push
cmc
int3
stos
notl
mov
jmp
xor
ja
add
sub
jle,pt
jne
test
addb
fadd
mov
cs
int
lretw
mov
dec
ror
ljmp
adc
or
mov
arpl
add
or
pop
shlb
mov
ret
xor
jecxz
or
adc
mov
clc
jae
imul
push
movnti
lock
je
sbb
push
sarb
movb
xlat
mov
push
ds
mov
cmp
inc
inc
push
xchg
sarl
or
ja
aas
add
mov
add
or
pop
shrb
pop
mov
inc
xchg
xchg
add
scas
push
jae
insl
je
test
scas
in
mov
pop
imul
popa
outsb
mov
daa
mov
cli
jno
cmp
aam
bound
enter
stos
lahf
icebp
jo
loopne
inc
push
pusha
sbb
inc
es
mov
jo
cwtl
ljmp
mov
mov
add
pop
bswap
xchg
and
lret
stc
cmp
iret
and
dec
out
push
lcall
mov
sahf
stos
je
and
arpl
fnstsw
and
das
loope
push
sub
mov
pop
push
inc
out
rorl
mov
cmp
je
shr
rol
xchg
insl
adc
push
pusha
jno
rcpps
pop
pop
and
test
adc
inc
int
cmc
outsl
das
jecxz
xor
cltd
jge
out
dec
and
roll
mov
push
sub
pop
loopne
sub
xchg
lret
dec
idivb
into
dec
fcoml
repz
push
std
ljmp
inc
ja
sbb
mov
and
imull
in
sub
push
cmp
dec
xchg
sub
jns
clc
and
popf
cmove
cmp
je
popa
xor
dec
ficomps
or
push
rcr
cmp
push
fstpl
add
inc
push
data16
jp
xor
and
lea
xor
or
lret
mov
add
fldcw
das
aad
add
add
icebp
xchg
decl
xor
ss
ds
adc
mov
and
testb
push
es
mov
pop
jb
lret
or
mov
sub
lock
or
arpl
ficoms
stos
repz
cli
mov
push
neg
fwait
clc
iret
push
test
iret
fcoms
jns
les
sti
xchg
les
fcmovu
mov
mov
jns
mov
mov
mov
js
nop
inc
sub
fstpl
outsb
mov
push
stos
cwtl
popa
pop
pusha
dec
and
cmp
xlat
inc
or
pop
sbb
das
jg
fstpl
pop
jne
xchg
xchg
xor
loopne
cmc
sub
adc
mov
mov
pop
into
push
sub
and
sbb
lret
lret
xlat
clc
ljmp
hlt
popa
and
and
icebp
scas
mov
mov
dec
dec
or
mov
cld
sbb
and
mov
push
inc
and
jmp
test
aaa
mov
fisttps
cmp
xor
sbb
sub
mov
pop
xor
and
dec
xchg
stc
popa
inc
pop
rcrl
shlb
ljmp
fldl
incl
xlat
setb
std
jnp
xchg
addr16
dec
call
popa
enter
jge
sbbl
pop
int
aas
lcall
cmp
jns
cmp
mov
sbb
cmp
jp
int
add
lods
fs
into
jecxz
bnd
inc
sbbb
mov
jl
insb
test
xlat
adc
jg
sub
fsubrs
sbb
loope
inc
jo
out
movsb
jecxz
mov
push
jo
push
or
mov
push
ljmp
mov
scas
pop
aad
cmpsl
gs
lahf
ljmp
imul
int
cmp
fcoms
or
jnp
mov
adc
fmull
sbbl
in
xchg
adc
data16
add
cmp
add
xchg
sti
sbb
mov
and
dec
sahf
adc
jno
inc
inc
mov
mov
stos
jecxz
insb
aad
insl
je
sbb
xchg
cmpsb
std
bound
in
cmpl
push
mov
cs
sbb
lods
mov
call
xchg
mov
jmp
push
dec
sbb
xor
xor
jecxz
loop
sar
insl
mov
mov
mov
mov
mov
xlat
pop
adc
fadds
lods
loopne
cs
pop
jp
mov
xor
inc
js
xchg
repnz
jae
divl
ljmp
push
sarb
mov
inc
inc
fsubl
cltd
shrl
push
jl
je
out
ljmp
mov
xchg
int
jge
cmpsl
pop
sub
jnp
bound
cmc
int3
fisttpl
push
mov
ds
xchg
xchg
jmp
inc
cmp
insb
lcall
test
inc
sti
data16
push
pop
pushf
pop
and
dec
mov
sahf
inc
clc
dec
shrb
mov
push
outsb
xchg
into
cmp
cmp
sti
cli
jno
sbb
xchg
and
mov
ret
stos
ror
loop
xchg
lods
xor
inc
jo
lods
div
test
ret
leave
test
cmp
xorps
jae
xchg
movsb
dec
mov
and
ret
repz
aas
movsl
push
popf
call
pop
mov
imul
cmp
mov
repnz
or
ljmp
sub
out
xor
inc
sbb
cmpsl
lea
push
lret
call
loop
and
lds
imul
xchg
mov
cld
sarl
imul
push
clc
cld
sbb
ljmp
sub
xchg
or
insl
je
sti
icebp
stos
ret
shlb
fwait
dec
inc
mov
or
pop
mov
mov
popl
test
lds
xchg
jb
mov
loop
push
or
les
pop
out
jp
lea
cmp
jne
sub
sti
out
frstpm(287
cmpl
xchg
mov
mov
daa
xchg
ret
out
mov
movsl
mov
into
insl
push
das
repnz
push
push
lds
cmovnp
jns
in
out
sub
push
int3
adc
xchg
cmc
mov
aad
stc
mov
decb
xchg
popf
or
ds
and
and
xor
sti
je
push
xor
or
or
xor
sbb
mov
adc
push
leave
sub
inc
fsts
outsl
enter
push
inc
xchg
dec
imul
or
xor
lock
cmp
mov
push
cmc
xchg
jne
jle
and
in
jbe
sbb
jmp
icebp
cwtl
xor
sbb
inc
stos
push
mov
mov
pop
inc
in
mov
push
and
xchg
pop
out
loope
mov
mov
inc
jge
repz
adc
pop
and
cmpps
xchg
adc
xor
shlb
repnz
lock
xchg
xchg
je
or
nop
jne
mov
cltd
popa
xchg
mov
iret
iret
adc
adc
adc
jle
lcall
dec
mov
mov
jbe
faddl
ss
je
sub
outsb
adc
rolb
dec
inc
xlat
sub
stc
push
cli
fsub
cltd
mov
sub
gs
test
mov
xchg
mov
mov
andl
jg
pop
add
jo
adc
outsb
mov
es
cltd
movsl
inc
xlat
nopl
adcb
int
test
sbb
and
es
lds
and
aam
addr16
aad
inc
bnd
mov
jle
mov
popf
mov
loop
stos
mov
dec
divb
and
push
pop
pop
int3
dec
decb
push
shlb
scas
xchg
out
inc
pop
or
inc
fldcw
out
jno
add
mov
xchg
addr16
mov
mov
add
stc
dec
popa
mov
xor
push
scas
xlat
std
jno
js
rolb
xchg
lea
sub
insb
mov
sub
jne
push
sub
cmp
push
push
dec
aad
cmc
sbb
out
sbb
shrb
add
add
enter
jo
adc
jl
or
mov
inc
and
repnz
pop
iret
in
push
cld
leave
sub
in
loope
mov
mov
pop
pop
push
and
ret
xchg
push
ficompl
push
mov
dec
mov
fs
push
arpl
loope
mov
fbld
icebp
inc
fwait
enter
hlt
mov
mov
pushf
mov
popa
cmp
call
insb
pop
ja
icebp
adc
inc
in
or
ljmp
cmp
cmp
mov
mov
fldenv
pop
jp
jmp
stos
dec
cmp
xor
inc
arpl
inc
cmp
cs
gs
inc
daa
cmp
scas
and
loopne
xor
in
lods
xchg
mov
loop
sahf
jb
pop
jnp
xchg
ds
arpl
jno
into
fidivrl
mov
xchg
out
mov
mov
pop
lret
mov
adc
loopne
jg
jno
pop
dec
loop
push
mov
or
in
insb
cltd
pushf
push
and
and
dec
popa
jmp
aad
or
aad
sub
dec
inc
dec
push
sbbl
add
mov
xchg
sbb
inc
iret
pop
add
ljmp
sbb
enter
aam
sti
sahf
in
and
movsb
icebp
mov
dec
in
mov
sub
cli
lret
out
js
sbb
or
sub
enter
jmp
aaa
pop
push
jle
rcrb
mov
xchg
pop
mov
nop
clc
cmp
push
and
xorl
xlat
and
fsubl
inc
or
lahf
push
push
cwtl
or
jecxz
rclb
xor
mov
push
jp
shl
int3
and
xchg
sbb
in
jnp
xor
aas
mov
push
mov
xchg
inc
mov
xor
pusha
mov
mov
inc
mov
ljmp
jge
or
mov
ret
or
leave
insb
dec
fldt
cmp
insl
jle
sbb
sbb
pop
outsl
pusha
pop
jle
cmp
cmp
dec
xor
rolb
push
adc
adc
jns
sahf
arpl
lret
inc
scas
push
int3
pusha
xorb
mov
bound
ljmp
test
lahf
notb
mov
inc
mov
mov
adc
inc
mov
dec
mov
inc
xchg
dec
mov
and
sub
mov
or
cmp
loopne
add
mov
out
sbbl
adc
and
clc
lret
and
daa
out
dec
imul
add
xor
mov
pop
aam
rclb
mov
pusha
inc
repz
in
sbb
mov
add
test
daa
insb
inc
xor
fimuls
xlat
je
jne
pop
fucom
sub
inc
cmc
cmpsb
mov
out
or
mov
pop
pop
insl
je
in
adc
out
mov
and
lods
nop
shrb
add
adc
lahf
sbb
cmc
stc
movl
lcall
sbb
gs
mov
stos
scas
mulb
mov
xchg
mov
dec
mov
xchg
rcll
lods
add
stos
in
lea
or
and
mov
mov
leave
or
xlat
ljmp
jl
sub
sbb
xchg
repnz
fucomip
out
es
mov
pop
mov
dec
div
xchg
in
mov
mov
and
fs
xchg
adc
push
sti
adc
dec
mov
mov
push
and
lock
aaa
mov
dec
pop
aaa
roll
jnp
fnstcw
mov
and
stos
sub
xchg
xchg
lret
daa
mov
out
fdivrl
sbb
jo
das
icebp
mulb
fwait
jg
loop
jae
imul
nop
pop
int3
pop
lods
and
jmp
out
add
mov
xchg
repz
addr16
push
and
int
stos
aam
fcompl
cmpsl
sub
scas
pusha
mov
xlat
inc
lock
xor
stc
pop
adc
hlt
inc
jp
repnz
lret
xor
imul
ja
jnp
push
arpl
jmp
mov
add
push
mov
cs
mov
adc
dec
or
shr
mov
xor
test
xor
xchg
jno
fmulp
iret
les
or
dec
jge
mov
mov
ret
jmp
cli
push
cmc
or
jmp
inc
jne
push
pop
repnz
imul
mov
push
jae
add
out
xorb
lock
xchg
pop
mov
ficomps
cmp
sarl
leave
and
inc
es
bswap
xchg
aas
lea
scas
xchg
pop
fisttps
inc
neg
sbb
out
cmp
nop
jle
jnp
sub
xchg
inc
xchg
mov
xorb
push
inc
and
dec
mov
jp
mov
xchg
subl
addr16
daa
les
pop
xor
mov
mull
dec
dec
in
fisttps
or
test
sbb
int
pop
fldl2t
je
fisttpll
sub
mull
shrl
data16
addr16
stos
and
cmp
daa
jmp
adc
pusha
mov
ret
push
mov
pop
std
arpl
outsb
addr16
xchg
iret
or
sub
jo
mov
sti
dec
mov
stos
insl
mov
or
enter
sub
sti
dec
inc
mov
jno
pop
adc
xchg
ret
jle
push
mov
insl
add
lahf
pop
movsb
adc
sub
cmp
cmpsl
cltd
push
jns
or
out
jb
cmp
push
mov
test
cmpb
and
es
test
inc
mov
insb
push
cli
cmpsl
sub
inc
add
push
popa
inc
and
lcall
lret
push
lahf
daa
sahf
or
mov
and
fisubs
xor
sub
pop
push
enter
dec
imul
stos
xchg
pop
xor
xor
jae
inc
inc
in
ljmp
or
lcall
in
es
xchg
cltd
inc
jp
test
or
xchg
popa
cmp
out
add
adc
ret
xchg
sbb
cmp
sbb
and
push
adc
sub
pop
xchg
lea
je
lahf
inc
xchg
adc
sub
in
mov
aaa
outsl
stos
xchg
push
sbb
add
jecxz
iret
add
inc
mov
adc
dec
mov
in
sbb
and
lea
xor
testb
das
dec
repz
fimull
aaa
cwtl
in
mov
ret
xorl
adc
inc
fimull
lods
shr
repz
inc
inc
mov
movsb
ret
ss
dec
popa
imull
ret
pop
dec
loop
lret
adc
adc
out
xchg
and
or
bound
push
xor
add
jb
mov
loope
test
shlb
inc
pop
cld
push
jne
or
rcrb
bound
mov
in
cmc
pop
jecxz
or
addr16
shll
mov
add
imul
lock
mov
xlat
fistpll
sbb
cmc
shr
sbb
cli
push
inc
cmp
faddl
mov
insb
adc
xchg
xor
inc
movsb
sarl
lcall
jne
notl
dec
sbb
cmpb
jmp
movsb
outsb
mov
and
cltd
mov
dec
push
test
pop
hlt
xchg
pop
dec
lcall
jecxz
cmp
out
jl
clc
and
stc
dec
call
mov
test
clc
or
iret
les
fcomp
nop
jne,pt
jp
ja
cmpsl
dec
ds
std
xlat
or
std
and
loop
mov
cmp
jbe
dec
push
das
xchg
xchg
add
xor
and
mov
jae
xchg
hlt
mov
loope
stos
pop
and
dec
sbb
xchg
cmpsl
lods
movsb
stos
fldl
rcrl
fs
mov
out
cmp
stos
sbb
pop
push
inc
sub
imul
or
jo
or
pop
inc
frstor
jns
mov
xor
stc
cmp
int
or
call
xlat
cwtl
cmp
jae
cs
mov
fildl
aaa
scas
sub
scas
in
inc
or
and
lods
xor
inc
or
test
add
add
scas
dec
insb
data16
sahf
sbb
rorb
or
lock
inc
mov
imul
inc
seta
adc
add
negl
jp
js
inc
jl
and
es
dec
mov
jnp
xchg
pop
or
mov
dec
jp
xor
jmp
pop
push
int
fistpll
pop
adc
push
mov
add
add
jl
dec
inc
cli
imul
test
add
aaa
popf
jns
inc
cmc
push
jae
inc
mov
pop
repnz
push
inc
adc
sub
mov
into
jmp
dec
pop
ljmp
push
and
push
push
ljmp
shll
popf
lods
xchg
dec
or
sbb
shrl
test
shrl
mov
lods
dec
in
mov
mov
cmp
call
push
inc
inc
les
cmp
sbb
ror
jns
std
push
jae
mov
ja
add
lahf
cs
inc
rcl
push
into
push
fistl
mov
xor
call
inc
ss
jno
cmp
cltd
lea
mov
jno
jbe
mov
cmpsl
adc
xchg
arpl
mov
cli
pop
mov
cwtl
inc
push
pop
jecxz
mov
sub
nop
pushf
repnz
aas
sub
movsl
inc
movsb
loope
pop
mov
lods
mov
je,pn
fwait
loope
rclb
divb
jp
cmp
mov
test
out
pop
sub
lret
mov
jle
insl
jp
push
mov
or
xor
add
cs
or
lcall
and
imul
adc
subb
xchg
mov
push
dec
ret
dec
xchg
lea
xchg
inc
pop
inc
sub
aas
and
dec
cli
dec
adc
fcmovbe
add
xor
cmpsl
in
fadd
cld
sub
inc
int
enter
jne
stos
fadds
int
adc
sbb
mov
pusha
fidivrl
cli
jb
xor
mov
xchg
inc
xor
fmuls
into
add
imul
and
dec
cld
pop
pop
scas
dec
sub
imul
daa
lret
pop
sbb
loopne
out
mov
test
mov
jle
pmulhuw
lock
jmp
dec
jns
hlt
stos
loope
imul
outsb
fisttps
enter
and
xchg
push
dec
pushf
outsb
in
sub
pop
push
sbb
sbb
mov
add
jne
into
mov
sub
mov
pop
das
jp
add
dec
icebp
mov
daa
aad
mov
add
dec
movsb
movsl
shll
cmpb
push
sbb
xchg
mov
push
pop
call
jle
ror
add
das
stos
pop
sbb
adc
insb
push
add
fistpll
idivl
adc
scas
mov
lock
fidivrl
in
fistps
xor
data16
in
sti
xchg
xchg
mov
adc
subl
adc
imul
xor
and
xchg
cwtl
mov
daa
inc
mov
lret
das
sub
das
data16
movsl
fildll
imul
and
xor
add
jg
jb
xchg
imul
jg
cmpb
popf
jnp
in
sub
icebp
dec
push
inc
mov
movsb
mov
inc
test
push
outsb
fwait
leave
lods
in
shrl
inc
inc
inc
xor
pop
pop
sarl
js
mov
loope
mov
lret
andl
out
or
insl
ror
inc
ss
lds
inc
push
mov
inc
cltd
jmp
lea
ds
clc
fnstenv
fcomip
adc
das
sub
xor
jge
hlt
add
or
cmp
movsb
mov
adc
dec
pop
xchg
sub
cmp
int
dec
mov
push
adc
and
xor
xor
idiv
je
mov
mov
sbb
mov
jnp
lret
xchg
mov
sub
jae
add
pop
test
adc
fisubs
adc
xchg
lds
or
test
jecxz
mov
push
dec
sub
push
pop
repz
inc
lcall
and
rorl
mov
popf
push
rol
loop
add
movsl
add
mov
fsubrp
mov
sbb
mov
sti
cmp
jp
pusha
cmp
rcrl
movsb
jb
xlat
aad
in
jmp
xchg
icebp
faddl
xchg
xlat
fiaddl
jl
adcb
in
mov
lods
imul
push
les
pop
xchg
pop
xor
mov
sub
cmc
and
lods
pop
cmp
mov
inc
in
mov
out
cwtl
or
insb
movsl
mov
inc
fbld
xchg
fwait
mov
imul
push
ret
gs
mov
bound
movsl
ja
push
out
or
inc
enter
add
mov
add
fnstsw
fiaddl
sub
xor
mov
cltd
lods
test
cmpsl
push
es
push
shl
and
add
in
cs
and
subb
cmp
pop
lret
add
shll
or
mov
push
dec
lock
icebp
scas
popf
test
sbb
jbe
jbe
pushf
push
cmp
mov
xchg
add
cwtl
imul
pop
stc
mov
cli
mov
aam
dec
stos
cmp
loope
flds
xchg
cmp
adcb
push
pop
seto
setae
pop
pushl
pop
pop
sub
imull
sub
std
jmp
sti
lahf
jmp
fdivrs
mov
ret
loop
and
mov
nop
xchg
into
mov
xor
sbb
pop
sahf
mov
outsb
jle
jge
inc
mov
repnz
test
shl
mov
adc
push
fbld
call
out
sar
push
cmp
mov
mov
fstp
inc
lds
cs
loope
xor
mov
cltd
push
in
xlat
xlat
dec
dec
lods
cltd
arpl
unpcklps
mov
das
xorl
sbb
add
andb
addr16
jns
add
xchg
lods
mov
and
loopne
cmpsl
out
shll
bound
push
mov
mov
loopne
scas
aam
dec
outsb
push
dec
jb
int3
xlat
jo
jl
cmp
ret
data16
clc
lock
sbb
mov
adc
in
test
xor
and
pop
jo
lret
dec
clc
out
add
rorb
shll
fwait
mov
inc
and
jae
add
iret
push
dec
xor
xor
pop
or
pop
stos
loope
cmp
in
mov
fwait
jo
lahf
mov
push
popf
sub
or
scas
inc
sahf
and
roll
dec
movsl
inc
jae
inc
xchg
hlt
sbb
enter
push
jae
in
mov
adc
add
test
cmp
mov
mov
addb
shlb
jno
mov
adc
ret
pop
jnp
loope
ja
cmp
lcall
movsl
xor
mov
dec
in
jmp
jne
xor
cltd
push
test
inc
mov
lahf
fs
stc
test
push
leave
gs
outsl
mov
addr16
mov
iret
mov
jns
pop
mov
lahf
jno
aad
dec
pushf
cwtl
mov
shr
jbe
ds
fs
pop
inc
mov
rclb
sbb
jp
aaa
add
leave
bound
xlat
loope
sbb
popa
mov
jmp
out
sub
cmp
pop
xor
mov
mov
xchg
and
js
add
imul
rclb
dec
xchg
jecxz
xchg
pop
add
leave
sub
ljmp
push
das
mov
stos
sub
mov
mov
jle
xlat
mov
inc
scas
bound
jnp
push
insb
jno
and
mov
fisttps
push
fadds
add
push
mov
cwtl
inc
xchg
aad
jbe
jge
or
scas
fwait
lret
mov
dec
mov
mov
sbb
ss
fistps
into
scas
mov
dec
lods
jno
xchg
sbb
sub
pop
test
jmp
insb
inc
xorb
sbb
out
test
rcl
lret
and
jle
lret
xchg
loopne
jp
pop
subb
dec
aam
test
cmp
pop
xchg
sbb
xor
test
mov
inc
iret
movsb
inc
loope
icebp
push
jb
push
adcb
lea
inc
adc
js
mov
push
xor
xchg
cmc
sbb
pop
sarb
nop
dec
jmp
sub
push
xchg
sub
std
int
clc
dec
xor
jp
push
cli
pop
mov
adc
sub
or
loope
pop
push
pop
xchg
add
leave
in
and
jge
mov
add
push
dec
fwait
mov
xor
adc
lret
push
inc
add
push
andl
mov
mov
jg
and
lret
sahf
dec
mov
and
cli
sbb
sbb
idivl
dec
push
fsubl
cmp
push
and
jecxz
fnsave
scas
ret
fwait
sti
xchg
sub
clc
pop
enter
sub
inc
push
js
daa
mov
add
sbb
jp
mov
ja
mov
mov
jb
cmpsb
or
hlt
sub
decl
lock
es
mov
xchg
push
push
fs
aad
lret
insb
and
imul
adc
cmpsb
add
mov
push
mov
in
xor
adc
leave
ret
cmp
idivb
cmpsb
in
jl
xor
and
test
or
or
push
loope
sbb
pop
orl
sub
mov
push
in
push
mov
lods
ds
xchg
sub
pop
ja
rolb
add
popf
bts
daa
rcr
and
dec
cmp
imul
mov
mov
ds
mov
cmp
bound
lahf
loop
testl
cmp
das
sbbb
jmp
push
mov
or
sbb
adc
sti
lcall
scas
sbb
pushf
pop
ss
cmpsb
mov
neg
out
fcmovb
push
mov
int
mov
aad
mov
xor
mov
or
mov
stos
outsl
adc
nop
add
sbb
mov
movsl
out
out
or
push
sub
jae
out
xchg
pop
push
mov
out
inc
or
push
cli
lods
and
idivb
and
dec
mov
les
inc
pop
mov
sub
xchg
lods
cwtl
jg
adcl
stos
xor
inc
dec
cmpsl
cli
das
adc
loope
xchg
ljmp
add
mov
testl
and
or
sahf
fbstp
jmp
pop
fwait
or
dec
outsb
xchg
pop
lret
adc
jb
and
roll
xor
jmp
pop
and
adc
lahf
push
jnp
mov
push
in
mov
jno
push
dec
xchg
jmp
imul
sbb
pusha
push
jnp
mov
fcmovnb
mov
pop
add
sbb
sbb
cvttps2pi
test
dec
push
inc
adc
mov
pop
aaa
push
mov
call
das
test
fcomp
jp,pn
jge
dec
adc
fisubrs
arpl
mov
fmuls
rcrl
pusha
adc
mov
dec
fstpl
or
mov
cltd
int
mov
jae
mov
divl
stc
xchg
push
mov
push
dec
ret
shl
jl
int
jns
in
jae
xor
pusha
arpl
pop
xchg
dec
sti
jmp
pusha
int
add
lds
imulb
loopne
mov
pop
dec
mov
mov
jl
std
pusha
sti
cwtl
sahf
cmp
inc
fldt
jle
push
jmp
add
sbb
int
cwtl
pop
xchg
mov
xor
ds
jg
sub
lods
pop
cld
popa
lahf
xor
repnz
push
adc
je
cld
inc
push
xchg
inc
jb
or
jns
xor
mov
ret
xor
outsb
das
adc
jbe
mov
arpl
ret
push
adc
mov
movsb
dec
fwait
lcall
pusha
mov
lret
dec
out
push
cmp
int3
xor
add
inc
push
jg
lret
and
in
outsb
inc
mov
push
loope
in
inc
in
pop
sbb
int3
pop
insb
shll
enter
fs
pop
sbb
sbb
mov
jno
jae
out
out
sarb
jnp
roll
mov
push
mov
rcrl
mov
stos
iret
in
sbb
dec
cmpsl
sti
xchg
les
dec
mov
shll
jmp
shll
ja
add
mov
icebp
and
fcoms
push
jbe
jbe
mov
mov
aam
jns
gs
cwtl
ds
sbb
iret
dec
in
and
lock
add
fists
mov
sbb
shrb
sub
das
stos
lods
sti
inc
pop
xchg
inc
out
cmp
or
sbb
cli
cld
in
js
pop
pusha
adc
arpl
xor
jg
mov
pop
lret
xchg
lret
and
js
lds
mov
int3
inc
loopne
pop
jl
mov
or
scas
or
sahf
je
filds
jmp
lcall
les
fidivs
jne
daa
push
cld
les
into
dec
into
inc
movsb
xor
sub
loop
jbe
mov
cs
adc
loop
mov
cmp
jl
fsubl
xchg
lods
push
pop
push
pop
sbb
lods
dec
push
gs
icebp
mov
cmp
inc
loope
int
ficompl
cmp
or
add
stos
pop
mov
mov
mov
sbb
rcrb
sub
push
cli
cmp
jns
aad
shrb
or
ljmp
or
mov
cmpsl
lods
dec
dec
popa
les
rcrb
test
jno
mov
jmp
shrb
cltd
jmp
jns
push
lcall
enter
or
test
xchg
fcompl
scas
lcall
jge
out
pushw
js
in
mov
test
xchg
push
and
push
data16
pusha
lret
imul
pop
push
mov
sub
jg
adc
test
push
push
stos
aas
jg
push
mov
int
xor
add
roll
jno
adc
inc
rorb
xlat
mov
movsl
inc
leave
sti
jo
pop
or
insb
fidivrs
nop
movsb
out
dec
mov
ljmp
movsb
xchg
cmp
inc
xchg
adc
or
lock
push
outsl
test
imul
adc
aam
out
jbe
sti
iret
mov
lret
or
push
pop
stos
mov
fwait
sub
sub
aaa
idivb
mov
je
jmp
movsl
dec
iret
imul
mov
fistps
popa
in
fcmovbe
fcmove
xlat
push
xchg
dec
mov
or
fstl
sbb
xchg
pop
in
pop
jecxz
pop
jmp
jmp
loope
cs
dec
mov
and
inc
adc
jle
mov
jmp
ljmp
jmp
sub
or
mov
fsts
add
xchg
nop
cmpsl
sub
fistpll
push
ffree
push
mov
lcall
xchg
out
xlat
adc
inc
pop
sub
ret
leave
add
and
push
and
mov
mov
mov
cmp
push
or
xchg
fwait
loop
and
mov
lret
inc
inc
push
fldl
int3
out
fsubrl
fstpt
jb
mov
push
add
push
xor
in
jecxz
das
or
push
sbb
adc
aas
or
sbb
adc
shlb
xor
mov
push
in
mov
pop
daa
sbb
inc
xchg
add
out
jecxz
xor
jns
xchg
out
sti
dec
inc
lret
hlt
aad
call
scas
fwait
push
aam
fmul
aas
cmp
and
xor
sbb
stos
mov
xchg
subb
mov
mov
push
adc
xchg
sbb
repz
stos
into
lods
mov
add
ja
shrl
sub
jle
pop
aaa
xchg
les
lcall
xchg
out
add
adc
cmp
inc
lea
stos
and
ret
cli
hlt
fidivrs
jo
sub
or
push
push
jmp
imulb
jge
adc
ss
dec
adc
stos
scas
mov
push
push
test
shll
incl
mov
inc
call
xorb
xor
mov
jne
shrl
das
xorl
lods
out
jae
pop
mov
xor
cli
push
mov
test
std
or
cmp
int
or
xchg
mov
clc
sbb
inc
xor
pop
fildll
xchg
jbe
outsb
push
mov
out
xchg
fcomp
lcall
insl
stc
cli
xor
cbtw
and
std
jne
loop
je
in
jmp
and
mov
xor
test
das
and
jle
pop
daa
andb
outsb
mov
and
out
adc
test
hlt
pop
scas
popf
cmc
jge
pop
mov
add
cwtl
test
cmp
mov
sti
out
mov
test
jmp
stos
push
add
sub
lock
ficoms
inc
pop
adc
pop
push
rol
jns
shl
mov
adc
gs
mov
inc
pop
das
xchg
xchg
push
mov
roll
sub
cmpsb
lea
xor
out
mov
int3
in
mov
test
pop
fsubrl
mov
lret
sbb
jbe
les
cltd
dec
push
dec
or
mov
mov
sbb
testb
sbb
cmp
and
sub
les
dec
btc
nop
gs
popf
mov
aad
and
inc
or
jbe
mov
cmp
mov
out
orb
fwait
aas
outsl
in
nop
aam
mov
dec
sbb
lahf
mov
adc
movsl
push
sub
aad
cmpsl
mov
and
jmp
rclb
pop
fwait
into
xchg
dec
dec
out
movsl
xor
mov
test
lds
xchg
shlb
and
pop
jl
in
lcall
inc
cli
cmc
cmp
cmpsl
pop
adc
sahf
dec
pop
or
cmc
add
xchg
orb
fiadds
sbb
sub
mov
jno
subl
fildl
add
imul
adc
mov
clc
mov
push
or
xchg
jg
xchg
sar
cmp
and
rolb
jge
dec
jns
mov
mov
rcrl
push
jle
mov
insb
dec
fstpl
in
cmp
sbb
sti
scas
sub
jmp
lods
mov
ljmp
jb
push
cli
imul
call
xchg
sub
sbb
cmpsl
xor
cwtl
inc
inc
push
pop
mov
lds
sub
leave
sub
jecxz
in
mov
xchg
cld
sub
add
out
cli
movl
fstpl
mov
xchg
push
cmp
test
hlt
mov
mov
sbb
les
imul
xchg
xor
fadds
scas
imul
or
push
pop
or
dec
negl
and
movl
cmp
lea
scas
or
lret
fimuls
aaa
sbb
orl
pusha
and
jp
sub
loope
aas
pushf
sbb
jl
add
xchg
sbb
popf
adc
sbb
mov
xor
jmp
push
xchg
cmp
and
lds
sbb
sbb
push
sub
fs
mov
fistps
mov
or
xor
testb
imul
popf
imul
iret
xor
ja
rclb
xchg
pop
aam
push
pushf
pop
push
add
int
shlb
pop
inc
out
jmp
jne
cmpsb
xor
shll
cmp
les
push
divl
mov
xchg
inc
movsl
push
imul
push
and
mov
je
sbb
or
jle
pop
rclb
cmpsb
lea
xchg
in
cmc
lret
int
push
movb
stos
mov
nop
push
sbb
xchg
dec
mov
xor
bound
push
bound
ds
sub
fwait
xchg
sbb
sbbb
cld
sarb
pop
jl
dec
inc
hlt
leave
subb
pop
push
aad
sub
loope
cmp
add
insl
and
xor
dec
mov
into
xchg
sub
and
inc
dec
or
mov
adc
jbe
clc
inc
mov
data16
stc
insl
fimull
sahf
aas
lea
movsb
sbb
sub
or
cs
cmp
out
lret
pusha
rcrb
xor
les
rcrl
out
cmp
loopne
mov
lds
loope
dec
fistl
mov
outsb
jne
push
mov
push
push
or
push
jl
out
cmp
je
jb
fsubl
xchg
pop
sarb
int3
and
inc
lahf
inc
jg
pop
adc
call
xstore-rng
cmpsl
add
mov
sbb
mov
out
inc
fdivr
test
inc
out
mov
shll
cmp
xchg
or
sbb
and
out
mov
cmp
jmp
test
lret
mov
int
js
dec
xor
adc
jl
dec
sbb
jnp
xchg
das
or
xchg
xchg
loopne
loop
xchg
xor
icebp
std
sub
mov
insb
nop
cltd
push
dec
jb
cmp
sbb
xor
add
je
xor
sbb
xchg
aaa
jecxz
loopne
xchg
push
mov
mov
ljmp
fnstsw
push
mov
out
inc
sub
inc
push
daa
ljmp
pop
into
rorl
sbb
jno
out
pop
jg
test
pop
int3
aaa
jb
xor
ficoml
mov
jbe
inc
pop
fbld
lods
mov
mov
out
mov
or
aam
ret
and
or
call
cmp
jp
cmpsl
mov
push
mov
adc
in
repz
mov
je
add
cs
and
pop
dec
movsl
icebp
call
xchg
or
add
imul
aaa
mov
pushf
sbb
enter
dec
and
cli
jmp
push
push
push
loopne
mov
jne
mov
cltd
imul
jp
ljmp
ret
nop
imul
cmpsl
lea
inc
imul
and
dec
ficompl
mov
push
push
push
in
sub
sub
jmp
sub
frstor
cmp
mov
ja
iret
mov
push
jmp
les
into
mov
lret
inc
cwtl
pusha
sbb
leave
cmpsl
sbb
int
sbb
hlt
jae
and
xchg
sub
gs
sub
imul
fldenv
enter
jno
or
movsb
fistpl
mov
shrl
out
sti
push
repz
ret
stos
popf
movsb
jl
mov
mov
scas
sbb
dec
mov
sub
add
sbb
mov
lcall
movsl
push
xchg
insl
in
stos
aaa
push
mov
sub
out
sub
loop
xor
iret
mov
nop
and
in
rorb
pop
inc
popf
ss
test
popf
sbb
push
mov
movsl
aas
xor
adcl
ja
push
pop
test
bnd
xchg
fwait
movsl
call
std
ljmp
inc
and
mov
ja
cltd
xlat
adc
sub
stos
jp
and
int3
fstpt
add
push
sbb
xchg
arpl
fdivl
inc
lahf
sub
jl
insb
or
sahf
pop
sbb
cmp
fcmovnbe
scas
dec
dec
jb
lods
daa
fdivrs
sub
test
dec
aad
push
or
xchg
lcall
jecxz
enter
dec
inc
aas
test
int3
out
lahf
test
fdivrl
jns
add
cmp
mov
xor
dec
insb
test
pusha
add
iret
sbb
push
popa
push
mov
push
or
pop
add
fiadds
inc
cmc
es
scas
pop
push
arpl
dec
subb
shrl
push
in
or
data16
xchg
dec
xor
push
dec
inc
int
mov
bound
lret
add
adc
cmp
scas
mov
lock
faddp
fiadds
jg
ficomps
js
mov
in
and
or
das
in
outsl
jl
outsl
dec
add
mov
cmc
adc
outsb
inc
add
push
jle
sbb
shll
jns
cmp
sbb
jno
inc
mov
lds
out
ljmp
orb
cmp
push
jg
jnp
jno
in
push
pushf
in
fisttpl
lods
movsb
mov
push
push
inc
pop
aam
add
mov
jo
or
xor
dec
mov
inc
mov
inc
mov
movsb
out
cs
rcll
mov
call
adc
jnp
push
or
mov
in
sub
mov
mov
mov
pushf
out
loopne
aad
lahf
test
jl
jle
add
xor
aam
out
jmp
inc
jle
mov
mov
stc
push
push
push
and
cmp
and
orl
ret
sub
test
mov
clc
pop
decb
hlt
add
repz
xor
je
rcl
dec
inc
pause
negb
int
cmp
jp
adc
adc
xchg
aad
bound
dec
lds
inc
into
add
out
dec
xchg
mov
call
pop
cmp
cmpb
orps
or
pop
rolb
stos
jge
cmpsl
aad
fs
and
call
or
jns
js
pop
in
popf
jl
jae
mov
mov
sbb
push
sub
loopne
push
dec
test
dec
imul
inc
xorl
jmp
ret
pop
movb
mov
xchg
insl
call
sub
or
pop
loopne
add
pop
lcall
repz
jb
lcall
mov
mov
dec
ret
inc
pushf
leave
pop
push
mov
sub
pusha
mov
jb
nop
jae
sbb
pop
sbb
push
sub
sbb
mov
cmp
out
jno
and
aas
icebp
xchg
sahf
lods
movsb
adc
hlt
push
hlt
xor
loopne
insl
xchg
cmp
jns
ja
pop
xor
std
pop
pusha
in
or
leave
add
pop
mov
shrb
fisttpl
lods
clc
adc
fwait
orl
in
jl
mov
pop
pop
lods
dec
test
sub
xor
sbb
gs
xchg
mov
cmc
push
mov
mov
sub
jo
xchg
or
jno
daa
jns
cmpsl
scas
loope
lods
icebp
inc
pop
lock
imulb
push
sub
push
jns
sbb
loopne
pop
cmp
sub
lret
insb
cmp
dec
xchg
aad
sub
out
and
xchg
adc
ja
insb
cvttps2pi
jae
out
dec
fimull
scas
mul
mov
jns
lds
aam
rclb
adc
xor
leave
or
sub
lds
fucomi
add
adc
mov
pop
mov
inc
cmp
addr16
fcomps
pusha
dec
sub
xor
cmpsl
cmc
shrl
inc
sahf
jns
cpuid
decl
sbb
in
jge
sti
iret
push
rep
or
xchg
push
sti
jmp
add
andb
ret
enter
in
cwtl
jo
adc
inc
aas
les
xor
cmpsb
fdivs
xlat
fistl
mov
add
cltd
jp
cli
xchg
adc
das
inc
ds
sti
mov
sbb
jno
hlt
test
jbe
sub
mov
cmp
lcall
mov
imul
dec
adc
in
xchg
hlt
mov
decb
test
aad
ret
fwait
inc
adc
jp
pop
or
mov
add
or
xlat
xorl
jo
loop
stos
inc
hlt
ficomps
aas
lods
mov
add
adc
or
incl
sub
sub
pop
pop
inc
sbb
cli
lea
xchg
fnsave
push
mov
clc
aas
mov
test
je
fwait
in
fdivr
mov
movsb
cmc
outsb
jle
pop
mov
or
gs
out
inc
outsl
xlat
clc
mov
paddusw
orb
cmpsb
in
sub
decl
mov
xor
imul
mov
lea
stos
xchg
mov
out
push
or
xor
cmp
cmp
sub
and
loop
mov
push
push
in
add
xor
ss
sahf
lcall
jge
mov
fldln2
sarl
mov
pop
in
xchg
add
pop
jno
add
cmp
sub
movsb
addr16
cld
mov
mov
and
inc
ss
movsb
mov
xor
imul
insb
mov
movsb
ja
xchg
bound
mov
adcl
sbb
stos
shlb
imul
jbe
ret
cmp
add
sub
or
inc
push
push
ss
adc
fisttpll
lret
aas
push
jnp
daa
inc
js
cmpsb
je
sbb
dec
mov
xor
mov
inc
push
lahf
jp
aas
pop
rcrl
sarb
push
pop
xor
cwtl
mov
push
subb
xchg
mov
xorb
arpl
sbb
fcoml
dec
js
dec
in
jmp
fadds
fstpt
stc
inc
mov
mov
lods
sub
fildl
enter
jb
xchg
pop
pop
mov
ljmp
pushw
dec
push
pushf
inc
inc
mov
repnz
cmp
push
ljmp
stos
loope
addr16
fisubl
adc
jo
mov
fwait
je
mov
lret
call
shrb
push
fists
mov
jp
inc
mov
cmp
imul
lcall
mov
int3
gs
test
int3
mov
dec
sbb
xlat
mov
jb
cmp
pop
cmc
mov
or
adc
popf
or
pop
xor
cmp
lods
test
sbb
dec
pop
mov
adc
cmp
push
subb
xor
mov
sbb
push
lret
add
lods
jle
or
xor
add
out
mov
or
fcomp
sbbl
mov
or
xlat
test
movsl
mov
sarl
lret
and
mov
pop
pop
clc
cmp
jmp
fisubl
sub
sub
cltd
lock
mov
scas
icebp
jmp
sub
mov
dec
inc
sub
push
mov
out
fnstsw
jp
xchg
scas
xchg
in
mov
arpl
jns
cli
jae
xchg
icebp
or
repz
mov
xchg
lods
cmp
shll
shl
push
fldenv
add
nop
sbb
mov
fisttps
cli
add
mov
cmp
xchg
xchg
clc
divb
int3
jecxz
cwtl
pop
push
sbb
or
xchg
or
mov
pushf
loope
mov
loope
mov
adc
pop
insb
scas
inc
or
mov
cmp
int
pushf
pop
repnz
xor
push
daa
and
scas
inc
mov
push
shl
inc
dec
or
hlt
pushl
mov
xor
cwtl
pop
jp
es
xor
int
call
sub
lods
sub
out
lods
sbb
push
imul
mov
cltd
xchg
in
sbb
daa
vrcpss
mov
sti
sub
pushl
xlat
xchg
or
xchg
lret
in
cli
and
adc
lret
jne
loopne
lcall
dec
push
and
out
ja
fildll
movsl
jne
jbe
push
lahf
pop
ret
jno
add
subb
ljmp
rcrb
clc
cli
add
loope
pusha
xor
xchg
fildl
lcall
cmp
adc
dec
call
fldt
stc
sub
jmp
mov
pop
mov
push
inc
sub
cwtl
outsb
lahf
out
cwtl
adc
shlb
xchg
xor
cs
sti
push
sub
and
in
fs
pmuludq
jecxz
imull
mov
jl
testb
jg
adc
cli
xor
mov
pop
push
js
jno
adc
push
hlt
jb
adc
ja
pop
sub
inc
arpl
lcall
jp
call
jmp
inc
lock
sbbl
jb
data16
or
jb
sarl
jnp
fadds
int3
aam
xchg
movl
jp
outsl
xchg
mov
in
adc
cld
pop
in
add
mov
pop
pop
cmp
push
addr16
cmc
jb
mov
cwtl
lds
hlt
cmp
jecxz
jle
lahf
or
ret
adc
fwait
cmpsl
adc
mov
out
dec
sub
addr16
mov
dec
inc
flds
fidivrl
push
orl
shll
jp
inc
sub
push
mov
nop
jns
jp
adc
or
mov
xchg
add
mov
dec
inc
pop
inc
lcall
jge
out
into
imul
jmp
repnz
push
cmc
loope
int3
icebp
push
stos
add
pop
ljmp
jbe
dec
mov
popf
stc
xchg
cwtl
les
das
cmp
loope
sbb
aas
lcall
std
sbb
sti
stc
scas
mov
pusha
bnd
adc
mov
fdivs
repnz
lods
ljmp
sub
fimull
xchg
fs
xor
or
xlat
xchg
fwait
mov
mov
pop
pop
mov
xchg
jl
or
inc
mov
dec
and
decb
ret
inc
xchg
adc
push
pop
data16
popa
adc
ds
inc
lds
das
pushf
repnz
pop
dec
jecxz
rclb
jle
in
addb
jo
shll
mov
cmp
mov
and
jbe
shl
push
int3
gs
pop
sub
push
das
cltd
insb
sub
mov
or
cli
pop
scas
adc
in
fstl
aaa
in
sub
push
or
xchg
pushf
push
sbb
push
jnp
inc
sub
xor
sub
cmp
ret
xchg
mov
adcb
cmp
xor
jo
mov
int
getsec
jmp
xchg
mov
fldl
aam
mov
fucomip
cs
inc
mov
xchg
flds
pusha
sub
adc
add
adc
dec
das
in
fucomi
lahf
lea
jp
jne
mov
jbe
pop
push
push
xchg
adc
sub
nop
rcrl
arpl
dec
xchg
sub
ljmp
in
lahf
mov
std
xor
mov
test
call
inc
add
cwtl
icebp
int
jmp
lds
add
outsb
mov
adc
addr16
inc
add
aam
out
dec
mov
shrl
or
icebp
mov
loopne
or
adc
mov
push
aas
push
call
sbb
mov
inc
push
cwtl
mov
jge
lock
ret
xchg
pop
mov
enter
stos
and
xor
call
mov
adc
sbb
and
pop
ret
or
jb
mov
xchg
or
mov
cmp
push
je
adc
xchg
lds
inc
outsl
push
out
hlt
mov
ja
adc
xchg
jae
dec
ds
std
aas
xor
cwtl
popf
loopne
into
fsubrs
fidivl
pop
dec
sti
mov
int3
addb
push
jo
lret
xchg
stos
pop
pop
sbb
jg
mov
dec
xor
cli
cmc
push
lahf
test
xchg
jb
subb
pop
cmp
inc
popf
inc
imul
dec
es
sub
loop
mov
rcl
dec
jmp
sub
or
mov
dec
rorl
fsubl
stos
gs
mov
stc
int3
lret
shll
xlat
insb
in
fcompl
shll
mov
nop
loopne
daa
repz
call
jmp
xchg
sahf
clc
aaa
pop
insb
jmp
mov
ds
aaa
xor
fcmovb
mov
or
xchg
sub
or
dec
cld
dec
pop
mov
mov
dec
sbb
or
add
sub
test
addb
out
adc
fildll
sbbl
insl
mov
ret
sti
inc
mov
mov
lret
mov
mov
adc
adc
repz
bound
cmp
adc
hlt
push
loopne
cmp
rclb
or
xor
or
inc
and
mov
js
sbb
mov
mov
push
subl
cmpsl
mov
mov
xorb
ficompl
in
fwait
push
divl
mov
push
mov
lret
push
ja
rorb
cmp
xor
shlb
mov
daa
aam
loop
xor
dec
ds
cld
jecxz
dec
and
mov
cld
ror
ss
insl
dec
fistpll
mov
es
ljmp
jmp
push
scas
inc
bound
cwtl
xlat
icebp
call
sub
aad
fsubs
adc
sub
arpl
dec
mov
mov
insl
pop
adc
ds
adc
sbb
jle
loopne
in
jnp
rcrb
out
mov
pop
loope
test
test
or
stos
or
cld
dec
push
adc
dec
cmpsl
into
xchg
cmp
cmpsl
or
push
lret
sahf
ljmp
sub
rep
rcrl
sbb
cmpsl
fmul
sub
rcrl
cmp
repz
loopne
mov
test
ficompl
dec
pop
shll
pushf
test
push
std
mov
cmp
rcl
sarb
xor
mov
scas
add
sub
mov
movsl
rorb
and
or
jns
pushf
cmpsl
lods
leave
sub
sub
sub
stos
bound
mov
or
aad
push
sbb
bound
nop
cmp
inc
xchg
lods
inc
push
out
pop
xchg
iret
aad
cmp
sbb
ja
jo
add
test
fnstenv
sbb
nop
xchg
adc
and
pusha
jne
in
pop
push
mov
pop
call
xchg
cs
cmp
sub
mov
mov
cmp
sub
jno
cs
outsb
pushf
adc
rorb
ffreep
ss
out
push
or
cmp
xor
inc
mov
repz
mov
cltd
dec
mov
and
or
ja
aas
ret
sbb
xchg
int
stos
xchg
lods
jle
cmp
xor
ljmp
icebp
mov
cmp
and
rorb
mov
pop
stos
mov
mov
repnz
add
mov
push
pop
and
fisubrl
jecxz
inc
xlat
icebp
loopne
outsb
adc
cmp
sbb
imul
or
jns
or
xor
les
or
push
divb
inc
popf
inc
pop
adc
mov
sub
cld
ficomps
cltd
sbb
rcll
and
ljmp
hlt
xor
mov
cltd
cltd
sbb
ret
push
xlat
test
in
inc
push
add
and
repnz
and
pop
pop
sub
jae
pop
pop
gs
outsb
out
sbb
xchg
xchg
pop
dec
push
jnp
cmc
ret
adc
cmp
rcll
jle
sub
sbb
inc
xlat
mov
mov
adc
cmpsb
iret
jns
dec
add
or
sahf
lea
or
jmp
test
movsl
mov
xchg
aam
roll
sub
add
imul
adc
aad
sbb
mov
push
lds
ret
aaa
mov
test
inc
jae
xor
fimull
dec
xor
jns
adc
ds
hlt
jbe
push
shll
push
mov
in
sti
xadd
lods
ljmp
mov
aad
mov
lods
call
rorb
or
negl
mov
pushf
cltd
mov
movl
push
mov
repnz
adc
test
hlt
pop
sarl
ror
lcall
insl
inc
sub
xor
cwtl
jmp
push
xchg
cmc
movsb
popf
nop
or
mov
and
lods
sub
mov
mov
fnclex
cmp
sub
icebp
rcrl
mov
stc
jl
movsb
mov
fwait
cmc
into
xchg
hlt
xchg
sub
and
cwtl
dec
lahf
xor
ret
fsubs
add
adc
outsl
push
xor
push
cmp
xchg
mov
clc
mov
cmp
incb
dec
leave
fwait
mov
push
out
sbb
pop
push
xlat
cld
inc
pop
jl
push
xor
lahf
xchg
xchg
fistpll
and
pop
das
xor
popl
sbb
out
sahf
gs
add
in
lcall
push
sub
call
mov
dec
mov
lret
loope
nop
test
das
or
in
ss
mov
cli
adc
daa
dec
sti
stc
scas
daa
sbb
in
jb
jbe
push
add
fnstenv
or
das
jbe
scas
cmp
xor
pusha
add
ss
ss
cmp
scas
jg
stos
pop
adc
sbb
adc
rcr
imul
pop
pop
cmpsb
jge
out
jl
xchg
xchg
jae
pusha
jbe
jl
push
into
pop
sti
in
leave
out
push
je
pop
inc
adc
dec
repnz
jmp
adcl
or
cld
pop
das
repz
add
xor
add
jge
mov
cld
rcll
mov
repnz
cwtl
jl
test
mov
cmp
pop
cmpsl
cmp
pop
and
push
jne
dec
push
daa
pop
adc
inc
rol
pop
mov
cmp
jge
lods
int
loop
jmp
mov
or
sarb
cmc
sbb
pop
test
not
addr16
xor
out
imul
mov
inc
xor
xchg
ret
jge
lea
push
dec
xchg
insl
fidivrs
gs
cmp
mov
add
pop
lret
sbb
adc
jp
aad
sbb
enter
ja
pop
and
shll
lds
orl
or
loope
jle
xor
mov
insb
inc
xchg
test
and
cltd
cmp
and
mov
fstps
mov
ucomiss
jbe
call
mov
dec
push
mov
jnp
cli
pushf
mov
sub
icebp
and
fs
cmp
lahf
das
icebp
outsl
pop
test
lods
inc
movsl
rorl
xor
andl
pop
in
sahf
xchg
sbb
into
fbstp
in
inc
movsb
xor
imul
pop
ja
ret
movsl
sahf
insl
pusha
push
or
ljmp
repz
push
jo
iret
fildl
adc
mov
ret
cwtl
cwtl
bound
xor
stc
std
jno
and
cs
out
imul
imul
mov
icebp
push
ret
lahf
jg
xchg
repz
ds
out
and
jmp
xchg
or
sbb
adc
lods
dec
and
pop
das
aam
dec
cmc
jo
mov
push
icebp
fildl
je
bound
imul
icebp
outsl
adc
mov
insb
int
or
out
clc
shll
adc
jg
mov
les
and
push
xchg
pop
negb
shl
adc
sbb
scas
shll
xor
mov
daa
aam
and
add
iret
xor
sbbl
leave
push
mov
jae
mov
inc
stos
lret
enter
jl
adc
mov
cmc
test
jmp
mov
pop
adc
mov
lods
out
sub
out
hlt
mov
mov
mov
ret
or
das
jb
mov
jmp
fiadds
aam
addr16
push
jne
out
jbe
lret
shll
sbb
bnd
inc
test
xchg
clc
fwait
sbbl
imul
push
inc
icebp
push
int3
pusha
fcmove
inc
cli
inc
lahf
jge
int
imul
pop
stc
push
inc
jmp
hlt
mov
inc
popa
imul
shll
cmp
aaa
mov
jns
dec
jae
out
push
frstor
out
lea
push
jge
pushf
mov
mov
xchg
les
test
test
rol
scas
fsubl
popa
cmp
roll
adc
jmp
lcall
sub
xchg
ficoms
repz
outsb
iret
lea
mov
mov
int
cmpsb
sar
iret
sti
or
pop
jecxz
mov
or
aam
std
xor
push
sbb
inc
insb
xchg
push
pop
jno
fidivrs
out
xor
or
insl
and
mov
in
rep
ret
xchg
inc
mov
stos
fs
insb
notb
dec
and
inc
jb
das
inc
mov
bound
cltd
add
ds
sahf
int
pop
lea
xchg
lods
or
cs
out
adc
add
xchg
in
fistl
cmp
aad
aaa
dec
insb
cmp
and
fldenv
out
insl
add
dec
loope
cwtl
adc
sub
mov
mov
addr16
inc
test
pop
arpl
pop
arpl
shr
mov
fimuls
jae
pop
shll
jns
dec
es
jno
jle
push
push
dec
iret
mov
adc
scas
and
adc
xchg
int
mov
or
cmp
mov
shlb
jae
adc
movl
lcall
push
xor
std
sahf
stc
cwtl
pop
cmpsl
mov
mov
cwtl
lcall
sar
jp
es
mov
mov
and
dec
stc
leave
sub
push
dec
sub
loope
clc
outsl
ror
pop
data16
in
pop
xchg
insb
loope
add
inc
imul
cmp
pop
push
cli
pop
loope
dec
push
rcll
seta
aad
cmp
inc
repz
add
push
dec
cmp
imul
dec
cmp
jo
stos
lea
int3
xor
stc
sub
pop
icebp
test
das
push
push
sub
andl
mov
mov
rcrb
fldt
push
add
xchg
and
dec
lea
sbb
mov
pop
or
mov
push
jb
push
inc
add
sbb
pop
repz
pop
das
push
pop
scas
je
outsb
into
xorl
mov
mov
cld
xchg
outsl
push
cmp
rorb
test
add
jl
dec
cli
push
ljmp
add
ss
and
sub
add
out
pop
clc
push
inc
jp
stos
mov
lahf
in
push
rcrb
xchg
shll
ljmp
scas
or
lahf
imul
mov
mov
sarl
outsb
add
gs
push
scas
jecxz
or
pop
mov
cmpl
adc
daa
out
lea
mov
stos
push
addr16
pop
xchg
jp
and
add
idivl
movsb
insl
lret
inc
pop
xchg
fucom
fs
mov
or
dec
jg
inc
xchg
outsl
sub
add
jle
testl
sub
ljmp
jl
jnp
cmpsb
and
lods
shlb
mov
cmp
aas
pop
gs
sub
cmpsl
aam
notl
jno
enter
gs
arpl
cmp
push
fisubrs
sub
inc
mov
mov
rorl
push
sbbl
sub
in
js
cmp
push
bswap
dec
das
out
sti
cmpb
dec
aaa
cmp
insl
jnp
notb
lods
push
push
lock
pop
in
insl
stc
xchg
out
mov
sub
dec
imul
pop
ftst
pushf
ja
push
pop
into
jl
mov
pop
pusha
bound
inc
dec
xchg
mov
inc
xchg
lods
addr16
testl
popf
cltd
and
enter
mov
mov
adc
adc
daa
push
push
jae
jecxz
gs
cmpsb
repnz
xchg
jbe
ret
sub
and
sbb
cmc
add
loop
sub
mov
hlt
pop
imul
int
mov
mov
ljmp
movsl
jg
loopne
je
test
loope
fisttpll
jp
lcall
sysret
mov
mov
cmpsl
xchg
dec
xor
jne
out
mov
ret
adc
out
adc
push
inc
jmp
xor
and
jne
adc
mov
jbe
inc
repnz
inc
mov
loope
into
cld
ja
hlt
dec
xchg
test
popa
outsb
rolb
cmp
lahf
cs
dec
xor
jge
push
mov
test
ret
inc
in
adcl
pusha
outsl
or
push
imul
inc
imul
xchg
fnstcw
add
mov
add
adc
imul
cmp
ret
fwait
inc
and
jno
push
sub
push
adc
cwtl
out
and
in
cli
shlb
mov
push
outsl
inc
push
outsb
xor
pop
cmpsl
mov
mov
cld
inc
clc
jbe
and
adc
jo
subl
xchg
mov
fisubrs
pop
sub
push
xchg
mov
jae
sbb
inc
xor
mov
push
mov
push
subl
pop
inc
xrelease
rcl
xchg
enter
fs
jecxz
ds
clc
xchg
adcb
inc
jbe
insl
andl
inc
mov
mov
add
add
es
push
pop
xor
mov
add
hlt
dec
cmp
jle
add
and
ds
or
xchg
sub
sub
lock
mov
mov
fsubr
movsb
adc
mov
out
sub
and
movsb
std
es
ds
lret
dec
and
pop
in
out
cmp
mov
mov
jecxz
mov
sbb
sub
mov
repz
sub
sbb
pop
sbb
jns
cmp
repz
mov
fnstcw
push
push
xchg
pusha
dec
mov
sub
pop
and
aas
imul
cmpsl
add
lret
stos
dec
stos
clc
sahf
fsubrl
and
lds
les
pop
mov
mov
mov
pop
fnstcw
dec
cmc
popa
mov
xchg
data16
sbb
mov
jmp
and
rcrl
hlt
pop
mov
out
in
pop
shll
in
xor
cs
fisubrl
jae
xor
mov
jle
push
inc
or
jmp
insl
xlat
cmpsl
sbb
mov
mov
imul
or
push
movsb
sub
mov
in
decl
clc
xor
cmp
dec
inc
cltd
aas
mov
aad
jp
pop
pop
movsl
ret
mov
mov
test
test
mov
outsl
jo
push
push
xor
sub
nop
or
bound
aam
sbb
jecxz
leave
inc
xchg
test
lret
mov
loopne
lods
loopne
sub
dec
hlt
add
sbb
hlt
sbb
jmp
iret
repnz
rcll
mov
push
loop
cmpsl
sub
add
sub
subl
xor
xchg
xchg
inc
and
aam
xor
xchg
cmp
test
bound
mov
cmp
mov
iret
daa
arpl
pusha
adc
xor
jne
adc
fisttps
daa
gs
sub
jno
push
cmpsb
and
mov
int
mov
jns
mov
xchg
test
test
aam
inc
xlat
sub
jne
loope
dec
fld
pop
neg
sub
ja
xchg
cmpsl
shrb
ja
movsb
jecxz
jno
sub
mov
out
pop
lods
adc
bound
push
scas
ljmp
int
pop
mov
call
jp
in
cmp
jge
ss
push
outsb
hlt
push
pop
lock
dec
sub
mov
pusha
mov
xchg
stos
add
mov
shll
adc
lret
adc
mov
arpl
or
mov
into
aad
cs
pop
iret
fnstcw
xchg
jle
jp
push
ret
sbb
inc
popa
popa
mov
pusha
xchg
in
cmp
aas
divl
mov
adc
outsb
mov
dec
aaa
xor
dec
cmp
out
shl
test
rolb
mov
repz
mov
mov
cmp
adcl
mov
sub
pop
ljmp
sub
xchg
scas
in
mov
cmpsl
lods
pop
mov
cs
sbb
dec
pusha
adc
inc
cmc
mulb
dec
imul
jl
outsl
sub
jb
fildll
inc
push
cmp
aaa
and
frstor
test
mov
jecxz
cmp
cmc
popa
ja
mov
fldenv
jl
cmpsl
xor
dec
test
jne,pn
push
imul
mov
jne
xchg
adc
out
xor
or
scas
adc
jnp
rcl
scas
das
in
add
dec
add
stc
lods
fcoms
and
dec
jns
xchg
jp
stos
stos
push
push
cmc
mov
loopne
mov
mov
and
stos
xchg
mov
xchg
bswap
inc
loope
and
push
sub
xchg
lock
adc
and
xor
aad
mov
inc
cli
mov
mov
inc
mov
int3
cmpl
mov
mov
rol
dec
mov
popf
fwait
pop
and
or
fisttps
insl
insb
js
mov
add
jp
aad
ret
or
sub
ret
ret
pop
adc
inc
stos
insb
stos
mov
ret
xchg
push
and
jge
push
pop
sub
xchg
fsubrs
pusha
sub
dec
notl
or
adc
add
xchg
push
clc
repz
icebp
std
mov
sbb
fcomip
add
mov
xor
push
mov
repnz
outsl
dec
or
test
or
fisubrl
mov
inc
shll
das
jmp
stos
xor
cmp
mov
repnz
xchg
inc
xchg
cmpsb
int3
xorps
jmp
je
adc
rcll
stc
or
or
jns
or
lods
sbb
cmpl
and
sub
fists
into
pop
aas
xchg
push
cmp
pop
pop
xchg
sbb
dec
mov
mov
in
icebp
adc
sahf
xchg
stos
cld
jae
mov
loop
sbb
iret
ljmp
cltd
adc
lods
add
das
and
xchg
xor
pusha
jp
std
imul
sub
in
cmp
sub
loop
popf
push
mov
jmp
jae
hlt
movsb
aaa
jle
ret
call
lds
push
xchg
jne
scas
outsb
shrb
jns
jnp
rcr
xchg
ret
test
sbb
mov
shr
push
xchg
adc
addr16
jne
ss
fdivl
lcall
pusha
xchg
dec
lock
shrb
fwait
sub
cmp
sub
xor
das
dec
lret
dec
dec
mov
lods
fsub
sub
mov
xadd
mov
and
fnsave
lds
sbb
imul
and
inc
cmc
mov
sahf
xor
mov
cmp
test
adc
jge
adc
sbb
or
jle
lret
mov
xor
out
test
cmp
out
test
div
arpl
ficoms
cmpsb
mov
sub
pusha
fbstp
pop
cld
jo
dec
jns
mov
add
dec
dec
int3
clc
cmp
mov
mov
lods
and
mov
pop
aas
cmpb
jg
repz
cld
rol
shll
into
sub
mov
jl
cmp
mov
mulb
das
dec
pop
jbe
mov
sub
nop
aad
ret
leave
addr16
adc
fcompl
mov
in
sbb
outsb
jge
or
and
xor
pop
cmp
push
daa
aaa
xor
out
pop
push
xchg
pop
pop
les
js
addl
enter
mov
jns
adc
jbe
mov
cli
les
pop
xchg
sub
push
test
jns
popa
pop
and
mov
mov
xor
mov
xchg
adc
jmp
stos
adc
in
rcrb
jl
sbb
xor
out
or
mov
mov
sbb
sahf
cmp
fiaddl
sbb
mov
cmp
repnz
loopne
cmp
rcrl
clc
into
pop
sub
pop
push
add
sti
int
loope
fisubrl
repz
push
loope
imul
pop
sub
subb
or
dec
jg
mov
sbb
jne
mov
repz
xchg
fisttps
xor
cmc
and
mov
jns
in
rcrb
out
adc
inc
dec
cld
xchg
jmp
inc
push
mov
pop
xchg
cmpsl
rcrb
sub
jp
sbbw
inc
cmpsl
ret
daa
sbb
mov
push
faddl
jno
rcrb
xor
cld
sub
adc
aas
pop
dec
ds
js,pn
pushf
icebp
cmp
pop
mov
jae
mov
add
loop
mov
push
hlt
and
fadd
xor
push
adc
mov
sub
pop
sahf
fistpll
ret
push
push
mov
sub
lods
mov
push
push
pop
sub
gs
in
or
aas
cmpsb
xchg
div
xchg
pop
in
out
sti
mov
fcmovnb
stc
ss
shll
and
cmp
ljmp
push
mov
sarb
cli
push
int
mov
loopne
imul
sub
adc
dec
fstl
jg
xlat
pusha
pop
sbb
dec
sub
and
pop
pop
aaa
sbb
cmovae
cmpsl
pop
notl
sbb
mov
cmp
mov
cld
cltd
push
mov
shrl
testl
cmp
call
mov
mov
mov
add
jns
jns
fs
mov
scas
ds
pop
add
push
dec
das
pusha
inc
push
mov
jp
sub
xchg
xorl
icebp
fdivrs
push
fdivrl
test
shrb
jp
mov
jmp
mov
sbbl
fwait
aaa
into
movsl
push
cmp
xor
cmp
xchg
pop
cmpsb
xor
insb
cmp
sar
mov
inc
adc
mov
cmpsl
decl
imul
jp
sub
bound
mov
fisttps
ficoms
jge
ret
xlat
jns
pop
std
mov
cmp
scas
jg
aad
inc
adc
test
leave
rcr
sbb
jle
imul
ret
movsl
fstpl
fdivrs
lock
pop
in
test
inc
adc
pusha
lcall
in
or
test
sbb
cltd
cld
out
inc
fwait
xchg
lock
ret
ljmp
mov
push
cmpsl
push
jno
cmp
push
or
xchg
in
pop
outsb
xorl
rorl
sub
stos
pop
mov
mov
push
daa
fbstp
jns
mov
push
add
test
es
pop
lods
lea
fldcw
xchg
aam
sub
rolb
mov
and
ficomps
cmp
jmp
out
or
mov
fcom
pushf
dec
scas
xchg
sbb
cltd
and
rorl
jl
lcall
fcoml
shrb
xor
clc
pop
call
arpl
in
imul
leave
loopne
xor
notl
ret
std
sub
int3
adc
aam
js
jae
out
dec
in
sbb
adc
shr
mov
inc
sbb
or
movsl
in
mov
dec
rcll
pop
jge
loopne
add
mov
mov
mov
add
cwtl
cmp
rorl
jmp
out
cmp
iret
arpl
or
dec
pop
les
mov
popf
fsubr
xchg
jnp
enter
ret
faddl
fcomps
mov
or
dec
xor
dec
das
mov
scas
lret
jp
cmp
out
jle
sti
mov
pop
mov
sbb
mov
imul
popa
sbb
lret
aad
repz
adcl
mov
shlb
mov
fstpt
jb
test
sahf
fistpl
shrb
xor
jb
add
cld
mov
adc
aam
pop
jnp
insb
out
mov
out
lock
jmp
pop
xor
enter
xor
xchg
dec
jge
out
insl
inc
push
into
iret
data16
lods
cwtd
out
push
xchg
mov
mov
or
stos
movsl
xor
adc
aam
repnz
jmp
dec
dec
outsb
mov
add
mov
mov
in
mov
sbb
push
jecxz
das
push
sub
mov
mov
stos
jo
pop
pop
fcoms
mov
shll
lahf
jl
fistpll
mov
lods
lock
cmp
mov
in
fs
pop
fnsave
rcll
imul
ret
sbb
and
mov
or
fdivrs
push
dec
in
pop
sbb
ja
cltd
loop
das
cwtl
test
jnp
or
fcomps
jp
xchg
data16
test
outsl
cmp
adc
sub
pmuludq
cmp
mov
fucom
xor
and
mov
and
mov
lret
pop
xor
push
push
xchg
cmp
mull
inc
dec
and
adc
loopne
es
pop
addl
rcll
int
pushf
jae
dec
stos
sti
fiaddl
jmp
sub
and
mov
call
inc
addl
in
shlb
and
mov
xchg
ret
xor
mov
in
les
add
sub
jg
roll
push
dec
cmp
push
je
out
insl
cmp
add
pop
inc
stos
xor
in
int
or
mov
mov
mov
xor
out
push
inc
mov
mov
adc
lods
fisubs
dec
test
xor
imul
jo
popa
sbb
sub
aaa
loopne
mov
sbb
xchg
push
arpl
rcll
dec
pusha
movsb
mov
sbb
pop
adc
sbb
dec
insl
cmp
pop
in
push
dec
jae
fisttps
adc
mov
fisubrl
push
push
nop
das
pop
push
xchg
and
pushf
add
jle
test
cmp
scas
push
int3
fcomi
and
lods
xor
xor
in
pop
repz
outsb
cmp
pop
loop
xchg
sti
xchg
popl
xchg
pushf
mov
fsts
test
les
aad
test
pop
test
jecxz
jg
aas
or
stos
sbb
mov
dec
popf
mov
inc
das
inc
xorl
idiv
jmp
pop
dec
sbb
inc
jns
or
imulb
add
mov
cmpsl
aas
or
ds
cmpsl
ljmp
inc
inc
sahf
mov
into
jge
xorb
sub
dec
call
inc
bound
dec
add
mov
popl
sbb
pop
shrb
scas
mov
jbe
and
sbb
inc
mov
stc
pop
ds
adc
lods
lea
mov
in
push
cwtl
xchg
sub
rcll
aas
into
cwtl
popa
int3
aaa
xchg
bound
bound
testl
or
add
fnstcw
test
cli
stos
rorb
push
daa
jbe
push
sbb
jns
mulb
fsubs
pop
xchg
dec
fmuls
jp
mov
inc
adc
pusha
dec
aad
lcall
dec
sub
sbb
mov
loopne
scas
pop
xor
ficoms
push
imul
out
jl
dec
xchg
push
xchg
pop
popa
sbb
cmp
cmp
arpl
sahf
xor
xchg
je
pushf
inc
sbb
jnp
fs
loopne
sub
clc
negl
in
shlb
inc
fiaddl
jnp
and
ficompl
jno
loop
cmp
mov
add
mov
mov
psubsb
dec
adc
and
inc
pop
mov
ret
cmpsl
mov
ljmp
dec
and
sbb
in
ficoms
addr16
cmp
orl
out
iret
and
clc
aaa
out
cmpw
cmc
lahf
cmp
outsb
push
ss
in
rcll
dec
mov
icebp
xchg
ja
mov
insb
push
inc
mov
mov
xchg
dec
sbb
sub
test
xlat
lret
jl
jns
xchg
getsec
sbb
xor
sub
pop
dec
int
jb
adc
push
in
std
addr16
andb
xchg
movl
orl
aaa
scas
ja
xchg
pop
pop
lods
orb
test
and
shrb
cmpsl
leave
movsl
mov
inc
pop
mov
and
lds
jne
jg
adc
adc
xchg
daa
xchg
cmp
xor
test
cltd
mov
in
loop
aas
xor
sub
je
imul
in
xlat
mov
daa
roll
nop
xor
ds
push
andl
sbb
or
inc
ret
adc
fcomps
mov
pavgw
push
mov
mov
adc
cmp
push
popa
shrb
iret
xorl
mov
pushf
xchg
sub
insl
shll
fnstenv
pop
mov
xchg
popa
outsl
in
mov
fucom
add
mov
pop
sbb
ror
pop
stc
jbe
xchg
imul
adc
sarb
enter
rcrb
xchg
addr16
flds
add
or
cmp
testb
mov
js
sub
jb
stc
xchg
mov
test
repz
aaa
push
fdivl
pop
cmp
xchg
add
pop
jp
enter
cmpsb
mov
and
adc
and
pop
out
cmpsl
push
inc
jmp
push
xchg
add
mov
popf
push
iret
adc
cmp
jmp
les
mov
rcrb
dec
sarl
push
outsl
pop
cmp
jecxz
xor
cmp
or
push
sbb
add
cli
pop
imul
cli
das
clc
shll
fisubs
dec
ret
ds
pop
fsubl
dec
dec
fucomp
int
adc
add
leave
andb
mov
push
sbb
pop
and
and
mov
dec
jmp
jb
sti
xchg
js
int
ja
aas
out
in
call
movsb
int
in
sbb
leave
push
lds
ret
sti
ja
iret
jle
mov
subb
out
loop
sbb
inc
sub
push
movb
jno
ljmp
sbb
cmp
jbe
insl
cvttps2pi
mov
xchg
and
leave
pop
mov
jp
cmpsb
push
pop
xchg
mov
imul
adc
gs
shrl
jno
mov
out
insl
pop
sbb
add
in
insb
dec
dec
cmp
add
sbb
pop
in
push
out
enter
dec
ds
lea
pushf
mov
cmp
sti
add
fcoml
and
int
inc
pop
push
jg
sub
push
clc
adc
mov
cmpsb
rclb
mov
addr16
push
ret
mov
cmp
in
push
ljmp
mov
out
aas
push
out
mov
in
mov
xchg
lcall
or
cmpsb
loopne
mov
jne
ficompl
ret
sub
lret
add
iret
jp
mov
sub
outsb
int
push
outsb
cmp
aas
mov
popa
andb
jmp
sub
stc
jne
xchg
xor
fwait
leave
jl
sbb
ud0
inc
pop
jnp
outsb
test
xor
and
ss
fucom
cli
jg
cld
dec
repz
into
adc
xor
andb
mov
mov
das
cmp
sub
dec
xor
sarl
test
test
cmp
adc
inc
rorb
mov
mov
or
push
daa
lock
js
out
mov
stos
jne
xorl
test
jns
inc
cmp
rcll
mov
pusha
adc
lock
push
jns
test
daa
adc
cmp
add
xchg
push
fwait
loope
push
xchg
push
cmove
adc
lds
sub
repnz
xor
inc
lock
aam
push
cwtl
fldt
lahf
cmpsl
push
push
mov
add
xor
lahf
pop
xchg
cmc
out
mov
pop
mov
xchg
mov
push
xchg
jge
dec
rclb
jne
repz
or
lahf
mov
mov
jge
push
pop
popa
out
sbb
lahf
addr16
push
and
rcrl
mov
icebp
rorl
inc
pop
cmp
xchg
rcrl
jo
lret
or
sbb
call
adc
cltd
jp
adc
scas
stos
loope
mov
ja
inc
pop
stc
inc
cmc
ss
pop
ret
aam
push
mov
pop
inc
arpl
dec
test
xor
iret
leave
cmpsb
jle
cmpsb
ret
shrb
cs
aam
fwait
xchg
adc
xchg
inc
xchg
dec
xor
aad
movb
sbb
in
cld
clc
and
pop
mov
inc
cmc
mov
mov
push
mov
add
push
jp
inc
aam
pop
jmp
fisttpl
fidivs
pop
cmp
inc
inc
aaa
clc
inc
add
and
and
cmpl
inc
xor
or
jno
std
test
adcl
sbb
xchg
jecxz
cmp
scas
rcrb
inc
dec
mov
ss
pop
movsb
sbb
fwait
rcrb
push
xchg
fnstsw
mov
repnz
add
loop
push
fnstcw
push
cmpsb
jmp
jle
fldl
pushf
into
fwait
sbb
fnsave
add
popf
ds
popa
and
fdiv
xor
clc
stc
icebp
roll
std
mov
insb
lea
push
movsl
jle
push
cmpsl
cmpl
pop
in
rcr
sbbl
scas
imul
add
mov
mov
sub
xor
xor
lcall
lea
fidivrl
out
mov
aaa
pop
cmpsb
jns
adc
xor
push
mov
mov
outsl
mov
js
fdivrl
mov
xchg
sbb
dec
jmp
cld
pushf
xor
mov
jne
xchg
test
and
bound
std
and
and
mov
xchg
sarl
je
mov
inc
adc
subl
ja
jmp
mov
cmp
in
xchg
outsl
out
xor
sbb
mov
mov
test
scas
mov
insl
fs
sbb
cmpsl
fsubr
mov
mov
xor
cmp
mov
jne
xchg
imul
mov
inc
xchg
in
sbb
enter
test
bound
mov
adc
aad
loope
cs
cmc
leave
xchg
mov
enter
jmp
test
mov
cmp
cmpsb
inc
js
into
or
mov
fcoml
daa
pop
inc
xchg
clc
push
lods
and
ljmp
cmp
leave
int3
adc
adc
aas
push
xor
fistpll
and
adc
les
rorb
mov
dec
or
and
xor
inc
xor
xor
insb
out
dec
shll
jecxz
insl
or
push
push
mov
in
mov
push
xor
pop
aam
cmpb
and
ficomps
dec
inc
xor
call
das
add
mov
mov
lds
scas
rol
mov
popf
xor
adc
shlb
in
jecxz
push
test
add
inc
mov
and
cmp
enter
lahf
or
adc
lea
push
jp
jno
mov
not
jnp
mov
cmpsb
and
push
in
pop
and
in
push
xchg
mov
lcall
mov
pop
cmp
jge
je
mov
xor
call
mov
or
lock
mov
push
dec
fldlg2
pop
insb
pop
xchg
or
jae
lahf
pop
xbegin
pop
pop
push
loope
xchg
jmp
xchg
sub
mov
int3
in
xor
cmp
lock
xchg
nop
adc
nop
sub
inc
fstpl
aam
js
das
lods
pusha
rorl
pop
loope
xchg
subl
adcb
push
dec
ljmp
cltd
mov
jmp
xor
insb
hlt
test
hlt
or
mov
and
mov
mov
xor
jns
out
das
jmp
lods
stc
nop
xchg
adc
jecxz
cmp
lods
jg
xchg
or
mov
inc
lret
ja
lcall
mov
xchg
or
push
and
fists
mov
es
test
pop
out
inc
or
mov
shlb
imull
dec
or
ret
inc
dec
je
adc
inc
jp
ficomps
cli
pop
sti
rcr
dec
imul
loope
xor
jmp
sub
les
out
mov
mull
jle
into
outsb
daa
std
jae
negl
ficoms
mov
imul
fdivrl
ja
vpackuswb
leave
lock
mov
pop
out
shlb
sti
fidivrl
inc
mov
jb
mov
fldl
int
xor
repnz
inc
fldenv
notb
cmp
aam
je
sti
leave
pop
add
int3
loope
stc
mov
ljmp
push
and
and
sub
adc
mov
or
sbb
mov
pop
es
mov
mov
xchg
jmp
int3
test
push
xor
in
pop
ja
jne
xor
xchg
and
adc
repz
in
aas
icebp
push
test
sti
sub
cmp
mov
jo
mov
lods
mov
in
jle
inc
movsb
fistpl
mov
popf
insl
nop
cmpsl
pop
xor
sub
or
insl
out
rcrb
sbb
jns
insl
adc
scas
hlt
imul
pop
jbe
lods
sti
push
pop
cltd
cs
out
mov
add
fmull
shr
mov
aas
cmp
xor
or
loope
out
mov
cmp
pop
gs
push
dec
sahf
lret
mov
adc
pop
ss
int
loopne
stos
cmp
adc
adc
mov
and
jo
xchg
push
mov
and
outsl
sti
add
cmp
aam
xlat
lods
xor
xchg
fstpl
mov
adc
add
mov
mov
lock
cli
cld
mov
mov
pop
sbb
ja
jge
inc
ret
lret
insb
mov
nop
lods
in
jg
inc
pop
and
movsb
jbe
mov
lds
fcmovne
jo
out
test
fs
jl
mov
mov
xor
xor
jo
aaa
mov
dec
ret
and
push
push
jns
popf
add
cltd
clc
loope
jns
arpl
lods
hlt
mov
in
add
out
inc
and
jmp
adc
ja
loop
inc
sti
insl
dec
mov
cmp
push
xchg
popl
js
sbb
cmp
cwtl
inc
sbb
and
lock
sub
jo
add
jmp
addl
mov
sbb
fists
adc
es
and
mov
adc
or
hlt
jmp
outsb
adc
enter
lea
xchg
fadd
lods
jne
adc
mov
call
cmpsl
adc
icebp
ret
mov
out
stos
push
adc
sarb
aaa
shll
shrl
adc
xchg
popf
pop
out
push
mov
lea
out
test
xor
lods
dec
mov
out
adc
mov
jb
inc
xchg
jbe
and
mov
scas
jne
lea
add
sub
pusha
dec
arpl
adcl
out
fmuls
sub
test
dec
dec
ret
es
ret
js
jle
out
dec
cld
xor
cmp
cmp
xchg
inc
cmp
pop
in
pop
loopne
cmp
push
add
mov
test
pop
shrb
in
and
test
leave
lcall
into
lret
mov
movsb
push
inc
es
sbb
xchg
ljmp
out
push
pop
cltd
mov
mov
xchg
xor
mov
test
arpl
pop
rcl
rcrl
push
inc
push
xchg
ror
imul
les
or
lret
cmpsb
andl
pop
push
movl
loope
ds
imul
jno
shr
sub
xor
pop
and
mov
xchg
clc
arpl
out
or
adc
sub
xor
xorb
add
repnz
inc
data16
in
lds
je,pn
dec
jge
xchg
imul
cwtl
sub
xlat
jns
insl
pop
push
out
mov
push
mov
rcll
aas
movsl
dec
sub
cmpb
int
mov
into
test
scas
cmp
dec
inc
pop
dec
add
sub
lea
xor
mov
cli
dec
and
xchg
jecxz
stc
xchg
mov
stos
adc
loopne
pop
or
or
and
or
dec
add
out
scas
pop
dec
cmp
scas
adcl
inc
push
in
adc
mov
leave
jnp
repnz
dec
roll
std
add
jnp
pop
xchg
or
pop
or
popa
fcmovnbe
les
nop
cmp
mov
pusha
pushf
push
insb
add
jb
mov
mov
adc
pushf
mov
inc
neg
fwait
xchg
mull
push
aam
pop
mov
hlt
mov
inc
jge
xchg
test
dec
jge
jge
cld
inc
adcl
loope
mov
imul
fwait
cmp
add
mov
sarb
cwtl
xchg
or
dec
mov
popa
mov
nop
cmp
jl,pt
inc
and
aad
mov
mov
out
or
inc
ljmp
pop
cld
loopne
enter
lcall
loope
push
subl
ret
and
lds
test
fadd
push
sub
sbb
push
mov
or
cld
mov
inc
ds
jg
push
jmp
scas
sub
pop
or
divl
pop
int3
dec
adc
gs
mov
push
and
rolb
jp
ja
test
and
insl
xor
and
push
lcall
mov
pop
rorl
rcrl
dec
imul
aam
aad
pop
test
mov
push
repz
addr16
shrb
pop
gs
push
sub
pop
mov
xchg
and
and
fldcw
ljmp
in
inc
push
pop
movsb
dec
lock
in
mov
push
sahf
mov
clc
push
scas
lret
mov
pop
add
and
xchg
cmpsl
jne
je
mov
jg,pt
xor
sub
adc
test
lds
out
mov
xor
das
mov
dec
stos
fcomi
mov
imul
jb
sbb
pop
mov
rclb
data16
fst
xchg
fildl
sbb
add
aad
xlat
dec
inc
ljmp
push
mov
int
add
xchg
clc
or
mov
stc
gs
sti
push
shr
mov
jb
inc
out
sbb
pop
inc
aad
add
lds
iret
adcl
adc
jmp
push
mov
xor
fldcw
mov
iret
pop
lods
or
ljmp
push
inc
aam
lea
je,pt
push
aaa
inc
mov
lret
bound
imul
pusha
mov
xchg
inc
xchg
push
out
icebp
cmp
adc
push
outsl
cmp
push
cmp
imulb
addr16
mov
ljmp
push
mov
movb
add
add
jbe
dec
pop
mov
and
test
or
dec
mov
rclb
mov
into
cmp
mov
xor
jecxz
adc
ret
jp
fisttpll
nop
xor
rclb
dec
mov
dec
mov
mov
and
ret
icebp
adc
sbb
pop
iretw
stc
cli
add
mov
cmp
out
xchg
lea
xchg
dec
mov
mov
inc
loop
sbb
xchg
inc
xor
enter
dec
mov
ret
out
pop
bnd
fildll
ja
fidivl
out
sbbl
push
mov
mov
dec
outsl
imul
pusha
jno
test
cmp
mov
cmpl
pop
inc
cli
mov
xchg
int
mov
jb
nop
repnz
stos
ret
push
rol
sub
cmp
push
ds
inc
and
js
inc
sahf
sbbb
lock
test
out
out
add
dec
jns
adc
or
imul
lods
add
xor
sbb
push
jae
cmpsb
loope
jns
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
rcrl
jbe
push
mov
mov
cmc
dec
mov
jmp
andl
rclb
bound
xor
xchg
sbb
lahf
sbb
mov
mov
or
pusha
and
push
std
popf
sub
loopne
xchg
add
rorl
and
jo
mov
test
sub
and
pop
push
and
inc
jns
xchg
inc
rol
inc
lahf
mov
stos
sub
test
imul
sbb
into
pushf
insl
test
xchg
loope
movsb
xchg
mov
loopne
jo
cmp
cs
mov
in
fucomp
sbb
mov
movsl
mov
sbb
jmp
lods
int
and
imul
addb
dec
mov
xor
and
data16
aas
dec
outsb
jl
loopne
xchg
sbb
iret
stc
push
dec
jg
mov
push
sub
mov
or
je
xchg
in
sti
cmpsl
test
add
xor
sti
jmp
arpl
dec
in
pop
xchg
popf
cltd
pop
sti
popa
mov
mov
inc
mov
and
sub
lret
sbbb
ficoml
mov
call
xchg
adc
ss
cmp
mov
xchg
ret
and
xchg
pop
lret
xchg
cmc
pop
scas
adc
dec
nop
add
push
in
adc
lods
push
mov
mov
mov
cmp
leave
sti
lcall
inc
push
inc
je
sub
mov
sbb
scas
mov
popf
mov
addl
test
jne
out
popf
out
rep
mov
xchg
jmp
scas
pop
or
adc
push
mov
push
xor
adc
je
mov
rcrb
ret
lock
xor
inc
out
jmp
dec
mov
fidivrs
bound
or
push
aam
mov
sbb
std
test
in
dec
or
mov
je
mov
mov
push
cmp
lahf
xor
pop
imul
push
mov
fbstp
push
in
and
sub
cmp
xchg
push
inc
xor
and
push
rcll
iret
xor
xor
mov
fwait
negl
leave
cmp
mov
scas
and
fiadds
jns
cmpsl
scas
adc
cs
cmpsl
pusha
push
scas
ljmp
xor
xchg
in
fcoms
nop
pop
js
fnstsw
mov
test
xchg
add
xchg
jb
into
incl
inc
in
push
mov
movsb
int
mov
bound
add
mov
or
adc
mov
andb
xchg
sbb
cmp
sub
inc
lcall
int3
adc
iret
fistps
aas
lods
mov
rorl
hlt
call
movsb
adc
inc
rcll
enter
add
sti
push
shrb
jbe
mov
and
test
loopne
jo
jmp
fiaddl
pop
outsb
push
jbe
and
jle
aad
adc
pmaddwd
out
dec
enter
stc
adc
sub
lds
decb
xchg
ret
or
stos
dec
sbb
lret
and
sbb
pusha
imul
popf
enter
pusha
mov
mov
add
mov
aaa
std
popf
mov
das
push
dec
ret
je
dec
aam
mov
cwtl
ret
cmp
push
push
cs
push
adc
sub
neg
pop
mov
into
or
push
jb
xchg
adcl
xchg
xor
shrl
cmpsb
sbb
cmp
fstl
and
fstps
xchg
lret
repz
mov
stos
repz
inc
mov
xchg
dec
mov
cmp
mov
push
fadds
sbb
mov
xor
and
lcall
in
mov
mov
addr16
scas
mov
outsb
mov
jnp
adc
dec
push
std
imul
ja
add
test
mov
popf
pop
outsl
fbstp
rcrl
and
sarb
outsl
enter
pushf
aaa
shrl
add
inc
sbb
filds
ds
addb
pop
and
push
lahf
cmc
int3
jne
mov
bound
or
iret
sub
popf
mov
mov
push
add
push
mov
xor
lds
xchg
mov
inc
mov
icebp
sub
fstpt
ljmp
jg
loop
jb
insb
in
mov
clc
and
dec
mov
sub
lahf
sub
jg
fwait
jg,pn
mov
mov
ret
push
movsb
icebp
pop
and
add
stos
xor
stc
xchg
jae
fiaddl
add
mov
inc
imul
cmpsb
push
imul
jns
in
das
xchg
xor
xor
pop
ret
mov
push
icebp
dec
mov
aaa
xor
loop
cwtl
cmp
inc
js
sbb
mov
jne
xlat
and
xlat
pop
fmul
xlat
aam
mov
dec
notb
das
ljmp
jecxz
idivl
jmp
into
pop
rorl
xchg
add
dec
mov
xor
sub
int3
pop
filds
bound
adc
daa
in
in
xchg
push
sub
cmp
testb
scas
push
aad
sbbl
jp
mov
adc
outsl
cmp
jmp
xor
stc
stos
out
or
pop
clc
xor
orb
sbb
arpl
pop
aas
jmp
xor
arpl
es
fdivrp
fcompl
lds
out
pop
add
cltd
loop
push
sub
fs
lret
inc
dec
leave
stos
fwait
pop
adc
lea
cmp
stc
mov
sub
sbb
roll
jne
mov
sbb
inc
ret
or
test
popf
aad
pop
jno
test
inc
and
pmaddwd
sarl
mov
xchg
xchg
xor
add
ret
lahf
jecxz
and
push
outsl
mov
or
and
xor
jmp
mov
sub
fwait
lods
clc
jnp
jo
dec
and
mov
push
adc
mov
insb
sbbl
xlat
xor
push
mov
xor
sub
mov
imul
pop
fisubrl
dec
cmp
mov
cltd
push
jg
xlat
das
add
test
jbe
js
dec
movsb
pusha
dec
cmp
add
pop
inc
cmp
outsb
mov
mov
cld
push
sbb
lods
lret
pop
push
les
outsb
les
mov
adc
imul
les
sub
fists
lcall
mov
push
fsubrs
sbb
mov
rorl
xchg
daa
jp
mov
push
mov
cmp
out
loope
xor
js
jp
int3
pushf
in
aad
mov
sub
movsb
inc
or
xor
xchg
jo
lret
pop
or
jae
push
pop
inc
lds
xchg
jecxz
dec
mov
fmuls
int3
mov
add
hlt
out
fwait
ss
rclb
ficomps
mov
xor
mov
cmp
pop
sahf
dec
aas
shlb
insb
or
pop
push
jge
ret
mov
cmc
xchg
rcrl
bound
mulb
xchg
and
cli
or
pop
inc
add
mov
call
inc
push
mov
mov
push
jno
adc
cli
pop
cmp
inc
pop
stc
push
stos
push
negl
in
mov
adc
mov
sub
mov
mov
xchg
push
add
sbb
push
movsl
fmul
push
stc
arpl
cmpsl
add
add
in
nop
aad
scas
dec
lock
movsl
pop
inc
inc
frstor
jno
lret
aaa
pop
fadd
jg
mov
dec
xchg
arpl
int
push
jp,pt
dec
aam
dec
mov
ds
lahf
jae
xchg
mov
nop
call
sahf
ja
jecxz
sub
popa
popa
rorb
add
mov
sbb
inc
push
insl
nop
loop
push
lds
mov
and
dec
xor
jge
aaa
ds
jp
cmpl
idivl
push
nop
stos
mov
push
lahf
adc
adc
inc
testb
das
xchg
divl
fcoms
iret
mov
lcall
mov
scas
or
jl
std
das
push
adc
add
cmp
cld
add
inc
lahf
sub
aad
adc
adc
inc
jmp
loope
dec
je
inc
lock
ss
jle
cmp
repz
sub
dec
ror
mov
call
fdivrl
pop
clc
pusha
jo
inc
pop
dec
push
das
sub
ror
mov
incl
mov
fildl
inc
cmp
mov
sbb
jne
faddp
leave
sbb
fnsave
pop
stos
push
jmp
insb
das
xchg
cmp
aad
jae
xchg
xor
add
adc
mov
mov
pop
xchg
add
and
ljmp
outsb
xor
jp
mov
pop
aas
data16
mov
sub
stc
in
add
ret
das
sub
mov
fistpl
sbb
cld
pushf
push
adc
sbb
xor
les
push
rcrb
test
pop
bound
inc
or
ja
ljmp
mov
rcrl
mov
cwtl
sub
or
pop
pop
cmpsl
dec
mov
mov
mov
add
lds
inc
and
loop
mov
pop
scas
sub
jae
dec
ds
pop
xor
roll
repnz
mov
sbb
xor
fwait
and
pop
xchg
sbb
xchg
cmp
test
jle
jl,pt
add
faddl
or
cli
push
mov
sub
stos
scas
loopne
jg
insl
push
or
notl
sbb
dec
cli
fs
insb
pop
fs
push
xor
mov
bound
repz
ja
rol
jl
xor
sbb
jg
push
popa
mov
mov
lods
fstpt
push
in
insl
loope
ret
mov
jp
leave
loopne
lahf
mov
push
cmp
push
shlb
jae
jecxz
sarl
pop
pop
inc
mov
push
mov
pop
movsb
push
add
or
cmp
cmpsl
jo
lea
cmpsl
ret
or
repz
cmpsl
scas
adc
and
or
pop
mov
xor
push
iret
push
popf
jo
xchg
imul
cmp
dec
xchg
or
jl
sbb
sbb
xchg
jno
push
ret
daa
xchg
lods
dec
pop
inc
inc
jnp
jnp
in
mov
mov
push
int
and
lahf
and
clc
push
in
hlt
push
cmp
jns
push
jbe
lds
cmc
sub
push
movsb
and
test
test
cmp
mov
lret
add
pop
in
mov
push
mov
fdivr
dec
sahf
aam
rcr
mov
fcompl
mov
or
add
push
cmp
mull
out
add
mov
cli
sub
ss
push
mov
icebp
adc
inc
adc
rolb
pop
mov
xchg
cli
xchg
add
repz
out
call
push
fisttpl
dec
dec
popf
mov
movb
jns
fnstcw
repnz
popf
inc
xor
in
stos
loopne
jge
in
out
iret
add
mov
push
das
or
dec
and
sti
pop
add
bnd
xor
sub
adc
rol
sbb
adc
hlt
mov
jge
xchg
dec
pop
les
movsl
rcrb
mov
adcb
xchg
aaa
sbb
cwtl
enter
push
inc
push
mov
lods
dec
mov
fisubrl
inc
pop
push
push
fildll
jecxz
sub
cmpsl
jno
jb
pushf
add
pop
or
inc
adcl
sbb
push
or
insb
mov
stc
test
int
mov
cmp
cs
in
lcall
adc
sub
jle
cmp
mov
cmp
leave
ds
rorb
mov
fdivs
shrl
and
push
movsb
sub
es
lea
loope
or
repnz
mov
int3
in
jle
push
fidivrl
push
xchg
lahf
sub
sub
dec
clc
in
into
in
add
enter
rcrl
adc
adc
popa
adc
sbb
stos
add
aaa
lods
shl
xchg
ret
out
xor
test
jnp
pop
or
sub
cmp
lret
mov
sbb
mov
sbb
fcoml
mov
jmp
or
stos
inc
adc
add
jmp
stc
out
roll
sarb
aad
hlt
cltd
cmpsl
pop
push
pop
pop
insb
insl
test
nop
lret
orl
inc
scas
fnsave
xchg
jnp
dec
sub
sub
mov
aad
sub
hlt
in
sbb
ljmp
jns
adc
lret
clc
pop
jl
test
data16
xchg
push
jge
aam
adc
icebp
adc
adc
adc
int3
or
ss
xor
adcl
pop
pop
jge
mov
movsl
insl
xor
xor
adc
mov
sub
lds
sbb
or
dec
xchg
cmp
jmp
add
push
dec
ja
pop
pusha
lcall
push
mov
mov
in
dec
lods
lcall
dec
ja
xchg
out
fnstsw
movsl
repnz
inc
adc
sti
sub
icebp
fstpt
pop
bnd
into
sbbb
fistpl
xor
lcall
xor
iret
pop
adc
lret
sbb
pop
mov
cld
cmpsl
rcrw
scas
xor
xchg
adc
int
pop
sarb
jg
sbb
adc
cmpsb
lret
hlt
push
aad
and
sub
movsl
mov
adc
cli
cmp
add
inc
lret
jecxz
pop
mov
xor
push
movl
lods
push
jb
cmp
mov
clc
insl
and
icebp
and
xchg
frstor
es
in
mov
rorb
js
mov
xchg
dec
add
orl
adc
pop
cmpsl
cli
adc
mov
sbb
rorb
inc
cmpsl
sbb
clc
push
pop
test
adcb
mov
cmp
hlt
fistpl
mov
sbb
gs
mov
mov
xor
cmp
aas
bound
cmp
pop
push
icebp
adc
xor
mov
loopne
or
xchg
mov
sbb
dec
sbb
push
mov
stos
lods
push
fcmovb
dec
in
mov
sbb
xchg
gs
xor
je
push
enter
out
push
ja
outsl
or
sub
add
sarl
dec
movsl
or
mov
addr16
mov
ja
fidivrs
pop
insb
shr
inc
pop
mov
push
imul
pop
lds
loop
dec
dec
jmp
je
mov
jmp
or
loope
mov
or
mov
in
mov
fistpll
scas
cmp
je
xor
mov
leave
lret
ret
or
and
in
xor
jge
push
gs
jle
jle
push
addl
pop
inc
fucomi
inc
jb
adc
in
outsb
jl
push
pop
lock
std
sbb
push
fs
mov
xchg
lock
arpl
push
lret
popa
cmp
movl
adc
scas
lods
xor
mov
nop
dec
jle
push
std
mov
enter
repnz
ja
xor
int3
adc
mov
fs
sub
xchg
pop
mov
decl
ds
sbb
jno
or
jg
push
xor
pop
rcrb
test
in
lret
jo
mov
cmp
mov
in
push
fimull
ret
scas
inc
jae
fsubrl
ret
daa
add
stos
xlat
push
xchg
out
cmpl
xchg
inc
add
push
mov
notl
push
mov
out
and
ljmp
scas
movsb
outsb
enter
fisubs
fsubs
pop
add
negb
dec
in
cs
cmp
jl
and
out
mov
and
pop
call
xchg
popf
scas
pop
adc
mov
lods
pop
cmp
pusha
push
mov
mov
insb
cmc
movsl
and
fcoms
pop
ja
dec
movsb
pop
mov
paddusw
gs
sub
flds
dec
jns
insl
mov
inc
das
imul
loop
std
add
stos
shlb
outsb
add
add
mov
out
pop
mov
outsb
mov
imul
ljmp
cltd
xchg
lea
push
pop
or
cld
enter
and
cmc
imul
aaa
movsl
outsl
push
xorl
divb
push
cmp
pinsrw
shll
ja
sti
adc
adc
pop
lods
cmc
xchg
mov
xchg
stos
and
clc
and
or
inc
or
in
dec
movsb
scas
push
cmp
out
push
loop
pushf
xor
push
test
and
sbbb
popa
fstpt
fnsave
mov
out
push
outsb
icebp
mov
adcb
inc
jne
xchg
dec
fwait
aaa
push
xchg
xor
and
jns
cmc
mov
insb
sti
aad
pop
outsl
imul
push
mov
mov
fwait
cmp
popa
push
push
or
inc
out
sbb
cltd
jo
inc
xor
mov
cmc
call
pop
jne
and
lock
es
sbb
out
xchg
sahf
int3
push
inc
out
dec
mov
mov
stc
pusha
mov
mov
lods
and
fstl
pop
xor
rclb
jo
aaa
hlt
fiadds
jae
std
lods
or
inc
dec
cmpsl
add
push
sub
cltd
mov
lea
shl
nop
xor
mov
push
mov
aaa
inc
pop
inc
loope
iret
fucom
cmp
sbbb
and
ds
insl
enter
notl
xlat
adcb
jl
stos
sub
jb
xlat
dec
aad
out
out
push
imul
dec
out
aas
sti
aad
cwtl
jne
hlt
call
iret
mov
lock
sarl
je
xchg
aaa
jnp
mov
push
inc
ljmp
push
daa
shll
jae
mov
xchg
lock
fcmovnb
ficoml
mov
js
push
dec
cmp
dec
ja
mov
xor
test
jecxz
aad
push
push
mov
jle
push
popf
adc
int3
loope
ret
icebp
or
push
xchg
cmc
ja
and
mov
es
hlt
aam
fsubs
cmp
xor
shll
int
sub
xorb
fisttpll
cmp
cltd
xor
fbstp
data16
sbb
repz
pop
jecxz
cwtl
push
data16
addr16
push
scas
pushf
or
mov
dec
pop
pop
fwait
lods
cli
fcmovb
es
cmp
inc
add
pop
xor
idiv
inc
cmp
pop
pop
fimuls
inc
and
fnsave
cmp
inc
or
popf
xor
jae
das
aad
stc
lcall
mov
and
js
lock
ljmp
lret
dec
out
xchg
mov
out
in
xor
scas
xchg
ficoml
stos
imul
pushf
arpl
jns
mov
push
negl
pop
loopne
dec
les
cwtl
xchg
xor
je
sti
push
pop
shrl
mov
sbb
dec
mov
mov
sahf
and
arpl
fwait
add
aam
and
adc
std
daa
adc
and
xchg
add
mov
inc
mov
outsb
rcr
add
sarl
dec
je
lret
adc
addr16
and
jne
sbb
sub
mov
jbe
scas
gs
jecxz
mov
lock
jmp
push
lret
lea
fistl
int3
psubq
faddp
xchg
sbb
shl
mov
fwait
in
xchg
nop
pop
rcll
lahf
and
inc
add
sbb
sti
sub
sbbl
lahf
xchg
push
hlt
sub
aam
loope
pop
imul
and
mov
outsl
push
pop
or
out
xchg
jne
out
repnz
pop
js
loope
push
les
and
outsb
pushf
sub
dec
out
or
lcall
sub
in
inc
lcall
adc
sbb
imul
or
xchg
fnstcw
stos
dec
or
pop
xchg
testb
pop
loop
je
ja
in
scas
mov
popa
ja
xchg
fcmovne
addr16
sbb
push
and
xchg
xorb
xchg
cmpsl
fimull
mov
jmp
or
es
in
movl
adc
push
fisubs
push
fnsave
lock
mov
mov
dec
pop
cmp
dec
cmp
adc
dec
xchg
out
inc
outsl
out
pop
dec
mov
imul
xor
jne
and
mov
mov
mov
xchg
jecxz
scas
inc
shlb
mov
arpl
mov
lock
xlat
sbb
lahf
jmp
pop
mov
push
jle
mov
ljmp
mov
cmp
nop
aam
add
sub
es
push
fxch
sbb
pop
xchg
pop
es
loope
lahf
jnp
sbb
inc
xchg
movsb
outsl
movsb
sbb
mov
inc
xor
pop
scas
repz
sub
ljmp
dec
cwtl
les
lret
sbb
notl
call
enter
sbb
cltd
mov
hlt
in
testb
xor
dec
adc
cmpsb
mov
add
fbstp
xchg
daa
and
mov
mov
sub
lea
in
mov
or
inc
pop
inc
in
addb
leave
ds
dec
fisttps
pop
mov
dec
dec
or
adc
jmp
shl
mov
dec
add
mov
addr16
adc
loope
add
aaa
mov
cmp
xor
or
cmp
sub
outsb
sbb
mov
aas
or
lods
cmp
lods
mov
sub
mulb
imul
jmp
mov
inc
cmp
in
enter
cltd
inc
es
popa
jns
sub
push
mov
cwtl
fcompl
clc
dec
sti
fildll
mov
movsl
popa
and
test
mov
sbb
cli
mov
mov
ss
les
aad
mov
bound
ret
cs
cmp
jae
rclb
enter
pop
dec
fisttps
jo
aam
sbb
xor
push
inc
cmpsl
push
enter
frstor
shrb
cmc
test
mov
mov
icebp
int3
inc
iret
call
mov
fnstsw
pushf
push
mov
out
ficomps
cmpsb
inc
adc
push
stos
test
cmp
test
pause
inc
outsb
notb
cmp
adc
pop
mov
iret
test
push
out
add
mov
pop
push
enter
inc
lods
call
rcr
hlt
push
lret
aad
mov
es
nop
cmp
shrl
cltd
dec
xchg
test
sub
loop
push
sbb
bound
outsl
and
int3
mov
negb
mov
adc
ss
xor
mov
cmp
mov
inc
dec
mov
mov
sub
popa
pop
js
aas
cs
insb
arpl
fstl
data16
xor
adc
cltd
insl
addr16
cmp
scas
or
lods
loopne
sub
mov
jno
fdivrp
push
mov
push
xor
outsl
add
xlat
push
sti
or
mov
jb
nop
mov
ret
ds
adc
cmp
sbb
xor
je
loopne
in
mov
das
mov
fnclex
rol
leave
push
insb
jnp
jne
in
and
outsb
pop
ja
xor
xlat
push
pop
enter
cmp
cmp
mov
inc
add
sbb
mov
jmp
inc
leave
fldenv
or
ret
ljmp
ja
xlat
imul
xchg
in
loope
rorl
inc
push
xor
mulb
sbb
sub
push
ss
push
add
pop
popf
jmp
test
mov
xor
fldt
dec
fsubrs
fildl
lods
hlt
add
jne
mov
aaa
aaa
mov
stos
cmp
mov
pop
jae
clc
outsl
xor
test
imul
inc
sbb
inc
and
cmpb
add
popa
push
sbb
sbb
leave
jle
shr
xor
xor
ret
stos
or
cmp
js
mov
bound
test
mov
stc
sub
ljmp
mov
subb
das
cld
lcall
jnp
adc
pop
lods
out
ja
shll
jmp
add
into
mov
ds
stc
push
xor
arpl
dec
ret
mov
cmpsb
xchg
insb
decb
scas
mov
dec
int3
xchg
xorl
out
hlt
dec
test
or
mov
shll
jnp
push
rorb
xchg
cmp
cmpsl
movsl
andl
pop
pop
addr16
mov
js
mov
xchg
sub
in
push
xchg
pop
jmp
jns
ja
sbbb
loopne
cmp
movl
addb
or
xchg
mov
push
and
and
dec
mov
iret
icebp
nop
lods
add
inc
sbb
pusha
std
pop
ret
cmp
cld
daa
test
sbb
or
cmp
and
dec
pop
test
sbb
mov
lret
rcrb
mov
movsl
push
aas
outsb
idivb
loop
xchg
inc
orb
test
xchg
shll
out
xchg
test
rcr
pop
daa
dec
push
mov
and
fidivrs
xchg
les
movsb
shll
xor
and
fs
inc
dec
arpl
xor
inc
test
push
pop
bnd
ret
pop
mov
jno
mov
push
repz
in
popa
std
xorl
bound
xor
popf
cwtl
jno
mull
xlat
dec
cmpsl
jmp
xchg
inc
das
pop
fisubrs
cltd
in
rorl
xchg
dec
aad
and
ret
repnz
xchg
imul
lods
aam
xor
mov
mov
push
jge
cmc
cmp
cmp
lret
sar
inc
outsb
mov
clc
inc
nop
fildl
out
test
add
in
xchg
das
cltd
leave
inc
and
hlt
jecxz
cmp
push
ljmp
hlt
push
sub
ficomps
cmpsb
dec
fcompl
and
subl
repnz
movsb
pop
fs
shlb
pop
shl
push
aad
data16
cltd
mov
sub
xchg
stos
mov
pop
cmpsb
rcl
xor
pop
push
mov
pop
sbb
mov
mov
or
sub
xchg
pop
push
jg
cmc
add
pop
pushf
call
mov
and
rorl
pusha
test
stos
fs
dec
fscale
ficoms
out
in
les
and
mov
and
xor
call
in
xchg
sbb
xlat
push
rolb
mov
test
xchg
bound
lock
subl
mov
nop
push
mov
mov
mov
andb
sbb
sbb
jne
leave
pop
fs
xor
mov
lcall
xchg
sar
in
mov
arpl
aaa
lcall
add
outsl
xchg
jge
jl
or
sbb
dec
shll
dec
idivl
push
or
notl
pop
xor
jg
daa
mov
xchg
test
cmpsb
xchg
jmp
inc
cwtl
xchg
push
clc
inc
movb
and
ljmp
in
rcrl
sub
cmp
out
sbb
testl
mov
cmp
xor
stos
inc
inc
and
leave
fwait
mov
push
repz
ljmp
cmp
or
cmpsb
mov
inc
stos
scas
pop
into
rol
jl
add
gs
push
ret
mov
cmc
cmp
jb
loop
sbb
mov
push
dec
and
mov
cmpsl
addl
pusha
icebp
pop
jmp
ret
push
int
movsb
jnp
cmpsb
xchg
jmp
pushf
jge
mov
pop
pop
out
pop
ret
cmc
jb
fcomps
imul
clc
mov
lahf
push
cmp
push
cld
sahf
repz
cmpb
inc
or
les
mov
loopne
mov
cs
push
push
jo
into
adc
xchg
push
push
iret
mov
dec
loopne
lret
jnp
mov
push
repnz
wbinvd
xor
int3
xchg
xor
ja
icebp
and
or
in
add
push
ret
xor
jg
xchg
stc
jno
sub
adc
sbb
xor
jmp
lret
dec
and
dec
mov
lds
ds
das
arpl
or
mov
jbe
adc
aas
rcrb
rcrl
fistps
push
add
cwtl
xchg
jmp
nop
outsb
xor
xchg
in
fsubl
jg
loope
andl
xlat
cs
cmpsl
xor
adc
and
mov
xlat
and
in
addr16
add
xchg
lret
fcomi
or
mov
mov
pop
arpl
push
inc
or
repz
addb
pop
sub
in
xchg
test
iret
mov
jmp
or
mov
fwait
adc
divl
and
movsl
scas
je
sahf
sar
mov
mov
out
pop
and
mov
and
or
movl
leave
jns
sbb
and
popf
loope
adc
mov
ret
dec
stos
mov
pop
enter
std
xchg
mov
pop
fwait
adc
push
pop
mov
ja
mov
mov
rcll
mov
cs
xor
inc
in
test
leave
pop
sub
mov
push
dec
jbe
xchg
mov
add
push
xchg
gs
push
xchg
xlat
add
xchg
jae
pushf
int3
cmp
aam
ret
lcall
imul
repz
xchg
add
pop
out
dec
divb
inc
mov
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
insb
inc
mov
add
