add
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
test
jge
xor
jmp
cmp
jle
mov
fld1
mov
fcoms
fnstsw
test
jne
fsts
jmp
flds
fcompl
fnstsw
test
jne
flds
jmp
flds
fstps
flds
fstps
fcoms
fnstsw
test
je
fstp
flds
fcompl
fnstsw
test
jne
flds
jmp
flds
fstps
flds
fstps
flds
fcompl
fnstsw
test
jp
flds
jmp
flds
fcoms
fnstsw
test
jnp
fstp
flds
mov
fstps
flds
fstps
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jge
mov
jmp
xor
test
setg
dec
and
mov
mov
cmp
jge
mov
jmp
cmp
jle
mov
mov
mov
cmp
jge
mov
jmp
cmp
jle
mov
mov
mov
cmp
jge
mov
jmp
cmp
jle
mov
mov
xor
mov
mov
xor
xor
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jge
mov
jmp
cmp
jle
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jge
mov
jmp
cmp
add
add
add
mov
mov
je
cmp
jbe
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
test
jge
xor
jmp
cmp
jle
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
test
jge
xor
jmp
cmp
jle
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
cmpl
mov
jne
mov
cmpw
lea
je
push
push
call
test
jne
push
push
push
push
push
push
call
mov
cmp
jge
mov
jmp
cmp
jle
mov
mov
mov
cmp
jge
mov
jmp
cmp
jle
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
test
jge
xor
jmp
cmp
jle
mov
mov
mov
test
jge
xor
jmp
cmp
jle
mov
mov
push
lea
push
mov
call
test
jne
mov
push
push
call
push
push
push
call
add
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
push
lea
push
mov
call
test
jne
mov
push
push
call
push
push
push
call
add
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
push
lea
add
add
roll
or
push
push
call
push
push
push
call
add
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
call
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
xor
divl
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
mov
test
jg
jl
cmp
jae
mov
jmp
test
jl
jg
cmp
jbe
mov
xor
mov
mov
mov
cmp
jae
mov
jmp
cmp
jbe
mov
mov
mov
mov
test
jg
jl
cmp
jae
mov
xor
jmp
mov
mov
push
push
push
push
call
push
push
push
push
call
cmp
jl
jg
cmp
jbe
mov
jmp
mov
mov
mov
mov
mov
pop
test
jg
jl
cmp
jae
mov
jmp
test
jl
jg
cmp
jbe
mov
xor
mov
mov
mov
mov
test
jg
jl
cmp
jae
mov
xor
jmp
mov
cmp
mov
jl
jg
cmp
jbe
mov
mov
mov
mov
mov
cmp
pop
jge
or
jmp
cmp
jle
mov
mov
mov
cmp
jge
or
jmp
cmp
jle
mov
mov
mov
cmp
mov
add
jl
cmp
jae
mov
or
jmp
test
jl
jg
cmp
jbe
mov
xor
push
lea
mov
add
add
add
decl
add
mov
mov
push
lea
push
call
mov
test
jge
xor
jmp
cmp
jle
mov
mov
mov
test
jge
xor
jmp
cmp
jle
mov
mov
mov
test
jge
xor
jmp
cmp
jle
mov
mov
mov
test
jge
xor
jmp
cmp
jle
mov
mov
push
add
push
call
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
xor
cmp
push
mov
setne
orl
mov
mov
mov
xor
cmp
add
setne
orl
mov
xor
cmp
movl
setne
orl
orl
mov
mov
xor
mov
cmp
mov
setne
orl
mov
xor
cmp
mov
setne
orl
mov
xor
cmp
mov
setne
orl
mov
xor
cmp
mov
setne
orl
mov
mov
xor
cmp
setne
or
mov
mov
mov
xor
cmp
setne
orl
mov
mov
mov
xor
cmp
setne
orl
mov
mov
mov
xor
cmp
setne
orl
mov
mov
mov
xor
cmp
setne
orl
mov
orl
orl
orl
mov
mov
mov
mov
orl
push
mov
test
sbb
xchg
add
add
decl
clc
inc
setl
orl
mov
dec
and
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
mov
mov
push
push
push
mov
call
mov
add
dec
jbe
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
push
push
call
push
call
xor
cmp
setl
dec
and
add
mov
mov
mov
push
mov
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
mov
xor
push
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
call
mov
mov
inc
add
jne
lea
push
push
call
test
je
cmp
je
call
jmp
mov
cmp
je
push
call
mov
mov
push
push
call
mov
push
push
call
mov
mov
cmp
je
cmp
je
push
push
call
mov
mov
cmp
je
push
push
call
jmp
mov
mov
push
push
push
push
call
add
mov
add
add
cmp
je
push
push
call
mov
add
or
call
mov
cmp
jne
mov
cmp
je
mov
mov
push
mov
call
mov
cmp
jne
lea
push
push
call
test
je
mov
mov
mov
mov
lea
lea
mov
cmp
jne
sub
add
add
cmp
jae
xor
mov
test
je
push
call
inc
add
pop
and
mov
cmp
je
push
call
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
je
mov
mov
cmp
je
mov
lea
push
lea
push
call
test
je
mov
mov
cmp
jne
mov
cmp
je
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
add
add
pop
and
mov
cmp
je
mov
mov
cmp
je
mov
mov
add
add
les
add
xchg
adc
add
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
mov
cmp
je
neg
sbb
and
add
mov
lea
push
lea
push
call
test
jne
mov
cmp
je
lea
push
push
call
lea
push
push
call
cmpl
je
push
call
orl
flds
mov
add
xor
cmp
add
setne
fnstsw
test
jp
flds
flds
fucompp
fnstsw
test
jp
xor
jmp
movzbl
movzbl
sub
jne
movzbl
movzbl
leave
inc
add
movzbl
movzbl
test
mov
add
mov
add
rol
cli
pop
or
jmp
mov
mov
cmp
jne
mov
cmp
jne
xor
jmp
mov
cmpl
je
xor
jmp
mov
test
jne
test
je
orl
push
push
push
call
add
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
lea
push
call
call
cmpl
je
call
cmpl
je
call
cmpl
je
mov
push
call
mov
push
push
call
test
je
mov
test
je
mov
test
je
mov
push
push
push
push
call
test
jne
cmp
je
push
call
call
mov
push
call
call
cmpl
je
mov
mov
inc
add
mov
push
push
call
orl
cmpl
pop
pop
pop
pop
je
mov
push
push
push
push
call
add
mov
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
push
push
call
push
push
call
cmpl
movl
je
push
push
push
push
call
push
call
movl
pop
mov
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
mov
test
je
cmpl
jne
push
push
push
push
lea
call
push
call
mov
test
je
cmpl
push
mov
push
mov
mov
movl
jle
mov
mov
movl
mov
cmpw
jne
cmpl
je
cmp
jge
mov
push
call
push
call
mov
push
push
push
call
push
call
push
call
test
je
mov
sub
mov
lea
mov
add
add
addl
mov
mov
push
push
push
push
call
or
sub
lea
mov
add
mov
inc
add
cmp
mov
mov
jl
mov
test
je
test
je
push
call
push
call
push
sub
add
push
push
call
push
call
push
call
test
je
mov
mov
mov
test
jle
mov
cmpw
jne
cmpl
jne
movl
jmp
push
call
push
call
push
call
push
call
jmp
mov
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
sar
lea
add
sub
jne
mov
pop
pop
mov
pop
xor
pop
add
ret
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
call
cmp
jl
push
mov
push
jmp
push
mov
push
push
mov
call
add
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
mov
push
movzwl
push
mov
lea
shr
push
mov
cmp
ja
movzbl
jmp
cmp
jne
push
lea
push
push
push
call
mov
push
push
push
push
lea
push
call
cmp
je
mov
jmp
push
push
push
call
jmp
push
push
call
neg
sbb
xor
neg
cmp
setne
xor
test
setne
xor
je
mov
jmp
cmp
jne
push
lea
push
push
call
add
push
lea
push
call
test
je
push
lea
push
push
call
add
xor
mov
jmp
push
add
lea
push
push
call
mov
add
push
lea
push
push
xor
push
mov
call
push
push
call
test
jl
push
lea
push
call
test
je
push
lea
push
push
call
add
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
mov
call
push
push
push
call
push
push
push
push
call
push
call
movl
mov
pop
pop
pop
pop
xor
mov
call
add
ret
test
add
lcall
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
sub
mov
xor
mov
cmpl
push
mov
push
mov
push
mov
je
mov
lea
cmp
ja
jmp
push
push
push
call
push
call
mov
jmp
mov
mov
push
push
call
movl
movl
jmp
mov
mov
push
push
push
call
mov
add
push
call
push
push
push
call
movl
jmp
push
push
push
push
push
call
jmp
mov
cmp
jae
mov
cmp
je
add
cmp
ja
lea
mov
lea
push
push
push
lea
push
call
cmpw
mov
je
mov
mov
push
mov
lea
lea
push
push
call
test
je
movzwl
mov
mov
mov
inc
add
mov
xlat
push
push
push
push
call
push
call
movl
mov
pop
pop
pop
xor
mov
call
add
ret
shrl
add
inc
add
imul
insb
inc
add
add
je
or
or
adc
mov
xor
cmp
ja
je
sub
je
sub
je
sub
jne
push
push
push
push
push
call
pop
mov
pop
ret
mov
push
mov
push
push
push
call
mov
pop
pop
ret
call
mov
pop
pop
ret
mov
push
push
push
call
mov
call
push
push
call
push
push
push
call
add
adc
sub
je
sub
jne
mov
push
mov
push
push
push
call
mov
pop
pop
ret
mov
push
mov
push
push
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
mov
push
push
mov
mov
mov
lea
rep
mov
mov
mov
mov
push
lea
push
call
mov
shr
mov
fildl
mov
fldl
sub
shr
fdivr
mov
fxch
fstpl
fildl
fdivp
fstpl
fldl
fstpl
fldl
fstpl
call
push
call
push
push
call
mov
mov
mov
push
lea
push
call
lea
push
lea
push
call
mov
movzbl
movzbl
shl
movzbl
or
shl
or
push
push
call
mov
mov
cltd
sub
push
mov
sar
push
push
push
push
push
call
push
push
call
push
push
call
mov
push
sub
push
push
push
push
push
mov
call
push
push
call
push
push
call
movl
test
jle
mov
add
mov
imul
mov
shr
add
mov
jmp
lea
mov
mov
cltd
idiv
push
inc
push
mov
cltd
sub
sar
push
mov
sub
mov
push
push
push
call
mov
inc
cmp
mov
jl
mov
mov
mov
mov
and
cltd
mov
idiv
mov
lea
mov
fildl
mov
sar
fdivl
and
mov
shr
fstpl
fildl
fldl
mov
lea
push
fdivr
push
fxch
fstpl
fildl
fdivp
fstpl
fld1
fstpl
call
mov
movzbl
movzbl
shl
movzbl
or
shl
or
push
push
call
mov
cltd
and
add
mov
mov
cltd
sub
mov
sar
push
sar
add
push
mov
sub
push
push
push
push
mov
call
push
push
call
push
push
call
mov
cmp
mov
jge
mov
add
mov
imul
mov
shr
add
mov
jmp
mov
mov
cltd
idiv
push
mov
inc
push
mov
cltd
sub
mov
push
sar
sub
push
push
push
call
mov
inc
cmp
mov
jl
mov
mov
mov
mov
mov
inc
inc
push
mov
mov
call
mov
push
push
call
mov
push
push
add
push
push
push
push
call
push
lea
push
push
push
push
call
push
call
push
push
call
mov
mov
push
push
add
push
push
push
push
call
add
add
push
lea
push
push
push
push
call
mov
mov
mov
lea
mov
rep
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
sub
push
push
xor
push
call
mov
mov
cmp
jne
pop
xor
pop
add
ret
push
mov
mov
cmp
push
mov
mov
jl
cmp
jae
shl
mov
mov
mov
mov
jmp
cmp
jne
movl
mov
push
call
mov
test
je
mov
mov
mov
push
push
push
call
mov
test
je
push
push
call
mov
mov
test
je
mov
mov
mov
shl
mov
test
jl
cmp
jg
mov
call
jmp
movl
and
add
mov
mov
imul
mov
push
add
sar
push
mov
push
shr
push
mov
add
call
jmp
mov
and
cmp
jne
push
call
push
push
call
mov
push
push
call
push
push
call
push
push
push
push
push
push
call
mov
mov
and
add
mov
imul
add
sar
mov
shr
add
mov
mov
push
push
call
push
push
call
xor
test
jle
lea
mov
imul
mov
shr
add
mov
cltd
sub
sar
mov
mov
jmp
mov
mov
cltd
idiv
push
inc
push
mov
cltd
sub
mov
push
sar
sub
push
push
push
call
inc
cmp
jl
xor
mov
mov
lea
push
mov
mov
mov
shl
mov
push
push
push
mov
mov
call
jmp
test
je
push
call
push
push
call
push
call
push
push
call
push
push
push
push
push
push
call
push
call
xor
mov
mov
mov
lea
mov
mov
mov
add
mov
sub
cltd
sub
sar
cmp
mov
jl
mov
mov
mov
sub
cltd
sub
sar
add
add
mov
mov
mov
mov
push
push
mov
mov
call
mov
mov
push
inc
push
push
push
lea
push
push
call
jmp
test
je
push
call
push
push
call
push
push
call
push
push
call
mov
cltd
push
sub
push
mov
mov
sar
push
push
push
push
call
push
push
call
push
push
call
mov
push
push
mov
sub
push
push
push
push
call
mov
mov
mov
push
push
call
push
push
push
mov
call
push
push
call
mov
mov
cltd
and
add
mov
mov
add
sar
mov
mov
mov
sub
mov
sub
mov
imul
mov
shr
add
mov
add
mov
mov
mov
sub
mov
imul
mov
mov
shr
push
add
add
push
mov
mov
push
push
mov
mov
mov
call
mov
mov
mov
push
push
push
call
push
lea
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
mov
push
push
push
add
push
add
push
push
call
mov
mov
push
push
push
add
push
add
push
push
call
mov
mov
push
push
push
add
push
add
push
push
call
mov
push
push
call
push
call
jmp
mov
mov
push
push
call
push
mov
call
push
push
call
push
push
call
push
push
push
push
push
push
call
mov
push
push
call
mov
push
call
mov
mov
push
push
call
pop
pop
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
push
push
mov
call
mov
inc
add
push
push
push
push
push
mov
call
push
call
push
push
push
push
push
mov
call
push
call
cmp
jne
cmpl
jne
xor
mov
lea
cmpl
je
inc
add
cmp
jb
mov
shl
and
or
mov
and
shl
or
push
push
push
call
cmpl
je
push
push
call
mov
lea
push
push
call
mov
sub
mov
sub
mov
push
push
push
call
push
push
push
push
call
push
call
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
push
push
mov
mov
mov
push
mov
call
mov
xor
cmp
setl
push
push
mov
call
mov
inc
add
mov
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
call
push
push
mov
push
push
call
push
push
push
push
call
push
push
push
push
call
push
call
push
mov
push
push
push
push
call
push
call
push
push
push
push
push
call
push
call
push
push
push
push
push
call
push
call
push
push
push
push
push
call
push
call
push
push
call
push
push
push
push
mov
call
mov
movl
lea
mov
push
lea
push
push
call
mov
add
lea
push
push
push
push
call
push
push
mov
push
push
call
mov
inc
rol
mov
cmp
jbe
push
mov
call
mov
mov
push
push
call
inc
add
add
fisttpl
add
add
push
push
call
push
call
add
cmp
jb
jmp
push
push
call
mov
push
push
call
push
push
call
mov
push
push
call
push
push
call
push
push
mov
push
push
call
push
push
push
push
call
mov
push
push
call
push
push
push
push
call
mov
push
push
call
push
push
push
push
call
mov
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
call
push
push
mov
push
push
call
push
push
push
push
call
push
push
call
push
push
mov
push
push
call
push
push
push
push
call
push
push
call
push
push
mov
push
push
call
push
push
push
push
call
push
push
call
push
push
mov
push
push
call
push
push
push
push
call
mov
movl
mov
cmpl
je
testb
jne
mov
mov
push
push
call
mov
mov
cmp
jne
mov
inc
push
push
lea
push
jmp
cmp
jne
mov
add
push
push
lea
push
call
lea
add
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
inc
add
mov
mov
cmp
jb
mov
push
push
call
push
push
push
push
call
push
push
push
push
call
mov
push
push
push
push
movl
call
mov
push
push
push
push
mov
call
push
push
push
push
call
push
push
call
push
push
mov
push
push
call
push
push
push
push
call
flds
fmull
call
push
push
push
push
call
push
push
call
push
push
mov
push
push
call
push
push
push
push
call
flds
fmull
call
push
push
push
push
call
pop
pop
pop
pop
mov
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
inc
add
mov
push
mov
push
mov
cmp
jne
movl
jmp
test
je
cmp
jne
push
push
call
mov
push
push
push
push
call
mov
sub
push
push
push
push
call
mov
add
test
je
cmp
jne
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
add
test
je
cmp
jne
push
push
call
push
push
push
push
mov
call
mov
movl
test
jle
lea
mov
mov
push
push
push
push
call
mov
mov
mov
shl
cmp
je
inc
cmp
mov
jl
jmp
mov
push
push
push
push
call
mov
test
je
cmp
jne
push
push
call
mov
push
add
push
push
push
call
mov
test
je
cmp
jne
push
push
call
mov
push
add
push
push
push
call
mov
test
je
cmp
jne
push
push
call
mov
push
add
push
push
push
call
mov
test
je
cmp
jne
push
push
call
mov
push
push
push
push
call
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
mov
mov
test
jl
cmp
jae
shl
mov
xor
test
jl
cmp
jae
mov
dec
cmp
ja
mov
xor
and
xor
mov
mov
mov
jmp
cmp
jne
mov
jmp
mov
mov
and
cltd
mov
idiv
mov
mov
sar
and
shr
mov
mov
mov
xor
cmp
mov
mov
jl
cmp
jae
shl
mov
mov
jmp
cmp
jne
movl
mov
shr
not
and
mov
mov
jmp
mov
push
mov
mov
push
push
call
push
call
mov
add
mov
cmp
jb
mov
shr
not
and
mov
movl
jmp
lea
mov
mov
mov
mov
push
push
push
call
push
call
mov
add
mov
cmp
jb
mov
push
push
push
push
push
call
push
call
mov
push
push
push
push
call
mov
add
push
push
push
push
push
call
push
call
mov
push
push
push
push
call
mov
add
push
push
push
push
push
call
push
call
mov
push
push
push
push
call
add
xor
cmpl
jne
mov
mov
push
push
push
push
call
mov
test
je
cmp
jne
flds
fmull
faddl
faddl
fstpl
mov
push
push
push
push
push
call
push
call
flds
fmull
faddl
faddl
fstpl
mov
push
push
push
push
call
mov
add
test
je
cmp
jne
flds
fmull
faddl
faddl
fstpl
mov
push
push
push
push
push
call
push
call
flds
fmull
faddl
faddl
fstpl
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
push
push
mov
mov
push
mov
push
call
mov
add
cmp
ja
movzbl
push
mov
jmp
mov
push
push
push
push
push
call
mov
jmp
mov
push
push
push
push
push
call
mov
jmp
mov
push
push
push
push
push
call
push
push
push
push
call
jmp
mov
push
push
push
push
push
call
push
push
push
push
call
jmp
mov
push
push
push
push
push
call
push
push
push
push
mov
call
fildl
fdivl
fstps
jmp
mov
push
push
push
push
push
call
push
push
push
push
mov
call
fildl
fdivl
fstps
add
mov
push
push
push
call
push
push
push
push
movl
call
push
call
pop
pop
pop
pop
ret
push
inc
add
addl
scas
addl
dec
addb
push
push
add
push
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
int3
int3
int3
int3
push
mov
movzwl
push
mov
push
mov
mov
push
xor
add
shr
mov
cmp
ja
movzbl
push
mov
inc
add
mov
push
push
push
push
call
cmp
je
mov
jmp
mov
push
push
push
push
call
cmp
je
mov
jmp
cmp
jne
push
push
mov
push
push
call
cmp
je
push
push
push
push
call
mov
mov
shl
cmp
je
mov
jmp
add
add
test
add
add
mov
push
push
call
cmp
je
push
push
push
push
call
cmp
je
mov
jmp
cmp
jne
push
push
mov
push
push
call
cmp
je
push
push
push
push
call
cmp
je
add
jmp
cmp
jne
push
push
mov
push
push
call
cmp
je
push
push
push
push
call
cmp
je
mov
jmp
cmp
jne
mov
push
push
push
push
call
cmp
je
cmp
je
mov
jmp
cmp
jne
mov
push
push
mov
inc
add
add
push
call
cmp
je
push
push
push
push
mov
call
mov
mov
mov
push
push
push
call
pop
pop
pop
mov
pop
pop
ret
mov
cmp
jne
xor
movl
mov
mov
mov
test
jl
cmp
jg
mov
mov
call
mov
mov
mov
call
xor
cmp
setne
push
push
push
or
call
mov
addl
inc
cmp
jb
in
leave
inc
add
je
mov
mov
push
push
push
call
push
push
push
push
call
push
call
movl
pop
pop
pop
mov
pop
pop
ret
mov
mov
call
mov
mov
mov
call
xor
cmp
setne
push
push
push
mov
call
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
fstps
flds
fstps
lea
mov
mov
call
push
push
push
call
inc
cmp
jb
push
call
jmp
lea
xor
test
pop
test
fwait
test
fldl
add
addl
aaa
mov
add
inc
add
test
add
add
add
or
or
or
or
or
or
or
or
or
or
or
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
push
cmp
ja
jmp
mov
mov
push
push
push
call
push
call
mov
mov
pop
ret
mov
mov
mov
push
push
call
movl
movl
mov
pop
ret
mov
mov
mov
push
push
push
call
mov
add
push
call
mov
push
push
push
call
movl
mov
pop
ret
mov
push
push
push
push
push
call
mov
pop
ret
lret
add
xchg
lea
inc
add
xchg
cmp
push
mov
push
push
call
mov
xor
cmp
ja
je
sub
je
sub
je
sub
jne
push
push
push
push
push
call
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
call
pop
mov
pop
ret
mov
cmp
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
lea
push
push
push
xor
call
test
je
fldl
mov
push
push
sub
fstpl
fldz
fstpl
fildl
test
jge
faddl
fdivl
lea
fstpl
push
call
fmull
fnstcw
mov
sub
push
push
lea
push
lea
push
push
lea
push
call
push
stos
shll
orl
add
jmp
enter
jo
jnp
mov
add
add
add
cld
add
add
add
push
fiaddl
aad
lods
add
std
lahf
movsb
test
cli
add
add
adcb
mov
in
in
pop
popl
push
push
lea
push
push
lea
push
push
push
call
pop
add
cmpsb
testb
fsincos
jo
add
outsl
push
add
stc
mov
movsb
fs
jno
inc
dec
add
arpl
add
jecxz
add
out
jmp
fidivs
jbe
jnp
add
pop
push
push
push
lea
push
push
push
call
mov
add
add
jl
sti
outsl
movsl
mov
add
jne
mov
data16
fiaddl
repnz
inc
pop
mov
dec
imul
dec
dec
addb
xchg
add
popa
fnstenv
jae
pop
jo
jmp
pop
sub
pop
push
push
push
push
push
push
call
fs
add
mov
add
mov
pop
out
fdivs
stc
add
mov
repnz
add
xchg
call
push
fldcw
pop
mov
inc
ffreep
add
add
dec
ljmp
lcall
push
add
call
push
push
push
push
push
push
call
leave
mov
add
xchg
add
lret
je
ljmp
rorl
xchg
dec
mov
add
push
in
mov
add
call
push
push
push
push
push
push
call
add
fwait
cli
xchg
ffree
push
add
in
cmpsl
add
insb
add
add
add
add
lods
mov
add
mov
add
add
mov
gs
add
add
popf
add
test
add
mov
inc
add
lcall
add
sahf
push
push
push
push
push
push
lea
push
push
call
add
jle
imul
repnz
in
dec
jp
popf
dec
push
movsb
loop
mov
mov
hlt
out
in
inc
imul
add
dec
jp
push
add
cmpsb
mov
pop
into
push
add
add
push
mov
add
lahf
inc
sub
pop
call
push
lea
push
lea
push
push
call
xchg
inc
dec
inc
mov
push
add
add
xlat
inc
add
popl
add
add
add
movsl
imul
add
add
push
nop
add
gs
addl
add
test
inc
sub
pop
jmp
ret
push
push
push
push
push
push
push
push
call
add
add
dec
orl
pushf
pop
out
fstpt
adcb
bound
add
dec
add
add
inc
dec
mov
add
add
inc
add
stos
cltd
xchg
repnz
jmp
pop
add
dec
fs
imul
in
int3
rcr
mov
add
out
loope
mov
add
pop
mov
mov
push
push
call
aad
xchg
mov
mov
jmp
push
movsl
mov
fistl
loop
add
std
mov
add
add
add
pop
in
xlat
mov
add
add
clc
pop
add
push
push
lea
push
call
mov
jne
pop
add
testl
add
jnp
movsl
push
cld
pop
les
add
call
iret
pop
rolb
rcrl
xchg
in
add
add
jne
add
jge
xchg
leave
imull
in
hlt
lcall
ret
add
add
push
push
call
add
in
xchg
ja
push
jecxz
fcoml
add
add
cmpsl
push
hlt
hlt
ljmp
add
dec
add
scas
test
sub
pop
add
push
push
push
push
push
push
push
push
call
iret
push
mov
mov
add
dec
add
add
xchg
mov
sahf
cmpsl
add
clc
test
push
jl
stc
int3
add
add
jl
add
add
jl
add
add
jmp
sti
ret
call
pushf
xchg
mov
mov
add
sub
pop
mov
xor
push
push
dec
push
sub
add
ror
sub
shl
lea
sub
pop
lea
lea
shr
pop
push
push
push
lea
push
push
push
lea
push
call
push
nop
cmc
inc
fcomip
mov
add
mov
add
lahf
add
fwait
mov
add
add
mov
add
stos
mov
jnp
add
mov
pop
dec
in
add
loop
add
pop
push
add
add
gs
jae
add
add
test
add
sub
pop
pushl
call
push
push
call
sti
add
mov
add
add
dec
add
test
add
add
add
loope
xchg
add
lret
add
add
in
clc
pop
mov
push
push
push
lea
push
call
pop
add
clc
add
mov
mov
jno
outsl
add
into
mov
fiaddl
les
add
mov
cltd
stc
outsl
in
add
imul
jns
mov
jl
sbbl
pop
add
mov
popf
lods
dec
add
les
in
add
test
add
ja
push
lock
lea
push
push
lea
push
push
push
push
push
push
push
push
call
enter
dec
jb
jns
icebp
pop
lods
add
stos
fwait
add
mov
add
cmpsl
ja
out
mov
mov
mov
push
add
shlb
roll
push
add
test
lcall
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
pop
add
add
pushf
stos
adcl
mov
mov
cltd
add
mov
add
jge
add
jne
add
jnp
add
cld
add
add
dec
adcb
pop
add
lods
add
add
sub
pop
pushl
push
push
push
call
add
push
scas
add
add
add
mov
mov
xchg
call
dec
add
add
jne
add
and
rclb
add
out
add
test
push
sub
pop
pushl
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
int3
add
in
add
xchg
ja
data16
cwtl
out
add
test
fisttpl
roll
add
bound
add
add
jno
decb
pop
int
mov
add
clc
jne
orl
push
call
push
push
push
push
call
add
jb
xchg
scas
dec
mov
mov
add
stos
add
xchg
imul
loop
add
stc
lret
arpl
inc
sub
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
call
add
lods
scas
add
clc
add
scas
mov
leave
jecxz
lea
add
lret
xchg
shlb
inc
int3
inc
add
add
lahf
sahf
scas
out
push
fs
add
sub
pop
pushl
call
push
push
add
lea
push
or
inc
add
sub
xor
rol
sub
dec
pop
sub
xor
pop
push
push
lea
push
call
inc
jnp
out
add
addr16
les
imul
mov
dec
fisubs
push
jmp
lods
add
mov
sub
pop
pushl
push
push
push
lea
push
push
push
push
call
add
mov
mov
dec
add
orl
inc
add
loope
iret
sahf
loop
lahf
movsb
test
addr16
out
outsl
test
bound
mov
add
sub
pop
call
push
push
push
add
sub
xor
ror
push
or
inc
add
add
sub
sub
pop
rol
pop
push
lea
push
push
lea
push
push
push
call
js
pop
add
icebp
jnp
stos
in
push
mov
inc
stos
mov
xchg
add
xchg
cwtl
add
mov
out
push
mov
xchg
lcall
push
push
lea
push
call
add
imul
in
in
cwtl
lcall
fs
xlat
call
roll
add
insb
dec
xlat
fsts
popl
fcmovnb
jns
enter
add
lods
add
gs
imul
jo
leave
add
add
movsb
lock
dec
stc
push
addb
pop
call
mov
push
push
push
push
call
mov
push
roll
add
add
jecxz
add
mov
lods
jl
mov
test
xchg
add
mov
aad
inc
cmc
add
into
enter
movsl
xchg
imul
loope
add
sti
ljmp
lcall
push
push
push
push
push
push
push
push
push
call
fmul
add
movl
add
mov
enter
add
std
gs
add
cmpsl
insb
add
add
add
fcomps
xchg
add
jge
inc
add
add
pop
hlt
push
push
push
push
push
call
movsl
pop
fxch
jbe
loopne
push
add
cmc
lods
mov
add
jbe
scas
jns
push
add
pusha
mov
dec
lds
aad
js
movb
inc
jns
sahf
js
add
add
inc
mov
pop
xchg
dec
pop
jp
aam
add
fisubrl
dec
cld
xchg
sub
pop
add
add
push
push
push
push
push
push
push
call
add
inc
rorl
in
pushf
cmpsb
fldl
add
popf
dec
mov
imul
scas
xchg
enter
add
cmpsl
add
stos
add
sub
pop
add
push
push
push
push
lea
push
lea
push
call
cli
cwtl
sahf
cmpsl
inc
fdivrp
test
push
fcomp
outsl
mov
add
mov
enter
shlb
inc
jecxz
add
aad
nop
flds
fstl
inc
aam
mov
fisubrs
push
leave
filds
add
hlt
add
dec
shlb
mov
mov
test
mov
xor
push
push
push
lea
push
lea
push
push
call
add
add
add
imul
add
add
add
popa
xchg
out
jne
pop
lods
add
dec
add
fst
pop
add
xlat
bound
sti
movsb
add
arpl
add
std
add
data16
xlat
add
mov
roll
add
in
call
add
push
push
push
push
push
push
push
lea
push
push
call
add
lcall
add
movsb
cmpsb
xchg
ftst
icebp
movb
mov
add
jge
push
mov
pop
mov
xchg
pop
jbe
mov
ja
addr16
add
std
mov
lds
add
inc
inc
in
loope
xchg
add
add
in
stos
in
add
out
add
movsl
add
push
jo
in
loopne
mov
push
push
push
push
push
push
push
lea
push
push
push
call
push
add
add
jle
mov
add
jmp
dec
jmp
loop
je
add
mov
add
add
pop
inc
aam
lahf
xchg
mov
repnz
jae
jge
inc
add
inc
lods
lds
lods
jne
stc
add
add
add
sub
pop
xor
push
push
lea
push
lea
push
push
push
call
mov
add
arpl
add
jge
mov
cwtl
add
add
arpl
push
push
scas
lahf
push
in
jl
fs
mov
add
mov
jl
add
mov
add
movsb
pusha
add
test
stc
dec
imul
inc
int3
mov
call
add
push
push
push
push
push
push
push
call
stos
add
add
out
xchg
dec
add
add
nop
jecxz
fst
mov
push
add
sahf
fdiv
mov
xchg
loopne
add
insb
add
add
mov
jecxz
pop
rcr
test
in
pop
mov
push
push
lea
push
lea
push
push
push
push
call
out
js
add
xchg
push
mov
jge
lock
add
add
in
add
into
mov
popa
add
scas
frstor
add
add
add
test
in
in
lcall
icebp
call
push
push
push
push
lea
push
lea
push
call
jge
ja
rcr
call
nop
test
adcb
add
inc
std
add
out
add
add
pop
push
mov
add
xchg
add
add
in
add
roll
jecxz
into
mov
jo
jl
ficompl
sub
pop
push
push
push
lea
push
push
push
push
push
push
call
in
fistpl
add
add
add
xchg
iret
add
pop
call
add
jmp
js
add
fists
add
add
add
into
cmc
addb
fnsave
popa
in
add
mov
jnp
stos
lods
add
ljmp
lahf
sub
pop
mov
push
push
push
push
push
push
push
call
add
sahf
dec
add
add
add
arpl
add
jns
ret
int3
f2xm1
add
mov
out
add
mov
add
add
inc
ljmp
add
mov
xchg
mov
add
lcall
lock
enter
push
push
call
enter
add
jge
push
add
add
cmpsb
imul
add
pushf
push
xchg
jl
test
mov
add
add
inc
dec
pusha
loop
filds
jl
dec
faddl
in
clc
add
mov
pusha
leave
sub
pop
pop
rep
push
push
push
push
push
push
call
mov
pop
jno
addl
js
add
xchg
call
std
lret
int
add
int
lds
roll
push
add
aad
add
les
pop
sub
pop
pop
mov
push
push
push
lea
push
push
call
add
add
fs
mov
jbe
add
mov
dec
stos
add
icebp
add
lret
mov
push
jle
pusha
push
cltd
fcoms
add
add
in
in
pop
add
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
fwait
add
cli
add
mov
add
movsb
add
pop
mov
add
dec
add
jo
mov
shl
imul
pop
add
bound
add
mov
add
jecxz
inc
mov
movsl
fildl
fldl
add
outsl
pop
int3
add
lcall
ret
add
add
push
push
push
push
lea
push
lea
push
push
call
lahf
add
fucomip
popa
add
add
pushf
inc
pop
jae
mov
add
out
mov
xchg
add
imul
lcall
add
push
call
pop
pop
inc
add
add
push
push
push
push
push
lea
push
push
lea
push
push
call
lcall
mov
add
jne
lock
fnstenv
popa
xchg
add
mov
pop
cmc
push
stc
inc
fildll
in
jle
lock
add
cmc
add
push
pop
xchg
pop
arpl
arpl
mov
neg
mov
add
stc
pop
mov
out
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
lcall
mov
inc
pop
dec
add
mov
add
lock
jle
push
pushf
mov
subb
add
add
fadd
add
lcall
lock
lret
push
push
call
rcrb
jp
add
mov
popa
add
xchg
add
stc
add
mov
jno
jge
cwtl
lret
mov
add
jno
fidivl
test
add
enter
testl
call
bound
mov
pushf
push
jbe
xor
push
push
push
push
call
add
loope
add
lea
add
stos
cmpb
ljmp
xchg
scas
add
add
xchg
data16
mov
ffreep
clc
fistps
dec
add
sub
pop
mov
push
push
push
push
push
push
call
notb
add
pop
fiadds
int3
add
add
std
pop
je
jecxz
pop
add
lock
add
imul
lret
out
xchg
push
mov
arpl
data16
call
add
mov
add
inc
add
xchg
cld
mov
cwtl
nop
add
fisubl
add
add
lcall
icebp
call
dec
aam
push
lea
push
push
push
push
call
enter
add
loop
shl
imul
ret
add
push
inc
inc
fisttpl
jo
fwait
dec
cmc
int3
jp
cltd
xchg
add
lcall
ret
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
jno
dec
nop
add
mov
roll
pop
mov
pop
into
mov
cld
int
mov
lock
rol
int
inc
pop
xlat
js
add
lcall
fsubrs
push
shrb
out
add
add
add
ljmp
ror
sub
lea
add
pop
rol
lea
pop
push
push
push
call
push
mov
lock
lret
cli
push
ljmp
negb
bound
fsubr
add
mov
mov
fbstp
fisubs
add
in
hlt
lcall
jne
push
push
push
push
push
lea
push
push
call
pop
mov
cmp
jmp
add
lods
mov
mov
out
mov
add
repnz
insb
nop
push
add
pop
sahf
in
lods
add
pop
add
xchg
jno
lcall
fsub
sub
pop
call
push
push
push
sub
push
push
pop
add
xor
shl
lea
sub
lea
rol
sub
pop
sub
lea
inc
pop
push
lea
push
push
push
push
lea
push
call
cmc
add
pushf
inc
test
inc
pusha
out
dec
dec
add
add
add
add
call
add
lock
xchg
add
test
sub
pop
push
push
push
lea
push
call
add
leave
imul
and
add
loopne
inc
xchg
inc
add
in
pop
lret
add
mov
aam
ret
add
nop
insb
bound
add
xchg
loopne
add
idivl
sub
pop
push
call
push
pop
mov
push
push
add
rol
dec
pop
push
mov
push
sub
add
pop
add
add
push
lea
push
push
lea
push
call
cltd
mov
repnz
movsb
xchg
into
jl
xchg
mov
int
int3
add
add
add
add
lods
add
jecxz
mov
shlb
add
nop
fistpll
jbe
jno
in
lock
lcall
ret
sarl
add
mov
push
lea
push
lea
push
call
xchg
cmpsl
jne
add
add
add
js
jns
adc
add
hlt
add
xchg
test
mov
lret
hlt
mov
xorl
inc
pop
aad
xchg
roll
add
dec
repnz
xchg
mov
in
in
hlt
lcall
idiv
add
push
push
lea
push
push
call
dec
add
cmpsb
add
add
add
mov
dec
test
mov
rcl
push
xchg
out
add
fwait
add
add
js
mov
lods
add
add
add
shl
push
push
add
fiadds
incb
mov
push
add
lea
rol
pop
xor
push
push
push
push
push
call
pop
add
hlt
push
xlat
lods
add
xchg
add
call
add
inc
in
inc
add
fsubr
aam
add
test
mov
lock
push
push
push
push
push
lea
push
lea
push
call
inc
add
jge
jbe
pop
add
pushw
in
ljmp
add
push
dec
add
dec
into
xchg
lcall
stc
sub
pop
pop
push
xor
pop
mov
push
lea
push
push
push
push
push
push
push
call
inc
sahf
add
shlb
js
sti
add
fs
mov
lahf
push
cmc
cmpsb
call
jmp
fcompl
fisttps
je
inc
iret
fisubrl
pop
add
imul
jge
inc
add
lcall
icebp
push
movsb
push
dec
xor
pop
mov
push
push
push
push
lea
push
call
add
sbbb
inc
xor
scas
popa
mov
add
pusha
inc
add
movsb
add
iret
imul
lods
jge
arpl
movsl
add
in
pushf
out
std
jecxz
add
mov
add
add
add
les
lret
add
add
jne
push
hlt
add
icebp
call
cmp
test
push
push
call
lock
add
add
add
add
inc
mov
push
add
cmpsb
cwtl
jo
add
dec
add
push
movsb
add
in
add
roll
popl
leave
je
mov
push
shr
pop
xor
push
shr
add
dec
pop
mov
push
add
add
pop
xor
push
rol
add
pop
add
push
push
push
push
push
push
lea
push
push
lea
push
push
call
jae
icebp
pop
mov
add
jge
inc
jl
cmc
cwtl
xchg
add
rcrb
mov
add
inc
bound
mov
mov
out
mov
mov
les
jmp
dec
cli
mov
inc
add
dec
jmp
add
loopne
add
imul
fdivr
lcall
jne
push
push
lea
push
push
push
push
push
push
push
push
call
popa
scas
movsb
add
rcll
fistl
imul
loopne
add
add
add
xchg
inc
add
fs
mov
leave
popl
add
loope
add
add
div
push
add
dec
popf
fisubrl
jnp
add
lcall
mov
push
push
push
push
push
lea
push
push
push
call
scas
pop
fwait
shll
mov
add
mov
stos
call
jmp
add
add
aad
fmull
mov
test
add
jno
add
fdiv
jno
add
jnp
filds
mov
inc
add
mov
lcall
jb
add
movsl
jo
add
xor
push
shl
pop
add
pop
push
lea
push
push
push
call
outsl
fwait
add
xchg
add
test
fs
push
push
cmp
add
add
sar
into
ficoml
cmpsb
add
roll
pop
add
loop
add
xchg
js
lahf
add
stos
jecxz
add
in
int3
add
rorl
sub
pop
rep
push
push
push
push
push
push
lea
push
call
inc
lods
test
lret
add
add
jb
test
stc
add
add
add
pop
add
lods
fcomps
stc
add
push
int
leave
add
bound
fcmove
rorb
add
pop
into
jb
pop
add
add
roll
mov
push
data16
xchg
out
add
inc
cmpsl
fwait
out
in
in
lcall
dec
sub
pop
xor
push
rol
shr
pop
or
je
push
push
push
push
push
push
push
push
lea
push
push
call
addr16
dec
cmc
add
dec
iret
popa
add
xchg
xchg
pop
push
push
jp
add
add
mov
mov
lock
lods
add
lea
pushf
je
notl
roll
add
fldl
mov
icebp
mov
jmp
xchg
add
jb
fistps
in
fcomps
repz
push
push
lea
push
lea
push
push
push
call
movsb
dec
roll
add
xchg
popl
mov
cmc
stos
fidivl
loop
mov
sarb
mov
inc
mov
jge
dec
out
mov
mov
add
xchg
add
add
add
sub
pop
add
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
imul
inc
add
nop
jno
lahf
mov
hlt
in
add
add
lds
fldenv
push
add
dec
into
fwait
lahf
jmp
xchg
mov
in
fdivr
lcall
movsb
push
shl
pop
pop
push
push
rol
shr
shr
lea
push
or
not
add
shl
shl
sub
ror
rol
inc
pop
add
add
sub
pop
push
sub
dec
lea
shl
pop
pop
push
push
push
push
push
push
call
enter
add
hlt
jle
int3
add
imul
rcrb
jle
add
mov
add
add
add
clc
arpl
dec
jecxz
scas
add
lcall
jne
push
push
push
push
call
xchg
cmpsl
add
mov
les
mov
rolb
testb
jle
add
add
std
add
inc
add
test
add
xchg
xchg
gs
jp
out
jmp
push
add
add
dec
add
add
test
cwtl
add
incb
sahf
mov
lcall
insl
hlt
mov
push
shl
pop
jmp
push
push
lea
push
lea
push
call
jmp
add
out
push
shrl
add
xorl
add
out
cltd
add
sub
pop
push
mov
push
xor
pop
add
push
lea
push
push
push
call
add
out
lock
add
lcall
out
add
mov
add
mov
imul
add
lock
push
push
push
add
sub
pop
push
push
push
add
not
pop
mov
movl
push
push
lea
push
push
push
push
lea
push
push
push
call
cwtl
scas
stos
inc
movsl
add
add
add
pop
clc
add
out
add
jmp
add
mov
jns
add
add
push
add
jecxz
lea
cwtl
inc
add
add
inc
clc
add
add
push
push
lea
push
push
call
add
push
sahf
push
stos
add
add
add
sahf
inc
cli
jl
js
out
add
mov
mov
add
push
in
add
movb
filds
add
add
add
lock
movl
push
lea
push
push
call
mov
pop
inc
movsl
cwtl
add
pop
mov
mov
add
mov
dec
xorl
cltd
fldcw
lea
icebp
add
xchg
add
add
add
jnp
add
lcall
inc
lock
add
movl
push
rol
ror
pop
dec
jne
mov
push
add
shr
sub
pop
movl
movl
push
pop
movl
push
lea
push
lea
push
push
lea
push
call
cld
add
add
repnz
mov
ljmp
addr16
fsubrl
add
shr
add
cmpsb
addb
inc
add
filds
pop
enter
push
inc
ret
add
rcl
mov
add
add
in
add
mov
mov
sub
pop
movl
movl
push
push
push
push
call
loop
out
popa
add
jb
testl
clc
mov
add
data16
xchg
imulb
xorb
pop
add
add
pop
add
jnp
mov
hlt
movsb
mov
add
dec
add
inc
add
dec
icebp
enter
push
xchg
cmpsb
add
add
nop
add
jl
imul
pop
dec
jne
push
ror
pop
pop
push
push
push
push
lea
push
push
push
call
add
add
jecxz
sahf
add
mov
lret
inc
dec
add
add
test
int
dec
cmpsb
jmp
mov
add
sub
pop
pop
push
lea
push
push
push
push
call
stos
add
out
je
add
mov
test
add
add
add
inc
add
add
jmp
pop
push
add
not
pop
pop
push
ror
sub
pop
leave
push
shr
add
shr
pop
ret
push
shr
sub
add
pop
push
push
lea
push
lea
push
lea
push
push
push
push
call
xchg
fsubrs
rolb
lahf
add
dec
lahf
mov
add
dec
mov
scas
jno
add
fidivrs
ret
out
in
lret
incb
add
add
sahf
outsl
mov
xchg
dec
mov
push
sub
pop
mov
push
push
push
call
mov
xchg
pop
add
jo
popf
add
popf
in
dec
jo
add
add
mov
movsb
les
push
jns
sarl
mov
pop
pop
add
jmp
add
jae
test
fisttps
hlt
lcall
cld
push
lea
pop
push
push
sub
pop
push
push
push
push
lea
push
call
mov
pop
mov
roll
add
stos
lods
add
cli
in
inc
ror
jmp
repnz
mov
aam
in
add
fiadds
stos
lods
push
push
mov
sti
rcr
add
push
nop
movsb
add
add
stc
add
fildl
add
lcall
push
push
push
push
push
lea
push
push
push
call
add
add
xchg
push
dec
testl
xchg
rcl
sahf
outsl
add
dec
mov
int
add
pop
imul
divl
fldcw
pop
addb
mov
add
mov
push
add
in
loopne
push
push
push
xor
rol
sub
push
or
not
add
not
sub
xor
shr
pop
pop
push
rol
add
not
pop
pushl
call
push
push
push
push
push
lea
push
push
call
fadds
add
mov
data16
fsubrs
out
add
data16
jne
mov
lock
out
test
add
add
add
pushf
imul
jbe
add
add
test
cltd
add
loope
rorl
add
dec
add
dec
scas
add
jp
add
mov
mov
call
push
push
sub
not
push
push
pop
add
sub
shl
sub
rol
lea
pop
ror
pop
push
shl
dec
sub
pop
pushl
call
push
lea
push
push
push
push
call
add
pop
add
add
test
test
cltd
add
aam
xchg
fcomip
mov
nop
add
lcall
jne
add
add
inc
push
jne
lods
stc
push
push
add
jae
jnp
inc
lea
mov
dec
sbbb
mov
xchg
add
lret
sub
pop
call
push
push
shl
rol
push
xor
add
ror
lea
sub
add
lea
shl
shl
pop
rol
dec
pop
push
dec
sub
inc
pop
pushl
push
shl
lea
shr
pop
call
push
push
lea
push
call
lock
mov
add
arpl
out
mov
js
jae
in
add
in
inc
cld
lcall
enter
add
loopne
movsb
add
mov
add
add
add
jno
add
in
hlt
pop
call
push
push
rol
add
push
push
pop
add
sub
rol
sub
dec
shr
pop
not
pop
push
add
dec
shl
pop
pushl
push
sub
dec
pop
call
push
push
push
push
call
mov
add
xchg
mov
add
jae
pop
add
add
imul
jb
rorl
add
mov
pop
fbstp
mov
dec
mov
jle
shll
sub
pop
call
push
push
lea
not
shr
push
push
pop
add
inc
rol
sub
shr
pop
xor
pop
push
shr
sub
pop
pushl
push
pop
call
push
shr
rol
pop
call
push
push
ror
ror
add
push
push
pop
add
sub
lea
sub
ror
shl
dec
pop
sub
inc
sub
pop
push
push
call
add
sahf
mov
mov
add
lods
add
fcmovb
add
pop
xchg
iretw
inc
push
arpl
add
inc
mov
add
add
pop
pushl
push
add
sub
pop
call
push
pop
call
push
sub
pop
mov
push
pop
lea
push
ror
shr
dec
pop
sub
push
not
pop
mov
push
push
lea
push
push
push
call
int3
rcll
ljmp
ffreep
filds
mov
outsl
pushf
test
leave
dec
out
add
mov
mov
pusha
mov
int3
mov
add
mov
mov
popl
shl
ret
dec
add
jnp
jmp
add
lcall
call
dec
dec
pop
add
mov
push
lea
push
push
push
push
push
push
push
lea
push
call
aad
add
test
cwtl
pushf
enter
aad
nop
lcall
add
clc
pushfw
jp
lret
roll
enter
lods
mov
insb
add
dec
add
add
pushf
inc
idivl
add
add
mov
add
push
add
ljmp
sub
pop
mov
push
add
lea
rol
shr
pop
add
push
inc
shr
xor
pop
add
mov
push
xor
add
pop
mov
push
push
push
lea
push
push
push
push
lea
push
call
push
fiadds
mov
add
lods
cmpsl
add
jb
xchg
loope
out
add
test
jle
lea
pop
add
push
leave
pop
pop
decb
test
jle
add
inc
stos
add
roll
add
add
pop
fs
cmp
jne
push
ror
pop
mov
push
push
push
push
lea
push
lea
push
push
call
jb
stc
clc
in
scas
cmpsl
mov
test
pop
xchg
xchg
add
fcmovne
inc
addl
add
add
inc
add
lret
insb
lock
pop
mov
roll
add
outsl
lds
out
add
add
stc
dec
je
addb
add
add
jmp
push
not
add
pop
mov
push
push
lea
push
push
push
call
jne
jo
mov
push
out
addb
lcall
add
xchg
add
add
fstpl
add
cltd
lock
scas
movsb
xchg
dec
mov
jae
bound
fwait
out
push
lock
scas
push
inc
int
mov
add
enter
jne
add
repnz
rol
dec
in
sub
pop
mov
sub
jne
push
lea
push
push
push
push
call
add
add
add
add
xchg
rol
in
add
xchg
sbb
lahf
mov
imul
add
into
add
ljmp
inc
test
add
push
jns
xchg
loop
add
push
jns
add
sti
add
mov
add
movsl
ja
sub
pop
mov
push
sub
add
pop
movl
push
sub
sub
pop
jmp
push
push
push
push
push
push
push
push
call
popf
lret
add
shrl
dec
add
test
push
mov
icebp
testb
incb
jns
mov
add
add
add
jl
jno
push
add
pop
add
inc
mov
notl
pop
add
clc
add
sub
pop
mov
mov
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
fistpll
add
dec
mov
add
add
mov
add
add
mov
ret
out
add
add
add
push
out
test
add
fs
lcall
popa
repnz
add
pop
xchg
push
inc
add
add
mov
int
cmpsb
imul
jl
stos
pop
add
sub
pop
cmp
jne
push
not
pop
mov
push
add
pop
movl
push
push
push
push
call
pop
mov
iret
hlt
cltd
add
add
in
mov
add
add
push
mov
add
nop
add
test
push
mov
mov
add
popa
mov
add
shll
lcall
es
add
lea
push
call
fs
stos
xchg
imul
add
lock
add
add
add
add
add
arpl
add
add
add
fiadds
inc
cld
push
lea
push
push
lea
push
push
call
add
shlb
faddp
xchg
add
push
jo
clc
ret
dec
sarl
add
add
stos
aad
aam
inc
in
pop
cmpw
jne
push
lea
pop
mov
push
inc
pop
movl
push
sub
dec
inc
pop
jmp
push
lea
push
push
push
push
push
call
add
lea
dec
scas
popl
cwtl
roll
jo
add
add
add
add
cli
nop
add
pop
mov
add
lea
pushl
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
lcall
mov
mov
out
jmp
addr16
pop
add
dec
mov
add
cld
call
dec
dec
ja
mov
mov
xchg
iret
aad
cwtl
add
push
lods
add
jmp
ffreep
push
mov
std
inc
add
lcall
inc
or
inc
sbb
sub
add
pop
mov
push
push
sub
xor
push
or
inc
add
add
sub
sub
shl
pop
add
ror
pop
push
push
call
inc
ror
pop
fsubr
bound
add
push
mov
shrl
jmp
nop
dec
lds
dec
cmpsb
mov
cwtl
add
rcl
mov
add
int3
push
mov
shrl
inc
rorl
add
add
xchg
cmpsl
add
addl
mov
cli
sub
pop
push
push
push
push
push
push
push
call
mov
fadd
sti
add
addb
push
add
sub
mov
push
nop
dec
pop
add
test
mov
xchg
jne
imul
roll
arpl
mov
lcall
push
sub
xor
ret
test
add
ljmp
leave
add
shl
sub
xor
ror
pop
xor
dec
sub
pop
push
ror
pop
push
push
add
pop
call
cmpl
jne
push
push
lea
push
call
pop
add
gs
mov
std
mov
pop
mov
add
add
add
pop
fdivs
je
lds
rolb
mov
add
inc
pop
add
subb
lcall
cmpsb
mov
sahf
incb
sub
pop
mov
movl
push
push
push
push
push
push
call
jno
add
stos
add
in
add
jns
jecxz
test
jge
xchg
out
inc
pop
out
mov
mov
rcrl
dec
inc
mov
fs
movsl
fimuls
add
add
mov
call
add
push
push
lea
push
call
jb
xchg
test
insb
mov
mov
push
loope
add
add
in
add
add
jl
push
inc
std
add
fsubrp
dec
repnz
imul
mov
cli
inc
test
dec
add
cltd
dec
test
add
mov
push
fldt
hlt
lcall
rclb
push
pop
pop
push
pop
pop
pop
push
shr
rol
add
pop
pop
leave
push
push
push
push
push
push
lea
push
call
movl
add
lea
mov
add
xchg
dec
xchg
out
add
add
mov
add
mov
sbb
mov
outsl
call
add
pop
call
negl
shlb
rolb
or
push
dec
pop
push
push
push
push
push
push
call
loopne
add
dec
mov
push
repnz
add
add
add
lcall
add
add
add
add
lahf
roll
inc
push
add
pop
add
lods
cmpsl
add
xchg
mov
add
add
sub
pop
mov
add
push
push
push
push
push
push
push
push
push
push
call
jecxz
add
jle
jl
popf
ljmp
rcl
fs
jecxz
movl
je
mov
add
in
fcomps
jge
add
test
sti
ret
iret
xlat
push
inc
not
push
xor
add
sub
sub
sub
lea
pop
shr
rol
sub
add
pop
push
push
push
push
push
push
push
push
lea
push
call
mov
lret
shrb
cld
inc
add
out
cwtl
add
xchg
xchg
add
loopne
fs
add
add
bound
js
lods
call
dec
add
xchg
test
dec
addr16
rolb
mov
xchg
fs
push
pop
stos
fwait
sub
pop
pushl
push
rol
pop
call
push
push
push
call
dec
aad
test
nop
push
add
add
add
outsl
mov
dec
movsb
out
inc
stc
inc
lea
leave
lock
add
fwait
push
add
add
jno
xchg
ret
mov
int
lods
add
ljmp
into
pop
pop
mov
stos
ljmp
jle
movl
add
push
jge
in
hlt
pop
push
call
push
sub
not
pop
jmp
push
push
lea
push
push
lea
push
call
dec
out
add
cld
jno
mov
inc
clc
pop
aad
nop
mov
jle
add
stc
add
mov
add
pop
add
sbb
fildl
int3
jae
cli
les
add
mov
mov
scas
aam
xchg
add
push
mov
movsb
add
lods
cli
add
in
jecxz
add
je
xchg
movb
or
jne
mov
push
push
push
push
push
call
add
add
leave
scas
imul
add
lds
stc
inc
push
add
mov
add
call
in
mov
enter
add
add
scas
add
add
push
push
add
add
mov
fwait
mov
add
std
jnp
mov
sub
pop
ret
push
sub
pop
jmp
push
xor
dec
pop
cmpl
jne
push
push
ror
push
sub
add
not
sub
add
pop
inc
not
ror
rol
pop
push
add
shl
pop
pushl
push
push
lea
push
push
call
add
jbe
jge
dec
push
add
jle
pop
xchg
mov
fcoml
dec
add
dec
add
add
insb
ja
mov
in
lock
call
push
push
lea
push
call
arpl
jecxz
add
add
mov
add
push
arpl
xchg
pusha
pop
add
clc
add
mov
pop
sub
pop
call
push
ror
add
pop
jmp
push
push
call
stc
mov
popa
pushf
outsl
add
mov
fsubs
cmpsl
loope
xchg
stc
aad
fnsave
loopne
add
jnp
inc
out
mov
mov
cwtl
add
jl
mov
jnp
add
pop
inc
fisubl
jb
jne
lods
lret
mov
add
negl
cmc
mul
ljmp
in
clc
pop
cmpl
je
push
shl
sub
pop
cmpl
jne
push
push
push
push
lea
push
push
push
push
push
call
mov
mov
cld
int3
inc
push
les
add
jno
scas
test
aam
add
mov
in
jmp
in
fdivr
lcall
add
add
push
inc
shr
pop
mov
push
lea
push
push
push
push
push
lea
push
call
add
fwait
pushf
mov
add
aad
std
mov
jb
jecxz
add
add
mov
mov
nop
jns
sarb
add
mov
int3
add
pusha
add
roll
sti
nop
inc
int
ja
lods
push
cld
fnsave
addb
in
in
push
lea
push
push
shr
lea
dec
shl
push
push
pop
add
ror
xor
rol
add
sub
dec
pop
rol
not
ror
pop
push
lea
push
push
call
mov
dec
arpl
lds
in
les
data16
cmpl
test
add
add
std
out
add
add
in
pop
push
popa
add
imul
fnstenv
mov
mov
roll
inc
stos
jle
loope
add
add
add
push
lcall
jne
push
push
push
push
push
call
add
push
add
repnz
lret
mov
out
dec
repnz
dec
ljmp
sahf
add
mov
add
inc
push
faddl
cmc
add
add
in
ret
push
roll
add
add
add
mov
sub
pop
call
push
inc
ror
dec
not
pop
push
push
shr
add
shr
pop
call
push
push
shr
sub
push
push
pop
add
xor
sub
inc
rol
xor
pop
rol
rol
pop
push
push
push
push
push
push
call
shlb
add
ljmp
add
mov
andb
fs
lcall
jns
add
pushl
push
push
push
push
push
push
push
lea
push
push
call
sahf
add
add
test
sarl
mov
stc
sbbl
mov
scas
add
add
add
lcall
add
std
mov
mov
inc
shl
dec
add
call
mov
pop
int
lods
xchg
std
jp
in
fcompl
jmp
add
push
push
lea
push
push
push
call
mov
shll
bound
add
loopne
add
inc
jb
pop
mov
fimuls
imul
mov
mov
sub
pop
call
push
dec
rol
pop
mov
push
push
not
push
sub
add
inc
add
sub
sub
add
pop
sub
lea
xor
pop
push
push
push
lea
push
push
push
push
call
cli
loope
add
add
dec
add
rorb
fwait
jmp
les
add
mov
nop
add
stos
add
jnp
js
lcall
fldl
jne
push
add
pop
call
push
push
push
push
push
call
add
push
iret
pop
lahf
xlat
shrl
lahf
mov
test
add
add
add
dec
add
mov
add
movsl
mov
movsb
mov
pop
add
rclb
lret
mov
mov
inc
add
pop
jmp
mov
xlat
xchg
scas
add
lcall
inc
hlt
lea
push
push
push
push
push
push
lea
push
push
call
push
add
mov
std
pop
jae
lahf
shll
test
pop
mov
dec
mov
imul
int
shlb
movsb
add
dec
push
add
popa
add
mov
add
je
movl
in
loopne
lea
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
imul
add
mov
stos
out
popf
add
cmpsb
mov
jns
movsl
add
pop
add
add
shll
data16
mov
lret
lods
mov
dec
mov
cltd
test
mov
imul
cwtl
popf
push
fs
add
push
xchg
add
test
icebp
inc
add
add
mov
add
sub
pop
push
push
xor
pop
push
push
push
lea
push
push
push
push
call
add
inc
pop
in
in
mov
add
out
pop
mov
xchg
in
mov
cmpsl
data16
loop
jo
add
jmp
pop
mov
fldenv
add
add
int3
pop
push
mov
rcrb
out
enter
vxorps
testl
in
call
push
push
lea
pop
push
push
push
lea
pop
push
push
push
push
push
push
push
call
jmp
cmc
push
mov
dec
mov
mov
xchg
add
dec
mov
arpl
rolb
add
js
mov
add
mov
icebp
mov
leave
testb
fdivl
out
jp
jle
add
scas
lock
aad
clc
inc
jbe
ja
add
fiadds
sub
pop
push
push
dec
sub
ror
pop
pushl
push
push
inc
lea
sub
pop
call
push
push
sub
not
push
xor
add
shr
shr
sub
shl
ror
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
roll
inc
mov
fdiv
insb
mov
add
add
add
loope
add
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
push
call
add
mov
mov
faddl
add
data16
add
add
mov
loopne
add
mov
clc
add
xchg
lcall
mov
push
lea
push
push
push
push
push
push
call
add
add
jmp
mov
addl
xchg
add
pop
add
add
hlt
mov
mov
leave
add
mov
pop
add
jo
shrb
dec
in
add
add
mov
add
mov
sub
pop
call
mov
push
push
lea
push
lea
push
push
call
pop
mov
mov
aad
out
inc
add
pushf
add
out
add
add
add
int3
mov
pusha
sahf
lock
lcall
dec
rolb
mov
push
jle
mov
push
fiadds
test
clc
arpl
sub
pop
lea
push
push
inc
push
or
not
add
dec
ror
not
sub
add
rol
pop
not
sub
lea
pop
push
add
pop
pushl
push
lea
push
call
mov
xchg
jb
insb
roll
add
xchg
clc
mov
add
dec
popf
pusha
pop
push
dec
push
jl
ljmp
icebp
mov
dec
fiadds
xorb
add
add
add
xorb
cltd
add
dec
inc
out
add
ja
in
clc
lcall
cmp
add
push
push
lea
push
push
push
push
push
push
push
push
call
cmpsl
add
std
add
clc
inc
add
mov
push
add
out
sahf
add
lret
add
insb
push
mov
pop
mov
sti
jno
fwait
orl
testl
in
fcomps
add
push
shl
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
jl
mov
jbe
add
fwait
add
rcrl
cli
lds
mov
fildl
mov
out
loopne
add
add
add
jno
jbe
lcall
pushl
push
push
lea
push
call
add
jl
test
mov
cmpsl
add
pop
add
add
xchg
add
aam
imul
hlt
popf
les
add
add
dec
add
add
sar
dec
orb
add
add
lcall
jne
push
shr
lea
sub
pop
push
push
push
lea
push
sub
add
rol
sub
xor
sub
xor
add
xor
xor
pop
ror
shr
dec
pop
push
push
lea
push
push
push
lea
push
lea
push
call
push
nop
rcll
ror
jne
add
add
ljmp
lock
into
loope
add
cltd
ja
test
push
loope
add
lock
add
in
in
call
push
push
sub
push
xor
add
sub
sub
dec
pop
add
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
mul
add
add
roll
add
pop
mov
add
mov
bound
fisubl
jmp
add
add
aam
add
test
stc
pop
outsl
fiaddl
cltd
movl
mov
add
xchg
mov
add
ficompl
pushl
push
shr
pop
call
push
lea
shr
pop
call
push
push
shr
xor
push
or
inc
add
lea
sub
ror
pop
not
ror
inc
pop
push
lea
shr
pop
pushl
push
lea
push
lea
push
call
clc
mov
xchg
scas
clc
lods
cwtl
mov
lock
sbbl
inc
out
xchg
xchg
xchg
out
mov
lock
add
aad
in
hlt
pop
call
lea
push
pop
push
push
shl
rol
add
pop
call
push
push
shl
shr
dec
push
xor
add
sub
shl
lea
dec
pop
ror
sub
add
pop
push
lea
push
push
push
push
lea
push
push
call
int
lods
mov
add
cld
add
add
sar
mov
dec
cwtl
pushf
stc
add
nop
add
pop
add
jo
lods
add
add
shlb
add
dec
mov
lcall
jne
push
add
ror
pop
call
push
shr
pop
lea
push
push
lea
push
push
push
push
push
lea
push
call
les
cwtl
add
push
pop
add
fidivrl
jmp
add
lea
movsb
add
mov
pop
push
push
inc
pop
call
push
push
ror
sub
not
push
xor
add
add
xor
add
rol
sub
shl
inc
sub
pop
shl
lea
sub
pop
push
dec
ror
pop
pushl
push
ror
shr
pop
call
push
ror
not
add
rol
pop
call
push
push
lea
dec
dec
push
or
inc
add
shr
shl
sub
sub
dec
lea
pop
ror
ror
lea
pop
push
push
push
call
add
ja
add
add
pop
xchg
mov
out
jecxz
jl
fisttps
jb
add
inc
ljmp
addr16
je
stos
nop
add
mov
mov
add
out
hlt
mov
iret
add
movl
sub
pop
pushl
push
shr
shl
pop
call
call
push
push
sub
push
sub
add
ror
add
sub
dec
xor
pop
sub
xor
sub
pop
push
lea
push
push
lea
push
push
push
push
push
call
mov
add
add
in
fsts
stos
add
add
in
loop
inc
jno
dec
dec
call
jle
mov
roll
xchg
aam
inc
mov
mov
add
clc
in
push
loop
push
out
add
add
sub
pop
pushl
push
push
push
call
cltd
sti
add
add
add
inc
add
loop
lahf
mov
fwait
shl
jmp
add
add
add
add
loope
push
sub
pop
call
call
push
xor
pop
pop
push
sub
xor
lea
pop
dec
jne
lea
push
xor
dec
pop
lea
push
push
dec
ror
ror
push
and
add
not
sub
sub
pop
not
not
sub
add
pop
push
lea
rol
pop
pushl
push
sub
rol
pop
call
push
push
call
std
cmpsl
into
mov
add
mov
mov
add
jno
add
add
sahf
outsl
pop
fadds
add
leave
add
jnp
add
xlat
lea
sbbl
in
add
dec
int3
push
add
inc
hlt
pushl
push
xor
lea
lea
pop
jmp
push
add
add
not
add
pop
mov
push
lea
ror
pop
lea
push
push
not
dec
shr
push
and
add
shr
sub
inc
add
lea
pop
rol
pop
push
lea
push
push
push
lea
push
push
push
push
call
add
imul
lret
add
add
shl
inc
dec
add
jmp
push
xlat
rclb
mov
add
pop
pop
push
mov
shrl
imul
dec
out
add
add
add
push
pop
pushl
push
ror
lea
not
sub
pop
call
push
push
ror
not
ror
pop
call
push
push
dec
push
or
not
add
xor
lea
sub
shr
dec
lea
pop
inc
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
jbe
add
incb
filds
add
add
add
jb
add
in
mov
add
add
movl
add
stos
in
scas
ja
dec
lods
popa
addr16
js
push
rcll
lea
test
bound
lock
lcall
jne
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
enter
movsl
add
add
add
ret
mov
clc
sahf
add
sbbb
stc
pop
mov
stos
add
lods
pop
add
leave
add
xchg
add
in
lods
add
sub
pop
call
push
xor
pop
call
push
lea
push
lea
push
push
lea
push
push
call
ret
icebp
add
fstps
add
add
roll
shrb
pushf
in
cltd
fcomi
icebp
jp
dec
xchg
mov
pusha
pop
add
hlt
mov
ret
add
rcr
add
outsl
stc
std
add
dec
push
mov
dec
iret
add
mov
sarl
mov
push
sub
add
add
pop
lea
push
push
shr
inc
shl
push
or
inc
add
sub
sub
inc
pop
pop
push
inc
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
call
movsb
popa
fsubrl
subb
add
int
mov
add
mov
jno
jbe
fcmovne
add
cld
out
in
add
ja
shr
jne
pop
sub
pop
call
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
push
add
ja
imul
mov
call
push
repnz
add
std
add
jae
push
shrb
mov
add
fcomip
roll
add
fwait
sub
pop
push
push
push
shl
shr
rol
pop
push
pushl
push
push
xor
shl
lea
not
push
or
not
add
xor
sub
sub
sub
pop
pop
push
sub
pop
push
call
push
push
lea
push
push
push
push
push
push
push
call
mov
pushf
mov
jecxz
loope
add
pop
inc
mov
ret
add
mov
mov
pop
insb
add
out
add
dec
add
sub
pop
xor
leave
push
push
lea
push
push
call
xlat
into
movsb
add
inc
add
jne
add
lcall
loope
loop
add
movsl
push
add
dec
call
add
test
out
inc
add
cld
cwtl
lret
mov
jo
pop
add
scas
jns
add
add
xlat
sti
add
mov
ret
jo
pusha
stc
xchg
fiaddl
sub
pop
ret
push
not
pop
pushl
push
push
push
lea
push
push
push
push
push
push
call
add
push
jns
add
add
jns
xchg
movsb
add
jne
xchg
in
mov
mov
push
les
repnz
add
mov
roll
addb
fsubs
add
add
test
popf
jecxz
add
push
test
fldcw
pushf
mov
push
int
nop
test
add
mov
jmp
push
push
add
push
or
inc
add
rol
lea
shr
not
sub
rol
sub
not
pop
lea
pop
push
push
push
push
call
aam
call
movsb
dec
scas
add
into
xor
pop
add
data16
inc
add
xchg
add
push
leave
mov
js
test
out
lds
out
dec
lods
add
add
std
clc
in
jno
sub
pop
pushl
push
sub
sub
pop
call
push
push
shl
pop
call
push
push
dec
push
or
inc
add
shl
lea
dec
sub
xor
inc
inc
pop
dec
pop
push
push
push
push
lea
push
lea
push
call
jnp
fildl
add
add
add
add
push
dec
add
pop
add
add
sub
pop
pushl
call
push
push
push
push
push
call
add
dec
add
add
mov
lahf
dec
insb
jo
aam
jno
les
add
mov
pop
add
jo
add
mov
mov
mov
jnp
mov
rclb
inc
mov
inc
add
xchg
out
fisubrs
jo
add
add
mov
add
mov
stos
sub
pop
push
push
dec
pop
call
push
ror
pop
leave
push
push
push
lea
push
push
call
add
into
jnp
aad
xchg
mov
add
ljmp
push
stc
mov
add
add
xchg
inc
add
data16
je
add
arpl
rolb
les
push
lea
push
push
push
call
push
xchg
add
fcmovnu
add
int
jbe
add
mov
popa
lock
inc
pop
add
add
fnop
ret
add
notl
stos
loope
add
jbe
xchg
jns
leave
nop
add
lcall
pop
push
sub
xor
add
pop
pop
push
push
push
call
icebp
fiaddl
lret
addb
push
push
ja
stc
add
mov
out
loopne
add
fiadds
stc
test
add
mov
xchg
add
lods
add
icebp
add
mov
lcall
pushf
add
add
aad
add
rclb
sub
inc
add
add
add
inc
add
add
roll
add
push
call
add
add
add
in
out
sti
mov
push
lret
add
pop
xchg
scas
sub
pop
inc
push
ror
not
inc
shr
pop
ret
push
dec
lea
lea
pop
leave
ret
push
lea
pop
push
push
add
add
pop
mov
push
lea
push
lea
push
push
push
push
call
mov
out
jge
push
lret
add
dec
outsl
add
in
std
add
mov
test
add
add
add
pop
mov
test
add
mov
add
aad
dec
add
pop
cmpl
jne
push
push
push
push
push
push
lea
push
push
push
call
mov
mov
cmpsl
add
push
cmpsl
js
hlt
mov
pop
cld
test
pop
mov
mov
cmpb
xchg
lcall
pop
imul
inc
add
add
pop
mov
jmp
push
inc
lea
pop
mov
and
push
push
push
push
push
push
push
call
testb
add
out
add
add
jo
out
add
xchg
test
mov
add
cmpsl
dec
fsub
add
iret
add
add
mov
jmp
sti
imul
lcall
leave
push
push
push
lea
push
push
push
push
push
push
lea
push
call
imul
push
push
add
test
cmpsb
mov
pusha
cwtl
incb
nop
add
mov
hlt
add
push
pop
aad
stos
dec
lahf
jo
pop
dec
mov
jnp
dec
add
loope
xchg
add
mov
popf
iret
pop
cwtl
pop
loopne
hlt
loop
xchg
mov
in
fcomps
push
push
push
push
push
lea
push
call
pop
add
jge
jp
add
fadds
sti
addl
jge
lods
aam
test
notb
add
mov
cli
add
lret
add
aam
pop
add
xlat
inc
scas
add
xchg
inc
add
shll
sub
pop
xor
push
lea
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
dec
add
inc
add
rcll
add
movsb
ja
imul
sti
jns
in
clc
add
pop
add
popf
movb
mov
add
add
mov
rclb
add
add
test
add
mov
add
dec
sub
push
sub
not
shl
pop
jmp
sub
push
ror
pop
pushl
pop
push
sub
shl
not
rol
pop
sub
cmp
jne
push
sub
shl
shl
sub
pop
mov
push
push
lea
push
lea
push
call
repnz
cmpsb
out
movsl
dec
add
cmpsb
pusha
loop
insb
add
add
add
add
dec
add
add
sbb
adcb
add
imul
add
mov
les
add
add
add
xchg
incb
lcall
dec
cmp
dec
add
rol
pop
sub
push
lea
push
push
push
call
in
dec
std
lret
mov
into
add
enter
mov
mov
add
fcom
xchg
mov
dec
pop
les
inc
jle
mov
jmp
test
in
lock
lcall
or
cmp
adc
call
add
add
xchg
add
push
clc
mov
dec
scas
filds
xchg
add
xchg
xchg
add
add
negl
push
add
sub
pop
shr
push
shr
rol
add
sub
pop
add
sub
push
inc
pop
pushl
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
roll
mov
shl
cmpsb
rcl
dec
add
mov
test
add
js
inc
in
pop
enter
mov
inc
xchg
mov
roll
jnp
fs
xchg
xchg
mov
aam
fistps
lcall
pop
shr
push
inc
sub
pop
and
push
push
push
push
call
cmpsl
inc
cmpsb
mov
add
push
lods
int
out
add
dec
jmp
xchg
dec
push
in
add
dec
mov
lcall
jmp
push
lea
inc
add
pop
cmp
jne
leave
push
push
push
lea
push
push
push
push
push
push
push
call
mov
jo
je
add
aam
pop
mov
pusha
clc
add
add
lret
xchg
add
push
dec
add
add
je
out
add
jmp
add
mov
jecxz
add
mov
cld
loope
ljmp
xchg
add
mov
dec
sub
pop
ret
push
shl
pop
push
push
push
push
call
lds
fcmovnu
pop
xchg
pop
lret
add
out
fildl
push
rolb
test
jl
inc
add
sub
pop
mov
push
not
sub
inc
pop
add
push
inc
shl
pop
push
push
push
push
push
push
push
call
int
add
mov
bnd
ficoml
testb
add
dec
je
mov
jnp
mov
sahf
iret
push
in
push
rclb
mov
jno
add
sahf
lret
add
push
mov
cwtl
stos
add
in
data16
stos
ljmp
in
in
pop
push
push
push
push
lea
push
push
call
mov
add
mov
add
add
lock
add
ja
inc
in
std
add
add
fwait
push
jle
add
add
add
in
add
movsb
fiaddl
jo
insb
add
sub
pop
push
push
push
call
add
add
xchg
push
add
ret
push
loopne
dec
mov
in
in
gs
rcll
push
mov
loopne
push
fildl
inc
sub
pop
mov
lea
push
lea
push
lea
push
call
enter
mov
mov
add
push
add
scas
add
stos
add
ret
mov
lods
add
jmp
mov
iret
movsb
add
add
loope
add
movsl
add
cli
add
add
add
fdiv
mov
fnstcw
push
add
xchg
sub
pop
sub
push
lea
push
push
push
push
push
push
push
lea
push
push
call
mov
jp
xchg
popa
in
lcall
clc
dec
inc
addl
jne
call
inc
add
push
add
rcl
add
add
arpl
add
movsl
dec
loopne
add
add
jno
in
fdivr
lcall
adc
ljmp
repnz
loop
xor
push
push
push
push
push
call
movb
in
pop
add
add
add
add
scas
mov
add
scas
loop
mov
fdivr
lcall
ficoml
shll
fwait
addb
add
pop
or
push
push
call
add
jno
add
add
add
add
mov
inc
mov
add
outsl
add
mov
push
mov
rolb
ljmp
movb
add
sub
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
enter
test
add
add
add
arpl
pop
jmp
add
add
add
adc
dec
xchg
mov
movsl
dec
clc
loopne
add
jae
test
test
filds
scas
add
or
dec
fs
add
sub
pop
add
xor
push
ror
shr
rol
pop
mov
push
push
lea
push
push
lea
push
push
push
call
mov
add
add
mov
add
mov
cmc
mov
jb
add
add
add
mov
add
insb
lret
add
aam
jmp
inc
icebp
imul
nop
cld
add
out
loop
add
loopne
push
push
call
in
pop
iret
jle
inc
dec
loop
mov
add
rclb
cmpsl
ret
add
add
addr16
add
sarl
test
out
add
xchg
inc
int3
add
loop
push
iret
js
add
loope
lret
mov
push
ffreep
movb
add
dec
push
push
add
sub
pop
rol
push
shr
not
add
pop
rol
xor
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
xchg
std
add
in
add
scas
sar
jge
mov
xchg
mov
mov
add
cmc
xchg
add
fildl
imul
lcall
add
xchg
decb
into
add
fdivl
roll
push
mov
int
fs
movsl
push
mov
add
imul
sub
pop
inc
push
shl
add
xor
ror
pop
cmpb
jne
push
lea
push
push
push
push
lea
push
push
call
bound
out
sti
push
int
add
mov
add
push
mov
pop
imul
mov
add
add
add
out
lock
pop
add
cmp
je
push
lea
ror
add
add
pop
add
cmpl
jne
push
rol
pop
xor
pop
push
lea
push
push
push
push
push
push
call
mov
inc
imul
xchg
data16
inc
add
add
inc
add
call
jbe
add
dec
lock
lds
xchg
lret
dec
nop
pop
mov
xor
xchg
in
cmc
add
add
fld
sti
add
cmc
popf
jle
fcoms
push
sub
pop
pop
push
sub
sub
shr
add
pop
pop
pop
push
xor
pop
pop
push
lea
push
call
add
mov
add
pop
mov
imul
add
push
push
pop
shlb
scas
bound
test
hlt
mov
inc
dec
adcl
inc
add
mov
sar
inc
add
lcall
push
sbbl
sub
pop
leave
push
lea
pop
ret
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
scas
push
add
cli
add
test
mov
add
test
inc
add
ret
cld
roll
js
push
scas
add
pop
mov
push
shr
pop
add
push
shl
sub
inc
sub
pop
mov
push
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
out
lcall
add
add
mov
bound
add
add
lret
jle
data16
mov
add
nop
push
jmp
iret
loope
add
add
add
pusha
lahf
imul
add
loopne
popa
mov
fcomps
sbb
call
and
enter
push
call
mov
push
jge
add
mov
add
mov
cmpl
inc
add
rcrl
out
test
shll
add
jle
repnz
pop
lret
jecxz
loopne
xchg
add
add
push
add
pop
sub
pop
xor
push
push
push
push
lea
push
push
push
call
jge
je
dec
mov
jbe
push
in
fdivrl
xchg
fs
xlat
add
flds
gs
cwtl
aad
lret
add
dec
add
cld
add
scas
add
add
mov
add
mov
jl
add
add
dec
add
inc
add
fildl
lcall
push
push
lea
push
push
push
call
fldl
fiadds
mov
enter
out
mov
jge
add
arpl
xchg
arpl
les
add
lret
add
into
mov
cmpsl
fldl
jle
sbbb
gs
add
imul
add
test
mov
repnz
cwtl
jl
lahf
pop
jl
add
push
in
lret
add
mov
in
pop
pop
pop
push
lea
pop
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
add
lahf
add
rcr
enter
fs
add
push
push
mov
fmuls
mov
add
add
icebp
add
shlb
in
fdivr
lcall
leave
push
push
push
lea
push
push
push
push
push
call
cli
push
add
mov
ljmp
inc
add
mov
fldenv
shr
jne
xchg
ret
loopne
ret
push
push
push
push
push
push
push
push
push
call
ljmp
push
movl
push
lds
fistpll
add
jae
add
add
cli
add
add
mov
int
xchg
push
mov
ja
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
call
lods
mov
clc
mov
add
add
mov
popf
inc
fisubrs
dec
add
add
add
sub
pop
add
push
push
inc
pop
push
push
push
push
push
call
dec
add
add
jb
pop
test
loope
jns
in
add
mov
aad
push
add
add
js
imulb
in
push
aad
inc
in
movsl
dec
in
scas
add
dec
hlt
mov
add
sub
pop
push
push
shr
pop
push
push
push
push
push
push
push
lea
push
push
call
shrb
add
andb
add
and
add
imul
mov
dec
dec
int3
add
xchg
fldcw
mov
add
add
fstl
pusha
add
add
rclb
inc
stos
in
js
fistl
dec
clc
ret
mov
lcall
pop
or
lea
push
push
push
push
push
push
call
pop
add
pop
add
add
add
jmp
mov
clc
add
mov
lea
add
add
lcall
push
push
push
push
push
push
push
push
call
cmpl
mov
add
cwtl
int3
lds
add
add
cwtl
mov
add
add
add
addb
call
imul
jne
jmp
faddl
mov
mov
add
cmpsb
into
inc
cmc
sub
pop
pop
lea
push
push
push
lea
push
push
push
push
call
mov
fwait
out
mov
add
pop
fcmovne
add
add
push
fadds
add
add
add
add
cmc
add
fiaddl
repnz
ljmp
ror
pop
mov
push
lea
push
call
add
out
inc
popa
arpl
je
mov
int3
into
in
add
je
popf
insb
jne
add
add
lds
jae
mov
add
xchg
add
sti
mov
jbe
add
add
add
add
mov
scas
lods
sub
pop
shr
push
shl
pop
add
mov
push
push
call
inc
dec
inc
add
push
xchg
add
mov
add
fidivrs
cmpsl
mov
inc
xchg
ljmp
add
lahf
jno
in
clc
pop
add
pushl
push
shr
dec
shl
pop
popl
push
xor
ror
add
pop
mov
push
pop
add
xor
push
shr
sub
dec
shr
pop
lea
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
inc
rcr
xchg
lret
rolb
lods
mov
into
add
std
add
add
inc
xchg
data16
int3
jl
mov
add
in
fdivr
lcall
adc
rcll
mov
pusha
inc
pop
out
lea
push
push
push
push
push
push
push
call
dec
in
out
mov
add
mov
js
add
scas
mov
mov
add
add
add
loopne
pop
jp
rolb
dec
add
add
je
fdivrl
mov
add
add
pop
mov
pop
add
jp
push
push
cltd
add
gs
leave
mov
sub
pop
xor
push
sub
not
pop
rol
push
inc
rol
lea
xor
pop
nop
push
lea
push
push
push
push
push
call
add
pop
cld
test
mov
call
mov
int
test
add
pop
push
data16
add
add
add
out
add
add
add
fwait
rorb
pop
rcr
mov
mov
js
add
add
add
iret
mov
add
flds
lcall
push
push
push
call
xchg
add
roll
dec
add
addb
sahf
add
je
data16
imul
mov
popa
push
mov
add
add
loope
add
pop
stos
push
add
pusha
notl
add
movsl
fdivrs
movsl
aad
aam
sub
pop
xor
push
ror
xor
add
pop
nop
push
push
push
lea
push
push
push
lea
push
push
call
jne
out
dec
in
add
jp
push
add
add
add
add
add
add
dec
arpl
shr
lea
add
loopne
ja
shlb
xchg
pop
add
in
loopne
nop
push
push
call
add
add
rorl
repnz
mov
add
add
iret
shll
add
mov
movsl
mov
out
pusha
add
inc
add
repnz
loopne
cld
add
xchg
nop
add
add
add
dec
data16
in
clc
pop
inc
nop
push
dec
shr
lea
pop
nop
push
push
push
call
hlt
mov
inc
testl
add
push
mov
bound
mov
add
add
jmp
stos
mov
cmc
add
ja
add
add
in
int3
add
add
mov
mov
ja
ljmp
mov
leave
add
movb
mov
hlt
lcall
cmp
jne
add
push
sub
not
add
add
pop
nop
push
sub
pop
nop
push
sub
pop
cmp
je
push
shr
sub
pop
nop
push
push
push
push
call
jnp
mov
les
add
xchg
add
add
subb
mov
push
arpl
negb
shl
leave
roll
mov
lds
scas
je
jb
cwtl
scas
add
in
jmp
dec
dec
xchg
add
add
lcall
push
sub
pop
inc
nop
push
push
push
push
push
push
push
call
add
test
test
icebp
dec
int
shr
add
jecxz
dec
add
add
nop
add
int
out
les
add
add
in
add
add
hlt
add
add
add
add
out
mov
dec
andl
in
nop
cmp
jb
push
shl
xor
ror
not
pop
xor
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
jbe
nop
fiaddl
out
xchg
add
add
addl
jmp
xlat
popl
imul
fstpl
nop
jno
stos
jb
pop
add
jl
in
sub
pop
jmp
push
lea
pop
mov
push
ror
add
sub
xor
pop
add
push
push
call
push
lret
aad
jmp
sahf
pop
inc
les
add
int
filds
jmp
mov
add
inc
out
call
add
mov
push
pop
fisttpll
inc
in
mov
hlt
add
dec
sub
pop
movzwl
mov
push
lea
push
push
call
add
add
push
fiaddl
roll
cmpsl
gs
add
sar
js
movsl
xchg
xchg
dec
dec
popf
add
ljmp
add
gs
mov
add
int3
inc
shrl
add
add
int3
into
lods
movsb
mov
jp
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
add
ja
add
movsb
xchg
scas
mov
add
jo
incb
in
pushf
out
cltd
out
cmpsb
mov
mov
add
jl
je
add
mov
sub
pop
mov
push
push
push
call
add
data16
shlb
add
clc
jl
pop
in
add
jno
cli
out
ljmp
jns
mull
arpl
xlat
mov
add
add
add
out
std
push
add
in
push
jbe
cli
imul
xchg
add
jnp
test
js
mov
add
pop
pushf
sub
pop
xor
push
pop
xor
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
imulb
fwait
movsb
inc
jb
mov
add
movsb
cmpsl
add
jmp
leave
pusha
shrl
push
mov
iret
add
inc
push
add
add
add
inc
out
jae
mov
inc
data16
mov
pushf
add
jne
movsb
add
mov
jae
pop
add
mov
in
loopne
lcall
loope
push
push
push
push
push
push
push
push
call
mov
add
add
add
lret
mov
pop
jmp
jmp
mov
add
mov
in
xchg
cmc
add
jne
push
out
addl
inc
jge
scas
outsl
iret
inc
ret
add
add
jl
lret
inc
hlt
loopne
jo
outsl
aad
add
push
data16
lcall
dec
nop
add
loope
push
push
push
push
push
push
lea
push
push
push
call
pop
hlt
fildl
dec
mov
add
fdiv
popa
rcl
jno
xchg
arpl
jns
mov
push
cmpsb
icebp
cwtl
jp
flds
mov
pop
add
sahf
fiaddl
imul
loop
rcrl
arpl
pop
add
fisttps
mov
out
test
jo
test
add
pop
xor
push
xor
dec
pop
shl
push
push
call
add
imul
pop
add
xchg
ljmp
xchg
push
inc
ror
mov
add
mov
shl
scas
add
pop
xor
push
shl
inc
add
ror
pop
mov
push
xor
pop
add
pop
push
inc
add
not
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
scas
addb
movsb
dec
insb
testb
mov
mov
add
add
add
pop
enter
ljmp
add
inc
push
mov
outsl
loopne
inc
xchg
lods
test
out
xchg
mov
add
pop
iret
and
lds
sti
aam
mov
add
sub
pop
pop
push
add
shl
pop
pop
push
push
call
add
jnp
add
loope
ret
add
icebp
add
xchg
jp
add
add
add
add
ljmp
add
add
add
lcall
push
push
push
push
push
push
lea
push
call
add
lea
add
jnp
mov
add
testl
add
mov
addb
pop
add
testl
lea
test
xchg
addl
add
inc
stc
fadds
jb
call
inc
add
jbe
add
mov
rcrb
in
lcall
or
push
sub
pop
push
push
shr
pop
mov
push
push
call
add
push
bound
add
push
gs
push
aam
jmp
add
jo
mov
add
mov
int
add
flds
mov
push
add
jae
add
add
mov
add
jle
add
jns
lea
push
add
push
push
push
call
scas
ret
dec
stos
pop
jb
mov
enter
movsb
add
mov
sahf
mov
ljmp
fadd
mov
fs
jl
mov
xchg
add
out
sub
pop
push
push
push
shr
shr
not
xor
pop
push
mov
push
dec
rol
pop
mov
mov
push
push
push
push
call
add
add
test
mov
mov
dec
mov
jno
jb
add
fbld
addb
rolb
pop
test
je
push
xor
pop
mov
test
je
push
add
pop
mov
push
push
push
lea
push
call
add
xchg
jne
add
jge
pushf
les
out
add
add
add
fwait
xchg
pop
fldt
imul
jnp
lcall
lods
in
push
pop
fistps
add
pop
xchg
add
test
jno
pop
test
inc
leave
xchg
inc
add
aam
sub
pop
mov
mov
push
push
push
call
popf
add
inc
add
ljmp
rcl
js
int3
add
pop
add
inc
pop
mov
pop
fidivl
jecxz
js
xchg
std
add
scas
cli
push
lds
mov
pop
ja
dec
loop
movsl
jno
add
add
push
fiaddl
cmpl
lcall
cmp
je
push
push
push
push
push
push
push
push
push
call
mov
add
add
fists
add
int3
pushf
add
mov
add
push
test
icebp
jne
cmpsl
add
jp
add
scas
cltd
fisttpll
movsl
ja
mov
add
add
pop
sub
pop
test
je
push
lea
push
call
add
add
xchg
popf
fwait
lahf
rolb
dec
test
sti
dec
int
pop
lahf
fndisi(8087
add
jno
add
add
add
lock
add
icebp
add
jne
dec
sub
pop
mov
push
push
lea
push
call
movsb
fwait
add
inc
jmp
jo
add
cmp
arpl
lcall
movl
in
leave
sub
pop
inc
cmp
je
push
shl
lea
shr
add
pop
test
jne
push
lea
push
call
add
scas
pop
aam
dec
inc
int3
aam
xchg
add
xchg
imul
add
mov
fwait
roll
add
jp
mov
loope
push
add
mov
nop
mov
add
jae
jecxz
fnstcw
add
int3
add
push
sub
pop
xor
pop
push
push
lea
push
lea
push
call
jl
add
mov
add
scas
lcall
add
pusha
sar
mov
mov
add
add
pop
movsb
test
movsb
data16
mov
jno
jno
mov
add
add
add
add
in
fiadds
pop
add
jne
addl
out
lret
inc
fiaddl
add
in
lock
pop
push
rol
ror
not
pop
pop
push
add
lea
add
pop
pop
leave
push
push
push
push
call
jno
add
cmp
push
lret
add
add
add
add
fistpll
mov
loopne
jle
xchg
add
add
mov
add
add
mov
mov
add
std
int
add
xchg
mov
add
js
popa
add
push
add
js
add
sub
pop
ret
push
push
lea
push
push
push
call
cwtl
mov
addr16
add
call
add
inc
mov
add
rcl
in
push
scas
add
xchg
lret
jb
mov
add
add
popa
fucom
mov
in
cwtl
add
add
scas
test
int3
add
add
inc
add
rcll
add
dec
sub
pop
mov
push
push
push
push
push
push
lea
push
push
call
jl
nop
xchg
cmpsb
addb
hlt
add
inc
scas
stc
pop
rcr
add
pop
lret
fnstenv
addl
add
mov
pop
addb
inc
mov
jp
jno
add
jbe
mov
insb
jnp
cmpsb
add
pop
cmpsb
ljmp
add
jb
mov
into
xchg
lcall
popa
cld
mov
sub
pop
inc
cmp
jne
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
inc
dec
std
inc
jp
fmul
inc
push
inc
jb
add
mov
mov
push
push
add
imul
out
add
lret
add
add
inc
mov
movsb
add
add
lds
lods
lcall
add
lds
popf
mov
out
lret
filds
mov
add
lcall
jle
push
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
rcr
int3
fdivl
add
jl
movsb
test
push
add
jge
add
ret
add
shrl
pop
test
je
mov
push
lea
push
push
lea
push
call
call
cltd
mov
jecxz
add
add
add
aad
add
add
add
push
inc
leave
jecxz
mov
je
idivl
cmpsb
mov
mov
dec
fldl
xchg
fs
add
outsl
popl
add
clc
xor
stos
pop
add
lcall
movb
inc
add
pop
cmp
jne
mov
push
sub
ror
pop
test
je
mov
push
not
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
repnz
add
add
add
flds
fadds
push
add
jne
pop
jae
dec
add
add
add
lret
add
in
outsl
arpl
add
add
xchg
add
dec
sub
pop
cmp
je
push
push
push
call
rclb
mov
pop
push
add
out
add
mov
imul
out
dec
jecxz
mov
mov
shl
sbb
mov
ret
lea
ror
insb
out
dec
add
add
loope
outsl
int
imul
mov
data16
in
hlt
lcall
hlt
clc
pushl
rclb
dec
lea
add
pop
pop
pop
push
dec
add
shr
pop
pop
push
push
push
call
add
cli
jbe
add
mov
js
pop
add
jmp
shr
mov
lcall
std
add
outsl
sarl
add
movsb
out
xchg
mov
in
add
add
add
mov
sub
pop
pop
push
lea
push
lea
push
call
add
fsubr
fildl
mov
add
mov
in
lds
cld
jb
repnz
mov
inc
inc
fnstcw
scas
fcomi
add
cmc
ljmp
data16
fbld
leave
ret
push
push
push
push
lea
push
push
call
fwait
mov
mov
add
movsl
repnz
decb
add
popl
add
mov
movl
fs
pop
lea
pop
push
rol
rol
pop
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
push
call
dec
js
add
push
add
xchg
cltd
add
pop
mov
add
mov
add
ficoms
inc
jnp
add
mov
mov
out
add
out
fimuls
sub
pop
pop
leave
push
lea
push
push
push
push
push
call
int
cltd
inc
push
jmp
shr
inc
movl
add
ficomps
movsl
out
inc
jge
movsl
in
add
add
dec
cltd
in
ficoml
add
mov
add
add
decb
add
inc
enter
jnp
mov
ficoml
add
sti
in
sub
pop
ret
mov
push
push
push
push
push
lea
push
push
lea
push
push
call
iret
cli
popa
testl
add
add
jge
std
mov
int
jp
cmc
mov
in
arpl
add
leave
add
ljmp
mov
jns
inc
inc
push
add
inc
jne
in
add
mov
jnp
add
add
lds
xchg
fnclex
mov
in
fdivr
lcall
push
xor
pop
pop
push
sub
add
shr
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
movsl
add
add
mov
add
add
mov
clc
roll
dec
push
jp
pop
fnstsw
mov
in
fcomps
leave
push
lea
shl
pop
ret
lcall
decl
push
enter
scas
sti
ljmp
jmp
mov
out
cld
ljmp
std
pushl
xchg
xlat
mov
mov
ss
out
out
pop
and
mov
pop
stos
lock
scas
fsubrl
into
dec
push
sub
dec
ljmp
mov
sbb
or
das
pop
lods
rcl
push
test
ja
push
xchg
aas
push
push
cmc
pushf
mov
stc
xchg
mov
cmp
and
or
add
xchg
scas
shll
dec
in
mov
outsb
mov
xchg
js
test
mov
pop
rcrl
lcall
cmp
in
cmp
pop
inc
push
mov
jle
or
aad
sti
testb
adc
cs
in
fwait
push
push
sahf
out
lock
fsubr
fisttpl
dec
stos
test
push
popf
dec
push
pop
dec
pop
shll
lea
inc
inc
inc
cltd
pusha
out
adc
dec
add
shr
xor
mov
iret
push
add
stos
xor
mov
jno
fsubr
ljmp
pop
movsb
jnp
xchg
movl
xorl
jb
je
icebp
mov
xlat
dec
std
fwait
jmp
add
pop
rclb
mov
sbb
mov
mov
jge
jne
xor
sbbb
jecxz
mov
gs
out
sbb
enter
les
and
shrb
push
push
dec
sub
in
loopne
imul
sbb
sarb
std
idivl
mov
cli
jae
nop
xchg
mov
in
mov
push
push
mov
jge
jmp
imul
dec
lods
jne
and
icebp
push
xchg
and
and
int3
fwait
push
jnp
or
rcrl
dec
mov
dec
cmc
ja
inc
jnp
sub
jns
jl
xor
jne
das
ja
mov
pop
pop
jmp
mov
test
add
gs
sbb
std
lret
test
inc
mov
repnz
xchg
push
pusha
pop
adc
popa
pop
jle
imul
add
in
lahf
jbe
daa
jge
push
jns
pop
cli
push
push
pop
xor
fcoml
icebp
test
cmp
test
enter
sub
push
out
mov
inc
aaa
adc
into
js
inc
jo
mov
inc
imul
mov
cmp
pop
push
push
xchg
xor
mov
pop
sub
mov
push
icebp
mov
call
sarl
mov
pop
push
shl
cltd
in
pop
pop
test
lods
mull
into
sbb
jecxz
imull
in
mov
dec
sahf
push
mov
mov
out
sbbl
xchg
pop
lret
cmpsl
cltd
jnp
mov
xchg
or
cmpsl
dec
shlb
je
bound
pop
loopne
push
or
xchg
mov
cmp
outsl
lods
xor
jmp
out
movb
int3
rclb
mov
inc
push
jge
shlb
push
sub
stos
lea
dec
dec
jae
push
inc
out
mov
pushl
ret
aad
jbe
sbb
or
into
cmp
int
jle
fwait
xchg
sub
add
sub
loop
leave
push
test
insl
mov
add
js
cltd
imul
fdivrl
dec
lods
notl
jmp
xchg
dec
push
fcoms
xor
adc
inc
fcompl
out
ljmp
xor
inc
xchg
mov
fwait
mov
ljmp
call
xor
adc
or
js
jns
sub
movsl
sbb
loope
mov
das
push
ret
mov
mov
clc
mov
push
xchg
jns
test
xor
jnp
out
mov
add
sbb
mov
adc
jmp
jb
dec
mov
mov
les
mov
mov
sbb
xor
hlt
clc
jg
cmpsb
push
movsb
ds
mov
scas
cmpsl
mov
and
fimuls
add
dec
subb
push
xlat
in
out
mov
or
js
sbb
xchg
popa
adc
cmpb
xchg
pop
push
bound
dec
in
je
push
mov
lret
popf
in
push
ret
lea
rol
fsubrs
loop
mov
or
ss
dec
cltd
pop
jb
jmp
jecxz
adc
std
push
mov
shrl
fucomip
sub
cmp
dec
xchg
test
adc
push
mov
and
pushl
mov
lock
sub
sub
mov
test
fmul
cmp
and
es
mov
fldt
xor
sbb
lret
xor
orb
mov
mov
cmp
loope
test
jp
mov
mov
and
js
xchg
dec
fnsave
mov
cmpsb
add
aam
mov
lods
in
js
cmc
mov
cmp
adc
push
pop
push
sub
fwait
mov
dec
int3
in
mov
add
xlat
inc
xor
outsb
push
mov
add
arpl
pop
test
cld
sub
int
pop
stc
aam
icebp
fcompl
das
jle
mov
sbb
or
pop
mov
xchg
xor
in
dec
adc
lea
or
popl
mov
rorl
and
scas
cmc
lods
ret
outsl
stos
pop
enter
loop
add
jge
popa
icebp
in
daa
mov
inc
mov
push
test
adc
repz
jmp
das
jmp
add
cmc
sbb
xor
ljmp
sub
stc
and
pushf
xchg
out
cmc
cwtl
imul
leave
ud2
jmp
fidivrs
push
xor
pop
sub
cli
lret
mov
inc
les
call
add
inc
fs
lock
cmpsb
adc
or
mov
jp
inc
dec
ficompl
out
mov
nop
add
sarl
arpl
mov
aam
mov
shrb
insl
lods
lods
xor
pop
in
jl
insb
mov
mov
pop
xchg
dec
test
inc
inc
xor
push
insl
sub
dec
popl
add
into
pop
daa
mov
in
push
xchg
mov
cmpsb
movsl
pop
jge
sub
cmpsb
jl
or
jecxz
jae
mov
ss
in
lods
xor
mov
out
vcvtdq2ps
jecxz,pt
pop
icebp
push
xor
in
xchg
insl
data16
shl
popf
in
imul
mov
and
or
rclb
and
in
add
shr
and
inc
scas
aas
mov
jmp
mov
pop
cmp
mov
test
out
jnp
into
push
mov
decl
mov
loope
add
dec
or
ret
fnstcw
cltd
and
scas
xor
sbb
xor
mov
sub
leave
daa
xchg
sarb
loope
jg
cmp
adc
test
lret
sub
add
xchg
xchg
test
inc
inc
push
roll
push
add
btr
outsl
imul
mov
out
idiv
mov
mov
jb
dec
jno
jns
lea
pop
rorb
adc
loope
mov
adc
mov
inc
dec
adc
insb
pop
lret
insl
imul
stos
lock
pop
or
adc
xchg
jge
int3
insb
jg
mov
roll
xchg
sbb
inc
and
cmc
pushf
mov
fmuls
adc
cmp
xchg
and
push
mulb
or
push
sahf
loop
cs
xchg
arpl
cmp
mov
lret
push
ljmp
jl
test
sub
out
push
push
notl
mov
lret
and
cmp
sbb
add
or
push
jmp
das
and
xchg
cs
xchg
inc
in
mov
lea
dec
jbe
iret
repnz
fs
aaa
fidivs
ljmp
iret
outsb
adc
cmp
add
jmp
lods
pop
jae
mov
adc
push
jge
add
rolb
rcll
cmp
lods
dec
xor
and
sub
ja
sarl
mov
cmp
xor
push
or
filds
aam
and
pop
ret
dec
and
pop
mov
mov
push
push
ja
sub
nop
lret
pop
loopne
in
push
mov
xor
bound
or
inc
lcall
and
mov
std
jge
nop
jnp
clc
mov
cmpsl
out
shr
cmp
fldl
popf
xlat
jb
mov
xor
jne
xor
mov
pop
adc
mov
pop
mov
in
cwtl
cld
inc
fs
mov
aaa
add
rolb
sbb
fs
repz
imul
xchg
inc
outsl
gs
out
inc
popa
stos
pop
ret
test
bound
and
dec
or
or
jg
xlat
aad
adc
push
push
or
dec
scas
imull
cmp
inc
dec
mov
inc
pop
mov
xchg
pushf
jno
sub
push
clc
pop
xor
ja
jae
out
push
mov
bnd
scas
sbb
repz
push
sahf
in
jg
popa
and
inc
push
sbb
fwait
dec
mov
sarl
movsl
pop
mov
lea
fisubs
mov
aaa
xor
inc
lcall
and
xlat
popl
xchg
popf
mov
and
lds
pop
dec
mov
sbb
add
xchg
stos
xchg
or
scas
in
clc
or
notb
call
in
push
push
mov
data16
or
jo
into
pop
mov
lret
inc
cmp
leave
xchg
push
enter
mov
or
mov
adc
jg
xchg
out
aam
dec
push
inc
jo
sub
dec
jle
dec
inc
push
sub
adc
jmp
sarl
jl
sahf
sbb
adc
inc
xchg
pop
fwait
pop
lods
bound
orb
adc
push
mov
popf
hlt
cmpsb
insl
icebp
je
insb
dec
arpl
mov
ret
inc
adc
and
stc
mov
and
insb
je
push
jnp
into
xor
mov
inc
mov
out
inc
sub
test
xchg
pop
inc
pop
mov
pop
xor
outsl
sub
mov
jo
mov
sub
not
nop
imul
jb
add
mov
arpl
enter
and
sar
repnz
aas
insl
sti
jg
fwait
ljmp
mov
or
cmc
adc
mov
sub
pop
int
test
dec
stos
xor
icebp
movsb
or
test
jns
dec
test
incl
inc
insl
pop
loop
stos
out
cld
jmp
fldcw
inc
les
mov
push
testb
cmp
ret
mov
push
out
shr
mov
xor
push
add
rolb
lods
sbb
pop
in
sbb
int3
cmpsb
sti
cs
sub
jae
adc
mov
movb
xchg
test
pushf
icebp
xchg
inc
mov
cmp
in
clc
xor
push
add
push
int3
push
out
mov
pop
fists
sarl
cli
mov
movsl
cmp
sbb
clc
movsb
movsl
pusha
xor
add
cmc
lock
mov
add
cmpsl
pop
xchg
xchg
into
mov
cmc
add
sub
int3
sbb
push
repz
mov
dec
lahf
dec
mov
lods
lcall
aam
adc
xchg
shlb
and
fnsave
in
cmp
pop
dec
mov
jmp
xchg
loope
cmp
insl
jge
dec
or
inc
fisubrs
jnp
mov
fnstenv
loop
sub
icebp
neg
mov
sub
inc
test
dec
mov
push
outsl
cmc
dec
jmp
addr16
push
adc
sbb
and
xchg
mov
jge
xchg
push
fs
mov
push
ljmp
pop
sbb
mov
sbb
sbb
jmp
pop
push
inc
xlat
push
aas
call
pop
out
cs
repnz
test
enter
jnp
js
xchg
dec
sbb
arpl
push
test
mov
testl
pop
mov
mov
lds
mov
jnp
or
or
lret
adc
mov
fidivs
arpl
enter
orb
pop
not
imul
lods
push
sbb
ljmp
cld
pop
pop
sbb
jge
into
xor
lds
lret
push
ror
pushf
push
sbb
faddp
sbb
xchg
popf
xchg
arpl
aas
pop
jecxz
into
fs
pop
mov
loop
lds
mov
shlb
push
fstpl
or
jo
pop
push
mov
or
push
jmp
clc
outsl
inc
adc
out
cmp
add
idivl
loope
pop
mov
aam
pushf
inc
je
lret
stc
mov
sahf
add
jl
jo
jmp
push
mov
es
cs
adc
push
mov
xorb
cmc
ret
out
mov
mov
mov
imul
aad
dec
mov
xchg
loop
insl
pop
es
ret
mov
aad
addb
xor
or
sbb
sbb
adc
je
lret
mov
mov
leave
repz
pop
mov
lcall
pop
rorl
cltd
inc
sub
push
add
xchg
push
mov
push
addl
ret
ret
stc
testb
mov
mov
stos
out
inc
push
jno
insb
rorl
bswap
std
sbb
insb
pop
xchg
fstl
cli
or
push
pop
rolb
enter
add
in
scas
inc
adc
adc
test
int
ret
cmp
jl
adc
fwait
adc
xor
mov
shlb
sbb
mov
mov
mov
mov
test
cmpsb
pop
adc
dec
into
jns
popf
add
xchg
ret
xchg
jne
popf
es
jb
jle
cmp
lcall
inc
shll
loope
in
add
das
sub
icebp
rcrl
adc
dec
cmpsl
or
out
js
out
mov
mov
or
mov
jl
add
clc
inc
jbe
mov
andl
out
stos
inc
jmp
rcr
push
out
hlt
shr
xor
pop
push
xchg
jo
jne
cmp
pop
jg
arpl
mov
out
jnp
adc
jg
ds
ret
push
and
xlat
add
rorl
in
test
loop
cmpsl
jno
xor
lock
pusha
mov
inc
push
in
jns
jmp
pop
mov
ret
add
cmp
pop
gs
and
aad
lods
enter
jp
pop
loope
mov
enter
loopne
cmc
pop
js
arpl
pop
mov
gs
mov
cmp
inc
xor
cs
js
ja
dec
pop
pusha
out
les
and
pop
sub
mov
mov
xor
cld
xorl
push
xorl
clc
push
pop
push
mov
leave
xchg
inc
in
jbe
adc
inc
movb
cld
cld
xchg
sti
cli
outsb
adc
push
sti
loopne
mov
repz
and
jge
out
xchg
xor
lods
mov
ror
std
xor
adc
imul
xlat
xor
mov
mov
in
sbb
push
scas
xchg
cmp
sbb
adc
dec
xor
cld
jg
xchg
xor
add
jle
pop
dec
jae
movsl
loop
imul
and
xchg
cs
mov
sahf
mov
cmp
cmp
mov
jl
xchg
mov
shlb
add
mov
cmc
subl
test
lahf
clc
inc
es
inc
out
aas
cmpsb
jae
stc
pop
and
data16
jle
mov
adc
mov
inc
pusha
out
divb
stos
or
push
and
aam
push
insb
push
scas
int3
test
adc
dec
fdivrl
fstpl
cltd
push
aas
out
mov
mov
add
push
push
insl
inc
mov
and
pop
out
aad
mov
inc
lods
xchg
jl
das
stos
xor
xchg
leave
scas
adc
or
movsb
jo
mov
sub
ficomps
sub
in
clc
push
mov
cwtl
sub
bswap
mov
xchg
gs
mov
cmp
jecxz
dec
or
fnsave
dec
mov
mov
out
and
mov
jle
cmpsb
daa
xchg
cmp
push
mov
xchg
clc
inc
sbb
xchg
mov
in
leave
mov
xchg
shrb
mov
sbb
sbb
shll
push
ljmp
mov
xchg
jne
or
cmc
jg
pop
mov
shrl
std
push
xor
out
addb
inc
fs
jecxz
lahf
loopne
adc
mov
sbb
aam
fists
mov
mov
or
je
inc
xor
je
or
dec
fbstp
xor
inc
dec
in
ds
fbstp
xor
cmp
adc
mov
iret
addr16
mov
mov
sahf
xlat
push
adc
adc
xor
cmovs
mov
adc
aam
data16
outsb
movsl
shl
out
mov
sub
jmp
ljmp
and
pop
call
cmpsl
jmp
aad
xor
push
add
movsl
or
shrl
cwtl
pop
out
in
stos
xlat
mov
pop
pop
mov
push
subl
subb
xchg
test
jle
push
pusha
imul
jae
push
lahf
fsts
ljmp
arpl
inc
cmp
sbb
fsubs
fnstenv
into
les
jmp
std
cmp
inc
sbb
pop
pop
push
or
cltd
lea
dec
jno
jb
xor
dec
negb
jl
jns
loop
xor
sub
xor
xchg
lods
cmp
icebp
xchg
xchg
add
lcall
push
lahf
dec
popf
shll
cwtl
ret
aam
xchg
dec
ljmp
cld
xor
cmc
or
push
jp
sbb
std
pop
xor
xor
mov
push
sub
testb
lock
imul
cmp
cmp
test
mov
js
sub
jne
adc
and
lahf
adc
mov
jl
das
push
push
mov
test
mov
mov
stos
imul
or
push
jnp
outsb
movsb
xchg
lea
push
fcomps
lahf
mov
mov
xor
pusha
scas
push
pop
je
das
addr16
sub
ds
hlt
add
push
rcr
int
clc
dec
aad
mov
mov
mov
jb
xchg
sbb
push
mov
or
arpl
je
jl
hlt
push
neg
fsubp
sub
out
sbb
mov
jle
jle
in
inc
call
stos
in
mov
lods
sub
inc
insb
adc
jmp
sub
cld
bnd
push
adc
mov
xchg
adc
imul
icebp
sarb
iret
fcomps
filds
add
rcll
inc
test
lods
daa
call
adc
xor
inc
sbb
xchg
out
inc
mov
mov
sahf
or
mov
and
push
xchg
loope
inc
pop
icebp
cmp
mov
xor
adc
dec
lods
cmc
mov
cmp
mov
int
repz
lods
and
push
push
in
mov
in
out
sbb
adc
sub
and
dec
in
mov
push
daa
idivl
push
lds
xor
add
test
dec
hlt
lock
jmp
pusha
and
push
sub
fcompl
cmc
and
mov
inc
cmp
clc
int3
aam
arpl
in
mov
push
inc
xchg
imul
or
repz
jb
hlt
movsb
lds
push
mov
test
call
mov
add
cmp
repnz
fistpl
sbb
icebp
pop
cmp
pusha
or
dec
jecxz
mov
or
push
pop
enter
fwait
mov
cltd
fwait
scas
mov
pop
bound
pop
mov
jp
jmp
cmp
lods
inc
jle
fxtract
or
jns
lcall
cmp
xchg
adc
add
subb
addr16
aas
lret
mov
xor
mov
aas
cld
jo
mov
sub
push
inc
int
xchg
lcall
ret
mov
jge
xchg
shrl
cmp
stos
mov
add
push
test
out
mov
lods
sbb
clc
push
loop
sti
xchg
push
cmpsb
sti
sub
mov
das
aaa
inc
insl
daa
stos
std
iret
jno
push
ljmp
call
fnstcw
lds
ljmp
mov
jg
pusha
sbb
aaa
fiaddl
and
out
ret
aam
sub
push
inc
mov
xor
xchg
test
cmp
dec
cltd
dec
push
cli
rorl
loop
mov
aam
dec
jno
push
push
dec
mov
iret
jo
jge
imul
fstps
mov
in
jbe
testl
dec
jne
add
cmp
adc
ret
push
jmp
outsl
or
or
jne
inc
xchg
jp
movsl
push
repnz
inc
push
mov
add
movsl
mov
xor
ljmp
push
inc
add
xchg
xchg
xor
sub
mov
jo
fsubs
jle
ja
mov
sbb
loop
inc
inc
mov
aas
pop
push
inc
icebp
push
jno
push
mov
movsb
mov
or
push
dec
int3
jae
repnz
shrl
addr16
pop
mov
xchg
inc
push
mov
int3
call
jnp
pop
jo
sbbl
fcoml
cmp
test
xchg
lret
dec
xorl
push
imul
sbb
mov
sub
loop
lods
sbb
int3
scas
inc
leave
xchg
mov
leave
xchg
outsb
mov
in
popl
daa
push
and
xor
je
push
inc
arpl
lods
subb
movsl
sub
mov
cli
jle
insl
lret
xchg
jge
lea
mov
ret
xor
pop
jo
xchg
and
std
insl
hlt
mov
arpl
dec
pushf
pop
les
ljmp
cmpsb
cmp
mov
lods
shll
ret
idivl
std
daa
dec
flds
int
in
add
lea
cs
cmc
sti
daa
mov
loopne
push
or
les
and
lcall
add
sub
inc
xor
inc
sbbb
sti
dec
adc
fcomp
int
dec
and
ds
clc
xchg
lods
pop
add
inc
outsb
xchg
ret
cmp
push
add
sub
imul
shrb
ret
xchg
sub
sub
outsl
pop
mov
adc
stc
jecxz
xchg
xchg
imul
arpl
sub
xchg
and
mov
outsl
mov
nop
es
movsl
inc
popf
cmc
cld
jnp
push
and
adc
cmp
aad
in
mov
adc
lahf
xor
lcallw
cmc
mov
jb
dec
jmp
orl
dec
lods
pop
inc
hlt
daa
ja
out
xor
mov
pop
sti
es
lods
jae
lock
add
cmp
sub
mov
push
inc
pop
inc
mov
or
or
pop
imul
mov
mov
popf
cmpsl
adc
shlb
adc
or
dec
cmc
add
sub
xchg
pop
jge
jle
jb
sub
xchg
and
mov
iret
dec
adc
mov
outsl
xchg
enter
push
or
xchg
and
pushf
mull
lahf
dec
and
sub
ffree
ljmp
mov
or
ret
leave
xchg
pop
or
sbb
shl
inc
sbb
pop
cmp
pop
fs
push
xchg
clc
mov
adc
jbe
fwait
xchg
add
cmp
into
jb
and
insl
push
pop
test
cld
pushf
pop
shlb
test
ret
jae
hlt
sbbl
loope
pop
pop
fmull
or
jbe
sub
nop
cmc
in
ret
fwait
cltd
cmp
notb
icebp
adc
lahf
inc
lahf
lea
cld
push
mov
cmpsl
push
xchg
mov
inc
or
cmp
push
adc
incb
pushf
sahf
call
sarl
add
add
jne
negb
movsl
mov
stos
orl
movl
lahf
ret
test
dec
mov
add
mov
fs
arpl
inc
lret
and
xchg
fdivl
jne
or
pop
ret
xor
addl
bound
jle
mov
cli
orl
sbb
xor
call
test
xchg
pop
xchg
loopne
adc
sbb
cmpsl
ret
loopne,pn
hlt
movsb
fcomp
jge
or
outsl
jbe
call
fwait
arpl
call
pop
roll
or
jb
sub
loope
sbb
stos
fcomi
movsb
sub
jmp
out
sub
std
pushf
stc
imul
aam
std
sti
std
sub
hlt
push
fmull
test
ret
pop
jne
js
out
push
inc
dec
das
pop
xchg
dec
fnstenv
jns
add
fnstsw
test
stos
cmp
mov
imul
pusha
cmp
sbb
dec
cmp
mov
in
int
xor
push
lcall
ret
and
pushf
mov
mov
mov
fiaddl
sub
imul
mov
or
sarl
mov
or
mov
inc
inc
icebp
rcl
sbb
test
jl
ret
dec
push
sbb
out
xor
sbb
push
adc
push
cld
jle
dec
mov
ror
or
into
mov
movsl
push
inc
jle
adc
sub
in
and
pushf
push
lods
int3
push
enter
xor
into
mov
push
mov
je
imul
push
mov
mov
or
cmp
lds
imul
mov
and
test
lods
jb
inc
in
cmpl
ret
xor
lret
mov
cmpsl
cltd
inc
arpl
sbbb
jb
pop
js
negl
pop
dec
xor
int3
or
and
push
aaa
fiadds
out
mov
push
cmpsl
pop
xchg
and
ret
ds
mov
adc
ret
into
in
and
fmuls
adc
ss
mov
pop
mov
dec
movsl
cmp
fs
jb
mov
scas
insl
test
lea
bound
mov
fiaddl
adc
xchg
fdivrl
xchg
jecxz
push
sahf
pusha
int3
mov
inc
and
xor
clc
mov
adcb
xor
push
sahf
and
add
jnp
xchg
mov
push
jae
jmp
and
pushf
inc
arpl
fsubrs
mov
js
pop
jb
outsb
imul
mov
fsub
repz
lods
out
cltd
mov
rorl
imul
xor
test
cltd
bound
outsb
and
cmp
sbb
mov
jge
cli
mov
ret
lcall
aaa
js
and
cwtl
pop
adc
dec
mov
hlt
rcl
push
mov
insl
pop
add
pop
push
sbb
cld
mov
into
sub
in
adc
test
lea
add
adc
mov
xlat
and
sbb
fs
and
adc
mov
hlt
rclb
rolb
shll
pushf
leave
xchg
mov
insl
pop
mov
rcrb
cs
or
jb
add
sub
adc
push
and
fcomi
jge
pop
or
or
pop
xlat
scas
aad
pusha
xchg
pop
out
xchg
adc
inc
aaa
cs
in
mov
iret
sub
call
inc
dec
push
inc
jns
jp
adc
add
add
mov
dec
mov
or
out
jnp
js
cmp
imul
outsl
push
jge
mov
aas
push
pop
cs
cs
imul
adc
xchg
cmp
arpl
lahf
dec
jecxz
jae
imul
adc
jb
test
out
inc
adc
pop
out
nop
dec
adcb
cmp
and
aas
fidivrs
jo
sub
mov
cli
bound
lock
xchg
push
scas
mov
push
out
mov
lahf
stos
or
movsb
xchg
xchg
mov
push
mov
pop
in
xchg
sub
shlb
jle
inc
xlat
ss
mov
xchg
xchg
push
xlat
mov
xlat
mov
mov
xchg
in
jae
inc
in
xor
js
popa
mov
push
stos
dec
adc
int
dec
inc
outsb
push
adc
xchg
into
nop
jmp
cltd
sub
outsl
push
push
dec
lahf
mov
sbb
das
stc
fmuls
mov
stos
push
aaa
xor
adc
addr16
inc
or
dec
dec
adc
push
fnstenv
lea
mov
xchg
imul
push
scas
push
mov
dec
lods
sub
popf
mov
mov
push
lret
cmp
mov
cld
push
or
popa
mov
loop
pop
scas
dec
fwait
nop
add
dec
ja
test
dec
ret
lret
mov
aaa
int
mov
cli
mov
push
cld
jae
out
dec
push
outsl
imul
jbe
cmp
sbb
lcall
andb
shl
inc
arpl
sub
jno
or
cmp
into
dec
pop
dec
mov
cmp
lret
jmp
xor
jne
mov
cmpsl
mov
push
and
lock
cwtl
int
ud2
add
mov
rorb
repz
arpl
test
mov
dec
insb
sub
std
or
repz
mov
jbe
pop
sub
jb
clc
mov
shlb
dec
pop
repz
inc
cmc
int
inc
pop
sub
enter
add
adc
inc
lcall
ret
test
mov
outsb
divb
insb
pop
clc
dec
mov
lea
push
xor
mov
cli
adc
mov
test
push
push
cmpsb
pop
mov
repnz
push
push
add
cmp
push
or
sbb
fstp
insl
out
xor
insl
loop
cld
stc
add
lcall
fcompl
xorl
call
fbstp
push
adc
lds
inc
mov
pop
push
inc
mov
ret
mov
pushf
dec
pop
jl
ljmp
mov
lcall
cmp
data16
jnp
cmp
sub
in
not
mov
or
nop
out
pushf
decl
fdivrp
push
inc
or
mov
les
xlat
test
in
jnp
jle
push
shl
rcrb
icebp
into
popa
add
sbb
xchg
xor
cld
dec
daa
xchg
adc
pusha
and
mov
adc
inc
mov
test
lods
es
scas
xchg
inc
inc
iret
cmp
pop
or
dec
les
cmpb
int
and
cmp
repnz
loop
or
sbb
stos
or
mov
shlb
cltd
xchg
xor
mov
push
lea
inc
push
xchg
hlt
inc
or
push
jmp
add
or
cwtl
push
mov
cmpsb
outsb
paddsb
in
mov
test
jnp
dec
mov
ss
les
or
cmp
loope
mov
hlt
mov
and
sbb
dec
cmp
sbb
imul
out
stc
data16
stc
pop
jno
repnz
out
mov
sbb
imulb
fcmovb
pop
out
ss
icebp
push
dec
sbb
jmp
or
js
in
inc
xchg
adc
jne
fisttpll
aam
cmpb
dec
push
popa
cwtl
mov
sar
pushl
gs
mov
into
sbb
imul
ljmp
rcll
mov
dec
sbb
sub
sbb
repz
stos
and
loop
fists
into
pop
sub
mov
push
mov
pop
pop
push
lods
mov
or
push
clc
call
dec
pop
and
pop
pop
cmpsb
sbb
lods
shr
mov
movsl
dec
loope
pop
outsl
out
mov
lea
movl
shll
jge
mov
push
ret
aam
mov
sbb
jne
out
sub
push
decl
cltd
xlat
push
sub
roll
pop
mov
jl
and
push
fwait
ja
mov
xchg
std
jns
dec
dec
imul
jmp
stos
jno
ljmp
mov
push
mov
inc
out
lods
mov
add
sahf
sti
mov
lods
and
out
jmp
test
adc
sbb
cmpsl
js
fucom
xor
push
add
loopne
mov
and
mov
push
cmpsb
pop
and
outsl
adc
dec
add
adcb
pop
fsubrs
or
and
jp
xchg
xor
pushf
sbb
pushf
aas
lea
cmp
rolb
adc
xchg
or
fsub
cmp
outsb
xchg
sbb
jle
rolb
and
xor
pop
sub
std
addb
out
mov
mov
outsl
xor
aas
divl
mov
adc
mov
es
inc
testl
xchg
mov
sti
xor
sbb
fstps
inc
test
and
and
les
cmp
dec
xchg
adc
rolb
pusha
outsb
push
sbb
mov
sbb
push
xor
shlb
es
shlb
add
dec
das
pop
scas
cli
cmp
push
pop
jmp
push
inc
jno
mov
add
xor
stos
aad
mov
scas
push
jns
mov
movsl
lds
lods
xchg
arpl
mov
ret
mov
xor
imul
lods
addl
les
xchg
xor
dec
daa
adc
in
jp
fimuls
push
jp
arpl
jg
jge
sbb
or
inc
rol
sbb
add
jno
les
pop
mov
lahf
test
mov
cltd
push
repnz
sub
sbb
shlb
in
sbb
js
mov
daa
mov
rep
outsb
call
mov
int3
and
xchg
dec
sub
or
jns
push
and
xchg
mov
imul
sub
xchg
sub
push
enter
cmp
negl
pop
xor
mov
arpl
pusha
out
mov
sahf
std
ret
fsubrs
in
fldcw
add
mov
ljmp
sbb
inc
and
sbb
mov
sub
ret
roll
pop
xlat
in
dec
inc
mov
ss
test
xchg
sub
push
rorb
push
and
cmp
clc
sbb
cltd
aad
hlt
cli
aas
js
out
xor
aam
aam
out
iret
pop
es
inc
daa
xchg
inc
sub
sar
lahf
dec
pop
mov
mov
pop
addl
xor
fnstenv
adc
cmp
push
outsl
test
and
cmp
xchg
in
cmp
mov
or
inc
scas
test
pusha
xchg
cwtl
xor
cmpsb
push
dec
pusha
xchg
test
add
mov
push
lret
pusha
popa
dec
sub
mov
cld
cmc
xor
loope
inc
add
stc
inc
scas
sbb
in
xor
pop
push
xchg
popf
test
outsl
add
or
fs
fnstenv
cltd
ret
add
fisubrs
movsl
ficoml
lea
sub
pop
and
sahf
ds
aam
mov
xchg
mov
or
test
aas
cmpsl
lcall
mov
jbe
pop
and
lcall
mov
push
adc
test
rorl
mov
call
repz
push
xor
dec
mov
push
stos
xor
xor
pop
and
sbb
cs
dec
in
add
cmp
push
ds
sbb
cmp
xor
lods
push
out
cmp
pusha
mov
lret
inc
enter
lea
adc
inc
push
mov
aam
lret
fistpll
iret
and
lret
in
stc
mov
clc
jmp
insb
in
popf
jmp
ljmp
test
mov
inc
or
dec
mov
fiadds
dec
out
mov
or
in
test
jle
add
insl
lods
xchg
xchg
outsl
mov
pop
mov
jg
jb
or
push
ja
fdivrs
hlt
mov
inc
enter
jg
data16
pop
ds
stc
dec
cmp
sbb
mov
js
cltd
adc
sub
jnp
jge
inc
and
je
lds
inc
mov
fisttpll
mov
push
loope
mov
out
mov
lret
adc
pop
cmp
jl
out
dec
out
out
jge
xor
leave
pop
pop
fwait
loop
and
add
shrl
movsl
mov
adc
adc
cli
div
jae
push
jg
gs
stc
loop
mov
dec
mov
jno
xchg
or
dec
jg
ja
inc
mov
arpl
xchg
lahf
repz
sbb
addr16
loopne
xor
into
inc
nop
push
mov
lock
add
sbb
pusha
push
fdivr
repz
iret
mov
lods
rcll
leave
xlat
cmpsl
popf
mov
enter
jg
out
test
lods
mov
insl
push
loopne
lods
lahf
push
in
mov
jbe
int
fldt
loope
mov
cmp
test
int3
scas
aas
inc
cmpsl
adc
push
jnp
lods
add
lcall
sbb
mov
and
ret
mov
mov
and
sub
push
addr16
sub
mov
xchg
sub
leave
adcb
ja
lods
sub
loopne
sbb
das
xor
or
mov
daa
cmp
stos
iret
xor
add
xor
xor
mov
scas
fwait
jmp
int
sub
pop
sti
sbb
addr16
dec
add
or
lahf
int
pop
push
insl
cmpsl
push
push
sahf
popa
dec
pop
push
xchg
repz
jb,pt
lret
nop
or
ds
mov
add
int
aad
imul
dec
popa
lock
clc
inc
mov
test
jecxz
pop
outsl
cmp
and
pop
out
into
fldenv
lods
decl
pop
lock
out
cmp
loopne
mov
pop
cmp
adc
cmp
mov
or
cmp
test
es
sub
xor
ret
or
cmp
push
jp
push
inc
repz
fwait
imul
add
pop
outsb
int
fidivl
mov
rol
lret
cmc
xchg
jmp
pop
and
and
inc
out
sub
jmp
pop
loope
in
testl
adc
mov
movsl
into
iret
sbb
adc
inc
ja
lret
add
fisttpll
or
jp
push
sahf
mov
dec
out
test
out
xor
and
int3
xchg
jge
xchg
cld
pop
jbe
mov
push
pop
xor
and
and
lds
imul
and
fadd
mov
popa
push
jg
shrb
cmc
jle
out
or
add
dec
dec
subl
mov
xchg
mov
fnsave
xchg
push
push
xor
loopne
cmp
push
pop
lahf
adc
add
xchg
adc
and
and
loope
lock
sub
push
ss
test
sar
and
add
call
stc
out
mov
sbb
sti
pop
adc
sbb
push
ret
ja
xorl
mov
arpl
mov
push
addb
fdivrl
pop
fnclex
mov
mov
rclb
mov
mov
mov
sbb
jmp
sbb
fs
fsubs
dec
sbb
inc
xlat
mov
inc
push
jl
mov
in
addr16
mov
aam
xor
rcl
ljmp
pop
cmp
sarl
mov
xor
sbb
call
rep
jbe
ljmp
jecxz
test
lahf
imul
push
mov
ret
arpl
rcl
clc
dec
mov
push
in
and
inc
data16
push
dec
mov
and
jo
cld
sbb
lea
arpl
flds
mov
loope
jno
mov
sub
or
jb
subb
sbb
rcr
fbstp
rcr
mov
add
mov
fucomi
mov
mov
subl
cmp
and
pop
or
test
add
push
sub
cmpsb
inc
xor
movsl
or
mov
pop
mov
aas
popf
aam
aas
mov
push
adcb
daa
outsb
push
mov
rorl
xchg
int
inc
pop
xchg
pop
test
push
xchg
jne
and
in
mov
outsb
test
popl
popf
mov
call
mov
mov
idivb
aas
push
push
insl
faddl
leave
or
fxch
mov
mov
orl
pop
push
jp
and
dec
pop
andb
adc
or
sbb
mov
dec
dec
pusha
daa
jmp
mov
adc
test
xor
insb
out
inc
pop
mov
mov
call
sub
inc
or
aas
aad
sub
jge
out
out
dec
jns
lcall
push
pop
into
mov
inc
bound
xor
aam
push
mov
push
and
icebp
xchg
cli
lods
aad
shll
xor
fstl
repz
fldenv
and
dec
jg
xor
mov
movsb
loop
out
repz
xchg
cltd
mov
adc
push
jae
pop
clc
xchg
mov
fistpl
ljmp
and
inc
cmp
jo
jo
rcrb
ror
and
std
cwtl
pop
push
mov
adcb
fisttpll
imul
nop
or
and
mov
mov
jmp
sbb
cmp
add
jns
cld
mov
bound
out
cli
mov
cmp
cld
test
push
ret
pop
xchg
es
cmp
jb
xchg
sub
and
les
std
pop
mov
dec
jno
test
add
push
adc
sbb
cmp
adc
ljmp
pop
aam
in
mov
arpl
mov
cmp
dec
out
inc
mov
aam
loop
ficoms
aaa
fdivrl
sbb
nop
and
pushf
push
leave
or
mov
fdivs
sub
aad
mov
in
add
int3
cmp
pop
and
popf
fs
mov
or
push
imul
jle
out
outsb
clc
cmp
dec
xor
or
test
adc
add
dec
jmp
leave
mov
andb
mov
imul
data16
scas
cwtl
dec
loop
mov
rcrb
mov
and
int
aam
shlb
cli
mov
mov
xchg
shl
daa
fsubs
in
jb
jle
addr16
push
shrl
lcall
push
inc
aam
aam
pushf
lds
aaa
lods
cmp
pusha
jb
push
addb
cmp
push
cltd
cmp
sub
jp
mov
push
cmp
jle
daa
lods
mov
rclb
sub
lret
je
popa
sbb
fildll
cmp
cmp
sub
jle
scas
pop
jns
fwait
mov
sbb
pop
aas
and
dec
pop
mov
jb
in
mov
lea
ljmp
push
scas
push
mov
orl
jp
mov
and
imul
mov
jp
scas
sahf
jns
sahf
add
sbb
pop
lcall
inc
push
push
xchg
insl
sub
icebp
fcmove
or
cli
clc
popf
mov
stos
or
mov
jecxz
cmc
fiadds
sub
in
xor
stos
outsl
rcll
addr16
pmulhw
mov
sbb
pop
jbe
or
mov
adc
or
sub
shl
pop
push
cltd
sub
or
pop
outsl
inc
adc
mov
sbb
push
scas
fwait
sbb
cmp
sub
dec
push
and
add
loope
int3
inc
insb
and
adc
dec
lret
pop
nop
cmp
and
cli
cmpsl
call
test
push
mov
add
inc
lret
mov
lock
lea
stos
leave
das
and
sbb
in
fsts
into
adc
xlat
mov
std
pop
jns
popa
xchg
lods
mov
inc
jo
and
ret
add
mov
cmp
xor
adc
pop
shrb
xlat
jge
cmc
stos
in
or
adc
adc
js
mov
jmp
rorl
xor
and
or
inc
dec
iretw
adc
pushf
int
test
sbb
and
cmpsb
ret
pop
jecxz
inc
leave
push
gs
std
rolb
cld
shl
and
inc
inc
jecxz
imul
gs
movsb
xor
scas
add
iret
mov
pop
dec
dec
popa
inc
mov
or
mov
sub
xchg
lds
mov
push
ficoml
push
pop
mov
cli
xchg
je
es
or
and
cmp
mov
ljmp
xor
jno
or
inc
sti
in
dec
and
xchg
loope
loopne
test
ret
push
movsl
xor
mov
mov
jns
mov
pop
stos
xor
add
add
ljmp
int3
sbb
in
xor
dec
fistps
mov
fadds
rcrb
repnz
mov
into
or
int
mov
or
roll
mov
push
imull
and
rorb
gs
adc
movb
out
fcoml
push
mov
ficoml
jno
inc
sbb
sub
loopne
fdivl
enter
jno
mov
inc
or
mov
dec
enter
sub
jnp
cmp
mov
pop
js
imul
mov
mov
dec
inc
sbb
rol
cmp
cwtl
sarb
push
aaa
add
or
adc
cwtl
mov
mov
rcr
fcmovu
pop
adc
dec
inc
fsubl
push
divl
mov
sub
sbb
mov
add
add
or
int3
movsl
xor
stos
mov
sub
xor
lods
rorl
scas
pop
xchg
jmp
adc
cmpsb
xchg
dec
xor
xor
insb
lahf
addr16
xchg
mov
cmp
lods
stos
xor
je
loop
inc
jae
loope
and
int3
enter
jo
int3
adc
mov
push
pop
out
mov
popa
test
xchg
push
adc
rcr
pop
jl
mov
sbb
rcrl
dec
fstl
aas
outsb
shlb
fnsave
dec
pop
mov
ret
and
ret
sbb
mov
push
dec
adc
or
dec
xor
shlb
std
adc
inc
and
or
movsb
push
std
cwtl
scas
cwtl
dec
repnz
xor
rolb
xchg
and
repnz
and
je
xor
push
add
das
and
int3
xor
sbb
and
push
and
sbb
fildll
out
call
and
leave
inc
xchg
add
cmp
dec
lds
out
insb
in
lret
mov
jl
jae
sbb
test
insl
mov
gs
mov
daa
and
inc
dec
sbb
add
inc
jl
push
xchg
call
outsb
das
lds
test
pop
mov
aas
int3
sub
xchg
lods
mov
scas
pop
mov
add
push
xor
jne
jno
push
push
sub
xchg
xchg
adc
mov
sub
or
sub
icebp
or
sub
cmp
sub
pop
push
pusha
imul
and
xor
cltd
xor
pop
ret
sbb
jnp
push
xchg
jl
std
mov
cltd
es
jmp
adc
sub
push
push
cltd
push
cmpsl
dec
imul
stc
scas
jns
je
xor
stc
rol
lret
xor
repz
pop
enter
push
sbb
aam
pop
push
movsl
dec
or
dec
testb
pushw
lea
cwtl
psubw
cmp
sarl
mov
inc
test
mov
jnp
pushf
jb
push
xchg
leave
jbe
sbb
dec
arpl
jp
sub
adc
loop
jp
fbld
incl
jb
jbe
fsubrp
cmpsb
mov
sub
fisubrs
mov
pop
jo
mov
cmpsb
test
jb
pextrw
inc
icebp
es
mov
testb
mov
fimuls
dec
mov
mov
fcomps
andl
and
pushf
xor
lret
in
and
ds
hlt
call
sub
xchg
pop
dec
or
ficoml
prefetch
or
jmp
pop
rcll
cmpsl
iret
loope
sub
sub
add
arpl
outsl
sbb
jge
daa
ja
popf
mov
adc
xlat
test
pop
mov
aad
into
sbb
dec
fdivp
jo
push
data16
sub
xchg
xorb
jg
jo
xlat
mov
jge
xor
int
cmp
pushf
in
arpl
push
std
mov
jge
fldt
jle
and
mov
inc
push
jns
arpl
mov
mov
cmp
sbb
sub
das
dec
idivl
adc
jp
mov
int
xchg
mov
mov
in
ja
adc
add
cli
fstpl
in
insl
mov
scas
mov
jb
mov
ret
jmp
scas
into
mov
xchg
adc
sbb
add
data16
lock
jge
xchg
scas
jle
pop
mov
clc
je
pop
ret
sub
out
cld
popa
daa
and
js
cs
aad
and
dec
icebp
xchg
movsl
data16
jno
xor
lods
cwtl
cmpsb
mov
std
dec
aas
jo
lahf
fistl
mov
lret
test
xchg
nop
dec
mov
hlt
ds
pushf
movb
es
stos
mov
mov
adc
ljmp
pusha
test
dec
test
dec
test
jno
add
test
pop
fs
testl
ds
jo
sbb
or
pop
add
push
pop
fs
inc
pop
fs
lea
inc
cmpsl
pop
xchg
cld
fst
jae,pn
xor
dec
bound
push
push
adc
dec
cmpsb
fimuls
jle
lahf
ja
mov
sbb
xor
dec
stc
pop
lret
ds
into
aas
outsl
lcall
fstpt
mov
cmp
or
mov
fadd
inc
sarl
push
jle
lds
call
xor
dec
mov
gs
or
lods
lods
pop
cmp
push
push
gs
add
nop
test
movsb
fucomip
sbb
xchg
mov
cmovno
lretw
cmc
out
xchg
cli
and
pop
pop
sbb
pop
adc
in
dec
pop
lods
cli
push
js
cmp
into
pop
and
data16
imul
adc
cmpl
arpl
lock
ss
sbb
ja
dec
int
xchg
in
push
pop
pop
sbb
or
mov
ret
mov
mov
sbb
aaa
in
pop
in
mov
cmp
jnp
ret
in
lret
push
and
aaa
lret
ljmp
shlb
jp
out
aas
lret
push
lret
inc
fbstp
adc
lret
inc
jl
mov
icebp
sub
push
jl
popf
addl
ret
adc
adc
dec
cmp
testl
cmp
int3
outsb
shll
pop
ficomps
sbb
mov
jne
pop
cmp
cmpb
cmp
jnp
mov
or
adcl
pop
xor
inc
jp
mov
push
leave
jmp
hlt
xchg
jle
push
rorl
sbb
xchg
xor
mov
add
jge
repnz
and
mov
dec
cltd
push
clc
fnsave
lods
pop
addr16
mov
in
cs
adc
lods
out
pop
mov
mov
lea
cmpsl
imul
mov
pop
xchg
inc
aas
aaa
fdivrp
jle
mov
loope
sub
or
rolb
iret
xchg
sarl
mov
and
or
and
cli
mov
mov
or
test
ljmp
pop
sub
scas
sbb
movsl
xor
jmp
mov
or
call
popf
out
aad
inc
fdivrl
sub
cmc
scas
pop
jp
mov
xchg
mov
int
or
xchg
jnp
jle
cs
xor
sub
in
movsb
push
cmpsl
push
sub
scas
pop
mov
repnz
es
fisubrs
enter
lcall
loopne
adc
mov
cli
inc
push
lock
mov
mov
mov
push
push
add
dec
xor
inc
mov
jno
or
negb
sahf
xor
adc
push
imul
xchg
les
lret
stc
js
shl
push
lds
lds
hlt
cmp
xchg
mov
add
jb
fsubs
push
cltd
jmp
inc
sbbl
push
je
testl
lea
dec
lahf
cmpsl
fadd
xor
dec
mov
stos
xchg
ret
add
add
lret
inc
pop
push
sbb
sub
jl
pop
movsb
sub
pop
pushf
sub
out
lret
inc
inc
lods
and
gs
mov
add
cmp
sub
popa
sbb
rorb
aaa
or
leave
sbb
test
sbb
adc
push
es
cmpsl
loop
pop
loop
mov
sub
mov
sub
cmp
inc
scas
lea
cli
mov
in
xchg
push
bound
inc
jmp
jb
mov
flds
mov
pop
jl
pop
and
mov
mov
xor
mov
rolb
mov
push
cli
lahf
xor
int
stc
mov
pop
imul
js
jge
bound
add
insl
and
outsl
fs
repz
shrl
inc
adc
mov
ficomps
aaa
and
shr
lret
cwtl
pop
jg
mov
dec
sbb
push
and
js
push
gs
fwait
adc
mov
loopne
outsl
jnp
dec
add
into
call
sub
push
out
mov
jns
clc
jo
shll
inc
outsl
mov
lret
add
dec
sub
mov
mov
in
or
pop
cmp
xchg
pop
push
ljmp
jnp
test
loope
in
cmp
jb
mov
inc
jp
jne
sahf
jne
jae
loope
aad
jnp
mov
jl
inc
pop
push
rcrb
daa
push
sub
xor
push
jge
ja
sub
sbb
fmulp
mov
jg
pusha
mov
add
pop
insl
shrb
adc
push
or
rcll
cmp
jo
lret
or
cli
pop
sub
jmp
jne
mov
shll
in
pop
int
in
mov
sub
pop
orb
pop
mov
outsl
stc
add
sub
rep
mov
xor
inc
imul
or
xlat
push
mov
pop
inc
test
cmp
ljmp
and
inc
push
adc
nop
out
push
es
add
cmp
rolb
xorb
push
imul
pop
inc
stc
cmc
out
lret
rcrl
jg
fcmove
or
xchg
ret
scas
and
fldl
iret
out
and
add
addr16
movsb
mov
aas
jmp
pop
inc
imul
adc
fidivrs
pop
pop
mov
mov
fisubrs
in
aad
sub
xor
pop
mov
int
cwtl
push
lods
or
add
fsub
push
fld
outsb
rcrl
out
sub
sub
sub
mov
mov
loope
sub
fmul
inc
push
xchg
push
test
iret
and
sbb
insl
mov
stos
decl
les
adc
xchg
jb
fisttpll
add
push
lds
into
and
add
sahf
jle
mov
ljmp
clc
fsubs
xchg
xor
jg
lods
sub
dec
sbb
xor
gs
or
adc
ret
ret
and
shlb
js
pop
xchg
sbb
roll
mov
jg
in
std
es
mov
stc
pop
cmp
pop
sub
out
or
pop
mov
pop
push
loop
mov
sub
ljmp
dec
int3
push
test
and
mov
mov
jbe
popf
and
mov
imul
loope
cli
sbb
iret
cs
out
aas
mov
fwait
incb
lods
mov
cltd
pop
fists
lret
jo
sahf
mov
adc
bound
mov
rcrb
mov
shlb
mov
xor
and
fcompl
data16
test
push
les
call
notl
int
pop
fimull
mov
stos
jmp
ficoml
add
and
rorl
or
out
int3
mov
out
out
clc
hlt
imul
xchg
xchg
mov
aam
mov
movl
lret
movsl
repnz
xlat
lds
push
fwait
sar
mov
mov
xor
shlb
xor
push
in
adc
cmp
inc
mov
mov
out
rorb
sub
jmp
out
leave
pushw
in
cmp
adc
mov
in
mov
test
jg
jb
inc
pusha
fnstcw
pop
lret
dec
dec
or
cmpsb
mov
fnsave
cmp
add
idivb
xchg
and
fisubrs
mov
xchg
dec
adc
cmp
loope
mov
jge
xor
movsl
jp
cmp
cmp
iret
mulb
cmp
repz
inc
xlat
lock
mov
xorl
mov
repnz
dec
push
iret
xor
push
add
mov
movsb
mov
pop
insl
inc
add
and
addr16
cmp
dec
lahf
pop
fsubrs
xchg
dec
adc
cmp
cmp
fistl
mov
adc
das
mov
in
push
clc
es
cmpsl
in
lds
and
mov
jle
dec
or
inc
adc
pop
xlat
mov
cmp
ficompl
adc
adc
adc
mov
fisttpll
and
inc
pusha
les
jmp
fs
xlat
xor
je
out
add
out
loopne
jmp
testl
dec
cmpsb
jp
add
lret
xor
stos
rcl
pushf
stos
jg
push
into
jmp
pop
or
imul
adc
lock
movsb
fdivrl
enter
sti
mulb
int3
xor
fstpt
ficoms
fbstp
lahf
inc
jmp
jmp
cmp
ror
imul
ljmp
daa
adc
jb
cmp
popf
lret
hlt
adc
hlt
es
xor
insb
xorl
pop
in
jno
xchg
pop
insl
push
cltd
pop
cmp
lret
loope
mov
shlb
sahf
dec
mov
xchg
add
sub
sub
mov
roll
mov
mov
cmp
push
hlt
int
push
int
imul
pop
xchg
push
xor
sbb
fwait
lret
test
inc
jge
and
add
mov
cmpsb
jbe
leave
testl
aas
add
add
fiaddl
test
addr16
inc
sbb
dec
sarb
mov
mov
sahf
cltd
dec
rol
fdivs
test
xorb
mov
xor
cmp
ret
lret
xchg
cwtl
rol
jns
inc
insl
fbld
push
dec
insl
bound
or
cli
scas
sar
imul
jge
xchg
in
xchg
in
xchg
add
jno
repnz
mov
lea
sahf
or
incl
jmp
stc
lds
mov
pop
sub
int3
sbb
popf
call
xlat
sbb
and
fwait
adc
ja
mov
imul
add
xchg
or
cmpsb
push
pop
cmp
into
sub
cli
ja
movsb
cli
fists
mov
pop
out
mov
call
mov
add
hlt
out
push
add
addr16
jge
sub
les
jp
inc
imul
cmp
scas
dec
mov
push
aaa
lds
fcomps
mov
jb
imul
mov
les
stos
aas
mov
sub
adc
dec
mov
pop
sti
adc
xlat
fcomps
pop
mov
add
mov
mov
lret
clc
outsl
clc
out
in
loopne
jne
adc
test
adc
icebp
and
sub
jg
adc
sbb
jne
out
shr
pop
ljmp
rol
or
or
xor
popf
jecxz
test
insl
fisttpl
inc
mov
hlt
or
or
insl
dec
pop
repnz
ljmp
lock
pop
mov
rcll
out
orb
mov
out
xchg
pop
sub
aad
cli
jb
stc
pop
inc
mov
push
push
dec
sub
xor
arpl
cmp
mov
mov
mov
outsb
xor
ret
rorb
sbb
pop
sub
and
shrl
adc
jecxz
add
insl
jnp
pusha
push
xchg
repnz
jno
loopne
test
push
aam
or
outsl
xor
movsl
addr16
mov
mov
and
cltd
xchg
test
jecxz
inc
jmp
lods
js
sub
pop
inc
cmpsb
add
mov
xchg
pop
jp
cmpsl
xchg
movsl
cmp
insb
rolb
cmp
add
or
inc
movsb
scas
or
or
lret
pop
pop
or
cwtl
out
movsl
dec
ljmp
cmp
inc
jno
lahf
iret
mov
cmpsl
inc
lds
push
push
push
dec
mov
adc
shl
loopne
xlat
rol
popf
push
shlb
out
inc
rol
arpl
fs
jbe
inc
jecxz
and
gs
fidivrs
push
cld
jp
stc
mov
sti
push
jp
fdivrl
mov
shlb
or
jg
mov
mov
sub
fildll
jecxz
out
outsb
pusha
jmp
dec
enter
lea
jmp
pop
mov
add
notb
cltd
daa
mov
inc
aas
inc
xor
cmpl
push
and
aad
inc
jo
imul
sbb
pop
movsl
out
cs
cs
pop
cmp
push
dec
insb
jge
loop
stos
cltd
jo
cmp
add
cmp
xor
push
movsb
arpl
imul
inc
push
mov
or
inc
mov
jge
jmp
mov
inc
add
xchg
shlb
lcall
lahf
adc
or
fwait
add
cmp
cmc
andb
lock
addr16
add
je
out
xchg
xchg
cmc
repnz
xchg
lods
out
adc
xor
lock
movsb
mov
js
or
jne
mov
sub
hlt
repnz
ret
inc
cmp
fcomi
cmp
mov
jns
cmpl
pop
ret
daa
mov
xchg
inc
shrb
in
mov
test
push
push
fists
sbbl
mov
jl
imull
xor
je
andl
fsubs
or
repnz
cmp
xchg
mov
xor
cmpsb
or
sahf
xor
dec
icebp
jg
sub
stc
push
cmp
neg
sbb
out
xchg
or
push
sahf
test
sub
jno
push
incl
fisttpl
inc
mov
jmp
mov
adc
sbb
cwtl
sbb
sti
jecxz
cmp
sti
adc
addr16
test
mov
dec
stos
pusha
lcall
scas
mov
xchg
fists
pop
mov
mov
sbb
inc
pop
addr16
add
and
aam
lea
jne
divb
popf
es
add
xor
sbb
cmp
or
ljmp
lret
push
pop
js
insb
into
push
aad
mulps
mov
arpl
insl
cli
orb
or
jae
insb
lds
ret
popl
pop
adc
les
push
out
aam
jne
data16
aam
mov
pop
jle
add
adcl
hlt
addr16
int
lock
mov
insb
mov
shlb
jecxz
adc
scas
push
jge
xorl
dec
test
pop
movsl
pop
sbbb
xorb
sbb
or
sbb
mov
outsb
mov
aam
int
dec
daa
pop
jmp
cmp
pop
push
or
fs
lea
int
inc
int3
inc
inc
daa
mov
scas
cmpsl
scas
rol
out
ret
xor
inc
inc
cld
mov
test
stos
aad
loope
std
push
sbb
icebp
xchg
rcl
mov
mov
mov
shl
pop
ljmp
cwtl
or
xor
movl
das
xchg
orl
xchg
insb
add
lods
mov
adc
mov
and
scas
cmp
jp
popf
cmpsb
clc
into
mov
out
pop
jp
mov
xchg
shll
inc
imul
ds
lock
mov
dec
mov
and
stc
mov
mov
mov
fmull
cmp
xorl
add
xor
and
pop
mov
sbb
push
sbb
div
mov
sub
in
ds
dec
in
push
fisttpl
sub
les
xchg
sub
ret
in
test
shll
dec
ja
daa
dec
aam
sbb
je
repnz
imul
lcall
in
roll
xlat
sub
insb
nop
lods
repnz
ret
dec
imul
in
push
scas
mov
adc
sub
jecxz
adc
popa
jp
cmc
data16
call
mov
ss
add
mov
adc
out
jge
push
pop
mov
inc
xlat
xchg
cmp
aad
or
cmp
xor
lahf
add
std
test
movsl
mov
pop
push
cmp
xor
add
xchg
dec
cmc
out
je
xchg
mov
stos
sub
or
dec
dec
call
push
mov
add
stc
adc
lods
mov
mov
out
fs
outsb
add
mov
daa
dec
inc
std
pop
mov
xor
jge
movsb
xor
ucomiss
aad
nop
test
cmp
imul
std
lret
cmp
orb
ja
cmp
bound
js
and
sub
insl
inc
xchg
xchg
xor
and
jg
xchg
into
or
or
dec
ret
or
pop
xor
sti
push
mov
mov
test
insb
or
shll
ja
add
cmp
push
call
xchg
jb
outsb
lods
pop
ss
stos
jmpw
scas
cmp
xchg
jp
cmpsl
mov
jb
loop
sbb
dec
and
fs
cmp
lcall
and
es
sub
sarb
mov
cwtl
pop
dec
test
jmp
cmp
sbb
adc
cwtl
sahf
xor
inc
out
mov
jl
test
das
das
insb
jno
and
dec
pop
xchg
arpl
add
ret
dec
pop
inc
sti
imul
xor
lret
or
fiadds
mov
push
xchg
leave
mov
xchg
or
pop
sub
ds
pop
sbb
sti
xchg
push
xchg
sbb
subl
movsb
jnp
dec
and
mov
xor
jmp
dec
test
inc
icebp
or
and
int3
adc
sarl
mov
mov
sbb
pop
adc
mov
mov
dec
push
push
xor
ret
jo
bound
std
imul
adc
cltd
ljmp
repz
aam
test
push
push
xchg
fldcw
inc
dec
nop
dec
bound
arpl
mov
push
repnz
add
dec
fistpll
pop
fldcw
cmpsl
insl
icebp
mov
xchg
scas
sub
mov
or
inc
xor
jbe
pop
int3
dec
jne
cmp
fstp
in
fisubs
inc
fnstenv
cltd
ds
or
mov
jb
mov
jbe
mov
mov
outsl
pop
int3
subb
xchg
mov
mov
xchg
iret
pop
pushf
std
mov
mov
push
loope
fisubl
push
mov
je
nop
xlat
cs
loope
adc
add
cmpsl
in
add
fdivrp
inc
outsl
pop
call
add
jmp
xchg
and
mov
je
and
lds
sbb
cmp
faddl
out
and
lcall
inc
jg
lea
stc
int
jne
pop
xor
cmp
or
inc
and
cwtl
jecxz
inc
mov
push
jbe
daa
push
adc
cmc
cli
mov
frstor
mov
aas
fcmove
cmp
dec
es
sahf
push
in
push
mov
cmp
jp
fsubrs
dec
dec
mov
addr16
sub
dec
xor
or
insl
push
add
test
pop
mov
fimuls
je
pop
push
in
xor
in
lcall
insb
mov
lea
adc
stos
fmulp
add
jns
mov
inc
dec
cmp
and
pop
mov
mov
xor
fidivrs
mov
mov
mov
inc
sub
nop
jg
bound
add
ds
adc
sahf
mov
cs
std
sbb
repnz
sbb
in
mov
jno
sbb
lds
shll
push
sbb
sub
cmp
in
mov
fsubs
cmp
dec
inc
add
jle
jo
andl
fnstsw
call
repnz
into
inc
stc
lcall
pushf
sbb
xchg
pop
je
lock
bound
andb
push
sar
cmc
jb
sub
dec
jecxz
push
lock
popf
adc
jp
outsb
mov
and
movsl
into
js
jnp
movsl
aas
mov
das
inc
das
ret
mov
in
inc
cmp
jmp
cmpsb
lock
dec
sbb
ret
mov
cwtl
lock
popa
inc
push
int3
or
push
or
popa
insb
ret
inc
enter
aam
adc
add
stc
addb
sbb
fprem
sti
dec
and
fwait
push
test
mov
in
mov
cmpsb
adc
pop
pop
cmp
call
and
cltd
aam
sbb
sub
scas
xor
enter
rol
popf
sbbl
outsb
test
cmp
mov
imul
cwtl
sar
or
push
fs
scas
cli
stc
and
stc
mov
rolb
xchg
mov
dec
push
xchg
xor
mov
sahf
imul
jnp
mov
in
xor
ds
in
inc
cmp
fdivs
pop
or
loopne
stos
loop
xchg
into
into
xchg
jle
add
mov
stos
lods
inc
sub
sti
jb
pop
mov
jns
xor
mov
push
pop
cmp
push
pop
ja
push
hlt
stc
mov
in
enter
sbb
jb
sbbl
mov
sub
mov
or
cs
fdivr
aaa
adc
jbe
add
sbb
shll
dec
jg
roll
jns
xor
stos
cmpsb
loope
inc
aas
mov
add
xchg
mov
or
rol
and
fsubrp
jl
lret
sub
add
cmpsb
lret
cmpb
sgdtl
fists
leave
mov
xchg
insl
and
jne
mov
xchg
or
aaa
sbb
cmp
and
cmp
xchg
fadds
add
push
icebp
ss
adc
push
std
cmpsl
lea
push
fistps
ja
adc
pushf
sbb
les
aas
jmp
movaps
es
xchg
sti
mov
rcl
sbbl
mov
mov
in
into
daa
xor
push
mov
or
mov
insl
jmp
jb
jno
sbb
mov
mov
popf
pushf
pusha
push
cmpsb
jno
sub
and
ret
insb
mov
jb
sub
nop
sti
and
repnz
xchg
mov
mov
jnp
scas
lods
pop
xchg
shll
jecxz
outsl
incl
xchg
adc
xlat
dec
xchg
lock
sub
leave
xchg
out
or
ret
cmpsb
adc
xchg
in
pop
add
cmpsb
out
in
jno
mov
divl
or
jbe
mov
in
sbb
sbb
push
dec
test
and
push
shll
sub
mov
je
into
push
scas
mov
mov
cmp
add
sub
cli
mov
and
and
jnp
jl
hlt
insl
rorb
sahf
inc
xchg
or
imul
push
jae
sti
xchg
cs
ret
data16
mov
scas
push
mov
es
sub
out
test
xchg
stos
jo
xchg
pop
call
mov
mov
pop
mov
nop
in
sbb
pop
sbb
inc
imul
push
test
pop
mov
sbb
xchg
dec
shrb
out
rorl
int
jmp
add
push
mov
lock
cmp
outsl
fsubrl
movsb
or
push
dec
inc
xor
fst
aam
loop
pop
frstor
or
xchg
mov
fwait
imul
jbe
addr16
outsl
mov
mov
out
in
mov
js
cltd
jbe
cs
pushw
jns
sbb
jl
xchg
sub
xor
push
inc
add
mov
bound
adc
inc
imull
xchg
lret
sahf
cmpsl
push
fstl
ret
rorb
insl
dec
and
inc
jl
divb
das
mov
push
inc
fimuls
scas
pusha
sbb
sbb
test
fildl
enter
vmread
or
xchg
jno
cmp
sub
or
inc
icebp
mov
sub
add
pusha
push
adc
push
adc
adc
sahf
lahf
sbb
cli
add
ret
pop
hlt
sbb
mov
stos
xchg
aam
sub
mov
mov
aad
cmp
aas
jp
jae
jne
dec
mov
xchg
xorb
aas
dec
xor
xchg
xor
jl
sbb
imul
or
push
add
sarl
xor
pushf
sub
cmpsl
push
jge
sahf
mov
call
xchg
arpl
ret
pop
mov
test
insl
jecxz
sbb
cwtl
adc
out
xor
jge
sub
dec
ret
xchg
push
dec
xor
mov
sbb
daa
add
mov
xlat
test
sbb
sub
mov
lea
int
outsl
mov
xchg
stos
fistpll
out
inc
popf
pop
mov
jb
pop
loopne
imul
js
mov
inc
xchg
cmpsb
outsl
aas
shll
lahf
cmp
mov
nop
cltd
sub
xchg
push
jp
int
mov
mov
adc
stc
test
roll
outsb
inc
inc
push
clc
cltd
add
mov
das
icebp
dec
scas
mov
cwtl
mov
test
xchg
push
and
cmpsl
push
jg
jne
push
push
mov
movsb
cmp
or
outsl
es
sub
test
push
stos
ljmp
pusha
inc
sbb
mov
or
pushf
mov
fistps
xchg
xchg
push
ss
ss
popf
mov
repz
sahf
sub
fwait
jg
popf
push
fucom
pop
in
fcmovne
imul
cmovp
pop
or
and
insl
mov
cmpl
outsl
in
cmp
aaa
xor
and
outsl
jle
mov
sahf
xchg
movsl
sub
movsb
and
add
adc
shl
dec
inc
stos
cmp
and
es
sub
roll
cwtl
iret
clc
in
imul
mov
adc
mov
mov
pop
push
cli
cli
push
dec
lods
subb
mov
jnp
pop
in
popa
insl
lret
mov
das
jmp
dec
sub
shll
cmp
sbb
cs
sbb
add
or
loope
rcr
es
rorb
adc
xor
pushf
repz
and
push
add
add
or
xlat
xchg
push
fnstcw
outsb
or
std
adc
or
cmpsb
stos
mov
sub
cmp
into
dec
dec
js
cmp
mov
pop
jle
fwait
out
cltd
add
fldt
ss
lahf
mov
cmc
out
inc
arpl
jg
je
pop
popf
cmpsl
cmpsl
test
lea
pop
loope
test
adc
cmp
popf
sub
stc
sbb
arpl
jae
adc
stos
int
xchg
pause
xadd
push
push
xor
mov
mov
out
aaa
sbbb
aam
outsb
push
inc
ljmp
test
add
ds
push
pop
imul
fcompl
arpl
push
out
nop
out
cmp
pop
mov
repz
push
mov
adc
inc
sub
rcll
sbb
pop
aam
jmp
fwait
loopne
xor
fldenv
pop
in
js
jecxz
test
sub
ret
fucompp
jp
out
mov
xchg
fnstcw
sub
decb
lcall
mov
adc
call
jl
jns
mov
sbb
scas
push
subl
out
push
inc
push
and
fbstp
lock
sti
cwtl
xchg
pop
cmpl
aam
inc
add
ficompl
std
mov
sahf
and
popa
dec
xor
rcll
fimull
popa
ror
fwait
cltd
mov
incl
and
adc
cmp
cmp
out
or
es
data16
stos
jns
add
lret
lahf
mov
and
inc
adc
popa
aam
jns
and
sbb
push
iret
cmp
xchg
sbb
and
loopne
in
sbb
jge
scas
fwait
lret
stos
loope
faddp
nop
dec
daa
xor
or
scas
adc
nop
xchg
enter
sbb
pop
xchg
lods
roll
inc
test
imul
dec
jae
repz
mov
sub
je
incb
pop
and
pushf
push
sbb
ss
push
mov
daa
pop
lcall
xor
add
inc
lds
add
das
xor
pop
sub
sub
mov
inc
mov
les
popf
nop
or
lods
push
jecxz
les
hlt
aam
dec
leave
movsb
ficoml
rclb
and
pop
mov
push
cld
popa
cmp
outsl
sbb
stos
push
mov
sub
or
lods
daa
inc
fsts
in
xchg
andl
lret
lahf
pop
dec
push
sbb
inc
outsb
push
xchg
mov
and
rcrl
pop
mov
negl
xchg
arpl
or
xlat
sub
add
loope
cmp
dec
inc
mov
sahf
push
push
inc
stos
int
jle
stos
mov
icebp
in
cs
dec
dec
arpl
pop
pushf
pushf
inc
adc
arpl
push
rcll
fistpl
inc
sbb
lahf
or
push
mov
xchg
hlt
movsl
pop
outsl
sbb
jae
mov
or
push
sub
data16
out
xchg
dec
jge
ja
sub
shll
imull
xchg
xchg
and
lods
push
cmp
xor
out
sahf
xchg
mov
js
xchg
sbb
bound
les
pop
outsb
ds
js
sub
or
repz
repz
aad
jb
insb
ljmp
icebp
jle
fstpt
std
cmp
test
scas
mov
add
nop
out
push
lods
aaa
mov
cwtl
mov
dec
dec
inc
fsubl
fdivrs
pop
sub
or
imul
jp
mov
and
shlb
outsb
jmp
and
pop
daa
dec
jnp
hlt
ficomps
movsb
adc
outsl
ret
and
aaa
ret
into
jbe
lods
sti
pop
push
test
stos
imul
xchg
add
dec
mov
jb
jne
scas
out
pop
cmp
mov
cmp
add
mov
loopne
mov
mov
mov
aaa
mov
insl
imul
sub
adc
in
into
pop
test
in
cmp
sub
sbb
shr
icebp
or
pop
mov
lds
shrl
inc
dec
inc
jmp
mov
insl
cmp
clc
cmc
stos
adc
jns
lret
mov
les
jne
icebp
ds
mov
xchg
add
jne
xor
scas
mov
mov
rcl
cmp
in
jge
insl
jnp
fdivp
stos
xor
cld
and
push
loope,pt
and
cmpsl
push
lods
aad
mov
sarl
push
pushaw
cli
out
sub
dec
sbb
cltd
push
add
push
jmp
adc
sbb
add
lods
adc
rol
test
push
or
jbe
pop
lret
jns
xchg
js
inc
scas
inc
ret
mov
inc
cmp
mov
jge
inc
addr16
repz
push
lods
adc
xor
cmp
xlat
cli
sub
cli
and
out
and
cmp
jg
sahf
idiv
repz
or
js
jbe
das
mov
cli
int
sub
push
mov
inc
sub
ficoml
les
rcrl
mov
push
ds
es
sub
fsin
pusha
loope
dec
mov
pushl
fsubr
xchg
adc
and
loop
sbb
ret
inc
jne
cmpsl
jmp
in
cmpsl
mov
loop
ficoml
mov
mov
pop
cmpl
lcall
sub
arpl
or
in
es
mov
movsb
das
in
sub
scas
push
cmc
mov
push
ret
out
dec
aas
std
push
dec
or
or
ja
negb
mov
and
push
cmp
negl
fwait
lcall
mov
testb
fwait
in
insl
rcl
cmc
inc
dec
jb
adcl
nop
aad
out
pop
dec
mov
adc
adc
xchg
ja
and
outsl
mov
mov
cmp
mov
sbb
adc
pop
rorb
lea
cmpsl
ss
daa
aam
in
scas
mov
xor
movsb
dec
cli
fsubrs
test
cmp
dec
pop
les
jb
adc
pop
stos
and
leave
push
dec
rorl
adc
pop
xlat
xorl
xchg
mov
ja
es
pop
notb
mov
loopne
das
mov
lods
lret
xor
mov
and
jb
xor
pop
mov
sbb
xor
adc
je
pop
adc
and
rolb
fwait
dec
push
fstps
mov
lret
jecxz
sbb
es
std
or
sbb
jecxz
xchg
cltd
jg
mov
cmpsl
data16
xchg
fcom
adc
jge
mov
jl
test
addr16
sub
gs
xchg
test
stc
stos
xor
jle
sbb
inc
add
test
cmpb
aad
mov
js
xchg
dec
mov
jbe
cmpsl
adc
xor
scas
je
xor
mov
in
andl
cwtl
daa
loope
dec
in
push
icebp
dec
xchg
dec
or
fsubl
scas
imul
scas
mov
mull
push
mov
add
sub
push
stos
lods
jmp
lcall
xlat
jle
inc
popf
fdivl
xchg
pushf
push
pop
imul
enter
dec
and
into
in
jno
cwtl
xor
int3
lret
sub
xlat
out
fisubs
sti
adc
or
nop
in
inc
or
pop
mov
jns
cmp
or
pushf
movl
mov
mov
scas
call
vpsubusw
into
sub
in
sbb
mov
ss
push
test
imul
movsl
rorb
push
pop
mov
aas
push
es
jb
inc
out
dec
jle
iret
aad
rclb
sub
mov
pop
lret
push
push
mov
mov
lret
lret
jae
loopne
pushf
ljmp
or
sub
push
jmp
aam
aad
cmp
ds
pop
in
orb
popa
rorb
pop
stos
dec
sub
mov
pop
xchg
xor
jne
push
xchg
int3
sbb
sub
mov
adc
jnp
xor
fisubl
and
xor
jg
xor
push
cmp
mov
xchg
adc
pop
lret
jecxz
mov
mov
mov
dec
movsl
adc
or
outsb
or
pop
push
mov
push
insb
jp
xchg
das
iret
outsb
mov
mov
cmp
mov
jo
jl
adc
mov
adc
mov
and
pop
ss
jae
mov
call
das
fnstsw
lock
mov
adc
fidivs
ljmp
add
jmp
int3
cmp
stos
inc
adc
in
mov
pop
mov
test
xchg
mov
jmp
add
mov
jecxz
repnz
mov
outsb
sbb
sti
test
scas
jb
xor
push
mov
aas
push
cmp
jb
dec
into
pop
or
dec
push
cmp
dec
or
ljmp
jb
inc
mov
in
stos
adc
in
mov
gs
xchg
sarb
cmp
dec
aam
int
lock
outsl
sub
lods
sahf
and
add
fisubs
lds
ja
in
fcmovb
sbb
mov
mov
cmp
insl
push
adcb
mov
xchg
scas
out
pop
mov
and
lock
pop
out
push
inc
fstpl
xor
cmp
jb
cltd
push
inc
scas
ss
or
push
pop
adc
xchg
loopne
iret
jne
and
lahf
mov
adc
aam
fs
jle
mov
je
hlt
xor
or
xchg
push
jp
lcall
fstpl
jl
cmp
movsb
andl
lret
adc
daa
pusha
popa
xor
roll
add
and
mov
stos
mov
inc
push
sub
jo
lcall
pop
daa
pop
fstl
adc
pop
loope
cld
loop
daa
adc
test
dec
shlb
push
sub
je
xchg
xchg
push
nop
std
inc
std
jno
or
je
shll
xor
pop
add
adc
gs
or
mov
xchg
pop
rcr
lcall
int3
sbb
test
fimull
dec
or
adc
pushf
dec
into
jge
aam
jl
cmp
pop
xchg
lds
xorl
xchg
mov
pop
cmpsb
in
ror
stos
bound
jg
inc
jg
imul
cmp
stc
pop
xor
inc
mov
jns
cmc
xchg
dec
popa
cmp
sbb
repnz
xor
call
sub
cwtl
arpl
fstl
pop
cmp
loop
add
lahf
inc
cmp
sbb
in
jp
dec
data16
mov
cmp
scas
aas
rolb
hlt
les
jb
inc
pop
push
imul
shlb
push
adc
dec
clc
shll
xchg
mov
and
or
dec
mov
lea
repz
je
or
mov
push
cs
insl
decl
lock
lcall
cmp
test
rcr
pop
jl
or
cmp
rol
jle
sbb
popa
mov
or
das
adc
in
xchg
inc
push
call
bound
mov
and
dec
lret
dec
not
sub
mov
push
rcl
cmp
push
outsl
fadds
mov
loop
loop
shrl
jno
filds
test
inc
pop
enter
gs
out
cmpsb
jno
bound
negb
push
add
scas
add
jae
shl
and
add
int3
add
out
xor
jnp
push
mov
sbb
mov
popf
or
add
repz
add
xor
mov
mov
aam
or
sbb
xchg
movsl
inc
ffree
mov
fidivl
js
inc
rcrl
lock
ljmp
movsl
xchg
sahf
sbb
cli
jecxz
push
movsl
mov
cmp
loope
sbb
mov
mov
inc
test
lods
fs
das
repz
in
lret
aam
clc
mov
enter
pop
insl
sbb
jbe
sbb
aaa
cmp
ret
xor
fbld
dec
push
mov
int3
xor
sub
push
dec
test
dec
jl
push
xor
mov
inc
mov
lea
movsl
mov
mov
lods
enter
or
shll
pop
sbb
outsl
add
bound
mov
scas
int3
mov
xchg
lret
leave
in
iret
add
ds
mulb
shrb
pop
or
test
dec
or
cs
faddl
push
ss
int3
fyl2xp1
pop
jecxz
push
iret
or
bound
lods
add
or
mov
or
mov
cmp
bound
lea
in
rclb
jbe
std
cmpsb
int3
mov
mov
ja
cwtl
roll
jecxz
xchg
inc
xor
dec
jae
outsb
pop
push
push
jno
fidivs
pop
in
or
pop
clc
jmp
and
adc
cmp
mov
pop
es
out
pop
push
test
stos
and
sbb
fiadds
adc
ret
jmp
iret
sub
xlat
pop
sbb
incb
dec
jl
imul
xchg
add
fcmovnbe
xor
push
jg
xor
outsl
xlat
test
jbe
xor
and
push
mov
insl
cmp
arpl
fiaddl
imul
jecxz
aam
icebp
push
pop
or
mov
shl
xchg
leave
bound
scas
cli
cmp
mov
bound
adc
out
and
mov
and
fstp
mov
inc
sbb
decb
sbb
cld
sbb
stos
pop
repnz
aam
stos
jecxz
inc
rcl
stos
inc
xchg
jle
push
or
pavgw
gs
mov
and
cmp
outsb
adc
pusha
in
testl
rcl
jns
xchg
sbb
mov
dec
dec
aaa
mov
movsl
andb
mov
pop
cli
pushf
cwtl
xor
test
mov
sbb
jbe
int3
xchg
jnp
sbb
in
sbb
dec
or
adcl
jb
inc
popf
cmp
lds
scas
pop
cmpsl
or
fiadds
in
mov
cmc
mov
outsl
inc
inc
clc
xchg
xor
cmpsb
movsl
fimuls
sbb
xor
pop
jnp
inc
pop
notb
jb
mov
popa
mov
fdivl
inc
rcrl
push
pop
arpl
mov
pop
adc
enter
outsb
push
push
adc
mov
lds
sbbl
inc
pop
or
clc
cwtl
outsb
pop
test
or
adc
mov
jmp
stc
leave
scas
push
pop
dec
and
lret
sbb
mov
insb
aam
push
inc
movsb
iret
cwtl
pop
ljmp
loop
xchg
and
or
leave
iret
rcl
hlt
movsl
sub
xchg
pop
push
ljmp
es
add
stos
adc
pop
push
dec
xchg
adc
in
push
lock
sub
icebp
adc
js
pop
rorl
xlat
adc
jle
cs
xor
out
add
loop
sti
imul
out
or
and
insl
jp
cli
cmp
push
push
mov
shlb
mov
pop
xchg
or
xor
incb
iret
xchg
iret
jp
rcrl
cmp
dec
jae
lds
lds
mov
adc
inc
mov
jmp
fistpl
cmp
iret
inc
mov
pushf
push
mov
lods
inc
add
ret
lret
sahf
int3
leave
lcall
adc
or
shlb
popf
or
cld
jmp
cmp
pop
fmull
ret
push
jge
xchg
lret
mov
cmc
xchg
jns
mov
inc
das
std
inc
scas
sub
lods
loope
movsb
cwtl
mov
test
push
add
mov
sbb
into
xchg
cmpsb
cltd
mov
mov
sbb
mov
das
cli
incb
es
sti
out
fs
jmp
add
aam
adc
sub
xchg
jo
xchg
mov
inc
and
xlat
xorl
mov
pop
loopne
push
or
jg
jg
adc
outsl
and
fadd
sbb
call
notl
ror
cmpsl
push
ret
mov
mov
test
adc
push
inc
testb
int
mov
movsl
cwtl
shlb
push
cmpsb
sti
pop
inc
or
xchg
cmp
aam
and
fnstcw
sahf
sub
ds
mov
cmpxchg
rcll
imul
repz
mov
scas
lret
imul
daa
sbb
aaa
or
ljmp
jo
leave
adc
sahf
out
xchg
lods
aas
insl
jae
lcall
mov
inc
jl
leave
cmpb
cmp
rolb
jnp
jg
jp
pop
mov
jae
ret
out
test
out
cli
push
push
sbb
insl
add
pop
cmp
pusha
loopne
mov
sub
scas
loope
and
shrl
cmpsb
mov
aad
add
sti
jmp
cmp
rcr
cltd
incl
and
pop
or
add
sub
cli
inc
pop
adc
xor
adc
add
mov
lock
cmp
or
gs
sub
adc
cmp
jns
or
mov
aam
xor
cld
fucomi
rep
jmp
fsub
call
pop
cmp
inc
shll
jmp
cmpb
in
shlb
stc
mov
outsb
popa
mov
sbb
movsl
bound
mov
push
ja
xor
mov
inc
nop
rcr
sti
in
push
ds
inc
pop
ret
inc
jno
movsb
loopne
ret
fstpl
add
repz
adc
sbb
test
rcll
pop
faddl
mov
vmread
xor
pop
call
add
ja
cmp
inc
xchg
or
lcall
push
addr16
dec
inc
leave
fstpl
add
jg
es
adc
push
ljmp
decb
icebp
mov
xchg
repz
test
jo
loopne
data16
in
jg
dec
int3
and
andl
and
sbbb
inc
xchg
sub
add
rorl
inc
dec
stos
out
lods
adc
lods
or
xchg
cmp
adc
xchg
hlt
das
std
mov
dec
push
insb
into
dec
push
mov
xchg
aam
mov
mov
out
loop
xlat
inc
andb
pop
dec
jmp
cmp
insb
mov
xor
hlt
adcb
inc
movsb
dec
pop
or
mov
imul
shll
xor
cmp
sar
xchg
xlat
mov
mov
inc
xchg
add
add
test
push
mov
mov
arpl
ljmp
jno
mov
add
out
jg
ror
std
xor
fnstsw
sub
loop
sets
sahf
mov
aam
push
imul
pop
xor
cmc
xchg
faddp
shl
adc
lea
adc
out
pusha
jmp
sub
outsb
jb
ficoms
push
sbbl
jbe
int3
stos
cwtl
mov
xchg
inc
add
shlb
fwait
mov
dec
ds
and
ror
xchg
adc
push
pop
mov
mov
add
xchg
pop
les
pop
pop
pop
popf
pop
js
arpl
daa
adc
xchg
cli
xchg
xchg
pushf
mov
jbe
and
movsb
pop
cmp
cmp
out
pop
out
out
lock
out
leave
aam
and
sbb
mov
insl
sbb
or
imul
pop
das
cmc
cmp
push
mov
ficoms
pop
ja
sbb
and
push
sarl
call
push
insl
rorl
aad
andb
in
dec
stc
fidivl
call
shll
negl
xor
into
pop
inc
lret
cmp
rorb
dec
cmp
adc
shlb
sarl
lcall
fwait
jne
cltd
inc
dec
mov
les
jp
cld
ljmp
push
leave
jne
inc
nop
lds
shrb
in
jo
stos
sbb
in
sub
sub
push
roll
sbb
cltd
sahf
sub
jbe
movsb
inc
mov
fisubrs
pop
xor
inc
cli
stc
or
rorl
mov
cmp
push
lods
daa
sub
les
ds
push
mov
xor
out
aad
sbb
jo
pop
cmc
adc
mov
dec
lods
data16
mov
insl
cmp
int
ret
aaa
push
cmpsl
loop
push
in
data16
test
adc
or
pop
add
icebp
outsb
and
and
aaa
aaa
loope
enter
push
adc
pop
addr16
push
pop
cmc
xlat
push
push
xor
pop
mov
dec
movsb
imul
and
jg
and
stc
dec
daa
pop
mov
mov
lahf
insl
push
jns
pop
cmp
inc
cmc
test
daa
dec
dec
jns
xor
jnp
scas
mov
iret
outsl
scas
ss
out
jecxz
push
addl
sbb
or
push
dec
insb
jo,pn
test
sbb
jne
ja
stos
jge
stos
out
xor
popa
pop
mov
mov
insl
or
scas
mov
sbb
enter
nop
pop
shl
lea
mov
addr16
push
cmp
cs
xchg
sub
mov
idiv
in
sbb
sub
shlb
pop
adc
mov
cmc
adc
push
xchg
add
adc
fdiv
inc
add
stos
pop
or
jle
bound
arpl
sbb
fstl
inc
in
sbb
pusha
fdivp
jnp
cmp
xor
cli
pop
xor
fisttpl
dec
jns
jle
adc
mov
xlat
push
inc
mov
mov
leave
cmc
arpl
popf
and
call
mov
inc
andb
adc
xorl
stos
aaa
xchg
addr16
cmp
adcl
xlat
xor
xchg
in
addr16
cwtl
jae,pt
mov
adc
out
add
or
inc
inc
sbb
xchg
sbb
rcrl
aad
adc
subl
mov
jmp
stos
dec
cmp
scas
loop
mov
fimuls
repnz
cmpsb
lods
aam
ss
xor
sar
xchg
cld
or
xor
push
pop
pop
hlt
sahf
mov
iret
in
pop
repz
rorb
mov
mov
sbb
mov
fstl
mov
xchg
pop
pop
shll
fsubl
pop
scas
jg
pop
mov
push
or
out
jecxz
iret
scas
mov
adc
sub
cmp
iret
cmc
sub
or
movsl
fdivr
pop
mov
das
xchg
je
bound
pop
add
jbe
push
fidivrs
xor
sbb
js
push
imul
fsubl
shrl
xor
dec
jno
and
sti
rcl
sub
outsl
sbb
mov
push
out
popf
mov
shll
out
cld
jge
push
cmp
enter
lret
pop
fcoms
xor
xor
stos
movsl
lods
out
jp
cs
adc
inc
movsl
aaa
and
movsl
loope
aam
popa
fwait
pop
fcom
out
add
mov
icebp
inc
repnz
call
dec
fisubs
push
fs
pusha
fwait
xchg
jp
push
push
hlt
inc
aas
mov
mov
ret
scas
inc
adc
loopne
xchg
jmp
hlt
mov
jmp
jns
cmp
jne
pop
adc
and
jle
popa
call
inc
adc
mov
push
iret
inc
out
mov
xchg
dec
cmp
xor
das
and
mov
lods
inc
sbb
push
fmuls
xchg
fisubs
sub
xor
jnp
inc
xor
cwtl
or
pop
push
mov
and
aad
cs
pop
cmp
lahf
adc
idivb
adc
mov
popa
cmp
sbb
pushf
jge
out
sbb
push
push
lods
lcall
xchg
push
inc
cmp
pop
dec
dec
into
loope
ret
jb
mov
ficoms
and
cmpsl
mov
push
out
push
shrl
mov
mov
rol
mov
xlat
rcrb
loopne
stos
call
fdivr
rcr
cmp
jne
sbb
popf
mov
pop
mov
mov
into
push
mov
jg
add
imul
pop
arpl
ss
test
pop
loop
icebp
shl
jg
push
and
mov
lods
lods
inc
inc
cwtl
xchg
sbb
inc
sahf
mov
enter
in
ds
pushf
inc
out
xchg
xor
dec
mov
lahf
lahf
push
mov
sub
add
jmp
push
fadds
aam
das
pop
mov
adc
jp
cmp
mov
sub
pop
pushf
mov
xchg
icebp
jb
mov
fildll
imul
in
jl
mov
outsl
and
jle
sti
xorl
scas
inc
ljmp
push
pop
xchg
pop
fidivrs
xor
dec
test
aad
icebp
adc
cmpsl
mov
mov
dec
ret
jb
push
cmp
lea
jo
mov
ds
pushf
mov
and
mov
shrd
xor
inc
or
pusha
mov
cld
out
movsl
daa
dec
test
fnsave
jo
test
and
adc
call
dec
dec
xor
dec
jmp
in
mov
leave
dec
idivl
je
xchg
cltd
xor
or
mov
xor
loopne
push
xor
shl
ja
inc
pop
scas
push
scas
stc
stc
and
adc
adc
int3
call
push
xchg
mov
push
notb
and
stos
add
rolb
movsb
sbb
insl
das
out
adc
jp
test
pop
addl
cltd
mov
dec
push
scas
bound
stc
xor
add
cmp
push
xor
pop
add
push
jb
sbb
inc
ficoms
xchg
mov
pop
mov
lcall
mov
imul
jns
jmp
insl
sbb
push
icebp
hlt
add
or
pop
jge
test
xchg
adc
roll
lock
pushf
shr
dec
imul
clc
rcrl
sub
and
mov
stos
cmc
ljmp
mov
loopne
icebp
sub
mov
mov
lret
popf
sbb
mov
lds
cmpl
imul
scas
mov
ss
sbb
inc
jecxz
sub
add
xlat
test
jno
xor
dec
fcoms
dec
jg
dec
bsf
add
out
mov
scas
sbb
test
jl
or
jns
or
cmp
movsl
inc
mov
les
out
fsubl
imul
xlat
cmp
add
push
cmpsl
mov
mov
mov
xor
adc
aas
and
mov
sub
ret
mov
movsb
pop
ret
sbb
ror
jg
sbb
ja
out
push
xchg
aas
fcmovu
sahf
fs
int3
or
shlb
xchg
loope
adc
inc
mov
test
repnz
xchg
jbe
adc
daa
hlt
outsb
inc
push
pop
cli
pop
push
std
inc
inc
mov
mov
add
loope
adc
cmp
dec
pop
aas
movsb
dec
fisubrs
andb
sbb
xor
xor
fsub
ficomps
sub
push
push
cmpsl
sbb
and
jl
lahf
imul
inc
std
lea
in
scas
mov
pop
popa
shll
adc
imul
out
or
pop
outsb
mov
repz
insl
jl
rcll
mov
push
dec
in
or
or
lret
inc
fldl
inc
ja
dec
fcomps
nop
push
lahf
insb
mov
push
pop
jl
add
cltd
fisttpl
andl
mov
inc
jno
dec
cld
ds
adc
orl
jae
movsl
mov
sbb
inc
mov
sbb
push
test
cmp
aas
mov
imul
je
mov
sub
add
jb
imul
imull
pop
pop
and
int
mov
cmpsb
iret
inc
mov
mov
sub
daa
jbe
popf
cmp
xor
sub
xor
imul
cs
and
inc
popf
aas
cwtl
sbb
outsl
stos
les
lcall
aaa
dec
xchg
push
xchg
sbb
imul
je
adc
adc
xchg
pop
insl
mov
push
add
stos
outsb
ret
fistps
xchg
jecxz
mov
lods
cmp
push
test
fsubs
imul
mull
pop
or
ror
or
xchg
pop
enter
inc
sti
dec
pop
adc
fildl
pop
cld
int
cwtl
cld
mov
inc
loope
dec
add
push
pop
hlt
jbe
push
fmul
je
jne
cli
mov
movsl
aaa
xchg
ror
mov
pop
adc
jbe
frstor
cs
push
cmpsb
cli
pop
adc
sti
aas
push
or
cmp
sbb
jmp
in
jno
xchg
fsubl
jp
rcrb
xor
loop
movnti
fistpll
xlat
test
sbb
cwtl
or
push
adc
inc
xchg
cmp
out
mov
mov
cmp
cmp
pop
and
pop
mov
and
testb
sbb
sbb
test
xor
rcr
push
cltd
mov
popf
fadd
mov
orb
cli
leave
inc
lods
aas
pop
and
out
stc
dec
and
lods
imul
ret
jo
inc
mov
or
outsl
mov
sub
xor
adc
stos
insb
or
iret
pop
mov
jge
pop
push
jmp
xlat
insb
aam
lds
push
push
push
out
int3
jmp
fcomip
mov
mov
fisttpll
push
dec
xor
lret
iret
jl
xchg
out
mov
cmp
xchg
sbb
imul
mov
xor
xchg
iret
loop
mov
xchg
jg
dec
cmp
imul
in
sbb
adc
mov
mov
jge
cld
or
jae
xchg
sub
xchg
mov
pop
jl
xchg
push
adc
cwtl
stos
stos
cmp
sbb
mov
mov
push
lret
dec
and
xchg
jecxz
outsb
aas
out
adc
xchg
imul
cmpsb
pop
or
lahf
inc
popa
rol
ljmp
rol
mov
jecxz
and
or
xor
sti
sbb
repnz
and
lcall
or
sub
imul
arpl
mov
inc
test
stos
jl
pop
nop
mov
enter
push
sub
push
xlat
sub
inc
movsl
dec
andb
loope
insl
jmp
pop
add
or
dec
xchg
nop
push
mov
loopne
stc
clc
leave
jae
mov
push
das
xor
in
lds
cmp
popa
inc
daa
jl
popf
cmp
add
add
or
pop
loope
dec
enter
aad
xor
adc
jecxz
pop
xchg
or
out
int3
xchg
lea
loopne
fdivl
cmp
loopne
mov
fcmovne
mov
sub
adc
mov
or
sub
mov
adc
cltd
notb
cmp
int3
js
dec
adc
lods
push
jecxz
jmp
sub
sub
leave
add
xor
arpl
jge
pop
or
cmp
bound
mov
xchg
aad
jae
sbb
pop
out
divl
in
stos
inc
addr16
les
mov
push
iret
fisttpll
sbb
cmp
lret
ja
daa
jg
jns
pop
jp
push
stos
cmp
cmp
sub
stos
stc
cmpsb
dec
rep
xchg
sti
mov
movsb
push
cmp
in
movsb
test
dec
jecxz
cld
test
xlat
pusha
popa
adc
pop
xor
movsb
aad
add
cld
inc
sub
aam
fwait
xchg
ss
and
xchg
lret
mov
mov
test
push
xor
or
xchg
pop
xchg
mov
filds
jg
xchg
fldt
pop
stc
cmp
cltd
or
xchg
mov
hlt
adc
nop
ja
xor
mov
ret
pop
lods
pop
ret
mov
sbb
outsb
mov
adc
lret
mov
sbb
adcb
push
lods
std
xor
dec
cmc
cmp
dec
sbb
jecxz
lods
fildl
divl
mov
sub
mov
jecxz
sub
xor
mov
rol
adc
pop
les
cmp
arpl
jne
sti
cmpsb
adc
insb
cmp
out
push
fstl
xchg
imul
mov
sbb
ret
dec
shrl
jae
lds
cmp
inc
jo
in
popl
pop
fidivl
repz
jae
test
mov
sbb
js
mov
mov
out
rcrb
xor
clc
hlt
cmp
scas
cmpsl
xor
xchg
mov
daa
rorl
js
iret
inc
dec
or
popa
sub
dec
adc
js
enter
test
jno
and
xor
movsl
rcrb
jno
popf
pop
loop
pop
in
jl
jno
addr16
ljmp
pop
or
lods
fsubr
out
and
mov
xchg
jecxz
pop
push
mov
sbb
inc
and
cmp
mov
lret
loope
je
xor
or
icebp
addr16
loop
lahf
test
pop
sub
adc
xor
lret
enter
pop
sbb
loopne
sti
mov
pusha
cmp
repz
sub
xchg
in
lea
dec
and
push
ss
adc
push
out
addr16
sub
pop
sbb
das
push
pop
cmp
jecxz
jbe
test
xchg
add
hlt
mov
mov
outsb
or
movsl
int3
fisttpll
fisubl
dec
in
cwtl
rol
ror
cmc
scas
lea
xor
es
sbb
mov
dec
and
pop
loopne
sub
adc
push
nop
call
mov
aam
inc
les
lcall
sub
in
sub
fdivs
int3
lds
lret
pop
mov
mov
xchg
shrb
pusha
adcb
into
movsb
repnz
cmp
and
js
cmp
clc
ds
pop
sbb
add
outsb
mov
cmp
ret
cltd
in
add
jnp
aam
je
dec
mov
rep
mov
filds
sar
and
daa
test
push
and
pop
pop
sub
mov
pop
rorl
jmp
and
testl
clc
and
jmp
repnz
xorl
ljmp
cmp
adc
push
adc
cmp
fildll
jnp
jns
in
sbb
out
add
aam
sbb
dec
mov
inc
jge
mov
daa
adc
scas
mov
enter
or
pop
mov
mov
stc
sti
jg
insb
jb
dec
pop
sbb
or
bound
insb
sbb
fadd
or
icebp
cwtl
xlat
adc
jl
sub
adc
sbb
mov
je
cs
int3
pop
pop
sub
lret
cltd
xor
mov
fnstcw
jmp
ret
rorb
jnp
test
cmpsl
mov
lock
cmp
call
enter
sti
pushf
test
jnp
popf
ret
jecxz
and
jnp
dec
add
js
jae
and
lock
or
pop
cmp
outsl
dec
cltd
movsb
lock
cmpsl
pop
sub
pop
and
je
fimull
dec
mov
xor
add
push
cmpsl
sar
pop
xchg
nop
cmc
andl
push
mov
mov
mov
sbb
xor
cmp
mov
add
inc
add
cmp
aas
push
test
and
dec
xor
loopne
aad
lock
shll
mov
data16
cs
fsubrs
imul
dec
sti
sbb
xchg
stc
iret
sbb
mov
insl
loop
pop
lea
add
xor
mov
cs
and
pop
xor
test
ret
xor
sar
push
bound
arpl
addr16
repnz
daa
xchg
loope
cmp
jle
sahf
adc
lea
int
std
mov
jp
test
mov
xchg
push
iret
lds
mov
addb
mov
pop
sub
lahf
aad
dec
mov
and
add
call
mov
push
leave
add
mov
pop
and
mov
push
cmpsl
rolb
sbb
xchg
push
hlt
adc
js
outsb
outsl
lret
xor
cmpsl
ficomps
out
int
xor
fstpt
cmp
aad
inc
dec
fwait
adc
leave
aaa
fdiv
xor
xchg
subl
cld
cmp
pop
stos
xchg
jo
or
push
xchg
mov
cmp
nop
hlt
push
testl
in
fnstsw
lret
lret
test
inc
pop
pop
mov
or
scas
add
adc
xchg
out
repz
jle
insl
lods
sarl
pop
cmp
lea
iret
xchg
dec
sbb
test
imul
cs
pop
mov
jecxz
mov
pusha
negb
cmp
xor
int3
out
lock
add
sbb
iret
cmpsl
mov
mov
aas
xor
cmpsl
repnz
or
jbe
cwtl
push
adc
bound
push
mov
in
shlb
push
icebp
push
pop
lret
fldl
cmpsb
in
cli
jne
mov
dec
dec
jmp
dec
xlat
clc
cmp
lea
sbb
push
mov
sub
dec
shlb
push
cmp
xchg
mov
xchg
add
sbb
and
pop
loope
mov
cmp
test
mov
adc
sarl
scas
insb
sub
jmp
jnp
inc
ret
sub
push
lret
nop
pop
or
xor
mov
icebp
test
cmp
rcrb
sbb
push
rcl
mov
mov
mov
push
jp
ljmp
scas
xor
scas
popa
test
loope
gs
xor
dec
cmp
jnp
jle
xchg
inc
pop
pop
pop
clc
hlt
push
cmp
mov
lock
xor
shlb
and
in
pop
out
and
cmpsb
int
fimuls
and
or
or
inc
cmp
fldcw
rclb
xchg
fidivl
pushf
mov
push
add
shlb
jno
and
aas
fwait
mov
repz
shll
das
data16
sbb
fs
sbb
mov
mov
add
ja
jle
test
push
ret
push
xor
cmp
jo
mov
mov
push
fnstsw
fdivl
mov
int
scas
sbb
aad
imul
cmc
loop
mov
sub
iret
loop
jp
cli
je
je
push
call
mov
mov
in
xchg
test
jg
xchg
sahf
hlt
imul
and
adc
lock
mov
out
clc
clc
shl
xor
mov
ret
gs
jmp
cmpsb
aad
push
outsb
sbb
jl
ja
cmp
xchg
push
divb
mov
sbb
mov
popf
iret
cmc
inc
rcll
mov
std
mov
fmuls
sub
cwtl
lea
sub
out
and
xchg
sahf
dec
xchg
test
xlat
xchg
cmc
cmp
lods
movsb
lods
push
mov
mov
out
ja
dec
fadd
dec
xorps
cmp
pushf
mov
mov
movsb
xor
ret
xor
push
sub
lock
rcrb
mov
jle
mov
dec
push
mov
movsl
add
dec
repz
sahf
mov
mov
aam
inc
lods
testb
fucomip
ja
repnz
inc
cmpsl
outsb
fstl
test
jge
pop
push
hlt
in
rcrb
sbb
in
bound
pop
js
push
pop
iret
movsl
pop
ljmp
sbb
test
xlat
xlat
leave
mov
into
insb
inc
xchg
fisttpll
data16
inc
inc
fsubrs
adc
cmp
inc
in
mov
pop
cmpsb
clc
clc
or
add
rcrl
mov
inc
cmpb
lds
lea
jne
data16
fcoms
fsubrl
inc
popf
push
pop
sahf
pushf
push
xchg
sbb
jl
jmp
cmp
scas
jnp
shr
aad
dec
icebp
out
mov
dec
dec
dec
movsl
mov
imul
in
xchg
push
inc
add
and
jle
iret
insl
fucom
xchg
jg
mov
test
test
cld
roll
das
in
imul
mov
call
jno
cmpsb
adc
push
inc
inc
xchg
xor
or
sbb
addr16
negl
adc
lods
mov
sbb
add
push
test
xchg
out
sub
hlt
icebp
push
jo
add
and
test
inc
icebp
lods
inc
xor
out
jp
push
dec
jno
dec
loope
and
popl
mov
or
out
xor
in
push
stos
jg
ret
test
inc
dec
mov
aad
mov
or
fistpl
outsb
sbb
add
mov
iret
and
jmp
cmp
xor
fbstp
mov
push
les
mov
loopne
daa
push
jp
pop
pushf
imulb
enter
sbb
dec
in
xor
xlat
leave
cmp
jno
jg
lods
dec
push
and
adc
aas
or
out
ja
cltd
lock
cmp
jecxz
pop
rcrl
xchg
loop
outsb
ret
xchg
jb
out
mov
repnz
dec
mov
dec
dec
and
push
movl
mov
pushf
sub
testl
and
hlt
nop
mov
mov
and
ds
fadds
movsl
test
mov
insl
add
add
aad
idivb
js
enter
push
and
out
cmc
rol
clc
mov
lds
adc
dec
in
rcrb
adc
inc
lret
sti
push
mov
dec
mov
pop
or
outsl
sarl
lea
lcall
cmp
xor
cli
mov
push
ror
je
mov
dec
inc
shll
jb
pop
push
mov
pop
mov
mov
lea
in
add
out
xchg
jnp
push
iret
outsb
push
jecxz
xlat
push
dec
int
cmc
outsb
inc
xor
out
loopne
stos
insb
push
pusha
loopne
jmp
mulb
and
xor
mov
es
int
adc
aad
stc
insb
clc
fsincos
mov
sub
cltd
mov
mov
and
mov
ret
fisttpl
repz
aam
rcl
hlt
cmpb
pop
lods
or
pop
icebp
icebp
pop
clc
mov
testb
fisttpll
cmp
xor
xor
subb
or
sbb
and
mov
loopne
adc
repz
xchg
mov
fnop
test
test
push
ret
pop
in
push
out
sub
stos
or
rorl
cwtl
inc
mov
into
scas
cltd
and
xor
mov
lfs
std
inc
ljmp
or
ficoml
icebp
jbe
jl
push
pusha
lret
sub
mov
mov
movsl
inc
xchg
cmp
sub
out
jb
cmpsb
push
imul
sbb
shrb
aam
cld
inc
push
sbb
cmp
cs
in
pop
xor
push
jmp
xor
out
push
jmp
or
loopne
mov
negb
jp
mov
inc
fwait
mov
repnz
mov
orb
or
lahf
pop
cmpsl
fidivs
xchg
inc
push
call
rcll
stos
cmp
stos
int3
inc
mov
sahf
push
shrl
loop
loope
pop
bound
stos
dec
bound
fnstsw
dec
ret
lods
push
add
mov
in
xor
adcl
push
out
outsl
or
jecxz
imul
mov
pop
lds
hlt
sub
loope
in
pop
jmp
cmp
fwait
test
cmpsl
sbb
push
imul
rorl
cmc
mov
mov
push
pop
lods
pushf
jle
and
inc
xorl
popf
sub
movsl
jl
xor
mov
mov
jae
imul
fnstcw
inc
ja
ficompl
mov
jg
movsl
mov
pop
addr16
adc
fisubl
aad
cmc
mov
pop
imul
leave
jge
mov
jnp
shlb
movsl
xchg
stos
xchg
pop
cmp
push
out
rol
pushf
std
hlt
aas
sti
push
xor
es
test
dec
ret
daa
xchg
ja
jecxz
mov
cli
insl
add
dec
push
inc
test
loopne
stos
lret
lock
shl
or
push
inc
mov
jno
outsl
shrl
cmc
leave
xchg
mov
jg
mov
push
mov
loope
mov
mov
inc
sub
jb
xchg
lds
push
pop
push
movsb
lock
sbb
popf
jbe
stos
iret
repnz
mov
xchg
lcall
int3
xchg
shll
lods
int3
js
xchg
fnsave
push
xor
mov
jle
int3
sub
sub
mov
or
jno
mov
test
sub
adc
scas
sbb
pop
dec
repnz
inc
fnstenv
jg
icebp
and
and
mov
sub
subl
nopl
sub
outsl
cmp
mov
mov
sbb
pushf
inc
xor
sbbl
push
rcl
andb
xchg
in
xor
popa
add
iret
in
shrb
mov
out
repnz
leave
test
cwtl
push
int
lret
xor
stc
xchg
repz
repnz
fcomi
dec
xchg
dec
sub
mov
loope
cmp
stos
adc
into
xor
pop
fwait
sbb
sar
out
std
ficompl
enter
mov
adc
mov
cmp
pop
fs
xchg
add
mov
jp
mov
push
dec
cmpsl
stc
dec
xchg
inc
or
test
jne
insb
aam
add
daa
lcall
out
pop
aad
cmp
mov
jl
mov
imul
iret
inc
scas
cwtl
loop
and
mov
xorb
xchg
xor
xchg
loopne
data16
int3
pop
repnz
test
add
loopne
sub
add
pop
out
lea
movl
bound
lahf
jmp
outsb
leave
lea
push
dec
hlt
enter
movsb
div
lods
or
sub
movsb
daa
sbb
fcomps
sbb
mov
lods
dec
jl
push
lea
das
push
inc
jge
and
mov
or
sub
loopne
gs
mov
roll
ret
sbb
add
add
mov
mov
push
push
and
hlt
push
mov
in
lret
insb
pop
pop
iret
xchg
mov
lea
nop
stc
dec
dec
cltd
xor
xor
js
shr
ljmp
ret
popf
std
jecxz
cmp
std
jl
lcall
jge
inc
into
jmp
sub
pop
cmp
xor
shll
adc
push
mov
cmc
jne
sbb
data16
add
repz
inc
ret
add
mov
xor
or
cmp
mov
aas
lds
mov
push
add
aaa
loop
ficomps
arpl
ret
cli
mov
push
in
jae
bound
lret
push
jnp
sbb
pop
cltd
hlt
dec
lret
pusha
fcmove
dec
or
xchg
jecxz
xchg
in
test
pop
adc
xchg
mov
ds
mov
in
pand
dec
lods
test
push
lret
inc
mov
aas
dec
cltd
daa
lea
add
out
xor
testl
dec
orl
mov
repz
ret
xchg
cmp
mov
arpl
mov
daa
or
cmc
pop
sbb
in
cmp
adc
testb
add
adc
push
psubw
xlat
and
pop
jmp
pcmpgtb
out
lds
nop
cs
or
push
sub
xchg
aad
clc
mov
or
sbb
mov
stos
jle
push
push
addr16
xor
or
dec
test
push
cmp
mov
fs
or
inc
push
sbb
out
dec
sahf
mov
jge
mov
jp
mov
sahf
dec
sub
aaa
jns
hlt
lcall
in
and
imul
in
faddp
pop
popa
adc
xor
scas
aam
jg
shll
je
push
int3
aaa
add
loope
je
lea
push
jne
push
mov
shlb
mov
mov
inc
mov
subb
push
mov
repnz
fistl
int3
in
lahf
leave
ret
dec
cmp
mov
mov
lods
enter
movsb
sub
in
xchg
pop
mov
mov
test
or
mov
dec
lret
ja
shrb
cmp
sahf
mov
ljmp
or
inc
add
jo
fiaddl
ret
cmp
es
lea
out
loop
xchg
cs
sbb
out
mov
mov
sti
pushf
rep
std
mov
jne
out
and
or
sbb
sti
mov
or
push
fsubrp
sbb
cmp
fsub
pop
mov
jl
cltd
xchg
pop
sbb
or
js
and
lock
in
sbb
pop
xor
shll
std
adcl
int
pop
mov
jecxz
subl
inc
and
adc
lahf
frstpm(287
pop
and
dec
iret
pop
sti
push
jle
fisubs
aad
cld
mov
push
sarb
pusha
int
lock
aaa
das
fcoms
push
lea
mov
add
enter
daa
mov
fisttpll
in
ds
iret
add
cmp
lcall
add
cmp
mov
movsl
es
jmp
mulb
int3
cld
icebp
lea
into
cmp
push
test
dec
into
pop
insb
in
mov
add
stc
pop
nop
xchg
sub
pop
scas
movb
lret
mov
pop
cli
test
cmp
cmpsb
bound
sub
mov
aas
jnp
frstor
jo
add
stos
xchg
call
pop
shl
fsubrl
lock
mov
aam
ret
mov
hlt
dec
js
inc
mov
sub
ss
pop
leave
cmp
adcl
js
cmp
mov
ljmp
loop
sbb
xchg
push
fidivrl
push
std
es
jl
sub
cltd
loop
add
inc
or
scas
pop
pop
mov
bound
xchg
fsubr
stos
sbb
int3
xor
xor
daa
sbb
test
and
mov
mov
mov
mov
mov
xchg
lock
cmpsb
xlat
fstps
lret
add
sbb
jl
adc
jle
loop
lods
enter
jmp
push
sbb
cmpsb
repnz
or
push
cmp
test
sbb
sbb
test
fisubrs
daa
popf
cltd
dec
mov
ret
flds
or
or
aam
jae
rolb
mov
mov
sti
loop
dec
in
cs
and
outsl
test
sahf
mov
mov
fnstsw
push
adc
lahf
dec
and
or
outsb
adc
xor
or
addl
mov
out
add
mov
test
jl
cli
test
fimull
icebp
dec
imul
add
mov
out
mov
jp
mov
push
mov
daa
sub
sub
stc
rcll
jle
mov
cmp
pop
mov
add
pop
fwait
push
push
cmp
mov
nop
stos
cwtl
xchg
mov
iret
das
push
adc
pop
mov
jne
sub
mov
mov
btr
mov
jb
cwtl
out
movsb
popa
xor
cld
movsl
subb
sub
jno
lea
pop
rclb
loope
jo
rolb
ficoms
popa
cli
xor
and
sub
mov
orl
or
jne,pn
aaa
sahf
sbb
clc
lock
dec
scas
xchg
fwait
lea
shlb
out
and
push
addl
mov
add
rcrl
in
xchg
add
mov
cmp
sub
repz
mov
repz
sbb
sbb
insb
dec
xor
push
outsb
mov
lods
pop
je
xchg
int3
adcl
inc
push
or
ret
mov
fstl
inc
dec
movsb
xor
xor
jbe
stos
jb
inc
gs
mov
mov
nop
ja
decb
lods
cli
mov
ljmp
pop
clc
icebp
mov
insb
decl
inc
add
xchg
bound
push
pushf
sti
sub
or
cmp
popa
sub
addr16
cmp
push
push
xor
ret
xor
sbb
idivl
push
cmp
xchg
dec
mov
les
jnp
into
das
ljmp
push
adc
pop
lea
add
adc
aaa
xchg
push
jno
add
jno
adc
mov
ljmp
call
shrb
pop
dec
pop
adc
loope
add
mov
cmc
iret
jb
cmpb
dec
xor
jp
fdivs
fmul
in
mov
loop
loopne
pusha
dec
jns
jecxz
lds
or
je
xchg
inc
stos
ret
cmp
std
aaa
xchg
call
lock
mov
sub
or
xlat
sub
or
mov
push
jnp
add
sub
and
fwait
pop
out
xor
rcll
adc
ljmp
xor
cmc
sbb
jb
lea
cmp
dec
jns
or
sub
push
pop
mov
js
data16
imul
lret
add
add
fcoms
sarl
daa
lahf
fildl
dec
dec
out
sbb
mull
cmp
enter
fistps
stos
adc
pop
xor
js
ljmp
pushw
or
jecxz
adc
loopne
in
sub
adc
jno
pop
mov
and
pop
fbstp
jge
shll
sub
addr16
sbb
cmp
into
jmp
add
jbe
sub
pop
call
adc
jb
and
lret
mov
je
mov
lahf
jmp
adc
iret
and
mov
fisttps
scas
mov
pop
outsb
aas
mov
and
sbb
add
jne
mov
test
sbb
add
pop
cld
pop
jne
mov
mov
mov
push
imul
cmp
enter
scas
adc
push
pop
push
lods
aas
xor
je
shr
lahf
mov
jnp
test
push
mov
sub
loop
adc
stos
repz
mov
sbb
movsl
out
pop
orl
fistl
push
les
into
or
mov
or
leave
jp
adc
or
and
push
xchg
scas
dec
insb
adc
aaa
in
out
in
out
sbb
jge
cwtl
xchg
call
bound
lret
mov
mov
xchg
mov
ljmp
in
loope
pushf
mov
dec
outsb
sub
push
add
add
std
mov
movsb
mov
pop
imul
fmull
stc
cmpsl
shlb
push
pop
adc
outsb
xchg
adc
call
dec
fbstp
stc
in
rolb
fsubl
fstpl
pop
xorb
sub
mov
cmp
mov
imul
dec
mov
xlat
cmp
dec
xchg
xchg
cmc
pusha
push
in
scas
iret
in
jl
pop
negl
mov
dec
cmpsb
ss
fcmovu
sahf
int
pop
ret
mov
push
leave
gs
cmp
enter
mov
or
cmpsb
je
aaa
xchg
fndisi(8087
push
push
pop
cltd
stos
add
imull
cmp
jne
popa
inc
pop
fnsave
insb
nop
sub
mov
fadd
mov
mov
or
xchg
inc
jl
and
cmp
push
das
in
push
sbb
xchg
int3
lcall
jb
push
mov
out
lcall
sub
ljmp
mov
dec
push
in
fistps
lea
sub
cmp
push
mov
ror
or
jae
mov
dec
pop
jmp
pushf
movsb
pop
mov
stos
lods
mov
dec
in
test
mov
xor
mov
cmpsb
push
sub
stos
popa
and
inc
mov
pop
bound
rclb
mov
out
pushf
xchg
push
inc
hlt
ja
icebp
push
inc
push
sub
mov
inc
adc
aam
adc
mov
dec
rorb
or
insb
ja
out
fwait
pop
dec
mov
mov
movsl
arpl
insb
push
std
cmp
jmp
das
inc
incl
cli
es
dec
sbb
sbbb
or
mov
jg
and
iret
stc
adc
mov
stos
pop
and
enter
add
jns
cltd
enter
ss
mul
dec
mov
sub
push
add
push
adc
mov
adc
incl
imul
or
inc
andb
sub
mov
dec
test
xor
adc
or
cmp
sahf
and
xor
std
dec
frstor
push
xchg
enter
in
dec
dec
jne
test
lea
testb
je
out
ljmp
stos
push
add
jae
xor
inc
pop
push
jmp
in
mov
pop
aaa
ficomps
jno
sbb
scas
dec
xchg
das
fmuls
xchg
int
and
fnsave
dec
xor
mov
xlat
mov
fcomps
push
jecxz
sbbl
fadds
sbb
or
iret
les
xchg
adc
jecxz
inc
xchg
fistl
inc
add
xlat
xchg
das
repz
push
andb
xchg
repz
jl
xchg
iret
lcall
jae
leave
pusha
imul
cmpsl
shlb
dec
and
mov
ret
stos
sbb
mov
push
out
push
mov
test
sub
adc
xchg
test
mov
subb
sub
sarl
pop
mov
dec
and
daa
enter
pushf
push
out
hlt
fwait
push
xchg
gs
sub
jno
sub
mov
jge
or
or
add
xor
ret
xchg
xchg
fsin
jnp
fisubrl
xchg
jecxz
insb
lods
arpl
xor
sti
sub
lods
call
bound
xchg
xlat
sub
xchg
xor
loop
lds
adc
push
pop
cltd
xlat
imul
jecxz
push
in
pop
xchg
in
adc
and
je
inc
addr16
mov
cmp
js
ret
jp
stos
into
and
cmc
leave
sbb
mov
xchg
pusha
test
loopne
mov
fwait
inc
mov
mov
cwtl
mov
push
mov
cmpsb
dec
adcb
in
rcrl
mov
push
in
sarb
fistl
xchg
add
cs
sub
add
mov
xchg
adc
jmp
lcall
loope
mov
ss
shr
dec
out
jl
pop
decb
fs
mov
cld
aas
jbe
inc
fdivrs
enter
xlat
mov
pop
lock
xchg
jg
daa
pop
or
xchg
pusha
call
mov
push
ret
ret
js
dec
setl
cmp
shlb
add
push
jbe
shlb
ds
jae
and
arpl
and
mov
js
add
jp
xchg
dec
cmp
mov
lds
push
aam
pop
in
jle
andb
push
pop
lods
mov
inc
mov
jg
psubd
lcall
popf
sub
rcrl
lret
in
stc
mov
std
xchg
mov
loopne
mov
mov
popf
ret
inc
add
mov
lods
sbb
test
iret
sbb
mov
add
leave
xchg
sub
sbb
dec
jae
mov
adc
add
push
xchg
sub
sub
push
rolb
mov
outsb
mov
ficoms
xchg
jbe
rcl
adc
jae
jbe
pop
pop
in
dec
dec
inc
rcl
int
mov
cmpsb
sub
nop
and
jp
es
xchg
dec
mov
movsl
ds
xlat
pop
xor
mov
fcomps
frstor
out
adcl
push
cmpsb
sbb
mov
scas
xchg
imul
and
loopne
jns
test
pop
mov
and
cmp
sub
ss
jp
fwait
xorb
push
out
push
sbb
fnstenv
sbb
add
adc
xlat
and
ret
or
ljmp
subl
fstpt
ror
sarl
ret
xchg
popl
jge
dec
inc
jecxz
adc
bnd
rclb
inc
js
cmpsb
mov
mov
jp
jecxz
or
push
lgs
mov
mov
mov
sar
cs
shlb
xor
mov
out
fldl2e
add
fidivs
push
pop
arpl
dec
xor
fwait
test
pop
jg
xchg
cmpsb
cmc
es
ljmp
insb
mov
sub
jg
sub
icebp
mov
mov
pushl
test
sub
push
std
out
ljmp
xor
pop
test
cmp
jae
mov
pop
leave
repz
adc
js
arpl
dec
lret
pop
pop
sbb
repnz
inc
outsb
inc
cmp
nop
or
mov
call
lock
mov
add
js
cltd
aaa
lret
jmp
xor
test
cmc
idivb
popa
out
sti
flds
subb
dec
hlt
cmp
adc
xchg
mov
in
inc
adc
cmp
xchg
testb
out
dec
or
inc
aaa
rcr
test
pushf
mov
repnz
aaa
scas
pop
cmc
dec
addr16
test
mov
lock
push
mov
scas
icebp
lret
dec
push
push
aad
fsubl
test
fucomip
ss
mov
dec
push
push
mov
in
fwait
sub
cmp
inc
push
in
out
mov
dec
sbb
lds
cld
or
aad
enter
sti
lret
mov
sub
out
or
jo
pop
pop
movsl
popa
push
pop
mov
xor
inc
stos
jmp
js
test
stos
or
dec
dec
jp
outsl
xchg
popf
adcl
adc
fs
jno
push
xor
pop
jl
jns
pop
inc
mov
lods
pop
push
or
insl
fsubl
int
jmp
push
test
sbb
fbld
xchg
dec
pop
cmp
dec
shlb
or
push
fists
rorb
stos
jmp
ja
lahf
dec
xor
sbb
sub
je
mov
stos
mov
aaa
repnz
leave
pop
pop
add
aam
xlat
push
inc
jno
in
sub
fbld
movsb
push
rcl
test
cltd
out
mov
adc
or
mov
jo
jmp
clc
outsb
dec
cmp
adc
add
xchg
data16
adc
int3
call
test
pop
mov
mov
outsb
jmp
add
xchg
out
mov
bnd
and
push
inc
push
enter
scas
sbb
add
pop
dec
sbb
pop
aad
pop
rorl
ss
sub
add
and
jo,pn
mov
and
stos
mov
inc
mov
or
mov
iret
rclb
sub
and
xchg
cmc
fldl
xchg
repz
inc
mov
ja
inc
mov
shlb
mov
cli
mov
push
test
ror
jnp
rorl
xor
inc
dec
rol
or
xchg
cltd
das
sub
pop
ret
adc
je
jg
jbe
dec
or
mov
jne
into
xorb
mov
xor
loope
mov
xchg
rorl
mov
test
fmulp
loopne
aam
popa
jae
lret
jbe
inc
mov
sub
outsb
add
xchg
or
xor
neg
and
lcall
xchg
fsubs
lahf
sbb
fisttpll
adc
pushf
call
dec
insb
mov
push
in
or
push
add
out
mov
cmp
xor
sbb
aad
lret
or
fwait
mov
mov
pushf
xor
fldt
pop
sbb
push
data16
cmpl
mov
popa
fs
movsb
dec
gs
ret
pop
jns
cmp
push
add
mov
push
out
inc
aaa
mov
enter
or
movsl
mov
pop
cmc
inc
repz
dec
or
adc
int3
cld
jae
sub
enter
or
imul
mov
aas
cmp
cwtl
sbb
and
mov
xor
popa
mov
std
rcrl
mov
aad
mov
pop
pop
popa
in
add
jne
dec
pop
jmp
shld
rclb
fisttpl
outsb
arpl
in
mov
mov
add
test
insl
das
adc
xchg
mov
jno
xchg
daa
mov
cmp
and
ret
and
sub
inc
cmpsl
shrl
sti
fdivrs
xor
adc
xchg
cmp
add
sub
cltd
out
cltd
add
mov
jg
mov
sbb
or
pop
add
dec
inc
dec
and
pop
add
popa
cmp
jnp
jne
imul
sub
lcall
rolb
cmp
ret
mov
movzbl
xor
in
sti
xchg
incb
or
mov
mov
mov
push
arpl
dec
lret
and
rcrb
cmp
xor
imul
push
sbb
scas
mov
dec
call
pop
imul
jmp
xchg
ss
popl
inc
inc
call
gs
lock
adc
pop
aad
js
mov
push
out
sbb
rorb
jb
pop
imul
dec
xchg
dec
mov
jle
stc
jno
icebp
pop
pop
mov
cs
dec
push
sti
cli
dec
jno
jg
add
xor
xor
xor
mov
iret
or
cmpsl
hlt
js
sub
test
mov
repnz
ficoml
mov
jmp
sub
mov
xor
sbb
pop
jae
scas
jns
add
insb
into
lret
and
xor
or
mov
pushf
pop
xorl
xchg
xor
fiadds
fisttps
or
inc
dec
daa
scas
movsl
jmp
pop
insl
mov
dec
jmp
in
out
insb
fisubl
push
xchg
daa
lock
jo
add
cli
shlb
iret
es
in
xor
sbb
gs
mov
jb
mov
pop
pop
pushf
or
repnz
std
or
xlat
pop
jnp
sbbb
and
inc
mov
adc
jbe
mov
jge,pn
jl
xchg
or
cmpsl
dec
movsb
jne
loope
cmp
xor
stos
mov
mov
lods
js
sub
xor
js
cmp
pop
mov
mov
cmp
jnp
xlat
gs
loop
add
bound
xor
test
jmp
bnd
es
push
aas
sub
das
mov
mov
cmc
jno
pop
cmp
and
lret
jnp
push
lea
addr16
out
popa
mov
sbb
mov
rorl
outsl
loop
add
jmp
xor
icebp
sub
inc
dec
mov
inc
mov
cmp
inc
lds
fwait
add
in
cs
cmpsl
aad
repz
out
loope
adc
xor
test
push
dec
mov
test
push
adc
mov
mov
test
gs
mov
enter
test
aam
sub
cmp
cmp
popw
dec
xchg
in
pop
popa
mov
inc
mov
mov
jmp
add
adc
das
int3
fstpt
dec
dec
jmp
fbld
rcrl
sbb
xchg
popa
clc
and
sbb
imul
es
test
pop
stc
inc
mov
fwait
cmpsl
xchg
out
jne
lds
ds
dec
push
xor
movsl
cmpb
es
sub
clc
sbb
xchg
rclb
das
pop
test
push
cmpl
filds
fmul
cmp
adc
inc
arpl
jl
inc
xorl
cltd
cltd
sti
add
fidivs
xchg
push
out
repz
lcall
xchg
and
pop
mov
inc
sub
aaa
int3
jno
cld
daa
mov
fwait
mov
rorb
hlt
push
fcomp
inc
xor
push
stc
fldt
test
xchg
stc
xchg
mov
sbb
jns
mov
adc
mov
iret
shl
movsb
and
nop
mov
sbb
push
push
cld
jb
add
inc
stos
dec
inc
movsl
xor
sub
cld
out
mov
jp
and
push
es
loop
and
jno
int
jge
call
outsl
jnp
add
xchg
cwtl
ror
jmp
and
in
xor
xor
sti
dec
out
xor
adc
ds
cmp
push
sbb
mov
rcl
in
inc
gs
mov
sbb
xor
gs
pop
loop
mov
cmp
add
insb
shrb
shlb
popf
fstpt
ds
push
sbb
arpl
dec
cmp
int
add
in
repnz
rorb
subl
std
clc
or
aam
orl
pop
mov
nop
adc
movsb
xchg
imul
jmp
mov
add
sbb
cmc
sahf
movl
andl
ret
enter
xchg
xchg
or
cmc
sub
ret
das
jns
je
popf
mov
push
jb
xor
jl
push
cmp
lds
outsb
test
fcmovnu
out
fcomps
shl
test
sahf
aam
mov
sbb
orl
xor
fldl
push
sbb
out
sub
adc
ret
test
push
push
mov
jp
shrb
sbb
push
sahf
xor
mov
push
test
fsin
jae
jp
mov
push
insl
inc
and
cmp
dec
cld
cmc
pextrw
add
jnp
dec
jle
icebp
jnp
cs
xlat
ds
mov
pop
insb
xlat
pop
stc
faddp
mov
push
aad
jge
xchg
data16
adc
xor
into
mov
add
or
adc
mov
jle
fbld
es
xor
pushf
pop
fmuls
fisttps
mov
and
out
cld
push
bound
and
dec
test
mov
inc
sbb
push
jmp
orb
sub
adc
adc
test
cmp
and
loopne
mov
dec
mov
adc
inc
and
outsl
sbb
sti
movsl
in
adc
in
and
sub
cmc
xchg
jno
xorb
je
into
mov
push
loope
ret
dec
inc
cltd
loop
popf
int
rorl
mov
jmp
pop
into
sbb
iretw
and
das
mov
dec
rcll
out
pop
pop
imul
shlb
sub
sub
cs
pop
push
popa
sahf
insb
push
xchg
xchg
push
popf
jle
pop
ret
ret
jecxz
imul
fsts
xchg
fbld
mov
sbb
push
stc
mov
xchg
dec
mov
cli
push
fidivl
ja
mov
stos
popa
inc
lock
mov
scas
ljmp
push
arpl
xor
test
pop
cmp
adc
mov
mov
and
sti
inc
jae
mov
mov
lahf
xlat
fcomps
imul
scas
out
inc
sahf
in
lahf
mov
xor
jge,pt
out
xor
cmp
jmp
cmp
and
push
pop
inc
mov
fldl
inc
inc
sahf
fsubrs
test
xchg
add
enter
pop
inc
repz
push
sbb
imul
pop
insl
scas
int
mov
iret
cltd
pop
push
sub
jns
mov
imul
mov
faddl
test
jb
cmp
jnp
icebp
jg
loop
cmpl
leave
jb
and
adc
sub
dec
rcrl
icebp
pop
cmp
mov
adc
jmp
out
stc
mov
bound
addr16
dec
adc
fdivr
pusha
popa
sbb
dec
lock
add
out
fwait
gs
leave
fsubrs
ficomps
push
cmp
mov
movsb
scas
mov
rorb
dec
mov
xor
mov
test
add
add
xchg
stos
mov
sbb
mov
dec
int
lahf
mov
or
jp
xchg
mov
mov
fs
sub
cmp
push
std
inc
cmpsb
sub
add
cwtl
lods
or
push
push
adc
xchg
lods
pushf
lods
test
jno
mov
nop
lahf
xor
mov
repz
in
xchg
mov
dec
and
or
and
das
daa
sub
ljmp
inc
jno
xchg
shrb
aaa
and
jns
xchg
call
aaa
mov
out
out
jmp
fidivl
xchg
mov
out
imul
xchg
jg
inc
inc
jmp
mov
mov
add
xchg
fsubp
and
mov
je
aas
or
xchg
stos
imul
push
lock
and
les
push
or
in
pop
push
push
flds
repnz
jae
mov
pop
jnp
or
stc
mov
in
cmp
dec
ds
mov
sbb
mov
xchg
push
arpl
arpl
mov
mov
add
xor
scas
fcos
inc
test
sub
jg
into
js
or
movsl
cmpsl
pop
fistl
xor
out
jmp
in
xchg
sbb
push
movsb
addr16
dec
mov
mov
adc
dec
jae
aaa
dec
mov
test
add
andl
je
xchg
test
je
xchg
adc
xor
in
pop
int3
mov
jg
sbb
out
leave
or
jecxz
push
fistps
lock
fldl
in
jl
fcomps
stos
int3
test
pop
das
add
out
add
out
ret
aaa
or
int
xor
xchg
inc
mov
adc
xorb
inc
add
push
xchg
test
xor
push
sbb
repnz
cli
lret
sbb
and
mov
gs
cltd
cmp
into
jmp
mov
jne
xor
push
in
cmp
data16
or
call
push
push
test
push
outsb
adc
xchg
lcall
repnz
test
test
cmpsb
ret
jmp
pop
hlt
or
xchg
stos
inc
sub
and
jmp
ss
sbb
loope
adc
and
and
and
adc
gs
xor
jmp
mov
xchg
push
adc
pushf
call
ljmp
aad
aas
sub
jl
out
mov
ss
mov
push
or
and
dec
outsl
pusha
add
ds
arpl
ja
test
popa
xor
lds
lret
add
lcall
popf
push
jmp
in
mov
mov
fadds
mov
or
bnd
push
cmpsb
push
xchg
adc
mov
lea
mov
ja
aad
sub
pop
scas
pop
and
cmp
and
xchg
hlt
mov
aam
add
xchg
mov
dec
loopne
fisubs
pop
aas
push
pushf
mov
pop
pop
push
roll
leave
jecxz
adc
xchg
gs
outsb
js
out
push
call
das
push
scas
inc
jecxz
sub
in
nop
push
mov
data16
test
xchg
aaa
sub
enter
idivb
dec
xor
es
pop
jmp
repz
push
in
stc
into
mov
mov
cli
cmpsl
xchg
sbb
psrld
sbb
jge
jne
imul
rcll
cwtl
imul
fwait
in
dec
adcl
sub
add
xchg
into
sbb
pop
push
or
ljmp
repnz
and
or
push
ficoml
cld
mov
push
int
loopne
adc
js
xchg
mov
scas
shrb
imul
lret
les
mov
sbb
imul
int
nop
loope
dec
cmp
adc
pop
and
adc
fsubr
out
ret
fdivr
jg
cvtpi2ps
rorl
cld
movl
sbb
inc
leave
push
mov
push
cs
dec
ret
addb
dec
adc
in
sbb
ret
cs
and
std
pop
gs
pop
mov
icebp
out
sahf
or
jge
loope
jo
or
jns
dec
push
lret
pop
mov
ret
sub
push
push
cmp
jne
lds
imul
ret
loop
and
stc
int
adc
loope
mov
orb
sbb
rorl
bound
cli
popa
adcl
lea
push
pop
push
pop
adc
mov
sub
cmpsl
scas
cwtl
inc
and
repnz
push
ja
add
sub
rclb
call
daa
mov
push
bound
xor
push
in
or
mov
adc
sub
adc
jnp
mov
xchg
and
sbb
push
mov
imul
sbbl
or
dec
dec
xchg
out
pop
xor
dec
xchg
xor
data16
dec
push
jmp
cmp
mov
js
inc
cmpsl
dec
adc
push
jge
stc
stos
xchg
ljmp
xchg
adc
pop
int3
rdmsr
push
iret
rorl
push
inc
mov
push
or
test
aaa
lods
lods
and
mov
in
sbb
xor
scas
mov
ljmp
inc
in
fs
push
aas
aad
cmc
gs
push
leave
push
jnp
or
jle
ret
ret
cmpsb
popa
scas
pushl
stc
inc
lea
xor
js
and
je
rclb
sub
add
es
push
sbb
xor
and
psubq
cmpsb
mov
aam
xchg
dec
xor
lods
movb
fldcw
sub
stos
outsb
dec
cmpsl
scas
sbb
imul
add
jnp
xchg
adc
stos
cs
jl
xchg
addr16
das
lock
cmp
push
xchg
cwtl
mov
push
jmp
pop
jmp
fnstenv
add
shlb
jo
mov
add
jb
sbb
popa
rcll
mov
jae
popa
sahf
bound
lea
mov
pusha
das
xchg
and
push
stos
xchg
mov
cmpsl
push
imul
xlat
call
into
lds
dec
out
testl
or
popf
mov
or
add
or
rorb
lds
mov
lsl
mov
nop
aas
mov
inc
int3
nop
stos
adc
enter
sbb
sbb
scas
test
mov
adc
or
push
pop
or
ljmp
xchg
xor
push
sub
pop
std
pop
xchg
push
or
cmc
dec
inc
out
sahf
cmp
out
ret
sbb
pop
movsbl
cmp
int
pusha
aaa
insb
push
xor
mov
dec
adc
je
fmull
out
push
shll
cmp
push
es
and
add
mov
pop
out
das
int
push
jo
pop
cmpsl
popf
cld
js
sbbl
shl
pop
in
adc
inc
xchg
rcl
stos
mov
pushf
push
aam
out
or
loopne
jnp
mov
je
incb
adc
fcoml
and
insl
sub
add
subl
pop
cli
push
pop
inc
popf
mulb
add
cmpsb
xchg
lahf
adc
shrb
xor
cmp
sbb
jb
jb
xor
jl
inc
fdivrs
mov
sti
mov
cmp
push
lcall
push
pop
in
adc
pop
or
jecxz
das
xor
adc
mov
pop
sahf
sub
hlt
movsb
cs
sbb
jge
pop
push
ljmp
movsl
cld
je
into
push
lea
ficomps
rcrl
jo
pop
inc
jg
sbb
test
sahf
xor
repz
mov
sbb
xor
sub
inc
mov
fsts
bound
psllq
push
pop
fucomip
sbb
fisttps
ljmp
push
add
movsb
sub
shl
sbb
inc
rcrb
dec
lods
popa
mov
push
fmulp
sbb
stc
test
dec
inc
cmp
sub
adc
sahf
mov
test
cmp
out
out
xor
pop
das
aad
pop
sarb
int3
add
xor
aam
mov
push
mov
dec
push
test
outsb
or
cwtl
jbe
cld
bound
icebp
sbb
xchg
mov
adc
cmpsb
lahf
cmc
loop
pop
gs
out
adc
ficomps
out
imulb
pop
xor
dec
mov
pop
leave
push
into
les
sub
mov
jg
cs
sub
xchg
popf
cmc
push
xchg
mov
incl
lea
jg
out
dec
xchg
push
stc
fisttps
mov
jg
out
cmp
out
fmull
ret
ror
cmp
stc
jg
sahf
js
inc
push
es
or
xor
ds
mov
out
out
dec
or
fs
inc
sub
cmp
sbb
cmpsb
mov
sbb
inc
pop
addr16
pop
mul
push
addr16
mov
leave
test
or
pop
inc
andl
xchg
or
in
push
pop
stos
das
push
xor
or
mov
push
loopne
sahf
imul
nop
push
cmc
andb
adcl
aaa
cmpsb
aas
adc
and
pop
inc
div
mov
lods
xor
fstpl
push
pop
inc
cwtl
sub
lcall
jge
cmp
jg
and
subl
std
xor
leave
cmp
dec
add
push
and
and
dec
mov
testl
int3
push
fcomi
push
mov
sub
mov
inc
sub
jno
xchg
dec
push
and
mov
gs
adc
out
shll
paddd
and
add
int
pop
scas
js
sub
push
cmp
xchg
jle
or
mov
push
imul
xor
movl
mov
lret
add
push
pop
cmp
shll
mov
xchg
in
daa
cmpsb
pop
dec
pop
mov
mov
out
jns
push
in
mov
mov
cltd
cltd
pop
dec
movsb
jle
fcoms
sbb
mov
xor
inc
adc
ljmp
mov
sbb
mov
outsb
sar
push
mov
add
cmpsl
inc
xchg
lods
outsl
iret
je
inc
or
mov
sbb
les
or
leave
and
lcall
cmp
in
adc
push
pop
mov
mov
fcoms
out
fistps
jle
arpl
cli
adc
lock
stc
ret
lahf
xor
or
lods
pop
and
scas
insb
ret
stos
xchg
stc
inc
aas
jbe
jl
jge
jno
jge
divb
cmp
push
ja
test
push
mov
das
fcompl
scas
mov
inc
inc
push
ja
cmp
out
adc
sti
shll
mov
xor
push
lahf
in
pop
mov
outsb
loop
push
out
xor
out
or
ss
in
xchg
int
and
dec
fiadds
cmpsb
stos
sub
sub
mov
xchg
mov
push
dec
testb
mov
mov
dec
inc
cmp
jl
or
mov
mov
sahf
cmpsl
pop
sub
mov
mov
xor
mov
dec
in
ljmp
outsb
cwtl
sub
movsl
cmp
mov
xor
shl
sub
outsb
jo
push
imul
dec
je
mov
aam
jecxz
leave
ds
aam
pusha
bound
lret
aam
ror
jge
out
mov
dec
sbb
xchg
inc
add
fisttps
lcall
mov
xlat
mov
call
jne
and
in
adc
jae
stc
fstps
lcall
pusha
jge
jae
xor
into
mov
fbld
sbbl
cmp
pop
mov
cs
mov
js
inc
jp
xor
push
jge
and
shl
jns
xchg
sahf
push
pop
data16
fisubl
filds
bound
xor
or
insb
mov
mov
cmc
push
xlat
cmp
test
les
and
xlat
ror
shrl
adc
faddl
jns
jb
xlat
pop
stc
cmpsl
sbb
les
jae
mov
push
bound
mov
xchg
sub
mov
mov
lret
les
nop
sub
icebp
push
pop
push
test
sbb
hlt
sub
outsl
clc
xor
cmpsl
and
int
mov
pop
sti
arpl
scas
pop
das
jmp
jp
lods
mov
fs
sbb
and
lret
or
pop
das
jbe
loopne
xor
cli
mov
sbb
pop
push
sarb
mov
testb
xchg
dec
test
dec
bound
jns
loop
jecxz
sahf
mov
push
pop
xchg
jmp
jb
cmpsb
das
xchg
mov
xor
push
in
mov
mov
push
lods
inc
cmp
inc
enter
test
inc
into
orb
pusha
lcall
mov
rol
adc
daa
repz
and
pop
lock
rcrl
xor
pop
imul
les
jnp
pushw
xor
adc
jb
sub
pop
mov
repnz
call
pop
and
push
lds
cmp
cmpb
fs
pop
pop
cltd
loope
push
sbb
dec
jb
jmp
dec
iret
stc
insl
jae
dec
mov
adc
mov
popf
es
enter
imul
push
dec
cmp
bnd
subl
movsl
inc
gs
imul
stc
cmp
loop
loope
nop
stc
fmuls
pop
test
sbb
pop
outsb
into
inc
daa
push
push
std
cwtl
pop
cmp
or
loop
cwtl
sbb
test
push
inc
or
jl
popa
pop
fadds
pop
inc
xor
mov
les
push
fildl
stc
mov
ret
sbb
mov
out
out
mov
sub
shrb
push
push
and
ss
notb
and
mov
cld
adc
or
pop
movsb
xchg
mov
data16
jo
data16
push
jbe
sahf
scas
sub
pop
repnz
pop
and
js
or
add
flds
jl
cmpl
sti
and
jle
jg
test
mov
lock
jge
jmp
jbe
lock
adc
test
imul
dec
call
push
sbb
stos
lret
ja
inc
inc
pop
repnz
lods
cmp
jecxz
pop
xchg
cmp
and
ds
aaa
pop
adc
cltd
adc
xor
adc
jns
add
sub
xchg
testb
mov
cmc
xchg
les
mov
push
jno
aaa
ret
push
in
jg
movsb
lahf
dec
jp
jge
mov
add
jecxz
insb
outsl
lret
sbb
jmp
mov
inc
xlat
js
push
or
nop
inc
negl
xor
ss
pop
cs
in
scas
sbb
in
xlat
aad
jb
pop
data16
repnz
add
add
sub
and
jbe
cmp
inc
hlt
jle
bound
inc
or
fldl2t
add
dec
xlat
rorb
pushf
xor
jnp
xor
sub
or
push
mov
sbb
xchg
jne
ret
aad
xor
out
mov
cwtl
das
fisttpll
sub
mov
pop
inc
fcomps
inc
std
jne
out
sbbl
pop
repnz
imul
mov
jns
push
sbb
in
jnp
sbb
leave
sahf
push
shrd
and
lock
sbb
stc
aad
loop
xchg
popa
dec
sahf
mov
sti
shll
mov
icebp
mov
je
leave
add
mov
shlb
dec
inc
mov
shll
push
out
jmp
mov
push
ret
in
pop
push
and
rorl
mov
jnp
sti
mov
in
push
and
inc
cwtl
das
out
call
xchg
shll
cltd
dec
inc
xchg
repz
xor
shlb
adc
push
hlt
pop
dec
in
lcall
mov
dec
mov
rcr
and
iret
push
cmp
push
adc
dec
insl
adc
and
sub
xor
mov
push
in
fisubs
add
cltd
jo
into
push
fs
adc
jle
movsl
adc
or
data16
ror
xchg
mov
pop
mov
int3
inc
xchg
fldcw
adc
jns
sub
out
iret
lock
je
out
lods
jle
or
jne
mov
pushf
adc
sbb
mov
insl
pop
call
cmp
outsb
addl
mov
sti
or
xor
mov
sub
dec
adc
mov
xor
sbb
sub
or
mov
dec
xchg
out
cmpsb
cld
test
sub
mov
xlat
divb
aaa
sbb
mov
movsl
fwait
push
jmp
pop
cmp
clc
xchg
subl
sbbl
js
jmp
xchg
lock
cmp
adc
test
hlt
or
daa
jp
add
add
mov
adc
divb
dec
je
dec
inc
pop
cmp
push
loope
jnp
iret
mov
insl
or
mov
jg
add
stos
lds
hlt
jae
sti
cmp
popf
mov
push
and
pop
push
sahf
mov
rorl
pop
inc
dec
fimuls
bswap
mov
enter
push
ljmp
mov
and
out
add
sub
mov
push
test
imul
pop
rclb
adc
mov
pop
adc
dec
dec
insl
dec
jge
or
cmp
jb
xchg
push
ljmp
sbb
mov
xchg
das
xchg
pop
jnp
mov
mov
jl
pop
enter
xchg
jecxz
pushf
gs
xor
and
dec
pop
mov
and
pop
jnp
cmp
outsb
sbb
mov
ficompl
nop
mov
sub
jl
scas
iret
fimuls
pop
inc
cwtl
xchg
and
loop
rolb
sahf
dec
mov
mov
pop
mov
icebp
mov
lret
push
xor
cmp
iret
or
es
xchg
pop
leave
lods
fadds
out
ds
ret
inc
test
sub
add
fbld
mov
popa
adc
or
shll
cld
push
adc
xchg
mov
hlt
sbb
jecxz
xorl
test
out
adc
ljmp
jne
js
adc
add
push
sub
cmp
sbb
pop
ficoms
aad
pop
in
shlb
jnp
dec
arpl
cmp
sub
sahf
ja
rcl
xorb
or
push
add
mov
push
push
mov
iret
mov
mov
out
lret
mov
push
sub
dec
std
inc
cltd
cmp
jae
sbb
or
js
sub
aam
ja
lods
icebp
push
push
and
pop
repnz
xor
out
std
rcrl
popa
jmp
adc
xchg
xor
stos
add
rorl
aad
push
jg
xlat
mov
stos
sbb
jae
divl
outsb
push
outsb
cvtps2pd
cmp
dec
xchg
and
loope
jae
or
pop
icebp
and
mov
insb
xchg
iret
sbb
pop
mov
sub
in
notl
xchg
lods
lcall
add
shlb
sub
or
pusha
shlb
into
out
inc
pop
sbb
fimull
mov
pop
dec
add
aad
mov
sub
mov
mov
sbb
add
mov
push
mov
cmp
inc
adc
in
pushf
cmp
scas
and
addl
add
lods
outsl
push
or
out
sbb
mov
xor
add
xor
subl
mov
fsubl
pop
adc
sub
scas
lods
cmpsb
lret
sbb
add
imul
push
xor
sarb
mov
stc
loope
out
ss
jle
push
pop
std
sbb
inc
faddl
inc
imul
mov
ljmp
lret
lahf
mov
sbb
mov
or
push
stc
loopne
and
xchg
arpl
pop
addl
dec
mov
push
jg
jl
xlat
out
add
stos
idivb
adc
sbb
orb
imul
outsb
in
push
or
xor
mov
popa
mov
loope
mov
xchg
push
nop
orb
daa
xchg
add
std
out
js
dec
mov
dec
mov
xchg
sub
dec
jns
cmpsb
nop
mov
faddl
pusha
jns
jbe
daa
rcrb
cmp
xorb
bound
cmp
fcoml
imul
and
roll
push
inc
push
fisttps
xchg
pop
mov
mov
out
jbe
jo
mov
jmp
pop
sub
divb
fiaddl
push
aaa
xor
lahf
push
xchg
push
push
loopne
fs
cwtl
mov
jle
or
jb
fldl
aam
sbbl
lds
jae
pop
or
push
pop
subl
add
add
shlb
in
add
leave
mov
or
dec
add
push
inc
nop
dec
push
add
mov
push
mov
mov
jnp
lea
test
out
dec
jo
stos
or
mov
inc
mov
push
shlb
fmuls
in
iret
int3
add
cmpsl
jne,pn
push
push
xlat
es
dec
xor
out
in
xchg
pushf
mov
clc
mov
sub
sbb
aam
xor
jl
cmp
xor
jo
xor
jmp
scas
adc
mov
sbbb
aaa
fmull
sub
shrl
dec
cltd
inc
jb
cmp
jecxz
out
cld
xchg
dec
dec
imul
into
dec
xorb
xchg
add
cwtl
mov
jns
std
imul
sbb
mov
jnp
jecxz
sub
pop
lahf
inc
dec
mov
and
es
inc
add
mov
mov
shl
gs
pop
jg
and
das
fmuls
repnz
outsb
mov
adcb
lods
push
mov
sub
or
cld
std
cmp
dec
fs
or
pop
ja
xor
sub
mov
out
jae
jg
cmp
aam
das
add
push
push
in
aas
dec
adc
sbb
jl
adc
inc
inc
lret
roll
test
add
mov
out
or
icebp
pop
push
fbld
ds
mov
dec
mov
out
adc
test
es
or
add
popf
sahf
jge
orl
sub
add
mov
xchg
ja
jl
cs
sbb
js
data16
push
push
push
ficoms
mov
in
addl
cmp
pop
cwtl
and
jne
inc
das
push
sbb
loopne
mov
je
add
gs
inc
and
mov
pop
pop
dec
out
leave
mov
sub
jnp
rcll
dec
add
repnz
inc
sub
out
iret
lods
dec
flds
call
push
inc
mov
jle
adc
in
dec
roll
xchg
loopne
jae,pt
sti
and
dec
cld
sbb
and
mov
ret
mov
and
mov
sbb
dec
mov
sub
and
dec
jp
jne
fstpl
pop
mov
mov
jl
std
pop
aad
fistps
movsb
mov
ja
aad
push
stc
aas
fisubrl
pop
jo
push
fs
stc
and
xchg
rcrl
pop
and
in
pop
std
mov
adcb
xchg
int3
jae
pop
roll
test
repz
or
call
mov
enter
add
or
jle
add
mov
mov
lcall
xor
gs
push
dec
mov
dec
iret
pop
ja
out
arpl
adc
xchg
cltd
lods
mov
outsl
mov
xor
stos
sub
clc
add
out
cld
insb
dec
bound
outsb
push
repnz
ffreep
stos
jle
scas
pop
and
icebp
or
lahf
ret
or
jns
imul
xchg
xchg
hlt
mov
cmp
stc
mov
femms
aad
in
mov
mov
jb
scas
ds
sub
loopne
dec
adc
pop
and
jp
mov
jmp
push
rcr
out
push
lret
push
adc
aam
push
repz
ja
shrb
pop
jle
dec
sub
test
movsl
rcrb
add
in
xorl
les
mov
sub
cmpsl
sbb
or
insb
push
pop
loop
loope
cmp
or
xchg
outsl
ja
addr16
push
push
push
adc
sub
insb
cmpsl
insb
add
cmpsb
stc
stos
mov
gs
sbb
iret
iret
mov
lcall
mov
jo
adc
pushf
xlat
cwtl
xor
adc
mov
sub
push
incl
sar
pop
pushw
shlb
jnp
rcrb
pand
ds
push
xor
sti
mov
subl
repnz
rcr
mov
stos
jo
mov
ret
adc
imul
dec
add
dec
ss
clc
das
push
xchg
xchg
inc
repz
imul
in
or
imul
test
or
adc
outsl
mov
xor
add
mov
push
sub
test
loop
jne
movsl
xchg
push
xor
cli
stc
bswap
call
fsubrs
dec
pop
packuswb
push
cs
popl
test
and
stos
lock
pop
dec
std
mov
decl
iret
and
pop
cmpsl
in
mov
dec
cld
push
cmp
adc
nop
dec
out
jg
in
sbb
mov
mov
repnz
fs
in
mov
test
push
aaa
pop
adc
adc
aas
xor
sub
adc
mov
sub
xchg
push
imul
test
cmpsl
jae
imul
cmp
clc
mov
js
inc
rcll
fucomip
dec
shl
add
pop
aam
xchg
test
ja
outsl
pop
call
popa
cli
inc
fistpll
or
cmc
mov
adc
scas
pop
pop
loope
pop
or
add
sbb
cmp
outsl
add
andl
stc
cld
pop
lea
lea
push
movl
or
repz
je
aad
mov
or
mov
inc
adc
mov
cmp
lcall
cli
test
scas
xchg
stos
xor
addb
mov
ja
mov
jl
dec
cltd
cmp
pushf
inc
test
jnp
addr16
bound
dec
test
insl
push
add
test
inc
pop
test
mov
div
add
enter
and
push
repnz
xchg
sub
pop
add
mov
arpl
cmp
lods
stos
pusha
lea
sbb
in
call
mov
push
push
mov
lods
push
bound
add
inc
or
cmp
enter
hlt
inc
sub
xchg
ja
cmp
testl
cmpb
call
pop
adc
push
les
in
pop
or
mov
xchg
fisubs
cmpsb
push
or
and
scas
out
or
iret
sbb
enter
jecxz
add
scas
fmull
in
out
inc
mov
jmp
dec
jo
xorl
xchg
mov
out
subl
test
shl
fsubrl
inc
dec
lods
ss
testl
mov
mov
cs
repz
jmp
aad
dec
repz
push
push
hlt
ljmp
mov
sbb
sub
xchg
pop
inc
in
and
inc
je
push
popf
dec
xor
stc
fs
mov
pop
imul
mov
test
rolb
lcall
rol
adc
js
sbb
not
lods
pop
mov
das
sbb
mov
jo
out
dec
mov
dec
data16
mov
inc
jns
jge
mov
or
push
xchg
in
aas
inc
cli
xor
mov
pop
lret
mov
in
or
mov
jns
fimull
xchg
out
xchg
insb
imul
sarl
xchg
push
sub
stos
leave
and
lock
es
adc
push
mov
dec
sahf
cmpl
add
jnp
mov
lock
mov
jo
adc
xchg
icebp
sub
lret
mov
jo
mov
ja,pt
cmp
cmp
js
loopne
mov
mov
push
mov
in
ljmp
outsl
mov
pop
push
testl
xchg
jbe
jmp
pusha
imul
dec
lds
inc
fmul
xor
pop
jns
lods
fcompl
pop
in
mov
test
cwtl
shlb
lods
das
bound
add
sub
push
lret
or
movl
icebp
mov
test
push
daa
inc
mov
cmp
sub
xor
dec
fwait
xlat
xor
ret
mov
cmp
ret
push
pop
and
jge
lods
cmp
and
xor
repnz
inc
mov
mov
add
daa
arpl
out
fs
lret
cmpsl
addr16
int
mov
mov
pop
les
mov
iret
mov
pop
sahf
nop
adc
stos
data16
ja
push
or
loop
push
cmpsl
jb
fwait
push
sub
dec
sarb
dec
cmp
dec
mov
das
adc
icebp
subb
cmp
mov
pop
outsb
sub
lret
push
or
fldt
lds
fmul
test
orb
mov
cmp
addl
mov
outsb
aas
fdivrs
xchg
js
dec
ss
push
jge
add
out
movsl
fdivs
dec
inc
add
mov
pop
imul
xchg
xchg
lcall
mov
fcomps
push
cmpsb
jg
and
jecxz
xchg
pop
add
dec
es
sbb
aad
sub
inc
lods
or
mov
lock
sbb
rorl
jns
inc
pop
das
adc
mov
icebp
nop
sahf
lods
cmp
inc
pop
jecxz
pop
xor
fnsave
lods
ja
repnz
jno
movsb
int
xor
sub
dec
sbb
xchg
faddl
inc
test
and
cs
insl
popf
xchg
dec
imul
or
lret
aad
test
fists
inc
and
enter
jo
jo
aas
stos
ljmp
push
addr16
mov
and
mov
dec
cmpsb
dec
push
out
xchg
or
jb
bound
push
popl
mov
adc
mov
lret
sub
push
stc
in
and
dec
mov
ss
mov
or
mov
lcall
lods
test
xor
pusha
clc
mov
mov
add
jmp
mov
or
jg
fldcw
dec
push
in
mov
cld
mov
mov
fisttps
test
push
inc
aad
shr
or
shl
sti
and
jno
mov
or
or
lret
cli
hlt
sahf
sbb
cmpsl
outsb
xchg
dec
jmp
mov
cmp
out
sub
cmp
xor
mov
push
xlat
lret
dec
jne
das
jg
adc
xor
mov
xlat
fwait
mov
xchg
mov
and
popa
push
sub
sub
jl
imul
mov
cmpsl
jo
push
jle
fdivrl
ja
stos
mov
or
stos
int3
sub
out
jb
and
sti
push
daa
and
mov
pop
test
in
push
adc
bound
xchg
pop
out
mov
mov
fdivr
jge
test
mov
mov
out
sbb
mov
mov
mull
jg
mov
fs
mov
jnp
pop
push
ja
ror
add
pop
pop
std
mov
pop
fiaddl
pop
or
mov
sti
iret
or
dec
inc
add
das
cld
cmp
mov
fiaddl
jnp
rcll
in
lods
std
int
in
sahf
xlat
dec
pop
lcall
cs
pop
push
or
sub
insl
and
xchg
cli
repnz
dec
sub
das
push
push
jg
xchg
push
call
xor
mov
ret
faddl
loope
fxch
mov
add
push
dec
sub
xchg
lea
or
mov
sub
idivb
pop
and
cld
fcompl
pushf
cmp
orb
stc
dec
cmp
push
xlat
jns
sbb
cld
not
jp
jp
mov
mov
jp
jo
adc
adc
push
popf
insl
xorl
cmpsb
lcall
xchg
cwtl
imul
decb
shlb
jo
movsb
imulb
jae
inc
xor
std
xchg
sbb
mov
dec
out
mov
je
pusha
xor
xor
sahf
adc
adc
mov
cmpsb
inc
xchg
popf
jbe
gs
addr16
sbb
push
cwtl
stos
adc
xorb
out
decl
popf
jg
rcrl
aas
xor
not
fidivrl
lods
or
or
fsubrs
xchg
in
out
cmc
adc
std
push
outsb
mov
hlt
and
popa
lret
lret
mov
into
in
addb
idiv
mov
mov
mov
dec
xchg
rolb
jge
mov
popf
push
xor
and
cli
cld
sub
push
mov
and
sub
or
jnp
jb,pn
lods
pusha
lret
ficoml
mov
cmp
sbb
xorw
or
cmpsb
shll
fsts
mulb
outsb
movsb
lods
sbb
je
subb
iret
sar
mov
enter
dec
sarl
xchg
push
mov
mov
add
cmp
lret
adc
fwait
test
sbbb
dec
aad
test
push
movsl
sbbb
mov
mov
mov
stos
sub
inc
jns
pop
jecxz
jae
icebp
sbb
xchg
add
hlt
call
mov
xlat
insb
and
shr
imul
xchg
scas
outsb
orb
adc
loope
es
push
testl
dec
push
std
push
and
out
mov
lcall
pop
xchg
insl
shl
xor
out
shll
mov
test
push
lret
and
fsubrs
hlt
or
xor
lea
lcall
out
lock
dec
sbb
mov
testb
push
pop
mov
adc
sarb
test
dec
sbb
lret
jns
jg
and
jl
rorl
sub
in
jl
sbb
pop
ret
cli
dec
pusha
mov
in
mov
sbb
xlat
xorl
pop
rcll
outsl
mov
cli
mov
icebp
pop
jge
push
inc
in
add
punpckldq
outsb
inc
pushf
outsl
sbb
insl
add
cmpsb
enter
mov
mov
and
mov
jo
pop
pop
cmp
mov
push
push
push
movsb
testl
add
popf
pop
leave
fiadds
and
mov
stos
outsb
pushf
jl
and
arpl
mov
repz
cmp
mov
xlat
ljmp
popa
cmpsl
sbb
sbb
lahf
jb
inc
mov
or
js
jo
push
aas
imul
scas
sub
cmp
mov
mov
xor
test
das
addr16
repz
mov
jo
hlt
mov
popf
xor
push
shr
pop
cmp
dec
decl
inc
repz
pop
insb
sub
ficoml
roll
dec
add
in
in
push
adc
cs
cmc
ret
dec
sub
clc
inc
js
movsl
movsb
dec
jecxz
daa
test
rcll
mov
cmp
jl
sti
aas
or
sub
fsubs
mov
outsl
loopne
cs
negl
mov
sbbb
scas
dec
jo
dec
sub
or
pop
pushf
inc
jns
add
jmp
mov
sbb
add
loop
cld
pop
je
ror
and
rcrb
xor
insl
sbb
dec
loope
sahf
test
mov
or
int3
cwtl
movl
add
push
insl
adc
sti
icebp
into
clc
fldcw
pop
push
repnz
repnz
stc
push
cmp
fldl
cmp
ja
ret
add
stc
xchg
push
fisttpl
jle
xchg
shlb
in
add
pop
je
rclb
mov
rcll
lcall
js
xor
xchg
or
jae
push
ds
push
out
int
mov
or
adc
jp
xchg
mov
and
add
adc
dec
and
cmp
xor
into
jge
adc
push
cmp
add
jmp
sbb
dec
pushl
out
lret
push
inc
jbe
jae
mov
push
add
jno
push
adc
push
addl
idivl
xchg
dec
test
lcall
sarb
bound
mov
sub
icebp
icebp
jle
lds
fadds
js
and
insb
xor
fstps
dec
je
mov
and
add
cld
lds
mov
cld
add
lods
add
or
xchg
cltd
xchg
sub
mov
adc
jp
push
je
xor
cwtl
xor
fldenv
add
add
int
jno
xor
mov
das
jge
push
jno
dec
cmp
lea
push
and
stos
pop
and
cld
mov
int
dec
sbb
xor
cmp
out
lds
or
add
inc
out
cmp
mov
pop
or
daa
pusha
lock
cmp
lock
mov
aam
xor
adc
push
adc
lahf
shr
inc
jae
inc
lcall
loop
pop
sub
mov
and
andl
mov
test
ljmp
and
pop
into
and
ja
cvtps2pi
test
test
dec
mov
sbb
popa
cmp
insb
sub
movsl
sbb
jo
int3
mov
dec
inc
mov
jns
int3
arpl
cmpsl
mov
rorl
add
cwtl
mov
jnp
cmc
push
mov
fildll
fsubr
cli
adc
call
or
jb
mov
dec
inc
js
gs
std
inc
les
push
movsb
pop
xchg
ljmp
jmp
xor
cmp
test
hlt
xor
stc
pop
pushw
addr16
in
fmull
in
js
adc
dec
lock
mov
sbb
rorl
or
notl
into
fildll
insb
push
or
cmp
push
sub
cmp
push
fsqrt
push
pop
push
test
mov
cmpsb
loope
dec
sub
adc
dec
xchg
jnp
or
je
jg
push
out
cmc
sub
cld
subb
sub
int
clc
cs
or
push
xchg
into
sub
das
xchg
scas
and
scas
cld
mov
icebp
mov
push
pop
in
mov
nop
arpl
jb
mov
inc
gs
add
or
mov
mov
inc
and
pop
sbb
xchg
xor
inc
sbb
mov
inc
lock
gs
mov
push
aam
ljmp
cwtl
inc
fistpl
inc
repz
dec
and
pop
jmp
sbbb
aaa
bound
hlt
mov
inc
imul
stos
imul
push
popf
repnz
or
jb
fs
in
daa
pop
and
mov
add
out
lods
mov
ljmp
mov
dec
and
ja
jnp
jmp
pop
inc
mov
xchg
xchg
cs
test
cmp
clc
sbbl
add
lcall
xor
js
cmp
rcll
outsl
sbb
int
leave
dec
add
test
lret
and
gs
popf
daa
push
mov
push
mov
mov
sti
loopne
out
cld
movsb
mov
cltd
sar
sub
xlat
sub
mov
loop
inc
fmul
movsb
outsl
sub
xchg
lret
push
jo
xchg
jp
js
sub
loop
rcr
je
mov
mov
pushf
mov
loope
push
dec
jge
pop
repz
bound
jmp
push
pop
mov
std
push
pusha
sahf
pushf
push
add
pop
cs
adc
inc
fwait
sub
test
pop
or
sahf
sub
push
in
cmpsl
addr16
mov
lods
insb
mov
jb
jne
dec
adc
sbb
mov
lods
clc
ret
or
into
jg
cmpsb
dec
mov
scas
cmpl
gs
cmp
dec
adc
ret
pop
push
js
scas
lret
sub
fildll
jns
jbe
xchg
mov
imul
cmp
dec
adc
mov
or
hlt
ret
enter
ja
out
push
call
pop
test
dec
inc
les
mov
and
sti
repnz
or
outsl
dec
test
sbbb
jb
es
mov
push
and
loop
inc
jle
mov
insl
stos
hlt
movsl
or
loop
scas
cmp
xor
test
mov
mov
jbe
je
mov
jmp
inc
jno
inc
adc
dec
pop
in
push
decb
outsb
cmp
xor
pusha
mov
jb
pop
mov
jmp
sbb
cld
xchg
sub
jge
inc
into
adc
lahf
sbb
dec
mov
pop
scas
shll
fisubs
jmp
or
adc
mov
aam
into
add
jb
dec
int3
or
xchg
dec
mov
lods
lret
lds
xchg
loope
aam
test
mov
dec
loop
inc
ds
add
mov
jns
popa
out
ret
cmp
xor
xlat
jns
lods
insb
xor
or
lahf
cmp
fbld
clc
aas
test
stos
test
xor
dec
mov
add
xlat
jb
pop
lahf
imul
lea
cmp
xchg
scas
xchg
rcll
daa
repnz
cmp
mov
sub
pusha
sti
lcall
rclb
cmp
ds
jae
pop
pop
lret
nop
sub
push
loop
and
orb
inc
push
mov
insb
push
out
xor
push
std
sub
push
sub
mov
and
ret
divl
mov
mov
dec
test
lahf
idivl
lds
lock
xor
stos
addr16
sub
mov
inc
out
fwait
mov
sbb
in
ret
pop
dec
mov
ss
push
fisubl
int
mov
pop
jb
xor
ss
mulps
inc
inc
sbb
pop
scas
loopne
xor
jecxz
or
pop
popf
or
lock
sub
int3
cltd
or
dec
fcmovnbe
scas
cmpsb
nop
inc
int3
rcll
aad
adc
out
imul
pop
jb
jnp
in
sub
or
dec
jns
push
dec
jge
lcall
push
and
and
mov
push
clc
or
shll
pushf
cmova
mov
mov
inc
fmuls
sub
popf
pop
js
push
imul
pop
cmpsl
cmpsl
aad
movzbl
inc
fidivrs
jmp
or
jecxz
orb
xchg
push
adc
jmp
lret
shll
adc
jae
xchg
push
stos
adc
js
int
push
gs
mov
pop
shl
sub
movsb
and
popa
gs
jg
mov
dec
or
cmp
ljmp
dec
mov
sbb
push
sub
sub
xlat
cltd
cltd
fwait
jbe
sub
pop
adc
dec
mov
sti
into
jge
inc
mov
jb
or
popa
bound
jge
push
fsts
add
xchg
arpl
or
je
mov
icebp
and
push
cmpsl
adc
mov
sbb
test
and
add
mov
ret
ret
adc
mov
mov
push
lock
inc
movsb
sub
nop
xchg
dec
aam
hlt
pop
leave
jbe
out
popf
cmp
cmp
cmp
lret
clc
dec
stos
adc
sub
out
leave
and
sahf
sub
in
jno
cmpsb
mulb
mov
pop
xorb
or
dec
lea
sahf
lods
ret
shlb
scas
jge
icebp
xor
out
cwtl
adc
aad
pop
je
or
pop
stc
jecxz
mov
mov
sbb
push
sub
cmp
dec
and
sarb
cmpsb
lods
jb
sub
or
xchg
jbe
or
jp
jle
scas
in
out
cmp
dec
enter
jno
xchg
push
pop
xor
jae
bnd
lds
push
roll
fisubs
ljmp
aas
add
les
jg
adc
lock
mov
int3
jp
popf
push
std
mov
sbb
cmp
mov
lcall
enter
iret
mov
and
shl
lods
pop
daa
inc
jg
mov
out
cmc
test
mov
repz
pop
fcomp
cmp
cmp
leave
lods
outsl
cmpsb
cmp
cmpsb
xchg
filds
test
xor
add
imulb
mov
or
les
movsb
add
fsubr
out
adc
and
ja
nop
mov
idivb
cmpsb
push
mov
es
cwtl
fcoms
sbb
js
shlb
jp
scas
xchg
xor
repnz
ss
mov
aas
popf
or
and
mov
nop
and
push
pop
mov
movsl
std
icebp
and
pop
fwait
std
nop
js
pop
sbb
lods
call
mov
scas
jae
xchg
xor
push
lea
xlat
push
test
mov
mov
mov
enter
push
sub
popl
mov
out
addb
adc
jg
inc
stos
es
ret
push
pop
xor
or
adc
sbb
xchg
mov
andl
inc
xchg
jl
mov
decb
cltd
jl
push
mov
mov
ret
jge
fiaddl
jge
mov
rclb
les
sbbl
fstp
xchg
test
fwait
or
aas
jmp
push
cmp
cmp
mov
fsub
xor
scas
xor
xchg
sub
jno
imul
jle
or
inc
loopne
clc
xchg
in
cmc
hlt
pushf
push
mov
mov
std
xchg
data16
loop
pop
mov
xchg
and
outsl
xchg
mov
jne
std
pop
pop
xchg
sti
push
xchg
push
lret
cmp
jb
pop
in
add
pop
lcall
jo
ljmp
fisubrl
push
or
xor
mov
push
sbb
pop
in
xlat
push
and
sub
cmp
icebp
fidivl
add
push
jle
jg
stc
movsb
frstor
rcrb
mov
mov
add
clc
mov
mov
sub
notb
add
push
jo
push
and
jo
mov
inc
ja
into
das
clc
push
in
sbb
xor
iret
push
shl
test
notb
rclb
sti
mov
ret
fisubrl
ror
arpl
lahf
lods
inc
mov
or
pop
popa
out
xlat
insb
push
dec
and
cmc
lahf
jb
cmpsl
xchg
mov
test
mov
decl
mov
lods
bound
xor
add
repz
test
jbe
or
cmpsl
and
adc
std
scas
sub
insl
incb
lcall
inc
arpl
xor
in
inc
subl
cmp
adc
pop
mov
mov
fisubrs
ret
xchg
popa
inc
cmp
push
jns
or
push
in
or
stos
outsl
nop
stc
icebp
add
das
push
xor
mov
out
fists
cwtl
sub
push
shll
cmp
jle
cmp
or
push
mov
sbb
bound
jmp
mov
mov
popa
aaa
cmpl
cltd
iret
add
pop
push
out
lret
xor
adc
cmp
mov
add
mov
cli
gs
push
mov
sub
push
gs
push
into
stc
aas
pop
sbb
shl
in
push
insl
cmpsl
ss
dec
adc
test
push
mov
cmp
out
sub
pop
xchg
out
nop
pop
daa
sbb
gs
and
imul
aaa
andl
jnp
adc
out
mov
cs
push
cld
jg
loopne
xchg
mov
pushl
jecxz
fisubl
and
cmp
add
into
lds
and
pusha
ret
adc
ljmp
sti
or
or
pop
leave
mov
or
adc
pushf
mov
loope
out
pop
lcall
push
flds
sti
sub
andl
mov
xor
pop
adc
dec
jl
sbb
jo
fsubrl
and
lds
ss
cmpsb
push
inc
ds
xlat
xchg
mov
sbb
out
movsb
jno
mov
aam
loop
jne
jge
in
xor
out
mov
or
test
mov
nopl
add
dec
cwtl
in
mov
fs
mov
pop
dec
adc
dec
fiaddl
or
sarb
lcall
data16
leave
sbb
orl
dec
and
mov
rorb
jbe
jbe
xor
sahf
mov
cmc
jae
repz
cmp
xor
xor
lds
dec
mov
and
sbb
add
adcl
sub
add
out
xlat
ficoms
xor
jmp
shrb
out
je
ret
lods
mov
mov
xor
arpl
icebp
mul
cmp
pop
or
subl
cmpsl
mov
fwait
adc
stos
jbe
or
push
or
icebp
cmp
or
popf
cmp
mov
xchg
loope
pop
hlt
jge
outsb
add
stos
in
stc
outsl
es
dec
sub
out
mov
and
out
push
adc
mov
push
xchg
dec
mov
add
xchg
and
movsl
mov
and
add
jp
clc
lcall
xchg
dec
jno
mov
add
mov
ficoms
adc
in
repnz
mov
push
mov
js
push
leave
ret
repz
test
add
mov
cmpsb
push
mov
hlt
inc
fsts
sti
call
rclb
mov
fdivl
icebp
jnp
nop
mov
adc
mulb
cltd
cld
pop
lods
pusha
out
fists
dec
or
out
pop
addr16
in
loop
push
cli
cmp
enter
jns
les
fstpt
dec
mov
push
js
inc
adc
mov
lea
or
movsl
sub
jle
cmp
cld
cmp
cmpsb
cwtl
into
mov
mov
jmp
cmpsl
insl
out
xchg
jne
jbe
jp
addl
scas
ret
mov
xchg
test
push
xchg
test
lcall
xlat
push
popa
inc
jno
ss
dec
negb
bound
int3
xor
mov
adc
push
das
mov
fidivs
pop
mov
jne
jmp
mov
movsb
or
mov
inc
loopne
imul
rorb
mov
addr16
jl
ror
sub
aaa
jge
xchg
inc
addl
adc
add
aam
and
mov
jmp
out
add
xor
cmp
loope
mov
and
addr16
outsb
ja
sbb
jbe
and
xchg
mov
bound
xor
ret
stos
mov
subb
xchg
xchg
xchg
insl
push
loopne
push
xchg
push
push
pop
shlb
fcoml
sbb
xchg
inc
jne
pusha
dec
sbb
xchg
das
adc
or
pop
loope
lcall
pop
xor
movsb
adc
pop
adc
test
jle
mov
ret
and
fildll
push
sti
adc
mov
pop
mov
inc
cmpsb
sub
ret
adc
inc
rolb
mov
xchg
xchg
push
and
push
je
lcall
loope
outsb
push
fstps
in
fildl
fucom
and
in
sub
outsb
fsubrl
in
imul
inc
push
bound
hlt
mov
dec
mov
ficoms
rcll
push
or
inc
ds
dec
sbb
pop
rclb
repnz
sub
lret
xor
xor
jno
lock
call
outsb
push
out
jne
repz
xchg
add
xchg
into
push
push
dec
and
pop
sahf
cld
fsubs
jecxz
add
push
mov
push
lock
cmp
mov
mov
mov
sub
fs
push
bound
inc
dec
fimull
mov
jmp
movsb
cmp
cmp
aam
arpl
sbb
cmp
dec
dec
rolb
xchg
adc
cli
or
faddl
xchg
and
in
cli
sbb
push
movsl
jge
add
aaa
sub
jl
pop
adc
bound
cmp
std
sahf
es
add
daa
ficoms
sub
or
popf
xor
jnp
js
mov
mov
cld
pop
push
xchg
or
mov
pop
jle
lods
mov
flds
or
push
inc
xlat
push
xchg
pop
aas
add
ret
xchg
sub
out
lahf
push
out
mov
fwait
shr
and
cmc
dec
and
jp
mov
es
ret
loop
xchg
das
adc
stos
mov
mov
in
dec
cmpsb
mov
xchg
inc
pushf
mov
xchg
cmpsb
or
dec
jns
jl
cmpb
jle
xor
inc
xchg
ljmp
jbe
pop
or
dec
xlat
call
cmc
sbb
lods
pop
int
test
and
or
jo
inc
fcoms
xchg
std
mov
push
nop
mov
cld
movsb
loop
mov
xchg
push
daa
xchg
sbb
inc
push
pop
jecxz
insb
mov
jnp
add
out
lods
fs
add
push
jne
test
das
mov
outsb
jecxz
out
pop
int3
rolb
jo
jne
push
and
cmp
shrl
aam
loopne
aad
in
sbb
out
sub
cwtl
mov
in
cli
lock
sbb
fdivl
jp
bound
xchg
aam
pushf
test
aam
mov
adc
jge
in
cmp
notb
in
add
mov
push
adc
aam
jmp
push
inc
pop
std
int3
in
dec
insb
test
scas
mov
inc
lods
rorb
push
mov
xchg
xchg
fldenv
rcrl
imul
push
out
xlat
pop
testl
pop
leave
mov
cmp
pop
jp
pusha
sbbl
mov
cmp
popa
out
push
jge
push
push
mov
inc
xchg
cmc
out
imul
imul
pop
scas
daa
mov
lea
dec
or
sub
cmp
push
lcall
lahf
and
gs
cmp
add
sahf
lds
jae
mov
mov
xchg
sbb
imul
out
pop
pop
mov
add
and
xlat
ljmp
or
jns
or
mov
cmc
mov
xchg
lds
add
fldcw
xchg
data16
pop
stos
sbb
loope
and
lock
xchg
in
sbb
scas
xchg
loop
lahf
aad
mov
mov
out
cwtl
lds
mov
int3
rolb
jp
aaa
mov
cmp
out
std
cmp
add
add
rcrl
cmpsl
and
mov
pop
fistpl
shlb
ret
mov
jecxz
dec
or
les
lock
arpl
pop
imul
es
sub
mov
mov
push
pop
sahf
in
sarl
cmp
jg
mov
push
or
jo
add
cmp
mov
in
add
cmc
fwait
pop
pop
push
test
jle
out
or
roll
popf
repz
idiv
jno
xchg
sub
pop
lret
jnp
int
push
mov
cwtl
das
mov
mov
or
movsb
scas
mov
and
mov
push
data16
iret
or
mov
js
sub
mov
stc
notl
loop
loop
jecxz
cmpsb
lods
shlb
dec
adc
insb
lock
xlat
out
int3
jmp
int3
mov
mov
into
addr16
es
ds
insb
popl
xchg
cmp
jb
fiadds
loopne
mov
xchg
sub
pushf
roll
pop
pop
add
dec
push
fisttpl
jl
add
shr
outsl
faddl
xor
test
jmp
addl
fdivl
rclb
jg
push
stos
lock
jbe
pop
lcall
lcall
ljmp
xor
pop
je
ficoms
popf
add
sub
mov
push
mov
es
sbb
cltd
push
outsl
bound
or
outsb
repnz
cwtl
sbb
lret
sub
sbb
cmp
cltd
sub
test
mov
dec
push
fmulp
das
cmpsl
movsb
ja
shl
rcrb
dec
scas
sbb
rcll
icebp
js
mov
repnz
jne
leave
jmp
push
inc
pop
adc
jmp
ret
mov
pop
xchg
in
dec
fwait
dec
negb
notl
lahf
sahf
stos
sub
jge
cmpsb
ss
mov
xchg
lods
out
dec
inc
mov
mov
inc
or
xchg
insl
adc
call
sarb
lea
out
in
popf
sub
test
lret
lret
push
js
inc
sbb
adc
divps
mov
pop
gs
jmp
jne
xor
sbb
stc
cld
es
mov
mov
data16
cli
jb
in
add
inc
sbb
pop
sbb
mov
sbb
xor
cs
fsubrl
xor
sub
es
enter
jb
ds
sbb
out
mov
shrb
push
or
out
push
in
insb
outsl
and
cmp
cmp
test
std
mov
stos
jb
loopne
and
hlt
mov
xchg
and
ret
dec
lea
pop
xor
fs
xor
fidivs
lret
cmovns
mov
push
cmc
cmpsb
mov
jae
shr
stos
out
push
mov
dec
lds
pop
js
insb
pop
xchg
repnz
addr16
out
mov
pusha
clc
ret
dec
push
mov
imulb
jne
mov
fildl
subb
xor
push
adc
add
mov
cmp
push
movl
jp
imul
hlt
lods
in
fistps
subb
popf
mov
mov
sub
mov
icebp
rcll
ss
ja
push
andl
adc
adc
jnp
push
icebp
ftst
mov
lea
js
xchg
xchg
sbb
push
mov
mov
lea
fisttpl
lock
jle
test
in
add
inc
push
test
push
arpl
and
es
xor
cmp
ret
movsl
mov
cmc
cs
adc
mov
push
stos
outsb
aad
xor
aad
add
push
fadds
dec
xor
pop
adc
xor
call
hlt
sbb
mov
sbb
xor
das
cli
arpl
dec
int
mov
inc
mov
cmpb
int3
add
adc
cmp
gs
stc
rcl
inc
mov
cmp
dec
aam
sbb
sub
cmp
push
std
xchg
inc
mov
xchg
mov
or
rcl
movsl
xor
cltd
loope
jg
push
jl
es
lea
daa
outsb
mov
adc
test
lret
insb
add
out
cld
cli
roll
aaa
xchg
adc
sbbb
repz
lods
pop
test
push
jbe
inc
dec
sbbb
mov
or
in
xchg
adc
test
mov
fcmovnb
mov
add
icebp
in
jae
sub
cwtl
nop
out
fmuls
dec
ljmp
lock
ljmp
icebp
dec
jne
test
icebp
mov
push
rol
inc
into
pop
dec
or
shl
xchg
cltd
lret
mov
cmp
pop
mov
or
test
adc
cwtl
cmpsw
adc
test
xchg
push
and
pop
test
pop
sub
cmp
jecxz
outsl
mov
outsl
mov
dec
jecxz
inc
pushf
faddl
call
aad
sarl
rdpmc
addr16
and
test
movsb
or
pop
add
pushf
jle
pusha
cmpb
les
ficoml
inc
repz
adc
sub
pop
mov
js
push
divl
sahf
sub
sub
das
push
xlat
jle
mov
add
mov
mov
xor
imul
insb
xchg
inc
push
fidivrl
jbe
mov
cmp
xchg
xor
and
aam
dec
aam
std
jo
mov
rdpmc
pop
into
jle
mov
scas
mov
popf
filds
hlt
repnz
cltd
pusha
cmp
loop
xchg
movsb
das
pusha
fldlg2
stc
xor
mov
les
repz
aad
sbb
mov
jecxz
xchg
pop
mov
or
and
icebp
xchg
movsb
mov
mov
push
fimuls
clc
fsubrl
adc
dec
sarb
fisttpll
push
mov
popa
decl
int3
mov
cmp
enter
adc
xchg
xchg
adc
outsl
into
lds
scas
push
iret
jns
faddl
test
pop
and
cmp
loope
in
dec
push
lahf
mov
test
xor
hlt
outsl
icebp
mov
xchg
loopne
call
imul
cltd
nop
xchg
jbe
in
or
cwtl
movsl
mov
mov
pop
add
xchg
push
cli
fisubs
cld
lods
pop
xor
push
insl
addl
notl
fisubl
es
mov
push
fiadds
loope
xchg
push
int
mov
hlt
rorl
enter
and
mov
mov
mov
inc
loopne
ds
xchg
cmp
add
push
add
insb
xor
mov
data16
inc
hlt
dec
js
sub
dec
dec
mov
jnp
jno
push
ss
outsb
cld
mov
gs
mov
cmp
fsubs
push
mov
and
inc
cmp
fcomp
repz
add
push
pop
dec
sub
sbb
shll
push
pop
mov
scas
shlb
mov
pop
addr16
test
dec
pop
js
daa
arpl
hlt
movsl
cmc
xor
mov
iret
lock
packssdw
mov
pop
shlb
orl
std
xor
aaa
aad
inc
call
mov
xor
jnp
in
outsl
lock
push
or
fldl
adc
scas
sub
rorb
and
mov
inc
shll
sub
and
cli
out
fxch
cmpb
or
cmp
mov
gs
and
or
xor
or
rorl
jp
clc
jo
mov
arpl
cwtl
mov
fisubrl
and
stc
sbb
xchg
in
call
jnp
xlat
stos
cmp
cmp
shll
clc
rcll
jg
imul
xor
popa
add
mov
sbb
out
ret
ja
cmp
stos
insb
inc
fnstenv
and
add
fisttpl
popf
lods
cmp
push
shll
jbe
addl
ja
fnstcw
push
jnp
inc
mov
mov
in
fwait
addr16
mov
out
int
aas
icebp
xor
cmc
arpl
mov
inc
insl
adc
push
mov
xchg
call
jmp
ss
insb
sub
out
imulb
aad
pop
outsl
lret
push
pop
add
mov
rcll
mov
pop
or
inc
enter
jg
out
mov
add
test
leave
ret
push
sbb
je
dec
push
fiaddl
nop
icebp
inc
pop
xchg
pop
adc
push
addb
testl
jbe
mov
and
jp
jmp
sbb
enter
dec
mulb
fcompl
ret
xchg
adc
mov
out
xor
pop
int
jo
adc
sbb
inc
inc
inc
jecxz
and
pop
inc
lods
jbe
mov
sub
mov
rclb
in
test
sarb
push
fbstp
inc
fisubrl
cmp
fwait
mov
xor
jge
jl
gs
sub
push
adc
xchg
pop
push
es
jg
stos
mov
mov
stc
jecxz
sub
in
shrl
sub
jmp
push
das
aad
stos
cmc
jns
shll
in
js
iret
arpl
lods
loop
scas
sbb
iret
push
das
or
je
cmc
mov
in
and
shll
inc
iret
sbb
call
inc
dec
das
and
push
sbb
jo
xchg
data16
sub
pop
sub
fwait
lret
dec
test
and
add
gs
cmp
cmp
add
lcall
leave
jp
cmp
adc
xchg
lock
outsb
mov
cmp
mov
xchg
cmp
mov
inc
push
addr16
push
or
repnz
xor
push
pop
jle
or
iret
movl
test
cmp
cmpsb
xchg
mov
push
les
push
sub
loop
sub
mov
rcr
test
mov
sub
int
xchg
popf
sahf
jl
mov
or
push
insb
clc
jge
xor
inc
push
data16
or
mov
adc
dec
lcall
xchg
ja
cmp
imul
or
iret
int
push
in
add
xor
sti
clc
scas
movsl
mov
add
inc
in
adc
ja
bound
fmul
mov
jo
inc
das
sbbl
cld
mov
mov
mov
es
jecxz
pop
push
jmp
into
dec
mov
xor
jl
push
mov
add
sbb
insl
loopne
and
lea
loop
lods
int3
inc
stc
loopne
movsb
iret
ret
lret
push
sbb
ss
dec
orl
das
jp
and
xchg
outsl
fmul
imul
adc
adc
cmc
lea
in
adc
ret
loopne
pusha
mov
dec
std
std
dec
icebp
cld
arpl
sahf
aas
xor
cmp
jno
jle
mov
idivb
filds
dec
add
sub
sbb
sbb
dec
out
add
mov
repz
mov
mov
aad
les
adc
in
popa
imul
jo
xor
fists
mov
mov
rolb
arpl
nop
dec
sbb
inc
stos
dec
leave
or
mov
loopne
insl
fistps
pop
imul
je
and
nop
js
pavgw
push
cmp
jo
out
je
mov
dec
sti
push
mov
in
cmp
imul
push
sbbb
xor
inc
push
daa
inc
imul
xor
aas
dec
jnp
push
adc
loopne
xchg
insl
cmp
daa
fildll
divb
lahf
jle
xchg
xchg
fiadds
xor
mov
aas
mov
insl
jp
ds
mov
sbb
and
dec
mov
jno
cmpb
jns
pop
xor
mov
mov
xchg
orb
jg
push
mov
ret
or
push
movsl
cmp
mov
cs
test
and
jne
call
lcall
push
jecxz
cmpl
mov
les
inc
or
mov
xor
pop
add
mov
int
leave
adcl
pop
mov
mov
cmpsl
dec
fdivrl
pop
je
aad
lret
test
shrl
dec
adc
dec
push
dec
nop
mov
xchg
dec
int3
adc
xchg
dec
sti
outsb
lret
and
mov
sbb
or
out
std
and
jo
ds
pop
lock
jle
adc
mov
xchg
cli
pop
xchg
xchg
lret
scas
scas
xchg
scas
cli
xchg
loop
outsl
cltd
mulps
cmp
fisttpl
dec
icebp
cmpsl
ja
fistpl
push
xchg
xor
stos
pop
inc
add
arpl
jnp
es
sbb
dec
fcmovnu
push
inc
adc
xchg
into
jmp
sbb
and
nop
loopne
mov
jle
int
push
push
lcall
idivb
imul
xorl
push
out
das
or
sbb
lret
shll
ja
xchg
stos
fnstenv
data16
push
jns
push
int3
mov
in
push
mov
cmp
sub
sbb
call
lods
imul
clc
ret
and
cmc
jecxz
or
inc
sub
and
mov
mov
outsb
aaa
rolb
out
xchg
shll
add
and
lock
fxch
dec
out
xor
jg
or
clc
notl
mov
lret
mov
push
mov
sub
add
scas
aad
mov
mov
mov
daa
cltd
sub
adc
lret
jmp
jge
and
fisubs
mov
xchg
shrl
jb
sbb
inc
jb
dec
data16
mov
xorb
xchg
inc
lret
sub
xchg
pop
push
pushf
inc
jecxz
push
pop
aaa
ss
and
xchg
fbstp
data16
mov
push
fcmove
mov
push
cmp
jo
jne
aam
xor
inc
insl
pop
push
fistpll
pop
xchg
lret
pushf
push
bound
or
mov
dec
and
aas
cwtl
jp
push
fmull
sti
sub
outsb
xchg
pop
cs
sbb
mov
mov
data16
jnp
push
dec
cs
jb
and
lcall
inc
mov
sub
mov
pop
push
pop
mov
pop
cmp
cmp
ljmp
outsb
ffreep
sbb
loop
jbe
jle
pop
push
push
arpl
lods
cmpsl
and
sub
rolb
daa
aaa
mov
push
mov
bound
fnstenv
inc
insb
inc
pusha
pop
dec
mov
cmc
and
cmpsb
insb
add
xor
out
cmp
sbb
xlat
cmp
dec
mov
fbld
arpl
mov
mov
inc
fisubrs
in
mov
dec
sbb
xchg
iret
xor
mov
inc
pop
adc
ds
fbstp
sti
sti
mov
push
xchg
cmp
jnp
and
stos
add
sub
mov
std
xchg
pop
mov
push
mov
mov
add
shlb
inc
sbb
pop
sub
adc
adc
outsb
push
daa
cmp
sub
cmpsb
and
stos
andl
sti
test
stos
sub
adc
xchg
int
stc
mov
mov
pop
mov
loop
in
push
push
lea
cmovg
or
int3
xor
cmp
adc
int3
jmp
cwtl
mov
sub
flds
xor
cmp
xor
cwtl
gs
mov
pop
add
fdivrl
jp
lock
mov
sbb
add
mov
clc
xor
mov
sub
pop
jo
or
dec
xor
jb
mov
outsb
mov
add
add
ja
cmp
stc
mov
in
add
adc
incl
mov
xor
out
sti
gs
stos
in
call
pop
mov
sub
adc
jb
pop
je
mov
das
mov
dec
popf
lds
aaa
xchg
adcl
sub
stos
mov
sbb
xor
sub
and
mov
mov
sub
xor
sbb
lods
ljmp
lods
out
lock
push
ror
rcrb
outsl
addr16
and
adc
sub
cmc
ret
arpl
xor
loop
enter
dec
enter
mov
insb
mov
and
dec
cmp
push
mov
xor
cmp
sub
out
pop
outsl
jecxz
dec
or
lcall
into
test
scas
cmp
jb
scas
repz
cwtl
sub
idivl
xor
sbb
xor
and
jg
ret
mov
pop
xor
dec
sub
dec
dec
addr16
sub
add
jmp
adc
jge
outsb
inc
loopne
mov
inc
outsb
inc
pop
mov
lahf
pushf
std
mov
aam
add
call
insb
push
mov
imull
xor
xor
and
mov
arpl
shrb
jmp
pusha
int
jne
ljmp
pop
push
lods
es
mov
or
inc
add
nop
scas
rcrl
fsub
sbb
shld
xchg
pop
loop
js
push
pop
and
stos
jbe
pushf
mov
iret
xchg
pop
fcoms
arpl
loop
fs
and
fisttps
in
xchg
add
scas
mov
in
mov
pop
sbb
mov
push
inc
cmpsb
fstpt
std
stos
mov
jne
repnz
mov
sub
leave
scas
ret
cmp
jg
inc
scas
rorb
xor
jne
mov
addb
mov
imul
fidivs
fs
scas
sub
cli
insb
out
mov
out
mov
cwtl
xchg
xor
jno
addr16
mov
clc
sub
add
lret
xor
fwait
andb
sbb
lahf
mov
xchg
ret
mov
in
dec
inc
cs
adc
or
dec
jns
mov
pop
cmpsb
test
scas
pop
sbb
adc
rcl
nop
cmp
pop
jo
test
xor
addb
lret
outsl
xlat
insl
jns
aad
dec
out
iret
outsl
test
sbb
pop
mov
mov
cltd
push
nop
sti
inc
fdivrl
mov
or
aad
call
mov
push
inc
lcall
rolb
cs
testb
je
insb
outsl
sti
mov
sbb
movsl
push
fwait
aam
outsb
mov
arpl
repnz
or
mov
jb
mov
mov
jno
jns
sub
and
pop
pop
subl
sbb
call
inc
loope
div
cmp
fstl
popa
xchg
scas
fstpt
int3
push
jmp
push
sbb
pop
iret
decb
cmpsb
lcall
imul
icebp
test
out
adc
int
dec
push
out
fs
cmp
leave
xchg
dec
lds
scas
mov
out
adc
sbb
leave
xchg
jnp
cli
push
fdivl
add
cmc
mov
leave
add
mov
xlat
iret
sti
decl
add
jl
dec
enter
and
movsl
loop
mov
xchg
and
add
scas
or
mov
mov
pop
imul
cmp
mov
loopne
testb
daa
cmp
jne
adc
loope
cwtl
cmpsl
and
jbe
xor
stos
aam
dec
sbb
stos
xchg
push
add
xlat
stos
jno
imul
enter
push
aaa
pop
clc
pop
jl
popf
xor
in
dec
xor
mov
fisttpl
push
mov
stc
daa
call
pop
dec
imul
sti
repnz
fildl
pop
nop
cmp
sub
or
jg
sti
test
pop
inc
frstor
or
dec
sbb
dec
mov
push
and
lret
xor
xor
mov
sbb
fisubs
xor
lods
mov
xor
pop
and
mov
mov
pop
or
xchg
pop
inc
mov
out
clc
push
dec
je
mov
mov
mov
int
xchg
idivl
sti
mov
loope
or
and
movsb
xchg
in
outsb
pop
xor
pop
xchg
leave
or
pop
pop
push
fsubr
or
jp
stc
loope
and
xor
es
sub
add
add
sbb
cmc
int3
sub
mov
mov
xchg
cmp
mov
imul
arpl
sub
sbb
sub
pop
or
ljmp
push
xor
hlt
subb
mov
and
jo
insb
mov
scas
in
inc
imull
mov
aam
and
or
sub
and
bound
cmpsl
pop
les
imull
jae
xchg
repnz
imul
popf
outsb
mov
pop
jne
sti
dec
push
mov
rcrl
pusha
aas
fnstenv
jb
mov
mov
cmpsb
lock
dec
mov
pop
scas
sbb
dec
outsl
jmp
inc
push
jne
cmp
or
push
test
inc
mov
fwait
cmp
push
pop
addr16
jecxz
lea
sahf
cltd
pop
and
mov
gs
adc
pop
fcmovnu
cmp
inc
sti
out
jne
dec
in
mov
push
int3
mov
sub
sub
push
sbb
icebp
popa
cmp
and
add
test
cltd
popa
mov
aas
clc
lret
push
jno
cmp
adcl
mov
add
adc
push
leave
mov
cmp
push
insl
ret
sbb
nop
cli
mov
ss
enter
test
test
in
fbstp
lcall
cmp
push
lahf
cltd
push
xor
idivl
leave
xchg
pop
testb
mov
adc
adc
sub
mov
jmp
test
pop
jge
or
rep
sar
mov
xor
sbb
jp
sub
lret
jp
push
lods
outsl
stos
hlt
shlb
leave
jb
fidivs
cwtl
aad
cwtl
fwait
jg
sub
mov
aaa
into
popf
jmp
cld
or
subl
iret
shrl
ret
dec
and
adc
inc
inc
outsl
adc
mov
pop
and
sbb
inc
les
dec
or
aam
lcall
lahf
roll
ds
add
outsb
jo
push
ljmp
xchg
sbb
xchg
cs
and
and
jp
adc
adc
mov
pop
je
insb
imul
or
jo
xchg
sbb
in
scas
jle
mov
ja
pop
enter
add
adc
outsb
mov
movsl
sahf
sub
flds
mov
sub
push
jbe
test
jnp
and
cmp
je
mov
sbb
add
scas
aas
sub
inc
fldl
call
push
or
mov
jno
pop
dec
sbb
lcall
push
pop
add
sbb
jne
sbb
test
push
push
sbb
fs
idivb
movsl
sub
pop
iret
adc
test
cmp
dec
sarb
mov
shlb
dec
sbb
fldt
push
pop
bound
rorb
in
jb
and
nop
pushf
sub
adc
scas
inc
out
cmp
sbb
ja
sahf
dec
sub
sbb
daa
cld
mov
cld
nop
dec
xlat
adc
sahf
loop
pop
gs
push
xchg
mov
insb
sub
and
mov
xor
lahf
add
fnstsw
cmc
test
mov
es
ds
or
pop
or
popa
and
call
outsl
mov
pop
cld
adc
mov
mov
and
fs
shrb
psubd
negl
sti
xorl
fcom
pop
cmpsl
gs
dec
hlt
sub
jae
nop
xor
mov
or
nop
jae
jmp
pop
xor
lret
sub
pop
in
movsb
dec
inc
lahf
bndstx
push
bswap
mov
inc
pop
dec
fwait
sub
inc
pop
mov
sbb
jae
cmc
mov
mov
icebp
aam
test
rorb
aas
popa
int
mov
loopne
jb
sub
jge
aam
movsb
xchg
or
push
xor
sbb
movsl
stc
hlt
inc
lret
lret
idiv
roll
mov
fwait
in
mov
pusha
sti
inc
cmp
inc
add
dec
jmp
add
les
loopne
push
sub
sub
add
lea
call
les
and
xchg
mov
int3
jle
push
mov
ss
call
int3
popf
bound
xor
mov
push
lods
jl
cmp
adc
loopne
adc
aam
jmp
mov
rolb
jns
rclb
stc
je
sub
aas
jnp
es
fldcw
mov
clc
cmp
cs
xchg
adc
lret
stos
jge
rorb
nop
int3
addl
mov
pop
cwtl
cmpsl
leave
jmp
lods
jg
enter
add
or
push
push
mov
fsubr
inc
jp
xchg
mov
pusha
aam
xchg
orl
ja
dec
arpl
shlb
xchg
test
mov
mov
idivl
mov
int
mov
mov
ja
pop
addr16
repz
fldcw
jecxz
and
add
pop
pop
jbe
cmc
aaa
cmp
int3
jmp
mov
test
xor
pop
cmc
in
cld
outsl
cli
jbe
test
repz
repz
enter
or
mov
lret
das
iret
xchg
insl
repnz
pusha
mov
and
jle
pop
sbb
leave
push
data16
xchg
inc
js
push
pop
jmp
ficoml
xchg
sarw
inc
imul
stc
ret
mov
clc
mov
in
call
inc
xchg
mov
jmp
imul
adcb
jg
idivb
mov
fsubr
jle
adc
sub
ds
adcb
sbb
mov
or
inc
mov
dec
add
aad
add
pop
daa
mov
fwait
ss
insb
cmpsl
jg
push
popa
daa
stos
test
cmp
mov
mov
mov
insl
bound
into
mov
jbe
mov
ret
dec
add
js
sub
mov
adc
cmp
out
push
data16
cmp
sub
mov
int
cmpsb
loop
test
push
sub
adc
call
cmc
inc
adc
mov
add
or
pop
rcr
or
fwait
lret
xchg
push
jmp
ds
push
cwtl
addr16
jne
jns
addr16
mov
cmpsl
xor
pop
lret
xchg
sub
aad
lock
stc
and
dec
addb
mov
insl
push
add
imul
fisttpl
mov
or
bound
jno
or
cmp
shll
dec
push
push
hlt
data16
sub
enter
pop
xor
sbb
je
jle
popfw
adc
insb
icebp
pop
repz
and
rcrb
push
cwtl
mov
xor
imul
or
movsl
adc
mov
push
ret
push
or
adc
shl
pop
sbb
ret
sbb
mov
sbb
addb
mov
xchg
and
pop
or
and
xchg
dec
jmp
mov
xchg
push
ret
xchg
insl
arpl
fs
fcmovnbe
or
jecxz
shlb
or
leave
repz
data16
fisubrs
movsb
dec
mov
iret
inc
rcrb
adc
aad
fdiv
in
pop
jbe
sahf
inc
dec
cmp
mov
jmp
sbb
push
das
imul
xor
xor
and
lods
adc
xor
das
mov
stc
sbb
dec
notl
pushf
notb
shrl
xor
mov
sub
dec
sub
cmpl
aaa
call
dec
je
int
lahf
imul
inc
int
and
lea
push
or
cltd
add
sbb
aam
xchg
popa
and
movsb
je
push
arpl
in
call
xlat
push
adc
mov
cmp
sbb
push
fcomip
mov
addb
or
mov
out
add
ljmp
arpl
sub
pop
sbb
mov
push
cmp
mov
jae
mov
pop
clc
or
rorl
repnz
push
xor
add
xchg
xor
fisubrl
add
mov
xchg
out
xchg
push
sahf
ja
addr16
fadd
xchg
pop
pusha
push
loop
cld
push
fsubrl
mov
cmp
jnp
orl
or
fiaddl
or
mov
sub
dec
or
imul
test
imul
repnz
jo
xchg
sbb
rol
jp
orl
sub
jmp
mov
push
inc
popa
add
dec
push
cmp
clc
stos
or
jp
aam
mov
jbe
xchg
test
scas
daa
aam
mov
xchg
sub
adc
popf
cmp
add
adc
dec
test
dec
ficompl
push
mov
push
push
loop
xchg
in
cld
xor
adc
in
sub
pop
jnp
xchg
sarl
outsb
xor
imul
cmp
xchg
rcr
push
xorl
or
fiaddl
pop
sub
dec
ja
daa
rcl
jnp
sbb
pop
add
push
outsl
bound
pusha
sbb
out
jecxz
mov
bound
sbb
hlt
sbb
push
dec
push
pop
iret
addb
mov
mov
adc
scas
dec
roll
movb
xchg
out
mov
jl
iret
jp
inc
std
das
iret
dec
mov
jns
xchg
mov
adc
add
xor
sub
je
int
pop
jle
mov
out
pop
inc
repnz
pop
mov
and
movsb
add
xchg
sub
dec
jo
test
or
sbb
scas
or
sbb
out
out
lods
repz
xor
pop
mov
push
aaa
xor
cmc
std
sub
mov
in
inc
jnp
ja
dec
inc
xchg
or
enter
inc
iret
rorb
rclb
pop
inc
sub
test
lock
add
outsl
rorl
mov
inc
insb
jmp
and
test
lret
das
push
mov
ja
cwtl
jmp
loope
sahf
mov
and
xorl
je
roll
add
in
mov
mov
stos
cmp
arpl
inc
in
ds
popa
loopne
adc
aas
cmp
mov
test
enter
test
pop
and
mov
xchg
cmc
movsl
or
test
pop
or
add
mov
test
mov
into
mov
int3
loopne
mov
adc
sub
ja
mov
movsb
loope
loope
cltd
sbb
xor
mov
daa
pop
popf
cs
insb
mov
xor
jmp
mov
ret
or
loop
stc
addr16
aaa
jmp
and
int3
test
pop
movsl
or
add
ljmp
add
std
inc
pop
or
sub
adc
add
and
icebp
es
dec
ret
mov
and
shlb
loop
iret
outsb
pop
mov
dec
jmp
cli
lds
mov
sub
lds
dec
add
clc
cmp
sbb
xchg
push
in
mov
and
xor
std
orb
aam
push
fisttps
mov
inc
shrl
popf
popa
cmp
lahf
loope
insb
out
push
addr16
add
or
test
pop
pop
mov
pop
jl
inc
inc
insb
xchg
lcall
cmp
arpl
lea
xchg
jnp
adc
aam
cmp
fstps
mov
leave
fadd
and
movsl
cmp
data16
xor
std
or
stc
roll
lods
addr16
dec
add
xchg
adc
pop
fidivrl
add
pop
mov
fidivrl
mov
ret
in
ss
mov
push
xor
add
stos
icebp
pushf
xchg
repz
jmp
ret
rcl
aad
push
pop
mov
insb
in
notb
or
es
sahf
jo
mov
jecxz
jge
call
leave
jnp
addb
push
add
xor
and
mov
jno
push
icebp
inc
test
mov
xchg
jae
push
mov
jecxz
and
cmp
mov
hlt
jb
jl
into
cmpb
int3
xchg
enter
mov
test
or
add
popf
repz
movsl
jecxz
mov
mov
push
inc
mov
inc
bound
adc
dec
dec
popf
mov
mov
sbb
push
lods
notb
loopne
mov
and
ficompl
jle
orb
ret
mov
jp,pt
sbb
cmp
in
test
lock
or
sub
pusha
jno
ja
mov
arpl
adc
sub
xchg
loop
test
rcll
ret
push
ret
lods
sbb
jnp
out
fcmovnb
pop
jg
clc
push
mov
jle
xchg
inc
lret
mov
fsubl
and
test
mov
jl
xchg
arpl
push
mov
inc
lcall
lahf
lods
push
movsb
fists
mov
fildll
and
pop
push
test
push
cmp
mov
sub
loop
inc
sub
push
rorb
movsl
push
mov
mov
fnstsw
mov
push
les
inc
xchg
sbb
mov
popa
cmp
icebp
mov
sbb
fbld
dec
js
inc
sbb
ljmp
cltd
mov
jns
mov
pop
hlt
notl
jp
lret
cli
sarb
aaa
fcmovbe
fldl
enter
fs
mull
mov
mov
add
mov
and
shl
es
cmp
jns
cmp
sbbb
mov
add
scas
es
es
sub
icebp
jae
mov
sbb
pop
out
push
aad
cltd
push
xchg
and
jno
push
mov
push
adc
sbb
pop
or
or
sbb
or
dec
inc
xor
bound
daa
inc
out
xorl
inc
inc
jge
cmp
test
cmp
sbb
test
pop
negb
add
dec
dec
rorb
push
mov
mov
pop
loop
xchg
dec
cmpsb
add
sbb
arpl
in
sbb
jl
push
and
mov
sbb
xor
lea
cli
jns
push
addb
xchg
nop
fadd
mov
xor
insl
jbe
icebp
outsb
push
pusha
xchg
call
add
sbb
jl
fistpl
push
in
pushf
mov
mov
or
jae
or
shll
xchg
pop
loope
push
popa
mov
jle
shrb
push
fsubl
fisubl
into
dec
or
mov
test
jl
and
call
repnz
imulb
icebp
pop
mov
sbb
jmp
sub
cmp
shrl
mov
inc
js
mov
xchg
sub
repz
pushf
mov
cltd
imul
jo
jae
mov
cmp
sahf
or
ss
sahf
idivl
arpl
ret
mov
andl
into
ja
int3
mov
mov
pop
mov
mov
sbb
xchg
xacquire
push
lret
shll
into
movsl
into
ds
adc
movsb
fisubrl
inc
add
mov
jbe
int3
pop
push
das
popa
dec
movsl
fs
push
xchg
insl
mov
outsb
pop
outsb
into
out
pop
aad
mov
stos
lret
pop
inc
sbb
pushf
aaa
pop
and
jb
jno
addr16
pop
pop
xchg
add
lahf
out
sbb
mov
push
cmc
and
add
or
stc
inc
in
xchg
jbe
sahf
push
jle
push
add
je
or
shl
inc
mov
jmp
clc
mov
push
addr16
mov
stc
movsl
xor
pushf
jmp
add
jo
sbb
sub
push
cld
sbb
gs
and
push
mov
imul
pop
mov
icebp
and
out
xchg
loop
fwait
mov
dec
sbb
sbb
mov
and
imul
test
in
dec
push
in
xor
stc
jle
jmpw
mov
pop
xlat
mov
into
out
int
add
outsb
ret
sbb
mov
scas
in
ds
sub
adcb
jge
ljmp
iret
dec
lahf
mov
pop
xorl
cmpsb
out
xor
cmc
test
jg
adc
adc
insb
xchg
scas
cld
xchg
mov
add
cli
adc
lret
mov
add
xor
jae
shl
xor
mov
xor
and
shll
mov
call
cmpsb
mov
inc
inc
rclb
or
stos
inc
outsl
xor
out
cli
int3
sti
bound
fmuls
pop
ret
sub
stos
or
jo
ss
jp
inc
add
popf
xchg
mov
out
outsb
or
cmc
insb
mov
mov
cmpsb
ljmp
mov
push
xchg
adc
repz
mov
mov
cmpsb
push
mov
and
dec
mov
ljmp
mov
sub
jo
lods
jl
sub
push
stos
lods
popf
mov
push
cmpsl
jecxz
jo
add
ret
imul
or
scas
cli
pop
rcrl
arpl
std
dec
lods
and
pop
dec
cwtl
cltd
cli
pop
inc
pop
add
scas
mov
ja
addr16
adc
verr
add
pop
push
std
pusha
xchg
mov
add
out
fcmovne
stos
sbb
mov
pop
addr16
push
jns
insb
je
lcall
aad
leave
mov
and
in
mov
test
sbb
push
lock
rcr
jb
xor
mov
jge
fsubrp
or
mov
fmuls
sbb
pop
push
ljmp
or
mov
aad
pop
dec
out
pop
mov
push
push
inc
imul
mov
bound
popf
mov
mov
in
daa
adc
xchg
push
cli
pop
fistps
xchg
pop
add
insl
cs
xchg
iret
add
shrl
cmp
inc
or
jbe
rolb
test
arpl
pop
cli
jmp
xor
xchg
xchg
pop
imul
and
push
add
js
cmp
lods
inc
lock
mov
sti
jge
mov
aam
pop
cmp
in
sti
add
and
adc
mov
and
jg
inc
ror
pop
das
jge
jne
fnstenv
sub
insb
sarb
or
and
and
je
sbb
orb
xchg
mov
or
push
push
jg
xchg
clc
scas
pop
push
mov
add
std
rcr
mov
adc
test
cld
or
bound
stc
sub
popa
cmp
sub
les
insl
mov
and
jnp
enter
test
and
subl
call
sbb
loope
outsl
fldcw
sbb
sub
mov
ja
outsl
xchg
sahf
mov
mov
or
fldcw
out
jns
popf
cld
mov
push
push
movsb
jo
pop
mov
repz
pop
loopne
das
scas
pop
dec
popa
addr16
mov
lret
scas
aaa
sbb
dec
xchg
scas
in
add
mov
popf
fisubrs
iret
out
mov
mov
js
fyl2xp1
xchg
cmp
ret
mov
add
mov
data16
mov
jo
jg
inc
mov
xor
ret
aas
cld
loop
lret
mov
dec
imul
int
mov
xchg
mov
cmp
push
out
std
pop
lret
mov
pop
in
sub
xchg
daa
out
dec
stos
es
add
lea
pop
fldenv
lock
rorl
sub
stos
sub
test
sub
les
jb
push
push
addr16
loopne
cld
lahf
xlat
sbbb
xor
mov
dec
cmp
out
adc
shl
jecxz
or
sbb
cmp
sub
push
shrb
jno
jne
add
loope
insb
ss
andb
dec
int
ds
cltd
adc
push
mov
insl
jne
out
rol
pop
lret
mov
dec
inc
lea
bound
mov
xchg
cmp
inc
mov
ja
adc
dec
xor
xchg
jno
xlat
sar
pop
xlat
mov
push
dec
roll
fmull
scas
pop
jecxz
mov
cmc
mov
fs
scas
or
rcr
repz
movntps
pushf
repz
ds
fwait
push
daa
jbe
fisubl
in
push
pop
add
mov
push
es
pop
lock
iret
jge
mov
shlb
jg
imul
add
test
xchg
push
enter
jne
mov
ret
out
lock
fdivl
fstl
pop
mov
mov
in
adc
out
ret
data16
mov
inc
xchg
pushf
mov
das
xor
dec
dec
js
js
test
lock
pop
adc
sarl
in
pop
outsb
insl
mov
pop
jo
mov
in
fucomip
andl
sbbl
cltd
fldcw
mov
dec
jp
pop
dec
inc
enter
lret
sub
inc
sbb
mov
inc
outsb
xchg
ret
inc
popf
pop
paddusw
inc
push
jo
pop
jb
inc
and
mov
mov
jb
jns
add
push
icebp
or
push
fimull
pop
dec
scas
stc
cli
loope
fwait
out
sbb
pop
data16
enter
mov
xor
or
cmc
out
pop
cli
add
xchg
jl
testb
pop
add
adc
loope
xchg
stc
add
scas
bound
adc
jno
cmp
jl
jae
fbstp
inc
fst
test
cmp
mov
pop
fucomi
mov
mov
cmc
popa
jns
pop
or
cmpsl
push
mov
and
sub
dec
dec
dec
insb
stos
adc
scas
sub
push
cltd
mov
sub
in
xor
add
loope
jl
hlt
fildll
push
dec
fcomps
lahf
daa
xchg
sbb
and
es
sarl
cs
int3
sbb
ljmp
cs
aas
cmpsl
xchg
shufps
push
clc
aaa
ljmp
aaa
loopne
enter
out
ficompl
mov
pop
rorl
xor
cmpsl
out
popa
gs
xor
xchg
mov
out
addr16
aaa
fs
push
pop
cmp
adcl
inc
xorl
sahf
pop
pop
out
mov
cmc
in
push
lea
pop
push
imul
pop
xor
sbb
mov
jne
sbb
imul
xor
push
mov
test
hlt
push
mov
mov
dec
add
xor
pop
ja
add
pop
cmp
dec
xchg
inc
xor
ja
or
daa
xchg
test
and
ret
push
lret
sub
frstor
lock
clc
lcall
fnstenv
repnz
cli
das
repz
push
mov
mov
sub
out
lods
or
dec
lret
jmp
lds
push
inc
mov
pop
lcall
xchg
lahf
iret
inc
dec
imull
je
pusha
sbb
jnp
cltd
sub
pop
or
fnstenv
pop
pop
jbe
mov
lea
push
dec
sarb
inc
dec
pop
adc
js
mov
cmp
xor
jo
loope
popf
lea
test
and
and
les
push
aam
inc
push
ret
push
andps
jp
stc
xor
lds
lock
daa
mov
movsl
jmp
or
outsl
sub
push
movl
add
xchg
fistpll
stc
cwtl
sti
lcall
shlb
jnp
push
xor
sub
nop
mov
sub
inc
and
pop
loope
jle
pusha
mov
sub
ss
xchg
repnz
imul
fsub
incl
mov
leave
imul
icebp
mov
pop
lock
and
stos
jno
xchg
ss
fs
mov
aas
inc
fdivs
imul
cmp
push
aad
xor
mov
ss
mov
add
cmp
dec
data16
imul
add
and
adc
test
fcmove
jno
or
dec
fcmovu
xchg
lock
push
mov
push
mov
inc
loopne
icebp
lods
iret
addr16
jae
movsb
rolb
cmp
cltd
leave
mov
mov
scas
sarb
sub
cwtl
stos
lds
adc
or
ljmp
or
fsubrl
out
mov
inc
out
fcmovb
imul
push
mov
cmp
lcall
sbb
and
leave
cmpsl
popa
subb
cwtl
test
cmp
in
and
ds
mov
dec
dec
bound
loop
jb
int
mov
xor
imull
pusha
fidivrs
xorl
int3
xor
xchg
fisubl
and
jge
cwtl
cmp
idiv
or
push
add
in
cwtl
js
sub
xchg
mov
inc
mov
jecxz
xor
cs
in
loopne
int
in
imul
je
cltd
cmp
sub
or
jo
fdivrl
add
add
pop
push
imul
loope
call
out
mov
push
ret
movsl
fcoml
mov
insl
mov
inc
adc
lret
test
and
fdivs
pop
adc
push
stc
sbb
adc
loope
shrb
sub
and
dec
jb
mov
repnz
xor
jnp
repnz
push
scas
or
adc
sub
mov
add
bound
jmp
mov
xchg
into
ss
aam
stos
out
jb
pop
push
mov
popa
xchg
pop
sbb
or
lea
cmpsl
loop
inc
daa
pushf
add
pop
mov
cwtd
and
fsubl
call
sti
inc
enter
aam
imul
int3
mov
arpl
pop
fimull
or
sub
into
sbb
push
movl
sbb
push
cmp
aad
outsl
loopne
jge
jle
std
dec
mov
ret
iret
jmp
fadd
xor
out
int3
test
lock
adc
pop
das
and
popa
push
fldt
test
shlb
mov
hlt
mov
dec
cmc
movsb
ss
mov
pop
sbb
rclb
lret
xchg
iret
push
movsb
in
test
inc
cmpsl
dec
imul
mov
or
cld
xor
sahf
add
bound
lret
mov
xchg
es
into
movsl
inc
in
cmp
addb
mov
adc
orb
pop
push
test
hlt
and
addr16
add
and
in
cmpsb
icebp
addr16
imul
out
sub
test
sahf
ret
xor
jl
roll
push
sub
and
test
iret
jecxz
sub
leave
imul
mov
dec
sarl
push
inc
lcall
test
pop
add
push
mov
sbb
jle
addr16
int
iret
mov
pop
sbb
in
dec
add
adcl
add
sub
xor
out
scas
hlt
lods
lea
lods
inc
or
test
aaa
fnsave
scas
out
sbb
fiadds
jnp
aas
pop
xchg
fisttpl
mov
idiv
xchg
push
xor
sbbl
lods
mov
dec
add
jnp
fnstcw
aaa
hlt
xchg
shll
stc
lods
cld
pop
out
lods
sahf
or
mov
add
push
jo
mov
js
add
into
aad
mov
pop
out
mov
ja
cmpsl
lret
out
xchg
jno
aam
xchg
aad
repnz
pop
push
adc
in
mov
adc
cmpsb
mov
or
push
ret
xchg
mov
ret
call
fstpt
or
sub
xchg
jns
add
arpl
dec
je
sub
stos
cmc
shrb
push
rclb
nop
int3
mov
push
sub
xor
popf
push
scas
or
popa
lret
xchg
mov
lahf
data16
arpl
push
jl
xor
cs
fwait
lret
mov
xchg
out
stos
dec
xor
xor
jb
push
pop
mov
outsb
inc
incb
cmpsb
ja
in
jo
fstl
push
fisubrl
xlat
popa
xor
cwtl
jb
pop
popa
and
popa
mov
xor
and
mov
mov
cmp
adc
jae
rcrl
into
test
sbb
fwait
insl
jmp
incl
cmpsb
cmpsl
data16
fcomp
dec
sbb
pmuludq
lods
add
and
inc
jns
jno
movsl
lret
mov
mov
paddw
mov
inc
push
scas
outsl
rcrb
fwait
enter
imul
push
sbb
add
nop
mov
out
sbb
mov
xorb
rolb
jg
inc
xchg
adc
sbb
dec
nop
rcr
in
cltd
jbe
adc
outsb
jp
jg
mov
cmp
adc
mov
mov
cs
mov
imul
nop
std
pop
jbe
mov
adc
xor
lcall
aas
je
rorb
fistl
jge
outsl
xchg
repnz
stos
sti
ds
sbb
sub
push
roll
in
sub
arpl
xchg
xorb
cmpsl
jmp
mov
insb
out
mov
pop
mov
repnz
push
rolb
xchg
inc
addb
pop
out
push
jnp
scas
negl
xor
cmpsl
and
lods
ja
push
dec
addr16
xor
pushf
xchg
or
pop
mov
adc
adc
inc
cmc
mov
push
out
fbld
jae
and
sub
cmpsb
push
mov
mov
jns
mov
mov
cmpsl
sub
inc
jle
jp
dec
loope
sub
mov
pusha
out
push
or
call
fcomps
lret
lds
out
cli
rol
lea
add
pop
dec
incl
xchg
push
and
mov
arpl
fsubl
daa
jae
scas
jnp
or
sbb
ljmp
pusha
sub
stc
push
push
inc
je
xor
aas
sub
outsb
fisubl
dec
rol
sbb
cmpsb
mov
pop
imul
pop
sti
cmp
lret
push
cmp
hlt
cmp
loope
push
daa
fxch
jae
mov
push
mov
stc
enter
addr16
cmp
sbb
je
repnz
mov
add
or
nop
cmpsb
inc
scas
lcall
int3
gs
dec
pushf
cmp
mov
fistps
dec
repnz
xor
mov
fcoml
cmp
ss
stc
push
cmpsb
push
or
nop
mov
jge
cltd
in
clc
imul
loop
push
mov
das
rcr
fbld
in
push
lret
sbbl
aas
inc
out
aas
out
jmp
arpl
popf
icebp
cli
mov
mov
inc
push
or
mov
mov
cmp
and
xor
sti
mov
xchg
mov
xchg
push
inc
cmp
hlt
inc
sub
in
add
fucomi
enter
outsl
ja
rclb
ss
in
js
and
shlb
mov
in
fcoms
mov
mov
lret
pop
sti
les
push
adc
mov
sbb
push
xchg
outsl
popf
xor
leave
pushf
pop
jecxz
jne
mov
push
and
cwtl
mov
add
xlat
add
cld
adc
xor
bnd
pop
mov
call
nop
lea
test
cmpsb
outsl
jp
and
pop
mov
sbb
ljmp
add
test
inc
and
incl
jae
push
lock
adc
mov
xor
and
inc
push
mov
cli
mov
neg
mov
out
inc
fs
mov
sbb
icebp
cmp
add
sahf
stos
and
inc
xchg
mov
jns
outsb
pop
leave
mov
imul
jo
jnp
xlat
sbb
sbb
aas
movsl
sbb
fidivrl
ds
xchg
shll
scas
dec
and
cs
xchg
mov
xchg
loop
mov
sub
cmp
aaa
mov
jae
push
xchg
sub
bound
xchg
adc
pop
int
ds
js
daa
jmp
int3
adc
adc
icebp
xchg
loop
or
xor
push
mov
ficomps
mov
mov
hlt
outsl
xorb
jmp
enter
ja
sub
add
sub
sbb
lret
push
ss
cmp
push
sub
movsl
icebp
les
scas
dec
xor
cli
test
or
sbb
scas
mov
das
mov
mov
sub
xchg
mov
jecxz
loop
cltd
test
pop
jecxz
cmp
lock
cwtl
sub
cld
data16
stos
jns
mov
push
into
dec
pusha
mov
pushf
imul
xor
add
std
in
test
inc
jecxz
mull
cltd
out
cli
sub
xchg
xor
adc
xchg
inc
dec
push
insl
fcoms
xor
dec
ficoms
mov
xor
xchg
loop
lahf
sbb
jmp
push
mov
sub
cmc
and
sbb
pusha
ja
call
in
movsl
and
cld
repnz
jnp
in
imul
ja
xor
fcomp
or
iret
xor
or
or
ds
lds
sbb
jbe
xor
mov
fcmovb
jae
fs
or
mov
leave
aad
push
push
pushf
iret
outsb
adc
or
jbe
lcall
aad
cwtl
test
fadd
xlat
lods
outsl
push
jmp
bound
ret
fsubs
je
mov
add
out
jnp
add
icebp
in
xchg
insb
mov
jne
js
jle
sub
xor
and
mov
mov
jg
sub
mov
jnp
xor
inc
sub
shl
push
pop
movsb
arpl
xchg
adc
daa
mov
xchg
jg
in
push
sub
subl
mov
cmp
mov
rolb
cmpsb
in
fstl
push
jbe
lds
sub
andb
enter
push
shll
hlt
aaa
imul
scas
sti
test
mov
cmp
clc
dec
mov
and
cld
imul
adc
movsb
aam
sub
push
cmp
jle
mov
or
push
push
jecxz
shl
mov
mov
stos
subb
das
dec
mov
xchg
popw
or
loop
lcall
pop
mov
xor
sbb
or
sbb
lret
mov
jmp
jl
sub
gs
movsb
js
jns
rcrl
add
and
xchg
cmc
mov
loopne
pop
jmp
data16
dec
mov
or
daa
push
fwait
cld
sbb
inc
xchg
sub
mov
imul
ret
inc
mov
pop
cld
push
adc
jle
in
jp
bnd
dec
jl
push
jl
or
fisubrl
dec
sbb
fs
cwtl
jns
sub
imul
arpl
mov
rcrl
xchg
add
shlb
cmp
test
inc
add
xchg
cltd
add
mov
mov
jae
dec
push
sbb
js
arpl
adc
lret
sbb
nop
addb
push
lods
leave
into
repz
sbb
jge
vhaddps
jns
pop
jmp
dec
jge
nop
push
push
lods
das
lods
pop
cmpsb
clc
mov
sbb
mov
pop
inc
loope
dec
pand
aad
mov
ds
pop
inc
dec
pusha
rorb
aaa
lcall
ret
shlb
jmp
in
mov
jno
aad
push
stos
jo
hlt
mov
gs
mov
or
pop
mov
bound
adc
add
xchg
daa
inc
pop
and
pushf
daa
cmc
imul
insl
xchg
lret
jecxz
outsl
and
cmpsl
lods
ret
gs
xchg
mov
in
adc
push
out
mov
adc
jle
jge
push
lcall
ficoml
cli
xor
aas
cmp
icebp
sbb
repz
mov
inc
and
mov
xchg
gs
push
jnp
mov
or
ret
mov
adc
pop
data16
add
notb
lea
cmp
cld
pop
sbb
lds
dec
in
jb
pop
jnp
jne
mov
dec
test
dec
outsb
sar
mov
pop
inc
leave
sbb
adc
jl
jo
lds
sbb
pop
ja
enter
xor
jl
rorl
leave
mov
push
pop
jge
mov
xchg
int
cmp
es
outsb
dec
pop
mov
cmp
iret
test
pusha
xorl
in
push
gs
xchg
mov
sbb
cwtl
push
push
or
jmp
insl
push
imul
repz
pop
imul
pop
inc
sub
into
dec
inc
mov
cmp
mov
or
adc
sar
dec
out
imul
jmp
xor
lcall
xchg
pusha
movsb
ja
mov
sub
pusha
es
inc
xor
mov
push
cli
popf
ds
subb
dec
gs
aad
mov
fildl
inc
mov
es
push
shrl
pop
sbb
jle
jnp
mov
xchg
outsl
jno
cmp
inc
push
fmulp
sbb
outsl
pop
mov
cmp
xchg
mov
lcall
lds
arpl
fs
sarl
inc
add
imul
fiaddl
scas
icebp
ss
sub
movsl
sbb
cli
sti
lcall
je
gs
daa
and
test
imulb
in
and
aaa
mov
sahf
xchg
insl
dec
mov
and
mov
fmull
fcomps
fcmovnb
cmpsl
mov
push
and
sbbb
scas
and
or
push
popf
xchg
jmp
repnz
xor
or
lods
pop
cltd
test
mov
add
fistps
jo
sti
popf
jns,pn
mov
lcall
jne
ret
mov
lahf
push
push
call
mov
icebp
mov
bound
fdivl
shrb
enter
movsl
das
dec
cmp
imul
fmull
or
lods
and
jbe
push
repz
out
in
sarl
sub
aas
push
dec
cmc
xchg
imul
jae
dec
mov
jmp
ja
xchg
dec
push
in
add
rclb
iret
sub
pop
mov
fsubrp
mov
add
loop
adc
aam
pop
paddsb
lret
cmp
imul
add
mov
insb
add
push
insb
mov
inc
pop
aad
sbb
xchg
push
mov
mov
sbb
repnz
xchg
js
das
pop
adc
stos
je
push
mov
mov
pop
bound
push
cmp
xor
pop
inc
mov
add
add
sbbb
sbb
cld
pop
imul
int
ret
inc
cld
cltd
out
popf
mov
mov
dec
sbb
shll
punpckhwd
pusha
lret
into
push
xchg
dec
int
push
sbb
lcall
mov
imul
xchg
in
and
repnz
xchg
and
xchg
and
popa
pop
cltd
lods
push
xchg
aam
jbe
push
xchg
xor
in
and
stos
pop
push
loop
out
iret
mov
push
jecxz
hlt
mov
int3
cmp
mov
aas
je
aaa
xor
js
adc
cmp
or
push
adc
pop
cmp
js
mov
jl
cmp
jnp
ss
mov
in
mov
ret
cmp
jl
mov
and
ss
push
xchg
clc
xchg
fcoms
dec
pop
and
shrb
stos
enter
pxor
imull
xorb
stos
mov
inc
cld
decb
sub
jge
ja
jp
aam
sub
lret
cwtl
cli
xchg
push
outsl
test
rcr
mov
lret
sbb
push
mov
fldt
ss
mov
mov
fadd
sbb
adc
and
mov
mov
pop
outsb
mov
lea
inc
out
fcmovu
pop
and
out
insb
mov
stc
push
int
repnz
jg
int
lahf
xchg
pop
or
inc
or
stc
aam
test
ja
jne
mov
lods
inc
cld
ss
aaa
scas
test
fisttpl
sahf
xchg
mov
xor
jb
in
insl
cld
mov
xor
int3
sbb
cs
idivb
sbb
cli
or
push
jne
cmp
and
dec
xchg
aam
cmp
jae
sbb
jge
dec
jno
pop
out
sti
ret
jno
lret
negb
cmp
inc
mov
push
sbb
jbe
je
or
clc
fs
lock
loop
or
arpl
lret
pop
orl
mov
testl
in
jle
xchg
or
fistps
insl
loop
repz
jae
add
dec
mov
sbb
out
xor
cmc
arpl
fiadds
out
jb
add
mov
hlt
sbb
addr16
push
cli
das
js
lds
aas
test
pop
rorb
out
imul
push
xor
dec
xor
and
bound
sbb
fbld
enter
cmc
or
mov
jno
bound
cmp
adc
add
dec
jns
pop
dec
mov
fnstsw
jmp
and
fistl
cmp
mov
pop
fcomps
xor
pop
stos
add
mov
aam
add
and
or
adc
push
jg
in
pop
sbb
lods
push
loope
aaa
and
mov
inc
push
cmp
insb
sub
jbe
popa
pop
int
xchg
jnp
jns
div
mov
dec
jg
push
inc
jnp
pop
lock
mov
and
push
mov
xchg
inc
ss
dec
push
xchg
xchg
and
sti
mov
or
rcl
pop
mov
dec
add
xor
cmp
sbb
stos
mov
popf
pop
insb
mov
mov
lds
mov
mov
sahf
out
movsl
in
mov
jo
add
mov
jae
mov
cwtl
lret
or
std
jnp
pop
and
stos
fistl
push
jnp
test
xchg
sub
in
inc
sub
stc
push
idivl
test
cmp
pop
xchg
xor
jb
outsl
xchg
dec
sbb
call
repnz
pop
sti
cpuid
dec
fbld
outsb
push
or
cmc
and
jecxz
xor
mov
pushf
enter
mov
insl
cmpsl
or
fldl
aaa
stos
out
dec
mov
pop
push
orb
dec
push
call
and
adcl
cmc
adc
sbb
dec
sbb
mov
pop
push
clc
pop
pushf
jbe
imul
mov
adc
mov
sbb
mov
aad
push
inc
xor
fidivs
xlat
mov
decl
or
adc
negl
stos
nop
adc
xor
nop
add
cmc
jg
cmp
ljmp
pusha
jg
popa
xorl
sbb
sub
shlb
aam
int3
push
pop
out
lret
xchg
jbe
mov
dec
jmp
fdivs
push
adc
push
jne
out
jecxz
mov
xchg
in
xor
xchg
xchg
xor
adc
cmp
and
aad
call
adc
jp
int3
push
icebp
je
les
lcall
out
into
jns
mov
and
cmpsb
push
xchg
lahf
pop
daa
not
pushf
negl
push
and
inc
fsubrl
xor
xchg
pop
sub
or
dec
sub
inc
inc
cmpsb
pop
dec
push
cmpsl
jbe
inc
lds
mov
je
or
cmpsl
and
mov
sub
shlb
pop
push
sbb
cmp
ret
pop
xlat
inc
xlat
iret
sub
lcall
cmp
incl
int
lods
cwtl
cs
mov
pop
inc
dec
jle
or
mov
push
or
mov
pop
mov
inc
or
stos
cmp
sub
lods
stos
hlt
icebp
ja
dec
sarb
pop
sbb
xor
pop
jns
fdivp
dec
je
xchg
in
mov
rcr
xchg
mov
xchg
movsb
push
mov
rolb
fidivrs
cmpsl
in
loope
or
push
push
pushf
test
jno
push
dec
xchg
jno
cli
in
jne
xchg
fwait
sarl
cld
inc
jecxz
cmp
mov
scas
inc
mov
xchg
push
cmpsb
bound
insl
xor
pop
mov
pop
js
pop
xchg
fwait
cmp
int3
fwait
mov
jg
jbe
and
fistpl
incb
dec
mov
sub
sbb
push
xchg
cmc
cld
and
out
mov
mov
xor
sub
xor
xchg
ss
es
mov
lcall
mov
out
stc
dec
test
cmpsl
and
add
loope
lock
cmp
decb
out
cmp
test
xor
int
outsl
aaa
push
mov
or
fucomp
imul
cmp
gs
fwait
and
mov
push
pop
iret
or
js
mov
sub
cmpsl
jmp
addb
mov
in
into
lahf
jle
subb
push
push
daa
mov
or
sbb
call
es
jae
push
add
cmp
mov
mov
pop
or
mov
out
jne
mov
push
xchg
test
dec
jl
addps
test
pop
aas
fiadds
xchg
adc
imul
or
leave
lock
movsl
fiaddl
lods
pop
ljmp
sbb
test
negb
mov
push
adc
pop
xor
mov
jns
repnz
js
cmp
and
jae
cmp
jl
pusha
xor
push
sub
out
inc
nop
and
adcb
mov
inc
sub
fsubrs
daa
add
imul
dec
js
daa
fs
fcoms
adc
mov
js
sbb
and
pop
xchg
leave
or
sbb
movsb
push
or
les
adc
fdiv
push
xor
or
stos
xchg
inc
jl
daa
popf
push
mov
lods
xlat
vmwrite
xchg
inc
sbb
and
inc
mov
lret
stos
faddl
aas
ljmp
loope
ret
cwtl
cwtl
fmul
cmp
mov
ja
subb
push
mov
or
xchg
and
mov
sub
in
cmpb
das
iret
mov
or
js
sub
in
fbld
lds
nop
sbb
cmpsl
pop
mov
mov
mov
clc
daa
out
stos
fstp
repz
xor
inc
aaa
jg
popa
adc
inc
loope
xchg
out
pop
adc
pop
imul
pop
stc
inc
cmc
fiadds
lret
push
lods
bound
rol
pop
mov
mov
ds
pop
dec
fcomp
jbe
popf
mov
jns
and
arpl
out
out
inc
sbbb
inc
xor
lods
push
movsb
sbb
push
fnstenv
je
out
or
sub
adc
stos
movsl
cwtl
push
and
mov
sub
sahf
xor
pop
inc
popa
popf
lea
jae
ret
inc
test
insb
adc
or
add
inc
shll
xor
mov
addr16
mov
outsb
test
xchg
xlat
cs
flds
fwait
add
addr16
mov
mov
pushf
add
dec
rorb
lods
ret
jns
loop
iret
pop
stos
sub
dec
mull
mov
push
or
jns
pop
sbb
out
xlat
add
scas
cmp
cmp
cmpsl
jns
and
or
int3
test
aad
cmpsl
outsb
and
cmpsb
sub
pusha
fst
mov
or
pushf
popl
dec
sbb
jp
scas
xchg
push
sub
and
ret
in
stos
mov
leave
push
test
stos
cwtl
ja
mov
jecxz
xlat
mov
in
aas
test
mov
and
xchg
insl
popa
adc
push
ret
js
std
jle
pop
add
movsl
sub
cmpsb
pop
in
dec
and
enter
cld
push
jno
adc
addr16
arpl
test
mov
mov
std
push
in
sub
aaa
add
and
jne
mov
fcompl
in
xchg
adcb
cmp
sub
arpl
pop
int3
aas
xchg
js
mov
loopne
inc
movsb
xchg
xchg
xchg
adc
stc
nop
nop
data16
inc
fs
popf
push
gs
sbb
popf
jle
outsl
and
imul
icebp
stc
pop
add
push
arpl
rclb
sbb
cmc
aam
dec
nop
inc
data16
dec
xor
je
jl
rsm
nop
mov
xchg
xchg
enter
mov
lds
jle
aad
xor
push
int
push
mov
and
mov
xor
mov
das
mov
push
sbb
mov
dec
std
or
mov
cmpsb
jmp
mov
jns
cmp
or
mov
dec
sbb
adc
cmpl
dec
movl
adc
push
push
inc
jae
xor
and
ja
adc
rcl
mov
stc
mov
fnstsw
mov
popa
das
xchg
lea
xchg
lea
lcall
les
and
inc
outsl
jmp
mov
fldt
outsl
call
aas
sbb
xor
imul
and
sub
out
push
jnp
pop
add
call
popf
imul
iret
shrb
and
loop
mov
in
adc
fcoms
xchg
mov
pop
and
jle
lahf
dec
sbb
js
sbb
mov
jns
pusha
inc
fisttpl
pop
pop
pushf
fwait
mov
lock
aas
xorb
cltd
dec
fcompl
pop
loop
fcmovb
fcoms
pusha
xchg
aad
pop
andb
inc
push
add
test
js
ljmp
stos
nop
xor
leave
lods
sub
or
clc
in
stos
or
dec
jo
lods
or
popa
dec
and
or
shl
andb
repnz
movsb
mov
xchg
fadds
xor
ja
pop
ret
iret
fwait
std
mov
xchg
iret
sbb
and
arpl
les
inc
jnp
stc
push
mov
push
test
xor
test
mov
adc
fwait
dec
test
in
xlat
std
leave
pusha
pop
jle
xlat
mov
fnclex
ret
xchg
aam
sub
and
rcrb
pmulhw
notb
cmp
aaa
or
jg
mov
jl
xchg
dec
add
and
into
xchg
bound
push
mull
sbb
insb
shrl
xor
xchg
push
lcall
add
cwtl
movsb
addr16
adc
xchg
cmp
sub
pushf
inc
add
jge
xchg
xchg
std
jno
pop
int
jmp
inc
cmpl
pop
cs
inc
out
fidivrl
clc
jno
outsl
sbbb
cmc
pop
mov
xlat
flds
std
mov
dec
aad
movsb
mov
sar
or
mov
xchg
in
dec
dec
xchg
mov
outsl
jge
jp
roll
push
pop
orb
pop
cmpsb
sbb
and
mov
aas
inc
call
xor
insl
mov
jecxz
loop
xchg
jne
shr
pop
lcall
out
outsl
mov
shlb
fcmovnb
pop
mov
cmp
movsl
in
in
movsl
cmp
test
add
pop
push
inc
mov
and
cltd
addl
pop
icebp
mov
roll
outsb
mov
aad
out
repz
push
cmp
cmp
mov
inc
inc
cmpsb
test
imulb
push
rcrl
std
dec
mov
lds
sub
inc
cwtl
add
push
dec
js
ror
fs
and
mov
popa
subl
fwait
mov
inc
in
sbb
sbb
pop
mov
sub
cmp
ret
xchg
cmp
jge
xchg
std
test
push
pop
imul
andb
mov
sbb
xchg
aas
int
clc
int3
dec
sbb
sub
xor
or
push
and
das
cmp
fldt
and
je
test
repz
or
add
out
repnz
rcll
inc
sbb
sbb
push
pushf
aad
mov
xchg
fucomip
lret
jge
mov
cmp
cmp
xor
push
push
adc
pop
jp
ret
aas
xchg
ds
mov
adc
adc
pushf
call
ss
ret
pop
sub
lods
jns
iret
pop
bound
inc
dec
test
sub
out
mov
aad
adc
mov
stos
jae
sub
and
and
jb
mov
shrb
sub
pop
arpl
mov
xchg
inc
jae
gs
arpl
fstl
or
dec
sub
mov
lret
jno
inc
mov
xor
cwtl
dec
mov
js
cmp
std
clc
out
inc
push
jg
enter
in
in
sbb
jbe
dec
push
mov
lret
divb
push
or
subl
pop
xchg
mov
mov
add
nop
pushf
subl
mov
xchg
clc
mov
pop
es
in
push
pusha
xchg
out
add
dec
fs
sbbl
pop
mov
xchg
fisubs
sbb
sub
mov
js
push
adcl
sub
or
jmp
out
inc
mov
lds
aam
and
dec
mov
push
imul
repz
mov
arpl
jo
xchg
mov
mov
and
sub
in
xor
js
outsb
out
inc
mov
mov
inc
in
xchg
out
addl
int3
out
mov
cmp
sbb
mov
xor
cltd
loopne
inc
gs
dec
sbb
lock
fnsave
jp
cmp
cmp
cmpsb
into
out
lret
sbb
lock
mov
hlt
pop
mov
inc
cli
into
fadds
sub
imul
push
mov
fisubrl
pop
push
push
pop
mov
aad
cmp
mov
and
jbe
mov
in
sub
add
lods
sbb
inc
call
jae
add
mov
js
daa
inc
fnsetpm(287
push
call
and
je
fnstcw
daa
ds
outsb
stc
or
mov
inc
cld
sbb
adc
fimull
jns
push
push
add
movsb
cmp
mov
push
or
stos
mov
in
in
stc
pop
xchg
lret
cli
imul
and
into
push
shlb
mov
and
inc
shlb
les
sbb
bound
andl
in
pop
adcb
stos
popf
cld
fildll
add
sub
sbb
pop
sbb
mov
push
xchg
daa
jmp
or
out
popf
and
int
inc
movsb
nop
movsl
add
lret
push
insl
imul
xor
mov
daa
and
inc
add
mov
stos
test
inc
stos
inc
dec
imul
dec
xor
xor
mov
inc
and
jecxz
xchg
and
into
imul
aaa
enter
pop
popa
jg
loope
fcompl
pop
mov
inc
adc
xor
call
arpl
xor
mov
lret
out
icebp
fnstsw
mov
dec
or
pop
lods
je
out
pop
mov
sbbb
js
rol
inc
test
daa
dec
movsl
das
dec
inc
inc
push
jb
out
add
mov
cmp
adc
ss
outsb
sti
and
xor
sbb
jb
cmpsl
stc
pop
hlt
out
shll
test
and
movl
movsl
dec
sbb
push
or
mov
mov
sub
and
jno
inc
dec
inc
xor
dec
in
dec
repz
jecxz
add
ret
gs
test
repz
jp
insb
xchg
arpl
in
mov
or
popa
mov
adc
arpl
jno
jne
pop
subl
mov
cmc
pop
and
add
push
add
div
xchg
pop
js
lret
xor
hlt
jecxz
loopne
xorl
mov
jecxz
mov
and
xor
out
cltd
nop
mov
sub
repnz
je
rol
jbe
cmc
mov
ret
shlb
sub
push
jp
jecxz
jge
aam
jo
sbb
sub
or
loopne
ret
pop
sub
pushf
sub
inc
cmp
scas
lcall
shrl
pop
scas
ss
addl
stos
mov
aad
stc
imul
lahf
test
test
mov
insl
add
push
inc
inc
aad
das
jae
push
cmp
fsubrl
movsb
movsl
jbe
leave
gs
enter
cmp
cmp
cmc
icebp
or
mov
pusha
and
fs
popf
outsb
aad
stos
add
ja
repz
lods
inc
jo
mov
cmp
jne
add
xchg
xlat
dec
pop
sbb
mov
hlt
pop
dec
in
pop
gs
daa
dec
xor
or
mov
xchg
jecxz
rcl
adc
jmp
int
adc
add
in
cmp
shrb
pushf
sbb
and
outsb
xor
lods
movsl
mov
jp
mov
shll
loop
jo
repz
mov
xlat
xlat
scas
add
jns
and
adc
movsb
in
into
push
sub
outsl
fbstp
and
jno
fs
jbe
xchg
andl
and
mov
pop
pop
aaa
ret
xchg
es
sar
xorb
test
adc
aad
addr16
aas
mov
loop
lcall
repnz
and
lock
jnp
sub
pop
jae
cltd
dec
aad
add
insb
andb
sbb
stos
rcl
jae
insl
pop
ljmp
sbb
add
movsb
addb
subb
xor
loope
pop
mov
aas
push
mov
pusha
xor
and
andl
xchg
xchg
sub
pop
push
jl
cwtl
test
arpl
fs
xor
arpl
sti
es
mov
xchg
mov
sub
repnz
repnz
adc
xchg
lret
fcoms
lds
push
pop
call
add
das
pop
mov
sub
in
adc
jno
ja
js
dec
aad
inc
bound
sahf
add
ffree
cmp
xlat
dec
test
outsl
push
into
testb
in
mov
xor
mov
mov
mov
les
xchg
xchg
adc
lcall
std
fsubr
mov
pop
jp
push
xor
add
aam
add
xchg
sub
ss
nop
add
mov
incb
call
in
imul
cmp
push
stos
clc
adc
pop
ret
fstps
lcall
adc
jle
push
fistpll
mov
pop
xor
lock
mov
mov
pop
into
or
mov
jbe
fdivl
idivb
repnz
xor
das
jbe
out
fwait
int3
jp
fstpl
xlat
mov
nop
dec
lcall
sub
add
leave
and
clc
hlt
cmp
cmp
stc
data16
adc
shll
cmpsl
sbb
push
add
sbb
jecxz,pt
jb
inc
dec
and
leave
ds
add
mov
push
and
push
mov
inc
mov
sti
jbe
lea
cmp
fprem1
jge
loop
scas
scas
test
jb
mov
scas
arpl
mov
xchg
stos
cmc
or
rclb
gs
fists
out
repz
or
sub
in
sahf
lods
testl
push
mov
xor
adc
aaa
rcll
loop
mov
push
in
repnz
sub
xchg
loop
fcoml
imul
mov
mov
das
imulb
push
cld
pop
les
mov
jbe
loop
mov
cmp
cmpsl
stos
push
jne
dec
fwait
pop
subl
pop
pop
mov
or
mov
test
adc
testl
cld
pushf
jge
stos
in
xchg
fwait
in
jg
popa
stos
fstps
pop
and
or
lock
pop
test
push
mov
es
or
pop
in
out
movsb
call
insl
call
rcrb
stos
fadds
and
aaa
stos
or
sbb
clc
cld
loop
fisubl
int
mov
ja
shlb
pop
pusha
sub
mov
adc
aas
xlat
call
insb
xor
leave
add
adc
ret
movhps
push
lds
test
fldenv
inc
mov
or
je
popf
inc
out
or
pop
pushaw
icebp
gs
mov
rcrb
nop
pop
cmp
push
mov
mov
mov
and
pushf
test
mov
test
mov
sbb
sti
jne
mov
mov
arpl
cmpsb
jnp
mov
pusha
in
shlb
xchg
mov
dec
enter
inc
out
ret
cltd
adc
adc
push
adc
xchg
insl
lods
pop
bound
mov
or
lret
mov
xor
xchg
idiv
cmpsb
lret
jle
sub
hlt
out
inc
sub
xchg
hlt
test
jae
in
cmp
movb
fwait
loope
cmpsl
pop
jo
push
jle
cmp
out
vcmpsd
and
push
push
int
ja
lea
je
pop
shrl
fs
sbb
and
pop
xchg
orb
pop
jecxz
mov
dec
cmp
jne
mov
mov
lahf
ret
adc
pop
sub
pop
cltd
push
and
outsl
cmp
scas
cmc
in
movsl
movsb
ljmp
jmp
imul
lock
ds
pop
in
sbb
xor
and
fadds
fwait
adc
cmc
mov
movsb
cmp
pop
mov
lcall
outsb
cmp
ljmp
push
hlt
xor
scas
add
lret
sub
push
nop
xchg
ljmp
mov
xor
popa
pop
jnp
fisttps
push
dec
cmpsb
sub
cmpsl
and
xchg
int
dec
pop
mov
divl
fwait
pop
sub
movsl
lods
outsb
loop
mov
push
lahf
xor
dec
jo
sbb
or
icebp
mov
cli
push
sub
mov
es
in
sbb
mov
mov
test
enter
push
pop
mov
mov
popa
pushf
gs
and
cld
xchg
jb
mov
imul
inc
mov
pop
sbb
jbe
les
ret
pop
inc
xor
mov
xchg
aaa
dec
call
leave
mov
mov
and
pop
cli
cmc
push
or
mov
xor
xor
div
fists
mov
out
mov
orl
andb
cmp
sahf
cwtl
push
jl
pushf
dec
je
mov
scas
push
addb
sarl
insb
or
xchg
jecxz
and
mov
add
and
cld
mov
or
or
repz
dec
orl
imul
push
sub
and
pop
push
test
ror
lods
fimull
push
push
adc
sti
cmp
mov
pop
nop
les
rcrb
and
xor
popf
mov
mov
je
movsl
scas
in
test
rcll
inc
inc
loopne
ficomps
adc
out
repz
loop
or
push
push
add
push
addb
mov
xor
mov
or
aaa
movsl
xor
insl
aad
movsb
sbb
test
jecxz
loope
fldcw
xchg
imul
mov
imul
negb
xor
fnsave
add
xor
popa
sbb
adc
je
bound
out
mov
xor
test
push
pusha
ljmp
cmp
push
subl
push
les
sbb
sti
aad
ds
aad
or
push
pop
push
outsb
push
movsb
push
pop
push
dec
mov
push
pop
jnp
sbbb
inc
jo
insl
ds
push
out
sbb
test
or
fs
jmp
stos
dec
sub
and
or
loope
or
dec
es
lea
jb
int
aas
stos
loopne
mov
popa
pusha
lea
sbb
xor
cmp
lock
cmp
xchg
ret
fstsw
lcall
jmp
mov
lods
dec
loopne
push
add
aaa
popa
shll
lahf
test
mov
lret
lret
mov
scas
or
sub
add
stos
sbb
inc
adc
aas
or
out
inc
dec
loopne
mov
push
outsb
and
imul
sub
xor
or
fisubrl
sarl
cmp
loop
jle
mov
loopne
xor
arpl
rcrb
mov
cmp
es
lods
ror
sbb
cmp
lds
add
jae
dec
sbb
jo
mov
lea
jnp
divl
xchg
sub
int3
shll
out
or
test
or
outsl
add
mov
outsb
call
aad
inc
adc
repnz
call
clc
xor
dec
push
push
xchg
and
jnp
movsl
iret
cmpsb
or
ret
hlt
sarb
imul
push
arpl
pop
dec
repz
pop
xor
jns
icebp
mov
and
sub
adcb
xor
xlat
cmpsb
or
sbb
testb
xor
cltd
add
sbb
jb
sbb
dec
cmc
out
xchg
dec
xor
jo
popf
lods
dec
dec
sub
mov
and
divb
into
f2xm1
scas
arpl
es
popa
lods
outsl
pop
push
or
and
adcl
std
or
sbb
cwtl
ror
push
inc
fnstsw
jns
cmpsb
jge
cmp
lcall
push
xchg
xlat
adc
push
sbb
aam
fwait
xchg
pop
or
nop
stos
imul
mov
and
inc
mov
lea
ljmp
jbe
mov
mov
jne
mov
push
je
ficompl
adc
dec
cwtl
and
aad
fwait
inc
cmpsl
mov
push
mov
shll
pushf
mov
stos
xchg
icebp
aam
icebp
lock
das
lock
push
and
enter
orb
sub
add
es
sub
add
push
stc
rorb
fcoml
ja
fldenv
adc
pop
jmp
xlat
cmpb
xor
fs
inc
scas
and
push
bnd
int3
ja
push
jo
addr16
sub
dec
mov
lock
test
loopne
xchg
pop
daa
sbb
push
adc
sbb
sti
adc
push
int
int
das
ljmp
leave
movsl
sahf
insb
fstl
ljmp
outsb
jle
imul
jne
or
repz
push
push
mov
out
pop
pop
in
cmp
in
cmp
in
movsl
sbb
test
xchg
cltd
lods
lock
mov
mov
sbbb
test
pop
bswap
test
ds
js
sarl
and
lods
pop
push
jg
jb
daa
fisttpll
mov
insb
ljmp
mov
inc
add
insl
pop
cwtl
aas
rcrl
adc
sbb
imul
mov
or
sub
push
jo
dec
cmpsb
sbb
out
mov
sbb
outsb
rcrl
mov
dec
mov
mov
dec
es
std
cmpsb
ljmp
jb
clc
leave
cli
inc
jmp
enter
mov
xchg
loopne
leave
inc
mov
ds
js
fnsave
call
sbb
mov
inc
pop
daa
push
add
mov
cmpsl
mov
jns
mov
std
add
hlt
pusha
mov
sbb
daa
int
out
retw
or
sahf
sbb
fildll
es
imulb
inc
xor
xchg
xchg
or
ds
xor
or
sub
es
add
pop
icebp
push
inc
lret
subl
mov
pop
cwtl
sahf
and
js
sbb
insl
or
inc
iret
mov
sub
mov
dec
sub
add
lds
mov
int
loope
mov
outsl
jmp
andb
add
fisubl
mov
aas
xor
add
inc
inc
mov
sbb
push
insl
jbe
xchg
mov
nop
fmull
xchg
pop
xchg
dec
iret
add
pop
movsl
int3
arpl
mov
mov
dec
sub
clc
fiadds
movsb
std
pop
lret
pop
bound
in
orl
pop
xchg
in
js
popl
sbb
pop
cmp
cs
sub
pushf
xchg
sub
in
mov
repz
pop
mov
rcrl
and
mov
lods
ljmp
cld
push
cmp
jp
and
lahf
cltd
sub
add
mov
xor
mov
inc
iret
test
jg
pop
jns
jnp
jb
xchg
call
or
sbb
or
aad
icebp
push
pop
sub
in
mov
xchg
mov
push
jecxz
in
std
lods
mov
xchg
lea
cli
push
push
cmc
js
ss
test
push
xchg
cld
sbb
in
cmp
jle
inc
ljmp
sub
push
mov
jns
in
jecxz
movsb
xorb
shll
mov
lods
inc
push
inc
push
push
xor
in
dec
dec
fs
shrl
cmp
insb
mov
jb
rcrl
inc
ret
ret
repz
xor
mov
pop
imul
or
xor
sub
mov
stos
jmp
mov
pop
rcll
movsl
loope
fidivl
enter
mov
stos
jge
sbb
pop
aam
dec
add
pop
js
stos
xor
gs
cmp
fistpll
push
jg
aad
and
jecxz
stc
cmp
or
lret
ficoms
mov
xchg
push
push
lock
adc
scas
mov
push
negb
in
xor
add
mov
test
mov
mov
inc
push
or
fucom
shlb
cmpsl
adc
xor
adcl
in
inc
int
push
lock
mov
out
adc
jg
sub
in
inc
loop
leave
pop
fld
jne
pushf
ret
add
jmp
push
repnz
mov
adc
cmp
cmp
jns
psubusw
sub
inc
adc
ss
dec
fwait
push
mov
aaa
xlat
subb
xor
push
mov
adc
jo
mov
lods
jb
dec
xchg
imul
fwait
pop
xchg
xor
push
js
push
outsl
fdivs
xlat
outsl
cs
pop
or
cmpsb
push
orl
inc
mov
cwtl
lahf
fstpt
push
xchg
aad
popa
cmp
out
mov
dec
mov
xor
in
int3
adc
lock
push
mov
cmp
sahf
push
shlb
cltd
jae
insb
fs
or
call
push
push
add
das
imul
mov
jp
mov
mov
dec
mov
pop
add
clc
push
adc
lods
cmp
or
adc
xor
les
sub
push
outsl
outsb
btr
outsl
push
lcall
add
sbb
cmp
push
sub
fwait
sbb
sbb
test
add
and
add
push
dec
jmp
cmp
dec
dec
jno
push
in
sahf
and
rcl
addl
push
mov
test
jne
adc
test
cmp
cmovge
pop
test
lret
push
pop
mov
or
test
inc
pop
mov
ret
dec
push
test
test
adc
and
cmp
cmpsl
dec
cltd
mov
pop
mov
mov
fistps
pop
add
cmpsl
data16
rcrb
dec
movsb
std
adc
or
add
aaa
sbb
loope
fwait
cli
scas
or
rcrl
inc
push
dec
jl
clc
sahf
imul
xor
sti
popa
stos
adc
and
add
xor
sbb
or
pushf
mov
pusha
outsl
push
adc
insl
inc
and
out
sbb
mov
movaps
pushf
sub
insb
mov
jp
add
pop
cmpsl
jns
push
push
dec
in
int3
pop
xchg
daa
neg
imul
mov
add
jb
or
dec
adc
inc
pop
sbb
cld
aam
xor
xor
cwtl
lea
fmull
lcall
outsb
sbbl
stc
sub
xchg
fbstp
cmp
cmp
xor
xor
jns
test
adc
push
pop
cmp
sub
adc
aam
test
js
movsb
cli
idiv
dec
mov
xorb
leave
mov
jnp
inc
jns
cmp
inc
cmp
dec
movsb
pop
cs
int
and
cmpsl
lods
adc
mov
push
xchg
or
push
mov
and
ds
arpl
push
push
mov
enter
pop
test
cltd
jbe
xchg
aas
cmp
shr
push
sar
dec
stos
xor
pop
bound
movsb
jo
clc
add
lods
out
icebp
outsl
jle
insl
and
pop
lods
pop
cwtl
push
loop
sbbb
sub
sub
cld
mov
out
lea
sbb
jno
jno
mov
bound
and
or
enter
inc
sub
rdmsr
mov
sar
bound
dec
test
or
push
mov
push
jne
jle
es
out
fisttpl
adc
cmp
aam
or
fld
cwtl
aad
testb
int
movsl
mov
pop
nop
jnp
lock
push
jnp
inc
cmpsl
imul
and
jmp
mov
adc
add
std
incb
pusha
pop
lds
cmpsl
adc
inc
jle
inc
hlt
dec
lret
clc
fwait
cld
addr16
xchg
add
cli
pushf
mov
xor
mov
sub
popa
push
mov
adc
jle,pn
push
aam
sub
xchg
imul
sbb
adc
mov
pop
popa
mov
loope
and
or
outsb
pop
loopne
popa
lods
aad
and
dec
lret
xchg
mov
ficoml
jo
or
int
dec
int
add
jo
push
sub
mov
lcall
nop
sbbb
loop
scas
mov
cmc
cmp
or
cld
mov
mov
je
test
mov
pop
call
lods
fwait
mull
adc
insb
jo
and
sbb
nop
lea
cld
adc
inc
lods
mov
out
xchg
dec
sub
or
lcall
call
sub
cmp
or
scas
popa
dec
pop
push
xchg
mov
push
mov
dec
daa
jae
jb
movsb
push
stos
popa
out
int
jns
xchg
or
leave
mov
adc
or
mov
xor
jmp
ja
pop
iret
and
negl
cmp
push
mov
test
lret
xor
add
int3
add
pusha
ljmp
sub
iret
pop
aas
les
xlat
sarb
mov
divl
inc
es
movsb
jno
pop
sub
inc
js
sub
mov
adc
in
xor
cmp
gs
mov
jbe
ret
xchg
pop
lock
fcmovu
push
imulb
push
pop
inc
dec
pop
lods
push
fiaddl
mov
call
repz
dec
daa
sahf
mov
jae
hlt
fadds
jmp
push
cli
push
jecxz
into
push
ljmp
imul
fcoms
push
out
dec
sahf
mov
xchg
stc
xchg
out
jmp
repnz
es
imul
jl
fcomps
inc
das
das
lds
adc
push
aaa
mov
push
jmp
addr16
cmp
pop
mov
into
cmc
and
testb
aaa
cmp
ret
pop
js
mov
cmpsl
sbb
pop
imul
jae
sahf
push
xor
and
loope
push
add
aam
fstp
xor
stos
subb
mov
test
xor
xlat
fs
sub
iret
nop
jmp
repnz
repnz
xor
sti
xchg
push
int
pusha
adc
jp
inc
test
cmpsl
enter
icebp
sub
pushf
stos
or
mov
lret
arpl
xchg
scas
push
aam
pop
loope
jmp
sub
sub
adc
sub
jo
sbb
movsb
imul
adc
sbb
aaa
sub
into
leave
cld
mov
or
sti
jg
iret
cmpsl
and
add
push
jb
scas
ljmp
xor
scas
loop
js
pop
pusha
push
add
or
mov
add
outsb
and
sbb
in
cmc
into
inc
mov
xchg
xchg
jo
popf
cmp
in
sub
je
movsl
push
push
add
sub
jmp
hlt
movl
mov
in
adc
das
ficoml
push
dec
out
sbb
mov
xchg
out
push
test
fmulp
xor
pop
inc
cmc
dec
out
fwait
push
xor
scas
les
xchg
pop
fsqrt
imul
test
ror
jno
xor
jno
sbb
mov
rcll
xor
jae
ret
inc
inc
in
xchg
enter
and
inc
test
andb
jecxz
add
mov
mov
mov
sub
shrb
fisubs
xor
mov
dec
pop
and
ljmp
or
push
mov
popf
std
movsb
dec
push
cwtl
add
pop
loopne
dec
mov
pop
mov
js
sarl
xor
mov
das
xchg
lds
addr16
push
mov
ret
pop
loope
packuswb
sti
mov
or
xchg
pushf
mov
mov
or
fsubs
pop
cmp
pop
xchg
pop
or
pop
sbb
dec
rcr
paddw
fwait
test
int3
xchg
sbb
dec
mov
stc
in
in
repz
pop
xor
sti
jl
fistpll
insb
int
lret
push
push
inc
push
js
xor
and
pop
rcll
cs
clc
aas
testb
cwtl
pop
mov
sbb
jl
hlt
mov
arpl
aas
pop
mov
int3
cwtl
imul
and
popf
jns
lods
mov
lcall
lcall
xchg
andb
jge
in
mov
adc
iret
sub
lods
push
mov
adc
xor
lods
loope
mov
dec
shll
jns
and
xor
ss
pop
pop
insl
sub
mov
outsl
pop
mov
mov
cmc
test
xchg
insb
mov
push
dec
xchg
idivl
insb
sbb
pop
call
cs
dec
outsl
push
sub
jp,pt
pop
dec
push
dec
mov
mov
into
adc
add
movsl
dec
pop
inc
mov
jge
mov
ss
add
es
xor
les
shlb
das
push
xchg
cmovno
xchg
xor
ficoml
or
jbe
adc
shrw
pop
in
fldl
jb
in
add
xor
fcomps
and
jne
lahf
cli
in
mov
addr16
lds
testl
mov
mov
inc
push
imul
mov
mov
subb
adc
sahf
lods
stc
mov
pop
int3
inc
lds
out
bts
xchg
add
out
int3
mov
dec
pop
lret
sbb
and
add
repz
sar
push
dec
add
xor
jnp
jl
hlt
ljmp
fwait
loop
and
es
fnsave
mov
test
cmpsb
jb
jmp
sbb
fiadds
mov
shl
imul
xchg
inc
ja
pusha
xchg
and
popf
fwait
push
out
jne
push
dec
fmull
pop
push
sub
inc
cwtl
xchg
repz
push
mov
sbb
mov
mov
stc
mov
cmp
push
les
ret
lds
loop
jae
push
xor
pop
bnd
pop
cmp
push
push
push
push
cmp
push
scas
add
aad
adc
pop
cmpsb
rdmsr
mov
in
loop
sub
fidivrs
mov
cmp
jbe
push
lods
adc
xor
dec
negb
bound
pop
push
push
out
lods
mov
enter
jne,pt
add
mov
add
jnp
nop
aaa
pop
ljmp
dec
add
mov
sti
sub
push
test
push
or
mov
loop
push
iret
aas
loopne
sbb
mov
mov
sti
jge
cmp
sbb
les
testb
loope
and
inc
sbb
cli
leave
push
pop
mov
or
pop
stos
inc
push
imulb
mov
imul
lret
loope
cltd
test
xor
sahf
adc
and
xor
pop
mov
pushf
sbb
movaps
fwait
sub
pop
iret
lret
sbb
je
xchg
add
push
sbbb
movsb
popf
sbb
or
enter
les
lds
lcall
ljmp
push
std
ficompl
lods
mov
inc
sbb
lods
mov
fwait
jb
jmp
xlat
rcrb
aaa
jbe
push
dec
dec
subl
mov
and
aaa
xlat
dec
sub
xor
lea
add
jo
cmp
adc
scas
xchg
dec
je
mov
add
in
mov
decb
push
pop
jecxz
testb
adc
std
and
sti
lret
int3
mov
or
inc
fiadds
inc
sbb
push
xchg
pop
jl
mov
mov
lea
test
xor
and
sbb
sahf
xor
mov
bound
shrl
or
pop
stos
gs
divl
cwtl
push
dec
sahf
xor
or
mov
pop
sbb
dec
movsl
in
ds
sub
shl
and
push
mov
xchg
nop
xchg
add
xchg
push
jg
add
aad
insb
xlat
fwait
push
push
push
dec
lret
cmpsl
rcrb
xor
and
sbb
test
sbb
xchg
cmp
in
mov
data16
cltd
dec
daa
cmc
dec
aad
out
outsb
scas
lock
sub
fcmovnu
dec
or
xor
jge
jg
aas
pop
mov
jmp
and
mov
int3
jle
loop
lods
sti
popa
cwtl
nop
hlt
xor
into
mov
in
add
decb
sub
mov
pusha
push
cwtl
addr16
dec
clc
icebp
sbb
jno
das
stos
jbe
mov
xchg
in
mov
aam
jmp
add
pop
adc
test
cld
mov
ljmp
adc
nop
pop
jbe
mov
fimuls
dec
fisttps
xlat
cwtl
mov
sti
lds
mov
testl
pusha
iret
dec
cld
sbb
jmp
sub
dec
or
insl
dec
or
push
add
xchg
scas
mov
mov
sti
hlt
mov
mov
inc
push
das
mov
out
fwait
aam
pop
addr16
mov
fdivs
pop
push
inc
cwtl
lea
mov
pop
arpl
xchg
or
sti
pop
push
xchg
test
inc
jp
jno
inc
xchg
cli
sbb
mov
cmp
jns
push
int
cltd
inc
and
out
loopne
lret
mov
mov
push
movsb
cmpl
xor
mov
imul
bound
repnz
loopne
mov
pusha
lret
fildl
scas
out
adc
sub
mov
insl
jne
dec
sbb
xchg
jb
sbb
out
data16
pop
lds
adcb
lret
cltd
adc
xor
inc
add
test
jne
xor
ss
and
jmp
shl
xchg
nop
fldenv
pop
shll
pop
clc
dec
pop
xchg
ja
jnp
xchg
pusha
push
hlt
cmp
int3
cmc
int3
inc
adc
aaa
repz
adc
gs
cmp
mov
sub
call
pushf
push
xor
pand
ja
adc
xchg
arpl
mov
pushf
ja
and
cmp
js
notrack
ss
mov
cmp
dec
jg
cmc
cmp
jns
mov
or
fcomp
jl
aas
arpl
stc
and
jno
sub
out
add
aam
jmp
outsl
dec
push
dec
and
aaa
fwait
movsl
mov
xchg
fists
xor
xor
mov
pop
dec
mov
cmp
call
xorb
cmp
stc
push
and
xchg
stos
ficoml
pop
mov
dec
push
js
shll
jmp
or
jae
cmp
jns
mov
pop
adc
lret
mov
repz
lock
imul
enter
into
xor
dec
push
bound
lahf
sbb
mov
push
adc
insb
adc
push
inc
inc
roll
mov
mov
adc
and
out
lcall
pop
sbbl
add
add
addr16
inc
mov
jb
sbb
fisubs
jecxz
ror
sub
repnz
adc
mov
inc
sbb
jp
xor
ja
das
adc
cli
cmp
lock
bound
dec
adc
das
inc
in
in
arpl
mov
mov
aas
or
leave
mov
mov
mov
xlat
lret
adc
xchg
pop
mov
cmp
adc
cltd
test
loop
sbb
movl
shll
inc
ja
nop
iret
push
into
loope
sbb
xchg
or
ficompl
call
int3
andb
pop
gs
fdivrl
sbb
inc
pushf
sbb
or
xor
xchg
loop
cltd
outsb
pop
xorl
push
ja
sub
or
or
push
int
mov
jo
or
fsts
sbb
fldl
jecxz
hlt
stos
mov
sarl
mov
out
xor
add
fnstsw
dec
test
lea
mov
or
sahf
sbb
jge
add
and
push
loop
and
inc
out
loopne
adc
mov
daa
repnz
out
pop
jno
mov
push
fnstcw
push
mov
lahf
inc
push
imul
cli
enter
cmp
out
lahf
xchg
or
mov
outsl
nop
sbb
pop
inc
imul
pop
sub
push
mov
pop
push
pop
hlt
push
andl
rorb
pop
cmp
repnz
gs
xchg
movsb
call
dec
push
dec
test
in
xor
lahf
sarb
inc
out
jne
mov
insl
pop
push
dec
shll
mov
int3
mov
fisubrl
jmp
xor
and
sarl
fidivs
popa
psubsb
mov
fs
loope
push
inc
xchg
jo
pop
adc
lods
dec
sbb
dec
mov
dec
es
adc
orl
mov
int
pop
push
outsl
mov
add
rcrl
jno
sub
adc
mov
mov
xchg
je
lcall
mov
xor
cmp
jbe
dec
cld
sbb
pusha
cmp
jo
inc
and
insl
xor
adc
xchg
nop
cld
sbb
and
pop
lds
push
aad
xor
mov
add
cmp
cltd
or
mov
daa
arpl
stos
and
xchg
jl
inc
hlt
xchg
xor
mov
sub
loopne
daa
loope
nop
adcl
xor
xor
or
stos
test
aad
cwtl
repz
mov
cmp
repnz
pop
push
xchg
xchg
fnsave
int
cmp
xchg
or
push
mov
movsl
or
mov
mov
or
xchg
rcrl
push
stos
out
test
fs
roll
xchg
sbb
pop
xchg
add
mov
push
fstpl
xor
push
fs
xor
or
fwait
adc
ret
xor
cs
addr16
out
out
andl
std
sarb
sbb
mov
cmpsb
push
pop
xchg
and
fmull
xor
mov
pop
or
lret
lock
sub
jae
jns
sti
xchg
popf
mov
xchg
mov
xor
test
adc
dec
and
dec
fadds
dec
add
fld
xchg
es
mov
js
das
fcmovnbe
into
shlb
xor
andl
dec
xchg
pop
mov
or
sti
and
pop
add
out
fsubr
shlb
pop
gs
in
rcl
cltd
xchg
negl
pop
jmp
push
lret
or
stos
iret
or
addr16
pop
adc
cmp
ss
imul
adc
add
sub
cs
mov
xchg
xchg
mov
mov
sbb
fcoms
or
loope
aaa
aas
int3
inc
xor
ljmp
sub
call
and
ljmp
je
dec
add
jns
adc
clc
rorb
repz
in
in
lret
sbb
mov
popa
cmp
jnp
ret
fsubs
mov
xchg
addr16
dec
in
orb
loope
dec
xor
shlb
cmp
aam
int3
decb
pop
sub
inc
cmp
dec
test
aas
mov
js
jp
jae
dec
mull
sbb
lea
insb
jp
pushf
jb
sbb
jnp
pop
imul
cmc
movsl
inc
push
xor
ret
push
dec
mov
in
imul
fisubrs
pop
mov
mov
lret
enter
jae
xchg
lret
jnp
adc
scas
test
lret
push
insl
mov
jl
divb
outsl
popf
cmpsl
pop
fstps
inc
outsb
fs
push
adc
in
adc
dec
lret
ds
add
in
pushf
fldt
dec
das
xor
cmp
addr16
sbb
push
lretw
push
test
or
mov
enter
sbb
xlat
adc
dec
dec
dec
jl
push
orl
jecxz
dec
sbbb
add
movsl
scas
and
sub
jae
lea
cmp
xchg
imul
or
aas
cmp
in
aam
push
aaa
pop
mov
xchg
mov
das
dec
sarl
repz
jmp
aas
enter
pop
in
mov
add
mov
fistpll
and
lcall
divb
pop
outsb
push
insb
shrl
and
cmp
out
inc
jb
xor
orb
cmp
push
popa
mov
fcmovbe
fldt
xchg
sub
mov
stos
xor
test
out
fwait
imul
jle
cli
in
shrb
scas
stc
testb
pop
and
sbb
jns
fistl
mov
sub
jb
pop
lret
mov
mov
outsl
cmpsl
push
in
xchg
adc
or
mov
and
mov
and
inc
push
sahf
push
cmpsl
fs
or
sbb
xchg
mov
jb
sub
mov
xor
cmp
daa
movsb
push
aad
dec
push
inc
or
insl
xor
inc
sbb
mov
mov
pop
mov
stc
cmp
aam
pop
pop
call
adc
xchg
outsl
outsb
fisubl
addr16
pop
jl
jle
std
inc
in
ljmp
jl
xchg
push
mov
iret
xchg
push
or
sub
mov
lahf
push
dec
jmp
aam
test
mov
loop
testb
ret
or
mov
mov
aaa
xchg
dec
mov
arpl
inc
pusha
and
xchg
pop
push
pop
push
sti
loopne
inc
sub
leave
lods
pushf
mov
jge
fstpl
jbe
add
jbe
and
js
ret
je
scas
mov
adc
adc
xor
xor
and
out
dec
add
add
inc
sahf
psrlq
jbe
js
mov
push
and
sbb
pop
div
lahf
mov
test
add
or
stos
test
iret
adc
xor
inc
out
pop
sbb
mov
das
in
ljmp
xor
or
loope
jle
xlat
mov
jg
out
aaa
lret
mov
and
test
inc
sbb
lods
mov
xchg
es
push
movsb
cmp
les
jne
dec
filds
and
cmpb
dec
mov
push
and
aaa
mov
fwait
aas
and
insb
push
ljmp
xor
ret
imulb
mov
push
sub
movsb
shrl
xchg
adc
js
test
ret
movsl
fistps
sub
jno
xor
or
mov
int3
lret
adc
pop
add
gs
loope
xor
lea
sbb
mov
jae
add
lahf
push
sbb
mov
mov
pop
jae
dec
pushf
push
cmp
adc
sub
push
add
int3
jbe
icebp
inc
add
out
flds
cmp
cmp
cmp
sbb
fwait
mov
cld
mov
insb
out
or
ljmp
in
divb
push
sub
inc
mov
push
add
fsubl
fcomps
cmpsb
hlt
mov
push
enter
pop
push
inc
mov
popfw
cmc
dec
cmp
into
mov
mov
add
or
cld
loope
dec
pushf
cmp
xchg
or
stos
ds
ja
mov
ret
jmp
cmc
push
sarl
cmp
xchg
mov
ret
outsb
xchg
cli
xor
ret
jo
cmp
xchg
es
pusha
mov
mov
mov
lods
verw
and
movsl
es
adc
out
lret
mov
je
aas
clc
jge
jecxz
xchg
insl
scas
subl
push
in
mov
or
rolb
cmp
fnstsw
outsl
dec
dec
aad
aam
pop
add
inc
dec
cwtl
jmp
xor
push
scas
mov
gs
dec
out
int3
scas
decl
sbb
xor
outsl
xor
inc
insl
insb
cmpsl
jle
call
aam
cltd
mov
sbb
xchg
sbb
fs
jne
sub
adc
ss
mov
movsb
iret
std
xchg
and
sub
mov
jo
jno
addr16
or
pop
int3
cmc
lds
dec
dec
ret
daa
pop
je
pop
dec
jne
or
outsl
aas
xchg
adc
loopne
sbb
push
jle
into
jle
inc
xchg
fcoms
hlt
pop
or
mov
into
push
dec
adc
mov
add
pop
leave
xor
push
inc
aam
mov
pop
sbb
jo
mov
fisubl
inc
mov
in
dec
clc
icebp
std
test
mov
mov
rolb
daa
mov
sub
xor
push
mov
xchg
jl
cmpsb
pop
adc
loop
push
mov
rcl
push
mov
push
add
mov
sbb
popa
lods
fs
movsb
rcl
or
test
jae
and
or
or
xchg
mov
xchg
jg
add
stos
lea
pushf
out
or
pop
jbe
fisubs
push
and
and
xor
mov
mov
pop
into
stos
cwtl
lea
jp
test
sub
out
push
mov
adc
add
push
adc
xchg
or
cli
push
imul
movsl
fstl
gs
mov
xchg
adc
jmp
lret
adc
sbb
push
aaa
lock
xorl
pushw
dec
or
push
dec
ret
jae
sbb
insl
imulb
daa
lcall
rcrl
mov
ret
out
add
sub
pop
stc
pop
insb
inc
mov
or
cmpsl
mov
and
push
cld
or
hlt
cmp
dec
pop
cs
out
pop
cltd
inc
in
pop
sub
cltd
xchg
or
push
enter
fisubrs
sub
push
fistl
dec
movsl
test
xor
push
repz
push
dec
imul
push
daa
jns
mov
mov
jle
push
jns
sbb
cwtl
imul
je
dec
and
bound
sbb
pop
test
cs
pop
scas
gs
sbb
ja
into
mov
int3
test
mov
outsb
adc
sub
daa
fcmovbe
sti
mov
cld
clc
mov
or
jmp
pop
pop
les
outsb
jno
cld
inc
xchg
inc
outsb
icebp
sbb
xor
inc
fdivr
cld
xchg
and
mov
lock
sahf
dec
jae
mov
lahf
xor
dec
hlt
and
or
iret
push
iret
outsl
cwtl
mov
aam
sbbb
xor
frstor
shlb
aam
mov
leave
sub
push
inc
add
mov
pop
ret
cmpb
mov
jl
test
pop
js
push
xchg
push
leave
fistpll
mov
mov
sbb
push
inc
mov
pop
fdivrs
push
rorl
int
and
mov
stos
aam
jl
cmp
and
js
xor
lock
adc
mov
in
pop
fs
movb
jne
or
adc
mov
add
xchg
adc
jle
ret
rorb
sub
jge
and
cld
pop
dec
inc
jne
add
in
xor
popf
lea
ficomps
scas
or
divb
and
mov
out
xchg
dec
jp
lea
add
outsb
cli
xchg
push
insl
je
mov
inc
enter
rcrb
push
adc
cltd
push
repnz
and
mov
jns
loope
es
push
pop
nop
rcll
dec
and
das
int
pop
or
ljmp
out
and
pop
les
mov
cmp
fwait
arpl
outsb
sub
shr
das
test
inc
xchg
sub
pop
adc
lahf
pop
test
sti
push
and
fisubrl
sahf
pop
lahf
dec
dec
cmpsl
pop
adc
jbe
lea
jg
in
insb
pusha
nop
arpl
int
add
cmpb
mov
jmp
mov
xchg
mov
jnp
clc
insb
sbb
pop
mov
lret
mov
stos
mov
testl
mov
pop
das
sbb
jmp
sub
xor
jge
jae
fwait
loopne
inc
jmp
dec
lods
test
cmp
rcrl
maxps
loopne
scas
xchg
pop
lcall
aas
leave
stos
push
test
sti
mov
jl
sub
cmp
mov
iret
or
stos
mov
pop
cltd
in
inc
dec
aaa
pop
dec
mov
lcall
je
and
cmpsb
sbb
dec
setnp
jnp
test
nop
ja
jbe
scas
jl
sub
xor
jge
mov
adc
ret
push
sar
ds
cmp
ficomps
xchg
out
stos
xor
pop
jecxz
cmp
aam
in
fistl
aaa
stos
dec
and
cmc
es
xchg
ljmp
mov
sub
arpl
mov
pop
inc
stc
sbb
in
or
lods
xlat
add
lods
jns
cmpsb
mov
pop
pushf
jle
in
cmp
popf
pushf
dec
ljmp
lods
lret
lret
jmp
or
ss
getsec
mov
mov
repnz
jle
jmp
inc
pop
decl
nop
mov
pop
in
add
test
pop
jo
lods
mov
sbb
stos
sub
outsl
aam
shl
adc
sub
jl
mov
stc
loope
push
mov
mov
ss
add
mov
xchg
ret
jle
mov
jne
cmpsl
sbb
and
push
and
pop
ja
mov
stos
aaa
cmp
cmpsb
ja
lcall
jo
int
and
jecxz
add
hlt
arpl
xchg
cs
xor
loope
xorb
push
dec
sub
mov
push
dec
repnz
test
popa
sarl
lret
imul
popf
sbb
mov
mov
sbb
pop
push
xchg
popf
mov
mov
xor
loope
inc
xor
mov
les
lds
cmpsb
into
inc
enter
sti
call
out
cmpsb
jle
aam
jne
lock
jbe
out
aam
aas
dec
xchg
inc
daa
mov
dec
and
jae
shl
lret
cmp
xchg
scas
mov
add
xor
test
lret
sub
aam
pusha
sahf
or
mov
adc
dec
call
mov
pop
insl
lds
xchg
or
and
or
cmp
jns
mov
enter
out
jmp
dec
shll
pop
add
mov
fimuls
cmp
rorl
movl
push
push
or
inc
or
stos
mov
nop
rcll
mov
xlat
mov
insb
cmp
insb
mov
pushf
aam
dec
lods
adc
lret
pop
push
jmp
pushf
add
mov
sub
cmp
jp
sub
lahf
rep
mov
cmp
movsl
jo
sbb
addr16
xchg
ss
sub
test
scas
push
inc
xor
push
adc
ljmp
pop
sbb
mov
xchg
movl
xchg
mov
dec
test
push
std
fdivs
cmp
cmovg
sub
lds
mov
sub
inc
cmp
mov
xchg
add
inc
enter
add
shr
js
shll
cmpsb
lods
and
rolb
cmp
mov
push
sti
pop
dec
hlt
sbb
xchg
ljmp
xchg
mov
aam
inc
sti
jecxz
outsb
mov
das
xor
cmp
sbb
outsb
mov
push
mov
xchg
fsubr
xlat
or
mov
pop
xchg
and
test
adc
test
jae
jae
jnp
das
shl
jne
push
mov
cmpsl
mov
jae
movsl
jae
adc
sub
add
mov
xchg
outsl
dec
arpl
pop
and
jno
push
dec
push
in
bound
mov
mov
xor
ss
scas
lret
pop
add
sub
inc
mov
cmp
mov
sbb
mov
in
mov
mov
outsb
xchg
imul
movsl
pop
xchg
lock
dec
hlt
or
push
mov
in
xorl
pop
icebp
out
push
mov
insl
or
pop
negb
mov
inc
shrl
adc
pop
ljmp
push
sub
xor
rcrl
shl
stos
mov
xchg
xor
pusha
inc
mov
dec
jne
fwait
or
xlat
mov
pop
insb
addr16
mov
movsl
xor
xlat
and
push
scas
fs
out
mov
lcall
fs
cmp
xor
pop
mov
cmpl
dec
cmp
fbld
adc
cmp
or
pop
push
dec
add
popa
lret
les
sbb
les
sub
adc
cmc
mov
fbstp
stc
loopne
fdivr
xor
and
adc
clc
mov
and
push
jb
mov
cmp
pushf
xchg
and
dec
mov
mov
fcoms
mov
scas
xchg
out
data16
xor
je
mov
mov
xor
mov
cli
int3
push
jno
insl
aam
inc
sbb
test
addb
subl
ljmp
lcall
out
jge
cmp
xchg
pushf
mov
push
push
cs
push
rclb
add
scas
xchg
jle
or
xchg
cld
pop
daa
out
dec
inc
jns
mov
loopne
or
popa
repnz
dec
mov
ljmp
xchg
addr16
lods
pop
inc
pop
ja
add
xchg
les
mov
sub
lods
or
adc
popf
inc
cmp
bound
push
xchg
cmc
pop
movsb
movsl
fsts
movsb
nop
mov
inc
mov
sbb
dec
pop
cmp
ret
daa
dec
stos
out
shrb
into
arpl
add
divb
fldcw
jno
xchg
test
fisubrl
jge
pop
mov
sbb
mov
jle
ret
jg
mov
mov
push
cmp
cmp
cmpsl
xchg
xor
aam
mov
fs
jns
ja
and
push
mov
call
int
pop
pop
enter
push
aaa
pop
xor
lret
fcmovne
icebp
lods
sbb
mov
xchg
in
outsb
mov
jmp
outsb
jle
adc
mov
mov
and
std
pop
adc
inc
testb
mov
push
stc
pop
mov
mov
sub
clc
cmp
inc
into
lahf
fwait
pop
cltd
fwait
pop
mov
inc
mov
mov
push
push
xchg
dec
dec
sub
or
add
shr
lea
dec
and
jl
push
dec
cld
jb
loop
out
pop
scas
pop
inc
xchg
icebp
xchg
and
stos
xor
scas
int
shl
mov
cmp
ret
sub
adc
inc
fnsave
test
cmp
mov
mov
sahf
push
testl
cli
daa
add
test
es
dec
popa
in
testl
or
mov
into
dec
cmp
dec
outsl
dec
imul
sbb
mov
jg
clc
negb
inc
inc
cmp
jo
pop
sub
mov
xchg
pop
and
mov
xchg
mov
ljmp
jne
gs
stc
mov
push
pop
dec
jbe
sarl
push
sahf
or
test
xchg
inc
jge
pop
mov
xchg
xor
mov
sub
movsb
sti
scas
mov
and
adc
test
hlt
inc
ds
adc
sbb
loopne
cmp
test
pop
mov
daa
rdmsr
movsl
xor
movsb
pop
dec
xor
int3
dec
mov
fsubrs
int
icebp
rolb
lret
push
insb
mov
or
pusha
cmpsl
xor
push
hlt
sbb
repnz
mov
mov
insb
pop
neg
cmp
inc
mov
inc
out
lret
pushf
je
andl
clc
inc
test
pop
sbb
mov
mov
outsl
mov
dec
mov
pop
loop
cmc
push
xlat
dec
or
dec
ret
insl
mov
mov
lcall
sub
mov
xchg
fisubrs
or
dec
in
inc
dec
scas
sahf
or
fildll
push
int3
enter
mov
mov
outsb
xchg
popa
lahf
dec
xor
dec
add
lret
loop
push
ljmp
fbld
stos
cli
fs
add
pop
jne
jb
or
call
repz
mov
jbe
dec
cmpsb
push
xor
dec
add
xor
daa
jecxz
test
decb
fidivl
xor
mov
mov
xchg
cmp
mov
xchg
lock
mov
push
test
xchg
ficompl
stos
ds
dec
push
lock
push
addb
inc
test
xor
mov
es
gs
or
pop
and
movsb
xchg
lods
enter
leave
lods
outsl
test
ret
sbb
add
sbb
mov
push
sbb
loope
into
fmull
fs
sub
push
int
data16
pop
mov
jb
jbe
fnsave
xor
cmp
jbe
pusha
mov
jne
xchg
xor
mov
dec
int
mov
mov
std
push
leave
sbb
div
cmpsl
aas
jle
fstpl
cld
mov
movsl
jecxz
xchg
stc
lret
and
jmp
inc
xor
in
rorl
xchg
ficoml
jle
fbstp
xchg
push
push
mov
or
sbb
xor
pop
mov
mov
in
pop
push
loop
in
loopne
out
in
addl
cmp
inc
cmp
adc
jg
es
jge
xor
sub
out
inc
fdivrl
loopne
fisttps
xchg
test
push
lds
mov
push
add
xor
inc
ret
mov
imul
jo
out
inc
push
lahf
stos
loope
popa
cmpsl
and
aas
scas
cmpsb
push
add
movsb
mov
add
sub
cli
mov
pop
aam
xchg
push
in
adc
xchg
ss
in
xchg
dec
iret
inc
and
push
jnp
jbe
xchg
inc
inc
inc
fwait
mov
outsb
xor
lret
mov
push
inc
popf
sbb
add
stos
pop
sub
or
cli
in
mov
daa
bound
and
mov
ret
adc
push
fbld
roll
test
xchg
outsb
inc
mov
xchg
jnp
andb
fmuls
adc
jmp
xor
adc
cmp
mov
adcb
imul
jge
jo
js
out
xchg
push
ljmp
mov
xchg
pop
rorl
fcoml
pop
inc
test
sbb
xor
push
sub
push
lods
fld
ss
xchg
popl
pusha
ss
rcll
sbb
ret
xchg
cmc
fcomp
push
sub
pushf
fs
mov
lods
or
jecxz
outsl
loopne
les
dec
cwtl
mov
in
jmp
mov
jle
dec
jmp
jnp
bound
adc
ss
int
cmc
insl
push
or
je
xchg
mov
jne
sub
inc
lcall
fsub
pop
fdivrl
shlb
cltd
nop
daa
movsb
imul
adc
repz
daa
lods
cmp
fwait
ret
pop
mov
push
xor
pop
mov
adc
inc
adc
sub
xor
jmp
sbb
icebp
test
jl
sub
pop
andl
fsubl
xchg
cli
mov
lcall
repnz
push
lds
cld
mov
mov
int3
jmp
jmp
cmp
daa
jno
rcll
mov
out
dec
addr16
inc
sbb
jb
pop
or
rol
jle
out
xchg
push
sti
sar
mov
outsb
push
xchg
lcall
jnp
push
test
movsl
xorl
jne
xchg
mov
dec
mov
sub
in
mov
jmp
scas
push
sbb
mov
lcall
mov
xchg
movl
das
xor
or
daa
sub
cmp
repz
stos
lret
and
jne
test
and
js
lahf
cld
out
imul
int
lcall
and
daa
fbstp
enter
out
insl
imul
mov
mov
jae
xchg
les
dec
pusha
mov
mov
or
mov
xchg
sbb
and
in
pushf
jb
mov
movhps
js
xchg
std
jo
add
lods
out
testb
xor
aaa
mov
es
sahf
fisttps
xchg
sahf
jmp
or
das
xchg
pushf
mov
hlt
clc
sub
mov
and
xor
or
jbe
fstl
in
es
add
int3
mov
aad
xchg
jns
pop
pushf
pop
xor
push
repnz
cld
dec
repz
sub
jno
push
sub
daa
and
sub
sahf
insl
sbb
mov
lcall
mov
js
das
mov
call
adc
outsl
lahf
mov
pushf
outsl
out
xlat
jmp
daa
cmpb
mull
sahf
pop
push
repz
cmp
mov
in
nop
popf
and
xchg
push
pop
fiaddl
scas
push
lods
daa
inc
sub
adc
sub
ss
pop
mov
pop
test
sub
adc
lret
lds
cmpsb
jge
cltd
maskmovq
idivl
ret
add
or
test
or
xor
or
test
int
insl
std
aaa
or
clc
out
int3
int3
and
lock
paddsb
sbb
sub
sub
rcll
xchg
int
jo
dec
jbe
or
push
xchg
dec
adc
ss
mov
cld
popa
ds
out
loope
movsb
lret
iret
jl
ds
pop
pusha
call
lahf
lods
push
add
in
cmp
add
subl
cld
mov
fadds
dec
outsb
mov
add
jecxz
dec
or
mov
xor
scas
shlb
cmp
cmp
shr
jg
cltd
inc
push
lods
cmp
mov
xlat
lea
pop
stos
pusha
pushf
lcall
sub
stc
sbb
xor
xor
jne
sti
lods
sub
pmaddwd
sub
sub
inc
sub
stos
sti
and
or
aad
ja
cltd
jp
adc
mov
push
jbe
jnp
pop
jo
push
cmp
icebp
xchg
pop
dec
cmpb
scas
gs
aad
mov
dec
adc
lock
movsl
fs
das
sti
mov
fcomps
cli
pusha
outsl
xchg
loop
mov
hlt
sub
and
add
push
pop
and
mov
jecxz
xor
or
clc
repz
jne
pop
add
mov
jae
add
sti
xrelease
cmp
pop
jns
mov
dec
and
or
loop
pop
cmp
push
pop
mov
sbb
adc
push
movsl
or
dec
cmc
mov
push
dec
cmp
aas
es
lret
push
stc
popa
sub
int
dec
xor
mov
push
sbbb
clc
gs
call
adc
pop
cmp
cmp
push
les
rolb
test
and
xor
mov
sbb
cmpsb
ljmp
in
xchg
imul
inc
push
jb
stc
dec
and
sub
xchg
std
lret
in
cmp
jmp
enter
mov
out
xor
jns
popf
mov
pusha
adc
adc
mov
out
das
pushf
fiadds
pop
aas
inc
xchg
sbb
pop
sub
orb
adcb
pop
rclb
push
mov
orb
sarl
enter
lret
ficoms
scas
add
cs
mov
cld
rol
xor
rcrb
mov
push
rolb
sbb
xchg
std
dec
js
stos
cltd
ret
lods
push
cld
jl
mov
fstl
mov
mov
mov
xor
sti
stos
push
aad
je
mov
sbb
lock
lahf
pop
or
call
push
inc
push
pop
in
fisttps
xchg
xchg
sbb
mov
repz
xor
cmpsl
shrb
xchg
movsb
push
inc
scas
nop
mov
test
dec
test
and
pop
in
mov
push
pop
int3
lds
sub
or
inc
mov
sbb
xchg
daa
cmc
mov
test
mov
ss
lds
cmp
cmc
xchg
je
push
icebp
maxps
push
push
movsl
add
jb
enter
xor
cmc
adc
hlt
push
pop
cmp
jp
add
cwtl
fiadds
push
ljmp
das
cwtl
repnz
shl
aaa
mov
leave
jl
fstps
fsubrp
jle
or
mov
addr16
fadds
dec
scas
mov
pop
cltd
dec
adcl
mov
lcall
out
xchg
fs
mov
hlt
or
or
mov
jge
mov
stos
cmp
or
mov
fs
jo
pop
jae
inc
in
lcall
or
std
push
mov
inc
daa
or
sbb
sti
dec
or
les
xchg
push
xchg
xchg
fsubp
outsb
les
adcb
sub
in
mov
dec
jnp
cwtl
fmull
jbe
loopne
sbbb
cmc
add
push
cmp
movsl
fucompp
cmpsb
cmc
cmp
in
aaa
nop
lahf
notb
and
and
iret
rclb
popfw
mov
add
add
out
dec
stos
sbb
inc
pop
lcall
push
cltd
sub
pusha
pop
pop
push
cmpl
push
or
popf
jp
push
mov
fwait
lahf
sti
and
aaa
jecxz
pop
addr16
ret
pusha
subl
lds
mov
jo
xor
fistl
loope
shl
shrl
fists
repnz
mov
int
pop
rorl
sahf
in
xchg
push
daa
mov
xchg
rcll
loope
test
mov
lock
aam
sbb
push
or
xchg
cltd
add
pop
shl
push
ret
xchg
xchg
dec
repnz
aam
add
scas
sbb
cmovo
mov
pop
mov
dec
push
and
aad
mov
cld
mov
sub
mov
arpl
cs
int3
insl
push
xchg
pop
jbe
adc
mov
jmp
sub
sbb
mov
mov
sbb
mov
out
scas
adc
cmp
shll
push
xor
cld
rolb
test
xor
rep
cmp
aam
jnp
je
mov
and
jl
aam
or
add
fwait
mov
sbb
push
cld
pop
sti
push
inc
gs
ljmp
lahf
dec
and
add
jae,pn
fdivrs
aas
push
fnstenv
mov
fnstsw
fisubl
jl
xchg
cmp
push
mov
int3
mov
js
in
dec
xchg
jg
dec
mov
dec
popa
in
lods
add
sub
sub
inc
xor
xchg
fistpl
push
pop
jmp
jo
push
jb
pop
les
xor
cmp
cs
pop
pop
std
and
pop
movsl
sub
xor
xchg
cmp
outsl
mov
jl
or
test
mov
subb
dec
push
fcoml
xchg
push
pop
mov
sbb
dec
aam
push
mov
pop
xor
xchg
mov
push
push
popa
sti
mov
in
arpl
in
and
inc
and
rcr
mov
xchg
mov
lock
fistpll
cmp
ss
pop
stos
inc
icebp
mov
mov
sub
aad
pusha
xchg
mov
das
repnz
jmp
testl
subl
andl
inc
push
pop
das
lock
fs
test
inc
pop
cmc
out
aaa
dec
and
pop
xor
xor
das
ljmp
sbb
xor
mov
or
dec
xchg
loopne
les
push
pop
adc
mov
jp
fldt
jg
testb
xor
rolb
test
testl
jmp
cltd
testb
outsb
loope
sbb
mov
mov
ffree
cmpsb
and
repz
mov
cmp
or
js
pushf
jns
fs
ja
push
push
add
das
and
cmp
fisubrl
repnz
pop
pop
gs
loop
sarl
mov
mov
inc
xchg
les
mov
push
xchg
hlt
xchg
ret
push
xor
or
mov
cwtl
sbb
or
jns
mov
pop
xchg
push
dec
fdivrl
jo
mov
or
sub
pop
jo
lret
inc
loop
sbb
mov
pop
fdivl
xlat
pop
cmc
add
cld
cmp
xchg
adc
pop
adc
jno
mov
movsl
lds
xchg
rcll
rol
inc
popf
das
sub
sbb
aam
cmpb
cmp
mov
adc
cld
pop
je,pt
dec
pop
fnstsw
push
cmp
fs
jo
dec
test
loope
ja
xor
xchg
in
and
jns
mov
jmp
push
lcall
cmp
cmp
cmpsl
jb
and
hlt
inc
bound
push
jge
insb
sbb
clc
dec
cmpsb
dec
and
out
movsb
add
fisttpll
psrld
xlat
xlat
jecxz
outsl
inc
inc
push
frstor
xchg
repz
dec
ja
ret
xchg
in
jle
or
cmpsl
ret
push
int3
sti
in
add
or
dec
mov
ja
push
pop
xchg
ss
and
mov
fwait
out
pop
inc
xor
rorb
enter
out
xor
in
loopne
jne
inc
les
inc
popa
cmp
xchg
ljmp
insb
cld
outsl
and
pop
xor
xchg
es
or
fstl
fisttpl
lcall
push
insb
push
ljmp
adc
js
or
jb
mov
xchg
jns
sahf
xchg
cmpb
stc
jae
add
into
cltd
cld
push
movsl
jge
mov
sbb
dec
and
imul
sbb
add
sub
push
add
xchg
mov
lods
push
sarb
out
xchg
and
out
fbld
hlt
dec
push
push
mov
or
testb
cmpsb
push
inc
mov
outsb
mov
in
push
pop
data16
mov
shr
jo
push
cli
inc
mov
int
cmp
sub
leave
push
pop
cltd
addr16
xchg
inc
xchg
negl
xor
cmp
adc
ds
mov
dec
inc
sub
xchg
leave
jns
iret
inc
lret
dec
std
add
test
std
fwait
decb
in
sahf
xlat
pusha
push
pop
insb
jge,pt
jo
adc
inc
dec
jae
inc
xor
cld
jae
push
ror
aaa
inc
and
pop
hlt
aaa
scas
push
or
dec
mov
inc
push
sub
jno
movsb
cmp
lods
bound
mov
pop
mov
lods
cwtl
cmpsl
sbb
jl
fcompl
pop
outsb
push
fstpt
jnp
add
lahf
mov
fs
push
sbb
pmaxsw
addr16
test
and
mov
mov
mulb
xor
gs
mov
js
mov
cmpsb
cmp
push
push
aas
aaa
cmp
cmp
sbb
or
lret
cld
ja
bts
lods
es
addl
dec
out
push
mov
pushf
adc
int3
jb
iret
leave
xchg
xor
iret
fldt
addb
out
les
inc
wbinvd
inc
mov
stc
sbb
nop
fidivs
sub
push
in
arpl
pop
xchg
orb
test
dec
dec
cli
mov
in
push
dec
inc
xor
push
pop
in
add
pop
mov
stos
push
aad
inc
xchg
dec
push
fldz
jle
jnp
or
sub
xor
mov
add
imul
fidivs
aas
inc
aaa
xor
add
push
inc
push
adc
ret
jo
outsb
cmpsl
mov
xchg
sbb
inc
pop
pop
xchg
popl
sbb
shlb
jno
add
push
sti
xor
jecxz
fdiv
adc
icebp
push
sbb
inc
into
mov
add
lea
sbb
shll
push
xor
inc
fsts
ret
bound
mov
stos
das
imul
addr16
inc
ret
mov
ss
cmpsl
dec
inc
adcb
orl
cltd
stos
mov
fcompl
sahf
jp
enter
jae
push
ret
aam
sbb
pop
jb
into
pusha
vrsqrtps
push
lret
xchg
stc
mov
scas
pop
mov
nopl
negb
adc
fwait
jno
dec
xor
adc
inc
ds
xchg
mov
and
jmp
imul
push
sti
test
out
int
aaa
psadbw
cs
popa
arpl
lea
cli
sarl
jecxz
dec
jg
mov
push
int3
lods
mov
cmp
jb
lret
push
push
lods
adc
int3
xor
xor
popf
inc
out
cld
iret
mov
nop
mov
jo
mov
repz
imul
mov
push
xchg
and
and
imul
inc
inc
scas
je
pop
test
sub
pop
xor
sbb
jae
ss
stos
pop
int3
nop
mov
out
push
sbb
adcb
les
lret
faddl
clc
sub
jle
je
test
cltd
xor
inc
or
jl
xor
add
in
cmp
xlat
push
push
aad
imulb
push
xor
int
movsb
mov
ds
icebp
mov
stos
popf
cmp
pusha
inc
es
xchg
movsl
ss
frstor
test
enter
nop
les
es
push
loopne,pt
ja
out
sahf
xor
mov
add
in
add
dec
fimull
mov
inc
mov
push
sub
mov
js
incb
sbb
jl
pop
jp
or
dec
sub
cmp
data16
and
shrl
test
mov
and
adc
cmp
sbb
adc
lcall
push
iret
leave
pushf
pop
jecxz
cmp
les
cs
pop
pop
sahf
ficompl
insb
or
mov
jb
mov
sub
mov
call
loopne
outsb
daa
sbb
xor
jmp
jns
mov
xchg
push
pop
xchg
dec
stc
clc
adc
push
jne
aam
mov
sub
notl
or
xlat
add
or
dec
xor
mov
mov
outsl
sti
test
mov
or
andb
pop
or
lods
and
test
in
out
xor
inc
aas
ficomps
cli
adc
mov
lahf
ficompl
stos
stos
fcoml
pop
lcallw
xchg
ja
inc
and
fcmovnbe
das
rcr
frstor
out
fucomi
frstor
xor
mov
loop
ja
xor
test
gs
dec
xor
pop
and
ds
pop
xchg
push
insb
push
xchg
sbb
or
ud0
test
cli
mov
jmp
aaa
sahf
fnstenv
popa
lret
cmp
xchg
inc
jns
dec
xor
repz
mov
pop
addr16
sarl
add
sysret
std
stc
jne
sub
xlat
test
inc
dec
mulb
ds
push
mov
xchg
push
cmpsb
push
mov
pop
inc
push
repnz
bound
sub
test
jne
pop
leave
andb
sub
xor
pop
xchg
sbbl
or
fisttpll
jbe
add
xor
jmp
xchg
and
cmp
aaa
pusha
and
in
cs
lock
ljmp
fcoml
and
nop
cmp
mov
and
cmp
mov
out
rorl
pop
mov
lods
jge
shr
mov
push
add
mov
sbb
pop
pop
rclb
xchg
or
iret
addr16
sub
xlat
dec
push
jno
mov
cmp
add
jecxz
adc
daa
mov
xchg
add
ljmp
xor
mov
lods
jge
mov
mov
ficomps
jg
push
mov
aam
jo
xor
outsl
dec
jg
outsl
movsb
add
popa
jecxz,pn
mov
leave
es
xchg
mov
and
nop
pop
sub
jno
ds
xor
jg
iret
addl
out
jle
add
inc
pop
jns
std
lahf
jg
xor
add
and
mov
xchg
dec
xchg
mov
repnz
push
and
out
add
and
fucom
and
push
pop
lret
mov
sbb
xlat
sub
insl
mov
cld
std
xor
mov
push
lret
popf
push
lds
xchg
adc
xchg
add
push
jae
sub
mov
jae
lds
adc
xchg
aad
fcoms
dec
in
adc
push
add
int
push
icebp
push
mov
mov
and
aas
push
nop
rorl
inc
and
push
pusha
nop
sbb
mov
inc
fildl
addb
pop
sahf
sbb
nop
call
fimuls
enter
fidivs
jp
nop
dec
mov
mov
or
popf
xchg
mov
ret
push
dec
loop
mov
mov
mov
mov
js
mov
xor
mov
sub
lods
xchg
dec
or
pop
or
jmp
les
ret
or
jno
sbb
xchg
lods
xchg
xchg
loopne
inc
xchg
jb
es
xlat
pop
sub
adc
inc
xor
cmpb
insb
loope
lea
cmpsl
add
dec
lods
xchg
fmull
ds
ss
mov
dec
add
lcall
in
cltd
mov
jne
mov
scas
pop
jns
mov
fcmovne
inc
dec
xchg
fsubs
inc
adc
fwait
enter
mov
mov
and
jae
fimull
dec
std
inc
jne
hlt
and
sti
xchg
pop
divb
lock
movsl
inc
das
mov
mov
adc
pop
inc
icebp
mov
loope
push
gs
stos
inc
test
enter
cmp
leave
stos
js
pop
xchg
sbbb
jge
call
scas
fwait
adc
test
into
mov
or
pop
test
dec
sarl
mov
jne
xor
inc
and
jle
mov
jp
cmovnp
jmp
and
rorl
lcall
adc
rcr
add
ret
adc
add
imul
cmp
inc
xchg
add
cmp
adcb
dec
out
mov
in
pop
adc
mov
repnz
cwtl
scas
pop
xchg
das
jb
in
sub
add
fistps
shrb
or
and
fisubl
lcall
fnsave
inc
cs
ja
mov
xor
daa
hlt
mov
dec
sahf
pusha
shl
lock
dec
fnstenv
pusha
lods
lcall
data16
cmp
xor
lods
or
mov
jb
jo
data16
cwtl
in
or
test
lcall
imul
xor
repnz
jo
gs
outsb
sbb
push
push
enter
push
cs
out
shll
mov
pushf
inc
jbe
mov
cmpsb
test
pop
es
into
and
cs
imul
loopne
fwait
pusha
inc
dec
mov
mov
jmp
jecxz
dec
jp
call
test
adc
int3
cmp
sahf
mov
jle
and
mov
repnz
cmp
push
push
adc
or
or
push
repnz
ss
aas
push
xchg
cmpsl
jo
push
in
out
push
adc
adc
sbb
jne
mov
adc
divb
dec
negb
out
orl
sub
xor
lea
add
les
xchg
ds
lods
testb
out
pop
xor
inc
dec
pop
mov
divb
push
loope
clc
add
mov
std
dec
int3
mov
dec
mov
sti
mov
dec
lret
stc
mov
or
jbe
jne
mov
flds
xor
bound
test
mov
out
insl
insl
lock
xchg
add
fcmove
inc
cmp
xchg
or
pop
mov
cwtl
pop
cmp
pop
jns
cmpsl
push
sahf
sub
sbb
push
push
or
jp
jne
adc
nop
pop
push
cmpsb
loopne
loopne
pushf
inc
dec
push
xor
xor
sbbl
cli
jge
or
lds
js
mov
jmp
xor
adc
xor
push
into
cmc
and
add
mov
xchg
jp
daa
or
cmp
mov
push
out
and
test
pop
mov
adc
jge
mov
movsb
push
rcll
sbb
imul
imul
xor
adc
push
xchg
sub
int3
and
or
leave
mov
out
insl
repnz
xor
mov
adc
test
push
enter
xlat
mov
mov
push
stos
cs
sbb
lcall
arpl
push
imul
mov
cmp
fcompl
jne
shll
and
divl
lods
jecxz
sub
daa
or
mov
cmp
or
xchg
push
push
outsb
movsb
sbb
lea
xor
test
sub
add
shl
mov
in
cld
pop
das
mov
rorb
push
inc
sub
out
jge
sbb
ja
and
jbe
or
js
outsl
dec
test
mov
fdivp
cs
cltd
iret
cmp
xor
call
push
push
adc
push
mov
jle
gs
mov
xor
mov
mov
or
dec
lods
and
mov
test
movsb
cld
in
in
adc
outsl
shrl
in
cmp
in
addl
push
je
lods
sub
push
pop
daa
cmp
fists
clc
pop
hlt
mov
fchs
jecxz
ds
fstps
ret
xchg
scas
push
adc
call
loopne
pop
ffree
ljmp
test
pop
cli
inc
sbb
cmp
add
out
cmp
andb
stos
imul
push
pop
jne
shrb
xchg
call
xchg
pop
pop
mov
loopne
nop
outsl
add
mov
mov
loope
stos
mov
out
ficomps
imul
mov
andl
bound
lcall
lcall
push
imul
ds
es
push
inc
bound
fimull
cmp
push
xchg
sti
fstl
call
mov
movb
jecxz
push
sbb
adc
sub
and
or
mov
mov
jne
xchg
adcl
test
jl
dec
test
push
and
pop
or
inc
mov
repnz
mov
daa
jl
lret
or
mov
sub
mov
pop
fnstenv
mov
lods
fdivrl
pop
sub
add
dec
push
or
in
daa
popa
pop
cmp
jle
xchg
and
mov
sbb
dec
movsl
das
outsl
mov
dec
mov
mov
ss
movsb
pop
add
lock
ficomps
mov
rcl
mov
sub
ret
xchg
in
ja
cmp
or
dec
into
in
xor
test
out
inc
lods
push
addr16
js
add
or
mov
cltd
mov
cld
negb
push
adc
sarb
ret
pop
inc
push
xchg
inc
xor
orl
cmp
icebp
in
mov
mov
or
cmp
dec
into
rol
sti
sub
xchg
add
aam
cmpsl
addr16
daa
mov
lret
jno
ror
cmc
or
jnp
dec
inc
or
sub
lock
adc
ret
adc
psrlw
mov
push
shll
inc
add
pop
adc
mov
int3
cmc
bound
adc
gs
pushf
fistps
adc
jno
cmp
push
insl
hlt
pop
lahf
inc
jle
loopne
jge
xchg
pop
outsl
add
ret
push
add
cmp
and
cwtl
or
call
movsb
cltd
dec
or
arpl
test
lods
xchg
mov
mov
addl
push
push
in
push
arpl
adc
inc
inc
push
push
dec
xbegin
cwtl
dec
mov
fs
aas
xchg
rorl
hlt
adc
js
cld
mov
fcoml
aad
xchg
in
fwait
mov
sub
or
bound
fmul
rclb
pop
add
xchg
pop
or
lea
xlat
mov
idiv
jle
lret
pop
sbb
jb
movsl
add
inc
cs
xor
inc
leave
pusha
push
aad
imul
fwait
dec
xchg
enter
test
movsb
inc
scas
aas
cmp
push
sbb
mov
pop
adc
fbld
popf
repz
pusha
out
xor
xor
fstps
fcmovbe
jns
sub
push
mov
xchg
xor
or
loopne
pop
leave
mov
incl
int3
insb
adc
imul
inc
fdiv
cmp
sti
sub
pop
sbb
sbb
aaa
dec
push
cmp
sub
adc
adc
jle
fistpl
jp
mov
cmp
andl
add
int3
ret
pop
pop
sarl
jmp
push
push
xchg
xor
int3
pop
and
outsb
lea
xorl
inc
push
movsb
pop
sbbl
pusha
fwait
mov
and
mov
lock
fnstsw
push
jb
inc
leave
repnz
jg
xchg
xchg
cld
cmp
inc
mov
and
hlt
sub
mov
mov
cwtl
dec
xlat
jp
movsb
jns
mov
adc
cmc
das
in
lock
in
sbb
cmpsb
pop
jno
adc
test
test
adc
shl
inc
inc
out
cld
flds
lods
subl
sub
test
sub
mov
xchg
add
cmpsl
shl
mov
jnp
cmp
aam
cmp
dec
inc
bound
loop
or
sub
mov
sub
mov
test
cwtl
leave
std
push
test
xor
mov
stos
cli
push
dec
jne
ficoms
sbbb
repz
pop
push
lods
cmpl
mov
xlat
or
gs
xor
xlat
push
push
push
test
lods
mov
pushf
aam
and
es
xchg
insl
jecxz
or
test
pushf
subl
or
loopne
ss
incl
jo
mov
loop
xchg
or
mov
cmp
mov
cmc
dec
and
icebp
test
movsl
cs
mov
iret
push
or
wrmsr
imull
mov
sbb
ret
cli
stos
lock
inc
xchg
pop
mov
xchg
and
lods
adc
rorl
scas
or
cltd
sub
or
andl
dec
out
icebp
pusha
ret
sbb
inc
push
or
xor
rorl
mov
imul
test
lret
and
in
mov
scas
lods
mov
inc
lea
outsb
mov
ficompl
lahf
pop
lea
adc
mov
rclb
xorb
push
push
cmpsl
jns
jmp
enter
sbb
aam
int3
sub
push
enter
fnsave
or
jb
sbb
jp
mov
clc
xorl
xor
xlat
addr16
sub
jg
enter
aad
dec
inc
push
jns
movsb
rcrb
stc
adc
in
addr16
loop
sbb
pop
into
jnp
xchg
cld
xchg
xchg
insb
movsb
sbb
xlat
cmpsl
push
push
xchg
xchg
inc
pop
insb
pop
inc
fimuls
arpl
or
fisttpll
movl
cld
pop
sub
cmp
xchg
add
xlat
cltd
repnz
add
inc
mov
lock
rcll
pusha
xchg
dec
in
and
iret
dec
stos
js
inc
sub
sub
lahf
adc
mov
and
in
arpl
pop
testl
sub
call
test
clc
or
negl
jg
std
lock
cmp
xchg
lret
pmullw
add
pop
jb
test
inc
cwtl
decb
xchg
mov
push
add
xor
call
jno
cmp
iret
push
sub
fstpt
filds
sar
mov
aad
sbb
add
or
xchg
mov
decb
add
push
es
cmc
dec
xor
div
dec
stc
jl
pop
push
xchg
in
push
xchg
add
bound
outsl
push
iret
sbb
inc
dec
mov
mov
adc
mov
adc
cmp
mov
outsb
jb
or
cld
cwtl
or
cmp
adc
gs
loope
loope
fdivrp
lahf
sbb
mov
xor
outsl
adc
ja
mov
add
cltd
sbb
mov
sbb
sahf
loope
in
push
imul
or
jno
test
and
xor
ret
cmpb
mov
mov
leave
jnp
xchg
jns
pop
pop
xchg
mov
push
mov
inc
mov
sti
int3
outsl
cmc
es
andb
mov
cli
push
xchg
jae
loope
gs
dec
adc
mov
fsts
mov
sti
andl
inc
scas
jle
mov
ss
jmp
mov
or
dec
push
ss
comiss
hlt
and
lret
mov
push
test
mov
sub
push
or
lods
sarb
xchg
movsl
lret
mov
inc
jnp
mov
loope
and
lods
and
cmc
pop
push
xchg
fsubrs
sbb
mov
push
fiaddl
inc
cmp
inc
sub
lods
out
shl
cmp
mov
repnz
sbb
pop
jo
mov
add
cmc
push
mov
adc
or
stc
dec
sbb
icebp
fisttps
push
stc
inc
adc
dec
dec
jge
icebp
fcmove
inc
jg
out
jg
jmp
jecxz
dec
push
cmpsl
or
jo
daa
movsb
sbb
xor
les
ss
lahf
out
sub
sarb
sub
jmp
push
mov
dec
ljmp
xchg
arpl
add
adc
sbb
pop
test
stos
sbb
mov
repnz
std
lea
dec
xchg
mov
pop
jmp
push
popl
leave
loop
lcall
loopew
mov
mov
mov
fcoms
stos
adc
cmc
mov
fdivp
int
xchg
xor
fimuls
outsl
push
stc
xchg
aas
and
ja
and
arpl
add
mov
mov
shlb
out
jge
and
aad
push
loope
fcomi
cmp
incl
jb
cld
dec
jmp
ret
in
inc
push
in
jle
repz
cmp
out
mov
pop
xchg
jecxz
bound
pop
test
popf
adc
mov
loope
inc
and
test
aaa
jae
jae
mov
mov
insl
in
xchg
fstpl
sbb
and
and
clc
mov
repz
stos
adc
dec
ds
mov
mov
ret
cmp
jae
repz
loope
addb
loopne
ficoml
mov
jl
dec
mov
repnz
xchg
ljmp
fwait
dec
insb
xchg
aam
xchg
sbb
gs
jp
sbb
mov
xor
cmp
lea
xor
aaa
lods
jns
xchg
leave
adc
fildll
insb
lods
lret
loop
sbb
test
aas
dec
hlt
jns
mov
ja
stos
shr
ret
jns
sub
fldl
out
add
scas
aam
icebp
in
les
mov
pop
ret
xchg
xor
xchg
and
cmp
pop
inc
xor
mov
leave
cmpsb
jno
or
mov
and
ljmp
pop
cmp
arpl
jge
in
push
jp
lret
inc
outsl
popf
std
icebp
or
sub
cmp
shrl
sbb
fldcw
mov
mov
jg
xchg
mov
jg
push
js
xlat
cli
pop
enter
aas
jne
sub
sbb
jg
sub
sub
adc
rolb
sub
hlt
icebp
int
mov
push
ds
pusha
shll
lret
iret
and
sub
push
dec
popf
adc
cmp
ds
mov
xchg
xchg
loope
psubusw
jmp
sbbb
add
adc
insb
ja
xchg
jno
movsb
iret
push
loopne
mov
push
mov
push
and
or
cmp
lahf
insl
mov
enter
dec
es
mov
mov
movsb
lods
lea
jnp
insl
push
pop
fwait
pop
bound
push
std
into
sbb
jle
stos
xchg
and
nop
or
adc
insb
out
dec
ljmp
out
xchg
mov
mov
add
adc
sub
test
les
movsl
lods
aam
dec
pop
ret
mov
push
push
in
mov
inc
and
and
xchg
adc
loope
xor
test
popa
sub
imull
sub
outsl
mov
lock
bound
test
aaa
test
fwait
xor
cmp
pop
nop
lods
add
out
sub
xor
mov
je
sub
shlb
rclb
call
push
xchg
es
pop
stos
pop
and
or
pop
push
mov
mov
adc
dec
enter
sub
lahf
mov
outsb
pop
clc
mov
mov
aad
test
lods
dec
popf
addl
pop
aas
inc
fs
jmp
mov
xlat
sbb
or
jo
xchg
or
or
scas
test
loopne
sbb
xor
pop
xchg
clc
in
inc
push
pop
add
into
shll
mov
sbb
imul
dec
push
scas
xchg
cmp
pop
push
lds
rcrb
aam
loop
insb
mov
mov
mov
scas
adc
pop
pmaddwd
push
and
jbe
mov
aas
outsb
lahf
es
mov
movsb
lock
jnp
jno
jl
icebp
sub
or
lods
and
pop
call
pop
test
jg
xchg
mov
fcmovu
cmp
fbstp
or
pop
jp
fsts
in
adc
dec
stos
xchg
dec
popf
jno
lret
cs
scas
sbb
mov
test
jbe
xor
in
inc
mov
adc
mov
add
inc
push
inc
sar
outsl
jne
sbb
push
cmp
sub
jae
out
sub
jecxz
insl
inc
fisttps
pop
movsl
cwtl
lcall
test
fdivrp
sbb
cmc
mov
cmpsb
xor
xchg
push
popf
mov
in
jp
pop
push
inc
ss
fisubl
lcall
adc
cmp
out
push
int
jb
rcrb
jnp
popl
add
pop
cwtl
dec
fcoml
sbb
xchg
inc
add
or
inc
std
xchg
or
jbe
imull
mov
pop
scas
adc
out
fwait
rorl
sbb
leave
mov
test
insb
mov
jo
addr16
fisttpl
ja
cltd
clc
cmp
cmp
xchg
pop
stos
in
cs
and
in
xchg
mov
cmp
push
decb
lods
xor
add
addl
lock
les
jno
out
lds
cwtl
pop
jmp
pop
adc
pop
adc
lock
movsb
mov
dec
xchg
ret
push
push
xor
push
inc
push
mov
and
js
lret
lds
cwtl
bound
aaa
sub
shlb
sti
idivl
xor
dec
or
sbb
sahf
pop
pusha
mov
fistpl
inc
ss
repnz
out
pop
adc
lret
sub
xchg
shr
divb
mov
in
imul
adc
dec
loopne
xchg
or
lret
into
ss
cmpsb
enter
adc
loop
sbb
lds
dec
mov
sub
loop
ret
mov
outsl
mov
fwait
and
popa
mov
test
sti
adc
aaa
jl
icebp
xorb
stos
mov
in
inc
inc
add
xchg
add
testb
ret
pop
mov
xchg
dec
lret
dec
push
and
pop
in
sub
xchg
dec
jmp
sbb
push
or
and
andl
nop
adc
scas
cmp
mov
add
std
mov
mov
les
pop
or
mov
sbb
mov
mov
xchg
mov
in
inc
pop
sub
test
in
pop
xchg
call
repz
bnd
mov
rcr
cmp
int
test
in
push
addr16
lret
rorb
js,pn
in
mov
push
xlat
js
shlb
lret
sbb
mov
pop
data16
dec
scas
popf
pop
aas
ficompl
sahf
xchg
add
aaa
je
cmc
leave
or
cmc
mov
push
xlat
push
cli
je
shll
dec
roll
int
mov
insl
movsb
fcomps
dec
outsl
xor
xlat
inc
test
sbb
pop
mov
int3
ja
or
sbb
mov
jb
add
xchg
cld
insl
mov
mov
rorl
jp
mov
mov
addr16
or
sbb
hlt
xchg
lds
sarl
test
push
push
ret
outsw
mov
pop
cs
outsb
clc
xchg
icebp
ja
xchg
testb
lods
popa
pop
jnp
jge
xchg
movsb
pop
mov
cmp
sub
pop
std
ds
and
scas
daa
imul
and
loopne
jmp
mov
jb
mov
imul
xchg
pop
call
cmpsl
aas
insb
in
dec
jns
scas
mov
popa
adc
add
out
push
xchg
shrb
mov
xchg
fwait
nop
mov
cmp
xor
les
push
je
dec
mov
cmc
shlb
push
sti
lea
or
cmpsl
ja
pop
movsl
mov
xchg
or
outsl
adc
fsubrs
ja
jbe
pushf
push
push
movsl
adc
pop
rol
enter
lret
rcl
xchg
fcompl
adc
push
lcall
xor
lahf
fsubs
inc
cmpsb
fsubrs
xchg
fisubs
bnd
xor
fbstp
pop
cmp
and
sbb
pop
pop
mov
push
ja
dec
js
movsb
stc
icebp
pusha
and
inc
sub
je
sub
fistpll
and
test
xor
adc
popa
mov
or
dec
push
push
add
push
dec
jg
jecxz
pop
and
xor
or
cld
push
adc
adc
jns
mov
cmc
jae
rorl
cs
sbb
repnz
inc
mov
xchg
dec
or
lock
ret
fs
pop
lret
insb
aad
jae
pushf
or
mov
or
lret
push
mov
mov
enter
or
scas
inc
xchg
sub
ficompl
sbb
sub
insb
mov
jecxz
pop
popf
mov
sbbb
dec
daa
dec
cltd
add
shrb
push
jmp
sub
and
rcrb
sub
pop
out
andl
out
cld
and
fucom
icebp
mov
or
icebp
movsl
push
jp
out
push
enter
ds
and
mov
sub
addl
daa
push
sbb
pop
imul
jmp
lods
mov
or
lds
jg
dec
xor
adc
cmc
ret
fwait
rcll
pand
pop
js
insb
mov
pop
pop
xor
jns
mov
mov
pop
stos
inc
mov
and
lods
mov
arpl
push
mov
push
cmc
xor
push
nop
jne
or
xorb
inc
int
sub
ja
bound
sbb
clc
aas
or
shl
pop
subl
add
test
push
shrl
xor
and
incl
test
push
cltd
sbb
mov
jmp
jg
daa
sarb
jne
in
fnstcw
imul
cmpsb
imul
aas
cmpsl
fisubrs
lods
cmp
sub
xchg
decl
cmp
mov
lret
loopne
imul
push
jo
pop
cmpl
mov
and
test
push
sub
cmp
sbb
dec
xchg
mov
inc
pop
enter
movsb
adc
jmp
jle
cmpsb
data16
dec
push
mov
imull
cmpsb
or
cmp
adc
adc
fsts
add
stc
mov
mov
pop
sar
nop
in
hlt
pop
or
sbb
mov
aad
push
push
dec
icebp
incb
lods
xor
insl
test
paddusw
jp
xchg
lea
jmp
in
add
mov
jmp
xchg
stos
xor
push
aas
jnp
and
iret
pusha
mov
negb
cmpsb
out
dec
xchg
mov
xlat
inc
cmp
push
xchg
push
cmc
addr16
and
adc
or
pop
repz
cwtl
mov
pop
stc
pop
or
lahf
ja
loop
dec
fwait
sub
jnp
mov
rcr
mov
out
adc
xchg
dec
cmp
ljmp
arpl
push
sbb
in
test
xor
xlat
inc
adc
add
mov
aam
push
pop
fst
pop
push
roll
daa
add
ficoms
push
sbb
push
push
hlt
pusha
and
lcall
and
sahf
push
cmc
mov
test
dec
cmp
aaa
mov
lea
inc
into
adc
fisttps
add
jb
xlat
outsl
mov
insb
add
mov
es
inc
aaa
xor
call
test
jbe
sbb
ret
mov
enter
out
cltd
in
mov
out
cs
mov
sbb
mov
add
mov
out
sbb
add
push
test
pop
jns
pop
hlt
jne
push
inc
pop
imul
inc
pop
stos
add
dec
or
mov
jno
jl
inc
mov
ror
js
or
push
andb
jmp
gs
jne
fsubl
push
mov
addb
dec
push
jne
and
sbbl
cmp
adc
cli
cmpsb
in
add
mov
int3
nop
push
and
jae
jmp
push
ss
cmp
dec
shll
sub
pop
lahf
and
and
push
lea
jne
insl
push
test
imul
and
addl
ss
arpl
mov
loopne
aam
lea
cwtl
movb
insb
out
xchg
push
mov
jmp
sub
or
and
ret
add
sbb
or
shll
adc
jno
fwait
push
jae
xlat
test
mov
pop
xchg
dec
mov
ficoml
push
int3
sbb
call
push
push
mov
dec
or
cwtl
lret
xor
jl
or
jp
inc
add
cmp
xor
insb
out
jp
dec
or
push
mov
fmuls
push
out
or
movsb
in
scas
inc
xor
fwait
fs
mov
xchg
out
popf
push
jl
addl
scas
stc
sub
mov
cli
add
movsl
sub
js
into
or
xor
mov
mov
pop
rcll
jo
jbe
xchg
nop
xchg
outsb
xor
add
or
mov
cld
ljmp
fdivrl
addr16
mov
fwait
mov
shrb
aam
xchg
icebp
pop
mov
fwait
add
and
push
dec
rorl
out
bound
test
mov
sbb
bound
lods
sub
dec
sbb
cmp
or
les
lret
jno
add
sub
jnp
pop
xchg
xchg
xchg
outsb
adcb
cld
sbb
mov
lret
repz
xchg
add
lret
scas
imul
dec
mov
adc
cli
sti
xchg
dec
lcall
je
scas
dec
mov
in
xchg
shlb
ljmp
das
es
into
dec
addl
jg
shrl
fldcw
in
ret
in
stos
inc
jge
es
inc
xor
mov
lods
inc
jo
dec
or
movsl
mov
add
jae
pop
mov
cmpsb
xor
out
xchg
repnz
mov
mov
mov
dec
push
inc
add
jbe
add
out
ja
adc
mov
daa
and
stos
int3
je
xchg
enter
gs
xor
mov
mov
cmp
mov
lahf
clc
pop
in
orl
mov
jmp
test
cmc
insb
jne
jp
pop
fisubl
mov
pop
and
stos
mov
push
adc
cli
testb
out
xor
in
movsl
scas
add
sbb
and
mov
fs
inc
adc
adc
xchg
std
into
jo
cwtl
divl
lcall
push
dec
pop
mov
outsb
and
push
and
ret
test
jmp
jb
jle
pusha
stos
divb
scas
call
inc
push
lahf
jno
adc
hlt
pop
cli
pop
mov
das
loop
ss
loope
pop
aas
rorl
jmp
fcoml
fs
jmp
dec
dec
insb
pop
push
test
jle
jbe
push
jmp
push
sub
and
push
add
mov
xchg
mov
xor
rclb
faddl
mov
lods
fdivrs
mov
xchg
and
sbb
imul
stos
push
jno
jo
arpl
mov
scas
or
xchg
push
pop
dec
test
ret
test
clc
xchg
sub
push
sbb
stos
push
cmpb
or
dec
sub
shlb
sbb
mov
xchg
std
ret
sub
mov
les
mov
cmp
into
push
adc
in
fiadds
inc
mov
dec
stos
loop
cmpsl
rcl
divl
mov
fcoml
mov
shl
pushf
inc
in
shr
fcoms
les
add
cli
pop
add
mov
inc
in
fildl
cmp
cs
add
mov
cmp
das
lea
insl
addl
xchg
pop
and
imull
rorb
pop
push
rcll
or
popf
inc
mov
adc
rcll
test
fsub
jg
and
add
and
outsl
dec
cld
mov
mov
addr16
jb
cmpl
mov
aaa
inc
daa
xor
mov
xchg
int
in
and
js
push
xchg
clc
pop
adc
clc
repz
repz
lret
lcall
xchg
lahf
and
xor
repnz
cs
jecxz
jnp
add
or
or
pop
pop
fcoms
sbb
and
add
xchg
mov
adc
roll
adc
push
std
imul
push
inc
xchg
and
pop
fnstenv
gs
int
jmp
stos
bound
mov
pop
repnz
orb
xchg
xor
sub
mov
js
je
sbb
rcrb
jbe
mov
arpl
sti
push
in
test
lcall
sarl
sbb
cmp
jl
push
and
scas
add
in
pop
mul
lcall
mov
insl
xchg
sub
imul
add
dec
push
stos
mov
int3
push
xchg
mov
shrl
sbb
or
daa
jmp
out
out
fidivl
sbb
out
dec
lcall
lds
fcompl
addr16
jb
xchg
lahf
loope
cmp
mov
xor
out
xchg
or
in
fldt
imul
dec
jne
sbb
jbe
stc
addr16
js
out
mov
insb
xchg
pop
pop
add
into
out
adcb
test
daa
adc
clc
inc
icebp
add
movups
push
cmp
xchg
in
movl
push
push
sub
xlat
aas
sub
aas
cmp
add
pop
lods
mov
sahf
cmp
inc
mov
data16
leave
fcoms
mov
in
sbbl
and
popf
add
xchg
imul
cld
bound
test
and
les
mov
and
jp
dec
cmp
jae
mov
outsb
lcall
xor
repz
cmpsl
jo
or
mov
xchg
xchg
push
jge
mov
call
outsl
sbbl
call
or
les
adc
adc
mov
fcmovnu
shlb
ja
cmpsb
jo
mov
sbb
repnz
xchg
into
jge
stos
xchg
dec
rep
jl
adc
xor
mov
inc
mov
jp
push
cwtl
loopne
jp
ljmp
inc
inc
sub
pop
loope
fsubs
stc
aam
popf
stc
xchg
pop
out
add
cwtl
daa
mov
cmp
pop
xlat
hlt
pushf
ss
xchg
loope
jmp
fldl
xor
jmp
inc
lods
out
sub
inc
stc
add
roll
insb
pop
fucomp
mov
xchg
inc
adc
lds
insb
out
ljmp
push
cld
and
stos
fwait
and
cld
lahf
push
cli
inc
je
in
cmp
aam
sub
lods
pop
out
and
out
hlt
push
mov
xchg
cmpsl
mov
repnz
mov
xor
cmpsl
jb
iret
test
and
mov
cmove
xor
loope
push
xor
stos
and
pop
xchg
push
cmpb
iret
and
loopne
rcrb
gs
fwait
pop
jne
les
push
popf
jno
cmp
in
mov
scas
test
xor
ret
push
mov
fildll
jecxz
cs
call
notl
adc
loopne
cmc
mov
inc
or
repnz
rorl
lret
mov
jne
push
mov
int
mov
lcall
mov
ljmp
xchg
pop
lret
pop
or
sub
jmp
xchg
cmc
aas
jmp
and
shlb
or
sub
cmp
in
push
rol
jle
arpl
jge
jmp
les
lcall
inc
cs
push
jo
ss
inc
rcll
int3
mov
xor
dec
push
rorb
xchg
dec
iret
and
pop
jns
xlat
std
push
jo
pop
or
call
push
stos
or
xchg
and
lds
pop
daa
xorb
dec
sub
pop
sub
ds
jl
jb
jl
cmp
xchg
xchg
mov
cmp
jo
push
cli
push
lock
dec
insb
mov
sub
jl
jg
loope
cmp
cmp
roll
jne
pop
cmp
pop
das
or
pushf
pop
xchg
mov
das
mov
js
cli
mov
xchg
jbe
jnp
adc
call
mov
mov
xor
pop
dec
mov
iret
aad
ja
cld
sub
xor
xor
aad
shrl
or
fildll
movsb
push
shrb
arpl
pop
mov
cmc
xchg
nop
orl
arpl
stos
aam
fidivl
ljmp
xchg
lea
mov
jle
jns
jmp
pop
or
aas
jno
imul
in
sahf
ja
sbb
pop
ret
xor
pop
inc
sbb
dec
stc
sbb
jae
cld
sub
xchg
sarl
dec
daa
lret
sbb
cmpsb
mov
cmp
xor
in
aas
or
adc
mov
adc
std
jbe
test
pop
je
loopne
inc
mov
xchg
roll
jmp
lahf
and
and
decb
lret
lock
jecxz
xor
pusha
or
adc
jno
or
push
push
xlat
stos
xor
and
sub
dec
mov
xchg
mov
or
cmp
test
push
jbe
cmp
ret
jmp
jnp
and
and
jo
out
jae
xchg
into
mov
mov
mov
pop
leave
mov
sbb
sub
rcrb
ds
pop
push
jbe
lret
push
jno
lret
inc
inc
imulb
out
cmpsb
pop
dec
mov
mov
inc
iret
gs
jmp
mov
jp
loope
insb
pushf
mov
mov
insb
dec
inc
jb
jne
and
jle
pop
xchg
call
pop
test
push
cmpl
cmp
out
inc
dec
mov
sub
outsb
and
jecxz
or
jp
sahf
and
cld
insl
push
xchg
int
pop
mov
aam
pop
cld
or
sarb
push
pop
out
js
mov
lcall
or
jle
mov
std
lahf
das
mov
pop
out
xchg
mov
outsl
and
jne
fnstenv
adc
movsl
cmovbe
xchg
sbb
xchg
movsb
jl
or
xchg
loop
sbb
and
cmp
push
fs
or
inc
mov
xchg
jl
loop
fistpl
insb
cmp
dec
mov
mov
fistpll
nop
sub
lods
stos
sub
dec
inc
bound
pop
xor
shrl
movsl
pop
lea
push
cmp
push
add
inc
inc
lock
cwtl
xlat
cmc
sbb
insl
xorl
pop
dec
jmp
ss
xchg
push
out
jp
mov
ss
cwtl
add
pop
xchg
shlb
cmc
loopne
add
std
cmpb
fldt
or
jge
in
mov
enter
mov
dec
adcl
push
push
ja
mov
jo
dec
int
sbb
push
addl
sub
xor
cmp
sub
xchg
push
jp
inc
data16
mov
mov
out
stos
in
ja
dec
xchg
mov
dec
mov
cmp
jo
dec
icebp
mov
out
adc
dec
loop
sub
cli
mov
xorb
add
stc
fwait
mull
dec
push
les
and
xchg
jl
sbb
fisttps
loope
jmp
andl
mov
sbb
dec
mov
gs
jae
xor
push
sahf
or
sub
daa
call
imul
adc
lods
mov
push
fisubrl
dec
mov
mov
movsb
pushf
xor
rcr
in
xlat
or
xchg
ss
jle
ret
iret
lods
xchg
mov
out
in
cmc
fsubrl
jo
jl
gs
cmpsl
sbb
and
cmpsl
and
push
cmp
cli
push
pop
sbb
idivb
jns
dec
adc
inc
cmp
dec
sbb
or
mov
adcl
push
in
loop
adc
fwait
pshufw
xor
and
inc
mov
or
jns
test
xchg
fcmovnbe
fldenv
cwtl
mov
imul
ja
mov
pop
sub
xorl
stos
add
das
mov
xchg
pslld
push
xor
orb
repnz
ljmp
test
xor
dec
push
std
push
jb
sbbl
cmpsb
jae
mov
sbb
movsl
xlat
cmpsb
inc
inc
in
push
faddp
jne
clc
dec
inc
cmp
pushf
push
jg
inc
sub
fisubrl
jmp
inc
push
sahf
sub
xorl
xchg
call
inc
lret
mov
or
pop
mov
lea
push
imul
mov
divb
testl
in
scas
mov
adc
sti
cwtl
mov
les
sar
xor
xor
js
jmp
cmpb
bound
jmp
pop
jge
or
sti
xor
mov
insb
popa
push
push
out
mov
fcoms
mov
fmulp
add
jb
xchg
cld
out
and
xchg
mov
xchg
iret
fyl2x
xlat
push
jge,pn
add
adc
or
nop
stc
inc
cmp
das
lods
sti
mov
stc
lahf
test
push
jnp
inc
pushf
das
mov
int3
rolb
cmp
es
outsb
daa
rorb
mov
std
pop
jl
jecxz
subl
lahf
and
loopne
jmp
enter
fdivs
aad
jle
cmp
push
aad
ffree
arpl
mov
fldl
adc
dec
add
jo
in
dec
pop
push
adc
mov
and
jecxz
mov
mov
cmp
sbb
or
push
rolb
out
mov
pop
enter
cld
cmp
add
adc
pop
rorb
mov
clc
fwait
aaa
and
repz
jno
pop
pop
sahf
std
inc
sbb
jge
pushf
xor
jecxz
mov
jo
aas
sti
xchg
lods
in
add
nop
les
push
cmp
clc
jl
ret
mov
into
movsb
out
arpl
xor
mov
sahf
lret
and
popl
mov
mov
and
loop
adc
mov
lods
cmp
mov
pop
iret
gs
clc
and
sub
fsubrl
sbb
into
ja
push
int
es
push
in
out
cwtl
sbbb
cmpsb
inc
rol
lods
and
cmp
les
xchg
cs
xor
ficompl
scas
dec
inc
gs
jo
bound
xor
daa
lret
ljmp
adc
xlat
jl
fdivr
cmp
fistpl
xor
out
xchg
aaa
arpl
xchg
jnp
push
mov
loopne
and
sbb
out
movsl
in
cmpsb
rorl
push
jo
test
inc
aas
add
push
pop
lods
cmp
dec
das
mov
adc
popf
test
and
xchg
dec
gs
sahf
lock
xchg
adc
ja
roll
cmp
add
jns
mov
or
andl
dec
xor
or
cli
jg
cmp
les
or
sub
loop
cmp
loop
pop
sbb
insb
dec
testb
inc
and
mov
outsb
adc
imul
outsl
test
and
push
pop
push
repz
xor
push
mov
test
icebp
sbb
dec
movl
cmpsb
jne
ficoms
data16
pushf
mov
sbbb
or
jge
xchg
xor
adc
es
repz
add
rorl
xchg
jp
test
ds
jmp
mov
repnz
dec
push
cmpsl
or
cltd
iret
pop
xchg
jne
sbbl
mov
bound
xor
xlat
divl
mov
and
je
or
lcall
inc
jl
insl
fs
mov
mov
xlat
lock
adc
ds
add
jp
push
and
dec
loopew
push
dec
sbb
fldl
jno
mov
leave
pop
xchg
adc
jl
movsb
fistpl
xchg
pop
gs
out
clc
sub
xchg
xchg
hlt
icebp
shll
push
xlat
pop
js
pop
outsb
repz
lahf
int
imul
push
add
and
ret
in
mov
xchg
xor
or
xor
gs
and
shlb
in
aam
inc
lods
jnp
adc
xchg
xchg
dec
push
lmsw
inc
jp
int
pop
cmpsl
fldenv
rcrb
int3
fiadds
inc
js
cli
xor
mov
scas
sbb
mov
mov
adc
movsb
arpl
add
xor
mov
mov
mov
inc
jns
shlb
data16
push
sub
xorb
pop
nop
iret
data16
jl
xor
or
and
clc
divl
aas
sbb
call
mov
pop
jmp
outsb
and
add
mov
jb
mov
add
insl
lds
out
fists
inc
or
push
std
pusha
lahf
and
mov
xchg
andl
andb
outsb
sbb
outsl
mov
imul
pop
and
sahf
mov
xorb
shr
xchg
push
and
iret
jno
sub
aas
add
inc
movsl
push
gs
pop
sbb
and
push
add
sbb
push
xchg
cld
sub
pop
adc
dec
adc
cmpsb
mov
mov
adc
es
and
test
pushf
lcall
dec
shll
push
neg
jae
jnp
inc
and
mov
push
jmp
push
xor
dec
imul
xor
dec
sbb
dec
out
repnz
call
fmuls
in
add
imul
aad
push
lea
sub
fldenv
ret
xchg
jae
add
call
ljmp
pop
add
fwait
dec
dec
mov
sbb
lea
mov
dec
popf
pop
rolb
jns
mov
pop
jns
js
mov
inc
mov
int3
or
jne
jl
int
out
shrl
xchg
jge
sbb
mov
push
lcall
jnp
addl
adc
sub
lahf
orb
mov
imull
push
call
mov
ds
push
adc
dec
mov
mov
pusha
push
ret
mov
mov
mov
lret
sub
and
jbe
mov
or
fwait
sbb
int3
cmpsl
arpl
jecxz
notb
popf
gs
pop
cmpl
and
fcmovnb
outsl
add
aad
pusha
in
clc
mov
and
incb
mov
outsl
mov
cmp
cmp
shrb
shlb
pop
out
push
pop
xchg
fucomi
test
lret
adcl
shl
loope
call
jae
dec
pop
outsl
jo
sub
cmpsl
dec
cmc
clc
icebp
test
cmpsb
pop
scas
dec
xchg
adc
in
call
mov
xor
xor
aad
sbb
adc
xor
js
xor
adc
jae
ds
and
xor
cmp
push
out
push
jb
lcall
xchg
dec
insb
ret
adc
stc
or
repnz
xor
jns
lods
test
fisubs
loopne
mov
push
into
arpl
insb
rcrl
push
jle
mov
jg
xchg
jl
push
xchg
scas
sbb
xor
dec
jmp
bnd
hlt
pop
mov
rcrl
negl
xchg
mov
pop
aas
adc
push
mov
je
sbb
aad
filds
pop
js
test
adc
mov
stos
push
push
movsb
xor
outsl
pop
or
inc
inc
test
insb
push
test
xchg
lret
test
push
out
sbb
and
xor
add
addr16
in
icebp
xor
push
fmul
out
addr16
fdivrs
push
adc
dec
add
sbb
cmp
add
xchg
mov
sub
sbb
cs
popa
outsb
test
inc
or
decb
jno
lcall
popw
test
mov
dec
jge
orb
cwtl
insl
inc
sti
scas
shll
adc
pop
mov
push
and
pusha
bound
sbb
push
xchg
and
pop
lds
jge
in
lds
and
jno
adc
sti
out
mov
cli
pusha
inc
push
out
mov
push
add
dec
mov
xor
pop
sahf
xor
inc
xchg
jle
roll
std
lods
imul
pushf
mov
mov
lret
push
add
movsl
fsubrs
push
in
mov
add
sub
fsubl
loop
popf
or
mov
iret
add
mov
add
jl
aad
enter
movsl
jmp
fld
out
lahf
and
frstor
iret
cmp
pop
jg
adc
push
adc
cmpsl
adc
mov
mov
out
sbb
cltd
sbb
mov
fsubrs
lock
mov
enter
mov
cmp
imul
sub
xlat
pop
push
and
hlt
adc
or
jno
or
mov
xchg
inc
mov
dec
flds
jne,pn
es
or
fisttpl
call
popa
fnstcw
imul
cmp
shll
stc
dec
jge
out
xchg
decl
test
pop
xchg
pop
xor
lfs
test
dec
mov
cmpsb
loop,pt
adc
jg
aas
leave
add
imul
in
cmp
sbb
int3
xchg
xor
leave
jmp
mov
push
fimull
or
sub
jmp
outsb
push
loop
jecxz
cmp
and
or
fwait
sub
mov
rcr
popf
xor
mov
movsl
sarb
call
jmp
push
jo
cmpsb
sub
test
pusha
cli
and
add
shr
inc
mov
fcoml
call
std
mov
sub
and
shlb
push
dec
popa
sub
dec
cltd
into
cld
and
cs
arpl
xor
xchg
jmp
dec
lahf
pop
push
jg
mov
jbe
sbb
pop
enter
mov
imul
or
lret
fdiv
shl
xor
fdivl
les
push
aaa
lods
push
in
inc
xlat
ffree
leave
rcrb
xor
lret
in
adc
sub
cltd
xlat
mov
popa
ljmp
loopne
andl
aam
hlt
mov
daa
xor
cld
cmpsb
xchg
cwtl
inc
cmp
xlat
int3
adc
or
call
into
dec
gs
inc
lret
sub
sarl
add
dec
adc
cmc
sti
or
cmp
cltd
jmp
in
lret
dec
cmp
lock
ds
xor
add
add
push
lods
pop
insb
ja
add
ret
daa
dec
enter
push
mov
fwait
lds
nop
stos
std
jecxz
shl
push
add
jnp
fcoml
icebp
loop
mov
pop
push
mov
fistpll
push
add
call
pop
lahf
cltd
adc
imul
xor
push
adc
scas
dec
movsl
adc
mov
repnz
dec
fisttps
pop
inc
rcll
adc
and
loope
mov
fldenv
mov
or
add
cwtl
dec
dec
mov
push
and
adc
mov
call
inc
aaa
jle
xor
fisubs
mov
push
pop
push
mov
divb
fs
xor
jle
std
fidivs
nop
or
mov
sbb
fidivrs
push
dec
dec
shll
pushf
sub
xchg
lahf
lret
popa
jp
pop
dec
ret
sub
adc
or
loope
shlb
in
int3
dec
mov
adc
add
out
cmpsb
lods
idivb
xlat
push
mov
pushf
lds
hlt
mov
insl
int
cmp
icebp
push
movsb
fdecstp
jnp
push
mov
shlb
insb
xor
addl
dec
stc
fwait
mov
cli
jge
push
pop
push
mov
mov
add
stos
lret
mov
add
and
mov
cmpsb
add
jbe
pop
gs
adc
insb
repz
inc
jg
push
or
insb
bound
repnz
and
mov
jnp
inc
sbb
sbb
clc
mov
test
fiadds
cltd
loope
aad
dec
inc
cli
mov
fnstsw
lods
jo
sub
test
mov
inc
gs
and
or
rclb
mov
outsb
fistps
shrd
mov
mov
std
sub
jge
negl
addr16
gs
out
cmp
pop
xlat
adc
mov
in
xchg
ret
push
filds
mov
cld
pop
dec
mov
das
sub
lcall
sub
in
cmp
sarb
cwtl
mov
jae
aad
pop
and
sbb
daa
icebp
cwtl
add
lods
cmpb
aas
lcall
les
adc
or
sub
mov
inc
add
lahf
insl
icebp
push
fwait
dec
pop
adc
rcll
push
stos
sub
lea
outsl
frstor
loop
subl
loopne
outsl
adc
mov
and
es
fstpl
and
inc
pop
push
pop
jmp
cltd
movsb
jnp
xor
and
mov
in
pop
imul
movb
aaa
sub
dec
or
xchg
int3
sub
cltd
dec
mov
push
cmpsb
movsb
enter
aas
dec
mov
dec
xchg
mov
scas
mov
test
mov
pop
pusha
mov
scas
or
cmp
add
in
int3
call
cmpsl
stc
je
scas
aad
icebp
push
xchg
jl
cmp
xor
loop
cmpsl
mov
sub
adc
incb
xchg
cmp
jae
adc
push
push
fidivrl
cmp
mov
mov
cmp
inc
mov
pop
rorb
pusha
push
loopne
shl
mov
or
or
cs
add
adc
out
mull
popa
inc
int
inc
cmp
andb
push
xor
pop
pushf
dec
mov
xchg
dec
sbb
pop
out
sub
sub
mov
enter
out
out
push
std
pop
dec
inc
inc
scas
out
pop
int
pop
popa
fwait
mov
stos
push
push
sahf
jg
test
push
sub
mov
adc
push
jge
dec
cmp
cmp
and
ja
in
cmpsl
xor
faddl
sarl
mov
lahf
aaa
and
xor
xchg
sbb
jb
adc
push
push
es
mov
nop
mov
or
mov
mov
sub
movnti
or
sub
movsl
adc
cmc
jnp
and
es
xchg
jmp
xchg
inc
mov
jnp
mov
xor
add
add
xchg
cmp
pop
cmpsb
mov
push
mov
fstpt
mov
sub
add
fstpl
loop
push
push
sarl
int
dec
out
mov
aam
rcl
sub
sti
jg
outsb
stos
inc
jp
in
sahf
test
dec
add
cmp
pop
sub
aad
insl
mov
pop
pop
imul
aas
roll
push
div
push
push
push
movsb
enter
fldenv
out
jne
enter
pop
ret
adc
inc
and
out
push
push
sbb
cmpsl
adc
daa
mov
mov
loop
push
xchg
lods
adc
gs
sub
lock
jns
mov
clc
and
add
xlat
pusha
adcl
push
pop
fimuls
nop
mov
jle
lret
xlat
imulb
push
sbb
call
dec
lahf
jg
mov
push
cmpsl
dec
pop
daa
sti
ds
jb
pop
pop
out
inc
adcl
adc
inc
push
add
add
or
sbb
dec
arpl
repnz
mov
popf
adc
cmc
int3
je
xor
repnz
add
mov
cld
dec
xor
dec
enter
filds
add
mov
mov
mov
out
add
sbbl
jne
in
add
test
xchg
rcl
jmp
mov
jg
jle
arpl
or
inc
dec
int
sbb
jle
leave
fxch
fwait
repz
or
out
adc
repz
and
fwait
add
mov
mov
repz
sbb
xor
fistpl
inc
cmpsl
xchg
adcb
sbb
mov
adc
mov
jae
in
scas
aam
negl
sub
xchg
cmc
repnz
mov
test
jmp
and
inc
mov
out
sti
daa
cmpsl
push
cmp
xchg
jl
je
cmp
fistpl
das
adc
pop
ljmp
push
or
test
mov
scas
cld
ss
sub
mov
mov
addr16
test
mov
push
test
cmc
jge
cmc
mov
jb
iret
test
ljmp
xchg
mov
or
pop
test
or
adc
cli
int3
mov
cmp
lods
xchg
jno
scas
push
les
stc
pushf
dec
movd
inc
cld
int
ss
call
mov
iret
daa
daa
imull
adc
jae
dec
in
test
nop
iret
sbb
cmpsb
xchg
scas
mov
jg
mov
lret
cmp
mov
stos
fstp
pop
mov
das
lds
jg
xchg
cmp
pop
push
inc
mov
mov
fidivrl
pushf
cmp
jg
loop
gs
mov
pop
loope
jne
or
mov
cmpsb
sub
icebp
insb
cmp
mov
sbb
ds
adc
lret
lock
adc
sahf
mov
xor
lods
mov
push
mov
btc
jg
dec
mov
out
inc
in
or
enter
jge
mov
subl
xchg
mov
or
enter
push
inc
lahf
mov
xchg
shl
std
aaa
es
jo
xchg
and
and
or
and
loope
mov
test
movsl
jb
add
gs
aad
scas
push
scas
je
sti
sti
in
fisubrs
mov
or
std
in
out
xchg
lods
cmp
pushf
xchg
outsb
inc
cltd
mov
outsb
loopne
sub
mov
xor
add
pop
fisubs
test
xchg
sbb
push
mov
and
mov
imul
pop
loopne
cmpl
out
xchg
cmpl
dec
popa
mov
fldcw
ds
imul
xchg
idivl
jnp
je
cmp
fwait
call
test
and
data16
out
jl
shll
insb
mov
and
mov
xor
cmpsb
jmp
jnp
inc
mov
mov
jl
sub
mov
xor
js
aam
add
xor
popa
test
jge
push
mov
nop
movl
jnp
ror
jl
xlat
add
inc
push
rcll
cmpl
pusha
das
lods
pop
or
push
mov
mov
mov
push
lds
pop
mov
test
push
mov
cmc
out
mov
push
jns
push
dec
outsb
fcomip
pop
dec
das
hlt
out
in
xor
mov
inc
jbe
gs
icebp
lea
popf
lock
push
adc
hlt
test
pop
mov
outsl
lret
test
repnz
xchg
add
adc
cli
adc
pop
or
jge
fsubs
jg
cmp
xor
sbb
jne
mov
movsl
int3
ds
mov
fwait
pushf
in
cmp
mov
cmpsb
cmp
sub
dec
jg
or
mov
ds
ja
jge
rcl
and
hlt
sar
push
inc
in
in
mov
sub
adc
rcr
sub
lods
jmp
xchg
iret
negb
jmp
push
adc
mov
adc
xchg
xor
and
mov
ss
xlat
addl
mov
xchg
dec
mov
daa
popa
je
push
fmulp
cmp
fldt
movsl
adc
or
ret
je
xor
push
sub
push
push
mov
sbb
dec
sub
mov
iret
jmp
push
cmpsl
pop
dec
adc
push
ret
or
and
mov
subl
pusha
or
ja
stos
push
mov
push
int3
sub
cmpsb
int3
sbb
mov
enter
pop
das
sbb
fsts
push
aaa
mov
mov
xlat
das
stc
pop
leave
push
mov
and
popf
dec
xchg
xchg
jecxz
mov
arpl
icebp
jge
inc
pop
lcall
cld
cmc
movsb
jno
pop
sub
aad
iret
stos
cmp
cmp
mov
das
aaa
loopne
mov
push
lods
jne
mov
std
sbb
loop
pushf
jne
cli
and
test
jnp
data16
rolb
dec
push
aas
sub
pop
rcrb
aaa
sbb
add
lods
jg
sbb
fwait
jnp
mov
stc
arpl
fsts
pop
ret
outsl
sahf
cltd
jbe
mov
stc
jecxz
mov
mov
add
mov
cs
test
dec
xor
lahf
mov
pushf
lds
notb
push
push
faddp
and
xchg
inc
jne
or
in
rorl
out
ds
lea
roll
loop
mov
and
sbb
sub
sbb
popf
inc
ja
imul
sub
pop
adc
incb
outsb
inc
push
or
adc
add
outsl
jo
ret
cmp
push
xchg
out
mov
pop
xor
mov
push
in
hlt
nop
add
add
push
xor
insl
jg
mov
in
movsl
mov
inc
mov
ret
call
cld
mov
loopne
cltd
pop
push
cmp
add
jne
xchg
popa
jecxz
js
adc
mov
jno
xlat
mov
cmp
or
xchg
ret
adc
jbe
aad
adc
test
mov
loop
sbbl
xor
xchg
sbb
call
jl
xor
xor
hlt
push
dec
dec
lods
mov
push
jae
sub
les
xor
enter
adcl
andl
jns
xchg
inc
mov
sub
shr
xlat
call
push
pop
sub
or
pop
push
mov
xor
lret
mov
adc
sub
cmp
scas
lahf
cmp
mov
dec
fistl
negl
into
insb
scas
or
sub
or
xchg
push
in
or
in
div
mov
jo
or
xchg
jb
mov
mov
jge
push
andb
jo
xchg
and
sahf
cltd
sbb
fsub
xchg
jmp
push
push
cmc
mov
push
or
or
aad
pop
inc
nop
addr16
inc
nop
pop
xchg
scas
xlat
xor
stos
mov
sahf
xchg
mov
lcall
mov
dec
mov
sub
cmp
xorb
aas
outsl
mov
cwtl
pop
aas
mov
sub
dec
pop
dec
in
and
in
test
rol
dec
mov
push
mov
lods
cli
sub
scas
push
test
aad
out
add
loop
sarl
inc
cmp
add
dec
mov
add
in
lock
aam
pop
shl
out
adc
aas
mov
loopne
sbb
pop
stos
inc
enter
data16
inc
andl
imul
loopne
cmc
inc
je
aaa
mul
js
mov
outsb
push
pop
sub
into
add
xchg
fdivr
arpl
imul
les
imull
cmpsl
aaa
adc
jmp
jle
inc
test
xor
pop
push
outsl
xorl
imul
xchg
add
jp
inc
jno
push
lea
popf
scas
outsl
xorl
or
mov
lock
jmp
leave
xchg
cmp
movsl
mov
lret
test
lods
std
in
xor
es
xchg
inc
sahf
adc
jae
push
jle
sub
xchg
test
cld
ljmp
sbb
mov
fnstenv
fwait
std
jo
jge
sub
shll
xor
pop
in
ficompl
mov
dec
add
aaa
repnz
loope
fdivrs
add
loop
imull
testb
iret
hlt
xchg
dec
aam
dec
out
insb
jl
fwait
lcall
ja
jmp
push
cmp
cmpsl
jne
call
inc
cli
push
dec
jl
out
cli
push
jmp
adc
ss
outsb
and
shlb
mov
cli
shlb
dec
sarb
ret
xor
fstpl
dec
jb
xor
mov
das
mov
jp
mov
fsub
popf
and
sub
repnz
add
stos
hlt
pop
lret
popa
sub
adc
out
jle
stos
push
xor
sbb
xor
jge
sysexit
enter
push
inc
xchg
xor
clc
pop
push
or
jge
ret
fmull
sub
fdivr
ljmp
pop
dec
push
cmp
push
aaa
loope
push
out
push
in
xor
rep
cmpsl
out
jp
jno
ss
cmp
sub
xchg
mov
xchg
dec
mov
add
mov
push
cmp
xchg
sbb
leave
inc
mov
jg
jp
mov
aad
inc
xlat
lods
clc
mov
mov
push
test
push
js
sub
stc
xor
clc
jo
lea
sub
adc
xor
insb
arpl
mov
or
push
lcall
mov
add
outsb
mov
sub
lods
lods
dec
sub
sbb
into
lret
pushf
mov
insb
push
sub
and
cmc
inc
mov
std
into
inc
cli
outsb
xchg
scas
xor
sub
call
xchg
mov
sub
cmp
les
and
cld
or
add
pop
mov
sub
arpl
aas
push
jle
lcall
daa
in
dec
cmp
int
jno
movsb
ljmp
hlt
je
xchg
lahf
push
lds
and
add
mov
jle
pop
jno
dec
mull
pop
jnp
adc
mov
out
push
cmp
and
and
xlat
jp
add
push
and
das
adc
fdiv
add
push
cmp
nop
mov
divb
lods
pop
pop
rcrl
movsb
stc
lret
adc
jbe,pn
insb
out
negl
push
insb
fnstcw
cmp
jp
and
dec
mov
mov
inc
test
ret
arpl
jmp
jbe
popf
mov
add
jle
sahf
xchg
push
jg
mov
jbe
cwtl
xor
out
rcrb
sbb
xchg
sub
cmp
out
cmp
mov
jge
lods
and
and
pop
cmp
sbb
rcrl
sbb
pop
xchg
das
fdiv
dec
sbb
in
push
adc
pop
enter
inc
pushf
sbb
aam
loop
aas
test
pop
mov
or
add
add
push
lcall
jg
in
cmc
sbb
or
rol
push
cmp
aas
lret
cmp
inc
iret
icebp
lds
dec
push
or
fdivs
aad
in
rorb
cmpsl
jns
add
arpl
dec
xor
mov
out
xor
in
push
jnp
mov
jp
mov
ds
cmc
dec
das
inc
lods
push
das
cmp
insl
push
loopne
push
call
cmp
sub
fidivs
mov
mov
loop
add
jp
jb
inc
xchg
dec
add
aaa
adc
sbb
xor
dec
lret
mov
mov
clc
mov
mov
incl
sub
mov
sub
aaa
push
mov
mov
insb
inc
ds
cld
out
cmp
dec
sbb
into
int3
mov
repz
mov
dec
push
out
in
sub
lea
daa
cmp
in
dec
ja
add
and
scas
pushf
and
cld
xor
sti
jnp
leave
sbb
stc
add
sahf
aad
fwait
out
out
fistpl
iret
fdivrl
out
push
repnz
dec
mov
pop
pop
or
pop
cmp
roll
and
mov
dec
push
leave
test
in
into
testb
das
ljmp
ret
xor
mov
mov
fldl
stos
inc
movsl
ret
shlb
jne
ljmp
sbb
repnz
arpl
pmullw
arpl
aad
aam
jecxz
xchg
cwtl
jg
add
dec
sti
and
test
fiadds
mov
cmp
mov
mov
and
mov
leave
push
lret
xchg
movsb
adc
sahf
adc
push
ja
push
xchg
dec
lret
xor
shrl
das
fcmovnbe
inc
push
lock
cmp
scas
sarl
mov
push
hlt
lahf
cmp
mov
jnp
shrb
pop
imul
and
inc
pop
inc
xor
out
movsb
dec
aam
jbe
sbb
dec
push
loop
adc
dec
mov
ss
aaa
sahf
jo,pn
adc
sub
dec
jb
lret
outsb
fdivr
mov
jle
sub
xchg
dec
cmc
subl
imul
mov
sti
shlb
mov
rorl
test
inc
stos
pop
inc
add
shrl
movsb
sbb
js
add
jo
mov
pop
loope
xchg
ljmp
cmpsl
jmp
cmpsb
lret
jp
mov
into
jns
data16
cmp
and
lcall
into
and
mov
fdivrs
shr
mov
loop
dec
aad
and
push
gs
sub
jmp
xor
aaa
push
add
sbb
mov
ficompl
inc
subb
cli
clc
mov
test
and
pop
inc
int
scas
popf
idivb
xor
out
sbb
xor
cmp
and
add
ret
addr16
mov
repnz
lds
sti
mov
mov
pmullw
mov
in
push
insb
adc
mov
sbb
call
xchg
push
hlt
scas
adc
mov
cltd
inc
inc
xchg
push
xlat
paddusb
inc
cmpsb
xchg
jle
lret
mov
into
mov
rcrl
sub
mov
je
mov
mov
mov
orl
arpl
jbe
fldcw
decb
mov
mov
jns
lea
cmc
mov
bound
and
push
aas
jne
mov
outsb
dec
or
popf
xorb
mov
cli
scas
jo,pn
jns
pop
sbb
add
cmpsb
movsl
insl
or
xlat
test
out
outsb
jmp
xor
pop
scas
inc
jae
and
lret
int3
cmp
dec
stos
mov
mov
and
mov
sti
pushl
adc
or
in
mov
outsb
pusha
mov
addl
mov
gs
cmp
mov
mull
and
xor
cmp
adc
or
sub
jbe
insl
and
out
comiss
mov
xor
cmp
cmpsl
adc
cmp
lret
inc
pusha
cmpsb
loopne
dec
dec
rolb
jle
scas
lock
cmp
cmpsl
loope
adc
xchg
mov
xor
adc
cltd
cmpsb
jae
cwtl
or
push
cmpsb
lret
cld
or
arpl
scas
in
inc
cli
pusha
jns
fwait
sub
mov
mov
jns
stos
into
and
fisubs
jnp
dec
adc
sbb
and
dec
adc
mov
jb
popa
js
pushf
add
pop
xchg
dec
cmp
imul
stos
mov
sbb
fldlg2
pop
scas
pop
inc
jo
mov
jb
rcrb
add
inc
in
push
fsubrs
adc
push
jmp
cmp
rorb
mov
adc
or
faddp
mov
pop
shr
cmp
stos
mov
icebp
sbb
mov
mov
jno
ret
and
sbb
call
stos
into
imull
addr16
and
mov
sbb
int3
call
xchg
insl
loopne
sub
and
push
and
inc
shll
cmp
mov
jns
push
mov
cmp
lret
popf
pop
sbb
cld
aas
mov
pushf
ss
xor
sti
adc
and
sbb
frstor
mov
repnz
in
adc
push
inc
imul
pop
jp
pop
add
xchg
call
std
pop
mov
repz
loope
dec
lret
sbb
mov
xchg
dec
mov
or
hlt
lods
call
pinsrw
or
xchg
lcall
cs
incb
imul
cmp
test
shll
jl
mov
mov
cmp
fcmovu
mov
clc
fistpl
add
arpl
mov
cmpxchg
int3
and
mov
into
inc
fnstcw
movsb
dec
cld
xchg
and
loope
cmp
xchg
inc
pop
push
insb
dec
cmp
mov
shrb
jl
not
pop
pop
pop
inc
xor
insb
push
rcl
dec
orb
adc
push
dec
sbb
xor
add
insb
popf
mov
mov
shll
lds
jg
stos
mov
mov
in
xchg
das
adc
out
inc
pop
push
in
adc
cmp
mov
push
lahf
mov
xor
pop
pop
push
sar
pop
sub
insl
ficoml
es
je
sub
daa
or
sbb
xchg
and
pop
jmp
imul
fidivl
mov
add
ret
or
addr16
jo
shll
pop
and
adcb
jno
and
mov
cmc
cmp
or
add
sub
jbe
push
adc
hlt
sub
in
inc
sub
ret
mov
xchg
push
pushf
jl
sbb
adc
in
sbb
popa
outsl
mov
cwtl
dec
int
xor
dec
push
sub
fdivl
push
test
dec
lretw
fwait
lret
push
pusha
mov
sahf
jns
testl
out
stc
daa
and
push
sub
cmp
mov
mov
or
movb
xor
inc
idivl
xchg
dec
sub
cmpsb
stos
shlb
ret
fwait
mov
in
xlat
fwait
jge
adc
jo
push
xor
rcl
mov
push
sahf
pop
adc
psraw
pop
sub
mov
lcall
add
adc
inc
push
int3
insb
xchg
lcall
dec
add
inc
lret
adc
sub
stos
or
js
shl
push
mov
shlb
loop
add
insl
lcall
aam
test
mov
int
mulb
mov
inc
mov
sbb
mov
fyl2x
sub
frndint
mov
test
loope
icebp
fmull
lret
push
jbe
loopne
adc
xchg
jle
dec
push
or
sbb
sub
fnsave
pop
nop
mov
arpl
push
jg
dec
test
xchg
aaa
pop
or
data16
and
sbb
popf
dec
mov
test
jge
out
jne
mull
call
out
pop
imul
sbb
push
lods
je
sub
decl
and
hlt
xor
jnp
inc
lds
xchg
cmp
lret
mov
xlat
daa
add
inc
lods
je
out
leave
or
adc
mov
lret
and
inc
inc
pushf
addr16
and
add
outsl
pop
push
in
push
push
lret
pop
aad
int
pop
lods
fwait
jo
sahf
dec
out
aam
push
jnp
sub
dec
subb
clc
adc
adc
stos
sub
xchg
outsl
cmp
xor
out
cltd
mov
dec
ja
jmp
andl
das
and
push
and
insl
les
lcall
shlb
es
sbb
add
or
mov
in
push
cltd
push
daa
fadds
popl
dec
jl
jb
or
in
fidivs
mov
iret
xchg
rol
stos
pop
mov
push
cmp
leave
cmp
das
add
inc
jp
push
or
dec
and
cmc
sub
add
push
stc
sub
inc
sub
rsqrtps
rcr
push
int
popf
cmpl
pop
jbe
pusha
cmp
rolb
xchg
repnz
int
ss
mov
inc
inc
add
mov
scas
test
jmp
fcmovnb
sahf
cmp
sub
loope
lcall
test
adc
lahf
xchg
out
fidivrs
mov
psrld
add
or
mov
mov
inc
mov
rol
sti
faddl
stos
mov
fcoml
mov
xor
xor
dec
fidivrl
imul
sub
aad
push
inc
stos
out
push
and
inc
cmp
push
out
add
inc
shll
xchg
mov
and
je
mov
test
daa
xchg
xor
sbb
div
pop
mov
call
fsubl
jp
xor
add
add
sub
ljmp
push
xchg
xchg
push
cmp
jmp
roll
shll
xchg
test
dec
add
push
push
jg
push
sbb
inc
dec
cmpsl
ret
push
nop
pop
jge
dec
push
js,pt
jb
scas
cmpsl
lret
or
cmp
daa
popf
jmp
sub
sub
dec
lds
std
mov
aam
stos
stos
test
xchg
mov
pop
ficompl
sahf
mov
das
sbb
sub
cmpsb
lret
jns
inc
push
iret
cmp
cmp
addr16
mov
ficoml
mov
cmp
incb
cmc
ret
jge
loope
xlat
push
mov
cmp
push
imul
jecxz
enter
lret
fs
dec
sbb
dec
mov
jne
adc
mov
xor
sbb
push
mov
xchg
xchg
js
lods
pop
lds
icebp
push
rcll
scas
cmp
add
and
repnz
sbb
pop
inc
cs
mov
mul
mov
adc
inc
pop
imul
fistpl
inc
dec
xchg
lds
jae
xchg
call
mov
flds
jl
sahf
push
mov
loopne
sbb
add
cmp
test
outsb
cmp
addr16
inc
pop
mov
push
and
sbb
xor
pop
lods
lret
push
pop
or
fst
leave
addr16
jp
add
call
fdivs
cltd
lret
dec
xor
fadd
in
push
mov
stos
adc
andb
adc
cmpsb
bound
cmp
insl
ja
xor
push
adc
jae
cs
cmp
dec
push
pop
xchg
pop
cmp
sub
leave
repz
sbb
enter
ja
out
movsb
fmuls
scas
cmp
and
out
pop
or
jns
push
ljmp
aam
aam
mov
mov
adc
notl
xchg
out
sub
daa
pushf
xchg
mov
scas
jno
in
cmpsb
lods
adc
int
outsl
push
sub
lods
dec
xchg
fdivrl
cld
push
ret
pushl
or
dec
mov
das
enter
pushf
add
mov
mov
and
fistps
imul
mov
xchg
mov
subb
hlt
mov
push
movsl
jo
sbb
sbb
pop
ds
jg
inc
rcrb
dec
ljmp
fldl2e
jo
pop
push
pop
mov
sarb
lret
cld
lcall
adc
jp
dec
daa
jae
fisubs
pop
pusha
or
and
xchg
imul
inc
js
clc
xor
or
lock
and
fisubs
xor
pop
adc
xor
and
xor
pusha
push
out
xchg
sahf
mov
inc
cld
fisttps
sbbl
pop
insl
push
mov
aas
push
sbb
mov
push
scas
repnz
lock
ret
imul
lods
add
popf
or
jns
push
gs
ljmp
out
popf
sbb
shl
fwait
int
dec
adc
adc
fsubrs
pop
cmp
repnz
xor
xchg
ljmp
jnp
jae
in
cmpsb
int3
lahf
add
cmp
dec
xchg
push
test
roll
stos
push
add
pop
pop
jne
xchg
mov
cmp
stos
ss
cmp
pop
movsb
xchg
mov
xlat
daa
sbb
js
xor
andl
movsl
cmp
adc
or
add
es
xchg
xchg
cli
int3
and
cmp
xchg
lret
aad
dec
sub
nop
andb
jno
mov
mov
and
cmp
rclb
cmp
out
int
popa
stos
pusha
test
mov
aam
scas
adc
mov
inc
ds
cld
push
pop
pop
dec
pushf
pusha
int3
mov
jg
in
das
insl
scas
cmp
xlat
test
push
out
adc
aaa
pusha
pop
and
mov
jno
dec
inc
cs
inc
pushf
cmp
rolb
cld
or
fistl
daa
bound
icebp
pop
sarb
and
jno
cltd
adc
push
xchg
daa
pop
add
or
jge
or
cmp
and
adc
sbb
fistpll
inc
dec
push
je
add
pop
inc
xchg
push
and
roll
fldl
call
push
inc
daa
loop
insl
xchg
loope
xchg
imul
jne
or
sbb
inc
iret
push
sar
mov
aam
push
jp
mov
sub
in
adc
or
ljmp
mov
jge
test
repnz
js
adc
arpl
push
mov
mov
push
pop
aam
hlt
addr16
nop
sbb
js
jle
bound
aam
inc
and
scas
rclb
mov
sub
clc
jae
xchg
and
push
mov
scas
scas
add
jb
je
push
enter
sub
fildll
in
movsb
cmpsb
pop
das
stos
notl
sbb
and
xor
cmp
sahf
out
fbld
inc
std
popa
mov
or
cmp
xor
xchg
push
mov
push
sar
sub
test
mov
xchg
ficoms
fdivrl
hlt
add
pop
jae
repz
lods
repz
and
lret
test
pop
enter
mov
mov
clc
dec
sub
sbb
pop
pusha
fs
push
rolb
test
fs
add
xorl
clc
xor
xor
sbb
push
out
orb
push
imul
or
int3
jnp
test
sub
push
cltd
dec
xorb
pop
cltd
or
repnz
mov
and
xchg
or
hlt
sbb
or
jb
imul
pop
push
jl
jo
hlt
fwait
loop
in
movsb
lock
pop
movsb
push
sbb
dec
daa
aad
mov
and
sbb
iret
insb
das
mov
test
pop
lods
ret
push
lds
fcomps
jns
jbe
sub
fldcw
ret
mov
sub
pop
ror
adc
cmp
aaa
inc
rcrl
xchg
and
and
add
adc
inc
lret
aad
push
jne
push
lret
in
sbb
mov
test
rol
push
dec
ds
xchg
jo
add
leave
int
xor
mov
mov
sub
in
and
push
clc
sahf
dec
aaa
jbe
and
in
insb
imul
scas
in
pop
pop
es
mov
pop
push
dec
jge
xor
outsl
add
insb
mov
and
daa
testb
imul
mov
jl
jle
xor
push
decl
fwait
rcrl
idivl
bound
testl
addr16
xor
xorl
sbb
popa
or
or
cld
xchg
add
stos
cld
movsb
push
add
inc
sahf
popa
out
jge
or
outsl
pusha
lret
xor
adc
mov
fcmovne
adc
mov
xchg
jne
push
arpl
inc
jb
xor
insl
das
mov
loopne
pop
xchg
out
xlat
sbb
stos
pop
push
inc
sbb
mov
stos
jecxz
and
in
ret
ficoml
inc
xchg
adc
and
cmp
mov
and
iret
jnp
cmpsl
test
ja
mov
rcr
dec
repnz
addr16
cmp
imul
inc
push
pop
inc
mov
add
add
loopne
cs
sbb
dec
add
pop
lcall
lahf
fsincos
lds
repnz
insl
inc
mov
pop
push
and
mov
mov
or
imul
pop
push
stos
pop
fnsave
scas
mov
fsubr
outsl
cmp
mov
in
popl
dec
xor
lods
mov
lahf
scas
or
inc
inc
xchg
ficompl
mov
cmp
jmp
mov
push
adc
js
sahf
fbstp
sub
or
mull
sbb
popa
sti
jne
loopne
and
dec
clc
jnp
jo
and
inc
push
sbb
scas
dec
ljmp
test
dec
data16
sub
cmp
xor
filds
or
cmc
mov
and
movzwl
fsubl
repnz
sub
fisttpl
fmull
pop
lds
je
bound
cmpsb
inc
leave
push
sbb
fwait
test
les
mov
jmp
orl
dec
sti
cmp
and
lods
and
mov
outsb
mov
mov
or
imul
cli
mov
ja
imul
jge
sbb
jle
add
pop
fsubrs
xlat
sarb
cwtl
sub
or
or
mov
fadd
test
out
push
addr16
xchg
out
ja
dec
dec
ja
ret
mov
daa
mov
call
xchg
or
push
mov
cli
lds
dec
fadds
mov
add
and
mov
dec
mov
xchg
cmp
cltd
sbb
xchg
mov
aad
adc
adc
lods
js
push
inc
jl
lds
outsl
mov
and
aaa
inc
imul
jmp
notl
push
sbb
jl
clc
sub
jne
divl
out
lcall
cmp
int3
aas
imul
insb
inc
mov
imul
adc
ret
xchg
sub
or
dec
shll
adc
stos
mov
xor
pop
sub
lcall
pop
js
xlat
clc
out
fidivrs
mov
dec
iret
int3
jnp
mov
jmp
xor
call
mov
mov
mov
jae
aas
push
xchg
dec
fstps
pop
divb
ljmp
cmp
mov
cltd
test
pop
xor
pop
dec
test
mov
out
or
insb
or
jmp
pop
inc
rcr
jmp
outsl
cmpsl
inc
in
adc
outsb
xchg
dec
insl
pop
lds
cltd
xor
adc
pop
cmpsb
cltd
sub
and
pop
icebp
cmpsb
xchg
mov
das
lea
ljmp
int3
fidivrs
xchg
pusha
sbb
mov
je
pop
mov
dec
ljmp
mov
out
xor
mov
lcall
sbb
stos
or
fs
enter
push
lods
xchg
clc
push
or
in
mov
dec
and
mov
pop
shl
div
dec
jnp
xor
mov
ret
or
xchg
jp
xchg
stos
or
push
mov
jo
fsubs
rolb
jae
push
sbb
mov
testb
mov
push
ret
jbe
ljmp
movsl
mov
add
adc
inc
and
fadd
mov
popf
jb
xchg
ret
js
out
dec
mov
outsb
test
push
xchg
jbe
lahf
or
movsb
and
imul
xor
popa
push
test
xchg
mov
sbb
xor
xchg
adc
jl
mov
movsb
ds
sbb
cmp
notb
mov
pop
das
and
lods
xchg
or
mov
inc
mov
dec
insl
lcall
clc
cmc
jo
das
jg
pop
mov
cmp
aas
jge
mov
filds
fldenv
xor
rcrl
les
fists
sti
mov
fisttps
call
and
out
and
imulb
insb
stc
jle
test
addr16
loopne
in
xor
lock
sub
and
pop
rcrl
pop
and
pushf
fcompl
pop
sbb
mov
fisubrl
je
jne
sbb
jmp
and
sub
xor
inc
mov
outsl
addr16
or
gs
mov
pusha
or
mov
popa
addr16
xchg
rcrb
add
and
inc
setnp
mov
jecxz
jo
xchg
cmp
adc
push
adcl
pop
cmpsb
fistps
call
adc
mov
outsl
cmp
ja
cmp
sub
call
inc
aad
add
lock
out
cmp
lcall
jmp
lret
push
imul
scas
jmp
jle
jmp
nop
adc
lret
mov
mov
mov
shl
mov
adc
push
movsb
jb
imul
jecxz
pusha
add
and
push
lret
sub
les
xchg
into
bound
xchg
loop
or
subl
fcomps
adc
jge
out
out
hlt
cmp
sub
dec
lods
daa
jae
jecxz
mov
arpl
adc
imul
rol
cmp
cli
mov
js
mov
rol
lret
or
dec
cwtl
dec
push
push
inc
jecxz
int
jg
test
or
addr16
adc
std
push
aaa
jae
jne
cld
movsl
lcall
mov
and
push
or
lds
or
and
mov
lcall
cmp
add
xlat
mov
fucomip
mov
leave
repnz
xor
arpl
lds
dec
sub
leave
sbb
sbb
xor
add
cmp
mov
arpl
jmp
pushf
loop
sub
out
sub
clc
pop
fcompl
and
out
stos
data16
mov
dec
jecxz
jnp
lods
insl
and
jo
out
cmpsl
cmpsb
das
mov
xchg
fisttpll
jmp
push
aad
xchg
push
jl
out
fimull
mov
mov
mov
cmp
jb
outsb
ljmp
lahf
push
imul
jg
or
rclb
out
fwait
mov
sub
push
sbb
push
jge
pop
mov
aam
test
mov
add
and
pop
test
jae
fwait
inc
xor
call
stc
cld
cmpsl
out
sbb
jo
push
push
dec
dec
jb
fiadds
ret
aaa
mov
sbb
loopne
sbbl
push
lret
movl
cmp
repnz
sbb
sahf
std
dec
fcmovne
xor
xor
dec
jnp
dec
jp
loope
dec
fidivrs
xchg
pop
dec
imul
and
cmp
lret
shlb
inc
pop
mov
xchg
or
xor
call
outsb
sahf
mov
push
mov
popf
mov
out
push
adc
dec
aam
and
arpl
sbb
stos
lock
les
xchg
cs
jae
mov
xorb
inc
pop
repnz
sbb
jb
cli
enter
mov
push
invd
push
mov
and
sbb
and
mov
adc
or
push
mull
mov
add
adc
sub
pop
mov
pop
pop
cmp
push
repz
xchg
xchg
aad
sbb
outsb
imul
mov
adc
repz
ljmp
mov
repz
fs
cmpsl
jl
mov
jae
ja
leave
push
cmp
mov
xor
lods
sbb
cmp
setbe
jecxz
adc
js
shrb
xlat
pop
push
imul
loope
shll
js
jb
mov
adcb
jg
fdivp
fs
mov
sub
insl
setg
icebp
fadds
pop
out
fidivs
nop
int
add
movsl
daa
ljmp
and
adc
pop
dec
xor
iret
cmpsb
inc
outsb
roll
jb
dec
outsb
lods
cmp
cmpsb
mov
outsl
int
rolb
cmc
xchg
sub
lock
and
xlat
jo
dec
mov
in
arpl
fst
dec
ljmp
dec
sbb
jo
cmp
subb
sub
nop
leave
testl
stos
in
test
dec
psadbw
pop
call
enter
and
mov
xor
push
push
sahf
dec
push
mov
cmpsl
xchg
mov
hlt
add
pop
test
gs
cmp
sub
cmp
jae
xchg
mov
iret
dec
hlt
cmp
aas
aam
les
adc
test
rcll
push
xor
dec
inc
xchg
push
push
xchg
and
cltd
pop
repz
fldcw
adc
mov
sbb
pop
jno
dec
fwait
out
je
sbb
ret
add
mov
dec
fwait
jge
mov
and
mov
jle
rolb
int
pop
adc
adc
cmp
mov
or
aad
imul
xchg
xor
mov
jb
sarb
and
scas
fidivs
int3
scas
int
icebp
push
pushf
cwtl
loope
xchg
xchg
jns
sbb
daa
jecxz
stos
dec
sub
adc
ret
incb
xchg
xor
gs
iret
and
cmc
mov
mov
or
call
push
loop
cmp
clc
repnz
fldt
in
das
sub
cmc
jno
hlt
int
addr16
mov
inc
int3
jge
sbb
int
mov
xchg
ss
cmp
ret
mov
sbb
test
pop
push
lret
movsl
inc
mov
pop
adc
and
push
mov
jle
cltd
ljmp
xchg
mov
pop
pop
fcompl
adc
pop
lds
daa
lcall
sbb
fistps
inc
in
mov
in
or
das
negl
dec
call
rcrb
inc
lods
or
in
scas
sub
cli
sbb
cmpsb
xchg
js
jl
jns
test
inc
std
lahf
std
and
or
xorl
mov
lock
aaa
addr16
xlat
lret
stc
stc
ljmp
xchg
mov
pop
imul
outsl
pop
sti
pop
sbb
cmp
in
jne
xor
popa
add
sbb
addr16
mov
je
xor
aam
fadds
lds
or
cmc
jnp
mov
fs
xor
jl
test
das
jle
jp
push
jl
dec
or
mov
fbstp
test
out
dec
xor
push
fildl
ss
ficompl
mov
push
pop
pop
ljmp
dec
add
mov
aad
dec
rcr
fwait
and
xor
sub
cmp
imul
imul
push
sub
push
repz
jns
pop
fldl
fcomp
repz
das
push
adc
repz
sub
fnstsw
stos
mov
loope
pop
rclb
mov
out
add
inc
sbb
inc
jb
and
data16
fadds
icebp
setbe
fwait
sbbb
pop
lea
adc
into
ret
jp
adcl
ljmp
inc
sbbl
gs
add
and
jge
mov
xlat
mov
in
in
out
cmp
popa
stos
lock
addb
adc
adc
adc
movsb
inc
outsb
test
dec
addr16
xor
push
push
mov
mov
lahf
push
pop
or
sahf
test
dec
cmpsb
dec
pop
push
in
sub
sbb
nop
lock
in
das
pop
fs
daa
int3
push
add
mov
out
bound
inc
mov
mov
or
xchg
and
in
mov
jecxz
push
ja
repz
push
push
pop
adc
push
jne
out
mov
mov
xchg
out
es
clc
je
pop
jmp
xchg
arpl
jmp
int3
dec
inc
push
push
push
mov
jbe
mov
out
or
in
icebp
inc
rcl
loope
aad
lret
ret
nop
xor
mov
sub
lock
out
outsl
imul
aas
in
inc
loop
mov
ficoms
shr
aad
ss
jnp
repnz
jmp
mov
adc
sbbl
mov
push
test
sbb
pushf
inc
or
inc
or
mov
jmp
sbb
xchg
jbe
mov
add
sbb
test
mov
ljmp
sub
inc
out
cmp
mov
pop
gs
mov
les
imul
mov
mov
xchg
or
mov
mov
sub
adc
pusha
and
mov
mov
aas
insl
leave
addr16
cmp
jmp
sub
pop
lods
push
mov
adc
or
mov
dec
call
dec
mov
lcall
cmpsb
or
xor
jns
push
popf
or
push
gs
js
xor
pusha
in
pop
frstor
in
test
leave
sbb
xor
sub
repz
pop
sbb
aaa
lds
or
insl
xor
fidivrs
mov
rcrb
jmp
arpl
fs
sbb
sbb
cmp
pop
insl
outsb
aaa
popf
xchg
mov
das
mov
stos
jbe
test
xor
cmp
xchg
or
insl
insl
pop
and
ret
dec
addr16
out
outsl
in
mov
xor
sbb
add
ficompl
test
dec
in
inc
fiadds
push
sub
sbb
or
lahf
push
pop
pushf
rcr
push
cmpsl
daa
jne
fwait
popf
fwait
pushf
xchg
and
push
and
mov
mov
aam
adc
push
cli
lret
mov
push
xlat
stos
mov
jecxz
xchg
xchg
add
and
shl
sbb
daa
lods
test
popf
inc
and
jmp
mov
adc
movsb
lods
stos
mov
int
xor
and
pop
out
stos
xor
adc
imul
lcall
jae
leave
adc
sub
or
clc
cmpsl
loope
mov
cli
outsb
out
xor
cmpl
push
push
in
adc
fsubr
mov
jb
or
lahf
test
jae
scas
test
dec
push
out
add
pop
jg
fcomps
xchg
xchg
movsb
fidivrl
push
jns
adc
lds
rcll
sbb
mov
inc
int3
addl
cmp
repz
nop
sahf
loope
mov
jae
mov
testb
adc
addr16
sub
mov
pop
cmp
cli
test
mov
jb
xchg
and
push
enter
pop
push
mov
jns
adc
cmpsb
iret
mov
cmc
les
loope
jno
cmp
push
icebp
or
cmpsb
test
jnp,pt
inc
test
mov
jb
xchg
cs
jns
push
aad
movsb
xlat
add
adc
adc
add
mov
nop
mov
sbb
scas
mov
xchg
dec
pusha
clc
cmpsl
clc
clc
test
leave
and
ret
orb
jno
add
mov
stos
jne
pop
aaa
push
std
sbb
shlb
xchg
xor
jmp
and
lcall
jno
xchg
in
add
adc
add
fxch
sub
les
sub
aam
cmpsb
xor
loopne
iret
insl
out
test
jbe
lcall
xchg
inc
sub
mov
dec
pop
push
mov
push
inc
rcrl
cmpsl
popa
dec
cs
cli
inc
adc
xor
mov
jns
adc
ja
add
fst
dec
pusha
test
test
mov
jge
mov
insl
mov
mov
jb
test
sysexit
cltd
add
push
leave
mov
mov
push
add
popa
lcall
pop
or
cmp
icebp
xchg
sub
jo
in
in
rclb
test
jne
add
outsl
mov
in
test
sbb
aad
adc
stos
sarb
outsl
push
add
sbb
sub
mov
mov
cltd
cmp
inc
and
loopne
sub
sub
icebp
inc
test
push
enter
and
mov
adc
jge
pop
iret
pop
push
loopne
dec
call
mov
pop
test
mov
repnz
aaa
mov
in
fstps
enter
xor
mov
sti
ret
adc
adc
add
push
nop
push
lahf
and
arpl
push
mov
xchg
push
out
jle
je
or
add
scas
mov
popa
inc
andl
hlt
outsl
cmpsb
nop
sbbb
cmp
jl
push
iret
pop
js
xor
mov
and
pop
sub
rol
loop
frstor
or
jo
xor
mov
inc
mov
in
je
push
push
cmp
push
lcall
mov
scas
stos
mov
mov
push
call
arpl
xlat
xchg
push
lcall
mov
and
add
ret
mov
inc
idiv
cmc
cmp
loop
pop
mov
subb
xchg
imul
xor
mov
inc
std
sub
or
push
fisubrs
lahf
jb
push
add
mov
scas
xlat
iret
imul
mov
pushf
pop
pop
outsl
sbb
push
repz
cld
es
push
fs
rcrl
pop
xor
in
push
in
dec
fs
test
cmp
pop
cld
jne
cmp
push
insb
xchg
mov
andl
loope
sbb
or
aam
fs
inc
shll
pop
fwait
mov
lahf
shlb
fisubl
push
or
jg
sub
xchg
mov
inc
adc
jns
out
cmpl
jg
adc
shlb
pop
jnp
pop
jno
mov
mov
icebp
inc
das
lea
mov
stc
data16
subl
arpl
mov
pusha
jmp
scas
mov
pop
jno
lret
cs
jle
and
hlt
rcrb
pop
shrb
sbb
jecxz
into
stc
stos
cmp
and
out
mov
cs
stc
pop
or
fmull
je
mov
ljmp
or
arpl
push
test
pushw
sahf
and
xorb
sti
cmpsb
out
lahf
mov
in
imul
aaa
std
and
inc
mov
les
in
imul
je
lret
mov
mov
rcrl
or
das
jno
mov
sarl
mov
sbb
adc
mov
lcall
lahf
dec
in
insl
int3
lock
fmuls
imul
jo
add
mov
icebp
mov
daa
mov
mov
ss
xchg
lods
mov
jg
adc
xor
js
jmp
lcall
jmp
js
jge
faddl
fsts
stos
icebp
xchg
roll
call
movsl
mov
out
cmpsl
add
mov
jecxz
ret
adc
imul
mov
test
aaa
push
nop
ljmp
ds
arpl
cmp
sbb
sbb
jp
push
imul
cmp
or
pusha
int3
imul
dec
fs
fstl
jne
je
or
ret
dec
loope
insl
or
inc
push
sbb
pusha
jbe
mov
mov
push
in
sti
rcrb
push
test
mov
xor
into
fldenv
mov
pop
aad
pop
lret
push
out
cmp
into
or
in
faddp
jp
stos
ret
lret
test
lods
jecxz
stc
sbb
movsl
cld
sub
cmp
lret
push
inc
add
or
or
lcall
incl
insl
cmpsb
pop
sub
mov
nop
mov
stos
jg
icebp
add
lret
loope
mov
les
sbb
test
out
xor
pushf
in
loope
push
rcrl
icebp
sub
mov
lret
fimull
daa
jo
push
lcall
sub
lods
sarl
addl
add
push
cmpsl
sub
daa
inc
jge
out
roll
ds
out
adc
loope
and
data16
popf
jp
sbb
or
sub
jg
dec
test
mov
cs
xor
cmp
xchg
add
shr
frstor
add
jo
mov
inc
pop
xchg
cs
scas
test
std
cmp
pop
int
aas
repz
ljmp
xchg
decb
faddl
jne
cmc
fsubl
fcomp
push
imul
dec
movsl
xor
popf
mov
cld
imul
imul
cs
les
jge
mov
std
shrb
sahf
lds
xorl
lods
rclb
xchg
je
stos
clc
adc
push
mov
lock
mov
in
lahf
icebp
aas
mov
and
ret
fldl
or
cltd
int3
hlt
inc
mov
xchg
out
shrb
rolb
xor
mov
movsb
sub
dec
jns
lcall
xorb
pop
mov
mov
cmp
push
sub
or
mov
jecxz
fsubrs
js
jo
ret
dec
and
sub
mov
clc
sbb
in
in
fwait
dec
sub
jecxz
jmp
ljmp
dec
aam
pop
mov
int3
loopne
insl
and
addb
push
in
aaa
pop
daa
and
loop
cmp
push
js
cmp
push
jp
jo
out
lods
idivl
xchg
xorb
xchg
mov
push
cld
out
jne
cs
nop
dec
pop
fidivrl
pop
insb
xchg
adcl
js
pop
cs
mov
mov
pushf
or
dec
and
add
lock
js
or
inc
movl
push
out
iret
orb
mov
iret
push
lods
addl
or
inc
arpl
push
aad
xorl
push
in
mov
mov
sti
enter
add
mov
jge
sub
push
aas
and
imul
rcrl
cmc
mov
loopne
ljmp
testl
inc
cmp
or
movsb
or
out
rcrl
insb
loopne
fs
arpl
lds
sbb
push
pop
mov
cmc
push
add
out
mov
cmp
jo
fldt
dec
mov
sub
xchg
sub
jb
inc
or
push
test
pop
inc
mov
test
arpl
loope
in
add
shlb
xor
ret
lret
outsb
cmpsb
icebp
push
pop
repz
iret
ret
or
mov
push
jns
sbb
fdivl
addb
outsb
ja
ja
push
shld
xor
std
lea
les
xor
pop
or
and
or
mov
jno
mov
fs
adc
daa
add
hlt
clc
adc
xchg
cltd
jmp
push
cmp
mov
test
xchg
aas
pop
insb
mov
mov
jbe
aaa
push
dec
jae
mov
arpl
push
xor
mov
in
pop
sub
sti
fs
orl
jns
adcb
es
and
cmp
outsl
repz
test
fsubl
mov
cmpsb
repz
mov
mov
lods
cld
push
adc
jecxz
push
mov
jmp
insb
out
stos
mov
jne
push
cmp
mov
in
fs
divl
les
adc
sub
sbb
std
in
negb
cmp
mov
ret
outsb
pop
xchg
mov
enter
aas
pop
push
mov
pop
mov
or
cmp
pop
adc
repz
int3
test
or
in
in
push
cmp
cmpsb
xor
rcrb
jmp
jmp
add
mov
mulb
mov
rcrb
jl
mov
insl
mov
imul
mov
pusha
or
pop
dec
aam
adc
dec
ret
lahf
adc
mov
sbb
cmp
dec
inc
lret
aaa
sub
push
adc
aad
and
mov
stc
ret
daa
out
subl
or
out
es
addl
mov
movsl
xchg
cmpsb
xor
lock
xor
test
arpl
mov
jbe
repnz
add
ret
nop
jge
mov
insl
cld
xchg
cwtl
outsb
in
jb
pop
stos
xor
adc
or
int3
clc
mov
jmp
ds
xchg
jb
inc
repz
push
in
fdivr
addr16
sub
in
scas
cmp
adc
push
pop
lods
std
xor
and
and
pop
xchg
scas
adc
scas
in
or
test
roll
maskmovq
idivl
shrb
lea
negl
mov
nop
and
sbbl
sub
pusha
adc
test
push
aam
sti
or
mov
xorb
add
shlb
pop
sub
sbbl
cmp
push
pop
push
incb
inc
dec
jp
sub
and
and
rcrb
popf
rcrl
add
xor
das
cld
arpl
adc
push
mov
lods
addr16
push
lcall
gs
test
inc
dec
ret
arpl
outsl
inc
out
and
subl
popa
xchg
jo
dec
cli
stos
push
jae
imul
les
xchg
nop
jl
jp
pusha
xchg
fldenv
in
sbb
xchg
sub
pop
ret
mov
sahf
das
adc
aaa
or
or
jns
enter
mov
jecxz
data16
xchg
and
and
dec
mov
rclb
fs
inc
aad
xlat
sub
aas
outsl
xor
dec
mov
mov
in
sub
jp
push
xchg
and
adc
xchg
xchg
pop
call
cld
mov
pushf
and
fwait
int
sbb
das
leave
mov
popf
das
lock
mov
fidivs
and
xor
or
jle
insl
pop
hlt
repz
or
movsl
pop
lds
lcall
icebp
test
hlt
pop
adc
test
or
mov
mov
jbe
and
and
insb
repz
clc
pop
sub
test
cmp
xchg
ficompl
and
idivl
outsl
mov
pop
push
adcl
push
jae
cmp
push
mov
xchg
adc
repnz
xor
sub
cmpsb
sarb
add
shlb
jae
aaa
and
and
inc
inc
shrb
xchg
movsb
movsb
aad
inc
test
hlt
add
popw
xlat
jge
cmp
pop
mov
js
push
call
in
sarl
sbb
mov
jns
mov
and
sbb
fldl
dec
dec
in
lds
imul
mov
sbb
push
dec
push
lret
sahf
jae
stos
in
into
inc
scas
jle
sbb
sbb
dec
xor
mov
aas
sub
rcll
je
mov
fidivrl
jno
and
and
sbb
xor
adc
push
enter
loopne
pop
pop
lock
cmp
bound
popf
repnz
jmp
int
cmpsl
aad
cld
mov
adc
cmp
in
pop
int
xor
call
add
insb
arpl
inc
shll
push
lock
dec
in
push
inc
jge
pop
ss
cld
mov
stc
push
mov
gs
repnz
push
pop
ret
ds
sbb
ficoms
or
mov
inc
mov
cmp
pop
jae
pop
lret
daa
or
push
sbb
lret
lods
pop
jno
loopne
add
push
test
movl
pop
or
scas
icebp
sbb
nop
push
lcall
xor
xchg
cmc
xchg
sbb
pushf
ret
dec
iretw
inc
out
ds
leave
into
das
orb
in
out
aas
leave
clc
call
shlb
and
jae
aad
inc
push
cli
push
rorb
mov
int3
fs
pop
gs
stos
jl
cmp
clc
int3
cmpb
bound
or
xchg
das
repz
pop
cwtl
jg
jp
xor
push
imul
es
add
lds
lret
and
inc
add
fisubs
lods
in
mov
cli
in
cmp
sub
pusha
scas
out
pinsrw
rcrb
sub
popf
jne
enter
pop
fldt
fsubr
mov
xchg
into
shl
mov
push
dec
jle
pop
jle
fwait
pop
call
cmp
js
fnstenv
xlat
repnz
add
ds
test
stos
out
ja
inc
xlat
mov
xlat
ljmp
mov
jg
pop
data16
popf
dec
or
adc
dec
push
or
out
xchg
pop
xor
cmp
push
jle
inc
je
push
insl
shlb
xchg
add
out
mov
in
jns
push
mov
inc
or
mov
aam
cwtl
jae
fcomip
xor
fsub
cwtl
dec
pop
jns
inc
xlat
sbb
data16
pusha
int3
push
cwtl
dec
jecxz
scas
jnp
popf
push
int3
mov
lock
fsubl
ret
ja
dec
loop
sbb
or
inc
ret
mov
mov
fadds
les
fbld
push
xchg
mulb
xor
enter
dec
push
xchg
cmpsb
sub
mov
fcomps
and
jg
mov
inc
cmp
test
int
xchg
adc
mov
movsl
test
out
nop
push
dec
xor
cs
sbb
push
out
mov
mov
ds
test
rol
sub
mov
imul
cmp
jae
xchg
jl
stc
inc
mov
adc
jno
out
fstl
sub
cmpsb
aad
jp
jae
inc
repz
test
ss
out
into
fimuls
orb
jecxz
sbb
xchg
mov
jl
or
cmp
push
cld
sbbb
xor
push
sbb
jl
fwait
call
pop
cld
lret
imul
mov
mov
xchg
sahf
mov
jg
jle
aam
lret
jb
loop
pop
in
adc
gs
lcall
mov
push
sbb
pop
xchg
dec
mov
gs
movsl
lahf
mov
pop
out
mov
mov
mov
mov
mov
testb
jmp
cmp
sbbl
mov
cmp
pop
mov
xor
aam
test
icebp
int3
jbe
or
pop
aam
test
iret
or
cmp
adc
push
xchg
sbb
into
mov
or
dec
lods
stos
mov
imul
stos
enter
sbb
inc
mulb
loope
xchg
push
adc
xor
sbb
mov
clc
ljmp
push
ret
rorl
add
mov
leave
sbb
inc
into
sub
jge
or
push
push
mov
daa
subb
xorl
rorl
mov
mov
jecxz
outsb
adc
imull
sti
ja
mov
popa
imull
jno
mov
xchg
sti
dec
xchg
test
or
dec
and
out
add
ficomps
add
xor
fidivl
push
xor
add
lahf
sbb
ds
mov
or
js
cli
inc
mov
mov
xor
inc
mov
mov
pop
fstl
daa
pop
pop
inc
aam
test
xor
insb
dec
sub
in
sub
test
push
add
mov
cmp
and
mov
pop
jecxz
mov
mov
arpl
jnp
mov
sub
mov
outsb
lea
addb
inc
pop
test
dec
xchg
xchg
jmp
sub
xchg
mov
cmp
shrl
xchg
dec
pusha
or
push
xor
sub
mov
nop
mov
shrl
ret
data16
mov
add
mov
std
mov
sarb
dec
insl
pop
sub
aad
cmpsb
in
lcall
sbb
jmp
cmc
pop
xchg
or
push
stos
sub
hlt
pop
or
jne
loopne
jmp
sub
mov
cli
dec
mov
mov
inc
lahf
loop
adcl
pop
pusha
orl
or
popa
cmp
xor
lahf
fmul
and
cmp
dec
xor
cld
jg
cli
lods
xor
out
mov
mov
iret
dec
dec
mov
outsl
jbe
ret
setae
repz
addr16
je
mov
dec
xacquire
or
add
ret
pop
das
pop
jbe
in
add
outsb
insl
or
sbb
jno
rcl
mov
push
popa
xchg
cli
and
dec
aaa
xlat
jl
xchg
cmp
dec
fnstsw
ja
adc
outsb
mov
jl
mov
fisttpll
jb
arpl
js
ret
mov
inc
out
inc
sub
push
pop
push
mov
jo
dec
mov
cmp
test
mov
adc
or
icebp
cmp
fcmove
in
scas
int
push
stos
sti
lahf
out
xor
push
jne
jns
push
push
ret
aad
or
scas
inc
inc
flds
outsl
andl
rsqrtps
daa
out
sub
mov
test
mov
icebp
push
sub
ret
ffree
test
lds
es
mov
lock
mov
mov
mov
ljmp
mov
dec
lahf
pop
jecxz
in
arpl
mov
cwtl
hlt
pop
and
outsb
xor
js
or
hlt
mov
out
iret
js
lcall
daa
sbbb
mov
push
pop
out
fwait
inc
jbe
popa
rolb
and
jb
ljmp
andb
push
push
outsb
ret
out
cmp
or
stos
in
sti
jae
pop
jp
jbe
mov
insb
xchg
ret
sarb
jmp
sub
lret
mov
fmulp
lock
cld
or
clc
push
add
hlt
jmp
daa
jl
imul
lret
mov
cli
ret
cmp
faddl
xor
outsb
fnstcw
subb
popf
das
sub
sbb
repz
mov
scas
cmp
dec
scas
sbb
decb
lahf
bound
inc
dec
les
push
ret
rcr
jmp
pop
fsubrs
mov
xchg
xor
or
shll
stos
sub
push
inc
orb
mov
mov
out
addb
in
or
jg
adc
mov
call
lock
into
dec
jns
xchg
cltd
push
cmp
and
xor
cs
mov
mov
daa
adc
sbb
aaa
sub
sti
mov
mov
or
movsl
jae
xor
insb
xchg
out
fdiv
push
push
out
stc
push
xchg
arpl
xchg
sbbl
in
loope
cmpsb
cmpsb
lret
push
inc
xchg
sub
loopne
aam
aas
ja
sbb
mov
adc
sahf
xchg
std
sbb
pop
xchg
mov
cmc
cmp
sahf
and
pop
jg
cwtl
or
pusha
aam
jle
testl
test
xor
mov
jns
cmpsl
leave
add
xchg
jno
rcrb
sub
cwtl
add
mov
subb
dec
push
mov
les
pop
pushf
jp
adc
aas
out
cwtl
mov
mov
xlat
mov
sub
sti
popa
cld
sbb
imul
vpmaxub
push
lea
mov
mov
daa
push
xchg
pop
jo
outsl
aad
adc
out
sub
mov
and
inc
lahf
lock
xor
xor
jge
cwtl
cmp
out
scas
lahf
dec
lea
push
stc
jo
icebp
lahf
fadds
insb
addr16
pop
add
out
jl
push
cltd
and
push
enter
in
mov
clc
ljmp
outsb
ret
mov
adc
insb
mov
dec
dec
mov
dec
mov
cli
nop
fs
mov
inc
dec
fisttpll
fmuls
in
rorl
repz
int
xchg
inc
enter
jle
movsb
lds
dec
dec
push
rcrl
mov
push
jno
fwait
add
push
in
mov
jp
and
les
int
xchg
mov
mov
jecxz
xor
mov
lret
cmpb
mov
cmc
push
fildl
sarl
fstpl
loop
mov
pop
movsl
stos
and
sbb
sub
fsubrl
fsubl
adc
and
ja
hlt
fnsave
loope
sub
jmp
jmp
dec
das
pusha
jmp
xchg
leave
test
sarb
es
scas
mov
sub
sub
and
dec
fimuls
jge
ret
leave
mov
das
or
xchg
loop
lods
adc
fucomi
sbb
movsl
out
jo
popl
push
or
lock
dec
xor
lret
ret
out
sbb
icebp
inc
inc
or
xchg
lods
dec
movsl
adc
outsb
mov
pushf
mov
adc
cld
push
mov
mov
mov
test
adc
dec
pop
ficoms
cs
and
mov
into
loop
ss
cmc
mov
or
dec
int
xchg
cli
and
mov
cli
mov
and
xchg
fistps
ds
cmp
push
cli
sub
adc
lock
pop
cmpsb
cs
mov
inc
into
nop
notb
jge
mov
js
cwtl
push
xchg
cltd
pusha
sbb
sbb
fcmovnb
xor
call
aaa
xchg
popf
mov
out
imul
mov
push
out
inc
int3
pop
jp
pop
lahf
adc
cmc
lret
and
shrl
addr16
mov
or
inc
xchg
mov
out
sbb
push
jle
cmc
insl
inc
pop
pusha
in
sbb
dec
xchg
jg
sbb
hlt
addb
jg
cmp
cmc
xchg
jmp
popf
imul
add
xor
adc
les
cmp
jge
imull
lods
jg
push
mov
sub
push
mov
push
imul
mov
dec
add
stc
dec
loop
stos
xchg
push
and
fnstenv
fistl
test
lcall
les
aad
out
mov
xchg
out
dec
mov
jb
ret
fisubl
inc
xchg
enter
repnz
test
pop
adc
lock
test
xor
dec
xchg
jge
popf
lea
add
jmp
and
sbb
pop
xchg
jo
insb
testb
movsb
xlat
fdivrs
sbb
js
xor
sbb
int3
test
cmp
mov
js
jae
xlat
addr16
add
dec
ret
add
xchg
jb
imul
cmp
dec
clc
cld
jle
mov
xchg
push
out
cs
outsl
add
loope
loope
mov
lahf
sub
sahf
call
ss
into
or
and
and
mov
mov
aam
pop
jo
pop
addr16
mov
notb
dec
jmp
or
negl
mov
adc
lret
fidivrs
mov
aam
cmp
dec
mov
rol
cmpsb
ret
shlb
mov
pop
jp
inc
dec
stos
cmpsb
pop
in
and
push
dec
repz
arpl
dec
and
icebp
inc
adc
std
clc
repnz
mov
or
inc
sbb
or
sub
pop
inc
push
adc
das
or
mov
pop
xchg
testl
clc
lret
xor
popf
push
dec
xchg
stc
insb
add
fwait
adc
or
pop
aam
mov
sti
sti
xchg
cmp
mov
adc
inc
subl
mov
loope
mov
ss
lcall
and
lea
xchg
shl
cli
inc
in
loop
inc
rcll
or
xchg
scas
mov
pop
stos
vunpcklps
in
cmpl
cli
je
insb
insb
or
pop
xor
xchg
mov
sbb
or
xchg
sbb
xchg
xor
jge
dec
cmp
dec
scas
test
rcrb
test
pop
mov
cltd
out
insb
imul
lods
xor
fs
ret
das
sbb
jle
pop
mov
les
aam
ret
inc
push
fcos
cmp
popf
movsb
inc
arpl
iret
jns
inc
js
inc
adc
pop
repnz
and
dec
pop
pop
xor
jns
outsb
adc
ret
aas
cmp
leave
and
or
push
repz
popf
je
jg
into
cmp
push
add
dec
arpl
or
stc
cmpxchg
fcoml
pop
aam
and
push
dec
fdivs
clc
test
inc
cmp
clts
leave
jb
dec
inc
scas
jae
fwait
xor
cmp
push
or
pop
aaa
push
into
mov
int3
adc
jo
dec
dec
mov
scas
fistpll
or
lods
in
push
testl
lcall
bnd
gs
or
out
call
lods
pop
js
arpl
mov
addr16
pushf
maskmovq
imull
jmp
arpl
js
jb
pop
jnp
clc
sbb
call
cs
xchg
dec
fistps
fisubrl
xchg
and
mov
jp
push
mov
adc
dec
rorb
ljmp
out
pop
dec
xor
cmp
push
adc
push
cmp
into
jge
bound
mov
imull
cs
cmp
lret
or
and
pusha
push
push
loope
jg
and
fsubp
pop
xchg
inc
fsubl
or
xchg
mov
repz
mov
bound
jb
sbb
push
xchg
or
rorb
fwait
sub
sti
jno
dec
test
and
es
aas
bt
rorl
sahf
data16
inc
push
mov
cmp
je
adc
pop
addb
sub
dec
mov
pop
push
int
outsl
push
or
xchg
push
mov
pop
fcompl
inc
or
add
int3
jmp
shll
push
daa
ljmp
lret
sub
arpl
cmp
enter
inc
lahf
aaa
les
pop
test
and
call
mov
sti
and
inc
xchg
dec
add
push
fbld
mov
cmpsl
mov
mov
cmp
pop
iret
mov
int3
stos
jmp
mov
lods
dec
xchg
push
and
jo
push
aaa
sahf
shll
js
in
sarb
cmp
dec
inc
gs
dec
jecxz
daa
cli
add
lock
shll
dec
xchg
ret
push
sub
pop
mov
adc
lods
jge
pop
fistl
xor
push
mov
fsubrs
mov
dec
pop
push
lret
sub
jle
or
outsl
push
add
mov
daa
xor
shrb
adc
mov
aam
test
jmp
jecxz
pop
movsb
loopne
insl
movsb
or
mov
es
dec
and
push
cwtl
stos
lock
pop
iret
lcall
es
loope
fcomip
jne
movl
aad
push
fdivr
out
xchg
fwait
das
xchg
icebp
hlt
fwait
ss
mov
or
mov
outsl
rcll
or
mov
je
sahf
mov
sub
sub
lcall
ja
les
loopne
gs
shrb
add
sub
jns
inc
inc
stc
popf
add
in
cmpsl
xchg
scas
rolb
add
js
mov
inc
aad
out
loopne
rorb
cmp
outsl
dec
and
xchg
xchg
mov
dec
push
push
imul
out
push
pop
repnz
aad
mov
rcrw
dec
daa
mov
negw
dec
dec
and
std
add
or
jmp
sahf
inc
dec
pop
rcr
cld
int
test
test
xor
test
and
iret
cltd
sbb
loopne
push
sub
outsl
lock
in
push
xchg
adc
cmpsb
pusha
cmp
sub
pusha
mov
sbb
ret
mov
mov
shlb
leave
xor
insb
ds
mov
inc
sbb
loop
fwait
into
sub
cmp
repnz
xchg
mov
xor
inc
xchg
loope
std
call
sbb
imul
xlat
mov
xchg
or
cmp
arpl
sub
dec
mov
add
inc
push
inc
cmp
inc
outsl
and
push
lods
js
adc
push
hlt
hlt
negb
std
sbb
sub
xor
rcrl
pop
fstl
xchg
push
xchg
pop
push
mov
cs
addr16
jp
and
mov
mov
dec
sbb
cs
mov
add
mov
mov
mov
dec
fs
adc
xor
jbe
add
pop
cmpsb
pop
movsl
sub
fst
sbb
add
inc
cmp
inc
mov
pop
lds
push
nop
aaa
mov
mov
dec
aad
pop
mov
push
popa
lcall
adc
xlat
ss
fidivl
xchg
pop
adc
ljmp
clc
push
lods
xchg
xlat
mov
leave
sahf
mov
lcall
nop
xor
xchg
inc
ss
pop
insl
sbb
test
push
cltd
into
xchg
xchg
xorl
test
in
in
push
pop
faddp
cmp
dec
cmp
push
pop
inc
arpl
inc
mov
aad
push
mov
scas
mov
int3
icebp
jecxz
push
shrb
jae
mov
je
daa
sub
movb
lea
mov
sbb
ficomps
pop
sbb
mov
call
pop
in
rep
dec
dec
push
jbe
cmp
mov
mov
mov
ret
sub
pop
xchg
xor
pop
mov
add
jno
int3
adc
in
xchg
insl
and
sbb
dec
psrld
clc
out
inc
pop
shrb
lret
xlat
cli
daa
popa
sahf
or
adc
push
lods
pop
incl
lea
xchg
push
xchg
jp
clc
int3
daa
mov
fwait
jge
int
sbb
mov
fucom
dec
push
loop
pop
sub
enter
mov
shr
pop
imul
rcrb
cmp
inc
adc
insl
mov
dec
test
push
adc
push
leave
ret
xorl
mov
inc
sub
xor
dec
ffree
sub
sti
sbb
pop
in
pop
inc
jecxz
push
fistpl
jg
rcrb
cmp
mov
pop
loopne
popf
popa
subl
cmpsl
pusha
fiadds
shl
xor
jp
xchg
addb
mov
stos
testb
stc
jge
sbb
push
dec
dec
adc
push
rcll
imul
pushf
cmovle
sti
jns
cmp
or
test
add
in
je
xchg
jmp
mov
std
mov
jno
pop
sub
int3
lock
adcl
repnz
add
addl
push
mov
test
xchg
roll
sub
xorb
dec
inc
lods
push
pop
mov
stos
pop
fimull
or
xor
dec
aam
shlb
jo
inc
mov
addb
jbe
inc
push
mov
insl
fld
dec
stc
imul
divl
rcrb
movsb
out
lods
test
add
test
mov
cmp
sbb
jno
xchg
test
dec
sbb
push
adc
mov
dec
les
test
in
aas
xor
fdivs
cli
dec
jp
in
fisubl
mov
int
fndisi(8087
mov
ljmp
sbb
xchg
js
ror
lea
es
push
xor
cmp
mov
out
int
mov
jb
mov
ljmp
or
fstpt
mov
sbb
movsb
repnz
loope
sbb
mov
mov
loop
mov
mov
nop
add
inc
dec
mov
push
pop
jno
mov
xchg
jp
mov
out
adc
cmp
fdivrp
daa
push
mov
or
inc
pop
cmp
push
vpcmpgtb
add
mov
sub
jl
or
dec
dec
fisubl
mov
inc
aaa
sahf
sarb
aam
mov
pop
ljmp
push
jp
push
popa
stc
fucom
in
xlat
aaa
mov
xor
cmpsl
mov
popf
cltd
roll
mov
stos
scas
push
cmc
sub
xor
fmul
lods
adc
enter
fimull
and
arpl
mov
jbe
ds
dec
pushf
mov
push
imul
nop
inc
arpl
jns
add
lcall
loopne
dec
dec
jae
test
shll
and
aaa
pop
mov
repnz
std
testb
test
or
shl
xor
sbb
call
cmpsb
test
add
push
xor
in
fs
cmp
jbe
aam
divb
mov
in
sldt
push
cmp
adc
daa
or
adc
aas
sub
or
outsl
pushf
xcrypt-cbc
cmpsl
push
test
inc
inc
aas
nop
subl
dec
shrb
fldl
lds
mov
aaa
aad
push
cld
inc
int3
shrl
cmpl
or
es
pop
and
pop
adc
std
adc
cmpsb
add
and
adc
enter
iret
out
addr16
cmp
sbb
cmp
or
sahf
pop
sub
sub
scas
sbb
popf
push
not
cmp
pop
cmp
xchg
sbb
das
fbstp
lods
das
or
jg
sti
test
xorb
js
dec
pop
mov
jne
and
fistl
fcmovu
nop
pusha
ss
inc
inc
pop
push
inc
cld
cmp
pushf
mov
frstor
sub
icebp
cmpsl
in
andb
and
sar
in
sbb
divb
add
sbb
inc
test
mov
inc
jecxz
xchg
test
mov
xor
push
add
clc
mov
xor
mov
mov
lahf
addr16
mov
dec
popa
inc
xor
retw
xchg
adc
xlat
push
xor
pop
mov
mulb
jns
scas
jg
push
mov
xor
jb
es
push
in
mov
gs
mov
out
fisubrs
clc
add
pop
stc
outsl
xchg
sbb
subb
xor
mov
and
inc
sub
xchg
leave
and
mov
xchg
stos
aas
sbb
ss
push
jmp
mov
dec
mov
mov
add
jnp
insl
xchg
adc
and
ja
inc
enter
or
push
in
fdivrs
hlt
jge
push
cld
scas
sbb
into
or
loope
pop
lahf
jmp
and
jo
jno
out
inc
sub
push
xchg
dec
repz
pop
icebp
inc
popa
jno
mov
xchg
sbb
outsb
mov
mov
cmp
mov
loopne
int3
push
lret
stos
mov
mov
das
mov
mov
cmp
lret
and
rclb
dec
xchg
stos
adc
dec
loopne
or
sti
push
nop
sbb
jne
sub
push
mov
popa
daa
test
push
sub
xchg
mov
mov
pop
in
icebp
cmp
push
hlt
out
js
adc
enter
or
mov
mov
and
repz
mov
sub
jge
inc
mov
push
emms
mov
xchg
lret
adc
push
int
in
add
sbbb
mov
jno
imul
clc
add
movsb
add
popa
push
pop
mov
jbe
jp
jo
mov
lcall
mov
cli
push
fstpt
lahf
cmc
lret
pop
lods
sub
xor
movb
outsl
pop
and
or
jp
and
sub
lret
xor
inc
dec
sbb
or
mov
lahf
push
jp
mov
push
inc
dec
and
adc
movsl
rorb
js
mov
xchg
xchg
and
mov
xlat
pop
xlat
cmp
and
sub
lcall
xchg
cmpb
arpl
mov
fists
pop
ja
sub
out
outsb
mov
movl
adc
arpl
bound
inc
lods
inc
and
dec
repz
dec
aaa
inc
into
loope
and
fadds
cmp
call
adc
xchg
stos
jns
mov
stc
mov
test
aaa
and
xchg
cwtl
adc
je
xor
sub
adc
or
ja
popa
pop
fwait
push
dec
inc
push
pop
pop
xor
shl
insl
stos
xchg
sahf
mov
cmovnp
addl
clc
call
das
xor
shlb
movsb
enter
sbb
outsl
mov
mov
fldlg2
aad
sub
mov
pop
jo
sbb
dec
stos
es
pop
stos
movsb
adc
xchg
mov
fidivrl
ja
repnz
mov
or
adc
xchg
jb
loop
xor
pop
mov
xchg
adc
mov
cli
dec
xchg
aas
inc
sarb
cmp
das
push
ljmp
sub
sbb
jb
sbb
test
mov
xlat
repnz
addr16
inc
in
fucom
jae
pop
pop
popl
mov
jne
in
or
js
mov
fidivs
cmpl
ficoms
adc
bound
repnz
and
arpl
das
es
mov
mov
pop
jb
fcoms
int3
shlb
ljmp
imull
mov
aaa
gs
and
sbbl
shlb
xchg
and
clc
push
ret
push
aas
jle
sub
push
arpl
pop
popa
in
icebp
mov
pop
pop
mov
add
js
sarl
testl
push
loopne
jae
gs
add
push
je
shrl
mov
outsb
inc
mov
xchg
inc
cmp
cs
add
ret
jle
push
shl
cmpsb
cmp
xor
add
push
ja
or
dec
cmp
jecxz
adc
in
and
loope
repnz
sbb
dec
cmp
mov
and
movsl
pop
imulb
daa
pushf
xor
push
loop
add
out
cmp
test
shll
sti
fucomip
dec
in
cmc
test
cltd
scas
add
adcl
inc
mov
pop
jae
add
mov
stos
dec
leave
cs
hlt
cmp
inc
cmp
sbb
pop
das
cmp
sbb
and
rcl
mov
rcrl
fiadds
xor
test
popf
mov
push
bound
xchg
inc
fcoms
or
shll
incb
pop
enter
stos
arpl
fstpl
push
sbb
or
and
aas
das
sub
or
inc
dec
lods
xor
push
icebp
jp
ja
je
xchg
cmp
lcall
call
adc
sub
cmp
pop
xchg
call
repz
lea
mov
incl
add
jp
popf
sti
clc
sbb
mov
jno
sbb
inc
ss
imul
xorb
pop
and
xor
fcoml
into
sub
lret
insb
cmpb
add
cltd
stos
stc
dec
xchg
push
ret
test
fisubs
inc
outsb
lret
add
fwait
adc
jl
push
scas
mov
adc
movsb
dec
nop
cld
xor
icebp
popf
inc
mov
or
pop
xlat
cs
jl
mov
jle
jecxz
jge
and
cmp
sbb
lret
or
cmpsb
add
cltd
push
adc
dec
or
mov
sarl
jnp
fnstsw
test
pop
ja
add
mov
fcmovb
out
in
push
stos
test
lret
les
inc
fwait
iret
or
bsr
sbb
cmpsb
add
dec
mov
sti
cmp
sub
stos
rolb
jb
scas
pop
int3
insl
xlat
pop
sar
push
pop
cmp
inc
mov
cmp
inc
std
out
inc
mov
pop
dec
cli
aaa
pop
or
inc
lcall
dec
jge
push
xor
call
addb
sub
xchg
gs
pop
pop
push
xor
fisubl
sarl
inc
pop
lcall
addl
mov
repnz
pusha
cli
add
insb
andl
dec
inc
xchg
inc
add
xor
and
pop
sbb
sub
ja
fistpll
fsubrs
xor
mov
cmp
mov
test
enter
sbbl
xlat
rclb
pop
fmuls
lods
or
mov
dec
add
push
jg
in
imul
aam
repz
add
je
add
mov
mov
or
adc
xchg
mov
inc
stos
or
mov
sti
xor
scas
or
fs
iret
scas
loop
mov
push
inc
mov
add
shlb
pop
mov
push
cmc
xor
std
cltd
sbb
out
out
aas
jnp
sbb
xchg
jb
sti
popa
mov
ja
pop
incb
mov
stos
inc
cmpl
sbb
mov
cmp
out
aas
pop
sub
aam
sub
dec
dec
xchg
push
push
or
mov
int3
insb
aas
adc
inc
lret
loopne
inc
out
aam
fisubrl
sub
mov
lods
add
mov
enter
lea
pop
shrb
lahf
xchg
mov
hlt
jecxz
daa
add
xchg
push
xadd
loopne
jo
int3
xor
xchg
rcrb
lahf
push
push
dec
out
adcl
mov
xchg
inc
pop
xor
dec
ljmp
fisubrs
sub
test
test
jo
cmp
xchg
inc
adc
push
adc
pop
std
out
test
test
notb
xor
fisubs
cltd
bound
lret
mov
movsb
jo
dec
jo
and
lods
adc
pop
pop
xchg
jne
add
jp
std
push
andl
adc
fistps
movsl
cmc
sbb
sub
icebp
fldt
fsubr
stc
xchg
lahf
mov
movsl
lcall
cmp
inc
cmp
xor
imul
cmpsb
pop
mov
sub
xor
xor
int
in
jg
dec
and
xor
push
pop
popf
iret
add
insl
pop
pusha
jl
sub
xchg
add
sub
adc
insl
and
dec
add
xor
adc
call
fwait
push
bound
dec
jmp
jg
in
cli
ror
sub
push
pusha
mov
test
pop
adc
mov
inc
test
fxch
mov
dec
push
cmc
inc
xor
das
out
add
mov
jmp
lret
add
push
aam
jle
lcall
adc
inc
sbb
ret
outsb
loopne
sbb
sub
inc
mov
sub
mov
mov
enter
movsb
inc
push
and
addr16
sub
scas
clc
cmp
sub
inc
shrl
out
xchg
mov
aaa
mov
sub
pop
in
push
inc
jge
mov
stc
sbb
lretw
jge
int
pop
add
or
std
sahf
adc
mov
lret
mov
sbb
dec
and
mov
sti
xchg
mov
sub
xchg
mov
test
movsb
sbb
sub
test
test
mov
lcall
adc
pop
insb
hlt
mov
push
mov
or
xchg
daa
jp
je
mov
pop
cmp
xchg
mov
in
fwait
inc
inc
loope
mov
ss
ja
daa
xor
loop
es
rol
ror
inc
mov
pop
or
push
pop
test
lret
shrl
cmp
repz
test
and
hlt
in
mov
xor
pop
and
cmp
jl
icebp
push
mov
dec
pop
xchg
mov
mov
pop
cmpsl
cmp
and
lcall
mov
flds
sub
xor
repz
dec
sbb
dec
and
push
out
push
cwtl
inc
test
mov
out
cmpsl
mov
cpuid
inc
shlb
inc
fucomip
sbbl
fs
sub
in
fs
adc
mov
mov
adc
inc
repz
or
jnp
pop
clc
mov
push
sti
lahf
into
in
out
or
call
ret
jnp
clc
xor
jp
shrb
or
push
mov
bound
outsl
dec
into
mov
shl
mov
imul
mov
je
sbb
idivb
jl
stos
ss
insb
adcb
ds
cmp
loope
fwait
push
push
repz
loopne
lret
xlat
idiv
das
aad
pop
sub
sbb
rorl
insl
movsl
and
ja
or
mov
mov
sbb
enter
jno
leave
mov
mov
loop
loop
scas
je
add
push
mov
cmp
int3
mov
lods
adc
add
or
cli
cmpsb
push
jae
push
insb
std
ljmp
jns
inc
mov
jge
pushf
or
fiaddl
pop
arpl
mov
in
bound
addl
hlt
cmp
in
push
cld
mov
orb
clc
les
pmulhw
mov
mov
ds
ror
push
dec
sbb
cltd
xlat
jno
bnd
mov
movsl
lds
mov
xchg
loop
mov
dec
stos
push
and
loope
sub
lea
xor
test
xor
ret
int3
push
scas
dec
adc
dec
shll
push
mov
mov
and
sbb
stos
lret
cmp
push
data16
pop
test
push
mov
insb
xchg
scas
insb
pop
outsb
xor
aas
stos
push
xor
xor
into
scas
aaa
cs
negb
push
pop
pop
mov
add
test
in
or
jns
jae
leave
stos
jnp
jg
ljmp
sub
push
lahf
je
inc
pop
dec
inc
dec
push
inc
cmp
dec
mov
insb
mov
mov
notb
xchg
mov
lods
or
insb
aad
mov
mov
jno
test
inc
push
nop
and
jecxz
xlat
or
mov
jl
testb
mov
sbb
addb
sti
data16
xor
ds
pop
jno
aad
insb
cwtl
pop
cmp
or
fs
sbb
lcall
push
cmp
mov
loop,pn
iret
fwait
aas
xor
mov
inc
icebp
test
cltd
mov
popf
fidivs
in
adc
std
in
mov
xchg
dec
and
push
push
push
cmpsb
and
jno
sti
inc
cmpsl
rcrw
daa
mov
repz
mov
mov
mov
sarb
or
pop
test
or
jne
outsb
xor
test
lcall
js
leave
jns
cmp
adc
pop
call
mov
cmp
add
test
hlt
fsubrl
inc
test
dec
cmpb
cmp
test
or
jo
xchg
pop
jl
xchg
xchg
push
mov
xchg
xchg
in
and
je
cmp
mov
cltd
sub
test
mov
pop
fstpt
loop
dec
inc
imul
ljmp
dec
lods
int3
jp
push
lret
and
sub
jns
aam
dec
cwtl
inc
icebp
xlat
xchg
js
mov
in
stc
push
jae
sbb
adc
lret
sub
xchg
jl
int
push
xchg
push
popa
jge
inc
pop
sar
scas
rorl
or
cld
aaa
jo
ljmp
lods
out
or
xor
mov
fsubs
outsl
das
jecxz
mov
xchg
icebp
add
cmp
jp
negl
and
mov
mov
lea
xor
insb
int3
xor
push
cli
and
mov
mov
xchg
in
dec
mov
and
imul
add
int
or
or
je
mov
rorb
out
ret
pusha
xchg
mov
dec
jnp
test
andb
add
add
ss
xchg
ljmp
fnstcw
jmp
mul
add
rcrb
movsl
fbld
jmp
lods
inc
lea
xor
dec
xchg
lods
mov
adc
sbbb
out
dec
pop
mov
mov
and
inc
inc
lods
dec
jmp
dec
movsl
xor
lea
aaa
test
mov
cmpsl
mov
mov
fsincos
inc
mov
enter
jg,pn
mov
insb
mov
mov
nop
pop
pop
sub
lock
sbb
pop
cs
push
lahf
andb
or
xchg
adc
nop
insb
les
cmp
sbbl
rcr
mov
notb
xchg
andl
insb
ret
fcoms
mov
inc
or
dec
add
adc
hlt
xchg
rclb
scas
sub
xchg
pop
rclb
push
mov
mov
pop
ds
inc
add
lds
sbb
pop
sub
or
sub
out
push
xorb
add
test
arpl
push
push
bound
cmp
add
loope
and
ja
imul
sbb
add
and
dec
cmp
test
or
shrl
or
sub
sbb
call
test
fisttpl
jnp
and
mov
push
pop
rcrl
ret
jae
sbb
divl
sahf
rcrb
push
mov
fsubrs
pop
lds
jne
inc
cwtl
push
sahf
out
cmpb
dec
int3
out
int
xchg
int3
or
mov
xchg
adc
pop
mov
mov
fs
icebp
mov
lods
inc
popf
jl
cmp
jnp
push
bound
out
push
loopne
mov
add
dec
mov
lcall
mov
aam
ss
and
jb
sub
out
stos
mov
in
add
add
cmpsl
xor
lods
repz
ret
cmp
fbstp
std
insl
xor
jns
xchg
ja
or
mov
gs
or
idiv
and
xchg
int
in
inc
adc
je
or
out
mov
pop
mov
loop
shlb
jmp
mov
jmp
sub
sbb
es
mov
adc
mov
movsl
adc
outsb
out
sbb
lret
cli
movsb
negl
sub
mov
or
outsl
push
xor
in
pop
inc
rcrl
shl
outsb
sub
dec
pop
into
push
pop
mov
cli
call
movsl
fwait
ret
sub
inc
lods
dec
das
sub
enter
hlt
sbbl
ficoml
mov
push
adc
fcompl
jg
or
push
insb
adc
les
les
dec
push
mov
cmpsl
push
in
jecxz
fbld
add
ds
cmc
dec
ret
flds
iret
test
xlat
daa
mov
mov
mov
pop
mov
jnp
xchg
out
in
inc
mov
or
pop
sbb
je
mov
mov
push
mov
or
ret
mov
insb
call
fcmovnb
mov
mov
jae
loop
cld
addl
xor
popf
loop
mov
imul
out
xlat
mov
fs
pop
sub
insl
sbb
add
mov
movsl
imul
sbbl
mov
push
mov
fsub
shll
int
mulb
sbb
dec
push
mov
jge
pop
xchg
inc
xor
aad
lret
movsb
jbe
cwtl
push
mov
pop
das
jmp
dec
loope
inc
push
sti
insb
jns
xor
or
cmp
repz
ljmp
add
and
xor
xlat
pop
mov
nop
test
adc
adc
adc
mov
in
lock
jae
add
mov
lods
sub
sub
adc
inc
jle
pop
pop
push
xlat
xchg
add
fs
jns
lods
and
jno
outsb
cld
pushf
xchg
xor
rolb
mov
dec
mov
push
gs
das
mov
les
subl
int3
dec
inc
jne
es
test
pop
sbb
dec
jmp
test
mov
enterw
out
lock
and
and
adc
aam
pop
in
jle
jge
push
data16
outsl
xchg
stos
sti
notb
nop
fs
sbb
inc
xchg
sub
pop
loope
test
dec
cmp
xchg
mov
inc
adc
pop
int3
xorl
out
cmp
mov
mov
scas
fyl2x
aam
sub
popa
jmp
test
add
int
cmp
imul
dec
mov
mov
incl
in
adc
fisttpl
repnz
imul
fiaddl
and
cmp
adc
dec
daa
lea
je
jno
loop
jg
out
popf
mov
mov
ljmp
mov
test
add
inc
sub
jge
mov
sub
sub
ljmp
adc
mov
je
add
cmp
adc
push
es
mov
je
or
fadds
push
scas
movsl
test
js
ret
decb
clc
push
jns
cmp
sub
or
lds
push
dec
mov
nop
or
add
mov
loopne
loopne
inc
out
mov
pop
mov
jnp
mov
loop
lds
inc
rorb
mov
ret
push
inc
test
test
dec
cmp
pushw
fs
mov
je
shl
push
insb
insb
bound
imul
push
addr16
sub
pop
adc
ds
adc
rclb
insb
mov
movsb
movsb
push
inc
pop
push
arpl
leave
js
in
pop
bound
out
jns
std
std
add
stc
lea
jl
int
fs
cmp
pop
and
sbb
movsl
pop
cmpsl
leave
iret
mov
or
sub
out
pushf
add
mull
ret
pop
sub
sti
inc
loop
and
sub
jg
icebp
enter
jb
decl
imul
nop
incl
gs
dec
push
sbb
scas
cmp
and
mov
shl
jno
cmp
cmp
gs
and
imul
in
out
push
inc
int3
adc
imull
add
and
mov
loope
and
bound
shr
pop
daa
out
mulb
fcoml
adc
cmp
iret
pop
jo
das
out
and
lret
shrb
fisubrs
add
ljmp
sub
xor
pop
stc
push
enter
add
jns
cmpsb
scas
rorb
cmp
int
fxch
jecxz
mov
repnz
ret
push
mov
mov
pusha
mov
sbb
sbb
scas
mov
cmp
stos
and
lea
js
and
out
mov
mov
adc
jae
imul
and
xor
add
dec
in
pop
call
lret
push
sub
mov
pop
leave
fs
repz
scas
add
jecxz
mov
jecxz
mov
jns
push
add
mov
sub
lock
movsb
loop
pop
insl
lds
in
jmp
bound
aaa
insl
push
pop
mov
cmpsb
orl
cmc
or
mov
push
sar
xor
loop
pop
xchg
sub
and
pop
xchg
pop
mov
push
jne
xchg
enter
sub
lret
fcomps
popf
or
xchg
mov
cmp
adc
add
sbb
jnp
mov
test
lcall
divl
dec
pop
jecxz
push
pop
shlb
sti
ret
dec
fisttpll
push
or
xlat
inc
rcrb
and
and
imul
bnd
ret
push
lret
fldenv
lock
out
sub
aas
push
in
movsb
ss
into
mov
or
xor
sahf
xchg
lret
test
pop
pusha
loope
scas
orl
mov
daa
test
popa
cmp
inc
jmp
or
js
xor
icebp
mov
dec
es
push
iret
mov
inc
lret
cmp
sbb
jle
or
inc
cmp
or
xor
xchg
adc
movsb
pop
dec
xchg
cld
aaa
sti
arpl
fcmovnu
sahf
add
mov
mov
inc
cltd
popf
mov
or
lret
clc
sbb
cmp
shlb
push
and
fildl
jle
popa
in
mov
leave
lock
xchg
dec
bound
pop
stos
mov
test
sahf
mov
sub
test
fimuls
ja
adc
cmpsl
cmp
dec
cmp
and
mov
sti
loopne
xchg
sub
rcl
ja
mov
adc
pop
addr16
jg
adc
or
push
push
sti
sub
jbe
sub
xor
xor
rorl
add
adc
jbe
or
test
popa
mov
das
mov
inc
aas
cmpsl
push
call
aas
sbb
or
dec
pushf
je
dec
xchg
mov
repz
orb
in
jae
arpl
ds
inc
shlb
cmpsb
mov
mov
rcl
jl
jb
xchg
nop
jp
loopne
push
loopne
inc
push
jae
push
mov
cmpsb
push
int
adc
rcl
cwtl
jp
mov
xor
insb
push
cmp
xor
scas
lock
dec
lds
icebp
arpl
stos
mov
fldenv
notl
jne
sahf
push
stos
sbb
es
mov
xchg
cmpsl
sbb
mov
sbb
sub
and
out
cli
mov
sbb
fwait
jmp
outsl
or
add
sbb
outsb
fwait
xchg
sub
pop
or
gs
rol
bound
ret
inc
in
cmc
adc
mov
add
inc
adc
dec
out
insb
in
mov
mov
or
jle
xchg
test
pop
fsubl
bound
mov
call
mov
dec
lcall
jnp
mov
xor
sub
mov
or
cwtl
fpatan
cmp
insb
adc
in
cmp
imul
jbe
cmp
xorl
mov
add
push
xor
repnz
les
sbb
bound
adcl
jae
loop
or
fucomip
lds
adc
push
mov
sbb
inc
lock
push
add
dec
jb
cmpsl
or
mov
jb
cmp
fidivl
es
sbb
mov
mov
fnstcw
mov
xor
aaa
inc
fwait
pop
loop
xor
cmp
push
test
mov
mov
negb
jbe
sbb
mov
ljmp
outsl
inc
sub
add
les
dec
adc
rcrb
push
adc
xor
xchg
push
xchg
in
jo
fimuls
jmp
lods
mov
sub
mov
andb
cmc
insl
je
fwait
jne
mov
mov
xchg
dec
xchg
dec
gs
add
xorb
jecxz
imul
shrl
ficompl
mov
jb
sahf
pop
insb
lret
aad
cmpsl
push
xchg
jmp
mov
mov
loop
cmpb
aas
sub
push
mov
fs
aaa
sbb
dec
lret
in
es
or
clc
rolb
pop
jbe
test
in
jb
lea
mov
in
jmp
pop
or
and
dec
data16
sub
in
jno
xchg
popl
xlat
or
jo
pop
cmpsb
adc
into
jg
ja
rol
xchg
lods
stos
mov
push
mov
scas
popf
pop
repz
mov
fwait
addb
sbb
stc
lret
out
jnp
subl
sub
ret
add
xchg
daa
xor
jg
pop
out
stos
mov
jbe
les
test
jp
mov
insl
xchg
les
cmp
clc
fmuls
cmp
test
hlt
adc
lods
ss
push
sub
adc
push
push
inc
and
adc
andl
jg
mov
cli
daa
xchg
lock
adc
sbb
pop
dec
roll
je
add
push
mov
mov
repz
sbbl
add
mov
xor
iret
repnz
mov
mov
dec
jle
inc
mov
and
ja
stos
push
push
fmull
mov
je
sbb
mov
push
sub
data16
adc
push
pop
loopne
stos
adc
enter
sub
inc
int
sub
cwtl
lock
cli
sahf
mov
cmc
and
mov
push
das
stos
jmp
jg
repz
in
push
sbb
pop
test
mov
aam
aaa
sub
push
les
js
mov
lds
loope
dec
inc
fiadds
pop
push
popa
nop
sub
mov
scas
sbb
dec
mov
adc
shrb
aad
adc
sub
fstps
lret
or
stc
subl
div
pop
pop
andl
popf
and
test
sub
xor
sbb
cmp
pop
stos
push
stc
push
test
je
movsl
add
sbb
jns
lcall
lret
call
leave
mov
push
icebp
subl
jo
push
lcall
aam
mov
cmp
in
popf
insb
sarl
leave
mov
sbb
loope
daa
leave
in
cmpsl
jecxz
dec
shlb
mov
lods
xchg
inc
pop
sub
and
xor
xor
imul
int3
dec
repnz
add
sub
loope
jmp
and
mov
rclb
test
call
cltd
or
lods
push
cmpsb
imull
adc
add
jl
out
cmp
leave
add
push
movsb
pop
lods
ljmp
lea
jg
shrl
or
in
gs
sbb
inc
push
add
sbb
enter
enter
jg
jl
dec
ficompl
sub
dec
inc
jmp
faddl
shl
sub
bound
xchg
rclb
iret
stos
int
shrb
notb
lahf
jp
lahf
cmp
cmp
mov
pusha
push
dec
mov
inc
aas
sbb
inc
cmp
adc
fnstcw
push
jb
sbb
std
jno
js
sbb
jmp
pop
jecxz
jle
xlat
sti
sbb
dec
cmpsl
sti
xchg
xadd
dec
lret
fucomip
mov
ljmp
jle
and
jge
mov
jg
adc
or
hlt
adc
xchg
clc
lods
outsb
or
bound
and
mov
aad
popf
push
cmp
mov
cld
movsl
push
js
jae
dec
sbb
iret
cmp
test
mov
push
jle
fidivrs
cmp
sar
fistps
bound
addr16
les
lcall
sub
sarl
jns
aad
clc
mov
loopne
xchg
push
rcl
push
loope
pop
aad
and
sbb
sub
ja
dec
and
ret
stos
xor
popa
pop
mov
popa
cs
scas
sbb
orl
cli
sbb
xor
sarl
mov
mov
dec
mov
xchg
inc
mov
dec
dec
sbb
repz
lret
stos
add
mov
leave
test
pop
sub
mov
xchg
movsl
dec
daa
into
add
mov
inc
mov
lods
or
dec
sti
cmp
pop
loopne
push
lods
in
mov
add
outsl
out
inc
bound
ljmp
mov
add
cmp
aad
leave
jmp
and
pop
pop
daa
jl
jo
xchg
adc
lahf
stos
inc
xor
inc
or
sub
push
xchg
shrb
jge
sub
jne
or
ja
pop
push
push
stos
int3
stc
ljmp
outsl
lock
in
dec
popf
xor
mov
inc
mov
cmp
xchg
insb
addr16
xchg
jbe
fdivl
sti
insl
add
push
cmpsb
ficoml
aaa
sub
sub
ficoml
push
xchg
xchg
sub
and
test
std
pop
das
jle
gs
sbb
loope
jo
lea
cmc
jne
mov
aas
mov
mov
bound
lods
dec
add
sbb
lahf
fidivrl
add
fstl
mov
jb
out
inc
mov
rcrb
aam
add
std
popf
ret
nop
sbb
mov
lahf
and
gs
push
pushf
xchg
pusha
int3
icebp
jge
push
push
neg
adc
sbb
push
lret
inc
or
ss
jge
je
pop
leave
sub
test
cmp
mov
call
rol
bound
iret
push
pop
jmp
ljmp
sti
xchg
add
inc
inc
insl
dec
jb
push
fwait
pop
fucomip
adc
imul
jne
mov
push
cmp
push
lret
loop
or
cli
sti
lret
xchg
jne
mov
mov
rcr
mov
lock
out
mov
cmp
movsb
loope
mov
mov
xor
inc
lds
xchg
mov
mov
repz
adc
out
pop
and
icebp
nop
push
into
pop
xorl
lret
decb
andb
ja
out
adc
enter
adc
enter
adc
cld
mov
pop
adc
adc
ret
vunpckhps
cmp
or
fcmovbe
jbe
pop
ret
xchg
nop
loopne
test
and
dec
inc
sbbl
sbb
and
or
push
lock
add
sahf
fisubrl
orb
add
daa
pushf
fiadds
rclb
movsb
in
fcoms
jne
xor
jbe
adc
gs
push
cwtl
repnz
arpl
movsl
xchg
les
fnstsw
loopne
fdivrs
cmc
insl
call
loope
sub
imul
cmp
dec
dec
gs
jns
ficompl
fstl
ds
cmpsl
sahf
push
push
push
mov
enter
sbb
mov
pop
jp
rolb
adc
outsl
or
inc
mov
dec
push
sbb
mov
arpl
dec
das
lcall
xchg
xchg
xor
and
fldcw
jle
bound
mov
lcall
mov
out
mov
pop
scas
and
jl
shl
fstpt
lahf
fisubl
cmpsl
or
movsb
test
movsb
xchg
pop
sub
imul
jnp
adc
sbb
loopne
pop
enter
rcrl
hlt
out
pop
sub
subl
jmp
or
imul
aam
and
das
test
pop
fldz
lds
sub
clc
aam
sbb
mov
stos
jb
rorb
cmc
xchg
jns
pop
inc
jb
dec
and
jns
push
insl
mov
stc
sub
les
sub
add
mov
repz
and
sahf
mov
mov
jg
mov
out
stos
xor
inc
mov
or
push
data16
cmp
rorl
mov
and
cmp
loopne
pop
xchg
adc
andl
xor
inc
int
xchg
aas
sbb
outsb
xor
es
push
addr16
push
je
inc
pop
inc
fsubrs
pusha
pop
pop
jge
or
adc
int3
shrb
push
inc
je
jmp
or
lret
push
lret
sbb
outsl
sarl
faddl
xchg
shlb
loope
mov
jp
sbb
push
sbb
mov
xchg
inc
aam
lcall
test
mov
adc
sbb
rorl
jmp
je,pt
cmp
imul
jb
mov
pop
lcall
data16
lcall
or
sti
dec
inc
xor
sahf
arpl
jecxz
in
adc
and
fstp
cmp
scas
push
roll
xor
push
jo
mov
jl
pop
add
popa
push
dec
cmp
push
sahf
lock
lea
andb
outsb
sub
and
mov
cwtl
jno
icebp
mov
orb
cmp
pop
call
adc
cmp
cmp
sbb
xchg
stos
das
in
push
mov
xor
add
sarl
pop
in
jbe
mov
out
icebp
dec
mov
mov
push
push
adc
push
sbbb
popf
jle
mov
pop
sub
push
cmp
out
pop
int
lcall
pop
imul
jmp
sub
pop
iret
inc
enter
xchg
and
dec
clc
mov
mov
jle
mov
pop
daa
das
add
daa
inc
add
in
cmpsb
fs
and
cli
inc
xchg
dec
xor
rclb
sub
jnp
ss
jno
shrb
mov
adc
cli
cmp
cmc
outsb
divb
imul
out
jo
sbb
test
mov
push
jns
sbb
lret
lds
cmc
mov
iret
mov
aaa
xchg
pop
sbb
mov
or
xchg
addl
inc
xchg
lock
shl
in
fistps
and
int
cmpsl
xchg
xor
out
leave
pop
scas
jmp
hlt
pushf
shlb
dec
aas
loopne
sarb
add
dec
dec
add
insb
movl
sbb
imul
jo
fstpt
sbb
out
inc
or
sub
and
out
rcr
ret
pusha
lahf
es
mov
xchg
imul
jle
lods
mov
push
mov
pop
cmp
cmp
mov
xchg
jae
sbb
movsb
jae
dec
nop
sbb
mov
jnp
jno
push
adc
xchg
pusha
jmp
mov
mov
repnz
rcll
push
repnz
mov
bound
stos
jae
xchg
sbb
xor
sbb
out
sub
and
in
xor
not
pop
jg
iret
mov
xor
ret
sub
mov
scas
lods
imul
loope
and
std
mul
js
out
rcrl
jg
push
jmp
and
ds
dec
dec
sbb
mov
rorl
sbb
dec
lea
dec
jge
int
aam
push
pusha
sub
sti
les
in
jge
push
mov
or
sbb
xchg
inc
and
ret
mov
sub
bound
xor
or
xchg
clc
mov
or
adc
xlat
xchg
adcl
dec
or
xchg
mov
lret
mov
jl
mov
push
xchg
inc
outsl
subl
add
xchg
ss
lock
sarb
jbe
mov
adc
mov
pop
jns
cmp
sti
xchg
arpl
das
inc
shll
xor
pop
xchg
mov
jp
cwtl
or
sbb
test
add
int
or
add
pop
frstor
js
jnp
pop
std
or
push
sbb
jae
mulb
inc
sub
push
push
xor
loopne
std
mov
mov
aam
mov
rorb
or
les
je
je
cmpsb
sti
cltd
pop
mov
push
outsl
in
mov
subl
in
mov
cmp
loopne
adc
stc
insl
add
xchg
shl
xchg
scas
mov
lods
push
cmp
test
arpl
je
bnd
mov
cmp
sar
ret
xor
stc
in
int3
push
adc
les
cmp
stc
xlat
jno
mov
mov
jns
mov
andb
dec
xor
push
mov
out
jmp
les
sbb
mov
push
roll
mov
add
cmp
sbb
popf
add
sbb
je
or
sbb
mov
fwait
lahf
or
lods
outsb
inc
aad
mov
daa
aad
cmovle
jmp
xchg
dec
mov
cwtl
mov
lahf
push
sbb
scas
cmpsl
das
sub
fisttpl
xchg
fs
dec
mov
pop
sbb
lock
jnp
jmp
and
jae
dec
push
rcrb
jmp
fbld
lret
arpl
pop
int
ret
mov
cmp
out
push
dec
mov
in
loop
fnstcw
js
cmp
cli
call
cmp
jle
jns
in
call
or
sub
outsb
sbb
inc
scas
test
fisubrs
mov
ficoml
repz
rorl
iret
lea
adc
insb
push
mov
sbb
push
fcmove
clc
push
adc
xchg
add
mov
test
shlb
es
bound
loope
jmp
inc
enter
rclb
mov
rcll
mov
mov
or
mov
xchg
sbb
loopne
xor
xor
aaa
ss
or
and
sub
mov
shll
jb
subl
cmc
mov
aad
int
lods
lock
mov
inc
and
in
xchg
jp
xor
pop
sarl
ss
mov
mov
call
jno
mov
jb
xchg
out
pop
popa
xchg
push
sub
mov
fst
xchg
arpl
pop
sbb
sbb
mov
and
loop
lds
cmpsl
jbe
pop
jl
cltd
inc
into
in
loopne
or
cmc
push
adc
iret
jb
cmp
cwtl
cmpsb
dec
into
mov
cmc
add
out
cmp
jge
ret
outsl
mov
push
call
jb
mov
xchg
loop
xchg
and
mov
xchg
push
fistpll
dec
cltd
ret
clc
mov
mov
xlat
clc
mov
stos
sahf
mov
jnp
cltd
add
loopne
inc
out
xchg
in
out
stc
jecxz
addb
sbb
jge
adc
mov
xor
push
xchg
bound
pushf
mov
hlt
out
mov
push
sti
xchg
cmp
hlt
push
xchg
push
mov
xchg
outsl
xchg
lahf
adcb
xchg
shl
nop
int3
push
rcrl
adc
loop
dec
test
adc
inc
loope
sbb
ret
neg
push
and
pop
push
call
das
jecxz
inc
shlb
cmp
hlt
jae
inc
sbb
into
mov
add
inc
xchg
imul
mov
insb
sub
mov
mov
mov
sbb
lods
xchg
push
fadd
mov
push
mov
dec
adc
int3
push
pop
sub
mov
aas
adc
add
popf
push
lods
mov
and
outsl
lcall
faddl
popa
js
sub
jecxz
mov
pop
cwtl
push
sbbb
inc
jecxz
out
pop
adc
repnz
cmc
idivl
mov
xchg
int
hlt
mov
into
sbb
std
jo
cmc
and
jg
mov
lret
fisubrl
xor
out
push
scas
lods
add
xchg
sahf
ret
daa
mov
shrb
fbstp
ret
jb
and
mov
movsb
inc
dec
bswap
jg
aaa
push
push
aad
dec
mov
adc
jae
pop
aam
mov
xor
push
out
jo
mov
adc
dec
xchg
cs
inc
jecxz
ja
mov
or
add
negb
mov
add
jp
jmp
push
sbb
jne
push
jbe
test
subb
icebp
push
popf
jecxz
and
out
in
arpl
decl
mov
scas
jb
jge
sti
or
lods
pop
aam
inc
mov
mov
out
dec
shlb
nop
jae
dec
out
imul
pop
mov
and
push
cmp
repz
add
jl
ret
mull
scas
loopne
pop
mov
dec
dec
mov
cmc
xor
dec
jo
pop
push
cmp
cmp
shll
sub
jae
vprotq
movsl
pop
int
adc
stos
push
mov
je
pushfw
call
mov
cmp
jns
add
stos
lahf
inc
add
lods
pop
das
rorb
fstl
outsl
xchg
test
pusha
sub
push
lock
or
xchg
outsb
das
daa
les
std
mov
jle
inc
xchg
popf
std
ret
jbe
and
xchg
dec
fcoml
fwait
jmp
jnp
test
or
xorb
cmp
loop
ja
out
pop
mov
adc
dec
mov
call
cmp
jnp
sub
repz
mov
lods
les
ss
and
loop
loope
push
not
test
xchg
xor
jmp
lds
repz
jae
aas
pusha
loope
shll
and
push
sarb
loope
xor
xchg
cmpsb
in
test
push
cmp
movsl
push
testl
and
xchg
xchg
imul
dec
mov
sbb
xorl
sahf
or
rcrb
dec
adc
xchg
mov
pop
adc
jp
sub
sbb
xchg
in
xchg
movsl
outsl
jbe,pn
cs
test
mov
mov
shll
and
jae
jp
outsb
fsubl
xchg
mov
dec
out
out
jle
pop
int
lret
add
push
cmp
mov
mov
fbld
jge
mov
in
cli
adc
pop
sbb
mov
push
cmp
dec
lock
mov
leave
daa
shlb
fadd
jmp
mov
mov
inc
dec
inc
adc
inc
insb
sbb
sub
cmp
mov
pop
adc
inc
lea
jnp
sub
icebp
push
lea
aaa
dec
ss
adc
movsl
js
dec
jbe
mov
imul
addb
pop
sub
jae
jbe
xchg
adc
cmp
jle
jp
outsb
lea
push
clc
test
movsl
lock
aaa
xchg
fldl
lea
xlat
sub
shr
lods
pop
jecxz
jg
mov
xchg
push
aam
inc
inc
call
rcrb
xchg
push
popf
rorl
adc
xchg
repz
pop
mov
das
dec
cmpsb
je
mov
pop
cmc
movsl
jmp
sbb
push
jle
leave
insl
jge
out
aaa
test
and
dec
sbb
lds
rcl
in
loopne
into
call
rcl
add
pop
insb
out
jecxz
mov
js
cmc
inc
fadds
test
push
out
push
scas
lret
pop
and
test
add
adc
cmp
xor
std
dec
movsb
inc
mov
rcll
pop
movsl
xchg
xchg
mov
dec
mov
les
movsb
stc
incl
and
mov
out
roll
sub
rcrb
inc
adc
movsb
sbb
xor
jl
xchg
in
scas
jecxz
mov
jl
mov
jmp
je
pop
mov
push
jle
sarl
out
sbb
adc
pop
cmp
push
sbb
rcrb
icebp
xorl
mov
inc
ficomps
jno
gs
and
inc
dec
sti
jmp
dec
xchg
xor
lcall
ficomps
push
addl
repnz
adc
xor
sub
adc
mov
pop
sub
mov
leave
inc
xchg
paddw
xor
dec
lret
push
adc
push
push
mov
mov
xor
stos
test
icebp
addr16
sbb
mov
mov
rcll
mov
push
dec
dec
fs
add
jbe
fdivs
test
mov
scas
cmpsl
fmull
pop
in
push
xor
add
mov
rclb
subb
cmc
push
outsb
xor
repnz
test
push
pop
pop
cmp
imul
cmp
xchg
lret
mov
mov
lea
adc
clc
dec
imul
setns
add
xchg
or
loop
xor
lahf
jle
mov
push
loopne
jb
cltd
into
xorb
mov
test
je
xchg
adc
imul
jl
test
mov
push
mov
loopne
aaa
push
lahf
outsl
pop
pop
fldcw
ret
xchg
test
sbb
fidivs
push
jle
clc
mov
in
xchg
in
pop
adc
ljmp
cmpsl
into
dec
test
inc
xchg
inc
and
cli
adc
mov
xor
pushf
jle
dec
lcall
push
test
jmp
movsb
inc
xor
mov
mov
sbb
dec
fistl
outsl
jle
push
dec
inc
aaa
cmp
inc
ljmp
ret
push
int
sub
pop
adc
dec
mov
repnz
movsb
ss
dec
hlt
adc
loopne
pop
lea
mov
inc
xchg
pusha
and
jl
xchg
adcb
fsub
inc
pop
push
aam
xchg
inc
or
sub
rcll
dec
mov
lcall
mov
into
cmp
inc
pusha
aaa
in
es
sub
jp
rorb
mov
int3
out
add
pop
cltd
inc
and
decb
mov
mov
out
xlat
pop
xor
lock
mov
xchg
in
sbb
cltd
cmp
aas
sub
test
out
sub
xchg
adc
xchg
xor
call
sub
popa
pop
cltd
and
jns
dec
push
in
subl
push
roll
jne
repz
xlat
xchg
sub
jg
mov
rorb
mov
dec
or
out
bound
xchg
aad
clc
inc
dec
loope
lcall
jb
loopne
sbb
xchg
aad
pushf
fistpl
and
push
repnz
pop
push
jecxz
iret
or
pusha
test
push
dec
scas
notl
xor
mov
push
sbb
into
sbb
scas
xchg
xchg
jbe
std
and
adc
aam
inc
idivb
lock
mov
mov
out
mov
pusha
lret
or
jl
mov
out
fstl
in
scas
sbb
and
mov
fcoms
pop
sahf
fisubs
pop
popa
pop
inc
imul
inc
adc
test
pushf
mov
inc
cmp
dec
pusha
test
and
mov
mov
cmp
in
shrb
stos
adc
and
jno
popl
imul
mov
jb
mov
mov
loope
inc
cmc
mov
mov
xor
push
fcoms
pop
gs
sub
aaa
cli
mov
cmc
out
mov
ss
iret
insl
into
xchg
out
sbbb
dec
fnsave
shl
sbb
mov
out
xchg
mov
or
mov
jb
aaa
hlt
lahf
lock
mov
out
lock
adc
hlt
mov
jbe
add
mov
sub
pop
out
addl
mov
jnp
lret
push
dec
stc
xchg
sbb
inc
fisttps
enter
dec
in
add
mov
push
add
or
push
xchg
cmp
sub
addr16
lds
push
jb
push
push
ret
test
cmp
test
push
mov
mov
in
imul
icebp
mov
je
and
push
or
dec
inc
hlt
in
test
movsl
lcall
hlt
jae
int
pop
xchg
mov
jmp
mov
and
aaa
int
insl
sub
mov
ret
cmpsb
mov
cmp
jp
popf
rorl
cmp
mov
into
mov
and
fimull
xchg
loope
xchg
xor
jnp
mov
and
test
sbb
jnp
add
aam
mov
add
or
iretw
ljmp
ss
es
mov
pushf
mov
shlb
and
pop
sub
jne
repnz
insl
loop
and
xchg
fld
inc
mov
ret
xchg
in
xor
xchg
pop
adc
mov
int3
rclb
dec
cltd
cwtl
mov
add
jg
cmpsb
addb
rcrb
jl
sub
xchg
xchg
sbb
mov
les
sbb
sbb
cs
push
mov
cmpsl
jno
das
sahf
mov
sbb
cmp
lcall
int3
add
mov
inc
subl
in
push
jmp
sbb
aaa
xchg
aas
inc
rcrl
adc
xchg
mov
aaa
dec
and
and
sub
mov
fstp
cld
aaa
nop
nop
mov
push
xor
jge
adc
or
mov
xlat
push
ds
bound
pop
xchg
or
pop
jecxz
add
jle
xor
imul
je
ss
mov
pop
into
shlb
push
or
mov
pop
lods
stos
inc
jno
xor
mull
ja
jns
jns
cmp
cmp
ret
cmp
loop
cwtl
shlb
push
xor
xchg
cmp
sbb
cmp
add
add
popa
xor
sub
sysexit
cmp
cmp
xchg
daa
aam
sbbl
and
add
sbb
mov
mov
xchg
cli
cli
and
cmpl
sub
cmpsl
shlb
loope
and
aam
pop
ds
jecxz
cmp
fcmovnbe
mov
and
cmpsl
sub
sub
and
inc
dec
cmc
xor
call
mov
popf
adc
or
dec
or
arpl
lret
jmp
faddl
or
mov
inc
lahf
pop
mov
cs
jg
fcompl
cmc
sbb
cmp
jle
in
xchg
stos
push
or
fcompl
adc
dec
and
pop
loopne
mov
inc
jbe
out
xor
or
test
mov
sbb
push
cmp
stc
test
cmpl
popf
pushl
mov
loop
dec
rcrb
into
add
dec
imul
adc
cmpsl
xor
out
add
stos
call
add
add
in
xor
or
fsts
imull
jl
xchg
iret
call
fsubrl
and
addb
stos
les
rol
cld
mov
xor
or
push
jbe
scas
bound
jne
add
jl
add
jle
mov
aaa
pop
xchg
xor
or
pop
jmp
adc
cmp
test
adc
push
lcall
arpl
bound
and
aas
sbb
pusha
icebp
test
int
mov
mov
pop
pop
inc
out
movsl
outsb
lea
lock
cltd
sbb
nop
add
cmp
jns
xor
cmpsb
push
imul
test
xchg
or
dec
mov
cmp
lahf
call
fidivl
cli
fimuls
ja
add
dec
add
jg
fmull
and
pop
decl
sub
xchg
cmpsb
loop
mov
out
ljmp
icebp
loop
mov
outsb
aaa
hlt
dec
push
sbb
push
jo
add
loop
sbb
dec
pop
inc
or
jmp
sub
test
mov
sub
mov
jno
xchg
or
xor
and
jmp
cmp
out
cmp
fldcw
sti
aaa
mov
add
and
out
pop
cmp
lock
xor
pop
inc
jae
mov
lahf
fwait
enter
mov
loopne
out
cld
add
fisubs
adc
push
les
popa
or
push
inc
add
insl
mov
fdivs
jno
mov
dec
rcr
shr
add
adc
mov
mov
fstpt
popf
jbe
jno
fisubs
push
insl
frstor
clc
sub
sahf
xor
lds
jg
pop
push
in
lds
xchg
inc
popa
addr16
mov
jne
add
xor
cmp
push
cs
push
lret
loopne
push
cltd
jecxz
stos
stc
leave
push
iret
iret
cmp
adc
test
das
push
call
jbe
shlb
add
stos
xor
ljmp
mov
mov
stos
mov
pop
mov
test
xor
xor
and
std
pop
or
mov
pop
pop
cmc
outsl
pop
jno
cmc
inc
ds
cmp
push
fadds
outsl
ret
sub
mov
cld
sub
adc
shl
jb
xchg
rcrb
leave
mov
and
jne
repz
test
xor
lock
test
sbb
subb
mov
int3
xchg
leave
into
adc
inc
sbb
dec
pop
mov
xlat
notl
js
jle
lods
mov
cmpb
test
pop
cltd
out
rorb
cmpsl
test
div
jo
orb
es
jmp
xchg
cli
push
out
lods
inc
jo
pusha
out
mov
jle
repnz
rcl
add
xchg
push
xor
dec
xor
xchg
pop
fs
inc
loopne
into
mov
mov
test
loop
outsb
sub
jle
ds
pop
add
cmpsl
and
scas
pop
insb
fdivs
add
xor
rcll
orb
dec
inc
ror
imul
shll
pop
inc
inc
loop
mov
add
ss
fwait
ss
imul
out
sub
adc
cmp
adc
xor
movsb
inc
jno
cmp
mov
pop
inc
scas
adc
outsb
push
ljmp
fldcw
xchg
and
stos
xchg
in
adc
fldenv
jmp
pop
jnp
adc
cld
popa
dec
dec
push
aad
shlb
ret
dec
mov
sbb
fwait
rorl
and
sbb
push
lahf
cmp
sub
clc
scas
mov
push
and
mov
lcall
or
cmp
repz
xchg
pushf
pop
addl
lret
nop
repnz
mov
inc
lret
test
mov
pop
pop
popa
inc
pop
notl
fwait
or
scas
fadds
xchg
outsb
and
popf
add
dec
pop
addr16
daa
pop
in
dec
jns
jae
cli
cmp
or
mov
dec
in
mov
jge
cli
xchg
repnz
lret
mov
add
cld
inc
daa
xchg
int
icebp
test
dec
loope
sub
clc
add
xor
and
cld
cmp
mulb
push
ljmp
ljmp
incb
and
mov
insb
andb
jmp
cli
mov
in
ss
adc
out
sub
adc
push
sub
mov
loope
push
js
sbb
adc
mov
pusha
or
test
cmpl
scas
and
pop
pop
or
mov
ror
shll
shr
cltd
mov
fs
je
sub
jbe
notb
sbbb
or
call
enter
mov
ret
bound
stos
fs
adc
add
jge
cmp
incb
add
mov
and
cmc
insl
sub
mov
cmpsl
push
inc
push
xchg
mov
in
dec
cli
std
cmpsb
adc
mov
cmp
jp
mov
and
inc
mov
mov
mov
mov
das
ret
cmp
mov
mov
ficoml
xor
iret
loope
push
ja
xor
int3
fwait
data16
sbb
adc
hlt
mov
mov
inc
shr
mov
popf
mov
movlhps
xchg
rcrb
mov
scas
bound
adc
loop
jb
inc
in
iret
push
push
sbb
ret
je
pop
pop
cli
adc
pop
mov
dec
movsl
mov
ror
mov
pop
mov
rcrl
pop
add
mov
xchg
cmp
pop
xor
enter
and
or
dec
fwait
lods
out
sarb
nop
xor
jns
sbb
dec
push
sub
ds
mov
bound
jb
mov
add
mov
dec
xchg
scas
xchg
ret
pop
or
push
dec
pusha
sbb
cmpsl
and
scas
jbe
stos
hlt
idiv
inc
std
aam
sub
add
xor
fsubrl
sbb
xor
inc
cmc
mov
imull
aas
xorl
inc
ja
scas
cli
dec
in
pop
pushf
aad
push
or
pop
pop
pop
mov
jbe
cmp
scas
sub
xor
xor
roll
mov
mov
hlt
out
pop
add
stc
xchg
jbe
fiadds
sbb
pop
adc
sahf
pusha
and
cmp
xchg
test
sbb
ss
in
jmp
sub
imul
add
call
loope
iret
adc
pop
inc
inc
out
xor
dec
adc
rcll
jmp
dec
adc
ljmp
xor
imul
mov
arpl
or
rorb
jb
sbb
movsl
aad
les
movsb
mov
mov
lock
in
ds
jge
sub
lock
std
xchg
jl
jo
jb
into
es
pop
dec
jle
mov
lret
jbe
xchg
test
test
je
sbb
ljmp
pop
xlat
jae
cmp
push
mov
sub
adc
xchg
mov
imul
inc
aad
outsb
repnz
push
push
mov
test
ret
sub
sbb
push
fcomip
ret
stc
mov
lret
cmpsl
sahf
dec
test
movsl
lahf
ja
adc
cmc
fdivrs
fdivrl
jp
das
stos
repnz
int3
int3
xchg
add
fidivs
pop
sbbb
cmpsb
jmp
adc
into
or
mov
outsb
cltd
xchg
push
out
pop
lret
fmull
and
cmp
and
outsl
lods
fdivs
cmp
loope
rorb
mov
into
cld
sub
sub
inc
or
add
shl
sub
insl
loopne
cmp
cs
xlat
int
xchg
int
jge
dec
mov
pop
ret
pusha
and
das
mov
test
sbb
nop
jge
adc
rorb
jae
add
or
or
aad
pop
sbb
inc
cli
lea
mov
mov
cmp
adc
sbb
imul
out
push
testb
stos
cmpsb
or
lret
aam
push
and
orb
jge
or
adc
xchg
sbb
test
jmp
ss
dec
hlt
lcall
shlb
xor
jl
pushf
jns
sbb
pop
xchg
xor
fsubl
cltd
inc
and
sbb
outsl
cwtl
jno
loope
dec
pop
scas
adc
xlat
imul
cmc
or
pop
sahf
lock
sub
inc
iret
mov
popa
sub
in
mov
mov
fdivl
stos
or
and
sbb
dec
ja
adc
xchg
and
mov
mov
inc
push
je
jno
cmc
js
roll
jae
mov
jb
mov
pop
mov
fxch
cmp
std
ss
mov
xchg
and
stc
pop
insb
add
mov
push
lods
ljmp
sub
lods
fsubrl
mov
mov
leave
clc
ja
es
mov
xchg
jl
inc
arpl
sub
call
or
fldl
mov
nop
dec
aaa
enter
cmp
adc
sub
xchg
sbb
add
jp
imul
lea
jo
push
jns
pop
adcb
cmp
push
cmpsl
in
lock
inc
lret
xchg
je
test
sub
pushf
nop
xlat
adc
sahf
or
xchg
cwtl
sub
movsl
or
movsb
arpl
dec
push
pop
mov
pusha
shll
popa
lret
fldt
bound
loope
dec
mov
mov
sbb
xor
cmc
cmp
push
clc
push
ror
push
jns
inc
imul
lds
stos
push
and
add
shlb
cld
fisttps
insb
pop
jge
and
ljmp
stos
subl
jbe
ds
adc
cmp
lret
inc
inc
inc
mov
sub
shlb
dec
fidivl
and
push
mov
mov
add
ret
nop
les
jge
mov
adc
ret
add
mov
scas
adc
jb
or
push
aaa
decl
sub
daa
and
cld
pop
aad
sbb
inc
cld
sub
lret
movsl
mov
in
mov
adc
fimuls
adc
mov
push
xor
jb
xchg
cmp
and
dec
inc
sti
mov
mov
nop
in
repnz
inc
leave
insb
push
andl
jbe
sbb
scas
lea
cmpsb
xchg
mov
pop
or
mov
xchg
sbb
ss
mov
mov
orb
mov
xchg
sbb
sbb
inc
xor
mov
cmpl
jbe
cmp
ud2
cmpsl
sub
push
imul
and
imul
adc
int
push
popa
xchg
enter
mov
push
pop
loope
mov
ljmp
dec
dec
jo
jmp
adc
xor
jns
or
lret
inc
mov
mov
jbe
push
and
cmp
cltd
es
jno
addr16
inc
mov
test
ds
jnp
xchg
jmp
pushf
shrl
pop
inc
adc
pop
lds
into
nop
mov
clc
mov
pushf
inc
gs
and
and
fdivl
das
jmp
cmp
pop
in
out
jmp
xor
dec
mov
sub
cmp
xchg
jno
mov
std
stos
out
mov
hlt
sbb
icebp
xstore-rng
cmpsl
inc
stos
dec
and
mov
fstl
cltd
add
mov
sbb
mov
jl
sbb
mov
xchg
xchg
adc
cmp
push
or
mov
imul
and
lds
mov
call
add
leave
xchg
sahf
fdivr
test
xor
mov
cmp
sahf
lods
xchg
cmp
cltd
ja
jns
inc
jp
mov
dec
ja
push
adc
xor
insb
aad
fildl
and
pop
in
xor
rolb
or
hlt
cmpsl
arpl
push
cwtl
jp
insl
pushf
or
cs
popf
and
lahf
mov
std
out
xchg
pop
dec
subl
int3
rorl
push
pop
adc
lcall
ds
or
shl
jge
jg
dec
shlb
add
jno
xor
cmpsb
inc
rorl
mov
xlat
ret
push
dec
aad
sbb
shll
mov
into
xorl
out
jne
mov
adc
and
jo
push
cmpsl
in
dec
in
xchg
cltd
jecxz
lods
mov
aad
bound
sbb
je
cmp
and
pop
out
add
mull
aad
inc
sbb
sbb
or
shlb
jmp
inc
cmp
das
lret
inc
movsb
out
addl
pop
pop
mov
aaa
and
sar
pop
mov
cld
add
mov
das
adc
daa
jne
cli
clc
xor
push
xor
fstps
jno
aas
sub
mov
lods
push
mov
dec
rcrb
push
lcall
addr16
sub
mov
jg
aaa
cmp
jne
adc
push
loop
popf
adc
adc
push
mov
xchg
pop
xchg
jb
sub
movsb
xor
cmpsb
imul
pop
sbb
sbb
mov
addb
int3
scas
daa
fidivl
inc
and
sbb
sahf
dec
loop
cmp
dec
xchg
icebp
cmp
xchg
test
mov
ja
inc
inc
cmp
mov
mov
dec
arpl
jb
xor
jecxz
pop
jb
loope
cmp
loopne
out
ficompl
int
rcrb
xor
pop
pusha
push
hlt
pop
aam
std
hlt
lds
rcl
mov
push
xchg
push
dec
out
inc
inc
push
imul
fisubrs
pminsw
popf
mov
loope
ret
jns
ficoml
lods
cs
xor
adc
hlt
cs
ret
dec
add
adc
call
syscall
xchg
xor
movb
or
lahf
add
scas
pop
popa
nop
sub
pop
mov
ja
jg
or
clc
jns
mov
pop
xchg
shlb
enter
inc
and
mov
mov
add
dec
adc
push
jg
test
sub
jns
adc
js
mov
dec
incl
into
fwait
or
or
xor
movsb
ret
aaa
pusha
popa
xor
mov
jb
pop
sbb
rcr
loopne
lock
ret
xchg
fnstsw
mov
pop
imull
movsl
mov
mov
lea
clc
jns
sahf
std
sbb
iret
dec
mov
cld
test
and
or
icebp
lea
enter
sbbl
jno
and
test
add
push
pop
jne
jecxz
sysenter
aaa
out
arpl
out
jl
and
bound
mov
cltd
sahf
push
dec
inc
pop
out
cmp
ret
out
sbbl
cmpsb
test
std
pop
xorb
sahf
and
jmp
jecxz
cmpsb
inc
jl
sub
and
jg
test
lcall
xchg
mov
insb
push
jns
pushf
sbb
pop
into
sbb
shll
sub
movsb
iret
push
xchg
mov
or
out
mov
mov
mov
fwait
jle
inc
clc
pop
add
loope
push
cwtl
mov
mov
push
cmpsl
in
sub
mov
sbb
jb
dec
into
lret
push
adc
jmp
lea
mov
jp
mov
popf
adc
inc
xor
cmpb
inc
pop
data16
mov
shll
push
mov
or
nop
inc
out
adc
pop
lret
adc
jnp
pop
daa
stos
jmp
mov
push
mov
and
xchg
cmc
pop
clc
cld
jle
pop
fucomip
push
mov
push
mov
inc
jns
sbb
in
push
fisubl
mov
xchg
pop
push
jae
jnp
sub
inc
notl
fxch
imul
mov
mov
mov
leave
push
test
scas
fisubrs
in
imul
cmp
orl
mov
repnz
push
aas
stc
mov
aas
push
mov
add
add
and
push
jl
out
call
rcl
jle
vminsd
push
cmp
stos
xchg
ficoml
add
mov
js
rcl
jne
cmp
test
inc
sbb
popa
out
push
stc
jbe
mov
cltd
and
sbb
inc
xor
cmp
enter
mov
rcrl
cmp
mov
in
mov
andl
sub
push
inc
fwait
or
cltd
or
pop
or
add
xor
mov
dec
mov
push
loopne
popa
div
into
xor
mov
les
lods
out
fmull
fisttpll
subb
mov
popf
popa
outsb
push
insb
lahf
in
jge
insb
mov
xchg
ss
pop
mov
jge
ljmp
jle
jle
insl
leave
cli
cmc
and
and
push
iret
mov
push
jmp
out
sbb
cli
movsb
aaa
cltd
cmp
pop
sar
or
lds
ss
rcrb
pop
div
aad
jp
or
inc
out
sub
das
inc
imul
or
ds
lock
jnp
ss
xchg
loope
cmp
xor
inc
ds
leave
and
ret
bound
ret
xchg
inc
push
push
cli
xor
push
mov
flds
cmpsb
inc
mov
stos
add
sbb
in
push
jg
call
aaa
sti
sub
test
out
out
loop
xor
inc
sbb
or
mov
push
daa
test
popa
popf
add
loop
inc
push
enter
mov
or
sbb
loop
out
inc
in
insb
xorb
cmpl
pop
jo
stos
dec
hlt
xchg
ret
in
ljmp
jns
cwtl
jecxz
mov
inc
popf
movsl
adc
test
out
leave
lods
push
inc
loopne
pop
bound
push
scas
movb
les
mov
inc
push
sbb
inc
push
outsl
xchg
les
sub
cld
call
xor
int
push
pop
stos
sub
adc
clc
push
push
xor
pushf
pop
sub
push
pop
sbb
out
cmpl
clc
jmp
mov
test
xchg
sub
jno
in
sub
mov
pop
xchg
xchg
mull
fstps
stos
int3
jle
dec
decl
xchg
cltd
iret
jo
daa
popf
cmp
sub
in
test
mov
cmpsl
jnp,pn
mov
loope
rclb
iret
cmpl
call
sar
mov
add
cmpsl
or
aaa
push
inc
inc
sahf
cmp
popl
sbb
cmp
push
lds
sub
or
push
dec
sarl
rolb
rol
imul
bound
inc
cwtl
xlat
iret
mov
mov
repz
test
pop
mov
movsl
mov
pop
je
mov
mov
lea
imul
mov
mov
add
insl
sbb
jmp
push
push
pop
add
ss
scas
sti
xchg
xchg
jle
lret
daa
sub
xor
mov
pop
mov
insb
repz
sbb
pusha
pushf
cmpb
lock
jl
and
cmpl
inc
bt
inc
aas
sarl
loopne
dec
inc
ret
push
inc
fstpl
cmpsb
push
test
and
in
ljmp
jge
movsb
push
pushf
in
pop
or
push
cltd
and
adc
cltd
adc
popl
pop
cld
dec
pusha
cmpsb
sbb
or
cld
fwait
ret
int
nop
inc
mov
popa
xor
in
popf
pop
insb
cmp
add
test
sub
rcrl
cmc
addr16
mov
pop
leave
or
test
aad
push
pop
mov
scas
movmskps
flds
jne
adc
out
jae
inc
mov
enter
add
ljmp
adc
sbb
mov
js
mov
sti
push
fisubl
dec
adc
mov
pop
std
xchg
pushf
mov
pop
test
sahf
mov
ss
shrb
ds
je
sbb
xor
jge
cmc
pop
leave
iret
pop
enter
fadds
push
insl
pop
dec
clc
out
sbb
lock
outsl
loope
sub
mov
cmp
sbb
push
test
mov
adc
clc
xchg
sti
pop
ja
jmp
repz
pop
dec
or
lods
cmpsl
jb
and
insb
adc
in
fwait
jmp
jle
iret
out
pushw
popa
enter
jnp
cmp
ja
jb
pop
aam
fadds
out
pop
adc
mov
fiadds
adc
pushf
dec
add
sub
addr16
outsb
cmc
push
out
xor
int
xor
jb
mov
pusha
xchg
and
mov
ret
jge
jns
testl
push
jbe
inc
lret
mov
push
mov
sub
rcrb
mov
mov
test
arpl
aad
push
xchg
adc
sti
mov
jns
outsl
cmp
orl
mov
fists
mov
push
scas
ja
cs
xchg
rclb
divb
jae
inc
pop
jnp
jp
das
movb
fistps
loopne
add
mov
popl
push
sbb
ja
inc
sahf
cmovs
mov
test
add
loopne
cmovl
leave
rcll
dec
es
mov
test
mov
les
pop
xchg
lret
push
pop
dec
push
stos
mov
pop
lcall
push
cld
mov
test
adc
mov
fcmovnb
and
or
pop
pushf
or
push
stos
lods
call
xchg
dec
mov
popa
dec
insl
cmp
cmp
in
and
pop
push
jl
sti
sbb
into
stos
pop
dec
sub
sahf
xor
add
push
xchg
xchg
lods
xor
into
nop
arpl
movsl
inc
arpl
scas
add
adc
sbb
and
subb
push
lret
xor
xchg
nop
inc
mov
sub
enter
mov
mov
jo
add
mov
xchg
pop
mov
dec
mov
fiadds
jecxz
adc
cmp
cmp
xor
les
jnp
jo
enter
or
test
fsubrl
mov
mov
sbb
xchg
pop
bndldx
out
popf
cwtl
sbbl
dec
movsl
mov
add
arpl
dec
and
and
mov
bound
mov
dec
jle
fiaddl
pop
jp
in
cmp
jne
jno
fisubrs
mov
stos
hlt
ret
rcrb
sbb
jae
rcrb
imul
push
add
push
loop,pt
test
xchg
push
mov
dec
sub
repz
inc
push
pop
popa
imul
outsb
mov
push
movsl
shrl
dec
fsubrl
popa
stos
push
iret
mul
fs
test
mov
in
push
movsb
adc
mov
ret
pop
shll
push
in
sbb
xchg
dec
jge
out
loop
jl
adc
adc
xchg
out
jbe
and
in
pop
test
or
test
push
xchg
pop
ss
push
pop
mov
xor
push
fsubs
movsl
shl
lahf
into
les
stos
inc
cltd
int
xchg
arpl
cmp
xchg
xlat
cmpsb
cli
jno
dec
or
lds
add
lods
test
mov
mov
sti
cld
andb
pushf
jns
rcr
in
jns
mov
xchg
loop
test
or
dec
sarb
sub
jp
jbe
lods
jle
or
push
pop
inc
enter
scas
pop
mov
inc
cmp
cs
popa
dec
and
movsl
and
adc
fidivl
inc
sub
inc
mov
jl
lcall
data16
data16
arpl
jmp
imul
lock
jo
mov
mov
jne
lods
xchg
xor
jo
push
mov
inc
or
cltd
loope
test
xor
div
adc
cld
and
leave
aam
mov
jg
mov
scas
sarb
int
mull
rcr
lcall
popf
cltd
mov
and
mov
aad
fs
das
dec
push
mov
jnp
cmpsl
loope
pop
mov
cli
sahf
subb
rclb
stos
push
push
inc
outsl
xchg
mov
cwtl
std
std
push
negb
xchg
aad
sbb
ja
in
mov
jp
in
lods
fildll
aaa
sub
sub
xor
outsb
or
fidivl
das
inc
into
scas
bound
add
jg
movsl
repnz
sti
bound
inc
mov
les
push
mov
nop
dec
das
adcl
xlat
fistpl
sub
sub
and
sub
xchg
and
mov
insl
clc
scas
mov
adc
roll
jmp
inc
pop
arpl
pcmpgtd
orb
aam
pop
adc
inc
or
and
mov
aam
shrb
mov
pop
mov
xchg
mov
mov
xor
out
and
sbb
or
scas
ret
fisubl
ja
mov
insb
loopne
popl
pusha
scas
push
mov
cmp
lods
inc
mov
int
inc
adc
lcall
inc
or
pop
in
mov
mov
nop
popf
daa
orl
enter
push
adc
inc
outsb
lret
xor
dec
sbb
dec
sbb
pushf
nop
loopne,pn
sbb
jnp
lahf
aaa
rorb
mov
clc
or
shlb
fidivrs
das
pop
pop
xlat
mov
in
xor
mov
add
jp
testl
push
jmp
inc
sub
in
popa
adc
addr16
dec
sub
popa
push
xor
scas
in
cmp
jns
ret
leave
dec
push
mov
inc
insb
sub
inc
mov
fcmovnbe
pop
cmp
cmp
or
push
jmp
insl
mov
frstor
lea
movsb
mov
movsl
cmp
cmpl
cmp
sbb
fstpl
cmp
xchg
test
mov
jecxz
mov
shr
push
inc
fimull
sbb
dec
test
and
xchg
pop
das
add
les
cli
pop
xchg
xor
push
inc
dec
dec
and
jp
mov
popf
and
je
xchg
clc
aam
dec
mov
ret
jge
insl
dec
mov
adc
xor
push
aas
scas
adc
add
test
stc
ret
mov
push
mov
add
or
pop
ret
mov
mov
aad
outsl
adc
sub
sbb
jno
sub
sbb
les
daa
bsf
rcrl
shrb
orb
out
jle
push
pop
imul
int3
cltd
cmp
add
pop
or
jo
and
in
shlb
mov
mov
cli
or
mov
cmpsl
icebp
xchg
repnz
leave
adc
lods
jl
mov
stc
insl
nop
mov
hlt
add
outsb
jae
xchg
rcrl
inc
mov
inc
sub
les
loop
icebp
jle
div
adc
jns
iret
sub
int3
mov
enter
pop
dec
in
loop
fldl
loop
sbb
jl
aaa
sbb
daa
nop
sbb
pushf
sub
sbb
jns
cli
lret
sbb
and
pop
out
loop
and
nop
aam
dec
push
push
mov
sub
ficomps
sub
in
and
mov
or
pop
push
sub
jmp
out
hlt
pop
push
ljmp
mov
jge
mov
into
stc
pcmpeqw
fldpi
aaa
or
sbb
leave
hlt
icebp
and
int3
add
mov
push
mov
cmp
dec
xchg
jne
out
inc
inc
call
inc
push
mov
mov
xchg
test
add
inc
pop
pop
loopne
popa
out
xchg
mov
and
outsb
popa
jno
xchg
fucomi
pop
dec
push
test
pop
ljmp
add
clc
xor
loope
sbb
sub
jmp
fidivl
imul
or
add
stos
out
fimull
cmp
call
stos
daa
mov
arpl
pop
clc
mov
daa
pop
inc
sti
cmp
out
ret
jge
lcall
adc
mov
jae
jg
jg
bound
cmp
inc
xchg
xchg
movsl
jmp
data16
add
testb
rclb
xchg
xlat
mov
add
stos
pop
or
inc
bound
bound
xor
fwait
insl
fadds
in
iret
scas
inc
xor
xchg
mov
rclb
and
adc
mov
push
mov
lcall
add
mov
enter
int
leave
enter
ret
aam
mov
test
test
neg
add
pushf
cld
movsb
dec
std
mov
sub
cmpsl
pop
lahf
into
inc
mov
push
xchg
dec
insl
mov
std
sbb
or
xchg
not
cld
xchg
clc
outsb
push
xchg
mov
pop
fwait
pop
scas
cmc
and
sti
fucomp
push
out
mul
fstpt
push
sbb
rcrb
mov
xchg
mov
xchg
mov
inc
xchg
pop
das
aad
imull
pushf
inc
and
loope
les
mov
dec
adc
jno
out
cltd
and
cmc
enter
cmp
adc
add
xchg
pop
push
in
xchg
push
int
xchg
cs
cmpsb
les
push
mov
fs
shrl
out
and
daa
in
js
icebp
in
pop
fdiv
into
add
or
fs
jmp
rcll
out
inc
sbb
push
shll
pop
lods
gs
cwtl
jmp
push
sahf
pop
in
sub
mov
jne
inc
pop
lahf
nop
mov
bound
inc
mov
cmp
iret
int3
lock
pop
imul
inc
add
push
fdivrl
pop
mov
leave
sbb
mov
jbe
int3
push
jmp
bnd
loopne
and
xchg
xchg
mov
loopne
nop
sub
fildl
fistl
xor
inc
sub
nop
and
add
lock
pop
rclb
pop
jmp
fmull
rcr
fwait
mov
adc
dec
or
xor
sarl
clc
jmp
xchg
xchg
pop
fucom
jne
mov
out
cmp
ret
mov
jmp
int
mov
jns
cmp
push
pop
in
pop
daa
fdivp
add
leave
jge
loope
cmpsb
adc
push
arpl
jg
sub
lods
push
mov
mov
icebp
rcrl
fsts
add
rorb
jl
roll
mov
sub
xchg
pop
fcomps
push
lods
nop
leave
aad
lahf
fldenv
or
js
aas
sbb
xor
inc
fadds
jmp
adc
gs
ret
mov
mov
sti
mov
loopne
hlt
mov
leave
inc
lods
sub
loop
xchg
stc
pop
int3
dec
adc
mov
imul
sub
mov
into
test
jmp
sbb
leave
push
outsl
les
popa
ds
push
and
jmp
int3
sbb
cmp
xlat
sbb
sub
push
mov
sbb
lods
mov
repz
scas
push
xchg
jle
cmpl
mov
mov
xchg
out
cmp
insb
sbb
int3
cmp
int3
call
xadd
add
hlt
and
adc
xor
push
pop
ret
mov
scas
xchg
int3
pop
mov
cmpl
inc
outsl
push
mov
dec
dec
jns
cld
or
sub
sbb
es
test
aam
cmp
insb
fs
push
scas
scas
inc
popa
ljmp
andl
push
lods
mov
cmp
nop
mov
shll
hlt
sbb
dec
mov
stc
jne
xor
xlat
mov
cld
mov
push
movsb
cmp
dec
sub
gs
adc
xchg
mov
jl
cmp
repnz
sbbb
rdmsr
sbb
cs
mov
jne
rcl
xor
stos
xchg
jb
leave
and
in
add
jg
lea
pop
cwtl
adc
mov
or
push
dec
insb
rcrb
clc
adc
adc
sub
lods
out
inc
jne
or
dec
adc
xchg
xor
cmpsb
adc
xchg
dec
cmpsl
dec
add
std
pop
inc
adc
pop
je
xchg
push
xchg
imul
add
push
ficoms
mov
mov
inc
mov
mov
out
xchg
mov
stc
int
cmp
rorb
insb
and
cltd
mov
imul
mov
fwait
ss
lret
cli
out
inc
fmul
or
push
sub
push
ss
xor
lahf
sub
fstpt
sub
cwtl
insb
jg
std
lods
xor
inc
adc
mov
inc
mov
psubusw
shrd
fstl
jb
xchg
pop
ret
outsl
enter
negl
cltd
inc
std
scas
mov
sub
mov
insb
fnsave
mov
jne
pushf
jp
push
stc
cwtl
jbe
cmpsb
sbb
outsb
fldl
addb
cmpb
mov
inc
es
jge
fmull
cltd
popf
cmpb
mov
pop
test
jle
sub
push
lret
jmp
rol
xchg
xor
stc
iret
add
inc
inc
scas
int
fistpl
in
sahf
int3
sub
sbb
jns
aas
mov
mov
scas
mov
pop
ret
add
cmp
or
mov
pop
jb
into
std
xchg
jbe
push
cmp
mov
in
ret
mov
addr16
out
imul
pop
adc
xchg
or
call
fwait
jmp
outsb
sub
pop
add
pusha
test
dec
push
fildl
or
fistl
dec
dec
xor
imul
out
and
jp
in
int
in
subb
pop
aam
push
sub
test
jno
lret
xor
out
add
push
andb
into
adcl
xchg
scas
push
pop
push
out
lods
lret
out
data16
cli
ljmp
jo
pusha
sbb
jmp
mov
loope
inc
jbe
push
subb
wrmsr
push
sbb
cmpsl
ret
lahf
gs
pop
sti
notb
addb
lahf
or
xchg
pop
call
ficoml
or
push
cli
negb
pop
or
adc
cmp
adc
in
or
dec
into
daa
inc
xlat
rcrb
gs
lcall
cmp
mov
sar
stc
arpl
mov
vpor
mov
cltd
ds
inc
arpl
test
jmp
fcompl
push
in
cmpsl
xor
mov
ds
mov
jmp
int3
in
insb
mov
xor
add
sbb
stos
inc
pop
in
fwait
daa
xchg
ret
clc
mov
mov
xchg
push
mov
mov
loope
pop
jbe
bound
mov
arpl
adc
aas
adc
xor
shrl
jb
adcl
rorl
xchg
into
insb
test
stc
in
in
imul
or
adc
test
mov
dec
orl
loopne
inc
fcompl
mov
dec
push
inc
adcl
jle
fnstsw
mov
xor
mov
repnz
addr16
lds
icebp
aas
sub
xlat
mov
gs
jl
mov
xlat
pushf
cmp
mov
aaa
aam
mov
jl
sarl
std
add
xchg
sub
mov
popf
mov
mov
in
mov
inc
mov
les
mov
mov
pop
and
add
mov
or
int3
xchg
loop
jg
xchg
hlt
xchg
cmpsl
cmp
stc
call
test
je
sti
jb
add
and
cmp
loope
adc
cmc
inc
outsb
pop
shrb
xchg
inc
jge
gs
dec
pop
push
cltd
subl
lods
addl
or
mov
outsl
scas
push
push
xorl
pop
cmovle
jecxz
testb
pop
movsl
jb
xor
cmp
pop
popf
xor
ljmp
int3
pop
jecxz
sahf
es
add
fcomip
jp
leave
mov
aas
add
sti
cld
in
testl
stc
adc
lds
popa
and
mov
imull
mov
test
cltd
dec
inc
or
stc
pop
int
lods
outsb
movsl
lock
jecxz
rorb
loopne
mov
push
jno
or
lods
inc
jp,pt
add
sub
shrl
push
sbb
loop
inc
into
jecxz
dec
mov
andb
test
cmpb
rclb
pop
pop
mov
add
jb
arpl
sbb
rcrl
sub
dec
andnps
xchg
fsubrs
fists
dec
pop
sbb
mov
popa
insl
bound
and
pop
lea
cs
push
xor
xchg
add
rorb
sbb
sahf
das
add
int
mov
idivl
xchg
and
clc
mov
dec
mov
fs
hlt
pushf
enter
pop
mulb
cmpl
add
xchg
cmp
repz
push
pop
jns
and
pop
jecxz
fsubrs
movsl
repnz
and
add
test
aas
mov
jl
insl
xor
cwtl
outsl
or
jns
push
pop
pop
sub
inc
and
xchg
cld
xor
sbb
arpl
pop
push
pop
jb
sbb
mov
sub
mov
mov
xchg
sub
or
fimull
jp
aaa
in
out
fists
call
jl
rclb
sub
movsl
sahf
aad
imull
pop
scas
sahf
jns
push
out
xor
nop
xchg
mov
jg
pop
pop
lods
rorl
testb
mov
sub
mov
lcall
push
cwtl
sbb
mov
pop
xchg
adc
ja
or
lahf
aam
addl
insl
das
mov
cmp
mov
and
mov
inc
daa
xorb
jp
out
push
cmp
xchg
js
sbb
shl
cmp
mov
mov
repz
dec
cs
int
shrb
movzbl
out
xor
pop
test
addr16
ret
jne
inc
jbe
xchg
push
mov
std
cs
mov
push
mov
enter
xchg
fidivs
pushl
mov
fwait
mov
lods
adc
pop
add
rolb
bound
sub
sbb
icebp
xchg
push
jbe
mov
inc
out
xchg
xchg
push
jmp
stos
sbb
lds
dec
ret
or
mov
jge
frstpm(287
add
dec
call
mov
pop
jecxz
loopne
dec
xchg
mov
out
sub
cs
call
push
daa
pop
mov
stc
cs
cmp
mov
mov
or
or
jo
loopne
jecxz
stos
inc
out
js
ja
push
mov
pop
push
test
loop
mov
cmp
or
loop
daa
push
bound
adc
stc
ja
nop
stos
aaa
shll
xchg
jp
pushl
daa
and
imul
frstor
jae
cmp
es
cmp
adc
mov
pop
mov
fstpl
lea
push
lea
je
xchg
fs
xor
cltd
sub
inc
mov
cmp
jecxz
ss
insb
jno
or
ja
jo
pop
das
sub
ja
insl
or
sub
push
mov
jmp
adc
or
push
pop
jbe
stc
xor
loopne
enter
mov
idiv
mov
inc
sub
cmp
jecxz
test
enter
cvtps2pi
or
fnstenv
xor
icebp
int3
sbb
ljmp
add
rcrb
sbb
fsubr
cmpsb
and
in
xor
addr16
mov
mov
or
call
test
mov
loope
fwait
stos
clc
or
pusha
and
rorb
cli
push
stc
adc
add
sub
jp
cs
cmovae
add
jecxz
jp
inc
mov
jns
pop
pop
push
nop
idiv
mov
loope
mov
inc
mov
sbb
popa
sbb
add
fnstsw
es
mov
xchg
xchg
sbb
pop
lcall
or
or
fdivr
push
shll
push
mov
pop
xchg
fs
aam
or
pop
cmpsb
cld
xor
push
fcom
loope
jae
test
cltd
or
ret
shlb
mov
pop
xor
adc
mov
stos
je
and
jne
jbe
sbbb
insb
insl
add
lret
mov
push
into
movsl
ljmp
pop
xor
push
inc
shl
push
pushf
mull
test
mov
jge
mov
fisttps
dec
push
push
push
addr16
stos
pop
mov
test
ret
mov
fimull
lods
mov
push
cs
icebp
repnz
cmpsb
xchg
jg
test
xchg
mov
mov
lock
push
idivl
mov
push
scas
fistpll
ret
sti
popa
dec
movsb
fcomp
outsb
int
pushf
sahf
fs
xchg
out
movsb
fstps
cmc
adc
mov
xchg
es
rol
adc
insb
test
jnp
lahf
out
jmp
push
daa
lea
or
jnp
mov
adc
out
xor
jnp
push
xchg
dec
bound
sbb
out
mov
int3
fsubs
dec
xor
lods
cmp
inc
sub
sub
lcall
sbb
jae
in
in
fisubrl
fcomp
push
ja
sarb
ret
and
mov
or
lods
nop
xorl
enter
aad
adc
adc
jo
cli
push
outsb
push
or
xor
in
jle
xchg
push
and
inc
lea
jb
test
call
in
mov
out
in
sub
ljmp
adc
sbb
out
sahf
sub
xchg
and
sbb
incl
push
xor
jp
xor
outsl
out
sarl
pop
cli
adc
ja
push
fstpl
imul
push
out
cmc
xor
fidivs
fsubl
xor
or
adcl
or
inc
pusha
xlat
icebp
sub
sub
shlb
cltd
ljmp
add
pop
inc
insl
push
add
push
test
enter
test
lods
sub
push
loopne
or
push
pop
std
mov
adc
adcb
lcall
sbb
lods
lret
jl
arpl
lcall
push
aam
loop
jo
pushf
hlt
jmp
loop
iret
push
andl
adc
or
mov
mov
push
in
testb
xor
shlb
test
fsubrl
das
mov
add
mov
jne
cmp
mov
jmp
push
sbb
sbb
popa
int3
mov
iret
bound
adc
jae
sbb
add
push
aam
push
dec
lods
sub
sub
js
rol
inc
xchg
sbb
mov
cmp
out
jp
xor
icebp
shrb
insl
scas
or
dec
fistpll
rolb
xchg
aas
das
mov
push
ja
int
in
std
popa
mulb
loope
jle
pop
stos
cmp
insb
sbb
nop
scas
test
loop
inc
leave
jmp
lret
in
mov
andb
dec
pop
sbb
ds
mov
jb
sub
int
mov
es
xchg
mov
fiadds
push
push
jae
int3
xchg
shll
and
xor
mov
and
fs
adc
sarl
aaa
shll
jb
cmp
adc
dec
fdivp
scas
and
pop
inc
test
xor
push
jecxz
bound
mov
jno
sub
mov
int
mov
lahf
mov
lcall
add
dec
stos
loop
mov
loop
cmpsb
pop
mov
or
loop
lret
mov
push
adc
mov
jle
into
add
aam
cmp
subb
outsl
rorb
les
je
iret
and
xor
mov
repz
fildl
sti
test
xor
popa
test
adc
in
dec
stos
into
shrd
aas
or
mov
mov
xchg
enter
mov
cli
xor
push
mov
mov
push
or
push
xchg
test
jo
in
aad
outsl
dec
cwtl
and
das
subb
adcb
cmp
scas
inc
aaa
repnz
lret
leave
clc
jbe
outsb
adc
shl
inc
jp
inc
push
shl
popl
sbb
sbb
xchg
cmc
sub
int
popf
mov
dec
pushf
inc
int
jmp
in
movsl
mov
pushf
cld
mov
out
mov
mov
fwait
ljmp
arpl
xor
loope
fnstenv
ret
loopne
inc
or
ljmp
test
clc
lret
and
aad
mov
pop
push
pop
mov
inc
rcrl
adc
sar
jg
rol
or
sti
rclb
sbb
jge
xchg
add
push
push
dec
mov
fmull
sbb
xchg
push
or
shlb
movsl
pop
xor
sub
stos
roll
jecxz
repnz
pop
fisubl
adc
mov
push
scas
lret
loope
icebp
jne
movsl
and
jnp
mov
sub
push
xchg
in
ljmp
inc
mov
and
fidivrs
xchg
add
cmc
cli
lret
sarb
mov
movsl
movb
movb
enter
movsb
popf
mov
aad
mov
fistpll
lcall
cmp
ror
jbe
fdivrp
add
inc
aam
cmc
in
ss
push
add
loop
adc
pop
push
stc
pop
fprem
aas
ljmp
mov
adc
shl
loop
cwtd
adc
push
ss
enter
sbb
cmpsb
push
jg
xchg
pop
xchg
scas
fisubl
test
cmp
lock
push
ds
ljmp
jmp
test
shrb
sahf
mov
clc
stc
push
fldcw
pop
add
cli
into
xorps
das
xchg
adc
mov
sarl
xchg
cld
rol
sbbl
loopne
loop
aad
fs
xor
mov
push
js
idivb
int3
movsb
leave
mov
xor
cmc
cmp
xor
lret
pop
test
and
fucom
imul
mov
cli
mov
mov
mov
xor
pop
ja
cli
scas
xchg
mov
and
dec
mov
nop
lahf
sbb
mov
aam
xchg
mov
sub
mov
lods
or
jno
or
call
inc
xor
push
adc
dec
call
adc
jecxz
xor
ret
push
cmpsb
fdivl
aaa
add
dec
jp
fsub
in
jns
pop
mov
or
addr16
jecxz
jno
enter
cmpsb
outsb
stc
sub
addr16
mov
lock
xchg
push
xor
inc
movsl
fiadds
mov
sbb
xchg
mov
insb
orb
and
mov
xor
dec
mov
mov
jno
repnz
lahf
push
cli
ret
sti
and
xchg
mov
adc
call
mov
hlt
adc
dec
xlat
lods
outsb
and
ret
jbe
out
inc
ret
inc
xchg
sbb
xchg
loopne
pushf
test
sub
xor
push
inc
or
stos
hlt
add
outsl
add
data16
inc
mov
shl
scas
pop
pop
fmul
and
dec
mov
xor
push
or
out
add
push
xchg
stos
enter
divb
sbb
cmpsl
gs
inc
rorl
pushf
mov
shl
jl
and
xlat
lcall
imul
xorl
leave
lods
cmc
call
sbb
mov
push
dec
push
lods
xlat
test
pushf
jnp
dec
ficoms
dec
adcl
dec
scas
fwait
sbb
xlat
inc
lret
es
xorl
push
jno
sub
add
xchg
scas
enter
pop
jns
sub
jo
lods
add
xor
dec
shr
mov
adc
andb
test
aad
dec
lock
and
mov
pop
pop
aaa
add
push
cmpsl
sub
push
xor
push
xor
ret
cmp
loope
xorb
fldt
push
ss
jg
arpl
incb
xchg
push
dec
adc
cmp
lret
xchg
fmulp
into
insl
jl
repnz
daa
push
pop
sbb
cmp
inc
xchg
mov
pop
push
pop
rorl
add
loop
jmp
mov
aad
mov
nop
inc
mov
andl
sub
pop
and
xchg
lods
inc
loop
cwtl
insb
test
stos
lods
fisttpll
and
or
negl
nop
inc
mov
pop
fisttpl
mov
and
das
lcall
jno
ja
bound
incl
inc
sbb
clc
in
shlb
insl
stos
jecxz
xor
ret
xor
mov
dec
inc
je
sti
fs
les
push
test
jle
movsb
mov
lds
cwtl
sub
adc
mov
ss
outsl
add
sti
add
lods
mov
scas
call
cltd
addb
or
rorb
fsubrs
ja
xor
xor
es
into
iret
aad
and
and
mov
push
xchg
test
mov
add
mov
push
sub
out
es
jnp
xchg
sahf
dec
inc
inc
cli
xor
dec
cmp
out
out
mov
ss
xchg
arpl
mov
es
xor
mov
rcrl
or
adc
push
cmpsb
dec
lcall
mov
pop
in
lods
xchg
stc
xchg
addr16
jo
dec
repz
sbb
pop
and
test
loop
mov
icebp
add
inc
mov
int3
and
push
push
test
push
arpl
test
movsl
shll
mov
mov
int
cli
push
pop
scas
jp
push
dec
add
adc
imul
adc
xchg
stos
dec
ja
mov
adc
inc
mov
pop
sub
in
mov
or
add
cmp
or
push
mov
fbstp
leave
out
or
sbb
push
jge
ljmp
fadd
mov
dec
mov
movsb
add
jge
jge
mov
xchg
in
icebp
sar
sbb
xor
push
lahf
xor
loop
sub
adc
push
testb
outsl
jge
stos
pop
jmp
and
mov
addr16
xlat
enter
aam
cltd
mov
adc
out
xor
outsb
gs
add
and
push
mov
xor
jno
cltd
cmpsb
sbb
sbbb
test
cmp
in
sub
pop
loop
xchg
int3
inc
sbb
mov
shlb
and
dec
pop
notb
int3
call
pop
lock
int3
ds
inc
adc
mov
and
cmpsb
in
out
orb
xor
pusha
xchg
dec
inc
stos
xchg
add
das
mov
movl
and
and
or
xchg
dec
mov
int
movd
or
mov
ljmp
clc
inc
adc
stos
adc
les
jmp
cmc
jp
loop
dec
bound
repnz
sub
es
out
sbb
inc
popa
mov
mov
inc
adc
mov
xor
push
loop
mov
mov
imul
orb
jbe
jmp
mov
test
mov
pop
or
pusha
stos
sub
fwait
test
sbb
sub
bound
xchg
out
push
shrb
dec
adc
add
xlat
pop
xor
push
fdivrl
test
mov
push
lret
ror
lahf
or
jecxz
cmpsb
shll
push
fiadds
xchg
mov
shl
nop
loope
xchg
int
std
imul
ss
jae
push
lods
popa
push
outsb
mov
push
xor
ret
mov
lret
sbb
pop
in
mov
pop
mov
jb
mov
and
or
lods
mov
andb
cmc
call
mov
leave
pop
sub
addb
call
shrb
mov
and
sbb
lret
insb
lock
mov
and
stc
add
outsl
add
xor
loop
xchg
and
cltd
push
movsb
mov
and
and
fisubrl
pop
pop
ljmp
pop
in
pop
enter
in
bound
fnstcw
mov
and
aas
push
xchg
sub
mov
daa
or
mov
aam
in
push
jp
sbb
hlt
xor
add
jg
cs
lods
cwtl
mov
ja
jo
std
or
rolb
xchg
cli
and
xlat
js
sub
arpl
orl
loope
jg
jo
pusha
arpl
insl
lahf
add
mov
jge
sub
or
ud2
popa
ljmp
iret
cli
sti
lcall
stos
mov
inc
daa
outsb
shrb
stos
gs
jge
cmpsb
outsl
fsubrl
ljmp
ret
sub
add
xchg
sbb
lods
push
loope
mov
mov
jg
fildl
sub
mov
adc
mov
lcall
inc
or
pusha
sub
cmp
fucomip
pop
lods
mov
out
jo
push
and
test
ss
das
cmp
add
sub
mov
stos
dec
push
ljmp
fiaddl
sub
in
push
cmpsb
cmp
mov
clc
movsb
jecxz
mov
repz
in
cmp
mov
dec
aam
mov
push
ret
aad
je
loope
push
stos
adc
mov
jp
or
jo
add
hlt
insl
mov
lods
and
std
fdivl
daa
iret
xor
push
and
shlb
fistl
jbe
mov
xchg
lcall
fdivl
jp
ret
mov
sbb
sub
dec
cwtl
push
or
dec
js
jge
test
faddl
int
xor
dec
cmp
push
push
jmp
loop
hlt
js
pop
cmp
ret
outsb
push
jle
and
or
xchg
aad
cmp
sub
xor
push
jl
mov
out
rclb
adc
mov
and
pop
pop
or
xchg
lret
cmp
mov
ss
lcall
or
out
dec
mul
xchg
adc
sub
xchg
mov
push
andb
shlb
out
add
add
insl
in
in
and
test
test
xor
sub
sbb
sarl
mov
sub
stos
mov
or
mov
add
andb
addr16
jne
imull
imul
loop
jae
cmpsl
sbbl
inc
mov
lret
mov
sub
sbb
push
lds
xchg
jae
dec
jb
mov
int3
xchg
addb
rcl
insl
jl
test
xor
popf
add
cs
in
bound
lret
push
adc
or
xchg
in
inc
addr16
pop
push
pop
pop
push
roll
add
pushf
call
inc
aas
jno
cmp
les
adc
std
lret
push
jnp
cmpsl
mov
push
push
sahf
jnp
mov
xchg
ja
inc
jno
jle
into
cs
jecxz
xchg
pushf
push
xchg
out
mov
add
xchg
dec
jge
das
jno
mov
mov
cmp
lock
cmc
pushf
call
insl
push
adc
aad
jo
fisttpl
ljmp
hlt
out
lret
je
xor
adc
xor
clc
mov
mov
ret
push
dec
shr
or
inc
pop
pop
cmp
rcll
add
dec
out
jge
ds
movb
push
inc
in
jge
out
jae
icebp
fstp
inc
sub
js
les
cmpsb
aam
out
incb
xchg
enter
cwtl
push
cltd
sbb
lods
lahf
pop
add
inc
inc
push
inc
sub
insl
dec
dec
mov
fisttpll
pop
inc
and
fisubrl
xor
add
and
inc
pop
insb
into
shl
sub
out
lock
mov
aam
mov
xchg
or
hlt
xchg
aam
push
incl
jae
jns
sti
mull
xor
out
outsb
or
ljmp
inc
test
adc
insl
shrb
or
mov
lret
cmp
into
pop
test
dec
insb
or
xor
pop
movsl
imul
mov
mov
adc
mov
xchg
lock
push
and
add
icebp
subl
sahf
add
push
cmpsb
and
out
push
pop
pop
mov
push
mov
ret
inc
gs
adc
mov
mov
push
xchg
mov
sbb
fidivrs
add
dec
es
cs
fwait
ss
scas
cld
xchg
outsl
add
jmp
jns
mov
movsl
push
or
pop
mov
jnp
aaa
fnstsw
add
sbb
addr16
cmp
mov
xor
sub
xor
cmpb
cs
mov
mov
sarl
in
shrb
movsl
inc
movsb
ja
fldln2
xor
loop
cmpsl
inc
xor
mov
leave
mov
lock
mov
or
mov
mov
add
in
sbb
mov
in
push
xchg
addl
dec
repz
cwtl
fs
sarl
setns
sahf
lods
cmp
cmp
addb
add
in
mov
or
insb
in
popa
gs
add
insb
cli
and
mov
rorb
or
sub
cmp
sbb
fidivrs
imul
std
es
pop
adc
insb
in
inc
jp
fldl
mov
iret
sbb
mov
pop
or
and
frndint
lmsw
cmp
cmp
push
pop
cmovp
in
dec
push
xchg
inc
mov
cmpsb
fisubl
sub
lret
sub
insl
loopne
fiaddl
sbb
jmp
sub
or
jae
scas
jge
sub
xor
sub
lret
jnp
inc
fbld
jecxz
dec
movsl
lcall
xchg
xor
mov
out
fcomi
stos
dec
pop
xchg
test
jmp
adc
xchg
call
inc
or
fst
into
adc
mov
sub
adc
sub
fyl2x
mov
xchg
jmp
and
pop
lcall
adc
loope
sbb
adc
dec
shll
int3
pop
in
test
notb
and
std
xlat
ficoms
mov
ret
push
repz
adc
pop
dec
inc
cmc
jns
shlb
mov
xor
push
in
js
call
mov
pop
mov
ret
ljmp
add
sbb
ret
in
ja
xchg
rep
or
jmp
pop
inc
jae
sbb
out
xchg
xbegin
sti
lcall
cmp
sbb
lea
fdivp
push
and
lret
pop
adc
mov
ja
pop
mov
xor
lret
cmp
pop
sub
scas
or
jbe
xchg
lcall
cmp
lret
ret
mov
mov
mov
std
and
cmp
test
scas
xchg
clc
mov
inc
cmpsb
subb
dec
and
fstpt
insl
add
mov
pop
and
ret
movsl
mov
push
xor
lea
pop
ret
sub
mov
out
repnz
jle
pusha
jb
pop
adcb
out
cmp
je
in
cmpb
call
lock
mov
sub
std
sbb
into
sbb
pop
cmp
push
addr16
pop
dec
mov
or
mov
inc
or
dec
das
mov
lahf
adc
ss
and
or
sar
stc
jbe
ficoml
nop
dec
mov
xchg
vorpd
mov
xchg
xor
sarb
popf
imul
fdivrs
mov
mov
push
ja
arpl
add
xchg
outsl
in
adc
xchg
movsl
lods
aam
xchg
rcll
mov
mov
xchg
and
xchg
xlat
jb
xor
mov
incl
sub
data16
jge
stos
and
and
pop
push
dec
xchg
cltd
and
dec
out
xor
fs
cvtps2pd
sbb
mov
jb
jb
pop
inc
xchg
or
pop
sbb
jae
out
rcrb
loope
xorps
clc
xor
push
push
adc
xchg
fcompl
flds
mov
dec
sub
jp
subl
lods
xchg
mov
push
dec
mov
sub
sahf
cmp
std
int
inc
dec
and
cmp
mov
shl
lcall
sub
pop
push
cwtl
sti
scas
jle
mov
out
xor
mov
pop
push
cs
push
jg
cmp
mov
scas
xor
stc
or
sub
cmp
dec
xchg
inc
aad
fwait
add
addr16
enter
sub
push
fdivrp
sbb
fisubs
and
loop
inc
jp
push
lret
inc
lahf
shl
mov
test
pop
cmp
mov
int3
gs
xorb
ja
adc
xor
movsb
fwait
iret
adc
lds
aaa
das
jg
js
sbb
subb
inc
fs
xchg
lret
mov
shrl
scas
fcompl
push
jno
std
lods
add
jg
jbe
or
and
pop
push
int3
cmp
test
mov
push
xor
xorb
jp
mov
cld
mov
jnp
jae
push
data16
sub
push
inc
sbb
pop
aaa
adc
loope
shlb
jae
pushf
jo
fidivs
scas
mov
enter
test
fwait
mov
lcall
call
aas
jae
setle
cmp
pop
mov
out
cmc
imul
mull
lock
or
jmp
xor
repnz
sub
dec
fnstsw
je
inc
push
in
ret
mov
jbe
pop
pop
cmp
add
js
loope
loope
xchg
dec
push
cmpsb
inc
adc
and
and
xchg
cmp
into
jb
enter
fwait
fwait
leave
mov
mov
ja
pop
mov
adc
verr
and
test
jecxz
outsb
stos
addl
jne
xchg
sub
insl
pop
lahf
mov
cmp
movsl
out
stc
add
popa
mov
mov
je
lods
sahf
mov
jmp
xchg
mov
jp
shlb
outsl
mov
pusha
xor
mov
mov
cld
out
icebp
sarl
jmp
out
faddp
in
pop
inc
in
fs
ret
lcall
hlt
mov
test
out
testl
mov
push
cmp
mov
fistl
sbb
push
in
xchg
loop
pop
xor
adc
or
cs
mov
add
pop
sub
xlat
in
jo
mov
lock
je
cmpsb
daa
xor
cmp
xor
in
or
hlt
adc
les
push
push
and
and
pop
pop
xor
dec
andl
jae
movsl
jle
add
or
ljmp
sti
dec
shl
je
repnz
or
in
mov
xor
adcb
sub
out
loop
mov
add
mov
out
call
testl
cs
lcall
rol
nop
ds
dec
adc
insl
je
into
fisubrs
pop
jmp
daa
hlt
and
hlt
icebp
popa
pop
mov
xor
out
cmp
lea
push
add
aam
hlt
dec
imul
hlt
ja
fdivrl
ret
fwait
out
loopne
adc
lret
and
pop
lock
or
xor
insb
inc
adc
sahf
xor
sub
dec
sub
mov
add
out
jmp
inc
sbb
test
add
mov
jbe
mov
inc
xchg
xchg
jg
adc
rol
int
in
filds
push
pusha
pop
insl
add
stos
sbb
lret
rorl
mov
inc
pop
loopne
leave
jno
sub
mulb
insb
cmp
xchg
inc
or
cld
pop
imul
aaa
pop
dec
popf
adc
mov
xor
add
xchg
mov
and
and
test
ss
rolb
dec
fmul
aas
pop
sti
xchg
in
aaa
cltd
into
ljmp
hlt
mov
dec
cli
push
outsl
jns
cmp
fistl
cmp
push
xchg
das
subl
pop
gs
data16
xor
bound
out
sub
mov
sbb
js
mov
mov
js
sti
sbbl
outsb
pop
adc
rorl
loope
sub
add
cmpsb
fwait
dec
xor
jns
in
clc
push
loop
cli
out
mov
arpl
in
xor
add
jae
popa
inc
add
jecxz
lret
sbb
fsubl
into
loop
arpl
les
outsl
mov
jno
mov
xchg
es
mov
ret
xlat
mov
fistpll
and
mov
pop
or
cs
out
lcall
xor
mov
loope
or
and
test
fisttpl
faddl
mov
in
lcall
push
xchg
xor
mov
pop
in
add
push
sub
lret
mov
movsb
push
pushl
push
adc
jno
xor
outsb
jbe
or
add
popf
mov
mov
jbe
lahf
mov
dec
xchg
adc
test
mov
xchg
mov
addr16
cwtl
or
insl
cmc
dec
fwait
and
cmpl
xchg
mov
fisubs
push
xlat
out
rclb
cmpsb
imul
push
shll
dec
and
jmp
jns
cmpl
xchg
pushf
addr16
jmp
push
xlat
movsb
mov
dec
outsb
hlt
jle
and
enter
adc
cmp
imul
or
mov
mov
shlb
es
and
in
jbe
cs
add
jb
cmp
sbbl
mov
ss
and
addl
lahf
xchg
dec
std
inc
out
sub
leave
imul
in
in
push
and
pop
lahf
sbb
inc
pop
xorl
cmp
jl
scas
and
sbb
mov
pop
aas
mov
aad
cltd
mov
add
xchg
pop
mov
popf
orb
shlb
jg
insl
push
rcrb
popf
mov
hlt
xchg
adc
rcll
pushf
jmp
sbb
add
es
sub
jo
push
jnp
out
lea
or
test
sbb
mov
mov
or
ret
daa
adc
scas
in
pop
jmp
cmp
ficomps
leave
sar
cmpsb
mov
push
mov
sbb
mov
repz
jecxz
mov
xchg
dec
divl
inc
ds
mov
xchg
aam
lds
fdivrs
das
and
adcb
adc
cmp
daa
test
inc
data16
aam
or
dec
xor
or
test
push
xor
mov
add
lcall
mov
push
sbb
adc
mov
hlt
mov
jno
outsl
cmp
mov
mov
mov
sub
addr16
and
lods
call
int
mov
mov
xchg
cmpsb
arpl
push
dec
insl
push
push
cmc
jb
push
adcb
pop
jbe
cmp
xor
movsl
push
aaa
sub
mov
std
fs
ds
or
sub
push
and
dec
imul
dec
movsb
mov
jle
sub
fwait
ss
mov
dec
rolb
sahf
push
mov
fnsave
shrl
data16
enter
outsl
in
fcoms
add
jne
pop
jge
dec
clc
push
pop
in
mov
loopne
clc
popf
hlt
ja
push
mov
repz
push
or
mov
cmp
push
and
stos
adc
fidivl
out
scas
fnstcw
add
xchg
addb
xchg
incb
subw
daa
ret
xchg
push
xchg
jg
ja
dec
ljmp
fcoml
xchg
dec
mov
mov
aaa
xor
ret
std
push
and
pop
pop
movsb
add
cltd
addl
cmp
or
mov
dec
add
adc
xchg
daa
push
std
mov
leave
stos
mov
ror
leave
rclb
fisubrs
lock
add
cmp
sahf
pop
sub
mov
xchg
hlt
scas
inc
add
faddl
jo
sub
jne
clc
repnz
jns
add
fnstsw
pusha
lds
data16
pop
and
push
shrl
cwtl
adc
ss
xor
sar
mov
xchg
ret
mov
fs
pop
jns
and
mov
shrb
or
pop
lods
cld
popa
loope
dec
mov
loopne
notb
jae
out
pop
or
movl
push
dec
je
xlat
sbb
jp
in
outsb
cltd
fisttpll
lds
fwait
mov
adc
and
mov
inc
add
xchg
in
pop
xchg
les
aaa
shlb
fldl
lock
sub
mov
pop
jbe
sbb
jp
sarl
inc
lods
mov
mov
daa
shl
sbb
ljmp
dec
push
and
and
stc
sbb
std
add
hlt
ss
imul
xchg
sub
sahf
adc
imul
inc
shll
pop
jle
push
data16
js
xchg
or
ss
ret
pop
lahf
xor
or
jne
cmp
dec
fbstp
sub
aaa
pop
sbb
test
testl
xchg
mov
enter
sub
scas
xchg
hlt
leave
dec
shrl
jl
out
push
mov
sub
aaa
fxch
push
scas
aas
mov
daa
stc
or
xor
sub
lds
addb
push
out
pop
bnd
mov
mov
dec
popf
add
js
sub
fbstp
fisubrs
jnp
addr16
outsl
sbb
sar
call
loopne
push
aad
fldenv
jb
out
cmpsl
fmul
pushf
jno
and
rolb
enter
xor
push
push
xchg
push
cmc
mov
jmp
fs
push
outsl
rclb
cmp
ds
cmpsb
stos
sbb
aaa
xchg
leave
adc
mov
jb
xor
xor
mov
push
adc
aas
lahf
sub
int
xchg
out
xchg
jl
sbb
sub
push
pushf
pushf
cld
mov
xchg
mov
aaa
les
stos
mov
push
lods
in
mov
pop
xchg
mov
push
std
shrb
outsl
xor
pop
mov
mov
and
mov
and
dec
lods
mov
mov
or
fwait
add
pop
movsl
js
mov
dec
aas
sub
xchg
sar
jne
adcb
and
cmp
scas
xor
xchg
cmp
push
jo
cmp
daa
int3
sub
dec
and
push
mov
inc
xchg
mov
push
test
orb
and
lret
outsb
cmpsb
andl
fsubp
iret
addb
cwtl
mov
sbb
mov
icebp
test
mov
mov
pop
jecxz
sbb
cmp
xchg
lret
ficoms
or
xor
notl
xor
out
and
lahf
movsl
mov
adc
sbb
adc
mov
jns
push
scas
inc
mov
mov
icebp
cmp
push
adc
mov
inc
in
cs
repnz
fwait
and
test
xor
pop
sahf
sub
ret
sub
insb
icebp
sbb
push
cmp
push
insb
xor
add
xlat
jmp
lahf
add
pop
dec
pop
daa
xchg
jecxz
test
lods
dec
pop
pop
bound
pop
out
sbb
fistpl
stos
xchg
xchg
dec
pop
pop
inc
xor
push
scas
xor
rclb
pop
mov
inc
lea
stc
jmp
out
test
dec
pop
inc
xlat
xchg
lret
jne
jle
in
mov
imul
lock
icebp
movb
mov
dec
sbb
inc
mov
add
push
mov
mov
adc
loope
cmp
fidivl
or
cs
push
push
sbb
popf
lods
cmp
and
cld
and
gs
scas
jecxz
inc
and
and
daa
cwtl
and
sbb
pop
dec
adc
cmp
call
addl
insl
mov
icebp
aas
xlat
xchg
and
fs
into
xor
mov
loope
jns
sub
add
insl
lods
inc
lahf
stos
lahf
test
mov
and
and
fidivrl
push
data16
ret
xchg
or
dec
adc
adc
lods
adc
ret
sbb
les
dec
mov
lds
ljmp
das
mov
jno
es
fstps
orb
orl
insb
cs
rcrl
jmp
cld
gs
dec
and
adc
movsl
in
outsb
jg
clc
xchg
xor
jecxz
sbb
mov
mov
cmpsb
sub
dec
cmp
movsl
add
mov
lock
bound
xchg
xchg
cmp
inc
cwtl
rclb
fstpt
cmp
vmwrite
or
std
rorb
pushf
ds
pop
ss
call
cmp
pop
push
outsb
orb
fstl
mov
jne
inc
ror
addr16
inc
pop
push
mov
push
mov
cmc
in
sti
adc
dec
leave
jo
jo
aas
js
cltd
mov
lret
jbe
inc
jg
add
add
movsl
xchg
sbb
xchg
loope
add
jge
cmc
mov
int
cmp
lods
jno
fmull
mov
lds
adc
mov
push
xchg
dec
loope
jl
fnsave
in
scas
pushf
cmp
xchg
mov
sub
add
ja
or
test
and
xchg
and
andl
in
jb
xchg
xchg
xchg
je
cwtl
mov
add
and
or
out
xor
push
scas
push
add
dec
ret
inc
jne
xor
cld
fnsave
fs
jae
sub
mov
jp
or
and
cltd
push
mov
jge
dec
int3
mov
aam
imull
cli
mov
arpl
jecxz
push
pop
or
jmp
ficompl
in
in
mov
xorb
popa
outsl
xor
ja
sbb
clc
into
pop
pop
imul
popf
xor
xor
repnz
xlat
iret
int
out
ja
adc
inc
mov
loope
xor
insb
std
xchg
mov
testb
es
subl
aad
mov
cltd
imul
or
dec
jmp
movsb
hlt
jmp
mov
cmp
inc
xchg
sub
std
lahf
jp
jecxz
insb
push
xchg
jmp
push
iret
sub
mov
dec
cmpsb
fcoms
lret
and
dec
scas
in
jecxz
js
bound
cli
and
jns
imul
popl
add
stos
test
inc
xchg
lods
adc
adc
sahf
imul
enter
fimull
jb
repz
cmp
mov
xchg
iret
hlt
push
sbb
xchg
mov
pop
pop
mov
pop
pop
int3
out
mov
insb
jno
add
inc
pushf
fwait
lds
test
pop
add
pushf
enter
clc
mov
aas
call
flds
shrb
movsl
xchg
in
pop
xor
rcrb
push
call
fldcw
adc
out
call
pop
call
jmp
and
mov
jl
jbe
loopne
jecxz
xchg
fldt
mov
nop
or
cmp
lods
pop
setp
mov
popf
dec
sbb
mov
jb
xlat
mov
push
aad
jp
xchg
adc
push
push
jg
cmpsl
jo
xor
fidivrl
or
loope
popf
jae
mov
adc
nop
outsb
rcll
sub
push
in
mov
inc
into
dec
roll
in
and
xchg
jnp
and
fs
dec
jmp
push
les
jne
test
adc
dec
dec
push
outsl
fsubrl
dec
fcmovnb
popa
icebp
sbb
pop
dec
push
push
and
sahf
lock
or
int
hlt
mov
mov
or
dec
jbe
sbb
fs
shlb
mov
adc
mov
xchg
lds
pop
mov
cmp
xchg
out
cwtl
lcall
pusha
sub
adc
cmp
or
inc
pop
mov
sti
xor
mov
fs
inc
jge
cmp
lret
insl
push
push
jle
pop
ljmp
inc
bound
sahf
xlat
ret
inc
sbb
sub
mov
dec
mov
mov
mov
mov
sub
sbb
scas
call
jne
adc
xor
dec
xlat
loop
xor
idivb
adc
mov
dec
addl
pop
shrl
out
out
push
out
jmp
cmp
movsl
stc
cs
rorb
ret
sbb
jns
xchg
or
leave
lret
rcll
in
xchg
loop
mov
mov
adc
fdiv
or
mov
xor
movsb
or
pop
aam
mov
mov
ret
lods
je
jno
lcall
and
jg
lea
aam
nop
pop
in
or
jne
mov
shll
fcoms
push
dec
mov
movsl
jge
out
cmp
clc
in
cmp
or
repnz
dec
negb
mov
pop
scas
lods
jns
push
cli
mov
jns
fimuls
setno
inc
xchg
das
add
pop
mov
ret
shrl
adc
push
rcr
fildll
push
sbb
lahf
stc
fistpll
call
and
sub
adc
push
loope
in
or
sub
add
dec
jnp
mov
lret
imul
pusha
insl
inc
xchg
in
shrl
mov
adcl
mov
and
jb
mov
pop
jae
xor
add
cli
ror
or
mov
sahf
ja
call
insb
shr
push
adc
in
loopne
dec
lods
xchg
out
xor
or
xor
pop
lret
jns
in
sahf
ss
or
add
jo
push
dec
add
adc
dec
xchg
mov
mov
push
mul
fisubrl
nop
mov
xchg
jne
mov
dec
push
outsb
pop
iret
mov
into
xchg
xorb
lds
push
xchg
rcll
sbb
push
shrb
gs
dec
xor
dec
dec
push
sub
pop
pop
pop
inc
pop
xchg
add
rcrb
dec
aam
sbb
mov
stc
fwait
push
aam
jb
or
mov
cmp
mov
icebp
shrb
push
inc
push
fisubrs
jb
bound
push
ret
jne
mov
cmpsl
rcl
out
jl
pop
repnz
xorl
or
mov
lret
movb
inc
mov
fdivs
sbb
xorb
dec
mov
mov
mov
negb
sti
incb
sub
sub
lds
gs
or
push
mov
in
xchg
push
ljmp
addb
sbb
sbb
mov
adc
fucom
lahf
aas
dec
mov
ds
dec
insl
cmp
jecxz
rcl
and
testb
lret
jg
mov
or
cmpsl
jae
sub
inc
test
jne
dec
mov
bound
les
pop
jb
addb
pop
or
sbb
rolb
call
push
dec
mov
out
jne
clc
push
sbb
fistl
fistpll
roll
iret
sbb
cmp
movsl
inc
push
nop
push
xor
inc
aaa
add
shr
rdpmc
adc
pop
mov
push
mov
popf
cmp
push
xor
mov
dec
xchg
lods
sub
jmp
sbb
fwait
jmp
outsl
adc
fnsetpm(287
shl
sbb
jg
stc
cs
cmpsl
popf
pop
or
dec
mov
fdivr
pop
test
je
subl
push
lea
xor
arpl
dec
rorb
or
hlt
inc
mov
pop
aad
ljmp
adc
dec
lret
in
aad
cmp
leave
mov
rol
es
leave
xor
pop
and
iret
cld
push
add
repz
xor
ret
enter
sub
faddl
insb
xor
mov
jno
push
hlt
cli
adc
data16
or
inc
jecxz
add
push
jmp
mov
int
jnp
lock
aam
sar
cmpl
mov
adc
adc
push
mov
lds
mov
leave
lret
push
call
ss
das
and
xchg
or
rclb
test
pop
push
xor
cltd
xchg
jecxz
inc
pop
lcall
cld
xchg
jg
sbb
loope
adc
inc
stos
mov
and
enter
and
mov
jns
ret
mov
sti
sarb
lock
jecxz
imul
pushf
or
xlat
cmp
and
jecxz
andb
hlt
xchg
pop
mov
pop
stc
bound
sub
cmc
jb
jo
jno
fdivrp
fs
loope
mov
sahf
jle
fisttpll
insb
outsb
inc
cld
and
or
cld
mov
adcl
cmp
cmp
xor
mov
lahf
and
add
push
popf
inc
popf
lods
cltd
sub
xor
push
sbb
adc
push
lock
inc
arpl
sbb
mov
lahf
out
idiv
mov
inc
cli
jmp
jge
sub
cld
in
lcall
shrb
jns
sti
popa
mov
rcrl
mov
lahf
cmp
inc
xor
inc
jmp
cli
xchg
insb
syscall
lock
sbb
fsub
hlt
or
sub
inc
adc
fnstenv
out
xchg
and
pop
cld
lcall
ljmp
jg
and
test
gs
pusha
scas
iret
shl
sti
mov
leave
aad
and
std
cmpsb
jb
test
enter
imul
mov
jmp
adc
sbb
mov
pop
pop
das
jae
movb
jbe
jnp
outsl
and
out
lock
or
pop
pop
xchg
cmp
push
mov
and
mov
xlat
and
sub
cs
ss
mov
fwait
add
push
stc
adc
dec
pop
xorb
push
sbb
test
enter
pusha
sbb
test
lret
or
clc
sti
mov
push
or
and
xchg
add
aas
cmp
cmp
xorb
cmpsl
popl
aaa
hlt
lods
cmp
pop
fcomi
and
inc
mov
pop
popa
lock
pop
shrl
push
xor
cmpb
add
xlat
lret
imul
imul
ljmp
sub
mov
stos
mov
jb
jl
or
les
mov
xor
add
pusha
adc
xchg
ja
into
jp
adc
fldt
icebp
mov
or
sub
sub
stc
into
test
xchg
dec
cmp
aas
mov
daa
cs
mov
repz
push
sti
push
mov
or
lcall
dec
xor
insb
sbb
push
mov
js
mov
cmp
dec
imull
cmp
push
and
in
call
arpl
lods
add
mov
dec
les
mov
jns
mov
lcall
adc
cmpsb
lds
sbb
clc
cmc
outsl
test
adc
fists
cs
ljmp
test
add
stc
test
sbb
push
mov
movsb
addr16
cmp
xor
repz
sbb
mov
fbstp
xorb
test
js
mov
aad
push
addr16
pminsw
jno
mov
sti
cmp
js
inc
in
and
imul
sahf
push
mov
lcall
pusha
cmp
shrl
loop
mov
xor
loop
idiv
aad
jmp
pop
shll
scas
mov
test
mov
cli
xor
jb
shll
fimuls
es
inc
dec
mov
out
jl
pop
mov
sbb
push
cli
fwait
sahf
out
arpl
sub
xchg
mov
jb
dec
pop
scas
mov
icebp
cwtl
fwait
mov
adc
mov
sub
xor
test
ds
bound
test
xor
mov
dec
inc
outsb
mov
repnz
je
adc
mov
push
pop
int3
imul
jae
sbbl
push
dec
mov
and
bndldx
test
sub
movl
cmp
mov
adc
pop
es
xor
and
xchg
sub
outsb
cwtl
test
loope
mov
repz
mov
or
sbb
push
mov
jne
jle
inc
jb
xchg
jl
punpckhwd
js
mov
clc
int
pusha
push
cmp
cmc
xor
xor
daa
mov
xor
push
in
adc
es
or
xor
inc
test
adc
notb
jl
sub
and
or
mov
xchg
fwait
std
movsb
push
loop
pop
mov
mov
and
mov
lcall
mov
adc
cmp
lock
bnd
dec
mov
add
test
bound
es
je
jbe
repnz
lds
or
adc
push
mov
mov
mov
sahf
or
push
stc
lahf
clc
xchg
mov
sub
mov
insl
dec
daa
push
mov
push
or
in
cmp
fs
inc
fucom
or
addr16
xchg
mov
add
imul
and
push
xchg
sub
dec
sbbl
aam
pop
hlt
push
xchg
mov
dec
jecxz
cli
add
gs
je
jb
inc
in
ja
sbb
cltd
ja
cmp
lods
sbb
xchg
jecxz
mov
push
adc
mov
push
cmc
xchg
inc
sub
push
jg
jg
jge
lea
das
icebp
sub
sub
and
pop
cmp
popa
pop
and
jns
cli
fcoms
xlat
adc
and
mov
mov
jg
push
sbb
dec
inc
in
rcrb
dec
insb
pushf
jns
adc
push
xor
std
data16
xchg
push
jne
xlat
dec
dec
in
push
cmp
sahf
insl
dec
push
add
std
xchg
add
in
popf
jns
mov
add
aas
jb
push
test
mov
or
xchg
cld
inc
popf
adc
jg
sub
xchg
mov
xchg
jnp
push
outsb
xchg
sub
xor
sahf
mov
pusha
xchg
pop
jle
test
ficompl
xor
xchg
fwait
inc
loopne
mov
ljmp
mov
pusha
push
xchg
fldcw
jge
ja
xchg
inc
and
mov
or
jmp
sbb
sarb
or
cmc
mov
test
inc
jno
pop
mov
in
iret
sbb
rolb
insl
push
ror
push
lock
clc
in
xchg
leave
pop
ds
pop
lahf
fildll
cmpps
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
sbb
mov
fmulp
jle
fiaddl
in
sahf
dec
push
or
out
inc
loope
shrb
ljmp
inc
xchg
xor
inc
stc
stos
mov
adc
jns
mov
inc
xchg
xor
inc
stc
stos
mov
sub
pop
sti
mov
inc
xchg
xor
inc
stc
stos
mov
rolb
cmp
mov
inc
xchg
xor
inc
stc
stos
mov
iret
inc
loope
mov
inc
xchg
xor
inc
stc
stos
mov
enter
mov
inc
xchg
xor
inc
stc
stos
mov
jo
push
inc
repz
xchg
iret
fnsave
mov
inc
xchg
jbe
mov
testb
or
jg
mov
inc
xchg
mov
inc
xchg
out
leave
rclb
shr
ja
push
xchg
push
movsb
fldt
iret
imul
sub
fs
lahf
insb
ret
pop
adc
fnstenv
jno
inc
dec
aas
sbb
jnp
pusha
add
dec
imul
sub
sub
loop
clc
mov
push
loop
pop
call
inc
loopne
fdiv
and
or
mov
lock
xor
out
mov
rcll
cmp
lret
gs
mov
mov
scas
daa
sub
push
sub
jle
aaa
mov
dec
jp
push
sub
mov
data16
xchg
cwtl
xchg
cs
pop
in
push
loop
pop
adc
inc
and
adc
loope
cmp
xor
jmp
xor
add
adc
pushf
lods
jns
das
cs
lret
mov
ss
pop
cld
repnz
mov
add
xor
dec
push
inc
xor
xor
inc
int3
in
dec
mov
lods
fldl
mov
adcb
inc
xchg
jo
dec
lret
ret
xchg
pop
xlat
pop
test
sti
loope
scas
push
and
rcll
jmp
sub
xchg
out
repz
daa
dec
mov
fdivl
jnp
push
add
das
add
push
mov
cmpsl
sarb
adc
add
insb
sbb
push
stc
inc
out
mov
dec
push
movsl
cs
xor
scas
adc
leave
and
stc
mov
jo
out
repz
xor
mov
out
aam
push
fwait
jnp
adc
enter
stos
lea
lret
stos
mov
cs
rorl
sub
mov
jb
imul
stc
mov
xor
clc
movsl
ljmp
fwait
and
pop
push
xor
sbb
jmp
dec
pop
fs
pop
in
adc
jne
int3
orb
xchg
mov
out
or
in
int3
or
lods
es
mov
pusha
jns
cmovo
mov
iret
sti
push
cmp
imul
shrl
icebp
inc
enter
xchg
jae
push
inc
daa
adc
xor
ja
es
inc
jmp
mov
mov
loope
xor
xor
clc
xor
inc
xor
pushf
push
sarl
cmp
mov
xchg
pop
stos
push
sub
sarl
pop
adc
inc
add
dec
lods
ret
inc
int3
shlb
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
call
or
je
leave
xor
push
fsts
and
out
dec
cmp
pop
rcll
arpl
sbb
jnp
mov
push
fwait
mov
ds
in
add
push
dec
jno
xor
testb
mov
inc
xchg
mov
pop
push
es
jno
push
push
dec
mov
test
outsb
mov
insl
repnz
dec
inc
in
loope
fistpll
push
aad
sbb
cli
and
sbb
fmull
fldenv
mov
mov
testb
mov
mov
testb
mov
mov
testb
fdivl
cmp
test
mov
xchg
adc
xor
sbbb
dec
push
cmp
mov
pop
mov
inc
mov
loope
es
das
fs
and
insb
mov
sub
stos
inc
rorl
mov
out
push
mov
adc
add
movsb
lret
xor
push
dec
jg
cmpsb
push
test
xchg
pop
push
mov
sbb
addr16
sbb
ljmp
xchg
mov
std
adc
dec
fisttpl
shr
std
mov
int3
mov
je
gs
outsl
into
add
in
idiv
xorb
popf
sbb
into
sbb
imul
sub
aad
push
xchg
mov
sub
aad
xchg
and
mov
outsl
imul
and
mov
inc
xchg
in
xchg
sbb
xchg
and
mov
xor
jmp
pop
mov
pop
fisttps
imulb
in
cmp
enter
push
cltd
js
pop
jae
inc
mov
mov
je
gs
outsl
pop
addl
mov
mov
into
repz
dec
sbb
push
sub
add
xor
xor
lahf
jns
sbb
cmpl
jg
sbb
push
sub
jp
ret
and
shrb
pop
jbe
or
lret
in
sub
xchg
mov
enter
inc
cmc
cmpsb
push
jge
imul
popf
mov
adc
push
inc
popl
sahf
sub
sub
out
push
aad
sarl
sub
punpckhwd
adc
cmc
movsl
pop
xchg
in
adc
cmc
movsl
pop
xchg
in
adc
cmc
adc
add
mov
jbe
or
push
adcb
cmp
or
test
push
mov
sbb
testb
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
mov
inc
xchg
