jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
jnp
add
or
mov
mov
jp
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
mov
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
cltd
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
or
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
push
call
mov
add
xchg
add
add
sahf
jnp
mov
loop
scas
stos
fsts
les
cwtl
add
add
lea
pop
add
lcall
rolb
cmpsl
add
negb
std
mov
in
add
add
pushf
leave
out
ja
add
mov
add
jmp
in
jl
mov
mov
rcrb
cli
mov
lods
shlb
popf
jle
add
add
cmpsb
testl
xlat
fildl
add
out
loop
add
add
add
mov
cwtl
cld
movl
aad
add
jo
mov
int
andl
mov
je
mov
nop
add
pop
add
outsl
cld
mov
in
xchg
cld
call
add
ja
gs
popa
ret
leave
cwtl
add
aam
mov
add
push
push
push
push
lea
push
lea
push
push
call
pop
add
js
mov
int3
popa
mov
ret
std
add
loopne
shl
xchg
roll
aad
leave
push
mov
pusha
add
add
jle
add
xchg
xchg
mov
ret
add
roll
popa
lcall
pop
add
mov
fwait
add
mov
cmc
lods
mov
mov
add
mov
les
pop
add
mov
lea
pop
movl
popl
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
ja
ljmp
roll
addl
add
add
stos
rcr
jp
add
add
gs
fiadds
add
mov
nop
cmpsl
in
pop
stc
roll
add
pop
or
add
cmc
jns
add
mov
imul
push
add
push
add
cwtl
add
imul
shll
xlat
cld
mov
lea
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
int
cmpl
mov
add
pop
add
jae
add
add
out
mov
jne
add
add
add
data16
add
popa
xchg
into
out
add
gs
pop
add
add
mov
add
aam
loop
scas
iret
mov
mov
add
xlat
mov
enter
stc
add
add
mov
jbe
add
xchg
mov
lea
pop
push
push
push
call
fnsave
or
mov
push
pushf
adcl
add
jmp
addl
clc
xchg
les
add
popa
add
pusha
add
add
add
jp
notb
data16
add
add
mov
add
testl
fdiv
loopne
jns
add
jae
cmpsb
add
je
jnp
add
mov
lea
pop
call
call
push
push
push
push
lea
push
push
push
call
add
add
fwait
add
mov
rorl
push
in
pop
stos
add
mov
add
add
mov
push
add
add
mov
add
mov
fidivrl
add
rorl
add
add
jne
add
add
pop
push
push
push
push
push
push
push
push
call
add
add
push
mov
add
add
add
leave
mov
int
nop
push
sti
add
add
jnp
add
add
xchg
add
fnstenv
add
add
rclb
subb
mov
mov
add
push
scas
add
cwtl
lods
add
mov
add
mov
add
add
bound
je
stos
mov
lea
pop
call
push
push
push
push
push
call
add
mov
add
loop
pop
add
fxtract
fstpt
add
sbbl
add
add
add
add
add
add
pop
add
add
in
aam
add
add
pop
add
jp
push
jbe
xchg
add
add
hlt
orb
jmp
push
push
push
push
push
push
push
call
add
rcl
add
js
add
add
add
data16
mov
data16
add
xchg
test
add
loop
add
add
mov
add
add
in
test
mov
hlt
stos
jge
cmc
addr16
pop
add
mov
add
cwtl
mov
push
icebp
andb
add
mov
add
add
adcl
pop
ret
mov
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
call
call
out
ja
add
stc
add
out
push
jecxz
add
add
leave
add
pop
mov
add
add
add
add
add
add
out
add
pop
cmpsb
add
ja
into
add
out
in
orb
int3
mov
add
push
cld
mov
add
incb
ja
andl
mov
cld
lea
pop
add
add
push
push
lea
push
lea
push
push
lea
push
push
push
call
int
movsb
xchg
call
add
mov
add
add
divl
cwtl
cld
lahf
add
xchg
in
cwtl
imul
fldenv
add
add
mov
lahf
testl
test
cmpsl
mov
bound
add
add
add
sti
add
pop
add
push
aad
add
xchg
lret
ja
addl
mov
mov
hlt
lea
pop
add
push
push
push
push
push
lea
push
push
push
push
push
call
mov
add
popl
loope
add
add
mov
mov
testb
xchg
jmp
test
add
insb
jp
add
lock
add
push
add
clc
add
andl
movsb
bound
add
sti
xlat
add
add
add
add
mov
mov
add
add
mov
fmull
add
shll
outsl
mov
add
movsl
addr16
xchg
add
in
add
mov
cwtl
lret
add
add
fwait
mov
add
loop
insb
add
cmpsl
add
sti
add
enter
add
cmpsl
lea
lea
iret
jne
cmpsb
scas
add
pop
add
add
mov
push
lret
add
outsl
testb
add
rorl
add
stos
jl
add
lock
lods
popf
add
jnp
mov
aam
bound
pop
xor
push
push
push
push
lea
push
push
call
imul
mov
xchg
addr16
test
jl
add
add
xchg
mov
fldl
add
js
add
add
xchg
fdiv
add
jnp
add
add
mov
aam
scas
out
out
ret
pop
sti
mov
les
add
add
jmp
pushf
add
add
fistpll
pop
notb
add
add
mov
lea
pop
add
push
push
call
pop
rcll
fwait
idiv
add
imull
push
add
movl
lods
mov
out
mov
int3
into
push
test
add
mov
add
add
ret
mov
push
xchg
aad
add
mov
mov
lret
mov
add
and
jo
add
ret
mov
xlat
stc
push
add
rcrb
push
movsl
add
mov
push
mov
lea
pop
add
push
lea
push
push
push
push
push
push
push
lea
push
call
add
xchg
faddl
lds
arpl
push
jae
add
add
add
add
mov
add
mov
add
mov
lods
add
add
xchg
lods
rcrb
pop
test
sahf
add
add
xchg
add
add
mov
sti
stos
js
mov
loop
xchg
xchg
mov
lea
pop
call
mov
xor
push
push
push
push
pop
add
shl
inc
shl
sub
dec
pop
xor
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
jp
pusha
mov
jne
rorl
iret
add
jno
fs
test
fs
jnp
mov
add
jmp
add
add
mov
add
add
add
in
add
call
pop
jo
stc
add
push
fldcw
in
jo
add
cltd
mov
arpl
pop
pushl
call
push
lea
push
lea
push
push
call
jecxz
jmp
mov
add
xchg
add
test
out
add
mov
je
add
int3
call
repnz
add
mov
jns
faddl
add
leave
out
xchg
push
add
lret
js
jae
into
add
lcall
icebp
add
fdivl
insb
add
cmpsl
loope
aam
bound
pop
mov
push
push
lea
push
push
call
lea
add
data16
add
test
mov
push
jae
stc
add
add
int
fadds
add
cmpsb
popl
push
je
add
add
add
in
mov
pop
xchg
mov
jle
jmp
out
fiaddl
xchg
outsl
add
add
imul
fdivrl
xchg
loopne
xor
mov
test
pop
movl
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
add
xchg
jp
test
iret
lahf
iret
enter
addb
add
pop
lcall
lcall
idivb
jo
addr16
add
fdivs
cmpsl
cmpsl
add
addb
add
add
add
add
nop
add
int
add
rorb
fiadds
mov
mov
int
mov
out
je
add
mov
lea
pop
lea
push
push
push
push
push
push
push
call
popf
push
add
add
fwait
mov
add
jne
add
out
testl
add
popa
mov
mov
mov
lcall
add
out
imul
cmpsl
test
push
add
mov
add
pop
add
add
clc
add
stos
push
jne
cltd
add
add
cli
mov
add
mov
mov
add
testb
jge
add
pop
pushl
pushl
push
push
push
call
pusha
add
ja
add
loopne
add
add
add
js
push
pop
mov
adcl
add
lret
in
pop
add
add
add
add
bound
add
add
xchg
add
arpl
add
enter
pop
pop
lea
movb
xchg
out
faddl
add
cltd
add
mov
jno
add
push
add
pop
call
push
lea
push
push
push
push
push
call
mov
les
imul
add
clc
stc
mov
loopne
add
out
mov
xchg
jb
jbe
cld
add
mov
mov
add
lret
addb
jnp
add
add
add
add
pop
cmpsl
push
fcoms
add
insb
out
arpl
add
add
mov
clc
xchg
hlt
xchg
push
add
add
les
add
imul
add
mov
lea
pop
pushl
push
push
push
lea
push
push
push
push
call
lcall
add
mov
mov
add
call
add
add
imul
jnp
add
add
mov
add
int3
sahf
add
cld
add
add
mov
lahf
jge
lret
add
popf
cmpl
xchg
add
in
loopne
jp
add
mov
mov
fdiv
lret
imul
lea
pop
pushl
push
push
lea
push
push
lea
push
call
pop
pop
add
pop
fadds
add
js
jl
les
jp
add
mov
popl
mov
xchg
jbe
in
ret
cld
add
add
pop
fisubl
scas
movl
mov
pop
hlt
xchg
jmp
add
popf
addl
add
imul
add
mov
pop
iret
add
je
push
jo
mov
add
mov
mov
adc
call
push
push
shl
sub
push
or
inc
add
ror
lea
sub
not
inc
pop
inc
pop
push
lea
push
push
lea
push
push
call
fwait
add
les
mov
rcl
add
rolb
out
rcll
add
add
cli
add
xchg
add
add
lea
test
xchg
lea
mov
shlb
push
loopne
add
fs
jne
rcr
push
add
add
fmuls
les
jne
call
push
lea
push
push
push
push
call
add
clc
mov
jo
mov
xchg
add
icebp
add
rol
into
shlb
add
mov
into
jl
mov
popa
sbbb
andb
pop
fwait
push
stos
fldl
add
mov
add
add
add
add
mov
iret
ja
add
add
add
cld
lea
pop
push
push
push
not
push
or
inc
add
sub
xor
pop
sub
dec
pop
push
push
push
push
call
idivb
push
add
scas
add
add
filds
xchg
push
stos
je
lret
les
xchg
cmpl
imul
add
xchg
add
push
mov
push
add
add
pop
jae
mov
test
mov
mov
stos
push
add
add
push
cmc
add
fadd
shl
jno
add
add
add
jl
addr16
jle
jns
hlt
lea
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
movb
add
iret
lahf
cwtl
cmpb
add
outsl
loop
add
rolb
add
aam
add
fdivrl
mov
xchg
add
mov
jge
lret
add
lahf
pop
push
mov
add
lods
add
add
add
fildl
xorl
add
add
add
add
mov
fwait
add
jae
addb
and
add
rclb
dec
lahf
stc
xor
add
stos
add
sti
jp
icebp
add
faddl
sti
lea
int
mov
jbe
cmc
add
scas
push
add
cld
popa
xchg
cli
add
jmp
mov
jb
xchg
mov
pop
mov
leave
mov
push
add
add
add
mov
int3
enter
lea
pop
mov
push
push
push
call
pop
shll
ret
cli
mov
nop
add
fs
push
jb
out
add
add
xchg
lock
decb
push
add
xchg
add
add
add
add
int3
push
xchg
cmpsl
out
add
scas
mov
xchg
lock
add
imul
mov
mov
lea
pop
push
mov
push
lea
push
push
push
push
lea
push
call
add
add
test
jnp
mov
loop
stos
add
add
push
mov
add
add
imul
add
roll
mov
cmc
add
add
fstps
add
add
add
add
cmpsl
arpl
fs
add
hlt
jmp
scas
pop
add
stos
pop
pop
aad
add
sbb
pop
in
ret
add
add
push
push
push
push
push
push
push
lea
push
push
call
sti
int3
out
mov
add
mov
mov
icebp
popl
add
jns
add
leave
add
movsb
push
in
jo
mov
add
add
add
cwtl
xchg
xorl
add
insb
std
addl
fs
add
mov
mov
out
xchg
add
fmuls
pop
add
mov
xor
push
push
call
add
pop
loope
add
int
bound
xchg
add
leave
mov
stos
jle
add
cli
flds
mov
lret
add
cld
lods
in
jne
fiadds
add
jmp
mov
add
nop
add
add
test
add
pushf
mov
xchg
addr16
jbe
xchg
add
shlb
xchg
jl
mov
pop
add
push
push
call
jp
lcall
movsl
jo
cmpsb
divl
push
lahf
imul
add
imul
pop
pushf
add
popf
nop
pop
add
insb
test
pushf
mov
cld
mov
xchg
add
add
add
outsl
jle
in
popa
add
fsubrl
pop
leave
stos
add
add
add
repnz
loope
fwait
add
imul
pop
push
mov
push
push
lea
push
push
push
lea
push
call
add
lret
add
addb
mov
out
add
add
add
mov
add
fiadds
add
push
mov
mov
pop
mov
xchg
add
add
jo
out
lret
popf
data16
icebp
vmaxsd
pop
add
jae
add
push
jle
or
mov
popf
jp
add
shll
add
adc
xor
push
push
push
push
push
push
lea
push
lea
push
push
push
call
flds
rclb
negb
cli
loopne
aad
cwtl
add
fadds
add
movl
fcoml
mov
add
add
stos
call
add
add
cmpsl
fdivl
add
int
repnz
add
mov
js
add
add
push
lods
mov
bound
pop
pop
test
les
pop
add
push
push
lea
push
push
call
in
lea
ljmp
lea
add
lcall
call
add
mov
rcll
add
fidivrs
mov
jb
jecxz
jbe
repnz
out
add
add
lods
cmpsl
leave
pop
mov
push
add
mov
add
add
add
cmpsl
sahf
add
xchg
push
test
repnz
test
mov
lea
pop
add
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
arpl
xchg
jo
insb
add
add
insb
addb
js
add
add
call
add
push
jno
add
add
add
jmp
jns
test
mov
cli
add
shrb
mov
sar
xchg
add
add
jmp
jle
add
fiaddl
add
add
add
sub
or
push
push
call
mov
fstps
mov
lods
mov
add
mov
outsl
mov
xchg
lock
pushf
cmpsb
shlb
popf
fstps
jo
add
add
add
push
add
mov
push
add
mov
pop
jl
add
insb
lods
insb
push
addr16
pop
pop
add
mov
lea
pop
add
push
push
call
enter
add
add
test
fmuls
add
add
add
add
icebp
cld
xchg
pop
cmpsb
lret
add
add
add
in
pop
push
add
push
jle
mov
pop
jecxz
add
pop
cmpsb
data16
loope
cmc
fldl
add
add
push
add
add
xchg
loope
xchg
mov
lea
pop
push
push
push
push
call
arpl
movsb
addb
add
sahf
add
xchg
pop
add
add
aam
leave
xchg
into
add
loope
add
add
addl
icebp
xchg
pop
add
add
fsin
add
movsb
pop
add
add
fcmovb
add
data16
lods
add
add
push
orl
add
nop
push
add
mov
add
repnz
int3
lea
pop
mov
xor
push
lea
push
push
lea
push
lea
push
push
call
pop
mov
test
add
jmp
imul
test
add
lret
rolb
cld
mov
add
mov
mov
mov
imul
add
mov
add
add
add
add
out
add
add
push
lds
add
ljmp
jl
mov
fildl
add
add
pop
sub
pop
rep
push
push
push
push
push
push
call
shlb
add
incb
iret
add
fwait
xorl
movsb
add
mov
js
add
add
add
movl
add
jge
pop
mov
add
mov
movb
cld
add
jb
movb
add
add
add
jns
add
out
cmpl
cmpsl
cli
bnd
test
add
add
mov
lea
pop
pop
push
push
lea
push
call
add
add
stos
jecxz
xchg
add
add
mov
test
add
mov
add
jbe
add
lods
xlat
sahf
pusha
fildl
ljmp
leave
add
add
add
add
push
push
add
pushf
add
fwait
cmpsl
mov
fmul
lcall
add
movb
jns
movsl
add
add
mov
scas
add
bound
aam
bound
mov
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
lods
add
adcb
in
loopne
add
add
aam
add
pusha
add
arpl
addr16
add
mov
add
push
pop
rolb
add
add
add
add
jp
stos
cwtl
pop
add
add
cltd
add
imul
cwtl
pop
jnp
add
lahf
fidivrl
add
add
cltd
push
shr
repnz
popa
lret
add
lret
int
pop
cmpsb
cli
add
pop
add
add
add
push
push
call
add
mov
ja
add
add
add
mov
lea
jp
jl
xchg
std
push
rolb
add
gs
add
leave
push
push
data16
fs
test
add
add
add
push
addr16
lds
popf
add
shlb
scas
add
movsl
repnz
add
xchg
out
add
add
add
int3
lea
pop
mov
xor
push
lea
push
lea
push
call
add
aad
jb
add
je
pop
add
je
pop
add
mov
lahf
add
mov
add
mov
add
mov
mov
add
movsl
add
add
roll
add
fimull
popf
sti
std
pop
xchg
add
shr
je
mov
add
add
add
add
add
fildl
mov
add
jb
out
test
jge
mov
lea
pop
mov
xor
push
push
push
call
add
sarb
add
add
xchg
test
add
out
lods
push
fldl
xlat
addr16
lret
scas
je
fldl
add
mov
add
add
mov
insb
add
jae
add
add
mov
in
add
sti
add
push
int
in
ret
insb
push
add
add
add
pusha
add
sahf
pop
add
lcall
cld
add
aam
bound
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
xchg
push
add
fiadds
leave
clc
stos
cltd
enter
cmpsl
fldl
xchg
imul
clc
pop
jae
add
add
add
add
rolb
add
jno
fucomi
fcoml
mulb
fiaddl
push
les
jmp
xor
mov
arpl
add
add
add
add
aam
movl
enter
add
pop
xor
push
push
call
add
mov
movsl
add
jbe
fnstcw
les
lods
add
mov
jnp
pop
cld
pop
mov
add
mov
out
int3
add
incb
sti
push
add
addr16
les
jno
in
and
add
add
stos
aad
add
add
mov
lea
pop
add
push
push
call
add
add
add
xchg
pop
cmpsl
add
imul
movl
sahf
mov
add
jo
aad
add
loop
out
mov
loopne
mov
add
in
jbe
add
add
add
add
add
add
scas
add
sarb
add
add
mov
std
jmp
mov
lea
pop
add
push
push
push
push
push
push
call
add
add
mov
leave
add
jnp
add
bnd
add
mov
sarb
in
add
jmp
out
lds
pop
mov
cmpsl
push
mov
add
add
add
push
shrl
xorl
sti
xchg
cltd
out
aam
xchg
push
in
add
add
ljmp
add
add
rcrb
add
add
add
mov
lea
pop
add
push
lea
push
push
call
add
add
add
push
imul
subl
add
add
mov
push
add
mov
std
movb
add
js
add
lret
add
fldt
lret
loop
mov
jp
add
scas
xchg
out
cmpsl
mov
enter
add
add
xchg
jbe
xchg
mov
lea
pop
mov
push
push
rol
ror
push
and
add
rol
sub
add
pop
ror
xor
rol
pop
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
arpl
out
add
add
fnstenv
int3
add
add
cli
add
mov
in
add
add
add
cmc
xchg
mov
flds
add
mov
stos
add
sbbl
icebp
mov
scas
add
add
add
add
stos
imul
mov
clc
xchg
cli
add
mov
lea
pop
pushl
call
push
push
push
lea
push
or
not
add
lea
sub
add
sub
pop
add
pop
push
lea
push
push
push
push
call
shl
mov
je
add
sbbb
add
add
shl
fiaddl
loop
hlt
jecxz
jmp
add
lret
push
add
add
add
xchg
imul
jl
mov
add
testb
mov
add
clc
pop
std
ret
jle
mov
add
jp
rol
pusha
rolb
mov
shl
cld
xlat
add
jo
mov
add
fldt
lods
add
cld
mov
lea
pop
push
push
call
push
push
call
add
jno
push
add
ljmp
add
xchg
enter
ror
je
add
out
add
out
push
sarb
add
mov
cmpsb
xlat
pop
aam
mov
add
add
arpl
std
add
rclb
xchg
movb
add
ja
addr16
cli
mov
lcall
lea
pop
mov
push
lea
push
lea
push
push
push
call
pop
add
add
add
add
lods
fldl
push
pusha
add
enter
mov
push
lods
scas
add
mov
add
add
cltd
enter
add
add
xchg
add
jb
int3
add
add
add
add
add
add
lods
movsb
add
jo
add
add
cld
add
jge
in
add
testl
pop
in
push
push
lea
push
call
je
lds
je
jae
add
jae
mov
add
leave
mov
fidivl
add
loope
add
lock
mov
jae
add
ljmp
add
test
add
xchg
scas
std
cld
add
add
imul
mov
fiaddl
mov
sahf
push
add
xchg
add
js
test
xchg
std
test
subl
int3
lea
pop
add
push
dec
ror
rol
pop
add
add
mov
xor
push
lea
rol
shr
pop
add
push
mov
xor
push
push
lea
push
call
pop
add
add
add
out
add
jbe
mov
xchg
jp
push
add
xchg
cld
add
jno
pop
add
scas
test
add
into
add
pop
push
mov
add
mov
mov
loop
add
add
add
je
mul
lahf
push
movl
push
int3
mov
out
adc
mov
bound
hlt
add
roll
or
add
push
push
lea
push
push
push
lea
push
push
push
push
call
filds
scas
add
add
add
add
add
imul
add
xchg
xchg
add
fbstp
add
add
mov
imul
scas
jns
add
aam
add
add
aam
add
fwait
add
lret
mov
mov
notb
add
testl
in
cld
lea
pop
pop
mov
xor
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
jecxz
add
add
mov
scas
pop
add
lret
add
add
fldl
cld
xchg
add
addr16
mov
add
mov
add
fadds
stos
mov
mov
into
arpl
add
pop
mov
push
add
flds
jbe
loope
shr
hlt
add
add
fcoml
sub
movsb
push
not
add
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
popf
add
add
mov
add
push
test
add
icebp
icebp
fwait
add
lret
lret
add
mov
nop
mov
mov
add
fstpl
jecxz
test
add
add
add
cmpsl
add
pop
add
pop
pop
clc
cwtl
add
fisttpll
pop
xor
push
lea
push
push
call
lcall
add
add
add
in
mov
xchg
aad
push
aam
add
outsl
xlat
cli
test
js
call
add
popf
add
mov
lds
test
push
roll
pushf
stc
push
cwtl
add
pop
jl
in
in
jno
jo
rorl
mov
add
push
add
add
add
push
lret
xchg
add
mov
jp
pop
jmp
lea
pop
add
push
add
inc
rol
pop
or
je
push
sub
inc
sub
pop
mov
xor
push
ror
add
add
not
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
push
call
add
push
add
add
add
cmpsb
add
add
fldl
je
filds
fs
test
fiaddl
les
pusha
pop
mov
xchg
test
add
pop
add
push
mov
add
mov
out
add
mov
add
push
jnp
add
add
add
add
add
add
mov
pop
out
add
pop
xor
push
push
push
lea
push
push
call
int3
mov
add
xchg
bound
scas
mov
add
iret
fldcw
mov
movsl
roll
in
int3
add
roll
loope
add
add
scas
add
add
int
add
fldl
add
add
jo
cmp
xchg
pushf
add
jmp
pop
bound
cltd
add
xchg
into
jb
add
jle
add
jbe
lods
jecxz
stos
add
pop
add
lea
pop
add
add
push
sub
pop
add
push
push
xor
rol
sub
pop
mov
xor
add
push
push
push
push
lea
push
push
push
call
iret
mov
mov
popf
xchg
mov
add
mov
mov
test
nop
add
add
pop
add
call
add
addb
add
test
add
add
aam
sub
in
scas
mov
add
mov
out
push
loopne
mov
outsl
mov
add
xlat
cld
bnd
int
int3
lea
pop
pop
rep
push
lea
shl
pop
mov
push
push
push
push
push
push
push
push
call
dec
add
push
lret
icebp
mov
push
xchg
add
movsl
add
add
add
lock
fxch
add
push
jne
add
add
in
mov
add
xlat
pop
mov
xchg
movl
shrb
mov
jae
ror
add
push
add
fwait
mov
fstpl
add
add
pushf
add
in
push
jnp
int3
lea
pop
xor
push
lea
push
push
push
call
test
add
add
add
add
je
add
stc
add
add
in
add
in
push
jnp
fmull
sarb
repnz
add
push
mov
in
xchg
mov
add
add
sahf
pop
aad
addr16
add
add
add
loop
stos
lahf
mov
les
fwait
add
add
mov
add
mov
lcall
test
cltd
xchg
add
add
mov
lea
pop
add
push
push
push
push
lea
push
call
add
jecxz
add
test
mov
popa
sti
sarl
mov
add
stos
add
out
lret
jge
cltd
xlat
add
add
pop
out
scas
xchg
add
shlb
addr16
add
ficomps
jne
scas
jecxz
aam
xchg
add
pusha
jge
add
leave
ficompl
add
mov
arpl
or
je
mov
add
push
not
sub
sub
pop
add
rep
pop
push
push
sub
sub
sub
shl
push
or
not
add
shr
sub
sub
shr
sub
add
pop
not
pop
push
sub
pop
pop
push
push
push
call
add
add
mov
mov
repnz
add
jecxz
lds
add
call
add
add
push
lods
xchg
push
push
mov
mov
lods
movsb
jecxz
cli
add
rolb
xchg
add
fldl
xchg
add
loope
add
jge
add
add
add
add
arpl
test
add
pop
mov
mov
mov
push
push
push
push
lea
push
lea
push
call
add
add
add
pop
cmc
in
xchg
add
mov
add
add
jne
add
jge
out
cmpsl
add
out
add
add
fwait
add
xchg
push
add
mov
add
add
add
movsl
stos
lahf
add
int
mov
add
add
mov
lea
pop
jmp
push
mov
push
rol
shr
shr
pop
add
push
push
add
pop
push
push
push
add
add
pop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
iret
add
leave
sti
add
add
add
add
fcomps
mov
stos
add
add
ret
bound
jb
out
add
mov
add
push
popf
nop
add
add
pop
add
arpl
int
add
add
in
ja
add
je
fwait
mov
jae
add
orl
add
add
movsl
mov
lea
pop
mov
pop
push
push
lea
push
call
out
add
add
iret
iret
mov
jmp
mov
call
out
scas
roll
and
push
nop
add
add
icebp
nop
repnz
add
pop
je
mov
push
test
add
add
add
cwtl
add
in
leave
mov
ljmp
pop
pushf
add
jmp
fcomps
jb
stos
add
add
add
sahf
add
cmpsl
add
mov
jae
mov
movl
lea
pop
pop
push
add
add
lea
pop
pop
push
push
push
push
push
call
pusha
push
loopne
mov
add
fs
add
rolb
imul
add
cld
add
add
add
mov
push
stc
pushf
add
add
enter
cli
addr16
add
xchg
add
add
add
mov
test
out
add
flds
push
add
add
stc
pop
add
jno
insb
mov
add
mov
lea
pop
pop
push
add
sub
sub
dec
pop
leave
ret
push
push
rol
xor
pop
mov
push
shl
pop
add
push
dec
shr
not
pop
push
push
push
sub
not
pop
push
push
push
shl
dec
lea
pop
movl
push
shl
dec
pop
addl
push
lea
pop
test
je
push
push
lea
push
push
push
push
call
add
fsub
std
shl
enter
add
add
add
add
pusha
add
jo
ret
jge
xchg
loope
lock
icebp
add
add
out
out
jnp
mov
pop
jmp
add
movsb
gs
loopne
movsb
mov
xchg
jne
xchg
add
add
add
mov
lea
pop
mov
pop
pop
push
push
call
add
add
add
mov
enter
push
pusha
lods
insb
cli
add
pop
clc
popl
pop
clc
into
shl
cmpsb
mov
popl
flds
mov
add
pop
add
call
fcompl
mov
add
add
add
ror
add
xlat
cmpsl
movsl
in
aam
add
mov
lcall
add
mov
jbe
xchg
movsb
mov
lea
pop
pop
push
ror
pop
pop
push
ror
not
lea
pop
leave
ret
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
shrb
add
in
stos
mov
mov
push
icebp
loope
fiaddl
xlat
mov
mov
mov
lea
mov
add
pop
add
pop
add
xchg
jbe
lea
int3
add
add
insb
add
pushf
je
movsl
sahf
mov
mov
add
rorb
add
mov
cld
add
test
popf
xchg
add
add
pop
push
mov
push
push
push
push
push
push
push
push
push
call
add
add
add
pushf
cli
gs
push
add
add
mov
add
mov
into
data16
js
add
pop
add
add
out
add
mov
icebp
scas
add
leave
arpl
cmp
add
lcall
add
add
add
add
cld
lea
pop
add
push
push
push
add
not
dec
ror
pop
push
push
push
lea
push
call
add
add
add
add
add
add
push
add
call
mov
jge
add
add
add
pop
cmpsb
add
mov
push
xchg
pop
jns
in
mov
add
fwait
add
gs
pusha
popa
add
mov
lds
add
loop
add
add
jne
clc
mov
in
add
add
mov
jns
add
push
movsl
rcrl
add
fs
mov
lret
test
sub
cmc
add
pop
testl
addl
push
not
sub
pop
push
push
lea
push
push
push
push
call
add
nop
add
add
addl
loope
in
gs
cmpsl
add
in
hlt
ljmp
pop
jmp
mov
add
bound
add
je
add
xchg
mov
jmp
mov
add
add
xchg
add
add
mov
mov
cltd
pusha
popl
add
mov
cwtl
mov
mov
out
add
pusha
adc
call
push
rol
shl
pop
mov
pushl
push
inc
xor
xor
pop
push
push
push
push
call
pop
add
add
jle
pop
mov
movsl
add
leave
add
lret
add
add
pop
add
lods
repnz
shl
add
add
test
add
jle
out
movsl
add
jnp
add
mov
add
add
cmpsb
call
mov
lea
add
jecxz
add
cmpsl
insb
out
mov
mov
xchg
fiaddl
pop
add
add
add
mov
mov
add
pop
push
call
cmpl
jne
push
lea
shr
pop
pop
pop
push
push
push
push
push
push
push
push
push
call
lcall
add
add
add
pop
xchg
jo
loope
std
popf
int3
in
jnp
add
repnz
test
call
jle
add
icebp
imul
scas
add
gs
pop
jo
fdivr
iret
popa
add
add
pop
out
shlb
add
xchg
add
add
popa
xchg
jecxz
add
mov
jmp
add
cmc
shl
mov
lea
pop
pop
pop
push
inc
inc
shl
add
pop
leave
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
pushf
fistpl
aam
add
loopne
in
sar
xchg
outsl
lret
lret
add
push
mov
rcrb
fbstp
cli
mov
add
jno
fldl
div
mov
xchg
add
add
add
add
lock
push
add
leave
add
push
lahf
cld
rcl
loop
add
mov
add
popa
popf
in
gs
add
add
mov
lea
pop
ret
push
not
sub
pop
push
push
shr
inc
add
pop
mov
add
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
fiaddl
add
fldenv
test
insb
jp
stc
nop
lea
addr16
shll
cld
popa
mov
add
mov
add
mov
add
add
add
jmp
cltd
add
mov
mov
addb
cld
scas
add
mov
mov
add
lret
add
add
mov
jne
add
aam
push
lock
lea
pop
push
push
add
sub
not
add
pop
push
push
sub
not
ror
pop
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
repnz
iret
add
push
testb
addl
add
push
pop
push
add
addb
lods
jp
int3
imul
add
nop
add
jno
mov
addl
add
lock
pop
jecxz
xchg
pop
les
flds
aam
lcall
add
shl
lret
add
mov
add
add
faddp
lds
add
mov
lea
pop
movl
push
add
pop
push
push
push
lea
push
call
add
testb
add
add
stc
roll
add
mov
jns
push
scas
lock
add
cwtl
and
mov
pop
in
cli
ficoms
add
test
jle
add
jae
cmc
lea
lods
aad
aam
data16
aam
add
add
add
aad
xchg
testb
je
push
add
add
pop
mov
jge
add
add
mov
add
mov
lea
pop
call
push
push
push
push
lea
push
lea
push
lea
push
call
jae
jb
add
cmpsb
add
fwait
shlb
mov
pop
xchg
push
out
test
push
cli
add
add
lods
add
rcrl
lret
jo
add
add
rorb
out
ror
add
imul
add
ja
add
add
fs
test
add
pop
add
mov
les
or
lea
sbb
push
push
call
push
nop
pop
mov
jbe
leave
jecxz
mov
mov
add
lea
clc
icebp
push
push
jne
add
cmc
pop
mov
lahf
add
add
mov
add
add
mov
mov
out
out
cmc
xbegin
jae
testb
aad
addr16
pop
loopne
add
mov
add
cmc
ljmp
add
add
add
adc
mov
lea
pop
call
subl
push
rol
rol
pop
cmpl
jne
pop
push
sub
lea
sub
lea
pop
pop
pop
push
lea
push
push
lea
push
push
push
call
hlt
je
add
jle
shl
cmpsl
add
mov
hlt
add
lahf
scas
mov
mov
mov
imul
mov
jns
cmpb
aad
lcall
pushf
add
jne
add
add
add
add
pop
add
sti
mov
add
mov
jb
add
add
xlat
xchg
add
scas
loope
add
lea
pop
pop
leave
push
sub
not
pop
ret
push
mov
push
shr
lea
pop
add
push
rol
shr
rol
sub
pop
push
push
push
push
dec
shr
pop
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
mov
out
add
pop
imul
popl
add
lea
jno
mov
add
add
test
push
add
add
add
aad
jns
add
jmp
add
out
add
add
pop
add
lods
scas
add
mov
stos
cwtl
add
std
js
aam
imul
mov
outsl
scas
mov
mov
add
add
test
add
pop
mov
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
jnp
mov
popa
add
add
mov
add
mov
loop
add
mov
xlat
jo
xchg
add
add
add
add
mov
add
add
add
add
add
pop
clc
jl
push
leave
add
cmpsl
push
mov
add
faddp
add
mov
xchg
add
fmuls
pop
lea
sub
mov
push
sub
shl
xor
pop
shr
add
mov
push
push
push
lea
push
push
lea
push
push
call
jle
out
push
add
insb
add
in
jns
scas
fwait
pop
repnz
movb
cmpsb
les
add
add
fists
stos
test
cmp
in
pop
mov
add
mov
test
add
bound
add
adc
add
jecxz
mov
add
clc
add
jno
mov
lea
pop
mov
add
push
push
push
call
jb
add
add
leave
jmp
fldl
imul
add
jns
add
testb
lret
cmc
jo
add
mov
push
pop
jmp
xorb
add
add
add
fcmovnu
mov
fs
add
add
add
fadds
sahf
pop
jge
push
in
imul
or
add
push
push
call
insb
add
add
add
jne
jnp
add
testb
lcall
add
aad
fisubrs
mov
mov
pop
add
add
push
add
cwtl
add
fmuls
add
add
mov
add
imul
jnp
in
stc
cmpsl
data16
mov
test
add
aam
bound
pop
mov
push
lea
push
push
push
call
into
mov
mov
add
add
jae
add
push
mov
mov
jmp
push
add
add
in
mov
fnstsw
lcall
add
insb
mov
stc
scas
push
jns
test
add
fs
add
add
xchg
cmpsb
mov
test
rcll
pop
add
roll
addl
cmp
scas
add
pop
mov
push
shr
pop
cmp
jne
push
push
call
add
add
add
fldt
into
mov
push
cwtl
pop
test
add
fadds
add
jge
add
in
push
xchg
sbb
add
add
mov
lods
loopne
xlat
loop
jp
add
jecxz
mov
fsts
test
add
add
andl
stos
mov
lcall
pop
add
add
mov
lea
pop
cmp
jne
mov
push
push
push
push
push
call
mov
lds
push
je
add
push
add
addb
fnstcw
insb
add
aad
mov
pop
jp
cmpsl
mov
mov
add
jp
add
add
add
add
add
mov
add
fiadds
xchg
add
int
add
fldl
xchg
testl
out
fnstsw
push
std
add
mov
add
pop
movl
jmp
mov
push
shl
add
pop
mov
sub
jne
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
jle
xchg
imul
jb
addl
add
add
add
loop
cli
in
add
add
jne
mov
xlat
cli
push
add
mov
mov
jl
popa
mov
add
jle
je
mov
jno
mov
cltd
add
add
jge
out
sti
aad
mov
outsl
js
add
pop
mov
movl
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
push
add
out
fwait
aam
fwait
fwait
add
iret
lods
add
mov
add
int
insb
arpl
add
neg
add
fadds
add
hlt
add
add
add
add
rcl
add
mov
jno
add
je
add
mov
and
fmull
cmp
add
mov
mov
push
lea
push
push
lea
push
call
mov
add
test
movsb
add
add
add
mov
cmpsb
jecxz
cwtl
fiaddl
loop
mov
lcall
add
scas
add
add
mov
lock
add
mov
bound
jge
add
filds
add
add
add
pop
add
add
lret
mov
add
mov
add
scas
mov
testb
mov
fimuls
pop
cmp
jne
mov
push
dec
pop
movl
push
push
push
lea
push
lea
push
push
push
lea
push
call
pusha
add
xchg
mov
add
call
add
add
lahf
add
jno
add
hlt
add
ret
repnz
mov
mov
in
add
out
mov
fiadds
mov
shl
faddl
add
add
pop
test
add
add
pop
add
mov
add
imul
push
add
leave
mov
add
push
outsl
add
add
je
mov
lea
pop
jmp
mov
cmpw
jne
push
inc
inc
pop
mov
push
push
call
movsb
loop
add
mov
std
add
cwtl
add
cmpsb
out
je
rol
scas
testb
stos
mov
add
push
loope
add
mov
add
add
jmp
add
int3
fs
movsl
movsl
mov
jbe
sahf
out
add
jmp
addr16
mov
add
xchg
cli
push
add
mov
aam
bound
pop
movl
push
ror
pop
jmp
push
dec
pop
pushl
push
lea
push
push
lea
push
lea
push
lea
push
push
call
jno
mov
add
add
add
pop
arpl
movsl
add
add
mov
push
add
in
add
add
add
push
add
test
push
add
repnz
add
cmc
lods
add
xlat
jb
mov
clc
add
xchg
les
pop
clc
loopne
mov
out
mov
addr16
pop
push
inc
add
rol
pop
mov
push
push
lea
push
lea
push
push
push
push
call
add
add
shlb
mov
add
cmpsl
push
ja
add
add
popa
pop
add
filds
sti
stos
shl
add
xchg
add
lahf
add
stos
mov
fs
pop
add
xchg
pushf
xchg
xchg
aad
cwtl
add
rcr
int
add
scas
jge
xchg
hlt
add
add
mov
mov
add
add
mov
fcompl
shrb
call
xchg
add
add
pop
mov
push
lea
push
call
nop
add
add
imul
add
add
lahf
add
js
add
testl
push
add
add
cmpl
icebp
stc
add
push
mov
ja
in
adcb
add
xchg
add
add
scas
jp
int
cli
in
mov
mov
incb
add
add
add
out
ljmp
jmp
jge
add
mov
lea
pop
mov
push
push
shr
add
sub
xor
push
or
not
add
dec
sub
sub
sub
xor
pop
ror
sub
not
pop
push
shr
pop
push
push
sub
shr
add
pop
call
cmpl
je
push
push
xor
add
shl
push
and
add
inc
inc
sub
rol
dec
ror
sub
pop
ror
pop
push
lea
push
push
lea
push
push
push
push
call
ljmp
mov
xchg
push
lods
add
add
add
jmp
add
mov
push
xchg
add
xchg
add
ljmp
add
ret
add
xchg
pop
lahf
cmpsb
add
xchg
test
add
cmc
mov
loopne
mov
add
fimuls
pop
push
call
push
shr
shr
sub
shr
pop
cmpl
je
push
push
sub
xor
sub
add
push
push
pop
add
shl
lea
sub
xor
sub
lea
pop
add
sub
pop
push
pop
push
push
push
push
call
mov
lret
add
fwait
add
pop
add
push
mov
pop
fidivrl
add
mov
out
add
add
add
add
addl
into
mov
add
add
sahf
movb
out
jmp
mov
add
scas
addb
mov
addb
mov
add
add
add
add
add
mov
mov
lea
pop
call
push
push
push
push
push
push
push
push
push
call
jo
scas
mov
movsl
add
add
testl
mov
add
push
add
leave
add
xchg
add
loopne
add
add
clc
xchg
add
add
rolb
add
sti
std
pusha
add
add
stos
pop
pop
mov
je
call
fimuls
pop
cmpl
je
push
push
shl
push
sub
add
add
sub
add
not
pop
shl
xor
pop
push
rol
add
lea
not
pop
push
call
push
sub
lea
add
shl
pop
cmpl
je
push
push
inc
lea
ror
push
or
not
add
rol
shr
sub
sub
add
dec
shl
pop
ror
shr
add
lea
pop
push
push
push
push
lea
push
push
push
push
push
call
add
icebp
lods
enter
mov
loop
gs
outsl
mov
add
mov
xchg
out
cltd
addl
add
jmp
add
xchg
hlt
jb
add
pop
add
pop
add
call
add
mov
add
add
pop
leave
add
lea
pop
push
push
xor
pop
call
cmpl
je
push
push
dec
dec
push
or
inc
add
sub
shr
sub
pop
shl
sub
add
pop
push
push
call
mov
add
movsl
fwait
jle
add
add
aam
loopne
imull
add
test
hlt
add
nop
popl
pop
add
xchg
aam
mov
jb
add
nop
jmp
roll
add
add
pusha
lcall
loope
add
add
fs
add
fwait
add
bound
pop
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
add
mov
add
pop
nop
out
sti
add
add
add
push
add
add
xchg
lret
cmpsl
add
add
lret
mov
pop
test
mov
mov
mov
loop
add
cltd
outsl
lcall
in
jle
cmc
add
out
add
push
rolb
mov
lea
pop
call
push
push
lea
push
push
lea
push
push
push
call
push
lods
xchg
pusha
mov
stos
mov
popa
add
add
push
out
add
aam
movsl
mov
add
rolb
add
pop
push
add
sahf
add
add
flds
push
leave
add
add
add
add
stos
jge
add
popa
andb
mov
pop
cmpl
je
push
push
add
add
shl
push
and
add
dec
sub
ror
pop
ror
ror
add
pop
push
add
sub
pop
push
push
dec
pop
call
cmpl
je
push
push
xor
add
dec
push
or
not
add
sub
dec
lea
sub
add
pop
xor
pop
push
push
push
push
push
push
push
push
push
call
add
jne
sahf
sbbb
pop
push
add
popa
addb
push
add
lret
jno
jmp
add
add
jne
scas
leave
add
bound
push
add
lahf
add
xlat
jl
movsl
add
fisubrs
stos
mov
add
add
repnz
add
fcmovne
add
jp
add
in
add
popa
lods
frstor
movl
mov
lea
pop
push
push
push
push
push
push
push
lea
push
call
test
add
pop
fldcw
push
add
sarb
cli
add
mov
add
mov
jo
shrl
add
mov
aad
jmp
aad
add
add
scas
pop
je
faddl
push
fsubr
hlt
mov
push
xchg
imul
add
push
add
cltd
add
cld
lea
pop
call
cmpl
je
push
push
push
sub
add
add
sub
inc
pop
sub
pop
push
dec
lea
pop
push
push
lea
pop
call
cmpl
je
push
push
ror
shr
shl
push
and
add
rol
sub
sub
inc
rol
pop
pop
push
shl
dec
add
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
stc
add
rol
icebp
add
fldl
add
add
add
pusha
jnp
add
roll
xchg
add
xchg
test
add
mov
fldt
mov
les
xchg
icebp
mov
add
shlb
add
stc
iret
add
push
mov
mov
lea
pop
call
cmpl
je
push
push
push
sub
add
sub
add
shl
sub
sub
pop
not
sub
rol
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
lock
cmpsb
mov
jb
nop
imul
add
add
add
add
jo
jb
add
xchg
add
add
int3
add
add
add
add
add
cmp
add
in
fwait
ljmp
mov
clc
push
add
andb
iret
into
mov
add
int3
scas
jbe
add
xchg
add
mov
fbstp
aam
bound
pop
push
push
add
pop
call
push
push
push
push
push
call
fscale
jmp
add
add
popf
jne
mov
div
add
iret
lods
arpl
cmc
test
xchg
pushf
add
mov
pushf
imul
into
add
add
add
hlt
pop
test
out
repnz
add
je
negl
mov
arpl
in
pop
add
cltd
clc
mov
aam
bound
cmpl
je
push
push
sub
push
push
pop
add
lea
dec
shl
sub
dec
pop
sub
sub
not
sub
pop
push
ror
lea
rol
pop
push
call
cmpl
je
push
push
shl
lea
rol
push
push
pop
add
xor
sub
xor
shl
add
pop
add
pop
push
sub
sub
sub
pop
push
call
push
push
push
push
push
push
push
call
add
sti
test
popa
in
add
add
in
rclb
add
jae
popf
add
pop
push
jb
pop
pop
mov
ljmp
addl
add
pop
mov
out
add
push
lds
fstl
stos
push
add
je
add
std
cwtl
mov
lea
pop
cmpl
jne
mov
movl
push
add
dec
rol
pop
jmp
push
add
add
inc
pop
xor
push
push
push
push
lea
push
call
add
mov
add
add
bound
int
stos
lret
add
add
pop
add
scas
test
idivl
push
lahf
les
add
pusha
mov
cltd
enter
add
aam
shl
add
xchg
andl
mov
add
mov
xchg
shlb
mov
add
add
add
add
add
cld
lea
pop
pop
pop
push
dec
add
shl
pop
pop
pop
leave
push
inc
pop
ret
push
mov
push
dec
shr
ror
pop
add
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
add
cmc
jno
add
add
add
in
push
xchg
add
xchg
jno
fildl
push
test
in
add
lcall
add
scas
rcrb
pushf
aad
jp
imul
imul
imul
add
add
xchg
push
lcall
add
pop
cmpl
jne
push
push
add
add
push
or
not
add
shl
ror
sub
add
pop
not
sub
pop
push
add
add
pop
pushl
push
push
push
call
add
add
xchg
add
hlt
cmpsb
int
addr16
out
add
add
add
mov
add
lods
jmp
mov
arpl
jle
stos
push
add
std
jecxz
mov
add
movb
xlat
add
add
add
mov
movsl
mov
addr16
lods
test
add
add
add
add
test
add
out
add
pop
call
push
call
push
shr
pop
jmp
cmpl
je
cmpl
jne
push
push
push
call
mov
jl
popf
add
add
add
xchg
imul
stc
test
add
test
cwtl
add
enter
add
nop
popa
arpl
in
mov
cld
add
lods
mov
add
icebp
add
jne
loope
cltd
xchg
add
pushf
add
mov
repnz
shrb
movsb
add
mov
lea
pop
leave
add
push
ror
shr
shl
pop
pop
push
lea
push
push
push
call
imul
pop
xlat
test
add
gs
ja
fcoml
pop
push
cmpsb
add
ljmp
mov
add
sti
jae
aad
test
outsl
loop
add
cli
lock
pusha
mov
push
add
add
jno
gs
pop
pop
popf
add
lods
test
imul
add
add
add
add
in
pop
add
fdivs
scas
stc
arpl
lea
pop
pop
pop
push
push
lea
push
lea
push
call
add
mov
add
out
pop
pop
stos
js
fwait
jecxz
add
add
push
mov
add
je
add
add
mov
popa
add
js
mov
cmc
push
add
lods
add
fiaddl
add
rcrb
aam
fadds
jp
add
fistpl
scas
jnp
add
add
mov
fsubrl
ljmp
bound
pop
pop
push
add
add
pop
leave
push
add
add
dec
pop
add
push
inc
shr
pop
ret
push
push
push
push
push
call
ret
fwait
cli
div
add
xchg
add
xchg
add
lods
fwait
mov
xorb
mov
add
jno
mov
add
add
fistps
add
int3
mov
cltd
imul
mov
out
xchg
push
jecxz
add
sti
notl
add
les
stos
mov
ja
mov
push
cli
pop
arpl
add
add
pop
add
pop
jmp
push
add
pop
cmpl
jne
push
push
push
xor
add
shl
rol
xor
sub
add
lea
not
pop
shl
sub
lea
shr
pop
pushl
push
push
push
lea
push
call
add
cmpsb
lahf
add
push
add
jo
pop
jnp
fadds
js
mov
add
mov
lahf
push
loop
xchg
data16
mov
mov
jge
push
add
add
add
add
aad
movsl
ret
add
ror
aam
jge
in
in
jno
add
out
js
add
data16
add
add
add
push
add
popa
adc
mov
shl
pop
push
push
not
xor
sub
shr
pop
call
jmp
push
sub
not
shr
pop
cmpl
jne
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
lods
add
ficoml
popl
xchg
push
lret
lods
leave
hlt
add
push
loopne
jp
in
fwait
out
dec
addb
add
fidivrs
mov
addl
add
add
data16
add
scas
mov
jbe
push
add
add
add
imul
add
add
imul
xchg
xchg
mov
xchg
ljmp
mov
cmc
lods
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
add
cmpsb
int3
fldcw
mov
iret
add
add
add
add
xchg
add
out
add
cmc
add
addr16
test
add
xchg
push
xchg
addr16
add
push
test
popa
mov
add
call
add
push
nop
std
aam
add
loope
fldl
mov
lea
pop
mov
jmp
push
push
lea
push
lea
push
push
call
shl
xchg
add
test
add
add
add
mov
add
add
outsl
sbbl
add
lcall
push
add
cltd
lods
popf
mov
popa
add
lcall
add
icebp
add
je
mov
fbstp
fisubrl
lea
add
jp
orl
add
add
mov
orl
pop
push
lea
push
call
mov
fldl
lds
in
iret
add
stos
xchg
mov
stos
push
mov
add
aam
in
add
push
fmulp
out
add
int3
cmpsl
loop
jne
nop
test
pop
add
jl
movsl
add
mov
add
jb
cltd
shr
add
popf
lds
je
imul
out
xchg
mov
add
or
dec
jne
push
lea
push
push
push
lea
push
push
lea
push
call
add
mov
jo
add
out
xchg
jp
jmp
outsl
loopne
add
add
add
pop
push
shlb
fwait
rcll
mov
add
add
xchg
add
add
add
add
add
fistpl
bound
add
add
fildl
add
idiv
add
add
add
add
enter
jecxz
nop
add
add
pop
call
push
lea
push
call
add
add
pusha
les
add
cmpsb
fsubs
cmp
add
add
lods
add
stc
out
test
divl
cmc
add
test
add
cmpsl
add
add
mov
add
pop
pop
in
add
add
add
add
jae
xlat
add
scas
xchg
cld
mov
lods
push
addr16
test
cmpsb
add
orb
mov
mov
filds
mov
mov
lea
pop
jmp
push
shl
pop
call
push
push
shl
shl
push
or
inc
add
shr
sub
add
sub
not
lea
pop
shr
lea
pop
push
push
push
lea
push
lea
push
call
pop
ret
nop
hlt
mov
loope
add
int
add
lret
in
add
add
ret
imul
add
fildl
pushf
std
add
cld
push
mov
mov
add
add
add
add
add
fldl
mov
fstps
add
add
add
mov
add
add
pop
pushl
push
push
call
stos
add
test
gs
cwtl
fadds
add
loopne
add
add
lahf
add
loopne
xchg
xchg
jnp
push
jnp
add
stos
cli
cwtl
mov
push
add
cltd
xchg
cli
add
mov
nop
cli
jns
add
pop
mov
aam
push
mov
push
std
addl
les
mov
push
push
call
lock
add
xchg
icebp
add
lret
xchg
fsts
add
jp
stc
into
lahf
loop
mov
add
std
xchg
cwtl
add
add
roll
add
fs
mov
bound
into
add
mov
mov
test
mov
mov
int3
add
leave
rcl
test
add
push
in
out
fildll
add
push
add
add
mov
mov
lea
pop
push
push
shl
inc
pop
call
mov
push
lea
sub
pop
lea
push
push
sub
add
add
shr
push
push
pop
add
shr
sub
lea
dec
pop
pop
push
lea
push
push
push
lea
push
push
call
bound
fildll
xchg
push
scas
push
out
bound
add
push
add
lahf
leave
fstpt
jbe
pushf
xchg
add
stc
mov
add
mov
mov
shll
pop
pushf
add
hlt
add
nop
xchg
add
add
push
mov
popa
add
add
jmp
add
in
shll
add
jb
stos
add
mov
les
jne
call
push
push
push
lea
push
push
call
add
stc
test
out
adcl
jb
add
in
out
add
fcmovne
jmp
add
add
add
icebp
clc
lock
pop
mov
roll
lea
lcall
add
mov
mov
out
rol
add
mov
shlb
push
filds
popf
push
out
jns
add
stos
add
cwtl
pushf
add
adc
shrb
pop
sub
sub
not
add
push
or
not
add
sub
inc
xor
sub
rol
not
xor
lea
pop
not
lea
shr
pop
pushl
push
lea
push
push
call
add
mov
roll
add
enter
add
xchg
add
add
jne
add
add
add
test
add
cltd
mov
popf
add
add
fldl
adcb
add
pop
add
scas
xchg
in
add
add
jnp
add
in
jl
push
mov
addr16
mov
lea
pop
call
push
add
shl
pop
call
push
push
call
add
add
mov
in
push
mov
jecxz
loop
aad
add
add
add
add
pop
fstpt
lock
add
add
lods
add
bound
mov
add
add
add
mov
int3
add
add
add
fmull
inc
cld
push
add
sub
pop
lea
push
push
add
sub
not
push
or
not
add
sub
add
xor
sub
add
sub
pop
inc
inc
sub
pop
push
rol
add
pop
pushl
call
lea
push
xor
not
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
add
filds
movl
fsubs
std
add
aam
add
add
lcall
add
add
scas
or
mov
lahf
lahf
bound
fadds
jecxz
mov
js
add
fs
loop
add
flds
mov
loope
add
mov
add
mov
push
mov
bound
pushf
hlt
add
in
add
add
mov
mov
push
add
mov
lea
pop
pushl
push
push
add
rol
push
or
not
add
sub
sub
sub
sub
pop
inc
xor
pop
push
rol
shl
not
pop
push
call
push
push
add
shl
not
sub
push
or
not
add
sub
sub
xor
pop
add
pop
push
push
call
xchg
mov
pop
add
xchg
push
add
add
cmpsl
add
xlat
add
test
add
lahf
add
loopne
push
subl
cmpsl
xchg
push
lea
add
jge
leave
xchg
push
outsl
icebp
stos
mov
out
test
fwait
loopne
sahf
add
test
mov
aad
mov
add
add
mov
add
add
pop
pushl
push
push
lea
push
call
nop
add
add
fnsave
jne
add
add
lret
rclb
add
rcrb
jecxz
mov
mov
add
addb
mov
testb
add
add
add
mov
lcall
pop
mov
mov
mov
add
add
cmpsl
add
scas
out
add
jl
add
fmull
loopne
add
push
push
push
push
call
add
mov
add
pop
test
movsb
out
rcl
cmpsl
add
movsb
add
fbld
push
testb
aam
add
add
add
add
scas
add
cmpsb
mov
add
lahf
ret
popa
mov
lret
add
lock
popl
xchg
add
xchg
add
mov
push
clc
jb
pop
add
nop
mov
lea
pop
push
call
push
push
add
not
sub
push
sub
add
shl
sub
dec
sub
inc
pop
ror
pop
push
lea
push
push
push
push
push
push
call
add
in
mov
add
xlat
mov
movsl
add
arpl
xchg
add
sti
lods
push
mov
add
mov
xchg
arpl
add
lret
xchg
add
mov
add
out
out
clc
shrb
hlt
add
mov
add
leave
add
add
mov
add
add
pop
add
add
scas
cld
add
add
add
add
lea
pop
pushl
push
add
sub
ror
shr
pop
call
push
sub
inc
lea
pop
call
jmp
push
lea
push
push
push
call
add
fdivrs
pop
add
add
popl
add
push
jge
add
add
add
clc
mov
jo
jno
roll
pusha
add
fidivrl
add
xchg
add
push
sarl
add
add
add
add
lahf
jns
push
std
nop
je
out
add
lea
mov
lds
rcr
add
jae
test
jne
add
lret
mov
lea
pop
pushl
mov
jmp
push
push
dec
push
or
inc
add
add
lea
sub
shl
shr
pop
not
shl
inc
pop
push
not
xor
xor
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
pop
jnp
mov
mov
add
add
mov
call
add
xlat
lea
rolb
loopne
mov
add
add
fwait
arpl
add
add
xchg
add
fstps
pushf
add
add
out
add
add
push
add
out
add
pop
call
push
push
sub
sub
lea
push
push
pop
add
lea
xor
sub
sub
rol
pop
inc
pop
push
push
push
lea
push
lea
push
push
push
call
add
add
popl
add
add
mov
lret
add
xchg
js
pop
mov
insb
mov
mov
add
iret
add
add
add
add
add
xchg
mov
or
mov
fdivrp
cmpsl
hlt
add
mov
imulb
jne
xchg
call
jne
add
in
add
add
data16
mov
lea
pop
pushl
push
sub
pop
call
push
push
lea
push
lea
push
lea
push
call
ja
xlat
scas
fwait
add
movsb
add
add
out
pop
add
cli
pop
fs
in
add
mov
in
scas
add
leave
gs
fiadds
hlt
xlat
sarl
movb
mov
mov
add
mov
add
add
xchg
mov
add
std
cli
add
jns
mov
push
mov
lea
pop
push
push
lea
inc
dec
pop
call
push
push
push
push
lea
push
call
cwtl
pop
add
add
js
hlt
pop
push
add
fstl
popl
testb
aad
roll
add
pop
add
mov
lods
add
add
push
add
arpl
outsl
add
xchg
in
push
out
scas
push
jmp
cmpsl
add
mov
push
icebp
mov
add
add
leave
xchg
pusha
add
cli
xchg
add
stc
stc
mov
mov
lea
pop
leave
push
add
xor
pop
add
pop
push
add
pop
pop
pop
pop
push
rol
inc
ror
pop
leave
push
push
push
push
push
push
push
call
mov
pop
rolb
xchg
mov
xchg
xchg
add
and
int
std
out
add
xchg
mov
add
ror
jo
int3
cld
add
in
jne
add
add
push
add
sbbb
jne
xchg
mov
pop
popf
mov
iret
fstpt
movsl
add
push
add
pop
add
push
push
push
push
push
push
push
call
add
add
add
add
data16
in
fiadds
jp
jne
into
jl
aad
add
push
or
out
test
jmp
add
add
mov
xchg
lods
cwtl
mov
into
jno
loope
loop
stos
add
add
add
add
xlat
add
jne
lret
add
movb
fdiv
add
iret
enter
push
add
fmull
leave
push
xor
pop
ret
push
shr
pop
push
mov
push
push
push
push
push
call
add
testl
cmc
cli
cld
jnp
add
arpl
add
add
add
mov
sti
call
add
jns
lods
add
addb
mov
add
cmc
add
push
pushf
pop
jae
ffreep
xchg
mov
add
add
add
add
add
add
lea
pop
cmpl
jne
push
lea
push
lea
push
push
push
push
call
pop
push
add
std
outsl
les
mov
add
mov
loope
loop
mov
add
rcrl
imul
jle
add
fsubrl
cmc
add
imul
rolb
add
fnstcw
add
add
mov
add
out
add
push
nop
push
mul
add
bound
mov
lea
pop
mov
jmp
mov
push
inc
pop
and
push
dec
pop
xor
xor
push
add
add
rol
shl
pop
add
push
lea
push
push
lea
push
call
push
add
add
pop
add
add
add
mov
mov
add
cmp
add
lahf
pop
jl
add
stc
add
pop
mov
cmc
add
pop
mov
mov
add
pop
add
add
pop
into
rolb
jbe
lcall
fdiv
imul
add
in
mov
add
aam
bound
pop
xor
dec
sub
push
inc
dec
inc
lea
pop
jmp
sub
pushl
push
pop
pop
sub
cmp
jne
push
dec
rol
add
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
xchg
push
add
int
add
add
add
cwtl
add
mov
jnp
pop
jno
lods
add
add
aad
lret
data16
add
add
add
out
push
std
mov
add
cmc
in
stos
test
out
fwait
movl
add
sti
cld
mov
mov
mov
add
sub
dec
cmp
jmp
push
push
call
pop
push
jp
xchg
fiaddl
mov
addb
add
imul
into
xchg
loope
in
push
fwait
add
xchg
add
mov
pop
cli
mov
pop
mov
add
mov
add
in
add
add
addb
in
push
xchg
pop
negl
add
add
xchg
add
push
add
push
add
add
notl
mov
lea
pop
mov
push
shl
add
lea
pop
shr
add
push
sub
lea
xor
ror
pop
sub
pushl
push
sub
pop
pop
shr
and
push
lea
shr
pop
sub
push
dec
sub
pop
cmp
jne
push
push
lea
push
push
push
push
push
call
jecxz
mov
xchg
add
add
loope
add
xchg
jnp
add
add
fs
add
add
hlt
addb
mov
leave
add
in
leave
add
test
add
add
add
add
fiaddl
jge
add
mov
rcr
add
add
add
add
popa
add
loopne
in
xchg
mov
lea
pop
leave
push
pop
ret
push
mov
push
push
lea
push
call
scas
lods
cwtl
xchg
add
pusha
mov
in
cltd
test
scas
xlat
add
mov
add
push
add
mov
mov
mov
add
ret
add
js
add
leave
fwait
add
add
insb
in
add
xchg
mov
bound
add
cwtl
add
jle
jne
add
xchg
cmc
mov
add
add
jo
pop
ljmp
add
add
add
add
lcall
pop
add
push
lea
shl
xor
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
push
call
xlat
add
mov
pop
add
ficoml
add
out
pop
add
add
roll
flds
add
arpl
push
jp
nop
add
lret
jb
add
in
mov
add
jns
in
jns
xchg
pop
scas
icebp
lcall
jb
rolb
push
add
sbbb
test
sub
add
add
add
lcall
add
add
sub
push
push
push
lea
add
add
pop
push
mov
lea
push
pop
sub
mov
shr
push
push
push
push
push
push
call
cmc
addr16
rorb
add
add
mov
cmpl
adcl
std
add
xchg
call
add
pop
sti
mov
add
lds
xchg
nop
scas
ja
add
aam
outsl
mov
pop
add
add
add
aam
rolb
add
add
add
stc
add
add
out
loopne
xlat
pop
add
add
add
aam
bound
pop
add
push
xor
pop
mov
add
push
pop
mov
push
push
push
lea
push
push
lea
push
call
mov
roll
out
push
add
bound
aad
shlb
ret
push
mov
mov
add
add
sti
movsl
test
mov
std
popa
pushf
push
push
push
mov
add
arpl
jb
imul
mov
add
push
cmpsb
add
add
mov
test
mov
push
pop
add
add
mov
js
test
stc
mov
lea
pop
add
push
push
push
push
push
lea
push
call
lret
add
fs
sbbb
add
test
lods
push
add
xlat
add
in
sahf
add
lods
cltd
add
out
insb
add
add
fwait
lea
add
scas
add
icebp
add
roll
cli
clc
mov
add
mov
cli
subb
lds
pop
xor
push
dec
shl
pop
mov
push
dec
sub
xor
pop
and
push
add
ror
pop
call
push
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
add
mov
arpl
mov
decb
movsl
leave
add
mov
lods
pop
addr16
mov
xchg
ja
lock
into
test
mov
add
popa
add
add
push
mov
add
mov
xchg
pop
jp
pop
mov
add
aam
bound
pop
add
cmp
je
add
push
shl
not
rol
pop
cmpl
jne
xor
pop
push
not
add
xor
sub
pop
pop
push
xor
pop
pop
push
shr
shl
dec
pop
pop
push
inc
pop
pop
leave
ret
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
loop
stc
addb
icebp
jp
mov
add
mov
jecxz
rolb
mov
add
out
add
pop
xchg
push
stc
mov
fildll
add
add
cmc
lahf
filds
push
stos
imul
add
add
add
fucomip
add
add
mov
test
add
fisttpl
pop
mov
push
push
push
call
add
push
add
add
mov
js
iret
out
loopne
jns
loop
add
lret
mov
add
add
mov
add
stos
mov
add
pop
add
push
pushf
mov
add
mov
add
xlat
add
add
mov
movsl
add
in
add
add
add
push
hlt
test
in
clc
cld
add
pop
add
push
push
push
push
call
dec
add
lahf
add
add
add
add
add
stc
pusha
add
mov
mov
push
addb
mov
loope
mov
stos
xchg
add
xlat
ffree
testb
out
out
add
push
mov
cltd
add
mov
imul
add
mov
movsl
fsub
mov
add
mov
lea
pop
push
push
pop
push
xor
pop
pop
mov
push
inc
pop
push
call
xor
push
lea
push
lea
push
push
push
call
add
hlt
mov
stos
add
scas
add
add
add
cld
add
xorb
add
add
add
shrb
cmpsl
jge
add
stc
lds
out
data16
fldl
add
pop
mov
add
test
add
ja
add
add
test
mov
ljmp
add
pop
pop
pop
push
dec
shr
ror
pop
pop
pop
pop
push
lea
add
dec
pop
leave
ret
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
testb
add
add
add
mov
add
jno
add
jmp
add
pop
out
imul
mov
add
add
mov
add
popa
jle
sti
shll
add
add
xchg
add
enter
clc
xchg
xchg
add
in
add
add
rcl
mov
add
mov
add
fdivl
popa
ficoml
roll
scas
add
pop
mov
push
push
push
push
push
push
push
push
push
call
add
test
add
test
lods
pop
push
fldcw
mov
stos
jae
add
fsubrs
add
std
lcall
int3
out
fstps
jp
int3
add
xchg
add
jo
fisttps
jle
push
add
jl
mov
add
fldl
negb
add
xlat
nop
jae
stos
add
int3
add
xchg
push
shll
fmull
hlt
push
add
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
add
xchg
jl
stos
repnz
xchg
mov
popa
push
push
incb
mov
cwtl
push
add
idivb
push
add
add
add
add
arpl
mov
addb
cmpsb
mov
xchg
add
add
jbe
imul
adcl
rolb
shlb
mov
mov
nop
imul
in
mov
lea
pop
push
push
push
push
call
mov
pop
fwait
add
pop
add
push
pop
imul
addl
add
add
add
add
add
xchg
add
add
add
fsubp
shll
lret
arpl
push
pop
add
mov
addl
add
add
add
faddl
bnd
ja
xchg
mov
add
xchg
add
xchg
negl
les
push
add
not
pop
mov
push
push
push
push
call
loope
test
mov
imul
push
xchg
add
add
mov
std
mov
cmc
je
int3
pop
add
add
stc
icebp
pushf
pop
add
add
add
add
in
jo
add
xchg
push
popa
mov
stc
fidivl
jmp
lret
add
add
add
cld
lea
pop
push
pop
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
xorl
out
add
insb
mov
add
cli
add
push
push
add
mov
test
add
add
repnz
add
roll
add
aam
add
nop
xchg
popf
mov
push
fmul
shll
iret
add
add
rcl
mov
movb
out
add
ror
popf
int
push
rclb
pop
fwait
incb
add
test
add
add
add
pop
sub
mov
push
push
push
call
shll
iret
add
lods
movsb
hlt
jne
cltd
add
jno
add
je
jb
xchg
in
add
pop
xchg
lock
add
add
push
push
add
mov
arpl
add
lret
add
add
add
jge
jl
mov
add
sahf
fldl
jno
pop
add
jl
test
add
add
add
jecxz
add
les
ljmp
push
pop
add
pushl
push
shr
pop
popl
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
repnz
pop
clc
test
xchg
cwtl
movsb
lock
add
pop
add
int
add
popl
mov
mov
lods
add
jp
push
add
pop
xchg
add
add
cli
clc
mov
add
add
add
int
add
add
jns
xchg
add
mov
add
add
faddl
imul
stos
iret
and
mov
lea
pop
mov
push
push
push
push
push
call
add
add
je
aad
push
call
mov
mov
pop
mov
push
jp
rolb
mov
add
mov
out
pushf
repnz
fsubrs
add
mov
add
add
add
fsubr
test
add
add
test
add
stos
cltd
add
add
mov
add
movb
xchg
add
adc
add
xor
lea
push
shl
lea
pop
mov
push
dec
lea
pop
add
xor
call
push
lea
push
lea
push
call
testl
mov
rcll
loop
stos
add
add
xchg
mov
lds
add
add
add
add
jbe
outsl
add
rcr
mov
xor
clc
add
add
arpl
mov
add
add
add
pop
mov
loopne
xlat
add
jno
stc
bound
add
orb
add
mov
mov
lea
pop
add
nop
nop
push
push
push
lea
push
push
push
push
push
push
call
cld
lock
cmc
hlt
add
ret
add
add
ret
mov
add
mov
add
arpl
jb
add
add
push
les
mov
nop
add
out
iret
jne
mov
ljmp
mov
add
pop
add
add
add
out
jnp
mov
imul
jns
aad
pop
fidivs
xchg
loope
push
lea
pop
cmp
je
nop
nop
push
sub
sub
lea
pop
inc
nop
push
lea
pop
nop
push
sub
rol
add
pop
cmp
jb
xor
push
push
push
push
push
push
push
push
push
push
call
mov
add
add
add
add
add
add
pop
add
xorb
xchg
push
mov
gs
add
loop
add
ljmp
addb
jne
bound
incb
mov
mov
add
imul
arpl
add
mov
add
add
add
add
pop
jmp
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
add
push
divl
add
add
gs
leave
test
in
loop
xchg
add
jle
add
cwtl
jge
add
cltd
mov
into
add
lods
into
mov
pop
add
add
test
fildl
add
add
add
roll
lret
int3
int
shll
add
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
push
call
mov
add
jne
pushf
stos
add
add
add
add
mov
add
out
bound
les
add
fldl
int3
roll
aam
xchg
cmc
add
lcall
aad
xchg
mov
aam
add
sar
cwtl
fiadds
mov
aam
addr16
imulb
scas
mov
filds
addl
add
add
mov
pop
jle
rorl
movzwl
mov
add
push
xor
pop
mov
xor
push
push
push
push
push
call
mov
roll
add
scas
in
pop
leave
mov
mov
push
pop
add
mov
mov
add
icebp
add
add
jmp
jmp
add
add
pop
add
mov
add
add
add
add
jne
add
add
xchg
mov
lea
pop
xor
shl
push
add
add
pop
xor
push
ror
add
xor
shl
pop
shl
push
lea
pop
xor
shl
xor
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
jae
add
mov
stos
add
insb
xlat
add
add
scas
add
add
iret
les
add
jl
push
push
loopne
pop
pop
test
add
stos
jbe
mov
flds
jle
out
add
add
add
xchg
mov
add
add
add
add
outsl
add
mov
add
add
mov
int3
lea
pop
mov
add
push
push
lea
push
push
push
push
lea
push
call
mov
jnp
int3
push
insb
add
add
incb
add
ret
push
add
jbe
mov
mov
gs
jae
aam
pop
addl
roll
add
add
add
xchg
add
add
add
icebp
add
mov
movb
addw
push
addr16
add
jnp
xchg
add
roll
xchg
mov
bound
pop
push
push
push
call
roll
add
testb
pushf
leave
mov
fcomps
add
mov
mov
lret
add
xlat
pop
roll
add
les
add
pop
jne
jne
vshufps
add
add
mov
push
add
lret
add
add
les
jp
ret
mov
pop
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
push
add
push
movl
add
jo
add
lcall
jp
add
lods
loop
mov
fiadds
imul
add
add
test
add
xchg
add
ret
shrl
mov
outsl
mov
xchg
jne
std
jne
add
fiaddl
out
add
add
add
add
push
sub
push
inc
pop
pop
leave
ret
push
lea
inc
add
pop
push
mov
push
sub
rol
xor
pop
push
push
push
push
push
push
call
add
add
add
stc
mov
cwtl
mov
add
add
add
add
mov
loop
add
push
add
add
add
test
call
mov
sahf
add
js
je
addb
xchg
add
int
pop
ret
add
int
pop
pop
les
mov
lea
pop
push
push
push
push
push
lea
push
call
ja
add
add
add
add
fmull
mov
rclb
arpl
add
mov
pop
mov
add
push
add
lds
outsl
aad
lods
add
lds
add
jmp
out
lret
lret
loope
test
sahf
add
add
ret
out
mov
lahf
mov
adc
mov
mov
push
shr
pop
mov
push
shr
pop
test
je
mov
test
je
push
shl
shl
shl
pop
mov
mov
push
lea
push
push
call
add
add
mov
add
add
add
add
add
stos
popf
arpl
add
pusha
sti
add
add
imul
out
shll
ret
jp
in
aad
add
pop
fistpll
jo
test
lods
jae
pop
test
add
add
add
popa
movsb
add
pushf
add
mov
jge
mov
lea
pop
mov
inc
push
xor
pop
cmp
je
test
je
mov
push
lea
rol
rol
pop
inc
cmp
je
push
shr
add
pop
test
jne
xor
push
push
lea
push
push
push
push
push
call
add
in
add
sti
cmpsl
test
les
lret
mov
jl
fiadds
jecxz
add
add
add
cmpsl
xlat
add
add
lret
enter
add
rclb
add
js
add
jl
add
hlt
add
std
fdivl
xchg
lret
movsb
mov
shrb
mov
in
mov
lea
pop
pop
push
add
pop
pop
push
push
call
int3
add
imul
mov
fiaddl
mov
add
add
add
xchg
xchg
push
mov
mov
mov
add
lcall
add
orb
add
mov
add
add
jbe
add
scas
movsb
pop
imul
add
fmul
add
add
add
arpl
push
scas
mov
pop
jl
mov
lea
pop
pop
pop
leave
push
dec
pop
ret
mov
inc
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
loopne
add
incb
mulb
pop
lea
add
add
add
mov
add
add
in
add
add
in
stos
data16
add
jnp
out
add
mov
add
mov
add
scas
pop
std
add
add
scas
pushf
hlt
add
rolb
mov
jp
insb
testb
add
pop
cmp
jne
push
pop
lea
push
push
push
push
push
push
call
add
add
popa
add
xchg
add
imul
test
mov
add
pusha
scas
jnp
imul
pop
mov
mov
sarl
add
mov
push
arpl
add
add
imul
mov
xchg
add
call
lods
mov
jo
add
popl
outsl
into
lcall
pusha
add
lea
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
faddl
add
add
add
add
fs
push
xchg
test
leave
out
add
add
je
add
add
xchg
in
add
add
mov
add
add
jmp
ja
xchg
push
rolb
add
fcomip
in
int
fildl
cmpb
push
add
add
xchg
filds
add
add
popa
loopne
push
push
out
mov
lea
pop
test
je
mov
push
push
push
lea
push
lea
push
push
call
add
add
jmp
add
add
movsl
mov
xchg
aad
movsl
add
pushf
add
popf
add
add
repnz
add
clc
flds
cmpsl
add
fadds
add
add
testl
cmpl
out
jno
add
push
add
add
push
add
mov
sbb
movb
lea
xor
pop
cmp
jne
mov
test
je
push
lea
pop
mov
push
sub
add
pop
add
cmp
je
jmp
push
inc
not
pop
xor
push
lea
push
call
mov
sti
jbe
sti
aam
add
rcll
jb
enter
mov
add
add
add
popa
out
aam
add
out
add
movsb
add
add
addl
add
fildl
rolb
mov
shll
push
mov
mov
lods
mov
add
add
int3
js
into
imul
xchg
add
insb
add
mov
lea
pop
pop
push
push
lea
push
push
push
push
push
push
call
out
popa
push
cmpsb
out
push
in
out
add
popf
shrb
push
lret
add
jae
scas
decb
mov
add
fsts
scas
add
jge
mov
mov
add
pop
lret
add
push
ljmp
add
andl
mov
mov
gs
lods
popa
push
mov
call
add
pop
pop
pop
push
push
lea
push
push
lea
push
push
push
push
call
les
push
push
add
add
add
iret
lock
add
add
mov
add
fstl
add
add
out
mov
add
pop
leave
push
pop
add
test
add
sahf
add
repnz
clc
add
fisttpl
movsl
cmp
push
add
int
add
add
add
sbbb
mov
lea
pop
pop
leave
ret
push
lea
push
push
push
push
push
push
push
lea
push
push
call
popa
clc
addb
add
test
add
loopne
sahf
faddl
lcall
add
popa
pop
add
add
nop
add
pop
fidivs
mov
add
scas
divl
xchg
add
add
add
repnz
mov
mov
add
mov
add
push
fs
lea
pop
lea
push
ror
xor
sub
pop
pop
push
push
push
push
push
push
call
movsl
flds
add
in
add
jae
add
add
push
add
out
add
jbe
add
ja
add
clc
jge
add
fwait
icebp
js
push
nop
lds
xchg
push
add
ret
lahf
mov
mov
add
jl
add
add
lahf
add
jle
mov
mov
mov
bound
ja
lret
mov
lea
pop
pop
pop
push
push
call
add
add
pusha
add
xchg
scas
add
add
push
fisttpl
add
scas
lahf
cli
jo
add
fidivs
add
aam
mov
add
jb
mov
ret
fidivs
mov
xchg
add
add
clc
aam
lods
mov
mov
xchg
jp
scas
cltd
testl
fmull
leave
push
push
push
push
call
add
add
add
movsl
add
push
pop
add
fadds
jnp
outsl
add
jae
ja
add
add
jp
add
pop
add
add
add
jno
add
push
xchg
cltd
mov
push
test
test
mov
add
int
into
add
out
add
add
in
mov
js
mov
lea
pop
ret
push
pop
mov
pop
pop
push
lea
push
push
push
push
push
call
add
add
loopne
fs
clc
jns
mov
add
add
push
add
int
mov
lods
push
mov
jns
stc
add
add
in
loope
shlb
push
mov
fbstp
add
add
add
add
jecxz
out
add
add
add
mov
pop
cli
test
add
add
xchg
movsb
add
mov
data16
pop
push
ror
xor
inc
pop
leave
push
push
lea
push
call
mov
jl
pop
jno
add
mov
adc
in
mov
fildl
add
sti
ficomps
data16
in
out
add
jmp
add
add
test
add
int
add
add
add
add
lea
add
pusha
pop
rorl
mov
out
pop
arpl
mov
push
add
jae
lea
push
data16
ret
push
push
push
push
push
lea
push
push
lea
push
push
call
loope
out
mov
fldenv
jge
mov
repnz
pop
jle
add
add
lcall
loopne
lods
add
loopne
add
add
pop
fsts
add
lret
ret
mov
sar
mov
jb
add
add
aam
add
lock
fsubrs
add
cmc
add
add
lea
add
add
pop
rol
rol
push
lea
push
push
push
call
pop
mov
roll
add
add
mov
mov
imul
add
cmpsl
test
add
add
add
add
imul
scas
add
xchg
pop
leave
scas
scas
add
xlat
orb
mov
lahf
test
mov
jl
out
add
mov
adc
add
cmp
jne
push
lea
push
lea
push
push
push
call
push
lea
fldl
cmpsl
push
addr16
jl
xchg
add
mov
popa
roll
add
add
jno
add
popa
add
fiadds
int3
add
fists
add
add
mov
push
mov
scas
sti
nop
insb
add
addl
xchg
shrl
xchg
add
push
add
push
add
mov
imul
cli
pop
add
cld
stos
add
mov
lea
pop
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
mov
mov
sti
movsb
xchg
mov
sti
outsl
jecxz
sti
cmp
sti
int3
push
mov
sti
movsb
shlb
sti
adc
loop
mov
pushl
ljmp
in
push
mov
dec
in
lret
pop
loopne
pop
push
xor
push
and
cmp
out
push
or
fs
adc
int3
mov
or
pushf
and
iret
imul
insl
popl
pop
dec
int
push
dec
inc
mov
fisubl
test
jle
xchg
sarl
mov
or
push
or
shl
jmp
cmp
cmpsl
js
pusha
mov
out
pop
mov
dec
push
fwait
pop
add
mov
dec
jbe
jecxz
in
test
rcll
pushf
clc
je
and
pushf
rcl
cltd
hlt
mov
xor
adc
popa
pop
ud1
push
movsl
icebp
aas
dec
xchg
push
lahf
movsb
in
adc
int
or
mov
in
call
sarl
cmpsl
or
mov
jge
jge
test
rolb
push
cmp
xchg
push
mov
jnp
xchg
cmpsb
adc
divl
mov
icebp
cmp
pop
movsl
xor
push
mov
mov
sbb
mov
test
cmp
sub
mov
shlb
cmc
xchg
adc
jo
jne
es
outsl
inc
xchg
push
jns
scas
lcall
mov
xchg
pop
mov
jcxz
pop
adc
xor
popf
addr16
xchg
inc
aaa
rcll
cmp
cmp
leave
xor
sarb
xchg
mov
dec
mov
mov
out
adc
pop
mov
sbb
xor
pop
js
adc
out
sub
ja
fists
mov
gs
je
pop
xchg
scas
inc
lret
push
shlb
ja
and
bnd
sbb
inc
lret
mov
mov
xorb
repnz
mov
mov
mov
out
or
scas
sbb
pop
lock
push
cmpl
fisubrs
and
mov
mov
pop
mov
or
pop
pushf
nop
popa
inc
pop
in
mov
pop
insb
call
sbb
loopne
mov
lahf
or
xchg
push
das
mov
jb
xor
mov
xchg
jp
and
pop
jecxz
cmp
test
js
insl
xor
jmp
insl
lock
mov
sbb
sbb
divl
lret
aas
mov
inc
clc
cli
jle
les
jmp
add
inc
push
int3
xchg
dec
jg
cmp
inc
sbb
fs
xor
inc
mov
outsb
xchg
mov
aaa
xchg
mov
mov
cmp
fdivrl
sub
std
loope,pn
les
sbb
fsub
push
rcr
push
xchg
sub
cmp
and
ret
decl
imul
gs
test
popf
push
or
sahf
jno
xchg
inc
fdivl
fiadds
push
mov
jno
ja
ja
sarl
add
aam
and
fiaddl
cld
mov
and
gs
xchg
ss
push
call
movsl
fst
imul
inc
dec
repnz
mov
dec
ds
add
push
pop
bound
mov
scas
sbb
fwait
nop
mov
bound
push
push
inc
rcrb
mov
cmc
repnz
sub
and
lahf
lods
call
sbb
jno
mov
jge
jne
sbb
inc
adc
test
cmpsb
shlb
inc
and
pop
sbb
loop
lret
lods
sbb
std
xor
cmpsb
add
push
mov
sbb
cmp
or
sbb
and
ret
ficompl
cmp
xor
insl
and
or
roll
test
repnz
subl
sub
sub
inc
test
fdivrp
pop
xor
mov
push
popa
pop
mov
cltd
aam
adc
or
aaa
jb
push
sahf
lret
sahf
je
movsb
adc
loope
sub
or
arpl
cld
and
sbb
ljmp
gs
fldl
ss
xlat
adc
mov
dec
cmp
push
ficomps
rcrl
fdivl
shr
mov
jge
pop
and
or
leave
cmpsl
sahf
lcall
iret
jp
inc
fisubrl
out
sub
ret
push
stc
or
ljmp
xchg
daa
jge
ficompl
xchg
pop
jb
shlb
in
mov
sti
lock
dec
dec
pop
out
add
fnstsw
movsl
loop
stc
test
sti
rolb
fmuls
fimuls
mov
lods
sarb
jge
das
fildll
data16
jl
push
cmc
hlt
adc
pop
xchg
adc
sub
lahf
cmpsl
xor
andl
js
or
mov
or
int
jne
mov
or
inc
push
cs
pop
fwait
icebp
fs
mov
cld
out
pop
loope
scas
mov
pushf
or
scas
fsts
xchg
push
sub
fwait
inc
pop
movsl
lods
aad
xor
stos
shll
mov
mov
mov
fs
jmp
lret
mov
das
xchg
push
xchg
pop
ja
popf
inc
out
cmpsl
dec
adc
push
and
out
sahf
mov
lahf
push
sahf
repz
mov
fdivrs
popf
fbstp
fnstcw
popf
push
adc
lcall
lahf
test
out
stc
lcall
mov
loopne
mov
scas
xchg
std
mov
test
and
aam
test
movsb
dec
xchg
jle
push
jle
cmpsl
stos
inc
cmp
aad
mov
add
jecxz
cwtl
aas
jo
sub
pop
adc
xchg
outsb
je
sub
mov
pop
aas
sub
or
pushf
xor
jecxz
pop
mov
push
xorl
mov
lock
push
dec
ja
popf
movsb
ja
gs
jo
rclb
pusha
lret
into
mov
add
out
and
dec
cs
xchg
dec
mov
pop
and
sahf
add
imul
pop
std
pop
inc
imul
iret
in
orb
dec
jge
aam
inc
xor
xchg
xor
push
jo
mov
and
gs
push
cmp
incb
xchg
mov
mov
adcl
leave
les
fisttpll
enter
or
and
xchg
add
sub
push
loopne
into
pop
add
lcall
ret
adc
add
cwtl
mov
mov
xchg
cld
xor
lret
inc
out
mov
ss
outsl
arpl
cmp
mov
cmp
or
adc
sub
sti
jmp
pushf
mov
hlt
jns
jg
scas
outsl
jecxz
addr16
data16
mov
insl
push
lcall
js
jae
dec
fdivl
ja
mov
inc
popf
sub
mov
aad
and
inc
pop
out
mov
dec
and
or
pusha
add
adc
pushf
cmp
fcoms
cli
mov
mov
push
mov
sbb
and
or
pop
in
cmpsl
mov
or
cltd
repnz
rcrl
jecxz
es
xchg
int
push
fidivrl
std
push
ret
subb
jo
and
add
ret
shl
shlb
pop
ja
out
and
imul
dec
inc
add
mov
test
push
push
neg
aas
test
or
test
jmp
push
int3
fcoml
out
mov
mov
jb
jnp
or
scas
mov
movsb
ret
sbb
cs
clc
xchg
daa
insb
jmp
push
sbb
xchg
fs
gs
push
out
jb
repnz
dec
lahf
fstpl
xor
imul
jp
pusha
adc
add
mov
push
test
or
and
sub
xor
and
or
sub
add
cld
inc
mov
inc
cmpsl
in
outsl
slwpcb
xchg
pop
cmp
in
mov
je
pushf
decl
ret
test
jle
sbb
in
imul
icebp
out
addb
ds
pop
push
ror
push
std
xchg
mov
je
sbb
lods
mov
ficompl
mov
pushf
add
fistps
insl
mov
push
mov
int
outsb
repnz
xchg
int
das
daa
pop
xor
outsl
adc
aad
jp
test
int
loope
ss
mov
sbb
pop
pop
jb
mov
mov
punpcklbw
test
loopne
sbb
int
nop
add
mov
enter
out
lret
push
gs
out
xor
lods
mov
stos
xchg
cmp
repz
aas
xchg
sub
std
pop
ficomps
sbb
adc
xchg
xor
xchg
mov
mov
stos
inc
adcl
add
xchg
out
xor
lock
jge
arpl
jo
iret
mov
sub
fwait
imul
mov
inc
mov
popf
push
jg
add
mov
jo
scas
imull
outsl
loope
popf
pop
lahf
jl
dec
inc
push
ja
sahf
jl
jp
pop
scas
imul
jg
mov
push
enter
shlb
sub
js
std
sub
mov
mov
jmp
dec
shl
mov
inc
test
lods
xor
inc
lock
or
mov
fisubrl
jge
aam
adc
xchg
jl
inc
and
adc
xchg
sub
mov
mov
push
adc
aam
sub
in
add
sub
sti
fistl
jmp
outsl
xchg
pop
push
xlat
inc
fdivl
xchg
mov
fildll
enter
push
in
mov
xchg
lret
pop
jbe
loope
cltd
mov
sarb
push
cmp
mov
inc
lock
ret
pop
mov
add
and
in
aaa
loop
inc
inc
aas
fwait
mov
lret
jg
cmc
sti
mov
cwtl
or
aam
and
out
push
imul
imul
pop
and
xor
push
repnz
rcl
mov
and
mov
icebp
sub
int3
sbb
sub
inc
mov
fwait
mov
and
cs
jl
mov
aam
and
mov
push
in
fcmovnu
int3
lock
add
inc
push
xchg
or
out
outsl
int3
mov
dec
ret
aas
cli
add
lods
jne
or
mov
loope
cwtl
stos
adc
out
insb
push
add
mov
inc
inc
sbb
sti
push
sti
hlt
ljmp
pop
pop
mov
push
loopne
add
notb
pop
push
adc
orb
popf
aad
popf
inc
iret
sub
xchg
xchg
xchg
call
negl
push
pop
dec
inc
repnz
dec
mov
push
dec
cmp
leave
insl
adc
fs
dec
loop
js
fisubrl
fmuls
rcrl
cmp
or
out
sbb
mov
adc
clc
leave
sbb
add
out
jl
add
std
pushf
rorl
sbb
jmp
push
xchg
loope
and
jg
fldt
mov
int3
jge
push
push
pop
dec
aad
lds
test
cmpsl
add
test
and
sbb
fimull
push
clc
pop
lahf
push
cmp
insb
mov
adc
ret
pop
fistpll
cmpsb
lds
mov
jb
fwait
in
sub
icebp
xchg
mov
push
out
scas
out
xor
imul
fiaddl
cmp
xor
xor
enter
pushf
dec
stc
xorl
mov
mov
xor
sub
ret
subl
hlt
fists
stc
int3
pop
and
or
or
addl
leave
popa
xor
jecxz
cmp
cmp
push
sub
xchg
jmp
jb
loopne
fistpll
cmp
in
xorl
xchg
mov
push
rcrb
or
xor
mov
xor
loope
fnstcw
add
mov
stos
xchg
insb
pop
push
add
pop
inc
roll
inc
xor
mov
fidivl
sbb
mov
add
stos
push
dec
dec
inc
ret
addl
repnz
push
aas
loopne
cwtl
push
sbb
mov
stc
rorb
xchg
mov
inc
ret
mov
or
movsl
sbb
jl
fsubs
loopne
mov
andb
pop
shlb
adc
insl
mov
adc
mov
sti
movsb
dec
mov
sub
dec
jmp
or
jmp
jnp
push
iret
jecxz
or
shll
fcom
jnp
cmp
loop
xlat
shlb
push
and
xor
jno
fstpl
inc
push
std
jecxz
mov
cmp
xlat
add
mov
pop
aad
ret
xor
inc
jno
nop
jns
daa
shrb
push
mov
leave
outsb
fstpt
pusha
stos
lea
notl
int
pop
push
mov
loopne
scas
clc
ss
sbb
sub
push
lahf
icebp
mov
test
xchg
divb
sub
stc
push
into
scas
imul
hlt
sbb
xor
loope
popf
push
in
arpl
cs
nop
jge
clc
adc
and
sbb
scas
adc
dec
shll
lods
icebp
lcall
or
pop
add
jne
iret
push
cmpsl
jo
xor
fistpl
jbe
xor
pop
jo
jns
pop
mov
sub
loope
push
sbb
inc
les
not
lds
jnp
aas
jle
mov
push
lock
lods
add
xchg
xchg
xor
xchg
das
cli
cmp
jmp
mov
dec
outsl
js
test
js
mov
lcall
addr16
pop
movq
insl
lcall
xchg
inc
mov
cltd
xchg
mov
lret
inc
jne
mov
stc
stos
jl
out
cmpb
jns
ljmp
mov
rcll
xchg
xchg
call
cmp
xchg
pminsw
sub
jle
les
jne,pn
inc
subb
mov
ja
push
je
pusha
add
into
and
pop
ficoml
movsb
add
xchg
movsl
ret
bound
pop
test
adc
nop
cmc
or
mov
ret
test
or
iret
mov
cmpsl
ficoms
xor
cmp
cmp
mov
sub
rolb
mov
pop
xchg
jmp
push
shrl
mov
lock
mov
iret
pop
aas
decb
and
test
jl
mov
jmp
push
cmp
sahf
mov
sbb
add
test
rcll
popa
scas
dec
xlat
adc
lcall
jae
cs
stos
dec
stos
add
nop
ret
push
loop
dec
ss
stos
mov
xchg
das
cwtl
cmc
add
cmc
push
in
lret
inc
push
lds
push
sub
adcl
outsb
rol
clc
xchg
xchg
loop
mov
pop
mov
mov
mov
pop
movsb
inc
mov
and
fs
enter
in
pop
jg
sub
sub
push
adcl
and
in
xor
mov
lret
mov
xchg
inc
push
cmc
mov
dec
ljmp
mov
cmc
scas
fidivs
add
cmp
movsb
dec
popf
dec
mov
pusha
subl
fisubs
pop
xor
or
push
mov
and
adc
pop
sahf
daa
stos
fidivl
mov
hlt
push
imull
jmp
fwait
add
push
gs
jle
sbb
daa
push
je
lret
and
mov
fisttpl
into
divl
mov
mov
icebp
data16
out
xlat
push
test
add
jbe
mov
jne
stc
jecxz
out
push
loopne
or
adc
int
push
push
add
out
jmp
aas
out
jne
in
stos
js
popf
fildll
inc
and
push
nop
dec
mov
loop
pop
adcb
jo
mov
test
push
inc
cmp
out
jg
pop
mov
mov
popa
mov
sub
pop
mov
aad
sti
and
inc
clc
jnp
xchg
jecxz
mov
jge
or
sti
inc
sub
incb
and
dec
add
or
fsubrs
lock
cmp
fld
mov
ljmp
ljmp
subl
iret
add
sub
rol
pop
js
add
mov
fidivrl
mov
mov
je
pop
xor
jge
data16
in
xor
mov
xchg
pop
ds
sub
jge
movsl
lock
fdivs
xchg
push
inc
in
rolb
cmc
lods
cmp
repnz
divb
outsb
aas
mov
loope
xchg
xchg
mov
nopl
adc
mov
push
ret
repz
into
out
mov
aas
test
sub
stos
push
jp
mov
inc
mov
mov
dec
mov
sbb
cmp
xchg
xchg
mov
in
and
pusha
mov
repz
filds
pop
jno
loopne
iret
ja
jp
push
leave
repnz
ljmp
mov
mov
pop
or
mov
scas
add
mov
mull
mov
sahf
rolb
push
adcl
shlb
xchg
mov
sub
cmpsb
inc
push
pop
rolb
pop
mov
cmp
sbb
jns
repnz
push
sub
hlt
push
push
fstpl
out
inc
mov
in
sub
push
lret
inc
push
cmpl
data16
lret
out
xor
jmp
in
in
push
divl
pop
pop
add
cld
pop
dec
pushf
jbe
fiaddl
fiadds
jl
ret
pusha
ja
sbbl
or
xor
mov
push
nop
loop
inc
jle
popf
pop
push
pop
pop
or
repz
xchg
roll
push
jp
and
je
push
movsb
mov
ret
mov
js
or
jns
aad
xchg
inc
jne
lea
push
sub
shr
lahf
out
jp
mov
push
repnz
cmc
movsl
stos
mov
decl
pop
aam
cmpsl
mov
sub
xor
cmpsl
and
inc
sbb
cmp
mov
or
mov
xlat
test
push
and
addr16
andb
mov
xchg
add
dec
mov
sbb
aas
lcall
add
repnz
push
inc
shl
jecxz
lret
or
xor
add
pop
es
push
sbb
test
imul
scas
jl
bound
notb
aaa
mov
dec
pop
sbbb
lea
xchg
push
into
jno
adc
inc
iret
jmp
jb
imull
js
frstor
xchg
rcrb
adc
iret
jg
andb
adc
aaa
pop
pop
jb
mov
addr16
push
or
mov
sbb
jg
jb
sub
or
divl
mov
dec
aaa
jg
cmp
push
cs
fldt
xor
je
push
sub
jle
xor
popf
inc
sbb
pop
test
cltd
mov
into
in
insw
push
lods
dec
mov
and
ja
adc
divb
push
fwait
xor
mov
cmp
enter
cmp
xchg
in
jns
pop
in
aaa
aam
insb
cmpsb
lods
mov
fnsave
pop
into
js
mov
ret
mov
int3
sbb
push
fcoms
data16
rcl
lcall
lcall
adc
ds
mov
xchg
aam
ss
lds
pop
cmp
sbb
fwait
cwtl
xchg
pop
mov
lods
and
mov
xchg
dec
in
arpl
xor
sbb
pop
and
imul
inc
xchg
push
adc
xor
ss
fnsave
pop
push
cltd
pop
sbb
insb
cli
xor
push
pop
fucomip
jl
enter
outsb
lcall
add
dec
stos
test
xchg
sbb
mov
dec
xchg
bound
jb
dec
add
pushf
mov
inc
ja
in
adc
hlt
mov
daa
out
mov
in
push
pop
jmp
jp
adc
add
mov
jle
xor
mov
mov
cmp
xor
repnz
iret
jne
mov
sbb
fnstcw
inc
lock
ds
sbb
insl
adc
lods
fdivrl
test
pop
inc
outsb
inc
cmp
loop
stos
mov
mov
mov
push
fnstcw
mov
fistpl
jne
cmpsb
arpl
inc
dec
ficoml
and
cmpsl
push
test
outsl
lret
pop
lret
jmp
lods
xchg
test
mov
mov
bound
pop
bnd
notb
add
cmp
lahf
pop
xchg
pop
aad
ret
jno
xor
mov
out
adc
es
fisttpl
add
pop
adc
push
inc
mov
sub
and
mov
and
sub
xor
aad
leave
aad
adc
jl
daa
xor
or
lret
jb
enter
lret
mov
stos
in
dec
add
xlat
adc
add
test
imul
out
jg
jmp
andb
mov
xchg
xchg
jg
in
sbb
aam
jp
aam
loop
push
fnsave
sysret
mov
arpl
lock
rol
call
test
arpl
call
fsubrl
imul
mov
sbbl
xchg
clc
mov
scas
loopne
je
rorl
mov
stc
fucomp
jo
test
test
rcrl
cmp
adc
dec
daa
and
xchg
addr16
jae
stos
mov
and
mov
imul
push
cmp
xorb
sbb
sub
std
cmp
das
xchg
rorb
mov
lea
and
jne
in
push
int
pop
push
sbbb
jno
and
in
jg
cmpsb
repz
xchg
loope
stos
and
jae
ss
aaa
sahf
xchg
inc
popa
mov
and
cli
or
xchg
xchg
mov
push
add
leave
mov
jno
mov
pop
insl
data16
pop
sbb
pop
and
adc
orb
arpl
and
shrb
jmp
and
add
push
pop
shlb
push
sbb
xchg
arpl
mov
jecxz
jmp
inc
out
imul
in
les
fstl
in
xchg
dec
xor
divb
rclb
mov
cmp
push
sbb
sub
fidivs
xchg
mov
xor
xor
xchg
subb
filds
test
ret
pop
fwait
sub
cmpsl
gs
loop
out
test
mov
dec
mov
cwtl
out
stos
pop
xor
test
loopne
dec
mov
mov
orl
popf
shll
jg
loope
mov
daa
aaa
xchg
jb
ret
loopne
rcr
mov
aad
pop
sub
inc
pop
or
clc
ficoml
setl
fsubrl
sarl
shrl
sbb
adc
pushf
xor
jmp
rcrl
fimull
fimull
mov
aaa
mov
sub
lcall
mov
popf
stos
or
xor
xchg
push
iret
add
add
sub
andl
dec
cmpsb
push
clc
nop
lahf
adc
negb
nop
int
inc
js
shlb
lea
sub
lods
lds
mov
dec
roll
mov
ss
in
cmpsl
out
add
dec
xchg
and
fs
add
mov
cmp
fidivrs
mov
ljmp
outsl
sahf
xchg
mov
and
add
decl
push
inc
loopne
add
jne
mov
adc
imul
push
mov
or
subb
cmp
lret
push
and
mov
pop
jo
sub
mov
das
gs
dec
mov
sbb
add
ss
push
or
mov
ss
mov
pop
jl
sub
push
add
adc
sub
inc
cmp
cltd
push
mov
jecxz
iret
jecxz
add
sarl
or
jbe
sbb
push
mov
pop
jmp
filds
jecxz
push
negl
xchg
xchg
or
pop
scas
pop
push
out
mov
jne
adc
jmp
pop
ss
negb
and
shr
dec
pop
inc
xchg
xchg
xchg
call
add
rorb
jne
push
lock
mov
arpl
imul
repnz
repz
mov
lods
push
fneni(8087
data16
aad
mov
cmp
ds
dec
loop
dec
pop
xchg
out
cmpsb
cwtl
pop
inc
jno
or
movsl
loopne
cld
loop
jle
mov
lock
mov
and
sbbb
jmp
xorb
in
pusha
cmp
jb
repnz
int3
or
cmp
push
adc
cli
add
xchg
loopne
jg
cmpxchg8b
mov
fcmovnb
aaa
sub
and
cli
jmp
xchg
scas
pop
xor
es
scas
pop
or
scas
adc
and
addb
lock
xchg
std
cmpsl
sub
jle
inc
je
movsl
xchg
ss
mov
dec
insl
lods
adc
sub
mov
mov
mov
loope
push
sbb
add
add
ficoms
sbb
and
int3
xor
stc
mov
inc
mov
push
test
inc
insb
push
xor
inc
rcrl
pop
add
and
iret
jbe
mov
inc
gs
lahf
fists
pop
pop
aam
xchg
and
push
aam
lds
jbe
pop
lea
mov
mov
mov
sbb
add
jnp
mov
clc
in
dec
arpl
ss
pusha
fwait
xchg
or
and
rcll
mov
divb
pop
sub
out
test
aas
popa
jb
pushf
rcr
push
dec
sub
cmp
mov
xchg
cli
in
mov
or
imul
and
and
or
xor
icebp
arpl
and
in
cwtl
addr16
mov
popf
and
cltd
test
sbb
or
mov
hlt
add
push
daa
sbb
push
jmp
xchg
mov
jb
repnz
int3
lret
sub
mov
xchg
jg
jb
lret
in
sti
jno
cld
rclb
cmp
jb
lret
sbb
adc
xor
sahf
or
xchg
inc
fstl
sub
add
popa
add
mov
mov
pop
dec
mov
pop
inc
scas
lahf
stc
das
pop
push
cld
and
inc
in
sub
jl
mov
adc
mov
stos
aas
imul
sub
outsb
in
and
imul
out
xchg
stos
and
arpl
xor
ret
push
sti
mov
jbe
insl
mov
fistpll
stos
pop
enter
movzwl
pop
icebp
add
fwait
add
xchg
jg
jo
lods
gs
mov
xchg
sbb
andb
into
mov
push
pop
lea
hlt
mov
ffree
xor
cwtl
movsl
cmpsl
call
push
or
and
mov
inc
scas
gs
and
xchg
mov
int
das
pop
push
fadds
mov
mov
xchg
and
lcall
insl
imull
sub
movsb
cld
add
je
cltd
test
xor
test
aam
ljmp
test
hlt
pop
mov
xchg
test
inc
daa
aam
mull
pop
leave
fidivrl
dec
mov
fldenv
push
in
push
fs
lods
out
push
dec
mov
js
mov
xchg
dec
inc
jne
fwait
xor
repnz
xchg
jmp
dec
mov
cmp
jbe
out
ja
and
ss
popa
sub
loop
cmp
jo
push
mov
fistpll
addl
insl
mov
adc
push
push
imul
pushf
cli
fmul
push
jno
loop
fnstcw
mov
inc
popa
stos
cld
dec
cmpsb
pop
mov
push
cmpsb
data16
add
in
mov
cmpsl
add
jmp
pop
and
jo
mov
pop
adc
and
js
dec
mov
jp
mov
lret
loopew
xlat
push
xor
pop
lret
or
push
cmp
mov
jg
jbe
mov
and
sbb
mov
enter
cmp
jmp
cwtl
std
mov
xchg
mov
in
adc
adc
mov
pop
jl
sahf
adc
ds
dec
scas
mov
dec
mov
fcompl
or
fisttps
mov
mov
sub
sti
insl
push
xchg
sti
sbb
in
ret
sub
xchg
sahf
shlb
or
cmc
add
mov
mov
and
les
out
and
sub
add
shlb
pop
lods
in
ds
sbb
cmp
sub
push
ret
jecxz
jne
and
repz
xchg
imul
sbb
lcall
fdivl
je
xchg
push
das
dec
mov
jecxz
mov
or
mov
paddsb
lcall
jne
jns
lret
add
stc
sti
ljmp
into
test
fcmovbe
mov
in
xchg
mov
rclb
cli
jl
mov
mov
inc
outsl
xchg
mov
fidivrl
xchg
test
jle
aad
xor
repz
out
flds
jae
scas
adcl
jg
xchg
mov
mov
daa
pop
xlat
cld
sbb
xchg
dec
int
outsl
sbb
cmp
cmc
loope
cmc
jg
add
mov
mov
cmp
sbb
movsl
push
int3
jns
adc
add
xor
inc
insl
outsl
loopne
jbe
mov
aam
je
mov
and
lcall
insb
xchg
sbb
cwtl
mov
sub
popf
jl
or
pop
sub
sub
nop
jae
cmp
dec
push
mov
pop
mov
into
out
int3
push
push
mov
cs
iret
jge
dec
loope
adcb
dec
loope
xor
xchg
js
xchg
push
stc
and
sahf
xor
in
shrb
xor
xor
adc
cmp
in
pop
inc
jne
negl
ss
sar
pop
add
sub
jno
scas
fisttpll
fwait
push
aad
adc
pop
add
sbb
jo
je
inc
jp
sbbb
popa
mov
adc
and
int
jge
mov
leave
call
or
mov
push
jle
mov
popf
dec
daa
inc
cmp
mov
das
in
rolb
jb
das
popl
jg
iret
cwtl
lods
sub
test
pushl
push
dec
sahf
xchg
jl
stos
cs
pop
inc
xor
leave
or
pop
mov
les
aam
call
movsb
mov
mov
lret
daa
jmp
dec
jmp
or
push
cld
loop
or
inc
jg
movsb
out
icebp
or
lahf
push
mov
cmp
inc
mov
adc
xor
push
sbb
or
push
or
sti
jge
cmp
loope
mov
adc
adc
sbb
sub
data16
mov
mov
jp
insb
mull
repnz
push
mov
inc
push
and
push
add
mov
mov
and
ret
xor
adc
mov
arpl
or
in
and
loop
xchg
mov
adc
cmovnp
mov
adc
lea
and
adc
mov
ret
sub
sub
outsl
pop
imul
sub
jl
mov
shl
adc
inc
fmul
sarl
jmp
mov
mov
jecxz
es
orl
mov
xchg
or
mov
loope
adc
sbb
mov
aad
push
icebp
adcl
stos
and
test
out
mov
jmp
mov
cmp
adc
loop
pushf
mov
push
and
jle
jne
data16
mov
adc
loopne
loopne
sbb
int
insb
aam
js
xor
dec
adc
inc
lock
in
icebp
shlb
sub
add
imul
and
popa
push
pop
int
fidivrs
cmp
xchg
push
sbb
mov
xchg
mov
cmc
dec
addr16
xchg
movsb
aad
sub
repnz
cmc
push
in
cmp
insb
dec
inc
sahf
mov
or
rorl
inc
or
pop
imul
jmp
adc
repnz
es
xchg
fmulp
loop
pop
ja
insl
popa
adc
sahf
cmp
inc
cwtl
lds
push
dec
fsub
call
add
es
mov
or
lahf
mov
pop
xor
fwait
dec
and
fstl
adc
cs
dec
sti
xchg
sti
pop
fimull
jg
lea
lods
push
mov
adc
dec
adc
test
or
fcoml
pop
jae
or
mov
enter
mov
inc
xchg
mov
sbbb
xchg
push
push
dec
fnstenv
sub
movsl
mov
fs
dec
inc
mov
arpl
add
ror
add
jl
push
in
fimull
jae
scas
fmuls
mov
rclb
push
insl
jno
int3
loopne
bound
movsl
mov
mov
xor
mov
lahf
pop
xor
out
out
cld
push
rcll
divl
popf
mov
pop
insb
push
cmp
sahf
jmp
mov
imul
xor
loop
jg
mull
test
xchg
enter
sub
call
ja
add
inc
mov
lret
jge
shll
xor
jnp
mov
lock
ret
cmpsl
sub
jbe
adcl
jecxz
mov
cmp
lods
xor
push
js
cltd
or
cmp
mov
cmpsl
inc
dec
icebp
stos
ljmp
leave
mov
cmp
je
in
mov
dec
ficoms
mov
mov
mov
jo
fldl
call
pop
mov
and
mov
mov
mov
imul
or
popa
push
outsl
push
or
mov
mov
jne
inc
and
xorl
not
test
fcompl
sti
xchg
xchg
icebp
das
orb
inc
add
and
arpl
std
lods
out
jp
arpl
pusha
test
lahf
cli
xor
adcb
adc
stos
mov
popf
lret
xlat
imul
inc
adc
mov
orl
mov
sahf
ja
leave
orb
loop
mov
pop
or
push
jecxz
push
sarb
int
jge
sbb
sahf
push
jmp
adc
and
push
mov
push
mov
movsb
jmp
rclb
scas
shr
inc
xor
leave
insb
add
cmp
mov
mov
mov
neg
sbb
ds
adc
dec
scas
inc
out
mov
daa
in
pop
jmp
in
out
pop
shll
lds
mov
mov
repnz
ja
jmp
and
pop
std
inc
addl
sbb
orb
aad
pop
and
dec
scas
jb
xchg
sub
fidivs
fdivl
inc
pop
dec
dec
mov
mov
fcoms
les
fidivl
mov
das
xchg
cwtl
sbb
gs
pop
pop
gs
mov
sbb
push
add
xchg
inc
dec
aam
xchg
inc
mull
jmp
add
pop
xchg
mov
jbe
sub
stos
icebp
adc
orb
aam
xchg
movsb
fmuls
sub
mov
and
stc
ljmp
or
fsubs
jl
shl
push
push
jno
jae
dec
xchg
cmp
mov
cmp
push
test
cmpxchg
dec
stos
in
repnz
xor
xor
xor
or
jne
jns
or
jnp
popf
sahf
fstpl
mov
xor
clc
stc
aas
in
cmp
mov
fdivr
cltd
dec
out
jle
cld
cmp
loope
std
mov
adc
pop
push
je
or
cmpsl
inc
into
loopne
pop
lds
jmp
iret
lret
dec
ljmp
or
mov
lahf
sbb
movsb
fisttps
and
mov
mov
xorl
outsb
stos
xor
or
outsb
jne
negl
pushf
xor
stos
cwtl
adc
pop
repz
mov
jo
xchg
dec
loop
out
pop
mov
jo
out
in
xchg
subb
mov
sub
cmpsb
xor
xor
sti
and
fstl
fcoms
cmp
xor
xor
jg
sub
sbb
cltd
xor
scas
stos
add
jg
clc
js
mov
jp
movhlps
xor
das
imul
inc
out
das
mov
pop
or
bound
leave
push
or
jle
aas
sbb
push
or
in
sbb
push
inc
pop
fdivs
mov
add
negl
je
xchg
fisttpl
push
xlat
mov
push
subl
ss
loop
es
mov
mov
xchg
cmp
dec
dec
sti
stos
pop
push
sbb
xor
adc
jle
lock
mov
int3
cmpsb
push
out
push
pop
mov
push
sbb
xchg
sbb
xor
mov
add
push
and
fmulp
dec
dec
jb
jae
or
jecxz
sahf
xchg
fdiv
jle
pushf
fs
sub
paddusw
mov
in
mov
dec
push
pop
leave
jecxz
add
dec
jb
dec
fcompl
adc
mov
aad
js
gs
sti
push
fdivrl
mov
ja
add
scas
mov
fnsave
daa
movb
push
mov
push
inc
scas
dec
xchg
add
pop
sbb
out
inc
sub
add
pop
push
cld
sbb
adc
cli
daa
jp
and
je
and
mov
mov
rcll
cmp
cmp
add
mov
inc
push
or
fcoml
addr16
pop
das
push
pop
in
pop
cltd
rorl
andl
sbb
mov
adc
add
mov
arpl
mov
nop
ja
in
push
stos
daa
incb
faddl
pop
add
add
in
orb
push
xor
xchg
or
sbb
mov
push
or
ror
stc
scas
xchg
inc
int
dec
inc
cmp
jo
cmpl
js
mov
jne
mov
sub
movsb
add
in
dec
loopne
xor
bound
sub
jno
outsb
xchg
rorl
jae
rorl
lock
mov
scas
test
hlt
into
mov
fs
fwait
pop
add
or
leave
fldt
clc
push
pop
xchg
pushl
scas
fdivrl
lods
pop
sub
mov
mov
cmp
lret
int3
mov
mov
mov
jle
jle
ja
pop
pushl
sbb
pusha
subl
jmp
adc
pushf
mov
or
push
jb
push
outsl
xchg
dec
rcrl
sub
aaa
xchg
jb
push
jmp
mov
mov
dec
dec
gs
out
add
movsl
and
sbb
and
cwtl
push
cmc
stos
stos
out
fisttpl
icebp
sub
out
sbb
xor
cmp
mov
lock
xchg
mov
gs
pushf
lods
mov
cmpsb
aas
clc
stos
push
inc
cli
fildl
aam
fbld
adc
xor
pop
mov
mov
jne
add
cmpsb
hlt
sub
jecxz
mov
jl
push
add
sbb
pop
xor
pop
adc
shrb
and
lock
pop
aas
test
and
jmp
or
pop
adc
push
push
dec
imul
ret
jne
push
mov
lods
and
movl
loope
dec
jecxz
pop
mov
add
mov
repz
aam
lcall
sbb
pop
cld
pop
dec
mov
pop
shrb
sbb
inc
jno
andl
lret
enter
int
or
jns
jb
cld
popf
push
aam
out
lcall
popf
jns
rcr
test
nop
add
aam
push
xchg
pop
inc
fcomi
pop
sbb
or
mov
into
ja
out
mov
xchg
inc
dec
mov
fsubrl
inc
in
jns
dec
dec
lcall
popf
je
out
nop
ljmp
mov
sarl
xor
in
adc
xorl
in
xorl
cmp
mov
jmp
loope
push
push
mov
sbb
cli
insl
addl
mov
loopne
lahf
push
and
mov
push
addr16
fsub
add
ss
mov
loopne
sub
mov
lea
mov
and
mov
xorb
imulb
std
xor
cmpsb
jbe
das
adc
pop
cmpb
movsb
outsb
lock
in
ja
je
loope
loope
aas
clc
mov
jmp
dec
pop
rcl
pop
lock
adc
repz
push
roll
or
add
sti
push
sbb
leave
or
pop
inc
gs
rclb
inc
cltd
movsb
repz
lahf
arpl
mov
fistl
add
mov
pop
add
in
fldenv
out
mov
popa
and
pop
jg
sub
stc
imul
push
orb
pop
fwait
and
mov
int
jg
fnstenv
cli
pop
aaa
in
sbb
ret
sbb
dec
mov
cld
out
jmp
ljmp
add
rorb
xchg
adc
js
out
ret
push
incl
add
rcrl
push
adc
stos
shrb
pop
out
or
in
add
jno
lods
cmp
mov
ljmp
in
xor
sbb
or
andb
popa
lret
mull
in
sub
imul
cmp
cwtl
in
rcll
xor
add
imul
mov
mov
add
lods
int3
and
jne
aad
push
gs
push
icebp
adc
push
cmp
daa
fwait
sbbb
aad
pop
mov
dec
je
mov
je
cmpsl
cmp
sub
stos
lret
push
fs
mov
push
push
cltd
cmp
sbb
add
pop
sub
cmp
sbb
push
mov
cmpsl
pop
bound
in
enter
jecxz
mov
fs
push
pop
push
cwtl
pop
rcll
mov
imul
add
lods
or
jnp
sub
es
cmp
jo
push
cmp
cld
add
xor
mov
in
inc
in
inc
in
xlat
fs
xor
pop
mov
sbb
mov
jg
hlt
das
mov
mov
mov
adc
test
int
ret
dec
mov
call
push
leave
lods
mov
mov
leave
dec
shl
cmp
sub
jp
es
add
sub
mov
sahf
jne
ss
jmp
dec
sbb
push
mov
imul
imul
mov
out
sub
call
cs
ret
mov
sub
arpl
mov
test
repnz
push
stos
lock
pop
scas
repz
lahf
cmp
fildll
jns
fstl
into
into
es
insb
sahf
push
je
mov
test
jo
xchg
sti
mov
cmp
clc
into
mov
lods
daa
fwait
add
sbb
xchg
cmp
in
mov
push
push
cld
mov
jmp
mov
xchg
pop
fsubrs
jge
fwait
inc
push
or
pop
mov
outsb
jb
out
fsubrl
mov
mov
jbe
mov
mov
roll
jmp
mov
inc
and
sbb
stos
or
xor
xor
lods
and
outsl
sub
push
xor
rolb
sahf
ss
pop
pop
mov
xchg
pop
mov
scas
jecxz
cmp
sub
mov
cs
adc
frstor
sub
scas
mov
sub
leave
sub
fwait
loope
das
out
jbe
jg
cmp
sub
pushf
call
test
rcrb
cmpl
add
push
pop
out
out
mov
mov
test
movsb
jle
pop
add
and
sub
ret
loope
cmp
sub
std
test
mov
sub
rcl
popl
xor
iret
jae
int
imul
fnsave
testb
pop
outsb
mov
data16
jle
fwait
popf
std
in
mov
dec
and
pusha
sbb
das
aas
sub
jle
jb
xor
inc
mov
pop
dec
sbb
out
xor
or
jno
mov
adc
int
test
sarl
pop
mov
xor
mov
xor
movsl
push
push
sahf
fdivr
pop
inc
inc
in
popf
xchg
cmc
jecxz
jg
mull
inc
mov
add
xor
ja
outsl
insb
and
gs
mov
adc
repnz
scas
mov
mov
mov
inc
pop
pusha
mov
rcll
xchg
stc
push
mov
cld
ja
mov
jne
loop
fidivrl
xor
popl
fwait
push
imul
in
sub
push
xchg
inc
test
cmp
jmp
adc
repnz
lret
pushf
loopne
xor
arpl
cs
insl
cld
pop
add
cs
mov
fildl
aas
jecxz
out
ja
add
sub
inc
sbb
inc
jmp
imul
ret
sahf
xor
dec
into
loop
or
out
cmc
rorb
and
inc
sbb
push
jp,pt
cmp
es
sbb
out
and
fbstp
movsl
mov
out
in
test
out
subb
test
subl
adc
out
ds
xchg
subb
mov
or
dec
dec
push
xchg
clc
xchg
push
xchg
jmp
stos
add
jge
aam
lods
cmc
icebp
jo
sbb
pop
cmpsb
popa
fwait
adc
jg
call
dec
mov
jge
push
adc
mov
mov
arpl
mov
mov
adc
stos
cmp
lret
adc
or
and
inc
cmp
mov
jp
jae
add
jne
push
out
bound
or
nop
pop
adc
sbb
call
ja
pop
pop
ret
les
inc
inc
je
loop
rol
jnp
and
ds
lds
inc
cmp
dec
sub
add
enter
das
insl
enter
gs
dec
xor
or
mov
sub
lods
stc
orb
fnstsw
mov
mov
stos
inc
fimull
sbb
imul
adc
fldt
fwait
ss
insl
mov
xchg
sbb
lock
jns
lret
mov
aaa
rorb
mov
cs
out
sub
inc
push
outsb
lods
sbb
xchg
test
cltd
movsb
pop
mov
mov
idiv
lcall
jnp
xchg
enter
scas
xchg
fyl2x
pop
push
out
and
cmc
dec
mov
imul
not
ds
ret
pop
imul
cmc
cwtl
jo
dec
lret
loopne
js
icebp
movsl
jb
adc
das
sbb
sub
sbb
lcall
sub
inc
mov
or
and
test
mov
dec
and
stc
push
xchg
les
and
mov
clc
push
inc
js
ja
in
inc
shrl
pop
shlb
sub
loop
decb
push
addr16
in
push
pop
cmpsb
cmp
fnstenv
lret
push
and
imul
inc
ljmp
adc
push
daa
pusha
bndldx
sub
pop
outsb
fnsave
xchg
insl
test
divb
into
push
std
stos
iret
pop
mov
sub
cmpsb
or
sbb
std
pushf
ljmp
mov
inc
mov
xlat
push
pop
ja
lcall
sub
and
mov
lea
jbe
addr16
das
les
xchg
rclb
mov
iret
or
push
ja
call
xor
pop
push
js
pop
or
cld
lret
into
adc
adc
sbb
push
jl
push
pushl
pop
mov
jecxz
in
je
call
lret
lock
lods
stos
inc
lock
adc
out
mov
prefetch
loop
popf
sbb
dec
adc
repnz
lea
mov
rolb
add
add
das
sti
mov
adc
sbb
jnp
pop
orb
inc
insb
int
daa
gs
cmpsb
pop
ljmp
mov
cmpsl
mov
lahf
je
jb
sbb
popa
mov
lods
sub
lds
imul
gs
mov
pushf
mov
clc
adc
ja
dec
mov
sbb
jne
pop
xlat
and
xchg
lahf
addb
dec
sarl
adc
arpl
das
lret
add
sarl
fwait
into
jg
in
dec
xchg
mov
ret
mov
mov
dec
gs
adc
fmul
xchg
nop
add
mov
mov
jbe
pop
push
sahf
bound
pop
fiadds
fcmovne
lret
das
mov
jns
cld
sub
in
xchg
int
aad
pop
or
call
ja
shll
leave
movsb
in
sbb
inc
adc
lahf
aas
mov
push
lds
sahf
xor
dec
or
test
in
iret
inc
push
icebp
and
adc
mov
lea
addr16
cld
and
or
in
sub
add
popa
fcomps
sbb
dec
xchg
xchg
out
xor
divps
insl
cwtl
ret
jl
cmp
shrl
xchg
jb
ficoms
adc
fs
bound
adc
in
push
xchg
dec
push
popa
and
mov
mov
adc
mov
pop
sbb
enter
cmpsb
pop
aam
and
cwtl
inc
stos
gs
lcall
add
xchg
or
sbb
sbb
add
mov
gs
ret
push
mov
or
xchg
call
pop
popa
jge
test
xchg
sbb
and
sar
xor
nop
xor
mov
rclb
fwait
pop
xchg
push
lahf
lods
mov
mov
push
sbb
sub
cmc
cmp
mov
or
lcall
dec
or
sahf
insl
test
push
lcall
jo
movsl
fistl
loopne
jne
mov
testb
popf
aam
pop
frstor
cli
movsl
adc
dec
in
pop
movsb
aas
mov
or
pop
adc
or
movsb
adc
scas
or
out
lods
cmp
and
fwait
inc
sub
call
ficoms
xchg
bound
cmpsb
insb
test
rclb
xor
push
lahf
or
shlb
repz
mov
mov
mov
lret
cmp
fnstenv
aas
xor
inc
jbe
xchg
jbe
push
cld
loop
pop
ret
sahf
imul
das
lret
cmpsl
sub
in
add
fldl
pushl
sub
repnz
subl
mov
addr16
xor
repz
cmpb
dec
stos
jmp
inc
xchg
ficoml
push
sub
aas
add
jnp
inc
sub
add
cmp
jnp
iret
and
repnz
in
lods
rol
loope
mov
mov
notl
lahf
les
push
xchg
in
loop
mov
notl
ss
ret
jle
shll
jb
sbb
mov
lods
or
mov
shlb
add
mov
in
rcrb
xorb
or
std
or
int
mov
fs
sub
pop
outsb
cmp
std
cltd
fmuls
pop
das
add
cld
or
jno
sbb
mov
es
add
mov
xor
daa
lds
or
movsl
les
dec
mov
scas
gs
inc
sarb
adc
imul
lret
jne
outsb
shl
cmpsb
pop
jne
cmc
cmp
data16
add
dec
mov
out
ret
add
pusha
pop
mov
cmp
out
push
les
inc
iret
sti
jb
ds
data16
fidivrl
adc
sti
stos
push
lds
mov
xor
jle
jb
and
jbe
lds
cld
pop
lret
ror
daa
cltd
xorb
xor
mov
sub
xlat
mov
mov
pop
out
daa
and
mov
xor
push
add
stc
xchg
dec
test
inc
popf
out
pop
daa
jecxz
pop
rorl
fs
push
aam
je
ljmp
push
scas
subl
ret
inc
and
scas
fs
inc
add
jp
xor
aas
mov
xchg
sub
sub
into
cmp
mov
rclb
pop
dec
xor
push
nop
jns
push
add
mov
mov
test
in
pop
test
fwait
jle
sub
lret
int3
lods
xchg
lea
push
lods
dec
iret
add
or
cld
cltd
in
dec
lods
mov
loope
sbb
jbe
scas
int3
shll
fisubrl
jnp
stc
cmpsl
sub
mov
inc
dec
dec
data16
push
stc
jns
sub
push
fldenv
daa
mov
ss
pop
cld
shrb
cmp
jmp
push
xchg
sub
mov
aad
mov
jo
jecxz
cmp
jmp
and
mov
or
aaa
sbb
cmp
sbb
pop
adcl
cmp
push
test
xor
fs
jmp
sub
xchg
jns
fists
sub
fisubl
sub
jb
push
insb
in
adc
jnp
pop
jl
popf
lahf
outsb
gs
test
mov
jns
lds
js
mov
jb
ss
push
shr
fcomi
negb
xor
jne
xchg
inc
in
push
cli
dec
shl
outsb
dec
push
out
add
in
pop
sub
pop
mov
clc
sbb
inc
cwtl
mov
push
inc
inc
in
push
push
and
test
popf
dec
hlt
jae
inc
cmp
out
scas
aad
lods
xchg
mov
push
gs
leave
inc
call
out
lods
lcall
add
adc
inc
mov
lret
sarl
add
jmp
sbb
push
jae
cmpsl
in
data16
dec
xor
aam
or
cmpsl
mov
or
inc
ds
int3
lcall
sti
mov
mov
out
push
xor
inc
dec
divl
ja
in
sub
cmp
push
mov
lods
jo
std
add
xor
pop
pop
pushf
mov
leave
inc
pop
sarl
mov
add
pop
cmp
push
nop
mov
ljmp
sbb
test
aaa
stos
jle
mov
sub
icebp
mov
ss
std
loopne
into
std
sub
mov
cld
mov
unpckhps
imul
sub
add
cmpb
cli
movsb
or
lret
push
cmc
into
xorl
push
adcb
inc
or
push
lock
dec
mov
imul
sbb
jmp
cmp
xor
mov
jecxz
mov
enter
into
pop
mov
mov
xor
push
xchg
sbb
test
cmp
lods
lods
xchg
sub
hlt
dec
adc
cmpsb
jno
idivb
push
test
xchg
mov
imul
mov
mov
cmp
out
loop
fs
mov
std
sbb
adc
and
jecxz
stos
sub
sar
jp
nop
cmp
mov
idivb
insl
fsubl
dec
xor
inc
mov
pushw
out
or
push
sbb
shl
sub
adcl
xchg
or
dec
jp
pop
push
jle
les
addr16
adc
fcmovu
cmc
mov
cltd
inc
add
lods
jnp
jne
sbb
out
imul
outsl
inc
movsl
roll
push
pop
test
push
lret
lods
leave
xlat
mov
js
cmpb
divb
cmp
mov
jne
into
mov
shl
test
fldt
outsl
outsb
test
pop
pop
jbe
or
test
rcr
ss
xrelease
cli
xor
jbe
out
add
xor
pop
punpckldq
inc
mov
frstor
cmp
roll
sub
subb
and
pop
pop
pusha
cmp
cwtl
xchg
adc
or
cmp
and
int3
jl
insl
and
cmp
cs
pop
pushw
mov
xchg
push
add
sbb
in
mov
and
dec
push
dec
dec
call
fistpl
dec
fldt
out
xor
pop
outsb
loopne
aaa
xchg
dec
pop
dec
lea
test
pusha
ret
jp
es
mov
mov
mov
push
cmp
mov
cmp
adc
and
repz
lock
arpl
mov
xchg
int3
pushf
andb
mov
adc
movsb
cmp
fiaddl
push
and
ret
xor
xchg
inc
and
idivl
mov
fnsave
xlat
test
lret
out
pop
jmp
mov
xchg
xchg
push
sar
and
push
bound
lods
xchg
mov
mov
test
lds
mov
xorl
and
xor
stos
in
adc
dec
cmp
popa
test
lds
loope
mov
mov
lahf
movsb
jge
iret
xchg
arpl
mov
pop
jecxz
xor
inc
loope
repnz
xor
pop
sub
call
mov
xchg
sbb
pop
mov
test
pop
cld
and
or
xor
inc
cli
movsl
movsl
repnz
loopne
movsb
lret
mov
inc
icebp
xchg
lahf
and
dec
xchg
inc
mov
fcoml
jb
arpl
aaa
popa
inc
xchg
movsl
rclb
xchg
repz
add
lods
mov
popa
xchg
and
es
mov
and
lds
fcmovbe
iret
insl
pop
sbb
cwtl
decb
pop
cwtl
or
mov
mov
ljmp
mov
add
outsl
lea
lahf
mov
jnp
ret
lods
sub
cmp
in
pop
scas
cmp
pop
pop
xchg
in
push
xchg
xchg
das
mov
stos
adc
lods
sub
or
imul
pop
xlat
bound
cli
cmp
ror
imul
or
into
popa
dec
sub
push
cs
jnp
mov
fcomps
call
aad
ror
mov
mov
jle
mov
fwait
popf
sub
and
out
ds
in
adc
push
and
flds
cmp
icebp
fs
jp
scas
adc
xor
jnp
and
add
aas
cmp
mov
mov
cmpl
mov
sbb
or
jmp
sub
shlb
xorb
inc
and
pop
sub
scas
out
adc
cwtl
jno
cmp
mov
adc
call
mov
jmp
sti
ds
bound
addr16
pop
rcr
pop
jl
aad
jle
inc
mov
and
push
sahf
sti
rcr
js
pop
dec
jnp
repz
xor
mov
ss
pop
call
push
jecxz
nop
push
cltd
insl
push
loopne
and
push
jecxz
jle
mov
add
dec
stc
xchg
in
iret
xchg
popa
jg
test
negb
xor
cmp
push
xchg
add
xor
or
cld
adc
jno
insl
cs
leave
inc
mov
fnstenv
mov
lods
pop
jmp
sbb
cmp
adc
out
and
fdivl
push
decl
dec
xchg
xchg
leave
gs
jae
dec
xlat
and
pushf
div
popa
outsl
not
sbb
scas
inc
jg
test
xor
sbb
mov
ficoms
fmuls
adc
adc
aaa
int
add
jg
popf
add
aaa
xor
jbe
ljmpw
js
or
xchg
shrb
add
mov
sbb
shl
xchg
rorb
dec
cmp
push
jne
mov
mov
daa
test
push
mov
inc
sub
or
and
ret
scas
cmp
lock
bound
inc
adc
cmpsb
xchg
cwtl
sahf
sbb
addb
mov
ljmp
mov
call
out
xor
push
lea
mov
mov
pop
inc
fs
loopne
shrl
mov
mov
repz
sbb
mov
std
mov
aam
lcall
sub
in
int
mov
mov
out
mov
movsb
sbb
stos
cmp
les
fnsave
aad
out
rorb
xchg
add
push
sarl
cmpsb
mull
sbb
out
fbld
push
inc
mov
cmc
add
jl
push
push
js
mov
xchg
jle
popf
or
pop
jb
daa
lret
push
mov
scas
int
in
jb
neg
mov
mov
jbe
inc
push
cmpsb
pop
and
cmpsb
out
pushf
jae
movsb
adc
popa
test
cmp
leave
cmp
mov
xor
adc
xchg
add
lret
test
mov
dec
fcoml
and
push
xor
ja
stc
outsb
jp
daa
jp
push
popf
ja
lret
mov
shr
fnstcw
push
adc
mov
test
or
xor
jmp
or
mov
int3
test
or
xchg
test
ja
xor
dec
adc
cmp
mov
decl
dec
movsl
mov
lods
in
into
pop
ret
xlat
cli
dec
or
mov
jo
inc
leave
mov
sbb
pop
loopne
jns
movsb
lds
aas
repnz
rcl
loop
xchg
stc
mov
clc
or
ds
push
outsl
int3
pusha
or
add
xor
lods
movsl
pop
arpl
mov
int
mov
xrelease
cmp
int3
shr
or
xchg
pop
mov
jge
or
lods
dec
mov
xor
jecxz
out
sbb
sar
sbb
sub
or
inc
mov
lods
pop
or
lcall
andb
ret
scas
hlt
adc
jns
jmp
mov
out
push
outsl
lock
push
dec
call
inc
jecxz
test
or
lret
or
sahf
mov
inc
push
enter
inc
or
adc
shr
sub
or
cmp
add
dec
in
movsl
gs
push
pusha
test
loop
popa
xor
sti
pop
shlb
push
lret
push
pop
and
aas
adc
or
dec
dec
sbbb
sahf
xchg
add
out
pop
clc
fidivs
clc
cwtl
mov
cwtl
cwtl
mov
xchg
xchg
pop
pop
lods
cmp
bound
sub
push
cmp
mov
dec
or
dec
aaa
pop
in
push
and
roll
les
js
mov
int
sti
and
sub
notb
out
inc
jp
js
aaa
jo
mov
neg
mov
insb
data16
movsl
xchg
push
dec
test
in
pusha
ss
jecxz
push
sahf
mov
cmp
xchg
ja
xlat
aas
pop
pop
dec
loopne
loopne
adc
sbb
orb
cmp
insl
je
repz
or
mov
push
and
mov
adc
dec
pusha
xchg
shll
lock
sbb
call
cld
adc
popa
push
test
mov
xchg
xchg
lea
fs
jp
test
dec
or
loopne
lahf
or
adc
push
lods
cmpsb
inc
jns
shll
add
ljmp
pop
ja
scas
mov
mov
xchg
cltd
movsb
pop
hlt
dec
and
dec
cmp
stc
pop
jne
mov
mov
movsl
ret
loope
hlt
dec
or
push
in
iret
xor
inc
jmp
test
and
movsb
sbb
ret
cmp
cmp
push
adc
outsl
out
xor
jmp
push
sub
dec
sub
sub
std
xor
cmp
add
jl
fs
push
hlt
pop
lods
fwait
adc
dec
xlat
das
push
aaa
pop
dec
icebp
xor
or
mov
popa
or
push
nop
sub
in
sbb
xor
outsl
push
dec
sahf
hlt
shlb
mov
or
adc
push
push
mov
mov
lret
sbb
mov
jp
add
dec
loop
lret
fidivrs
cmpsl
stos
cmc
rclb
jge
outsl
lock
sbb
cmc
lods
mov
add
mov
or
dec
add
push
movsl
mov
iret
sbb
stos
inc
cmc
add
and
stos
lret
cmp
or
xchg
ret
mov
frstor
mov
cmove
mov
push
mov
popa
pop
data16
pop
outsb
xchg
mov
iret
sbb
out
push
pop
and
mov
xchg
pushf
clc
mov
mov
test
cmp
lods
jns
push
test
and
add
xor
in
sbb
dec
or
loop
das
lahf
mov
ja
shl
mov
mov
xchg
push
sub
pop
pop
jb
dec
mov
cld
or
add
add
cmp
das
adc
inc
mov
and
dec
sbb
jmp
ja
outsl
int3
data16
mov
int3
arpl
cli
cld
sti
cmp
pop
icebp
in
decl
jle
out
loopne
into
sbb
scas
int3
fsubs
movsb
mov
push
sbb
lods
nop
pop
and
icebp
cltd
jg
sbb
mov
popa
pop
mov
out
cmp
pop
adc
sub
adc
shlb
push
inc
imul
jp
shll
xchg
jmp
inc
mov
or
mov
stc
xchg
pop
cwtl
pop
test
repz
sub
imul
dec
pop
or
rcl
cwtl
sbbb
ss
add
dec
xorl
in
sbb
mov
mov
pop
push
std
sbb
pop
pop
mov
cs
aam
mov
mov
out
cmc
out
lret
jns
cli
pop
add
pop
push
adc
adc
mov
xor
lds
inc
or
outsl
divl
fcom
jnp
xor
cwtl
add
imul
out
iret
xchg
mov
mov
or
gs
out
mov
iret
push
mov
inc
add
push
aam
mov
inc
dec
mov
sbb
push
lret
pop
jle
xor
pop
inc
dec
or
xchg
mov
out
xchg
mov
add
popa
push
mov
cmp
mov
sbb
mov
mov
jno
lcall
dec
mov
pop
push
jae
mov
dec
sahf
xor
xor
sarl
repnz
adc
inc
sti
xchg
mov
std
mov
fdivrs
push
or
fimull
adc
stos
dec
lds
dec
idivb
pop
cmpsb
nop
loopne
and
rcr
ljmp
mov
mov
jbe
cld
add
push
jle
call
xchg
jle
xchg
or
dec
pop
jg
mov
xchg
jo
out
les
imul
gs
or
add
enter
andl
and
dec
push
adc
jo
out
cmp
jg
and
scas
ret
sbb
mov
xchg
fcmovnu
mov
jmp
dec
out
cmc
mov
jns
cmp
ss
in
push
leave
add
jmp
lock
out
stc
sbb
aam
cmp
fildll
les
aas
xor
loop
xchg
mov
lahf
jp
out
mov
jne
dec
fwait
xchg
rep
push
outsl
fimull
xor
inc
and
enter
and
cld
mov
imul
dec
adc
je
test
cld
cli
les
sbb
test
scas
scas
xchg
pop
lods
jbe
fidivs
push
enter
jne
lret
push
inc
and
cwtl
test
clc
sub
cmpsl
jg
fidivl
arpl
mov
test
mov
add
push
imul
jno
mov
jbe
push
adc
or
dec
jae
sbb
and
mov
inc
scas
xchg
dec
cmc
mov
mov
push
cmc
pop
orl
ret
and
jp
push
or
mov
and
je
mov
test
xor
sub
mov
pop
test
cltd
mov
outsl
push
mov
dec
aaa
lret
jecxz
sbb
les
mov
out
cmpsb
lock
test
test
add
sub
into
fwait
ret
enter
mov
jle
sbb
mov
push
xchg
ud0
mov
xor
cmp
loopne
add
mov
dec
call
std
fsubs
or
cmp
adc
iret
bound
sub
or
out
push
outsb
pop
jnp
cmp
inc
shlb
add
lret
in
xchg
mov
sbb
mov
sarl
rcl
cltd
add
icebp
mov
jecxz
dec
cmp
jne
out
jecxz
or
add
ret
xchg
mov
int3
jns
test
mov
xor
enter
fisttpl
pop
enter
ret
mov
ret
pop
cmp
mov
into
mov
pop
enter
stos
pop
xchg
arpl
pop
in
push
pushf
pop
insb
pop
xor
rcr
jge
xchg
or
mov
mov
sbb
andl
xor
les
ss
leave
xchg
cmp
decb
mov
add
xchg
rolb
lcall
jg
test
xor
scas
test
sub
ljmp
bound
dec
cmp
fs
pop
xor
daa
pop
sarb
pop
xchg
fcoml
iret
into
push
push
stos
loop
pop
lods
mov
mov
inc
cltd
add
pop
push
inc
cmpsb
and
push
xor
nop
cwtl
std
out
adc
push
mov
addl
in
xchg
pop
sbb
xchg
cld
and
push
cmp
fcompl
dec
inc
mov
and
push
xchg
sbb
mov
mov
sti
sbb
mov
or
rolb
mov
jg
xchg
mov
fstpl
jmp
jg
push
iret
das
inc
inc
lods
jg
test
and
cmpsb
insb
sub
mov
js
cmp
or
push
cmc
and
push
jbe
popf
add
and
push
dec
jbe
mov
incb
dec
inc
fsubs
jae
lret
pop
xchg
dec
mov
inc
jne
scas
ret
cmp
cld
dec
jge
mov
cld
imul
lods
mov
sub
inc
sbb
xchg
dec
jnp
xor
pop
divl
mov
rol
sti
mov
push
mov
add
std
xchg
mov
filds
sub
xor
fistpl
mov
mov
pop
lahf
sub
jg
outsl
jns
aaa
loopne
mov
in
mov
mov
or
cltd
sbb
outsb
push
jo
in
or
bound
push
mov
mov
mov
lods
lock
sbb
aas
pop
gs
sbb
pop
rclb
ret
int
dec
jo
push
jp
pop
xchg
test
cmp
mov
and
jnp
inc
adc
cwtl
clc
imul
shrl
iret
adc
cltd
push
dec
push
addr16
mov
jne
mov
sub
aad
cs
xchg
inc
ret
aad
add
aas
ja
mov
add
lods
gs
mov
mov
js
mov
iret
pop
mov
in
add
mov
ret
mov
pop
inc
std
pusha
xchg
dec
pop
push
pusha
pop
pop
pop
aad
push
movsl
and
lret
mov
arpl
loop
imul
aam
mov
insb
cld
cld
sub
je
leave
pop
mov
js
repz
into
xchg
pop
icebp
arpl
pop
addb
cld
hlt
or
sub
notb
jl
or
dec
or
in
dec
repz
mulb
push
xor
mov
push
pop
sbb
scas
and
mov
jne
icebp
xchg
mov
testl
mov
pop
lds
or
aas
sbb
inc
mov
stos
xor
xchg
cmp
stos
mov
and
adc
lahf
sbb
nop
add
pop
icebp
and
jl
pop
mov
pop
lock
push
jbe
arpl
pop
push
lret
imul
faddl
nop
ja
sbb
fldl
cmp
push
mov
xchg
and
and
pushf
orl
and
rep
jg
jns
lods
fists
mov
adc
jb
testb
data16
out
jb
sbb
and
inc
loopne
rcrl
xor
into
ret
insl
xchg
imul
mov
jmp
pop
ljmp
pop
sbb
enter
mov
adc
pusha
aam
das
mov
hlt
repz
pop
fdivp
mov
ret
pop
dec
xchg
pop
sub
movsl
movsl
pop
jb
jae
call
mov
outsl
ss
mov
push
dec
movsb
das
xchg
jae
or
ret
fs
cmp
mov
mov
add
cs
xor
dec
pop
out
add
mov
mov
mov
into
iret
xchg
push
and
pushf
xor
pop
lcall
lods
call
sub
or
fdivp
sub
inc
in
call
push
jmp
inc
jb
push
mov
mov
in
or
jae
adc
xor
xor
adc
je
popa
xchg
outsl
repz
xchg
cmpb
mov
cmp
mov
js
rolb
jle
push
loopne
jb
mov
fcmovnu
mov
mov
sub
icebp
push
and
into
test
jge
pushf
dec
sbb
jp
faddp
cmp
sahf
jae
inc
push
lods
loop
stc
pusha
imull
loopne
ja
aad
adc
repz
jle
fwait
test
jle
outsb
mov
and
pop
pop
sub
rol
insb
jecxz
data16
pop
lds
into
cmp
cmpsb
dec
fadds
iret
ss
insl
jne
push
xor
push
jb
add
jge
push
inc
bnd
popa
dec
mov
xor
in
xor
mov
pop
adc
jp
mov
mov
adc
lea
adc
out
mov
ljmp
xchg
sub
mov
enter
repnz
fbld
hlt
inc
aas
or
cmpsl
push
subl
mov
mov
fidivl
cmp
cltd
push
sbb
popf
js
imul
stos
dec
mov
xchg
data16
push
cmp
and
orl
add
mov
sbb
test
fwait
push
sub
or
js
fbstp
cli
andl
push
jae
test
cmp
xor
decl
ret
or
leave
out
minps
in
loope
push
xchg
call
fldcw
int
mov
scas
sahf
or
fs
mov
and
jae
mov
jno
imul
adc
cltd
adcl
cmp
imul
stos
jo
mov
jnp
mov
mov
lods
outsl
std
movsb
cmp
hlt
jnp
ljmp
pushf
cmpsl
repz
insl
fwait
xchg
add
dec
inc
cmp
mov
imul
cmpb
xchg
imul
xchg
lahf
outsb
add
ficoml
sbb
cmp
mov
xor
dec
popf
mov
sub
jbe
sub
cld
loope
add
mov
jo
inc
adc
fs
stc
lods
xchg
sahf
xlat
stos
mov
mov
movsl
movsb
jg
out
or
cmp
xor
icebp
cs
mov
nop
cmpsb
hlt
ds
cmp
xchg
imul
cli
mov
dec
and
ja
or
sub
call
jo
sbb
test
pop
jo
fimull
ficompl
add
lds
mov
mov
data16
stc
dec
inc
pop
mov
sub
push
mov
cmp
fildll
push
jns
pusha
fildll
xorb
xor
and
in
push
add
mov
in
mov
bound
xor
push
lret
and
mov
fdivrl
enter
xor
mov
mov
sarb
xchg
push
loopne
pop
ds
leave
cmp
mov
es
insl
mov
test
insl
push
add
fstpt
jb
ficoml
test
jb
out
bound
pushl
dec
fmul
sbb
mov
sbb
in
sub
xlat
loop
je
out
outsl
addr16
pop
fidivs
lcall
jbe
ja
xchg
mov
inc
clc
add
je
sbb
mov
push
xorl
cmc
andl
pop
icebp
cmc
sub
iret
fbld
icebp
mov
out
mov
loope
popf
cltd
into
lds
jmp
inc
lock
mov
pusha
inc
mov
ret
sbb
lcall
arpl
repnz
idivb
sbb
or
outsl
stos
cs
and
into
negb
adc
xchg
rclb
sub
aam
gs
dec
jp
outsb
xor
jg
dec
adc
push
sahf
test
push
mov
adc
lcall
push
ljmp
roll
sbb
test
icebp
inc
fidivrl
fdiv
sub
pop
cmpsb
test
cmp
pop
inc
movsl
adc
nop
aad
stc
add
das
mov
xchg
insb
lock
mov
ret
push
xor
mov
insl
mov
xor
dec
sbb
fiaddl
iret
push
xorb
lea
das
rcrb
add
imul
dec
xor
ret
int3
mov
jnp
cmp
les
xchg
nop
lds
fstl
loope
inc
sti
insb
push
inc
xor
inc
mov
fnstcw
jno
fs
scas
sub
push
sub
jp
arpl
outsl
jnp
or
mov
movsb
fidivrl
nop
addr16
out
sbb
and
cwtl
jae
data16
orb
xchg
push
push
ret
sbb
outsl
xlat
jmp
data16
movsb
nop
cmp
jg
aaa
ret
xchg
das
xor
mov
add
jbe
loop
sbb
sbb
cld
hlt
pop
inc
test
loopne
inc
out
shrb
cmp
mov
leave
insb
and
ja
cmp
adc
iret
jae
push
jno
fstps
jbe
in
popf
xchg
adc
ljmp
es
inc
shrb
imul
data16
out
lods
cmp
leave
mov
xor
fistpll
test
push
add
xor
adc
cmpsl
ret
dec
push
sbb
pop
insl
jmp
cmpsb
enter
repnz
rorb
sub
mov
xor
imul
sub
ds
jmp
xor
movsl
adc
xor
call
cli
dec
push
loope
xchg
cmpsl
sub
pusha
mov
xchg
sarb
in
cmpsl
sti
jle
fmull
outsl
cmp
jno
fdiv
lret
je
lahf
jno
pop
add
sbb
sub
inc
push
mov
stc
ljmp
testl
ss
fucom
movsb
jo
xchg
xchg
and
mov
cmp
sahf
jp
mov
sbb
push
daa
lret
sbb
out
and
imul
dec
and
outsl
mov
add
and
inc
xchg
sub
imul
sub
mov
jg
movsl
mov
add
inc
xor
dec
pushf
dec
push
push
and
test
dec
loopne
jne
pop
je
cwtl
cmp
jge
cmpl
xchg
mov
mov
push
mov
je
mov
jp
jge
stc
sarl
inc
sahf
bnd
in
cs
mov
mov
stos
sbb
in
lcall
daa
mov
sti
loop
sbb
cltd
scas
rcr
fldenv
js
loop
pop
xlat
fucomi
pop
sbb
sbb
mov
push
idivl
lret
cmpsl
stos
cmpsb
mov
push
mov
fidivs
mov
insl
xlat
mov
mov
loop
cmp
icebp
scas
add
or
xor
cmpsb
pushf
pusha
and
iret
push
pop
xor
popa
inc
test
inc
cs
loopne
roll
pop
push
mov
fisubrl
js
xor
fdivr
jecxz
ljmp
adc
rclb
pushf
xchg
sbb
pushf
fmuls
rorb
pop
xchg
dec
sbb
push
mov
xor
jmp
rcl
cmp
mov
or
and
jbe
fxch
mov
xor
sub
mov
push
add
bound
ljmp
pop
xchg
lock
aad
mov
adc
mov
mov
ja
lock
cli
or
repnz
cmp
imul
in
lret
icebp
mov
fcomip
add
xchg
xchg
xchg
ret
mov
xor
leave
stos
arpl
repz
movsl
mov
add
inc
xor
out
pop
int3
lock
sub
xchg
in
test
adc
push
testb
push
dec
pop
stc
movsl
xchg
adc
lret
lods
push
cmp
xchg
js
xchg
movsb
std
in
fisttpl
inc
cmp
cmpsl
mov
cs
adc
add
jno
addl
pop
arpl
add
adcb
cltd
dec
out
mov
fiadds
ljmp
aad
cld
jg
jge
mov
add
mov
xor
fidivs
push
int
sbb
inc
stc
jmp
mov
jmp
inc
test
subl
mov
outsl
mov
insb
test
push
pop
push
push
inc
and
cmp
mov
lods
leave
mov
mov
pop
mov
lods
mov
call
cmpsl
or
dec
aas
outsl
push
and
out
lahf
shl
xchg
cld
pop
out
cmp
xor
shl
fsubl
mov
inc
sub
fmul
fsub
pop
mov
testb
cmp
dec
fimull
int
into
out
cld
mull
popf
imulb
out
out
xchg
test
push
in
push
sub
in
adc
das
or
mov
mov
xchg
pop
mov
pop
insb
mov
ret
add
ljmp
jmp
xchg
fisttpll
dec
pop
push
aad
andb
scas
loop
inc
lods
sub
push
inc
xchg
je
xor
mov
iret
mov
inc
loopne
loope
xor
sbb
pop
loop
mov
es
xlat
mov
sbb
sub
adc
add
add
sbb
push
nop
push
dec
push
lret
or
repz
cld
iret
jo
data16
bound
cwtl
scas
adc
inc
or
in
out
dec
stc
adc
mov
or
popa
mov
sbbb
push
push
lods
gs
repz
inc
inc
scas
fsubl
xchg
cmp
insl
pushf
in
ret
xor
mov
cmp
push
stc
fbstp
mov
cs
enter
xchg
inc
xchg
fxch
and
cwtl
fxtract
sti
cld
mov
sti
xor
daa
and
inc
cmp
dec
mov
jecxz
xor
gs
lcall
iret
xor
loop
cli
mov
out
addr16
iret
and
fsubl
scas
mov
push
lcall
mov
mov
scas
push
fisttps
mov
loop
test
mov
lret
mov
lret
xor
pop
cmpsb
ret
push
adc
arpl
clc
sbb
in
push
in
test
loopne
jns
dec
movsb
fs
mov
lock
aas
and
lds
sbb
lahf
iret
cmc
xor
aam
mov
es
pop
jbe
ds
dec
jno
aad
xchg
ja
sub
cmpsl
cmp
les
test
iret
aaa
ret
jle
testl
roll
cmp
sbb
ss
pop
leave
jmp
repz
repz
add
push
loop
push
fldcw
ds
pop
jg
divl
xchg
mov
scas
mov
loope
jne
adc
movsl
pop
jmp
push
fbstp
daa
mov
movsl
mov
mov
push
popf
rcrb
jne
xchg
outsb
inc
push
xchg
sarb
and
adc
sarb
mov
pop
imul
sahf
cwtl
sub
out
setno
push
sbb
add
cmp
mov
hlt
dec
xchg
ss
movsb
sbb
jo
call
jg
fcompl
mov
jecxz
test
jne
adc
mov
push
inc
push
lret
daa
cmp
orl
orl
call
adc
mov
test
lods
fwait
icebp
test
test
out
push
push
push
mov
pop
jmp
add
and
iret
les
dec
sbb
sbb
adc
jne
xor
pop
movsb
gs
dec
rcr
and
xor
rcrl
shr
xchg
outsl
jo
loope
dec
fiadds
cmp
pop
pop
test
adc
mov
out
adc
enter
pop
and
stos
sub
jmp
cmp
pop
or
rcr
test
stos
jne
lret
inc
sub
sbb
xchg
jecxz
pop
rorb
jbe
add
repz
jp
dec
aaa
into
test
lahf
jg
lods
pop
hlt
mov
lods
add
scas
inc
outsl
mov
cmp
insb
test
ret
dec
mov
jae
mov
xchg
scas
cmc
push
or
mov
sbb
jecxz
fstpl
xorb
movsl
xchg
and
and
xchg
gs
out
and
lods
loop
inc
testl
dec
hlt
inc
sbb
and
test
dec
inc
add
cmp
sbbl
stos
hlt
popw
mov
mov
or
loope
ss
sti
testb
in
dec
pop
xor
push
popa
adc
and
ljmp
xchg
cmc
inc
mov
stos
ffree
and
add
mov
imulb
clc
lods
insb
add
push
push
jns
arpl
push
or
scas
cmp
mov
pusha
popf
mov
sti
inc
xchg
mov
cmp
jge
and
std
xor
sbb
enter
xchg
cmp
cmpsl
shlb
mov
fisubrs
mov
xchg
mov
sub
inc
dec
lods
and
xchg
aas
repz
loopne
lahf
out
popa
mov
inc
scas
inc
mov
jne
mov
jae
and
or
lods
mov
cwtl
push
add
jae
out
mov
mov
xchg
cmp
jp
lock
nop
div
xchg
jnp
arpl
sub
inc
scas
or
test
mov
fdivrl
arpl
cmp
and
sahf
mov
loope
cmp
xor
je
fstpt
mov
lcall
popf
out
xchg
aad
js
push
push
mov
fldt
aaa
out
loopne,pt
adc
push
jns
mov
pop
sahf
int
shll
inc
sahf
xchg
inc
xchg
add
ret
inc
or
jne
or
outsb
mov
in
add
in
mov
hlt
imul
fdivrl
and
cmpsl
lock
push
rsm
clc
js
frstor
lret
mov
push
jo
inc
lods
dec
addr16
adcl
insl
xchg
sahf
cmpsl
out
sub
imul
add
shl
mov
mov
aad
inc
icebp
pushf
jo
nopl
add
jmp
test
test
or
inc
cmpsl
dec
pop
test
adc
lds
push
sbb
jno
repnz
sbb
sub
fucomi
sbb
into
sub
mov
ret
faddl
sti
pop
orl
lcall
push
pop
nop
int3
or
pop
mov
int
addr16
ret
hlt
push
cmpsb
mov
mov
leave
inc
pusha
mov
pop
stos
mov
sbb
dec
cmp
sub
sub
lahf
clc
push
rorl
mov
iret
cmp
cmpsb
mov
push
add
inc
and
iret
sbb
mov
inc
ljmp
int3
xchg
mov
pushf
push
mov
icebp
popa
incb
aas
inc
cmp
adc
jg
fiadds
mov
dec
lds
das
fisubrs
sbb
mov
sub
add
adc
adc
lods
add
imulb
pusha
rcrl
push
adc
cld
stc
cmp
out
nop
pop
icebp
jne
jo
sbb
mov
mov
out
mov
mov
mov
and
cmp
dec
insb
mov
xchg
inc
pop
and
pop
test
dec
test
inc
aaa
xor
dec
xchg
or
cmp
dec
sahf
decl
in
fmull
in
cmp
clc
jmp
mov
mov
mov
lcall
sbb
movsl
out
adc
jl
cmp
dec
or
sub
cmp
and
lea
add
xchg
int
adc
cli
jno
iret
sub
sbb
or
dec
dec
sub
inc
test
add
adc
jo
sbb
pop
jbe
add
mov
jmp
dec
loop
cld
imul
mov
sahf
movsb
push
add
add
lret
jecxz
jb
push
xor
and
das
fdivl
push
sub
test
mov
repnz
fwait
bound
dec
aaa
push
imul
fwait
sub
xchg
push
jge
int
leave
add
popf
hlt
cmpsl
gs
push
pop
out
push
fcompl
test
mov
adc
loop
adc
xor
mov
rclb
stc
xchg
movsb
loopne
in
jecxz
mov
mov
insl
rcl
fdivr
notb
loop
movsl
add
dec
adc
push
imul
cmp
into
cmp
mov
xor
lcall
ret
inc
dec
jle
clc
hlt
or
movsb
repz
lods
mov
cmpsb
add
inc
mov
shrl
adc
pop
sub
sarb
mov
jno
call
sub
push
dec
and
je
pop
aaa
xchg
insl
outsl
int
sti
es
jp
push
mov
jge,pt
movsb
mov
jae
cwtl
add
push
pop
pop
out
imul
push
rolb
mov
sub
cmp
xor
cmp
in
and
fidivrs
rclb
ja
int3
jle
nop
push
gs
jne
xor
scas
rol
push
adcb
xchg
popf
cmp
inc
out
out
cmp
sbb
mov
insl
pop
or
aam
push
sbb
xor
insb
dec
jecxz
push
fnclex
xchg
arpl
enter
mov
fld1
dec
cs
cld
stos
mov
rolb
cmp
arpl
test
inc
jl
or
xlat
test
fmulp
dec
or
lods
mov
sub
pop
xchg
sbb
mov
or
addl
decl
cmp
sub
rcr
std
sub
or
xchg
aad
test
jo
fs
mov
cwtl
aas
loope
addr16
jmp
adc
push
fadds
add
in
outsb
sahf
push
popf
mov
pop
mov
sar
cmp
mov
sub
clc
jo
loopne
or
out
rorb
and
insb
mov
outsl
or
mov
gs
and
push
in
scas
loop
into
popa
cmp
and
sub
adc
stos
mov
cmp
push
mov
rcrb
fistl
xor
or
out
addl
dec
or
mov
clc
mov
mov
test
lds
add
inc
sub
in
add
mov
call
mov
sub
push
mov
add
jae
sti
fidivs
dec
mov
mov
xchg
xorb
fiaddl
add
push
hlt
loope
mov
in
and
data16
pop
mov
xor
dec
lods
pop
les
jnp
add
adc
stos
loope
imul
push
imul
mov
std
movsb
or
cmp
sbbl
nop
jle
loopne
mov
jbe
mov
mov
xor
cmp
and
shld
cwtl
sti
repz
out
mov
add
and
jecxz
mov
pop
cmp
fcoml
and
into
mov
std
sbb
cld
popa
add
xchg
test
fidivl
mov
adc
mov
movsb
test
mov
cmp
out
pop
mov
adc
clc
out
mov
and
in
mov
push
xor
repnz
or
fsubrl
ret
jle
repnz
xor
fcmovnb
shll
jb
push
mov
inc
decl
ja
ljmp
mov
xchg
out
mov
adc
and
mov
data16
lcall
inc
xor
dec
std
outsb
adc
mov
mov
shrb
ss
jnp
mov
clc
xchg
ss
pop
mov
jbe
pop
into
jae
jecxz
aas
repz
jecxz
push
xchg
rolb
jae
push
or
cmp
and
pushf
jmp
xchg
aad
pop
cmpsl
lea
mov
mov
xorl
mov
push
in
jae
cmpsb
xor
push
mov
dec
sbb
and
sbb
ljmp
bound
pop
mov
aaa
dec
out
mov
fbstp
inc
mov
scas
mov
insb
mov
mov
jo
setl
add
mov
fldcw
notb
mov
pop
xchg
cltd
dec
popf
mov
xor
lret
addb
cltd
outsb
out
icebp
sub
mov
test
aas
outsl
jne
scas
mov
dec
rorb
sbb
lret
mov
mov
cmp
inc
sbb
lahf
je
dec
and
mov
xchg
push
fsubl
add
jmp
xchg
dec
and
jle
cli
lahf
inc
aas
xor
inc
popa
push
call
call
mov
hlt
jp
ja
dec
inc
xor
mov
mov
pop
add
mov
mov
inc
mov
test
sub
push
fidivs
mov
ds
sub
xor
sahf
and
jb
and
outsl
mov
cmp
jp
mov
mov
mov
iret
dec
test
outsb
sub
insl
dec
fucomi
pop
xchg
rcrb
leave
subl
dec
xchg
or
repz
xchg
inc
lock
fisubl
repnz
sarl
xor
push
add
das
and
imul
xor
daa
out
sarl
adcl
insb
and
ss
cmpsl
add
sbb
insb
jg
aas
hlt
rcr
popa
jmp
mov
lea
fldt
gs
dec
mov
mov
pop
or
or
pop
mov
push
and
dec
aas
in
sbb
cwtl
jbe
negl
xchg
les
jmp
daa
lret
dec
stos
gs
stc
mov
xor
cltd
mov
lods
cli
lahf
movsl
nop
sub
pushf
mov
or
jp
sbb
ret
jg
and
dec
cli
cs
call
sbb
mov
rorl
ss
pop
adc
imul
sub
cmpsb
jl
add
lcall
into
and
fimull
cmp
enter
imul
scas
out
enter
cwtl
jmp
mov
or
cmpsb
xchg
adc
fsubr
push
fidivl
test
mov
add
lret
add
pop
popa
push
add
mov
fcmovnb
fidivrl
enter
xor
sub
push
test
xchg
iret
mov
mov
mov
cmpsb
pop
mov
lret
test
icebp
add
mov
inc
pop
clc
int
inc
dec
and
lods
sbb
daa
sbb
or
dec
lods
je
adc
mov
adc
repz
pop
adc
int
jb
out
mov
out
dec
xchg
jg
xchg
movsl
xchg
cmp
mov
cmp
or
arpl
mov
insl
push
pop
insl
scas
xchg
nop
xchg
std
jmp
and
jl
push
add
les
dec
in
ljmp
iret
mov
in
lea
iret
bound
jns
jne
leave
cmc
mov
inc
mov
jb
inc
in
xor
scas
sahf
xchg
and
xchg
loope
rol
and
inc
push
outsb
pop
dec
or
add
fsts
repnz
sub
insb
xchg
cmpsb
inc
jb
mov
fsub
or
addr16
inc
in
movsb
add
orb
pop
mov
push
out
push
push
or
push
push
nop
rcrb
inc
inc
lods
pop
out
mov
adc
jnp
pop
add
xlat
insl
incb
sub
dec
jnp
jae
lret
pusha
pop
jg
xor
insl
push
inc
insl
or
imul
std
lret
icebp
fcmovnbe
addr16
lds
sbb
je
std
jmp
addr16
stc
add
add
jo
jge
stos
popf
mov
or
pushf
icebp
xor
mov
add
xchg
mov
push
push
in
cmp
fildll
aaa
movsb
or
scas
arpl
js
push
aas
xor
mov
inc
inc
mov
out
mov
mov
pop
in
cmp
mov
or
dec
out
aad
xchg
inc
test
jg
mov
pop
mov
sub
sbb
test
inc
in
lea
and
xchg
add
adc
jb
les
add
fstpl
les
and
jmp
cmp
push
lods
or
adc
std
lods
dec
sub
icebp
dec
adc
inc
int3
out
in
inc
dec
adc
sub
repnz
decl
xor
dec
insl
loopne
sub
sbb
mov
ret
aas
sub
mov
adc
xor
pop
sahf
jno
outsl
test
lds
pop
or
push
add
lods
icebp
mov
push
lahf
dec
push
jle
push
dec
cld
test
cmp
and
xlat
xor
outsl
pushf
bound
jb
dec
movsb
ja
jge
out
movsl
xchg
ja
bound
rcrl
push
pop
inc
pop
or
fsubs
hlt
dec
mov
jmp
mov
mov
push
push
daa
leave
out
mov
mov
cmpsb
dec
dec
aad
les
fwait
shr
adc
int3
sub
cmp
loopne
mov
push
fistpl
ljmp
pop
push
xchg
jle
sbb
xchg
dec
stc
inc
pop
in
fstpt
jo
sbb
les
adc
add
test
mov
pop
mov
sub
cmp
pushf
rorb
cmp
bound
fs
and
stos
and
xorl
aam
xchg
xor
and
and
cmp
ds
stc
jb
movsb
leave
lock
pop
rorb
rorb
jecxz
push
rcll
fimull
lea
push
pop
aaa
sbb
fidivl
push
mov
push
pop
jbe
mov
dec
and
stos
fucomp
mov
sarb
imul
mov
mov
mov
add
out
push
adc
es
sbb
pop
push
stos
cli
aas
dec
mov
std
cmp
adc
ud0
xor
add
add
aas
push
incb
or
mov
out
sbb
push
mov
repnz
push
and
test
adc
loopne
loop
add
cli
inc
adc
jo
and
add
loop
daa
jg
mov
sbb
stos
testb
fimull
pop
in
mov
fs
das
add
dec
outsb
imul
xlat
lds
sub
rcrb
dec
popf
mov
shrl
and
clc
movsl
or
sahf
enter
cmc
je
mov
add
fcompl
xor
add
lcall
lret
jae
jp
dec
mov
add
xlat
cmp
fistl
jns
sub
int
in
pop
out
sbb
dec
jle
xchg
push
jl
xchg
mov
mov
mov
pop
sbb
inc
cmp
dec
mov
dec
xor
ret
pop
orb
mov
push
push
loopne
ret
test
cmp
lgs
cmp
xchg
lcall
xlat
inc
cmc
mov
push
ljmp
jecxz
sub
push
pop
nop
sbbl
xrstors
sbb
test
data16
in
push
push
leave
xchg
ljmp
sbb
mov
movsb
xor
movb
pop
popf
mov
jb
arpl
jns
sbb
scas
les
inc
movsl
inc
cmovl
je
lock
cld
ss
shl
mov
orl
cmp
movsb
or
and
mov
sub
jmp
dec
pop
mov
mov
adc
lods
gs
loop
ljmp
fcoml
mov
imul
and
andl
imul
mov
jns
outsl
adc
fwait
std
je
icebp
xchg
imul
mov
mov
jbe
xor
fs
mov
xchg
or
mov
ja
cmp
mov
sub
cmp
pop
jle
sub
inc
outsl
xchg
sbb
jns
push
and
adcl
ljmp
sub
mov
dec
pushf
fbstp
in
jbe
mov
loope
and
xor
sbb
pushf
into
leave
push
mov
fsubl
fdivrs
mov
sbb
mov
or
xchg
es
addr16
data16
int3
inc
int
mov
shrb
enter
sbb
jmp
lods
call
hlt
movsl
popa
and
mov
aad
das
sub
test
mov
push
nop
sbb
das
nop
jns
sub
out
loopne
outsb
icebp
mov
out
adc
mov
push
push
movsl
mov
pop
and
push
mov
scas
xor
pushaw
push
pop
push
loope
mov
fsubl
push
mov
xchg
call
cmpsl
testb
cmc
and
mov
lods
add
ret
dec
pop
xchg
inc
and
cmp
repnz
xor
cs
insb
mov
jns
jmp
and
mov
or
mov
outsb
cmp
aas
cmc
xchg
push
clc
cmc
pop
cmp
int
scas
dec
ret
adc
cmpsb
dec
inc
bound
xchg
insb
sbb
adc
ja
mov
in
inc
xchg
fiadds
add
arpl
sbb
rclb
lods
xchg
mov
inc
adc
test
loop
push
mov
adc
mov
jle
jb
jmp
push
fucomi
push
and
aas
stc
fiaddl
pop
xor
cmpl
cmp
test
push
popf
les
sar
xchg
leave
add
ss
cltd
mov
push
bswap
fldcw
sbb
inc
fwait
push
xchg
fildl
stos
sahf
cmp
lret
add
les
addr16
ds
xchg
in
mov
xor
mov
adc
enter
addb
sub
cmpsl
les
cli
cmp
or
popf
out
or
sbb
add
ss
jg
movsl
dec
mov
cmpsl
dec
daa
mov
dec
stos
dec
push
mov
xlat
inc
mov
jno
mov
sbb
or
ja
xchg
lret
es
repz
pop
outsl
mov
hlt
pop
jbe
test
push
xchg
xor
mov
jns
pop
mov
loopne
fwait
nop
fcoml
mov
dec
nop
jae
inc
pop
sub
ja
cltd
mov
cwtl
movsb
mov
add
push
sti
ljmp
cmpsb
inc
pop
int
cmp
adc
or
fisttpll
jl
leave
mov
hlt
mov
mov
leave
jnp
sub
cmp
sti
mov
ljmp
pop
iret
iret
push
fucom
dec
pushw
mov
dec
std
setnp
mov
lret
pop
jg
push
xor
push
clc
and
shlb
xor
shll
shl
add
andb
xchg
aas
mov
and
or
in
insb
or
push
mov
daa
fs
mov
cld
dec
mov
popa
das
enter
ret
sbb
int3
push
xor
sbb
dec
sbb
mov
sub
sti
jg
xor
je
cmp
push
sub
push
and
data16
aam
pop
push
ffree
dec
lods
popa
dec
rorl
xchg
test
pop
nop
cmp
int
mov
mov
push
dec
popa
xchg
and
loopne
loope
aam
cmovle
dec
ret
xchg
push
mov
mov
or
iret
pop
fcoml
jge
pop
out
jle
es
inc
jb
dec
mov
sarl
pop
je
scas
dec
lock
add
dec
jl
js
lea
mov
xlat
and
mov
mov
dec
adc
adc
dec
inc
push
aas
dec
movsl
sub
push
bound
mov
insb
mov
pop
jg
mov
adc
ljmp
call
aad
cmp
cld
cmp
rcr
int
shlb
mov
sub
mov
or
jnp
jo
xor
clc
jp
test
movsb
pop
pop
scas
add
sahf
push
shlb
lods
call
inc
add
repz
test
xlat
lret
scas
add
sub
fildll
addl
inc
incl
aam
lods
or
pop
repz
mov
insb
dec
hlt
mov
jnp
lea
stos
xchg
xor
jp
cltd
nop
aas
fisubs
xor
ljmp
adc
mov
js
push
aad
insl
stc
xor
jp
cmp
pop
mov
sub
insb
adcb
and
jl
xor
push
dec
lea
and
xchg
icebp
sbb
fldt
ljmp
aaa
sahf
cmove
loop
out
push
es
nop
inc
adc
addr16
sarb
sub
clc
adc
insl
stos
lods
mov
rcr
add
cli
lea
mov
push
pop
mov
sbb
es
lds
push
mov
cmp
mov
pop
adc
js
lret
arpl
sti
int3
loop
iret
jmp
mov
pop
xor
jg
daa
mov
cmp
ljmp
mov
sub
scas
pop
leave
adc
dec
imul
mov
push
mov
lods
push
bound
lods
arpl
mov
enter
fistpll
pop
or
in
repz
loopne
xor
and
rorl
mov
sbbb
imul
subl
ret
cmpsl
gs
pop
dec
adc
shll
cmpsb
or
lahf
inc
dec
in
lock
xor
push
mov
inc
sbb
aas
js
push
repnz
stos
out
into
adc
pop
aam
xor
adc
sub
cmpsl
imul
sub
ds
rcll
jbe
push
xor
xor
sub
or
or
in
mov
andb
pop
jo
movl
add
daa
hlt
movsb
jg
repz
ja
arpl
lret
jbe
incl
js
ror
gs
xchg
mov
or
sbbl
or
les
punpcklbw
call
das
outsl
out
test
mov
movsl
test
or
lret
bound
push
decb
loop
loopne
and
push
mov
jne
repnz
test
out
sub
repz
sbb
ljmp
xor
cmp
jl
mov
sbb
adc
jg
xchg
orl
jno
mov
loop
push
pop
xor
ja
lea
mov
lahf
mov
mov
push
inc
sti
mov
cmp
jmp
andb
fmull
mov
push
pop
adc
cmpsb
push
mov
fnsave
or
sbb
push
adc
sti
xor
sub
les
mov
cmp
into
enter
leave
repnz
sub
jb
mov
clc
ret
mov
cmpsl
and
dec
int
cmp
in
stos
sub
scas
inc
pextrw
mov
roll
inc
cmp
jecxz
sbbb
popf
test
push
push
mov
je
enter
push
push
ja
or
out
pop
ret
stc
inc
or
ficomps
je
fcoms
inc
xchg
jns
pop
or
pop
rcl
cmp
cwtl
or
xor
aam
aas
outsb
cmp
pop
mov
dec
and
jo
jb
jecxz
out
xorl
push
mov
ror
jne
lea
sar
add
xor
inc
jl
jb
insb
sahf
cmp
pusha
sub
das
mov
popf
mov
and
ret
das
repz
cmpb
cmpsl
mov
sub
inc
add
sbbl
and
add
pop
je
fstpl
imul
lea
pop
mov
in
jno
mov
push
stos
jns
les
cmp
xchg
mov
bound
pop
and
push
xchg
out
inc
sub
sub
jg
and
inc
xchg
rol
fidivl
pop
in
jo
adc
test
out
dec
pusha
adc
dec
dec
test
and
iret
cmpsl
mov
imul
pop
pop
jge
adc
cmp
sbb
js
pop
add
addl
push
rcrl
pop
adc
push
pop
pop
aad
mov
xchg
push
movsl
xchg
pop
mov
rolb
mov
dec
lret
mov
ljmp
lods
pop
enter
pop
sub
inc
outsl
mov
mov
stos
and
dec
xor
push
xor
mov
rcrl
pop
xchg
mov
je
sbb
cmpsl
rolb
outsb
pop
call
stc
adc
test
inc
or
cmp
sub
mov
popa
fidivrl
lahf
cmp
stos
push
clc
cmp
and
shrl
cli
loopne
aad
jp
data16
js
movsb
aad
push
xor
push
jmp
dec
enter
sub
inc
test
jecxz
lea
jp
xor
mov
pop
imul
nop
jecxz
js
mov
cmc
icebp
adc
sbb
popf
pop
sub
popf
sub
int3
inc
jns
cld
adc
iret
aas
int3
je
pop
push
dec
cmp
add
dec
outsb
sbb
lds
pop
sbb
push
in
adc
shr
xchg
inc
iret
in
mov
int3
and
mov
jo
rcl
push
xchg
add
mov
shll
fildl
rcrl
rdtsc
xchg
hlt
les
cs
call
scas
repnz
adcl
std
and
jnp
stos
lods
clc
fidivl
pop
mov
xor
cs
adc
inc
int3
out
cwtl
je
cmp
or
cmp
stc
xor
sub
adc
adc
add
push
lcall
or
xchg
push
fidivl
popa
sub
imul
inc
insb
rorl
int
add
inc
pop
int3
testl
mov
sub
neg
dec
mov
jge
add
mov
xchg
pop
add
xchg
inc
push
in
mov
dec
adc
fldcw
arpl
sbb
xchg
lcall
inc
leave
jmp
call
xchg
cmc
mov
mov
fdivs
sbb
mov
aad
pusha
out
call
lahf
xlat
sbb
clc
push
imul
rorb
push
push
add
mov
loopne
mov
rclb
fildll
pop
add
adc
push
leave
inc
push
cmp
xor
mov
add
push
bound
jo
icebp
scas
jl
xor
mov
in
call
cli
bound
decb
out
xor
mov
mov
fisubl
out
test
mov
sbb
mov
ds
fnstsw
fs
xchg
out
sub
aaa
cmpb
jle
jnp
dec
mov
add
das
and
lea
test
notb
cmp
scas
and
fildl
mov
sub
cmp
jno
dec
rep
inc
fidivrl
add
sbb
ljmp
xor
insb
xchg
cmp
jle
scas
push
cwtl
xchg
bound
jne
bound
cltd
xor
ljmp
arpl
pop
sub
outsb
jnp
pop
insb
cs
data16
in
sub
ds
dec
jp
loopne
fimull
xor
and
shll
dec
mov
lea
jp
cwtl
and
rcrb
jl
daa
adc
jno
mov
mov
scas
fistl
out
mov
addb
pop
std
es
sbb
repz
dec
imul
xchg
pop
lcall
xchg
xchg
sbb
mov
xlat
ljmp
out
fsts
jbe
sub
dec
cmp
loope
cmc
cli
cmc
out
mov
xor
aaa
sbb
or
bound
cmpsl
xchg
push
pop
push
mov
add
dec
sbb
loopne
fs
mov
mov
into
ds
sbbl
inc
rep
rol
outsl
or
das
xchg
popf
jecxz
xlat
push
call
adc
sarl
dec
add
imul
cmpsb
sbb
stos
xor
aad
cmpb
gs
jle
mov
mov
pop
pop
fldenv
dec
jecxz
outsl
pop
out
inc
pop
dec
jo
gs
mov
mov
movsl
adc
mov
mov
or
mov
iret
outsb
bound
mov
jbe
inc
andb
pusha
cmpsb
cmp
jg
jae
xor
std
push
dec
dec
push
roll
cmpsl
es
les
and
push
sub
dec
cmp
in
or
mov
enter
ljmp
sti
mov
sbb
int
lds
lds
mov
cs
adc
cmpsl
push
lahf
pushf
decl
mov
xor
les
ret
inc
mov
test
mov
push
xchg
je
call
mov
paddsb
jle
jmp
add
addl
lea
lock
sbb
xor
push
or
dec
shrb
pop
sub
es
je
push
dec
repz
pushf
outsl
adc
push
pop
pop
jb
in
mov
jge
lods
mov
jnp
inc
into
push
xor
mov
scas
stos
mov
sub
lahf
pop
loop
out
cmp
mov
insl
or
push
mov
sub
std
fadd
icebp
int3
nop
dec
sbb
ds
add
lods
into
sub
xlat
loope
xor
pushf
push
ret
jns
cmp
fisubs
mov
jo
insb
add
insb
stos
jg
push
fisubrs
std
push
mov
imul
mov
lods
pop
in
loopne
jb
dec
dec
cmp
loop
hlt
int3
or
sahf
movsb
stos
outsb
mov
fisubl
in
xchg
jg
jmp
inc
push
mov
inc
push
jns
lahf
mov
push
pushf
stos
jg
scas
adc
xchg
pop
or
js
stos
movsb
mov
adc
data16
int3
sbb
xor
aad
repz
in
or
daa
push
popf
std
sbb
add
mov
subps
fs
inc
mov
adc
xchg
data16
sahf
enterw
adc
or
cs
cmp
arpl
xchg
adc
mov
and
jl,pn
hlt
jge
cmp
jecxz
or
out
adc
xor
cmp
jl
xchg
sub
ret
jl
push
std
mov
xchg
fdivrs
cmpsb
xchg
popa
je
lods
decb
adc
int3
push
fistpll
pop
lret
rorb
xor
sub
loopne
sub
pop
mov
xchg
push
sbb
popf
xor
or
sub
pop
mov
jmp
mov
rcrl
shrl
cs
push
imul
fdivrs
aaa
xchg
adc
cmpsb
inc
sti
cs
mov
push
int3
daa
jnp
imul
nop
pop
adc
xchg
sarb
outsl
dec
xchg
pusha
sarl
jb
dec
fst
je
pop
cmp
rcrb
adc
lods
imul
push
or
ss
adc
fcoml
xor
inc
ret
cwtl
mov
icebp
mov
in
rcll
xchg
mov
xchg
push
mov
and
mov
jae
das
push
xlat
xor
cwtl
stos
subl
cmp
mul
jg
xchg
cmpsb
lock
cmp
jne
push
pusha
push
les
fs
mov
pop
mov
jno
pop
cmpsb
and
push
sahf
stos
mov
jge
mov
or
add
sti
cli
daa
das
push
sub
lods
push
push
lcall
mov
icebp
int3
or
aas
test
mov
cmp
or
leave
movsb
xchg
iret
push
std
rorl
aas
pop
aam
repnz
or
stos
dec
ret
xor
hlt
pop
sbb
mov
xchg
pop
movsl
pop
mov
rcl
lahf
cmp
adc
or
lcall
jge
jmp
addl
leave
stos
push
jae
pop
sub
sbb
aad
xor
leave
shlb
mov
jg
dec
mov
dec
sahf
js
pusha
inc
lahf
out
mov
add
ja
lcall
cmp
mov
xor
cmp
lea
fbstp
xorb
and
mov
add
push
leave
xchg
pop
fsubr
sub
lods
pop
cmp
mov
cmp
xchg
lea
loop
and
nop
call
out
fidivs
stos
in
jle
or
or
mov
repz
jecxz
jg
nop
scas
mov
insb
shrb
add
mov
fstps
inc
cmp
dec
dec
or
inc
mov
dec
ret
pop
fiadds
jb
cmp
mov
clc
outsl
leave
idiv
mov
dec
push
imull
xchg
dec
dec
in
xchg
mov
fnsave
outsl
xchg
ja
lcall
pop
test
decb
mov
scas
mov
push
jb
or
fnstenv
push
mov
out
addl
xchg
leave
mov
roll
pop
xor
leave
rcrl
xchg
into
mov
lret
imul
pop
dec
nop
movsb
fsubrl
push
xor
lods
shll
dec
test
andb
int3
bnd
ds
xchg
cwtl
push
xchg
stos
jo
cs
sub
dec
enter
sbb
shlb
push
rolb
jecxz
mov
inc
nop
sub
inc
orl
jge
sbb
decl
dec
dec
ja
decb
dec
test
loopne
mov
mov
rcrb
xchg
xchg
pop
popa
xor
cmpsl
and
push
cmpl
mov
and
xor
jmp
outsb
imul
sub
fldenv
clc
aam
outsb
sarl
jge
pop
inc
pop
mov
and
mov
arpl
push
add
adc
enter
jp
flds
popa
or
lods
jo
cmp
mov
ret
dec
sbb
mov
inc
pushf
aas
aas
mov
outsl
pop
scas
inc
jb
es
xchg
inc
jmp
jne
call
pop
add
clc
repnz
mov
pop
fnsave
adc
dec
incb
int3
loopne
bnd
inc
mov
scas
daa
mov
adcl
mov
xchg
push
inc
fs
cmp
or
pop
adc
fadds
dec
sub
mov
jecxz
jge
fiaddl
outsl
mov
jo
enter
mov
inc
les
add
scas
inc
mov
mov
xor
addr16
sub
xor
pop
pop
into
cli
jl
in
mov
enter
pop
pop
aad
xchg
fisttps
shll
and
jmp
data16
sbb
sbb
into
orb
cmp
iret
mov
les
push
mov
test
je
shll
lcall
sbb
rorl
insb
mov
add
addr16
lret
pop
movsl
jmp
add
stos
pop
insl
test
pop
push
sub
cltd
test
bound
push
fidivrl
inc
mov
mov
inc
pop
jg
pop
inc
out
push
fldl
sub
push
fnstsw
stos
ror
adc
sub
lock
inc
lods
mov
aaa
lods
stos
adc
jl
xor
add
sti
add
rorb
sahf
cwtl
jae
ss
jmp
adc
pop
mov
fs
mov
dec
push
push
je
lret
xchg
enter
push
pushf
rcll
sbb
in
leave
pop
ja
stc
out
adc
mov
aad
mov
pop
mov
or
leave
sub
or
lret
out
sub
loopne
push
sti
mov
pop
nop
cmp
cli
je,pn
sub
pusha
push
add
repz
out
pop
sub
mov
pop
sub
inc
jns
ljmp
jbe
mov
cmp
or
jp
ja
pop
sub
push
test
xorl
bound
popa
jo
xchg
hlt
xchg
outsl
insb
bound
mov
jle
dec
imul
mov
inc
aad
sub
cli
adc
push
jg
push
fisubrl
das
mov
jl
stc
cltd
popf
mov
xor
sbb
adc
cmp
sbb
jge
xor
mov
outsl
mov
fwait
stos
repz
je
rorb
xchg
fimuls
stos
mov
xchg
int3
mov
and
xchg
in
jp
jae
into
sbb
jae
incb
cmc
sub
fstl
push
sub
jbe
out
dec
into
movsb
test
pop
and
push
jne
dec
sub
bound
ds
or
out
add
adc
clc
mov
mov
sbb
xchg
insl
mov
mov
cwtl
push
stos
or
adc
inc
xchg
rolb
js
sub
cmc
mov
pop
or
xor
outsl
mov
xorb
pusha
dec
xchg
daa
loope
shr
mov
jmp
jns
in
or
mov
push
pop
and
xor
xor
hlt
jno
dec
loope
jp
and
cmpsb
dec
sbb
mov
or
fmull
cs
jb
testb
das
ret
jg
stc
xchg
sub
js
sub
pop
fistps
sahf
push
lds
push
dec
ja
mov
icebp
in
push
or
adc
stc
cltd
sbb
subb
cmpsb
clc
xchg
cmp
cltd
or
and
mov
jp
sub
js
aad
out
inc
mov
adc
test
testl
and
mov
fistpl
xchg
adc
adc
or
mov
cmp
sbb
iret
xor
jp
icebp
adc
xchg
cmc
cwtl
pop
mov
ror
mov
pushf
push
mov
cmc
iret
in
mov
orl
imul
jo
cmp
mov
inc
and
push
fsubp
dec
and
xchg
jnp
push
lret
stc
out
xor
mov
mov
call
add
outsb
out
lock
aam
sub
iret
in
and
icebp
idivb
pop
sbb
mov
testl
cld
inc
dec
ds
mov
out
fcoml
out
shrl
imul
call
ss
lods
cmp
fstl
inc
push
fistps
lcall
xchg
jb
cmpsl
xor
adc
jecxz
aas
ret
ds
sub
fs
cmpsl
adc
icebp
out
cmp
or
and
push
sub
js
rcrl
pop
inc
fidivl
rcr
ror
xchg
mov
pop
cmp
add
pusha
jmp
popf
and
cmp
cmp
movsl
sub
add
fwait
popf
mov
ret
jae
lahf
or
das
push
pop
xchg
cmc
shll
pop
sbb
inc
cmpsb
or
enter
icebp
cmp
loop
dec
xor
fildl
pop
in
out
sbbb
push
push
imul
push
jl
repnz
fcmovne
je
hlt
loope
push
pop
inc
addl
into
fst
jmp
andb
ja
add
xor
dec
xchg
sub
xchg
addl
out
aad
and
lret
je
ljmp
mov
test
movl
or
ret
or
aas
out
loop
pushf
mov
movsl
lahf
ja
mov
test
push
sbb
xchg
xchg
popf
stos
push
sbb
loope
ss
and
xchg
cmp
jge
mov
out
mov
pop
call
data16
arpl
dec
sbb
aaa
adc
mov
adc
test
lret
and
cmp
ja
inc
enter
lret
popf
es
mov
xchg
add
in
cmp
and
pop
pop
nop
mov
mov
sub
pop
dec
frstors
out
mov
sti
outsl
and
insl
dec
cwtl
shrl
push
fs
pushl
ss
std
loope
and
inc
lcall
outsl
cmpsb
push
xor
stos
add
pop
or
cmpsb
pop
fcompl
lods
mov
sti
into
dec
shll
mov
lret
mov
pop
test
in
jb
dec
mov
lret
shrb
jp
jne
stc
cs
loopne
xchg
xorl
enter
andl
pop
mov
mov
sti
push
cltd
lods
cmp
addr16
xchg
repz
xor
push
pushf
or
das
pop
push
jo
cs
adc
xchg
fs
cld
xchg
pop
sub
cmp
enter
push
out
pop
test
scas
dec
movb
fisubs
or
fldlg2
addb
jo
jmp
subl
jo
movsb
das
sub
fstps
cmp
ljmp
cmpsb
loopne
adc
pushf
inc
xchg
mov
xchg
adc
mov
xchg
js
shlb
sti
jmp
ja
and
jg
iret
mov
sbb
les
adc
jp
push
aam
aam
dec
lods
movsb
pop
cmp
mov
xchg
sbb
xchg
out
jmp
sub
sbb
rorb
mov
mov
popf
mov
push
je
add
fsubs
inc
inc
in
test
inc
imul
adc
andb
call
ret
xlat
cs
push
clc
cmp
add
cmp
mov
test
jecxz
mov
xchg
jno
pop
xchg
sub
jmp
jge
mov
xchg
pop
mov
repz
dec
mov
fisubs
mov
test
push
out
sahf
movsb
xchg
aad
cpuid
data16
fsub
and
push
mov
inc
dec
fwait
dec
push
hlt
movsb
pop
and
sti
aam
cmc
pop
sub
fwait
mov
mov
in
pop
inc
adc
pushf
bound
mov
adcl
sarb
and
xor
xor
fwait
mov
pop
and
mov
jge
movsl
mov
sbb
xor
cmp
mov
add
add
ja
sahf
je
mov
push
fimuls
int3
stc
pop
fdiv
mov
mov
xchg
aas
mov
fisubrl
aaa
and
push
movsb
cmp
mov
stos
pop
lcall
jecxz
sub
adc
adc
push
fs
shlb
cmp
sub
bound
outsb
outsb
stos
mov
mov
sub
ja
stos
pop
test
inc
xchg
pop
fisttps
mov
std
test
in
sub
lds
adc
hlt
push
rcll
inc
arpl
dec
or
and
repz
mov
push
out
push
cltd
imul
lods
mov
xor
fisttps
dec
sbb
push
ss
lods
addr16
rcrl
sbb
jmp
xor
cmpsb
pop
jmp
lods
add
push
jae
push
mov
mov
push
stc
in
and
mov
mov
add
aam
cmpl
jg
xchg
jmp
imul
push
cmp
mov
sub
popf
mov
cwtl
fisttpl
call
test
not
addr16
jmp
and
fdivl
out
sti
push
xchg
xchg
jle
jecxz
jge
jmp
sub
mov
mov
sbb
inc
mov
add
stc
jbe
jg
addl
xlat
cmpsb
mov
push
jl
ret
and
jno
cmpsl
dec
int
adc
jmp
pushw
fistpll
or
leave
je
cmp
mov
dec
sbb
outsl
dec
push
jnp
pop
imul
pop
std
imul
lock
dec
imul
mov
mov
insb
iret
push
sub
cld
mov
mov
rorl
dec
jnp
ss
shl
rorb
ja
jle
shrb
xor
popa
stc
fs
push
stc
repnz
dec
pop
pop
cmp
js
mov
mov
add
rcll
pop
lods
mov
orl
jo
ds
aas
inc
test
clc
inc
into
mov
jo
lret
mov
movsb
inc
xchg
mov
scas
mov
mov
xor
dec
sub
jmp
add
leave
hlt
cmp
imul
outsl
and
add
fisubs
mov
sbb
iret
pop
out
out
add
mov
push
repz
xchg
mov
cmp
out
fcoml
jmp
jg
pop
sbb
iret
int
jle
inc
pop
rcl
lea
test
daa
mov
data16
lods
subb
cmp
cli
xlat
mov
pop
movsl
insb
push
or
dec
jmp
ds
jle
movsb
clc
adc
sbb
stc
push
jmp
inc
push
add
fdivp
jl
sbb
xchg
inc
mov
repnz
loope
xlat
test
xor
dec
push
pop
jl
gs
and
test
pop
addb
cld
pop
xor
fwait
inc
dec
ret
xchg
loop
std
mov
jns
dec
lea
loope
mov
xlat
mov
jne
pop
pop
addr16
loop
in
sub
mov
pop
in
repz
daa
pusha
cld
mov
out
push
repz
push
jmp
push
inc
fbstp
cmp
out
jg
subl
xor
push
loopne
xchg
push
ret
pusha
cwtl
insb
push
fs
je
sub
ret
lea
ds
emms
push
outsb
dec
jb
ret
sub
lret
shll
xchg
xchg
movsb
or
mov
std
scas
mov
add
arpl
sbb
rcr
shll
insl
xchg
lret
inc
jmp
ret
cmpb
notb
lret
sub
in
les
imul
mov
xchg
push
loope
xor
mov
push
xchg
movsb
sbb
into
pushw
lret
repnz
and
lea
cltd
outsb
mov
pop
pop
sbb
mov
mov
cmp
dec
inc
fisttpl
or
sub
cwtl
das
xchg
lds
scas
fstp
popa
and
enter
or
int
imul
inc
jne
mov
mov
dec
sbb
shrl
sbb
cmpsl
push
cmp
out
xchg
jl
adc
faddl
fs
fcom
cmp
push
fsts
pusha
adc
inc
loopne
movsb
jmp
mov
or
and
test
inc
sbbl
xor
fcoml
pop
scas
sub
lods
push
mov
and
movsl
mov
lods
jmp
mov
ljmp
repz
mov
lds
push
int3
in
je
dec
lahf
aaa
mov
jecxz
mov
push
mov
jle
mov
inc
adc
or
mov
movsb
dec
add
mov
imul
mov
mov
imul
gs
adc
fadds
dec
pop
and
ds
or
stc
sbb
mov
shrb
push
mov
xor
arpl
mov
dec
orb
cmp
inc
rcl
out
in
mov
es
mov
mov
in
push
pop
mov
lds
pop
xchg
mov
pop
mov
mov
clc
cmp
push
dec
insb
mov
jg
jae
imul
les
or
and
ret
out
ljmp
imul
es
jge
xor
lea
stos
and
inc
push
pop
imul
adc
pop
mov
sbb
push
arpl
lcall
xor
push
rclb
pop
add
cmp
cwtl
lods
xor
stos
popf
into
fs
repnz
rclb
hlt
jg
push
push
sub
cmp
test
xchg
cmpsb
mov
fcmovnbe
popa
add
lock
mov
mov
xor
jmp
xchg
or
xor
je
sub
jb
add
xchg
fisttpll
xchg
sbb
and
mov
pop
lods
fldcw
jno
adc
xchg
into
sub
dec
sbb
into
xchg
ja
fwait
imul
push
das
lahf
cmp
mov
pop
mov
or
stc
xchg
sbb
adc
xchg
inc
movsl
sub
sub
jno
xor
jne
imul
int
repz
fldl
es
popa
jo
pop
adc
out
mov
add
jns
add
jne
pop
out
stos
and
sbb
lret
fst
lods
arpl
and
xor
push
sarb
xlat
and
lahf
loop
sbb
xchg
cmp
insl
out
lret
ds
inc
pop
shll
cltd
test
cmp
xchg
mov
or
mov
jp
mov
sar
sub
andb
sbb
pop
loopne
vmovaps
xlat
and
adc
inc
xchg
pop
sub
sub
and
je
fs
ret
or
xor
inc
inc
pop
cmp
adc
push
flds
clc
push
cmp
test
out
sub
sbb
lret
sub
inc
cs
or
gs
ror
or
lea
jge
jae
dec
jl
lcall
mov
rcl
pushf
cmc
adc
jno
xchg
add
mov
rorl
jb
test
xchg
cmpsl
or
mov
or
or
lahf
jno
adc
sub
cmp
cmp
push
mov
mov
nop
add
pop
roll
mov
ret
mov
fcomp
into
test
adcl
mov
jl
sbb
cmp
inc
fiadds
cmc
por
xor
xor
imul
mov
add
dec
jae
dec
call
out
je
inc
mov
inc
or
jmp
imul
mov
push
das
dec
loope
and
cltd
pusha
sahf
scas
sbb
jmp
mov
outsb
jle
je
pushf
dec
sbb
rcrb
mov
sub
jle
enter
and
mov
imul
pop
xor
lret
cmpb
and
inc
pop
nop
xor
shll
inc
ljmp
cli
outsb
test
shr
pop
out
sbb
jbe
adc
pop
jb
es
mov
cmc
sbb
jp
imul
mov
cmpsb
xor
insb
lods
mov
dec
pop
add
cmp
cmp
into
xor
push
pop
push
sub
lcall
inc
jbe
jmp
xor
imul
stos
and
sub
movsl
lds
insl
int
je,pt
jns
les
outsl
jle
ret
or
popa
jp
xchg
adc
ljmp
insl
mov
or
xor
xor
dec
pop
xor
adc
in
aad
and
fisubrs
dec
xchg
mov
loopne
and
loopne
insb
pop
data16
mov
shl
in
fpatan
adc
in
lods
rorl
incl
dec
mov
in
repnz
insl
adc
and
lret
and
cmp
push
adc
inc
out
push
js,pt
lods
das
jno
jl
jecxz
sbb
cs
mov
add
cmpsl
add
les
cmp
sub
inc
mov
ds
rolb
mov
adc
sbb
testb
cmpsb
mov
int3
fnstsw
add
jnp
clc
lea
sub
pop
imul
stos
jnp
sbb
inc
fimull
inc
daa
mov
ja
je
push
test
mov
incl
push
add
cmc
je
je
enter
or
popf
jp
lcall
and
scas
mov
pop
pop
sub
mov
pop
jo
or
mov
stos
or
push
or
xchg
push
in
mov
or
xchg
repz
lret
pop
push
mov
and
xor
test
or
mov
push
fwait
inc
sbb
lods
sub
pop
ret
mov
jns
sub
int3
test
data16
cmpsl
inc
sbb
ljmp
jge
xchg
xchg
outsl
in
into
and
movsl
aaa
pushf
jle
sahf
out
lock
mov
adc
subl
scas
ds
cmc
fistps
aam
sbb
lret
sahf
mov
xchg
add
fisubl
cli
mov
hlt
iret
sti
jg
lods
add
cmp
push
jo
movsb
push
pop
mov
pusha
cmp
jb
mov
mul
cmp
loope
movsb
inc
test
loope
mov
cwtl
ja
jae
test
dec
and
shl
and
fistps
lods
ret
test
inc
jmp
faddl
xchg
and
jbe
mov
test
inc
xor
in
jge
sbb
iret
pop
and
das
lods
ss
mov
test
int3
sub
in
adc
ljmp
data16
stc
add
or
ds
xadd
jbe
jg
fcompl
pop
int
shl
pop
mov
sbb
xchg
add
movsb
xchg
in
sub
and
mov
scas
mov
add
out
cmp
sahf
outsl
xchg
xchg
push
xchg
dec
fstl
push
xorl
mov
ds
xor
aaa
repz
jbe
or
jg
data16
jb
sub
popf
inc
cmpsb
xor
ds
aaa
call
pop
popa
and
fmuls
adc
dec
mov
shlb
dec
cmpsb
shlb
sarb
jbe
sbb
pop
push
popf
ss
cli
in
addl
das
jg
jge
xchg
icebp
mov
pop
enter
dec
or
rcl
mov
xor
push
and
push
hlt
shll
movsl
mov
mov
mov
adc
cmp
movsb
stos
fnsave
mov
add
fisttps
loope
es
mov
lret
dec
in
pop
mov
cld
sub
test
clc
ljmp
and
fnstsw
cmp
dec
push
rcll
pop
out
jns
dec
xchg
iret
test
push
sub
jmp
bound
retw
cmp
scas
mov
shlb
mov
rorb
mov
mov
mov
jmp
movsb
mov
stos
mov
jo
popf
stos
nop
jmp
cmp
push
dec
sub
xor
shlb
push
ds
ja
ja
dec
mov
inc
mov
pop
add
sbb
add
loope
sbb
inc
bound
sahf
in
dec
pop
inc
iret
pop
shlb
add
or
lds
pushf
dec
daa
sbb
loope
or
in
mov
sub
scas
cli
out
stos
add
in
push
jge
outsb
mov
jns
mov
pop
hlt
and
ret
jnp
pop
add
leave
sahf
in
insb
data16
xchg
imul
das
dec
mov
in
mov
adc
and
pop
jnp
test
sbb
out
xlat
ror
dec
xorl
fdivrp
xor
les
lock
clc
mov
std
dec
cmc
ret
sub
cs
push
jg
test
rcl
mov
adc
jmp
jg
int
out
jne
push
cld
int3
aad
lds
cmp
js
cmpsb
imul
add
push
mov
and
mov
fildl
icebp
push
shll
test
rorl
lret
cmpb
loopne
xchg
jecxz
leave
lcall
inc
mov
or
fs
mov
add
mov
add
nop
pop
mov
pop
inc
out
pop
stos
add
lods
scas
in
mov
sar
jnp
movsb
sahf
and
jmp
loop
repz
xchg
test
jae
sub
xor
fisubl
sub
push
test
cmp
les
fwait
pop
sbb
adc
cs
ss
cli
mov
call
sahf
test
cli
popf
lcall
lea
xor
push
push
lret
fisubrl
lahf
ljmp
popa
lods
pushl
adc
pop
call
jb
mov
sub
and
movsl
mov
cmp
xchg
push
bound
lret
xchg
outsl
out
je
lcall
xor
mov
out
push
push
xchg
xchg
dec
scas
mov
test
pop
mov
and
mov
scas
or
sbbl
jbe
and
mov
push
or
orb
jne
mov
sbb
mov
es
xchg
repz
fists
and
or
mov
or
stos
inc
icebp
mov
dec
dec
cltd
in
xor
push
iret
mov
cmc
mov
fnstsw
aam
mov
cmp
cli
adc
jp
xchg
adc
arpl
addr16
gs
mov
sbb
inc
or
mov
lods
push
jns
lret
in
out
fwait
ljmp
fdiv
mov
imul
jne
xchg
out
aas
movsl
pop
push
mov
iret
jge
sbb
xchg
aad
add
cwtl
mov
fs
pop
rolb
xchg
arpl
shlb
hlt
sub
loop
or
mov
jmp
jge
lret
and
dec
mov
stos
sahf
stos
mov
bnd
jb
mov
mov
loop
rorb
sbb
das
push
cmc
lods
or
push
jno
out
dec
test
rcr
inc
loop
or
mov
jne
imul
inc
or
jbe
pop
pop
lahf
clc
int
test
jno
xchg
popa
adc
pop
test
movsb
add
xor
fidivrs
cmp
test
mov
xor
adc
ja
icebp
or
inc
js
push
jb
adc
lods
add
loope
push
mov
and
ljmp
popa
imul
mov
mov
dec
ljmp
pop
cltd
and
sti
mov
mov
test
gs
aad
icebp
mov
sar
call
je
cli
aas
fcoml
pop
cmp
mov
cwtl
jne
dec
inc
lds
sbb
sbb
fistps
sbb
jns
ss
dec
push
jbe
cmpsl
sbb
sbb
in
mov
pop
cmc
push
test
pop
dec
stos
pop
sub
cltd
xor
pop
jp
dec
ret
nop
out
lret
mov
enter
dec
jle
in
pop
xchg
or
sbb
enter
mov
imul
cmp
sub
mov
push
xchg
sarl
adcb
andl
lret
mov
add
cmp
mov
push
dec
sub
or
jmp
andl
jl
mov
cmp
lret
cmp
mov
jl
mov
std
mov
shll
mov
jns
jecxz
inc
dec
mov
xlat
sbb
push
int3
iret
xor
push
sbb
cmp
out
push
jecxz
or
jne
or
push
pop
das
jg
mov
lods
add
addr16
sub
enter
adc
roll
cltd
push
inc
jg
arpl
sbb
xchg
daa
lret
xor
lock
add
xlat
mov
dec
cwtl
lret
test
add
mov
gs
mov
inc
pop
dec
outsl
dec
sbb
std
sub
add
adc
push
push
mull
lea
leave
xchg
call
sub
enter
ret
ret
push
push
adc
daa
mov
shll
sahf
cmc
hlt
push
push
mov
sbb
mov
ficoml
xlat
inc
in
cmp
loope
and
pop
xchg
sub
lret
xor
inc
xchg
xchg
push
movsb
jmp
xchg
sub
outsl
mov
sahf
fildl
mov
xchg
rcrl
pop
push
addr16
in
push
or
adc
les
and
sbb
sbb
cmc
xor
sbb
test
lahf
std
jmp
jmp
iret
loopne
cwtl
sahf
fsubrs
push
jo
pushf
popf
sub
aas
in
cmpsl
lea
dec
push
outsl
mov
bound
pop
adc
lds
pop
ljmp
mov
cmpl
dec
sub
cmp
rcrb
jnp
std
mov
ret
jmp
inc
inc
decb
xchg
pop
xor
xchg
mov
subl
sbb
shll
lock
mov
mov
addr16
dec
data16
cltd
xchg
scas
imul
jb
push
dec
xchg
fnstcw
pop
jno
or
mov
xchg
sub
or
add
xchg
repz
push
int
dec
jno
jae
loop
insl
imul
add
in
rclb
mov
sbb
sub
xchg
dec
mov
lock
jo
dec
jo
or
sub
out
mov
iret
mov
imul
ljmp
push
shlb
adc
sbb
xor
mov
mov
adc
test
fwait
cmc
int3
test
pop
inc
xor
ficomps
fucom
aaa
sbb
popa
icebp
adc
jmp
pop
xchg
outsb
cmp
test
call
adc
cmp
push
fsts
push
inc
mov
cmp
jb
lods
mov
mov
mov
mov
push
cmp
cmp
pop
notb
adc
pop
push
xor
sti
insb
decb
mov
dec
push
bound
pushf
push
xchg
cmp
inc
mov
dec
faddl
je
mov
popa
mov
arpl
cmp
movsb
jp
movsb
lret
sub
lods
xchg
pop
movsb
mov
or
outsb
scas
ss
jle
pop
push
or
mov
mov
jne
stos
inc
rcrb
and
icebp
shlb
inc
or
sub
aas
insl
fs
mov
xchg
mov
push
xchg
pop
and
or
jge
and
aas
mov
xlat
sbb
mov
fmuls
cmp
test
imul
dec
dec
int
lcall
lods
sbb
mov
jmp
stc
push
adc
les
ficoms
sub
mov
scas
iret
sub
pushf
into
mov
push
mov
in
int3
or
jnp
popa
stc
outsl
pop
daa
cmc
test
cmp
pop
pop
push
lahf
sub
push
movsb
jno
and
scas
mov
cmp
push
scas
dec
jmp
inc
jge
mov
arpl
enter
or
cltd
mov
rclb
add
inc
pop
jb
or
pop
mov
jns
test
sbb
mov
js
data16
pop
pop
pop
bound
jns
push
mov
inc
outsl
mov
sbb
jmp
cmpsl
fs
in
dec
add
mov
cmp
stos
push
jmp
gs
cli
lds
add
sub
push
push
jle
sti
add
arpl
push
addl
fnstsw
or
ljmp
ja
cmp
push
mov
mov
hlt
cltd
punpckhdq
jmp
push
out
pop
mov
cmc
mov
or
pop
add
add
lahf
jo
scas
sbb
xor
jecxz
lock
adc
lods
or
mov
sbb
mov
lods
stc
cwtl
inc
leave
mov
cmpsl
push
scas
call
push
or
inc
repnz
push
push
pop
fs
inc
or
jb
mov
js
cmpsb
int
enter
fcomps
ret
xchg
movsl
adcl
and
out
loopne
mov
mov
iret
and
xor
inc
inc
adc
inc
and
jge
cmp
jne
add
jbe
mov
xor
xchg
jbe
repz
div
das
mov
xor
jnp
push
xor
push
inc
lock
pop
mov
sbb
negb
xchg
inc
or
ljmp
or
mov
sub
sbbb
flds
mov
cmpsb
lahf
sbb
cld
mov
mov
jae
fcmove
enter
cmp
mov
fs
mov
and
aas
ljmp
xor
faddl
std
stos
jnp
in
jne
adc
nopl
or
sbbl
shl
add
in
test
fwait
int
nop
or
out
mov
xchg
sahf
rol
push
notl
or
loope
mov
cwtl
mov
adc
push
in
leave
dec
jns
lcall
inc
pop
or
dec
adc
pop
outsl
and
js
lret
popa
rcl
sub
lea
lods
ficoms
pop
mov
imul
das
mov
xbegin
add
jg
pop
dec
repnz
mov
or
jnp
ds
or
idivb
push
imul
sub
jnp
pop
aad
int3
insb
pop
sahf
ljmp
fwait
cmpxchg
pop
outsl
jae
jmp
fdivrs
pop
gs
cmp
mov
lock
inc
cmp
inc
jp
mov
call
jae
cmp
fcomps
xor
pop
jmp
lcall
pushf
cwtl
fcmovnb
xor
sub
adc
ljmp
ret
xor
ret
jno
xor
aam
icebp
jg
xchg
scas
mov
jl
add
push
lret
loop
leave
cli
add
mov
cmp
cmpsb
std
lods
mov
addl
std
push
insb
test
popf
pop
es
ds
insb
lret
push
pop
mov
in
sub
loope
int3
mov
shll
test
jb
lods
pop
mov
sub
hlt
loop
xlat
movsl
clc
mov
movsl
or
dec
mov
and
push
scas
insl
arpl
mov
stos
push
mulb
push
and
sti
lods
xchg
loope
pop
icebp
test
xchg
ja
fs
jns
int
cmp
inc
mov
int3
mov
fstps
hlt
sub
ss
cli
and
ftst
outsb
pop
push
lock
pop
imulb
into
dec
mov
nop
imul
xor
mov
sbb
jns
pop
mov
push
cmc
push
nop
das
mov
xchg
adc
pop
sbb
adc
pop
inc
and
xchg
inc
and
dec
outsl
das
mov
jl
test
adc
inc
cltd
in
mov
int3
icebp
push
or
ja
rol
leave
inc
addl
or
les
es
mov
pop
les
lahf
jecxz
sub
outsb
ret
pop
mov
jp
arpl
sahf
mov
lret
fidivrl
out
push
push
lcall
mov
dec
jl
test
jb
fnstcw
mov
push
xchg
scas
jnp
outsl
mov
nop
sub
adc
fs
aam
push
mov
or
mov
or
push
mov
cld
adc
pop
xchg
mov
mov
xor
shlb
adc
or
cltd
int3
xchg
fisttpll
mov
mov
xchg
test
iret
imul
loope
push
jl
sti
lcall
adc
pop
int3
pop
mov
mov
je
dec
pop
jle
into
sub
rorl
clc
add
sahf
or
add
fisubrs
ja
adc
je
aaa
cmp
xchg
push
in
sti
out
ljmp
enter
jecxz
rclb
cmp
cli
push
dec
fisubs
ja
inc
jno
push
rcl
lock
es
pop
pop
fdivrs
push
js
push
call
push
test
nop
inc
stos
cmp
fildl
xorl
ds
ds
les
sub
inc
pop
sub
nop
xchg
std
pop
or
cli
mov
jmp
xchg
adc
sub
js
pop
out
pop
dec
mov
xchg
mov
insb
push
sbb
xor
fmuls
inc
xor
sub
into
shll
mov
sbb
sub
je
mov
jp
jmp
xchg
fstp
rep
stc
rorl
lock
push
data16
mov
out
cmp
and
int3
mov
cmpsl
in
aas
mov
insb
push
pop
sbbb
fucomp
or
shll
fsub
cld
sub
shlb
pop
mov
jno
ljmp
push
inc
popa
repz
pop
xchg
adc
repz
xor
jl
pop
ja
adc
outsb
dec
mov
out
jle
push
lcall
pop
xchg
loop
xchg
negb
inc
gs
movsl
repz
lods
mov
xor
movsb
dec
and
xor
mov
inc
jg
mov
cmp
stc
out
sbb
xor
or
pop
call
loopne
adc
xchg
pop
ja
daa
shll
call
mov
aaa
mov
sbb
mov
loope
xor
orb
mov
stos
fwait
in
dec
add
cli
add
dec
stos
outsl
adc
cmpsb
mov
out
xchg
sub
adc
mov
dec
fstpt
mov
outsb
loop
add
sbb
pop
dec
inc
out
ss
sarb
sti
mov
xor
mov
push
pop
lcall
adc
xchg
faddl
daa
fiaddl
shl
jne
lret
sub
iret
iret
lock
push
gs
cmp
jle
gs
mov
cmp
inc
mov
dec
and
jmp
lret
lock
stos
icebp
test
jg
clc
pop
pop
stos
in
or
pop
add
int3
ficompl
mov
or
sbb
inc
mov
push
call
add
inc
mov
fisubrl
and
mov
call
mov
aad
mov
dec
push
pop
mov
jmp
cmc
sub
mov
scas
pop
clc
pop
imul
lcall
clc
andb
shlb
xchg
decb
scas
jge
loopne
jb
loope
shl
pop
add
mov
mov
adc
test
aam
aas
cmpsb
xor
push
leave
movl
mov
aad
int3
das
ss
mov
icebp
sub
sub
es
pop
xor
mov
adc
xor
inc
xchg
das
inc
sbb
fcompl
mov
addr16
xor
out
push
arpl
xor
dec
pop
pusha
imul
and
adc
and
rolb
and
sbb
sbb
xor
incl
sbb
sbb
mov
notb
jp
add
sahf
push
rclb
pop
hlt
out
mov
ljmp
pusha
inc
divb
cs
ljmp
mov
push
test
pop
xlat
ret
pop
pop
pop
lds
in
push
push
jmp
dec
fsubrp
in
sub
and
mov
sbb
mov
mov
add
push
inc
cmovbe
jnp
adc
mov
scas
sub
mov
in
push
mov
hlt
hlt
adc
in
xor
dec
int3
mov
outsl
mov
sub
pop
rclb
stc
mov
int
out
push
mov
sbb
inc
cmp
inc
ja
insl
mov
inc
mov
aad
cltd
and
xchg
add
fldenv
mov
cmp
adc
jecxz
mov
roll
lock
or
and
aas
dec
pushf
mov
mov
push
sub
dec
mov
cltd
lret
cld
push
mov
sbb
insl
stos
dec
xor
jl
mov
repnz
scas
hlt
repz
lcall
adcb
mov
add
jno
sahf
pop
dec
pop
mov
int
add
xlat
ds
mov
mov
sbb
mov
mov
push
int
mov
test
iret
repz
and
es
mov
xor
mov
pop
pop
xchg
dec
pop
fwait
xchg
ja
add
jns
out
add
testb
loop
xchg
or
fxch
pop
sarb
pop
int
pop
aad
add
loopne
mov
cltd
adc
repz
jmp
xor
subb
mov
adc
or
aaa
or
fstp
cmp
push
ficomps
mov
es
imul
popf
xchg
imul
push
in
or
scas
leave
and
in
cli
pop
cltd
sahf
aam
lahf
leave
mov
sahf
mov
pop
mov
jno
adc
in
sbb
adc
xor
mov
call
lods
ss
lock
shll
push
stc
lcall
mov
in
push
ljmp
insb
and
pop
mov
add
cmpsl
xor
sub
cmpsl
int
xor
test
mov
mov
mov
jge
int
nop
dec
mov
outsl
imul
adc
arpl
pop
popa
inc
iret
fs
inc
inc
mov
add
das
xchg
xchg
outsb
sbb
cmp
add
popf
xor
mov
bound
pop
adcb
mov
repz
int
xlat
xlat
and
addr16
jbe
mov
lods
adc
and
pusha
inc
fsts
xchg
gs
leave
aad
popf
add
sub
push
xchg
hlt
aaa
sub
lret
fisttpll
insl
cmp
dec
sbb
mov
push
popf
fists
mov
mov
jle
xlat
stc
das
mov
gs
iret
xchg
xchg
cmp
fadds
cwtl
lea
mov
mov
shlb
in
loop
jp
cmp
add
pop
xor
mov
loope
subb
mov
jno
cmp
imul
add
in
js
dec
pop
ja
hlt
add
jo
push
mov
or
jb
mov
sbb
rclb
iret
mov
cmpsb
pop
mov
scas
pop
popa
sbb
or
sahf
xchg
jge
mov
or
pop
in
pop
rol
inc
mov
dec
inc
inc
jnp
repnz
fldt
in
mov
push
movsl
adc
mov
pop
sbb
repnz
jecxz
mov
or
xor
jmp
imul
aas
or
pushf
xchg
les
mov
push
jecxz
pop
cmpsb
int3
mov
loope
andb
cltd
dec
pop
sub
lock
repz
cmpsl
out
fstpt
jae
jmp
stos
out
mov
adc
or
sbb
enter
jle
pop
lds
insl
cmp
js
pop
mov
adc
inc
ja
int
inc
sti
jecxz
adc
sti
ret
rcrb
sub
dec
mov
mov
push
out
loop
data16
aaa
gs
fwait
jae
mov
inc
loopne
cmp
and
shlb
sub
clc
divl
popf
ds
sub
jno
or
add
das
test
push
jp
xchg
fdivs
fwait
sbb
jne
xor
inc
push
dec
push
pushf
mov
or
out
cltd
hlt
xor
jge
hlt
outsl
pop
adc
mov
stos
in
iret
mov
push
cltd
popa
dec
push
cltd
dec
orb
pushf
loop
xchg
xchg
jl
fs
sub
and
lret
push
xor
add
cld
or
gs
fldt
sbb
or
mov
dec
jae
ss
xor
jb
ret
push
pop
insb
push
xchg
scas
in
and
fildll
pop
add
lods
mov
pushf
scas
fidivs
adc
nop
cmpsb
outsb
movsl
xchg
cmp
adc
repz
xor
mov
loope
mov
mov
lds
sbb
cli
xor
xchg
ret
xor
lret
jb
insb
test
into
cmc
inc
movsl
or
push
jns
push
int
sbbl
jmp
mov
adc
aaa
pop
jecxz
xor
ja
out
in
jmp
lret
sahf
movl
xchg
cmp
xor
aas
lahf
andb
jnp
mov
xor
cmp
cmp
ja
mov
in
cltd
xlat
mov
jg
fldt
sub
pop
cmp
test
mov
aam
xor
mov
insb
sub
lcall
cs
pop
out
pop
sarb
aaa
xchg
or
mov
pop
ficoml
pop
aad
pop
xchg
out
movsl
ror
or
imul
lods
ljmp
inc
shl
jge
inc
sbb
and
in
stc
scas
push
lds
xchg
mov
nop
out
mov
adc
sbb
pop
aad
lcall
inc
nop
mov
push
cmp
popf
pop
xor
mov
cmp
push
pop
mov
pop
es
fmull
clc
inc
dec
cmpsl
ljmp
sti
and
mov
or
std
shlb
insl
popa
sub
mov
push
adc
mov
aad
cltd
sub
push
mov
lahf
es
fs
out
push
test
jmp
add
lret
dec
cs
scas
out
adc
lods
xchg
jecxz
or
or
imul
jmp
xchg
and
leave
sub
enter
pop
inc
fimuls
add
cmpsb
mov
repnz
pushf
sbb
sahf
jmp
addr16
cmpb
and
sub
repnz
jmp
adc
jp
insl
jp
xchg
hlt
movl
and
pop
jl
lods
lds
mov
fcmovb
jle
jo
dec
loope
insl
addr16
pusha
lea
arpl
sahf
lret
inc
cmpsl
cmp
aas
adc
lret
mov
ja
iret
dec
jecxz,pt
sub
into
sub
mov
push
dec
mov
dec
inc
dec
fdivr
push
mov
outsb
and
pop
loop
xor
mov
sbb
xchg
cmp
and
xlat
or
mov
fiadds
jo
das
adc
push
out
cmp
out
test
cmp
mov
push
outsb
dec
cld
and
je
adc
out
or
mov
adc
call
or
sbb
mov
shl
fldenv
mov
dec
mov
sbb
lahf
cmpl
cmp
mov
ss
jg
shrl
jo
push
jb
adc
in
sub
in
cmc
mov
adc
sbb
stos
push
sbb
push
pop
push
stos
cltd
inc
add
hlt
inc
call
inc
cmp
cld
rolb
sub
ret
jno
xlat
sub
ret
and
inc
call
add
ret
movsb
ror
ret
fmuls
pop
and
dec
add
fdivrl
and
dec
inc
pop
scas
fldl
mov
bound
jo
cmp
rclb
jo
jne
push
ds
les
add
divl
cltd
and
popa
aam
test
xor
gs
and
add
in
jnp
and
pop
ds
mov
mov
pop
fmull
scas
cmp
ss
data16
into
adc
dec
inc
mov
xchg
es
pop
lahf
fsubl
lret
or
pop
arpl
mov
jb
add
mov
cwtl
nop
or
and
imul
mov
xor
push
or
cmc
iret
and
cmp
pop
jo
movsb
mov
push
loope
inc
pop
insb
notb
es
call
je
fistl
loope
pop
mov
mov
mov
stos
icebp
mov
gs
std
push
test
pop
mov
gs
rcrl
daa
xlat
lahf
mov
and
cltd
cmc
mov
xor
out
xchg
dec
mov
push
push
nopl
adc
test
xchg
in
xor
sbb
in
outsl
jbe
imul
cmp
push
test
xlat
clc
loopne
icebp
add
push
dec
inc
push
mov
lods
int3
enter
cmpsb
adc
lret
inc
inc
cli
sub
bound
iret
notl
add
jmp
ljmp
jp
mov
jno
push
das
fidivs
xor
and
inc
gs
out
mov
sbb
adc
mov
add
xor
cmp
or
pop
popf
push
das
lea
nop
or
stos
mov
lcall
mov
fisttpl
lods
ja
mov
push
inc
or
mov
hlt
xchg
and
jge
add
pop
sbb
mov
gs
repz
pop
insl
mov
cmc
pop
sahf
dec
push
ja
cs
int
fwait
jno
insb
and
xchg
addb
xor
dec
arpl
imul
lock
xor
adc
ret
mov
clc
adc
xchg
mov
xchg
aad
cmpsl
mov
dec
mov
push
or
jecxz
push
add
inc
mov
dec
ds
mov
cmp
xchg
inc
and
es
subb
mov
std
inc
repz
and
push
push
dec
pop
iret
fldl
inc
inc
sbb
mov
adc
and
arpl
fcompl
cltd
push
pop
push
mov
jle
jns
in
stc
adc
and
iret
subb
cmp
ficoms
in
xor
dec
lock
xor
cwtl
arpl
or
xchg
lods
add
inc
adc
xlat
lcallw
not
paddb
sbbl
fisubrl
and
leave
mov
add
pop
jae
sarl
mov
push
xorl
lods
mov
out
pusha
xchg
sti
std
mov
repnz
push
and
adc
call
lock
cs
shr
in
dec
mov
out
xchg
jp
inc
nop
mov
repnz
je
mov
insl
pop
out
adc
frstor
lds
cmc
pushf
lods
add
clc
addr16
test
inc
pop
dec
cmp
xchg
sbb
push
ja
adc
mov
dec
fstl
jp
cmp
imul
jle
out
add
xchg
sub
stos
cmp
cli
mov
jmp
mov
nop
shrd
outsl
test
addr16
mov
xchg
push
in
xor
xchg
gs
sub
out
and
movsl
jo
lea
popf
xor
jl
ja
adc
das
loopne
or
popl
adc
xchg
std
push
xchg
ficoml
jno
test
test
filds
pop
push
test
jg
fcompl
jg
arpl
dec
call
sub
call
inc
fildll
shl
rcl
jl
inc
xchg
addb
outsl
imul
jg
lret
loopne
add
in
daa
ret
das
test
cmc
ds
std
and
data16
sub
xor
inc
leave
shrb
mov
sub
xor
inc
decb
jmp
jge
popa
xor
in
dec
jns
shlb
jbe
mov
mov
push
adc
rolb
pop
andb
fldl
fisubl
mov
fwait
pop
pop
jmp
dec
icebp
xchg
or
test
jecxz
sub
icebp
shlw
jmp
sub
imul
dec
pushf
dec
stos
lods
insl
dec
dec
les
cmpb
outsb
sub
xchg
inc
xchg
push
dec
mov
test
adc
ss
jmp
push
cmpsb
inc
sub
push
cmp
push
mov
sbb
xor
sbb
cwtl
popf
imul
stos
les
stc
mov
mov
xchg
push
cmpsb
movl
mov
xchg
push
pop
jnp
adc
mov
pusha
imul
aad
lods
sub
adc
inc
xchg
iret
iret
and
movsl
sbb
sbb
inc
or
cmp
dec
shlb
ja
out
sbb
push
push
mov
fbstp
mov
pop
push
lcall
and
int
jmp
imul
inc
xor
pop
push
outsb
cwtl
sub
push
add
cmp
pop
insb
xlat
jnp
mov
mov
iret
inc
lret
mov
sbb
in
shrb
xchg
in
sbb
dec
dec
or
push
push
adc
mov
dec
inc
aam
push
and
icebp
pop
test
pushf
clc
stc
pop
adc
lods
ficoml
sahf
lcall
pop
and
sbb
shrl
push
inc
jmp
hlt
jb
addr16
mov
in
aas
adc
adc
jl
ret
repz
pop
testb
stos
xorl
into
shll
mov
in
icebp
xchg
call
mov
out
xchg
adc
shrl
fs
jbe
enter
nop
int
inc
xchg
out
push
fs
call
mov
mov
aad
or
dec
ja
lock
jbe
cld
int3
movsb
push
orl
fs
push
jne
ja
insb
sarl
jo
cs
and
dec
mov
sbb
or
cwtl
imul
pop
dec
addr16
repnz
shrb
xchg
cmpsl
cmpsb
push
jecxz
imul
sbb
mov
cmp
call
scas
mov
lods
aas
add
fisubrl
in
add
mov
movsl
call
out
mov
xchg
lds
data16
dec
sarb
movsb
xor
mov
aad
add
and
xchg
mov
mov
mov
xchg
inc
push
test
je
and
sub
sub
inc
inc
addr16
or
pop
jg
mov
movsb
loop
test
and
fcmovb
or
mov
xchg
lcall
ret
jge
fisttpll
stos
shll
push
rcrl
daa
in
dec
loopne
jg
pop
gs
dec
iret
pop
ret
stos
mov
aas
dec
mov
push
dec
dec
stos
mov
pop
test
js
adc
hlt
jg
ret
gs
xchg
push
lea
or
adcl
pop
push
addl
jnp
push
gs
xchg
mov
xor
je
sbb
xchg
xlat
fdivs
popf
iret
mov
sub
fsubrs
xchg
or
stos
lret
mov
lcall
cmp
imul
enter
inc
and
hlt
fidivrs
and
mov
sbb
and
dec
cmc
dec
sub
push
jl
jle
loopne
mov
fimull
lock
sbb
mov
cmp
mov
and
mov
aas
je
mov
inc
imul
mov
mov
test
push
dec
fs
inc
mov
push
cmp
sbb
ja
addr16
popf
jns
sub
in
push
sbb
mov
or
das
dec
jmp
nop
pop
mov
mov
push
cwtl
add
cmp
lret
mov
aas
mov
and
bound
aas
stos
stc
and
pop
jg
iret
inc
mov
les
sub
cli
mov
sbb
jbe
sbb
dec
lret
cmp
aam
jle
gs
cltd
ret
fbld
test
jo
nop
or
jecxz
and
inc
in
sbb
xchg
pop
cs
xor
ja
and
xchg
jns
inc
cmp
sbb
jns
push
or
popa
xchg
pop
adc
mov
and
scas
fwait
nopl
and
bound
lcall
pop
fsubl
out
rcrb
inc
enter
push
pop
ss
cmpsb
mov
stos
jns
fcoml
pop
dec
cltd
pop
push
mov
jne
shlb
or
ds
inc
jo
in
mov
cmc
inc
fisubs
jg
cmpsl
enter
mov
addr16
call
sub
lea
add
js
aaa
mov
and
pop
jns
sub
jno
fsub
add
jge
jmp
xchg
fimuls
sbb
push
fwait
sub
faddl
or
inc
and
sub
mov
xchg
cmp
pop
lock
adc
pusha
js
sub
xchg
jno
push
push
xchg
mov
ds
xchg
jp
xchg
jno
push
imulb
inc
hlt
sahf
pop
inc
and
repnz
xchg
jp
mov
hlt
sub
stos
jge
push
and
jnp
mov
push
mov
add
xor
ffree
out
mov
aad
ja
das
cmp
call
mov
push
xor
fdivl
sbb
addps
pop
push
xchg
push
repnz
jecxz
cmpsl
jae
in
fisubrl
mov
or
divps
adc
fimuls
pop
popa
imull
sbb
nop
pop
imull
test
and
les
mov
adc
dec
add
sub
fistpl
xchg
idivl
and
sub
loop
and
mov
addr16
xor
inc
cmpsb
nop
fimull
xchg
jl
je
xor
test
dec
and
adc
jle
xchg
pop
repz
push
sub
or
pop
mov
jmp
xchg
push
jno
sahf
ret
mov
mov
sti
push
movsl
inc
stc
push
pop
sub
cli
jmp
or
ret
mov
sbb
sub
inc
cmp
adc
fucomp
jbe
scas
xor
clc
inc
push
xchg
pop
lret
fdivr
imul
gs
add
cld
mov
pop
xchg
faddl
cmpsl
insb
popl
sbb
jg
mov
and
sarl
arpl
fnstsw
sbb
hlt
lds
aam
add
fldpi
ret
or
mov
dec
fbstp
sub
lds
inc
into
add
mov
add
in
fwait
sbb
cld
pusha
mov
mov
dec
imul
sub
aam
xchg
in
push
mov
jle
add
mov
arpl
test
xor
ret
test
loope
pop
sbb
jle
xor
lret
xchg
jne
push
inc
imul
inc
loopne
gs
jecxz
or
xchg
pop
xor
and
add
js
sub
xchg
test
jg
jo
es
mov
mov
das
pop
xchg
insb
jo
pushf
push
popf
and
mov
fcomps
mov
mov
xor
jge
das
std
je
dec
inc
lds
aas
cld
jecxz
mov
mov
mov
push
xor
dec
test
scas
rorl
push
nop
pusha
adc
xchg
out
xchg
push
sbb
sub
mov
gs
jp
sbb
adc
push
lcall
mov
xor
cltd
inc
sub
into
xor
pop
fcomp
loop
mov
sbb
jo
hlt
or
ja
jns
fnstsw
inc
sbb
mov
test
add
insb
lods
mov
outsb
and
mov
xor
out
or
jno
andb
mov
out
push
push
stc
les
movsl
andl
movsl
adc
jbe
cmp
push
lret
shll
sahf
ds
cmpl
pop
sarl
aad
xor
xchg
aaa
stos
idivl
les
pop
aam
pop
inc
xchg
call
push
jle
les
sub
jae
out
inc
filds
jns
sysret
fs
inc
test
push
leave
jmp
mov
dec
pop
std
test
stos
aaa
sub
adc
xchg
or
das
outsl
repnz
xor
imul
dec
lods
call
ja
jmp
add
ret
out
mov
out
je
xchg
jg
jae
out
popf
sbb
xchg
roll
mov
mov
cmc
or
xor
jp
shlb
andb
mov
sbb
div
pop
sarl
inc
dec
jecxz
add
mov
pop
jne
outsb
or
sub
xchg
repnz
mov
mov
jb
add
in
ret
repz
ja
push
insb
jne
repnz
fists
mov
inc
lods
scas
pop
cmp
mov
inc
add
shll
mov
add
sbb
pop
or
sti
stos
enter
push
nop
out
and
inc
mov
cmpsl
mov
pop
and
test
jbe
push
xlat
push
mov
xor
push
jne
stos
adc
inc
lret
cmpsl
addr16
jecxz
pushf
xchg
sbb
aam
icebp
jnp
lods
arpl
lock
xor
xchg
cltd
movsl
jmp
test
and
mov
pushf
xor
push
and
stos
push
ja
cmp
ja
sbb
imul
xor
cmp
pop
imul
and
or
pop
std
out
sub
push
outsb
mov
push
pop
mov
dec
out
movsl
sub
mov
cltd
mov
cmp
xchg
fwait
gs
xorl
out
jmp
je
inc
sub
fmul
and
xchg
or
unpcklps
dec
ds
push
lods
mov
lods
insb
int
mov
sbb
sub
mov
addr16
divl
sub
and
aam
pop
rclb
cmp
aaa
pushfw
into
es
ficoml
inc
push
outsb
into
mov
dec
cld
mov
popf
xchg
fsubs
jp
ret
add
jmp
push
sbb
loop
mov
adc
pop
sub
cmp
xchg
ret
repnz
sbb
shl
stc
jge
adc
cmpsb
test
push
xor
rolb
cld
or
xor
and
jne
pop
test
sbbb
dec
cmp
pop
test
int
sbb
rcl
push
adc
sti
inc
shll
xchg
add
inc
lds
negl
std
jmp
fsubrs
xchg
sar
les
push
fsubrs
adc
mov
dec
mov
pop
jecxz
jecxz
jns
mov
pop
adc
jbe
pop
shll
sti
push
into
xor
in
mov
push
and
pop
jmp
add
fisubs
xor
mov
shrb
mov
jle
dec
jne
jl
xchg
lret
sbb
fcompp
in
push
mov
sub
mov
scas
xchg
fsts
test
outsb
fwait
push
and
lcall
jmp
mov
jo
cld
pop
aam
loopne
dec
jmp
mov
jne
dec
add
jp
and
cmp
fidivl
xlat
mov
jo
test
data16
push
mov
jo
pop
dec
mov
inc
lret
icebp
jp
pop
inc
and
push
fdivl
aad
mov
xchg
imul
shrb
aas
or
push
nop
stos
sti
pusha
movsb
out
in
mov
jmp
insb
fsubr
mov
jno
xor
les
pop
or
je
sub
or
mov
mov
inc
imul
or
and
adc
sub
pop
in
lods
lret
loop
in
pop
or
les
inc
loopne
insb
sbb
ret
ds
insb
vmovss
int
movb
fwait
jns
fldl
cmpsl
sub
test
xorl
ja
out
cli
sahf
sbb
mov
push
adc
inc
fidivrl
sahf
and
cmpsb
push
cmp
cmc
mov
dec
cmpsb
into
jns
mov
imul
mov
mov
loop
in
divb
cmp
mov
adc
fwait
loope
jno
cmp
leave
inc
sub
and
mov
icebp
sbb
inc
dec
pop
jo
jmp
dec
push
andl
inc
cmp
lahf
dec
and
jnp
adc
mov
xor
jecxz
test
mov
fistl
test
add
in
push
fsts
mov
jo
insb
das
jecxz
imul
cmp
stc
insb
stc
sbb
cld
test
fwait
jg
xchg
inc
cmp
es
ret
mov
fwait
and
mov
xchg
rorb
and
mov
sub
bt
push
xor
jecxz
addl
prefetcht2
fs
xor
pushf
dec
popf
inc
mov
mov
les
mov
adc
mov
insl
xchg
cmp
js
lock
dec
in
imul
inc
mov
ss
push
mov
push
movsb
out
leave
std
stc
pop
jbe
mov
jle
inc
jle
jo
fmuls
imul
dec
cmp
xchg
jecxz
sahf
je
push
das
inc
lret
int3
mov
bound
adc
out
adc
imul
sahf
ja
pop
or
dec
clc
repz
mov
adc
jecxz
pushf
jnp
nop
mov
data16
adc
and
inc
adc
in
add
xor
or
sbb
jo
push
lret
inc
lods
sahf
mov
push
inc
sub
lahf
dec
hlt
fsubrp
ljmp
ja
imul
xchg
pop
outsl
int
rcll
or
inc
mov
mov
fsubl
inc
in
dec
test
mov
cmp
pop
mov
enter
fnsave
ffree
gs
rcrb
mov
xlat
inc
enter
jg
popa
xchg
push
add
lods
xlat
sub
stc
xchg
xor
popf
inc
divps
les
sub
dec
add
daa
outsb
inc
jo
faddl
cmpl
shl
nop
fiaddl
pop
or
mov
add
cld
adc
adc
cmp
inc
scas
mov
movsl
cmp
push
shrb
dec
movsb
leave
mov
test
add
lret
jb
mov
sbb
gs
and
jmp
fcmovu
xor
or
vmovaps
outsl
mov
std
lock
icebp
cmp
testl
add
emms
cmpsb
jmp
aam
roll
mov
fwait
dec
aam
std
out
sbb
movsl
adc
adc
jecxz
xorb
into
mov
aam
or
std
sti
xor
push
jecxz
xchg
sub
dec
push
popa
fdivr
bound
xchg
inc
daa
pusha
sahf
lahf
adc
mov
cmpsb
mov
lahf
fistpll
std
mov
outsl
outsl
es
mov
xor
test
inc
clc
xchg
ret
lcall
adc
sahf
insb
mov
fcoml
sbb
push
push
hlt
test
xor
adc
aas
and
sub
or
dec
sarb
int3
dec
mulb
shl
mov
lcall
cs
loop
call
adc
jae
icebp
cmp
xor
cmp
sbb
cmp
jmp
or
push
add
sarb
test
jo
dec
sbb
dec
cmp
inc
jbe
stos
jne
ret
pop
lret
xchg
pop
outsl
jnp
xor
in
and
jo
jns
add
fidivl
inc
cmp
es
outsb
rorl
jmp
aad
adc
stc
mov
dec
sub
in
pop
fistpll
data16
cmpsb
cmc
sbb
pop
leave
adc
mov
std
add
std
mov
fmull
inc
jnp
dec
inc
add
leave
dec
sbb
push
ljmp
push
pop
jmp
mov
ffreep
or
xor
out
xchg
inc
out
movsb
add
scas
insl
mov
cwtl
cmp
into
jne
mov
xchg
hlt
ljmp
cli
dec
cmp
shl
dec
daa
mov
xchg
cmp
inc
add
inc
mov
fsubrl
add
andl
mov
pop
int
and
xchg
cmp
repnz
ss
cwtl
mov
jnp
cmp
fucomp
nop
cld
add
popf
cmpsb
rcr
cld
fs
data16
cli
rcrl
idiv
jno
fwait
jns
test
mov
leave
popf
add
inc
jle
pop
cltd
jne
stos
cmc
inc
sub
mov
mov
and
jg
test
inc
push
fnsave
adc
pop
sub
adc
add
std
or
fisubl
sbb
jp
lret
ret
cli
push
push
enter
cld
sahf
std
repz
insl
mov
mov
into
fwait
push
cmp
push
mov
cwtl
ret
adc
mov
cld
xchg
lock
cmp
je
lds
adc
lods
sti
inc
push
sub
jo
jp
test
mov
mov
sub
stc
lret
push
loopne
subb
sahf
xor
sbb
cld
arpl
fldt
add
outsl
loop
jmp
bound
mov
sbb
arpl
std
push
xor
dec
sub
mov
jnp
and
outsb
leave
ljmp
xorb
bound
mov
push
dec
test
xchg
mov
mov
movsb
xchg
cmp
pushf
and
popa
cli
mov
jnp
jnp
dec
popa
int3
bound
in
das
push
aas
and
jb
mov
outsl
sub
sub
push
fldenv
mov
push
mov
add
adc
push
pop
stos
pushl
xchg
and
stos
jno
dec
mov
stc
jnp
push
lea
add
cmp
movsb
movsb
push
xor
mov
incl
je
lock
lcall
jg
cli
out
xchg
mov
mov
xchg
mov
scas
inc
push
mov
xorb
cmpl
repz
movsb
test
js
jp
xor
add
dec
jle
lods
mov
xor
popf
dec
inc
iret
or
cmpsb
cli
or
ss
xchg
sbb
inc
movhps
mov
mov
popf
call
imul
push
adc
inc
sbbl
cmp
push
testl
add
dec
jb
jns
dec
lcall
xchg
bound
in
cld
pop
insl
les
xor
mov
int3
or
repnz
addr16
dec
in
mov
cwtl
sbb
mov
iret
icebp
add
pop
cmp
jo
and
cmpsb
jnp
mov
or
mov
sub
pushf
dec
int3
shlb
lahf
fisubrs
cmpsb
inc
mov
dec
in
dec
ss
js
or
nop
adc
or
mov
jmp
repz
add
ffreep
imul
inc
jl
pop
je
mov
jecxz
mov
scas
stos
mov
insl
mov
xor
jo
mov
and
or
into
ud0
cltd
out
add
cmp
pop
pop
inc
aaa
int3
sbb
xchg
xor
push
inc
loop
lahf
inc
mov
mov
test
dec
les
icebp
push
dec
lods
orb
adc
nop
cltd
inc
mov
cmp
call
mov
icebp
mov
xor
shrb
cld
les
inc
decl
mov
aam
dec
pusha
int3
je
imull
jnp
vprotd
leave
add
cwtl
imul
ja
ja
test
lret
add
shll
aas
dec
inc
aad
jmp
push
mov
sbb
cwtl
imulb
inc
jnp
mov
sub
jno
shlb
das
shlb
inc
xchg
jmp
xor
and
inc
gs
xchg
xchg
mov
sbb
popl
rcr
inc
mov
sub
in
add
mov
movsb
push
insl
icebp
push
mov
notb
mov
test
loop
add
fdivl
pop
jno
iret
cmp
sbb
pop
popf
aas
pushf
aas
js
fwait
dec
loope
iret
inc
pop
stos
sbb
fistpl
pop
mov
repz
repz
mov
les
rcrb
je
push
mov
subb
cld
and
outsb
pushf
popa
push
xchg
scas
outsl
and
mov
add
jle
outsl
in
icebp
jp
jb
in
dec
mov
inc
mov
enter
cmc
xchg
dec
test
add
ss
int3
test
mov
mov
cs
scas
cmp
xor
inc
pop
lods
mov
shll
mov
mov
add
and
es
int3
adc
and
call
jne
xchg
pop
outsl
push
mov
ret
cld
jns
and
push
add
daa
dec
test
inc
mov
push
fs
push
jecxz
dec
rorb
ret
notb
sbb
jecxz
hlt
xor
and
icebp
out
and
pop
xchg
fwait
add
mov
imul
jnp
adc
xchg
rolb
or
push
mov
sahf
lret
mov
adc
imul
jmp
cmc
addr16
cli
mov
lea
push
mov
dec
lcall
add
lods
push
cmp
cmpb
imul
push
mov
inc
mov
lahf
insl
push
frstor
cmpsl
shrl
test
mov
cs
scas
lds
inc
nop
ljmp
jl
cmpsb
xchg
jae
xor
pop
mov
in
sub
fcomi
mov
sub
lods
mov
xchg
dec
outsl
and
push
cmc
repz
decb
and
pop
popf
mov
aas
dec
sub
push
aad
and
mov
push
sub
pusha
andb
das
mov
outsl
push
mov
or
cmp
push
mov
mov
rcr
cmpsb
mov
jb
mov
lock
xchg
pop
lods
lock
les
push
sub
nop
mov
pop
dec
or
hlt
ret
xchg
sahf
xchg
jle
es
ret
fnstenv
mov
push
aas
mov
imul
jns
xchg
hlt
std
pop
loop
or
mul
popf
adc
fidivl
imul
ret
xor
lcallw
adc
jg
and
mov
shrb
mov
mov
fwait
bound
and
imul
leave
fsubrs
adc
mov
fwait
rclb
cmp
pop
in
or
mov
adc
pushfw
push
into
test
jo
cmpsb
insb
scas
dec
int3
hlt
lahf
and
andb
jns
outsl
sahf
insb
ss
es
repnz
dec
dec
and
cmp
dec
repnz
pop
out
mov
cmp
popf
mov
push
jmp
in
in
cmpsl
cli
popf
test
mov
dec
repz
mov
push
cltd
pop
cli
out
clc
incl
in
pop
arpl
sub
dec
and
test
push
jl
xorl
ret
outsl
push
rcrl
fldt
add
movsl
jecxz
mov
mov
out
loope
stc
mov
adc
push
sbb
and
clc
push
dec
das
xor
ljmp
fwait
and
sub
ret
gs
daa
int3
mov
call
xorl
jp
pop
xchg
dec
in
ds
repnz
jle
jns
sbb
data16
xchg
push
jb
mov
sub
out
sbb
and
out
in
in
rcrl
adc
arpl
insb
and
shrl
jae
sbb
adc
mov
pop
mov
loopne
xchg
bound
mov
lret
cmp
or
jmp
sbb
ret
or
fisttpll
inc
adc
aaa
fadd
out
sub
lret
lahf
inc
pusha
sbb
stc
ja
aad
adc
pop
outsl
dec
xor
fwait
lods
cmpl
mov
sub
xchg
popa
fsubr
loopne
testb
imull
in
outsl
push
inc
add
ret
fdivrl
push
punpckhbw
leave
sub
xor
inc
jo
hlt
mov
fcmove
pop
in
fmull
outsl
jbe
shlb
sbbl
cmp
hlt
sbb
pop
das
addb
int
iret
push
out
mov
das
xor
aad
jecxz
add
mov
cmpsl
ds
pop
add
ret
ret
sub
popa
add
test
outsl
ficoms
lock
nop
fbld
inc
pop
mov
or
and
and
pop
pop
call
in
mov
fucom
xor
xchg
jb
lahf
sub
mov
lret
ret
add
inc
mov
out
dec
pop
dec
les
fwait
xchg
pop
mov
jns
pusha
pop
testl
and
push
popf
mov
add
out
pop
jae
scas
xchg
popf
pushf
and
add
call
jp
adc
adc
lds
ret
pop
stos
and
push
mov
inc
push
cmp
pop
xchg
clc
cmc
and
mov
or
xor
mov
jecxz
stos
test
sahf
jmp
insb
cs
adc
xchg
sahf
xor
xlat
push
inc
dec
les
fsubl
adc
sub
fs
lods
rol
inc
movsb
in
scas
in
pop
pop
aaa
sbb
pop
dec
dec
out
or
pop
icebp
add
fsubl
lods
push
mov
adc
lahf
xchg
mov
mov
push
mov
scas
adc
test
daa
in
xlat
push
repnz
cs
fs
pop
out
gs
shll
sbb
lock
sub
mov
inc
push
lock
cwtl
push
rol
jecxz
xor
rcrl
jle
cmp
xor
outsb
add
in
cs
fidivl
sub
mov
dec
es
or
mov
cld
subb
cmp
shl
out
cmp
pushf
popf
adc
lea
xlat
xchg
loope
sar
cwtl
xchg
inc
in
scas
lds
mov
das
inc
push
in
ud1
mov
cwtl
adc
je
rcl
mov
lods
xchg
mov
inc
inc
stc
add
imul
clc
adcb
js
mov
lds
les
xor
mov
cwtl
les
inc
inc
stos
jno
hlt
cmp
test
sbb
pop
lock
jecxz
push
mov
pop
test
clc
and
repz
imul
incl
push
ljmp
ds
adc
add
fwait
lods
or
xchg
ret
lcall
push
cld
outsb
fldenv
mov
push
ss
in
popa
int
pop
clc
cmp
pop
pop
rcl
je
sbb
jecxz
jl
pop
xor
mov
xchg
divb
imul
cmp
cmpsb
jle
cwtl
movsl
adc
mov
adc
je
ss
add
jmp
insb
cmp
mov
cli
in
sar
pop
xor
loope
add
iret
lret
push
js
inc
ds
sahf
not
scas
cmpsl
ret
mov
push
jb
cmp
mov
adc
inc
mov
rol
lock
inc
loop
fdivs
mov
dec
xchg
ret
hlt
jnp
adc
mov
movsl
aaa
call
lahf
int
cmp
jbe
insb
mov
out
lcall
notl
les
adc
mov
mov
inc
push
jo
fcomip
mov
cmp
lock
mov
xor
push
arpl
pop
add
nop
fldl
adc
xchg
mov
jge
popa
vpshab
movsl
inc
call
sub
in
leave
daa
ret
pusha
pushf
cmc
inc
insb
inc
inc
pop
scas
mov
mov
cmp
outsl
fsub
pushf
cmpsl
lock
jg
aas
insb
mov
js
add
pop
pop
mov
push
mov
cmp
mov
aas
clc
popa
inc
cwtl
mov
xchg
mul
clc
jge
jb
cmpsl
mov
jecxz
lods
and
mov
add
stc
mov
idiv
cmc
inc
inc
aaa
jb
iret
push
add
fldcw
rorb
lahf
stc
ds
pop
cmp
imul
repnz
lea
or
cs
std
out
imul
aaa
jp
sub
inc
adc
lea
push
sbb
in
xor
aas
mov
aaa
mull
mov
repz
and
aaa
rorl
outsb
dec
and
pop
or
sub
push
rcl
jle
out
mov
clc
cmp
jp
mov
int3
inc
icebp
sbb
fs
insb
xchg
lcall
mov
lcall
outsb
jle
in
cltd
aad
test
jbe
js
cwtl
push
push
inc
add
or
fcoml
and
cwtl
gs
loop
cmpsb
sub
dec
and
mov
mov
sbb
jbe
adc
fsubrl
frstor
addr16
outsb
xor
ja
iret
and
jg
popl
cmc
dec
jle
lcall
jmp
and
js
scas
shll
insl
ljmp
mov
xor
fnstenv
cs
xchg
or
dec
out
iret
dec
sub
jb
inc
jmp
jp
xchg
inc
xchg
dec
ftst
decl
or
enter
add
or
adc
es
sub
adcb
pushf
xchg
ljmp
inc
les
xor
jl
mov
repz
cltd
sahf
sbb
xchg
xchg
cmpsb
or
jg
ficoml
mov
out
test
aam
cmpsb
seta
imul
adc
add
addl
cli
mov
mov
xchg
ss
push
jp
push
ja
lahf
dec
ret
into
pop
mov
and
xchg
or
out
dec
stos
mov
mov
sub
mov
mov
loop
das
jp
mov
dec
mov
xorb
or
pop
insl
pop
pushf
jae
cmp
sub
out
mov
in
lds
mov
jns
lahf
lods
stos
adc
loopne
leave
pop
clc
cld
loopne
add
test
mov
pop
jo
mov
in
mov
pop
and
in
cmp
pop
mov
loope
cmpsl
loope
fsubp
or
inc
inc
jb
xor
push
adc
cmpsl
mov
bound
add
sbb
adc
mov
xor
jmp
orb
hlt
add
mov
and
xor
xchg
andb
mov
adc
ret
cli
aas
movsl
insl
or
aas
imul
or
add
es
fnstcw
movsb
jmp
mov
pop
test
push
and
xchg
in
sti
insb
push
das
add
es
pop
adc
mov
jecxz
sub
adc
sub
pop
push
or
stos
hlt
push
and
mov
stc
repz
pop
or
push
sarl
ret
sub
cmpsl
sbb
inc
mov
push
xor
dec
push
add
daa
outsb
push
in
xchg
adc
dec
xchg
aad
pop
inc
iret
test
pop
movsb
sub
ds
lret
xchg
decb
pop
repz
cmp
test
mov
hlt
mov
xor
fwait
int3
xchg
mov
jne
loopne
movsb
xchg
fildll
mov
add
scas
stos
cld
dec
mov
std
jb
decl
inc
popa
lea
pop
pop
mov
mov
lahf
ret
jnp
imul
push
mov
lods
or
or
fisubrs
dec
pop
sbb
push
xchg
addr16
push
stos
pop
lret
inc
fucomip
orb
fwait
repz
in
xor
std
jns
mov
in
cmp
dec
jo
pop
or
test
and
arpl
in
jmp
enter
push
mov
not
mov
dec
sarl
cmp
popf
lds
imul
xchg
adc
ret
cmpsl
fs
inc
std
ljmp
ret
push
test
jo
or
out
add
scas
fisubl
xor
push
sbb
cwtl
in
subb
leave
ret
out
fcmovnb
and
mov
jb
stc
push
cmp
and
inc
test
psubsw
fcmovnb
stos
sub
inc
test
adc
or
fcmove
xchg
adc
mov
fildl
cmp
mov
rcr
jle
xchg
xchg
lock
xchg
pusha
std
add
stos
cmp
xor
lea
mov
jns
inc
loope
xchg
and
arpl
jo
mov
loope
cmp
xchg
inc
push
hlt
push
js
push
adc
pop
sti
adc
dec
or
xor
rcrl
in
add
outsl
icebp
mov
mov
iret
mov
pop
push
shll
jb
mov
subb
stos
out
pop
pusha
and
stos
add
roll
ss
lret
out
lahf
xor
hlt
ljmp
xor
jg
cli
mov
jp
dec
jo
jl
out
jg
arpl
sahf
iret
cmp
cli
call
std
lahf
pop
add
xor
sub
das
push
xchg
lock
dec
adc
and
mov
sub
cs
data16
lds
mov
xor
test
shr
test
mov
xchg
sub
xor
jl,pt
or
ret
inc
pop
push
mov
push
subb
adc
mov
loopne
sub
xchg
cmp
pop
in
addl
outsl
push
stos
adc
popf
arpl
sub
pop
pop
test
bound
cmp
sbb
mov
nop
cmp
dec
pushf
push
push
xlat
das
fadd
in
jl
jl
les
mov
std
rclb
fnstsw
flds
mov
ret
pusha
and
cmp
lea
pop
inc
jb
lahf
mov
xchg
mov
scas
sub
mov
jne
inc
xor
lea
or
in
fcmovnu
arpl
or
mov
imul
jecxz
adc
sbb
insb
sub
std
inc
inc
mov
popa
add
pusha
pop
int
lds
lods
cmp
mov
add
das
inc
out
dec
sub
fwait
jne
hlt
pop
mov
cmpsl
adc
mov
push
ret
shll
push
xor
les
jo
jge
push
out
mov
enter
sbb
adc
aam
inc
imul
push
mov
mov
jmp
jl
pusha
gs
int
dec
jae
loop
mov
mov
push
push
outsb
adc
lea
mov
xchg
or
ret
mov
cltd
dec
das
push
adc
push
scas
push
stc
push
sub
dec
or
mov
adc
aad
adcb
cmpsl
stc
icebp
sbb
jmp
inc
insl
push
sahf
xor
dec
inc
and
mov
in
xor
cmp
push
cli
dec
rcrl
push
stc
mulb
cmp
hlt
inc
js
xorb
int
push
lea
mov
out
adc
and
nop
test
scas
sub
pop
push
mov
jl
rolb
and
out
push
cltd
pop
stc
pop
inc
arpl
dec
lods
lods
inc
jns
out
or
enter
and
pop
pop
push
bound
xchg
adc
mov
push
dec
jbe
adc
inc
loope
mov
cmp
push
mov
or
cli
and
dec
xor
mov
mov
xchg
xor
mov
popa
aam
insl
nop
jbe
xchg
jbe
into
fs
dec
sub
mov
jp
int3
test
clc
mov
add
ret
hlt
cmp
xchg
push
fldl
fs
adc
pop
cmp
sti
xor
push
mov
stos
mov
in
xlat
scas
push
nop
sbbl
push
mov
or
push
add
pop
mov
imul
lahf
push
mov
inc
iret
and
xchg
xchg
push
jle
pop
jo
mov
aas
sub
xor
scas
nop
pop
cmpsl
out
mov
mov
and
int3
loope
out
pusha
xor
or
adc
scas
mov
imul
xchg
cmp
pop
icebp
outsb
es
xchg
xor
dec
fmuls
jo
icebp
test
arpl
cmpsb
scas
cmp
in
repnz
mov
in
repz
sub
mov
cwtl
loopne
mov
inc
xchg
inc
int
arpl
out
fisttpl
test
push
mov
xchg
add
in
mulb
mov
loope
shrb
pop
or
fucomip
out
pop
mov
clc
xchg
adc
dec
cmc
fwait
or
jp
or
fidivrl
xor
xchg
sub
loop
or
and
or
in
jp
sub
inc
loope
fcomp
mov
idivb
scas
cmp
or
adc
pop
fs
outsb
and
mov
add
xor
imul
sub
inc
jo
inc
loop
insb
imul
idiv
cmp
cmpsb
sbb
imul
lcall
lret
sbb
mov
shlb
aad
enter
push
test
fiaddl
jae
in
and
or
jecxz
push
rcrl
push
mov
mov
ss
push
and
dec
mulb
flds
lods
mov
sbb
repz
xlat
dec
in
jl
push
pop
jl
inc
aaa
pop
mov
and
or
rcl
add
dec
lods
add
mov
xchg
stc
es
std
xchg
adc
lret
sti
cmp
outsb
sbb
jecxz
aam
xor
lret
mov
cmpsb
and
lods
push
jbe
mov
icebp
lock
fdivrl
mov
push
popf
mov
fildll
hlt
mov
fistps
pop
xlat
sbb
aas
lahf
push
iret
mov
cmp
sbb
dec
imul
cli
push
mov
fldl
jl
pop
in
int3
out
xchg
mov
sbb
bound
test
aas
loope
daa
je
cmp
cmpsb
ficompl
mov
out
loope
mov
lahf
pop
adc
pop
notb
or
dec
jmp
sub
xchg
scas
sub
rcrb
test
insb
xchg
sbb
lahf
addl
lret
jge
test
pop
adc
push
mov
mov
cmp
jbe
dec
mov
repnz
mov
rclb
mov
testl
push
dec
sub
jo
std
imul
dec
push
mov
adc
movsl
fcmovbe
das
sub
clc
or
push
cmp
dec
insl
dec
sbb
xor
jle
int3
push
pop
mov
xor
cmp
sub
push
setge
mov
insl
dec
movsb
fbstp
push
adc
jge
mov
pop
mov
cltd
adc
jle
call
pop
out
pop
mov
push
js
push
int3
sahf
xchg
lea
push
mov
cmp
sbb
or
push
out
xchg
std
xor
ret
fs
jp
int
mov
sahf
xor
mov
icebp
add
or
int3
jmp
sbb
xlat
xor
push
stos
shlb
bound
fimull
sbb
pop
ret
pop
fnstenv
arpl
fidivl
mov
and
push
mov
outsl
into
popa
mov
sub
notb
cmpsb
and
add
xlat
and
movsb
pop
xchg
jnp
push
insb
cmp
cmp
mov
pop
push
negl
ficomps
sbb
aaa
xor
cltd
fdivs
in
stos
bound
dec
dec
mov
pop
out
mov
aas
cli
add
jmp
mov
cmp
test
outsl
mov
or
repz
cmpsl
mov
xor
cwtl
iret
sub
mov
aaa
mov
jbe
rcrl
push
mov
add
sub
pop
shrb
andb
or
and
dec
pop
icebp
sahf
xor
pop
fsubrs
js
pop
dec
aaa
shll
test
dec
mov
jmp
mov
not
dec
pop
push
les
jge
sbb
mov
fs
jecxz
or
push
pop
sbb
or
push
iret
mov
cmp
jns
xor
lret
addr16
sbb
dec
and
pause
push
inc
xchg
fists
pushf
xchg
jae
xchg
or
mov
pop
xor
xor
mov
xchg
xor
popf
pop
mov
jae
scas
movsl
pop
mov
sbb
insl
and
ljmp
push
out
sub
mov
adc
aad
pop
sub
mov
cmp
outsb
std
fsubrp
lods
or
jne
add
pop
call
bound
mov
je
int
mov
pop
xchg
ds
pop
cwtl
sbb
imul
subb
mov
cwtl
out
repnz
int3
pop
dec
scas
jb
sub
popfw
cmp
lock
adc
mov
pop
sub
and
stos
add
cmpsb
mov
std
repnz
outsl
in
inc
enter
in
inc
hlt
fldenv
insb
addr16
lret
add
jb
jae
inc
pusha
pop
in
lret
outsb
in
xchg
inc
pop
pusha
sub
adc
shrl
cmpxchg
cwtl
fsubrp
mov
mov
scas
or
xchg
or
fwait
rorl
xchg
add
fldcw
pop
out
jne
scas
leave
imul
adc
inc
fmul
in
xor
aaa
jle
xlat
ffree
or
stos
mov
sub
jne
mov
out
rolb
inc
inc
dec
lcall
imul
cwtl
and
add
popf
fisttpl
jp
push
inc
repnz
cmpsb
fnsave
in
cmpsb
inc
mov
clc
repz
sub
mov
lock
rclb
add
daa
cmova
or
xchg
mov
pop
inc
mov
repnz
popa
les
pop
xor
xchg
jno
jmp
jle
adc
adc
mov
pop
stos
sub
cmp
shrb
push
push
lahf
test
das
mov
movsb
inc
insl
inc
bound
popa
add
rorl
sbb
push
xor
mov
out
daa
sub
loop
pop
lret
lods
jecxz
or
sbb
jae
push
cmp
loopne
sbb
push
subb
and
test
mov
pop
sbb
pop
sub
mov
mov
repz
and
jecxz
pop
push
lods
xchg
popf
lcall
fbstp
cmp
fsubrl
fcomps
pop
pop
lods
insb
jl
mov
mov
outsl
pop
js
andl
test
mov
add
xchg
pop
xchg
jo
xchg
fcomi
cmpsb
div
lahf
fwait
lahf
es
jno
cmp
dec
mov
mov
pop
out
jmp
jge
push
out
and
xchg
popa
jne
cwtl
addl
and
jmp
mov
gs
cld
repz
pop
arpl
cs
ficoml
cmp
outsl
mov
xchg
faddp
fildll
sbb
mov
cli
sub
cmp
mulb
shlb
sbb
lods
adc
lods
xchg
dec
fsubrs
imul
pop
and
add
shll
pop
rcrl
lret
pushf
xchg
scas
push
or
sarb
sbb
sbb
fsubs
jne
div
test
dec
lods
rol
lret
sarw
aas
imul
sbb
and
daa
int3
mov
bound
add
push
jns,pn
mov
aas
sbb
sarb
nop
fs
ja
pop
fsub
rcrl
shlb
ljmp
rorl
mov
adc
xor
sbb
add
sbb
out
aaa
lock
sub
jg
sbbl
cmp
js
out
scas
xchg
lods
add
pop
fsubl
mov
out
fnstcw
jp
in
push
add
xlat
push
cmp
pop
addr16
mov
outsl
inc
push
adc
adc
bound
xlat
add
dec
divl
mov
dec
insl
cld
in
push
loop
sbb
stc
mov
aam
or
xor
mov
sub
shll
jnp
iret
fcmovb
and
subb
insb
out
mov
lds
xor
add
fadd
jmp
mov
or
test
sbb
ds
sub
xor
test
jmp
pop
stos
and
shlb
mov
lcall
inc
jecxz
xchg
in
cpuid
and
sub
sbb
push
rcrb
mov
push
popf
insl
cwtl
ficomps
js
add
and
sub
mov
rorl
lea
dec
push
call
pop
jp
sub
mov
mov
xchg
and
lock
cmp
leave
out
inc
movsb
sbb
adc
mov
aas
push
call
push
rcll
pop
sub
sub
ja
movsl
sbb
pop
xor
cmpsl
test
imul
dec
mov
fwait
xchg
adc
in
cmp
insl
outsl
nop
cmp
jmp
push
adc
pop
jae
adc
or
jmp
es
ret
leave
mov
outsb
inc
jmp
lods
inc
mov
iret
lds
loopne
scas
cld
mov
sub
outsl
shrb
mov
dec
shlb
jmp
fidivs
pusha
in
subl
leave
in
insl
fs
mov
sti
fcmovnbe
push
xchg
or
pop
xor
popa
in
into
sbb
mov
andb
xor
inc
mov
sub
pop
dec
je
pop
out
inc
or
aaa
inc
or
sbb
add
and
rorl
stc
xchg
sub
mov
mov
and
nop
enter
push
scas
cmc
test
xchg
xor
lods
add
in
pcmpeqd
test
jae,pn
popa
pop
stos
xor
add
movsl
push
pop
cmp
scas
pop
mov
iret
stos
cmpsl
dec
xor
mov
test
sub
mov
fldcw
xchg
add
lea
sbb
jmp
inc
into
insl
push
stos
fbstp
or
inc
xor
aaa
sahf
jne
push
pusha
mov
aam
jle
mov
femms
fs
mov
insl
add
popf
inc
test
pop
ljmp
cmc
lds
mov
push
loope
push
pop
push
popa
test
cmpsl
mov
or
or
mov
jmp
pop
pusha
fildll
std
es
lahf
fildll
xor
mov
insb
call
outsl
faddl
sub
push
aas
mov
xor
adc
inc
sbb
mov
cmpsb
pop
bound
gs
fdivrp
or
push
leave
iret
add
xchg
leave
arpl
jmp
stos
mov
cmp
ficoms
lods
es
xchg
add
push
inc
xor
xor
jp
and
stos
xchg
in
jle
push
f2xm1
mov
lods
sub
inc
ret
mov
adc
rclb
sbb
pop
cmpsl
cmp
xchg
push
jmp
and
jecxz
test
mov
push
lods
adc
dec
mov
fsts
cs
dec
rolb
les
imul
nop
mov
xor
xchg
aad
push
out
jno
xor
xchg
push
push
loop
idivl
mov
outsb
mov
outsl
ss
jge
lock
lret
nop
cmp
or
int3
mov
lret
push
gs
hlt
or
idiv
cmpsl
cld
jmp
aas
insb
lds
xchg
fmul
sahf
adc
std
mov
xchg
clc
neg
jne
and
sbb
jge
cwtl
jecxz
call
adc
fdiv
cmc
call
jno
stos
mov
jo
ja
add
mov
ret
adc
jg
movsb
cmc
movsl
fs
fs
arpl
sti
addr16
push
cmp
bound
je
xor
into
movsl
xchg
subl
idivl
sbb
sbb
xor
les
xchg
mov
jge
lds
out
lahf
stc
mov
leave
in
add
xor
enter
and
xchg
lds
sub
test
sarb
mov
adc
pop
repz
sarb
fmul
pop
fcomps
cmp
popf
jno
fcmovnu
shr
stc
inc
push
je
test
xchg
cld
adc
pop
adc
lods
mov
dec
xchg
mov
fwait
jns
out
mov
aad
cmp
clc
cmc
shrb
scas
mov
jns
xlat
out
or
mov
lock
dec
or
cmp
jb
jecxz
sbb
sbb
xchg
add
xor
sbb
inc
or
cmp
push
dec
xchg
ljmp
int
sub
mov
jmp
sbb
mov
inc
scas
push
or
mov
fsubp
or
das
xchg
outsb
fst
sub
ret
cmpl
pop
push
daa
sub
push
sub
in
mov
sbb
mov
fwait
outsl
shll
mov
push
push
int
cmp
xchg
out
cld
mov
pop
fwait
jle
ljmp
fildll
test
scas
pusha
push
fildl
popf
out
into
pop
fidivl
inc
inc
mov
push
dec
sub
scas
addr16
ds
shrb
inc
sbb
jp
sbb
shll
test
xchg
scas
adc
and
imul
sub
inc
int
add
pushf
jle
inc
out
sbb
adc
push
in
push
jmp
in
jne
add
movsl
sub
fwait
jp
cli
jae
test
dec
ss
fidivrl
cmp
push
fcom
sbb
xchg
dec
or
lds
dec
and
test
sub
sub
dec
pop
sbb
cmp
and
mov
dec
nop
repnz
int3
sub
inc
cmp
cld
cmpsl
es
mov
xchg
test
pop
mov
inc
cs
cmp
scas
je
pushf
mov
fwait
mull
xor
pop
test
stc
adc
ss
dec
icebp
dec
add
je
shlb
pop
pop
movntps
je
rcl
fisttpl
fsubrp
outsb
popa
inc
pop
xchg
sub
pop
cmp
push
imul
pop
xchg
imulb
lahf
insl
es
cli
sub
les
mov
add
xchg
pop
add
jbe
shl
fildll
add
stc
mov
outsl
cwtl
sbb
add
daa
push
push
test
or
add
or
data16
push
mov
lret
repnz
mov
dec
mov
pop
sti
test
sub
jno
gs
pop
dec
push
mov
pop
sbb
fs
cmp
loopne
xor
shll
out
fs
insl
adc
pusha
js
loope
ds
inc
and
out
pop
or
dec
sti
in
fistpl
jo
aad
int3
dec
mov
popl
sub
inc
jbe
ss
test
or
and
mov
push
xor
xchg
fisubs
or
sub
bound
cmpsl
cli
xchg
popf
inc
push
or
lds
jo
sub
mov
dec
push
lcall
in
ja
ja
shlb
mov
inc
lret
loopne
leave
pusha
jno
es
lea
jnp
and
pushf
mov
add
icebp
cmpsl
popf
xor
sub
or
mov
nop
xlat
cli
iret
cmpl
xchg
and
push
xchg
and
cmp
lods
mov
std
or
jo
es
xor
jl
xchg
lret
mov
mov
es
lret
gs
negl
mov
aad
roll
in
inc
movsb
js
popa
lahf
enter
xchg
mov
fldt
inc
sub
dec
jmp
mov
pxor
dec
inc
adc
idivb
jae
pop
aas
mov
push
xchg
aas
xchg
sbb
movsb
jbe,pt
or
mov
in
test
mov
cmp
sar
jmp
jg
sub
adc
aaa
jle
test
jmp
sti
cld
cmp
sbb
xchg
mov
sbb
mov
inc
fisubs
cld
push
leave
cmp
outsb
iret
xchg
cli
cs
dec
adc
popa
das
mov
lahf
fwait
ret
rcr
xorl
jae
pusha
outsb
in
add
sarl
jo
in
in
sub
cmp
pop
daa
in
sbb
cli
xchg
jmp
enter
push
jge
scas
sub
mov
shl
cmp
leave
pop
jo
push
andl
notb
sbb
cmp
pop
lea
rolb
shrl
push
or
jecxz
call
fldcw
or
mov
xchg
fsubrs
negb
xchg
sbb
dec
xchg
cld
or
test
cmpsl
and
adcb
lret
mov
stos
sub
xlat
fildl
jmp
pop
jnp
jecxz
and
int3
push
iret
inc
add
fists
sbb
or
hlt
mov
xor
jmp
ja
cmc
es
pop
sub
xchg
mov
or
cmpsl
lds
pop
or
loope
fidivrs
out
or
adc
sbb
loop
mov
scas
loope
lods
pusha
cwtl
sbb
jecxz
inc
stos
push
ret
mov
xchg
fisubrs
out
dec
jg
in
jae
repnz
ja
movsl
pop
scas
xor
notb
popa
in
push
lsl
cmp
pushf
pop
lods
cmp
xchg
fwait
lret
mov
mov
out
movl
sahf
xchg
xchg
popf
sti
loop
pop
mov
mov
mov
pop
int3
daa
add
insl
push
mov
pop
jp
dec
adc
gs
sbb
mov
shll
push
nop
es
inc
stc
movnti
add
mov
int
jae
addr16
clc
jbe
fsubr
mov
dec
lods
mov
push
sub
push
bound
imul
mov
dec
test
or
movsb
ud1
adc
xchg
push
movsb
fsub
xor
jmp
mov
adc
scas
fdivrl
xchg
stos
and
inc
or
fisttpll
in
push
pop
clc
sub
stos
out
sbb
mov
js
repz
jge
sub
cmp
lods
jne
out
sub
push
inc
cmp
sbb
movsb
lret
cmp
out
adc
aad
jmp
jne
mov
xor
lret
push
cmp
aas
testl
add
fstpt
jg
xor
inc
enter
sbb
arpl
inc
std
into
push
inc
mov
inc
jns
cmp
aaa
mov
pop
push
xchg
push
mov
push
js
js
push
loope
mov
push
pop
inc
mov
pop
xor
clc
push
lret
push
stc
ret
dec
mov
mov
dec
push
jmp
out
adc
jle
adc
xchg
dec
rcrl
orb
cmc
sub
cltd
leave
pop
push
jnp
lds
in
or
push
cmc
add
leave
sarl
das
push
mov
adc
data16
xor
adc
jns
and
iret
cmc
jecxz
adc
shr
xchg
int
das
daa
xor
jmpw
fwait
enter
sub
or
mov
jno
mov
jns
int
jmp
cmp
pop
inc
inc
jb
mov
aam
in
mov
out
and
adc
ss
aaa
xor
cmp
pop
stos
aad
pusha
adc
fwait
jne
push
dec
inc
andl
push
and
cwtl
pop
fucomip
bound
dec
loope
pop
add
cmp
loopne
lret
add
push
and
push
in
lret
cmp
jmp
in
add
push
lcall
mov
hlt
or
xor
cmp
and
xlat
movsb
das
testl
dec
rcll
sbb
dec
sub
push
shll
jbe
cmp
mov
push
movsb
int
pop
shlb
or
int
in
xchg
in
shr
loope
xchg
adc
fidivrs
inc
cmpsl
jecxz
mov
mov
xchg
in
dec
ror
test
into
leave
pop
aam
push
cmpsb
adc
mov
and
mov
push
inc
inc
das
out
inc
sbb
leave
int
rcr
pop
mov
pop
int3
jp
mov
push
sub
call
and
mov
aam
stos
or
xchg
das
stos
fs
adc
push
cmp
jae
inc
loope
divl
cs
scas
js
adc
call
es
call
out
push
xor
in
lret
add
sub
imul
out
add
jmp
pop
andb
fidivs
pop
iret
popa
mov
fwait
rcrl
jo
inc
popa
sbb
leave
dec
dec
jecxz
push
lds
mov
xor
mov
xchg
adc
adc
test
sub
pop
std
mov
cmp
test
pop
jecxz
in
dec
fcmovnu
pop
dec
aam
mov
mov
call
xchg
and
popa
inc
rcrl
jmp
sbb
jnp
cmp
xchg
xlat
mov
fildl
add
lock
fwait
add
in
jns
fcmovne
fiaddl
add
fs
aaa
dec
into
lret
and
and
or
dec
add
les
cli
outsb
mov
cmp
pop
inc
nop
xor
addb
dec
xor
aad
xchg
xchg
fcmovnbe
inc
xchg
in
ljmp
mov
and
fistps
jno
mov
addr16
sahf
aad
je
sbb
jecxz
inc
std
mov
sub
lods
in
popa
mov
adc
mov
cmp
mov
addr16
mov
popf
mov
mov
or
shlb
fs
out
dec
mov
mov
push
scas
mov
loope
xchg
sub
lcall
and
fisttpll
inc
add
fsubrs
sub
test
in
nop
or
mov
xlat
inc
cmp
mov
or
mov
inc
or
mul
mov
mov
sbb
repz
dec
shll
mov
popa
imul
daa
fsubs
insb
inc
stos
push
ds
js
outsb
aas
int3
repnz
pop
add
mov
mov
mov
daa
pop
mov
into
stos
enter
stos
sbb
in
in
fmull
outsb
and
popf
daa
adc
arpl
icebp
push
mov
lret
xlat
xchg
push
lock
incb
aas
iret
cltd
in
sub
les
pop
sahf
pop
loop
mov
popf
sti
xor
out
movsl
add
popa
or
inc
sub
test
cli
icebp
mov
cmpsl
in
adc
adc
add
xchg
mov
push
cmc
repnz
stc
add
loopne
lahf
xchg
sub
lretw
xor
sbb
arpl
jecxz
push
prefetcht2
orl
leave
sub
gs
jle
mov
and
xor
icebp
add
rorl
jnp
adc
loop
das
inc
loopne
fstpt
negb
pop
fsubs
arpl
js
jae
mov
or
mov
push
push
pop
aam
inc
mov
dec
dec
icebp
lret
lock
inc
adc
pop
lods
push
mov
outsb
sahf
xor
and
fdivl
cmpl
sbb
popa
xor
pop
sub
fnstcw
fldt
test
push
dec
pusha
or
push
inc
leave
sub
mov
inc
push
sti
dec
mov
xchg
mov
std
add
loop
or
mov
sub
mov
inc
and
ret
lea
push
rep
dec
test
scas
data16
pop
testl
stos
das
xlat
mov
xchg
sub
push
sub
pop
leave
push
je
insl
js
stos
stos
xlat
ja
int
jae
dec
sub
mov
sbbl
es
test
pop
push
lea
sbb
adc
cld
xor
mov
jg
mov
pop
push
push
mov
loopne
mov
sub
jb
pop
lcall
adcl
loope
insl
out
inc
scas
pop
loopne
jl
lea
stos
sbb
dec
nop/reserved
fldt
mov
or
push
aas
in
hlt
mov
jge
out
out
mov
push
xchg
and
push
lods
pop
outsl
lea
sti
fwait
lret
mov
pop
roll
and
stos
stc
xor
mull
lret
loope
add
mov
jo
jmp
insb
pop
icebp
push
in
pop
loop
aas
jb
sbb
xor
ljmp
sbb
fisubs
pop
mov
dec
lcall
fs
clc
call
bnd
push
push
mov
dec
fimull
sub
xor
test
out
lcall
js
xchg
inc
lods
popa
inc
jne
and
push
push
cwtl
int3
mov
pop
int3
mov
incl
aad
push
mov
fwait
jp
imulb
mov
and
adc
aam
into
stos
add
mov
xlat
stos
sbb
dec
adc
mov
movsb
or
les
dec
cmc
pop
pop
push
addr16
add
mov
mov
add
bnd
andb
mov
push
adc
insb
sbb
push
or
shlb
mov
je
pop
jle
pop
add
in
and
and
adc
aaa
mov
jb
xchg
sbb
or
stc
fdivs
mov
cmp
movsb
repnz
movsb
fstl
push
xabort
dec
push
or
rcll
inc
sub
stos
fldenv
fisubrl
xor
sub
and
push
out
aam
push
push
jmp
and
push
sbb
mov
mov
pop
sub
iret
add
pushf
sub
pop
cmp
mov
aaa
or
pop
into
inc
pop
loop
rorb
les
sub
scas
scas
bound
mov
inc
je
dec
mov
aas
call
jno
pop
imul
lahf
cmp
jmp
sub
dec
in
aas
mov
adc
in
sbb
xchg
cmp
mov
fdivs
cmp
jns,pn
dec
mov
jg
icebp
aam
push
addr16
jmp
xchg
int
incl
push
mov
push
mov
sti
clc
or
push
sbb
scas
hlt
out
xor
test
jge
mov
out
adc
sub
andl
lret
or
int3
cltd
mov
stc
hlt
gs
mov
mov
xor
xlat
sub
push
daa
outsl
mov
shrl
mov
inc
dec
sub
out
inc
lret
gs
adcb
push
sbb
mov
jmp
mov
inc
pusha
lods
movsb
jb
mov
in
xor
arpl
imul
xlat
cmp
pop
xlat
jmp
xchg
mov
in
movsl
ja
cmpsb
out
repz
inc
xchg
je
or
in
out
rcl
ss
lcall
inc
lret
andb
xchg
sub
dec
xor
jns
jb
in
fbstp
xchg
sub
shrl
cmp
push
mov
test
dec
and
mov
sub
out
and
jle
jp
out
icebp
sahf
scas
dec
push
cmp
dec
lcall
enter
mov
lahf
jno
clts
dec
inc
test
fs
and
jmp
loope
jp
cmp
mov
push
xchg
pushf
loopne
pop
iret
call
xchg
cs
mov
nop
inc
data16
cmp
mov
loop
xchg
jecxz
lret
into
or
lret
cld
sar
idivl
insb
inc
push
pop
xor
sbb
les
mov
jns
out
sahf
imul
mov
sub
push
outsl
bound
leave
mov
sbb
jecxz
xchg
cmp
inc
xor
xor
push
jne
fistl
dec
sub
cltd
and
loope
pop
xor
testb
push
mov
xor
pop
mov
popf
fcmove
sub
pop
and
das
aam
lcall
insb
xor
add
or
jmp
or
mov
jae
mov
adcb
int3
fildl
stos
aas
std
and
dec
cltd
ljmp
pop
mov
push
fbld
lds
in
push
push
push
inc
sbb
test
fmull
jne
inc
mov
gs
lock
in
mov
xor
and
sbb
test
mov
inc
mov
mov
jo
test
lds
decb
not
and
and
lock
popa
pop
xchg
xor
push
and
add
fwait
ds
call
ljmp
sbb
sub
xchg
insl
sbb
fimuls
outsb
cmpsb
lret
ret
cmp
enter
push
cmp
jle
ret
fs
fdivrs
sub
jo
shrb
mov
mov
mov
mov
dec
fsts
je
xchg
sub
xchg
insb
mul
lods
sub
mov
inc
imul
pop
or
popa
fucom
aas
popa
push
sbbl
mov
push
mov
jo
xchg
sub
lods
pushf
jg
push
dec
push
sub
xor
fwait
mov
lds
fmulp
and
idiv
or
shll
and
outsb
xor
sbb
xchg
shlb
push
mov
adc
mov
stos
dec
jle
jb
stos
insl
les
or
sar
xlat
cwtl
repnz
movlps
xor
enter
mov
repz
and
xor
fldcw
adcb
push
add
sbb
jnp
loop
push
mov
fbld
add
mov
adc
jle
push
mov
pop
and
inc
mov
pop
mov
sub
dec
movsb
popf
lea
test
xchg
push
push
dec
stos
stos
mov
mov
or
das
arpl
mov
and
std
mov
xor
xor
outsl
xor
inc
stos
test
pop
lds
cli
or
pop
out
jecxz
scas
xor
in
cwtl
and
leave
and
push
push
sbb
fdivrs
push
shrb
es
fstpt
shrb
jmp
sub
fisttpll
fldl2t
inc
daa
sub
popa
pop
pop
mov
mov
jp
loop
aam
and
imul
lret
inc
pop
mov
popa
lods
or
push
int3
xor
dec
xor
enter
notb
xor
pop
loope
jp
repnz
test
inc
push
fisubs
inc
mov
stc
sub
and
add
pop
cwtl
dec
sbb
xchg
in
ret
sub
mov
jo
lea
fidivrl
jmp
mov
aaa
mov
daa
jmp
es
ja
inc
sti
cmp
push
or
push
into
mov
adc
aam
xor
pop
inc
cwtl
gs
pop
xchg
jecxz
and
cwtl
inc
push
scas
in
cmp
or
jne
loopne
sbb
xchg
ror
mov
out
xor
js
mov
iret
fcompl
mov
pop
inc
fiaddl
pop
popa
adc
adc
js
jne
cmc
cmp
icebp
rep
push
xor
lods
les
insb
push
ds
je
dec
xor
and
sub
push
mov
mov
jl
les
out
outsl
dec
loop
xchg
das
andb
push
faddl
lods
and
arpl
je
pusha
or
mov
xchg
shr
and
mov
lret
aam
lock
mov
push
sub
sbb
jmp
seta
mov
repz
jl
insb
xchg
iret
push
lods
aam
lods
ja
pop
mov
xor
scas
pop
mov
scas
ljmp
adc
inc
clc
cmp
loope
adc
add
xchg
jnp
push
cmp
daa
pop
cmp
lds
enter
test
out
add
inc
je
mov
cli
fmuls
push
mov
sub
outsl
insl
in
fwait
push
adc
pop
clc
data16
xchg
stos
mov
std
mov
test
mov
xor
sub
xchg
loope
or
por
and
outsl
sbb
xor
pop
adc
mov
bound
cmpsl
mov
arpl
fnstenv
xlat
xor
lea
aaa
jne
aam
clc
leave
jmp
sbb
sahf
pop
into
pop
inc
leave
jmp
clc
sub
rclb
push
inc
cld
add
out
call
shl
dec
shll
xor
sub
mov
add
xor
outsl
fldl
adc
shr
arpl
stc
int3
adc
xor
xchg
cmpl
pop
popa
add
int3
and
and
xor
xchg
repz
sti
lret
cwtl
and
pop
cmp
xchg
fisubrl
scas
aaa
loop
sbb
push
mov
jo
lock
cs
pop
bound
mov
xor
or
push
rorl
in
xor
or
aad
push
mov
sub
fimull
push
and
inc
test
leave
fnstcw
xlat
cmc
add
lods
scas
mov
pusha
sbb
jge
stos
mov
nop
and
gs
cli
in
and
in
sti
sbb
jbe
cltd
or
rclb
xchg
pop
movsl
jl
cmp
adc
mov
nop
insb
out
and
sub
jl
cmp
sbb
addr16
xchg
push
sub
sub
mov
stc
sbbl
pop
push
mov
jbe
pop
sbb
mov
js
mov
aas
mov
loope
sbb
adc
ret
cmp
push
popa
mov
and
inc
pop
out
popa
dec
add
and
rcrb
iret
out
dec
aaa
push
push
jge
lock
pusha
xchg
sub
push
clc
in
into
ds
icebp
sbb
aad
mov
add
inc
sub
outsb
pushf
rorb
mov
sbb
xor
dec
and
popa
cmp
add
movl
ret
lret
push
lahf
dec
into
repnz
push
jecxz
imul
cmp
fstpl
mov
xchg
jg
push
push
sahf
sub
push
xchg
bsr
pop
dec
test
loop
ja
test
lea
push
mov
loopne
idivb
outsb
aad
lock
xor
adc
push
mov
or
or
mov
sbb
imul
cld
or
scas
xchg
frstor
nop
jne
hlt
push
hlt
leave
add
vpcomud
mov
xchg
or
js
fdiv
sub
jp
jb
inc
outsb
adc
arpl
mov
dec
add
adc
push
xor
lock
ret
add
jmp
addr16
sbb
xchg
popf
sbb
xor
jmp
aaa
lcall
mov
roll
adc
inc
js
mov
outsl
mov
jo
push
inc
leave
repnz
in
loope
or
ret
adc
fidivrl
fsubs
inc
loop
das
mov
cmp
push
pop
cmp
cmp
loopne
jne
mov
fld
lahf
push
cltd
xchg
mov
insl
fidivs
mov
in
or
jle
in
daa
pop
mov
xchg
or
ret
lds
ss
fmuls
popa
cmp
push
testb
adc
movsl
les
mov
jp
add
dec
adc
repz
outsl
jno
xchg
outsb
push
pop
lods
push
mov
jmp
mov
aad
xchg
push
inc
jo
xor
repz
flds
fs
cmc
dec
dec
or
int
aaa
pop
sbb
inc
imul
lahf
and
push
dec
dec
stos
outsl
xchg
push
cmp
ljmp
sbb
push
ret
lahf
or
push
stc
jmp
cmp
push
clc
in
addl
mov
clc
xor
adc
pop
movsb
jge,pt
xchg
cltd
jae
imul
loope
inc
lock
mov
mov
imul
xor
stc
add
aad
adc
mov
aas
and
mov
lods
xor
adc
or
sbbl
scas
xchg
mov
ds
inc
adc
lea
dec
push
ss
out
cmp
xlat
lods
enter
mov
jmp
orb
inc
mov
mov
repz
das
mov
pop
push
int3
imul
mov
xchg
rol
fdivrs
xchg
sub
adc
repnz
sub
call
pop
jb
cmpsb
sub
ljmp
xor
jp
aad
ss
or
incb
loop
sub
jl
addl
lds
jmp
adcb
pusha
lock
and
xor
jbe
cmpsb
imul
and
inc
lock
cmp
rcr
daa
sbb
push
lahf
mov
jge
push
cmp
movzwl
add
inc
mov
subl
ret
test
sub
xor
and
les
push
add
xchg
orl
add
cmp
or
ljmp
inc
add
popa
shrb
dec
xor
enter
pop
lea
stc
cmp
outsb
repnz
cmp
jg
cs
sbb
cmp
test
cmp
or
cmp
fists
rcrl
fistpll
stos
mov
fwait
lods
mov
mov
xchg
sbb
add
pop
dec
add
lods
mov
mov
dec
and
mov
jge
mov
test
in
mov
jnp
mov
popf
mov
add
pop
cmpsl
pop
mov
sbb
jecxz,pt
clc
jae
xchg
push
out
sub
repz
xor
mov
cmp
xor
js
iret
push
leave
add
dec
inc
jb
out
sbb
dec
sbb
dec
xor
pandn
adc
clc
shlb
mov
repz
jns
cltd
push
cli
icebp
mov
mov
push
dec
dec
xchg
shlb
in
sub
ficompl
out
xchg
mov
or
cmp
or
mov
iret
xlat
mov
lock
fwait
add
cltd
push
cmp
addr16
push
jecxz
push
jge
jge
jge
xorl
fwait
cmp
pushf
pushf
xchg
lods
mov
xchg
xchg
dec
and
sbb
mov
fcmovne
imul
xchg
mov
or
sbb
in
pusha
mov
je
gs
mov
mov
xor
or
inc
mov
pop
js
addr16
sahf
into
push
pop
into
and
pusha
dec
lods
lods
cld
adc
and
mov
aaa
ss
in
sbbb
mov
or
je
fcmovnb
loop
pop
call
cmp
fsubl
not
lcall
iret
shll
jne
bound
call
add
fs
call
sbb
xor
adc
push
or
insb
sub
mov
push
test
xchg
sbb
mov
and
arpl
cmpsb
pop
fidivl
leave
into
movsl
lods
cmpsl
outsb
movsl
dec
test
enter
insb
je
ss
aad
sub
mov
mov
mov
out
stc
scas
mov
xlat
sub
test
ljmp
sbb
fnsave
or
jmp
mov
leave
inc
jg
or
incb
jecxz
dec
test
out
jo
sahf
ret
mov
test
into
pop
inc
or
adc
and
mov
pop
inc
enter
add
and
ljmp
push
test
pop
xor
and
outsl
xchg
fimull
push
mov
adc
mov
call
insb
add
lea
lcall
fwait
inc
pop
jae
lods
jg
leave
outsb
adc
xor
jle
imul
or
push
es
push
cmp
fmull
inc
enter
andl
scas
push
faddl
sarb
dec
xchg
push
cld
xor
pop
mov
fdivrl
sbb
dec
mov
xor
pushf
popa
cmp
jb
aaa
scas
pop
jae
mov
push
mov
gs
ret
lods
les
fisubl
mov
jb
es
cmc
clc
inc
iret
mov
and
pop
mov
cmp
add
sub
lods
dec
add
push
push
adc
pop
xchg
jmp
mov
xlat
sbb
das
pop
push
xlat
data16
jle
and
test
mov
xor
scas
adc
pop
roll
xchg
cmp
test
jne
hlt
sahf
adc
or
push
fldcw
or
ljmp
lds
jge
mov
int
iret
fnstenv
pop
test
mov
mov
dec
xor
push
cwtl
arpl
sub
adc
mov
iret
inc
adc
movsb
adc
hlt
mov
sub
xor
jne
xor
movsb
and
in
shrl
jmp
pop
or
lods
xor
mov
sub
or
xor
js
mov
xchg
mov
std
adc
pushf
dec
adc
sub
dec
into
std
add
push
jmp
jp
pop
and
or
leave
lea
mov
jg
hlt
jp
sbb
mov
inc
ljmp
xorb
fs
lret
rorl
outsb
add
test
stc
mov
push
sbb
jns
repz
in
sub
mov
lret
mov
jnp
jmp
and
icebp
testl
push
cmp
mov
repnz
or
lods
cmpsb
jp
xor
jne
jmp
out
filds
int
ss
cmp
std
or
and
jg
inc
scas
mov
insb
pop
loope
jg
mov
je
mov
add
rcrl
pusha
mov
insl
sub
mov
mov
sub
pushf
fidivl
jge
jb
ljmp
push
sbb
fmull
dec
lds
andl
enter
pusha
mov
adc
adc
ja
loope
dec
mov
in
adc
add
insb
jge
or
xor
xor
sbb
xor
stos
lahf
mov
lret
mov
mov
lret
cli
cmp
aas
push
pusha
iret
push
rol
or
push
pushf
aam
outsl
add
mov
and
mov
adc
outsb
xchg
or
xor
out
jbe
jge
imul
cmp
movsb
loopne
push
mov
push
or
repnz
adcb
arpl
je
mov
inc
outsb
dec
lea
fldenv
sti
imul
cmp
out
popa
mov
add
pop
cmc
das
into
setl
movsl
clc
cmc
dec
addr16
test
adc
xor
mov
insl
andl
dec
adc
inc
das
cmp
int
fdivl
push
pop
jecxz
mov
gs
or
push
cmp
aam
ret
mov
jne
push
lods
ss
push
stc
sbb
scas
call
loope
testb
add
pop
and
aad
enter
sbbl
cmp
lahf
scas
iret
enter
jne
jle
push
aaa
fsubl
std
xchg
dec
pop
mov
pusha
sbb
xor
aaa
pop
mov
les
mov
icebp
cs
xor
ljmp
cmp
jb
test
pop
stc
rorl
jnp
iret
pushf
scas
fucom
shl
inc
nop
sbb
cwtl
arpl
jg
ljmp
and
mov
divb
jp
xlat
ljmp
mov
imul
mov
xorb
xlat
jle
int3
movsb
jnp
fisttps
scas
fists
mov
sahf
mulb
push
jae
jno,pn
les
or
cmp
inc
insb
inc
mov
loope
or
dec
rcrl
sub
lods
popf
in
xchg
xor
enter
sub
sub
add
ret
pusha
int
mov
icebp
scas
push
shll
push
mov
jnp
sti
jns
rclb
ds
mov
cld
mov
cmp
neg
into
pop
push
fsubrl
and
subb
jg
gs
addr16
in
imul
cli
stos
or
out
cmpsb
repnz
mov
sub
imul
pusha
inc
xchg
push
subl
in
pop
rcrl
je
loope
mov
fwait
push
push
int
xor
adc
pop
push
sbb
testl
insl
sbb
xor
test
jbe
popa
cs
in
mov
aaa
lret
and
push
adc
adc
jmp
mov
dec
clc
push
shll
jg
sbb
arpl
push
pop
push
sahf
or
ljmp
out
jno
jl
shrl
push
mov
cmp
popf
cmp
pop
sub
cmp
push
jne
out
in
sbb
subb
inc
cmp
mov
adc
shlb
addr16
clc
cmp
fs
icebp
leave
loopne
jmp
sbb
sahf
mov
mov
cmpsb
andb
sub
icebp
mov
mov
aaa
aam
fwait
jle
xchg
popf
or
movsl
add
xchg
cld
mov
cld
repnz
xor
mov
test
repnz
dec
fcmovb
test
sarb
cwtl
or
xor
inc
leave
nop
nop
ret
xchg
jnp
ret
cmpb
jnp
aaa
xor
mov
and
cwtl
in
jae
fwait
das
xor
push
dec
lods
mov
or
sti
mov
fimull
and
pusha
pop
or
adc
std
int
and
pushf
or
mov
cmpsl
xor
dec
mov
push
pop
sbb
mov
xchg
jns
pushl
aas
cmp
das
pop
in
sbb
mov
sub
gs
mov
and
xor
lods
or
jle
popa
pusha
dec
arpl
jb
sbbb
cltd
mov
pop
jecxz
repnz
xchg
cmp
push
mov
add
lods
sub
dec
jg
test
aam
sbb
lahf
fdivp
push
push
adc
outsl
lods
sbb
inc
jne
push
mov
lods
repz
mov
addl
lds
add
lods
mov
cmp
jge
in
loopne
pop
in
popf
cmpsl
cmp
rorb
dec
sahf
ljmp
pusha
sub
push
test
mov
cmpsl
push
sub
cmp
jno
popa
scas
inc
xchg
pop
mull
clc
mov
daa
jae
sub
movsb
mov
add
dec
inc
icebp
roll
cli
repz
cltd
iret
fs
test
call
inc
lods
lret
sub
jle
add
inc
mov
jl
cld
out
sub
icebp
ss
test
cld
jecxz
add
dec
jns
and
clc
cmp
sub
mov
imul
daa
adc
orb
arpl
mov
pop
lods
orl
push
rcrb
mov
pop
fimull
outsl
fbstp
mov
pop
lret
adc
xchg
lret
or
sbb
jge
aas
fmull
dec
sub
cld
add
or
xchg
fs
outsl
enter
test
loop
stos
mov
and
out
push
nop
push
sub
dec
jae
fstpt
mov
push
adcb
xchg
aaa
inc
in
jecxz
mov
or
rorb
pop
addr16
fldl
push
fwait
jge
push
jmp
loope
aas
jmp
mov
popa
fmuls
loope
mov
jl
imul
popf
faddp
test
cltd
dec
sub
jns
and
shlb
into
jno
pop
mov
push
pop
cltd
add
xchg
scas
int
push
or
ss
sbb
clc
mov
xor
sbb
pop
clc
xor
adc
xor
rol
sbb
sahf
cmp
lret
jno
push
inc
push
daa
mov
popa
cmp
lods
pusha
negb
pop
jno
icebp
pop
and
push
lcall
in
cmc
das
call
lahf
mov
out
lock
xor
sbb
jbe
imul
mov
jmp
imul
pop
mov
mov
cmpsl
mov
ret
jecxz
or
sbb
outsb
and
dec
pop
pop
fsub
dec
xorb
jg
inc
scas
mov
outsb
clc
and
fwait
inc
sti
lret
mov
jnp
aad
fsubr
je
push
pop
pop
dec
arpl
jno
aad
add
jne
dec
lahf
ret
cmpsl
fcmovnbe
xchg
mov
xor
jle
addr16
pop
loope
cwtl
pop
xchg
jg,pn
out
ss
cld
lahf
or
and
into
int3
fcoms
and
pushf
inc
fisttpl
loop
in
les
mov
stos
push
movsl
push
cmp
sub
sahf
jg
icebp
xor
out
sbb
insb
xor
in
xchg
sub
fmuls
cmp
mov
inc
pop
idivb
popa
ret
push
and
jecxz
enter
je
fcompl
int3
jbe
cmp
sbb
sub
idivb
dec
stos
or
or
pop
test
xchg
adc
push
adc
daa
test
xchg
push
aad
outsb
outsl
ror
xchg
dec
shl
lds
mov
xchg
mov
ret
xchg
cwtd
dec
es
mov
xchg
pop
es
popa
cmp
fxch
imul
xor
imul
mov
fists
lcall
xchg
sbb
fildl
mov
test
repnz
jmp
jl
adc
cmp
xor
mov
xchg
jmp
add
ljmp
mov
enter
xchg
aas
push
adcb
fiaddl
cmp
mov
xchg
mov
bound
adc
cld
sbb
call
mov
lret
pop
pop
lock
popf
sahf
int3
sbb
movsl
pop
scas
push
dec
test
les
xchg
xor
mov
and
inc
add
mov
movsl
in
sarl
push
inc
add
fdiv
xchg
xchg
sahf
cmc
leave
jno
inc
subb
lods
sbb
or
xchg
lcall
jl
lods
aaa
jae
imulb
icebp
incl
xor
gs
mov
shrl
fsubs
andb
add
lret
mov
mov
mov
stc
test
and
out
cli
mov
sarl
cmp
xor
mov
xlat
mov
ds
push
test
lea
add
loopne
lahf
pop
jl
mov
in
mov
dec
cwtl
cmp
mov
inc
testl
out
jno
ffreep
rol
mov
scas
mov
insl
pop
roll
or
lret
sub
fcom
stos
scas
mov
jg
push
fwait
xchg
call
or
fsubrs
out
test
repz
mov
jb
ret
push
add
cmp
mov
push
fdivrl
fnstenv
cli
xchg
cmc
decb
cmc
and
mov
movsl
xchg
sbb
pop
jnp
jne
xor
inc
jg
pop
cmp
pop
inc
mov
add
xchg
and
in
push
xchg
idivl
mov
xor
push
xlat
aad
aad
repnz
mov
das
repnz
mov
add
jnp
fdivrp
mov
insl
adc
dec
mov
mov
sarl
int
out
mov
sbb
movhps
or
loop
sub
outsl
les
movsl
in
push
or
in
dec
push
or
mov
in
loopne
add
popa
mov
cli
loopne
dec
rclb
movsl
push
popa
or
add
sub
pop
mov
mov
xorl
loopne
ss
and
daa
les
inc
jne
fiadds
and
bound
inc
xchg
dec
sub
jle
adc
scas
sbb
pop
pop
jnp
xlat
mov
lods
out
xor
jo
cwtl
mov
cli
jp
insl
jg
lods
xor
jge
dec
fdivrl
in
divb
push
push
mov
add
push
mov
bound
inc
arpl
or
sub
pusha
lods
mov
jae
add
sbb
addr16
push
bound
aas
cmp
arpl
push
aas
cwtl
push
sub
gs
mov
mov
sbb
mov
dec
mov
test
int3
cs
mov
fadd
adc
cs
jp
incb
cmp
cmp
pop
adc
mov
in
xor
pop
cmp
cmpsb
push
js
and
xorb
sub
std
scas
xor
jno
sub
fisubrl
fbld
jns
mov
inc
rorb
add
or
dec
out
daa
mov
cwtl
mov
mov
int
xlat
ja
mov
je
or
ss
cmp
dec
sbb
inc
adc
lret
in
orb
gs
jp
mov
faddl
push
and
jmp
fidivrs
dec
push
jmp
xor
cmp
enter
pop
lods
int3
daa
test
out
cmp
inc
push
adc
insl
add
add
repz
adc
push
push
inc
pop
and
or
daa
pop
insl
mov
sub
lahf
push
lret
dec
cld
test
imul
fadds
xlat
fwait
sub
add
jecxz
mov
std
fisubrs
jmp
ret
mov
ds
in
rorl
shl
inc
pop
lds
vshufps
aad
movsb
mov
xchg
test
inc
cld
inc
xor
xor
mov
aas
adc
scas
aam
sub
pop
dec
insl
mov
cmp
mov
testl
lods
pop
or
ljmp
mov
das
fnstenv
insl
jp
and
jmp
jbe
hlt
jno
lret
or
aaa
jle
cmc
add
and
lret
push
mov
jecxz
adc
jle
pop
adc
adc
in
cld
mov
xlat
mov
or
pop
lcall
repnz
arpl
and
cld
sbb
mov
push
or
scas
pop
inc
mov
mov
mov
and
cmp
xchg
insl
out
test
xor
sbb
enter
mov
inc
stc
mov
cmp
pop
rcll
add
or
pop
jae
pop
ja
or
test
inc
in
xchg
jb
fcoms
sarw
jmp
sbb
sub
out
inc
mov
push
std
jae
inc
stos
repz
pop
add
push
movsl
xor
test
push
mov
and
inc
lock
jmp
lret
je
and
or
insb
or
bound
js
dec
dec
imul
adc
and
clc
shll
sahf
dec
mov
or
sarb
cmp
int3
lcall
insb
sbb
mov
pop
scas
mov
enter
add
cmp
dec
pop
jo
jno
push
jmp
movsl
stc
inc
dec
popa
add
nop
mov
out
adc
bound
mov
add
cmp
dec
stos
stos
fistl
hlt
jo
repnz
cmp
xchg
ret
inc
loopne
jg
andb
adc
or
idivb
xor
push
push
pop
jmp
pop
movsl
mov
scas
sarl
sub
pop
out
es
mov
push
lret
jbe
sub
pop
mov
loopne
xchg
and
outsl
int
das
and
jb
add
and
jnp
and
dec
pop
sub
nop
pop
in
js
jl
push
shlb
xchg
mov
aaa
pop
and
pop
out
sahf
jno
mov
pop
jmp
cs
cmp
loop
lods
jne
xor
lods
xchg
adc
push
inc
jns
mov
es
mov
and
jne
out
pop
add
jae
xor
cmp
sub
fidivrl
or
cli
jo
ss
jae
aaa
outsl
adc
scas
sbb
lret
into
inc
movsb
mov
push
mov
adc
mov
jge
mov
test
stos
cmpsl
adc
xor
popa
scas
lret
rcl
je
add
jbe
repz
inc
int3
test
cmpsb
stos
lret
rol
into
dec
cmpsb
std
imul
stos
cmp
dec
or
stos
scas
fiaddl
cwtl
sahf
push
mov
xor
and
stos
int
xchg
mov
inc
movsl
or
jg
sbb
cli
jg
cmp
sarb
jl
inc
test
dec
xor
loope
push
pop
jecxz
hlt
sub
cmp
clc
mov
outsl
jno
ljmp
rep
cwtl
xor
add
fldl
in
in
dec
or
cld
mov
push
ja
js
xchg
or
dec
in
jle
insl
pop
inc
jg
test
rorl
rcrb
or
push
mov
daa
dec
mov
inc
and
inc
xchg
enter
mov
pop
iret
call
dec
and
and
pop
lods
sbb
fs
outsb
inc
ss
in
cltd
rcr
cld
xchg
mov
insl
mov
cmp
jmp
jg
xchg
shrb
cmp
inc
out
dec
int
pop
push
outsl
pop
ljmp
sub
scas
sahf
mov
and
adcl
repnz
iret
jmp
adc
mov
mov
aas
imul
xchg
ja
add
filds
pop
jmp
test
nop
movsl
gs
or
ret
ret
in
push
aad
imul
lods
add
pop
std
cld
mov
in
xor
jo
mov
fnstenv
cmc
ficoml
lret
mov
mov
push
mov
sub
ss
jmp
nop
in
xor
jns
leave
daa
fimuls
xchg
dec
adc
push
sub
add
ret
mov
shll
xchg
inc
mov
sahf
fbstp
scas
mov
add
cmc
pusha
in
lret
pop
push
insb
xor
lods
adc
xchg
mov
xor
pop
lret
sub
inc
xor
jmp
loopne
cmpsl
or
inc
outsl
jg
jne
mov
fwait
xchg
sti
dec
pop
ret
rcrl
adc
test
popa
out
cmp
int3
add
xchg
jbe
sbb
int3
test
push
lock
pop
nop
ja
pop
stos
fiadds
dec
test
insb
negb
arpl
dec
mov
mov
pop
imul
lcall
arpl
mov
daa
jg
aam
ljmp
dec
std
in
aam
mov
and
add
ja
xchg
aas
mov
sub
idivb
sbb
xor
leave
pushf
mov
jae
dec
movsl
arpl
push
and
jmp
add
loop
push
add
mov
lock
inc
int3
push
sarl
insl
mov
add
shrl
mov
sub
imul
pusha
aad
pop
cmpsl
xor
lock
fwait
sbbl
aam
pop
aam
cmc
push
stc
iret
inc
dec
or
test
cmp
sti
mov
sti
pop
sub
adc
int
mov
xchg
lds
pop
mov
sub
jnp
or
sbb
sbb
fistps
stos
aaa
inc
mov
out
dec
nop
lea
xor
mov
inc
mov
mov
enter
inc
xchg
inc
aam
outsb
shll
xor
xchg
test
or
test
daa
mov
setp
ja
xchg
popf
fdivrp
and
fbld
push
repz
or
outsb
sub
int
in
or
stos
pop
js
test
scas
shlb
and
lret
ficomps
fcmovne
pop
repnz
pusha
add
push
subl
mov
js
mov
cmp
adc
fstpt
mov
idivb
sub
movsb
in
das
testb
add
adc
xlat
pop
std
xlat
fimuls
cld
fsubrl
stc
shlb
add
in
lds
pop
pop
mov
aaa
cltd
lock
imul
dec
int3
jmp
ret
cmpsb
out
les
into
es
fs
jl
lds
sub
and
outsb
mov
push
push
imul
cmpsb
cmc
jp
sbb
push
sub
cwtl
shrl
fistl
adc
mov
mov
or
pop
push
shlb
cld
mov
pop
cwtl
sbb
jbe
dec
aas
aam
mov
js
cmp
mov
sub
loope
stos
cmpsb
loope
jne
jmp
out
jle
int
sub
mov
popa
push
enter
jmp
mov
push
mov
inc
loopne
orl
mov
cmp
leave
jmp
leave
lds
ret
add
cmc
loope
arpl
imul
inc
pop
cmp
fs
sbb
jne
jns
scas
jle
dec
jns
mov
push
adc
lret
ss
cmp
cmp
and
arpl
cmp
aas
movsb
fwait
sbb
push
ss
hlt
aad
push
mov
xchg
pop
and
aam
mov
imul
or
jae
add
repz
leave
les
mov
sub
es
jb
lods
dec
push
xchg
add
jae
clc
cmpsl
mov
push
cwtl
push
xchg
mov
out
dec
dec
stos
xchg
xor
fisubrs
dec
pop
dec
and
cmc
imul
or
mov
pop
adc
lcall
cmp
sub
lock
xlat
repnz
xlat
dec
mov
imul
jo
mov
imul
and
xor
dec
aad
int3
int3
or
lret
and
imul
inc
mov
popl
mov
and
pop
cld
mov
out
mov
shld
dec
jp
hlt
jmp
sub
mov
cmp
enter
push
out
cmpsl
and
inc
and
cld
cmp
add
add
addr16
mov
lods
aaa
xorl
aad
aad
adc
xor
clc
jecxz
cmp
push
or
mov
clc
pop
mov
pushf
icebp
sbb
enter
pop
xor
enter
and
xchg
xchg
sarb
mov
movsl
rcr
mov
frstor
aas
jge
dec
fcoml
std
aad
pop
fisubrl
push
push
inc
cli
mov
mov
mov
ret
pop
pop
push
mov
mov
insb
mov
out
fiadds
inc
jmp
pop
orb
pop
dec
mov
hlt
mov
cmpsb
jns
in
pop
lods
in
lcall
into
dec
jecxz
test
cmp
stos
xor
outsb
push
fstpt
jmp
pop
cltd
lods
popf
arpl
sub
orl
roll
hlt
cmpsb
xchg
stc
pop
mov
sti
add
int
xchg
rcr
sub
pop
pop
mov
pop
scas
mov
out
mov
add
js
pop
aaa
popf
adc
out
add
mov
sub
in
lea
mov
xchg
int
scas
dec
add
test
and
test
aaa
mov
sbb
and
xor
insl
lcall
mov
push
fwait
sbb
pushf
adcb
xchg
mov
std
jg
stos
out
inc
fucomi
jg
inc
xor
sub
cmp
gs
arpl
pop
out
shlb
pop
pop
mov
pop
mov
pop
daa
mov
inc
jle
psubd
dec
arpl
push
mov
add
sar
js
std
mov
dec
aad
shrl
test
in
mov
cmp
leave
and
aaa
rol
xchg
cmp
sbbl
xchg
sub
push
push
jne
loop
mov
xor
enter
mov
mov
dec
cli
fdivrs
mov
adc
sub
sub
shl
xchg
imul
sub
xchg
idivb
adc
or
and
xchg
sub
lock
int3
dec
scas
push
xchg
sbb
fists
in
push
xchg
stos
add
jl
adc
cmpsl
test
stos
ret
mov
movsb
pop
ror
insl
fnsave
lcall
repz
push
mov
mov
cwtl
insl
mov
fwait
aaa
jl
xchg
out
fsubrs
sub
pop
jecxz
mov
and
push
aam
imul
popf
test
mov
adc
repnz
idivb
loope
out
mov
test
test
out
jne
bound
shll
adc
pushf
mov
and
jmp
push
test
js
or
ret
les
icebp
leave
xchg
testb
ljmp
clc
fists
adc
jge
mov
xchg
jb
mov
push
mov
imul
xchg
push
cmpsl
test
jmp
aaa
sbb
rcrb
test
insb
popl
and
out
sbb
xlat
xor
mov
mov
or
mov
test
mov
mov
repz
xchg
out
xchg
ja
std
sti
xor
popf
rolb
push
dec
lea
rorb
nop
sub
xchg
sbb
lock
hlt
sub
push
inc
movsb
dec
add
cmc
sbb
ret
fsts
faddl
mov
aad
pop
ficompl
and
fdivrp
and
out
xchg
icebp
mov
in
iret
inc
in
in
les
xor
jne
adc
mov
sub
push
mov
and
or
fisttpl
push
jp
subb
jne
push
pop
xchg
out
cmp
in
sbb
push
adc
loop
icebp
stos
cli
xchg
call
fstps
pop
insl
jl
cmp
or
in
mov
add
mov
fstl
jbe
into
sub
sub
mov
or
insl
pusha
or
popa
jo
fisubrl
fistpll
cmp
bound
movsb
clc
fwait
sti
sbb
stos
xchg
push
mov
inc
xor
into
mov
lods
shlb
mov
enter
and
jne
data16
mov
mov
pushf
js
ss
xchg
jmp
xchg
shrb
les
xor
aas
shl
or
push
cmpsl
pop
and
sub
loop
push
dec
mov
sub
sbb
sbbl
dec
in
mov
or
nop
add
dec
not
shr
dec
test
dec
std
dec
jbe
xchg
jno
sbb
and
jne
mov
mov
dec
xchg
cmc
sbb
xlat
jbe
add
mov
pusha
add
mov
cmp
aas
sbb
mov
notl
pop
lret
mov
push
push
dec
and
mov
mov
aaa
in
xor
dec
daa
fistpl
sbb
mov
add
sbb
mov
sub
push
out
sbb
mov
push
outsb
fsincos
fisttps
jmp
push
mov
add
dec
dec
xor
into
pop
pop
xchg
add
jl
adc
ret
ljmp
push
push
inc
loope
movsl
mov
les
push
add
jmp
adc
aas
xchg
bound
mov
mov
mov
xchg
test
ret
pop
insb
mov
pushf
js
push
js
or
xor
pop
aam
lods
pop
js
adc
add
pop
out
mov
add
fdivrl
cli
and
es
stc
xor
jbe
fisubs
jne
sub
rclb
lahf
lds
es
pop
nop
sbbb
addb
lret
adc
decb
or
std
xchg
std
mov
mov
sub
js
jo
inc
fisttps
or
bound
sbb
jmp
pop
out
xchg
mov
daa
fstpt
aam
push
sub
aas
sub
xchg
lock
imul
xor
lock
mov
lret
and
mov
xchg
push
inc
adc
mov
push
cmpsb
lods
in
pop
xchg
jp
sbb
push
cmpsb
add
dec
jns
pop
inc
idivl
test
out
aam
adc
dec
inc
sahf
inc
jmp
mov
icebp
lcall
pop
adc
pop
jne
lock
lock
scas
paddd
inc
pop
aad
mov
jl
les
outsb
xorl
push
add
sub
je
sbb
imul
and
pop
mov
orl
push
shll
mov
pop
fcomi
or
mov
and
arpl
das
stos
dec
sbbl
sub
popa
roll
push
sbb
ror
mov
xor
ret
inc
filds
cmp
xor
sti
adc
adc
jg
mov
gs
jmp
dec
mov
sbb
xchg
mov
fcmovne
dec
cmpsb
cmpsb
xor
adc
ficoml
inc
inc
add
int3
flds
mov
mov
inc
jg
push
or
repz
jo
rorl
popf
lret
pop
mov
adc
das
cwtl
push
cmp
div
and
fs
lcall
mov
cmpsl
lods
jno
mov
push
xchg
cmp
fs
sub
mov
lock
enter
mov
cmpb
sahf
mov
add
jmp
call
hlt
adc
lret
inc
cmp
jno
enter
int
scas
push
fstps
loope
js
stc
jb
sub
xorl
outsb
jns
test
mov
xor
aas
es
jmp
sbb
int
xor
fdivrl
es
mov
stos
dec
mov
int
call
add
push
xor
ret
and
adc
ds
fistpl
andl
addl
call
dec
jns
out
imul
stos
mov
pop
push
cs
imul
push
sbb
sub
mov
sbb
cs
mov
lahf
fcomi
rolb
aad
xchg
jle
jne
fstpl
add
jo
pop
jno
hlt
fidivl
lret
test
mov
mov
or
cmp
sbb
or
adc
cmp
adc
cmp
stos
fisubrs
hlt
clc
nop
pop
xchg
inc
mov
pop
sbb
pop
push
out
jb
gs
fldl
sbb
hlt
xlat
lret
ja
jo
stos
movsb
push
int3
jno
insl
ds
push
sbb
push
inc
call
inc
push
mov
ds
pop
stc
xor
mov
daa
jmp
lds
sbb
jle
and
std
addr16
loopne
cmp
lcall
loop
aam
int
inc
pop
xchg
mov
std
cmc
jle
out
nop
out
mov
xchg
pusha
ret
dec
mov
xorb
mov
push
ret
int
nop
int3
push
das
or
shrl
pop
test
ret
pop
cld
addr16
inc
call
loop
lret
jnp
sbb
fidivrs
lahf
movsb
pop
into
mov
fcmovnb
out
inc
cld
jge
dec
adc
add
pop
popl
es
out
imul
push
dec
mov
mov
cltd
popf
mov
cmpsl
mov
adc
lret
inc
subl
pop
inc
sbb
xchg
or
pusha
push
outsl
sbb
out
dec
sbb
fdivrl
nop
cmp
sbb
roll
dec
or
mov
dec
out
xchg
lock
cmc
or
imul
shr
inc
jmp
fcom
pop
cs
jae
lods
and
mov
or
dec
cmp
and
icebp
mov
rcrl
or
and
mov
xchg
adcb
cmpsb
jle
insb
rcrl
dec
lods
subb
stos
fldl2e
mov
and
add
jnp
data16
fisttpll
push
ljmp
inc
sbb
pop
out
shll
adc
stos
mov
xchg
insl
lret
cld
mov
cmp
in
add
jmp
out
pop
add
sub
lods
or
adc
stc
or
dec
mov
cmp
ja
mov
xor
cs
ds
push
mov
xlat
jo
dec
fimuls
je
fsubr
fidivl
mov
sbb
jb
cmp
inc
mov
xchg
inc
push
fdivrs
imul
nop
jbe
mov
sbb
shlb
stos
scas
and
pusha
arpl
outsl
sub
pop
in
pop
inc
jo
inc
mov
shr
adc
pushf
in
aaa
mov
or
jb
cmpsb
xor
sub
xor
fs
pop
push
les
xchg
fs
add
sarl
pop
jle
add
jae
fwait
mov
pop
loopne
xor
mov
ljmp
js
lds
aad
fsubrl
outsl
shr
push
xor
movsb
lahf
mov
in
push
inc
mov
and
shll
push
push
mov
shll
ss
mov
sub
adc
jns
push
mov
movsb
push
andb
mov
mov
xchg
sub
orps
jbe
adc
loopne
dec
dec
rorb
popa
ja
sbb
daa
cmpb
or
mov
aaa
cli
mov
sub
xlat
push
pop
bound
outsl
cli
sbb
push
ss
mov
or
ljmp
pushf
cwtl
push
mov
sub
iret
xor
mov
push
mov
jns
movswl
fs
sub
lret
hlt
sbb
test
pop
sub
call
sub
xor
dec
adcl
mov
outsl
fidivrs
loopne
scas
add
mov
dec
xor
jae
mov
xlat
lods
psrlq
lcall
dec
imul
jl
mov
adc
mov
sub
xchg
movsb
leave
mov
lds
out
inc
icebp
sub
push
cmp
xchg
stos
adc
cmp
movsl
stc
jnp
jo
cld
cmp
inc
jo
stos
push
ret
mov
lock
xor
loopne
inc
dec
mov
sub
jecxz
popa
sbb
dec
mov
mov
mov
xor
push
sub
mov
movsl
ja
xchg
pop
mov
rcr
push
sti
add
cmpsb
loop
addr16
fcomps
decb
sub
adc
fmulp
in
xor
jl
push
test
aad
jno
lret
sub
cmc
jbe
sbb
jne
push
aad
sarb
aam
sbb
dec
out
mov
pop
ds
outsl
lea
jecxz
push
je
out
push
jnp
cld
outsb
in
std
and
mov
movsb
adc
or
xor
jne
hlt
lock
pop
dec
les
loop
cmpl
pop
ficoms
sbb
movsl
into
adc
inc
mov
jmp
loopne
xchg
faddl
bound
sub
cs
in
pop
sub
sahf
pop
inc
fnsave
das
cld
inc
sub
xchg
cmpsb
or
ja
in
inc
hlt
pop
push
mov
inc
fimuls
imul
outsb
and
out
mov
cmp
sarb
fcoml
and
jne
inc
mov
lds
jo
sbb
adc
sbb
enter
xchg
shll
rep
hlt
jnp
push
inc
rol
mov
outsb
push
dec
xor
cmp
xchg
icebp
and
mov
xchg
scas
push
in
push
inc
mov
jmp
sahf
add
push
hlt
xchg
mov
aas
nop
clc
and
rcrb
or
push
cli
jno
xchg
into
loopne
in
mov
dec
jmp
inc
ljmp
sbb
xchg
dec
stos
test
repz
and
xchg
mov
sub
popf
repnz
xor
in
aaa
cmp
jge
aas
sub
sbb
mov
jmp
iret
xorb
push
xadd
test
imulb
movsb
pop
xchg
in
es
push
or
cli
out
lods
cld
fcoms
or
ficoml
mov
cmp
leave
mov
dec
fwait
loope
pop
xor
adc
mov
les
and
sbb
push
scas
orb
nop
lods
add
pop
sbb
filds
cmc
mov
pop
iret
jnp
mov
pop
lods
or
popa
xor
inc
test
push
xchg
ret
and
xchg
xchg
stc
cmp
ret
ret
mov
push
int
jbe
rcll
enter
lahf
push
dec
lods
lret
outsb
andb
in
add
inc
push
jo
aam
aas
lea
jb
add
lods
pusha
mov
ror
jns
dec
lods
add
inc
pop
pop
cmpb
add
stos
mov
dec
shlb
int
lret
ds
pop
and
sub
call
inc
xchg
mov
sub
mov
mov
cmp
mov
call
fisubrl
cs
xchg
push
shlb
jns
subb
test
pop
fstpt
into
or
cmp
dec
and
dec
push
pop
int3
push
xor
xchg
rorb
shlb
pop
dec
mov
pop
mov
cmp
mov
jecxz
movsb
mov
pop
cmp
pop
and
pop
les
jbe
adcb
jle
in
or
jnp
push
add
insl
sbb
cmpsb
mov
pop
aam
sahf
xor
ret
push
inc
push
mov
adc
repz
push
push
jne
push
mov
mov
fcoms
ss
and
fstpt
sbb
fidivrs
mov
dec
call
inc
sbb
movaps
jbe
mov
in
test
ficompl
push
add
mov
inc
lods
test
jle
bound
in
cmp
lahf
push
push
and
test
int3
out
adc
or
sahf
outsl
push
fistl
ret
cmc
or
fcomi
inc
iret
jo
or
and
inc
or
jmp
xchg
jo
dec
ja
jecxz
sub
dec
xor
jns
orl
ret
and
test
outsl
xlat
and
and
mov
lock
jns
hlt
mov
ret
jbe
or
or
adc
insb
mov
sbb
out
add
xor
pop
pusha
mov
push
sbb
jp
jbe
jae
int3
lgs
sub
mov
lock
add
cmp
push
jns
rolb
fidivrs
dec
aaa
jg
inc
ljmp
enter
pop
xor
inc
je
hlt
pop
pop
iret
mov
sub
std
popa
iret
xchg
push
mov
out
out
jns
sbb
mov
shrl
testb
out
xlat
lds
pop
mov
mov
seta
jne
hlt
ljmp
cmpsl
sub
dec
sub
stos
psllq
xor
in
jecxz
push
mov
out
adc
xchg
flds
inc
pop
xchg
mov
dec
inc
jecxz
aam
icebp
shll
das
enter
jbe
sub
add
pop
xor
pop
sbbl
inc
jae
incl
pop
mov
addl
ss
sti
imull
imul
cmp
mov
pop
cmpsl
imul
xchg
pop
stos
out
out
jmp
dec
jge
movsl
push
or
cmpsb
imul
push
jno
out
fmulp
fmull
dec
imul
jl
inc
xchg
in
out
inc
test
bound
sbb
lds
adc
movsb
loop
add
mov
lret
pop
mov
imul
pop
cmp
test
or
fidivrs
jns
repz
scas
xlat
mov
sub
into
pop
lds
movsb
or
sti
and
movsb
inc
add
mov
lret
out
push
or
and
xchg
or
outsl
push
lahf
movsb
lret
ret
and
cs
jbe
push
notb
loopne
cltd
outsl
lock
jno
es
test
mov
inc
out
and
jns
xchg
pushf
test
inc
dec
movsb
lahf
nop
ja
push
aam
fnstenv
dec
movsl
sub
imul
or
enter
cmp
out
iret
aas
repnz
fildl
popa
stc
sub
insb
pop
xor
mov
lret
mov
jno
pushf
push
insl
int3
cmp
mov
jecxz
adc
jne
lds
jecxz
add
fmuls
arpl
inc
hlt
mov
xor
cmpsb
add
xchg
roll
or
sbb
iret
sbb
or
fdivrp
cmpsb
xlat
mov
or
cmpsl
cmp
adc
jp
sub
movsb
mov
mov
in
jp
and
mov
lods
adc
aad
mov
cmp
mov
jp
enter
jb
cmpsl
pop
mov
lds
xor
insb
hlt
cmc
in
cmp
xor
gs
jo,pn
and
mov
sub
xchg
pop
mov
xor
xor
addb
lahf
sbb
fisubrl
dec
xchg
repnz
jge
cmpsb
push
jno
scas
jl
cmc
and
data16
adc
js
js
out
dec
ret
push
push
xor
add
loopne
jbe
inc
xor
or
mov
mov
gs
pushl
pop
sbbb
adc
push
mov
adc
dec
or
lcall
jbe
xchg
or
xor
call
push
jmp
lods
daa
mov
scas
pop
sbb
xor
and
iret
fistps
jae
pop
out
mov
js
mov
xchg
int
add
xchg
lcall
sbb
dec
sbbb
xchg
xor
xchg
sbb
ljmp
add
cmp
sar
adc
xor
xor
cmpsl
popa
mov
jp
xor
and
mul
sahf
or
cmp
or
imul
data16
cmc
cmpsl
or
jbe
test
aaa
fstl
fucomp
xor
cmp
ss
mov
lret
dec
cltd
or
xchg
push
push
pop
mov
jge
or
mov
ret
pushf
cli
lock
inc
push
daa
cld
xchg
nop
call
test
call
fdiv
jg
dec
lret
jns
jle
mov
lret
mov
mov
mov
fs
cmpsl
mov
mov
lods
ret
adc
adc
sbb
pop
push
xorl
hlt
pop
int3
sbb
scas
outsl
add
push
lock
pusha
inc
dec
imul
inc
or
insb
scas
xchg
out
neg
push
mov
cmpb
lret
inc
movsl
pop
mov
cld
das
and
pop
mov
and
sbb
int3
shlb
movsl
call
mov
xlat
cmp
mov
mov
mov
nop
lret
and
arpl
test
pop
cltd
mulb
inc
pop
mov
push
push
cld
mov
inc
pop
pushf
xchg
push
addb
jecxz
mov
mov
sbb
mov
xor
pop
bound
test
cld
in
std
mov
mov
cmp
psllq
icebp
fisttps
cmp
les
xchg
outsb
mov
mov
jp
gs
cmp
pop
fdivrl
lret
pop
jle
pop
mov
mov
sbb
adc
test
test
dec
mov
imul
jmp
testb
in
add
adc
enter
cltd
fisttps
add
jg
mov
mov
mov
call
cwtl
out
adc
stos
sahf
push
push
cmp
sbb
mov
or
add
sub
hlt
cmp
or
fsubr
aad
or
iret
pusha
ja
pop
cmc
lret
dec
bound
or
sbb
cltd
in
mov
inc
jg
push
lret
scas
adc
rolb
leave
xlat
or
xchg
lea
jg
flds
popf
out
popf
sbb
pop
mov
jae
in
jp
das
mov
stos
in
add
mov
orl
cltd
push
js
cli
jo
sbb
push
mov
pop
pop
in
sub
sahf
sbb
lock
and
into
push
lds
sahf
sbb
pop
imull
pop
mov
sbb
mov
repz
mov
fisubrl
add
xor
subl
ret
inc
adc
push
imul
xchg
cmp
push
outsb
push
cmp
mov
sbb
inc
pop
cltd
loopne
mov
jns
adc
xchg
sbb
lret
js
xor
fsubp
mov
dec
or
mov
push
stos
mov
cltd
mov
mov
in
mov
adc
cmpsb
cld
arpl
lods
sbb
stos
sub
cmp
loop
mov
mov
sub
mov
les
dec
arpl
in
ljmp
das
lea
in
aas
jo
call
fldcw
les
pushf
and
pop
cmp
out
nop
jmp
jmp
loop
clc
jo
enter
int
dec
fs
xchg
and
jge
negb
fstpl
iret
dec
push
fldcw
inc
mov
cmpsb
shll
and
cwtl
mull
cmp
fisttps
dec
btcl
add
sbb
sbbl
jg
sar
das
and
cmp
xchg
stos
mov
shlb
push
cmc
sti
aas
lahf
jns
jns
fs
fs
ja
pop
or
mov
mov
sbbb
ret
cmp
dec
pop
adc
or
push
sub
pop
mov
sbb
in
sub
cltd
sub
and
imul
adc
test
scas
ljmp
icebp
add
fsts
lods
adc
inc
sbb
icebp
jbe
pusha
movsl
and
in
inc
in
sarb
xor
stos
scas
mov
add
insl
ss
cld
xlat
nop
push
test
clc
fst
xor
dec
js
or
sub
push
and
out
jl
mov
pop
cmp
inc
adc
insl
out
pop
jp
add
push
into
addr16
movsl
test
inc
cld
adc
lahf
sbb
hlt
add
lods
fsubrs
test
lahf
sub
inc
pop
sub
xor
push
loopne
pop
sub
out
dec
push
xor
sahf
xchg
and
dec
call
push
dec
sub
jns
arpl
addr16
movsl
add
les
sub
movl
inc
cmp
lea
or
dec
pop
test
rclb
gs
inc
mov
fisubrs
outsb
pusha
xchg
into
sub
divps
andb
test
out
orl
xlat
inc
nop
out
fs
mov
aam
mov
pop
inc
scas
push
mov
shl
xchg
push
add
nop
pop
or
or
pop
adc
test
xchg
icebp
test
test
sub
jne
out
fcom
mov
dec
stos
adc
push
mov
bound
sub
add
lock
sub
jge
icebp
push
sub
add
das
or
dec
pop
fldz
inc
aad
cmc
fnstenv
cltd
insb
adc
jno
lret
shll
push
cwtl
sbb
fimuls
or
ss
dec
jnp
push
icebp
xchg
imull
xchg
mov
lods
inc
add
dec
pop
aaa
jmp
add
lret
mov
enter
rolb
add
ficomps
std
sbb
jae
data16
mov
and
nop
or
inc
es
xor
adc
sbbl
test
pop
inc
jl
sbb
dec
xchg
xor
or
rorb
sahf
clc
mov
std
cmp
inc
add
movsl
rclb
jb
add
cwtl
adc
scas
or
int3
and
pop
pusha
sbb
jno
cmp
jge
pushf
adc
xchg
sbb
and
xor
in
xor
sbb
js
inc
xor
in
mov
je
jb
outsb
rol
xchg
xchg
add
sub
push
enter
dec
loope
inc
pop
pop
xchg
inc
lret
cmp
pusha
stos
cld
divb
adc
mov
jle
clc
dec
adc
mov
push
mov
arpl
lcall
imul
pop
test
fnstcw
adc
hlt
jnp
repz
cmp
mov
dec
subb
xor
pop
push
pop
fistpll
dec
sbb
or
mov
mov
mov
scas
push
mov
outsl
mov
mov
mov
jge
add
js
mov
add
inc
js
cmp
loopne
push
std
sbb
push
mov
lea
idiv
xlat
sub
outsb
and
or
arpl
nop
out
pusha
inc
add
and
lahf
adc
lods
inc
xchg
inc
sbb
sbb
cmpl
pop
xor
add
stc
push
cmp
test
fwait
aas
and
sbb
jbe
jb
stos
mov
int
repnz
xchg
stc
xor
cs
loopne
cwtl
and
test
scas
ds
xor
xor
out
mov
sub
xor
cmp
dec
xchg
and
xchg
jmp
stos
inc
xor
add
outsl
or
rcll
movsl
jns
std
lret
int
mov
out
int
mov
imulb
add
xchg
movsb
jnp
fwait
push
sub
mov
xchg
xchg
cmp
and
adc
mov
aaa
dec
roll
sbbl
xor
mov
fwait
pushf
add
mov
inc
fisubl
mov
leave
inc
push
mov
aam
mov
pop
push
insb
cmpsl
dec
in
adc
lods
insl
xchg
cwtl
movsb
adc
fwait
test
jo
test
dec
fcompl
fnstcw
adc
call
jo
dec
shll
ret
nop
jae
sub
xchg
xchg
fdiv
sbb
sbb
ret
xor
add
xlat
cltd
lahf
inc
push
jne
pop
add
xor
push
jmp
push
pop
jl
clc
cld
out
dec
in
adcb
mov
mov
call
jns
cmc
shlb
mov
mov
mov
mov
fidivl
imul
lea
cltd
das
test
cmpl
mov
cmp
xorl
hlt
push
mov
jno
into
ja
in
mov
test
xor
or
pop
scas
stos
imul
xchg
pop
and
push
xor
jle
inc
mov
mov
jb
out
cmpsb
rcl
je
sbb
std
mov
loope
sbbl
aaa
jg
and
bnd
push
xchg
jle
add
movsl
test
xchg
jbe
xchg
pop
cmp
js
xchg
dec
sbb
adc
xchg
pop
sbb
and
fists
lea
out
fstl
das
mov
into
dec
lock
rcrb
or
into
xchg
push
sar
cld
imul
adc
inc
popa
mov
stos
rorb
cmp
testl
in
out
push
mov
shlb
in
loop
cmp
aad
nop
in
pop
mov
or
and
loopne
sub
daa
and
rorl
inc
loopne
mov
cmc
mov
sbb
mov
lcall
inc
and
nop
and
insl
cmp
popa
and
jne
fs
jg
xor
imul
mov
das
mov
jbe
cmp
push
jno
out
jae
mov
addr16
sbb
xorl
bound
xchg
stc
and
test
and
sub
in
loopne
push
pushf
inc
je
push
hlt
rcrb
cmp
xor
push
sbb
push
dec
lock
stos
and
or
mov
aam
and
out
cltd
dec
push
add
mov
leave
pop
popf
push
movsl
cltd
mov
mov
cld
xchg
rorl
cmp
into
pop
lret
adcl
mov
cmp
mov
xor
xor
repnz
cmp
pushf
aas
fisubl
mov
repz
je
cmp
dec
lcall
std
push
and
xchg
mov
cld
inc
lret
jb
push
pop
imul
push
lods
imul
dec
inc
call
lea
int3
lods
fidivrs
sbb
pop
popf
and
sub
lahf
add
add
lahf
scas
data16
cld
inc
lret
rorl
stos
push
stos
jns
push
ret
mov
push
sbb
out
mov
fidivrl
lret
into
xor
cmp
stc
loop
cmp
sbb
into
mov
les
push
xor
andl
pop
arpl
adc
in
decb
dec
ret
cli
push
mov
pop
jp
addr16
rep
sub
das
xor
arpl
push
inc
add
ljmp
cmpl
pop
aam
cmp
into
jg
mov
jns
xor
arpl
into
dec
jmp
sub
stos
mov
or
incb
push
int3
shlb
push
push
mov
leave
cwtl
pop
push
icebp
fdivs
loop
cmpsb
jns
sbb
add
andl
gs
xor
cmp
push
xor
jno
pop
lcall
nop
cmp
fadds
repnz
adc
push
pusha
mov
enter
add
mov
shrl
or
jmp
mov
ret
rcrl
loop,pn
adc
add
sbb
and
mov
cmp
jle
add
negb
in
pop
mov
jg
dec
jecxz
scas
jmp
jae
ret
out
cs
cmp
add
xor
jp
outsb
inc
jnp
sub
jnp
ret
out
and
das
inc
clc
sbb
push
add
loop
cmp
pop
inc
movsb
test
jl
repnz
mov
scas
mov
xor
pusha
imul
aad
decb
jle
icebp
dec
into
shrl
xchg
xlat
dec
cli
aam
sub
dec
add
cmp
test
es
cmp
js
das
push
ret
ret
lret
inc
and
mov
call
xor
adc
test
stos
mov
fsts
pop
lcall
cmpsb
clc
or
insb
shrb
test
jns
cmpsl
xchg
out
stos
mov
cmp
je
adc
adc
adc
ljmp
dec
lret
nop
inc
stos
in
out
inc
ljmp
mov
jecxz
and
jns
pop
push
sbb
movsl
lods
pop
lods
sub
inc
iret
test
jg
or
ret
jae
adc
repnz
adc
inc
pop
stos
int
movsb
jl
sub
les
sbb
fstpl
fidivrs
or
mov
jbe
xor
sbb
rclb
pop
dec
jno
test
lret
nop
ficomps
or
sbb
or
adc
ss
loop
dec
adc
inc
ja
push
inc
mov
sbbb
fwait
xchg
cmpsb
daa
xchg
sub
int3
dec
ja
xor
scas
imul
dec
jnp
mov
add
or
dec
mov
inc
add
sbb
cmpl
pop
lods
stc
jne
out
mov
cmp
or
popa
push
or
push
hlt
test
lret
cmp
shrb
jecxz
std
pop
popa
inc
add
shrb
rcrl
cmp
pusha
adc
repnz
std
mov
repz
dec
mov
fistpl
adc
mov
out
push
adc
dec
sbb
cmp
fs
repz
test
dec
mov
aas
mov
xchg
jmp
ret
int
das
jb
mov
inc
dec
jns
pop
or
mov
sbb
sub
and
inc
movsl
dec
stos
nop
mov
xor
mov
scas
pop
add
xchg
outsl
push
mov
fidivrs
test
aaa
or
stos
mov
xchg
nop
mov
mov
xchg
nop
xor
outsl
add
mov
in
add
xlat
and
repnz
je
jp
loop
cld
jmp
xchg
fs
popa
outsl
jecxz
and
test
inc
std
arpl
popf
ds
into
imul
dec
bound
fistpl
mov
mov
pop
imulb
add
insl
dec
xor
stos
lock
in
nop
out
imul
dec
rcrb
jae
addr16
push
add
mov
scas
out
mov
jne
fwait
jecxz
ds
inc
mov
popa
aas
aad
jp
call
push
mov
fwait
shll
in
hlt
xor
adc
mov
dec
shrl
popf
push
pop
adc
cwtl
paddusb
dec
mov
lcall
ja
cmp
hlt
xor
pop
pop
out
hlt
or
sub
data16
jae
xor
fsubl
outsl
adc
inc
insl
push
mov
mov
mov
lods
mov
idivb
mov
loop
sub
xor
push
mov
adc
sbb
mov
xchg
sub
cmc
les
imul
pop
sub
push
fldenv
add
pop
daa
inc
jo
ret
scas
fisubrs
jmp
pop
shll
jmp
dec
ljmp
setle
push
and
mov
mov
and
pushl
in
loopne
or
sub
fs
icebp
imul
jno
jp
out
add
mov
add
xor
leave
sub
into
aam
pushf
notb
push
xor
pop
pop
cmp
xor
jb
enter
sub
lods
xor
fcompp
mov
sub
and
sub
jmp
xchg
pop
int3
mov
fistps
mov
mov
mov
adc
mov
fiaddl
sbb
aam
and
cs
xor
out
adc
adc
dec
into
iret
popf
pop
or
or
jmp
adc
test
lock
fs
lcall
scas
xor
sbb
add
mov
dec
imul
aad
sbb
daa
cwtl
jo
stos
pop
imul
cltd
ret
dec
lret
lods
adc
cwtl
test
mov
mov
xchg
call
push
sub
nop
push
nop
and
push
nop
incl
sahf
loop
lods
cld
into
mov
out
and
inc
fwait
inc
push
xchg
cs
lret
addr16
lock
and
inc
adc
lahf
adc
sti
pop
mov
push
aad
clc
pop
cmpsb
dec
jmp
sahf
imul
in
enter
pop
xchg
ret
aaa
lds
fst
lock
ficoml
push
jbe
pop
sbb
das
ret
into
lds
ljmp
test
push
int3
xchg
jns
pop
xchg
test
pop
fstl
push
lahf
sbb
xchg
in
ss
popa
iret
sub
add
jbe
fiaddl
cmpsb
add
repnz
xchg
adc
pop
fcmovne
cld
xor
jae
pop
pop
xor
mov
lcall
test
popf
mov
repnz
test
pop
movsl
pop
shrl
xchg
int
out
jg
cmp
imulb
movsl
add
cs
arpl
dec
sub
xchg
outsl
pop
jle
xor
adc
push
inc
das
notl
add
out
nop
out
sub
push
push
int
movsl
mov
enter
xor
call
or
fldt
and
pop
inc
sub
insl
mov
xor
lds
sub
cmpsl
testl
mov
mov
lret
shll
pushf
fdivrp
jecxz
arpl
movsb
ja
incl
push
or
inc
mov
insl
aas
loopne
or
sub
jo
mov
sti
jg
fwait
sahf
and
lahf
mov
call
shrb
or
xchg
cmpsb
loop
xor
mov
inc
aaa
daa
jns
mov
mov
push
fidivl
push
xor
leave
pop
divb
adc
out
fnstenv
ret
cmp
rcrl
add
inc
dec
dec
daa
testb
lret
jns
sub
mov
test
cmc
xchg
cs
fstpl
and
imul
aaa
mov
cltd
push
test
sbb
mov
out
insl
or
jnp
add
dec
in
sahf
loop
aam
lds
loopne
jbe
cmc
and
lea
sarl
push
jecxz
inc
mov
jbe
clc
faddl
rorb
or
rorl
mov
mov
push
jl
leave
jne
mov
jmp
xchg
sub
aad
test
jg
xchg
ret
imul
scas
xor
incl
inc
ret
mov
idivl
repnz
pop
add
nop
push
mov
in
add
xchg
mov
sub
in
lahf
ljmp
xchg
add
lods
std
sahf
call
lret
mov
out
mov
es
lea
insl
or
pop
inc
and
mulb
sbb
dec
push
push
xor
stos
roll
loope
pop
outsb
push
cmpsl
adc
data16
je
lods
xor
jnp
xchg
cwtl
mov
add
fs
sub
bound
cli
andl
pop
push
lret
mov
out
cmp
and
out
cmp
shrl
outsl
mov
jmp
and
movsb
movsb
lods
pop
pop
incb
stc
and
cs
dec
int
lcall
les
insl
bound
and
js
lods
lds
mov
mov
dec
sbb
mov
loope
pusha
mov
cmc
add
jbe
outsl
hlt
push
fwait
aaa
mull
and
pop
lods
and
fcmovne
sbb
insb
inc
jge
sub
pop
pop
je
and
int
insl
sahf
cmp
xchg
testw
frstor
call
push
pop
mov
test
adc
repnz
jmp
hlt
test
test
call
out
popa
sbb
ljmp
dec
test
dec
pop
push
ljmp
mov
mov
imul
in
sub
xchg
call
dec
rorb
ljmp
and
mov
outsl
movsb
xlat
mov
ja
pop
pop
mov
dec
mov
in
das
leave
xchg
cmp
sti
push
mov
mov
pop
jnp
out
jmp
push
out
inc
pop
stc
push
aaa
fcoms
repz
orl
sbb
mov
shl
cmp
xor
xor
mov
das
lods
sub
fcoml
mov
sub
add
xor
jns
or
orb
mov
inc
fbstp
push
mov
dec
mov
ffree
scas
scas
fsts
pop
pop
cmpsb
cmp
std
xor
inc
pop
loope
inc
dec
inc
out
sar
add
mov
mov
mov
xchg
push
pop
ljmp
pop
xchg
pop
xchg
test
xchg
aaa
mov
stos
test
push
add
or
bswap
sbbl
and
inc
ret
mov
imul
dec
jnp
mov
jbe
sbb
fndisi(8087
adc
pop
enter
cmpsl
sbb
scas
aad
jp
movb
clc
aas
ror
add
cmp
ds
mov
ret
dec
mov
rcll
lcall
jle
lret
mov
pop
and
or
sub
mov
push
xchg
shlb
sbb
jb
xchg
fsts
daa
add
das
jb
cmp
pusha
loopne
jno
adc
in
insb
ljmp
adc
mov
hlt
daa
jnp
imul
mov
lods
movsb
add
xchg
loopne
or
jmp
pop
mov
andl
test
lret
push
aad
adc
push
xor
insb
add
xchg
cld
or
lods
push
fucomi
jo
ret
cltd
imul
pop
lret
adc
and
sub
mov
movsb
lcall
sub
mov
xchg
in
fisubrl
lods
jmp
ret
std
pop
fisubl
imul
xorl
add
loop
in
imul
push
imul
into
imul
jns
sbb
mov
mov
or
mov
add
arpl
aaa
cmp
xor
pop
jb
push
fimull
adc
xor
mov
and
ja
jo
xor
mov
mov
negl
or
push
mov
aam
pop
dec
cli
mov
push
jbe
sbb
addr16
addr16
xor
fsubl
xchg
cs
mov
push
mov
sub
sbb
mov
cs
jge
and
dec
inc
mov
add
out
imul
or
dec
cmp
aam
pushaw
pop
imul
add
xor
lods
clc
jbe
outsb
sub
imul
jbe
enter
mov
ja
sbbl
stos
in
stc
mulb
icebp
jmp
jl
mov
aas
into
mov
cli
mov
jle
jb
dec
xchg
lahf
xchg
popf
les
lcall
movb
mov
aas
jne
or
flds
stos
add
in
ja
mov
les
mov
dec
lret
fs
and
mov
dec
and
fxtract
lahf
icebp
xlat
data16
fcompp
insb
push
pop
push
or
andb
cs
in
insb
mov
cmc
ret
jnp
xor
jmp
mov
mov
out
scas
pop
mov
or
mov
test
rclb
repz
int3
jl
lods
sbb
pop
xlat
mov
gs
outsb
mov
fiadds
insl
or
stos
mov
mov
imul
dec
mov
movsl
or
mov
push
aad
fstl
mov
xor
mov
cmp
and
xchg
mov
xor
ja
sahf
pop
aad
insl
ret
sbb
xchg
cli
rcll
insb
imul
and
out
cmp
lods
sbb
mov
jae
cmc
ret
jge
stc
xlat
sub
xchg
push
sub
mov
out
pop
sarl
mov
adc
mov
dec
cmp
cli
push
and
adc
sub
lods
adc
pop
test
mov
sub
sub
sub
inc
xor
and
test
ja
xchg
push
pop
sbb
pop
xchg
mov
adc
cmpsb
xor
jb
push
cs
cmpsb
sbb
inc
lock
std
lahf
test
divb
cmp
xlat
repnz
push
mov
jns
inc
xchg
sbb
aam
sbb
outsl
test
fcmovnbe
sbb
or
push
in
jb
adc
sbb
sub
nop
push
inc
sub
arpl
sbb
add
das
sub
aaa
sbb
cmp
cwtl
add
jo
jb
push
inc
icebp
pop
push
add
sub
popa
insb
and
sbb
xor
add
pop
clc
and
push
jg
jbe
mov
fmull
movsl
movsb
push
mov
addr16
push
inc
stc
mov
push
or
in
rcrb
cli
test
cli
sahf
cmpsl
shl
push
or
jo
clc
or
es
mov
in
sbb
pop
push
add
repnz
mov
test
adc
pop
xchg
movsb
fildll
in
dec
inc
mov
push
addl
xor
jmp
pusha
mov
jmp
and
lahf
pop
jg
push
pop
dec
adc
push
loope
sub
out
outsl
or
ret
out
xchg
pop
jecxz
iret
jo
adc
scas
int3
mov
pop
inc
cmpsl
iret
cmp
ds
les
pop
add
leave
cwtl
add
aaa
fiaddl
and
pusha
fisubrl
mov
push
jle
jbe
int3
xchg
popa
mov
pop
ljmp
scas
idiv
and
imull
mov
scas
aas
inc
dec
push
jo
sub
push
push
xchg
fiadds
push
mov
in
cmp
and
pop
xchg
dec
das
ficoms
mov
pop
fldenv
sub
das
sub
xor
mov
jge
push
rcll
arpl
notl
int
pop
clc
mov
cmp
dec
mov
mov
loopne
add
xor
ja
dec
push
add
pop
lock
adc
popa
inc
es
pop
xchg
or
mov
push
dec
mov
mov
pop
mov
jmp
adc
loopne
xor
xchg
ds
fwait
pop
mov
das
lret
jle
push
add
mov
ss
shl
into
jnp
pop
repnz
lea
push
jmp
pop
inc
popa
sub
mov
or
pop
out
int3
pop
and
lret
jo
pop
push
xchg
mov
nop
push
dec
or
test
dec
ret
loopne
add
roll
jne
outsb
mov
flds
pusha
mov
addr16
outsl
andl
loop
mov
mov
pop
pop
push
idiv
or
mov
leave
xchg
adc
out
mov
cmp
xor
loopne
jno
inc
shll
filds
jg
sti
rolb
rclb
pop
out
adc
or
cli
inc
push
rclb
stos
push
cld
pop
xchg
mov
dec
push
je
cmpsl
cmp
js
cmc
push
pop
lret
popf
rorl
mov
cli
add
xchg
push
push
fistpl
pop
xchg
mov
xchg
leave
pop
imul
pop
inc
xchg
idivl
imul
lret
ret
call
fcos
adc
loop
movb
dec
mov
sbb
bound
pop
mov
movl
lds
inc
inc
xchg
jno
popf
dec
dec
in
mull
push
scas
inc
xchg
push
mov
cltd
mov
fildll
out
jmp
movaps
or
inc
jns
movsl
pop
lcall
adc
adc
outsl
inc
pop
push
push
mov
mov
jno
add
xor
inc
out
lahf
loop
into
jae
lds
inc
mov
add
mov
inc
pop
ss
jmp
dec
stos
adc
pusha
adc
pusha
ss
std
out
pop
pop
imul
scas
bound
mov
call
test
dec
mov
mov
add
test
pop
sahf
shrl
into
rol
shll
sbb
add
mov
cld
cwtl
lds
in
ljmp
mov
stos
orb
dec
push
aam
add
and
and
and
xchg
mov
jmp
mov
fistpl
xor
sbb
into
push
jnp
iret
xor
lea
sub
inc
jb
and
lods
aam
mov
push
add
jns
pop
or
mov
jb
cmpsb
pop
test
xchg
cmp
lock
inc
enter
dec
movsl
ss
not
mov
adcb
pop
pop
xor
jnp
leave
aaa
daa
inc
cmp
nop
adc
and
xlat
mov
lcall
into
mov
gs
adc
add
sbb
sbb
pushf
inc
and
ret
push
ds
or
les
faddl
testb
arpl
loope
mov
insb
or
or
fldenv
xchg
cmpsb
aaa
or
enter
pop
sub
jno
aaa
dec
rcrl
std
mov
inc
into
jnp
aad
pop
dec
adc
mov
aam
pop
or
in
insl
or
dec
xlat
pop
aaa
inc
lcall
ror
push
jne
test
call
adc
pusha
call
xchg
icebp
into
push
xor
xchg
mov
popa
lock
jbe
pop
cs
jge
push
push
popa
je
adc
imul
sti
gs
xor
inc
sub
sbb
test
fwait
push
mov
mov
cmp
rorl
xchg
xchg
jp
mov
ret
pushf
repz
scas
loopne
push
jns
ds
push
ss
into
dec
movsl
mov
mov
jbe
enter
ror
arpl
xchg
popf
ficoml
mov
cmp
adc
and
outsb
add
mov
mov
iret
jne
fxtract
push
push
or
add
dec
lahf
adc
push
jmp
shrb
mov
call
lods
test
iret
in
cmp
pop
mov
sbb
jg
mov
mov
addb
cmc
cmp
mov
sub
lea
arpl
lret
imul
stos
inc
loope
test
cmc
call
sub
ljmp
out
iret
inc
scas
js
cmpsl
push
sbb
sbb
pop
int3
dec
push
add
or
sub
inc
mov
sub
jb
sbb
mov
pop
mov
daa
lods
mov
pusha
out
push
add
fld
fmuls
addl
xchg
cmp
in
lcall
and
adcl
mov
sub
std
js
in
pop
jbe
mov
add
add
xor
pop
jo
fidivs
or
push
add
bound
js
adc
dec
mov
add
cmp
xchg
ret
daa
or
dec
mov
mov
xchg
add
les
addr16
negb
push
mull
mov
repnz
outsl
ja
cwtl
mov
repz
mov
jb
cmc
mov
mov
stc
xchg
popf
inc
jne
cwtl
jnp
add
cltd
jnp
gs
fildll
inc
in
inc
cwtl
loopne
push
fwait
mov
in
icebp
cmp
add
stos
lea
hlt
adcb
out
int
rolb
out
pop
pushf
js
ret
xlat
mov
add
xor
sbb
fmuls
leave
cld
sbb
outsb
inc
mov
xor
cmc
dec
clc
mov
xchg
dec
pop
and
sahf
nop
sbb
ljmp
fstps
adc
cmp
mov
inc
inc
int
test
inc
mov
icebp
dec
popf
adc
jnp
xchg
rcl
mov
sbb
and
daa
leave
pop
add
dec
xchg
adc
jle
jbe
inc
and
movsb
addr16
dec
jb
add
in
xor
sbb
jbe
pop
cmp
scas
enter
outsb
shl
xchg
mov
mov
aaa
stos
js
fwait
mov
lret
sbb
sbb
in
cwtl
inc
and
push
ret
lock
fwait
adc
lret
sarb
in
dec
and
inc
cmp
push
leave
cwtl
push
jnp
cmp
dec
inc
cmp
dec
dec
movsl
in
lahf
mov
cltd
out
xchg
dec
sub
test
or
push
push
inc
jp
jp
into
mov
cmp
rol
js
jbe
and
jnp
loop
and
dec
imul
je
xchg
adc
xor
sbb
mov
cmp
int3
cmp
jl
pop
ljmp
pop
and
es
mov
lcall
out
cmp
std
cmp
jns
dec
xor
bound
rorl
pop
stos
bound
es
shrb
adc
adcl
rol
pop
add
xchg
pop
dec
testl
xor
or
dec
cmp
movsb
mov
pop
cld
in
xor
and
jle
xor
push
aaa
jl
xorb
jl
sbb
test
ja
pop
jae
jno
lods
lods
sahf
incb
int
scas
or
out
pop
aaa
add
fwait
fwait
mov
lcall
je
iret
mov
xchg
push
insb
jge
adc
add
ds
xchg
shll
inc
xchg
and
lods
fnstenv
loope
lret
xlat
lock
into
repz
push
xor
in
pop
outsb
movsl
jo
sub
inc
push
adc
jmp
jne
je
sahf
adc
outsb
adc
dec
push
or
xchg
xor
jo
adc
adc
sbb
mov
add
sbb
orb
dec
iret
arpl
mov
shll
or
cmpsb
lret
fstpt
cmpsl
aaa
bound
sub
pop
mov
mov
fcoms
in
xchg
jo
rcll
or
lds
cmp
fcomp
mov
or
cmp
push
xor
jge
mov
and
fxch
xor
ret
fcoms
call
sub
test
pop
mov
mov
dec
and
and
sub
cmp
aam
mov
sub
dec
jp
push
inc
adc
js
mov
mov
lods
test
sub
ds
sub
push
loopne
or
jb
push
adc
pushf
std
andb
xor
lock
enter
xchg
cld
cwtl
aaa
sub
pop
arpl
mov
and
push
mov
adc
hlt
inc
in
js
inc
inc
ljmp
sbb
push
insl
fldenv
das
xor
cmp
fdivr
rep
pop
adc
push
push
mov
xchg
aad
add
sub
test
mov
cld
loopne
jb
and
adc
hlt
inc
xorb
push
in
and
mov
add
mov
push
inc
aad
sbb
sbb
add
inc
adc
inc
or
nop
repnz
adc
bound
mov
push
cmp
ljmp
scas
mov
inc
sbb
add
sbb
mov
push
dec
mov
sti
jno
add
xor
rcrb
mov
dec
pop
loop
jge
jno
mov
test
or
int
bound
popf
fs
les
push
or
dec
mov
stos
cli
fdivs
xchg
adc
std
pop
pusha
add
es
cltd
cld
mov
jl
inc
ss
inc
jl
jns
add
fs
rclb
push
ret
add
push
cltd
dec
pop
add
addb
cmp
mov
bound
adc
xchg
mov
shr
dec
sub
call
sbb
mov
pop
xlat
stos
jbe
test
es
imul
add
xor
xchg
mov
jne
push
sbb
dec
jbe
cltd
shrl
shrl
mov
lods
push
test
arpl
jno
loope
and
cwtl
jbe
mov
arpl
sub
pop
push
in
fincstp
imul
ljmp
aad
or
cld
testb
add
xchg
dec
ljmp
inc
mov
sbb
xor
push
pop
int3
pop
sub
mov
xchg
in
pop
lret
movsb
rclb
mov
adc
lcall
rclb
mov
idivb
xchg
push
mov
push
arpl
pushf
jge
and
scas
sbb
or
sub
jb
lcall
xchg
xor
sarl
out
das
es
int
call
insb
xchg
enter
xchg
int
push
pop
bound
lock
xchg
push
faddl
and
sub
rcr
loope
aas
inc
or
outsb
mov
fisttpl
cmp
inc
pop
sbb
mov
adc
nop
mov
nop
inc
dec
mov
std
sbb
or
lock
push
push
sub
popa
test
test
lret
dec
xchg
das
cmpsl
inc
fsubs
mov
outsl
jge
pusha
jno
jno
sbb
mov
ja
stos
imul
fucomp
fwait
cmp
xchg
js
cwtl
or
cmc
dec
lret
shr
lock
lret
fs
ja
lahf
subb
inc
dec
inc
push
out
pop
pop
jmp
xor
cmp
pop
mov
daa
into
in
mov
enter
pusha
ret
pusha
jbe
ljmp
in
pop
iret
outsb
sbb
mov
movsl
mov
inc
mov
xchg
loopne
xlat
mov
cmp
das
sub
test
mov
sub
jmp
stos
adc
test
jb
sti
mov
inc
add
pop
mov
push
push
aas
or
sbb
sarb
xor
jno
jnp
sahf
mov
pushf
cmp
xor
movsb
loopne
cmp
lahf
xor
cmpsb
inc
shlb
outsl
jo
cmp
je
cmpsb
nop
or
mov
cmp
loope
pop
cmp
jmp
xchg
or
sub
dec
pop
ja
mov
mov
push
fstps
loopne
and
mov
and
mov
out
pop
andb
pusha
push
lahf
push
popl
icebp
test
mov
clc
cmp
push
and
es
or
fistl
sahf
fistps
addr16
js
movsl
repz
je
jae
adc
fwait
jmp
repz
aam
das
call
pop
pop
push
cs
out
inc
pushf
mov
repnz
scas
sti
pusha
pop
in
sub
iret
or
loopne
cld
dec
add
iret
stc
sbb
out
xchg
sbb
icebp
sbb
and
xchg
outsl
add
mov
lds
movsl
mov
mov
inc
shlb
mov
jo
imul
cld
data16
mov
icebp
sarl
jg
pop
das
call
out
xchg
icebp
xor
movb
xor
add
outsb
insb
mov
movsb
into
les
cwtl
faddl
push
into
popa
mov
out
push
push
dec
mov
xor
mov
jmp
inc
push
mov
push
in
aam
inc
scas
xor
lods
xchg
jnp
fsts
inc
test
xor
rol
sub
int3
sub
fnclex
and
jne
adc
bound
adc
jnp
ficoml
sub
cs
mov
icebp
xchg
mov
lcall
xor
fs
lods
iret
pop
mov
mov
shll
mov
ret
adc
rorl
insb
xchg
push
fistps
push
adc
lret
pop
aaa
adc
push
push
outsl
popa
test
add
lcall
in
loope
outsb
xchg
xchg
in
or
int3
xchg
js
fnstenv
daa
push
hlt
repnz
push
add
push
xchg
mov
xchg
xchg
xor
icebp
sub
jecxz
mov
aad
push
pusha
lods
punpckldq
pop
pop
or
popa
adc
ret
stos
and
add
xor
xor
sub
in
arpl
fstpl
jle
cmpsl
pop
in
iret
xchg
push
leave
fmull
int3
mov
jbe
adc
hlt
out
mov
out
ja
loopne
sarl
aam
xor
jl
mov
mov
data16
das
xchg
inc
cmc
lcall
xchg
sbb
cmpsl
rcrb
or
stc
stc
cmp
push
and
inc
or
mov
je
shlb
sub
push
imul
cli
xchg
and
test
mov
cmp
sbb
je
shl
inc
sub
insl
repz
lods
sti
roll
inc
adc
outsb
xchg
cmpsl
push
shl
insb
sub
xchg
ror
mov
inc
xchg
out
lahf
in
mov
stos
call
std
repnz
in
out
testb
pop
jne
push
sbb
pop
lahf
dec
rclb
js
not
mov
jbe
js
fisttpll
loope
or
cmp
call
andps
mov
jb
ds
sar
mov
cld
pop
fmull
xchg
aaa
push
in
lds
and
divb
nop
mov
jne
and
inc
out
pop
pop
repz
jb
aam
ja
insb
xor
daa
jle
adc
inc
loope
push
into
movsb
pop
lahf
mov
or
fidivs
enter
mov
fisttpll
mov
dec
shll
xor
inc
inc
ja
xor
push
repnz
icebp
mov
out
paddsw
sbb
nop
push
testl
loop
pop
std
shrb
ret
push
push
xor
xor
cmp
rcll
pop
xchg
mov
xchg
add
xor
cli
push
icebp
inc
pushw
dec
mov
out
nop
mov
mov
out
pop
pop
add
fs
test
into
jae
lods
imul
in
xchg
int3
xorb
gs
loop
pop
or
cmc
movsb
xor
dec
std
test
divb
inc
in
jno
stos
sub
mov
cld
adc
dec
ret
mov
inc
cli
je
jle
lds
xchg
xlat
push
mov
mov
cs
fwait
loope
cmpsb
xchg
add
sbb
dec
popf
cmp
or
add
jo
je
aas
fistpl
int
add
xchg
test
adc
jmp
adc
popf
jge
arpl
out
dec
sub
add
subl
xor
js
add
aad
push
or
push
adc
fwait
xor
push
dec
cmpl
clc
sbb
or
xor
dec
ja
lock
cmp
add
mov
jne
xor
lret
iret
sub
fwait
jns
mov
add
cmp
mov
ret
push
mov
dec
pop
xlat
or
popa
cli
jmp
sub
imull
dec
std
dec
push
xor
mov
arpl
popf
add
and
mov
in
lahf
sbb
inc
das
xor
jecxz
xor
sub
adc
fnstenv
fisubs
mov
xor
xchg
and
enter
pop
pop
f2xm1
ret
cli
mov
xor
nop
mov
sub
bound
loopne
xor
and
loop
aad
fs
fadd
or
inc
pop
xor
sarb
gs
push
xchg
mov
addr16
push
push
cmp
mov
xor
cmp
stos
in
cmp
int3
inc
loope
repnz
mov
mov
or
gs
pop
pushf
dec
pop
in
mov
pusha
dec
jo
fisubs
lods
cmp
fcoms
jecxz
sub
push
jns
lods
aad
into
jbe
sub
or
cmp
mov
xor
adc
mov
ja
lcall
mov
sti
cmp
test
dec
out
repnz
or
cli
xor
or
adc
rolb
mov
cwtl
fiadds
sub
daa
in
in
push
push
sub
inc
xor
cwtl
ljmp
lahf
inc
int3
movsl
out
loop
cmpsl
lret
nop
shll
jl
into
fmull
shr
mov
and
cltd
inc
repz
inc
scas
mov
mov
out
lods
xchg
mov
jns
notb
xor
pop
mov
cmpsl
push
mov
sub
js
xor
fsubrp
enter
popf
subb
xchg
imul
loope
fisttpll
mov
mov
dec
dec
sbb
jns
adc
adc
dec
pop
push
popa
push
imul
movsl
fimuls
mov
in
lret
int
outsl
or
or
mov
sub
dec
in
sbb
daa
jl
push
lret
pusha
xchg
fdivs
pop
lret
cltd
adc
lods
iret
mov
insb
sbb
addr16
fisubrl
pop
leave
jmp
pop
iret
or
vcvtpd2ps
sti
push
nop
jno
xchg
scas
divl
ljmp
ja
adc
cltd
mov
dec
mov
cmp
mov
push
push
aam
into
sub
pop
add
scas
dec
add
frstor
aam
clc
cmp
sub
out
cmpsl
pop
cmc
xchg
cmp
into
divb
movaps
xor
loope
test
enter
jmp
imul
jbe
adc
movsb
lret
pop
pop
aad
mov
push
jl
mov
jno
gs
sub
and
pop
and
sbb
inc
gs
bound
adc
xchg
cmp
xchg
pop
cmpsl
cmp
sbb
imulb
test
dec
rcrl
xchg
cmp
les
or
imul
mov
push
addr16
aaa
add
adc
lcall
xchg
push
rolb
cwtl
out
ds
mov
daa
sbb
mov
cmp
sub
repnz
das
and
adc
inc
ret
je
adc
mov
mov
inc
add
lcall
ficomps
test
js
and
pop
vpmaxub
in
push
daa
shlb
jne
cltd
adc
rclb
pop
repz
add
repnz
jb
loopne
shll
movsl
fisubl
or
scas
xchg
jmp
cwtl
mov
imul
push
inc
js
inc
fsubrs
dec
xchg
out
cmc
xchg
add
int3
inc
cltd
and
xor
mov
pop
mov
lock
shll
or
aaa
in
sahf
shrb
mov
sti
scas
popf
in
stos
cltd
jl
test
aaa
xchg
scas
push
push
in
cmp
add
sbb
dec
mov
xchg
jnp
pop
cmp
mov
jecxz
jbe
xlat
push
out
dec
test
jl
pusha
lds
cmc
scas
outsl
inc
js
rcrb
dec
enter
inc
add
add
adc
inc
ss
ret
in
int3
inc
es
outsb
sub
insb
test
xchg
addr16
mov
mov
jns
sahf
shl
push
inc
mov
cld
cmpsl
pop
cmc
push
push
sub
push
push
jne
syscall
daa
jge
pushf
and
rcl
scas
add
sbb
imul
dec
inc
xchg
sub
dec
shl
clc
sub
das
dec
xor
xchg
xchg
cmp
call
sub
stc
int
sub
jmp
pushf
leave
inc
leave
mov
aas
aad
insb
dec
out
aaa
jmp
mov
mov
pusha
addr16
pop
pop
mov
das
ret
jg
pusha
push
ret
jbe
mov
xchg
pop
movsb
out
xchg
shlb
mov
or
cmp
pop
jb
pusha
dec
dec
into
fwait
addr16
stos
rcrb
push
imul
aam
pop
sub
enter
movsl
lcall
add
inc
sub
sub
xchg
or
xor
sub
xlat
push
mov
popf
mov
call
or
scas
aam
pop
fcoml
stc
test
or
xor
adc
mov
mov
sbb
fildll
or
lret
pusha
push
pop
mov
popf
jnp
adc
mov
pop
sub
mov
push
fcmovnb
or
inc
mov
adc
in
js
sarb
jg
mov
fisttps
pop
jns
ss
stos
push
dec
push
es
fistl
xchg
test
sub
mov
sub
in
jno
lock
xchg
cltd
sub
or
ds
xor
pusha
dec
sbb
incb
cmc
lret
aaa
inc
cmp
insb
mov
icebp
dec
mov
iret
jae
inc
adc
dec
bound
mov
cmp
pop
mov
fdivs
dec
xchg
xchg
xchg
mov
add
loope
xchg
int3
sub
pushf
jnp
xchg
inc
mov
scas
mov
inc
xlat
adc
sbb
or
clc
sbb
cmp
orl
inc
ljmp
pop
orl
xchg
pop
pushf
inc
lods
xchg
pusha
ret
or
in
out
dec
xchg
inc
scas
in
stos
inc
mov
xor
ss
xorl
cs
loopne
sbb
xchg
arpl
int
cwtl
test
push
and
add
daa
je
and
mov
xchg
shll
andl
push
xchg
or
mov
jp
jecxz
fabs
rcl
mov
call
sahf
arpl
xchg
sbb
flds
icebp
js
cmpb
push
out
mov
inc
add
pop
push
xor
rol
stc
add
xlat
lock
cmpsb
ja
add
and
outsb
mov
add
fmull
repz
jns
out
adc
scas
xor
popf
push
int
outsb
cli
lret
incl
push
outsl
fstl
jmp
sbb
adc
jbe
adc
mov
sbb
mov
scas
xchg
aaa
loop
add
sti
xchg
dec
jg
cltd
fistl
xor
jp
push
jnp
dec
cmp
test
xchg
test
cmpsl
xor
sbb
cmp
inc
dec
stos
dec
inc
fistps
je
xlat
pop
xor
push
sbb
jno
std
es
enter
popa
jp
or
fwait
pop
or
xchg
lds
adc
dec
mov
jp
inc
dec
mov
bsr
mov
push
addr16
sahf
imul
pop
mov
movsl
popf
sub
insl
push
dec
xor
sbbb
mov
and
mov
fs
mov
mov
inc
das
xor
lods
imul
pop
mov
loop
mov
mov
pop
fnsave
out
mov
std
les
lahf
jg
cmp
push
je
ds
dec
mov
mov
mov
xchg
mov
fwait
mov
shrl
jb
mov
jecxz
sbb
adc
jmp
lods
jmp
pextrw
mov
test
pop
cli
imulb
dec
aaa
pop
std
insl
push
xor
into
ss
mov
fimull
sarl
mov
fdivrs
cwtl
je
decb
rep
push
mov
fwait
clc
xor
mov
jne
jo
jo
into
pop
shl
cmpb
push
fs
cwtl
fcomip
sbb
adc
push
push
fs
push
dec
push
pop
mov
fidivrl
aaa
sub
mov
xchg
adc
cs
xor
nop
popa
clc
or
mov
cmp
push
cwtl
mov
jg
xor
xor
inc
sbb
jbe
mov
jp
fldenv
mov
movl
movsb
push
or
xor
or
es
mov
and
in
outsb
add
rcrl
cwtl
adc
mov
sub
mov
and
mov
or
rolb
aam
lahf
push
xchg
repnz
cmpsb
scas
pop
into
mov
dec
icebp
xchg
mov
dec
rcl
push
pop
repnz
jnp
mov
popa
jp
mov
lds
mov
sbb
sahf
test
xchg
cmp
xchg
loop
mov
ds
dec
aad
or
test
mov
push
jg
push
xor
jb
xchg
es
rolb
dec
loope
test
js
sub
push
mov
xor
xorb
jnp
push
cmp
je
add
cmp
jl
xchg
inc
out
push
lods
mov
popf
add
and
inc
mov
sub
into
or
or
mov
cld
in
pusha
outsb
jg
jecxz
scas
jge
loop
dec
cli
push
sbb
jg
imulb
mull
ds
push
mov
enter
mov
push
fwait
adc
fcoms
sub
or
add
xchg
cmpb
cmp
and
inc
cltd
push
pop
out
repz
pop
xor
mov
pop
pop
stc
xchg
in
stos
fs
pop
and
repz
xor
