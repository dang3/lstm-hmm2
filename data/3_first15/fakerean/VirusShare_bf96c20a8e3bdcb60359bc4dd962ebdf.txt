jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
lods
mov
mov
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
adc
inc
add
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
or
inc
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
pop
rolb
hlt
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
fwait
mov
sbb
pop
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
dec
enter
add
add
add
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
mov
add
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
daa
xchg
inc
add
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
xchg
inc
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
loope
inc
add
fidivs
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
std
cmpsb
inc
add
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
jae
inc
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
fsts
pop
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
jne
inc
add
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
fcoml
dec
dec
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
sahf
inc
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
mov
add
mov
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
push
mov
and
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
test
add
push
and
mov
movl
movl
movb
mov
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
leave
inc
add
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
and
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
pusha
push
call
mov
add
add
pop
iret
rolb
out
add
into
jmp
add
fadds
add
add
js
add
movb
pusha
add
push
stos
testl
add
mov
add
mov
cwtl
lret
add
push
jmp
jnp
add
add
jns
jae
flds
xchg
test
xchg
mov
pop
jae
call
shlb
add
fs
stc
add
add
sub
jecxz
stc
fldl
cld
testb
leave
add
add
movsb
in
add
mov
scas
push
mov
add
fwait
pop
int
mov
add
out
add
add
jl
jmp
add
pushf
test
xchg
lahf
mov
mov
lods
fs
xchg
add
stos
filds
push
mov
add
push
push
lea
push
call
cli
jle
add
je
out
add
push
jmp
mov
add
in
add
arpl
add
push
mov
mov
ja
jecxz
call
add
add
xchg
test
movsb
arpl
add
mov
test
add
add
fwait
mov
sti
add
push
mulb
mov
mov
lea
pop
movl
popl
push
push
push
push
push
call
push
push
out
mov
nop
lahf
imul
out
add
add
xchg
icebp
add
add
mov
add
add
add
jle
pop
pop
pop
add
mov
fiaddl
test
add
xchg
xchg
aad
insb
add
add
push
nop
add
in
pop
add
lahf
sahf
stc
iret
add
add
add
loop
mov
add
lret
add
add
mov
lea
pop
push
push
push
push
call
je
add
cmpsb
aam
push
add
add
jmp
addb
add
push
iret
outsl
add
lods
add
add
lea
xchg
les
jmp
add
pop
stos
mov
jle
add
stos
add
xchg
cmc
mov
mov
add
mov
cmc
clc
mov
add
roll
lea
pop
push
push
push
push
push
push
call
stc
add
pop
cmpsl
mov
fdivrs
pop
cmc
add
add
add
add
add
lods
add
jns
mov
js
cmpb
mov
out
rol
add
add
add
add
add
cmpsb
lret
add
add
hlt
mov
test
add
add
jp
repnz
faddl
add
add
mov
lea
pop
push
push
call
push
lea
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
mov
sarl
add
cwtl
scas
jle
sbbb
mov
les
int3
add
ja
add
mov
add
loope
mov
stc
add
imul
mov
pop
add
mov
mov
push
cmpsb
add
les
add
out
icebp
mov
enter
add
lea
pop
call
push
call
push
push
push
lea
push
call
clc
jno
add
andb
add
fadd
add
push
lds
testb
add
add
arpl
mov
add
movsl
cmc
mov
pop
add
fdivp
cmpsl
aad
add
pop
jbe
add
add
add
sahf
lcall
add
rol
add
add
mov
add
pop
fmull
xchg
je
add
lret
push
add
add
std
mov
lea
pop
jmp
ret
push
push
push
push
call
out
pushf
add
pusha
lret
add
add
add
add
add
add
add
pushf
fwait
add
popl
mov
add
add
push
push
push
fs
loope
add
fidivrs
addl
movsl
add
mov
lock
add
add
faddl
add
add
sti
add
add
add
aad
push
mov
lcall
pop
mov
push
lea
push
push
push
lea
push
push
push
lea
push
call
lret
fs
xchg
mov
ljmp
add
add
mov
icebp
mov
mov
int3
je
add
add
add
cltd
fcmovu
push
test
mov
aam
cwtl
mov
jo
pusha
aam
pop
clc
add
add
stos
add
push
cli
outsl
add
into
add
xchg
mov
jae
mov
loopne
movsl
add
xchg
repnz
mov
lea
pop
mov
push
push
lea
push
push
push
push
call
data16
aam
mov
cmpsb
imul
cmc
add
out
add
pop
add
mov
scas
add
mov
mov
addl
xchg
xchg
into
fwait
lods
sti
addr16
add
add
ja
ret
sti
add
cltd
add
add
arpl
add
mov
cltd
add
mov
add
add
scas
xchg
out
sahf
push
fucomi
mov
lea
pop
add
push
push
push
push
push
call
add
add
add
jno
pusha
ret
add
add
add
pop
mov
rcll
jno
push
add
aam
add
cld
add
add
xchg
add
add
lds
in
cld
add
add
mov
mov
testl
mov
xlat
scas
in
add
add
add
pop
add
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
hlt
jno
lret
aad
mov
jb
add
add
loopne
jne
loopne
add
add
cli
mov
mov
scas
add
ret
clc
add
in
shl
push
mov
mov
jge
jge
add
sarl
add
mov
add
add
pop
push
jecxz
neg
mov
xchg
add
push
add
pop
add
mov
xor
push
push
push
call
int3
mov
mov
jle
add
add
add
mov
add
add
add
mov
out
add
add
add
mov
movl
popa
addb
cli
xchg
call
add
jge
add
add
add
add
add
pop
add
add
jb
push
mov
pop
add
add
add
fnstcw
pop
mov
add
add
int3
lea
pop
add
call
mov
xor
push
push
rol
add
not
shl
push
or
inc
add
not
dec
rol
dec
sub
add
add
xor
lea
pop
sub
sub
dec
inc
pop
push
push
call
loopne
jnp
lret
add
pop
add
add
ja
add
lret
popfw
loope
clc
shr
add
mov
int3
add
xchg
add
jb
add
xchg
into
je
jnp
popa
push
data16
add
iret
mov
add
add
sahf
add
pushf
addr16
add
add
aam
add
iret
add
add
mov
add
add
fldcw
add
mov
lea
pop
pushl
push
lea
push
call
xchg
ja
jnp
out
add
loope
cwtl
jmp
mov
rol
mov
jno
test
xchg
popl
add
add
pusha
add
add
mov
je
mov
mov
lcall
scas
mov
pusha
add
push
mov
jbe
leave
ljmp
add
add
int3
add
add
xchg
mov
lea
pop
call
mov
push
lea
push
lea
push
push
call
clc
add
add
popf
int3
enter
pop
out
lock
loope
ljmp
jae
add
add
jbe
popf
add
add
lret
nop
add
imul
jno
add
cltd
add
lock
add
jnp
push
repnz
mov
repnz
lea
pop
movl
lea
push
push
push
lea
push
push
push
push
push
push
push
push
call
jecxz
pop
stc
bound
add
push
in
add
add
sahf
add
addb
fmulp
add
movsl
lock
xchg
mov
add
stos
mov
add
jp
mov
out
push
std
fwait
pop
jmp
test
hlt
movsb
gs
mov
add
add
loopne
add
mov
lods
mov
outsl
testl
mov
add
pop
pushl
pushl
push
push
call
add
add
mov
add
in
icebp
add
mov
ret
add
stos
add
add
sahf
lahf
mov
add
pushf
loopne
aam
add
bound
stos
in
cli
imul
jae
popf
mov
add
enter
adc
out
add
stos
jp
in
mov
bound
pop
call
push
push
push
lea
push
lea
push
call
nop
add
xchg
add
idivl
push
add
xchg
mov
int
icebp
in
add
lret
jnp
add
add
add
stos
mov
mov
cltd
add
sarb
mul
neg
xchg
add
stc
arpl
jnp
add
in
imul
add
cmc
add
mov
sti
add
addr16
pushl
push
lea
push
push
push
push
push
push
push
push
call
push
push
fiaddl
add
pop
testb
mov
xchg
add
jmp
ret
aam
add
add
jmp
mov
add
fcmovbe
add
add
cmpsl
push
add
in
add
mov
mov
je
add
loopne
add
mov
pop
andl
mov
add
xchg
aam
add
flds
in
add
mov
mov
lea
pop
pushl
push
lea
push
push
push
push
push
push
call
jmp
add
addb
add
movsl
scas
add
add
mov
lret
lods
add
add
out
jo
add
mov
bound
pop
mov
lds
jge
pop
enter
add
add
jmp
pushf
add
add
ljmp
add
add
cli
jo
arpl
hlt
shlb
push
add
addb
add
xchg
jp
add
lea
pop
call
push
push
sub
add
push
or
inc
add
not
lea
add
not
sub
sub
sub
pop
shl
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
negb
test
jmp
add
stos
jge
aam
pop
add
lds
add
into
ljmp
add
add
xchg
mov
xchg
add
add
push
add
add
mov
jnp
pop
add
add
repnz
add
addr16
test
add
pop
add
add
sahf
push
fmull
jne
call
push
lea
push
push
push
push
push
push
push
push
call
mov
mov
roll
add
add
add
add
cli
out
cli
lcall
add
add
add
add
push
add
add
out
test
add
add
test
add
add
add
push
mov
add
add
jne
jb
in
mov
mov
push
add
mov
lea
pop
push
push
push
shl
sub
push
sub
add
ror
sub
xor
shr
sub
shl
pop
xor
ror
sub
xor
pop
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
icebp
imul
add
aad
add
ja
icebp
add
popf
add
int
add
add
xlat
mov
add
mov
add
scas
ret
jb
push
add
scas
fadds
out
add
add
add
fcoms
js
push
add
int
push
lods
add
add
jge
mov
jbe
rorb
pop
push
push
push
push
push
call
push
add
add
jmp
xchg
stos
add
mov
cltd
add
leave
add
cwtl
mov
add
add
lock
xchg
xchg
add
mov
add
add
xor
mov
sahf
add
loope
jle
test
xchg
add
lret
fdiv
add
roll
add
mov
add
add
xchg
mov
add
lock
out
add
lea
pop
call
push
push
push
lea
push
push
push
push
push
push
push
call
cli
pushf
add
into
add
add
iret
shll
mov
add
mov
out
jb
push
add
push
add
sahf
pop
jbe
add
add
fwait
add
add
shrl
pop
out
add
add
add
add
add
push
hlt
call
add
add
arpl
into
mov
cwtl
jmp
add
pop
mov
push
push
lea
push
lea
push
lea
push
push
call
add
jns
jp
out
lea
addl
pop
out
lret
add
push
add
xchg
mov
out
jge
add
mov
loopne
add
mov
add
xchg
jp
add
jnp
add
stos
mov
add
add
loope
jecxz
stos
add
add
add
mov
xchg
mov
mov
add
popl
add
jb
mov
lea
pop
push
mov
push
push
push
push
push
lea
push
push
lea
push
push
call
xchg
xchg
add
add
pop
lods
add
jbe
add
out
loopne
add
pop
vpandn
lret
testb
xchg
pusha
add
add
stc
push
add
mov
jb
add
sti
jle
add
div
add
mov
add
jl
pop
stos
mov
cli
add
mov
jne
jns
popf
jp
add
jo
lcall
aam
bound
add
add
add
push
push
push
push
push
push
push
push
push
push
call
add
rcrb
add
jae
jge
add
aam
push
lret
add
xlat
jp
add
mov
cwtl
cli
jns
nop
rcrb
ficoml
mov
mov
fiadds
xchg
stos
jae
add
pop
add
addl
add
add
filds
mov
add
push
add
aam
xor
mov
lea
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
shr
arpl
vpmaxsw
push
add
xchg
add
add
add
lods
popf
pop
mov
add
stc
cmpsl
jne
mov
add
mov
aad
add
mov
faddl
add
add
hlt
cmc
add
add
jmp
aad
add
icebp
jno
fnstsw
movsb
add
jl
mov
lea
pop
xor
push
push
call
fwait
add
loopne
add
push
enter
iret
jmp
mov
pop
push
gs
sti
nop
add
xchg
xchg
add
add
lds
loopne
movsl
call
add
xchg
add
add
add
add
fadds
mov
andl
add
fiaddl
shlb
addb
js
cwtl
pop
add
cmc
add
pop
add
add
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
mov
mov
imul
pop
stc
jp
xchg
leave
test
cltd
add
xchg
filds
ja
jp
jl
lock
add
mov
jecxz
add
imul
fcomps
lods
cwtl
add
mov
jl
in
je
loopne
jl
xchg
cmpsl
add
jle
pop
pop
cltd
shrb
xchg
popa
add
add
rcll
aad
mov
mov
pusha
jbe
jb
add
add
pop
mov
lea
pop
push
push
push
push
push
call
xchg
add
test
mov
add
mov
shrb
push
rcrl
jns
stc
popf
mov
in
xchg
mov
pop
scas
add
add
add
lock
add
push
pop
lods
loopne
mov
clc
push
leave
jle
add
add
push
nop
out
add
mov
add
mov
fwait
mov
mov
add
add
pop
mov
xor
add
push
push
lea
push
push
push
push
lea
push
push
push
push
call
xchg
popa
add
add
add
jmp
mov
jecxz
jp
lcall
add
pusha
add
jb
xlat
add
add
add
add
scas
rolb
add
mov
cli
pusha
loop
mov
in
add
mov
add
in
divl
add
mov
cmpb
add
cli
mov
out
stos
add
jo
icebp
lods
mov
lea
pop
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
call
jecxz
mov
addl
xchg
je
add
mov
add
jnp
imul
jb
jns
add
in
xchg
scas
add
cwtl
pop
arpl
push
cmpb
cwtl
movb
mov
add
add
add
out
addb
lea
in
neg
mov
incb
add
js
add
fadds
std
add
mov
lea
pop
xor
push
lea
push
lea
push
push
lea
push
lea
push
push
call
fwait
repnz
je
add
cmc
int3
add
mov
add
add
mov
xorl
in
mov
add
imul
pop
popf
pop
add
add
jae
add
add
xchg
mov
outsl
scas
insb
add
repnz
cmpl
out
add
add
mov
lea
pop
add
push
push
push
lea
push
call
clc
add
mov
mov
fnstenv
out
add
add
add
add
add
add
shr
lods
std
add
popf
add
add
insb
jge
loopne
add
mov
pop
jbe
jb
aam
xchg
imul
mov
mov
add
add
in
out
test
add
add
add
add
push
add
out
or
mov
test
add
pusha
adc
mov
xor
push
push
push
push
lea
push
lea
push
push
call
clc
ja
fldl
add
add
shll
add
mov
xchg
add
add
les
not
add
mov
les
stc
out
add
imul
xchg
jp
mov
add
jno
add
add
mov
add
add
out
out
add
icebp
push
mov
lea
pop
sub
pop
rep
push
lea
push
lea
push
push
push
push
push
call
scas
stos
mov
js
add
add
cld
shrb
pop
mov
lods
ljmp
add
xchg
jns
jo
push
pop
jnp
add
roll
mov
rorb
call
mov
add
add
imul
jecxz
shl
loop
rolb
sti
add
add
clc
test
hlt
lea
pop
pop
mov
add
push
push
lea
push
push
push
push
push
call
jl
movsb
jp
lahf
add
enter
add
add
addb
add
loopne
add
ja
add
add
add
in
fiaddl
jae
jae
add
mov
in
in
lds
jae
stos
add
into
cmp
add
jmp
add
pop
int3
repnz
xchg
add
lods
add
mov
mov
add
pop
fldl
add
insb
popa
fnsave
int3
lea
pop
add
add
push
push
push
call
add
aad
add
insb
lahf
lcall
xchg
loopne
add
jl
add
lret
add
ret
into
arpl
int3
add
mov
mov
jp
int3
add
add
shrl
nop
add
movsb
add
ja
mov
insb
add
jno
rolb
push
add
rclb
out
lcall
or
mov
xor
push
push
push
push
push
push
push
push
push
call
xchg
add
repnz
hlt
push
data16
push
add
stos
add
mov
add
mov
push
movsl
test
add
add
add
adc
loope
repnz
add
ja
push
add
mov
orl
pop
add
push
xchg
scas
mov
lea
pop
mov
xor
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
pop
add
mov
add
add
push
pop
in
xorl
push
pop
movl
add
mov
cmc
jp
jge
les
add
jnp
popf
roll
roll
add
xchg
jecxz
arpl
fstpl
mov
pop
ret
add
mov
in
add
add
add
jp
jmp
jns
add
mov
int3
clc
in
xchg
push
add
mov
lea
pop
xor
push
push
push
lea
push
push
lea
push
call
stos
xchg
add
pop
jle
je
add
mov
add
xchg
enter
cli
add
bound
push
cld
add
mov
xlat
add
movsl
add
add
add
add
add
add
add
xchg
mov
push
out
add
mov
rolw
add
ror
push
add
push
mov
lea
pop
add
push
push
lea
push
call
ja
in
add
jle
pop
add
add
add
push
mov
outsl
mov
scas
fiaddl
add
add
data16
mov
addl
push
add
jge
add
push
sti
test
js
add
add
iret
add
add
faddl
add
add
add
loopne
les
ret
dec
jns
push
call
add
lods
add
test
stc
je
add
add
addr16
aam
pop
add
xlat
mov
popl
arpl
add
add
pushf
pop
push
enter
cli
add
lods
add
repnz
lcall
movsb
add
mov
sahf
add
cltd
add
push
add
add
mov
test
bound
pop
mov
lea
pop
add
push
push
push
call
push
add
test
add
in
scas
add
add
mov
add
add
js
mov
push
clc
add
lret
add
xchg
test
mov
fwait
add
add
rolb
add
add
add
jle
add
rcl
jl
lret
aad
mov
in
mov
popl
jbe
repnz
rorb
pop
mov
push
push
add
sub
push
push
pop
add
xor
add
sub
sub
dec
ror
sub
pop
dec
xor
sub
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
call
mov
xchg
add
xchg
icebp
add
mov
movsl
jp
add
out
add
fwait
add
add
jge
mov
sti
xchg
add
xchg
jo
push
add
test
stc
add
out
add
add
les
add
add
xchg
cld
add
push
add
push
add
mov
mov
lret
add
mov
lea
pop
pushl
call
push
lea
push
lea
push
push
push
push
push
push
call
xorb
add
aam
insb
mov
add
add
in
lds
flds
add
add
pop
lret
add
add
add
push
gs
arpl
add
mov
pop
clc
add
negb
fnsave
push
add
add
notb
cmpl
push
in
mov
lea
pop
push
push
push
sub
push
sub
add
xor
sub
sub
inc
rol
add
pop
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
lock
add
jp
mov
into
mov
andl
add
add
add
rolb
mov
mov
add
add
add
fldenv
lods
add
mov
add
pop
in
add
sti
loope
loop
mov
add
add
fyl2x
mov
sti
add
add
add
aam
push
rolb
add
add
mov
add
jmp
std
add
cmpsb
pop
fadds
in
add
pop
push
push
push
lea
push
push
lea
push
call
ljmp
testl
fst
mov
add
mov
fcom
popf
lds
mov
stos
pop
mov
mov
add
add
fiadds
push
sarb
pop
cltd
add
add
add
add
faddl
out
loope
in
mov
add
pop
add
mov
add
ffreep
add
xchg
cltd
lock
roll
lahf
add
mov
mov
aam
bound
call
mov
push
lea
push
push
push
push
call
pushf
add
loop
stos
mov
out
rcrb
add
stc
scas
ljmp
mov
ljmp
push
mov
add
mov
add
add
aam
add
mov
pop
pop
jae
mov
test
test
pop
gs
in
hlt
push
add
jp
add
ret
aad
add
add
insb
mov
lea
pop
push
push
mov
push
push
push
push
push
call
add
add
add
fs
add
xchg
mov
into
into
add
enter
pop
add
aad
pop
xchg
and
xchg
add
ja
pop
add
cld
add
add
add
sti
mov
stc
add
pop
xchg
ffreep
pusha
fdivs
add
add
add
fcompl
mov
jno
add
jecxz
add
std
add
cwtl
test
loopne
add
pop
add
add
push
push
lea
push
push
call
enter
fdiv
add
jp
add
andl
loope
add
add
mov
out
jp
add
add
fsts
stos
out
add
pop
mov
loopne
add
pop
add
pop
cmc
add
fldcw
jb
lods
cmc
mov
mov
add
repnz
hlt
lea
pop
add
mov
xor
push
lea
push
push
call
fs
add
in
add
add
add
enter
scas
leave
jns
lods
jno
gs
add
mov
xchg
into
push
add
jne
add
lock
add
bound
add
xchg
jbe
rcl
add
test
add
add
add
pusha
mov
enter
add
mov
cld
lds
mov
arpl
add
push
push
lea
push
push
push
push
push
push
push
call
in
add
xchg
test
mov
enter
add
add
add
ret
add
add
pop
add
mov
add
lret
add
mov
add
loope
mov
fildl
pop
loopne
popl
shl
in
push
popl
mov
add
mov
scas
add
lods
rolb
mov
clc
les
add
lock
add
add
add
mov
sar
mov
lea
pop
push
push
lea
push
lea
push
push
call
add
cli
mov
clc
rcrl
add
add
test
js
mov
loope
test
orb
xchg
add
xchg
jnp
mov
push
stos
fwait
add
scas
fwait
lock
mov
add
jo
bound
pushf
add
rcrb
add
out
jmp
add
mov
mov
mov
lea
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
jge
add
add
clc
add
jle
std
gs
testl
test
call
pop
push
call
cmc
roll
test
add
add
mov
add
add
add
add
add
call
add
data16
jns
addl
loopne
in
add
stc
add
mov
lea
pop
xor
push
lea
push
lea
push
call
loope
mov
xor
mov
add
add
push
add
mov
mov
mov
xchg
add
testl
out
lret
fwait
enter
push
hlt
pop
add
cmpsb
xchg
lcall
mov
add
add
jns
mov
mov
add
jae
xchg
xchg
xchg
add
mov
mov
aam
bound
add
add
push
push
push
push
push
lea
push
push
lea
push
push
call
repnz
xchg
add
add
pop
mov
jl
mov
mov
add
lahf
add
in
mov
lods
shr
add
add
jp
popa
leave
mov
add
add
add
add
div
in
mov
add
push
add
scas
fiadds
mov
add
push
add
clc
les
push
les
lea
pop
pop
push
lea
push
push
push
push
call
arpl
add
add
lods
std
clc
lret
aad
in
mov
jp
add
add
mov
add
push
jp
pop
add
jle
mov
add
xchg
fistpl
sahf
mov
add
nop
mov
mov
add
jmp
in
jmp
test
xchg
movb
les
dec
cmp
sti
push
push
call
je
add
add
jbe
add
enter
stos
incb
add
mov
imul
movsb
lock
out
aad
lret
add
movsb
loope
mov
jnp
add
add
movsl
repnz
pushf
add
add
fldl
push
add
out
add
cmc
pop
shl
add
int3
push
add
roll
insb
movsl
cli
mov
lea
pop
rep
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
add
leave
in
xchg
pop
into
add
test
add
jae
ljmp
int
push
push
lcall
add
mov
testl
add
xchg
pop
add
jle
nop
loop
lret
jl
add
add
rolb
repnz
rorl
je
add
ja
cld
lea
pop
mov
xor
push
lea
push
push
push
push
call
xchg
add
mov
popf
add
add
xlat
movsb
fsubs
push
push
clc
int
add
cli
mov
mov
mov
push
jp
push
add
test
addl
cli
add
aam
fiadds
add
add
add
add
add
xlat
pop
mov
enter
hlt
add
in
movb
scas
jle
pop
iret
push
mov
lea
pop
or
je
push
push
push
push
push
push
push
lea
push
push
call
roll
jae
in
mov
add
out
add
push
add
divb
add
into
imul
xchg
fwait
out
add
loop
add
scas
mulb
loop
imul
stos
add
add
nop
xor
lahf
out
jmp
movsl
add
imul
xchg
lea
pop
mov
push
push
lea
push
lea
push
call
push
rcr
add
stos
out
les
loop
rolb
fsubrp
add
pop
int
mov
in
test
mov
add
leave
aad
in
add
leave
pop
icebp
out
jge
jl
jne
pop
shl
lods
pop
rolb
add
add
mov
add
movsb
shrb
pop
mov
add
add
cwtl
add
pop
xor
push
push
push
lea
push
push
push
call
mov
mov
gs
fadds
sarb
add
lret
pop
add
mov
lds
mov
lret
shlb
add
les
xchg
add
add
int
add
pusha
call
add
sbb
add
pop
xchg
mov
int3
addl
add
js
push
add
cmpsb
roll
andl
add
jl
lcall
std
lds
mov
lea
pop
add
push
push
push
push
push
lea
push
push
call
out
add
pop
add
cltd
fsubs
icebp
fwait
add
popf
jl
add
loopne
out
xchg
push
add
jb
add
add
outsl
mov
lea
add
flds
aad
imul
pop
pop
add
add
xchg
add
cmc
loope
add
ja
add
hlt
int3
add
pop
pop
xchg
in
add
pop
mov
xor
add
push
shl
not
add
pop
add
push
inc
shr
pop
push
mov
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
add
add
divl
add
add
loopne
add
mov
add
in
xchg
fwait
add
add
rolb
scas
add
add
out
mov
test
mov
mov
std
mov
jle
clc
mov
lea
pop
xor
push
push
lea
push
lea
push
push
push
call
in
add
fdivr
out
mov
call
clc
add
add
add
jle
add
add
mov
add
iret
test
in
fs
add
add
add
add
add
rcrb
movb
add
jno
shll
add
int
aam
bound
pop
add
push
sub
lea
shl
shl
pop
add
push
not
pop
pop
rep
mov
xor
push
pop
or
je
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
rclb
cltd
cmpb
push
push
lcall
testb
add
add
test
mov
add
jmp
mov
jns
mov
add
int
cli
cmpsb
ljmp
add
bound
mov
in
cli
rclb
xchg
lods
roll
pop
mov
lea
pop
mov
push
not
add
dec
not
pop
add
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
sti
add
push
loop
add
int3
cli
loope
add
bound
jmp
fs
pop
jmp
fidivrl
nop
movb
add
insb
jno
fists
push
add
mov
mov
push
add
add
fcom
aad
jns
add
xchg
add
test
rcl
pop
in
cli
test
lea
pop
add
push
not
pop
rep
push
xor
rol
xor
pop
pop
push
push
lea
dec
push
push
pop
add
xor
inc
sub
xor
xor
add
pop
sub
inc
pop
pop
push
push
push
push
lea
push
call
mov
jae
add
hlt
hlt
out
add
mov
xlat
out
add
add
pop
stos
add
cmc
add
push
cltd
add
mov
mov
outsl
pop
add
mov
aam
cmc
jne
fldl
add
add
add
jle
nop
test
jmp
xchg
ljmp
rolb
add
add
rolb
cld
lea
pop
mov
mov
push
inc
pop
mov
push
add
shr
shr
dec
pop
jmp
push
mov
push
push
push
lea
push
push
push
push
push
push
call
fs
push
add
bound
pop
add
les
add
add
pop
add
cmpsb
add
aam
xchg
add
add
add
stos
add
cltd
add
pusha
add
lods
mov
push
jo
add
xchg
add
add
add
add
sahf
add
add
sahf
add
cltd
insb
jb
jle
int3
lea
pop
add
push
push
push
call
sti
mov
fsubrl
lret
popf
push
add
int
lcall
mov
push
add
add
jecxz
add
add
pop
stc
add
out
add
jl
cld
add
cld
add
add
add
add
add
out
add
add
mov
mov
add
xchg
mov
into
fadds
add
xchg
jbe
mov
int3
lea
pop
push
push
rol
pop
push
push
ror
inc
pop
push
push
lea
pop
mov
push
not
pop
pop
push
rol
inc
pop
pop
pop
pop
push
dec
ror
sub
pop
leave
push
push
push
lea
push
push
push
push
push
push
call
add
lret
add
test
add
add
jmp
jbe
add
in
add
bound
jmp
testb
mov
add
add
cmpsl
jle
mov
cmc
add
testl
push
pop
loopne
int
add
add
add
add
mov
add
jle
scas
add
bound
pop
add
xchg
mov
sahf
add
lea
pop
ret
push
push
inc
shl
pop
mov
add
push
lea
push
push
push
push
call
add
cwtl
add
xchg
cmpsb
addb
add
je
into
int
mov
add
add
add
add
lahf
add
in
add
add
sti
out
push
mov
add
add
mov
add
add
add
push
jle
fildl
cmc
xchg
std
jge
loop
mov
je
jp
mov
cld
lea
pop
push
push
lea
inc
inc
pop
push
push
push
push
lea
push
call
add
rcr
add
mov
mov
add
mov
add
mov
push
ja
pop
lods
add
lea
push
sahf
int3
mov
add
mov
mov
arpl
jbe
add
mov
pushf
add
xchg
cld
add
mov
cmc
mov
testb
mov
mov
mov
nop
lcall
add
add
ja
add
add
pop
rorl
push
push
not
pop
movl
addl
push
push
push
push
lea
push
lea
push
push
call
xchg
jmp
loopne
add
mov
test
add
ret
add
add
push
cmp
lock
sti
add
add
cwtl
pop
out
xchg
add
add
les
add
add
fcomp
out
add
arpl
add
cld
add
mov
movsb
add
add
mov
add
int3
add
jo
add
add
add
add
pop
test
je
mov
pop
push
lea
add
pop
pop
push
push
push
push
push
push
call
les
xchg
pop
ret
sti
incb
add
mov
jecxz
add
imul
xchg
add
push
add
add
cli
xchg
mov
add
data16
add
add
test
pushf
mov
mov
add
add
add
xchg
add
lds
mov
add
add
add
mov
lea
pop
pop
pop
push
lea
push
push
push
call
addr16
leave
jae
sahf
add
add
add
jae
xchg
add
add
mov
loope
nop
flds
movl
pop
cmc
add
fstpt
add
add
cmc
push
incb
bound
add
lcall
fsubrl
mov
add
pop
xchg
mov
mov
add
jl
mov
jmp
in
stc
add
add
mov
push
mov
push
push
rclb
cmc
mov
mov
lea
pop
leave
push
push
push
push
push
lea
push
call
add
pop
mov
add
add
add
test
movsl
jne
loop
mov
add
add
add
ror
outsl
shlb
fwait
stc
add
sti
shl
mov
xchg
mov
ja
js
add
shrb
mov
add
add
int3
cld
idivb
add
mov
enter
pop
add
rolb
add
les
add
push
shr
shl
pop
push
push
lea
push
push
lea
push
push
lea
push
call
loop
movsb
add
jl
add
add
add
add
mov
add
mov
fiadds
add
add
rcrl
add
add
aad
mov
mov
add
cmc
jnp
mov
add
shrb
data16
add
add
cmc
into
add
add
jbe
xchg
mov
add
mov
lea
pop
mov
add
push
push
push
push
call
rcrb
test
pop
xchg
stos
mov
pop
fsubrs
bound
add
push
aad
fcoms
mov
add
add
add
in
push
add
xchg
cltd
add
shrw
add
ret
add
mov
pushf
xlat
add
add
clc
mov
movsb
popf
in
movsl
mov
lea
pop
push
push
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
lds
imul
cltd
mov
sahf
mov
add
pop
add
test
add
std
fcoms
sahf
rolb
add
test
add
add
add
add
fcomip
jge
jno
bound
add
add
insb
fdiv
flds
out
out
xchg
mov
mov
lea
pop
push
testl
addl
push
push
push
lea
push
push
call
mov
bound
lock
lea
mov
fwait
pop
pop
add
out
mov
movsb
adc
add
data16
into
testl
mov
add
add
add
add
pop
jb
pop
push
bound
add
fisttpll
movsl
push
mov
jb
pop
add
int3
lea
pop
push
call
push
inc
pop
mov
push
lea
inc
dec
pop
pushl
push
shr
lea
pop
push
push
push
add
pop
call
push
shr
pop
cmpl
jne
pop
pop
push
add
pop
pop
pop
push
push
push
push
push
push
push
call
jl
flds
add
jb
icebp
add
add
push
mov
add
popl
jle
add
roll
les
push
shrb
int3
pop
add
add
add
movsl
data16
add
lahf
add
sbb
add
add
rolb
add
pop
leave
ret
push
sub
shr
pop
push
push
inc
sub
xor
add
pop
mov
push
push
lea
push
call
nop
jns
add
add
stc
add
test
mov
movsb
jecxz
loop
int
out
add
popa
push
repnz
jbe
xchg
jne
imul
mov
fildl
add
push
js
fcoml
test
outsl
out
add
cmpsl
lret
repnz
filds
add
xchg
add
add
add
lahf
insb
add
lret
jns
data16
aad
imul
mov
lea
pop
add
push
sub
pop
push
push
push
ror
shl
pop
push
push
rol
rol
pop
push
push
lea
push
push
lea
push
push
push
call
add
lods
add
mov
outsl
add
lret
add
add
fbstp
add
add
fs
jmp
add
add
subb
in
mov
add
pop
add
lds
add
cwtl
ja
mov
fildl
rcr
pop
add
cld
subl
imul
cltd
add
fwait
popf
rcll
mov
add
mov
pop
movl
push
lea
push
push
push
call
add
add
add
push
nop
add
add
add
std
int3
mov
xchg
push
push
xchg
addr16
add
mov
mov
mov
add
add
arpl
jbe
loop
loop
addl
js
testb
ljmp
test
push
add
outsl
add
add
adc
add
fwait
idiv
call
fadds
cmp
fstps
or
inc
sti
call
out
xchg
stc
push
lea
push
push
push
lea
push
push
call
lea
lret
add
rclb
jbe
add
mov
mov
int
jmp
add
leave
ja
jmp
add
push
xchg
decb
add
cltd
je
scas
arpl
loopne
add
jecxz
mov
in
popf
shrl
push
js
clc
add
add
xchg
jno
loope
in
mov
mov
pop
mov
and
insl
cld
add
icebp
pop
cmpl
jne
push
push
push
push
push
push
push
push
push
call
mov
pusha
testb
add
mov
in
push
xchg
test
xchg
add
gs
mov
push
lret
add
out
shr
out
roll
jecxz
add
push
rcr
add
les
insb
shr
add
jl
add
xlat
add
add
add
add
cmc
imulb
add
mov
add
pop
pop
push
push
push
lea
push
lea
push
push
lea
push
call
add
push
add
popa
add
data16
in
mov
add
add
add
je
lret
add
add
imul
mov
js
stos
add
add
ja
add
jnp
mov
add
push
add
out
sahf
shll
add
lret
rolb
jno
lea
addl
mov
add
cmpsl
mov
push
fwait
mov
lea
pop
pop
push
add
not
pop
pop
push
inc
ror
pop
pop
leave
ret
push
lea
push
push
push
push
push
push
push
lea
push
call
add
jne
pop
pop
stc
add
add
xchg
add
lea
add
add
add
jae
mov
imul
in
push
cltd
add
add
jo
callw
xchg
lahf
add
pop
test
mov
mov
stc
add
lret
add
insb
add
lcall
add
pop
add
pop
mov
aam
bound
push
push
sub
not
pop
mov
push
add
pop
add
push
push
lea
not
sub
pop
push
push
push
push
add
ror
pop
mov
lea
push
sub
lea
pop
sub
push
add
add
sub
pop
mov
push
sub
pop
shr
push
push
push
push
call
adcb
movsl
add
stc
push
arpl
mov
jmp
add
push
test
mov
add
xlat
jne
mov
stc
pushf
pop
into
icebp
add
loopne
std
add
mov
add
shll
pop
in
add
ret
push
addr16
mov
out
out
hlt
mov
sub
add
mov
lea
pop
add
mov
mov
push
push
push
lea
push
push
call
ficoml
add
jge
popa
jle
add
mov
mov
add
in
addl
stos
add
add
test
add
add
add
hlt
cmpb
add
out
add
add
mov
add
leave
add
addl
mov
loopne
lcall
pop
movsb
lret
add
add
lock
imul
int3
lea
pop
add
push
push
push
lea
push
lea
push
push
call
mov
add
mov
add
pushf
les
mov
push
jge
xchg
add
je
scas
add
imul
mov
jnp
outsl
in
bound
cmpsb
add
jbe
add
pop
add
cmpb
test
add
add
push
add
mov
lea
pop
add
push
push
push
call
int
lds
shl
add
fwait
mov
filds
div
pop
mov
xchg
jb
pop
jo
popf
aad
add
lcall
push
add
add
add
add
mov
lret
add
flds
test
divl
add
add
jle
add
repnz
aam
jl
ja
pop
popa
xchg
mov
sbbb
bound
mov
mov
push
lea
push
push
lea
push
push
push
push
call
add
mov
aam
add
add
add
mov
add
stos
call
add
pop
fsub
aad
add
roll
add
rolb
into
add
into
mov
add
scas
out
add
xchg
add
std
rolb
add
bound
cmp
jne
push
push
lea
push
push
call
in
add
pop
add
push
add
pop
addr16
movl
mov
add
into
add
xchg
sti
mov
js
add
add
cmpsb
incb
enter
xlat
addb
mov
xchg
push
movsl
add
pop
stos
add
add
les
nop
push
cli
pushf
idivb
jge
rolb
mov
add
scas
add
fxam
add
mov
lea
pop
cmp
jne
mov
push
push
push
push
push
lea
push
push
push
push
push
call
pop
lds
roll
loopne
out
jmp
test
enter
sarb
in
out
jno
pop
insb
add
ljmp
lcall
nop
xchg
jns
pusha
imul
out
add
add
jb
add
add
mov
add
popf
sarl
mov
popf
add
add
lods
je
in
out
mov
movsb
add
stos
mov
lea
pop
movl
jmp
push
shl
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
xchg
sahf
in
add
and
pop
jno
mov
add
add
add
lods
pop
mov
imull
into
mov
add
jno
push
fwait
cmpsl
leave
add
test
hlt
add
add
idivb
add
mov
mov
add
in
fmuls
and
mov
sub
jne
push
pop
mov
push
sub
pop
movl
jmp
push
dec
add
pop
mov
mov
push
lea
push
call
mov
lods
testl
add
ret
jbe
pop
pusha
add
mov
cli
jne
nop
ljmp
sahf
lds
cwtl
roll
add
mov
add
add
pop
mov
sahf
iret
jl
jecxz
out
mov
xchg
add
fiadds
add
cwtl
rcl
outsl
jne
add
add
lods
insb
add
leave
add
pop
cmp
jne
push
shl
pop
mov
push
push
call
add
push
stos
xchg
add
jmp
out
add
xor
mov
add
lcall
add
ficomps
insb
fildll
mov
movsb
loope
cli
add
out
add
add
add
mov
add
in
add
std
jmp
push
mov
popf
add
pop
movl
push
dec
shr
pop
jmp
mov
push
shl
not
pop
cmpw
jne
push
dec
pop
mov
movl
jmp
push
xor
rol
pop
pushl
push
sub
dec
pop
pop
mov
push
inc
shr
dec
pop
mov
push
push
call
mov
popl
in
pushf
add
mov
add
add
add
add
add
cld
add
mov
fldl
shll
add
stc
add
into
add
add
push
add
add
clc
add
jne
add
pop
jge
int
mov
aad
test
mov
xchg
pop
add
add
xchg
jp
aam
add
stos
add
data16
push
or
pmuludq
shl
not
not
push
sub
add
not
add
sub
not
shr
pop
sub
add
not
pop
push
push
push
push
lea
push
push
push
call
add
add
mov
mov
add
lods
jl
add
jbe
mov
mov
loope
add
shlb
lock
mov
add
into
pop
push
add
jecxz
lret
arpl
add
add
add
add
add
lds
add
add
mov
mov
pop
mov
lea
pop
call
cmpl
je
push
push
sub
shl
add
push
or
inc
add
sub
sub
xor
xor
add
pop
add
rol
pop
push
lea
push
push
lea
push
lea
push
call
xchg
push
push
add
add
add
fdecstp
jge
pop
fldl
int3
pop
push
add
popa
push
add
lcall
push
test
icebp
pop
add
add
fwait
mov
add
hlt
out
add
add
add
add
lcall
loopne
add
jp
call
add
repnz
pop
add
je
fstpl
mov
bound
push
loop
push
mov
lea
pop
push
call
push
ror
sub
rol
pop
cmpl
je
push
push
shl
push
or
not
add
dec
sub
sub
shl
ror
pop
xor
rol
add
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
ficomps
add
hlt
lret
add
shll
add
mov
in
mov
stos
mov
sti
insb
int3
out
add
into
andl
pop
call
enter
mov
loopne
add
mov
jmp
faddl
pop
add
xchg
clc
in
add
add
add
roll
add
add
mov
xchg
add
popa
and
push
call
cmpl
je
push
push
shl
rol
xor
xor
push
or
not
add
sub
inc
sub
pop
rol
add
pop
push
inc
shr
pop
push
call
cmpl
je
push
push
add
add
push
or
not
add
rol
dec
dec
sub
rol
sub
pop
pop
push
lea
sub
pop
push
push
inc
pop
call
push
push
lea
push
push
push
push
lea
push
call
mov
xchg
add
add
mov
add
ret
mov
add
stc
add
add
add
mov
test
add
add
add
add
data16
add
stos
mov
into
add
pop
xchg
mov
add
scas
add
add
movsb
bound
jno
les
add
add
add
add
out
mov
lods
add
hlt
ret
mov
lea
pop
cmpl
je
push
push
add
push
or
inc
add
ror
dec
dec
sub
add
shr
pop
pop
push
lea
push
lea
push
call
mov
pop
stc
xchg
xchg
push
in
js
jns
push
nop
mov
jbe
fimuls
roll
je
add
add
fiadds
iret
add
int3
jmp
stc
jl
in
jae
fcmovu
cmpsb
mov
add
mov
js
fsubrl
mov
add
popa
or
push
call
cmpl
je
push
push
add
sub
xor
push
or
inc
add
shr
inc
add
sub
not
rol
sub
sub
pop
shr
not
inc
pop
push
shl
shr
add
pop
push
push
push
push
push
push
push
push
call
roll
mov
add
cmpsb
add
stos
pop
jno
add
xchg
add
mov
push
mov
mov
add
add
test
fldl
mov
pop
lahf
aam
add
add
jl
movsb
movsl
lods
mov
add
add
add
iret
add
add
fs
test
jge
add
stos
add
lcall
not
fwait
xchg
fisubrl
lea
pop
call
push
push
push
push
push
push
push
push
push
push
call
add
mov
xchg
cmpsb
scas
xchg
les
add
mov
add
filds
add
push
scas
ljmp
add
add
mov
imul
jns
pusha
cli
xlat
out
mov
shrl
add
add
add
add
movsl
add
les
mov
jno
loopne
jecxz
addl
je
stos
add
add
mov
push
add
add
add
mov
lea
pop
cmpl
je
push
push
dec
not
not
push
or
inc
add
add
shr
sub
add
shr
pop
shr
pop
push
dec
xor
pop
push
push
push
push
call
lcall
iret
ljmp
add
scas
add
mov
jp
add
mov
add
add
mov
add
xchg
addl
jnp
add
push
add
xchg
lret
out
add
xchg
enter
nop
add
movsb
ljmp
add
popf
in
add
pop
call
push
push
call
out
in
add
pop
out
pop
add
mov
fcomps
fstpl
popa
cltd
scas
add
add
lods
lods
pop
in
arpl
add
add
add
add
add
fdiv
push
sarb
add
pop
int3
jne
cmpsl
add
in
add
push
add
add
in
les
pop
cmpl
je
push
push
not
inc
push
xor
add
shr
sub
sub
pop
shr
ror
add
pop
push
rol
lea
add
pop
push
push
lea
sub
pop
call
push
push
lea
push
call
ja
pop
push
scas
mov
test
mov
add
push
jmp
add
add
xchg
pop
add
shrb
loop
add
mov
movsl
clc
jge
insb
xchg
add
hlt
lds
stos
add
lods
add
shlb
add
sarl
add
fsub
test
fildl
add
push
pop
les
bound
cmpl
je
push
push
add
dec
dec
push
xor
add
ror
shr
sub
dec
pop
shr
pop
push
push
shl
add
sub
add
pop
call
push
inc
pop
cmpl
je
push
push
not
push
or
not
add
sub
shl
xor
pop
sub
ror
pop
push
lea
push
call
push
data16
mov
xlat
cld
test
nop
movl
add
xchg
add
mov
jns
add
fdivs
add
testl
add
lds
cld
mov
jecxz
jp
rcr
add
fsubrp
add
mov
push
lret
nop
jmp
jmp
fwait
jnp
in
add
icebp
add
add
mov
lea
pop
push
push
lea
push
push
push
push
call
add
add
add
add
mov
add
call
add
add
loopne
jns
add
add
add
jge
push
add
popf
pop
add
add
add
add
add
add
sahf
xchg
fldcw
lock
cli
fidivrl
jb
jne
add
popf
bound
lret
mov
add
add
js
loop
add
add
add
mov
lea
pop
call
cmpl
je
push
push
add
shl
push
xor
add
ror
inc
add
sub
add
shl
pop
not
inc
add
pop
push
ror
pop
push
push
inc
pop
call
cmpl
je
push
push
xor
shr
add
push
or
not
add
dec
inc
not
sub
rol
xor
pop
xor
add
pop
push
add
pop
push
call
push
lea
pop
cmpl
jne
push
push
push
push
push
call
add
add
add
leave
aam
fiaddl
popa
add
add
add
add
lret
xchg
add
nop
xchg
mov
add
iret
add
lahf
jnp
mov
push
mov
add
pop
add
add
push
cwtl
add
mov
std
nop
jo
int
ja
xlat
jbe
jle
mov
stos
stos
xchg
aam
bound
mov
push
pop
movl
jmp
xor
push
push
push
call
add
mov
add
jns
ljmp
loopne
add
add
enter
add
lea
add
add
jae
popf
add
mov
scas
mov
push
add
xchg
mov
push
jecxz
xchg
fwait
jo
jns
repnz
outsl
push
mov
add
jne
lods
jnp
add
pop
fnstenv
pop
push
leave
mull
add
mov
jp
xorl
pop
sti
xchg
mov
lea
pop
pop
pop
push
dec
inc
ror
pop
pop
push
dec
inc
pop
pop
push
push
push
push
push
call
rorl
add
add
mov
push
push
add
cwtl
add
add
std
add
add
add
mov
add
in
add
lahf
add
loopne
mov
movb
add
pop
lods
push
orl
int
add
jmp
add
bound
jle
pop
add
add
ja
mov
lea
pop
leave
push
lea
push
lea
push
lea
push
push
call
cltd
mov
cli
xor
aad
sti
enter
lds
jmp
add
mov
nop
data16
lahf
add
add
mov
shl
jbe
add
repnz
add
add
jo
add
fsts
leave
insb
stos
rcrb
cmc
jbe
add
mov
in
jnp
add
into
addr16
add
iret
add
push
int3
lea
pop
ret
push
push
lea
push
lea
push
lea
push
push
push
call
ret
add
mov
add
cmpsb
add
popf
cld
icebp
cld
add
pop
add
add
je
scas
add
les
int3
add
push
loop
fimull
jbe
stos
in
add
lahf
scas
imul
pop
add
add
add
fldcw
add
fs
add
lret
jb
add
add
add
out
push
fdiv
mov
aam
bound
pop
mov
add
push
rol
shr
shr
ror
pop
cmpl
jne
push
push
xor
push
and
add
sub
shl
add
pop
pop
pushl
push
lea
pop
call
push
push
push
push
push
push
call
cwtl
movsl
fdivrl
out
std
add
jno
pop
mov
add
add
add
lock
add
xchg
lods
lock
mov
fdiv
add
jp
scas
xchg
in
add
add
out
add
out
sbbl
add
stos
add
pop
push
mov
mov
cmpsl
addl
mov
in
add
out
loop
iret
lea
in
movsl
jb
leave
in
mov
adc
call
push
rol
add
pop
jmp
cmpl
je
push
sub
add
rol
pop
cmpl
jne
leave
add
push
push
push
lea
push
call
mov
out
addl
add
add
add
add
push
add
shr
add
jge
mov
mov
lods
lods
pop
add
jae
in
lds
testl
mov
add
test
out
incb
mov
push
enter
add
shrb
pop
add
int
mov
mov
pop
pop
pop
push
add
shl
add
pop
pop
pop
leave
push
inc
ror
add
shr
pop
add
ret
jmp
push
push
push
push
call
add
add
mov
add
mov
int
xorl
in
add
stc
in
mov
lcall
add
jbe
add
mov
mov
add
icebp
add
add
add
pop
mov
shrb
add
xchg
aad
mov
xchg
add
push
xchg
out
fcomp
xchg
addl
scas
aam
cwtl
sbbl
jae
jb
mov
jp
int3
lea
pop
cmpl
jne
push
push
rol
push
and
add
rol
xor
shl
sub
shl
not
shl
pop
add
shl
lea
pop
pushl
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
pop
add
lea
cmpsl
add
jnp
faddl
add
add
mov
fsubr
repnz
mov
jmp
test
add
test
add
loopne
add
add
jb
xchg
imul
insb
or
mov
add
ret
xchg
bound
cltd
mov
mov
lea
pop
call
push
push
push
push
push
push
call
xchg
pop
add
loope
jecxz
aad
and
popa
jo
out
cli
push
add
add
add
pop
add
add
clc
pushf
add
int
add
mov
xchg
add
add
pop
add
je
scas
add
add
imul
add
imul
add
test
jb
in
push
addb
cld
lea
pop
push
call
jmp
push
lea
push
push
push
push
lea
push
call
add
xchg
push
mov
add
fiadds
add
xchg
hlt
add
add
add
lret
add
aad
movsl
lock
popf
rcrb
add
xchg
lods
mov
cltd
add
xchg
cltd
mov
mov
add
jb
add
mov
add
pop
add
add
add
mov
mov
add
incb
xchg
mov
sbb
jge
add
test
push
add
push
shl
ror
shr
pop
mov
push
pop
mov
push
push
push
push
or
not
add
not
xor
sub
rol
sub
pop
not
add
lea
pop
push
shr
pop
pushl
call
call
push
push
dec
ror
push
push
pop
add
xor
sub
sub
dec
pop
dec
pop
push
push
push
lea
push
push
lea
push
push
call
mov
cmc
add
add
cmc
mov
mov
add
add
add
filds
imul
xchg
add
into
push
scas
bound
imul
call
add
add
jp
clc
add
push
mov
push
pop
popa
add
shl
mov
pusha
add
mov
add
cmpsb
add
lea
pop
pushl
call
call
push
push
xor
sub
not
lea
push
push
pop
add
sub
not
xor
sub
pop
sub
pop
push
shr
sub
pop
pushl
call
call
push
push
inc
push
or
inc
add
shl
sub
sub
inc
sub
xor
add
sub
pop
add
shl
lea
pop
push
push
dec
ror
push
sub
add
shr
sub
xor
rol
sub
pop
dec
rol
pop
push
dec
ror
pop
call
pop
push
lea
push
push
lea
push
lea
push
push
push
call
jne
sbbl
add
add
in
xchg
add
add
add
pop
add
cmpsb
add
mov
add
add
mov
add
data16
cmc
add
enter
loope
lret
mov
add
popf
lds
jae
pop
add
mov
push
lret
add
jno
add
add
add
push
mov
lea
pop
dec
jne
call
push
push
push
lea
push
lea
push
push
push
push
push
call
add
add
add
add
add
mov
test
out
mov
add
cmc
push
add
jge
mov
mov
add
add
mov
add
add
mov
into
leave
add
popl
fldlg2
add
pop
add
add
imul
fsts
popf
sahf
mov
add
addb
mov
pop
jmp
push
push
push
push
push
push
lea
push
push
push
call
int
add
pop
fists
pop
add
add
mov
clc
add
iret
add
mov
mov
add
add
add
add
shll
xchg
mov
add
in
add
add
add
ret
add
aam
add
add
aam
sahf
add
xchg
mov
lea
pop
call
push
push
not
xor
push
or
inc
add
add
add
inc
sub
sub
dec
lea
pop
dec
pop
pushl
push
inc
sub
lea
pop
call
push
call
push
push
lea
push
push
push
push
push
lea
push
call
xchg
scas
mov
in
add
aam
push
cmc
int3
movsl
add
popf
cmp
popa
add
int3
jb
mov
xchg
add
cltd
push
add
roll
add
ljmp
xchg
add
popa
add
fcomip
out
add
pop
add
add
pop
add
add
add
add
jbe
mov
mov
add
mov
jno
lods
add
mov
lea
pop
mov
push
ror
add
pop
lea
push
push
inc
push
push
pop
add
add
sub
not
xor
sub
pop
add
pop
push
ror
shr
sub
pop
pushl
push
pop
call
push
lea
push
push
push
push
call
leave
add
xlat
ror
movsl
add
js
movsl
add
add
lods
enter
add
fidivl
repnz
lret
add
xchg
lret
cmpsb
pusha
mov
into
push
add
xchg
add
jne
out
push
add
fbstp
add
ljmp
aad
mov
add
js
nop
movsb
leave
mov
add
jecxz
int
aad
rorl
in
out
mov
lea
pop
push
call
push
push
xor
shr
shr
not
push
and
add
sub
sub
lea
shl
not
pop
dec
sub
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
xchg
js
mov
pushf
mov
push
bound
add
cld
bound
push
data16
add
sti
cwtl
rol
jp
faddp
enter
stc
and
lods
add
bound
enter
lcall
xorl
call
test
outsl
fldl
add
mov
stos
mov
xchg
pop
add
add
add
arpl
mov
pop
pop
cltd
add
add
add
or
lea
pop
pushl
call
call
push
lea
push
push
lea
push
push
push
push
push
call
pushf
lret
test
push
mov
add
add
mov
mov
stos
add
push
out
imul
scas
clc
popa
add
push
addl
add
add
fsubp
mov
add
cmpl
arpl
add
pusha
into
add
loop
add
add
add
jl
popf
add
lea
add
incb
add
orl
lea
push
push
sub
add
lea
push
sub
add
not
ror
ror
inc
sub
dec
pop
xor
add
sub
rol
pop
push
rol
ror
rol
pop
pushl
push
push
push
push
call
jmp
hlt
scas
add
mov
pop
lret
add
add
add
shl
push
add
insb
roll
add
add
mov
add
pop
pop
int3
loop
lret
add
add
add
jno
add
add
pop
xchg
je
stos
mov
mov
add
add
adc
sub
lea
push
lea
push
push
push
call
jp
imul
push
mov
into
add
jp
add
xchg
xchg
add
add
mov
in
add
mov
icebp
loop
mov
popa
add
mov
push
ja
repnz
call
scas
add
mov
enter
add
cltd
add
call
add
pop
lea
push
add
lea
pop
push
push
push
lea
push
push
push
lea
push
call
mov
in
out
xchg
add
stos
mov
outsl
popa
rcll
add
add
add
call
lcall
movsl
fwait
add
out
add
std
pop
mov
add
cmpl
pop
test
add
into
xlat
cli
push
add
mov
add
mov
jecxz
movsl
add
add
mov
mov
arpl
lahf
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
lock
jae
add
add
mov
mov
shl
add
add
add
jle
roll
add
lahf
xchg
pop
mov
out
fwait
cwtl
add
push
fwait
lds
pop
add
pop
cmpsb
add
imul
icebp
add
movsl
push
stos
stos
add
addr16
fiaddl
les
jl
hlt
add
add
jmp
les
pop
pushl
push
push
inc
rol
shl
push
or
inc
add
inc
sub
shl
shl
add
inc
pop
lea
not
add
pop
push
push
lea
push
lea
push
call
jne
add
loop
fs
add
add
jmp
mov
scas
add
add
push
mov
rclb
push
add
loopne
lahf
add
add
cmpsb
add
add
shll
add
jno
add
addr16
mov
jnp
lock
add
jne
scas
add
add
add
add
pop
roll
xchg
add
add
mov
lea
pop
push
call
push
push
sub
push
sub
add
shl
add
lea
sub
rol
pop
shl
pop
push
dec
add
pop
pushl
call
push
sub
ror
pop
push
push
sub
inc
add
rol
pop
call
push
push
sub
shr
push
sub
add
sub
sub
sub
add
add
sub
pop
sub
pop
push
push
push
push
push
call
jne
stc
add
incb
mov
pop
outsl
aam
stos
shr
aad
jb
ljmp
mov
roll
add
push
add
jecxz
fadds
add
lods
add
aam
addr16
pop
jp
add
add
add
add
hlt
add
sar
mov
mov
cltd
add
jle
insb
cmpsb
std
lods
push
xlat
push
add
mov
arpl
push
mov
popa
adc
pushl
call
call
push
rol
not
pop
jmp
pushl
mov
push
pop
jmp
push
push
shl
push
push
pop
add
inc
sub
add
dec
pop
rol
inc
pop
push
dec
ror
pop
pushl
call
push
shl
ror
pop
push
push
shl
lea
shl
inc
pop
call
push
push
push
xor
add
sub
shl
ror
sub
rol
inc
pop
sub
shr
shl
dec
pop
push
lea
pop
pushl
call
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
scas
add
rolb
add
arpl
xlat
add
pusha
insb
add
je
js
popa
rolb
xlat
pusha
cltd
incb
addl
cmc
les
ljmp
add
popa
add
jmp
xchg
sti
add
add
jecxz
mov
scas
fdivs
jae
fldenv
add
fsts
add
add
mov
in
add
jp
addb
add
pop
call
leave
push
inc
dec
pop
add
pop
push
push
push
push
push
push
call
orl
add
add
mov
push
add
call
jbe
ror
incb
xchg
cmc
add
xorl
add
lahf
mov
add
scas
add
test
mov
icebp
mov
mov
xchg
add
xchg
ror
add
add
js
add
push
fisubl
add
fisttps
data16
pop
pop
push
push
push
lea
push
call
jge
fisubs
fistpll
add
pusha
add
mov
out
int
roll
push
ljmp
push
add
cld
xchg
add
repnz
add
lock
add
arpl
add
add
repnz
je
add
add
lea
ja
add
loop
ljmp
mov
jp
stc
mov
lea
pop
leave
add
ret
push
push
push
push
call
icebp
mov
add
mov
std
xchg
jno
repnz
add
jle
add
add
pusha
xchg
fmuls
loopne
lds
into
jge
add
loope
testb
pop
mov
mov
mov
add
mov
popf
movsl
add
lea
add
add
add
mov
lea
pop
leave
push
add
not
pop
ret
push
not
pop
push
push
inc
pop
mov
push
push
push
push
push
call
add
lea
add
add
gs
fiadds
iret
add
push
js
add
mov
add
popa
testb
je
add
int
add
jb
mov
add
mov
add
mov
mov
add
iret
xchg
push
mov
mov
in
add
add
add
xchg
add
ja
add
add
mov
lea
pop
cmpl
jne
push
push
push
push
push
lea
push
push
call
call
pop
pop
ja
xlat
pushf
bnd
add
xchg
pusha
xchg
cmc
xchg
add
mov
mov
fldcw
add
pop
jb
std
jbe
jo
add
addb
out
sahf
add
jbe
mov
add
add
pop
loope
add
mov
add
xlat
mov
add
lea
pop
mov
jmp
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
push
add
imul
test
add
add
out
mov
add
fistl
aam
iret
add
je
mov
add
add
pop
push
pop
add
push
add
mov
imul
push
lea
add
xchg
jp
into
add
xchg
mov
movsb
scas
xchg
xlat
add
xchg
add
jp
mov
add
lea
pop
mov
and
xor
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
push
add
add
add
push
pop
addl
ja
in
cld
pop
enter
popf
add
jle
aam
add
xchg
add
aad
loop
idivl
icebp
add
fiaddl
jmp
add
cli
in
add
mov
push
mov
jle
into
pop
add
add
push
hlt
lea
pop
xor
add
xor
push
sub
add
pop
dec
push
add
not
not
pop
sub
jmp
push
push
push
push
push
push
lea
push
push
push
call
add
add
jmp
push
jl
push
lcall
mov
and
push
xchg
add
pop
outsl
add
add
add
add
add
add
lret
ja
sahf
lods
add
aam
add
add
jp
rcl
add
mov
hlt
mov
clc
lret
arpl
xlat
add
mov
push
pop
push
nop
xchg
stos
add
add
cmpsl
add
cld
lea
pop
sub
pushl
pop
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
repnz
mov
add
cltd
jno
addl
add
add
imul
cld
icebp
push
std
loopne
add
add
mov
xlat
cmpsl
add
cmp
mov
out
popa
nop
pushf
mov
push
test
add
jno
data16
add
lock
idivl
add
cld
js
add
pop
sub
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
push
mov
push
add
add
cmpsb
push
add
fistps
add
jns
in
add
add
lret
mov
jnp
mov
add
add
lret
cli
push
add
fs
in
loope
add
mov
add
add
jb
ljmp
cli
add
cld
xchg
addr16
in
xchg
arpl
cmp
jne
mov
push
lea
push
push
push
call
add
aad
add
add
lea
mov
outsl
into
add
add
ret
insb
add
jns
ror
pop
cli
add
fs
loope
stos
add
mov
nop
clc
add
std
rolb
popf
add
fcoms
mov
mov
jle
add
add
add
add
mov
lea
pop
lea
push
push
push
push
lea
push
push
push
push
push
call
jp
jno
in
rol
pop
bound
mov
add
add
add
mov
push
les
add
add
add
arpl
add
roll
add
in
add
add
outsl
add
mov
add
mov
add
add
jne
mov
fs
cwtl
lds
test
mov
add
test
mov
lea
pop
sub
mov
shr
push
dec
shl
dec
sub
pop
add
push
lea
push
push
push
push
lea
push
call
stc
add
int
jle
test
mov
add
clc
add
add
add
fucomi
mov
test
xchg
add
fstps
scas
pop
roll
addb
stc
xlat
cmpsb
add
add
add
into
scas
add
add
push
loop
add
filds
movsb
fldl
add
mov
cli
mov
lahf
add
icebp
mov
add
mov
call
mov
mov
int3
lea
pop
sub
push
push
call
add
jge
add
jmp
out
add
add
lret
mov
jnp
add
add
mov
add
jns
jp
outsl
mov
add
jne
add
lret
out
mov
pop
incb
mov
mov
add
add
add
push
add
add
pop
ret
mov
add
add
jle
jno
rcl
lea
popa
or
xor
ds
push
push
push
lea
push
lea
push
lea
push
call
jae
add
add
cmc
lods
bound
int
mov
bnd
aam
mov
add
add
arpl
push
je
loopne
lods
add
mov
add
hlt
mov
add
pusha
add
xchg
add
mov
testl
xchg
idiv
flds
fsubl
fiaddl
and
shr
and
push
xor
rol
ror
dec
pop
sub
cmp
jne
leave
push
lea
push
call
mov
stc
aad
js
jae
add
add
mov
call
in
add
std
les
add
mov
aad
jnp
push
add
rolb
mov
mov
add
add
add
add
movb
add
popa
push
jl
add
rolb
add
lret
ror
imul
mov
lea
pop
ret
push
add
rol
pop
push
push
lea
push
push
push
push
push
push
push
push
call
mov
pop
add
cmc
add
frstor
in
mov
pop
add
add
test
add
mov
pop
add
add
testl
mov
lods
test
mov
push
add
add
add
movsl
add
xchg
call
add
add
add
pop
in
add
add
mov
add
imul
fiadds
add
and
mov
add
push
sub
rol
pop
push
push
ror
ror
sub
pop
push
push
push
push
push
call
out
scas
add
add
mov
out
add
outsl
mov
add
mov
add
out
mov
cld
add
pop
mov
mov
fs
hlt
lods
add
add
mov
scas
pop
gs
jge
lahf
add
add
pop
cli
add
xchg
popf
leavew
cltd
mov
jge
outsl
add
pop
add
ficoms
fadds
add
fmull
mov
lea
push
sub
not
pop
sub
push
dec
pop
mov
push
xor
pop
shr
add
mov
push
push
push
push
push
push
call
add
jge
cwtl
scas
enter
add
cwtl
icebp
add
add
sti
xchg
xchg
push
lea
mov
je
movsl
sbb
xorb
mov
lahf
xlat
int3
imull
test
add
rolb
movsl
fiaddl
add
add
mov
add
loope
rclb
add
jno
add
cmc
std
mov
cltd
add
add
ret
add
pop
add
mov
push
xor
ror
dec
pop
add
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
add
mov
enter
add
hlt
add
push
fldl
stos
xchg
add
add
lahf
add
ffree
jmp
pop
out
push
add
add
stos
testl
int
bound
add
ja
add
jnp
mov
lock
push
mov
mov
jnp
testb
sti
add
push
cli
mov
out
mov
lea
pop
xor
push
push
call
add
int
lods
push
bound
xchg
stos
jp
mov
mov
add
push
imul
mov
add
mov
mov
add
fst
fiaddl
add
out
push
jns
cmc
out
sahf
add
xchg
push
jb
jle
cwtl
pop
jecxz
jbe
cltd
std
leave
mov
add
jecxz
mov
mov
add
add
pop
mov
push
shr
sub
pop
and
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
cwtl
mov
add
into
add
add
mov
add
add
add
jecxz
arpl
roll
negl
bound
rcll
gs
add
int
lods
push
in
add
nop
add
hlt
add
insb
add
add
lret
add
mov
add
pop
je
gs
lea
add
push
ret
aad
add
jae
add
add
mov
lea
pop
call
push
push
push
push
call
add
add
mov
popf
add
cmpsl
add
xchg
add
addl
in
add
add
add
jge
add
out
fadds
lret
mov
add
pop
jecxz
add
jnp
rcl
adc
mov
rcr
out
cltd
faddl
cltd
imul
add
ja
add
add
mov
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
test
add
arpl
mov
mov
jge
lods
lea
jl
iret
mov
mov
je
add
push
add
lcall
push
fimull
test
mov
mov
add
jns
loopne
mov
add
movsb
add
jnp
out
lock
add
lahf
jecxz
mov
lea
pop
cmp
je
add
push
push
call
add
shll
jecxz
lea
cwtl
std
mov
out
add
add
add
bound
add
add
out
xchg
subb
insb
add
add
add
cltd
aad
mov
add
jmp
mov
add
push
xchg
rolb
mov
iret
mov
mov
add
add
out
add
fldl
xchg
add
repnz
jae
shrl
sti
mov
lea
pop
cmpl
jne
push
push
push
push
lea
push
push
push
push
push
push
call
pop
pusha
popa
lea
stos
add
add
add
add
jmp
lea
add
idiv
fiaddl
loopne
fcmovnbe
xchg
in
mov
add
lods
push
add
xchg
loopne
add
add
jnp
add
add
add
cli
add
add
add
add
add
add
xchg
cmc
add
pop
xor
push
push
push
lea
push
push
push
call
ljmp
add
data16
add
add
movsl
in
popf
add
repnz
push
add
mov
movl
mov
add
add
add
mov
add
add
add
xchg
add
sar
add
mov
mov
add
mov
mov
add
mov
pop
pop
push
shr
add
sub
pop
pop
pop
push
not
rol
rol
pop
pop
pop
leave
push
push
call
add
int3
cmc
cli
imull
mov
ret
jecxz
imul
add
xchg
push
add
add
rcr
mov
ja
pop
mov
add
add
add
add
faddl
mov
add
lods
mov
cmc
cli
mov
mov
add
pop
lcall
ret
push
not
xor
rol
pop
mov
push
rol
inc
pop
add
push
push
push
push
push
call
pop
sti
lret
in
mov
nop
jo
iret
add
movsb
add
pop
add
scas
add
negb
roll
stos
data16
xchg
add
pop
fildll
les
fs
add
add
push
add
push
mov
add
add
add
jle
mov
pop
pop
loope
insb
jmp
jge
add
movb
add
xchg
add
add
mov
lea
pop
pop
push
sub
add
pop
pop
mov
push
push
add
pop
call
push
inc
dec
pop
xor
push
push
push
push
lea
push
lea
push
push
push
call
iret
add
mov
cld
in
xchg
addb
push
jnp
jmp
mov
addl
jmp
mov
add
add
add
test
add
jno
lret
xlat
mov
mov
add
add
add
mov
push
add
jno
cli
fcoml
stos
add
jmp
jge
mov
add
in
ljmp
pop
push
push
push
push
lea
push
push
push
push
push
call
add
add
mov
aad
mov
xchg
add
add
jns
out
add
lds
mov
mov
jmp
pop
add
add
add
andb
scas
cmpsl
add
cwtl
js
addr16
stos
js
add
add
add
stos
in
hlt
les
jecxz
sar
add
add
xchg
cmpl
out
mov
lea
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
out
push
lcall
xchg
mov
js
add
push
add
add
jecxz
add
loopne
add
out
add
add
ret
add
rcrl
movsl
add
add
push
add
mov
int
add
add
mov
test
mov
add
bound
pop
pop
pop
pop
push
shl
sub
shl
pop
leave
ret
push
push
push
push
call
push
pop
xchg
add
jbe
add
scas
add
jge
add
lret
fildl
popa
icebp
je
jno
push
add
push
sti
add
sahf
jbe
mov
jle
sahf
push
test
add
xchg
add
add
push
pop
int3
jge
add
add
cwtl
add
add
add
add
fiaddl
mov
sti
test
lahf
push
shlb
hlt
lea
pop
mov
push
inc
pop
add
push
push
call
jl
add
cmpsb
mov
mov
add
add
xor
js
int3
add
pushf
add
add
mov
add
add
mov
leave
jecxz
mov
mov
pop
lods
add
fists
flds
mov
cltd
addl
rolb
scas
add
pop
push
add
add
push
lret
push
jns
add
add
add
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
mov
test
out
push
add
rolb
push
mov
pushf
add
add
scas
push
enter
stos
add
icebp
add
ret
xchg
pop
xchg
jle
imul
xchg
add
lcall
add
out
mov
loope
add
xchg
cwtl
add
mov
mov
mov
lea
pop
push
push
push
call
mov
scas
add
add
push
lds
push
aad
pushf
add
add
pop
add
mov
pop
mov
lcall
mov
add
sti
push
add
mov
add
jmp
rolb
add
jns
leave
add
test
jnp
cld
imul
add
add
shll
lea
pop
push
push
rol
pop
mov
push
rol
pop
push
pop
push
rol
not
shr
pop
lea
push
push
lea
push
push
push
lea
push
call
push
mov
hlt
add
fadds
add
test
add
add
add
xchg
add
lods
into
jecxz
push
cmpsl
movsl
enter
add
add
icebp
mov
lods
add
cwtl
in
mov
jno
add
outsl
add
cmpsl
andl
add
jp
jmp
mov
add
fs
add
add
add
mov
jge
add
pop
sub
mov
push
lea
pop
shr
add
push
lea
pop
mov
add
pushl
push
ror
shr
shr
add
pop
popl
push
dec
add
add
pop
mov
push
inc
pop
add
xor
push
lea
push
lea
push
push
call
add
add
iret
jnp
jo
lret
int
mov
leave
add
mov
test
lcall
in
xchg
add
insb
testl
fdivrs
add
test
stos
movb
add
mov
cmpsl
add
lea
add
cmc
xchg
add
add
js
add
cltd
add
add
add
add
adc
adc
push
shr
dec
pop
mov
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
pop
add
push
movsb
icebp
xchg
add
add
xlat
add
test
add
mov
bound
lock
jne
add
mov
mov
add
add
scas
lcall
popl
add
pop
sar
int
clc
add
add
int3
add
add
enter
je
mov
movsb
gs
iret
in
rolb
fmuls
pop
add
push
push
push
push
call
into
mov
mov
mov
mov
fmull
into
mov
movsl
push
cld
popa
jmp
pop
js
jmp
pop
push
js
add
incb
add
int
into
aad
out
jb
xchg
fstpt
lret
add
xchg
fwait
ja
xchg
mov
std
mov
pop
int
sarl
rol
repnz
fadds
fmull
rclb
enter
adc
enter
push
lea
push
call
jmp
in
add
push
jbe
outsl
mov
add
add
add
add
add
pop
pop
add
mov
xlat
push
fdivr
push
scas
xchg
outsl
add
add
icebp
fs
add
add
add
mov
jns
fadds
jbe
add
add
jmp
mov
lea
xchg
icebp
xchg
add
mov
add
rolb
popa
or
xchg
xor
shl
pop
nop
nop
cmp
je
push
push
push
lea
push
call
add
cmpsb
test
add
mov
mov
add
add
cmpsb
andb
add
mov
je
push
add
lret
popa
mov
jbe
add
add
in
testl
add
or
push
add
imul
pop
call
cld
add
mov
add
jb
enter
add
add
imul
cli
stos
rorl
pop
nop
nop
inc
push
lea
push
push
call
jmp
xchg
sti
add
jecxz
call
arpl
mov
xchg
add
jmp
jo
push
test
add
xchg
popl
out
add
add
fidivs
add
add
mov
add
testb
jns
xchg
movsl
popf
lods
push
add
je
add
add
mov
mov
or
nop
nop
push
lea
push
push
call
repnz
lcall
add
je
testb
add
fwait
clc
insb
add
add
push
clc
mov
fiadds
add
add
mov
add
test
loopne
popf
clc
add
push
add
add
add
call
add
push
add
movsl
js
add
mov
xchg
add
js
in
jne
add
lock
lea
pop
cmp
jb
push
sub
add
inc
pop
xor
jmp
mov
push
lea
push
call
in
shlb
jnp
cli
gs
push
test
add
add
pop
cmpsl
test
scas
movb
add
add
rcr
push
stc
loope
add
mov
scas
sahf
arpl
push
lcall
pop
data16
add
fstpl
add
mov
jp
loopne
mov
lea
pop
add
push
lea
push
call
push
fadd
add
mov
fmulp
add
cmpsb
pop
add
fwait
rolb
jp
mov
lods
clc
lcall
add
leave
push
add
xchg
add
add
leave
std
subb
cwtl
add
mov
add
add
stos
testb
mov
lea
pop
movzwl
push
add
sub
shl
sub
pop
mov
push
push
push
push
call
add
add
add
push
xchg
add
gs
pop
add
mov
add
in
jo
add
pop
hlt
sar
sar
add
pop
add
les
add
rcrl
add
mov
add
add
add
jb
add
mov
pop
add
int3
enter
xchg
push
add
add
iret
push
add
fistpll
add
push
add
jno
int3
jo
mov
lea
pop
add
push
push
push
lea
push
push
call
add
mov
mov
add
add
add
scas
add
add
add
mov
add
add
ljmp
mov
jecxz
clc
add
mov
ljmp
pushf
add
add
add
rclb
add
roll
add
add
aam
les
test
rorb
add
scas
in
xchg
orb
mov
lea
pop
mov
xor
push
add
pop
xor
push
not
lea
pop
shl
push
push
lea
push
push
push
push
push
lea
push
call
add
arpl
outsl
fiadds
addl
add
add
cltd
aad
add
add
jne
add
xchg
stos
mov
add
lods
fsubr
lds
mov
rolb
add
loopne
shll
repnz
popa
int3
add
mov
mov
stos
add
add
add
lds
add
push
jo
push
add
pop
xor
push
dec
lea
shl
pop
shl
xor
push
push
push
lea
push
lea
push
push
lea
push
call
fildll
filds
add
fldl
mov
pop
icebp
pop
mov
fdivr
add
enter
movsl
add
rcrb
add
push
xchg
jmp
add
stos
ja
js
xchg
addl
call
mov
into
popf
mov
fisubl
cmc
icebp
fsub
int
xlat
nop
fnsave
repnz
rclb
call
add
add
add
add
add
add
movsl
mov
lea
pop
shl
xor
push
add
pop
mov
add
push
push
call
add
add
add
imul
lcall
push
testb
add
add
movsl
test
int
add
add
push
mov
add
add
add
mov
add
add
mov
clc
jbe
pop
jge
jne
fbld
add
add
out
imul
scas
loopne
add
fdivrs
push
mov
lea
pop
pop
push
rol
pop
pop
pop
push
lea
push
lea
push
push
call
mov
xchg
add
ficomps
add
arpl
add
xchg
out
pop
add
mov
add
lods
add
je
add
add
add
add
add
add
add
pop
loope
jns
les
roll
pop
mov
mov
mov
enter
out
add
push
add
stos
mov
std
push
test
mov
pusha
adc
leave
push
push
push
push
call
popf
pop
lret
add
lahf
add
in
std
fildl
add
lahf
add
add
xchg
xchg
lret
mov
roll
add
jecxz
add
pop
add
add
add
in
lock
add
add
add
lds
shll
push
sahf
popa
add
add
add
int
aad
push
add
test
mov
mov
mov
lea
pop
ret
push
mov
push
pop
push
push
pop
push
push
push
xor
sub
pop
push
push
rol
sub
add
rol
pop
mov
push
add
sub
pop
mov
push
push
push
push
push
push
push
call
add
add
fldl
addb
add
movsl
orl
fiadds
add
mov
in
mov
cmpsb
add
jmp
sahf
hlt
xchg
mov
jle
add
add
addb
add
int
add
fs
pop
lret
push
add
pop
xchg
add
add
rolb
add
hlt
rcl
nop
loopne
lods
mov
lea
pop
mov
push
lea
push
push
push
call
pop
mov
add
push
add
popa
add
jnp
add
add
add
mov
add
add
addb
lock
add
add
xchg
add
sahf
push
fldl
add
add
push
mov
js
mov
add
iret
add
add
rol
addr16
add
add
add
test
add
dec
xchg
mov
lods
add
mov
lea
pop
test
je
mov
test
je
push
not
shr
pop
mov
push
lea
push
push
call
jno
add
add
jecxz
nop
faddl
add
add
ljmp
lret
test
add
mov
lret
jl
sti
xchg
push
jp
xchg
into
add
mov
mov
add
sar
arpl
add
add
add
add
add
add
add
lds
mov
mov
shr
mov
out
roll
add
mov
lea
pop
mov
mov
push
not
dec
pop
inc
push
push
push
lea
push
call
clc
int3
xchg
mov
add
cwtl
loop
nop
insb
add
push
iret
call
jmp
jnp
jb
loop
out
add
ja
int3
add
add
add
aad
addb
jns
ljmp
push
mov
jnp
add
add
lds
call
out
add
bnd
mulb
add
mov
lea
add
add
clc
mov
lea
pop
cmp
je
test
je
mov
push
inc
add
pop
inc
cmp
je
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
cltd
lahf
add
popl
add
mov
add
repnz
ret
les
add
loope
add
add
hlt
test
mov
push
add
mov
jbe
add
sti
add
outsl
loope
lret
addr16
pop
xchg
fs
push
add
lahf
aad
jecxz
mov
add
hlt
fildl
xchg
add
outsl
stos
add
add
add
xchg
jo
lahf
xchg
add
loopne
mov
add
pop
test
jne
push
lea
push
push
lea
push
push
push
push
call
push
add
add
out
add
add
jnp
movsl
add
fsubl
jo
add
movb
mov
pop
add
lret
xchg
popa
mov
add
add
add
jle
cmpl
mov
add
add
lods
xchg
add
aad
add
jb
jne
add
mov
add
repnz
add
mov
lea
pop
xor
pop
pop
push
add
add
shl
xor
pop
pop
pop
push
push
push
push
lea
push
push
lea
push
call
jl
add
add
mov
jae
push
popa
add
xchg
jp
mov
add
add
mov
rol
add
test
lods
out
pusha
push
lds
lock
push
outsl
add
add
add
jbe
jae
mov
add
outsl
jp
in
out
jecxz
int
jbe
mov
pop
add
shl
xchg
cld
lea
pop
leave
ret
push
ror
pop
mov
push
rol
rol
pop
inc
cmp
jne
push
inc
add
pop
lea
mov
push
lea
push
push
push
push
call
xchg
add
clc
pop
add
loop
pop
xchg
ja
push
lds
jno
push
add
add
rolb
add
filds
addr16
aam
pop
add
add
ret
repnz
int
in
xchg
add
mov
add
jecxz
clc
jnp
cmc
in
jno
out
add
push
ret
addr16
lahf
sti
add
mov
pop
test
fldl
pop
mov
add
popa
mov
popa
adc
test
je
mov
add
push
push
push
push
push
push
push
push
push
call
add
mov
mov
pop
scas
call
xchg
jp
add
add
add
add
js
add
mov
add
std
jecxz
lock
add
movl
icebp
mov
in
mov
add
add
scas
mov
add
loop
pop
add
add
pusha
xchg
mov
push
add
add
push
add
add
lea
pop
cmp
jne
push
add
pop
mov
push
ror
dec
shr
inc
pop
test
je
push
push
push
push
push
push
push
lea
push
call
filds
jbe
notb
add
mov
mov
nop
jns
add
mov
add
ljmp
add
add
cld
add
pusha
in
roll
rcrb
jb
add
clc
bound
mov
xchg
mov
add
stc
pusha
add
mov
add
pushf
add
lret
aam
add
ficoml
and
callw
push
sbb
push
push
push
push
lea
push
push
push
push
call
add
add
mov
add
add
add
insb
jae
pop
lock
lods
add
add
shrl
add
int
mov
mov
add
nop
add
push
les
roll
mov
loop
jbe
add
mov
add
je
lcall
loop
imul
push
mov
lea
pop
add
push
rol
lea
rol
pop
cmp
je
jmp
xor
push
push
push
push
push
push
call
movb
add
add
add
add
add
leave
fisubrs
add
pop
add
add
cmpb
xchg
mov
jge
je
mov
bound
lods
repnz
xchg
add
add
add
add
push
jne
iret
xchg
out
test
enter
int
jbe
in
mov
pushf
test
cld
lea
pop
pop
push
push
push
call
add
mov
scas
xchg
push
fiaddl
add
add
mov
into
jns
add
add
call
pop
ljmp
bound
lds
loop
add
pop
add
repnz
add
mov
loope
add
pusha
test
jns
add
add
jl
pusha
in
fmull
pop
pop
push
ror
pop
pop
pop
leave
push
rol
pop
ret
lea
push
rol
shl
lea
pop
pop
pop
pop
push
push
push
lea
push
lea
push
push
push
lea
push
call
addl
stos
add
stos
aad
mov
lds
mov
in
mov
jmp
je
push
push
addr16
std
mov
add
add
add
hlt
ret
add
add
shll
testl
idivb
add
add
out
int
pop
js
cmpsl
add
idiv
add
jecxz
not
add
add
mov
les
pop
pop
push
push
push
push
push
push
push
push
push
push
call
push
pusha
imul
cmpsl
add
add
loopne
add
rolb
repnz
add
popa
movsb
add
int
cltd
add
add
add
mov
out
icebp
cwtl
add
out
fstpl
imul
jle
mov
jl
jo
loope
aam
mov
repnz
lahf
into
bound
repnz
add
add
jecxz
add
add
mov
push
pushf
lea
fisttpl
pop
leave
push
lea
pop
ret
push
lea
pop
mov
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
iret
out
addl
add
movsb
mov
add
jbe
add
roll
test
fcmovbe
test
mov
lds
stos
pusha
add
in
int
icebp
add
mov
pop
mov
jmp
add
lea
add
in
popa
add
pushf
addb
in
jl
pop
in
add
pusha
and
pop
push
push
lea
push
push
lea
push
lea
push
push
call
bound
mov
arpl
jp
pusha
add
add
lahf
out
pop
mov
jle
cli
lcall
add
sar
pop
test
add
pusha
push
add
add
mov
jl
jnp
stos
push
lock
aam
ja
mov
arpl
ja
outsl
add
push
add
mov
mov
add
mov
lea
pop
pop
leave
push
lea
push
push
push
push
push
push
push
push
call
cli
pop
pop
add
add
repnz
stos
push
test
into
add
add
scas
push
mov
pusha
out
add
add
rcll
fbld
decb
add
add
cltd
jmp
into
add
add
xchg
fs
add
add
cmc
fiadds
flds
aam
bound
ret
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
pop
add
movl
add
xchg
mov
add
add
testl
push
xchg
nop
add
jle
push
loopne
mov
add
pushf
add
cwtl
lods
addl
add
mov
icebp
aad
add
pop
int3
add
clc
add
in
movb
movsl
push
add
out
test
mov
lea
pop
rol
push
push
push
lea
push
push
push
push
lea
push
push
call
cltd
add
lret
add
fldcw
add
add
testb
cmpsb
in
xchg
lret
xchg
repnz
add
add
add
out
fiaddl
aam
mov
add
add
arpl
sti
mov
mov
add
out
iret
cmc
test
fcompl
roll
push
add
xchg
fadds
out
add
add
enter
lea
pop
rol
push
xor
rol
dec
pop
xor
push
add
xor
dec
pop
inc
cmpb
jne
push
lea
shr
lea
pop
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
andl
sti
mov
mov
sti
movsb
sub
sti
and
mov
add
shl
lds
loope
rorb
mov
push
xor
mov
pop
fimuls
xor
and
jmp
aad
test
sbb
les
cmc
int3
rol
nop
push
adc
std
mov
les
pop
stc
les
pop
int
data16
mov
mov
sub
fnstsw
push
pop
fstps
mov
sbb
shlb
sbb
cs
ds
aaa
xor
xchg
cmc
xor
rcll
cltd
lret
insb
aam
sub
push
xchg
stc
mov
sub
loop
nop
push
sub
and
mov
jg
mov
xchg
loope
mov
dec
je
push
add
mov
adc
mov
loopne
and
dec
and
arpl
mov
inc
movsl
dec
aad
or
mov
jecxz
gs
das
sub
enter
add
not
imulb
fmuls
hlt
pop
sbb
mov
and
fnstsw
xor
xchg
lods
jmp
lret
pop
and
shlb
sbb
lods
add
jg
pop
push
das
dec
xchg
jb
outsb
jecxz
xor
popf
add
mov
mov
leave
sub
sub
fisttpll
xchg
xchg
xlat
add
jns
push
jle
cmp
clc
arpl
cltd
popf
mov
jp
adc
in
sub
shrb
ret
mov
neg
testb
or
shll
sarl
mov
xor
xchg
inc
dec
xchg
push
cs
lods
xacquire
es
clc
fidivl
mov
rclb
fprem1
sub
push
in
pop
cmp
cmp
je
jns
arpl
lods
in
dec
sub
or
fnstcw
push
jmp
and
cmp
add
rolb
jle
cmp
dec
imull
push
stos
lret
stc
mov
fwait
mov
sub
mov
mov
sub
cmpb
test
rolb
mov
or
sarb
hlt
lods
js
imul
out
out
pop
scas
rcl
cmp
or
enter
xor
out
mov
xor
je
ljmp
xchg
rol
cld
jns
incb
scas
mov
in
call
sub
add
cwtl
insl
pop
insb
stos
fldt
push
mov
in
jne
pop
xor
rclb
sbb
xchg
adc
adc
pop
and
cmc
adc
mov
xchg
outsb
popf
lret
lods
dec
xchg
pop
jb
gs
push
fadds
dec
cmp
mov
pop
pop
les
cld
fdivs
lock
cmp
cmpsb
insl
in
in
ss
int
or
xabort
ljmp
andl
insl
mov
dec
xor
cmpsb
lret
aad
and
insb
in
aaa
mov
mov
movsl
enter
adc
pminsw
ljmp
xchg
jle
movsl
sbb
jle
push
add
inc
jbe
mov
loope
in
outsl
repnz
add
xor
iret
aas
fisubs
add
out
fsubp
ja
xchg
rcr
in
frstor
cmpb
lret
aad
mov
dec
mov
test
aas
xor
mov
sbb
movsb
pushf
mov
mov
cmp
push
mov
cmpsb
insb
inc
lods
pop
sbb
in
add
or
or
les
shl
fs
mov
data16
fstpl
repnz
jnp
into
scas
lahf
push
fwait
mov
testb
cmpsl
outsb
xchg
push
cwtl
call
lea
test
cli
ret
xor
sar
in
xorb
mov
jnp
cmp
imul
adc
sub
dec
xor
arpl
inc
xor
fcompp
cmp
xchg
test
xchg
xor
mov
pop
fwait
scas
movsb
mov
inc
jbe
lea
and
push
jae
jne
ljmp
and
xchg
fs
cs
in
dec
lods
out
sub
test
or
jge
xor
ret
cmpsb
repnz
aad
jle
imul
mov
sub
movsl
leave
pop
ja
mov
dec
adc
loopne
add
cmp
sub
inc
cld
ja
arpl
ficoms
mov
add
mov
andb
insb
dec
jl
sub
fdecstp
add
subb
scas
mov
jbe
mov
mov
mov
fldl
cmp
inc
push
push
test
loop
pop
push
arpl
je
xchg
dec
cmp
or
sbb
inc
gs
pop
xor
push
cmpsl
sar
inc
pop
imul
cs
sub
sub
jnp
xor
xlat
xchg
mov
popa
jp
adc
jns
pop
push
adc
xor
sub
jns
adcb
pushf
dec
aam
push
xor
mov
lock
es
test
dec
pop
inc
stc
out
addb
aaa
dec
and
in
inc
scas
adc
jns
xchg
sub
and
mov
pop
into
mov
fwait
sarb
sarl
lock
stos
aam
int
and
add
mov
outsl
mov
fdivrs
push
lahf
rorl
addr16
lcall
int3
jp
iret
mov
shll
daa
int
and
fdivrl
movsl
dec
pop
mov
dec
inc
jle
movsl
popa
hlt
add
fisubs
imul
cmp
jb
mov
dec
mov
dec
sbb
mov
test
inc
xor
pop
pop
lret
xchg
leave
add
add
cmp
mov
inc
mov
or
push
daa
xor
mov
pop
mov
mov
movsb
movsb
jge
inc
xchg
cltd
mov
les
sub
fdivrs
adc
lds
aad
push
lods
clc
inc
dec
jo
push
movq
lods
in
add
cmp
xchg
push
shl
cmpsb
pushf
cmpsb
jb
loope
sub
popa
nop
iret
dec
xor
pop
in
les
sbb
xchg
je
je
push
pop
rcll
sti
pop
sti
int3
gs
push
sbb
push
packuswb
test
mov
pop
jp
adc
xor
int
jle,pt
add
repnz
in
jle
cmp
test
test
cltd
stc
inc
ret
test
cmp
cmp
or
mov
sbb
out
addb
push
sub
or
addb
roll
outsl
idivb
xchg
jnp
in
and
test
je
mov
inc
mov
xchg
jbe
xchg
mov
mov
adc
jp
jae
cmp
mov
pop
sbb
pop
mov
sti
fsubrl
xor
lret
fwait
test
je
push
mov
iret
pop
ss
xor
fmull
or
mov
inc
add
call
cmp
rcrb
outsb
jbe
jecxz
jb
push
into
daa
fdivs
popa
cmpsb
jecxz
mov
pop
testb
push
fisttpl
out
sub
outsl
popl
shrl
inc
aam
es
inc
push
and
mov
xchg
push
cmp
aas
and
fsubs
push
pusha
sbb
or
mulb
outsb
xchg
jnp
fidivrl
mov
dec
test
mov
sub
cmp
imul
or
adc
mov
pop
ljmp
cmp
or
mov
hlt
xchg
mov
cmc
divl
fnstcw
pop
call
fsubl
fsts
jle
push
orl
push
sbb
popa
jmp
mov
push
sub
outsl
out
arpl
ss
outsl
adc
or
rol
in
dec
in
push
addr16
jge
clc
in
lods
fstpl
inc
inc
sahf
push
inc
push
pop
mov
adc
mov
lret
in
xor
jg
add
outsl
or
scas
gs
lahf
int
or
xchg
repnz
dec
and
bound
mov
mov
int
lock
rclb
lods
imul
aas
mov
xchg
enter
pop
pop
cs
test
fldl
cwtl
xchg
and
enter
jo
xchg
push
adc
test
cmp
mov
rep
fildll
jae
daa
fdivl
jae
cmp
push
scas
and
inc
divb
adc
fcoms
sbb
int3
cmpsb
nop
push
xchg
aas
mov
loop
cmp
and
and
pshufd
arpl
shll
in
mov
adc
adc
lret
arpl
sub
test
movsl
cltd
pop
or
xor
sbb
xor
mov
push
data16
xor
pop
and
shll
jnp
lds
les
mov
stc
sub
ss
mov
adc
andb
xlat
mov
xlat
and
push
pop
lcall
outsb
pop
ljmp
fiadds
push
cmpsb
shll
shl
jmp
sub
jp
and
out
ljmp
add
and
orb
pop
jbe
ror
pop
mov
push
hlt
push
lret
std
dec
push
xchg
notl
inc
rorb
mov
popa
das
mov
outsb
xor
pop
testb
adc
and
repnz
leave
nop
loopne
daa
test
fildl
mov
call
dec
mov
std
or
add
xor
xor
fistl
insl
insb
in
sti
jo
jmp
imul
frstor
lds
add
ja
shrl
icebp
roll
dec
pushf
sbb
push
mov
sub
mov
rorb
xchg
ja
adcb
mov
push
cmp
dec
fdivrp
aad
roll
mov
cli
pop
push
adc
shrb
cltd
pop
dec
pop
lods
cmp
add
lock
jb
outsl
push
sub
push
cltd
popa
out
iret
xlat
mov
pop
lods
jno
inc
gs
sbb
pop
cli
test
shlb
cmp
xchg
dec
in
xor
or
push
lcall
lods
push
ja
mov
iret
inc
mov
lret
xor
mov
inc
clc
mov
push
es
dec
out
and
rcrb
mov
fcmovnu
nop
scas
pushf
push
int3
mov
rcrb
out
rorl
outsb
lret
or
mov
pop
sub
loopne,pt
into
mov
loop
push
dec
cmp
push
ss
push
and
dec
or
movsb
sub
mov
sbb
cli
dec
outsl
outsb
cwtl
and
sbb
sub
jnp
sbb
xchg
push
ljmp
or
out
xchg
cmp
or
sahf
pop
int
mov
lock
lods
in
sbbl
sti
push
scas
stc
mov
inc
rcll
cmp
daa
stc
inc
mov
pushf
std
pop
rcll
and
jp
fs
or
leave
cmpsl
testb
rorl
pop
cmpsb
sbb
stos
stos
into
or
rolb
sbb
mov
insb
or
test
mov
scas
and
dec
and
mov
sbb
xlat
push
xchg
cmp
xchg
arpl
cmp
dec
adc
sub
and
fadds
xor
mov
imul
mov
push
lods
into
xchg
cmpsb
mov
ret
inc
fistps
mov
or
rcr
shl
mov
test
jge
imul
xchg
testb
int3
push
pop
iret
nop
sarb
out
mov
nop
dec
popf
scas
outsl
push
or
lods
cs
or
stc
lods
insl
and
shrb
ja
outsl
loope
pop
mull
xor
jecxz
mov
mov
adc
adc
lods
lcall
out
push
fnstsw
popf
or
inc
mov
lret
jecxz
adc
dec
and
sbb
and
mov
lods
ss
push
dec
mov
mov
aaa
inc
in
cmp
cmpsb
inc
jb
pop
lcall
jmp
popl
gs
xor
adc
stos
jbe
cmp
jl
aaa
add
dec
fisttpll
shl
pop
in
mov
inc
fildl
mov
push
add
in
push
cmp
push
mov
repnz
inc
sub
xchg
push
mov
jb
pusha
jle
mov
mov
xlat
hlt
adcb
xchg
xor
pushf
pop
lahf
push
ret
xchg
inc
add
push
ret
push
jg
clc
sbb
mov
fwait
jp
jnp
scas
stos
xchg
jecxz
dec
in
mov
cmp
insb
test
outsb
inc
iret
pop
flds
arpl
pop
roll
jbe
outsb
jmp
or
notl
mov
cmp
out
movsb
sbb
jno
int3
inc
dec
mov
js
mov
sub
sub
gs
or
mov
fldcw
mov
cmp
aad
pop
int
mov
fs
mov
clc
or
aas
or
or
loop
mov
xor
shrl
ret
popa
pop
aaa
lock
and
enter
cld
rcr
lea
mov
cmc
ficompl
mov
xor
sbb
gs
mov
jo
sub
enter
xchg
movl
push
add
push
mov
in
push
pop
idivb
pop
loop
inc
and
cltd
leave
mov
sub
jmp
cmpsb
sbb
lret
lahf
jb
or
pop
xor
xchg
imul
cmp
mov
add
imul
dec
pop
dec
push
push
ss
negl
dec
push
mov
jp
push
jecxz
pop
dec
lea
rorl
test
std
pop
jmp
push
jns
dec
sbb
and
jne
es
das
push
pop
es
in
andl
mov
nop
jae
cmp
gs
push
mov
and
sub
adc
fbstp
and
fldcw
or
mov
push
imull
rcll
xchg
inc
fdivs
gs
into
movd
lds
mov
ret
cmpsl
dec
dec
aaa
mov
inc
inc
dec
xor
mov
out
scas
cmp
popa
xor
es
cmp
scas
pop
inc
cwtl
and
adc
push
je
arpl
jae
inc
mov
pop
xchg
fs
das
mov
push
sub
scas
shll
hlt
dec
xchg
fs
adcl
dec
mov
mov
mov
or
push
sbb
mov
pop
dec
fwait
mov
stc
xchg
and
jno
arpl
nop
or
aaa
std
and
sarl
jb
imul
adc
jecxz
xchg
pop
jp
stos
xchg
ds
dec
sbb
jp
out
and
insb
cwtl
repz
cmc
xor
outsb
mov
adc
cmp
push
dec
pop
and
inc
in
es
loop
js
mov
xchg
cmp
sbb
mov
inc
lret
push
mov
pop
test
cwtl
mov
sub
stc
lret
push
mov
adc
xor
mov
and
popf
fwait
out
lock
je
adc
mov
xor
testl
movsb
cmp
sbb
cmpxchg
add
or
push
push
add
std
mov
push
add
push
jecxz
in
or
add
data16
outsl
decb
pop
mov
sbb
lods
aam
cmp
mov
sbb
cli
int3
push
popl
dec
je
test
je
fadd
xchg
rcll
inc
aas
call
fnstsw
push
cmpl
sti
in
or
mov
and
dec
sti
pop
or
cmp
add
stos
push
sub
push
mov
pop
addr16
test
std
cli
jo
in
inc
fistps
std
outsb
mov
ret
ret
mov
fiadds
pop
pusha
je
lock
mov
leave
cmp
pop
adc
sub
rolb
sbb
cli
mov
lods
je
push
mov
jbe
int3
call
addr16
mov
or
loope
fnstcw
in
imul
shl
lcall
shlb
cs
fs
xor
mov
or
pop
ss
int3
push
adc
jl
push
ret
fbld
add
jnp
iret
xchg
mov
ret
test
idivl
dec
jecxz
xchg
addr16
or
xor
leave
fsubrl
add
into
mov
mov
push
ljmp
fsubl
leave
dec
sub
xor
inc
mov
loope
mov
sub
push
xor
cmc
add
pop
pop
mov
lret
push
jge
xchg
dec
sub
int3
adc
mov
mov
scas
mov
xor
test
repnz
adc
cmp
test
or
test
popa
into
negb
int
jae
rorl
scas
adc
mov
fisttpll
dec
les
sub
and
test
push
sub
popf
stos
inc
stc
outsl
mov
xchg
sarl
movsl
orl
imul
mov
in
inc
mov
fistpll
lods
lods
out
or
movsb
lcall
push
adc
lahf
or
dec
cmp
sbb
mov
aas
adc
dec
loop
inc
sahf
int3
and
aad
dec
sub
cmc
pop
xor
sets
xor
inc
push
inc
cltd
push
inc
xchg
mov
push
mov
das
lret
in
mov
aaa
add
rcrl
cli
push
rolb
adc
sbb
pop
pusha
sarb
aaa
rcl
ret
cmpsl
insb
push
xor
add
add
incb
jbe
sahf
mov
sub
movsl
int3
je
ja
outsl
push
mov
jb
adc
sbb
sub
cltd
fmul
sar
jb
inc
insl
sti
outsl
sub
mov
mov
cmp
insb
pusha
data16
pushf
inc
mov
mov
and
cmp
mov
iret
fwait
movsb
shr
pop
loop
sub
mov
imull
fcoml
mov
and
jmp
fildll
jnp
pop
xor
es
mov
lret
mov
cmp
pop
and
mov
outsl
cmc
outsb
cmpl
gs
pusha
sbb
adc
add
hlt
sti
inc
mov
xchg
out
es
mov
jb
cmpsb
or
push
pop
add
and
inc
mov
dec
scas
add
mov
es
icebp
jb
xor
inc
sub
mov
xor
jecxz
cmp
adc
rcr
out
loope
pop
xchg
test
imul
adc
add
aad
xchg
push
sbb
mov
inc
popf
cmc
hlt
and
fbld
adc
or
imul
xchg
pop
shrl
mov
adc
in
jp
mov
mov
jge
pop
div
aas
js
add
or
pusha
sub
or
js
inc
mov
sar
fildll
adc
es
bound
adc
test
sbb
negl
daa
addr16
jl
stos
es
mov
jmp
push
dec
sub
push
inc
or
das
shrl
push
push
ds
add
or
cvtpi2ps
jl
cs
mov
cmp
loopne
imul
mov
inc
sbb
adc
mov
dec
or
es
pop
int3
xorl
pop
xor
popa
hlt
push
push
inc
adc
push
ljmp
es
cmc
mov
dec
mov
std
fld
xchg
pusha
or
push
ljmp
dec
mov
stc
fs
sub
pop
add
mov
pop
out
jns
push
mov
jl
lods
rclb
mov
inc
jp
jmp
xchg
stos
leave
movl
cwtl
outsl
inc
add
push
fmuls
in
fistl
inc
insb
push
insl
mov
push
jp
jp
inc
pop
sbb
repnz
mov
fsubl
jl
xchg
dec
stc
stos
mov
inc
clc
es
and
push
dec
sbbl
xorb
mov
xor
test
subb
fst
outsl
or
inc
fisubrl
pop
jae
xchg
paddsb
in
jg
cld
int3
and
dec
dec
repnz
dec
shl
shrb
aam
jo
push
mov
xor
call
sbb
lcall
and
mov
cltd
add
into
cli
subl
cs
jno
mov
push
jmp
inc
mov
push
jae
push
pop
sub
jp
push
dec
sbb
cmp
or
lret
ret
xchg
cmpb
mov
fsubrs
inc
inc
mov
mov
dec
out
rcl
cmp
adc
mov
mov
test
int3
pop
push
cmc
xor
shl
xchg
push
mov
push
mov
inc
movsb
inc
aam
sub
push
push
hlt
mov
sbb
pushf
pop
ret
lods
repnz
push
mov
sbb
test
cmc
test
mov
add
ss
or
into
int
and
cmp
push
xchg
pop
addr16
inc
mov
sbb
xor
fwait
rcrl
loop
sub
mov
aas
out
lret
jp
inc
pop
mov
ficomps
mov
movsb
pop
jne
scas
jg
inc
lcall
jns
add
dec
popf
rolb
cmp
jae
or
or
scas
in
xchg
mov
lret
dec
or
and
fsubl
add
cmp
mov
insb
adcl
lret
hlt
cmp
incb
lods
rdtsc
add
xchg
orb
pop
or
and
and
stos
inc
incb
cmp
and
fcmovbe
stos
insb
cmp
add
dec
dec
jne
fcmovbe
xor
loopne
test
mov
insb
sbb
outsb
sbb
imul
jne
inc
xchg
jno
out
inc
repz
mov
dec
rorb
cmp
test
mov
jecxz
mov
sbb
not
mov
ret
push
cmpsb
ljmp
ret
inc
xchg
stos
mov
sti
les
jge
jg
leave
sub
sbb
ret
in
mov
lret
nop
push
adcl
mul
pop
leave
adc
pop
and
dec
stos
adc
cmp
faddl
cmp
adc
cmp
xchg
sub
xor
cmpsl
mov
cmp
out
inc
or
mov
jns
fsubs
scas
pusha
nop
aas
sahf
ja
jns
test
mov
inc
and
stos
lea
dec
sbb
movsb
outsl
push
or
xchg
fs
xor
popa
rdpmc
cmp
outsb
pusha
sub
jp
or
adc
mov
and
jbe
movsl
inc
stos
pop
pop
push
sub
cmp
and
push
jg
and
dec
lds
inc
inc
push
test
jno
add
ret
lea
aam
sti
xlat
sub
dec
rol
iret
aam
in
imul
push
cmp
fst
mov
jecxz
ja
xchg
sbb
mov
leave
aaa
add
dec
and
leave
cmp
lds
cli
xchg
xchg
cmp
adc
pop
jnp
movsb
inc
mov
popa
mov
iret
jmp
fcmovnb
jge
xor
in
push
scas
arpl
sub
pop
mov
dec
pusha
mov
lods
sub
sub
je
sbb
cmp
fdivrs
and
outsb
test
mov
add
xchg
xchg
xor
mov
aas
ds
test
xlat
xchg
pop
shlb
lods
das
gs
xor
addr16
and
mov
ret
or
dec
mov
pop
and
dec
pop
and
rol
stos
fcmovnu
outsb
test
insb
imul
or
mov
pop
and
movsl
test
mov
insl
data16
lret
xchg
outsl
or
cmpsl
cmp
inc
sbb
incl
movsl
dec
insl
sub
mov
adc
jmp
sbb
mov
bound
dec
push
out
insb
loope
inc
pop
jbe
pop
lock
into
ljmp
rcrl
lock
data16
push
sub
push
pop
dec
pop
enter
pop
mov
test
in
push
and
xor
aaa
cmp
mov
push
push
pop
movsl
and
sub
pusha
xor
sbb
push
push
je
pop
mov
iret
cmp
sbb
cmp
xchg
mov
mov
push
es
daa
pop
jnp
cmp
pop
fbstp
cmp
pop
sbb
mov
jl
sub
es
sarl
fsubrl
lods
ss
mov
xchg
xor
mov
fists
push
rcrl
add
std
pop
pop
jo
fsubrs
inc
aaa
push
inc
test
or
xchg
jle
insl
cld
fldl2t
aaa
jmp
dec
cmp
rol
inc
lret
mov
scas
movsl
cmpsb
repz
aad
or
add
xchg
xor
add
mov
adc
bound
repz
inc
and
loop
cwtl
and
adc
mov
fsubrl
in
das
cmp
subb
fisubrs
add
dec
test
loopne
stos
adc
pop
fwait
sti
fcompl
push
pop
mulb
stos
mov
or
adc
ds
and
out
bound
xor
inc
popa
or
out
or
or
mov
jne
es
push
pop
sbb
or
rcrl
pop
push
andb
repz
sub
cmp
mov
push
dec
je
cltd
lret
push
out
shl
pop
lahf
stos
in
movsb
shlb
mov
pop
cltd
pop
shrl
jbe
dec
add
cs
mov
xor
sub
jbe
sbb
popa
mov
test
and
push
pushf
push
inc
or
add
pop
in
adcl
mov
cmpsl
mov
dec
outsl
mov
mov
pop
cmp
popf
pop
rcrl
sub
outsl
sub
hlt
cmp
jmp
push
adc
rclb
pop
pop
inc
inc
fists
jmp
rol
xchg
jmp
in
inc
adcl
loop
xor
or
push
sub
mov
jg
push
inc
mov
lahf
ret
mov
xor
icebp
rorl
fs
sti
dec
int3
stos
xchg
push
xchg
leave
clc
or
mov
pop
repz
cmp
push
and
xchg
jmp
pop
inc
adc
fnstenv
or
popa
jge
movsb
mov
sbb
xchg
xchg
dec
mov
mov
loope
push
sbb
cmp
rorl
sbb
jmp
pop
cld
insl
add
mov
or
imul
mov
or
sbbl
mov
add
out
shrb
leave
nop
add
pop
inc
vmovdqu
cmpsb
xchg
enter
mov
int
dec
repz
push
sub
fsubrl
mov
push
xor
repnz
adc
stos
jno
fldcw
sub
xchg
sarl
outsl
push
xchg
push
pop
negl
dec
insb
or
cld
add
andl
pop
push
push
stc
push
dec
lods
loope
xor
mov
loop
ja
mov
push
pusha
fsubrs
dec
data16
fiaddl
aam
sti
or
add
or
out
mov
inc
adcb
inc
les
int
fsubl
xchg
imul
adc
fsubrs
in
out
mov
test
and
sub
sub
mov
lret
sub
mov
les
sub
sbb
pop
ds
movsl
push
push
popf
fcoms
xor
fisubl
cs
movb
cmp
xor
pop
ljmp
adc
shr
push
loop
add
mov
sbb
cmp
shll
test
dec
adc
adc
jecxz
xor
cmp
cmpsb
popa
or
mov
out
scas
mov
in
mov
in
cli
test
gs
scas
xor
data16
scas
push
stos
inc
sbb
data16
int
mov
imulb
popf
stos
movsb
xchg
inc
mov
dec
repnz
dec
in
sub
cmpb
jmp
inc
or
mov
jge
repz
dec
out
jecxz
sti
push
mov
dec
cli
xchg
jle
movsl
aas
enter
pop
jo
dec
fiadds
lods
scas
dec
leave
sub
jecxz
jl
testl
in
cs
test
sahf
cli
cltd
insl
call
sub
or
scas
dec
push
mov
mov
and
sahf
add
xchg
adc
cs
or
pop
imul
mov
fcmovbe
jo
pop
xchg
cmpsl
xchg
jb
mov
sub
adc
fcom
add
addb
inc
test
dec
jb
rorb
mov
adc
pop
inc
mov
ret
sub
popf
or
imul
fistl
call
stos
xchg
pop
lret
add
sub
mov
aas
rolb
jg
daa
jbe
dec
sbb
inc
sbb
jbe
ds
xchg
mov
sbb
mov
pusha
movsb
vhsubps
mov
or
lret
inc
popf
movsb
decl
push
sbb
mov
jl
push
sub
cmpsb
cli
fidivrl
call
scas
inc
outsb
and
pop
sub
mov
jle
lcall
das
popa
cltd
adc
ds
arpl
loope
out
fsubrs
outsb
cld
repz
lds
sbb
add
mov
leave
pop
xchg
push
ljmp
inc
dec
mov
in
mov
cmp
xor
call
je
and
or
popf
pop
ds
mov
pushf
xchg
pop
lods
and
cmc
push
test
push
mov
and
test
jns
addr16
xchg
out
pop
xchg
arpl
mov
pop
arpl
mov
adc
jb
sbb
mov
cmp
adc
cmp
ljmp
or
cmp
cwtl
push
cmp
xor
mov
pop
int3
hlt
mov
sub
cli
jb
jge
xchg
mov
cmp
std
hlt
mov
add
cmp
xor
sar
push
push
cmp
mov
sahf
dec
mov
add
cmp
cmp
cwtl
xchg
scas
adc
call
aaa
pop
jge
jecxz
jne
int3
sbb
xchg
mov
test
and
mov
test
push
loope
mov
mov
mov
sub
xor
sub
aaa
cmp
push
or
clc
js
sbb
dec
andl
push
jmp
push
stos
sbb
incl
test
sbb
outsl
fsts
jnp
loope
roll
push
xchg
pop
ret
cmpb
pop
ficoml
xchg
or
jbe
stos
mov
lods
sub
xchg
shr
in
repnz
int3
adcb
add
pop
pop
sti
add
jecxz
dec
jg
out
ss
xchg
mov
je
mov
mov
roll
movsl
add
dec
push
mov
cli
cmpsb
sti
cmp
sbb
aas
shll
xchg
sbb
dec
push
pop
mov
dec
subb
dec
and
cli
cmpl
adc
loopne
or
ficompl
in
clc
adc
inc
and
jp
sbb
jle
sahf
lock
add
fsub
mov
movsl
xor
mov
lds
mov
sbbb
sub
or
cmc
xchg
jnp
out
popa
movsb
inc
push
and
ret
sahf
loopne
mov
enter
andl
outsl
jbe
ss
ret
lods
xor
les
fdiv
xchg
sub
cmc
pop
xchg
sub
imull
or
jbe
mov
sahf
mov
or
or
dec
roll
outsl
call
push
or
pop
in
or
data16
lods
dec
push
xchg
cmpsb
push
xchg
xor
xor
sbb
lods
sub
ret
xor
mov
ret
xchg
adc
dec
cmp
insl
mov
or
cwtl
inc
lods
or
mov
es
xchg
or
and
call
test
cmp
dec
ja
xchg
shr
mov
cmp
scas
or
stos
jbe
cmp
fsts
movl
mov
mov
lcall
incb
jle
addl
jecxz
fdivp
loope
xchg
das
orl
fmull
mov
add
mov
div
bound
push
pusha
lock
and
adc
insb
insb
jecxz
or
pop
faddp
fdivs
scas
cmp
pop
xor
mov
push
add
push
arpl
mov
jo
dec
lret
pop
out
push
xor
test
lock
loop
xchg
test
push
es
mov
mov
js
fs
sub
out
xchg
mov
xorl
aad
ss
lods
dec
dec
lcall
mov
dec
repz
scas
mov
inc
test
aaa
ljmp
add
cmp
cltd
or
aas
in
je
mov
ja
mov
arpl
mov
adc
inc
add
in
xor
dec
stc
in
mov
je
pop
cs
jnp
scas
push
repz
faddl
mov
cmp
xlat
mov
ljmp
stc
out
shrl
pop
jecxz
inc
mov
inc
xor
sbbb
push
loopne
rcll
jp
push
movsl
call
sub
xor
mov
and
dec
scas
sbb
mov
push
js
mov
push
test
popa
inc
test
cs
insb
cmpb
sti
adc
stc
gs
fwait
pusha
shr
cld
sbb
mov
shrb
mov
dec
sub
mov
dec
xor
push
mov
adc
addr16
insl
push
pop
addr16
cmp
mov
or
repz
and
out
mov
sarl
out
imul
mov
dec
dec
cmp
insl
sub
add
push
mov
ret
mov
lods
sarl
add
pop
push
sub
jo
popa
inc
xor
ds
xchg
sti
pop
sub
and
ret
sbb
push
inc
movsl
jno
inc
cmp
sbb
scas
pop
jb
push
scas
inc
xchg
fidivrl
gs
sbb
cld
ret
pushf
mov
outsb
inc
pop
adc
test
jmp
cmp
aad
adc
mov
push
mov
gs
or
adc
push
or
stos
push
jno
in
addb
lea
scas
inc
std
sub
jbe
aam
or
outsb
shl
inc
outsb
pop
inc
idivl
in
cmp
push
mov
stos
sbb
ljmp
inc
mov
xchg
lcall
mov
in
in
jne
or
cltd
fsubrs
jecxz
cmpsb
adc
test
test
loop
outsb
dec
inc
xor
push
cmp
mov
mov
das
inc
mov
arpl
mov
jecxz
lds
mov
mov
push
pop
adc
test
xor
push
dec
jbe
xor
stc
inc
xchg
and
xchg
stc
or
mov
out
mov
inc
std
xchg
push
fsubs
mov
push
lds
lret
ja
jo
loope
les
push
mov
and
leave
and
pop
pop
ficompl
mov
outsl
dec
out
pop
imul
insl
gs
dec
inc
push
data16
xchg
and
je
pop
adc
les
xchg
sbb
or
mov
xchg
shl
pop
lds
ss
mov
jmp
sbb
adc
push
shlb
lcall
aaa
outsl
pop
cwtl
out
dec
pusha
rorl
sbb
add
jecxz
dec
mov
inc
call
stos
mov
sub
roll
mov
sahf
stos
testb
mov
or
jb
add
and
test
mov
fs
imul
cli
lret
ror
jecxz
repnz
xchg
adc
ror
adc
ja
data16
lock
or
mov
loopne
jp
scas
test
jmp
mov
jo
mov
test
add
adc
add
dec
fdivrl
lods
fs
movsl
pop
xor
loop
cmpsb
popa
in
pop
imul
dec
out
divb
fistps
scas
aad
jae
inc
cmc
cmp
shll
out
and
xchg
xchg
and
sbb
shlb
sub
aas
cld
xlat
adc
xlat
inc
inc
shrb
arpl
push
pop
jle
cmp
lock
mov
test
jae
imul
repnz
fdivrl
mov
std
xor
mov
or
mov
fwait
inc
sub
movsl
int
inc
lds
add
jge
lods
cs
adc
mov
lods
mov
xorb
add
pop
add
sbb
jbe
shr
mov
dec
or
testb
dec
rcl
cltd
push
popf
pop
aam
sub
addr16
pop
scas
or
stos
std
pop
inc
fisubs
sbb
cmpsb
pop
bound
mov
fldt
cmc
xchg
ret
sti
pop
repz
sbb
cmpsb
cmp
in
out
xchg
mov
or
ds
outsb
dec
push
iret
faddl
outsb
sub
rep
xor
cmp
mov
stos
lods
and
popa
aad
pop
pop
outsb
xchg
cmp
mov
add
jle
iret
lods
adc
loop
or
fwait
pop
xchg
das
jg
cmp
xchg
iret
mov
mov
cltd
out
push
or
sbb
test
in
lds
movsl
add
mov
fmul
adcl
inc
insb
add
xor
or
clc
xlat
jmp
xorb
pop
pop
imul
mov
jmp
mov
lahf
fwait
jp
dec
test
pop
cmp
jb
mov
outsl
push
js
std
sub
mov
dec
dec
sub
fucom
xor
lods
cmp
rcl
outsl
out
jae
add
mov
push
push
mov
fwait
cld
mov
dec
mov
and
ffree
lea
aad
jg
imul
inc
dec
or
insl
mov
and
mov
adc
push
daa
or
mov
out
cmp
sbbb
lret
shlb
aad
sub
call
adc
mov
and
push
add
das
andl
loop
mov
and
enter
xchg
mov
test
fldl
imul
imul
call
aaa
outsl
fldt
popa
pop
add
and
adc
cmp
sbb
lock
add
aad
push
jnp
xor
arpl
sub
ja
popf
test
sbb
or
sub
loope
xor
cmpsl
daa
outsb
xchg
xchg
pop
mov
mov
push
out
pop
pushf
enter
dec
enter
push
push
out
in
gs
fwait
je
adc
aas
lahf
jb
cmp
sub
lret
push
das
loope
or
fwait
insb
int
lcall
pop
pop
test
insb
pop
jb
addr16
sbb
and
enter
mov
addr16
xor
sbb
out
out
ljmp
cs
outsb
inc
cltd
scas
popa
call
sub
rorb
sub
cltd
addr16
push
cmp
dec
or
inc
xor
pop
inc
fnstcw
and
and
in
add
mov
adc
andb
add
cmp
adc
call
mov
jo
jge
sahf
push
lock
iret
mov
push
sub
dec
inc
jmp
inc
cmp
ret
dec
into
cs
inc
xchg
mov
dec
xchg
mov
popf
movsl
sbb
test
adc
jno
add
in
push
fwait
hlt
rcrb
gs
sbb
ss
ljmp
test
or
mov
test
add
in
jmp
jmp
mov
mov
push
movhps
jae
cmpsl
pop
inc
push
daa
sub
xchg
sub
or
into
ljmp
or
sub
pusha
and
xchg
adc
aaa
shll
sbb
xchg
dec
lea
and
add
dec
dec
fstl
mov
int3
and
jae
popf
shrl
sub
das
or
ret
sbb
cmpsb
push
xchg
imul
in
out
stos
movsl
inc
fwait
xor
sbb
pop
sub
xlat
insl
jae
sbbl
mov
aad
outsb
ret
inc
cs
sti
and
jb
jb
mov
push
neg
in
mov
sbb
leave
mov
dec
andb
dec
rorl
je
jbe
imul
data16
mov
sbb
jmp
cmpsb
out
xor
outsl
cmp
ljmp
jno
ss
jns
scas
or
les
xchg
pop
daa
std
out
out
rorl
sub
loopne
dec
shrb
lret
mov
pusha
in
push
mov
movsb
lods
lret
fdivl
scas
ss
std
add
cld
jnp
or
in
mov
sbb
nop
lret
lcall
or
sub
sub
dec
jle
sub
or
and
sub
shlb
push
sub
lds
cmp
in
inc
mov
cmp
cmp
mov
int
and
or
lcall
inc
cmpsl
shll
inc
lret
jmp
jmp
pop
lret
test
mov
jae
lret
or
pusha
lds
fists
stos
mov
fistps
pop
pop
shrl
mov
and
mov
mov
push
ljmp
scas
in
arpl
jmp
lret
ret
in
ss
mov
loope
pusha
jb
sbb
fnstenv
cmp
xchg
stc
add
xor
xchg
pop
or
cvtpi2ps
dec
xor
enter
fcomi
mov
clc
leave
add
int
or
clc
sbb
scas
cmpsb
push
inc
lahf
push
jno
repnz
dec
outsb
hlt
stos
popf
fstpl
push
or
movsb
shlb
push
inc
push
inc
dec
dec
cmp
jo
cmp
lds
mov
fwait
add
cvtpi2ps
adc
int
hlt
daa
test
inc
in
and
loopne
inc
popf
mov
jp
mov
sbb
stos
cld
sar
outsl
mov
add
fcoml
popa
loope
repnz
pop
fistpll
add
sub
xor
pop
pop
mov
push
sbb
clc
jae
les
lock
outsb
hlt
mov
push
daa
xchg
or
shr
cwtl
dec
add
sub
pop
push
out
mov
and
sub
in
out
push
inc
jbe
mov
lret
loopew
xchg
inc
jae
or
loopne
fbld
movsl
mov
lds
cmp
jno
adc
cmp
lahf
cmp
daa
sbb
loop
nop
rorl
adc
dec
sbb
in
stc
outsl
jne
xor
mov
stos
push
sub
sbb
jp
push
lods
sbb
jne
outsl
test
or
lahf
rdpmc
mov
push
scas
xchg
jmp
andb
mov
ja
inc
xchg
mov
lcall
mov
push
mov
mov
mov
repnz
jno
movsl
fsub
push
rcl
xor
push
sbb
push
dec
sbbb
sahf
nop
and
jp
or
xchg
add
movb
aam
dec
je
or
adc
pusha
fs
and
icebp
popf
test
mov
int3
mov
stc
or
clc
xlat
inc
scas
pop
hlt
int3
int
in
jo
and
jmp
mov
jne
js
lods
imul
pop
in
sbbb
test
lods
mov
dec
jmp
jmp
pop
fmulp
cmp
lea
sbb
test
sub
es
cwtl
adc
imul
cmp
lret
mov
add
push
adc
ja
xor
in
ja
jo
stc
sahf
pop
in
and
aas
jns
test
dec
mov
roll
dec
cld
cld
dec
or
int3
lock
fisubrs
dec
xor
int3
push
loopne
ret
mov
popf
mov
cmp
pop
mov
xchg
aaa
daa
jge
js
test
fisttps
sbb
pushf
aaa
fsub
inc
adc
inc
insb
xchg
jns
mov
sti
jle
test
jp
mov
push
outsb
in
lcall
fidivrs
and
daa
idivb
gs
stc
and
pop
pop
lock
dec
jl
rcrb
in
mov
loop
sub
test
in
adc
cmp
faddl
sub
in
mov
push
shrb
sub
fstpl
inc
mov
mov
jno
shlb
mov
and
lret
jle
subl
fstps
loop
mov
stos
sti
pop
push
lods
mov
pusha
movsl
notb
xor
sub
das
cmpsb
pusha
inc
rolb
scas
scas
cmp
and
stos
mov
mov
push
cmp
xchg
shlb
adc
sbb
ja
mov
xchg
jecxz
in
sub
push
jg
mov
mov
mov
xor
stos
jp
mov
xorl
es
test
and
gs
icebp
in
dec
repnz
rcl
xor
frstor
out
mov
xchg
and
rol
mov
sub
inc
pushf
mov
xchg
cmpsl
dec
jnp
aam
mov
stos
push
pop
mov
sub
xchg
mov
loope
aaa
scas
mov
sbb
xor
inc
or
adc
push
jle
scas
pop
xlat
mov
jle
mov
stos
pop
inc
into
mov
test
lret
xor
push
divl
xor
daa
cmp
stos
and
and
cmp
shll
data16
lahf
cmp
xor
jae
or
enter
insl
out
lret
mov
sub
xchg
mov
mov
mov
mov
jmp
add
sbb
cwtl
cmp
xchg
cmp
ficoms
xchg
xchg
mov
insl
push
jne
js
mov
icebp
and
cmp
cmp
pop
aam
inc
data16
xor
insb
and
lahf
mov
pop
int
and
xlat
pop
fcmovnbe
inc
add
ds
push
jnp
xchg
pop
mov
cmpsb
and
mov
mov
push
fstl
push
je
ds
int3
pop
jp
push
es
icebp
cmp
sub
xor
push
inc
daa
lret
pop
push
push
push
mov
add
inc
sbb
out
es
mov
inc
mov
std
fisubrs
lcall
test
test
mov
sub
jbe
push
sbb
lea
fildl
lods
xchg
and
sbb
lods
jne
mov
inc
sbb
push
mov
cs
dec
stos
sar
sub
jecxz
jl
push
add
mov
fisttpll
in
dec
mov
or
cld
jne
mov
repnz
push
lcall
and
push
mov
adc
pop
push
inc
das
std
scas
jns
or
xchg
dec
jbe
mov
and
hlt
loope
pop
jb
or
push
imul
cmp
mov
pop
or
out
adc
popf
lods
adc
inc
dec
jl
and
xor
dec
sbb
lret
repz
add
repz
or
aad
outsb
jmp
jg
das
sbb
inc
mov
dec
jo
scas
nop
pop
lret
out
xchg
fcom
mov
insl
mov
inc
pop
xor
into
sub
cmp
push
out
and
mov
add
lea
pop
push
lahf
cltd
xchg
add
lahf
pushf
push
test
mov
scas
cmc
fcomps
inc
lods
and
arpl
into
jb
pop
ljmp
outsl
xorb
mov
push
sbb
and
push
mov
push
mov
cmpsl
or
lcall
mov
xor
subl
testb
sbb
jno
lds
add
cmp
int
add
cmp
add
and
inc
mov
or
popa
rorl
data16
or
adc
rolb
les
mov
test
es
dec
scas
in
pop
pop
or
clc
xchg
jmp
and
fdivl
push
pcmpeqd
sbb
inc
cli
movl
sti
pop
jb
icebp
fstl
mov
ljmp
jns
aam
sbb
shll
mov
add
sti
arpl
addb
xchg
xchg
xlat
sti
nop
scas
push
hlt
int
xor
jne
aaa
add
cmp
int3
mov
cmp
dec
inc
and
jns
sti
sbb
and
pusha
das
mov
xchg
adc
xor
mov
dec
cmpsl
lock
mov
scas
call
sub
or
dec
fcompl
sbb
fdivrs
mov
cmp
lcall
pop
cwtl
in
sar
int3
sbb
dec
fwait
sbb
out
icebp
outsb
add
sbb
xchg
dec
sbb
and
sbb
insl
dec
cmc
cmp
shll
mov
loopne
out
or
and
push
int3
movsb
add
call
imul
bound
lds
shlb
mov
mov
ljmp
lock
mov
cmp
call
dec
inc
imul
adc
add
fs
roll
icebp
dec
sbb
lea
cmp
scas
cli
pop
push
repz
popf
inc
cmpsl
jnp
cmpsb
outsb
into
mov
add
pop
cmpsb
adc
jo
ret
scas
pop
mov
mov
and
into
xor
xor
sbb
bound
push
mov
mov
dec
dec
leave
ret
ffreep
dec
xor
stc
cld
sub
pop
lcall
scas
sbb
cmp
loopne
xchg
test
or
cld
popa
pop
mov
sti
in
ret
inc
outsb
jle
mov
push
in
out
push
movsb
push
in
mov
xor
sub
shlb
inc
cmp
loopne
iret
add
xchg
out
lea
or
mov
fcmovnu
insb
mov
test
adc
jb
xor
adc
shlb
sarb
mov
and
nop
add
pop
jns
pop
cld
scas
or
add
mov
not
js
add
testb
xor
cmpb
or
shll
or
push
sbb
or
es
adc
or
cs
in
sbb
push
push
cwtl
add
cs
mov
and
pop
inc
icebp
push
dec
ret
ljmp
pop
mov
out
push
stos
mov
ret
iret
mov
scas
jmp
cmp
inc
out
push
xor
test
rolb
loope
negb
lods
add
lods
xchg
hlt
add
je
in
fmul
jns
push
push
sub
adc
cmp
adc
mov
shr
sub
cmpsb
jbe
lods
pop
jnp
daa
pop
cmpsb
mov
ss
ss
lcall
sbb
loopne
sub
addr16
fcmovu
mov
jge
mov
dec
mov
push
push
scas
push
adc
gs
fnsave
shlb
mov
jge
cmp
push
mov
or
jae
xchg
jnp
push
in
pop
jns
rclb
sbb
push
cld
gs
jnp
fildll
inc
idivl
scas
jmp
or
stos
fcom
scas
mov
fsub
cli
pop
cs
push
mov
int3
inc
ljmp
dec
fsubs
and
or
pop
jecxz
mov
aaa
insb
stc
xlat
aam
sbb
xor
setnp
cld
leave
mov
lahf
lods
sub
loop
test
repnz
sub
in
add
ss
mov
and
and
xchg
and
mov
in
push
out
daa
pop
into
push
xchg
fldenv
test
mov
call
les
sub
jp
xchg
sbb
mov
sub
sub
cmp
inc
adc
xlat
cltd
add
mov
outsl
sbbl
push
outsl
inc
jo
add
xor
dec
adc
cli
out
dec
push
call
out
inc
cmp
leave
jbe
inc
cmpsl
push
xchg
mov
stos
outsb
ljmp
adcl
jae
pop
mov
mov
out
pop
pop
std
mov
pop
pop
jb
in
popf
shlb
jno
fistps
cli
jne
pusha
loop
outsb
js
gs
stos
jg
sub
adc
mov
cmpsl
fstps
inc
mov
add
mov
push
mov
xchg
inc
or
xchg
mov
cmpsl
pop
xor
dec
jnp
fsubp
in
add
mov
jno
mov
lods
add
out
stos
loopne
inc
add
adc
adcb
fistpll
push
shrl
fs
aam
xchg
out
sub
xchg
lahf
jecxz
sbb
xchg
xor
mov
mov
push
repnz
inc
fwait
lea
das
imul
std
xchg
mov
nop
nop
pop
popf
add
add
dec
jne
test
inc
mov
push
cmpsb
cmpl
pop
and
pushf
jmp
out
mov
jecxz
dec
rorl
inc
push
ret
fwait
insl
arpl
cwtl
mull
add
adc
dec
scas
cld
lcall
ljmp
in
mov
rorb
loop
push
push
push
sbb
jns
and
or
notl
jne
fbstp
sbb
push
lret
je
mov
sbb
test
cmpsl
mov
adc
aaa
in
mov
mov
mov
cmp
mov
sar
daa
mov
add
xchg
iret
nop
out
lahf
add
inc
adc
lock
mov
mov
cmp
movsb
push
icebp
andl
scas
xchg
xor
sahf
cmp
int3
sbbb
iret
pop
test
add
stos
xorl
icebp
pop
sub
mov
jmp
lock
popf
iret
or
or
push
push
insb
and
int
sahf
ja
push
sub
add
push
std
push
cmp
sti
and
and
dec
aam
fbld
das
fadds
xchg
xchg
popa
push
mov
repz
popa
sub
mov
aas
push
aas
ds
jo
fiadds
adc
mov
testb
test
push
mov
jbe
dec
push
pushf
mov
jcxz
pop
in
sbb
sub
loop
sbb
adc
ficoml
nop
add
stc
int3
cmp
movsl
into
mov
in
dec
mov
add
dec
test
leave
loope
ror
inc
dec
xchg
and
pop
fdivl
call
clc
sarl
imul
mov
mov
dec
bound
sbb
cmp
in
push
fwait
push
lods
outsb
pop
test
and
push
adc
in
dec
fsubrl
dec
cmp
sub
lock
pop
jno
ret
call
popf
divb
shll
test
lahf
test
fnstcw
add
jo
bound
fnstenv
in
push
pop
les
pop
repnz
cmpsb
pop
dec
cwtl
and
dec
popf
pop
mov
cli
repnz
ss
ret
aad
sbb
arpl
fnstcw
xor
mov
jg
fdivs
cmp
push
bound
cmp
adc
mov
sbb
enter
jp
push
imul
loopne
jle
data16
sbbb
subl
sbbb
popf
std
les
cmpps
les
adc
sbb
popf
mov
cmp
stos
loope
movb
push
popl
jg
pop
out
sub
outsb
sahf
sbb
ret
cli
and
add
subb
inc
lret
inc
inc
cmp
faddl
dec
das
dec
jg
out
push
lock
add
out
push
dec
jbe
sbb
lods
ret
cmpsl
mov
movl
and
sub
mov
push
or
fdivrl
daa
push
push
jg
jge
rclb
inc
outsl
inc
cmpl
jne
add
mov
jns
cs
rcll
jmp
test
push
rclb
mov
pop
mov
fdivrs
xchg
inc
jb
jg
jg
and
jle
sahf
lea
in
xchg
scas
cmc
loope
jnp
push
push
int
dec
jb
aaa
and
sub
les
hlt
int
add
mov
sarb
dec
test
movsb
jbe
scas
test
pop
ret
fs
add
addb
push
or
or
dec
sbb
test
pop
cmp
aam
std
sub
sub
daa
rol
repnz
in
test
mov
push
rorb
lods
shrl
icebp
fs
xor
out
pop
test
pop
mov
movsl
stos
popa
add
dec
and
lahf
lds
test
bound
sahf
pop
outsl
and
inc
dec
sub
mov
mov
mov
xor
orb
or
pop
mov
leave
cmp
rorl
repz
mov
jmp
lret
iret
inc
lret
in
les
sbb
xchg
dec
movsb
mov
or
adc
cmpsb
add
jo
xor
and
faddl
dec
sti
shrl
xchg
pop
fisubl
jge
nop
sbb
pop
cmp
sub
add
popa
and
mov
push
ficompl
lahf
pop
hlt
cltd
xchg
lret
lcall
in
xor
idivl
in
lahf
sti
push
out
push
cmp
imul
cmpsl
cmp
andl
sbb
xchg
xchg
mov
movsb
fcomp
test
and
pop
and
jl
xor
lock
fcmovnb
cmp
xchg
inc
mov
sub
pop
cmpsl
test
mov
loopne
add
sti
icebp
imul
in
das
fwait
scas
xchg
mov
sahf
cmc
cld
in
mov
imul
mov
sarb
lcall
loop
ud0
add
shll
xor
xor
lahf
sub
sarb
aaa
sub
data16
jne
jle
lock
sub
xchg
push
pushf
cmpsb
fbld
in
cmp
cmp
scas
stos
rcrl
in
sbb
or
es
cmp
ret
iret
sbb
and
lret
test
fisubrs
xchg
gs
sub
dec
push
inc
push
arpl
cmp
pop
fcompl
mov
fcmovnb
pushf
and
cmp
lahf
push
add
ljmp
push
push
adc
push
mov
lret
cli
xlat
aad
into
ss
push
fists
xlat
cmp
push
cmc
add
lahf
imul
fsubs
mov
cld
cmpsb
jmp
call
scas
pcmpeqb
cld
mov
xor
call
movl
or
cmp
sub
data16
sbb
mov
lods
and
test
sub
jle
xchg
lods
ljmp
test
lcall
divb
call
bound
and
push
mov
adc
ja
mov
add
adc
pop
outsl
fiadds
add
jmp
mov
adc
movq
mov
ret
lods
mov
mov
leave
js
lret
and
testb
mov
rorb
dec
sbb
or
int
ret
mov
mov
mov
in
call
outsl
call
sub
xor
stos
aas
xchg
add
popf
into
and
and
cmc
xchg
fisttpl
shrl
lods
in
test
push
ss
ret
rcll
lods
cwtl
jge
roll
adc
jno
dec
data16
test
cmpb
jge
push
hlt
fnstcw
fisttpl
cmc
cmpsl
nopl
add
aad
lret
and
ljmp
cld
inc
lret
mov
mov
dec
mov
faddl
mov
scas
jge
sbb
sub
insl
pusha
cmp
cmp
mov
and
sub
mov
fstpt
addb
jecxz
pop
adcl
lods
mov
leave
inc
pushf
cmpsb
mov
lret
mov
dec
dec
xor
lret
and
and
inc
or
sbbb
lds
jo
sbb
arpl
aaa
imul
inc
jmp
mov
dec
orb
pusha
sub
push
cmp
testb
dec
out
in
jno
dec
sbb
test
pop
jecxz
mov
sbb
cmp
jbe
mov
hlt
jb
icebp
inc
imul
pop
sub
mov
enter
popf
packsswb
pop
inc
cmpsb
push
lret
in
data16
mov
cmp
push
mov
das
movsb
aam
xor
cmp
scas
dec
test
jmp
in
sub
mov
rcl
fwait
leave
mov
aam
loope
data16
mov
call
jne
pop
loop
mov
add
or
mov
sahf
addr16
mov
xorl
and
xchg
xchg
arpl
xchg
cmp
mov
inc
push
sub
adc
xchg
lret
push
movsl
insl
pop
or
push
pop
mov
inc
popa
jp
jnp
call
movsb
dec
xchg
cli
push
and
pop
inc
pop
ss
lcall
mov
push
clc
push
sbb
test
add
and
stos
push
int3
popf
ja
and
nop
jle
je
repz
push
lods
xor
ja
mov
cltd
in
jae
mov
mov
push
xor
imul
dec
jae
icebp
inc
cmp
xchg
jg
std
or
mov
push
dec
sub
into
mov
jne
mov
lret
stos
ret
ror
cli
sub
daa
outsb
add
jne
mov
ljmp
or
dec
jl
ss
add
jns
pop
dec
test
repz
add
shll
ficoml
jbe
lret
add
jecxz
jg
cmp
lock
frstor
stc
sub
and
test
cmpsl
mov
mov
jmp
in
pop
movsb
outsb
scas
add
out
and
push
loop
roll
mov
add
es
dec
rcrb
pop
repz
jge
pushf
add
mov
cltd
sti
push
xchg
cmp
enter
push
fisubrl
inc
jecxz
bound
mov
push
and
mov
cmc
jg
mov
or
jle
stc
clc
push
dec
rorl
popl
jmp
lea
and
aad
stos
cmovb
mov
add
lods
pop
shlb
fs
mov
sbb
push
hlt
mov
inc
or
mov
mov
out
ret
jge
in
lods
mov
aas
mov
cltd
int3
out
outsb
jecxz
fmull
push
pop
shlb
sub
mov
sbb
pushf
rolb
scas
pop
sbb
xlat
add
clc
mov
ja
das
rorl
inc
aaa
add
push
jno
imul
aad
pusha
adc
scas
cmp
test
jbe
aam
xlat
adc
cmp
iret
out
lret
scas
fists
je
mov
inc
decb
pop
cmpsb
cmp
mov
insb
je
cmpsb
jnp
jge
jmp
mov
and
les
cwtl
out
in
aad
dec
scas
or
push
das
mov
pop
push
jno
push
sub
dec
inc
inc
ret
xchg
notb
ja
enter
std
inc
shll
inc
cmp
sub
repz
ret
loope
sub
insb
fwait
outsb
push
ret
xor
xor
ret
or
cmp
popa
jl
test
sub
xlat
mov
je
aaa
leave
xchg
xor
cmp
insl
adc
fdivrp
std
fcmove
xchg
push
mov
inc
enter
jp
pushf
dec
leave
inc
mov
outsl
sti
dec
je
cltd
mov
bound
dec
je
mov
adc
test
push
jecxz
sbb
add
dec
aad
loopne
sarl
iret
movsl
daa
or
mov
movsb
jb
dec
xchg
push
pop
lds
mov
movsb
or
fwait
in
dec
enter
mov
fmull
roll
ret
test
sub
mov
add
adc
xor
mov
filds
jae
or
adc
jo
popl
lods
cmpsb
push
test
dec
daa
push
cmp
xchg
or
mov
cmpb
xlat
inc
sbb
es
mov
mov
pushf
add
les
cmpsl
pop
stc
mov
scas
inc
mov
ret
push
add
and
xorb
and
es
sbb
inc
push
out
out
mov
pop
adc
movsb
jo
xchg
jecxz
add
mov
xlat
jnp
cmc
cld
mulb
push
frstor
add
sbb
jle
push
test
xchg
subl
sub
inc
dec
pushf
imulb
sub
jl
jb
pop
jb
mov
push
jg
insb
bsr
lret
mov
mov
pop
xor
fs
test
lock
orb
and
mov
pop
sub
jl
mov
adc
test
fwait
int
push
and
and
mov
xchg
mov
shl
add
cmpsl
testb
add
push
jne
jae
les
mov
repz
mov
mov
loope
add
iret
shrl
jl
mov
mov
ja
sarb
xor
inc
sahf
pop
jns
lret
cmp
adc
idivl
xchg
orl
lods
aam
and
push
imul
adc
aaa
mov
cmc
loopne
mov
stc
cmp
lret
neg
or
lods
dec
mov
ja
ds
jns
ret
or
mov
fildl
adc
hlt
mov
pop
push
adcl
movsl
mov
out
fidivrs
mov
repnz
cmpsl
add
mov
add
outsl
aad
sub
outsb
mov
mov
test
ret
and
pop
arpl
in
bound
ja
adc
jne
inc
pop
add
sbb
ret
mov
jb
adc
stos
repnz
jns
jnp
loop
ljmp
test
fs
xchg
xor
push
or
sbb
ret
sti
adc
stos
xorb
cld
cli
inc
mov
les
pop
clc
push
mov
pop
mov
ljmp
sbb
push
std
xchg
les
pop
lcall
scas
dec
adc
arpl
push
in
cmpsb
and
mov
repnz
out
pop
repz
sahf
cli
add
js
or
popf
das
xchg
pop
push
lret
and
adc
sub
imul
or
lret
mov
pop
aaa
cltd
adc
xchg
test
aam
mov
pop
jle
clc
adc
push
lret
test
jne
ret
test
sbb
push
cwtl
xchg
cmp
sbb
push
push
xchg
mov
dec
dec
pop
sbb
adc
movzwl
dec
sub
mov
xor
sbb
fcoml
jle
inc
xchg
and
jbe
fyl2x
xor
cwtl
xchg
fistps
lret
mov
aaa
dec
dec
jo
lahf
and
ret
sub
data16
mov
lahf
xchg
jo
sti
jns
int
pop
lea
inc
sub
ss
inc
dec
into
mov
bound
test
sahf
mov
add
into
call
ss
idivl
jae
imul
js
dec
leave
cs
or
mov
sub
xor
loope
dec
xchg
and
mov
dec
dec
sbb
loop
sbb
int
ret
scas
add
lcall
or
sub
push
incl
iret
or
pop
sub
ret
or
mov
sbb
lcall
scas
in
inc
mov
jecxz
mov
mov
fwait
xor
test
cltd
mov
xchg
mov
inc
or
mov
test
cmp
pop
inc
imul
inc
movsb
push
adcb
or
rol
mov
sbb
adcb
push
jl
aaa
xchg
jb
shlb
jns
pushf
xor
xlat
arpl
jbe
push
in
clc
push
sti
hlt
pop
iret
lds
in
in
push
jbe
in
push
or
jmp
adc
jmp
lret
mov
mov
ret
mov
fwait
mov
sub
jl
call
rclb
push
data16
mov
and
inc
cmp
push
xor
and
adc
dec
in
add
rcrb
cmp
ret
mov
aas
sub
fucom
adc
in
push
or
jae
cmp
movsb
mov
test
mov
xor
or
clc
outsl
sub
xor
adc
push
sbbb
jns
std
aam
and
xor
das
mov
xor
dec
int3
xchg
adc
pushl
jne
or
lods
xchg
stos
fldenv
mov
cmp
lods
rcrb
cmp
dec
mov
ret
pop
das
in
mov
jle
jns
push
fsubrs
cmc
pop
xor
and
lods
lret
out
sbb
inc
sarb
pusha
test
es
xchg
orb
jp
push
sub
insl
cmp
repz
movups
nop
mov
lods
push
out
scas
gs
inc
aas
add
fcmovnu
imul
push
cld
pop
pusha
bound
cwtl
nop
sbb
xlat
mov
dec
data16
pop
and
rol
lods
xor
mov
fsubrl
ljmp
sbb
dec
inc
icebp
push
push
in
inc
sbb
popf
imul
mov
lret
loop
sti
hlt
mov
mov
adc
mov
gs
jno
xor
cmp
orl
mov
repnz
lods
pop
test
loopne
jb
addr16
repnz
xchg
mov
push
lods
mov
mov
pop
jecxz
insl
add
and
sub
or
clc
in
je
mov
mov
fdivrs
mov
andb
xor
push
xor
jg
or
xchg
imul
jmp
pop
xchg
icebp
add
notl
sub
xor
or
fistl
xor
xor
fs
add
adc
repz
lcall
xor
push
movsb
pop
out
jne
out
or
push
push
mov
push
xlat
rcrb
repnz
push
hlt
inc
and
in
std
out
pushf
add
out
xchg
and
daa
sub
dec
in
mov
cpuid
fisubrl
addr16
loopne
jnp
lcall
pop
mov
push
ret
xor
sbb
or
scas
cmpsl
in
mov
das
in
cli
fbld
out
test
js
in
inc
mov
jbe
pusha
lods
out
jmp
outsb
es
je
popa
pop
test
mov
xchg
cld
stos
cmp
pop
fnsave
int
sub
mov
cmp
sar
divb
mov
pop
lods
in
js
int
fsubr
mov
gs
push
jl
jo
add
scas
mov
clc
xchg
mov
xor
cmc
cmpb
xchg
push
mov
push
or
popf
dec
xorl
fmull
out
ret
or
add
icebp
mov
sbb
cltd
sarb
fwait
mov
aaa
rcpps
imul
fcom
or
insb
mov
lea
dec
sahf
sub
insl
aaa
jp
loop
or
data16
adc
jbe
pop
loopne
neg
mov
flds
ljmp
cmp
lea
dec
fildll
pop
jae
addr16
cmp
mov
pop
test
pop
mov
test
les
fdivrs
ja
push
mov
mov
add
call
jo
and
dec
xchg
insl
ljmp
fs
dec
mov
fs
dec
or
or
and
and
add
inc
push
mov
jno
sbb
mov
mov
lods
shll
adc
movsb
push
sahf
testb
xchg
inc
mov
mov
dec
mov
fxch
shr
movsb
es
pop
notl
or
xchg
pop
loope
sub
mov
xchg
cmp
inc
lahf
fs
sti
enter
dec
inc
outsl
in
decl
mov
xor
sbb
add
insl
mov
fidivl
outsl
loopne
aaa
pop
or
lret
push
xor
mov
fdivr
push
insb
and
inc
cmp
xchg
clc
push
jg
mov
jmp
inc
test
jmp
aam
mov
mov
cmpb
mov
les
rcll
mov
ja
and
add
out
push
iret
or
xchg
sub
cmp
inc
inc
lds
push
lods
mov
cmc
jp
mov
in
outsl
mov
cmpb
sub
push
popf
mov
inc
xchg
xchg
inc
mov
add
pop
andb
jbe
dec
fdivr
xor
out
cwtl
loope
insl
push
jle
push
ret
cmovne
sub
mov
xchg
inc
xchg
xor
adc
add
movsb
testl
mov
out
dec
lret
aaa
xor
fs
in
sub
jecxz
dec
xchg
pop
je
in
outsb
ret
jae
test
fdivl
push
out
gs
mov
fwait
test
decb
sbb
sti
les
cmc
pop
in
mov
iret
les
stos
xchg
hlt
imul
cmpsl
or
cmp
mov
mov
push
das
mov
jg
dec
jb
inc
stos
pop
mov
push
lret
push
cmp
in
dec
push
sarb
int3
cmp
inc
shrb
sti
repnz
xchg
std
addb
inc
bound
pop
shll
cmp
dec
std
mov
fidivs
lcall
sbb
ret
push
fucomi
push
int3
cmpsb
sbb
incl
mov
sarl
inc
sbb
icebp
mov
mov
cld
lret
jne
push
es
mov
fcmovnbe
iret
push
hlt
pop
in
dec
lock
xor
test
mov
movsb
enter
les
fucom
in
mov
rcr
mov
push
test
pop
and
adc
or
xor
aam
push
mov
xchg
fisubrl
rcrl
cltd
cmpsb
jecxz
sub
push
arpl
xchg
cwtl
int3
out
jns
imul
pop
jne
nop
and
sbb
shlb
pop
mov
xchg
ret
xor
inc
sahf
in
mov
shrl
and
xchg
pop
stc
pop
dec
inc
roll
daa
xchg
pop
inc
mov
jecxz
mov
sub
enter
fildll
cmp
into
push
es
sub
mov
inc
dec
push
xchg
pop
cmp
jp
jecxz
xor
sub
cmp
jmp
add
push
adc
push
lret
jno
ret
sub
pop
mov
out
push
mov
inc
mov
cmpsb
jle
inc
mov
xlat
mov
sub
inc
arpl
out
adc
xor
das
inc
dec
and
or
jecxz
xchg
leave
popf
push
pop
pop
cmp
dec
popa
jge
add
jp
dec
cmc
push
fcompl
mov
lods
and
cltd
dec
icebp
cwtl
sbb
adc
inc
or
xlat
aad
push
sti
dec
int
xor
xchg
pop
xchg
jne
pop
jnp
pop
in
jl
and
xor
adc
fdivrs
sub
popa
pop
add
sti
lods
push
aad
pop
mov
gs
jle
adc
aaa
out
outsl
movsl
add
iret
rcll
or
shlb
fldenv
jne,pn
icebp
cwtl
ds
jb
out
or
adc
data16
ss
inc
add
sbb
xor
pusha
add
les
pop
aaa
mov
mov
cmpsl
or
lods
rcrb
and
jae
imulb
cmp
mov
hlt
scas
in
sub
pop
popf
outsl
decl
mov
rcrl
mov
sub
inc
outsb
xchg
inc
mov
je
xchg
xchg
push
lods
test
aam
aad
enter
xchg
ja
push
fcmovnb
mov
xor
mov
scas
movsb
mov
lods
push
or
ss
adcb
sub
or
lahf
inc
enter
adc
lret
jns
arpl
pop
lds
and
xchg
and
mov
lods
subb
test
mov
dec
stos
mov
jno
fincstp
ss
test
mov
inc
push
sub
ljmp
sub
push
dec
xchg
out
jmp
jp
sub
cli
call
sti
imul
xchg
in
xchg
stc
shl
inc
js
jle
mov
ficomps
stc
jecxz
nop
adc
jns
in
mov
je
add
fs
push
add
jmp
in
arpl
lahf
jg
jno
aam
sub
push
and
pop
in
imul
std
stos
imul
sbb
aad
movsb
das
fldl
sub
stos
pop
lcall
cmpsl
call
push
jg
stos
fsubrl
ljmp
test
pop
inc
je
fildll
fdivrs
les
ret
sub
jl
sbb
int3
cmp
das
pop
inc
data16
mov
daa
inc
push
xor
dec
stc
fdivrs
int
jnp
sub
aaa
or
rolb
js
push
lcall
and
jns
lea
jo
push
mov
ret
inc
in
ret
shl
ss
lret
loop
dec
repnz
int
mov
cld
sarb
insl
push
shll
leave
mov
outsb
push
test
xchg
imul
cmp
lods
pop
jb
cmpsb
add
mov
shl
ljmp
movsl
les
ret
mov
test
adc
cwtl
xor
sbb
in
incl
sti
int3
iret
cmp
inc
arpl
imul
lods
in
mov
or
adc
xor
gs
xchg
sti
add
xor
outsb
lahf
or
jb
xchg
mov
pop
add
ds
sbb
or
xchg
cmp
xchg
ds
ja
hlt
xor
xor
ret
and
in
ljmp
cmp
and
mov
aaa
dec
xor
dec
xor
out
inc
and
xlat
repnz
testb
mov
stc
adc
dec
or
xor
in
repz
mov
sbb
aam
cltd
cmp
pusha
lock
xchg
cwtl
and
aas
clc
or
repnz
jp
dec
int
aam
xchg
test
mov
ljmp
add
decb
sbb
mov
adc
push
insb
dec
sub
les
push
aam
xor
push
xchg
sub
sub
mov
cltd
mov
mov
xor
add
push
test
cld
call
lds
xor
dec
lds
jo
stos
shl
fstps
ficoml
lods
bound
test
repz
add
cmpsb
in
pop
mov
outsb
rol
mov
xchg
cmp
cmp
je
xor
fdivl
cmp
cltd
inc
pop
movsl
jmp
or
jmp
ja
in
pop
mov
mov
fstps
mov
jns
mov
sahf
negb
adc
xor
repz
cli
xor
or
or
adc
cmc
lods
test
stc
mov
mov
shlb
add
bound
es
fstpl
push
cs
mov
aad
lods
in
fimull
loopne
cmp
test
and
std
adc
or
push
in
mov
pop
xchg
es
xchg
fcomip
mov
push
andb
and
aaa
adc
and
je
int3
mov
notb
test
lahf
cmp
js
inc
imul
and
xor
xchg
lock
xor
shl
jno
lahf
sub
push
jo
sub
jecxz
rorl
jnp
push
dec
mull
nop
cmp
xchg
movsl
pop
shlb
sub
sbb
cmp
jge
repnz
imul
imul
sub
and
bnd
or
mov
hlt
ss
test
icebp
sbb
je
xchg
add
sbb
movsb
push
cmp
mov
fwait
cmp
pop
hlt
push
adc
xchg
and
into
cmpsb
pop
daa
in
mov
es
jns
das
mov
aam
imul
jnp
out
sub
cmp
iret
int3
mov
push
lret
inc
cld
xchg
negb
sahf
test
scas
or
inc
ret
rcl
icebp
testl
hlt
pushf
dec
mov
push
fisubl
mov
addr16
mov
lea
push
fisttpll
adc
pop
cmpsl
roll
adc
clc
push
stos
xchg
gs
es
in
lahf
jecxz
shrl
adc
ret
sbb
test
adc
push
fucomip
aad
cmc
inc
int
add
stos
ljmp
aaa
das
pop
pop
xor
rcrb
mov
ds
rep
pop
fbld
fildl
xor
popa
into
push
mov
jo
stc
xor
or
inc
jbe
or
cmp
shll
adc
inc
nop
and
cmp
cmp
jg
mov
mov
int
testb
jge
pop
dec
or
loopne
arpl
lcall
lea
test
xchg
xor
je
mov
shlb
test
cmp
add
sub
rcl
cmp
xlat
cmpsl
ljmp
or
imul
xchg
push
stc
add
shl
xorl
cmp
je
pop
fnstcw
cmp
inc
xor
cmpsb
jnp
fisttps
arpl
cmpsb
add
imul
cmp
jmp
sarb
outsb
and
sub
push
cmpsb
fwait
in
cwtl
scas
pusha
popa
and
fldt
int3
inc
mov
dec
xor
movsb
pop
jl
arpl
push
and
lods
or
ds
out
cmc
pop
cmpsb
jle
repnz
pop
and
leave
test
cli
xchg
add
xor
cmp
stos
mov
nop
hlt
iret
insl
add
jnp
mov
pop
imul
andb
sub
stos
aad
movl
cs
pop
cltd
out
add
lahf
cmp
adc
inc
int3
xchg
or
mov
popa
repnz
cmp
adc
leave
pop
repnz
into
cmp
sahf
nop
fmuls
cmp
add
jae
rcrl
fbld
das
add
sbb
xor
jbe
aam
jne
xchg
stc
fdivrl
stos
movsl
clc
ss
inc
push
push
mov
in
push
jle
out
push
dec
mov
sbb
test
lods
xchg
or
add
pop
in
or
notl
adc
mov
xchg
and
mov
sbb
sbb
outsb
push
cmp
lock
rolb
xlat
aad
xchg
sbb
inc
fsubs
fistpl
rcll
add
xchg
fdivrs
jecxz
mov
pushf
loope
sub
or
int3
push
decb
mov
fmull
inc
cmc
fs
pop
fidivl
insb
xor
in
add
loopne
inc
push
mov
xor
jg
adc
pop
and
scas
insb
fs
mov
ja
cs
mov
push
decb
lods
cmpb
enter
insb
xchg
push
xor
push
adc
fistpl
dec
adc
push
call
mov
aas
xor
in
dec
mov
xor
jns
pop
pop
mov
fwait
dec
cmp
mov
inc
jbe
outsb
in
les
inc
or
inc
mov
enter
push
mov
sub
lcall
sbb
adc
insl
pop
ds
sbb
mov
cli
xor
int3
xchg
std
ja
cmpb
mov
daa
jp
adc
add
nop
jo
mov
addr16
xchg
push
add
push
loope
cwtl
fsubrp
fdivl
mov
sbb
push
or
adc
push
mov
push
pop
jl
mov
out
inc
xor
jb
pushf
ja
mov
imul
or
cltd
mov
jmp
test
repz
push
sbb
fisubrl
pop
lcall
add
jg
aam
pop
add
test
sbb
fistps
xchg
sti
xchg
push
mov
push
xchg
adc
fidivs
cld
mov
lods
in
xchg
lock
ja
add
shrb
clc
and
mov
xor
pop
aaa
mov
xchg
negb
outsl
push
mov
ss
pop
mov
xchg
les
cmpsl
mov
jae
cli
imul
shll
loop
fdivrl
leave
popf
mov
rclb
pop
dec
sub
std
inc
push
arpl
xor
es
jno
in
lds
out
sbb
mov
xor
add
xor
xlat
or
nop
push
shll
xor
jp
add
or
leave
int
pushf
xor
mov
sbb
lcall
gs
xchg
push
pop
aad
jle
leave
lcall
rclb
outsb
xchg
jmp
scas
inc
rep
xchg
inc
push
mov
testb
xor
stc
jmp
and
sub
testl
mov
fstpt
lret
xchg
xchg
aam
push
lea
xor
inc
enter
cmc
xchg
sti
mov
lea
ds
add
add
andl
into
das
sub
jo
push
mov
inc
loop
push
and
mov
jae
fstl
fldenv
or
cmp
popa
dec
pop
pop
popl
fidivs
aad
mov
sbb
movsb
dec
add
mov
aaa
inc
dec
ja
pop
scas
sbb
add
mov
jmp
sub
or
fmull
movsl
pop
and
neg
jl
int3
fcomps
jbe
adc
aam
cwtl
shll
adc
inc
jge
sahf
lahf
mov
test
outsb
add
js
mov
sbb
test
sbb
insl
lea
adc
sbb
mov
fisubrs
push
xlat
and
add
or
pop
push
mov
insl
loope
jg
es
clc
dec
or
fs
into
mov
mov
xorl
cld
inc
xchg
adc
stos
ret
rep
xor
lds
leave
mov
in
cmc
aam
loope
add
xchg
pop
inc
sub
push
push
mov
mov
data16
popa
cld
fsubrl
xchg
and
xchg
mov
inc
adc
mov
and
mov
push
push
cli
out
and
or
movsl
aam
sub
push
dec
sbb
out
clc
mov
insb
lods
pop
imul
insl
xchg
aad
sti
lock
mov
mov
mov
arpl
add
sub
mov
mov
fistps
loopne
je
adc
sbb
out
cmpsb
call
mov
jnp
insl
or
lea
insb
mov
les
mov
adc
outsb
ja
insl
nop
jnp
sti
pop
aam
inc
and
or
mov
cmp
leave
mov
sub
in
outsl
cmp
pusha
subl
sti
pop
insb
dec
xchg
out
dec
aam
je
mov
ret
ja
pop
in
imul
xchg
pop
leave
pop
mov
push
jb
fiaddl
sub
repnz
jns
adc
mov
jno
dec
or
out
push
hlt
push
push
xor
enter
push
adc
clc
insl
out
cmp
clc
rorb
leave
mov
jg
test
xchg
int
insl
push
cmp
or
test
and
rolb
push
bound
push
lds
int
push
std
jbe
mov
fcompl
jecxz
testl
fisttpll
bound
xor
sbb
xchg
fists
mov
ret
dec
and
jnp
pop
xlat
and
in
je
ss
sub
loop
shl
gs
cmp
and
cmp
pop
jge
push
in
pop
push
mov
cmpsl
outsb
or
mov
cmp
add
sti
ja
arpl
popl
fdivrs
sbbb
loopne
and
cmpsb
mov
rclb
adcl
push
das
out
pop
pop
fildll
or
sbb
stos
jne
stos
lds
cli
mov
adc
cltd
push
pop
jle
xor
adc
ret
outsl
pushw
sbb
test
adc
cmp
mov
mov
rorl
mov
mov
jl
jns
jae
xchg
or
test
imull
fisttps
push
jae
std
addr16
movsb
ljmp
sbb
ss
mov
add
pop
add
in
pusha
mov
enter
fsub
je
fidivl
notb
shl
stos
popf
ret
aad
and
sahf
mov
les
cmp
push
cwtl
repz
fwait
pop
mov
in
dec
push
cmpsl
xchg
sub
aam
mov
or
mov
test
jmp
in
ljmp
lds
mov
mov
lahf
jle
add
cmp
cmp
or
in
iret
push
sbb
loopne
jno
jno
and
lahf
mov
cmp
into
out
insb
imul
inc
inc
sub
jp
dec
add
sub
pop
jl
xchg
dec
out
shlb
mov
mov
add
aam
mov
cltd
mov
movl
jbe,pn
adc
sbb
xor
jmp
adc
cmp
ret
push
mov
mov
std
orb
push
xor
inc
adc
push
outsl
mov
in
inc
and
mov
scas
repnz
jno
test
in
adc
out
inc
shrl
idiv
add
add
pop
fcomps
in
addb
xor
push
xor
pand
lods
push
shr
pop
mov
orl
insb
and
and
movsb
les
dec
push
cmp
xchg
ret
and
mov
jnp
hlt
cmp
int
out
pop
clc
push
adc
adc
or
int
push
mov
inc
popf
lods
or
call
loopne
cmp
adc
std
jns
ret
mov
or
inc
fdiv
or
loop
mov
lret
into
mov
mov
insl
inc
mul
mov
pop
insl
mov
inc
in
mov
sbb
jecxz
mov
cwtl
arpl
xor
adc
daa
js
cmpsl
stc
push
push
in
jo
sbb
mov
scas
das
in
xlat
xchg
pop
xchg
push
test
repnz
out
jmp
xchg
insb
lods
out
or
aaa
inc
stc
fsubl
rcl
pop
xchg
mov
adc
sahf
or
test
dec
mov
add
xlat
fisttpl
xchg
jl
out
mov
add
fdivl
pop
and
pushf
aad
pop
fisubl
loope
fisubl
faddl
add
mov
mov
mov
jno
mov
imul
call
and
sub
sbb
jl
sub
add
lods
push
push
int3
hlt
rcll
and
std
rcrb
and
subb
push
pop
out
int
push
mov
sub
xchg
fsubs
shll
push
loop
ret
add
ds
adc
xchg
lcall
adc
imul
aaa
push
inc
mov
xchg
jne
ret
je
js
test
sbb
lret
inc
sub
imul
mov
out
test
xchg
ja
sbb
sbb
clc
pop
pop
cmp
arpl
incb
js
gs
pop
push
fcmovbe
and
inc
idiv
add
clc
int
adc
out
leave
dec
sbb
xchg
scas
adc
cmp
xor
adcb
lods
test
push
lods
iret
adc
lcall
lcall
cmp
pusha
shll
mov
lret
fxch
in
push
mov
in
xchg
movsl
add
pop
push
inc
adc
sarl
rorb
mov
mov
push
and
je
es
out
pop
cltd
push
cltd
into
sub
sub
or
dec
imul
fldenv
xchg
lcall
xchg
pop
sub
in
mull
push
inc
pop
adc
push
in
pop
ds
cs
mov
and
push
insb
loope
xlat
push
ret
cmpsb
test
jp
les
jnp
xor
adc
pop
shll
in
jle
cmpsb
std
scas
dec
aas
pop
or
dec
mov
test
push
and
jp
pop
adc
lods
aaa
inc
jl
sbb
and
cmp
dec
pop
scas
sbb
lret
or
xchg
cld
inc
jbe
cltd
mov
xchg
inc
enter
sbb
sbb
das
popa
neg
push
push
lret
add
push
xor
mov
sahf
sub
in
mov
xchg
sbb
jmp
lcall
rcrb
xchg
cmp
pop
popf
sbb
fwait
adc
and
faddl
loopne
test
push
test
push
sahf
mov
sahf
ja
xor
jge
repnz
jle
push
mov
mov
scas
add
mov
rcl
mov
outsb
nop
xchg
jne
cmp
testl
jne
loopne
or
and
pop
jp
cmc
fbld
sub
push
jmp
sub
add
jmp
test
sbbl
gs
dec
push
xor
xor
pop
push
stos
pop
adc
sarb
dec
push
pop
rep
in
ret
imul
sbb
inc
xchg
fldenvs
mov
dec
repnz
scas
pop
outsb
rol
inc
lea
adc
cmp
mov
mov
sub
outsl
jg
mov
xlat
iret
adc
lret
ss
push
pushf
mov
xor
pop
aas
and
pop
adc
or
fidivs
mov
dec
outsb
out
das
adc
jb
mov
test
out
ja
cltd
fcmovbe
in
mov
imul
inc
cs
repz
pop
and
cmp
popl
mov
jle
les
fsts
cmp
cwtl
mov
pop
out
jae
ljmp
and
lods
push
lods
clc
test
test
pushf
inc
movsl
sub
loopne
mov
dec
test
daa
jg
and
xchg
dec
cltd
add
push
add
arpl
popf
add
cmp
lods
stos
mov
jae
mov
jae
mov
mov
cmpsb
sahf
jge
sub
lods
decb
popf
aaa
jno
lock
xchg
xchg
dec
movsl
psubb
aaa
pop
orl
das
lret
jo
sarb
clc
xorl
loopne
jg
sub
lcall
arpl
into
jns
push
xchg
arpl
mov
jmp
loope
out
lret
popa
js
popa
mov
dec
push
stos
cltd
push
out
imul
mov
push
sub
push
mov
aad
stc
sub
cli
lds
fdivrl
repnz
mov
out
loopne
lods
pop
les
int
clc
imul
stos
aam
sub
int
push
in
dec
sarb
in
movsb
call
pop
or
xchg
xlat
stos
jb
adc
lock
sub
test
inc
inc
ret
pop
std
dec
sti
lret
dec
xchg
loope
lcall
lret
pop
outsb
xor
dec
scas
iret
mov
or
dec
mov
xor
rolb
out
xchg
dec
loop
push
jno
xor
mov
sbb
inc
cmp
mov
mov
ret
cld
call
dec
mov
aaa
jmp
pop
rorl
test
inc
rolb
dec
pop
nop
cmp
push
adc
out
loope
xchg
jo
mov
lods
and
mov
pop
xchg
loope
std
and
add
ds
push
or
out
mov
add
sub
mov
dec
stos
sub
push
mov
lods
push
inc
lods
into
outsl
lock
xchg
mov
test
cwtl
lock
pop
push
imul
imul
mov
insl
mov
dec
or
cmovb
lret
inc
stos
push
push
repnz
inc
adc
push
mov
sbbl
test
rcrb
pop
mov
out
xchg
sub
add
mov
cmpsb
imul
daa
scas
mov
cmp
stos
mov
mov
jp
andb
rclb
sub
out
cmc
negb
jmp
inc
rorl
xchg
or
xchg
clc
je
and
or
lods
call
and
cmc
pop
inc
lods
gs
ret
pop
push
lods
xor
into
sahf
add
cwtl
out
jg
mov
add
mov
hlt
xlat
shlb
ds
test
push
in
imul
cmp
gs
mov
addb
into
hlt
or
sbb
insl
push
sti
mov
lods
shr
mov
pop
lret
jmp
inc
pop
pop
ljmp
lods
push
and
out
pop
sbb
or
dec
cld
pop
or
adc
dec
movsb
loopne
jne
ret
lods
outsb
pop
push
loopne
shll
test
jp
dec
inc
sub
pop
test
mov
popf
lcall
xchg
test
shl
adc
dec
cltd
sbb
or
pop
lret
pop
dec
lret
js
xchg
pop
or
jnp
sub
xor
jp
cld
xchg
arpl
sbb
pop
ljmp
lret
mov
lds
je
or
jne
out
jnp
mov
insl
pop
inc
andl
lret
and
imull
jl
ret
das
sbb
loope
push
dec
push
pop
ficoml
or
pushl
pop
loope
cld
popf
hlt
mov
push
inc
in
lods
add
push
or
int
lcall
jp
pop
shl
loopne
mov
jne
fiadds
mov
inc
jl
sub
xor
push
push
repz
sbb
call
pop
cmp
mov
and
xchg
andb
inc
jae
shr
hlt
jg
add
icebp
add
adc
decb
mov
inc
aaa
mov
dec
jns
inc
outsl
sbb
addl
and
loope
jne
out
ss
out
sahf
fcmove
imul
cmp
mov
test
xor
pushf
js
cmpb
inc
fstps
xor
or
fwait
outsb
inc
loop
stos
and
pusha
jecxz
dec
aad
into
orb
popf
jb
lret
sbb
mov
ds
rolb
or
mov
popf
lahf
jge
nop
inc
in
test
icebp
mov
pop
pushf
je
xchg
jnp
fsqrt
cmc
xor
sbb
sub
cmpsb
add
xor
ds
daa
lea
xor
pop
fwait
push
push
sbb
in
scas
or
dec
iret
in
enter
mov
sub
push
nop
adc
stos
add
dec
push
js
jnp
push
jg
ret
popf
inc
sub
out
imul
fists
jo
pop
xchg
jecxz
in
xchg
xchg
fsub
rcrb
push
mov
cmp
cmpsl
fnstcw
les
subl
inc
mov
adc
aam
ja
xlat
cltd
xchg
push
pop
adc
bound
mov
inc
test
loop
mov
adc
dec
ss
inc
stos
rol
sbbb
xchg
inc
sub
mov
xchg
push
mov
push
mov
std
mov
pop
inc
pop
cmpsb
and
scas
mov
xor
fidivrs
push
out
push
insl
dec
fstl
inc
insb
xor
out
add
outsl
shll
fimull
cmp
out
jae
outsl
add
repz
push
jle
cmp
bound
xchg
pop
pushf
xor
mov
movl
pcmpeqw
mov
pop
lret
notb
xlat
xor
loope
sub
movsl
inc
mov
jbe
out
jbe
in
mov
fwait
push
lcall
and
adc
push
adc
rol
push
adc
scas
jmp
shrb
cmpsl
or
or
adc
push
in
push
hlt
ljmp
add
mov
push
cmc
lret
push
adcl
jg
sbb
push
rcll
inc
mov
daa
push
clc
test
and
pop
mov
jns
jmp
jmp
mov
in
jmp
ljmp
jbe
les
movsbl
cltd
xchg
push
aaa
sbb
mov
pushl
scas
cmp
aaa
fdivr
inc
inc
fstps
xor
cmc
in
ja
xchg
fwait
daa
push
or
out
mov
popa
dec
fisttpl
xchg
test
ss
gs
ficomps
mov
iret
cmp
dec
lcall
mov
xchg
jl
inc
cmp
xchg
cmc
jns
inc
xchg
scas
orb
cmp
into
out
xchg
dec
jl
sti
mov
cld
sbbb
daa
sbb
mov
mov
inc
cmc
ret
pusha
jmp
mov
aam
inc
sub
mov
mov
xchg
xchg
mov
out
shlb
mov
push
insb
add
out
pop
inc
arpl
stc
sbb
dec
pop
mov
testb
sbb
xor
in
fldl
pop
lods
andb
pop
lods
dec
imul
loopne
cmp
cmp
ds
lods
mov
cmpsl
sub
add
add
lds
arpl
jno
leave
stos
scas
lcall
repnz
dec
popa
stc
insl
sbb
je
mov
jecxz
jne
aaa
lods
aas
sub
cmp
imul
add
les
or
cli
aaa
sub
aam
out
je
inc
aas
out
mov
loope
xchg
sbb
les
fdiv
and
and
push
and
in
push
aas
repnz
bound
mov
push
fidivl
mov
aas
arpl
ljmp
jo
push
adc
int
bound
stos
sbb
mov
fidivl
ror
ret
daa
cli
data16
mov
cltd
sbb
mov
jbe
sub
adc
mov
lahf
mov
nop
xchg
stos
aad
fadds
in
and
and
add
cltd
hlt
lds
mov
insb
pop
pusha
rcll
xor
jl
cmp
or
sub
mov
sbb
std
repnz
push
lret
std
cmpsb
mov
xor
ret
dec
and
fnstsw
pop
sub
pop
mov
and
test
mov
jo
mov
jge
adc
xor
push
hlt
add
daa
cwtl
mov
push
sti
or
add
out
cmp
mov
mov
in
push
xorl
mov
repnz
pop
out
pop
mov
xchg
mov
and
jno
jno
andl
push
jne
lods
pop
adc
adc
loopne
sub
and
inc
push
mov
xlat
xor
ret
pop
stc
loope
xchg
sub
test
cmp
test
cltd
data16
setg
xchg
mov
jo
std
xor
sub
adc
in
dec
cmp
jl
and
mov
adc
jbe
aaa
std
inc
inc
pop
scas
lea
mov
imulb
push
lahf
jle
jp
popa
adc
pop
in
loopne
cmp
xor
enter
ds
jbe
sbb
stos
lcall
cmpb
sub
sbb
lcall
pop
xchg
das
jo
and
or
cwtl
dec
popa
push
sbb
movsl
in
sbb
mov
mov
mov
ret
shrb
insb
pop
push
adc
jnp
int3
adc
movsl
pop
fs
test
mov
add
jae,pt
or
pop
mov
cmp
out
bound
add
sbbb
test
outsl
jmp
lret
jnp
hlt
aad
js
xchg
sbb
pusha
scas
pushf
xor
or
icebp
retw
xor
sbb
inc
repnz
nop
ret
cwtl
cmpsl
add
mov
lock
adc
or
dec
cli
pop
leave
aad
fcompl
xchg
int3
or
jg
sbb
jae
cwtl
inc
xlat
enter
stc
lods
or
push
push
rorb
out
cmp
adc
sub
data16
mov
sbb
adc
mov
xlat
and
xor
negl
jnp
stos
xlat
push
fdivrs
jle
out
out
xchg
and
into
addl
in
xlat
shrb
push
icebp
mov
mov
outsl
int3
cmpsb
xor
dec
xchg
pop
mov
sbb
push
addr16
mov
loope
cmc
cmpsb
mov
xchg
mov
aam
jecxz
aam
cmpsb
pop
loopne
pusha
dec
lret
jg
xor
popa
push
jnp
cmc
xchg
or
lcall
inc
xor
popl
jns
mov
std
pcmpeqw
mov
dec
sahf
cmp
imul
fsubr
out
add
insl
xor
jbe
mov
pop
pop
mov
mov
mov
sub
mov
cmp
out
in
dec
fisttpl
adc
in
or
outsl
loopne
xchg
or
dec
movsb
xor
int
dec
shrl
mov
dec
fwait
inc
ds
push
lahf
dec
push
hlt
jnp
test
jno
clc
sbb
and
push
sti
add
ja
mov
add
jae
sbb
xor
leave
push
jge
sub
popl
sub
mov
lea
jg
adcl
enter
das
clc
mov
ja
and
cmp
fwait
push
xor
popf
imull
mov
jo
pop
in
movsl
sub
push
iret
xor
test
push
leave
pop
add
xchg
loop
fwait
insl
xchg
cs
or
sbbb
pop
addl
mov
mov
cld
repz
mov
jp
leave
int
jns
rcll
xchg
lret
ror
pusha
pop
and
shlb
xor
mov
cmpb
jne
xor
push
insl
or
repnz
pop
aam
gs
cli
jo
sub
jg
pop
mov
repnz
in
or
xlat
adc
or
hlt
cwtl
test
mov
lock
push
mov
aad
mov
pop
cmp
cmpl
sti
ret
xor
sub
ja
pop
inc
pop
mov
pop
iret
mov
pushf
insb
dec
sbb
mov
cmpl
fiaddl
pop
shlb
test
mov
push
push
sbb
mov
loope
add
mov
mov
add
add
dec
insb
and
lods
dec
inc
dec
pop
add
sbb
movsb
mov
pusha
inc
jge
loop
addr16
xchg
jecxz
out
jmp
into
mov
mov
xor
dec
sub
mov
shlb
add
add
insl
mov
mov
sbb
mov
dec
repnz
sub
ss
repnz
into
aaa
ficoml
in
loopnew
int3
nop
push
push
leave
cmp
fabs
lret
call
pop
pop
pop
and
pop
or
in
leave
xor
or
push
jbe
movsb
les
add
cmpsl
pop
mov
imul
adc
cmpsb
pop
inc
jmp
dec
and
cld
into
and
add
sbb
adc
mov
arpl
add
ss
and
inc
fistps
mov
jmp
jns
in
push
inc
das
mov
sub
or
mov
shll
ljmp
or
pop
sbb
xchg
daa
dec
ret
shlb
or
inc
jg
scas
in
fs
subb
sub
fadds
pop
xor
cmc
push
fwait
xchg
adc
xchg
xchg
ljmp
and
mov
inc
sbb
jb
dec
subb
mov
add
sub
sahf
aas
cmp
mov
mov
dec
insl
cmp
jne
fisubs
cmp
fldenv
and
ss
push
sti
dec
lcall
xchg
lea
jae
aas
inc
mov
add
cmp
add
mov
push
inc
jnp
aas
push
rolb
rep
push
stos
inc
sbb
addr16
jmp
insl
pusha
out
sub
bound
roll
ss
lods
pop
pop
movsb
jnp
dec
in
adc
jmp
adc
lods
cmpb
and
and
xor
inc
mov
cmp
jbe
xor
jae
int3
hlt
xor
loopne
cltd
pushl
xchg
or
push
pop
dec
sub
loop
and
add
jae
int3
cwtl
pop
inc
scas
mov
pop
xchg
cs
dec
inc
leave
adcl
dec
pop
ja
fisttpl
or
pop
les
cmc
stos
aad
ret
data16
add
xchg
xchg
ror
test
cmp
mov
dec
int3
sub
mov
ljmp
cmc
incl
imul
push
mov
loopne
arpl
xchg
mov
sbb
test
stos
mov
cmp
icebp
int3
mov
out
test
jnp
xor
dec
cmc
push
dec
mov
push
incl
loop
vmovapd
jmp
lds
lods
xor
adc
cmp
mov
out
mov
gs
mov
rcl
xor
int3
stos
cld
mov
lret
pop
hlt
mov
bound
loope
jecxz
scas
in
bound
push
aaa
mov
lcall
dec
idivl
test
mov
imul
movsb
mov
shlb
inc
cld
les
cmp
aas
adc
jg
fiaddl
jae
pop
xchg
pop
test
loope
xchg
int
add
js
or
icebp
in
adc
movsl
adc
and
mov
sbb
adc
cmp
cmp
cmp
fidivs
aam
jnp
cld
jae
sbb
cmp
dec
push
inc
aam
in
pop
or
aas
cli
mov
aaa
cmpsb
scas
push
scas
in
or
mov
cmp
adc
cmp
ss
lret
lods
mov
mov
sub
mov
into
in
iret
dec
bound
and
xlat
dec
ss
push
or
outsb
mov
push
div
lea
pop
pop
xor
add
or
and
dec
add
lods
aad
loop
xor
ret
mov
insl
dec
mov
add
aas
jbe
cwtl
in
out
fcom
lock
in
sub
lret
out
repz
jl
hlt
mov
mov
jns
inc
cli
scas
jg
and
inc
cld
ret
pop
pop
iret
pop
mov
jns
or
gs
aaa
test
outsb
pop
mov
mov
pop
push
mov
shll
mov
aaa
cmp
inc
sbb
aad
outsb
xor
add
mov
xchg
jns
xchg
pop
cld
add
in
xchg
xchg
cmp
jmp
pop
sbb
xor
cmpsl
xchg
aaa
jecxz
mov
shr
test
cmp
mov
pop
cmpsl
push
jnp
cmp
sub
push
xor
js
loope
push
movsb
out
pop
add
int3
jnp
dec
adc
clc
xor
hlt
stos
js
jnp
add
and
mov
adc
inc
pop
shrl
cwtl
jb
gs
out
jo
or
and
mov
sbb
inc
jecxz
loope
data16
dec
pop
jg
xlat
movlps
inc
lret
in
adc
pusha
daa
add
xchg
cli
or
jne
cmpsl
sub
add
out
add
insb
dec
mov
mov
sub
rol
mov
and
add
pop
xchg
jbe
mov
hlt
mov
rorb
mov
adc
lret
mov
xor
jp
outsl
iret
jecxz
add
es
aad
push
dec
dec
sbb
fldt
dec
mov
cltd
in
jne
enter
shrb
cmpsl
nop
xor
femms
pushf
mov
sti
scas
dec
rclb
push
push
movsb
lahf
xor
in
mov
andb
sbb
mov
xchg
xchg
adc
mov
push
movsl
xchg
je
dec
add
mov
mov
js
movsb
loop
cmpsl
lock
mov
stc
mov
shll
cs
cwtl
jmp
mov
div
sbb
stc
xchg
aam
aaa
aad
scas
lret
fildll
push
jne
sbb
out
and
add
or
xchg
in
inc
scas
xchg
add
inc
icebp
imul
into
add
out
imul
gs
xlat
test
cs
and
jmp
sbb
repz
icebp
push
std
fsubrs
out
clc
mov
jle
push
test
mov
shl
mov
cmp
lahf
aam
out
jge
es
jmp
std
mov
push
pop
xorl
or
jbe
lea
sub
push
add
cltd
lods
jo
mov
push
cmp
fldln2
shrb
xor
push
das
push
or
add
cwtl
jge
xchg
int
push
pop
mov
push
enter
ja
sbb
mov
push
push
nop
inc
add
add
aas
insb
xchg
push
lods
mov
sbb
call
push
adcb
push
mov
cmp
dec
ret
mov
ret
jbe
icebp
inc
cld
xchg
mov
es
or
imul
test
fwait
jo
clc
push
xor
cmp
pop
ljmp
adc
pop
mov
test
iret
mov
add
cmp
xor
and
push
cmpsb
push
pusha
cmpsb
outsb
mov
jecxz
mov
adc
mov
inc
jp
sbb
andl
popa
int
scas
daa
aam
movsb
fs
cmc
push
push
divl
pushf
test
testb
loope
jp
push
sbb
cmpsl
cmp
stc
cltd
jle
pop
xchg
pop
popf
inc
insl
lahf
inc
pop
cmpsb
fwait
sub
cld
rorl
and
hlt
in
addr16
xor
ret
jg
out
push
inc
rclb
or
fcom
mov
inc
fcom
stos
or
mov
mov
mov
adc
int
movb
sti
inc
adc
scas
out
inc
or
fcompl
push
mov
bound
popa
pop
cltd
xchg
fs
enter
test
aam
sub
jle
add
ret
jnp
orl
dec
or
mov
dec
pop
cmp
push
and
mov
mov
aas
mov
clc
outsl
gs
cltd
inc
scas
int
push
push
nop
push
add
xchg
cmp
push
movsl
add
fucomi
push
add
sub
ja
nop
mov
sub
xchg
pop
out
xor
jae
jbe
or
pop
mov
pop
jmp
std
dec
xor
daa
sbb
shll
into
out
dec
dec
or
push
aam
cmpsl
cmc
pop
loope
aaa
dec
sub
adc
int
sub
jg
rcr
sub
sbb
sub
aaa
enter
and
repnz
pop
mov
orb
pop
scas
xorb
sub
mov
or
shlb
sti
enter
inc
fisubrl
dec
cmpl
cli
lods
pusha
xor
jb
jb
movsl
aas
push
jbe
stos
nop
xor
cmc
loopne
fstl
xchg
loope
ret
stos
fsts
sub
jmp
iret
lretw
sti
fwait
insb
lcall
cmp
nop
sub
fiadds
rcrl
rclb
push
aad
xchg
ds
sti
mov
loopne
in
es
mov
mov
sti
sub
adc
orb
xor
mov
out
mov
or
jle
rcl
lret
cltd
dec
xchg
lcall
lods
mov
cmpsb
shlb
cmpsb
mov
cmp
inc
into
pop
sti
repnz
jl
fucomp
push
xlat
add
adc
adc
fsubrp
inc
add
lea
gs
or
scas
imul
mov
sub
dec
clc
adc
add
pop
lods
das
insl
mov
lds
xor
pushf
mov
xor
out
test
dec
int
mov
leave
lock
js
inc
mov
mov
int3
jecxz
loopne
jl
lea
lret
scas
in
insl
or
test
inc
sbb
testl
jecxz
sbb
cltd
and
rcrl
push
and
iret
outsb
insl
jg
or
ret
mov
sbb
or
xor
adc
mov
sbb
imul
cmp
int3
subb
lock
nop
cltd
jp
xor
insb
xchg
jmp
cmp
stc
icebp
les
mov
je
push
cmp
mov
ret
iret
gs
jg
inc
in
or
out
cmp
imul
mov
pop
xor
pop
pusha
cli
xchg
jge
xor
rcrl
test
jns
sub
push
dec
dec
xchg
adc
sbb
das
jge
cmpb
jae
add
int3
loope
dec
out
ret
push
sub
dec
xchg
mov
mov
test
mov
ret
pop
adcl
cmp
jne
sarl
ret
jle
and
outsl
pop
mov
mov
out
mov
mov
inc
les
outsb
bound
in
pop
scas
add
loop
pop
mov
out
jo
outsb
addr16
ret
hlt
pop
mov
push
icebp
jnp
in
pop
push
pusha
cmc
popl
loopne
stos
push
scas
shl
sbb
jb
push
negl
fwait
cltd
sbbl
pop
jnp
pop
popa
push
es
outsb
arpl
sbb
fcoms
sahf
aad
inc
mov
adc
fxch
out
int3
popa
xlat
xchg
push
xor
adc
pop
loop
xor
fistl
add
scas
call
mov
mov
and
stc
cwtl
lahf
and
sbb
mov
push
out
aad
test
es
ret
dec
mov
jae
sub
mov
mov
jno
dec
adc
inc
sahf
fistps
mov
or
test
mov
repnz
pop
rolb
stos
jne
loope
out
jbe
adc
imul
or
pop
mov
pop
lds
ret
test
push
into
pushf
in
or
sahf
ror
mulb
or
jb
test
lds
adc
movsb
imul
mov
sub
imul
mov
loopne
inc
ret
push
adc
scas
lods
add
roll
mov
jle
arpl
lahf
xor
call
jp
mov
mov
insb
cmp
cmp
and
daa
call
and
dec
aad
and
adcb
iret
inc
fistps
cwtl
sbb
sbb
pop
shll
mov
test
cltd
stos
std
pop
adc
dec
jle
outsl
fwait
arpl
aam
jl
pop
pop
pushf
jp
sbb
jae
jmp
mov
dec
lcall
in
or
pushf
dec
jle
add
insb
jecxz
repnz
insl
aaa
inc
cli
fsubl
pop
jl
xchg
rorb
dec
and
fcomps
or
out
negb
xor
inc
mov
cmp
jp
cld
in
aaa
jbe
fidivrl
repz
cmpsl
scas
add
push
mov
ret
inc
mov
pop
movsb
sti
mov
pop
lahf
push
jns
test
ja
cltd
sbb
mov
pop
addb
pop
aad
test
fsubrs
int3
mov
nop
lret
xor
mov
sti
push
scas
lcall
xchg
pop
lock
popf
or
int3
mov
xor
cmp
cmp
cld
xchg
test
cld
and
outsl
scas
pop
or
fcmovne
xor
cmpsl
mov
aad
xchg
adc
rclb
in
imull
js
mov
cmc
lock
or
dec
das
pop
and
add
out
sbbl
mov
xchg
xchg
scas
xchg
aas
clc
js
or
xor
mov
pop
out
je
xchg
dec
xor
lahf
cmp
mull
inc
mov
stos
mov
je
mov
in
and
out
pop
enter
cmc
lods
push
sahf
mov
rorb
push
scas
movl
mov
aam
adc
out
cmp
and
sbb
popf
pop
push
sub
stc
mov
inc
and
cmp
mov
adc
push
roll
jbe
fnsave
and
arpl
cs
jge
cmp
imul
and
loope
xor
insl
out
add
movsl
mov
lods
out
pop
fs
pop
aad
push
movsl
stos
ljmp
arpl
lea
add
sub
sbb
imul
repz
xlat
push
push
shlb
hlt
sbb
push
push
sti
add
cli
push
sbb
sbb
call
add
jno
cmp
add
xlat
inc
mov
push
and
int3
nop
pop
int3
pop
pop
xlat
jae
leave
jae
call
stos
mov
ss
jecxz
rorl
or
jns
jge
ss
ss
jg
jl
pop
mov
dec
sbb
sahf
jmp
inc
inc
int3
cmpsb
fucomp
imulb
xchg
cmp
lea
pop
pop
repz
data16
shl
push
rolb
testb
les
or
mov
inc
outsl
addr16
mov
in
jle
mov
xor
or
fsub
mov
mov
jmp
ljmp
aaa
pushf
daa
test
cmp
fnsetpm(287
out
mov
or
test
mov
sbb
cmp
and
mov
cmp
ljmp
jmp
jge
mov
sbb
scas
loope
lods
aas
and
out
unpckhps
mov
cmp
decl
mov
fdivrl
gs
mov
aaa
cmp
xlat
or
mov
ss
sub
ljmp
pop
adc
lret
and
cmp
xchg
dec
ds
xchg
adc
aad
hlt
jb
sub
cwtl
gs
idivl
ror
jb
pop
fdivp
push
jbe
cmp
dec
add
inc
aaa
or
and
leave
jb
pop
aas
movl
pop
stos
pop
sbb
adc
mul
fsubrs
dec
aad
pop
adc
je
push
mov
pop
mov
cmpsb
inc
insb
push
mov
sbb
mov
aad
or
outsl
idiv
rorb
and
xor
mov
in
push
dec
enter
mov
and
movsb
fucomip
or
lahf
jp
sbbl
pop
loopne
scas
jl
inc
push
dec
pop
xor
frstor
cmp
fiaddl
int
repnz
cmp
mov
outsb
sbb
sbb
mov
cmp
setle
adc
dec
out
ret
mov
in
dec
add
mov
in
push
fnsave
mov
xchg
cmp
lcall
mov
mov
xor
enter
ss
push
pop
and
push
mov
and
push
add
adc
test
cmp
push
mov
pop
bound
hlt
fisubs
jmp
and
stos
pop
lods
mov
sub
ret
jge
pop
cmp
mov
hlt
into
add
sub
pusha
jne
mov
xchg
jns
daa
addr16
fdivl
out
mov
call
lcall
jl
out
out
scas
movsl
pop
jp
push
inc
shlb
sbb
and
gs
add
ds
outsl
or
mov
pop
popf
jne
dec
shlb
mov
sbb
pop
sub
subl
mov
pop
inc
into
inc
out
and
dec
jnp
cltd
adc
pusha
mov
test
shll
xor
pop
xor
fisubs
shll
mov
sbb
jb
imul
lcall
sub
or
jg
add
cmpsl
jno
dec
cmp
jnp
hlt
jp
add
mov
in
adc
fs
cmp
jmp
adc
adc
push
push
ds
leave
pop
bnd
xchg
sbb
loope
jg
sub
jp
add
push
aaa
push
lock
mov
mov
imul
xchg
xor
jns
push
fisttpl
and
insl
mov
sub
pushf
ret
jo
mov
into
dec
pop
xor
or
cmp
fwait
cmpsl
sub
jl
shll
call
jg
fisubl
fnstcw
aam
int3
mov
jp
adc
jne
sbb
cmpsl
mov
add
fldenv
fcmovb
jmp
sub
inc
repnz
aas
cmp
roll
push
push
dec
aam
dec
imul
test
int3
fmul
mov
test
inc
sub
inc
sbb
das
jg
jmp
jo
mov
xchg
lret
sbb
jge
sub
lds
mov
fsub
or
mov
cmp
pop
nop
pop
mov
jp
or
pop
jecxz
repz
lret
lcall
mov
sub
pop
adc
push
dec
into
cmp
mov
adc
inc
das
pushf
inc
add
out
jnp
cmp
push
mov
lret
insb
ret
sbb
clc
shr
xor
jno
push
xor
ja
xchg
pop
jmp
jge
sbb
dec
push
sub
inc
jns
js
add
add
push
cmp
adc
pop
adc
cltd
jbe,pn
and
jnp
mov
pop
sub
fdivrs
inc
inc
jge
inc
lret
xchg
xlat
mov
ljmp
pop
dec
push
jecxz
cmp
jae
inc
std
lods
lock
dec
pop
pop
jl
fwait
iret
xchg
mov
pop
mov
xchg
fldt
dec
fisubl
xchg
add
mov
test
mov
std
xchg
push
cmc
and
mov
mov
ds
negl
and
scas
and
add
xchg
outsb
sbb
cmp
pop
jbe
out
lahf
pop
dec
and
or
add
aad
aad
jge
inc
scas
and
mov
cwtl
mov
jp
lock
and
out
and
daa
daa
lcall
xor
jne
jb
xor
push
std
xor
out
push
insl
push
cmpl
push
sbb
jbe
sahf
imul
or
lret
pusha
mov
in
out
in
jbe
lret
shr
popa
jle
pop
pop
xor
inc
scas
mov
loope
pop
cmc
ja
mov
add
xlat
hlt
test
jb
aaa
pop
mov
inc
push
add
bound
div
push
mov
int3
fdivs
push
inc
jle
sub
pop
pop
gs
and
inc
cmp
mov
arpl
popl
mov
sahf
scas
les
sti
lods
sbb
into
xchg
inc
adc
insl
test
out
jno
out
bound
popa
add
insb
dec
dec
out
or
inc
or
cmp
js
xor
sub
push
jl
xchg
outsl
push
aas
jo
and
pop
push
pop
jne
add
lret
fwait
and
stc
fidivs
push
push
iret
sti
aaa
sbb
lea
jnp
push
jmp
hlt
icebp
jmp
icebp
test
sub
andb
or
mov
add
jo
push
lret
xchg
inc
push
mov
imul
lret
jns
mov
fucomp
shll
test
push
outsl
add
ret
mov
stos
inc
adc
aas
mov
punpckhbw
pop
ret
inc
push
fisubs
scas
mov
das
lret
das
shl
dec
adc
fadds
push
mov
sub
mov
add
std
inc
ror
pop
pusha
fxch
mov
je
in
subb
cmc
lods
mov
cld
divb
pop
mov
adc
lret
cmp
popf
and
sub
pop
jg
ljmp
cmp
scas
fwait
jmp
es
enter
fdivr
mov
divl
mov
and
imulb
mov
movsb
push
cli
test
mov
out
in
loop
mov
mov
mov
adc
mov
and
adc
pop
pop
clc
add
inc
push
or
loopne
jp
jnp
jbe
out
xchg
out
cltd
sbb
mov
dec
jno
add
loop
daa
loopne
xchg
or
xchg
jno
test
xchg
mov
mov
lcall
fs
rol
xlat
sub
es
mov
jno
fstps
mov
in
add
sbb
stos
je
or
out
in
inc
addr16
imul
call
dec
fidivl
test
and
xor
sub
popf
nop
pop
clc
inc
jg
cmp
daa
adc
pusha
push
std
out
dec
xchg
insb
and
into
mov
insl
and
test
in
mov
pushf
cmpsl
fiadds
mov
je
xchg
and
sub
dec
mov
jne
jne
push
cld
jmp
dec
in
adc
sti
xchg
push
nop
negb
ret
adc
jbe
xor
movsl
loopne
xor
inc
or
arpl
sbb
sub
in
mov
out
cld
lcall
dec
adc
cli
add
fstpt
sbb
rol
insb
sahf
sbb
mov
cmc
paddw
cwtl
push
or
or
pop
mov
sub
sbb
scas
call
add
jl
hlt
notb
jo
pusha
adc
mov
ja
cs
rcll
imul
push
outsl
aam
jns
jb
nop
pop
jne
in
arpl
cmp
pop
mov
mov
cld
dec
lods
test
sub
and
addr16
stos
push
jno
sbb
inc
dec
cmp
cmp
xor
insb
hlt
jbe
xorl
rcrb
test
aas
cltd
addl
mov
inc
movsl
dec
repnz
mov
imul
mov
xchg
push
insl
xor
push
dec
movsl
out
out
pop
inc
lea
lods
sti
dec
inc
cwtl
stos
cwtl
nop
or
js
pop
pop
jl
mov
jae
jle
pop
out
pop
stos
add
aad
jns
lea
repz
sub
movsb
daa
cmpsb
jmp
mov
dec
inc
xor
aad
and
sti
cmp
fs
adc
xchg
leave
repnz
pop
fistl
insb
ja
outsl
add
jbe
addr16
push
repz
ret
xchg
cmp
hlt
movsb
mov
fmuls
cwtl
hlt
test
js
ja
lock
cbtw
sbb
testb
jl
xchg
stos
lcall
push
adc
std
xor
mov
ss
mov
orb
lret
ret
push
js
jg
cmpl
xor
rclb
or
das
sbb
lahf
push
sub
inc
mov
leave
fwait
pop
adc
mov
addr16
or
add
cmpsl
pop
add
add
insb
cltd
xor
stc
and
decl
mov
testb
pop
je
xchg
push
ss
pusha
xchg
ret
in
sbb
xlat
test
lret
cmpl
pop
les
sbb
cmp
push
ja
xlat
mov
adc
in
loope
mov
sub
xchg
xchg
aaa
sbb
xor
ds
inc
push
and
rorl
idivb
or
ret
jb
xor
fdivl
cld
ret
sbb
jae
pop
mov
mov
push
es
je
aad
jle
sti
loope
out
pop
stos
stos
test
es
dec
out
mov
int
test
in
mov
dec
ret
sti
dec
pop
sbb
pop
rorb
xor
push
mov
add
loop
lcall
push
lcall
or
pop
inc
popf
repz
aad
scas
push
fiaddl
stos
ret
or
test
dec
in
cwtl
sub
fdivs
je
sub
xchg
sbb
sbb
pop
out
test
xchg
cs
jmp
jmp
add
pushf
sbb
imul
rorl
lret
fldl
inc
jo
push
incl
sbb
data16
push
mov
pop
test
loopne
iret
fwait
pop
insb
dec
popl
lods
lds
cltd
sub
and
pop
xor
insl
adcb
sbb
jo
movsb
insb
add
stos
int
cli
sub
lret
xchg
jb
pop
jae
icebp
mov
xchg
add
insl
sbb
push
faddl
add
gs
xor
mov
or
sbb
in
xchg
sbb
mov
sbb
cs
aad
cmc
dec
stc
lea
inc
xlat
push
cmp
xlat
pop
pop
sbb
jmp
out
inc
pop
jns
outsb
inc
fstpl
mov
insl
mov
loop
in
popf
sub
sub
sbb
cmp
lret
mov
imul
lock
mov
jo
sbbl
or
mov
sbb
cli
out
inc
jb
dec
and
dec
mov
dec
fs
popa
cwtl
lret
lock
xor
sbb
pusha
pop
ret
scas
inc
ficompl
push
jo
add
test
mov
or
outsb
aad
sahf
adc
lret
mov
lea
rcll
inc
sbb
hlt
cwtl
in
je
arpl
mov
adc
pop
fisttpl
icebp
into
in
dec
or
pushf
arpl
inc
push
cmp
mov
mov
add
push
add
lds
repnz
cs
notl
into
lods
xor
dec
ror
subl
lock
hlt
mov
icebp
mov
xor
jl
sbb
pop
cmp
pop
dec
std
imul
lods
inc
dec
mov
add
fwait
subb
mov
xor
pop
dec
enter
mov
adc
cld
lea
mov
cld
or
lds
in
add
insb
jmp
xor
mov
insl
aam
rcll
jno
xchg
mov
test
pop
pop
lcall
arpl
outsb
in
mov
xchg
lahf
mov
sbb
scas
shlb
jo
mov
inc
cs
pop
ds
xorb
mov
push
test
and
mov
mov
jnp
mov
lods
in
ss
sahf
int3
test
scas
push
jmp
pop
dec
push
push
stos
stos
je
ficoms
popf
ret
dec
cmpsb
dec
imul
xor
fistpl
filds
out
test
lods
mov
adc
or
stc
cmp
push
pop
dec
shrl
push
clc
mov
xor
adc
jns
iret
inc
mov
sub
jno
hlt
sbb
fstpl
popf
arpl
cmp
push
test
xchg
lods
cltd
lcall
mov
dec
adc
fcmovnbe
adc
lods
rorl
stc
mov
lds
fs
cmp
andl
jo
clc
ds
xchg
mov
les
loope
dec
mov
das
pop
mov
pop
dec
int3
sub
pop
dec
push
xchg
inc
and
add
push
and
and
fisttps
dec
mov
sbb
mov
cmpsl
mov
mov
dec
mov
inc
es
notb
jbe
clc
es
pop
std
fldenv
mov
in
arpl
mov
daa
adc
hlt
shrl
pusha
mov
push
mov
insb
int3
insl
cmpsb
pushl
add
dec
pop
push
fidivs
scas
xchg
repnz
adc
xchg
jp
cmpsl
bound
std
and
rclb
dec
into
dec
push
testb
and
shl
mov
add
xchg
lret
test
xor
dec
pop
out
inc
pop
fcoml
fs
xchg
mov
mov
rcrl
fs
add
xlat
sub
cs
xchg
aad
pushf
aaa
mov
jp
in
mov
xor
add
push
hlt
push
add
mov
inc
push
popf
outsl
mov
rcl
jnp
fldt
and
aas
bound
cmp
inc
xor
shll
pop
cmc
jle
inc
lods
sub
xor
add
popf
pop
hlt
rorb
add
push
cmp
adcb
dec
or
fisubl
nop
por
dec
aad
enter
mov
std
push
or
mov
cmc
jo
stos
and
add
or
inc
icebp
and
pop
jecxz
jbe
insb
popf
inc
sbbb
jp
frstpm(287
add
cld
jecxz
sbb
push
ja
aam
pop
inc
dec
insl
std
jo
mov
xor
xchg
lods
pop
mov
scas
mov
xchg
pop
xchg
hlt
test
gs
fidivrl
xchg
fidivrs
and
sub
sbb
out
imul
lea
aaa
pusha
jge
mov
clc
lods
shll
daa
filds
adc
push
or
lock
fnstenv
inc
mov
mov
dec
int3
pop
jmp
sti
lret
or
jbe
xchg
data16
jmp
and
adc
xorl
xor
out
xor
xchg
clc
outsl
mov
cmp
or
add
roll
xor
ss
insl
dec
fisttps
in
dec
push
mov
and
mov
or
js
xor
imul
pop
fwait
scas
cmpsl
push
jns
cmpsb
mov
inc
xchg
das
dec
cmpsl
lret
enter
sbbl
sahf
xor
mov
pop
or
jecxz
loopne
scas
mov
add
xor
lcall
iret
clc
xor
xor
scas
pop
xchg
xchg
xchg
inc
dec
hlt
outsl
or
xor
shll
push
jbe
push
jne
ret
insl
scas
mov
dec
dec
fsubl
xorl
xor
pcmpeqb
fsubrl
into
out
pop
pop
test
dec
outsl
adc
loop
mov
pop
xorb
es
push
mov
dec
sahf
or
in
add
cmp
xlat
test
and
add
jge
sub
dec
push
push
and
dec
int
test
adcl
mov
in
cld
daa
mov
int3
mov
add
stc
cs
or
cmp
std
lgs
js
data16
fwait
daa
out
int3
and
arpl
jecxz
lcall
add
push
xchg
jnp
xchg
in
push
jle
dec
fadd
mov
popa
mov
lahf
mov
scas
sahf
ror
add
dec
outsb
dec
repnz
pop
std
jns
testb
andb
add
mov
mov
pop
xor
lods
fcmovne
subl
cltd
xchg
addb
push
inc
ret
or
mov
xchg
jb
push
pop
cld
subl
cmp
push
or
xchg
je
inc
lret
lret
push
enter
push
mov
aam
jns
mov
aas
push
adc
out
int3
dec
dec
xchg
imul
js
mov
push
jnp
pop
pop
dec
ret
or
orl
sahf
enter
popf
dec
js
jg
lahf
push
repnz
rcr
in
daa
mov
ret
fimull
iret
or
mov
push
icebp
stc
icebp
subl
or
cltd
mov
fisttps
xchg
lahf
mov
popa
xor
loop
enter
mov
arpl
or
hlt
sub
roll
add
inc
adc
cmp
mov
mov
enter
jnp
popa
mov
testl
ljmp
fdivs
out
iret
shlb
inc
xchg
mov
pop
and
adc
subb
imul
mov
adc
mov
cwtl
jb
das
jnp
add
cmpsl
shl
popf
cs
mov
jmp
loopne
push
jo
test
add
inc
test
leave
add
xor
jge
push
test
xchg
popf
aas
sahf
inc
dec
pop
addb
lcall
lret
xchg
fyl2x
test
popf
arpl
js
dec
fwait
lret
adc
mov
jns
cmc
dec
mov
xlat
sbb
push
loope
imul
xor
cld
and
pop
xchg
xor
hlt
mov
push
mov
mov
testb
sbb
pop
push
mov
or
or
movsb
jge
in
mov
aaa
mov
es
mov
es
dec
out
arpl
push
pusha
test
filds
into
out
dec
cmc
jecxz
sti
rolb
aad
xchg
in
xchg
clc
xor
jbe
mov
inc
hlt
ljmp
stos
jecxz
xchg
cmpsl
jnp
push
fisubrs
fcmovne
aad
xor
inc
lock
scas
inc
push
stos
lods
mov
add
scas
jno
mov
imul
inc
sahf
or
adc
or
call
in
push
or
lret
popa
lock
movsb
cmp
ret
pop
xchg
sahf
cli
ljmp
arpl
xchg
bound
mov
sub
sbb
pop
jbe
pusha
fmull
or
js
mov
add
jle
mov
mov
push
fldenv
fimull
or
push
dec
aaa
hlt
push
pusha
imul
push
iret
push
imul
shll
push
sbb
in
setl
push
add
outsl
xor
fdivrs
aad
lret
pushf
shrl
push
mov
sub
xchg
test
iret
mov
xchg
lods
mov
call
fadds
mov
shrl
sub
ret
xchg
insb
lea
inc
call
fwait
push
mov
adc
inc
inc
sub
ret
imul
xchg
movsb
fstpl
out
mov
dec
and
or
lods
cld
imul
outsb
add
pop
cmp
out
mov
xchg
mov
test
xor
sbb
xor
pop
cli
imul
imul
pop
mov
or
stc
dec
jbe
mov
sbb
and
fs
push
or
xchg
insb
add
push
dec
dec
push
int
cmpsl
pop
bound
loope
popf
leave
mov
imul
add
test
pop
pop
outsb
sub
lock
fcoml
rcrb
push
in
or
insb
mov
or
pop
loope
jae
jne
aas
loope
dec
lret
and
jb
push
mov
mov
xchg
jnp
roll
adc
dec
add
push
xor
mov
mov
and
push
or
mov
adc
js
xor
lahf
sbb
mov
and
cmp
mov
insb
mull
xor
sub
rorl
mov
mov
cmpsl
xor
loop
scas
mov
or
adc
sub
ljmp
rcrb
in
push
testl
in
cltd
in
push
icebp
cld
inc
mov
sub
iret
std
jle
add
mov
popf
mov
lds
inc
pop
outsb
les
loop
fldt
or
fimull
dec
dec
imul
and
popf
mov
lret
push
or
cmpsb
cld
mov
mov
mov
mov
movsl
aad
inc
fimuls
fstpt
add
sbbb
test
stc
add
into
jl
pop
pop
rcr
pop
ficomps
adcl
iret
in
xchg
pop
sub
rcrb
push
repnz
outsb
cmp
push
in
dec
das
sub
or
arpl
jle
lcall
hlt
sbb
xor
push
pop
cmp
aad
xchg
add
loop
and
subl
dec
xchg
stc
cli
sbb
or
lds
cld
mov
or
cmc
fisubrl
popf
fsubrp
mov
leave
add
std
dec
mov
inc
mov
test
push
arpl
adc
adc
nop
cmp
ss
cmp
das
ret
ds
push
lret
xor
cmp
push
dec
pop
push
rcr
push
hlt
mov
fistps
xor
sub
cwtl
cmp
xchg
insl
mov
cmp
stos
test
icebp
jg
jb
push
mov
add
popf
xor
cmpsl
fucom
in
jbe
jo
ds
lret
jecxz
loopne
popa
clc
jb
lea
jecxz
sarb
add
hlt
pop
lret
pop
mov
mov
cmp
call
sub
mov
dec
repnz
mov
mov
dec
jg
lret
dec
jg
push
rorb
mov
cwtl
iret
nop
push
pop
loopne
push
aam
adc
movl
xchg
mov
dec
sbb
inc
push
push
fsubrs
mov
jne
repnz
into
mov
test
inc
and
repz
imul
mov
add
cmpsb
mov
push
xor
mov
mov
jae
lds
sub
mov
xchg
in
sbb
les
fidivl
pop
cmp
ljmp
mov
out
adc
imul
mov
rclb
cs
js
subl
int3
jge
pop
icebp
repnz
add
lds
add
stos
ret
and
pop
jbe
or
and
mov
xchg
lcall
adc
and
xchg
arpl
mov
shld
and
lcall
cld
pusha
cmp
xor
add
pop
sbb
in
push
mov
jb
xor
add
cmpsl
dec
inc
sbb
repz
adc
stc
std
push
xor
stc
add
cmpsb
push
cmp
sub
subb
cmpb
outsl
data16
sub
popa
jmp
mov
imul
outsb
mov
xchg
jmp
leave
movsl
add
dec
arpl
aaa
divl
loop
rclb
lods
ja
incb
popf
add
jg
jge
add
pop
cmp
mov
push
cmp
pop
lds
jne
or
loope
jmp
sbb
xor
lock
hlt
or
inc
or
insl
ds
pop
fdivs
sbb
jb
fidivs
cwtl
int
clc
sbb
bound
adc
stos
ficomps
or
stos
into
push
enter
das
pop
in
lds
sub
les
dec
jbe
fwait
and
xchg
cmp
cmp
sahf
icebp
pop
mov
pop
sub
cmc
sbb
dec
das
push
or
movsb
testb
add
xor
xchg
mov
enter
loop
mov
stc
mov
lods
push
hlt
outsb
lock
xchg
call
divb
fdivrp
or
xlat
push
jae
push
shlb
mov
jp
mov
jp
in
call
scas
xorb
xlat
ret
push
push
cmp
imul
outsl
out
push
or
jb
test
push
push
mov
test
inc
pop
fildll
sbb
imul
mov
xlat
adc
xor
aas
int3
stos
cmp
sbb
pop
add
cmc
lret
xchg
push
inc
loope
jbe
rorl
add
and
mov
jge
aaa
insl
nop
and
pop
jb
bound
ss
movsl
cmp
les
enter
sub
sub
loope
jle
adc
enter
lcall
dec
dec
das
cmpsb
negb
push
mov
fmull
addl
rol
add
arpl
loopne
sbb
adc
negb
mov
test
ljmp
jnp
out
sub
jb
xor
xchg
adc
data16
or
dec
dec
call
stc
fucomi
dec
xor
mov
dec
adc
fisubrs
pop
push
lock
jo
inc
fdivs
aas
in
add
nop
mov
add
pop
push
outsl
sub
fnstsw
or
outsl
call
add
dec
aam
out
push
push
ss
sbb
add
sub
push
pop
mov
dec
inc
insb
call
ljmp
mov
or
aas
cmp
movsb
neg
push
cmp
pop
out
lods
daa
push
mov
xchg
repnz
dec
fmul
jae
xchg
call
scas
leave
push
cmp
xchg
clc
mov
dec
mov
shl
and
sbb
leave
mov
pop
inc
sub
mov
push
push
xchg
aad
insb
jmp
jno
lret
push
xchg
dec
dec
add
hlt
mov
sbb
xchg
inc
push
fbstp
test
inc
es
xchg
lods
call
and
jl
int3
inc
mov
and
shrb
mov
jae
jo
dec
pop
push
scas
cmpsb
pushf
cmp
aaa
cmp
das
shl
ret
mov
popa
test
push
jmp
adcb
adc
lock
add
lret
icebp
lcall
mov
fwait
adc
cltd
jle
add
sbb
and
dec
push
add
dec
lret
push
les
scas
stc
jle
call
or
and
nop
adc
pusha
sub
dec
cmpsb
jne
cwtl
xchg
pop
sti
mov
mov
in
sub
out
pop
ret
pop
leave
in
cltd
mov
lods
xor
mov
or
scas
out
add
fldenv
cmpsl
and
sub
lds
and
call
mov
arpl
sub
push
sub
out
xor
movsl
sub
push
pop
jne
mov
fdivs
ljmp
jne
mulb
loope
xchg
fwait
mov
push
roll
pop
mov
and
xor
push
jae
cmp
cmc
xchg
cmpsl
jmp
into
adc
and
add
les
pop
mov
and
push
and
adc
fmulp
popa
mov
jo
sub
lds
fistps
sub
gs
jno
pop
jge
pop
jb
dec
bound
cwtl
das
push
push
and
mov
jle
lcall
sbb
or
std
jns
dec
sbb
in
cs
out
and
adcl
icebp
dec
push
out
mov
loop
cli
sahf
mov
sbb
push
das
outsb
push
test
ficompl
lret
inc
or
loope
mov
clc
mov
mov
add
sbb
addb
hlt
xor
gs
mov
dec
jg
mov
sub
into
mov
lret
sbb
lods
outsb
subl
cmp
mov
sub
seta
out
das
pop
stc
sub
movsb
aad
daa
pusha
xor
roll
adc
jle
mov
mov
and
inc
xor
xor
icebp
xlat
outsl
dec
jns
rol
hlt
sbb
lcall
jnp
js
adc
mov
negb
dec
cld
xor
mov
mov
inc
sbb
add
xchg
pop
stc
adc
dec
and
scas
lods
add
add
nop
int
xchg
fcmovnbe
shrb
scas
xchg
or
les
iret
pop
dec
sbb
imull
xchg
add
sub
lret
orl
or
test
scas
cmp
jnp
add
add
mov
mov
out
repz
push
jp
not
orl
cs
ficoml
jbe
cmp
add
ja
adc
adcl
cmp
push
in
xchg
cmp
xor
arpl
test
cmp
scas
subl
imul
push
cmpsb
xchg
jo
sbb
mov
mov
mov
add
mov
mov
shlb
sahf
and
mov
xor
and
inc
fsubrs
add
adc
out
mov
jge
jecxz
or
push
mov
std
push
jg
daa
ljmp
loop
imul
push
inc
adc
ret
pop
shrb
pop
fcmovbe
sti
sbb
lods
in
push
inc
dec
inc
or
popf
les
aaa
jns
sbb
std
cmp
mov
jge
dec
xlat
repz
mov
cmp
cwtl
and
cs
lcall
pop
mov
stos
int3
dec
push
inc
adc
pop
and
jge
push
push
cli
xchg
cmc
pop
xchg
adc
mov
std
cwtl
push
cmp
adcl
add
pop
inc
jmp
aas
aaa
xchg
add
sub
dec
addb
in
outsb
or
xchg
addr16
mov
sbb
adc
add
sbb
inc
repnz
inc
sbb
inc
mov
mov
loop
insb
fstpt
loop
repnz
sub
imul
push
jae
xchg
das
mov
jae,pn
leave
pop
int3
lock
ficoml
aad
sbb
scas
xchg
lods
stos
lea
mov
shl
jno
lods
sub
or
inc
cmp
pop
cltd
add
cmp
fsubs
mov
in
xchg
fidivl
scas
push
adc
lea
pop
xchg
popf
lret
fldenv
ret
fs
xor
dec
dec
popa
test
mov
mov
mov
adc
lock
ds
leave
cltd
jl,pt
lahf
leave
adc
repz
dec
inc
or
ret
dec
test
decb
movsb
into
cwtl
jns
scas
jl
add
stc
push
leave
hlt
icebp
sub
and
sbb
and
or
pop
push
fmul
jp
mov
add
out
insb
outsl
pop
or
jno
mov
xchg
adc
xor
aaa
jne
adc
ds
or
inc
adc
sbb
loopne
enter
int3
imul
push
jg
inc
in
add
push
fwait
mov
mov
inc
xchg
aad
push
mov
enter
ficompl
dec
jl
scas
mov
lods
mov
arpl
lods
stos
insb
idivb
dec
mov
in
push
imul
ja
leave
shrb
fstl
lds
in
dec
in
xlat
scas
xchg
cmp
mov
mov
inc
mov
sub
jmp
lcall
loop
fs
mov
push
cmp
xchg
enter
loope
jae
xor
mov
test
xchg
inc
lds
or
sbbl
daa
loope
add
push
jae,pn
and
outsb
inc
jge
mov
dec
mov
jns
and
jecxz
and
mov
aas
movsl
test
adc
out
fnsave
xor
xor
fldl
insb
sub
out
out
inc
and
cld
fwait
out
fst
leave
mov
push
inc
or
call
or
lret
and
inc
add
movsb
std
xchg
rcrl
xchg
fisubrs
and
add
mov
out
add
xor
jl
dec
ficoms
mov
out
arpl
mov
sbb
or
adc
dec
mov
pop
sub
jo
bound
pop
lods
and
sarb
add
shlb
adc
ja
nop
clc
shlb
jbe
adc
std
mov
outsb
add
cmp
andb
mov
scas
jg
lods
movsl
jae
in
dec
cmpsl
mov
fs
enter
xchg
xorb
or
pop
mov
inc
jo
mov
fwait
pop
scas
imul
sub
and
xor
repnz
ss
jg
pusha
or
js
xor
push
int3
iret
pop
sahf
mov
or
enter
xlat
mov
or
daa
dec
scas
sahf
lods
cld
jbe
push
cwtl
mov
dec
movsb
push
sbb
rcl
xchg
icebp
adc
dec
push
sub
inc
xchg
and
adc
push
add
or
subl
jb
in
cmpsl
or
xchg
pop
push
clc
fcmovnu
adc
mov
dec
jbe
xlat
jmp
movsl
shll
loope
in
call
push
xchg
add
mov
inc
rclb
in
cmp
loope
cmp
lret
fcmovbe
jae
test
js
sbb
frstor
loope
inc
insb
add
leave
movsb
mov
pop
or
push
cmp
dec
pop
popa
pop
mov
stc
testb
pop
push
ja
mov
cwtl
jg
test
cltd
xchg
jge
adc
ror
mov
mov
cmpsl
shrb
push
sarl
mov
lods
pop
mov
lock
subl
inc
scas
movsl
dec
sbb
popf
lds
shlb
rcrb
das
jmp
movb
std
sub
faddp
pop
xchg
jge
add
inc
mov
add
jg
mov
out
cwtl
les
and
mov
out
xor
stc
dec
dec
mov
or
jo
sti
inc
adc
pop
jb
lods
pop
cmp
out
aaa
fistl
mov
sbb
push
xchg
fsubrl
cmp
xor
int3
and
push
jmp
jne
dec
inc
in
stos
aam
mov
push
sbb
in
and
addr16
fs
dec
or
mov
outsl
loop
ds
mov
roll
fs
xchg
jno
xor
jmp
lret
lds
adc
inc
sub
rclb
mov
sar
in
adc
imul
mov
ffree
pushw
adc
pop
test
mov
mov
jecxz
fldenv
cmp
call
mov
mov
ja
adc
outsb
lret
mov
lret
add
imul
push
lods
or
subl
gs
in
int3
sti
mov
inc
xchg
pusha
std
or
mov
cs
xchg
jecxz
lock
sahf
fbstp
daa
test
loop
fwait
xor
inc
jl
jbe
or
hlt
out
fldl
and
xchg
movsb
inc
or
sbb
cmp
fcomps
insl
scas
pop
imul
popf
fldt
mov
js
jbe
aaa
popa
loop
shr
fstpt
jae
and
adc
rcll
repnz
sbb
int3
in
push
ret
and
dec
lret
mov
xchg
outsl
inc
enter
sub
popf
cmp
sub
cmp
mov
stos
js
es
imul
fs
mov
cmpsl
sub
add
jg
sbb
aam
fwait
inc
mov
sbb
or
std
aad
pop
out
cmpsb
idivl
call
xchg
push
popa
popf
fnstcw
xor
and
test
mov
scas
sti
dec
push
push
shr
dec
fsubr
xor
xor
mov
mov
stos
pop
mov
dec
pusha
aas
mov
or
call
ljmp
icebp
push
dec
into
ljmp
add
adc
push
inc
fdivrs
std
mov
jno
push
push
jp
and
push
test
in
in
xchg
dec
rcl
outsb
and
mov
inc
test
and
outsl
leave
push
inc
stc
dec
xor
dec
xor
dec
mov
add
movsb
sti
cmp
add
jnp
pop
lcall
sti
jno
pop
sub
cwtl
sbb
push
dec
adc
adc
stos
ss
fwait
add
lret
pushf
or
fsub
loop
daa
jecxz
jb
fbstp
mov
or
into
sbb
and
cmc
pop
add
ljmp
cli
clc
into
cmp
les
push
push
mov
xlat
dec
sub
icebp
negl
xchg
xchg
lods
push
es
push
jmp
jle
int3
and
jo
mov
xchg
shll
or
std
add
mov
or
aas
outsb
mov
les
or
in
lahf
and
sti
sub
dec
popa
mov
xlat
es
adc
xor
jae
or
inc
pop
mov
ret
cltd
mov
sbb
out
mov
popf
jno
mov
push
mov
cltd
inc
outsb
mov
inc
cmp
push
mov
mov
pop
jo
mov
enter
jle
aaa
inc
and
pop
mov
int
jnp
ljmp
in
cltd
mov
push
add
fildl
mov
sub
jg
test
xchg
mov
je
mov
mov
js
mov
or
pusha
bound
out
mov
fdivl
xchg
dec
xchg
sbb
ds
sbb
ficomps
mov
nop
pop
nop
mov
cmpps
stc
ja
subb
ret
jmp
sbbl
lret
clc
mov
fadds
inc
fmull
cmpsl
or
ljmp
mov
leave
pop
xor
xor
frstor
inc
lods
xor
xchg
insb
jge
pop
pop
xor
xor
gs
add
aam
lea
mov
fdivrs
call
lcall
out
mov
mov
icebp
or
xchg
sub
je
les
dec
in
xlat
fstps
pop
in
bound
mov
out
aam
xor
pop
ja
jae
ret
nop
in
pop
inc
ret
xchg
hlt
movsb
movsl
enter
mov
adc
loopne
loope
in
pop
jg
lods
ja
fwait
push
add
fadd
sub
testl
insl
out
mov
out
xchg
pop
sub
jne
jbe
sbbb
movsl
mov
fildl
in
daa
mov
xor
scas
xor
xor
int
sbb
fs
ret
mov
jge
sub
leave
xor
push
xchg
bound
xchg
adcl
in
push
inc
jl
jo
add
sarb
adc
aas
cld
jo
xor
cld
mov
jbe
pop
sub
add
repnz
sub
xchg
loop
cmpsb
aaa
push
out
add
iret
and
xor
icebp
fwait
and
pop
jne
daa
sahf
clc
xchg
xor
xlat
outsb
or
cmp
sahf
imul
mov
fidivs
js
cmp
repnz
out
xchg
jecxz
stos
mov
popa
dec
pop
cwtl
pop
pop
mov
loop
icebp
and
scas
adc
das
xchg
negb
clc
fadds
jne
xor
cs
push
push
mov
lods
or
dec
imul
xchg
pop
jge
add
mov
pushf
mov
clc
pop
and
jae
inc
pop
imul
insl
in
aas
mov
shll
movsb
clc
xchg
pushf
xor
clc
adc
out
push
ds
push
pop
pop
sub
pop
sub
mov
push
inc
or
movsl
pop
xor
lcall
pop
imul
sahf
inc
vprotq
pop
pop
fisttpll
push
xor
movsb
cmp
cmp
mov
dec
push
cwtl
int3
cltd
and
negb
popf
add
sbb
popf
pop
jnp
pushf
lret
push
out
aas
dec
mov
jl
mov
push
mov
or
test
out
pop
es
cmp
jne
xor
pop
nop
cli
test
and
dec
push
shr
ret
xor
mov
pop
add
loop
xor
adc
lahf
out
adc
sarl
pusha
mov
sti
jecxz
add
xor
xor
insb
push
insb
dec
xchg
cltd
aad
in
pushf
mov
add
jae
lret
push
pop
popf
pop
xchg
shll
bnd
jle
or
xchg
je
mov
sub
sbb
push
cmp
pop
test
mov
or
push
pop
xchg
mov
cwtl
ret
dec
outsl
sbb
pop
mov
into
fwait
cmc
insb
sbb
lods
jmp
push
mov
popa
testb
loopne
bound
mov
jp
dec
cmp
or
imulb
dec
or
xor
into
or
shl
dec
lock
in
stos
mov
push
sarl
mov
rcl
sbb
adc
iret
jmp
leave
jae
cmp
nop
pop
and
insb
mov
xchg
fidivrl
push
movsl
lock
adc
add
shll
rol
and
xchg
jge
mov
call
leave
shll
push
fnstsw
cmp
mov
std
push
jbe
sbb
push
mov
mov
jbe
rcrb
pop
lods
inc
or
stos
ss
test
sub
pop
scas
cmp
lds
aaa
iret
xor
xchg
cmp
jg
and
mov
es
push
inc
mov
xor
addr16
jle
lods
int3
and
pop
push
loope
addr16
sub
push
jo
push
cmp
push
lahf
push
xchg
lea
sub
pop
cmp
fisttpl
mov
mov
inc
test
jmp
mov
inc
fldl
cmpsb
jb
sbb
aad
push
insl
shrb
cmp
sub
pop
mov
xor
pop
push
call
aaa
jmp
jmp
push
push
imull
bound
push
and
sub
inc
loopne
jae
cmc
xlat
aad
pop
in
in
int
mov
stos
push
xlat
pop
inc
sbb
enter
int
enter
fidivs
sub
fucomi
jle
inc
sub
sub
push
xchg
fidivl
sahf
push
add
adc
test
or
loop
rorl
mov
aad
mov
add
pop
pop
xchg
sub
jne
inc
dec
jl
pushl
cmpsl
add
inc
out
mov
mov
ficoml
sbb
jae
cltd
dec
lahf
test
mov
pop
lcall
sub
xchg
sub
push
mov
scas
ljmp
jp
int3
jae
mov
in
hlt
pop
subb
and
rolb
mov
aaa
adc
test
sbb
loope
jae
aas
sbb
pop
ret
shll
push
inc
jnp
lods
aas
mov
ret
adc
mov
mov
cmp
repnz
shlb
mov
icebp
int3
jno
aam
roll
inc
rol
add
cmpl
jle
xchg
cmc
xor
pop
or
pop
stos
mov
adc
scas
or
and
es
call
std
jbe
imul
cmp
enter
mov
aaa
sarl
mov
sub
into
push
push
add
lea
fisubrl
push
std
xchg
mov
testl
sahf
pop
in
pop
iret
and
xchg
mov
repz
add
mov
mov
mov
xchg
ret
sub
les
leave
xchg
fs
dec
sub
movsl
popa
add
xor
mov
inc
push
mov
xchg
cwtl
jns
add
xor
pop
addl
adc
arpl
das
ss
ds
jnp
in
fnstcw
cmpsl
jnp
arpl
testb
std
ret
add
pusha
mov
cmp
clc
stos
nop
mov
mov
roll
aaa
pop
dec
test
scas
sub
rorb
leave
xor
js
imul
cmc
cmp
xchg
adc
mov
js
cmc
pop
out
pop
jnp
fs
fsubs
jno
push
mov
ret
cltd
mov
push
in
add
mov
pop
aaa
xchg
inc
fistps
pop
adc
call
mov
sub
dec
mov
shll
xor
dec
outsb
into
push
stos
inc
div
movsb
mul
fsubrl
out
fucomip
jae
sbb
incb
mov
shll
data16
fcoms
inc
or
pop
and
arpl
test
daa
jge
push
add
inc
jge
sahf
mov
int3
sub
xchg
enter
dec
add
or
sub
and
dec
mov
and
fmuls
push
stos
adc
inc
loope
cmp
xchg
push
mov
fpatan
subl
into
push
adc
pop
jbe
aaa
inc
push
add
test
ds
jl
pop
call
mul
jg
loop
aas
movb
pushf
jge
sbb
dec
inc
sub
movsb
fsubr
push
aas
jb
outsl
icebp
xchg
mov
mov
loope
xor
mov
es
adc
shlb
pusha
xor
push
fbld
xor
ljmp
inc
mov
leave
loop
push
enter
call
cmp
sub
cmp
adc
dec
jo
xchg
pop
sahf
dec
lcall
out
add
jle
mulb
push
fs
repz
lds
sbb
or
imul
pop
inc
imul
xchg
or
das
add
cmp
in
imull
mull
in
mov
pop
out
adc
push
stos
mov
test
cmp
push
mov
xor
loope
shll
pop
fmull
lods
test
popa
xchg
arpl
js
pusha
ficomps
inc
xchg
add
push
sbb
cmpsl
pop
dec
mov
fiaddl
gs
push
in
push
pop
stos
xor
loopne
mov
dec
xor
pop
inc
pop
scas
inc
gs
xchg
pushl
push
xor
jle
mov
jle
cwtl
cmp
rcll
mov
pop
lea
adc
daa
cltd
rcl
xor
jb
in
mov
mov
imulb
xor
pop
aaa
movsb
adc
inc
xor
or
jne
dec
lret
pop
leave
test
mov
and
cli
mov
scas
mov
pop
mov
fwait
pop
mov
dec
orb
mov
and
mov
out
lcall
xor
cmpsl
out
mov
mov
out
loopne
pop
ss
mov
mov
pop
sub
cmp
lock
aam
cld
inc
jmp
and
pop
xor
repz
mov
mov
cmp
sub
loopne
inc
push
lret
cmp
mov
xor
and
xchg
fmulp
loop
mov
pop
mov
dec
stc
cltd
pop
mov
scas
dec
sub
cmp
dec
in
or
es
clc
bound
into
ljmp
xchg
mov
or
and
and
rorb
cs
out
rclb
ss
dec
and
mov
adc
adc
add
and
mov
call
cmpsb
push
mov
adc
jbe
ss
and
mov
cmp
repz
inc
push
and
leave
mov
adc
pop
mov
cld
add
sahf
mov
dec
sbb
mov
jne
insl
aas
stc
mov
or
mov
out
sub
or
jg
loopne
popaw
pop
jno
mov
ret
out
cmp
jns
in
ret
movsl
push
jne
jae
mov
out
push
sbb
mov
push
sub
int
and
add
mov
insl
and
js
shll
pop
lock
pop
out
mov
hlt
hlt
std
xor
inc
push
xor
sti
inc
iret
cs
xchg
inc
or
sahf
jl
jl
jnp
cli
add
lret
ret
push
sub
stos
lret
jns
jle
lea
xlat
and
or
sbb
xchg
cmpsl
out
movsb
sahf
out
mov
sub
int
fmull
cld
aas
in
test
shrl
out
sarb
xor
imul
gs
std
cmc
sti
pop
jnp
std
mov
inc
adc
xchg
sbb
xchg
push
in
pop
arpl
fistl
jae
pushf
mov
xor
dec
xor
xor
cs
cmp
or
and
mov
pop
or
decb
test
push
out
and
cltd
mov
adc
xor
mov
pop
lret
insl
jp
xchg
scas
jmp
dec
cmp
stc
and
fidivrl
or
dec
push
mov
mov
mov
dec
data16
cmpsl
pusha
mov
pop
xchg
xchg
cltd
hlt
rorb
mov
fadds
inc
popf
test
movsb
jle
push
ja
shl
adcb
inc
xchg
mov
or
das
jmp
mov
mov
push
aad
mov
mov
adc
lahf
and
es
or
pop
lea
sub
shl
movsl
gs
lods
mov
pop
imul
daa
fisttps
les
in
jmp
cmp
scas
arpl
loopne
mov
outsb
andl
mulb
test
mov
xchg
pop
push
mov
pop
xor
jno
or
pop
xor
rcrb
cmc
sarb
pop
jns
push
dec
stos
hlt
lcall
lret
and
dec
cmp
loope
pushf
sbb
popf
add
adc
ficoml
repz
in
movntq
cs
add
movsl
out
imul
inc
andb
adc
xchg
inc
or
scas
fidivl
ja
mov
push
and
cmp
pushf
sub
scas
popa
sbb
adc
cmpsl
xchg
pop
fxam
jbe
fs
mov
inc
frstor
es
fdivrl
arpl
clc
cld
int3
jge
push
cmp
xchg
push
call
dec
incl
sahf
out
push
jne
push
mov
or
popa
jmp
mov
icebp
testb
adc
dec
cmpsl
jae
call
sbb
mov
rcrb
dec
call
mov
jle
fcoms
test
xchg
outsl
pushf
xchg
hlt
push
and
jp
daa
mov
adc
jne
adc
outsb
mov
adc
push
or
hlt
in
sub
rcll
lret
jns
xor
dec
add
fldcw
pop
xchg
pop
imul
xor
add
cltd
aad
stc
push
jbe
mov
lods
jle
mov
sub
push
maxps
and
popa
xor
pushf
xchg
mov
xlat
addb
and
shll
test
adc
flds
cwtl
inc
sub
pop
add
mov
shl
cmpsl
imul
enter
sub
pop
xor
cmpsl
fsubrs
xchg
ret
hlt
inc
xchg
sub
test
rclb
loopne
lods
aad
imul
xor
dec
dec
mov
mov
xchg
ret
or
stos
movsl
shrl
fbstp
es
rorb
out
adc
sbb
pop
aad
mov
sub
sub
call
pop
outsl
add
int3
inc
xor
or
push
cltd
mov
jae
jl
mov
repz
xchg
leave
push
push
xchg
jne
add
sbb
mov
jnp
xchg
add
enter
je
cmpsl
icebp
dec
xchg
add
pop
outsb
arpl
orb
dec
data16
fisubs
push
lea
cmp
rolb
xor
jp
jo
int3
inc
push
popf
dec
mov
frstor
mov
ds
stc
cmp
addl
jnp
movsl
and
push
xchg
pop
in
cld
stos
jl
out
filds
ss
xchg
or
xchg
out
jnp
in
test
dec
inc
xor
pop
pop
adc
xchg
ficoms
in
sbb
adc
call
fisubrl
test
cmpsb
test
and
test
addl
fwait
leave
jp
sub
push
ja
jle
add
pop
leave
lds
mov
adc
pushf
clc
dec
sbb
bound
push
mov
ss
dec
xor
sbb
inc
repz
cs
cwtl
inc
loopne
inc
add
and
or
push
stos
mov
ja
mov
or
mov
insb
and
or
or
pushf
and
sbb
jl
jmp
jns
cli
and
xchg
test
inc
xlat
and
lret
cmpsb
out
jmp
and
ficoml
push
mov
or
dec
xlat
jnp,pt
push
popa
js
jp
nop
lcall
inc
mov
adc
cld
movsb
mov
adc
scas
hlt
mov
lods
or
cld
push
sbbl
cmp
stc
cmp
out
adc
daa
loope
sub
sub
dec
rclb
imul
and
jb
rorb
dec
imul
imul
push
or
pop
adc
ss
shrl
ljmp
push
popf
out
or
in
out
rol
pop
jg
xchg
aas
or
ljmp
imul
jle
rcrb
outsl
inc
cwtl
fdiv
shrb
cmp
lds
pop
inc
adc
lahf
ret
test
add
lret
loope
add
arpl
scas
xchg
add
icebp
pop
out
outsl
adc
fidivrl
shrl
mov
test
or
mov
int
aam
mov
dec
cltd
outsb
mov
into
jmp
aad
ss
and
inc
cs
cld
push
sbb
popf
jno
xchg
ficoml
call
clc
pop
mov
lret
mov
mov
jge
push
pop
dec
mov
xchg
jmp
enter
mov
lock
jne
aam
stc
std
in
out
mov
inc
mul
dec
sub
insb
lahf
pop
xchg
mov
sub
and
mov
aam
pushf
repz
mov
fcoml
daa
mov
es
pop
and
pop
ljmp
cmpsl
and
mov
sub
lods
push
lds
and
pop
or
ror
ljmp
pop
cmpsl
xor
cwtl
inc
stc
jge
adc
stos
xor
outsl
xchg
adc
mov
sub
fsubs
inc
sbb
addr16
ds
pop
push
pop
sahf
jecxz
leave
je
punpcklbw
push
pop
lds
es
mov
inc
xor
in
dec
lods
mov
fldenv
out
adc
fcmovnbe
push
dec
loopne
cmpsb
lret
mulb
and
xor
cmpsl
sub
aaa
sbb
dec
inc
fmull
mov
xchg
ror
xchg
sti
mov
xor
add
pushf
push
push
les
insb
aad
xor
inc
popf
jns
lds
int3
or
cmpsl
pop
mov
cld
jo
iret
mov
or
lret
lahf
mov
mov
and
jns
fdivl
adc
xor
cmp
iret
cltd
imul
add
loopne
push
inc
dec
push
lcall
lods
dec
stc
fbstp
xchg
out
pushf
mov
sub
push
sbb
add
xchg
mov
xor
pop
sub
cmp
in
xchg
lret
xchg
enter
mov
psrlq
ret
cwtl
and
lods
ljmp
cmp
jbe
int
inc
pop
ret
insl
jno
data16
mov
push
cltd
mov
cmp
xor
bound
xor
add
int
fdivrl
cmc
lret
mov
inc
pop
int3
mov
pop
sbb
adc
je
std
into
sub
adc
xchg
movsl
jecxz
pusha
dec
scas
push
insl
mov
test
pop
pop
or
hlt
arpl
xor
jg
mov
mov
pop
mov
pop
fstps
push
cmp
mov
mov
inc
movsl
mov
mov
cltd
or
jno
add
dec
mov
lock
pusha
fwait
mov
push
inc
mov
das
lea
push
adc
mov
push
sbb
popf
ret
sbb
or
adc
push
add
cmp
pushf
pop
push
insb
and
pop
addl
pop
or
ja
xor
xor
jg
add
leave
movsb
test
xchg
xchg
outsl
lds
and
xchg
test
rcl
inc
and
jb
xor
insl
test
mov
xchg
fcmove
dec
negb
jmp
inc
mov
push
or
call
mov
xlat
inc
popl
lret
jnp
out
add
mov
or
mov
fdivrp
xor
scas
inc
fistl
pop
add
fwait
jle
pop
dec
cld
outsb
fcoml
mov
and
loop
test
fwait
movsl
or
xor
imul
ja
jmp
ficoml
das
inc
scas
out
add
and
inc
push
or
hlt
sbb
mov
mov
jp
fisubrs
ja
gs
mov
les
dec
jmp
ja
outsb
aaa
out
es
push
test
cmpsb
loop
hlt
push
in
sarl
aam
in
jbe
insb
jns
fbld
add
push
sub
lods
aad
jbe
cmp
ret
jmp
sbb
adc
and
lret
xor
lea
fsubrl
mov
jbe
lods
shrl
mov
stos
mov
mov
xchg
es
inc
and
ss
pusha
pop
arpl
pop
jp
stos
fildll
test
cmp
mov
mov
stos
push
pop
sahf
outsl
sahf
popf
cmp
int3
enter
sub
add
ss
mov
loope
jne
push
sahf
dec
int3
xor
dec
pop
test
shrl
push
test
xor
sti
fdiv
mov
sub
daa
sub
sarl
in
cwtl
out
cmpsb
imul
dec
push
push
std
cs
cmpsl
popf
cmc
rcrl
xor
jns
and
cmp
cli
in
aas
add
mov
mov
cmp
pop
fldenv
pusha
rcll
lds
sub
or
xchg
cmc
adc
fisttpll
insl
stos
xchg
test
jp
data16
pushf
je
mov
add
dec
test
lret
cli
mov
jge
stos
sub
cmp
cmp
pop
sub
inc
lods
add
sbb
cs
adc
lcall
sarb
js
xlat
xor
sbb
cmp
mov
inc
jne
pop
out
pop
pop
adc
bound
push
sub
xchg
or
jns
xchg
int
popa
adc
jns
das
stos
mov
in
or
lds
xchg
into
insl
cmp
data16
pop
fnsave
int3
or
xorb
xchg
dec
or
xchg
push
pop
and
xor
movsl
or
inc
adc
cld
faddl
test
aas
jl
stc
mov
shll
mov
mov
ja
fldt
pop
in
mov
test
adc
in
xchg
lock
adc
sti
fs
leave
cs
inc
fnsave
andl
adc
ret
lods
fcmovnb
daa
ja
jge
push
ds
scas
xor
ret
stos
loopne
mov
lret
dec
dec
sub
popf
pop
clc
loop
jg
mov
pop
jno
xor
mov
repnz
leave
push
leave
in
cmc
or
fcomp
cmp
push
push
xchg
pop
adc
mov
imul
enter
out
mov
jnp
and
sub
push
pushf
sub
fstl
sbb
jnp
sarl
dec
add
fisubrs
insb
pop
mov
xchg
mov
adc
out
aas
enter
daa
sti
xor
aad
mov
adc
fstpl
or
sub
sub
flds
rcll
dec
fisubl
icebp
cld
outsl
adc
dec
sub
out
adc
sarl
das
cwtl
add
push
inc
ds
cmpsl
scas
cmp
or
sub
fistpll
insb
jg
dec
pop
pusha
pop
stos
loopne
push
lods
adc
mov
outsl
pop
xchg
mov
rorb
sahf
xchg
pop
hlt
jge
inc
out
jmp
jge
fldenv
xchg
sbb
jnp
xchg
arpl
inc
inc
xor
push
xchg
fmuls
inc
pop
mov
jge
test
cltd
xor
xchg
aas
xchg
pop
push
jg
mov
loope
fwait
mov
ja
pop
aam
out
sub
hlt
mov
pop
jbe
xchg
das
push
xchg
inc
mov
test
loope
mov
into
cld
cs
fisttps
xlat
out
mov
pusha
iret
cli
adc
push
stos
ss
popf
cwtl
fwait
shlb
push
xlat
pop
int3
pop
jb
repz
outsl
mov
mov
mov
aad
adc
and
mov
pop
test
add
pop
mov
push
or
adc
pushf
push
push
or
int3
addb
cmpsl
ss
in
jne
jb
jnp
dec
subb
pop
out
mov
imul
ret
aaa
jb
or
sbb
mull
rcrb
xchg
jae
push
sar
xor
cwtl
pushf
dec
jmp
iret
or
push
xchg
into
filds
fcomps
cmp
add
scas
mov
push
cmp
filds
ret
cmc
cltd
repnz
dec
aas
and
repz
push
popa
test
push
pop
push
xchg
and
flds
mov
pop
ss
insb
mov
pop
shlb
mov
mov
mov
jg
mov
mov
lods
mov
xor
ljmp
jbe
cmpsb
test
subl
dec
push
pop
cld
mov
imul
repz
mov
or
push
jbe
loop
pop
sbb
dec
out
je
sbb
or
mov
fisttpl
lock
mov
xchg
mov
sbb
in
jmp
cmp
pop
or
xchg
fcomip
repz
arpl
sbb
imul
sbb
cmp
movsb
fmul
test
in
xchg
clc
test
test
sbb
dec
jbe
push
fsubr
hlt
repnz
pop
bound
pop
jp
or
imul
sbb
addl
xchg
xchg
cmp
sub
or
and
in
mov
lods
int3
jnp
aaa
aas
dec
sub
push
lods
jmp
push
repz
push
inc
fdivrl
add
sub
or
dec
inc
addr16
xchg
cmp
std
sub
call
leave
jle
push
fistpll
repz
cli
loopne
mov
pop
lea
pop
dec
movsb
shl
clc
pop
scas
adc
sahf
dec
pop
mov
add
mov
xchg
push
add
addl
inc
addl
scas
mov
dec
xchg
sbb
xor
cs
fistpll
in
sbb
push
push
daa
inc
ret
push
mov
loope
or
out
jge
test
mov
es
aaa
jb
pop
mov
adc
loopne
jae
xchg
push
jno
cli
push
sbb
xor
mov
inc
fmul
push
outsl
pop
aam
push
dec
int3
mov
xchg
js
xchg
repz
pop
push
inc
dec
test
into
and
lret
xor
sbb
dec
and
popa
mov
outsb
inc
in
mov
in
jp
movsb
shl
xchg
in
aas
or
std
and
loope
xchg
add
in
out
pop
cmp
cmp
pop
add
sbb
jle
lahf
push
fmull
repz
xlat
cmpsb
fwait
sub
repz
or
negl
cli
sbb
cmp
mov
mov
cmp
mov
xor
jnp
jno
xor
xor
xchg
je
mov
cmp
dec
movsb
or
jg
dec
or
enter
push
push
push
jecxz
out
fldenv
mov
jle
std
jae
jle
push
inc
ljmp
sti
cwtl
push
mov
xor
dec
or
add
xor
insl
test
les
dec
and
and
fstps
mov
in
push
xchg
mov
dec
mov
pop
cmpsb
roll
data16
add
xchg
sbb
ret
mov
dec
inc
pop
lret
lret
loop
mov
sahf
mov
mov
aam
test
jmp
sbb
jnp
sbb
and
lods
lcall
mov
mov
sbb
mov
jmp
push
inc
push
mov
xlat
aad
xor
arpl
push
jo
clc
jbe
adc
addr16
adc
pop
out
lret
mov
xchg
push
subl
in
repnz
cmp
fstpl
sbb
lods
cld
stos
fmuls
sbb
pop
lock
xchg
jns
pushf
lcall
int3
sub
xor
mov
cmp
inc
pusha
fcmove
iret
push
push
repz
sbb
adc
adc
ret
push
pushf
pop
rcll
sbb
jl
ds
mov
xor
xchg
or
dec
lods
jne
aas
push
add
rcll
lea
stos
clc
cltd
mov
arpl
pop
push
hlt
jmp
mov
add
mov
hlt
add
and
dec
cmp
inc
inc
dec
aam
into
jmp
jmp
or
aad
test
ficompl
pop
sti
dec
jg
daa
add
pushf
xchg
in
pop
shll
mov
mov
inc
sti
jno
pop
or
mov
push
sbb
lods
cmp
nop
hlt
mov
sbb
mov
adc
nop
mov
jo
test
inc
in
cwtl
and
inc
ja
push
frstor
out
mov
cmp
call
mov
xchg
cmpsl
lods
pop
mov
xor
fsubl
inc
mov
fbstp
fs
or
mov
jae
jl
clc
cli
dec
sbb
jne
fsubrl
ret
xor
sahf
divb
shll
add
xchg
jl
xchg
sbb
dec
idivl
adc
sub
xor
push
pop
adc
mov
mov
adc
pop
mov
data16
fucom
cmpsl
test
scas
mov
stc
or
dec
es
pop
cmp
addr16
mov
movsb
sbb
daa
push
test
fmuls
mov
cmp
mov
and
fcomip
dec
add
or
push
fisttps
mov
xor
xchg
je
mov
test
jae
mov
xchg
mov
fmuls
scas
and
dec
or
scas
xchg
hlt
sub
xchg
jnp
sub
leave
aas
cs
or
mov
mov
jp
mov
repnz
or
test
in
and
iret
frndint
cs
fucomip
cmpsb
sub
shlb
push
lahf
push
adc
push
jge
mov
jl
xchg
jecxz
sbb
sbb
loop
loope
jge
les
sti
adc
sub
lock
std
mov
adc
ret
test
mov
rol
movsb
sbb
stos
lret
iret
rcll
es
cmp
movsb
xor
fadds
sbb
pusha
jne
and
dec
aad
pop
aaa
outsb
addb
andl
cmp
or
pop
out
mov
fdiv
outsl
gs
xor
lahf
ret
scas
cli
inc
icebp
push
mov
mov
add
lds
sub
cmp
test
mov
mov
lahf
bnd
mov
rcl
xor
and
xlat
std
mov
icebp
xlat
xor
aam
fwait
inc
icebp
daa
iret
dec
pop
mov
ret
pop
push
adc
outsl
cmpsb
push
push
adc
mov
fdivrl
push
jo
mov
lds
or
push
mov
int
sbb
in
sub
push
mov
or
add
mov
sbb
push
ja
or
and
inc
sub
popa
fs
xchg
add
mov
lret
sbb
adc
lahf
clc
sahf
dec
pop
adc
js
aad
mov
dec
adc
cmp
cli
cs
addr16
vmwrite
shrb
push
xor
popl
lods
sub
jno
mov
scas
sarb
dec
cli
xchg
mov
mov
inc
jg
notl
dec
int3
aas
xor
in
dec
adc
push
jo
adc
mov
in
loope
pop
notl
xor
sbb
mov
cmp
or
scas
in
pop
rcrb
sahf
test
push
pusha
sub
push
or
testb
mov
ffreep
add
inc
mov
sub
lods
xchg
add
rcl
dec
inc
test
cmp
add
dec
in
adc
sub
std
sbb
jbe
lret
dec
ret
cltd
in
sub
jo
cmp
sub
dec
fildl
fsubrs
xchg
popf
mov
imul
jne
test
adc
pop
jnp
in
xchg
pop
inc
xchg
andw
push
cwtl
xor
sub
mov
stc
mov
cmpsb
mov
bound
imul
sti
sbb
iret
in
jmp
pushl
inc
lret
pop
mov
push
out
mov
sub
movsb
ds
jl
pop
and
cltd
pushf
xor
mov
test
fcompl
jecxz
dec
in
icebp
fiaddl
jne
xchg
sbb
and
nop
adc
xchg
and
dec
cmpsb
add
xchg
out
inc
xor
inc
sti
pop
or
cmp
sarl
jo
dec
iret
jecxz
outsb
stc
jle
xchg
repz
adc
nop
decb
js
add
xchg
fidivrs
iret
fdivrs
mov
xchg
add
cmpsl
sub
ja
xchg
stc
adc
imul
push
les
fcomps
lods
bound
jg
ja
push
lods
insb
mov
add
push
xor
pushl
sub
mov
mov
cmp
jmp
cmp
sub
lahf
popl
test
mov
pop
out
not
scas
loop
ret
and
sbb
cmp
in
cmpsl
clc
fiaddl
mov
xor
cwtl
sub
add
sbbb
jp
mov
push
pushl
xchg
inc
je
mov
jns
gs
dec
insl
inc
cmp
insl
pop
mov
mov
push
jl
mov
sbb
test
loop
mov
lea
std
mov
repnz
and
popf
sub
lret
movsb
out
jp
adc
xor
xor
fsubrs
jmp
and
insl
pop
push
jecxz
xchg
aas
lret
xchg
or
sbb
dec
dec
push
ds
fstpl
test
or
shlb
loope
lock
mov
scas
sub
ss
das
sub
mov
std
cmc
pop
add
sbbb
pop
xor
cmp
rcrl
popf
andb
or
cmpsl
ret
fsubrl
ds
test
in
mov
sahf
jno
mov
xor
xor
out
out
daa
lods
add
jge
xchg
ficoms
sub
cmp
cmp
dec
call
int3
sbbl
mov
dec
pop
pop
sbb
and
pop
out
mov
ds
jae
xorl
iret
push
cmpsl
inc
div
jbe
ret
sbb
mov
add
hlt
mov
mov
sbbb
out
push
ja
std
leave
in
and
add
sub
inc
testl
xchg
stc
popf
outsb
push
adc
mov
add
scas
lea
xor
andb
or
rolb
xor
gs
xchg
ss
out
dec
xchg
sti
int3
shlb
xchg
movsl
fs
inc
inc
lret
push
push
bound
push
mov
test
fadds
lret
pop
dec
sbb
pop
push
jge
adc
mov
dec
iret
fs
sbb
adc
int3
xor
ss
mov
ret
in
cmc
mov
dec
xchg
jmp
xor
pushf
int3
fisttpll
mov
push
lahf
jp
lea
nop
fisttpl
loop
not
mov
xchg
mov
jbe
inc
test
or
cmc
push
sub
cltd
scas
rcl
or
test
jg
mov
les
ffreep
inc
jg
and
sbb
cmc
ljmp
pop
ficompl
add
rcrl
inc
fsts
mov
fidivrl
pop
loopne
frstor
rolb
lods
pop
adc
sub
ficoms
cmp
addr16
xchg
or
fsubrs
sarl
fadds
add
push
xchg
imul
outsb
sub
dec
popf
cwtl
dec
sbb
push
test
inc
adc
aas
sub
dec
shll
push
push
xchg
mov
lret
jae
in
popa
stos
cmpsb
jmp
dec
mov
popf
pushfw
clc
stc
rolb
sbb
test
movsl
pop
mov
xlat
lods
add
dec
dec
js
addr16
push
je
jg
outsb
stos
xlat
enter
loop
and
fs
mov
loope
xchg
adc
insb
jns
gs
lds
inc
push
adc
in
jno
dec
pop
jne
iret
xchg
ds
cmp
cld
mov
mov
mov
lock
leave
xchg
xor
mov
jp
ficoml
inc
and
jge
mov
push
imull
xchg
test
jae
xor
and
cmp
iret
fstpt
and
jecxz
stc
out
inc
jmp
xor
jl
mov
xor
pop
divl
push
dec
sub
xchg
lock
inc
jne
sbb
sarl
imul
mov
aas
inc
xor
rcrl
inc
jo
sbb
ljmp
jns
lret
rol
mov
jge
mov
dec
in
andb
or
sub
sbb
lcall
lcall
mov
jb
inc
insl
enter
into
push
xchg
addr16
mov
jo
cs
inc
mov
rcrb
add
xchg
pop
mov
xor
stos
decl
movsb
jne
je
lea
pop
cmc
pop
sbbb
adc
or
insb
sbb
inc
jp
mov
aad
xor
es
cmp
hlt
repnz
push
call
jge
in
cmp
add
mov
cwtl
jp
inc
lods
je
out
imul
enter
xchg
shll
jmp
add
js
inc
and
popf
mov
aaa
sahf
dec
rcr
and
and
rolb
decl
jmp
push
push
lods
fwait
sahf
dec
mov
and
add
lods
jae
jno
jp
out
cltd
inc
or
sub
mov
xchg
push
rol
xor
dec
xchg
in
pop
shl
outsb
inc
out
dec
out
ret
mov
jne
fwait
hlt
mov
inc
ds
fimuls
sub
jbe
lds
stos
jmp
adc
mov
fwait
sub
xor
xchg
cld
imull
test
ljmp
mov
add
mov
loopne
loope
add
pop
push
jbe
in
adc
setnp
enter
fldcw
xor
test
mov
lds
pop
pusha
pop
data16
push
mov
sub
shrb
sub
lods
add
fldenv
mov
ds
in
inc
shll
inc
or
adc
jmp
aaa
inc
adc
mov
sub
pop
test
jno
test
sub
cmp
xchg
jo
dec
jb
mov
adc
leave
cmp
adcb
dec
out
push
mov
cmpsb
cmpsb
push
add
pop
mov
mov
ds
push
mov
jnp
aas
inc
push
dec
xchg
mov
loop
pop
sbb
xlat
mov
popa
jae
in
test
sub
mov
xor
mov
cmp
sbb
jecxz
push
cmp
stc
cmpsl
fwait
and
push
popf
sbb
push
jo
push
arpl
cmp
sahf
fldenv
ror
in
jecxz
std
fadd
shl
mov
int
xlat
lcall
adc
inc
jge
arpl
rcrb
add
inc
shr
jge
in
mov
enter
lock
jle
sahf
mov
fsubr
imul
mov
xor
or
add
mov
lods
jp
in
popa
xor
pop
mov
inc
push
cmc
xor
xchg
sub
sub
fdivr
or
das
bound
ror
mov
cwtl
into
aaa
xor
in
imul
pop
pushf
jno
add
ret
sbb
pop
insl
pop
xchg
jnp
mov
test
mov
dec
push
mov
sarb
repz
and
inc
cwtl
push
outsb
pop
subb
mov
jns
loop
addr16
sbb
cmp
negl
inc
jae
imul
push
and
dec
push
je
cmp
jge
out
xchg
mov
addl
pop
xor
nop
mov
sub
xor
mov
in
push
jns
loope
cmc
ror
out
and
cmp
mov
cmpsb
cmp
out
sbb
shll
pand
mov
fidivrl
adc
dec
push
sbb
jo
or
push
fwait
add
sbb
cltd
cmp
dec
sub
and
push
and
or
popf
aad
jne
roll
adc
sbb
test
inc
cmpb
out
aam
xlat
orb
jnp
mov
jg
sbb
jle
outsl
mov
adc
pop
cmp
aam
mov
mov
notl
pop
scas
sbb
jp
movntps
sbb
jae
cmpsl
es
or
sub
jle
call
add
daa
sbb
cs
mov
inc
lea
adc
call
in
inc
mov
aas
dec
xchg
dec
bound
rcll
stos
outsb
sub
lcall
mov
push
cltd
push
mov
pop
mov
and
loopne
cmp
push
lret
push
mov
int3
dec
push
mov
and
add
mov
mov
xor
dec
fsubl
jb
dec
loop
inc
sbb
sbb
test
mov
inc
outsb
push
test
jae
jmp
dec
nop
enter
negb
dec
dec
es
add
dec
imul
outsl
rcr
mov
xor
jmp
stos
mov
jle
test
inc
mov
addr16
pusha
popa
or
jmp
lret
pop
cmp
cli
int3
jo
push
mov
ret
adc
mov
jp
adc
pop
arpl
pop
xchg
daa
icebp
popa
adc
mov
in
ja
pusha
int
mov
adc
push
testb
lret
insb
push
adc
scas
lret
aaa
and
or
jae
mov
movsl
lcall
or
hlt
push
inc
xor
lret
dec
js
xchg
outsb
insb
lods
stos
les
je
sbb
xor
sbb
orb
sub
iret
stos
in
mov
cmp
jae
add
and
sbb
imul
dec
lret
imul
shll
jg
ljmp
pop
mov
mov
mov
cmp
ds
push
mov
ret
sub
mov
push
adc
sbb
shl
mov
pushf
jg
push
iret
push
mov
aas
cli
mov
sbb
lret
decl
int3
or
ret
cmp
jmp
push
mov
cmp
incb
aaa
mov
in
fwait
mov
sbb
mov
lods
xor
xchg
push
repnz
daa
dec
rorl
loopne
pop
and
mov
jl
pop
scas
xchg
fisttpll
mov
sbb
scas
fs
mov
dec
or
sbb
or
pop
xchg
xor
fcompl
gs
mov
mov
fcmovnu
adc
jo
fbstp
or
add
loop
dec
inc
adc
jb
rclb
repnz
xchg
jbe
or
push
jl
pop
data16
negl
addr16
nop
cltd
std
push
push
pop
inc
adc
leave
in
lds
mov
xor
mov
cmp
dec
push
dec
stos
clc
movsb
add
cwtl
push
sub
mov
stos
popl
arpl
arpl
jge
push
push
push
cmpsl
out
mov
insl
ja
cmpl
xchg
stos
test
add
dec
pop
xchg
clc
jae
sbb
mov
jae
js
push
jns
mov
xchg
dec
test
mov
jmp
lods
push
xor
es
cmp
fcmovb
jo
mov
adc
pop
imul
mov
adc
sbb
test
fistpl
cmp
outsb
inc
dec
jb
pop
nop
ds
jecxz
popf
or
sahf
ror
mov
dec
cs
outsl
push
sbb
sbbb
mov
mov
fisubl
mov
insb
mov
cwtl
jns
sbb
add
jp
test
fwait
pushf
imul
pop
mov
push
lea
adc
adcl
mov
jg
xchg
mov
out
push
stos
adcb
xchg
aam
mov
insl
push
out
andb
cmp
sti
lahf
in
jle
imulb
push
loop
fwait
inc
lret
jle
and
sbb
outsl
leave
or
jge
lods
push
and
ret
jmp
mov
add
adc
mov
lea
enter
sub
hlt
or
fistpl
mov
rcr
adc
icebp
push
pop
xor
roll
mov
repnz
xor
jns
mov
pop
mov
bnd
jb
mov
add
lahf
mov
leave
push
jnp
jl
ret
mov
and
shl
sarb
outsl
xchg
ljmp
std
cmp
cwtl
sti
inc
rorb
aas
adc
aad
pop
push
adc
jge
iret
jmp
xchg
int3
dec
xor
push
addb
xor
sub
sub
das
xor
dec
ljmp
andb
les
inc
addr16
pop
in
pop
jmp
push
xchg
inc
gs
mov
aad
lret
xor
and
or
fwait
stc
pop
mov
das
aas
movsb
scas
pusha
inc
iret
out
out
mov
icebp
jno
pop
mov
call
imul
inc
fstps
les
adc
dec
repnz
xlat
mov
or
dec
cmp
add
stos
fwait
xchg
scas
push
hlt
or
sub
xchg
add
push
aam
leave
xchg
cmp
dec
stos
sbb
pusha
add
out
mov
test
shrb
sbb
test
jge
andb
test
xor
shr
sbb
dec
decb
push
cmp
sbb
mov
lahf
pushf
jbe
push
adc
cwtl
xlat
lods
rcl
mov
jp
lret
dec
xor
lods
push
jb
ds
dec
fldcw
mov
xchg
xchg
jo
ljmp
movsl
repnz
jge
push
fs
or
sub
xor
es
mov
pop
and
ljmp
jp
out
sub
call
outsl
fdivr
pop
das
add
sti
cmp
sub
mov
aas
push
fldcw
add
in
push
movsb
leave
repnz
fcomi
mov
cmc
call
xchg
int3
push
inc
faddl
js
jbe
cli
pop
adc
mov
jl
xchg
sahf
jge
xor
xchg
dec
inc
fbstp
mov
mov
cs
cmpb
mov
and
std
mov
cmc
and
push
push
jg
push
push
ret
add
xorl
shrl
jg
insb
xchg
pop
add
aam
ds
iret
fdivrl
sbb
lahf
mov
pusha
adcl
test
pop
sbb
cmpsb
scas
xchg
insb
jae
mov
jge
mov
sub
jmp
rorb
mov
rclb
outsb
sbb
stc
sbb
push
or
inc
hlt
movsl
lcall
jecxz
pusha
ret
jg
cltd
inc
cmp
int3
inc
dec
inc
insb
jo
xlat
push
push
mov
aaa
add
add
mov
sub
xchg
xor
aas
cmp
mov
or
jbe
sub
mov
pop
sub
mov
jle
sbb
pop
sub
leave
in
jecxz
lods
aaa
popf
lods
xlat
and
sbbb
sub
call
in
test
xor
sub
add
fcomps
xchg
adc
sub
int
pop
roll
sbb
into
mov
mul
push
ficomps
in
cli
popa
gs
push
jl
sbb
cli
pop
loopne
pop
out
jnp
loop
notb
cmp
xchg
cmc
dec
mov
into
lret
in
mov
std
loope
jnp
sub
inc
mov
gs
mov
addr16
add
cmp
jnp
movsb
sub
lds
pop
dec
int3
in
imul
xor
mov
mov
mov
push
xor
cmp
jl
fsubrl
xor
dec
test
xchg
mov
clc
pushf
cmc
and
hlt
push
push
loope
stos
rorb
jbe
push
adc
xchg
addr16
sti
fiaddl
pop
leave
or
fnstsw
jne
dec
fcomps
dec
push
outsb
inc
and
pushf
dec
data16
jle
push
add
sbb
push
ret
into
mov
push
push
mov
outsb
jnp
sbb
ljmp
aaa
jge
adc
jae
push
and
xchg
ljmp
addb
xchg
mov
dec
or
jmp
test
pop
push
dec
int
inc
mov
aas
push
jbe
jle
sti
jno
std
sbb
jne
mov
inc
out
es
data16
cmp
shrl
mov
mov
enter
mov
pop
pushf
pop
ja
or
push
mov
or
sbb
aaa
call
mov
mov
add
sub
dec
add
jmp
pop
push
mov
mov
push
lahf
adc
or
cmp
addr16
sub
xchg
or
fs
sahf
xchg
jb
icebp
adc
imul
movsl
insl
insl
sbb
jbe
xor
xor
sub
and
jmp
lret
popf
pop
add
into
adc
cmp
stc
push
mov
inc
outsb
jne
fisubrs
shlb
and
pop
mov
mov
lds
loopne
mov
scas
or
insl
adc
add
adc
xchg
dec
movsl
jbe
mov
xchg
pop
xchg
int
inc
stc
jbe
pop
imul
cmc
dec
or
in
sbb
pop
scas
xorb
add
iret
fbstp
addr16
or
mov
cmp
xchg
nop
xchg
dec
pop
mov
jae
xlat
add
aam
pop
test
dec
xor
cs
repnz
lahf
loope
xlat
add
pop
mov
pop
lcall
ljmp
in
xchg
or
repnz
cmp
aaa
filds
sahf
sbb
mov
outsb
mov
push
xchg
rcll
inc
pop
jp
fsubs
sub
imul
jae
in
pop
sub
aam
mov
data16
repz
je
icebp
mov
scas
pop
push
pushf
lods
sbb
mov
mov
insb
imul
jo
sub
rcll
cmp
and
dec
cmp
mov
cmp
jnp
jne
rcrb
movsb
inc
repz
imul
mov
outsb
mov
xchg
ds
sbb
lods
pop
fiadds
movsb
or
xchg
ret
inc
or
repnz
rcll
imull
mov
jb
int3
mov
mov
neg
std
mov
cmp
sub
mov
mov
xchg
mov
sub
int
shll
cmp
fsqrt
xchg
lds
mov
dec
mov
xlat
adcl
outsb
inc
push
sbb
jb
inc
dec
cmp
jl
addr16
push
cli
lds
mov
cli
rorl
or
popf
add
cli
inc
xorl
insl
lods
popa
push
push
lods
xor
call
jmp
imul
cmp
push
int
mov
cmpsl
insb
xorb
rcrl
inc
ret
and
test
adc
and
sbb
bound
ss
sub
or
aaa
fisubl
sub
data16
jp
xor
enter
and
jge
sbb
lock
loop
xchg
xchg
mov
adc
mov
dec
call
fcom
shll
daa
mov
in
xor
jl
les
lcall
in
xchg
es
cmp
je
and
jg
push
fdivs
push
fimull
ja
ja
lcall
fcomps
mov
or
iret
pop
je
push
or
xchg
popf
jns
xor
adc
bt
shlb
pop
shrb
shrb
jecxz
xchg
dec
ja
inc
xchg
data16
in
xor
add
cmpsl
xor
mov
dec
fucomip
pushf
dec
dec
and
inc
mov
add
sub
or
ret
ja
js
add
dec
xor
inc
cmp
lods
mov
push
cmp
inc
jnp
in
adcb
xchg
pop
or
mov
mov
jnp
shlb
mov
fstps
popa
movsl
cltd
sub
sti
pushf
sub
mov
movsb
testl
push
loopne
iret
push
mov
push
jne
bound
test
ret
cmp
sbb
mov
sbb
std
push
addr16
or
mov
adc
xor
scas
shll
imul
imul
adc
pop
sbb
xchg
lods
leave
push
into
mov
or
repnz
inc
sti
xrelease
cld
mov
jl
lds
push
and
loope
clc
or
into
fdivrs
adc
jle
jecxz
push
lods
sbb
pusha
mulb
or
adc
out
fisttpl
pop
shl
jbe
add
dec
popa
or
jnp
dec
pop
add
fists
not
push
push
jb
sti
sarb
and
loopne
in
pop
or
arpl
loop
popa
and
jle
pop
mov
movsl
jo
fmul
pop
adc
aad
jge
xor
xchg
popf
inc
je
stos
shll
iret
int3
jg
dec
cmp
pop
aad
xchg
in
jp
sub
cmp
dec
pop
clc
movsl
cmp
jo
clc
aam
dec
test
xor
fistpl
xchg
mov
mov
repz
cmp
cmp
xchg
sub
sub
push
mov
and
cmc
sub
ss
scas
lcall
ljmp
fbstp
push
and
addl
shlb
popf
adc
lret
jp
xchg
inc
clc
inc
dec
aaa
cmp
inc
add
lahf
cmc
adc
pop
mov
arpl
lds
mov
or
out
jno
dec
imul
jle
lea
cmp
ljmp
lock
sub
outsl
mov
cmpsl
and
ficoms
sub
rolb
jo
pop
sbb
bnd
ret
jmp
cmp
xor
data16
xor
add
scas
and
jns
jle
aam
mov
fs
aam
gs
nop
ljmp
cmp
aaa
jb
cli
mov
into
loop
inc
sbb
loope
xchg
addb
lods
jp
loop
mov
arpl
outsl
mov
test
inc
in
shlb
dec
adc
cmp
jp
mov
sbb
out
cs
std
dec
in
and
mov
adc
sub
addr16
push
and
sarl
push
fwait
adc
out
ljmp
adc
xchg
push
clc
call
push
pop
lcall
pop
je
enter
jo
sub
out
ror
mov
or
mov
jp
pop
ss
js
sbb
xchg
and
test
adc
pusha
negb
jno
mov
stos
and
push
dec
inc
pop
call
rcrb
roll
cmp
imul
pop
mov
cmpsb
cmp
adc
and
xor
frstor
pop
adc
aam
pusha
sbbl
push
push
dec
ret
and
xor
and
in
or
rolb
aad
ret
dec
pop
call
cltd
ss
scas
or
xor
lods
hlt
pop
dec
adc
inc
rorb
shl
or
or
dec
add
adc
inc
inc
push
ja
cmp
cmp
cwtl
lret
xor
popf
sub
dec
cmpsl
dec
xor
inc
dec
lret
scas
rorl
ja
mov
bndldx
aam
js
adc
ljmp
adc
stc
scas
aam
jne
outsl
lea
cld
sahf
es
and
jbe
sbb
movsl
into
cmp
test
hlt
jnp
xor
cli
jmp
push
mov
jbe
xor
out
cmp
aaa
enter
mov
xorl
xor
nop
pop
sub
pop
pusha
es
mov
adc
movsl
repnz
adc
jns
fchs
cmpsl
sbb
sub
dec
rorb
adc
xor
cltd
cltd
addb
andb
lahf
lods
jecxz
bt
loop
ret
sbb
or
pop
mov
mov
insl
dec
jns
subb
push
bound
jge
cmp
add
xchg
mov
roll
pop
mov
adc
hlt
pop
movsl
dec
pusha
sub
dec
push
inc
scas
push
add
dec
sbbb
je
dec
xchg
imul
adc
sub
or
inc
fdiv
loopne
movsb
or
or
fld
inc
aam
xor
push
call
xor
imul
repz
sti
push
xchg
std
lea
push
mov
ljmp
xchg
sahf
jnp
pop
in
xchg
jnp
pop
sub
mov
ror
cld
push
ret
stc
iret
outsl
in
cmp
and
fisubs
in
leave
movsl
push
outsb
mov
push
add
fsubs
dec
cli
push
bound
shrl
pop
pop
dec
push
sbb
test
inc
rorb
mov
in
shlb
in
xor
fcmovu
adcb
dec
mov
frstor
push
data16
xlat
mov
ror
mov
mov
loop
pop
adc
test
insl
push
rcll
pop
pop
and
repnz
mov
jle
add
dec
mov
insb
stos
mov
bound
dec
or
pop
loopne
stc
xor
xacquire
mov
movsl
jp
xchg
xchg
or
iret
push
in
inc
dec
ret
mov
fstl
mov
mov
xor
dec
mov
aad
mov
mov
shl
mov
sbb
dec
adc
je
xor
mov
cli
pop
leave
call
imul
inc
push
push
xchg
sahf
add
jmp
inc
fsubrl
jb
shlb
mov
xchg
test
sbb
fwait
xor
lret
adc
pop
repnz
sbb
sarb
fsts
dec
in
cltd
shrb
dec
ror
jns
loopne
mov
jmp
ret
and
vphaddbw
rcll
mov
ljmp
push
pop
xor
iret
mov
popf
scas
mov
pop
add
inc
mov
jle
enter
mov
rsqrtps
ljmp
dec
rcrl
fildl
mul
cwtl
pop
fdivr
insl
std
repz
sub
scas
adc
mov
xchg
and
movsl
clc
xchg
xchg
insb
roll
mov
pop
pop
arpl
pop
mov
inc
in
aaa
mov
cmp
ret
stos
cwtl
mov
jns
cmp
pop
movsl
icebp
shlb
loop
andb
push
fwait
loop
pushf
xchg
dec
scas
lahf
mov
ret
push
js
clc
and
pusha
cs
orl
or
lods
dec
cld
js
pop
xchg
add
jle
push
je
inc
out
pop
push
xchg
mov
js
xor
rolb
fcoml
fdivl
or
jmp
clc
add
mov
inc
mov
mov
int3
hlt
cmp
je
incb
mov
insl
into
push
cmp
mov
add
inc
xchg
add
cwtl
dec
jnp
adc
xchg
pop
and
or
cwtl
icebp
cmp
dec
jge
add
jae
divl
adc
ds
inc
lret
pushf
sub
xor
int
push
nop
and
pop
jnp
jl
push
sub
xchg
push
icebp
subl
sbb
bound
das
aas
add
mov
push
into
pop
pop
shll
daa
ret
push
mov
mov
insl
dec
inc
std
or
mov
jb
mov
add
outsl
push
sarl
not
popf
cmp
ss
jg
les
mov
adc
cs
add
mov
pop
fs
cmp
cmc
mov
js
cltd
jb
push
jne
aaa
scas
nop
mov
sti
cmp
xor
call
jg
push
sbb
pop
inc
sbb
and
mov
jge
mov
fidivs
fbld
xchg
fisubl
mov
icebp
mov
or
push
xchg
add
jbe
aad
xor
add
pop
xchg
stc
lret
pop
xchg
or
out
test
dec
stc
loope
shr
push
sub
clc
mov
inc
in
dec
fisubrl
pop
test
es
cmp
ljmp
fiaddl
imul
idivl
xlat
sahf
les
outsb
daa
ljmp
stos
int3
fsubrs
test
and
rclb
mov
mov
jle
dec
test
lods
hlt
out
jp
lock
push
fsubrl
aam
add
negl
mov
or
jg
xor
imul
ficoml
push
stc
scas
enter
setae
rcrb
dec
rcrl
dec
insb
aas
fistpl
pop
lret
in
outsb
xchg
dec
or
int3
in
sub
ss
inc
pop
mov
loope
lret
xor
inc
mov
imul
pop
mov
inc
mov
or
sub
jmp
xchg
pop
or
sarb
mov
cmp
mov
sbb
mov
imul
sbb
inc
sahf
push
inc
test
sbb
cmp
adc
inc
sbb
pop
stos
fwait
dec
movsl
dec
cld
jg
data16
repnz
lds
sub
jnp
mov
test
cld
push
inc
es
std
sarl
push
pop
push
xchg
sbb
xor
mov
pop
ficoml
imul
sahf
ds
cld
mov
inc
mov
ret
outsl
lcall
sbbl
inc
into
push
mov
aam
out
in
in
or
mov
aaa
shr
mov
inc
sub
cld
mov
pushf
ds
adc
fsubs
adc
loop
mov
push
icebp
out
inc
and
sahf
enter
orps
sbb
cmp
fisubrs
xor
lods
push
fdiv
fisubl
mov
bound
mov
in
movsb
sub
cmpsb
aaa
xchg
cmp
fnstcw
stos
dec
jl
mov
jns
iret
aas
in
pop
adc
std
xchg
or
popa
jne
jno
dec
jbe
mov
mov
aam
cmc
push
jbe
dec
sub
cmc
fnstcw
pushf
fiaddl
dec
mov
mov
cmp
popa
dec
mov
fistl
jae
je
push
es
mov
test
jb
adc
inc
jle
sub
ljmp
mov
xor
push
repz
pop
dec
mull
inc
out
insb
pop
loopne
push
sbb
adc
cld
jecxz
es
fists
incl
mov
les
push
push
leave
cmp
mov
lret
sub
hlt
cmpsb
pop
dec
mov
aas
dec
inc
cli
pop
ljmp
leave
fimull
sub
cmp
gs
jns
sbb
aaa
xor
mov
inc
xor
adc
das
mov
mov
sub
movsl
lahf
testl
pop
fs
test
cld
scas
lahf
mov
and
mov
add
negb
shlb
test
xchg
test
or
pop
int
daa
push
cmp
mov
dec
flds
imul
aas
sub
test
add
std
repnz
bound
mov
lcall
in
adc
sarb
daa
divb
and
cli
outsb
nop
add
mov
into
mov
ss
addr16
xchg
leave
clc
sub
sti
add
push
jno
jp
icebp
shr
ret
scas
xor
pop
out
mov
call
sub
dec
daa
cmp
shlb
andl
clc
xchg
fisttpl
ficoms
dec
mov
es
xor
sub
subb
ljmp
pop
imul
inc
iret
jle
push
jl
mov
jp
mov
jbe
mov
cs
cmp
push
sahf
jne
inc
pop
rep
inc
pop
daa
pushf
inc
jge
fisubrs
jbe
popf
inc
lret
cmp
mov
movsb
inc
cld
add
popf
xor
mov
push
jbe
sti
clc
jo
pop
int3
inc
cmp
and
fidivrl
int
out
add
sub
rcll
sub
sub
mov
cmp
add
nop
loope
pop
sbb
mov
lea
shr
mov
sub
fs
adc
pop
std
incl
push
loope
pop
dec
outsl
popf
adc
les
xor
sub
cmp
orb
cmp
sub
jg,pt
inc
push
arpl
pop
hlt
xlat
cmp
pop
jmp
pop
or
xchg
jb
xchg
jnp
sbb
loop
ja
mov
push
mov
xchg
mov
jge
fidivl
xchg
out
in
das
jnp
andl
jne
inc
inc
push
dec
pop
ss
mov
call
adc
adc
dec
push
dec
pop
rclb
das
pop
xchg
loop
and
fdivrl
pushaw
sahf
jb
outsl
pop
lret
mov
or
adc
jg
cmp
xor
dec
sbb
add
mov
popf
ja
xchg
rorb
inc
pusha
mov
xor
lds
mov
int3
movsb
rcl
push
and
jecxz
push
add
mov
xchg
mov
xor
arpl
jl
mov
loope
nop
stos
int3
mov
scas
ror
out
xor
jno
mov
in
xchg
fistpl
hlt
scas
sub
mov
add
stos
or
inc
inc
fnsave
pop
pusha
push
movsl
cmc
sbb
lret
jecxz
push
aad
in
jno
test
fsubrs
imul
jge
xchg
rorb
lods
pop
add
call
mov
std
sbb
cmpsl
sti
or
dec
bound
mov
test
dec
mov
mov
and
iret
pop
xor
xor
aaa
adcl
test
sub
dec
jnp
test
xchg
add
pop
sbb
aam
addr16
sbb
lds
in
subl
push
lret
out
pop
shl
sbb
xchg
xor
jo
pop
mov
loopne
dec
pop
mov
into
xchg
jno
adc
push
adc
push
aam
cmp
xlat
gs
xchg
cld
decb
pop
repnz
push
das
and
mov
xor
and
cmp
add
mov
inc
fisttps
aad
aas
jp
xchg
in
mov
test
pop
leave
add
pop
jns
loope
and
push
sbb
orb
and
lock
xor
pop
sub
sub
adc
aas
xor
dec
sbb
mov
mov
inc
sub
add
mov
mov
fsubrs
sbb
xor
testl
mov
pushf
testl
fwait
int3
stos
in
dec
les
jnp
push
jg
fldcw
add
lea
imul
push
cmpsl
or
clc
mov
jmpw
push
mov
or
mov
push
mov
or
lcall
loopne
std
popf
les
mov
mov
xor
aaa
xchg
sbb
inc
filds
or
mov
mov
mov
xchg
mov
add
mov
lods
mov
or
scas
daa
xchg
dec
test
or
adc
sub
or
imul
and
cmp
add
std
fstpt
fcmovnu
mov
outsl
sbb
xchg
mov
jbe
lea
scas
jnp
mov
test
cmp
dec
xchg
iret
xor
insb
cmp
test
arpl
xor
xor
jl
stos
and
call
aad
sub
mov
mov
or
mov
outsl
sub
jnp
mov
lcall
icebp
in
popf
enter
mov
popf
or
push
mov
or
jb
adc
jo
jge
cli
adc
out
dec
jg
insl
js
dec
push
lcall
outsl
mov
rolb
adc
daa
pop
das
dec
into
sub
int
or
or
inc
ds
shrb
fucomp
mov
mov
xchg
nop
push
xchg
push
or
out
nop
gs
xor
sarb
pop
inc
xor
push
mov
cli
les
pushf
jl
mov
ss
es
call
jge
cltd
in
cmp
mov
popa
in
out
mov
dec
lea
add
cmp
jle
xor
dec
adc
in
sbb
pop
mov
stos
mov
inc
mov
idivl
out
and
jae
mov
pop
sub
decb
xlat
rcrb
or
dec
sti
and
xor
ss
mov
out
out
rclb
or
les
in
in
scas
xor
leave
sbb
hlt
lock
jmp
sti
jno
mov
lds
mov
cld
adc
xchg
inc
jecxz
icebp
stos
cmc
and
into
xchg
lods
jbe
lock
ja
inc
fmul
ffree
cld
xchg
xchg
dec
jno
je
push
les
xchg
xor
inc
fcmovnb
das
mov
cmpsl
mov
int
and
jle
jmp
cmc
adc
dec
xchg
mov
gs
gs
inc
add
in
sbb
push
xor
clc
fstl
hlt
into
jb
imul
pop
pusha
out
mov
xor
mov
cmp
mov
push
inc
fisubrl
xlat
leave
pop
test
arpl
popa
mov
jle
loop
xchg
iret
mov
out
mov
es
sub
pop
rcr
movsl
inc
pop
into
addr16
cmc
mov
cmpxchg
lcall
push
cli
shll
push
cmp
lods
clc
dec
adc
push
call
fimull
cmpl
cmp
lea
cwtl
push
int
push
lods
repnz
xor
test
jle
lock
leave
out
jae
pop
and
lods
test
xlat
sbb
repz
in
loop
mov
jp
mov
shll
imull
jecxz
rol
push
xchg
dec
fmul
adc
mov
inc
dec
fidivl
cmp
mov
mov
dec
lds
jo
scas
jbe
aas
cwtl
mov
mov
out
iret
ja
js
into
out
daa
aam
mov
je
out
cmp
fiaddl
xor
aas
jno
lret
xor
cmpsl
mov
in
jg
pop
sbb
fcomip
addl
movsb
cs
sbb
cmpsl
ljmp
daa
fnstenv
call
nop
xlat
mov
mov
ret
inc
lea
fildl
mov
sbb
fwait
push
pop
dec
inc
inc
pop
inc
movsb
jmp
push
test
mov
inc
pushf
dec
mov
fwait
sub
sub
dec
outsl
sub
xchg
adc
dec
in
mov
inc
and
cwtl
jmp
dec
mov
int
sub
sbb
adc
mov
jp
in
in
scas
mov
in
jb
sub
xor
sub
aas
scas
mov
pop
out
push
xor
adc
adc
adc
rcrw
inc
sbb
inc
aas
and
cmp
pop
jge
sub
hlt
xlat
adc
and
mov
jg
in
je
jge
mov
fcoml
lods
pop
sbb
insl
out
xchg
or
clc
bound
loopne
inc
clc
xchg
addb
ds
dec
js
popf
shrb
jmp
aad
jecxz
lret
bound
popf
sbb
inc
adc
sub
pushf
jp
call
imul
mov
mov
adc
inc
fwait
jae
int
adc
mov
adc
or
clc
mov
mov
repnz
repnz
cmp
outsb
lea
aad
js
xor
pop
pop
test
pop
mov
mov
xchg
jo
or
pop
movsl
sti
imul
sbb
sbb
in
ret
je
sub
insb
and
mov
insl
rolb
outsl
pop
arpl
mov
inc
and
jl
fwait
popa
adc
cwtl
mov
push
or
in
test
push
shlb
mov
ss
mov
lea
popa
stc
das
hlt
jp
fnstsw
outsb
inc
stos
notb
mov
mov
sbb
pop
mov
xchg
leave
pop
por
outsb
xor
push
out
fiaddl
test
xor
sub
mov
mov
dec
rcl
stos
mov
cmp
inc
and
fidivl
xor
add
mov
cmpsl
push
pop
movsb
pop
jp
sub
xor
xor
insb
jecxz
test
stos
xor
inc
jns
enter
mov
ljmp
mov
inc
add
lcall
daa
fistl
push
push
dec
sbb
xchg
icebp
call
inc
fldl
out
insl
ja
repnz
invd
rcll
sbb
hlt
inc
adc
push
mov
je
data16
sub
out
xchg
dec
dec
mov
inc
dec
pop
ss
pop
adc
mov
clc
jecxz
pop
clc
mulb
inc
fisubl
ljmp
dec
pop
test
mov
ljmp
out
push
push
or
mov
fcoml
or
outsl
loope
add
rol
sub
mov
fwait
mov
pop
push
mov
loopne
sti
imul
push
mov
cltd
xor
lahf
movsl
push
cld
xchg
cmp
faddp
ds
movsb
adcl
addr16
add
in
cmc
xchg
movl
xchg
and
xor
sbb
enter
inc
and
jae
ss
xor
sbb
mov
mov
mov
js
int3
pop
fstpl
movsb
stos
repz
mov
iret
ljmp
pop
filds
js
sub
cmp
fsts
xor
cmp
sti
cmc
cltd
cmc
jne
ss
or
xchg
push
das
pop
mov
jb
jns
ljmp
and
push
mov
sub
sub
enter
jmp
cmp
inc
test
cmpsl
aaa
lret
outsl
add
mov
imul
xchg
addr16
adc
jno
mov
insb
in
xchg
loopne
fmulp
call
xchg
idivb
sti
ljmp
jbe
shrb
mov
add
inc
sub
daa
sub
adc
jmp
je
pop
shll
jbe
fidivs
inc
ret
push
jne
in
and
mov
clc
pushf
das
pop
mov
aad
out
or
cmovge
push
cvtps2pi
mov
and
shll
mov
add
fistl
dec
ja
pop
adc
out
mov
and
out
pop
dec
pushf
cmp
out
cs
cmp
inc
sub
leave
idiv
sti
test
jo
mov
dec
cmp
cltd
scas
movl
or
xchg
push
or
dec
movb
dec
push
jecxz
dec
pushf
adc
cmpb
pop
insb
dec
inc
imull
add
stos
sbb
in
pusha
mov
test
cmc
sbb
jecxz
cli
cmp
add
dec
adc
dec
insl
jne
gs
cmp
popa
outsl
pop
mov
ror
fsubrl
lock
cmp
jo
jns
pop
ja
in
mov
je
loopw
cmp
bound
jne
dec
pop
scas
imul
std
scas
popa
out
daa
xchg
xchg
imul
push
xor
inc
push
jmp
jge
jl
shr
sbb
xor
push
cmp
cmp
in
inc
loope
push
xor
xchg
mov
pop
inc
cmp
add
sub
dec
dec
shrl
pop
and
jmp
icebp
dec
push
aad
std
pop
adc
out
dec
insl
inc
scas
movsb
cmp
sub
test
fs
stc
or
adc
loope
and
pop
mov
jnp
sti
sti
aad
pop
push
shlb
int
xchg
inc
lcall
sahf
push
addr16
mov
xchg
pop
adc
and
pop
iret
ss
jo
rcr
mov
leave
in
stos
mov
imulb
mov
arpl
pop
push
fadd
outsb
hlt
inc
adc
pop
lret
push
aas
xchg
cld
lock
mov
cmc
jno
ljmp
cmpsb
sarl
pop
or
mov
ds
pop
sbb
mov
xchg
lcall
test
aas
inc
push
dec
je
pop
outsl
or
xlat
pop
pop
xchg
adc
xchg
daa
add
jb
psraw
rcrb
mov
lods
test
imul
popf
das
in
mov
dec
add
test
inc
inc
loop
xor
les
add
ds
lods
or
bound
sarl
add
xchg
and
cmpsb
xchg
xchg
int
lret
jae
add
mov
stos
or
or
inc
mov
mov
mov
shl
pop
jae
pop
shll
cltd
lret
test
in
dec
decb
mov
cld
push
jb
inc
mov
mov
pop
int
jno
mov
jnp
lahf
sbb
cltd
and
cld
push
imul
shlb
test
sti
mov
xchg
testb
rclb
cmp
pop
nop
inc
adc
lret
adc
push
rorl
cli
insl
or
adc
je
xchg
sub
dec
and
push
enter
or
pusha
notb
in
int3
imul
sbb
std
ret
gs
insl
mov
ret
xor
pop
pop
sub
sbb
sarb
jne
hlt
int
and
push
popa
addr16
popf
adc
push
jmp
jg
mov
add
xlat
sarl
je
nop
lods
fs
push
cwtl
hlt
adc
and
inc
inc
aad
push
pusha
rclb
sahf
xchg
call
loop
lret
loop
cs
mov
jne
mov
xchg
imul
jg
push
out
hlt
loope
in
je
test
mov
sub
daa
movsl
test
pop
movl
pop
xor
cmp
lret
ljmp
fisttpll
or
and
sub
into
icebp
das
and
aad
mov
mov
push
hlt
mov
mov
push
jae
sahf
lods
jle
pop
cwtl
mov
sub
pop
and
sbb
mov
sbb
pop
xor
pop
jns
mov
fdivs
jae
shlb
lcall
push
cs
mov
jo
addr16
push
cmpsb
jmp
jbe
shrl
subl
repz
fdivs
mov
mov
fiadds
fsubl
sub
and
leave
pushf
ret
adc
stc
adc
mov
push
cmp
loop
mov
popf
ss
jns
int3
fs
inc
clc
adc
aaa
pop
pusha
or
xchg
shr
fisubrs
nop
jle
mov
jae
out
pop
les
xor
xor
bound
pop
mov
clc
fldt
add
adc
lea
subl
or
lods
das
jl
inc
push
lret
jne
lock
popa
cmp
out
int3
ljmp
pop
out
sub
out
and
call
sbb
xlat
loopne
jg
sbb
outsb
pop
jbe
inc
aam
sub
cmpsb
xor
dec
es
ret
loop
jp
repnz
sub
scas
sbb
cmpw
dec
lcall
xchg
xor
xor
jns
push
ljmp
add
movsl
out
fwait
or
insl
mov
jns
pop
cmp
mov
adc
jmp
cld
test
out
call
adc
push
fistps
in
sub
pop
clc
mov
inc
fildl
out
loopne
nop
test
dec
inc
sub
popa
popa
jnp
and
dec
xchg
dec
outsl
sbb
daa
mov
mov
ret
dec
sbb
xor
xor
pop
lret
daa
sarb
inc
jb
xchg
cmp
xchg
inc
jge
cmp
in
xchg
push
iret
adc
fisttps
bts
sbb
cld
adc
inc
nop
stos
pusha
stos
mov
jl
pop
rorb
dec
shl
xchg
outsl
or
pcmpgtb
int3
int3
insb
pop
mov
mov
rcl
mov
jb
mov
dec
cld
aas
sbb
cltd
mov
rol
push
insb
or
mov
cmpsb
xchg
mov
in
daa
pop
push
mov
xchg
fs
arpl
jl
aas
dec
jbe
push
push
out
mov
mov
jmp
movsb
sbb
xchg
outsl
dec
jo
lods
mov
out
cmp
std
sub
mov
shl
nop
loope
xor
mov
in
dec
push
jno
mov
sub
insb
push
push
cmp
in
test
mov
jl
loopne
push
shlb
outsb
jg
imul
insl
pop
push
jp
dec
jb
pop
inc
push
jl
xchg
inc
leave
sbbl
xchg
add
leave
push
or
enter
sub
popf
or
xchg
int
lea
xchg
into
push
xchg
test
xchg
add
in
mov
push
repz
jae
stos
idivl
fwait
mov
pop
xor
test
fcomps
sub
pop
cltd
fs
stos
popa
xchg
out
mov
aaa
xchg
mov
xchg
daa
mov
push
aas
dec
add
mov
xchg
xchg
jge
ret
jge
sarl
mov
mov
addr16
aas
fs
test
addr16
stos
and
pop
es
insb
out
add
cld
cltd
mov
xchg
xlat
sbb
pop
xor
mov
sti
pushf
add
lret
lock
aad
mov
fs
loopne
repnz
pop
xchg
dec
push
add
cmpsb
lahf
pop
imul
out
mov
mov
and
jge
push
xlat
leave
aaa
mov
mov
sub
in
push
cmpsl
fsubr
cmpl
adc
call
nop
mov
push
xor
fcmovbe
or
cmpsb
jp
dec
mov
cmp
int
outsb
cmp
pop
push
pop
pop
jl
xchg
xchg
and
stos
dec
ret
in
fnsave
sbb
xor
hlt
push
cmpb
sbb
out
ret
fwait
push
mov
out
cmp
sti
les
lret
shll
nop
inc
mov
push
ljmp
pop
lahf
sbb
mov
xchg
pop
xor
out
sbb
fsubrp
jne
scas
sbb
arpl
fldt
mov
loope
sbb
and
ret
xor
sub
bswap
lea
mov
xor
inc
ficoml
inc
sbb
das
ja
ret
imul
pop
pop
test
mov
mov
movsl
in
stos
testb
data16
mov
test
sub
cmc
sub
jne
int3
add
insl
sbb
cmpsl
cld
cli
push
int3
imul
cmp
inc
mov
and
cmpsb
addr16
dec
jo
mov
rcr
xchg
popf
loopne
lret
push
jle
lds
cmp
mov
cmp
jmp
movsb
js
sbb
loope
push
loop
and
in
xchg
movb
incb
sub
inc
out
jb
adc
jns
push
pop
pop
cli
aas
mov
std
fnstenv
pop
imul
jge
movsb
jbe
pushf
adc
inc
inc
add
rorb
push
pusha
push
sbb
add
fbstp
push
mov
mov
int
xorb
rcrl
inc
sub
movsb
out
mov
pop
rcrl
xchg
outsl
lods
rclb
add
fildl
sahf
sbb
xor
push
adc
cmc
xor
mov
xchg
sbb
imul
enter
gs
shl
jns
hlt
and
lods
mov
in
inc
pusha
lea
cmp
loope
xchg
push
idiv
pop
imul
shl
cmpsb
push
inc
adc
push
ss
outsl
or
imul
in
or
ds
aas
cmp
pop
jg
mov
arpl
out
pop
leave
adc
movsl
push
push
and
jns
pop
out
cld
mov
stos
pusha
xor
lods
pop
pop
lahf
inc
or
es
or
xchg
pop
mov
out
xchg
lret
xchg
in
mov
leave
push
xchg
int3
push
aam
xor
shl
sub
mov
test
call
cs
inc
cmc
dec
jle
jle
test
cmc
ds
xchg
iret
int
and
jb
xor
and
sub
rorb
aad
pop
cwtl
sbb
xor
xchg
insb
pushf
push
ljmp
xchg
inc
push
xchg
or
push
popf
hlt
shll
aam
adc
ja
cmovb
jp
xchg
bound
jmp
loop
dec
insb
xor
jne
hlt
mov
pop
cld
fidivl
and
cltd
mov
adc
sbb
ja
and
add
scas
xchg
mov
mov
fimuls
jle
sbb
sbb
inc
mov
lret
nop
ret
mov
divl
sub
je
daa
xchg
lods
cltd
cld
rolb
inc
pop
lods
mov
push
sbb
inc
cli
testl
rcll
inc
clc
mov
inc
sub
push
scas
inc
push
outsb
stos
inc
inc
jge
push
fsubrs
jg
test
xchg
mov
cmp
xor
jmp
push
and
test
sbbb
sti
arpl
in
and
shll
jmp
mov
outsl
xchg
into
call
sub
pop
push
addr16
push
mov
js,pn
xor
push
mov
jp
imul
rol
dec
dec
cli
repz
mov
mov
fcompl
mov
xchg
lods
push
push
dec
pop
xchg
jns
enter
mov
mov
xchg
aam
cli
in
mov
movsl
aam
int3
into
jge
aaa
scas
or
add
stc
dec
insl
mov
xor
enter
addb
out
test
test
daa
imul
xor
mov
inc
xchg
gs
ds
repz
cmp
jp
fstps
dec
mov
cmc
or
push
push
jbe
sub
pop
jmp
sahf
scas
push
cltd
xor
and
and
lcall
pop
xchg
xchg
icebp
pop
rcl
inc
lods
lret
sbb
dec
pop
lods
ficompl
loopne
jg
inc
mov
dec
and
dec
jb
leave
mov
fs
test
and
mov
rcll
sub
cmp
sbb
ficoml
dec
xor
js
enter
ljmp
fldt
or
lds
jbe
inc
push
dec
rolb
call
and
mov
imul
inc
mov
arpl
out
stc
sti
and
fnstenv
lds
cmpsl
pusha
sbb
jae
cld
enter
sbb
lea
lcall
adc
or
pop
mov
hlt
js
cmc
shl
shl
push
pop
inc
pop
loop
sub
fldt
sub
mov
icebp
jns
ljmp
mov
les
scas
push
mov
movsl
out
test
push
push
xchg
inc
stc
test
push
push
jge
sub
or
dec
adc
mov
adc
mov
xor
mov
pushl
and
pop
clc
mov
cltd
iret
push
mov
mov
nop
jno
rol
ljmp
jmp
es
js
and
or
push
imul
repnz
stc
push
mov
int3
pop
mov
xchg
popl
cmp
fists
jns
or
lea
popa
ret
mov
aas
add
inc
push
ficompl
ljmp
and
cli
mov
dec
sti
out
neg
ret
pop
jae
fwait
dec
mov
xchg
stos
stos
jbe
fxtract
scas
dec
xchg
mov
hlt
fstl
add
bound
out
sbb
fnsave
js
insb
inc
xor
jbe
addr16
mov
xor
add
cmpsl
ljmp
test
pop
mov
pop
fiaddl
pop
xchg
fcmovne
sub
ja
lcall
addr16
mov
jecxz
or
aad
xchg
and
out
xor
sbb
sub
and
jbe
xchg
lock
mov
jl
inc
nop
int
sbb
jmp
pop
addr16
das
pop
adc
in
movsl
ss
jno
mov
xor
fcomip
jmp
mov
mov
xchg
adc
mov
sub
jmp
pop
iret
jbe
mov
xlat
rcll
negb
cmpsl
outsl
pop
or
jl
das
and
xchg
cmp
ljmp
inc
loopne
arpl
mov
xchg
cltd
scas
fs
mov
mov
xor
cmc
or
outsl
jge
xor
leave
arpl
pop
mov
movsb
loopne
add
dec
in
adc
out
cmp
mov
mov
hlt
pop
dec
sbb
or
movsb
add
fsubrl
cmp
mov
fstpt
sbb
pushf
push
sbb
popa
mov
dec
mov
mov
or
mull
xchg
lahf
xor
mov
iret
aad
adc
or
sbb
push
jecxz
mov
cli
nop
clc
shrl
push
cmpsl
adc
fxch
stos
rorl
mov
aaa
mov
add
pop
sbb
lods
and
pop
push
push
jmp
jge
in
sbb
bound
outsl
push
clc
adc
aaa
mov
dec
jl
push
fcomp
adc
insb
or
mov
cli
fsts
pop
xchg
in
rcll
mov
cld
pop
aam
popa
cli
dec
pusha
movsl
add
sbb
lret
sbb
mov
lea
inc
insl
fmuls
adc
rcl
jns
add
pop
pop
lea
mov
pop
and
or
bound
sub
mov
cwtl
lret
xor
test
jbe
adc
add
inc
std
cmpsl
pushf
aad
lds
xor
inc
xchg
mov
mov
xchg
adc
adc
lock
out
and
loopne
data16
jge
lods
mov
mov
jb
dec
cmc
adc
lret
xor
stos
pop
or
xchg
hlt
jno
test
pushl
adc
or
lret
fists
jae
ds
cmp
cmpl
inc
clc
mov
sub
jmp
and
mov
mov
leave
mov
bound
add
and
fistps
mov
inc
std
repz
daa
test
pop
jl
ljmp
int
pop
outsb
push
sbb
and
and
ret
dec
fistpll
repz
icebp
jb
pop
shrb
sbb
dec
popa
push
stc
mov
mov
pop
enter
loop
mov
add
cmc
xor
pusha
push
in
add
jbe
negb
add
in
pop
int3
sub
pop
insl
mov
cmpsb
rclb
stos
aas
fcomi
sub
cmp
jle
add
push
out
mov
cli
cmpsl
arpl
mov
lret
cmp
adc
mov
inc
mov
mov
jno
jne
push
push
mov
xor
mov
pop
fwait
adc
push
jno
test
add
pop
in
shl
jne
jns
dec
push
roll
inc
imul
and
das
cmp
clc
and
jae
pop
rolb
mov
or
pushf
jle
cltd
andl
add
push
jbe
adc
mov
cs
fdivrs
mov
imul
inc
fs
ljmp
aaa
jge
mov
push
xor
xor
jne
mov
adc
jge
mov
mov
int3
rol
push
jmp
das
cmp
dec
outsb
jl
mov
ja
ljmp
ljmp
fidivrs
scas
shrl
cmp
xchg
enter
cli
xor
loope
xorl
sbbl
mov
arpl
mov
stos
enter
bnd
mov
testl
aaa
sbb
flds
push
adc
test
or
clc
mov
jle
lock
xchg
js
enter
sbb
pop
in
or
test
inc
mov
les
sub
cs
test
lahf
dec
mov
lods
in
pop
xchg
jns
adc
rcll
add
movl
pop
mov
stos
and
movsl
adc
sbb
fiadds
xchg
outsl
jle
test
stos
fwait
xchg
sub
int3
inc
mov
pop
pop
aad
cltd
jmp
xchg
xchg
cmp
inc
in
push
or
inc
std
divl
shrb
pop
pop
sbb
shr
pop
pop
loope
fwait
pop
adc
mov
mov
inc
pop
das
pop
aas
rcrl
pop
leave
or
dec
nop
or
inc
fiadds
inc
test
dec
stos
es
test
ljmp
jae
aaa
sbb
aas
inc
inc
out
jge
mov
out
sahf
in
add
daa
repz
mov
pop
stc
or
xchg
xor
test
inc
loop
dec
testl
mov
jne
mov
shll
xor
mov
push
popa
in
xchg
mov
cli
mov
lahf
inc
out
sbb
inc
jl
out
adc
mov
movsl
sub
add
lods
sti
aad
ret
sub
insl
inc
and
cmp
or
movsl
dec
cltd
bound
ja
icebp
xor
arpl
ret
pop
test
pushf
imul
pop
xor
or
jne
stos
testl
jno
in
sbb
push
shl
loope
jb
jae
mov
stos
aam
std
xor
nop
xor
jecxz
out
hlt
and
push
inc
out
add
xor
or
sub
popa
add
push
ljmp
mov
push
sbb
imul
stos
mov
and
outsl
push
pop
jle
ljmp
jp
mov
adc
or
rorl
test
sahf
fcmovu
shlb
jl
test
in
lahf
fs
mov
pop
push
repnz
test
xchg
addl
jg
xor
les
xor
cwtl
adc
mov
jbe
or
sbb
inc
pop
and
jmpw
sbbb
xor
aam
cli
xor
mov
sub
sub
dec
hlt
xchg
leave
add
sbb
xchg
ljmp
cwtl
adc
dec
shll
adc
pop
je
mov
pop
mov
outsb
pop
push
inc
push
int3
in
push
cmp
xor
dec
and
jmp
test
fucomi
jl,pt
mov
scas
ds
lods
lahf
adc
pusha
or
dec
scas
pop
shlb
mov
out
pmaxsw
sub
push
icebp
repnz
sub
push
add
xor
push
inc
iret
fwait
cmp
adc
xchg
add
movhps
cmp
inc
mov
fs
insb
ror
xchg
xor
lret
cmp
scas
adc
mov
xchg
pop
adc
sub
mov
fs
lahf
mov
daa
or
daa
movsb
rcrb
out
cmp
sbb
test
jp
je
fldt
ss
repz
lcall
pop
ss
sub
push
and
mov
cmp
clc
xlat
pop
cltd
scas
pop
je
dec
push
mov
xor
mov
lds
pop
cmp
mov
sub
and
jb
ficomps
mov
iret
call
mov
sub
jb
fwait
ret
add
dec
jns
cwtl
outsb
and
imul
sub
xor
in
pop
adc
sbb
sbb
dec
xchg
stos
stc
jmp
mov
sub
mov
push
sub
mov
fisttpll
mov
jne
inc
rorb
bound
mov
jo
or
jne
or
shrl
xor
fs
sbb
sub
aaa
jle
pop
add
clc
test
jle
dec
xrelease
and
lds
dec
xchg
mov
jnp
dec
ficoms
pop
dec
mov
mov
dec
mov
pop
decl
out
mov
push
mov
push
lcall
in
sub
roll
adc
sbb
mov
sarl
aad
add
inc
mov
push
mov
filds
stos
xchg
or
in
mov
ror
mov
inc
mov
outsb
mov
adc
sub
fwait
push
cs
push
cli
shrl
inc
cmc
out
jns
fstps
imul
inc
call
push
mov
cli
push
out
add
jecxz
jecxz
mov
popa
dec
mov
gs
sub
ljmp
mov
xchg
cmc
ror
subl
lods
mov
in
xor
in
das
jp
or
adc
ret
inc
mov
lret
mov
je,pn
inc
sbb
ret
cmpsb
cmpsl
mov
scas
sbb
sbb
sbb
loope
lods
les
push
and
cltd
mov
lret
mov
loop
aas
loopne
stos
mov
rorl
fstps
or
in
call
lret
or
aad
adc
pop
jmp
js
fcomps
xchg
jb
nop
push
decb
mov
pop
push
push
add
subl
cwtl
arpl
test
dec
out
imul
inc
enter
inc
out
test
cwtl
cmpsb
cld
xor
jmp
adc
scas
stc
mov
bnd
and
xlat
mov
ret
ss
inc
cmp
fmull
in
mov
push
aam
cmp
jnp
rclb
mov
insl
test
cmp
sbb
scas
sbb
jbe
mov
nop
xor
mov
movsl
test
or
mov
mov
inc
and
fidivs
testb
mov
and
or
xchg
shrl
pushf
outsb
clc
lea
pop
push
sub
int
add
adc
cld
xchg
sti
aas
push
pop
pop
xchg
add
pusha
out
shlb
sub
out
xchg
aaa
popa
mov
pop
sbb
jl
push
and
mov
dec
imul
dec
aam
xor
or
pop
fldenv
pop
or
xchg
stos
fmuls
ret
add
and
jmp
dec
jg
pop
sbb
in
jns
pusha
scas
enter
mov
iret
out
xrelease
add
add
movsl
ljmp
pop
jg
cmpsl
clc
adc
or
hlt
adc
jae
cmp
add
pop
mov
lcall
inc
imul
or
mov
mov
push
add
ljmp
sbb
xchg
jecxz
jno
sub
fnstenv
jo
fbld
insl
or
xor
xchg
lods
pop
jne
pop
rclb
mov
out
call
movsb
mov
insl
in
push
js
mov
mov
movsl
daa
movsl
rorl
sub
cltd
push
sahf
cmp
adc
push
xchg
mov
lods
scas
fistl
mov
or
in
fisubs
outsb
lcall
enter
mov
mov
ret
sbb
out
insb
test
fistpll
js
rcl
pop
cmpsb
popf
mov
test
mov
nop
mov
pop
dec
hlt
push
adc
push
add
stos
outsl
out
cmpsl
jns
mov
shl
arpl
popf
xor
cltd
add
pop
leave
or
cmpb
cmp
notl
sti
cmp
adc
sub
pop
xor
or
popa
rcrb
jae
sbb
xchg
pop
push
sbb
shll
mov
std
lret
pop
mov
lret
xchg
outsb
hlt
dec
out
mov
dec
pusha
data16
ljmp
out
out
popf
or
or
aam
dec
cwtl
cltd
xchg
adc
sub
mov
jne
dec
lock
inc
add
imul
out
cmpsl
popf
or
and
sub
push
add
mov
xor
inc
jg
dec
into
loop
je
mov
mov
lret
add
je
ret
stos
or
adc
popa
stos
bound
aad
mov
sti
shr
cmp
and
nop
scas
pop
cmp
xchg
mov
imul
mov
lea
push
sub
das
jmp
mov
push
xchg
jnp
sub
pop
push
fs
aam
popa
jne
and
push
imul
pop
sbb
mov
adc
stos
fdivrl
cmpsb
lock
inc
adcl
xor
lds
das
dec
mov
xchg
or
shll
pop
jbe
dec
incl
jmp
das
xchg
fimuls
jecxz
sbb
cwtl
ds
xchg
mov
lret
cmpsb
cmp
sbb
out
out
xchg
call
ja
xor
xor
sbbb
adc
jno
stos
or
and
pushl
sub
mov
pop
sub
test
mov
pop
lcall
das
lock
pusha
lea
es
in
mov
iret
xchg
inc
aam
imulb
adc
xchg
test
scas
mov
inc
lea
mov
push
orl
mov
cmpsb
cmp
lods
mov
int3
push
daa
insl
jbe
adc
jo
xor
fcom
xor
sahf
lods
insl
sub
test
dec
push
shll
mov
and
in
dec
loop
clc
jp
insl
push
out
sbb
jae
xchg
pop
xchg
rcl
insl
inc
add
ffree
idivb
jo
mov
fildl
hlt
pop
mov
and
mov
or
xchg
inc
wrmsr
fmuls
mov
adc
js
mov
xchg
ss
leave
mov
mov
cmp
or
jno
fldcw
pushf
data16
xchg
repz
xor
adc
outsb
sbb
test
repnz
out
popa
scas
mov
mov
pop
push
pop
mov
sbb
movsb
and
repz
xchg
sub
pop
fstpl
mov
jmp
or
pop
inc
fxch
cmpsl
mov
dec
aaa
inc
pop
iret
in
imul
sub
pusha
in
jno
mov
call
fadds
lods
std
fbstp
icebp
push
test
ss
dec
clc
mov
and
jo
imul
hlt
xchg
cwtl
add
xor
fwait
roll
clc
adc
js
lea
dec
leave
xor
jns
mov
dec
cltd
push
sub
pop
mov
pop
int
fisubrl
icebp
mov
psubsw
pop
xchg
push
add
mov
mov
out
incl
and
xchg
dec
add
inc
sbb
mov
inc
sub
aad
mov
xchg
scas
cwtl
repnz
pop
cmpl
cwtl
jae
nopl
sbb
add
fwait
and
pop
jmp
rcrl
mov
mov
pop
dec
inc
mov
insb
mov
dec
cmpsl
rorb
dec
dec
sarl
sub
mov
xor
inc
inc
add
mov
cmpsb
mov
mov
cmp
sbb
sbb
xchg
jne
push
addr16
repnz
cmp
movsl
xor
mov
sub
jle
ss
sbb
stos
sarl
inc
push
jle
daa
mov
dec
pusha
sbb
test
pop
es
in
out
roll
inc
xor
and
test
jecxz
movsl
call
cmpb
scas
lcall
or
test
enter
mov
lds
fmul
cmpsb
add
jl
in
fisttpll
loop
fbstp
inc
fiaddl
lods
jbe
loope
out
or
int3
out
xor
adcb
roll
sbb
sbb
sub
stc
stos
mov
xchg
push
push
gs
push
inc
out
mov
mov
xor
and
mov
jg
add
inc
notl
inc
test
repz
fdivrs
enter
or
xchg
lret
mov
inc
sarb
dec
push
ret
fnstenv
cmp
add
loop
xchg
popa
xchg
jnp
call
sbb
ret
push
testl
adc
cmp
jne
xchg
pop
xlat
add
rcrl
xchg
enter
cmp
cmp
cmp
mov
jb
icebp
dec
pop
std
data16
hlt
push
dec
nop
ficompl
pop
mov
lds
insb
in
xchg
pop
mov
nop
xor
shrb
pop
add
jle
rolb
cmp
sbb
xor
push
dec
loope
shll
aam
shll
or
es
cld
fdivs
pop
pop
in
mov
icebp
call
pop
mov
cmpl
inc
and
push
mov
add
mov
cvtps2pd
outsl
xchg
inc
cmp
scas
ficoml
loopne
rcl
aad
adc
mov
aad
mov
cmpsb
pop
fistps
jle
ds
push
cmp
arpl
repz
or
lcall
cmp
jge
repz
cltd
jmp
xor
int3
sarb
gs
inc
xor
lcall
js
stos
clc
pop
arpl
lods
mov
adc
test
pop
and
repz
adc
xor
cmp
cld
in
or
aad
jmp
shrl
pop
mov
pushf
gs
mov
push
call
cwtl
iret
lret
inc
iret
inc
cmp
pop
cmc
out
leave
pop
insl
adc
sbb
ret
cmp
nop
insb
fsubr
fmull
call
stos
mov
in
mov
sub
add
rcr
mov
fwait
cmc
push
xchg
sub
icebp
shll
jns
xchg
sub
dec
pusha
outsb
inc
mov
test
rcrl
cmpsl
in
mov
jmp
ljmp
test
daa
mov
mov
pop
cmp
stos
sti
xchg
jg
mov
jne
movsb
call
dec
mov
jp
xchg
mov
repz
cmc
push
dec
ret
or
push
imul
nop
fldcw
mov
sbb
mov
cwtl
pushf
push
or
mov
test
aas
cmp
adc
push
ja
ja
sbb
mov
cmp
cld
lock
mov
push
es
or
xchg
mov
cmp
sbb
aaa
pop
pushl
js
jg
inc
in
fsubrl
jge
push
dec
add
adcl
inc
inc
push
add
lock
xchg
rorb
push
pop
movsl
push
fstpt
lods
push
dec
sarb
mov
xchg
aas
push
loop
imul
cmp
pop
leave
jbe
mov
in
mov
sub
mov
jbe
fs
inc
xchg
inc
or
pushf
loop
jae
fwait
loop
daa
imul
popa
lcall
loopne
shll
xchg
pop
lods
mov
into
movsl
cli
pop
push
mov
hlt
in
pusha
out
clc
test
fldcw
push
test
xchg
pusha
xchg
mov
int3
jecxz
daa
enter
leave
jb
mov
outsl
pop
xor
scas
and
aaa
push
das
inc
rcl
in
hlt
flds
fwait
insb
cmc
inc
es
cmp
mov
mov
aad
bnd
xor
mov
cli
pop
imul
inc
repz
ss
sar
outsl
jge
addr16
cld
sbb
sub
mov
outsl
push
popa
subb
stc
cmp
aas
or
adc
jno
xor
int3
add
filds
mov
daa
arpl
lods
addb
clc
jbe
cmp
movsl
sbbb
push
fnstcw
mov
push
push
jmp
cmp
lret
jbe
fmull
or
adc
add
push
rcrb
call
dec
xor
rcrl
inc
inc
pop
mov
call
cmp
les
scas
sbb
pop
movsb
lea
add
push
mov
dec
push
jae
cmp
cmp
shll
cltd
jno
add
lret
mov
popf
dec
mov
sub
pop
movb
cwtl
scas
outsl
pop
mov
in
jmp
ret
xor
les
ret
cltd
test
inc
popa
add
pop
testl
scas
xchg
jae
push
jb
xchg
popa
dec
out
xor
jl
add
push
adc
mov
pop
sbb
sti
pop
dec
xchg
lahf
outsl
or
xor
adc
inc
jp
dec
cwtl
gs
arpl
daa
divl
jne
xchg
xor
cmpsl
cli
push
xor
ja
cmp
or
inc
jnp
loop
mov
rolb
xor
mov
enter
adc
daa
and
pop
mov
add
icebp
pop
test
sarl
lcall
xorb
mov
das
inc
inc
ja
pop
aam
aam
mov
cmp
add
insl
shlb
add
lahf
push
mov
fistl
dec
mov
push
in
mov
sbb
xor
aas
stc
rolb
in
sti
jg
test
jo
and
test
iret
gs
icebp
push
mov
jecxz
sti
mov
fmull
bound
xchg
jae
mov
or
pop
hlt
shlb
jecxz
imul
rcl
aaa
leave
rcl
out
loopne
jne
sbb
mov
shlb
lods
push
dec
addr16
mov
inc
push
push
mov
shll
lea
xchg
pop
ficoms
stc
ljmp
ss
mov
shll
shl
add
std
pop
pop
sbb
xlat
jge
cmpsl
inc
inc
aas
fstps
mov
xchg
sbb
outsl
fwait
ret
cld
push
mov
jle
jecxz
adc
jnp
mov
rep
daa
aad
cmp
jp
adc
imul
dec
aad
adc
movsb
mov
cmp
xchg
pop
mov
call
push
fisubs
jmp
add
scas
mov
call
jns
lahf
and
leave
icebp
dec
icebp
std
cmc
fistps
adc
push
xchg
mov
lock
xchg
stos
push
aaa
cli
movsl
xchg
aaa
jg
or
stos
call
mov
cwtl
adc
inc
add
fs
push
cli
inc
xor
and
mov
mov
imul
enter
cmp
fldt
ljmp
xchg
fwait
imul
pusha
pop
into
les
ja
or
out
int
cmp
mov
stos
mov
jnp
lock
xor
daa
ret
push
cwtl
jp
aaa
mov
mov
jns
iret
dec
dec
mov
iret
mov
sub
mov
xchg
hlt
mov
into
sar
jae
pushf
stos
cld
in
icebp
jo
mov
push
ficoms
adc
jmp
divb
arpl
inc
lea
movsl
mov
pop
xor
rorb
lahf
jle
pop
popf
stos
stc
dec
inc
jnp
test
and
xlat
dec
aad
rol
adc
mov
sub
lahf
shl
pop
jle
cli
pusha
push
in
mov
mov
push
inc
adc
sub
movsl
xchg
xor
xorl
repnz
sub
les
xlat
imul
cs
xchg
loope
push
pop
fcompl
mov
sub
lods
movsl
popa
addr16
adc
mov
int
jg
mov
dec
imul
and
test
and
in
jle
in
out
ss
xchg
leave
xor
sub
orl
add
out
xchg
ljmp
xchg
jns
xchg
jo
sbb
adc
push
rep
outsl
sub
je
fnsave
push
inc
sti
inc
popf
or
scas
sbb
in
sub
andb
inc
cmp
movsb
loopne,pn
andb
cmc
into
ret
adc
nop
mov
daa
int3
and
cmp
movsb
push
ljmp
aas
out
lret
andl
pushf
mov
lods
addr16
cvttps2pi
cltd
addl
pop
call
pop
sub
cmp
xor
push
loop
cmp
xor
mov
fiadds
mov
aam
loopne
imul
dec
outsb
mov
cs
stc
and
pop
mov
popf
mov
mov
popl
fsubrl
repz
jne
rcl
xor
fisttpl
fs
test
dec
mov
outsl
decb
mov
sbb
iret
pusha
add
nop
mov
sub
imul
cld
mov
and
inc
inc
inc
and
out
lods
movsb
stos
mov
xbegin
stc
out
cmp
gs
sub
push
dec
in
test
shl
ss
mov
cmp
dec
jnp
add
mov
cld
sub
add
inc
dec
jno
movsl
shll
xor
in
mov
mov
add
in
out
mov
shlb
sub
lods
int3
outsb
push
pop
jmp
push
inc
xor
push
or
jp
mov
jae
ljmp
inc
ja
cwtl
iret
stos
adc
cli
xor
test
fmul
aaa
sarb
cmp
sti
filds
movsb
jg
dec
inc
std
add
int
xor
xlat
dec
xchg
mov
push
add
cmp
hlt
cmp
mov
and
pop
in
pop
popa
subb
push
xchg
mov
pop
vpmullw
fidivrs
ret
lret
rorb
and
subl
fdivs
xor
xchg
loop
popa
sbb
ss
iret
out
repz
push
loope
mov
fs
cld
xor
pop
arpl
stos
mov
pop
inc
ficoml
lods
inc
push
hlt
dec
test
mov
inc
mov
push
out
daa
adc
mov
inc
add
fnsave
push
mov
inc
lods
mov
int
repnz
sbb
push
mov
imul
sbb
je
repnz
hlt
fpatan
mov
scas
pop
movsl
js
mov
cmp
mov
test
add
imul
outsb
rcll
jne
test
pop
mov
add
add
les
push
outsb
pop
enter
xchg
or
xor
and
shrl
cmp
inc
jae
pushf
call
push
pop
push
pop
pop
lods
outsb
lds
aas
sub
lahf
cmp
stc
into
orb
xor
or
or
pop
xchg
mov
pop
in
pop
std
adc
lahf
inc
punpckhdq
repnz
dec
hlt
mov
cmp
cld
adcb
pop
push
sbb
push
mov
bound
das
cs
cmp
inc
add
jno
and
mov
push
mov
push
jmp
movsl
into
push
lods
cmpsb
es
cmp
ret
mov
or
xlat
mov
and
popa
nop
ss
loope
iret
ljmp
adc
xchg
dec
adc
insl
loope
mov
fcompl
shrl
xor
and
inc
dec
aaa
call
mov
out
ljmp
lret
mov
sub
adc
int
and
inc
or
inc
out
push
mov
jecxz
cli
out
mov
inc
stos
mov
mov
iret
movsl
sub
mov
pmulhw
push
call
lods
xchg
mov
push
test
out
mov
int
or
std
jecxz
es
xor
in
pushf
xor
pop
dec
sub
movsl
xlat
sti
addl
sbb
insl
dec
jmp
enter
add
test
pop
idivb
sbb
xchg
xor
push
es
or
les
shr
xor
scas
clc
pop
cli
jg
aaa
popa
sub
popa
dec
jle
push
jl
xor
out
dec
inc
cmp
xchg
cmpsb
das
push
in
in
mov
mov
in
jnp
ret
lods
imul
inc
insl
add
sub
out
pusha
outsb
add
mov
aas
das
rorb
lods
adc
ds
test
push
stos
sbb
movsl
xchg
call
loop
or
popf
nop
ljmp
cmp
xlat
or
sub
mov
push
pop
jae
sub
ds
jno
in
xchg
or
test
ss
out
aas
ficoms
xchg
ret
cmp
fbstp
dec
mov
mov
enter
in
mov
fdivrs
dec
rcrl
mov
or
add
cmp
xor
imul
sub
adc
out
jge
fisttps
pop
addr16
or
sbb
test
dec
pop
lcall
test
rorb
xor
aad
repnz
inc
inc
movsl
int
addr16
inc
andb
jge
sbb
dec
in
loope
in
mov
rorb
inc
aaa
mov
inc
mov
mov
mov
leave
sub
mov
jbe
jnp
icebp
test
in
cs
mov
dec
sub
sub
mov
inc
push
lret
cltd
jle
cmp
fidivrl
cwtl
das
test
std
mov
xchg
pusha
jnp
daa
fldl
outsl
jae
add
mov
mov
js
in
out
popa
sbb
ljmp
and
jo
and
lods
sub
fistl
lds
mov
lods
xchg
rcl
mov
and
into
insl
pop
loope
jle
roll
mov
sbb
jo
lret
jnp
adc
loope
cmp
xchg
jns
sbb
adc
mov
inc
stos
aas
cwtl
aas
in
jl
xor
sub
or
mov
push
lcall
gs
sbb
cmp
shll
adc
or
cmp
invd
push
xor
add
stos
into
int3
add
and
out
fs
add
popf
cmp
add
push
push
repz
loopne
pushl
xchg
xchg
dec
cmp
mov
cwtl
xchg
inc
sbb
xor
cli
fs
adc
negb
push
mov
ret
pop
lock
mov
in
daa
pop
insb
subl
out
xchg
xor
lock
pushf
mov
push
inc
push
popf
jb
rcr
cmp
xor
push
ja
movsb
mov
dec
pop
repz
dec
popf
push
sub
jo
sub
mov
mov
add
mov
ds
clc
mov
cmpsb
xor
loopne
push
dec
cltd
add
ret
dec
push
sbb
mov
rcrb
sahf
idiv
aam
lock
test
mov
xchg
and
jmp
lcall
cld
push
xchg
mov
stc
add
dec
int3
cmp
jns
mov
dec
jnp
std
adc
adcl
loopne
adc
leave
scas
lods
jae
call
movsl
jne
fiadds
fistpll
fs
out
popa
jmp
mov
cmp
xchg
mov
data16
aam
movsl
push
jns
mov
adc
pop
in
nop
jge
inc
daa
dec
mov
dec
shlb
mov
pop
mov
inc
mov
fildll
sahf
xor
add
outsb
mov
lret
daa
and
adc
divl
loopne
adc
jbe
fcomi
sbb
and
jmp
inc
and
out
and
loop
gs
xchg
dec
jp
loope
pop
daa
outsl
aaa
push
xchg
mov
inc
cmpl
icebp
es
xlat
stos
test
adc
dec
insl
out
popf
push
mov
mov
jg
ljmp
xor
fsts
and
adc
fwait
rolb
jae
jge
push
mov
roll
push
test
data16
sbb
popa
jecxz
mov
mov
sahf
outsb
fucomi
push
pop
sub
call
ljmp
push
mov
add
pop
jmp
inc
les
aad
pop
dec
inc
out
roll
jnp
or
jl
cmpsb
and
push
popf
lcall
aas
and
add
push
or
popa
add
jnp
js
mov
or
into
sub
test
iret
cmp
cmpsl
push
mov
dec
and
in
adc
icebp
add
xchg
das
mov
sub
cs
inc
sub
les
les
fs
mov
push
loope
add
cmc
inc
rcl
push
popa
negl
adc
cmpsb
sub
nop
inc
arpl
push
aaa
out
cli
fxch
cmpl
mov
jnp
movsb
push
mov
and
cmpsl
pop
cmp
pop
ss
cmc
adc
mov
jmp
xchg
sub
mov
cmp
pop
mov
cmp
push
aas
fdivp
adc
sarl
xchg
enter
fidivl
xor
add
jb
pop
iret
push
jne
loop
pop
lock
cs
movsl
insl
xor
das
or
aas
fisttps
inc
das
addr16
pop
data16
bnd
add
popa
add
sti
scas
hlt
clc
mov
inc
cltd
xchg
xchg
loope
pop
mov
es
push
push
cmp
fs
ds
ret
pop
sub
das
mov
flds
rcrl
stc
out
xor
inc
stos
aam
sub
mov
mov
ret
out
lret
insb
rcll
push
mov
or
aad
mov
mov
mov
mov
and
movsl
hlt
dec
or
movsb
xchg
fstl
test
add
mov
cmc
sub
add
loope
les
loope
mov
rorb
int
add
push
sahf
lahf
sub
mov
jbe
jmp
inc
push
dec
or
in
xor
clc
cmp
mov
mov
hlt
lcall
adc
js
xchg
or
mov
push
ljmp
daa
adc
daa
sbbb
nop
mov
dec
jg
cmp
cmp
lret
ret
test
ds
mov
fsubl
mov
pop
xchg
fs
add
test
mov
sub
cmp
aas
push
cmp
push
and
sbb
mov
xchg
inc
test
aas
rolb
mov
mov
push
movsb
cltd
ja
push
mov
fcmovb
subl
fnsave
pop
inc
adcl
pop
roll
clc
mov
push
cs
add
test
outsl
xchg
xor
sbbb
in
jnp
jmp
cs
int
sub
mov
repz
pop
xchg
mov
inc
hlt
test
in
leave
fmull
mov
test
or
sub
clc
inc
add
stc
gs
scas
outsl
pop
aas
dec
movsl
xor
and
fdivp
jae
pop
sbb
and
sbb
mov
jge
movsl
rorb
jne
stos
addb
mov
fsubrl
add
fcomps
sub
sbb
or
js
jns
mov
pushf
imul
add
pop
mov
jno
das
rcl
inc
cmp
mov
xchg
stc
das
outsb
mov
pop
pop
push
enter
or
dec
inc
dec
sti
or
inc
lods
test
call
xor
cmp
arpl
adc
mov
add
xor
and
ror
cmp
lock
push
mov
shll
ret
roll
jle
icebp
push
and
add
adc
shll
dec
dec
xor
mov
pop
dec
add
push
loop
push
loopw
mov
jg
mov
lea
jne,pn
loop
lock
pop
push
cltd
adc
push
mov
cmpsb
out
push
xor
push
daa
or
sti
leave
and
cmp
cwtl
ficoml
pop
push
push
mov
pushl
jmp
sub
pop
jl
rclw
rcll
scas
push
add
adc
aas
loope
rcl
in
insl
ret
or
mov
cmp
push
dec
gs
or
lret
inc
ljmp
fsubr
push
mov
mov
dec
push
mov
inc
add
cmpsl
test
mov
loopne
aam
fnstcw
stos
cli
popa
jns
push
arpl
das
push
sbb
mulb
movsb
push
pop
rclb
xchg
fadds
inc
push
or
je
mov
pop
es
popa
inc
cmpsb
pop
jmp
cmp
sahf
jge
and
cs
fisubs
les
imul
aad
ljmp
cld
scas
mov
push
mov
push
rcrb
icebp
adc
pop
sbb
mov
and
cmpsb
xlat
lahf
push
sub
cmc
pop
test
xchg
mov
or
xchg
mov
and
std
sbb
pop
repz
bound
or
mov
gs
jp
dec
push
jmp
loope
fcmovnbe
ds
sahf
and
dec
lcall
adc
test
call
push
inc
jb
rcrl
jp
shll
push
pushf
xchg
mov
sbb
lods
ja
icebp
push
mov
sub
fiadds
mulb
ret
pushl
push
pop
sub
xchg
imul
xor
out
sahf
loope
pop
lods
movsl
jbe
aaa
sahf
cmp
cmp
movsb
popa
stos
popf
call
add
push
jecxz
push
pushf
out
inc
rcrl
outsl
jns
insb
outsb
outsl
rclb
lahf
out
lahf
cmpsb
daa
rsqrtps
mov
dec
adc
call
shll
pop
lods
lret
pusha
jmp
cltd
mov
sahf
popf
lods
mov
push
mov
cmp
lret
cmpsb
mov
fnstcw
jl
sti
cmp
shll
push
mov
gs
jns
sbb
cli
idivl
mov
mov
and
in
shrl
and
bound
xor
stos
rcr
add
add
mov
add
or
in
xchg
js
jnp
dec
pop
dec
xchg
test
insb
cmp
jne
mov
push
jmp
adc
jnp
mov
dec
sub
stc
add
sbb
mov
add
mov
addr16
out
mov
test
add
je
data16
mov
and
aam
xor
push
sbb
lods
repz
rcrl
addr16
lds
int
aad
test
lock
mov
push
mov
inc
xor
ficomps
lock
sub
cmp
xchg
sbb
mov
cmp
jp
rol
lahf
ja
cwtl
push
cmp
xchg
in
and
ds
ret
sub
xor
mov
enter
into
jecxz
adc
jp
and
rorb
adc
inc
cmp
xchg
mov
pop
pop
and
shrl
out
or
aad
add
xlat
ds
push
in
bound
jb
ret
insb
push
cmc
inc
push
jo
xlat
lahf
loope
hlt
lahf
test
dec
mov
adc
dec
lcall
pop
rcrb
and
aas
cli
insb
cs
arpl
push
pushf
aas
cmp
mov
pop
insb
sbb
cmp
filds
cmpsb
fisubrs
filds
mov
dec
cltd
dec
or
xor
adc
adc
sbb
in
lock
jbe
mov
mov
fbstp
daa
mov
push
add
in
and
int3
sbb
push
jmp
repz
mov
mov
sarb
inc
mov
shlb
jo
ss
mov
into
ja
sbb
pop
cltd
daa
push
pushf
cmp
inc
fldenv
cmp
xchg
pop
mov
mov
push
xchg
xor
push
inc
fdiv
ja,pt
sahf
shll
add
pushf
push
rol
mov
shrl
sbb
aas
cmp
sbb
adc
sub
add
ret
add
push
inc
sub
jle
cmp
sti
inc
mov
push
pop
mov
adc
repz
lahf
dec
mov
sti
mov
mov
add
mov
addb
popf
mov
andb
repz
arpl
sbb
mov
pop
xlat
je
cli
fnstcw
cld
cmp
cmp
popf
popf
sbb
outsb
or
in
dec
cmp
jae
dec
insb
dec
cwtl
lock
sub
inc
out
mov
sub
cmp
loopne
inc
jg
in
xchg
stc
push
jo
xor
out
mov
fmul
cltd
add
or
cs
dec
add
and
cld
inc
insb
mov
out
jg
in
pop
xchg
and
dec
mov
cltd
cs
adc
inc
insl
stc
xor
test
or
in
pop
popf
and
jnp
insb
sbb
outsb
icebp
dec
pop
mov
aam
cmpsl
das
jle
dec
lret
fisttps
jnp
jbe
nop
ds
sti
int3
push
inc
fmul
imul
adc
jl
mov
jbe
stos
push
xor
xor
xor
sahf
xor
sbb
push
sbb
jns
outsl
sub
cmp
mov
stos
mov
rdtsc
pop
test
jl
fidivrl
add
mov
adc
push
push
jge
mov
mov
jo
pop
subb
setge
icebp
cmc
inc
jno
cld
sbb
cmc
fmuls
shl
jnp
out
clc
jg
mov
in
imul
sbb
or
sub
cmp
jnp
fucomip
cmpsb
movsb
pop
xchg
movsb
mov
xchg
divb
mov
xor
xchg
pusha
xchg
push
mov
scas
adc
test
int
cmc
mov
and
out
push
and
push
jl
scas
mov
inc
shrb
lds
jno
sub
bound
sbb
inc
push
pusha
dec
sub
adc
lods
je
mov
and
add
pop
daa
out
cmp
inc
in
test
out
sar
mov
inc
rcll
sbb
mov
outsl
ffreep
out
push
out
inc
push
insl
cmp
sub
stc
add
call
les
mov
mov
into
sub
mov
arpl
es
fldt
cs
jno
inc
out
in
sbb
fldenv
mov
xchg
cmp
xorl
jg
adc
mov
aam
ficompl
ss
xor
and
mov
push
xchg
outsb
pop
notb
sub
dec
out
cmpsb
stos
lcall
mov
push
push
ss
cld
xchg
sbb
jno
cmp
int
xchg
cmpsb
insl
cmp
and
cli
pop
fstpt
inc
jns
daa
popf
dec
sub
dec
jne
imul
push
xchg
mov
in
dec
movsb
inc
ljmp
jp
or
adc
xor
jp
sbb
sbb
jnp
aaa
add
cmp
pop
enter
sbb
fldln2
pop
loopne
les
cmpsl
mov
xchg
jbe
imul
pushf
pop
mov
sbb
cmp
adc
and
cwtl
pop
mov
cs
iret
adc
outsb
outsl
mov
jp
repz
and
inc
mov
pop
cmp
mov
in
nop
test
aas
shrl
or
aam
ja
push
jge
dec
cmpsb
cmp
inc
mov
pop
outsl
or
and
add
imul
mov
bound
fwait
dec
orl
pop
push
xchg
adc
mov
adc
mov
pop
test
cwtl
mov
and
hlt
nop
pop
bound
push
dec
dec
dec
pop
xor
fistl
pushf
stos
stos
xor
adc
pop
jle
dec
mov
jmp
lcall
test
add
or
test
dec
adc
scas
mov
call
ret
mov
orl
mov
icebp
sahf
add
add
lods
imul
sub
push
inc
inc
cmpsl
mulb
subb
loope
iret
cmpsl
neg
push
xor
pop
sbb
loope
fisubrs
rcrb
cmpsb
dec
mov
or
data16
dec
roll
inc
sub
xchg
dec
xchg
sti
in
adc
xor
out
sahf
mov
sbb
cmpb
pushf
pandn
adc
jne
and
das
mov
pop
lahf
jle
inc
fmull
and
es
xchg
mov
mov
popa
jns
xor
bound
jmp
sub
inc
mov
int3
xchg
add
pop
lods
pop
pop
or
dec
enter
cmp
add
jl
mov
pop
daa
inc
mov
or
or
sub
add
idivb
ds
sahf
inc
popf
jmp
cmpsb
add
fidivrl
cmp
xchg
fcomip
push
imul
cmp
lock
sub
xchg
mov
mov
or
es
shl
in
out
mov
sbb
or
cmc
clc
int
sbb
scas
push
shlb
add
mov
ljmp
adc
push
jl
mov
stc
cmp
xchg
mov
pop
lcall
and
dec
inc
inc
add
mov
adc
fdivr
repnz
mov
in
jne
mov
mov
jl
xor
xor
xchg
lds
lcall
sub
dec
in
ja
leave
pop
fiadds
mov
or
call
xchg
adc
enter
cwtl
xchg
enter
mov
mov
fwait
arpl
pop
mov
push
int
movsl
imul
fistps
push
fildll
add
js
jp
push
xchg
sbb
xor
lea
inc
lock
inc
xor
cs
int3
orb
out
psubusb
sbb
pop
or
or
insb
cli
push
jne
lret
xor
xor
aas
xchg
xchg
lret
ja
aam
adc
sbb
push
cmpsl
fs
imulb
ljmp
pmaxub
ja
mov
jmp
in
clc
sbb
and
adc
inc
cmp
cmpsb
icebp
cmp
out
orb
test
outsl
subl
enter
xor
jge
lds
xorl
inc
sar
push
jne
addr16
mov
int3
jne
sub
pop
mov
inc
ja
adc
outsb
shrb
mov
repz
mov
add
dec
dec
push
xchg
cmp
inc
cmp
jge
pop
inc
mov
das
and
fs
xchg
dec
bound
adc
sti
cmp
and
adc
lock
loop
pop
sub
mov
je
jge
roll
out
mov
and
pop
mov
pusha
flds
dec
cs
mov
aas
sbb
ret
pusha
dec
mov
inc
mov
mov
addl
sbb
out
and
mov
in
inc
push
clc
xchg
mov
add
pusha
pop
push
lcall
in
subb
into
sbb
mov
xor
pop
pusha
std
mov
in
imul
iret
mov
mov
dec
and
mov
sarl
or
bnd
ds
jbe
mov
xchg
jge
testl
sbb
cmp
std
icebp
das
mov
dec
imul
outsl
adc
jp
popf
lret
ret
xchg
jecxz
dec
dec
mov
adc
push
aam
inc
rorl
xchg
bnd
test
mov
add
or
rclb
pop
mov
dec
sbb
repz
inc
sub
stos
outsb
mov
loop
outsl
mov
ljmp
subb
fisubs
jmp
jae
lods
je
mov
dec
negb
pop
adc
je
js
leave
push
lret
sub
cmp
xchg
push
out
cmpsl
xchg
sbb
shll
lret
nop
and
fildl
es
repnz
mov
rcrb
not
popa
outsl
pop
or
dec
and
mov
sub
jge
bound
pop
mov
pushf
fs
outsb
cmp
popf
lret
cwtl
lea
xor
rcl
pusha
bound
adc
fdivs
xor
pop
enter
test
imul
imull
mov
scas
gs
xor
mov
or
pop
ljmp
push
mov
hlt
pop
pushf
loopne
mov
xchg
cmp
in
xor
jns
push
out
data16
and
xchg
je
fs
xchg
cltd
xchg
jae
and
loop
adc
mov
jle
cli
int
jns
movsl
cld
das
mov
ss
int3
push
mov
xor
push
je
repz
dec
leave
outsb
dec
push
ret
shlb
lods
out
repnz
and
mov
sysenter
inc
sti
xor
insl
mov
pop
sbb
mov
adc
repnz
sub
sbb
sbb
push
dec
xchg
pop
lahf
daa
cmp
mov
outsb
mov
out
xchg
or
or
rclb
add
test
push
lock
cwtl
push
jo
lret
mov
pop
fbld
in
sub
pop
mov
or
add
sarl
lods
imul
push
or
pop
test
pop
jb
movsl
testb
sub
mov
pop
dec
push
daa
xchg
inc
fiaddl
lods
pushf
sub
testl
mov
cwtl
xor
push
cmp
mov
cld
gs
adc
add
push
mov
push
mov
xchg
jl
push
mov
fs
jbe
jle
pop
inc
xor
xor
mov
es
iret
testl
push
hlt
lret
or
fcomps
arpl
lea
scas
jne
hlt
lcall
fisttpl
test
xchg
dec
out
push
jge
js
cmp
xlat
pop
push
stos
cmp
mov
add
mov
movsb
jge
stos
aam
dec
fidivrl
and
sub
and
dec
inc
scas
test
scas
pop
add
scas
fistpl
aad
sub
repnz
push
jns
push
hlt
fs
push
xchg
insl
jo
mov
cmpsb
aaa
in
xlat
adc
loopne
rorb
jbe
bound
cmp
mov
push
mov
sti
mov
inc
mov
in
frstor
mov
dec
ds
test
lret
jae
out
jb
dec
leave
jmp
lock
mov
movsb
mov
jle
ret
inc
push
notl
rclb
add
ljmp
loopne
or
push
add
test
xor
int3
mov
mov
xchg
jmp
inc
mov
fs
je
xchg
or
sbb
shl
xor
push
pop
fimull
pop
bound
sahf
push
xchg
pop
or
in
lahf
inc
adc
cmc
sub
pushl
insb
loope
icebp
cmpsl
sbb
mov
xchg
pushf
lea
push
out
fisubrs
pop
sub
xchg
fcmovu
test
test
pop
test
xchg
jae
je
push
mov
movsb
int
adc
sar
daa
les
push
cwtl
add
and
mov
fstps
in
jae
jns
mov
mov
adc
xchg
movsb
loope
mov
and
imul
dec
in
outsl
push
pop
out
test
clc
add
push
jge
adc
or
movsl
mov
andl
and
shr
leave
pushf
inc
push
push
test
jecxz
in
mov
cmp
xor
aaa
ficoms
adc
jb
lods
out
std
jns
pop
and
pop
cmp
in
mov
xor
inc
and
mov
mov
push
lahf
idiv
outsb
mov
dec
mov
out
mov
xchg
mov
sbb
sar
aaa
jno
adc
add
popa
pusha
and
dec
ja
mov
data16
sbb
sbb
shl
lret
outsb
push
inc
or
mov
dec
or
es
cmp
mov
cmp
push
in
adc
lcall
lret
fadds
pop
jp
cmp
lods
sbb
mov
dec
lock
and
daa
hlt
cmpsb
xchg
jne
push
pop
inc
leave
orb
pmulhw
scas
push
mov
ret
adc
into
stc
mov
push
adc
pop
int3
iret
jg
shrl
arpl
in
aas
sub
adc
cmp
stc
shlb
and
lahf
fidivl
mov
test
xlat
ja
fsubrs
mov
popa
push
pop
stc
push
or
popf
jo
xchg
jmp
test
es
jnp
into
jl
mov
std
lahf
xchg
je
cmp
test
mov
add
xchg
adc
addr16
or
mov
xchg
das
aad
sti
mov
xor
insl
xchg
test
subl
das
inc
sbb
repnz
orl
push
xor
insl
into
fimuls
lahf
mov
ret
in
cs
dec
dec
jge
pop
mov
clc
sub
jno
inc
test
sub
xchg
imul
mov
out
mov
pop
inc
cmp
jo
mov
mov
sti
cwtl
sub
xor
mov
lods
imul
inc
nop
add
pop
xchg
inc
jns
lods
out
pop
sub
test
push
test
cmp
adc
int3
enter
insb
pop
mov
int3
xor
xchg
inc
aam
jnp
xchg
hlt
and
xor
jns
inc
xlat
lcall
xlat
sub
icebp
cmpsb
pop
mov
in
std
sub
cmp
pop
xor
lret
ficomps
cmp
sahf
jge
shll
sbbl
lods
cmp
cmpsb
and
nop
rep
test
dec
icebp
orl
jnp
shl
inc
jnp
das
cs
or
add
pop
int3
aas
stos
in
shr
mov
mull
es
add
mov
jp
scas
xchg
aam
push
mov
mov
pusha
cli
xchg
testl
push
inc
mov
fwait
test
loop
cltd
xor
jno
sub
sbb
iret
dec
push
test
pop
fcoml
and
sub
nop
jbe
xchg
cmpl
lock
fwait
cli
and
push
mov
ret
add
xchg
sar
dec
aas
fcoml
lods
xchg
dec
fcoml
xchg
or
addr16
adc
or
pop
mov
int3
mov
add
les
pushf
gs
ja
sbbl
jmp
mov
jno
sarb
pushf
pop
aad
loope,pt
repnz
ds
in
out
in
xor
mov
jmp
aam
call
iret
adc
int3
ror
arpl
inc
sbbl
cld
scas
fs
in
movsl
fisubs
rcrl
dec
xchg
adc
mov
daa
and
sqrtps
ljmp
mov
lea
das
sti
push
or
sbb
mov
push
popf
mov
pop
xchg
shll
xor
push
xchg
lret
jno
rol
adc
sub
icebp
xor
pop
js
jle
adc
push
dec
mov
sbb
adc
sbb
cmp
mov
outsl
sbbb
and
aad
jge
mov
xchg
bswap
into
loope
clc
shrl
lock
cmpsb
sub
repnz
jp
fcoms
mov
xchg
ret
lock
sbb
mov
hlt
xor
fistl
ds
mov
loope
dec
mov
iret
adc
push
cmpsb
orl
lret
cs
mov
add
pop
push
pop
push
inc
shl
xor
add
movsl
xchg
or
or
dec
lods
sbb
pusha
and
lahf
popa
cmc
mov
jne
movsb
mov
cmpsb
xchg
loope
addr16
sub
push
xchg
aaa
repnz
cld
imul
xchg
jno
popf
dec
dec
in
mov
sti
pop
push
mov
sbb
xor
cmp
bound
insl
push
aas
subb
mov
mov
xchg
out
cld
ret
mov
fcomip
pop
fcom
inc
aaa
mov
add
fstpt
inc
adc
or
mov
xchg
outsl
mov
scas
cmp
cmpsl
insl
stos
push
jno
cmp
jne
movb
mov
and
mov
fstpl
jle
ficoms
cmp
out
xor
pop
dec
mov
or
mov
xchg
dec
or
push
xchg
out
xchg
into
push
aaa
pushf
jecxz
out
outsb
jmp
xchg
lcall
cmc
cs
mov
add
add
in
push
divb
jge
mov
mov
adc
pushf
adc
movsb
jg
sahf
push
or
mov
xchg
or
scas
ret
mov
rcll
hlt
rclb
adc
cmpsb
fistpll
in
xchg
daa
lret
aaa
nop
pop
fidivrs
nop
fcompl
inc
in
mov
adc
das
pop
ja
ret
sub
ja
push
pop
mov
les
test
mov
add
mov
jl
leave
shl
lret
push
push
or
insl
shl
dec
add
jge
mov
inc
ret
dec
data16
add
daa
mov
mov
rcrb
xlat
and
xchg
xor
jb
test
and
inc
bound
nop
mov
iret
inc
lods
push
js
shll
jbe
xor
dec
dec
popa
iret
jge
add
mov
jmp
inc
pop
adc
fistps
into
movsl
out
jp
xchg
jmp
xchg
mov
cmpsl
lea
lcall
mov
mov
cmp
mov
jbe
lahf
jecxz
push
jo
repnz
popf
fldt
into
bound
shl
out
andl
dec
jge
cmpsb
push
jmp
push
push
adc
nop
pop
aaa
stc
add
dec
push
es
in
jmp
push
test
mov
cwtl
out
mov
xor
adc
enter
stos
je
xor
lcall
mov
add
mov
inc
mov
jo
inc
mov
push
imul
inc
icebp
xor
add
xchg
or
xchg
movsl
cmp
or
cmp
push
jae
mov
mov
popa
aaa
loopne
jbe
inc
aad
push
sbb
ficomps
hlt
push
push
jo
xchg
mov
addr16
int
daa
push
fnstsw
adc
je
push
je
lods
call
xor
mov
repz
imul
int
das
and
inc
das
mov
push
cmp
mov
adc
cmp
mov
addl
mov
das
imul
dec
xchg
aas
sbb
and
fs
xchg
sbb
adc
cli
ja
pop
push
or
out
lret
sub
adc
cli
outsl
das
fldt
jae
push
cmpsl
popf
cmp
sbb
jg
cld
jp
data16
movsl
scas
lret
dec
incb
dec
xchg
das
push
mov
xlat
loop
cmp
insb
push
ss
decb
pop
jecxz
cwtl
sti
jmp
mov
jmp
add
lcall
mov
pop
xchg
cwtl
mov
mov
jns
scas
add
pop
adc
pop
mov
aas
decb
pop
andb
mov
insb
sbb
movsb
ret
lret
mov
hlt
outsl
lahf
pop
test
fldt
stos
mov
popf
test
popf
dec
test
in
cmc
xchg
pop
dec
cmp
notb
in
and
or
add
push
lds
xchg
mov
mov
mov
mov
shrb
inc
lret
cld
inc
jb
cmpsl
xchg
mov
sub
insb
in
or
pushl
or
fs
in
stos
dec
movsb
int
fidivrl
push
sbb
mov
das
xchg
add
dec
notb
inc
andl
adc
addr16
pop
outsl
push
incb
ja
xor
inc
jns
jns
ljmp
loopne
push
out
jge
lcall
xlat
adc
mov
xchg
cmp
cmpsb
mov
mov
ret
xchg
fcom
test
hlt
sbb
jo
pop
dec
pusha
je
mov
lret
dec
iret
lret
sbb
mov
dec
nop
movsb
cld
xlat
mov
mov
pop
shl
push
add
push
sbb
jb
test
mov
adc
push
xlat
mov
int3
scas
int
jbe
jnp
push
xchg
data16
add
or
mov
mov
push
push
cmpsl
jp
mov
das
jnp,pn
lock
xchg
jbe
rorl
mov
inc
jbe
mov
cmp
push
and
xchg
rcrl
test
inc
inc
bound
das
sti
mov
jbe
mov
cmp
dec
pop
pop
cmp
into
jns
clc
xor
bound
icebp
pop
popl
push
pop
cmp
or
mov
fwait
xchg
cltd
imul
sub
or
mov
push
std
cs
jmp
cmp
mov
out
aad
push
xor
cmp
nop
jne
inc
call
out
add
sub
adc
lahf
repnz
into
movsl
dec
cmpsb
int
mov
mov
test
sbb
outsl
lods
imul
xchg
xor
jns
js
mov
mov
and
test
fwait
mov
mov
lret
xchg
outsb
out
fbstp
lahf
adc
add
sbb
jbe
mov
mov
int3
mov
push
jne
clc
in
jne
loopne
cmp
add
lea
mov
lret
mov
insl
mov
mov
pushf
pusha
ds
sub
outsb
aaa
in
mov
es
rclb
pop
ret
scas
or
mov
pop
loop
and
imul
inc
sbb
into
and
push
in
ss
xchg
shrb
mov
sti
add
xor
jae
sub
hlt
xlat
filds
lret
lret
adc
negl
in
in
or
outsb
rcll
sbb
ljmp
push
inc
add
and
repnz
xchg
adc
mov
lock
xchg
sbb
imul
add
repz
cmp
cmp
inc
clc
and
aaa
notb
in
or
jp
in
xchg
std
aam
xchg
xchg
bnd
inc
adc
xchg
andb
mov
stc
push
xorl
add
pushf
sbb
xchg
mov
xchg
sahf
call
ja
xor
cmpsb
stos
cmpsl
cli
aaa
sti
sub
adc
icebp
clc
add
dec
lea
mov
jbe
rorb
into
sub
xchg
repz
push
stc
pop
lea
xor
lret
in
jo
in
fwait
push
push
cld
out
xchg
out
push
mov
mov
push
dec
and
pop
jno
imul
jne
dec
add
notb
outsl
into
xlat
and
loop
lods
popa
das
sbb
sahf
fisubrs
cmc
es
pop
mov
jns
std
cmc
push
or
pop
xor
cltd
adc
les
loop
stc
sahf
cmpb
jle
push
xor
in
int3
lahf
sbb
test
fwait
dec
xor
sub
jb
dec
mov
ja
mov
cmp
cmp
mov
jae
pop
call
cld
inc
call
test
inc
mov
push
ljmp
fdivl
aas
not
fmuls
rolb
sbb
cmp
test
vmaxss
sti
insl
xchg
jae
flds
inc
imul
scas
xor
pop
dec
es
mov
nop
inc
jae
inc
in
repz
lcall
and
clc
pop
mov
add
or
and
push
pop
or
cmp
fs
sbb
gs
jge
xor
dec
inc
pop
add
gs
lcall
clc
popa
faddl
fsubr
add
jp
fldenv
sti
lahf
icebp
nop
loop
aas
imul
jp
dec
out
outsb
jns
mov
ror
daa
jns
pop
cld
jl
in
inc
imul
cmc
adc
enter
sbb
loopne
and
incl
lret
test
push
adc
inc
add
leave
fldcw
call
pop
xchg
imul
imul
ds
adc
mov
aaa
jl
push
stos
ret
test
aas
cmp
jns
sub
insl
jns
jo
xor
lods
jp
push
fistpl
les
sub
xorl
mov
push
rol
orb
and
sub
lods
jnp
pop
cld
pusha
cli
fcmovne
sub
arpl
fldl
insb
fwait
xchg
call
cmp
scas
scas
mov
xor
jle
rcrl
adc
push
pop
dec
and
cli
cwtl
imul
clc
adc
lret
movsb
shll
dec
pop
jnp
in
ret
push
clc
mov
jne
inc
cmpsl
or
ljmp
loopne
imul
push
cmp
stos
adcl
inc
jp
fldenv
mov
test
mov
lock
mov
adc
ja
pop
pusha
mov
cmpsl
shlb
into
and
es
lods
and
fisttpl
xor
mov
jl
incb
cmp
xor
dec
sbb
aad
pop
fstpt
insb
jmp
add
rclb
sub
push
mov
dec
mov
clc
in
mov
lods
push
fnstenv
pusha
mov
pop
inc
jnp
roll
pop
adc
jmp
shlb
sub
out
aaa
add
leave
jle
xchg
insl
scas
lahf
xchg
out
cmp
cmp
xchg
add
add
loopne
jno
sarb
sbb
fmul
nop
xchg
push
mov
mov
dec
mov
sahf
lret
inc
xchg
mov
dec
jb
je
divl
xchg
xchg
jge
bound
xor
and
pop
lret
adc
jne
fistps
sbb
or
pop
outsb
push
inc
push
add
enter
cmp
push
push
mov
decl
in
jb
lcall
out
inc
mov
into
mov
xchg
mov
mov
pop
fldenv
push
faddl
mov
adc
inc
jb
iret
adc
inc
neg
ret
lods
test
movsl
fnstsw
mov
int
add
or
adc
or
pop
pop
out
cmp
and
in
sbb
cmp
addr16
ret
repz
iret
sub
xor
mov
orl
and
ror
stos
sti
sti
movsl
sbb
test
mov
and
and
pusha
dec
mov
or
xor
lods
imul
stos
sub
or
nop
inc
dec
pop
mov
jns
push
pop
mov
aaa
and
lahf
pop
mov
mov
ffreep
mov
or
mov
and
cltd
cltd
jg
sbb
fnstsw
mov
cmpsb
repz
xor
dec
int3
mov
push
lock
cltd
in
rolb
stos
mov
dec
push
rorb
xchg
imul
lret
bound
xchg
or
jns,pn
shrb
mov
ret
jno
jge
sarl
out
icebp
divl
mov
fcomps
fnstsw
icebp
andl
cmp
std
sbb
add
cli
mov
repnz
mov
sub
sub
sub
enter
lcall
add
cmp
lcall
cltd
push
push
push
hlt
sub
scas
cmp
mov
ljmp
lds
lock
ret
mov
jmp
test
xchg
add
sub
loop
mov
dec
inc
pop
mov
push
pop
lret
mov
push
and
fucom
cmpsb
inc
inc
pop
sub
pop
inc
inc
testl
and
cmp
scas
int
push
aad
and
adc
cmpsl
mov
and
addl
cmp
gs
imull
fcomp
roll
pop
cli
jo
rdmsr
bound
mov
loop
or
nop
cmp
insb
add
xchg
mov
fistpll
int3
cltd
dec
in
jo
je
ljmp
fnstenv
es
arpl
loop
mov
in
mov
fwait
push
cmc
imull
mov
mov
push
jge
dec
push
cmp
imul
call
push
xor
repz
mov
cmp
jbe
adc
inc
push
lret
call
mov
ret
aad
idivl
enter
inc
cmp
insb
pop
jo
dec
xchg
and
pop
inc
xor
into
sbb
pushf
aaa
insl
loope
in
hlt
mov
mov
mov
pop
dec
jne
stos
das
ficompl
loop
das
jg
aaa
ss
sub
int
adc
dec
xchg
movsl
dec
or
jg
in
sub
or
sub
in
in
mov
push
push
lods
mov
sub
imul
out
mov
scas
mov
jne
cmp
popa
push
pop
and
add
mov
adcb
sbb
repnz
test
xor
mov
rol
jp
mov
xlat
cs
cmc
stc
dec
fwait
push
push
inc
icebp
push
bsr
mov
shlb
je
mov
aam
xor
fwait
dec
lcall
shrl
push
jmp
cmp
ror
lods
stc
xor
cld
dec
xchg
fstps
add
cli
imul
aaa
cmp
and
dec
inc
xor
sahf
add
lret
ss
cmp
xor
pop
orl
xchg
inc
jno
mov
addr16
adc
jo
fsubrs
or
popf
push
imul
aaa
cmp
jbe
mov
in
xchg
xor
lret
jns
jl
jb
iret
cmp
mov
xorl
rorl
cwtl
cmp
imul
ror
rcll
xorl
cmpsl
in
xchg
call
lahf
lea
pop
rolb
stos
fsts
add
popa
loopne
mov
push
stos
and
lret
es
in
subb
cmp
add
or
out
cmp
fidivrs
clc
adc
cmp
pop
cmp
inc
sub
add
pushf
mov
and
ficoms
cmp
sub
subl
in
mov
addb
ret
int3
lret
cwtl
xchg
push
jb
data16
jns
pop
popl
and
adc
xor
mov
sbb
cmp
rclb
loop
mov
fstps
jmp
jnp
mov
or
imul
and
jg
xchg
adc
mov
and
xchg
testb
dec
imul
xchg
mov
movsb
xchg
mov
xchg
je
sbb
into
xchg
cmpsb
subl
inc
cmp
mov
or
into
cmp
mov
loopew
add
pop
imul
adc
test
add
add
mov
sahf
fsubr
fwait
adc
mov
or
es
add
into
pop
rorb
xor
outsl
xor
movq
jbe
out
pop
shll
push
or
aad
xchg
sub
dec
es
mov
cmp
or
cmp
in
mov
roll
jns
test
or
adcb
sbb
cvttps2pi
jmp
jno
cmp
add
fs
mov
sbb
push
enter
mov
mov
or
inc
bndstx
ret
lcall
jb
bsr
addr16
jle
xor
movsl
mov
lods
dec
and
mov
cmc
jg
lea
fwait
inc
das
xor
das
mov
mov
out
ds
inc
sbb
jnp
shl
test
push
push
out
inc
test
jae
mov
xchg
dec
and
sbb
mov
stos
and
sahf
adc
mov
inc
fsts
add
xor
fstl
inc
hlt
xor
cmp
ds
jg
pop
ret
fs
sbb
mov
lods
mov
jbe
adc
fimull
into
and
ror
in
mov
scas
js
mov
pop
mov
sbb
nop
iret
mov
dec
leave
lods
jne
inc
popf
pop
dec
mov
mov
and
in
dec
enter
enter
adc
push
sub
xlat
js
nop
and
lds
inc
cld
inc
add
nop
pop
xchg
mov
xchg
out
push
lds
jns
das
lods
enter
lods
and
sbb
insb
jo
ljmp
or
sti
mov
pop
fs
cmp
mov
inc
sbb
or
mov
mov
inc
out
jns
xchg
cmp
mov
dec
lcall
sub
sbb
jg
add
mov
mov
arpl
push
fwait
xchg
inc
movb
aad
mov
push
shl
loope
push
pop
sub
test
add
pop
add
cmp
adc
je
xchg
roll
and
sbb
fnstenv
dec
pop
repnz
hlt
sbb
jle
lods
insl
out
xchg
call
push
imul
xor
in
jg
js
cmpsl
aad
into
inc
push
pop
cmpsb
ljmp
gs
and
lahf
sub
mov
push
xchg
dec
clc
xor
mov
xchg
jp
inc
pop
arpl
ret
push
inc
sub
lahf
sub
movsb
lret
test
dec
insb
outsb
lds
add
fsub
mov
inc
push
dec
das
push
jnp
dec
jae
insb
and
push
xor
sbb
shlb
shl
ret
mov
add
mov
push
sub
pop
shll
add
mov
pop
xbegin
sub
push
ret
leave
pop
lods
movsl
adc
add
cmp
mov
lods
cmp
sub
pop
dec
leave
mov
jl
mov
cmp
push
jecxz
xor
in
rcr
mov
ljmp
and
out
inc
popl
arpl
clc
ja
sbb
cwtl
fwait
scas
or
jno
test
out
push
jno
xchg
push
push
push
cltd
pop
test
std
mov
rcr
cmpb
loope
into
xchg
aaa
push
xor
or
insl
imul
cli
dec
xchg
sub
icebp
lods
xchg
les
xor
hlt
jno
addr16
into
scas
int
clc
dec
jmp
loop
mov
xor
rcll
fisubrs
cli
rcrb
adc
cltd
nopl
pop
loop
and
xor
in
sub
jg
dec
roll
jne
in
mov
sti
shr
cwtl
pop
nop
lods
or
in
jl
fldl
ljmp
out
imul
aam
sub
fisttpll
push
or
clc
cmp
popf
sti
cs
lods
pop
movsl
dec
nop
jl
xor
aam
mov
lcall
imul
outsw
jbe
adc
push
pop
pop
dec
push
mov
xor
mov
pop
push
pop
insb
fsubrl
rorb
and
lret
icebp
jb
in
outsb
jae
pusha
shlb
add
add
fisttpl
lods
sub
or
sahf
lock
popa
jns
jmp
adc
and
or
repz
inc
mov
sub
call
push
mov
sbb
pop
fs
mov
and
sar
add
fwait
es
popa
fwait
dec
pop
aad
aad
cmc
push
aaa
push
fimuls
sbb
fld
sbb
nop
movsl
lods
imul
adc
iret
mov
or
or
or
das
fadd
push
jbe
lret
shlb
push
cmc
jge
es
repz
mov
xchg
inc
std
lds
adc
pusha
in
addr16
or
dec
xor
or
in
dec
mov
jno
add
sub
mov
push
mov
std
cmp
cmpsb
ret
mov
xlat
mov
pop
lcall
idivb
push
cwtl
jbe
iret
scas
push
mov
repnz
xchg
enter
js
test
sbb
mov
mov
push
jo
stos
xchg
and
lcall
adc
xor
mov
sub
mov
stos
icebp
inc
mov
aas
hlt
add
pop
push
lret
stos
jne
xchg
cld
ss
ljmp
sbb
scas
lret
dec
out
movswl
pusha
pop
pop
test
lea
stos
sbb
cli
xchg
movsl
sub
inc
push
jne
ffree
dec
lods
pop
adc
xor
clc
inc
mov
leave
push
pop
pusha
mov
or
nop
cmp
cmp
sbb
cmp
inc
mov
in
cmp
xor
jno
jle
inc
lcall
mov
aam
pop
popa
push
repz
xchg
add
jo
div
insb
dec
jg
lret
out
xor
inc
fists
pusha
out
mov
les
sbb
sahf
sbb
xchg
add
ret
out
push
pop
dec
test
push
nop
mov
mov
in
les
icebp
dec
mov
sbb
test
lds
out
pushf
cmp
push
cli
ljmp
or
loopne
pushf
jno
or
insb
xchg
scas
dec
mov
push
and
out
outsl
fistpl
xchg
fcmovnb
dec
cmpb
lods
sub
loop
sbb
and
push
mov
fidivrl
jae
lods
pop
push
jne
jae
jo
lcall
js
dec
data16
or
adc
icebp
ljmp
fidivs
scas
mov
pop
jo
mov
fstl
pop
sbb
mov
aaa
xor
and
jecxz
mov
pop
gs
cmp
les
movd
mov
sub
andl
sti
dec
mov
hlt
dec
jecxz
repnz
sbb
xchg
jae
test
dec
cmp
lcall
shll
or
cmc
push
jae
pop
sub
sbb
ds
mov
sub
loop
jl
mov
lret
faddl
mov
jl
add
stc
ror
pop
or
bound
pop
call
rcr
push
or
std
insl
nop
ds
sub
lcall
out
popf
mov
in
cld
xchg
hlt
lods
shll
sub
pushf
std
fldl
dec
sub
das
mov
fs
sub
mov
fisubrl
fisttpl
loop
out
repnz
nop
mov
dec
adc
and
push
jb
lahf
sub
add
jg
addr16
add
add
icebp
sub
test
jmp
and
xor
in
daa
and
pusha
push
xchg
jg
jl
jecxz
add
jb
cmp
inc
inc
pop
mov
stc
mov
sti
mov
lahf
in
lods
sahf
enter
push
push
jnp
cwtl
icebp
push
xor
stos
loopne
movsl
pop
dec
mov
addr16
cmp
mov
sbb
loope
pop
daa
icebp
push
cmp
mov
and
sbb
mov
dec
icebp
popf
cmp
mov
aas
bound
jmp
stc
movb
mov
mov
frstor
jne
fwait
xor
mov
pop
or
and
rcr
inc
out
pop
mov
push
icebp
xchg
dec
and
pop
sub
cmc
mov
push
mov
out
adc
repz
push
gs
aam
mov
movsl
adc
push
cmp
push
dec
shlb
jecxz
jmp
push
pop
mov
and
nop
or
mov
adc
lock
jmp
jae
cmp
xchg
repz
xor
or
adc
jl
iret
push
in
jp
in
es
mov
lahf
adc
adc
ljmp
adc
mov
lea
aam
sub
ret
cli
adc
insl
xchg
mov
popa
sti
call
or
dec
lock
jl
subl
rorb
data16
shll
inc
loopne
mov
outsl
in
or
cmp
and
sub
push
jo
pushf
jmp
mov
xchg
mov
cmp
nop
jg
stos
xor
push
jb
adc
adc
cltd
loope
sbb
inc
js
popa
mov
dec
cmpsb
dec
sub
jge
into
clc
mov
fwait
jne
stc
fadd
jl
inc
int
xor
push
movsb
adc
cmp
ror
xchg
enter
movsb
pop
inc
jne
push
cmp
or
xor
mov
bound
mov
dec
shrl
rclb
mov
jne
pop
pop
fimuls
aam
pop
adc
fcoml
mov
xor
fwait
sbb
jle
pop
push
sub
mov
push
call
and
inc
adc
bound
sbb
sbb
inc
pop
mov
stos
mov
into
pop
mov
pop
dec
repz
call
jp
js
movsl
in
divb
movsb
push
mov
push
testl
sub
aam
xchg
xor
lcall
scas
mov
imul
shll
outsl
adc
pop
sti
cs
inc
imul
mov
lcall
dec
pop
adc
les
mov
rorb
add
int
mov
mov
or
jno
enter
jbe
daa
fucomip
jmp
adc
jl
in
lods
sbb
int
mov
insb
fmul
xor
xor
sbb
xor
mov
jp
jae
cmp
fistps
fldenv
scas
xor
cmp
jnp
adc
jae
mov
mov
stos
ficomps
or
jmp
mov
push
aam
addb
mov
sub
int3
int
or
adc
mov
aad
daa
stos
push
push
cwtl
int3
testb
lds
xor
mov
loop
xor
cli
or
out
bound
ret
lock
mov
test
xchg
and
cwtl
mov
fmul
rorl
clc
mov
pop
or
outsl
jbe
lock
mov
hlt
fisubs
cwtl
dec
jg
xchg
in
xor
mov
int3
clc
sub
inc
or
rorb
xor
pop
inc
mov
scas
xchg
push
imul
adc
dec
pop
jg
lret
movaps
bound
mov
addr16
fistpl
dec
popf
adc
gs
and
mov
dec
test
jge
stc
test
loopne
cmc
lds
sub
cmpsl
mov
sub
inc
aaa
pop
pop
loope
in
and
out
cmp
cmc
mov
dec
int
pop
notb
mov
mov
mov
loope
test
mov
outsl
jl
sbb
movsl
mov
or
dec
mov
xor
cmp
test
xchg
pop
and
mov
xor
insb
cmp
lock
adc
push
ret
arpl
xchg
jne
sub
pushf
subb
mov
aad
mov
pop
inc
mov
xor
or
in
mov
fidivrl
inc
es
mov
out
into
mov
test
jmp
pop
xchg
cmpsl
cmp
mov
js
add
icebp
leave
sbb
int3
mov
out
xor
fwait
sub
shl
sub
mov
jp
loopne
mov
cmp
xor
push
dec
outsb
mov
adc
shrb
mov
negb
rcll
cmp
dec
jg
cmc
inc
notb
lods
in
jb
mov
dec
xchg
mov
addr16
pop
push
fcomp
mov
cmp
subl
mov
sub
jbe
js
xor
cmp
imul
xchg
xor
push
xchg
test
orb
xchg
pop
inc
stc
les
outsl
adc
mov
repnz
push
add
in
addb
mov
push
mov
and
mov
cmc
arpl
mov
gs
imul
mov
dec
jle
orb
lcall
xor
cmp
mov
fstps
popf
cmp
pusha
or
insb
imul
stos
test
les
inc
push
je
ss
mov
sbb
push
aad
stc
mov
sbb
decl
scas
jg
inc
test
mov
pop
faddl
repz
cli
xchg
icebp
sub
lock
clc
push
cmp
lea
xor
sarb
fstl
jnp
cmpsl
inc
fdivrp
cmp
mov
xlat
mov
dec
test
push
test
les
cmpsl
add
fbld
xlat
aad
cmpsl
hlt
ljmp
imul
xor
mov
inc
pop
or
div
dec
mov
push
push
aas
jmp
jmp
fcompl
out
popa
sahf
lea
stc
mov
cmpsb
xchg
xchg
ret
dec
cmp
div
fbstp
fldt
sub
mov
cmp
mov
pop
movsb
rorb
xor
xlat
or
xor
bound
mov
add
in
push
lds
jne
mov
xor
xchg
orb
jb
or
lahf
xchg
into
cmc
test
int
cmp
mov
aam
insb
movsl
and
jmp
jp
xchg
or
push
and
jmp
notl
clc
movsl
fnsave
mov
mov
push
lods
leave
mov
jle
int3
fidivrl
sahf
adc
mov
fs
or
mov
mov
ja
ror
out
and
sbb
leave
xchg
hlt
mov
arpl
cmpsb
add
scas
sbb
xchg
gs
insb
add
lods
mov
push
sbb
xchg
lahf
lods
pop
xchg
pop
dec
out
dec
es
mov
xchg
add
push
jmp
repz
ucomiss
sbb
xor
mov
mov
pop
das
push
adcb
iret
mov
cwtl
inc
scas
and
jle
push
cld
jmp
push
testl
adc
xor
jle
rolb
int
adc
cli
addr16
add
jge
aad
inc
mov
add
adc
ss
jmp
cld
enter
pop
dec
dec
shlb
xlat
and
out
lock
inc
hlt
and
xchg
add
mov
or
cmp
gs
mov
lods
sbb
aad
nop
fldenv
call
rcr
pop
loop
push
and
fisubrl
in
into
ret
and
lea
leave
add
ljmp
aaa
cltd
cmp
adc
inc
out
sbb
push
mov
add
xchg
ljmp
enter
stc
jl
adc
dec
xchg
pop
xchg
adc
sbb
ret
xor
daa
ret
fistpl
add
loope
fcmovnb
cmp
or
mov
jb
dec
cli
jge
fs
mov
cmpsl
pop
stc
or
repnz
pop
lcall
add
cmp
mov
xor
sub
sub
cmpsl
mov
mov
mov
inc
ret
push
mov
scas
jnp
xchg
or
mov
or
cmp
add
mov
mov
shll
lods
push
push
push
sbb
push
negb
in
popf
jmp
aas
ficomps
out
cmp
lcall
xchg
outsb
pop
mov
insl
aad
sahf
sub
lods
mov
das
and
jb
sub
shlb
into
cmc
adc
clc
jbe
xlat
push
mov
loope
test
aam
xchg
push
arpl
insl
fucomip
fidivrs
es
fs
sbb
outsb
movsb
popa
add
test
mov
js
ja
in
fwait
popa
inc
jle
iret
push
out
add
jbe
jo
add
out
mov
arpl
or
clc
or
decb
push
loope
xchg
mov
out
pop
fisubl
test
cltd
pop
hlt
adc
sbb
adc
test
inc
stc
cwtl
add
jo
inc
and
inc
and
pop
lods
push
sahf
sbb
xchg
dec
inc
pop
adc
mov
adc
mov
sarl
push
outsl
dec
push
nop
pushf
push
sub
cmp
xchg
sbb
nop
jnp
sahf
jnp
adc
xchg
shll
mov
jp
cmp
adc
dec
inc
pop
lods
pop
dec
dec
or
scas
inc
popa
push
stos
mov
ja
mov
addb
pop
sbb
cmc
repnz
dec
xchg
mov
jp
push
imul
lcall
adc
test
subb
inc
leave
mov
mov
cltd
sbb
into
lret
mov
pop
xchg
cmp
cmc
push
mov
jmp
shld
sub
test
outsl
shll
push
jge
fimull
dec
add
fs
mov
sbb
fsubl
scas
mov
mov
loopne
jg
data16
pop
lods
test
lcall
andb
and
cmp
mov
push
lea
xor
and
inc
icebp
sbb
addr16
sbb
out
mov
stos
sti
leave
fidivrl
cmpsb
outsl
fdivs
aas
addr16
rcrb
pop
adc
in
inc
sub
into
test
pop
jae
clc
jne
sbb
dec
cwtl
push
es
xchg
call
ss
aaa
lods
aam
dec
lods
jne
pushf
into
in
adc
inc
mov
lds
mov
jg
or
add
enter
cmpsb
xchg
jno
mov
fisubrl
mov
stos
cmp
lods
mov
sbb
mov
xchg
ljmp
sub
test
cmp
xor
jp
fisttpll
inc
inc
stos
or
sbb
xchg
sbb
les
cs
insl
push
mov
ss
add
and
out
test
pusha
dec
pop
jmp
pop
mov
and
xchg
mov
addr16
jae
cmp
push
flds
or
and
repnz
in
xchg
mov
mov
pop
jecxz
cmp
shrl
ljmp
lods
mov
or
orl
and
jb
pop
icebp
mov
rcr
repz
inc
jge
mov
cwtl
out
aaa
cmpsb
jnp
js
push
outsb
mov
sbb
js
int3
pusha
and
pushf
jne
mov
mov
sub
stos
cmp
out
sbbl
popf
push
sub
pop
push
call
lods
in
xchg
fdivrs
daa
pop
fcomps
sbb
cltd
subb
and
stos
xchg
mov
ss
fnstcw
dec
cmpsl
mov
or
mov
jae
mov
mov
cmp
and
mov
mov
cmp
scas
loope
mov
jge
pusha
lods
jae
in
pop
dec
cmp
cs
and
adc
add
push
mov
inc
fcmovnb
subl
adc
xchg
push
xchg
orl
cmp
push
and
shll
adc
xchg
divl
pop
in
aam
pop
cmp
mov
test
xor
adc
xchg
ljmp
mov
stos
jp
fmul
js
or
ret
fnstsw
aaa
fs
testb
loop
mov
shrl
xlat
popa
outsl
xchg
sti
ja
pop
lret
pop
lea
enter
movsb
mov
cmp
sub
sbb
push
pop
pop
aam
ss
pop
pop
and
shlb
xchg
movsb
enter
adc
mov
arpl
push
fs
out
jle
iret
out
mov
mov
sahf
pop
test
jne
pop
repz
ja
push
push
jecxz
enter
adc
in
push
rclb
cmpsl
loope
push
aam
pop
push
and
jge
or
inc
fs
and
rol
push
lret
and
stos
setge
cmpsl
addl
daa
xor
jns
xor
mov
add
int3
inc
out
jg
pop
push
aam
jge
jnp
cld
inc
xchg
push
cs
rolb
dec
out
fnstcw
popf
filds
adc
mov
xor
testl
mov
lods
cltd
mov
daa
test
mov
xor
stos
es
push
push
enter
lea
mov
in
ret
imul
loop
fmull
xor
adc
je
lret
push
dec
xchg
test
out
call
in
jmp
fsub
xor
inc
cmp
pop
cli
stos
jecxz
ss
mov
arpl
dec
pop
aad
jnp
pop
mov
inc
iret
jp
sub
int3
inc
or
jns
loop
or
mov
inc
notb
push
xor
ret
popa
xchg
int
mov
or
fildll
mov
out
test
inc
adc
push
lcall
insb
and
xchg
and
pop
jne
out
sbb
sub
push
cmovs
pop
push
jbe
jne
xor
inc
stos
jge
out
sub
mov
outsb
mov
lcall
or
or
jae
in
dec
stc
rclb
pop
in
jecxz
pop
lds
arpl
repnz
cld
loope
mov
and
hlt
sub
ret
movsl
popa
mov
mov
push
loop
mov
rclb
jnp
addb
int3
or
xchg
push
call
dec
frstor
xor
enter
hlt
pushf
or
jecxz
pop
mov
xchg
mov
je
push
pusha
push
test
je
icebp
inc
cmpsl
fsubr
jg
xchg
rclb
pop
rolb
sbb
mov
mov
add
pop
or
fstps
stos
mov
sub
push
aad
push
sbb
hlt
ds
test
sbbl
or
or
imul
rcll
mov
inc
adc
xlat
mov
add
sub
xor
aad
xor
inc
ret
jge
mov
cmp
xchg
