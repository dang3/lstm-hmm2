int
add
or
popa
push
xor
ds
xlat
stos
mov
xlat
pop
fstp
cld
mov
pop
cs
daa
inc
adc
mov
inc
ljmp
sub
loopne
cmpsl
sti
sub
mov
adc
rcll
cmp
stos
pop
xchg
fmul
fs
loop
shrl
mov
inc
mov
adc
xchg
and
and
pop
inc
mov
mull
dec
sbb
mov
push
sub
fnsave
out
test
rol
in
lcall
or
jae
mov
mov
mov
addr16
mov
xor
xchg
cld
inc
out
lds
jnp
adc
push
sbb
sti
scas
mov
jb
lcall
cwtl
push
fnsave
jge
in
sbb
outsb
mov
xchg
jmp
sub
xchg
push
in
mov
cmp
bound
jno
in
xchg
clc
rol
cmp
sbb
imul
mov
push
mov
imul
test
sahf
loop
mov
ret
fsubp
xchg
push
sbb
fcmovnu
stos
pusha
lret
mov
cmp
or
mov
hlt
mov
jno
repz
repnz
shrb
fwait
cltd
mov
fiaddl
jae
cli
jecxz
mov
imul
repnz
imul
and
xlat
sar
fbstp
pop
inc
xchg
hlt
call
sub
filds
loope
out
pop
adc
add
negl
scas
cmpsb
push
pop
pushf
jne
std
inc
pop
cmc
xchg
push
cmp
lds
inc
stc
mov
add
and
std
adc
and
leave
sahf
or
outsl
cmp
cmp
jns
mov
push
pop
add
test
sbb
rep
xchg
xor
push
sub
push
and
sarl
sbb
aad
and
and
mov
fsubrs
lds
les
fstpl
xor
jae
xchg
xchg
or
jae
lods
pushf
imul
in
dec
jp
stc
pop
sbb
pop
cmp
xchg
std
scas
shlb
fidivs
xchg
push
add
movsb
lret
adc
mov
imul
fldenv
xlat
arpl
adc
inc
xchg
inc
stc
insb
mov
iret
ror
arpl
and
and
ret
int3
mov
loop
int3
jae
sbb
xchg
cltd
icebp
cmp
jecxz
jo
dec
cwtl
xor
cli
mov
xorb
lods
ret
jae
mov
shr
sbb
jbe
push
sti
xor
sahf
aas
bound
pop
popa
or
rep
shll
sbb
jp
mov
xchg
xchg
fistps
mov
and
sub
js
jge
sbb
dec
mov
pop
jno
mov
jb
ja
push
push
pop
mov
clc
push
mov
in
lea
in
sar
sbbl
clc
adc
jae
outsb
lock
in
shll
lods
push
push
mov
dec
test
repz
mov
inc
pop
fmul
cmp
or
add
xchg
clc
insb
xor
ja
sbb
mov
lea
mov
fidivs
or
dec
ficomps
lock
clc
dec
fistl
in
imul
out
dec
pop
mov
outsl
dec
sub
in
out
sub
dec
pop
and
mov
or
mov
fwait
lcall
push
and
or
mov
jp
adc
and
je
ss
and
push
ds
aam
or
imul
mov
loope
cs
push
jo
sbb
xor
cmpsl
or
ljmp
xor
lods
sub
push
xor
scas
test
fildl
scas
dec
push
das
and
jmp
jl
sbb
xchg
push
daa
xchg
enter
xorb
in
jnp
mov
jg
push
sub
mov
rolb
out
or
ret
mov
ss
mov
or
adcb
pop
xchg
xor
and
stos
mov
std
lock
mov
dec
fcoms
cmp
imull
xor
add
and
arpl
movsl
add
pop
mov
adc
ljmp
xor
add
insl
cmp
in
push
hlt
ja
xchg
lea
int3
mov
mov
es
xchg
mov
push
and
mov
ja,pn
mov
test
pop
jge
insb
or
out
imul
inc
js
xchg
sub
and
call
fwait
loop
pop
xor
mov
and
jl
pop
mov
jne
out
push
daa
inc
xchg
aad
inc
sub
add
pop
jnp
adc
cld
and
les
mov
jmp
add
jge
movsb
cmp
and
and
test
dec
adc
fneni(8087
pop
in
jp
mov
pusha
andl
dec
pusha
popa
call
xchg
mov
mov
loope
inc
clc
jle
sub
add
push
sbb
add
out
in
sub
daa
cmc
pop
xchg
jb
and
adc
outsb
adc
les
xor
iret
repz
sub
sub
lea
arpl
das
cmpl
lods
test
loop
gs
sbb
aas
js
cmpsl
adc
mov
lret
ja
pop
ljmp
jno
jo
movsl
cmpsb
movsl
aas
int
mov
mov
fwait
sar
fdivs
cmp
fbld
mov
aad
cmpsb
inc
das
aam
cmpsb
ror
dec
icebp
dec
cltd
rcrl
inc
loope
shll
pop
dec
and
inc
xchg
pop
movups
mov
xor
cmp
arpl
in
xor
and
mov
fbld
lahf
sbb
inc
dec
or
push
adc
and
push
jb
xchg
add
mov
xor
adc
push
popf
sti
es
mov
test
ret
or
jbe
jns
outsb
cmp
dec
jecxz
mov
push
mov
mov
flds
xchg
icebp
and
adc
idivl
dec
addb
ljmp
cmpb
pusha
aas
addb
add
xor
ffreep
outsl
sub
mov
test
inc
enter
mov
and
lods
mov
jmp
popa
or
and
in
xchg
pop
lret
push
mov
jecxz
dec
jne
or
inc
repnz
les
loop
cli
and
lods
pop
push
pop
push
aas
jo
sti
or
scas
loopne
pop
arpl
mov
xlat
dec
mov
inc
jl
push
ficomps
insl
cwtl
sub
push
ret
mov
pop
dec
jl
cmp
in
or
add
ja
xchg
std
lea
mov
insb
icebp
lock
mov
jecxz
mov
jl
cmp
xor
and
xchg
mov
mov
imul
add
mov
xor
ret
mov
adc
loopne
scas
imul
lods
lods
lods
and
sbb
jg
adc
xor
adcb
test
js
ret
enter
stos
xor
or
add
test
mov
dec
pop
fprem1
xchg
push
jle
in
inc
xor
and
jb
cwtl
adc
ficoml
iret
fdiv
rcrb
push
subb
pop
dec
int3
movsb
test
loop
paddsb
xor
cmpsb
xlat
add
shll
dec
dec
mov
pop
aas
and
scas
sbb
lahf
stc
mov
fcmovbe
mov
fsubr
and
xchg
mov
pop
mov
int3
xchg
add
cmp
add
inc
mov
arpl
and
push
cli
popf
mov
or
ret
sbb
mov
jne
xchg
add
aam
mov
sub
jge
les
mov
test
lcall
inc
enter
xchg
xor
or
jp
fstl
and
cwtl
adc
iret
pop
out
aad
or
dec
cmpsb
cmp
ret
jno
or
rcrl
aam
iret
mov
mov
popf
aaa
add
dec
fistl
pop
or
jae
mov
sbbb
adc
pop
in
pop
sbb
adc
shr
inc
mov
mov
jecxz
mov
daa
pusha
mov
int3
int
jns
out
mov
jecxz
pop
adc
xor
hlt
pop
shll
cltd
xor
dec
into
outsl
leave
test
jne
roll
mov
xchg
into
mov
pop
jl
mov
and
sbb
adc
test
arpl
repz
adc
mov
and
inc
cld
add
in
test
jecxz
inc
xchg
cmc
mov
jae
leave
mov
ret
jo
fisttps
mov
push
inc
mov
pop
mov
pushf
pop
cmp
es
out
adc
daa
mul
lea
into
mov
out
xchg
ljmp
bound
rclb
outsb
add
ret
push
sbb
decb
mov
cltd
inc
insl
sarb
dec
xor
jecxz
xchg
push
std
ret
pop
cwtl
push
pop
sahf
push
xchg
out
mov
mov
inc
lahf
cltd
cmp
insb
scas
ss
mov
popf
sbb
add
shll
add
ficoms
das
push
dec
je
popf
xchg
adc
dec
push
pop
mov
nop
aad
inc
xor
scas
ret
push
xor
insl
and
xorb
sbb
ss
js
mov
ffreep
popa
mov
hlt
jo
insl
pop
jecxz,pt
cwtl
ds
test
cld
cmp
mov
or
xorb
mov
cmc
lcall
mov
xacquire
inc
ss
push
push
mov
enterw
ret
daa
loopne,pn
sbb
cltd
inc
inc
out
out
dec
sub
xchg
sub
scas
push
push
aad
mov
and
sub
jno
popa
repnz
push
retw
cld
inc
sbb
adc
dec
sbb
pusha
cli
fsubrl
pusha
lods
jns
iret
shl
add
mov
data16
jns
ja
cmp
inc
dec
mov
fnstsw
add
jecxz
sbbl
cmp
popa
cmp
adc
movsb
or
jns
fidivl
mov
notl
je,pt
lahf
mov
lcall
loop
decb
cmc
cmpsl
mov
les
mov
or
push
mov
mov
mov
add
jne
sbb
mov
mov
fsubs
loope
pop
pop
pushf
jo
and
or
cmc
mov
std
iret
rol
in
push
mov
add
lret
std
jmp
or
ja
shlb
mov
mov
xor
xor
sbb
scas
push
clc
mov
push
mov
or
int
xchg
pop
inc
push
jnp
pop
xor
inc
in
test
repnz
fistpl
jl
movhlps
lods
ficoml
sub
popa
ror
loopne
cmc
fwait
or
dec
inc
inc
insl
addr16
add
ret
inc
mov
jno
ja
std
push
sbb
xchg
nop
push
push
pop
cmp
mov
or
jnp
add
pushf
dec
cwtl
loopne
lret
xchg
push
out
and
cmc
leave
push
ja
xchg
fimuls
aaa
nop
xchg
jle
xchg
dec
ljmp
adc
xor
dec
jne
adc
imul
dec
jecxz
cmpsb
gs
ljmp
dec
ss
inc
cld
dec
lods
lods
pop
sti
icebp
jmp
icebp
xchg
mov
ljmp
xor
arpl
pushf
mov
dec
push
sub
mov
sarb
nop
or
cltd
int
subl
mov
jecxz
adc
jg
rclb
add
mov
pop
in
and
jnp
ss
loope
jmp
mov
test
stc
fisubs
cmp
add
test
add
popa
sbb
out
lea
xor
xor
outsb
or
push
pusha
fmul
dec
or
jb
mov
inc
cmpsl
cld
int3
jae
dec
jg
mov
jmp
or
shlb
rclb
sub
ret
jo
fwait
aad
mov
inc
es
adc
aas
hlt
or
into
push
stos
mov
leave
repnz
pusha
pop
pop
inc
sub
jbe
inc
fs
mov
cmp
ficoml
leave
and
cmp
xchg
push
icebp
mov
cmp
pop
and
js
sar
aad
fildl
jns
mov
push
push
fcomi
cmc
pop
dec
inc
out
ret
hlt
inc
rclb
jmp
cli
mov
and
jle
mov
xchg
aam
mull
mov
pop
cltd
out
ljmp
fs
mov
sub
mov
aad
loopne
repnz
int3
push
fldl
leave
inc
das
lods
js
lds
subl
and
lods
cmp
mov
aas
inc
cmp
inc
repz
push
loopne
lahf
push
repz
sbb
cmc
mov
xlat
rorb
cmp
sbb
xor
mov
sahf
sbb
sub
bound
xor
imul
add
in
inc
cmpl
in
sbb
hlt
push
and
dec
and
ret
or
and
push
sub
push
repnz
and
xchg
adc
test
jns
clc
mov
adc
std
mov
imul
lahf
push
jmp
sbb
inc
out
shlb
cmp
rcrl
movsl
mov
lock
jle
mov
adc
and
lds
int3
add
repnz
push
or
mov
xchg
push
loope
xchg
es
sbb
pop
push
hlt
sub
fisubl
test
ror
ffreep
and
inc
repz
popf
push
push
shlb
push
sbb
fcompl
push
arpl
lea
jl
mov
xor
pushf
inc
mov
imul
push
cli
push
ss
jecxz
mov
into
loop
cltd
out
sti
imulb
cltd
and
fs
loop
or
add
cmpsl
sub
fnsave
adc
adcb
push
js
lret
sbb
mov
inc
push
fucomp
fidivrs
inc
mov
xchg
cs
push
jns
fwait
add
xor
imul
imul
adc
leave
fldt
and
jne
nop
and
enter
push
jb
mov
dec
add
inc
andl
movsl
mov
or
push
popf
mov
lret
nop
inc
mov
push
or
mov
xchg
test
lea
dec
in
and
addr16
jecxz
push
je
pop
fucomp
or
leave
decl
and
lods
incb
in
gs
and
push
push
idivl
les
adc
add
cmp
mov
xor
adcb
mov
bound
jle
cmp
add
mov
push
add
mul
iret
and
xchg
jl
cli
mov
stos
int
push
xchg
sahf
ljmp
ss
push
push
ds
test
add
fiaddl
add
cmp
cs
pop
xor
inc
pop
jne
or
mov
loopne
push
out
or
and
das
cli
pop
into
and
adc
jbe
or
push
shll
lret
je
inc
cmpsb
jg
pop
inc
add
out
push
dec
cmpsl
call
and
add
mov
adc
sub
aas
xchg
in
push
clc
mov
cmp
fsubrp
or
mulps
cmp
adc
sbb
push
rcr
xor
mov
mov
and
loopne
inc
icebp
mov
scas
fwait
test
ret
bound
mov
push
jno
call
lahf
fldcw
xor
fimuls
testb
shlb
cmp
xor
iret
push
test
cmpsl
jge
cmp
pop
je
and
xor
lcall
add
aam
pushl
sbb
mov
mov
push
sbb
xchg
and
sbbb
fidivs
or
fstpt
jge
nop
xor
pop
inc
sbbb
into
mov
or
jne
pop
gs
push
int
test
stos
mov
add
jo
movsb
subb
adc
movaps
clc
enter
add
adc
test
fiadds
xchg
cmp
notb
out
push
lret
leave
movl
pusha
cmc
push
clc
lds
pop
fcoms
into
fcoml
xor
test
popa
pop
mov
inc
aam
ret
xor
in
aas
nop
inc
sarb
stos
daa
daa
mov
add
pop
add
or
push
leave
je
mov
fs
push
adc
xor
push
test
sub
das
shrb
jno
cmp
out
repz
cmpsb
mov
add
out
fimull
sti
mov
mov
cmp
not
lds
dec
pop
xchg
clc
repnz
into
inc
test
jnp
push
and
sub
xor
jo
jg
xor
jbe
out
repnz
ja
sbb
das
and
ficoms
inc
pop
pop
lods
pop
jb
push
stos
movsb
clc
dec
add
je
xchg
mov
mov
sahf
mov
in
repnz
xor
push
jo
sarl
out
push
jge
repnz
daa
dec
gs
lahf
fisubrl
jno
lret
sub
inc
push
adc
jno
mov
sbb
lods
lea
data16
int
ljmp
cli
jne
adc
adc
aaa
int
es
cmp
jmp
xchg
inc
adc
mov
mov
add
inc
inc
mov
arpl
lret
sbb
mov
or
mov
pop
pop
xchg
xchg
push
nop
cmp
call
arpl
out
sub
out
mov
int3
mov
fcomp
leave
dec
into
inc
jp
jecxz
adc
dec
or
js
les
ja
ljmp
mov
repz
lahf
jmp
rol
dec
cli
jge
call
imul
or
pop
mov
xor
sbb
add
pop
pop
cmp
outsb
or
enter
dec
aas
adc
jno
lret
xchg
je
cmp
dec
std
repz
ljmp
cmp
shll
hlt
popf
mov
adc
sbb
pop
mov
mov
mov
pop
and
out
in
imul
xchg
sbb
add
xor
push
mov
fldenv
push
in
cmc
ljmpw
aaa
cwtl
xchg
ss
vmovdqu
insl
outsb
popl
mov
out
lret
cwtl
adc
sbb
test
adc
cmp
add
pop
popf
push
aam
or
and
ret
inc
inc
loop
jg
jne
test
adc
aam
dec
or
inc
adc
pop
movb
mov
dec
add
popf
ficompl
xchg
icebp
jl
jns
jmp
mov
xchg
fcmovnu
mov
fwait
jne
es
pushf
je
rolb
mov
testb
mov
sbb
adc
adc
mov
push
or
out
xchg
dec
lock
adc
sbb
xor
mov
mov
pop
xor
enter
jb
cli
ds
rorb
push
ficomps
push
fidivs
pop
jl
outsl
daa
je
adc
sbb
or
xchg
popf
testb
mov
sti
xor
jns
add
rorb
insl
jnp
adc
xchg
dec
test
loopne
dec
sub
es
sbb
add
leave
stos
insb
adc
xchg
xchg
pop
or
cmp
push
mov
and
imul
inc
inc
inc
add
jmp
add
add
les
out
xchg
dec
pushl
dec
xor
mov
sub
jns
inc
lock
dec
xchg
test
mov
push
mov
and
into
shl
fmul
stos
or
call
xor
xor
outsl
push
push
and
inc
flds
sti
xor
mov
sti
jno
adc
pop
popf
jnp
rcrb
pop
push
add
pop
or
ss
hlt
jecxz
and
repnz
and
inc
and
gs
rclb
mov
fidivrl
sub
mov
xchg
jecxz
inc
pop
mov
mov
fimull
movsb
test
sahf
ja
jg
movsl
inc
xchg
mov
frstor
jmp
ljmp
adc
sub
push
pop
mov
test
lret
aaa
fisttps
das
pop
add
mov
cwtl
cmp
xor
movsl
mov
dec
leave
jge
leave
fimull
sbb
sub
push
clc
or
mov
inc
incb
pop
jne
push
dec
and
jo
add
add
and
mov
imul
scas
cld
out
aad
ljmp
bound
jnp
iret
cmp
or
mov
mov
jno
cltd
push
or
pop
sarl
lahf
xchg
gs
out
push
mov
jnp
cmc
int
inc
mov
adc
inc
sbb
inc
sbb
sarl
lods
xor
stos
daa
test
sahf
push
dec
xor
insl
ja
fwait
aas
inc
jbe
dec
sub
jno
add
inc
aaa
push
shll
and
insb
mov
ja
jo
xor
cmp
lods
test
ret
mov
mov
or
jp
mov
xchg
movsl
push
icebp
inc
adc
fmuls
mov
pop
call
movb
mov
ljmp
int3
in
mov
jecxz
sahf
jmp
repnz
icebp
push
shlb
jge
add
call
sbb
stc
and
push
dec
fs
imul
call
cmc
and
sbb
int3
in
jecxz
push
ljmp
inc
xor
adc
mov
pop
rcrb
sti
mov
lret
sbb
jns
movsb
mov
punpckhdq
rclb
sub
les
popa
mov
icebp
add
xor
fidivrs
mov
fldcw
hlt
loopne
jecxz
sti
ljmp
add
cmc
adc
push
imul
mov
pop
iret
loop
pop
out
dec
clc
lret
cmpsl
bound
pop
xor
cmpsl
aaa
shll
mov
popa
test
push
jg
jl
mov
mov
jl
mov
adc
pop
jmp
push
out
pop
mov
cmp
in
push
ljmp
push
punpckhbw
dec
inc
repnz
jb
dec
aas
je
mov
add
sbb
insl
xchg
sahf
sahf
fld
sbb
pop
stos
sbb
mov
or
mov
pop
or
insl
cld
daa
adc
or
jne
mov
push
daa
xchg
sbb
cmp
xchg
jmp
dec
xorl
pop
cmp
mov
push
sbb
jecxz
imul
and
mov
mov
cmp
adc
push
sbb
mov
cmp
sbb
adc
rclb
fistps
adc
add
cmc
cltd
pop
inc
mov
adc
insl
enter
cs
add
mov
insl
pop
add
fnstsw
dec
add
mov
mov
xchg
cmp
iret
inc
jbe
sub
xchg
xchg
and
push
pushf
push
ret
mov
sti
out
loop
mov
push
mov
in
push
pop
cmp
dec
push
pop
adc
mov
push
sub
pop
cmp
push
dec
mov
lret
lods
mov
cwtl
dec
insl
adc
and
loopne
lock
pop
adc
fistl
out
cmpsl
inc
aas
xchg
pop
es
xchg
mov
imul
xor
cltd
cltd
sub
dec
cmp
ja
xor
push
sti
jg
fidivrs
xchg
in
jmp
movl
int
dec
es
sub
repz
incb
fisubl
cli
inc
add
jmp
adc
sarl
sub
lret
sti
js
and
popa
sbb
and
inc
ds
ret
push
leave
pop
lret
jle
pop
pusha
leave
mov
gs
fsubl
aas
jge
dec
add
stos
in
movsl
mov
add
ds
cltd
mov
mov
lods
test
jmp
sbb
xchg
adc
cli
cmp
push
outsl
push
ss
fcmove
fsts
sbb
or
or
add
or
fs
aam
mov
aam
sub
call
lcall
stos
bound
stc
inc
cli
push
jg
mov
add
mov
imul
cmp
push
dec
mov
sbb
jne
pop
pusha
inc
xlat
fists
mov
movsb
sahf
lods
or
add
pop
cs
and
loop
rorl
lock
pop
pop
xor
mov
mov
jae
dec
stos
shll
cmp
fs
aaa
icebp
push
cmp
addr16
add
imul
cmp
hlt
idivl
cmp
movsb
dec
imul
daa
pop
add
adc
push
lock
lds
enter
lods
or
sub
sub
sub
push
mov
jecxz
cli
mov
mov
push
sti
xchg
push
out
mov
mov
pop
push
ja
mov
je
sub
dec
push
and
lea
adc
imul
or
stc
sbb
xchg
and
testl
cld
dec
je
and
cmp
sub
xchg
and
ds
gs
pop
fcmovne
pmaxsw
aas
std
sbb
dec
inc
mov
mov
cwtl
popa
lcall
and
repz
xor
xor
dec
xchg
push
adc
arpl
imul
jae
mov
lret
mov
mov
mov
push
xor
cld
fsubl
and
repnz
scas
jl
cmpsl
aas
lea
fisubs
xor
push
inc
addr16
push
adc
ret
pushf
jmp
add
arpl
idivb
dec
nop
repz
stc
addb
negl
ss
call
adc
xor
lret
sbb
cmpsb
out
xchg
push
or
jmp
stos
push
cmp
scas
jle
inc
es
hlt
sbb
rclb
fisttps
lcall
jns
mov
mov
xchg
out
arpl
sahf
mov
enter
cmp
sub
push
jl
es
out
fwait
cmp
leave
fistpll
dec
inc
popf
clc
sbb
loopne
and
pop
sub
pusha
cs
inc
jne
js
hlt
lds
mov
cmpsb
push
lods
push
cmc
inc
das
sbb
jb
aam
dec
dec
jle
hlt
lods
cmp
mov
and
pop
adc
dec
addr16
mov
shlb
push
xchg
scas
push
in
mov
loope
mov
out
cmp
pop
es
arpl
pop
push
gs
loopne
mov
pushf
cmpsl
aaa
loopne
movsl
add
jecxz
vpunpcklwd
cli
cmp
inc
lahf
mov
lea
fisubrl
pop
std
adc
mov
jmp
daa
push
xchg
and
xchg
sub
cltd
test
xchg
jbe
or
mov
or
insl
pushf
push
jecxz
ret
adc
popf
ficomps
xchg
call
int3
enter
cmp
icebp
test
xlat
in
xchg
jp
or
xchg
or
pop
mov
xchg
mov
shlb
inc
inc
cmp
mov
jg
imul
pop
cmpsl
inc
ret
clc
push
imul
xchg
js
add
mov
jnp
push
pop
enter
push
adc
jns
mov
adc
lods
lock
xchg
and
sbb
inc
inc
xchg
gs
lret
xor
add
and
dec
jo
sbb
das
fsub
rcll
scas
cmpsl
cmp
jne
sbb
fdivr
sub
adc
inc
cmc
adc
stos
adc
xor
sub
aaa
jmp
sbb
cmp
and
sbb
ss
xor
mov
add
mov
insl
scas
popa
xor
sub
pop
repnz
loopne
dec
dec
inc
outsl
pop
cwtl
sahf
add
test
adc
inc
jo
or
push
xchg
gs
out
mov
dec
cmp
mov
jl
fimuls
push
lds
incb
arpl
adc
dec
pop
xchg
loop
adc
push
sbb
jg
pop
sbb
btcl
decl
fs
push
inc
call
fcmovne
inc
jae
outsb
pop
jmp
fldl
jnp
cmp
stos
xor
pop
jbe
xchg
and
mov
push
filds
cltd
mov
add
mov
sbb
test
sbb
xchg
sub
sub
adc
adc
shlb
fwait
xchg
out
cs
in
iret
push
push
iret
pusha
mov
xor
out
lods
fld
pushf
loopne
mov
popa
imul
shlb
aam
dec
pop
cmp
and
filds
jne
clc
mov
out
aad
call
pop
int3
xor
jmp
das
call
stos
aas
or
xchg
pop
cli
ljmp
outsl
movsb
cmpsb
adc
mov
xor
xor
clc
mov
ret
cmc
pop
mov
lret
in
jg
int3
sub
xor
hlt
inc
xchg
pop
sub
movl
sti
push
mov
jg
jle
aas
cmp
mov
mov
add
sbb
cltd
mov
add
xchg
mov
and
and
sti
out
add
and
pusha
lea
dec
or
insb
out
pop
out
fisttpl
mov
clc
add
dec
es
sti
jo
mulb
in
jne
ljmp
pop
and
ret
scas
push
xchg
xchg
pusha
fiaddl
push
imul
xchg
inc
icebp
sbb
and
mov
test
loopne
js
mov
sub
sub
fs
or
or
mov
mov
je
scas
cmc
jae
xor
in
inc
or
mov
in
push
std
pop
mov
jb
pop
rcl
in
loop
scas
mov
jp
mov
je
sbb
jp
cmp
dec
fucom
test
arpl
lahf
orb
divps
xor
adc
lods
push
divl
fcompl
test
push
mov
je
mov
jg
rcr
ss
cmp
arpl
inc
repz
rcl
addl
scas
lcall
cmpsb
sub
fucom
mov
sbb
sbb
mov
int
or
std
push
xor
mov
adc
sbb
mov
xor
push
cmp
xor
xor
cmp
rcrb
pusha
cmp
adc
loopne
es
mov
push
pusha
aaa
insl
xor
push
jno
les
mov
xor
andb
les
xor
pop
bnd
cmp
fisttps
sub
xchg
lcall
cli
or
sbb
sbb
test
add
lahf
inc
int3
push
jmp
push
mov
test
mov
stc
xor
mov
xorb
adc
xchg
inc
sbb
mov
mov
rcrb
aaa
jl
sahf
push
out
mov
pushf
inc
add
repnz
xor
xchg
adc
cmp
add
ret
pop
cmp
jb
enter
mov
mov
adc
dec
cmc
cmpsl
jge
dec
pop
adc
xor
mov
cmpsl
gs
cmp
xchg
in
and
xchg
push
mov
int3
inc
fwait
sbb
push
fdiv
scas
and
inc
out
xchg
jbe
sahf
xchg
pop
pop
adc
push
mov
test
inc
pop
pop
mov
push
test
das
jo
adc
pop
sbb
inc
and
test
xchg
add
fsts
dec
imul
push
xlat
or
cltd
test
cmpsb
rcr
mov
mov
sarb
jae
jge
ja
and
out
sub
arpl
inc
mov
addb
loope
icebp
and
push
ret
orl
mov
test
lret
mov
imul
lret
jecxz
cmp
and
in
stos
xor
jmp
push
es
ljmp
cmpsl
sub
and
sbb
or
stos
mov
jge
mov
pop
jae
sbb
stos
pop
fistl
orb
outsl
icebp
int
cmp
sarl
lea
jmp
and
jne
dec
repnz
pop
ret
movsb
push
adc
test
xor
or
or
sub
cmp
mov
outsb
call
mov
popf
stos
in
js
xor
testl
sub
xchg
sbb
insb
pop
mov
and
jp
lods
add
fisttpl
adc
xchg
pop
fs
sub
adc
pop
sbb
pushf
lahf
push
xor
jmp
pop
mov
lret
jo
and
shrb
mov
daa
or
mov
xchg
sbb
lret
fistpl
cld
push
outsb
mov
popa
inc
adc
pop
push
add
xlat
outsb
lahf
sbbb
xchg
jecxz
xor
xchg
lods
adc
xor
icebp
data16
int3
insb
mov
jecxz
dec
cmc
cmpsl
xor
movsb
addr16
int
bound
into
jp
jge
inc
inc
sbb
mov
shl
adc
xchg
fnstsw
in
dec
in
dec
jae
bound
cmpsl
mov
xor
shll
mov
or
jge
or
lret
or
add
enter
iret
push
add
xchg
jae
push
mov
mov
and
popf
mov
ja
cmc
cltd
adc
arpl
and
cmpsb
xlat
fwait
sahf
push
sar
fsts
cwtl
or
adc
sub
jmp
ficoml
and
psubd
popf
loope
loope
add
and
lret
mov
stos
mov
jl
lcall
sbb
and
or
ficompl
inc
lods
jge
scas
enter
aas
push
adc
in
cli
xchg
pop
cmp
lods
lods
out
cltd
sub
pop
mov
int
sbb
cmp
sbb
lret
xor
aam
sahf
les
cwtl
fincstp
mov
stos
mov
mov
jg
cmp
mov
sbb
jmp
xchg
sub
jne
dec
pop
mov
push
mov
sbb
xor
rep
cmp
loop
push
and
sarb
daa
lock
bound
incb
cli
js
push
add
xchg
lahf
imul
pop
in
jnp
ret
pop
add
pop
sub
stc
clc
mov
popf
in
jne
sarl
push
pop
fs
lret
aad
sbbl
cmp
cmp
sti
loopne
movsb
and
iret
adc
push
shll
mov
xor
fistpl
pop
lret
loop
xor
popf
leave
loop
je
ds
pop
inc
scas
xchg
add
mov
cli
test
fnstsw
clc
lahf
inc
jb
cmp
mov
rol
movsb
mov
dec
test
xchg
icebp
push
testl
mull
dec
xchg
pushf
das
cltd
lods
hlt
test
insl
mov
push
in
pusha
mov
jbe
sti
sbb
pop
push
roll
cmp
js
or
mov
in
adc
jno
add
je
push
or
sub
cmpl
jnp
sub
scas
cmp
aad
xchg
mov
add
mov
sahf
mov
stos
enter
sahf
xchg
iret
sub
int3
arpl
iret
add
jb
xchg
popf
inc
jge
ljmp
ficoms
add
pop
std
iret
xor
pop
fcmovb
mov
cs
push
add
adc
xchg
stc
cmc
add
enter
lock
hlt
mov
subps
xchg
jle
divb
out
mov
push
outsl
leave
out
ss
mov
cmp
pop
lahf
ficoms
ret
imul
in
je
and
aam
pop
push
repnz
mov
push
fisubs
repnz
sub
popa
ja
adc
dec
hlt
mov
cwtl
in
adc
inc
test
divl
scas
or
cmp
jno
int3
xor
test
movsl
mov
js
gs
movsl
mov
rorl
pusha
ds
mov
xchg
movsl
jmp
mov
and
push
xor
adcl
int
call
mov
jl
or
xchg
pop
popa
push
pop
popa
ds
pop
xchg
jle
shlb
clc
add
push
mov
pop
jnp
add
divb
sbb
arpl
mulb
dec
jl
in
fsubs
test
sub
out
fisttps
mov
das
inc
adc
jb
lods
mov
cmp
pop
push
xchg
scas
mov
push
add
adc
dec
int
fwait
mov
data16
adc
xor
push
ror
insb
lahf
ss
lds
dec
xchg
xchg
out
sbb
pop
pusha
pop
jecxz
adc
pushf
add
out
push
dec
aas
movsl
inc
xchg
add
xchg
fistpl
inc
xchg
mov
lahf
insl
in
int
std
int
mov
mov
jnp
scas
shll
into
into
push
sub
adc
dec
cli
leave
ret
jb
cltd
xchg
mov
insb
shl
aam
fisubs
mov
hlt
push
stc
arpl
sbb
jae
push
pop
jmp
imull
push
or
xchg
scas
mov
push
enter
xchg
call
pop
hlt
mov
cmp
add
flds
mov
pop
test
lret
notb
icebp
movsl
push
aaa
inc
pop
aaa
into
push
push
rorb
mov
ds
mov
sbbb
sub
push
sbb
xchg
lret
jle
sub
paddd
incb
xchg
fcmovnu
xchg
clc
mov
scas
icebp
push
or
mov
cli
sub
rol
lods
sub
mov
pop
adc
xchg
fisubl
lahf
mov
push
dec
lds
mov
xor
rcrb
xchg
cli
movsl
mov
mov
in
and
adc
jl
push
xor
shll
xor
adc
and
iret
and
add
mov
jp
jns
popf
mov
pop
cmp
loop
aam
fwait
int3
inc
dec
pop
fstpl
ret
push
sbb
not
sbb
dec
leave
shlb
sub
out
das
inc
leave
sbb
or
mov
mov
pop
enter
aaa
icebp
mov
push
jne
pop
xor
mov
dec
loop
rcrl
mov
mov
test
dec
icebp
cmp
mov
dec
mov
add
dec
fcmovnbe
xor
sbb
or
scas
xor
movsl
loope
cs
addr16
cmpl
aas
jp
xchg
call
jmp
dec
decb
push
xchg
das
cmpsl
incb
and
and
das
pop
sbb
bound
stos
addr16
or
add
mov
scas
rorb
add
jb
fbld
test
add
ficomps
jp
xchg
insb
push
or
pop
mov
outsb
subb
sar
mov
or
outsb
push
add
pop
adc
shll
jp
xchg
rorb
nop
loopne
dec
mov
push
ljmp
pop
ljmp
lret
xchg
scas
pop
mov
test
fdivrp
insl
mov
dec
jecxz
inc
je
xchg
mov
or
xchg
pop
js
ror
js
dec
sbb
xor
xchg
dec
pop
ficompl
ljmp
xchg
inc
add
lds
inc
pmulhuw
shlb
lea
xchg
loope
icebp
mov
dec
popf
or
out
jmp
inc
push
scas
pop
ds
lcall
int3
ja
dec
pop
stos
cli
inc
xchg
push
jge
mov
jecxz
scas
cli
mov
jecxz
popa
dec
sti
cmc
jge
pop
xchg
cmp
jecxz
icebp
outsl
test
cmp
popa
cwtl
jl
dec
jo
dec
stc
mulb
inc
mov
fsubl
xchg
popa
ret
sub
subl
scas
ret
out
sub
jp
push
dec
adc
loopne
add
push
mov
jnp
movsb
push
pop
shlb
mov
daa
inc
or
mov
aas
lock
sub
jle
pushf
aas
outsl
ds
lret
mov
rclb
pop
mov
pusha
pop
mov
mov
test
xchg
add
sub
push
test
sbb
call
mov
mov
imul
or
cs
ss
cmp
mov
mov
jne
dec
stos
jno
cmp
cmp
fmull
cmp
mov
dec
push
es
pop
dec
ja
ljmp
xor
mov
arpl
iret
lret
cld
jo
push
pushl
mov
push
dec
js
add
sub
adc
popf
ficoms
mov
dec
jae
iret
stos
mov
roll
test
dec
popf
xor
sub
in
mov
divl
xchg
mov
loopne
and
push
movb
loop
das
fwait
inc
push
stos
cmp
fisubl
sbb
shrb
sbb
in
in
aaa
test
in
xor
mov
sbb
push
xor
popl
xor
dec
pop
or
mov
push
pop
dec
addr16
or
sub
ja
sti
cltd
xor
hlt
xchg
les
fisubrs
push
outsb
lret
jmp
sbb
aas
push
fistps
sub
pushl
add
xchg
xor
lcall
sbb
pop
pop
cmpsl
jg
xchg
lcall
mov
icebp
mov
loopne
out
cmpb
jne
rorl
stos
movsb
jno
cltd
mov
jne
push
adc
or
push
cld
and
aad
mov
inc
xor
dec
jle
xchg
out
xchg
or
std
or
in
mov
fsubrs
aad
mov
mov
jmp
popa
push
fistps
mov
pusha
lods
mov
xor
dec
loop
add
movsl
js
stos
into
mov
adcb
fwait
sub
or
dec
nop
fcompl
in
popf
and
int
jae
mov
or
jbe
in
outsb
push
mov
loope
iret
and
pop
or
inc
fcomp
or
pop
filds
leave
leave
rolb
ss
iret
mov
inc
add
cltd
mov
adc
in
xchg
jnp
pop
or
inc
mov
test
insl
jo
sbbb
or
into
jae
subl
adc
pop
dec
les
mov
adc
fisubs
jb
add
pushl
loope
xor
insb
dec
repz
in
mov
sbb
ficoml
inc
xor
cld
insl
sbb
mov
in
jb
fdivl
icebp
fildll
dec
sbb
lods
movsl
test
cmp
fildll
ss
aad
dec
push
out
pushl
inc
gs
bound
jecxz
mov
cld
jmp
clc
xchg
rol
ret
push
aam
mov
cmp
mov
mov
mov
not
ret
sub
xor
daa
push
mov
lcall
sbb
push
pop
or
sbb
mov
aas
ss
scas
daa
cmp
pop
test
dec
jle
pop
repz
add
in
or
je
roll
jae
test
ja
jg
ret
in
mov
sar
mov
pop
fxam
jb
mov
dec
lret
push
insl
add
mov
inc
loopne
call
mov
mov
das
repz
pop
outsb
xorb
in
and
xchg
loopne
test
mov
inc
sub
or
fcoms
popa
lcall
mov
adc
loop
js
arpl
insb
xchg
xor
jbe
jo
pop
pop
xor
sub
xor
shl
sub
mov
out
sbb
add
adc
mov
jb
fisubrl
push
jno
call
stc
sarb
jge
cli
cmpsb
adc
loop
cmp
push
push
adc
adc
mov
jg
push
push
dec
dec
jmp
inc
jnp
adc
sarl
repz
mov
add
mov
xor
sbb
in
cli
mov
dec
jne
shlb
stos
cld
sub
xchg
shlb
pushl
push
or
pop
popa
adc
push
cs
mov
mov
cmp
jbe
jb
lock
pop
dec
and
push
loope
ss
inc
cwtl
ja
popa
mov
jmp
in
add
mov
aas
xchg
scas
sub
aam
test
jl
out
data16
pop
iret
push
std
lret
pop
test
jnp
movsl
jmp
and
xor
lret
mov
in
mov
jmp
out
frstor
dec
repz
out
into
cmp
inc
mov
mov
pop
and
cmp
jecxz
out
pop
les
repz
mov
sbb
hlt
int3
sbb
cmp
fcompl
mov
sbb
sbb
scas
adc
adc
push
and
push
in
inc
addr16
push
sbb
pushf
sbb
outsb
cmpsl
lods
fs
jo
or
mov
mov
lods
outsb
out
xor
in
jg
cld
xchg
mov
popf
and
int3
push
fs
lods
pop
or
mov
pop
lods
in
sub
mov
dec
rcrb
jb
es
cmp
sbb
pop
pusha
aas
adc
jns
dec
jp
mov
shll
cmpl
cmp
cmp
sbb
xchg
mov
pushf
pop
pop
sbb
jns
rorb
mov
push
sbb
mov
pop
pcmpgtb
lea
lds
push
out
and
out
cmc
sbb
stc
call
dec
xor
out
es
enter
int3
out
fcmovnu
out
cmp
aas
out
popf
pop
inc
movsl
shll
or
pushf
movsb
mov
mov
sub
stc
lods
jge
call
mov
mov
add
stos
jo
sub
cmpsl
pop
fdivrs
jae
clc
lods
sbb
cmp
jns
or
xor
test
fiadds
cltd
loope
xor
inc
mov
aas
adc
push
lds
dec
cmp
pop
int
and
jg
xor
stos
or
aaa
jge
aam
xor
out
les
rcll
or
or
pop
jns
mov
sbb
testl
mov
jbe
xor
test
push
lret
cmc
fs
push
or
pop
and
push
jmp
cmp
shl
inc
pop
cmp
and
push
cmp
test
popf
in
je
repz
push
popa
lahf
mov
cmp
test
inc
icebp
js
lret
sub
mov
sbb
fmulp
into
lret
cltd
mov
data16
xchg
push
aaa
jnp
xorps
rorl
sbbb
cmp
jg
jp
cli
enter
mov
jmp
popf
dec
ljmp
mov
loopne
add
xchg
pop
adc
fisubrl
push
out
add
mov
cmp
out
insb
andb
insl
mov
sub
popa
mov
xor
jne
mov
sti
cmp
adc
movsl
push
xchg
lss
xchg
add
popa
pop
or
xchg
les
subps
mov
inc
in
test
pop
mov
inc
push
mov
movsl
ljmp
push
ja
out
adc
in
loope
ret
les
data16
scas
xchg
hlt
ja
dec
or
sub
pop
xchg
cmp
xor
or
das
ss
xchg
push
xorl
xor
jp
pop
push
sbb
xor
mov
shll
mov
cmp
inc
std
cmpsl
sbb
jecxz
loope
stc
int3
pop
sbb
idivb
imulb
ret
add
call
inc
call
mov
pop
push
mov
les
lods
insb
jnp
push
adc
insb
fs
sub
jle
pusha
or
cld
rorb
loop
adc
cmp
call
call
mov
outsl
ja
add
adc
in
popa
adc
inc
lret
and
sbb
ljmp
cmpsb
mov
movsb
inc
movsb
insl
loopne
dec
and
lods
mov
loope
in
cmp
mov
lret
xchg
jae
and
je
mov
shlb
loop
shlb
mov
lods
mov
es
clc
dec
fcoml
xchg
loopne
dec
mov
dec
cmp
jle
fnstenv
pusha
sub
add
out
or
add
pop
push
or
inc
pop
sbb
mov
ret
jno
adc
fwait
jg
mov
addr16
popl
fdivrl
or
adc
xor
mov
mov
rcrb
adc
pop
cli
scas
and
and
pop
fildl
std
int
pop
mov
loop
sbb
and
cs
push
enter
cltd
std
gs
xchg
xchg
add
out
pop
jbe
ljmp
pop
sub
jne
cmp
adc
push
cmp
pop
or
popa
or
cs
pop
ljmp
push
fwait
push
sbb
aaa
jno
xor
ds
jae
mov
push
cmp
shlb
bound
mov
mov
fmul
mov
adc
mov
imul
cmp
test
outsl
or
add
loope
mov
jne
and
xchg
addr16
iret
das
pop
out
sti
out
mov
ja
xchg
mov
or
cmc
std
scas
mov
ret
mov
aas
push
add
adc
sbb
jp
push
cli
fstl
mov
lds
or
mov
and
aaa
out
bt
je
mov
imul
mov
xchg
lods
clc
enter
mov
pop
xor
add
daa
jb
inc
decb
dec
xor
sub
sahf
inc
repnz
movb
push
sahf
xor
inc
fwait
test
pop
je
mov
aad
or
ds
loopne
pop
enter
add
add
mov
add
or
mov
or
out
imul
add
jmp
inc
cmp
repz
add
sarl
icebp
pop
mov
cltd
cwtl
ljmp
pop
std
insb
dec
add
enter
inc
daa
mov
test
mov
pop
and
xlat
aam
mov
pop
test
lock
cmpsb
dec
andl
mov
aad
addl
outsl
fstpt
adc
pushf
imul
div
dec
lret
bound
jo
push
fldl
out
xlat
push
movsb
dec
xchg
leave
mov
mov
push
mov
lret
lahf
cmp
clc
pop
hlt
ss
test
jne
push
adc
push
ret
inc
out
pop
sarb
movsl
pop
and
cwtl
outsl
sub
jp
imul
push
sarl
mov
in
aas
pop
dec
add
cli
ja
sub
clc
inc
outsb
movsl
sbbb
movsl
lahf
call
or
out
mov
lret
jmp
shlb
cmc
leave
add
fimull
and
sbb
mov
pop
xchg
pop
test
sbb
push
inc
out
repnz
adcb
scas
rolb
ja
xor
adc
cmp
sbb
sbb
and
loopne
sti
clc
mov
cli
mov
loope
push
sub
cwtl
fisttpll
xchg
mov
and
inc
mov
push
mov
cmp
push
add
push
xor
cmp
and
sahf
jo
fidivrl
and
push
sbb
mov
mov
ja
clc
lock
aas
sub
adc
test
insl
rcr
addl
hlt
jmp
std
call
cmp
cmp
mov
into
pushf
sub
mov
jecxz
mov
push
testb
add
mov
pop
daa
add
js
mov
dec
adc
xor
jg
mov
in
fwait
ret
icebp
test
push
pop
test
mov
fwait
scas
jge
pop
aad
pop
pop
ljmp
jae
cli
and
fnsave
sub
fldenv
faddl
fstpl
cmp
outsl
scas
loop
sbb
rclb
loopne
adc
ja
jmp
mov
ss
rcrb
iret
pop
add
cmp
or
and
int3
xor
and
mov
xchg
sarb
iret
mov
or
inc
add
leave
jecxz
mov
jo
inc
xchg
testb
push
push
sub
inc
mov
sub
incl
rclb
jl
push
lret
fstps
pop
pushf
lret
sbb
jg
scas
xchg
pop
and
loopne
sub
or
orb
mov
in
mov
cwtl
pop
pop
cmp
roll
inc
cli
in
clc
movsb
mov
and
rcll
lds
imul
movsb
in
nop
cmp
lds
xchg
aam
xor
sub
pop
sub
pop
enter
and
adc
fwait
std
push
loop
iret
xchg
and
mov
mul
in
jne
pop
ljmp
aad
inc
pop
fldln2
test
cs
fisubrl
fidivrl
das
out
pusha
pcmpeqb
mov
add
adc
inc
dec
dec
mov
iret
sub
cs
fsubrs
cmp
jmp
xchg
out
dec
lahf
mov
rorb
ja
push
xor
jns
cld
mov
imul
gs
ret
out
jle
sub
into
sarb
or
mov
and
repz
stos
loop
push
jae
or
or
xor
or
int3
in
inc
or
cmp
stos
cmpsl
roll
or
add
mov
in
push
push
rcl
or
daa
push
arpl
pop
cmp
out
imul
jbe
test
ror
sti
lret
push
ss
insb
out
scas
push
sub
mov
insl
adc
add
into
xchg
call
push
sub
daa
dec
movd
xchg
xchg
jp
cmp
aas
test
jne
cwtl
inc
adc
cld
dec
aas
test
pop
std
insl
nop
mov
mull
cmpsb
mov
fisubrs
jbe
call
pushf
loop
or
js
fcomip
adc
pop
ss
xchg
pop
mov
cmovp
daa
hlt
outsb
adc
movsl
ret
jge
mov
push
std
pop
ja
divl
arpl
jnp
popa
out
adc
imul
pop
rolb
dec
dec
js
movsb
or
cmpsb
mov
andl
repz
sub
dec
ret
jne
xor
ret
mov
xchg
sbb
cli
loop
insb
in
fsubrl
and
pop
and
nop
sbb
fistpl
rcr
jno
mov
add
out
push
stos
dec
adc
pop
mov
aas
fisubrl
cmpsl
roll
mov
scas
lock
daa
or
into
std
xor
inc
popa
xchg
andl
fsubrs
pop
outsl
clc
pop
pop
aas
pop
loopne
lods
mov
mov
fsubrp
inc
or
mov
sbb
mov
or
gs
cld
add
movsb
add
andb
jae
xchg
cmpsl
mov
fs
inc
les
ds
ret
out
inc
mov
xchg
call
in
cld
stc
sbb
sub
mov
jecxz
pop
dec
fisttpll
mov
jns
mov
mov
ret
shl
push
sub
rorb
fadd
adc
aaa
imul
popa
jno
xchg
mov
push
iret
movsl
fstpt
cmp
jp
daa
push
cmp
pusha
popf
sub
dec
fcmovb
cmp
mov
xchg
in
outsl
out
jae
int3
cmpsb
imul
inc
stos
or
sbb
sbb
mov
js
cmc
out
into
and
pop
xchg
jl
test
js
cwtl
in
cmc
mov
cmpsb
xlat
xor
jns
jne
xchg
sahf
out
pusha
in
es
cs
inc
lods
xor
scas
sub
pop
inc
jns
add
push
mov
arpl
pop
aas
dec
jecxz
lods
inc
cltd
mov
aas
std
subl
idivl
pop
jmp
leave
mov
stc
int
mov
out
sub
mov
push
cld
pop
fwait
mov
int3
push
rcl
jbe
add
icebp
fmull
mov
bound
in
mov
xchg
dec
and
push
mov
cltd
adc
sahf
iret
sti
faddl
test
jecxz
or
cmp
cmc
pop
mov
dec
icebp
lret
inc
lahf
test
xchg
adc
insl
sbb
jecxz
cli
pushf
loop
cmp
pop
stc
mov
dec
push
outsb
in
mov
les
aam
out
pop
xchg
inc
movsl
sub
dec
adc
fcompl
or
rorl
lods
mov
cld
dec
loop
pop
xchg
loopne
sub
inc
je
or
push
sub
add
pop
mov
fnstenv
cmpsb
sbb
test
es
jl
inc
cwtl
sub
cltd
jl
jnp
dec
or
stos
out
add
xlat
aaa
mov
xor
fsubp
xchg
inc
inc
ss
jns
push
movsb
daa
es
js
sti
adc
out
jo
movsb
mov
adc
and
imul
push
ja
or
gs
aaa
aam
lea
pop
lcall
sub
adcl
mov
add
cmp
ficoms
insl
lea
ja
pop
fs
pop
cmp
out
stos
add
repz
negb
pop
std
data16
shll
and
fcom
lret
push
mov
push
add
pop
fst
test
push
fdivs
xlat
or
fidivl
and
outsl
rorb
sbb
push
movsb
inc
xor
and
sbb
adc
add
cli
mov
bound
dec
sub
fucomip
mov
mov
cld
fwait
and
cmp
div
out
scas
push
sbb
pop
jp
ds
test
popf
sbb
mov
in
aam
fnstenv
imul
xchg
sbb
fmull
js
std
clc
mov
xchg
out
and
push
loopne
scas
xchg
outsl
push
xchg
int3
jl
es
jecxz
cs
xor
andl
jne
jmp
rolb
pop
pop
xlat
sbb
mov
xchg
sti
pop
lret
adc
xor
push
test
cmp
les
inc
pop
hlt
shll
fiaddl
lcall
iret
and
push
cwtl
sub
cmp
repnz
or
mov
outsl
cmp
gs
pop
xchg
fmuls
xchg
push
out
rorl
xor
cmc
sub
inc
mov
jl
mov
push
cmp
sti
mov
xor
push
or
packsswb
fwait
gs
lcall
push
jle
inc
in
inc
ret
sbb
or
lock
lahf
lcall
loopne,pn
cmp
pop
pop
inc
std
mov
inc
push
dec
push
fsubrl
lds
adc
and
xor
insb
adc
shrb
adc
ja
faddl
shll
sbb
scas
jo
out
jg
pop
mov
and
iret
mov
stos
mov
xchg
dec
xchg
cmp
dec
or
sbb
out
push
setb
ja
cmp
pop
or
cwtl
sbb
js
mov
ret
lret
fdivrs
push
das
add
cmc
xchg
cli
ss
adc
loope
mov
or
sahf
filds
mov
leave
repz
gs
iret
push
push
and
push
and
pmullw
pop
xor
in
lahf
adc
xchg
test
mov
and
sbb
call
xor
stc
adc
pop
aaa
and
jle
mov
lret
cwtl
insb
pop
cmp
pop
clc
loope
push
incl
adc
mov
xor
push
push
lock
pop
clc
xchg
call
imul
addr16
popa
lcall
sub
fdivp
jle
mov
andb
arpl
and
or
and
push
dec
insb
mov
sub
jp
lds
mov
jb
repnz
fwait
pop
push
pop
or
enter
dec
or
cmp
cmpsb
xchg
insl
mov
mov
pop
ret
cmc
lods
es
fildl
pop
loope
and
sbb
in
dec
pop
orl
or
dec
jbe
mov
sbb
push
inc
mov
insb
leave
dec
jns
mov
nop
mov
aas
xor
data16
jno
mov
mov
and
mov
push
cmp
push
sub
push
mov
sahf
icebp
adc
sahf
aad
repnz
jg
xchg
push
xor
and
js
mov
ljmp
push
imul
push
mov
adc
test
mov
dec
cmp
loop
push
test
imulb
and
dec
add
cmp
mov
out
test
test
xor
rcll
jg
xor
dec
shlb
xor
inc
sbb
jle
cli
test
mov
and
dec
out
xor
lods
negl
jecxz
repnz
xor
jno
sub
xchg
arpl
pushf
daa
stos
or
adc
jmp
mov
dec
fptan
in
pop
test
sub
pusha
mov
mov
add
je
pusha
sti
mov
xchg
sbb
inc
dec
cs
lcall
hlt
mov
imul
jno
sbb
mov
out
popa
dec
xor
lcall
aas
jo
push
cmpsl
ret
imul
adc
inc
inc
and
test
lods
pop
xchg
jg
int3
mov
xor
test
pop
jle
movsb
rclb
unpcklps
inc
or
lock
inc
jnp
jge
cmp
movsl
sbb
es
xchg
mov
addr16
insb
flds
jg
xor
xchg
aaa
push
es
sbb
jno
adc
sbb
hlt
nop
lds
jmp
mov
add
push
jl
push
ret
fs
adc
jae
xchg
inc
mov
mov
cmpsb
push
iret
sahf
dec
test
outsl
jae
js
fisubrs
and
lahf
lods
pop
gs
xchg
cwtl
sbb
mov
notb
movsb
fdivs
cltd
test
sbbl
sahf
adc
jnp
push
inc
jne
lret
xchg
xchg
shll
jne
mov
aam
jge
dec
mov
dec
inc
arpl
adc
jae
push
sahf
xor
int3
fcoml
lock
mov
mov
mov
or
xchg
sub
out
push
sub
jmp
mov
adc
cmp
mov
dec
jae
and
lret
sbbb
mov
inc
ljmp
leave
pop
imul
cmc
clc
inc
stos
jge
push
xor
outsl
imul
xor
pop
sahf
mov
dec
xchg
rcrb
push
jle
outsb
mov
leave
repnz
cld
push
xor
int3
addr16
fwait
daa
mov
cmpsl
ja
pop
sub
push
dec
push
enter
dec
push
adc
loop
out
shll
and
xlat
or
inc
cwtl
and
ret
and
icebp
dec
dec
mov
xor
push
cmpsb
mov
or
ja
sub
scas
test
cmpsb
cmpsl
shr
hlt
xchg
lret
sbb
xchg
les
insl
push
nop
mov
jge
push
outsl
jge
and
sub
cmp
loope
mov
or
xchg
add
xor
pop
insl
or
js
mov
in
daa
cs
aad
into
adc
xchg
aad
fwait
mov
xchg
scas
add
pop
dec
cmp
add
stos
jp
pop
inc
pusha
pop
inc
or
sbb
rolb
in
cmc
sarb
xor
mov
cld
inc
icebp
cmp
in
inc
adcb
bndstx
call
push
and
adc
sbb
pop
pop
imul
cmpsb
test
lret
cmp
adc
push
negl
jmp
je
mov
jecxz
mov
xchg
sub
ficoml
jns
and
fs
adc
lds
jne
jmp
push
inc
inc
sbb
cmp
imul
rorl
les
fists
jmp
push
mov
ret
xchg
cmp
hlt
stc
or
adc
movsb
test
test
mov
adc
push
pop
push
xor
add
push
shrb
daa
jne
pop
jle
mov
mov
jge
mov
fs
pop
mov
ss
push
push
cmpsl
test
xor
bound
mov
aaa
into
adc
mov
jne
shlb
push
jmp
inc
sahf
mov
in
dec
pop
jmp
mov
js
mov
dec
dec
mov
push
lods
lea
cmp
nop
loopne
insb
cwtl
sub
push
sub
xchg
cmc
scas
dec
jnp
sub
sub
ffree
and
fcmovu
andl
dec
outsb
xchg
cmp
push
out
out
test
ja
stos
dec
push
setle
les
or
sub
add
inc
movsl
or
mov
xchg
lea
fmul
enter
adcb
fs
add
xor
or
insl
mov
xor
lods
push
popf
jo
adc
ds
sbb
or
pop
lea
ja
fidivl
mov
js
sbb
cmp
xchg
add
adc
xor
aad
or
fwait
jmp
mov
adc
push
jae
aaa
xlat
mov
mov
add
daa
add
lods
push
mov
xchg
mov
das
mov
push
mov
ret
cmp
icebp
cmpsl
aaa
testb
cmp
cmp
stos
icebp
mov
test
mov
test
mov
test
dec
mov
add
ret
mov
dec
add
in
and
gs
loopne
test
and
repnz
pop
add
imul
xchg
add
test
sub
ljmp
jnp
ljmp
dec
inc
inc
sub
hlt
push
jmp
cmp
or
sahf
sbb
leave
mov
sbb
mov
aas
and
inc
cmc
daa
int3
es
or
sbb
inc
fistpl
ja
sbb
lods
sbb
daa
jbe
ds
imul
mull
jl
push
in
xorl
push
daa
addr16
sub
stc
jecxz
mov
cmp
xor
mov
lea
mov
je
popf
push
and
mov
push
pop
xchg
jb
lcall
jmp
xchg
sub
in
stos
dec
rolb
repnz
mov
cltd
cmpsb
sbb
or
outsl
and
mov
xchg
cld
adc
add
push
leave
std
push
mov
out
shlb
mov
sub
mov
stos
mov
sbb
ret
add
imul
imul
js
sbb
lahf
insl
xchg
push
data16
pop
push
lea
fcoms
ret
movsb
and
arpl
dec
xor
dec
xlat
fsubrp
sbb
ja
jae
orl
push
repnz
sbb
mov
rorb
cmp
push
faddl
push
sbb
ffreep
add
mov
adc
outsl
cli
dec
adc
fptan
inc
fsubl
mov
add
pop
rcrb
adc
jne
or
push
les
mov
adc
push
in
add
incl
out
es
loop
loopne
adc
aad
call
ror
in
adc
cmp
repnz
iret
stos
add
push
js
jbe
add
push
out
sub
cmp
gs
cmp
sarb
in
inc
push
and
out
test
cmp
push
xor
mov
jle
mov
ljmp
cmp
rcrb
inc
or
mov
clc
dec
jnp
dec
push
popf
std
mov
jle
cmp
xor
lcall
jmp
stos
mov
adcl
cmp
fcomps
test
lods
repnz
xor
addr16
cmp
rcr
cmpsb
xor
and
outsb
std
xchg
jp
push
test
in
mov
outsb
adc
xor
xor
jmp
sub
mov
dec
in
jnp
clc
mov
rcr
icebp
push
push
cli
pop
loope
shrb
mov
add
adc
mov
adc
mov
mov
std
subl
cmp
jge
push
mov
lret
fcmove
push
fadd
mov
pop
pushf
dec
xchg
loop
jae
and
add
mov
into
jnp
sti
gs
rcll
cltd
ds
in
in
mov
cmp
aaa
mov
scas
or
add
and
rclb
out
mov
cmp
mov
sub
test
lcall
ja
in
fisttpl
or
test
or
popf
add
sahf
jl
hlt
push
imul
bound
gs
pop
pop
aaa
enter
or
fsubrl
and
outsb
fildll
lods
dec
inc
pop
cmc
ret
ret
xchg
inc
and
jo
js
es
jnp
testl
sar
pop
ficompl
mov
inc
xchg
xchg
jno
mov
mov
imul
mov
lret
lahf
aam
jecxz
push
in
mov
outsl
test
xor
jp
cmp
arpl
shrl
bound
mov
xchg
repz
and
xor
sbb
cmp
sbb
or
loope
pop
in
sub
and
push
lcall
jnp
and
roll
ret
sbb
inc
cltd
sarb
lods
mov
jmp
cmpsb
mov
daa
insl
add
inc
add
cmp
stos
call
jp
lea
cmc
lods
sbb
movsl
xchg
repz
addr16
or
xorl
xor
push
push
xchg
pop
cld
fdivs
inc
icebp
mov
inc
xchg
shlb
mov
or
fwait
mov
iret
mov
jecxz
repnz
stos
fldt
cltd
sahf
inc
rcr
call
bound
jmp
add
fdivrs
jle
das
dec
insl
fimuls
jp
cmpsl
push
lods
xlat
lods
mov
xchg
mov
cmp
or
dec
lock
cli
sub
icebp
arpl
pop
cmp
popa
std
sahf
add
shrb
push
nop
lahf
pop
adc
adc
or
adc
mov
push
nop
add
dec
adc
sub
bound
out
test
mov
or
add
push
cmc
or
int
mov
nop
push
stos
out
daa
sbb
mov
imul
or
loop
dec
subl
xchg
pop
test
leave
pop
push
push
pushf
mov
cmp
xchg
pop
mov
adc
sbb
aam
mov
loopne
adcl
sub
pop
inc
pop
out
sub
imul
vpsubusw
in
sub
jae
jl
xor
loopne
movsb
iret
ljmp
xchg
mov
xchg
mov
adc
sarb
loope
mov
sub
outsb
or
pusha
outsb
cmpsl
xchg
mov
push
mov
jbe
add
mov
dec
push
add
sti
and
sbb
and
scas
dec
xchg
pop
xor
gs
inc
movsl
inc
js
cltd
enter
dec
test
cld
xlat
push
push
idivl
stos
fwait
adc
add
sti
scas
outsb
mov
push
nop
pop
movsb
stos
sbb
jb
and
inc
pushf
mov
cmp
loop
mov
insb
pop
sub
sbb
inc
and
int3
push
lock
loopne
sbb
xor
pop
jnp
xchg
out
dec
js
mov
mov
shll
into
mov
cmp
call
dec
leave
in
pop
ja
insb
lods
rolb
mov
sub
fstps
push
out
ljmp
inc
cli
mov
pop
pop
pop
scas
dec
xchg
popa
aas
sub
xlat
cli
les
push
ret
jl
cs
xor
jo
mov
mov
jl
outsl
loop
lock
enter
sbb
inc
addr16
pop
scas
mov
fstps
fcom
aam
test
sbb
fucomip
cltd
idiv
mov
mov
mov
xor
gs
out
xorl
dec
andb
xchg
mov
test
test
jns
mov
sub
sbb
movsl
out
add
in
xor
ds
cmp
stos
scas
pop
sub
jns
dec
push
inc
shll
sub
imul
arpl
notl
mov
hlt
inc
mov
leave
lock
shll
insl
jo
xor
jp
mov
or
push
jle
dec
dec
outsb
push
stos
je
pushl
ljmp
mov
mov
cmpb
cmpsb
test
pop
sbb
scas
imul
in
test
insl
mov
hlt
and
lods
jp
xlat
dec
shll
xchg
call
jbe
int3
push
mov
test
ror
inc
cmpsb
repnz
push
sti
mov
sbb
arpl
aam
je,pt
pop
mov
xor
sub
addb
sub
mov
mov
es
xor
in
cmp
adc
aas
addr16
insb
fistl
ret
jp
push
lea
popa
fxch
jne
inc
pop
push
inc
push
lods
pushf
xor
into
mov
mov
add
out
negl
scas
push
rcr
jns
jb
fcmovne
scas
push
ds
jle
adc
in
icebp
push
enter
lcall
gs
jmp
add
inc
test
pop
or
jae
dec
inc
jp
mov
aad
jno
mov
pusha
mov
test
mov
adc
jecxz
in
in
stc
dec
imul
mov
jo
movsb
add
pop
dec
in
mov
stc
push
lcall
mov
arpl
sub
imul
sbbl
sbb
rol
inc
push
mov
xor
insb
into
movsb
enter
in
imul
enter
dec
jns
aam
in
mov
lds
sbb
hlt
sarb
xchg
lea
mov
addb
pop
subl
test
mov
inc
loopne
jnp
adc
fwait
clc
jmp
ret
mov
addr16
jmp
out
or
ljmp
xchg
inc
sbb
cli
rcl
lods
inc
mov
mov
jbe
out
outsl
mov
stos
xlat
xor
int
lea
arpl
fdivl
jecxz
sbb
sbb
out
dec
lcall
jmp
les
sub
inc
push
pop
xor
sub
jle
cmp
adc
and
icebp
lods
out
aam
test
leave
jmp
cmpsb
sbb
xchg
fdivp
or
jl
pop
fs
jb
jne
inc
add
mov
xchg
mov
outsb
sbb
mov
leave
mov
inc
mov
pop
hlt
lods
fldt
fldcw
sahf
sbb
subl
mov
inc
std
and
rorb
neg
push
out
inc
cmp
cwtl
enter
mov
iret
mov
push
and
movsb
sarl
sbb
ja
cmpsb
mov
sub
cmp
mov
mov
xor
test
xchg
dec
and
and
dec
fstpl
or
xchg
xchg
jnp
pop
or
pop
xchg
popa
xlat
lea
and
loopne
daa
sti
test
mov
mov
lret
scas
push
push
adc
or
push
out
movsl
inc
mov
stc
outsl
sub
push
or
leave
cmpsl
xchg
mov
jle
push
pushf
adc
sbb
jp
jl
jne
push
fldl
jb
out
and
sbb
xchg
fptan
cmp
mov
add
xor
push
xchg
xlat
sahf
fucom
mov
cwtl
cs
jno
fisubrl
call
fwait
loopne
cmp
and
dec
cmpsl
xchg
or
out
roll
inc
mov
cmp
add
pusha
xor
insb
imul
dec
daa
add
repnz
stos
push
cwtl
xor
inc
mov
xor
xchg
imul
mov
repnz
movswl
lcall
cmc
adc
sarl
outsl
jae
movsb
mov
adc
cmp
loop
fwait
dec
jg
data16
mov
sti
jmp
or
push
test
adc
test
sbb
ret
pushf
pusha
enter
mov
and
and
adc
out
xor
imul
adc
cltd
and
push
mov
and
cli
add
in
ficomps
mov
fmuls
pop
pop
mov
mov
hlt
pop
inc
stc
sahf
sub
add
adc
les
push
mov
xor
and
mov
insl
jmp
mov
jbe
dec
bound
imul
jne
and
sub
pop
mov
xchg
inc
mov
xor
adc
clc
mov
or
std
dec
fbld
in
sbb
jge
fidivrl
pusha
into
adc
mov
loope
pop
lahf
std
sub
filds
ret
repz
out
xchg
pop
les
lods
hlt
pop
inc
mov
or
mov
int3
cld
dec
ljmp
mov
dec
fdivs
push
icebp
les
dec
gs
sti
mov
mov
pop
sub
int
iret
insl
insb
mov
add
or
into
inc
push
aaa
cmp
fcoms
mov
movsb
les
or
std
iret
and
jnp
test
fxch
xchg
fwait
mov
bound
aam
push
ja
jb
roll
mov
sahf
xorl
pop
inc
test
or
repnz
pop
mov
pop
into
subps
sarl
js
adc
xchg
out
hlt
mov
cmc
fs
xor
push
mov
outsl
subb
dec
stos
mov
push
fdivs
xchg
nop
inc
push
inc
test
das
sbb
jo
mov
and
in
daa
pop
sub
xchg
in
xchg
sub
sub
repz
mov
aaa
outsb
jl
cmp
shlb
pop
push
imul
inc
sub
fistps
bound
inc
sti
ficompl
clc
pop
jns
hlt
testb
je
in
or
cmp
cmp
fidivl
fimuls
rcll
xchg
ret
fmulp
lcall
xlat
sub
inc
mov
fwait
inc
push
ja
jmp
mov
pop
je
adcb
lcall
jl
punpckhdq
pop
rcl
jp
fs
roll
cmp
jg
jge
and
sbb
mov
out
mov
lcall
xchg
in
pop
lcall
sbb
int
lods
rcrb
push
or
ret
test
cmpsl
inc
shrb
je
aaa
xor
mov
add
repz
call
push
mov
xor
push
repz
sub
mov
lret
jae
add
in
mov
mov
mov
add
loop
dec
add
mov
or
je
cmp
lock
pop
inc
arpl
ja
int
xor
adcl
pusha
cmpl
mov
jae
cmp
std
test
in
test
jmp
imul
jae
hlt
mov
add
int3
sbb
loop
out
mov
pop
mov
mov
or
std
shll
out
imul
aas
push
addb
sbb
adc
cmp
mov
jno
les
sub
jl
sti
stos
xchg
pop
adc
pop
xchg
pop
addl
pop
sbb
jg
jnp
sahf
add
test
xor
roll
lods
test
outsb
inc
pusha
lods
aaa
xchg
jne
mov
lea
popf
mov
out
icebp
add
ds
movl
inc
add
leave
sahf
pop
cmp
adc
xchg
in
fstpt
sbb
adc
test
lea
inc
jne
push
cmc
fisttpl
mov
mov
and
push
push
in
push
les
shrl
dec
or
jo
jmp
out
sbb
push
mov
stos
sbb
adc
lock
rorb
hlt
mov
cmc
rcl
enter
movzwl
mov
std
cmp
xchg
out
mov
and
pop
leave
mov
lahf
add
push
js
fs
pusha
inc
daa
mov
ret
loopne
loopne
cltd
mov
pop
xchg
mov
mov
inc
mov
xor
ficoms
mov
or
push
dec
or
fsubrl
and
ds
enter
adc
stos
es
cwtl
lret
adcl
sub
cltd
cli
inc
push
ljmp
push
enter
cs
sbb
cmp
pushf
sub
mov
jmp
movsl
xor
mov
fnstcw
xchg
movsb
scas
xlat
icebp
dec
add
xchg
aad
bound
out
mov
rolb
or
stos
fs
and
xor
out
sbb
les
xchg
or
xchg
pop
dec
jmp
out
fwait
mov
jp
xor
and
xchg
sub
push
add
imul
pop
mov
xchg
add
mov
insl
aad
pop
cmp
push
lcall
mov
cmpsb
in
repz
aam
test
dec
mov
mov
mov
xchg
mov
pop
xor
add
cmp
or
cmp
pop
ja
divl
mov
xor
je
add
fwait
mov
xchg
sub
mov
and
adcb
push
sub
pop
dec
subl
mov
dec
jnp
mov
pop
into
and
shll
jl
push
test
mov
imul
adc
xchg
lds
pop
dec
dec
inc
and
jb
and
inc
mov
ficompl
xor
mov
pop
cli
jecxz
in
fwait
subb
xchg
sbb
xchg
inc
xchg
xor
daa
push
pop
xchg
mov
or
mov
push
or
mov
les
pusha
and
push
repnz
dec
cwtl
repnz
mov
mov
lock
inc
test
push
call
push
movsb
adc
jp
mov
out
mov
inc
mov
pop
addr16
sbb
std
inc
arpl
cmp
add
jle
adc
mov
jo
mov
data16
mov
inc
add
out
cmc
nop
mov
or
bound
inc
mov
nop
popa
jne
sub
jnp
je
or
inc
ja
mov
jno
jge
push
outsl
lcall
adc
pop
in
xchg
jle
pop
ljmp
in
enter
data16
and
leave
sti
ficomps
mov
xorb
int3
dec
sub
pop
xor
jg
pushf
mov
xchg
outsl
add
sti
cmp
ret
mov
rcrl
sub
adc
sbb
adc
xchg
std
mov
mov
xlat
mov
in
cli
fisttpll
mov
pushf
xchg
add
fnstsw
sub
ja
mov
repnz
movsl
int3
xor
push
add
inc
dec
stos
lret
jmp
in
aas
into
dec
aad
addr16
rcll
push
or
and
les
ljmp
cmp
pop
bound
jmp
mov
sub
rorb
dec
insl
push
enter
test
pop
addr16
ljmp
mov
ret
clc
mov
gs
mov
mov
scas
sbb
arpl
repnz
and
or
adc
or
adc
mov
sahf
cmp
mov
leave
xor
pushf
out
nop
sar
pop
cmp
cmp
ss
mov
cwtl
cmp
fbstp
push
pop
mov
insl
out
jg
iret
shl
sub
cs
sahf
sbb
pushf
push
sub
xchg
cli
icebp
test
sahf
mov
or
cmp
pop
add
mov
push
xchg
ljmp
imul
mov
fs
jmp
lds
sub
outsb
mov
xchg
inc
push
in
adc
outsl
dec
sbb
jecxz
enter
sbb
sbb
js
dec
imul
xchg
and
testb
pushl
pop
xor
andb
das
fistl
stc
js
mov
xor
xor
loopne
or
jecxz
cmp
and
movsb
jge
ja
aaa
cmc
int3
fcoml
add
cmc
pop
and
sub
lret
push
or
push
fistpl
ret
xchg
scas
add
mov
xlat
rol
fs
sub
mov
es
aad
ret
xor
jno
outsl
sahf
mov
outsb
inc
subb
dec
sub
jg
add
std
test
lret
and
aaa
add
add
outsb
inc
push
pop
push
shll
push
sti
out
dec
enter
pop
push
adc
mov
rcrl
xor
pop
aaa
sar
aam
cltd
fbstp
add
loop
clc
lock
neg
sub
jb
out
or
sarb
mov
pop
ds
add
aam
mov
inc
cli
push
outsl
add
mov
repz
add
insb
push
dec
mov
push
or
pop
push
test
xor
addb
xchg
jns
pusha
cmc
mov
sti
clc
sub
push
arpl
mov
jne
sub
in
cltd
dec
shll
sub
push
dec
sahf
call
push
xor
clc
dec
sbb
cmp
leave
jl
sub
push
sti
and
out
idivb
mov
mov
nop
movsb
adc
adc
in
push
inc
pusha
dec
lds
fwait
lds
mov
mov
cmp
mov
or
test
adc
sbb
hlt
and
movb
or
xlat
lods
in
inc
daa
inc
loopne
pop
xchg
xor
stos
mov
adc
les
or
pusha
daa
adc
inc
push
stos
scas
cmp
fstps
ja
fiaddl
gs
jae
mov
lods
push
jp
test
pusha
rcll
xor
inc
and
mov
sub
xchg
icebp
dec
push
add
cli
into
fiaddl
xor
cli
enter
adc
pop
push
cmc
iret
cmpsl
or
jns
jae
test
push
icebp
cmp
int
and
mov
jns
mov
das
lods
or
mov
xchg
inc
inc
outsl
mov
mov
and
shr
pop
and
rcr
xor
mov
xchg
jl
int3
cli
mov
pop
fucomip
fmull
xchg
sub
popf
jmp
push
ljmp
movsb
mov
sub
xchg
hlt
test
cmp
sbb
mov
adc
fwait
in
mov
adc
mov
adc
sahf
mov
sbb
jge
mov
lods
mov
nop
popf
mov
das
add
lcall
sbb
stos
ljmp
leave
ss
loop
cmpsl
lret
inc
cmp
movsb
xchg
sub
ljmp
adc
mov
sub
shll
and
das
test
fcompl
or
pop
mov
movsl
popa
dec
pop
pop
sbb
es
ficoml
xor
fisubrl
jo
mov
out
imul
or
inc
jo
or
sub
rcll
sti
pop
mov
das
fxch
dec
inc
mov
mov
leave
iret
std
cmpsb
jge
sub
dec
jae
fldt
push
and
jmp
into
outsb
negb
repnz
jmp
cmc
xor
aad
xchg
cs
or
mov
mov
decb
add
pop
test
and
loope
stc
jns
stos
fwait
out
test
rclb
cmp
push
dec
pop
cmpsl
dec
lds
sub
adc
pop
and
pop
fwait
cmp
pop
sbb
stos
and
add
mov
push
loope
in
or
mov
lds
addr16
sub
negl
loope
shrb
xchg
inc
pop
movsb
sbb
push
das
xor
outsl
icebp
sub
daa
mov
xchg
sub
adc
dec
ret
stc
xchg
orb
iret
pop
int
cmpsl
cltd
loop
cmp
add
push
jb
fcmovnu
iret
pop
jb
lret
pop
lea
lods
jnp
addr16
sub
int
xor
sub
fsts
sub
xchg
or
in
and
xor
inc
pop
jbe
test
imul
idivb
enter
dec
mov
in
movsb
gs
xchg
push
pushl
in
and
loopne
xchg
mov
arpl
int3
hlt
mov
loop
in
dec
jae
aas
clc
mov
into
lods
add
jle
dec
lds
mov
es
sti
daa
mov
jb
inc
jns
add
fstpl
rcl
pop
movl
ret
mov
cmpsl
pop
or
sub
jb
dec
mov
mov
sbb
mov
dec
cmp
mov
cwtl
loop
fdivrs
push
repz
push
mov
mov
ljmp
mov
jae
and
xchg
mov
jnp
test
xor
fwait
das
rcrl
push
repnz
popf
push
sub
jbe
dec
clc
inc
or
call
negb
fnstsw
stos
cmpsl
jl
sub
lret
xchg
pop
ret
arpl
out
or
lods
cmp
aas
or
pop
inc
lock
test
shl
sub
ss
pop
fimull
rdmsr
jp
testl
dec
movsb
shl
xchg
xchg
out
sarl
add
jbe
push
cmp
pop
mov
sub
nop
ret
mov
insb
mov
pop
mov
dec
mov
dec
nop
outsl
xchg
icebp
jmp
repz
xchg
in
or
rcl
xor
xor
subb
out
mov
clc
cmp
or
sbb
add
pop
sbb
test
push
or
pushf
shrb
dec
lods
repnz
push
jno
cli
or
ret
adc
cs
in
or
sar
mov
cmp
out
sbb
sahf
or
dec
mov
rcrb
aam
fnstcw
dec
lea
stc
clc
lods
fists
inc
movsb
jmp
xlat
mov
stc
cmpl
pop
pop
or
and
jl
sub
in
push
lret
jo
lods
int
inc
mov
xchg
lds
and
pop
ror
jl
aad
and
pushf
es
inc
cmp
push
mov
xchg
push
push
js
aam
sbb
mov
adcl
movsb
inc
fidivrs
jo
xchg
mov
and
cmp
loope
sbb
in
data16
or
pop
pop
inc
adcb
stos
addr16
sub
push
insb
lret
lds
idiv
sti
jne
outsl
mov
adc
aaa
cwtl
add
les
dec
lret
mov
adc
addl
das
push
mov
dec
sub
cwtl
idivl
insb
jecxz
fistl
test
jae
push
sub
aaa
jb
dec
je
xor
dec
cmp
cs
pop
jmp
loopne
insb
test
subl
rol
dec
imul
out
push
rolb
mov
rcrb
jo
clc
pusha
mov
jge
pop
shll
pop
daa
in
sbb
in
xchg
ja
push
outsb
cmp
pop
cmpb
cli
cwtl
in
fildl
cmp
es
cltd
iret
out
sub
push
xor
fbld
cmp
cmc
repz
stos
mov
xchg
pop
xor
xchg
loop
dec
pop
je
cmp
mov
jne
sub
cmp
movhps
xchg
mov
data16
dec
in
sub
xchg
stc
push
shlb
pushf
xchg
adc
dec
cmpsb
or
stc
cmpsb
lds
rorb
lret
mov
std
pop
and
inc
or
lahf
lock
daa
lock
or
xor
iret
lock
int3
cmp
push
push
inc
jp
jg
xchg
in
dec
sub
mov
arpl
inc
jl
xchg
out
lret
xor
dec
pop
lret
enter
pop
sub
sbb
insb
idivb
jg
cwtl
test
xchg
fstpt
leave
mov
scas
sbb
lds
mov
outsb
xchg
dec
pop
jp
sub
sbb
notb
xchg
notl
test
test
jge
gs
mov
imul
fstl
mov
mov
je
jle
pop
fucom
jb
mov
sub
jae
bnd
push
pop
loope
scas
sub
ret
pop
xor
jecxz
and
stos
sub
insb
test
sub
mov
pop
sbb
adc
dec
inc
push
cld
aaa
ret
sub
sub
mov
cli
jecxz
std
addr16
cmpsl
fbld
scas
int
ret
mov
jl
mov
bound
aad
push
add
shrb
rcll
cmp
jecxz
aaa
test
call
xor
stos
cwtl
jg
jle
and
call
mov
out
orl
popa
pop
xor
inc
daa
push
data16
pop
mov
popa
mov
mov
fmull
push
mov
sbb
mov
add
fs
scas
loope
mov
xor
xchg
push
gs
stos
loop
xor
test
aam
xchg
push
fst
fs
cltd
scas
cs
sbb
out
insl
jbe
imul
cmp
not
mov
or
and
je
inc
push
push
sbb
aam
cwtl
dec
movsl
fcomip
or
jle
sbb
push
xlat
out
push
jnp
adc
fcoml
inc
sahf
aaa
inc
xchg
inc
xchg
xor
insl
icebp
shlb
or
ret
xchg
data16
adcl
aas
ss
insl
jl
xlat
pop
sti
int3
btr
pop
xchg
push
lock
rorb
ficoml
lods
leave
aam
adc
outsl
jl
or
or
lcall
loope
ficoml
mov
cmpsb
sbb
repz
es
rorl
push
ss
adc
pop
out
pop
dec
mov
pop
std
stos
int
mov
cmp
push
push
lahf
in
ljmp
mov
cmp
cld
iret
xor
dec
cmp
aad
popf
jbe
mov
xchg
cld
aas
push
mov
pusha
arpl
or
jb
sbb
sbb
lahf
push
add
inc
jp
and
fs
ds
inc
jbe
in
push
lret
rcr
or
stos
mov
lea
adc
rorl
mov
iret
jo
or
jo
push
push
mov
sbb
fs
and
or
sbb
mov
and
and
test
test
orb
stc
psubusb
inc
es
dec
mov
cmpsb
or
daa
mov
dec
imul
pusha
mov
cmp
mov
shll
mov
test
dec
fisttpll
mov
addr16
xchg
cli
xchg
pop
and
mov
aaa
cwtl
push
mov
out
jns
mov
adc
jns
fsts
jmp
in
and
rorb
sub
inc
or
mov
push
xor
dec
stos
or
xor
mov
pop
jl
insb
mov
pop
sbb
pop
adc
cmp
jb
push
push
mov
sub
push
adc
xadd
std
lret
test
lret
sub
cmc
jg
push
pop
jle
mov
cli
mov
out
add
es
mov
dec
cmp
popa
movsl
push
ss
push
loop
cmp
iretw
dec
dec
out
mov
test
fistpll
jo
lods
mov
rcrb
jae
lahf
dec
aas
add
shlb
std
adc
cli
mov
pop
mov
dec
rcr
pop
inc
or
dec
inc
dec
pop
and
push
jecxz
fnsave
dec
dec
sahf
lods
aas
icebp
ja
fs
ret
scas
aas
imul
sub
mov
mov
add
dec
pushf
shll
inc
mov
cmp
pop
mulb
push
xchg
mov
push
into
xor
and
sbb
sbb
push
jne
xchg
jge
aas
cwtl
mov
jge
jae
sub
mov
lcall
es
xchg
aad
insl
or
insb
mov
in
sbb
loope
pop
jmp
dec
push
push
pop
mov
cmpsb
adc
xchg
add
cmp
mov
mov
clc
sub
push
iret
rcr
xor
inc
and
fisubs
pop
adc
scas
xlat
jnp
int
int3
outsl
sti
dec
pop
mov
outsb
lea
xchg
pop
mov
lods
arpl
push
jp
jnp
fucomi
and
cmpb
add
add
imul
and
repnz
stc
xchg
lea
push
inc
pop
dec
pop
adc
stos
inc
mov
arpl
mov
xchg
aam
mov
mov
mov
cmc
sub
scas
dec
add
cmp
aaa
and
sbb
sbb
out
rorb
cmpsl
mov
sbb
dec
sti
in
js
sahf
push
hlt
pushf
icebp
inc
mov
or
adc
cmpsl
jno
pop
pavgw
gs
aad
nop
bound
popa
xchg
insl
scas
mov
test
lcall
jle
dec
scas
and
clc
lock
pop
mov
adc
sub
in
pushf
sbb
pop
fmuls
jne
sbb
or
cmc
jns
rolb
inc
dec
cmc
fsts
push
mov
sub
add
mov
movsb
insb
pop
add
stos
aas
mov
sub
in
xchg
mov
jl
push
mov
pop
pop
in
or
or
rcl
int3
stos
pop
in
sbb
add
adc
cmp
in
repz
cli
es
mov
mov
roll
sbb
hlt
dec
test
stc
push
jmp
leave
adc
adc
sub
push
and
inc
sarb
repz
lds
cmpsl
rclb
dec
cwtl
add
fwait
add
jp
push
lret
leave
mov
add
int3
lods
clc
push
hlt
rol
shlb
xchg
mov
lahf
cmpsl
aad
push
and
imul
shlb
pop
icebp
push
push
pop
js
nop
out
add
call
xchg
adc
pop
test
mov
imul
fs
in
call
jmp
les
std
and
lea
sub
or
popf
icebp
inc
and
fstpt
mov
aad
push
int
test
out
or
add
fadds
pusha
test
pop
inc
cld
cmpsb
sbb
mov
mov
popf
mov
mov
popa
pusha
fdivrs
mov
mov
sub
xchg
add
mov
lcall
mov
push
outsl
lret
lahf
shlb
loope
out
cmc
jecxz
lock
je
enter
cmp
outsb
push
add
lret
pop
push
mov
mov
sub
lret
adc
fdivrp
dec
lcall
das
insl
pop
movsl
and
rolb
jb
in
add
insl
pop
mov
fcmove
imul
cld
fldl
ljmp
fwait
sub
jmp
lods
fldenv
dec
jl
dec
scas
lods
flds
dec
addb
push
inc
outsl
lret
xchg
adc
sahf
sahf
adcb
fidivl
rorb
add
pop
cmp
sub
shrl
in
mov
push
push
test
shlb
arpl
outsb
xchg
cs
out
jo
arpl
out
sti
daa
ss
out
pop
xchg
fcomp
and
sub
popf
rorl
aam
sub
mov
mov
imul
push
vhsubps
addr16
popf
xchg
imul
cmp
mov
and
call
cmp
stos
fwait
adc
adc
inc
sbb
pop
xchg
scas
jbe
xchg
lret
push
add
push
xchg
mov
jns
movsl
push
cmpsl
stc
in
push
jle
add
pusha
fcomip
into
call
inc
mov
test
xlat
sub
fcmovbe
out
mov
jmp
add
mov
ja
xor
xor
mov
lock
insl
enter
fidivs
dec
mov
adc
imul
jg
sbb
stc
pop
or
lock
in
call
scas
mov
jbe
dec
adc
lea
push
push
dec
sub
dec
rcll
test
scas
inc
sbb
jl
fstps
push
arpl
in
int3
out
inc
repz
cmp
mov
adc
xchg
outsl
inc
pop
int3
xor
and
dec
push
pop
pop
insl
scas
pop
dec
add
ja
int
inc
or
fstpt
fisubl
xchg
mov
fbstp
aam
add
add
aad
test
jl
lret
cmp
mov
dec
dec
in
outsl
xor
pop
add
outsb
loopne
stos
dec
push
ds
pop
pop
mov
jp
loopne
pop
adc
mov
cmp
stc
sbb
push
aaa
inc
xor
add
aas
sbb
scas
adc
push
jo
mov
rorl
cli
jmp
in
or
sub
cmp
loope
es
cmp
dec
or
cmc
sbb
dec
xor
mov
push
mov
xchg
xchg
fistpl
sbb
jmp
xchg
adc
sar
adc
push
mov
xor
pop
mov
push
cmpsb
gs
push
add
fsubs
mov
lock
lea
push
stc
jbe
je
mov
frstor
mov
imulb
fistpll
add
ret
notb
xchg
shlb
xor
cmp
aam
rorb
aad
jnp
cli
inc
mov
or
and
adc
pop
or
adc
xor
aad
mov
data16
test
in
lret
outsl
mov
shr
fcmovnbe
inc
cs
rcrb
aas
and
imul
out
xor
in
int3
hlt
or
sbbl
les
add
push
mov
jns
ljmp
push
xchg
sbb
mov
mov
inc
or
lods
sbbb
mov
push
rclb
cltd
dec
jl
adc
inc
mov
in
rcll
ja
fcomps
in
inc
popa
addr16
pop
sbb
sbb
sti
xor
mov
mov
and
inc
mov
rorb
and
icebp
test
out
fisttpll
dec
stos
imul
push
and
subl
lods
stos
jbe
lret
lods
repz
fidivl
addr16
xor
mov
out
out
shl
fdivrs
cwtl
jae
jnp
xchg
enter
lds
fcos
shlb
in
pop
sbb
xchg
pop
dec
pop
insl
fldcw
lret
subl
sub
push
ljmp
sti
subb
push
aas
mov
jmp
push
or
in
cmp
movsb
pop
daa
mov
mov
inc
adc
mov
testl
adc
push
or
cmc
leave
and
add
sbb
jb
stos
lock
or
adc
inc
mov
add
imul
sbb
mov
adc
pop
jns
insl
gs
lcall
mov
cli
data16
push
mov
fdivrs
push
cli
and
cld
mov
cltd
sub
xchg
sub
pop
repz
mov
and
insb
pop
into
xor
sub
pop
mov
jns
hlt
mov
push
cmpl
mov
nop
lods
call
jne
add
ror
dec
hlt
cmp
mov
mov
push
adc
cmc
cmp
jmp
jo
sarb
mov
cltd
mov
dec
or
iret
es
mov
push
pop
addr16
aam
mov
imul
xor
movsl
adc
jo
outsl
sub
das
cmpsl
dec
mov
or
rclb
push
and
cltd
aaa
insl
out
sahf
sahf
in
sub
pop
outsl
pop
lock
stos
daa
loopne
push
adc
hlt
mov
addr16
mov
adc
aad
add
xchg
aam
js
and
fwait
lahf
mov
push
ljmp
or
sub
aas
sbb
bound
sbb
ja
ret
inc
dec
movsb
fbstp
arpl
dec
sbb
movsl
jmp
jns
shrb
jae
mov
lds
and
ss
pop
rclb
aad
out
jns
fadds
stos
out
fwait
mov
mov
and
jl
xor
sbb
jle
mov
test
stos
testl
aaa
sub
push
repnz
sbb
pop
cmc
scas
inc
int
pop
and
or
mov
cltd
out
mov
rcrb
jmp
pop
and
xor
mov
add
jg
dec
repnz
mov
mov
mov
sbb
mov
pop
adcl
mov
mov
xchg
ret
sbb
xchg
jmp
xchg
jg
into
push
jecxz
cli
and
hlt
jns
add
ficoml
out
call
sub
xor
inc
sub
sub
mov
push
dec
pop
pxor
arpl
add
lret
insb
cmp
shrl
and
pop
and
jnp
mov
punpckldq
lret
jl
dec
mov
js
es
inc
push
test
mov
pop
jg
jp
lods
push
push
push
movsb
push
mov
cli
xor
lock
rcrl
arpl
dec
and
pop
xchg
mov
mov
and
insl
hlt
mov
and
loop
cltd
cs
push
xor
jl
jecxz
dec
add
or
clc
loopne
in
outsb
stos
pop
cmp
jl
sub
pop
pop
mov
or
pcmpeqb
frstor
aad
lret
scas
insl
popf
test
inc
add
add
push
jns
rcl
loopne
imul
addr16
mov
add
adc
shrl
push
inc
aad
push
xchg
push
xchg
mov
xchg
mov
test
cmpsl
shrb
mov
call
cmp
iret
dec
mov
pushl
mov
xor
pop
push
cmp
xchg
test
arpl
shrb
aas
pop
popf
push
mov
mov
iret
int3
adc
sub
test
lods
fdiv
xchg
jne
test
addb
das
jb
cmp
ss
mov
cmp
push
jle
mov
mov
in
stos
mov
fcomi
loop
aas
mov
sbbl
add
mov
xor
xchg
pusha
scas
test
xor
jp
mov
hlt
jo
dec
pop
pop
hlt
and
idivb
cmp
imul
push
pop
int
and
add
pushf
fstps
dec
aaa
lods
sbb
jmp
in
mov
js
inc
jmp
cmp
gs
pop
jp
les
shlb
das
mov
cld
pop
jbe
fucom
int3
stos
cmp
imul
insl
pop
rolb
unpckhps
mov
neg
and
js
out
push
fidivl
popf
ljmp
adc
adc
fimull
test
xchg
or
bound
int3
adc
in
dec
inc
jo
stc
dec
mov
aaa
mov
pop
aas
jmp
fmull
fmulp
pop
add
out
lcall
incl
scas
dec
adc
cld
jmp
xchg
inc
fbstp
into
cli
inc
aad
gs
fs
repz
push
das
loop
xchg
int3
xchg
dec
mov
into
jge
sub
push
iretw
and
ds
clc
cmc
jo
mov
mov
repnz
movsl
mov
pop
test
xchg
lahf
stos
adc
mov
dec
sbb
cmp
shr
push
push
scas
push
iret
jne
xor
in
push
cmp
loope
iret
aad
push
pop
lret
lds
push
inc
mov
and
cmp
aam
push
rcrb
insb
and
push
lods
insb
cld
outsb
inc
push
fidivl
xor
popa
ja
fisubs
adc
jnp
iret
jbe
sub
sbbw
inc
push
fdivl
sbb
test
and
push
das
stos
cwtl
cli
mov
pop
mov
fisubrl
mov
and
sbb
pop
neg
mov
mov
fmulp
pop
lahf
push
bound
in
mov
int3
fcoml
les
xor
and
les
mov
cli
nop
add
dec
mov
mov
outsb
in
inc
dec
push
mov
sub
pop
aam
cmp
inc
jmp
pop
movsl
and
cmp
sub
sub
aad
stos
cmp
aam
jbe
jno
fisttpll
sub
mov
lea
add
jae
pop
fnstcw
outsl
mov
push
inc
dec
jae
loope
jne
repz
ljmp
push
jno
push
push
mov
ret
xorl
pushf
popf
popa
and
mov
fsts
test
and
ss
mov
dec
adc
sub
xor
mov
icebp
xor
fucom
pop
iret
ror
jg
xchg
aam
push
mov
xchg
mov
inc
popf
arpl
subb
out
xchg
jns
insl
adc
clc
es
pop
cmpsl
xor
scas
or
out
sbb
pop
pop
pushf
clc
jmp
cltd
push
stc
and
lcall
mov
dec
arpl
cmp
push
stc
push
addr16
dec
sahf
int3
jo
icebp
push
das
jp
jb
jge
pop
mov
data16
repnz
imul
inc
lcall
mov
cmc
jge
lds
test
xchg
iret
or
lahf
or
dec
loope
cltd
test
or
push
std
jno
lret
and
nop
lret
jnp
mov
cltd
xchg
sub
xor
aaa
add
fsubrs
xchg
cmp
cs
add
divb
lea
fidivl
or
hlt
xchg
mov
cmpsb
pop
xchg
ljmp
mov
sub
mov
test
sub
xchg
rcl
into
mov
call
mov
or
inc
out
xchg
sarl
cmp
mov
inc
int
fst
or
fs
pop
test
add
pop
jge
adc
inc
mov
dec
cmpsb
daa
movlps
scas
icebp
call
push
mov
and
inc
mul
int
testl
testb
bound
cld
sbb
inc
push
cmp
mov
jnp
shlb
sti
and
popa
aam
xchg
cmp
jmp
push
mov
mov
mov
leave
push
xchg
iret
dec
jmp
cltd
pusha
jo
js
mov
jne
push
fistpll
push
lahf
mov
sub
jl
mov
and
mov
sbb
xlat
out
fwait
pop
fcoms
adc
jmp
sahf
pop
fs
dec
addl
int
or
daa
mov
sub
sub
clc
mov
and
mov
pop
stos
sub
add
in
xchg
lock
fidivrs
xchg
mov
cwtl
in
ror
mov
xor
mov
push
mov
mov
and
addr16
lods
lods
xchg
push
loopne
addr16
pop
ja
push
arpl
repz
shlb
in
jg
ja
adc
pop
xchg
or
lods
lcall
mov
sub
pop
pop
xor
lods
xor
scas
jecxz
jle
loopne
out
adc
std
lret
cvtpi2ps
movsl
mov
push
lahf
pop
push
sarl
cmp
cmp
jmp
cmpl
pop
mov
cmpsb
mov
imull
int
mov
out
and
nop
mov
mov
and
call
mov
popa
jg
imul
mov
sub
dec
std
shll
iret
aas
push
js
push
dec
arpl
xor
arpl
xor
outsl
lods
leave
test
push
clc
mov
jl
imul
cmp
push
jle
sub
aad
fcomip
loop
mov
sbb
jmp
sti
add
mov
lods
jbe
cmp
test
cltd
cmp
mov
inc
sub
jp
sub
div
push
mov
adc
cmc
aas
adc
lcall
leave
xor
pop
fwait
mov
fisttpll
ret
ror
fildl
push
rolb
imul
jecxz
rclb
xorl
xchg
xchg
jmp
push
ret
out
and
rclb
xchg
cmc
inc
repnz
mov
dec
imul
sbb
jle
andl
mov
sbb
sub
mov
push
mov
mov
out
enter
xchg
movsb
dec
xchg
push
out
and
mov
xchg
add
add
es
pop
jns
lea
push
inc
shll
rclb
jmp
mov
xor
popa
in
pop
jl
cmp
add
and
cmpsb
lock
stos
pusha
mov
mov
mov
insb
mov
mov
flds
fisubrs
outsb
mov
xchg
sub
and
in
add
ja
mov
fbstp
outsb
fsubrs
lea
mov
xlat
mov
cltd
enter
sbb
movsb
sub
mov
rorb
daa
out
sub
mov
arpl
mov
mov
loope
sub
mov
jecxz
mov
idivb
shrb
sbb
sub
lret
mov
pop
repz
mov
jns
mov
popa
adc
mov
int3
lods
fisubrl
dec
xor
les
mov
subb
inc
repz
push
addl
jne
mov
ret
fs
pop
hlt
test
in
aad
xchg
mov
jl
mov
lret
push
cmp
dec
or
scas
push
jl
adc
and
dec
lods
fs
push
pushf
and
xchg
xchg
shll
sub
cwtl
cld
jl
jp
inc
insl
cmpsb
jecxz
or
pop
mov
repz
mov
xor
imul
adc
scas
mov
or
push
lock
cmc
repnz
xchg
daa
jecxz
test
or
pop
arpl
mov
jecxz
pushw
cwtl
in
ficomps
sub
scas
fnstsw
ss
imul
imul
push
in
ret
xlat
sbb
pop
lahf
in
mov
and
adc
jns
mov
inc
inc
mull
mov
pop
int
push
je
cs
insb
mov
shl
lea
ja
mov
iret
addr16
ficoms
fsubrs
sub
dec
pop
adc
imul
mov
inc
imull
jne
out
movsl
outsb
imul
call
add
adc
loope
enter
cmpl
shrb
repnz
add
les
jne
cmpl
xor
call
mov
lahf
xchg
decl
push
jae
leave
adc
jno
mov
aaa
mov
repnz
mov
push
or
lcall
pop
in
stc
push
add
inc
jecxz
movsl
int3
nop
sub
sub
xchg
clc
add
aam
hlt
inc
movsb
adc
out
sub
fldt
adc
adc
mov
jns
out
cmpsb
xchg
xchg
stc
jecxz
test
cmpsl
push
add
movsl
pop
cmp
popa
ljmp
gs
cltd
shll
lret
pushf
repz
push
xlat
mov
lock
cmc
enter
and
mov
leave
jns
icebp
adc
push
daa
or
sbb
jecxz
mov
xor
outsb
mov
cmp
add
pop
add
sti
iret
sbb
inc
shrb
xlat
test
push
or
adc
aaa
sub
adc
sub
dec
sub
mov
dec
gs
cmp
aaa
test
dec
in
mov
jg
xchg
ret
adc
dec
cwtl
gs
test
xor
daa
dec
sub
or
xchg
push
sahf
int3
push
fadd
shlb
ja
cli
mov
mov
je
adc
jge
lds
stc
sbb
pop
adc
push
daa
sub
mov
xor
out
out
popa
scas
cmpsb
cli
lcall
and
or
push
pop
sbb
sti
xchg
push
inc
ficoms
dec
imul
jle
sub
push
out
jl
inc
repz
push
cmp
je
xchg
inc
lock
jp
jge
notl
pop
push
pop
sahf
lods
push
icebp
jno
int3
test
and
jmp
dec
mov
cwtl
add
adcb
fs
outsb
nop
inc
ss
dec
xor
inc
mov
arpl
popf
inc
ss
pop
out
in
jge
jp
jmp
adc
sub
xchg
or
adc
stos
fcompl
xchg
movsl
loop
pop
fdivrp
push
adc
mov
cmp
sbb
aaa
inc
mov
sar
aad
popl
test
and
data16
jnp
and
lock
shl
mov
push
mov
insl
mov
lods
negl
js
ret
call
insl
test
pop
inc
sahf
push
lea
clc
shl
mov
add
dec
ret
icebp
or
add
push
loope
outsl
mov
mov
mov
cltd
cs
lret
cli
and
popf
lods
btr
xchg
outsl
std
jge
pop
outsb
jne
dec
je
push
icebp
cltd
shll
push
rorl
pop
subb
test
jo
je
loop
xchg
fisubrs
cmpps
loope
push
xor
mov
ds
mov
hlt
lret
enter
out
in
fimuls
mov
mov
stos
push
inc
mov
push
mov
add
cmp
push
adc
sbb
shlb
sub
sub
push
pop
aas
sub
jno
popa
sub
push
shrl
ds
in
cwtl
xor
adc
rclb
rorb
dec
sub
frstor
jl
push
and
xchg
sbb
popa
and
adc
fdivrs
pop
pop
js
je
xchg
pop
jmp
cmp
inc
adc
cs
or
pop
mov
xlat
pop
mov
daa
movsl
xorl
lret
aam
insb
fdivrp
lret
jne
mov
xor
out
pop
add
insl
addr16
sti
cmp
mov
jo
rolb
insl
cmp
mov
jae
jg
shl
push
shll
andl
ss
add
push
dec
aad
adc
dec
mov
inc
arpl
ficomps
xchg
jnp
mov
jg
stc
xchg
jo
cmc
add
cmp
out
mov
and
cmp
or
push
in
pop
popf
repz
jbe
test
xchg
adc
in
dec
add
out
ds
stos
xor
enter
cli
push
sub
mov
dec
gs
cmp
push
dec
sti
or
cmp
stos
pop
rolb
sub
jae
adc
add
push
fcoms
sbb
mov
jg
rcll
adc
lods
mov
mov
or
jecxz
mov
repnz
fmull
inc
lods
jne
mov
mov
jge
dec
add
mov
data16
lahf
xor
mov
sbb
push
mov
xor
not
jbe
pushl
sbb
shrd
mov
dec
lds
fs
adc
push
filds
add
cmpsb
jle
popa
divb
jge
out
xchg
fmuls
jecxz
pop
out
scas
add
cs
sbb
clc
andb
loop
movsb
mov
lods
sbb
xor
push
mov
sti
mov
jns
add
pop
inc
filds
lock
xor
push
mov
adc
push
rsqrtps
adc
cmpsl
and
adc
cs
jns
sub
stos
push
out
test
lds
test
mov
xchg
xor
sub
ss
mov
sbb
icebp
adc
pop
mov
lcall
cltd
push
leave
cmp
mov
mov
jg
sub
movsl
insl
cmp
dec
jno
shrb
fidivs
js
ret
pop
mov
rcrl
lds
loopne
add
inc
xchg
adc
inc
fcoms
rorb
shl
sar
push
mov
sub
add
cld
stos
in
xchg
cwtl
mov
mov
pop
icebp
push
lahf
lret
mov
sahf
test
inc
test
xchg
inc
int3
mov
imul
push
xlat
outsb
mov
cwtl
sub
int3
push
fnstcw
add
cwtl
push
inc
jno
cmp
sub
add
lods
xchg
xchg
add
xorb
out
xchg
push
sub
dec
in
jne
sub
divb
dec
jmp
mov
cmpxchg
loopne
in
adc
or
mov
fdivrs
push
pop
std
pop
mov
mov
xor
shll
testb
dec
add
sub
nop
mov
shlb
xchg
fwait
xchg
lea
mov
iret
pop
xor
pop
js
sti
push
mov
sbb
fidivs
sbb
std
ret
adc
pop
fisttpl
ffree
pushl
ret
mov
scas
in
fwait
mov
xor
push
jno
out
xchg
fcmovne
push
cmp
iret
jle
fcmovbe
scas
and
fsubrl
ljmp
mov
sbb
dec
jecxz
jae
in
mov
mov
leave
dec
repz
add
push
mov
dec
xor
sahf
push
scas
push
sbb
pop
inc
xchg
jmp
cld
inc
or
cvttps2pi
fdivrl
popa
sbb
dec
outsl
mov
jae
sub
xor
cwtl
jns
jp
xchg
xchg
hlt
xor
shl
stos
jns
mov
adc
lahf
jno
sbb
push
sbb
enter
adc
lea
push
imul
addr16
sbb
sub
push
flds
clc
push
mov
jp
lds
sti
orb
sbb
std
push
out
adcb
jne
jne
stc
add
mov
enter
aam
lock
aas
hlt
mov
add
cltd
shl
pop
call
ja
fldcw
fdivl
call
scas
stc
stos
adc
scas
mov
test
inc
dec
fcompl
shrb
inc
jo
push
aaa
dec
das
inc
nop
mov
insl
add
mov
dec
mov
insb
add
mov
jno
jl
sub
pop
xor
cmp
mov
int
insl
push
pushf
cmpsb
jne
out
push
jmp
loope
in
shlb
xchg
in
pop
lcall
lcall
sub
lds
dec
ret
xchg
add
adc
sahf
stos
shll
out
shr
sub
aaa
mov
inc
icebp
in
imul
addl
push
cmpsl
pop
movsl
sub
adc
inc
leave
xchg
cmc
lret
daa
sbb
add
sub
or
jl
enter
into
sub
inc
dec
sbb
sbb
ret
repnz
add
dec
lods
sbb
pop
inc
cmpsl
sarl
xchg
out
inc
call
add
outsb
dec
out
sub
pop
bound
xor
sahf
pop
lods
xor
xor
mov
icebp
pop
scas
aad
out
nop
jno
push
pusha
xor
sub
jl
push
cli
adc
movsb
loopne
in
jp
pop
inc
inc
cmpsb
loope
rcrl
jg
or
adc
pop
jmp
or
insl
test
mov
jp
ljmp
adc
enter
imul
push
jns
jne
popa
fstpt
int
mov
in
jmp
stos
sarl
aad
pop
jb
loope
lcall
lea
jg
sti
jle
mov
int3
rorl
enter
pop
rclb
std
pop
adc
iret
mov
jle
lahf
dec
mul
jg
pop
or
arpl
push
test
shlb
fyl2x
and
aam
ja
mov
pushf
sbb
sahf
inc
mov
shl
dec
mov
jno
mov
adc
orl
push
xchg
lret
ret
mov
push
or
lock
xorl
inc
mov
lds
inc
popa
cmp
pop
repz
jo
dec
dec
rolb
pop
push
xchg
mov
repz
stos
enter
loope
loope
divps
pop
rorl
push
push
loop
or
test
xchg
leave
imul
fdivs
jge
mov
lds
push
push
stc
jno
inc
xor
lock
push
cmpsl
jecxz
sarb
jnp
push
xchg
or
addr16
mov
les
fistl
jo
and
lcall
out
neg
movsb
out
dec
and
in
pop
push
outsl
enter
sub
div
nop
push
fldz
push
jecxz
pop
in
jae
in
fiadds
outsl
jae
xchg
test
test
cmp
push
icebp
ficoml
cmp
fs
mov
fistps
nop
mov
and
into
pop
cmp
dec
jnp
shlb
stos
adc
push
outsb
inc
in
push
xchg
and
out
xchg
ud2
pop
xor
sbb
jg
loop
loop
ret
pushf
pop
pop
loop
jnp
daa
or
pop
push
popf
lret
nop
push
mov
adc
nop
pop
jns
rorb
idiv
pop
addb
cmp
adc
jmp
push
lret
pop
cmp
cmpsl
in
xor
repz
negl
ljmp
lcall
jb
sub
lahf
push
dec
mov
mov
mov
sbb
sub
loopne
or
adc
lret
ja
into
push
push
push
pushf
test
xor
cmc
lret
push
xor
xchg
stos
push
daa
popa
out
stc
adc
pop
lds
pop
js
pusha
cwtl
pop
fistpl
push
pop
or
and
mov
lcall
insl
push
sub
nop
pusha
cmpsb
xor
mov
stos
xchg
jno
popf
push
lahf
insl
enter
out
mov
sub
sub
in
outsl
pop
shrl
dec
mov
xchg
inc
adc
pusha
rcll
daa
mov
fsubs
fstpl
arpl
sbb
enter
lods
lods
and
xor
mov
inc
sahf
xchg
or
dec
shll
insl
cld
xor
mov
js
fldcw
cmc
bound
dec
arpl
outsb
cmp
dec
push
xchg
jmp
pop
js
lahf
js
cmp
dec
dec
nop
cmp
cmpsl
std
nop
cmc
daa
sahf
test
mov
xor
inc
pop
xor
fucomp
in
sbb
sub
out
sub
scas
mov
shrb
mov
push
adc
dec
sarl
imul
sbb
push
dec
shll
test
bound
add
andl
push
xor
fisubrl
mov
bound
dec
adc
push
in
enter
stc
ret
sbb
xchg
pop
out
test
ja
loope
cmp
clc
pop
mov
int3
pop
adc
cmp
or
cwtl
sarl
adc
idivb
or
pop
rolb
dec
cmp
jns
leave
mov
mov
ret
xchg
xlat
ds
mulb
adc
fmuls
push
lods
cmp
cmp
lds
and
push
icebp
fucomp
pop
fistps
hlt
sbb
fs
and
and
fwait
or
fwait
mov
ds
mov
cmp
and
xchg
jnp
jnp
clc
jg
pop
adc
gs
mov
and
cmpsl
lret
lock
mov
insl
lods
xchg
repz
mov
imul
and
adc
mov
push
data16
es
insl
push
test
in
fsubs
insl
adc
test
popf
pop
inc
mov
ret
mov
fiaddl
fwait
sbb
movsl
fcompl
cmpsl
dec
out
fiaddl
add
xlat
xchg
gs
cmp
mov
mulb
pushf
loop
mov
bound
pop
int
add
inc
scas
out
adc
dec
mov
add
outsb
mov
std
pusha
pop
cmp
inc
xchg
ret
scas
enter
or
lcall
cmp
jge
cmc
sbb
or
and
sub
daa
jp
fdivl
mov
pop
sti
jns
xchg
notb
das
stos
or
push
mov
or
push
neg
xchg
lea
add
repz
fbstp
out
ljmp
cmp
mov
addr16
push
fistps
jbe
dec
scas
inc
ss
pop
daa
mov
sub
jnp
cmp
push
sahf
xor
repz
out
movsl
xchg
cmpsb
repnz
pop
mov
bound
aas
jl
int3
mov
repnz
fcmovbe
xor
xchg
bound
mov
sarl
stos
push
ja
cmp
xchg
sbb
rcll
push
je
add
xlat
inc
xlat
add
cmpsl
std
push
sub
aam
ljmp
hlt
lock
stos
sbb
add
jb
dec
jge
aas
adc
ss
out
lods
sbbl
or
cmp
pushf
fildll
adc
jg
sub
out
mov
and
or
iret
inc
pop
cs
cli
daa
dec
mov
xchg
std
jns
mov
nop
mov
xchg
fstpt
add
sbb
mov
jnp
cmp
push
daa
pop
icebp
jg
movsl
clc
mov
cmp
xchg
in
mov
repnz
xor
mov
add
sub
adc
dec
cld
sbb
lcall
ret
pusha
jno
sarb
shr
fidivrs
xchg
aad
adc
cmp
clc
lods
and
push
sub
fcmovnbe
aaa
cmp
fnstenv
in
pushf
mov
mov
in
popf
and
adc
test
enter
cld
xchg
xor
mov
adc
aas
cmp
mov
push
js
mov
and
inc
sub
ret
inc
loop
lret
pop
or
dec
mov
adc
rcll
jne
mov
adc
stc
daa
mov
push
scas
enter
mov
mov
push
jbe,pn
arpl
sub
jbe
push
int3
fwait
jb
and
outsb
stc
iret
inc
std
fidivl
mov
in
and
jnp
lods
negb
icebp
popa
dec
mov
inc
outsb
push
je
and
jb
lret
iret
gs
xchg
dec
xchg
es
movsl
clc
adc
or
arpl
loopne
xchg
dec
xor
mov
arpl
sub
pop
mov
leave
shlb
xchg
jp
mov
push
jp
jo
int3
add
dec
pushf
fisubrs
fnstsw
ss
leave
mov
movsb
andb
lret
xor
pop
jb
pop
movb
lock
or
pop
leave
sbb
mov
sub
lods
cmp
and
mov
xchg
or
sub
cwtl
mov
ret
cmp
sbb
divb
mov
pusha
movsb
pop
and
inc
adc
and
jg
clc
xchg
cwtl
outsl
mov
pop
in
jne
fdivrl
loopne
and
xchg
movsb
aas
xchg
push
fs
push
movups
or
out
and
or
jne
pop
faddl
inc
sub
shll
je
pop
jg
mov
mov
lods
popf
cmp
addr16
loopne
pusha
nop
shll
dec
push
rcrl
out
lahf
adc
or
repz
or
dec
inc
adc
out
int
push
sub
iret
xchg
or
pop
push
aad
adc
aas
sub
inc
jne
mov
arpl
lret
outsb
dec
sub
add
lea
pop
shll
clc
js
mov
minps
fnsave
mov
xchg
arpl
inc
add
push
inc
lods
out
fsubs
push
push
push
stc
jp
adc
adc
test
cltd
leave
add
lcall
in
mov
loopne
bound
sub
dec
loope
inc
mov
mov
sahf
xor
aaa
lea
adc
stos
jo
lock
lods
addb
jp
xor
xchg
push
and
adc
jno
js
and
vzeroupper
divl
cld
pop
into
mov
leave
imul
imul
mov
jo
je
popf
xor
inc
rorb
cmpsb
mov
mov
repnz
jne
add
fs
mov
mov
mov
jo
leave
pop
inc
push
ds
movsb
sub
inc
xchg
pop
aad
ss
fscale
pop
std
ljmp
flds
jle
pop
scas
int
js
inc
enter
cmp
inc
jo
jno
mov
dec
clc
fnstcw
xchg
push
cld
daa
pop
insl
mov
jl
push
frstor
jns
insb
call
sbb
mov
gs
adc
sarl
pop
mov
scas
cld
xor
dec
mov
jge
push
mov
sti
lret
fstl
add
mov
fs
xor
imull
pop
add
pop
mov
es
neg
sbb
push
and
fs
js
sbb
roll
sbb
push
mov
in
lods
pushf
arpl
sbb
cwtl
adc
mov
hlt
call
or
cmp
int3
xchg
push
dec
dec
jnp
mov
mov
out
fidivrs
dec
popl
sbb
loopne
shl
push
leave
imul
enter
js
lret
dec
mov
adc
or
adc
and
mov
push
and
pop
imul
push
pusha
es
stos
sahf
fstl
adc
out
jle
pop
sahf
aam
cmc
in
lds
js
repz
fisttpl
lcall
adc
pusha
fstpt
push
inc
pop
jp
ja
mov
add
stos
cmp
cmpsl
insl
scas
push
jmp
mov
inc
cltd
adc
inc
xchg
xchg
xorl
add
pop
imul
and
inc
dec
add
mov
sbb
imulb
jg
bswap
add
xchg
fwait
pushf
movsl
out
shl
cli
stos
ret
add
push
daa
mov
das
xor
repnz
cmp
int3
std
mov
enter
sbb
dec
test
inc
sahf
cmp
jnp
jo
cmp
push
mov
add
mov
mov
lea
fs
inc
popf
adc
dec
ret
cmp
inc
jecxz
mov
out
xchg
pop
push
fs
xor
adc
add
stos
add
mov
aas
outsb
cmc
test
setge
xlat
xchg
lea
jmp
xchg
sbb
mov
movsl
mov
adcl
jge
adc
icebp
xchg
sub
sbb
pop
out
movsl
jge
push
mov
adc
pop
sub
pop
outsb
nop
nop
push
pop
ret
cmp
mov
mov
cmp
pop
mov
call
xchg
cmpsb
int3
pusha
cli
sarl
in
add
sahf
pop
cs
or
enter
enter
sub
cmp
pop
pop
movsb
out
cmp
mov
push
aad
mov
and
mov
pusha
je
xlat
pop
cs
pop
arpl
gs
jb
lret
pop
sbb
ds
push
jp
or
outsl
mov
iret
cmpsb
int
jb
sbb
sbb
push
jno
jle
inc
sahf
inc
mov
std
lahf
xchg
lock
js
out
cmp
xchg
testb
sub
mov
mov
test
int
sub
adc
inc
cld
imul
mov
repnz
dec
mov
inc
adc
call
out
ss
test
stc
ds
inc
jecxz
in
sti
testl
cmp
scas
xor
cmp
xchg
mov
add
push
adc
lods
mov
jnp
push
inc
sub
ja
vrcpps
inc
cli
lret
jl
mov
popf
or
aad
add
repnz
jg
cs
or
dec
jp
cmc
cmp
ljmp
or
mov
fdivl
xchg
sub
pop
pop
bound
mov
mov
nop
or
push
in
inc
pop
test
adc
cmp
xchg
xchg
push
dec
jge
iret
loop
and
aaa
sub
lock
pusha
add
mov
push
lcall
imul
cmpsl
ret
imul
inc
xchg
or
bound
out
repz
ret
pop
mov
repz
push
daa
sub
mov
adc
test
inc
jp
xor
rorb
inc
movsl
sbb
dec
sbb
sti
outsl
scas
inc
rep
push
jg
aam
pop
push
xchg
push
mov
enter
les
push
mov
inc
mov
loopne
xor
or
mov
out
and
add
push
push
inc
shl
fwait
mov
mov
inc
mov
mov
dec
outsl
or
jle
jg
xchg
inc
int3
mov
cmp
cmc
test
mov
sti
or
cwtl
push
add
lret
insl
and
mov
xor
push
jg
dec
dec
xchg
stc
fistps
pop
mov
mov
ret
dec
aas
cmc
pop
add
call
pop
mov
imul
fidivrl
shl
or
push
lea
out
in
test
push
scas
jmp
xchg
int
xor
and
sbb
std
mov
xor
mov
inc
das
cmp
mov
lock
xchg
add
stos
mov
stc
dec
or
sbb
iret
xchg
pop
xchg
cmpsb
xor
pop
xlat
jo
dec
mov
insl
xchg
and
std
mov
cmp
stos
test
mov
jo
mov
add
and
xchg
pop
dec
pop
hlt
fwait
out
adcb
mov
subl
mov
jmp
outsl
mov
dec
movsl
push
ret
push
xchg
ds
and
cmpsl
mov
test
cli
add
xor
imul
cmp
fidivrs
or
push
test
jle
popa
and
scas
push
cmc
pop
lret
sbb
or
pop
lret
sbb
icebp
push
leave
and
ss
decb
inc
aas
insb
insl
and
ja
ds
xchg
out
enter
int3
gs
xchg
xchg
fiaddl
rdpmc
arpl
sbb
fsubs
and
dec
xchg
lret
js
or
scas
fwait
popf
xor
sbb
shll
add
inc
rclb
dec
push
andb
shl
cmp
dec
pop
int3
idivb
fstps
jb
lods
dec
out
fisubrs
in
enter
dec
dec
icebp
and
les
mov
pop
pop
add
outsb
hlt
cs
inc
outsb
cmp
pop
fcomi
idivl
mov
adc
mov
push
es
sbb
rcr
inc
mov
cs
std
cld
inc
popf
dec
xchg
insl
insl
decl
mov
inc
enter
pop
dec
dec
inc
ret
mov
imul
je
push
xchg
popf
loope
inc
xor
adc
sub
mov
jge
push
pop
sbb
or
inc
jl
stos
jns
cmp
mov
mov
jge
xchg
lock
inc
outsl
jae
lret
and
jnp
push
mov
inc
jns
movsl
loopne
pop
enter
pop
imul
pusha
test
cmp
pusha
aad
mov
pop
and
push
mov
shll
sar
mov
sti
loopne
hlt
sbb
adc
mov
stc
mov
pushf
adc
xchg
pop
sub
lret
or
incb
add
inc
pop
mov
adc
inc
stos
popa
mul
jne
mov
pop
mov
das
pop
cli
mov
clc
dec
push
sub
push
jne
mov
jle
jg
test
loopne
mov
pop
pop
aas
test
jno
in
push
lret
das
xlat
xor
cmc
mov
in
loop
push
pop
cmp
mov
mov
jle
ja
test
inc
gs
ljmp
sbb
push
mov
pop
pop
test
and
cmp
cmp
sub
data16
dec
ftst
dec
and
leave
jae
outsl
jg
push
lods
mov
adc
adc
inc
mov
sbbl
xchg
mov
jle
movsl
add
mov
sub
into
scas
jge
lahf
insl
add
push
aam
xchg
int
fidivrs
imul
leave
mov
cltd
cmpsl
repz
pop
cmp
mov
push
adc
sbbl
jne
xchg
jl
adc
adc
imul
push
jne
mov
lock
je
lock
ret
push
push
adc
fldcw
outsb
sub
or
hlt
mov
sub
xchg
daa
mov
push
mov
cld
shl
add
pop
jo
sbb
jae
mov
add
or
out
mov
add
or
lahf
or
xchg
sbb
mov
sti
mov
fcmovbe
add
pop
sbb
fdivp
lock
cwtl
push
cmp
mov
xor
inc
outsl
and
sbb
in
shrb
mov
bound
mov
xchg
cmp
push
sbb
push
dec
scas
inc
daa
pop
cmpsb
fs
jmp
out
xchg
add
xchg
repnz
inc
push
je
stc
sbb
out
out
xchg
cmovbe
push
test
shll
xor
or
aad
ss
test
je
push
fcmovne
in
or
jo
mov
mov
pop
insb
cmp
mov
cmpb
popf
jnp
lds
mov
jns
aad
enter
movsl
add
sbb
hlt
pop
jg
jp
pop
mov
mov
add
add
sbb
pop
mull
scas
std
and
icebp
and
mov
icebp
mov
xor
cmpsl
imul
jmp
loopne
arpl
loope
pop
xor
loope
pusha
cmp
mov
outsl
cmpsl
out
add
push
xor
mov
xor
sbb
popf
xchg
push
ja
or
cmp
mov
aas
mov
fbstp
sbb
push
xchg
nop
lahf
leave
test
and
ljmp
cmp
sub
mov
xor
fwait
sbb
xchg
sub
sahf
decl
arpl
ret
add
popf
ja
loop
lock
leave
mov
push
pop
cmc
mov
pop
std
pop
jle
ret
cld
mov
dec
mov
enter
pop
lods
pop
add
fnsave
adc
andb
dec
jae
sbb
push
sbb
push
xchg
sti
xchg
or
cmp
sti
shrb
fs
or
add
jle
mov
repz
mov
mov
cmc
cmp
and
outsl
mov
xor
sbb
xchg
jns
mov
xchg
fwait
stc
sahf
mov
pop
cmc
adcl
mov
pop
imul
imul
adc
cmp
shlb
adc
xor
aas
xchg
cmpsl
pop
fbld
movl
jne
jnp
out
and
jae
adc
dec
jg,pt
cmc
rcrb
insl
and
sbb
cmpsl
xchg
and
mov
outsl
xchg
and
pushf
jo
jle
xor
or
js
loop
or
aad
cwtl
pop
dec
popa
xlat
xor
popw
xor
or
xchg
aaa
pushf
adc
aad
int3
cmp
jge
mov
jne
icebp
icebp
clc
adc
pop
fldcw
nop
ret
push
mov
aad
lock
fsubs
xchg
xlat
sbb
lds
push
mov
sub
inc
jp
lods
jnp
repz
int
mov
aaa
fmull
popf
cmp
mov
sbb
adc
sbb
js
pusha
les
xor
inc
icebp
insb
adc
xor
into
dec
xchg
sbb
loopne
and
rorl
sbb
add
xor
in
aas
lods
xor
imul
adc
cmc
rcll
pushf
mov
loop,pt
les
mov
sbb
xchg
cmp
stc
pop
mov
xor
inc
test
and
and
sub
loop
sbb
jge
push
jp
rcl
or
jl
mov
loopne
arpl
ja
in
adc
mov
lods
jmp
data16
scas
inc
xlat
cltd
xchg
cmp
jbe
or
sbb
fmuls
jae
sarb
ja
idivl
mov
inc
movsl
es
sbb
xchg
lcall
jecxz
shrb
add
fcmovu
lods
pop
into
push
push
lahf
shll
scas
cwtl
in
js
dec
cld
addl
ss
mov
sub
mov
movsl
in
in
in
xor
push
orb
scas
mov
insl
fwait
push
test
psraw
push
cmp
dec
mov
aaa
cmp
dec
rcrb
xchg
push
leave
icebp
iret
mov
aad
push
dec
cmp
sub
sar
cmc
push
pushf
jp
push
pop
loop
mov
jne
jbe
stc
mov
xchg
iret
jnp
in
lock
and
and
aaa
add
lret
cmp
xor
flds
gs
mov
dec
imul
jle
add
gs
div
out
rorl
in
push
ljmp
cwtl
ja
push
lods
pop
pop
push
mov
pusha
test
xchg
fwait
jl
cmp
andb
dec
dec
mov
cmpsb
stc
sub
jno
cmpsl
pop
inc
dec
stc
inc
add
dec
jno
mov
xchg
cmp
xchg
shr
and
dec
popa
bound
cwtl
mov
and
nop
int
and
fdivs
add
cmp
pop
lret
mov
pop
mov
dec
ret
sarb
xchg
pop
or
xor
rep
dec
dec
push
popa
mov
pop
dec
rol
cs
jmp
cmp
insl
stc
cmpsb
nop
push
and
mov
enter
xchg
ljmp
jg
loopne
xor
fists
push
sub
loopne
cs
pop
push
aas
cmp
sbb
mov
ret
jbe
mov
repnz
mov
jnp
hlt
lcall
fnstsw
insb
sbb
push
test
mov
add
ds
sbb
fwait
jle
clc
mov
dec
int3
mov
clc
mov
inc
mov
xorb
call
and
les
sbb
and
xor
sbb
pop
push
xchg
test
notl
dec
push
mov
cmpsl
push
roll
and
xchg
sub
mov
insl
mov
sbb
das
shl
xchg
les
cli
jecxz
sbb
ds
push
mov
sarb
test
test
enter
push
xorb
push
xchg
or
pop
lcall
sahf
jo
js
pop
shll
add
into
sbb
fmuls
popf
outsl
leave
scas
sub
out
sub
inc
rcrl
sbb
mov
repnz
xlat
int
add
cmpsl
pop
pop
adc
pop
sbb
mov
ljmp
das
call
mov
nop
cltd
arpl
xor
mov
pop
addr16
dec
push
mov
push
mov
sbb
add
jo
scas
scas
movsb
shl
add
xchg
clc
sub
adc
pop
lcall
ret
les
mov
hlt
mov
cmp
adc
and
pop
in
imul
ds
cwtl
dec
subb
int3
movsl
adc
fmull
mov
dec
into
pop
les
mov
cmc
adc
xchg
in
lret
jg
inc
adc
lock
dec
aam
int3
push
fmuls
jno
in
into
mov
jl
mov
loope
scas
dec
andb
test
inc
ljmp
xchg
das
shrb
es
adc
lret
leave
movsb
jno
mov
lock
xchg
leave
push
mull
sbb
popf
test
aam
dec
sub
dec
mov
or
in
jmp
clc
xchg
adc
out
mov
mov
dec
add
cmp
out
jne
xchg
shl
nopl
jb
imul
popf
int
mov
xor
shlb
jb
sbb
inc
out
sub
mov
xor
mov
push
ja
stos
jl
aas
mov
sub
stos
push
js
out
je
sbb
out
es
adc
lods
mov
jl
fdivl
sub
jmp
xchg
mov
jle
mov
mov
inc
sbb
jno
imulb
dec
cltd
cwtl
sub
sub
int3
ds
jne
mov
adc
enter
dec
cmpsb
jns
pop
xor
cmpsl
jb
das
xor
adc
test
int3
inc
fiadds
cmp
clc
outsb
mov
fs
xchg
add
sbb
faddl
mov
movsb
mov
mov
cld
jno
xor
add
aad
stc
aad
mov
daa
sbb
xor
mov
mov
mov
sub
daa
push
or
or
push
sbb
testl
rorb
inc
mov
cltd
arpl
lods
sbb
mov
adc
sub
cwtl
pop
jbe
or
xchg
cmp
sub
jb
jo
jns
rorb
pop
sub
cmpsl
arpl
ss
mov
addl
out
bound
int3
mov
filds
cmp
xchg
cld
mov
mov
mov
sar
mov
cmpsb
push
xorb
fsubrs
enter
loop
push
mov
jns
adcb
mov
cmp
shlb
mov
leave
xchg
dec
andl
ja
imul
cld
sti
outsl
inc
pop
ret
xchg
inc
loope
andb
rcll
movsb
inc
pop
addr16
mov
fcom
mov
mov
repz
xchg
stos
push
ds
jl
add
es
fwait
mov
in
outsb
pop
xor
jmp
dec
push
arpl
add
mov
jl
pop
push
pop
sbb
cwtl
adc
mov
fistpl
cmp
cs
push
sbb
rcl
in
cmpl
mov
int
ja
xor
shlb
xchg
inc
aad
int3
adc
call
xchg
mov
mov
mov
les
dec
mov
add
in
add
nop
cmp
idivb
movsl
fcoms
dec
cmpsb
pslld
jg
in
mov
shlb
add
movsl
aad
cmp
mov
jmp
pushl
lcall
pushf
jo
out
loop
add
push
lods
int
and
nop
jae
sbbl
fistpll
ss
cwtl
lds
pop
pop
add
fisubrl
mov
or
mov
adc
xor
jge
jb
sbb
pusha
add
dec
jg
push
pop
clc
out
lods
inc
fisubs
sti
xchg
mov
dec
ss
cmpsl
loope
outsb
aad
or
or
adc
mov
jecxz
push
mov
das
inc
mov
bound
inc
xchg
mov
into
aam
sbb
ret
cmp
mov
aam
fdiv
pop
lods
xor
xor
jmp
pop
xchg
dec
jle
sub
pop
sbb
inc
jne
xor
or
and
adc
leave
movsl
mov
int3
or
xchg
aad
or
int
or
sub
sub
call
xchg
nop
es
xor
xchg
mov
cltd
sub
inc
ficomps
mov
aaa
out
sub
pop
ficompl
addb
dec
sbb
iret
and
adc
add
pop
sbb
lods
aas
addr16
jle
mov
inc
xchg
sub
mov
repz
ffreep
popf
or
stos
jns,pn
mov
xchg
data16
adc
in
aam
bound
jl
mov
loope
jmp
out
cltd
mov
scas
pop
pop
xor
test
movsb
aas
pop
sahf
pop
add
cli
and
cld
fmuls
dec
push
mov
std
dec
in
scas
cmpsl
and
and
xchg
ljmp
out
push
lret
adc
lret
inc
std
out
adc
popa
add
in
das
push
out
jmp
or
lcall
rcl
dec
or
aad
or
push
dec
mov
lret
rcrl
push
cmp
neg
mov
push
or
lods
mov
push
ja
aad
sbb
pop
dec
frstor
mov
jno
lods
aas
push
daa
filds
push
jp
pop
ds
sub
out
sub
ds
cmpsb
imul
push
inc
jnp
adc
lock
aam
movsb
pop
and
sti
aaa
push
subl
pop
aam
pop
aas
insb
out
fcomp
shll
fimuls
arpl
pusha
hlt
in
mov
adc
gs
int3
push
mov
lods
in
into
popa
dec
mov
int3
dec
sub
mov
mov
sub
dec
movsl
inc
ret
adc
icebp
jae
or
cwtl
cmc
fsubrp
int
pop
push
push
mov
push
sub
aam
xor
ret
inc
and
jno
add
push
mov
adc
dec
push
loop
dec
in
iret
sub
push
xor
add
xor
test
aaa
fsubrl
les
addr16
inc
or
loope
xchg
movsb
stc
dec
or
mov
adc
dec
xor
inc
and
jne
je
pop
mov
daa
and
add
dec
aaa
mov
sbb
cmp
sub
repz
and
jno
mov
add
adc
pop
mov
mov
fwait
dec
adc
push
push
in
nop
call
add
dec
das
xchg
pop
in
repnz
mov
push
fwait
stc
test
mov
stos
stos
lods
cmp
clc
andl
aad
movb
mov
or
lods
enter
dec
cltd
mov
dec
clc
out
mov
ficomps
jle
mov
addl
nop
or
cld
aas
cld
jle
adc
mov
sbb
pop
pop
aas
aad
cmp
mov
mov
pop
add
insb
mov
dec
mov
jae
pop
mov
sub
adcl
pmullw
das
adc
mov
dec
test
inc
das
sbb
mov
xor
out
in
mov
jg
jg
pop
fstl
out
call
cmc
sbb
bound
sub
test
adc
push
lret
les
outsb
mov
std
xchg
dec
dec
out
adc
adc
add
ja
stos
sbb
push
pop
int
mov
pushf
loop
fildll
test
pop
and
dec
imul
mov
aad
adc
inc
out
idiv
push
cmp
mov
pop
xchg
test
jge
js
addl
sbb
mov
mov
adc
mov
sub
xor
rcr
mov
lea
jae
sbb
pop
xlat
push
imull
push
mov
cmpsb
adc
sbb
out
add
or
les
add
pop
popf
enter
call
ljmp
sbb
iret
aaa
push
shr
mov
inc
mov
ret
ret
xchg
xchg
sub
pop
imul
add
sbb
arpl
jnp
repz
cmp
inc
dec
cwtl
pop
and
xchg
outsb
jmp
inc
cmp
pop
sub
cmp
xor
mov
cmp
add
pop
pop
cmp
sti
cmpsl
into
and
lret
or
jb
pop
pop
mov
jle
movsb
sbb
jb
mov
adc
insb
jl
mov
sbb
cmpb
xchg
inc
adc
in
shll
in
movsb
jl
push
jns
repnz
mov
cli
mov
dec
sub
shrl
pusha
sbb
stos
pop
adc
cmp
lea
or
xchg
jge
lock
enter
repz
adc
in
stos
push
jo
xlat
addb
push
sub
inc
xchg
push
int3
fisttps
mov
push
pushf
cmp
andb
test
test
xlat
aaa
xor
ret
scas
jnp
outsb
not
lods
icebp
add
push
leave
es
jo
push
lods
lock
scas
out
pop
aaa
icebp
lahf
bound
add
scas
sub
cli
adc
push
push
mov
and
xchg
sub
sti
inc
ljmp
test
jnp
or
push
sti
shrl
ret
mov
ret
sahf
mov
pop
cwtl
mov
push
test
cs
cs
add
pop
andl
in
cmp
aam
mov
add
fmulp
dec
in
adc
sub
lods
stc
push
jbe
mov
add
cli
pop
aaa
push
xorb
dec
mov
scas
xchg
jnp
push
out
rcrb
pop
adc
xor
out
insb
adc
out
sub
push
lods
sahf
lret
cltd
data16
nop
adc
cmpsb
xor
jp
push
or
add
int
ja
jp
cmp
aas
arpl
mov
stos
fdivrl
stc
nop
or
sbbb
int
pop
mov
mov
mov
in
outsb
adc
fiadds
cmc
cmp
sbb
or
or
dec
popf
fldenv
sbb
xlat
sub
int3
push
pop
ret
std
and
dec
jp
imul
or
lahf
fs
sub
push
lea
insl
in
inc
rcll
stc
inc
mov
lods
rol
dec
or
adc
xchg
flds
je
add
dec
sar
mov
sub
inc
in
mov
incb
aaa
mov
js
dec
cld
repnz
cmp
jmp
xchg
add
mov
out
mov
repz
lea
out
xor
cmp
ror
mov
fstps
fdiv
push
ja
movsl
ret
cmp
addr16
xlat
test
lret
addl
or
adc
in
lret
push
ja
fs
xor
ret
call
jnp
lock
and
fiadds
adc
sub
push
lcall
lret
jne
lret
divb
xchg
lea
pop
pop
mov
sbb
push
xor
arpl
sbb
adc
mov
mov
add
mov
xor
aam
adc
repz
sti
mov
mov
sub
or
cmpsl
fstps
and
shlb
popa
movsb
outsl
jle
sub
fiaddl
lret
push
dec
arpl
iret
and
jg
jb
and
jge
sub
push
int3
fs
cwtl
pop
out
nop
pop
jne
dec
shlb
lret
iret
add
ds
jae
mov
mov
xor
mov
jl
xchg
mov
icebp
push
cltd
dec
cwtl
jo
popa
ret
mov
mov
push
mov
push
mov
adc
sub
outsl
xchg
pop
add
adcl
outsl
push
mov
dec
dec
adc
sbb
gs
mov
dec
add
xchg
xchg
cmc
loopne
out
cwtl
push
adc
pop
fwait
adc
pop
lahf
fcmovne
mov
mov
sahf
mov
jmp
jo
push
sbb
jbe
cmpsb
mov
repz
push
push
add
dec
lcall
ja
dec
adc
mov
sbb
xor
mov
or
imul
dec
add
jle
pop
cli
in
sbb
pop
idivl
mov
mov
or
imul
clc
pusha
adc
and
jecxz
add
mov
mov
xor
test
and
clc
jo
clc
pop
stos
jno
mov
pop
mov
adc
lahf
pop
cmp
and
mov
mov
dec
fimuls
xlat
in
inc
fcomps
add
push
mov
arpl
xor
push
xchg
out
and
ret
jo
xorl
jns
les
mov
and
cmpsl
loopne
bound
cmc
and
test
inc
adc
outsl
addr16
xchg
outsb
mov
pop
fdivr
jle
loope
cli
or
mov
sub
push
jae
mov
or
mov
ljmp
sub
or
mov
lcall
sub
into
sbb
push
sub
cmp
mov
mov
test
mov
pop
xorl
adc
ljmpw
lock
xor
imul
nop
jmp
dec
push
popa
mov
aaa
stos
bound
mov
repnz
ret
lret
rcrl
movsb
iret
mov
mov
in
mov
sbb
insb
mov
je
sarl
shll
rorl
mov
sub
insb
ds
cmp
mov
sbb
jae
mov
roll
lods
mov
cmp
or
cmp
pop
mov
cmp
mov
test
arpl
mov
add
jle
add
aam
add
and
ret
cmp
and
mov
lods
adc
dec
push
xchg
xchg
cmpsb
inc
movsl
into
repnz
popl
sbb
fwait
sahf
or
jmp
or
xchg
lret
scas
add
mov
and
in
enter
fdivrp
into
adc
fbstp
negb
jo
shll
adc
dec
fcompl
push
push
leave
int3
xor
pop
cmp
stc
and
fs
icebp
adc
push
sbb
xchg
repnz
mov
or
add
int3
into
jnp
rcll
jns
je
mov
adcl
push
pop
mov
fildll
insb
dec
push
je
jp
mov
ret
enter
lds
cmpsb
scas
jne
hlt
lods
ret
xor
xor
iret
scas
scas
ret
adc
add
xchg
push
vmovaps
sub
and
mov
mov
popa
mov
sbb
jbe
pop
fldenv
movsl
push
mov
sub
aas
out
cwtl
adc
stc
hlt
mov
idivl
test
pop
dec
pop
mov
jbe
sbb
or
shl
in
into
ss
push
cmpl
and
dec
jg
jge
call
daa
xor
push
mov
and
arpl
pop
roll
inc
or
push
mov
ds
sti
aad
or
dec
xorb
jnp
cld
decl
adc
stc
jmp
dec
xchg
imul
jb
mov
fildl
je
aaa
fwait
and
jmp
sti
aaa
mov
pop
in
and
imul
cltd
dec
lret
xor
push
sahf
mov
and
ret
leave
inc
xlat
addr16
incl
xor
lock
arpl
jae
or
movsl
ficoml
lret
arpl
xor
add
faddp
jge
loop
xor
nop
loopne
cmp
mov
xor
xor
or
test
loop
gs
scas
out
scas
dec
outsb
and
mov
cmpsb
dec
shlb
push
in
imul
fsubrl
mov
out
lcall
cld
cmc
and
jmp
or
adc
int3
pop
into
outsl
cmp
daa
ret
jnp
push
nop
cmp
xor
imul
mov
pop
je
lds
lods
mov
negl
arpl
push
push
pop
dec
mov
add
das
test
sub
lret
cmp
aad
hlt
adc
call
pop
push
jo
jmp
pop
ja
icebp
dec
loope
fsubs
mov
fistpl
fdivl
mov
hlt
mov
loopne
clc
mov
xorb
movsb
and
adc
cmpsb
inc
jg
jmp
lcall
dec
add
sarl
rcrl
and
popa
cmp
adc
mov
fs
add
and
pusha
cs
test
or
xchg
loope
imul
mov
out
adcb
rcl
inc
jno
and
add
mov
int3
sahf
cltd
mov
popf
dec
popl
mov
ja
loop
into
dec
dec
pop
jae
rorl
ret
loope
pop
adc
and
xor
push
lret
movl
shl
iret
sbb
jecxz
pop
les
lods
jbe
add
cmp
loope
in
mov
xchg
adc
cmpsb
enter
repnz
fcmovne
push
mov
idiv
cmp
jno
dec
pop
push
hlt
stos
ret
nop
dec
repnz
xor
and
sbb
mov
push
aad
inc
fimuls
pop
paddq
xchg
push
adc
in
pop
or
inc
mov
das
xor
enter
lahf
add
jnp
cli
subb
jnp
inc
inc
std
int
aas
pop
bound
xor
lcall
inc
pop
add
repz
nop
aas
cmpsl
pop
lret
call
decl
cmp
push
pushf
sub
mov
adcb
cld
sub
scas
lcall
bound
add
fcoms
sub
inc
dec
xlat
or
dec
xor
adc
movsl
mov
jns
shll
push
mov
shrb
push
push
pop
xchg
fs
shll
sub
clc
mov
icebp
push
inc
je
and
fisubl
mov
lea
push
int3
das
loopne,pt
lds
push
push
xchg
cmp
or
push
pop
sahf
inc
xchg
cs
pop
dec
cmpsb
aaa
jmp
inc
mov
or
sub
clc
cmc
fcmovu
pop
xor
cs
add
dec
cmp
fnstcw
imul
jge
mov
push
daa
popa
aaa
dec
addr16
pop
adc
xchg
bound
and
orl
cmc
dec
leave
lahf
push
shll
inc
inc
outsb
push
aaa
aad
inc
cmp
fmuls
stc
mov
fstl
mov
xchg
fstp
stos
mov
iret
fsubs
dec
cmp
and
dec
shll
int3
pop
cmpsl
fimull
rorb
bound
lret
fists
inc
push
fldenv
mov
push
fmull
mov
data16
cmc
dec
iret
mov
scas
inc
push
jne
pop
cmp
jno
cmpb
jno
jno
mov
sbb
int
inc
sub
je
dec
inc
lret
repnz
mov
and
push
push
out
jns
add
pop
pop
rclb
repnz
dec
roll
daa
xor
or
jns
or
cmp
shl
fadds
mov
addr16
mov
mov
push
xor
xchg
popa
xchg
inc
inc
inc
mov
loop
pop
iret
mov
jne
push
sub
cld
and
push
mov
call
lock
sti
cmp
cs
ret
es
xor
ss
imul
xor
mov
pop
mull
sbb
loopne
sbb
lcall
push
or
mov
inc
xchg
cmpsb
popa
outsb
aaa
mov
call
or
das
outsl
sbb
mov
push
leave
lods
sub
fdiv
in
stos
bound
and
idivb
ficompl
push
fmul
gs
jg
xchg
fnsave
aam
ss
jmp
push
ds
jnp
cmpsl
dec
inc
mov
dec
icebp
faddl
mov
stc
gs
dec
lcall
push
push
sub
jne
sub
imul
mov
fsubrs
aaa
std
push
dec
in
mov
sti
xor
dec
jb
bound
pop
fwait
or
dec
clc
adc
int
cmpb
sbb
in
pop
aad
xor
xchg
les
mov
cs
push
nop
jge
or
out
xor
cmpsl
mov
or
xlat
xchg
stc
jbe
pushf
jle
leave
pop
in
outsb
xor
fsts
mov
fnstsw
ja
jo
mov
dec
stos
push
enter
or
pop
sbb
cmp
inc
push
add
dec
xchg
xchg
jnp
decb
jg
pop
rcrb
xchg
cmpsl
out
xchg
outsl
mov
lret
pop
adc
cmp
jae
idivb
sbb
or
mov
cmp
in
jecxz
xchg
mov
and
imul
jne
dec
cmpsl
das
inc
es
popl
bound
sbb
shr
adc
outsl
into
pop
push
sbb
iret
pop
mov
push
push
push
cwtl
or
std
push
add
aas
rorb
stc
rcll
les
out
pop
jnp
ds
imul
movsb
loope
mov
sub
sbb
cmp
push
scas
push
int3
test
pop
outsl
sbb
add
popa
cmp
jecxz
inc
dec
sbb
jge
push
inc
adc
mov
or
pop
xchg
sub
dec
mov
and
mov
shr
push
mov
inc
push
xor
jne
xchg
mov
loopne
cmp
in
dec
fsts
mov
mov
xchg
lock
popf
std
dec
sub
cmp
cwtl
ss
cmp
and
cltd
pop
dec
stc
std
jns
mov
andb
es
aam
lock
dec
mov
fists
out
enter
rcl
mov
add
cmc
xchg
addb
mov
fdivr
or
arpl
jo
mov
std
pop
push
decb
cmp
or
out
jae
push
mov
xchg
cmp
or
scas
loopne
adc
jbe
cmpsl
loopne
test
loope
sti
pushf
pusha
pop
jge
xchg
test
aad
lcall
jo
push
xchg
push
mov
mov
sub
jno
push
frstor
test
or
mov
adc
xor
rcll
fdivrs
cs
mov
sub
xor
out
stos
movsl
int
test
lods
test
in
pop
xor
pop
mov
pushf
imul
or
loope
cs
in
jne
jmp
test
sbb
outsl
push
jmp
test
mov
mov
mov
add
push
lea
out
hlt
or
cli
mov
mov
ss
iret
push
add
mov
lret
pop
xchg
repnz
xchg
je
imulb
dec
jmp
dec
pop
cltd
sbb
in
adc
gs
xor
stos
mov
inc
lds
leave
add
and
mov
mov
xor
pop
insl
jl
mov
pop
shlb
pop
pop
frstor
push
jle
std
fistl
movsl
inc
mov
xchg
clc
xchg
or
inc
iret
fwait
daa
jmp
add
or
jne
nop
das
ficoms
adc
mov
sbb
lret
lock
sbb
and
fists
sbb
movsl
std
push
jp
inc
mov
sahf
xchg
iret
xor
loope
scas
insl
mov
int3
mov
pop
mov
loopne
mov
dec
mov
sbb
pop
lcall
dec
xchg
inc
out
lds
cmpsb
jg
sti
scas
xchg
call
inc
outsl
xchg
jge
push
mov
xor
sbb
rcl
iret
xchg
mov
mov
lods
popf
mov
jo
mov
bound
push
int3
test
xor
cld
adc
dec
imul
repnz
push
or
mov
xchg
dec
jecxz
mov
jno
lahf
lods
addb
lods
push
xor
xor
shl
dec
int3
out
push
xchg
fcoms
sbb
adc
clc
js
mov
cmpb
orb
insl
cmp
cwtl
jmp
push
fmull
test
pushf
jecxz
mov
or
pop
pop
pusha
dec
sub
adc
mov
movsb
pop
addl
sub
cld
mov
or
jbe
fstl
push
outsb
imul
nop
jmp
clc
or
dec
popf
out
mov
into
int
out
mov
and
fldl
lcall
dec
out
fwait
or
insb
add
cmp
test
cmpsb
dec
notb
mov
lods
fildll
orb
in
mov
mov
jnp
icebp
pop
sahf
or
mov
rcr
mov
push
push
test
jecxz
fiadds
in
mov
sub
inc
dec
pop
leave
test
scas
adc
lret
mov
daa
pop
mov
insl
cmp
and
or
sub
sub
out
sbb
int
and
xchg
inc
test
mov
inc
ja
sbb
loop
push
xchg
out
add
inc
fwait
rolb
dec
and
stos
ret
cmp
dec
add
pop
pop
add
gs
jle
sahf
mov
cli
xchg
das
lods
sbb
lock
test
sbb
pop
sub
dec
les
pop
fcompl
leave
fcoml
pop
insl
mov
test
sub
jle
clc
mov
orb
addr16
inc
stos
inc
lahf
cmp
cwtl
jb
imul
xor
jl
out
test
lds
cmc
lods
sbb
shrl
push
dec
jnp
mov
outsb
and
popf
addr16
subl
cs
jne
inc
nop
sbbl
leave
xchg
adc
jno
jno
xor
and
leave
inc
sbb
in
mov
xchg
add
jo
jnp
sbb
jo
subb
jae
and
mov
enter
fnstenv
movsb
dec
mov
push
cmc
cld
enter
sti
add
sub
sub
repz
cmpsl
jo
popf
dec
xchg
push
jns
sbb
cmp
fsubrl
test
mov
dec
jnp
clc
ds
outsb
xchg
pop
dec
push
popf
cmp
enter
clc
or
js
out
pop
repz
das
inc
lret
add
fwait
inc
inc
push
mov
mov
into
push
xor
movb
adc
mov
mov
lea
cmpsb
in
push
fldt
aaa
arpl
add
add
adc
pop
cmp
cmp
insl
rorl
fwait
cli
xchg
imul
jbe
lods
lret
pop
mov
cmp
push
cltd
xchg
into
cmc
sahf
jmp
aad
jne
rep
out
daa
xor
xor
sub
cmp
lds
xchg
aaa
add
test
jo
mov
ffree
inc
jge
push
loop
out
sub
stc
adc
cli
lods
xchg
sub
xor
add
jmp
lcall
jp
fidivs
add
jb
sub
sahf
in
call
cmp
jno
push
sub
push
out
adc
data16
mov
dec
xlat
pop
xchg
cltd
nop
push
mov
sub
mov
mov
cmpsl
fs
sub
push
pop
pop
push
addl
mov
fisubrs
pop
dec
aad
divl
mov
cltd
dec
xchg
mov
in
or
addr16
xchg
imul
or
or
push
insl
insl
and
fnsave
fists
sbb
fs
add
lcall
lods
int
jmp
adc
mov
lret
inc
addr16
sub
int3
inc
add
lahf
shll
enter
jnp
push
divl
fidivrs
sbb
movsb
mov
les
jo
dec
lods
sbb
and
movl
xchg
cmp
jmp
mov
icebp
stc
mov
or
into
and
jbe
or
out
and
mov
fs
insb
out
addr16
jle
cmpsb
dec
mov
jb
xchg
mov
imul
mov
lods
jno
add
or
push
xchg
ror
test
xorl
scas
or
bound
mov
lock
loop
dec
adc
xor
ja
shl
rcrb
lds
scas
fwait
pop
addr16
adc
ja
inc
push
or
jle
mov
dec
ret
mov
cmp
cld
test
add
lea
ret
sbb
inc
sub
dec
int
lds
ret
sub
jg
jl
sahf
xor
repz
ds
fs
adc
push
mov
and
jge
push
mov
ret
shll
xchg
mov
jp
jmp
test
and
arpl
jns
daa
or
ret
mov
pushf
xchg
sub
jle
xchg
aaa
cmpsl
mov
hlt
les
and
xchg
fdivrl
pusha
je
in
jb
push
scas
mov
mov
jle
and
movsb
mov
pop
mov
adc
add
xor
adc
sbb
dec
mov
dec
test
outsl
xor
sbb
fwait
lahf
jl
cmp
imul
lods
lock
ficoml
je
repz
shll
ljmp
fcoms
cld
outsl
xchg
out
xchg
imul
aam
fsubr
and
push
iret
dec
aas
push
pop
testb
mov
mov
mov
mov
push
std
jge
inc
cmp
leave
sbb
and
in
dec
ljmp
int
fisttpl
mov
inc
leave
sub
cs
pusha
lcall
mov
jg
mov
jmp
ret
sti
mov
lds
outsl
inc
dec
push
pusha
push
das
sub
fdivrs
ja
mov
mov
jne
pop
adc
xor
pavgb
push
xorb
sahf
in
in
outsb
movsl
loope
jne
xchg
push
push
jmp
jge
lea
sbb
cmp
leave
je
mov
push
mov
cmpl
loopne
sbb
mov
andb
cwtl
cmp
cmpsb
fisubrs
add
pop
jge
idivl
dec
push
outsl
cmp
aam
cmp
fwait
push
mov
adc
add
jl
push
push
pop
ret
push
aaa
shll
push
push
imul
std
push
cltd
clc
in
jae
scas
push
mov
repnz
jl
push
divb
popa
fisttps
adc
scas
loope
mov
test
sbb
mov
stc
mov
mov
xchg
jmp
clc
sbb
mov
in
loope
je
xchg
xchg
mov
ds
shlb
in
or
fs
push
and
mov
dec
sub
fs
popf
aaa
cmc
mov
jle
push
leave
in
add
xchg
mov
mov
addr16
xchg
stos
jp
xchg
sbb
repnz
jne
inc
sub
jno
hlt
iret
filds
lock
fisubrl
outsl
xchg
daa
pop
jo
insb
and
and
call
push
push
pop
cmc
mov
mov
stos
push
mov
push
mov
out
loope
call
pop
lcall
lret
je
ret
pusha
pop
icebp
xchg
jo
or
sub
sbb
ljmp
aaa
or
popf
push
jo
fdivrs
loop
lods
repnz
push
pop
repz
xchg
push
pop
inc
pop
shrl
inc
sub
sub
inc
pop
pop
loopne
add
push
fs
dec
lret
sbb
push
pop
in
ja
mov
jo
sahf
cmp
mov
lods
lahf
lcall
arpl
push
jg
enter
mov
cmc
imul
mov
adc
inc
push
mov
lods
ss
mov
jnp
bound
xchg
mov
cmp
add
pop
mov
enter
enter
pop
lcall
push
cli
adc
pop
mov
mov
push
and
adc
mov
nop
jl
cs
pop
dec
mov
rolb
outsl
icebp
cli
addr16
es
hlt
leave
je
jns
stos
push
adc
mov
jecxz
loop
repz
in
push
outsl
movsb
cmp
or
hlt
dec
aad
and
adc
xor
adcb
dec
and
mov
dec
in
add
mov
sbb
cmp
sbb
push
ja
rcr
je
stc
ljmp
popf
daa
mov
push
gs
idivl
daa
xchg
imul
sub
xor
dec
repnz
lea
stos
dec
icebp
sbb
loope
pmaxub
xor
xor
dec
inc
insl
add
lds
dec
and
imul
mov
ret
xchg
out
test
xor
xlat
das
push
ror
or
sbb
add
lcall
pop
popa
dec
stos
xor
out
cld
stos
push
jle
pop
loope
pop
mov
ja
sbb
jnp
shrb
fdivrs
out
cmc
push
movsb
mov
addr16
push
pusha
scas
xchg
adc
jo
and
jo
inc
mov
sbbl
jnp
mov
insb
aas
insb
insb
jae
mov
mov
sub
testl
mov
subl
scas
pop
aam
cmp
adc
imul
push
xchg
insl
imul
xchg
push
sub
sarl
jl
mov
stc
xchg
adc
jns
repnz
inc
sbb
add
mov
sbb
mov
int
lret
mov
loopne
insb
add
sbb
mov
adc
dec
lret
xchg
jl
rclb
ljmp
pop
inc
loop
sbb
pop
sub
sarl
mov
aaa
in
fstp
sub
mov
lea
push
xchg
int3
pop
shl
insl
add
adc
popa
add
push
shlb
and
fbld
je
mov
cltd
clc
call
nop
ljmp
das
push
cmpsb
cmc
andb
and
mov
test
mov
in
jbe
add
or
mov
rcll
jns
aas
jmp
ds
jge
jge
dec
imul
or
mov
popf
ret
pop
aad
sbb
xor
ja
adc
cmc
out
and
lahf
xchg
sahf
add
sahf
cltd
xchg
rolb
bound
fcoml
test
scas
pop
testl
lods
or
mov
ss
loop
incl
aad
loop
insl
int3
clc
push
lea
and
pop
adc
jne
in
imul
xor
test
mov
pusha
lods
sub
ja
mov
rcrb
and
mov
lahf
sti
jp
dec
jg
push
inc
mov
in
sub
call
xor
sub
pop
lds
insb
popa
xchg
sbb
and
jns,pt
xor
and
testl
faddl
fisttpll
ret
and
mov
in
or
cmp
and
jno
dec
cli
cmp
mov
push
mov
xor
adc
out
out
mov
nop
lock
frstor
jp
sub
cwtl
jnp
fcoms
sbb
ret
fs
inc
stc
enter
mov
or
jle
or
js
popl
in
aad
aas
mov
pop
enter
mov
fistps
xchg
addr16
out
sub
pop
into
mov
scas
insl
repz
mov
xchg
xchg
adcl
sbb
xchg
xor
xorb
mov
outsl
or
mov
js
cmp
lock
mov
push
adc
test
movsl
lahf
dec
into
ficomps
cli
mov
lods
mov
mov
pmullw
cmpsl
push
test
xor
inc
jb
lods
adcb
enter
in
ja
imul
pusha
shrb
leave
loopne
sbb
pop
aam
fnsave
ss
stos
je
or
xor
test
mov
daa
mov
jo
push
pop
mov
cmpb
arpl
mov
cs
lcall
mov
mov
outsl
or
sti
sti
add
outsb
cmpsb
mov
xchg
pop
jns
sub
clc
dec
xchg
imulb
shll
add
sub
dec
pop
xchg
mov
mov
sub
ret
jne
sahf
aas
subb
fbld
push
jle
mov
sbb
xor
dec
shl
and
dec
rolb
imul
gs
stos
jp
iret
icebp
cwtl
sub
mov
xchg
or
fsubrp
imulb
pop
xchg
sti
jb
xchg
mov
or
incl
lods
mov
adc
pop
ljmp
sub
aaa
cmp
scas
jae
jmp
out
or
mov
xchg
fists
mov
aaa
xchg
pop
dec
or
aad
shll
imul
cmc
outsb
insb
inc
mov
shll
mov
adcb
mov
rcll
js
jg
mov
inc
ljmp
stos
push
xchg
pop
negl
push
jp
mov
cs
fs
push
js
pop
push
lahf
dec
add
mov
std
xchg
jmp
shll
cmp
sbb
jp
stos
test
sarb
mov
xor
mul
inc
adc
imul
ja
cs
sbb
pop
sbb
jge
inc
xchg
clc
bound
lcall
movsb
and
xchg
lds
int
push
sbb
pop
mov
xchg
mov
testb
arpl
mov
xchg
mov
sub
shl
jne
aam
iret
in
sbb
pop
je
push
adc
imul
psubusb
mov
fwait
fwait
inc
out
aaa
jmp
test
jne
or
outsb
inc
aaa
mov
jo
inc
mov
call
subl
subb
dec
dec
in
or
int3
mov
mov
cwtl
mov
sub
cmp
repz
dec
push
das
push
xor
enter
jge
call
sbb
mov
imul
aam
andb
call
ljmp
mov
cwtl
icebp
and
outsb
inc
mov
inc
jne
ja
jbe
cmp
loop
mov
and
ss
mov
bswap
sbb
addr16
jbe
lret
clc
and
clc
shrb
out
out
pop
sub
insl
mov
mov
in
outsb
jle
call
jle
cmpsb
lcall
mov
call
add
mov
es
and
inc
push
clc
mov
imul
out
shlb
daa
icebp
lahf
stos
or
xlat
fcoms
and
xor
rclb
lds
push
sti
push
push
subb
jg
cwtl
mov
xchg
add
jne
out
in
sub
mov
mov
ss
pusha
lahf
or
pop
les
mov
pop
push
shlb
xchg
xor
mov
loope
jne
test
fbld
cmc
dec
fwait
push
sub
sub
daa
out
stc
xor
jbe
push
mov
cmpsb
fidivs
mov
hlt
jns
loope
jmp
cmc
outsb
lahf
iret
insl
cmp
popa
mov
xor
push
pop
ret
pop
jne
nop
cs
dec
sbb
xor
push
pop
mov
dec
fldl
loopne
dec
jbe
in
or
mov
cmp
enter
in
mov
sbbl
push
daa
ds
sbb
addl
int3
aas
nop
mov
lock
outsl
pop
ret
fs
xor
stc
cmp
lds
add
sti
inc
jge
jno
sbb
dec
gs
lods
inc
mov
es
jl
mov
pop
adc
mov
push
int
dec
xor
stc
xor
mov
ss
mov
lahf
inc
cmpsl
cmp
cmpsb
mov
cmpl
dec
dec
mov
xor
arpl
inc
fistpll
adc
pop
nop
dec
out
sub
sbb
sbb
xchg
pop
cli
daa
sbb
clc
and
push
jecxz
lcall
add
mov
adcl
adcl
mov
outsb
movsl
sbb
jb
cmp
xchg
mov
push
xor
pusha
clc
orb
adc
xchg
dec
lea
ret
pminub
fwait
add
add
xor
loopne
stos
add
nop
lret
pop
ret
inc
cmp
inc
ljmp
xchg
push
outsl
adc
repnz
repz
popa
sub
push
adc
push
mov
mov
in
into
sbb
xor
or
popf
loope
push
mov
sarb
inc
xor
cmp
mov
jmp
pop
sbb
out
inc
shll
xor
xlat
mov
rorb
dec
jne
loop
xor
out
mov
sub
stos
and
push
mov
xchg
ss
push
popf
mov
pushf
unpckhps
mov
das
sbb
adc
lea
data16
xchg
pop
xchg
jecxz
les
icebp
popf
or
mov
adc
in
xchg
pushf
popa
jmp
arpl
cmp
lcall
fs
pop
bound
nop
add
enter
dec
add
cld
jle
loope
insb
lcall
push
push
pop
xor
inc
pushf
mov
inc
push
dec
and
xor
push
xchg
out
mov
xlat
sub
nop
sti
mov
mov
sub
mov
sbb
out
imul
icebp
arpl
push
icebp
inc
movsb
insl
testb
pop
call
inc
fbld
loop
repz
das
gs
iret
push
out
mov
inc
ficompl
popa
xchg
push
xchg
lret
movsb
mov
inc
popa
push
addb
xchg
pop
jl
xchg
adc
pop
cmpsl
mov
dec
ret
out
ljmp
iret
repnz
popf
dec
test
sub
scas
cld
jge
inc
mov
ss
out
dec
les
inc
cli
test
dec
je
and
imul
sbb
call
push
lods
xchg
loope
cli
aad
pop
mov
imul
flds
addl
push
dec
stc
cmp
out
push
fisubs
repz
mov
push
add
adc
data16
sub
sbb
push
cmp
mov
or
andb
dec
jle
jne
js
adc
mov
mov
or
leave
mov
cmp
int3
data16
mov
icebp
add
mov
push
dec
mov
cmovo
ret
add
xchg
jns
movsl
shll
fiaddl
js
punpckhdq
mov
scas
jno
xchg
jmp
sarl
and
xchg
mov
add
mov
mov
test
adc
dec
imul
adc
in
cmp
hlt
mov
mov
inc
adc
cmp
call
popf
jno
and
sub
into
jne
loope
mov
mov
rorb
out
das
mov
inc
push
pop
push
lea
pop
out
decl
int3
jp
aaa
or
cltd
jle
add
sbb
xorb
inc
cmpsb
ret
push
popa
ljmp
rcll
mov
js
mov
sbb
sbb
push
pusha
jge
dec
stos
push
pop
jae
mov
jecxz
cltd
jne
sbb
jbe
idivl
unpcklps
sti
in
outsl
mov
addr16
call
mov
popa
mov
shll
xchg
jno
push
insl
jno
jb
rol
adc
loopne
jb
fidivl
dec
xor
clc
test
and
inc
push
xor
and
adc
mov
jne
xchg
mov
jecxz
adc
fildl
flds
imul
push
adcl
or
adc
inc
mov
mov
or
dec
jg
fistpl
fmul
xlat
test
out
add
or
or
cmc
mov
fdivrl
and
adc
dec
push
jecxz
cmp
mov
imul
inc
mov
orb
xor
cmc
outsb
dec
in
xor
cltd
mov
and
cmp
add
in
xchg
adc
pop
loop
pop
jno
mov
repz
insl
frstor
lret
pop
and
test
cmp
stos
inc
pusha
icebp
mov
fwait
sbb
addb
dec
cmp
loope
mov
or
and
jo
xorl
sub
and
cmp
jecxz
insl
jp
jbe
daa
cs
mov
xor
es
jno
inc
fcoms
daa
ret
cmp
mov
sbb
inc
in
inc
sti
pop
sahf
sbb
dec
push
movsl
and
in
mov
cmp
lahf
imul
and
sub
sbb
dec
icebp
pushw
lds
sub
dec
mov
ret
stos
or
mov
idivl
xor
imul
outsb
bound
lret
mov
jmp
cmpsl
popf
mov
or
pusha
and
fisubs
rol
jns
pop
push
lds
or
adc
hlt
pop
sbbl
test
mov
shlb
inc
ret
jnp
cld
xchg
test
hlt
or
mov
mov
xor
fisubs
inc
pusha
icebp
inc
and
notl
out
hlt
repz
sub
inc
pmulhw
ret
lock
cli
xlat
add
cmpsb
test
loopne
cld
mov
push
cs
imul
xor
mov
cmp
fldl2e
out
test
fisubs
lcall
pop
adc
aad
add
and
out
data16
jle
pop
aas
lea
adc
or
adc
andl
pop
stos
fnstenv
and
xor
arpl
and
sbb
inc
adc
je
push
pusha
nop
cmpsb
dec
lret
or
je
pop
push
xor
adc
test
lret
and
orb
sarl
popa
imul
mov
push
push
aas
pop
inc
jns
addr16
fldt
fcoml
sahf
repnz
cli
in
test
repnz
adc
clc
mov
mov
out
loopne
add
inc
in
jmp
faddp
push
iret
jl
les
jo
into
sbb
sub
mov
pop
add
xor
jnp
mov
xchg
jg
push
leave
int3
aam
lahf
add
adc
jbe
jp
jle
push
subl
push
dec
push
pop
ljmp
test
enter
cli
jecxz
cld
fcmovu
fbstp
jl
adc
xor
imulb
adc
in
jbe
jmp
dec
mov
orb
sub
jecxz
mov
rorl
int3
push
push
mov
ret
adc
or
mov
jae
pop
push
push
sbb
cltd
xor
dec
fdivl
imul
into
std
or
cmp
push
xchg
mov
pop
add
pop
mov
push
xor
xchg
sub
or
in
out
loopne
pop
jp
stos
jecxz
pop
pop
cmp
mov
in
dec
pop
pop
popa
fstps
shr
mov
or
pop
int3
stc
lods
std
push
mov
adc
add
cmp
mov
aam
enter
out
imul
dec
push
dec
scas
lahf
iret
pop
in
adc
add
loop
int3
jecxz
test
pop
ud0
push
pop
sbb
sub
aad
jmp
fstps
xchg
mov
jns
out
adc
mov
jae
xor
les
xchg
das
inc
inc
into
int3
out
mov
ror
std
jne
jmp
or
dec
push
mov
arpl
stc
imull
fsubrs
dec
mov
clc
iret
js
sti
ficoms
and
xchg
fcoml
lods
pop
lods
jg
in
daa
ss
mov
mov
roll
pop
inc
cs
dec
push
mov
mov
jae
cmp
mov
and
repz
stos
test
cmp
dec
rorl
dec
hlt
in
push
cmp
adc
and
xlat
test
outsl
pop
mov
jg
mov
bound
leave
sbb
ja
fucomip
cli
sub
sub
and
xor
cs
mov
xchg
push
cmp
xchg
and
and
lods
pop
xchg
in
test
aaa
adc
dec
xchg
and
data16
ss
nop
jl
mov
adc
loope
fwait
das
bound
in
rolb
jl
mull
sbbb
xchg
ret
insl
ret
gs
xor
std
sahf
fisttps
fisttpll
bound
lock
outsb
test
jl
ja
cmp
jnp
sahf
scas
addl
testl
popf
in
sub
ljmp
jo
lods
loopne
mov
aas
cwtl
loope
mull
jecxz
mov
test
outsl
cmp
xor
mov
lea
lahf
xor
insb
xorb
adc
and
orb
sbb
xchg
xchg
adc
dec
stos
dec
adc
out
add
js
xlat
or
lahf
sti
call
stc
sub
mov
lds
rclb
adc
or
stos
imul
imul
inc
fisttpl
xlat
aad
dec
adc
ffreep
xchg
xor
stc
in
test
divb
pop
movl
add
jge
fwait
addb
inc
in
pop
push
lret
in
mov
adc
dec
in
movsb
pusha
and
into
mov
leave
nop
lods
orb
lods
shlb
jp
sbb
sub
jmp
inc
in
add
clc
jno
into
pop
jp
scas
movsl
xor
xor
sub
inc
movsl
mov
sbb
inc
or
mov
aaa
adc
ret
mov
stos
roll
aam
add
stos
jo
inc
repz
dec
sub
mov
adc
or
cmc
sarl
or
add
jle
lahf
pop
notb
push
mov
jecxz
cmpsb
notl
in
or
dec
pop
je
pop
cli
cltd
orl
mov
scas
aas
cmp
mov
cmp
cmp
dec
pop
push
xchg
xlat
mov
ret
mov
lock
inc
fwait
xchg
pop
xlat
pop
xor
pop
pushf
roll
sbb
aad
ja
sbb
es
jbe
decl
mov
push
out
pop
mov
mov
daa
nop
push
je
hlt
or
rorb
jbe
adc
cli
inc
sbb
push
xchg
outsw
hlt
out
mov
outsl
out
inc
mov
sbb
jp
movsl
js
lahf
pop
pop
cmc
stos
ds
push
shrb
mov
scas
hlt
or
mov
adc
and
inc
pop
xor
outsb
les
sarb
mov
les
enter
xchg
rcl
xchg
xor
mov
in
cs
pop
xchg
xchg
pop
adc
pop
nop
sarb
push
or
test
push
mov
or
lret
jno
xorb
xor
les
sbb
mov
addr16
fs
xchg
mov
leave
lods
repz
xor
xchg
push
pop
adc
xor
int
jno
or
pushf
bound
aam
mov
cmp
or
das
ljmp
xor
xchg
pop
cs
push
pusha
lret
icebp
adcl
leave
iret
gs
inc
stc
int3
shrl
push
imul
data16
shrl
ss
insl
mov
bound
ja
jmp
mov
ss
mov
rcll
fnstsw
js
lods
rorl
jo
lds
xchg
jbe
push
xchg
push
add
test
aaa
inc
cwtl
daa
cmp
sti
adcb
xchg
popa
jns
test
jp
cmpsb
sub
jle
test
mov
test
sbb
sti
notb
pop
mov
ret
or
mov
loopne
daa
xlat
push
inc
cmp
mov
test
mov
cs
jl
jmp
stos
push
aas
insb
xchg
jp
sub
mov
inc
imul
scas
lock
sub
xchg
xchg
cld
popa
icebp
jmp
jno
sbb
cld
xor
push
xchg
mov
fildl
mov
xchg
and
cmp
adc
jl
add
push
rclb
sub
into
xchg
andl
inc
mov
stc
into
fnstcw
mov
or
xchg
sub
add
out
es
loope
inc
or
jle
pop
je
insl
imul
in
pop
and
push
sti
push
add
and
jle
sbb
enter
stc
dec
nop
in
sub
sbb
cli
rcl
adc
lcall
push
sbb
fcmovu
addb
in
xchg
cmpsl
adcb
dec
movsl
pop
addl
lret
aaa
mov
int
shlb
inc
push
stos
cld
xor
jns
out
xor
push
stos
jo
cmpsl
jae
dec
jge
sub
pop
sbb
sub
pop
cmp
mov
sbb
sub
mov
mov
jnp
jb
xor
stos
jl
lcall
gs
push
add
outsb
aad
and
stos
xlat
arpl
jnp
pop
test
cld
jmp
push
sbb
inc
in
dec
outsb
mov
jg
lcall
mov
popa
imul
push
fwait
pop
and
shrl
jl
or
xor
pop
jns
fbld
pusha
pop
ret
sub
mov
addr16
inc
push
ret
dec
mov
gs
icebp
test
std
mov
push
test
xchg
stc
pop
mov
icebp
adc
aam
fisubl
dec
adc
inc
sub
aaa
mov
jbe
add
adc
push
loope
inc
repnz
lcall
mul
xchg
cmpsb
mov
adc
shlb
pop
cli
outsb
add
or
jmp
mov
sbb
xchg
test
hlt
add
mov
cmpl
test
xor
icebp
add
or
out
jne
cmp
and
pop
and
pop
cld
and
inc
ljmp
insl
incl
add
pop
mov
std
xchg
or
sbb
lea
mov
mov
inc
rolb
sbb
sbb
pop
lahf
push
and
push
shrl
nop
mov
in
jmp
in
out
push
mov
inc
xor
mull
add
or
pusha
or
loop
cmp
jo
les
mov
loop
jge
or
fidivs
orl
sbb
outsb
adc
or
mov
mov
mov
stos
test
loop
cmpsl
into
lds
pop
sub
jae
aaa
adc
sub
aaa
aad
mov
arpl
mov
xchg
cmpsb
out
mov
repz
mov
cs
or
mov
std
sub
or
fs
adc
aas
add
or
aam
shll
leave
cli
push
lret
jg
cmp
adc
test
cmp
push
pop
outsb
movsl
imul
into
in
adc
mov
lods
dec
pop
ret
cmp
mov
das
mov
fldt
push
cli
add
mov
push
cmp
aam
inc
jge
out
sbb
lods
mov
sbb
pushf
ja
outsl
mov
push
repz
pop
and
ds
pop
call
push
shll
das
gs
cwtl
test
adc
xlat
mov
gs
xchg
cmpsb
jb
sarb
mov
push
and
ret
mov
sbb
test
movsl
outsb
outsb
push
dec
fdivs
loopne
inc
fsubl
sbb
push
sbb
pop
adc
faddl
adcb
in
add
lret
xchg
loopne
cmpsl
and
das
enter
mov
xor
les
push
xchg
aad
inc
xchg
inc
add
jle
popf
jg
adc
pop
inc
pushf
in
mov
jnp
lcall
sub
or
mov
outsl
mov
jmp
int
pop
ljmp
fisubrl
inc
fimull
pop
imul
xchg
push
lock
mov
jb
int
cli
mov
mov
gs
jae
cmp
add
dec
bound
int
daa
xchg
push
pop
mov
inc
fsubl
out
add
mov
inc
jge
pop
insl
mov
lea
mov
cmp
in
mov
cmp
mov
repz
or
test
mov
test
add
sbb
pop
mov
outsl
jbe
orl
outsl
fldt
scas
ds
xor
iret
push
push
setnp
mov
lods
cmp
loopne
adc
dec
loope
dec
cltd
test
idivl
sti
int
subb
add
out
sbb
jnp
jnp
mov
pop
jge
repnz
jnp
mov
sahf
pop
push
and
cmp
mov
lods
and
pop
sub
mov
int3
inc
in
out
bound
lcall
stos
jmp
pop
lcall
lret
sbb
in
mov
sub
and
lods
sbb
jns
cwtl
in
dec
and
push
and
add
sbb
and
sbb
fisubs
jl
jecxz
push
adc
ret
aas
lods
xor
lret
mov
xchg
insl
push
cmc
cli
mov
call
xchg
xchg
sbb
loopne
pop
dec
test
cltd
andl
mov
pop
repnz
dec
add
arpl
lock
pusha
loop
pop
popf
insl
int3
int3
mov
sahf
xchg
aad
jmp
in
jecxz
push
mov
xor
scas
ret
int
mov
les
fdivs
bswap
bound
cli
in
aad
imul
in
xchg
jecxz
push
popf
in
jns
and
dec
cwtl
jne
pushf
stos
movsb
jecxz
push
or
and
or
loope
jne
out
lds
call
loopne
inc
out
sti
mov
ret
shll
in
jae
cmp
pushf
add
xchg
xor
xchg
sub
adc
out
out
inc
lret
sbb
adc
cld
icebp
je
icebp
jns
vmovhlps
iret
jecxz
ljmp
mov
cwtl
jg
inc
and
or
jecxz
mov
clc
lods
jle
jge
imul
js
ja
push
cli
ds
enter
pusha
fisttpll
jno
bswap
cwtl
shrb
ret
sbb
jno
call
jmp
cltd
div
popf
lret
push
or
mov
mov
ret
cld
loop
cmp
and
inc
mulb
dec
adc
inc
data16
and
int
and
pop
aam
test
pushf
pop
or
adc
and
iret
jb
sbb
pusha
es
sbb
jbe
dec
call
pop
aad
cmp
push
sbb
sti
xchg
mov
repnz
imul
outsb
fs
jle
cli
and
push
mov
test
lahf
stos
repz
dec
push
sub
mov
mov
fdivs
cmp
dec
cmp
test
std
inc
int3
mov
addb
call
ljmp
lret
add
call
repnz
clc
hlt
jg
shr
jg
lods
mov
lcall
or
das
xor
nop
push
xchg
pop
outsb
mov
fcomps
insl
adc
or
pop
es
mov
or
lock
cmpsl
jnp
inc
push
dec
js
or
lahf
outsb
xchg
push
out
or
dec
rclb
push
pop
and
xchg
lods
sub
sbb
cli
inc
sahf
cmp
cltd
pop
std
arpl
pop
cmp
cmp
pop
out
aad
and
inc
addr16
jb
test
xor
mov
jo
dec
pushf
cwtl
mov
push
mov
pop
loope
imull
xor
rcrl
aaa
push
push
jmp
outsb
dec
xchg
sti
sbb
jnp
daa
fsubrl
cltd
jne
cmp
cmpsb
xchg
add
sbb
push
xor
mov
leave
cvtps2pi
sub
and
dec
dec
iret
push
addr16
push
jp
push
adc
xrelease
fisubrl
cmp
ret
xlat
out
in
sbb
bound
test
nop
arpl
mov
rclb
testb
dec
and
aaa
scas
sti
jae
scas
hlt
jp
sbb
jg
sbbl
aaa
stc
inc
nop
out
iret
xchg
imul
mov
ret
adc
gs
xchg
sub
xchg
jg
push
pusha
popa
fadds
dec
pop
daa
mov
or
jae
push
ja
jne
dec
xor
mov
fisubrl
aas
rcll
or
mov
push
mov
inc
clc
cmpsb
ljmp
mov
mov
inc
lods
pushl
jmp
jmp
or
push
aaa
aas
dec
pop
clc
push
in
rcr
xchg
daa
jmp
mov
loop
fxch
cmovb
lret
dec
loop
xchg
pop
jp
popa
int3
jo
or
pusha
mov
add
ja
loopne
jae
lock
ret
imul
pop
insb
in
add
jbe
xchg
cmp
cli
ss
sbb
rorb
fadd
xor
jg
cmp
in
mov
pop
or
inc
xchg
mov
jno
inc
xchg
xor
mov
mov
or
mov
sahf
outsb
jno
aas
clc
jns
xchg
mov
mov
subb
hlt
mov
mov
mov
dec
xchg
cs
fimull
sub
xchg
mov
xchg
mov
adc
dec
dec
cld
xchg
jle
dec
pop
sub
xchg
pusha
jg
mov
nop
add
add
xor
push
cmc
fwait
insb
rorl
lcall
fs
arpl
icebp
in
sahf
mov
mov
jp
and
mov
out
inc
cmp
sub
mov
jne
data16
leave
mov
imul
cmp
outsb
outsl
pop
addl
sbb
nop
hlt
mov
or
stos
mov
jp
fwait
enter
les
lcall
test
xor
jp
cmpl
lods
jno
mov
nop
adc
mov
ficoms
push
cwtl
loopne
repnz
mov
ret
push
lret
mov
in
leave
xor
out
icebp
mov
fs
sti
mov
dec
ljmp
mov
mov
cmp
xchg
dec
push
es
jmp
mov
enter
les
fsubrs
pusha
stos
mov
dec
mov
cmp
mov
mov
mov
sub
das
pop
sbb
sub
inc
je
in
in
es
add
xor
loop
mov
push
cmpsb
cli
sbb
adc
and
inc
inc
pop
imull
aaa
jb
cmpsb
mov
icebp
push
ficomps
push
popa
insl
cli
dec
test
push
xor
je
cmp
push
aas
xchg
pop
lock
and
dec
sahf
js
dec
cmpsb
and
jle
mov
or
dec
in
inc
pusha
jbe
les
sub
add
xor
jge
sbb
xor
or
push
repz
mov
sub
fsubrs
jnp
lret
or
iret
scas
mov
lock
lock
sub
lock
das
lret
sbb
jmp
mov
insl
xchg
rorb
lods
cli
stc
pop
mov
cli
adc
sub
paddw
daa
mov
out
push
inc
enter
pop
mov
bnd
jge
jge
loopne
inc
mov
ja
push
pop
push
pop
pop
dec
scas
or
pop
int3
icebp
in
mov
int3
sub
mov
mov
int
and
and
dec
add
lods
xor
push
fs
sbb
enter
insb
and
jl
scas
divb
push
jl
ss
lea
jmp
sbb
stc
jg
hlt
out
popf
adc
mov
test
imul
push
cmp
repnz
in
aad
iret
dec
ljmp
loope
std
rorl
in
arpl
lds
or
fidivl
inc
insl
imul
in
cmp
insl
int
mov
cmp
pop
cmpl
pop
xchg
jne
xor
lods
addr16
repz
into
divl
nop
add
xchg
icebp
mov
inc
or
das
mov
aad
je
add
outsl
popf
sahf
out
pusha
shl
stc
mov
inc
je
sbb
mov
js
sub
sbb
call
jb
dec
lret
ja
clc
lds
loope
icebp
insl
and
stos
pop
mov
pushf
ret
fstps
dec
xchg
pop
add
xlat
lahf
and
sub
xor
jl
pop
test
outsb
aam
adcb
or
daa
insl
call
pop
or
stos
mov
dec
sbb
xor
cmpsb
lods
ja
lretw
nop
cwtl
out
stc
icebp
mov
pop
adc
test
xor
inc
xor
jmp
mov
mov
mov
push
and
insl
xchg
outsb
enter
xchg
xchg
sahf
xor
jno
push
mov
push
arpl
fists
andb
pop
daa
mov
mov
cli
add
shll
cmc
enter
ljmp
ljmp
inc
dec
out
testb
and
ret
into
stos
sbb
notl
test
mov
stos
ljmp
not
cli
aas
xchg
push
dec
adc
jg
add
das
call
int3
ficompl
ja
movsb
enter
mov
mov
bound
add
sahf
lock
inc
aaa
sub
rcll
test
push
adc
fimull
inc
or
lods
jo
lahf
dec
ds
or
jb
fwait
xlat
pop
inc
xor
adc
jne
in
add
repz
in
insb
xchg
les
xor
xchg
adc
lret
in
inc
pusha
mov
dec
stos
jecxz
mov
ficoml
fisubl
dec
sub
jno
lds
xchg
mov
xchg
into
or
xchg
xchg
lds
sub
jecxz
in
jp
movsl
inc
fs
in
xor
movsb
add
pop
cmp
je
mov
pop
rcr
add
xor
jae
pop
push
pop
xor
push
bound
pop
in
imul
push
xchg
loope
loopne
sbb
mov
aam
shll
jnp
dec
jno
push
jp
mov
sbbb
jg
pop
rcll
mov
push
shll
jno
stos
add
sub
loopne
notl
out
sbb
pop
ficompl
pop
pop
jo
xchg
je
daa
imull
adc
ret
sarb
in
jo
jg
xchg
or
jbe
fcoms
loopne
lods
repz
out
ss
mov
mov
mov
jo
sbb
sbb
call
cs
cmp
sbb
cmp
push
insb
dec
pop
iret
fsubs
popl
fldln2
les
test
sbb
adc
fwait
andl
adc
xchg
xchg
and
rcll
sbb
pop
sub
push
xchg
sti
add
jle
cmp
mov
cmc
jge
cmc
aam
call
repnz
pop
sti
mov
and
je
lock
or
jle
test
or
adc
mov
aad
inc
push
inc
push
pop
std
xchg
cmp
popf
push
lret
push
sub
mov
pop
sub
push
pextrw
mov
sbb
iret
sahf
mov
and
push
pop
inc
and
mov
jnp
call
dec
jl
in
inc
pusha
dec
into
adc
mov
loope
pusha
aaa
pushf
mov
pop
mov
xlat
decl
repz
dec
decb
arpl
or
and
aas
push
in
cmpsl
stos
dec
adc
and
dec
pop
aaa
arpl
loop
cld
mov
das
popa
fisttpll
mov
imul
nop
pop
sub
jp
cmp
fld
stc
movsl
in
aam
add
fucom
in
jp
sub
xchg
test
jb
jbe
and
mov
mov
popf
ret
sbb
xchg
fisttpll
mov
jnp
and
arpl
loopne
cmp
ja
mov
loope
cmpsb
sbb
cmp
arpl
sub
cld
sub
shrb
mov
xchg
jbe
inc
mov
lret
pushf
imul
mov
sbb
out
mov
mov
adc
pop
sub
push
gs
inc
inc
xor
inc
rolb
mov
cli
dec
icebp
daa
fnstenv
imul
push
jmp
lods
xor
adc
int3
sub
push
inc
push
xchg
stc
inc
dec
jle
popa
je
inc
xchg
das
lahf
dec
outsb
ja
dec
xchg
bound
jl
mov
imul
add
ret
in
pop
pop
sahf
out
or
inc
into
out
cld
inc
in
or
and
or
mov
lret
adc
rol
out
cmpl
pavgw
xor
cld
cmp
pop
mov
lahf
jmp
xlat
jbe
dec
imul
and
push
xchg
rolb
push
ja
adc
out
movsb
mov
repnz
subb
add
sbb
xor
test
mov
test
inc
mov
xorl
sub
mov
jae
mov
dec
jae
test
sar
jo
mov
add
sbb
fdecstp
test
fistpll
jecxz
cld
aas
or
push
and
dec
dec
fdiv
xor
add
test
jno
inc
fbld
outsl
movsl
mov
sbb
and
mov
aad
cmpb
sub
sub
jecxz
add
mov
sbb
ret
pop
dec
js
inc
fsubrl
insl
decl
add
add
mov
or
mov
mov
sti
pop
or
push
ds
jle
cmp
xchg
cwtl
hlt
xchg
dec
mov
inc
cmpsl
push
jmp
dec
adc
cmp
ficompl
enter
xchg
aam
rcrb
sub
fldt
fdivs
push
cmp
repnz
lahf
push
stos
cmc
xchg
jge
or
add
repnz
into
out
iret
jle
xchg
dec
icebp
push
and
mov
repnz
xchg
mov
jl
lret
xor
mov
stos
mov
in
iret
jg
jo
dec
mov
repz
push
and
fs
test
mov
inc
add
add
pop
orl
xor
dec
push
daa
out
scas
xor
push
mov
sti
xor
shl
sarb
popa
push
or
xchg
lcall
lock
ss
popl
loopne
cmp
jmp
lcall
jg
inc
mov
aaa
and
out
inc
or
or
xchg
mov
sbb
cmpsl
fs
adc
xor
add
inc
sub
push
mov
push
sti
pop
out
dec
xchg
add
js
test
cltd
inc
arpl
test
push
mov
and
and
hlt
fcomps
arpl
mov
xor
ljmp
ret
jl
and
hlt
sbb
sbb
inc
xor
insl
sub
dec
das
loop
pop
mov
movsl
ficompl
inc
daa
rcl
add
into
push
scas
sub
jbe
dec
fs
scas
mov
popa
decl
inc
jmp
std
mov
aaa
mov
mov
imul
repnz
cmp
mov
faddl
push
daa
and
or
jnp
cmp
adc
repnz
popf
pop
ja
iret
sbb
sti
sub
pop
jb
shll
xchg
int
mov
mov
addr16
or
popa
jp
cmp
and
pop
and
imul
cmp
lret
sub
fnstsw
je
adc
mov
enter
adc
popa
push
mov
imul
cmpsl
and
pushf
rorb
lods
jae
movsl
shlb
ret
jl
mov
dec
pop
gs
xchg
pop
fmuls
jnp
and
lcall
jle
pop
xchg
jns
aaa
or
out
insl
dec
xchg
jp
sbb
outsl
ret
insl
add
xor
stos
and
mov
movsb
sbb
icebp
xor
jecxz
jae
xchg
pusha
ss
adcl
adc
or
push
insl
pushf
or
xor
fidivs
lahf
sub
ss
and
pop
dec
cmc
jno
cmp
out
sub
imul
out
xor
fsub
adc
add
or
imul
sbb
pop
and
paddb
cltd
ss
mov
mov
in
jecxz
inc
mov
cmp
xchg
jns
ds
cmp
out
push
mov
fcomps
mov
loope
mov
int
aad
mov
je
insb
shlb
dec
mov
ficoml
int3
push
xchg
fistpll
jmpw
jb
lahf
push
adc
dec
xor
es
jb
repz
je
mov
mov
and
sub
shll
mov
dec
push
fsub
push
jbe
cmp
sub
cmp
mov
mov
dec
adc
mov
js
mov
out
imul
mov
lahf
xor
and
or
cli
loop
jl
imul
gs
test
in
sahf
inc
inc
mov
daa
jmp
pop
cltd
movsl
sub
call
or
pop
mov
movl
cmp
fs
push
pop
mov
inc
lods
insl
adc
int3
in
cmp
daa
xchg
xchg
test
pop
and
pop
test
mov
jmp
arpl
cld
fstpt
lds
add
mov
adc
jl
mov
push
sbb
mov
fxch
rcll
jne
inc
mov
test
cmp
mov
bound
inc
and
cmp
daa
jp
fistl
fadds
xchg
js
lcall
jmp
loop
enter
in
hlt
jnp
fldenv
mov
out
push
pusha
and
or
sub
pop
cmp
out
cmp
enter
sub
enter
out
jmp
les
add
xor
adc
xorb
pop
andb
mov
or
cmpsl
lret
aas
sub
jmp
jp
cld
jp
notl
cmp
jno
mov
pop
lcall
push
pop
jns
push
lret
jnp
cmpl
js
shrl
and
mov
cmp
xchg
xlat
xor
lock
mov
test
lock
cmpsl
lock
mov
add
scas
mov
xchg
pop
xchg
inc
clc
es
push
adc
cs
and
bound
mov
xor
and
jbe
shll
imul
pop
insb
mov
cltd
das
cli
aam
push
in
push
les
add
andl
mov
je
lret
loopne
in
stos
inc
inc
mov
mov
and
stos
fsubrl
ljmp
push
inc
mov
into
emms
jmp
out
fucomi
jge
lret
inc
orl
jnp
pop
out
adc
xchg
iret
xchg
pop
jne
cmpsl
icebp
add
xchg
iret
pop
ja
adc
aas
add
fcomi
popf
icebp
ja
dec
push
pop
jns
aad
push
lock
outsl
adcl
jb
insl
and
pop
ljmp
lock
xlat
inc
xchg
lods
push
mov
cmp
out
ja
xchg
ss
addr16
mov
cmp
out
cmp
pushf
mov
xchg
add
notb
lcall
popa
rorb
shr
mov
arpl
jae
lcall
movsb
lcall
dec
rep
pop
daa
push
aam
lcall
and
mov
and
mov
mov
xor
adc
ret
test
mov
jns
les
jge
mov
and
repz
xor
push
mov
lods
sub
and
xchg
xchg
pushf
sbb
std
outsl
in
push
inc
lods
mov
das
push
sub
inc
lret
jo
icebp
sub
and
sbb
hlt
xor
push
mov
push
mov
addr16
movb
mov
cmpsl
dec
xor
lret
out
pop
add
adc
mov
pop
bound
add
mov
xor
xlat
jnp
in
roll
in
out
ret
retw
xor
add
inc
mov
cmc
add
push
push
outsb
jge
sbb
xor
push
mov
cltd
dec
imul
inc
bound
sub
mov
fsub
xchg
hlt
inc
stos
data16
adc
sub
sbb
or
gs
repnz
add
push
je
xchg
movsl
lods
jb
jns
mov
pop
add
or
adc
movsl
sbb
mov
outsb
pop
inc
cmp
xor
xor
cltd
jg
sbb
aad
push
mov
pop
jmp
mov
jo
mov
aaa
fiaddl
or
js
xor
gs
fisubl
clc
sub
out
xchg
sbb
pmaddwd
xor
shrb
clc
inc
jbe
push
sbb
pop
pop
mov
cld
gs
ljmp
mov
je
test
das
mov
xor
notb
jne
inc
fwait
mov
ret
push
fbld
xchg
outsb
jnp
out
mov
aas
mov
inc
loop
mov
orb
sbb
sbb
sbb
cmc
dec
lret
push
test
mov
or
mull
jg
push
adcb
sarb
cmp
mov
push
mov
test
or
and
jbe
xchg
and
xchg
std
jmp
mov
add
mov
xchg
jne
xchg
fcompl
pop
in
and
sahf
popf
arpl
mov
lock
cltd
xorl
add
cld
dec
leave
cmpsb
scas
xchg
push
das
lret
leave
shlb
in
mov
enter
fsts
cmp
cmc
pop
mov
enter
pop
dec
movsl
cmp
loop
sar
movsb
mov
jnp
shlb
jno
jae
loop
add
pushf
xor
pop
inc
mov
repz
cld
int
in
enter
ficoms
xchg
or
jg
and
push
mov
lods
andb
push
dec
jb
ljmp
push
in
ret
data16
js
cmp
repz
sbb
cmp
daa
jnp
mov
mov
adc
das
dec
inc
mov
push
mov
shr
or
in
test
aad
sar
xor
pop
push
push
fbld
cli
mov
gs
into
rorl
in
push
mov
imul
ret
push
mov
aad
mov
xchg
insb
cmp
mov
gs
icebp
pop
into
mov
push
cmpsl
jno
or
lds
lret
arpl
mov
insl
xor
pop
in
add
jb,pt
ljmp
jbe
xor
test
ret
sub
or
pop
test
arpl
mov
mov
arpl
data16
or
movsb
addr16
pop
jne
cmp
jnp
stc
decl
andl
jge
or
mov
push
lods
shrb
xor
lds
push
fbstp
stc
xchg
lcall
inc
push
call
xchg
imul
pushf
and
sbb
sbb
es
mov
pop
mov
lret
jne
or
adc
lods
test
mov
fisubl
mov
stos
jg
xchg
fdivp
arpl
in
aam
movb
loopne
imul
xor
movl
adc
inc
sub
xor
jecxz
fcompl
jno
leave
shrb
mov
lds
loope
loop
scas
push
pop
sub
fidivs
pushf
xchg
leave
mov
xchg
push
nop
mov
push
xchg
add
adc
je
inc
jmp
lret
jl
lcall
iret
inc
les
popa
dec
loopne
sub
cltd
adc
jecxz
int
xor
sbb
push
jecxz
jp
mov
mov
mov
cmp
outsb
test
cli
xchg
add
sub
movsl
add
cmp
adc
push
sbb
fidivs
mov
cmp
cwtl
shrl
xchg
add
leave
and
or
rolb
iret
xchg
stos
xchg
xor
xor
ss
subb
loop
repz
fucom
dec
xor
outsb
pop
add
adc
icebp
dec
sarb
and
iret
fwait
out
mov
in
mov
fcmovnu
mov
add
jae
pop
loope
stos
sbb
scas
fldz
loopne
cs
cld
test
movsb
lret
fimull
mulb
or
in
add
in
ljmp
test
cmp
out
inc
in
inc
adc
sarl
push
pop
mov
dec
sbb
inc
pop
and
enter
nop
mov
sub
push
jle
or
push
cli
test
cwtl
mov
sbb
or
decb
mov
jg
ja
xor
adc
loope
aas
inc
pop
negl
sbb
jae
in
sti
cwtl
fidivrs
lds
mov
pusha
stos
inc
xchg
ret
or
ret
fwait
mov
dec
cmp
sbb
stos
aam
addr16
adc
jl
sbb
pop
lods
pushf
sub
lds
xchg
popf
ljmp
dec
or
cmp
addr16
xchg
add
xchg
mov
xchg
cmc
ja
sahf
push
cmc
xor
push
fstl
xor
ds
mov
aas
adc
ds
lret
stos
dec
pop
pop
mov
sbb
jne
cmp
sbb
and
cltd
hlt
push
imul
fadd
stc
mov
in
adcb
add
rcl
lock
dec
fnstcw
mov
add
push
push
hlt
sub
out
aas
lcall
push
push
stos
lcall
call
add
xchg
cltd
inc
test
xor
fs
push
fimuls
cmp
mov
push
test
sbb
or
fistps
test
mov
jle
test
clc
cs
das
cmp
test
clc
mov
subb
push
ja
les
cmpsb
daa
add
fmul
xchg
xor
push
roll
push
in
mov
mov
cltd
adc
leave
cmp
out
push
int
ljmp
mov
mov
inc
jp
enter
ljmp
stos
cltd
maxps
imul
mov
xchg
out
or
dec
test
and
leave
dec
xor
push
adc
dec
negl
repz
insb
ret
push
push
jnp,pt
push
fbld
mov
pop
loope
xchg
jae
fcmovne
fst
push
pop
mov
imul
inc
and
dec
mov
sbb
leave
lcall
iret
inc
rclb
cmp
js
in
jge
cmp
mov
in
addr16
sub
jnp
fidivrs
cmp
popa
test
sti
pop
lahf
repnz
jne
js
cmp
xor
movsb
cwtl
mov
xchg
add
sarl
pop
andb
add
jns
sub
sahf
inc
ud1
xor
mov
or
stc
push
mov
inc
adc
xchg
sub
sub
cmpsb
arpl
stos
mov
mov
out
push
sub
adc
jp
mov
xor
jns
gs
lock
std
inc
test
cmp
hlt
mov
scas
rorb
mov
jp
pop
ljmp
and
cmc
stos
push
fcmovnb
scas
inc
ficompl
sbb
outsl
mov
gs
jl
stos
mov
cwtl
aaa
adc
mov
sbbb
push
fsub
out
pop
cmp
and
push
iret
sub
je
jns
in
fnsave
pop
icebp
mov
jecxz
inc
negb
mov
insb
pop
repz
test
popf
cmc
xor
test
ret
sub
mov
rolb
lds
mov
lods
int3
mov
sbb
shl
xchg
jge
jmp
in
sahf
test
cmp
or
repz
dec
fcmovu
addr16
scas
jb
and
pop
nop
mov
pop
pushf
xchg
mov
inc
scas
mov
and
sub
jmp
ljmp
divl
cmp
adc
cltd
pop
cmp
addr16
adc
sbb
mov
and
and
cmpsb
psrld
dec
pop
jo
flds
adc
ret
gs
jecxz
pop
stc
js,pn
ret
or
pop
ds
push
insl
fdivp
pop
jno
mov
rcr
mov
inc
add
mov
arpl
adc
cs
xlat
aas
and
in
mov
shrl
call
add
inc
shr
xchg
mov
jnp
fwait
mov
mov
rorb
sub
mov
lret
popa
into
sbb
icebp
xchg
xor
loope
push
jae
into
adc
mov
clc
add
mov
movsl
insl
mov
cmp
push
ljmp
in
sub
lret
mov
imul
in
adc
cmp
rorl
lods
sbb
and
jg
add
bound
add
out
cs
jb
or
jge
dec
cmc
out
cli
xorb
xor
add
ds
sahf
rorb
scas
gs
jg
ret
cmp
mov
movsl
add
call
xlat
adcb
test
xchg
mull
ror
cmp
js
sahf
int
and
mov
popa
push
xor
aam
dec
shlb
sbb
bound
xchg
out
xchg
dec
sub
rolb
mov
orl
jns
inc
mov
push
xor
xor
pop
jno
test
mov
lahf
fcompl
sub
in
mov
pop
out
clc
pop
jne
mov
pop
dec
mov
sub
pop
loop
push
imull
inc
shll
lds
cmp
test
mov
push
fs
jl
ss
shrl
adc
cli
popf
jge
loop
mov
decl
push
pop
pop
loope
sbb
mov
mov
push
jle
adc
xor
jecxz
adc
or
jbe
push
lods
add
lods
or
lea
dec
repz
shll
or
dec
cmp
push
push
sub
push
int
push
mov
ljmp
xlat
repnz
nop
inc
sbb
inc
xor
cmc
ds
ss
outsb
ret
jmp
jp
negl
fdivrl
push
shll
mov
pop
sbb
pushl
cmpsl
or
je
and
mov
dec
pop
in
stos
xchg
xchg
xchg
push
or
loop
cs
xchg
rol
nop
out
inc
cmp
inc
loopne
movsb
xchg
cltd
pop
out
add
ret
inc
push
call
les
dec
mov
adc
push
cmpsl
add
test
jecxz
inc
xchg
xchg
mov
mov
lods
mov
push
mov
out
repnz
aas
adc
addl
cmpsb
cltd
fwait
mov
mov
ds
xor
adc
sbb
arpl
push
pusha
inc
mov
scas
movsl
dec
sbb
mul
push
or
data16
push
xchg
xor
cwtl
sub
icebp
loope
stc
xchg
mov
ss
sub
stc
sub
push
rcl
ret
jmp
mov
jo
std
insl
inc
jo
repnz
daa
sarl
mov
call
js
mov
in
aaa
jl
sub
xlat
repz
fistps
inc
mov
les
cmp
mov
and
cli
nop
aaa
push
mov
out
cmpsl
in
in
movsb
nop
inc
mov
punpckhdq
in
data16
xchg
dec
xor
push
lret
rcrl
add
xor
ffreep
addr16
sbb
js
addr16
and
enter
xor
mov
xlat
push
scas
dec
jne
lods
push
nop
sbb
fdivrs
ja
iret
popf
mov
out
sub
sti
push
jne
filds
push
popf
mov
adc
dec
xor
iret
aam
push
or
mov
add
mov
dec
cmp
ret
aam
mov
sbb
out
mov
lret
int3
mov
and
mov
repnz
lock
push
jne
insb
dec
outsb
cltd
sub
mov
push
add
jmp
adc
insl
push
rcrb
mov
or
loope
dec
leave
lret
lods
or
xchg
adc
mov
imul
fstl
addl
leave
js
imul
scas
aas
push
shll
not
cwtl
loop
cmp
mov
xor
and
mov
aad
mov
and
iret
inc
mov
inc
pop
shr
xchg
stos
and
xor
add
pop
fildl
ret
aam
push
xor
push
ljmp
mov
out
lret
test
and
cmpsb
clc
sub
mov
js
mov
mov
inc
push
pop
imul
and
popf
mov
mov
scas
sbb
loop
aad
mov
addl
jmp
add
xchg
sub
in
adc
stc
xchg
sti
imul
lcall
fs
stc
stos
das
sub
jne
addr16
call
mov
jbe
mov
jl
cmp
int3
call
nop
push
scas
pop
mul
mov
add
push
pmuludq
insb
enter
fbstp
push
repz
mov
test
push
mov
xchg
mov
push
test
jge
fstpl
aas
inc
adcl
inc
sub
mov
jns
jl
mov
push
rol
dec
sub
cmp
int
lret
repnz
jno
mov
push
fwait
jbe
and
aam
xor
xor
xor
push
push
add
idivl
setnp
or
jp
lret
call
test
xlat
jge
push
enter
or
aaa
xor
ficoms
push
xchg
arpl
sub
imul
dec
or
push
aam
push
loopne
subb
aas
xor
out
std
pop
lea
dec
aas
fnstenv
mov
add
add
dec
push
cmp
in
ret
pop
les
adc
cwtl
inc
frstor
jecxz
and
js
in
leave
push
mov
outsb
adc
adc
in
lods
es
sbb
add
push
push
cmp
inc
shll
sti
test
xchg
stc
pop
sbb
aas
out
stos
je
and
dec
cmpsl
fcomp
sbb
push
popa
cmpsl
pop
adc
mov
pop
je
or
mov
mov
jp
pop
out
mov
mov
mov
cmp
aad
out
sub
icebp
sub
pop
daa
enter
dec
ja
xor
mov
dec
add
sub
inc
rcrl
pop
xchg
mov
xchg
lret
or
enter
lret
cmp
cmp
mov
xchg
outsl
and
cmpsb
or
insb
imul
int3
push
pop
lock
dec
or
push
dec
in
sbb
and
dec
xor
push
rorb
daa
pop
sub
scas
dec
cmp
inc
sub
lods
sti
add
std
dec
stos
dec
cmpsb
inc
push
sbb
inc
xlat
inc
cltd
mov
aad
cmp
je
adc
rcr
loop
push
stc
mov
push
fildl
scas
cmp
xor
xchg
push
aad
pop
imul
rorb
jle
movsb
cmp
jl
pushf
idivl
mov
jns
test
sub
sbb
insl
mov
xchg
jns
or
mov
cmp
les
lods
shrb
imul
or
push
jle
jb,pn
push
dec
adc
rolb
and
pop
push
js
xor
pop
mov
cli
lock
rcrb
lret
xchg
roll
loope
jmp
out
fldenv
addl
jg
xchg
or
stos
scas
add
insl
adc
jo
xor
les
scas
ret
mov
mov
inc
sbb
cmp
mov
shll
push
imul
jno
cmpb
daa
sahf
ret
mov
mov
cwtl
outsl
jle
mov
xchg
aaa
cmp
jns
mull
movsl
xor
in
jge
scas
xchg
mov
xor
dec
dec
push
mul
call
sbb
jno
scas
test
test
pop
inc
push
push
hlt
outsl
ljmp
adc
test
mov
lahf
sahf
in
push
mov
jo
add
jle
outsb
dec
fdivrl
jo
jp,pn
das
ja
adc
sub
lds
mov
cs
sahf
testb
add
inc
cmp
adc
push
insl
aam
xchg
addr16
mov
or
mov
clc
out
push
push
call
shll
test
mov
push
mov
jo
mov
mov
jle
test
mov
or
iret
jmp
in
shll
insl
sub
pop
sbb
bound
lcall
int
cld
ds
push
add
lock
jnp
adc
xlat
jo
es
insl
hlt
cltd
aam
sbb
fldcw
gs
xlat
xlat
xchg
sub
hlt
mov
xor
mov
xchg
daa
xorb
lock
dec
repz
repnz
inc
pop
pusha
push
shlb
sahf
jp
jecxz
mov
mov
jl
push
or
xchg
xor
sub
xchg
pop
loopne
fldcw
gs
xor
pusha
mov
or
sub
addr16
cmpsl
mov
mov
sbb
jo
shlb
fdivrs
and
les
movsl
pop
stos
movsb
andl
fstps
inc
rolb
out
jno
arpl
mov
ds
dec
jo
add
vmovhpd
es
push
lea
and
idivl
push
mov
test
xchg
rolb
imul
and
pop
xor
adc
mov
lds
adc
lahf
mov
add
shll
jns
rclb
imul
mov
mov
dec
adc
pushf
shrl
push
sbb
or
adc
xlat
dec
mov
dec
fnstcw
or
sub
cmc
mov
sbb
xor
enter
adc
pop
sbb
lret
aad
jle
push
pop
xor
and
mov
outsb
insb
xor
shrb
pop
mov
fadd
cs
stos
jg
out
xchg
lcall
jp
repnz
lods
xchg
lret
call
jp
push
roll
movsl
sub
in
loop
sbb
gs
sahf
insl
arpl
mov
lods
adc
and
pop
jmp
iret
mulps
rcr
or
xchg
mov
adc
ja
cs
fistpll
out
fisubrl
cmpsl
lods
sbb
dec
pop
lcall
lock
mov
mov
and
in
lea
add
and
nop
mov
aam
dec
push
in
movsb
inc
cld
addl
cmpsl
mov
lcall
xlat
mov
bound
shrl
mov
sbb
mov
fisubs
or
out
add
push
jb
jg
inc
leave
ds
std
push
jg
lea
enter
insl
cmpb
addr16
sub
in
mov
fstl
push
cwtl
sub
imul
jp
sbb
ds
mov
jecxz
and
dec
ret
xchg
inc
or
jge
sub
pop
into
cltd
dec
call
push
daa
call
pusha
sub
xchg
leave
fimull
icebp
pop
in
xchg
ljmp
call
pop
mov
shlb
dec
lock
xchg
sbb
cwtl
rep
xor
and
jg
icebp
je
and
mov
mov
aam
data16
divb
xor
sub
in
out
stc
and
pusha
jge
push
push
aaa
lret
stos
inc
jo
in
push
adc
mov
fisubrl
shll
mov
sub
pop
in
lods
out
jo
xor
push
gs
xchg
mov
mov
aam
cli
enter
inc
sbb
adc
into
mov
push
sti
lods
xchg
dec
es
je
mov
fcmovnu
cmp
rol
cltd
jno
dec
ret
dec
xor
andl
push
inc
data16
std
push
or
cmpsl
and
jb
mov
repz
stc
roll
cmp
les
dec
fldt
jle
mov
add
pop
cmp
je
imul
or
add
out
mov
adc
stos
out
imul
jb
hlt
aaa
push
jl
pop
jp
in
mov
out
xchg
iret
and
insl
mov
sbb
imull
mov
jo
fs
add
xchg
rolb
push
jns
dec
loopne
or
dec
pop
rcr
mov
jle
add
loop
mov
loop
lret
ret
rclb
lret
cmp
mov
loopne
or
imul
mov
mov
inc
mov
dec
jmp
rclb
jl
xor
je
mov
inc
cmc
pop
repz
test
int3
sub
xchg
pushf
hlt
dec
jnp
push
xor
mov
adc
shll
mov
push
mov
push
or
lods
or
iret
int3
pop
scas
dec
inc
movsl
mov
or
add
mov
push
sub
dec
or
mov
outsb
push
jb
addr16
fidivrs
mov
and
imul
inc
push
mov
cmpsl
in
mov
dec
lds
mov
dec
and
jmp
xchg
mov
or
hlt
mov
jmp
cmpsl
adc
cmpsl
pop
loope
loopne
adc
push
loopne
ret
lcall
negl
push
push
mov
sbb
inc
stos
cmpsl
int3
ja
cmp
mov
sbb
test
stos
or
inc
xchg
jle
xor
imul
sbb
push
mov
sbb
or
push
push
rcrl
mov
dec
or
ds
das
inc
jo
ror
loope
rclb
in
nop
and
arpl
jge
in
and
test
or
pop
mov
and
repnz
cmp
or
adc
cmpsl
dec
cwtl
test
sub
or
popf
inc
pop
sub
inc
xlat
es
fldt
and
andl
andb
std
push
inc
cli
scas
movb
loope
cli
mov
jnp
lods
xor
xor
popf
cmc
scas
lods
adc
mov
movsl
jnp
icebp
imulb
lods
push
loopne
xchg
pusha
mov
dec
jns
xor
and
mov
push
fcoml
rclb
mov
ret
dec
dec
out
sub
in
jnp
xor
mov
mov
cs
loope
outsb
in
addr16
sti
in
and
sub
mov
xchg
ss
shll
js
insb
aaa
out
or
ds
adc
jnp
fs
push
and
sub
dec
testb
mov
fstl
lods
test
sub
push
sub
adc
cli
mov
add
xor
es
stc
mov
push
insl
and
fs
inc
arpl
icebp
mov
xor
gs
repnz
ljmp
out
arpl
xchg
fwait
push
popa
and
inc
and
mov
movsl
mov
ret
mov
xchg
mov
add
push
icebp
mov
aas
out
jns
jmp
enter
mov
rol
jl
cmp
mov
push
mov
lock
cmp
jge
cli
sbb
mov
addr16
ss
sbb
in
sub
cmpsb
sti
imul
and
dec
add
jnp
stc
push
pop
subl
jmp
test
lret
mov
popf
das
std
jmp
cwtl
dec
add
push
cmpsb
rcrb
je
dec
jne
inc
inc
idiv
adc
fs
cmp
aad
mov
pop
mov
jmp
aas
insl
in
je
xchg
imul
and
and
gs
inc
loopne
xchg
in
jp
scas
repz
lcall
imul
push
data16
dec
mov
add
sub
fdivl
mov
in
ljmp
mov
pop
adc
xlat
fstpl
dec
jmp
cld
pop
pop
fsubrl
imul
sahf
xchg
cmp
hlt
cmp
loop
cld
cmc
addr16
call
divl
dec
outsl
push
ja
out
aad
or
sbb
add
pop
shl
sbb
and
cmp
mov
add
push
push
cmc
inc
aas
ret
mov
cmp
aam
fidivs
clc
cli
dec
int
adc
data16
sub
sub
fistpll
add
jle
sub
cmpsb
adc
inc
lods
dec
fsubr
cmp
dec
pop
dec
loop
xor
ficomps
sub
enter
ljmp
xchg
popf
jle
mov
mov
inc
xchg
iret
adc
arpl
std
jo
js
jmp
mov
jecxz
cli
pop
faddl
stos
xchg
movsl
leave
ss
push
je
mov
xchg
loope
or
sete
sub
jl
bound
pop
aas
sbb
cwtl
test
or
lcall
push
dec
jo
push
or
xor
or
test
das
xchg
aad
dec
popf
jne
mov
jbe
ljmp
mull
mov
mov
lds
xor
aas
repz
xor
out
in
or
jbe
imul
mov
outsl
dec
pushf
and
jnp
into
jne
push
sbb
pop
lock
dec
loope
adc
sub
mov
aaa
enter
lcall
mov
sub
out
and
incb
fs
pushf
insl
popa
add
and
xchg
jo
pop
mov
inc
xorb
scas
pop
aam
sarl
pop
ret
xchg
or
ret
shrl
cmp
js
cmc
sub
and
outsb
rcll
jle
popa
mov
gs
hlt
mov
lret
inc
movsl
mov
hlt
ja
lcall
jbe
cmc
cld
adc
cmc
and
sub
fisubl
mov
adcl
enter
addl
xor
mov
rep
sbb
in
inc
int3
jae
iret
loopne
mov
shrl
pop
mov
pop
or
xchg
push
popf
cwtl
cmp
dec
daa
in
movsb
daa
xorl
pop
gs
jae
fdiv
sub
pushf
push
add
mov
lds
idivb
call
lret
dec
or
jp
inc
testb
or
lret
push
mov
jo
lahf
mov
aam
xor
bound
leave
or
test
xor
lods
out
dec
mov
out
sub
adc
jp
sub
lds
mov
pop
push
push
or
cmp
cmp
data16
mov
aad
mov
push
out
pusha
dec
cltd
addr16
clc
mov
add
push
sbb
inc
repz
mov
les
andl
test
sahf
clc
xor
das
loop
loop
dec
pop
push
jge
and
shll
xor
insb
lahf
cmp
fmuls
std
push
fucomi
es
insl
and
dec
jae
bound
add
mov
add
movsl
sbbb
les
gs
jae
xchg
call
or
push
out
inc
sbb
dec
insb
fldenv
push
and
push
ficoms
mov
mov
int3
xchg
repnz
xlat
lahf
movsl
fs
rol
cmpl
inc
pop
fwait
int3
out
and
stc
nop
aad
push
add
push
mov
in
cmp
in
dec
xchg
jb
sti
xchg
mov
leave
inc
sub
push
push
add
push
cmpsl
mov
es
outsb
repnz
mov
push
push
sbb
js
push
adc
scas
and
pop
jnp
std
cmp
ret
xor
outsl
sub
and
xchg
jo
sahf
and
sub
push
or
pop
pop
dec
decl
iret
xchg
mov
cmpb
repz
mov
mov
dec
arpl
jbe
sbb
jmp
outsl
fwait
jle
jge
cmp
sub
and
push
mov
and
push
and
cmc
lock
lcall
andl
mov
push
push
sub
insl
negb
mov
pop
and
pop
cmp
xchg
sub
push
adc
jns
sbb
xor
mov
int
adc
jnp
cmp
cmpsb
cmpsl
sbbb
pop
mov
cmp
lret
push
add
cmp
movsl
push
aaa
roll
xchg
fcomps
or
sub
stc
xor
ret
add
cmpsb
clc
mov
push
je
insb
iret
cmpl
pop
scas
add
cmc
dec
stc
movsl
mov
mov
add
shrl
xchg
sbb
outsl
dec
cltd
notl
mov
fs
xchg
ffree
mov
push
push
xchg
popf
or
push
imul
jne
push
mov
pop
jb
in
movsb
xchg
iret
loopne
mov
pop
xchg
out
mov
das
mov
mov
iret
call
and
ss
ljmp
inc
out
add
jb
scas
lret
jae
fwait
in
mov
or
adc
adc
add
adc
pop
dec
je
mov
mov
push
ret
jae
mov
inc
push
arpl
int
xor
adc
loop
cmp
bound
test
mov
dec
sub
or
mov
mov
pop
pop
lahf
xchg
mov
int3
mov
aas
in
lds
shll
mov
aaa
aaa
adc
in
mov
push
mov
cmp
push
and
fnstsw
and
cmpsl
lcall
data16
adc
fisubrs
out
inc
shll
inc
arpl
adc
sbb
fnstenv
sbb
movsb
dec
mov
xchg
and
xchg
test
popa
lahf
sti
push
push
mov
mov
lock
push
in
es
and
pop
xchg
lock
sete
lcall
rorl
sbb
sub
sbb
add
mov
scas
mov
xor
pushf
mov
and
mov
mov
ja
mov
pop
stc
cwtl
pop
mov
imul
scas
cmp
and
jno
adc
scas
xor
pusha
push
cli
clc
dec
inc
xor
inc
xchg
mov
movsl
out
pop
or
xor
fcmovnu
fisubrl
pop
adc
sbb
adc
fldcw
cmpsl
add
mov
sahf
and
dec
cmc
ljmp
outsb
scas
out
jecxz
test
jp
add
pushf
and
fildll
mov
sbb
rep
and
cltd
push
mov
arpl
adc
jbe
lcall
test
xor
out
shll
dec
mov
ficoml
inc
pop
mov
push
dec
cmovp
cmp
adc
jmp
cmp
dec
mov
ret
stc
pop
and
int
pop
push
unpckhps
aad
xor
dec
out
fldenv
mov
or
adc
mov
addr16
in
cmp
dec
in
push
or
push
out
rol
movsb
adc
pop
std
aad
in
cmc
sahf
loop
pop
jl
adc
out
push
movsb
insl
jns
pop
aas
rorb
jbe
mov
add
xor
jb
mov
dec
stc
adc
add
jmp
out
fcompl
call
sub
xor
stos
fnstcw
inc
cmp
jmp
imul
inc
scas
movsb
je
add
repz
and
mov
xlat
cs
daa
sub
test
or
mov
int3
adc
icebp
call
fisubrs
inc
enter
fs
add
dec
in
test
push
inc
cmpsl
or
or
xchg
and
mov
popf
xchg
mov
aam
cmp
mov
popf
add
and
inc
fs
addr16
mov
test
test
xor
cli
decl
cld
add
loope
shl
andb
inc
add
in
jg
adc
fmul
push
mov
mov
lcall
add
sahf
lret
sarl
push
add
sub
daa
mov
fsub
mov
cld
push
mov
and
scas
or
daa
fs
movsl
test
mov
scas
and
or
andb
sbb
jns
fwait
xlat
les
xchg
mov
lods
mov
dec
rorl
adc
adc
fsts
jle
test
in
hlt
mov
mov
iret
mov
das
inc
adc
cmp
mov
daa
enter
sahf
inc
clc
ljmp
inc
mov
jae
cmp
fildll
jg
shll
in
xor
jg
adc
jmp
xchg
mov
mov
pop
lret
out
aaa
xor
push
loopne
mov
cmp
into
addb
push
lret
repnz
jecxz
ss
stc
jle
jae
lock
cmpl
aad
std
pop
dec
test
test
xor
jmp
aas
adc
jge
mov
daa
aam
js
mov
jle
xchg
cld
rclb
cs
xor
leave
xlat
rolb
test
aad
mov
jo
aaa
or
daa
enter
ss
jle
loopne
sbb
xor
negb
xor
dec
cld
inc
push
arpl
sbbb
or
mov
jb
mov
shll
push
test
sub
sbbl
xlat
push
cmp
pop
fucomp
loopne
je
jae
mov
add
dec
jno
loope
inc
dec
pop
aad
int3
test
add
cmp
sub
xchg
scas
rcrb
fdivs
or
cmpl
adc
jbe
add
je
push
add
outsl
arpl
push
sbb
pop
call
xchg
jnp
pop
negb
into
fs
mov
adc
inc
arpl
pop
push
mov
fsts
int
lea
cmc
push
dec
mov
scas
addr16
dec
and
in
repnz
into
sbb
jns
dec
push
xor
ljmp
jnp
xchg
dec
pop
mov
add
inc
mov
mov
jl
data16
xor
ret
mov
xchg
nop
shll
xchg
mov
xor
push
cmp
push
ds
mov
in
push
add
int
mov
iret
pusha
jge
mov
sbb
ret
mov
and
adc
stos
jne
out
sti
xchg
xor
inc
mov
xchg
mov
insb
pop
add
mov
inc
sub
andb
test
add
int
mov
xorl
cwtl
enter
mov
out
adc
out
outsb
movsb
imul
sbb
outsb
pop
or
fnstcw
gs
out
mov
and
jmp
js
pop
das
mov
or
bound
dec
dec
insb
xchg
push
and
inc
cmc
ja
sahf
ljmp
pop
jns
mov
mov
mov
jmp
clc
mov
sar
pop
mov
std
repnz
outsl
ffree
pop
xchg
mov
pop
xchg
lock
in
imul
mov
addr16
aaa
xchg
pop
nop
das
in
adc
jmp
rcll
and
xchg
mov
ret
push
pop
sub
xchg
fidivs
mov
jmp
push
aaa
popa
iret
ret
sti
mov
cmp
push
fxch
sub
mov
js
jnp
fnstcw
adc
outsl
sub
and
inc
iret
nop
mov
sbb
fimuls
mov
push
dec
or
xor
adc
sub
clc
jb
and
and
sahf
faddl
adc
bound
xorb
nop
inc
mov
xlat
outsb
lea
add
mov
lcall
ja
aad
std
push
mov
mov
sub
repnz
pop
pop
ret
inc
sarl
repz
and
mov
test
inc
xor
xlat
insb
lea
and
pushf
push
xor
add
inc
inc
scas
xlat
addr16
push
mov
pop
test
push
mov
pop
pop
mov
mov
out
lock
pop
adc
xor
jg
sbb
fwait
je
fs
out
push
xorb
pop
daa
mov
inc
pusha
cli
rcr
and
outsl
icebp
in
std
stos
sti
adc
shll
sub
and
lret
jl
testb
xchg
popa
jo
mov
jb
xchg
loope
jne
stos
jnp
inc
outsb
scas
sbb
sbb
adc
jecxz,pt
ljmp
xorb
shrb
stc
mov
push
movsb
xor
adc
ffree
addr16
nop
jnp
lea
addr16
lods
rorb
push
jne
jno
je
sbb
sbb
xchg
push
je
inc
ret
pop
dec
dec
in
cmpsl
leave
pop
mov
adc
outsl
xor
movsl
repnz
cmp
cmp
pop
push
mov
add
lcall
aaa
dec
mov
les
inc
jo
test
fcompl
sub
out
xchg
js
test
call
and
ret
cmp
and
mov
mov
in
scas
stc
imul
mov
insl
mov
mov
aaa
jg
inc
lea
cmpsb
movsb
push
andl
push
out
cmpsl
loopne
xbegin
and
or
insl
cmp
mov
pop
dec
into
enter
push
jle
call
jns
adc
push
inc
ret
mov
fimuls
cmp
faddl
mov
dec
mov
fsubr
sbb
aad
adc
leave
inc
mov
daa
sbb
int
das
ret
sbb
fs
subl
jg
outsl
or
mov
jl
xchg
sub
lods
mov
sub
and
aad
adc
test
fmuls
mov
push
mov
pop
movsl
ficoms
bound
shrb
jecxz
aad
fistps
dec
insl
imul
cmpsb
xor
push
pop
jmp
inc
iret
inc
push
stos
mov
insb
loop
sahf
test
scas
lea
pop
xor
aaa
adcb
sarb
fwait
mov
xchg
and
cmp
and
adc
sahf
inc
movsl
scas
and
mov
fisubs
roll
xor
repnz
mov
iret
and
repnz
adc
divb
fnstsw
iret
cli
ljmp
cmp
mov
lea
test
mov
mov
outsb
dec
and
and
sti
jp
add
scas
scas
sub
push
jp
pop
or
stc
mov
stos
cmp
out
imul
inc
es
mov
mov
mov
das
sbb
ja
push
pop
popf
mov
clc
sub
jg
inc
jno
fcmovnbe
push
inc
popa
pushf
or
sub
sbb
inc
test
sahf
sahf
cld
imul
or
movsb
daa
sti
jb
ss
sbb
add
rolb
add
int3
fld1
xor
pop
loope
push
or
push
addr16
cld
inc
ret
icebp
xchg
adcl
std
xchg
bound
hlt
inc
sbb
mov
test
sub
xlat
push
push
scas
gs
jns
out
out
int
mov
push
inc
stos
lcall
xchg
ss
push
jmp
or
popa
orb
ss
jmp
fcmovnu
push
jno
iret
inc
in
inc
pop
inc
xchg
addr16
fwait
add
out
in
jg
mov
dec
cmp
clc
sub
push
lahf
push
stc
jns
xchg
lea
and
mov
mov
aam
gs
push
lcall
cmpsl
push
inc
push
jne
add
cmp
popa
inc
inc
lret
mov
pushf
mov
dec
rcll
cmpsl
aam
jne
dec
xchg
pop
sub
cmp
push
xchg
les
popa
lret
lock
xor
jl
adc
sbb
adc
push
iret
pcmpeqb
call
mov
subb
sub
icebp
rcr
mov
sub
aaa
mov
push
pop
popf
xlat
xlat
js
les
iret
and
scas
icebp
add
xchg
fisubrl
or
inc
inc
inc
bound
dec
mov
ds
clc
jp
notb
insb
mov
xchg
sub
jg
insl
popf
icebp
in
mov
push
jmp
mov
rcll
mov
inc
aas
stos
data16
rcl
pop
imul
mov
fstps
adc
jmp
cld
dec
gs
in
dec
enter
imul
mov
jb
jmp
mov
fwait
inc
shll
dec
jnp
jae
enter
enter
sti
ret
dec
xor
out
repnz
jae
mov
cmpsb
mov
mov
dec
xor
push
xor
mov
mov
sbb
out
ss
lret
shlb
loope
add
mov
add
add
cmp
loopne
jecxz
and
ss
mov
mov
stc
fdivl
scas
add
push
mov
ficoml
arpl
mov
pop
or
mov
test
inc
inc
ds
gs
lds
fcoms
pop
lret
cmc
add
repz
push
mov
gs
out
fisttps
inc
jp
xchg
sarl
rcrl
ret
push
roll
jno
pushf
pop
test
xchg
sub
insl
and
sub
mov
push
push
or
pushf
jmp
ret
inc
push
mov
inc
rcrl
nop
mov
imul
leave
sbb
shll
add
cmp
push
adc
jmp
sub
mov
test
mov
jge
pop
daa
movsl
scas
std
stos
dec
xchg
xor
in
aaa
sti
xlat
imul
push
push
and
outsb
push
sahf
aad
mov
idiv
stc
inc
add
push
jl
mov
cmp
stos
xor
scas
mov
jecxz
lcall
sub
je
mov
fmul
xorb
jbe
lods
out
lea
fidivl
mov
les
inc
imul
xchg
push
cmp
js
mov
decb
lret
or
sti
cs
cmp
dec
faddl
das
dec
dec
setg
sbb
aas
mov
and
out
sbb
and
and
xchg
pusha
inc
or
int
or
stos
popa
inc
adc
adc
aam
mov
fs
jo
bound
stc
pop
and
ret
sbb
movsb
lea
push
mov
or
adc
adc
call
or
rcl
mov
pop
lods
sbb
xchg
bound
into
aad
loope
cmp
jge
pusha
sbb
imul
sub
pop
mov
lods
jae
leave
sbb
adc
mov
sysenter
stos
mov
sub
mov
lcall
or
int3
push
push
es
mov
inc
xchg
ffreep
add
das
loop
ret
aaa
sbb
jo
insl
jne
stos
mov
or
jmp
and
pushf
out
jno
shrl
mov
enter
or
adcb
sub
xchg
mov
jns
adcl
clc
add
es
dec
adc
jns
jp
fs
mov
dec
mov
jb
mov
mov
testb
xchg
xlat
repz
push
cli
aaa
inc
mov
nop
jle
inc
ljmp
popa
sbb
roll
push
fsts
test
out
out
lods
fmuls
outsl
jne
mov
es
cld
jns
cmpsl
adc
mov
pop
pop
xor
jg
or
sti
and
shrb
imul
sbbb
dec
adc
fadd
fisubs
cld
aam
push
dec
add
mov
sub
call
nop
lock
ljmp
pop
ffree
mov
cmp
adc
sub
jb
xchg
int3
aad
cmp
test
sbbl
jae
inc
mov
dec
cmp
in
icebp
push
and
cmp
push
icebp
enter
inc
shrl
dec
out
loopne
push
mov
dec
in
and
stos
adc
cwtl
ror
aaa
stc
jb
pop
inc
in
pop
repnz
xchg
jge
cs
loop
std
subb
push
cmp
test
adc
enter
sub
test
sbb
jae
xchg
pushf
sub
inc
divb
mov
inc
cmp
lds
cmp
gs
lret
adc
movsb
stos
and
repz
xchg
sub
mov
enter
loope
push
cmp
aam
shlb
add
xor
push
xchg
std
std
dec
adc
not
std
je
xor
push
inc
clc
lret
adc
loop
pop
popf
das
cltd
or
shl
xchg
cs
mov
pop
xchg
sbb
mov
cmpsl
jbe
or
xchg
loopne
scas
sub
jo
sub
xchg
jo
sbb
out
js
cmpsl
mov
into
and
stc
and
xchg
popf
loope
and
inc
sbb
addb
cwtl
scas
and
lods
lahf
data16
mov
lods
in
or
or
imul
orb
add
mov
out
mov
mov
pop
into
int
xor
dec
cs
sar
jns
imul
mov
dec
nop
frstor
in
sbb
fsub
shl
sbb
lea
or
add
mov
sahf
dec
std
push
test
xor
das
cmp
and
adc
test
sub
push
mov
sub
aad
push
xchg
cmpsl
jnp
mov
ljmp
cli
daa
jns
sbb
xchg
mov
lret
ss
mov
push
xchg
mov
adc
dec
and
push
or
push
int3
xor
sbb
jnp
gs
inc
inc
cmc
ja
xlat
add
aad
lret
jne
scas
aaa
push
mov
xchg
mov
dec
das
in
out
stc
inc
pop
loope
int
cmp
les
stos
stc
and
insb
test
out
xchg
jnp
pop
xlat
jecxz
push
mov
xchg
cwtl
in
fcomps
inc
fwait
out
fsubl
loopne
or
push
divl
mov
mov
lret
outsl
mov
mov
jle,pn
inc
adc
shrl
dec
or
push
arpl
in
cwtl
adc
jmp
push
lret
loopne
xor
cmp
jge
and
into
pushf
xor
cmp
and
push
pop
add
stos
mov
test
mov
lock
add
push
push
test
inc
cmp
sar
add
hlt
rcr
movsb
or
push
mov
pop
scas
outsl
xlat
scas
dec
fwait
jp
cwtl
add
mov
push
into
jne
outsl
pop
stos
fs
cmp
mov
or
pause
mov
dec
cs
les
sbb
mov
mov
jo
sbb
leave
push
mov
mov
int3
sti
pop
pop
cmc
das
rol
push
out
sti
in
push
xor
and
outsb
cmp
sub
arpl
dec
cmp
cs
push
and
les
shr
aaa
shll
adc
mov
adc
xchg
ss
hlt
in
sbb
push
inc
mov
xor
popf
add
add
in
jnp
sub
lcall
ljmp
fldt
cmc
js
inc
shll
in
loope
cwtl
pop
idivl
mov
test
add
aas
decl
insl
insb
adc
sub
jecxz
xor
fstpt
jmp
inc
mov
dec
sti
shl
mov
cwtl
mov
addr16
xchg
mov
and
sub
sub
inc
inc
adc
orl
push
add
les
push
push
std
lock
mov
dec
je
xor
pop
mov
fists
sarl
xchg
pop
aaa
pop
fwait
mov
rorl
push
sub
mov
jl
add
gs
out
push
adc
lock
scas
jbe
int
into
push
push
out
cmpsb
and
mov
mov
in
frstor
jecxz
sti
std
jne
cwtl
adc
sbb
mov
sbb
inc
mov
mov
aas
gs
dec
and
mov
pop
fdivrs
cli
lahf
int3
int
xchg
inc
sub
stc
in
adc
sbb
imul
sub
inc
add
roll
or
mov
lret
lret
ss
xlat
cmpsl
inc
fidivrl
sub
adc
popl
inc
int
in
sub
pop
dec
cmc
icebp
add
cmpsl
push
pop
popf
rcrl
jne
xchg
inc
xchg
xchg
cmp
leave
shll
ret
and
add
cmc
je
pushf
roll
aam
jmp
aaa
xor
divb
cmp
leave
into
repnz
adc
xchg
or
insb
push
icebp
faddl
lock
aaa
fcomps
inc
xchg
repnz
lret
daa
pop
icebp
mov
movsb
mov
ret
imul
pop
cs
cmp
pushf
push
xlat
in
ffreep
sub
lea
mov
lods
mov
call
ss
adc
popf
ret
lahf
imul
stos
adc
imul
out
loopne
pop
mov
xchg
pop
lods
stos
subb
jg
test
loopne
paddsw
fisubrl
mov
dec
out
es
scas
inc
jecxz
adc
sub
dec
ljmp
ret
mov
daa
test
jno
jmp
mov
or
test
hlt
xor
inc
mov
xlat
xchg
cmc
ss
outsl
mov
cltd
pop
push
push
fdivl
add
cmp
add
sbbb
pop
inc
dec
add
xor
roll
dec
mov
jae
cld
ror
in
lret
cmp
ror
bound
jne
xor
or
insb
loop
int
sub
popa
in
mov
add
jmp
jl
stc
jmp
xchg
add
xchg
or
clc
inc
fsubs
out
rolb
fists
push
dec
repnz
js
jns
out
dec
mov
xor
ficomps
scas
sahf
fmuls
out
jno
jl
sbb
sbb
test
cmp
fildll
sbb
pop
sub
sahf
push
jg
cmp
mov
sub
jne
jns
adc
cmpsl
mov
in
jns
dec
jnp
rcrb
fidivrl
xor
push
xchg
xchg
dec
jne
es
cmp
push
pop
push
fsubrs
test
mov
movsl
pop
stos
xor
adc
sub
mov
aam
cmc
inc
xchg
scas
push
and
popf
hlt
add
arpl
mov
mov
or
icebp
ljmp
rclb
mov
adc
js
or
daa
sbb
lock
cld
mov
inc
cwtl
mov
xlat
rcrl
in
mov
dec
inc
std
push
popa
daa
cmp
out
sub
add
xchg
and
enter
adc
push
sub
xchg
push
jle
std
push
mov
dec
dec
ret
stos
mov
inc
or
mov
dec
loope
xchg
andl
pop
jge
int
xor
iret
jmp
or
and
std
dec
mov
sbb
xchg
and
dec
pop
js
mov
mov
and
ret
repz
subl
das
push
cmp
insb
dec
imul
mov
push
mov
jb
lahf
stos
hlt
dec
lods
xchg
aam
xor
lcall
insb
xchg
das
rolb
pop
mov
js
stc
and
mov
push
fwait
sub
ljmp
and
call
cmp
mov
ret
jns
and
fnsave
repz
cmp
scas
xchg
movsl
xchg
adc
les
mov
repz
jmp
push
push
jns
loopne,pn
sub
mov
or
xchg
cmp
fmull
test
ljmp
add
int3
cmpsb
mov
adc
push
adc
and
in
aaa
out
or
out
icebp
sbb
push
jnp
add
movsl
scas
push
adcb
sbb
push
pop
mov
push
xchg
mov
cmpsl
or
and
mov
aaa
pushf
xorb
cs
inc
jp
or
cmpsl
out
cs
inc
cmpsl
cli
test
movsb
fidivrs
jge
in
lret
addr16
ljmp
mov
shll
push
jmp
js
adc
sub
inc
les
in
xchg
fistps
push
adc
pusha
and
fsubrs
mov
xchg
es
push
dec
or
scas
js
xchg
cmp
shll
inc
xchg
fst
test
fwait
pcmpeqd
shlb
cmc
ljmp
xchg
insb
mov
push
dec
out
push
jp,pn
sar
add
jg
push
cmpsb
popa
scas
dec
stos
pop
pop
cmp
push
popf
pop
out
xchg
imul
sub
dec
stos
add
mov
push
mov
cmp
pop
cmp
pop
mov
pop
xor
test
sub
push
jae
cmp
leave
xchg
mov
xor
jno
pop
int
jp
jecxz
jl
btc
int3
add
cmpsl
cli
adc
push
pop
cwtl
sub
fcmovbe
lret
ja
jge
xor
mov
xchg
mov
lock
and
push
push
mov
xchg
inc
add
mov
adc
ljmp
push
mov
clc
xchg
mov
mov
cmc
das
loopne
pop
daa
mull
pop
xchg
dec
push
lcall
call
loopne
outsl
fptan
cmp
ljmp
aad
imul
rcrl
adcl
cmp
pusha
dec
xchg
mov
hlt
jle
je
das
insl
pop
into
enter
push
int
lahf
cmp
movsl
iret
cs
stos
cli
inc
repnz
mov
jb
rclb
cmpsl
mov
add
dec
scas
cli
mov
pop
dec
arpl
aad
mov
mov
bound
mov
add
cli
or
jp
dec
or
stc
mov
sub
in
push
mov
fsubp
std
mov
shlb
sahf
cmp
and
sbb
push
sbb
xor
or
sbb
jne
mov
xchg
stos
jno
cmpsl
pop
sarl
out
je
in
pop
loope
xor
lret
aas
fistl
fcmove
sub
push
aad
mov
pop
pop
jns
xor
xchg
mov
inc
mov
loopne
js
sbb
mov
pop
mov
xchg
mov
out
js
mov
sbb
sbb
mov
rclb
jecxz
and
sbb
cmpsb
in
jp
xor
outsl
sti
jae
xlat
cmpsl
out
ljmp
pop
sub
sbb
int
push
imul
mov
xchg
xchg
sub
ljmp
shrb
aad
shl
adc
sub
sbb
mov
or
or
mov
pop
xchg
mov
in
aas
xchg
imul
aad
loop
popa
mov
nop
mov
les
test
and
and
inc
jge
xor
pop
lea
pusha
and
sub
sbb
mov
and
and
pop
sbb
mov
jle
mov
and
movsb
cld
out
pop
cmp
add
nop
or
out
mov
xchg
std
jb
cmc
aas
fdivl
aaa
ret
jbe
pop
stc
mov
inc
or
loop
sbb
loope
xchg
xor
xchg
mov
jb
fmull
sbb
xor
cmp
sub
mov
bound
ljmp
testb
xchg
xchg
iret
cmpsl
push
fcmovne
mov
insb
mov
sbb
sub
mov
jo
jl
aad
xor
cltd
hlt
es
push
jg
push
testl
nop
push
mov
xor
cmp
sbb
and
mov
rep
sub
xchg
push
cmpsb
fistpl
inc
mov
aam
cltd
addb
sbb
loopne
xchg
cmp
outsl
pop
mov
fidivrs
test
add
jge
push
in
and
pop
inc
mov
jl
dec
xchg
addr16
jp
movsb
dec
fidivs
xchg
mov
sbbb
lahf
add
pushf
mull
inc
sar
std
test
push
push
mov
repnz
sbb
mov
cmp
mov
xor
push
or
idiv
lahf
cmp
pop
and
das
js
xchg
push
pop
orl
sbb
notl
fildll
clc
subb
jmp
test
int
dec
popf
cmpl
jg
mov
gs
cwtl
aam
mov
xchg
mov
test
add
loopne
mov
daa
je
ror
pop
es
ljmpw
iret
mov
pop
imul
dec
enter
jecxz
or
insb
inc
mov
dec
les
push
xchg
in
das
adc
mov
arpl
in
cmp
ss
push
jmp
ljmp
add
shr
jmp
push
rcrl
jbe
scas
push
cs
test
or
cmp
das
repz
mov
xlat
mov
jns
mov
jbe
js
lahf
in
fmul
loop
dec
jae
inc
push
xor
jb
pop
add
cwtl
stos
sbb
testb
push
push
sbb
and
movsb
cmp
mov
ds
jl
pop
lea
ret
imul
mov
nop
cmp
dec
nop
jl
jmp
ljmp
mov
dec
in
mov
xor
adc
mov
aad
xor
xchg
push
xchg
jbe
lods
jbe
repz
stc
decl
int
sub
pop
inc
pop
mov
mov
cmp
shlb
movsl
mov
scas
aam
mov
mov
insb
rol
dec
and
fidivl
es
inc
sub
xor
les
dec
loopne
jp
mov
aad
xchg
adc
inc
mov
arpl
pop
iret
xchg
add
and
fdivrp
inc
in
stos
push
popf
insl
pop
popa
aaa
add
jg
xchg
adc
movsl
cltd
and
int3
dec
hlt
inc
addr16
mov
sub
sub
push
call
ja
inc
inc
movsb
adc
imul
cmp
adc
std
jg
sub
push
sbb
loope
pusha
fimull
ja
and
or
fisubs
mov
xor
xor
sbb
cmp
jae
mov
fstl
push
insl
aad
sub
jb
iret
or
sarl
mov
push
insb
adc
inc
pop
inc
cwtl
outsb
mov
sbb
sti
rclb
xchg
shrl
js
insb
pusha
sub
mov
push
imul
mov
inc
ret
sub
pop
nop
xor
adc
inc
jo
ficoml
or
sbb
in
test
sarb
or
cltd
or
jno
jbe
pop
outsl
sub
pop
cld
scas
cmc
jle
inc
je
dec
mov
scas
fwait
push
int3
popf
jge
insl
dec
add
sbb
mov
loopne
sbb
xchg
mov
js
pop
mov
test
jecxz
scas
out
dec
push
cwtl
in
outsb
and
shrb
mov
test
sbb
fsubp
aad
xor
jl
loope
int
roll
sbb
clc
mov
test
loope
nop
or
sub
lods
dec
sbb
bound
xchg
sub
loope
push
add
shrb
pop
mov
xor
jge
cmpsl
mov
insb
pop
insl
mov
ret
push
jmp
outsl
orl
mov
mov
add
cwtl
test
jmp
push
inc
jg
out
sbb
dec
ss
inc
sbb
push
and
into
add
sub
xchg
cwtl
sub
or
push
stos
pop
repz
loopne
shll
jp
js
inc
orb
sbbb
sti
push
cltd
mov
xchg
pop
cmp
in
push
lcall
bound
add
jno
dec
jb
mov
jns
cmp
movsl
and
aad
mov
jmp
jns
sub
loop
adc
je
add
es
pop
mov
out
lret
cmp
sbb
int3
pop
addr16
imul
sub
push
aam
jae
les
push
fmul
jp
les
adc
ds
push
pop
iret
sahf
mov
inc
jmp
cld
jp
movsl
outsb
jmp
fistpll
sbb
xchg
scas
mov
je
js
xchg
lods
jle
enter
je
pop
cmp
fwait
stos
pop
adc
je
pusha
adc
push
in
int
mov
dec
mov
cmp
sar
push
xor
psllw
xor
mov
mov
mov
push
jbe
push
sbb
repz
xlat
adc
popf
int
ljmp
lods
popa
cmpsl
sub
pop
or
mov
sbb
stc
call
lock
imul
stc
mov
and
vpcmpgtd
or
lods
lahf
nop
pop
in
stos
movsl
iret
ds
mov
test
test
pop
pop
mov
xchg
stos
int3
out
xchg
pop
xorl
push
xor
hlt
and
in
add
xchg
fcoms
xor
dec
leave
and
pop
dec
xchg
jne
pop
dec
sub
xchg
clc
jb
lahf
lods
mov
jae
cmp
jmp
shll
and
and
in
mov
mov
pop
lahf
adc
cmpsb
pop
mov
loope
push
out
cmp
js
inc
lods
mov
adc
out
in
mov
xchg
or
mov
or
mov
test
clc
push
inc
jae
dec
dec
ss
adc
pop
jg
dec
mov
pop
bound
mov
mov
mov
and
popa
into
sbb
add
cs
shlb
cmp
push
clc
add
push
icebp
popa
push
and
adc
inc
in
aaa
icebp
xchg
jne
pushf
add
loope
pushf
mov
cltd
pop
sti
fs
or
loopne
jmp
cld
push
iret
notb
std
inc
mov
sbb
or
pop
xchg
fnstenv
icebp
in
out
sbb
adc
lea
sbb
mov
lds
dec
shrl
rcr
xchg
add
gs
mov
aad
bnd
jmp
sub
je
push
shlb
mov
mov
iret
sbb
jl
shlb
loop
sbb
add
pcmpgtd
idivb
sahf
pusha
jg
in
pop
ja
add
stc
push
aaa
in
xchg
or
mov
jo
shll
pop
dec
scas
adc
aad
pop
in
dec
mov
pop
sbb
addr16
xchg
int3
xlat
and
xchg
sub
popf
cmpsl
cltd
into
lahf
lods
fisttpl
pop
mov
addr16
xor
cli
cld
jp
fsubr
fcomps
xor
hlt
sarb
in
mov
and
jmp
push
lea
subl
out
fwait
adc
add
xchg
mov
inc
jle
xor
sarl
jbe
dec
push
addr16
pusha
and
ja
shlb
mov
mov
in
lods
repnz
pusha
dec
fcmovb
mov
stos
add
jnp
dec
mul
jnp
lds
fs
aad
outsl
loopne
jecxz
xlat
in
leave
icebp
inc
jnp
cmp
adc
mov
or
js
inc
insb
in
dec
jp
mov
jp
add
pop
aam
adc
sub
enter
lock
ret
mov
fcompl
int3
xor
lods
loop
bound
cmc
adc
jmp
dec
and
int3
sub
lahf
push
sbb
clc
pop
sub
xor
int
jnp
inc
push
enter
cli
inc
push
mov
dec
mov
jae
cmp
cmp
push
adc
jmp
or
jo
and
cltd
mov
sbb
ds
insb
std
movb
xchg
mov
adc
movsb
lods
ds
pop
or
bound
xchg
shl
insb
add
inc
pop
and
sbb
test
cmp
sub
or
jo
sub
popa
fwait
call
mov
sbb
pop
idivl
or
fbld
mov
sub
add
insl
add
xor
in
rcll
mov
mov
jnp
adc
mov
sbb
mov
stos
xor
movsb
or
cmp
cmp
mov
call
pop
pop
xor
add
in
or
clc
dec
pop
repz
sub
enter
test
sub
rcr
pop
sub
idivb
rcr
jne
mov
or
jae
jnp
and
jns
sbb
ljmp
into
or
test
data16
adc
fucomp
pop
sub
js
insb
lahf
xchg
es
lret
pop
xchg
push
lods
int3
cmc
ficomps
push
dec
mov
insb
push
sbb
xchg
xchg
add
jecxz
leave
leave
sub
arpl
in
jp
out
mov
aas
in
je
fcomps
cmpsb
out
cmp
fisttpl
xor
mov
add
mov
test
lods
out
ss
pop
sbb
data16
xor
or
leave
stos
push
iret
mov
int3
sub
jno
jbe
icebp
dec
mov
add
cltd
repz
aam
sarl
insl
aam
mov
pop
out
cmc
sub
out
pushf
add
add
mov
ss
inc
xchg
add
out
fistl
imul
bswap
pop
fadds
xor
xor
mov
je
mov
jmp
or
and
cmp
sub
movsl
ljmp
cmp
movsl
ja
scas
add
cs
hlt
shll
les
test
fildl
xor
inc
loop
push
cmp
lds
jmp
mov
fs
adc
mov
xor
xchg
lret
xchg
lds
adc
sub
enter
out
mov
adc
lods
arpl
xchg
dec
je
push
jne
mov
push
pop
xchg
jae
jmp
jbe
jecxz
shrb
repnz
and
mov
inc
shlb
mov
inc
fmull
sbb
mov
mov
adc
ja
dec
sbbb
xlat
jbe
sub
mov
jbe
sbb
daa
out
lahf
out
xlat
aam
xchg
xchg
in
inc
mov
push
mov
add
fsubrl
push
add
mov
dec
addr16
rcrl
fldenv
nop
cwtl
fbstp
ja
jp
sub
lahf
xor
mov
xchg
repz
iret
xchg
mov
andl
mov
inc
stos
gs
hlt
scas
xlat
call
je
jmp
test
mov
mov
mov
insb
sub
lret
rorb
insb
and
sbb
jg
add
xor
cld
mov
or
or
xor
lahf
sbb
inc
xor
adc
outsl
mov
les
push
push
jp
inc
xor
mov
subl
xchg
push
push
jbe
add
inc
lea
adc
adcb
jo
test
pop
mov
jno
xchg
pop
push
adc
push
das
mov
mov
jle
lahf
pop
ficompl
or
lods
imull
jp
and
daa
and
ljmp
daa
jb
xor
shlb
jp
xchg
je
pop
add
pop
scas
push
int3
xchg
cltd
dec
jb
movsl
gs
insb
out
pop
dec
rcr
shr
cmp
aas
and
fwait
add
mov
cli
test
mov
pop
std
sub
fdivl
repnz
push
xchg
fcoml
sub
push
popf
inc
ja
mov
clc
outsl
or
ret
sbb
mov
mov
jno
mov
pop
mov
ds
sub
dec
mov
adc
pop
filds
mov
cmp
pushf
mov
outsb
push
or
pushf
jno
mov
loop
jnp
popa
fs
or
testl
mov
fisubrl
mov
push
fs
xchg
lahf
xor
push
add
dec
data16
mov
push
xchg
push
fcompl
and
push
pop
push
cmpb
ds
les
mov
repz
mov
and
mov
mov
hlt
fidivrl
fisttps
mov
push
pop
sbb
lock
lret
orb
in
out
dec
add
cmpb
add
or
lret
cmp
sub
mov
test
pushf
sub
inc
jl
ret
cmp
arpl
cmp
mov
nop
pop
rcll
adc
xchg
inc
iret
xor
cmc
mov
jl
add
mov
scas
pushf
sub
jnp
dec
push
jbe
pop
xchg
jl
mov
mov
jnp
pop
xchg
pop
cmpsb
cwtl
ret
push
sub
jecxz
xchg
test
inc
out
sbb
repnz
cld
cmp
sub
bound
outsb
movsl
outsl
int3
shll
jnp
inc
mov
scas
adc
cmpl
movsl
sbb
adcl
xchg
mov
inc
ret
lahf
out
dec
or
inc
push
inc
add
lock
scas
xchg
stos
pop
int
add
push
and
and
jo
mov
aaa
movsb
push
jmp
pusha
pushf
and
adc
sub
xchg
push
jl
setno
ficoml
dec
addr16
inc
dec
sub
mov
push
sbb
jb
cmp
or
lods
push
pop
dec
or
or
xchg
inc
sub
and
mov
mov
imulb
jl
clc
xchg
cli
cltd
aas
pop
sahf
ret
push
sti
or
add
dec
jg
xchg
subl
cmp
sub
pop
xchg
sbb
mov
cld
jl
jle
hlt
xchg
push
mov
jne
in
adc
repz
subps
fs
cld
mov
cmp
dec
or
adc
shl
lds
xchg
outsl
leave
movsb
lods
sub
jns
sbb
iret
dec
leave
or
xlat
idivl
js
insb
jo
jne
cmp
in
lods
inc
repnz
mov
mov
pop
push
sbb
inc
lret
xchg
jbe
jecxz
divb
mov
sbb
dec
call
movsl
dec
xor
xor
rorb
clc
lcall
mov
adc
imul
fdiv
push
imul
xchg
ret
pop
testl
mov
sbb
cwtl
lds
add
or
sarb
jle
fstl
sti
repnz
sub
into
test
ja
in
pop
mov
xor
jno
fwait
sbb
in
shr
shl
xor
pop
inc
imul
aas
dec
mov
xchg
loope
sarb
mov
aam
add
daa
cmp
fcmovnbe
ret
mov
push
jmp
popf
scas
js
dec
sbb
std
jns
adc
xor
xor
push
xor
jo
and
scas
cmp
clc
lret
xchg
lods
sbb
cmp
nop
lcall
out
aad
loopne
push
jl
adc
push
pop
xlat
imul
sub
cmp
xchg
add
push
ja
xor
or
jne
sarb
adc
insb
pop
xchg
adc
fwait
pop
das
xchg
das
lcall
stos
xchg
sbb
cmp
xchg
mov
adc
stc
pop
cmp
mov
iret
inc
mov
rsqrtps
shll
iret
in
imul
cmp
mov
push
movsb
scas
test
aaa
and
jle
pop
out
fistpl
sub
push
dec
inc
mov
testb
out
divb
jnp
stos
pop
push
bswap
lcall
aad
and
rol
outsl
pop
adc
negb
stos
and
lock
cmp
jle
test
adc
pushf
add
out
add
test
jae
cmp
fsts
mov
pusha
clc
fs
outsb
pop
scas
imul
outsl
or
js
or
push
push
xlat
sub
loope
ret
lea
daa
cmpsl
lock
dec
sbb
pop
mov
mov
mov
mov
orb
pop
insl
or
jle
xchg
xor
js
jno
iret
sub
sub
leave
pusha
shlb
xlat
mul
aaa
mov
jo
imul
movb
dec
mov
mov
push
outsb
mov
dec
into
mov
mov
inc
push
dec
inc
ret
test
bnd
xchg
cmpb
mov
aaa
test
iret
sbb
gs
xor
push
imul
test
les
xchg
or
inc
inc
jb
mov
jmp
ja
aas
push
or
pop
fidivs
mov
out
cmp
add
sub
dec
ds
xchg
cmpb
insl
pushf
xchg
nop
adc
shl
adc
dec
femms
and
lock
cmp
ret
or
push
dec
jne
aaa
push
xchg
mov
jle
aam
imul
add
xchg
and
jns
jo
jge
push
mov
negb
and
enter
adc
lods
xor
test
sub
pop
fists
pop
mov
imul
mov
hlt
push
cmp
and
push
pop
pop
dec
push
xor
pushf
shlb
xchg
es
jnp
or
or
fwait
fwait
je
je
lock
adc
and
lods
push
push
pop
sahf
lock
ret
out
push
into
shlb
mov
out
pop
in
mov
mov
xchg
daa
in
cmpsl
rcl
push
adc
ret
fistps
mov
sbb
xor
repz
sbbl
rorl
insl
or
imul
dec
lods
sbb
arpl
mov
push
xchg
ja
inc
add
mov
push
scas
mov
push
inc
mov
gs
testb
jb
inc
push
ljmp
mov
inc
fsubrs
enter
fidivl
dec
jbe
jne
fmuls
rorb
xchg
movsb
test
dec
adc
fildl
stc
iret
inc
sbb
fwait
sub
or
push
xor
mov
add
inc
cmp
inc
xchg
xchg
cltd
mov
pop
push
sub
movsl
push
sbb
daa
xchg
xor
ret
mov
pusha
pop
push
and
jo
cwtl
ss
aam
in
notl
inc
shll
cltd
mov
jo
shl
jp
out
scas
xor
nop
push
lret
lret
loope
mov
mov
test
push
test
jecxz
adcl
scas
and
inc
dec
cmpsl
fwait
outsb
fldcw
inc
pop
rclb
fs
xor
cmpsl
je
sahf
repnz
mov
inc
cmpsb
pusha
dec
push
arpl
adc
hlt
sbb
ror
pop
mov
int
and
dec
xchg
or
xor
sbbl
or
mov
xorb
dec
flds
dec
hlt
pop
mov
in
std
cmp
test
roll
cmp
insb
sbb
or
nop
repnz
dec
mov
into
cmpsb
and
jbe
xchg
clc
cmc
lods
pop
sub
adc
sub
in
sbb
or
inc
push
xchg
rol
or
sbb
xchg
in
xchg
gs
mov
ret
push
mov
mov
lock
push
jg
mov
fs
push
scas
rorb
popa
inc
es
mov
jp
add
add
cmpb
out
ret
lcall
mov
push
sbb
cmp
inc
sbb
shll
jo
mov
in
sub
dec
inc
int3
jp
xor
xchg
fisttpl
adc
pusha
stc
sbb
out
scas
stc
ffree
jb
rcll
and
or
mov
jecxz
imul
add
or
femms
adc
jne
scas
call
dec
ss
add
pop
mov
in
push
xchg
mov
cmpsb
dec
xor
int3
inc
fcoml
call
psadbw
loop
mov
test
pop
ds
mov
ficompl
mov
fildll
popa
or
iret
cmpsl
mov
je
lret
xor
cwtl
shr
pop
orl
jbe
sarb
mov
and
pop
btl
jbe
xor
add
mov
adc
pop
mov
iret
dec
enter
mov
or
mov
mov
ja
cli
push
add
ffreep
je
inc
jecxz
mov
jnp
cmp
push
cmpsl
ljmp
mov
inc
xor
and
mov
pop
loope
push
mov
sbb
mul
xchg
stc
add
mov
sahf
and
sbb
in
pushf
ljmp
pusha
shlb
jmp
jne
leave
mov
out
inc
push
rcrb
fadds
and
jb
mov
lret
ljmp
sar
cli
jp
in
pavgb
outsl
jmp
mov
inc
je
sbb
jae
cmpsl
jl
shrd
out
ljmp
push
fisubl
repnz
adc
popa
repnz
xchg
push
test
jno
test
stos
lock
nop
loop
sub
andl
loopne
ss
fmuls
imul
xor
cmp
push
addr16
js
out
stos
mov
add
add
xchg
ja
fxch
cld
pop
mov
sbb
andb
or
push
scas
xlat
adc
dec
sub
and
sbb
in
cmp
add
stos
or
cs
add
xor
mov
sub
in
rorb
pop
cwtl
aas
jno
xchg
je
cwtl
mov
sbb
fcmovne
inc
int3
push
call
inc
js
and
ret
xorb
pop
mov
jl
out
inc
ja
or
adc
jp
stc
push
adc
arpl
lret
push
fdivrl
push
hlt
sbbb
aas
iret
mov
xchg
sbb
xchg
cmp
push
pop
or
addb
sub
cli
arpl
shlb
es
out
cwtl
mov
xchg
idivl
dec
xorb
arpl
enter
inc
inc
and
out
dec
push
adcl
jbe
mov
in
addl
jbe
fwait
pop
sub
sbb
mov
lea
jae
inc
add
sbb
xchg
xlat
push
jecxz
jns
inc
shrb
fldcw
cmp
negl
jecxz
rcrb
fwait
mov
cmc
int3
arpl
xchg
nop
movsl
lods
push
ljmp
js
and
les
pop
inc
rolb
loop
rol
push
sub
mov
jp
or
fiadds
adc
mov
mov
jno
fisttpl
into
fidivs
pop
cmp
or
lods
mov
test
push
inc
dec
push
mov
adc
mov
fcompl
repz
xchg
jg
enter
outsl
jo
push
fistps
push
mov
xor
lods
jbe
mov
add
loope
stos
jecxz
sub
ja
test
xor
mov
sub
test
push
xor
ss
cli
xchg
loopne
add
dec
ficomps
shlb
lock
push
xor
out
cmp
or
cmc
mov
paddusw
push
adc
int3
xchg
std
lds
lods
test
in
dec
sti
mov
out
jb
cmp
sbb
push
sbb
and
pop
sub
aam
lds
test
push
call
cli
jnp
lret
jae
fwait
cmp
ja
das
ljmp
pop
fisubl
cmp
jbe
mov
loop
adc
call
in
ss
add
add
outsb
imul
push
icebp
jp
pop
cld
push
test
jb
repnz
sbb
jmp
mov
pushf
out
push
js
in
repnz
and
in
push
insl
add
push
jo
pop
cmpsl
cmp
cmpsl
cmp
jbe
inc
inc
adc
or
addr16
ja
jge
and
mov
inc
mov
in
push
inc
outsb
jae
mov
jecxz
mov
sub
test
mov
cmp
mov
popa
fldl2t
orb
jne
mov
outsb
popf
sti
mov
and
cmpsl
mov
inc
xchg
icebp
cmp
add
push
ret
xchg
mov
arpl
nop
fnstcw
scas
scas
in
and
mov
cmp
push
in
fisubrs
ss
or
push
lret
sbbl
adc
lds
mov
ljmp
mov
outsl
sbb
add
je
fldl
or
int3
mov
je
aad
jo
xorb
les
jmp
ljmp
jp
xchg
mov
shl
rcll
mov
xlat
inc
adc
dec
sub
xchg
lcall
shlb
mov
push
aam
ja
mov
repz
cmp
ret
jne
leave
lahf
and
ficompl
inc
pop
jns
xchg
out
fadd
mov
or
push
sub
mov
inc
dec
mov
dec
xchg
dec
nop
mov
sub
cmp
insb
jno
scas
leave
cmp
mov
mov
jnp
mov
push
and
adc
popf
pop
insl
or
daa
cltd
mov
sbb
les
mov
jno
inc
imul
pop
xchg
xchg
xor
testb
sub
sub
mov
pusha
pop
jmp
test
orb
lahf
ljmp
add
nop
dec
pop
cmp
test
sarl
daa
jl
enter
sbb
cmc
inc
mov
push
cmp
add
lret
flds
aaa
xchg
fs
leave
xor
fnstsw
pop
sub
xchg
popa
mov
out
adc
out
push
xor
fcoms
insl
cmp
pop
popf
ds
into
je
push
in
adc
pop
std
sbbb
push
in
push
or
out
insb
rcll
cmp
mov
ljmp
lock
call
fldenv
sbb
sub
jbe
mov
mov
adc
dec
xchg
loopne
out
fnstenv
or
pop
pop
testb
jno
add
ja
hlt
jmp
ret
insl
push
loopnew
pop
rcrb
mov
mov
clc
adc
ret
pop
add
mov
lcall
addb
adc
cmp
stc
cs
cld
insl
test
jns
pusha
daa
aas
add
bound
mov
int3
fstl
shr
roll
and
mov
out
adc
and
scas
icebp
xor
rcrl
bound
add
leave
stos
push
out
cmc
dec
jno
bound
lea
leave
adc
jbe
rorb
fisttpl
aad
add
fcoms
or
ret
adcl
aam
in
fldenv
int3
imul
lahf
mov
jne
data16
xacquire
or
jns
jbe
add
data16
test
xchg
icebp
xor
das
push
jg
mov
sbbl
outsl
mov
cmpsl
push
fimull
ret
xchg
sbb
cmpsb
and
mov
sub
mov
adc
jbe
jo
jns
push
mov
sbb
int3
dec
shlb
popf
and
xchg
cmp
sbb
jl
into
lock
cmp
loop
enter
or
jne
daa
ret
cmp
xor
lods
lds
inc
mov
jl
fcompl
lea
jbe
int
enter
xchg
jle
andl
or
adc
push
nop
or
loope
push
aad
sbbl
jge
sub
xchg
mov
lods
aad
mov
lahf
jmp
dec
js
outsb
pushl
jle
dec
rcrb
ret
add
sub
enter
dec
pop
jle
popa
ftst
inc
addl
out
ljmp
test
mov
in
add
sbb
ja
mov
int
push
sub
cmp
xor
add
clc
aad
lock
push
lock
pop
jb
shl
outsb
rorl
call
xchg
sbb
mov
cli
or
adc
jb
xchg
mov
mov
xlat
sub
insl
jbe
pop
test
push
add
pushl
popa
jmp
rep
in
lea
jmp
jp
push
or
sbb
xchg
popa
sbbl
pop
ja
arpl
hlt
out
repnz
cmpsl
mov
push
pop
sub
sub
jae
mov
cltd
add
outsl
jmp
cli
sti
or
push
stos
inc
test
adc
inc
scas
and
pop
in
ficompl
int3
sarl
stos
inc
mov
inc
lcall
jbe
push
pop
lret
fdivrs
pop
in
test
ljmp
into
mov
popa
shrl
aas
mov
pop
mov
cmpsb
mov
repnz
popa
sbb
fiaddl
jo
sub
dec
push
pop
cmc
or
jno
pop
ljmp
adc
sub
fwait
inc
and
fidivrs
std
push
bound
push
cmp
imul
sbbb
adc
dec
movsl
scas
aas
sub
inc
daa
ds
mov
arpl
and
mov
cli
cmpsl
out
aas
pop
mov
mov
lret
cmpxchg8b
cwtl
inc
in
xor
xchg
adc
adc
movsl
pop
icebp
js
and
aaa
add
pop
cmpsb
pop
mov
mov
or
sahf
and
icebp
jbe
cmpsb
cltd
cltd
cld
rorl
add
cltd
jmp
aam
aad
notb
je
arpl
adcl
pop
pushf
add
and
loopne
ds
hlt
inc
xor
ror
or
lahf
fwait
adc
sbb
jnp
dec
push
mov
roll
jle
mov
divl
fwait
ret
mov
in
adc
adc
ljmp
mov
xchg
mov
xor
and
lea
insb
mov
data16
jmp
lret
out
roll
mov
pop
xor
ficompl
movsb
test
aaa
jns
in
scas
or
repz
mov
cmc
pushf
jo
int
arpl
jns
pushf
xor
test
mov
in
rolb
clc
xor
movsl
scas
repz
aam
push
sbb
int3
push
xor
cltd
jne
add
sbb
dec
pop
aas
jns
out
inc
imul
ljmp
mov
fdivrs
cmp
pop
xor
orb
js
sbb
mov
push
sub
push
into
les
loopne
cmpsl
dec
outsb
pusha
fcomi
dec
outsl
int3
iret
fwait
and
push
or
pop
push
or
loopne
int
call
enter
mov
or
mov
leave
add
lods
sbb
lods
pusha
dec
jae
divps
insb
jns
pop
sti
inc
pop
aaa
gs
dec
test
push
push
and
daa
inc
pop
xor
or
jl
lcall
test
jno
add
inc
ror
int3
std
cwtl
xchg
mov
stos
mov
dec
mov
das
scas
daa
int3
xor
fnstcw
mov
mov
mov
out
or
loop
mov
jecxz
ja
mov
adc
sub
rcrl
imul
js
dec
test
pop
lock
pushf
xlat
pusha
jne
xchg
enter
xor
int
mov
or
jno
scas
push
jp
or
mov
jns
xor
cmp
mov
insl
dec
inc
je
adc
xor
add
out
stc
mov
pop
adc
aad
rolb
pop
jle
xchg
push
test
insb
adc
mov
cmc
pop
repz
cmp
sub
sar
pop
xlat
adc
in
xchg
mov
add
rorl
leave
into
jle
dec
inc
dec
ret
jp
sbb
or
or
sub
sti
xchg
cmc
or
aas
jmp
mov
je
jge
inc
jecxz
adc
add
cmc
fwait
cmpsb
add
jl
mov
inc
cmp
inc
ret
mov
and
add
mov
mov
in
pop
sti
add
mov
and
mov
test
in
inc
cmc
xchg
cmpsl
inc
lock
cmpsb
xchg
and
push
adc
cmp
and
mov
cli
mov
mov
add
sub
popa
xchg
imul
jno
lret
mov
jae
sub
std
bound
xchg
leave
outsl
sbb
push
xor
add
xchg
cmp
je
adc
push
scas
mov
and
sub
dec
jbe
jbe
imul
xor
cmp
fildl
in
fnstsw
dec
mov
xor
fwait
jo
outsb
cld
push
lcall
dec
adc
imull
xor
adc
loope
dec
icebp
xchg
xor
mov
aas
aam
aaa
sbb
adc
mov
xchg
sub
lret
sub
sub
int
movsb
outsl
push
mov
idiv
mov
xor
loope
push
lret
cmp
xchg
add
cld
mov
movsl
loope
mov
stos
out
mov
mov
cltd
outsl
dec
mov
or
adc
popf
inc
nop
das
mov
inc
cmp
jp
outsb
movsb
iret
pop
popa
in
cltd
ss
xorps
or
mov
mov
gs
add
repnz
out
fisubrs
hlt
mov
pop
addl
pop
outsb
out
sahf
sub
ljmp
repnz
lds
cmc
xor
scas
sub
pusha
mov
lock
sub
insl
jne
ljmp
jne
outsb
xor
repnz
sub
mov
cmp
clc
xchg
rorl
andb
jno
insl
and
pusha
jle
dec
push
sti
insl
adc
es
cli
cwtl
stc
xlat
bound
mov
sbb
test
push
in
jne
add
daa
jg
pop
adc
push
fst
add
stos
xchg
mov
testl
inc
mov
jmp
ss
xor
and
mov
cmpsb
repz
xor
stc
mov
stos
mulb
or
adc
hlt
xchg
pop
mov
sbb
mov
cmp
jmp
mov
inc
or
jne
scas
insl
fisttpll
mov
outsb
lods
xchg
shl
cmpb
outsl
sub
adc
pop
mov
push
sbb
and
cmpsb
fdivrl
mov
scas
pusha
fidivrl
push
dec
inc
test
sahf
in
mov
shrl
cmp
fisubl
and
lret
rorl
faddl
mov
mov
in
jno
das
arpl
push
inc
mov
mov
xchg
pop
jno
dec
data16
or
inc
adc
psrlw
jecxz
aaa
jg
mov
int
lcall
mov
lret
ret
in
stos
inc
mov
xorl
fidivs
lret
aam
jmp
mov
addr16
xor
dec
popl
lods
xchg
adc
pop
cmp
sub
adc
scas
xchg
out
inc
xchg
inc
popa
xchg
sbb
data16
ret
jp
test
inc
les
fsubrs
push
mov
push
movsl
jecxz
jae
cmp
jmp
out
hlt
cmpsl
je
fnstenv
aas
int
push
inc
jne
cmc
lods
ficoml
loopnew
test
dec
push
mov
shlb
xchg
pop
jae
push
or
das
mov
xorl
out
popl
lahf
popf
lods
sbb
jnp
sub
jb
adc
inc
mov
or
adc
mov
jge
insb
inc
data16
in
lret
leave
mov
imul
mov
inc
adc
das
movsb
pusha
popa
xchg
jg
lea
mov
jns
dec
out
ljmp
push
sub
mov
test
mov
inc
insb
push
adc
adc
int
stc
jg
jbe
xchg
icebp
lea
popa
xor
jl
movsb
je
and
push
stos
and
inc
ss
mov
inc
scas
cs
inc
xchg
cs
jl
out
scas
not
adc
push
repnz
shll
jmp
lods
sub
fiadds
sbb
cmp
sub
inc
mov
iret
sbb
lret
jecxz
popa
pop
js
add
mov
je
add
mov
fstps
jb
icebp
jbe
jle
stos
ja
in
sbb
inc
jecxz
dec
testb
int3
cld
sbb
rorl
addr16
xchg
xchg
je
push
mov
sar
cmp
movsb
lds
roll
dec
test
test
arpl
xor
mov
adc
les
popf
lret
adc
or
xor
xchg
sbb
xlat
outsl
iret
mov
add
add
xor
pop
jnp
xchg
push
nop
xchg
jno
xchg
cmp
xor
or
int3
and
sub
jno
daa
xor
fisubrs
push
fldt
xor
pop
cmc
rclb
push
mov
cltd
mov
fsubr
aam
jb
xchg
lods
push
cmp
pop
dec
xor
out
inc
jo
jge
scas
nop
dec
loopne
cmp
repnz
mov
lret
add
mov
xor
jo
mov
mov
mov
loope
fnstenv
aad
shll
iret
inc
push
popa
and
mov
shrl
das
aam
pushf
scas
cltd
add
add
bound
jecxz
nop
scas
movsb
cltd
jb
or
aaa
push
cmp
sbb
shll
inc
repz
into
fs
jno
jmp
faddp
sub
fwait
mov
test
enter
and
pop
aas
sub
mov
decl
frstor
pop
repnz
ds
dec
sub
and
pop
inc
jno
cltd
pop
out
divl
sbb
jecxz
xor
fadds
add
fnstcw
lds
sbb
shll
scas
enter
ret
loopne
xlat
mov
shl
out
insl
cwtl
mov
test
sti
and
dec
test
leave
inc
adc
andb
iret
mov
das
fsub
dec
stos
and
data16
mov
push
lahf
inc
mov
mov
daa
xchg
fimull
jo
test
cli
mov
inc
inc
jns
daa
in
sti
in
rclb
stc
clc
ljmp
cmpsl
pop
std
mov
or
mov
js
or
jo
out
xchg
mov
jo
cmp
ljmp
sub
sub
mov
imul
not
popa
loopne
xor
xor
ja
cmp
pop
cwtl
jge
nop
fistl
or
imull
jge
mov
test
aam
pop
mov
cmova
cmp
pop
pop
pop
imull
icebp
arpl
shr
pop
mov
xchg
cltd
push
jl
in
sub
int3
push
inc
mov
sti
mov
iret
and
xchg
pop
jno,pn
and
mov
pop
lret
popf
repnz
mov
fs
in
js
inc
lds
jle
jmp
mov
jae
add
dec
ds
movsl
dec
ljmp
adc
lock
cmp
sarl
ss
push
rcll
push
push
inc
out
in
push
xor
mov
pop
push
popf
push
mov
sbb
add
aaa
imul
popf
xchg
and
call
adc
mov
rorb
iret
xchg
es
push
fs
jns
mov
les
add
mov
add
pop
in
out
or
dec
mov
rorl
mov
stos
addr16
xlat
in
mov
ret
cmp
fisubrl
enter
outsl
mov
inc
jecxz
rcl
dec
cmpsl
add
jge
lret
and
mov
fsubs
sbb
mov
mov
in
gs
push
dec
sbb
jl
outsb
pusha
dec
imul
sbb
pop
fstpt
dec
ret
fimuls
ljmp
dec
xchg
mov
xchg
ja
or
sub
xchg
push
sub
in
jbe
add
and
mov
mov
adc
das
xor
nop
push
bound
les
jle
mov
add
test
xorb
inc
pop
pop
popa
cmpsl
and
rcrl
callw
ljmp
mov
sbb
jp
mov
pop
test
je
imulb
fwait
mov
xchg
xor
ret
rorl
dec
lods
xchg
into
stos
bound
lret
cmp
cmp
stos
pop
sub
push
fsts
xchg
sbb
pop
xor
fisttpll
in
sub
push
mov
cmc
fst
mov
das
outsb
xchg
mov
rorl
lods
into
in
fisubs
out
cmpsl
push
notl
xchg
aad
fs
stos
stc
push
outsl
xchg
mov
loop
loop
aaa
int
mov
inc
lds
sbb
out
sbb
sbb
push
fistl
lock
ss
notl
xchg
scas
mov
inc
das
xchg
lret
xlat
lea
push
sbb
add
or
in
cltd
inc
jge
insl
es
lcall
and
lea
repz
add
fbstp
cmp
jmp
push
icebp
and
jp
mov
push
xchg
insl
inc
shr
cmp
insl
insl
sub
push
cmpsb
inc
mov
mov
xchg
and
test
test
pop
jo
jmp
aaa
pop
dec
push
jne
mov
jmp
aaa
mov
insb
pop
popl
adc
xchg
cmp
mov
jge
or
orl
inc
adc
inc
mov
or
insl
iret
clc
sbb
cwtl
into
cwtl
mov
scas
movsb
cmp
jne
outsl
sahf
out
sbb
fdivrl
outsl
negb
add
loop
mull
loop
push
std
jae
sbb
aam
dec
mov
rcl
fsts
cmp
sbb
cmp
mov
xchg
cltd
popf
roll
mov
movsb
enter
and
into
sti
pushf
loope
ds
sub
jb
jne
loop
mov
xchg
outsl
inc
cltd
add
out
mov
mov
xor
lcall
lret
inc
incl
mov
dec
sarl
push
jo
ljmp
leave
fcompl
mov
sbb
outsl
adc
jge
sbb
in
leave
adc
push
sbb
pop
es
xchg
mov
xchg
fwait
jno
mov
mov
mov
cmpsb
sarb
les
outsl
cwtl
adc
in
sbb
jecxz
sbb
mov
cmp
fdiv
mov
repz
ja
add
inc
xchg
xor
xor
mov
insb
movsb
mov
mov
push
repz
xor
pop
dec
inc
add
dec
es
xchg
push
xor
out
jns
xchg
jo
adc
mov
and
xchg
lods
adcb
cmc
xchg
inc
mov
movsb
push
insb
push
shlb
jo
aaa
add
fildll
mov
add
cmp
add
rcrb
cmpb
mov
pusha
inc
mov
out
clc
pop
test
and
dec
insl
leave
or
gs
xchg
js
xchg
outsb
das
dec
mov
bnd
lds
repnz
and
cli
incl
or
sub
mov
fdivs
xor
push
scas
test
mov
imul
fdivrp
cli
jge
pop
push
repnz
mov
xor
rcll
fnstcw
add
test
pop
jg
sub
adc
jmp
cmp
lea
add
mov
repnz
add
push
loope
out
addr16
mov
inc
lahf
test
andl
pop
lret
mov
rolb
sub
sub
in
jmp
ss
fisubrl
pop
dec
mov
adc
and
enter
dec
or
ret
lahf
sti
lock
ja
xchg
xor
fs
adc
push
fidivs
arpl
loop
mov
inc
lret
int
mov
into
fistl
adc
in
cmc
jg
lods
sub
mov
xchg
pop
xor
pop
lds
sub
xchg
mov
xchg
adc
adc
push
inc
test
les
in
dec
in
aam
pop
ficompl
test
jno
jae
adc
loopne
andl
push
in
xor
lock
stc
sub
xchg
loop
imul
loopne
add
shlb
add
test
cmp
loop
push
cmc
add
cli
mov
mov
fdivs
in
mov
aas
xchg
sbb
mov
pop
test
fiaddl
add
sub
inc
sti
mov
dec
inc
sub
lock
jno
xor
out
mov
cmpl
push
sub
or
push
call
out
add
or
and
push
cltd
shlb
in
bound
andnps
xor
movsb
loop
cmpl
les
mov
xchg
add
imul
fsubrs
cmp
in
add
repnz
xor
add
inc
out
pop
mov
push
inc
outsb
mov
imul
adc
scas
cs
xchg
jl
xor
pop
fmul
sbb
cmp
add
jle
adc
sub
ret
sbb
and
mov
daa
mov
fstpt
push
xor
push
mov
lods
cli
clc
addl
pop
jne
scas
ljmp
int
sub
je
push
mov
cs
push
subb
sahf
and
imull
shll
cld
mov
into
dec
iret
add
out
pop
sbbl
ja
pop
imul
push
push
rcrb
fdiv
lods
frstor
jne
sub
ret
cld
scas
icebp
mov
cs
enter
repz
icebp
lcall
jp
popf
push
arpl
in
mulb
mov
dec
cmpsl
cmp
jg
nop
lock
clc
or
add
mov
js
push
insl
pop
xchg
xchg
inc
jle
push
cmp
sub
imul
dec
xchg
arpl
fsubrs
and
enter
mov
push
sub
cmp
aaa
lea
out
scas
jmp
add
xorl
lods
sti
dec
mov
loop
clc
xchg
jnp
daa
rcr
scas
inc
push
adc
loopne
xor
add
mov
push
test
das
inc
repz
inc
sbb
mov
cltd
in
ljmp
cmc
ja
bound
leave
mov
mov
inc
jo
mov
out
dec
cmp
pop
cmp
aam
test
pop
orb
loope
dec
or
mov
lcall
pop
jo
test
cmp
cli
or
cmc
loope
add
rorb
adc
repz
repnz
adc
sbb
or
ret
lds
adc
xchg
jecxz
std
dec
std
sbb
jg
push
inc
scas
jns
push
and
pop
adc
mov
xchg
loopne
jg
fidivrs
fadds
aas
inc
enter
inc
ret
dec
bound
aas
fldcw
out
jbe
addb
xor
cmp
pop
enter
and
mov
scas
or
jmp
or
ljmp
xor
mov
sbb
ja
shrb
cs
mov
xchg
aaa
lea
xchg
xor
fldt
dec
dec
inc
inc
sbb
imul
push
sbb
out
push
xchg
xchg
jns,pt
scas
sbb
sub
test
mov
test
fisubrl
test
scas
leave
cmp
pop
add
lret
jmp
add
push
mov
stos
dec
xchg
add
je
pop
or
test
out
mov
push
mov
sbb
mov
cmp
push
and
cld
stos
xor
pop
loopne
stos
xchg
bound
xchg
fs
adc
mov
mov
stc
and
xor
subl
cmp
call
or
movsl
ror
loope
mov
mov
icebp
repz
push
aas
stos
pop
daa
out
std
add
pop
fwait
into
dec
dec
icebp
scas
jmp
bound
adcb
aad
bnd
xchg
jg
pop
xor
jmp
mov
xchg
push
xor
cmc
out
imul
push
sub
int
ds
dec
out
sub
push
enter
sub
aas
sbb
mov
es
cmp
iret
mov
rcll
pop
adc
push
test
dec
jmp
repnz
pop
loop
push
popl
xchg
shll
test
dec
mov
rclb
fisubl
fdivrl
cmp
adc
dec
push
ja
hlt
jle
cmp
loope
mov
je
jbe
push
pop
ficompl
nop
int3
cld
push
lcall
lretw
dec
inc
xor
fs
fnsave
and
fwait
rcll
dec
and
jmp
shrl
imul
loop
mov
inc
jle
cs
adc
ror
movsl
push
adc
cmp
xchg
js
bound
int3
shrl
push
pop
cmp
sbb
push
pop
stc
jnp
lock
push
cmp
shl
cmp
out
cmpsl
jmp
and
outsb
add
in
mov
mov
adc
sbb
inc
xchg
push
jmp
xor
test
cltd
sbb
faddl
xchg
push
cmc
lret
stc
adc
stos
in
cmc
adc
dec
xchg
test
bound
xchg
jmp
mov
sbb
push
ljmp
pop
shl
insb
lret
test
cmp
loopw
hlt
push
pop
cmpsb
cmp
outsl
fimuls
cli
loopne
cmp
push
cld
testb
sbb
push
rclb
push
pushf
adc
pusha
sub
mov
jp
popa
mov
leave
and
sub
xor
nop
lcall
xchg
movl
mov
shll
add
cmpsb
push
outsb
stos
shr
pop
mov
inc
xchg
mov
xor
ljmp
xor
mov
jnp
ljmp
adc
or
push
pop
imul
icebp
mov
pop
sbb
stc
jnp
mov
add
mov
loope
xor
outsl
pop
xchg
mull
sti
cs
ds
inc
aaa
stos
out
dec
jge
jno
cltd
loope
inc
sbb
mov
add
adc
mov
rcl
mov
push
or
mov
fistpl
mov
jmp
fdivl
and
insb
lret
addl
gs
fwait
aaa
es
jae
and
pop
or
add
mov
xor
jb
in
test
mov
scas
pop
cmp
or
rcrb
add
mov
outsb
push
rorb
adc
js
pop
adc
fisubrl
int
jmp
inc
jne
xor
js
sti
daa
leave
mov
mov
subb
repz
pop
xor
aas
push
mov
jo
cmc
fwait
cmpsb
mov
arpl
clc
sub
rclb
fcoms
stc
push
clc
xor
mov
adc
push
sub
cmp
loop
fs
mov
subb
notb
adc
mov
lcall
or
xabort
inc
addb
orl
add
nop
out
xor
lock
dec
int
loopne
add
nop
fcomp
mov
jp
test
outsl
dec
insb
pop
lock
lods
es
outsb
jno
movb
sub
mov
pop
adc
cs
pop
add
cld
xchg
and
les
addl
outsl
add
clc
xor
mov
lret
or
dec
lods
push
lods
xchg
negl
or
fimuls
sbb
adc
nop
add
pop
xchg
fwait
ljmp
push
std
daa
lds
aad
adc
lcall
xor
mov
push
lods
adc
xchg
inc
sub
in
cli
mov
xchg
inc
ljmp
insb
bound
mov
scas
lds
popf
cmp
push
mov
inc
jg
sbb
mov
or
jb
jecxz
pusha
lret
aaa
mov
outsl
jb
jmp
mov
jb
das
movsb
outsb
xchg
mov
dec
mov
js
mov
aam
push
jae
nop
jno
dec
out
bound
jae
out
jmp
mov
icebp
lahf
push
out
clc
jne
and
xchg
std
iret
xchg
scas
inc
loopne
and
mov
ficoms
and
fdivrl
xchg
and
outsb
inc
gs
sahf
pop
aad
mov
arpl
repz
fwait
fwait
cmp
push
lret
and
popf
clc
xchg
lock
push
lock
fstpl
sub
jno
lods
in
pop
mov
sub
out
jle
jbe
movsl
aaa
mov
dec
and
push
and
cmp
jl
mov
mov
mov
adc
jmp
xorl
pop
scas
sub
jno
pop
push
inc
hlt
dec
mov
add
imul
cmpsl
orl
cmpsl
int
and
pop
pop
test
mov
test
xchg
inc
ret
data16
xchg
sub
adc
fldt
pop
mov
aaa
stc
mov
sbbb
add
pushf
or
call
pop
shrl
imul
jge
lock
cmpsl
clc
mov
xor
jmp
cmp
aas
cmpb
int
ja
mov
dec
je
add
icebp
or
arpl
push
inc
xor
sbb
xchg
and
inc
inc
repz
movsb
push
jne
arpl
rorb
enter
leave
mov
xchg
mov
insb
scas
fwait
pushf
jno
or
sub
mov
and
mov
add
movsl
shll
insb
and
lea
pop
cmp
aas
shl
push
les
mov
jmp
pop
or
jnp
imul
pop
add
adc
int
popf
gs
mov
aaa
std
mov
mov
popa
pop
inc
lods
imul
add
mov
jl
sub
jg
mov
sub
loopne
loopne
jge
das
ret
enter
add
mov
jnp
jnp
fdivrs
loope
mov
test
push
xorl
fcompl
lret
inc
fcomps
incl
test
sub
push
lahf
or
xchg
sub
xor
and
mov
ret
mov
das
pop
insb
xchg
pop
call
jg
dec
cli
jbe
insb
leave
andps
adc
xchg
xchg
in
push
scas
sub
aaa
in
lds
int3
jno
sub
loope
cli
sub
lods
sarb
add
fs
xchg
pop
jecxz
mov
aam
or
pushf
pushf
mov
push
dec
fsubrp
int
jg
xchg
and
nop
xchg
and
imul
fs
sbb
add
xor
dec
cmp
lods
fistl
out
fs
sub
xchg
pop
mov
or
mov
mov
lcall
in
and
xchg
cmpsb
test
sbb
loop
xchg
mov
cmc
or
fs
rcrl
jmp
scas
sahf
mov
les
bound
xchg
mov
decb
push
or
shll
mov
push
jmp
pop
dec
lods
add
pop
xor
imul
sub
shrl
sub
mov
mov
add
into
insb
add
ficomps
pop
jmp
jge
pop
and
inc
and
dec
and
dec
sub
adc
loope
in
das
mov
ss
loopne
cs
pslld
mov
in
outsb
cmp
sub
jnp
fists
cs
into
test
popf
aad
jo
xacquire
pop
jmp
jbe
fnsave
loope
push
xor
and
xchg
into
lods
hlt
movsl
fsubrl
fildl
add
mov
shrb
adc
aad
and
imul
mov
sbb
mov
insb
and
mov
arpl
ffree
cmp
mov
aam
cmp
sub
xlat
shrb
add
pushf
mov
sbb
dec
sbb
arpl
fsubr
push
add
shrb
xor
mov
shlb
sub
inc
fsubrl
stc
addr16
movb
push
fimull
imul
push
inc
sbb
out
movsl
aaa
ret
icebp
pop
cmpsl
pop
enter
ljmp
cmpsb
xor
out
lret
mov
push
jne
inc
mov
lea
and
or
push
js
mov
and
nop
cmp
cmpsb
mov
sub
dec
mov
out
dec
insb
add
dec
adc
xchg
jmp
incl
inc
loopne
cmp
xor
mov
sbb
or
loope
adc
cmp
inc
test
adc
loope
sbb
mov
cmp
jne
addb
sahf
popf
pop
loop
xorl
push
jl
xor
pop
ret
arpl
sbb
sbb
sbb
dec
sbb
jp
xlat
aaa
push
sub
dec
arpl
pop
call
in
in
xchg
add
cs
mov
adc
and
stc
inc
notb
fs
jns
dec
xchg
dec
xchg
inc
test
mov
sbb
xchg
or
imul
arpl
push
or
sub
lea
iret
insb
push
sti
pusha
ja
sti
popf
je
mov
popf
ret
cltd
stos
or
sub
push
mov
ret
push
dec
lret
fldt
jecxz
mov
pop
mov
sbbb
mov
and
das
mov
xor
ret
or
jo
xchg
test
inc
ljmp
loopne
hlt
mov
and
mov
das
ret
lcall
push
sub
mov
stos
repz
jbe
scas
je
mov
add
pop
add
dec
shl
pop
aaa
das
mov
shlb
mov
daa
mov
pop
add
fmuls
xchg
shll
ret
jp
push
sti
inc
cmp
rcrb
add
mov
fidivrl
cmc
stc
in
add
enter
dec
shrb
jge
ret
stos
ret
lret
das
mov
dec
js
xchg
cwtl
add
lahf
lahf
xchg
hlt
and
mov
sub
adc
xchg
iret
sbb
mov
and
scas
cmp
cmp
clc
arpl
cwtl
or
scas
pop
faddp
shll
lods
lret
xchg
lret
jl,pn
icebp
mov
stos
push
push
jb
pop
adc
rcrl
lahf
or
sbb
in
jg
fcmovnu
sahf
and
and
mov
sbb
mov
gs
pop
mov
sarb
pusha
pop
leave
cld
call
outsb
fcomps
loop
sbb
fistl
push
fdivrl
orb
sbb
test
addb
sahf
push
stos
stos
xchg
fadd
daa
mov
test
jb
aaa
and
push
outsb
pop
lcall
int
mov
mov
test
jae
insb
jbe
stc
mov
jne
push
pop
ds
pushf
movsb
pop
adc
jae
and
out
ret
inc
xor
mov
mov
out
jmp
dec
hlt
dec
jp
sbbl
jmp
sar
cs
call
repnz
push
lret
nop
stc
gs
lea
mov
mov
roll
jno
cld
add
pop
daa
test
adc
aam
xor
ds
decb
sbb
incb
push
in
pushf
stos
out
jle
sbb
out
shll
nop
cmp
js
roll
xchg
add
sahf
xor
insb
in
scas
test
add
dec
inc
fbld
push
pop
push
pusha
mov
fmul
jo
movsl
sbb
jnp
in
sub
test
pop
call
cmp
add
cmp
outsb
aaa
cmpsl
call
push
int3
arpl
sbb
or
and
adc
adc
lahf
ljmp
sub
jbe
pmulhw
sbbl
adc
cmc
pop
cmp
in
inc
mov
push
adc
pop
sarl
shlb
dec
outsb
and
mov
das
mov
outsb
xchg
push
out
xor
lods
je
in
scas
adc
in
sbb
sbb
sub
loope
adc
idivl
test
xor
sbbb
fdivr
or
cmp
sahf
aas
sbb
xchg
movsb
xor
adcl
mov
lret
dec
mov
data16
leave
push
stos
mov
dec
in
cmp
pushf
and
bound
pop
pop
mov
cmpsl
jnp
and
inc
xchg
mov
call
xchg
jp
in
lret
jp
xchg
xor
rorl
xlat
mov
inc
and
xor
inc
mov
mov
es
dec
dec
aaa
mov
mov
fdivrs
mov
adc
gs
push
sub
push
lea
sub
adc
test
push
or
xchg
and
mov
cmc
cmp
hlt
add
loope
cltd
mov
push
xchg
int3
cmpsb
or
or
movsb
iret
jb
mov
das
stos
daa
sub
add
aaa
xchg
fadds
jns
cmp
mov
pop
xchg
pop
push
or
in
mov
sub
xchg
sbb
test
mov
imul
data16
ret
das
pop
jb
xor
fisubrs
mov
xor
xor
cltd
roll
mov
aad
pop
or
or
std
xchg
pop
cmp
mov
adc
mov
and
sbb
xor
arpl
dec
out
adc
andb
lret
in
push
lret
pusha
push
pcmpeqw
push
dec
push
cmp
xchg
xorps
push
push
insl
dec
lahf
dec
push
jbe
sti
or
shl
scas
je
cmpsb
add
arpl
inc
js
jmp
lcall
and
inc
dec
inc
pop
cld
icebp
sub
and
and
adc
sbb
sbb
sbb
daa
jmp
sub
mov
and
dec
cmp
or
idivb
add
xor
cmp
add
xchg
cmpsl
mov
popf
arpl
xchg
fmull
fldl
shl
push
sbb
ljmp
mov
loope
repz
fs
adc
fcomi
or
je
insb
mov
jnp,pt
adc
or
adc
cmp
mov
out
mov
jge
test
lock
lahf
dec
jbe
loopne
or
sub
inc
mov
mov
adc
out
mov
dec
sub
sbb
jo
dec
shl
mov
out
fstpt
mov
loopne
loopne
inc
fsubrs
or
scas
adc
imul
adc
daa
adc
out
lret
ret
aad
sti
jnp
ret
xchg
cltd
mov
mov
jo
outsb
or
pop
cld
movsb
jb
xchg
mov
mov
cmpsb
push
ret
mov
jl
sbb
xor
push
or
testb
pop
add
xorl
insb
mov
ds
or
jbe
nop
cmp
mov
inc
adc
in
push
mov
xor
dec
and
pusha
sbb
xor
sbb
sbb
adc
into
xchg
push
and
xchg
cmpsb
cld
pop
xchg
fcomp
cwtl
mov
xchg
bnd
mov
bound
jge
push
in
scas
fidivrs
ret
into
ja
pop
rcrl
lcall
out
int3
sbb
cmp
fstps
and
mov
aaa
jle
enter
push
or
mov
sti
mov
shl
stos
pusha
push
add
mov
mov
lret
adc
mov
fcoms
movsb
shrl
cwtl
sbb
rolb
sub
dec
push
mov
and
fdiv
in
int3
sbb
cmp
sbb
aas
sub
lea
pusha
sbb
shlb
iret
push
scas
movsl
sar
fstpt
add
in
sbbb
and
iret
adc
pop
adc
hlt
and
mov
mov
int
jge
inc
jno
fwait
int3
inc
cmpl
fnstsw
leave
aas
pop
shrl
cltd
mov
out
mov
add
insl
dec
lds
push
mov
lods
cs
std
mov
and
shll
xor
test
fistps
push
out
jno
fcmovb
xchg
push
mov
sbb
mov
inc
pop
lds
push
adc
push
jg
add
stos
stc
lds
in
mov
in
jp
dec
leave
faddl
or
test
lahf
shlb
pop
add
or
fidivs
jge
xor
aas
and
dec
fstps
xchg
js
fadd
call
xchg
jno
pop
jne
or
aas
aaa
les
testb
das
lea
jae
dec
push
mov
repz
fldt
dec
pop
es
push
ficoms
fwait
inc
adc
xchg
in
mov
push
inc
mov
mov
lods
enter
sbbb
outsb
out
pop
and
sub
and
pop
pop
xchg
aam
and
inc
push
jae
cmpb
sbb
push
push
insb
es
dec
adc
or
xchg
inc
mov
mov
cbtw
rcll
int
cs
pop
sub
xor
orl
push
stc
xchg
mov
mov
jno
mov
das
daa
adc
jnp
mov
xor
mov
dec
pushf
mov
loopne
fwait
nop
mov
movl
jno
mov
jb
cld
pushf
push
inc
or
jne
pusha
cmc
adc
mov
dec
lea
pop
pop
repz
lods
xor
repz
push
lahf
and
lods
outsb
in
cmpsb
lds
mov
sarb
ljmp
adc
dec
add
gs
mov
push
iret
call
insb
jle
dec
aad
jp
in
mov
sub
lcall
push
lods
popa
scas
adc
push
adc
pop
adc
jle
insl
jmp
shr
push
mov
repnz
jmp
call
fimuls
jle
sbb
mov
xchg
insl
jns
inc
push
pop
xlat
mov
or
gs
loope
add
xchg
paddsw
jae
adc
daa
jge
rep
or
testb
mov
arpl
jae
jle
and
sub
xor
insl
xchg
inc
ljmp
push
xor
push
or
shlb
ss
out
cmp
adc
arpl
jle
insl
sbb
es
test
outsl
ss
or
incb
int3
xor
rcrb
je
shlb
pop
inc
cmp
mov
mov
inc
cmp
cmp
test
popa
mov
push
push
xor
mov
scas
adc
mov
arpl
jl
pop
lods
dec
xchg
enter
ret
adcl
push
aaa
inc
imul
cld
mov
fistps
sbb
push
jbe
push
cmp
mov
xor
mov
fisttpll
iret
sbb
iret
loopne
mov
fmull
mov
inc
xlat
xchg
xor
and
mov
cld
cmp
pop
add
inc
push
pusha
jo
push
js
jecxz
and
addl
repz
imul
mov
popa
jb
xchg
mov
xor
dec
test
pop
push
push
pop
pop
sub
cwtl
jns
leave
jmp
int3
call
mov
push
xchg
sub
stos
cmpsb
cmp
test
sub
or
call
int
mov
xchg
mov
cli
adc
mov
call
daa
inc
lods
dec
mov
mov
enter
inc
inc
pop
mov
mov
ret
and
dec
adcb
mov
xor
sbb
into
and
rorb
push
cmp
and
jmp
xor
push
mov
jg
shlb
shlb
insb
cmpsl
mov
out
mov
xchg
push
idiv
out
imul
sub
popf
push
lcall
mov
push
push
sub
jge
pop
out
fwait
mov
out
fsubrl
fwait
pop
lahf
mov
psubusb
mov
adc
inc
sbb
adc
adc
jb
cmp
clc
cmp
and
cwtl
test
push
sbb
sbb
cmp
pop
jno,pn
or
aaa
or
ret
and
push
pop
push
arpl
aaa
loop
scas
jbe
jb
insl
xor
cld
add
mov
jbe
stc
lods
cmp
outsl
lcall
je
jno
icebp
xchg
cmpl
aam
ljmp
insl
enter
mov
cmp
movsb
push
popa
jmp
and
dec
out
movsl
adc
outsl
into
xor
and
test
jne
adc
xor
jae
mov
daa
fisttps
bound
pop
sti
adc
adc
inc
stos
pushf
aam
loope
add
mov
mov
ss
enter
mov
imul
jns
pop
fisubrl
popa
dec
mov
or
dec
ljmp
jne
pop
adc
jle
mov
mov
iret
rclb
aam
mov
nop
jle
inc
inc
loopne
in
shrl
sti
daa
outsl
aad
jp
fistl
pop
lds
sbb
xchg
stc
popa
je
enter
or
mov
gs
dec
mov
sbbl
xchg
jne
add
data16
sbb
fdivrs
cmpsb
dec
mov
fnstsw
or
aaa
inc
mov
xchg
sub
arpl
addb
sub
jae
add
xchg
dec
icebp
insl
out
add
out
shlb
mov
sbb
jl
vpcmpeqw
inc
adc
test
add
dec
or
mov
dec
repz
cmp
cmp
jno
sub
cmp
dec
imul
in
pop
cs
stc
rcrl
in
shr
sahf
lods
roll
xchg
ja
pop
sbb
xor
outsb
adc
inc
add
pop
sbb
push
stos
mov
push
inc
clc
and
ficoms
loopne
fucomip
fsubrs
add
shlb
mov
add
adc
das
cmp
inc
inc
xchg
pop
xor
mov
fdivp
stos
stc
mov
adc
aad
out
js
lcall
dec
adc
es
lcall
inc
jo,pn
or
xor
ds
lods
push
aam
jmp
xchg
mov
scas
fildll
xor
mov
pop
cmp
movsb
bound
sub
leave
adc
outsl
les
aad
pusha
test
scas
stc
in
fs
mov
xor
jg
mov
adc
ret
sub
fdivrs
subb
das
mov
bound
fmulp
jp
outsb
mov
jp
into
xor
sbb
shl
jl
jns
outsb
or
jmp
in
dec
inc
jge
mov
or
inc
rcrl
inc
xor
cmpsb
jl
inc
stc
cmpsl
mov
mov
dec
inc
js
or
mov
jb
sub
leave
pushl
xor
cwtl
lock
mov
adc
hlt
mov
das
inc
test
cld
xorw
xchg
icebp
jecxz
stos
loop
and
mov
aad
scas
icebp
fstpl
xchg
sbbb
stc
orb
mov
cmp
mov
popf
loop
mov
aaa
inc
in
xchg
sub
stos
mov
push
or
shlb
mov
pop
mov
adc
sbb
mov
fidivrl
jo
sbb
push
pop
pusha
lds
test
push
rolb
xor
jecxz
incb
mov
lods
fnsave
pop
and
dec
lock
jne
movsl
sahf
jae
fwait
mov
jbe
push
jo
xor
sbb
xchg
mov
imul
inc
imul
in
pusha
xlat
jnp
mov
fidivl
mov
rcrl
add
xor
jmp
ret
ret
sbb
movsl
and
cld
and
insb
xchg
and
cli
push
sub
lret
pop
push
addl
adc
in
call
cmp
ja
out
jb
xor
ljmp
aam
add
mul
mov
lret
jg
inc
jmp
ror
mov
ss
mov
movsb
mov
cli
std
mov
xor
stos
stos
pop
cmpsl
lea
xchg
push
add
sub
les
fiaddl
cld
mov
pusha
xlat
or
clc
addl
jg
and
jno
mov
or
arpl
xor
mov
push
sub
ret
pop
iret
add
out
push
sti
pop
cmp
push
leave
rclb
outsl
cmp
insl
cmp
cmp
sbb
test
cmp
dec
xchg
pop
jne
lretw
pop
xlat
fmull
add
sub
lds
mov
xchg
jg
sbb
push
in
push
jo
add
out
adc
mov
mov
in
or
repz
outsl
inc
inc
aaa
jecxz
insl
inc
mov
out
mov
dec
push
add
cmc
or
out
fisubl
pop
sub
or
call
das
mov
xor
mov
and
inc
inc
sbb
lret
ret
sbb
mov
popf
cmp
sbb
cld
dec
xchg
inc
daa
subb
call
adc
xor
shl
or
add
cmp
push
das
cs
mov
jmp
ja
xor
mov
and
imul
mov
hlt
xchg
mov
dec
dec
les
mov
jo
jns
cltd
out
fistl
fnsave
aam
lds
fsubrs
mov
mov
mov
dec
sbb
scas
inc
jp
mov
mov
jmp
adc
push
or
mov
mov
into
insb
lahf
andb
adc
pop
int
out
iret
outsl
cmp
fidivs
and
adc
stos
in
testb
mov
xor
or
sbb
add
aaa
and
or
pop
and
rol
adc
ja
rcrl
fwait
mov
cmp
popf
sti
leave
imul
adc
push
stos
movsl
mov
dec
or
add
push
fwait
es
jle
xor
jge
shl
jbe
mov
lock
pushw
inc
mov
jmp
mov
xchg
adc
ret
mov
push
negl
pop
xchg
je
lret
cmp
sbb
jge
inc
inc
jecxz
inc
sbb
sarl
mov
std
add
repz
push
ret
sub
push
cmp
into
lock
cmp
sbb
xchg
mov
das
out
gs
or
and
jns
loop
sbb
xchg
mov
js
xor
popa
xor
dec
outsl
or
inc
out
jle
push
mov
inc
jecxz
sbb
mov
xchg
out
sahf
addr16
mov
addr16
mov
popa
lret
clc
fcmovu
movsb
in
sub
mov
dec
push
cmovg
fdivs
push
pop
and
jmp
aam
sub
pop
xor
dec
lret
sbb
jl
xchg
and
xchg
and
mov
jo
adc
bound
fbld
jecxz
lret
call
js
cld
cs
xlat
insb
call
jne
outsl
push
xor
mov
or
xor
inc
loop
mov
rclb
dec
xchg
lea
sub
mov
sub
out
mov
jg
mov
xchg
sarl
loop
sub
sarl
jl
inc
fnstcw
mov
ror
mov
in
mov
cmp
pop
rol
xchg
movsl
cmp
std
fwait
nop
push
push
xchg
dec
leave
xchg
inc
sub
xor
pop
jae
xor
cmp
data16
add
fstpl
inc
pop
pop
mov
mov
dec
mov
test
dec
xchg
dec
idivb
jmp
inc
aas
shrb
pop
add
jp
mov
fwait
cltd
cwtl
pop
inc
mov
fadd
add
nopl
add
mov
sub
cmp
popf
fdivp
pop
outsb
test
dec
imul
lret
loope
mov
xor
movmskps
mov
clc
jno
push
popf
xor
scas
mov
lret
mov
add
in
out
sub
rep
or
add
loopne
push
push
scas
dec
inc
push
pop
xor
scas
dec
rol
andl
jbe
push
dec
movl
push
xchg
ret
in
sbb
mov
daa
mov
sbb
cli
out
xchg
outsl
dec
iret
sti
jmp
sbb
push
lea
cmp
je
cmc
movsb
xor
dec
push
iret
dec
into
adc
mov
lahf
sub
jecxz
lret
xor
or
aad
rolb
jg
mov
pop
pop
test
imul
movsb
out
cmp
hlt
arpl
xor
sbbl
adc
mov
in
ljmp
das
repz
in
stos
or
sbb
xchg
movsl
sbb
clc
push
inc
add
aas
in
add
div
mov
xor
xor
mov
decl
jecxz
sub
arpl
inc
push
js
add
mov
cwtl
sub
out
insl
push
jp
pop
and
push
and
mov
nop
adcl
enter
sti
mov
or
xchg
lret
arpl
xchg
scas
orb
loop
ret
mov
xlat
cli
test
testb
cs
sbb
out
aas
pop
mov
shl
inc
mov
jbe
in
out
sbb
dec
dec
push
mov
dec
cmp
inc
mov
and
sub
push
sahf
or
sbb
mov
dec
xchg
cmpsb
icebp
loop
add
out
subb
lock
shl
clc
add
fisttpll
pop
clc
xor
in
lret
imul
ds
jae
mov
dec
mov
add
mov
fldcw
add
xor
jbe
gs
or
xor
adc
xchg
cld
push
movsb
adc
mov
mov
pop
pusha
into
jle
cld
lret
fisubl
daa
cmp
push
std
and
movsl
jo
mov
sbb
cmp
mov
push
fwait
xchg
cmp
add
jecxz
lret
lods
push
mov
out
rcr
xchg
sbb
add
lahf
fildl
loope
vpexpandq
movsb
fsts
ret
cmc
call
std
jb
inc
pushf
loope
mov
fsubp
pop
mov
push
mov
enter
cmpsb
push
mov
outsb
ficoms
decb
fcom
pop
inc
das
dec
lret
leave
cmp
cmc
and
adc
xchg
mov
daa
leave
mov
mov
inc
iret
mov
lret
cld
push
clc
cmp
addr16
aas
mov
push
jns
xchg
stos
divl
pop
stc
pop
rcll
jg
outsl
add
pop
adc
mov
pop
mov
xor
rcrl
adc
imul
jmp
fsubr
cmc
adcb
xor
nop
sarl
iret
cwtl
ljmp
inc
fimull
mov
push
fwait
mov
rcrl
jge
jmp
test
mov
fs
or
dec
jbe
mov
jnp
fs
mov
mov
xchg
cli
push
xchg
cwtl
xchg
push
push
jmp
push
in
or
shlb
mov
push
jle
int
setl
rcll
adc
mov
jbe
loopne
dec
call
and
mov
sbb
arpl
xchg
jo
dec
mov
in
sbb
cmpsl
sbb
test
sub
mov
xor
mov
push
jl
insb
sub
adc
rdpmc
push
mov
test
aam
dec
imul
out
dec
cs
mov
lret
inc
pop
jle
repz
jno
xchg
push
stos
rolb
idivl
pushl
scas
sbb
fsts
cli
ds
cmp
cmp
pushf
out
das
add
mov
xchg
cwtl
push
mov
jnp
xchg
mov
or
xor
sub
lea
andb
popa
std
add
jno
inc
xor
out
into
dec
jae
mov
sbb
scas
scas
outsb
lahf
aaa
xchg
movsb
sbb
int
sahf
mov
fwait
mov
cmp
fnsetpm(287
xchg
aam
decl
insl
dec
lods
stos
in
cmp
mov
cltd
sub
pop
enter
sahf
popf
push
mov
and
sahf
sarl
cmp
psrad
dec
popf
sahf
dec
clc
loopne
push
xchg
cmpsl
lret
outsb
lods
bound
ficomps
mov
pushf
cmpsb
adc
dec
push
nop
mov
movsl
fiadds
out
lock
mov
pop
push
mov
mov
mov
neg
stc
and
inc
roll
outsl
xchg
inc
or
fisttps
push
xor
mov
or
sub
push
sub
xchg
xchg
xchg
push
xchg
aaa
mov
sbb
lret
xchg
xchg
das
mov
testl
sbb
lret
xchg
into
movsl
mov
lods
inc
cmp
mov
add
bound
lahf
roll
inc
into
mov
int
pop
divl
inc
sub
and
cmpl
pop
dec
aad
xor
cmp
fldcw
mov
lea
shlb
inc
rcll
mov
stc
mov
jns
into
push
xchg
push
int
dec
or
or
or
jae
testb
mov
mov
loope
mov
mov
cli
adc
push
xchg
jg
jle
cmpsb
jmp
fildll
lock
xor
scas
loop
sahf
add
push
xor
xor
xchg
sub
xor
push
sbb
mov
xchg
inc
mov
inc
adc
repnz
idivb
jo,pt
je
add
outsl
inc
cli
std
and
cmp
std
daa
dec
push
stos
loope
push
call
and
lea
jb
add
and
test
in
sub
aad
cmp
aas
dec
dec
andb
js
pop
pop
in
xor
mov
add
repnz
dec
pop
mov
fcomip
pop
loope
jno
mov
sbb
xor
cltd
mov
mov
data16
add
pusha
pop
jg
cmp
sub
fisttpll
sahf
ror
sahf
dec
in
or
dec
dec
inc
lods
test
fistps
cmpl
xor
shlb
js
inc
je
dec
mov
xchg
cmpsl
repnz
loop,pn
int3
lcall
jecxz
lods
int
fcomps
ret
inc
xlat
sahf
ficoms
sbb
add
sub
test
sub
push
fdecstp
loope
adc
loopne
pslld
adc
int3
xchg
aam
clc
push
std
lods
inc
adc
std
int
and
xchg
adc
pop
fnstenv
jne
cmc
lods
sub
mov
lret
pushf
mov
push
mov
sub
clc
loope
out
mov
add
cmp
loopne
dec
loop
out
sbb
mov
imul
daa
ficomps
xor
cwtl
aad
mov
sub
les
lods
pop
xchg
mov
xor
pop
sbb
mov
jb
and
add
cld
push
xor
out
enter
xor
mov
stos
lret
xchg
dec
cltd
adc
pusha
adc
or
cmp
sbb
mov
push
sbb
pop
add
andl
rclb
fxch
popa
lahf
sahf
pop
xchg
xchg
lods
adc
pop
movsl
jns
and
std
fcoml
sbbl
xor
repnz
imul
jmp
pop
sub
push
scas
sti
mov
dec
test
cmpsl
jmp
call
push
loop
dec
std
frstor
es
in
push
mov
hlt
jmp
dec
mov
mov
movsl
test
and
scas
scas
je
add
push
inc
sbb
sarl
push
xor
or
inc
cmp
push
mov
xor
mov
push
lahf
fldt
hlt
jo
jne
repz
mov
lea
add
cli
add
in
push
fcomps
push
aam
dec
int
lock
add
dec
ss
ljmp
push
cmpl
pop
xlat
jge
inc
aas
fidivrl
test
cmpb
hlt
lcall
out
sub
sub
pushl
imul
or
loopne
and
xchg
and
or
imul
les
out
mov
jmp
pop
mov
or
sbb
pop
outsl
push
scas
dec
push
jg
pop
imul
xchg
cmp
pusha
jg
mov
pop
lret
cmp
and
adc
push
out
adc
hlt
jecxz
push
adc
loope
idiv
cmpsl
arpl
repnz
xchg
mov
push
cmp
ficompl
outsl
xchg
pop
test
imull
adc
test
jns
adc
data16
and
iret
or
push
or
loop
or
jns
xor
and
xchg
in
bound
pop
clc
lds
or
dec
mov
mov
mov
push
xchg
pop
aas
xlat
fidivrs
dec
popf
xor
xchg
inc
sbb
sbb
push
sbb
sub
cmpl
adc
jmp
addr16
jo
adc
sub
sbb
in
mov
jge
xchg
jle
pop
aaa
in
pop
mov
xlat
mov
cmp
out
subb
movsl
cmp
cmp
xchg
dec
int
or
stos
loopne
and
jecxz
xchg
ja
jp
mov
lock
mov
push
das
pop
shl
ja
sahf
jmp
add
aam
pop
pusha
pop
rcl
push
mov
sti
push
dec
mov
iret
push
jbe
pop
negl
cmc
jl
repnz
mov
dec
mov
xlat
ds
loopne
xchg
push
push
out
xchg
mov
push
lahf
xchg
mov
xor
pop
sbb
mov
addl
gs
mov
xchg
shl
pop
pop
mov
cmp
pop
and
stos
mov
pushf
jp
sarb
andps
push
js
add
gs
jp
not
add
mov
adc
or
mov
and
inc
popa
fldcw
test
mov
clc
sub
pusha
xchg
sbb
adcb
jp
or
insl
sbb
lret
jl
imul
cmp
test
or
cwtl
cmp
in
lret
jb
imul
stos
mov
fucomip
mov
push
out
push
sub
lods
inc
lahf
adc
jne
cmp
into
mov
jb
add
ret
lahf
and
push
shrb
push
push
pushf
pop
cs
push
cld
push
sbb
mov
dec
in
pop
jp
ljmp
or
or
incl
mov
mov
sbb
xchg
push
jnp
mov
or
rorl
das
xor
fwait
push
and
inc
aas
enter
adc
shll
or
adc
movb
xchg
aas
std
scas
insb
int3
pop
repnz
dec
mov
mov
jns
sub
cmp
xchg
jne
sbb
hlt
icebp
outsb
movsb
and
bound
fwait
and
mov
xchg
cmp
mov
inc
and
js
pop
scas
idivb
js
xchg
test
xor
xor
mov
imul
aaa
sahf
jns
dec
pushf
mov
jno
daa
sbb
int3
ret
scas
insb
fisttpl
pop
pop
xchg
nop
shlw
int3
sbb
pop
insb
mov
adcl
jae
mov
sbb
insl
jmp
pop
aam
mov
mov
es
mov
and
mov
test
icebp
out
jp
add
jmp
pusha
popa
xor
xor
mov
and
mov
out
pop
test
push
std
mov
lret
shlb
iret
aas
jle
jmp
jmp
fidivrs
push
dec
jl
rcll
xchg
mov
push
cmpsl
adc
fbstp
xchg
xchg
or
push
add
sarl
sbb
decl
push
pop
push
cmp
in
out
insb
jne
adc
ret
cmpsl
leave
mov
sbb
ljmp
pop
dec
cmp
stc
fdivrs
mov
and
lcallw
in
fildl
inc
aas
aad
pusha
test
dec
fs
out
jbe
int
out
out
xchg
mov
cltd
ret
jecxz
mov
mov
data16
clc
ficompl
lea
adc
cmp
test
nop
sahf
or
movl
fwait
add
inc
jecxz
add
xor
sbb
jle
sahf
fsubrs
out
sub
stc
clc
add
ret
loope
sti
cmc
sub
xchg
loopne
fiaddl
mov
mov
pop
mov
es
fcmovnb
mov
ficomps
je
ss
add
lret
dec
xor
xor
fldt
lods
lahf
and
out
aas
into
push
cmp
ljmp
jo
rorb
lea
imul
lret
and
fistl
or
lea
cmpsl
jae
arpl
cmpb
add
mov
cmp
ficoms
mov
cltd
fcoml
cmp
pop
shl
jl
stos
adc
scas
lcall
fildll
insl
jnp
cld
ds
mov
addr16
pop
xchg
insb
aad
lods
adc
out
aam
cmp
fisubl
jmp
mov
sub
in
push
shrl
pop
inc
and
aam
gs
cmp
mov
mov
mov
pop
loop
sub
icebp
test
stos
mov
repz
arpl
sub
mov
xor
in
data16
mov
shl
pop
das
mov
jl
mov
inc
into
into
mov
test
jns
insb
addr16
mov
out
cmp
shl
call
int3
inc
mov
sbb
xchg
fucomi
hlt
aaa
cmp
fisubl
push
inc
les
addb
nop
xchg
sbb
mov
or
call
xchg
dec
enter
push
pop
dec
mov
dec
inc
js
scas
sub
cld
push
dec
shll
jmp
ret
mov
push
dec
jbe
xchg
inc
push
das
push
jp
lods
mov
pusha
adc
in
addr16
icebp
pop
push
push
movsl
mov
push
push
pop
nop
jp
les
pop
sub
and
repnz
scas
mov
enter
inc
jmp
cmp
shll
rcrb
adc
mov
shl
sbb
sub
pop
cmpb
jp
cmpsl
inc
sbb
sub
scas
out
jp
inc
scas
sahf
jnp
mov
lock
mov
cltd
mov
les
fs
jmp
pop
in
sbb
push
mov
mov
push
es
fbstp
xor
ljmp
mov
loop
push
cmpsl
sahf
or
call
jns
jecxz
jmp
dec
pop
fildl
lahf
leave
cmp
clc
or
in
sbb
push
add
movsb
mov
in
xor
inc
shll
jb
add
scas
or
xchg
leave
push
xor
test
inc
enter
mov
or
dec
insb
sti
xchg
insb
sti
and
sbb
inc
inc
and
test
cmp
push
pushf
enter
sub
jne
in
out
cld
inc
lods
jmp
jb
cwtl
in
mov
aas
sub
rcll
cltd
mov
mov
vmovq
pushw
cmc
lds
in
scas
cmp
adc
lock
out
pop
sub
or
das
das
or
ljmp
sbb
xchg
bound
ficoms
pop
call
sbb
jmp
xchg
jno
jecxz
movb
fcompl
es
ss
leave
add
stos
fcomp
inc
out
pop
add
call
sub
sbb
call
xor
icebp
and
stc
bound
je
mov
sub
adc
nop
push
adc
dec
inc
nop
adc
sarl
inc
mov
lea
ret
jno
sti
or
into
cmp
mov
mov
int3
dec
or
lea
xchg
pop
inc
es
lret
inc
lret
pop
inc
stc
or
adc
mov
fwait
test
cmp
inc
out
in
lcall
and
cmp
pop
sar
sbb
add
aas
mov
mov
jnp
push
mov
clc
adc
out
cwtl
aad
outsb
scas
je
js
es
shrb
pop
push
and
sbb
mov
mov
jo
loop
push
nop
jg
stc
stc
sbb
xchg
insb
add
pop
daa
mov
push
sbb
xchg
fwait
adc
inc
xor
fisttpll
inc
mov
sti
testl
cltd
pop
clc
flds
cmc
fidivl
incl
imul
fs
negb
dec
push
fimull
pop
cmp
cmp
cmp
hlt
pop
popa
in
jne
dec
xchg
inc
sub
add
int
data16
daa
inc
shrl
mov
xchg
repnz
jp
dec
test
incl
jmp
jl
arpl
adc
lea
or
or
jne
and
scas
ret
xchg
lods
jecxz
or
iret
cli
xorb
jp
xor
inc
xor
adc
les
insb
aaa
xor
mov
jle
fadds
cmp
cli
cmpl
cmpl
xor
sub
aad
lds
mov
dec
out
dec
imul
sahf
xor
subb
js
cmp
inc
movb
int3
add
jae
adc
push
sbb
ja
sarb
int3
push
push
xor
dec
add
stos
adc
push
les
fisubrs
iret
repnz
xlat
outsb
xchg
xchg
push
out
or
outsb
lahf
fsubs
xchg
shufps
push
push
sub
ja
aam
dec
bound
or
lcall
lds
pop
and
mov
xor
lds
mov
in
stc
mov
mov
sarb
or
loope
rorl
push
bound
scas
sub
sub
sub
add
push
movsl
test
fldt
add
andl
aaa
jne
dec
jg
mov
test
cmp
out
std
addl
repz
aas
sbb
loope
jge
leave
jg
pushl
inc
jb
daa
cld
add
mov
mov
adc
mov
sbb
cld
inc
push
pop
insb
push
mov
inc
aad
mov
js
inc
jno
fidivrs
or
fisubs
push
sub
rol
xor
jmp
push
sub
das
or
mov
int3
je
iret
inc
mov
out
cmp
cmp
mov
gs
repz
xchg
cli
sub
int3
in
fldcw
fs
lea
fstpt
test
das
add
sub
lahf
sbb
adc
sahf
movb
in
popa
pop
mov
ljmp
push
jns
sbb
mov
pop
jne
aam
pop
ja
psadbw
imul
sbbl
mov
or
loopne
aas
push
rorb
jns
pop
mov
xor
push
pop
dec
popa
or
test
xchg
add
cmp
sbb
icebp
mov
jge
repnz
pop
outsl
out
dec
or
pop
mov
lds
pushf
inc
test
dec
jge
mov
mov
ret
pop
popa
xor
dec
xchg
push
sbb
out
js
push
adc
inc
xchg
mov
xchg
jae
and
adc
dec
mov
fdivl
and
rol
push
pushf
addl
mov
dec
in
dec
xchg
and
ret
pop
jle
pop
add
mov
jmp
insb
dec
xchg
adc
mov
add
or
aad
ja
popa
mov
pop
dec
jp
leave
and
push
lea
cmp
popf
gs
adc
mov
mov
xchg
mov
out
jnp
adc
imul
mov
jae
stc
shlb
gs
push
push
arpl
push
sub
sbb
jge
stos
loope
movsl
or
lahf
aad
pop
lcall
dec
adc
xlat
xadd
mov
adc
std
popa
movsl
dec
lahf
cmp
loop
les
mov
xchg
sbb
and
inc
test
fdivl
pop
jl
outsl
adc
scas
cmp
add
popf
push
lcall
inc
jns
test
orb
fstps
mov
mov
aam
in
inc
xorl
jae
loopne
mov
int
das
jge
push
mov
and
xlat
adc
or
rclb
dec
aaa
in
push
and
adc
jne
and
js
or
int3
nop
inc
mov
pop
pop
cld
iret
clc
incb
push
sub
div
fldenv
xchg
stos
and
xor
xchg
xchg
out
cmp
lds
out
adc
mov
mov
xlat
dec
sub
xorb
rcr
gs
dec
out
xchg
test
test
hlt
pop
or
xchg
jmp
jnp
push
addl
dec
mov
inc
mov
mov
or
or
xchg
dec
pop
je
aaa
pop
cli
jae
mov
jnp
ja
add
and
or
adc
push
cmp
test
fdiv
cmpsl
cmp
sar
xchg
mov
jne
push
and
cmp
test
xchg
pop
ljmp
inc
dec
lea
sbb
ret
addr16
pop
lea
and
repz
sbb
aaa
push
movsb
pop
aaa
loope
mov
sbb
add
xchg
out
ljmp
js
dec
adc
mov
jle
fsubrl
adc
dec
pop
sbb
rol
push
lahf
fsub
xor
dec
push
and
adc
aam
lds
arpl
loope
add
iret
xchg
mov
inc
mov
dec
les
push
pop
inc
jne
add
or
adc
outsl
aas
pushf
test
push
push
cmp
push
inc
mov
fildll
stos
mov
arpl
lahf
cmp
cmpl
loope
add
cmpsb
cltd
or
shrl
push
jo
push
fnsave
jle
rolb
jnp
insb
ret
xlat
pop
fdivrs
inc
jo
into
mov
vandnps
push
mov
bound
sub
mov
jecxz
das
stc
in
hlt
loop
mov
ljmp
stos
dec
aad
push
in
inc
inc
sub
jne
insl
loop
mov
push
dec
add
push
adc
xchg
mov
les
mov
ja
movsb
repnz
repnz
loopne
nop
gs
sti
stos
mov
sbb
cli
das
in
test
loopne
cmp
inc
inc
xor
fwait
movsl
clc
push
rcrb
movsl
outsl
test
mov
dec
loopne
adc
stos
mov
scas
mov
mov
into
stc
add
sub
dec
or
or
jle
in
pop
pop
sbb
and
sub
js
add
sbb
str
or
and
mov
icebp
sub
and
shlb
cwtl
cmp
icebp
mov
and
xor
mov
adc
push
adc
dec
cmc
mov
jbe
pop
jne
out
jnp
cmpl
and
push
adc
jae
sub
insb
lods
sbb
faddl
aas
shlb
mov
cmp
ds
loope
aaa
inc
xchg
dec
std
loop
push
aad
dec
and
out
rcll
popa
mov
sub
inc
mov
int
gs
or
test
sub
movl
adc
push
cs
lahf
into
sub
into
or
jp
jecxz
nop
and
cmp
push
sbb
aaa
dec
pop
sub
push
cmc
orl
bnd
test
out
enter
adc
xchg
mov
jno
cmp
lret
and
xchg
pop
inc
fcmovb
cltd
dec
loop
mov
xor
xor
pop
cwtl
mov
adc
mov
inc
fidivs
xchg
cmp
pop
dec
in
mov
and
mov
imul
inc
mov
cmc
jl
stc
ljmp
pop
mov
test
and
jb
enter
rorb
push
sub
ljmp
es
lcall
addl
stc
ret
pop
js
leave
out
pop
loopne
lea
std
test
and
daa
pushf
cmpb
out
popf
mov
mov
and
cltd
add
sub
and
outsl
lret
nop
add
pop
xor
push
mov
sub
es
add
pop
mov
xor
sahf
adc
mov
cli
mov
dec
aam
fwait
int
or
sub
popf
fstps
pop
mov
pop
bound
xor
std
sbb
or
cmp
popa
stos
mov
xchg
mov
mov
cmp
cmp
leave
xor
int
fwait
es
dec
and
adc
mov
jno
imul
hlt
movsb
les
stos
add
imul
dec
outsb
popf
and
xor
fwait
mov
out
and
les
pushf
xor
filds
cmp
mov
fld
add
loopne
sahf
jb
xchg
rcr
stc
in
inc
jne
sarl
fwait
or
lcall
mov
and
sub
xlat
or
cmc
ss
mov
cld
popa
loopne
mov
xchg
ret
add
mov
push
cmp
push
test
sbb
mov
mov
cli
push
cmpsb
jae
and
out
ljmp
jnp
dec
mov
mov
stc
aas
pop
jne
jb
bound
repnz
cmp
sahf
adc
iret
loopne
gs
cli
hlt
mov
dec
mov
push
lock
xchg
sti
bound
pop
sbb
js
dec
adc
mov
inc
mov
sbb
dec
scas
lahf
mov
sbb
adc
add
cltd
test
bound
fnop
inc
orl
xchg
fwait
xchg
insl
out
rcrb
jecxz
andl
cld
inc
jno
in
iret
xor
dec
test
sub
popa
sbbl
es
dec
js
stos
mov
push
sub
rcrb
pop
aas
mov
push
push
jle
cmp
pop
stc
dec
shrl
xor
sub
sbb
cmp
pop
inc
or
xchg
repz
xchg
lock
or
ss
imul
sub
mov
adc
sub
in
movl
inc
xchg
movsl
cmpsl
adc
fwait
cmpsb
lahf
pop
push
cmpsb
jno
cmp
data16
inc
inc
fdivl
jg
push
stc
cli
clc
outsb
imulb
lds
loope
jns
sbb
xchg
lock
add
cs
push
lcall
fcmove
xchg
dec
xor
push
add
add
inc
xor
jg
insl
mov
and
fsubrl
cmp
bound
repnz
out
lock
mov
fisubrs
xchg
popf
movmskps
in
orl
inc
mov
dec
lcall
les
mov
cmp
int3
cmc
and
sbbl
pop
mov
or
sbb
or
outsl
xorl
and
adc
xchg
add
cwtl
lock
daa
push
aaa
popa
add
aaa
xchg
pop
repz
sub
in
sbb
out
push
insl
repz
js
sub
mov
mov
pop
jge
loope
and
push
and
dec
adc
xor
jp
adc
dec
repz
adc
fiadds
adc
imul
ljmp
dec
lock
les
cmp
leave
jae
fsub
fcmovne
fldt
dec
jnp
fmul
xchg
xchg
addr16
mov
imul
das
fbstp
pop
pop
cmc
sub
adc
in
daa
in
jns
mov
arpl
pop
mov
xor
jne
sub
mov
mov
je
mov
mov
notl
stos
pop
arpl
int3
xor
dec
pop
fsubr
jbe
daa
jbe
mov
xchg
push
xchg
jecxz
les
xchg
pcmpgtd
or
sbb
dec
outsb
inc
bound
mulb
mov
pop
sti
mov
stos
adc
in
out
mov
imul
sbb
cs
addr16
inc
ljmp
orb
sub
add
jmp
xlat
xchg
jnp
inc
out
and
adc
mov
push
pop
cmp
xor
mov
mov
push
popa
mov
mov
stos
icebp
jno
cmp
add
dec
cld
add
and
jmp
xor
stos
and
outsb
cmp
stos
sbb
pusha
mov
cs
insb
rorl
jb
inc
dec
psadbw
arpl
sub
jns
nop
mov
bound
cwtl
pop
aam
sub
out
mov
push
lahf
enter
mov
dec
ret
xor
arpl
cmpsb
sbb
sar
pusha
push
cmp
jo
lea
xchg
push
push
dec
fadds
mov
jle
sarb
push
cmp
xor
clc
dec
shr
daa
sbb
jno
test
mul
je
cmpsl
inc
stos
cmpsb
mov
xchg
dec
inc
xchg
lcall
sbbb
out
out
jge
fstpl
xchg
cmp
lods
mov
sub
sub
mov
and
inc
push
mov
mov
add
mov
mov
adc
outsb
push
sub
cmp
dec
in
or
sub
outsl
or
pop
sbb
mov
and
xor
push
ljmp
arpl
xor
lret
xor
ds
repz
mov
and
sarb
shl
movsl
addl
push
jae
cmp
les
jb
mov
out
xchg
rcr
mov
por
insl
lock
inc
lcall
cli
xor
mov
adc
loope
das
loop
sarl
out
hlt
mov
sbb
push
test
outsl
inc
jae
ret
inc
sub
pop
inc
out
insb
ja
inc
xchg
fwait
push
sub
lret
jmp
popa
inc
jnp
dec
push
shl
ficompl
jne
mov
push
fidivs
ret
cmp
pop
scas
std
cmp
sub
mov
lahf
scas
xchg
and
and
xchg
lock
ja
jne
sahf
push
jp
fsub
xchg
ret
mov
pop
sbb
leave
jl
mov
jmp
stos
fldpi
imul
sbb
sub
ljmp
cmp
cmp
jb
cmp
sbb
loop
jae
lods
shrl
dec
insl
add
sub
aam
sbb
mov
mov
add
aas
lret
loop
add
add
mov
clc
outsl
imul
or
cmp
adc
pop
xor
sbb
out
mov
mov
mov
std
aad
pop
rcr
mov
pop
pop
adc
sub
mov
mulb
xchg
xchg
into
mov
mov
stos
ds
stos
or
bound
sub
or
add
ljmp
cmp
addl
popl
sbb
imul
mov
adc
jmp
push
push
mov
add
cwtl
xchg
stos
adc
cwtl
pop
pop
jns
inc
sub
mov
pop
jl
sub
inc
sub
mov
daa
imull
out
push
imul
xor
cld
cmp
sub
mov
pop
jle
inc
jle
mov
pushw
mov
shlb
pop
test
xor
leave
ljmp
mov
add
aaa
push
sub
in
or
adc
ficompl
fstps
jns
push
insb
or
fsubr
sbb
push
dec
adc
cwtl
loope
ficoms
cmp
pop
add
add
or
cmp
pusha
hlt
es
xor
test
aad
or
arpl
ljmp
fbstp
mov
xchg
loop
iret
jno
dec
or
je
outsb
ret
ljmp
push
shll
jp
cmp
inc
push
jne
jo
sti
mov
idivb
inc
sbb
and
aam
inc
add
rcl
stc
inc
loope
mov
in
insl
inc
enter
xchg
adc
push
sbb
sub
pop
dec
ds
pop
and
fisubrl
addr16
dec
out
rcl
add
movsl
pop
lods
inc
mov
cmpsb
inc
imul
mov
push
insb
mov
movsb
xor
cwtl
jmp
and
mov
je
test
xor
cmp
pop
or
aam
scas
mov
mov
cmpl
and
in
stos
call
in
sbb
fnstcw
jns
mov
cmpsl
and
pop
sub
mov
mov
and
sub
xorl
and
stos
inc
and
inc
xchg
imul
insb
ficoml
subb
inc
insb
pop
xchg
ss
and
xchg
mov
imul
xor
pop
leave
adc
jle
push
fucomi
frstpm(287
and
jmp
pop
fiadds
call
sub
popf
xchg
rcrl
in
xor
mov
addr16
xchg
das
das
mov
mov
arpl
lock
lcall
and
inc
jbe
xor
adc
xor
sub
push
sub
arpl
gs
jb
mov
xchg
jnp
lret
pusha
shll
out
es
jmp
or
mov
and
aas
mov
mov
outsb
cmp
cmpl
sbb
mov
inc
xor
mov
movsb
dec
xlat
jno
mov
jecxz
inc
scas
fdivrl
loope
outsb
mov
add
add
imul
or
pop
ret
jns
mov
dec
xor
loope
jnp
ss
es
mov
fcoml
pop
jae
cmp
add
mov
ja
add
adc
xchg
lods
ficompl
cmp
push
mov
fdivrp
sub
jns
xor
adc
leave
pop
pusha
mov
aam
pop
jle
or
mov
sbb
cs
dec
lea
mov
test
cmp
pop
sahf
into
mov
sbb
push
ljmp
mov
iret
aas
fildll
pop
jle
sbb
xor
in
das
push
xchg
pop
mov
clc
pop
xchg
adc
add
dec
mov
popa
inc
fnstsw
mov
leave
cli
mov
cwtl
dec
jmp
sub
jo
adc
enter
jns
xchg
pushf
fs
and
dec
push
stos
repz
fcompl
jl
or
mov
cmp
sbb
cmpsl
jecxz
data16
sub
or
inc
add
lea
xor
gs
mov
mov
movsl
daa
cmpsb
fistpll
ss
xchg
xor
jbe
jle
dec
aas
int
ss
cmp
movsb
add
sbb
pop
sahf
mov
popf
mov
into
icebp
adc
inc
sbb
jbe
xorl
mov
mov
rorl
nop
test
inc
mov
dec
add
and
jg
lret
popf
outsb
insl
in
aad
push
fs
mov
push
pop
insb
fimull
jno
jge
int3
cmpsl
mov
or
scas
dec
js
faddp
sar
aam
cmp
int3
add
jns
dec
cmp
pushf
push
out
sbb
scas
sub
cs
dec
int
inc
sbb
fldz
cmp
addb
and
xchg
mov
pop
sub
aam
sub
lods
into
iret
pop
or
cmp
xor
shrb
xchg
test
mov
dec
add
cli
push
outsl
xchg
pop
mov
xchg
push
out
lret
sub
mov
lcall
ret
lods
xor
loop
add
mov
insb
ret
cwtl
push
or
xchg
outsl
jae
adc
add
lods
push
sub
xchg
js
jl,pn
sahf
mov
sbb
mov
insb
xor
insb
adcb
shrl
lods
arpl
mov
mov
ret
xchg
sti
jle
mov
mov
sbb
or
cli
jne
cmp
or
addr16
push
lret
jae
jbe
mov
dec
jno
es
jmp
or
add
xor
ret
jg
xor
mov
ret
arpl
cmp
xchg
or
clc
lcall
inc
adc
and
and
or
pop
and
hlt
popf
push
add
xor
cwtl
out
out
sub
adc
push
out
inc
pop
sub
cmp
dec
and
mov
roll
and
sti
ljmp
pop
das
test
dec
mov
pop
xchg
pop
xchg
cmp
fdivrp
jnp
out
dec
cmp
pop
and
xchg
xchg
or
in
dec
xchg
js
icebp
xor
stos
inc
imul
mov
pop
int
pop
sti
push
ds
mov
out
xor
ret
aad
pop
dec
lea
xor
rclb
cwtl
dec
sbb
js
movsl
aad
mov
jp
hlt
aam
cmc
cmp
push
jp
dec
and
xchg
xor
mov
mov
xchg
andl
cmpsb
add
cmpsl
rolb
push
pop
push
cltd
into
into
xchg
add
mov
add
iret
xchg
push
cmp
push
shl
pop
lcall
mov
roll
and
test
push
push
ljmp
push
mov
sub
add
shl
lret
int
repz
scas
jp
xor
movsb
aad
notb
cmp
sahf
cltd
inc
mov
jnp
push
xchg
cmp
popf
sahf
outsl
arpl
cmc
rcrb
pop
pop
adc
dec
jp
xor
push
popa
stos
xor
gs
xchg
cmp
inc
mov
clc
pop
xlat
mov
jo
es
mov
jne
mov
mov
xchg
mov
jae
test
popa
call
or
sbb
pop
dec
lret
xchg
add
out
test
inc
mov
addr16
cmp
adc
sub
sbbl
dec
int
psubq
cmp
pop
jl
pop
xchg
sbb
insb
fmull
jecxz
test
pop
pop
jnp
pop
js
adc
push
rolb
jp
repnz
xchg
repnz
test
gs
pop
nop
dec
cmp
repz
lret
push
jno
adc
sbb
mov
aaa
sub
jmp
rcrb
and
fcomp
insl
lret
adc
sbb
fisttpl
out
inc
push
xchg
int
stos
adc
and
popa
stc
nop
ret
imul
push
jo
ljmp
mov
push
adc
push
aaa
je
add
push
mov
insl
fwait
mov
push
hlt
and
je
movsb
cmp
inc
jne,pn
mov
inc
adc
jge
push
std
xchg
mov
adc
push
jo
icebp
out
fisubl
xchg
out
lock
and
sbb
or
pop
std
mov
and
xor
aad
mov
in
ficoms
dec
sbb
mov
in
fstpt
or
out
or
dec
bound
cmpsl
mov
dec
popf
pop
jmp
jnp
movb
outsl
adc
movzbl
les
repz
flds
mov
cmpsl
ljmp
xchg
stos
and
std
insb
mov
lahf
adc
inc
inc
push
cwtl
push
enter
sub
das
sbb
pusha
leave
jne
fwait
out
jo
adc
loope
mov
push
xor
ret
bound
cmp
rclb
out
sub
jg
dec
inc
in
mov
ficomps
cmpsb
xchg
mov
push
roll
mov
push
loopne
fmuls
rcl
sub
cld
add
pop
pop
in
ljmp
pop
xor
mov
ljmp
pop
adc
push
fisubrs
daa
xlat
jnp
push
mov
lds
xchg
and
test
decb
sbb
or
repz
sbb
sub
aam
cmp
jg
jns
arpl
mov
dec
xchg
out
in
psubsw
outsb
jp
mov
xchg
aad
es
idivb
shl
ficoml
push
je
scas
fwait
cmp
add
mov
or
or
insb
loope
imul
or
aam
mov
lock
pop
xchg
clc
popf
leave
mov
into
hlt
inc
add
adc
ret
icebp
ret
mov
xor
or
sbb
sub
fadd
lahf
loop
mov
outsl
addr16
stos
sbb
xchg
lock
testb
and
sub
sarb
and
push
mov
iret
push
and
ret
in
xchg
dec
outsb
into
sub
pop
clc
outsb
enter
or
enter
add
xor
mov
ret
jns
inc
scas
mov
out
mov
adc
cmpl
sbb
mov
loope
pop
std
aam
xor
sub
mov
and
nop
lcall
out
pop
adcl
fimull
mov
xchg
or
push
out
in
out
rorl
mov
mov
ljmp
out
data16
data16
outsb
icebp
sarw
and
push
cmp
push
push
nop
mov
in
sub
cli
pop
or
aas
push
in
or
stos
fwait
fwait
paddusw
test
jns
add
mov
and
jecxz
sbb
out
mov
insl
jg
mov
add
fcomip
js
cmp
jo
scas
mov
outsl
xchg
jae
es
scas
scas
imul
es
and
js
mov
push
pop
jge
mov
xor
jecxz
inc
and
mov
pop
jo
mov
inc
addr16
push
mov
inc
mov
gs
aaa
push
dec
cltd
mov
fs
xor
mov
pushl
xchg
int
test
push
sbb
add
dec
hlt
sub
and
pop
cltd
stos
fwait
outsb
test
loop
sarl
fnstcw
pop
jo
ficomps
stos
lock
aaa
stos
inc
dec
cwtl
mov
lock
xchg
scas
mov
add
sbb
ret
ret
pushf
adc
test
and
loop
loopne
mov
xor
push
adc
cwtl
aas
mov
mov
movsb
es
jb
jle
and
sub
xchg
add
imul
sub
insl
xchg
mov
sub
xchg
fwait
cmpsl
popa
xchg
mov
shll
mov
dec
lcall
mov
stos
cmp
test
adc
imul
sub
scas
test
ljmp
lds
int
push
jle
sbb
movsl
test
mov
add
jge
in
orl
js
xchg
add
sahf
mov
push
add
sbb
jne
test
je
scas
mov
xor
cwtl
addb
dec
out
ljmp
ret
mov
inc
fldcw
xor
out
cmp
pusha
enter
cmp
fdivrs
lret
mov
fldcw
lods
pop
push
test
sbb
call
xor
jnp
rorb
dec
jge
fildl
fistpl
int3
int3
mov
int3
cs
or
push
push
adc
lret
out
insb
jbe
icebp
lcall
push
jno
mov
arpl
aaa
dec
cld
sbb
popf
out
adc
sbb
sub
ljmp
pop
out
adc
dec
add
push
unpckhps
mov
mov
jbe
push
leave
jecxz
push
sbb
inc
fistpl
mov
jl
out
shll
testl
pop
lods
insl
lds
xchg
adc
mov
push
js
mov
jno
adc
neg
imul
inc
xor
lret
jp
les
and
pop
ret
mov
in
mov
pusha
lret
flds
inc
nop
insb
aaa
pcmpeqw
adc
push
mov
test
inc
mov
xor
jnp
lret
inc
sub
js
cmp
xchg
xorl
cmp
adc
pop
addr16
or
pushf
sbb
mov
cmp
into
call
xor
or
stos
mov
pushf
dec
test
mov
repz
mov
test
add
jne
mov
test
iret
jle
sub
sbb
inc
cltd
int3
inc
xchg
popa
xor
cs
inc
cmp
jno
xchg
inc
out
xor
mov
cltd
jno
pop
mov
push
in
xchg
loopne
mov
test
pop
out
xbegin
add
pushf
push
sahf
scas
adcl
mov
insb
mov
gs
inc
mov
fimuls
shrl
aas
or
push
sub
xchg
pushf
or
or
mov
lea
loop
cmpsb
mov
mov
daa
lods
cwtl
push
push
or
push
push
jae
fdivrs
push
movsl
and
cmpsb
mov
jg
fdivr
sub
ljmp
icebp
lret
push
mov
fnstenv
sbb
dec
repnz
je
cmpsl
jnp
fwait
dec
lds
mov
mull
mov
lret
cmp
pop
mov
lret
shr
mov
fstcw
ret
xor
aad
xchg
dec
mov
scas
gs
test
adc
xchg
test
lods
push
adc
cmp
popf
ret
movsl
and
cmp
movsl
insl
mov
add
xlat
pop
mov
push
test
jl
mov
push
pusha
in
int
sarb
pop
repz
sahf
nop
arpl
jecxz
push
nop
mov
roll
jb
or
adcb
push
rcrb
leave
pop
icebp
mov
jae
dec
sbb
test
xchg
fsts
in
aad
push
inc
lods
jb
xlat
sub
push
jne
mov
inc
cwtl
stc
dec
lods
jb
fld1
add
std
fildl
shrl
push
jl
imul
adc
xchg
jl
movsb
dec
pusha
test
cmp
sub
jae
pushf
dec
adc
shll
or
xor
mov
and
hlt
cmc
stos
stos
and
pmaxsw
push
push
inc
fsubr
jl
stos
insl
xchg
call
insl
and
jle
sub
insl
push
lds
push
out
aam
xor
das
mov
cmp
mov
aad
cli
cld
call
test
mov
sbb
out
ss
sar
mov
aaa
testb
pop
rcrb
test
sbb
rcrb
xor
adc
outsl
or
test
fidivs
ja
jecxz
into
adc
mov
cs
adc
add
int
sbb
les
dec
sbb
idivb
in
fisubrs
xor
fst
lcall
sbb
in
sbb
or
ja
dec
fnstenv
push
pop
pop
jno
sti
leave
xchg
movsb
inc
mov
rcrl
imul
lahf
je
pop
inc
or
adc
shl
mov
sub
mov
in
ja
jmp
dec
pop
push
ret
insl
mov
fistl
xor
emms
scas
test
and
add
cmp
rcr
mov
ss
push
jge
xor
out
push
rcl
pop
arpl
cmp
arpl
lds
loopne
in
sti
repz
insl
inc
mov
outsl
pop
mov
xchg
cmp
dec
mov
stos
fiaddl
or
adc
fistps
pop
push
sbb
mov
scas
mov
nop
pop
fisubl
inc
or
xor
cmp
and
ljmp
pusha
out
out
mov
xor
es
jbe
sub
push
adc
xor
add
mov
cmpsb
xor
sbb
cld
nop
jmp
cld
int
dec
push
repz
dec
scas
cmp
xchg
mov
and
cs
mov
xchg
addb
inc
jg
in
fdivs
dec
in
pop
add
popf
pop
decl
mov
mov
loopne
hlt
outsb
or
and
aad
cmp
idivb
or
cmp
xchg
inc
pop
insl
test
rorl
xchg
cli
inc
adc
mov
shr
hlt
pop
movl
pop
fists
pop
imul
cmc
mov
icebp
mov
mov
das
mov
outsb
dec
and
or
cmpsl
jo
call
jnp
push
dec
jno
xor
enter
or
sub
or
rcrl
lret
jo
and
mov
cmpsb
dec
sbb
aad
lcall
push
cmpsl
inc
lret
adc
push
push
mov
inc
insb
dec
xchg
jbe
into
clc
mov
inc
adc
aas
or
dec
rcll
clc
addr16
push
loopne
sbb
adc
push
push
loopne
dec
icebp
pop
xlat
pop
mov
inc
orb
outsb
cmp
iret
call
mov
dec
enter
push
ja
adc
inc
xchg
leave
std
pushf
fsubs
lock
push
movsb
rclb
cld
sub
adc
test
push
js
mov
es
gs
jb
add
add
add
call
lcall
daa
into
aaa
jb
sar
push
pop
add
and
pop
push
cmpsb
imul
or
or
pop
cmpb
std
or
aad
insb
into
add
movsl
mov
das
pop
xchg
lcall
sub
add
sbb
rcll
and
mov
stc
add
mov
jmp
cmp
stos
pop
sbb
xchg
xor
and
loope
add
arpl
inc
or
leave
repnz
push
mov
adc
xchg
aad
xchg
mov
dec
ficompl
add
inc
call
pop
or
mov
inc
outsl
repz
bound
adc
jb
in
pop
clc
cmp
xchg
sbb
ss
sub
xchg
cmp
shrb
sub
xorb
mov
add
push
es
add
mov
lea
xor
sub
test
ret
inc
inc
and
xchg
movsb
jmp
movsb
out
mov
imull
adc
sub
xlat
cmc
subb
xchg
add
mov
adcl
pop
push
xchg
inc
cmp
inc
mov
pop
mov
cmp
inc
jg
cwtl
dec
cmpb
ret
ja
aaa
test
cmp
loop
jg
lahf
mov
icebp
mov
mov
cmp
sbb
jno
loope
dec
lcall
ret
jmp
out
ret
jmp
out
mov
add
lods
mov
out
movl
push
jo
xchg
fistpl
push
cmpsl
xchg
xchg
push
jbe
inc
mov
ljmp
jns
cltd
test
ja
xor
add
inc
push
jge
jg
cmp
mov
sbb
sub
xchg
decl
out
dec
imul
orl
cwtl
pushf
cmp
inc
sbb
and
int
xor
xchg
xchg
sub
adc
outsb
aaa
test
test
ds
adc
int
dec
mov
jmp
dec
jbe
sbb
sahf
or
push
fnsave
fbld
out
call
xchg
adc
or
lret
fldl
jnp
and
popa
test
test
aad
jge
push
scas
and
iret
lds
dec
ja
les
sti
orl
pop
or
xchg
jnp,pt
icebp
mov
xchg
std
ret
dec
cmp
nop
cld
xor
rol
cs
lret
cwtl
dec
mov
rcrb
dec
adc
in
inc
and
dec
jmp
jne
sub
and
cld
mov
xor
mov
aas
cmp
insb
rcrb
loope
ljmp
negl
filds
loop
nop
dec
jbe
js
sub
shlb
or
fwait
movsb
push
inc
out
cmp
push
cmp
push
divb
and
ljmp
inc
xchg
ret
and
cmp
jbe
fsubl
aad
cld
xor
pop
ss
mov
ficompl
mov
testl
popa
jmp
in
stos
scas
bound
inc
repz
add
fwait
mov
or
dec
loop
das
out
or
xchg
inc
je
idivl
cmp
stos
mov
and
ror
jmp
cwtl
inc
cli
jg
insl
repnz
xor
jno
inc
outsl
subl
add
push
iret
in
push
outsl
out
sahf
push
iret
lea
pop
lcall
and
add
or
and
outsl
and
cmp
sbb
aas
fs
lcall
fmulp
jge
inc
and
sub
mov
cwtl
insl
sti
xor
je
dec
and
add
out
nop
xchg
xor
cmp
sbb
lea
cmp
mov
push
lahf
push
push
lds
cmp
sbb
xor
lret
or
xlat
xchg
frstor
adc
xor
scas
addb
sub
stos
fwait
xor
mov
andb
or
sub
inc
jmp
pop
fiadds
push
ss
sbb
fistpl
mov
push
fisubl
mov
pop
xchg
movsl
add
sbb
jae
faddp
add
fld
lods
mov
test
xchg
aam
jle
mov
in
lods
adc
jl
daa
hlt
jg
fnstcw
pushf
ror
lock
shlb
test
int
or
pop
cltd
cmpsl
cmp
mov
aas
je
adc
mov
icebp
cli
inc
pop
jno
xor
out
cmp
and
add
pushf
ret
mov
pop
mov
and
push
lds
xor
cmp
and
xor
lods
xor
insb
inc
sbb
insb
movsb
xchg
pusha
pop
push
fdivrs
inc
loop
push
xor
mov
adc
int
pushf
pop
arpl
imul
xor
jo
pop
adc
pop
inc
cmp
imul
xchg
push
lock
xchg
mov
movsb
adc
mov
outsl
insl
sbb
cmp
mov
rcll
pop
inc
rep
sti
and
ds
insb
rorb
add
inc
jb
cmp
call
and
dec
pop
or
mov
pop
jl
rorb
mov
inc
ja
enter
lret
or
les
add
dec
pop
jns
jnp
test
fldt
add
pop
mov
xor
out
jmp
jbe
xchg
push
xor
xchg
and
data16
xchg
or
or
repz
mov
cwtl
jle
cmpsl
les
mov
adc
shl
push
lods
cli
mov
int3
mov
mov
subb
fidivrs
icebp
in
sbb
mov
sub
and
jg
cwtl
and
cld
xchg
outsb
dec
cmpsl
aad
xchg
jo
jl
fnstenv
jecxz
mov
xor
std
cmp
push
pushl
push
loope
lods
rcrl
xchg
xchg
cmp
ret
lds
cltd
adc
xchg
sbb
mov
xor
push
inc
test
mov
sbbb
add
pop
mov
push
loope
rcrb
mov
pop
mov
sbb
jmp
cmp
test
test
push
lcall
jle
jg
divl
lods
popa
repz
xchg
dec
cld
pusha
lret
jmp
inc
jg
inc
xlat
jg
xor
lret
andb
in
aad
dec
sub
xchg
xchg
rorb
ss
orb
mov
and
mov
loopne
movsb
and
or
fs
pop
inc
mov
push
push
fxch
pop
popf
xchg
loop
inc
outsl
dec
fs
push
je
sub
cmp
and
lds
push
fcmovnu
lods
es
hlt
imul
rolb
addr16
rcll
std
mov
jg
jg
xchg
aaa
sbb
adc
add
test
icebp
xchg
jp
mov
sbb
test
sbb
add
lcall
sti
inc
cmp
mov
pop
cmpsl
and
ss
push
cltd
arpl
cltd
push
cmp
imul
mov
aam
mov
iret
std
mov
leave
cmpsb
aad
test
les
and
cmpsb
sub
inc
xlat
mov
das
mov
loopne
dec
cmc
xchg
sub
pop
adc
or
pop
sbb
gs
pop
call
insb
mov
stc
aam
adc
fdiv
popa
inc
inc
mov
ljmp
iret
mov
jmp
movsl
or
xor
sub
clc
cmp
push
stos
adc
sub
stos
jae
mov
sub
add
and
mov
sbb
inc
add
popl
sbb
mov
cmp
mov
push
pop
sahf
mov
jo,pt
loopne
sub
push
xchg
ret
jecxz
addb
inc
gs
jmp
push
inc
push
lods
std
pop
lret
pcmpeqd
cmp
cs
or
sbb
popa
inc
push
test
sbb
fcomps
pop
jae
add
aad
scas
cmp
add
xor
in
xchg
jmp
mov
pusha
mov
cwtl
data16
dec
lahf
mov
daa
jo,pn
inc
push
iret
jno
sub
dec
xor
pushf
cmp
mov
mov
or
or
or
test
fs
fildll
jp
xor
push
roll
adc
out
call
out
inc
jmp
mov
mov
lahf
mov
jmp
jp
lret
inc
out
cwtl
mov
add
or
xchg
outsl
and
jnp
sbb
sbb
mov
lahf
fists
push
int3
sub
adc
andl
ss
mov
pop
std
fs
lds
divb
movsl
repz
jno
std
popa
icebp
jmp
inc
pop
cmp
jo
ss
mov
dec
adc
sbb
mov
mov
fs
ret
add
cmpsb
fwait
movsl
das
cld
xorb
xchg
jmp
into
ja
lret
stos
std
xlat
shl
push
sub
movsl
data16
cmp
ja
inc
mov
lahf
rol
mov
loop
mov
xchg
ljmp
pop
pop
pop
mov
push
repnz
jae
sbb
jl
adc
inc
adcb
xchg
leave
aaa
std
jo
mov
sti
leave
or
and
insl
arpl
inc
pusha
jle
xor
mov
adcb
push
cmp
dec
out
xor
mov
mov
rcl
ss
xchg
ret
lods
pop
xchg
mov
jp
ret
or
add
sbb
mov
mov
xorl
xor
cltd
dec
add
icebp
imul
pop
mov
xchg
jecxz
ds
add
addl
in
fsubr
fcmove
inc
gs
imul
es
cltd
jo
push
inc
xor
cmp
jle
outsl
notb
loopne
xchg
ficompl
test
leave
xor
cld
sbb
mov
jge
in
inc
jns
es
fdivrl
repnz
mov
push
stos
push
jecxz
sub
faddl
aam
leave
daa
adc
popa
dec
cmpsl
cmpsl
rcr
xlat
jecxz
pop
ret
loopne
push
stos
cmp
cmpsl
bound
jne
lret
push
ret
cld
pop
int
mov
mov
or
mov
std
sarb
and
push
mov
mov
into
in
test
lret
scas
cmp
dec
jge
and
fisttpl
and
or
mov
lock
mov
lods
aam
xchg
adc
movsl
dec
pop
sbb
pushl
lock
rorb
mov
addr16
outsl
in
std
loope
cli
movsb
pop
out
dec
mov
fs
int
push
xor
or
dec
and
xacquire
gs
sbb
pop
push
and
fisubl
mov
cltd
call
bound
inc
mov
jmp
leave
jg
adc
bound
mov
in
xchg
lea
lods
cli
outsb
jbe
iret
pop
mov
repz
push
lea
stos
shrl
push
add
push
dec
test
ss
mov
fmuls
pushf
jae
jp
scas
adc
ret
test
mov
loop
ficompl
lea
clc
mov
jbe
cli
js
push
adc
mov
xor
and
dec
push
jnp
and
lahf
mov
xchg
jo
sbb
and
sti
xchg
or
inc
stos
clc
xchg
lret
xor
iret
lret
fisttpl
ss
je
cmp
mov
mov
sti
jb
push
mov
adc
cmpb
arpl
jnp
das
mov
add
or
out
ljmp
out
iret
mov
dec
ss
push
addr16
and
or
sti
ljmp
pop
arpl
fimull
jns
mov
sbb
bswap
test
call
fistps
push
ret
rorl
lea
sti
jb
xchg
pop
test
pop
and
or
cmp
icebp
sti
lds
lahf
jle
dec
iret
jp
ja
imul
into
in
adc
add
addl
dec
mov
fwait
icebp
jecxz
je
clc
dec
jb
ds
mov
sti
mov
in
pop
dec
pop
sub
xchg
clc
lds
jmp
cmc
push
sbb
xchg
push
rcrl
subl
cwtl
int3
in
xchg
outsl
rcl
imul
mov
add
ja
int
ss
mov
jne
pop
jbe
mov
pop
sarl
leave
inc
cltd
repz
lcall
pusha
decl
loopne
pop
mov
daa
or
mov
imul
sbb
jle
push
js
and
push
gs
fists
xchg
adc
leave
adc
or
cld
cmp
sub
testb
in
aam
xchg
out
lahf
cmpsl
mov
in
leave
dec
push
test
dec
cmc
ljmp
jbe
out
ljmp
roll
outsb
xor
inc
out
pop
mov
in
and
das
mov
cmp
mov
in
sbb
push
sbb
mov
mov
push
hlt
cltd
mov
dec
mov
cmp
xchg
cmp
les
lock
jbe
xor
std
dec
and
mov
xorl
popf
xchg
mov
xchg
fwait
dec
shlb
rcl
sbb
ja
mov
lods
aas
imul
xchg
scas
xchg
sti
pop
jns
fidivl
pop
cmp
movsl
mov
in
mov
loope
fs
jl
inc
test
mov
push
cmp
adc
pushf
sti
out
outsl
push
inc
or
int3
enter
dec
jmp
out
push
push
and
or
sti
movsb
sub
mov
mov
and
in
jmp
movsl
mov
out
shr
lcall
xor
sub
or
mov
fnstsw
je
shufps
jmp
or
mov
nop
lahf
nop
rcr
push
stc
push
pop
sub
bound
mov
xor
lcall
inc
adc
cmp
and
shrl
mov
fs
rcrl
outsl
pop
cwtl
lcall
dec
sbb
lret
add
sbb
or
dec
rorb
clc
jae
adc
dec
dec
xchg
jae
lret
xor
mov
mov
out
fs
push
ljmp
ficoml
dec
rcr
pop
shll
clc
jb
scas
mov
cmc
cmp
in
mov
imul
div
scas
dec
mov
imul
jbe
pop
xor
xor
adc
and
mov
xorb
fildll
repnz
call
loopne
lret
rcrb
aad
push
adc
mov
inc
cmp
roll
xor
ret
adc
push
fwait
repnz
or
pusha
fidivrs
dec
jge
push
daa
sub
or
lods
mov
daa
adc
sti
push
adc
out
mov
jno
pushf
cmp
jns
lds
mov
cmpsl
mov
shl
icebp
rcrb
vmaxps
or
loop
or
dec
repnz
scas
int3
arpl
je
jno
cmp
int3
lods
dec
sti
call
cmp
ror
data16
xchg
subl
push
push
pop
data16
addr16
mov
push
roll
je
ja
xchg
mov
xchg
xor
xor
xor
xor
push
pop
inc
popa
add
mov
and
out
or
xchg
adc
mov
in
cmpxchg
sbb
xor
fs
insl
das
xchg
push
cmp
bound
es
jo
mov
mov
or
orb
lea
shlb
xchg
mov
imul
mov
cmpsb
dec
dec
rorl
pop
cmp
and
ret
daa
jns
inc
rorl
push
or
dec
test
jae
xchg
pop
or
push
ss
dec
sub
mov
or
and
push
push
mov
mov
sub
inc
and
out
cmp
iret
bound
pop
pop
inc
scas
or
fsubrl
inc
popa
push
jno
movsl
dec
mov
dec
shr
fwait
lcall
xchg
or
data16
cmpsb
int
pop
insb
jecxz
fidivl
mov
and
hlt
test
mov
shll
das
push
adc
adc
jge
sbb
pop
adc
xchg
fistps
add
xor
pop
mov
xor
into
ss
out
jae
pop
and
aam
out
push
cmp
imul
push
pop
xchg
addr16
lcall
andl
ja
movsb
mov
test
scas
dec
and
test
leave
pop
xchg
data16
rolb
rolb
aam
adc
stos
add
sbb
adc
mov
inc
xor
jnp
fcmovne
mov
cwtl
pop
mov
xchg
push
cmpsb
ficompl
mov
push
decb
pop
jae
in
out
xor
pop
lret
and
pop
dec
rolb
or
adcl
jge
adc
addr16
lret
jne
jge
test
xchg
inc
sub
pop
sahf
icebp
sub
out
cmp
add
loope
mov
sbb
faddl
adcb
stos
mov
jp
loope
pop
paddsw
out
pop
cld
xor
and
leave
imul
pop
add
xchg
xchg
dec
rcrl
insl
push
or
call
shrl
mov
lea
jecxz
in
mov
inc
mov
xor
mov
pop
mov
loopne
test
pop
xchg
mov
mov
hlt
bound
cmp
push
outsb
xor
loopne
scas
jae
xlat
add
xlat
dec
inc
js
and
mov
and
and
jae
mov
mov
mov
clc
xchg
inc
mov
nop
lret
pop
adc
adcb
outsb
movsb
cmpb
push
sub
mov
es
xchg
mov
adc
mov
pop
cmc
xor
mov
jo
lock
f2xm1
rorl
push
xor
loop
push
push
mov
jle
insl
dec
sahf
in
sbb
inc
out
push
pop
test
mov
scas
mov
fmuls
int
sub
sbbb
jecxz
loope
sbb
and
inc
mov
imul
and
ja
push
jne
mov
sbb
fistpll
insl
testl
dec
les
xor
leave
mov
movb
aad
inc
and
xor
daa
fmull
popa
enter
mov
mov
cli
fistps
xor
sub
dec
jp
int3
repz
aaa
add
push
jle
add
lock
mov
adc
hlt
adc
sbb
push
daa
inc
push
mov
mov
subb
iret
pushaw
add
int
adcb
xchg
push
popa
mov
xor
mov
lds
pusha
cmpb
out
test
hlt
xchg
ret
xor
mov
sahf
cmpsb
lret
cmpsl
es
fisttpl
push
mov
sub
sub
sub
jns
es
dec
dec
xchg
jnp
jb
cmp
pop
cld
je
imul
aaa
push
subb
jge
sti
mov
lods
div
jecxz
push
push
and
fsubrs
mov
lahf
rclb
pop
mov
sub
data16
pop
pop
ficompl
clc
mov
lcallw
out
clc
mov
inc
mov
popl
ja
jns
js
adc
sub
sarl
and
nop
sahf
lret
or
jae
push
std
test
arpl
adc
rolb
inc
xor
pop
add
sbb
lods
jecxz
popf
push
and
sub
pop
ss
adc
sbb
fs
xor
lds
jnp
flds
ja
jae
pop
outsl
xor
lods
pop
push
jne
insl
inc
mov
aaa
inc
int3
into
aas
sbb
sub
and
cwtl
sti
popa
call
mov
iret
pop
push
cmc
mov
pop
and
pop
arpl
ss
push
ret
push
repnz
xor
out
sub
or
jl
add
cld
insb
lock
mov
cmp
xchg
cli
inc
inc
push
and
in
stos
and
jecxz
or
insb
xchg
jmp
xchg
loop
loopne
xor
jecxz
out
sbb
cmpsl
jg
sub
jmp
or
rcrl
sbb
nop
push
ffree
subb
testb
xlat
sub
pop
call
mov
scas
fstpt
pop
dec
and
call
jnp
xchg
test
pop
loope
inc
into
push
jl
xchg
pop
xchg
sub
add
sub
and
fadd
jnp
push
adc
ret
jl
sub
jo
js
xor
aaa
fwait
push
sub
pop
mov
loope
insl
cmp
ljmp
pop
inc
sbb
mov
call
mov
scas
inc
jmp
and
inc
repnz
mov
daa
mov
xchg
test
add
push
fstl
aas
pop
fdivl
dec
or
jno
lock
mov
in
jge
mov
stos
dec
mov
cli
inc
jge
cltd
lret
dec
push
inc
mov
stos
mov
mov
mov
inc
frstor
xchg
repnz
notb
mov
or
mov
xchg
popf
push
fadd
je
in
rcrb
add
jno
div
push
cmpsl
sbb
jne
sbb
jb
pushf
xchg
aam
addr16
cmc
mov
sub
push
enter
into
arpl
xor
mov
loop
jne
call
mov
fistl
xor
push
mov
or
aam
pop
test
jno
xor
jb,pt
xor
lds
pop
data16
cmc
push
out
xchg
add
lods
fs
inc
jle
aas
add
cmp
je
jmp
jno
mov
fidivl
inc
loope
mov
shll
add
and
mov
sbb
lcall
mov
jne
sub
cltd
jae
lods
fstp
outsb
mov
jnp
and
cwtl
xlat
mov
shll
push
push
loopne
pop
ret
lret
in
jecxz
rcrl
cmpsl
jmp
mov
loope
mov
ret
in
push
insl
repz
pop
fucomip
popf
ds
ss
mov
or
mov
or
xor
in
push
xor
cmc
cmp
jge
push
add
xor
mov
xchg
push
pop
inc
cmp
mov
sbb
add
into
scas
shll
xor
pop
out
xchg
adc
sahf
push
adc
ja
push
ljmp
sub
xchg
xchg
in
clc
test
loop
or
aam
inc
push
in
inc
repz
push
dec
mov
imul
sub
mov
fnstsw
pop
jno
xorl
sbb
jne
xchg
bound
jbe
cli
mov
push
adcl
sbb
les
mov
xchg
jecxz
jecxz
in
xor
jbe
test
pop
xchg
daa
icebp
mov
jbe,pn
pop
sub
dec
loop
mov
inc
jbe
adc
mov
sahf
push
cmpsb
in
shll
imul
pop
js
add
int
cmpsl
jg
sbb
in
int3
gs
cmp
xor
sub
add
push
ret
cmp
pavgb
mov
sbb
adc
mov
mov
or
inc
jbe
jbe
cmp
sar
mov
xor
dec
lret
sub
lock
jg
jle
adc
adc
mov
sbb
xor
inc
mov
mov
daa
addr16
xchg
add
or
sbb
add
push
nop
test
push
cs
sub
jnp
mov
push
push
mov
cmp
das
xor
sub
mov
in
xor
sbb
and
lock
lcall
mov
jl
pop
add
popf
das
loop
cmp
mov
dec
repz
push
mov
adc
adc
out
push
in
mov
xchg
mov
add
dec
jle
icebp
fdivrs
sub
jle
push
push
mov
aam
cmpsl
inc
push
fldcw
push
imul
cwtl
push
mov
ds
xchg
stc
fistpll
xor
mov
lcall
lahf
popf
gs
test
shlb
pop
mov
leave
jl
push
scas
shrb
adc
imul
cmpsb
repz
insl
or
pop
lahf
and
adc
data16
div
mov
xchg
push
cwtl
scas
cmpsb
fcom
cli
adc
jnp
jnp
jg
jne
inc
sub
xor
pop
lds
pushf
fimuls
and
ljmp
sub
es
or
jbe
mov
mov
mov
sbb
rcrl
dec
jo
push
je
dec
xchg
mov
aas
xor
cmpsb
add
jge
adc
ret
shl
js
xchg
xchg
lret
mull
jp
mov
push
out
insl
fs
int3
loope
inc
mov
fisubs
ljmp
icebp
sbb
repz
or
xor
cmp
jb
lcall
pop
xchg
push
push
cs
pop
and
or
push
cmp
and
shrl
cmp
xchg
repz
clc
pop
mov
cmp
dec
lods
adc
sub
push
xor
insb
movsl
mov
push
sub
aad
or
es
sub
adc
xor
cmp
or
xchg
dec
shlb
pop
rcrb
je
xchg
les
cmp
push
movsl
data16
inc
jns
lods
fldl
mov
adc
lock
filds
popa
push
int
cmp
cltd
adc
add
lret
out
push
movsl
mov
std
pop
push
cmp
popa
add
jae
stc
jle
cltd
gs
lea
or
insb
jbe
cmp
jno
clc
adc
mov
ljmp
pop
dec
jb
and
in
cmp
mov
inc
bound
xchg
lret
psraw
outsl
imul
fwait
popa
inc
mov
test
cmp
dec
jge
cmp
jmp
jecxz
bound
or
xor
sbb
repz
cmpsl
fidivl
lcall
xor
out
bnd
out
mov
flds
dec
mov
inc
clc
dec
sarl
mov
into
rorb
fs
cmpsb
or
adc
push
lods
jno
dec
xchg
pop
pop
sarb
and
dec
add
inc
xlat
stos
clc
loope
adc
inc
call
mov
jnp
hlt
hlt
and
bound
lds
dec
fisubl
add
or
mov
in
or
jmp
int
mov
sub
pop
test
in
mov
cmpb
in
lods
add
sbb
mov
sahf
int
mov
notb
rclb
jge
mov
enter
movl
fcoms
fisubrl
movl
gs
loope
mov
std
jle
aam
lods
ja
je
pop
fsubrl
add
xchg
xchg
lret
cmp
jmp
sub
imul
shlb
xlat
addr16
pop
mov
aaa
fstps
mov
pop
cmp
dec
lcall
leave
mov
mov
dec
mov
bound
push
aam
mov
andl
sbb
cwtl
je
ljmp
cwtl
dec
or
and
mov
outsb
pop
enter
xor
addr16
xor
pop
mov
ret
push
shl
loope
xchg
clc
out
loope
sbb
push
adc
cltd
cmp
ja
mov
and
mov
push
and
leave
cmp
out
out
mov
dec
fwait
jno
nop
push
ljmp
cmp
pushw
cmp
es
inc
mov
cmp
flds
dec
cmp
push
xchg
pop
mov
mov
mov
xor
scas
repnz
cld
sub
add
xchg
xchg
ja
mov
xlat
xchg
or
scas
lret
xchg
xlat
xchg
jns
xor
cmp
out
jns
inc
scas
jo
xchg
leave
dec
mov
mov
iret
arpl
jg
xchg
or
jb
lahf
mov
sub
sbb
cmp
int3
popf
mov
fnstsw
adc
addl
aam
nop
in
das
inc
out
adc
dec
les
push
xor
pusha
xchg
leave
insb
jns
inc
test
ljmp
mov
inc
mov
movsl
mov
pusha
addr16
hlt
mov
xor
adc
ret
push
xor
imull
or
bound
pop
xor
cmp
iret
jle
sub
sarb
addl
imul
pushf
test
inc
cmpsl
in
xor
aaa
inc
std
inc
inc
cmp
std
lds
iret
rorl
dec
movsl
push
mulb
inc
ja
xchg
aas
xchg
std
push
and
pop
loope
test
ret
push
jne
dec
in
lret
sbbb
sahf
cmp
imul
lds
lds
fldl
or
adc
cli
push
sub
add
stos
data16
push
xlat
sbb
cmp
jns
daa
xchg
lcall
or
rcll
jo
jbe
xchg
sub
jne
push
pop
js
lock
or
ljmp
dec
pop
fs
cmc
insb
add
inc
mov
cld
lods
mov
das
aas
scas
mov
repnz
in
mov
push
cmp
sbb
and
and
and
gs
in
sbb
in
xchg
fdivrl
sub
jecxz
adc
or
call
jb
xchg
insl
jns
ljmp
fwait
loop
mov
loopne
lods
xchg
push
push
sti
cli
outsb
jnp
sbb
ja
push
sbb
xchg
xchg
xchg
xchg
xor
sbb
pop
mov
in
push
je
lret
stos
sbbl
aam
mov
add
loopne
mov
sub
js
cmp
mov
jg
sbb
sbb
mov
push
lret
inc
and
je
test
cld
or
and
jne
mov
sbbb
add
sti
outsl
inc
sbb
mov
cmp
mov
cli
xchg
cwtl
xor
jg
pop
cmp
pop
xchg
mov
insb
and
je
imulb
es
xchg
dec
imul
cltd
inc
mov
sub
jne
sahf
ja
mov
loopne
mov
ljmp
mov
ret
enter
jmp
fstps
lret
xchg
fwait
push
sub
das
xor
xlat
and
divl
push
daa
jb
out
in
adcl
mov
cmp
dec
cmpl
mov
pop
addr16
pop
sbb
add
add
ret
sbb
ljmp
mov
cmp
mov
sbb
xchg
pop
outsl
fbstp
add
popa
std
xchg
dec
clc
mov
cs
iret
ljmp
bound
out
add
fistpll
sub
test
mov
xchg
adc
xchg
fmuls
adc
xor
mov
shrl
andnps
mov
imul
fs
enter
inc
push
or
mov
lock
cmpsl
scas
push
roll
jl
popf
xor
dec
push
pop
adc
enter
cwtl
sahf
cmp
push
sub
dec
inc
cmp
inc
sub
sbb
std
addr16
rorl
mov
fnstenv
sti
cmpb
adc
pop
pop
or
adc
rcll
setge
push
lods
into
jl
jnp
sahf
adc
xor
jmp
xchg
movsl
stc
scas
enter
iret
mov
outsl
cli
mov
loop
popf
mov
mulb
dec
cmpsb
cwtl
test
add
lahf
clc
and
pop
loopne
in
adc
lods
mov
int
imul
int3
push
loop
popa
pop
add
in
ss
mov
shrb
dec
out
nop
push
sub
sub
inc
lahf
inc
loopne
shrb
push
inc
adc
lret
lahf
pop
jnp
or
mov
push
inc
jo
leave
gs
fucom
mov
mov
sbb
popa
decl
into
push
hlt
xlat
mov
ja
sar
iret
pop
xor
popa
sbb
mov
xlat
mov
icebp
push
out
daa
push
xor
dec
adc
ja
cmp
popa
mov
or
outsl
enter
repnz
sub
in
lds
je
dec
pop
dec
adc
les
lods
leave
sub
jne
sub
gs
mov
rcll
xlat
cmpsl
mov
out
push
mov
jg
lahf
in
lds
sbb
inc
iret
imul
push
xlat
scas
fmulp
xchg
jnp
pushf
mov
sti
std
or
mov
insb
stc
shl
clc
stc
sub
jnp
nop
out
test
ds
insb
and
daa
push
dec
cmpsl
jno
jle
das
popa
add
mov
dec
mov
inc
idivl
repnz
cli
popa
push
jle
cmp
or
cmp
nop
mov
pop
adc
cmp
repnz
push
shrl
cmc
mov
arpl
xor
xor
add
fnstsw
repz
adc
jp
jmp
fisubrs
sub
testl
and
xor
idivl
xchg
adc
cmpsl
sbb
jl
pop
or
and
inc
cmpsl
js
mov
jmp
ret
sbb
xlat
dec
popa
push
lock
push
scas
aas
jmp
faddp
sub
push
scas
lock
push
je
clc
push
and
test
pop
addr16
add
aas
pop
scas
aaa
mov
ja
jle
mov
jg
imul
dec
sub
in
add
mov
and
lret
adc
test
adc
fsubr
fdivr
jns
shl
push
repnz
leave
and
mov
sbb
pop
xor
mov
cmp
clc
sub
pop
mov
mov
or
icebp
test
adc
jne
test
cmp
and
test
xor
rep
outsl
and
pusha
xor
shlb
adc
sbb
dec
addl
inc
adc
jb
mov
repnz
sub
xor
rcrl
jg
add
adc
cmp
jmp
jp
mov
scas
sahf
mov
sahf
repz
mov
mov
xlat
cmp
cmp
or
das
mov
pop
push
into
push
sub
movsb
popa
xchg
push
ret
adc
sub
es
xor
stc
push
stos
shlb
mov
dec
pop
cmp
mov
clc
dec
jae
or
pop
ret
and
push
lret
enter
cmp
jecxz
lea
dec
data16
cmp
cmp
xchg
push
clc
add
or
add
jae
push
das
push
das
out
dec
and
adc
iret
and
pushf
ss
popf
add
inc
mov
xor
xchg
test
sub
das
out
test
xchg
pop
fiadds
or
jl
lock
insl
jno
lcall
fstl
sbb
mov
dec
aaa
leave
xchg
jb
jb
in
rcll
dec
ds
es
jno
cmpsl
mov
and
fsubrs
out
outsb
imul
ja
daa
pop
push
cmc
mov
sub
stos
scas
mov
mov
insl
adc
iret
sbb
test
subb
test
mov
mov
dec
mov
mov
shr
add
add
call
and
lods
js
cmpsb
insb
fnstsw
pop
lcall
imul
mov
cmp
cwtl
xchg
push
dec
mov
xlat
xchg
add
mov
test
hlt
xchg
mov
mov
xchg
and
pushf
shrl
pop
ret
mov
stos
sbb
gs
jns
pop
jp
sub
scas
xchg
or
test
inc
testb
jl
mov
or
sbb
std
imul
pop
push
sub
mov
sub
pop
add
sbb
adc
mov
push
ds
cs
jae
lcall
jp
sbb
adc
dec
icebp
push
mov
jg
mov
data16
shll
mov
pusha
imul
sahf
leave
jecxz
fisubl
lcall
cmp
jg
ss
jo
or
and
mov
mov
cmp
ss
movsb
cld
pop
xchg
push
xor
shlb
pop
cmp
addr16
xchg
and
inc
rcrl
cmp
cmpsb
and
out
movsl
stc
jne
mov
xor
add
data16
pop
cmpsb
xchg
add
cmc
pop
aad
pushf
dec
xor
sbb
add
pop
neg
push
add
sub
inc
std
cmpsb
lahf
add
test
jle
pop
inc
dec
dec
clc
jge
adc
sti
and
fiadds
mov
mov
fsubl
mov
test
stc
jnp
jp
cmp
mov
pop
jo
inc
jno
mov
or
enter
mov
jb
xor
pushf
and
jns
mov
sbb
xor
jnp
stc
loope
lea
cmp
ud1
mov
jb
sbb
push
jnp
mov
pusha
xchg
loop
mov
rorb
push
lea
push
lods
xor
arpl
loopne
jge
lret
js
pusha
or
and
test
pushf
leave
push
xchg
rolb
aas
xor
xchg
pop
inc
add
stos
sbb
inc
mov
icebp
das
movsl
mov
adc
jecxz
xor
dec
movsl
xor
and
sbb
cmp
out
dec
mov
cmpsb
inc
sub
test
mov
or
shll
ror
xchg
pushf
mov
insl
sub
push
and
cmp
dec
cltd
mov
lcall
push
daa
shll
scas
xchg
sar
adc
dec
aaa
xor
cld
mov
sti
fcoms
hlt
in
leave
push
lea
les
movsl
sahf
sbbl
aad
jg
sbb
div
orb
push
cltd
sbbb
push
dec
mov
and
jne
inc
and
pop
push
push
movsl
rcl
cmp
pop
mov
inc
mov
and
lods
inc
cmp
mov
imul
xchg
push
scas
xor
xor
push
int3
lahf
push
addb
mov
lds
xchg
jo
xchg
and
mov
xchg
pushl
ds
lock
mov
cli
cmp
dec
xchg
mov
add
jp
ja
jge
pop
sbb
and
or
in
xor
mov
enter
pop
mov
push
jb
idivb
mov
and
sub
test
push
call
lret
bound
pop
mov
data16
fmuls
push
jae
cmp
pop
rcrb
ds
outsb
cmc
add
rcl
mov
cmp
rorb
mov
sbb
nop
pop
mov
mov
mov
fcoms
mov
mov
xchg
scas
int
push
ljmp
push
dec
or
rorl
out
stc
adc
call
inc
notb
jge
sub
pop
mov
mov
pop
popf
jb
stos
addb
push
mov
data16
clc
sbbl
mov
imul
pop
fstps
into
push
inc
mov
add
or
adc
sbb
aas
stc
ljmp
lea
pop
jecxz
jbe
int
sbbl
adc
jbe
shlb
iret
adc
pop
aad
pop
mov
in
adc
lret
xchg
adc
pop
and
dec
ja
mov
xchg
into
stos
enter
fs
rcll
adc
rorl
mov
insb
jae
int3
xchg
rolb
xchg
cmp
mov
push
shlb
jne
or
cs
add
out
add
dec
mov
xor
call
inc
push
pop
fisubrs
movsb
mov
fisttps
loopne
hlt
gs
or
adc
bound
dec
test
sub
pop
scas
xchg
xor
ret
fimull
push
sub
jg
push
mov
jecxz
mov
xlat
cmc
push
jmp
sbb
enter
add
es
rol
adc
jns
xchg
or
mov
sbb
adc
sbb
mov
xchg
lahf
out
test
mov
inc
xchg
je
xchg
ja
push
or
push
pop
adc
push
cld
mov
stos
mov
jmp
call
ja
xor
jbe
sbb
xchg
cltd
or
iret
xchg
in
mov
pusha
push
sarl
jmp
out
jmp
dec
fldcw
jmp
xchg
adc
pop
dec
pop
int3
and
jns
lds
out
imul
test
add
mov
stos
lret
mov
pop
mov
cwtl
in
les
clc
popa
pop
dec
out
and
cli
pop
rcrl
jecxz
ds
rclb
mov
mov
adc
cwtl
mov
adc
cwtl
xchg
sbb
mov
cmp
sbb
scas
sbb
mov
iret
sti
mov
xchg
cmp
xchg
push
cmc
insl
mov
fdivrs
adc
xchg
aas
dec
sahf
add
sarl
imul
scas
dec
fdivp
aad
mov
xchg
das
dec
mov
push
shlb
cmp
jne
sub
add
xchg
sbb
or
push
lahf
cmpsl
stos
in
adc
gs
cwtl
push
mov
mov
loope
lods
inc
mov
cmpsl
sub
das
jae
push
add
mov
dec
or
iret
data16
xchg
mov
and
je
bound
and
push
mov
ljmp
pushf
cwtl
mov
add
pusha
pushf
lock
jb
sbb
jmp
leave
mov
mov
mov
sub
inc
mov
xchg
fwait
or
pop
sbb
lods
outsl
dec
movsb
cld
arpl
fwait
int3
out
mov
add
loop
xor
cmp
fisttps
negb
outsl
jle
pusha
in
cld
cmp
mulps
sub
fildl
jp
popa
inc
sbb
push
or
lock
ficomps
rorl
mov
jns
std
ret
lret
ljmp
sbb
pop
aas
and
mov
sbb
addr16
leave
and
xchg
pop
gs
sbbb
xorl
inc
ss
jb
mov
dec
and
gs
out
xlat
pop
pushf
pop
xchg
xor
repz
out
movsb
mov
xlat
jge
je,pn
shrb
sarl
xchg
out
aaa
push
data16
cmp
lods
testb
icebp
mov
loop
push
jb
sbb
xchg
xor
jmp
movsl
mov
mov
ds
mov
inc
mov
data16
ret
or
push
adcb
mov
cs
movsl
xor
inc
icebp
jmp
cmp
scas
pop
adc
insl
mov
int3
imul
push
jp
sarl
in
rol
pop
sub
xchg
xlat
sub
or
or
mov
pop
jnp
push
mov
mov
inc
imul
adc
or
rcll
dec
xor
out
mov
xchg
xchg
jb
push
mov
xlat
dec
shll
mov
std
or
outsl
mov
sub
xor
adc
in
cmp
movsb
aaa
dec
fwait
inc
lods
insb
xor
push
adc
push
insl
inc
popa
test
sbb
int3
daa
rcrb
and
ret
int
negb
outsb
fwait
and
push
adc
int3
xchg
cmp
rolb
sub
insl
push
mov
adc
xchg
repz
rorb
ja
mov
testl
lret
jle
mov
xchg
ja
inc
mov
jnp
lret
adc
inc
mov
repz
je
mov
test
pop
jo
into
imul
nop
call
jae
lock
mov
ja
pop
outsb
inc
or
dec
mov
or
loope
fisubrs
jg
mov
daa
jns
fs
cmp
pusha
fwait
pushf
sbbl
gs
cmpsl
mov
push
in
adc
push
dec
pop
xchg
stos
iret
repz
fstpl
inc
dec
ret
adc
aas
xchg
push
nop
sub
sahf
out
mov
mov
ret
sbb
cld
pop
and
pop
dec
ret
and
push
dec
dec
mov
mov
fcmovnbe
daa
jnp,pn
aaa
cmp
dec
sbb
mov
ret
pop
pop
sbb
and
xchg
sub
inc
or
icebp
mov
imul
dec
push
aas
sbb
push
dec
inc
test
sar
aad
ss
sbbl
inc
stos
xchg
xor
lahf
dec
sahf
mov
mov
mov
xchg
adcl
sub
pop
in
jo
rcrb
sub
and
xchg
jae
pop
into
rcrl
outsl
rorl
mov
push
sub
push
loop
jbe
xchg
jmp
test
cs
sarb
xlat
popf
enter
in
cmp
mov
mov
int3
pop
mov
int
cmp
add
mov
pop
dec
sbb
subb
dec
fwait
mov
in
add
and
xchg
jbe
or
or
repz
insb
lret
pop
imul
insl
fstpt
adc
in
and
adc
in
cmp
ds
out
lcall
sub
jno
push
xchg
aam
es
mov
inc
aaa
adc
adcb
push
push
lahf
dec
mov
xchg
dec
jo
in
adc
imul
inc
adc
lcall
aam
cmp
cmp
sbb
lods
js
std
xchg
lcall
add
aad
add
insb
xor
aas
es
lock
inc
leave
mov
cmp
rclb
aaa
xchg
cwtl
decl
in
push
cmp
sti
cmpsl
shrb
cwtl
inc
push
push
sub
call
leave
mov
add
mov
mov
in
mov
out
stos
ret
pop
mov
push
and
sub
sbb
fistl
pop
out
and
jmp
pop
int3
loopne
out
dec
pop
sub
xchg
mov
out
xor
bound
in
and
stos
stos
ret
stos
fsubrl
cmpsl
lea
inc
dec
in
sbb
or
pop
daa
scas
jg
lea
std
mov
test
ss
or
add
sub
int3
and
sub
inc
mov
cmc
xchg
add
popa
cmpsb
addl
daa
pop
ss
aaa
lahf
pusha
push
push
addr16
ret
cltd
popa
xorl
mov
cmp
mov
and
imul
pop
dec
xor
movsl
xor
shll
inc
fisubrl
cmpsl
dec
adc
test
xchg
xchg
mov
stos
stc
and
cmpsb
add
aad
add
and
cltd
sbb
xchg
in
mov
sahf
jmp
xchg
xchg
int3
pop
sub
inc
push
xchg
ljmp
or
out
mov
fsubl
lret
icebp
fildl
mov
ljmp
fildll
mov
mov
sbb
inc
pop
push
ja
sub
pop
add
lods
inc
incl
imul
mov
cltd
std
jbe
adc
jo
xlat
fildl
inc
rorb
out
jns
mov
xchg
iret
clc
jo
push
sarb
or
cltd
cmpl
ficomps
roll
imul
dec
ja
xchg
mov
loopne
cltd
pop
imul
xor
fnstcw
add
mov
fsubrs
je
stc
loop
push
sub
adc
cli
sbb
dec
mov
mov
repnz
mov
js
pop
es
loopne
mov
stc
frstor
inc
sbb
mov
jmp
pop
sarb
xchg
and
or
loop
mov
addr16
mov
int3
sbb
mov
mov
cmpsb
push
shll
ret
jmp
ss
xchg
pop
sbb
add
daa
cwtl
mov
aaa
sarl
ja
insb
push
cmpsl
xor
or
js
push
xor
rcrb
xchg
std
scas
cmpsb
adc
mov
inc
les
fs
pop
inc
lea
jecxz
data16
lahf
and
outsl
mov
sub
mov
inc
jb
pop
pop
pand
imul
lods
aaa
in
pop
ss
insb
sub
cmp
inc
test
pop
fcmovne
popf
jns
arpl
mov
call
imull
loop
lds
xchg
das
in
iret
sub
mov
add
inc
rclb
sbb
stos
adc
push
pop
fwait
xchg
or
fwait
jae
mov
add
add
div
xchg
shlb
data16
jmp
cmp
fsubl
adc
ja
cmpsb
jmp
out
cld
cwtl
popa
xchg
push
out
pop
loope
pusha
bound
jne
lahf
into
arpl
popf
jno
sub
push
outsb
rclb
fcomp
pop
add
dec
aam
dec
jo
popa
push
pop
inc
adc
sub
fisubs
inc
inc
adc
test
sub
std
xchg
mov
mov
pop
adc
xchg
in
aad
adc
jnp
add
mov
popl
lods
test
aas
mov
int3
lods
enter
ss
push
movsl
les
imul
push
cli
dec
hlt
lcall
push
addl
out
xlat
or
dec
scas
mov
ss
push
pusha
push
inc
push
stos
dec
jmp
push
test
leave
push
in
mov
fcoms
lahf
aas
repz
pop
pop
pop
mov
pushf
mov
cmp
gs
dec
add
sub
popa
daa
fbld
pop
test
add
or
mov
cld
xlat
shll
cmc
int3
push
dec
xor
xor
push
cmp
repz
and
js
mov
mov
adc
or
sub
loopne
imul
pusha
push
popf
test
adc
mov
int
ss
ret
adc
scas
push
xor
xchg
hlt
rorl
adc
js
ja
lods
cmp
in
cmp
adcb
insl
lret
inc
lret
sub
repnz
daa
or
test
sbbl
stc
enter
mov
sarb
sbb
xlat
rorl
inc
pop
mulps
lea
gs
pushf
cmp
sbb
jecxz
and
cmc
aam
xchg
repnz
test
jmp
push
mov
imul
sub
adc
sti
mov
popa
pop
inc
pop
and
sbb
inc
repz
xchg
scas
add
jae
mov
adcl
aaa
aad
push
add
enter
or
sub
jb
mov
sub
cltd
pop
popa
aam
inc
dec
pop
cld
pop
or
mov
xchg
cmp
test
call
aas
adc
int
cld
pop
lea
out
xchg
xchg
pop
xor
push
pop
pop
outsb
std
and
push
int
mov
xchg
xchg
sbb
adc
push
dec
call
jbe
add
push
clc
adc
cs
roll
repnz
loopne
jo
out
or
mov
xchg
add
or
lea
iret
mov
add
mov
outsl
push
lock
or
add
decl
sbb
jecxz
push
or
jnp
shrb
lahf
cli
add
mov
cmp
dec
sar
lods
push
mov
shll
pop
xchg
jge
or
je
jle
jecxz
mov
push
fnsave
stc
jne
push
mov
dec
sbb
movsb
arpl
dec
sbb
xchg
add
movsl
test
aam
lret
ret
xlat
bound
sub
stc
cmp
sub
jo
add
mov
ds
jle
addr16
lcall
sub
cld
mov
mov
sub
stc
xchg
int3
push
movsl
rcrl
fmulp
sti
push
mov
mov
imul
xchg
pusha
pop
fsub
xchg
sub
push
dec
neg
cwtl
cld
mov
stos
push
push
xor
psrad
or
sbb
das
loope
lret
nop
lods
add
int
inc
jecxz
insb
in
add
or
add
in
add
dec
mov
cmp
cmp
aas
repz
loope
icebp
imul
mov
mov
xchg
pop
add
sbb
xor
jns
test
add
testb
add
mov
xchg
iret
inc
xor
cmpl
aam
cmp
add
in
cld
and
sub
mov
and
roll
add
jns
mov
lahf
shll
scas
xchg
mov
fwait
sub
add
pusha
daa
out
pop
das
mov
push
adc
js
ret
cwtl
ljmp
xchg
mov
mov
out
test
dec
test
int
daa
pop
cli
inc
dec
jl
push
cwtl
ds
or
push
fisttpl
callw
mov
dec
jmp
pop
xchg
cmpb
pushf
dec
out
inc
jo
sbb
idiv
mov
mov
incb
add
xor
stos
push
stos
xchg
sub
les
cmp
cwtl
rcrl
dec
loope
mov
add
mov
cmpsb
adc
sub
leave
xor
movsl
call
cmpsl
mov
or
es
popf
out
dec
mov
call
lret
je
mov
cmp
jmp
les
jae
sbb
movsl
in
jbe
or
mov
pop
adc
dec
or
push
mov
inc
imul
cmp
out
push
dec
loope
jbe
dec
rcll
xor
sbb
lret
push
pushl
mov
pop
aas
arpl
push
pop
sbb
jne
out
xchg
and
mov
in
xor
mov
xor
jae
and
pop
out
sti
xchg
push
cmp
push
das
push
adcl
mov
pop
mov
in
push
aas
sub
aas
cld
lods
dec
shl
hlt
push
stos
inc
sub
xorl
fcoml
mov
sub
call
sbb
aaa
dec
cmp
push
popf
shll
pop
cmp
mov
push
push
pusha
pop
orl
or
iret
inc
xor
adc
scas
ja
outsb
je
cmpsb
or
and
inc
mov
push
jmp
inc
fadds
push
or
xor
jno
pusha
dec
ss
cld
mov
lret
inc
mov
cld
in
sub
or
xchg
outsl
add
pop
push
sahf
imul
cmpsb
iret
mov
cmp
popa
jno
mov
mov
pop
mov
jmp
cli
movsl
addl
lea
sbb
xor
jmp
adc
call
cmp
cmp
lods
add
jno
cmp
adc
or
shl
jno
cwtl
xchg
outsb
cmp
or
jns
add
or
mov
mov
mov
inc
cmp
icebp
mov
mov
or
xlat
and
fsts
push
pop
in
pop
sbb
aaa
pop
ja
outsb
cmp
ja
xor
scas
jge
cmpsb
inc
sub
sub
xor
in
push
pop
shr
ljmp
xchg
inc
lods
xchg
xchg
rorb
shrb
cmp
dec
xchg
pop
movl
sub
jle
inc
mov
sub
fwait
adc
jle
pop
push
mov
xor
repz
or
sbb
movsb
and
fisubrl
add
cmp
sahf
and
inc
cmpsb
out
push
inc
les
insb
and
cltd
cmp
add
in
scas
int
test
and
pushf
mov
mov
je
jecxz
outsl
mov
cmp
scas
xor
xchg
add
sbb
stos
ss
repz
mov
ds
pop
je
pop
call
jbe
test
mov
push
or
fucomip
jge
or
cmpsl
cmp
add
jo
pop
scas
lods
test
push
nop
loopne
cmp
dec
stos
and
add
pop
pusha
adc
dec
ficompl
inc
aas
imul
int3
jne
push
add
int3
adc
mov
sbb
dec
in
sarb
and
and
fisttps
xor
add
ror
int
icebp
cmp
inc
enter
shrb
mov
sub
xor
jnp
sbb
sbb
jmp
jmp
xchg
push
frstor
shlb
push
iret
data16
or
adc
or
and
mov
daa
pop
inc
dec
cld
scas
jbe
aas
sub
dec
pop
or
sti
sahf
in
in
or
mov
mov
or
aam
mov
imul
je
mov
xlat
pop
cs
jl
or
shrb
decl
sahf
mov
cmc
stos
gs
jo
lcall
fiaddl
ud0
cli
bound
cmp
mov
out
sbb
dec
out
imull
push
iret
jle
and
inc
ja
adc
add
inc
cmp
inc
dec
imulb
adc
ror
inc
sub
loopne
addl
pop
adcb
mov
popa
adc
pop
idivb
in
or
mov
push
sbb
shll
int3
xchg
xchg
sahf
or
clc
dec
in
inc
in
xor
stos
inc
pusha
dec
xchg
mov
imul
stc
or
jae
cli
jns
cs
jecxz
mov
icebp
rcrb
fnsave
int3
dec
lea
pop
jp
push
jmp
es
mov
ds
ljmp
sarl
jge
mov
sti
xorl
sti
enter
xchg
cmpsb
xor
pop
in
scas
mov
popf
out
xor
fwait
xchg
addr16
vmovntpd
inc
pop
lcall
jl
lret
cmc
jg
jb
addr16
ja
ss
icebp
cltd
mov
pusha
jbe
cltd
and
xor
incl
mov
add
inc
in
pop
cmc
jl
push
fisttpl
mov
push
test
mov
jp
inc
add
and
sub
inc
sbb
fildl
mov
mov
xlat
mov
jns
clc
divl
inc
or
push
cltd
enter
mulb
pop
shll
out
push
outsb
lods
xor
xchg
adc
cmp
les
outsl
sub
mov
mov
shll
pusha
loope
gs
xor
int3
out
adc
jne
adc
cwtl
push
icebp
xchg
and
shl
cmp
inc
fldcw
arpl
jo
mov
jo
adc
xchg
sub
lock
jno
sbb
add
shlb
daa
jo
xor
ja
adc
or
pop
mov
sub
push
dec
and
int
stc
loope
loop
test
arpl
repz
fistps
in
shrl
mov
daa
lock
cmp
adc
sti
fs
aam
dec
sbb
push
mov
xor
sbb
mov
mov
push
lcall
push
popa
inc
ret
sbb
xchg
jl
leave
xchg
sbb
lock
fsincos
jg
fcomp
jl
fildl
xlat
ja
enter
aam
ss
fcmovnbe
jae
clc
push
inc
inc
jnp
adc
sbb
daa
loop
push
or
sbb
mov
mov
repnz
push
push
sub
xor
or
push
test
cmpsb
jb
mov
dec
ret
xor
popa
xor
add
push
cmp
imul
and
and
push
lods
dec
mov
ljmp
cmp
pop
outsl
xor
mov
in
xchg
dec
adc
push
cltd
ret
xchg
imul
dec
sub
psrlq
push
jg
dec
pop
testb
ret
push
cmp
mov
push
out
mov
sub
cmp
sub
notl
push
push
rorb
xor
add
mov
imulb
sub
mov
das
int
push
mov
cli
mov
cmp
mov
xchg
iret
pop
jbe
sub
jge
mov
or
push
shll
popa
pop
pop
adc
movb
adc
rcrb
jno
cmp
rorl
rol
dec
inc
in
repz
sbb
mov
xlat
push
shlb
jle
or
pop
adc
pop
pop
sub
dec
gs
add
out
imul
xlat
jge
fmuls
add
mov
shlb
fisubl
xchg
imul
mov
sub
adc
das
and
dec
sbb
je
nop
add
adc
imul
sub
mov
imul
xchg
mov
and
pop
push
push
stos
movsl
out
mov
jmp
adc
mov
xor
lea
sub
movsl
dec
jb
aas
shlb
jecxz
stc
push
mov
mov
mov
xchg
and
mov
jb
fisubrs
add
pop
dec
jg
in
xchg
mov
rcll
push
call
rorb
mov
jmp
cmpsl
xchg
les
lret
std
lods
mov
popf
sub
sbb
je
or
push
xor
sub
inc
dec
stc
sbb
push
jns
ret
in
xchg
sbb
rorb
adc
pop
adcl
stc
mov
sti
dec
xchg
mov
mov
in
jnp
pop
jnp
out
jp
nop
iret
mov
add
mov
push
sarb
pop
fdivrs
in
push
or
add
add
sbb
cmc
inc
in
int
and
int
hlt
lret
mov
rol
dec
fisubrl
and
sub
outsl
sbb
and
repnz
mov
push
lods
adc
stos
sub
pop
clc
fstps
add
shl
xor
add
cmp
stos
mov
mov
xor
jne
mov
ss
pop
or
mov
movsl
xor
or
jae
popf
imul
add
lock
popf
ret
xchg
lcall
sub
ficoml
loop
sub
iret
mov
jo
js
mov
pop
scas
imul
dec
mov
or
aas
sahf
mov
std
rorb
gs
ret
push
xchg
dec
fimuls
sbb
xor
lds
push
pop
and
and
xchg
test
xlat
push
add
sub
jne
push
pusha
mov
lret
lds
test
xchg
jle
iret
mov
lret
and
pusha
ds
xor
addr16
cmp
stc
xchg
in
je
in
arpl
data16
orb
data16
push
dec
push
ljmp
cmp
je
mov
hlt
aas
sahf
cmp
fnstcw
dec
lock
test
pop
add
shrb
jbe
xchg
sbbl
out
mov
mov
cmp
ljmp
fmull
enter
aam
lds
mov
mov
jl
mov
cmp
jb
or
out
xor
xor
aas
cmc
mov
cmpb
or
pop
scas
leave
stos
mov
or
mov
dec
push
mov
jns
stos
mov
data16
punpcklwd
mov
ficoms
jns
mov
sbb
or
iret
push
into
sar
mov
jnp
addr16
xor
cmp
idivl
cmpsl
jae
push
cmp
xor
push
xor
out
and
ret
pop
sbb
and
out
jle
mov
sub
addr16
cmp
orb
dec
pop
aaa
call
add
xor
loopne
and
jecxz
adc
into
outsl
insl
addb
imul
xor
or
push
das
test
mov
xchg
pop
nop
and
mov
jno
adc
aas
or
add
add
movsb
push
inc
xchg
add
shll
scas
clc
repnz
adc
pop
je
daa
mov
push
sbb
push
pop
scas
movsb
ret
fdivs
xchg
out
fld
jno
cmp
mov
jns
clc
pop
pop
test
push
shrb
leave
dec
fdivl
loope
push
sahf
cmp
mov
repz
mov
fstpl
mov
int3
mov
inc
adc
shr
imul
push
jae
add
sub
sbb
fbld
add
pop
inc
add
out
lahf
cmp
dec
decb
addr16
loope
push
xchg
rolb
mov
adc
rol
push
and
imul
xor
out
sbb
out
int
push
insb
mov
dec
lea
ret
xchg
hlt
fnstcw
sahf
xchg
js
std
outsb
sbb
mov
mov
adc
popf
pop
daa
pushf
loope
sbb
or
jl
cmp
cmpsb
add
les
jecxz
xchg
add
into
sbb
addr16
sbb
add
in
xchg
lahf
xor
mov
stc
scas
rcll
cmp
cld
scas
movsb
sahf
icebp
cmc
arpl
ret
lock
sti
leave
inc
lahf
mov
jns
negl
inc
jmp
dec
dec
mov
mov
stos
inc
insl
call
or
out
popa
add
call
mov
pusha
add
ljmp
and
sub
out
add
es
out
jne
pop
adc
or
xlat
xchg
adc
add
repz
sub
jae
clc
cmp
push
pop
mov
sbb
and
ret
or
dec
out
enter
testl
add
push
and
mov
fildll
lods
pop
sub
and
popf
push
cmpb
and
sub
sbb
mov
or
fsubr
daa
es
fnstcw
test
sbb
jns
mov
or
out
in
loope
fnstsw
icebp
or
cld
aaa
or
mov
push
sbb
addr16
mov
dec
js
mov
jo
xchg
sub
cmp
xor
add
dec
mov
sbbl
clc
push
sbb
out
cmp
lcall
outsl
mov
fisttpl
repz
das
pushf
push
cmpsb
and
jge
test
out
mov
lcall
mov
sub
into
push
or
ret
roll
test
add
insl
mov
adc
jle
ss
adc
add
or
sub
sub
jecxz
or
pop
cmpsb
add
in
mov
jp
push
aaa
shl
jno
inc
xchg
inc
enter
mov
add
pop
pop
das
mov
mov
sbb
mov
jle
clc
andb
pop
pop
std
aaa
repz
clc
dec
or
lea
cltd
inc
xor
push
cltd
imul
push
sub
daa
mov
xchg
out
jl
mov
cmp
nop
mov
imul
ret
mov
sub
push
sbb
ds
adcl
adc
lock
out
cmc
in
adc
das
dec
sub
cmp
xor
ret
lock
out
stos
sbb
jp,pt
jno
out
sub
adc
out
xchg
pop
call
sub
adc
rcl
das
push
arpl
pop
test
loop
in
mov
fistl
clc
jge
jp
bound
int3
cs
xlat
jmp
add
mov
jmp
pop
mov
cmp
aas
and
jnp
jbe
subl
mov
rol
dec
jb
divb
out
in
mov
call
mov
jge
pop
bound
sub
mov
popf
imul
stos
pop
cmp
push
inc
xor
aaa
mov
int
fsts
push
ret
dec
jecxz
int3
popa
add
and
cmp
insb
push
in
mov
mov
jnp
fimuls
mov
xlat
jbe
mov
jp
dec
push
inc
int
in
fs
mov
mov
js
cmp
int
jnp
cmp
inc
mul
nop
aad
or
lock
dec
dec
aas
mov
test
dec
dec
sbb
dec
pop
scas
push
andl
mov
ds
andl
fstl
sub
in
inc
ret
sbb
test
sub
in
in
lods
adcb
xchg
out
push
and
mov
sbb
adc
rcrb
fbld
pop
push
lock
test
cmp
push
adc
out
cmp
or
mov
adc
fsubs
orb
or
xor
pop
out
cmpsl
add
stos
jbe
and
es
fldl
andl
sub
in
popf
and
jl
mov
rcll
pop
dec
inc
jmp
mov
ss
cmp
sub
add
aas
push
gs
xchg
jnp
pop
mov
clc
and
or
mov
pop
push
repnz
pop
cs
mov
mov
cmp
jge
pop
cmp
xchg
cmp
xlat
imul
stc
jb
jl
sbb
rol
jle
pop
dec
popa
mov
adc
decl
sub
cmp
faddl
or
mov
js
test
out
subl
mov
and
inc
push
cld
cmp
adc
lods
sub
push
scas
les
inc
fwait
mov
fistpl
jns
mov
jb
jl
shlb
push
push
arpl
and
push
add
mov
shl
xchg
les
and
sbb
pop
cmp
xchg
aam
fnstenv
testb
std
adc
sbb
shl
jmp
dec
xor
xchg
subb
imul
xchg
mov
pushw
fs
scas
or
adcb
xor
jo
mov
xchg
movsb
xchg
pop
loope
inc
sarl
div
xchg
inc
add
iret
adc
push
pop
outsb
pop
xor
es
and
scas
scas
or
add
jns
xchg
push
cmp
mov
push
inc
pop
mov
pop
xor
arpl
push
rcr
xchg
vmwrite
es
cs
inc
pop
sbb
sbb
or
and
leave
inc
adc
xchg
idivb
pop
das
movups
add
pop
sti
fcomi
insb
push
cmp
jnp
jmp
movsl
sbb
jecxz
xor
cmp
dec
js
int3
pop
add
or
fsub
add
xor
rcll
clc
add
add
sub
arpl
ja
jb
jae
mov
push
mov
loope
loop
add
xor
adc
lcall
hlt
out
mov
and
mov
push
add
inc
mov
cmp
int
out
test
loope
push
jns
bound
fmull
popf
cmpl
fs
lods
jmp
inc
fisttpll
and
xorb
xchg
movsb
jae
add
push
leave
jge
loope
sub
out
out
call
stos
xchg
or
fsubs
das
dec
push
cmp
outsl
stc
or
cli
out
pop
inc
lock
das
adc
ljmp
aam
mov
es
mov
add
jb
push
mul
xchg
or
arpl
repnz
aam
test
addr16
pop
je
mov
and
dec
std
or
addl
or
fwait
out
cmp
push
mov
mov
ljmp
test
mov
xchg
jbe
frstor
xor
cmpsb
xor
push
les
inc
lahf
scas
sti
leave
jp
cmpsb
push
mov
cmp
sbb
adc
sub
mov
je
push
mov
test
repnz
punpcklwd
mov
jl
sbb
out
xor
test
test
hlt
sbb
test
or
xchg
push
cli
hlt
iret
scas
dec
cmp
push
xchg
add
inc
jecxz
mov
sti
and
mov
dec
addl
les
dec
sbb
jp
iret
daa
fistpl
dec
lret
push
xchg
cmp
popf
dec
fisubrl
adc
add
mov
jge
jo
cmp
mov
sbb
stc
ja
inc
mov
pop
mov
inc
and
inc
imul
mov
out
out
shl
popa
repnz
pop
jg
stos
loopne,pn
int3
gs
inc
pop
jne
mov
mov
imul
push
pop
cmp
call
adc
or
mov
pop
fcmove
cmp
cmp
xor
jecxz
xchg
jnp
cmpsl
aad
or
shrl
pusha
pop
je,pt
cmpsb
out
mov
adc
lock
add
dec
addb
xchg
jmp
mov
fmull
mov
inc
fldenv
dec
out
xchg
pop
push
ja
cmc
cwtl
imul
mov
mov
lret
shll
sbb
movsb
xchg
push
xor
cmp
lahf
xor
push
inc
mov
xor
mov
subl
pop
lods
call
sar
movsl
jle
sbb
xchg
jnp
ds
bound
jae
jmp
ret
dec
or
and
loope
add
mov
hlt
les
cs
mov
cmp
outsl
sbb
add
test
and
repz
ds
dec
scas
stos
ret
mov
jns
fldt
out
andb
or
or
dec
fwait
sbb
call
sahf
sbb
inc
push
jns
push
fcoml
mov
sub
pop
inc
inc
inc
inc
cld
dec
push
pop
xor
mov
call
movsb
sub
adc
mov
mul
mov
sbb
adcl
data16
or
int
in
clc
lret
push
adc
dec
lock
popl
lds
stos
fildl
push
cmp
outsl
sub
fcoms
mov
lods
mov
scas
add
in
mov
orl
or
repz
cwtl
sahf
jae
xchg
cmc
icebp
pop
call
gs
fwait
cld
xor
cmpsb
das
sub
mov
fwait
mov
in
lea
dec
push
call
aas
xchg
add
adc
add
sub
sbb
xchg
daa
in
cltd
test
xchg
ret
push
daa
push
pop
and
push
jnp
pop
popf
call
sbb
pop
inc
cmp
loopne
lods
lds
xlat
fsts
and
xor
xor
out
inc
pandn
adc
xchg
or
test
out
loopne
ret
inc
mov
adc
std
lock
cwtl
sbb
pop
clc
in
ja
inc
sbb
sub
lods
mov
pop
in
push
jb
xorl
outsl
jle
ja
aas
int3
jo
lret
adc
mov
xchg
or
or
fstpl
xor
adc
cli
js
mov
ss
adc
ret
add
mov
mov
pop
fldcw
xor
into
mov
jge
jmp
or
add
test
push
add
cmc
fistpll
and
mov
test
aam
stos
pop
adc
cmp
sub
pop
sub
jp
test
test
flds
jecxz
sub
push
pop
jne
or
xor
loop
xchg
ss
adc
mov
fmull
mov
mov
das
sbb
fs
push
cmp
add
mov
test
sbb
mov
sbb
lock
out
sub
xor
xchg
pop
pop
or
aam
adcb
sar
inc
jns
dec
inc
arpl
aaa
stos
aam
mov
cmp
xchg
adc
cmpl
xchg
out
lret
idivb
and
ds
loopne
scas
fldenv
imul
icebp
lock
and
push
cmpsb
loope
and
test
pusha
in
xchg
mov
int
mov
jecxz
int3
mov
shlb
pop
addb
add
ret
stc
jge
mov
fadds
jmp
cmpsb
in
push
pop
push
adc
dec
push
and
add
dec
sub
add
movsb
leave
scas
insl
mov
jns
dec
jae
repz
cmp
stc
test
add
ss
iret
pop
inc
lret
jae
cmp
mov
jecxz
mov
cmp
xchg
test
enter
sbb
aaa
stos
sbb
mov
call
mov
ror
test
mov
test
stc
pop
notl
jbe
loopne
mov
daa
pusha
stos
jnp
in
jns
fistpl
push
fmull
jae
mov
mov
movsl
and
subb
adc
in
push
arpl
jmp
jge
xor
mov
mov
sbb
jnp
cmp
xor
call
mov
popf
cltd
push
or
mov
mov
stos
jl
mov
daa
sbb
in
movsl
mov
hlt
mov
loopne
add
sub
sbb
jmp
adc
pop
mov
push
dec
popf
inc
movsb
mov
pop
or
std
sbb
adc
adc
push
test
clc
movsb
cmp
out
jle
int3
sub
xchg
jo
mov
fisttpl
out
jns
mov
add
xor
mov
pop
xor
mov
sub
popf
dec
xor
movsb
mov
xchg
pop
xor
inc
addr16
push
fists
inc
test
sbb
mov
test
pop
out
nop
mov
xor
sti
into
pop
lods
dec
jae
mov
gs
imul
stos
pop
pop
dec
into
iret
jg
lock
int3
and
mov
push
pusha
xchg
in
call
inc
in
jae
sar
hlt
sbb
jmp
aad
add
fwait
sti
fildl
popf
xor
int3
mov
aam
aam
xchg
inc
cli
sbb
xor
mov
jnp
jb
shr
or
mov
adc
sub
rcl
mov
sub
repnz
subb
add
cmp
xor
adc
pop
call
xchg
gs
ljmp
aad
outsl
jbe
in
mov
and
cmpl
jns
mov
jge
jecxz
mov
mov
sbb
sub
jno
imul
in
div
push
scas
cmc
sub
and
cs
mulb
and
push
mov
cwtl
out
and
ret
cmp
jns
mov
ss
int3
movsl
pop
xchg
push
test
std
pushf
mov
and
xchg
cmpsl
jg
pop
xor
call
ret
pop
arpl
cmp
jb
dec
dec
sbb
rcrb
sub
or
push
daa
daa
jb
std
jle
xchg
out
add
insb
test
cmp
loopne
adc
fildl
call
cmp
push
add
or
pusha
sbb
mov
mov
inc
cmpl
ficompl
in
ja
pusha
in
dec
int
stos
xchg
leave
ss
mov
in
and
mov
scas
adc
js
jo
adc
push
inc
ljmp
sub
jb,pn
pop
and
jl
dec
push
aad
mov
testl
cli
inc
dec
dec
iret
incl
inc
xor
jo
and
xor
ds
adc
pop
mov
repz
or
lds
test
lahf
sbb
pop
sub
pusha
lods
test
jno
pop
cmp
ja
push
pop
pop
stos
mov
gs
scas
insl
pushf
es
pop
pop
inc
cmpsb
lcall
popa
fcompl
rolb
iret
ficomps
lret
jae
lret
icebp
push
subb
and
inc
shlb
adc
lods
sti
gs
into
xor
inc
mov
xlat
cmpsl
dec
jns
rorl
pop
cmpl
mov
mov
test
jge
mov
scas
and
pop
cmp
sti
sub
mov
jl
rorl
test
mov
sbb
loop
dec
mov
sub
rcl
cmp
add
aas
sub
and
insl
fsubrl
repnz
mov
jns
or
push
adc
pop
out
shll
pop
or
rcrl
mov
stos
push
push
cwtl
pop
jg
pushf
das
mov
sahf
pop
cmc
xor
fwait
xor
and
ss
and
out
int3
jmp
and
xor
push
dec
mov
xchg
jecxz
push
ret
sub
out
jae,pt
and
adc
push
dec
and
lods
addl
pop
clc
push
pop
sub
fnstsw
cmpsb
out
fwait
les
push
das
mov
cltd
in
sub
sub
push
adc
add
in
jle
jae
cld
stos
mulb
cmp
sarb
fadd
shll
mov
adc
rcll
cmc
cmp
inc
std
mov
push
aam
int
mov
jmp
les
sarl
lcall
adcl
xlat
bound
shr
push
mov
cmpsl
fcomps
adc
xor
cwtl
or
daa
pop
or
push
cwtl
int3
leave
sub
jmp
jo
cmp
movsl
enter
ljmp
jg
subb
scas
js
int
test
cwtl
push
mov
pop
pop
lret
iret
mov
int3
filds
pop
repnz
add
out
xor
in
mov
lret
mov
adc
hlt
add
mov
daa
fcoml
mov
pop
in
cli
pop
pop
and
jecxz
frstor
xchg
push
cvtps2pd
cmp
xor
adc
jge
shll
add
lret
incl
fisttpl
stc
mov
push
mov
insb
and
or
sub
dec
mov
xor
insb
ss
ljmp
sub
cmp
das
mov
or
dec
xchg
push
jnp
std
mov
push
push
std
xor
sub
icebp
insl
pop
cmp
dec
cwtl
mov
or
cmp
cmp
in
clc
xlat
pop
pop
cmp
and
dec
xchg
jne
sbb
sub
clc
mov
xor
in
and
pushf
sbb
cmc
sub
mov
mov
imul
xchg
mov
pop
or
pusha
jecxz
mov
push
pop
aam
dec
mov
mov
dec
andb
jecxz
inc
arpl
adc
mov
mov
lods
lods
outsb
dec
test
push
icebp
int3
jp
dec
repz
sbb
clc
lcall
jge
sti
cmp
popa
movsl
repz
cwtl
popa
push
cmp
pop
mov
popf
pusha
nop
mov
mov
ss
add
xchg
add
xor
hlt
test
ret
dec
push
inc
mov
ret
rcll
dec
pop
repz
mov
aaa
cmp
mov
mov
mov
ror
xchg
fwait
xchg
jge
inc
insl
lods
pop
xchg
movsl
out
sbb
fiadds
out
arpl
adc
mov
cmp
das
cmp
inc
stc
or
push
test
ja
in
dec
mov
mov
xor
std
insb
jno
leave
sbb
xor
pop
add
daa
test
sahf
in
ja
leave
xchg
rep
pop
std
mov
mov
add
sub
data16
adc
ss
mov
out
cmpsb
sti
sahf
jg
ds
and
add
jecxz
je
pop
mov
sti
orb
pop
push
movl
rolb
cld
cmp
xor
outsl
dec
lcall
aaa
data16
testl
mov
test
xlat
add
pop
adc
addr16
xor
inc
add
in
sbb
push
xchg
test
scas
add
sub
add
pushf
and
into
push
and
call
or
sbb
test
and
cmpsb
jle
fnsave
pusha
pop
mov
imul
xor
mov
add
push
jnp
sbb
dec
cld
push
pop
out
push
dec
adc
rcrb
call
rcrb
pop
adc
dec
lret
mov
cmpsb
pop
ds
cmpsb
xchg
out
add
pop
mov
out
mov
jge
and
dec
sbb
ret
cli
imul
push
mov
ret
or
jg
mov
cwtl
dec
push
mov
in
mov
loopne
maskmovq
idivl
mov
push
bound
lahf
mov
je
enter
and
push
pop
mov
in
mov
pop
ja
loopne
shll
sbb
lret
mov
test
jmp
cmpsb
int
lahf
jmp
fidivrl
testl
pusha
jnp
xchg
mov
lods
and
or
mov
jg
jl
iret
or
or
les
fs
and
xchg
inc
mov
movsb
push
dec
mov
add
sbb
mov
fnstsw
sbb
dec
aas
xchg
cmp
mov
pushf
pop
leave
add
cmpsl
mov
push
pop
push
fnstcw
add
movsl
jbe
repnz
and
test
jle
cmp
inc
push
adc
mov
jne
jg
xchg
call
test
iret
fdivl
xor
mov
inc
icebp
movsb
pop
cmp
and
divb
jge
or
jo
gs
mov
xor
cwtl
mov
mov
fdiv
xor
pop
call
xchg
es
out
adc
xchg
jecxz
jbe
scas
adc
push
mov
xlat
into
jns
out
ljmp
push
stc
pusha
outsl
sub
sbb
mov
dec
sbb
dec
das
arpl
enter
xor
loope
xor
lea
stos
sub
loop
ficoml
jp
fprem1
xor
add
ret
jbe
sahf
jbe
js
out
lea
es
mov
out
mov
mov
or
loopne
jbe
adc
out
cmp
rcr
or
cmp
sub
jbe
cwtl
dec
mov
mov
pop
dec
cmp
push
xchg
sbbl
stos
xchg
test
mov
fstpl
out
shlb
leave
mov
mov
clc
push
imul
aam
dec
pop
iret
cmpb
cli
stc
add
adc
push
push
leave
fcmovnu
inc
jnp
gs
fisubs
and
xchg
test
xor
arpl
and
pop
adc
pop
mov
gs
notb
xor
xchg
pop
jecxz
pop
xlat
mov
pop
clc
stc
push
lcall
ret
fsub
and
popa
fildl
mov
mov
mov
loope
mov
xchg
repnz
sbb
je
xchg
mov
fwait
or
shll
adc
adc
cmp
mov
mov
mov
mov
push
or
jnp
dec
inc
sub
stc
sarl
lods
mov
js
adc
mov
cmpsb
in
cmp
cmp
int3
stos
pop
fwait
movsb
inc
xor
xor
xor
xchg
mov
jnp
sub
nop
and
repnz
dec
or
sbb
mov
xchg
insl
std
fildl
pop
js
notl
aad
fsts
ret
repnz
scas
pop
nop
inc
or
adc
out
fistl
xchg
mov
dec
mov
test
subb
and
xlat
clc
pop
test
ja
sbb
xchg
jnp
mov
jl
push
push
push
aaa
jg
call
xor
adc
xchg
rcl
scas
add
cmc
push
dec
testb
or
das
jne
incb
mov
mov
mov
mov
and
rcr
jae
pop
xchg
lret
sub
addr16
sarb
fwait
je
push
jp
mov
lods
mov
cmp
fwait
mov
jbe
or
mov
scas
mov
test
jno
or
adc
pop
out
sub
repnz
jp
inc
fwait
repz
cltd
cmp
cmp
pop
stos
push
pop
pop
pop
aas
sub
dec
in
cmpb
jge
push
xor
add
jge
cmp
rcl
hlt
pusha
cmp
mov
fisttpll
fsts
loopne
sub
cld
insl
adc
mov
xor
inc
cmpsb
sub
xrelease
mov
mov
arpl
cmp
jg
pop
lods
stos
push
test
cmc
inc
sbb
push
sbb
aaa
xchg
lret
call
jle
adc
or
xchg
inc
scas
cmp
notb
mov
ds
pop
add
sub
fs
insl
int
scas
push
loop
loope
inc
mov
sbb
lods
mov
stos
int3
mov
fdivrs
add
dec
cs
mov
lods
sub
mov
inc
and
out
aad
aam
out
push
out
adc
cmp
xor
movsl
es
or
add
mul
int
xchg
mov
bound
lahf
cmp
addr16
ror
mov
imulb
cmp
in
fcmovnu
mov
sbb
mov
sbb
jecxz
mov
jae
sbb
or
mov
lea
insl
outsb
sub
roll
fxch
inc
xchg
sahf
pop
pop
and
fwait
push
and
dec
mov
sti
cmp
in
in
dec
icebp
movsl
aad
sub
dec
push
jno
mov
aam
dec
sub
cld
repnz
mov
push
aaa
lret
in
xchg
das
and
push
jecxz
cmpl
sbb
popf
out
js
adc
stc
dec
pop
pushf
xchg
jle
push
repnz
decl
mov
out
mov
mov
or
lahf
add
clc
movsl
pop
sbb
xchg
stos
daa
xor
les
xor
scas
test
adc
mov
dec
call
lea
jns
std
inc
sarb
movsl
es
addl
pop
fmull
ficoml
jp
pop
sub
mov
mov
mov
mov
mov
les
and
lea
cmp
or
lea
mov
popa
and
xor
stos
pop
and
sbb
call
fsubp
in
sahf
cs
repnz
das
aad
sbb
push
add
pusha
mov
jbe
and
aam
pop
sahf
push
cmova
sub
adc
mov
push
mov
sbb
mov
pusha
pusha
or
mov
sbb
mov
mov
mov
push
js
mov
push
inc
and
subl
adc
inc
scas
mov
es
test
stos
xor
les
and
imul
pop
movsl
sub
mov
call
mov
fists
adc
out
dec
inc
mov
lea
jo
cld
in
scas
sbbb
pop
sahf
aam
inc
or
cmpsb
and
ljmp
xor
repz
dec
mov
les
lahf
roll
fs
cmp
std
xchg
mov
jne
cmp
inc
inc
fwait
or
repnz
stos
or
jne
fadds
mov
daa
pop
test
lret
xor
mov
or
mov
xchg
sub
paddusw
push
adc
push
cld
mov
rcr
incl
push
xor
repz
or
call
xchg
sbb
xchg
jbe
fcoml
cmp
mov
aaa
mov
pop
loope
aad
fs
out
subl
xchg
loope
cltd
outsl
xor
cmp
push
mov
or
mov
inc
and
push
inc
mul
xchg
lea
push
aas
push
xor
repnz
push
xchg
sbbl
mov
aam
in
adc
aad
daa
movsb
and
push
xor
jae
insb
mov
aam
and
pop
push
xor
or
adcl
nop
fsubrs
cmp
lcall
jecxz
cli
xchg
push
js
sbb
inc
hlt
stos
je
xchg
sub
out
icebp
or
add
jge
jb
outsb
out
and
mov
mov
pop
sub
push
xor
loop
adc
dec
or
mov
out
int3
ret
jo
and
fsubr
pop
add
int3
xchg
mov
stos
cli
cmp
inc
rorb
and
out
movsl
test
aam
xor
lcall
movsl
scas
ret
lds
pop
les
xchg
lahf
pop
or
mov
xchg
arpl
imul
aas
fsubrs
leave
stos
cli
dec
fs
or
cmp
shrb
cmp
rolb
movsb
xchg
or
add
push
shlb
mov
ss
jne
xor
cltd
or
sti
hlt
or
movsl
xchg
fbld
push
or
mov
pop
mov
mov
fadd
xor
lret
in
mov
xorb
rolb
push
rorl
stc
lods
xor
iret
call
leave
test
lds
push
shll
pusha
and
sub
repnz
xor
push
test
xor
sbb
in
push
xor
sub
xor
xlat
mov
scas
xor
in
ja
cmp
cld
les
iret
and
xchg
loop
push
jp
cmpsb
push
and
dec
mov
in
in
scas
daa
mov
sbb
adcb
sub
or
cmp
mov
loopne
adc
adc
test
and
faddl
mov
add
mov
es
xor
sbb
jnp
mov
xchg
nop
jp
pop
xor
in
xor
xor
insb
fcomi
mov
pop
xor
add
jb
xor
xor
xchg
test
out
mov
dec
or
adc
test
cmp
popa
lahf
jle
jno
add
ficoms
xchg
fldt
adc
ja
mov
mov
mov
jb
pop
sub
cli
jmp
dec
add
dec
aam
pop
mov
xor
mov
jns
push
mov
lods
inc
xor
add
cmpsl
mov
cmp
stc
cmpsb
or
and
cltd
or
fs
aam
fucomp
push
lods
xor
je
jge
sbb
lea
cwtl
dec
push
dec
jbe
mov
mov
dec
aam
popf
cmpsb
dec
clc
sub
cld
arpl
inc
mov
and
lock
jecxz
cli
and
lods
inc
or
xchg
out
cmp
push
jl
mov
sbb
mov
shl
push
in
ds
inc
leave
jmp
das
pushw
cmp
lcall
into
mov
dec
push
mov
mov
jmp
out
test
std
rolb
fwait
xchg
stc
fs
cmp
mov
sbb
jl
xchg
mov
imul
fcomps
push
stc
jbe
cmp
pop
scas
into
popf
fwait
dec
pop
stos
adc
ret
xor
inc
sub
jle
mov
cld
clc
cmc
push
movsl
pop
in
sbb
roll
push
ret
adc
jmp
jecxz
sub
add
imul
push
aam
ss
sub
rorb
shlb
sub
test
push
cmc
cmp
jp
cmp
popf
xor
mov
dec
cmpsl
or
repz
inc
dec
mov
mov
jp
fsub
sub
sub
ds
lock
push
pop
cwtl
and
push
pop
movsb
popf
jns
jg
mov
add
push
loopne
repz
cwtl
push
sub
ret
jmp
daa
push
movsl
sub
test
jmp
jg
add
or
test
sbb
addr16
dec
fcmovne
mov
jbe
adc
inc
jno
jp
mov
int3
pop
repnz
pmullw
in
insl
lock
pop
dec
mov
xor
or
jns
mov
sbb
jno
sub
or
loop
mov
jb
mov
and
insb
cmp
push
aas
sbb
dec
or
jp
je
inc
insl
frstor
xchg
mov
in
add
inc
cmpsl
mov
pushf
cltd
dec
movsb
dec
rcrb
fs
jecxz
xor
roll
and
scas
dec
mov
in
cli
popf
pop
in
inc
mov
and
imul
mov
cmp
jl
cli
adc
cmp
pop
or
xor
or
out
loop
push
popa
sarb
stc
xchg
scas
and
or
jp
and
aas
cwtl
mov
into
stc
sarb
push
aam
test
rcl
jbe
inc
loop
dec
lret
dec
loope
out
shrb
daa
sti
insl
cmpb
clc
pop
push
mov
cmpsb
xor
push
and
pusha
add
stos
adc
cld
int
rorb
mov
mov
pop
dec
dec
call
das
cmp
inc
or
jo
xor
push
sbb
pop
test
stos
dec
fdivrl
mov
aad
or
mov
loope
pop
lcall
sub
and
into
push
adc
mov
mov
aam
pop
lock
stos
insb
cmp
fisubl
and
bound
add
fdivrl
sub
cmpsb
out
add
into
mov
xor
sarl
mov
inc
fcmovnbe
mov
leave
movsl
cli
iret
jl
into
imul
cmp
or
mov
cmp
cmp
stc
addl
movsb
jnp
sub
add
cli
les
pop
mov
sbb
push
sbb
cmp
inc
mov
popf
xor
pop
test
test
ret
cs
xchg
aas
shrl
mov
xor
pop
icebp
mov
jg
test
shlb
addl
shlb
xchg
clc
sub
jecxz
cmp
inc
jp
cmc
push
adcl
mov
bt
fwait
sbb
cs
loope
stos
shll
outsl
repnz
xchg
ret
inc
dec
les
imul
test
pop
push
mov
lds
jl
mov
xchg
push
scas
rorb
shll
lods
std
out
bound
or
pinsrw
dec
mov
cmp
aaa
and
jmp
lret
mov
mov
cmp
in
or
adc
outsl
cwtl
or
push
notl
jbe
mov
add
pop
sbb
jne
jbe
pop
test
adc
mov
sbb
cmp
or
out
je
hlt
daa
adc
xor
and
push
xlat
mov
movsl
incl
imul
xor
inc
sarb
push
test
jb
sti
shrb
cmp
cmc
std
pop
jns
nop
pop
pop
cs
fsubrp
stc
movsb
pushf
jg
and
rolb
sub
adcb
mov
push
out
adc
bound
rol
sbb
cmc
inc
dec
pop
outsb
mov
hlt
ret
ss
out
or
aaa
movb
and
inc
cmp
sub
in
gs
mov
mov
mov
jnp
pusha
sbb
out
pop
and
sbb
cmp
call
loope
xor
addr16
in
sbb
mov
push
addr16
jmp
movsb
div
out
popa
jecxz
jge
fstl
cld
test
das
cmp
lods
popa
add
leave
fsubs
and
dec
scas
popa
add
lock
imull
jne
imul
out
stc
loope
mov
ret
pop
mov
stc
adc
lock
lret
push
or
sbb
pop
cmc
rcll
loopne
cwtl
sub
test
outsl
cwtl
mov
and
push
outsl
mov
daa
and
das
add
mov
pop
insb
aad
xchg
jbe
sbb
pop
xor
xor
mov
pop
push
dec
xchg
pop
sbb
mov
ds
clc
aas
fimull
out
jmp
push
pop
in
xor
pop
pop
push
lods
cmp
jo
adc
cli
les
ret
pop
add
cmc
push
jmp
in
dec
enter
shl
sti
cmp
xor
inc
jl
adc
mov
fsubl
adc
clc
cs
sub
adc
int3
push
xchg
push
ds
call
mov
xchg
rcll
lock
sub
pop
shrl
sbbb
xor
test
cmp
call
xchg
sbb
add
cmpsl
ret
popa
xchg
fisttpll
aad
outsl
stos
popf
dec
in
stos
dec
lods
mov
add
out
sarb
je
mov
in
fmul
fimuls
xchg
adc
stc
dec
jb
ret
mov
adc
dec
rcl
outsb
repz
mov
xchg
lret
jle
loop
inc
push
pop
jmp
push
arpl
jb
sbb
sarl
cltd
out
gs
inc
jbe
sti
add
xchg
xchg
push
mov
mov
not
mov
mov
jmp
shrb
insl
fldt
js
arpl
and
sub
in
adc
test
mov
js
rcrl
mov
gs
mov
jge
xchg
or
jmp
mov
addb
mov
dec
xor
test
inc
movsl
mov
xchg
stos
aam
lods
test
adc
aad
jl
jne
rorl
xor
sarl
mov
andl
mov
sub
insl
jl
faddl
in
pop
dec
jne
mov
testb
fcmovu
stc
adc
movsl
adc
out
loop
cld
or
sarb
clc
mov
mov
in
adc
cltd
je
sbb
std
mov
jmp
cs
imull
inc
fwait
repnz
sbb
mov
lcall
or
daa
or
add
fnstsw
int3
mov
lret
pop
pop
daa
dec
sbb
dec
xor
mov
lcall
lods
lret
cmp
andb
xchg
loop
std
mov
sub
flds
push
xchg
mov
push
out
xchg
mov
pop
xchg
or
jbe
in
push
cmp
loope
fs
jo
inc
daa
xlat
push
aam
rol
jecxz
mov
mov
mov
pop
rorl
jno
repnz
stc
jae
dec
fwait
fwait
mov
sub
inc
or
imul
xor
arpl
dec
push
test
push
dec
and
add
mov
mov
lods
outsb
xchg
cmpsl
out
shrl
jmp
and
das
xchg
xlat
in
mov
pop
sbb
mov
es
inc
test
xchg
xacquire
sbb
inc
out
jecxz
std
in
fisttpl
jecxz
inc
or
sbb
pushf
xorl
jae
hlt
fwait
or
mov
dec
sbb
pop
mov
and
aas
outsl
pop
sub
lcall
push
in
or
sahf
test
cmp
jne
fs
add
push
push
scas
pop
aas
and
push
scas
flds
xchg
push
cwtl
pusha
jecxz
js
ds
ljmp
clc
popa
dec
or
aas
ss
outsl
movsl
movsl
mov
rcll
in
push
aas
or
test
jge
mov
pop
pushf
adc
pop
ret
or
hlt
jle
outsb
sub
mov
sahf
sub
mov
insb
xor
out
movsb
mov
jbe
sbb
push
xchg
adc
fwait
mov
sbb
jmp
mov
mov
mov
xchg
or
stc
into
xchg
aaa
scas
adc
mov
xor
sti
sub
xchg
mov
fs
lret
test
js
movsl
dec
ss
or
mov
sub
pop
or
jb
ljmp
jae
sbb
push
xor
jno
fs
insb
or
mov
pushf
add
xlat
sub
add
dec
pop
dec
neg
cmpsb
push
imul
xchg
adcl
jp
imul
mov
xlat
std
jo
adc
ror
addr16
xchg
ficomps
or
push
cwtl
push
repnz
mov
push
pop
and
dec
ss
push
xor
aad
adc
sbb
rcrl
xchg
mov
movsl
adc
lods
mov
lock
cltd
sbb
cwtl
xor
fcmovu
in
mov
xchg
pushf
outsl
sbb
add
jae
pop
xor
sub
shr
mov
cmp
mov
shr
inc
cli
and
add
cmp
cmp
add
sub
cmp
lahf
and
dec
popl
mov
gs
cmp
mov
and
enter
shrl
pushf
xor
inc
xchg
sysexit
iret
test
and
clc
testb
dec
mov
push
fnstcw
fs
pusha
adc
fwait
sbb
inc
push
dec
push
mov
mov
adcb
jecxz
call
outsl
test
xor
or
movsl
mov
mov
xorl
arpl
xchg
sub
jno
sub
pop
test
fwait
cld
push
pop
outsl
cmp
pop
xor
sub
addl
es
out
frstor
push
cmc
jl
out
dec
lods
pop
icebp
dec
stc
fisttps
jle
jge
cmp
sbbl
xchg
add
cmpsl
jmp
push
daa
pop
jae
mov
outsl
pusha
popa
js
ret
popf
int3
mov
dec
xchg
sbb
inc
lods
cmpsb
or
cli
sahf
cmp
jnp
mov
sub
sub
cli
decb
adc
ret
adc
mov
imul
imul
push
fadd
mov
add
adc
fs
fnstsw
cmp
movsl
ret
out
dec
cmp
loop
or
xchg
and
xor
sub
push
mov
andb
add
stc
dec
mov
mov
xor
ret
xor
xlat
lods
inc
scas
mov
daa
fbld
test
jle
mov
test
cld
mov
lea
inc
dec
dec
lret
add
test
cs
sahf
in
fmul
pop
sti
pop
sub
fcomip
and
xchg
push
je
imul
ss
fldl
add
call
xchg
shrb
sarb
cli
jnp
push
dec
aaa
xor
cmp
mov
addl
add
xchg
fmuls
cmp
loope
xchg
fldcw
imul
fmull
sbbl
or
lahf
inc
iret
dec
in
out
push
mov
cmp
push
adc
fnstenv
xchg
testl
jmp
jb
xlat
repz
stos
pop
or
popf
cmp
xchg
inc
or
xchg
loop
dec
cwtl
stos
loope
lods
repnz
xchg
or
orl
adc
add
cli
hlt
test
pop
jne
jb
push
or
movsl
jno
rorb
mov
addl
fidivs
icebp
loopne
fists
inc
lret
dec
mov
mov
dec
cmp
jo
xlat
shrl
stos
mov
test
jmp
inc
cli
mov
aam
mov
cmp
mov
aas
outsb
vpcmpgtd
xchg
cmp
adc
jae
sub
orb
jae
push
pop
mov
ljmp
push
push
adc
movsb
and
in
xchg
gs
insl
xorl
sarb
fsubr
scas
or
fwait
into
out
cmp
xchg
mov
inc
sbb
lahf
fiadds
insb
pop
dec
das
mov
and
jl
mov
loopne
adc
fimull
jg
lcall
or
xor
pusha
mov
arpl
bound
mov
and
aas
mov
jno
jne
and
and
mov
xchg
mov
pop
and
xor
imul
test
xor
mov
inc
xor
mov
mov
dec
jecxz
inc
ror
jmp
sbb
hlt
rclb
roll
push
pop
or
mov
testl
mov
pop
adc
jmp
push
ljmp
pop
aam
mov
and
mov
mov
push
add
jnp
cmpsb
xor
lahf
outsl
sahf
nop
pop
mov
repnz
cmp
jno
mov
pop
adc
rorl
pop
enter
orl
mov
testb
popf
out
imul
push
loopne
jle
inc
call
inc
ja
cmp
rorb
sarl
or
sbb
xor
cmpsb
rcrl
imulb
jecxz
sub
push
out
leave
jo
int3
cwtl
adcl
ret
fnstenv
xor
jmp
aas
js
push
mov
loope
jge
aaa
or
sub
push
data16
gs
cmp
add
mov
sti
sbb
loop
push
mov
xchg
push
je
das
sar
mov
in
out
jbe
pop
mov
sti
inc
imul
test
addr16
je
sbb
xor
mov
outsb
sub
jo
lds
int
ret
dec
mov
push
lds
out
sub
cmpsb
icebp
lret
bound
lss
lcall
mov
mov
jae
jmp
dec
cmp
lock
int
xchg
fstps
es
jbe
xor
xor
xor
ss
inc
mov
pop
pop
sahf
jb
add
shll
incb
ja
aaa
aaa
cltd
stos
repz
push
ss
pop
mov
stos
cwtl
into
adc
loope
xor
movsb
pop
inc
scas
insl
fcoml
dec
mov
mov
loopne
mov
xor
add
dec
pop
mov
jae
pop
jbe
mov
iret
and
lcall
xlat
xlat
pushf
and
xchg
inc
push
lcall
mov
adc
iret
sub
shrb
adcb
sub
mov
stos
jg
add
cmpsb
in
bound
jbe
lods
and
scas
mov
dec
ja
dec
inc
enter
mov
call
adc
outsl
push
pop
mov
dec
es
push
adc
popf
test
mov
pop
jb
popf
dec
cli
xlat
in
cs
in
icebp
dec
mov
mov
or
shll
std
in
jnp
test
test
xlat
mov
insb
or
sub
sbb
imul
sbb
add
inc
fwait
cs
loopne
pushf
aaa
mov
lods
xchg
sbb
add
inc
orb
dec
fadd
enter
in
jmp
mov
ja
iret
add
into
test
push
rol
ja,pn
loopne
popf
roll
xchg
insb
hlt
sub
shrb
dec
cmp
sbb
mov
iret
jbe
sti
adcb
out
lret
stos
mov
or
jmp
lock
sub
jle
loop
pop
int
jae
in
and
pop
inc
inc
push
shrb
xor
mov
jmp
mov
ficoml
ret
shl
inc
cmc
pusha
dec
push
addr16
js
jnp
popl
idivb
aam
xchg
mov
and
cwtl
pop
or
mov
movsb
dec
sub
pushf
cld
loop
dec
pop
sahf
push
fcomps
adc
sub
cwtl
call
cmpsb
mov
sbb
sbb
add
shlb
jbe
cwtl
lods
pushf
out
cld
push
or
sub
enter
or
bound
shl
push
fsubrs
add
mov
mov
mov
gs
dec
cs
stos
sub
outsb
push
push
inc
scas
mov
in
pop
lret
out
push
lahf
sub
adc
mov
scas
mov
sti
jmp
shll
sbb
jl
cmp
stos
jbe
mov
es
pop
push
ret
xchg
je
mov
test
lock
lods
sub
jb
xchg
js
jo
out
ret
enter
fwait
data16
stc
add
cmp
or
addr16
hlt
stos
xchg
insb
shl
daa
repz
or
popf
mov
cmpb
dec
add
cmpsb
inc
jecxz
inc
fsubr
xlat
jle
shrl
push
jge
adc
jo
add
mov
jge
ljmp
and
loope
xor
add
cmp
pop
push
hlt
int
outsl
xor
pop
dec
mov
int3
mov
inc
sub
mov
imul
jo
les
ret
or
ljmp
scas
out
cmpsb
inc
jns
shr
push
sbb
sub
rolb
or
popa
lahf
mov
pop
push
xchg
xor
cmpsl
lretw
into
cmp
mov
bound
divl
and
add
push
daa
in
inc
xchg
or
mov
scas
mov
adc
xchg
cmc
sbb
xchg
mov
pushfw
push
clc
lods
push
jns
iret
hlt
mov
xchg
sbb
lods
pusha
imul
lea
adc
pop
pop
or
out
fsubp
add
shll
mov
xlat
lods
nop
or
mov
lahf
rorb
orl
cld
out
push
mov
lods
push
vsubss
dec
and
imul
das
fs
xor
mov
aas
pusha
shlb
push
outsb
xchg
movsb
sahf
jb
repz
fsubs
dec
sti
mov
jl
dec
mov
ret
inc
ficoms
fisttpl
jno
sub
in
xchg
dec
sub
mov
or
pop
idivb
into
out
inc
add
insb
imul
adcb
or
fwait
rcl
lret
adc
push
fistpll
cmc
cltd
jle
iret
mov
bound
jne
inc
in
pop
jge
lods
sub
ds
cmp
scas
fidivl
xor
jl
pop
js
xor
cmpsl
shl
cld
iret
mov
mov
aam
shlb
test
xchg
fsubrl
dec
pop
push
jne
mov
mov
scas
mov
rorb
inc
lock
and
shlb
sbb
lcall
xchg
stos
jp
outsb
jge
push
dec
in
add
push
imul
int
and
jg
in
sub
loope
mov
arpl
shll
das
test
inc
inc
insb
imul
mov
mov
js
loop
insl
cmc
mov
outsb
cwtl
jnp
push
mov
adc
push
mov
in
out
xchg
gs
mov
insl
cltd
inc
sahf
insl
fs
fstl
inc
stos
dec
add
mov
push
adc
and
or
mov
xchg
sbb
mov
jg
cmp
fisttps
jbe
lods
or
pop
dec
andl
sub
mov
out
or
jl
inc
inc
sarb
roll
or
scas
sub
movsl
cmpsb
ljmp
aas
subl
pop
pushf
and
push
popf
popf
je
jp
fsubr
dec
cwtl
cmp
lock
dec
pop
jge
loop
cmpsl
push
es
ret
pop
xor
sub
push
cmp
aas
out
outsl
xor
aam
mov
pmaxsw
adc
xchg
loope
and
sub
adc
cmp
dec
shr
dec
dec
cmpsb
fwait
dec
pop
enter
jnp
jp
popf
dec
lcall
scas
out
rol
push
jae
xor
jle
xchg
pop
jge
loopne
std
push
dec
fisubrl
mov
shr
xor
mov
and
xor
cmpsl
jge
mov
icebp
outsb
fldt
fnstsw
and
gs
incb
ret
jl
push
cmp
inc
in
sahf
jo
or
add
cmc
lock
xchg
push
cmc
cld
aaa
in
add
pop
cmpsl
loopne
adc
push
xorb
jno
rorl
mov
inc
xlat
or
xchg
ja
lret
xor
adc
inc
xchg
daa
test
pop
cmp
dec
jmp
cwtl
addl
cmpb
leave
aam
mov
adc
xor
in
imul
push
add
mov
out
sbb
repz
add
sbb
icebp
aad
pop
mov
jle
ja
dec
adc
dec
fwait
in
jae
mov
push
loope
inc
das
mov
ss
pop
add
pop
enter
movsb
daa
cwtl
mov
push
xchg
inc
sub
inc
insl
in
sub
push
call
xchg
sbb
gs
repz
mov
subl
mov
cld
push
sahf
aam
dec
jl
and
scas
aad
sbb
push
hlt
lock
sarb
inc
cmovbe
add
je
imul
mov
insb
xor
ds
push
pop
sub
dec
lahf
sbb
push
test
addr16
jp
outsl
das
fs
inc
cs
sub
xor
ljmp
fsubs
push
mov
xchg
imul
add
pop
movl
add
lcall
xchg
xchg
and
cmpsl
rcrl
lock
mov
jmp
bound
rorb
jo
mov
or
enter
mov
shl
pop
ret
dec
in
lret
xor
mov
je
ret
test
sbb
jmp
push
dec
or
insb
and
adc
sub
popa
adc
popf
mov
test
rcl
in
aaa
pop
lods
fistl
dec
adc
jge
mov
push
jns
mov
pop
lea
or
mov
fs
xor
insb
xchg
stos
fwait
bound
and
sbb
mov
cltd
sub
lods
or
movsb
inc
ja
movsl
jo
xchg
pop
jmp
xor
sub
aas
cmpsl
sbb
out
es
rclb
inc
xor
add
cmp
cltd
push
fisubrs
pusha
lret
lods
lret
cwtl
jno
ljmp
cmp
les
mov
xchg
into
inc
inc
xor
lock
and
call
mov
div
outsl
data16
or
stos
pop
std
popf
xor
xchg
test
movsb
mov
sub
and
sbb
cwtl
jae
jg
lahf
jg
andb
mov
aam
stc
jno
mov
jb
test
xchg
imul
sub
cmp
ljmp
sub
jl
and
xor
aam
mov
lds
sub
xchg
mov
outsb
adc
jne
aas
pop
aad
cmpsb
cmpsb
cld
divl
xchg
in
mov
cs
cmc
dec
sbb
inc
out
mull
dec
mov
test
dec
pop
dec
cltd
int
lea
in
lret
test
inc
js
adc
jle
cltd
loop
enter
xlat
dec
cmpsb
jl
dec
mov
mov
mov
rcrl
nop
pop
sub
add
sub
rorl
sbb
xor
inc
mov
xchg
dec
push
push
inc
lahf
ret
int3
sbb
aaa
adc
data16
mov
dec
push
jmp
repnz
push
insl
xchg
jno
and
cmc
lock
pop
dec
cmc
std
rclb
push
lock
sbb
xor
xchg
das
je
dec
sbb
xchg
inc
orl
testb
sbb
mov
jp
add
inc
test
fistl
mov
xchg
add
jne
repnz
into
stos
pusha
dec
bnd
add
scas
sbb
mov
fxam
push
in
lds
or
int3
pop
stos
jnp
add
jge
imul
into
pop
test
mov
xchg
aas
fcmovnb
pop
sti
inc
cld
popa
lds
js
repz
in
ljmp
xor
sub
xchg
or
or
movsl
outsl
sbb
mov
push
pop
jmp
or
cmp
nop
in
inc
fstl
xchg
xor
stos
mov
filds
inc
cld
dec
mov
cmp
or
jmp
in
filds
fwait
js
stos
jnp
push
dec
movsl
in
lods
roll
dec
sbb
and
fidivrs
mov
push
pushf
mov
xlat
mov
xchg
das
stos
sbb
fisubrl
cmp
enter
dec
mov
xchg
inc
aaa
xchg
dec
inc
dec
nopl
mov
testl
imul
test
cmp
mov
aad
xor
dec
mov
es
jp
cmp
xchg
mov
and
mov
in
cltd
jb
sbbb
es
and
dec
iret
addb
xchg
mov
fistl
push
dec
sub
mov
test
sbb
sbb
clc
shlb
popf
sub
jle
fimull
sbb
inc
sbb
loop
adc
es
sbb
filds
arpl
cs
les
jle
mov
add
inc
sti
sarl
jbe
mov
push
repz
cli
mov
stos
in
cwtl
loope
daa
pop
pop
cmp
dec
movsl
ja
sahf
sbb
pushf
ja
inc
mov
push
stos
jae
nop
xchg
pop
sub
call
mov
adc
popa
in
bound
push
pop
out
je
mov
into
jg
cmp
add
lahf
inc
cmp
test
scas
movsb
clc
cmp
stc
loop
fnstenv
cmpsl
aaa
jp
in
sub
or
popa
push
aas
jae
mov
xor
pop
jb
insl
mov
inc
sarl
xchg
push
dec
adc
andb
xor
and
push
xor
jp
sarl
cwtl
and
dec
inc
ficomps
aas
xor
lock
or
out
pushf
out
call
add
jmp
xchg
sub
fstps
xchg
jns
aam
ret
mov
or
filds
movhps
and
cmp
negl
or
clc
inc
xchg
aad
push
imul
rclb
add
pop
mov
sbb
clc
xor
gs
push
outsb
ret
movsl
mov
push
inc
jmp
mov
add
pop
aam
frndint
scas
mov
rcrb
xchg
arpl
add
mov
ret
scas
dec
sub
ret
jp
out
enter
cmp
movsl
enter
fs
jle
sbb
cmc
iret
or
push
filds
aam
pop
add
xchg
lret
stc
mov
lea
sarb
fldenv
mov
mov
cmp
scas
addb
jmp
popa
pop
xchg
jae
scas
setnp
inc
xchg
ljmp
fwait
pop
into
aaa
mov
lea
faddl
mov
je
and
les
sub
xchg
mov
ret
inc
xchg
mov
aam
or
dec
insb
fnsave
mov
mov
sub
and
mov
aas
sub
fsts
mov
jl
notb
dec
clc
cltd
adc
push
mov
and
imul
or
inc
sbb
loopne
dec
pop
aas
imul
loop
in
movsb
sub
mov
mov
idivb
cltd
mov
in
add
std
push
sub
xlat
push
sub
mov
arpl
sahf
fsubrp
dec
jo
inc
mov
es
and
add
and
xchg
dec
jl
add
pop
mov
aas
jno
test
and
fsubrl
incl
das
loop
mov
mov
sub
sub
cmp
das
pop
pop
out
addb
popa
outsl
pop
mov
test
ljmp
in
movsl
fidivrs
dec
xor
cmp
inc
xor
add
loopne
insl
pop
mov
push
pusha
sub
xor
xor
sub
sbb
sub
sub
sbb
sbb
loop
sub
pusha
not
lods
or
or
adc
jmp
push
mov
hlt
sub
push
ljmp
test
and
fisubrs
aaa
or
cmp
repnz
popf
cmpsb
pop
adc
outsb
add
jg
push
aam
shll
sarb
inc
lds
cmpsb
pop
jnp
mov
xor
and
and
or
add
cld
xchg
outsb
mov
loope
jne
test
into
lods
jmp
xor
repz
iret
adc
dec
mov
nop
jecxz
dec
mov
ja
fistpl
mov
cli
fstp
xchg
fildll
loopne
andl
mov
pop
out
push
sbb
leave
test
pop
sbb
jl
jo
in
mov
and
sub
push
mov
sbb
pusha
push
inc
loope
in
pop
mov
loopne
inc
addl
sub
cmp
call
adc
cmp
insl
jns
cmpsl
sub
sbb
jmp
inc
orl
pop
mov
sub
fsts
pop
mov
movsl
xchg
loop
and
std
fildl
mov
inc
jnp
aaa
in
fstl
clc
sar
push
jmp
jg
int
cs
push
nop
adc
fwait
hlt
xchg
xor
ret
mov
mov
shlb
fildll
pop
adc
mov
jge
mov
lret
mov
jmp
mov
mov
cmpsl
fdivrs
pop
xchg
ret
mov
inc
mov
daa
inc
adc
xor
sbb
lods
movb
ret
int3
mov
adc
aas
jae
cmpsb
lcall
ljmp
jb
dec
push
dec
xor
in
mov
lea
test
mov
dec
pusha
mov
fisttpl
push
jno
outsb
xor
cmp
jnp
jge
push
mov
aaa
leave
stos
fists
sbb
test
mov
pop
fdivrl
and
mov
addl
jl,pn
dec
cmp
in
push
sbbb
add
sti
sbb
xchg
mov
nop
xor
dec
mov
popa
sbb
js
movsb
test
jp
cli
mov
aaa
sbb
fcomp
mov
xchg
pop
mov
outsb
ss
pop
imul
sbb
push
dec
jl
mov
xor
cmpsl
addr16
js
bound
pop
dec
fwait
add
sbb
push
cmpsb
sbbb
fwait
mov
sbb
out
pop
popf
sub
or
pop
dec
xchg
jle
mov
inc
mov
in
bnd
mov
pop
sub
mov
push
subl
jae
gs
call
in
out
movsb
fcomps
decl
int
cs
mov
out
sub
or
lea
out
pop
add
and
pop
rclb
xor
je
adc
inc
in
mov
fadd
andl
test
aad
icebp
aaa
cmp
ffree
adc
insb
icebp
mov
enter
mov
outsb
jg
xor
cmp
pop
test
jns
add
repnz
xchg
mov
outsb
or
xor
mov
idivb
nop
push
je
lcall
mov
test
andb
jns
inc
sarl
mov
in
bound
cwtl
cmp
stos
cmp
imul
jne
mov
xchg
aad
mov
mov
dec
pop
test
rcr
nop
lods
mov
mov
out
and
sub
icebp
test
aam
xchg
mov
popa
jecxz
push
and
stos
scas
fisubl
inc
int
aam
aas
jne
mov
ljmp
cmp
adc
lcall
pushf
push
test
dec
add
popf
or
cmpl
xchg
mov
stos
push
push
sbb
add
xchg
or
fldl
fs
negl
daa
lds
fsubrs
je
sub
add
leave
or
sahf
rcr
js
fcom
push
jmp
mov
inc
fcoms
and
xor
xor
mov
imul
jno
adc
sti
rcrb
cwtl
adc
pusha
adc
xchg
mov
pop
dec
xchg
shlb
or
inc
push
cmp
test
adc
mov
jmp
shr
loopne
call
outsl
mov
mov
outsb
jnp
lds
lahf
roll
sub
or
test
jb
addb
mov
pop
lcall
subl
adc
sahf
push
flds
jo
loope,pt
cmpsl
bound
movb
push
push
adc
pop
pop
rcrb
out
cmp
pop
mov
pop
movsb
cmpb
dec
leave
mov
mov
and
popf
flds
mov
scas
ret
dec
addr16
stc
jg
aam
lret
or
dec
hlt
push
sub
or
cmp
fistps
dec
mov
pop
push
stc
xor
push
stos
xchg
sbb
std
cmc
lcall
jl
into
dec
or
push
test
inc
or
cmpsl
jle
or
scas
in
movsl
or
daa
mov
jg
daa
repnz
dec
iret
sahf
inc
and
jg
mov
sub
xorps
sarl
enter
je
mov
dec
push
dec
nop
clc
mov
pop
xor
xchg
and
add
jmp
sub
mov
cmp
and
jge
adcb
shlb
in
enter
mov
inc
addr16
mov
adc
popa
cmp
out
sub
lds
fildl
repz
xchg
and
outsl
sub
cmc
dec
mov
dec
push
in
decb
and
inc
inc
mov
out
cmpsl
xor
xor
cmp
jbe
jb
and
jae
xor
add
mov
sbb
xor
pop
cld
pop
jmp
subb
imul
adc
push
inc
sub
test
xchg
in
pop
or
mov
in
ret
mov
iret
cltd
cmp
mov
leave
mov
shrl
and
sub
xor
fsubrs
adc
pop
cltd
mov
sbb
push
movsb
dec
clc
arpl
xchg
sbb
shlb
pop
add
cmp
aad
mov
xor
jae
xor
stos
mov
xor
pop
cwtl
xchg
inc
dec
loopne
daa
repnz
dec
jns
and
frstor
insb
mov
push
fs
out
dec
adc
inc
std
xor
adc
pop
jb
enter
inc
xorb
stc
insl
test
arpl
dec
inc
push
cmp
pop
push
mov
cwtl
fbstp
roll
xchg
push
nop
cmpsb
test
sub
sti
movsb
xor
jmp
mov
insb
cmp
sub
mov
mov
iret
inc
inc
adc
dec
mov
fwait
loop
arpl
or
mov
xchg
jl
inc
cwtl
psubsb
push
daa
stc
sbb
jne
jmp
fsubrs
jle
cmp
scas
lock
inc
popf
push
mov
cmc
xchg
shrb
ja
inc
je
adc
loope
mov
jge
jbe
orl
cmp
out
inc
sbb
ret
mov
stos
ffreep
and
fcmovu
sbb
and
mov
repnz
std
jo
mov
mov
test
xchg
stos
add
or
orl
cmpsb
push
adc
cld
lds
fidivrs
mov
outsb
aas
mov
sub
ds
xchg
sub
and
fists
out
call
mov
sbb
xor
addb
outsb
cmp
es
mov
aad
pop
xor
daa
jl
sub
ss
test
xor
jb
les
pop
cli
cwtl
push
out
cs
cmp
and
xchg
fwait
in
les
aas
outsb
subb
adc
pop
mulb
mov
dec
adc
mov
hlt
imul
mov
and
sub
daa
ljmp
add
fwait
sbb
popf
jge
mov
cli
inc
xchg
sbb
loopne
mov
lds
mov
push
xchg
ret
xor
ficoms
imul
mov
xlat
xchg
mov
dec
xor
inc
inc
mov
aam
es
int
fisubrs
inc
push
mov
lahf
jne
xor
dec
repz
push
in
sub
mov
adc
dec
xchg
outsl
jecxz
mov
repz
push
push
push
fimull
xor
push
push
xor
cmpsb
je
popa
scas
push
push
imul
imul
je
mov
ds
sub
push
sbb
cli
dec
add
cmc
push
mov
cmp
mov
push
xchg
push
inc
inc
add
cmc
test
or
lret
hlt
push
loop
mov
adc
add
and
jbe
lret
clc
fcmovb
inc
adcl
mov
popl
shl
mov
movsbl
aas
dec
pop
pop
adc
into
arpl
lock
stos
mov
hlt
test
pop
push
dec
dec
cmp
jge
cwtl
sbb
adc
mov
cmp
mov
out
cmc
jp
fildll
pop
jbe
inc
cmp
xchg
iret
scas
jl
jo
mov
lret
aam
movsl
sbb
sbbb
pop
int3
loope
mov
adc
aaa
lahf
outsb
in
add
icebp
xor
mov
loope
bound
push
mov
and
inc
popa
xchg
fcmovnbe
imul
pop
stc
lods
outsl
push
cmp
cmp
xor
test
lcall
sti
cld
jnp
mov
xor
lods
cmp
adcb
and
fistl
pop
push
loope
stos
inc
cmp
sbb
movsl
inc
aad
cmp
dec
dec
jae
stos
dec
leave
jnp
shlb
mov
testb
fiadds
jmp
lds
adcb
mov
inc
pop
push
mov
int3
popa
mov
ret
aad
cmp
mov
or
jbe
icebp
lea
jnp
or
ljmp
xor
and
push
cmp
jge
push
movsl
rcrl
in
adc
push
cmp
shlb
fwait
xchg
shr
push
xchg
lds
inc
pop
push
mov
adc
inc
cmp
add
and
cltd
lods
daa
imul
lods
pop
inc
and
loopne
push
pop
inc
bt
jle
imul
xor
in
call
ret
js
roll
repz
mov
xchg
cmp
mov
xchg
fwait
adc
dec
push
cmpsl
std
fdivp
sbb
psrlq
add
divb
adc
test
mov
int
mov
shll
sti
xor
out
lods
mov
fldt
dec
cmp
jge
mov
insb
and
icebp
data16
pop
lret
pop
mov
lret
popf
lahf
clc
notb
inc
mov
inc
jae
jmp
lret
cld
xchg
daa
cmp
addr16
out
cmovs
mov
in
jge
out
imul
in
push
xor
and
push
lret
testb
movq
lahf
mov
inc
jle
divl
js
lods
enter
mov
cmc
test
push
pop
push
xorb
dec
ss
mov
dec
adc
scas
jmp
cld
inc
loop
jno
popf
mov
js
sahf
ror
push
adc
mov
in
jo
xor
roll
lret
cmp
jmp
or
mov
add
cli
loope
scas
inc
repnz
addb
xor
xor
outsb
pop
push
loopne
mov
and
scas
ljmp
je
push
imul
pop
lea
xlat
add
int3
sub
jecxz
mov
jl
rorl
mov
adc
sbb
scas
inc
movsl
mov
push
insb
and
das
add
ss
inc
push
loop
xchg
ror
mov
add
mov
sbb
and
fnstcw
push
std
push
push
sub
fcompl
std
jle
xor
hlt
mov
dec
adc
cwtl
ficomps
push
fists
jo
iret
dec
pop
push
jns
and
cli
scas
test
lds
in
lock
dec
push
mov
mov
enter
or
popf
mov
inc
sub
ret
rorb
mov
xor
sub
aas
mov
and
adc
addb
repnz
sarl
sub
rcrl
cmp
lds
mov
jae
out
mov
cmp
mov
pop
sbb
gs
scas
and
in
xchg
adcb
sar
xchg
cld
ja
adc
sbb
stc
ja
stos
or
addr16
jns
call
cmp
repz
jmp
inc
aam
sbb
std
call
jb
jno
jecxz
xchg
jecxz
jns
jb
push
xchg
push
fnstsw
mov
test
fwait
cld
xchg
flds
orb
pushl
scas
fidivrs
cltd
add
insl
pop
add
ret
insb
adc
scas
adc
mov
shlb
xchg
in
push
inc
pop
add
and
fcompl
in
mov
in
jns
xchg
pushf
xchg
iret
test
and
or
mov
pushf
push
enter
mov
lcall
pusha
es
and
sub
xchg
icebp
lea
or
cwtl
incl
push
out
ret
push
arpl
cmp
out
jbe
push
xchg
arpl
add
enter
dec
xor
leave
out
cltd
aas
movsb
rorb
and
mov
nop
xor
gs
outsb
mov
xchg
scas
das
xchg
and
aaa
push
push
or
stc
push
rorb
or
push
mov
jmp
pop
scas
and
iret
mov
xchg
push
pop
fsubr
insb
xchg
jno
sti
inc
mov
fbstp
push
inc
popa
fistl
sub
outsb
mov
add
lods
lcall
xor
repz
inc
test
pop
inc
jae
mov
inc
in
add
mov
shrl
loop
cld
or
inc
inc
cmpsl
and
inc
out
sbb
pop
adc
xchg
scas
jmp
mov
inc
sbb
xchg
or
icebp
mov
and
sub
push
stos
inc
loopne
xor
sbb
xorl
incb
movsb
sub
test
in
leave
adc
mov
mov
xor
shrl
push
sbb
dec
adc
sbb
adc
jp
ret
lea
lret
ja
lret
iret
cld
mov
sti
ljmp
push
js
sub
add
js
push
xor
pop
jle
in
ficompl
and
pop
clc
lcall
fisttpl
push
gs
and
leave
test
out
lea
test
push
inc
cmp
push
dec
push
jmp
ret
mov
pop
gs
cmp
jg
push
sub
sbb
shl
movsb
push
fbld
inc
mov
loop
aas
xor
mov
mov
jecxz
shrb
andl
shr
insb
mov
push
mov
fidivl
in
pop
adc
jecxz
push
imul
out
shrb
roll
jb
fs
rcll
lahf
fisubrs
inc
add
scas
arpl
sti
mov
xchg
cmp
bound
mov
jne
xchg
cltd
fsubp
hlt
push
mov
mov
sbb
cmp
cmp
mov
js
gs
xchg
mov
pop
cmc
popa
sahf
je
xor
add
leave
ljmp
jbe
push
mov
push
xor
dec
movsl
and
fcomps
fldt
out
jne
mov
sahf
pusha
jns
iret
push
cli
hlt
mov
add
sbb
lret
push
sub
int3
pushf
mov
jl
push
and
sub
mov
mov
or
imul
xchg
out
push
aaa
mov
pop
sub
in
dec
sub
jae
and
add
xchg
loopne
pop
jo
lcall
stos
sub
outsb
push
mov
test
insb
les
cmp
popa
dec
fadd
icebp
mov
lret
mov
sbb
dec
test
ds
imul
in
push
mov
sarb
mov
xchg
les
aaa
dec
movsb
mov
mov
cmp
inc
lret
mov
repz
fstl
movups
popf
sbb
hlt
movsl
mov
insl
shlb
add
jmp
inc
mov
sub
shlb
nop
sbb
shrb
pop
push
push
push
mov
inc
push
add
cmpsb
jge
inc
adc
sub
xchg
loope
lret
out
dec
mov
mov
xchg
icebp
rclb
clc
mov
cmpsl
xor
mov
sub
xchg
popf
test
push
loop
xlat
adc
mov
push
sbb
test
jg
orb
sbbb
ret
xchg
xchg
xor
dec
mov
mov
xchg
adc
push
add
sarl
setnp
mov
bound
pop
adc
adc
sahf
inc
sub
stc
cmpsb
pop
push
out
out
push
bound
sbb
or
fbld
mov
sub
fcmovne
lahf
imul
cmp
cmc
cmc
mov
daa
mov
jp
dec
call
mov
test
mov
jle
xchg
out
and
mov
loope
aaa
xor
lea
cmp
pop
xchg
test
mov
mov
lods
jge
in
lcall
xor
mov
mov
nop
std
add
or
inc
inc
decl
xchg
testb
push
and
out
jl
jle
xor
cmc
ret
and
int3
sub
xchg
push
mov
inc
shrb
adc
stc
faddp
out
leave
lret
inc
cmpsl
popa
inc
outsl
jl
inc
in
mov
mov
int
or
clc
push
in
sub
icebp
pop
jns
int
jb
mov
dec
enter
leave
nop
cwtl
xchg
or
xchg
sub
out
and
fmulp
mov
faddp
daa
pop
lret
imul
xchg
xchg
push
int
cmp
dec
test
filds
pop
dec
xor
jno
mov
lds
in
stc
in
cmpsl
cmp
add
jle
imul
and
imul
sbb
adc
lahf
lret
sbb
fwait
cmp
xchg
ds
pusha
add
cmp
cltd
adcl
lock
or
or
adc
aad
cmc
out
aaa
mov
mov
xor
test
xchg
lods
aad
jnp
dec
adc
adc
inc
mov
adc
test
cmp
out
out
add
mul
and
adc
sbb
in
fldt
in
scas
stos
inc
in
jae
and
out
aam
sbb
mov
cmpsb
jbe
cmpl
adc
xor
mov
jb
gs
xor
gs
mov
jmp
sbb
mov
and
std
or
push
aad
sub
adc
lods
int
fs
sub
inc
fwait
adc
inc
je
shll
cmpsl
sub
movsb
sarl
ret
fadds
cmpsb
inc
mov
sti
xorb
jne
dec
cs
hlt
dec
call
push
les
xor
jle
loop
xchg
mov
fs
and
jo
imul
lods
and
sbb
test
mov
dec
jo
cwtl
mov
jbe
dec
mov
inc
push
lcall
mov
pop
sahf
fs
ljmp
pop
sbb
xor
into
sbb
hlt
cli
scas
cmp
outsl
push
xchg
jbe
add
fnstcw
mov
js
out
scas
testl
ret
test
movsl
push
push
xchg
arpl
test
movsl
xor
push
pop
push
ss
jnp
sub
imul
addr16
mov
jle
test
fs
xchg
shll
fs
hlt
jno
mov
cmpsb
or
mov
push
ja
popa
jb
cmp
xor
dec
xchg
mov
cmp
dec
mov
emms
xchg
stos
jmp
out
xor
roll
lods
pop
imul
xchg
das
cmp
ljmp
dec
stc
mov
mov
aas
push
addr16
movsb
and
repnz
je
push
and
sub
inc
sbb
ds
pop
adc
cltd
arpl
in
loope
cmp
inc
leave
in
divl
or
cli
inc
mov
aaa
sub
fbstp
test
pop
xlat
push
data16
mov
pop
jno
add
les
aas
mov
pop
ret
jl
pushf
lret
add
xchg
xor
shrb
popa
enter
pusha
fs
cwtl
mov
popa
and
add
lods
cli
push
inc
xchg
lock
push
pop
dec
sarl
cltd
xor
hlt
pop
jecxz
mov
sub
sub
enter
test
mov
mov
cmpl
pushf
stos
sar
xor
ljmp
ja
inc
mov
jmp
repz
push
mov
movsl
or
push
mov
sub
fnsave
test
out
insl
cmp
fcomp
xchg
adc
cld
es
add
repnz
pop
push
fadd
leave
inc
movsb
pop
pop
jecxz
mov
into
dec
mov
mov
cmc
mov
insl
inc
inc
adc
sbb
sbb
fwait
rorb
mov
inc
push
mov
shl
xchg
xorl
dec
fimuls
push
push
call
sub
stos
xor
cmp
jne
mov
dec
mov
scas
inc
push
dec
lock
jnp
inc
pop
in
aaa
inc
add
sbb
push
jno
sbb
pop
mov
sahf
xchg
sub
cmpl
repnz
lods
mov
std
in
fisubl
hlt
dec
outsl
dec
enter
rcrb
dec
ret
imulb
arpl
xchg
xchg
in
or
push
dec
sub
imul
add
and
mov
ljmp
adc
aas
ljmpw
dec
adc
scas
data16
stc
xchg
or
std
cmpsl
fisttpll
and
or
sbb
sub
push
aad
or
push
iret
jbe
fsubs
aad
mov
flds
insb
loopne
add
in
dec
sbb
pop
xchg
mov
adc
aaa
pop
fmul
mov
cld
dec
iret
jne
mov
sub
dec
repnz
adcl
cmp
lds
xor
pop
jge
sub
clc
push
test
cld
test
xchg
in
add
adcb
into
or
out
mov
adcb
cld
xchg
rorl
test
fmuls
jecxz
rolb
mov
ljmp
xor
mov
test
test
sti
mov
pop
ja
jns
ror
mov
addr16
pop
test
mov
dec
mov
fnsave
mov
dec
scas
or
pop
or
cld
sub
lcall
adc
clc
in
xor
pushl
or
arpl
pop
les
ja
mov
pop
es
dec
xor
pusha
lock
mov
mov
out
repz
xor
mov
jle
out
iret
je
idivb
cmp
mov
adc
pusha
inc
xchg
lcall
nop
mov
ret
xor
dec
pop
fwait
xchg
stos
add
dec
aas
jle
sbb
adc
testb
sbb
aad
ss
push
mov
mov
mov
sbb
push
jnp,pn
push
mov
dec
lcall
into
fsubrs
cld
mov
mov
icebp
push
jb
scas
mov
aas
in
mov
scas
mov
mov
mov
notl
jne
sete
mov
mov
dec
lret
movsb
xchg
pop
inc
int3
xor
insl
mov
xor
dec
pop
addr16
add
mov
popf
sahf
fstl
rorb
rclb
cmc
testb
loop
mov
add
rcrl
dec
fisttpll
cld
jns
adc
dec
arpl
and
push
and
stos
lret
mov
addb
vpmulhuw
mov
insl
jns
sbb
mov
imul
xchg
ret
xor
and
jp
lods
aas
hlt
mov
mov
repz
xchg
stos
sbb
sahf
add
in
sti
pop
dec
popa
cltd
add
mov
inc
xor
int3
dec
mov
pop
call
sar
inc
jmp
jl
jmp
push
ficompl
mov
mov
repnz
or
hlt
pop
xor
mov
xor
adc
mov
clc
lret
outsl
adcl
ret
or
cmp
or
xchg
loope
xor
in
addr16
fidivrs
cmp
fisubrl
adc
pop
ljmp
lret
gs
dec
xchg
and
ds
mov
xor
lret
mov
dec
or
xchg
pop
fsubrp
sbb
imul
and
mov
loope
dec
mov
insl
cmp
lods
in
mov
cs
mov
pop
int
dec
adc
mov
test
mov
mov
loop
loope
xor
gs
pop
jae
mov
xchg
add
cmp
jg
call
push
xor
cmpl
fisttps
sub
xchg
jecxz
add
and
pusha
mov
sbb
mov
pop
in
sub
je
mov
dec
out
dec
stos
movsl
out
fcoms
push
stc
or
pop
sbb
sbb
mov
lret
pusha
cmp
jne
push
mov
hlt
popa
mov
clc
sub
fidivrs
mov
mov
insl
bound
sbbl
lds
insl
dec
xlat
mov
in
mov
push
and
vphaddbd
push
iret
mov
into
fimuls
jl
push
add
sti
adc
stos
movsb
push
adc
pop
js
out
les
xchg
das
xchg
fsubr
ret
jmp
mov
or
mov
and
add
jp
cmp
cmp
and
dec
pop
adc
jno
ljmp
std
and
cmp
ja
dec
insl
push
xchg
mov
pop
push
add
push
daa
iret
mov
push
popf
sbb
dec
std
pop
je
sub
jno
stos
pop
sub
cmp
test
call
pop
or
jae
cmp
lds
adc
not
lret
mov
jo
popf
inc
js
dec
push
imulb
lret
xchg
addr16
orb
or
in
or
outsl
pushf
cmp
fs
mov
nop
jl
popa
add
stos
jb
frstor
push
jl
inc
xchg
pop
mov
mov
cwtl
or
push
or
inc
push
mov
shlb
pop
push
jge
sbb
pop
lea
scas
aaa
push
dec
adcb
aam
sbb
inc
lds
stos
mov
mov
jb
gs
cmpl
outsl
outsb
jns
mov
sub
cmp
push
xor
and
or
push
imul
sub
dec
mov
es
and
and
in
xchg
dec
adc
push
fcmovnu
push
jnp
sbb
cmpb
rorb
add
cld
push
dec
fistl
xlat
xchg
aas
add
outsb
les
mov
aam
mov
pop
mov
xor
inc
xorl
insb
cmp
mov
adc
stc
sub
xchg
cwtl
sub
and
push
scas
daa
daa
and
push
jmp
jge
inc
flds
scas
sbb
mov
cmc
and
les
jmp
gs
or
popf
inc
cld
mov
lods
sahf
mov
cmp
les
call
in
xor
push
mov
and
sub
aaa
inc
aas
ljmp
hlt
or
mov
das
rcrl
push
lret
shlb
loopne
mov
xchg
fimuls
shrb
add
pop
jo
insb
xor
mov
lds
fists
cmp
hlt
mov
jbe
xchg
sbb
repz
and
popf
mov
repz
test
jo
lret
dec
frstor
cli
xchg
daa
daa
xchg
push
in
test
xlat
dec
sub
aas
fnstsw
fadds
add
mov
sub
jbe
jno
mov
dec
clc
cs
mov
iret
sbb
mov
test
enter
negb
dec
fmull
inc
incb
negb
fildll
test
jmp
mov
add
dec
insb
mov
daa
adc
ds
aaa
in
inc
sub
or
addb
or
push
adc
fldlg2
sti
aad
fbld
shl
lods
inc
lret
pop
xor
ljmp
int3
icebp
loope
negb
lds
push
add
pusha
or
fs
sbb
jmp
bound
sti
xchg
xchg
int3
cmp
cltd
in
jle
sarl
or
and
mov
sbb
fnstsw
mov
filds
xchg
add
ret
insl
dec
pop
xchg
push
ds
sub
jnp
cld
rcrl
sbb
mov
ljmp
out
and
jle
aad
jbe
cwtl
cmp
cs
inc
repz
cmp
pusha
inc
and
jne
or
adc
in
loope
stc
cld
mov
sahf
cmc
stos
aam
movsb
in
pushf
pop
in
and
out
mov
jno
or
lock
mov
lea
ljmp
sub
adc
pop
lea
sbb
mov
pop
mov
mov
xchg
or
jg
mov
test
loope
cli
call
pop
mov
add
hlt
fldenv
movl
push
adc
push
stc
push
gs
inc
jl
adc
orl
push
mov
and
repnz
or
sarl
pop
dec
mov
dec
aad
add
or
adc
xchg
add
mov
insb
pop
inc
adc
push
ret
dec
mov
fdivl
mov
cltd
adc
orb
dec
in
jecxz
sub
inc
loop
mov
insb
int
pop
repnz
pop
out
xchg
rcl
push
js
fidivrl
and
xchg
xor
push
sti
inc
out
pop
mov
cmp
jbe
arpl
pop
push
sbb
inc
inc
lea
clc
mov
cmpsb
call
sti
orb
leave
call
xchg
out
cli
rol
stc
xchg
pop
repz
dec
jle
xchg
cmp
dec
jl
inc
jmp
inc
sbb
adc
jg
sbb
aaa
rcl
pop
mov
insb
xchg
and
stc
outsl
fadds
and
jg
mov
cmp
cmc
ret
xor
lret
xchg
rcrb
push
push
jo
std
in
mov
pop
mov
xor
daa
sub
pop
xchg
lret
dec
ret
and
fsubl
test
mov
push
pop
push
push
cmp
fistpll
mov
cmpsl
les
ret
bound
jecxz
ret
cmp
xchg
cmp
outsl
add
mov
loop
es
mov
mov
popa
cmp
and
stc
mov
mov
or
pop
in
xchg
mov
adc
dec
push
into
xchg
into
out
fstl
je
pop
imul
lods
jns
jno
sbb
repz
pop
jl
fsincos
outsb
int
stos
icebp
test
jb
mov
popa
repnz
bound
in
xchg
hlt
jle
inc
jbe
rcr
push
sub
je
jecxz
inc
push
adc
pop
mov
ret
lds
mov
sbbl
sub
imul
scas
es
roll
adc
fisubl
pop
test
stos
xor
sub
pop
pop
xchg
lret
sahf
adc
imul
fstl
outsl
lea
cmp
aas
enter
scas
lods
cmp
ss
imul
sub
push
push
sbb
adc
shl
mov
cmpsb
shl
adc
daa
lahf
pusha
push
dec
inc
imul
adc
or
std
sub
jge
push
das
mov
pop
mov
mov
pop
jg
jb
insb
loop
pop
test
jo
in
mov
jge
fs
mov
test
in
cld
cltd
mov
xchg
push
icebp
out
xlat
mov
dec
sub
insl
mov
repz
pusha
scas
ret
cltd
fsubs
add
xor
lods
hlt
mov
sbb
out
add
inc
jmp
pusha
fadds
add
jb
fildll
mov
mov
jmp
cmp
add
ja
dec
sbb
pop
je
fmuls
jge
mov
stos
subb
xchg
stc
jle
fucomi
sub
pop
push
lahf
jne
push
push
xchg
les
add
outsb
rcrl
pop
cmpsb
mov
cmpsb
cmp
xchg
push
pusha
adc
xor
cmp
je
push
lods
xor
jl
lret
jl
jp
cmp
cmp
sub
inc
fs
daa
push
mov
and
xchg
idiv
mov
ror
outsb
push
bound
jg
jnp
shrb
jecxz
mov
adc
mov
je
push
jns
mov
mov
dec
sbb
fnstenv
jg
or
xchg
mov
data16
fists
ds
adc
call
nop
ret
popa
jmp
in
repnz
out
cmp
mov
adc
subb
pop
ds
xchg
fs
jne
pushf
jns
xor
push
or
jl
mov
lods
cmc
ds
pop
js
xchg
push
movsl
mov
push
xor
nop
imul
or
aad
xlat
xor
iret
or
jmp
aas
aaa
out
lahf
out
stos
sub
push
rorb
pushf
cmp
inc
sbb
pop
xor
fisttps
lret
add
mov
mov
xchg
and
rorb
xor
loopne
repz
mov
mov
dec
call
sahf
fidivs
mov
and
mov
outsl
pop
movsb
lcall
clc
iret
and
rcr
test
int3
lea
xchg
add
jge
jge
rol
cmp
mov
mov
nop
jns
inc
xor
push
lcall
xlat
and
push
out
insl
pop
in
jecxz
cwtl
push
pop
jns
adc
jno
push
mov
mov
loop
cwtl
jb
sbb
movsb
lahf
stos
push
adc
push
out
loopne
xor
sub
in
push
stos
xchg
insl
nop
daa
pop
into
mov
lds
inc
jp
inc
call
sbb
dec
mov
pop
stos
leave
cmp
sub
cmp
add
leave
out
mov
adc
in
jge
xlat
fmul
sbb
mov
clc
scas
pop
add
sbb
or
jnp
imul
sub
gs
jmp
sahf
adc
and
and
nop
fcompl
fisttpl
imul
push
inc
cmc
pop
lds
leave
lret
mov
into
dec
cmp
aas
enter
push
cli
add
dec
imul
sub
lods
insb
pop
pop
adc
dec
cmp
mov
es
add
xlat
lahf
pop
pop
inc
adc
mov
in
pop
sub
ljmp
mov
mov
aam
xchg
push
out
loop
test
push
sarl
inc
loopne
lea
rorb
xor
movsl
inc
xchg
xchg
jmp
pop
push
mov
pop
add
fldcw
dec
das
and
cmp
aas
mov
mov
inc
test
shrb
mov
test
sub
pushf
mov
xor
icebp
rcrb
sbb
daa
jb
inc
adc
push
loope
dec
cld
adc
or
loope
fcoms
les
jge
ljmp
push
dec
mov
or
loop
push
jns
fisttpll
or
sahf
lods
and
xor
imul
dec
hlt
jle
lcall
loopne
bound
lock
mov
sbb
jmp
mov
ficoml
or
mov
out
aam
data16
je
and
pop
shll
mov
xorps
jae
shll
pop
mov
mov
shll
iret
jno
xchg
call
push
in
fmul
sbb
scas
push
mov
fldl
movsl
jp
mov
cmp
fwait
jle
mov
dec
movsl
and
aas
das
outsb
push
je
je
push
cmpsl
mov
dec
or
adc
imul
clc
mov
adcl
lea
inc
decl
xchg
and
push
and
fwait
pop
es
scas
int
lods
outsb
std
daa
aas
adc
and
mov
cs
cmpsb
mov
or
gs
pop
shrb
cmc
imulb
es
inc
inc
pusha
in
daa
cmc
leave
xchg
cli
les
xchg
fcmovnu
and
push
stos
push
adc
jbe
jmp
out
mov
pop
push
dec
mov
add
inc
out
pop
int
shrd
jns
sbb
movsb
mov
sub
mov
add
addr16
jp
int
xor
xor
scas
in
mov
mov
popa
xor
mov
sbb
imul
lahf
inc
push
push
jecxz
push
je
cltd
add
cmp
mov
les
add
roll
xchg
int
outsl
and
repnz
out
jl
dec
aad
mov
fisttpll
rcrb
cwtl
lock
inc
inc
jns
dec
imul
mov
in
repnz
int3
adc
inc
push
ds
push
inc
outsb
aad
jae
mov
pop
bound
jmp
push
mov
fcomi
dec
pop
aaa
inc
insl
dec
std
pushf
and
inc
hlt
jns
rcrl
xor
lretw
xchg
rcll
in
fistl
fstpt
pushf
std
inc
rorb
mov
cmpsb
dec
dec
dec
pop
shll
push
cmpsl
cmpsl
or
imul
pop
int
lods
inc
ja
sarb
dec
shll
pop
pop
nop
push
dec
pusha
pop
sbb
xchg
je
fsubs
les
outsb
cmc
mov
in
xchg
adc
mov
add
cltd
sub
in
jp
or
push
xor
or
add
mov
ffreep
icebp
push
pop
xchg
xlat
pop
adc
push
push
sbb
xor
movsl
fs
mov
aad
out
lds
sub
add
outsb
nop
sbb
dec
mov
jno
fnstsw
sahf
and
mov
dec
ret
sti
stc
sahf
mov
and
mov
pop
mov
xor
out
imul
rorl
outsl
out
and
not
sbb
insl
popf
hlt
adc
push
popf
lcall
or
leave
cmpsb
and
mov
hlt
sbb
leave
and
pop
insl
sbb
js
scas
jle
inc
in
pop
sub
or
sbb
jne
cmpsl
xor
sub
repnz
nop
xchg
push
push
push
jle
setp
sub
loop
leave
xchg
mov
test
xchg
and
mov
test
ljmp
hlt
fists
enter
in
stc
daa
fnstenv
jbe
pop
xchg
or
movsl
lods
cld
fcomps
arpl
add
jle
popl
ss
cmpsb
mov
xchg
mov
adc
mov
and
jnp
dec
jl
aas
mov
rcr
push
and
fiaddl
xlat
jo
or
sarb
es
mov
mov
mov
lret
mov
scas
inc
or
jl
imul
rcll
inc
push
xor
int
push
out
dec
iret
pop
lods
add
out
mov
pop
pop
dec
fmuls
pop
ret
jns
test
js
inc
mov
xor
xchg
nop
cmp
adc
std
sub
xchg
out
adc
and
sahf
sbb
outsl
pop
aaa
leave
mov
jno
pop
cmp
fiadds
pushf
cli
rcrb
cmp
xchg
repnz
push
ljmp
mov
xor
ror
je
cmp
aaa
xor
mov
pop
leave
sbb
add
xchg
ds
out
jle
movsb
cmp
and
imul
out
jae
mov
jp
cmp
xor
add
movsl
jne
or
cli
xor
add
fcomps
cmpsl
test
lds
jmp
fisttpll
fcmovnu
in
add
test
movsl
pop
fwait
jnp
jle
imul
mov
inc
jecxz
outsl
imul
addb
mov
andl
pushl
pop
cmp
inc
ds
jp
jbe
mov
stc
fimuls
daa
pushf
push
pop
xchg
out
mov
adc
adc
sahf
out
mov
popf
xchg
out
inc
fstpl
mov
mov
dec
or
jns
mov
pop
lds
ja
in
jae
dec
and
or
dec
xchg
sarb
xchg
mov
les
sub
and
jmp
cwtl
mov
jg
rcrb
pop
ja
pop
fdivl
xor
shrb
jb
inc
je
frstor
std
cwtl
or
jmp
shlb
insb
in
xor
stos
das
cli
aas
xchg
mov
dec
movsb
idivl
mov
xchg
pop
pop
cwtl
pop
add
adc
push
cli
test
and
push
push
add
in
sub
out
pop
inc
stos
dec
inc
push
jo
xchg
mov
pop
jge
fisubl
jbe
lods
popa
mov
jmp
adcb
ja
pushf
cmp
out
pusha
jg
mov
push
mov
sbb
cmpsb
enter
mov
shll
loopne
add
xor
xchg
das
push
loope
sbb
mov
jp
dec
adc
and
mov
and
mov
or
and
addr16
sti
cwtl
xchg
jo
popa
scas
add
test
dec
mov
dec
cli
sbb
test
cmp
jbe
inc
mov
xor
mov
or
ret
in
inc
jg
sbb
inc
les
outsl
lcall
cwtl
mov
clc
mov
push
or
into
lods
lcall
imul
jbe
inc
nop
lock
and
lret
inc
adc
cmp
push
adc
stos
adcl
jns
insl
loope
dec
stos
push
mov
test
mov
push
sahf
and
popa
mov
movsbl
fldt
stos
imul
shr
test
mov
xchg
push
andl
in
rcll
lret
gs
test
adc
mov
or
jnp
lock
sbb
cld
mov
or
stos
mov
sub
or
lods
add
sub
mov
and
xchg
inc
aad
cmpsb
dec
xchg
sbb
jns
daa
shrl
sarl
add
and
lret
arpl
add
fwait
test
iret
mov
sbb
push
dec
mov
jmp
leave
mov
lock
xchg
push
cmp
shrb
std
jo
aad
notb
rorl
loope
mov
jecxz
add
leave
adc
dec
movsb
mov
mov
lahf
xchg
cltd
xor
in
in
popa
test
mov
pop
imul
or
int
imul
cltd
cmp
jo
out
fadds
mov
xchg
mov
mov
fld
lahf
add
cmp
stc
jno
jne
pop
sub
mov
dec
or
movsl
push
push
outsl
jne
adc
insb
jle
jmp
int3
fnsave
push
sub
xor
in
mov
imul
mov
add
fwait
clc
adc
pusha
jge
mov
xchg
divl
dec
dec
cmp
test
pop
pop
pop
sbb
mov
pop
mov
cmp
mov
loopne
ja
loop
hlt
in
add
mov
pop
pushw
jl
inc
in
push
adc
popf
or
nop
sbb
xor
lcall
mov
push
jne
popa
lret
aam
out
mov
data16
inc
ret
push
pop
shrl
jb
out
mov
sbb
mov
insb
loope
add
test
jb
cli
popf
xor
fiaddl
xor
xlat
inc
and
cmp
pushl
dec
ljmp
push
into
and
jns
pop
jmp
leave
movl
jmp
popl
xor
mov
jg
lods
or
jmp
jmp
shll
lods
mov
sti
xchg
cwtl
repz
push
jle
push
inc
insb
outsb
push
jl
test
insb
js
xchg
add
xchg
jo
lds
cmp
jge
adc
mov
add
inc
xlat
lret
hlt
xchg
outsl
ja
pusha
sti
sub
lcall
stos
adc
mov
mov
push
enter
mov
xor
lods
sar
in
adc
stc
xchg
mov
xor
pop
js
addr16
in
test
mov
in
xchg
jp
rol
test
pop
jp
lds
adc
cwtl
mov
js
clc
adc
mov
ret
add
mov
xchg
ret
lcall
movsb
and
and
adcl
orl
sbb
add
or
pusha
cmpsl
or
xor
lods
sub
jb
mov
rclb
test
pop
mov
xor
mov
jbe
sbb
adc
test
test
jnp
fnstcw
test
enter
push
call
push
mov
fldt
dec
xchg
daa
and
pop
xor
mov
mov
push
out
hlt
loopne
sub
xchg
push
int
mov
loop
mov
ret
adc
push
jmp
fwait
loope
rcrl
ss
dec
add
xor
aas
rcrb
mov
outsl
pushf
inc
dec
test
adcb
pusha
sbb
sbb
cmp
lahf
cmpb
test
aam
hlt
cmp
icebp
mov
inc
push
dec
fidivs
loop
jns
dec
pop
repnz
fcmovbe
mov
in
mov
insl
sub
cld
adc
jae
ja
pop
insb
lods
xchg
push
sbb
scas
xor
in
jg
xchg
push
stos
mov
adc
ss
arpl
aam
les
sti
shlb
cmp
jo
mov
inc
dec
dec
jecxz
push
dec
push
xchg
dec
inc
pop
or
pop
pop
dec
or
hlt
call
nop
jns
and
or
nop
xchg
fdivp
lahf
fwait
cmp
jle
lcall
mov
lret
andl
movsb
and
adc
push
aaa
pop
loop
lods
enter
inc
dec
jae
stc
in
cmp
repz
ficoms
fnstenv
mov
mov
xchg
mov
orb
outsl
repnz
mov
aaa
ret
or
loope
add
or
xor
insl
fmuls
mov
dec
aaa
adc
and
in
mov
and
or
mov
aaa
sbb
inc
sahf
mov
cmp
or
popa
jle
pusha
sub
jmp
fldl
push
cltd
or
iret
repnz
inc
pop
add
add
inc
pop
cmp
pop
pop
dec
sub
int
push
je
imul
arpl
clc
add
fs
push
jbe
xchg
rcrb
inc
mov
mov
bound
sbbb
pop
or
sbb
xor
push
fildl
cmp
loope
mov
mov
mov
inc
mov
leave
pop
or
stos
and
add
ja
dec
cmp
pop
sbb
and
stos
inc
fwait
mov
mov
sub
movsb
iret
fsubrs
cmp
test
mov
jbe
je
push
push
stos
xchg
jnp
cmp
push
in
ja
dec
fstpt
gs
mov
and
and
repnz
clc
inc
jg
sub
jmp
jnp
js
addr16
cwtl
cmc
shlb
sahf
sbb
enter
xorb
lods
xchg
mov
lcall
mov
dec
and
loopne
jecxz
adc
adc
and
push
ss
out
arpl
jle
pop
lcall
cltd
mov
sbb
mov
test
adc
xor
mov
push
ret
xchg
popf
mov
push
cmp
sbb
push
jl
push
lret
jo
orl
and
push
xor
cmpsb
pop
shll
mov
add
rorl
mov
es
out
lret
sub
xchg
jl
lods
cli
je
hlt
stos
stc
xchg
cwtl
push
xchg
mulb
jge
es
xchg
inc
jne
mov
ret
cmp
mov
push
dec
ljmp
xchg
and
mov
push
xor
xchg
lret
cltd
pop
mov
xchg
xchg
loopne
popfw
jmp
push
or
ret
push
lea
shrb
lock
or
insb
aad
mov
cmp
mov
or
inc
cmp
pop
mov
jp
xor
out
mov
mov
adc
cmp
cmp
mov
sub
addl
sbb
xchg
aad
xor
js
insl
jbe
stos
or
test
jg
sub
and
out
aam
mov
loop
sub
push
jmp
orb
dec
xchg
movsl
sub
pop
add
jb
or
jns
fsts
mov
sub
push
adc
and
xchg
inc
mov
inc
push
lods
xor
pcmpeqd
cmc
stc
mov
or
ds
mov
mov
out
lcall
pop
xor
data16
lea
sbbb
xchg
sbb
rcrb
movsl
dec
inc
add
xchg
mov
dec
mov
jbe
sarl
scas
mov
xor
fxch
in
mov
mov
push
fnstcw
into
test
jns
test
ret
bound
xorb
cmc
dec
sbb
push
pop
or
or
shlb
mov
mov
inc
push
arpl
mov
inc
jbe
pop
jg
mov
scas
lea
cmp
imul
rorl
cs
or
jb
in
sub
pop
mov
cmp
xor
push
in
aas
jno
clc
inc
imul
cmc
add
jns
cs
jo
in
mov
loope
or
push
aad
lods
loop
or
mov
inc
jl
cmpsb
mov
mov
jne
inc
mov
push
add
frndint
out
sbbb
xor
fwait
push
push
jmp
das
repz
mov
std
out
mov
popf
xchg
xor
fbld
leave
add
and
icebp
sbb
in
imul
mov
add
test
dec
jecxz
testl
rcr
pop
mov
cwtl
out
adc
add
pop
dec
sbb
dec
sti
mov
inc
jo
or
into
mov
out
in
fbstp
shl
stos
push
lock
scas
jmp
dec
jp
aam
dec
mov
js
fisttps
jg
shrb
mov
sbb
dec
mov
or
cmpsl
mov
or
scas
scas
rcrl
pop
notl
aaa
ret
or
insl
xbegin
sbb
addr16
inc
bound
push
dec
es
mov
sub
dec
xlat
in
adc
test
mov
push
push
cmpsb
push
fwait
xchg
out
pop
pop
push
shrb
mov
subb
pop
xchg
adcb
push
out
int
outsl
dec
sbbl
rorb
lahf
xor
shlb
outsl
sbbb
sbb
lret
ljmp
pop
push
popl
add
adc
popa
xor
outsl
sbb
jmp
dec
je
pop
testl
mov
cmp
fstpt
call
pop
pop
jnp
outsl
or
fistpl
fs
sbb
daa
fld
dec
cmpsb
cltd
mov
jg
push
test
aad
test
cmpsl
mov
jge
fucomip
inc
enter
addr16
aaa
fcmovnu
and
sbb
push
hlt
pop
pop
inc
popa
adc
popl
push
lods
xor
dec
pop
ret
ja
jp
mov
and
in
out
lret
adc
cmpsb
pop
pop
decb
mov
mov
movsb
pop
or
fisttps
orl
mov
pop
insb
inc
jbe
inc
cmpsb
push
stos
lods
decb
add
lea
js
test
sub
setb
xchg
cmp
inc
fwait
jmp
pop
cmp
mov
or
test
adc
dec
xchg
hlt
scas
mov
mov
jmp
pusha
mov
mov
xor
lods
out
adc
mov
imul
imul
shll
or
int
xlat
xchg
add
mov
fisttps
gs
fldt
cmp
cmc
add
mov
std
add
dec
out
mov
inc
push
outsb
dec
sahf
pop
mov
loope
xchg
loop
sahf
jbe
cltd
jno
push
and
jge
outsl
movsl
dec
cmp
jmp
ret
cmp
push
aas
and
or
and
es
xorb
push
movsl
cld
stos
push
rcl
jge
mov
cmc
fnsave
sbb
push
sub
cltd
dec
jl
fstps
aaa
loopne
add
sub
push
sti
dec
insb
mov
xor
adc
out
adcb
mov
faddl
das
sarl
jo,pt
xchg
push
dec
xchg
icebp
jne
and
sbb
add
cmp
sbb
sub
and
jae
sbb
jle
ret
rolb
push
cltd
sub
pop
jbe
lret
int
xchg
call
sub
popw
pop
out
sbb
cmp
mov
jo
or
mov
out
stc
loop
adc
cmpsb
in
aad
jmp
cmpsl
mov
sub
cmp
inc
aad
pushf
outsb
push
mov
jno
sub
jl
sbb
sbb
add
jae
mov
test
out
mov
ljmp
cmp
jne
add
ret
xchg
xchg
dec
cmpsl
scas
out
jge
xchg
ss
ljmp
cmp
inc
dec
repnz
cli
rolb
mov
jno
in
lods
ror
mov
stos
or
push
mov
xchg
sbb
out
out
insb
jecxz
test
rclb
push
aas
xchg
dec
sbb
mov
xchg
mov
jne
lret
cmp
mov
cmp
fdivrs
sub
lret
dec
js
mov
push
in
mov
ret
call
xchg
mov
in
xchg
cld
cli
sbb
imul
sub
sub
rclb
mov
fidivl
xchg
pusha
shrb
sbb
and
xchg
movsl
xor
icebp
push
mov
push
add
and
xor
in
rclb
cmpsl
xchg
add
inc
and
dec
jp
xchg
push
xor
push
push
mov
or
push
cmp
sbb
sub
subb
leave
out
adc
sub
loop
jae
dec
xchg
inc
gs
jae
inc
pop
cmp
add
xor
and
xor
stc
pop
sbb
out
mov
inc
out
inc
test
push
sub
insb
pop
inc
add
sahf
sti
xchg
mov
test
repz
incl
add
jg
adc
clc
outsl
sarl
jne
mov
xlat
lock
xchg
scas
shrb
adc
pop
inc
je
jne
mov
mov
xchg
lcallw
lock
adc
ja
decb
inc
sub
repnz
or
lds
or
pop
shrb
sbb
push
inc
icebp
out
negl
jbe
cmc
adc
test
add
pop
push
sub
scas
int3
and
inc
arpl
scas
cltd
pop
sbb
daa
aad
and
insl
mov
mov
inc
fistl
xor
js
dec
mov
lret
rorb
or
scas
popa
std
in
mov
xchg
movsb
pop
mov
and
aam
sub
pop
mov
sbb
unpckhps
imulb
pop
cli
push
loop
sbb
aad
lea
mov
lcall
fists
and
sbb
repnz
aas
sti
repz
addl
pop
arpl
mov
test
jbe
pop
push
movsl
fiaddl
pushl
ret
xchg
imul
in
andl
adc
mov
lods
int
jae
mov
pop
ficomps
imul
ss
inc
sub
pusha
add
lods
push
stc
lcall
dec
ret
clc
ret
xchg
pop
cmp
icebp
popa
cli
mov
dec
jno
sbbb
test
jbe
pop
xchg
mov
adc
pop
test
mov
xchg
xor
fcomps
dec
test
mov
imul
push
aam
mov
sub
push
push
pop
and
popf
xchg
lret
inc
fldenv
fsts
sub
jl
ficoms
inc
je
inc
xchg
rcr
scas
ret
sub
mov
movzwl
xchg
push
lcall
push
sub
in
sub
enter
test
or
dec
push
mov
aas
mov
mov
movsl
dec
loope
add
add
nop
push
movsb
or
jae
sbb
sub
mov
cmp
cmpsb
out
pop
xchg
fbstp
jle
push
movsb
adc
repz
dec
cmp
sbb
inc
or
ret
lds
jno
pushf
loope
clc
pop
xchg
jo
adc
pop
add
roll
stos
pop
pop
push
mov
xchg
inc
les
sub
or
ljmp
divb
xchg
dec
insb
cmp
inc
andl
stos
cmp
dec
sarl
cmp
loope
addb
sbb
ds
fisubs
stos
add
jo
jp
sbb
and
mov
int3
xchg
dec
mov
xorb
jno
jbe
movsl
lods
xor
adc
test
pop
adc
int
stc
xchg
push
imul
jp
adcb
add
pop
mov
or
in
adc
adc
lret
das
dec
jae
push
push
and
inc
push
sub
loop
test
lds
test
jecxz
sarl
outsb
push
call
fstpl
push
lret
mov
mov
hlt
arpl
mov
pop
sub
mov
add
cltd
xor
out
shlb
aas
or
loop
and
ret
cmp
jne
cmp
pop
lcall
mov
sbb
sub
pop
jno
jae
lea
push
sub
inc
inc
test
cmc
push
mov
lods
lcall
cmpsl
add
jle
xchg
push
xor
xchg
jge
addr16
pop
movl
daa
mov
mov
add
test
dec
push
xor
cli
mov
arpl
or
popf
push
fcoms
adc
repnz
mov
fs
fisubl
aad
xor
pop
daa
jae
xorb
dec
lods
push
jl
pop
cli
mov
xor
xor
adc
aam
push
lret
push
xor
and
xchg
movsl
jp
inc
test
cmp
sub
cmpsl
mov
stos
push
add
pop
mov
jmp
mov
add
adc
ja
cmp
mull
iret
jle
add
mov
cmp
fmuls
add
xchg
leave
sbb
icebp
sbb
jecxz
inc
stos
outsb
outsb
loop
dec
mov
sub
ja
mov
ret
mov
hlt
out
xchg
add
sbb
jp
scas
mov
das
cmp
cltd
mov
add
out
jnp
push
lret
jb
or
fabs
insb
insb
dec
es
std
or
jle
sti
jp
and
out
dec
mov
dec
xchg
and
xchg
xor
pop
divb
jmp
cmp
pushf
mov
dec
ja
pop
repz
xor
xor
std
pusha
rcll
push
arpl
mov
xchg
xor
cmpb
mov
mov
push
mov
les
scas
mov
or
das
or
mov
mov
mov
push
lret
lock
mov
cmp
sub
insb
aam
cwtl
hlt
scas
adc
inc
inc
pop
hlt
inc
loop
push
cmp
ljmp
sbb
cmpsl
cmp
inc
jns
add
ret
pop
cmp
add
push
or
les
sub
sub
xor
push
call
mov
sub
and
rorb
js
divb
add
inc
adcl
xor
add
adc
icebp
cmpsl
mov
scas
dec
and
stos
push
jl
push
push
scas
imul
cmp
push
lret
subl
cmp
in
inc
lahf
fstps
sub
js
push
hlt
loope
and
pop
test
ds
cmp
inc
aad
mov
pop
xchg
mov
dec
dec
add
mov
pop
or
push
pop
xchg
lcall
arpl
xor
dec
shrb
mov
add
jmp
aad
xor
fs
test
xorb
jbe
or
ds
fmul
add
fcmovu
inc
leave
jb
cmovne
bound
mov
jge
inc
call
sub
xchg
fmull
sbb
fmuls
leave
scas
call
cmp
adc
test
sub
push
pop
mov
and
aaa
lods
inc
push
sub
cwtl
mov
and
xor
xor
add
out
pavgb
xchg
cs
xchg
push
mov
outsb
adc
jnp
or
sub
pop
pop
inc
mov
mov
out
fdivp
sbb
js
hlt
jp
popa
je
repnz
movsb
sbb
and
push
xor
or
jns
mov
xchg
in
xchg
mov
jae
fmuls
int3
sub
movsb
jae
mov
iret
and
shr
daa
pop
les
aas
sti
mov
mov
jbe
inc
and
ret
or
mov
adc
pop
pop
fidivs
pop
ljmp
xchg
sarb
add
xlat
jne
cwtl
mov
addr16
stos
push
cmp
dec
xchg
xchg
lds
insl
sub
das
loope
repnz
stos
adc
lahf
in
pushf
arpl
sbb
adc
push
lcall
mov
jmp
pop
rol
mov
dec
mov
pop
push
mov
fisubrl
mov
sahf
add
jne
jno
dec
xchg
push
xchg
lea
and
inc
inc
push
out
lahf
jb
shlb
movsl
push
fwait
or
jo
out
push
xchg
pop
mov
int3
inc
xchg
sub
jne
mov
cwtl
in
hlt
loopne
pop
insl
and
stos
lahf
push
xchg
cli
dec
mov
push
inc
test
fsts
xchg
scas
jbe
je
cmp
shll
rolb
aad
or
pop
pop
and
inc
or
add
mov
fldcw
inc
testl
aam
jno
in
pusha
cmp
in
arpl
push
add
xor
inc
mov
ror
lods
or
je
jmp
sahf
dec
inc
js
sub
adc
add
sarl
movsb
and
rcrb
dec
pop
sub
jb
fwait
jmp
aad
cmp
cmp
pop
push
popa
popa
pop
mov
fldenv
ret
mov
cmp
pop
out
mov
xor
outsb
fs
mov
add
mov
cld
aam
int3
and
rol
sub
mov
lock
inc
mov
and
fstpt
pop
push
stos
or
sbb
jmp
mov
push
int
mov
call
xor
loop
pop
imul
jne
mov
into
test
sub
add
fsubrp
lock
cmpsl
inc
scas
pop
push
adc
lea
and
jecxz
lods
pop
xchg
push
xchg
mov
and
hlt
dec
incl
cli
rcr
xchg
das
inc
and
lret
jge
cmc
push
pop
outsb
add
adc
push
ss
test
jg
mov
les
stos
mov
ljmp
sbb
stos
push
inc
les
dec
je
or
test
lcall
clc
mov
icebp
inc
call
cmpsb
lahf
cwtl
push
and
nop
into
jp
sbb
jg
mov
sbb
mull
mov
stc
xchg
pop
sub
jb
mov
push
jb
sbb
dec
add
cmpsl
fbstp
loope
and
dec
push
xlat
pop
cmp
mov
in
jmp
pusha
sub
dec
add
testl
sub
xor
dec
aam
and
xorl
stos
mov
pusha
dec
add
in
jne
dec
cmp
cli
stos
mov
fildll
push
inc
dec
jns
inc
movsl
int
loop
stos
jno
sti
xor
add
adc
rcl
imul
push
rcl
sub
loope
stc
mov
shl
sbb
inc
fs
mov
dec
clc
pushf
pop
push
es
jbe
inc
push
jns
sti
jns
sub
jge
daa
xchg
pop
xor
pop
stos
test
in
mov
test
cmc
nop
fidivl
shl
test
inc
stc
mov
pop
pop
lods
mov
push
vpcmpeqb
jnp
repnz
stos
js
inc
cmp
cld
test
scas
test
push
mov
gs
orl
mov
int
mov
xor
sarb
add
mov
cmp
mov
mov
mov
sbb
addr16
stos
cmc
subl
shll
jno
mov
or
lods
mov
mov
cltd
xor
push
jg
jb
ljmpw
mov
ffree
daa
mov
jp
sub
adc
cmp
inc
dec
enter
out
int
pop
push
insb
scas
mov
xor
test
jl
adc
inc
push
in
xor
dec
rorb
xchg
jmp
mov
sbb
loopne
mov
ja
out
addr16
in
pop
push
jle
xchg
ljmp
ficoml
cmpsl
data16
pusha
xorl
iret
loop
and
insl
sub
testb
bound
cs
sub
inc
mov
mov
out
inc
outsl
jo
js
dec
push
subl
call
dec
insl
jecxz
xor
pushf
xor
jb
adc
outsl
insl
mov
arpl
jl
repnz
xchg
mov
rcll
lock
dec
jae
mov
out
cs
adc
jmp
or
or
inc
mov
lock
or
into
pop
shrb
mov
out
sub
sti
jnp
fcmovnbe
imul
lahf
and
hlt
add
mov
shrl
inc
cmpb
mov
imul
loope
mov
push
cmp
jae
pusha
dec
push
mov
test
jmp
xchg
aas
enter
test
sbb
add
xchg
add
repnz
pop
dec
jmp
leave
popf
fnstenv
mov
ss
popl
insb
push
test
lret
daa
clc
insb
adc
sub
stos
outsb
sub
mov
jl
popf
iret
je
pop
cmc
pop
mov
cmp
ja
mov
sub
sub
out
jle
push
jnp
je
rcrl
xchg
pusha
xchg
add
mov
add
push
dec
cmp
push
popa
ljmp
arpl
xor
ret
dec
mov
push
xchg
sub
pop
push
add
xlat
push
cmp
lods
in
dec
ss
add
jle
and
push
xchg
mov
jmp
xchg
sbb
insb
jmp
dec
xchg
cmp
inc
dec
xor
mov
sbb
cmp
xor
adc
pop
xor
fiaddl
inc
dec
stc
xor
fdiv
sbb
cmpsl
mov
in
adc
repz
ret
cwtl
sub
cli
dec
mov
dec
addr16
loop
pop
and
sbb
rcrb
xor
movsb
das
lahf
jns
bswap
jne
and
and
push
nop
jnp
insl
ja
jns
sbb
sbb
scas
ja
lock
mov
mov
push
sti
jnp
cmpsl
test
cmpl
movb
inc
popa
jl
xchg
mov
out
push
pop
push
adcl
mov
andl
sbb
adc
rep
xor
imul
stc
aad
ret
mov
orl
xchg
mov
dec
jae
lret
sbbl
push
outsb
fstpl
cmpsl
inc
push
sub
or
test
xor
mov
push
sar
popf
push
hlt
sbb
mov
add
cld
aad
stc
ret
imul
adc
push
pop
jns
je
aad
les
push
in
clc
and
adc
xlat
idivl
add
push
cwtl
jnp
pop
mov
fstps
lock
rcrl
push
adc
addr16
sub
push
jnp
fidivs
ja
jecxz
cmp
push
and
fwait
inc
jo
les
push
sub
mov
stc
dec
lret
test
inc
push
cmpsb
add
mov
dec
dec
mov
shl
jb
cmpsb
flds
mov
int3
je
xor
stos
mov
cmp
repz
test
add
or
push
leave
bound
fcomi
fcoms
cmp
sbb
push
pop
mov
ret
cmp
out
test
addr16
ds
pop
push
sub
or
ds
sbb
pop
cltd
out
imul
stos
mov
and
mov
out
add
adc
ss
pop
cmpsb
push
push
mov
rolb
inc
fs
jmp
jb
jne
int3
sti
sbb
mov
movsb
pop
xchg
jge
movsb
scas
mov
shrl
mov
mov
aad
leave
mov
xchg
xor
mov
mov
into
push
cmp
and
sub
sub
push
xor
pop
sub
push
clc
shll
or
mov
xor
dec
lds
shll
iret
cmpl
xchg
inc
popf
cmp
dec
xchg
jbe
push
insb
insl
dec
sbb
ror
popa
test
lret
pop
mov
xchg
cmp
mov
sbb
repz
cmpsl
xchg
xlat
in
mov
test
mov
inc
add
lret
or
jns
mov
lods
das
and
insl
cwtl
dec
orb
sbb
mov
dec
mov
dec
add
pop
cs
pop
pop
pop
push
xor
fsts
daa
adc
test
imul
out
jg
sbb
int3
and
push
cmpsb
lret
orb
or
dec
mov
int3
cmp
fnstsw
push
test
dec
add
insl
jo
mov
pop
ror
jp
js
push
cmpb
inc
push
hlt
fdivrl
cmp
push
dec
dec
inc
hlt
cmp
mov
dec
repnz
movsl
xorl
sbb
fidivrl
shlb
push
inc
or
mov
push
adc
fwait
push
pushf
stos
jg
pop
pcmpeqw
mov
inc
cld
sbbb
orl
ror
jb
and
inc
push
ret
xlat
push
mov
mov
inc
and
cmp
and
repz
cwtl
inc
jbe
sub
jbe
xchg
aaa
in
movsl
ret
pop
popa
inc
loope
aam
sub
xor
xchg
fs
xor
iret
mov
pusha
xchg
push
loopne
pop
push
or
popa
enter
jmp
hlt
cmp
je
or
ret
out
nop
mov
jp
fcoml
popf
cmp
shr
ret
loopne
cmp
arpl
push
mov
into
test
dec
cmp
or
aas
icebp
xchg
push
popa
xor
pop
stc
leave
mov
xor
ljmp
loop
xor
cmp
rorl
jns
test
cli
xchg
mov
flds
pop
fildl
dec
arpl
test
mov
icebp
ret
push
cmpsl
push
inc
mov
mov
adc
inc
repz
or
loopne
sbb
stos
cmp
dec
addl
and
push
inc
dec
stos
mov
mov
cs
loopne
add
aaa
mov
loopne
add
push
sbb
enter
outsb
clc
cmp
pop
sub
pop
inc
fcos
inc
aaa
out
clc
inc
cltd
mov
lcall
clc
repnz
cs
sub
aad
testb
mov
dec
sub
mov
cmp
inc
mov
sub
fs
repz
fcmovnb
dec
mov
jecxz
xchg
shll
or
inc
aas
lea
stos
ljmp
loop
ljmp
cmpsl
insl
imul
pop
mov
and
aam
pushl
and
sub
mov
shrl
mov
jge
sub
dec
cmp
pop
mov
add
jae
push
or
repz
ret
push
int3
sbb
xchg
jg
fbld
rclb
mov
bound
lds
shlb
push
ss
push
jnp
jno
lcall
jo
insb
inc
adc
xchg
rolb
push
sbb
mov
std
inc
std
sub
cmpl
inc
push
mov
div
lods
les
mov
or
mov
mov
test
dec
test
test
push
jle
popf
sbb
sub
into
pusha
std
sub
mov
sub
outsl
ja
jae
stos
cmp
fs
out
jp
outsb
inc
mov
adc
sub
sbb
or
data16
and
ljmp
in
pop
lret
lods
push
mov
adc
inc
fwait
ds
negb
std
ljmp
jge
or
mov
stos
cld
pusha
ds
or
xor
or
rcrb
fs
scas
rcrb
cli
andl
fidivrl
mov
push
sbb
and
sub
sbb
shlb
jecxz
adc
mov
jo
or
enter
lods
xchg
je
cs
sub
or
sbb
pusha
movsl
aas
jl
mov
paddusb
push
sbb
ljmp
fsubr
in
or
scas
inc
push
xlat
mov
sub
mov
fldt
jae
outsl
mov
push
pushf
arpl
icebp
fcoms
adc
testl
movb
stos
pop
jo
lcall
mov
jecxz
nop
movsb
out
lret
test
outsl
jo
xchg
mov
ljmp
or
or
ds
mov
xchg
jl
adc
insb
xchg
xor
mull
or
jo
idivb
aaa
popf
sub
push
enter
lcall
inc
push
lret
and
add
pop
jnp
in
pop
out
mov
cmp
test
adc
cmovl
shrb
out
imul
xchg
pushf
fmulp
std
sbb
aad
mov
inc
mov
and
mov
sbb
sub
test
leave
pop
add
mov
push
ljmp
mov
push
jg
outsb
flds
dec
gs
adc
scas
sbb
lea
pop
xor
and
add
push
jo
hlt
repnz
rorb
xor
jmp
or
ret
aam
add
out
addr16
sub
lcall
xchg
dec
aas
outsl
inc
jo
lret
jl
jne
fistps
xchg
dec
int
inc
das
push
lea
xor
test
and
push
or
jbe
mov
mull
xchg
orb
loope
mov
rcll
test
dec
stos
in
js
mov
divl
dec
pop
dec
and
adc
cmp
inc
xor
cmpb
inc
gs
or
and
or
push
sub
mov
xchg
adc
push
js
bound
pop
pop
sbb
or
das
adc
ja
mov
loop
enter
rcl
hlt
cmp
xchg
ss
inc
dec
rcrl
or
push
int3
cld
mov
pop
addr16
jp
pop
pop
sub
mov
int
lret
xchg
adc
jne
push
stc
je
adc
dec
fldcw
ds
jg
subb
test
mov
js
or
dec
xor
ja
jmp
loopne
les
jmp
jle
andb
dec
fimuls
out
xlat
fxtract
or
mov
inc
insb
sub
inc
shl
adc
cmpsb
lods
jge
pop
icebp
aam
pusha
mov
mov
loop
pop
cmpb
sub
scas
sbbl
cmp
adc
pop
and
mov
xor
stos
mov
rolb
das
and
push
sub
push
adc
ljmp
mov
pop
xchg
jecxz
sarb
data16
mov
add
fidivrs
dec
add
fisubrs
adc
inc
mov
int
and
jnp
mov
pop
js,pn
xor
test
ss
leave
pop
push
push
stc
mov
into
jle
or
jp
and
inc
push
icebp
lock
add
cmp
and
test
test
shll
fsubrl
jne
cltd
cli
lcall
cld
pop
adc
cmpb
sahf
ds
and
scas
mov
sti
js
and
punpcklbw
jae
andl
jecxz
scas
aam
mov
push
cmpsb
mov
aad
xlat
mov
cmovne
faddl
adc
out
push
or
incl
sub
aaa
pusha
xchg
xchg
add
jne
mov
mov
loopne
repz
xchg
pop
mov
mov
and
pop
stos
movsl
testb
data16
xor
sbb
inc
ss
jle
jmp
xchg
imul
and
int3
sub
js
mov
shl
into
sahf
repnz
lds
aaa
jb
roll
mov
call
std
adc
dec
push
mov
pop
in
iret
xchg
cmp
dec
scas
mov
mov
ret
xchg
clc
shll
mov
jle
inc
fsubr
push
cwtl
mov
mov
das
and
enter
aas
outsb
mov
repnz
sub
ljmp
loop
aaa
icebp
add
mov
or
test
nopl
mov
int
inc
mov
and
popa
push
stos
inc
lods
xorb
and
subb
sbb
orb
in
push
xor
mov
and
cmp
sahf
in
dec
and
insb
mov
das
xchg
mov
push
jb
lret
test
xchg
sbbl
out
push
inc
movsl
fs
mov
pop
cmp
pusha
jmp
xor
or
xchg
das
test
push
adc
dec
stos
ss
sti
fstpt
int3
push
jge
stos
loopne
add
out
lcall
jbe
push
cmp
fldt
adc
cmp
loope
xchg
inc
sub
fimull
adc
test
cmp
pop
mov
bound
xchg
stc
and
call
insl
mov
sbb
mov
xchg
dec
push
cld
scas
sub
inc
fists
push
jmp
out
jecxz
sahf
idivl
cmpsb
cld
xorl
and
xor
fbstp
sbb
dec
inc
cmp
sbbb
dec
sahf
xchg
jle
call
iret
outsl
lods
aad
ret
icebp
lahf
out
xchg
xor
bound
in
ret
pushf
lods
mov
fisubl
stos
inc
stc
cltd
jl
mov
lret
cmp
dec
lahf
sbbl
lock
aad
sbb
jl
jge
in
call
addb
xchg
mov
mov
adc
pushf
je
fabs
cmp
xchg
cmp
lea
mov
sbb
xchg
jne
incb
enter
push
xor
and
jne
lods
cmp
aas
notb
cmp
loope
jg
out
cwtl
rdtsc
mov
cmpsl
cmp
shll
xchg
sub
cs
pusha
insb
jle
mov
push
in
mov
je
test
shl
pop
dec
cmp
hlt
test
xchg
push
push
loop
jb
push
inc
fdivrl
xchg
sub
lds
xor
jnp
xchg
push
xor
jo
mov
and
mov
push
pop
sbb
xchg
push
push
or
xchg
push
out
adc
pop
int3
mov
outsb
mov
or
test
jo
sbb
jbe
loop
xor
and
jmp
daa
mov
sbb
xchg
stc
clc
pop
xchg
xor
pop
adc
pop
ljmp
cmp
mov
daa
cmp
leave
in
or
xchg
lods
cli
ret
dec
xchg
stos
jno
mov
cmc
xor
jg
sbb
or
ret
sbb
or
push
mov
pop
cmp
call
fldcw
loopne
pop
clc
stc
mov
repnz
push
out
leave
idivl
fwait
cmpsb
add
les
neg
pop
aad
pop
push
mov
fsubrl
push
cltd
cli
int3
and
inc
jns
testb
and
cmp
cwtl
xchg
cmp
call
fldl
cmp
stos
mov
push
nop
add
or
jg
pop
adc
scas
xchg
scas
jp
lahf
imul
imul
popf
test
out
jg
dec
out
mov
mov
rcll
fs
xor
add
or
mov
lcall
out
js
cmp
stc
push
cmpsb
rcll
adc
dec
mov
xchg
jbe
add
movsl
jmp
add
mov
sbb
stc
std
jne
fwait
add
das
inc
xchg
mov
test
mov
iret
icebp
mov
shrb
hlt
mov
xchg
sbb
test
fstpl
xor
cwtl
std
aad
cmpsl
push
sbb
out
cmp
xor
sbb
jae
jle
sarl
push
xchg
pop
ss
scas
dec
loop
push
jne
loope
clc
push
mov
mov
push
out
adc
sti
out
jl
cmc
push
sub
testb
jno
push
pop
push
mov
int3
cltd
push
inc
xor
push
add
sub
inc
fldcw
pusha
nop
out
fldcw
mov
adc
push
aaa
inc
dec
and
adc
mov
jno
xchg
lods
imul
bound
lcall
sbb
sub
inc
xor
shrb
outsl
imul
in
popa
mov
and
test
pop
mull
mov
rcr
sarb
sub
popa
into
mov
hlt
out
jl
rcll
push
test
movsb
and
push
insl
pop
cmovge
cmp
adc
test
outsb
lock
ljmp
fwait
adc
push
jnp
pop
lcall
repnz
out
xchg
lret
sarl
sbb
mov
cli
dec
or
xor
jbe
push
jb
push
scas
pop
mov
data16
jae
xchg
test
data16
push
pop
mov
fsubl
loopne
sbb
jecxz
xchg
ret
loope
sbb
lcall
adc
mov
shll
ret
dec
dec
dec
inc
loop
jp
loope
insb
inc
call
std
pusha
rcl
gs
mov
js
xor
and
iret
or
gs
repz
add
inc
xchg
lret
pop
mov
push
and
cld
out
mov
int3
sub
int
lahf
es
rolb
push
adc
sahf
cltd
movsb
sbb
push
xor
cmp
pop
arpl
into
movsb
std
iret
popf
adc
inc
mov
sub
xor
scas
daa
add
add
mov
clc
sahf
lock
fistpl
sub
fs
jnp
mov
jne
cld
add
push
push
fistpll
dec
cmpsl
xor
adc
insl
mov
inc
push
iretw
std
stc
mov
push
push
sbbl
dec
dec
xchg
inc
stc
nop
xor
in
jb
jge
mov
mov
pop
dec
es
mov
and
and
lahf
jmp
cmp
adc
inc
mov
rdmsr
stc
cmp
cmpsb
repz
or
push
mov
mov
lea
ss
lods
outsl
insl
in
nop
shr
fmuls
notb
and
pop
int
pop
dec
pop
in
adc
sbb
adc
jl
test
fwait
sub
xchg
int3
js
cld
aas
aad
jbe
jp
rcrb
or
mov
bound
push
add
mov
and
adc
add
inc
cwtl
sbb
mov
cmp
mov
repz
sbb
dec
jecxz
mov
xor
mov
mov
call
out
adc
popf
hlt
inc
sub
pusha
call
scas
xchg
stos
jae
popa
aas
cwtl
addr16
xchg
mov
outsb
sahf
mov
jae
dec
lods
rolb
jp
xor
push
and
fmull
sub
or
sbb
push
imul
adc
stos
loope
test
jo
jmp
jns
fiaddl
sbb
xchg
jl
dec
xchg
pop
mov
inc
loopne
push
loop
jo
les
jecxz
repz
dec
push
pop
lds
or
cmp
mov
into
mov
or
jecxz
fimuls
andl
add
daa
xchg
pop
loope
fisttpl
xchg
das
jne
mull
xor
mov
sub
jbe
dec
push
test
pop
mov
int3
xor
cltd
aaa
ror
or
mov
popa
pop
jno
jns
cld
int
cmp
jb
xchg
jg
jns
dec
add
into
pop
sbb
sub
or
aad
fistpl
dec
xchg
or
fcmovbe
mov
ja
sarb
xchg
repnz
push
out
ss
test
xchg
test
pushf
sahf
push
das
in
jne
test
xchg
xorl
cwtl
popa
scas
hlt
jbe
out
cmp
ljmp
pop
test
stos
cmc
lcall
rorl
adc
imul
dec
mov
orb
xor
mov
jb
jg
or
mov
dec
scas
out
mov
cmp
xor
inc
outsb
js
cltd
push
js
je
xchg
stos
pop
pushf
inc
inc
sbb
fwait
push
jge
inc
inc
and
adc
test
push
js
sbb
xchg
ss
mov
mov
dec
test
mov
aaa
adc
dec
push
sub
shr
xchg
pop
jnp
sbb
insb
pop
aam
aaa
enter
xor
or
fxch
and
mov
mov
cmp
pop
cs
jno
out
out
add
jmp
sbb
rolb
push
loopne
jae
cmp
sbb
leave
mov
mov
push
inc
pop
sbb
jae
orl
xchg
loop
out
xchg
clc
ss
aaa
add
push
xchg
out
ror
xchg
jmp
aam
into
add
push
push
push
outsb
loop
dec
aad
xor
jg
push
pop
pop
adc
inc
shl
repnz
jl
scas
fwait
or
push
imul
cltd
into
push
jmp
fistps
rcrl
mov
push
dec
sbb
lcall
cwtl
mov
sahf
mov
sbb
mov
fnstsw
dec
das
hlt
inc
xchg
add
aaa
je
or
xor
out
add
shl
and
mov
mov
fwait
ljmp
in
imul
jl
test
sarl
dec
sbb
sub
fst
sub
jno
loope
dec
sbb
in
mov
rol
out
mov
fistpll
add
cmp
pop
shr
and
jbe
and
sub
or
mov
inc
iret
jo
xor
and
pushf
pop
inc
pop
ret
push
pop
push
addr16
push
ds
and
or
ds
out
push
sub
stc
pop
stos
dec
sub
dec
xchg
bound
out
mov
int
dec
repz
movsb
lock
scas
xor
dec
adc
dec
inc
or
clc
or
jb
xor
data16
std
jno
jg
popa
loop
popa
je
lret
jg
popf
pushf
rcrl
push
push
lods
and
add
and
loope
fcompl
enter
loope
jmp
movsl
and
dec
dec
je
rclb
in
dec
aam
lcall
fisttps
in
test
sub
int
aaa
bound
arpl
jnp
sub
clc
stos
aas
repz
mov
pop
cmc
lods
add
and
fucomi
dec
lods
popf
xchg
aaa
adc
mov
mov
push
mov
or
add
loope
sub
and
jg
dec
cmp
mov
dec
pop
and
lea
loop
jb
pushf
cs
sub
nop
mov
or
cmc
xchg
rorb
int3
cmp
xorb
dec
stc
adc
sub
testb
cli
jecxz
mov
push
mov
sbb
pop
les
les
imul
lret
test
fldcw
test
repz
and
push
mov
pop
iret
js
mov
jb
push
jecxz
inc
adc
ficoml
push
add
loope
call
imul
inc
adcl
scas
fldl
test
dec
movnti
insb
mov
or
into
pop
clc
cmp
cs
movups
shl
jo
aam
xor
out
adc
pop
inc
or
mov
out
pop
je
xchg
insl
mov
jg
xor
in
stos
mull
lahf
sbb
insb
pop
push
es
les
add
andb
cmp
sub
jb
sbb
in
out
lret
mov
mov
mov
adc
andb
mov
sub
aas
mov
jmp
cmpl
jo
leave
call
test
jne
or
inc
sahf
adc
movsl
int3
xchg
hlt
pop
fdivrs
and
shll
mov
imul
fs
mov
icebp
mov
aad
pop
enter
jb
js
xchg
pop
imul
int
test
outsb
mov
push
repz
sbb
jp
andl
cltd
test
cmpsb
inc
jbe
jbe
and
mov
dec
inc
fcomps
loopne
xchg
add
stos
sub
mov
and
pop
mov
cltd
sub
push
stc
out
mov
outsb
fdivs
push
dec
arpl
pop
arpl
rcrb
ds
mov
sbb
rorb
inc
push
sbb
pop
push
mov
sti
xlat
cli
mov
test
push
xchg
pop
or
mov
repnz
sti
or
decb
jne
aad
daa
mov
mov
cltd
fistpll
add
inc
inc
shr
rorl
inc
jmp
sub
fldt
adc
mov
and
sbb
or
add
sbb
in
xchg
imul
mov
in
sub
mov
rcll
or
mov
xchg
popa
pop
sub
push
push
mov
fwait
sbb
mov
push
scas
jmp
push
push
out
in
mov
cli
jl
push
jmp
sub
cmp
jbe
pop
mov
dec
insl
lcall
sub
lods
push
jne
mov
daa
test
stos
shll
fs
aaa
jbe
sub
bound
inc
hlt
mov
cmp
cmp
pop
mov
add
mov
lahf
sbb
mov
push
pop
fnsave
mov
pop
in
mov
fmuls
pop
mov
repnz
xchg
lods
fisttps
leave
jnp
inc
loopne
pop
gs
dec
int
iret
mov
ds
add
jecxz
inc
jp
or
ret
shlb
repnz
xor
rcl
mov
shll
rolb
dec
xlat
addr16
sbb
push
sbbl
and
and
or
push
xor
int
dec
int
lahf
addr16
ljmp
pop
ret
dec
mov
and
in
mov
xor
inc
pop
lret
repz
lret
orl
xchg
hlt
push
fcoml
mov
lret
lock
mov
sub
mov
popf
lea
sub
push
push
leave
shl
adc
add
inc
nop
bound
mov
xchg
xchg
xor
stc
cmp
lret
mov
out
push
mov
inc
mov
pop
adc
cmpsl
dec
mov
insl
pusha
lcall
lea
fwait
dec
daa
mov
decl
xchg
rorl
mov
insb
outsl
adc
scas
jg
pop
add
dec
repz
jp
decl
inc
mov
pusha
or
fnstsw
frstor
rorb
popa
outsl
mov
cwtl
lds
leave
or
call
das
shll
mov
fistpl
jge
jnp
jbe
aaa
dec
lret
mov
test
ret
jb
in
or
sub
jge
mov
hlt
das
test
ljmp
sahf
cmc
clc
clc
or
mov
adc
ja
push
rcrb
sbb
adc
std
addb
sub
shrl
insb
jl
or
imulb
sub
fstp
xchg
je
ljmp
cs
mov
mov
sti
sub
push
dec
lret
cmp
mov
movsl
xor
int
fwait
into
jne
fwait
cltd
or
cmp
mov
call
rcrb
pop
dec
push
test
fdivrl
pop
xchg
xchg
dec
push
mov
ss
and
mov
cmp
enter
sub
xchg
inc
fisubrs
jb
out
inc
mov
mov
push
or
xchg
pop
xchg
mov
jae
mov
push
push
pop
xor
mov
cmpsl
mov
jg
sahf
andb
lock
sbb
sarl
mov
lret
fs
xor
xorb
mov
fistps
insb
add
pop
mov
mov
scas
xorl
mov
pop
cmp
xor
mov
pop
lods
mov
xchg
inc
jl
aas
sbb
test
and
mov
mov
jae
shll
or
out
mov
jg
mov
je
mov
orb
enter
xorl
loope
mov
cmpsb
xchg
and
stos
mov
std
stos
mov
ret
cli
and
add
popf
cmp
jle
xchg
sbb
mov
mov
mov
push
xorb
jo
pop
outsl
iret
and
mov
verr
sub
adc
fildll
mov
cmp
stos
loopne
pop
jo
mov
and
and
mov
cs
ds
push
fstpl
aas
daa
loopne
or
push
sbb
in
mov
js
out
dec
rolb
rclb
mov
cmp
add
iret
enter
and
jno
add
loopne
dec
mov
push
orb
sub
mov
cmpsb
jne
mov
js
mov
push
loopne
xor
mov
andb
adc
mov
rcl
cld
std
pop
cmpsl
fidivl
arpl
push
push
aad
mov
scas
push
mov
cmp
jae
daa
jmp
inc
dec
insl
mov
and
sub
pop
pop
and
and
and
fs
xchg
adc
dec
aas
imul
mov
movl
out
aaa
movsl
dec
cmp
and
cmp
insb
or
lock
cs
pop
pop
test
lahf
movsl
enter
mov
imul
jne
mov
fimuls
xlat
fdivrs
js
xchg
push
out
cmp
and
in
lds
and
cmp
add
mov
repz
and
movsl
mov
mov
inc
jmp
add
pop
out
adc
movsb
iret
js
aad
das
or
mov
arpl
sahf
ror
stos
add
xor
xchg
sbb
mov
daa
mov
repnz
sub
or
lahf
push
sub
icebp
inc
dec
mov
les
push
pop
add
int
test
pop
repz
outsb
enter
inc
repnz
ret
sub
stos
adc
int3
xchg
dec
test
ljmp
fld
push
sub
cs
aas
dec
fadds
push
cwtl
dec
daa
adc
pop
ja
jb
rep
int
add
pop
and
sti
lods
filds
jp
jle
mov
push
push
fcomps
test
inc
insb
inc
insb
dec
daa
cmpsb
fadd
mov
cwtl
lods
mov
insb
and
and
sbb
jle
pusha
fimuls
imul
adc
cmp
stos
xor
lret
xchg
test
xchg
mov
fisubs
mov
int
cmp
jl
lods
jo
add
and
int3
push
jmp
loopne
lret
jge
in
xor
test
xchg
jno
mov
lock
imul
call
gs
pop
pop
test
cltd
pop
push
fistpl
call
arpl
mov
jp
and
lods
add
ret
push
lret
aas
lea
ss
mov
out
mov
mov
out
das
dec
hlt
sbb
rcll
push
dec
mov
out
gs
adc
add
dec
test
lods
mov
loope
and
negl
push
and
popa
shlb
pop
call
jg
mov
xor
loop
stos
sar
jl
pop
mov
cmp
aam
jecxz
sub
out
lock
xchg
je
dec
sub
rorl
cltd
or
sbb
xor
pushf
mov
test
sub
sub
adc
mov
jmp
fcoml
int3
dec
pop
mov
jne
lret
cmp
aas
inc
add
mov
adc
jecxz
adc
and
dec
pop
fbld
das
notl
mov
inc
mull
cld
add
push
sub
jbe
test
in
jp
push
idivl
das
or
test
pop
imul
mov
sbb
fnstcw
inc
xor
jecxz
aas
push
xor
outsl
push
popa
addr16
and
jae
dec
add
push
inc
xchg
jno
dec
sti
mov
mov
mov
jno
insl
int
mov
push
adc
insl
mov
imul
cld
std
pop
dec
sahf
stc
pop
aam
pop
xchg
sbb
ret
mov
lret
xchg
mov
sub
adc
out
stc
add
leave
movsl
pop
dec
dec
mov
cmp
out
inc
sbb
popf
sub
dec
push
addl
mov
bound
js
in
push
jnp
mov
lods
ja
pop
push
arpl
pop
test
aad
pop
push
jbe
imul
ret
or
jnp
popf
inc
mov
inc
or
pusha
fsubrp
mov
lcall
pop
dec
out
xor
adc
dec
cmp
adc
xchg
mov
pop
sub
cwtl
stc
shlb
and
loop
xchg
mov
repz
jnp
mov
daa
mov
sbb
jno
push
mov
mov
repz
or
ja
fs
inc
sbb
mov
stos
or
xlat
mov
sti
test
mov
jo
mov
and
test
add
cli
mov
or
movsl
jecxz
stos
sarl
idivb
lcall
jl
pop
push
and
into
mov
icebp
cmpl
pop
jbe
js
ret
adc
idivb
cmp
sub
adc
ds
pop
mov
pop
or
ret
mov
outsl
in
out
pop
cltd
and
pusha
and
adc
jb
jb
out
jae
mov
cmp
inc
or
pushf
mov
jo
das
stos
out
je
cld
jmp
repz
aas
mull
loop
fidivl
hlt
xchg
xor
into
mov
inc
xchg
cmp
mov
gs
fisttpl
gs
xor
lods
xlat
gs
in
jns
inc
inc
xchg
pop
cmp
or
mov
inc
sbb
xchg
es
in
dec
xchg
push
mov
cmp
fsubrs
mov
ljmp
mov
rorl
add
popa
xchg
loopne
xlat
pop
icebp
into
inc
pop
inc
add
mov
aas
test
sub
loop
inc
call
pushf
add
add
or
aad
xchg
xchg
lcall
cmpsl
cs
ljmp
jecxz
cld
mov
divb
sbb
and
sarl
cmp
inc
fwait
pop
enter
xchg
bound
nop
arpl
mov
xor
mov
mov
sub
lea
pop
and
scas
push
sarb
push
in
call
call
test
loopne
sub
jbe
shrb
not
add
int
sbb
sbb
pusha
cmpsb
clc
mov
sbb
clc
shrl
addr16
gs
loope
cmp
push
cs
sub
add
bound
sbb
cmp
out
jne
cmc
sahf
cmp
and
sub
ret
dec
test
mov
test
sub
movsl
js
rclb
dec
sub
push
test
inc
ss
mov
imul
mov
cmp
clc
lret
in
out
loope
lods
lds
pop
or
int3
xchg
mov
dec
pop
loope
cld
mov
and
bound
add
adcb
pop
shrl
mov
and
popa
sub
dec
cwtl
dec
adc
pop
cmc
insb
loop
and
xor
stc
bound
aas
push
mov
xchg
add
pop
push
and
loop
iret
push
loop
jae
xchg
lcall
xchg
loop
cli
jbe
fildll
lret
icebp
shrl
cmp
add
jbe
xchg
cmp
ret
into
jns
pop
sbb
mov
pop
mov
jae
add
or
cmp
lret
into
cmp
sub
add
add
in
sub
sbbl
xchg
mov
jecxz
jle
mov
test
jbe
push
mov
dec
cmp
fld
inc
out
or
sbb
mov
cs
dec
lea
mov
cmp
dec
xor
popf
mov
xor
sbb
xor
mov
inc
orb
pop
xor
jle
and
mov
push
add
bound
insl
push
or
xchg
sarb
jo
sahf
outsb
fsubr
jo
rol
add
xchg
lret
jl
add
test
mov
mulb
jecxz
sub
jne
mov
scas
jmp
movsb
add
jo
orb
sbb
lret
lret
loopne
mov
mov
pusha
dec
xchg
cmp
movsb
sub
adc
imul
fimull
jp
xlat
shlb
push
cmpsb
xchg
test
arpl
scas
std
or
ss
mov
dec
imull
jmp
fdivs
xchg
aaa
aad
or
cmp
push
sbb
jbe
jo
pusha
push
push
push
insl
ret
inc
test
data16
lahf
stc
xor
hlt
rcll
cmp
push
mov
pop
ss
mov
aas
jl
jne
iret
pop
std
mov
mov
stos
adc
xchg
fsubrs
push
repz
cltd
les
loope
scas
sub
in
or
adc
popf
outsl
icebp
out
hlt
adc
jmp
cmp
iret
lock
iret
xchg
addr16
pop
mov
and
sbb
ds
sub
cli
stos
push
movsl
test
movsl
push
pop
jl
aam
loop
mov
lahf
out
mov
sbb
lcall
lahf
or
sahf
or
int3
xlat
inc
pop
leave
xchg
mov
or
dec
iret
fdivrl
cs
cmp
or
add
mov
mov
add
xchg
xor
mov
mov
stc
shll
ret
roll
stos
iret
mov
dec
out
add
aas
inc
fwait
jg
movsl
sbb
insb
rcrb
fmul
out
inc
scas
out
sbb
xchg
mov
mov
ret
icebp
and
xor
cmp
pop
das
std
xchg
shlb
xchg
stos
inc
pop
stos
push
enter
push
cs
pop
test
aad
imul
loopne
jmp
pusha
mov
cmp
dec
sub
adc
loope
scas
rolb
int
xchg
adc
das
ja
bound
adcb
jg
adc
pop
fs
pop
mov
movsb
sub
mov
dec
mov
adc
pop
aaa
fdivl
mov
xor
inc
imul
adc
mov
cld
cmc
and
mov
jae
sub
push
imul
mov
sub
lods
cmpsb
dec
sbb
cmp
jne
lea
dec
jp
sbb
ja
jae
idivl
inc
add
fimull
ds
pop
inc
add
mov
jp
xchg
xchg
loop
fwait
in
loop
mov
add
sub
insl
mov
jl
call
jp
mov
jmp
out
bound
loop
mov
mov
insl
fildl
pop
rcrb
inc
aaa
sub
js
xor
jmp
or
pop
jmp
sub
ss
mov
int
cmp
sub
xor
xchg
mov
lock
push
add
adc
icebp
repz
xor
mov
test
mov
out
cmp
inc
lcall
and
inc
out
mov
out
or
mov
popa
and
jp
jle
jle
add
pop
push
dec
adc
or
sub
iret
fnstsw
scas
mov
out
outsl
addl
pop
jae
xchg
dec
clc
mov
dec
out
shll
dec
leave
push
or
ret
mov
and
push
push
mov
test
ja
pop
cmp
fdivrs
and
ret
sub
mov
int
daa
mov
dec
popa
loopne
lret
sahf
sbb
jp
add
stos
pop
les
mov
test
and
popf
cs
iret
lahf
lods
sub
ja
xchg
insl
inc
mov
adc
dec
popf
sbb
sbb
call
imul
call
add
lea
jp
clc
and
cmp
stos
mov
push
test
push
insb
sarl
shr
adc
sbbl
jns
inc
incl
inc
pop
lods
mov
rcll
push
addr16
cmp
adc
in
jns
fisttpll
pop
jmp
or
add
cld
hlt
fwait
sbb
mov
or
scas
xor
mov
xorb
test
push
push
jg
adc
orb
adc
xchg
sub
xchg
mov
push
mov
jbe
sbb
call
cwtl
jb
mov
cld
cld
push
or
fsubs
lcall
push
hlt
jns
jo
push
cmp
cmp
pushf
sbb
inc
mov
lret
inc
cmpsl
movsb
outsb
loopne
and
pop
sarl
js
filds
test
rcl
adc
stc
cmp
insl
xor
jmp
or
lock
insl
dec
adc
push
sbb
call
into
in
insb
push
rcl
ja
enter
dec
dec
pop
pop
addl
movsb
loope
popf
xor
xor
sub
push
or
mov
ret
or
or
iret
imul
fidivrl
aam
fidivl
je
jmp
and
mov
pusha
jbe
push
lds
popf
mov
sub
dec
mov
sbb
out
das
pop
inc
outsb
push
push
cmp
sbb
add
shll
stos
fistl
push
fistpll
cltd
fcomip
loope
jbe
cmpsb
or
pop
js
mov
jns
add
push
xlat
dec
in
dec
inc
jnp
ss
mov
lahf
dec
cmp
ljmp
inc
sar
scas
fcmovb
cwtl
sub
pop
push
dec
outsl
inc
push
fnstenv
enter
out
fisttpll
pop
and
cmp
mov
adc
imul
fldcw
in
js
popl
jo
mov
lret
into
aam
loopne
vphaddbw
mov
pop
mov
dec
and
pop
xchg
test
mov
xchg
ret
fs
or
or
xor
xor
push
add
sub
aaa
mov
fs
jns
daa
aad
add
cmp
cli
push
xchg
negb
je
ljmp
push
cmpsb
dec
in
inc
sub
cmp
ss
fnstsw
addb
shl
clc
pop
sbb
shll
xor
sub
cmpsl
pop
jge
cmp
int3
cmp
pop
int3
pop
std
pushf
or
out
ja
mov
pop
mov
sub
repz
xchg
dec
movsb
out
xlat
addl
inc
or
rcrl
add
fwait
lds
adc
paddusw
inc
xor
mov
int
mov
das
shrb
pushf
push
das
mov
leave
pushf
sarb
inc
jecxz
and
cmp
inc
inc
imul
cmp
add
ss
loop
sahf
fisubrs
or
cmpsl
repz
xor
cwtl
cmp
cmc
sub
xor
ljmp
xchg
push
pop
test
in
ss
dec
mov
fwait
mov
fwait
pop
aam
leave
ljmp
aaa
aas
cmpsb
pop
add
cwtl
das
lea
adc
push
xchg
call
icebp
in
lods
mov
aaa
inc
sbb
xchg
outsl
push
nop
and
in
push
inc
int3
stos
mov
lea
ret
pop
mov
mov
clc
out
enter
ss
nop
xchg
mov
cmp
data16
ret
mov
aam
daa
je
fucomip
adc
cltd
inc
dec
pop
and
jmp
cmp
lods
rolb
xor
mov
dec
fwait
cmpsb
lods
cli
ds
es
push
dec
xchg
jo
pop
xor
js
adc
or
notb
or
cld
dec
inc
js
mov
fcomip
std
cld
call
test
mov
inc
movb
or
cmpb
xlat
add
push
popa
scas
xor
or
or
mov
push
push
or
pop
add
pop
adcb
test
xlat
adc
fsubr
pop
pop
adc
arpl
xchg
add
sti
cltd
iret
inc
dec
mov
iret
shr
out
and
or
xchg
dec
or
stos
insb
out
inc
pop
xchg
call
sbb
mov
notb
xchg
aad
mov
add
loop
pusha
jl
pop
loopne
mov
dec
add
sbb
and
andb
pusha
dec
sub
ljmp
movsl
sub
xor
xor
cld
leave
or
xchg
sub
shlb
sub
jno
popf
aad
test
ret
repz
mov
or
lea
movsl
in
adc
cmp
fadds
mov
ror
aas
ret
into
jp
or
mov
call
sbb
push
test
into
ret
mov
aaa
sbbl
mov
fsubs
inc
hlt
std
cmpsl
in
mov
mov
fimull
test
mov
ret
mov
dec
xor
cmpsl
mov
popf
ja
dec
dec
testb
ja
ja
lahf
shrb
stc
jp
out
in
cwtl
out
push
cmpsb
dec
mov
sbb
cmp
adc
clc
in
insb
imul
addr16
imul
pop
cmpsb
addr16
inc
add
sti
xor
lods
push
loope
or
lret
mov
lea
orb
cmp
out
jmp
les
xchg
jnp
fcoml
add
dec
fs
push
cltd
mov
scas
mov
adc
sbb
loopne
or
mov
push
push
mov
inc
stos
adc
push
enter
ret
repz
fs
inc
adc
add
faddp
jne
xor
mov
ret
push
push
dec
es
fldt
mov
mov
xchg
xor
xchg
pop
sbb
sarb
xchg
fnstsw
outsl
push
aam
xor
and
mov
loope
xchg
loop
lahf
pop
add
add
push
jne
fdivs
inc
add
xor
mov
mov
sbb
or
cmp
cwtl
lret
and
jnp
jecxz
sub
lret
cwtl
cmp
or
fdivrl
push
cli
sub
lds
mov
repz
sarl
add
in
into
shrb
fsubs
mov
and
push
adc
mov
sbb
xchg
sub
dec
and
push
jae
mov
out
push
push
insb
rcrl
subb
xor
stos
adc
push
sub
enter
or
test
mov
testl
sub
test
fsubrs
mov
push
pop
cmpsl
pop
stos
gs
std
imul
sbb
rclb
sarl
add
popa
cltd
sub
mov
insb
jmp
xchg
pop
adc
cwtl
pop
stc
xor
icebp
cld
and
sbb
stos
aam
inc
loopne
cmp
ret
dec
stc
mov
and
dec
mov
cmpsb
inc
sbb
xor
lods
lcall
cltd
mov
add
inc
cmp
stos
push
xchg
mov
cmp
sbb
jno
add
pop
pushf
test
mov
mov
inc
dec
or
lock
sbb
data16
xor
sbb
adc
jmp
mov
pop
or
mov
sub
jns
mov
lea
outsl
and
fwait
or
int
lds
cs
xchg
gs
outsb
bnd
sarb
inc
pushf
inc
fidivrs
jp
movsl
jno
into
mov
ds
loopne
mov
mov
test
jp
jne
lcall
adc
fsts
push
popa
jp
jecxz
inc
cmp
push
rolb
sub
jmp
sub
dec
ret
mov
dec
hlt
dec
cmpsb
dec
outsb
divb
data16
stc
enter
push
fdivs
hlt
mov
ds
nop
js
call
sub
in
jg
add
int
shrl
adc
push
xchg
or
cwtl
mov
sub
outsl
mov
add
add
pop
andb
sub
stos
push
and
cltd
sbb
sbb
nop
arpl
adc
popa
fcmovnu
sahf
cs
sbb
pushf
xor
movsb
repnz
inc
stc
cli
adc
push
xchg
adcl
fs
imul
adc
ja
cmpsl
stos
fsubs
and
enter
cmp
lds
sub
or
es
add
lcall
mov
sbb
jle
push
aas
mov
mov
push
xor
cmp
iret
jne
inc
pop
negl
das
pop
gs
sub
mov
testl
out
stos
std
nop
and
pop
mov
mov
lret
or
iret
js
cmc
out
jo
sti
inc
lods
data16
push
cmpsl
inc
add
push
negb
pop
rclb
in
movsl
xchg
cmp
pop
nop
fs
inc
cmp
jge
mov
push
sub
out
lret
aad
sbb
jne
rolb
cmp
adc
mov
les
cmp
in
pop
mov
fcmovne
jnp
sub
sbb
push
push
sbb
in
xor
push
add
xlat
cli
movb
fiaddl
nop
mov
loop
push
adc
pop
jg,pt
pop
mov
dec
notl
fstpt
mov
push
adc
dec
lock
test
and
or
or
insl
loope
jns
in
push
inc
sarl
sub
popa
sbb
mov
mov
loopne
xor
inc
test
xlat
pop
shrl
inc
lcall
fwait
adc
int3
loopne
movsb
sbb
lds
jmp
mov
or
movsl
or
ljmp
dec
insb
orb
in
xor
cmp
cmp
call
mov
pushf
push
lock
lods
mov
sub
mov
push
adc
enter
cmpb
fwait
test
dec
add
stos
divb
add
shll
sub
add
data16
inc
jne
fstps
in
mov
les
adc
mov
or
jle
cs
mov
sub
pusha
ret
inc
mov
sub
pop
daa
leave
hlt
out
icebp
jg
fcompl
inc
aas
pop
and
mov
sub
dec
aad
out
jecxz
fwait
xchg
push
mov
xchg
insb
inc
pusha
rorb
sub
adc
or
jo
lcall
xor
add
cmc
xchg
mov
stos
adc
inc
dec
outsb
addr16
xor
pop
mov
clc
jmp
cmp
stc
loopne
mov
xlat
rcrb
repnz
pusha
jp
orb
xchg
cmp
mov
mov
insb
movsb
jmp
lcall
orb
jl
ret
xchg
in
gs
into
fnstcw
inc
das
xchg
pop
jg
ds
nop
pusha
rcrl
adc
inc
rolb
outsl
shrl
and
enter
push
mov
sbb
gs
and
mov
mov
js
and
imul
movsb
std
ficoml
mov
dec
mov
jnp
sub
out
in
sub
cmp
in
mov
into
in
push
jae
cli
addr16
test
jne
repz
adc
cmc
fstp
scas
insb
and
aaa
mov
sbb
pop
xchg
in
cld
adc
shlb
pop
jnp
sub
mov
jns
cltd
and
enter
inc
jb
fs
shlb
nop
ret
scas
dec
subl
into
roll
cmp
aam
pop
test
mov
data16
push
rcrb
or
inc
mov
fnstsw
xor
push
xchg
mov
stc
pop
push
repnz
mov
aam
mov
dec
repz
mov
push
xor
or
lds
mov
ret
cmp
sbb
popl
dec
or
adc
dec
aaa
or
add
xchg
pop
cmp
push
in
out
adcb
pushf
ret
leave
jb
mov
ds
jnp
cmpsb
xor
adc
test
seta
inc
js
add
stc
and
cmp
fs
stos
jbe
xlat
xchg
leave
mov
jmp
sahf
call
ja
sti
sbb
add
popa
lods
lods
das
xor
or
fidivrl
fsubr
adc
sti
push
call
movb
push
xor
mov
sbb
fld
dec
xchg
cmp
addr16
fcompl
repnz
bound
cmc
data16
adc
jnp
ret
arpl
inc
mov
inc
imul
or
push
and
out
call
mov
mov
adc
ja
mov
sbb
pop
movsb
lock
les
mov
jne
sti
pop
push
dec
in
and
add
dec
mov
mov
test
aam
jo
sbb
mov
jae
sub
mov
push
mov
mov
mov
adc
push
cmp
sub
pushf
pop
inc
push
inc
or
push
shlb
mov
in
dec
test
mov
out
ret
lock
sbb
out
mov
mov
inc
xchg
push
sbb
sbb
repnz
sti
cmp
repz
pop
add
cltd
in
inc
sub
ret
pop
mov
adc
repz
scas
pop
loope
test
jecxz
xchg
sbb
mov
js
xor
pop
mov
xchg
clc
sbb
xchg
sbb
cmp
push
dec
mov
into
in
jl
mov
shll
pop
sub
xchg
pop
ret
push
imul
push
xchg
addb
push
test
aas
mov
cmp
lret
sahf
lods
repnz
in
stos
cwtl
vpshlw
iret
jne
pushf
mov
lret
out
xor
leave
fiaddl
outsl
jno
dec
loope
xor
ss
sub
ss
push
pop
out
lods
aas
in
sahf
nop
out
fldlg2
jg
cli
out
test
mov
lahf
aaa
jne
push
mov
sbb
push
mov
mov
dec
out
fcomip
stos
sbbl
int
ss
es
clc
pushf
cmc
jmp
cmpsb
cmp
clc
push
sbb
add
inc
xchg
or
mov
pop
mov
psubsw
push
aam
popf
jb
mov
cmpb
xor
popf
xchg
out
rcrl
push
orl
mov
shrl
xor
push
and
add
push
pop
add
sub
jae
mov
xlat
idivb
sahf
cltd
stc
clc
pop
das
sub
pop
or
mov
cmpsl
add
cmp
stos
jno
xor
push
jg
jns
xchg
mov
adc
push
dec
jge
push
fsubr
jae
mov
jbe
pop
gs
stos
fisubl
fistl
or
xchg
insl
dec
js
dec
pop
push
pop
enter
lods
leave
popf
inc
mov
jecxz
in
mov
test
inc
dec
das
xor
outsb
add
loopne
ss
in
ret
popf
xor
add
in
jne
fistpl
and
out
jge
out
cmpsb
xchg
ss
in
pusha
pushf
outsb
mov
xchg
pop
lahf
cltd
out
inc
mov
les
add
addb
mov
sbb
inc
test
xchg
mov
push
and
fstps
mov
xchg
or
xchg
lods
testb
imull
filds
cmp
in
mov
and
dec
xchg
aad
hlt
and
jp
mov
int
sbb
mov
ljmp
mov
push
xorps
fimull
scas
sub
test
cltd
jo
or
cmp
insl
push
add
ret
aas
xchg
mov
jnp
sarl
pop
pop
adc
push
shlb
lods
mov
ret
jp
cltd
jle
mov
clc
popf
outsb
lds
xor
adc
mov
into
mov
jbe
inc
in
popf
pop
mov
gs
push
xlat
xor
jne
xchg
lods
test
jb
cld
xor
aas
sti
jne
es
xor
push
or
pushl
mov
sbb
int3
and
xor
mov
aad
pop
rclb
fcompl
mov
outsb
movsl
repz
insl
adc
and
imul
dec
push
mov
cmc
xchg
into
add
sbb
mov
mov
adc
push
jnp
or
fdivr
and
sub
xchg
and
mov
xchg
fs
xor
xlat
xchg
xchg
dec
sub
and
scas
insl
fisubrl
cli
push
lahf
cmp
xorl
push
pop
mov
das
cwtl
hlt
inc
cmpsl
xor
cmpsl
ljmp
jae
andl
aaa
sub
orl
sub
mov
xor
jge
popl
cli
mov
divb
dec
add
adc
fdivr
insb
lea
sub
test
xor
cmc
int
clc
repnz
ret
xor
mov
out
xor
mov
sub
sub
adc
dec
jns
mov
dec
fucomi
sbb
movsl
loop
icebp
sbb
add
mov
jno
mov
lods
sbb
push
xchg
cmpb
push
sub
stos
jl
pop
cmp
cmp
hlt
mov
push
mov
lods
mov
adcb
jns
lods
stc
lcall
lcall
shll
and
sbb
ret
in
imul
cld
push
sbb
sbb
es
push
jmp
push
es
hlt
jae
out
xor
or
stos
insl
jne
xchg
sbb
mov
test
lods
rcr
sbb
nop
mov
inc
in
lods
stc
mov
leave
push
fcoml
jmp
jle
subl
mov
sbbb
mov
adc
mov
mov
pop
pop
fmull
dec
in
xchg
push
mov
inc
inc
jb
push
mov
lods
jnp
shl
mov
cmp
push
mov
clc
and
stos
mov
mov
arpl
jns
pop
addr16
mov
xchg
add
shlb
stc
out
or
adc
sub
fisttpll
add
mov
icebp
test
bound
leave
jmp
dec
cmpsb
cwtl
cmp
rorl
data16
in
bound
adc
or
push
mov
rcrb
inc
icebp
shr
mov
lcall
inc
xchg
jae
pop
sub
ret
jnp
roll
push
adc
dec
xchg
and
jno
int
mov
fwait
addl
aam
or
dec
into
push
call
jle
lret
mov
add
add
push
nop
pmaddwd
cmp
repz
rcl
test
xchg
xchg
fldcw
mov
push
mov
xchg
divl
pushf
out
and
nop
mov
ss
inc
mov
mov
roll
pop
test
sahf
cmpsb
subb
sbb
xchg
mov
jns
leave
fstpl
inc
jae
repz
adc
sub
and
cmp
cmp
adc
mov
test
aad
pop
add
add
dec
popf
adc
sbb
hlt
adc
xor
add
xchg
aad
adcb
cs
mov
mov
push
divb
mov
mov
mov
int3
mov
mov
jbe
add
std
rol
fidivrl
push
roll
cmpsb
movsl
push
scas
adc
jp
lcall
and
pop
vpsubsw
cmp
mov
fildl
lds
int
sub
lock
repz
jecxz
daa
dec
jno
addl
mov
mov
mov
in
xchg
fwait
mov
or
dec
imulb
movsl
mov
push
lahf
pop
adc
mov
cmp
aam
aam
hlt
repz
inc
sub
sti
sbb
fsubs
add
sub
lret
dec
imul
add
js
sub
dec
movsb
mov
mov
jbe
imul
dec
sbb
out
pop
mov
in
cwtl
lahf
into
cld
fisttpll
and
mov
sahf
lret
push
lods
and
and
imulb
cli
test
or
push
push
cmp
es
inc
adc
dec
jmp
gs
in
loop
ret
pop
iret
sub
jae
sub
mov
jne
js
out
bound
in
pop
mull
pop
adc
lods
jnp
movsl
pop
cmpsb
mov
mov
mov
push
mov
sub
in
ret
and
add
and
fildll
lds
mov
push
hlt
sub
je
inc
je
les
fiadds
dec
push
popa
ja
cmpsb
popa
les
mov
jmp
leave
lds
sahf
push
loope,pn
and
mov
mov
imul
xor
mov
ret
jb
mov
cmp
cltd
hlt
sbb
cwtl
push
clc
sbb
jne
rcrl
insl
insl
sahf
ret
push
ret
adc
dec
nop
xchg
dec
mov
xchg
and
or
rcr
pop
bound
mov
inc
xchg
xor
push
jmp
inc
ss
shlb
pop
cmp
pop
sbb
inc
out
or
leave
jno
mov
fmul
mov
mov
pop
push
fs
jle
inc
pop
cmp
pop
or
add
shll
mov
push
es
arpl
test
jns
inc
lret
xor
or
mov
cmp
xlat
push
push
lret
pop
dec
and
cmp
cmp
aas
ficoms
lcall
jge
mov
lret
inc
dec
outsl
jbe
cmp
daa
sub
hlt
pop
inc
pop
push
aam
xchg
inc
xchg
sub
icebp
pop
loope,pn
iret
lock
bound
xor
out
jo
or
jecxz
gs
push
sub
mov
imul
and
cld
or
faddl
int3
xchg
pop
test
les
pop
mov
fmuls
or
xchg
pop
cli
es
popf
mov
lds
aad
ljmp
xchg
adc
add
out
xor
inc
add
sub
loop
mov
cmp
std
out
dec
sub
lret
arpl
fisttpll
mov
fdivl
add
xor
out
mov
jp
adc
push
repz
adc
pop
mov
mov
push
pop
jno
pop
decb
in
or
sbb
pop
xor
orb
std
jle
cmp
sub
dec
add
scas
mov
add
push
xor
jns
pop
inc
add
xchg
sub
cmc
cmp
xor
xor
adc
mov
iret
adc
aaa
xchg
call
mov
lds
orl
out
mov
mov
add
xchg
push
fadd
scas
cmpl
ds
add
fldl
cmp
gs
stc
push
frstor
jmp
lea
jp
jge
xor
imul
add
sub
adc
push
sub
mov
pop
mov
sti
push
inc
pop
ja
cmp
sbb
insb
test
and
in
stc
fistps
mov
pop
push
xor
inc
adc
orl
dec
addl
sub
mov
fcompl
jle
push
aaa
sub
or
cmpsl
sarl
sahf
jmp
popf
in
sub
or
shlb
xchg
mov
push
add
inc
pop
sub
mov
xchg
test
fwait
adc
notl
mov
sbb
mov
clc
push
dec
lods
mov
scas
xorl
inc
outsl
dec
mov
fisttps
xor
shlb
orb
mov
mov
inc
push
mov
lock
in
minps
xchg
jp
insl
pop
addb
xor
push
mov
mov
aas
lret
xor
pop
jbe
push
adc
inc
rcll
xor
sbb
cmp
dec
ret
gs
test
iret
sub
pop
xchg
sbb
enter
in
inc
push
cmp
push
imul
nop
ss
les
adc
test
mov
mov
mov
jp
jge
mov
repz
and
arpl
add
ljmpw
or
ja
out
add
jl
icebp
mov
imul
xchg
sbb
popa
mov
repz
push
push
mov
xchg
xor
xor
adc
cld
push
push
in
mov
cmpsl
nop
xorl
hlt
stos
bnd
push
or
dec
addr16
out
ja
xchg
fiaddl
mov
or
adc
xchg
jg
mov
xor
pushf
xor
decb
add
cmp
fwait
dec
cmpb
decl
lods
jo
dec
fstpl
or
es
sti
push
lods
jp
inc
outsl
push
jo
bound
mov
mov
hlt
mov
jnp
push
leave
push
adc
pop
pop
sub
sbb
lds
fisttpll
leave
scas
aam
jle
adc
sub
pop
test
add
and
out
and
lea
xor
dec
mov
adc
sti
mov
jo
movsb
xlat
stos
or
clc
idivb
sti
and
push
adc
xor
subl
push
cmp
add
call
call
mov
mov
inc
enter
ds
push
les
leave
push
iret
jp
enter
popf
pop
aaa
ss
and
pop
inc
test
jne
sub
call
outsl
cmp
sub
inc
pop
outsl
adcb
in
jae
repnz
stos
mov
outsb
andl
add
cmc
popf
xor
das
fimuls
das
xchg
xchg
lds
xlat
rorl
inc
push
call
imulb
pop
cmp
mov
jbe
xchg
push
dec
stos
jg
mov
xor
jo
pop
sub
das
jo
nop
xchg
jne
imul
jb
pop
or
adc
xor
jne
sbb
or
jmp
mov
add
fnstenv
ret
mov
mov
sub
add
inc
je
xchg
out
aas
mov
xchg
loopne
aam
sti
mov
lcall
in
mov
sti
mov
and
pop
add
popa
repnz
mov
popf
push
inc
sbb
js
stos
xchg
inc
nop
pop
into
outsl
pushf
sbb
test
shl
aas
mov
leave
int
mov
mov
inc
xchg
mov
inc
xlat
add
cmpsl
pop
pop
lret
mov
loop
cmp
xor
shrl
shl
and
pop
pop
add
sub
ret
xchg
int
ss
pop
sub
sahf
mov
in
repz
fiaddl
and
pop
pop
cmp
xchg
test
jo
stos
stos
cmp
and
out
xchg
xchg
xor
in
pop
leave
dec
imul
mov
in
jns
sti
ss
pop
xlat
jg
xchg
pop
mov
jge
gs
pusha
insb
sub
mov
xchg
sub
int
insb
aas
push
lods
incb
fwait
inc
rclb
aaa
pop
popf
or
and
xchg
aad
js
adc
xchg
in
cld
cmp
xchg
add
sahf
fwait
dec
dec
pop
nop
roll
add
ja
lds
mov
xchg
movsl
mov
repnz
xchg
dec
inc
andl
xor
repnz
push
fwait
movsl
jno
mov
imul
lds
dec
inc
and
mov
sbb
xlat
add
icebp
es
nop
fiaddl
sub
mov
movsb
push
mov
xchg
sub
add
jns
push
fwait
inc
pop
adc
out
lods
xchg
dec
mov
push
inc
popf
or
test
loope
inc
nop
and
cmp
orb
push
cmpsb
pop
imul
pop
mov
lahf
xor
push
fyl2x
sub
fcmovnu
aas
mov
leave
into
ret
jge
fdivrl
jb
jb
pushf
jg
pop
hlt
jno
lret
jg
mov
add
inc
xchg
sub
mov
testb
or
push
jle
pop
adc
daa
sub
andl
xchg
in
stos
inc
imul
ret
ljmp
xchg
add
adc
sahf
nop
ss
pusha
testb
call
pop
rolb
es
cmp
jle
nop
cltd
and
pop
rorl
sub
sbb
repz
push
notl
popf
leave
outsl
pop
mov
negb
mov
mov
es
adc
add
imul
mov
cmp
adc
out
dec
add
into
inc
sub
rclb
inc
push
push
shrb
adcb
aad
lea
mov
or
pushf
ret
and
das
xchg
xor
cmpb
adcb
ljmp
sub
dec
test
int
xor
cmc
mov
cmc
push
aad
dec
adc
dec
cmpsb
clc
mov
inc
jg,pt
pop
repnz
xor
xchg
inc
leave
or
cmpsl
dec
xchg
mov
mov
push
arpl
sbb
stos
cltd
mov
mov
test
and
cmp
lds
popf
cmp
cld
test
mov
sub
cmpl
iret
clc
ret
jle
lcall
mov
push
test
dec
add
std
flds
movl
add
lret
jg
sbb
dec
xorb
or
sbb
mov
shl
jecxz
movsl
lret
sub
sarl
test
push
movsl
and
dec
ljmp
push
sbb
xchg
stos
mov
inc
dec
push
imul
les
mov
lahf
push
iret
mov
xor
in
mov
js
xor
lock
mov
fnstenv
cltd
addr16
and
xor
jns
imul
cmpsl
icebp
xor
push
jg
inc
aam
or
addr16
shlb
and
aad
push
cmp
pop
pop
jo
addl
je
lods
adc
push
pop
aas
enter
jg
cmovg
iret
loope
fiadds
imul
lea
ret
sub
add
sbb
add
js
bound
inc
mov
xchg
jb
int3
dec
addb
sub
pop
daa
xchg
icebp
lock
outsl
fld
xor
lret
push
pop
adc
loopne
clc
add
or
stos
xchg
das
outsl
sbb
add
and
sub
testl
mov
sub
sbb
in
in
pop
push
jno
rcll
mov
lock
cwtl
push
dec
arpl
add
and
sbb
imul
xchg
mov
push
cli
roll
adc
push
andb
fdiv
cmpl
xchg
cmp
pop
xlat
enter
pop
repnz
push
fistps
mov
popa
or
ljmp
sbb
icebp
mov
aas
ret
jmp
mov
push
aad
xlat
test
xor
daa
jo
push
push
jmp
xchg
dec
jle
scas
adc
jns
pop
fistps
nop
out
cmpsb
cmp
xor
ret
repz
sub
imul
les
jge
loope
xor
pop
pop
mov
xchg
mov
xchg
or
mov
les
int
fs
shl
xor
push
icebp
aam
push
scas
sbb
outsl
les
dec
mov
sbb
mov
test
arpl
xor
inc
xor
jg
push
fistpll
inc
xor
mov
xchg
push
push
andb
push
movsb
mov
mov
sub
dec
cmpsl
in
scas
ds
jne
jns
push
cmpsb
pop
xor
inc
addb
jmp
cmp
fists
xchg
mov
dec
iret
xchg
jbe
inc
mov
pop
add
adc
shll
repnz
and
loopne
sub
loopne
and
jg
out
jo
sub
mov
leave
loopne
sti
inc
adc
pop
xor
int3
adc
gs
push
pop
dec
sti
push
jno
mov
loope
fnstcw
mov
outsb
test
sub
sub
push
loope
inc
pusha
movsb
repz
xor
mov
aad
sbb
jnp
mov
gs
mov
mov
lret
pop
or
fidivs
dec
imul
cltd
test
inc
push
std
int
daa
cmp
sub
mov
xor
push
outsl
ss
lods
jge
mov
mov
dec
popf
sub
popa
xor
or
or
scas
jl
cmp
adc
fisubrs
pushf
cmp
imulb
in
mov
out
sub
push
ss
stos
arpl
adc
mov
add
test
xchg
lea
push
pop
push
adc
push
jns
int3
push
das
dec
jne
in
or
adc
mov
jle
xchg
lods
sbb
adc
mov
push
inc
andl
repz
push
lods
insb
addb
xchg
fisttpll
jbe
rol
mov
push
shll
jo
iret
loope
pop
cmp
loopne
mov
push
push
push
loope
ret
push
jge
jge
out
and
mov
js
cmp
in
les
inc
push
mov
pop
mov
mov
cmpsb
or
or
stc
adc
jmp
inc
pop
fnsave
inc
std
jmp
fbld
aaa
mov
pop
stos
mov
sahf
nop
outsb
add
stos
sbb
adc
inc
fcomps
sub
and
sub
cld
mov
clc
pop
ss
cltd
cmp
add
mov
pusha
push
scas
popf
scas
repz
pop
cli
and
or
test
pop
leave
push
inc
adc
out
push
pop
sti
std
dec
pusha
dec
jo
clc
sbb
mov
mov
shlb
cltd
mov
xchg
ret
xor
jmp
out
mov
adc
sbb
push
inc
insl
pop
lea
inc
push
cmpsl
inc
mov
cld
cmp
xchg
dec
movl
pop
cld
popf
xor
add
xor
es
mov
adc
xor
insl
lock
jecxz
mov
xchg
dec
shl
loopne
inc
mov
movb
dec
or
dec
dec
lds
loop
cmp
mov
mov
test
add
xlat
mov
popa
jbe
out
ja
lret
push
xchg
in
pop
pop
lret
cld
loopne
pop
jne
dec
add
insb
notl
fs
and
xor
insl
dec
sbb
sub
stc
and
mov
hlt
clc
rcrl
mov
jb
andb
and
lret
sar
inc
inc
mov
xlat
push
insl
int
pop
mov
cmc
cwtl
mov
js
xchg
pop
sbb
pusha
imul
jbe
xor
push
repnz
leave
jge
xchg
insb
push
xchg
sbb
add
roll
ss
push
int
or
mov
mov
cld
push
add
pop
in
jle
inc
mov
psadbw
dec
jl
testb
mov
into
into
ljmp
pop
fs
or
mov
lods
lds
push
out
sbb
jns
subl
add
int3
xlat
stos
cmc
mov
icebp
cwtl
mov
mov
popa
pop
sub
notl
or
jg
in
iret
mov
cmp
stos
nop
push
test
push
shrl
jl
dec
sbb
push
xlat
pop
cmp
int
jg
dec
ss
int
popa
ja
or
stos
loope
cmp
mov
xlat
int
xchg
xor
mov
jp
fidivs
inc
mov
jne
adc
mov
and
pop
mov
dec
aam
sbb
je
dec
scas
xlat
iret
fs
xor
mov
push
jnp
rclb
or
popf
jo
inc
pmuludq
out
mov
repnz
mov
in
xchg
iret
ret
adc
shrl
sbb
xchg
sub
mov
mov
jmp
out
jmp
pusha
jno
icebp
xor
mov
inc
loop
or
xchg
or
sbb
dec
in
sbb
sbb
and
ljmp
xor
jno
and
into
push
add
aam
inc
mov
arpl
adc
mov
int
mov
in
add
xchg
lret
push
adc
movsl
mov
leave
movsl
test
sahf
push
mov
jo
data16
fnstenv
leave
dec
or
jb
ljmp
push
xchg
and
in
xor
pop
mov
gs
repz
dec
sub
jo
xchg
xchg
xchg
push
mov
scas
cmpl
push
ljmp
jg
pop
sub
push
pop
cmp
out
lcall
mov
push
in
sub
or
cwtl
fsubs
shlb
mov
dec
adc
mov
loopne
out
xchg
fildl
xor
jle
mov
cmpsb
outsb
sub
cmpsb
ljmp
cmp
mov
je
pusha
bound
out
fs
repnz
mov
es
xchg
push
mov
cmp
lret
mov
mov
or
jmp
xor
adc
fdivs
adc
fdivrs
xor
adc
mov
loope
sahf
out
test
test
fs
pop
popa
lock
mov
movb
and
jnp
inc
addr16
push
mov
lret
xor
sbb
test
sub
lds
fldt
fnstenv
int
arpl
pushf
jne
pop
imul
ss
dec
cmc
cmp
push
popl
iret
cmc
fadds
jbe
stos
mov
xlat
inc
loopne
scas
imul
fcompl
push
cmp
insl
loopne
nop
sahf
adc
mov
cli
jg
out
in
pusha
xor
lldt
repnz
sarl
imull
or
dec
mov
and
push
imul
roll
push
ss
es
sbb
pop
adc
sbb
jb
lods
movsl
adc
ret
lahf
aas
add
mov
fisubrl
push
pop
fstpl
mov
test
inc
cmpsb
sub
ret
jle
addl
icebp
xor
test
pop
mov
sub
rcr
adc
jae
ds
mov
iret
sbb
stc
jno
lcall
call
pop
cli
fdivl
inc
repz
ss
cmp
xchg
cmp
fdivl
dec
ret
out
and
add
dec
into
jb
sti
hlt
xor
push
add
dec
jle
outsl
pop
scas
add
xlat
movsl
xor
jo
nop
mov
add
ret
dec
and
cmp
mov
sti
push
dec
jnp
leave
lds
push
xor
dec
or
testl
and
jl
inc
xchg
dec
xor
mov
loop
repnz
push
out
ljmp
mov
xchg
shr
jne
add
xor
cmp
push
into
gs
std
sbb
data16
jae
rcll
push
les
push
xchg
nop
std
xchg
mov
clc
insl
mov
lcall
pusha
pusha
ficomps
ret
adc
jb
mov
push
mov
into
test
js
clc
shrb
jo
xchg
mov
mov
mov
push
test
xlat
sub
mov
repnz
addr16
add
inc
fistl
mov
aaa
sub
mov
fisubrs
push
pop
push
inc
inc
test
dec
mov
dec
dec
rcrb
mov
or
cmp
les
loope
mov
cmp
cli
cmp
fs
ss
mov
jecxz
imull
sar
pop
adc
sbb
cmp
mov
lcall
sti
adc
dec
cs
jno
mov
ret
jo
lods
imul
ss
add
or
xor
mov
cmpsl
dec
mov
hlt
mov
or
jl
or
jmp
xchg
out
pusha
dec
adc
xor
adc
mov
jl
iret
push
lods
stos
hlt
scas
mov
adc
fidivrl
push
cmpsb
jle
shlb
sub
scas
and
xlat
xor
iret
int3
cmp
lret
iret
notb
addps
and
xchg
pop
daa
loope
addr16
sub
cmpsb
icebp
add
cli
push
and
cmpsb
push
fisubl
mov
sub
mov
mov
cmpsb
nop
mov
and
movsl
or
pop
xlat
cwtl
xchg
sbb
arpl
jl
push
aas
cmpsb
dec
mull
jp
inc
stos
hlt
data16
icebp
xchg
pop
xor
jg
inc
mov
xor
mov
xchg
mov
in
add
out
and
or
inc
xor
out
repnz
gs
std
loopne
in
xchg
arpl
ror
mov
std
dec
sbb
les
adc
jo
xor
mov
cmp
add
ret
sub
outsb
les
xor
mov
and
mov
jmp
ljmp
or
pop
lds
lahf
pop
mov
sbb
sar
pop
pop
sub
dec
les
and
ja
loop
push
stc
call
xchg
sub
cltd
and
int3
cmp
push
test
pusha
faddl
arpl
icebp
les
lea
int
mov
mov
cmc
bound
cmp
lcall
icebp
pop
xor
inc
outsl
mov
ret
add
dec
test
jns
sub
dec
icebp
adc
ja
test
and
fidivrs
outsb
push
loop
push
sub
mov
push
xchg
rorl
xchg
adc
xor
ds
sbb
mov
xchg
add
int
arpl
fwait
fwait
je
incb
jmp
ja
sti
out
popa
cmpsb
mov
test
inc
push
js
jle
adc
int
sub
push
scas
adc
inc
rolb
mov
xor
xchg
xchg
fdivl
pop
daa
cmpps
aam
call
hlt
jb
push
out
sbb
cli
mov
push
push
add
pop
pop
leave
jb
xchg
std
das
cli
cmc
pop
iret
and
mov
cmp
in
shll
rclb
xchg
pop
imul
addb
sbb
inc
xchg
ficoml
mov
push
or
cmp
push
rcr
cmpsl
mov
jg
pushf
pop
sub
xlat
jecxz
pop
cmp
scas
loope
mov
jnp
mov
scas
je
outsl
sti
pop
and
fdivl
push
cmp
int3
shr
sbb
addr16
push
das
mov
cmpsl
dec
mov
imul
sbb
xchg
stos
outsb
gs
sub
xchg
pop
add
pop
dec
jne
cmc
jae
pushf
testb
in
ja
pop
pop
dec
mov
fcoml
jp
loopne
test
addl
mov
push
jp
fidivs
loop
popf
es
sbb
jp
mov
pop
adc
lods
mov
sbb
pushf
dec
mov
lock
pop
add
stos
lahf
xchg
popf
jno
adc
fisttpl
out
lods
pop
lock
int
xor
jbe
cld
push
jae
cltd
sbb
stc
inc
jbe
and
hlt
xchg
add
dec
stc
pusha
shll
jno
cmp
dec
in
cltd
and
mov
lret
mov
sahf
icebp
sub
out
xor
and
ja
ljmp
jo
push
insb
out
add
cmp
vunpcklps
std
mov
add
mov
xor
mov
fstpt
in
cmp
mov
out
pop
dec
jmp
rorl
sub
jecxz
subb
inc
and
sbb
test
pop
popa
and
jge
mov
sahf
push
add
loopne
xor
adc
fs
scas
mov
in
pop
or
icebp
dec
push
lret
jo
ret
cmp
add
xchg
push
inc
bnd
sub
dec
dec
in
cmp
cwtl
inc
es
pop
scas
into
xchg
lret
das
cmpsb
push
cmp
sti
mov
in
xchg
mov
nop
cmp
mov
clc
xchg
pusha
js
and
cmp
inc
ret
sub
je
lock
btr
and
pop
push
outsl
fwait
or
ljmp
add
loope
stos
ret
aam
sub
pusha
push
arpl
pusha
das
repz
mov
repz
lock
fwait
imul
mov
inc
ficoms
cmp
and
push
jp
sahf
mov
jb
rcrb
ja
cli
jne
mov
int
aaa
adc
paddb
nop
cwtl
je
lea
push
fstpt
push
dec
sub
sub
jns
jns
dec
int3
push
movsl
fisubl
jb
xchg
int
mov
sbb
push
inc
mov
mov
jge
decl
lods
push
cld
dec
push
or
xchg
dec
mov
loop
sti
rolb
jecxz
and
mov
xor
out
clc
dec
repz
and
pusha
in
mov
jbe
adc
movsl
outsl
cld
mov
sbb
jp
lock
pop
pop
push
jb
sbb
enter
sbb
jno
cli
imul
hlt
mov
sub
xor
shrb
jmp
ljmp
inc
mov
ret
shll
int
data16
mov
bound
mov
xchg
sbb
test
in
fwait
sub
dec
cwtl
fstpt
popf
in
mov
or
or
or
in
jb
mov
gs
in
aad
icebp
mov
in
sub
fdivrl
push
mov
sti
cmpb
cmp
fstps
xchg
scas
outsl
and
sbb
xchg
ss
add
cmp
arpl
jne
outsl
aam
mov
push
push
fwait
daa
push
mov
int3
imull
xchg
call
xor
pop
adcl
jns
dec
ss
dec
pop
negl
jnp
shl
cmc
push
pop
add
jns
push
and
lret
mov
rclb
test
xchg
gs
inc
fidivrl
dec
lcall
cmp
xor
mov
xor
xor
into
pop
insb
xchg
insb
mov
ljmp
addl
int3
ljmp
rcr
pop
inc
pop
fs
cmpsb
sbb
aaa
daa
out
add
push
adc
sub
mov
add
mov
rol
lds
outsl
and
icebp
out
std
cli
imul
ss
outsl
fiadds
xor
sub
inc
add
push
repnz
xchg
sub
sub
mov
cmpsl
mov
fst
pop
dec
hlt
pop
mov
mov
mov
sbb
push
jge
ds
xorb
or
jp
inc
sti
mov
insb
repnz
dec
gs
ja
idivl
mov
add
out
in
inc
add
sarb
rorl
js
lea
rolb
mov
cmpsb
shll
ljmp
fmull
movsb
xor
push
out
fcmovb
into
lods
mov
or
and
or
dec
cld
cmp
mov
mov
lods
xor
jg
mov
inc
dec
adc
xor
stos
sahf
fldt
xor
lds
jle
jmp
xchg
repnz
sbb
push
mov
hlt
push
in
inc
cmp
mov
int3
popf
cmpsb
nop
pop
loop
ret
mov
cwtl
lock
fdivrl
push
sbb
lods
inc
jmp
inc
into
mov
inc
mov
repz
dec
loopne
mov
xor
inc
std
push
sub
bound
pop
or
lock
and
add
nop
popf
add
xor
xchg
outsl
jb
mov
xor
movsl
mov
cmc
je
cwtl
sub
out
jmp
pop
pop
mov
ret
movb
mov
mov
push
clc
mov
ret
dec
mov
in
fisubrs
xchg
and
popa
imul
pusha
sbb
loop
jle
push
add
sub
and
sbb
fldl
push
imul
xchg
sub
inc
adc
fs
out
and
subl
rorb
aam
push
xchg
or
mov
nop
pusha
je
xchg
inc
fdivl
and
or
xor
lock
pushf
jecxz
pop
adc
xchg
outsb
cmp
scas
lea
push
inc
movsl
insb
bound
pop
adc
sbb
cmp
jmp
xor
fcoms
fucomip
leave
lock
pop
push
jmp
push
jns
cltd
inc
add
sub
ja
jne
repnz
xor
cmpsb
push
jno
sarl
in
icebp
mov
mov
sbb
sub
dec
fisubrs
out
subl
sub
inc
outsb
xor
aas
sub
mov
dec
add
mov
out
aaa
pop
adc
inc
xorl
icebp
repz
stc
movsl
push
shlb
fldl2t
dec
push
mov
xchg
std
cmc
pop
or
xor
cmp
out
mov
mov
mov
incl
lcall
pusha
xchg
nop
mov
mov
test
test
popf
mov
lret
cmp
pop
xchg
loope
mov
lret
mov
lcall
and
push
outsb
fstpt
jge
xchg
or
jns
sahf
cli
in
gs
xchg
pop
dec
ljmp
sbb
fs
icebp
cmc
repz
or
inc
ljmp
test
mov
nop
jno
scas
inc
std
push
les
sbb
sub
into
movsb
xor
jl
push
lock
sahf
ret
outsb
xchg
jno
and
pop
aas
cmpsl
mov
sar
adc
mov
jb
cltd
push
xchg
test
push
cmpsb
mov
pop
sub
dec
jnp
jl
sahf
jg
pop
dec
pop
pop
lods
lds
aad
insl
adc
push
ljmp
cmpsb
fstps
mov
gs
and
int3
aam
daa
mov
xor
or
aas
int3
pusha
scas
mov
pop
stos
flds
shlb
movb
dec
fs
mov
test
fadd
loope
fs
mov
outsb
sub
or
test
js
gs
mov
mov
lret
mov
out
mov
in
call
lock
or
leave
sbb
xor
test
insb
jl
mov
pop
popf
cltd
or
aaa
jno
add
lock
stos
xchg
rcrb
pop
dec
inc
test
pop
daa
mov
je
mov
xchg
mov
xchg
stc
or
sbb
xchg
xchg
call
insb
clc
cmp
sti
inc
jl
xlat
jae
scas
aas
mov
mov
mov
mov
scas
shlb
cmpsb
inc
xchg
repnz
in
inc
aas
push
cmpsl
fadds
mov
faddp
mov
xchg
sbb
or
outsb
mov
jae
sarb
lahf
ja
adc
cmpsb
mov
jl
sti
sbb
jno
mov
xchg
jne
into
inc
adc
mov
inc
out
mov
and
lea
movsl
popa
xchg
movsb
xchg
xlat
sub
mov
add
and
jp
out
loope
jnp
push
int
scas
push
cmp
pop
roll
xchg
push
out
cmp
push
mov
sub
mov
sub
cmpsb
mov
mov
or
xor
pop
daa
mov
fcomp
cmpl
or
loopne
pop
add
fbstp
lret
jo
add
lock
jge
fs
outsb
inc
rcrb
sub
sub
cmp
decb
sub
lahf
add
and
mov
or
pop
or
add
jb
daa
jp,pn
xlat
lret
xchg
sti
xchg
test
lret
arpl
enter
repnz
lock
sub
add
adc
jg
jp
in
and
jge
sub
sub
mov
mov
pop
imul
dec
jle
xor
dec
add
cmp
jne
jle
xor
out
sti
fdivp
sbb
add
fwait
movsl
aas
inc
dec
mov
and
dec
fucom
push
jp
push
xchg
jne
jecxz
pop
sti
add
jb
xor
repnz
cmp
and
lahf
cmp
sbb
in
out
shll
pop
loopne
cmp
mov
imul
insl
shlb
insl
into
mov
jno
aam
mov
cmpsb
xchg
xorb
scas
sbb
movb
out
add
imul
or
inc
mov
test
xor
mov
xor
frstor
mov
leave
sti
inc
or
push
shll
enter
adc
adc
fidivrl
imul
scas
mov
enter
daa
pusha
pop
mov
inc
aaa
mov
in
scas
ss
jns
adc
sbb
push
test
cmc
outsl
or
pop
loop
fldt
sti
jbe
xchg
mov
and
aam
cmp
mov
push
cmp
jo
xchg
lods
cmp
sbb
lds
jge
iret
test
cmpsb
mov
in
or
pop
pusha
or
or
pop
dec
popa
push
addb
lods
cmpsl
lret
pop
push
sbb
add
aad
pop
jg
jbe
nop
mov
push
aaa
sub
add
scas
paddsb
mov
fiadds
hlt
lret
test
cmpsl
cld
push
inc
leave
in
mov
test
cltd
cmp
lret
jbe
out
sbb
ja
pop
fsubrl
xor
sahf
hlt
pop
out
fs
mul
xchg
sub
fdivr
xor
js
cld
inc
out
or
jb
push
xor
fs
loope
in
adc
jg
roll
and
iret
xor
fnsave
cmp
aas
imull
shrl
data16
xchg
into
mov
icebp
addl
pop
mov
jns
adc
sub
push
fbstp
std
mov
outsb
mov
loope
xchg
jo
mov
popf
jmp
notb
ss
push
outsb
push
push
leave
stos
xchg
mov
mov
sbb
jg
adc
mov
jmp
mov
or
stos
dec
or
ss
sub
mov
adc
daa
les
mov
xor
jnp
aas
mov
sub
sahf
sahf
dec
mov
movsb
test
jno
repnz
push
mov
das
cmpb
hlt
je
jge
dec
inc
hlt
cmp
aas
loope
mov
or
clc
cli
outsl
sub
inc
pop
mov
lcall
pop
push
roll
mov
mov
push
out
lret
sub
or
jb
mov
xchg
hlt
mov
mov
gs
nop
jo
and
push
mov
push
repz
ja
jnp
xchg
inc
gs
jns
or
or
les
int3
mov
cmp
push
mov
lret
arpl
xchg
xor
mov
fldl
push
dec
wbinvd
cltd
xchg
push
in
inc
pop
movsb
enter
into
lods
mov
mov
dec
sbb
xor
dec
xlat
movsb
xor
insb
out
or
mov
leave
iret
fwait
mov
ljmp
sti
mov
sub
ret
enter
mov
cmp
out
push
push
in
xlat
jg
mov
fsts
inc
in
push
iret
cmp
aam
push
mov
repz
xor
push
or
mov
push
dec
add
cld
adc
pop
cmp
dec
les
rcrl
sub
and
sub
cmp
js
fsubp
add
mov
xlat
aaa
cltd
cmp
lret
stos
icebp
aaa
mov
into
mov
out
ss
clc
xchg
mov
push
pushf
decb
enter
and
pop
dec
mov
repz
pop
sbb
push
test
ss
jecxz
or
push
xchg
movsl
or
cwtl
lds
jle
in
and
push
imul
push
jb
sub
enter
orb
xor
mov
mov
jle
xchg
cmp
lods
stos
xchg
iret
lcall
sbb
leave
pop
in
mov
nop
mov
popf
inc
rcrb
push
jle
push
std
push
loop
daa
dec
int3
dec
add
or
inc
sti
push
fcmovb
sub
shrb
fwait
mov
xor
pop
rcrl
into
out
cmp
mov
cmpsb
xchg
nop
in
mov
push
mov
jno
loopne
bound
dec
inc
movsl
cmpb
mov
pop
test
ds
push
mov
and
adc
or
dec
mov
mov
inc
loope
in
pop
les
sti
add
pop
adc
aaa
mov
lods
add
xor
mov
xchg
inc
xchg
stc
mov
ja
lds
jecxz
ss
call
jno
int
test
mov
shrb
xor
mov
or
mov
setl
sub
push
aad
mov
mov
jp
xchg
mov
mov
xchg
stos
sbb
mov
in
push
ss
in
les
inc
cmp
test
mov
outsl
mov
ds
setae
jne
cmpsl
fs
push
dec
test
adc
in
sbb
and
lock
std
incl
ret
ja
rcll
dec
addr16
cmp
imul
mov
outsl
popa
andl
pop
rclb
adc
and
cmc
mov
sbb
movsl
cs
and
push
mov
dec
icebp
cwtl
bound
or
cltd
push
shr
int3
inc
sahf
sarl
cltd
unpckhps
test
loope
loop
jne
jae
and
jo
jo,pn
sbb
movsb
and
mov
dec
add
mov
adc
fildll
and
cmp
adc
ljmp
aas
pop
lock
les
aas
daa
jbe
in
mull
insl
lods
push
inc
imul
inc
jb
lods
insb
loop
mov
shr
mov
loope
in
scas
add
sbb
and
fsincos
mov
mov
aad
jb
xlat
js
fstl
jae
mov
mov
pop
int
lods
shrl
push
xor
aam
xor
ds
in
jo
test
pop
fstpl
fdivp
shl
leave
cmp
mov
in
notb
jl
mov
push
out
xlat
or
jecxz
das
sbbb
dec
or
pop
les
subl
test
sbb
adc
outsl
push
cwtl
pop
mov
xchg
jb
cmp
stc
aam
in
jg
mov
mov
rclb
xor
sbb
cs
sub
out
imul
lret
repz
xor
jg
add
incb
jo
xor
adc
and
ljmp
out
mov
jl
aas
lret
xchg
mov
dec
mov
jae
cmpsl
xchg
sub
sub
push
nop
leave
and
mov
xor
jne
xor
enter
mov
sub
ja
pop
mov
jno
dec
jbe
aas
pusha
in
imul
push
cwtl
mov
mov
jg
mov
pop
jmp
out
loopne
add
mov
popf
jge
cmp
ret
lds
jle
pop
sbb
dec
out
mov
or
cld
mov
hlt
movsb
xlat
pop
jmp
ret
jg
add
dec
mov
fs
outsb
mov
push
or
gs
lret
clc
mov
add
xchg
dec
sbb
sbb
lea
out
add
mov
jmp
lcall
jge
rep
popa
movsl
adcb
outsl
outsl
sub
test
xchg
fcmovnbe
mov
adc
pop
js
jg
jmp
data16
lret
mov
lea
xor
jo
leave
aad
and
xchg
andb
jge
inc
data16
rolb
pop
arpl
inc
or
mov
inc
movsb
cli
jp
lret
addl
jmp
mov
lcall
in
cltd
jae
int3
ret
xor
rolb
in
push
push
insl
xchg
test
pop
inc
pop
lods
mov
sub
sti
adc
dec
pop
addr16
call
sub
lock
fnstsw
adc
mov
mov
inc
push
les
lret
outsb
cmp
sub
jecxz
dec
in
cmp
andl
repz
xchg
xor
lods
or
gs
xchg
cmpb
and
aad
fsubl
loopne
enter
or
js
out
sahf
sbb
push
sub
divl
sub
mov
shll
int3
cld
adc
or
roll
scas
sbb
enter
nop
fs
jecxz
ja
and
call
imul
mov
cmp
xor
pushf
cld
jecxz
sbb
and
or
cs
xchg
ljmp
aaa
push
fidivrl
dec
xor
xchg
daa
cmpsl
ret
fwait
and
sub
mov
stos
int
seta
insl
jns
pop
js,pn
sub
jecxz
aad
mov
fs
push
sbb
xor
mov
je
dec
loop
lods
scas
jns
inc
mov
mov
div
dec
in
add
lmsw
gs
inc
test
push
mov
jmp
push
add
xchg
add
imul
ljmp
xchg
xor
int3
push
mov
out
test
push
add
cmpsl
mov
scas
cli
idivl
jns
bound
and
mov
pop
insb
pop
das
xlat
ds
lea
mov
xchg
popl
jg
ds
mov
lcall
add
adc
add
cmpsb
sbb
mov
push
ljmp
lret
push
mov
pop
shl
add
aad
and
mov
ljmp
or
adc
xor
adc
jp
and
imul
lods
cmpsl
xor
bound
jp
idiv
out
cli
test
jge
xchg
cmova
add
lret
mov
incl
test
lds
xchg
jge
andl
arpl
sbb
cwtl
int
dec
adc
mov
sub
outsl
adc
sbbb
scas
cmpsl
mov
cld
bound
dec
loop
add
mov
into
xchg
cwtl
aaa
icebp
jns
sub
inc
sahf
or
gs
popa
sbb
sbb
clc
sub
dec
mov
sbb
fsubl
popf
jne
outsb
jnp
inc
xor
push
xchg
cli
sbb
add
movsb
pop
imul
cmp
fwait
inc
jmp
cmp
testb
aas
and
cmp
fistpll
mov
jp
sub
ret
xor
pushf
sub
gs
das
jo
lea
iret
xchg
and
push
popa
cwtl
outsb
pop
idivl
push
gs
inc
leave
lea
lods
pop
es
pop
cwtl
dec
inc
xor
mov
sbb
incb
out
xor
mov
mov
test
cli
je
bound
push
cmp
xchg
stos
das
ficoms
and
das
lahf
dec
fxch
add
outsl
and
xchg
push
fsts
mov
sbb
ja
and
fisttpl
xchg
jb
sbb
lock
mov
mov
push
xchg
adc
inc
mov
call
jae
dec
test
adc
leave
icebp
mov
adc
shlb
mov
lcall
and
stos
dec
stc
xchg
dec
bound
dec
ja
or
lcall
or
popf
lods
sti
movsb
ja
mov
mov
daa
inc
incb
mov
fidivrs
in
ljmp
mov
insl
push
mov
or
dec
stos
dec
pop
xor
js
jl
lret
outsb
pop
pop
jg
adc
xor
add
out
mov
loopne
in
cld
mov
sbb
xor
rol
mov
lock
enter
jo
sub
and
cmp
cmpsb
dec
sbb
lods
or
push
and
mov
pop
jne
test
and
outsl
xor
negb
add
popf
push
push
add
push
jo
in
sub
fiadds
aam
xor
cmc
lock
loopne
loopne
cmp
stos
mov
daa
or
sbb
jnp
add
adc
pop
or
pusha
les
addl
fistl
mov
inc
dec
scas
push
push
repnz
sti
divb
jp
sbb
push
enter
js
cmc
add
ds
and
decb
inc
cmp
clc
xlat
clc
adc
sub
or
mov
ficomps
lret
add
sti
jecxz
jb
outsl
das
mov
jbe
sub
xor
add
outsl
pop
fsubr
pop
rorb
scas
pushf
test
pop
pop
movsl
int3
mov
les
daa
cmp
rcll
cmp
movl
fbld
icebp
xchg
push
push
ret
inc
loope
pop
lahf
sub
push
ja
xchg
out
sbb
fwait
addr16
icebp
popa
mov
cs
jbe
add
nop
fldl
popf
xchg
sti
divl
testl
mov
test
jb
or
add
dec
inc
pushf
test
xor
jbe
jo
push
mov
inc
and
shr
pusha
push
movsb
into
cltd
lea
xlat
cmpsb
jns
mov
fidivs
and
gs
mov
inc
pop
mull
aaa
add
stc
loopne
das
fistl
test
imul
popf
imul
cwtl
xchg
inc
dec
into
fsubl
mov
lods
mov
inc
dec
lret
inc
mov
jne
adc
xor
pushf
or
shrl
sahf
daa
fnsave
movsl
loope
icebp
mov
lock
ljmp
outsb
stos
sti
int
fcompl
xchg
test
and
mov
shr
lcall
jno
push
cld
stos
push
jle
adcb
jmp
inc
jnp
mov
pop
rcll
fstl
pop
adc
mov
push
xor
gs
xor
or
mov
rclb
xchg
bnd
xor
sub
xchg
punpckhwd
fsubrs
jecxz
xor
mov
daa
push
mov
rorb
push
aas
sbb
push
lock
mov
das
inc
pop
mov
jae
stos
dec
push
dec
les
dec
es
fidivrs
movsl
pop
sub
out
jecxz
push
push
enter
mov
scas
sub
repnz
addb
movsb
xchg
outsl
sbb
jle
mov
out
lods
stc
mov
dec
inc
cli
push
lods
rolb
out
jb
pop
sbb
out
fistl
dec
test
stos
stos
insb
arpl
scas
insb
xchg
lods
push
xor
xor
jmp
xchg
push
inc
ss
mov
aam
xchg
lods
addr16
mov
mov
loop
nop
sub
push
mov
mov
mov
jns
popl
mov
mov
data16
pusha
inc
outsb
push
sbb
push
mov
sbb
adc
andl
or
pop
and
lret
mov
jbe
jle
sbb
aaa
push
add
fiaddl
das
pop
jae
ss
cwtl
es
mov
and
scas
test
nop
or
add
fnstcw
mov
bound
rcr
ret
fcompl
mov
cmp
inc
xchg
and
cmpsb
xchg
fidivs
mov
ss
dec
ss
rclb
and
dec
or
jno
or
jo
je
jp
icebp
fildll
jbe
cmc
dec
mov
loopne
cltd
pop
loope
dec
jecxz
ud2
jnp
adc
jl
pushf
cmp
jl
add
icebp
lock
outsb
fdivs
insb
imul
shrl
ficoms
fidivrl
xchg
inc
pop
ret
cwtl
mov
pop
stos
dec
leave
jb
cmp
add
and
push
cmp
inc
jmp
mov
inc
fldcw
mov
in
jbe
nop
cmp
pop
xor
pop
adc
lahf
scas
pop
gs
jl
mov
test
cmpl
xchg
in
mov
and
dec
adc
loopne
sysexit
mov
icebp
add
cmp
inc
push
mov
push
div
leave
cmp
js
cmp
cmp
push
cmp
data16
test
in
je
mov
bound
addr16
jno
pop
mov
inc
std
inc
in
sbb
push
subb
xlat
dec
xchg
andl
inc
add
scas
aas
mov
mov
leave
fmull
aaa
sub
fdivrs
andb
xor
pusha
and
add
push
int3
sarb
into
sbbb
jmp
nop
sub
push
rcll
push
jne
push
loopne
jl
fwait
ljmp
andl
jbe
xchg
jle
mov
and
add
or
mov
movsl
push
sbb
jge
sti
ja
rcll
rorb
loop
add
mov
pop
aam
mov
dec
add
aaa
add
cwtl
lea
push
push
adc
out
sbb
fwait
int3
adc
jle
jnp
adc
inc
into
fstp
xor
rorb
clc
mov
xchg
jae
xor
es
sub
mov
pop
stc
or
rcrl
adc
mov
sub
pop
dec
outsb
add
js
fbld
mov
int3
cmp
insb
jns
and
outsl
or
push
scas
dec
or
adc
or
jbe
sbb
les
mov
mov
push
jge
add
add
jae
jp
jnp
cltd
jno
jb
push
fs
and
push
or
jmp
adcb
or
iret
xchg
out
pop
xor
sti
mov
mov
sub
clc
mov
add
test
ret
mov
pop
sub
add
mov
lods
sti
adc
or
in
mov
and
and
ss
loope
aaa
sahf
xchg
shlb
data16
cmpsb
and
mov
xchg
inc
dec
sbbb
ljmp
lods
push
dec
sbb
loope
add
pop
push
lret
pop
les
aaa
icebp
add
in
adc
sbb
lea
or
pop
add
push
inc
mov
cli
loope
inc
mov
mov
xor
enter
inc
jmp
adc
cmp
into
xchg
sbb
ja
add
pop
std
push
sbb
test
inc
ret
xchg
dec
imul
add
adc
cmp
pop
dec
jb
lods
sub
adc
ljmp
add
pop
push
mov
push
out
imul
pop
js
push
adc
arpl
or
cld
dec
out
mov
push
jp
dec
mov
dec
shrl
and
cmpsl
mov
cmc
add
cmp
insb
stos
jg
jbe
mov
and
or
push
mov
scas
repz
jne
jmp
and
sbb
push
push
out
iret
out
loopne
pop
inc
stc
mov
aam
pop
pusha
out
shll
pop
sbb
mov
mov
jecxz
cmpsl
xchg
cli
lds
sub
cltd
jb
xchg
mul
stos
lods
add
cmp
cmpsl
sbb
addl
daa
idiv
cmp
repz
jle
out
in
insb
jne
in
aad
fnstsw
adc
les
xchg
dec
or
repnz
jle
pop
cmp
popa
ds
dec
and
pop
fs
test
push
outsb
test
or
lock
xchg
insb
mov
shr
xchg
js
dec
add
test
xchg
js
mov
lods
fildll
cltd
inc
jg
jne
rclb
sbb
fnsave
push
daa
fwait
mov
adc
aaa
jmp
mov
hlt
pop
jle
adc
adc
lea
pop
in
cmc
push
jecxz
outsl
adc
jmp
xorl
sbb
sbb
push
cmp
mov
testl
lret
andl
pop
push
pop
and
rorb
sbb
loope
sub
xor
test
sbb
notl
daa
jae
js
dec
dec
dec
es
inc
sub
pop
mov
xchg
ret
je
aaa
or
adc
in
push
lods
add
loope
mov
lret
push
lahf
inc
cld
test
and
mov
repz
mov
pushf
lock
pop
or
mov
das
addr16
jmp
add
dec
mov
cwtl
jle
mov
mov
mov
jno
jle
stc
arpl
arpl
clc
jnp
mov
dec
aas
movsl
lods
es
repnz
xchg
dec
add
inc
dec
shlb
jbe
loope
call
xchg
fmull
aad
xor
jmp
dec
inc
rcrb
jl
push
cmp
in
mov
data16
out
inc
dec
adc
cld
mov
mov
sti
push
or
in
stos
jmp
inc
add
imul
pop
adc
mov
mov
push
stos
ds
xor
test
cld
scas
out
add
cmp
pop
jno
imul
xor
mov
movsl
cmp
cmp
les
and
stc
lcall
cmp
fcmovbe
lea
xchg
lock
je
fnstenv
into
pop
inc
outsl
outsl
mov
iret
and
mov
pop
mov
adc
popf
and
repz
lea
sarl
aaa
fisubs
mov
cmpsl
push
jb
cmp
out
mov
in
add
dec
ds
test
xchg
sub
sbb
icebp
dec
addr16
add
cs
lret
sbb
in
pop
cli
aad
sub
lds
xor
adc
inc
ficoms
and
or
dec
xchg
xchg
les
push
mov
mov
adc
int
loopne
or
ret
jg
xchg
cld
arpl
mov
bound
es
les
mov
mov
out
jnp
lods
scas
or
mov
lret
ret
push
pop
fstps
aad
rclb
mov
or
dec
jecxz
hlt
scas
cltd
dec
cmc
xchg
out
pop
inc
add
xchg
pop
adc
dec
mov
in
addr16
pusha
dec
xchg
dec
ja
test
mov
dec
jmp
xor
in
sub
repz
popa
repz
cmpsl
mov
and
mov
cmp
lods
es
cwtl
int
repz
je
jge
cmpsb
mov
ljmp
mov
mov
pop
push
lds
shlb
fdivr
sahf
xchg
movsl
dec
pop
pop
or
inc
pop
jns
ja
fiaddl
xchg
or
sar
or
mov
mov
cld
sbb
call
loop
test
jecxz
mov
or
lcall
jle
fnstsw
sti
mov
outsb
ret
xor
xlat
enter
mov
js
sbb
mov
shll
xchg
test
xchg
fistpll
pop
push
cmp
dec
ret
fldt
pusha
xchg
scas
leave
out
sbb
or
repz
repnz
daa
inc
cmpb
xchg
pop
dec
test
inc
mov
iret
dec
jmp
push
jno
sbb
mov
mul
inc
mov
sbb
mov
jp
sti
int3
push
testb
dec
pop
test
arpl
xlat
xchg
xchg
mov
loop
int
inc
cmp
lods
sub
loopne
in
lock
call
addr16
add
sbb
scas
cltd
orb
mov
loopne
push
cmpsb
sub
movsb
lods
loop
xorl
movsb
add
scas
mov
mov
ret
dec
jl
andl
icebp
push
aad
stos
inc
lock
mov
sbbl
sahf
push
orb
arpl
jp
adc
lahf
mov
add
inc
push
mov
cmp
wrmsr
jno
aam
bound
push
lods
into
nop
int3
mov
aad
mov
shrl
int
mov
cmp
decb
clc
push
rcrl
pop
icebp
mov
test
mov
pop
and
xchg
jmp
aad
xor
xacquire
pop
xchg
repnz
xchg
fwait
push
daa
ds
pop
dec
je
jmp
ret
dec
lea
scas
cmp
ret
rcrb
ds
jnp
mul
inc
adcl
test
cwtl
cmp
mov
push
repz
push
dec
xchg
insl
or
stos
sub
jnp
dec
lock
test
out
movmskps
shl
ljmp
aas
or
ret
sub
mov
enter
into
add
mov
daa
stos
enter
fldl
pop
adc
mov
movb
sub
test
push
js
pushf
mov
cli
jecxz
mov
dec
jns
mov
sbb
and
push
push
mov
mov
jecxz
lret
mov
cmc
or
or
cmc
cmc
lock
add
push
adc
jns
push
ficoml
dec
adc
adc
cli
xchg
scas
scas
mov
sbb
jnp
mov
aas
xchg
es
pop
pop
mov
gs
and
xchg
daa
iret
das
inc
out
out
dec
mov
pop
inc
shrl
push
cmpsl
stc
sbb
repnz
in
in
fmuls
mov
aas
push
jmp
inc
mov
lahf
popa
adc
push
xor
aam
pop
sub
dec
arpl
cmp
lods
jb
jl
push
xor
push
or
test
mov
or
sbb
ror
inc
test
push
mov
repnz
into
xchg
int3
std
test
push
pop
mov
repnz
jl
dec
stc
mov
or
sub
dec
mov
mov
jb
or
sbb
rcl
lcall
cmp
je
cmc
ss
ss
cmpsl
pop
mulb
dec
cmpsb
mov
push
lds
stc
daa
sbb
mov
mov
pop
lock
jle
sbb
lods
mov
dec
jo
call
push
xchg
and
lock
inc
inc
popf
sub
mov
pop
xchg
and
cmpsb
testl
mov
add
pop
mov
sbb
in
lea
mov
xchg
test
test
push
clc
lret
aad
jo
pop
mov
adc
cmpsl
mov
xchg
jg
popf
inc
dec
frstor
mov
test
dec
movsb
mov
and
pop
ja
popf
pop
cmp
cmp
out
mov
mov
xchg
sbb
sbb
cld
sub
movsl
add
es
std
cmp
push
cmp
popf
mov
rolb
or
mov
outsl
cs
ret
or
movsl
xchg
mov
adc
iret
mov
sbb
loop
rcrl
out
leave
movsb
or
xor
pop
loope
pop
jb
jp
mov
push
data16
add
das
sar
lret
mov
xchg
mov
lahf
aaa
mov
adc
and
pop
les
ss
adc
push
in
mov
xchg
mov
insl
dec
jnp
movsb
inc
cmp
stc
or
lahf
dec
or
xlat
jno
mov
push
sbb
xor
std
lret
cmc
test
dec
jp
jge
movsl
dec
jmp
xchg
push
push
roll
pop
mov
scas
xchg
js
sub
mov
xchg
mov
sbb
push
add
int3
scas
lods
add
push
mov
lret
andl
outsl
lds
out
out
and
jmp
mov
cmp
es
mov
aas
push
push
shr
scas
out
push
jns
and
divb
pop
jle
or
xchg
movsb
add
in
dec
xor
bound
add
daa
mov
rol
rorb
sbb
repnz
mov
sub
xchg
test
out
mov
shll
mov
stc
cmp
jnp
test
push
pop
push
mov
pop
sub
scas
ret
push
int
mov
jp
test
or
js
andb
outsl
fwait
in
sub
sub
daa
cld
mov
mov
enter
subl
mov
xchg
push
sahf
pop
and
int
jbe
lods
insb
sbbb
inc
cs
aad
cli
sbb
pop
xor
lea
adc
jns
pop
lods
lcall
xor
cltd
jae
icebp
push
jnp
add
les
sahf
inc
cs
add
push
xorl
xchg
push
adc
lret
repz
cwtl
lret
or
aad
or
and
adc
lea
mov
xchg
push
out
fistpll
in
ds
mov
pushf
xor
mov
xchg
loop
mov
mov
daa
es
shrl
stos
in
gs
and
cmp
xchg
jle
push
adc
dec
shl
clc
les
test
pop
inc
cli
cmp
push
lea
cmpsl
imul
xchg
mov
rorl
or
clc
cmpb
xor
adc
js
xor
adc
pop
pop
stos
cmp
aad
out
ret
mov
xchg
rorb
stos
insl
add
xchg
fstl
and
imul
sbb
sahf
jne
sub
cmc
sub
je
dec
ret
lea
sub
inc
mov
inc
cmpsl
test
call
add
xchg
stc
mov
dec
xor
in
loopne
jo
mull
int3
xchg
mov
dec
daa
scas
aam
ret
adc
mov
icebp
mov
ljmp
and
lock
out
mov
xchg
inc
loop
dec
sub
in
mov
shll
insl
insb
not
addr16
stos
xchg
cwtl
fsubr
fwait
xrelease
pusha
stc
pop
dec
or
ficomps
cmp
adc
stos
mov
stos
sub
xchg
jb
les
push
push
sbb
mov
dec
push
mov
pop
pop
xchg
mov
popf
xchg
xor
mov
into
mov
scas
pop
cmpsb
imul
jle
mov
lahf
jmp
jo
popf
addr16
inc
mov
and
inc
stos
nop
scas
jae
mov
daa
test
push
push
pop
mov
cmp
jp
scas
fimuls
insl
xchg
cmp
inc
pushf
daa
inc
jb
loopne
mov
inc
aaa
adc
pop
or
mov
xor
add
mov
adc
push
mov
cmp
scas
cmpl
jmp
ficoms
mov
f2xm1
std
sub
aam
jmp
test
mov
out
sbb
push
or
ficompl
dec
push
inc
std
or
dec
rol
push
sub
inc
jle
add
pop
aas
mov
adc
or
out
cmp
bound
mov
in
sbb
sub
stos
ficoml
es
loopne
pop
aad
xor
cmc
xchg
sbb
mov
mov
sbb
xor
fisttpll
movsb
decb
push
stc
jne
and
mov
sbb
and
int
repnz
pop
aas
xchg
sub
cmp
xchg
mov
mov
mov
mov
lods
pusha
je
push
push
fwait
xchg
mov
xor
xor
aad
sub
jle
cmc
xchg
xchg
rcrl
xchg
insl
push
push
sbb
pop
push
push
das
pop
add
xchg
jb
sub
mov
adc
insl
push
sbb
negb
ffreep
pop
cmp
fisubrl
jmp
lds
mov
daa
testb
imul
inc
ds
movsl
add
add
cmp
mov
es
pusha
add
push
lds
fsubs
out
ret
lds
rclb
popa
cmp
test
adc
lret
mov
popf
js
mov
pop
jmp
ds
xor
ds
idivl
jae
or
xchg
adc
push
iret
add
add
es
push
jl
sbb
pop
rorl
add
fcmove
pusha
sub
cmp
nop
loopne
mov
mov
xchg
push
adc
jae
call
jne
test
mov
adc
lea
fmull
jg
mov
hlt
push
mov
hlt
idivl
jmp
out
push
gs
adc
xchg
int3
call
dec
pop
repnz
mov
dec
lock
imul
cmp
xor
and
push
test
push
lock
popa
out
ljmp
nop
in
and
add
popf
or
mov
call
add
mov
mov
repnz
jbe
mov
fwait
arpl
mov
mov
jg
loop
sub
dec
mov
imul
mov
pop
jge
out
lcall
adc
icebp
ret
jb
adc
xor
jns
repnz
sub
out
jnp
das
out
imul
adcb
into
add
out
outsl
fwait
test
loopne
xchg
test
out
push
popa
lock
mov
out
clc
push
pushf
out
dec
add
mov
negb
andb
sub
dec
xor
mov
aaa
cmp
aam
sti
jle
xchg
or
loopne
push
pushf
xchg
ds
add
sub
rcrb
imul
mov
out
or
inc
mov
into
leave
or
dec
or
fdivrp
loop
and
lcall
adc
cs
xlat
and
mov
mov
pop
pop
push
adc
adc
lcall
les
in
lret
fcoml
add
popf
mov
mov
sbb
and
dec
add
push
or
and
int3
lcall
test
pop
sbb
dec
push
mov
xlat
pop
jo
xor
or
out
push
js
xchg
movsb
pusha
shll
cli
jno
cwtl
das
call
rclb
add
test
mov
jl
cmp
mull
flds
cmp
jp
inc
mov
pop
rorl
add
push
or
dec
outsb
mov
rcrb
pop
pop
mov
push
sub
inc
iret
cmpl
call
jae
int3
fs
lea
ret
fstpl
int3
add
pop
sarl
and
mov
test
and
insl
cmp
and
out
and
jbe
xor
ljmp
in
or
push
jbe
test
or
cmp
mov
push
sub
dec
cmpsb
xchg
jg
hlt
push
mov
and
iret
ds
inc
mov
jne
or
sub
pop
lret
cmpsb
cmp
shl
rcrl
sub
test
fwait
jle
lods
scas
cwtl
scas
push
jne
push
sub
mov
test
pop
mov
in
jmp
xor
cwtl
fcomp
nopl
cmp
lock
mov
add
cli
cmp
packsswb
mul
dec
ficoms
pop
rolb
xor
mov
push
mov
sbb
cmp
adc
mov
inc
mov
xchg
pop
movsl
arpl
mov
fcoml
insb
push
jecxz
jns
test
out
ret
movsl
adc
push
mov
inc
into
aaa
aas
call
mov
gs
pop
pop
pop
test
xchg
xchg
xchg
gs
adc
hlt
pop
pop
inc
mov
hlt
xchg
xor
or
mov
out
xchg
dec
mov
subb
mov
mov
sbb
jp
mov
sbb
ja
pop
imul
nop
cs
faddl
out
jb
icebp
sub
inc
mov
jg
dec
fisttpll
loopne
push
cli
rorl
loope
adc
cmc
ljmp
rcll
mov
enter
repz
cmp
jb
adc
push
clc
dec
jle
out
sbb
mov
lods
int3
jp
insl
fs
hlt
fcmovnbe
sbb
jnp
scas
and
add
sbb
pushl
mov
pusha
mov
inc
popa
mov
lods
push
test
inc
and
inc
pusha
inc
mov
cmpsl
aam
mov
push
mov
clc
xor
pop
sbb
adc
daa
stos
leave
arpl
adcb
mov
mov
punpckhdq
popa
xchg
loop
adc
outsl
adc
das
adc
jnp
mov
lcall
sub
lock
dec
lcall
cmp
push
lret
add
jo
push
adc
mov
call
std
jge
xchg
lods
mov
arpl
sub
sub
add
sbb
or
fisubl
cltd
add
mov
sbb
js
mov
push
fistpll
sub
dec
cmp
mov
inc
test
cld
push
test
lcall
lock
out
mov
dec
into
sar
in
mov
dec
mull
in
mov
test
jge
loopne
add
arpl
shrl
mov
lahf
faddp
sub
flds
jns
pop
leave
repnz
repz
add
out
add
imul
mov
aam
jmp
test
adc
mov
mov
lret
pop
daa
lar
and
sbb
std
ss
shll
push
mov
scas
mov
add
daa
pop
popf
add
adc
adc
ret
aaa
ljmp
cmp
loope
push
out
push
ret
dec
adc
xchg
xchg
mov
lock
dec
xor
xchg
mov
mov
test
test
cmp
xor
jge
jge
clc
pusha
mov
inc
enter
mov
add
push
jl
arpl
mov
inc
pop
cmp
mov
xchg
mov
sbb
mov
adc
or
popf
icebp
sbb
cltd
jg
int
dec
mov
push
int3
lea
pop
xor
adc
loopne
cmpsb
popa
std
pop
fdivs
push
int3
xor
scas
xorb
fsubrl
data16
out
ja
das
dec
xchg
push
sbb
loopne
adc
fcomps
jno
cli
cli
repz
lock
inc
enter
rorl
cmc
pop
cmp
aad
in
pop
imul
rcll
fwait
push
inc
loopne
outsl
bound
or
lret
mov
fisubl
out
popf
mov
fistps
sub
mov
sti
lods
cmp
cltd
enter
inc
aad
mov
in
xchg
cmp
or
pop
mov
push
ja
ljmp
scas
pop
lret
pop
sub
enter
jmp
mov
sbb
and
dec
lea
data16
in
pop
or
adc
jbe
and
ret
inc
flds
fsubrl
add
and
push
js
jbe
lret
dec
cmp
push
pop
sarb
das
outsl
mov
imul
pop
andb
and
imul
add
dec
outsb
sbb
cmp
std
jnp
shrb
cmpsl
sub
mov
out
cmpb
enter
jecxz
mov
lahf
fisttpll
sbb
nop
dec
and
fwait
das
mov
loopne
mov
xchg
adc
mov
mov
inc
iret
push
in
jbe
cmpsb
arpl
push
gs
push
sahf
adc
mov
testl
cmp
jge
jl
dec
mov
mov
cmp
push
outsl
or
outsl
adc
cmpl
shrb
or
pop
sub
xchg
add
cmpsb
sahf
push
pushf
sbb
mov
jl
stos
mov
sub
imul
cmp
add
inc
cmp
or
popf
outsb
lahf
iret
in
ja
cmp
or
and
pop
xlat
push
jbe
sahf
and
dec
xchg
aas
mov
mov
jno
add
mov
shr
in
cmp
subb
jns
xlat
mov
push
push
fimull
scas
test
inc
cmc
xor
xor
push
cmpsb
hlt
js
sub
pop
jmp
clc
filds
push
lock
xor
loopne
add
insl
mov
mov
in
pop
cmc
stc
and
imul
cmp
in
iret
xor
fwait
xchg
mov
jmp
adc
or
inc
std
je
les
pop
xor
xor
mov
xor
jns
mov
sbb
xor
dec
mov
popa
dec
jmp
or
mov
push
nop
shll
pop
ds
in
pop
popf
dec
mov
cmp
test
dec
nop
inc
daa
cld
dec
roll
call
xchg
add
jne
in
dec
cmp
push
out
mov
arpl
mov
adc
in
leave
ljmp
repz
jmp
je
ss
lods
cmp
stc
push
rorb
ret
fmul
je
mov
jnp
or
dec
arpl
enter
jo
inc
lea
idivl
inc
jo
add
cmp
fst
lds
mov
mov
cmp
jb
scas
mov
sub
mov
sbb
int3
sub
adc
out
lea
adc
push
cmpb
dec
pop
cmpsl
push
movb
insb
aaa
lcall
sbb
movsb
sbb
adc
and
lds
and
inc
out
mov
jle
cmp
mov
leave
push
andl
xor
cmpsb
call
bts
sti
push
sbb
dec
inc
xor
in
jnp
js
insl
pop
fnstsw
mov
in
xor
aam
cmc
xlat
mov
clc
jge,pn
jg
mov
fwait
ss
arpl
lods
lret
jg
dec
pusha
icebp
outsl
mov
xor
push
movsl
mov
mov
push
pushl
das
jle
sti
inc
leave
adc
cmp
lcall
push
push
jbe
cmpsl
mov
xchg
xor
pusha
pop
rcrb
popa
mov
xchg
add
jae
imul
loope
xchg
pop
mov
pop
out
mov
or
je
pusha
fsubrp
jne
sbb
inc
int3
or
or
adc
fs
dec
jnp
pop
lock
movsb
repnz
push
fadd
pop
push
jbe
lret
fadds
xchg
dec
sahf
xor
aam
or
push
inc
push
cld
push
cmpsb
fmull
scas
and
mov
andl
test
sti
sub
add
pop
inc
shlb
push
mov
mov
mov
xchg
sbb
or
sub
cmp
cli
jno
stc
les
dec
adc
fmull
sub
rolb
push
push
or
or
jge
push
pop
adc
test
pop
sub
nop
xchg
insb
fdivs
dec
add
mov
xchg
js,pt
arpl
nop
mov
out
mov
push
popf
lock
in
and
push
orl
pop
dec
or
mov
xlat
out
movsb
mov
mov
stos
test
stos
jg
or
cwtl
add
loop
std
into
lods
mov
das
orb
pop
leave
negl
adcl
scas
orl
xchg
jecxz
pop
mov
push
call
inc
mov
out
out
jae
ds
jns
adc
in
cmp
mov
out
add
mov
mov
aam
int
jae
mov
in
mov
mov
mov
cs
or
mov
dec
in
lea
lcall
mov
lret
test
lods
xlat
inc
cmp
and
imul
cmpsl
and
add
xor
mov
stos
stos
mov
add
orl
lcall
imul
fld
insl
mov
es
insl
sub
cli
mov
int3
pusha
or
dec
pop
mov
dec
addl
sbb
mov
imul
sbb
dec
sbb
negb
or
hlt
lock
cmp
lods
jg
mov
cmp
out
inc
ret
mov
sahf
and
mov
repnz
popa
bnd
or
mov
jno
adc
dec
push
ljmp
mov
sub
push
jnp
push
std
mov
imul
xchg
and
inc
sti
les
cmp
jg
xor
enter
cmp
js
jne
les
hlt
mov
int
out
push
enter
mov
xchg
mov
or
and
call
jge
pop
pusha
test
mov
mov
gs
sub
pop
mulb
fs
out
mov
ds
repnz
hlt
inc
xor
xchg
mov
pop
enter
mov
add
jns
mov
push
mov
inc
adc
xchg
dec
dec
insl
mov
or
lcall
xchg
stc
test
fdivs
pop
mov
mov
clc
out
sbb
fwait
in
adcl
aas
test
mov
inc
insb
xchg
fnstenv
push
out
loopne
bound
mov
test
int
cs
pushl
sbb
sub
fwait
dec
cmpsl
push
sub
adc
mov
pop
hlt
addr16
pop
jae
pop
movl
mov
mov
cmp
scas
pop
ss
jae
popf
jae
rcrb
push
jnp
mov
testb
stos
jbe
sub
sub
jbe
decb
pop
adc
inc
das
jge
adc
jbe,pt
call
pop
inc
lcall
ljmp
add
iret
imul
or
pop
mov
andb
pop
inc
sbb
push
cs
fnstsw
pop
jp
sub
notl
inc
mov
xorb
out
outsb
mov
sub
outsl
xor
mov
int
icebp
dec
xchg
mov
enter
aaa
aad
int
pusha
rolb
lea
cmp
ror
pop
jecxz
sbb
pop
inc
pop
in
mov
cmp
ficompl
xchg
cmp
dec
xor
data16
std
adc
push
les
jmp
jbe
ret
lret
adc
or
inc
jmp
cs
push
ds
outsl
repz
jns
push
xchg
sub
mov
pusha
dec
js
pop
pop
bound
mov
insb
xor
in
popf
inc
jg
addr16
push
xor
xchg
jae
dec
mov
pop
dec
or
and
adc
jp
aas
into
fsubs
pushf
jne
push
je
out
int3
jns
gs
push
imul
test
mov
es
lcall
xor
in
push
cmp
sub
mov
pop
aaa
subb
jb
and
aad
pop
pop
sarl
and
inc
jo
push
popa
out
pop
lea
add
push
lahf
xor
sub
and
or
push
scas
popf
dec
mov
mov
mov
mov
jge
incb
test
mov
inc
cmpsl
sbb
shll
mov
pop
lahf
test
shll
xchg
push
stc
mov
add
ja
adc
lret
aaa
nop
pusha
push
gs
sub
xor
ret
out
sahf
scas
cmp
dec
rorb
mov
aaa
out
sub
mov
or
leave
mov
push
sar
adc
and
or
fnstenv
idivl
and
dec
dec
xor
loop
fidivrs
adc
imul
jp
jmp
movsl
xchg
sbb
out
cmp
push
in
or
roll
gs
dec
mov
in
imulb
cmc
fwait
repnz
mov
lods
iret
hlt
inc
fcmovbe
dec
std
push
jne
mov
loopne
scas
divb
jle
or
add
shrb
sbb
jns
lret
jb
cmp
mov
sti
pop
rol
ret
lahf
mov
or
xchg
test
pop
sub
lahf
and
mov
insb
xor
test
mov
movsl
push
stos
je
out
cmp
sti
setb
arpl
fidivrs
sbb
adc
ds
dec
out
mov
adc
arpl
lret
clc
sub
sub
dec
call
pop
stc
jp
fcmovb
lock
and
cmp
mov
push
jmp
loopne
testb
dec
xchg
js
sub
int3
imul
in
adc
pop
js
add
push
mov
dec
movsb
outsl
inc
dec
in
sbb
push
fcoml
jl
lock
out
aad
pop
aas
jo
ljmp
orl
or
push
test
int
addl
nop
add
lcall
sbb
xor
pop
xchg
enter
or
mov
push
lock
cwtl
mov
scas
pop
dec
popa
rcll
sti
call
out
and
sbb
sbb
xor
xchg
mov
xorb
or
inc
scas
data16
and
mov
loopne
bnd
xchg
mov
ljmp
movsb
fmulp
dec
jmp
loopne
xor
xchg
jmp
mov
cld
mov
gs
sbb
sbb
mov
cld
test
mov
pop
andb
jl
lret
cld
mov
mov
in
movsb
mov
cmp
sahf
ja
leave
dec
dec
negl
jmp
popa
lahf
ds
icebp
jecxz
push
out
mov
adc
into
lret
ficompl
mov
dec
lods
add
and
mov
cltd
mov
testb
outsl
xchg
or
pop
xchg
es
addr16
sub
xchg
sbb
and
xchg
pop
lea
les
aad
rolb
sbb
adcb
andb
incb
subps
jmp
rorl
loope
data16
xor
adc
jns
std
out
and
rcrl
std
dec
aam
mov
fwait
aas
mov
cmpsl
pop
adc
mov
mov
mov
dec
repnz
lahf
mov
cld
jb
lret
mov
dec
add
push
mov
mov
adc
lcall
out
mov
mov
fstl
pop
idivb
and
ss
xchg
jno
insb
push
adc
or
pop
lret
test
jecxz
sbb
jmp
js
add
sahf
inc
cmp
mov
mov
xchg
scas
push
ljmp
xor
mov
lahf
aaa
add
mov
cwtl
inc
or
addr16
inc
and
jle
sbb
xchg
pusha
push
jbe
mov
xchg
pop
fcoms
fstpt
mov
xor
inc
pop
mov
fadds
insb
mov
lods
xchg
pop
sbb
cmpsb
mov
dec
cmp
stc
mov
adc
test
push
xchg
sti
mov
xchg
ja
mov
sahf
popf
call
xchg
cmp
scas
int
pop
push
lret
xchg
call
xchg
data16
cmp
imul
mov
mov
out
inc
or
jle
or
mov
xchg
push
data16
inc
adc
loopne
cltd
mov
xchg
inc
push
dec
in
dec
jns
cmp
aam
cmc
mov
sub
and
lds
and
adc
pop
sahf
pop
mov
sub
lcall
adc
jbe
lock
jne
adc
cmp
insb
or
ss
jno
inc
fisttpl
mov
insb
sub
add
rorb
mov
repnz
jne
jnp
rcrl
xchg
out
pop
jbe
call
mov
les
dec
jbe
insl
insl
and
sti
repz
ret
iret
ja
scas
push
jecxz
add
outsb
lds
cwtl
into
mov
and
pop
mov
mov
lock
mov
loop
nop
loopne
jo
subb
xchg
loopne
lock
fldt
mov
sub
mov
mov
in
cmc
sbb
mov
mov
xor
xor
push
mov
and
test
mov
or
mov
xor
cmpb
dec
lret
mov
sub
aad
and
add
or
mov
mov
data16
fcompl
aad
cmp
xor
push
fs
int
sbb
push
inc
push
mov
jae
mov
jbe
and
pop
and
ret
mov
or
fcom
gs
scas
rol
test
fwait
xor
pop
mov
push
or
mov
in
mov
mov
adc
sbb
lock
sub
push
add
xor
sub
pop
mov
or
sbbl
loop
aad
das
adc
push
dec
adcb
mov
imul
out
les
imul
enter
lret
outsb
stos
ret
cmp
mov
cwtl
sub
es
jbe
lret
rcrl
xchg
xor
pushf
hlt
cmp
test
pop
jmp
imul
aad
test
les
adc
fwait
int
pushf
pop
xor
pop
dec
or
test
add
and
push
in
call
enter
xchg
mulb
out
stos
xchg
cmc
xor
cmp
sub
jns
xchg
mov
push
add
into
dec
sbb
mov
lret
movb
int
mov
cmp
xor
adc
stos
inc
xchg
inc
sbb
inc
sbb
ror
stos
sub
stos
push
add
es
pop
cmp
lcall
sub
jbe
enter
movsl
mov
jge
lcall
pop
addr16
dec
add
into
dec
or
xchg
int3
arpl
add
jb
fdivp
in
push
in
mov
arpl
add
js
mov
insl
xor
aam
rcrl
pop
jbe
adc
int
lods
hlt
sbb
adc
jb
jmp
mov
neg
pop
ja
push
lds
sbb
and
popf
aam
xchg
mov
pop
ja
push
lcall
sti
add
cmp
inc
fnsave
and
loope
aam
xor
pop
lsl
out
mov
in
pxor
js
push
rclb
lods
rcr
xor
loope
idivl
scas
leave
lods
mov
pop
enter
pushl
je
jno
scas
mov
jmp
cmp
addr16
cld
scas
cmp
popa
xchg
pop
lds
pop
les
fstps
icebp
sbb
popf
adc
xor
inc
and
int
jg
push
ret
cmp
or
or
push
or
sub
pop
pusha
adc
add
rol
inc
push
mov
pop
in
fisttpll
xor
sbb
shrb
jbe
or
sub
dec
sbb
sub
mov
pop
mov
xor
jle
mov
std
leave
inc
or
into
aam
stos
push
pop
adc
out
inc
push
iret
pop
jl
icebp
xchg
enter
sbb
xor
in
inc
mov
je
jecxz
icebp
insl
ds
jno
int
pop
mov
sahf
stc
ffreep
xchg
push
int3
fwait
insl
xlat
ds
ja
mov
cld
mov
add
mov
std
ja
xlat
dec
adc
sbb
pop
xchg
mov
sahf
jmp
dec
out
movsl
xchg
cmpb
aam
shll
fcoms
cmp
mov
ficoml
pop
mulb
add
inc
cmc
rcl
shlb
push
pop
repnz
cs
inc
mov
xlat
inc
dec
mov
xor
add
or
icebp
cmp
loopne
jg
sar
rcll
fwait
pop
cmp
xchg
cwtl
test
out
mov
in
sub
lret
push
mov
dec
std
and
and
aaa
cli
test
xlat
push
mov
call
dec
mov
xchg
sub
xor
cmc
popf
flds
jne
dec
rol
das
ret
bound
test
inc
clc
jnp
mov
jg
loop
mov
subb
mov
jb
loopne
in
mov
jae
testw
jns
out
lods
addr16
fidivrl
jecxz
add
pop
cmpsl
cmp
push
push
out
jmp
pop
enter
cwtl
outsl
or
adc
das
lods
ljmp
cmpsb
pop
jne
push
add
mov
pop
popa
cmp
add
jae
jno
mov
xchg
mov
adc
stos
stos
mov
add
adc
nop
mov
lret
adc
ja
mov
inc
movsl
leave
mov
lds
jmp
imulb
pop
push
sub
jmp
jnp
je
lret
mov
dec
enter
jl
add
andb
daa
dec
and
xor
dec
icebp
cmc
mov
or
arpl
mov
cmc
push
adc
jne
jno
dec
fs
stos
add
fwait
pop
adc
cwtl
test
or
jnp
dec
mov
xor
divl
decl
pop
stc
mov
idivb
into
push
mov
fdivrp
incl
int3
mov
pop
mov
rclb
inc
xchg
ds
scas
aam
mov
push
mov
jmp
lea
pop
out
fldt
mov
outsl
pop
xchg
adc
dec
add
iret
push
loopne
and
daa
daa
cmpl
and
fstl
rorl
cmp
cmp
out
loop
mov
or
scas
insl
pop
dec
ss
sbb
out
cmpsl
fs
js
jecxz
outsb
insb
adc
scas
jne
shll
mov
mov
enter
pop
hlt
and
test
adc
rcl
jb
sarb
dec
pushf
sbb
mov
pop
or
add
mov
lcall
sub
cmc
cmp
lret
pop
push
mov
sub
jl
push
adc
or
dec
and
and
sub
push
xorb
mov
lret
sbb
clc
jle
add
xchg
inc
test
cmp
and
jmp
push
ja
xchg
dec
push
jp
out
mov
mov
mov
cmc
test
icebp
mov
cmp
push
xor
xchg
xorl
cmpsl
and
dec
shlb
std
xchg
dec
inc
sub
push
xchg
in
cmovge
mov
sbb
addb
fwait
ret
into
lods
jge
xor
add
push
adc
jns
pop
mov
xor
insb
mov
cmp
ds
xchg
mov
jg
or
inc
push
sub
sbb
mov
addr16
aas
mov
xchg
rcrl
xor
and
or
cmpsb
fdivrl
aam
clc
xchg
lcall
jno
inc
or
adc
popa
cmp
jb
lods
popa
sar
mov
pop
xchg
or
mov
xchg
fwait
push
and
jae
or
adcl
aad
pop
adc
movb
push
xchg
popa
stos
jmp
into
in
fs
add
mov
repz
les
and
ret
addb
xchg
jno
mov
ss
or
outsl
xor
out
jge
inc
or
incb
roll
mov
sub
imulb
int
mov
pop
push
cmp
popf
pop
or
clc
ljmp
cmpsb
repz
sbb
xchg
pop
fldt
loopne
jl
sbb
int
add
jle
leave
pop
jg
lock
icebp
call
ss
inc
das
test
sbb
cli
ret
xchg
pop
cltd
cmp
out
push
fiaddl
pcmpgtw
mov
mov
outsl
sub
mov
dec
pop
xlat
dec
imul
xor
in
clc
inc
sbb
inc
sahf
lret
mov
inc
sub
lcall
mov
inc
movsl
add
adc
push
push
dec
cmp
jae
push
int
adc
pop
cltd
fadd
sbbb
xlat
xor
mov
xor
mov
sbbb
dec
push
bound
jmp
test
outsl
sub
mov
clc
fidivs
mov
pop
in
sub
fwait
cwtl
or
xchg
enter
movl
loopne
xchg
pop
mov
push
out
cli
push
ja
pop
sbb
xchg
jp
arpl
in
mov
movsb
push
loopne
and
int3
jne
pusha
add
sub
mov
add
xchg
scas
insl
adc
stos
and
outsb
add
stos
das
inc
lahf
jle
inc
mov
insl
data16
stos
aaa
pusha
jo
xchg
jne
lds
pop
test
add
outsb
mov
mov
fstp
xor
adc
jo
insb
stos
cmp
enter
push
inc
rorl
lahf
mov
cli
stos
and
mov
out
dec
loop
mov
es
fsubr
pop
inc
and
movb
sub
sbb
test
sti
test
dec
jle
jecxz
mov
mov
faddp
cmp
rcrb
shr
cmp
jp
daa
icebp
hlt
dec
in
xor
jecxz
pop
mov
mov
scas
mov
lock
mov
inc
cmp
andb
ror
inc
inc
jecxz
insl
inc
inc
jg
cs
jae
xchg
push
lahf
pop
andl
fadds
lcall
mov
jb
dec
cmp
add
mov
gs
mov
mov
int
loope
loop
cmpsl
scas
call
bound
test
lods
mov
repz
cld
pop
xchg
mov
push
cmp
or
mov
sbb
fsqrt
cmp
or
fs
decl
xchg
sti
push
mov
xor
cmc
aas
pop
xchg
loop
push
fistpl
xor
dec
pop
dec
ljmp
pop
aad
nop
sbb
enter
out
jle
dec
adc
je
je
and
mov
ss
jecxz
lods
out
rclb
xchg
jbe
xchg
lahf
repz
test
fwait
outsl
pushf
and
jmp
movsb
mov
mov
mov
and
sbb
test
test
push
mov
cwtl
push
outsl
ret
push
push
dec
popf
paddq
xlat
lods
bound
pusha
jns
push
inc
or
addr16
adc
pop
adc
gs
mov
push
test
stos
int
inc
or
outsb
or
jae
arpl
jmp
mov
test
adc
das
or
push
pop
stos
insl
pop
inc
inc
adc
pop
daa
adc
dec
imul
in
or
xlat
push
mov
icebp
test
xor
pop
outsb
lds
dec
sahf
mov
mov
xlat
lahf
inc
lea
aad
fucompp
lea
push
mov
leave
hlt
int
or
call
fwait
inc
pop
dec
nop
sub
addl
loopne
jmp
bound
repnz
xchg
push
cwtl
push
loop
lahf
in
pusha
mov
adc
sub
loopne
ss
hlt
mov
add
push
jns
mov
and
test
stos
sub
cmp
test
scas
mov
push
loope
add
repnz
stc
shlb
inc
push
dec
dec
mov
jbe
ret
and
adc
icebp
fcoms
jne
mov
dec
loope
pop
pushl
out
sbb
das
jg
inc
movsb
mov
out
iret
mov
jp
aad
mov
lahf
cmp
xchg
xchg
imul
push
mulb
stc
jb
xlat
adc
pop
mov
xor
lea
lcall
aaa
xor
add
push
test
inc
adc
lret
cmpsb
arpl
mov
mov
imul
test
jp
mov
inc
out
pop
out
pop
neg
test
mulb
call
insb
lret
pop
xchg
mov
addr16
cmp
out
sbb
enter
mov
inc
add
cld
lock
mov
std
pop
cmpsl
call
jmp
dec
call
and
int
mov
test
ret
push
rorb
inc
js
add
int
xor
mov
mov
sub
cmp
mov
push
inc
outsl
lahf
push
movb
cwtl
jno
aam
mov
popa
inc
fcoms
mov
arpl
paddw
pop
stos
lret
lret
fiaddl
xchg
test
jmp
dec
movb
test
and
mov
test
mov
clc
sahf
and
fs
push
ljmp
imul
adc
jmp
mov
je
pop
mov
mov
test
in
sub
push
fcoms
cltd
inc
push
fs
sbb
arpl
call
stos
ja
pop
push
push
xlat
sub
inc
xor
stos
cmc
pop
mov
cmpsl
leave
dec
call
dec
cs
adc
repz
pop
out
mov
test
inc
jno
jb
mov
imull
out
dec
aam
inc
mov
dec
insl
pop
in
push
mov
jmp
in
jb
icebp
enter
cmpb
xchg
inc
divl
mov
mov
pop
mov
addr16
cmp
xchg
mov
jo
leave
lcall
mov
push
push
xchg
loope
mov
lock
in
inc
iret
stos
mov
add
cli
cmp
pop
sub
repz
mov
cmc
aam
ds
cmp
mov
mov
mov
or
scas
jnp
add
push
sti
ljmp
mov
dec
and
lds
arpl
ljmp
jns
out
call
cli
or
pop
lods
mov
and
lret
in
in
outsb
cld
or
or
outsb
stos
jb
cmp
lds
dec
popf
dec
xor
lock
cmp
js
call
push
add
fsubrl
push
sub
inc
lret
fisttpll
inc
adc
dec
mov
adc
mov
add
imul
push
jmp
rolb
gs
fnstsw
ljmp
out
clc
sub
aad
into
push
ficoml
icebp
pop
mov
sub
cmp
adc
pop
cmc
push
icebp
sbb
dec
out
test
and
mov
mov
mov
cmp
mov
pop
ja
inc
xchg
pop
add
inc
adc
push
les
lods
xor
push
daa
inc
dec
sub
fistpll
repz
imul
jne
repz
pusha
mull
mov
fs
popf
sub
lods
sub
inc
negb
mov
xchg
dec
out
or
sub
dec
popa
jecxz
sbb
sbb
cmc
or
je
fs
lock
cmc
or
test
dec
inc
out
in
adc
nop
xchg
xchg
adc
fisttpl
test
mov
xchg
and
popf
cmc
xchg
inc
jo,pt
pop
in
sub
dec
push
sub
mov
and
and
enter
fcompl
aad
mov
cwtl
inc
dec
mov
add
mov
mov
xor
adc
xlat
inc
adcl
and
hlt
bound
out
out
insb
mov
icebp
lahf
fistpl
shrb
xchg
sti
dec
jg
fadd
insl
dec
insl
mov
popf
pop
mov
iret
add
sbb
data16
push
adc
mov
cmpsl
mov
push
mov
fbld
fildl
and
daa
insb
loop
mov
movsb
inc
icebp
push
and
jo
hlt
or
outsb
shll
cmp
or
repz
ljmp
add
sbb
mov
orb
cmp
jl
adc
xor
dec
adc
mov
sarb
test
xchg
mov
bts
cmp
jns
jg
mov
mov
scas
ret
fwait
jge
add
mov
lock
fiadds
sbb
aam
cmp
pushf
stos
mov
pop
mov
xorl
cld
and
jae
jmp
test
aaa
cmp
dec
mov
stc
loop
mov
outsb
popa
loopne
test
rorl
add
and
shl
pop
aam
push
in
lods
add
jns
not
leave
cmp
add
jmp
adc
shrb
and
or
movsb
cld
adc
adc
loope
and
adc
es
jnp
daa
cwtl
mov
and
sahf
mov
insb
push
sbb
divl
lock
push
test
pushf
or
mov
cmp
mov
nop
sub
and
leave
dec
xchg
stc
xchg
je
ret
stos
add
std
xchg
jg
ja
pop
add
pop
adc
adc
movsb
adc
xorb
or
test
cld
mov
or
dec
xor
cmp
and
or
mov
test
xchg
ljmp
cld
mov
jecxz
cmp
mov
push
mov
loopne
push
mov
add
sbb
cmp
test
sbb
or
push
mov
lods
dec
pop
sbb
push
xchg
jge
ljmp
nop
sbb
aam
pop
ret
xor
pop
inc
xor
popf
hlt
pushf
mov
rcrl
cltd
arpl
xchg
aaa
stos
out
cld
adc
mov
xchg
jns
ljmp
add
lds
addr16
or
lcall
dec
addr16
add
inc
cli
dec
sub
imul
fld
rcll
pop
out
cmp
addps
push
adcb
mov
out
ret
icebp
pop
imul
push
mov
out
sub
pop
cmpsb
mov
out
or
adc
jp
dec
push
add
pop
mov
inc
daa
jns
xchg
lods
fcom
popa
cmp
push
stc
jg
jb
dec
xor
lock
or
xchg
add
imul
add
xchg
aas
out
addl
inc
lcall
jmp
and
fs
inc
lret
lods
bsf
pop
and
cmp
sbb
scas
mov
fucomip
mov
hlt
xchg
test
and
jle
insb
addr16
std
ds
fistpll
or
sbb
mov
in
ficomps
inc
inc
dec
mov
aaa
and
adc
sub
push
inc
mov
pusha
mov
cld
fbld
fldenv
push
or
mov
jmp
pop
adc
dec
sub
lret
adc
pop
lock
mov
add
adc
xchg
in
xor
inc
xor
lods
fwait
pop
pop
jg
jmp
int3
mov
mov
cwtl
pop
pop
leave
push
popf
push
in
lcall
fstpl
movsl
sub
sub
pop
pop
pop
mov
xorl
mov
mov
adc
jne
fcmovnb
push
pop
fstl
shll
lods
out
push
dec
outsl
fbstp
orb
jmp
inc
fnstenv
add
lods
cltd
js
mov
out
movsb
adc
adc
out
mov
push
sarb
push
pop
iret
out
dec
addr16
add
xchg
sub
pop
les
or
inc
lock
and
je
imul
mov
sbb
add
data16
xchg
andb
mov
shlb
xor
mov
pop
mov
xchg
fld1
pushl
mov
pop
jo
xor
rolb
mov
imul
fistpl
mov
and
fidivrs
int3
add
jns
imul
add
jb
sahf
jl
push
push
mov
mov
stos
jbe
adc
pop
fdivl
subl
sarb
cmc
jmp
out
xor
and
adc
andb
addb
inc
push
push
jae
and
mov
cmpsl
sub
mov
in
aaa
sbb
add
sub
mov
mov
and
and
aaa
mov
mov
imul
mov
movsl
lds
push
jp
jae
daa
jo
add
dec
dec
push
fildll
mov
and
xor
ljmp
add
loopne
imul
cli
push
rorl
mov
mov
and
pop
nop
add
inc
push
cltd
or
push
cmp
test
dec
lods
sarb
cmp
mov
inc
pop
dec
and
xor
inc
inc
lcall
out
pop
xchg
cld
inc
add
test
imul
dec
or
xchg
sbb
and
xchg
cmpsl
xchg
sub
lds
fiadds
mov
ret
out
adc
pusha
mov
adcl
fsubl
mov
xor
push
subl
data16
fstpl
test
push
gs
nop
mov
imull
pop
mov
xor
aad
je
repz
repz
add
xacquire
imul
pop
nop
clc
or
jmp
cmp
pushf
mov
subb
or
cmp
insl
and
inc
enter
mov
add
dec
pop
dec
adc
inc
mov
xchg
rorb
fdivrl
mov
popf
iret
pop
sub
shll
js
mov
xor
mov
imul
cli
push
push
lea
pop
insl
xchg
inc
adc
ret
push
add
ds
test
push
mov
repz
insl
mov
mov
cs
jmp
push
les
data16
mov
mov
adc
mov
inc
bnd
std
dec
push
xchg
in
and
sbb
mov
push
movsb
fs
sarl
add
jmp
je
popf
in
sbb
aas
xchg
mov
andb
lea
in
or
xchg
xchg
in
mov
pop
mov
jmp
test
fdivrs
mov
mov
test
jo
lret
cmpsb
or
adc
lret
repnz
insb
cltd
les
mov
and
sbb
push
pop
int
sahf
dec
and
ljmp
shlb
mov
adc
vminpd
adc
imul
xchg
push
out
aas
pop
dec
pop
js
push
sahf
mov
adc
ljmp
pop
sarl
ss
or
cmp
and
sbb
inc
arpl
sbb
icebp
cmp
imul
mov
sub
clc
test
loope
rcrb
lahf
aad
cs
push
mov
push
lock
push
nop
push
add
cmp
je
lock
jmp
test
sub
xor
lods
or
neg
xorl
stos
in
mov
sbb
inc
movl
and
cltd
ret
jnp
adc
popf
or
lods
sub
sub
dec
cmp
les
test
jl
in
iret
mov
test
or
lcall
xlat
mov
sti
jne
mov
xchg
push
jb
push
iret
add
jb
fnsave
enter
add
and
mov
lcall
add
pop
pop
mov
imul
std
inc
push
pop
xchg
dec
mov
sub
pop
insl
lcall
jae
pop
push
or
mov
and
adc
pop
sbb
addr16
xlat
in
and
sbb
or
or
cltd
inc
arpl
mov
push
jne
push
loop
and
mov
mov
xor
test
test
cwtl
dec
cmc
pop
mov
sbb
hlt
popl
mov
mov
push
fmull
ret
lods
adc
lods
test
push
pop
jnp
ret
loopne
movsl
add
in
cmpsb
push
iret
add
pop
xchg
jge
xchg
cmp
jl
mov
cld
and
daa
cmpsl
xchg
shl
and
mov
and
fidivl
ret
push
ss
lods
cs
imul
int
mov
xchg
data16
and
jb
jns
xor
mov
adc
enter
cltd
mov
mov
and
pop
fwait
lret
nop
lcall
pop
sbb
negb
nop
jne
xchg
mov
mov
push
mov
mov
mov
rorl
inc
jl
xor
arpl
sub
sbbl
outsb
cmp
test
pop
mov
sub
mov
loope
data16
cld
and
mov
push
ljmp
push
into
pop
insl
cmp
pop
cmp
aas
leave
mov
cmp
ret
jp
add
out
jg
imul
add
sbb
cltd
icebp
arpl
fcompl
shlb
mov
es
mov
shl
mov
aas
cli
lcall
pusha
pop
in
jecxz
sbb
pop
xchg
outsb
repnz
pusha
mov
cmc
leave
dec
sbb
lods
mov
and
or
adc
dec
pusha
sub
pop
aaa
je
jbe
in
ret
xchg
mov
or
xor
or
stc
xchg
stc
xchg
fs
sbb
jno
add
mov
dec
shr
push
scas
mov
lods
dec
insl
jp
out
fcomps
stc
popa
sbb
mov
dec
fistl
test
mov
dec
fsub
mov
jb
addl
push
pop
push
xchg
mov
call
fdivrs
in
mov
icebp
jecxz
jb
mov
loope
arpl
sbbb
call
in
jbe
ljmp
cmp
daa
cmpsl
sub
push
mov
ds
adc
sub
xor
or
xor
dec
ja
filds
jecxz,pt
push
das
mov
aam
sqrtps
inc
sub
pop
lea
mov
push
mov
mov
mov
test
sbb
mov
jge
setp
pushf
aaa
add
jo
push
xchg
das
scas
mov
jge
pusha
movl
pop
jecxz
jge
pop
sub
outsb
in
add
call
mov
add
push
iret
xchg
sub
or
xchg
out
adc
mov
xor
xchg
jg
jecxz
adc
retw
pop
add
cmpsb
icebp
cmp
outsb
mov
minps
iret
enter
jo
sub
es
int3
or
mulb
jbe
mov
or
jecxz
inc
rcrb
lcall
lock
jbe
mov
pop
xchg
mov
fsubs
popa
pop
sub
push
lods
fcoms
inc
dec
or
push
dec
pop
mov
fs
aas
pop
pop
aad
scas
mov
enter
insl
sub
mov
add
fbstp
xchg
orl
bound
test
lock
rolb
mov
sub
lds
pop
sub
imul
jb
sahf
or
jo
and
loope
sarb
push
jecxz
in
ljmp
push
push
xchg
mov
mov
sub
push
loop
frstor
lock
int3
stos
addl
and
adc
loopne
inc
test
push
ret
mov
lods
and
roll
mov
push
das
cmp
scas
push
push
mov
pusha
adc
aaa
clc
xor
sbb
sbb
xlat
or
mov
sbb
lods
scas
jg
inc
out
iret
sub
outsb
decl
sbbl
fs
pop
sub
sahf
jl
jns
adc
das
lds
lret
dec
or
xchg
mov
jbe
sub
push
fbstp
sbb
stos
mov
cmp
jge
cmpsb
cld
or
push
xchg
sahf
repnz
scas
push
js
scas
aas
jecxz
mov
pusha
jnp
xlat
mov
out
outsl
push
xchg
dec
popa
dec
mov
fisttpll
push
or
adc
jmp
imul
leave
pop
adc
movsb
movsl
scas
cmp
inc
fadds
fstps
mov
jge
sub
idiv
imul
pushl
mov
jnp
pop
test
andl
add
jb
fidivl
out
and
icebp
pop
inc
nop
leave
aas
insl
mov
outsl
xchg
xlat
or
ljmp
arpl
ljmp
stos
inc
mov
xor
xchg
xchg
idivb
dec
dec
add
jne
push
cmpsb
sub
mov
adcl
pop
mov
mov
int3
js
cmpsl
in
mov
sub
cld
outsl
icebp
sbb
jb
fnsave
push
add
adc
add
out
inc
add
in
jecxz
jle
mov
pop
push
cwtl
bound
ret
int
das
cs
xchg
jns
inc
test
or
and
dec
mov
mov
filds
fists
mov
or
ret
pop
pop
rorl
add
push
and
out
push
aam
add
cmp
mov
daa
not
movhps
xor
add
fadd
xchg
xor
iret
push
pop
adc
out
push
and
adc
bound
call
inc
sub
pop
mov
pop
aad
xchg
lock
mov
pop
sub
lock
inc
imul
mul
cmp
movsl
addr16
xchg
loope
loope
push
dec
push
mov
clc
push
sbb
mov
testl
xlat
bound
cmc
cmp
push
push
jb
call
outsl
sub
push
sub
push
adc
push
xchg
jnp
and
test
filds
fistpl
iret
sub
cmp
lcall
sbb
cmp
comiss
faddl
xor
or
push
arpl
stc
xor
cmpl
pop
pop
mov
jp
aaa
xchg
xchg
in
fdivl
arpl
test
je
es
push
inc
bound
sbb
jecxz
xor
jl
cmp
pop
sti
mov
repnz
mov
in
in
insb
in
data16
sahf
add
and
push
imul
bound
cmp
lahf
and
mov
mov
sub
sbb
cld
fwait
ljmp
mov
test
mov
mov
js
push
or
and
in
mov
in
gs
jg
xchg
inc
xchg
and
cmp
popa
jl
ss
scas
ds
xor
idivb
mov
push
jne
pop
or
outsb
inc
mov
fnstsw
jg
sub
pop
jb
or
pop
jecxz
hlt
ret
std
aas
sbb
add
je
dec
adc
int
inc
push
jbe
es
incb
sbb
dec
jo
lcall
jp
pop
sti
push
add
sub
nop
out
and
push
insb
adc
pop
repz
push
and
movsl
cld
daa
mov
sub
test
cmp
jl
pop
jle
loop
stos
and
aad
repz
enter
call
mov
mov
lret
xor
xor
fdivl
pop
ret
mov
mov
ret
loop
sub
push
lock
jp
insl
mov
xchg
sbbl
add
movsl
mov
test
int
imul
xor
mov
mov
cwtl
mov
lcall
movl
jo
pop
mov
adc
in
mov
xor
or
or
lock
shlb
in
sbb
push
sti
ss
rcrb
cmp
mov
jo
js
cmpsb
int
mov
js
sub
cli
inc
test
jl
jb
mov
xchg
dec
addr16
jmp
mov
mov
int
jne
iretw
sub
add
pop
dec
iret
lods
sub
jno
cld
push
dec
out
push
je
insl
stos
std
lds
dec
sbb
scas
pop
dec
mov
pop
lcall
mov
dec
or
pop
and
jno,pt
aam
dec
sub
test
icebp
aaa
and
pop
jmp
inc
fidivrs
dec
movsl
or
xchg
mov
rcl
push
and
sti
and
or
push
mov
psllw
js
cmpsb
shll
loope
sub
inc
scas
dec
shrb
lods
xor
lcall
sub
popa
es
cmpsl
ret
fsubl
cmpsb
pcmpeqw
jl
subl
enter
mov
pop
jb
icebp
mov
dec
adc
mov
sub
pop
dec
add
mov
in
or
push
mov
jb
mov
jecxz
sub
mov
xchg
outsb
sar
popa
es
jl
xchg
add
adc
repnz
sub
mov
arpl
cmpl
fistpl
and
sbb
ds
faddl
cwtl
pop
mov
inc
cs
loopew
fs
and
sub
push
pop
clc
stos
mov
jo
sub
dec
sbb
add
leave
dec
xchg
cmp
movsl
stc
inc
mov
and
jecxz
xlat
int
push
fistps
fsubrl
inc
movb
lock
in
mov
mov
aam
popf
jae
out
rorb
ja
push
push
negl
and
lahf
fucom
sbbl
ja
xchg
out
jmp
cmpsb
cli
push
pop
cmpsb
mov
add
sub
mov
jb
xchg
inc
push
cmp
or
mov
xlat
xchg
mov
cmpsl
jmp
inc
jno
and
cmp
jnp
movsb
call
jmp
dec
sub
xchg
jmp
adc
lcall
pop
daa
pop
xchg
data16
outsl
pop
mov
testb
mov
scas
les
jge
inc
cmp
or
xchg
jge
arpl
jae
push
sahf
mov
test
imul
fstp
shll
xchg
test
imul
bound
xchg
loopne
ss
adc
pusha
sub
mov
jnp
fistl
mov
jg
add
add
cltd
dec
cmpsb
mov
repz
sbb
push
lock
jae
insb
inc
cld
dec
jne
fsubl
cmp
int
add
int
xchg
movsl
bound
pop
ret
push
sbb
aas
shll
mov
cmpsb
cmpsb
nop
pop
jmp
or
sahf
enter
mov
lcallw
xor
push
lods
or
dec
and
jno
adc
leave
jb
push
mov
inc
add
frstor
loope
xchg
pop
dec
lret
stos
lods
xchg
xchg
dec
lods
and
sub
jnp
popf
push
add
or
dec
push
mov
std
cwtl
int3
sti
mov
das
xor
movsb
jno
add
mov
push
cvttps2pi
xor
mov
push
adc
add
fcomp
cld
pop
mov
test
jns
mov
mov
mov
pop
stos
dec
gs
bound
ret
push
adc
xlat
fs
sti
pop
push
adc
jp
xchg
and
hlt
adc
dec
jne
jg
push
or
jae
sbb
inc
arpl
mov
add
mov
mov
fcomip
jge
inc
fwait
xor
lret
fmuls
pop
cmc
cwtl
or
mov
xor
and
lret
nop
movsl
pushf
mov
sub
add
xor
dec
icebp
push
mov
mov
jp
inc
xor
or
inc
repz
jmp
fisubrl
lret
addb
rorb
xorb
add
mov
sti
icebp
inc
int3
rolb
jns
adc
lret
or
xchg
cmp
idivl
nop
inc
cltd
std
mov
shll
cltd
ss
andb
ds
mov
aam
std
subb
mov
loop
mov
int3
push
incl
mov
lea
dec
stos
mov
push
dec
pop
out
dec
xchg
pop
xor
sbb
fiadds
test
in
cwtl
mov
fstpl
repz
xchg
cmp
scas
cli
out
mov
jne
stc
cli
dec
out
leave
scas
mov
mov
pop
in
jb
fwait
lahf
repnz
inc
aad
data16
mov
lret
dec
pop
lods
pop
sbb
inc
fwait
les
ret
test
sub
dec
jno
dec
push
outsb
mov
pop
pop
iret
adc
mov
outsb
xor
je
jae
fwait
dec
call
xchg
repnz
pop
stc
cmp
shrb
mov
stc
addr16
jmp
push
in
pushf
jmp
sahf
push
xor
sbb
mov
cli
xchg
cwtl
dec
inc
stos
sbb
push
sbb
xlat
adc
loop
test
out
int3
sahf
add
mov
shr
add
sbb
and
rcll
mov
pop
andl
or
sub
ljmp
push
in
fmuls
leave
or
or
setge
cld
rcrb
push
loop
xchg
call
cmp
std
push
cwtl
enter
test
cld
or
lcall
jmp
cli
pop
pop
push
pop
mov
mov
bt
mov
inc
pushf
aad
dec
jp
or
xchg
incl
sbb
mov
xor
pop
mov
scas
scas
xor
xor
or
scas
out
pop
icebp
insb
push
push
or
out
add
dec
in
popa
fcoml
lea
dec
rcll
rclb
popl
pop
lcall
push
adc
ret
popf
sub
in
lahf
inc
stc
push
add
in
pushf
sub
in
fidivs
ja
insl
sub
sub
xchg
sub
aam
xorl
cmp
inc
cmp
sub
lods
cmpsl
xor
movsl
pushf
push
ss
dec
das
ds
add
stos
popa
in
jmp
out
adc
rol
mull
movsb
push
out
ja
fld
stc
fnstsw
xor
hlt
dec
imul
or
dec
xchg
mov
xchg
nop
dec
mov
aas
add
test
sbb
sub
jno
jno
jecxz
pop
mov
je
jo
cmp
js
xor
sbb
mov
mov
je
mov
aad
sbb
xlat
sub
sbb
out
nop
mov
adc
jmp
cmp
out
inc
inc
push
pop
inc
mov
sub
out
pushf
scas
inc
push
inc
insl
or
adc
out
loop
and
jb
push
fdiv
jbe
pop
int
and
ds
into
sbb
jl
jno
movb
in
iret
lock
lods
xor
int
imul
add
imul
pop
hlt
imul
xor
push
push
xchg
sbb
fadd
idiv
loop
pop
fsubs
aas
mov
rcr
mov
sub
jnp
pop
in
jl
rorl
push
leave
mov
xor
lar
movsl
mov
mov
movsb
dec
and
dec
sub
stc
inc
lods
inc
cmp
inc
fdivrp
leave
jecxz
sbb
pop
cmp
sub
xlat
gs
popa
add
sbb
lret
jp
rcr
jp
repnz
sub
rcrb
jmp
data16
das
scas
popf
fsubrp
ret
xor
mov
int3
fisttps
add
adc
out
jns
cwtl
mov
cltd
popa
cs
ss
fdivl
mov
or
lea
inc
mov
arpl
nop
sti
aam
mov
pop
jl
lods
sub
out
add
gs
lahf
cmc
cmpunordps
leave
je
sub
daa
nop
mov
jnp
sbb
xor
xchg
sahf
jmp
xchg
in
int3
cwtl
or
mov
and
add
xor
mov
cmp
jle
adc
mov
lock
mov
shrl
xor
arpl
jp
inc
dec
pop
outsl
fld
shrl
pop
cwtl
add
sbb
mov
pop
push
adc
cmpb
xor
mov
leave
loope
xchg
and
push
loopne
in
lock
sub
sbb
pop
fnstcw
out
lods
jns
ja
sbb
or
or
mov
sbb
in
sub
in
xchg
mov
xor
dec
mov
fstpt
xor
push
dec
stos
fwait
insl
mov
pop
in
dec
mov
mov
inc
aad
scas
movsl
ljmp
jecxz
movsl
xor
jmp
stos
jmp
cld
jnp
lock
pop
inc
sub
outsl
loopne
in
lock
pop
cltd
lret
loop
test
xor
dec
fcmovne
jg
test
int
lods
jae
out
imul
shl
or
dec
adc
xchg
push
sub
subb
loope
sub
xor
outsl
xchg
fldl
pop
pusha
and
adc
clc
lcall
arpl
and
mov
xor
xchg
loop
dec
cmp
cwtl
mov
xor
repnz
lret
adc
xor
xor
test
fidivs
mov
xchg
push
insb
nop
mov
xor
pop
leave
push
sub
stos
mov
sbb
arpl
jl
mov
repz
dec
nop
xchg
xlat
pop
scas
enter
sahf
les
insb
addr16
loop
stos
popf
jle
dec
gs
xchg
pop
and
cmp
data16
and
out
mov
lock
insb
add
jl
ds
aad
rol
pop
dec
jp
in
xor
cmc
push
sub
outsb
add
sbb
mov
lds
push
ret
shlb
rorb
xor
pusha
sbb
arpl
insb
cmp
xchg
in
ja
stc
fwait
call
insb
js
loop
ret
ret
test
ja
nop
push
stos
push
jge
pop
fidivl
xor
mov
sti
ljmp
scas
rolb
xchg
xor
or
mov
sbb
xchg
jnp
jp
in
mov
insb
mov
dec
shrd
sbb
or
fdivrl
rorl
int3
or
xor
inc
cmpsl
mov
jmp
aaa
ficompl
jns
and
dec
xchg
add
cmp
add
or
xor
pop
dec
rorl
pop
popf
inc
jbe
shlb
or
xor
or
push
fdivl
sahf
inc
fstps
xchg
fdivs
pop
dec
add
jb
cmp
or
clc
sti
fs
mov
sub
insl
push
adc
sbb
scas
pop
dec
mov
ret
sbb
pusha
test
int3
and
or
sub
mov
jecxz
aam
mov
or
lret
cmp
jnp
scas
mov
xlat
test
cmp
das
push
out
mov
std
test
inc
js
xchg
dec
and
dec
inc
or
xor
lds
setge
fstpl
and
xchg
lock
and
sbb
ret
rep
out
xchg
push
inc
jbe
and
das
pushf
out
cwtl
mov
rclb
out
scas
rcl
jecxz
mov
cli
cld
and
stos
sti
ljmp
fdivrl
ret
push
push
push
dec
rep
int
xchg
les
jbe
cmp
xor
ret
es
out
push
lahf
or
pop
xchg
stos
fldenv
stos
jl
inc
sub
aam
xchg
jae
mov
xchg
icebp
scas
mov
iret
into
cwtl
aas
push
in
xchg
fwait
push
imul
push
leave
sbb
into
imul
mov
mov
add
loopne
xor
out
movsl
out
aaa
cmpsb
pop
cmpsb
arpl
inc
xchg
into
xorb
loope
add
inc
mov
push
mov
mov
out
data16
fisubs
jno
xchg
xor
xor
push
cli
jp
mov
ja
sbb
and
lods
mov
inc
and
pop
dec
popa
inc
iret
xchg
sahf
cmp
cmpsl
das
adcl
mov
push
xchg
cmp
lds
jno
mov
mov
jge
sbb
testb
pop
sub
cmpsb
add
cmc
xor
int
loop
dec
stc
or
lcall
mov
in
mov
sbb
fcmovnbe
fsubs
out
movsb
sbb
aam
imul
std
fwait
mov
jns
jge
inc
inc
sbb
mov
nop
aaa
and
xchg
push
scas
sub
cmpsb
cmp
inc
repnz
or
xchg
push
jle
mov
inc
mov
pop
inc
stc
sub
adc
jl
adc
inc
dec
xor
inc
and
add
in
ljmp
mov
in
jecxz
out
push
and
push
ficoml
and
ret
iret
das
popa
xchg
subl
mov
jae
sbb
add
adc
pushf
inc
out
aam
jo
cmp
shlb
xchg
xor
cli
lret
enter
std
in
adc
xchg
jp
mov
lods
loop
popa
fists
lods
push
mov
jnp
cli
nop
les
xchg
xchg
cmp
dec
jo
xchg
and
mov
fcomp
sub
cltd
xchg
pop
movsb
mov
fucomip
dec
xlat
pop
int
jg
dec
sub
pop
add
stos
fstpt
jp
sub
mov
mov
cmc
push
cmp
push
jbe
icebp
cltd
arpl
mov
das
jne
adc
fistpll
xchg
xchg
xchg
and
arpl
loopew
mov
push
mov
inc
or
pusha
das
pop
xchg
jns
out
fidivs
adc
stos
orb
fst
dec
outsl
pop
adc
stc
sub
test
sbb
mov
mov
pushf
jle
mov
popa
push
sahf
mov
xchg
iret
into
and
xchg
and
mov
mov
test
jnp
stc
xchg
mov
push
adc
cwtl
xor
jle
mov
adc
pop
cmp
xor
imul
inc
out
xchg
mov
fiaddl
xor
inc
push
cwtl
out
add
insl
dec
popf
scas
xchg
mov
and
ficomps
xchg
push
pop
mov
cmpsb
movsl
cld
in
mov
dec
mov
stos
push
leave
push
jns
cmp
cmpsl
aad
ret
mov
in
and
inc
push
mov
das
ja
sti
sub
lea
je
push
mov
push
jg
imulb
mov
jmp
call
ds
lret
lret
dec
jbe
inc
loopne
jo
pop
and
daa
add
xor
call
push
mov
or
sbb
hlt
xchg
in
sub
xor
mov
push
imul
addb
out
mov
and
xchg
xlat
cs
lea
fdivl
push
popw
adc
cmp
and
xchg
mov
lret
dec
sbbl
xor
push
fiaddl
jle
mov
fs
ds
popf
jmp
lds
cli
push
ret
xlat
pop
pop
sub
scas
jne
xchg
lds
push
mov
sti
sahf
sti
es
dec
add
lret
mov
push
cld
push
mov
xor
scas
enter
mov
inc
add
xor
push
xchg
test
addr16
sahf
jo
sbb
ja
pop
arpl
jecxz
and
in
xchg
cs
shrl
sub
xchg
push
hlt
inc
pushf
dec
call
adc
pop
mov
call
in
push
dec
or
arpl
loop
ljmp
pop
lock
sti
xchg
fiadds
push
shrb
rcll
adc
imul
or
push
enter
iret
aaa
lret
xchg
dec
int
bound
xlat
inc
ds
sub
cmc
repnz
jge
or
and
popa
jp
addl
add
scas
mov
lock
dec
sub
fildll
aam
inc
outsl
sub
push
fsub
cmpb
jmp
mov
bswap
xor
add
cmp
roll
lahf
xor
mov
pop
adc
pusha
shl
jne
loopne
pop
jecxz
fxch
fiaddl
xor
fldt
std
add
and
icebp
icebp
add
jo
jp
iret
fcomps
in
scas
lods
adc
jmp
xlat
lcall
mov
jle
dec
add
and
adc
or
cld
ret
in
pushf
insb
out
pop
mov
out
pop
add
es
xchg
mov
sbb
jmp
xor
mov
add
enter
ficompl
jb
sbb
fwait
mov
push
testb
xor
inc
mov
dec
sub
stc
pop
mov
enter
xchg
or
fwait
mov
mov
test
outsl
jae
sub
inc
sbb
lods
mov
arpl
bndldx
fsub
mov
jp
fcomp
ret
dec
xchg
inc
dec
addr16
push
xchg
ja
cwtl
pop
xor
test
stos
test
or
jne
lea
mov
gs
pop
mov
mov
lock
mov
stos
add
mov
jb
nop
into
xor
pop
les
adc
or
loop
jo
mov
pop
pop
adc
dec
popa
push
cmp
or
add
cmpsb
mov
js
and
repnz
mov
dec
dec
cmp
scas
mov
iret
ljmp
xor
sub
xchg
xchg
cmpsl
into
sbb
enter
ja
jecxz
decl
xchg
pop
mov
shll
shrl
push
lock
mov
push
stos
xchg
inc
cltd
mov
push
push
imull
pop
loopne
daa
pop
les
outsl
pslld
pop
adc
or
les
sbb
in
mov
lods
int
inc
div
movsb
aad
movb
shrb
push
mov
adc
xor
xchg
adc
loop
inc
clc
inc
mov
pushf
sbb
xor
gs
dec
push
inc
movsl
jle
stos
sbb
ja
jl
aaa
or
loope
aad
scas
xor
bnd
fs
mov
subb
sub
pop
imul
cs
jmp
push
loope
sbb
in
pushf
cmp
or
sbb
cmp
mov
fimull
std
pop
lea
inc
movl
and
out
imul
xchg
mov
hlt
jle
jg
mov
xchg
ret
aas
push
popf
fisubl
xchg
leave
sbb
daa
lods
push
je,pn
ror
aam
dec
mov
rcll
mov
jae
push
push
or
and
xor
mov
aas
pop
jecxz
ret
inc
lea
insl
sbb
pop
rorl
ret
aam
push
xchg
clc
fsubs
add
idivl
jg
or
or
lods
lods
add
std
xor
pop
or
notl
sub
scas
test
cwtl
xchg
stos
inc
pusha
mov
sub
cmp
or
push
data16
out
xor
out
jl
sub
add
xchg
daa
js
jbe
cmp
push
pop
sbb
imul
sbb
xor
push
adc
jae
shrl
or
nop
ret
ret
mov
cltd
cmp
cmp
int3
jbe
mov
jbe
add
and
aam
mov
inc
mov
pop
adc
sbb
frstor
sub
sub
jecxz
jne
mov
add
inc
scas
test
repnz
cmp
or
push
inc
mov
xchg
cmp
cli
aad
popf
rcll
or
in
lcall
dec
fildll
rcrl
cs
or
jns
pop
inc
test
jnp
push
in
xchg
subb
aad
in
fsubp
dec
inc
push
into
adc
in
or
mov
stos
sarl
out
pop
or
std
sub
popf
stos
xchg
jmp
mov
inc
xor
and
andl
test
cs
out
add
mov
cmp
ja
push
mov
rcrl
adc
pusha
shll
js
pop
pop
pusha
or
movsl
cmp
mov
fwait
lods
add
std
dec
insl
lcallw
jp
dec
mov
sti
cli
mov
cmp
pop
fisubl
jbe
inc
inc
daa
stos
dec
pop
xor
xor
and
mov
mov
mov
iret
aam
dec
push
ja
pop
mov
mov
xchg
or
pop
xchg
xor
shr
xchg
iret
dec
les
fidivrl
mov
fwait
jmp
imul
mull
fsts
imull
leave
dec
sub
or
jae
sbb
imul
out
add
jne
fcoms
jg
sbbl
and
xchg
ret
mov
push
pushf
test
pusha
mov
stc
outsb
inc
call
scas
sti
lcall
add
dec
pop
pop
sbb
push
adc
lock
and
adc
dec
daa
pop
push
fwait
mov
adc
sbb
adc
add
pop
addr16
sub
out
test
lcall
push
popf
xor
mov
cmpsl
mov
aas
pop
fisubrs
cmpsl
movsl
movsb
fwait
lret
dec
pop
sti
leave
scas
int
push
mov
and
aas
cmp
xor
cmpsl
test
add
mov
jo
mov
jb
xchg
jne
jg
dec
add
aaa
aam
and
and
aam
mov
scas
fildl
ja
mov
mov
dec
jl
in
cmpl
xor
jle
ret
imul
dec
adc
cmp
push
xchg
jae
or
push
dec
pushf
imul
cs
and
sbb
mov
and
xchg
push
mov
mov
xchg
push
leave
add
push
mov
lds
insl
test
mov
dec
gs
addl
imul
ficomps
jp
fisubs
push
xor
mov
xlat
adc
push
pop
outsb
mov
mov
mov
cli
fimuls
cmp
mov
loopne
pop
arpl
push
add
pop
test
add
dec
js
mov
xlat
mov
lds
xchg
sbb
fstpt
mov
loope
mov
mov
add
inc
and
and
jne
jle
je
mov
insl
mov
xor
repz
jne
sub
pushf
sub
adc
fnstcw
idivl
lahf
mov
pushf
or
pop
adc
and
jl
aaa
aas
ficomps
mov
fs
out
push
popf
outsl
jae
sub
nop
xchg
out
jl
sbb
xchg
iret
pop
aad
enter
dec
push
or
rolb
push
fs
inc
data16
pusha
mov
gs
adc
sahf
dec
test
mov
test
adc
imul
inc
pop
xchg
shl
sbb
cmp
push
insb
addr16
lret
je
outsb
pushf
and
jb
arpl
pop
sbb
sarl
push
mov
xchg
xor
inc
mov
xchg
lret
xchg
out
dec
mov
in
je
lcall
hlt
subl
mov
dec
testb
loop
sbb
add
hlt
xchg
imul
and
sbb
and
insl
idivb
pop
cmp
mov
sbb
xchg
xchg
add
test
mov
fadd
cmp
xchg
sub
jae
enter
pop
and
in
loope
in
or
push
lret
mov
sub
push
mov
aad
stos
out
lcall
outsb
or
adc
pop
lock
out
outsb
cmp
ret
push
push
adc
shr
popf
push
test
sub
inc
jno
mov
out
idivl
ja
nop
fcmovnu
mov
and
mov
cmp
fldcw
outsb
mov
push
xchg
dec
cld
shrb
jae
das
jl
nop
insl
push
push
je
in
xchg
add
test
insl
jbe
ret
dec
pop
jbe
xor
xlat
xchg
test
jno
bound
shrl
or
and
jo
mov
dec
out
xor
or
imul
pop
inc
test
cli
push
enter
aas
das
sarl
adc
adc
push
inc
push
jno
outsb
mov
pop
js
nop
bound
push
inc
ljmp
add
scas
add
cli
movsl
jae
test
popa
dec
pop
ds
dec
lahf
data16
mov
mov
lock
bound
sti
add
stc
rolb
jne
dec
push
add
ds
jno
pop
int
sbb
xchg
add
aas
add
js
aad
xor
and
lcall
adc
movb
scas
es
das
mov
cmp
cmpsb
xchg
or
scas
and
mov
loop
call
ret
jmp
xchg
mov
nop
lret
subb
fsub
rcrb
adc
dec
test
push
push
movsl
jg
jnp
incb
push
lock
dec
dec
repz
std
xchg
imul
mov
test
fnstenv
adc
std
push
aam
lods
or
xchg
mov
sbb
test
clc
loope
ret
jge
push
xchg
mov
cmp
adc
mov
stos
inc
into
inc
sarb
sbb
cmp
clc
sbb
in
test
push
adc
mov
addl
fldt
fistpl
ret
pusha
dec
arpl
mov
nop
movsl
xchg
push
sub
and
insb
or
add
lods
dec
dec
jo
nop
mov
fs
pop
mov
arpl
pushf
mov
add
fsts
jns
aaa
and
adcl
cmpsb
jmp
adc
in
fdivrl
jl
das
pop
add
dec
repnz
inc
lea
push
sub
lods
sub
mov
push
es
mov
mov
cmp
aaa
outsl
cmp
sbb
add
lock
dec
ds
xchg
cmp
leave
lods
push
sarb
roll
into
sbb
dec
push
lea
leave
icebp
mov
inc
xorb
mov
scas
or
xor
stos
and
push
loopne
clc
ret
and
jnp
xchg
stos
test
mov
popf
out
rcl
push
cld
in
adc
adc
in
mov
ljmp
inc
lret
push
ja
adc
push
in
and
or
imul
incb
pop
fwait
mov
adc
xchg
inc
shlb
mov
inc
and
mov
popa
rcrb
repz
xor
lds
clc
sbb
lods
xor
lcall
and
sbb
call
mov
mov
inc
mov
movsb
std
loopne
gs
lea
ret
or
push
adc
xchg
mov
adc
mov
jmp
sbb
mov
inc
incb
xor
in
adc
cmp
fidivl
cmpsl
and
push
mov
test
movsl
ret
pusha
pop
inc
dec
pop
dec
neg
clc
or
push
dec
sbb
je
xor
jo
pop
inc
ficomps
cmpb
jae
imulb
fcomip
aam
arpl
aam
repz
cltd
mov
js
lds
or
adc
add
daa
dec
je
aad
rolb
nop
pop
orb
and
push
loopne
or
fildl
mov
int3
cmpsl
idivl
call
sub
mov
mov
in
jg
out
popa
fs
add
sub
sub
sarb
jl
loop
sub
xchg
pop
mulb
movsb
fcmovnu
mov
jae
inc
xchg
add
and
sahf
sub
cmpsl
lds
jae
push
outsb
and
xchg
mov
jno
cmovo
mov
fmul
pop
popa
mov
push
sub
jmp
in
push
das
dec
mov
ss
sbb
cmp
mov
mov
inc
inc
insl
mov
cltd
cmp
pop
sbb
mov
mov
pop
das
push
inc
adc
sub
mov
divl
sub
add
stos
pop
sar
inc
pop
pop
push
dec
or
jne
cltd
cmp
cmc
add
repnz
icebp
fwait
pop
mov
or
rcrl
mov
adc
adc
fldt
movsl
xchg
gs
cmp
jns
cld
icebp
lods
insb
imull
repnz
ds
fmull
sub
out
lods
stos
adc
rcr
or
ret
mov
and
addr16
test
inc
cwtl
jns
add
stc
mov
mov
and
inc
icebp
std
xor
sub
sbb
aaa
xor
cmpb
int3
mul
xor
data16
add
scas
cwtl
out
or
xor
sub
adc
gs
leave
dec
test
pop
mov
fmull
imul
jg
jl
pop
sbb
jb
sbb
ret
jmp
ss
sub
sbb
push
xchg
mov
pop
or
sbbl
aas
stos
add
cs
push
and
scas
dec
lahf
inc
aam
and
aad
inc
sub
push
mov
and
gs
fwait
sti
out
sbb
sbb
pop
mov
enter
stos
mov
cld
repnz
jae
je
fmul
lahf
fnstenv
cmp
xchg
fcmovnbe
out
movsb
ljmp
sub
in
mov
push
repnz
lods
out
stos
adc
pop
pop
addb
pop
cmp
incb
adc
xchg
clc
or
insb
lret
arpl
add
outsl
ss
faddp
push
andb
dec
pop
xchg
shll
inc
popa
shlb
mul
pop
inc
aas
outsb
mov
mov
inc
ja
cmpsl
sbb
imul
andb
mov
adc
addr16
inc
push
movsb
rorl
cmc
mov
shrl
mov
mov
xchg
add
jae
adc
xor
ret
mov
mov
mov
pop
xor
or
dec
in
sub
ss
sbbb
insb
daa
lea
sub
sub
pop
xor
xchg
mov
leave
inc
sahf
xlat
or
adc
dec
xor
and
push
movsl
loopne
in
psrad
fidivrs
sbbb
inc
in
jae
lcall
ret
adc
mov
mov
cmpsb
pop
stos
sbb
add
xlat
sbb
xor
and
and
or
cmc
insb
adc
jmp
das
push
data16
cld
xchg
sub
adc
jb
lea
pop
and
sbb
xchg
iret
adc
push
cmpsb
add
inc
shll
lret
inc
addr16
push
add
arpl
xchg
es
imul
xchg
jae
dec
push
nop
ja
pop
loop
into
sbb
inc
ret
xchg
xchg
jae
outsb
mov
nop
pop
mov
fnstsw
lea
push
es
lret
push
adc
jp
fsts
xorb
xor
cmpb
sbb
sub
adc
aam
and
add
xchg
push
test
fnstsw
pop
xor
sarb
dec
fcmovne
cmp
insl
roll
lock
iret
pop
or
cmpsl
popf
das
xorb
or
push
std
xchg
push
cmp
dec
fnstenv
adc
pop
mov
outsb
movsl
lret
and
sbb
mov
loop
leave
int3
cwtl
ja
jl
inc
cmp
sub
add
mov
adc
pop
pushf
xchg
mov
dec
addr16
icebp
fidivrl
sbb
orb
push
pop
dec
shrl
mov
pop
or
xor
daa
push
daa
add
in
mov
imul
sbbb
push
sub
mov
xchg
lods
ret
and
xchg
dec
loopne
xchg
ficoms
loope
adc
sbb
data16
and
shll
test
nop
ret
out
cmp
sahf
mov
mov
pushf
daa
xchg
pop
xchg
scas
movsl
loope
outsl
enter
nop
mov
mov
xchg
cmp
xor
sub
lret
mov
in
add
in
push
shl
push
adc
adc
or
xchg
jecxz
dec
adc
sub
jne
int
push
ficoml
pop
dec
es
xchg
mov
lea
iret
sbb
xchg
adc
push
jbe
sbb
push
jbe
jle
xor
push
jmp
adc
xchg
xor
xor
js
iret
xlat
and
or
mov
sti
sub
insb
hlt
mov
xchg
adc
cmp
inc
add
js
mov
out
mov
bound
mov
xor
push
xor
lea
lahf
cmc
push
js
sarb
inc
mov
lret
in
mov
add
jge
mov
out
mov
inc
popa
insb
mov
leave
cmp
addr16
fwait
adc
inc
mov
adc
cmp
cwtl
add
sub
fdivr
into
cmc
cmp
ror
das
outsb
cmpsb
outsb
mov
decl
sub
or
subb
xchg
jp
fists
jmp
int3
mov
inc
add
in
aas
cmpsb
jl
adc
das
and
outsb
repnz
mov
mov
mov
stc
cmpsb
push
or
pop
mulb
jecxz
sbb
lods
dec
or
inc
mov
outsb
lds
lret
outsb
adc
outsb
jecxz
test
adc
inc
push
decl
mov
mov
mov
adc
and
or
sub
pop
mov
rorl
shrb
mov
xchg
add
mov
jo
or
inc
loopne
push
daa
cmp
scas
pop
ljmp
adc
mov
xchg
jmp
jno
dec
leave
daa
movsb
or
sub
int
xlat
sub
dec
sub
or
testb
icebp
in
jae
add
mov
leave
mov
pop
ljmp
mov
pushaw
fs
sub
dec
mov
fbld
inc
testl
inc
jg
pop
int3
jo
push
dec
add
lods
and
call
cwtl
out
imulb
cmpsb
idivl
xchg
mov
jno
stos
and
sar
dec
push
adc
clc
add
imul
lock
sub
mov
inc
fcomi
hlt
imul
outsl
sbb
mov
xor
cwtl
mov
sub
mov
dec
lret
adc
ds
roll
outsb
call
repnz
pushf
jno
add
dec
jno
inc
mov
cmc
ret
shlb
lcall
ljmp
test
filds
sahf
pop
popf
push
cmpsb
imul
jae
add
and
pop
or
add
dec
inc
add
cmp
mov
jns
mov
lret
das
sar
mov
js
imul
cmp
out
mov
pop
inc
fadd
mov
cmp
lods
mov
mov
out
pop
push
xchg
or
and
leave
addr16
add
and
clc
flds
pop
cmpb
scas
mov
shlb
out
into
mov
adc
iret
or
adc
mov
mov
pop
mov
or
sub
mov
inc
push
or
lods
xorl
or
inc
fcompl
lods
inc
ret
pop
add
mov
insb
mov
mov
hlt
mov
mov
push
pop
mov
pushf
and
movsl
add
stc
mov
lret
jne
inc
mov
add
xchg
inc
mov
in
jo
mov
push
into
mov
enter
sub
scas
stos
dec
fucomi
shrb
sbb
fnsave
js
jno
xchg
out
mov
ret
xchg
idiv
sbb
fcoms
xchg
push
imull
dec
fstpl
test
inc
fistpl
push
xchg
cwtl
xchg
cmp
es
xchg
lret
js
fcmove
and
dec
test
xchg
test
es
enter
sbb
shl
xchg
lods
imul
pop
ret
ljmp
xchg
sbb
inc
ret
mov
stc
xchg
arpl
sub
push
sbb
jge
adc
xor
loop
jge
jne
das
shlb
and
pop
xlat
mov
push
fbstp
mov
loope
loopne
xor
push
in
and
push
lds
rcr
adc
add
aas
or
jp
out
add
and
shr
mov
mov
pop
lea
push
imul
mov
imul
addr16
dec
xchg
adc
pop
xor
push
dec
sar
pop
push
jp
ret
lock
add
cmc
fcoms
cmpsb
in
rsqrtps
orl
stos
sub
daa
push
mov
mov
bound
cmpsb
bound
dec
loope
sub
daa
rcl
scas
pop
jne
mov
mov
movsb
stos
xchg
xor
sub
xor
add
daa
ss
xchg
mov
mov
mov
sti
pop
cli
xchg
or
adc
fisttpl
push
mov
jle
push
add
iret
cli
loop
sub
inc
fbld
mov
insl
mov
xchg
mov
xor
sti
mov
enter
xchg
jo
movsl
xchg
or
pop
push
jp
dec
mov
sbb
push
insl
scas
xor
xchg
lods
push
enter
stos
lods
pop
cmp
cmp
mov
test
fwait
or
mov
jne
dec
pusha
mov
dec
xchg
stc
mov
xchg
loopne
loop
mov
mov
jns,pt
mov
lret
addb
movsb
mov
push
dec
setno
aaa
pop
imul
leave
xor
in
nop
add
out
xor
out
stc
or
and
sbb
mov
mov
mov
cmpsb
adcl
scas
jmp
sbb
scas
shll
shr
or
inc
pop
add
imul
mov
sub
push
mov
sbb
add
mull
cmc
mov
repnz
je
fstl
jne
mov
xor
adc
fwait
aaa
ret
dec
push
call
nop
fcmovbe
fisubrl
pop
nop
mov
pop
aas
cwtl
jb
and
mov
dec
cmp
fnstcw
sub
test
mov
push
js
cmpsl
add
out
push
mov
mov
scas
and
mov
aam
ljmp
xchg
jmp
sub
into
fcoml
inc
fsubrp
jp
mov
jmp
inc
sub
aas
xchg
mov
mov
dec
int
jg
xor
ret
lock
lods
push
stc
adc
fwait
jecxz
imul
jl
add
jae
leave
outsl
fcompl
fnstsw
cltd
imul
hlt
sbb
icebp
fcmovnb
imul
cwtl
loope
pop
push
xchg
xor
dec
mov
dec
roll
pop
inc
notl
cmp
js
dec
rcll
popa
lock
scas
movsl
jo
cmpsl
faddl
loop
repz
int
shrl
mov
pushf
cld
pop
inc
pop
sbb
ret
mov
imul
es
hlt
jmp
das
pop
sbb
jp
xchg
cmp
jb
into
pop
inc
enter
clc
or
movsl
push
stos
hlt
loope
pushf
jecxz
cwtl
pop
xchg
mov
jmp
push
adc
push
aad
mov
and
mov
movsb
sbb
cli
je
sbb
loopne
pop
xor
fmulp
pop
push
mov
dec
iret
cwtl
stc
cmp
das
int3
adc
inc
jmp
mov
push
adc
push
std
push
jb
jno
pop
sub
push
sti
inc
sbb
cmpsl
pop
mov
fwait
mov
inc
cmp
pop
stc
stos
push
cmp
std
adc
xchg
mov
fldcw
pop
cmp
out
bound
dec
icebp
mov
lea
sti
aam
pop
sbb
or
mov
sbb
lcall
loope
push
and
sub
pop
and
pop
roll
mov
mov
sub
cmpsl
adc
gs
imul
adc
mov
sub
xchg
jmp
cwtl
seto
cmpsl
ljmp
jns
test
dec
pop
outsl
inc
hlt
movsl
daa
xor
inc
or
mov
adc
adc
fcoml
popa
cmp
xchg
jae
out
mov
lahf
inc
jecxz
inc
nop
pop
inc
je
jnp
jl
jns
iret
mulb
iret
adc
fsub
sahf
test
aad
ret
dec
aam
popf
jb
sbb
nop
lcall
rolb
jge
movsl
jno
pop
out
adc
ljmp
cmp
test
and
push
and
pop
xchg
sbb
iret
in
pop
sub
insl
les
push
in
mov
sub
rcrl
mov
pop
jns
mov
fsubl
adc
sub
aad
nop
sti
cwtl
jle
xchg
repz
add
test
cmp
push
xchg
mov
mov
and
movsb
out
jge
ret
mov
aaa
daa
enter
ljmp
pop
xchg
into
les
lock
fst
scas
loopne
lea
mov
xor
mov
andb
mov
sbb
mov
popf
add
adc
aad
pop
mov
movsb
test
pop
aas
cmp
xor
jae
mov
icebp
push
pop
adc
sub
or
cltd
int3
xchg
xlat
test
int
pop
call
cmp
jl
pop
or
loope
adc
pop
loopne
ret
fnsave
decl
pop
adc
outsb
rclb
xor
das
mov
mov
stc
popa
jle
popf
push
mov
and
and
loopne
sarb
sbb
cmp
jne
and
xor
jno
adc
call
lock
popf
cmp
xchg
cwtl
dec
fsubp
xor
add
ficoms
imul
jecxz
xchg
inc
aad
test
or
jnp
sbb
sbb
mov
iret
pop
mov
inc
fidivs
hlt
out
lret
test
and
pop
dec
mov
les
add
mov
pop
inc
shr
cmp
or
pusha
add
and
lock
sbb
mov
in
or
jb
movsl
hlt
rcrl
rcr
jbe
xchg
sub
mov
mov
outsb
or
aam
jg
stos
out
mov
dec
gs
cmp
mov
xor
movsl
fistl
and
sbb
mov
ret
mov
xchg
cmpsb
or
out
scas
or
into
repnz
jae
gs
mulb
shlb
mov
sub
xchg
out
mov
fldenv
cmp
pusha
mov
fsts
pop
push
pushl
jbe
jmp
cmp
movsb
push
mov
mov
fsqrt
push
jle
cmp
pop
cmpsl
or
repz
dec
ret
fsubrs
jmp
mov
daa
dec
mov
out
cmpsl
movsb
out
sub
rcrl
loop
int3
stc
stc
bound
adc
shlb
or
cmp
in
xchg
les
repz
mov
xlat
out
mov
ds
xor
pop
mov
inc
stos
pushf
mov
pop
in
adc
lock
sub
pop
movlps
jnp
outsl
sub
xchg
add
push
and
adc
sub
adc
jg
aad
mov
dec
ror
pop
pop
cmpsl
lsl
or
sti
test
lods
cmpsb
pusha
ljmp
out
in
inc
push
test
and
push
std
push
push
dec
add
bsr
mov
xchg
mov
xor
int3
in
cmpl
iret
cld
dec
push
cs
add
push
mov
pop
adcl
imul
lea
add
rclb
ficoms
mov
and
leave
or
cmp
cwtl
aas
pop
loope
movzwl
insl
or
sbb
jp
test
mov
dec
pusha
movsb
jo
ds
out
stc
jle
popf
mov
mov
xchg
fwait
sub
sbb
shll
xor
cmpsl
lret
repnz
enter
push
outsb
aas
inc
int3
jns
addr16
int
into
xor
xor
lret
idiv
fimuls
les
mov
sub
ljmp
jmp
imul
fisubrs
jecxz
arpl
aaa
sub
pop
mov
xor
inc
xorl
scas
aas
xorb
push
jns
mov
subb
pop
cmp
pop
mov
dec
lds
or
imul
loope
add
dec
aad
mov
mov
push
mov
push
ret
adc
jae
movsb
cmp
iret
sbb
sbb
scas
test
out
outsb
mov
nop
out
int
jmp
mov
mov
lods
inc
cltd
inc
call
pop
les
lret
mov
imul
in
ja
iret
movsb
adc
ficoml
xchg
int3
push
sahf
sbb
inc
adc
adc
inc
lock
call
jne
jae,pn
subl
pusha
xor
mov
inc
cmpsl
sbb
add
pop
scas
test
inc
fcomps
sub
jmpw
dec
cmpb
clc
mov
cmc
add
xchg
clc
mov
xlat
or
call
xchg
das
flds
or
sbb
mov
dec
aad
fnstenv
sbb
fidivrl
push
push
inc
ljmp
push
ja
int
push
mov
mov
sbbb
jnp
dec
out
add
xchg
push
mov
cmc
decl
aad
cld
xchg
je
lock
cmp
popf
or
je
lods
or
psubsb
pusha
mov
mov
mov
cmp
outsl
les
fmuls
mov
inc
add
jecxz
sub
out
jge
xchg
dec
mov
jge
mov
jno
dec
sahf
pusha
pop
push
out
mov
pop
jecxz
adc
pop
push
loop
lods
iret
mov
xor
insb
les
cmp
dec
dec
cmc
or
and
cli
mov
mov
lock
outsl
xchg
iret
rcrb
imul
xchg
in
gs
xchg
cmp
std
xchg
addr16
or
inc
test
imul
inc
notb
nop
cmpsb
xor
jne
pop
push
jb
cmp
out
xor
out
loopne
xchg
daa
xchg
js
stos
out
mov
imul
scas
cmpb
cltd
xlat
outsb
fidivs
pushf
fwait
or
push
sub
dec
popa
outsl
ror
mov
shr
scas
mov
and
dec
dec
jle
mov
add
shll
pop
fidivl
sbb
loopne
jl
dec
outsl
mov
gs
xor
sbb
mov
fisttps
mov
js
push
cmc
in
xchg
mov
std
rorb
sar
shrl
jo
pushf
fildll
fsubl
adc
lock
fcompl
xchg
sub
mov
add
lea
flds
out
data16
mov
in
inc
adc
arpl
das
mov
fs
sbb
movsb
lods
push
in
movsl
add
test
fcoml
sub
nop
cwtl
jmp
clc
mov
mov
push
aaa
lock
adc
leave
aas
daa
test
lds
mov
scas
mov
cwtl
clc
std
sub
sub
mov
jmp
and
int
sahf
or
daa
leave
jae
add
hlt
sub
je
or
nop
mov
scas
test
sti
lcall
pop
and
cld
jo
pop
int
mov
push
push
mov
mov
cli
int3
inc
lods
push
call
add
pop
xor
mov
aas
push
imul
and
movsb
movsb
test
das
cmp
mov
je
loopne
mov
or
jmp
inc
addb
add
repz
insl
and
sti
pop
outsl
mov
daa
jb
pushf
dec
and
aas
and
mov
stos
leave
ja
xchg
js
mov
out
insb
dec
lods
popa
cmp
pop
in
out
add
jl
lods
inc
icebp
pop
in
push
fisubrl
or
inc
out
insl
push
loopne
out
aas
sbb
dec
adc
in
rcl
dec
cmp
xchg
insb
xchg
xchg
push
repz
fstpl
int3
lret
ja
adc
jle
out
jecxz
pop
sbb
ljmp
mov
clc
insb
js
movsb
sahf
add
mov
shrb
dec
cmp
jge
push
popf
mov
mov
fsubr
lahf
jecxz
or
jp
mov
ljmp
clc
dec
push
sbb
jb
das
xchg
mov
mov
rcr
mov
std
incb
fcomip
sbb
cmp
mov
lss
sub
test
jns
cmp
idivb
out
push
addr16
pop
xlat
fstps
jmp
or
jl
scas
adc
adc
ror
js
int3
sbb
lods
mov
std
cwtl
les
push
mov
fs
testb
mov
xor
cs
lock
mov
std
out
sub
adc
movsl
cmp
add
mov
cmpb
sbb
rep
push
mov
aas
popa
loop
ret
shrb
aas
push
add
push
sub
aas
pop
pop
xor
mov
in
jne
lods
in
lods
outsl
mov
jge
shrb
shll
mov
icebp
movsl
mov
movsb
mov
dec
cmp
add
mov
in
xchg
mov
icebp
xchg
ljmp
dec
add
icebp
add
lahf
stos
cwtl
mov
mov
jb
fucomp
sbb
pop
dec
incl
pop
sbb
and
mov
jecxz
jbe
out
addl
in
outsl
push
int3
cmp
push
adc
or
cli
call
ret
lds
or
or
rcll
xor
cltd
rolb
dec
gs
jmp
jne
ret
arpl
subl
dec
int
sbb
stos
xchg
inc
sub
cwtl
sbb
push
fldl
push
mov
mov
mov
bound
mov
fwait
lock
hlt
ss
add
xor
jb
push
int3
xchg
jnp
xor
cltd
cld
xor
or
movsl
xchg
insb
mov
or
or
add
cwtl
ljmp
add
inc
mov
sbb
and
call
clc
test
fwait
pop
cltd
jle
push
sub
mov
js
mov
xchg
or
pop
push
xchg
outsb
sbb
popa
test
in
test
stos
dec
lcall
pusha
int3
mov
and
stos
xorl
ljmp
ficoms
xor
jbe
or
sub
jo
loop
mov
sub
ret
idivl
mov
cltd
sub
pop
sub
sarl
mov
push
xor
inc
stc
repz
es
inc
dec
pop
lods
scas
adc
push
ss
xor
add
adc
enter
fnstcw
sar
rorl
ss
pusha
push
call
xor
jbe
popf
fcompl
xchg
xor
jp
xor
pop
rcll
test
cmp
inc
std
cmpsl
push
push
fcoms
dec
sbb
jae
sub
mov
scas
mov
add
adc
pop
xor
stos
xor
mov
stos
pinsrw
xchg
mov
inc
inc
xchg
adc
gs
sub
repnz
movsl
cltd
push
mov
out
adc
sti
popf
mov
ret
je
xorb
add
sub
lea
cmp
pop
sti
mov
out
rcrb
lock
jecxz
jno
xor
out
stos
push
pop
clc
mov
negb
sub
pushf
cmp
or
inc
lcall
mov
out
stos
push
test
movsb
inc
lret
fldenv
sub
inc
push
xchg
or
sahf
ja
or
mov
cwtl
jo
xchg
mov
outsl
adc
int
shll
ret
fs
bound
aas
fdiv
fwait
mov
outsl
mov
les
xor
jns
mov
pusha
pop
test
test
lock
ret
imul
ljmp
dec
dec
dec
movsl
adc
mov
xor
loop
shrl
loopne
pop
inc
mov
or
je
jo
sub
push
insb
stos
das
rcll
aaa
lahf
pop
push
jle
pop
nop
sub
std
jp
mov
mov
jle
xor
sahf
jmp
sar
mov
pop
push
mov
cmp
adc
jbe
pop
cmp
mov
xchg
add
push
popa
mov
out
lret
out
loopne
xor
fidivs
aad
pop
sbb
sub
mov
lods
add
sbb
fdivrl
sbb
into
adc
mov
cmp
dec
push
test
and
out
in
lods
lret
mov
lret
add
scas
insb
mov
pusha
insb
cmc
xlat
lds
push
inc
scas
negb
mov
push
inc
icebp
scas
sub
sbb
adc
fldt
xor
jae
add
xor
pop
pop
scas
test
addr16
cmp
cmp
xchg
pop
xchg
xlat
mov
das
sub
fistpll
lcall
push
sbb
scas
shrl
daa
pop
cmc
mov
pusha
insb
or
sub
dec
jns
in
jge
xchg
and
ret
dec
das
dec
lret
aad
movsl
test
ss
cmpsl
nop
xor
scas
aaa
addr16
xchg
mov
cmp
inc
jp
sbb
inc
pusha
sbb
popa
clc
mov
test
ror
enter
mov
xor
mov
and
ds
mov
test
in
sbb
out
pop
cld
ljmp
jno
mov
jg
and
fsub
cmp
sti
mov
arpl
xchg
movsl
nop
rorl
imul
insb
push
xor
sub
rcr
stc
push
dec
mov
lock
mov
aam
aam
sti
jecxz
sbb
ret
xchg
inc
out
xor
popf
outsl
mov
dec
shll
subb
xchg
es
cmp
shl
xchg
inc
fcoml
push
mov
stos
push
dec
in
inc
mov
mov
xchg
or
mov
jecxz
mov
dec
inc
cld
pop
jne
xor
mov
mov
or
jns
add
ds
pop
adc
push
cmp
adc
js
out
inc
daa
pop
mov
inc
xchg
nop
mov
lahf
bound
mov
ret
out
jmp
add
add
sahf
fcmovbe
lret
lock
scas
pop
add
test
sbb
jmp
sub
xor
mov
and
iret
pop
inc
mov
pop
shrb
ds
mov
add
clc
sbb
inc
je
nop
jl
lcall
ljmp
sbb
mov
movsb
int3
cmp
shll
mov
insb
mov
adc
out
xor
add
out
xor
sbb
adc
incl
jne
lret
imul
aas
xchg
pop
add
push
les
xchg
adc
xchg
push
ss
pop
popa
int3
fnstcw
cmp
push
pop
sahf
fs
pop
lods
ja
and
outsb
fs
fildl
or
or
jb
es
shrl
das
shl
xchg
ljmp
jmp
stos
movsb
or
js
inc
mov
gs
not
fisttps
jg
mov
dec
mov
sub
mov
xchg
fmuls
stos
xchg
popf
sahf
cli
push
mov
jb
aas
fcomps
cmpsb
sub
int3
cmc
pop
roll
ljmp
loopne
icebp
push
push
outsb
push
xchg
cwtl
push
inc
push
loope
push
ss
je
pop
push
out
adc
inc
adc
clc
negb
add
xchg
jl
pop
add
and
cmp
cmp
bound
push
fisubrl
push
mov
lock
push
push
ret
lret
cmpsl
daa
mov
adc
insb
scas
scas
or
les
jns
adc
ficompl
mov
sti
jbe
and
cmpsb
imul
test
or
je
adc
xor
sarl
fs
inc
pushf
jl
xor
dec
out
rep
test
loopne
cs
fbld
push
arpl
shlb
mov
mov
xchg
push
fwait
ljmp
popf
sbb
rorb
in
imul
sub
inc
js
imul
icebp
ficoms
int3
xchg
cmp
ljmp
js
testl
mov
xor
inc
stos
pop
int3
pop
xlat
jnp
faddp
sbb
imull
cmp
call
lahf
pop
xlat
call
arpl
sub
sbb
aad
dec
adc
test
addr16
cmova
fsubl
fdivs
movsl
mov
lahf
mov
push
xchg
mov
cmc
dec
dec
mov
xchg
cmp
cmp
jne
in
jl
clc
mov
push
nop
adc
mov
cmp
jno
mov
lods
pop
out
inc
jecxz
jnp
xchg
mov
cltd
mov
mov
add
lret
sbb
popa
scas
fstpt
cli
adc
ficompl
cmpb
int
jne
jbe
sahf
out
or
and
xchg
rorl
daa
mov
push
dec
mov
das
dec
xchg
and
fisttpll
push
out
divb
fcmovnbe
xchg
adc
out
sbb
fnstsw
mov
je
nop
arpl
xor
pop
cmp
sahf
and
aas
sbb
push
inc
sbb
xrelease
negb
sarl
jnp
jne
sti
ret
mov
test
hlt
xor
push
stc
es
and
jmp
xor
fisubrl
sbb
push
pop
inc
test
cld
fcmovbe
add
or
mov
push
call
stc
xchg
and
out
mov
ficoml
out
lods
loope
add
jg
dec
push
lods
cmp
int3
and
popf
fisubrl
mov
mov
es
btc
or
lods
ret
sub
ror
or
lea
sbb
inc
subb
pop
out
das
in
mov
cld
leave
mov
xchg
test
mov
cmc
inc
pop
mov
xchg
aas
sub
pop
xchg
bound
or
inc
repnz
imul
cmc
outsl
cmp
mov
push
call
add
ret
or
push
adc
and
pop
lahf
add
inc
inc
xor
mov
int3
out
pusha
dec
ret
gs
mov
es
rclb
stos
mov
cli
aam
es
mov
xlat
cmp
lret
insb
int
in
jnp
sbb
push
test
mov
xchg
xchg
cmpsb
and
daa
lahf
xchg
rorl
add
in
imul
mov
outsb
out
gs
test
dec
cltd
push
sbb
mov
lea
pop
es
jnp
in
jg
aas
and
daa
sti
pop
xor
sahf
jl
outsb
pop
jb
sbb
mov
popf
aam
mov
xchg
ror
popa
mov
xor
popf
dec
jae
mov
aas
jbe
pusha
push
jno
dec
clc
or
aaa
mov
loope
inc
sbb
inc
cwtl
int
pusha
shlb
test
add
xor
xchg
ljmp
lods
xchg
cli
aad
jmp
xor
out
sarb
mov
xchg
outsb
aam
mull
add
sub
mov
pop
cmp
pusha
cs
pusha
and
imul
mov
dec
cli
into
sbb
rcrl
test
loopne
jl
inc
addr16
push
and
lret
mov
jae
dec
xor
shlb
pop
xchg
test
mov
dec
mulb
jns
imul
sbb
push
dec
mov
mov
xor
test
pop
sarb
out
sbbl
push
loope
fsts
ss
movsl
or
xchg
push
push
out
fs
jbe
sub
rclb
mov
sti
and
out
adc
mov
enter
jle
mov
sbb
stc
lret
js
movsl
xor
adc
inc
loope
mov
sub
fildl
push
cmpsb
push
pop
sbb
in
jno
jo
xchg
cli
mov
mov
sahf
je
in
je
jnp
addb
and
outsb
fwait
lahf
pop
jae
dec
sbb
mov
push
mov
push
insb
inc
outsb
cmpsb
fmul
mov
test
test
mov
push
add
lahf
int3
incb
mov
ja
dec
sbb
xor
xor
mov
pop
sub
push
aam
data16
xchg
add
ja
mov
repnz
sub
mov
das
popa
and
out
add
jnp
mov
cmp
jno
loop
xchg
xor
int
add
hlt
xorb
jle
aam
dec
jo
adc
add
xor
sub
mov
das
xchg
xor
mov
push
pop
and
jle
jmp
aaa
sub
mov
mov
inc
into
mov
sbb
dec
icebp
inc
fistl
sti
addr16
inc
jl
aaa
mov
mov
xchg
mov
xor
into
cmp
dec
out
push
sbb
jo
inc
test
push
lcall
add
rep
arpl
pop
into
jg
lahf
add
cs
cmp
inc
xchg
cld
sbb
lahf
pop
fnsave
mov
inc
jge
stos
lea
pop
jle
adc
pop
addr16
cmp
xor
leave
add
loop
push
mov
dec
mov
mov
int
pop
push
insb
mov
jns
xchg
rcrb
jp
mov
and
pop
in
pushf
mov
mov
xchg
fistps
sub
shlb
enter
shll
add
das
out
mov
jnp
movsl
cmc
fwait
aaa
add
in
adcl
mov
pop
push
cmp
mov
mov
js
mov
sbb
mov
cmp
adc
inc
sub
cmp
add
mov
mov
fdivr
rcrl
in
xor
mov
pop
nop
xor
sbb
mov
dec
mov
pop
pop
out
dec
xlat
mov
insl
lock
cmp
sbbb
xor
imulb
mull
popf
ret
cmp
mov
aas
loop
push
jo
jmp
jge
outsl
pop
add
pop
ret
testb
repnz
and
cmp
jno
mov
je
jg
test
xorb
sbb
xchg
loop
mov
jnp
je
sub
mov
xor
lds
xor
cmp
mov
lret
push
add
iret
pusha
sbb
or
dec
mov
out
out
cmp
cmp
popfw
lcall
pop
das
lret
fs
aas
dec
or
push
imul
pop
xor
inc
icebp
stc
fistpll
aad
call
add
xchg
sbb
nop
adc
aas
mov
jecxz
xchg
and
pop
dec
fcoms
cld
es
cmpsl
out
xlat
gs
lret
daa
mov
jbe
push
inc
xchg
or
aaa
jge
adc
cmp
mov
jge
and
cmp
popf
int3
int
hlt
fsubl
shll
into
mov
cmp
leave
pop
jnp
repnz
les
sbb
mov
cwtl
inc
std
pop
inc
shlb
gs
outsl
xor
filds
das
mov
daa
dec
dec
out
jnp
adc
adc
sub
scas
movsl
pop
push
lods
adc
mov
das
mov
and
mov
xor
ds
outsl
mov
xchg
rorb
scas
jecxz
sbb
cmp
jae,pt
jb
fistps
outsb
jl
push
mov
mov
adc
cli
cmp
aaa
xchg
sbb
in
dec
mov
loop
xor
clc
jns
into
rcll
xor
insl
jb
frstpm(287
adcl
not
fxch
jl
cli
jge
add
mov
dec
mov
jp
test
out
enter
popf
in
push
cld
js
lret
pusha
dec
addr16
cmp
push
jns
xchg
push
fs
jle
dec
push
sbb
adc
mov
cmp
sub
fistpll
lret
mov
orl
test
outsl
pushf
sub
arpl
lea
push
xchg
inc
sahf
insl
outsb
sahf
or
insb
jg
jmp
cmp
mov
sbb
movups
mov
push
jbe
xor
adc
ret
nop
mov
frstor
sub
test
xor
xchg
dec
inc
and
mov
xor
sahf
mov
insl
xchg
popf
fiaddl
jno
dec
and
nop
mov
mov
mov
loope
cmpsl
sbb
jnp
scas
push
pop
cmp
or
ret
pop
rorb
stc
mov
fs
cmp
lea
pop
cmp
data16
and
popa
int
xor
inc
sub
repz
andb
and
int3
inc
jle
dec
pushf
push
mov
mov
lahf
jmp
jp
in
jo
loopne
test
inc
rorl
sbb
call
scas
movsl
sub
cmp
xchg
mov
fsubrs
pop
lea
in
push
adc
cld
outsb
or
mov
adc
pop
rclb
add
pop
mov
ljmp
or
mov
testl
inc
or
and
notl
xchg
add
ljmp
cwtl
dec
add
rcll
lds
in
not
int3
lahf
cs
xorb
es
iret
movsl
and
jae
pop
jecxz
jns
data16
sbb
and
enter
xchg
repnz
pop
cmpl
imul
jg
xor
rolb
mov
xor
stc
jns
int3
clc
popa
jae
jo
aaa
cltd
add
loopne
sub
push
mov
ljmp
xlat
repz
fdivr
sti
sub
mov
rorb
mov
sbb
mov
int3
or
dec
xchg
cltd
movsl
push
sbb
push
hlt
cmp
fsubl
cmpl
dec
pop
push
mov
xchg
and
in
push
mov
cmc
std
mov
int
popf
push
shl
pop
insb
out
pop
jnp
mov
xor
imul
inc
into
push
hlt
mov
jg
lods
xchg
jmp
ljmp
mov
xor
sub
cmp
lret
lea
xchg
or
mull
push
daa
inc
imul
insb
bound
push
sti
mov
sbb
stos
push
add
xchg
cltd
pusha
push
add
movl
test
int
cmp
inc
inc
xchg
sbb
fcoms
mov
cmp
inc
imul
iret
std
push
adc
ficomps
push
movsl
pop
cltd
leave
insl
jle
xor
inc
push
xchg
lods
fsubrs
adc
mov
pop
lret
cmc
sub
or
ja
aas
cmpb
push
push
aad
mov
jge
pop
lea
and
inc
test
add
adc
push
negb
sbb
outsl
cmc
cwtl
xchg
jae
loop
mov
les
pop
mov
sbb
inc
cld
cmp
jb
mov
mov
loope
pop
pop
movups
jne
jp
outsl
push
loopne
add
cmp
or
stos
sub
outsb
mov
and
and
cmp
enter
fwait
sbb
call
lcall
lret
arpl
out
mov
dec
fnsave
pushf
xchg
mov
fsubrs
popa
jle
popa
imul
cld
fs
mov
sbb
sub
daa
or
sbb
das
mov
lcall
aam
cmp
add
pop
sub
inc
cs
cmp
cwtl
les
pop
mov
popa
leave
movsb
mov
mov
aaa
pushf
je
outsl
dec
jl
inc
adc
mov
jb
movsb
imull
cld
xchg
fwait
sahf
or
xchg
lea
fildl
add
and
sub
test
lds
pop
cmpsl
shrl
cmp
clc
rolb
inc
mov
cmpsb
js
rorl
aaa
adc
dec
jns
in
and
das
adc
sbb
and
push
xchg
jb
sbb
xchg
stc
pop
jmp
negb
fdivr
fildll
stos
testl
mov
or
push
pusha
aad
adc
insb
gs
hlt
cmp
mov
fidivl
inc
out
ror
push
adc
jno
les
xlat
or
daa
cmp
sub
sahf
push
insb
or
call
mov
fwait
arpl
imull
pop
sub
adc
sub
lods
and
mov
popa
clc
mov
mov
push
lock
and
xchg
les
mov
sbb
adc
divb
popf
lds
dec
fdivs
push
cwtl
cmp
cmpsl
jge
repz
dec
hlt
sub
loope
mov
lds
mov
push
inc
xchg
sub
sbbl
or
mov
mov
fsubl
fsubrl
fdivl
pusha
cmp
cltd
dec
push
fsubl
mov
jp
or
ret
icebp
jae
out
shlb
test
adc
mov
jecxz
xchg
dec
pop
pop
xchg
push
inc
dec
out
in
icebp
insb
mov
testb
fwait
ds
je
xchg
js
les
sti
xchg
mov
std
leave
lods
les
push
push
jp
je
inc
icebp
push
outsl
pop
lcall
sti
cmp
jae
sbb
popa
jl
or
pop
aas
xor
jo
xchg
sbb
int3
cmp
pop
or
xor
xor
je
je
cld
xchg
cmp
repnz
scas
daa
mov
xor
mov
scas
pop
pop
fwait
mov
sub
bound
ss
mov
push
int3
dec
pushf
cmpsl
lods
inc
addl
jno
mov
popf
imul
jmp
filds
jle
dec
mov
rcr
lret
iret
aam
inc
adc
jae
clc
popf
jge,pt
lods
pop
ss
pushf
in
test
xchg
repz
inc
dec
into
arpl
fnstcw
mov
pop
repnz
lahf
mov
sub
mov
ret
cmp
mov
dec
mov
aad
out
ljmp
or
mov
fisubl
mov
xlat
mov
cmc
mov
jecxz
xor
loope
and
adcl
dec
dec
or
xor
add
loope
nop
out
add
or
push
push
push
out
dec
sbb
pop
mov
clc
inc
dec
fstpt
cmp
out
push
jnp
loopne
idivb
stc
mov
movsl
int3
leave
lahf
inc
test
jo
sbb
enter
or
cmp
sahf
daa
mov
inc
mov
jl
and
jg
sbb
idiv
pop
inc
dec
xchg
adc
repnz
or
and
mov
inc
mov
int3
mov
sahf
and
mov
loopne
and
mov
dec
xor
rcrb
fs
cmpps
lods
dec
pop
gs
jne
in
es
push
popf
in
cmp
shlb
stc
jmp
mov
add
cltd
int3
mov
or
bound
sub
cmc
fs
push
lcall
and
inc
xchg
pop
dec
add
jp
hlt
cli
add
pop
aam
xchg
jg
mov
fcmovnbe
in
add
fldcw
lcall
mov
mov
aam
je
mov
fadds
scas
jne
popf
jbe
jmp
xchg
inc
sti
into
push
loope
push
pop
cmp
loopne
enter
outsb
data16
add
out
aad
dec
add
sub
clc
jae
add
push
sbb
jae
stos
mov
sub
fistps
mov
ja,pn
adc
in
add
mov
dec
fsubs
movsl
sbb
mov
add
mov
mov
stos
rcll
and
arpl
mov
xchg
push
lret
mov
rcl
xor
sub
push
dec
xchg
or
cmp
cmp
add
std
pop
lock
stos
in
addb
ret
gs
in
xchg
cmp
popa
and
test
sub
push
and
daa
jne
and
shrl
icebp
and
dec
loopne
xchg
and
xchg
js
jb
les
push
dec
cmp
adc
jbe
hlt
cmp
ljmp
xchg
loopne
xchg
aas
sub
jl
aad
inc
rcrl
mov
dec
xor
imull
mov
cmpsl
pop
sbb
pop
loopne
ds
mov
add
sarb
or
int
into
sub
mov
mov
fisubs
das
sbb
int3
inc
mov
sahf
sub
dec
cltd
pop
inc
xchg
xor
xchg
out
rcrb
outsl
cmp
out
lock
adc
xchg
stc
inc
decl
int
mov
xchg
adc
mov
scas
shr
cmp
into
or
les
sbb
movsb
sti
in
pop
mov
int
pushf
aam
cmp
mov
es
sbb
enter
out
sub
mov
mov
fimuls
dec
xchg
ds
sub
and
outsb
outsl
add
pushf
jo
cmc
push
rclb
pop
xchg
je
insl
cmpsl
cmp
add
mov
sbb
dec
jecxz
sbb
or
loope
es
jg
std
cltd
xchg
iret
pop
add
mov
repnz
push
call
pop
push
push
out
jecxz
lcall
aam
adc
scas
scas
scas
adcb
adc
dec
clc
add
or
adc
sbb
sbb
repnz
aas
pusha
fisubl
fidivrs
and
jo
pop
and
fiadds
xor
stos
dec
mov
loop
jg
ja
xor
sbb
jge
lea
out
mov
mov
lods
pop
and
popf
mov
jae
mov
ljmp
out
and
dec
in
pop
sbb
xor
scas
iret
cmpsl
push
and
addb
int
rcll
jo,pt
xchg
ds
xchg
dec
ljmp
or
cwtl
fadd
or
push
and
ljmp
pushf
mov
or
dec
test
sbb
sahf
push
pop
aad
dec
idivl
xchg
adc
push
or
push
push
inc
test
stos
jmp
lea
movsl
clc
inc
idiv
nop
inc
mov
sbb
jge
dec
pop
test
rclb
pop
push
test
into
std
in
inc
imul
sub
orl
out
inc
or
inc
das
lcall
lret
adc
sub
fildll
inc
add
test
push
pop
push
jg
dec
cmpsl
dec
sbb
rcll
jp
aam
icebp
nop
test
std
mov
sbb
mov
inc
cmpsb
enter
jne
outsb
fidivrs
lods
es
pop
push
stos
dec
xchg
in
test
and
push
idivb
mov
roll
jne
xor
out
movsb
mov
ret
pop
repnz
pop
sub
push
int
lds
inc
rcrl
pop
movsl
shll
jns
int
add
hlt
inc
lahf
fists
xlat
mov
sub
imul
mov
mov
add
pop
movsl
cwtl
stc
fcompl
sti
into
mov
jp
mov
fisttps
dec
xor
add
test
repnz
sarb
std
mov
cmp
scas
insb
mov
inc
dec
push
mov
lcall
ffree
jbe
dec
push
xchg
fidivrl
ret
push
cltd
adc
pop
sbb
sahf
sar
mov
fdivl
mov
inc
inc
push
mov
jns
xchg
roll
mov
fldt
sti
xchg
xchg
jp
or
xor
jg
add
ja
inc
and
outsb
pop
jl
pusha
xor
test
inc
out
inc
jg
push
pop
jl
or
lock
fnsave
insl
push
push
or
cmc
mov
fcomi
jl
sub
xchg
push
in
lods
repz
inc
inc
mov
dec
sub
inc
xchg
inc
mov
repz
push
mov
pop
add
data16
lcall
ljmp
lods
add
jns
xchg
rcl
xchg
jl
jl
mov
mov
repz
jl
iret
xchg
cld
bound
icebp
movsl
cltd
shlb
je
in
or
lcall
lods
popa
pop
push
cli
pushf
test
cmp
popa
sarl
push
jae
rol
push
fldenv
jp
outsw
test
inc
add
stos
sbb
mov
cmp
rcrl
popf
dec
sbb
test
call
cmp
pop
mov
jo
mov
add
mov
inc
cwtl
push
sbb
jbe,pn
fidivrl
enter
clc
cmp
pop
lret
sar
loope
mov
jns
repnz
scas
jo
ficomps
xchg
rorl
sbb
xor
es
add
pop
pop
jmp
movlps
sub
imul
scas
lahf
xorb
sbb
cmp
int
fstps
add
and
in
fldt
sub
in
mov
ret
push
std
mov
pop
insl
std
insl
or
es
or
hlt
test
packuswb
dec
xor
pop
scas
sub
repnz
adc
fnsave
mov
xchg
cli
dec
mov
pop
jmp
jl
adc
filds
loope
or
lods
mov
xor
mov
xor
fstps
jge
mov
sub
out
jnp
lds
add
dec
arpl
repnz
std
enter
repnz
pop
xchg
dec
jl
mov
cmc
add
jmp
lea
mov
dec
ret
daa
inc
xchg
out
int
lret
or
xchg
rol
jp
dec
fucomip
fs
mov
jae
pop
dec
xchg
leave
in
mov
adc
call
popf
out
dec
ss
mov
ss
subl
stos
aad
push
cs
jle
aad
test
sbb
and
sub
int3
mov
jle
cli
movsl
jae
and
jne
add
xor
xor
sub
xor
pop
dec
jnp
mov
pop
lock
pop
fdivl
int
sahf
xor
pop
xor
loope
test
and
aas
imul
popf
xchg
incb
xor
mov
mov
add
inc
clc
sub
in
pop
fbstp
fidivs
sub
lock
push
xor
inc
lea
sbb
arpl
push
movsl
fmull
dec
dec
scas
mov
adc
int3
jne
leave
dec
xor
adc
push
push
pop
leave
bound
jge
xor
mov
push
xlat
fcomi
adc
cld
sub
adc
adc
cmp
mov
outsb
push
push
clc
push
adc
add
aas
out
dec
xchg
repz
dec
mov
out
xor
pop
mov
fs
pushf
fwait
inc
inc
mov
sbb
or
sub
popf
push
stos
mov
and
sbb
icebp
jo
push
ljmp
jne
inc
mov
gs
push
fildll
in
or
fisubl
cmp
pop
cmpsb
nop
jo
loop
aam
cmp
cli
aam
jns
sub
or
push
adc
idivl
adc
adc
adc
sarb
inc
jns
shrl
fidivl
out
adc
fdivp
inc
ret
pusha
inc
dec
add
sub
stos
shl
jmp
xor
xor
or
pop
jne
stos
in
xchg
ss
clc
mov
add
scas
cmp
xor
inc
aad
std
cmp
mov
sbb
leave
add
cmpsb
xor
add
pop
in
out
pop
mov
push
sub
imull
aam
imul
push
cmpsl
sbb
add
sub
push
mov
fwait
push
lcall
inc
push
fs
out
jae
iret
add
lret
faddl
popf
popa
and
pop
or
inc
inc
js
movsl
shrb
jmp
out
xor
cwtl
mov
mov
dec
add
popa
mov
rcrl
jnp
loopne
sahf
movb
in
inc
adcl
dec
mov
aad
sbb
mov
clc
mov
mov
in
mov
jb
mov
dec
cli
xchg
mov
sub
cmp
cmc
out
test
sti
jb
ds
insb
insl
gs
push
mov
fdiv
mov
out
jb
mov
pop
mov
add
cltd
mov
lods
dec
mov
in
leave
faddl
adc
xor
mov
inc
lock
adc
lods
inc
xor
mov
stos
inc
pop
lret
lds
pop
aaa
popa
sbb
pop
lods
fwait
test
fcomps
leave
ljmp
mov
jge
repnz
imul
sahf
sub
add
repz
cmp
je
rcll
into
idivl
jae
mov
negl
lea
imul
mov
and
jne
and
ds
pop
pmaxub
cmpsl
add
jo
addb
repnz
adc
xorb
fs
scas
and
mov
dec
add
cwtl
mov
mov
les
sbbl
xchg
jne
andb
inc
push
and
or
gs
jmp
fwait
stc
push
loope
scas
pop
cld
in
jle
dec
pop
sub
cmp
cmp
lea
jg
jge
jg
shl
cli
outsl
nop
xchg
xchg
mov
pop
add
leave
or
out
dec
lods
out
lods
aas
xchg
sbb
fimuls
pusha
shlb
sti
add
mov
repz
jmp
inc
add
loop
loope
das
hlt
dec
lock
ffreep
mul
sub
xchg
loope
add
adc
in
movsb
test
fld
loopne
rep
test
pop
outsl
xor
mov
xchg
enter
pop
or
and
mov
rcrl
rclb
and
xchg
loope
xchg
outsl
pushf
mov
lcall
xchg
adc
xchg
mov
shll
cli
daa
jge
insb
xchg
scas
dec
pusha
arpl
sub
sahf
aaa
add
mov
add
loope
out
fisubs
ret
dec
mov
test
cmp
jnp
rcrb
outsb
mov
xchg
outsl
loop
xchg
stc
lock
and
flds
mov
push
cmp
cld
xchg
mov
mov
into
pop
pusha
or
jb
cltd
insl
shll
push
jg
jns
dec
cmp
add
adc
sbb
mov
imul
xchg
out
jg
sbb
pop
enter
stos
gs
repnz
sub
orl
jg
sbb
mov
mov
jmp
lret
fimuls
in
std
sub
pusha
mov
bound
sub
push
add
jmp
xor
mul
lds
fcomip
out
repnz
pop
mov
push
mov
dec
xchg
leave
inc
mov
jecxz
xor
cmc
lahf
push
movsb
nop
iret
mov
ret
xor
pushf
ds
shll
into
pop
xor
dec
or
push
jp
ja
hlt
dec
xor
or
out
insb
and
or
inc
add
sbb
push
push
push
sahf
xor
pop
pushf
insl
cbtw
mov
push
and
in
pop
jnp
dec
mov
inc
lret
idiv
xlat
lds
ret
xchg
push
push
ss
lods
out
mov
insb
aad
icebp
mov
pop
leave
in
rolb
sbb
icebp
leave
fmul
lds
mov
hlt
mov
xchg
xchg
data16
bound
shl
call
cmp
pop
scas
out
add
andb
mov
sbbb
lahf
jge
mov
adc
adc
dec
inc
fstpl
xchg
xchg
das
push
jge
cmp
cli
hlt
subb
push
cltd
lcall
aam
cltd
test
mov
fstl
add
sub
add
dec
add
push
or
push
shlb
xchg
push
cmp
faddp
sbb
mov
push
cmp
mov
popa
repz
stos
lahf
adc
gs
add
aad
fwait
dec
mov
jle
in
xchg
dec
jmp
mov
adc
and
int
sub
pop
pop
cmc
in
arpl
lock
mov
std
mov
inc
fsubl
pop
out
mov
push
negl
push
ja
sbb
in
fwait
ret
mov
dec
andb
movsb
jmp
lock
popfw
stos
in
adc
or
movsb
das
out
mov
pop
loope
fsts
xchg
sbb
dec
imul
lods
cmp
hlt
or
sbb
outsl
or
imul
jge
push
cmp
inc
or
adc
rcl
xchg
scas
inc
stos
sub
xchg
mov
test
push
repnz
mov
scas
std
test
stos
lea
cmpsb
aam
test
cmp
mov
push
pushf
sub
or
ss
lret
aaa
jo
dec
jnp
div
jecxz
pop
hlt
and
xor
int
gs
add
loope
in
pop
jmp
aad
cmp
in
pop
xlat
add
xchg
jbe
dec
adc
pop
out
adc
out
popf
and
adc
pop
shlb
aaa
add
pop
int
aas
test
jg
or
iret
dec
sub
sub
lret
fidivrl
jb
loope
mov
cltd
push
ficoml
jmp
je
es
gs
arpl
pop
jp
les
out
jnp,pt
add
mov
and
xchg
inc
mov
mov
fldenv
push
push
frstor
rcrb
mov
xchg
dec
push
jge
cmp
pop
jo
icebp
movsb
mov
mov
sbb
mov
sbb
div
mov
stos
andl
vmovlps
decl
push
mov
add
xchg
mov
pop
push
loopne
sub
vxorps
outsl
jg
aas
xchg
dec
jg
out
or
xlat
inc
gs
mov
and
xchg
lret
roll
mov
pop
ret
hlt
xor
fisubrl
jecxz
adc
mov
jl
mov
jg
lock
jbe
aam
clc
sbb
hlt
mov
cmp
or
in
mov
push
push
insl
fdivs
ljmp
loopne
int
scas
dec
out
lods
mov
lcall
push
lahf
jns
mov
repz
ljmp
js
xor
push
xchg
mov
fwait
sub
clc
or
sub
xchg
mov
push
or
inc
in
pop
mov
es
imul
cmp
mov
shl
mov
imul
inc
mov
nop
cltd
test
pop
imul
pusha
in
dec
jge
jne
inc
loopne
addr16
dec
mov
mov
jb
inc
in
andb
repz
aaa
mov
jl
test
inc
jg
les
aaa
cld
and
cmovbe
jmp
xchg
cmpsb
inc
sbb
fistpl
pop
xor
ret
pop
fld1
aaa
mov
pop
inc
lcall
insb
cmp
dec
xchg
xor
or
cli
adc
subl
mov
sub
xor
add
sub
cmp
pop
hlt
iret
lds
mov
aaa
inc
movsb
push
andl
and
pop
or
shrd
jbe
add
mov
or
pop
add
cmp
call
xor
repnz
fildll
xchg
or
cmc
bound
sbb
call
push
push
popa
jb
arpl
xchg
sti
lret
xor
sbb
cmp
mov
lahf
inc
adc
pop
and
jae
rcll
mov
xor
inc
das
adc
inc
or
cmc
ja
add
cmp
add
pop
sbb
fstl
in
mov
cmp
jbe
repnz
rclb
dec
js
nop
and
jle
mov
je
adc
test
aas
mov
and
lods
mov
movsb
hlt
cmovb
aas
xchg
mov
add
in
aam
dec
es
pusha
push
mov
mov
adc
and
mov
jge
aad
xor
jmp
mov
out
mov
xchg
jb
or
addl
jbe
mov
popa
imull
mov
xchg
and
mov
ficompl
xor
sub
cmp
mov
mov
adc
xor
cmpsb
stc
inc
pop
adcb
fwait
cmp
push
mov
daa
ffree
jnp
inc
sbb
xor
out
jne
cmc
sbb
sub
roll
icebp
cmpsl
stos
cmc
sbb
imul
setne
pop
jnp
dec
movsl
adc
add
ficompl
enter
xchg
imul
lock
mov
mov
aad
jne
mov
dec
add
jbe
imul
fisubrs
insl
add
adc
leave
xor
and
jns
test
sbb
jb
je
cmp
sti
fists
lods
jp
roll
rclb
xor
pop
in
push
jge
mov
test
lea
xchg
jb
or
and
and
mov
aaa
jae
lods
push
xchg
jnp
sbb
shl
jg
ds
mov
sub
addr16
fldcw
sbb
push
inc
lcall
inc
add
xlat
xor
fwait
nop
aad
inc
pop
lods
adc
in
cmp
aaa
sub
cli
int
aad
aam
mov
arpl
mov
jge
clc
sub
movsl
and
leave
inc
iret
out
insb
sub
arpl
bnd
or
xchg
adc
mov
xor
jne
jl
popf
out
bound
mov
adc
mov
scas
ja
sbb
icebp
scas
in
push
ja
xchg
jle
std
jl
out
jmp
mov
adc
push
test
jb
out
sbb
mov
push
jg
and
xchg
push
hlt
mov
lds
cwtl
sub
mov
fidivs
cmpsb
jp
js
sahf
mov
push
repnz
mov
mov
lret
sbbb
mov
xor
je
aas
ja
lods
fisttpl
sbb
add
fbld
cltd
es
insb
jnp
popa
addr16
fnstsw
xorl
or
jb
mov
fadds
pop
in
ss
and
icebp
xchg
xchg
mov
movl
push
scas
sub
std
xchg
and
dec
inc
inc
ja
dec
sti
mov
stos
stc
ret
push
scas
xchg
decb
and
push
dec
adc
dec
in
jne
jge
sbb
cmp
push
xchg
test
jns
or
cltd
mov
shlb
dec
mov
int
lds
and
outsb
mov
inc
mov
pop
push
mov
mov
cld
outsb
inc
xchg
imul
cmp
sub
cmpsb
jle
scas
sub
dec
mov
int3
insb
rclb
sbbb
das
hlt
aam
cmp
push
rorb
or
adc
xor
xor
jno
xor
add
daa
xchg
adc
mov
insb
hlt
and
fstps
mov
jl
mov
ss
xchg
addb
jb
push
popf
gs
dec
xchg
mov
mov
sbb
cmpb
insb
in
dec
adc
stos
int3
roll
std
pushf
sbb
lahf
inc
mov
xor
add
mov
cmp
mov
jno
inc
dec
outsb
xchg
aas
in
mov
movsl
adc
mov
lahf
ret
jb
int3
cmpsl
frndint
cmc
fstl
fimuls
stos
xlat
rcl
add
cmc
xchg
cmp
mov
rolb
fildll
inc
lret
test
jns
mov
xor
push
xchg
stc
xor
movsb
jmp
push
cltd
mov
mov
fidivl
adc
hlt
xchg
mov
test
lret
sub
movsl
cmp
pop
cmc
ret
int3
sub
outsb
push
and
fwait
jmp
push
mov
loope
sbb
or
sub
and
or
test
dec
fwait
mov
pminub
pop
div
xchg
inc
call
jg
xchg
add
dec
mov
or
sub
stc
outsb
scas
in
stos
repnz
dec
ja
shl
or
shlb
pop
sbb
cmc
addr16
jg
je
sub
movsl
mov
js
mov
imul
fsubrl
fldt
jb
pop
push
and
mov
sub
vshufps
pop
mov
ds
jge
popf
int
and
testl
sub
or
imul
mov
pop
push
sub
out
push
lea
imul
jb
insl
je
sar
add
inc
cli
lea
bound
aas
xchg
cltd
xor
or
inc
mov
sub
adc
mov
pop
mov
adc
push
enter
jl
sbb
xchg
push
stos
mov
cmc
pop
into
inc
xor
adc
mov
insb
xor
mov
icebp
out
xchg
jecxz
push
iret
push
sbb
jae
mov
push
jns
in
pop
nop
adc
push
jmp
jae
mov
leave
fcmovnbe
pop
arpl
lds
and
and
cltd
sbb
xchg
jb
inc
test
cmpl
addl
test
push
xchg
pop
enter
xchg
jg
fwait
out
or
xor
or
inc
and
sbb
imul
or
sti
fwait
or
les
pusha
fdivrl
int
out
fs
ds
cmp
sub
dec
mov
xchg
push
shlb
lahf
cld
mov
sti
aad
mov
aas
cmp
cmpsl
fdivs
sbb
mov
aaa
xor
cmp
jg
adc
in
shlb
and
popa
jb
imul
adc
cltd
push
ror
dec
pop
pop
fwait
and
sub
mov
and
push
lods
loop
pop
xchg
imul
or
insl
enter
pop
enter
pop
data16
mov
adc
in
mov
das
cmpsl
fcompl
popl
pop
bnd
sbb
jl
hlt
jbe
fnstenv
wbinvd
jbe
or
mov
inc
insb
fwait
rsqrtps
in
cmp
in
hlt
xor
jne
sub
xchg
xchg
vmwrite
lahf
add
nop
push
jl
or
jae
rolb
inc
inc
aaa
cmp
inc
jmp
ret
dec
ret
ret
dec
aad
push
movsb
mov
mov
jno
mov
add
and
bound
sbb
push
daa
xchg
inc
ret
mov
adc
ret
aam
insb
cmp
inc
loope
inc
or
testl
jp
cmc
mov
inc
mov
push
lahf
fwait
mov
cmp
dec
dec
push
xor
outsb
imul
adcb
out
pop
fisubrl
int
mov
stc
aaa
jnp
sarl
cmp
repz
add
jp
loop
insl
hlt
aad
inc
cwtl
cmpsl
scas
jne
inc
add
xchg
dec
imul
jecxz
cmp
dec
xor
add
add
out
inc
push
aam
lret
push
jmp
aam
dec
mov
push
loope
lret
mov
mov
scas
jbe
das
in
test
mov
scas
mov
leave
imul
stos
mov
sti
jle
mov
pop
pusha
and
push
dec
xor
ret
sbb
xor
xor
mov
add
fbstp
fsts
out
sti
inc
fsubl
or
dec
xchg
xor
push
movsl
cmp
jbe
ds
push
call
pop
arpl
xor
inc
xchg
inc
addr16
pushl
add
jns
fsubr
popf
and
adc
je
daa
push
push
pop
rorl
out
mov
fbld
pop
movsl
push
rep
out
and
mov
ficomps
stc
lds
arpl
and
popf
ficomps
mov
push
adc
imul
es
into
push
jle
adc
mov
mov
inc
cmpsb
push
loopne
and
fmul
mov
xchg
sub
aad
push
ds
outsb
inc
push
das
clc
xchg
rcrb
mov
pusha
call
sbb
mov
cltd
xchg
lret
mov
outsl
imul
and
lcall
sti
mov
ror
mov
push
sub
jp
mov
mov
mov
and
lds
and
mov
aam
lods
lcall
mov
movsl
cmp
pop
cmp
test
subb
lahf
mov
jae
loopne
xchg
je
out
fwait
mov
mov
out
dec
inc
bound
scas
xchg
mov
mov
xchg
and
scas
enterw
push
cmpsb
jge
or
out
sub
movsb
imul
sub
adcb
xor
inc
cmp
popf
adc
cmp
fdivrl
lods
cmpsl
ret
test
jge
and
jg
mov
popf
mov
push
adc
shl
int3
and
arpl
xchg
rcl
dec
push
xor
mov
outsb
in
push
cmovnp
push
orl
fstpt
pop
sub
and
iret
jp
adc
xor
or
mov
xor
fs
xchg
sub
ror
sti
sbb
mov
les
lret
cmp
cmp
inc
push
cmp
stos
leave
push
paddusw
pop
push
dec
pushf
aad
add
adc
jp
dec
repnz
xchg
das
push
mov
insb
pop
imul
jg
mov
fwait
movsl
cmc
push
mov
mov
out
test
jne
sti
in
inc
pop
xchg
ret
mov
add
mov
sbbl
push
xlat
mov
mov
test
icebp
or
dec
add
in
jbe
in
test
cmp
repnz
xchg
negb
fnstsw
jb
inc
nop
popl
mov
test
mov
mov
and
imul
add
push
shrb
shl
data16
xchg
mov
andl
dec
push
enterw
dec
jecxz
cmpb
xor
cmp
jo
enter
push
in
xchg
bound
mov
adc
loope
das
jl
dec
popa
cmp
ret
mov
mov
xorl
out
push
js
std
xchg
loopne
add
jp
outsb
stos
data16
int3
daa
in
pushf
sahf
mov
mov
clc
pop
pusha
scas
nop
imull
nop
fnstcw
adc
inc
fwait
lahf
roll
pop
and
adc
das
test
mov
mov
cmp
aas
in
jle
push
mov
sbb
cli
inc
test
xlat
outsb
sbb
mov
mull
jg
fiaddl
fnsave
subl
jnp
dec
dec
mov
adc
mov
mov
mov
jge
and
add
cmp
sbb
xor
aaa
push
dec
add
enter
cmpsb
shrd
cmp
pop
adc
loopne
inc
sub
int3
es
or
sbb
test
push
das
inc
adc
adc
mov
std
mov
inc
inc
nop
jg
adc
sti
lock
fsubrs
push
mov
mov
pop
js
mov
or
jmp
jp
movb
add
out
sub
gs
push
stos
jle
inc
xchg
sub
adc
sub
mov
jge
sbb
cmp
jmp
sti
call
cmpsb
cli
and
dec
and
adc
add
sub
pop
dec
mov
sbb
pushf
dec
stos
aas
stos
or
sbb
push
sar
lcall
fstpl
cmpsl
push
mov
dec
outsl
rolb
add
mov
ljmp
pop
ljmp
and
cmovp
mov
je
and
add
jae
pusha
xchg
xchg
add
pop
pop
xchg
stos
arpl
inc
xchg
inc
dec
pop
add
adc
stos
and
lahf
mov
push
je
arpl
ss
or
inc
xchg
sti
or
inc
inc
loop
inc
xchg
pop
lea
mov
aam
cld
adc
nop
jae
leave
or
cmpb
jo
jp
xor
add
fistl
into
gs
fbstp
cmp
cmpsl
arpl
or
adc
lret
mov
out
lea
mov
jne
mov
xor
mov
jp
jg
leave
lahf
loop
jg
mov
sub
test
mov
mov
inc
push
push
sbb
loopne
sbb
xchg
loopne
clc
iret
mov
icebp
and
mov
int3
arpl
adc
lret
mov
inc
pop
sarb
int3
or
mov
repz
mov
pop
roll
push
push
mov
and
dec
and
nop
jle
daa
adc
mov
push
lea
sub
jl
mov
in
inc
jg
filds
or
ja
mov
mov
push
mov
push
imul
in
cld
stc
cmc
cwtl
and
jge
inc
out
dec
inc
cwtl
shlb
mov
into
dec
fwait
lcall
push
or
mov
lods
mov
cmp
inc
xchg
lret
test
mov
insl
push
outsb
jb
aad
les
mov
pop
shlb
xor
les
nop
rolb
in
jnp
bound
push
loope
xor
sbb
in
into
fistpl
xor
mov
mov
leave
insb
pop
mulb
jb
pop
push
mov
adc
push
xchg
aad
fstps
mov
or
xchg
stos
jmp
daa
cmp
imul
ljmp
jmp
jnp
into
jmp
std
xchg
add
daa
mov
jno
cld
imul
sbb
pop
pop
std
pop
cs
adc
add
call
sub
rcr
out
cmpsb
into
dec
cmp
push
mov
push
mov
mov
jp
jo
add
fstps
inc
sub
inc
fisttpl
or
lret
push
and
push
mov
cmc
bound
add
dec
pusha
loopne
in
dec
add
dec
pop
imul
pop
add
test
xor
cmp
inc
popa
push
fildl
mov
adc
loop
outsl
popf
pusha
pop
int3
mov
cs
dec
stos
xor
cwtl
xchg
call
or
mov
jae
lahf
mov
or
rcll
imul
inc
pop
jl
cmc
scas
jns
sub
adc
mov
popa
out
sbb
ds
movsb
mov
dec
mov
mov
cs
rolb
ror
adc
cs
cli
pusha
pop
lods
fwait
sub
aad
shlb
cmp
mov
push
mov
jno
xorl
pop
mov
ret
test
xor
push
in
in
aad
je
fsubr
adc
setge
add
xchg
pushf
dec
mov
rdtsc
mov
jns
jmp
scas
xchg
xchg
out
ret
xchg
dec
push
cs
stos
mov
mov
sti
mov
lock
iret
and
jns
test
mov
movsb
add
out
fisttpll
test
mov
loope
pop
mov
fisttps
dec
out
adc
stos
pop
repnz
scas
push
outsl
addr16
mov
xor
push
fsincos
movsb
iret
sbb
lods
cmp
push
xchg
mov
dec
arpl
clc
fnstenv
movl
mov
test
es
inc
insl
dec
lahf
mov
js
repnz
mov
mov
mov
and
sub
inc
dec
mov
pop
rclb
push
call
fsubrl
mov
xchg
jg
or
sahf
mov
popa
inc
mulb
sub
adc
inc
inc
movsl
shll
sub
cmc
repz
int3
pop
mov
cmp
test
jecxz
pop
and
dec
add
add
lcall
mov
jnp
iret
addr16
push
ja
test
cmp
outsb
lahf
push
rol
or
mov
jp
and
dec
test
sti
inc
aad
popa
loopne
mov
xchg
popf
pop
popa
cmp
inc
ds
jns
idivl
dec
lret
lcall
enter
add
mov
hlt
mov
add
iret
pop
jbe
jbe
test
jmp
int3
pop
daa
lock
divl
xor
jp
add
call
cmp
mov
mov
pop
xor
dec
cmpl
cwtl
xchg
jae
jo
stos
mov
xor
hlt
dec
and
call
jae
scas
bound
push
mov
shlb
sbb
xchg
xor
dec
test
inc
mov
jmp
dec
sarb
sub
test
mov
or
mov
das
cmp
in
push
test
xlat
cmp
daa
cmp
arpl
loop
cwtl
and
adc
fwait
test
push
inc
jge
nop
pop
loop
pop
adc
cmpsb
pop
xchg
pop
push
adc
mov
adc
mov
pop
fisttps
cmp
mov
sbbb
popl
pop
mov
jbe
inc
xchg
jl
sbbl
addl
sbb
mov
lods
ds
mov
test
js
jge
rcrb
cmc
mov
pop
stc
adc
das
dec
lods
mov
sub
fidivl
mov
pop
pop
mov
fisttpl
cmpsl
pop
mov
and
std
sbb
inc
or
or
mov
xchg
lahf
mov
mov
in
sbb
dec
cwtl
jle
out
mov
iret
negb
sbb
aad
shll
aaa
pop
mov
outsl
nop
add
stos
outsb
dec
jno
fs
jle
sbb
call
shll
out
lea
or
sbb
mov
shlb
mov
in
cs
insl
mov
insl
lock
push
cmc
leave
sub
sbb
stos
cltd
xchg
xor
jge
or
xchg
add
jae
jno
std
call
cli
insl
aas
push
mov
cmc
imul
out
out
inc
fadds
push
jp
or
pop
jns
pusha
imul
mov
push
out
adc
aaa
loop
add
cmp
xchg
icebp
xchg
push
pop
xlat
adc
mov
popf
clc
out
dec
clc
pushf
bswap
jl
inc
sahf
or
xchg
add
cmp
push
xchg
test
shll
mov
xchg
insb
int3
or
mov
fwait
push
push
lahf
daa
pop
insb
es
rorb
bnd
mov
cmovg
mov
sbb
cwtl
shl
inc
negb
add
dec
ret
popa
in
fisubs
cmp
rclb
cmc
scas
ficompl
jecxz
shl
mov
in
sbb
jmp
jp
push
push
pop
xchg
rcrb
inc
cmpsb
popa
sub
inc
jmp
jne
cmpsl
cli
sbb
pop
add
sbb
in
xchg
jecxz
add
pop
vmovntps
sub
out
sbb
or
scas
dec
addb
mulb
jle
movsb
mov
and
or
dec
outsb
xor
add
out
in
loope
cmp
sub
rcrb
xchg
inc
xor
pop
shl
xor
stos
repz
icebp
or
dec
push
or
loop
scas
inc
enter
pop
pop
sub
fwait
movsl
lahf
pop
jno
pop
xlat
lods
gs
nop
cmp
mov
cmpl
push
jns
outsl
rcll
icebp
data16
fsts
and
jl
dec
add
cmc
adc
mov
fsubs
push
sbbl
sahf
push
mov
sbb
dec
pop
xchg
test
adc
jmp
pop
pop
fldenv
mov
inc
sbbl
fisubl
mov
repnz
pop
andl
sbb
xchg
daa
stos
iret
inc
xchg
pop
adc
add
in
lcall
mov
fidivrl
lret
fcmovb
push
adc
push
jg
xchg
ds
jmp
iret
mov
inc
and
sub
push
out
add
mov
jbe
fmuls
mov
xchg
ja
pop
ljmp
loope
icebp
xchg
out
loopne
pop
mov
pop
shll
and
fsubrs
shr
in
mov
push
aaa
xchg
enter
out
dec
fwait
lret
adc
inc
mov
in
repnz
xchg
stc
out
sbb
subb
sub
sub
rcr
mov
or
fsubl
push
sub
push
add
iret
or
ss
and
and
cmp
sbb
lods
pop
fbld
stos
xchg
out
lcall
mov
mov
push
pop
adc
dec
add
cmp
repz
stc
or
inc
jbe
or
pop
sbb
dec
jg
stc
pop
leave
add
add
sub
push
out
adc
shl
repz
dec
in
cwtl
hlt
stos
sbb
ficoms
mov
iret
out
sahf
cs
lret
mov
test
inc
addb
pushf
cmp
cmp
dec
mov
xlat
hlt
dec
add
aas
lcall
std
jne
cmc
and
aas
xchg
dec
jl
mov
pop
repnz
je
scas
stos
pop
mov
inc
dec
lods
stos
adc
xor
sbb
aas
adc
call
mov
pop
fcompl
loop
xor
cli
int
testl
subb
scas
jbe
push
cltd
cmpsb
into
jbe
pop
dec
nop
jbe
imul
enter
dec
jmp
dec
int3
insl
dec
sub
and
mov
in
inc
xchg
cmp
or
push
out
cltd
pop
or
imul
ss
bound
popl
adc
jnp
negb
mov
jns
cli
mov
enter
ljmp
and
data16
into
test
bound
aaa
xlat
pushl
inc
mov
lods
mov
xor
xor
pushf
xchg
pop
or
mov
test
add
jno
in
jmp
push
movsl
std
mov
dec
daa
cmpsl
inc
dec
loope
xchg
jo
cld
add
movsl
pop
xor
jp
jbe
mov
into
ljmp
mov
sarl
jno
pop
add
scas
inc
sbb
in
jle
int
arpl
out
lds
push
bound
jne
fistps
mov
lret
outsb
mov
mov
movsb
in
movsl
arpl
gs
mov
lcall
xlat
xlat
jp
pop
mov
inc
cwtl
cmc
out
rcr
lods
xchg
lds
mov
sub
add
call
mov
and
and
insl
xor
and
jecxz
push
adc
std
clc
int
mov
movsl
add
js
lret
xor
gs
jae
test
fwait
cmp
jo
or
and
add
or
lds
fdivrp
pop
mov
mov
jno
adcl
and
mov
push
adc
insb
lea
mov
testl
mov
js
or
test
das
ret
mov
ds
test
stos
cmc
mov
push
iret
movsw
cltd
dec
pop
and
sub
pushf
xor
gs
jbe
xchg
jmp
icebp
xchg
pop
jmp
sub
stos
stos
sbb
mov
inc
cmpsl
roll
xchg
mov
inc
and
xchg
xchg
mov
lods
jo
sub
xchg
add
stos
push
jl
int
loopne
pop
clc
adc
movsb
lock
into
pop
shll
adc
sarb
mov
lret
loop
jne
or
mov
or
addr16
pop
xchg
adc
push
jge
mov
push
add
sub
mov
mov
lahf
xchg
mov
ret
or
adc
sahf
jge
jl
xchg
xor
mov
cmpsb
mov
adc
mov
les
mov
xor
mov
ret
cmp
shrb
call
adc
cmp
add
daa
movsl
dec
fadds
push
pop
jl
sub
cld
jae
fldcw
fldenv
dec
inc
call
add
ja
mov
fstpt
jecxz
push
aad
inc
jnp
fimull
arpl
mov
cld
fwait
pushf
lcall
aas
data16
pushf
xchg
and
or
insb
push
pop
push
sub
or
mov
loopne
repnz
pop
push
cwtl
data16
das
xchg
cmp
sub
leave
nop
leave
sbb
jnp
sub
xchg
sbb
ret
sarb
mov
pop
xlat
outsl
ja
cli
test
mov
sub
ja
fisubrs
rep
cmpsb
clc
jl
dec
push
fisttps
out
adc
lahf
imul
roll
fiadds
scas
ss
hlt
cmp
pusha
add
pop
das
mov
movsl
adc
cli
popa
cmpsb
push
das
and
ja
aaa
scas
and
add
lret
rolb
sbb
xor
jns
jle
call
pop
and
inc
mov
cmpsl
sarl
sub
and
jae
xchg
or
dec
and
push
mov
push
cld
lods
jns
inc
shll
int
push
sti
sub
cltd
popf
jae
scas
test
dec
cli
mov
fmull
movsl
jg
popa
stc
std
aaa
sub
call
add
lock
lds
inc
add
loope
leave
out
ljmp
rcrb
adcl
jbe
lods
movl
mov
mov
pop
cli
xchg
xor
xchg
and
pushf
dec
or
push
add
inc
insl
pop
lods
movl
lea
adc
mov
and
sub
push
test
stos
mov
xchg
inc
jnp
in
cmp
mov
mov
pop
into
jl
mov
push
lods
jae
mov
push
movsb
adc
pop
popa
xor
mov
dec
aad
mov
movsl
push
jecxz
sub
sub
test
mov
cmc
cs
mov
mov
jae
pandn
mov
push
jg
gs
fsts
inc
or
push
jno
push
sub
in
shrb
push
cmpsb
mov
loopne
rcrl
int
cmp
add
and
mov
mov
and
xchg
mov
pop
xor
push
push
pop
fidivs
push
jecxz
or
arpl
mov
ss
or
das
inc
rcrb
cwtl
cmp
fsts
mov
or
sbbl
das
cltd
push
outsb
push
mov
repz
fcmovu
adcl
cmp
sub
xchg
xchg
mov
mov
cwtl
ds
jns
leave
pop
mov
pusha
jp
cmp
cli
dec
mov
bound
popl
ret
popf
call
cmpsl
xchg
push
decl
test
pop
xchg
xor
and
popa
lods
dec
test
dec
xchg
xor
les
sarl
aaa
adc
fmull
fstps
jmp
cmp
add
inc
mov
jecxz
jle
loope
inc
adc
addr16
fistpll
add
jns
xchg
push
add
xchg
loopne
hlt
ret
out
dec
sub
xor
test
mov
clc
scas
inc
sbb
adc
lods
sub
inc
cmpsl
jne
aaa
or
lds
fdivs
mov
rcl
mov
adc
mov
add
test
insb
jp
lds
outsl
adc
pop
dec
sub
inc
inc
jns
dec
cld
inc
ficompl
loop
adc
push
sbb
mov
push
orb
int3
outsb
cmp
xor
and
test
pushf
dec
in
enter
fs
ljmp
aad
mov
sub
imul
int3
jbe
push
test
test
add
in
leave
aas
ds
std
loope
addb
pop
cmp
dec
enter
inc
aaa
outsl
sub
adc
or
or
jl
leave
and
mov
jl
add
sbb
outsb
inc
cmp
outsl
jg
mov
mov
inc
js
test
cmp
adc
movl
lea
cltd
xorl
pop
xchg
mov
jo
add
ret
adc
push
test
aam
add
pop
inc
fucomp
out
xchg
pop
mov
int3
shrl
jo
pop
mov
dec
mov
jle
daa
sub
int3
sub
into
sub
ljmp
jo
js
fcomp
rclb
mov
fmulp
out
stos
push
gs
and
mov
out
sub
fwait
shrl
sbb
sti
or
jb
mov
test
and
xor
push
stos
fcomip
pusha
push
pop
dec
decl
pop
cmp
lret
push
xlat
push
sub
test
xchg
and
loop
xchg
gs
out
cli
sub
addl
int
scas
push
movsl
mov
xlat
jbe
imulb
mov
pushf
in
adc
mov
sub
sbb
divb
inc
sti
mov
stc
xor
sub
dec
jb
mov
movsl
lods
sbb
out
test
mov
pop
xchg
icebp
movsb
addr16
mov
mov
mov
jl
mov
popa
xchg
cs
ja
movsl
inc
or
enter
ficoms
nop
and
pop
add
jecxz
adc
jmp
inc
into
test
dec
lds
sbb
fimull
call
stos
test
push
cmp
fbstp
les
mov
inc
outsl
int
dec
addr16
leave
xor
shrl
pop
and
addr16
std
fnstenv
jnp
jmp
mov
dec
outsb
mov
cs
jg
xor
arpl
sub
insw
decb
jae
faddl
sub
nop
cmp
xchg
mov
sbb
and
jne
int
lahf
xor
andl
je
pop
fmull
add
fisttpl
sbb
mov
sbb
lret
sbb
sbb
inc
lea
or
mov
push
inc
gs
stc
mov
lods
in
mov
sbb
mov
push
adc
rolb
call
cmp
in
sbb
dec
std
xor
js
into
push
cmp
fnstenv
mov
xchg
loope
repnz
fidivrl
pushf
dec
xorb
lds
bound
pusha
xchg
les
and
xchg
lgs
sbb
cmp
xchg
add
dec
dec
dec
fcompl
pop
cmpsl
lods
imulb
adc
pop
mov
push
fisttps
mov
jae
cmp
mov
ja
popf
jnp
scas
inc
sbbl
lods
test
inc
push
rcrb
mov
cld
lds
test
jl
je
cmpsb
mov
cmp
mov
shll
mov
add
lods
mov
mov
lea
insl
outsb
adc
adc
sbb
rcll
pop
imul
ret
push
fadds
cltd
std
sarb
gs
inc
cmpsb
jg,pn
sbb
jno
imull
jl
ficoml
inc
fwait
jle
inc
fs
jo
aad
xor
mov
pop
fisubrs
and
mov
push
jnp
mov
movsb
out
int3
sub
popf
leave
shl
mov
xor
pop
inc
outsb
sbb
cmp
xor
rorb
push
jno
sub
cmp
dec
fwait
mov
lock
int3
aam
inc
add
enter
pop
sbb
mov
mov
or
or
fxch
add
pop
subb
daa
sbbl
test
xlat
daa
pop
inc
jmp
jae
out
pop
mov
ss
ja
add
std
shrl
jmp
lods
ja
cmp
lret
mov
mov
push
sbb
rcrl
dec
add
sbb
cmpsb
pop
arpl
jb
sub
ds
inc
shl
ss
ret
jmp
in
inc
fsubs
test
mov
push
sub
pop
dec
push
lods
outsl
gs
ljmp
push
push
daa
cs
xorl
arpl
pushf
lds
jo
mov
mov
movsl
repz
cmp
clc
xor
add
in
dec
mov
cmp
adc
ret
add
movsb
adc
xchg
orl
mov
lcall
arpl
hlt
jo
jg
inc
cld
pushf
push
add
xchg
cmpsl
push
inc
jnp
jle
push
dec
test
jl
mov
scas
jp
ret
inc
fiadds
push
or
cmp
adcb
and
cmp
outsl
aam
stc
inc
rol
hlt
push
mov
push
sbbb
add
test
add
les
lret
lret
aam
iret
inc
enter
or
lods
mov
das
int
imul
testl
adc
lods
jl
mov
dec
jmp
cmp
test
sbb
push
pop
mov
fsts
xchg
jbe
lds
aaa
sub
hlt
repz
pop
mov
mov
dec
lahf
insb
lret
lods
or
pop
fwait
sub
sub
idivl
in
sbb
fs
sub
mov
shlb
rclb
lretw
push
jns
and
push
shlb
inc
and
leave
popa
js
cmp
jmp
sbb
adc
test
nop
es
xor
mov
pop
rorl
cs
dec
jmp
mov
roll
inc
push
inc
sub
loope
dec
push
push
cmp
pop
test
popf
mov
add
push
neg
jge
sub
jnp
mov
daa
jns
xor
stc
in
xchg
test
call
or
fwait
add
and
clc
add
mov
dec
xchg
ds
adc
pop
jb
ret
cmp
clc
sbb
push
nop
je
rcrl
hlt
sbb
jle
loopne
add
les
dec
pop
mov
loopne
test
jecxz
movsl
jbe
mov
mov
mov
mov
mov
xor
add
xor
pop
std
faddl
loopne
loopne
cmc
leave
ss
lods
inc
scas
and
cmpl
lock
rcrl
push
stos
cltd
dec
lods
lahf
cs
or
push
mov
mov
clc
gs
addr16
cmpsb
jg
push
bound
mov
hlt
aad
dec
ljmp
mov
lods
push
add
jo
jmp
scas
sub
dec
pop
ljmp
mov
dec
add
push
ds
mov
loopne
xor
mov
decl
cmp
xchg
jns
xchg
movsl
mov
mov
pop
sbb
push
xchg
mov
mov
inc
sub
mov
pop
sbb
dec
pusha
fwait
mov
pop
cmpsl
xchg
mov
sub
popf
mov
int
cmpsl
push
icebp
lods
fdivr
pop
mov
lock
xchg
mov
stos
lret
push
pop
cmp
xchg
lock
xchg
shrl
outsl
ja
mov
movsl
xor
mov
and
or
push
inc
mov
rclb
out
pop
push
inc
in
fistpll
loop
in
cld
push
mov
xchg
xor
adc
dec
pop
jo
pop
outsb
ljmp
sti
jbe
xor
or
pusha
sarb
fdivp
test
js
seto
inc
fistl
lea
push
and
jp
sbb
jne
and
pop
ret
xor
xor
in
nop
inc
push
pusha
push
fistl
push
dec
scas
jp
fs
das
negl
repz
out
enter
hlt
mov
lods
or
pop
aaa
sahf
arpl
and
lahf
les
pusha
xchg
test
pop
push
mov
vpunpckhqdq
rolb
push
pushf
xor
pop
loopne
pop
sub
mov
aad
int
incb
arpl
ss
mov
pop
or
mov
fisubl
pop
adc
lret
imul
leave
call
ret
pop
mov
mov
es
pop
mov
ja
test
push
sub
cs
lock
cmc
cwtl
dec
adc
shlb
inc
add
push
add
cltd
mov
addb
cltd
mov
nop
nop
inc
mov
push
sbb
aaa
xchg
and
sbbb
inc
adc
push
rclb
mov
pop
pop
repnz
in
push
mov
inc
jnp
scas
ljmp
xchg
cmc
inc
xor
fcmovne
jo
lahf
call
inc
push
lds
jo
sbbb
iret
cltd
shll
test
in
out
cmc
jp
ja
addb
aad
cmp
adc
movsb
mov
sahf
mov
mov
cltd
add
out
aam
pop
test
orb
lahf
cmc
repnz
pop
or
in
cwtl
into
sub
pop
push
leave
das
out
mov
lcall
test
jle
push
test
or
mov
push
mov
xor
ds
or
sub
cld
imul
aaa
cmp
lret
adc
insl
push
bsr
cmpsb
lods
sbb
dec
mov
jmp
push
aaa
jle
insb
jae
cmpsb
sbb
jecxz
fnsave
int3
jo
jl
push
or
loope
push
jnp
push
movsb
sub
call
stos
xchg
jo
popa
and
mov
scas
jg
push
stos
test
jae
idiv
js
adc
add
fs
icebp
std
cmc
and
jnp
mov
call
dec
shll
iret
mov
sbb
pop
mov
repnz
orl
jecxz
xor
sbb
push
movsl
into
sarl
xchg
das
subl
aas
jl
mov
push
mov
inc
adc
jl
inc
pop
mov
mov
xlat
jns
add
jmp
sbb
mov
dec
xor
jp
sbb
maskmovq
es
lods
scas
mov
mov
push
aas
aad
add
sub
fstps
ret
xchg
and
sbb
xlat
xchg
xchg
out
dec
xchg
fadd
fbld
arpl
jo
lret
mov
push
rol
aad
or
mov
pop
dec
add
js
clc
jp
loope
dec
adc
jae
shrb
adc
dec
and
lock
pop
shl
lods
adc
out
pop
daa
daa
nop
jg
cltd
push
les
mov
loope
dec
mov
daa
js
call
adc
ljmp
xorl
shll
cltd
push
adc
mov
pop
aad
ja
push
xchg
loope
in
sbb
pop
add
xchg
ror
fwait
adc
call
or
or
jno
jnp
jbe
push
in
dec
and
and
adc
jno
add
push
xchg
icebp
and
pop
mov
mov
mov
dec
sub
lcall
cs
or
into
mov
jne
call
pop
jle
shr
jecxz
insl
mov
or
add
dec
rol
shll
add
mov
andb
adc
mov
xchg
jecxz
pop
aad
call
lods
fwait
cmp
aad
cs
aas
scas
push
mov
test
push
int3
pop
pop
jge
sbb
xlat
xchg
sub
inc
roll
mov
xchg
xchg
imul
or
add
enter
lods
outsl
rol
stc
add
imul
sarb
aaa
nop
cmp
or
inc
ret
mov
and
mov
cmpb
and
inc
cli
dec
dec
add
sub
outsb
test
sub
inc
push
jle
add
pop
cwtl
xchg
adc
call
sub
mov
jb
outsb
or
ljmp
xorb
adc
aam
loopw
cmp
jne
jo
adc
stos
cmp
dec
and
movq
inc
fsubrp
sub
fcmovnb
cmp
call
pop
cmpl
dec
dec
loopne
mov
pusha
or
addr16
mov
xchg
aam
aam
mov
arpl
in
cli
dec
shlb
jle
rcrb
adc
inc
cmp
jno
shlb
xchg
movsl
jb
sbb
les
dec
or
lret
adc
xchg
aaa
pop
push
aam
push
jbe
or
cwtl
sbb
cmp
pop
and
scas
ror
int3
adcl
xchg
push
sub
movsl
add
nop
mov
mov
jns
fcomps
jns
pop
notb
cwtl
in
notb
mov
push
xchg
mov
sbb
nop
out
dec
mov
xchg
pop
cltd
mov
pop
mov
xchg
sbb
iret
xor
ja
pop
leave
into
and
out
aad
shll
xor
ret
testb
jno
subb
and
rorl
mov
imul
dec
repnz
lods
outsl
mov
sbb
andb
cmp
jno
test
cmpsb
frstor
mov
adcb
mov
push
bound
push
xor
cmp
sbb
and
inc
insb
leave
loopne
push
push
neg
jns
xlat
jne
punpckhdq
mov
dec
xchg
mov
xor
jno
mov
jle
std
cmp
or
pop
les
fsubl
popa
sbb
or
out
add
add
mov
xchg
movsb
lock
jle
sub
mov
inc
aad
lds
and
dec
xlat
mov
loopne
fldenv
and
fxch
adc
pushf
xor
jmp
aam
fs
scas
adc
add
daa
xchg
add
dec
jno
sbb
pop
jno
mov
cwtl
loope
push
insl
inc
subb
xor
das
int3
in
lea
test
stos
lods
pushl
cmp
xchg
and
gs
inc
and
push
sub
imul
loop
inc
inc
inc
repz
stos
push
scas
std
into
xor
jne
adc
scas
jo
es
mov
mov
cmp
pop
cltd
inc
lcall
lds
std
mov
fmuls
mov
push
sub
notb
push
add
xor
je
dec
je
push
add
sbb
pop
orl
pusha
loop
pop
push
stc
xchg
iret
hlt
mov
lods
adc
xor
lcall
iret
mov
rcr
xor
gs
enter
cmp
lahf
mov
mov
les
inc
or
xchg
dec
mov
mov
fdiv
enter
push
fwait
mov
push
in
push
cwtl
inc
pop
enter
and
fistpl
sbb
push
jecxz
push
xor
shrb
sbb
sbb
stc
test
pop
dec
jo
mov
add
lods
or
sub
inc
mov
sub
std
popa
jmp
or
and
sbb
and
testb
xchg
xchg
sub
inc
les
ljmp
xchg
loop
aad
and
sub
ljmp
push
ss
cli
aas
jp
cmpsl
std
sub
data16
lret
and
mov
fisubrs
enter
mov
inc
jne
xlat
or
mov
lret
jnp
pop
or
push
test
ljmp
fwait
sahf
mov
outsb
or
mov
movsb
jl
aaa
sbb
movsl
adc
inc
sub
lahf
push
pop
sbbl
mov
dec
stc
fcmovnu
pop
xor
xchg
pop
adcl
jae
inc
shl
adcb
mov
dec
sbb
push
out
repnz
sub
or
scas
test
xchg
lahf
pop
mov
mov
testb
mov
cmp
jo
cld
scas
and
popa
cmp
push
cmp
out
mov
and
cs
adc
and
inc
jg
pop
add
fsubr
jmp
push
stos
cltd
clc
push
inc
lods
cwtl
test
push
sub
cmp
add
ret
into
fmulp
pop
or
xchg
and
stc
adc
sbb
add
mov
repnz
lahf
stos
inc
push
jns
test
push
loop
int
cmp
pop
lea
mov
or
jae
add
inc
and
mull
jge
and
jg
push
in
xchg
cli
and
lahf
mov
fbstp
ret
es
int
sbb
loopne
inc
cmp
cmpsb
divb
in
insb
jg
scas
adc
cmp
xchg
adc
add
push
push
sbb
jg
fnstenv
lcall
hlt
aad
in
pop
mov
inc
mov
out
hlt
arpl
scas
loop
cmp
cmp
shll
add
cmp
dec
in
daa
mov
mov
mov
and
stc
mov
pop
push
movsb
inc
dec
or
scas
and
pushl
ret
cwtl
std
sbb
pop
push
cmc
inc
push
pop
and
iret
enter
popf
xor
popf
lcall
aaa
enter
jmp
mov
mov
lods
inc
bt
inc
xchg
lods
arpl
mov
cmp
fwait
dec
jo
subl
movsb
int3
push
xchg
push
pop
and
cmpsl
mov
call
sti
outsb
std
push
xor
inc
cmp
or
testl
xchg
push
jns
pop
mov
sahf
in
dec
out
sbb
xchg
stc
adc
xchg
aaa
pop
mov
imul
jne
repnz
pop
bound
pusha
addr16
cmpb
pop
ret
popf
mov
mov
dec
mov
clc
mov
mov
lock
xor
adc
push
xchg
push
sbb
es
ret
mov
test
movsl
hlt
pop
ret
loopne
dec
mov
sub
sahf
test
push
jae
adcb
shrl
les
fstl
pop
mov
push
jmp
push
xchg
sbb
aaa
mov
push
dec
add
test
cmp
sub
sub
xchg
jbe
js
movsb
test
int3
pushf
pop
in
daa
xchg
fdivrl
sar
out
sbb
loopne
cmp
xchg
int
mov
or
or
rorb
jmp
aaa
popa
into
cmp
popa
rorb
mov
daa
mov
movsb
je
insb
das
and
mov
cmpsl
out
pop
dec
mov
pushf
push
sbb
mov
stc
mov
test
lods
insl
xor
pop
inc
shl
or
mov
mov
xor
mov
cmpl
in
test
lock
mov
push
pop
les
mov
fnsave
aam
popa
add
pop
stos
cltd
ja
push
or
imul
xchg
or
or
jecxz
add
pop
repz
or
sbb
push
and
adc
lds
add
cmpsl
mov
cs
daa
outsl
mov
stos
and
lret
popa
out
out
inc
jbe
fimull
pop
add
ret
jae
cmp
mov
iret
jl
sub
cmp
sub
stc
mov
inc
mov
movsl
cli
in
push
push
imull
mov
int3
adc
push
repz
outsl
and
lds
jl
mov
leave
adc
pop
fsubrs
icebp
cmpb
cmc
aaa
mov
imul
test
xchg
or
jl
das
sbb
mov
fistpl
xor
cld
pop
jns
and
add
cmp
fiadds
js
iret
mov
pop
imul
dec
fs
inc
inc
inc
add
lea
pop
inc
lods
arpl
mov
cwtl
or
pushf
jo
pop
mov
jl
inc
pushf
xchg
jg
gs
add
test
das
mov
mov
sub
aam
sarb
mov
push
jno
leave
dec
orb
xor
and
mov
stos
and
lds
mov
xor
xchg
xor
outsl
mov
movsl
adc
lcall
mov
hlt
or
insb
xor
insb
jno
jg
andl
xorb
call
add
in
xlat
pop
repnz
ret
sub
jp
fildll
pop
clc
andps
out
mov
das
add
and
or
and
mov
lods
and
add
leave
int3
in
mov
or
imul
enter
or
inc
das
addr16
loopne
jb
adcl
sbb
adc
out
sbb
xor
rcrl
cmpsl
gs
adcb
push
stc
enter
into
shrl
xor
sub
inc
clc
fbld
sbb
lock
pop
push
push
dec
shr
xorl
arpl
sub
pop
sub
cmpsb
mov
mov
push
enter
sub
cli
xor
aam
add
outsl
int
jae
mov
pop
inc
std
subl
gs
iret
das
mov
test
sub
push
sbb
mov
aaa
cmp
nop
pop
sub
cld
ret
mov
aaa
pushf
sub
mov
sub
clc
or
cltd
out
out
pop
mov
nop
lods
js
sub
sub
push
push
push
dec
decb
fwait
add
xor
scas
sti
pop
mov
cld
lcall
sbb
pop
movsl
shlb
sbb
popa
or
fwait
jb
test
mov
scas
pop
dec
shlb
or
mov
out
mov
mov
xchg
out
jle
jb
icebp
mov
sbb
aam
lock
or
clc
popa
xchg
lods
icebp
mov
and
xchg
iret
sub
aaa
add
cltd
push
out
sahf
fadds
and
mov
dec
xchg
inc
sbb
dec
and
push
clc
adc
clc
xlat
cmp
scas
loopne
jne
add
lds
cmpsb
push
push
dec
out
cmp
cwtl
lods
pop
icebp
mov
or
mov
mov
jae
mov
cmpsb
push
cmpsb
mov
xor
sbb
cmpsl
mov
fdivrs
mov
xor
pop
xchg
call
and
mov
mov
jno
out
push
jno
inc
adc
inc
mov
sbb
jne
fidivrs
shr
sub
test
and
dec
push
leave
ss
das
cltd
bound
cmpsb
movsl
sub
sub
les
cmc
ffreep
int3
pop
ss
daa
cwtl
daa
jnp
sahf
mov
mov
sub
push
add
test
mov
inc
movsb
cmpsl
push
add
mov
pusha
ret
or
jecxz
jl
mov
adc
das
shll
rorb
dec
test
iret
cmp
sbb
imulb
fs
imul
mov
push
jne
cltd
in
inc
dec
dec
dec
ret
cwtl
test
mov
imul
dec
aad
insl
movsl
lods
sub
xchg
repnz
push
and
push
or
inc
in
pop
lahf
shll
push
jo
shll
mov
xchg
test
mov
jg
mov
adc
ds
nop
jmp
rolb
test
xor
les
mov
repz
pop
hlt
clc
xchg
add
inc
inc
lds
lahf
sbb
sub
pop
xchg
and
and
adc
push
imul
call
xor
jle
adc
and
cmp
mov
enter
pop
xor
mov
stos
sbb
outsl
and
inc
out
inc
cmpsb
repz
sub
push
dec
and
dec
rol
lock
pushw
pop
dec
push
push
mov
movsb
popf
enter
rolb
dec
and
push
sub
mov
xchg
rol
inc
aam
loope
pop
outsb
lods
daa
lcall
xor
aaa
out
mov
xchg
pop
pop
mov
push
jo
iret
stos
jae
jmp
fnsave
xchg
gs
cmp
and
imul
mov
popl
or
je
hlt
repz
xchg
push
inc
push
sbb
lods
xchg
mov
push
call
xorl
cmp
add
stc
xor
jecxz
cmp
scas
js
jo
jb
push
push
lret
or
mov
or
daa
dec
popa
push
xor
ds
mov
and
fdivrl
xchg
test
dec
scas
subb
push
test
mov
xchg
int3
lods
pop
testb
adc
and
jae,pt
ljmp
nop
sbb
es
loop
sbb
loope
add
ja
mov
inc
add
or
or
cld
dec
mov
lcall
cmp
pop
xor
mov
push
sbb
addr16
sbb
lahf
sub
iret
pusha
cmpsb
out
pop
pop
sti
or
cs
lods
repz
movsb
add
dec
dec
sbb
pop
bound
cmc
das
data16
out
sti
js
mov
push
cmp
lahf
lcall
aad
mov
mov
inc
or
loopne
jmp
loopne
lahf
int3
mov
jne
jbe
repz
push
mov
xor
cs
xor
out
dec
test
jae
cs
pop
mov
outsl
pop
dec
xchg
push
sub
xorl
jle
insl
or
and
pop
add
jl
push
adc
jne
mov
mov
aaa
inc
cmpsb
push
addl
lods
add
outsb
arpl
mov
sub
jnp
fadds
shll
leave
ficomps
mov
out
repnz
shl
xchg
outsb
sbb
add
xchg
ret
jmp
daa
nop
ja
pop
aas
out
xchg
loopne
push
cmp
inc
inc
enter
push
mov
scas
push
sbb
jle
push
lods
xchg
adc
daa
insl
in
cmpsb
cmpsl
sub
out
lahf
jle
adcb
sbb
mov
push
leave
adc
jae
dec
pop
sub
inc
cmp
cmpb
pop
test
or
idivl
shrl
mov
test
dec
cmpsl
divb
xor
hlt
test
mov
jge
jp
jbe
mov
adc
adc
mov
ss
xor
push
and
mov
dec
ss
popf
pop
sub
pop
push
jne
flds
dec
es
ret
inc
popa
fwait
cmp
cmpb
and
dec
inc
sar
push
mov
jno
or
push
adc
mull
in
push
testl
gs
and
call
dec
xchg
repnz
sti
add
inc
mov
push
sbb
jge
inc
cmp
mov
sbb
cwtl
sahf
ljmp
cmp
push
jp
repz
bound
mov
mov
pop
pop
lods
jo
push
xor
push
stc
xorl
mov
inc
int
mov
outsl
mov
dec
and
lea
dec
jmp
out
mov
in
mov
adc
cmp
inc
pop
andb
insl
jmp
stos
stc
filds
adc
popa
add
cmp
push
ficomps
sub
std
pop
add
decl
cmpsl
mov
pusha
lcall
add
ret
xchg
jno
xor
mov
das
xor
mov
les
mov
lds
and
xor
lea
mov
out
mov
add
and
in
mov
sbb
es
pop
mov
insl
iret
sbb
sahf
ficompl
mov
or
leave
lock
jecxz
outsl
xor
mov
out
xchg
mov
ja
mov
push
xchg
pop
mov
imul
add
data16
call
mov
mov
mov
sbb
subl
push
or
mov
jle
fsts
aad
sbb
sbb
mov
lds
hlt
adc
cmp
jge
fwait
xor
xor
cwtl
leave
jb
jno
adc
fs
mov
sbb
sub
pop
sbb
daa
and
xchg
ljmp
push
dec
and
test
push
stc
and
fstpl
pop
popf
das
cmp
repnz
pop
mov
les
fistpl
jge
push
pop
in
stos
je
add
into
pop
sub
push
out
call
scas
es
jl
aam
push
jb
mov
iret
test
xabort
inc
shl
cmpsl
adc
or
push
and
jmp
inc
movl
icebp
inc
push
cli
lret
movsl
test
aaa
rcr
ljmp
and
in
push
das
and
adc
out
xor
xor
or
mov
xor
sahf
adc
mov
jnp
dec
loope
jns
adc
pusha
pop
xor
insb
scas
sti
in
sub
stos
mov
mov
lahf
jmp
daa
xor
cli
stos
lahf
arpl
sbb
bound
or
push
jg
and
mov
or
nop
xchg
scas
sbb
out
popa
or
add
add
push
mov
cs
lret
adc
test
jecxz
popf
dec
push
mov
lcall
push
or
cmpsb
adc
jne
add
push
fisttps
cmp
fiadds
jecxz
jne
adc
sbb
lods
dec
add
adc
repz
jecxz
mov
cmp
in
and
stos
xor
imul
aas
push
mov
fstpt
scas
push
add
pop
into
xchg
lcall
maxps
sahf
shll
add
leave
xchg
jns
dec
cmp
mov
loopne
rcrb
fisttpl
subb
shll
cmp
lea
lcall
ds
std
fists
ja
jbe
push
lcall
mov
push
mov
fisubs
xlat
test
js
stc
je
outsb
pushl
sahf
mov
xchg
add
add
fdiv
js
rcrb
xchg
and
jle
dec
popa
outsb
sbb
int
mov
mov
dec
shrl
bound
jae
daa
mov
js
ds
mov
mov
sub
scas
mov
xor
in
test
mov
jge
cmp
fadds
mov
jecxz
pop
push
ret
pop
into
not
push
cmp
and
push
or
das
xchg
xchg
mov
jge
stos
out
std
iret
pop
inc
jmp
or
and
hlt
int
imul
xor
lds
or
aam
or
xchg
push
mov
sub
pop
data16
xchg
push
mov
jb,pn
imul
rcl
lock
jp
mov
pusha
sbb
iret
cmp
in
rorl
xchg
mov
mov
push
lahf
jmp
cmp
in
jge
mov
scas
lret
mov
in
ds
test
jb
lea
stos
das
mov
ds
mov
mov
fistpl
test
incl
xchg
aam
js
xchg
lea
cmpsl
cli
jle
cmp
pusha
lods
inc
xchg
outsl
cmp
push
cmpsb
bound
scas
mov
lea
lock
add
sbb
stos
xchg
add
cmp
mov
add
shlb
mov
add
call
xorl
push
rcll
mov
out
cli
movsb
cmp
pusha
testl
cs
pop
call
out
push
out
or
and
mov
adc
or
and
shlb
std
cli
sbb
lret
inc
scas
push
xchg
push
outsl
mov
jmp
cltd
mov
fsubrl
fildl
test
sub
lods
push
mov
rcll
push
test
push
ret
add
cmp
cmpsl
inc
test
fisubrs
fwait
sbb
mov
jb
mov
or
xor
adc
inc
stos
stos
mov
jbe
mov
mov
mov
mov
lret
push
imul
gs
lods
shr
lock
pop
icebp
sbb
add
push
cmpsl
ret
push
or
fwait
into
sub
jno
sahf
mov
push
and
sub
add
and
pop
mov
mov
inc
ljmp
dec
mov
adc
cmp
dec
sahf
ds
inc
ds
js
push
cmp
push
xchg
push
in
popf
shlb
movzwl
mov
inc
jle
mov
push
out
mov
movb
push
leave
cltd
aaa
sub
imul
in
insl
sub
adc
push
shlb
iret
xchg
push
cmpsl
bound
mov
bound
jl
rcll
pop
loopne
aaa
fmull
test
enter
jnp
add
adc
xchg
bound
mov
lret
scas
pop
push
push
iret
lods
outsl
push
mov
jl
pop
add
or
repnz
cli
test
mov
subb
addr16
inc
push
jns
mov
or
cmpsl
jb
push
or
mov
push
mov
movl
shll
movsb
jb
les
fadds
stos
test
xor
addr16
jae
test
cmpsl
and
fmul
sahf
mov
lea
jle
cmpsb
mulb
aad
cmp
cwtl
xlat
out
adc
jecxz
test
and
mov
mov
push
push
push
jo
sub
mov
fstps
jge
or
dec
fisttps
lret
or
in
pop
dec
imul
icebp
mov
les
jne
out
xchg
mov
popf
int3
int3
je
xor
pusha
lret
adc
dec
cmpb
orl
shll
daa
loopne
sarb
sbb
jge
out
jo
incl
mov
dec
push
std
and
into
mov
outsb
push
es
out
sbb
inc
inc
lcall
das
pop
cmc
popf
jns
mov
dec
cmp
xchg
mov
ljmp
mov
orl
loopne
std
gs
pop
add
je
or
mov
out
scas
les
loope
dec
mov
push
sub
jnp
fldcw
mov
pushf
or
and
push
mov
push
push
mov
mov
sub
aad
lret
cmc
push
jae
je
push
stos
push
lea
jnp
jb
jg
sub
insb
add
out
fnsave
jns
cmp
test
mov
outsl
repnz
fnsave
jne
subl
pop
cmc
mov
mov
mov
push
dec
incb
fbld
sub
mov
mov
lcall
cli
jp
mov
nop
sbb
ljmp
pop
mov
push
cmp
pop
add
pushf
xlat
jmp
mov
jns
popaw
adc
pop
xchg
test
imul
jmp
call
ljmp
mov
es
inc
movzbl
mov
in
push
cmpsl
mov
adc
mov
out
daa
mov
jg
outsb
shrl
mov
jb
stos
mov
xchg
jp
stc
xchg
lds
ror
push
dec
lock
xchg
cmp
adc
sub
repnz
xchg
cwtl
inc
jp
sbb
sub
mov
shlb
ja
mov
sbb
xchg
push
sahf
lods
ljmp
xchg
or
mov
scas
mov
pop
in
adc
xor
sub
jb
cmp
lods
test
pop
test
mov
stos
mov
mov
lods
jl
dec
push
pop
inc
xor
cwtl
pop
pop
test
jno
insb
mov
hlt
scas
aas
call
or
mov
dec
add
pop
rcrl
es
push
sti
cmp
jne
hlt
pushf
pop
loop
fdivrl
daa
aas
in
and
icebp
fs
test
jnp
adc
sarl
pop
cmp
cmpsb
push
fwait
js
inc
test
inc
popa
mov
lret
stos
mov
imul
push
lcall
mov
sub
jno
xor
pusha
push
out
mov
add
ret
fldt
jmp
fldt
mov
jecxz
rorb
test
test
xlat
mov
adc
pop
and
push
pushf
mov
sub
adc
inc
and
popf
adc
leave
sahf
xchg
cmp
push
ret
xchg
stc
add
adc
test
cmp
pop
cli
xchg
cmp
mov
push
orl
xor
fwait
xchg
jb
pop
cltd
movsb
aad
icebp
pop
sbb
arpl
leave
lret
dec
outsl
xchg
mov
sti
out
sbb
outsl
cmp
mov
mov
popf
xchg
inc
les
sti
call
ret
hlt
mov
insl
jmp
sub
inc
push
sub
xor
xor
pop
mov
sub
mov
stos
mov
rcr
rcrl
push
fildll
adc
dec
cmp
dec
add
shrl
lds
mov
fnstsw
ret
push
push
loope
inc
in
xlat
filds
xchg
xor
addr16
stos
cs
sti
dec
ja
gs
shlb
add
push
and
ret
lock
dec
js
xor
mov
and
lcall
ljmp
adc
andl
sahf
or
mov
inc
add
mov
xchg
dec
adc
loopne
scas
jno
jne
fwait
adc
adc
or
bound
dec
outsb
repz
inc
sbb
pop
add
push
lock
adc
push
aad
push
les
int3
ja
hlt
mov
push
lods
xchg
xchg
add
pop
lods
in
sub
pop
jle
mov
xor
mov
mov
jmp
mov
scas
and
insb
cmpsl
dec
pushl
adc
cmp
push
scas
cs
outsl
adc
sub
xchg
andl
mov
icebp
or
fstpt
std
cmp
sub
repnz
in
pusha
fwait
cwtl
jns
notb
ds
pushf
inc
fstps
dec
jecxz
push
cld
lahf
add
outsb
pop
das
andl
lret
loop
inc
and
out
int3
push
jnp
pop
lcall
cmp
arpl
sbb
in
xchg
push
movsb
add
es
and
sub
incb
movsl
jp
je
imul
js
mov
and
adc
sub
mov
inc
inc
out
movsl
fcoms
adc
data16
mov
test
aam
lods
adc
fdivs
mov
adc
lret
std
je
dec
mov
adc
mov
xchg
xor
popf
aas
ret
test
outsl
cli
daa
mov
add
fisubrs
std
loopne
jmp
jb
add
cmpl
fs
test
xchg
fimuls
lock
adc
jne
daa
push
bound
outsb
call
cmc
or
sub
aam
in
sub
xchg
jl
xlat
aam
mov
out
jno
jbe
xor
pop
lret
xor
insb
push
add
into
fimuls
stc
cli
hlt
push
repz
cs
cmp
sub
mov
lock
icebp
mov
add
push
test
das
mov
xchg
or
in
fs
in
rep
lock
movsb
repnz
les
sbb
std
mov
pushf
xchg
sti
pop
sbbl
int3
pusha
sbb
xor
inc
pop
jo
fidivrs
dec
mov
xor
jne
cwtl
dec
ss
ret
int
lret
xor
enter
popa
jl
cmp
or
out
outsl
fimuls
jge
dec
adc
es
or
add
int
dec
cmp
ficompl
jb
out
loope
movsb
and
cltd
adc
xor
sub
icebp
movsb
iret
mov
xor
jo
test
inc
dec
cwtl
stos
call
add
popf
cmp
daa
add
jb
lret
inc
mov
inc
jns
mov
lds
fistps
pop
addr16
fiadds
pop
adc
lods
stos
loope
jb
int
xchg
sarl
inc
or
rcrb
mov
rcl
mov
aad
neg
xchg
sub
xor
cmpsl
or
mov
cli
mov
sbb
stos
cmp
fstpl
mull
push
fs
mov
xchg
push
pusha
pop
mov
iret
xchg
inc
lcall
pop
jl
pushf
mov
pop
mov
test
and
jl
sar
mov
add
xchg
inc
out
aas
mov
mov
lret
dec
mov
push
fsubrs
int
pusha
add
fldt
lds
adc
add
sti
mov
push
mov
mov
jns
decl
stos
push
mov
jmp
aam
sti
js
outsb
jecxz
ja
insl
xlat
rorl
repnz
and
push
xchg
mov
mov
sub
push
test
cltd
lock
pop
cli
fwait
scas
ret
std
fldl
nop
cmp
dec
mov
test
cmp
jne
xor
fildll
pop
push
push
nop
imul
int3
or
pop
pop
cmp
cmpb
xlat
sbb
mov
nop
daa
inc
out
lods
or
fidivrs
dec
out
jecxz
mov
xlat
mov
inc
dec
mov
add
fdivr
inc
inc
fadd
dec
sub
sbb
and
and
mov
sbbb
dec
popf
test
fcoms
sti
das
mov
mull
ficompl
add
pop
sti
jecxz
mov
adc
push
mov
inc
in
cmpsl
pop
inc
xchg
loopne
sarb
mov
data16
xchg
inc
and
pop
js
and
mov
rclb
sahf
jmp
pushf
inc
cmp
loopne
jl
repnz
in
and
cmp
daa
mov
mov
and
and
enter
lret
jb
test
arpl
jl
xchg
ds
adc
movsb
mov
mulb
movsb
inc
popf
fcom
pushf
xchg
pushf
sub
into
dec
out
pop
sbb
xchg
cli
xchg
jnp
push
pop
mov
lahf
jns
xor
popf
sbb
xchg
pop
ss
insb
shl
cmp
sbb
mov
flds
in
mov
sbb
in
movsb
add
dec
mov
xchg
jmp
push
out
je
aam
sub
xor
push
and
xchg
rcl
aas
cmp
out
and
clc
xchg
lret
out
daa
fldenv
icebp
subb
push
cmp
js
gs
mov
cmp
cld
jns
xor
jmp
push
dec
xchg
mov
or
aam
sti
hlt
test
int3
sar
adc
ljmp
push
out
push
nop
xchg
mov
jbe
pop
clc
mov
xor
inc
and
gs
fists
sbb
sbb
pop
jmp
test
mov
pop
test
adc
sahf
xchg
mov
scas
mov
les
mov
sub
add
fldcw
pop
lret
lock
or
shl
in
mov
xchg
xchg
cs
data16
mov
loop
xchg
stos
mov
dec
leave
xchg
jmp
mov
push
cmpsl
mov
mov
lock
lret
push
mov
sub
xor
lock
push
enter
jge
test
adc
inc
inc
xor
and
sbb
in
push
stc
test
pop
cmp
rcrl
xchg
add
lret
push
out
aas
outsb
add
cmc
repz
aaa
dec
and
pop
mov
xchg
cmp
xchg
leave
dec
pop
popf
xor
gs
pop
and
test
lret
cmpsb
jmp
fisttpll
hlt
imul
adc
das
pop
daa
dec
inc
daa
movsb
xor
add
movsl
aad
icebp
clc
jl
movsl
test
mov
cltd
test
push
xchg
or
xor
clc
imul
add
inc
imul
xchg
pop
das
test
es
lock
push
and
mov
sub
pop
pop
dec
xchg
mov
movsl
and
rorb
sti
xor
aaa
in
cmp
jge
dec
jge
es
xchg
jne
dec
stc
xlat
into
dec
popf
mov
mov
xchg
jno
or
push
dec
mov
sbb
or
mov
gs
test
sbb
inc
cmp
mov
jge
ret
int
insw
dec
fldcw
and
in
pop
cmp
cmp
sub
fdivrs
sbb
sbb
cmp
mov
aad
xor
xor
das
aam
ds
push
pop
xchg
jecxz
cmpsb
insb
inc
insl
popf
clc
stos
and
xchg
pop
arpl
fcoml
in
int
jns
inc
leave
sub
xor
jg
dec
je
in
outsb
mov
push
outsb
push
ret
cmp
lcall
fs
jmp
push
call
test
andl
in
fwait
in
or
andl
movsb
scas
xchg
sbb
mov
lret
call
sti
mov
nop
in
mov
add
imul
and
negb
adc
fisubrl
mov
jnp
mov
jge
add
push
push
fmuls
push
iret
xor
mov
jbe
ret
mov
out
imulb
aad
sub
fdivl
aaa
fiadds
clc
add
nop
inc
out
ret
pushf
pushf
add
sbbb
fildll
ja
std
pop
adc
jecxz
jp
add
xor
ss
jge
inc
lds
jns
push
ret
lret
cmp
arpl
or
pusha
out
jbe
ja
ljmp
jmp
mov
enter
and
jmp
jbe
and
jnp
xchg
clc
aaa
jae
dec
and
arpl
pop
cmpsb
push
clts
sub
aad
pop
and
pop
jno
jge,pt
sbb
mov
lret
rolb
add
cmp
cmp
xor
insl
and
out
push
and
sub
in
fs
jge
pop
out
add
dec
cmp
lcall
jnp
popf
fcompl
cld
mov
pop
pop
sub
shl
data16
hlt
iret
mov
icebp
cmp
iret
in
jnp
ret
lea
arpl
pop
faddl
sub
loope
sub
test
ret
shrb
mov
pop
sbb
por
test
pushf
ljmp
je
ja
ret
dec
xchg
jae
xor
and
or
dec
jbe
or
repnz
ds
in
daa
jp
xor
xchg
xchg
push
push
insl
int3
test
fs
sbb
in
adc
icebp
test
outsb
cltd
push
test
dec
or
mov
mov
mov
xchg
mov
es
adc
shl
rcr
adc
xlat
sti
pop
imul
lods
jbe
cmp
int3
ds
out
add
sbb
add
dec
xchg
test
data16
xchg
inc
or
js
call
fisubrs
int
jge
or
jnp
into
aam
divl
pop
call
or
xchg
inc
mov
das
inc
hlt
sti
and
movsl
inc
xchg
scas
lods
mov
pop
jo
push
pusha
jge
dec
filds
sbb
cmp
mov
ret
xchg
cwtl
xchg
fiadds
jbe
stc
lods
push
push
dec
xchg
popa
dec
in
repnz
fwait
jns
mov
imul
ljmp
mov
pop
cli
setp
sahf
inc
jp
repnz
outsl
lds
add
testb
lea
aad
cmp
push
sbb
mov
push
lock
daa
cmp
adcl
xchg
mov
sbb
popa
shll
das
mov
iret
push
loope
mov
scas
mov
or
popf
jecxz
iret
insb
cmp
in
dec
sbb
add
jo
push
cmpsb
es
pop
into
pop
std
add
int3
ffreep
test
mov
out
cmp
mov
fiadds
int3
loopne
sarb
cltd
or
dec
jecxz,pn
sbb
lods
out
fwait
divl
mov
loopne
pushf
lods
idiv
sub
pop
push
mov
repz
ret
shl
repnz
xchg
pop
mov
sub
push
call
les
incl
iret
insl
lock
and
icebp
movsl
in
adc
and
hlt
imul
and
lcall
in
mov
sbbl
cmc
sbb
push
inc
mov
imul
push
jo
sub
sti
es
lret
out
adc
xchg
jecxz
rep
push
and
mov
fstps
jg
stc
mov
adc
push
mov
fwait
or
inc
mov
cmp
add
je
imul
lahf
pop
adc
in
and
or
aad
or
jecxz
cmp
loope
ret
aad
sub
sahf
iret
int
jno
dec
icebp
mov
fsubr
jmp
xor
jp
in
sbb
push
sti
xchg
xor
sub
jae
or
aam
xchg
in
sahf
adc
push
movsl
popf
pop
jbe
dec
lret
mov
mov
adc
not
jp
ror
imul
pop
inc
inc
in
mov
shl
fisubl
add
xchg
mov
repnz
dec
in
mov
jbe
jmp
lock
and
leave
pop
iret
xchg
outsl
and
rcrl
fdivs
fdivrl
cmp
shlb
jp
xor
test
movsl
pop
or
inc
call
push
dec
lock
notb
sub
fld
pusha
bound
pop
cmp
in
push
inc
out
dec
fsub
add
stos
jmp
push
xor
push
sarb
jno
or
repnz
inc
sbb
test
out
jae
or
pop
fwait
loope
dec
mov
jl
mov
pop
jmp
mov
cmpl
and
sub
cmp
packuswb
iret
test
rcrb
cmpsb
ja
sub
jns
pop
out
subb
test
dec
dec
arpl
or
mov
cmp
mov
pop
pop
inc
add
fimuls
lock
scas
pop
pushf
cmpsl
push
and
test
pop
mov
cmp
movntq
and
xchg
xor
xchg
sub
shr
sete
cs
int3
cs
mov
sbb
dec
rcll
fs
aam
dec
out
sbb
pop
int
xchg
outsb
dec
inc
xor
movsl
ja
jl
sarl
adc
andl
or
sub
lds
inc
xchg
mov
sti
push
js
adc
inc
testl
ss
in
loope
stc
xchg
insb
in
mov
xchg
lcall
scas
clc
repnz
adc
lcall
cld
cmpsb
ret
jl
addr16
sbb
enter
dec
and
mov
cmp
loopne
scas
repz
add
inc
cmc
add
sbb
out
jmp
adc
pop
pop
dec
fsubr
jns
test
sbb
pop
rcll
jmp
or
push
dec
test
jmp
add
push
fs
cmpxchg
stc
fiaddl
je
stos
out
int
inc
rcll
in
fadds
into
dec
enter
adc
push
xchg
scas
add
fwait
cmp
insb
subb
clc
inc
cwtl
cmp
lods
sub
pop
mov
xchg
mov
pop
and
pop
sahf
imul
add
adc
in
test
js
xor
cmpsb
xchg
shll
les
in
in
dec
xchg
sub
imul
enter
push
and
xchg
lahf
test
addb
dec
daa
dec
data16
or
ds
pop
ja
cmp
je
push
jno
and
pop
stos
cmp
arpl
sub
jmp
shrb
aaa
jg
imul
mov
daa
out
cmp
sub
add
mov
arpl
data16
jns
mov
pushw
cmp
or
mov
xchg
ret
jg
out
stos
push
mov
dec
inc
enter
push
fbstp
cwtl
hlt
or
lcall
pop
rolb
xlat
movsl
fs
mov
sar
mov
aad
mov
repz
pusha
jle
imul
ljmp
test
mov
addl
data16
js
push
mov
insl
xchg
movaps
mov
call
int
aam
sbb
cli
test
mov
inc
inc
inc
js
hlt
clc
ret
ret
ret
mov
stos
in
aam
push
mov
add
jge
add
fcom
dec
push
mov
push
mov
mov
jp
lea
xor
cmp
mov
adc
shr
out
aaa
add
cld
mov
movsb
add
pop
inc
cwtl
repnz
or
xor
rcrl
in
cs
inc
fsts
enter
loope
sub
jmp
dec
cmp
sahf
push
xchg
loopne
aaa
pop
aaa
or
mov
jnp
xchg
sbbl
popf
mov
frstor
pop
and
mov
aam
mov
mov
and
mov
or
stos
xor
xchg
test
arpl
xor
loop
imul
adc
and
jmp
pop
dec
xchg
or
push
sbb
les
cli
loopne
jp
push
push
shll
loop
ja
xor
xchg
cmpsb
jg
mov
xchg
or
or
loope
push
xchg
cs
inc
iret
mov
cmc
jns
pop
mov
adc
je
std
sbb
int3
mov
daa
add
pop
movsb
inc
adc
jl
dec
std
sbb
xchg
cmpsb
shl
xor
jno
mov
lret
or
and
iret
andl
xlat
lahf
sub
pop
cltd
mov
lods
push
loopne
mov
cmp
sub
clc
lds
and
jl
fsubp
jp
sbb
out
dec
sub
bound
fisttpll
cld
push
mov
xor
movsl
pop
fwait
jne
rol
loope
int3
outsb
call
mov
push
mov
cmpsl
xchg
sub
stos
arpl
jmp
subb
push
and
dec
push
mov
add
xor
sub
mov
lods
fstps
adc
jle
arpl
xor
stos
add
xchg
fidivrl
bound
cmp
rcrl
lahf
jge
xchg
add
dec
cmpsb
mov
push
arpl
mov
push
cli
mov
mov
mov
fs
dec
inc
inc
jecxz
add
push
in
dec
imul
int3
call
push
and
out
ror
push
ja
mov
jne
ss
and
insb
repnz
test
leave
mov
or
sar
fcoml
sbb
mov
mov
roll
lods
scas
xor
loop
add
fmul
dec
rcr
and
mov
or
and
pop
or
adc
cmp
push
or
sbb
out
daa
fcomps
cmp
dec
add
sahf
lret
cs
inc
cs
mov
mov
mov
jle
sub
and
mov
pop
les
sarl
jge
cs
out
cmp
mov
psraw
jo
lds
cli
hlt
pop
nop
test
pop
faddl
std
cmp
gs
test
mov
add
cli
dec
jge
xchg
adc
and
in
insl
jmp
push
push
mov
fxch
test
stc
fisubrs
inc
xchg
leave
aas
adc
cmp
mov
stos
cmp
mov
jmp
mov
lock
xchg
dec
sbb
add
pop
popf
adcb
cld
pop
aas
jo
sbb
adc
sbb
mov
rcrb
mov
shl
fsubl
stos
scas
lret
dec
adc
push
add
mov
in
fstp
lahf
xchg
loope
sub
lods
mov
out
jl
mov
shrl
loop
mov
enter
hlt
push
in
adc
add
mov
lds
inc
push
add
sbb
out
cmpsb
into
sbb
adc
sub
movsb
pop
mov
ds
add
sbb
cs
jge
jno
fadd
jecxz
aam
add
loope
mov
cmp
test
daa
xchg
jnp
cld
xor
mov
ret
mov
mov
shrl
xor
or
cmc
movl
sub
repnz
mov
loopne
inc
clc
inc
pop
mov
adc
or
adc
jns
cmpl
and
sbb
mov
sarl
ljmp
in
lahf
insl
push
pusha
idiv
or
test
jmp
cs
movsl
imul
push
popa
cwtl
in
push
scas
dec
inc
js
aaa
add
inc
inc
and
inc
dec
mov
mov
xlat
add
push
push
push
mov
shrl
cmc
ljmp
cmpl
pop
test
lods
stos
adc
repz
in
scas
jecxz
or
inc
mov
sbb
adc
push
sub
or
fildl
sbb
test
pop
push
xchg
jmp
pop
lods
movsb
leave
insl
xchg
inc
xchg
lret
or
fidivs
dec
in
sti
sbb
sub
loopne
and
cs
fisttps
dec
aas
mulb
movsb
jbe
loopne
adc
in
addl
fs
sub
cmp
push
inc
push
jbe
mov
insb
ljmp
aad
out
xchg
mov
fistps
and
cwtl
push
cmp
mov
adc
ja
mov
aas
xor
in
inc
dec
and
clc
dec
adc
into
ficompl
int
bound
vpmacsdqh
inc
mov
lea
mov
frstor
inc
mov
sti
and
pusha
aad
push
jns
jge
addl
cmp
sub
mov
cmpsl
es
xchg
mov
ss
repnz
loope
lret
daa
xchg
jae
mov
call
mov
gs
dec
push
mov
pushl
aaa
addr16
or
fnsave
jns
mov
mov
jge
xor
dec
sbb
push
cwtl
pusha
lock
aaa
push
cmp
fisttpll
xor
clc
femms
xor
mov
or
outsl
ss
aas
je
inc
adc
and
sbb
add
mov
decb
nop
sahf
fidivl
xchg
jp
call
es
and
rcll
pop
sti
pop
test
inc
adc
insb
fdivrs
sub
push
cld
jle
pop
pusha
inc
shlb
into
push
jmp
pop
or
leave
in
movsb
mov
xchg
jbe
mov
popa
shll
push
dec
cmp
mov
and
add
cmpsb
mov
int
mov
xchg
test
mov
push
inc
jmp
push
lock
xchg
jmp
test
cmp
push
mov
pop
int3
push
push
adc
imul
in
pop
xor
push
and
mov
jecxz
addr16
shrb
into
int
jmp
in
stos
jge
fadds
shll
out
sbb
jno
addr16
mov
xor
and
and
cwtl
in
lods
mov
out
push
xchg
ljmp
push
arpl
and
add
cmpsl
mov
dec
mov
dec
mov
sbb
adc
imul
cmp
xchg
cmpsl
test
xchg
cmp
push
add
call
in
gs
aam
mov
out
add
push
jae
jp
and
cmp
cmp
pop
fs
mov
movb
mov
add
jns
or
inc
popf
push
sub
jne
sub
into
inc
push
cmpsb
repnz
mov
in
popa
std
adc
in
daa
int3
or
push
push
stos
push
sub
jmp
mov
sub
add
cmpsb
je
pushf
popf
xchg
or
mov
ret
fdivl
inc
and
mov
stc
inc
push
mov
pop
fnstcw
inc
push
cmpsb
add
xor
enter
inc
lret
mov
jge
rolb
inc
or
lea
sarb
mov
ret
adc
popa
scas
mov
out
ret
lods
rclb
inc
mov
repz
iret
pushf
repnz
dec
ret
outsb
add
or
add
jo
xchg
comiss
fdivrl
inc
adcl
xchg
je
or
inc
inc
jno
inc
aaa
int3
outsl
into
pop
push
fnsave
add
faddl
lock
mov
in
scas
push
push
cmc
popa
pusha
lock
dec
gs
adc
popf
enter
xchg
stos
ret
pop
ss
add
lret
mov
ja
repnz
lcall
cmpsb
je
jnp
jmp
or
fdivs
pop
leave
xlat
adc
pop
inc
add
dec
aam
cmp
xor
xchg
cmc
pop
repz
outsl
lock
or
rcll
data16
xchg
fs
nop
popa
mov
lahf
mov
inc
dec
cmp
sub
mov
xchg
dec
repnz
pop
shrb
push
add
push
xchg
inc
cld
xor
lods
test
sub
enter
mov
mov
push
iret
cs
push
ds
lcall
push
aas
pop
push
ds
insb
gs
ds
pop
cmp
in
insb
mov
xchg
loopne
rcr
insl
aam
fcomp
jl
std
imul
adc
fisubs
cwtl
or
mov
sahf
push
mov
stos
cmpsb
enter
push
push
sarl
gs
add
lds
adc
sbb
andl
out
in
mov
mov
add
stc
sub
sub
pop
inc
xchg
dec
imul
fldenv
pushf
mov
adc
and
xlat
push
mov
es
shlb
xchg
mov
pop
xchg
cli
outsb
sbb
stc
ja,pn
push
xchg
mov
fsubrs
mov
pop
int3
popa
push
inc
ljmp
adcl
das
add
jg
mov
repnz
je
mov
hlt
inc
xor
cmc
pop
add
cmp
aaa
add
rcll
mov
and
subl
adc
notl
ficomps
out
icebp
dec
pop
push
jmp
cmpsl
sub
loope
or
jbe
push
mov
xchg
mov
add
xor
pop
popl
mov
aas
jp
push
popa
xor
cvtps2pd
dec
inc
xor
and
push
dec
mov
jl
push
dec
jg
pusha
mov
cmp
in
and
adc
lret
in
fcmovbe
jns
je
ljmp
stc
ds
aad
mov
xchg
sbb
cmp
xchg
ds
xor
or
movsb
daa
cwtl
inc
testl
xor
mov
sub
insl
push
add
fidivl
mov
jge
lret
sbb
in
pop
dec
testl
hlt
mov
test
add
mov
aaa
push
cmp
xchg
mov
xchg
xor
sbb
subb
and
sbb
lret
test
xchg
add
dec
dec
push
mov
es
dec
stc
cld
mov
jge
shll
in
jns
dec
fildll
enter
mov
xchg
hlt
popf
imul
sub
push
jp
mov
int
cmpsl
aaa
test
mov
movsl
mov
cmp
in
pop
psadbw
jnp
push
out
ret
xor
pop
sti
sub
pushf
cmp
lods
insb
stos
std
pop
inc
icebp
lods
sbb
movsb
fwait
test
arpl
fisubrs
dec
popa
sub
aaa
mov
jnp
cmc
or
dec
xor
jle
mov
push
clc
xchg
mov
jmp
in
out
push
pushf
cmp
sbb
fcoml
jl
push
inc
cmp
xchg
fmulp
mov
pop
adc
xchg
cmpsb
push
inc
in
xor
ret
ljmp
icebp
ret
iret
lods
std
mov
rol
adc
jae
xchg
dec
cmpsl
xor
xchg
xor
pop
stc
outsl
mov
xchg
push
aaa
in
push
xchg
cmp
loop
pusha
and
cld
fsts
in
clc
or
cmp
cltd
push
dec
in
repnz
leave
mov
js
out
out
daa
and
lahf
xor
mov
ret
pop
inc
outsl
leave
es
movb
sub
popa
sarl
add
dec
xchg
and
sbb
fcmovne
imul
sti
cmp
hlt
or
stos
and
mov
int3
loop
lods
ret
xor
shl
push
pusha
lcall
fstpl
insl
sbb
xor
mov
fisubrl
repz
stos
jge
int
xlat
je
fwait
testb
mov
ret
and
clc
adc
iret
or
and
icebp
add
dec
mov
pop
adc
aam
leave
cmp
lds
xchg
mov
xor
mov
xchg
pop
pop
jno
cmp
adc
lods
and
cmp
adc
rcll
pop
popa
pop
lds
inc
sbb
mov
mov
mov
iret
inc
insb
ljmp
push
mov
dec
dec
lods
mul
aas
xchg
fnsave
mov
aas
xor
xor
inc
push
cmpsb
popa
or
je
xchg
and
push
push
inc
icebp
nop
outsb
pop
loope
pop
fildl
add
andl
sbbb
aad
dec
sbb
dec
shll
jae
xchg
into
xor
lods
lea
jl
xor
dec
outsl
hlt
sti
mov
shll
or
xor
into
out
loopne
fstpt
cmp
xor
jo
les
test
in
sub
jp
cmpsl
lock
pop
cmpb
aaa
mov
sbb
or
insb
popa
rolb
or
push
pop
sub
mov
jns
popa
popf
lcall
mov
cmp
xchg
mov
xor
jle
sbb
fadds
sub
imul
ljmp
pop
iret
xor
fldcw
imul
xor
dec
fwait
nop
rolb
gs
add
jecxz
push
xor
andb
scas
rcr
ljmp
sub
aad
xor
je
imulb
das
xor
stos
mov
out
jp
adc
mov
fs
shlb
faddl
xchg
xchg
mov
mov
dec
call
lret
jge
dec
int
jle
mov
cli
push
add
pop
adc
add
lea
dec
xor
jl
ret
scas
sbb
negb
loopne
andb
rcrl
fiaddl
scas
ja
cmp
sbb
xchg
lods
sub
movb
jmp
dec
push
sbb
jecxz
jae
cmp
dec
jle
lcall
push
or
pop
mov
jnp
push
xor
imul
int
loope
gs
aaa
insb
xchg
int
ret
mov
insl
add
inc
mov
mov
jp
into
jmp
jmp
sahf
ret
lods
push
inc
test
mov
cmpb
stos
stos
pop
xlat
xchg
jae
inc
xor
xchg
jbe
enter
mov
xchg
fsubrl
and
jo
push
lds
loope
les
jns
flds
in
xor
ljmp
xlat
mov
mov
movl
nop
stos
jp
stc
out
dec
sti
jo
mov
xor
mov
out
addr16
paddd
sub
add
mov
and
cmp
lret
cmp
aas
insl
sbb
jge
ja
push
fwait
mov
lea
repnz
cli
mov
jae
int3
stos
addl
sbb
cmc
dec
out
leave
push
and
stos
mov
push
sub
outsb
push
xchg
aas
mov
out
insb
lahf
out
test
in
and
jmp
mov
xlat
sub
pop
out
shr
sub
in
loop
xchg
sub
push
or
push
repnz
leave
mov
into
push
push
cmp
fldt
ja
and
mov
loop
inc
inc
push
dec
dec
xchg
mov
sbb
pop
ljmp
insl
push
aad
xchg
loope
js
mov
shrd
imul
andl
add
out
add
leave
bound
and
or
sub
dec
xchg
adc
mov
out
jae
mov
cmp
push
fmul
and
test
push
fwait
repz
inc
mov
jmp
mov
jp
add
hlt
mov
cld
inc
sub
sub
push
push
cmp
lea
sub
lods
and
push
adc
scas
js
dec
adc
push
inc
lea
mov
mov
test
sbb
les
movsl
jp
dec
inc
mov
dec
add
dec
and
cmp
cwtl
cltd
adc
outsb
jo
push
inc
daa
lods
add
jb
adc
mov
imull
xchg
repz
xchg
movsl
adc
pop
stos
xor
mov
ret
mov
jle
push
xchg
shll
fcomi
ret
add
es
movsb
dec
mov
dec
out
lret
push
add
lds
stos
in
push
cli
leave
jo
les
mov
loop
not
sbb
dec
in
insb
or
pop
out
ret
xor
les
or
fs
adc
fwait
loopne
cmpsl
mov
or
push
dec
adc
pop
ret
stos
xor
and
imul
std
xor
lods
loop
repz
or
push
arpl
pop
mov
orb
call
mov
insl
je
orb
or
jbe
sub
loope,pn
outsb
sub
ljmp
popa
fstp
sti
das
psrld
cmpsb
mov
jns
mov
lahf
pxor
pop
loope
notl
cmp
bound
push
add
jo
adc
mov
mov
pop
xlat
add
mov
add
inc
fwait
jae
jno
and
nop
sbb
mov
divl
mov
repz
adc
add
popf
and
jg
iret
lret
aas
mov
ds
ds
shr
sbb
pop
xchg
dec
in
pushf
pusha
insb
aad
test
loopne
in
and
adc
jns
sub
cmp
iret
jb
enter
aad
std
and
cmpsl
push
hlt
mov
mov
sbb
out
add
xchg
jae
jecxz
fs
add
jb
fwait
push
outsb
and
sysret
ja
mov
push
mov
jno
jno
mul
push
sbb
mov
xor
push
lahf
and
outsb
out
mov
mov
clc
inc
sbb
mov
xor
lret
fiaddl
adcl
sub
sub
add
loope
and
dec
xor
cs
dec
cli
aad
sti
lods
fstpt
iret
xor
cltd
pop
out
cmpsb
cwtl
pop
dec
pop
loopne
adc
mov
roll
push
cmpsb
cli
adc
ret
call
shll
push
mov
lret
mov
enter
pop
dec
xchg
ss
mov
shrb
jno
ds
es
xchg
cmc
jae
ret
xor
or
inc
fwait
repz
xchg
add
subb
cmpb
mov
aam
out
mov
movsl
insb
pop
mov
iret
adc
jle
inc
aaa
inc
jecxz
mov
xor
arpl
enter
pop
sahf
shlb
and
test
call
aam
rcr
or
sbb
daa
nop
jbe
sbb
mov
cmp
cmpsb
adc
popf
lcall
jecxz
and
popf
xchg
popa
dec
xchg
insb
adc
mov
xchg
js
mov
push
mov
and
insb
test
pop
hlt
jae
add
mov
cwtl
and
or
jns
and
add
and
cli
xchg
insl
stos
lea
stc
mov
mov
cmp
jno
adc
adc
call
jmp
scas
sbbb
fmulp
faddp
xor
ret
xor
and
jp
push
pop
and
adc
aad
jb
outsb
ret
lcall
push
fcmovbe
xchg
outsl
clc
or
popf
jbe
test
shlb
mov
push
pop
pop
int3
scas
fdivrs
out
leave
fcompl
divl
into
jecxz
rorl
sub
dec
adc
imul
mov
test
shrl
fcmovnbe
cmp
and
mov
and
fmul
stc
decl
and
fists
imul
mov
sub
sub
push
repz
pop
jl
stc
loop
aam
fs
push
xchg
std
xchg
sub
xchg
xor
adc
mov
daa
push
inc
or
pop
jae
xor
jnp
leave
pop
xor
add
and
jg
xchg
ljmp
mov
insb
imul
pop
into
sbb
subb
imul
lahf
mov
mov
nop
scas
icebp
push
pop
push
out
fcomps
cmp
jmp
lock
xchg
adc
icebp
pop
ror
jmp
cmpsl
xchg
cmp
jnp
inc
sti
insl
iret
incb
ficoml
enter
lds
ljmp
daa
iret
dec
scas
addr16
int
movsl
divl
test
cmp
std
addb
orl
rorb
mov
outsb
cwtl
jp
in
jmp
rclb
jg
adc
popf
or
inc
test
out
sti
inc
mov
cs
lock
xor
stc
jae
pop
cs
jge
lret
cs
fs
cs
push
out
and
scas
mov
push
cmp
ficoml
dec
rcrl
aas
out
jnp
push
inc
pop
mov
dec
xor
inc
jecxz
xchg
xchg
loope
lahf
nop
mov
jo
push
pop
dec
test
xor
xchg
mov
or
es
push
fmulp
push
mov
cmpsb
jle
fs
stc
push
xor
and
mov
in
mov
fists
cmovp
xchg
lods
jp
popl
sub
mov
cmpsl
sahf
sbb
jl
jnp
push
mov
scas
xchg
movsb
stc
dec
jl
cmpsb
stc
pushf
mov
fdivrs
lock
divb
dec
lcall
jp
cmp
lret
rcl
xchg
cmp
data16
cmc
jle
or
jnp
sbb
outsl
adc
xor
sti
xchg
xor
jp
cld
push
mov
scas
sub
test
cmc
aam
cs
call
inc
push
pop
ds
adc
test
jbe
dec
loop
adc
xchg
adc
fdivrs
sub
xlat
push
pop
in
xchg
stc
sub
push
cmp
xchg
repnz
pop
xchg
in
addb
pop
pop
pop
pop
testl
sbb
js
loop
or
jge
pop
mov
cmp
mov
inc
dec
pushf
xchg
xchg
pop
sbb
in
je
outsb
stos
inc
loopne
mov
arpl
cmp
movsl
sti
xchg
sub
test
adc
iret
sbb
mov
pop
in
adc
test
test
jmp
scas
addr16
out
sti
sti
sti
pop
add
mov
stc
push
cmp
hlt
xchg
idivl
test
add
adc
std
and
cmpsl
pop
sbb
mov
xchg
mov
shrb
mov
pop
sbb
popa
aad
inc
mov
xchg
xchg
je
push
fisttps
jecxz
test
in
in
incb
fmuls
dec
stc
das
or
pop
push
add
lds
mov
mov
sub
aaa
mov
dec
sub
inc
fsubs
xchg
xor
jnp
xlat
mov
loope
mov
mov
nop
aaa
adc
mov
data16
dec
jge
outsl
pop
mov
lock
movsl
iret
js
jae
shlb
pop
inc
push
and
adc
in
aam
xor
mov
movsb
je
add
sarb
stos
mov
test
cmp
pop
sbb
mov
test
adc
adc
mov
gs
mov
add
jecxz
rcl
xlat
popa
out
mov
jecxz
scas
cmp
cmp
movsb
mov
jno
add
jp
cmp
and
aas
aas
pop
hlt
pop
loop
call
ret
adc
mov
ret
mov
add
clc
cltd
mov
xchg
js
mov
fsubl
ljmp
enter
push
dec
push
stc
mov
mov
cmpsl
ljmp
or
testb
jno
rclb
mov
ja
mov
and
push
and
sbb
push
inc
and
js
mov
pop
dec
insb
xchg
push
movsl
popa
xchg
repz
in
and
push
mov
jge
lcall
and
add
insl
ds
mov
mov
xlat
xchg
fwait
in
pop
stos
fldl
sbb
loopne
xchg
cmpsl
outsb
out
bound
cld
mov
pop
lcall
rorb
leave
mov
testb
bound
pop
cmpsb
lret
movl
stos
or
inc
shlb
cli
xchg
inc
push
jg
out
sti
repz
out
frstor
lret
mov
push
inc
sar
xor
inc
cmp
outsl
addr16
or
xchg
push
mov
movsl
test
mov
rcrb
sub
lahf
sbb
scas
mov
ja
cmp
or
lcall
dec
stc
mov
adc
push
or
or
sbb
leave
sub
orl
fldt
lret
lock
xchg
jbe
dec
outsw
and
in
add
add
pop
lock
fs
loope
xchg
add
mov
xor
push
jb
stc
push
es
out
bound
sub
clc
cs
je
sahf
fidivrl
lret
cmp
ja
pop
pop
adc
push
test
imul
mov
out
iret
and
out
and
cmp
cmpw
push
cmpsb
sbb
inc
jo
xor
inc
stc
fs
fsubrs
out
jns
cs
data16
jno
and
out
xor
push
iret
test
pushf
in
inc
mov
and
cmp
add
pop
cmp
lds
sbb
jne
adc
add
loop
mov
bound
movl
jg
pop
dec
fiadds
imul
pop
sbb
in
fisubs
inc
or
xor
push
inc
mov
ds
xor
ret
add
add
and
inc
int
test
lods
sub
sti
or
fisubl
and
push
call
jle
mov
pop
cli
insb
sub
aas
xchg
push
adc
mov
dec
pop
outsb
and
mov
mov
add
jns
cld
sti
fnstcw
les
add
fisttpl
imul
push
mov
popa
push
iret
lds
sbb
jne
and
and
add
push
mov
out
xchg
dec
xchg
inc
pushf
dec
xor
dec
mov
test
das
je
aam
inc
jecxz
cmp
and
mov
fld
add
pop
add
dec
aaa
mov
in
inc
bound
pop
or
lret
addl
pop
pop
push
push
ja
fsubs
dec
xor
icebp
and
addr16
mov
scas
loope
pusha
push
fidivrs
call
loope
or
aam
lret
subl
and
rcrb
push
enter
mov
sbb
das
fs
imul
mov
nop
adc
call
and
mov
push
inc
xor
loope
dec
jno
push
pop
cmp
jl
loope
cwtl
add
jbe
add
xor
ds
shll
inc
nop
and
sbb
push
aaa
test
ja
notl
gs
mov
ret
cmpsl
cwtl
cmp
mov
lret
pusha
call
inc
sti
shrb
cmp
imul
rcrb
cmp
outsb
jae
addr16
in
lds
dec
aad
jnp
shr
mov
xlat
adc
jmp
cmp
aam
jae
and
test
addr16
mov
mov
mov
cmp
ret
lahf
mov
stos
pop
and
fisttps
mov
stos
push
aad
lds
push
stc
mov
push
pusha
jecxz
ret
push
filds
sbb
xor
adc
inc
cld
xchg
clc
ret
sub
test
sub
test
fnsave
adc
dec
in
dec
jno
test
sub
cltd
cltd
fldcw
sub
mov
sbb
outsl
aaa
or
ds
lods
cmp
clc
and
movsl
clc
hlt
ret
sti
mov
inc
inc
pop
pop
mov
cmp
mov
add
fmuls
imulb
outsb
ret
push
cmp
jno
push
xor
jb
movsl
mov
and
fstps
lock
jo
push
and
cmp
pop
mov
fs
mov
mov
int
scas
jo
jmp
inc
cmp
and
sbb
movb
or
out
divb
sub
pop
repnz
sti
adc
sub
push
jbe
or
rclb
ja
mov
js
ljmp
push
lods
jb
add
nop
rclb
add
movsb
jecxz
pop
lret
pop
into
fwait
and
jno
cmp
jge
ja
daa
push
lods
sbb
xor
outsl
and
add
cmp
pop
pop
jb
mov
sub
jbe
pop
andb
add
cmc
movsb
fcmovnu
pop
insb
arpl
adc
push
add
xchg
dec
out
adc
std
push
xor
sbb
add
out
test
in
or
cmp
push
notl
ds
jp
xor
int3
cmc
cwtl
jl
push
adc
jno
push
aad
insb
mov
aaa
xchg
mov
sbb
inc
mov
test
fdivrl
dec
loopne
test
aas
mov
outsl
cltd
inc
mov
test
inc
sbb
loopne
mov
xchg
push
or
mov
int
xlat
dec
mov
sar
imul
add
jp
push
and
push
clc
push
cwtl
mov
and
leave
cmp
cmp
pop
negl
jecxz
fimull
out
ljmp
pop
test
adc
hlt
and
addr16
adc
ret
stc
inc
cmovno
adc
pop
mov
mov
scas
add
lret
mov
xor
ljmp
sbb
pushf
cld
test
outsl
sbb
xchg
imul
subpd
dec
or
rorb
int
lcall
sbb
lods
sahf
shll
ret
out
mov
push
int
mov
loopne
pop
push
or
aaa
mov
std
mov
fmuls
sub
push
popf
adc
mov
inc
mov
ja
int
inc
lret
lret
jbe
sarl
scas
cli
dec
frstor
xchg
jnp
xchg
popa
pop
dec
shrl
jbe
das
xchg
dec
xchg
int3
xor
dec
lods
movsb
jae
dec
push
js
push
rclb
lret
push
cli
mov
imul
icebp
fcmovnbe
insl
adc
out
aam
fs
cmp
mov
xor
add
pop
das
lock
test
leave
scas
or
sbb
inc
int
stc
test
aam
std
pop
cwtl
into
std
pop
movb
mov
jnp
mov
popf
cmp
xchg
dec
pop
mov
jae
fwait
sbb
imul
negl
jne
dec
xor
cmp
cmp
push
cli
push
mov
inc
push
xchg
mov
dec
lret
clc
cmp
or
repnz
push
pop
xchg
jmp
das
subb
inc
popf
adc
xor
pop
mov
push
push
jp
mov
jo
ss
mov
xor
je
push
iret
popa
push
mov
or
fs
test
xchg
mov
xchg
mov
aad
cwtl
and
jo
push
jo
mov
in
mov
imul
sbb
sbb
jmp
pop
mov
arpl
cmp
dec
fildll
lods
fistpl
xor
test
shrb
push
dec
inc
pop
jae
mov
sub
neg
sbb
add
ds
push
mov
cltd
movl
cmp
lods
mov
sti
adc
mov
fistl
pop
jp
mov
in
sbb
mov
mov
sbb
sbb
std
lret
xchg
add
add
xchg
dec
cmp
iret
sbb
jg
push
sahf
sbb
repnz
mov
es
dec
mov
or
test
xor
and
xlat
in
xchg
push
out
mov
stos
icebp
cmp
outsb
sub
cltd
pop
xor
adc
fwait
into
or
and
jnp
sub
inc
mov
xor
and
inc
notl
sbb
add
push
mov
sbbb
lock
fisttpll
cs
aad
cwtl
fwait
loope
mov
stos
fsubrp
push
popa
lock
pop
dec
leave
jnp
ds
and
mov
inc
adc
les
dec
clc
xor
mov
lods
ljmp
clc
sbb
dec
add
jmp
ficomps
push
jmp
into
or
mov
cmp
fdivrs
add
push
add
mov
imul
fimull
into
jns
pop
mov
mov
adc
xor
mov
xchg
out
cld
aad
test
popf
inc
xchg
dec
cmp
mov
pop
pop
test
adcl
jbe
aas
cmpsb
push
inc
jne
jl
add
cmp
and
or
imul
xor
push
mov
mov
shl
enter
std
mov
loopne
test
lcall
and
in
push
fwait
sahf
jl
xchg
jno
push
repz
mov
push
push
xchg
mov
stc
dec
pop
cmpsl
ljmp
fdivrp
pop
clc
out
in
dec
and
neg
add
jne
loope
cs
sub
mull
cmp
in
pop
jecxz
js
xorb
xchg
lods
out
jg
jecxz
pop
rclb
outsb
xor
and
fwait
mov
cwtl
fwait
out
dec
cmp
mov
sub
add
adc
pushf
pop
cwtl
mov
les
iret
ljmp
stos
int
div
leave
rclb
dec
scas
lret
pop
sbb
sub
inc
mov
mov
fidivrs
fiadds
fidivs
loopne
loop
pop
jae
and
lods
push
rcll
mov
mov
into
mov
iret
sub
xchg
pop
mov
packssdw
js
movsb
mov
sbb
xchg
push
jecxz
mov
aaa
mov
jbe
pop
xchg
test
pop
jno
aas
sub
dec
sub
shr
inc
mov
mov
jns
sub
push
icebp
jp
adc
test
repnz
lret
fnclex
stos
scas
stc
mov
in
nop
lods
fildl
das
fnstcw
and
loop
mov
les
xor
inc
push
test
lock
mov
mov
adc
nop
stos
mov
mov
cmpsl
and
lret
dec
ret
dec
mov
xchg
ljmp
dec
iret
stos
enter
cltd
lret
adc
xchg
out
popa
push
mov
cs
lods
aad
sti
ret
into
sbb
pop
inc
pop
shl
loop
subl
rorb
sub
fimull
mov
shrb
push
fdivrl
into
inc
push
jbe
or
shlb
lds
add
fst
push
jmp
and
hlt
outsb
xchg
jecxz
mov
add
sbb
mov
add
andl
loop
add
mov
xor
jg
inc
or
movb
cmpb
pop
push
jp
gs
mov
add
adc
mov
sub
shll
push
and
mov
inc
divb
mov
fldl
and
fbstp
out
pop
and
mov
int
sub
xchg
xchg
adc
add
mov
push
subb
xor
cmp
xor
pop
into
jnp
sahf
outsb
jo
and
gs
in
mov
lods
mov
ljmp
imul
sub
jne
das
mov
adc
dec
xor
push
pop
xor
es
cmp
mov
ret
pop
out
mov
test
dec
cmpsl
int
pushf
insb
sub
push
inc
out
sbb
out
jb
iret
adcb
test
ds
nop
clc
js
jge
clc
lods
fldcw
mov
mov
test
mov
call
das
sub
mov
sbb
out
sti
fadd
arpl
nop
push
ljmp
outsb
lcall
jae
insb
add
loope
mov
xchg
std
xor
mov
inc
stos
mov
mov
inc
mov
or
cmp
mov
adc
sbb
mov
js
xor
inc
sbb
scas
adcb
xchg
movsl
sbb
in
out
pop
xchg
sahf
jle
adc
lcall
sub
mov
repz
mov
pop
sub
add
das
lods
leave
xlat
mov
inc
sub
dec
cmpl
sahf
mov
mov
push
lock
sub
xchg
sbb
gs
rorb
sub
push
cli
stos
test
pop
cld
sub
fnstsw
xchg
push
jmp
in
test
add
je
cmpsl
inc
movsl
hlt
and
or
and
mov
push
pop
sbb
mov
sbb
xchg
out
ret
mov
push
pop
push
shl
sarl
addr16
inc
jbe
arpl
push
jno
mov
insb
dec
xor
es
xchg
negl
push
cmpsb
sbb
and
out
scas
mov
stc
test
enter
add
aam
mov
cmpsl
jo
dec
daa
enter
sahf
test
push
pop
lret
or
push
ficoml
scas
xor
mov
push
or
jb
adc
xchg
dec
pop
js
or
pop
data16
jg
jnp
inc
xchg
mov
or
loop
sbb
stc
push
in
mov
xor
rcl
mov
pop
pop
xor
ret
adc
jecxz
addr16
jl
push
je
jb
enter
das
xor
push
ret
pop
sbbl
dec
add
mov
notl
xor
insl
rorl
xor
inc
xchg
sub
ja
add
enter
ljmp
les
mov
jns
mov
xor
in
mov
or
jns
jb
xchg
add
int
dec
push
fadds
mov
jmp
push
jns
cmpsl
and
lds
pop
es
mov
in
outsb
idivl
lods
insl
lahf
mov
add
jmp
gs
push
cld
push
call
pop
sbb
imul
pop
push
stos
jns
lahf
add
add
jb
mov
cwtl
jge
xor
xchg
ss
addb
shll
fdivl
cmp
icebp
mov
nop
hlt
repz
fldl
mov
fucomip
lret
sub
pop
inc
mov
push
add
int
push
in
out
gs
and
sub
fbstp
mov
xchg
fisubl
ret
add
iret
cmpsl
iret
ss
push
cmp
addr16
jecxz
out
inc
inc
ljmp
sti
xchg
xchg
out
cs
xchg
sub
push
and
jecxz
loope
pop
dec
mov
data16
pop
aaa
push
fmuls
inc
mov
test
enter
jge
add
mov
mov
cmp
in
lcall
pop
push
mov
or
clc
add
push
jbe
add
andb
loope
addr16
inc
add
insl
cmpsb
sbb
imul
pusha
cmp
ss
repz
repnz
dec
pop
pop
sahf
xor
bound
xchg
call
addr16
pop
push
xor
push
incb
pusha
add
push
notw
and
or
cltd
mov
loop
inc
and
push
and
aam
gs
cmp
leave
cmc
ss
pop
aas
jno
add
dec
ficoms
mov
dec
or
push
pop
cmc
or
cmp
inc
dec
sub
test
pop
dec
in
add
push
popf
and
dec
out
jae
inc
push
lds
hlt
pop
es
xlat
popf
enter
mov
xchg
popa
cmp
stc
mov
sbb
ret
add
sbb
ret
sub
dec
loop
xchg
jnp
mov
pushf
xchg
pop
and
or
inc
fcomi
xchg
and
aaa
rorb
push
or
daa
insb
mov
cwtl
xor
leave
and
lahf
je
xchg
test
mov
out
shrb
push
cmp
xchg
pop
cmp
pop
xchg
js
xchg
or
cmpsl
sub
adc
or
mov
loopne
fsubs
jo
test
inc
adc
pop
subl
sub
shrl
loop
lahf
mov
xlat
push
pop
jg
jmp
fwait
lret
in
dec
pop
insl
pop
inc
sbb
pop
outsl
sub
mov
adc
inc
mov
add
test
mov
or
imul
fistps
loop
std
push
dec
or
sbb
inc
or
mov
loope
or
mov
push
push
das
movsl
lods
nop
mov
mov
mov
add
outsb
and
inc
orl
loope
fdivs
xlat
and
push
adc
add
and
xchg
fs
jg
ficoml
dec
mov
cmp
mov
and
mov
sti
fisubs
pop
jmp
dec
je
fdivr
orl
js
inc
sub
mov
ret
stc
or
jo
or
cli
dec
stc
pop
lods
mov
or
jnp
mov
xchg
movsl
test
outsb
adc
add
insl
xor
lds
add
inc
dec
clc
push
or
imul
or
dec
mov
or
inc
sub
push
mov
scas
and
out
jg
fwait
mov
lock
add
mov
ljmp
mov
iret
mov
gs
outsl
or
loopne
jae
cld
test
test
jb
pop
loopne
les
xor
rorb
pop
push
and
mov
xchg
add
dec
shrl
loopne
sub
repnz
pop
fs
fucomip
inc
test
dec
lds
cmp
js
cld
test
rcll
cs
fdiv
mov
dec
and
mov
outsb
add
and
or
scas
addb
cli
jmp
mov
and
add
push
jnp
push
pop
int
mov
leave
mov
les
or
push
ljmp
mov
sub
insl
and
inc
nop
or
cmpsb
mov
cltd
out
fimull
pop
push
aas
mov
je
sub
ficoml
sbb
cmp
aaa
push
cld
mov
lcall
mov
adc
in
dec
pushf
shlb
leave
pand
cltd
mov
iret
rclb
lret
loope
jge
mov
bound
ja
xor
jns
jp
out
dec
xor
mov
int
xlat
mov
and
push
dec
int3
js
xor
or
and
push
enter
lock
mov
inc
adc
inc
cmp
call
jp
dec
push
jle
das
add
jp
jp
xchg
jne
inc
mov
movsl
stos
nop
addr16
inc
aam
data16
imul
cli
repnz
inc
pop
pusha
add
out
shrl
sbb
push
xchg
jno
mov
pushw
js
xchg
sbb
fimuls
shll
sub
das
pop
and
mov
int
mov
test
imull
lcall
lock
stc
mov
icebp
xchg
fwait
xlat
inc
ss
pop
lret
ret
out
sbb
push
mov
mov
sbb
mov
lea
sbb
or
testb
or
inc
or
mov
inc
push
pusha
mov
inc
xchg
dec
adc
cwtl
ljmp
pop
int3
cmp
dec
repnz
call
mov
xor
test
movsb
in
scas
movzwl
movsl
lcall
push
cld
jmp
cld
lcall
outsl
shr
mov
add
inc
xor
add
cmp
fimuls
sahf
adc
icebp
repz
add
add
inc
incb
xor
sub
xor
adc
std
enter
ret
and
mov
out
in
jg
cmpsb
sbb
movsb
stc
icebp
xchg
dec
scas
add
fnstcw
rclb
push
hlt
sub
jmp
cmp
je
mov
outsl
ja
into
or
fistpll
mov
jnp
addb
iret
and
ds
clc
add
lods
sub
inc
cltd
jns
popa
push
movsb
into
out
xor
out
in
mov
cmp
les
sub
lcall
inc
sub
dec
or
adc
call
sbb
push
dec
or
mov
popa
jmp
mov
adc
movsl
ljmp
mov
out
cli
fdivrl
dec
test
movsl
stos
loop
pop
dec
push
cmp
and
mov
sbb
mov
sbb
push
xchg
xchg
stos
rcll
mov
mov
jecxz
jmp
cmp
inc
bound
add
jp
sbb
pop
mov
jbe
pop
loopne
fbstp
ds
es
gs
repz
adc
repz
adc
int
mov
pushf
xor
aaa
cmpsb
sti
movsl
lods
insl
je
cwtl
mov
dec
xor
cmp
cs
aad
mov
mov
lock
push
pop
xchg
out
ret
jnp
dec
scas
into
in
push
adc
xor
negl
or
insl
cmpsb
sbb
jae
sub
out
or
data16
test
hlt
pop
aad
scas
push
mov
pop
xor
stos
xchg
inc
outsl
mov
loopne
mov
loop
cld
ss
cld
mov
push
fsts
inc
outsb
arpl
inc
scas
cld
lret
xchg
lfs
add
lret
mov
cwtl
stos
jbe
push
mov
cs
push
cltd
shlb
stos
add
xor
sarb
mov
ret
inc
jbe
popa
pop
pop
ret
dec
or
icebp
arpl
mov
sub
jecxz
inc
das
jmp
int3
pop
fistpll
adc
je
pop
testl
lahf
cmp
sub
inc
cmc
or
paddsb
rorl
push
int
ficomps
jg
cmp
lret
sbb
popa
adcb
xor
shlb
xchg
in
add
popa
mov
and
mov
push
cmp
cmc
stos
loope
repz
push
pop
sub
push
mov
xchg
sub
mov
xor
das
and
pop
jmp
and
sub
or
and
stos
inc
outsl
pop
iret
movsb
leave
pop
and
imull
push
test
inc
xor
sub
mov
lods
and
gs
sub
ja
out
jmp
enter
add
mov
xchg
jle
popa
in
xchg
dec
aad
inc
dec
test
addr16
or
mov
adc
lahf
xchg
cwtl
pop
scas
mov
mov
mov
ss
xlat
mov
in
lock
or
aam
daa
mov
pop
xchg
aaa
bound
fmul
les
push
cmp
or
mov
xlat
xor
jbe
jecxz
push
arpl
cmpsb
dec
rcrb
repz
repz
fnstsw
xor
jae
hlt
dec
ficoms
in
jg
jl
and
push
enter
test
mov
fstl
or
mov
cmc
jecxz
enter
repnz
dec
inc
imul
dec
mov
popl
push
xor
inc
mov
sahf
inc
aad
mov
mov
shrl
movsb
std
aam
dec
cld
adc
dec
mov
mov
sarl
shll
pop
inc
sub
insb
subl
adc
xor
jle
cwtl
lcall
aas
add
and
mov
mov
xchg
xchg
sti
rcl
enter
aam
mov
sti
sbb
mov
insb
in
adc
adc
mov
jo
pushf
jl
xchg
or
push
jb
cmp
xor
lods
push
pop
int
addr16
je
subl
dec
ljmp
pushf
sub
call
and
inc
inc
xor
pushf
nop
test
lods
push
mov
aam
addl
filds
negl
mov
push
xchg
xor
xchg
pushf
or
pop
lahf
adc
popa
mov
ljmp
insb
jbe
outsl
subb
pop
sbb
inc
pusha
nop
punpcklbw
xor
out
xchg
mov
sbb
push
inc
rcl
les
mov
pop
mov
dec
loop
cli
stos
call
hlt
decb
jge
or
aaa
xchg
mov
mov
jb
add
sub
xchg
pushf
nop
out
arpl
push
jne
mov
ret
cmp
or
neg
sbb
and
pop
movsb
xchg
dec
add
cmpl
push
loop
stos
mov
xor
dec
in
jl
insl
sub
inc
in
or
inc
popf
inc
jecxz
add
inc
pushf
mov
mov
dec
dec
enter
mov
out
sbb
cli
cmpsb
mov
aad
xor
nop
dec
insb
sub
xor
jg
movsl
or
aad
mov
cmp
xlat
jmp
adc
sbb
insl
xor
outsb
sti
je
xor
cmp
imul
lea
in
xor
jmp
lret
sti
hlt
mov
mov
fildll
pop
mov
push
sbb
xchg
xchg
and
ss
dec
das
out
inc
pusha
loope
icebp
rcll
ret
mov
adc
cmp
out
cmpl
pop
data16
sub
fsubrs
in
das
in
adc
xor
jns
lret
daa
and
ret
popa
ja
jmp
or
enter
lods
pop
dec
jnp
idivl
enter
jns
pop
dec
fdiv
mov
test
rorb
imull
and
jne
mulb
outsl
mov
fsubrs
push
xor
jge
cwtl
jmp
hlt
mov
jns
aaa
sbb
addb
mov
mov
lcall
cmpsl
sub
pushf
adc
in
lahf
fwait
or
sbb
loope
stc
mov
sbbb
push
dec
leave
pop
sbb
imul
pop
lret
mov
popa
cmp
dec
push
call
popa
inc
rclb
sbb
fldt
and
jno
sahf
xor
es
jl
mov
enter
ljmp
jmp
xorps
adc
xor
xchg
inc
push
inc
xchg
push
jns
loopne
add
mov
push
dec
cwtl
dec
pop
cmp
pop
pop
es
mov
repz
jl
lock
and
and
mov
scas
jns
jo
inc
js
cmp
outsb
add
repz
movsb
xor
or
lret
out
pop
push
jns
and
out
popa
and
leave
and
icebp
add
jge
dec
popa
lahf
lock
inc
ret
mov
xchg
cmp
std
xchg
fmuls
fsubr
test
in
xlat
inc
fldenv
jmp
into
fidivs
jle
cmp
xchg
mov
cmp
and
lods
sub
imul
fld
imul
push
fwait
jo
push
aas
mov
cmp
cwtl
in
cmc
xor
lea
fists
leave
lds
mov
xchg
jne
sbb
out
xchg
out
fldcw
add
jns
pop
mov
dec
das
jb
sahf
mov
insl
push
arpl
sahf
repnz
pop
mov
daa
out
inc
sahf
lock
xchg
xor
pop
imul
ror
jge
or
jp
test
and
and
sbb
and
mov
cmp
sub
xchg
rcrl
cmp
inc
sahf
nop
sbb
out
pop
addr16
sub
sub
jnp
and
xchg
in
sub
push
pop
or
jge
xchg
sub
push
sarb
test
push
sbb
dec
and
loope
lcall
mov
pop
sbb
sbb
add
sbb
adc
lret
jecxz
mov
in
sub
int3
test
mov
sub
inc
jecxz
outsb
push
cmp
sar
inc
adc
orb
nop
lods
test
pop
xchg
mov
ds
pop
clc
repnz
mov
cmpsb
arpl
add
loopne
inc
in
lods
test
pop
int3
jmp
sbb
ret
fs
inc
mov
push
clc
cld
ja
lcall
pop
inc
cmp
mov
jge
push
adc
rorb
dec
sbb
ds
mov
pushf
fwait
add
movsb
jae
xchg
fisttpll
sbb
pop
push
or
mov
mov
ljmp
std
sbb
out
mov
lret
fsubs
push
js
jge
dec
inc
xchg
adc
sti
add
movsb
jmp
push
out
sbb
int
sub
mov
into
mov
pop
mov
inc
xchg
scas
lods
lods
outsl
push
xchg
cli
in
out
std
scas
or
jb
test
outsl
cmp
ds
cltd
loope
cltd
add
add
pop
add
lds
je
stos
xor
xchg
pushf
mov
dec
and
dec
lds
push
sbb
mov
dec
cmp
es
mov
in
sub
or
adc
inc
fwait
movb
and
pop
gs
or
and
pop
adc
testb
fwait
push
lea
fsubrp
pop
jns
sub
cltd
sub
adc
xor
pop
mov
mov
cmpsb
lcall
xor
or
or
mov
stc
sbb
arpl
jge
cmp
fdivs
adc
jnp
push
movsl
jecxz
ss
and
or
jle,pt
cmp
lds
mov
or
add
add
sbb
adc
sbb
fidivs
jae
int3
or
pop
int
mov
leave
fisttpll
mov
lahf
aam
add
sti
call
testb
push
aas
ljmp
outsb
mov
xchg
xorb
inc
mov
dec
jns
lods
mov
inc
pop
inc
sbb
jno
iret
push
or
ds
xchg
xor
xchg
mov
scas
jmp
pop
cmp
inc
inc
aas
pusha
scas
jne
test
fsts
mov
mov
dec
outsl
mov
pop
inc
dec
mov
aad
sub
adc
cld
mov
leave
in
fadds
addr16
xchg
cltd
mov
xchg
into
shrb
cmp
mov
add
dec
lcall
iret
cld
adc
std
mov
mov
sbbb
aad
js
into
outsl
push
in
fiadds
mov
adc
sub
inc
clc
mov
hlt
cwtl
add
popf
xchg
xchg
int3
lcall
movsb
lcall
mov
xor
adc
test
stos
jns
cmc
clc
xchg
and
bsf
jne
add
sub
cli
mov
loopne
movsb
addr16
add
xchg
daa
add
cmpsb
das
in
movsl
add
push
cmpsb
fwait
sbb
dec
rorb
xor
and
ja
das
push
fisubl
out
out
int3
sub
popf
lods
fldt
mov
fwait
int3
es
hlt
xchg
cmp
out
or
or
mov
pop
xor
rcl
in
test
dec
and
dec
mov
sahf
xor
jg
nop
jno
mov
dec
mov
cmc
xor
fadds
add
cmp
xchg
es
ss
outsb
mov
mov
js
pop
fnstsw
xchg
jp
test
mov
xchg
leave
inc
cmp
clc
cs
out
adc
sub
data16
cld
sub
and
lret
or
cmp
mov
pushf
sahf
sub
jo
jae
mov
out
pop
fdivs
push
push
sbb
rclb
outsb
adc
ljmp
mov
add
push
mov
iret
dec
adc
cmp
mov
shrl
xor
loope
pop
cld
int
inc
lock
add
shrb
and
push
mov
bound
sub
shlb
xor
scas
scas
pushf
xchg
js
in
cmc
mov
jmp
mov
cmp
sub
aas
adc
fs
xchg
jmp
sbb
mov
cwtl
negb
imul
xorl
mov
fwait
arpl
call
mov
lods
ficomps
pop
cmp
fwait
dec
xor
dec
jle
jecxz
das
cld
nop
nop
enter
mov
js
mov
in
xchg
cmpsb
movsl
incb
adc
imul
and
mov
cld
mov
dec
xor
sarl
cli
sbb
cld
hlt
mov
outsl
pusha
lret
ja
imull
push
popa
arpl
out
loope
xor
adc
jo
cmp
sahf
nop
adc
xorb
mov
xor
aas
nop
outsb
mov
jecxz
dec
inc
mov
jecxz
sub
in
and
push
mov
mov
loopne
mov
cmp
mov
dec
lods
loope
ja
lock
mov
out
mulb
repnz
shrl
test
mov
xchg
sbb
pop
mov
jmp
loopne
mov
cmpsl
jnp
or
fiaddl
mov
daa
loope
jp
aas
mov
je
pop
fdivp
jbe
div
fstpl
mov
cmpsb
jb
jecxz
mov
cmc
add
shll
test
outsl
xor
mov
xchg
inc
jge
scas
shll
into
push
sub
testb
adc
jno
subb
ja
xor
adcl
scas
in
dec
cmp
dec
mov
or
push
mov
pop
fimull
inc
add
stos
shll
push
push
jbe
mov
and
lock
and
call
adc
dec
xchg
sub
dec
inc
stos
and
or
movsb
and
fxch
sub
jnp
mov
int3
xchg
or
push
jnp
cli
and
pusha
hlt
leave
or
mov
jne
push
ret
mov
hlt
mov
fmuls
pop
and
adc
sbb
pop
dec
push
lock
mov
outsb
std
mov
dec
out
mov
pop
and
add
int3
or
add
and
test
mov
js
shrb
xchg
pop
jmp
hlt
adc
xchg
push
pop
ljmp
mov
cmpl
sbbl
scas
xor
mov
outsb
out
mov
test
xor
sbb
pop
and
sub
push
add
addr16
dec
xorl
jno
jne
inc
imul
mov
gs
push
push
mov
push
shrl
fistps
inc
das
das
stc
jg
aam
adc
shlb
and
adcl
imul
and
loop
cmp
rcrb
xchg
out
cmp
ljmp
cmpsl
pop
push
aam
add
fistpl
xor
xor
out
dec
ds
sti
mov
pop
imul
jg
lds
add
xchg
mov
pop
hlt
test
jle
adc
mov
or
push
jmp
movsl
stc
sbb
fisttpll
sbb
or
std
outsb
add
push
or
sub
inc
mov
je
push
cltd
cmc
call
fnstsw
lcall
dec
lret
dec
mov
push
adc
fistl
or
mov
cmp
fstl
out
lods
lahf
out
mov
mov
shrl
lcall
xor
adc
jl
cmp
insb
mov
sti
js,pt
cmp
pop
imul
aas
jbe
mov
xchg
inc
and
shrl
mov
out
addps
mov
out
sub
aad
pop
add
or
mov
push
lahf
xchg
cwtl
sbb
negb
aam
ljmp
adc
sbb
mov
xchg
lock
or
sub
rcll
mov
jg
les
xor
cli
outsl
aas
outsb
insb
or
decl
leave
loope
jae
pop
aad
push
orl
rolb
clc
inc
and
ljmp
inc
dec
sahf
sub
jns
loopne
inc
adc
cmp
add
mov
scas
fdivl
testl
popf
cmpsl
and
and
jo
xor
and
mov
aam
jmp
sbb
lods
cmp
adc
jle
mov
mov
sbb
sbb
pop
movsl
call
mov
push
mov
out
or
mov
ss
or
test
out
movsb
push
iret
dec
mov
jne
out
dec
cmc
test
and
push
mov
sub
std
push
or
aas
enter
movaps
mov
cmpsl
push
push
sub
or
cltd
cmp
adc
adc
rcrb
fadds
jge
fs
stc
outsl
add
in
mov
adc
lahf
and
fimuls
add
and
adc
popa
pushf
rcl
and
xchg
filds
sub
adc
cmc
jl
das
ret
add
shrb
aad
xchg
xor
dec
jp
imull
fwait
add
mov
dec
mov
fists
arpl
mov
cltd
adcb
insl
lcall
cmp
lret
divl
cwtl
or
dec
out
mov
jmp
cwtl
mov
adc
imul
insb
mov
mov
popa
xlat
cs
roll
repz
xchg
sti
add
fidivs
pop
roll
fnclex
mov
adc
inc
pop
mov
push
out
xorb
add
add
aaa
xor
lea
mov
scas
cmp
pop
push
add
jmp
mov
es
insb
jbe
jge
xlat
dec
enter
bound
pusha
add
mov
pop
into
jmp
js
or
jns
test
xchg
xchg
inc
pop
adc
sub
repz
add
jge
ljmp
mov
iret
pop
lods
sbb
push
dec
xchg
add
cmpsb
jge
idivb
sbb
xor
adc
cmpsl
shll
test
cmp
inc
jmp
jle,pn
adc
push
outsb
dec
out
lahf
mov
in
in
scas
ret
dec
mov
mov
cmp
cmc
dec
add
icebp
in
out
jno
push
enter
mov
and
shll
mov
push
and
pop
test
nop
jae
xchg
inc
call
pop
xchg
mov
mov
push
xchg
and
daa
into
fwait
mov
imul
dec
mov
xchg
xorl
sub
mov
cmp
addr16
inc
mov
les
and
insb
mov
and
cmpsl
ret
mov
jg
sub
and
push
in
cltd
mov
aaa
push
bound
fs
pop
les
cmpsl
orl
cmp
xchg
jg
push
scas
xchg
and
adc
mov
or
test
jl
fdivrs
and
push
test
jbe
mov
push
jmp
push
add
cmp
adc
lea
cmp
adc
pop
stos
xchg
xor
inc
xchg
je
inc
pop
and
stc
dec
push
insl
dec
mov
dec
jnp
out
and
call
imul
pop
fsubs
adc
inc
ret
cmpsb
aas
jle
loop
and
insl
shlb
test
mov
pop
sarl
lods
cmp
mov
lds
loop
scas
scas
push
aas
orl
lea
xor
sub
lcall
test
jecxz
or
mov
jmp
popf
xor
mov
test
and
subb
dec
mov
pop
lahf
lods
roll
mov
ret
pop
jge
adc
in
jp
hlt
jae
sub
mov
insb
pop
sbb
inc
cmp
es
or
loope
xor
jb
loopne
roll
inc
sar
outsl
lea
loope
addb
dec
mov
scas
inc
dec
inc
shlb
xchg
inc
outsb
pusha
mov
ret
aas
out
loop
sahf
jae
idiv
cmc
mov
int
inc
inc
xchg
cmpsl
out
mov
nop
or
push
rcrl
jo
cmp
mov
stos
jge
dec
adc
xor
insl
jbe
repz
dec
fwait
pusha
mov
cmp
ja
out
loope
push
fwait
push
jle
and
fs
ficoml
pushf
inc
out
push
data16
filds
jno
popf
xor
push
xor
daa
mov
mov
jo
mov
cmp
push
mov
out
mov
cmpb
mov
mov
shlb
sbb
xorl
push
xchg
cltd
mov
loope
les
cwtl
adc
repnz
mov
xor
inc
into
or
cmp
mov
jnp
adc
xlat
sub
mov
mov
imul
push
rcll
push
pushf
test
add
adc
arpl
add
mov
jp
sub
adc
lret
es
loop
cltd
pop
aam
out
jle
pop
test
xor
insl
call
sbb
pop
call
out
insb
cmp
test
pusha
sbb
in
in
dec
and
jo
adc
cltd
inc
xor
add
into
inc
pop
pop
xchg
cmp
xchg
jl
push
sbb
dec
inc
leave
inc
or
out
rcrb
out
mov
fdivrs
dec
fxch
jae
add
pop
ss
lcall
ret
daa
jae
pop
cltd
stc
fstl
fidivrs
cmc
push
lcall
xchg
mov
mov
cmp
adcl
jbe
test
mov
int3
pop
jl
mov
adc
imul
dec
out
xchg
fwait
jae
dec
insl
aas
dec
lahf
mov
sti
jl
fsubs
mov
test
xor
xor
popf
xor
scas
fcmovnb
imul
mov
lret
mov
std
aad
movsb
push
inc
out
sbb
filds
test
pusha
ljmp
inc
jno
push
and
mov
mov
aas
jbe
push
push
mov
repz
imul
dec
enter
mov
adc
test
jp
inc
gs
or
fildll
fbld
pop
cwtl
jg
cmpsl
jnp
push
push
test
mov
mov
popa
push
cld
loope
push
shrb
push
xchg
ret
add
or
scas
mov
lods
pop
push
ljmp
shlb
ss
cwtl
out
sbb
sub
ljmp
inc
std
les
aad
mov
pop
and
mov
xchg
adc
fiaddl
das
repz
push
adc
adc
cmp
je
cmpsl
dec
cmp
adc
mov
les
imul
mov
mov
pop
jae
xchg
xchg
jmp
out
mov
imul
ret
push
fsubrl
ljmp
mov
sbb
lahf
icebp
xor
push
icebp
adc
into
jp
and
in
and
mov
lahf
mov
aaa
mov
movsl
add
loope
mov
push
lds
sub
repnz
jp
jb
out
dec
pop
cmpsb
ret
iret
push
adc
pop
int3
mov
movb
jns
or
cmc
sarl
in
repz
les
cmc
sbbl
fidivl
dec
fimuls
sbb
leave
cmp
ret
inc
loopne
jmp
xchg
aas
popf
std
or
and
pop
out
aas
add
sub
jle
stc
out
scas
or
jo
divb
adc
outsb
push
orb
fstps
and
push
jne
imul
and
loope
lret
mov
dec
fildl
xlat
mov
insb
scas
lds
jmp
jg
sti
aam
inc
mov
mov
xchg
js
and
iret
push
mov
xchg
sub
mov
and
nop
mov
fdiv
loope
ljmp
in
mov
pop
pop
pop
dec
gs
clc
xchg
rorl
out
push
xchg
jb
cwtl
pop
xchg
divb
aas
pop
xchg
pop
push
aas
in
mov
inc
jle
mov
push
mov
xlat
mov
bound
cltd
fildll
imul
imul
ljmp
add
mov
in
jmp
jmp
enter
xor
jb
push
push
fsts
mov
out
dec
mov
fdivrp
xor
sub
jg
fmul
mov
mov
mov
orb
std
inc
leave
xor
xchg
and
inc
mov
dec
in
shll
sub
jl
mov
pop
imul
or
call
pop
pop
pop
addr16
jbe
ret
mov
movsb
mov
push
jbe
icebp
push
sub
sbb
mov
xchg
push
imul
and
push
aad
xchg
outsb
pushf
repz
popa
fs
and
das
in
xlat
or
hlt
dec
cmp
inc
push
fists
iret
xor
dec
sub
jp
popa
mov
jns
rol
mov
sbb
leave
lret
fsts
fisttpll
clc
out
sahf
push
jbe
outsb
mov
cmc
push
adc
pushf
add
pop
mov
mov
pop
adc
es
mov
mov
push
leave
test
ljmp
jge
pop
cmp
xorl
mov
jl
xchg
cmp
or
jle
fidivrs
fdivrl
pop
jle
jp
daa
int
or
dec
dec
sahf
mov
call
ret
aaa
sub
or
sub
data16
xchg
scas
sbb
mov
add
aas
lods
mov
xor
jecxz
loopne
xor
pop
stos
sub
inc
je
es
lahf
xchg
aas
adc
xchg
inc
popa
and
dec
fwait
jo
movsb
dec
or
into
in
loop
or
ljmp
and
popa
or
and
ret
lock
and
clc
and
int
sbb
cmpb
jae
and
outsb
fldl
xchg
adc
sub
setno
adc
int
inc
les
jnp
fadd
inc
jp
testb
dec
fcomip
adc
repz
sub
mov
cmpsb
outsl
cld
push
fcompl
out
mov
cmpsb
xchg
outsb
or
fsts
jns
sbb
sub
test
xor
mov
push
bnd
cli
jmp
adc
mov
mov
mov
aas
mov
xlat
cmp
or
sub
inc
bound
sahf
cmp
add
and
jmp
inc
xchg
lds
push
and
andb
imul
xor
mov
mov
negl
imulb
out
shl
sub
ljmp
sbb
inc
into
xchg
cmp
rcl
xlat
mov
adc
push
mov
repnz
jae
in
sub
mov
pop
mov
add
cmpsl
xorb
aad
mov
iret
push
add
mov
mov
jl
das
or
std
fcoml
cmp
jbe
pop
dec
fdiv
incl
nop/reserved
jle
movsl
and
adc
push
cmp
xchg
adc
mul
sahf
push
divps
call
xchg
pop
adc
jle
push
pop
sarb
sub
and
and
xchg
jecxz
xor
mov
xor
sbb
mov
add
mov
ret
pop
cwtl
add
cmp
xchg
inc
outsb
dec
test
cmp
adc
outsb
add
cltd
xlat
jo
mov
and
andb
sbbl
daa
ror
mov
and
cs
mov
jb
lods
xchg
push
mov
les
pop
pop
pop
jp
dec
mov
in
jg
fildl
pusha
xchg
mov
xor
mov
shll
leave
pushf
es
shrd
mov
fisubrs
loope
mov
and
fcom
push
and
es
cmp
cmp
pop
push
mov
jecxz
cmp
push
jo
xchg
dec
ds
in
lea
pusha
adcb
adc
and
aam
push
pop
rorb
push
aas
mov
jne
lahf
outsb
loopne
fistl
aam
inc
out
push
mov
pop
and
scas
icebp
insl
icebp
cli
arpl
pop
sub
sbb
and
loope
sar
add
scas
into
cmp
sub
pushf
push
loopne
cmp
ljmp
fldl
jge
pusha
orb
imul
test
insl
jb
dec
xchg
dec
push
jecxz
add
addr16
sub
or
addr16
push
pop
xchg
cmp
sub
cmpb
mov
outsb
jbe
sub
fucomp
mov
or
popa
pop
and
pop
sub
aad
mov
js
mov
clc
cmp
pop
inc
jnp
lock
xchg
mov
cwtl
into
popf
mov
inc
bound
push
js
add
das
mov
or
inc
lods
aad
stos
lods
xchg
lock
cwtl
jno
push
jmp
xor
cmpl
and
mov
icebp
loop
fmull
xchg
and
scas
pop
shl
mov
insl
adc
popa
orb
xchg
push
xchg
int
jnp
cmp
pop
js
mov
xor
sete
cltd
sbb
xchg
pop
andl
sbb
insb
adc
cmp
call
popa
or
or
ja
not
mov
ret
mov
hlt
mov
test
cs
pop
add
call
pop
xor
in
sub
jp
pop
adc
xor
clc
scas
sbb
adcb
mov
add
roll
cmp
scas
push
clc
fiadds
push
and
push
mov
ficomps
jmp
popf
jle
sub
aaa
incb
iret
sub
clc
inc
lret
icebp
pop
jle
mov
mov
into
insb
dec
sarl
mov
push
mov
inc
pop
iret
fidivrs
aas
inc
movsl
pop
cmpsl
cs
arpl
jbe
mov
out
loopne
daa
mov
mov
shl
push
in
mov
push
roll
scas
cmpsb
fstpl
mov
mov
push
jae
ret
movsb
clc
push
shrl
dec
add
inc
xchg
lcall
dec
pop
xorl
pop
outsl
arpl
pop
sub
mov
das
dec
cmpsl
scas
add
jno
cmp
pcmpeqw
and
inc
in
push
cli
mov
inc
add
insb
sbb
xor
loope
ss
faddl
sub
cwtl
insl
xlat
mov
js
stc
cwtl
out
xor
xchg
add
dec
test
scas
loopne
hlt
fidivl
cmp
xchg
push
jbe
stos
xchg
jl
out
xor
jmp
dec
jg
jle
inc
jb
jecxz
mov
fdivl
call
jge
sbb
testb
mov
or
mov
xor
jo
cmp
mov
and
je
mov
mov
insb
adc
les
icebp
pop
nop
inc
divl
out
daa
loope
fs
inc
mov
addr16
xor
sub
stos
loopne
pushf
sarl
jae
inc
push
push
popa
xchg
roll
or
in
cltd
jb
aas
lcall
mov
jmp
cmpsb
jmp
xor
cmc
scas
and
js
jbe
sub
fistpl
stos
add
jnp
scas
push
mov
mov
push
xchg
idiv
or
les
into
call
int3
xor
pop
cwtl
lahf
push
sub
lock
add
mov
ds
sub
repz
sbb
loope
inc
lcall
pop
mov
xlat
scas
sub
scas
cmp
std
mov
sub
add
stc
adc
dec
push
jge
jle
mov
cmp
movsb
mov
add
sbb
push
int3
dec
sarb
jle
adc
sub
xor
inc
adc
cld
dec
scas
cs
mov
sbb
adc
xchg
fwait
hlt
pop
aad
ss
adc
inc
arpl
lods
ja
and
sub
mov
xchg
dec
jo
out
hlt
cld
dec
jo
fwait
jo
push
push
lock
xchg
sbb
call
aaa
push
pop
lods
mov
test
pop
sar
and
mov
mov
int
sub
pusha
add
fistps
icebp
bound
pop
pushf
jp
and
aam
in
ljmpw
jge
pop
adc
mov
idivl
jmp
shlb
je
sahf
cmp
sub
mull
dec
or
cmp
or
adc
aaa
movsb
rorb
int3
xchg
jle
dec
mov
clc
fstps
mov
and
das
aam
xchg
hlt
sub
cmp
mov
push
adc
push
cmp
das
jp
mov
sahf
out
daa
gs
inc
shll
pop
sub
push
aas
inc
adc
xor
xchg
mov
loop
loop
or
cwtl
jo
xchg
dec
mov
dec
fwait
adc
inc
cli
mov
mov
ret
loopne
mov
pop
mov
out
and
cs
loope
push
mov
xchg
sti
aaa
ret
jp
iret
dec
sbb
cmp
xchg
mov
or
mov
out
mov
mov
and
in
inc
push
dec
or
xchg
cmc
xchg
je
mov
gs
inc
fidivl
mov
pop
sbb
and
daa
push
mov
push
or
out
stos
daa
mov
cwtl
and
fdiv
cmp
ret
ja
mov
lods
and
cmp
cmp
imul
pop
loope
inc
jecxz
fs
cmp
repz
jl
shlb
repnz
daa
dec
mov
jmp
dec
mov
aaa
adc
and
and
jne
arpl
dec
cmp
mov
mov
mov
mov
push
add
adc
jl
xor
xor
mov
imul
in
fs
and
das
in
cmc
xchg
push
cmp
xor
xchg
loope
mov
mov
pop
cmp
out
daa
sbbl
loopne
fidivrl
stos
inc
popl
repnz
add
and
mov
push
or
cmp
jl
sbb
jge
mov
pushf
sbb
popf
dec
mov
shlb
sub
jns
loopne
andb
ja
mov
mov
and
movsb
add
cmp
mov
mov
or
and
sub
xchg
and
test
loopne
dec
add
sbb
cmp
int3
add
pop
xchg
xchg
enter
dec
jecxz
jo
or
mov
or
test
lods
aad
iret
and
test
insb
xor
xchg
add
pushf
pop
jmp
sub
fimull
jmp
cmc
negb
cmp
cltd
push
cmpsb
add
fcomi
mul
sahf
mov
arpl
jecxz
mov
add
push
cli
cmpsb
lock
dec
addr16
cmp
pusha
dec
in
mov
pop
xor
popf
insl
xor
cmp
dec
sub
push
jno
jecxz
dec
xor
sub
jl
mov
jmp
iret
mov
push
jnp
add
jnp
cmpsb
jg
xacquire
cmp
or
scas
mov
outsb
jecxz
in
fcoml
notl
push
or
dec
loopne
sub
iret
andl
push
aam
loop
aas
adc
jo
push
push
popf
sbb
cmp
cmp
mov
mov
inc
mov
sbb
icebp
mov
movsb
jno
test
lea
inc
add
sbb
mov
push
loope
mov
and
out
inc
mov
ljmp
pop
jae
ljmp
call
std
out
pop
rcrl
bound
fs
ficoms
cmp
adc
out
inc
movsl
gs
dec
out
inc
xor
ret
jnp
mov
mov
jl
mov
add
xlat
push
jns
movb
xchg
rcll
adc
push
xor
adc
lcall
dec
jmp
add
insb
sbb
ret
stc
fucom
fisubrs
xor
mov
mov
pop
or
mov
ss
mov
mov
fsubl
add
and
lret
pushf
adc
xchg
push
push
inc
cltd
ficoms
jb
lret
mov
insb
push
sbb
xor
xor
pushf
and
jae
daa
jle
ret
in
outsb
pop
aad
lea
stos
mov
cwtl
in
pop
stos
jb
popf
and
dec
pop
jne
lea
lods
sub
push
push
sub
test
mov
mov
pop
fstl
mov
sub
mov
add
inc
jbe
scas
push
insl
subb
inc
xchg
lock
ret
aad
or
sbb
push
mov
pop
cmp
lcall
ret
stc
aam
lock
sub
xchg
add
insb
in
jb
std
into
and
sbb
sub
mov
mov
ret
jbe
nop
insb
ss
cmpb
lods
sbb
es
mov
sbb
lock
add
push
test
inc
out
mov
or
mov
je
add
shll
push
divb
aam
repz
adc
mov
int3
sbb
ret
int
jge
lock
ds
loope
xor
xchg
sti
inc
mov
xchg
jne
pop
inc
push
in
outsb
pushf
or
stos
pop
push
test
fidivrl
push
enter
adc
je
stos
jg
gs
pusha
pop
mov
jne
lea
push
idiv
mov
mov
mov
mov
jmp
xchg
or
push
sub
iret
daa
scas
syscall
call
js
dec
push
cwtl
mov
std
rcll
pop
sarb
sub
lcall
ret
fcompl
out
rorl
push
int3
shl
jbe
aad
push
stc
mov
sbb
jnp
fisttpl
lret
pop
ret
fiaddl
jae
mov
jns
test
stc
cmpsb
sub
mov
repnz
std
lret
dec
frstor
inc
and
fbstp
cmp
jne
mov
push
ret
xor
andl
sti
les
cmp
mov
jg
and
fldl
repnz
cmpsb
dec
mov
jle
lds
loope
lahf
sub
jae
sub
adc
rorb
jl
jbe
pop
mov
xchg
mov
dec
lea
add
jo
push
jnp
shll
dec
jnp
aaa
lods
stos
in
jb
dec
mov
mov
jmp
pusha
test
mov
sub
lock
dec
push
outsb
cmp
repz
jp
outsl
call
jp
mov
mov
repnz
push
loopne
repz
jb
mov
es
fisttps
pop
dec
add
aam
and
xor
xchg
out
mov
dec
arpl
sub
adc
inc
sti
xchg
enter
sub
pop
divb
jmp
ja
xchg
mov
xcrypt-cfb
cmpsl
cmpsb
mov
rcll
mov
ja
jmp
jmp
ja
sbbl
push
ds
push
pop
lcall
xchg
pop
add
cmp
fwait
mov
pop
lea
iret
mov
imul
inc
loopne
jecxz
pushf
xor
ljmp
and
call
or
ds
and
scas
sbb
push
std
mov
mov
sti
loopne
jecxz
jmp
outsb
jne
mov
xor
and
pop
xchg
inc
mov
lods
adc
stos
lcall
dec
push
enter
daa
lock
scas
mov
ret
int3
cmp
fs
outsb
xor
push
daa
mov
in
push
and
jmp
fisubl
stc
out
mov
out
jae
sub
pop
push
and
sbbb
mov
xor
sahf
js
jp
decb
lret
jno
cmp
or
ss
sbb
cli
xchg
adc
out
mov
push
rcll
rcrw
stc
in
les
sarl
nop
pop
xorl
jle
push
add
daa
repnz
mov
clc
shlb
jmp
push
notl
or
pop
pop
pushf
pop
call
inc
loopne
mov
add
push
lock
fiaddl
mov
divb
sbb
js
xor
add
xchg
dec
rol
add
jp
adc
jecxz
rclb
push
mov
jae
add
pusha
popa
dec
pop
ret
insl
inc
inc
aad
jno
inc
mov
sub
mov
mov
jp
or
out
mov
out
cmp
out
test
dec
jno
mov
call
sub
rol
push
hlt
pop
cld
cmpsb
pop
ljmp
inc
sub
insb
loope
ss
sbb
pop
xchg
loope
addb
into
iret
cmp
xor
decl
push
or
and
std
test
cmp
jne
test
jmp
jle
and
cmp
and
xchg
popa
inc
mov
insb
aas
mov
inc
lods
lods
cmp
inc
out
subl
loopne
push
out
aas
cmpsl
mov
xchg
sbb
dec
inc
sbb
popf
and
xor
jl
lods
aam
dec
pop
xchg
ret
fldt
mov
sub
rcrb
jae
out
sub
jnp
cld
push
test
stc
pop
adc
or
hlt
lret
arpl
sbbl
mov
out
xor
mov
ljmp
sub
sarl
insl
dec
pop
mov
push
and
or
lret
inc
enter
mulb
nop
cmp
rclb
loopne
cmp
fildll
lcall
cmp
cmpsl
into
mov
fsub
mov
sub
es
push
lods
jecxz
push
mov
mov
cltd
lcall
pop
dec
xchg
xchg
mov
cli
mov
stos
mov
mov
mov
xchg
lea
jae
lods
dec
imul
insl
imull
es
outsb
inc
movsl
adc
inc
sub
ljmp
les
ret
pop
push
pop
pop
dec
pop
jp
mov
fistpl
mov
jl
inc
sti
dec
sbb
jae
mov
enter
hlt
outsb
fs
mov
insb
xchg
xlat
jbe
xchg
jo
dec
nop
call
push
dec
add
clc
lahf
lods
cmp
scas
bound
inc
adc
sbb
sbb
in
movsb
inc
sub
mov
hlt
push
outsl
insl
aaa
dec
mov
adc
mov
push
xchg
dec
sub
push
add
mov
and
push
mov
sub
sarb
cmpsb
sub
test
je
js
pop
add
xor
add
inc
mov
inc
cli
sub
sahf
data16
int
xor
inc
adc
lahf
jno
clc
in
fs
test
outsb
fsubrs
mov
adc
sbb
int3
mov
inc
sub
int
fwait
test
dec
adc
mov
jnp
movsb
aad
sbb
inc
push
push
mov
adc
roll
cmp
xlat
push
inc
dec
pop
aas
leave
jno
cmpl
fldt
daa
inc
xor
jo
in
sbb
add
stc
fiadds
outsl
push
jmp
fs
xlat
mov
cmp
outsl
mov
mov
sbb
or
or
leave
xor
or
or
daa
fcompl
cmpsb
mul
pushf
fisubrl
icebp
in
sbb
std
int
mov
pop
call
push
adc
lahf
cmp
push
or
icebp
out
shrl
push
jecxz
movsb
pop
inc
and
dec
mov
xor
add
enter
ficoml
push
mov
test
loope
dec
scas
inc
add
jmp
pop
test
add
out
fimull
mov
inc
arpl
push
jmp
inc
repnz
jl
mov
mov
movsl
add
or
pop
test
enter
fsubrp
add
jg
or
loope
hlt
test
call
cmp
lret
pop
fwait
pop
dec
xchg
push
xor
push
and
repz
out
add
inc
jp
cmp
mov
pop
dec
jp
push
lds
in
iret
xchg
ja
in
and
sbb
mov
icebp
lcall
pop
push
or
rorb
push
xchg
sbb
dec
or
inc
repnz
inc
xor
outsl
pusha
mov
push
out
mov
cmpsb
jnp
cmpsb
dec
shlb
test
sbb
pop
lcall
fisubs
push
pop
xor
sahf
mov
out
pop
lahf
pop
icebp
push
sbb
rol
lds
dec
mov
aad
insl
mov
mov
mov
loop
pop
lret
adc
jmp
and
cli
xor
repz
pop
mov
cwtl
cmc
mov
inc
adc
adc
mov
lds
mov
mov
adc
in
inc
xchg
daa
in
test
les
ds
jp
bound
cmp
sti
pop
push
popa
aam
jl
data16
push
jle
movsl
sbb
cmp
hlt
das
sbb
loope
sbb
cs
repz
and
lods
shll
es
xchg
clc
push
jo
pop
cltd
dec
dec
fistps
jne
fwait
outsb
lock
xchg
leave
dec
cmc
or
xor
and
insb
mov
jecxz
mov
or
mov
in
dec
mov
jle
xchg
cli
add
sbb
dec
xchg
iret
cmp
pushf
cs
cli
imul
outsl
or
stos
add
das
aas
inc
dec
cs
aad
arpl
pop
fdivr
mov
les
xchg
fadds
inc
xor
cmp
scas
es
rcll
push
fs
out
and
mov
pop
popa
into
push
enter
addr16
jg
es
push
jo
ret
pop
nopl
lret
jo
fisubs
mov
sub
popa
adc
sbb
fadds
mov
inc
ss
or
mov
cmpsb
notl
inc
cmp
inc
mov
dec
mov
jmp
inc
popa
sub
jb
rcrl
aaa
scas
dec
dec
stos
les
mov
inc
ret
stc
push
sub
je
jmp
fcmovne
mov
or
ljmp
mov
xchg
popf
xchg
mov
scas
out
enter
in
test
jecxz
adc
push
sub
sub
xchg
xor
insl
cli
icebp
xor
sahf
adc
or
push
test
mov
jp
sub
movsb
lea
xchg
xchg
adc
jg
aaa
pop
jmp
xchg
stos
fisubrl
lret
sub
mov
sub
mov
push
cmp
adc
push
popa
xchg
adc
jle
adc
ficomps
pop
add
insl
mov
mov
fwait
repz
mov
scas
repz
or
out
aaa
or
mov
ret
movb
add
daa
mov
ret
adc
add
bound
sbb
stos
jmp
add
jo
xor
sbb
jmp
cmpsl
or
push
fcompl
mov
fcompl
xchg
cmp
push
fnsave
cmpl
pop
inc
xor
adc
xchg
push
jnp
imul
stos
adc
fidivrl
mul
jecxz
pushf
xor
push
sarb
xchg
sub
xor
inc
mov
shr
rsqrtps
pop
cmp
icebp
loopne
popf
and
cmc
push
cld
int3
adc
or
lods
jbe
push
xor
pop
aaa
scas
mov
push
test
jle
imul
test
dec
imul
popf
cs
pusha
les
xor
jmp
mov
mov
cmc
inc
adc
stos
or
lea
ret
hlt
mov
cwtl
push
mov
push
lods
test
leave
clc
loopne
lahf
es
imul
sbb
rcll
fildl
cmp
fimull
mov
jnp
rorl
andb
loop
dec
jb
out
rorb
cwtl
cld
or
mov
cmp
pop
xchg
rolb
out
mov
sahf
push
pop
mov
push
jns
adc
mov
adc
mov
inc
mov
or
mov
inc
mov
inc
insb
lods
cmpsb
sbb
or
jle
push
pop
notl
stos
xchg
repnz
sub
out
xor
inc
xchg
rolb
xor
lret
test
gs
fbstp
inc
xchg
js
sub
in
sar
out
xchg
and
shll
insb
arpl
xchg
sahf
add
cs
inc
or
jb
dec
push
mov
shlb
clc
jge
or
sahf
js
push
test
sub
lret
rorb
mov
fcompl
cwtl
or
sub
daa
push
adc
mov
outsb
stos
jb
lds
jle
lds
out
cmc
mov
pop
xor
sbb
in
sub
mov
jo
int3
out
imul
mov
xor
and
jb
xor
idivb
push
mov
xor
btc
or
jae
test
add
pop
enter
adc
mov
mov
push
ja
mov
insb
inc
mov
sbb
sbb
xchg
pop
push
pop
mov
test
mov
add
xlat
adc
and
or
cmp
xchg
dec
jo
popa
push
push
lods
jo
jmp
pop
mov
push
data16
push
push
mov
rolb
mov
in
lahf
mov
add
push
mov
lcall
cmpl
sbb
mov
dec
inc
cwtl
scas
cmp
cwtl
mov
push
xor
mov
push
insb
lret
int
scas
repz
popf
lods
sbb
pop
daa
popf
inc
adc
loopne
mov
adc
loop
in
add
xor
aam
cmp
movsb
jecxz
mov
ret
cld
push
addr16
aam
stos
push
inc
mov
pop
dec
jns
ret
sub
jmp
xor
mov
xchg
outsb
pushf
mov
lea
xchg
jno
pop
pop
cvtps2pd
lock
scas
repnz
pop
in
ficoml
lds
sub
mov
mov
clc
push
xchg
cmpsb
push
adc
mov
je
ds
lahf
or
div
pop
pop
lcall
loop
icebp
mov
stos
cld
test
rorl
sarb
mov
inc
dec
xor
sub
dec
xchg
pop
clc
out
fwait
sti
int
pop
loope
push
pop
cmpsl
sub
cli
sub
push
insb
cmp
pop
fidivs
repnz
lret
cmp
daa
and
ja
mov
pushf
ljmp
leave
xchg
or
orb
icebp
inc
sahf
aaa
adc
push
mov
or
push
fidivs
mov
pop
sub
iret
push
mov
dec
data16
ja
leave
xchg
jg
rcr
fcmovne
inc
mov
jne
inc
movsb
inc
inc
out
adcl
sbb
mov
add
cmpsb
sub
jb
mov
or
jns
dec
pop
decl
push
xchg
and
ja
int
inc
jge
pop
push
mov
les
out
out
pop
rcrl
lock
out
shrl
inc
aad
push
and
dec
out
push
push
jo
adc
mov
and
adc
shufps
push
into
aad
loop
push
in
push
mov
cmp
ljmp
mov
pop
movsb
xor
fnsave
xchg
adc
xor
cmp
into
lret
imul
or
std
mov
jge
pusha
sub
pop
mov
xor
insb
jbe
pop
or
ret
out
mov
clc
lahf
adc
nop
addl
sub
aam
cmp
pop
add
add
sbb
cmp
cli
push
jo
in
or
pop
push
popa
adcb
leave
punpckhwd
dec
in
scas
out
xchg
cli
andb
cmc
mov
push
push
ficomps
mov
mov
into
and
aam
test
xchg
mov
je
jp
fstpt
aas
out
xchg
push
sbb
rcrb
and
cld
fildll
push
sub
mov
lahf
pop
bound
and
jns
inc
jmp
test
inc
inc
pop
jae
jp
xlat
xchg
mov
jmp
lods
test
mov
mov
adc
jne
movsb
cld
decl
add
cld
movsb
movsl
add
push
inc
out
shll
sti
nop
jl
ret
xchg
adc
adc
fdivl
test
or
out
aaa
push
adc
fucomp
call
shr
or
dec
xchg
and
mov
enter
mov
lret
nop
cmp
pop
daa
iret
xor
adc
pop
push
testl
fwait
into
push
add
pop
xor
jno
sub
js
push
mov
mov
adc
popa
mov
inc
fbld
pop
stc
push
gs
lret
xchg
stos
push
mov
mov
xchg
xorb
fsubrl
mov
pop
push
scas
mov
mov
movsb
loope
js
sbb
cmpl
movsl
xchg
dec
mov
ret
pop
aam
insl
lods
ds
mov
jmp
dec
stos
dec
inc
stc
sbb
test
adc
shrb
push
adc
cmpsl
push
xchg
dec
stc
mov
stos
mov
adcb
sti
loopne
test
negb
xor
inc
divb
test
negb
xor
sub
in
loope
sarb
dec
testl
enter
push
sub
fwait
insb
jp
pop
insb
lret
lcall
addb
mov
ja
leave
jmp
xlat
push
gs
mov
dec
cmp
js
repz
cmp
mov
sbb
jecxz
insb
clc
push
mov
cmp
dec
insb
jnp
mov
jmp
push
push
cmp
add
test
sbbl
out
repnz
mov
mov
movl
lds
xor
xlat
cmp
loop
ret
into
test
std
pop
or
sub
test
add
pop
fs
scas
adc
push
imul
div
hlt
or
jno
out
mov
in
cmp
mov
jmp
dec
subl
jb
aas
in
lods
scas
rcr
mov
fcoml
test
pop
test
scas
insb
push
inc
stc
jnp
push
fldl
jnp
jns
push
pop
stos
jb
ret
or
cmpl
xchg
out
stc
sub
flds
lcall
cmpsb
js
daa
push
into
xlat
mov
cmp
add
pop
pop
or
stos
mov
sub
dec
jbe
mov
out
or
mov
mov
jp
inc
scas
in
inc
sbb
out
es
jmp
push
dec
les
inc
es
mov
pop
leave
push
jp
pop
loop
cmp
hlt
popf
dec
xchg
out
pop
addr16
pop
and
lcall
daa
movb
push
ret
inc
lea
sbb
fistpll
cmp
jo
adc
jg
mov
mov
adc
sub
outsb
push
mov
adc
mov
ljmp
testl
aaa
dec
add
mov
stos
iret
and
jle
call
call
xor
add
clc
repz
mov
shr
iret
int3
adcb
pop
mov
rcl
push
xor
leave
cmp
es
jp
xchg
xor
mov
sub
shl
mov
cmp
or
dec
xlat
out
data16
lea
leave
pop
add
outsl
cwtl
jo
push
jnp
je
xchg
mov
pop
and
stos
mov
pop
sbb
xor
stos
icebp
push
call
and
jno
rcpps
and
int
les
adc
push
xor
xor
jb
add
and
mov
jmp
adc
cmpsb
mov
popa
daa
add
lock
sub
lret
pushf
pop
testb
mov
push
enter
push
cli
or
movsl
cmp
sub
mov
sub
pop
inc
jno
mov
je
push
mov
mov
and
ss
rcrl
dec
jno
push
lret
repnz
aam
push
pop
test
popa
rcrb
dec
std
data16
push
popa
lods
arpl
shrl
test
enter
in
mov
inc
xchg
ljmp
cwtl
repnz
cmp
rcrl
and
cmpsb
repz
in
mov
stc
adc
call
ds
sbb
sub
clc
xlat
and
scas
sahf
mov
dec
daa
std
and
repz
xchg
jne
rol
or
shll
inc
add
fadd
pop
sub
mov
push
mov
mov
lahf
sbb
sub
add
sub
testb
ljmp
in
lahf
fdivl
sub
bound
mov
pop
and
add
dec
les
fcmovnbe
push
inc
or
out
jbe
xchg
clc
xlat
mov
push
js
xor
push
pop
sahf
sbb
imul
ret
pop
out
aas
xchg
js
dec
push
push
mov
cmc
push
xchg
inc
rcll
mov
in
shr
negb
lods
jnp
js
mov
xchg
add
loopne
mov
mov
xchg
or
xchg
dec
xor
or
call
dec
push
stc
fs
clc
pop
xchg
adc
test
xchg
in
ds
dec
and
fxtract
mov
je
cli
push
add
xchg
dec
cmpl
jb
xor
dec
jbe
popf
sub
dec
add
popf
mov
repnz
enter
icebp
loope
arpl
adc
lahf
add
jb
add
mov
cwtl
mov
sub
and
pop
test
addb
xor
aad
mov
jne
cmp
push
pop
adc
add
lret
push
shlb
dec
sbb
pop
fwait
test
jmp
cmp
jp
inc
mov
inc
inc
xchg
lret
outsb
popa
cs
out
out
sub
aas
and
dec
pop
sbb
call
pop
xchg
je
jnp
dec
dec
daa
mov
stc
fiadds
mov
add
inc
dec
sbb
ret
sti
jns
ficompl
nop
dec
test
fs
add
xchg
push
adc
fwait
push
mov
cmpsl
mov
dec
lock
inc
les
cmp
rcr
les
pop
push
notl
das
inc
sti
aas
cmc
dec
in
stc
pop
and
subb
mov
or
jb
mov
adc
jg
mov
icebp
aad
or
test
sub
out
jno
pop
popa
stc
mov
psubb
outsl
test
jb
ret
fistpl
cmp
in
fimuls
sbb
mov
xlat
jecxz
das
out
lret
andb
add
xor
hlt
fimull
cli
cs
mov
xchg
add
xlat
aad
jecxz
bound
jno
and
and
jmp
sbb
jnp
jp
add
mov
push
in
popa
add
test
bound
xchg
dec
inc
lock
pandn
fiadds
sub
fs
pop
or
pop
notb
add
out
je
cmpsl
jp
mov
pusha
in
sti
or
shll
pop
arpl
hlt
mov
stos
mov
sbb
inc
test
cmp
mov
cmp
jg
pop
jmp
add
in
fcoms
push
lods
jnp
lea
cmpsb
or
inc
das
aad
or
pop
cmpsl
movsb
inc
dec
xor
dec
mov
push
inc
leave
adc
cmpsl
sbb
mov
lods
out
xchg
cmpsl
mov
clc
mov
mov
les
pop
dec
hlt
fst
out
pop
arpl
xchg
jo
cmc
mov
cmp
mov
jp
sub
push
pop
stc
jmp
xchg
pusha
fidivrl
and
fisubs
iret
out
jmp
pop
cmpsl
xor
in
pop
inc
jp
mov
xor
lds
iret
add
mov
push
pop
cmp
loope
adc
jnp
out
push
cmc
lret
movsl
mov
fildl
lcall
adc
outsl
mov
and
jno
push
adc
scas
lret
sub
addl
jmp
lahf
je
test
cmp
adc
push
popa
in
push
mov
push
mov
das
pop
out
inc
aam
imul
js
sbb
lods
test
lods
rcll
xchg
fwait
icebp
jae
xlat
pop
and
jge
mull
fstps
cmpsb
or
or
add
movsb
push
fcomps
mov
or
in
cmpsl
xchg
arpl
mov
xchg
xchg
sbb
out
jge
shlb
cli
mov
jno
fcmovbe
inc
jno
lret
iret
mov
sbb
add
mul
add
in
jecxz
mov
ss
stos
imul
xor
xor
insl
cld
repz
std
xchg
push
jp
call
or
mov
xchg
sub
hlt
sub
fwait
cmp
add
pop
loop
mov
adc
cmp
into
ss
mov
lea
mov
repnz
sbb
cmp
dec
movsl
pcmpgtw
dec
jg
xchg
orb
hlt
das
iret
cmovno
cmpsb
ja
addb
mov
inc
push
fdivrs
insb
rolb
call
sub
mov
test
dec
fidivl
mov
lods
je
mov
and
test
add
out
xor
pop
outsl
enter
lcall
cld
inc
pop
xlat
lahf
cltd
adc
lods
push
popf
cmpsl
js
in
test
or
popf
jp
push
lods
aaa
loop
and
sub
xor
test
sahf
jmp
inc
mov
mov
jp
mov
ljmp
dec
stc
scas
pop
pop
pushf
xchg
cs
and
loopne
andl
pop
fldenv
int
call
pop
ss
sti
cli
outsb
jecxz
int
adc
mov
subb
cmp
push
fistl
ja
cmp
stos
cmpsb
push
mov
out
inc
jae
or
pop
das
lods
xchg
pop
or
aam
push
data16
sbb
jp
mov
scas
outsl
jl
inc
je,pt
pop
dec
push
hlt
imul
cmp
cld
add
jb
mov
cmpsb
mov
mov
push
lock
xchg
inc
shll
mov
nop
fwait
push
pop
jbe
pop
inc
in
stc
mov
mov
test
ss
popa
imul
rcl
sub
mov
sub
dec
xchg
and
lock
dec
fiadds
sub
pop
push
push
or
aad
jp
add
pop
fisubl
push
sti
popa
jp
pop
lods
inc
sbb
sahf
out
add
imul
or
leave
ja
inc
repnz
mov
or
call
mov
lock
pop
mov
pop
jmp
mov
sbb
push
cmc
pop
inc
popf
ret
sub
add
push
jmp
sti
mov
mov
aas
pop
xor
lret
icebp
inc
push
out
xor
sti
rcll
outsl
addr16
xor
imul
and
cli
add
jmp
inc
mov
pop
jns
daa
jl
pop
add
dec
jns
daa
xor
xchg
mov
fs
pusha
and
xchg
rol
and
jmp
mov
cs
js
cmp
shlb
inc
stos
pop
pop
vrcp14ps
xlat
ds
insb
lock
mov
sbb
mov
leave
out
xchg
or
sar
sahf
shrb
jno
sbb
cmp
add
and
mov
int3
cmc
pop
sbb
in
cmpsl
daa
mov
mov
outsb
xor
cmpsl
mov
test
aam
lret
add
mov
cmp
movsl
mov
push
dec
shlb
push
repz
xchg
mov
insb
sub
jns
js
dec
jp
in
xchg
and
xor
stos
addl
add
xchg
mov
lea
mov
pop
and
cli
jb
pop
xchg
push
mov
aas
insb
push
cmpsb
and
xor
sbb
mov
loopne
aaa
inc
faddl
repnz
arpl
mov
mov
fisubl
outsl
push
inc
push
add
fimull
popf
fisttps
outsl
jbe
pop
sahf
sbb
cmp
pop
fs
or
jge
mov
push
jp
nop
movsb
push
xchg
mov
rcr
lea
or
repnz
dec
and
cwtl
push
mov
adc
push
xor
mov
xor
in
lret
aam
fstp
bound
pop
jb
jbe
jb
popa
pop
add
jbe
sar
or
pusha
arpl
cmpsl
pop
idivl
inc
enter
aaa
push
dec
push
xor
loop
fdivl
xor
cmp
or
push
cli
test
jg
dec
test
cmpl
sarb
cmp
hlt
sbb
push
inc
sbb
or
fninit
es
lret
pop
aas
dec
sbb
mov
pushf
push
cs
and
fmull
mov
push
aas
lcall
sahf
hlt
popa
inc
das
cwtl
adcl
pop
dec
movb
jbe
pushf
mov
xchg
mov
push
push
sub
lret
inc
cmpxchg
cs
and
les
fldt
add
adc
je
dec
in
xlat
cmpsl
pop
inc
adc
or
cmp
fnstcw
fwait
int3
push
shll
jmp
adc
bound
les
push
into
fstpt
rolb
lods
mov
or
daa
movsl
mov
mov
hlt
in
gs
mov
loopne
cmp
dec
movsb
ja
xchg
inc
in
stos
pop
adc
xchg
aad
lcall
sub
stos
shll
cli
loop
icebp
xchg
outsb
sbb
je
pop
push
lcall
nop
xchg
pop
cmp
lods
inc
lds
mov
daa
add
cmp
mov
cwtl
outsb
mov
or
cltd
push
outsl
clc
in
sub
cmp
push
rcrb
xor
sub
in
cmpsb
adc
xor
fxch
mov
dec
lock
cmp
pop
lods
cltd
fisubl
adc
mov
pop
mov
jnp
and
in
mov
mov
inc
push
cmp
sbb
sub
nop
sub
dec
and
scas
pop
roll
and
xchg
push
sahf
dec
and
pop
in
pop
rcr
mov
adc
push
dec
push
fnsave
jbe
and
mov
pop
ret
mov
fsubp
imul
or
lods
loope
jmp
xchg
push
lcall
and
sti
pusha
iret
sub
and
mov
out
push
insb
sti
push
aaa
lods
imul
insb
bound
dec
pop
mov
xchg
mov
pop
add
mov
iret
in
cmp
push
or
or
push
mov
jae
call
daa
dec
movsb
les
in
sbb
inc
sub
dec
out
push
std
jne
pop
test
fnstcw
pop
lret
add
cmp
mov
push
scas
rcrb
xchg
es
inc
inc
mov
outsl
mov
mov
add
in
lret
cmpb
shlb
pop
in
iret
and
ja
outsb
cmpsl
or
loopne
arpl
fwait
xchg
aaa
adc
and
out
fwait
xchg
sbb
movsb
mov
pop
enter
push
push
int
and
dec
rcl
sub
rolb
mov
dec
insb
cmp
icebp
and
push
sbb
es
pop
pop
cmc
in
mov
movsl
ret
sbb
fidivrl
frstor
lret
cmp
out
mov
mov
leave
repnz
push
stos
popf
and
sbb
inc
lret
cwtl
inc
aad
push
inc
test
push
sub
sbb
call
cmc
and
dec
sub
jnp
pop
fwait
sbb
or
jbe
fabs
xlat
add
mov
rcrl
jge
mov
mov
lcall
inc
rcll
hlt
mov
dec
pop
aam
dec
ret
push
add
in
fwait
jle
daa
xlat
repnz
test
mov
jp
aas
lea
cs
lahf
sbb
call
xor
cli
les
cli
in
mov
pop
jno
mov
adc
andb
add
hlt
jnp
cmovnp
pop
and
sub
push
sar
cmp
add
nop
subl
or
jl
dec
jbe
js
cli
ss
into
arpl
pop
rcrb
push
data16
xchg
gs
leave
cli
and
inc
jo
jmp
jp
sbb
adc
inc
cmpsl
cli
xchg
scas
push
jae
sub
mov
jge
cs
clc
add
aaa
dec
sarb
xor
sbb
jns
gs
jns
movb
push
mov
push
loope
add
jo
mov
fiadds
insl
xchg
push
pop
in
xor
out
test
and
movsl
gs
dec
mov
in
rcr
lods
lods
inc
dec
push
lea
enter
and
xchg
or
shrb
jbe
inc
pextrw
mov
data16
pop
lods
mov
jmp
mov
jo
mov
jl
xchg
fstpl
sti
push
push
adc
movb
out
loopne
in
iret
popf
scas
ret
sti
push
push
aad
sub
ficomps
jp
xlat
xchg
pop
mov
in
add
clc
xor
push
add
subl
aad
adc
repnz
call
pop
fwait
scas
iret
jge
mov
aas
adc
pop
jecxz
setns
fnstenv
pop
popf
sub
sarb
sbb
xchg
and
in
jns
call
scas
mov
lahf
pushf
push
pop
fdivs
add
or
mov
std
out
push
enter
call
dec
inc
jl
inc
in
mov
test
call
std
shll
sahf
rcrl
push
pushf
mov
cmpsl
or
js
dec
cmp
xor
out
xor
ret
push
shrb
dec
push
jle
lahf
ja
mov
xor
mov
adc
into
jb
cli
push
pop
xchg
push
movsb
mov
add
mov
cmp
xchg
and
sbb
sbb
adc
lea
and
mov
icebp
lds
inc
inc
inc
movsb
mov
adc
jp
cmpsb
dec
mov
mov
repz
ret
dec
cmp
lds
popa
jl
cld
push
cmp
or
lcall
mov
lret
adc
adc
cltd
call
xorl
jbe
add
mov
inc
fimuls
rclb
cmpsl
fisttpll
shrb
js
mov
inc
xor
push
test
es
dec
rorb
and
das
in
jns
adc
iret
pop
insb
pop
dec
or
sub
and
jbe
cmp
cmc
ljmp
loopne
imul
jge
test
sti
loop
scas
or
add
fdivl
inc
je
sbbb
fcomip
ret
dec
sbb
xor
lock
stos
sbb
insl
inc
inc
cwtl
fidivl
pop
push
or
and
xchg
jl
pop
jecxz
imul
cmp
fs
js
pop
stos
xor
mov
xchg
xor
mov
fisttpll
outsb
stos
or
hlt
pop
lods
imul
pop
pop
mov
jo
pop
outsb
loope
push
pop
jo
aam
sub
dec
mov
sub
push
sbb
pop
pop
setl
aam
and
dec
mov
mov
and
repnz
or
cwtl
add
std
mov
cmpl
sbb
mov
stos
mov
fwait
lahf
add
sub
cmp
push
inc
adc
fcmovnu
pop
or
mulb
push
sub
xchg
fcmovne
push
pop
mov
movl
icebp
loopne
in
adc
fs
fisubl
insb
faddp
cmp
shlb
xor
imul
fsubp
xchg
xchg
and
xchg
sub
push
stos
adc
insb
xor
pop
test
loope
add
mov
xorb
sarb
rorb
dec
out
jae
std
jbe
mov
lahf
add
out
sarl
lret
scas
fldenv
sti
icebp
arpl
mov
dec
xchg
ficomps
jo
add
jnp
add
fidivrs
bound
or
sub
in
add
inc
mov
nop
ja
cs
sub
or
and
cmp
dec
adc
xchg
inc
add
movb
jae
adc
pop
push
loop
push
dec
pushf
xchg
push
stc
mov
cmp
mov
push
sbb
dec
outsb
mov
movsb
mov
or
or
imul
je
cltd
inc
cli
popf
xor
arpl
cs
sub
inc
add
xor
out
in
inc
rcrl
mov
cmp
sbb
test
hlt
and
sub
pop
hlt
cmpsl
push
sub
sbb
movb
sbb
xor
cltd
cmp
inc
sub
lret
je
inc
mov
test
les
xor
cs
adc
loop
pop
and
lock
sbb
jne
mul
pop
mov
les
in
xor
cmpsl
les
mov
repz
sub
rorb
es
dec
out
sbb
mov
adc
clc
inc
enter
lods
icebp
fwait
iret
aaa
adc
imul
xor
cmp
ret
ss
addr16
pop
pop
add
mov
mov
jecxz
mov
push
jbe
imul
sbb
adc
mov
mov
into
daa
pusha
fimull
mov
fs
push
push
pusha
out
inc
inc
cmpb
ror
out
adc
add
icebp
sarb
mov
rcrl
xchg
dec
mov
lret
sahf
subb
inc
add
sbb
in
loop
mov
xor
jge
psubsb
and
mov
add
fwait
xor
add
rcl
sbb
cld
xchg
push
addb
or
add
loopne
movsb
scas
js
or
fcomi
jbe
repnz
insl
aaa
jp
mov
in
out
push
sub
sbb
lahf
inc
sbb
xchg
sbb
or
outsl
pop
mov
sub
dec
repz
xlat
mov
mov
push
daa
inc
push
scas
pop
mov
sbb
aad
test
loopne
rorb
and
sbb
push
push
push
inc
sub
xor
pop
sub
dec
dec
jns
inc
push
iret
xor
and
dec
fidivs
jnp
add
fwait
data16
mov
shld
repnz
clc
or
dec
dec
mov
sub
dec
inc
cmpsb
jg
jb
loop
mov
jg
jp
cmc
sub
add
jbe
pop
das
das
shrl
sub
pushf
add
xchg
leave
pop
inc
scas
sub
and
inc
in
stos
iret
lret
mov
shrl
push
fstpl
insb
push
jbe
out
cld
dec
xchg
mov
je
add
cmpsl
int3
sbb
into
jnp
mov
pop
jl
data16
mov
ret
out
call
pop
je
mov
inc
jb
or
mov
ficoml
jg
cld
dec
ja
insl
jle
sahf
shll
leave
jno
out
inc
mov
pop
movsl
test
ror
or
xchg
loop
and
enter
xchg
mov
jg
mov
mull
loop
dec
push
imul
cld
xchg
mov
mov
fwait
push
fldenv
push
adc
xor
in
push
sub
fldl
ja
cmp
in
js
inc
lcall
cld
or
inc
stos
and
cmp
adcl
add
clc
movsl
lds
dec
xchg
and
outsb
bound
xchg
or
test
or
loope
imul
rol
and
out
ss
sbb
jns
ja
push
lock
popa
fcmovne
shr
jnp
in
ja
nop
sub
faddl
call
cmc
test
popa
dec
adc
in
iret
jecxz
mov
and
cmpsb
jo
lahf
ret
iret
sbb
sti
fwait
cwtl
test
cli
mov
mov
insb
dec
rcrb
mov
mov
and
ret
mov
test
into
or
cmp
sbb
aam
cmp
shlb
movsb
stc
pop
into
test
stos
outsb
sbb
es
add
dec
dec
in
scas
mov
xchg
push
jnp
xchg
jg
daa
adc
aad
loopne
pop
stc
lahf
adc
test
cmpsb
push
sub
cltd
adc
test
adc
cmpsl
leave
pop
add
push
lcall
sbb
cmp
inc
hlt
outsl
jmp
sbb
rcll
imul
das
mov
ljmp
fcomip
dec
out
or
sbb
and
cmpsb
aaa
cmp
inc
and
mov
push
mov
test
sub
ror
ret
push
xchg
dec
or
adc
jg
fdivl
or
pop
inc
test
mov
jno
sub
push
lcall
inc
cmpsl
int3
iret
push
push
roll
fistpl
jb
push
insb
sub
add
xchg
sbb
fistl
shrl
ss
mov
pop
dec
dec
test
and
dec
push
stc
or
mov
pop
out
inc
out
adc
xchg
std
adcl
outsb
or
inc
and
and
int3
sub
test
push
sub
add
dec
add
cltd
lahf
out
jmp
cwtl
inc
insb
sbb
mov
notb
dec
jae
dec
pop
sub
sub
dec
divb
dec
out
cwtl
mov
adc
adc
xor
clc
pop
push
jo
pop
jl
nop
dec
pusha
not
andl
dec
mulb
or
ficompl
or
sbb
and
mov
cmp
sub
ja
jge
repz
lods
mov
fcomi
mov
mov
in
mov
sbb
ja
inc
add
mov
loope
mov
jp
imul
in
out
scas
jns
fdivl
ret
pop
cmp
mov
xlat
movsl
dec
iret
add
mov
adc
ss
cmc
in
lcall
or
mov
sbb
ret
mov
dec
cltd
jecxz
cmc
ret
std
jg
xlat
ljmp
mov
mov
push
inc
inc
into
popf
fs
cmp
inc
ficomps
dec
mov
adc
or
aad
data16
dec
sbb
sar
jo
mov
repnz
mov
dec
add
in
pop
dec
push
int
aad
push
fisubs
cwtl
bound
lcall
test
jmp
leave
mov
fildll
fdivr
sbb
pushf
jge
sahf
stc
mov
mov
xchg
cmc
push
and
add
cmp
stos
xchg
dec
or
in
fdivr
jne
mov
idiv
xchg
inc
call
shlb
xchg
loop
int3
adc
lock
rcrb
mov
mov
in
xor
add
lds
aad
cmp
out
mov
xor
popf
loopne
jns
stos
insb
dec
cld
jb
xchg
mov
dec
jno
dec
lret
adc
bswap
push
jmp
sbb
mov
nop
mov
ss
cltd
shrb
inc
lret
jbe
xor
adc
fisttpll
xor
aad
xor
adc
out
or
addl
push
pushf
push
js
sbb
addr16
cld
dec
fnstsw
fbld
cld
pop
pop
pop
inc
cmp
hlt
cs
jne
lret
inc
scas
cmp
push
inc
enter
xor
imul
icebp
flds
pop
popa
mov
lcall
and
sub
repz
mov
popa
or
dec
mov
sub
pop
add
xor
icebp
sbb
shrl
out
add
adc
std
jo
add
movsl
int3
ljmp
or
pop
subb
mulb
cmpsb
ss
jle
inc
cmp
inc
mov
jb
ss
mov
xor
sbb
adc
cmp
xchg
daa
mov
cli
jo
xchg
cmpsl
gs
outsb
jle
and
sub
hlt
mov
add
ljmp
push
add
loop
mov
push
aad
push
into
insl
lds
push
inc
lret
movsb
fxch
sub
adc
push
sbb
mov
inc
aad
in
cmp
std
lods
mov
daa
mov
loopne
mov
rorb
arpl
xchg
ja
test
loope
out
scas
push
sbb
stc
loope
mov
sbb
pushf
mov
mov
pop
inc
push
cmpsb
sbb
mov
mov
ficoml
sub
pop
sbb
andl
cmp
sub
mov
rclb
cs
add
jne
ljmp
cmp
sbb
sub
test
rcrl
pop
mov
mov
movsl
int
xor
push
add
fldt
stos
mov
mov
fnsave
pop
or
sbb
jge
lods
jae
out
decb
fists
jmp
add
movsb
test
cmp
sbb
out
lods
shll
adc
jo
enter
mov
fisubs
inc
ds
mov
or
xchg
arpl
add
inc
adc
dec
cmp
cli
jnp
xchg
xor
dec
aas
fdivrs
sbb
call
pop
mov
xchg
cmp
ljmp
mov
mov
add
mov
movsb
in
loop
lret
jo
sub
cmpsl
test
sar
xor
mov
sti
roll
mov
or
je
dec
mov
jns
out
lods
or
jge
jae
call
push
lods
sbb
push
ret
cmpb
add
mov
jmp
push
xchg
test
mov
push
or
sbb
test
in
jle
xchg
push
add
adc
sbb
pop
daa
mov
fcomp
push
mov
mov
or
and
add
movsb
lcall
clc
or
pop
dec
pop
inc
daa
outsb
sub
adc
sub
push
add
add
int
xor
pop
ret
xor
and
cmpsb
lgs
addr16
sub
xchg
je
je
xlat
das
repnz
mov
jp
mov
jmp
das
insl
sub
dec
movb
pop
insb
inc
pop
pop
movsb
mov
dec
out
repz
xchg
and
fwait
mov
sbbb
add
jno
mov
mov
fwait
push
xor
mov
mov
ret
scas
rcrl
mov
push
dec
lahf
mov
pop
lahf
test
rcrb
mov
outsl
aad
lods
fcoml
push
sbb
pop
mov
cmpsl
shrl
mov
inc
push
hlt
xorl
pop
and
adc
add
mov
mov
cmp
pop
jmp
push
dec
and
pop
jle
sub
fsubrs
xlat
xor
xlat
xor
ds
lods
push
push
pusha
push
jl
repz
sbbl
push
pop
sbb
add
pop
setns
insl
ja
inc
scas
xchg
fwait
mov
hlt
sub
into
push
out
inc
jnp
int
jge
dec
jns
xor
cld
nop
imul
movsl
shrb
test
adc
enter
aad
inc
dec
xchg
inc
add
adc
in
ja
pop
adc
cmpsb
outsb
cmp
and
mov
into
popa
fidivrl
and
sub
clc
pop
pop
add
dec
push
lea
imul
dec
add
xor
test
mov
sub
xchg
shrb
cwtl
mov
repz
xchg
stos
inc
pop
mov
dec
daa
xchg
dec
ror
sbb
dec
push
stos
mov
es
scas
lcall
mov
daa
in
icebp
call
inc
ret
inc
xchg
call
ror
sbb
mov
cs
and
icebp
addr16
and
bound
add
cmc
lods
sub
push
lret
inc
gs
dec
mov
or
ljmp
xor
hlt
mov
stos
call
jae
dec
movups
add
in
inc
lods
dec
sbb
cmp
push
arpl
jl
cmp
dec
lods
and
repnz
popa
out
sub
ds
lea
je
out
xchg
sub
pop
lods
adc
stc
mov
mov
ret
push
das
jp
mov
popa
pusha
insl
cmp
cmc
sti
pop
orb
push
push
das
push
dec
pop
jbe
push
xchg
mov
xchg
pusha
push
sahf
jmp
inc
imul
aas
pop
rorb
jecxz
loop
dec
mov
sbb
jg
lods
out
insb
cmp
out
mov
outsb
inc
mov
imulb
jb
movsb
push
mov
sub
sbb
cltd
xchg
mov
sub
cmpsb
mov
ljmp
sbb
jp,pt
outsb
jb
pop
cld
jbe
mov
push
mov
jecxz
inc
aaa
xor
sbb
stos
and
out
mov
and
test
mov
add
dec
sbb
clc
xor
jbe
xor
mov
sbbb
fmuls
lds
es
push
jl
movl
sub
shll
addb
outsl
stos
bnd
pushf
xor
in
and
dec
into
pop
pop
and
adc
or
test
paddsb
dec
mov
and
sbb
cmp
faddl
jge
pop
fisubrs
outsl
jmp
popf
push
scas
iret
adc
cmc
jbe
test
jl
mov
adc
lret
out
and
cmc
push
arpl
adc
arpl
or
rclb
subl
inc
sbb
arpl
lods
push
pop
frstor
adc
loope
clc
jecxz
in
jl
fdivrl
inc
mov
or
jle
popf
add
testb
popa
loopne
notb
push
xchg
leave
xchg
fisttpll
sbb
dec
cmp
dec
mov
ror
xor
jae
aas
cmp
ljmp
lret
mov
inc
aad
int
add
push
js
out
lods
jnp
pop
scas
repnz
cmp
xchg
add
std
sbb
loop
sub
sub
mov
out
orb
add
outsb
sbb
fldcw
mov
movsb
fwait
and
cmp
aam
les
mov
and
sub
xor
pop
negl
adc
sar
push
mov
pop
das
add
push
xchg
out
push
and
mov
adc
or
int
xor
stc
pop
push
fs
mov
mov
loopne
cld
sbb
sub
fs
popf
mov
aaa
das
popa
inc
push
xchg
rcrl
fmulp
push
add
mov
ja
dec
lods
mov
xor
push
daa
rcr
xchg
mov
sahf
push
sbb
test
adcb
loopne
mov
inc
andl
adc
xor
jg
lods
int3
movsl
lret
jp
fs
dec
fnstsw
fmull
movsl
movl
sbb
mov
mov
iret
mov
and
negb
out
incb
imul
fwait
dec
pop
mov
aad
adc
ds
jno
mov
jmp
sbb
aaa
lock
jp
leave
fisubrs
jl
test
adc
adc
movsb
and
int3
dec
sub
cli
call
mov
xor
mov
sti
aam
out
cmc
popf
pop
xor
sarl
cld
adc
loop
push
xor
dec
xor
roll
mov
into
adc
icebp
mov
cmp
inc
hlt
adc
jg
xchg
shll
fimull
sbb
dec
pusha
arpl
sbb
and
cmp
cmp
or
roll
sub
xchg
xor
fstpt
nop
sub
or
pop
jnp
sbb
push
inc
mov
pop
jbe
movsl
jg
ficoms
adcl
inc
scas
stc
lahf
pop
in
add
sbb
jecxz
xchg
xor
cli
cmp
cwtl
mov
in
mov
and
aas
out
mov
pop
cs
icebp
jmp
xchg
pop
cmpsl
fistl
lcall
sub
cvtdq2ps
and
add
lds
cmp
jmp
jmp
mov
dec
out
cs
adc
inc
int
inc
sbb
incl
fstpl
cs
and
aam
cltd
jbe
mov
inc
repz
sahf
mov
or
cmp
enter
cmp
insb
inc
push
scas
and
or
in
mov
adc
repnz
mov
imul
or
adc
cmp
lcall
sub
cmp
inc
fwait
in
in
adc
sbb
test
push
loopne
add
jle
xor
loop
fs
or
add
jl
sub
xor
ffreep
imul
or
mov
mov
sbb
add
mov
push
add
push
sub
test
subl
andl
repz
fimuls
dec
les
adc
sub
xchg
mov
loope
and
mov
xor
out
sbb
lods
lret
xchg
adcb
nop
and
sub
add
outsb
sbb
sarl
jne
pop
cmpsb
xor
cs
nop
dec
iret
data16
jecxz
pop
les
jl
nop
push
pop
lahf
sub
push
xchg
insb
cmp
ret
mov
addr16
repnz
mov
stc
pop
mov
pop
xchg
or
sub
pop
cmpsb
scas
shrl
jle
mov
push
into
cld
push
fwait
lock
inc
mov
cmc
xor
in
push
outsl
xchg
sbb
push
hlt
test
mov
jbe
inc
sbb
push
and
sbb
outsb
jo
jle
xor
jmp
andb
push
rcrb
addr16
iret
fdivrs
fs
not
jnp
or
push
pusha
loop
push
cmp
mov
or
out
cmpl
add
aad
sbb
or
xor
and
dec
inc
fnstcw
fidivs
push
jne
jle
addr16
test
popa
in
xor
mov
lds
ficoms
enter
insb
push
lea
and
mov
fsubl
cmp
xor
loop
orb
xor
in
sbb
ficomps
pop
jmp
sbb
dec
lea
jbe
jg
gs
push
decl
add
mov
in
xor
sti
in
mov
xor
aad
push
mov
add
mov
repnz
in
aad
adcb
pop
xor
sbb
push
mov
neg
adc
or
cmp
sbb
fcomps
cmp
sub
mov
lcall
dec
movsb
jmp
add
pop
mov
test
xchg
lea
cmpsl
mov
jg
fwait
push
cmp
fstps
pop
mov
jnp
sub
xchg
wbinvd
push
push
ror
cltd
icebp
jno
lret
pop
adc
xor
lods
mov
scas
xchg
es
out
add
aam
mov
lret
sahf
mov
cmp
ret
fsubr
adc
adc
stc
jae
jle
hlt
cwtl
in
pushf
stc
inc
rcrl
flds
add
pushf
xor
fisttpl
adc
mov
sub
gs
in
push
xor
hlt
sbb
mov
icebp
xchg
sbb
fdivl
das
gs
xor
jl
xchg
pop
fcompl
mov
xor
arpl
stc
cmp
sub
inc
stos
jg
daa
fmull
dec
or
std
shl
pop
or
ds
xchg
push
jbe
cmp
add
push
jae
adc
xor
pop
sub
loop
clc
or
mov
int
je
inc
jle
sti
jmp
cltd
dec
and
pusha
add
jae
subb
icebp
movsb
std
or
push
dec
inc
pop
or
je
mov
inc
sahf
js
fbstp
outsb
xchg
sbb
xchg
push
jno
sahf
cmp
roll
add
pop
popf
lods
jl
sub
push
lret
xor
lcall
fists
lds
pop
xor
movsb
out
adc
das
lret
sub
fildl
pop
mov
and
pop
ret
outsl
pop
push
inc
fidivrs
cs
cmpsb
cmp
adc
push
push
int3
inc
jecxz
xchg
push
cmp
mov
add
cld
pop
lea
and
repz
adc
cmp
adc
or
jle
add
jl
adc
pop
sti
or
and
test
xor
sti
cmp
cwtl
xorl
sbb
cmp
sbb
movsb
dec
push
pop
dec
notb
add
negb
and
push
jecxz
mov
in
jno
ret
push
mov
cmpsl
push
cmp
sbb
xor
sub
and
mov
mov
mov
cmp
or
imul
addr16
add
fs
lock
add
add
loopne
data16
cmc
into
into
int3
push
lock
outsl
decb
insb
xor
cwtl
outsl
insb
xchg
cmp
and
pop
xor
pop
mov
cmpsw
mov
das
inc
mov
xor
std
out
sbb
jb
and
lcall
mov
sub
xor
in
and
sub
cld
jecxz
repnz
push
iret
mov
lods
lret
jmp
outsl
dec
add
popf
or
bnd
stos
add
pop
repnz
or
jb
cli
mov
in
out
mov
popa
push
stos
mov
push
push
sub
lds
inc
push
xor
int
sbb
mov
sbb
xor
ror
insl
andl
mov
outsb
test
add
dec
dec
ja
aam
test
addl
xchg
leave
xorl
xchg
scas
mul
shlb
pop
dec
faddl
xor
ja
pop
mov
clc
sub
pop
jb
pop
push
shr
cs
faddl
loopne
xchg
dec
mov
jns
incb
jo
lock
sahf
je
pushf
fiadds
mov
or
mov
je
xor
push
adc
imul
sbb
cltd
add
leave
scas
repnz
cmp
jge
cmp
scas
mov
jp
inc
iret
in
ret
dec
inc
sahf
cmp
mov
and
movsb
jp
cwtl
push
inc
cmp
sbbl
mov
inc
xor
add
sti
jmp
mov
pop
pop
adc
xchg
sahf
cmp
push
xor
out
scas
cmp
in
fbstp
xor
lods
into
dec
into
loopne
xchg
fcoms
adc
push
add
push
scas
ret
lahf
aad
inc
jno
add
rcpps
xlat
mov
test
test
add
mov
out
lods
adc
dec
push
mov
fbld
aaa
int3
call
ret
sub
data16
xor
lahf
imul
insl
or
cmpsb
in
push
xchg
sbb
fldl
push
iret
pop
push
cmpsl
jo
sbb
in
ficoms
icebp
ficompl
test
sbb
or
stos
sahf
loope
std
nop
pushf
sub
lea
jecxz
jl
jnp
xor
xchg
ret
out
cmp
repnz
jnp
or
scas
test
or
rcll
pop
and
stos
fisubl
mulb
inc
cmp
fdiv
int
bt
leave
inc
icebp
or
into
and
adc
mov
mov
test
out
pusha
adc
fdivrl
sbb
rorb
add
repnz
dec
ficoml
push
repnz
movb
xor
sub
cmpsl
popa
int
lods
mov
les
rclb
jge
push
sbb
aam
movhps
push
xchg
and
loop
addl
repnz
dec
shll
js
adc
pusha
sbb
push
cmp
inc
ret
ljmp
ret
arpl
sbb
mov
imul
loopne
sbb
cmc
movsb
adc
cli
cmp
add
adcl
pusha
mov
lods
or
dec
push
jge
add
mov
sbb
sub
insb
insb
dec
aad
inc
xchg
push
sbb
inc
lods
cmp
push
mov
sub
icebp
pop
or
mov
int
jae
dec
aam
and
push
mov
push
jg
fisubs
rol
mov
fists
jnp
push
mull
cmpsl
push
push
mov
xor
mov
mov
xchg
lea
mov
icebp
xchg
out
jae
imul
jle
inc
addl
cli
shll
sar
aad
scas
mov
mov
lea
imul
push
lds
stc
pop
aaa
push
adc
mov
int
stos
sbb
sub
sbb
fsin
ret
pop
mov
push
cld
cwtl
xchg
int3
stc
mov
outsl
pop
adc
jmp
push
xchg
popf
popf
cltd
mov
push
push
or
pop
push
and
into
and
outsb
adc
sub
sbb
int3
fisubrs
ds
out
in
gs
mov
pop
jl
pop
inc
adc
cli
inc
ficompl
rcll
sub
bound
xorb
movsb
jge
lret
jecxz
add
arpl
fdivl
push
sbb
mov
into
sub
sahf
pusha
adc
pop
loopne
sbb
add
out
fstl
or
mov
dec
push
inc
iret
ljmp
xchg
pop
pop
dec
mov
mov
xchg
scas
ret
sub
addr16
sbb
fsincos
push
adc
dec
mov
icebp
clc
pop
sbb
push
push
ds
and
xchg
dec
aas
lcall
imul
dec
adc
loop
pop
stos
lcall
push
or
sahf
push
push
cmp
mov
popa
xor
push
and
and
jns
ds
jmp
jne
sbb
inc
cmc
push
lmsw
aaa
adc
icebp
insb
mov
jno
mov
enter
jb
in
adc
and
fdiv
adc
inc
jo
cmpsb
pop
outsb
leave
push
outsl
adc
imul
imul
dec
jecxz
push
jno
out
enter
sbb
pushf
mov
mov
xor
icebp
pop
mov
sub
fistps
bound
lods
test
or
pushf
or
fidivrl
mov
or
mov
shr
ds
sbb
adc
sbbl
or
pop
sbb
mov
add
sub
movsl
mov
dec
notl
arpl
js
test
into
mov
or
fmuls
xchg
sbb
outsl
bound
int
popf
in
and
lds
cmpsb
adc
in
adc
in
sarl
repz
mov
ret
lds
dec
pop
cli
sub
jno
popf
sbb
clc
add
xchg
push
xlat
ret
sub
add
mov
pop
cld
adcb
cmp
jp
cmp
ss
jl
std
and
mov
out
sti
cmpsb
int
enter
les
inc
mov
and
out
into
and
ljmp
ficomps
inc
or
xchg
lds
cmc
cwtl
mov
repz
sub
in
mov
aad
jg
pusha
and
cmpsl
mov
add
scas
mov
fsubrl
nop
sti
popa
imul
xchg
mov
push
lcall
cmc
xor
xchg
aam
and
jle
adc
dec
add
arpl
mov
loopne
jo
in
sbb
sahf
sbb
cli
pop
les
xor
mov
add
into
adc
imul
or
push
adc
or
add
daa
into
mov
jp
roll
jb
frstor
or
adc
loopne
jmp
sbb
inc
mov
mov
xor
mov
sub
lcall
and
add
push
cmpsl
xchg
cmc
inc
sbb
les
dec
es
mov
jp
jo
into
hlt
sarb
popf
lock
incl
or
out
fistpl
daa
sub
ror
push
int3
fs
push
and
pop
push
int3
lods
push
loop
mov
inc
push
mov
fs
cmp
xchg
push
cmpsb
pop
ljmp
xor
mov
imul
pop
call
adc
cwtl
mov
shrb
ret
out
inc
cmp
mov
sub
es
and
jl
loopne
iret
in
cmpsb
test
fdivp
lret
pop
js
or
inc
cmp
std
sbb
fcmovbe
jg
jecxz
push
lret
cmpsb
pop
shll
mov
cs
jo
sub
fs
into
sbb
push
pop
dec
jo
cmpsl
sbb
xor
enter
divb
sub
add
test
inc
push
nop
or
sarb
xor
outsl
js
fs
fists
or
sti
out
jl
movl
add
or
jo
adc
mov
mov
mov
and
sbb
sbbb
imul
sub
call
popa
xor
mov
js
jecxz
xor
ds
inc
inc
aam
mov
cmpsl
into
jmp
mov
pop
sbb
mov
clc
roll
sub
cwtl
push
enter
inc
or
imul
push
jecxz
mov
cmp
fimull
in
add
ds
add
mov
or
push
fdiv
mov
mov
inc
movsl
push
push
in
subb
and
fwait
outsb
xchg
jns
lds
pop
push
in
cmp
xor
aad
adc
mov
pop
movsb
sub
xchg
xor
or
aad
leave
ret
ss
sub
repz
cmp
sub
imul
adc
pop
stos
rcrb
push
cmp
cmpsb
cmp
inc
mov
gs
mov
mov
stos
jbe
test
xlat
out
sub
mov
xor
ret
cld
daa
testb
jg
imul
out
cltd
and
inc
rcrl
mov
lods
dec
cmpsb
inc
dec
pushf
mov
lock
inc
xor
jecxz
idivb
or
loopne
push
inc
sbb
arpl
and
repz
aad
enter
or
sub
push
xor
inc
les
fists
and
xlat
filds
call
imul
arpl
aad
mov
push
pop
icebp
out
fstpl
movsl
stc
pop
add
mov
addr16
cmp
repnz
hlt
fidivrl
pop
jecxz
out
addl
je
jle
aad
sbb
sub
aam
aam
mov
shl
dec
add
rcl
out
mov
pushf
push
andb
or
cs
ficoml
stos
scas
mov
mov
je
mov
rcll
cmpsb
sbb
jbe
xchg
pop
pusha
and
cli
enter
inc
fwait
stos
and
add
jbe
sub
jecxz
imul
insb
inc
mov
cwtl
mov
and
xlat
imul
sub
push
inc
pushf
loopne
pop
jae
mov
test
add
mov
imul
lods
cmp
ror
sahf
or
or
xchg
xor
pop
inc
push
ret
dec
sbb
repz
in
shll
jge
push
push
in
xchg
sbb
sub
pop
push
inc
fdivp
cmp
xor
mov
pop
shlb
inc
jg
pusha
adc
cmc
jl
sub
jge
iret
sarb
fidivs
fists
xchg
mov
insb
aad
cwtl
mov
mov
xor
stc
arpl
cmc
hlt
push
jb
in
dec
sub
es
arpl
rcl
lds
leave
mov
push
sbb
inc
sbb
mov
data16
xor
push
pop
gs
dec
aad
inc
icebp
out
adc
push
flds
and
inc
and
push
mov
jae
push
inc
inc
push
scas
ss
mov
popf
cmp
fsub
or
push
lcall
lods
pop
xlat
in
addr16
enter
ret
cmp
push
pop
xchg
sbb
add
jecxz
jnp
mov
cmp
add
test
les
sbb
and
rorb
aaa
push
cwtl
outsb
ja
pop
xchg
cmpsl
iret
jo
lods
insl
sub
add
clc
insb
cmp
mov
ret
mov
jnp
dec
push
jne
cwtl
xchg
insb
je
mov
cld
jb
adc
iret
and
cmp
out
mov
jb
lret
sub
gs
pop
fisttpl
push
ret
mov
xor
push
lods
lea
lods
cmp
imul
lret
dec
inc
inc
push
int3
ficompl
sbb
push
mov
cld
xchg
xchg
aas
mov
mov
sbb
mov
clc
and
push
inc
ror
adc
mov
addb
lahf
and
jle
push
push
or
cmp
mov
mov
sbb
ret
cmp
add
icebp
stos
nop
sbb
negb
jg
imul
outsb
mov
and
pop
mov
loope
push
jno
push
xlat
je
icebp
loop
xchg
fwait
mov
mov
setbe
adc
push
stos
out
add
addr16
cmp
test
jmp
lock
arpl
mov
mov
add
inc
mov
int
sbb
sub
hlt
pop
mov
pop
pop
imul
dec
cmpsb
mov
xchg
pop
pusha
push
in
push
stos
xchg
inc
pushw
cmp
pop
adc
cmp
inc
arpl
ret
lea
sbb
cmpsb
cmp
or
sub
or
rcrb
adcb
clc
cmp
in
or
pop
mov
xchg
andb
bound
mov
test
mov
mov
cltd
pop
shlb
popa
mov
stos
repnz
push
and
icebp
fdivrp
jg
shll
and
int
lea
or
cltd
enter
pop
iret
jp
pushf
fwait
das
test
data16
inc
sbb
push
push
cmp
test
cmpsl
adc
xor
pusha
faddl
push
pop
xchg
rcrl
adc
lret
sbb
mov
jne
shll
into
outsb
ss
fstps
mov
fwait
mov
sub
push
hlt
stc
jne
sub
ficoms
push
push
fistpl
mov
shll
loopne
mov
jnp
into
sbb
jb
inc
xchg
stos
mov
sbb
mov
sti
data16
xchg
jl
fnstenv
sub
and
or
stc
and
aam
cmp
push
leave
jne
imul
dec
loope
sub
out
flds
loope
xorb
shll
add
adc
cmp
mov
in
pop
jl
pop
sbb
sahf
icebp
ss
rol
shrl
sub
inc
adc
lret
inc
pop
pushl
inc
in
shrl
fsts
push
jae
outsl
jne
mov
shlb
repnz
mov
mov
inc
nop
jle
data16
add
mov
popf
or
dec
push
dec
push
pop
push
pop
and
test
lods
inc
and
cmpsl
pop
pop
push
adc
enter
sbb
fwait
push
inc
dec
adc
xor
jl
push
mov
jle
sub
insl
and
iret
sti
inc
jno
repnz
xor
push
dec
jno
data16
faddl
xchg
stos
mov
ret
les
std
hlt
lods
sbb
xchg
cmc
xor
es
orl
cmp
imul
jbe
sarb
lds
cmp
test
das
test
test
scas
iret
int
daa
clc
in
popf
mov
mov
mov
mov
push
daa
and
cmp
in
test
addr16
jae
das
mulb
or
pop
pop
mov
add
jo
mov
push
push
push
in
jle
dec
jp
cmp
jns
jg
mov
in
int3
pop
and
aad
enter
dec
add
mov
inc
fs
inc
push
cmp
pop
cmp
pop
dec
sbb
stos
call
and
push
call
dec
hlt
ja
or
inc
mov
lret
iret
out
xor
fsts
jb
pop
sbb
ret
es
mov
scas
fcmovb
pop
data16
or
cmp
inc
icebp
add
mov
inc
shr
and
cs
mov
xchg
add
test
ret
mov
addb
mov
das
cmp
jge
jecxz
test
aam
mov
sbb
xchg
or
ja
mov
decl
dec
pop
fstpt
mov
mov
clc
ljmp
fidivrl
lods
inc
inc
adc
xchg
mov
jp
out
xchg
fldenv
xchg
xchg
in
mov
jbe
mov
in
jnp
inc
jb
or
insb
enter
ror
sub
movsl
cmc
xchg
out
and
ret
ret
fwait
dec
imul
cs
popa
xchg
sub
loopne
aam
xor
imul
xchg
push
cmpl
adc
mov
mov
mov
pop
pop
icebp
push
mov
xchg
cmc
shl
dec
adc
aaa
int
les
and
pop
lea
roll
f2xm1
jp
stc
scas
lret
jp
scas
int3
push
xlat
adc
iret
mov
pop
loopne
dec
or
push
test
lahf
lret
fstps
cmp
sbb
jbe
jnp
jmp
push
repnz
xlat
inc
push
adc
leave
jge
and
dec
pop
jecxz
rcr
shrb
fisubrs
les
test
outsl
ds
in
lods
lods
cmc
jo
adc
or
dec
ds
jns
andb
xchg
pop
jo
lods
sbb
arpl
push
cmp
cwtl
jae
in
arpl
rcll
sbb
xor
xchg
sub
mov
dec
xor
jo
push
mov
rorb
ret
aas
xchg
loope
sarb
int3
jno
jmp
rolb
push
cwtl
and
or
mov
push
cmp
mov
add
or
mov
fisubrs
cmc
movsl
sub
imulb
push
ret
push
out
jbe
inc
dec
dec
pop
loop
push
adc
jbe
repz
jo
add
cmc
or
jle
inc
mov
mov
push
ljmp
mov
mov
sub
ljmp
arpl
push
test
sbb
orb
or
xlat
dec
fildl
pop
mov
inc
fsubrl
sub
jb
lods
dec
inc
les
rcrl
dec
mov
sbbl
sbbl
cmp
rolb
pop
pop
out
xor
mov
inc
sti
dec
or
xchg
aaa
xchg
popa
mov
mov
jne
sbb
xorl
mov
jb
dec
fcmovb
int
cli
fsubr
pop
sbbb
mov
dec
fistps
adc
jmp
sub
cmpsl
xchg
aaa
and
xchg
mov
pusha
xor
out
push
mov
test
clc
mov
daa
addr16
mov
mov
gs
insb
arpl
mov
xorl
mov
loop
xor
das
ret
mov
fucom
pop
inc
int
div
adc
mov
fistps
push
je
lret
fdivs
cwtl
mov
repz
mov
sbb
ja
std
movl
and
add
idivb
dec
jne
push
push
push
mov
fsubs
sub
ret
xor
cli
out
insl
faddl
mov
or
dec
push
sbb
adc
sub
pop
mov
packssdw
std
mov
pop
cmp
addr16
pop
sub
cmp
sbb
jo
cmpsb
xchg
insl
xor
int
loop
pop
movsl
add
lods
xor
std
in
pop
nop
mov
xchg
sub
mov
fwait
orl
popa
in
insl
mov
sub
jnp
mov
add
mov
jecxz
xchg
lea
loopne
push
or
fcoml
add
mov
shlb
insl
fs
cwtl
pop
testb
cs
sbb
pop
adc
xor
gs
pop
insb
loop
pop
jge
and
or
sbb
xor
sub
inc
les
test
mov
dec
sub
sbb
inc
pop
in
cmp
ja
lods
out
adc
sahf
fldenv
jns
fwait
shlb
cmp
xchg
mov
cli
sarb
pop
fisubrl
movsb
fldl
push
fdivl
mov
inc
int
std
xor
lea
cmp
shr
outsl
mov
xorl
add
insl
mov
or
add
sahf
add
push
cmp
dec
jno
sub
xchg
sub
dec
iret
sbb
cltd
push
popa
cmc
jne
shrl
pop
mov
push
push
clc
fiadds
mov
cld
xor
mov
inc
push
cmc
adc
push
mov
lret
add
pop
jo
xchg
sti
and
or
test
ret
cmpsb
inc
mov
imul
scas
mov
xor
jmp
loop
or
test
rcl
jae
cmp
es
fstl
mov
mov
fucomp
ficomps
pop
sub
data16
lahf
pop
test
sub
and
int3
mov
int
or
mov
sahf
mov
xchg
orb
cs
sub
jp
cli
daa
insl
pop
hlt
and
xchg
nop
mov
jge
xorl
push
mov
adc
jno
xor
icebp
xor
mov
mov
pop
mov
lods
dec
aad
add
popa
push
push
repnz
pop
movsb
fcomps
aas
jbe
adc
shr
mov
adc
adc
cwtl
xor
jp
gs
enter
stos
sbb
sub
or
aaa
pop
dec
stos
stos
jno
ja
cltd
fildl
sbb
out
addr16
adc
pusha
dec
sahf
cmp
add
pop
xchg
repz
dec
pop
xchg
pop
pop
mov
mov
test
gs
clc
into
test
sbb
add
jno
adc
icebp
dec
add
arpl
dec
fucomp
std
sub
mov
test
arpl
rorb
out
sub
mov
cmp
shll
or
shrb
rolb
andnps
mov
mov
xor
aas
jno
in
xchg
outsl
es
ljmp
sti
pop
sub
clc
push
cld
push
mov
nop
pop
nop
ljmp
adc
dec
inc
pop
jge
loopew
mov
mov
lock
or
frstor
sub
mov
sub
push
jno
or
jp
dec
int
mov
mov
arpl
scas
mov
mov
fucomi
popa
lret
pop
xchg
cld
into
mov
cmpsl
sub
adc
jle
out
les
decb
jge
loope
push
imul
adc
push
ret
out
faddp
xor
dec
int3
add
lret
jle
jns
test
lock
mov
pop
and
or
stos
stc
scas
cmp
push
sahf
sub
xchg
cld
scas
add
loop
out
testb
mov
mov
imul
arpl
call
sqrtps
pop
add
outsb
shlb
movsb
push
jne
lret
inc
sub
and
xchg
jle
in
shlb
in
mov
adc
divl
pop
leave
push
in
repz
sub
xor
cmp
jne
mov
loope
dec
lahf
andl
push
push
stc
cmc
xlat
fnstsw
cwtl
jae
mov
and
mov
scas
das
dec
rcr
lods
xor
negl
aad
fsubs
fimuls
stos
xchg
adc
pop
fldl
add
dec
jle
cmp
insl
fiadds
ljmp
mov
test
push
dec
data16
faddp
or
dec
jae
daa
int3
xor
push
and
mov
jno
mov
aad
mov
jge
mov
shlb
in
clc
dec
or
fsub
mov
or
and
add
xor
insb
jbe
and
jge
je
ds
mov
jo
mov
xlat
or
mov
jns
pop
inc
pop
add
int3
into
addl
insb
stc
test
xchg
dec
jge
xor
push
fwait
mov
push
pop
mov
cmpsl
or
jnp
or
cmp
cwtl
jg
loope
mov
push
mov
mov
xchg
fcoml
sub
es
int3
insb
cmc
push
sbb
pushf
ret
cmp
mov
sub
lret
les
and
jecxz
pop
sahf
dec
inc
imulb
std
inc
sbb
xchg
loop
call
cmpsl
mov
loopw,pt
mov
mov
mov
mov
adc
idiv
cmpsl
test
cmp
cmp
cli
mov
movsb
adc
dec
sbb
mov
mov
aaa
test
mov
mov
dec
push
push
cmp
stos
inc
mov
jno
sbb
mov
int
es
testl
clc
mov
rcrb
push
aaa
adc
push
mov
xchg
lock
xchg
or
sti
mov
aas
sub
mov
pushf
loope
pusha
je
imul
aas
mov
divb
push
cmp
pop
cwtl
xor
aas
sub
mov
xor
sub
mov
fdivrs
pop
outsb
pop
shll
push
cs
xchg
in
push
push
pop
mov
enter
pop
addr16
and
sbb
sbb
mov
scas
test
xchg
jo
pushf
jns
cmp
dec
or
xchg
out
mull
out
ret
add
mov
cltd
je
nop
mov
push
xchg
iret
imul
lahf
jmp
inc
bound
mov
les
addb
mov
std
enter
lret
mov
dec
aaa
pop
sbb
loop
movsb
and
mov
shll
fsubrs
into
outsl
xlat
addb
loop
ja
hlt
outsl
icebp
sarl
sbb
mov
aaa
rorl
lods
or
jg
jae
ja
sub
lock
adc
mov
shll
pop
fwait
mov
xchg
mov
mov
cmp
loop
pop
enter
fistps
sti
dec
push
fcomp
dec
hlt
into
js
push
pop
cmp
dec
sub
mov
xchg
std
and
pushf
clc
sbb
dec
pusha
rorb
nop
or
pop
jae
mov
jbe
jp
icebp
jnp
xchg
divb
inc
sbbb
adcl
cmpsb
enter
sub
rolb
dec
push
out
cmpsb
scas
scas
out
jbe
mov
cmp
andl
int3
cmp
scas
xor
lods
insl
fistpll
loop
ret
or
xchg
cmp
sahf
ss
aad
in
fdivl
adc
fsts
mov
test
cmp
push
call
lahf
in
mov
xchg
sbb
pop
pop
sub
mov
fwait
int3
addb
and
inc
push
cmp
je
faddl
addl
xchg
js
adc
popf
hlt
and
cmp
xor
rolb
outsl
pop
ja
cmp
adc
xchg
testb
mov
jl
test
testb
mov
test
jae
jb
mov
push
and
aam
loop
in
in
clc
fs
fcmovnbe
sub
cmp
jle
int3
nop
or
inc
jnp
imulb
lret
std
test
inc
sbb
sub
dec
cmpsb
dec
and
leave
cld
xor
jle
test
jno
out
xchg
scas
or
or
lret
cmp
cmp
test
cmp
sbb
mov
sub
cmp
mov
mov
push
xchg
or
mov
cmp
xor
jle
repnz
adc
inc
mull
mov
adc
mov
sbb
cmp
outsb
ljmp
rcl
pop
in
push
iret
movsb
mov
insl
push
ss
sub
mov
sbb
cmp
mov
sub
dec
or
mulb
in
cmp
sbb
data16
and
lods
cmpsl
mov
dec
cli
inc
sub
mov
lret
mov
mov
sub
mov
in
cli
jl
mov
in
sbb
ret
xchg
imul
fildll
jle
cmp
in
pop
repz
loop
test
in
dec
shll
xchg
pushw
ret
rcr
sub
jecxz
xor
sub
mov
xchg
pop
inc
xchg
insl
mov
sbb
mov
test
jnp
inc
push
mov
mov
out
int
cmpsl
ja
enter
repnz
xchg
sub
mov
sti
mov
mulps
out
pop
cmp
mov
arpl
fs
mov
xlat
add
and
sbb
sbb
mov
inc
fsts
sub
mov
inc
adc
cmp
mov
push
and
gs
cmp
push
sbb
lods
or
sbb
fbstp
mov
add
add
pop
sahf
subl
sbb
aad
call
push
jmp
sbb
xorb
jg
cmpsb
movsb
fucomi
xor
lea
mov
dec
adc
adc
sbb
lods
loopne
jmp
pushf
mov
adc
jb
xor
or
aaa
inc
lock
pushf
or
negl
ret
mov
pop
add
test
and
loopne
adc
pusha
test
in
stc
mov
adcb
mov
dec
cmc
xchg
jg
dec
lock
mov
xchg
or
sub
std
or
stc
adc
and
or
test
push
arpl
mov
jecxz
in
xchg
js
clc
mov
or
push
aas
out
push
dec
mov
sbb
gs
das
inc
or
repz
push
lods
xor
out
je
popa
mov
outsb
mov
mov
popa
dec
inc
mov
movsl
cmp
mov
jge
or
pop
inc
sbb
jg
push
insb
inc
iret
mov
mov
jmp
or
jno
sbb
sbb
cmp
fmul
xor
fcomp
push
mov
xor
scas
mov
outsl
jge
dec
jg
iret
hlt
cmpsb
xor
int
xorb
sub
push
cmp
test
mov
test
mov
stos
outsl
cmp
inc
and
cmp
pop
inc
xor
inc
and
sbb
fldl
xlat
adc
into
pusha
daa
or
test
aaa
and
push
and
fisttpll
cmp
in
sahf
scas
xchg
xchg
cmp
mov
lahf
scas
loop
cmpl
es
int
sbbb
repz
inc
fisttps
divb
bound
jns
cmp
loope
jo
punpckhwd
and
imul
add
test
cs
mov
mov
mov
cltd
xor
lock
das
xchg
lods
mov
lcall
mov
pop
int
xchg
push
das
scas
or
dec
adc
les
push
xchg
hlt
and
or
sbb
imul
xchg
ret
cmc
cwtl
popf
xor
aaa
pop
or
dec
js
test
stos
outsl
pop
mov
jle
test
je
dec
popa
mov
imul
bound
xor
mov
mul
enter
sub
sti
cmp
loopne
fstps
pop
pop
je
pusha
ljmp
test
dec
push
pop
scas
outsl
xor
mov
fnstsw
mov
out
push
dec
inc
cld
daa
jecxz
sbb
xor
popa
hlt
sub
loop
out
jg
shll
out
pushf
xchg
aas
insb
faddp
ja
inc
cwtl
clc
mov
jle
sbb
testl
mov
aad
gs
das
push
mov
pop
and
cmp
fs
enter
inc
mov
lcall
out
adc
or
movsl
add
cmp
cmp
inc
shll
imul
imul
addb
adc
add
pop
sbb
cs
shrb
mov
sbb
xchg
mov
mov
and
pop
aas
or
into
outsb
ret
dec
imul
insl
pop
sbb
pop
add
nop
arpl
or
xor
mov
pop
add
adc
xchg
insb
pop
adc
stos
orl
and
lahf
insb
adcl
fists
cmp
dec
lods
cs
ret
hlt
test
jbe
cwtl
lock
daa
jno
mov
add
andl
mov
rcrb
stos
jns
mov
fucomp
mov
xorb
jbe
aam
loope
push
flds
cs
and
lret
divl
or
loopne
push
cltd
inc
pop
or
xchg
mov
pop
ficompl
cmp
sbb
or
pop
cltd
fwait
shrl
or
inc
int
xor
push
flds
push
push
adc
sbb
mov
inc
cmpsb
mov
lahf
adc
add
call
and
xchg
sbb
shll
xchg
xchg
aad
xchg
es
inc
push
frstor
lahf
movsl
lods
repnz
int
cltd
pop
das
out
aaa
lcall
push
stos
sbb
pop
dec
fsubl
mov
int
rorb
adc
push
push
inc
xor
movswl
rorl
enter
out
out
push
and
fdivrs
mov
mov
mov
pop
sbbl
adcb
divb
mov
out
aaa
lea
movsl
adc
ja
mov
mov
decl
roll
repz
rolb
mov
adc
shrb
cmpl
add
je
pop
insl
imul
icebp
xchg
icebp
jb
mov
rcrb
push
aam
daa
xor
xchg
and
cs
cmp
jb
dec
push
jmp
push
add
into
lea
jmp
mov
pop
sbb
pop
lds
sbb
leave
arpl
pop
mov
int
xor
pop
test
sti
adc
test
push
push
adc
jne
ror
lock
sarl
repz
fnsave
lahf
fst
hlt
pop
mov
mov
jp
xor
mov
jge
and
int3
lret
cs
mov
xchg
xchg
pop
out
ffreep
mov
sub
and
push
jne
sbb
gs
add
js
js
ret
cmp
movsl
iret
or
subb
or
out
mov
dec
jnp
sbb
inc
mov
loopne
shrb
es
cwtl
cltd
cmp
out
xlat
mov
and
cltd
lcall
sub
nop
mov
or
repz
sbb
jno
mov
aam
adc
add
and
mov
stos
pop
push
push
xor
inc
arpl
and
pop
jle
xchg
mov
lcall
xor
jle
push
in
xor
int
mov
aaa
cltd
cmp
gs
test
cmpsl
cmp
js
aam
jno
xor
cmp
fdivl
xchg
inc
mov
pushf
inc
mov
xchg
or
or
mov
mov
int
mov
adc
in
faddp
lahf
dec
aam
rcrb
out
pop
ja
or
jo
xor
xchg
pusha
add
cmp
fmuls
xor
mov
aas
dec
rcrb
jne
xchg
std
pop
sbbb
fnstcw
adc
and
bound
jns
mov
xchg
or
push
das
nop
lret
and
push
mov
jle
sarl
push
in
mov
dec
nop
adc
out
int3
out
pushf
or
dec
iret
cmp
adc
nop
sarl
or
clc
mov
dec
pop
les
mov
cltd
mov
shrb
repz
fildll
rorl
sbbb
psllw
push
popl
iret
jp
lds
rclb
add
in
dec
lret
out
sub
lcall
gs
fcmovnbe
in
mov
inc
aad
sub
mov
test
scas
push
pop
orb
sti
aam
clc
or
fisttpll
xchg
lret
scas
cwtl
push
loop
aad
dec
pop
test
push
jb,pt
mov
mov
jnp
mov
in
sbb
aam
cli
jne
xor
bound
cmp
inc
sbb
fidivl
mov
mov
sub
xchg
cltd
xor
in
jae
and
mov
mov
mov
sbb
leave
add
mov
xchg
push
loope
pop
push
mov
imul
std
xlat
aam
int
xor
in
loop
or
lods
mov
push
inc
mov
repnz
test
xlat
enter
jne
mov
adc
std
addr16
test
fs
in
repnz
adc
shrb
leave
mov
std
jp
xchg
imul
jecxz
add
in
int3
js
sbb
lahf
imul
cltd
lock
lds
std
movsb
xlat
ja
stos
mov
mov
lods
fldl
test
sbb
pop
xchg
aaa
cmp
movsl
adc
xlat
dec
insl
fcmovbe
andl
stos
daa
test
insl
addr16
test
cmp
pop
or
lock
in
mov
push
adc
scas
jns
nop
xor
jp
xor
mov
stc
popa
repz
lret
mov
popf
jp
gs
push
stos
mov
mov
test
push
loopne
inc
rcrb
mov
addr16
inc
popa
loop
sbb
xor
fstpt
xlat
jl
mov
mov
ss
xchg
div
jnp
pushf
jnp
mov
pop
lock
or
repz
xchg
das
sbb
das
add
xchg
insb
sub
aas
fidivl
mulb
ret
lahf
movsl
fisubrl
lds
adc
fwait
mov
mov
out
out
jnp
lcall
xchg
adc
and
gs
insl
push
cmpsl
cmp
xlat
sbb
xor
rorl
xchg
mov
test
adc
add
xchg
shll
sarb
mov
xchg
mov
adc
inc
add
mov
daa
adc
xchg
xor
or
mov
mov
xor
cmp
jno
rorl
pusha
lods
adc
std
sbb
xchg
add
mov
mov
push
cmpsl
mov
pop
loop
mov
clc
pop
test
fcmovu
mov
movsb
packssdw
fsts
das
cmp
dec
inc
mov
push
dec
std
divb
fisttps
inc
int3
xor
mov
inc
fwait
or
fsubl
jg
xchg
push
ss
cmc
or
inc
pop
test
cmpb
pop
aad
mov
test
jae
lret
push
rcl
adc
push
lret
aam
pop
out
or
jl
loop
sbb
xchg
push
outsb
mov
sbb
pushf
insb
ja
lods
call
adc
add
mov
xor
push
mov
mov
mov
push
xchg
lret
int3
cltd
and
les
ret
push
int3
inc
outsl
sbb
and
mov
xchg
lods
mov
pop
mov
push
mov
mov
or
hlt
notl
sbb
sbb
mov
or
bound
outsb
push
sub
mov
rcrl
arpl
leave
push
xlat
cmp
loopne
mov
cmp
or
push
lret
lret
movsl
insl
repz
push
fs
cmpsl
ror
xor
shl
lret
mov
dec
aad
insb
xorl
cmp
adc
leave
addl
inc
cmp
adcl
movsl
cmp
pop
icebp
icebp
ja
xchg
repz
fnstenv
xchg
xchg
nop
or
mov
xchg
hlt
stc
pop
push
and
mov
in
cs
std
pusha
dec
pop
std
pop
scas
imul
lock
cwtl
mov
xchg
push
aas
dec
das
inc
fbld
sti
iret
jl
fstpl
test
popa
mov
mov
pop
mov
sahf
add
xchg
dec
lods
mov
subb
call
fldt
pop
add
rorb
shrl
fistpll
sbb
repnz
push
mov
inc
pushf
push
mov
cmc
popa
pop
jg
aam
inc
jp
mov
shlb
inc
cltd
int3
lea
icebp
call
or
fnsave
divl
aad
inc
das
lods
cmp
push
inc
lds
add
test
dec
test
jb
test
add
cmp
mov
in
imul
push
mov
sarb
rorb
daa
adc
arpl
mov
push
aas
adc
dec
fnstcw
pop
dec
inc
rcl
lret
cmp
je
xlat
and
ljmp
jns
sbb
aad
outsl
adc
mov
cmpsl
or
aam
adc
incb
iret
call
cmc
sbb
jecxz
dec
sub
jecxz
jb
jg
inc
mov
imull
dec
sub
push
ficoms
mov
and
adcb
jns
xacquire
xchg
mov
inc
pop
jb
cmp
fisubl
sbb
xor
sub
mov
out
mov
movsb
nop
jbe
cs
inc
mov
fcmovne
cmp
mov
mov
pop
in
or
div
jbe
mov
rcll
mov
aad
inc
cmc
icebp
jmp
cs
popf
shll
pop
push
in
in
lods
out
cmp
dec
lea
adc
inc
adc
adc
test
test
or
out
ja
aas
mov
es
lea
fisubl
sbb
xor
cwtl
faddl
push
inc
sar
lea
jo
cltd
push
mov
cmp
jno
int
in
inc
sbb
or
dec
push
mov
daa
push
dec
jl
aad
and
orl
dec
cli
ljmp
dec
mov
lock
xor
pop
and
mov
in
ss
add
into
mov
int3
inc
mov
cmpsl
add
les
push
push
subl
dec
insb
mov
xor
into
call
or
adc
inc
shlb
mov
add
dec
sahf
xor
and
in
ret
gs
mov
in
cwtl
sub
add
fwait
test
sub
jl
idivl
push
orb
adc
push
jecxz
ljmp
dec
cwtl
inc
repz
push
stos
mov
xor
or
pop
rorb
psubusb
mov
lods
scas
ficomps
ret
push
addl
jae
jl
dec
clc
movb
dec
inc
ljmp
ficoml
xchg
sub
loop
cmp
push
jo
adc
cs
push
lds
int
in
xchg
or
inc
dec
sbb
dec
les
inc
sbbb
inc
push
ret
cmc
pop
or
ja
cmp
xlat
push
pushf
inc
mov
rolb
jecxz
fimuls
xor
push
das
pop
mov
pop
jns
sub
sbbb
lahf
add
mov
dec
mov
xor
js
xchg
imul
mov
icebp
out
mov
test
xchg
xor
jo
add
cmp
pop
rcrl
daa
dec
cmpsb
push
ret
inc
dec
mov
inc
aaa
sti
ja
js
pushf
orl
lock
mov
jbe
adc
cmp
jg
xor
or
mov
mov
out
add
push
movntq
and
shlb
sub
sbb
daa
inc
cs
les
loop
or
cld
scas
ret
lods
sbb
lret
testb
repnz
in
sbb
push
insl
sub
call
cmp
mov
adc
shll
pop
loope
lcall
xor
inc
push
or
pop
aaa
push
popl
iret
inc
mov
imul
cmp
lahf
inc
cmc
enter
push
and
add
push
or
cmp
sbb
mov
pop
add
cmp
or
pop
div
daa
sub
fstpl
fs
gs
inc
dec
or
push
inc
mov
xchg
hlt
pop
pop
push
cmp
sbb
push
icebp
mov
leave
lcall
shlb
ljmp
jp
mov
adc
pop
testb
int
stos
sbb
push
push
sub
xor
shl
ljmp
test
cmp
in
inc
lcall
or
ss
fistps
stc
push
fwait
jmp
iret
movsl
aaa
add
jne
js
lret
cmp
mov
sub
adc
mov
cmp
movsl
push
test
mov
mov
ret
arpl
push
aam
stc
lds
call
or
js
add
outsb
adc
aam
cs
push
inc
push
pop
aaa
xchg
dec
out
adc
loopw
test
stc
mov
call
mov
and
aad
test
shlb
push
pop
xchg
adcb
movsl
adc
xchg
bound
fildll
pop
orl
imul
pop
lret
pop
insl
inc
jns
pop
pushf
xlat
xor
mov
cmp
jae
pusha
push
cltd
cmp
out
push
test
insb
add
dec
repz
outsb
sti
jp
jb
push
cmpsw
dec
add
xchg
adc
add
loop
movsb
orb
mov
xchg
std
sbb
jbe
add
popl
popa
cmpsb
or
xor
out
nopl
cwtl
sub
icebp
mov
lock
movsl
dec
cmpsl
fwait
add
xor
imull
addr16
xor
std
rolb
xor
or
cmp
push
or
push
call
xlat
outsl
aad
jmp
bound
jl
or
sub
daa
shrb
jp
fdivrl
jae
rcrb
das
cmp
out
and
in
or
mov
pop
mulb
clc
jg
mov
sarl
xchg
inc
ret
sahf
test
cli
test
mov
push
out
jg
insl
xor
jnp
lods
cld
aad
push
sbb
cmp
push
push
jl
push
loope
pushf
ret
sbb
lods
and
clc
filds
dec
shlb
sbb
cmp
pop
jl
lock
test
in
inc
mov
and
or
pop
js
in
sub
cmpsl
push
jae
push
xorb
push
mov
add
jge
das
push
imulb
add
xchg
lds
push
frstor
in
jp
and
dec
mov
jae
jns
int
out
adc
and
push
xor
pop
clc
push
push
stos
xor
scas
cld
stos
ja
mov
lods
dec
bound
mov
and
popf
inc
test
jmp
jle
ret
cmp
daa
mov
push
popf
pop
pushf
out
lahf
int
inc
cmpsl
pushf
int
daa
xor
fwait
arpl
subb
incb
out
popa
cmpb
sub
dec
shlb
inc
jecxz
js
cmp
sbb
adc
nop
sub
lea
lea
sub
adcl
int
fwait
xchg
lods
ja
pop
in
jnp
repz
mov
sub
push
xchg
test
inc
aam
inc
outsb
cwtl
jmp
loopne
jge
and
sbb
fcmovnb
jnp
mov
mov
mov
daa
xchg
dec
jae
in
ficomps
callw
shrb
clc
popa
movsl
cmc
mov
scas
repz
pop
inc
jns
lock
stos
dec
dec
xchg
xor
cli
cli
cmpsl
movsl
int3
sub
jle
cmp
test
cmp
mov
cli
sub
out
hlt
dec
adc
movsl
sbb
rcl
pop
fisttps
jle
jmp
pop
mov
sbb
into
test
push
ret
jp
rclb
pop
or
xlat
rcr
xchg
xlat
xchg
pushf
pop
addb
iret
inc
in
cwtl
or
xchg
repz
sahf
daa
pop
jl
pusha
fdivs
add
mov
and
scas
mov
lahf
inc
pushf
push
mov
lds
xchg
or
sbb
imul
iret
mov
dec
cmp
cmpsl
imul
test
pop
dec
jecxz
lcall
std
push
xor
mov
or
lret
push
imul
filds
xor
or
add
or
push
sarb
push
or
out
mov
addr16
fdiv
adc
jb
js
xchg
adc
out
cmp
enter
cltd
movsl
mov
outsb
ljmp
pusha
dec
and
xchg
cmp
mov
icebp
andb
mov
in
lahf
js
lcall
inc
testb
inc
daa
mov
xchg
js
call
mov
in
inc
repnz
cmp
shl
iret
int3
xor
mull
push
push
adc
dec
out
xlat
pop
test
push
mov
cmpsl
rcrb
lret
rcrb
rcl
sbbl
shlb
and
and
je
push
ljmp
mov
test
sbb
xor
std
sub
mov
mov
insb
shl
push
hlt
test
aam
jecxz
outsb
cs
cmp
outsl
push
ret
jbe
and
icebp
data16
adc
daa
cmpsl
gs
hlt
scas
lds
mov
mov
and
xchg
mov
mov
inc
ds
pushf
aas
lcall
adc
sub
dec
xchg
and
in
push
xchg
hlt
add
sbb
jge
out
das
mov
testb
es
outsb
stos
scas
pop
jno
outsb
rcrl
test
xchg
push
mov
mov
dec
ret
mov
and
xchg
je
push
or
sbb
and
push
and
mov
rorl
sbb
or
icebp
xor
dec
add
je
movl
fdiv
leave
andl
int
in
fists
lock
jb
push
xchg
cmpsl
inc
out
lcall
pop
xor
enter
jmp
aam
pop
push
pop
xchg
sbb
and
int
push
sub
inc
jne
sbb
mov
xchg
pop
mov
std
xor
sbb
and
je
inc
inc
jae
cmp
idivb
test
cmpsl
pop
cmc
in
or
cltd
sbb
das
lcall
inc
pop
and
sub
cmp
lods
dec
inc
test
mov
jb
jns
popa
mov
test
mov
dec
fdivrl
push
jp
pop
sbb
adc
popf
hlt
xchg
movsl
rcll
fcmovb
sbb
insb
and
fs
scas
inc
leave
mov
push
adc
fildll
sub
add
fnsave
mov
xlat
dec
pop
daa
inc
mov
lahf
dec
rorl
shrl
aas
fbstp
lods
sub
adc
out
fistpll
and
fld
add
sti
push
sbb
insl
lds
and
sub
mov
subl
fmuls
pop
cmp
enter
cwtl
inc
hlt
scas
fidivrl
add
pop
bound
sbb
xchg
pop
outsl
inc
shrl
int
ja
hlt
push
dec
lea
jne
mov
inc
cmp
pushf
out
ret
pop
adc
cmp
and
adcl
aam
and
mov
cmpsb
xor
andb
xor
lock
jp
pop
pop
adc
sub
call
dec
addl
mov
push
and
pop
cwtl
and
pushl
sub
or
je
mov
lds
inc
cmpsb
mov
sbb
dec
mov
cs
in
jbe
mulb
push
xchg
mov
push
push
movsb
mov
mov
mov
clc
adc
pop
sub
cmp
sub
arpl
xchg
int
and
push
testb
adc
mov
pop
iret
mov
dec
sarl
int3
aaa
cmpsb
dec
cmpsl
adc
add
inc
in
push
jae
out
and
jg
jmp
mov
sbb
jp
movsb
xchg
inc
loope
mov
in
add
aas
jnp
mov
sub
jnp
ret
shlb
mov
push
dec
cmp
adc
mov
push
sub
loopne
ds
lea
es
pusha
rclb
or
test
mull
cltd
inc
push
mov
in
xor
mov
xlat
data16
fidivrl
pusha
inc
pop
outsb
pop
adc
and
imul
xchg
sbb
mov
sub
pop
xor
out
enter
push
mov
push
push
mov
inc
xor
mov
test
inc
xchg
test
jnp
mov
pusha
and
lret
nop
bound
pop
adc
ret
or
out
xchg
push
mov
je
inc
daa
jl
fiadds
jne
xor
jns
lret
lret
imul
mov
mov
add
dec
pushf
dec
cmp
xor
fisttpll
adc
xor
cmpl
and
fcoms
mov
mov
add
mov
xchg
push
inc
pop
sbb
and
sub
lahf
jbe
test
sbb
aas
movsb
pop
adc
dec
js
mov
int
pop
sub
push
ja
jb
mov
adc
mov
fld
iret
dec
lods
mov
mov
push
cmc
xor
add
movsb
lret
lock
inc
ficoml
ret
std
js
mov
arpl
mov
mov
aad
in
aam
stos
push
inc
je
cs
out
push
cld
jbe
or
cmpsb
jle
repz
nop
add
aad
outsb
pushf
lds
xchg
fstpl
cmp
pop
xchg
add
dec
xor
push
push
insb
imul
and
pusha
jbe
and
mov
loope
cltd
sbb
jae
sti
and
dec
sub
pop
movsl
popa
jmp
out
movsl
std
mov
or
stc
mov
pop
leave
push
adc
lock
aaa
data16
js
sub
aam
dec
push
or
sbb
dec
jno
jmp
xchg
jl
scas
ja
stos
push
shrl
insb
popf
mov
aaa
pusha
cltd
sbb
pop
adc
stos
jg
sub
sub
sbb
es
arpl
jo
inc
adc
push
add
pop
out
xlat
pop
xchg
test
stos
dec
subl
mov
lock
dec
stos
adc
mov
pop
lods
sub
or
cmpsb
pop
cmc
sbb
xchg
sub
cltd
or
push
push
test
add
stos
pop
in
das
clc
stc
out
insl
and
cld
sbb
mov
jge
shll
das
sub
and
mov
adc
inc
test
int3
call
dec
push
in
imul
xlat
fildll
je
inc
shlb
xchg
adc
pop
es
sub
add
jl
into
mov
imul
add
movsl
inc
mov
jle
adc
mov
in
add
jp
pop
rclb
pusha
inc
rorl
adc
addr16
loop
aaa
nop
in
out
int
mov
mov
inc
in
lret
xor
add
mov
sbb
cmpsl
cmpsb
cmp
mov
xchg
inc
fadds
dec
xor
ret
loop
pusha
and
sbb
push
outsl
int
movsl
mov
rolb
mov
mov
jg
arpl
xor
shlb
rcll
cs
test
mov
stos
addr16
fmull
lods
cmpl
icebp
int
clc
jmp
pushf
xchg
mov
jnp
outsb
sub
nop
or
shl
loop
lds
sbb
stc
push
mov
push
sub
mov
sarb
lret
dec
outsb
faddl
stos
scas
aam
xor
pop
pop
pop
mov
ret
xor
inc
aam
sarb
lret
jnp
fcomi
stc
jo
inc
mov
and
and
push
push
gs
pushf
lea
inc
mov
std
mov
ss
and
cmp
xchg
sbb
sbb
push
mov
arpl
loope
sbb
ds
scas
mov
xchg
ja
pushf
jle
sub
loop
imul
out
dec
jge
sarl
mov
mov
mov
sbb
push
bound
aaa
push
push
in
push
out
fwait
mov
int3
xchg
sbb
cwtl
lret
ret
mov
cli
pop
or
insb
setp
or
pop
or
enter
add
mov
xchg
cmp
std
xchg
mov
sbb
cltd
mov
lds
iret
mov
lret
inc
jno
jmp
push
pop
dec
pop
pop
push
in
fstl
add
mov
mov
jbe
mov
sub
lods
movsl
arpl
add
cmp
add
add
mov
ret
scas
xchg
repz
cld
xor
mov
sub
mov
js
mov
pop
dec
enter
pop
mov
jmp
pop
jno
icebp
push
mov
sub
inc
outsb
insl
lock
pushf
ljmp
sub
jb
mov
or
mov
shll
stos
insl
aad
mov
and
mov
psubusb
out
add
rolb
sub
addl
in
jno
scas
out
mov
or
sub
and
cmp
out
clc
cwtl
repz
into
out
fcomi
lods
call
pop
nop
xchg
lods
cmc
in
mov
sbb
insl
and
mov
mov
loop
push
and
xor
rol
imul
mov
push
dec
dec
mov
jb
repz
mov
call
pop
decb
mov
sub
push
add
pop
inc
cmp
ja
sub
int
les
les
xchg
sbb
cwtl
in
xor
mov
fstpl
cli
mov
xchg
adc
cmpsb
sti
dec
fwait
bound
xchg
cmp
es
mov
nop
int
stos
aad
clc
in
dec
dec
mov
xor
xchg
xor
xorb
pushf
and
inc
add
xor
out
or
dec
mov
iret
add
xor
in
punpckhbw
clc
fistps
pop
fstpt
ror
sbb
xchg
outsb
jae
mov
push
outsl
pop
lock
dec
sub
inc
xchg
pop
xor
not
push
push
jp
shl
test
lret
add
imul
js
out
popa
push
pop
jae
pop
jb
shrl
jecxz
mov
adc
sub
inc
in
adc
jmp
shll
out
cmp
xchg
push
stos
or
sar
scas
hlt
mov
jno
sar
push
test
sbb
sbb
aam
cli
jl
test
lahf
rcll
rclb
sbbb
jbe
out
xor
bound
xchg
inc
sti
mov
lods
sub
and
lahf
stos
outsb
add
test
pop
xchg
push
lret
nop
insl
xchg
or
sbb
lea
push
dec
mov
sub
sbbb
ja
sbb
sbb
outsl
cmp
mov
mov
mov
cli
das
jl
jp
loopne
pop
sub
mov
fsubl
scas
ljmp
inc
pop
mov
lock
jp
std
test
cmc
cld
imul
mov
or
hlt
out
fistps
addr16
mov
cmpsb
dec
and
sbb
mov
sarb
sub
or
inc
fisubs
inc
sbb
xor
ds
roll
fimull
iret
rcrl
or
xchg
cli
js
fisttps
cmp
imul
sbb
inc
push
into
ljmp
out
adc
out
lcall
int3
cs
cmp
lret
movsl
pusha
xchg
inc
inc
stos
mov
jo
dec
fsubrs
test
orl
pushf
mov
lods
std
icebp
add
cs
xor
adc
fdecstp
test
push
dec
cld
lods
insb
outsb
add
lcall
bound
mov
or
and
and
push
cli
sbb
shl
or
aad
imul
icebp
jnp
push
pop
out
push
aam
mov
push
aad
dec
pop
iret
xor
cmp
pop
and
andb
test
aas
mov
inc
imul
xchg
inc
orl
or
mov
sub
jo
lret
and
add
ds
ficoms
inc
cmc
mov
jge
in
or
mov
je
mov
mov
aam
movsb
sub
mov
add
mov
dec
gs
dec
sbb
xchg
dec
ret
mov
addl
imul
xlat
xor
cli
test
cmpsl
imul
hlt
mov
add
jmp
xchg
jl
pop
or
cmp
pop
push
adc
mov
cmp
xchg
sbb
add
mov
and
loope
adc
xchg
lcall
cmp
stos
out
out
and
repz
adc
add
mov
inc
pushf
test
mov
fbstp
mov
test
icebp
cmpsl
movsb
mov
test
into
cld
pop
lock
dec
andb
clc
and
nop
sahf
int3
and
inc
fistpll
movsl
cld
pop
xchg
cmpl
pop
mov
insl
rorl
out
xchg
add
sub
mov
push
test
mov
decb
cmc
movsb
ja
bound
add
add
insl
cmp
mov
ss
sbb
les
and
cmp
mov
mov
std
outsl
popf
xor
mov
jle
sub
pop
outsl
or
push
dec
unpcklps
ret
pop
pop
cld
jl
into
lahf
xlat
or
mov
mov
add
dec
mov
mov
push
lret
push
mov
jg
ficomps
movsb
push
mov
inc
pop
sub
dec
mov
ds
push
jg
addr16
test
xchg
in
data16
sub
leave
pop
loopne
xchg
push
jno
cmp
enter
pop
stos
out
lahf
test
repz
aas
dec
sub
mov
and
test
cmp
push
notb
jns
popf
popf
xchg
push
mov
aaa
xor
aam
pop
jge
out
pop
ss
pop
cld
sub
xchg
sub
push
rolb
pop
addl
call
or
xor
xchg
ret
jnp
adc
pop
hlt
cmpb
add
sbb
movsb
cli
inc
stos
loope
mov
js
and
xchg
cltd
fimuls
jecxz
outsl
out
jecxz
mov
pop
and
sub
add
ret
push
scas
and
ret
xor
test
xchg
test
addl
mov
shr
add
fists
mov
icebp
mov
subl
jb
daa
and
xchg
roll
adc
lods
xor
or
mov
int3
inc
mov
mov
cmp
inc
cmp
and
jl
and
enter
sbb
adc
mov
pop
mov
adc
data16
out
shrb
pusha
imul
jno
repnz
dec
sub
or
out
loop
sub
cmp
loopne
std
addb
mov
sub
int
int3
jo
mov
jle
inc
adc
mov
fbld
xchg
mov
sub
xchg
sbb
adc
je
mov
lods
dec
cs
mov
xor
sub
mov
pop
outsb
mov
cmp
xchg
xchg
mov
push
mov
cmpsb
pop
in
loop
jmp
sbb
data16
push
mov
jp
xor
mov
hlt
push
je
xchg
push
xor
mov
bound
xchg
ficomps
jl
cmp
int
dec
push
out
popa
fs
loopne
loopne
ja
cli
mov
lret
pushf
dec
cltd
jmp
xchg
gs
xor
dec
cltd
inc
fisttpl
in
push
nop
add
scas
xor
popf
cmp
insl
add
sub
ret
pop
add
sbb
mov
aaa
jb
jne
mov
ud2
out
xchg
ret
adc
pop
jle
lods
ss
int3
sbb
add
lahf
mov
mov
xlat
loopne
push
mov
xlat
dec
stc
jge
inc
pop
int3
inc
mov
cmp
and
xchg
xlat
nop
inc
insb
sbb
sbb
shll
sbb
fildl
inc
arpl
push
xchg
scas
shlb
loop
int
rcr
inc
loope
cwtl
mov
add
jnp
pop
mov
insb
and
cmp
frstor
pushl
in
stos
cli
stos
pop
sti
adc
jmp
test
jno
pop
fbld
icebp
cmp
jmp
cltd
cmc
int
dec
mov
mov
mov
xchg
jns
aaa
cmp
jae
mov
and
pop
jns
xor
les
mov
repnz
das
out
pusha
mov
mov
cmp
leave
sbb
out
dec
test
sbb
test
push
js
test
mov
outsl
into
lret
jb
call
fstps
std
ljmp
stos
imulb
or
ficoms
dec
insl
mov
mov
push
jb
mov
in
mov
sub
arpl
cmc
inc
dec
stc
test
mov
push
clc
faddl
mov
in
insb
mov
or
shlb
mov
cmp
add
inc
mov
adc
push
repnz
and
into
pop
loopne
in
adc
pop
pusha
mov
and
push
or
add
and
scas
xor
repz
pop
cmpsl
lret
adcl
jp
out
lods
repnz
ret
fwait
dec
bound
add
add
aas
sbb
xchg
adc
sbb
add
inc
or
in
loope
mov
outsl
and
lods
filds
test
lock
sbb
pop
mov
cmp
mov
xor
mov
pop
repz
cmp
push
fsubr
adc
test
pusha
orl
add
fdivrp
call
outsl
jl
pusha
mov
adc
les
pop
sub
es
enter
push
loop
out
jo
inc
mov
lret
jmp
mov
out
fimull
dec
popf
lea
outsb
stos
scas
mov
inc
xor
xor
popa
mov
icebp
jno
movsl
ljmp
mov
fstpl
out
xlat
cmp
loope
push
lea
roll
lahf
outsb
bound
mov
jg
dec
mov
jle
insl
sbb
sbb
sbb
and
ret
fistl
xor
cwtl
dec
sub
pop
push
nop
sbb
sbb
adcb
aad
jmp
dec
test
jmp
xor
hlt
add
sbb
pop
sbb
or
lods
loopne
lcall
divb
cmp
push
cld
pop
mov
jno
fiadds
adc
mov
out
rclb
fs
lcall
js
pop
sub
sub
clc
mov
jnp
fiadds
hlt
inc
xor
fnsave
xchg
and
sub
js
xchg
mov
ret
pop
gs
sbb
push
mov
leave
pop
or
sub
adcl
and
push
xor
sub
push
adc
in
cmpsb
aas
negl
imulb
cwtl
mov
nop
je
xchg
push
out
fiadds
mov
cmpsl
jns
lods
mov
pop
imul
lret
loop
and
mov
mov
xchg
movsl
aas
xor
icebp
cltd
push
data16
ds
icebp
mov
cmpsl
in
jae
ret
ds
mov
mov
ljmp
cmp
dec
adc
mov
mov
leave
xor
push
ja
or
jecxz
jmp
or
xor
sahf
jge
sbb
cmp
pop
imul
popl
jle
or
iret
cltd
cs
cwtl
mov
jb
leave
add
sahf
cld
adc
dec
jbe
jmp
cmp
push
inc
cmc
sub
cmp
xor
mov
dec
push
mov
lds
scas
pop
call
jne
lret
js
cmp
xor
addr16
outsb
loop
xchg
in
fisubl
sub
push
cltd
repz
xchg
mov
outsb
nop
push
dec
cmpb
and
pop
lods
loopne
xor
jge
mov
sbb
jb
mov
adc
dec
and
xchg
test
cltd
add
mov
xor
dec
inc
jl
clc
repnz
test
cs
movsl
jb
pop
jno
out
sub
cmpl
mov
add
jle
xor
stos
inc
push
pop
das
faddp
dec
cmc
inc
inc
jmp
es
sub
jnp
inc
or
inc
daa
fimuls
xchg
xchg
in
xor
and
sti
in
sub
dec
cwtl
pop
and
ss
jb
or
mov
arpl
in
hlt
into
lret
jnp
ret
xchg
repz
ss
movsb
in
inc
push
scas
mov
ljmp
je
movzwl
arpl
mov
jle
dec
cmpsl
xorl
test
aad
fucom
jmp
sub
adc
add
mov
inc
pop
dec
das
sub
add
lahf
jns
bound
movsb
filds
sar
inc
imul
aam
sub
loopne
out
ficoml
jb
add
pop
xchg
mov
push
out
rcrl
jp
dec
insl
sbb
out
imul
push
addr16
lock
dec
jg
insl
adc
push
xor
fiadds
ds
jg
sar
or
inc
push
inc
into
ds
add
ja
popf
or
push
sbbb
popf
push
imul
cmpb
mov
daa
push
push
stc
adc
out
mov
dec
int
jnp
mov
shrl
push
sbb
out
ljmp
cs
out
hlt
jo
mov
jle
sti
popf
lea
call
mov
mov
lret
mov
mov
ljmp
pop
loop
pop
mov
jge
push
jbe
sbb
or
inc
in
mov
je
xor
cmp
ret
movsl
mov
cltd
mov
stos
jo
and
mov
cmp
mov
in
or
add
inc
lcall
jne
pusha
fnstenv
pop
negl
push
setno
lock
adc
popf
cli
xchg
and
vmwrite
dec
int
je
call
mov
dec
xor
push
scas
mov
pop
adc
leave
mov
push
in
inc
push
sbb
das
pop
int3
repz
iret
imull
sbb
and
es
out
jge
clc
jmp
dec
pop
add
mov
mov
bound
inc
lret
ja
jne
dec
dec
mov
cmc
mov
mov
icebp
push
push
push
jns
inc
push
mov
repnz
and
adc
insl
inc
mov
pop
test
adc
lcall
int
mov
jno
scas
cmc
insb
out
cmp
lret
cmp
jmp
shl
push
inc
sub
dec
cmc
in
pop
jl
sbb
push
pusha
scas
dec
xchg
bound
nop
in
fwait
add
push
dec
cmp
mov
xor
sbbl
stos
cmp
rolb
mov
aam
cld
mov
inc
rorl
dec
nop
fistpl
sub
jne
sub
cltd
out
je
adc
sub
sahf
aas
push
lods
xchg
inc
fdivl
rorb
add
test
sub
sbb
cmc
dec
pop
pop
jnp
jge
pop
xor
sub
lret
jae
mov
test
inc
pop
sub
adc
es
add
shrl
add
mov
andl
sub
dec
sub
mov
rep
scas
jb
popa
mov
push
in
shl
mov
sbb
ja
aad
lds
push
sbbb
xchg
mov
fcoml
out
arpl
xorb
cmpsb
cs
into
cmc
insb
lods
movups
mov
mov
ds
test
dec
jp
popa
loop
inc
jo
xor
and
shrl
push
jecxz
and
stc
push
popf
in
mov
sbb
dec
xchg
test
rcl
jl
inc
push
ror
cs
dec
sub
jb
test
sbb
lret
and
and
add
fsubl
push
add
xor
les
fs
adc
cs
mov
cmp
pop
gs
cmpsl
dec
lods
mov
mov
xor
imul
pop
push
test
out
ja
movsl
add
mov
xchg
sub
and
xchg
push
push
in
call
imul
jnp
pop
add
sbb
mulb
inc
nop
sbb
pop
decb
lods
jmp
daa
inc
jns
cld
fs
out
mov
test
push
or
ljmp
add
and
pop
and
sbb
push
and
push
mov
repnz
movsb
imul
sti
pop
inc
out
push
xchg
mov
pop
or
call
ljmp
mov
enter
int
lcall
jo
xlat
and
sub
xor
jnp
mov
dec
leave
pop
sub
sbb
out
nop
mov
jg
push
fistpll
sbb
xor
shrb
mov
inc
orl
add
and
mov
adc
push
daa
lret
adc
insb
mov
pop
cmpsl
hlt
fnstcw
mov
ja
test
or
enter
xchg
lcallw
cmp
arpl
in
fprem1
push
xor
xor
mov
xchg
xchg
xchg
insb
xchg
sbbl
inc
or
lret
mov
lcall
mov
mov
cld
movsb
addr16
push
sbb
and
lods
xchg
cld
jne
nop
push
xchg
add
int3
sub
mov
cmp
psrad
movq
dec
cwtl
or
je
bound
dec
fsts
fisubs
jg
xchg
fsubl
adc
out
lahf
push
inc
mov
popf
mov
push
jo
fnstsw
movsl
test
pop
push
rolb
roll
cs
cld
arpl
sbb
xor
push
dec
mov
rcrb
jbe
cwtl
arpl
enter
mov
lods
popf
lds
je
jbe
jg
dec
xchg
mov
mov
ret
sub
dec
add
mov
pop
popa
iret
cmc
xchg
jmp
mov
je
pop
cmc
mov
and
lods
loopne
mov
insb
icebp
mov
add
and
rcrl
xor
mov
insl
sbb
dec
cli
mov
or
pop
adc
mov
xchg
mov
dec
ffreep
or
and
sub
mov
in
roll
inc
push
pop
jno
dec
sbb
and
xchg
and
inc
push
push
test
stc
mov
push
btsl
add
push
in
dec
movsl
outsb
dec
popa
dec
stos
stc
add
in
lret
outsl
jo
inc
dec
outsb
aam
jmp
fcomp
out
stos
sub
cli
cmpb
dec
push
sahf
cld
jmp
add
push
xorb
popf
ret
addl
sbb
cbtw
rolb
int3
aam
dec
lods
xor
mov
orb
push
in
and
in
add
inc
xchg
jecxz
jle
mov
xchg
push
jecxz
add
jb
add
mov
adc
or
inc
gs
sbb
lret
xor
jne
out
cmp
es
mov
mov
sar
pushf
sbb
and
out
sbb
int3
mov
push
clc
bound
jecxz
fiaddl
push
fidivs
daa
adc
cmp
and
ficompl
mov
jg
pop
xchg
push
lret
mov
cmp
or
cmp
fidivl
adc
repnz
sbb
xchg
popa
sbb
test
mov
jae
nop
sbb
rcl
loope
outsl
popa
sbb
mov
pop
hlt
lret
dec
fistpl
push
dec
add
add
cmc
dec
xchg
pusha
in
jno
fwait
lock
cli
xchg
cltd
dec
mov
inc
jbe
sbb
outsl
add
pop
push
stos
ljmp
mov
mov
jbe
mov
stc
loop
push
push
decb
jns
adc
xlat
repnz
movsl
and
jae
mov
mov
movsb
jp
mov
add
add
es
pop
mov
movsb
scas
out
xor
lret
dec
adc
pop
cltd
jno
mov
out
jmp
mov
pop
imul
mov
jecxz
sbb
add
in
dec
sub
mov
adc
outsl
in
mov
pushf
hlt
adc
out
loopne
mov
in
sahf
sbb
push
mov
test
rorb
movsb
shrb
and
and
ficomps
inc
call
mov
fs
adc
scas
sbb
out
xor
jmp
mov
jg
sbb
outsl
fs
fadds
and
mov
inc
xor
ficoms
adc
popf
stos
outsb
xchg
into
pop
jnp
std
mov
dec
ja
sbb
loop
inc
mov
xchg
sub
lea
out
outsb
call
int
cs
xor
mov
jecxz
ljmp
fwait
popf
mov
psllq
and
mov
xchg
frstor
fidivs
dec
adc
fdivr
or
pop
adc
notl
mov
icebp
out
out
icebp
add
mov
xor
pop
int3
jl
movsl
jbe
push
xor
popf
cmp
lock
call
inc
adc
and
push
rcrl
mov
push
push
sbbl
xchg
pop
in
xor
pop
jo
stc
jmp
push
or
les
jg
pop
sbb
fidivrs
je
addr16
out
adc
out
and
mov
lods
lea
mov
pushf
aam
cmc
lret
ss
out
push
xor
add
cmpsl
scas
jbe
add
sub
je
fs
sbb
ja
lret
les
cmc
adc
ja
dec
pop
cltd
lods
push
jle
pop
les
xchg
adc
push
test
sub
test
xorl
xor
out
sti
into
mov
movsl
std
lcall
stos
pop
jl
lcall
xor
fisttps
ljmp
and
cmp
mov
lea
fcmovbe
jne
xchg
mov
xchg
sti
bnd
push
out
icebp
lcall
xchg
inc
cmp
add
repz
xor
fisubrs
or
loopne
mov
push
mov
jns
jb
ds
xor
push
add
jae
adc
jle
es
in
jbe
fistpl
xchg
fdivr
cltd
scas
movsl
jns
dec
inc
jmp
es
adc
add
sbb
jp
loopne
in
sbb
or
mov
repnz
sub
push
mov
imul
ret
inc
fs
xchg
sub
faddl
int
das
push
out
dec
or
mov
arpl
and
and
stc
test
sub
xchg
lret
pop
xchg
pop
addr16
inc
pop
pop
or
mov
jg
xchg
push
inc
push
dec
test
ljmp
gs
push
push
xchg
xchg
scas
cs
ret
xchg
jno
dec
aad
mov
or
test
outsl
shrb
cmp
inc
add
dec
sub
js
or
push
and
dec
pop
mov
repz
mov
mov
push
insl
out
push
cltd
and
aad
jmp
cwtl
cmp
fcomi
jns
and
fcompl
outsl
mov
loope
and
sub
jnp
cmp
testl
sbb
inc
dec
test
mov
sti
popw
mov
jb
int3
or
and
ret
rorl
mov
repnz
cwtl
xchg
lds
gs
fs
lods
and
xchg
rcll
inc
jg
mov
or
adc
fs
lea
fsts
movsb
test
int
pop
mov
rcrb
ficoms
jnp
fcmovnb
pop
jnp
mov
push
mov
dec
in
shll
inc
xor
xchg
jp
hlt
nop
rolb
xor
fs
ds
mov
roll
sub
cmpsb
stos
scas
xor
mov
shrl
clc
frstor
mov
sbb
lock
jae
sahf
xchg
repz
out
arpl
xlat
lds
lahf
popf
push
sbb
mov
test
out
aam
dec
mov
incb
iret
outsl
daa
jge
inc
pop
int3
sbb
cmp
dec
add
and
sbbb
test
or
icebp
mov
and
sub
fs
jbe
jo
es
imul
and
mov
loope
or
add
aas
lock
xchg
cmpsl
lea
cltd
lods
ja
mov
mov
fsubr
fs
jg
test
cmpsb
xchg
and
sub
out
aad
mov
in
lds
push
mov
out
cs
pop
leave
mov
rolb
loopne
lret
lods
mov
sti
nop
fisubrl
xchg
les
in
mov
sub
cwtl
int
sub
adc
fsubr
xlat
push
icebp
push
mov
aaa
iret
dec
popf
out
mov
test
pop
push
repnz
test
adcl
mov
cwtl
nop
sub
insb
xchg
test
cltd
pop
popa
out
stos
or
jg
xchg
call
xchg
ret
jecxz
divl
lcall
push
lock
nop
mov
call
ficomps
mov
out
in
mov
mov
int
mov
popf
shll
lea
push
das
into
jnp
mov
stc
mov
lcall
xchg
sbb
pusha
sub
adc
cmp
and
ret
jae
int3
lret
push
out
outsb
mov
pop
icebp
sub
push
inc
andb
or
pop
mov
bound
lds
xchg
sub
xor
ds
out
pop
test
push
pushf
cld
comiss
cli
adc
jb
sbb
sbb
sbb
loopne
sarb
out
imul
mov
sbb
popf
mov
mov
xchg
inc
lea
xchg
rorb
aam
pop
pushf
dec
cld
in
push
decl
nop
pop
stos
add
sbb
sbb
shl
sti
lea
adc
ficoml
lcall
xor
mov
fidivs
push
jp
and
imul
mov
loopne
fsubrs
dec
push
shr
jb
rol
imul
mov
or
jne
sbb
dec
push
fldcw
lea
loop
and
mov
loope
pop
pop
jne
mov
push
xor
sbb
mov
or
jnp
pop
lahf
cltd
dec
pop
lea
out
sbb
ror
push
cmc
pop
xchg
in
and
push
divl
outsb
mov
iret
jae
add
jnp
pop
pop
into
pop
mov
sub
in
subl
xchg
test
cltd
mov
jb
sbb
in
pop
mov
and
mov
cmp
or
xor
test
or
daa
jbe
push
arpl
add
mov
fs
mov
xacquire
pop
sbb
mov
inc
add
jbe
mov
xchg
cmc
icebp
mov
ljmp
sbb
adc
cltd
mov
test
xchg
jbe
mov
icebp
adc
das
data16
cmpb
adc
ja
movb
add
scas
mov
or
repz
clc
mov
test
jge
push
mov
mov
int3
lods
xor
andl
xorl
in
lock
lds
pop
movsb
testb
imul
lea
inc
jmp
mov
push
das
pop
cltd
and
mov
sbbb
cmp
ss
movsl
and
aad
cmp
cmp
sbb
sbb
push
push
nop
push
inc
dec
add
jae
popl
sahf
inc
mov
mov
scas
mov
sti
insb
decb
pop
mov
hlt
popf
clc
pop
aas
rclb
in
push
mov
aam
stc
paddw
pop
mov
dec
sub
mov
mov
test
fs
jp
rclb
cs
mov
loope
mull
sub
push
ss
push
pop
mov
push
push
xor
ja
xlat
js
stos
sbb
xchg
inc
dec
sarl
and
lahf
add
sbbb
mov
push
dec
in
mov
ljmp
imul
shrl
icebp
mov
cmp
xchg
sti
fistl
movsb
and
test
fadd
pop
jb
pop
xchg
lods
mov
xchg
stos
popf
stc
jbe
mov
pop
push
icebp
insb
data16
lds
jne
inc
adc
stos
ljmp
repz
paddusb
mov
nop
ret
push
leave
fwait
addb
pop
xchg
repnz
movsb
inc
aad
fiadds
inc
add
adc
ds
decl
dec
jae
es
movsl
hlt
pop
cltd
and
pop
jnp
fcoms
pushf
cmpsl
jnp
adc
mov
mov
inc
mov
sbb
rolb
orb
leave
sub
jne
out
inc
es
pushf
cli
mov
pop
xchg
add
push
push
pop
mov
mov
push
leave
adc
xchg
stos
adc
push
sbb
pop
and
scas
popa
xor
daa
pop
and
outsb
mov
movsl
mov
sbb
and
loope
ss
mov
adc
push
mov
dec
and
add
jae
mov
xchg
and
pop
sbb
jecxz
mov
sub
out
cmc
inc
out
loop
cs
aad
and
pop
jecxz
xor
mov
inc
rcrl
or
cltd
jo
mov
icebp
inc
sbb
mov
xor
mov
dec
inc
sarb
inc
jae
cs
fistpll
test
inc
inc
pop
repz
movsb
psrlq
cmp
inc
cli
test
and
mov
shrb
or
pop
out
push
inc
dec
adc
inc
jmp
pop
popa
inc
stos
mov
imul
fwait
shr
cmp
mov
dec
jp
idivl
add
popf
pop
inc
mov
stos
lcall
stc
pusha
mov
pop
mov
mov
decb
shll
jno
jp
addl
cmp
data16
stc
cli
push
jnp
push
shll
or
mov
dec
pop
add
mov
fiadds
insb
push
pusha
inc
add
inc
insb
cmpsl
stos
pop
outsl
pop
pushl
sahf
pusha
xor
pop
lock
mov
lock
ret
test
sbb
ret
cmp
xor
nop
adc
cwtl
mov
scas
mov
inc
sarl
adc
aad
out
je
push
push
mov
pop
jb
and
in
popf
stos
cmc
push
insb
jp
mov
mov
xchg
ret
push
sub
fst
sub
push
in
dec
dec
cmpsb
loope
sbb
push
cmpsb
pop
lcall
pop
shll
adc
adc
xchg
add
stos
not
pop
mov
sub
add
xchg
and
shrl
or
iret
cli
lcall
xor
ret
mov
ficompl
mov
sti
pause
jg
pusha
pop
cmpsl
dec
cld
mov
fdivrs
and
pop
dec
movsb
inc
in
sbb
jp
cltd
adc
into
dec
gs
push
sub
and
fldenv
inc
push
outsl
push
push
dec
jmp
int3
xchg
mov
lahf
lock
sub
and
sub
jge
fstl
pop
cs
inc
dec
jg
enter
imul
std
mov
sub
adc
ljmp
xchg
in
sbb
jle
js
aas
shrl
imul
jno
sahf
loop
or
jge
aas
mov
mov
js
inc
idiv
movsl
adc
mov
fldl
cld
push
fs
push
xor
ret
cmpsl
adc
lret
lret
pusha
cmc
test
vmovaps
or
push
mov
int
shll
daa
std
xor
mov
hlt
jg
mov
jg
push
imul
cwtl
sub
sub
dec
sbb
out
cli
std
push
or
out
loop
pop
jo
pop
jns
push
push
lret
adc
out
push
cmc
add
push
push
and
push
leave
jb
int3
inc
daa
pop
xchg
jl
jbe
aas
or
dec
test
add
int
leave
lds
jmp
in
iret
jbe
addr16
lret
in
inc
sbbb
sub
std
cmpsl
incb
dec
mov
sbb
cmp
or
lea
push
imul
std
and
repz
mov
xchg
xchg
fldl
adc
shlb
js
push
mov
out
std
scas
mov
rol
cmp
hlt
data16
and
sub
adc
out
shlb
scas
ret
xchg
out
test
sub
clc
leave
cs
hlt
mov
shrl
and
scas
add
lret
and
xchg
add
xor
push
and
xchg
loop
test
sub
jnp
mov
mov
push
pop
mov
adc
adc
dec
loopne
mov
testb
movsb
inc
insl
xor
inc
in
stc
faddp
push
insl
je
inc
ljmp
aam
fstp
setle
xlat
in
jnp
push
into
push
cmp
sbb
jmp
sarl
xor
fmul
sbbl
popa
rcrl
or
xor
inc
cwtl
into
jecxz
cs
fdivrs
xor
pusha
jg
push
jle,pn
xchg
mov
mov
pop
push
fwait
mov
and
inc
vpcmpeqb
loop
jmp
sbb
mov
mov
gs
out
je
push
cmpsb
js
outsb
xor
adc
pusha
dec
das
lods
mov
rclb
cmp
inc
mov
mov
nop
pop
stc
jnp
loop
mov
inc
jg
jp
push
mov
mov
bnd
inc
jp
vpsubb
push
pop
pop
add
test
lret
inc
div
sbb
fcmovnb
sbb
mov
shll
repz
fs
push
push
sti
mov
xchg
dec
mov
test
sti
ret
sub
pop
loope
xor
lret
lods
daa
dec
fisttpl
or
arpl
hlt
lahf
mov
shl
and
ja
test
add
repnz
xchg
ret
dec
fwait
cmpsb
jmp
test
inc
clc
dec
repz
adc
pop
lret
sub
dec
xchg
push
es
or
mov
push
insb
xchg
inc
xor
ljmp
mov
into
fnstsw
mov
aas
xor
cmp
fiadds
jb
jecxz
xor
xchg
lds
dec
test
lock
cmpsb
mov
adc
dec
out
movsb
mov
sbb
or
inc
in
adc
mov
adc
rcll
dec
push
mov
data16
aam
mov
imul
or
ja
jle
jge
cmpsb
or
lods
push
sahf
pop
push
fwait
adc
fdiv
jo
mov
mov
cmpsb
add
das
imul
push
mov
ljmp
stc
jno
int
pop
jae
inc
sbbb
outsl
shlb
pop
pop
sub
outsb
mov
dec
push
aam
cmp
pushf
jmp
stos
aas
pop
and
push
les
mov
jle
and
mov
out
shl
push
jbe
or
dec
rolb
dec
shl
int3
test
add
leave
sbb
add
xchg
mov
push
jmp
xchg
pop
pop
movsl
adc
pop
in
fisubs
es
cwtl
test
add
xchg
aaa
addr16
jmp
ja
jb
stc
add
test
mov
imul
in
lahf
mov
sub
popf
fstpt
xchg
mov
cmp
and
adc
jg
lock
adc
jbe
add
xchg
stos
loope
jno
pop
movsb
inc
inc
jae
ret
sbb
mov
fildl
mov
fsub
and
sub
in
loop
dec
push
das
mov
aad
js
rcr
push
jb
adc
cmpsl
aas
leave
out
mov
xchg
dec
cs
push
fstpl
ds
outsl
call
mov
xchg
stos
movsb
inc
lods
insb
add
cwtl
jo
iret
pop
jmp
icebp
scas
dec
leave
scas
inc
cmp
imul
loope
push
out
daa
xor
fldcw
or
jl
js
dec
pop
push
adcl
inc
data16
loope
or
push
hlt
fldt
es
jo
sub
sbb
fists
scas
mov
or
lods
sub
fnstsw
xchg
xchg
outsl
aas
sbb
adc
adc
dec
xor
push
bound
or
xchg
cltd
ds
mov
cld
mov
jno
jp
lds
pop
xor
adc
and
cmc
jg
push
les
loopne
test
sbb
in
sbb
xor
fimuls
cs
jnp
push
mov
out
lahf
dec
dec
cmpl
jb
mov
nop
adc
lock
aad
jae
add
sub
push
popa
jb
push
imul
fs
int
sub
add
dec
pushl
xor
push
out
pushf
cwtl
pop
inc
pushf
dec
imul
mov
mov
in
daa
es
push
cmp
ficompl
xor
push
jg
push
jle
pop
push
shll
call
jmp
es
cmp
inc
mov
fs
cmpsb
dec
xor
push
pop
fnstenv
lds
xchg
sbb
jns
adc
push
mov
cld
aas
daa
outsl
je
ret
mov
lds
cmp
mov
fcomps
sarb
ljmp
in
jbe
pop
outsb
std
and
popf
ja
rorb
pushf
jg
sub
cmp
fadds
dec
push
xor
mov
push
addr16
mov
int3
test
lds
xlat
push
rcr
mov
push
ror
incb
roll
fisubl
fs
mov
loope
cmc
pop
xchg
insb
jg
xchg
es
inc
ret
fisubs
into
mov
into
mov
or
and
imul
leave
jmp
xlat
in
pop
int3
sar
mov
leave
movsl
and
je
pop
movd
and
mulb
out
pop
cmp
xor
push
or
mul
push
jl
pop
movsb
push
jne
xchg
movsb
imul
rorb
sbb
add
sbb
enter
push
jp
cmp
push
push
mov
icebp
lret
adc
call
mov
fsubl
sbb
out
sbb
es
push
dec
scas
push
int3
das
mov
mov
mov
hlt
sbb
cltd
ret
or
ret
ljmp
push
rorl
adc
test
fiaddl
aam
sbb
inc
sbb
jbe
ffree
stc
jl
add
add
aaa
push
sub
pop
or
or
sbb
mov
mov
pop
clc
dec
lds
dec
mov
and
fcmovne
jo
mov
pop
aas
pop
sub
adc
push
scas
jmp
lret
filds
and
jno
sbb
mov
cmp
sub
addr16
sbb
xchg
mov
nop
add
adc
pop
sbb
push
imul
jno
test
adcb
xchg
loope
aas
add
jne
cli
enter
lret
push
add
jmp
fsubl
pop
mov
rorb
out
cmc
rolb
pop
mov
sbb
scas
movsb
push
andb
sti
stos
movsl
into
mov
mov
cli
out
adc
mov
es
push
pushl
xlat
bound
jne
cmpsl
nop
or
loopne
pop
repnz
in
push
xchg
ffreep
mov
scas
jb
or
mov
hlt
xor
mov
out
push
mov
and
je
fsubrs
mov
mov
jae
sbb
push
insb
pushf
or
sub
sub
and
push
sarl
sub
sbb
scas
sahf
push
sbb
pop
add
test
andb
jae
les
sbb
stos
xchg
mov
adc
and
lret
mov
adc
adc
inc
int
sub
je
jo
dec
outsl
cld
loope
xor
mov
popf
addr16
into
lods
adc
out
inc
fs
mov
and
cmp
xchg
or
clc
in
loopne
jmp
std
push
leave
jge
pop
es
push
push
cmp
jl
xor
test
add
or
insb
adc
and
pop
shrl
mov
cltd
subb
mov
xchg
hlt
cs
lds
mov
fistpll
jecxz
lods
je
mov
jae
cmp
aam
push
push
out
scas
sbb
std
push
movsb
sub
pop
push
nop
jne
inc
adc
mov
and
iret
leave
lea
ret
mov
cmp
mov
mov
popf
paddusw
mov
test
xor
and
dec
andb
inc
mov
subl
aaa
iret
sub
push
xor
arpl
cmpsl
pop
nop
js
push
scas
push
jp
pop
aas
test
cmp
mov
das
pop
icebp
repz
dec
or
popf
fwait
xchg
add
cltd
push
ja
pop
jbe
push
jle
jecxz
mov
mov
inc
lds
jmp
sbb
add
lds
std
mov
pop
mov
addr16
xor
sub
jae
in
dec
daa
xchg
xchg
push
int
aad
daa
pop
and
sbb
imul
stos
sbb
mov
js
and
pop
movsl
loopne
es
xchg
lret
cmpsb
dec
sub
xor
hlt
cld
inc
or
dec
outsl
adc
mov
cmp
fsubrl
scas
divb
and
ja
jne
and
mov
pop
enter
lret
mov
aad
sbb
push
pop
xor
cmp
cmc
in
mov
mov
mov
sub
cmp
cmp
adc
mov
mov
push
aas
cmpsb
stos
das
repnz
mov
gs
mov
adc
rolb
sub
and
popf
pushf
mov
mov
xor
ficoms
lahf
mov
inc
dec
iret
and
adc
xlat
inc
arpl
jge
pushf
mov
cmp
hlt
cli
inc
ret
ret
fsubp
cmpsb
xor
icebp
xchg
test
and
test
push
pop
insl
jne
jne
loop
outsb
ficompl
nop
or
push
xor
or
js
mov
pop
sbb
dec
mov
pop
mov
in
imul
pop
adc
test
mov
clc
addr16
aad
adc
mov
rorb
dec
mov
stc
aaa
popf
jecxz
sub
lret
or
imul
lods
movsl
adc
jnp
jbe
into
fcoms
xchg
and
stos
clc
inc
repz
adc
mov
in
data16
xor
ljmp
adc
or
pop
xchg
adc
imul
sbb
cmc
push
push
or
xchg
nop
pop
mov
rcrl
sti
sahf
push
pop
sti
out
mov
mov
jle
idiv
add
rcll
insl
in
push
repnz
int
push
or
stos
xchg
lret
jns
movsb
pop
fistpll
neg
loope
jne
jae
or
popf
mov
adc
xor
push
clc
mov
ds
rcr
shrl
jae
jno
mov
daa
lret
xor
sub
sbb
imul
movsl
adc
popf
jne
or
push
test
add
mov
inc
fisubl
loope
jne
pop
pop
sbb
lret
push
xlat
mov
stc
pop
cmp
shlb
push
mov
push
push
sub
out
mov
ja
fldt
mov
push
xchg
mov
cli
sbb
xor
mov
push
push
adc
inc
nop
pop
push
out
andl
push
pusha
aam
in
movsb
mov
or
sarl
nopl
and
add
jmp
adc
jns
mov
rorb
fistl
push
jge
pop
lea
pop
cs
fs
push
adc
imul
js
adc
dec
popf
fwait
adc
jne
lcall
cltd
mov
imul
push
add
and
jns
aam
or
xor
xor
or
out
mull
push
mov
call
daa
sub
nop
pop
scas
adc
lds
inc
xchg
outsl
shrl
lea
xor
cmpsl
or
xchg
pop
jbe
fnstsw
and
adc
mov
and
pop
fimuls
je
sti
data16
sub
cld
dec
es
mov
jl
jns
dec
sbb
add
jbe
pop
ja
push
mov
adc
fdiv
jp
dec
pop
call
js
push
sub
and
push
jmp
xchg
mov
data16
sbbl
aas
xor
mov
out
repz
pusha
ret
out
sub
push
cmp
in
aaa
int3
aaa
push
cmp
sbb
popf
add
sarb
mov
popf
clc
lret
push
int
ds
ss
push
sbb
cmp
insl
pop
jns
ficoml
mov
inc
lods
cwtl
dec
pop
sahf
mov
subl
push
cltd
xor
sub
pop
shl
stos
xor
and
in
sbb
mov
loope
mov
rcll
push
mov
pop
xchg
jg
ret
xchg
aam
rcrb
insb
cmpsl
mov
into
mull
jno
xor
loop
add
push
xchg
mov
xchg
pop
mov
xchg
xor
and
or
jbe
pop
in
mov
xor
sbb
insl
movsl
xchg
add
cmc
xchg
push
sbb
add
mov
sbb
lods
call
fwait
or
add
dec
ljmp
inc
sbb
inc
fmuls
cmpl
mov
xor
mov
or
add
lods
jbe
cmp
insl
adc
shlb
push
push
pop
out
add
mov
adc
add
add
std
test
loop
or
xor
push
jecxz
ret
and
stos
shll
dec
sub
out
inc
js
shll
repnz
jne
inc
push
jbe
push
push
mov
cmpsb
lea
jg
lcall
filds
xlat
jnp
stos
jl
test
fcomps
push
push
popa
xchg
dec
inc
xor
ficoml
subb
sbb
lea
xchg
jl
test
outsb
push
addr16
movsl
lds
test
ljmp
mov
mov
les
mov
ds
dec
popf
aaa
rorb
rorl
adc
push
sub
dec
mov
push
lret
hlt
pop
inc
mov
mov
jmp
mov
mov
pop
fwait
dec
push
test
in
pop
repnz
aam
movsl
lret
aam
out
in
stos
or
push
cmp
mov
jg
lea
or
lods
jno
cmp
les
mov
mov
and
jns
jns
into
cli
sbb
and
lea
xlat
cmp
rcr
jmp
daa
fcmovnb
xor
lods
in
movsb
push
mov
incl
cmc
push
pop
xor
jecxz
lods
add
xor
in
das
jp
or
sahf
enter
sub
xlat
mov
and
pop
lahf
or
jmp
xchg
dec
sbb
stc
das
shlb
or
xlat
cmp
add
ja
in
xor
clc
adc
dec
popa
fsubrs
push
push
inc
pushf
xor
push
inc
or
lcall
xchg
mov
icebp
sub
or
stos
or
popa
rorl
fwait
jl
and
sbb
mov
cmp
popf
fimuls
cmp
lds
test
popf
push
push
xchg
lahf
mov
test
ds
mov
push
push
inc
mov
and
mov
and
rcrl
lea
and
dec
pop
addr16
xor
mov
aad
push
mov
sahf
imul
push
dec
and
push
repz
mov
loope
aad
add
mov
scas
mov
cmp
daa
outsl
jge
push
mov
pop
dec
std
nop
into
lret
in
adc
adc
xor
dec
dec
xor
jge
ret
addl
sub
jnp
pop
ss
cli
addb
fnsave
inc
xor
xor
pop
pushf
mov
outsb
in
mov
inc
lds
adc
sahf
loop
xor
loop
add
fdivp
xor
movsl
into
shrl
cmp
push
xchg
add
adc
mov
ja
call
stos
and
pop
stc
dec
and
jb
lds
pop
xor
jno
inc
sbb
mov
jb
fbld
fcoml
aam
cmp
dec
iret
sahf
les
cmp
mov
aam
mov
xrelease
and
pop
fimuls
adc
mov
push
jns
cmovl
mov
outsl
test
inc
sahf
cwtl
mov
or
inc
mov
adc
push
fisttpll
or
xchg
cmc
lods
mov
dec
add
mov
add
in
xchg
pop
pop
jl
ret
clc
cmp
xchg
mov
jns
icebp
dec
lock
fnstsw
jb
leave
jecxz
pop
repz
xor
fwait
add
sub
mov
xchg
inc
aam
fwait
sbb
fistpll
pop
movsb
mov
xor
jo
scas
mov
fcoml
fsub
inc
xchg
xlat
dec
fistl
and
ror
addb
enter
fistpl
test
push
out
mov
int
cmpl
sbb
xchg
adc
sub
and
mov
cmp
mov
mov
push
xchg
cmp
cld
sub
mov
cli
xchg
stos
cmpb
mov
sub
jno
outsl
or
sar
cmc
push
sub
push
lret
mov
adc
arpl
out
push
and
fcoms
add
insb
xor
pop
mov
fbstp
push
jp
xlat
movsb
cmc
cli
sub
cmpsb
es
xchg
mov
dec
fsub
push
sbb
dec
lea
push
push
cmc
cltd
mov
jbe
shrl
lea
lret
insb
rcrb
lahf
lods
add
shll
scas
mov
sbb
sbb
or
jo
jb
scas
dec
pop
out
loop
mull
cmp
test
sbb
movsl
stc
add
push
pusha
cmp
jmp
aad
adc
in
cmc
mov
pop
shl
and
insl
add
mov
push
xchg
xor
jg
int
pop
and
xchg
inc
int
dec
pusha
inc
push
fimull
sti
movsl
sub
mov
int
lods
mov
lret
mov
xor
cmp
out
dec
mov
arpl
pop
adc
mov
push
cwtl
jl
lea
jb
mov
call
cmp
and
xor
jmp
leave
jno
sbb
scas
insl
push
cmp
xchg
jle
sub
jns
and
xchg
ret
sub
or
or
sti
test
xchg
and
xor
fwait
inc
sub
jge
adc
add
in
loop
aas
popa
pop
pop
subw
sub
mov
mov
adc
outsl
in
and
xor
adc
sti
adc
fisubrl
cwtl
test
scas
jo,pt
stc
push
outsl
stos
add
xor
xchg
clc
mov
sysenter
adc
or
outsl
add
inc
adc
xor
sub
outsl
rorb
sbb
insl
ljmp
mov
jno
and
xor
jno
fwait
lods
aas
mov
sub
flds
movsl
lods
adc
rolb
stos
push
mov
pop
ljmp
fisttps
jmp
jns
cs
mov
repz
sub
test
sarb
stos
add
shrl
clc
dec
fs
lret
inc
lods
push
add
insb
xlat
lods
int
negl
inc
lcall
or
adc
lea
call
pop
sbb
mov
push
cmp
push
mov
sbb
inc
mov
loop
mov
or
es
imul
push
add
lods
mov
inc
mov
orb
mov
je
out
push
xchg
push
add
push
xor
test
or
mov
push
inc
push
enter
call
movsb
push
pop
and
and
jo
push
imul
adc
xor
dec
or
add
mov
pusha
scas
loope
pop
aam
jle
mov
jae
icebp
jecxz
mov
divb
lret
xchg
add
cmpsb
lret
xchg
adc
xor
lahf
mov
sub
xor
cmp
fs
mov
push
jo
enter
into
sub
fwait
subl
mov
pop
test
sahf
lret
subl
mov
les
mov
fstpl
lret
add
sbb
es
sbb
push
mov
pusha
add
out
or
sbb
adc
lea
faddl
leave
imul
jp
out
popf
mov
cmp
jge
adc
insl
or
call
dec
jae
lret
pop
bound
pop
xchg
mov
shll
ljmp
mull
jne
mov
pusha
leave
jnp
popf
mov
or
pop
xorl
inc
sbb
pop
add
jnp
repnz
cmc
into
shll
pushf
mov
gs
xlat
add
jecxz
lock
leave
adc
cmp
dec
adc
and
sub
and
xor
in
hlt
xchg
pop
push
cli
add
xor
mov
cmpsb
mov
xchg
pop
aad
stos
cmpsl
out
cmpsb
sub
pop
cld
or
jae
loop
jecxz
mov
aam
flds
rclb
xor
cltd
add
pop
or
sahf
or
add
dec
cmp
mov
adc
pop
cmpsb
mov
or
push
es
inc
lock
int3
arpl
cmc
sub
cwtl
arpl
push
int
cmpsb
add
jl
cmpsb
sub
adcb
push
lea
adc
cld
add
sbb
sub
cmp
lea
aaa
and
xor
hlt
adc
xor
repz
cltd
sbb
repz
inc
gs
inc
pop
adc
in
or
push
sub
dec
lods
test
pusha
les
pop
arpl
mov
push
jne
pop
cmpb
fwait
popa
cmp
fmull
xor
xor
cld
jbe
lods
cmp
pusha
arpl
dec
cltd
icebp
adc
pop
push
inc
or
call
test
dec
dec
mov
loop
mov
xchg
dec
movsb
sti
sbb
js
scas
pushl
mov
cmp
repz
cmp
inc
ja
fwait
test
jge
pop
arpl
aaa
cli
cmpsb
or
test
and
aam
movsb
xchg
in
mov
vmaxps
in
push
inc
lds
jnp
fcoml
xlat
in
fmulp
test
shl
jp
mov
pop
adc
or
mov
lahf
dec
mov
hlt
dec
xor
popa
jbe
icebp
cmp
into
adc
push
push
nop
push
cmp
jl
je
push
sbb
int
ja
mov
or
pusha
dec
jecxz
sar
es
dec
test
push
xchg
adc
push
push
mov
sub
jge
dec
xchg
lcall
adc
jmp
cwtl
in
bnd
pop
or
jae
and
int3
dec
xchg
popf
mov
xchg
in
xchg
fisubrs
push
adc
mov
insl
push
int3
xchg
mov
add
cmp
mov
mov
call
aam
dec
pop
test
xchg
xchg
adc
push
sub
es
adc
add
aam
jle
and
out
cmpsl
adc
in
stc
mov
mov
xor
dec
leave
daa
cld
cmp
xor
psadbw
ljmp
add
xor
test
push
pop
jbe
scas
jb
mov
andl
sub
sub
cld
add
or
mov
shll
sub
je
jns
popf
jbe
xchg
inc
add
push
sub
mov
out
insl
push
pop
insl
jnp
xorl
mov
jp
fisubrs
addr16
fcoms
aad
add
mov
mov
pop
fs
movsl
push
or
ja
movsl
mov
shlb
mov
es
mov
mov
lahf
mov
ret
adc
jmp
or
pop
dec
stos
add
and
xor
add
lcall
cmp
rolb
adc
jge
cmp
stos
inc
add
inc
jmp
bound
daa
mov
push
jecxz
sarb
sqrtps
xchg
rcr
mov
xchg
jp
push
jmp
mov
outsb
push
mov
test
fucomp
test
push
out
mov
xchg
iret
or
xchg
jnp
in
xchg
add
push
sub
xchg
jae
fcomi
es
mov
jae
fnstcw
es
ds
dec
movsb
faddp
mov
movsl
or
insl
mov
es
sbb
insb
sub
jns
inc
push
insb
mov
out
fildll
jmp
cwtl
ja
adc
gs
lcall
pop
ss
outsb
repz
xor
outsb
jg
pop
imul
xor
mov
push
das
adc
test
jl
fs
ja
popa
and
add
push
fsubrl
or
jge
cmp
mov
mov
mov
sbb
jge
jl
jb
sub
sub
flds
dec
fst
or
sub
add
sbb
pushf
das
jl
mov
dec
into
testl
aas
adc
insl
add
int
push
or
lret
add
stc
adc
xchg
insb
mov
scas
lods
out
and
and
std
fisubrl
inc
repnz
pushf
inc
popl
add
inc
negl
mov
loop
js
aaa
dec
int3
mov
fildl
std
push
sbb
testl
psrlq
push
sbb
pop
sbbb
push
jae
fs
sub
jge
scas
fstl
popa
mov
outsl
ficoml
aad
ret
cmp
adcb
lret
jne
xlat
movsl
push
shrb
sub
fs
inc
popa
test
dec
js
test
aad
test
pop
mov
aaa
xor
negl
sbb
in
and
repnz
inc
xor
mov
leave
mov
adc
sbb
lods
int
add
adc
jge
sbb
imul
leave
push
pop
inc
jae
mov
pcmpgtb
dec
or
dec
dec
hlt
pop
pop
scas
out
xchg
aad
and
inc
or
sbb
lods
push
cwtl
mov
shl
andl
arpl
ljmp
jae
loopne
jns
ss
fcmovnbe
pop
lods
cmp
cltd
xchg
in
xor
or
rcll
std
movsl
out
not
inc
pushf
pop
aas
ljmp
icebp
xlat
push
lods
mov
mov
jns
std
push
jbe
sub
in
and
xchg
cmp
xor
popa
fwait
sahf
enter
push
push
sub
iret
mov
mov
dec
push
leave
mov
sbb
and
shrb
pop
adcl
test
xor
nop
and
xchg
lahf
or
lcall
push
movsb
imul
dec
jmp
mov
jb
fs
mov
push
cwtl
scas
mov
cmp
insl
dec
pop
fbld
leave
and
push
scas
addr16
fwait
cmp
push
leave
arpl
in
popa
push
jge
int3
mov
push
es
pop
sbb
push
add
dec
shlb
rcll
lret
imul
adc
jle
mov
pushf
push
push
or
cmp
pop
sbb
inc
jecxz
inc
movsl
out
inc
pop
inc
xchg
daa
pop
sbb
xchg
add
mov
ljmp
addr16
negb
cli
fs
inc
and
mov
andl
aas
push
sar
stc
mov
lret
xchg
inc
fcmovu
add
ss
pop
lahf
mov
push
pop
push
aas
ja
mov
and
or
cmp
dec
xor
pop
and
xchg
jg
mov
iret
push
inc
xchg
dec
mov
pop
mov
cmc
dec
lea
daa
cltd
add
mov
rcrl
xor
push
sarb
mov
mov
pop
sbb
mov
xchg
aaa
lods
and
adc
sbb
rorb
pop
jo
and
jle
fisubrs
aam
sub
dec
xchg
sub
jbe
xor
ljmp
cmpsb
jb
aas
dec
add
mov
sub
push
and
jne
mov
inc
xor
add
iret
in
std
push
push
pop
les
mov
cltd
loop
push
fs
jmp
int
jnp
sub
sbb
movsb
sub
out
test
in
nop
adc
jnp
icebp
aaa
sbb
push
xor
sub
lods
cmpsb
jne
data16
stc
addb
out
jae,pt
dec
xor
inc
outsb
sub
sbb
fcomi
in
popa
jge
int
repz
mov
or
shrb
fs
push
mov
mov
dec
pop
insb
jmp
ret
jmp
xor
hlt
dec
and
dec
insb
cmp
xor
xchg
movsb
sub
int
sbb
push
push
adc
in
inc
pop
or
idivb
das
repz
das
push
cmp
notl
jae
xchg
loope
outsl
pop
jle
jmp
incb
into
and
mov
add
cmc
stos
rclb
mov
int3
stc
cmp
stos
movsb
jnp
add
testb
daa
dec
mov
fidivl
gs
fldl
or
dec
dec
mov
mov
jecxz
lret
sbb
addl
call
imul
push
mov
scas
pop
test
push
pop
mov
loop
mov
jo
aaa
add
push
dec
pusha
jle
and
push
dec
aad
cltd
add
repnz
mov
icebp
loop
lock
sbb
mov
leave
int3
adc
sub
lcall
pop
mov
ds
push
mov
and
ljmp
out
push
cmp
lret
inc
gs
sub
rcll
popfw
inc
xchg
stc
mov
xchg
or
and
and
int3
loopne
lock
and
enter
mov
in
jecxz
in
mov
sub
jp
cmp
cmp
sar
add
ror
pop
loope,pt
ror
xlat
inc
jne
ds
and
mov
jno
stos
adcb
mov
jbe
pop
inc
inc
xor
aad
std
test
into
mov
mov
out
and
xchg
das
mov
int3
and
divb
decb
cmp
adc
cmpl
push
in
or
sub
xlat
xchg
dec
dec
mov
inc
call
inc
xchg
inc
push
mov
outsb
popa
ds
pusha
jecxz
aam
push
cmp
inc
or
lock
and
and
stos
pop
movsb
xor
dec
cld
int3
xchg
lcall
mov
out
int3
dec
lods
pop
sub
fwait
sub
cmp
arpl
push
popa
xorl
sub
stos
jp
int3
in
dec
lock
stc
mov
rclb
add
inc
sub
jne
popa
gs
lock
or
jp
daa
shrb
xchg
push
out
dec
or
dec
ja
fstl
shl
es
inc
adc
sub
sub
pop
sub
movsb
rolb
es
loopne
jnp
xor
cs
fldenv
pusha
jmp
or
xor
add
test
or
cmc
ljmp
mov
fistl
lahf
jo
mov
fiadds
data16
aaa
and
inc
lret
test
loopne
mov
sub
and
inc
pop
mov
iret
sti
rclb
xchg
or
insb
adc
out
sbb
call
and
jnp
add
loopne
xor
adc
cmp
push
ret
lods
test
cli
enter
sbb
xchg
out
dec
or
shlb
movsb
into
push
add
jnp
xchg
dec
add
or
bswap
mov
stc
jbe
daa
pop
aam
fwait
adc
std
xor
xor
push
mov
andl
cmp
mov
lods
sub
pop
adc
mov
push
imul
mov
out
outsl
adcl
jae
adc
into
lret
and
out
inc
mov
int3
lea
xchg
xchg
cmp
cwtl
daa
dec
gs
test
dec
cmp
roll
push
mov
gs
jp
inc
vunpckhpd
and
rol
sub
ja
into
dec
cs
dec
jl,pn
imul
cltd
in
inc
ror
xchg
sub
out
imul
add
xchg
pop
sbbl
pop
jge
jb
pusha
ljmp
addr16
or
adc
inc
pushf
sbb
mov
sbb
mulb
in
iret
and
sbb
fcomi
add
je
fbld
das
les
fs
clc
mov
leave
mov
cli
ss
jne
fcoml
and
outsl
cmc
and
pushf
outsl
adcl
ds
call
loope
ret
rcll
dec
out
fstpt
stos
shll
xchg
jns
ss
shll
sbb
and
popf
sbb
pop
sbb
ds
out
loope
mov
fwait
test
int3
lea
andb
lahf
jns
scas
pop
and
add
loop
sbb
adc
cld
inc
mov
or
ret
pop
fwait
xor
sub
or
push
xlat
cmpsb
in
mov
pop
or
fsubs
outsb
add
fsubrs
cmpsb
adc
gs
imul
sbb
out
es
push
out
cmpsl
mov
push
mov
mov
lahf
inc
add
pop
out
xlat
sbb
popl
mov
push
aas
cltd
fdivs
gs
cmp
adc
adc
xor
or
shrl
imul
sub
scas
push
xlat
xchg
and
xchg
testb
dec
xchg
push
dec
push
fcompl
int3
stc
xchg
mov
jnp
in
icebp
ds
pop
pop
sbb
shrl
jae
lahf
test
xchg
stos
pushf
call
cmc
xchg
scas
aaa
cmp
cmp
mov
pop
xchg
in
jae
cmc
inc
lahf
adc
cld
andb
xor
xlat
fisubl
jp
sbb
mov
gs
mov
adcl
or
cmc
or
out
flds
mov
mov
jbe
ficompl
cld
cltd
jl
sbb
sbb
mov
push
in
movsb
pop
andb
xchg
je
shrb
and
imul
or
inc
out
sub
insl
pop
and
mov
scas
adc
hlt
rorb
or
shlb
and
insb
subb
in
adc
mov
inc
lea
into
lods
mov
xor
xor
adc
push
push
aas
int
cmp
shrd
loop
enter
sbb
fldenv
mov
bound
jo
inc
lods
insl
or
dec
mov
inc
mov
inc
cwtl
pushf
test
cmpb
aad
jbe
sti
jp
sbb
xchg
outsl
in
imul
mov
leave
pop
dec
cmpsb
aam
and
pop
stos
xchg
fistpl
call
popf
jmp
ljmp
hlt
in
cmp
imul
rcll
loopne
mov
add
fidivrs
arpl
push
lcall
call
mov
clc
push
dec
mov
xchg
mov
jae
std
fs
hlt
nop
lahf
inc
xor
imul
inc
inc
in
lcall
pop
push
movlps
mov
nop
push
orl
scas
jge
cmc
adc
pop
push
js
mov
pop
add
jo
and
scas
push
inc
or
icebp
push
cmpsb
push
cmp
leave
jns
popf
dec
sbb
dec
pop
outsl
rolb
ss
mov
sbb
dec
pop
jno
js
inc
jg
pop
push
jae
mov
jmp
movsl
inc
sbb
mov
jp
mov
clc
fisttps
pusha
popa
sbb
and
imul
stos
mov
nop
pop
push
cmpsl
push
mov
ljmp
pop
test
stos
shrl
xchg
inc
push
and
push
js
push
fnsetpm(287
xchg
ret
les
test
inc
insl
movsl
icebp
lret
stos
inc
push
pop
cmp
mov
add
pop
subb
test
sahf
adc
xchg
cmpl
add
mov
rol
dec
jg
xchg
dec
or
add
sub
shlb
inc
xchg
mov
je
popa
or
mov
int3
xchg
mov
adc
dec
mov
repnz
push
inc
sbb
mov
out
subl
stos
pop
push
lods
insb
mov
imul
xchg
add
jle
sub
popa
inc
mov
cs
in
loope
out
xor
cmp
pop
pop
jbe
loope
mov
test
dec
xchg
push
mov
jecxz
ja
mov
mov
int3
pop
mov
aad
aaa
mov
les
dec
js
mov
ret
out
cli
or
mov
cmp
pop
lock
sub
add
cmp
push
push
adc
mov
or
or
and
cwtl
mov
lss
call
mov
dec
mov
xor
cltd
popa
or
mov
mov
out
orb
sbb
jl
push
fisttpll
pop
lcall
xor
mov
add
or
jecxz
pop
outsl
mov
repnz
out
in
add
mov
adc
mov
bound
icebp
test
xor
jp
jg
mov
pop
and
int3
mov
mov
cli
repz
xchg
cmp
dec
push
mov
out
les
xlat
xchg
sub
test
repz
cmp
pop
jo
mov
mov
fiaddl
cmpsl
or
clc
cmp
je
scas
test
inc
xlat
cmp
pop
and
dec
int
in
mov
adc
rol
aad
and
negb
sbb
add
or
popa
arpl
mov
repnz
push
and
sub
cmpsb
xchg
das
pushf
inc
mov
fistps
sahf
insl
pop
inc
push
iret
sahf
adc
and
xchg
fisubs
mov
jo
sub
scas
xor
hlt
inc
stc
dec
outsb
push
jne
jge
jns
mov
mov
pop
not
mov
iret
pop
and
or
imul
xor
jne
dec
add
movswl
jb
add
sbb
mov
fsubrs
mov
hlt
sub
idivl
sbb
insb
xor
xlat
cmp
push
test
pop
loop
ret
ss
out
insl
inc
xor
inc
movsb
fmulp
dec
lea
mov
mov
inc
nop
sbb
pop
insl
mov
icebp
insb
push
push
rolb
loop
sub
jo
js
dec
fsubrp
jno
pushf
push
fisubrs
fucomp
jb
test
subl
jne
out
cmp
xchg
scas
cmpsb
cmc
sbb
aad
popa
xlat
stos
and
hlt
fstl
mov
dec
push
push
or
in
mov
push
xor
xor
lahf
dec
in
addb
xchg
xchg
lea
ret
scas
gs
fstps
mov
ret
xlat
jnp
xchg
aad
pop
sub
inc
mov
repnz
mov
or
sbb
stos
dec
adc
iret
or
pop
inc
inc
sti
inc
shl
inc
fists
scas
ja
push
enter
les
mov
xor
pop
mov
push
mov
lods
in
sub
xor
pop
in
pop
call
lock
je
xchg
xor
loop
xchg
or
sub
mov
and
rcr
mov
std
rcr
hlt
movsl
pop
cmp
cli
dec
pop
sbb
push
clc
out
addr16
cwtl
repz
out
hlt
aam
mov
fcomps
int3
jb
xor
pop
dec
les
jle
jne
ja
aam
pop
xchg
xlat
lcall
jno
sar
jns
add
stos
addr16
xchg
lcall
mov
pop
jmp
sub
xchg
loope
shrb
sub
xchg
stc
cmc
les
aam
jg
or
mov
mov
mov
fwait
andb
jmp
jnp
xchg
ljmp
mov
out
ss
or
insl
add
mov
ja
and
xor
lahf
gs
leave
cmpsl
shll
dec
xchg
shr
fs
cmp
xchg
add
cltd
or
pop
loop
sub
stc
jecxz
cmp
clc
mov
push
and
jecxz
inc
inc
dec
jecxz
addr16
lods
mov
mov
xchg
data16
aad
aad
out
ss
frstor
movsb
idivl
faddl
pop
jb
test
dec
aad
out
call
out
cmp
mov
out
fwait
test
shll
adc
adc
adcl
icebp
test
leave
movsb
test
gs
lea
aam
scas
cmp
sti
cmpsl
add
stos
inc
dec
movsl
and
outsl
add
cmp
push
nop
pop
dec
cmpsl
lret
lock
lods
push
mov
imul
test
inc
push
pop
aaa
imul
xor
push
xchg
jmp
sbb
fstps
mov
sub
cmp
or
aas
data16
setle
push
xchg
or
mov
sub
out
dec
jae
mov
pop
sub
hlt
loopne
es
push
cmp
jb
stos
lret
jg
adc
roll
repnz
lods
dec
jmp
mov
fsts
nop
cltd
vpmacsdql
jge
mov
cmp
push
or
mov
enter
cmpsb
cmp
cmp
aaa
jmp
xchg
xor
stos
sbb
mov
cld
nop
leave
test
ss
jbe
mov
cmp
push
jmp
jg
inc
mov
sahf
fbld
push
filds
out
add
nop
std
push
push
ljmp
imul
pop
dec
sub
push
test
cmpsl
push
add
sbb
pop
inc
loopne
stc
mov
cli
movsl
jecxz
stos
hlt
fwait
jo
lds
jb
bound
sbb
add
sub
push
sub
cmp
sbb
push
and
stc
out
cmp
adc
cmp
ds
imulb
push
loopne
mov
mov
xor
ret
test
fdivs
rcl
mov
imul
push
cmpsb
fsubr
or
lret
mov
and
shlb
adc
jle
mov
adc
xchg
inc
cmp
jnp
and
enter
push
xchg
pop
sti
icebp
std
out
mov
xor
icebp
int3
enter
or
mov
cld
jne
fnstcw
pop
in
xchg
loope
mov
in
jo
cld
imul
outsl
arpl
or
stos
or
lea
repz
pop
xor
lea
out
sub
mov
sbb
jecxz
fisubrs
lcall
jl
xchg
je
push
xor
int3
xchg
sub
hlt
mov
sub
das
popf
adc
push
mov
add
pop
rolb
jb
xchg
aas
mov
int3
ret
jne
lcall
pop
decb
mov
push
push
pop
add
je
lea
pusha
out
sarl
jnp
clc
and
and
fists
or
jns
bound
add
cmp
jns
mov
test
or
add
lods
lahf
add
xor
aad
pushf
push
clc
or
es
lds
adc
jne
fadd
mov
popa
out
mov
gs
outsl
jbe
and
xor
lahf
xlat
inc
aas
push
adc
les
sbb
test
inc
jne
pushf
push
mov
dec
mov
js
loop
pop
jns
xor
push
into
inc
xchg
pop
and
jmp
gs
dec
inc
sub
fcomi
lods
add
mov
sub
cmp
sarb
fnstenv
pop
lods
fisubrl
aad
jae
mov
inc
ja
imul
test
mov
loop
sub
arpl
popa
push
sbb
fmul
fwait
pusha
sbb
scas
in
xor
sub
sub
popa
sub
mov
ds
or
mov
ja
jnp
inc
imul
ljmp
or
and
cmp
fs
hlt
sub
pop
cmpsl
mov
mov
leave
lcall
push
cwtl
mov
clc
ss
mov
dec
cmc
xchg
sbb
xlat
ret
sbb
lods
stos
stc
xchg
insb
push
aas
ds
inc
adc
inc
rclb
xchg
movsb
les
cmc
jecxz
and
and
mov
and
rcll
add
push
dec
das
pop
lcall
xor
stc
out
enter
sub
fsubrl
les
sub
jecxz
movsl
ja
sub
out
xor
mov
mov
adc
mov
cmp
sbb
stos
pop
adc
mov
shlb
fwait
push
dec
push
data16
xor
rorl
push
dec
xchg
loope
jecxz
lods
pop
sbb
lods
repz
les
xchg
sarl
cmp
popl
shll
add
cmp
rcll
cwtl
inc
mov
xchg
xor
push
xchg
ret
cmp
mov
cmp
dec
mov
add
lock
cltd
pop
es
add
push
sbb
pop
jae
mov
mov
inc
pop
push
rep
lahf
adc
mov
ljmp
call
addr16
movsb
icebp
bound
scas
jle
mov
push
scas
jle
shlb
and
xchg
movsl
xor
sub
pusha
push
adc
xchg
push
push
ljmp
lds
jno
lock
rclb
andb
fcmovbe
aam
and
adc
clc
clc
add
out
movsb
sbb
imul
and
outsb
jns
leave
xchg
inc
hlt
lcall
push
mov
popa
ds
jg
dec
imul
loop
sub
mov
mov
stos
pop
mov
lret
inc
jne
sbbl
imul
and
dec
stos
and
cmc
je
adc
cmp
xor
movb
pop
fisttpll
sbb
mov
sub
fcoml
enter
clc
xor
mov
and
mov
stos
aas
push
not
aad
push
test
loop
push
or
mov
inc
xlat
imull
gs
outsl
stos
lcall
inc
inc
and
test
push
pushf
pushf
daa
push
aaa
fistpl
push
mov
add
push
shrl
orl
loope
pop
jnp
out
lret
iret
fiaddl
xchg
int
out
and
mov
clc
das
and
cli
scas
cmp
and
xchg
or
imul
inc
cli
dec
jbe
xchg
repz
rcrb
stc
outsb
xor
std
lock
dec
addr16
inc
pusha
push
adc
jne
fwait
insl
ljmp
mov
daa
and
mov
int3
sub
cmp
lahf
jg
lods
push
out
adc
jo
test
add
and
pop
popf
sub
xor
aad
sti
mov
lcall
in
imul
inc
mov
jns
adc
jmp
shlb
outsl
pop
and
mov
mov
cmpsl
xchg
mov
cltd
add
xor
add
in
jno
xor
sub
mov
lds
scas
clc
lcall
fnstsw
jae
cmp
push
pop
pop
shr
ds
out
icebp
sub
jmp
aas
jmp
push
add
or
adc
in
cmc
mov
mov
xchg
std
jno
xor
pop
pop
rcr
and
jl
jl
les
adc
addr16
aas
jl
pop
les
add
mov
test
clc
stc
or
stos
add
out
jp
in
push
cmp
push
cmp
cmp
imul
jne
pop
or
int
js
aam
jg
adc
test
inc
and
fs
sbb
mov
pushf
pop
push
jmp
xchg
push
js
xchg
sub
mov
aas
out
lret
push
adc
ret
rcrb
lahf
repz
push
sbb
call
push
add
inc
mov
push
out
sub
pop
jecxz
adc
dec
mov
inc
outsb
lds
fisubrs
xlat
loopne
ret
lret
enter
jns
gs
cltd
andl
sbb
imul
mov
xchg
outsl
dec
xor
pop
stc
stos
xchg
mov
lods
stos
push
inc
les
xor
jb
and
movsl
push
pop
jne
mov
sbb
or
jne
sbb
fistpll
movsl
sbb
outsl
mov
pop
rcl
lods
icebp
sbb
pop
pop
decl
in
push
call
jnp
add
ja
mov
mov
popa
sbb
fiaddl
jbe
dec
sub
mov
pusha
push
adc
test
sbbb
jo
sub
je
call
jge
pop
lret
fisubl
cmp
mov
adc
aad
aaa
test
and
cmp
xchg
or
or
std
xchg
test
adc
popl
sub
sub
lret
loop
sbb
dec
dec
pop
int3
cs
out
add
mov
lahf
pop
leave
pop
and
adc
adc
fbld
stos
add
jns
pop
jo
std
or
hlt
ror
in
mov
mov
nop
not
insl
rcrl
cli
and
cmpsl
jp
cli
jns
cmp
inc
das
es
das
adc
or
int
sbb
aaa
sarl
sub
in
sub
mov
jbe
jbe
int
sbb
xor
jo
mov
jp
std
imul
or
add
rorl
and
mov
sbb
arpl
insb
adc
sbb
push
out
xor
mov
ror
data16
mov
push
sub
ficoml
push
dec
clc
insb
mov
lret
ljmp
sarb
fsubrs
jecxz
out
dec
pop
testl
inc
and
jmp
iret
xchg
xlat
imulb
pusha
sbb
repnz
rcll
outsl
fldt
inc
hlt
fsubs
mov
xor
movsb
xor
fbld
test
add
idiv
mov
pop
cmp
mov
stos
jnp
sbb
pmovmskb
inc
in
pop
push
adc
pop
cmp
xor
mov
mov
sub
xor
gs
and
push
mov
dec
jge
mov
rolb
push
bound
sub
repnz
in
jbe
xor
jp
sub
mov
push
sahf
mov
orb
lea
dec
or
sub
test
sub
ljmp
shlb
jge
outsl
andl
mov
inc
xor
test
rcr
mov
or
mov
jo,pt
sbb
inc
add
test
or
mov
rcrb
fdivs
mov
jl
int3
jg
mov
push
xlat
and
inc
cwtl
orb
test
mov
pop
in
xchg
inc
mov
pop
addr16
jl
stc
popl
pusha
and
rcl
jne
pop
fsubs
cwtl
adc
mov
jg
in
mov
scas
fisubrs
push
push
pop
sub
loopne
xchg
push
icebp
fdivs
bound
and
enter
sahf
add
xchg
fdivrl
push
pop
push
fidivs
jb
dec
nop
mov
fcmovb
lahf
dec
ja
inc
xor
mov
mov
push
sbb
dec
push
jle
cwtl
test
xchg
xor
jo
cmp
xchg
dec
cmp
mov
fiaddl
jg
fwait
pop
sbb
ljmp
ds
imulb
jecxz
push
add
jns
xchg
adc
outsl
test
mov
fs
xor
cmp
scas
add
es
pop
das
xor
dec
inc
pop
adc
push
jne
mov
jne
and
xor
fimull
addl
cld
popa
lcall
es
and
inc
dec
push
xchg
cli
out
fdivp
pop
mov
ljmp
mov
mov
fcompl
lods
mov
leave
push
inc
adc
out
insl
movsl
mov
sbb
call
fwait
into
imul
jle
push
lods
test
add
mov
icebp
cltd
adc
pop
push
ffree
decb
faddl
xlat
push
pop
mov
jnp
adcb
push
mov
add
or
ds
pusha
cs
int
cli
ret
pop
cmp
lret
jne
jb
setl
mov
frstor
jae
pusha
addb
xchg
push
dec
pop
inc
insb
mov
pop
sti
jns
je
xchg
jg
mov
xor
add
mov
shrb
jp
sbb
jge
xor
ss
mov
dec
mov
xlat
out
mov
imul
out
add
sub
fld
stos
jbe
sbb
pop
fwait
lahf
and
dec
nop
and
ret
testb
in
add
dec
mov
ja
adc
fwait
loopne
push
cld
mov
and
or
sub
jae
mov
and
mov
mov
test
dec
cmp
jge
ds
stc
push
jns
sti
adcl
lcall
xor
fsubs
sbb
jne
push
stc
or
xor
adc
sarb
orb
adc
adc
lcall
add
out
cltd
loopne
inc
xor
pop
shrl
roll
sub
push
stos
js
pop
jl
jns
sarl
adc
cmp
fneni(8087
sbb
mov
ficompl
xlat
das
movsl
pop
push
or
leave
push
pushf
cmp
add
xchg
jno
popa
lcallw
cmp
mov
cmc
jne
lods
push
cmp
jne
inc
stos
jbe
or
daa
pop
stos
iret
mov
int3
aaa
addl
cmpsb
shll
mov
nop
mov
pop
sahf
inc
adc
lahf
sub
lret
aam
dec
movl
es
mov
or
movsb
or
pop
or
test
mov
or
int
addr16
ljmp
pop
xchg
popf
jns
pop
mull
xor
sbb
repnz
and
mov
arpl
shl
scas
data16
insl
lods
pop
mov
push
sub
xor
icebp
int3
jp
cmp
sbb
pop
inc
and
ret
xlat
cli
dec
pop
add
loop
jle
cmp
and
ret
subl
jle
mov
and
mov
icebp
out
decl
xorl
pop
rep
or
sarb
inc
and
mov
inc
xchg
mov
pop
lea
or
sub
mov
lock
in
mov
call
andb
mov
dec
add
js
pop
lock
xor
cmpsl
mov
inc
mov
nop
lods
dec
and
popf
ret
inc
ljmp
dec
inc
xlat
sar
sub
jno
sbb
pop
sahf
jne
pop
cs
xor
sbb
or
jns
hlt
pop
mov
and
push
in
orb
jl
inc
fstl
mov
sub
rcr
push
loop
js
andb
insl
or
loop
pushf
cmp
sub
inc
fbstp
cmpsb
ss
add
pushf
xchg
pop
jmp
adc
jb
pop
das
jle
ret
rcr
es
das
xor
cltd
popa
shrb
lock
push
mov
push
mov
cld
dec
std
sbb
pop
data16
adcl
faddl
mov
or
or
pop
push
repz
sbb
ret
daa
sub
xchg
in
mov
jge
fdivs
insl
or
orl
push
loope
jns
lods
or
pop
cmp
xchg
push
jne
enter
add
iret
mov
icebp
and
xor
xchg
pop
xor
mov
inc
jl
js
rorb
or
sbb
repnz
das
adc
into
push
jns
ror
push
std
icebp
daa
scas
imul
mov
outsb
test
pushf
gs
or
mov
vmovupd
cmpb
sbbl
and
cmp
bound
cmp
fcomp
add
test
mov
jp
adc
or
cmp
out
dec
mov
ds
ss
push
je
adc
mov
xchg
jle
adc
or
lret
sarl
ss
add
or
and
and
pop
or
ret
sub
mov
iret
aaa
and
std
push
xchg
xor
int3
aad
dec
or
js
enter
push
cmp
mov
xor
jecxz
lcall
lock
repnz
out
mov
data16
popf
xor
dec
ret
pop
mov
into
mov
pop
push
loop
mov
cmp
shl
or
jbe
dec
push
lret
nop
sahf
cmc
roll
jp
int
shr
pop
push
push
int
xor
push
jmp
push
jo
dec
roll
hlt
hlt
lds
mov
popf
lret
dec
push
mov
add
sub
jns
sub
jnp
fs
dec
or
imul
jmp
xor
lods
mull
in
in
std
ljmp
ficompl
aam
sub
es
dec
jg
sub
scas
push
xor
adc
cmp
lods
or
int3
sub
bound
les
adc
jge
add
fs
sub
cmp
inc
mov
xor
sbb
sub
sub
xchg
push
jb
idivb
dec
mov
pusha
stc
mov
jmp
jbe
push
sub
jo
inc
test
mov
pop
add
les
inc
xor
lahf
mov
xchg
stc
insl
mov
mov
enter
xor
jae
dec
or
ret
or
sub
fisttpl
or
and
mov
rcr
mov
push
push
add
test
insl
mov
cmc
pushf
xchg
les
lcall
hlt
out
mov
lods
mov
xchg
sub
mov
in
int
rolb
xchg
dec
pop
sbb
test
aad
xor
pushf
adc
movsb
push
ja
and
xchg
adc
rcl
xor
adc
xor
inc
aam
or
out
mull
sahf
dec
jp
inc
in
push
mov
fsub
mov
ret
subb
adc
rclb
in
test
pop
aas
xchg
xchg
iret
fwait
adc
push
dec
jle
cmp
insl
jge
loope
shlb
lods
ret
dec
xchg
or
push
sub
mov
xchg
or
ja
push
je
adc
or
jno
js
push
add
sbb
inc
dec
cmp
ret
pop
js
into
cmpl
inc
xchg
arpl
fadd
sub
jg
into
cmp
mov
repnz
mov
pop
int3
stc
pop
jno
jle
fcmove
jecxz
xchg
sahf
mov
out
sbb
dec
fsubrl
test
lret
mov
mov
cmc
mov
hlt
setp
pop
jns
push
xor
lret
call
into
adc
fs
ret
jnp
leave
push
push
stos
hlt
adc
mov
xor
icebp
dec
jae
and
adc
sbbb
cmp
mov
movsb
popa
mov
xor
dec
enter
mov
cli
daa
or
sub
cltd
sub
leave
fs
gs
xchg
out
ljmp
movsb
insl
push
cmp
pop
xchg
sbb
fisubs
inc
xchg
push
ljmp
js
add
pop
rclb
pop
mov
mov
call
imul
cmc
mov
mov
out
stos
pop
push
cmc
daa
int3
add
hlt
shrl
stos
pop
mov
test
inc
gs
cmp
repnz
dec
adc
fxam
rorl
fildll
fstl
stc
jb
cmp
ja
lcall
add
arpl
pop
jg
lcall
aaa
xor
es
xlat
enter
jnp
sub
or
mov
sub
fists
cmp
xchg
mov
dec
pop
mov
insl
xor
cmp
insl
cmpsb
fldz
push
adc
insb
aas
stos
out
dec
aam
insb
insl
int
mov
and
lcall
movsb
ja
and
xor
int3
inc
test
push
mov
mov
pop
pop
inc
inc
mov
or
fwait
sub
dec
or
jl
xchg
push
pop
add
scas
jecxz
mov
inc
push
mov
add
pop
addr16
popa
cmpsb
inc
push
sbb
add
imul
int
filds
cmpsl
fmull
mov
aaa
sbb
int3
push
pop
pop
pop
mov
cltd
ja
out
mov
dec
enter
mov
lds
xor
jge
enter
xor
cmp
mov
xorl
sbb
stc
push
jl
adc
push
inc
fwait
aam
xlat
les
mov
outsl
js
out
xchg
jb
cltd
jecxz
pusha
pop
cmp
xchg
lcall
nop
arpl
pop
dec
aad
in
dec
addr16
hlt
xchg
lods
negb
adc
or
sar
dec
lods
int3
mov
fwait
xor
jb
xor
mov
loopne
movntq
shrl
cmp
fcmove
xchg
loop
movsl
test
pushf
movsb
fpatan
imull
stc
pop
mov
pop
cmp
sbb
dec
pop
repz
dec
imul
fmull
dec
add
fmul
push
push
sub
jg
sub
ss
pushf
daa
negb
mov
dec
fldt
jae
lock
ss
cwtl
es
xchg
in
push
imul
ds
sub
dec
push
and
test
xor
outsl
js
adc
jae
lea
clc
pop
push
mov
mov
loope
jl
and
or
sub
stos
cwtl
mov
shlb
push
adc
adc
add
mov
loop
lret
pop
push
mov
mov
inc
lahf
pop
js
xor
inc
push
mov
pop
dec
mov
inc
popa
jns
inc
mov
mov
xor
jmp
fnstcw
iret
insb
cmp
pop
push
jae
sub
flds
jnp
insb
sub
add
nop
sub
dec
jns
loope
test
adc
xchg
std
and
xor
in
aaa
jo
fiadds
fisubl
aas
mov
xor
adc
daa
pop
aaa
adc
decl
and
jle
shll
pop
ss
add
ret
ss
push
add
or
es
movsl
adcl
shll
inc
outsl
out
jae
and
mov
add
aad
dec
scas
fildll
mov
mov
cmpsb
subl
and
ret
fdiv
cmpsl
stc
pop
and
push
insb
or
inc
cmpl
push
loope
jge
test
lods
testl
ja
and
outsl
hlt
dec
and
adcb
hlt
adcl
imul
mov
pop
sub
push
push
stos
sbb
sbb
inc
rcrb
les
sub
jle
cmp
cmpsl
adc
mov
aam
jae
jmp
shll
push
cmc
jp
inc
lock
hlt
and
bound
fwait
lods
shlb
mov
lds
cli
mov
popf
sbb
lock
mov
arpl
shlb
dec
cmp
std
repz
or
xchg
xchg
es
outsl
sti
fwait
popa
loop
sub
xchg
loope
flds
jle
push
sbb
cmp
shrl
dec
repnz
dec
adc
les
xlat
cmpsb
cwtl
fst
shlb
cmpsb
jnp
xchg
pop
adc
or
adc
or
sbbl
scas
sbb
mov
lds
call
out
jg
and
mov
fucomp
out
and
int
push
sub
mov
cs
addr16
test
orl
cmp
dec
sbb
movsl
js
adcb
aas
aad
popa
popa
jg
je
or
push
inc
addl
ss
das
aad
les
adc
mov
mov
lds
jmp
push
mov
inc
push
xchg
mov
cmp
mov
inc
cmp
sub
dec
push
and
dec
push
pop
mov
cli
pop
mov
cmp
shrb
cmpsb
sub
por
ds
push
outsl
stc
sbb
in
sub
lock
sbb
xchg
das
rorb
mov
fdivrs
mov
iret
and
mov
adc
in
and
jecxz
std
dec
jecxz
and
xchg
jbe
sti
imul
mov
daa
mov
pop
xor
jge
dec
sahf
push
and
and
sbb
ss
add
sbb
mov
fwait
mov
dec
aaa
dec
movsb
dec
out
inc
in
jmp
xor
icebp
ret
or
sbb
jecxz
rcll
enter
push
sub
mov
scas
lcall
push
dec
mov
mov
jnp,pn
cmp
add
int3
xlat
mov
test
xor
testb
sub
testb
mov
mov
lock
cltd
notl
cld
sbb
mov
lahf
jmp
xor
mov
fidivl
iret
in
gs
outsl
aam
jnp
xor
in
icebp
xorb
jae
movsl
mov
lods
aaa
add
je
push
ret
mull
adc
adc
lods
mull
jmp
cmc
rolb
repnz
icebp
mov
inc
mov
push
dec
mov
test
lds
mov
inc
jnp
dec
loop
clc
pop
xchg
arpl
xor
test
push
inc
arpl
jb
jle
stc
inc
inc
cltd
lds
cwtl
mov
insl
xchg
mov
lret
jns
sarb
pushf
adc
or
in
inc
sub
sbb
arpl
je
aam
mov
inc
or
dec
xchg
test
cmpsb
xchg
iret
jge
iret
jg
idivb
cmp
xor
lea
fcmovnu
pusha
dec
add
mov
scas
cmpsl
lds
sar
stc
loop
push
popa
jbe
into
jl
cmp
jl
aas
jg
cld
push
mov
or
aad
sub
fsubl
jmp
jmp
daa
mov
sahf
mov
arpl
dec
dec
rcr
pushf
cmpsl
lahf
add
ret
aas
mov
icebp
cmp
push
stos
sbb
les
fcomi
mov
sbb
mov
mov
cli
mov
ret
clc
ljmp
scas
jle
andb
cltd
mov
fidivs
sub
loop
push
sbb
jne
inc
mov
xor
lea
xor
and
rcl
xchg
hlt
test
into
inc
popa
cltd
inc
push
xchg
popa
add
sub
gs
cmp
ds
jae
push
or
adc
shlb
inc
mov
add
movsl
imul
sub
or
fcompl
xchg
xchg
pop
hlt
and
push
movsb
dec
ja
sbb
or
repnz
out
stc
loopne
adc
jl
push
jge
xchg
mov
test
inc
jb
dec
inc
inc
mov
mov
mov
mov
dec
xchg
leave
push
loopne
iret
psubusb
leave
call
adcl
clc
lds
test
das
ret
add
xchg
cmpsb
popa
and
gs
or
inc
ss
cmp
jmp
sbbb
ja
pop
sbb
mov
xor
and
cli
add
rorl
out
popa
gs
movsl
xor
cs
lods
sub
scas
xor
ss
mov
adc
jo
mov
push
out
outsl
pop
lret
fldenv
mov
sbb
fnsave
les
xor
xchg
imul
aam
add
rolb
out
popa
lahf
stc
add
cmp
add
cmp
negb
ds
mov
dec
xchg
mov
push
mov
jns
pushf
aad
lcall
daa
and
es
inc
xchg
jb
stos
addr16
inc
push
jno
sbb
fistpll
mov
xor
arpl
mov
out
call
flds
add
in
add
push
push
fs
je
movsl
jge
push
movb
aam
pop
inc
cmpsb
add
sub
lds
inc
inc
aad
cs
inc
jno
cli
mov
and
sub
mov
rcrl
mov
leave
jnp
aas
das
jge
mov
in
popf
in
add
das
cmp
add
add
je
in
stos
ss
mov
dec
jge
adc
inc
pusha
cmp
xor
inc
repnz
mov
and
jo
add
ret
jbe
mov
jne
call
xchg
out
ror
jge
shrl
push
lahf
fidivs
pop
sub
cmpl
insl
mov
fidivrl
sub
es
jbe
sar
rclb
xor
pusha
loop
pop
daa
mov
adc
lcall
push
ret
cs
lret
and
cli
or
or
aas
ret
mov
shlb
mov
dec
cmp
pushf
fcmovu
adcb
sbb
add
xchg
lcall
xchg
push
push
xchg
mov
out
mov
inc
loope
pop
enter
xlat
jno
cmpsl
leave
mov
jbe
inc
icebp
int
jo
in
fwait
sbb
cltd
cmp
cltd
xchg
scas
sbb
push
mov
jecxz
ds
adcl
push
lock
pop
out
aam
sub
enter
sar
mov
inc
mov
out
xor
cld
add
mov
repnz
add
scas
sahf
std
sti
mov
xor
and
mov
cmp
jle
scas
inc
scas
inc
sbb
pop
jge
pop
insb
lahf
dec
adc
pop
addr16
stos
movl
shlb
das
hlt
xchg
ss
pushf
jmp
loope
je
out
ds
mov
mov
dec
scas
mov
mov
inc
into
dec
and
pusha
mov
add
mov
jp
inc
imul
pushf
into
fucom
push
aad
popf
lahf
dec
jmp
push
jae
imul
mov
mov
fcompl
js
pop
xchg
rcr
sbb
hlt
mov
repnz
out
ljmp
push
outsl
or
imul
sbb
fwait
cmp
mov
pop
rcll
test
icebp
test
xchg
popa
cmp
add
testb
out
pop
mov
or
imul
xor
push
icebp
test
jle
shll
mov
pop
ja
sbb
sbb
adc
inc
daa
fnstcw
sub
pop
sti
or
jbe
dec
xchg
dec
sbb
jb
mov
inc
push
fimull
sbb
xor
cmp
mov
push
sbb
pop
xchg
mov
inc
aaa
pop
fmul
jge
mov
jle
pop
rcll
mov
push
add
sahf
xor
mov
addl
push
outsb
xor
fdiv
add
cltd
inc
add
test
xorb
popa
and
jl
dec
shlb
mov
mov
mov
in
xchg
cmpsb
xacquire
jns
mov
orb
cwtl
call
rol
add
mov
cmp
icebp
nop
inc
iret
xchg
out
xor
aaa
lret
or
mov
jnp
test
daa
and
outsb
and
xor
or
pop
xor
stc
push
shl
jb
push
stc
loope
jl
sbb
add
scas
push
cmpsl
fdivrl
fildll
jecxz
mov
xorb
rcrl
cs
ds
adc
cmp
cmp
std
mov
or
loopne
pop
add
iret
push
lcall
push
pop
cli
jmp
loopne
out
dec
sub
sbb
shl
insb
ja
je
add
js
fisttpll
or
rorb
pusha
push
lock
xor
fisubl
addr16
mov
mov
insl
lret
sahf
add
and
mov
xor
jb
xchg
daa
inc
stos
adc
sub
ljmp
pop
pop
xchg
in
jns
es
fbld
jl
xchg
insl
pop
push
out
stc
lods
iret
push
dec
in
push
push
push
xchg
test
push
mov
outsl
adc
mov
mov
or
add
in
mov
inc
rcr
push
and
mov
push
pop
repz
inc
inc
adc
dec
cltd
push
jae
adcb
sarl
cltd
clc
rcrb
xbegin
add
cmp
xlat
gs
mov
mov
dec
jnp
cmp
add
cs
jb
pushf
jb
lods
mulb
inc
negl
mov
jno
xor
sbb
xor
icebp
popa
repnz
out
mov
cmpsl
xor
push
sahf
cmpsl
adc
xchg
adc
jmp
ss
lahf
mov
xchg
cmpsl
cmc
rol
loop
imul
inc
jecxz
out
push
cltd
xchg
leave
int3
mov
sbb
bound
cmpsb
sar
pop
and
test
negl
mov
popf
or
cmp
xchg
or
mov
inc
jno
sub
jp
lods
xchg
mov
stc
inc
adc
push
mov
mov
mov
dec
mov
and
pop
movsl
outsb
into
mov
push
mov
or
ret
jg
scas
insb
fcoms
jmp
call
or
jbe
or
mov
push
mov
call
sub
fdivl
jl
mov
cltd
cmp
aam
or
and
push
dec
jp
dec
pop
push
push
sub
sti
ss
roll
cmpsb
mov
shll
push
xchg
out
push
gs
cwtl
or
jno
repz
sub
or
ljmp
mov
mov
add
hlt
xor
ja
xor
adc
push
and
les
icebp
pop
hlt
mov
aad
fptan
mov
popf
incb
push
das
or
jae
fs
je
sti
call
mov
mov
lea
inc
sbb
mov
jecxz
push
stc
daa
push
inc
lods
inc
test
pop
and
xchg
mov
rorb
push
int
in
adc
xor
icebp
jnp
fs
out
cli
xchg
mov
mov
sbb
jle
mov
and
test
pop
fs
mov
fwait
xchg
jbe
add
loopne
and
andb
test
add
aam
cld
or
push
mov
mov
test
mov
inc
cmpsb
jbe
jmp
dec
gs
mov
inc
clc
jnp
lcall
jge
mov
jle
scas
shll
sarl
push
xor
sbb
and
hlt
dec
test
sub
inc
or
cmpsb
test
lret
ss
lret
jmp
inc
and
clc
push
int3
push
popf
aam
cmp
inc
and
stos
fcmovne
jnp
inc
fmull
movsl
cwtl
shll
xor
xchg
andb
cld
or
decl
inc
jb
xchg
inc
mov
outsl
sbb
xor
adc
xor
pop
lods
push
mov
or
call
loopne
push
adc
or
fisttpl
aas
cmp
lret
shrb
int3
or
mov
jle
add
adc
loop
fmull
dec
fldcw
ljmp
push
push
ret
cmp
mov
jno
mov
in
cwtl
fnstcw
pusha
add
out
adc
or
xchg
es
dec
ljmp
fnstenv
mov
rol
outsb
inc
mov
push
into
sbb
fisttpll
xchg
mov
push
push
sbb
add
pushf
inc
push
and
or
dec
shr
inc
cltd
adc
mov
mov
cmc
pusha
and
mov
leave
adc
or
cmp
sub
repnz
cld
jbe
ficoms
inc
add
out
jae
lods
jl
and
andb
sti
frstpm(287
mov
pop
mov
stc
shl
and
in
lea
scas
es
xor
std
mov
add
lahf
data16
stos
pop
pop
mov
lods
mov
lods
jno
std
loope
push
pushw
fildl
insl
xchg
rclb
mov
sub
lret
call
adc
leave
es
mov
ss
adc
imul
lret
pop
pop
loop
mov
jecxz
adc
jle
xor
leave
xor
and
clc
push
jmp
repz
outsb
rolb
mov
lret
cltd
xor
loop
movsb
mov
stos
inc
aas
sbb
mov
jnp
jo
cmc
sub
lds
jge
jle
pop
sub
jb
pop
cmp
xor
ret
sub
decb
roll
push
xchg
mov
or
fldenv
loope
bound
int
push
movsl
inc
imul
std
popa
into
push
sub
ss
out
pop
fistl
dec
popf
xchg
mov
je
fbstp
sbb
das
cmp
shl
mov
ret
mov
dec
pusha
sub
arpl
out
insl
xor
xor
push
lret
fisubrs
and
imul
clc
mov
xor
hlt
cmpsb
add
add
scas
daa
xchg
bound
fbld
push
out
outsl
fmul
and
fwait
mov
stos
pop
stos
cmpsb
cwtl
stc
xchg
add
and
rolb
out
scas
hlt
std
sbb
pop
push
lret
mov
pop
mov
cli
out
test
or
bound
arpl
imul
mov
add
arpl
addr16
cmp
push
sub
fnstenv
loop
loop
insb
insb
iret
sbb
outsb
arpl
fidivl
cmp
loop
cli
jbe
xchg
sbb
int3
cltd
sub
cmp
je
scas
dec
pop
cmp
add
xor
sar
and
fadd
fmuls
jmp
xchg
addr16
loope
xchg
scas
or
scas
cld
sbb
jae
pop
mov
andl
mov
lcall
stc
fnstenv
into
scas
sub
scas
push
jmp
fwait
iret
pop
test
jno
dec
cs
addl
cltd
test
sbb
adc
arpl
imul
pop
out
xor
mov
fidivrs
adc
idivb
inc
ret
bound
sbb
xchg
add
mov
pushl
loope
push
lahf
outsl
mov
lea
mov
mov
cmpsl
push
loope
mov
test
lahf
mov
call
fildl
sub
inc
mov
push
cli
loopne
sbb
sbb
and
popf
adc
jae
xor
sbb
xchg
jmp
fs
mov
imul
out
or
cmpsl
pop
cmc
xchg
push
int3
stos
dec
or
sub
lret
xor
sti
aaa
ds
stc
shl
ja
fstps
sbb
xchg
pop
and
outsl
popa
xor
popf
pushf
loop
adc
add
pop
mov
mov
repz
sbb
adc
mov
pop
inc
push
jae
jne
insb
jecxz
inc
sbb
sub
in
mov
and
ret
pop
jns
ss
jo
fildl
and
popf
pop
gs
loopne
mov
and
push
leave
repnz
sub
ss
push
push
inc
sub
test
jno
and
xchg
push
outsl
mov
cmp
add
dec
fs
fimull
xchg
test
cwtl
push
add
fmuls
dec
mov
xor
aad
sbb
lret
sbb
sbb
clc
idivb
addr16
xchg
pusha
cmp
mov
outsb
das
or
fwait
xor
lret
xor
pushf
imulb
sbb
pusha
mov
jnp
pop
mov
push
push
mov
inc
mov
cmpl
sbb
mov
cmpb
sbbl
ret
outsb
dec
pushf
inc
mov
and
lcall
dec
lret
mov
scas
testl
push
loopne
in
mov
mov
pop
inc
sub
je
add
outsb
jbe
scas
inc
negl
xor
jmp
icebp
xor
mov
pop
and
pop
nop
imulb
movsl
ljmp
inc
pop
xor
aad
jae
mov
cmp
cmp
lcall
sarb
out
and
sbb
lea
insl
aad
xchg
shl
cmp
cmp
es
ret
dec
fcoml
xor
or
jb
xchg
loope
xor
xor
lock
or
scas
fisttpll
into
mov
cmpsl
lret
jge
inc
in
popf
in
cmp
in
fcmovnu
repz
and
rcrl
aas
dec
mov
iret
jo
mov
dec
repz
data16
fdivrp
push
fwait
jg
sti
imul
xchg
lock
mov
jmp
pusha
roll
stos
fdivr
mov
repnz
or
pop
or
mov
ljmp
call
call
xchg
bound
sbb
shlb
sub
popa
icebp
into
addl
adc
mov
and
addl
imul
movsb
popa
jo
push
mov
sti
push
jb
pop
mov
sbb
je
pop
nop
sbb
add
mov
std
add
mov
xchg
add
pop
mov
and
adc
add
dec
jmp
push
js
imul
es
jnp
cmpsb
xor
int3
leave
sbb
cmp
mov
subb
push
repz
es
leave
cltd
push
es
add
adc
cmovge
add
mov
cmp
sahf
out
lock
cmpsb
ds
ds
cmp
int3
add
sbb
incb
daa
lahf
es
lods
loope
and
fisubrl
mov
pop
shlb
mov
cld
shll
mov
imull
add
mov
shlb
cltd
pusha
cmpsl
lret
and
mov
rcl
push
je
dec
cmc
aaa
sti
cwtl
fs
dec
add
push
ss
dec
fisttpll
pop
shrl
shll
aas
sub
adc
sub
sbb
lcall
lahf
mov
cmp
fnstcw
jnp
sub
cmpsb
mov
clc
lahf
cmp
or
cs
mov
jae
jne
fsts
xor
sbb
sti
xchg
mov
or
lahf
pop
testl
enter
xchg
add
cmp
dec
sbb
clc
ljmp
push
push
pusha
movsb
mov
pop
dec
xor
subl
pop
jecxz
pop
pusha
mov
and
pushf
pop
mov
repz
xchg
mov
pop
cmp
add
mov
divl
jmp
or
fcomps
scas
pop
mov
int3
jg
cmp
or
and
arpl
sbb
dec
out
push
enter
add
out
repnz
inc
mov
jge
jae
imul
addr16
fiadds
adc
insl
scas
ror
push
push
pop
ret
jmp
std
pop
inc
inc
mov
into
adc
add
cwtl
ja
aas
pusha
jle
dec
fisubl
test
fidivrl
ret
inc
clc
sub
das
jg
cmpb
inc
sub
cmp
xchg
lret
lods
push
xor
loop
js
iret
test
dec
xor
imul
insb
push
cltd
cmp
jmp
insb
cmp
cmp
push
fisubrs
sahf
cs
mov
ljmp
jge
arpl
idivl
adc
fstp
or
out
idivb
jl
or
cmp
popf
add
lock
push
mov
sbb
arpl
or
ret
inc
sti
inc
add
dec
ss
pop
popf
mov
pop
push
sub
lods
push
jno
jl
push
outsl
vpaddd
repnz
cltd
xchg
pop
and
lds
das
gs
pop
lods
inc
sub
mov
std
mov
movnti
addr16
lea
mov
iret
int
imul
ret
test
dec
test
jp
andl
xor
jne
sbb
or
xor
arpl
inc
jb
mov
cmp
cmp
fcompl
lock
fildll
xchg
mov
xchg
mov
and
cltd
lmsw
mov
push
jg
and
cmp
aaa
push
dec
out
leave
push
add
add
pop
inc
push
xchg
iret
mov
roll
outsl
icebp
dec
sbb
or
nop
xchg
fwait
std
push
add
and
push
pop
int
ja
pop
cld
int3
es
scas
jmp
daa
mov
pop
sbb
xchg
mov
call
shl
lret
stos
inc
dec
xor
adc
movsl
mov
add
dec
out
inc
cld
lcall
and
jno
je
jmp
add
and
lock
into
arpl
ret
loope
xor
in
or
fisubrs
fsubp
push
jle
pop
gs
inc
jae
decl
movsb
stos
pushf
or
cmp
mov
jae
and
push
cmpl
mov
jg
mov
pushf
push
movsl
push
js
cmp
addr16
fadds
jne
or
jne
loopne
ds
enter
push
xor
icebp
sub
imul
out
xchg
mov
sbb
push
xor
ljmp
xor
out
jae
and
pop
ds
mov
mov
jp
push
sub
lock
cmp
cmp
leave
scas
pop
jo
pop
xchg
popf
add
pop
pop
add
std
push
cmp
push
mov
rcr
in
sti
push
xchg
into
dec
out
push
movsl
push
jl
fcomps
jo
enter
add
xchg
mov
addl
sbb
addr16
jne
push
adc
cmp
xchg
dec
nop
lods
stos
in
jmp
mov
cld
xchg
jo
cltd
xchg
cmp
stc
lcall
add
int3
loopne,pn
fwait
mov
add
insb
stos
mov
xlat
or
jp
xchg
jb
cmpsb
std
and
stos
jmp
gs
cmp
cmp
aam
xor
out
fcmovbe
push
xor
loope
sbb
xor
push
add
mov
adc
adc
xor
bound
les
stos
pop
add
es
jno
sub
cltd
sbb
push
cltd
cmpsl
jnp
mov
ret
inc
lcall
daa
orl
mov
jno
jo
sub
jns
fisubl
mov
mov
test
in
xor
xor
push
xchg
insb
movsl
je
cmp
ret
mov
movsb
dec
and
jbe
test
aam
jbe
pushf
jo
pushf
dec
adc
cs
les
jle
jg
les
xchg
mov
movsl
int3
and
cmc
pop
outsb
arpl
xchg
in
mov
outsl
mov
dec
inc
sbbl
lcall
jp
clc
adc
or
mov
fidivl
stos
adc
aaa
mov
pusha
dec
sahf
cmp
jmp
jmp
lock
jle
mov
add
pop
lds
pop
dec
clc
push
fisubs
fwait
scas
hlt
insb
fdivrs
mov
mov
add
fdivrs
test
sbb
fbld
repz
jns
cs
pop
iret
jb
clc
pop
adc
or
push
mov
xchg
mov
mov
scas
dec
mov
jb
add
xchg
inc
add
xor
dec
imul
das
mov
push
push
inc
shrb
sub
push
and
jge
add
insb
lahf
cmc
jnp
int
add
fstps
enter
add
xor
flds
insl
insl
push
loopne
jl
cmpsl
add
mov
or
ret
movsl
mov
aaa
fadd
lds
rclb
das
addb
dec
in
stos
pop
mov
push
mov
pop
stc
test
cmpsb
popa
dec
mov
or
xchg
hlt
fldcw
ret
mov
push
jecxz
out
xorb
cmpsl
aam
in
popa
cmp
jge
ret
or
bound
pop
aas
fisubrs
mov
xchg
dec
pop
lret
ljmp
test
sbb
out
cmp
call
xchg
adc
stos
inc
pop
and
inc
mov
gs
addr16
cmp
jbe
dec
jb
mov
xchg
push
jns
mov
xorb
cli
or
dec
push
jo
jno
and
pop
fistl
jmp
push
notl
cs
ja
fs
and
adc
sbb
sub
jle
add
aad
clc
jo
icebp
push
dec
jo,pn
int3
mov
cmpsb
push
ret
add
loopne
je
inc
inc
pop
ljmp
je
add
sbb
dec
imul
fisttps
fwait
imul
mov
mov
sar
int3
repz
mov
aaa
fldenv
jne
pusha
xchg
or
or
in
sar
dec
add
test
sahf
push
incb
inc
mov
ret
dec
fscale
xchg
xchg
dec
jnp
mov
sub
stc
pop
stos
lret
pop
cmp
inc
mov
mov
std
or
movsl
jno
sti
dec
push
push
movsl
mov
test
mov
pusha
push
in
cmp
push
loop
xor
loop
xchg
jle
in
cwtl
daa
add
push
cli
push
sub
in
int3
out
imul
jb
out
add
adc
mov
pop
gs
jns
or
xchg
sub
mov
stos
movsb
or
repnz
out
int
call
sub
or
pusha
mov
je
sbb
fimuls
in
or
dec
les
sub
pop
mov
ds
fldl
lds
ss
mov
push
jp
pop
sub
andl
test
push
cmpsl
and
call
push
nop
in
xor
push
push
adc
cmp
add
push
fstl
notl
adc
dec
xchg
test
in
mov
adc
mov
or
jae
push
ja
sub
jmp
rcll
aas
dec
inc
imul
and
loopne
or
dec
mov
adc
mov
jne
sahf
scas
punpckhbw
out
repnz
push
cmc
jl
loope
adcl
mov
out
mov
push
adc
std
incl
cs
or
std
hlt
aad
add
mov
test
shlb
rol
xor
nop
repz
push
ret
pop
and
cmp
lods
xchg
dec
xchg
lcall
rcr
aas
add
xchg
adc
sbb
xchg
pusha
jecxz
jg
sbb
pushf
cmp
adc
fs
cmp
and
mov
mov
lock
jb
dec
mov
cli
xor
push
lock
imul
les
cltd
cmp
mov
cwtl
into
pop
pop
or
mov
jecxz
in
les
sahf
repnz
push
xchg
push
dec
xchg
cmp
les
or
inc
or
or
scas
pop
gs
ret
pop
pop
sbb
rsqrtps
dec
inc
jo
test
lds
lods
movsl
cld
pop
lds
movsb
or
xchg
test
add
pop
mov
movsl
scas
in
out
pop
sahf
lea
in
jns
mov
cmpsl
cmp
ljmp
jns
pusha
cld
leave
inc
cmp
cmpsb
inc
gs
xchg
test
fisubs
xor
stc
inc
xchg
cwtl
cwtl
mov
ja,pn
int3
push
in
add
mov
aad
pop
fwait
shr
jecxz
dec
into
xor
pop
cmp
adc
int3
sub
push
sub
fbld
out
pop
xchg
aaa
mov
pop
cmp
and
xchg
xor
mov
jmp
sti
insb
jne
sbb
jne
iret
loopne
add
jg
stc
pop
test
push
fadds
mov
in
mov
inc
hlt
inc
rcr
cs
sub
or
inc
push
mov
xor
push
fldl
in
fiadds
popa
addr16
pop
pop
jb
mov
xchg
xlat
gs
dec
mov
sub
pop
push
nop
ds
jecxz
add
lock
mov
jno
leave
lods
aaa
out
jnp
pop
dec
stos
lea
lds
cwtl
or
jae
lea
ret
iret
mov
cli
test
push
lea
push
xor
xchg
ja
repz
mov
lods
jp
add
imul
aas
ljmp
aam
inc
jb
es
lret
add
sbb
push
xchg
rcrb
add
dec
notb
rclb
test
mov
adc
aad
or
movsl
or
mov
ret
or
cltd
fldcw
jecxz
outsl
std
pop
sub
sbb
lods
jne
sub
cmp
push
inc
and
jge
jg
bound
mov
or
out
rcrl
and
dec
aas
xchg
popa
stos
push
mov
lods
mov
and
dec
inc
rorb
jae
adc
in
mov
add
clc
push
mov
outsl
push
lods
and
outsl
xchg
fimuls
std
imul
lret
xchg
sub
pop
xor
dec
stos
mov
pop
dec
adc
sahf
inc
xchg
popa
push
inc
mov
xlat
cwtl
xchg
insb
dec
push
mov
movsl
pop
in
jmp
xor
mov
add
inc
xchg
jns
xchg
inc
sbb
insb
xor
sub
push
mov
mov
outsl
inc
and
in
je
mov
bound
inc
mov
fsubs
movsl
push
lea
pop
or
cmp
pop
popa
fs
jne
jp
hlt
dec
sub
adc
xlat
pop
mov
mov
mov
cld
insb
stos
xchg
sarl
jno
iret
stos
ja
test
repnz
lret
cmc
push
popa
pop
lret
aad
repnz
cltd
iret
dec
hlt
sarb
stos
cli
sub
jge
out
jecxz
dec
push
mov
jl
ret
push
mov
bswap
inc
cwtl
ja
xor
mov
pop
sbb
push
jbe
push
or
dec
les
push
rorb
lahf
dec
cmpl
xor
shrb
push
add
orl
cmp
stos
mov
pushw
icebp
adc
dec
in
and
out
aad
into
enter
mov
push
lea
cmpsl
dec
sub
gs
popa
fiaddl
lea
xchg
subb
js
xor
xchg
cmpsb
mov
stos
dec
mov
xchg
mov
aad
nop
mov
sub
loope
repz
xor
das
insl
sub
ret
push
or
jecxz
out
sbb
lds
sbb
aas
xchg
push
ds
lahf
mov
xor
xchg
ds
aad
mov
mov
adc
push
dec
jmp
mov
mov
jne
mov
jbe
push
sahf
lock
add
idivb
sbb
jns
mov
ret
pop
mov
dec
add
pop
jmp
or
loop
mov
jnp
dec
mov
scas
and
pop
out
lods
add
jae
dec
in
pop
xchg
and
mov
mov
cli
dec
xchg
movsl
mov
sub
loopne
jne
jne
jbe
push
bound
je
std
lock
aam
dec
icebp
sub
into
mov
jg
test
jno
test
adc
rol
inc
pop
insl
bound
stos
mov
push
inc
insl
jp
pop
cltd
das
les
push
pop
test
in
or
dec
push
mov
adc
je
lods
mov
add
out
jnp
jle
mov
push
cltd
aam
inc
insb
add
jae
add
clc
inc
cld
stc
jecxz
push
jbe
xor
imul
fs
aaa
outsb
out
push
dec
push
idivb
data16
inc
das
int
or
adc
fldenv
icebp
jne
aam
sarl
mov
sub
xchg
inc
rclb
shl
outsb
xor
cmpb
push
push
cmpsb
jl
pop
mov
xchg
sub
cmp
cmpsl
mov
adc
xor
fdivrl
dec
jbe
fs
neg
repz
icebp
leave
jp
pusha
in
push
pop
repz
mov
iret
jecxz
dec
mov
les
mov
dec
call
stos
push
push
imul
lret
xor
scas
and
stos
cmpsl
add
push
je
clc
shll
adc
mov
xlat
out
mov
nop
fcoms
sub
jmp
jnp
int3
movsb
sub
xchg
sbb
scas
out
mov
mov
sub
or
testb
repz
fcoms
rol
pop
nop
sbb
xor
jle
sub
sub
adcb
shrl
jge
mov
andl
icebp
lods
dec
bound
pushf
fists
testl
sarl
cmpsb
xor
mov
mov
les
xchg
pop
jno
jge
jo
cmp
ss
push
pop
and
jp
cmc
add
lds
dec
xor
sbb
jbe
sbb
or
and
or
sbb
data16
sbb
or
cmp
pop
std
idiv
add
push
push
sbbl
dec
out
push
xchg
dec
xor
pop
mov
js
jp
dec
ja
inc
negl
or
push
and
xchg
cmp
add
pop
dec
dec
cmc
cli
loope
push
cmp
jno
mov
in
and
dec
dec
fwait
roll
cmp
orb
movl
fmull
mov
mov
or
xor
lcall
mov
adc
or
inc
cld
lock
xor
xchg
pusha
and
inc
sbb
clc
insl
in
mul
mov
jno
stos
outsb
lods
and
jecxz
rcrl
pop
faddl
sbb
mov
sbb
inc
nop
je
cmpsb
loopne
mov
xor
in
or
lods
pop
sub
cmp
pop
in
jecxz
and
push
idivl
loopne
enter
xchg
dec
jg
sbb
xchg
mov
imul
popa
lock
pop
pop
and
jae
pop
mov
mov
mov
xor
imul
pushf
jae
call
inc
jne
gs
fmulp
jnp
lahf
sahf
int
sbbb
jg
pop
mov
pop
xchg
mov
push
movhps
and
jnp
inc
jnp
adc
push
add
sub
fisubs
and
mov
xor
push
cs
ljmp
push
cmpsl
jo
push
je
xor
movb
inc
xchg
int
adc
out
pop
fdivs
and
cli
cmp
sar
arpl
hlt
lock
mull
sub
sbb
mov
xor
xor
mov
filds
mov
movsb
rorb
mov
push
clc
mov
xor
in
pusha
pop
adc
mov
popf
cmpsb
rcll
and
pop
adc
das
ss
movsb
push
fs
mov
popf
stos
adc
or
push
ljmp
mov
add
pop
in
cltd
pop
loopne
adc
sahf
cmp
test
cwtl
lcall
test
stos
lods
imulb
std
xor
mov
out
xor
aad
in
gs
or
repz
xlat
cmp
push
sub
inc
cs
jb
ret
and
xor
popa
xor
clc
jmp
popf
adc
inc
inc
cmp
repnz
xchg
repz
scas
aas
jl
adc
mov
mov
push
xor
iret
nop
fwait
call
jbe
adc
hlt
into
ss
push
test
sbb
jbe
push
jl
pop
add
and
sbb
movsb
cltd
movsl
xchg
andb
inc
cmpsb
clc
inc
mov
fs
inc
dec
jle
jl
lret
mov
xlat
scas
stos
out
sarb
cld
sbb
mul
int
outsl
call
inc
push
mov
xchg
lcall
fcoms
jbe
sub
aad
xor
jge
cmp
add
lds
js
subb
insl
xchg
mov
cmp
cmp
pop
sbb
insb
imul
popa
pop
in
sbb
cld
push
dec
xchg
out
pop
push
push
mov
ret
sbb
ret
mov
mov
cmp
dec
pop
test
xor
pop
pop
rcl
jl
mov
inc
lret
test
add
aam
jl
nop
add
pushf
aam
loop
xchg
mov
test
bound
push
adc
sub
mov
xor
inc
lret
jae
lods
insb
jbe
aam
jl
push
xchg
fldenv
popf
movsl
adc
mov
out
fnstsw
cld
aas
pusha
enter
loop
stos
or
dec
fcmovne
mov
dec
inc
fsts
mov
and
jecxz
sbbb
testl
xchg
lcall
jmp
mull
mov
sti
sbb
repnz
bound
lods
rorl
or
sub
xchg
pop
add
faddl
mov
mov
repz
out
mov
add
mov
in
fcmovbe
dec
cs
leave
dec
lock
cmpsl
sti
shll
mov
mov
je
or
push
mov
jbe
shll
jg
mov
push
lock
xlat
ss
cs
jecxz
mov
inc
add
scas
fldt
mov
xor
mov
vmovups
or
lret
imul
xchg
or
scas
addb
pop
in
jae
imul
mov
add
add
jo
inc
mov
addb
cmpb
test
jp
idivb
push
add
ja
and
lret
sub
push
sbb
or
fcmovne
icebp
pusha
dec
mov
jle
in
shr
leave
std
cmc
dec
mov
mov
jbe
in
jmp
push
in
sbb
stos
scas
sar
pop
mov
ja
sub
add
or
inc
push
std
push
mov
lock
or
dec
lods
in
rclb
shlb
mov
xorb
nop
imul
cld
stos
cmp
or
call
push
je
sub
stc
jp
outsb
test
mov
arpl
dec
push
mov
test
sub
xchg
sbb
mov
mov
and
fcoms
nop
in
fildl
mov
add
in
out
rclb
rcr
dec
ja
scas
pop
jne
fsubl
sti
movsb
cld
fldenv
loop
fwait
dec
addr16
fsubrl
push
out
sarl
les
jmp
pop
sub
sub
into
push
movsb
dec
scas
lods
out
addb
pop
scas
push
xchg
cmp
mov
cli
test
push
pop
into
cmp
sbbb
jecxz
pop
mov
jnp
mov
ljmp
lods
sbb
dec
sbb
arpl
push
jge
lea
orl
jno
mov
xchg
cmc
fiaddl
pushf
lret
sub
popf
jns
icebp
or
mov
and
sub
xchg
mov
mov
nop
sahf
stos
xchg
ds
xchg
xor
xchg
xor
daa
lret
pop
xchg
jbe
pusha
cmp
popa
inc
in
stc
xchg
in
outsb
shlb
xchg
adc
movsb
lods
ss
xor
push
fxch
pop
mov
stos
loopne
cld
lret
mov
xorl
dec
test
fisttpl
mov
aaa
add
jmp
and
pop
in
mov
push
mov
and
ja
pop
inc
test
lret
fisubl
stos
idiv
popl
repnz
shll
idivb
rcll
adc
cmp
ret
add
int
loopne
mov
or
or
xor
cmp
mov
add
outsb
fstp
mov
adc
out
and
ja
cmp
in
imul
mov
sbb
dec
mov
dec
xchg
fildll
test
cmp
lret
and
jo
dec
cmpl
mov
cmpsb
out
mov
push
xchg
cmpsl
lcall
subb
push
xorb
pop
repnz
xchg
aad
mov
lods
xchg
sub
pop
xor
and
and
push
dec
jbe
dec
call
loop
or
jno
sub
xor
lods
out
lcall
pop
dec
divb
shlb
or
shrb
int
adc
f2xm1
dec
dec
xchg
cmp
add
sbb
popa
pop
movsb
cmp
cld
xor
and
mov
inc
rol
cmp
sub
sub
mov
sub
push
fstl
ret
mov
mov
xor
inc
imul
inc
scas
inc
jne
and
inc
lret
pop
loopne
xlat
out
add
loop
test
lret
push
xor
loope
push
loope
mov
sbb
mov
negl
rcll
mov
rcrb
loopne
push
jg
push
jae
aas
shll
add
xchg
fsubs
sub
push
mov
repnz
mov
push
adc
enter
mov
push
inc
xor
outsl
ffree
lea
mov
cmpsb
push
fdivrp
sti
mov
rcll
imul
mov
dec
cmpsb
cld
hlt
sarl
cmc
jmp
icebp
dec
fcomp
sub
std
iret
mov
or
xchg
test
inc
mov
xor
je
xlat
xchg
fisttpll
mov
push
sahf
fistpl
sub
cmp
lret
sub
and
or
adc
push
push
adc
pusha
xor
imul
je
aam
push
int
movsb
sub
scas
mov
fs
out
mov
fidivl
mov
jl
mov
or
out
sbb
in
jl
mov
stc
das
fwait
xchg
xlat
sbb
cmp
sbb
xchg
push
dec
scas
and
xchg
sbb
pop
out
mov
lcall
jmp
addr16
inc
bnd
pop
mov
add
or
ljmp
pop
in
push
dec
pop
xchg
ja
pop
daa
ret
in
dec
xor
pop
mov
mov
xor
subb
mov
mov
rcll
cmp
cmp
jae
and
loop
xlat
fcmove
sub
mov
imul
jg
imul
xacquire
cli
cmc
out
xor
add
xchg
pop
mov
repnz
int3
testl
sbb
lea
sub
or
mov
cmpsb
mov
mov
mov
fs
xorb
imull
insl
mov
stos
dec
or
lret
or
push
jno
fiadds
pop
xchg
sahf
stc
aam
sub
xchg
iret
lahf
adc
cmpsl
dec
xchg
adc
push
mov
dec
popf
mov
or
inc
sub
add
push
aam
add
or
mov
fimuls
jecxz
daa
pushf
cld
test
mov
push
jb
jg
cmp
xchg
pop
hlt
xchg
sbb
loope
stos
iret
cmpsb
imul
mov
mov
nop
mov
scas
repz
xchg
xchg
mov
pushf
mov
and
fdiv
ftst
pop
iret
arpl
stc
fcomip
push
loope
ds
mov
dec
ret
xor
mov
jl
cltd
pop
sbbb
mov
cmp
sub
lcall
inc
push
mov
push
fldcw
les
iret
out
cld
mov
das
xchg
and
jnp
sbb
jno
add
fwait
mov
test
pusha
ficomps
in
les
cmc
sub
ss
orl
lea
mov
push
push
subl
push
pop
out
adc
mov
push
and
fwait
xlat
mov
mov
xchg
mov
push
cmp
jae
cmp
mov
out
cmp
outsl
lretw
and
xchg
mov
into
imul
sbb
fwait
xchg
pop
pop
fcompp
movsb
or
clts
adc
neg
ret
xor
cmpsl
inc
rolb
or
scas
cld
repnz
sub
and
lret
sub
dec
cmp
mov
das
lea
inc
mov
outsl
in
sbb
in
mov
aas
in
mov
lea
mov
push
in
inc
dec
pop
pushf
dec
sub
pop
mov
xchg
mov
push
es
daa
adc
call
loope
pop
cmp
xchg
lods
aam
sbb
lcall
push
lds
mov
fidivrs
imul
push
adc
ja
fwait
pop
pop
pop
adc
xchg
push
mov
cmp
mov
imul
pushf
outsb
popa
xchg
mov
aad
cld
mov
pusha
jbe
popf
xor
outsb
std
das
xchg
jo
adc
lods
lret
aad
lock
jbe
jecxz
insb
mov
xchg
dec
mov
psubsw
cld
addr16
in
lock
add
push
repnz
lods
jns
insl
shlb
pop
inc
in
in
jmp
cli
iret
sbbb
in
and
push
data16
cwtl
into
dec
mov
ret
jmp
add
push
lret
pop
xlat
sbb
movsb
pop
idiv
jb
mov
cmc
popa
xchg
ret
or
aas
in
dec
test
mov
out
cld
adc
jno
ds
jo
aam
movsl
in
sbb
hlt
rcl
inc
jb
stc
pop
push
aaa
xor
pop
inc
test
inc
push
rolb
stc
dec
cltd
push
jecxz
pop
xchg
icebp
push
test
add
js
cmpsb
out
stc
lcall
testl
out
pop
cmpsl
mov
out
outsl
lret
cwtl
insl
iret
int3
cs
mov
adc
fstpl
adc
int
and
outsb
or
mov
jno
cltd
xchg
inc
test
daa
dec
int
leave
mov
int
out
rcll
and
xlat
dec
jl
and
aam
xchg
out
cmp
iret
je
lahf
mov
pop
jne
fs
inc
es
lods
or
cli
dec
lret
dec
dec
imul
lea
popf
mov
decl
sub
sahf
jp
mov
lahf
cmc
xchg
rep
xchg
push
les
bound
pushf
sub
xchg
addr16
int3
jl
dec
das
pop
pop
arpl
out
push
lret
outsb
fdivl
ret
push
xor
out
push
rcrb
push
shll
push
mov
inc
popf
lret
jl
adc
pusha
pop
ja
jp
aas
pop
lds
fwait
or
add
stos
lods
bswap
pop
and
fstpl
dec
enter
jmp
xlat
sbb
js
std
add
pop
sbbb
pop
mov
adc
les
pop
xorl
lds
mov
pop
push
or
push
add
mov
subl
inc
mov
adc
lods
movsb
rcrl
sarl
push
sub
xor
lock
sub
int3
lds
add
xor
add
shrb
pop
jp
pop
mov
sub
loopne
and
inc
xchg
lds
jle
int
and
shlb
inc
adc
push
add
mov
pop
mov
and
add
jns
sub
jg
shr
inc
lahf
mov
loope
lret
in
test
sub
out
mov
lods
movsb
pop
jae
daa
or
cmc
pop
cmc
xchg
imul
and
and
and
or
xchg
mov
pop
add
adc
cmp
test
in
fwait
mov
mov
sbb
repz
jae
xor
xchg
pusha
js
mov
pop
pusha
fldenv
push
xor
pop
add
sarl
inc
mov
loop
inc
repz
or
out
scas
in
cld
popf
xlat
stos
movsl
mov
add
insb
lahf
xor
and
jl
cmpb
icebp
xor
fmul
outsl
imul
or
xchg
mov
enter
mov
sti
repnz
lods
jl
push
push
xchg
vmread
lods
push
hlt
data16
dec
adc
push
jae
cmpsl
loope
lods
fbld
pushf
adc
and
test
mov
sbb
push
out
dec
dec
mov
xchg
add
bound
mov
dec
pop
movsb
fwait
test
mov
ja
subb
sbb
dec
jmp
out
cmpsb
pop
inc
and
push
cmp
xchg
jo
cld
add
mov
inc
pop
loopne
mov
push
xor
ud2
cmpsl
push
and
push
ljmp
add
inc
daa
cmpsl
sbb
push
inc
dec
push
xor
pusha
adc
sbb
lods
fwait
movsb
dec
mov
adc
xchg
je
cmpsl
addl
mov
out
sub
jg
sub
cwtl
inc
jge
mov
sbb
mov
and
cmp
pop
lret
mov
hlt
sbb
adc
testb
sub
mov
popf
xchg
inc
out
jmp
ljmp
push
repnz
xchg
jge
mov
jl
fwait
inc
rorl
mov
add
xor
imul
dec
sub
lcall
inc
jge
int3
lret
add
inc
divl
cmpsl
repz
out
adc
cmp
aam
and
cmpsb
daa
rcr
sbb
sbb
jne
cmc
daa
sbb
cmp
add
mull
jbe
les
adc
sarl
mov
sbb
pop
adc
les
add
or
je
sarb
out
rorl
push
je
js
fdivl
out
add
rolb
or
pop
push
or
mov
popf
scas
in
loope
popf
jp
in
cli
jbe
xchg
push
in
gs
cmc
aad
mov
je
popa
sbb
dec
in
mov
cli
pop
add
clc
sub
inc
mov
jp
or
pop
stos
xor
aaa
dec
jmp
add
push
mov
popa
test
lock
pop
cmp
andl
mov
mov
pop
inc
jge
leave
lods
or
xchg
add
and
mov
xchg
adc
mov
cs
loope
inc
outsl
cmp
jns
jbe
lock
aas
std
sub
and
pop
loope
fxch
xchg
imul
iret
lods
push
clc
shlb
in
stc
mov
sub
or
mov
pushf
pop
pop
xchg
pop
shll
mov
enter
insb
cmp
mov
pop
push
push
test
pop
int3
ret
xchg
frstor
into
in
outsl
addb
xchg
push
xor
leave
cmpsb
add
jle
mov
cli
mov
push
push
adc
aaa
sub
sbb
jns,pt
jmp
mov
push
mov
inc
push
sbb
jbe
lods
mov
dec
dec
inc
jmp
push
push
sarl
lock
test
notb
dec
sbb
lcall
sub
lret
pop
mov
cld
inc
adc
ljmp
rorl
fucompp
sbb
repnz
lcall
pop
pop
mov
inc
andl
loop
and
add
outsb
or
movl
lods
sbb
push
or
mov
xchg
nop
push
cltd
mov
out
int
test
lods
in
fisubrl
dec
mov
lods
sahf
psllw
repz
popl
push
fistps
inc
cmc
aas
and
lods
inc
std
mov
pop
push
sahf
sub
cltd
xchg
dec
xchg
or
or
popf
cwtl
mov
jp
mov
mov
mov
xor
or
mov
mov
or
xchg
dec
xchg
cli
push
pop
filds
xchg
stc
xor
loope
pop
add
or
sub
sub
sti
mov
and
mov
mov
mov
stc
xchg
bound
test
sbb
or
inc
cmc
lea
scas
lahf
dec
inc
xor
cwtl
mov
jmp
fldt
pop
aaa
lods
jecxz
xchg
push
sbb
adc
movsb
dec
inc
js
mov
arpl
cmpsl
jge
xor
mov
sbb
inc
or
movsb
mov
bound
pop
pop
dec
js
jmp
icebp
xchg
dec
sub
mov
add
pop
jb
rolb
xchg
jae
lahf
mov
out
jne
popa
imulb
jecxz
or
shl
dec
fimull
and
lret
test
xor
cmp
dec
mov
mov
insb
add
lods
mov
int3
pop
loopne
push
sbbb
mov
fimull
sbb
add
jae
push
cmp
clc
imul
sahf
mov
repz
mov
mov
mov
add
loopne
cmp
shrl
dec
or
imul
mov
nop
enter
sbb
xchg
aaa
addb
push
dec
repz
jmp
jp
loopne
xchg
out
push
jp
sbb
mov
push
and
sub
xor
lahf
test
mov
push
lahf
pop
jecxz
inc
aam
cmpsl
push
cwtl
outsb
sub
mov
push
mov
push
in
in
dec
in
das
cmp
mov
jno
lret
and
cmpsl
xchg
nop
sarl
gs
jae
pop
es
adc
shl
push
dec
sbb
js
cmpsl
cli
sub
sub
mov
push
mov
or
push
jmp
mov
fmull
cltd
cmp
imul
rcrl
insl
cmc
sub
cmpsl
pop
sbb
clc
cmp
ja
scas
test
sub
std
jmp
std
into
or
add
mov
sub
pop
hlt
push
insl
test
ds
push
sti
pop
xor
fistpll
jns
fwait
test
lret
sub
cmp
cmp
pushf
dec
outsb
xchg
or
imulb
test
push
inc
jbe
sbb
in
mov
jae
mov
ficoml
sub
cmp
cmc
inc
push
shr
adc
jg
out
sub
push
mov
ja
shl
mov
and
movsb
jbe,pt
inc
or
out
sbb
fdivl
je
sti
dec
lock
getsec
pop
mov
into
jmp
js
xchg
sarb
adc
mov
fistps
lret
in
and
fdivrp
add
ds
lods
aas
int
adc
xchg
cmpsb
inc
mov
cmp
jns
lahf
push
lahf
lea
fdivs
cmp
and
push
sub
mov
enter
js
cmp
pop
cmp
aad
int3
fs
lods
dec
addl
fnstsw
push
pop
mov
sub
lock
adc
sub
jae
fcompl
cs
pop
mov
mov
pop
loope
loope
cli
mov
pop
push
inc
pop
out
js
fisubs
into
xor
and
iret
out
push
clc
out
cmpsb
aam
mov
ret
cmp
daa
push
pop
gs
outsb
test
fisubrs
pushf
iret
incb
fldcw
out
or
enter
cmc
sbb
adc
fdivl
push
xorl
jmp
addr16
lret
out
ljmp
in
inc
call
popa
mov
sub
pop
stc
in
cmc
aad
push
or
jno
inc
add
loopne
lret
out
mov
xlat
pop
aad
scas
inc
mov
pop
nop
pop
stos
std
insl
push
or
lahf
adc
mulb
adc
cmp
cli
adc
mov
scas
cmc
std
sbb
in
or
add
lahf
sub
sbb
push
inc
push
or
pop
and
rcll
dec
xor
int
pushf
xchg
cmc
pop
sti
and
jg
xchg
xchg
iret
shll
adc
jae
jmp
cmp
jb
scas
mov
aaa
ss
dec
scas
daa
add
jmp
mov
sbb
sub
lea
jle
rcll
stos
test
or
js
mov
fistps
repz
andb
sbb
call
sbb
pop
out
mov
stos
mov
hlt
xchg
ret
mov
lds
enter
aam
mov
lret
dec
jae
daa
fisttpl
xchg
or
es
push
lds
adc
mov
mov
mov
loopne
rolb
daa
mov
imul
arpl
adc
sub
outsl
jp
adc
in
sarl
and
jae
sahf
ljmp
mov
and
adc
je
xor
and
enter
leave
jae
jge
push
sbb
xchg
xchg
fs
scas
fnsave
pop
or
and
imul
push
dec
xor
popf
or
mov
sub
mov
lahf
movsl
enter
mov
inc
xor
stc
out
push
jp
ret
cmc
addr16
jae
pusha
aas
mov
daa
lds
ret
nop
mov
add
xor
mov
mov
adc
pop
test
mov
push
push
lods
or
xchg
mov
push
daa
es
test
stos
bound
adc
lret
jl
sub
xchg
jl
mov
adc
sub
pop
cli
cwtl
cltd
cs
jns
out
adc
pusha
or
pop
inc
sub
xchg
aas
adc
fdiv
scas
sbb
jle
nop
mov
jnp
dec
xchg
sahf
lcall
jb
push
fsubrs
shl
mov
push
sub
mov
paddd
jl
sub
push
mov
jl
mov
pop
in
pop
or
fldcw
mov
sbb
sti
push
loopne,pn
xor
rorl
xor
xorl
repnz
adc
les
enter
scas
hlt
negl
and
jae
stos
dec
cmp
pop
sahf
test
leave
insl
push
sub
mov
sbbl
js
fwait
xor
fisubs
pop
fnstcw
nop
repnz
daa
dec
addr16
divps
adc
sahf
int3
and
or
jno
sub
add
pop
mov
xor
lds
imul
fstp
scas
out
push
sub
jle
sbb
mov
icebp
cmpsb
cltd
cli
cmp
mov
dec
jge
pusha
inc
or
mov
cli
pop
or
pop
imul
aad
lret
dec
mov
repz
cmp
ret
scas
aas
out
cmp
js
ljmp
mov
scas
popf
pop
arpl
push
data16
dec
dec
imul
shll
adc
lods
xor
jl
shll
or
arpl
pop
stos
lret
fnstsw
push
cmp
add
je
xor
aam
clc
lods
jle
clc
pop
shll
dec
inc
push
mov
xor
lea
test
add
cmc
jae
psllw
call
ret
stos
outsb
lahf
jecxz
mov
cmp
jo
mov
ljmp
sbb
mov
stc
jo
push
bound
imul
jno
lea
pop
or
xchg
lods
into
dec
sbb
push
lret
jge
stos
add
inc
cmpsl
cmc
inc
les
push
pop
arpl
test
push
leave
dec
cmc
jno
test
das
sbb
test
fmul
fnsave
mov
adc
sarl
enter
sub
scas
stc
inc
imul
and
mov
dec
test
mov
or
test
std
les
inc
cmp
popa
lcall
mov
dec
mov
out
in
scas
out
mov
scas
popa
lret
add
les
mov
repz
aam
cwtl
jg
and
in
cld
sbb
xchg
pop
jg
inc
push
test
lahf
sub
shll
inc
cmc
lods
mov
or
xchg
ss
aam
sub
jbe
ror
lods
dec
in
mov
or
std
add
cmp
push
test
shlb
rcl
push
lret
ds
test
movsb
sti
popf
add
lock
and
clc
mov
mov
sbb
inc
fs
sahf
mov
add
adc
pop
dec
xor
add
push
loop
or
add
add
or
gs
jo
add
jge
arpl
lods
stos
add
dec
stc
add
adc
pusha
or
cmp
inc
sbb
mov
notb
notl
sti
psrld
and
jae
jnp
xchg
daa
mov
mov
popa
out
imul
push
mov
or
cs
sahf
addr16
arpl
sub
fsubs
movsl
cltd
out
pop
dec
lcall
ja
imull
inc
mov
xor
fwait
sub
aad
pop
jg
lods
gs
outsl
in
mov
scas
idivl
jle
div
cld
sbb
jl
out
xor
xor
rcll
cltd
or
imul
jg
aaa
xor
jae
push
mov
cmp
xlat
pop
pop
movsl
data16
aam
or
clc
insl
jle
inc
cmp
ret
mov
hlt
sbb
push
arpl
dec
ret
fwait
jp
cwtl
sbb
sub
lds
lahf
push
ss
push
mov
xchg
jg
inc
jae
sahf
push
lea
dec
leave
cmp
pop
movsl
dec
mov
add
dec
popf
stos
lods
sub
pop
and
xadd
ret
cli
cmp
ret
test
jns
js
popf
sub
loopne
sahf
sahf
xchg
or
mov
sahf
ss
and
lret
jae
fildll
into
mov
es
das
jnp
jbe
mov
test
mov
push
inc
dec
aaa
push
cli
mov
lock
repz
fiaddl
mov
fs
jl
jg
nop
je
dec
inc
inc
and
out
jmp
pop
mov
inc
int
cltd
mov
add
out
dec
fisubrl
cwtl
pop
cmc
cs
and
data16
add
mov
add
pop
sbb
sbb
and
push
pop
pop
rorb
mov
xchg
push
clc
outsl
cmp
adc
push
loop
xor
sbb
outsb
dec
and
mov
mov
repz
pop
ret
add
addl
pop
clc
das
fisttpll
mov
movsl
push
sub
xor
xchg
adc
mov
cltd
lret
das
das
jb
lea
sbb
fisttpll
divl
cmp
xor
or
dec
push
mov
lods
add
dec
pop
add
roll
pop
jno
mov
xor
mov
mov
mov
leave
aas
sar
push
inc
jl
sarl
scas
jne
adc
push
gs
pusha
test
and
dec
sbb
outsl
aad
jno
sbb
jle
mov
dec
ret
and
dec
xor
int3
mov
xchg
mov
test
cmp
lret
mov
nop
xchg
jmp
in
pop
outsl
neg
and
movsb
fsubl
lahf
insl
mov
fisubl
cmp
mov
imul
pop
sub
push
push
daa
sub
push
arpl
stc
insb
test
add
xchg
or
scas
out
test
mov
pop
cmc
inc
lods
arpl
mov
pusha
jo
xor
popa
pop
out
dec
pop
ret
mov
push
pop
outsl
repnz
push
pop
clc
cld
sbb
and
fsubs
xchg
xchg
fisubrl
mov
inc
xchg
aas
shll
andl
or
pop
pop
in
lcall
mov
fcmovnbe
cmp
jae
lods
adc
test
lods
es
sub
jg
addr16
data16
fimuls
cli
cmp
sbb
dec
fidivl
mov
lds
and
adc
and
mov
xlat
xor
sbb
ficompl
daa
iret
and
imul
loop
xor
mov
iret
jne
out
out
mov
adc
pop
pop
add
inc
in
loopne
imul
push
jl
adc
sbbl
and
sub
cmp
mov
loope
clc
mov
cs
sbb
mov
push
sarl
popf
xor
jge
cmc
mov
jg
push
in
and
xor
xlat
pop
call
fstps
jg
and
sub
push
add
mov
dec
daa
lahf
orb
push
ret
ret
inc
subl
xchg
add
aas
fcos
daa
aam
mov
out
push
ret
mov
mov
sbb
in
sub
out
rcr
fmul
hlt
js
mov
pop
cmp
out
repz
shrb
push
dec
mov
push
xchg
movsb
add
scas
sbb
dec
fistpl
into
cs
arpl
mov
lcall
ja
xchg
push
out
sub
nop
in
stos
cmpl
dec
cmp
loop
daa
mov
cmp
pusha
xchg
xchg
js
add
pop
push
ret
adc
gs
fdivrs
adc
xor
jmp
pop
stc
or
mov
push
shrb
bound
aaa
bound
mov
hlt
fsubp
into
mov
sarb
test
jno
pop
lret
ss
dec
repz
inc
orb
mov
adc
lcall
clc
cld
lcall
loope
sbb
jnp
pop
sbb
aam
loopne
mov
imul
pop
jne
dec
into
xchg
aad
mov
mov
xor
ss
push
outsl
out
mov
aad
push
jp
sti
loope
xor
out
stos
fstl
sub
sub
xor
cmc
clc
push
mov
jns
stos
jno
mov
inc
leave
mov
stc
pop
xchg
sub
inc
jno
sub
xchg
in
xchg
mov
inc
mov
loopne
and
cmpsl
push
sbb
cmp
loop
test
addr16
pop
roll
rcr
fsubrp
mov
pop
push
and
das
loop
add
xlat
pop
imul
popa
adc
lods
out
je
add
mov
mov
scas
shl
dec
push
push
cmp
loop
mov
stos
sub
sbb
loop,pt
and
adc
mov
clc
fisubl
je
in
push
xchg
mov
mov
out
daa
fisubs
aad
mov
loopne
mov
popf
and
aaa
jp
xor
sbb
jnp
cmp
and
shll
mov
xchg
dec
push
mov
sub
xchg
xchg
in
loopne
mov
mov
push
add
jecxz
jnp
inc
xchg
in
arpl
daa
mov
addr16
dec
push
scas
push
mov
dec
push
cmp
fmull
dec
or
and
pop
mov
sbb
xor
mov
popf
and
cltd
mov
insb
loop
sahf
mov
jo
lds
scas
js
sbb
mov
cmp
iret
ffreep
cmp
mov
cmp
roll
stc
pusha
add
push
mov
sarb
das
vcvtdq2pd
out
mov
loop
pop
mov
mov
loopne
xchg
mov
push
push
jne
sti
sbb
xor
das
cmp
loop
cwtl
stos
mov
cmp
std
aam
mov
cld
out
mov
push
icebp
xchg
lock
add
inc
pop
push
xor
sahf
push
mov
jge
mov
push
stc
push
push
dec
test
mov
fwait
aaa
pop
mov
aas
subb
and
pop
push
inc
lahf
popf
jne
cmp
sbb
push
lret
test
in
hlt
out
lret
adc
xchg
out
mov
mov
jp
xor
mov
out
dec
inc
add
cmp
insb
jle
jl
sarl
lods
arpl
and
adc
xor
jmp
or
ror
inc
inc
jle
mov
mov
fistl
ret
sub
lods
jne
mov
imul
adc
fldenv
ret
shrl
fcomi
lods
loop
imul
add
pop
xor
jp
in
xor
add
sbb
fnstcw
push
dec
or
pop
push
push
mov
rdmsr
or
jle
icebp
sar
xor
inc
or
insl
or
add
leave
adc
push
mov
cmp
aam
enter
cmpl
jnp
pop
jecxz
xor
mov
jp
fs
rorl
xor
lcall
pop
add
mov
and
adc
mov
insl
and
adc
and
sbb
leave
cmpsl
or
jno
add
stos
out
call
stos
sub
sub
dec
mov
hlt
fadds
adcl
mov
fdecstp
ds
jo
subl
cmp
sbb
loope,pn
push
lock
jecxz
nop
mov
popa
cmp
dec
je
and
xor
dec
hlt
cmp
dec
ss
std
mov
and
data16
jge
add
mov
pop
mov
xlat
call
pushf
inc
and
out
call
hlt
inc
jl
insl
xchg
fdivl
mov
test
shrl
ret
dec
push
adc
and
in
movsl
inc
sbb
ret
mov
mov
inc
rolb
push
leave
orl
xor
stc
stc
dec
push
jo
jp
es
push
sub
insb
xor
pop
mov
fimuls
adc
or
inc
mov
lcall
sub
cmp
movsb
jl
or
sbb
adc
pop
repz
sub
xchg
scas
lahf
in
sub
arpl
idiv
cmp
lret
pop
cmp
ljmp
call
xchg
clc
jo
adc
cltd
jg
aad
and
cwtl
daa
mul
loop
loopne
dec
push
fcmovnu
into
lock
xchg
testb
insl
ss
mov
sub
outsl
ret
js
xor
add
push
stos
mov
out
xchg
fisttpll
mov
ss
call
stos
xor
out
push
enter
and
adc
xor
lock
sub
push
dec
ja
ljmp
cmp
mov
rcl
push
push
adc
imul
cmp
ret
or
test
xchg
jle
push
je
shll
add
cmp
addb
mov
in
in
inc
push
dec
std
sbb
in
mov
iretw
cltd
xor
push
jle
inc
lods
adc
sub
sbb
cmp
and
js
mov
sbb
xchg
adc
stc
cmpsb
pushf
sub
std
shrb
mov
pop
and
jns
jge,pn
mov
lods
pop
sub
lods
enter
dec
sbb
sahf
fdivrs
mov
dec
stos
mov
ss
push
into
mov
or
comiss
jns
loope
pop
add
mov
sub
shrl
pushf
sbb
bound
in
xchg
xchg
movsl
bound
test
push
or
xlat
adc
xchg
pop
mov
xor
mov
xchg
and
adc
mov
pop
cltd
pop
jnp
and
leave
sbb
mov
aas
lock
stos
hlt
fnsave
movsb
test
out
lods
mov
mov
xor
cmp
ds
jno
fsts
fsubrp
or
aas
inc
int
push
in
divb
xor
subb
mov
into
popf
sti
shr
shrl
loop
mov
icebp
aas
subl
add
jl
add
mov
jl
aad
arpl
pop
push
mov
hlt
lret
xchg
and
sub
pushf
pop
cmpsb
push
jmpw
into
inc
mov
pop
ret
xchg
sbb
or
aas
out
ret
mov
and
in
loopne
cmpsl
insl
iret
xchg
mov
mov
and
popa
push
ss
les
test
ljmp
gs
pop
and
cmc
inc
fsubl
mov
int3
mov
mov
insb
inc
fs
sub
xor
mov
adc
pop
imul
adcl
stos
sub
cmp
js
jb
jnp
cmp
mov
sbb
or
mov
sarb
ljmp
ret
mov
jns
jne
or
movsl
insl
and
loop
adc
clc
add
rcll
xchg
movsb
pop
cmp
inc
sarl
pop
add
scas
or
aam
add
push
jbe
dec
arpl
pop
mov
jg
cmp
rcrb
loopnew
fadds
pop
je
cltd
bswap
das
jbe
testl
sub
bound
mov
push
movsb
clc
das
or
fisubl
gs
dec
jp
add
addb
fsubrp
add
sbb
dec
movsl
hlt
fdivrl
xchg
push
push
cmp
or
cltd
sahf
insb
mov
mov
jnp
sub
jns
lcall
xchg
repnz
and
sti
pop
and
aaa
push
rcrl
sbb
data16
hlt
lods
mov
push
sub
mov
movsl
das
and
push
sahf
sarb
adc
push
mov
fisttps
mov
gs
test
cwtl
lock
pop
mov
mov
iret
xor
sub
lds
sub
lock
inc
ret
jne
imul
jo
pop
roll
inc
mov
mov
mov
test
push
push
dec
fcmovb
and
push
adc
int3
sub
cmp
loope
mov
dec
xor
xchg
movsl
mov
cmp
jl
mov
pop
daa
and
daa
leave
fldt
xor
lret
stc
outsl
cmp
add
cmp
adc
repz
xchg
dec
sub
lcall
adc
mov
pop
pop
orb
insb
lea
mov
jbe
mov
fwait
popa
xor
pop
js
sbb
dec
xchg
ss
pop
mov
mov
pop
js
pushf
lds
aas
jno
aam
in
ja
ror
data16
xchg
shlb
or
pop
outsl
fs
rclb
xor
outsl
stos
sub
mov
jne
mov
cmp
cmp
push
jns
dec
xchg
xchg
mov
jle
push
mov
jnp
add
pushf
mov
add
xor
or
cs
sti
popf
or
int
aaa
push
in
int
adc
mov
cmpl
pop
movsl
lahf
stc
test
push
out
scas
popa
xchg
add
mov
mov
sub
mov
sbb
push
les
xlat
pop
addr16
in
sarb
inc
fs
in
cwtl
mov
jae
inc
dec
ds
sti
mov
xchg
iret
sub
in
lcall
popa
lods
xchg
lods
les
fldenv
loop
nop
das
andb
lds
cld
mov
push
sbb
mov
mov
xchg
ss
shrl
mov
loop
pop
mov
and
outsb
pop
push
mov
iret
lcall
pop
sub
xlat
sti
sub
loope
add
jne
jge
mov
scas
gs
mov
jb
add
lret
mov
ja
test
inc
das
mov
mov
push
data16
pushf
push
sub
pop
push
or
pop
mov
rcrb
add
je
jns
xlat
ret
iret
jbe
sbb
adc
ficoml
jge
inc
mov
or
mov
imul
sbb
pop
orl
pop
rcll
scas
mov
fwait
je
mov
add
xchg
test
pop
fnstenv
lcall
mov
and
fisubrl
fwait
mull
xchg
in
mov
fs
cli
xchg
pop
sub
imul
int
out
mov
add
xchg
stos
int3
lahf
sahf
add
pusha
fidivrl
mov
rcll
lahf
enter
mov
jmp
lahf
push
xchg
mov
sbb
test
jb
mov
jp
and
das
iret
movsl
push
push
scas
in
mov
pop
mov
inc
pop
lods
int
pop
jae
je
orb
cmp
mov
rol
push
xchg
movsb
pop
loopne
mov
mov
movsl
mov
add
popa
sti
or
aaa
es
repnz
jle
repnz
lret
int
lcall
push
data16
imul
cld
adc
loope
mov
mov
push
cmc
jo,pt
mov
push
mov
icebp
dec
sahf
adc
jne
inc
jmp
mov
test
ret
fstpl
popa
mov
mov
idivl
pop
push
jns
add
add
adc
arpl
imul
jns
mov
add
pop
sti
fmuls
shl
dec
shl
loop
push
scas
cmp
lds
mov
ret
xchg
xor
jecxz
lods
out
push
aam
aad
shlb
jmp
aad
loopne
xchg
ss
out
sarb
push
cmpsl
sbb
aad
xchg
cmp
xor
add
adc
in
out
not
pop
or
dec
xor
in
jl
stos
incl
scas
lahf
adc
adc
jg
inc
sub
add
fimull
mov
add
lods
add
mov
arpl
ljmp
dec
pop
enter
xchg
lcall
rolb
sahf
mov
mov
and
mov
jno
jmp
inc
int
inc
lahf
jo
outsb
lods
jns
and
jg
hlt
xchg
fists
push
add
movups
mov
push
movsb
int3
pop
adc
cmp
pop
push
pushf
das
mov
out
shlb
mov
cli
xor
mov
gs
xchg
jmp
cmp
daa
inc
adc
jmp
ss
jns
sbb
hlt
mov
repz
mov
andl
into
pop
repz
jp
daa
dec
or
add
jne
mov
xchg
or
seto
xchg
jmp
icebp
in
dec
mov
or
mov
shrb
out
shl
data16
sbb
pop
push
cmc
repnz
jg
les
or
fmulp
fs
test
dec
out
mov
scas
movsl
sti
andl
push
cmp
fsts
add
imul
xchg
movsbl
imul
ja
iret
xchg
repz
cmp
das
push
iret
adc
xor
mov
jb
pop
call
jns
fcmovu
rcr
fnsave
pop
sub
sbb
cs
lods
xor
cmp
repz
fstpt
in
and
aaa
leave
mov
lds
mov
dec
or
in
dec
or
xorb
ds
out
jno
dec
adc
jbe
in
push
cwtl
jo
insl
outsl
dec
and
popa
insl
scas
and
or
ficoms
sbb
flds
mov
pop
and
mov
in
loope
icebp
andl
adc
xor
mov
cmp
sti
jae
inc
or
stos
jne
add
sbb
cli
in
pop
fisubrs
dec
push
or
mov
mov
dec
fldenv
mov
dec
adc
xchg
subl
inc
mov
jne
je
mov
arpl
sub
gs
inc
cmp
ret
repz
cmc
xor
and
sbb
leave
mov
in
mov
popa
fldcw
jle
mov
aas
addb
int
mov
sbb
lods
add
mulb
dec
cs
mov
cltd
inc
je
lock
fcompl
stc
dec
jns
arpl
adc
cmc
ljmp
outsb
sbbl
cmp
mov
ret
in
lds
lcall
push
sub
sbbl
jnp
mov
outsb
leave
lcall
mov
mov
cli
cli
cmp
mov
dec
add
push
jmp
pop
outsl
sti
jg
scas
test
cmc
iret
or
mov
dec
pop
jecxz
xchg
imul
pop
imul
pop
mov
adc
jge
fiadds
xor
insl
stos
rolb
cmp
and
cmp
push
outsl
dec
push
jne
jb
pop
and
inc
orb
in
test
addb
das
xorw
sub
mov
jb
push
xchg
sbb
sbb
xchg
addr16
mov
inc
test
fwait
jo
adc
cmp
xchg
mov
pop
sub
dec
adc
or
and
mov
push
xchg
rorl
cmp
aaa
pop
push
add
adc
popf
jl
adc
add
add
lret
daa
jbe
mov
addb
pop
push
cmp
insb
ljmp
cmp
pop
ja
mov
dec
dec
pop
scas
dec
adc
mov
pop
imul
pop
jge
or
dec
sub
into
repz
movsb
xor
xchg
or
cmp
sub
into
std
lock
imul
shrl
mov
repnz
mov
stos
jb
or
popa
jl
pop
or
inc
and
sbb
les
and
jp
jo
ljmp
inc
lcall
inc
ss
push
adc
and
sub
fs
shrb
pushf
movl
lea
repnz
jl
inc
jnp
mov
inc
push
dec
insl
mov
sub
jae
xchg
cmc
imul
push
xchg
dec
test
mov
iret
inc
and
or
jbe
jle
pushf
push
lods
sub
cmp
cmpsl
loopne
xor
mov
mov
inc
je
xlat
stc
movzwl
fisttps
mov
push
cmpsb
insw
out
in
and
mov
dec
dec
lock
adc
sbb
mov
icebp
jb
outsb
sub
push
sub
sub
push
bound
cwtl
jg
adc
push
fnstcw
mov
mov
pop
gs
ds
dec
lock
xor
pop
inc
xchg
mov
push
je
iret
icebp
pushf
mov
pop
mov
adc
mov
dec
xor
cmp
sub
cld
pop
sbb
fldenv
nop
xchg
cmp
fildl
les
jnp
idiv
sub
add
sbb
lret
inc
lret
cli
in
pop
pop
mov
xchg
jne
or
inc
les
test
hlt
in
or
ret
outsb
popf
lahf
cld
sub
or
out
jle
push
cs
scas
xchg
cmp
rcl
push
inc
insb
jne
adc
fidivrs
push
push
scas
ret
sub
pop
jge
repnz
sbb
aas
fs
and
shr
ja
leave
inc
add
in
xchg
pop
cltd
test
xchg
aad
xchg
fildl
mov
mov
lock
enter
vpmuludq
loop
insb
std
pop
mov
mov
rol
lcall
out
xchg
xchg
out
push
out
outsl
cmp
pop
ja
sti
rolb
movsb
sarb
adc
and
movhlps
jne
pop
shlb
and
fsub
mov
xchg
jp
outsb
push
lcall
pop
jmp
push
stos
cmpl
sbb
xor
jg
pop
rclb
je
addr16
cmpsl
addl
mov
js
sbb
imul
pop
dec
out
pop
aas
in
ficoml
cmpsb
nop
sbb
pop
adc
cli
outsl
ljmp
incl
sub
pop
mov
scas
cmp
insl
lods
aad
inc
insb
inc
mov
aaa
dec
jnp
sbb
loop
push
sbb
mov
call
mov
sti
mov
xor
sbb
cmp
mov
inc
stc
jae
mov
stos
leave
sarb
inc
and
sbb
dec
fidivrl
rolb
loop
xor
and
pop
jns
sbb
jl
inc
outsb
mov
mov
mov
ret
push
aad
test
lcall
add
adc
adc
pop
mov
mov
and
push
arpl
ret
xchg
mov
cltd
push
add
or
mov
scas
cmpb
insb
int3
div
jbe
call
rep
and
add
fcomip
adc
hlt
pop
xor
shlb
cs
or
inc
and
and
dec
mov
vpsraw
sbb
leave
xor
dec
sbb
jge
lods
dec
test
jl
dec
xchg
cld
mov
test
sub
mov
adc
in
adc
xor
sub
imul
add
in
popa
and
test
int
ss
gs
outsb
fdivp
cwtl
repnz
pop
jmp
inc
or
jmp
ja
fmuls
pushf
test
mov
loope
aaa
jg
mov
pop
lea
xor
insb
repnz
inc
push
jbe
icebp
add
ljmp
mov
push
dec
call
mov
pop
inc
nop
adc
adc
outsb
cltd
xchg
lds
pop
cs
mov
and
push
sub
cwtl
test
sbb
mov
jnp
out
jnp
imul
xchg
dec
xor
xchg
sub
sbb
in
mov
mov
mov
sbb
push
rcrl
xchg
outsl
ret
push
lcall
lahf
mov
inc
sbb
insl
subb
sti
lods
jl
dec
adc
adc
cmp
cld
cmp
jno
orl
mov
outsl
or
jnp
cmpsb
sbb
adc
inc
mov
lcall
xor
cli
pop
sarb
xor
sbb
cs
jge
aam
flds
call
fnstcw
jne
ret
pop
push
push
lcall
call
outsl
filds
fcmovnu
cltd
ret
and
js
out
jp
jl
xchg
out
dec
fsubrl
leave
pop
dec
fiaddl
shll
sbb
lods
or
imul
lret
pushf
popf
xor
ljmp
and
pinsrw
bound
int3
outsb
adc
cmp
dec
es
shll
lods
lods
in
cwtl
cmp
out
mov
cmp
movsb
push
lret
cmp
mov
xor
inc
in
or
mov
aas
add
lea
cmp
jno
mov
cmp
shlb
add
jecxz
jmp
mov
cmp
pushf
mov
js
ret
inc
aaa
into
xorb
push
clc
hlt
and
pop
and
ds
sbb
push
dec
xchg
pop
sbb
xor
dec
jnp
push
fcmovnbe
out
or
insl
mov
aas
xchg
test
add
add
emms
roll
mov
fcompl
aam
dec
xlat
mov
loop
fnstenv
aam
sub
xchg
dec
fnstenv
mov
push
inc
cli
arpl
or
jb
aam
in
ljmp
sub
add
ret
das
push
sub
sbb
gs
xor
jo
popa
fimuls
mov
add
and
mov
repz
and
addr16
test
push
dec
or
out
rcrl
js
inc
lock
cmp
dec
push
pop
dec
test
or
lret
jo
js
xor
push
in
js
inc
rcrl
scas
sarb
adc
and
sti
adcl
xor
xchg
push
hlt
inc
sub
int3
shlb
rol
std
xchg
and
sub
jbe
and
ds
push
lret
xor
clc
lds
add
fisttps
in
clc
xchg
xchg
les
dec
ja
aaa
iret
daa
jmp
mov
xchg
inc
xor
mov
push
clc
mov
mov
push
sbb
sub
xchg
push
lds
rolb
and
les
jne
shrl
lods
outsl
je
mov
idivb
and
xorl
mov
mov
push
pusha
ficoml
faddp
inc
xchg
adc
cltd
mov
push
add
lea
pop
std
xchg
mov
push
loope
adc
stc
outsb
aas
fpatan
jmp
push
push
sti
lahf
sahf
fstpl
rclb
jns
pop
jbe
ficoms
adc
ss
mov
repz
mov
sub
pop
sub
aad
sub
xchg
push
jp
jno
popf
jl
push
mov
mov
sub
adc
inc
push
imul
andl
icebp
push
insl
pusha
addr16
aam
xor
int
push
cli
mov
addr16
xor
xor
sbb
push
ret
adc
push
js
mov
pop
rclb
jnp
xchg
pop
mov
cmp
add
push
in
sub
jp
push
fbstp
inc
nop
push
bound
lea
jl
aas
sahf
mov
push
inc
or
std
inc
stc
fistpl
lds
adc
adc
mov
mov
dec
or
ficoms
xchg
dec
cmp
mov
rolb
mov
add
scas
andb
jo
mov
clc
mov
xor
jl
pop
sbb
out
or
push
mov
pop
jg
sbb
xchg
jne
xchg
mov
dec
xchg
jns
out
jle
std
ret
mov
leave
xlat
adc
aad
mov
popf
cwtl
jp
xor
dec
jg
sub
rorl
arpl
push
andl
dec
xchg
adc
jnp
xor
dec
cmp
leave
xchg
xlat
or
jp
sub
mov
movsl
jno
pop
jb
push
aas
imul
jae
out
inc
add
dec
mov
inc
lods
sub
movl
enter
sub
mov
pop
loope
stc
push
stos
incb
mov
pop
ret
into
adc
lcall
inc
jle
dec
inc
sub
je
push
inc
cmp
xor
mov
insl
push
xchg
lcall
sbb
cmp
mov
aam
jmp
ljmp
cli
in
or
dec
cmp
arpl
lcall
or
fs
repz
inc
cltd
bound
xor
sbb
test
add
ss
cmp
ret
xor
cltd
push
hlt
mov
nop
lcall
test
push
out
stos
xchg
sub
sub
int
outsb
pop
or
mov
sbb
mov
xchg
mov
sub
and
and
inc
popf
sbb
lea
hlt
mov
shl
bound
and
hlt
sub
adc
jl
mov
mov
cmp
jg
jne
cmp
lcall
mov
and
and
in
sbb
push
imul
scas
adc
and
pop
push
repnz
jl
jne
enter
out
lock
adc
mov
mov
fdivl
xor
cmc
into
or
scas
sti
cmp
xchg
daa
or
and
mov
outsl
push
mov
arpl
rcll
jns
ja
mov
int
ret
scas
fucom
fdivrp
nop
rcrb
push
xchg
sbb
ja
mov
xor
lcall
bound
scas
push
ss
sbb
xchg
sbb
add
mov
pop
clc
lahf
mov
rcrl
jb
jbe
sbb
xor
outsl
shrl
pushf
lods
outsl
or
add
xor
jo
sub
dec
fdiv
xchg
ljmp
sbb
dec
out
in
data16
cmp
or
dec
mov
pop
adc
dec
test
add
jl
adc
push
xchg
movsb
push
mov
xchg
mov
push
int3
int3
movsb
rol
add
adc
xchg
add
adc
int3
repnz
sub
xchg
ja
sbb
ljmp
popa
loope
fs
sti
jnp
xchg
notb
xorb
inc
loope
ds
imul
adc
inc
sub
xchg
pop
mov
dec
mov
xor
jnp
outsb
dec
adc
jle
aas
cwtl
push
mov
rcll
inc
inc
test
xchg
push
rcrb
add
jl
xor
jnp
idivb
lret
adc
popa
jnp
jmp
loopne
mov
jnp
pushf
xor
sub
sub
pop
mov
dec
inc
pusha
icebp
stos
insb
bound
cs
inc
sbb
divl
jle
push
cmp
sarl
inc
std
adc
pop
rorb
sub
cmp
pop
stos
add
cs
test
out
test
jmp
cmpsl
or
push
test
cld
stc
cmpsl
ret
subb
cld
repz
fnstcw
mov
leave
jne
mov
cmp
dec
xchg
in
jle
fwait
iret
pop
cmpsb
sti
repz
addr16
mov
sbb
adc
int
rcll
aas
enter
or
into
pop
jmp
pop
mov
mov
gs
stc
mov
lods
lret
rcrb
cmpsb
fidivs
push
in
inc
int3
ret
jne
scas
jmp
jnp
icebp
dec
sbb
fnop
mov
xchg
mov
pop
inc
in
rorl
in
push
test
xchg
push
lret
enter
mov
mov
pushf
nop
xchg
arpl
sbb
popf
mov
push
and
cmpsl
ja
in
mov
jmp
repz
add
sbb
jmp
idiv
lret
mov
add
shlb
jne
mov
repnz
mov
addr16
cmpsl
push
dec
jge
mov
test
icebp
fsubrl
out
jmp
es
jb
aad
mov
aas
std
dec
jl
out
sahf
mov
xor
stc
push
adc
cmpsl
dec
ficoml
xchg
mov
lret
fildll
xor
in
xor
popa
sti
xor
xchg
sub
lret
sti
xchg
and
jl
in
pop
call
dec
imul
xlat
inc
add
mov
pop
shrl
sub
mov
in
mov
add
pop
xlat
inc
pop
or
and
insl
lret
jecxz
or
push
and
add
mov
call
mov
add
in
ja
cmp
xchg
inc
xlat
add
jb
fsubs
xor
xor
mov
sub
aas
push
loop
pop
jge
repnz
shll
push
jl
out
fadd
xor
dec
call
push
daa
push
inc
test
fs
les
inc
jne
push
lcall
add
lds
data16
cwtl
rclb
fsubs
lods
xchg
dec
mov
jmp
pop
in
test
push
jae
or
pop
adc
pop
fwait
addb
sbb
je
fistps
adc
pop
and
mov
mov
sbb
popa
dec
xchg
test
cmp
or
jg
dec
cmp
rcr
in
cmpsl
push
lock
adc
jecxz
movsl
jno
or
or
ret
test
mov
mov
clc
repz
or
pop
outsb
idivl
scas
mov
add
sub
stos
pop
negl
inc
mov
ficompl
or
inc
sub
jmp
pop
push
push
js
std
pop
adc
out
or
movsl
andb
mov
or
add
cmp
ss
daa
push
aaa
sahf
out
arpl
jb
dec
dec
pop
insl
test
andb
cmpl
sub
mov
or
inc
and
jl
push
sub
mov
pop
adc
daa
jne
push
gs
in
sbb
hlt
fisubrs
aas
mov
out
call
mov
in
repnz
pop
jne
movsl
scas
inc
push
cmpsl
pop
mov
cltd
fnstenv
lock
xchg
shll
mov
or
leave
jbe
cmpsl
fwait
add
outsb
int
mov
lcall
mov
faddl
or
lock
inc
cwtl
inc
inc
jns
mov
mov
aam
jno
pop
bound
inc
mov
mov
sbb
sub
add
mov
stos
adc
add
in
or
addr16
jns
mov
cs
repz
cmp
leave
cltd
jp
stc
lea
lods
jl
sub
add
pop
outsl
cmp
insb
jmp
xchg
push
mov
sub
and
xor
mov
aaa
push
mov
movsb
sub
push
and
pop
mov
jnp
call
xor
adc
bound
pop
inc
xor
jb
mov
data16
fstl
lock
std
fistl
imul
xor
lahf
pop
ret
sti
in
popf
add
addr16
adc
cmp
sbb
add
push
and
jnp
or
arpl
mov
or
ljmp
cmc
mov
pop
sbb
cmpsb
xor
das
out
mov
or
shl
jns
scas
xor
sub
mov
es
shrl
arpl
loope
and
mov
das
lret
cltd
fmuls
dec
push
and
xor
xchg
mov
xchg
mov
and
jo
sub
jge
mov
dec
pop
repz
sarb
mov
shll
add
fprem1
test
push
push
ds
push
adc
fdivrs
xchg
leave
xchg
cmp
mov
sub
add
fimuls
jg
cmp
lahf
mov
push
cmpsl
xchg
mov
adc
jb
dec
push
adc
mov
sub
call
fxch
inc
fistl
xchg
push
scas
mov
xor
shll
xchg
stos
cmc
jb
out
ss
add
xor
and
push
pop
push
lods
sti
pop
mov
or
inc
and
nop
add
pop
dec
dec
jle
pop
mov
add
daa
sub
fdivrp
adc
roll
dec
icebp
dec
enter
popa
std
ror
jg
jne
sbb
jl
and
shr
mov
lfs
nop
adc
dec
negb
insl
dec
in
xor
adc
lods
or
and
loopne
fldcw
jle
push
lea
fldt
imul
icebp
mov
xor
or
push
mov
bound
xor
mov
pop
xchg
mov
adc
aam
push
lods
or
cmp
pop
insl
mov
popa
sahf
sarl
or
gs
inc
sbb
inc
pop
jo
xor
lret
add
adc
out
cmp
adc
jge
ret
ficompl
push
std
bound
add
sbb
mov
cwtl
push
or
jns
shl
push
ret
arpl
xchg
cs
pop
xlat
ljmp
int3
sub
mov
fcmovu
inc
mov
lahf
dec
inc
sub
or
popf
pop
imull
dec
add
fwait
dec
fs
dec
imul
mov
mov
dec
lods
pop
add
pop
pop
test
dec
jge
aaa
out
inc
inc
int
repz
xchg
mov
mov
push
pushf
dec
loop
aad
das
cli
xor
cli
xchg
mov
pop
inc
jg
ljmp
pop
cltd
or
je
add
mov
loopne
jo
les
aaa
push
push
ds
mov
out
mov
aaa
test
fnstsw
les
and
and
mov
xchg
pop
and
inc
pop
lret
vpshufd
scas
jmp
push
fdivrl
in
sti
out
lret
cmp
mov
std
addr16
shll
stos
fld
dec
pop
test
mov
jg
or
add
cmp
sti
mov
in
push
push
jne
cmp
push
daa
mov
repz
pop
or
mov
fisttpl
or
xor
add
arpl
add
lea
xchg
push
pop
mov
sub
in
imul
test
pop
push
in
ss
and
pop
add
inc
mov
xor
rcrl
add
iret
jb
mov
and
sbb
bound
ficompl
pop
and
addr16
lea
pop
mov
add
pop
lret
stos
or
xor
mov
push
into
xchg
mov
je
sbb
add
fistpl
sub
orl
je
aad
xchg
cmc
push
xchg
dec
inc
loope
inc
jp
nop
mov
mov
aaa
imul
fstps
jne
xchg
push
sub
cmp
fwait
mov
aaa
cmpsl
jle
xor
adc
xor
pop
mov
out
push
pop
mov
push
decb
add
sub
or
and
es
push
cmp
cmpsb
cmp
subl
test
fbld
jnp
lahf
faddl
inc
loop
out
test
xor
pushf
jl
popl
push
dec
pop
mov
push
jg
add
pop
pop
loop
ficoms
mov
mov
in
mov
xor
adc
movsb
add
pop
xchg
mov
nop
ja
mov
test
js
fucomp
mov
jo
and
mov
enter
test
adc
call
and
pushl
stc
mov
iret
dec
lret
cmp
in
add
shlb
repz
push
or
mov
xchg
mov
icebp
xchg
inc
roll
pop
push
ds
sbb
in
aas
adc
jle
fs
or
cmc
sbb
or
movsl
loopne
out
sub
dec
sub
sbb
lods
push
test
push
in
push
push
fisubrs
in
js
je
data16
mov
pop
push
jno
pop
icebp
aaa
jae
cmpsl
xchg
or
pusha
lret
jnp
mov
js
dec
imul
cmp
outsb
rorb
imulb
in
mov
imul
int3
dec
stos
pop
pop
out
es
out
addr16
jmp
cmc
sbb
mov
jae
sub
cli
pop
shl
cmc
or
imull
jnp
mov
movsl
push
sbb
xor
and
and
xchg
mov
lret
imul
cld
adc
pmullw
idivb
adc
enter
mov
out
test
mov
bound
pop
aas
add
mov
dec
inc
jne
lret
mov
scas
mov
fs
sbb
dec
jg
xchg
xchg
ret
sub
mov
lods
mov
das
mov
cwtl
out
icebp
stos
adc
jo
push
jg
out
mov
mov
dec
adc
je
pop
ret
aas
jp
fdivrs
outsl
pushf
cmpsb
fs
lods
mov
jp
jbe
or
aad
mov
pushf
xor
pop
jb
push
imul
and
iret
stos
stc
jae
nop
cmpsb
stos
sbb
mov
in
iret
lods
adc
push
out
cltd
mov
dec
repz
icebp
sarb
push
imul
lea
out
cmc
aam
push
ds
pop
lods
mov
arpl
sbbl
push
add
pusha
lcall
push
inc
mov
mov
in
repnz
xchg
out
cmp
inc
mov
inc
pusha
pop
mov
mov
out
imul
jl
shrb
cli
adc
push
stc
add
loopne
mov
adc
sbb
jne
jne
inc
jo
mov
std
inc
jb
sarb
mov
aas
jmp
loopne
mov
imul
add
into
pusha
cs
xlat
std
cmpsl
inc
lds
daa
jmp
fwait
xchg
js
loopne
cmp
nop
loopne
adc
repz
idivb
xorb
sub
addl
push
dec
xchg
xchg
fistps
ss
cmp
mov
out
rol
adc
mov
cwtl
popa
jmp
int
int3
cmp
pusha
adc
push
mov
test
testb
cmpsb
jo
and
mov
fisubl
pop
mov
cmp
ret
inc
cwtl
outsl
and
xchg
jg
mov
and
xchg
push
mov
in
mov
pop
ja
sbb
psubsw
lahf
or
adc
mov
inc
and
aam
inc
and
jne
sahf
inc
push
cmpl
add
push
jns
inc
push
pop
mov
dec
add
hlt
leave
cmp
pop
sarl
mov
and
int
or
fidivrs
push
repnz
fwait
stc
pop
jp
insb
mov
cltd
pop
sarb
lods
adc
test
inc
or
jnp
fcoml
mov
inc
xor
mov
pop
js
cs
adc
sbb
je
or
xchg
call
fistps
push
sub
stc
sub
pop
daa
push
icebp
hlt
adc
jge
imul
insb
leave
test
ljmp
inc
mov
adc
call
mov
lea
in
lret
fld
iret
sbb
iret
aad
dec
mov
addl
hlt
cmp
xor
push
in
sbbb
cmpb
lret
mov
mul
push
inc
shl
inc
loope
movsb
mov
iret
mov
sti
in
mov
mov
or
stos
mov
push
imul
and
add
popa
sub
sahf
or
loopnew
scas
ret
mov
or
daa
and
push
into
div
popa
ds
in
pop
xor
fists
push
aas
dec
in
pusha
fstps
shll
jl
xchg
jbe
fmulp
mov
int3
push
xor
cs
sub
xor
mov
out
int
push
adc
jo
int3
lahf
aas
test
cmp
mov
inc
push
xlat
rcrl
ficoms
mov
les
mov
sbb
lret
scas
scas
pushf
dec
cs
sub
cmpsl
outsl
push
dec
cmp
mov
imul
in
stos
xchg
test
sub
jae
xchg
insl
push
push
pop
inc
jne
or
inc
out
add
imul
jo
mov
push
std
fstps
xor
add
cld
andb
rcll
pop
and
push
data16
js
es
test
mov
sbb
aad
hlt
sbb
or
stos
jge
pop
rcrl
adcb
pop
test
lret
xlat
mov
aad
mov
mov
lods
mov
ja
mov
jnp
addr16
subl
pop
pop
lahf
mov
les
loopne
icebp
sbb
jp
push
pusha
dec
mov
ret
add
mul
iret
fistpl
adc
jo
mov
cmp
inc
jle
or
pop
int3
pop
lods
mov
ljmp
data16
xchg
fldl
out
jnp
popf
outsl
std
cmp
mov
aas
es
pusha
push
xchg
pop
test
add
sbb
mov
int3
cmp
lods
jns
in
adc
sub
push
testl
ja
sub
mov
cmp
xchg
pop
imulb
pop
inc
dec
push
xchg
adc
in
add
lret
pop
loop
adc
sub
data16
push
insb
mov
lcall
push
jle
daa
ret
or
loopne
subl
pop
cmp
push
lret
enter
lahf
lds
aas
jg
xor
sbb
mov
js
ds
shlb
inc
and
cmp
es
or
adc
pusha
in
lahf
adc
cli
xor
mov
leave
dec
jp
xchg
xchg
cmpsl
test
sti
xchg
cli
push
inc
push
ja
gs
out
xchg
fsubp
stc
push
test
xor
scas
shr
pushf
xor
pop
out
mov
and
call
in
xchg
pop
fisttps
xlat
gs
inc
push
pop
mov
xchg
out
mov
mov
ss
ret
int3
mov
pop
jp
add
mov
or
fucomip
jno
sub
pop
sub
add
scas
rcrl
shl
cmp
call
jle
xchg
cmpsl
dec
sbb
dec
jmp
fnstsw
xor
lea
mov
ret
jp
out
lock
jo
adc
leave
sub
jb
sbbb
rorl
insb
cmp
lret
pusha
pop
lods
sbb
les
dec
jno
dec
lret
jb
loop
pop
mov
cs
scas
ret
pop
sarl
mov
stos
add
fnsave
xchg
pusha
pop
push
enter
mov
mov
jle
mov
pusha
add
xchg
inc
jb,pn
pushf
adc
push
mov
lret
rorl
rcrb
jnp
sti
ret
in
jb
fwait
mov
mov
iret
scas
adc
movlps
dec
test
cmp
mov
rclb
mov
leave
hlt
inc
jl
sub
xchg
push
jnp
repnz
sbb
jle
fdivr
movsl
lea
cmp
in
andb
xor
in
jnp
dec
inc
xor
sbb
dec
mov
xor
dec
imulb
aam
popf
sbb
push
cmp
fwait
dec
loop
mov
mov
rcr
jg
fdivr
jmp
push
cmpsb
pop
pop
imul
mov
mov
sbb
mov
sti
sbb
in
in
addl
scas
ss
add
mov
and
mov
scas
aam
xchg
iret
repnz
sbb
xchg
xlat
loope
jne
out
xor
xchg
mov
popa
in
sub
hlt
arpl
pop
lock
inc
aam
mov
cmp
cmc
pop
popf
in
in
add
mov
mov
xchg
daa
jl
mov
pop
fcmovnu
adc
into
fisttpll
xor
xor
adc
mov
push
mov
push
mov
pop
push
xlat
inc
sbbl
test
jne
xchg
jb
xor
mov
fnsave
jb
popf
sbb
add
push
xor
mov
inc
inc
cmp
and
adc
les
jg
sarl
jo
push
push
jecxz
mov
cmp
push
add
jae
mov
mov
push
mov
inc
rcrb
pushf
jp
incb
mov
cld
mov
mov
xchg
pop
push
loope
scas
clc
ljmp
mov
scas
xchg
mov
dec
mov
stos
xchg
mov
push
ja
inc
inc
mov
sbb
ss
lcall
cli
shrl
jbe
rclb
test
outsb
test
or
fiadds
xchg
mov
jb
fadd
nop
jecxz
sbb
jo
outsl
mov
inc
movzbl
jge
aaa
mov
clc
mov
or
xchg
gs
vpsubd
sub
pop
mov
inc
rcl
fwait
mov
bound
addr16
fmull
inc
rcrl
sbb
out
in
pushf
aam
roll
pop
lea
loope
mov
ret
insb
imul
nop
sub
and
sub
pop
mov
cmp
lds
in
loop
je
scas
mov
and
or
mov
mov
rolb
mov
sub
and
loop
loope
repz
adc
lahf
jno
mov
inc
mov
popa
into
clc
jnp
ds
aad
test
sbb
xor
sbb
mov
mov
cmp
push
into
mov
sub
add
push
daa
push
sbb
push
xchg
mov
aam
jbe
int3
lret
ljmp
xchg
jno
icebp
into
popf
shll
call
cmpsl
dec
mov
or
dec
idivl
pusha
add
in
shrd
mov
push
or
cmp
xchg
shll
and
leave
shrb
sub
add
out
loop
push
cmp
jb
push
rcl
rcrb
push
lret
popa
jg
cmp
and
movsb
cmc
inc
and
dec
xchg
jg
enter
sub
pusha
mov
inc
and
push
imul
xchg
mov
aad
push
outsl
xchg
pop
sub
push
lock
jno
lret
loope
inc
mov
inc
jg
cmp
dec
sub
xor
mov
inc
in
cmpsb
mov
in
jne
xchg
or
ret
mov
hlt
sub
dec
stc
mov
xchg
pop
clc
adc
dec
xchg
in
cld
pop
mov
shl
or
sbbb
int
loope
movsl
je
inc
popa
dec
jl
add
stos
pop
add
lret
cmp
dec
or
andl
mov
aam
out
hlt
xchg
push
jg
dec
dec
or
pop
adcb
push
ret
xorb
adc
jecxz
cmpsb
andl
scas
mov
out
loop
fcoml
lret
xchg
pusha
or
stos
andb
mov
adc
lock
sbb
sti
out
sub
outsb
sub
sbb
push
mov
or
sbb
pusha
mov
mov
and
xchg
clc
jbe
jecxz
ljmp
inc
add
mov
push
sahf
dec
mov
sbb
lret
xor
cwtl
lahf
pop
adc
pop
lds
and
daa
test
add
and
mov
mov
or
aad
ret
pushf
jp
push
and
push
outsl
xor
dec
adc
lret
lock
pop
xor
pop
adc
fs
xchg
pusha
addr16
shll
or
aas
sti
pop
add
fdivs
ret
jns
jge
dec
mov
ljmp
imul
std
jae
jno
sub
xchg
cmpsb
sub
cld
lea
sub
cmp
cmp
fsubrs
ja
jecxz
mov
mov
dec
adc
push
aad
mov
and
sbb
loopne
cmp
mov
icebp
pop
xchg
jl
jge
cmpsb
and
push
mov
push
push
adc
aaa
xchg
sbb
mov
cwtl
movsb
push
fildll
push
mov
shll
ja
int3
clc
xchg
xchg
inc
dec
sbb
mov
mov
ffreep
xor
inc
mov
cs
rorb
push
or
repnz
ss
jmp
sbb
sbb
lret
es
pop
ret
sub
int
outsb
jle
jnp
int3
sbb
cld
hlt
in
cmpsb
decl
loop
adcb
cld
mov
push
fisubrl
mov
fwait
or
pop
and
stos
xor
leave
jmp
cld
adc
xchg
outsl
xchg
pop
inc
mov
insb
fcoms
int
mov
xchg
out
xchg
jg
cld
das
jno
dec
or
sbb
imul
ds
or
das
cmc
fldenv
shlb
aad
pop
in
and
es
imulb
lcall
push
ja
punpcklbw
mov
xchg
sub
lea
pop
jne
xor
in
jnp
mov
mov
pextrw
daa
pop
mov
ljmp
cli
shll
inc
out
jmp
sbb
cwtl
pop
lcall
jnp
les
inc
lret
ljmp
aaa
fcompl
enter
cs
and
lock
aam
xchg
cltd
popf
mov
mov
cmp
xor
jno
out
imul
arpl
adc
sbb
lahf
jb
outsb
and
push
rorl
and
pop
cwtl
lock
int
int3
cmp
push
dec
enter
test
pop
lock
neg
div
es
pop
adc
mov
jo
push
repnz
pop
jne
xor
out
xor
sbb
and
popa
lcall
adc
jns
or
inc
out
fisttpl
repz
scas
and
push
pop
pop
mov
clc
dec
loop
jns
test
pop
fs
sub
adc
cmp
test
add
pop
mov
dec
xor
push
mov
pop
and
add
push
adc
call
clc
shrl
mov
mov
daa
add
adc
btl
xor
popf
int
daa
call
pinsrw
pusha
shrb
and
inc
push
inc
cld
adc
inc
dec
dec
int
adc
or
mov
lods
push
mov
cmp
sti
or
dec
leave
rolb
dec
lock
imul
stc
sbb
jmp
shll
jnp
rclb
outsl
aaa
pop
aad
mov
popf
jmp
jb
pop
mov
mov
stc
jl
add
scas
fsubrs
fisttpl
rorl
push
mov
jbe
icebp
push
jnp
push
jnp
push
rcll
xor
sbbl
or
fs
ds
push
outsl
and
and
mov
lea
sub
push
add
add
pop
bound
pop
cmc
repnz
das
jg
pop
sahf
hlt
ss
add
adc
mov
mov
mov
and
jnp
add
data16
fsts
adc
sbb
cs
push
stos
movsb
mov
test
or
mov
sub
in
xchg
aaa
out
lea
jae
mov
lahf
push
insl
aas
adc
fisubs
outsl
sub
cli
xor
test
push
cmp
ja
push
jno
test
or
mov
pop
mov
jbe
in
cmp
shlb
push
and
xor
lds
repnz
xor
xchg
dec
cld
ret
add
dec
cltd
push
scas
test
pop
inc
sbb
push
xchg
lret
push
mov
imul
add
sbb
sbb
adc
ror
subb
je
inc
popa
popl
cmp
lret
sti
mov
imul
mov
popa
insb
outsl
add
adc
mov
int
sbb
cltd
ljmp
jae
push
imulb
lods
mov
loopne
jae
jg
cmp
idivl
leave
pop
std
movsb
jo
scas
xchg
mov
add
mov
sti
dec
mov
add
fiaddl
pop
push
xchg
mov
mov
jmp
movsb
jecxz
subb
mov
fistl
in
cmc
cmp
xchg
mov
mov
das
fdiv
sbb
ret
addr16
cmpsb
repnz
fwait
imul
inc
out
insl
jo
xlat
cmp
ds
and
xchg
xchg
ds
mov
push
and
adc
push
jo
xorl
in
repz
inc
pop
stos
adc
mov
pop
cmp
pop
dec
mov
out
cmpsb
pop
cmp
popf
pop
lahf
aam
pcmpgtb
push
xchg
xchg
orb
xchg
cmp
shll
out
dec
sbb
adc
or
jnp
ss
cli
out
or
inc
xor
bswap
test
ljmp
hlt
dec
cmp
pushf
cmp
sbb
cmp
je
fldl
adcb
clc
inc
cmp
push
or
mov
mov
jg
aad
add
sbb
add
push
ds
jmp
insl
jge
mov
int
popf
enter
xchg
je
cs
bound
or
leave
mov
fstp
rorl
xchg
lds
sbb
into
mov
insl
dec
push
xor
xchg
xlat
inc
clc
push
jmp
pop
mov
hlt
mov
cmc
shr
mov
xor
sarl
stos
push
pop
imul
aad
cmpsb
sahf
push
popa
or
mov
cmp
jo
mov
iret
jle
test
daa
roll
std
jo
push
xchg
nop
dec
out
outsb
lret
mov
or
xchg
je
popf
sbb
mov
add
sub
icebp
in
cmpsb
loopne
inc
mov
sbb
sub
or
enter
movsb
dec
repnz
jmp
mov
pop
xchg
in
mov
ret
in
jbe,pt
xor
mov
add
and
int
std
out
loop
rcrb
xchg
lock
inc
int3
imul
sti
pop
mov
push
jmp
clc
inc
dec
mov
int
xlat
test
pop
pusha
push
aas
sahf
pushf
insl
hlt
inc
mov
ds
sub
mov
rcr
rcl
bound
push
dec
stos
xorb
test
rolb
xor
stc
sub
fs
jmp
push
jbe
add
mov
dec
rorl
stos
clc
loope
and
inc
cltd
mov
test
push
ja
mov
jnp
and
enter
push
pop
cltd
insl
lock
xchg
fsubl
add
pop
ljmp
fnstenv
in
jmp
mov
adc
mov
bound
mov
dec
sbb
cwtl
cld
dec
pushw
or
iret
iret
jp
ficomps
out
arpl
mov
xchg
and
sarl
and
lcall
mov
jae
fmul
dec
xor
movsb
mov
rorl
sub
sbb
push
dec
mov
rep
xor
add
dec
mov
jbe
sub
stos
iret
pop
enter
mov
test
and
inc
sub
adc
inc
push
sub
dec
or
jle
int3
jmp
mov
lret
jns
or
push
push
outsl
divb
xchg
imul
lods
test
fiaddl
pop
mov
fs
aad
pop
and
pop
inc
lcall
orl
mov
push
testl
xor
scas
enter
fs
mov
popf
out
jbe
mov
shlb
inc
mov
outsl
inc
jae
int
pop
jl
pop
pop
push
pop
ds
imul
pop
je
mov
scas
lahf
xchg
inc
jno
and
shlb
ret
or
aam
jne
fs
aas
push
rcl
inc
mov
lcall
ds
fwait
repnz
lock
push
adc
fstpt
gs
push
xor
add
add
lahf
repz
cli
repz
popf
inc
jno
scas
outsl
adcb
cmp
and
cmp
pop
xchg
add
pop
push
dec
dec
mov
inc
mov
push
lahf
mov
sar
xchg
dec
inc
nop
mov
js
out
ret
pop
pop
jl
sub
xor
scas
and
cmp
mov
mov
and
pop
adc
loope
mov
fidivrs
fmul
push
test
data16
pop
sarb
sub
mov
cmp
jnp
lods
js
cltd
mov
leave
mov
in
jge
inc
inc
add
jae
enter
sub
mov
lret
xchg
sbb
je
aam
cmp
loope
mov
imull
in
out
stc
orb
add
cmp
cmp
notb
outsb
dec
or
roll
lods
mov
ss
stc
or
out
clc
fxch
ds
add
pop
sub
dec
sub
adc
sbb
test
push
test
push
or
add
stc
call
xchg
bound
imul
xchg
loope
and
sbbb
stos
lock
repnz
xorb
ret
cmc
les
shl
lods
insb
jb
shll
mov
lock
push
sub
aas
shll
mov
adc
pop
jp
add
int
cmpsb
gs
sahf
shrb
jbe
or
dec
mov
mov
inc
push
das
scas
pop
mov
sub
mov
lcall
adc
xchg
mov
in
xchg
xchg
lcall
mov
push
adc
inc
dec
sysret
adc
mov
out
xchg
and
xchg
aad
cmp
mov
xchg
xchg
xchg
cmp
test
pop
lahf
pop
mov
adc
lret
int
mov
enter
jecxz
cmp
aas
pop
lret
or
test
test
push
or
mov
sub
imul
jl
insb
jae
enter
push
lock
cli
out
call
mov
or
inc
nop
adc
dec
pop
mov
fldt
scas
sbb
push
dec
or
sub
call
adc
les
dec
sub
lea
sbb
inc
xor
and
rorb
xor
xchg
daa
add
inc
mov
sub
add
cld
jp
pop
roll
cmc
cmp
sub
mov
sub
add
sbb
test
jno
or
lods
into
sub
fwait
cld
pop
xchg
ljmp
cld
mov
das
mov
inc
and
mov
ret
das
xor
cs
jbe
mov
notl
nop
test
pushf
cltd
push
add
out
sbb
push
data16
xlat
loopne
fildll
pop
aam
pop
mov
daa
sbb
and
or
mov
or
xor
outsl
dec
mov
sahf
dec
test
xchg
lcall
sub
pop
jnp
pop
inc
loope
lret
jg
mov
scas
xchg
sbb
xchg
pop
movsl
cmp
data16
dec
or
lret
pop
out
out
or
insb
cmp
leave
mov
test
popf
popa
lcall
mov
insl
xor
dec
addb
lods
loopne
jge
or
xchg
sbb
pop
mov
movsl
nop
push
leave
sbb
xor
iret
mov
cmp
jno
push
jb
push
push
ret
pop
lret
sbb
mov
dec
mov
push
imul
push
mov
push
xchg
mov
mov
gs
sub
notb
or
test
ja
dec
cmp
test
sbb
jno
adc
adc
out
shrl
mov
fadds
pop
adc
and
les
xor
outsl
dec
leave
ljmp
int
aaa
mov
test
idivb
sbb
dec
inc
test
push
fwait
pushf
sbb
xchg
rcrb
jbe
pop
sub
and
lret
adc
stos
fwait
lea
cs
imul
dec
sbb
or
dec
hlt
js
jg
das
and
sub
lcall
cmpsb
add
into
sub
stos
and
jg
push
nop
xchg
fwait
xor
sar
sti
fstpl
adc
lods
daa
mov
outsl
xor
sbbb
mov
filds
aad
inc
scas
daa
movsb
add
inc
into
dec
add
or
cmp
ds
push
mov
push
outsb
cmp
frstor
les
mov
xchg
mov
fiaddl
ficoms
lock
jb
and
mov
scas
mov
mov
adcl
push
call
cli
lret
and
sbbb
mov
test
lods
jae
xor
clc
add
push
outsl
inc
int3
cmp
loopne
add
sbbb
cmp
dec
and
inc
divl
cmp
and
dec
fsts
ja
icebp
mov
out
lahf
push
mov
enter
mov
dec
ljmp
popa
push
scas
mov
test
in
mov
rol
xlat
cld
stos
clc
or
mov
gs
hlt
cld
lcall
inc
test
std
es
inc
ret
aad
movsl
xchg
aam
pop
pop
inc
arpl
mov
in
or
or
lods
in
jno
aad
inc
out
mov
or
xchg
ficoml
icebp
adc
ds
jne
push
pop
cmp
xchg
mov
push
xchg
in
or
cld
dec
xchg
xor
dec
and
shlb
and
sub
sbb
xchg
xchg
cmp
scas
or
hlt
cltd
jg
pushf
mov
js
out
in
xor
or
dec
movsb
mov
push
cmp
cmc
jmp
adc
aam
leave
push
fisttps
or
jp
add
imul
and
rcrb
or
addl
xor
xor
outsl
cmp
test
cltd
es
lahf
and
add
adc
les
arpl
cmp
cmpsb
sar
jge
xor
int
xchg
dec
mov
divl
mov
shll
mov
mov
test
sbbb
loop
add
in
mov
jb
hlt
bound
out
bound
mov
xor
pop
and
das
mov
xlat
pushf
out
mov
mov
loop
in
xor
mov
mov
xchg
cmpsb
clc
add
sub
xor
or
dec
adc
filds
xor
sbb
mov
xchg
xor
cmpsl
movsb
add
test
xor
push
ffreep
stc
pop
test
cltd
cmpsb
test
rorb
mov
jmp
sti
fists
test
popf
out
cltd
outsb
dec
lcall
push
testb
ja
inc
repnz
mov
icebp
rcll
xlat
aas
bound
mov
ljmp
les
cmp
arpl
mov
aam
lret
std
stos
in
xchg
jg
std
std
dec
pop
pop
outsb
xlat
xlat
cmpsb
iret
push
adc
adc
decl
jg
pop
pop
ucomiss
call
in
gs
std
fstl
mov
out
mov
and
add
jbe
lods
sub
repnz
mov
mov
mov
dec
enter
loopne
sbb
cmc
mov
fstps
push
mov
inc
loopne
push
loopne
push
and
sub
jno
inc
lods
bnd
pop
inc
jno
xchg
sub
xchg
push
push
mov
popw
testl
jp
loop
popf
sbb
pop
push
pop
mov
cmp
cltd
rolb
xchg
dec
clc
stos
cltd
jmp
cltd
sarb
ficoml
popa
push
repnz
lahf
xor
add
mov
mov
enter
or
es
shl
jb
dec
xlat
movsl
and
push
in
imul
push
in
jmp
jno
mov
shll
lahf
mov
sbb
shll
xor
test
fs
push
int3
movzbl
jns
out
scas
sbb
and
stos
cmp
in
mov
sub
add
int
cmp
test
test
jno
add
adc
mov
add
bnd
cmp
dec
fdivp
cmp
inc
or
jl
jmp
add
hlt
mov
idivl
int
inc
movsl
sahf
jge
mov
mov
iret
inc
cmp
mov
adc
aas
pop
push
lret
das
test
lods
cmc
ret
sti
pop
aad
daa
scas
test
insb
data16
jne
pop
sbb
mov
jge
call
push
inc
jne
mov
data16
inc
imul
mov
outsb
out
cmp
ror
out
push
mov
adc
mov
mov
dec
xchg
xchg
inc
cmp
ret
dec
jg
adc
repz
outsb
lret
out
jae
fdivl
mov
sbb
lea
sub
adc
sbb
ljmp
xor
out
stc
fbld
rcrl
fwait
adc
dec
push
mov
mov
sub
sbb
bound
into
mov
or
fs
imul
adc
xchg
xor
jl
xchg
hlt
js
mov
rorb
pop
push
cmpsl
push
and
aad
outsl
xchg
add
adc
popf
loopne
fwait
mov
mov
leave
add
lcall
shlb
xor
sub
mov
adc
rcrb
int
out
dec
push
shrb
loop
pop
sub
sti
into
xor
mov
repnz
sub
cwtl
fnstcw
insb
dec
sbb
imul
push
int3
mov
pop
pop
push
xor
inc
push
cld
cmp
popf
push
cmp
fiaddl
in
cmpsl
and
ljmp
out
mov
cmovne
mov
push
lahf
add
js
aas
daa
outsb
dec
imul
jecxz
inc
data16
cmp
pop
in
cmc
mov
loop
xchg
mov
andl
xor
clc
stos
xlat
lea
fdiv
add
leave
cld
mov
lock
xchg
outsl
loopne
cld
xchg
mov
or
or
jg
mov
xchg
loope
std
mov
push
push
or
popfw
pop
mov
lret
aaa
pop
adc
xor
lods
adc
test
and
in
push
inc
adc
adc
mov
mov
cmp
loop
movsl
dec
push
fcoms
loop
mov
xchg
fldenv
out
repz
lcall
sbb
test
gs
arpl
ret
cmp
and
movsl
mov
or
ds
fwait
aaa
popf
and
or
int3
add
insl
divb
xor
cmc
xor
add
and
dec
sbb
pop
pop
shlb
fbld
je
pop
out
ret
imul
xlat
rcrl
addr16
push
std
outsb
iret
or
das
mov
inc
xchg
sub
std
fwait
lea
inc
push
push
iret
cltd
lahf
gs
les
int
loopne
bnd
mov
fs
cmp
jno
xchg
aad
les
push
fisubs
mov
inc
mov
lret
movsb
out
add
or
daa
jns
push
jmp
add
inc
lret
mov
cli
adc
push
dec
aas
and
sbb
jge
inc
incb
or
in
inc
js
or
cmp
lock
push
addl
out
pushf
ljmp
lods
cmc
call
nop
and
shll
add
pop
mov
and
mov
mov
fstpt
mov
out
js
stos
fsubrs
jge
inc
lods
adc
fdivp
pop
stos
mov
push
insb
popf
jo
arpl
adc
fdiv
pop
or
orb
or
sbb
ja
loopne
push
cmp
mov
sub
inc
es
insb
rcl
lock
or
rclb
repz
das
mov
dec
ljmp
test
or
ret
pop
das
ljmp
lcall
enter
sbb
cwtl
not
shl
mov
inc
cld
fmuls
arpl
mov
push
mov
sub
sub
incb
negl
cmpsb
mov
add
fstpl
push
hlt
xchg
stos
daa
mul
jg
pop
lds
fcmovu
mov
add
jno
xor
mov
lahf
imul
adc
push
fildll
int
or
pop
or
jg
fs
cmpsl
dec
push
jb
stc
sub
call
jae
rol
decb
js
jl
dec
mov
scas
add
fisttpll
inc
cmp
insl
lret
pop
stos
or
push
je
lcall
and
push
das
aaa
jno
pushf
or
pusha
dec
mov
inc
js
and
add
insb
push
push
out
jno
push
inc
test
ss
es
and
lods
jl
ja
mov
shlb
and
sub
sbb
flds
pop
cmp
jmp
ds
pop
sub
testl
mov
add
xchg
es
aas
add
push
cmpsb
pop
cmp
hlt
lods
enter
lods
scas
lods
xchg
jnp
loop
pop
sub
out
sub
fldcw
testb
shrl
or
into
dec
aas
in
or
out
xor
dec
xchg
mov
push
imull
add
lock
ficompl
adc
mov
notb
in
insl
mov
sti
xchg
test
jmp
gs
sti
xlat
or
pop
ds
xchg
mov
xor
dec
sbb
mov
or
pop
xor
push
fnsave
sbb
inc
sarb
int3
frstor
imul
out
mull
mov
shrl
and
aam
repnz
jbe
push
arpl
adc
adc
jmp
adc
test
lds
cwtl
push
and
or
lcall
jl
push
xorb
xor
ss
scas
xchg
scas
adc
mov
repnz
mov
cmp
les
mov
int
cltd
loop
loope
inc
test
push
sahf
sub
fwait
popf
jecxz
mov
pop
or
add
ds
movsl
push
jb
sub
scas
daa
push
sub
add
into
shll
xchg
or
cmpsl
push
std
adc
lret
jae
push
jg
add
testl
out
jp
push
popf
test
hlt
adc
sbb
push
int
cmc
ret
and
decl
sti
int
mov
es
sti
add
mov
push
ficomps
xlat
rorb
outsl
loope
mov
divl
out
iret
add
add
push
jl
sbb
jmp
jle
andb
lds
or
inc
jecxz
cmc
lret
cli
movsl
hlt
not
xlat
fisttps
xchg
cmp
push
sub
push
add
inc
sub
inc
test
mov
sub
mov
fdivrl
lods
cmpl
xacquire
adc
mov
cmp
cmp
and
les
sbb
insl
or
leave
xchg
ficoms
popa
sub
xor
data16
sarb
mov
inc
adc
cltd
push
or
int
xchg
fsubrs
inc
cli
roll
and
or
idivl
or
cltd
adc
adc
sti
je
fistl
iret
pop
add
outsl
ds
mov
jg
jle
out
lds
or
lea
pop
fisttpll
sbb
sub
sti
movsb
sub
xor
ret
mov
fistps
pop
adc
jbe
xchg
sub
stc
jbe
rclb
dec
add
xlat
gs
sub
jae
mov
std
sbb
mov
jp
subl
or
in
es
pop
lods
mov
aad
ret
shlb
jp
fadd
insl
insb
pop
sarl
fidivs
jecxz
jno
sti
pushf
sahf
shl
inc
movsl
or
aad
mov
inc
outsb
add
xchg
test
test
jmp
jns
mov
jg
outsb
in
add
out
sbb
pop
jle
int3
dec
xchg
lods
mov
sbb
push
push
sub
jnp
es
pop
pushf
jbe
mov
push
push
mov
sub
in
outsl
inc
idiv
test
sti
lea
xchg
insl
mov
test
fwait
lsl
fnstsw
cmp
and
xor
jmp
stos
xor
cli
rcll
xor
cmpsl
adc
cmp
stc
loope
sub
int
pop
cmpsb
pop
nop
mov
cli
mov
lods
jmp
sbb
in
rcrl
sbb
xor
sahf
test
sub
adc
movsl
scas
cmpl
call
imull
inc
or
push
pop
push
subl
fwait
test
hlt
sar
lret
dec
inc
pop
mov
pop
dec
xor
jae
jne
mov
cld
cmp
jne
pop
aaa
ret
outsl
lods
mov
add
cmp
test
push
fsts
mov
pushl
fldt
or
out
imul
xor
sti
push
and
sub
mov
fbld
sub
and
popa
push
icebp
push
adc
and
fwait
add
sub
enter
mov
sti
and
push
inc
ljmp
cmp
imul
pusha
lea
or
outsl
shll
loopne
dec
xchg
loopne
lds
and
add
sbb
inc
cwtl
add
push
xchg
shlb
test
idiv
push
movsl
dec
xlat
iret
push
nop
jnp
movsb
imul
mov
mov
pop
mov
pop
add
mov
imul
adc
push
rorl
ljmp
ljmp
or
popa
mov
pop
lcall
add
adc
push
test
pop
xor
jno
mov
push
cmpsb
inc
cltd
das
sbb
loopne
mov
mov
jnp
xor
push
cmp
cmp
or
aaa
mov
push
incl
jae
push
mov
mov
and
jmp
scas
ret
fmul
sub
fwait
mov
inc
negb
and
cmpsb
pop
xchg
pop
and
inc
int3
movsl
mov
inc
insb
jns
inc
aaa
push
mov
cli
mov
mov
sub
ret
shlb
cmpsl
add
lcall
add
popa
icebp
mov
fmull
imul
or
pusha
mov
lods
fwait
inc
fists
in
and
scas
push
cmp
out
sub
mov
ret
es
pop
pusha
sub
cmp
mov
stos
clc
scas
les
lret
jnp
pop
lret
add
movsb
mov
fiaddl
and
adc
jb
push
cli
iret
dec
mov
sbb
mov
ja
enter
mov
cmp
xchg
xor
mov
and
xchg
adc
adc
cltd
push
cmp
dec
fldl
nop
inc
stc
sbb
mov
rolb
or
ljmp
imul
cmp
fisttpl
push
mov
gs
mov
in
push
cmp
xchg
push
hlt
in
out
push
shl
ja
pushf
stos
jl
mov
popf
ljmp
xchg
push
push
ror
leave
push
mov
bound
jns
pop
and
imulb
mov
lahf
das
adc
std
add
sub
add
jp
add
pop
add
pushf
sbbb
mov
fildl
setno
mov
insl
ret
jns
mov
cltd
arpl
inc
adc
inc
dec
lcall
adc
pop
je
cmpb
rcll
mov
repnz
lods
jb
out
or
mov
and
pusha
inc
movsb
sbb
jo
fwait
pop
cltd
js
or
xorb
scas
call
aas
push
or
test
mov
push
inc
sbb
rolb
das
ja
mov
jmp
std
test
mov
daa
rorb
out
cmp
push
jp
jle
mov
je
notb
stc
js
aaa
push
mov
inc
dec
dec
or
or
or
jge
cmpsl
cmp
fcmovb
mov
and
lahf
in
lret
xor
cwtl
adc
mov
xchg
inc
push
xchg
or
mov
test
inc
mov
fldcw
sub
adc
mov
js
fbstp
sbb
or
sti
aas
imul
stos
pop
test
pop
dec
rorb
jno
jbe
les
out
dec
cmp
ficoml
test
pop
stc
das
call
data16
mov
add
test
cmp
mov
repz
out
mov
ljmp
pop
in
inc
cli
lea
mov
sti
jl
data16
movsl
lea
popf
test
imull
lcall
push
in
fwait
push
out
das
les
or
addr16
mov
mov
faddl
mov
jo
int
jno,pn
cmp
xchg
insl
add
or
push
cmp
mov
add
xlat
or
xchg
add
fcomps
xlat
loope
fbstp
fnsave
lret
test
inc
test
leave
pop
and
das
icebp
jle
lds
ret
inc
roll
cmp
pop
imul
jnp
push
push
push
add
insb
mov
cmpsb
and
dec
sub
xchg
sarl
adc
add
test
jbe
ja
jnp
lcall
addr16
lret
fsts
movsb
push
mov
sub
push
dec
hlt
and
icebp
add
or
loope
add
cltd
lods
push
xchg
mov
jno
int
dec
dec
notl
jne,pn
cmp
in
das
nop
xor
sub
jnp
xor
daa
fsubs
dec
push
les
add
cld
pusha
xchg
fisubrl
mov
cld
jns
push
mov
pop
sbb
testb
sti
jae
repz
xor
dec
mov
jns
add
cmp
push
mov
pop
enter
ret
xchg
insl
insb
add
in
push
fisubl
sbb
push
or
mov
pop
push
push
mov
pop
scas
or
push
push
icebp
in
xchg
je
shr
pop
scas
cmp
arpl
adc
fscale
rorl
xchg
or
popf
jnp
pop
loope
xlat
and
jg
mov
dec
pop
xor
test
mov
push
mov
xor
out
xlat
int3
and
inc
inc
jge
lock
aam
fwait
test
les
lods
aas
add
xchg
shlb
shll
jg
dec
into
inc
jbe
js
in
mov
aam
cmp
ljmp
jmp
inc
shrb
test
inc
int
mov
das
rclb
xchg
pop
cvtps2pi
rorl
js
cltd
imul
lods
dec
addr16
enter
xchg
jmp
repz
outsl
add
daa
aaa
mov
mov
cmpsb
or
cmp
add
cmp
sbb
loopne
into
daa
and
scas
mov
iret
xchg
mov
jmp
imul
mov
test
jg
lods
add
or
xchg
sub
mov
and
mov
fsub
xchg
jne
mov
sub
jge
inc
and
out
bound
int3
inc
sahf
rol
mov
jns
mov
push
fucomip
js
ret
fwait
mov
sbb
aam
cmp
and
mov
sarb
int
pop
push
xor
xor
sbbl
sarb
ret
sub
std
pop
int
xor
adc
jmp
mov
stc
sub
mov
out
mov
fwait
and
cs
out
mov
fnstenv
or
test
je
imul
repnz
addb
jno
int
stc
iret
xchg
xchg
push
divl
xchg
je
icebp
repz
in
inc
test
fldl
sarb
mov
xchg
cmpsl
imul
cmp
cs
fisubrl
and
inc
decb
insb
cmp
icebp
js
and
add
sub
ret
dec
ret
sub
sub
int
mov
shl
fwait
xor
sbb
and
mov
fnsave
push
push
jmp
or
insb
mov
repz
lret
inc
test
push
popf
cmp
icebp
mov
jle
jno
xchg
xchg
inc
pop
stc
shll
scas
inc
icebp
in
mov
dec
dec
or
xor
bound
cmovp
pop
lcall
scas
push
adc
sbb
push
jno
test
sub
outsl
cwtl
mov
in
lret
xchg
out
pop
or
inc
add
inc
ds
in
addr16
aad
add
adc
lods
push
push
rolb
rcrb
and
push
add
hlt
sub
imul
data16
insb
ret
sbb
jmp
pop
push
add
es
arpl
andl
sub
add
dec
divb
scas
fmuls
ljmp
in
icebp
pop
es
mov
pop
or
loope
mov
inc
pop
pop
sub
xor
pop
dec
push
inc
dec
imul
je
int3
in
shlb
and
loop
mov
adc
aas
or
or
icebp
in
mov
lods
loope
loope
repnz
mov
inc
pop
jns
imul
push
in
nop
push
fxam
cmp
xchg
lcall
cld
fistl
hlt
mov
inc
mov
jmp
inc
jno
jns
inc
in
add
arpl
xchg
lods
out
mov
pop
lcall
out
jae
aam
out
inc
int
jecxz
pusha
push
push
fcmovnb
cmc
mov
pushf
inc
inc
add
sbb
mov
jg
jl
jecxz
mov
inc
push
push
scas
adc
unpcklps
mov
add
inc
daa
push
shlb
fisubrs
mov
mov
lods
cmp
mov
adc
adc
mov
fcompl
adc
mov
pop
mov
cltd
in
dec
out
or
loop
lods
or
pop
push
daa
pop
cmc
pushf
xor
xchg
daa
push
arpl
mov
outsl
sbb
sub
add
mov
adcl
cmp
inc
adc
stos
daa
addl
in
mov
lcall
and
ja
cmp
jae
test
pavgw
cmpsl
outsb
fisubrl
shrl
jmp
cmc
xchg
add
xor
add
sbb
and
push
data16
adc
loope
addl
jg
incb
imul
popl
cmp
andb
ss
push
sbb
stos
pop
push
and
jbe
in
sub
cmpsb
imul
jmp
movsb
test
stos
push
jg
mov
dec
lcall
and
xor
shl
mov
and
clc
not
xor
mov
fsubrs
push
cltd
data16
mov
ret
lahf
lea
fmuls
jns
ds
adc
test
imul
iret
aam
jecxz,pt
sbb
sub
push
sbb
lcall
dec
imul
and
or
ret
adc
out
inc
inc
outsl
bound
jge
shll
pop
fs
sbb
push
call
adc
sbb
dec
sbbb
cs
pop
fmuls
jecxz
loopne
cmp
fcomps
sbb
enter
std
jno
ljmp
hlt
shr
pop
push
jmp
push
les
sbb
cs
cltd
pop
add
movsl
inc
in
inc
jo
xchg
add
push
cmpsb
lock
xor
imul
mov
fsubs
jl
icebp
in
bound
addl
outsl
mov
sbb
mov
mov
and
pop
xor
das
cmp
imul
cli
push
sub
out
sub
xchg
push
js
pop
cmp
inc
les
mov
lret
das
jmp
cmpsb
mov
nop
mov
loop
lods
lcall
push
push
flds
sub
mov
xor
repnz
xor
fidivl
cmpb
xor
mov
iret
add
mov
xchg
or
push
mov
mov
pop
out
clc
mov
movsl
arpl
jge
scas
cmp
in
popf
mov
pop
sbb
mov
inc
xchg
stos
imul
mov
call
cmp
cmp
jp
adcb
adc
daa
push
sub
xor
sub
pop
sub
fninit
jo
or
int3
cmp
inc
dec
inc
nop
cmp
sub
xchg
mov
inc
js
test
mov
pop
stos
movsb
push
cmp
insb
or
cmp
outsl
repz
fwait
cwtl
and
cmpsb
test
mov
or
loop
daa
imull
sbb
pop
hlt
xor
inc
add
insl
movsl
sar
sbb
nop
aaa
adc
sbb
pop
faddl
lcall
pop
pop
popa
xor
pop
jmp
nop
mov
icebp
pop
xchg
jmp
jl
rcl
mov
mov
cmc
jmp
rorb
stos
mov
cwtl
aaa
and
jb
inc
lods
add
add
push
mov
stc
pusha
mov
notl
andb
mov
pushf
jb
mov
std
loop
sbb
sub
adc
jae
and
es
mov
and
mov
adc
rorb
push
enter
xor
fiaddl
ljmp
lcall
xchg
lods
fldenv
pusha
xor
pop
cltd
inc
push
ljmp
incl
dec
push
sbb
xorl
mov
mov
jg
stos
and
rcrl
std
and
test
cmpsb
sub
xchg
jne
xchg
push
fistl
icebp
pusha
insl
into
xor
adc
xor
dec
int3
lea
lahf
mov
mov
mov
inc
cltd
cwtl
fdivs
std
mov
inc
xor
stos
jae
or
sbb
or
push
hlt
xorl
fxch
add
leave
add
push
into
and
popf
outsb
and
dec
icebp
push
inc
mov
cmc
xor
xlat
push
scas
push
jle
inc
xchg
inc
push
fisttpl
push
cmp
and
int
cmp
pop
sbb
ljmp
xchg
inc
push
enter
adc
add
nop
xchg
sbb
xor
jnp
ret
xor
inc
mov
sar
inc
xchg
rolb
mov
mov
push
shlb
movsb
adc
sbb
push
les
div
lret
pusha
popf
pop
lock
and
push
adc
int3
push
mov
or
add
push
add
fcomp
inc
inc
pusha
push
xor
sbb
test
pop
out
stc
gs
inc
movb
aas
outsl
dec
sti
sub
mov
jno
add
mov
outsl
adc
cmc
inc
jne
fidivs
test
jle
mov
inc
cmp
mov
aam
pop
xchg
and
es
mov
lds
mov
jmp
add
lahf
and
stc
add
addr16
aad
loopne
pop
add
push
movsl
lea
push
push
mov
cmp
repz
dec
aam
xchg
ljmp
sub
xlat
jecxz
sti
push
movl
xor
mov
push
pop
mov
inc
mov
and
imul
sub
test
gs
sub
push
cmp
cmp
subb
movsb
or
dec
imul
mov
xchg
add
insb
pop
test
xchg
push
mov
jns
dec
adc
sub
mov
stc
sti
ret
jnp
push
xlat
inc
sub
mov
sbb
xchg
xchg
test
jle
mov
frstor
stos
stc
stos
or
ljmp
data16
aad
jle
js
arpl
lods
push
pop
test
push
push
shll
jg
cmp
dec
inc
popf
xor
mov
mov
pop
xlat
inc
ja,pt
lret
and
jl
mov
and
and
jne
sub
jo
adc
lcall
ss
or
mov
cmp
and
test
mov
sub
mov
fstpt
scas
test
sti
mov
xchg
mov
or
jge
lahf
pop
cltd
push
xchg
mov
shll
dec
dec
dec
hlt
fsubp
mov
xor
in
stos
sbb
dec
cld
das
subb
mov
ret
mov
adc
inc
test
repz
push
inc
test
int3
sub
lods
fcmovb
push
scas
mov
inc
mov
push
pushf
outsb
inc
push
sahf
inc
cwtl
xor
dec
stc
push
mov
outsb
jns
lods
je
cmp
fnstenv
dec
enter
and
lods
int3
das
lods
xchg
mov
mov
cmpsb
push
inc
call
mov
xor
loopne
inc
jmp
sar
xorl
pop
pushf
mov
stc
inc
cltd
jmp
cltd
inc
fs
cmp
movsl
add
test
lds
aaa
dec
add
inc
pop
mov
outsl
add
flds
adc
mov
jp
inc
das
call
fcmovnb
lock
sub
mov
arpl
sbb
sbb
jp
dec
out
adc
cld
cs
jp
push
xorb
icebp
push
pop
pop
out
or
jg
xchg
mov
pop
lahf
jno
mov
cmp
inc
xor
push
int
pop
aas
and
sbb
mov
cmp
mov
dec
ds
subl
inc
mov
xchg
les
jae
cmp
push
flds
notb
push
mov
dec
jne
aaa
int
mov
neg
jmp
push
mov
mov
ret
in
cmp
movsw
fstpl
sahf
ds
or
outsb
test
push
icebp
cmp
clc
arpl
mov
and
push
cmp
xchg
fcoms
push
test
out
test
repz
sub
push
jbe
lret
mov
pop
mov
pop
aam
rorb
out
jns
mov
lret
lret
jp
aad
fs
stos
and
sub
and
jae
and
daa
pop
dec
insl
mov
dec
xor
and
or
or
push
jb
and
pusha
popf
push
add
shrb
inc
stc
mov
push
dec
jns
inc
jnp
mov
aad
rcll
hlt
lcall
sbb
outsl
mov
inc
repz
or
cmp
cli
ljmp
fbstp
stos
movsl
mov
fs
pop
mov
mov
pop
cs
pushf
out
xchg
rcrb
fidivrl
fdivr
jnp
sbb
or
mov
xchg
pop
fdiv
or
out
inc
jnp
daa
roll
pushf
push
or
push
lds
pop
test
sub
jmp
add
dec
inc
out
pop
or
sbb
lods
jb
jne
pop
std
test
out
xchg
sub
dec
popf
fmulp
fcmovnu
cmp
add
cmpsl
push
cltd
sub
stos
ret
int3
lock
ficompl
ja
and
outsb
daa
pop
aam
popf
add
sarb
cmp
or
sbb
jle
scas
subl
sti
ss
fsubl
mov
pop
loop
test
popf
sti
jge
stos
adc
sbbl
ret
jl
es
push
sbb
push
adc
daa
shll
test
popf
stos
or
lea
pop
popf
int
gs
movsb
jbe
mov
pop
loopne
lods
pushf
xchg
jmp
jge
fsubrs
arpl
aad
bound
sbb
jg
or
adc
pop
out
cld
inc
and
mulb
cmpsl
movsl
sbb
adc
sbb
scas
mov
in
mov
in
and
push
and
mov
xchg
dec
mov
out
mov
dec
call
and
imul
movsl
mov
fucomi
adc
int3
push
mov
nop
sti
jns
subb
incb
push
cmp
adc
loopne
lds
inc
sub
xor
xchg
dec
cmp
in
mov
dec
in
sbb
inc
inc
push
loop
in
push
push
fsubrl
scas
xchg
sub
sbb
mov
inc
andb
mov
aam
cli
call
push
sub
and
rorl
shrb
inc
stos
dec
or
sub
pop
xchg
mov
push
add
sub
or
lods
orb
ljmp
cmpsb
cmp
fstpl
movsl
pop
rorl
xchg
into
subl
hlt
mov
lret
sbb
jecxz
dec
cli
fstl
dec
loop
or
fcoms
or
mov
idivl
inc
pop
sub
rcl
bound
cmc
or
fsts
arpl
sub
fsubrs
dec
mov
mov
bnd
lea
lret
fdiv
and
push
int3
pop
movsb
pushf
mov
pop
inc
jne
mov
or
mov
int
mov
jmp
jns
jle
jge
mov
aaa
repnz
fldz
pop
in
inc
std
inc
cld
or
mov
imul
push
xchg
lds
pop
push
mov
dec
push
mov
inc
mov
sbb
cli
aas
inc
leave
repz
int
jl
faddl
and
lock
cmp
aas
cmp
jl
sub
sarl
push
es
shr
adc
cld
rorl
mov
inc
lods
mov
mov
or
jl
lret
xchg
mov
push
sbb
mov
and
insl
pop
inc
jmp
inc
xlat
jge
push
into
xor
loopne
imul
fdivrp
cmp
pushf
mov
add
or
outsb
xchg
and
out
cld
rcll
mov
insb
sbb
inc
inc
dec
testb
sbb
push
stos
sbb
pop
or
cmc
or
or
loope
out
adc
cmpsb
add
sti
inc
mov
jne
mov
sbb
mov
lahf
adc
insb
loop
sub
sti
cmc
imul
pop
push
les
xor
cli
pop
or
leave
pop
sub
repnz
movsl
aam
xor
xor
and
sbb
jne
pop
inc
xor
sub
imul
test
mov
xchg
nop
jp
mov
hlt
adc
sbb
jnp
cli
mov
mov
sahf
movsb
xchg
out
and
outsl
stos
sbb
popa
cmp
iret
cmp
mov
inc
cmp
cmp
mov
cmpsl
jo
lds
imul
push
fistps
cmp
or
push
je
xchg
sbb
jg
xor
orb
movsl
mov
jns
cmp
arpl
in
xor
icebp
push
cmpsl
inc
dec
rorl
imul
test
mov
stc
sbb
in
ffree
xlat
outsl
adc
addr16
push
jle
mov
imul
push
pop
rclb
sub
xchg
inc
mov
movsl
and
and
push
enter
xchg
jge
xor
notb
jle
stc
out
aad
push
inc
mov
jae
les
pop
popf
mov
mov
sub
sbb
sahf
adc
scas
popf
std
sbb
xchg
inc
jns
and
push
pop
fucomi
popa
inc
test
sti
and
push
xchg
rcr
fsubr
orl
jmp
push
jge
imul
sbb
pop
mov
rcl
xchg
jb
inc
or
sbb
xchg
ret
and
stc
xchg
pop
mov
in
leave
push
xchg
mov
out
add
inc
push
dec
divb
push
lret
add
fcompl
aam
jno
push
cld
jb
dec
nop
roll
push
mov
mov
mov
cmp
out
call
adc
iret
mov
sub
aaa
mov
mov
xchg
sub
push
ret
jne
adc
pop
mov
or
mov
loopne
push
int3
jle
mov
insl
jbe
mov
call
repz
mov
and
pop
pop
pop
mov
adc
push
pop
push
nop
add
or
lret
pop
movsb
jle
lahf
pop
mov
jge
fidivrl
addr16
cwtl
lods
mov
inc
inc
sub
inc
push
mull
rcrb
sbb
sub
mov
pop
lods
std
jl
pop
jl
and
arpl
nop
enter
push
xor
pop
cmp
xchg
mov
push
scas
mov
dec
outsl
pop
mov
out
shll
fwait
xchg
out
xor
lret
jecxz
mov
or
nop
xor
push
mov
add
in
mov
sahf
insb
shll
pop
sbb
and
sahf
mov
sbb
xor
jb
subb
pop
test
sbb
out
xor
xchg
cmpsb
imul
xor
jg
adc
add
push
test
repnz
fsubr
or
inc
cmp
pop
pop
mov
clc
sbb
lods
adc
movsl
sub
adc
insl
shrl
ljmp
stos
and
insl
fsubp
fcomp
mov
push
sti
outsb
insb
in
sub
and
add
lods
inc
dec
jp
mov
mov
mov
xor
and
or
arpl
jecxz
xlat
bound
push
add
fldt
ffreep
cld
loop
out
mov
jb
lcall
fs
pop
pop
lods
shr
pop
repz
inc
mov
rolb
flds
in
jmp
lret
add
cld
int
sub
push
stos
iret
or
roll
lret
ljmp
cmp
sti
lahf
aaa
das
lret
cwtl
dec
in
cmpsb
jmp
cmp
lock
mov
sarb
mov
or
jge
dec
jmp
lock
jmp
cld
stos
cltd
adc
xchg
test
jg
imul
pop
xlat
sub
inc
call
dec
or
mov
insl
adc
mov
nop
pop
js
bound
xor
dec
stc
ret
in
les
add
push
cmpsl
adc
mov
aam
mov
clc
dec
call
int3
cmp
inc
fcompl
add
fucomip
enter
imul
ja
lret
test
bound
repz
adc
adc
xor
mov
jns
fcomps
lret
data16
movsl
inc
pop
xchg
mov
andl
mov
mov
mov
mov
fcompl
bt
imul
add
ret
mov
cmp
dec
daa
add
adc
push
and
jne
mov
pop
inc
xor
adc
push
mov
or
les
mov
in
sbb
ret
aam
mov
lret
and
and
out
fwait
mov
loopne
push
jns
shll
jl
ljmp
movsb
adc
shrl
cmp
xor
leave
test
inc
push
cmp
xor
dec
cmpsl
cld
imul
push
mov
xor
fld
repnz
das
gs
cmpsl
xchg
jge
shll
aad
mov
mov
ficomps
into
int3
pop
out
jmp
add
hlt
jl
aam
cmpsl
sbb
in
and
les
idivl
pop
add
xchg
inc
mov
cmp
xor
daa
mov
rcll
cltd
call
faddl
cltd
lods
dec
sub
rol
mov
pop
aad
pop
and
xchg
and
ss
in
das
mov
dec
sahf
adc
pop
imul
repz
mov
mov
add
es
jp
jns
cld
ds
in
insl
hlt
aaa
and
mov
pop
mov
or
jns
cmp
fiadds
std
div
adc
adc
pop
popa
mov
mov
pop
sbb
into
dec
jbe
mov
fldl
arpl
out
lock
pop
mov
ret
xchg
pop
lcall
scas
mov
repz
movd
sub
add
push
xchg
ss
xlat
xor
adc
aas
cmc
push
pop
sub
sbb
mov
test
pop
dec
sti
pop
dec
cmp
loope
movb
mov
js
pop
xor
repnz
daa
js
push
mov
jbe
mov
mov
clc
xor
cmp
mov
dec
adc
sub
pop
and
dec
nop
pusha
mov
xor
cmc
inc
cmpsl
xor
add
clc
fcompl
lahf
push
mov
sbb
sbb
add
daa
and
stos
shlb
inc
sbb
icebp
xlat
xchg
shl
xor
dec
dec
inc
leave
jnp
in
ja
or
push
push
or
lcall
loop
rcrb
loopne
mov
mov
sub
or
leave
xchg
imul
or
gs
xor
fnstcw
or
pop
jmp
adc
jbe
clc
sbb
bound
movsl
jo
mov
or
fsubr
and
push
adcb
pop
sub
dec
das
lods
or
xchg
sbb
and
inc
mov
mov
arpl
dec
loope
mov
inc
iret
int
mov
pop
jbe
pop
rclb
mov
rorb
testl
ja
ret
inc
mov
or
inc
mov
xlat
jecxz
add
sub
push
loop
data16
inc
pusha
test
sub
mov
pop
in
mov
je
test
outsl
xchg
les
push
sub
adc
aas
push
lods
movsl
add
in
fists
nop
pop
and
jne
pop
test
lret
pop
pushf
xchg
lods
inc
dec
or
jg
roll
movb
pop
push
cmp
add
fcoms
repz
sub
cltd
icebp
cld
addr16
xchg
inc
inc
push
scas
or
sub
pop
xchg
mov
add
sub
das
jge
stos
sbbb
imul
es
pop
jl
leave
std
insl
outsb
cmp
cmc
jge
addr16
xor
xor
xlat
fcompp
or
loopne
jle
sub
jge
lahf
fsubs
pop
aam
mov
cmp
or
mov
adcb
pushf
adc
sub
sub
fcoml
mov
jnp
stos
jecxz
sub
clc
mov
movsb
movsb
push
fcoms
push
add
mov
inc
lcall
cwtl
rorb
sbb
cld
arpl
repnz
jmp
cmpsl
jg
and
push
sahf
stc
hlt
aaa
mov
pop
outsb
xchg
xor
sbbl
xlat
pop
dec
movsb
mov
mov
out
xchg
test
xor
ljmp
jno
insl
cmp
adc
add
pop
inc
ds
add
cmp
sbb
les
fs
imul
jmp
mov
cli
iret
test
jns
xchg
mov
inc
jge
adc
popa
dec
fsubs
mov
mov
out
fucomi
jne
out
out
orb
add
dec
or
cmp
mov
scas
mov
mov
cs
popf
sbbb
shlb
jne
add
arpl
sbb
mov
xlat
int
fisubs
insl
mov
cmp
test
outsl
insb
xor
js
pop
into
icebp
roll
jge
test
push
or
les
outsl
push
les
adc
dec
mov
ret
push
popf
cld
jp
das
xchg
movsl
jge
in
mull
shlb
insl
scas
call
imul
loop
and
aad
push
cmp
out
jno
add
and
scas
dec
or
xor
pop
or
andl
mov
aas
movsb
pop
js
and
add
sbb
scas
fwait
mov
dec
outsl
sub
adc
push
mov
or
fistl
rcll
mov
adc
jo
dec
jbe
adc
in
mov
test
or
xor
push
clc
jns
xor
stos
and
jp
insl
add
lods
mov
add
inc
iret
cmp
ret
imul
decl
jne
xor
dec
fisttps
mov
xchg
sbb
adc
lahf
add
and
xor
fcompl
xchg
vhsubpd
mov
sbb
mov
addr16
repnz
ja
imul
adc
call
inc
or
mov
stos
ljmp
pop
mov
push
rorl
jl
dec
sarb
adc
jb
ss
imul
daa
fcmovbe
insl
pop
es
mov
in
add
jb
xchg
jns
sbb
add
push
cmp
aam
push
mov
lcall
xor
fidivrl
adc
test
mov
and
inc
dec
aas
add
lock
mov
mov
push
clc
xor
pusha
push
sarb
sub
out
mov
push
iret
rolb
jg
leave
push
add
stc
pop
in
sti
mov
or
psubb
icebp
or
adc
cmp
lock
dec
xchg
jle
push
out
xlat
or
adc
wbinvd
mov
and
stos
pop
outsb
pop
jp
fisubrs
sbb
sti
andl
and
cwtl
pop
lahf
jg
dec
pop
sub
jae
test
xchg
outsb
mov
roll
scas
push
xorl
xor
test
hlt
push
iret
popa
xor
lahf
or
pusha
and
push
add
dec
not
sbb
lods
sbb
inc
fsubl
xor
ljmp
adc
iret
sbb
scas
cmpsb
push
inc
jb
outsl
test
and
mov
adc
xor
pop
pop
ret
int
xlat
adc
pop
push
outsb
mov
xchg
xor
fnstcw
add
out
bound
push
repnz
in
and
lahf
inc
mov
cli
push
mov
pushf
out
xlat
push
in
mov
mov
rcrl
xchg
iret
pop
rorw
stc
nop
mov
push
push
push
dec
and
mov
and
xchg
xchg
out
or
aam
mov
inc
or
sub
adc
loopne
xor
repnz
xchg
mov
scas
jns
in
testl
jno
cmpsb
xor
pop
pop
adc
pop
or
dec
test
jnp
pop
lds
and
mov
data16
cmp
ss
arpl
fisubs
mov
js
aaa
mov
aad
pop
fsubp
inc
mov
or
add
jl
leave
sub
cld
push
jns
add
sub
dec
cs
mov
mov
mov
and
pusha
inc
ss
cmp
and
aas
mov
sbb
mov
pop
mov
xlat
pop
mov
jne
jp
xchg
mov
movsl
negb
mov
sub
es
sti
fldl
icebp
in
or
xchg
mov
out
inc
cli
int
fwait
repnz
push
in
xor
repz
xchg
pop
stc
aaa
mov
sbb
xor
dec
pusha
mov
sub
gs
or
sbb
inc
arpl
jo
dec
fs
xchg
mov
dec
push
add
push
pop
imul
int3
loope
out
int3
xchg
cmp
inc
fwait
dec
loope
les
ds
add
mov
adc
cli
xchg
je
mov
test
aad
test
push
test
mov
lret
ds
xor
push
pop
loop
jno
xchg
aas
ja
roll
enter
xchg
mov
outsl
mov
outsb
lods
insl
push
test
mov
clc
int
mov
or
mov
mov
lea
sub
mov
xor
sub
cmp
inc
xchg
lahf
xchg
mov
xchg
xor
test
movsb
push
stc
pop
stos
sbb
inc
xchg
inc
push
lea
jns
rolb
xchg
add
mov
lahf
add
je
xchg
das
aam
mov
in
into
fsubrs
outsl
fcomps
jecxz
cmp
xor
jecxz
xchg
or
movsl
sbb
dec
orl
movsl
in
ljmp
or
xor
xchg
nop
inc
dec
iret
inc
sbb
setno
jo
mov
stos
dec
fstpt
cmpsb
jp
iret
bound
mov
pop
pop
cwtl
add
push
adc
fcmovu
fwait
pop
fdivrs
repz
fbstp
or
mov
lret
movsb
mov
ret
dec
int3
imul
pop
imul
hlt
incb
sbb
jle
dec
add
mov
jo
aas
or
pop
pop
fstpt
sbb
mov
pushf
ljmp
leave
das
sbb
add
imul
movsl
jmp
add
rcrl
cltd
mov
mov
frstor
loopne
xchg
mov
xor
adc
out
add
jns
xchg
std
inc
adc
mov
mov
dec
jl
out
mov
out
inc
mov
sbb
push
lods
add
lds
fwait
sbb
fldl
mov
icebp
fisubrl
jnp
or
movsb
sub
je
imul
daa
sub
addr16
repnz
sbb
lret
outsb
or
outsb
leave
outsb
and
sub
mov
jl
lods
xchg
inc
into
repnz
fsts
pop
or
cld
sti
movsl
fld
mov
pusha
mov
xchg
ret
std
pop
jmp
mov
push
sbb
push
movsl
adc
in
cmp
fistl
rcrb
frstor
aas
aaa
rcrb
shl
mov
repnz
mov
mulb
lret
jmp
repz
std
data16
adc
test
lret
imul
mov
mov
add
repnz
out
mov
adc
fmuls
add
adc
mov
mov
notb
cld
mov
and
stc
insb
sbb
jne
adc
ret
pop
dec
nop
adc
xchg
add
out
mov
lods
push
xor
sbb
inc
out
inc
outsl
inc
jnp
inc
and
ds
sar
cld
jae
cmp
mov
mov
push
fucomp
pop
outsl
and
sub
mov
cmp
sub
dec
mov
enter
mov
es
pop
stos
sarb
mov
into
jnp
push
jl
hlt
dec
xor
lcall
sbb
sub
ds
sub
jle
fistl
cmpb
mov
or
hlt
mov
jge
or
fwait
jg
repnz
in
cmpl
dec
in
or
mov
lock
orl
xchg
roll
add
mov
imul
dec
mov
cmpsb
xchg
jns
sbb
test
add
cld
sbbb
pushf
mov
sub
scas
and
inc
fcomps
and
out
mov
sarl
outsb
pop
lods
adc
or
sti
repz
mov
pop
fbld
bound
push
push
inc
psrad
pop
sbb
rcr
mov
imul
jmp
fwait
idiv
xchg
jae
add
pop
mov
sub
xchg
cs
xor
stos
mov
rol
iret
xchg
adc
jle
andl
jp
jp
xor
notl
xor
pushl
sub
dec
mov
roll
inc
and
int
bound
sub
loope
push
add
inc
jo
into
outsl
inc
cmp
pop
adc
push
inc
cli
mov
in
or
sbb
jle
aam
arpl
jmp
jg
add
pop
out
jle
adc
sbb
shlb
pop
cltd
push
adc
xchg
push
dec
inc
mov
mov
stos
xor
or
xor
xchg
mov
mov
pop
bound
faddl
cmpl
flds
pop
dec
push
pop
pop
je
add
cwtl
pop
mov
or
xor
shrl
cmp
or
mov
push
enter
jmp
rol
and
mov
xchg
sub
je
outsl
pop
popf
and
cwtl
mov
mov
test
rorb
mov
aaa
jns
dec
int
push
outsl
aas
out
lds
loope
iret
mov
addr16
rorl
sbb
xchg
xchg
fwait
xchg
rcrb
pusha
sbb
inc
aam
pop
add
or
int3
outsl
rorl
lcall
inc
les
testl
and
out
sahf
aad
test
pop
sbb
jns
mov
jmp
lret
ret
fsubs
pop
add
ss
adc
inc
std
lock
imul
pop
aas
fistps
push
dec
mov
stos
int
jge
xor
and
out
into
dec
lahf
mov
pop
push
imul
fiaddl
ljmp
xor
in
mov
ficompl
dec
mov
dec
rcll
sbb
mov
jae
xor
xchg
cmp
in
into
loop
sbb
push
adc
scas
cmp
fisubrl
mov
loopne
int3
sbb
shr
pop
in
jne
pop
mov
push
xchg
sahf
mov
cmp
test
mov
mov
sub
popf
hlt
pop
imul
in
ss
in
and
dec
fs
sub
pushf
mov
test
fldt
sbb
jl
enter
push
pop
loop
push
dec
mov
aad
push
xor
out
rcll
mov
sbb
cmp
push
add
mov
inc
fisubrl
xchg
xor
pop
cmp
js
pop
leave
mov
out
inc
push
push
aad
xor
sbb
int3
cs
and
sbb
sbb
mov
jge
test
cmpsb
mov
or
jmp
test
testl
seto
lods
cmp
dec
fsin
into
outsb
and
iret
je
xor
mov
sub
getsec
fisttps
icebp
dec
fildll
in
sbb
hlt
scas
jl
or
inc
insb
cmc
pop
inc
inc
fidivl
jno
mov
jl
les
addr16
dec
addr16
lcall
arpl
repz
mov
insl
mov
std
sub
adc
aam
fstpt
popa
cmp
outsl
hlt
or
rol
cwtl
add
mov
aaa
orl
and
test
adc
pop
dec
sbb
mov
icebp
icebp
or
mov
das
mov
in
cltd
push
fcmove
lahf
jp
or
outsb
sub
jno
cld
inc
outsl
jne
adc
testb
outsb
and
lret
cld
xor
rep
mov
jne
scas
mov
xchg
jae
je
in
test
cwtl
movsl
int
mov
push
outsl
fistpll
arpl
cmp
push
es
loope
mov
dec
lods
fadd
leave
dec
jecxz
subb
mov
inc
xor
xor
dec
shll
cmpb
xor
pushf
pop
mov
pop
mov
pop
addl
jo
mov
scas
repnz
cmp
int
or
popf
cmp
out
int
pop
dec
aam
cmp
jp
sbb
dec
dec
cmp
loope
add
popf
inc
or
sbb
rcll
mov
inc
insb
aaa
ljmp
loop
mov
inc
fiaddl
xor
or
cwtl
jno
mov
xchg
lods
aad
hlt
cltd
xor
ljmp
jo
cmp
push
sbb
inc
pop
adc
or
lods
lahf
add
adc
mov
xor
clc
cmc
aaa
dec
xor
aam
lock
lods
in
loopne
or
mov
sahf
xor
mov
movsb
dec
jo
mov
loop,pt
add
popa
mov
pop
jecxz
cmc
adc
movsl
push
cmp
loopne
add
stos
movsl
dec
int3
mov
xchg
test
mov
mov
sbb
xchg
adc
push
stc
cmp
sbb
dec
dec
and
push
fisttpl
pop
adc
shll
loope
push
fsubrs
adc
pusha
lahf
cwtl
scas
imul
rcrl
ret
xor
xchg
cmpsb
mov
xor
push
push
rcll
imul
sbb
mov
and
push
pop
nop
aas
xor
jg
push
xchg
sbb
xor
and
mov
jge
xchg
subb
daa
mov
arpl
fbstp
int
dec
lods
out
das
shrb
jle
add
xorl
push
imul
pop
dec
dec
cmp
shll
push
jecxz
dec
sbbb
pop
mov
and
sbb
mov
cmp
push
nop
push
sahf
xchg
push
mov
cmp
jle
sbb
cmp
dec
cmpsb
inc
adc
jmp
add
pop
inc
fcoms
xchg
jne
add
lds
dec
mov
pusha
add
repz
xchg
push
mov
inc
in
pushf
hlt
out
mov
out
adc
jnp
jb
adcl
adc
add
test
add
aam
pop
sub
inc
mov
adc
lret
int
cmp
dec
mov
aas
push
push
aas
jle
push
ret
sub
pusha
mov
or
notl
fildl
mov
cmp
fcomip
xchg
outsl
inc
in
int
sbb
dec
sub
dec
pop
popf
lds
jae
mov
push
push
lods
or
les
jb
sub
mov
mov
jae
inc
sbb
and
rcrl
adc
push
shll
push
in
divl
imul
hlt
test
and
and
ds
cwtl
arpl
adc
cmpsl
in
push
test
mov
lds
sbb
add
call
pushf
and
flds
mov
ffree
mov
shll
xor
push
add
fwait
adc
cmpb
adc
loopne
mov
mov
repnz
in
xchg
inc
fcompl
add
mov
cmp
in
in
jns
add
loop
mov
inc
push
push
mov
dec
and
or
or
test
shlb
mov
out
inc
cmpsb
mov
inc
dec
inc
mov
add
lea
ret
jle
test
in
sbb
sarb
jne
hlt
xor
mov
push
test
pop
popa
jns
leave
imul
cld
mov
jp
jns
rcrb
int
xchg
or
fsubs
cmp
xor
xlat
adc
xor
mov
jg
cmpb
and
cmp
dec
sub
xor
movsl
and
xor
dec
mov
xor
add
and
add
scas
or
shl
mov
xlat
add
sarl
dec
push
ret
popaw
adc
repnz
xlat
test
adcb
inc
rcrb
jge
lcall
xchg
movsb
fists
fisubrs
pop
pop
pop
dec
xchg
mov
cmp
and
pop
pop
sub
rolb
in
cmp
and
test
inc
mov
mov
ds
and
mov
jns
das
stos
mov
nop
aad
and
daa
push
and
sbb
roll
cld
into
pop
sub
sbb
gs
cld
mov
pusha
xchg
mov
clc
cmp
jecxz
fadds
sub
into
jns
lcall
add
fistl
loope
lret
pop
repz
sub
mov
cltd
loop
fists
sbb
insl
push
jl
bnd
lea
inc
in
pop
sub
inc
xlat
in
movsb
add
nop
bound
movsb
ret
stos
mov
leave
insl
loop
loop
and
pminsw
pop
repz
mov
adc
mov
stos
sbb
xor
jnp
shlb
and
lahf
push
inc
in
and
out
scas
mov
adc
or
xor
mov
aas
jo
scas
xchg
stos
push
and
add
push
sub
adc
mov
sbb
mov
js
sbb
cmp
gs
sub
arpl
dec
outsb
std
xchg
dec
push
fadd
insb
jmp
pop
mov
mov
je
mov
shlb
push
jecxz
cmp
xchg
push
dec
jno
inc
mov
lcall
and
mov
adc
sbb
sub
lock
ficompl
mov
mov
jno
pop
aam
std
ret
xchg
lcall
shll
imul
fnstsw
outsl
adc
xor
xchg
ret
sahf
jb
inc
xchg
jle
add
jb
jns
adc
or
xor
pop
jecxz
out
rcl
or
cmpsb
outsb
mov
jecxz
cltd
adc
pop
pushl
mov
outsl
clc
mov
out
xor
leave
imull
fs
xchg
jno
js,pt
hlt
sub
pop
push
xor
pop
pop
xor
jo
push
cmp
sub
stc
movsl
xchg
or
cwtl
pushf
movsb
cld
or
jbe
js
fwait
bnd
xchg
insl
insl
add
xchg
and
push
je
mov
mov
imul
and
push
mov
dec
cmpsb
pop
sub
movsl
out
roll
inc
push
jecxz
gs
addb
mulb
insl
sarl
jnp
out
aas
sahf
daa
cld
pop
push
and
push
mov
inc
mov
push
mov
pop
loop
fisubl
cmp
daa
xchg
mov
roll
pop
and
pop
aas
bound
add
adc
aas
cmp
out
mov
ret
mov
stos
enter
jo
add
jns
popa
add
loopne,pt
mov
icebp
jb
or
mov
leave
dec
ljmp
scas
inc
in
ror
mov
fcoml
xchg
push
jg
cmpb
jae
shrl
or
or
popf
jne
aaa
pop
sub
jne
stos
scas
mov
mov
stos
jbe
and
test
out
add
js
in
loope
sbb
int3
sub
repnz
sbb
loopne
jnp
es
mov
jns
push
call
mov
push
jnp
mov
fwait
fs
inc
int
lcall
ret
fwait
add
adc
sub
mov
mov
pusha
push
and
leave
leave
arpl
mov
in
clc
mov
lahf
fsubrl
add
inc
insl
outsl
pusha
inc
inc
adc
dec
orl
cli
sub
sbb
inc
bound
jmp
out
mov
sbb
pop
sub
dec
nop
nop
stos
pop
fidivs
movsb
sub
sbb
cmp
add
ja
mov
ss
int
adc
sbb
inc
push
daa
pop
loope
add
sarl
inc
js
xchg
sub
add
or
sub
jnp
repz
dec
repnz
sub
int
jno
loop
jno
mov
subb
cmp
rorl
push
push
mov
dec
lods
rolb
pop
daa
imul
jecxz
or
insl
and
push
xchg
sub
out
pop
aam
test
cmc
add
shl
xchg
icebp
or
mov
jno,pn
jg
imull
cmp
aad
aam
rolb
movsb
dec
das
add
adc
lcall
addr16
popl
dec
or
adc
repz
add
div
inc
inc
xor
jmp
mov
and
pusha
fisttpll
mov
or
outsb
lods
fldenv
jecxz
cmp
test
sub
pop
mov
jecxz
cmp
sbb
inc
add
mov
adc
repnz
sbb
gs
push
cltd
popf
loopne,pt
mov
mov
and
dec
mov
and
hlt
pop
mov
adc
cmp
cmp
insl
dec
rol
gs
sbb
pop
ljmp
push
mov
pop
out
test
jo
xor
inc
aad
int
mov
pop
mov
jl
sbb
into
or
add
loope
sbb
in
enter
sbb
ja
inc
mov
or
xchg
inc
fistpl
loopne
dec
jmp
or
xor
cwtl
xorl
jge
and
push
xchg
cmc
push
xor
jnp
jle
push
fwait
pop
imul
repz
jge
sbb
das
dec
loope
inc
mov
or
dec
mov
inc
mov
in
stos
popa
or
and
int
inc
mov
sbb
arpl
repz
and
push
lahf
adc
in
jno
push
or
sbb
add
icebp
scas
sub
je
sub
adcb
je
pop
mov
pop
and
mov
lret
mov
imul
mov
or
pop
pusha
rol
jge
cmp
push
inc
or
fstl
and
in
inc
fidivl
ja
stos
push
sub
jle
add
mov
or
cmpsb
cmp
jb
adcl
xchg
inc
xor
bound
std
push
mov
test
pop
inc
int
std
mov
mov
inc
add
or
or
sub
imul
aam
dec
divl
dec
mov
std
inc
cmp
jnp
push
xchg
in
dec
test
mov
dec
and
mov
mov
repz
cmpl
pop
adc
imul
or
sbb
add
sub
stc
stos
std
test
rcrb
push
lds
fnstcw
and
subb
jg
mov
mov
xchg
or
cwtl
repnz
inc
dec
push
cmp
pop
into
xorb
inc
test
jb
mov
repz
or
push
test
inc
in
gs
mov
nop
in
sti
jmp
fstl
cli
inc
fsts
fnstcw
or
add
adc
cmp
or
push
jne
sbb
add
pop
inc
nop
mov
sbb
adc
xor
jmp
sub
mov
lcall
out
std
mov
cwtl
fwait
nop
mov
mov
clc
scas
jo
cmp
and
orl
jmp
mov
and
js
adc
fdivrl
cltd
loop
testl
mov
bound
loopne
dec
dec
xor
mov
sbbl
push
leave
aam
cli
cmc
iret
jns
push
jp
aad
lret
movsl
add
addr16
int
aaa
cmp
push
repnz
xor
ret
push
push
pop
and
cmc
aas
sbbl
bound
cltd
fs
scas
or
add
sbb
mov
dec
jns
stc
or
xchg
xchg
icebp
xchg
fwait
pusha
adc
rcll
iret
and
xor
push
cmp
pusha
mov
dec
ja
adc
mov
ficoms
cmp
jmp
lds
inc
jns
sbb
lcall
loop
cmp
pop
sub
outsl
mov
sbb
cli
xor
sub
mov
shlb
mov
pop
aam
sbb
mov
adc
jo
mov
pop
lods
mov
fsubl
and
hlt
rcrb
out
xchg
pop
or
das
pop
call
pop
mov
addr16
sbb
or
aad
rcr
mov
lds
adc
mov
scas
sub
pop
cli
scas
repnz
sbb
xor
sbb
pop
mov
lds
pusha
fucomip
ret
pop
pop
and
and
mov
mov
loope
mov
outsl
fdivrl
sub
les
jo
out
sbbl
call
pop
and
or
push
push
fsubrl
pushf
or
movsl
sbb
mov
cld
aam
popf
jnp
xorl
scas
mov
andb
addr16
pop
add
sub
add
sbb
xchg
pop
push
mov
jg
and
inc
xor
or
cs
sub
mov
xchg
mov
inc
jnp
mov
jle
mov
pushf
mov
and
outsb
sbb
aam
push
and
dec
inc
addr16
sbb
movsl
push
ja
cmc
loop
mov
jl
cmp
sbb
inc
ss
mov
out
ljmp
stc
into
es
out
mov
adc
adc
dec
enter
stos
inc
adc
pop
movsl
inc
rcrb
clc
addb
push
ds
fcmovnb
pop
mov
repz
ret
rcr
mov
mov
aaa
cwtl
rcll
sub
in
int3
mov
xchg
and
pop
mov
stos
stc
xchg
adc
mov
xchg
lcall
xchg
and
cmpsb
cmp
clc
xor
inc
and
cltd
nopl
dec
mov
ret
xchg
pop
pushf
lea
add
test
xchg
fsts
outsl
notb
sbb
out
mov
mov
xchg
aad
sub
push
xchg
and
and
jae
sbb
push
xlat
daa
aaa
shl
mov
dec
push
into
or
cmp
mov
jmp
mov
sti
nop
data16
test
mov
mov
lret
push
in
sub
mov
test
shll
jb
aaa
out
ja
lahf
test
xchg
sub
or
ss
pop
mov
push
cmp
push
push
leave
rcrl
mov
loop
adc
jge
add
jno
adc
fcmovne
out
or
pop
aad
sti
movsl
pop
mov
insb
sub
push
lea
mov
add
mov
into
inc
mov
int3
ret
rcr
sbb
push
sub
ret
dec
dec
lret
outsl
pop
cmovge
sub
js
push
mov
into
inc
je
lock
xchg
aas
dec
jae
and
mov
mov
sub
sbb
icebp
imul
and
fs
jmp
sbb
mov
jecxz
pop
scas
mov
sbbb
das
inc
xor
sbb
push
pop
mov
rcrl
icebp
cmp
push
sbb
scas
xor
mov
fwait
in
addl
push
addr16
pushf
fistps
hlt
mov
insb
es
rolb
lret
lea
push
jmp
das
lret
jnp
xchg
pop
shll
jmp
imul
cwtl
stos
and
rcll
lods
sbb
repnz
dec
pop
mov
inc
inc
inc
addr16
cld
xor
fidivrl
popf
add
sbb
pusha
cs
lods
das
jmp
xchg
cmp
jnp
sub
mov
mov
push
js
aam
sub
cmc
cmp
add
dec
ss
roll
mov
in
rcrb
and
ds
imul
repnz
push
ds
leave
shlb
cwtl
in
sahf
jno
lods
ret
iret
pop
cmc
xor
shll
lret
in
ret
popa
movl
cltd
lea
jns
mov
iret
cmpsl
push
cmp
lahf
in
incl
leave
mov
pushf
lock
mov
and
xchg
xor
pushf
cmp
aad
call
pop
adc
scas
shlb
data16
arpl
dec
shlb
aaa
cmp
aam
or
inc
int3
pop
fs
mov
jb
in
inc
jae
sbb
stc
mov
adc
std
loop
jp
js
lods
dec
cmp
nopl
loop
push
pop
inc
rcrl
pop
or
fidivl
pop
push
jo
in
push
mov
xchg
and
jmp
mov
popf
fnstcw
adc
daa
out
jp
out
mov
pop
push
or
sub
imulb
gs
xor
cmpsb
scas
test
xor
sti
std
enter
test
jp
ja
push
pop
and
jnp
popf
mov
cmp
stc
pop
xor
dec
push
insb
pop
aad
sub
push
mov
adc
aam
cmpsl
and
leave
mov
sahf
loope
rcrb
loopne
fcomi
mov
imul
scas
gs
shll
inc
jle,pt
lahf
xchg
sar
gs
xchg
mov
mov
dec
add
jle
lahf
imulb
mov
testb
pop
je
cltd
or
test
pop
push
jge
or
rcl
adc
or
enter
aaa
dec
adc
inc
enter
sbb
or
popw
lods
ss
hlt
mov
movsb
sbb
lods
fsubr
into
dec
cmpb
cmp
mov
mov
mov
iret
pop
out
add
adc
xor
add
fwait
neg
xor
loopne
test
dec
rcrb
push
xor
repz
ret
pop
pop
out
jns
pop
fisttps
adc
mov
insl
js
loop
loope
mulb
sbb
scas
pop
popa
xchg
xor
mov
test
jecxz
jmp
int
or
mov
or
mov
stos
add
sub
pop
mov
cli
sub
jnp
scas
and
push
stc
or
outsl
clc
nop
cmpsb
inc
andb
in
push
push
inc
fistpl
xor
jp
lcall
je
lahf
pop
pusha
sbb
mov
xchg
test
add
rolb
cwtd
outsl
dec
fsubrs
mov
flds
xor
and
mov
mov
roll
add
imul
outsb
js
aas
push
sbb
push
imul
mov
add
mov
mov
mov
cmpsl
cltd
inc
and
pusha
cltd
addl
jno
mov
and
call
pop
jo
mov
pop
adc
fisttps
out
movsl
insb
mov
pop
inc
mov
test
enter
xchg
fcom
dec
add
cmp
add
jmp
mov
fisubrs
or
lahf
jge
aad
mov
xor
jb
mov
push
or
jae
insl
notb
adc
hlt
pusha
cmp
lods
cmp
or
dec
mov
lret
ja
outsb
dec
mov
cmpsb
cld
sub
mov
xor
xchg
jae
pop
sbbl
xor
adc
out
mov
int
push
inc
cmp
xchg
cmp
int
pop
sbb
dec
or
leave
adc
cwtl
fimuls
js
mov
cmp
in
push
xorb
mov
dec
mov
lock
inc
enter
daa
pop
loope
dec
or
aaa
jge
xor
inc
add
fnstenv
roll
xchg
or
cmp
jle
outsl
stc
outsb
xorb
mov
dec
add
mov
scas
iret
lods
push
mov
sbb
popf
pop
adc
xor
push
mov
cmpsb
sbb
insb
mov
xchg
or
inc
push
or
jne
pop
cmp
mov
cmpl
ret
xchg
or
and
sub
scas
cltd
leave
and
dec
das
mov
jmp
repnz
scas
mov
jle
adc
pop
xchg
data16
in
push
into
pop
fstps
and
stos
inc
loope
lret
pop
xchg
xlat
pop
sbb
pop
bound
cwtl
aad
and
imul
lahf
in
in
mov
scas
fildll
scas
call
les
xor
arpl
sub
popa
xlat
out
and
add
mov
nop
jmp
jg
ds
loope
rolb
push
mov
jmp
pushf
dec
lret
add
ja
sbb
sub
in
jp
sub
addr16
imul
into
sbb
cs
push
mov
add
mov
loopne
enter
shrb
int3
cld
jl
fdivs
add
lods
push
xchg
dec
aaa
rorl
out
mov
in
cli
cmp
ss
dec
and
in
push
lret
iret
into
jae
aam
mov
scas
adc
inc
cmp
or
add
jle
ljmp
dec
or
icebp
xlat
jecxz
fbstp
mov
mov
mov
aas
jl
movsl
sub
aad
sub
dec
test
or
and
je
shl
cld
xchg
lea
es
subb
cli
sbb
test
mov
xor
shlb
or
pop
mov
push
and
stos
inc
fistpll
rclb
inc
jno
popf
stos
mov
cmpsl
ljmp
or
repz
inc
sbb
je
inc
jo
mov
cmp
add
ja
jne
fadds
sbb
subb
push
and
mov
mov
xor
cmp
movsl
ja
cmp
xor
popa
push
out
jp
in
lock
shrb
notb
mov
pop
mov
mov
mov
loopne
ljmp
ja
jns
xor
fisubl
push
scas
movsl
sbb
push
or
mov
fmuls
cmp
cmp
sbb
fistps
into
xchg
and
dec
or
sbb
addb
jbe
shl
cmp
mov
stc
add
push
int3
sbb
enter
sbbb
testb
mov
and
into
fldt
shll
mov
sub
mov
xchg
or
cli
insb
loopne
inc
add
lods
cs
mov
mov
cmp
xor
push
xchg
sti
pop
in
adc
ret
sarl
cli
mov
jo
call
repz
and
fiadds
fisubrs
mov
cltd
or
fbld
dec
fwait
dec
icebp
xor
out
into
mov
pop
mov
jns
insl
je
pop
fstpl
cmpsb
sub
sub
addb
jmp
loopne
mov
insb
call
ret
sub
pop
clc
add
not
mov
add
pushl
mulb
fwait
sbb
call
std
stos
mov
dec
lret
adc
mov
inc
repz
sub
add
mov
movb
mov
mov
sub
andb
add
lret
in
fdivrs
loop
xchg
aaa
aas
fwait
mov
in
mov
jno
pop
push
mov
dec
inc
xor
adc
adc
mov
mov
adc
pop
mov
popa
xchg
jmp
into
outsl
cltd
sarl
repnz
pop
in
call
std
xchg
inc
pop
xor
nop
xchg
inc
jno
insl
sbb
test
outsb
xchg
ljmp
and
rcll
pop
mov
xor
gs
jmp
adc
cld
subb
aam
int3
rolb
fnstenv
sbb
enter
pusha
lea
or
sar
movsl
jnp
dec
fs
repz
and
jbe
repz
adc
sub
ficomps
int
ret
add
push
jecxz
pop
filds
test
js
lds
in
stc
inc
xor
add
in
cmp
pop
mov
test
sub
inc
push
fisttpl
pop
jge
int
mov
adc
repnz
adcb
add
dec
pop
cmp
int3
jge
and
jne
shrl
loop
and
mov
add
add
cmp
rcrl
sub
lds
push
inc
cwtl
jo
inc
pusha
xchg
fcoms
ss
sub
jl
pop
jns
outsl
cmpsb
pushl
stos
xchg
mov
imulb
cmp
das
inc
cmp
sahf
fwait
cmc
push
add
out
jecxz
xor
test
je
mov
xchg
mov
scas
pop
mov
cs
mov
std
nop
popa
das
xchg
imul
pop
ljmp
mov
push
xchg
rcll
std
rcrl
adc
xchg
sarb
xor
enter
xchg
rcrb
jne
shll
pop
dec
xchg
dec
jmp
loope
icebp
sbb
fistps
sbb
je
push
lea
cmp
and
outsb
insb
mov
dec
fcoms
or
mov
or
flds
push
fxch
in
adc
out
dec
pop
js
mov
icebp
push
dec
jns
sti
bnd
aad
xchg
cmp
mov
shll
aad
sbb
sub
dec
imul
dec
xchg
sub
cmc
jbe
mov
popa
mov
jl
mov
outsl
jecxz
inc
outsl
and
or
in
xor
dec
add
mov
cmpl
jne
test
lret
sbb
pop
scas
dec
mov
in
cmpsl
pop
jmp
outsl
outsl
mov
add
outsl
hlt
mov
or
divl
mov
inc
sub
add
dec
insl
in
xchg
pop
les
test
sbbb
addr16
fnop
or
sbb
shll
jno
lods
mov
xchg
mov
insl
or
js
sub
push
or
imul
rep
jno
cmp
mov
push
mov
arpl
mov
mov
push
je
jnp
inc
pop
jle
mov
jns
jno
movsl
in
ja
sbb
add
lea
les
xchg
mov
cmp
test
push
jo
mov
ljmp
rorb
lods
ret
push
pop
aam
daa
or
mov
push
out
inc
xchg
dec
sub
dec
lcall
mov
sub
jle
push
out
push
xchg
sub
jae
das
shlb
mov
stos
lcall
rcll
jae
jecxz
sahf
lcall
jmp
push
mov
in
cmpsl
mov
bound
or
les
dec
jb
std
add
popa
js
sbb
scas
push
inc
adc
jo
ret
mov
pop
mov
pop
xchg
sub
nop
dec
shrb
add
dec
fwait
jbe
jb
nop
push
push
push
mov
pop
scas
aad
mov
sbb
cmp
pop
jg
xchg
lds
cltd
mov
ja
ja
or
xchg
cmpsb
lea
sahf
shl
xchg
jmp
inc
xchg
enter
dec
ror
mov
aam
jp
inc
rcrb
adcl
mov
in
xchg
mov
xchg
loope
jmp
loop
jmp
jp
xchg
scas
sbb
pop
mov
rcrl
cwtl
or
pop
and
push
add
arpl
inc
pop
icebp
mov
sahf
movsl
es
lret
dec
out
mov
inc
jo
or
xchg
mov
mov
xor
gs
add
movsl
out
repz
pop
les
scas
das
in
lcall
ret
scas
xor
mov
bound
sbb
pop
push
cmc
xor
dec
call
lea
fisubl
enter
push
hlt
dec
xchg
dec
jg
jp
mov
adc
mov
pusha
mov
lahf
pop
loopne
lock
and
aaa
in
roll
arpl
jns
jp
arpl
push
pushl
or
xlat
xor
sarb
cmp
sbb
jge
mov
mov
outsb
iret
out
fwait
jmp
mov
out
lahf
cs
jno
add
sbb
dec
xor
int3
jbe
dec
sbb
cmp
fs
mov
mov
or
outsb
call
lcall
adc
clc
cld
xchg
xchg
lock
andl
inc
cld
push
in
push
mov
int3
pusha
push
arpl
test
push
mov
fwait
mov
test
sbb
test
cmp
cmp
lea
jo
mov
add
inc
cld
int3
mov
jg
or
sub
ficoms
int3
inc
push
and
mov
shll
popa
pop
add
sti
xlat
mov
jnp
push
scas
cmpsb
ss
aam
pusha
aaa
dec
dec
push
jmp
and
sti
int
jnp
cmpsb
mov
sbb
xor
fld
jp
cli
adc
loopne
xchg
out
lock
inc
pushf
jmp
call
clc
hlt
lahf
cmp
inc
shll
enter
mov
lahf
mov
jbe
mov
xchg
push
mov
incb
mov
in
xchg
das
pusha
inc
mov
cmc
mov
lock
ljmp
jo
cmc
popa
aad
fwait
and
fnstcw
push
push
xchg
pop
ljmp
fcmove
imul
fsubl
out
shr
and
arpl
xor
cld
test
sbb
nop
adc
sub
dec
xchg
push
push
or
dec
test
ss
out
lgs
xor
adc
and
dec
popf
xchg
and
nop
and
les
mov
xchg
jmp
xchg
adc
mov
mov
inc
hlt
and
ja
push
loop
mov
and
ret
fwait
xchg
cwtl
xchg
mov
cmpsb
push
fisttpl
xchg
xor
lret
inc
or
xchg
lcall
clc
mov
mov
pop
mov
stos
push
fsubrs
clc
adc
stos
push
shrl
pop
cwtl
loopne
mov
outsb
jno
xor
adc
cmp
add
sbb
movlps
xlat
in
push
ja
xlat
xlat
and
pop
jns
mov
mov
push
mov
cmpsl
push
rcll
incl
mov
jge
pop
pop
pop
stos
inc
dec
sbb
pop
mov
xchg
stos
call
stc
sbb
popf
lods
dec
scas
jle
cmc
fstpl
cmp
push
repz
adc
fisttps
subl
jbe
aam
ret
sbb
and
stos
xor
bound
lret
mov
pop
test
leave
testb
cld
xlat
cmp
das
test
outsl
jbe
fsubl
lock
in
mov
adc
xchg
movsl
add
pop
add
int3
std
jae
dec
movsl
in
out
adc
pop
cmp
inc
and
jnp
jne
add
mov
mov
cmp
out
rorl
out
test
pop
les
jmp
jb
cwtl
lea
push
lret
inc
mov
int
into
rorb
imul
arpl
lahf
cwtl
adc
inc
aam
sbb
adc
cmp
clc
cs
adc
ret
loop
dec
aaa
mov
mov
jecxz
cmpsl
repz
sbb
aam
pop
ja
add
lahf
dec
dec
sahf
movsb
stos
inc
mov
repz
jl
out
mov
mov
das
pusha
cmp
push
in
add
and
call
cmpsb
adc
xchg
ss
or
call
fldenv
xchg
in
cmp
jns
fisubrs
popf
or
ret
push
jp
scas
inc
mov
jae
push
mov
imul
shrb
aam
int
mov
fsts
ret
pop
pop
push
and
pop
gs
jmp
mov
daa
pop
ficompl
xchg
sbb
fsubl
xchg
sub
stc
xchg
in
sub
mov
jbe
mov
mov
shlb
js
sbb
ss
dec
dec
das
pop
fs
xchg
test
or
pusha
pop
int3
cs
movsb
jne
aam
loop
jl
ret
pop
popa
inc
sbb
inc
daa
pop
sbb
jns
scas
test
dec
add
xlat
invd
aam
int3
and
adc
or
loopne
mov
push
movsl
ljmp
lods
mov
xchg
mov
adcb
push
insl
jnp
xchg
mov
xor
fnsave
xorl
fnstenv
cs
mov
pushf
int
fidivrl
rorb
arpl
into
test
inc
in
test
add
mov
lret
es
test
int3
jg
sbb
aas
lock
cmp
in
mov
popf
mov
cs
xchg
mov
ret
cmp
addl
xor
adc
jge
cli
cli
mov
aad
out
clc
stos
jne
fisubrs
mov
rcl
hlt
stc
mov
fwait
push
xchg
pop
stos
inc
loop
outsb
pop
mov
jmp
mov
pop
cmpsl
dec
in
lds
push
xchg
inc
xchg
or
bound
ljmp
mov
fdivp
jp
loopew
cmp
mov
adc
addr16
sahf
xor
or
ret
xchg
pop
sub
mov
adc
dec
sbb
inc
and
xor
test
lods
je
push
ret
lret
les
fwait
punpckhbw
aad
pop
mov
scas
repnz
aad
fidivrs
mov
mov
xor
mov
mov
movsb
enter
cmp
sub
bound
cmpsl
call
inc
mov
cwtl
push
or
cmp
and
xor
lock
jp
andl
shlb
add
jno
mov
clc
mov
stc
lea
pop
sbb
loope
xor
xchg
lods
fsubrs
out
jns
mov
mov
push
ja
lahf
or
pop
and
push
xor
mov
shll
cmp
inc
jge
jecxz
outsb
and
cmp
stos
out
inc
lods
outsb
daa
mov
and
sub
loop
subl
shr
inc
and
loope
loop
fdivl
notb
pusha
inc
stos
mov
cmpsl
jae
lahf
mov
dec
andb
xor
test
ror
mov
xchg
and
add
sub
scas
xorl
stos
les
mov
popa
add
pushf
adc
sti
add
cmp
jae
add
iret
xlat
ret
jp
mov
mov
adcb
pop
dec
dec
imul
loope
test
ja
xor
es
add
mov
nop
negl
xchg
mov
or
outsb
mov
in
pushf
outsb
sub
out
xchg
loope
mov
enter
or
mov
mov
adc
scas
fldcw
mov
dec
mov
push
stc
mov
sbb
cmp
outsl
mov
jge
lock
enter
inc
scas
jmp
mov
sbb
int3
pop
xchg
icebp
mov
testl
pop
push
arpl
push
ss
push
movsw
and
rcl
inc
cmpsb
xchg
pop
daa
loope
xchg
jecxz
mov
or
xchg
and
inc
push
or
data16
cmp
mov
and
hlt
cmp
imull
xchg
stos
test
stc
and
std
je
mov
mov
cltd
movsb
lret
push
xchg
nop
mov
sbb
stos
push
dec
cli
xchg
icebp
shlb
loopne
inc
add
and
out
mov
sub
mov
pcmpgtw
popa
push
jne
inc
inc
mov
xchg
imul
inc
aas
mov
jo
lcall
push
xchg
je
inc
std
jmp
cmp
cs
ret
fldl
mov
pop
inc
xor
out
js
sub
roll
pcmpgtb
mov
movsl
popf
mov
jg,pn
adc
cmp
out
ljmp
sbb
fdivr
xor
lock
pop
pusha
jae
js
shlb
add
cmpl
popa
call
xor
dec
mov
push
mov
sbb
xchg
jne
cmpsb
dec
mov
xor
xchg
dec
rcl
mov
cs
cmp
in
add
in
xchg
in
enter
sub
mov
rcr
rcrb
push
xchg
jne
push
lahf
test
aam
int3
ss
inc
loope
sbb
fwait
add
sti
pushl
adc
mov
loop
repnz
outsl
icebp
push
dec
and
mov
jne
cltd
roll
cmp
inc
ror
aaa
push
test
add
add
mov
mov
cmc
jne
mov
call
mov
xchg
jno
shrl
jecxz
cltd
jns
outsb
lods
ds
int3
inc
adc
and
fdiv
sbb
lret
lcall
push
ljmp
aam
jbe
mov
icebp
loop
jmp
jecxz
cmp
addb
xchg
fadds
out
inc
daa
int3
pop
es
movsb
pop
js
mov
inc
inc
orb
cmp
repnz
add
ffreep
sub
mov
mov
or
popf
inc
test
mov
das
lret
xchg
or
pushf
mov
pushl
push
and
and
test
mov
jo
dec
dec
and
rorb
aam
sub
sbbb
fsubp
mov
repnz
xchg
mov
loope
sub
ljmp
adc
mov
aam
lods
dec
mov
nop
arpl
daa
push
jle
mov
cmp
ret
push
and
ds
fidivl
pop
in
fsubp
cwtl
inc
push
lret
stc
jmp
xchg
dec
adcl
lret
push
mov
aas
stc
xchg
arpl
dec
sub
pushfw
mov
enter
in
loop
insb
pusha
test
adc
andb
jmp
dec
push
mov
and
dec
loope
cmp
lods
push
adc
cmp
mov
mov
dec
jmp
xor
imul
out
stos
test
sbb
scas
out
cwtl
cmpsl
ss
jg
xchg
dec
repnz
scas
adc
das
or
cli
stos
jg
push
and
xchg
xor
daa
or
lods
ds
mov
pop
out
add
outsb
cmp
mov
outsb
push
add
ljmp
mov
movsl
arpl
and
mov
dec
shlb
or
push
xchg
lcall
aad
divl
ljmp
aas
mov
test
inc
mov
pop
dec
mov
int
xor
adc
popa
ficompl
and
stc
adc
push
lock
fwait
loopne
sub
sbb
adc
not
mov
frstor
adc
jg
or
lcall
or
and
cmp
jbe
and
jb
loope
ficoml
inc
insl
cmp
aam
add
addr16
jg
mov
subl
dec
mov
add
push
push
inc
inc
jg
insl
jecxz
or
mov
loop
jns
rol
mov
sub
mov
mov
stc
sub
add
adc
lods
in
nop
sub
addl
jne
in
cmpsb
mov
popa
xchg
xchg
out
inc
cwtl
mov
icebp
push
adc
imul
ljmp
dec
repz
leave
mov
out
cmc
sub
mov
pop
popa
adcl
jle
cmpl
pop
xor
mov
cmp
xor
xchg
fwait
leave
xlat
pop
mov
shll
out
cmpsb
imul
icebp
pop
inc
pop
aaa
scas
subl
jae
ss
add
and
and
lahf
pop
js
jno
fisttpll
jmp
jb
sbb
or
jp
sub
cmp
jle
jne
enter
out
cmovl
shrl
fwait
cmc
scas
lret
dec
inc
mov
push
sti
inc
in
pop
mov
in
and
add
jo
pop
fbstp
std
sub
xchg
dec
cmpsl
sti
dec
imulb
dec
push
shl
ss
cmp
mul
lods
hlt
or
rolb
aaa
pop
push
mov
or
push
mov
mov
pop
js
popf
clc
xchg
add
and
mul
push
in
jecxz
push
jmp
idivl
cwtl
xor
int3
sub
mov
inc
xor
jg
jno
cmpsl
jge
hlt
lods
mov
sbb
jno
pushl
inc
repnz
and
cld
adc
mov
xchg
add
inc
pop
sub
lock
inc
push
sbbb
cmpsl
jb
push
jns
repz
test
inc
dec
imulb
mov
and
scas
xor
xor
out
pop
nop
jae
es
add
cmp
jnp
adc
sbb
push
sbb
stos
push
push
fwait
pop
cli
inc
or
push
lods
pusha
mov
push
into
pop
lret
repnz
fisubs
mov
nop
adc
outsb
add
repz
mov
or
mov
lret
and
cmpl
fidivrs
mov
adc
or
mov
iret
jp
xchg
scas
or
arpl
add
in
adc
sbb
xchg
inc
outsl
in
jl
push
push
pop
aas
shrb
cmpsb
orb
fimuls
scas
scas
jg
mov
add
clc
ja
test
push
xchg
bndldx
push
insb
popf
loopne
decl
pop
mov
mov
fnsave
adc
insl
jnp
and
out
mov
sbb
jmp
or
lock
xor
xchg
cmp
sbb
leave
lods
scas
push
enter
aas
adc
or
push
ss
insb
pop
xchg
mov
les
xchg
xchg
cli
gs
fsubrs
or
jge
sub
fcomps
push
std
fnstsw
adc
lret
notl
test
cwtl
jp
lahf
mov
pop
fst
dec
and
and
cmp
mov
push
mov
xor
dec
cmp
or
out
mov
inc
cmpsl
jns
arpl
sub
les
imul
fucom
inc
xor
fadd
fcomps
inc
icebp
dec
mov
in
movsl
and
scas
pop
or
out
push
test
fisttps
pop
lret
xchg
imul
lcall
jb
dec
mov
pop
rorb
push
mov
xor
aam
add
pop
xor
xlat
inc
push
cltd
in
jb
xorl
aad
rcr
in
mov
cli
cmpsb
ds
rorl
fwait
sbb
mov
bound
and
inc
sbb
jecxz
mov
xchg
pextrw
repz
xor
sbb
dec
cwtl
jo
inc
out
sub
out
pop
fimull
pusha
es
jne
inc
add
lret
ds
push
cli
out
fsubrl
gs
nop
dec
loope
adc
clc
test
repz
subl
cmc
icebp
pop
cltd
mov
rcrl
and
and
ret
mov
negl
int3
push
out
nop
nop
jmp
xchg
aad
and
jae
cmp
push
int3
lods
xor
add
dec
in
cli
leave
xlat
adc
popf
cwtl
int
lock
test
push
enter
ja
sub
adc
jle
cmpsb
loop
jp
xor
xchg
inc
push
roll
in
lret
mov
cmp
rclb
ror
dec
jae
add
sbb
into
lock
imul
mov
stos
push
shll
andl
push
jp
insb
subl
insl
cmp
xchg
aaa
fs
sbb
mov
and
stos
fs
ret
dec
sbb
fcmovu
psrlw
mov
xchg
inc
push
inc
test
stos
lahf
add
sar
popf
xchg
add
xchg
sbb
sbbl
mov
mov
mov
sub
lret
pop
dec
clc
test
pop
mov
push
mov
cli
aas
ljmp
xor
repnz
mov
rcl
push
gs
shlb
sub
cmp
mov
loop
cmp
cltd
jne
sub
xchg
mov
xor
arpl
imul
mov
pop
call
sub
cmpsb
xchg
lods
shrb
jl
add
fadds
sub
mov
add
dec
loopne
int3
xlat
jg
jno
cmp
mov
repnz
das
or
mov
xchg
int3
jnp
add
sbb
adc
jns
dec
inc
test
out
sub
fwait
ja
xchg
iret
dec
pop
lcall
das
mov
out
rcr
and
cld
fisubrl
popf
mov
push
aam
cltd
lcall
repz
out
test
xor
sbb
mov
cmp
cmpsl
inc
fimull
stos
cs
stc
adc
sbb
xor
add
mov
push
or
int
cmp
mov
les
mov
xor
sub
aas
inc
inc
rcrb
popl
cmc
arpl
stos
sbb
pop
jo
sbb
xor
iret
fcmove
jne
pop
adc
push
dec
push
sarl
fsubrl
xchg
fsubs
dec
popa
sbb
lea
mov
in
sub
sub
sbb
inc
stos
cmpb
mov
aam
and
jne
cmp
testl
addb
mov
das
stos
loop
into
js
scas
mov
sub
cmp
repz
inc
pusha
scas
and
hlt
push
inc
jnp
mov
adc
xor
xchg
or
pop
mov
lahf
lods
orl
cld
rcrl
jae
push
gs
sub
jbe
fldt
aam
mov
cli
int3
gs
dec
mov
fwait
lods
into
les
push
int
cmp
es
sbbb
ds
out
inc
movsl
push
dec
inc
lds
sbb
or
jl
insl
mov
pop
jo
push
cltd
cmp
jp
and
dec
dec
pop
sub
and
xor
jl
lods
data16
movsl
inc
adc
insl
sbb
scas
pop
nop
push
cwtl
repnz
xchg
inc
or
nopl
bound
mov
in
mov
mov
push
gs
or
push
ret
cmp
push
outsl
jne
mov
arpl
loop
or
aas
push
cli
xor
cmp
repnz
pop
lahf
arpl
adc
in
sbb
mov
out
imul
and
ret
hlt
je
in
inc
cmp
dec
pop
sub
push
xchg
cmp
rorl
cmc
hlt
pop
pusha
call
pop
push
sub
fimuls
add
rcll
cmp
aad
or
loope
sbb
test
data16
pop
sbb
sahf
xchg
out
insl
inc
jg
lret
lcall
dec
mov
ret
cmpsl
jg
jle
out
or
add
cs
in
ficompl
sbb
subl
daa
mov
shlb
out
shrd
dec
enter
sub
or
loopne
cmp
sti
pop
arpl
lods
repnz
jbe
adc
aad
cmp
jle
mov
pusha
fsubr
hlt
shll
out
sub
or
loope
out
pop
mov
outsb
in
std
and
fidivl
cmp
mov
lea
and
and
mov
arpl
push
test
mov
std
imul
mov
jge
les
mov
inc
and
sub
inc
mov
xor
jbe
cmp
mov
call
cs
push
push
fidivrl
pusha
dec
add
sub
popa
push
adc
inc
adc
or
pop
loope
mov
test
adc
add
add
sub
inc
cwtl
adc
je
imul
adc
dec
mov
rorl
adc
sarl
adcb
lret
addb
into
bound
jl
jmp
sbb
cmpsb
int3
or
sbb
fwait
mov
adc
bnd
add
sub
mov
mov
notb
xchg
sub
pop
mov
mov
cmpsb
insb
int3
jge
inc
pushf
repz
fcmovnb
add
and
xor
das
push
ja
jl
and
dec
adc
inc
mov
push
imul
movsl
imul
ds
ja
nop
sbb
and
mov
inc
imul
bound
pop
repz
jb
lahf
sbb
or
icebp
rcll
mov
push
mov
sbb
cmp
dec
loopne
rorb
xor
imul
out
cmp
rcrl
test
fdivs
nop
inc
mov
jns
insb
xlat
mov
scas
sbb
rol
repnz
sub
add
cmp
or
fwait
popf
push
stc
aas
stc
xor
cld
mov
lcall
testb
in
sub
jne
je
xchg
incl
bound
cli
pop
enter
push
push
mov
sbb
xchg
xchg
or
divl
ffreep
std
mov
out
pop
xchg
pop
leave
mov
nop
jbe
adc
jmp
jge
xor
mov
ret
adc
fiaddl
jg
fsubrs
repnz
ljmp
xorl
jle
xlat
push
ret
pop
nop
push
push
push
inc
imul
xchg
jne
subl
adc
cmp
repnz
dec
cmp
and
jle
pusha
pop
or
mov
mov
movsl
out
inc
adc
push
loop
sbb
jb
rcll
into
xchg
mov
aas
cmc
das
popf
test
mov
repz
cmp
dec
and
loop
loope
movsl
mov
pop
sub
jp
scas
sub
mov
jo
aaa
adc
xor
flds
xor
jecxz
lret
pop
cld
mov
test
xor
out
dec
repnz
or
dec
mov
bound
lods
cwtl
scas
pop
cmp
push
inc
nop
outsb
test
cmp
shlb
mov
rcrl
rcrb
sub
push
outsl
mov
rcrl
gs
mov
fimuls
roll
in
add
mov
push
pop
adc
adc
ficoms
xor
dec
mov
aas
xchg
add
shrl
fisttps
or
fs
sub
sub
fcoml
test
xor
mov
dec
mov
add
movsl
sub
jno
cmpsl
cmp
push
mov
das
aaa
pop
jo
xor
das
cmc
ljmp
sub
rorl
lret
or
mov
sahf
movsl
rcll
mov
jne
and
or
dec
push
aad
jo
rcrb
popa
mov
in
fmuls
stos
ja
data16
mov
sbb
pop
shlb
repz
lods
cmc
sbb
jmp
pop
addr16
sub
call
xchg
jns
mov
cmp
sub
outsl
std
mov
test
retw
das
hlt
into
push
or
and
pop
cmp
fldenv
cmc
pop
stos
lahf
inc
daa
bound
lret
pushf
dec
push
mov
cmc
cmp
movsb
jns
loop
das
scas
xlat
ret
inc
pushf
xor
adc
outsb
or
mov
loopne
xchg
pop
and
jecxz
dec
and
ret
sbb
scas
mov
outsb
arpl
in
push
icebp
test
and
jns
mov
push
ja
or
xor
push
adc
inc
sbb
pop
pushf
int
and
fcomps
loop
dec
setl
xchg
mov
je
jno
pop
adc
mov
int3
xchg
fbld
and
jnp
cmp
gs
push
mov
lret
cvtps2pd
push
scas
or
out
push
repz
adc
sub
pop
sub
dec
pop
lret
sahf
fwait
push
mov
sahf
cs
aas
mov
add
pop
repz
addr16
pop
addl
shrl
pop
in
cmc
pop
xor
addr16
and
rolb
or
dec
and
push
or
subb
popa
iret
sub
xchg
outsb
lock
sub
xor
rorl
in
sub
cmc
jmp
inc
xchg
add
shr
es
pop
xchg
jnp
mov
push
sbb
bound
xor
jmp
xrelease
sbb
inc
imul
xor
pop
jno
popa
insb
jle
iret
arpl
js
call
addl
pop
add
nop
xchg
mov
jp
pop
ljmp
add
lods
pop
insb
mov
sub
sbb
xchg
push
outsb
push
xchg
mov
adc
mov
dec
lcall
lcall
adc
nop
sarl
push
adc
js
xchg
mov
lahf
mov
mov
inc
int
leave
lcall
adc
pop
inc
das
lds
sub
and
jne
in
pop
negb
aaa
dec
pop
fmull
jb
into
js
stc
addr16
outsl
sbb
add
and
ja
pop
mov
jne
das
sub
push
lods
inc
rcl
jl
decb
aam
int
icebp
dec
cli
pop
ja
dec
mov
jnp
and
sahf
in
dec
repz
movsb
dec
shr
sarb
sub
ds
movsb
pop
and
insl
lea
pop
addr16
jl
xchg
movsl
mov
and
cli
push
insl
pop
subb
pop
mov
ljmp
or
scas
cwtl
mulb
push
add
rcrl
aad
imul
cmp
mov
pusha
imulb
pop
sbb
sub
xor
jg
push
mov
dec
mov
rorb
mov
movsb
shll
jne
jge
inc
mov
sub
mov
pop
mov
pop
or
xor
lcall
mov
stos
xchg
out
push
xor
imul
jno
loope
movsb
cmp
dec
pusha
and
jbe
stos
outsl
loopne
in
sbb
imul
mov
loopne
mov
inc
and
test
mov
jecxz
insl
adc
test
xchg
adc
pop
push
dec
aam
mov
sub
jae
fwait
adc
loop
pop
xor
push
les
outsb
inc
adc
xchg
pushl
in
enter
je
xchg
or
ljmp
outsl
jecxz
popf
lea
loope
ficoms
add
jnp
inc
mov
or
loop
jg
xor
mov
ss
and
nop
fisttpl
pop
push
jg
push
and
in
push
iret
and
add
xchg
int3
adc
jp
push
pop
xchg
pop
enter
das
loop
orb
out
insb
push
dec
dec
pop
or
fldcw
ja
aam
clc
repz
ds
add
dec
mov
add
and
loope
push
dec
jo,pn
push
mov
fadds
jle
and
xchg
aas
js
sbb
inc
xchg
int
bound
in
fcmovnbe
add
sbb
pop
test
sbbb
adc
cmp
aas
adc
and
into
xchg
int
mov
fildl
sub
jae
fsub
mov
mov
ret
ret
pushf
das
popf
mov
dec
fcoml
gs
mov
cs
and
mov
rclb
popa
pop
mov
push
pop
pop
popfw
into
jbe
inc
sarb
arpl
fcomip
cld
pop
push
ds
cwtl
mov
mov
imul
cmp
sbb
lods
dec
lods
addr16
push
ret
aaa
out
jge
fwait
ljmp
loope
adc
mov
pop
mov
or
out
hlt
jle
dec
sub
mov
xchg
sbb
jbe
lret
mov
dec
mov
repnz
cmpsl
cmp
iret
jl
push
imul
and
leave
lret
test
push
dec
jno
loopne
dec
data16
outsl
sub
rcrl
xor
mov
adc
xchg
or
sbb
jbe
dec
leave
pop
push
inc
les
scas
scas
ss
and
bnd
int
bound
dec
dec
jg
push
ret
aas
jecxz
push
or
stos
jle
call
in
rcll
pop
iret
pop
pusha
aam
add
paddsw
mov
or
adc
or
cmp
in
dec
sub
jle
cmp
or
lock
daa
fstps
adcb
mov
xchg
dec
frstor
push
leave
pop
dec
sti
adcb
mov
pop
adc
mov
daa
jns
pop
addb
mul
sbb
rolb
cmp
out
lahf
xchg
inc
popf
arpl
sbb
or
jp
add
pop
daa
pop
lret
stos
mov
fildll
cmp
bound
mov
in
out
push
push
add
push
inc
enter
mov
mov
cmp
in
pop
xchg
jg
inc
push
subb
inc
sub
cmp
adc
mov
ret
jne
pop
and
imulb
adc
cmp
cltd
outsb
jmp
cmp
arpl
mov
in
in
movsb
lods
push
jl
push
je
repnz
inc
jmp
ja
push
inc
jp
lret
jns
xor
mov
loope
sbb
popf
or
xchg
sbb
pusha
sti
scas
hlt
push
addr16
stos
shlb
les
mov
test
ss
dec
fbstp
ss
push
mov
sbb
sahf
imul
xor
sub
subl
xchg
xchg
imul
inc
jno
lds
je
lahf
mov
imul
mov
add
push
push
push
cmp
push
dec
push
ss
shll
insb
sub
xchg
incb
stos
test
pop
repz
loopne
mov
mov
inc
ja
sar
out
jg
stc
stc
addr16
lret
in
jl
mov
inc
and
push
aam
jae
outsb
loop
fs
xchg
repz
sub
ror
movq
aas
inc
sahf
inc
xchg
in
mov
or
enter
loope
mov
mov
inc
push
js
addr16
and
sub
push
in
jp
sti
scas
int3
mov
cltd
xchg
sbb
aad
and
adc
ljmp
movsl
arpl
insl
jl
repz
dec
bound
xchg
push
fwait
push
out
in
fs
ret
pushf
push
mov
jmp
mov
add
pop
movsb
inc
aaa
jecxz
sub
stos
mov
mov
or
fdivl
inc
pop
js
cmpsb
iret
xbegin
sbb
clc
in
out
inc
fisttps
ficompl
mov
mov
sbb
test
pminub
cmp
push
fnstsw
out
iret
sarl
test
arpl
data16
push
dec
bound
xor
mov
cmpsl
and
rcrb
out
mov
dec
pop
sub
mov
leave
insl
cmc
push
xor
add
sbb
adc
sti
cli
ljmp
shll
pop
lea
ljmp
aad
addr16
push
mov
lret
mov
sub
pop
mov
pop
inc
das
jmp
lcall
jge
in
fcomip
lods
mov
xchg
xchg
mov
daa
notb
orb
lahf
ss
and
mov
sub
dec
pop
lea
pop
or
sarl
fcmovbe
pop
inc
xchg
test
adc
outsb
xor
add
mov
xchg
push
mov
push
and
and
push
je
pop
cli
jb
mov
xor
mov
pop
jle
and
push
xchg
inc
aad
push
fcom
and
int
xchg
aas
sub
push
pop
push
cwtl
fwait
xchg
mov
mov
scas
lahf
pushf
add
fimull
inc
ffree
cmp
sbb
test
cmpsl
movsl
jb
mov
psllq
les
pop
sub
jne
out
xchg
es
icebp
outsb
mov
inc
je
cltd
fs
mov
into
mov
lahf
std
rep
sbb
inc
ficoml
int3
jle
shll
out
jmp
mov
lahf
inc
and
mov
lods
movsl
es
dec
divl
iret
adc
push
rorb
imul
inc
cmp
mov
cltd
pop
and
push
sarl
add
sub
pop
xor
mov
jae
call
jne
pop
scas
lods
push
or
sbbl
popf
jno
loopne
add
lret
dec
cmp
roll
jne
test
mov
add
inc
xchg
or
int
sub
xchg
bound
lret
insl
je
mov
mov
jb
sub
cld
or
out
fdivs
fwait
clc
cmp
sub
fnstsw
pop
mov
add
or
mov
inc
xlat
inc
sub
scas
pop
add
xor
pop
adc
pop
pop
jns
clc
adc
sahf
mov
call
and
lock
pusha
add
sarl
xor
cmp
hlt
test
in
mov
icebp
das
movsb
mov
out
insb
mov
or
hlt
xchg
dec
movsb
fs
daa
hlt
sub
inc
sbb
pop
inc
and
mov
cli
pop
jae
mov
push
std
add
and
sbb
pop
jmp
flds
mov
sahf
movsb
and
mov
pop
test
popl
dec
mov
cs
mov
jae
add
in
mov
sub
push
in
cmp
inc
sbb
shlb
inc
je
and
cwtl
mov
stc
xchg
sbb
jg
cld
in
jp
pop
mov
mov
test
jmp
mov
cs
repnz
mov
shll
addr16
pop
pop
cs
bound
pop
cmp
testl
cs
lea
je
fcomps
push
lret
adc
inc
outsb
cmpb
xchg
xor
aad
fnstsw
mov
jb
lcall
xchg
xchg
imul
lods
or
nop
clc
daa
jno
mov
inc
dec
cmpsl
mov
sub
ja
push
les
ja
stos
repz
scas
hlt
mov
lahf
inc
arpl
mov
dec
jl
pop
test
sbb
cmpsl
cmp
cli
cmp
ss
cmp
push
push
push
jno
into
addr16
mov
sbb
loope
mov
or
jge
or
out
lcall
addb
repnz
pushf
adc
es
adc
add
lods
js
les
repnz
andl
xchg
in
jo
adc
lock
jnp
jno
das
mov
xchg
xor
and
rol
loope
or
xchg
je
pop
pop
xchg
je
call
popf
insb
data16
mov
or
mov
arpl
js
icebp
push
cmp
scas
loope
cmpsb
mov
sub
mov
scas
repz
xchg
hlt
insb
mov
xchg
inc
jecxz
dec
test
jno
pop
adc
mov
andl
ret
inc
ss
insl
or
loope
dec
divl
stc
jecxz
into
shlb
sub
adc
push
inc
push
stos
enter
and
adc
jl
lods
out
push
jae
or
jp
into
in
sub
xchg
cmp
sbb
cld
inc
xlat
xchg
mov
enter
xchg
in
fimuls
adcb
mov
jecxz
or
jmp
inc
pushf
ljmp
sbb
shrb
in
xorb
jb
out
pop
fdivrl
stos
sahf
adc
push
fwait
and
mov
fistpll
and
orl
xchg
fmulp
dec
add
inc
mov
mov
stc
enter
dec
fisttpl
std
mov
push
idivl
movsl
cmp
push
xor
push
repnz
jg
sbb
in
sarl
xchg
mov
popf
ss
insb
push
mov
and
sub
or
and
pop
push
adc
or
mov
lret
mov
leave
test
gs
xchg
mull
mov
inc
xlat
pop
jbe
rclb
and
cwtl
pop
push
fsubl
popf
cmp
lods
test
gs
or
add
dec
and
lcall
jge
sti
jp
in
jg
adcb
push
std
fsubl
test
pop
scas
add
adc
jb
dec
flds
and
adc
dec
mov
rclb
in
dec
push
popf
xchg
call
pop
sbb
in
xchg
and
cmpsl
and
pop
repz
xor
insl
and
adc
xchg
cmp
aaa
pop
ret
dec
jmp
sbbl
adc
stos
movsb
fistl
sub
shrl
inc
add
mov
sbb
xor
sub
push
not
dec
insl
xor
and
jbe
lcall
add
cmpsl
pop
je
mov
cmpsl
adc
cmpsl
pop
fs
xchg
cmp
or
or
inc
mov
outsl
mov
lods
rolb
shrl
in
or
and
aad
scas
xchg
imul
adc
mov
scas
scas
shrl
dec
jg
pop
inc
push
fwait
cli
lcall
ja
jnp
fcmovu
rolb
cmp
jns
mov
mov
imul
ds
xchg
sub
jae
daa
cmovae
dec
push
and
mov
ret
cmc
pop
negb
int3
test
mov
xchg
xlat
pop
fbstp
mov
xchg
mov
repz
and
sub
push
lods
daa
and
mov
shll
pop
and
dec
xlat
aas
push
mov
out
sub
mov
jg
dec
jno
push
jge
push
jo
repz
repz
dec
fwait
lcall
lock
out
mov
xchg
cltd
mov
push
dec
frstpm(287
in
push
aas
cld
test
xor
dec
xor
mov
into
xlat
dec
rorb
neg
jb
cmp
and
icebp
fbstp
popa
cld
stc
in
push
xor
ror
mov
flds
out
stos
mov
mov
xchg
add
and
cwtl
aas
dec
jnp
enter
xchg
dec
inc
fsubrs
push
call
shl
dec
movsb
fmul
nop
sub
imul
xor
ret
inc
pop
push
fbstp
stc
popf
lahf
cmpsb
aad
inc
aad
popa
lds
in
ret
mov
lret
cmp
xchg
sbb
pushf
xor
int3
cli
cmp
outsl
or
mov
inc
seto
mov
lcall
push
cltd
fimuls
dec
push
mov
jb
ljmp
test
sub
andl
lahf
cltd
mov
ljmp
mov
leave
repnz
and
fs
loopne
in
dec
mov
push
sub
cwtl
jb
mov
aaa
adcb
dec
jno
sbb
cmp
mov
xchg
mov
fnstcw
pop
push
and
leave
push
or
jno
xor
fisttps
insb
mov
popf
lods
jp
adcl
jae
mov
into
sbb
cli
stos
and
lcall
sbb
and
xchg
push
mov
sarb
adc
std
nop
in
xchg
sub
pusha
sti
xchg
dec
inc
mov
xchg
dec
popf
sub
sbbb
ja
mov
gs
mov
mov
shll
sbb
jb
cmp
cmpsb
adc
xchg
xor
popw
adc
and
rcll
mov
loop
daa
inc
fnstcw
shrb
in
imull
in
call
pop
negl
mov
repz
push
scas
mov
scas
adc
fiaddl
pop
outsl
loope
inc
xchg
ja
cltd
call
mov
test
mov
sahf
or
outsl
push
add
movsb
testb
inc
rclb
ror
pop
push
nop
insb
in
lods
and
mov
jmp
enter
cmc
in
pushf
sbb
pop
xor
add
dec
mov
subb
std
sbb
sbb
sahf
jle
adc
scas
jmp
mov
push
fcomps
or
out
fsubrl
pushf
add
mov
xchg
test
jb
sti
cltd
rcrb
shll
imul
jg
mov
mov
push
loopne
mov
and
sti
mov
rolb
into
jae
pop
cmpsb
hlt
or
mov
dec
adc
xor
mov
xchg
and
or
mov
scas
lret
adc
pop
cmp
mov
lret
push
mov
stc
inc
leave
loopne
inc
cmp
clc
inc
mov
test
dec
div
shl
jno
or
pop
cmp
jne
adc
push
pop
pop
jl
cmp
nop
sub
lret
inc
adc
dec
lahf
adc
sbb
adcb
cs
repz
dec
popa
imul
sahf
loopne
lret
in
lret
loop
ss
jbe
xchg
add
xchg
jbe
xchg
mov
sub
jae
sub
cli
mov
jle
mov
loop
xchg
adc
stos
xchg
xorl
div
sbb
pop
lret
push
cmp
ja
je
add
xchg
or
repz
mov
and
jns
jo
fsubrs
mov
jne
or
daa
out
xchg
xor
push
sbb
sub
mov
mov
lea
dec
sub
sbb
adcl
adc
mov
dec
inc
xlat
pop
je
jmp
outsl
or
loop
scas
jecxz
pushf
add
mov
fsubrl
imul
pop
testb
std
nop
and
or
loopne
ja
addr16
test
mov
pop
movsb
inc
jbe
inc
into
jmp
in
sub
inc
cmpsb
sbb
dec
dec
xor
out
push
shr
or
push
cmp
cmp
mov
push
push
fs
inc
in
rolb
mov
xchg
inc
orb
xchg
inc
test
xor
imul
adc
sbb
sub
adc
xor
push
mov
fcoml
sbbb
std
mov
pop
xor
out
testb
jp
mov
inc
push
xor
mov
xlat
addr16
ss
ds
out
mov
bound
insb
sbb
bound
dec
pushf
xchg
push
cmp
iret
inc
add
inc
and
and
fldcw
sbb
jns
pop
cmp
push
sub
cmp
inc
mov
lret
push
xor
out
push
and
dec
mov
push
pop
jmp
pop
cmp
rcll
mov
push
les
notl
ds
repnz
push
pop
enter
adcb
insb
orl
or
outsb
in
lock
sbb
in
pop
inc
cli
push
mov
jo
cli
ret
sbbl
push
push
jbe
in
arpl
inc
lock
and
pop
add
pop
and
aad
sub
mov
jbe
jg
sbb
pop
out
dec
cmp
jae
fimull
cmpsl
imul
movsb
sahf
insl
dec
add
push
inc
aas
xor
les
jmp
mov
mov
sub
cli
adc
or
call
add
std
cltd
dec
lea
mov
adc
cmc
in
daa
xchg
stos
pusha
or
jecxz
in
mov
test
sub
cmp
mov
out
test
movsl
mov
bswap
add
test
xlat
mov
push
mov
cli
andl
sbb
fnstenv
inc
jno
test
mov
cli
pop
mov
mov
stos
cli
sahf
sbb
aam
ss
scas
and
xchg
or
jno
movsb
xor
push
cs
inc
jp
emms
mov
negl
jge
mov
enter
xorl
jno
mov
adc
mov
inc
test
leave
popf
out
xor
jae
adc
sbbl
xchg
push
dec
xchg
int3
mov
jnp
lcall
aaa
mov
lret
daa
sbb
push
test
cmp
js
cld
int3
imul
or
xchg
cmp
sbb
cmp
ds
rcrb
jle
into
mov
popa
cmp
lds
call
inc
adc
pop
xchg
cmpsl
test
jp
enter
mov
inc
and
sub
pop
jecxz
cli
push
cmc
jae
sbb
dec
fstps
fists
data16
pop
sti
ficoml
pop
movsl
sbb
stos
xor
push
out
repnz
push
lret
pop
mov
mov
sub
pop
addr16
outsl
inc
hlt
test
sub
mov
push
or
repnz
aad
sub
in
sub
hlt
mov
scas
sub
adc
lds
adc
mov
mov
les
add
sub
cmc
iret
fists
xchg
mov
cmp
dec
inc
sub
cmp
lods
mov
in
push
neg
das
fucomip
in
push
test
add
inc
lock
fimull
cli
not
or
push
xchg
pop
jnp
mov
sub
hlt
xchg
jno
mov
pop
sbb
xchg
inc
ljmp
pop
pop
inc
xor
fstl
ret
push
add
sub
mov
stos
pusha
push
xchg
push
sahf
inc
out
or
cmp
into
loopne
icebp
push
rol
scas
cmp
ja
xor
inc
mov
in
out
cld
mov
in
out
repnz
loopne
lods
push
es
jb
pusha
loop
not
inc
xchg
jno
clc
es
clc
dec
sub
jmp
pushf
out
xchg
bound
loopne
jns
ljmp
outsl
jmp
stos
icebp
jne
sahf
xchg
lods
push
or
mov
ljmp
in
jmp
shrb
jne
dec
sub
rcrl
test
push
add
addr16
mov
shrl
cmpsl
enter
daa
jae
mov
and
and
and
mov
push
push
mov
test
popa
mov
test
and
je
cmpsl
adc
out
idivb
inc
cmpsb
inc
push
rorb
mov
ficompl
mov
add
ds
data16
and
mov
cmp
jne
imul
pusha
cli
js
insb
ror
jbe
jle
pop
inc
pop
push
in
and
pmaxub
and
xchg
daa
pop
jg
repz
push
fwait
sub
fs
push
ret
inc
add
xor
fcmovnbe
mov
dec
xlat
mov
cmp
jns
int3
cmpsb
cmpl
pop
xor
push
jmp
fnstcw
notl
pop
imul
shrb
and
add
stc
movsl
mov
sbb
jmp
popf
data16
mov
xor
ljmp
stos
mov
mov
cmp
inc
rcr
mov
das
sub
lcall
mov
in
notb
cmc
or
jg
mov
dec
jle
xchg
js
pushf
jb
mov
fsubrs
aas
xchg
push
or
dec
xor
out
cmp
push
int
xorl
mov
lds
mov
sbbb
cld
fcoms
scas
sub
scas
add
int3
inc
idiv
or
sti
xor
gs
aam
fnstcw
xor
into
lods
data16
shll
inc
in
sbb
popa
imul
adc
push
pop
aam
fcmove
push
xor
sbb
lock
push
imul
mov
insl
adc
sub
clc
enter
lods
in
add
ss
and
jne
inc
jb
push
mov
jl
and
inc
scas
or
cmp
sbb
inc
les
lcall
mov
push
repz
into
pop
sbb
hlt
adc
scas
clc
mov
inc
nop
sub
jne
and
loopne
mov
cli
cli
out
push
push
aas
push
or
js
add
sbb
out
jns
ret
sbb
push
sub
test
xchg
das
lods
iret
aam
jns
jmp
add
ficoml
mov
or
sbb
xorl
sub
sub
pop
and
cmp
jno
mov
dec
test
js
fnstcw
and
push
push
xor
sahf
xchg
stos
inc
mov
jmp
mov
cltd
lret
je
iret
mov
imul
fstpl
or
subb
mov
cmpl
jae
dec
jle
in
pop
clc
mov
mov
mov
pop
lods
dec
outsb
fwait
inc
aad
imulb
bound
fisubs
cmp
xchg
sub
mov
rep
cmp
and
jne
cmp
push
rcrb
cmp
add
lret
sbb
ljmp
aas
sub
movsl
xorl
out
xchg
push
or
jno
dec
insb
js
ret
cmpsb
loop
sub
leave
mov
add
mov
inc
cld
sbb
mulb
shl
pop
pop
lahf
ss
test
mov
shr
shll
push
mov
out
faddl
xor
sbb
stos
pop
mov
inc
loop
xchg
jl
adc
es
filds
mov
add
and
inc
ljmp
out
sbb
pop
push
fnstsw
sub
sub
fs
hlt
dec
outsl
insb
lods
push
stc
hlt
int3
pop
int3
inc
pop
aas
insb
fdivl
add
push
mov
addr16
roll
xchg
fcmovne
scas
mov
pop
ljmp
pop
mov
xor
decb
ds
mov
mov
stos
lcall
mov
pop
outsb
movsb
nop
jle
xchg
hlt
pushf
jl
push
fildl
jne
cmp
hlt
out
jns
je
rcrb
mov
fsts
xor
pop
pop
clc
pop
jge
enter
pop
jbe
aad
push
inc
jns
sbb
adc
and
insl
push
adc
das
lea
mov
mov
loopne
push
les
xchg
imul
adc
add
sbb
dec
xor
mov
push
xor
push
loop
sub
data16
xor
shlb
ljmp
mov
push
into
in
add
jl
inc
ss
mov
xchg
test
jns
std
lea
jnp
addr16
push
repz
xchg
adc
cmpsl
xchg
aam
xor
lods
shrl
data16
and
or
push
push
dec
fisubrs
and
les
fs
mov
and
mov
stos
jl
xchg
and
dec
lret
sub
outsl
cmpsb
inc
mov
jae
jne
pop
in
and
sbb
outsl
shl
pop
adc
xor
out
lret
or
push
xor
xchg
inc
mov
dec
mov
cmp
jge
cli
lods
mov
std
and
inc
int
adc
scas
sbb
hlt
jb
imul
icebp
jmp
lret
fbld
and
popa
cmc
add
mov
lods
ret
lret
ljmp
inc
fxch
lret
das
mov
icebp
xchg
aam
jb
mov
les
rcll
ret
cmpsb
mov
in
shrl
pop
xchg
repz
cld
lahf
shl
mov
cmp
gs
movsb
divb
stos
jmp
aad
in
data16
daa
pop
jl
and
adc
lods
xchg
je
jl
xchg
cmp
jmp
leave
push
pop
ficoml
daa
lds
testl
adc
jg
and
iret
cmpl
mov
movl
xchg
xchg
add
aaa
loope
mov
push
ds
sbb
pop
or
aam
sub
nop
mov
or
and
pusha
out
bsf
out
mov
adc
xlat
mov
ja
lahf
in
or
shlb
ret
das
sbb
pop
leave
js
push
add
push
js
clc
lahf
cmpsl
movsb
adc
aam
sahf
push
out
sub
loope
cmp
pushf
mov
push
or
ret
pop
shrb
mov
xor
mov
es
mov
popf
ret
sub
test
test
lret
jp
pushf
jb
mov
add
dec
cli
dec
out
mov
mov
js
sub
outsb
and
push
insl
int
movsl
mov
test
jge
adc
insl
push
dec
jle
inc
push
mov
lret
ds
inc
inc
mov
xor
pop
vrcpss
sub
jl
sbb
adc
pop
push
mov
nop
cltd
mov
stc
or
jl
ds
mov
pop
adc
addr16
jbe
adc
mov
das
adc
enter
cmc
into
and
inc
mov
dec
mov
out
cmp
and
or
xchg
mov
adc
out
cli
cltd
hlt
or
aas
insb
fidivrl
dec
inc
mov
iret
es
out
push
xchg
or
dec
loopne
mov
test
ficoml
and
gs
add
daa
xchg
lret
sbb
pushf
iret
rcrl
fs
inc
sub
sbb
mov
dec
insl
pop
in
jmp
int3
sub
sahf
xorl
lcall
cmp
cmpb
sbb
jp
push
jne
subl
stc
mov
icebp
fs
lods
mov
sub
scas
pop
addb
mov
test
mov
add
fildl
inc
sbb
pop
rclb
adc
mov
dec
xor
leave
in
mov
addb
add
jmp
lcall
mov
test
dec
sbb
js
sbb
or
cmp
or
cmp
xor
or
out
cmpsb
sub
push
orl
or
xor
out
lea
or
sbb
andnps
push
movsl
mov
into
mov
push
cmp
andl
and
and
sbbb
mov
adc
nop
push
lods
cmpl
mov
xor
xchg
mov
dec
imul
jmp
jne
clc
nop
mov
push
shrl
pop
or
repz
adc
pushf
sub
pop
push
lcallw
push
test
xor
sbb
and
cmp
add
mov
mov
sub
lahf
test
cmp
shrl
xor
add
call
add
xchg
ret
out
mov
mov
sub
rorb
sub
insb
cs
mov
sbb
inc
aam
inc
xchg
in
int
push
rclb
daa
add
shll
or
testb
jg
data16
inc
add
add
xor
pop
push
inc
pop
or
lds
lret
stos
rorl
mov
cmc
fimull
sub
xor
cs
ret
les
nop
scas
enter
inc
jge
loopne
js
lahf
or
mov
or
scas
xchg
adc
out
icebp
push
mov
xlat
pop
mov
aad
inc
mov
daa
push
jb
pop
pop
dec
shlb
mov
dec
adc
inc
dec
or
mov
sub
dec
lahf
mov
loopne
cwtl
outsb
scas
or
sub
fs
and
mov
mov
call
int
mov
loopne
sbb
cmp
movl
and
push
sti
das
and
adc
xchg
jge
enter
mov
sub
int3
jmp
rcll
inc
loopne
lahf
out
push
aas
sub
push
pop
and
mov
push
stos
outsb
add
xlat
pop
sub
jp
popf
mov
and
and
ret
or
aam
pop
cmp
xchg
xor
push
bound
fwait
mov
ja
data16
and
nop
mov
mov
icebp
pop
xchg
xchg
lods
sbb
int3
imul
repnz
sbb
mov
shlb
push
popa
ja
push
aaa
fimull
in
mov
int
xlat
xor
sub
push
repz
adcl
sub
fsts
lcall
rol
xchg
fdivrs
xchg
cmp
sbbl
mov
in
push
lret
movsb
mov
ret
inc
cmp
mov
lock
nop
add
pop
repnz
jmp
dec
idivl
push
mov
push
rcll
loop
movsb
pop
jecxz
xor
adc
xlat
jmp
add
or
mov
clc
rolb
push
bound
sarb
adc
pushf
add
xchg
sbb
fwait
aad
aad
ret
fwait
rorl
sbb
or
and
and
cmc
arpl
pop
sbb
sub
jo
sbb
int
rclb
mov
mov
push
outsl
es
hlt
xlat
data16
hlt
arpl
lret
cmpsb
and
mov
mov
cmpsb
mov
pop
arpl
mov
imul
mov
and
in
aas
in
gs
bswap
test
adc
cmp
les
jnp
inc
lock
add
xchg
inc
cmpsb
xchg
inc
imul
movsb
call
push
sbb
ljmp
fldl
fimuls
jmp
aaa
test
xorb
xchg
ret
mov
inc
test
insb
and
stos
shrl
mov
jge
jne
std
gs
stos
sti
sbb
jecxz
in
fcmovbe
js
flds
cmp
dec
add
jnp
out
iret
push
cld
lea
cmpsl
imul
sub
jge
inc
pop
jnp
fisubrl
mov
sbb
jl
push
xchg
sbb
mov
xor
push
gs
cmpsb
pop
je
out
cmpsl
or
xor
repnz
popa
pop
dec
test
repz
lds
xor
incb
out
shr
cltd
xor
inc
add
mov
fiadds
hlt
fnop
loopne
push
stos
insb
test
test
lods
sbbl
xchg
add
cmp
fidivl
xor
les
int
jmp
add
inc
push
mov
test
fsubrp
out
jp
stos
and
xor
xor
mov
dec
fmulp
scas
xchg
lcall
mov
jbe
xchg
push
stos
inc
jno
mov
and
popf
dec
adc
jecxz
inc
xlat
fistpl
xchg
cmp
xchg
inc
xor
jl
loop
jg
adc
test
xchg
add
clc
mov
lret
lahf
and
fnstsw
mov
divb
pop
in
dec
dec
dec
sbb
mov
cli
aaa
pop
mov
sub
pop
adc
addl
lock
cmp
mov
iret
inc
mov
imul
int3
cld
sbb
sbb
and
test
mov
push
leave
sub
sbb
shrb
enter
sub
xchg
adc
or
sbb
ja
dec
and
mov
insb
push
pop
jg
sub
xor
ds
fisubrs
and
xchg
xchg
sbb
dec
imulb
push
push
pop
push
dec
aaa
inc
mov
aad
or
test
shrb
cmp
push
dec
or
pop
fisttpl
bound
aam
fidivrl
add
add
aaa
xor
push
aad
aaa
stos
repz
cs
xor
adcb
fildl
dec
pop
cli
out
dec
adc
push
aam
rcrb
ds
in
lcall
imul
mov
jle
aam
cmp
bound
xor
stc
fbld
push
movsb
gs
jle
pop
lahf
and
scas
dec
push
cmp
push
mov
ds
int3
rcll
imul
cwtl
in
xor
filds
enter
mov
pop
push
lods
inc
push
test
lret
mov
cmp
clc
ljmp
out
push
in
sbb
fmul
mov
lret
clc
jns
clc
xor
xor
pop
dec
popf
dec
test
push
sub
andl
cmp
dec
push
pop
fwait
jnp
pop
stos
inc
inc
sti
mov
cld
shrb
jnp
push
jmp
cs
sti
stc
dec
call
lock
cwtl
pop
stc
xchg
aam
or
and
mov
jle
movzbl
xchg
int3
xor
inc
int3
stc
push
repnz
mov
clc
imul
int
mov
push
lods
xor
repnz
jmp
xor
dec
push
add
idivb
xor
scas
dec
mov
mov
faddl
lds
ret
outsl
out
pusha
mov
inc
out
cmpsl
scas
cmpsl
daa
or
mov
mov
adc
cltd
daa
imul
addr16
mov
sub
bnd
into
push
repnz
sbb
idivb
pop
pop
loope
scas
hlt
int3
cmp
xchg
mov
call
adc
mov
xor
movsl
jp
loop
jl
out
cmpsb
lea
int
sbb
adcl
cld
add
and
sub
jne
imul
out
add
mov
fimull
adc
int3
lret
cs
das
sub
pushf
dec
out
sub
std
xchg
incb
sub
mov
out
int
aaa
loop
pop
dec
gs
shll
push
cmpsb
inc
ret
mov
movsl
pop
in
orl
fildll
nop
adc
leave
pop
lds
dec
dec
sub
push
adc
jns
loopne
scas
jno
loopne
mov
xlat
push
fisttpll
scas
pop
jmp
jmp
out
lods
pop
xchg
fdivrs
test
mov
fwait
push
inc
idivl
fdivr
xchg
loop
movsl
jp
cmp
push
dec
xchg
adc
ds
mov
icebp
popf
xchg
jl
push
jne
fcomi
out
inc
mov
insb
inc
adc
dec
push
ficomps
notl
xchg
mov
out
mov
scas
imul
movsb
repz
cmpsb
adc
and
lret
cld
mov
test
testl
cwtl
inc
xchg
mov
cltd
out
mov
mov
pusha
in
mov
dec
add
sub
cmp
popa
repz
fs
sti
fimull
mov
lock
xchg
pop
jmp
xchg
dec
sub
pop
add
es
orl
nop
lahf
push
stos
sbb
add
outsl
daa
hlt
icebp
rcll
xchg
fs
sti
push
les
das
js
loop
dec
push
mov
mov
pop
adc
shrl
fwait
sbb
xchg
xchg
mov
sbb
and
icebp
push
insl
out
lods
ss
lods
popa
xchg
test
popa
cwtl
sbb
or
icebp
fcompl
movsl
adc
mov
cmc
sar
mov
fiaddl
imul
outsl
sahf
inc
fbstp
add
shll
mov
add
mov
rcrb
out
push
xchg
ret
xchg
sub
pushl
aam
inc
pop
movsb
loopne
xchg
popa
dec
cmp
mov
dec
mov
jle
iret
sti
pop
rorl
mov
push
enter
pop
lods
push
add
lcall
sbb
mov
pop
test
dec
sub
shll
sbb
scas
gs
sbb
jmp
or
dec
push
pusha
and
pusha
scas
dec
adc
call
imul
sub
popf
mov
dec
outsl
pop
lahf
cmpsl
or
lods
neg
xor
mov
ss
jecxz
sub
aaa
push
dec
aad
sahf
dec
adc
lahf
divl
jo
xchg
ret
or
xchg
sbb
pop
or
adc
mov
shrl
push
mov
in
sbb
mov
mov
pop
lcall
cmp
out
sub
adc
inc
inc
cmp
lock
mov
lea
cmp
pop
mov
fidivs
xorl
push
xor
test
mov
pop
cs
clc
mov
repz
in
aas
nop
bound
mov
mov
jns
push
push
push
sbbl
push
cmpsl
and
dec
or
cmpsl
push
pop
mov
push
stos
out
shlb
inc
sub
inc
adc
mov
and
adc
dec
add
test
rcrb
mov
imul
rcr
push
push
inc
push
jl
sbb
decl
mov
fisttpll
xor
cmpsb
cmp
inc
out
cmp
dec
lret
jmp
loopne
adc
cli
rorl
push
mov
add
pop
outsb
inc
pop
push
xchg
or
or
pop
sbb
xor
insl
jecxz
or
pop
ds
leave
test
sbb
sti
aam
mov
inc
inc
in
cmp
xchg
mov
stos
jns
repnz
scas
dec
lods
dec
bnd
pop
adc
lea
sbb
cs
in
repz
pop
outsl
and
rorb
adc
shll
stos
xor
and
iret
cmc
fcmovnbe
sbb
sahf
fadd
popf
and
mov
ret
pop
scas
dec
sub
jb
lods
sub
xor
ss
aam
xchg
pop
xchg
shrl
or
inc
gs
lret
or
xor
adc
pop
push
sbb
sub
pop
inc
jmp
cli
xor
lock
dec
jnp
cltd
jl
mov
pop
clc
int3
xchg
nop
sub
fnstcw
cmp
inc
outsl
pop
xor
xchg
cmc
imul
mov
test
or
dec
loopne
adc
mov
rorl
and
int
pop
sti
sbb
outsb
ror
addb
mov
adc
mov
xchg
cmp
and
pushf
rorl
stos
add
stos
and
addr16
sbb
inc
sub
push
cmp
sub
or
xchg
addr16
add
mov
add
dec
pushf
or
push
sub
cltd
mov
inc
push
std
xor
jb
xchg
fsubr
mov
pop
pop
add
nop
or
sbb
xor
pop
inc
or
xchg
lods
call
jge
outsl
sbb
jae
xor
mov
add
dec
jl
popf
je
mov
repnz
adc
nop
nop
out
push
shlb
xor
cld
sbb
cmc
in
ds
add
sbb
pop
push
xchg
imul
bound
test
js
push
daa
xor
mov
adc
mov
jmp
scas
fidivrs
mov
cmp
sub
jne
xchg
mov
outsb
adc
push
cmc
mov
shll
lret
sbb
push
in
test
sbb
jg
inc
insb
pushf
fs
inc
dec
sbb
enter
mov
mov
insl
push
cli
cmpsl
or
and
fidivl
movsl
cwtl
or
mov
jno
or
fistl
maxps
jns
movb
ja
and
push
mov
xchg
pop
inc
sub
je
test
data16
or
mov
jo
test
jns
popw
dec
icebp
pop
pop
xlat
int
cmpsl
mov
call
mov
pop
das
lds
aad
cmpsl
pop
push
sbb
or
jnp
sub
sbb
or
jle
stos
inc
aad
aam
icebp
mov
neg
or
es
incb
rcll
sbb
mov
jo
inc
cmpl
arpl
mov
imul
sbb
pop
je
mov
and
dec
test
push
loope
xchg
mov
bound
mov
push
nop
in
jecxz
test
mov
int
mov
in
push
roll
pop
dec
aas
loop
sbb
pusha
mov
sub
jo
xor
pop
pushf
adc
adc
xor
xlat
aas
pop
sbb
popfw
loope
roll
push
cmp
push
int3
fcoms
pop
mov
inc
outsb
sub
xchg
pop
stos
fwait
pusha
mov
shll
inc
adc
add
out
pusha
out
fistps
push
jb
fldt
repz
loop
mov
out
and
subb
xchg
sbb
cmp
sub
popa
mov
popf
mov
push
movsw
jl
push
ret
xchg
cwtl
rorb
add
sbb
mov
and
jne
xor
int
rcl
cmp
pop
or
notb
dec
call
fldl
and
dec
iret
mov
push
in
fcoml
adc
cmc
dec
cwtl
int3
stos
popf
leave
test
or
mov
sbb
dec
sbb
lret
aaa
mov
push
repz
pop
lods
bound
aas
adc
jl
ret
mov
sub
add
jl
outsb
and
das
xor
leave
sub
inc
jbe
rcrb
bound
rol
smsw
dec
mov
push
sub
filds
dec
lahf
jne
mov
xchg
push
xchg
xlat
inc
out
xor
cmc
sbb
or
ljmp
shlb
xchg
xor
push
ds
xor
xchg
or
lods
loopne
incb
fs
outsl
clc
dec
and
dec
jl
jp,pn
and
dec
fcmovb
lret
inc
jl
mov
rcll
pop
adc
and
stos
xchg
jmp
inc
das
pushf
mov
add
or
inc
push
and
fsubp
cmp
insb
ljmp
jg
nop
xor
cmp
sbb
mov
lods
aad
sbb
ret
test
mov
pushf
add
mov
movsl
jbe
cltd
fisubl
cmp
pop
insb
xor
roll
je
xor
or
and
mov
mov
mov
jle
clc
pop
arpl
adc
push
jecxz
xchg
jg
pop
iret
ja
popa
fisttps
rcll
adc
popa
mov
dec
shl
stos
imul
adc
and
pop
jp
stos
int3
mov
in
push
bound
ret
xor
pop
fwait
xchg
ja
xchg
fldcw
and
pop
cli
lds
loope
cmpsl
xchg
data16
dec
into
ficoms
pop
sub
jbe
iret
test
lods
and
outsb
push
in
jb
clc
loope
ficoms
in
lods
mov
push
in
push
xchg
dec
rclb
mov
xchg
mov
faddl
mov
out
in
pushf
adc
mov
sahf
pop
cwtl
test
rcrb
call
sbb
xchg
arpl
loopne
pop
cmp
int
mov
mov
aaa
sbb
ja
cmp
cld
xchg
push
mov
inc
add
subl
jecxz
imul
mov
cmp
imul
push
loope
movsb
push
xor
mov
jae
icebp
inc
xchg
rol
mov
push
jo
fidivrl
sbb
push
lret
jo
ret
call
xchg
inc
fisttpll
sahf
sbb
sti
out
dec
pop
and
xchg
loope
adc
push
aaa
sub
mov
scas
pusha
fists
movsl
loop
sahf
fstpt
fwait
or
cmc
loope
movzwl
aaa
stc
or
lea
xchg
movsb
adc
ljmp
fidivrl
imul
inc
test
sub
xor
mov
sbb
in
mov
jg
pop
add
jno
scas
and
imul
adc
jae
sbb
pop
divl
movsl
outsb
mov
sbb
outsb
dec
or
les
inc
femms
fnsave
out
in
cmp
inc
sti
jno
adc
mov
add
lods
dec
sbb
loopne
xlat
cmc
ss
adcb
push
sbb
sbb
lcall
dec
bound
jae
pusha
imul
jmp
sbb
fidivs
lret
outsb
add
inc
arpl
push
pop
pop
pop
pop
outsl
pop
add
pop
mov
arpl
gs
pop
loope
icebp
and
mov
add
or
xor
addr16
test
adc
es
lahf
add
push
cmpl
add
int3
mov
orb
in
mov
jle
iret
fcompl
test
adc
jbe
mov
pop
popf
pop
stc
pop
inc
outsl
adc
dec
stc
pushf
sbb
mov
dec
jge
aaa
mov
shlb
cmp
cmp
add
push
or
lea
ret
xchg
jmp
arpl
pop
fiaddl
adc
iret
mov
ror
mov
dec
roll
pop
or
xor
repnz
adc
push
inc
jg
clc
popf
pop
loop
popf
jo
ret
dec
lahf
push
scas
ja
pop
cmp
mov
addr16
lods
lahf
out
xor
mov
clc
sbb
in
cltd
push
push
adc
out
aaa
xchg
xlat
call
icebp
pop
and
jmp
ret
xor
and
and
cmp
test
aaa
jecxz
mov
testb
daa
sbb
or
xor
jmp
lcall
bound
andl
out
icebp
out
mov
ds
sbb
arpl
and
and
push
dec
pop
xchg
mov
xchg
icebp
push
out
xor
inc
mov
popf
cmpsl
cmp
dec
iret
insb
lea
jae
xchg
inc
sub
mov
push
cmp
jnp
in
pop
jbe
pushf
outsb
mov
cmp
loopne
adc
xchg
lret
aam
xchg
imul
repz
mov
jg
adc
scas
xor
pop
and
bound
jp
mov
cmpsl
int3
mov
mov
fisubrl
mov
cmp
leave
dec
ljmp
nop
dec
sbb
cltd
adc
lods
cmp
shll
mov
pop
ss
adc
push
adcl
jmp
push
mov
push
pushf
or
inc
jne
pop
out
cmpsl
out
jne
mov
inc
xchg
mov
mov
or
dec
icebp
scas
xchg
push
inc
xor
push
rcll
and
cmpl
icebp
pusha
ret
sub
cmp
stos
ret
xor
inc
cwtl
shll
push
repz
pop
mov
js
sbb
mov
imul
adc
roll
jns
xchg
add
and
aas
pushl
in
es
xchg
add
fwait
test
nop
popf
mov
shlb
fwait
cmp
and
xlat
out
and
popf
pushf
mov
mov
dec
int3
es
pop
fs
adc
lods
lock
cmp
adc
cmp
sarb
cs
mov
stc
sub
aaa
push
fnsave
dec
or
xchg
push
push
out
mov
inc
xor
leave
cmp
inc
cmc
daa
idivb
fs
lods
add
aas
or
sbb
mov
rclw
in
or
into
jmp
roll
mov
jmp
jne
jl
mov
lret
inc
jne
iret
lahf
mov
je
ret
push
adc
cltd
lahf
sbb
dec
jge
cmp
loop
sub
sbb
pop
mov
inc
ds
and
int
shr
mov
cltd
outsb
dec
adc
mov
dec
ja
xlat
pop
cmpl
mov
pop
je
jb
sub
test
dec
mov
jbe
je
addr16
mov
sub
insb
jle
pop
mov
ret
movb
xor
test
adc
or
jmp
ds
into
add
fsubrl
stos
add
call
mov
inc
int
outsb
in
mov
lret
sbb
mov
sarl
cmpl
les
cltd
xchg
insb
cmpsb
xor
inc
mov
xor
sbbb
mov
sbb
adc
jb
mov
dec
mov
push
push
in
daa
fdivrp
into
inc
test
jbe
pop
fwait
lahf
pop
mov
dec
ret
pop
sahf
gs
std
mov
jae
dec
fwait
ja
xor
mov
mov
sbb
cli
add
es
inc
fmul
test
hlt
adc
jl
dec
jb
xchg
adc
stc
call
cmpsl
jmp
stc
xchg
repnz
dec
push
or
xlat
jge
stos
or
inc
lcall
cmpsb
add
sbb
or
daa
out
outsl
xlat
mov
jmp
inc
mov
hlt
push
int
push
aas
xor
dec
dec
dec
push
adc
adc
and
mov
pop
xchg
mov
jns
xchg
cmpsb
lods
and
iret
mov
add
mov
out
mov
pcmpgtb
xchg
adc
mov
jne
sub
fadds
sahf
test
push
sub
jl
mov
test
repz
add
rcl
roll
in
pop
xchg
pop
rorb
les
sbb
cltd
sub
pop
es
jbe
jbe
in
pop
movsb
cmpl
xchg
sub
mov
sbb
test
cmp
cmp
pusha
xchg
add
sub
pop
popf
fwait
or
test
and
pop
xor
das
jno
sub
sbb
xchg
cmp
mov
add
cmp
pop
push
mov
add
into
enter
mov
pop
pop
mov
mov
pushf
stc
pusha
out
fsubs
mov
mov
fsubp
outsb
cli
fsubrp
roll
sbb
daa
mov
xor
pop
aad
out
data16
jle
sub
adc
xchg
or
sahf
mov
jae
dec
fistl
xchg
outsb
insl
add
arpl
xor
sbb
ds
push
mov
arpl
mov
push
sub
les
push
xor
and
push
jb
mov
roll
cmp
cmpl
pop
cmp
mov
test
mov
out
aas
cmp
sub
inc
out
jle
lds
pop
xchg
pop
xor
mov
test
mov
mov
xor
and
fistpll
aaa
jbe
popf
hlt
in
mov
jmp
stc
jnp
adc
xor
inc
jnp
clc
lea
scas
enter
imul
pop
in
sbb
sahf
dec
jp
lcall
xor
jo
sahf
jbe
ja
xchg
jge
stos
mov
dec
add
pushf
fnstenv
mov
xchg
pop
outsb
sbb
sub
xchg
mov
incl
xlat
in
loopne
mov
loope
lahf
sti
cmp
and
ror
notb
pop
mov
and
or
shll
shr
cmp
sbb
cmpl
jle
cli
sub
sub
add
xor
fimull
inc
add
pop
mov
sar
xor
jmp
scas
aas
push
ljmp
jecxz
ficompl
jno
je
in
sub
imul
mov
lret
jae
imul
sub
dec
movsl
popa
incb
lahf
bound
stos
sub
sbb
or
sti
lods
nop
adc
scas
das
jbe
icebp
push
sbb
cmpsb
test
adc
cmp
inc
mov
sbbl
cmpsb
fldl2t
cmpsb
or
popf
jno
mov
mov
jge
outsl
cmp
or
lea
pop
jp
iret
incl
es
inc
sub
push
push
cmc
cmpb
adc
fdivrl
out
jo
mov
dec
sub
dec
xchg
cmp
adc
mov
in
jne
test
inc
inc
pop
mov
mov
je
sub
jo
cmpb
sub
rcrb
stos
sub
xlat
popa
jmp
outsl
mov
pushf
jno
xchg
fucomip
lcall
rolb
int3
std
es
stc
adc
nop
cltd
lahf
xchg
cmpsl
adc
and
xor
loope
bound
push
push
push
inc
inc
jno
test
sbb
fldenv
jl
mov
orb
inc
push
fistl
xchg
pop
pusha
sub
sub
mov
pop
inc
rorb
popf
cmp
push
pop
aas
lds
mov
je
repz
jg
enter
mov
mov
sub
jle
into
js
ljmp
jo
in
sbb
cmp
jecxz
loopne
loopne
sub
in
lods
in
pop
in
dec
xchg
jbe
sbb
push
fldl
ljmp
jp
pop
mov
imul
cmp
push
jp
je
mov
adc
pushl
arpl
repz
push
inc
jp
push
icebp
mov
push
and
pop
js
mov
lret
push
jo
xor
pushf
divl
cwtl
popf
inc
adc
fwait
push
mov
testb
mov
stc
insb
mov
and
sub
fildl
pop
lds
xchg
dec
dec
scas
mov
and
and
js
pop
fmull
mov
ja
sbb
cld
pusha
ljmp
loop
mov
jo
stos
jge
mov
mov
pop
mov
mov
cmp
adc
and
out
repz
sbb
das
mov
pop
fisttpl
cld
sub
lahf
cmp
test
testl
add
cmpsb
lods
insb
push
jecxz
xchg
cmc
shll
mov
mov
lods
and
jle
jno
mov
outsb
pop
xorb
imul
fldl
pusha
xchg
test
rep
ss
fcmove
mov
dec
bound
gs
push
pop
cmc
notb
imull
or
das
int
inc
xchg
adcl
mov
out
mov
adc
enter
js
jge
stos
sub
test
sbb
clc
stc
repnz
rclb
aas
sub
stos
es
pop
jno
fsubr
inc
cs
in
int3
mov
pop
int3
xchg
xchg
jne
dec
adcl
ret
mov
fcompl
adc
push
aas
cmp
mov
jne
ror
jb
aam
out
pop
jo
add
pop
push
stos
sbb
jmp
popf
les
or
adc
fidivrs
and
idivb
enter
nop
gs
add
adc
adc
sbb
paddw
xchg
mov
xchg
pop
pop
cld
or
rcrl
mov
loope
imul
sbbl
lds
jge
inc
push
pop
in
les
xor
subb
cmpsb
repz
cmpsl
sbb
into
outsb
inc
lret
inc
xor
shl
inc
adc
stos
out
mov
jns
loope
aas
je
xchg
xor
push
or
fdivp
pop
mov
sub
in
jne
pop
icebp
fcmovb
imul
out
lret
dec
lret
xor
and
ret
dec
xchg
dec
jge
into
nop
stos
cmp
or
popa
push
sbb
addr16
mov
and
cmp
clc
sbb
xchg
js
xchg
stc
sbb
les
hlt
jge
repz
and
stc
ficoml
inc
mov
pop
cmc
xchg
stc
or
enter
xor
and
pop
bound
fs
xor
adc
lea
adc
incb
inc
test
jp
jns
js
addr16
add
and
jmp
inc
lret
inc
inc
cmp
add
inc
mov
or
jmp
cmc
sbb
mov
fcomps
jle
inc
rclb
mov
inc
cwtl
adc
adc
test
push
dec
adc
push
or
fsubs
push
pop
call
and
mov
jl
in
or
and
sbb
rcll
jo
lea
push
les
inc
cltd
addr16
aas
cltd
sbb
mov
pusha
push
jbe
inc
aam
out
imul
neg
scas
rcr
pusha
push
mov
mov
inc
jecxz
mov
call
dec
mov
and
push
pop
push
das
cltd
push
sub
sar
fwait
sub
xor
mov
les
mov
or
xchg
xor
out
dec
lahf
push
adc
and
fsubrs
sub
jp
loopne
jle
ja
dec
add
sbb
repz
aaa
xor
ss
cmc
jns
sbb
dec
popa
push
xor
addl
rcll
add
xor
pop
jbe
out
mov
mov
daa
sbb
adc
or
dec
xor
add
dec
jae
in
adc
adc
xlat
scas
sbb
cltd
dec
xchg
dec
jmp
ljmp
and
mov
nop
mov
mov
jge
sti
cmpsb
mull
xchg
push
pushf
fdivrl
mov
daa
dec
add
mov
lea
add
adc
mov
movsl
int3
out
aas
push
adc
imul
or
mov
aas
sahf
loop
mov
mov
ss
icebp
popf
add
data16
jbe
mov
mov
xchg
push
mov
jo
negb
inc
sub
and
push
sbb
jae
jnp
out
adc
sub
inc
inc
fwait
xlat
push
cmpsb
cmp
stc
pop
xor
lea
movsb
shl
cltd
xor
jne
jo
cli
mov
pusha
insl
int
inc
push
jo
fisubl
stos
jnp
cmp
stos
mov
stc
pop
mov
and
ljmp
dec
repnz
aad
lock
repz
mov
aam
mov
inc
jp
adc
dec
fisubrl
cld
inc
insl
mov
and
mov
mov
and
stos
fucomi
es
mov
lea
adc
inc
push
jp
andb
xchg
push
lods
inc
cmpsl
jb
sub
dec
gs
fnstsw
xor
and
pop
and
jmp
jg
cwtl
in
pxor
or
lds
sahf
sub
test
call
lret
sub
rorl
dec
adc
xchg
inc
mov
mov
push
push
iret
data16
sbb
mov
scas
or
adc
cld
sub
shrb
adc
shlb
insl
jb
leave
cmpsl
cld
jno
push
aam
jp
push
bound
pop
dec
push
jne
dec
inc
mov
mov
repz
mov
pop
dec
pop
into
stos
mov
mov
xorb
jg
mov
sub
out
mov
mov
test
adc
das
ja
popf
mov
stc
xor
mov
loopne
xchg
push
orb
mov
or
scas
pop
xchg
add
or
cmp
hlt
in
inc
leave
repnz
push
insl
cmp
addb
jl
cmp
push
jle
fisubrs
call
test
rolb
aam
imul
pushf
push
in
dec
xchg
in
stos
inc
out
repnz
mulb
cmc
int
push
lret
ret
mov
add
push
addl
orb
mov
test
int3
inc
cld
aas
popa
nop
or
fs
ret
andl
nop
xor
cld
jle
mov
es
decl
stos
push
out
pushw
movsl
or
stos
cmpb
cmp
mov
daa
or
push
sub
mov
rorb
in
fdivs
nop
insl
ss
push
dec
fincstp
adc
xchg
pop
jp
jb
push
jb
lret
addr16
aad
ret
or
pop
or
sbb
pop
cwtl
inc
add
sti
movsl
in
shll
decl
js,pt
push
mov
lret
enter
loopne
shlb
sbb
xchg
or
jg
jbe
mov
fwait
arpl
mov
bound
add
imul
dec
dec
cltd
or
lahf
lahf
adc
push
hlt
or
xor
les
mov
mov
adc
xor
dec
add
jge
arpl
sbb
xlat
add
jns
jae
mov
jg
mov
flds
outsb
cmpsb
xchg
push
ficompl
xor
push
jae
mov
cmp
cmp
lcall
mov
lea
push
mov
push
popa
pushf
pop
mov
cmpsb
cmp
sub
dec
sub
push
push
mov
in
xchg
and
lods
jg
sbb
cmc
and
push
stc
inc
cmpsb
bnd
sti
inc
mov
in
fisubrs
and
test
sbb
pop
add
fxam
addr16
cmpsl
pop
inc
stc
loope
mov
fisubrs
sub
iret
mov
jbe
add
push
push
xor
add
js
outsl
enter
push
fnsave
mov
or
nopl
shll
adc
data16
lret
fadd
sub
pushf
ficoms
cmpsl
jne
pop
pop
cmp
sti
dec
fdivr
pusha
leave
lea
mov
mov
push
mov
and
fstps
int3
sbb
and
repnz
pushf
push
xor
xchg
add
lahf
cmp
cmp
or
adc
sbb
cmp
test
shlb
call
mov
push
lahf
push
fucomp
gs
rorl
jne
and
xor
and
or
mov
out
or
in
loop
push
jo
dec
xlat
xchg
sbb
cmpsl
mov
out
mov
add
jmp
mov
aaa
mov
cmp
lahf
lock
cltd
jne
out
mov
out
and
mov
sub
test
jne
push
inc
xor
test
adc
gs
ret
pop
out
scas
mov
or
sbb
dec
cmp
xor
leave
xor
adc
xchg
jp
mov
cwtl
test
jmp
mov
sub
push
fucomi
frstor
mov
pop
and
xor
fstpl
jae
test
xchg
cs
fmul
ret
movsl
loope
fwait
inc
in
and
jge
ss
sbb
or
hlt
js
jg
repnz
sub
shl
lret
inc
jmp
lret
sub
loope
adc
inc
adc
mov
mov
fs
sti
std
lea
add
mov
adc
inc
in
cmp
psllq
xchg
bound
fwait
xor
pop
jle
or
in
lahf
push
out
scas
mov
mov
sbb
adc
mov
bound
and
inc
push
iret
outsl
iret
test
jbe
push
inc
in
lods
jmp
jb
pop
imul
and
push
fnstsw
shll
repz
xchg
push
dec
pop
fcomps
fists
and
int
aaa
in
int
pop
dec
xor
xchg
xor
push
cs
cld
sub
insl
pop
mov
cmpl
loope
lock
lahf
xchg
mov
pop
inc
popa
fdivs
cmpsl
add
sti
mov
pop
mov
and
mov
out
mov
xor
jns
dec
and
in
jae
cmp
mov
adc
stos
dec
iret
out
cmp
cmp
in
mov
movsb
jae
jl
sbb
mov
mov
inc
mov
ljmp
jp
dec
adc
sbb
or
sub
shl
mov
xchg
pop
cmp
sub
sub
and
mov
dec
int3
jmp
mov
dec
fwait
sahf
lea
mov
mov
fucomi
push
in
push
mov
repnz
and
push
adc
dec
sbb
gs
pusha
pusha
cmpsl
xchg
jb
xor
cmp
insl
cmp
int
xor
fistpll
push
lahf
jge
mov
insb
leave
movsl
ds
jnp
shrl
adc
adc
push
testb
jnp
bound
cmp
jno
popf
inc
lret
or
pushf
ds
stos
sbb
aam
dec
std
lret
xor
pop
mov
jno
ja
mov
mov
pushf
sub
dec
cld
xchg
loope
incl
mov
cli
js
bound
push
out
loopne
fcomi
xchg
cmc
sub
sti
adc
inc
mov
or
sbb
mov
dec
adc
fidivs
mov
mov
dec
inc
fs
popa
xor
data16
xor
xchg
aam
mov
pop
and
mov
test
adcb
sbb
mov
cmpsl
lsl
push
out
sbb
dec
ret
add
mov
subb
inc
mov
testl
add
xchg
mov
in
popf
bnd
cmpsl
arpl
orb
sub
lds
insb
pop
lods
dec
add
fadds
sarl
and
mov
mov
mov
sub
pop
ret
or
adc
adc
xchg
movsb
test
test
fs
add
cli
ds
inc
mov
push
leave
mov
jle
lock
fwait
imul
cmc
push
jmp
fisubrl
mov
push
cmp
xor
push
mov
xor
mov
xor
dec
lods
bound
aas
pop
std
push
test
lds
jns
pop
subb
jl
shl
rcrb
sbbb
jnp
cmc
jecxz
adc
test
loop
cmp
cld
test
mov
adc
push
add
dec
xchg
mov
lret
adc
cli
xor
push
into
mov
out
addl
mov
lods
mov
and
mov
push
sarl
ret
cmp
enter
xor
xchg
into
pop
jl
js
sarb
cmp
sar
lock
inc
cmpsb
pusha
test
ljmp
or
or
dec
xchg
fs
jmp
test
aas
stos
test
xor
ja
clc
jmp
outsb
pushf
jns
inc
test
cmp
xchg
in
sub
mov
leave
clc
idivl
pusha
stc
dec
inc
adc
pop
mov
push
pop
cmp
pop
fwait
push
sub
inc
rcll
mov
idiv
pop
in
in
xchg
mov
sub
test
and
cmp
push
mov
push
push
in
push
xlat
cmc
adc
in
lcall
inc
imul
std
rdpmc
in
test
jle
sub
dec
imul
popf
or
xlat
fistpll
negb
out
icebp
sbb
push
jl
mov
and
repnz
addr16
dec
call
jecxz
and
adc
mov
sbb
sbb
lea
sub
stc
out
in
and
enter
dec
movsb
push
xor
das
loop
adc
aad
sbb
inc
fsubl
cmpl
xchg
sbb
push
stc
mov
cmp
pop
xchg
leave
sub
dec
push
add
mov
fwait
jne
or
ljmp
xchg
pop
or
inc
mov
scas
fdivrl
sub
subb
sub
sub
fnstcw
or
push
loopne
add
cwtl
in
inc
das
push
pop
cltd
dec
jne
imul
jno
xchg
test
mov
sahf
outsl
mov
das
sub
pop
mov
out
adc
stos
mov
lahf
data16
sbb
arpl
repnz
push
daa
insb
inc
ss
jge
imul
pop
cmp
cmp
and
xchg
nop
jns
test
mull
imul
aas
cmp
loope
xchg
mov
popf
jo
mov
xor
pop
test
xchg
test
and
cmp
out
push
pusha
pop
add
cld
sub
pusha
je
scas
jb
jp
ret
sub
mov
mov
push
dec
xchg
lods
mov
pop
jg
dec
inc
adc
clc
mov
pop
int3
ja
fisubrl
dec
xchg
jg
push
pop
or
stos
mov
cld
pop
clc
sbb
imul
idivb
popa
in
jns
add
dec
loopne
add
inc
mov
sub
int3
shl
adc
pop
call
xor
clc
xchg
cmp
in
gs
push
cmp
lahf
cmp
sbb
mov
cmpsb
and
pop
cmpsb
imul
cmc
aad
jle
mov
add
pop
cmpsl
sbb
and
jb
mov
inc
stc
adc
mov
sahf
xlat
jns
jno
orl
sbb
cmpsl
push
inc
xor
cmpsb
xchg
cltd
push
mov
movsl
mov
xchg
xchg
aam
pop
mov
mov
insl
adc
sar
aaa
jecxz
aas
or
lcall
xchg
imul
inc
sub
xor
pop
push
jo
sbb
mov
sahf
sub
push
sti
je
pop
mov
mov
orb
movsb
rclb
sub
add
mov
loop
mov
lea
jecxz
int
xor
ffreep
das
int
arpl
and
repnz
xchg
cli
xchg
and
popa
inc
mov
add
lret
outsb
or
cmp
bound
ja
sahf
in
leave
jne
arpl
pop
shrb
xor
mov
dec
xlat
testl
fbld
xchg
xor
movsl
push
ljmp
xor
push
adc
ljmp
xor
mov
loopne
mov
xlat
rcrl
xchg
mov
out
push
xor
add
enter
pop
pop
mov
xchg
jge
cld
mov
jge
xchg
sub
jns
hlt
jle
or
insb
int
jmp
sti
fidivs
stc
loope
stos
fsubs
add
and
enter
xchg
push
mov
pop
jno
sbb
adc
sub
popa
notb
in
dec
test
cmp
jmp
pushf
inc
into
sbb
ficoms
or
mov
and
dec
cmp
icebp
cmp
movsb
outsb
mov
adc
fldenv
loopne
push
jmp
int
jmp
mov
insl
pop
ret
mov
dec
add
mov
xor
push
and
push
pop
xor
jmp
cmp
jb
dec
mov
inc
test
adc
mov
lahf
push
inc
fstl
sub
jecxz
into
test
sbb
jbe
jge
mov
cmp
adc
lods
mov
push
jbe
jg
rcrl
daa
sub
nop
push
cli
and
loop
out
jb
push
jbe
mov
rol
mov
mov
jb
mov
bound
fs
inc
jb
and
outsl
lret
xchg
jp
loop
push
mov
jle
xlat
adc
rcrl
lahf
sahf
fisubrs
mov
in
jge
sbb
movsb
daa
inc
xchg
pop
fstpt
jne
cmp
inc
nop
sub
imul
pop
mov
pop
dec
and
dec
fs
cmp
mov
adcb
push
cmpsb
push
push
add
pop
inc
out
stos
out
adc
adc
jb
out
xchg
xor
cmp
cld
cmp
ficoms
shll
lahf
pop
pop
lock
out
imul
sbb
sti
or
dec
xchg
mov
test
lea
mov
out
scas
sbb
js
ret
lods
shlb
lret
rolb
imul
loope
sbb
sub
pop
out
imul
adc
das
add
sub
jg
push
inc
mull
jle
inc
shlb
aad
and
ljmp
sbb
push
dec
lock
das
pop
jo
dec
arpl
mov
mov
add
add
aam
mov
rclb
cmpsb
sbb
lds
ficoms
int
rol
or
decl
sbb
sub
jecxz
mov
lcall
xchg
and
mov
rcrl
dec
lods
cmp
aad
into
adc
fistl
jl
int3
test
inc
js
fisubrs
push
adc
in
idivb
xchg
pop
decb
mov
cmc
add
adc
adcl
adc
push
fsts
ds
lock
mov
iret
and
mov
and
ds
loopne
pop
gs
mov
adc
jb
mov
mov
jle
cli
pop
jl
cli
mov
cmp
sub
mov
mull
outsb
inc
shlb
mov
xchg
pop
fists
bound
daa
pop
test
stos
and
cli
fmulp
js
xchg
test
and
pop
jns
mov
jecxz
aaa
dec
repnz
loopne
push
or
or
fcoml
mov
aas
sarb
push
clc
sub
mov
pop
sub
ret
dec
test
int
xchg
sbb
jge
outsb
call
ds
xchg
push
movsl
ret
push
fsts
xor
add
jne
lret
fildl
mov
add
and
add
sbb
shll
idivb
aad
sbb
jae
test
or
lret
ficomps
sbb
xorl
stc
test
jge
mov
rolb
add
leave
fnstsw
jl
bnd
pop
cli
mov
or
lret
adc
stc
dec
xor
subb
aam
adc
rcll
daa
in
fwait
testl
sti
js
jb
lretw
adc
std
aas
fisttpll
inc
push
js
mov
int3
sbb
loop
mov
mov
mov
push
fcoms
inc
jl
add
or
insl
sub
mov
lods
xchg
or
xor
mov
xchg
dec
sub
out
mov
jl
jge
fisubrl
add
mov
mov
movsl
dec
ds
xchg
push
test
or
xor
lods
negb
pusha
adc
inc
out
cmp
rclb
ja
cmp
sahf
dec
pop
decb
inc
jne
adc
es
cmpb
outsl
int3
push
lods
and
and
dec
add
rcr
mov
push
sahf
jecxz
ret
lcall
popaw
ds
dec
je
and
jp
mov
cwtl
mov
xchg
mov
or
pop
mov
insb
inc
sbbl
into
pop
in
jmp
int3
ret
mov
test
scas
fstp
lcall
push
and
xchg
mov
jl
sbb
push
push
cmp
push
out
and
shl
insb
popf
test
orb
stos
jecxz
dec
fwait
pop
pop
mov
rcr
imul
popa
bound
mov
sbb
xlat
in
push
xchg
dec
inc
and
dec
dec
lea
andl
mov
mov
fmul
aas
sbb
cmp
cmp
loop
outsl
mov
mov
pop
lods
push
repnz
jnp
lret
dec
sub
aas
fwait
sub
xchg
lds
sti
sub
or
pusha
sahf
outsl
rol
inc
jge
dec
xchg
push
pop
mov
jle
stc
sub
and
xor
add
sbb
lcall
xlat
jno
adc
jo
jne
xor
pusha
inc
shr
mov
ret
mov
clc
jae
dec
movsl
push
xorl
inc
add
mov
fdivrl
xchg
and
jae
fcos
stos
lcall
cmc
sub
loop
pop
xor
or
inc
daa
pop
cmp
rorb
testl
aad
dec
adc
imul
adc
push
sbb
xchg
rclb
out
cmp
pop
push
xchg
and
aaa
xchg
lods
sub
loop
sub
inc
sub
and
in
push
aad
lds
xor
push
cs
hlt
sbb
adc
aas
adc
jae
inc
cwtl
or
xor
out
mov
dec
inc
push
or
xchg
sarl
cmp
pop
les
int3
jbe
jbe
jno
js
iret
stos
fsubl
jns
mov
sarb
leave
cmpsl
insl
fidivs
jne
jo
inc
arpl
jmp
pop
aam
xor
mov
sbb
inc
sub
jne
cmp
movsl
add
out
leave
fsqrt
call
lods
pop
test
call
mov
into
lods
mov
mov
idivl
xchg
xorb
fstpl
orl
xchg
and
adc
mov
andb
loop
sub
inc
into
pusha
add
xor
or
and
add
das
lcall
push
subl
hlt
pop
and
cmc
mov
jb
and
mov
mov
inc
dec
sahf
insb
add
stos
in
inc
and
inc
inc
ficompl
stos
xchg
in
jae
imul
xor
dec
mov
aad
cmpb
scas
cmpsb
mov
repz
cltd
mov
aas
aas
mov
add
inc
lds
test
scas
jle
add
and
stos
jl
nop
arpl
sub
xchg
push
out
mov
sub
push
aas
xchg
out
insb
dec
adc
lcall
call
lods
test
mov
push
sbbb
inc
shlb
aaa
pop
gs
push
jbe
daa
and
popa
inc
in
jge
add
add
pop
pop
test
or
js
mov
stc
or
jmp
dec
adc
je
push
mul
add
pop
mulb
fmuls
xor
adc
push
and
loope
jno
add
adc
cmp
push
incl
xchg
subl
add
out
sub
jmp
mov
pop
cmp
pop
loope
fistl
adc
jae
add
cmp
enter
or
das
ds
dec
inc
dec
add
outsb
fidivs
fcomp
aad
outsl
mov
lret
cli
push
fsubrl
inc
repz
out
sti
nop
stc
shlb
gs
pop
call
adc
add
cmovb
pusha
mov
sub
imul
icebp
push
mov
inc
das
mov
pusha
cmp
xchg
or
push
bound
mov
add
aam
rorl
addb
mov
pop
arpl
imul
fistpll
sub
in
mov
jle
fsubs
lret
iret
arpl
push
int
cld
inc
xlat
push
mov
outsb
or
sub
mov
adc
xchg
sub
je
aaa
out
or
adc
dec
popa
ret
push
movsl
stc
mov
mov
jmp
std
sbb
ret
imul
mov
mov
pop
mov
or
dec
fildl
lcall
xchg
xchg
mov
outsl
test
loope
or
dec
push
decl
mov
movsb
fstl
sub
push
mov
or
lmsw
and
imul
and
pop
add
lock
push
sub
decb
mov
in
fcompl
gs
dec
out
jne
xchg
mov
pop
shlb
insl
adc
out
xor
outsb
and
jbe
insl
filds
lret
jbe
push
jb
std
pop
mov
lds
clc
stos
cmpsl
lods
push
push
mov
ss
roll
loope
arpl
add
dec
pop
sbb
mov
cmc
push
jecxz
iret
mov
inc
fwait
push
sahf
cwtl
pop
test
hlt
ljmp
les
xchg
inc
push
imul
outsb
jae
lods
fisubrs
and
shr
cs
nop
mov
dec
jnp
xchg
pop
pop
sbb
fs
outsb
or
movsb
dec
jmp
popa
sahf
jno
adc
xlat
pop
cmp
mov
sti
iret
sarb
xorl
mov
add
gs
mov
lret
or
xor
lock
je
andl
jne
sbb
mov
pop
mov
xchg
dec
xor
loope
stos
clc
fmuls
shll
pop
fwait
xchg
add
aaa
arpl
mov
ds
out
movsl
arpl
inc
mov
xlat
fiaddl
dec
mov
test
test
jecxz
lds
mov
adc
cmp
pop
xchg
and
imul
mov
loope
or
sbb
fcomi
xchg
jecxz
push
stos
fxch
daa
bound
and
mov
cmp
imul
cmp
xor
sub
and
mov
cmp
sub
add
out
out
outsb
adc
lahf
addr16
xchg
test
dec
je
add
sub
adc
inc
sti
push
ss
add
inc
dec
pusha
sbb
xchg
dec
nop
jle
scas
fwait
ss
movl
push
stos
mov
push
jp
test
mov
mov
addl
fidivrl
jmp
dec
out
cld
dec
jp
aas
std
sar
adc
stos
pop
xchg
daa
imul
pop
mov
xor
test
mov
mov
jg
pop
in
test
add
es
in
imul
dec
mov
xor
std
lds
js
sub
cli
dec
jp
imull
cld
test
ret
fwait
xor
dec
stos
repz
pusha
outsb
inc
mov
cmp
lods
lea
pop
xchg
lds
cmp
mov
cmc
mov
outsb
and
sub
sub
xor
add
push
or
sub
or
cmp
ret
mov
cmpsl
cmp
xchg
imul
and
cli
ljmp
push
xchg
sub
jb
dec
jecxz
mov
fstpl
jo
jb
scas
int3
aam
mov
outsl
push
cli
sti
mov
enter
icebp
test
dec
das
xchg
pop
insl
dec
jmp
add
ret
mov
xlat
aad
mov
out
stc
mov
lcall
push
and
jb
insl
xchg
mov
stos
loopne
push
and
dec
aaa
je
and
inc
jmp
repz
add
or
mov
push
or
hlt
in
repz
rcrb
cmp
icebp
push
and
enter
push
out
mov
ret
dec
ss
fcoml
psubsb
pop
arpl
es
lock
cmpsl
and
push
pop
sub
cmp
inc
out
inc
xorb
lea
popa
push
popf
insl
je
mov
je
and
push
out
or
lea
add
test
cld
insl
mov
shl
and
mov
ficomps
push
fsubrl
sahf
mov
adc
jmp
inc
in
cltd
shl
fwait
add
movsb
mov
jnp
in
fmul
fcompl
orl
cmpsl
ss
jmp
fmull
inc
dec
stos
stos
jb
flds
push
in
inc
inc
mov
inc
loop
xor
xchg
mov
in
fiadds
hlt
fldt
lods
adc
mov
inc
dec
subl
pop
cmp
cld
push
fwait
sub
daa
aaa
xchg
mov
or
popf
mov
xchg
jle
js
push
inc
das
sub
fdiv
sub
mov
aaa
cmp
sti
sbb
pop
out
test
mov
pop
sub
sbb
add
or
xchg
add
ss
and
jg
icebp
pop
xor
push
or
test
mov
popa
decb
mov
js
jecxz
scas
xor
push
in
push
dec
sahf
sahf
mov
outsl
push
call
cli
mov
mov
mov
dec
pushf
push
dec
iret
sub
and
pop
xchg
push
sbb
lods
into
xchg
jne
push
pop
loop
in
sbb
jnp
sbb
daa
mov
push
in
out
xchg
ds
inc
inc
dec
pop
jne
shl
mov
or
push
cmc
or
mov
jbe
test
test
mov
and
add
push
mov
jae
in
pop
and
jbe
jae
or
dec
dec
mov
stos
int
test
pop
mov
cmpsl
popa
shl
sub
inc
mov
jbe
insb
adc
cmp
adc
adc
stos
mov
push
lret
cwtl
add
paddb
imul
xor
sbb
loopne
mov
mov
fisubrs
cmp
mov
ja
pop
cmp
icebp
mov
cmp
mov
lods
cmp
inc
pop
jb
rol
adc
push
xor
ljmp
pop
pop
and
pop
pushl
imul
add
add
test
mov
add
mov
imul
xchg
xlat
and
mov
mov
fsubs
fwait
pop
test
test
mov
js
enter
dec
xor
xchg
clc
pop
lret
addr16
jp
ret
xchg
out
mov
call
push
out
addr16
leave
mov
sahf
shll
adc
je
out
jg
mov
jo
mov
ja
sub
cmp
push
test
sub
movb
jg
sti
popa
mov
movsb
and
add
pop
loope
inc
dec
pop
adc
mov
ljmp
iret
js
test
inc
cli
sub
cmp
into
nop
jl
pop
mov
push
aaa
jp
cmp
imul
mov
mov
or
test
jns
pop
cli
mov
iret
xor
fnstcw
iret
mov
out
push
push
ficomps
mov
lcall
pop
add
push
mov
lods
or
fidivrl
cltd
cmp
cmp
xlat
jge
and
and
je
sub
leave
or
std
dec
sbb
lds
int
lret
test
repz
mov
add
push
pop
jne
inc
call
mov
lock
push
mov
and
sub
push
ja
mov
stos
xor
lea
cmp
lret
sarb
adc
sbb
lock
insb
sbb
mov
mov
pop
dec
jg
in
mov
cs
mov
or
test
or
mov
enter
or
adc
paddusb
inc
mov
cmp
loope
mov
or
ret
sub
add
mov
sarl
dec
fs
push
fcoms
dec
push
mov
in
js
fldl
mov
loopw
mov
dec
fdivl
popa
xorl
sahf
pop
mov
pop
xlat
leave
pop
pop
stos
lret
fildll
mov
insl
jbe
and
sub
sbb
xlat
into
inc
inc
jns
push
cmp
jae
xorl
ss
fiaddl
xor
sbb
fsubrl
inc
ror
inc
pop
jns
je
and
and
sbb
mov
lcall
int3
push
adc
cmp
jo
dec
frstor
cmp
xor
aad
cmp
xchg
cmp
push
les
je
or
pop
xchg
pop
xor
xchg
mov
xlat
inc
test
cmpxchg
xorl
repnz
or
mov
dec
cmp
ja
pop
or
jae
mov
stos
mov
mov
mov
loop
inc
mov
ss
add
lds
mov
data16
mov
orl
popa
push
xor
lods
xchg
sub
xchg
xor
add
pop
pmulhuw
bnd
mov
and
addr16
addb
mov
iret
ss
jo
bound
scas
imul
pop
push
repz
xor
lret
cmp
hlt
lret
stos
push
cld
test
push
jecxz
daa
rclb
jbe
cmp
repnz
pop
sub
push
add
push
pushf
cmp
lret
pop
add
mov
jo
aaa
add
clc
ret
dec
push
enter
les
sbb
stc
out
lods
mov
xchg
push
loopne
clc
movsl
and
jecxz
ret
int
pushf
sub
jno
stos
push
ficoml
int3
cltd
pop
xchg
outsb
push
cmp
pop
jge
or
repz
jb
mov
jge
cli
jg
sbb
jno
cmp
por
jg
jle
adc
fwait
or
rorl
vmovmskps
test
push
stc
and
pop
lahf
pushl
popf
lods
push
out
fsub
mov
push
xor
xor
rcll
or
push
imul
das
leave
test
xor
out
dec
pop
adc
xor
push
lahf
xchg
push
mov
jbe
jp
out
outsb
lods
stos
insb
xlat
and
in
fnstsw
push
xor
setno
dec
mov
or
fsubs
sub
aas
repz
cmp
push
dec
cwtl
mov
cmp
fidivs
mov
repnz
xchg
mov
mov
dec
pop
or
mov
mov
popf
jmp
push
rorl
pushf
push
in
inc
mov
sbb
ret
xor
xchg
fldcw
sub
pop
insb
adc
ss
add
cli
sub
mov
jo
pop
popa
cmpsb
jg
dec
aaa
sub
and
iret
cli
dec
sbb
xchg
mov
pop
cli
divb
sub
in
mov
orb
mov
gs
dec
hlt
push
lcall
add
mov
or
pop
lret
inc
mov
cmp
les
sub
sbb
cmp
mov
outsb
or
cld
xor
sahf
or
fisttpll
subl
mov
mov
aad
jne
test
fdivrs
andb
dec
jae
xchg
jno
fistpll
xor
push
rcl
xor
inc
and
and
mov
shr
dec
in
sahf
stos
shll
int
mulb
xor
add
lods
cmc
arpl
aad
fwait
sti
or
sub
cmp
and
arpl
push
add
mov
cmp
dec
mov
roll
sub
outsb
dec
in
jl
mov
and
adc
cmc
out
and
in
push
cmp
fistl
stc
movb
outsb
sub
xor
inc
and
sub
sbb
nop
out
push
cmpsl
mov
mov
ret
fwait
nop
ss
lret
or
and
mov
outsl
shlb
jne
inc
stos
fnsave
adc
sub
xchg
push
xchg
mov
push
repnz
rcrb
pop
mov
scas
xchg
sbbl
fwait
int3
rcrl
ljmp
jb
mov
dec
mov
push
mov
pusha
out
ror
ret
out
xchg
xor
jle
shll
cmp
mov
pop
mov
aaa
mov
les
into
aaa
aam
dec
cmp
out
dec
shlb
push
xor
scas
mov
lahf
loopne
push
xchg
inc
nop
adc
lret
pop
sbb
xor
sahf
in
mov
in
insl
stc
ret
jle
int
sbb
adc
ds
fnsave
loop
mov
lods
cwtl
ljmp
cwtl
sbb
rcll
ficoms
pop
add
inc
sbb
int3
cld
pop
pop
inc
jo
adcb
dec
mov
imul
add
testl
pop
std
add
xor
repnz
xchg
sbb
std
and
and
or
adc
or
mov
movsb
xlat
lods
inc
das
stc
rcrl
outsb
cld
les
ret
ret
es
pushf
test
nop
sbb
ljmp
pop
rcll
sub
sub
aaa
mov
loop
mov
jae
add
push
loopne
mov
push
push
xchg
pop
dec
adc
push
lret
mov
xchg
test
test
fnsave
test
sti
gs
ss
pop
cmp
xor
fsubl
xor
es
cwtl
pop
adcb
movsl
in
subl
imul
push
pop
sub
jns
lcall
cltd
lcall
aad
xor
imul
icebp
jbe
jb
fidivs
dec
insb
test
in
mov
xchg
loope
mov
xlat
push
ja
fists
ljmp
add
notl
and
mov
out
sbb
push
outsb
sub
daa
xchg
add
cwtl
lods
lock
push
mov
cltd
add
xchg
rorl
adc
or
cmp
mov
jne
rcrb
xchg
cmp
fs
sti
fdivp
pushf
and
adc
andl
sahf
inc
fs
jbe
sub
or
mov
mov
xchg
jge
aad
das
pop
stos
inc
adc
mov
out
sbb
push
inc
jbe
or
mov
lods
mov
aaa
xchg
in
fwait
cld
jno
mov
push
pop
call
fistpl
arpl
movsb
sbb
add
mov
or
push
arpl
push
dec
arpl
add
cld
jne
loop
push
push
cwtl
fimuls
nop
mov
mov
ret
stos
nop
out
fstp
push
or
mov
adc
xor
or
xchg
jbe
fisttpll
push
dec
les
jae
sti
fdivrs
orb
inc
fldenv
in
add
or
in
mov
enter
mov
xchg
nop
pop
pop
pop
ljmp
push
test
mov
outsb
cmp
xor
inc
cmpsb
cmp
xchg
outsb
push
jle
push
bound
jp
cmpsl
in
or
inc
nop
mov
stc
sub
sub
fstl
rcrl
mov
push
mov
mov
inc
push
popf
dec
xchg
jb
jmp
push
jecxz
sar
ds
or
xlat
pop
or
push
xorl
xchg
iret
lods
mov
and
stos
mov
xor
pop
xor
dec
jp
sbb
xor
lods
clc
rorl
push
imul
lods
adcl
pop
sbb
repnz
mov
mov
lods
or
out
adc
mov
sahf
jne
paddusw
pop
push
push
pusha
hlt
jae
push
jle
and
mov
daa
lcall
push
and
sub
cpuid
xchg
stc
clc
and
xchg
cwtl
and
push
push
pop
and
push
jnp
in
stc
mov
dec
icebp
ret
cmp
popf
push
inc
pop
mov
xchg
or
sub
in
mov
xchg
shlb
mov
add
movb
and
jb
adc
repnz
ret
jnp
mov
inc
int
mov
in
rolb
ds
xor
xor
btc
repz
lea
dec
or
mov
jecxz
sub
xor
adc
fwait
xor
les
aas
inc
movsb
mov
sub
mov
add
xchg
xor
push
sbbb
mov
loop
mov
cmp
jno
or
test
push
push
cmp
ret
sbb
ljmp
cmpl
add
sub
mov
xor
jle
cmc
mov
adc
and
sti
xchg
je
lret
es
repnz
shrl
sbb
es
movsl
pop
lret
push
pop
jnp
fsub
arpl
xchg
lret
push
ficoml
cli
pop
mov
iret
std
xor
pop
dec
outsl
mov
adc
cltd
dec
adc
das
jmp
push
pushl
cmp
xor
enter
ljmp
shrl
xchg
and
dec
or
pop
imul
inc
adc
mov
adc
loopne
and
dec
fstpt
shrb
dec
outsl
lret
pop
hlt
mov
ss
js
mov
mov
ret
imul
cmp
roll
inc
fucom
jecxz
and
ds
cmc
cwtl
jb
push
or
popf
sub
cmp
inc
or
add
dec
aad
pop
into
mov
loopne
jg
add
cltd
out
popa
pop
jle
and
mov
rcpps
jge
aam
pop
push
jnp
push
cmp
xchg
inc
movaps
mov
test
dec
aaa
test
and
adc
cmp
jns
mov
sbb
and
pop
dec
mov
lea
lock
sub
mov
mov
xchg
pusha
out
or
xor
insl
subl
lcall
mov
std
shl
bound
mov
test
mov
pusha
dec
adc
pop
je
xlat
pop
push
xor
mov
mov
mov
pop
and
mov
insb
xchg
dec
orl
ja
xor
aaa
pusha
inc
in
push
adc
dec
and
andl
stos
push
popa
mov
fmull
fidivs
push
in
aad
mov
mov
lcall
adc
test
sub
imul
fldenv
aam
jecxz
fidivl
xchg
lret
xor
out
and
pop
int3
rorb
out
pushf
dec
pop
mov
jle
xor
push
jno
pop
pop
jecxz
mov
jmp
sbb
imul
loope
add
mov
jp
inc
and
fcmovb
mov
mov
adc
mov
push
mov
test
jmp
in
or
sahf
mov
aas
jnp
ljmp
sti
and
popf
js
ljmp
nop
sbb
fwait
push
xchg
outsl
mov
insb
insb
data16
out
push
sbb
pop
dec
xchg
pusha
fists
sub
pop
cld
jno
mov
test
fs
mov
insb
xchg
mov
mov
xchg
int3
loop
sbb
or
test
cmpsb
dec
in
mov
jb
fmuls
jns
fstpl
mov
xor
jb
in
add
push
mov
aam
mov
outsl
mov
cmpsl
mov
and
rcl
xchg
inc
pop
das
cltd
jecxz
out
imull
lods
mov
xchg
mov
mov
aas
into
dec
in
cmp
jns
int
stos
clc
test
mov
ja
fisubrs
ret
gs
testl
int
popf
fnstenv
dec
inc
addr16
pusha
mov
pop
mov
push
sarl
xchg
pop
mov
sub
movsl
iret
push
sub
popa
std
mov
nop
clc
cli
mov
ljmp
mov
pop
xchg
add
out
repz
cs
pop
inc
addb
nop
movsb
mov
pop
pop
lcall
or
sub
and
xorl
mov
data16
cmpsb
outsl
xor
stos
cmp
xchg
cld
fxch
xlat
cmp
pop
ss
adc
pushf
inc
in
dec
push
lret
or
sub
adc
and
test
push
lods
jmp
xchg
sbb
push
adc
mov
mov
lea
sub
js
aaa
dec
add
mov
xor
dec
test
pop
loop
divl
repnz
adc
push
sbb
push
push
cmp
mov
inc
loopne
cmp
mov
push
outsb
mov
test
es
push
jno
jle
sarb
xchg
mov
pop
xor
in
add
mov
out
xchg
pop
dec
idivb
jnp
or
add
sub
aas
or
cmpsb
jg
fs
rorl
inc
xor
sub
dec
xlat
hlt
shrb
xor
adc
mov
jo
fisttpl
jne
add
pop
loop
hlt
sub
mov
mov
or
adc
jnp
inc
aam
testl
sub
cmp
outsb
jnp
icebp
push
sub
int
add
std
sub
movsb
sub
call
lds
ds
adc
mov
mov
pop
inc
int
mov
mov
jge
jno
push
inc
add
xchg
fldenv
test
ret
out
xor
pop
mov
pusha
push
data16
dec
xor
ja
mov
ljmp
data16
push
xchg
int3
fwait
jmp
and
ret
in
dec
mov
loop
mov
repnz
test
jne
mov
insl
mov
leave
sub
pop
lret
dec
sub
call
test
fimull
outsb
cmc
cs
cmp
dec
dec
test
jg
loope
adc
jecxz
mov
jns
enter
inc
pop
jg
iret
cmp
shlb
push
test
iret
add
dec
stos
ds
push
sbb
mov
in
movsb
leave
mov
dec
imul
add
mov
test
out
rclb
push
and
mov
adc
negl
adc
loope
outsl
add
roll
test
pop
add
pop
adc
fstl
jb
mov
ss
popf
mov
or
movsl
lock
mov
fwait
xor
nop
test
les
mov
notl
arpl
mov
mov
mov
pop
and
jle
dec
mov
xor
pop
pop
cmpsl
mov
sbb
mov
mov
mov
add
imul
sahf
cmp
mov
int3
sub
repnz
cmpsb
xor
xchg
jg
mov
jg
ds
lahf
dec
sbb
inc
sti
mov
lret
xchg
shlb
test
aad
lock
cmp
in
fiadds
pop
mov
xlat
adc
dec
pop
test
jmp
aam
xor
test
arpl
sbb
push
mull
movsb
mov
pop
sbb
popa
lods
neg
rcrl
pop
add
or
fsubs
stos
mov
push
scas
insl
inc
add
test
mul
inc
adc
inc
push
mov
xor
cs
push
repnz
adcb
xchg
mov
sub
xchg
js
sub
pop
rcll
sbbl
inc
imul
jb
rcl
add
inc
or
out
or
ja
inc
pop
je
sbb
sub
insb
xor
sub
sbb
clc
loope
xor
pop
add
hlt
gs
outsb
xchg
popa
loope
or
fstps
adc
or
mov
shrl
xchg
out
fisubrl
jmp
frstor
adc
xor
mov
add
cli
pop
adc
outsb
pushl
stos
repnz
arpl
outsb
int
sbb
push
mov
dec
daa
int3
and
mov
clc
mov
je
ja
popf
stos
imul
xor
mov
push
es
and
sti
xchg
fwait
std
add
add
cmp
push
jns
insl
ljmp
aaa
jmp
iret
fistpl
lret
jmp
icebp
dec
clc
fadds
iret
or
sbb
jmp
fsubl
scas
pop
pop
push
mov
sub
lret
addb
into
mov
fmuls
roll
mov
adc
cli
arpl
xchg
push
lds
movsb
pop
sub
pop
push
lods
or
xchg
mov
xor
dec
dec
inc
cmp
ret
les
mov
jmp
pop
mov
imul
ret
shll
mov
sarl
cmp
mov
or
fimuls
filds
mov
fsubs
mov
ret
fdiv
cmp
repz
in
and
movsb
fsubrs
mov
push
push
popf
mov
pushf
add
xchg
sbb
inc
xchg
pop
jno
adc
stos
cmpsl
insb
mov
mov
out
cltd
pop
fiadds
ret
mov
or
mov
adc
pop
and
push
xor
loope
add
call
gs
sbb
std
ret
inc
popf
inc
inc
xchg
clc
inc
fnstcw
imul
fstl
and
leave
jmp
push
rcrb
sub
ds
std
dec
stos
xor
mov
mov
outsl
and
ljmp
mov
add
mov
adc
shrl
loope
outsl
lcall
into
and
addr16
jae
insl
enter
jnp
pusha
das
xchg
leave
cltd
addr16
fstpt
sbb
or
adc
in
lods
ret
sbb
jecxz
daa
es
in
mov
lret
pop
mov
daa
daa
and
mov
lcall
push
cmpsl
loop
aad
ud2
pop
cmpsl
sbb
pop
not
cmp
mov
jae
repz
test
or
cmp
repnz
fdivl
cltd
mov
inc
in
popf
rorb
int3
lock
push
pop
dec
jmp
push
mov
inc
test
shr
mov
xor
cltd
mov
gs
cmpsb
add
cmp
mov
mov
xlat
dec
int3
sbb
xor
insb
cli
enter
rclb
iret
push
pop
testl
mov
push
lock
stos
cmp
push
add
out
aaa
test
sbb
hlt
sub
mov
sbb
notb
mov
add
mov
cld
fidivrl
out
ds
ja
lock
fsubrl
mov
or
sub
dec
cmpb
and
xor
adc
repnz
push
ret
shlb
sub
shr
adc
lret
mov
scas
out
sbb
pop
xchg
xor
test
outsb
sub
xor
in
call
add
mov
int
shrb
push
lods
adc
cmp
pusha
fcoml
stos
or
insb
mov
mov
shll
insb
or
xacquire
xchg
fstps
paddusw
cmp
pop
push
xchg
out
test
jnp
stos
js
pop
aas
js
pop
mov
pop
dec
sahf
movsb
ret
push
ljmp
sub
sub
lret
lret
push
or
cs
aad
in
movsl
test
mov
add
push
dec
loope
jg
inc
and
jg
js
jnp
and
adc
mov
aaa
mov
push
mov
cmp
xor
and
xor
test
xor
daa
xor
mov
cs
pop
mov
ss
fsub
lock
leave
mov
je
jp
or
loope
cmp
shll
inc
cld
scas
dec
inc
jno
push
adc
push
test
xor
jb
ja
rcrl
inc
cmpsb
aam
in
sahf
icebp
fistps
sub
jle
push
xchg
repnz
xchg
icebp
sub
pop
pop
mov
sub
mov
mull
scas
ja
xchg
popa
mov
or
mov
fwait
mov
sub
imul
mov
cli
push
movsl
pop
fstpl
shll
xor
fs
popf
mov
and
cmpsl
mov
enter
add
out
das
sbb
inc
and
dec
mov
into
imul
outsb
jle
jno
pop
call
call
ret
int3
nop
pop
mov
pop
cmp
mov
icebp
lret
imul
roll
je
or
movsb
jl
push
push
cltd
insl
js
inc
mov
lock
mov
dec
aad
mov
push
mov
aaa
push
addr16
mov
notl
mov
xchg
repnz
leave
dec
mov
neg
adc
sub
sbb
enter
xchg
idivb
fcom
dec
push
push
out
jge
jae
xchg
push
sbb
xchg
repz
pop
push
xchg
sub
out
xchg
in
adc
shlb
cmp
mov
stos
cld
mov
push
xor
push
es
push
stc
push
jge
rcll
cmp
imul
jns
pop
mov
cmpsl
vmovntps
insb
dec
adc
xor
pop
and
clc
das
sbb
mov
cmp
xorl
and
stos
mov
mov
or
adc
xchg
ret
aaa
aas
push
ds
xchg
hlt
into
adc
and
popa
adc
sbb
cld
fisttpll
cmp
out
dec
fcoms
xchg
imul
pop
fcomps
lret
lahf
dec
pop
mov
mov
lahf
xchg
std
sti
add
insb
xchg
mov
and
xor
xor
out
in
xlat
jg
rol
pop
stos
cmp
mov
dec
jmp
cmpsb
and
mov
in
loope
mov
mov
test
mov
jns
lret
addr16
push
test
shr
aam
les
stos
push
add
sbb
mov
mov
data16
clc
add
inc
jl
mov
sbb
iret
faddl
mov
idivb
mov
imul
arpl
sahf
pusha
ret
dec
arpl
lret
ret
add
xchg
jbe
adc
sub
push
outsl
lock
and
movsb
popa
cwtl
popl
mov
cli
jns
push
dec
jne
mov
ret
xchg
fisttpl
ret
rcll
loope
loopne
sub
xchg
or
repz
daa
mov
jecxz
xor
sub
fistpl
mov
int3
jbe
fs
xchg
dec
sbb
lret
loope
pusha
pop
movsl
rcll
stos
jnp
das
jecxz
xchg
jle
pop
pop
jge
nop
mov
inc
lret
jp
test
jno
bound
push
cmp
subb
addr16
mov
clc
stos
sub
sti
and
cmp
mov
xchg
aad
add
and
orl
adc
jmp
mov
loopne
inc
outsl
push
push
fs
push
xchg
mov
loope
jnp
mov
mov
jmp
sbb
or
jns
clc
pop
add
in
xchg
lea
cmpsl
int3
aaa
sub
mov
jns
mov
or
std
addr16
mov
bound
sub
adc
cltd
icebp
pop
pusha
mov
adcl
pushf
jmp
xchg
jp
inc
jno
pop
lods
mov
dec
pop
jmp
lods
aas
mov
int
cmc
sub
lret
nop
lahf
imul
push
ret
mulb
add
into
mov
out
cmpsl
decl
sti
adc
push
icebp
sub
inc
popf
mov
repnz
cmpsl
or
xor
xchg
push
inc
ret
add
fiadds
pop
push
test
dec
outsb
subl
inc
mov
pusha
pop
adc
adc
push
mov
aaa
lcall
inc
sbb
push
xor
fwait
cmp
cld
pop
dec
inc
call
dec
dec
mov
out
sub
dec
sub
iret
fdivr
js
mov
addl
pop
enter
pop
and
mov
xchg
loop
int3
in
mov
push
pop
out
je
xor
sbb
es
loope
mov
leave
mov
outsl
adc
push
xchg
js
mov
rorb
xlat
adc
repz
pusha
mov
jle
or
out
push
mov
fnstenv
ds
mov
cmp
xrelease
mov
es
pop
popf
lcall
sub
popa
lock
or
push
stc
pop
and
cmp
call
xchg
xchg
mov
nop
ficoms
imul
mov
mov
call
js
or
sahf
iret
inc
ja
js
shrl
insb
ja
adc
add
jns
jp
push
negl
shrb
inc
xor
gs
push
mov
dec
sub
sbb
sbb
jp
cld
movsl
and
pop
scas
sbb
xchg
cs
andl
aam
subb
in
dec
push
dec
stos
in
ret
mov
sub
fsub
mov
adc
xchg
pop
add
jmp
sbb
adc
movsb
inc
xor
js
adc
loopne
fistl
testl
jl
fwait
pop
shrl
in
inc
jno
jne
mov
dec
outsl
in
js
leave
sbb
pop
dec
lock
lahf
bound
popa
fcomi
leave
pop
test
or
subl
mov
sti
test
pop
test
arpl
ror
push
pand
mov
xor
sbb
push
push
cmp
insl
cltd
notl
add
loope
rol
shll
xchg
sbb
insl
mov
int
jp
push
lods
repnz
in
xchg
sub
inc
imul
ja
ficomps
test
xor
inc
jecxz
ss
imul
sub
clc
jmp
sbb
ja
int
insl
daa
push
gs
data16
dec
out
in
push
inc
lahf
jecxz
pop
hlt
jo
popa
fldcw
jmp
cmovb
and
sbb
testb
mov
xor
das
lret
mov
mov
xor
outsl
add
fdivr
jmp
repnz
xor
inc
mov
js
dec
std
dec
cmp
pop
xchg
add
roll
pop
sub
xchg
mov
enter
lret
pop
jb
rorb
cmp
inc
add
and
pop
sbb
add
jg
push
cmc
sub
xchg
lcall
cli
inc
daa
push
or
xor
scas
data16
jmp
aam
out
mov
push
sub
rcll
or
pop
cmp
lcall
rcrb
out
sub
jno
pop
inc
mov
sbb
mov
pop
mov
sbb
jl
addb
nop
mov
jnp
gs
mov
mov
out
or
sahf
in
sbb
popf
aas
test
mov
xchg
addl
fildll
push
iret
mov
pusha
dec
movsl
xchg
push
out
sub
jecxz
bound
pusha
popf
xor
dec
mov
adc
push
insb
pop
mov
gs
and
push
fcoms
pop
aaa
loopne
mulb
fisubrl
xchg
xchg
push
popa
dec
outsl
sbb
das
push
or
lods
mov
ror
sahf
daa
xlat
mov
rorb
inc
jno
cmp
jecxz
add
cmp
adcl
testb
or
enter
pusha
xchg
std
xor
shr
or
dec
xor
adc
cmpsl
adc
cld
out
call
xlat
dec
out
lds
cwtl
mov
jge
mov
adcb
lcall
adc
mov
leave
pop
cmp
jmp
xor
ret
sbb
incb
jne
adc
sarb
insb
jno
loopne
loope
pop
jns
inc
mov
fldenv
loopne
push
fbld
sub
mov
sti
dec
mov
fstpt
arpl
lcall
mov
xchg
lahf
rcrb
pushf
add
mov
ja
clc
inc
mov
cmp
mov
lds
mov
cmpsb
xchg
xchg
mov
mov
movsb
jmp
or
test
jg
bound
ds
popf
ret
dec
daa
sub
inc
in
sbb
jl
loopne
inc
sarl
cmp
dec
xlat
popf
ret
xchg
mov
dec
test
sbb
cmp
jo
gs
outsl
ss
lea
mov
lods
data16
out
call
mov
rolb
xor
loopne
push
int
mov
out
in
arpl
scas
cmp
and
xchg
je
fiadds
scas
test
outsl
push
das
inc
push
decl
push
out
cmp
in
insb
dec
sub
sub
push
mov
in
xchg
sub
push
shll
sbb
aas
cmp
mov
sub
test
test
std
mov
pushf
dec
mov
aad
in
mov
xchg
jae
dec
xchg
xor
jb
xchg
dec
ljmp
push
lcall
xor
adc
movsl
ficompl
xlat
in
push
loopne
jmp
les
faddl
fadd
out
push
push
pusha
xor
data16
bound
mov
les
stos
mov
mov
sbb
xor
mov
pop
cmpsb
fiadds
sahf
xchg
sub
daa
enter
add
aaa
orb
pop
and
scas
sub
mov
test
pushf
jge
xlat
cs
sub
pop
cmp
push
shr
mov
js
ficoml
jge
xor
lock
jl
scas
adc
ja
adc
mov
mov
mov
adc
lret
push
jae
xchg
mov
outsb
int
mov
js
mov
in
data16
loopne
jno
push
or
xchg
and
xor
xor
ficoml
lods
mov
sbb
pop
mov
xchg
rclb
sub
xor
inc
mov
xlat
xchg
mov
divl
jmp
iret
fs
dec
movsb
sub
lods
cmp
scas
push
jae
pop
xor
imul
std
cltd
sub
mov
push
jmp
sarl
roll
bound
lock
iret
repnz
sbb
or
test
popa
loop
gs
add
xor
lcall
ds
adc
sbb
cmp
sub
sub
cs
pop
outsl
repz
pop
mov
mov
enter
mov
sbb
mov
dec
xchg
jo
xchg
rcl
mov
out
movsl
js
adc
leave
movsl
das
into
add
adc
mov
cwtl
xlat
xchg
scas
or
ljmp
rorb
pop
icebp
out
xchg
fstps
lock
mov
outsb
popf
push
cmp
popf
mov
test
mov
adc
inc
mov
inc
cmp
sub
mov
sub
add
arpl
stos
test
shlb
bound
sarl
add
pop
mov
push
lahf
inc
int3
ret
insb
add
jecxz
mov
jmp
dec
jns
cs
rolb
lahf
cwtl
dec
or
adc
jnp
imul
dec
jbe
push
sbb
mov
movsl
into
mov
push
dec
sub
jne
xor
push
stos
push
adc
adc
sub
sbb
add
mov
js
push
mov
and
pop
or
push
ret
mov
adc
jge
sub
mov
ret
mov
cld
adc
sub
pusha
jb
rcrb
cmp
cli
mov
inc
and
imul
lds
add
inc
xor
xor
mov
sub
cmp
imulb
mov
sub
lock
cmp
insl
cmc
into
mov
lret
call
xlat
jle
test
sub
sahf
insl
fcoml
push
int3
sbb
mov
cmp
cli
in
pop
pop
adc
inc
dec
stos
sbb
push
jno
inc
jo
lea
sub
add
lds
push
jl
jge
jae
mov
arpl
mov
mulb
or
mov
push
sahf
movsl
xor
xchg
jp
ljmp
gs
rcl
iret
pop
clc
mov
xchg
push
or
jae
stos
pushf
outsl
out
arpl
lcall
mov
xor
xor
ja
sarl
dec
jmp
mov
insw
test
das
mov
fiadds
mov
pop
mov
mov
xchg
loop
cmpsb
sub
ds
test
and
std
jecxz
out
xor
jl
adc
imul
mov
filds
push
daa
cwtl
ja
dec
fwait
dec
add
imul
stos
xor
jp
push
jl
mov
mov
mov
add
mov
xor
loop
xor
xchg
push
cmp
int3
sub
stc
add
sub
inc
std
js
mov
pop
mov
lods
popf
jns
leave
in
not
clc
push
aad
add
adc
out
push
mov
into
enter
in
push
divb
repz
out
sub
xchg
adc
or
repnz
mov
ret
call
call
mov
scas
add
clc
push
jmp
lods
add
rclb
sbb
insb
push
cmpsb
leave
subb
cmc
int
dec
dec
mov
and
push
scas
popa
pop
add
cmp
fnsave
mov
xchg
shr
and
mov
ja
add
test
pushf
movsb
frstor
mov
mov
addr16
mov
iret
cmp
or
add
adc
xchg
scas
push
and
dec
ds
pop
cmp
add
mov
xor
push
popa
pop
roll
mov
fidivs
mov
lret
neg
ds
cmpsl
cmp
mov
movsb
frstor
fnstsw
loopne
cltd
bswap
mov
lahf
mov
xchg
pop
cli
in
mov
pop
mov
jge
xchg
call
mov
cmp
into
leave
jl
ja
sti
jmp
push
inc
mov
sbb
lods
mov
adc
adc
pushf
sub
rcll
daa
mov
cmp
lods
adc
sub
aaa
mov
ret
idivb
mov
fdivs
inc
push
push
pop
or
jae
push
sti
aaa
aas
ret
xchg
dec
push
enter
sbb
sti
mov
mov
out
jge
adc
xlat
pop
in
pop
stos
aad
fimuls
dec
adcl
dec
xor
fcomps
push
mov
add
adc
ret
rcll
mov
iret
jb
push
inc
xchg
gs
sub
mov
mov
ds
add
push
add
add
jmpw
cmp
pop
sbb
mov
jl
pop
pop
or
icebp
sahf
push
sbb
jmp
mov
inc
mov
xchg
mov
and
inc
jmp
add
cmp
xor
sbb
je
xchg
xor
cli
mov
jne
and
shlb
xor
mov
pop
ja
sarl
mov
and
test
mov
movsb
mov
pop
arpl
jnp
adc
enter
xor
jmp
into
or
mov
std
push
stc
cwtl
andl
pop
stc
adc
mov
faddl
fldt
pop
fwait
sbb
or
cmc
imul
divl
pop
ljmp
movsl
lret
and
mov
xchg
cmpsb
aad
shlb
inc
xor
notl
in
mov
shr
cmp
js
leave
orb
or
adc
push
jp
call
fs
test
push
lcall
lods
ja
add
sahf
cmp
jmp
add
fidivrl
inc
lds
fwait
mov
pop
mov
cmp
scas
push
call
cmp
and
stc
out
pusha
push
test
xchg
push
lds
push
div
mov
adc
pop
out
iret
pop
sbb
mov
xorl
jg
mov
scas
dec
mov
mov
jne
rolb
mov
mov
int3
cmpsl
loope
mov
cmp
ja
or
data16
pop
xchg
cwtl
mov
mov
lcall
roll
sbb
fdivl
adc
imul
shrl
sub
lret
jge
xor
cli
mov
pusha
mov
shlb
mov
aam
sub
jbe
push
pop
xchg
aaa
and
outsl
sbb
mov
fisubrs
iret
or
cld
jmp
int
imul
sbb
inc
mov
dec
orb
and
insb
sub
scas
cwtl
lds
mov
shll
orl
pop
jbe
mov
mov
scas
mov
and
mov
dec
cmc
aas
push
xor
pop
aas
inc
test
xor
adc
push
out
pop
aad
jbe
movsb
jb
out
imul
cmp
adc
arpl
jl
jbe
mov
repnz
jge
loope
inc
dec
dec
push
shr
sbb
int
jle
fisubrs
pusha
xchg
aas
test
xchg
xchg
and
iret
nop
popl
sbb
cmp
in
mov
shl
bound
les
loopne
xor
ret
aas
dec
lea
cmpl
loopne
icebp
lods
cltd
ret
fcomps
rcl
sbb
hlt
mov
sarb
adc
add
mov
in
push
mov
aad
aad
stos
or
add
scas
xchg
in
int3
pusha
dec
or
rclb
and
sub
adc
addl
mov
daa
mov
clc
sub
pushf
gs
dec
lret
cmp
cwtl
rcr
fs
inc
add
loope
popf
clc
daa
pop
fiaddl
xchg
vmovaps
xchg
sbb
mov
pop
dec
popf
jno
pop
jne
jne
lods
bt
rcrl
scas
scas
stos
add
mov
fsub
stos
xchg
sub
adcl
mov
jmp
sbb
push
js
nop
insl
jge
jns
pop
xor
shlb
push
sbb
mov
add
jo
push
xchg
mov
and
mov
mov
negl
mov
jb
and
ljmp
outsb
mov
inc
add
sbb
cmp
dec
loope
fmull
loopne
mov
das
inc
mov
xchg
jmp
pop
je
mov
in
insl
xor
jg
inc
xorl
push
push
cmp
mov
xchg
in
mov
sbb
jne
jns
scas
mov
sbb
in
jle
adc
pusha
aad
xlat
pop
and
inc
inc
sbb
outsb
imul
push
popf
add
lret
push
or
mov
pop
push
sbb
pop
cltd
loopne
cltd
out
lds
add
cld
clc
cmp
movsb
add
lock
add
jg
jne
shll
jmp
dec
testl
adc
stos
fdiv
jns
test
jle
add
jae
scas
repz
iret
movsb
stos
mov
mov
in
fstl
scas
mov
arpl
pop
call
add
inc
fcompl
dec
repnz
stc
test
and
into
rolb
mov
lds
aas
mov
lock
mov
fldenv
pop
repz
daa
mov
xchg
data16
sbb
push
jp
lods
jb
test
adc
arpl
sti
into
lds
ljmp
lret
mov
jae
xchg
out
ret
lock
xchg
lods
xor
adc
pop
xlat
mov
ljmp
jnp
or
add
sub
addr16
lahf
sbb
icebp
jns
push
adc
jae
inc
fstl
pop
mov
cmp
jo
adc
leave
add
enter
mov
or
cmp
nop
pop
adc
xchg
mov
ja
cmp
xor
xchg
movsl
jnp
inc
or
stos
or
loopne
in
loope
jne
push
jmp
pop
add
push
test
mov
out
adc
leave
nop
lahf
jno
mov
loop
dec
stos
clc
nop
cmpsb
jp
jns
loop
ret
xor
int3
outsl
mov
nop
stos
jno
int3
add
sbb
scas
push
pop
ja
cmp
mov
inc
pop
xchg
sbb
arpl
je
pop
js
mov
shl
in
ds
sub
iret
test
sbb
push
jmp
or
xchg
dec
out
xor
pusha
scas
mov
sbb
imul
sahf
cmp
and
lcall
mov
xchg
jae
mov
clc
sbb
movsb
cmp
add
cli
pusha
ret
or
cld
cld
mov
sbb
insl
fadds
hlt
xchg
in
push
aaa
lock
sbb
xchg
adc
sbbb
mov
xchg
pop
adc
les
sbb
mov
call
lock
fldl
cmp
pop
dec
aas
pop
adc
jmp
jne
std
add
or
push
cwtl
cli
in
js
pushf
int3
pop
lret
out
jecxz
ret
popf
cli
mov
jmp
or
or
loope
xor
ucomiss
push
mov
dec
jae
repnz
stc
cmp
pop
jno
sub
push
movsl
mov
stc
ja
or
arpl
imul
nop
data16
xor
shll
jmp
adcl
loop
fiaddl
mov
and
pushl
mov
shl
adc
dec
das
jle
into
push
ds
out
pop
cli
movsb
sbb
or
mov
pop
dec
push
and
mov
cmpb
mov
fwait
or
fsubrs
xchg
fdivrp
xor
imul
xchg
xsaveopt
insl
and
lahf
sub
loopne
xlat
dec
stos
push
jbe
sub
stos
nop
push
leave
negl
out
mov
out
test
add
pop
jnp
aas
mov
mov
shrl
sbb
cmp
insl
add
push
dec
inc
popa
push
xchg
adc
push
mov
sarl
jle
fldenv
pushf
popa
mov
popa
lret
imull
daa
nop
push
cmc
xchg
ret
xchg
mov
movb
pop
cmp
int3
mov
inc
pushf
inc
push
mov
jg
mov
adc
xchg
push
scas
push
sub
jb
adc
push
popf
insb
and
pop
iret
push
sti
add
shlb
scas
aaa
stos
jmp
shl
imul
sti
mov
loop
aaa
fcmovnbe
popf
fs
jo
enter
mov
xor
xchg
mov
in
loope
mov
xchg
scas
sbb
push
mov
add
mov
cltd
std
adc
xor
mov
sbb
je
fwait
enter
movsb
adc
lods
jne
leave
dec
fdivs
pop
pop
jno
nop
xchg
mov
sbb
jecxz
mov
fildl
jp
sbb
xchg
cmc
mov
imul
in
xchg
mov
jle
sbb
iret
cmp
push
mov
cmp
repnz
lods
rcl
das
or
push
loop
lds
xor
repnz
cli
pop
insb
aaa
cwtl
xchg
sti
pop
fidivrl
cld
add
mov
cmc
ret
adc
jp
pop
loope
add
or
or
adc
jp
and
or
push
lods
gs
inc
cmp
enter
test
sbb
ret
jbe
sahf
jnp
or
rcrb
mov
inc
or
xlat
mov
imul
fucomp
mov
jl
push
mov
add
mov
out
jl
mov
cmc
iret
in
pop
mov
cmp
pop
pop
imul
mov
aad
cmpsb
push
rcrb
shrb
mov
fs
mov
xchg
dec
sbb
adc
jb
aad
cwtl
pop
adc
andb
jmp
pop
in
hlt
fstl
jae
cmp
icebp
addr16
cs
addr16
mov
loopne
ret
jnp
mov
lods
scas
pop
mov
test
sbb
cmp
shl
sbb
mov
lds
dec
inc
fisubrl
mov
mov
inc
xchg
adc
sbb
push
adc
cld
add
ret
mov
insb
inc
jle
iret
sub
mov
ss
sbb
ja
addr16
das
mov
imul
sub
inc
mov
jmp
inc
divl
cmp
rolb
loope
xlat
unpcklps
out
sbb
jae
adcb
mov
icebp
jg
sbb
cmp
out
iret
cmc
dec
xchg
lock
in
or
stc
outsl
in
je
fsubrl
insb
sbb
or
dec
hlt
add
inc
dec
out
push
sub
xchg
imul
fsub
lahf
in
mov
and
jbe
ds
mov
cs
in
pop
xor
pop
fdivrl
pop
inc
cmp
fwait
rclb
mov
shlb
cmpsb
addr16
jge
test
lret
adc
or
ss
dec
mov
orb
pop
aad
xchg
sbb
sbb
fucomp
mov
push
mov
rol
mov
dec
mov
add
in
xor
fistl
jns
pop
icebp
mov
cli
sbb
xchg
mov
icebp
mov
rcrl
ja
fwait
aaa
inc
jg
loopne
push
cmp
test
cld
int
add
xor
cmpsl
mov
mov
xchg
mov
mov
adc
lds
cmpsb
roll
adc
or
stos
aam
fisttpl
adc
adc
clc
out
dec
pusha
pushf
ret
aaa
sahf
mov
xor
out
insb
pop
mov
mov
jns
mov
scas
adc
jg
mov
lahf
in
add
icebp
adcl
push
jge
mov
mov
imul
cltd
mov
sbb
cwtl
or
sbb
arpl
in
pop
mov
xor
cmp
out
and
std
outsl
push
jnp
frstor
fwait
xchg
push
and
call
les
mov
jne
and
pop
mov
pop
inc
data16
in
fst
das
ljmp
push
jo
and
rolb
fisttps
inc
add
adc
sub
pop
lods
cltd
out
insb
or
mov
cmp
jecxz
xor
cltd
cs
fdivrl
ds
mov
enter
push
and
rcrb
popa
mov
pop
add
test
push
fisubs
test
daa
push
pushf
cli
inc
mov
jge
stos
mov
fnstsw
xchg
mov
out
sub
mov
adc
mov
pop
cli
cmp
adc
shr
jno
out
or
shll
loop
lods
mov
add
arpl
call
in
ror
les
fldl
push
adc
jle
cmovle
xchg
adc
cli
jnp
sub
xor
add
inc
arpl
cld
jl
dec
dec
xlat
fldt
das
leave
or
insb
jmp
adc
out
lret
pop
adc
pop
pop
sub
push
mov
xor
push
ficompl
mov
sahf
insl
daa
fisttps
addr16
mov
pop
adc
xchg
repnz
mov
ja
mov
mov
push
fcoml
inc
dec
push
xchg
mov
xchg
mov
outsl
insl
pop
add
push
enter
adc
jmp
ficomps
mov
dec
pop
ss
push
xchg
mov
fs
xor
add
dec
imul
arpl
mov
lock
push
inc
push
and
dec
inc
push
loope
hlt
sub
dec
sub
push
inc
sub
not
sbb
jno
ret
mov
cmp
add
add
pop
fs
sti
insb
add
push
movsb
ret
outsl
xchg
out
mov
cld
push
push
jge
rclb
jne
movsb
cwtl
aas
out
aam
iret
icebp
loop
ljmp
sti
loope
push
test
dec
pop
push
mov
mov
adc
mov
pop
out
rorb
into
cmc
push
add
inc
pusha
mov
in
fcmovnb
pop
pop
pusha
cmp
dec
cli
pop
aam
testb
sub
shll
data16
lods
ret
cs
xor
rclb
das
cmpsb
in
mov
lret
jmp
xlat
jmp
lret
add
xlat
mov
mov
cmp
mov
xor
push
cli
sar
jle
cmp
mov
dec
int
ds
int3
xor
mov
test
jge
int3
lahf
scas
xor
mov
sbb
or
adc
clc
mov
fmuls
dec
mov
lods
iret
fmul
pop
enter
test
jl
popf
lods
dec
inc
ret
dec
daa
test
pop
ds
nop
enter
cmp
inc
jl
imul
je
jno
outsl
mov
pusha
in
test
cmp
and
mov
unpckhps
fldl
mov
jo
mov
sarl
jge
jl
xchg
xor
insl
dec
pop
mov
rcrl
and
push
dec
xchg
in
inc
push
jmp
insl
in
mov
cmp
fs
and
xchg
push
aam
pop
or
data16
adc
popf
pop
adc
jg
mov
jg
add
lods
pop
jmp
push
inc
mov
insl
in
xchg
adcb
mov
leave
jmp
dec
inc
lods
cld
mov
insl
std
movsb
test
lods
adcb
xchg
cmpsl
cmpsb
jle
xor
fucomi
jl
xlat
out
pop
mov
in
xlat
gs
daa
ret
into
cmpsl
xchg
cwtl
loop
outsb
loopne
cld
cmp
cwtl
push
std
pop
adc
push
sarl
sbb
xor
sub
stos
pop
out
cs
sub
xchg
jnp
pop
gs
cs
xorl
mov
iret
ret
mov
inc
xor
popf
xorl
inc
sbb
stos
roll
incb
flds
mov
iret
mov
idivb
pop
jle
lock
loop
cld
mov
add
add
sub
aaa
pushf
cltd
into
imul
add
jecxz
ja
push
inc
in
dec
idiv
and
xor
ret
hlt
repz
daa
dec
add
fsubr
mov
lret
inc
scas
andl
inc
sbb
loopne
in
clc
fisttpl
push
pop
loope
adc
mov
or
andb
data16
mov
andb
incl
fwait
lock
imul
pushf
dec
adc
push
mov
mov
or
fiaddl
cmp
dec
cmpsb
int
push
fidivrs
mov
and
lds
jb
loopne
jl
std
cmc
xor
movsl
or
and
repnz
jno
loope
out
sahf
push
clc
push
or
pop
jne
adc
jle
push
xchg
lret
xchg
inc
inc
inc
mov
push
mov
cmp
std
addb
gs
lods
ljmp
dec
mov
jne
lret
pop
push
xchg
outsb
test
inc
es
and
xor
das
add
sahf
push
shlb
mov
mov
jge
fidivrl
lods
imul
lcall
or
notb
fdiv
push
adc
or
mov
fcos
rclb
push
mov
subb
pop
push
fsts
faddp
shll
sbb
dec
adc
mov
xchg
jmp
jg
mov
negl
push
dec
xchg
lret
js
sbb
lcall
mov
xor
js
sbb
sub
jno
adc
std
scas
lds
add
push
test
dec
push
inc
mov
xor
flds
int
pop
push
ret
xor
les
cs
subb
iret
jb
fbstp
clc
or
sub
iret
enter
in
cld
xor
push
push
movsb
push
scas
std
inc
loopne
insl
xlat
jns
pop
pop
js
daa
push
imul
jle
ficoml
iret
in
mov
or
test
fs
xchg
xor
xchg
int
dec
pop
rorl
mov
pop
fscale
je
sbb
mov
addr16
fwait
not
icebp
repnz
inc
into
xor
adc
testb
lock
pop
or
or
ret
popf
or
fistpll
add
shll
push
sub
mov
out
movsb
mov
pop
ljmp
repnz
js
fwait
insl
push
mov
push
fdivrs
adc
dec
mov
stc
je
adc
sbb
push
push
xor
dec
daa
jae
stos
and
jge
mov
inc
mov
xor
xor
fwait
dec
lock
lahf
sub
sti
test
mov
sbb
mov
adcl
sbb
push
mov
cmpsb
mov
and
outsl
cmp
mov
xor
cli
imul
sub
adc
sahf
movsb
pop
stos
sub
mov
jb
ror
iret
dec
adc
loopne
sbb
fistps
fildll
dec
mov
sub
mov
dec
pop
loopne
loopne
sbb
rclb
imul
adc
ss
aas
add
mov
das
loope
and
xchg
or
add
mov
dec
scas
mov
xchg
sub
adc
xchg
cmp
mov
repz
sub
mov
pop
fisubrl
mov
cld
mov
stc
cmp
sub
dec
nop
pop
andl
mov
insb
pop
sbb
outsb
cmp
xor
mov
es
das
xchg
mov
add
cli
das
push
cltd
cmpsb
dec
xchg
jge
pusha
rol
arpl
inc
sbb
pop
push
push
pusha
es
xchg
push
aad
mov
aam
pop
mov
ljmp
jne
add
adcl
xor
faddl
mov
push
cmp
sbb
pop
adc
adc
adc
mov
rorl
incl
dec
mov
ss
fidivrs
adc
das
in
out
push
subb
pop
push
add
pop
comiss
inc
sub
jmp
mov
dec
stos
jb
roll
mov
rcl
inc
xchg
pop
mov
xchg
iret
mov
in
mov
stos
inc
inc
push
lcall
shlb
push
or
loop
push
fwait
mov
jno
add
fistpl
xrelease
push
pop
xor
jmp
scas
pop
je
in
outsl
idivl
jno
push
dec
pop
push
sbb
sti
or
sub
lret
xor
push
pop
jmp
loopne
cltd
cmp
flds
or
pop
add
jb
mov
movsl
pop
xchg
add
gs
mov
rol
in
sbb
and
mov
mov
dec
lods
ja
mov
xor
bound
jl
pop
inc
ds
repnz
imul
mov
dec
jmp
out
jno
push
imul
inc
mov
mov
mov
xchg
inc
dec
inc
sbb
adc
inc
insl
ja
arpl
pop
pop
icebp
cmpsb
negl
or
inc
cmp
in
insb
push
pusha
inc
and
xor
out
xor
cmp
xor
or
arpl
lret
call
mov
test
in
in
mov
out
imul
shrb
dec
lahf
and
or
and
sahf
pop
or
xchg
lret
out
cmp
cli
shrb
push
mov
jae
lret
mov
adc
xchg
cli
sub
mov
out
cmp
outsb
sub
fs
adc
push
push
cmp
sahf
test
or
dec
aam
shll
ret
scas
sub
ljmp
loope
loope
push
push
lock
jl
int3
pop
int3
mov
mov
or
movsb
popa
rcrl
fisubs
pop
mov
sahf
shlb
out
mov
xor
sub
or
fadd
test
mov
xchg
cmp
clc
ljmp
sbb
repz
repz
jae
aas
mov
addl
sbb
inc
pop
cmp
push
faddl
jne
sbb
cli
dec
fisubrl
shll
push
xchg
push
clc
int
gs
dec
hlt
ret
out
cmp
mov
add
enter
ja
test
adc
scas
jg
inc
xchg
or
xlat
mov
xchg
add
das
xchg
xchg
xor
jnp
pop
cld
jno
sub
pushf
and
ret
mov
and
lahf
js
inc
sbb
jae
sbb
xor
adc
push
sub
cli
adc
or
setne
dec
jp
sarl
inc
outsl
jge
daa
lods
insb
mov
test
pop
jae
add
sahf
sbb
outsb
movsb
inc
or
rcrl
loop
outsl
test
jb
fnstenv
pusha
inc
outsb
into
mov
cmp
sti
std
cs
outsb
sub
or
out
push
dec
inc
test
ja
mov
cmpsl
sub
mov
inc
push
dec
mov
out
xchg
jne
inc
imul
int3
lahf
pushf
adc
cmp
push
sbb
loopne
inc
sbb
sbb
call
nop
inc
call
sub
les
lods
stc
imul
rcr
jno
jne
movsb
mov
sub
push
inc
lea
cmp
fbld
dec
decl
inc
addl
xchg
fscale
cltd
fstps
decl
jmp
push
cs
pop
and
mov
mov
and
stos
mov
stos
xor
dec
aad
mov
lcall
and
dec
in
shl
int
cmpsl
sub
scas
jecxz
iret
test
lret
mov
pushf
les
jge
push
push
inc
sbb
xchg
cli
outsl
inc
imul
subl
addb
pop
xchg
pushf
sub
mov
sub
divl
or
mov
fistpl
cld
cs
mov
testl
stc
jp
subb
sub
mov
divb
mov
xchg
lret
stos
adc
data16
fsts
inc
cmp
lds
test
fwait
outsb
xor
js
jle
mov
jne
xor
jnp
aad
ss
hlt
subb
not
pop
rorl
xchg
rorl
dec
sbb
rcrl
cltd
sahf
mov
div
repz
call
ficoml
add
sbb
sub
imul
mov
inc
outsl
ds
lea
and
and
jo,pn
mov
and
push
enter
lahf
clc
and
sub
gs
aam
dec
xchg
dec
pop
dec
adc
shrb
lock
sub
lcall
out
stc
add
les
xlat
xor
mov
jecxz
iret
icebp
fidivl
mov
pop
mov
cld
mov
xlat
push
push
push
cmpl
aaa
js
stc
or
cwtl
loop
in
int3
pop
sbb
fildll
sub
pop
dec
je
les
mov
push
adc
fxch
jns
ja
mov
fmull
inc
or
inc
imulb
lret
sub
rcrl
out
movsl
jge
in
in
into
adcl
push
add
mov
pop
sti
add
mov
sbb
dec
or
scas
mov
pop
cmp
dec
push
lea
shlb
and
iret
inc
stos
and
pop
stc
std
inc
push
mov
pushf
adc
sub
sub
sbb
dec
xchg
cs
shrb
mov
iret
scas
or
in
iret
xor
cmp
out
push
sub
in
dec
test
sarb
pop
sub
imul
jl
add
add
leave
or
jp
jge
inc
inc
fwait
jbe
jae
pop
subl
hlt
mov
bndldx
call
lret
sbb
out
mov
inc
sub
test
or
jmp
add
push
int
cmp
out
jns
and
and
aad
xchg
lret
add
xchg
xlat
jecxz
xchg
or
test
jp
push
movsb
xchg
sub
cmc
sub
out
jne
fadd
xchg
mov
jp
add
dec
push
addb
adcl
jb
xchg
stc
mov
sub
in
sub
pop
xchg
sub
cmp
test
ss
inc
sub
mov
sub
xor
in
sub
jge
pop
lock
call
outsb
pop
and
adc
nop
outsb
pop
ss
fistps
daa
fcompl
mov
sbb
push
shll
imul
cmp
push
mov
mov
dec
fwait
push
and
icebp
cmp
push
test
sarb
dec
xchg
pop
cld
inc
mov
or
fdivs
scas
aad
jp
or
jno
dec
out
ret
xor
in
std
xchg
mov
jb
add
sub
andl
pop
mov
sbb
cmp
loopne
dec
cwtl
lods
shrb
push
and
pop
btr
and
ljmp
or
jmp
push
sarl
mov
push
adc
xor
imul
aam
je
dec
cld
into
arpl
pop
mov
inc
inc
mov
xchg
in
fmuls
in
nop
aaa
sub
mov
xlat
dec
mov
das
lods
ja
xor
lods
or
mov
xor
add
ljmp
jecxz
jl
sub
cmp
popa
gs
test
xchg
jno
mov
mov
push
push
fidivl
imul
sbb
mov
lahf
push
je
inc
jle
mov
aas
and
test
pop
and
jp
popf
bnd
lea
out
push
testb
sbb
lods
pop
and
stos
jb
clc
xchg
mov
dec
jge
popa
mov
scas
ds
jo
push
out
ja
clc
cs
movsl
lret
popa
into
imul
ds
push
pop
add
mov
icebp
push
mov
cmp
ds
jae
test
jno
adc
pop
xor
xor
xchg
inc
movsl
scas
mov
cltd
rorb
notl
lods
repnz
adc
dec
jmp
jnp
sub
bound
jnp
add
and
sti
jmp
popf
xor
inc
cltd
mov
aas
mov
cmp
xchg
lcall
sahf
push
pop
lea
mov
and
xor
mov
cld
add
ja
push
pop
shll
repnz
pop
movsl
sub
jo
pop
push
push
rorl
aas
sbb
call
dec
pop
repnz
fs
imul
push
arpl
cs
sub
sarb
xchg
scas
push
imul
or
xorb
push
das
loope
inc
and
clc
int3
lods
jae
insb
or
ror
fstl
dec
and
mov
ds
xor
xor
pushf
jecxz
sub
sahf
sbb
pop
sub
add
jbe
mov
fs
shll
arpl
add
loop
leave
and
out
xor
fsubs
jmp
cltd
mov
inc
mov
data16
add
inc
shl
xchg
jo
cltd
lea
aaa
and
cmpb
cld
add
sub
sub
mov
jo
popf
push
mov
dec
fwait
and
and
cmpsl
cmp
xchg
mov
push
dec
inc
or
add
mov
es
and
push
cltd
xor
out
aam
std
rcrl
mov
dec
push
das
jo
fsubrs
sub
nop
ljmp
test
add
add
push
ljmp
out
mov
pop
mov
add
lock
cmp
pop
dec
out
or
mov
lock
ds
lea
mov
sbb
popf
out
jae
stos
xlat
mov
jp
xchg
cmp
xor
outsb
mov
jmp
mov
and
leave
inc
fistpll
aas
xor
jne
dec
sarb
mull
insl
mov
or
sbb
jo
lahf
testb
mov
push
cmpsl
scas
or
mov
jecxz
fisubrs
cmpsl
cmc
push
loopne
mov
fildl
sub
lahf
or
inc
fsubl
rcrb
notl
ret
subl
in
aad
push
in
jmp
cmp
cmpsb
pop
imul
jge
andl
pop
push
adc
mov
insb
xor
loopne
push
cwtl
ret
add
jmp
mov
xchg
push
jbe
stc
movsl
and
fs
cmpsl
fnstsw
add
movsb
or
mov
popf
cltd
in
cs
sbb
sub
rclb
es
cs
in
subl
sub
stos
sub
cmp
je
sbb
jmp
lret
sbb
test
cld
cld
mov
ljmp
movb
cli
jmp
negl
jno
inc
push
push
and
jne
pop
cmpsl
sbb
gs
call
mov
movsb
mov
adc
or
or
or
nop
push
mov
xor
stos
scas
fimuls
stos
icebp
inc
mov
rclb
nop
and
clc
and
pop
bound
xacquire
iret
int
sub
insl
dec
cmp
cmp
stos
loop
mov
push
cmp
adc
xchg
lcall
pop
push
lahf
fists
icebp
sahf
dec
sti
inc
in
push
sbb
sub
int3
mov
pushf
cmpsb
lahf
fst
jne
pusha
and
or
inc
or
nop
pop
idivl
jb
pop
cmp
jo
cmc
mov
jae
mov
bound
lock
call
test
cmp
and
push
push
push
add
xchg
aad
pop
les
faddl
movsb
and
lcall
sub
push
call
movsl
aaa
ficoms
pop
mov
and
mov
daa
pusha
mov
or
mov
xchg
adc
cmp
sarb
outsl
adc
ja
insb
addl
cld
scas
idivb
cltd
movsb
and
scas
dec
mov
sub
dec
lret
icebp
lahf
out
test
dec
imull
sti
ret
loop
lods
cmp
cmp
fcmove
sahf
push
pop
push
jl
sub
xchg
call
loope
adc
daa
pop
test
fst
out
addr16
fldt
aaa
out
cli
lods
pushf
jge
push
xchg
fs
mov
cmp
or
pop
jno
jb
sbb
lods
or
xor
in
push
dec
jp
push
mov
push
dec
push
or
lea
jl
xchg
daa
or
fsubs
subb
insb
ret
icebp
and
sbb
ljmp
ja
xor
sub
xor
sub
cltd
xchg
test
adc
jge
jns
and
pop
or
jno
and
das
popf
clc
divb
sbb
cmc
adc
filds
adc
std
push
aam
mov
sbb
dec
xchg
rorl
lea
in
inc
xchg
mov
or
lahf
mov
xchg
jae
push
fildl
sbb
int
gs
sarl
xchg
cmpsb
imul
xchg
sbb
xchg
xchg
jecxz
insl
addl
add
std
call
jge,pn
arpl
pop
sub
sbb
xchg
mov
rcr
adc
mov
xchg
iret
mov
mov
out
test
cmpsl
dec
fucompp
out
ficomps
ds
shlb
ja
push
xor
fwait
xor
cmpsb
inc
mov
add
lods
sti
ss
repnz
mov
shlb
jle
mov
std
and
lea
mov
out
lcall
fs
jecxz
fstl
or
insl
loope
dec
jmp
sub
jle
cmp
mov
data16
fs
pop
and
sti
int
pop
enter
inc
dec
outsb
imul
sub
enter
test
ror
or
push
mov
or
dec
jb
inc
adc
test
in
add
or
cwtl
jp
movsb
test
adc
pop
xor
sub
or
or
adc
pop
or
mov
aam
mov
pop
jo
jg
loopne
xor
cmp
test
xchg
inc
jno
or
fistpl
into
or
add
mov
outsl
xor
sub
popa
fs
das
popl
jp
imul
lcall
test
jmp
ret
push
outsl
mov
xor
shrb
inc
mov
mov
xchg
dec
mov
push
adc
jecxz
pop
adc
or
lods
xor
push
push
xchg
sar
push
adc
dec
xchg
mov
pop
and
je
idivl
pop
jmp
jle
mov
push
ret
push
sub
movsb
jge
stos
idiv
mov
pop
std
push
jo
cmp
dec
push
mov
cmp
jge
pop
ss
psubsb
jne
popa
sbb
js
fcmovu
dec
push
inc
cwtl
xlat
mov
mov
adc
xchg
jbe
daa
shll
ret
mov
push
cmp
jge
or
dec
divb
out
adc
rorb
dec
out
adcb
jo
lret
sarl
xchg
iret
pop
idivb
cwtl
insb
pop
add
js
xor
or
sarl
cmp
mov
mov
sub
int
and
mov
and
flds
xor
lfs
add
push
out
stos
push
dec
sbb
icebp
fistpll
imulb
bswap
adc
and
xchg
pusha
cmp
fldcw
jne
test
lcall
iret
jo
push
pop
cld
sbb
addr16
inc
pop
xor
sub
rorl
nop
in
jl
nop
inc
inc
mov
imul
popf
sub
jnp
out
mov
adc
movsl
cmpsb
pop
mov
sbb
xchg
js
int
test
jecxz
cld
mov
mov
mov
out
enter
push
add
pop
mov
add
or
ss
mov
iret
jge
lods
push
adc
inc
or
adc
imul
push
les
out
mov
mov
rorb
mov
fiadds
cli
mov
insb
movsl
mov
out
std
pusha
jp
mov
adc
or
mov
add
loop
cmp
mov
ss
pop
test
cmc
movsl
xchg
sub
fld1
gs
aam
sbb
mov
cmpsb
int
ficoms
inc
repnz
mov
push
inc
in
dec
push
fmuls
jno
pusha
push
enter
cmpsb
out
xor
xchg
xor
mov
xchg
mov
loope
or
dec
popf
jmp
jge
js
mov
or
pop
and
jmp
pop
mov
cmp
or
int3
je
daa
sbb
add
clc
cmpsb
xchg
xor
or
icebp
jp
sbbl
mov
test
sub
add
xor
mov
test
cmpsb
add
xor
jp
loop
lock
add
addr16
test
insl
lock
ljmp
dec
leave
subl
ljmp
mov
add
cmc
loopne
icebp
sbb
xchg
mov
out
dec
pop
cmp
xchg
movsl
dec
pop
pop
inc
jae
sbbb
mov
cmp
xor
bound
test
mov
mov
mov
sbb
push
insl
pop
mov
mov
cltd
cmp
jb
sahf
adc
int3
scas
lret
mov
lret
lahf
inc
fisttps
lahf
outsb
rorl
popf
roll
aam
or
movsb
test
mov
mov
cmp
add
add
adc
inc
repnz
pop
mov
pop
mov
aas
cmp
fbld
stc
cld
adc
xor
add
std
int3
addr16
push
dec
or
cmp
mov
daa
cmp
repz
leave
jbe
mov
fdivrs
out
pop
inc
xlat
addl
jmp
cmp
sub
jnp
pop
mov
and
jecxz,pt
mov
mov
mov
lock
jmp
adc
pop
sub
pop
lret
cmpsl
mov
fs
xor
mov
mov
mov
test
mov
add
repnz
clc
cmp
mov
xlat
jne
insl
jmp
gs
xor
and
jle
cwtl
sti
jecxz
xor
or
and
mov
dec
adc
xor
or
jnp
iret
jae
push
test
xchg
stos
push
xchg
jns
jecxz
sbb
mov
lods
gs
dec
push
test
loopne
rclb
cmc
mov
xor
dec
dec
fld
sub
sbb
into
mov
loop
ljmp
mov
pop
xor
scas
clc
sub
jbe
jne
sbb
sub
sub
push
push
jno
test
xchg
jne
rclb
xorl
xbegin
lret
xchg
jg
pushf
jb
aaa
pop
mov
popf
jle
rcrl
ss
rcll
push
pushf
lods
pop
jmp
daa
fwait
pop
lods
hlt
data16
adc
xchg
aaa
pop
les
mov
pop
imul
push
xchg
push
mov
jg
cmp
lods
data16
mov
xor
jbe
int
xchg
dec
std
cld
repz
fnstcw
sbb
fistpll
dec
sub
and
rorb
inc
jbe
and
mov
sahf
div
adc
dec
xchg
and
add
push
outsb
sbb
loopne
push
rorl
cmpsb
mov
stos
push
sbb
push
mov
and
mov
lods
shll
xchg
aam
jmp
shrl
leave
das
mov
cld
icebp
fisttpl
xchg
push
sub
aad
dec
aaa
and
test
fwait
sahf
clc
into
xor
scas
sahf
push
mov
mov
sbb
movsl
sbb
daa
mov
inc
hlt
pop
cli
std
mov
pop
andb
xchg
jb
ss
movsl
insl
into
xlat
xchg
and
xor
xchg
test
jl
aaa
into
pop
leave
xchg
in
pop
hlt
sbb
test
inc
sbb
push
cli
push
pushf
mov
mov
jle
adc
out
lret
mov
and
push
push
scas
jle
fldl
shlb
xor
jl
scas
andb
pop
stos
dec
push
adc
lods
sbb
sbb
decb
cmp
hlt
xor
std
inc
shll
and
sbb
aaa
mov
sbb
addr16
and
sub
push
stc
xchg
jecxz
nop
jp
stos
cmc
ja,pn
addr16
fildl
xor
mov
jb
call
xchg
fidivrl
daa
push
movsl
scas
mov
mov
pop
jle
push
icebp
xchg
adcl
sbb
adc
scas
sbb
cmpsb
fs
stc
pusha
jo
mov
insb
lods
in
xlat
sahf
or
or
push
and
test
xchg
lret
stos
cmp
fs
cld
jae
and
lods
fisttpll
mov
loope
fmulp
fdivr
fidivrs
andl
sub
and
xchg
pop
and
pusha
insb
sbb
dec
push
in
pop
cmp
repnz
sti
mov
adc
push
int
mov
xor
lock
js
mov
sbb
je
cmp
cmpsl
scas
adc
shll
mov
pop
clc
xchg
or
mov
jb
add
jo
stos
test
notb
pop
aam
add
andps
into
and
pop
rorb
inc
adc
mov
mov
cs
fwait
adc
das
mov
fwait
insl
jae
fnstcw
jnp
mov
incb
cld
or
cmp
cmp
mov
sub
lods
fwait
jl
lret
aaa
clc
addr16
dec
icebp
scas
dec
rcr
xchg
push
andb
fistpll
xor
stc
rol
mov
fwait
dec
jo
jmp
and
stos
add
dec
popa
lret
add
cmp
add
push
xchg
or
adc
xchg
insl
bound
ds
mov
aam
mov
popf
fldenv
out
push
in
cmpl
outsb
xlat
insb
xchg
mov
push
mov
shll
mov
div
add
adc
xorps
ret
xchg
push
ss
xchg
dec
push
mov
jno
mov
xchg
loop
cmp
cmp
mov
cli
sbb
mov
mov
jp
rcrl
stos
xchg
push
xchg
imul
and
outsl
subb
stc
jmpw
cli
lods
cs
jecxz
fs
fwait
adcb
cmp
or
lock
and
mov
mov
xchg
mov
inc
ja
dec
jno
mov
dec
add
cmp
and
adcb
stc
rclb
xchg
push
sbb
iret
xlat
push
in
nop
cmp
mov
inc
inc
mov
mov
in
jno
data16
xor
mov
pop
jae
adc
sbb
inc
pop
jp
xorl
repz
and
mov
jbe
add
fldt
sub
outsb
in
addr16
or
int
adc
xchg
in
mov
sbb
lods
lahf
push
jmp
push
sbb
inc
test
movl
data16
fs
inc
in
push
arpl
jns
push
jae
lret
mull
cmp
lods
ficoml
and
lret
add
cmpsb
mov
mov
call
repz
push
mov
insb
rcrl
inc
insb
sub
pop
stos
lea
test
pop
jp
xchg
sub
out
or
mov
insb
faddl
repz
mov
and
stos
test
sbb
sub
movsb
aam
xchg
and
addl
int
das
mov
shll
mov
lods
add
js
aam
lock
xchg
jne
sbb
int
inc
push
pushf
mov
mov
shrb
aam
pop
pop
add
call
sbbl
xchg
adc
loope
das
inc
pop
adc
or
pop
add
icebp
push
xchg
ljmp
xchg
xchg
enter
in
daa
mov
sub
out
mov
or
lea
in
and
pop
test
sbb
aaa
std
dec
ds
loop
mov
inc
fnstsw
jl
ja
mov
dec
dec
aas
xor
aas
add
mov
std
pop
adc
out
lcall
outsb
test
jl
je
repnz
fildll
jmp
pop
sbb
xor
add
ds
pop
nop
cmpsl
pop
cli
sbb
inc
xorb
sahf
inc
cmp
popl
cmpsl
pop
bound
inc
mov
cltd
lock
out
and
repnz
or
mov
xor
jcxz
ja
rorl
sub
and
jmp
fisubl
test
jle
mov
mov
test
sbb
lea
cltd
divl
xorb
pushf
adc
cmc
push
xor
or
hlt
cmpsl
dec
sub
push
pop
repnz
test
je
jl
mov
cmp
cmp
xor
and
shrl
jo
add
lods
or
and
bound
mov
xchg
test
and
sbb
jno
xchg
outsl
stos
dec
nop
xor
sub
push
and
push
pop
pop
in
lcall
sbb
and
sahf
das
popa
in
js
or
mov
inc
jp
lret
sub
pop
cmc
test
inc
scas
or
dec
pop
adc
xor
cmp
or
cwtl
fcomps
jl
rcll
inc
pop
sub
add
sbb
aad
mov
lahf
pop
push
std
and
ret
sub
push
stc
mov
andl
faddl
xor
push
lods
dec
ljmp
mov
ret
andl
popa
dec
adc
rcrb
lahf
int3
into
sarb
add
jno
push
adc
icebp
lea
aam
jp
mov
loop
data16
push
hlt
cmp
dec
aaa
jns
or
cmpsl
loope
pop
jb
clc
jne
mov
cli
imul
movsb
push
insb
sub
popf
call
mov
and
mov
and
dec
jo
xor
xchg
adcb
fsubr
xchg
leave
leave
rcl
fidivrl
mov
rcrl
lods
mov
inc
sub
inc
stc
sbb
pop
sbb
les
and
mov
fdiv
inc
push
xchg
jbe
and
sti
jae
fsubs
jb
push
aas
mov
jo
fisttps
jecxz
in
push
aas
sub
iret
add
sbb
lock
jbe
outsb
jp
mov
in
bound
fwait
movsl
mov
jecxz
outsl
cmpsl
ret
loop
sbbb
out
pop
dec
push
fisubrs
pop
push
shrl
xchg
add
xchg
xor
rcrb
cmpsl
out
pop
xchg
lret
push
idivl
pop
int3
or
insb
and
mov
stos
es
mov
rorl
fcomps
inc
daa
into
rclb
scas
lcall
imul
dec
xor
and
ja
xchg
stc
repnz
cmp
rorl
xor
push
out
stos
mov
xchg
mov
scas
adc
xor
xor
std
xchg
inc
cmpsl
popa
repnz
mov
sub
pusha
dec
pop
popf
add
jnp
ror
and
mov
xor
fcmovnu
rolb
pushf
push
dec
push
adc
sarl
and
lret
lret
push
mov
aad
dec
leave
mov
push
popl
inc
cmp
mov
add
dec
mov
aad
out
pop
jle
fwait
mov
mov
jne
inc
lods
xor
addr16
es
icebp
ret
std
test
mov
in
pop
jb
ljmp
sbb
inc
lods
inc
mov
mov
dec
cs
pop
push
int3
outsl
enter
mov
daa
call
mov
or
or
xchg
scas
pop
notb
adc
xchg
push
subl
mov
sub
stos
jae
inc
outsl
divb
fldcw
pop
push
in
xor
inc
stos
imul
add
add
mov
dec
sub
inc
cli
inc
stos
sub
xchg
or
js
int
push
jo
shrb
loop
adc
mov
cmp
inc
push
push
cmp
jg
and
jmp
mov
xchg
loop
mov
mov
call
push
inc
fcompl
shrl
sbb
int
jbe
test
dec
mov
add
out
xchg
lret
lret
stos
ja
mov
daa
sbb
xor
mov
nop
lahf
test
inc
ja
push
jbe
fdivrs
mov
xchg
mov
push
adc
adc
lcall
inc
pop
fsubs
dec
ret
add
jmp
fisubrs
shlb
mov
fimuls
push
pop
xchg
inc
shll
xor
fldenv
sub
fwait
insl
dec
push
daa
mov
lahf
dec
jge
outsl
sbb
mov
dec
xchg
mov
or
mov
inc
inc
cltd
loop
scas
lret
xchg
iret
int3
sbb
scas
cmc
jl
fists
sbb
sbb
xchg
rcl
xor
in
xor
in
push
leave
xchg
cwtl
out
push
scas
dec
fidivrl
aad
pop
push
dec
rclb
mov
xor
hlt
out
mov
and
push
cmp
test
sar
lcall
lahf
cmp
cli
cmp
es
test
inc
xchg
cmp
adc
cld
fcmovb
pop
stos
addr16
and
xchg
fimuls
mov
movsl
inc
or
dec
jo
jne
sbb
ret
sbb
in
fcoms
adc
lods
aam
add
cmpsb
mov
sub
push
and
cwtl
fcompl
cmp
pop
aas
sar
sahf
and
adc
mov
rolb
add
mov
jno
sbb
repnz
and
xchg
bound
jl
mov
sahf
inc
mov
or
sbb
repz
push
cmc
jo
lret
call
lea
int
inc
sbb
dec
std
fldenv
sbb
mov
mov
inc
das
xor
mov
dec
pop
sbb
mov
sub
shr
out
add
lds
dec
pop
insb
mov
std
jno
stos
ret
es
adc
scas
add
mov
mov
lahf
cmp
jle
sub
pop
cwtl
fcmovnu
idivl
rep
mov
push
out
xor
mov
push
xchg
sub
or
aas
pop
mov
jp
jae
push
sbbb
add
arpl
dec
mov
pop
rcrb
cmp
inc
je
or
adc
in
mov
stc
inc
jmp
mov
adc
push
inc
data16
paddusb
jns
and
jmp
ljmp
sub
enter
hlt
js
je
sbb
out
insb
iret
pop
or
loope
push
movsb
cmp
lods
add
dec
or
rcrl
sbb
addl
rol
and
adc
jl
xor
inc
jge
out
add
lea
rol
lea
add
out
xchg
inc
pop
pop
mov
mov
sbb
mov
jnp
std
pushf
jg
cmpsb
adc
jo
movsb
xchg
cmp
leave
push
jg
cmpsl
lcall
call
enter
or
xor
shl
jge
movsl
fstpl
pop
adc
mov
mov
fsubl
aas
outsb
out
add
stos
addr16
cmpsl
movsl
out
out
sbb
pop
outsb
hlt
rorb
adc
je
ja
xor
push
dec
push
add
xchg
lds
add
xor
popf
ljmp
xor
sbb
enter
loop
ds
sub
or
xchg
xchg
pop
inc
enter
cmpsb
sahf
cmp
repz
xor
or
cmc
xchg
imul
jp
hlt
adcb
xor
and
fldenv
add
cmp
sub
fwait
add
insl
sti
into
lret
divb
cmp
lret
or
mov
andb
pop
xchg
clc
push
or
je
add
mov
cmc
or
lds
push
gs
fbld
and
in
dec
or
mov
popf
fisttpll
inc
jo
or
outsb
bound
jp
xor
xchg
jb
xor
push
jmp
adc
pop
dec
xor
in
push
cmp
rorl
xchg
push
push
scas
xor
out
xchg
sub
cltd
cmp
cs
dec
jno
cmp
lods
pop
mov
fcmovnb
xchg
pop
js
add
ljmp
sub
popa
and
adc
push
jo
dec
cmp
xchg
sahf
dec
daa
imul
cmp
or
popa
loop
cmpsl
or
push
iret
hlt
cltd
push
mov
cltd
and
xchg
sbb
add
stos
mov
jle
jo
adc
push
testb
loope
or
test
fisubs
dec
loope
cwtl
rorl
into
mov
andb
lret
scas
and
ret
or
jecxz
xchg
dec
mov
stc
add
and
xorl
mov
aas
push
gs
in
dec
xchg
cmpsb
xchg
sub
adcl
outsb
cld
lock
or
cmp
inc
sarb
dec
dec
loopne
stc
or
rcr
and
mov
out
mov
jnp
fistpl
cmp
movsb
jbe
nop
inc
mov
stos
pop
push
iret
xor
out
push
test
jbe
or
mov
pop
arpl
out
mov
dec
and
imul
out
lods
daa
pop
cmpsl
mov
xchg
jmp
fnsave
int
test
adc
dec
mov
cld
sub
pop
sbb
sub
jo
shrb
inc
cmpsl
pushl
inc
jno
sbb
sar
lock
jg
push
cli
jbe
xchg
rorl
iret
dec
xlat
jo
jl
aas
mov
xchg
test
bound
ficompl
lret
add
push
dec
dec
js
pop
pop
add
push
cli
mov
xor
push
ds
test
inc
lods
add
mov
int3
jg
and
lahf
leave
push
push
loope
xor
xor
cmp
sub
sahf
sbb
push
loope
ret
push
js
aam
out
add
or
jno
daa
xchg
aad
inc
notb
cmp
adc
dec
xor
scas
sub
mov
push
xchg
out
xorb
and
push
lods
push
sti
test
out
jbe
mov
aas
push
mov
mov
pop
xor
or
pop
sub
flds
imul
jbe
stos
jp
test
outsl
lret
in
jmp
or
mov
cmp
jmp
test
arpl
cmp
mov
push
lods
cmpl
fwait
push
stos
enter
pop
sti
cmp
pop
or
rcrb
adc
jb
adc
jl
jge
or
inc
or
ds
cmp
scas
mov
adc
dec
sub
lcall
xchg
pop
pop
xchg
xchg
lea
out
dec
xchg
lret
mov
adc
sar
push
popf
pushf
es
mov
cmpsb
and
mov
jns,pn
inc
movsb
mov
cld
es
jae
ret
pop
jne
pop
mov
js
into
mov
jge
cwtl
xlat
enter
lcall
daa
sbb
and
dec
lods
daa
add
lret
or
or
mov
pop
call
lock
sarb
cwtl
jbe
or
sbb
inc
loope
leave
imul
sahf
addr16
sub
mov
repz
jg
jae
inc
push
jge
sub
bound
fcmovu
mov
aad
in
aaa
jmp
out
xorb
xchg
sahf
push
cld
inc
push
popa
push
sub
mov
sahf
xchg
add
pusha
in
xchg
stc
push
jge
sbb
in
fcmovnu
dec
sahf
push
inc
pop
popf
and
pop
lret
pushl
in
push
dec
jnp,pt
inc
lahf
imull
stc
dec
jae
clc
xor
test
or
aaa
call
inc
inc
je
push
rolb
dec
push
cmp
pop
ja
or
ret
mov
xchg
pop
sti
stos
insl
nop
xchg
adcl
sub
jl
iret
mov
mov
icebp
scas
xchg
nop
sbb
dec
sti
xor
xchg
ret
add
inc
pop
xchg
lahf
jl
shrb
jno
jge
jle
xor
mov
xor
xor
or
xchg
mov
inc
jo
cmp
sub
dec
das
xchg
inc
add
and
pop
dec
xor
lods
mov
ss
in
dec
pop
addr16
push
jae
rcll
fyl2xp1
rcll
repz
push
mov
ror
mov
cld
outsb
mov
fimuls
mov
cli
mov
push
aas
movsl
stos
dec
imulb
lods
stos
push
pop
add
bound
push
dec
aam
mov
jecxz
leave
xchg
into
movsl
int3
arpl
je
pop
xchg
orb
jp
mov
xor
mov
push
cltd
xchg
daa
mov
sti
lds
shl
add
add
ss
sbb
sbb
xchg
ja
sub
outsl
xor
and
lret
scas
rclb
mov
cmp
aaa
inc
out
lds
in
cld
mov
pushf
nop
jo
xchg
dec
out
mov
sbb
int
test
sbbl
insl
xor
jecxz
bswap
xchg
lret
adc
push
ds
xor
xchg
lahf
fdivl
jecxz
mov
repz
cmpl
mov
and
test
daa
jb
data16
pop
mov
and
xor
loopne
sub
jo
dec
mov
cmc
jbe
jae
bound
std
jnp
jge
test
repnz
into
aad
mov
dec
in
sub
loope
fdivp
subl
mov
push
push
pop
mov
cmpl
insb
or
scas
mov
or
pop
cmp
lret
add
daa
bound
aam
loope
adc
movsl
movsl
mov
xor
xchg
inc
gs
insb
test
scas
shr
pop
aas
mov
cltd
fstpl
or
lret
jne
mov
test
and
adc
and
push
call
neg
pushw
hlt
pop
insl
es
add
sbb
aad
pop
pop
das
das
faddp
sub
scas
in
aas
fistl
arpl
push
sarl
cmp
pop
add
adc
cmc
xor
dec
mov
clc
sahf
into
jbe
clc
cmp
cmp
rclb
stos
inc
inc
aas
inc
ret
in
adc
pop
pop
xchg
in
jmp
mov
pop
push
popa
clc
or
ds
hlt
fisttpll
and
xor
adc
adc
int
mov
aas
inc
mov
out
out
mov
mov
movsl
sbb
cltd
push
js
adcb
mov
xchg
data16
es
arpl
mov
rcrb
cwtl
test
fdecstp
add
fxch
rcll
mov
in
jno
lods
movswl
pop
ret
mov
adc
std
sahf
pop
push
push
cmp
or
mov
mov
jae
mov
xlat
fistpll
enter
and
push
mov
mov
mov
inc
xchg
inc
cmp
out
jne
mov
and
xchg
adc
les
mov
out
mov
jae
mov
dec
test
cmpsl
stos
pop
cmp
xor
movsl
or
push
or
cwtl
fs
in
push
stos
stos
lods
stos
mov
int3
ljmp
sbb
aaa
lcall
scas
cmp
stc
test
cmp
mov
outsb
sbb
pop
inc
mov
test
fcomip
cwtl
iret
std
add
lods
sub
test
or
sahf
mov
cmp
rolb
int
mov
and
sbbl
pop
pop
dec
aaa
mov
push
lods
rcrl
lods
xchg
mov
in
xlat
movsb
inc
pop
add
push
inc
int3
mov
rorl
fadds
sub
push
fsubrs
lock
insb
fldl
mov
pop
jg
cmpsb
stc
push
dec
xchg
test
or
cld
ljmp
or
adc
setnp
mov
ds
popf
shrb
add
xchg
repz
push
insl
mov
std
xchg
sahf
lahf
out
sbb
sti
mov
inc
cmc
cmp
add
and
xor
popa
in
push
iret
dec
xchg
pushf
loop
mov
fisubl
jbe
inc
stc
cmpsb
xlat
out
stos
shl
jmp
mov
mov
push
iret
inc
and
gs
jbe
pop
lods
paddsb
gs
cwtl
push
in
out
or
in
fwait
addr16
scas
rcrl
mov
stos
sbbb
push
mov
xchg
adc
test
ret
arpl
insl
iret
xchg
inc
dec
add
cmovnp
adc
xchg
shl
adcl
fldenv
and
enter
push
ds
sahf
aad
jmp
push
movaps
lcall
dec
lret
pop
jne
mov
jp
xor
and
lods
mov
ja
jnp
test
js
imul
pusha
fiaddl
mov
pop
mov
ljmp
test
mov
jno
mov
inc
vmovdqu
fiadds
add
mov
sbb
lock
inc
inc
xor
mov
push
test
movsb
pop
vpmaxsw
fildl
adc
and
sahf
jne
bound
inc
mov
push
std
jle
add
dec
int3
and
cltd
enter
or
inc
lret
sbb
jnp,pt
pop
es
in
repnz
dec
je
pushl
sub
sbb
popf
fwait
repnz
insl
jo
mov
jmp
sbb
sarb
test
jns
pushf
int
and
test
mov
jle
lods
outsl
mov
and
aad
pop
repnz
cld
pop
mov
or
mov
xchg
mov
std
jge
cmc
xlat
mov
pop
cmpsb
xor
jae
mov
push
xor
repz
cmp
inc
and
stc
inc
repnz
inc
jno,pn
nop
sbb
dec
outsb
clc
orl
fstpl
xor
cltd
sub
iret
leave
mov
sub
dec
dec
fwait
lcall
pop
sub
sti
jne
or
lahf
lahf
jo
sub
lock
fst
sahf
sti
push
pop
pushf
jbe
mov
das
push
fcomps
or
xor
aas
mov
pop
aas
cli
movsl
jae
mov
fs
iret
hlt
xor
pop
call
aad
pop
add
inc
leave
loop
adc
jne
jb
sbb
je
xchg
iret
aas
aam
sbb
leave
sahf
mov
lret
lcall
scas
lods
mov
ret
adcl
out
cmpsl
and
dec
mov
xchg
jge
lret
ljmp
aaa
pop
cltd
cmc
mov
cmpsl
icebp
mov
enter
mov
fwait
cmp
es
jecxz
rcl
cmp
push
shlb
mov
js
dec
pop
pop
out
or
pop
scas
adc
es
dec
push
jns
pop
cmp
lock
push
push
xchg
ds
mov
inc
fs
mov
lcall
jae
hlt
insb
mov
aad
mov
lods
jo
jbe
mov
and
daa
mov
fldt
rorl
cmp
or
cli
jl
fwait
inc
mov
xor
out
es
mov
pop
add
xor
mov
ja
dec
add
pop
pop
jmp
inc
jle
mov
or
add
push
inc
or
dec
pop
jne
es
xchg
dec
jmp
dec
fisttpl
lret
or
testl
jno
out
inc
jle
cli
pop
repnz
popa
mov
aaa
icebp
pop
js
sub
cld
cltd
insb
bound
test
or
sbb
jae
inc
add
jno,pt
test
jl
or
sahf
loopne
enter
int3
xor
lods
fldcw
mov
idivb
dec
mov
jno
and
sti
mov
hlt
and
jl
mov
dec
pop
jmp
lea
and
sub
out
sub
push
add
bound
in
pop
jl
xchg
cltd
sbb
insl
mov
cmpl
test
lods
add
scas
repz
push
pop
in
inc
sub
sub
pop
hlt
dec
out
push
jns
mov
insb
gs
jl
imul
xor
imul
outsl
mov
iret
imul
scas
js
jnp
mov
sub
mov
jge
mov
dec
test
sub
inc
push
sti
xchg
loop
jns
jb
jno
pop
mov
lcall
int
frstor
leave
test
int3
dec
addb
xchg
cmp
xor
je
fbld
repz
xchg
mov
inc
scas
into
dec
inc
mov
cld
shlb
push
in
fdiv
jge
mov
adc
pop
dec
cmp
mov
int
or
cmpsb
mov
dec
out
aad
inc
clc
btr
fimuls
fdivl
aaa
dec
sub
gs
mov
rcrl
aad
roll
hlt
mov
and
in
in
jge,pn
sarl
out
lds
ret
fwait
mov
mov
test
push
jp
stos
cmp
lret
fisubrl
cmp
mov
lahf
adc
ror
mov
out
in
sbb
xor
push
and
pusha
jge
xchg
push
repz
loope
andl
subl
sbbl
push
fst
xchg
aad
aad
jnp
xlat
jmp
movsb
or
pop
imul
push
dec
mov
and
mov
repz
pop
dec
ds
daa
loopne
mov
sub
mov
xor
mov
sbb
mov
pop
adc
push
pop
daa
fsubrl
adc
imul
lods
loopne
test
ljmp
enter
int3
data16
into
data16
sbb
dec
nop
cmc
adc
push
inc
dec
xchg
push
push
add
clc
fdivr
mov
mov
pop
adc
and
dec
mov
mov
sahf
insb
mov
out
lods
andl
aas
in
sub
popf
icebp
xchg
push
aam
andl
fadds
loopne
mov
xor
mov
pop
testb
fs
adc
insl
ret
push
mov
adc
test
repnz
outsb
aad
scas
cltd
std
jne
jle
imul
hlt
push
loope
fmull
push
fcomps
jp
repnz
push
mov
cmp
jb
push
test
loope
pop
in
fwait
dec
xchg
pop
sub
adc
lock
mov
inc
in
daa
cmp
loop
fs
or
jp
push
ret
arpl
out
and
mov
dec
lret
mov
mov
sbb
fwait
ret
fsubrs
sub
inc
sbb
push
push
sbb
int
xchg
adc
adc
pop
xor
mov
push
push
stc
ret
ss
sahf
movsb
jb
mov
inc
addr16
in
call
mov
movsb
mov
hlt
lcall
rcll
and
in
pusha
jg
push
sarb
daa
push
mov
sub
dec
stc
and
inc
dec
cmpsb
xor
cmp
cmpsb
sti
pushf
xchg
shrl
test
sbb
jbe
pop
fsts
sahf
and
cmp
adc
cmpsb
push
jmp
dec
mov
push
mov
xor
mov
jmp
fildl
popf
out
insl
lock
push
jl
fildll
dec
inc
cs
sub
mov
pop
imulb
decb
sub
adc
jl
sub
inc
pop
fmuls
mov
mov
cmp
mov
stc
mov
stos
stos
out
add
mov
and
mov
insl
cmpsl
into
push
inc
push
imul
lock
shlb
stos
push
mov
scas
pop
cmpsb
mov
lea
sbb
subl
jo
bound
repnz
negl
data16
fildll
jnp
scas
inc
jl
loop
into
out
aas
ljmp
rcrb
push
inc
lock
mull
mov
flds
sub
pop
sarb
mov
cmp
jl
xchg
outsb
xor
test
lcall
jb
adc
out
adc
dec
mov
stos
adc
sti
dec
cmp
popa
call
fstpt
leave
jae
ret
or
ss
insl
test
and
dec
movsl
bnd
das
pusha
add
stc
andb
push
push
nop
xchg
push
xchg
push
pop
lock
cwtl
popa
roll
pop
dec
fsubrl
lods
idivl
and
mov
sbb
xchg
cmp
fimuls
dec
aas
sbb
adc
inc
shll
cmpsl
mov
add
fcompl
ret
mov
pusha
cmc
xchg
mov
push
mov
mov
stc
aad
and
nop
adc
jmp
pop
cli
mov
mov
int3
fsubr
xor
shlb
lds
mov
fs
push
cmp
push
or
mov
test
pop
inc
test
and
xor
bound
jl
lods
je
lret
imul
push
xor
push
test
mov
test
sbb
in
add
jp,pn
outsl
sub
loope
mov
sbb
xchg
jbe
in
daa
lock
dec
mov
xchg
out
add
xor
popf
push
aaa
sub
dec
mov
and
mov
mov
pushf
imul
mov
jmp
push
push
sti
adc
mull
sub
cmp
mov
xchg
clc
out
add
mov
orb
lcall
mov
push
pop
mov
cmp
in
or
loope
jecxz
cmp
aaa
scas
mov
int
mov
jmp
lea
rcrw
xlat
popa
pop
inc
push
addr16
and
inc
adc
mov
add
jns
mov
inc
aas
arpl
adcl
xor
aas
jno
jge
xchg
cltd
or
and
enter
lahf
xchg
in
lods
jmp
cld
push
in
scas
push
pop
jmp
sbb
fs
push
xor
test
repz
lcall
xor
push
adc
leave
pop
pop
aad
daa
sub
fdivrs
sbb
xorl
xchg
xchg
in
xchg
nop
push
pusha
adc
insb
pop
adc
cmp
xchg
jge
sbb
rcrl
push
test
sub
sbb
ljmp
dec
fdivs
adc
clc
ja
pop
and
mov
and
fwait
outsb
sbb
push
pusha
pop
sbb
movsl
dec
xchg
jnp
or
test
push
jo
loop
loopne
mov
nop
lods
and
das
out
jge
scas
push
les
dec
nop
xchg
mov
and
sub
scas
push
or
out
cmp
test
push
xchg
scas
in
sub
ret
mov
aam
sub
mov
ret
jne
lods
fstpt
push
in
out
aad
xchg
xor
mov
mov
pop
popf
subl
fwait
xor
jle
or
mov
or
in
nop
dec
sub
pop
cld
scas
dec
leave
sbb
out
jb
in
mov
xchg
sarb
and
adc
sbb
push
jg
mov
or
xor
sbb
gs
jecxz
push
push
lods
cwtl
pusha
mov
mov
fstps
mov
in
lret
shrl
sub
lcall
aas
shll
addb
scas
sbb
add
inc
dec
cmp
iret
mov
push
movsw
push
out
dec
jnp
xchg
ret
idiv
cld
stos
push
inc
inc
test
mov
mov
cmpsb
lea
aad
mov
les
inc
pop
int
lock
xchg
adc
dec
push
jle
stc
stos
lds
push
push
es
test
dec
add
stc
insb
add
pushf
pusha
pop
xchg
inc
cmp
jl
inc
cmp
xchg
fistl
or
adc
pusha
cs
mov
clc
lret
mov
aas
mov
sub
fistps
jb
in
pop
jb
add
mov
test
inc
jbe
fwait
pop
pop
in
mov
loopne
divl
out
mov
pop
fsubrl
daa
je
push
xor
cmc
and
pop
fnstcw
lods
stos
aaa
xor
loope
jne
mov
or
jns
and
ljmp
mov
push
bound
mov
leave
xchg
lea
rol
mov
or
scas
mov
insb
lahf
adc
or
or
xor
mov
sub
xlat
lods
mov
and
jnp
repnz
push
lea
mov
and
push
add
push
mov
push
fidivrl
add
aaa
push
add
or
mov
bound
rcrl
cmp
daa
inc
jnp
mov
xor
sub
lret
add
xchg
js
or
jg
jb
mov
pusha
icebp
xor
pop
xchg
fisttps
repz
ds
adc
and
cltd
mov
mov
sub
sub
stos
cwtl
sub
aas
cmp
pop
popa
loop
pushf
fistpll
test
js
jecxz
add
mov
rorl
lahf
lcall
inc
mov
int3
loope
and
xor
cmp
rclb
mov
pop
out
pop
das
inc
shrl
repz
jne
mov
shlb
nop
sub
inc
add
cmp
gs
cwtl
iret
fnstcw
shr
in
push
sahf
shrl
fwait
mov
ret
xor
leave
or
mov
int3
lds
push
jo
inc
test
xor
xchg
scas
sbb
popf
push
fdivr
xchg
mov
js
shll
sbb
std
sti
movsl
push
ficompl
out
pop
mov
cmp
flds
jmp
sahf
mov
sub
and
fs
xor
sub
js
fisttpll
int
scas
pusha
gs
and
ret
xor
jge
xchg
lret
sub
adc
sub
cmp
repnz
ja
jecxz
ljmp
jbe
inc
mov
addr16
enter
adc
fmull
cmp
shlb
and
xchg
mov
pop
jae
inc
xchg
mov
out
add
fs
mov
push
in
loop
sub
ss
or
repz
test
out
into
mov
addr16
inc
mov
leave
push
shlb
mov
mov
mov
loope
sub
jno
xor
add
jns
mov
in
std
scas
repz
cwtl
adc
iret
std
and
push
clc
pop
and
out
sahf
aaa
outsb
cmp
or
sbb
mov
sti
sub
or
push
and
add
jge
pop
inc
xchg
int
jg
mov
or
lods
gs
cltd
aaa
pop
and
pusha
addr16
mov
scas
fs
jo
and
mov
shll
sbb
pop
inc
clc
std
cwtl
in
imul
imul
mov
or
push
ljmp
and
xchg
pop
test
inc
and
mov
dec
mov
inc
mov
mov
addr16
inc
xchg
cmp
cwtl
and
mov
aaa
jns
mov
dec
sbbl
xchg
imulb
lret
stos
adc
stc
sub
andl
pop
addb
lds
into
xor
mov
lret
mov
fsubl
mov
fists
cmp
out
out
enter
mov
mov
test
shlb
push
outsl
lock
pop
leave
adc
icebp
inc
mov
int3
stos
movsl
xor
xchg
cltd
mov
fsubrl
mov
mov
xchg
mov
in
and
push
out
sti
jg
jbe
pop
insb
and
xchg
sub
push
arpl
clc
cmp
repz
mov
inc
test
jmp
mov
dec
sarl
jo
pop
mov
xchg
and
cwtl
outsb
or
loop
xchg
push
hlt
xchg
cs
and
push
jb
outsb
mov
arpl
int
sbb
ficomps
arpl
test
push
mov
xlat
and
ret
xchg
inc
lret
mov
das
xor
mov
icebp
xor
mov
movsl
movsb
outsb
inc
mov
xor
pop
sbb
int
xchg
call
pusha
sbb
int3
mov
insl
xchg
sbb
pop
push
movsl
stos
and
push
fisttpl
fdivp
inc
loop
add
mov
test
xor
roll
pop
and
je
aas
push
popf
dec
inc
add
mov
jl
or
adc
out
lea
rclb
dec
mov
or
mov
cmpsl
or
mov
inc
cmp
cmp
sub
outsl
outsb
jns
mov
mov
out
push
fistl
jmp
loope
aaa
test
fwait
inc
lret
mov
loop
iret
sub
out
std
push
shl
call
int3
sub
jg
add
sti
push
add
scas
lock
daa
into
jl
rcrl
aas
in
int3
aas
out
and
dec
push
loop
adc
and
or
gs
das
adc
cmp
xorl
out
xor
or
loope
rcrl
das
lds
jno
and
dec
xchg
scas
je
lods
adc
in
shl
push
lret
ss
in
push
xchg
call
pop
ret
mov
in
call
in
mov
and
adc
add
lea
roll
ret
inc
imul
lahf
jle
mov
loope
ds
and
jbe
sub
roll
int
rclb
or
or
mov
aas
mov
cs
jecxz
sbb
dec
push
stos
repz
push
pop
xor
mov
iret
add
pop
sbb
outsb
std
shlb
sbb
cmp
sbb
ja
mov
dec
and
div
adc
stos
test
pop
xchg
jb
inc
daa
imul
out
mov
fisubrs
cmp
daa
mov
loopne
adc
lret
mov
mov
mov
call
scas
mov
lods
lea
ds
or
bound
and
jne
inc
jmp
fimull
das
sti
lods
movsl
jns
ret
pop
imul
movsb
or
jne
lds
sub
idivl
jbe
insb
adc
xor
jg
into
test
xchg
inc
call
pop
call
js
mov
and
test
movsb
mov
push
xchg
inc
fsub
mov
adc
mov
sahf
mov
aas
es
into
inc
push
insl
dec
sahf
out
add
mov
movsl
push
shrl
cld
dec
stc
sub
adc
sub
and
add
add
push
sbbl
pavgb
xor
lock
mov
adc
or
popa
cmp
stos
jge
mov
add
aaa
or
push
or
push
in
test
mov
add
fs
addb
cmp
jb
inc
and
cmpsl
mov
lahf
jmp
and
imul
mov
test
push
imul
pop
std
sbb
lds
sbb
adc
push
xchg
fiaddl
insb
dec
inc
movsb
test
or
sbb
test
insl
xchg
pop
and
out
out
add
mov
mov
pop
ficompl
xchg
punpckhwd
pop
xor
in
xor
jl
rol
mov
push
sub
call
jb
pop
ret
inc
sub
testb
jnp
clts
std
js
out
mov
mov
xor
insb
test
or
jno
xchg
pop
mov
std
testb
mov
xor
mov
sub
add
sbb
mov
dec
cmpsl
add
aam
jno
nop
arpl
in
sarb
sti
mov
pusha
mov
mov
dec
sbb
adc
mov
xchg
and
mov
add
dec
sbb
or
cli
sbb
push
ds
cmp
xlat
dec
call
das
cmp
faddp
lods
cmp
xorl
outsl
jecxz
int3
push
mov
sbb
adc
jns
add
cmp
ret
nop
leave
pop
stos
lahf
aad
sub
aad
fisubrs
sub
cltd
xchg
adc
sbb
sub
jb
jp
inc
inc
loop
pop
movsl
jae
or
xor
push
mov
je
dec
aaa
pop
adc
stos
fisttpl
dec
add
adc
jle
jp
fs
dec
lret
pop
mov
cmp
out
xor
add
inc
pusha
mov
daa
daa
cli
loope
mul
sub
dec
xor
std
gs
lret
inc
xchg
inc
adc
and
push
test
sahf
add
out
xlat
inc
mov
dec
push
in
xlat
out
ja
ret
dec
jl
and
cld
lods
nop
jnp
sahf
inc
fcompl
dec
sahf
inc
stc
pop
sbbb
mov
pop
lea
mov
hlt
call
pop
loopne
test
out
mov
cld
int
push
out
sub
sub
mov
jae
in
rorb
jns
inc
hlt
iret
mov
inc
stos
push
outsl
mov
xor
xchg
mov
adc
push
jge
pop
adc
pop
aam
and
int
jmp
jo
lods
xchg
xlat
xchg
cwtl
loope
mov
sarw
jae
push
sar
cmp
testb
adc
mov
and
sbb
insl
sub
push
fdivrp
loope
nopl
hlt
ret
sti
pop
mov
xchg
jle
iret
adc
pop
movsb
nop
mov
add
out
scas
adc
dec
lods
sbb
int
bound
ds
repz
orl
push
add
sbb
and
lods
orb
xorb
lds
or
mov
dec
inc
ljmp
and
mov
push
sbb
idivl
int3
std
lret
jb
imul
popa
sub
test
std
add
cmp
jp
sbb
xchg
test
sti
mov
nop
jp
mov
jnp
pop
push
mov
xchg
stc
lods
jg
insb
adc
sub
cli
cs
pop
mov
int3
dec
cmp
adc
mov
lods
xchg
mov
fcomps
lock
sbb
flds
addr16
test
xchg
cmpsl
sub
ljmp
push
pop
lea
pop
mov
add
sti
dec
pop
in
xchg
lods
cmpsb
pushf
sbb
arpl
mov
mov
les
inc
xchg
mov
fdivrs
lock
jl
les
jbe
fdivr
jno
cmpsl
pop
cltd
add
into
or
lds
xchg
stos
jae
mov
pop
aas
adc
pop
insl
dec
dec
add
mov
add
fnsave
shl
cmp
and
enter
pop
adc
fcmovbe
lods
mov
ret
repnz
shrl
jl
ja
fdiv
mov
dec
cmc
inc
jge
cmp
dec
push
push
jne
adc
fisttps
or
mov
sub
ret
bound
jne
rorb
hlt
scas
add
push
int
cli
jne
out
fnstcw
lcall
and
push
arpl
ret
cmpsb
dec
iret
scas
xchg
add
mov
nop
xchg
jne
push
mov
adc
pusha
xchg
out
dec
in
rol
sbb
pusha
push
stc
sbb
cmp
dec
rcrb
rcrl
jbe
aad
js
adc
lds
jmp
mov
sbbb
aam
sahf
xchg
add
icebp
adc
test
int3
in
icebp
add
xchg
add
fstpl
test
inc
pop
ret
jp
dec
pop
movsb
std
sbb
movl
dec
je
iret
repz
sbb
sahf
aam
shr
xchg
jnp
pop
mov
cmp
subb
lret
xor
jmp
adc
daa
insb
sub
lods
inc
scas
inc
outsb
rorl
enter
subb
in
xor
mov
bound
lods
fldcw
mov
or
jno,pt
xchg
mov
aas
out
and
or
in
mov
leave
mov
imul
out
out
xchg
inc
xor
xchg
loope
movsl
out
pop
mov
fisubl
ds
aaa
mov
dec
adc
jbe
push
das
fidivl
adc
mov
mov
in
aas
int
mov
fnstenv
addb
fldcw
ja
cmpsb
test
cmp
xchg
dec
dec
lods
xor
xor
dec
lods
rcl
popa
outsl
xchg
dec
sbb
pop
sbb
pushf
and
loop
mov
mov
mov
add
imull
add
pop
daa
not
inc
adc
inc
mov
inc
jp
xchg
sbb
cmp
pop
scas
push
test
dec
or
dec
cld
dec
xor
sub
ror
push
mov
leave
rorb
and
imul
sub
mov
rclb
sub
xchg
mov
call
mov
push
sti
or
fisubl
test
fisttpl
cs
pop
out
hlt
sub
roll
jns
xor
das
ret
mov
jecxz
sub
fs
cmp
or
imul
xor
aas
pop
or
cwtl
xor
push
dec
loop
cmpb
dec
scas
add
aaa
imul
sub
add
mov
lcall
cwtl
insb
jl
insl
push
sub
mov
inc
sbb
mov
and
ror
mov
or
add
test
repz
push
dec
jl
ljmp
sbb
jbe
fs
adc
jnp
cld
adc
dec
inc
fcomps
inc
jnp
mov
sub
jmp
and
jae
push
lds
cmp
sbb
cmpsb
scas
xchg
lods
pop
out
mov
cli
negl
push
dec
mov
insb
ds
adc
outsb
jge
les
xchg
sub
and
shrl
sbb
sbb
iret
xor
cld
lea
call
push
mov
gs
jecxz
loope
jnp
and
push
in
stc
idivl
push
push
out
mov
andl
flds
pushf
inc
adc
dec
ja
push
mov
popf
sub
call
pop
stos
daa
mov
sub
add
and
xchg
ret
in
aaa
jno
xchg
stc
or
test
pop
add
add
mov
daa
mov
and
addb
mov
mov
aam
jo
jg
mov
mov
sub
out
in
inc
or
insl
mov
xchg
pop
std
mov
jle
daa
mov
mov
imul
mov
scas
push
push
add
cmp
stc
pop
out
push
cmp
cmp
dec
add
test
shrl
out
aas
std
sub
xor
lcall
mov
imul
andl
xor
cltd
jp
mov
push
and
jne
inc
aas
adc
js
inc
and
jp
aam
cmp
pop
cmp
out
and
leave
or
std
cmp
add
dec
ret
jp
mov
repnz
jge
cmp
add
inc
xchg
sub
ret
popf
fldl
fwait
cmp
jno
sar
xor
das
jbe
fdivl
rorb
stos
mov
push
pop
sub
pushf
xchg
dec
fwait
test
and
jno
aaa
js
pop
xchg
out
xor
mov
sub
movsl
mov
jge
add
in
fdivrs
mov
push
pop
lods
loopne
mov
jno
lock
pop
les
push
sub
in
dec
sbb
jno
dec
jnp
pop
mov
sub
push
pop
sti
enter
xorb
and
jp
xor
pop
cmc
xchg
mov
mov
sbb
loop
cmp
les
pop
cmpsb
into
test
xor
ljmp
mov
pusha
cmp
daa
int3
cmp
fcomps
push
add
ret
loopne
push
mov
insb
push
mov
sahf
clc
mov
loopne
hlt
and
jae
ljmp
pmaxub
mov
cmp
aad
push
fisubs
mov
js
cmp
les
jge
add
adc
stc
insb
scas
arpl
hlt
ficoml
scas
and
sbb
jge
lods
cmpsl
test
or
mov
aaa
repnz
in
fildl
dec
sub
dec
test
imul
xchg
jns
xor
jo
dec
fs
jg
xchg
push
fcoms
xlat
xor
ja
inc
inc
outsb
jbe
leave
and
out
aaa
mov
mov
in
loopne
aaa
fbld
aad
adc
xor
xor
jmp
popf
push
sti
addr16
or
adc
enter
push
xlat
test
imul
cmpsb
decl
int3
popl
push
out
pop
pop
int
test
sbb
xchg
sbb
adc
add
fs
call
ja
adcl
cwtl
jmp
jns
or
and
cmp
mov
out
daa
xor
sub
inc
fdivp
mov
mov
pop
jge
xor
shrl
into
mov
out
iret
pop
divb
aaa
pop
jne
pusha
or
test
loope
int3
mov
dec
lret
notb
dec
cmpl
in
inc
mov
sub
lock
sahf
pop
jne
cmp
adc
in
test
pusha
jne
orb
push
pusha
cmp
gs
mov
into
cmp
push
add
shrb
jecxz
cmp
movsb
sar
int
mov
int3
fsts
int3
sub
xchg
or
mov
lds
push
arpl
cli
xchg
xchg
ret
add
pop
push
add
jmp
insb
lods
out
inc
out
sbb
out
call
cmpsl
mov
bound
clc
fcomps
mov
jae
test
pop
xor
aas
repnz
test
push
mov
xchg
lahf
mov
icebp
repz
mov
and
mov
dec
adc
push
add
out
mov
iret
out
subl
pop
push
mov
push
jbe
pop
int
sub
mov
push
lods
mov
imul
subl
add
pop
imul
pop
cmpsb
je
mov
mov
lret
imul
sti
push
jb
sub
fists
in
adc
push
sarl
adc
mov
jle
mov
int
je
movsl
cmp
xor
jmp
mov
mov
sbb
fdivl
imul
sti
adc
scas
push
add
mov
sbb
jae
int3
xor
insl
mov
xchg
push
mov
and
sub
and
pop
or
jo
icebp
lcall
lods
add
into
xchg
test
imulb
cmp
cmpsl
and
es
and
fs
stos
out
data16
fdivs
dec
sub
jge
loop
inc
hlt
inc
je
jl
lret
pop
lahf
pop
push
jnp
loop
sub
shll
mov
jge
lods
mov
sti
fcmovnu
xchg
or
jb
aad
and
xchg
or
sub
js
cmc
popa
pop
data16
sti
push
clc
test
mov
sbb
inc
fiadds
dec
fwait
sub
xchg
sbb
sbb
dec
lea
or
mov
fs
aam
ret
jbe
cmp
dec
fwait
lea
daa
pop
mov
cmp
into
jp
jo
push
push
pop
sahf
sbb
push
rcll
mulb
sahf
dec
test
adc
adc
mov
std
in
les
pop
jl
mov
adc
ret
cmp
lods
sbb
sbb
xchg
rcrl
jmp
push
out
in
lock
push
mov
mov
or
fs
xchg
jecxz
add
pop
jle
cmp
es
fisubrs
movsl
or
notb
jno
fstpt
into
dec
into
popf
test
outsb
ror
sub
fcmove
gs
adc
push
pushf
je
mov
adc
mov
mov
adc
jl
push
aaa
push
in
add
arpl
sbb
js
cmp
push
inc
inc
sbb
insb
dec
mov
outsl
jge
jl
push
push
loopne
sub
test
jecxz
inc
fisttpll
movsb
or
scas
adcl
cmp
and
pushf
js
dec
sarb
mov
sbb
mov
add
out
xor
jnp
jle
rorb
mov
outsl
rorb
lock
bsf
inc
jecxz
and
test
jo
lahf
lods
ret
fisubrs
mov
jmp
cwtl
mov
das
dec
xor
sub
lds
xchg
or
inc
movd
fmuls
inc
in
shl
mov
add
popa
mov
cmp
out
ljmp
sub
iret
sbb
mov
jb
adc
pop
dec
pop
popa
sbb
adcl
pushf
sbb
lret
cmpsb
lods
loop
mov
je
adc
push
rorb
or
lahf
lahf
popa
ret
imul
mov
cmp
xchg
push
out
add
dec
stos
imul
or
std
xor
xchg
push
mov
scas
mov
xchg
xor
mov
iret
cld
mov
cltd
int3
les
jl
rcrb
and
inc
pop
add
adc
xchg
sub
arpl
aad
pop
popf
and
mov
fbld
mov
mov
lock
pop
add
call
movsb
sub
mov
adc
adc
lods
stos
fsubp
test
add
stos
xor
daa
dec
xchg
pop
xchg
lods
out
cmp
adc
xlat
sahf
mov
int3
icebp
inc
sbb
push
lahf
cmpsl
push
pop
push
xchg
dec
push
je
inc
test
push
xchg
aaa
inc
push
arpl
test
mov
jo
in
fwait
or
jne
shlb
stos
xor
sub
imul
jnp
bound
inc
mov
xchg
jo
or
or
mull
pop
push
sbb
repnz
sti
xor
mov
outsb
mov
sub
popa
cmp
cmp
shl
std
or
inc
ja
pop
filds
adc
fwait
sub
dec
inc
lret
hlt
fwait
inc
push
or
rcl
sub
scas
test
lret
loope
ja
sbb
pop
cltd
pop
cwtl
cmp
or
inc
cmc
jle
mov
movsl
inc
jecxz
or
pop
aam
jge
cmp
orb
test
push
sub
mov
inc
pop
das
loope
movsb
je
add
ss
and
push
jb
mov
xorb
mov
incb
dec
int3
or
imul
sbb
or
push
sahf
jge
mov
adc
inc
icebp
xchg
scas
outsl
ds
pop
sub
sbb
adc
push
xchg
addr16
fs
sub
call
mov
pop
aas
inc
inc
fsubrl
popf
pop
imul
cmc
add
adc
cmpsl
mov
popa
mov
lret
jecxz
push
adc
dec
push
add
lahf
and
std
push
nop
das
das
xchg
pop
sti
js
mov
sbb
or
enter
rolb
dec
fidivrs
in
into
mov
mov
xchg
cli
rcll
test
bound
rorb
sub
jg
mov
mov
in
mov
sub
lods
or
rcrb
push
and
add
out
cmp
repz
in
divl
inc
lcall
jb
std
push
ret
mov
add
in
arpl
push
ret
fwait
pop
add
dec
out
dec
in
cs
pop
and
pop
popl
in
mov
sub
push
dec
sahf
movsl
dec
push
inc
add
mov
js
mov
fdivrs
repnz
scas
lock
mov
fs
filds
test
mov
mov
fisubs
in
fcoms
scas
jno
pop
cmp
test
fsubrs
xor
sub
fistl
push
jbe
out
xchg
push
std
push
scas
inc
es
out
in
and
mov
sbbb
cltd
adc
movsb
repnz
lret
lahf
jl
sbb
xchg
lcall
dec
stc
mov
loopne
dec
lds
sub
arpl
cmp
lcall
hlt
sbb
in
shl
mov
lret
cmp
das
add
bnd
xor
jge
mov
mov
add
outsl
ret
cmpl
pop
inc
sub
add
xor
int3
inc
mov
xchg
xchg
out
mov
sub
pop
idivb
sub
lods
loop
mov
mov
fwait
mov
loop
dec
jnp
popf
repz
lock
in
mov
hlt
adc
lcall
fistps
sub
sbb
daa
cmp
pop
icebp
jno
jnp
nop
insb
fsts
sbb
loopne
cmp
scas
cwtl
mov
cli
lea
push
xchg
sbb
mov
pop
mov
pop
adc
pop
jecxz
cmp
vcvtsd2ss
jp
and
cmp
cli
popf
stos
ja
mov
popl
popa
push
daa
inc
mov
movsl
cmp
inc
and
cmp
sti
inc
adc
jno
mov
push
adc
and
xor
xor
lods
jmp
xchg
mov
lea
cs
pop
aam
movb
mov
push
sbb
mov
ficomps
jb
cmpsl
jnp
jmp
mov
das
leave
push
push
mov
sbb
add
sti
repz
mov
cs
movl
pop
xlat
push
pop
add
jle
inc
repnz
cli
aad
insb
sub
sub
adc
xchg
cmp
loopne
fdivrs
cmp
xlat
adc
icebp
in
add
fwait
pop
je
stc
loope
scas
test
in
fstl
add
and
dec
out
push
in
adc
sti
pop
pop
cmpsl
cmp
clc
jbe
scas
cmp
sti
cmp
lds
pushfw
cmp
dec
and
xchg
sub
movsl
jl
adc
xchg
xor
adc
cmovg
push
sbbb
icebp
mov
inc
lcall
imul
push
push
xchg
fldcw
mov
cld
and
sbb
add
dec
xchg
jne
das
push
ss
adc
pop
outsl
jl
and
sbbl
fldenv
mov
addr16
out
dec
rcr
add
fwait
lret
pop
dec
lahf
imul
cmp
push
sbb
adc
sbb
sub
pop
xchg
push
cmpsb
sub
aas
xor
push
movl
push
mov
or
mov
mov
cmp
ficomps
mov
sbb
fisubs
in
fildll
repz
fwait
sbb
pop
push
pushf
pushf
and
test
rorl
sub
fnstcw
adc
scas
fcomps
xorl
adc
int
push
add
sub
fimuls
repz
lock
mov
xlat
stc
fs
dec
int
call
test
subl
hlt
cmp
mov
insb
xchg
popa
mov
cmpsl
sbb
mov
inc
nop
or
test
and
push
sub
insl
jae
in
mov
push
mov
test
int3
scas
adc
es
push
mov
push
pop
add
sti
sbb
xor
dec
xor
data16
push
cld
mov
push
xor
out
pop
rcll
mov
lahf
aam
or
jbe
adc
ret
cmp
sub
hlt
aad
mov
addr16
shll
sub
rorb
addr16
dec
mov
dec
je
inc
push
lret
movsb
std
shrl
push
fisubrl
ret
jnp
aad
mov
and
icebp
sub
enter
cwtl
cmpb
test
inc
fsubl
hlt
ffreep
or
pusha
repnz
mov
int
pop
fidivl
in
inc
add
das
mov
mov
xor
sub
nop
dec
push
test
push
push
repnz
gs
xor
push
xor
cmpl
pushf
xchg
push
sarb
repnz
sahf
sub
add
sbb
bound
clc
sbbb
mov
xor
inc
pop
loope
shlb
inc
and
sub
rolb
adc
jb
push
dec
sbb
sub
inc
xor
pop
xor
inc
cmp
leave
inc
loop
in
lcall
shl
lret
mov
mov
ja,pt
and
dec
pop
fnsave
mov
sbb
ja
inc
mov
xchg
aam
xchg
xchg
lds
daa
xchg
insb
and
or
test
fwait
pop
gs
ss
inc
push
and
mov
hlt
cs
pop
outsb
add
jle
hlt
out
inc
add
mov
sub
mov
and
inc
xor
ja
xlat
pop
lret
mov
divl
sub
outsl
sbb
xchg
pushl
jl
rcrb
jae
inc
lea
notb
fimull
pop
jl
inc
pop
and
and
cmc
insl
dec
ljmp
jno
add
pop
inc
inc
stos
das
test
clc
inc
xchg
push
test
jmp
cmc
mov
pop
icebp
insb
or
test
out
shll
lcall
aas
ror
xchg
ja
sbb
loopne
popf
stos
cmpsl
nop
jmp
fs
xorl
push
leave
sbb
push
and
cli
sahf
adc
push
add
stos
mov
es
jl
sarl
or
imull
mov
push
lock
fistpll
push
jmp
sbb
mov
adc
push
inc
aam
mov
leave
push
into
push
dec
jnp
cmc
xor
addr16
sbb
ja
cmp
popf
xchg
mov
xchg
roll
jl
into
inc
jno
in
and
xchg
xor
lods
clc
pushf
in
out
scas
fsubrp
icebp
cmp
pop
xchg
mov
xchg
into
or
aaa
in
dec
lret
int3
fildl
dec
sti
lods
jmp
adc
pop
insl
mov
negl
shl
mov
adc
and
jecxz
add
push
dec
incl
repnz
dec
xchg
xchg
mov
lret
cmp
push
lret
shrl
movsl
outsb
add
in
js
fistpl
push
repz
mov
loopne
or
test
pop
ljmp
arpl
popa
or
lret
xor
xchg
mov
push
push
mov
test
insl
or
jge
imul
mul
adc
inc
jg
and
push
stos
xchg
repz
mov
cmp
das
mov
cmc
adc
lods
arpl
add
fs
fdivrp
cmp
cmpsb
cmp
outsb
cli
cmpsl
push
push
subl
jmp
aad
mov
outsb
ret
mov
add
sub
mov
cli
dec
and
ljmp
lret
pop
mov
out
out
es
or
rcrb
jnp
out
cli
xchg
cmc
mov
stos
cmpsb
push
mov
mov
adc
mov
jo,pt
sahf
mov
ret
sbb
ret
xchg
sbb
cmp
rcll
pop
adcl
pusha
or
outsb
das
lods
fisubrl
mov
test
cmp
adc
push
sub
and
rcr
sub
scas
cmp
into
and
xchg
clc
pop
sub
out
sbb
mov
xor
mov
jle
fsub
dec
in
lds
mov
dec
pop
push
or
xor
add
mov
dec
out
jmp
xor
jo
and
inc
idivl
scas
aas
insl
mov
push
das
fldenv
pushf
popf
inc
imul
sub
popf
pop
xor
jnp
imul
and
sbb
jno
test
fs
loopne
sahf
stos
in
sbb
xor
push
pop
mov
add
add
sub
scas
shlb
mov
jnp
addr16
mov
ljmp
xacquire
inc
adc
jo
outsl
icebp
bound
xchg
and
or
xor
mov
cmp
fildl
cld
xchg
fmuls
sbb
push
cli
es
push
add
push
or
nop
inc
jecxz
cmp
pop
insb
pop
das
xchg
mov
mov
pop
jne
inc
and
add
flds
shlb
adc
adc
mov
les
mov
cmp
mov
xchg
test
and
jmp
jg
xchg
jae
cmpsb
mov
xchg
enter
and
fidivs
pop
push
jb
je
icebp
jo
js
mov
cmp
pop
scas
or
xor
lods
jmp
aas
xchg
fidivl
xor
jmp
outsb
sbb
dec
lcall
mov
sbbb
push
push
scas
jecxz
test
dec
sbb
or
mov
xor
fwait
aad
mov
sub
push
mov
inc
into
xorl
cli
mov
int
xchg
inc
mov
add
pushf
imul
outsl
jmp
add
pusha
shl
outsl
idivb
push
mov
rorl
lret
movb
pop
sub
push
leave
xchg
or
inc
aam
cwtl
pop
inc
out
in
push
sbb
adc
ljmp
enter
or
inc
cmc
in
sbb
push
cmp
ja
bswap
xor
mov
xchg
add
sar
iret
add
sbb
sbb
xlat
push
test
scas
scas
and
or
jmp
push
pop
pusha
scas
stos
adc
mov
and
das
pop
popf
jle
pop
xchg
inc
mov
popl
mov
dec
push
icebp
test
fsubs
mov
xchg
and
call
and
push
dec
mov
nop
mov
icebp
inc
sub
adc
leave
int
fs
xchg
inc
inc
fs
notb
or
enter
cmp
call
xchg
cwtl
in
mov
stc
scas
inc
in
arpl
jnp
ret
and
nop
lcall
sub
xor
jbe
cmp
jp
inc
inc
or
mov
push
adc
adc
int3
lods
pop
mov
ja
and
jne
ss
cmpsb
clc
sub
xlat
mov
lods
sub
mov
cmpsb
popf
ljmp
xorb
cmpsb
into
mov
ljmp
sahf
xchg
jge
pop
pop
fiaddl
mov
js
repz
dec
push
testb
adc
or
lock
test
inc
stc
imul
loop
daa
push
sub
insb
icebp
mov
outsb
push
or
sti
in
nop
arpl
or
les
insl
xor
fisubl
jle,pt
push
inc
sub
add
movsl
mov
fsubs
bound
leave
in
aas
lods
dec
mov
cld
pop
lret
mov
mov
adc
jg
call
nop
or
sbb
push
enter
lahf
std
sbb
cmp
xchg
std
stos
sub
jne
lock
out
mov
jno
push
fstps
in
mov
adc
popa
dec
push
mov
leave
jl
push
adc
mov
cmp
jecxz
stc
lcall
iret
nop
cmpsb
xor
rolb
stc
lsl
sbb
imul
mov
leave
stos
sbb
pop
xor
mov
cmpb
cmp
leave
push
popa
jb
or
popa
mov
orl
mov
jno
arpl
pushf
add
lret
push
xor
ja
ja
sub
test
xor
xchg
insl
push
fcoms
xchg
lret
loope
mov
daa
insl
out
push
xchg
loope
ficoml
push
filds
mov
add
and
push
testb
hlt
loopne
dec
pop
mov
popl
mov
push
mov
pop
frstor
sub
movsl
inc
jo
jge
jecxz
loope
ds
or
je
popa
loop
sbb
cmp
clc
ja
pop
pop
shlb
push
addr16
adc
xor
iret
jl
jmp
mov
insl
imul
ret
push
loope
addr16
mov
in
mov
lods
push
mov
pmuludq
push
sahf
repnz
xchg
inc
dec
fcmovne
sbb
sti
test
ret
inc
sbb
jno
adc
jg
sahf
shll
sub
mov
adc
fwait
and
jmp
cmp
shlb
mov
mov
sub
mov
std
or
fstl
fistpl
movsl
sub
dec
gs
push
ds
int
dec
dec
dec
outsl
xor
and
aad
repz
lea
vmovmskps
cmp
pop
pusha
mov
enter
sbb
pusha
pop
pop
test
lock
jmp
inc
sub
xchg
sbb
xchg
xchg
loopne
pop
ss
mov
xor
and
sbb
dec
mov
out
xchg
sub
scas
inc
sbb
lahf
stos
shll
es
and
icebp
inc
cmp
inc
add
dec
inc
pop
leave
adc
lock
push
sahf
xlat
add
test
in
inc
xchg
aad
adc
dec
cmp
cmp
sub
adc
imul
mov
sarb
sub
int
adc
fst
or
cmovo
ljmp
ja
fisubl
push
adc
pop
cld
pop
pop
nop
pop
mov
cmp
xlat
aas
jecxz
add
xchg
cmp
scas
mov
cmp
fdivs
pop
jg
pop
test
xor
ljmp
cmpsl
mov
subb
les
adcl
cmp
dec
ss
aam
xor
mov
mov
cs
mov
inc
dec
sbb
cmp
inc
jle
xlat
adc
or
sub
sbb
stos
outsb
aaa
cltd
pop
xchg
call
ret
stos
jl
and
mov
les
xacquire
pop
stc
dec
mov
nop
addb
pop
shll
pop
pop
out
adc
mov
sbb
mov
scas
rclb
cmpsb
out
mov
mov
je
rcrl
or
adcl
add
enter
outsb
jbe
test
xor
mov
repz
cwtl
frstor
mov
mov
push
out
inc
les
mov
in
inc
out
int3
xchg
stc
cwtl
xchg
xlat
shlb
inc
rolb
jle
or
insb
mov
pop
fisubrl
xlat
scas
nop
sub
push
sbb
es
fcmovb
dec
jnp
and
int3
adc
lea
data16
into
aad
jns
pop
mov
in
lock
cmpsl
popf
mov
pop
inc
cmpsl
lea
lock
out
insb
adc
xor
inc
jne
sbb
add
mov
out
dec
inc
nop
xchg
js
jp
jnp
lret
arpl
jmp
jp,pt
pop
push
outsb
enter
jmp
jns
les
xchg
bnd
pushf
mov
sbb
pop
nop
enter
hlt
hlt
dec
aad
inc
lods
adc
pop
fcomps
cmp
insl
mov
mov
inc
mov
arpl
or
inc
adc
out
sti
mov
sbb
call
and
add
enter
jg
add
sbb
cmpsl
jmp
ret
cmp
and
xor
pop
test
jp
aad
sbb
aad
stos
rcll
xor
adc
or
shlb
lods
xchg
enter
pop
scas
or
add
mov
cmp
xchg
add
fisttpl
arpl
mov
incb
pop
lods
sbb
iret
psraw
sub
dec
lods
stos
outsb
mov
cmp
pop
js
sbb
rol
stc
gs
rep
mov
mov
adc
sub
lret
inc
pop
daa
frstor
lods
cwtl
xlat
cwtl
push
fdivs
or
add
cltd
std
adc
int
adc
aas
iret
pop
sub
dec
jns
add
mov
push
push
or
adc
nop
lahf
in
and
push
test
and
aas
jne
sahf
fcmovne
inc
cmp
xor
ja
or
sub
xlat
push
fld
fsubs
in
jl
mov
cmp
mov
scas
xchg
fstpl
aam
mov
mov
cmp
out
mov
xor
cmp
cld
push
cmpsl
scas
adc
repnz
cli
out
cmpsb
cmc
xchg
dec
add
pop
push
cwtl
rcrb
push
push
sub
pop
in
into
sbb
cmp
adcl
xchg
cmp
mov
repnz
shl
xor
cmp
call
mov
and
mov
inc
adc
cmp
mov
mov
es
loopne
aam
inc
mov
or
or
fs
or
repnz
neg
inc
mov
pop
js
adc
or
test
int
mov
scas
mov
ret
stos
lds
fldl
cmpsl
mov
push
test
lret
frstor
jecxz
orb
push
and
pop
inc
ret
or
pop
stos
dec
out
fwait
rcl
add
sbb
mulb
sti
adcl
cld
jecxz
cmc
and
mov
icebp
rol
pushf
mov
insl
subl
sti
lods
out
push
inc
sti
sbb
loope
div
cltd
movsl
jl
ljmp
inc
sub
xlat
daa
mov
inc
cmp
cmc
xchg
pop
cmpsb
xchg
in
adcb
sub
movsb
mov
test
call
push
fnstenv
dec
sbb
insl
jbe
jecxz
je,pn
push
in
insl
fstpt
add
jns
iret
fsts
dec
mov
dec
cmp
scas
fs
dec
mov
xchg
cmp
outsb
cmc
xor
es
push
push
push
sub
insl
fstl
cmp
jmp
lahf
in
aad
cs
push
stos
xchg
push
mov
jecxz
push
fistpll
pop
shrl
jg
iret
cmp
dec
inc
mov
pop
subb
out
dec
sub
pop
ret
mov
andl
pop
fbstp
cwtl
pushf
mov
repz
jns
pop
pushf
jne
add
inc
lods
jmp
mov
mov
mov
out
aas
add
cmpsb
shrb
xchg
xchg
push
add
sbb
iret
sbb
or
sbb
mov
fstpt
cmp
loope
movsl
ror
mov
push
jg
aaa
push
jle
push
push
lods
mov
sub
out
out
push
repnz
mov
xchg
pusha
sti
outsl
lahf
das
cmp
dec
jp
mov
call
fiadds
out
neg
xor
and
jne
mov
popa
mov
dec
cmp
push
sub
and
mov
xchg
bound
test
int3
aam
ja
sti
adc
data16
mov
mov
int
push
push
cli
enter
cld
rcrl
add
adc
sub
ret
dec
mov
jo
movl
scas
cmc
pop
aaa
adc
inc
shll
test
jmp
lods
stc
sub
jmp
mov
fcmovb
cmp
xlat
imul
pop
cwtl
push
enter
jl
clc
dec
subb
das
push
ja
xor
adc
imul
sti
mov
ljmp
push
and
dec
or
loopne,pn
sub
inc
call
out
mov
cmpsb
cli
repnz
xor
ret
imul
xchg
cli
ret
dec
mov
jle
call
mov
pop
ljmp
iret
pop
dec
test
dec
or
mov
fbld
cli
jp
jae
or
pop
and
cmp
aad
repz
or
gs
rol
inc
sub
insb
ljmp
fnstsw
push
add
sbb
nop
movsb
or
add
cmp
fmuls
ret
insl
fdivr
rorb
xor
adc
mov
xor
leave
xor
pushf
dec
mov
cmp
mov
inc
mov
jg
nop
pop
and
mov
jg
sub
dec
popf
clc
lods
out
jnp
and
inc
add
sub
add
mov
mov
xchg
sub
data16
dec
xor
dec
xorl
pop
js
cmpsl
scas
iret
cld
xor
out
ret
movsb
jl
repnz
lcall
fwait
sbb
adc
shll
dec
inc
mov
enter
sub
shrl
and
push
orl
mov
push
adc
into
sub
xchg
addr16
adc
out
nop
and
pushf
mov
repz
aam
ret
inc
sub
sub
mov
ja
mov
clc
das
add
in
push
push
sub
xchg
add
fsubrp
cmp
insb
inc
sbb
mov
sub
sub
iret
push
xor
jae
lret
mov
jne
inc
or
push
sub
insb
lret
jmp
inc
lahf
push
mull
mov
out
mov
test
out
push
stc
sbb
mov
imul
das
aad
mov
or
and
imulb
jnp
and
ja
push
dec
xchg
adc
shlb
lods
xchg
lret
or
add
shl
out
cmp
das
stos
pop
adc
or
jns
inc
pop
dec
jmp
xchg
addr16
inc
test
lcall
add
inc
mov
insl
mov
nop
nop
jg
test
sub
xchg
lea
popf
inc
xchg
jmp
adc
pop
push
imul
fisttpll
sbb
int
movl
mov
mov
cvtpi2ps
xchg
int3
mov
movsb
inc
xor
xchg
out
jnp
arpl
mov
mov
cmp
js
outsb
add
in
xchg
rol
push
repnz
add
rclb
push
clc
lods
stos
loop
push
inc
inc
mov
cmpb
lcall
pushf
add
push
and
pop
aam
push
lea
cmovle
cmp
imul
inc
les
aas
jp
dec
imul
lods
sbbb
inc
push
sub
int
xorb
xchg
dec
xor
mov
pushf
jbe
or
fildl
sub
test
fcompl
jge
sbb
test
cli
ss
enter
xchg
dec
test
mov
push
mov
mov
iret
test
les
aas
xor
clc
data16
dec
stc
xchg
mov
shlb
cmp
dec
add
mov
push
push
sub
sbb
inc
insl
repnz
sub
test
push
dec
int
in
jg
pop
or
mov
js
ret
mov
xchg
adc
into
das
push
mov
cmp
pop
andl
cld
stos
out
insb
lods
jno
push
aas
cld
jp
sbb
enter
imul
xchg
add
mov
jmp
out
mov
dec
push
add
insb
mov
pop
pop
xchg
call
cmp
ret
out
enter
inc
pop
push
jmp
lret
cmp
push
mov
test
mov
mov
xchg
adc
jle
fdivrl
push
lret
out
adc
add
fdivrl
pop
mov
mov
xor
imul
movsb
andb
push
mov
jg
dec
ret
mov
adc
cmp
andb
and
insb
faddp
sahf
xchg
popf
jb
les
xor
fwait
push
cmp
movsl
push
fldt
into
cmpsb
gs
pop
loop
cwtl
xor
scas
pop
mov
add
mov
icebp
cld
shrb
push
sbb
add
jle
ror
into
push
mov
inc
cli
jp
cmpb
xchg
out
mov
scas
mov
dec
lahf
cmp
dec
pop
push
sbb
inc
and
iret
jae
push
pop
add
popf
mov
jecxz
add
mov
jnp
xchg
jo
mov
lods
into
lods
lea
jns
arpl
fs
adc
mov
es
and
stos
inc
fwait
pushf
jbe
xor
js
aam
out
dec
and
adc
cmp
fsubl
mov
in
and
cmp
iret
cmc
sub
pop
stc
jmp
jle
inc
xor
inc
jmp
fdivl
cmc
or
ss
and
ja
xchg
mov
mov
jnp
ret
push
mov
lock
in
loope
mov
dec
xchg
mov
cmp
push
mov
mov
jle
mov
or
mov
cmp
fistpll
sub
mov
jge
dec
sbb
rclb
sbb
gs
loop
lods
mull
push
pop
cmp
mov
les
lret
jns
popa
add
and
ja
shll
dec
pop
adc
inc
adc
cwtl
cwtl
jbe
cld
pop
loop
cmp
lcall
andb
mov
jecxz
lea
adc
cmc
add
lds
std
push
mov
es
ljmp
add
push
mov
jge
mov
push
icebp
imul
icebp
lret
dec
mov
inc
in
cs
cli
test
aas
iret
xor
lret
dec
std
cli
adc
inc
int3
aad
roll
xor
rcrl
and
insl
sub
dec
insb
pop
mov
insl
outsl
cmp
inc
and
fisttpll
test
cld
push
aad
loope
mov
mov
outsb
xchg
push
sub
je
mov
or
xchg
loope
aas
ljmp
sub
gs
or
inc
cmpsb
jle
mov
push
repz
sub
ret
mov
push
adc
xorb
out
shll
sbb
xor
mov
popa
daa
scas
add
lret
xchg
pusha
fldl
out
xchg
xchg
fiaddl
iret
test
std
or
imul
xor
dec
mov
je
jnp
stos
cmp
das
call
xchg
data16
sti
ljmp
mov
push
arpl
mov
hlt
inc
pushf
xchg
mov
rcl
mov
sahf
xor
push
mov
pop
inc
inc
rcrb
ljmp
cld
xlat
out
jns
shll
addr16
mov
and
mov
test
adc
mov
sbb
push
push
fwait
sahf
fnsave
inc
insl
and
push
scas
fsubp
decb
push
std
push
mov
mov
cmp
cltd
pop
or
pcmpeqb
lods
jae
adc
adc
xchg
int3
daa
dec
push
sbb
cli
xchg
fistpll
dec
jns
ss
bound
add
repz
in
inc
out
lret
movsb
leave
mov
aad
leave
cmp
fisubs
decl
shr
sti
test
outsl
pop
mov
das
scas
paddusb
sub
and
loopne
les
out
jge
pop
xchg
idivb
sub
pop
jns
sbb
mov
adcb
sub
cmp
mov
loopne
das
scas
clc
jae
inc
sahf
xor
insb
aad
popf
dec
mov
mov
cmp
std
test
inc
insb
push
jge
sub
or
adc
pop
lods
lahf
mov
int3
push
push
xor
out
sub
pop
mov
pop
jb
loop
mov
xchg
lret
dec
test
fbstp
xchg
cmp
cmp
pop
outsl
mov
insl
push
add
pop
or
jmp
aam
cwtl
daa
mov
jns
cld
mov
pop
outsl
into
xor
repz
or
lret
hlt
push
loope
mov
decl
push
sub
addr16
push
mov
loopne
sbb
jnp
adc
pop
xchg
adc
pop
sub
mov
sub
lods
inc
or
imulb
push
cli
adc
shll
jnp
arpl
test
clc
cmp
sti
pop
int
mov
out
adc
mov
jmp
xor
dec
and
xor
ficoml
sbb
repnz
enter
adc
mov
or
rcr
test
fildll
add
mov
cli
ret
iret
add
outsl
into
xchg
xor
sub
jns
pop
mov
adc
dec
push
adc
jg
and
jmp
std
push
lea
sub
das
mov
and
ss
out
or
xor
ljmp
cmp
mov
cmp
sub
and
int3
jnp
shll
shl
mov
fcoms
xlat
mov
loopne
push
inc
or
cmp
push
mov
test
and
inc
push
roll
lahf
cmpsb
ljmp
in
mov
mov
xor
movsl
sarl
xchg
cmovle
daa
mov
pop
repnz
xchg
mov
inc
inc
mov
xor
xchg
int
aaa
xor
cwtl
push
cmpb
aad
jno
daa
shrb
popa
jnp
mov
jecxz
pop
sbb
cmp
ss
xor
sub
xchg
lahf
loop
mov
mov
mov
lahf
xor
jecxz
xor
lret
lods
or
mov
xrelease
aad
mov
cmp
js,pt
ret
adc
xchg
adc
adc
push
pusha
pop
pop
in
out
insl
add
xchg
cmp
out
in
aaa
out
ror
jecxz
and
in
xlat
pop
ret
add
sub
mov
pop
repnz
adc
in
jnp
gs
call
fistpll
sarl
inc
les
jnp
lods
xchg
and
rorb
jmp
push
fwait
sub
stos
pop
add
xchg
mov
push
or
pop
movsl
inc
enter
movsb
mov
add
push
out
mov
adc
lea
aam
or
popa
shlb
sub
and
or
enter
cmpsl
mov
cmpsb
lds
and
outsb
fxch
or
data16
lods
dec
sbbb
inc
fiaddl
mov
dec
xorl
xor
ret
mov
pop
movsb
cmp
mov
ret
and
ss
add
in
subl
mov
xor
nop
pop
test
inc
adc
outsl
movsl
pushf
fistps
add
adc
mov
cltd
xchg
dec
sub
or
jle
dec
nop
int3
int
aad
mov
xor
mov
fisubrl
insl
mov
test
ret
lea
int
or
xlat
xor
xor
push
icebp
push
jle
or
inc
cmp
jnp
cmp
mov
leave
inc
scas
cmp
sbb
int3
pop
xor
sub
inc
lea
call
pushf
jne
jae
negb
mov
insl
add
pop
das
in
and
nopl
iret
leave
inc
jbe
jnp
fisubrl
mov
movsl
cmp
xchg
inc
das
icebp
jg
pop
insl
xchg
sub
pop
pusha
push
dec
pop
cltd
insb
out
out
stos
mov
lock
push
out
insb
cmp
rorl
dec
xchg
add
xchg
lret
ret
dec
pop
decb
adc
notb
xchg
mov
adc
adc
or
mov
push
neg
in
cmp
add
mov
cwtl
dec
loope
rorb
and
hlt
or
aas
loop
gs
jle
nop
dec
loope
rcrb
cmpl
mov
ror
mov
fiaddl
loope
jae
cwtl
cmp
pop
inc
mov
sub
jbe
iret
xor
pop
and
std
enter
ljmp
loope
mov
loopne
test
jmp
sub
ret
mov
inc
cltd
inc
push
xor
add
nop
ss
mov
pop
in
sub
push
cwtl
dec
xor
push
inc
mov
out
imul
push
int
jo
mov
int3
in
push
call
cmpsl
push
stc
outsb
loopne
rcr
ficoms
xor
pop
add
pop
stos
or
sti
xor
ss
mov
rcrl
cmp
scas
in
mov
mov
pop
jbe
fisttps
pop
push
dec
rorl
out
mov
adc
xchg
dec
fbstp
mov
cmc
lahf
pop
mov
dec
add
js
test
jno
mov
jne
or
mov
dec
mov
mov
push
mov
mov
and
in
mov
adc
and
or
and
sub
es
movsl
cli
jo
iret
jns
xchg
mov
push
into
shl
adc
imul
loope
movsb
inc
es
adc
dec
adc
jmp
push
fucomip
jno
and
sti
mov
out
popf
sub
fwait
jmp
fcomip
fiadds
loopne
mov
sbb
xchg
and
fisubl
push
mov
sbb
pusha
jp
out
cmp
pusha
push
xor
out
rol
jae
xchg
enter
loop
sbb
push
and
jnp
dec
mov
inc
out
lcall
popa
rol
fs
sub
into
popa
jo
mov
cmp
adc
push
ds
test
in
pop
dec
pop
pop
jmp
inc
dec
pop
xor
jg
mov
daa
lret
push
jecxz
js
inc
rcrl
mov
enter
add
inc
scas
jp
ja
xor
aaa
jns
push
ret
subl
iret
mov
ficomps
imul
xor
enter
pop
fsubrp
jge
xor
xchg
lea
cmp
inc
mov
sbb
push
fdivrp
in
pop
dec
mov
adcl
inc
in
or
mov
mov
into
and
lds
out
cmc
lock
hlt
dec
xorl
mov
adc
fidivrl
dec
sbb
test
out
fiaddl
pusha
add
push
scas
mov
call
push
pop
lock
jecxz
loope
xlat
es
mov
cmp
mov
lret
mov
push
jmp
roll
jge
pop
out
jno
jne
mov
lret
xchg
lods
mov
jp
stc
sub
xchg
mov
imul
mov
shlb
mov
and
push
push
daa
scas
imul
into
lock
or
xor
mov
jl
push
out
jb
std
fcompp
rcrb
rcll
fbld
cmp
shrb
ljmp
nop
andl
popa
and
movb
xor
es
fisttps
shlb
jmp
fildll
cmp
sbb
lret
ret
fsubs
adc
rorb
push
bound
push
mov
sbb
fsubrs
jp
mov
xchg
std
pop
pop
outsb
dec
cmp
add
imul
out
push
repnz
popa
movsb
dec
fdivrl
adc
ds
lcall
das
inc
insl
sub
mov
xchg
or
sub
lds
arpl
xchg
xchg
shll
sub
push
stos
xchg
cs
es
incb
mov
sbb
inc
pusha
aam
cmp
xlat
call
stc
adc
icebp
cwtl
decb
in
adc
and
rclb
sbbl
in
xlat
mov
sub
int
gs
stc
lret
mov
or
fldenv
lret
arpl
jns
popf
and
in
jno
inc
push
aaa
aam
jns
sub
out
xchg
lahf
add
in
or
jae
xor
add
ret
rorb
aaa
in
imul
aad
push
inc
sub
into
mov
pop
pop
pop
mov
sbb
iret
leave
push
or
and
int
ficoml
js
je
repz
push
in
lds
adc
lock
dec
or
fiaddl
lock
push
cmpsb
pusha
adc
jle
inc
jg
les
pop
and
test
shl
and
dec
jle
mov
out
enter
out
repz
aad
jle
add
notl
into
sbb
in
lahf
inc
push
icebp
cli
add
add
sub
pop
push
adc
pop
sbb
jns
jle
outsb
push
mov
stos
mov
pop
loopne
test
enter
sub
iret
jecxz
or
das
pop
jb
les
xor
ds
pop
rclb
jo
aas
mov
adc
push
lret
aas
sub
pop
fdivs
int3
js
dec
cmp
movsl
stos
mov
mov
outsl
popf
loopne
pop
fs
dec
insl
push
sub
inc
jo
xor
lods
push
das
add
and
xor
add
ss
lcall
push
xchg
lods
mov
lds
and
push
jnp
and
or
call
iret
cmp
jne
sti
adc
test
test
push
sbb
push
jbe
or
enter
in
ret
mov
jmp
xchg
sbb
fstps
les
sbb
adc
stc
push
test
xchg
out
pushf
shlb
divl
jb
add
enter
test
jecxz
lea
push
dec
push
mov
stos
mov
aam
pop
mov
push
pop
mov
push
shr
jnp
xor
adc
adc
rorb
ret
testb
jnp
mov
push
jmp
sarl
lret
mov
push
mov
in
mov
leave
or
inc
dec
cmp
cmp
cs
out
cmp
sti
repz
std
xlat
loop
jb
pop
out
out
into
sbb
scas
jo
pop
enter
mulb
lahf
fcoml
xchg
outsb
lock
or
sub
in
das
jnp
add
mov
adc
sti
int3
xor
rcll
mov
mov
in
xor
or
add
cmp
add
or
jmp
fbld
es
flds
xchg
adc
andb
mov
scas
cmp
mov
mov
lea
loop
push
jno
xchg
cld
mov
or
sbb
push
stos
call
pop
fisubl
jns
pushf
sub
insl
icebp
sub
imul
es
pop
xchg
sub
es
jl
inc
xchg
add
hlt
mov
mov
xchg
ret
adc
add
adc
push
mov
imul
imulb
pop
rorb
add
mov
or
xor
insl
cli
out
addl
mov
fstpt
outsb
sub
mov
sub
test
imul
addr16
scas
lock
jge
icebp
out
xchg
pusha
or
addr16
test
ret
xchg
pop
lods
or
int
in
pop
stc
fisttps
xor
out
outsb
hlt
into
cmp
in
jns
cltd
ja
or
mov
jge
es
pop
inc
leave
sub
mov
enter
shlb
jecxz
sbb
clc
and
in
sbb
pop
jmp
nop
fnstcw
mov
mov
cmp
inc
pop
insl
dec
sbb
clc
int
hlt
clc
sbb
xchg
subl
inc
pop
and
and
jmp
mul
lahf
les
jno
mov
scas
pushf
std
mov
js
sti
ja
mov
out
sub
adc
cmpsl
xchg
dec
xchg
lret
jae
pop
loope
idiv
in
xor
and
xchg
sbb
and
pushf
xchg
and
push
das
lods
cmp
daa
popa
shlb
xor
insl
xor
das
xchg
push
pop
pop
pop
cld
test
jb
add
lea
mov
fwait
mov
and
adc
mov
clc
loope
cmp
xor
loopne
inc
sub
inc
ss
mov
jmp
loope
push
or
rorl
cvtdq2ps
mov
cmc
mov
cwtl
idivb
jmp
popa
daa
pusha
and
test
hlt
ss
cwtl
fnsave
or
scas
cmpsl
push
and
mov
repnz
stos
std
mov
shlb
popf
cmp
ret
repz
lock
out
mov
std
lret
mov
je
and
jae
cmpsb
xlat
aaa
shl
push
mov
les
movsl
fwait
or
iret
push
dec
sbb
pop
dec
mov
xor
in
adc
cmpsb
pop
test
out
arpl
out
dec
xlat
movsl
ss
push
sub
arpl
rolb
fcomps
sbb
push
out
shrl
ret
out
aaa
fcoms
pop
inc
push
or
out
xlat
inc
in
xlat
xor
out
lods
push
out
movsb
sbb
mov
cmp
sub
add
outsl
mov
shl
aas
sbb
arpl
daa
pop
movsl
push
push
adc
jmp
faddl
and
iret
xchg
add
and
repz
pop
xor
push
popa
hlt
testl
mov
mov
paddsb
cmpsb
into
jno
dec
adcl
and
or
cmp
aad
cmp
dec
or
fsubrl
arpl
mov
sbb
cmp
call
inc
sbb
scas
dec
loope
mov
pop
cli
cmpb
mov
mov
inc
push
jle
int3
xchg
or
fisubs
mov
test
push
and
lea
outsl
aas
xchg
xchg
mov
shrl
pop
sar
test
mov
jg
xchg
pop
jnp
add
mov
imul
or
stc
sbb
jl
stos
loopne
jns
dec
dec
fistpll
add
mov
loope
test
mov
and
pop
push
ficomps
cmp
inc
xchg
int
mov
test
jge
push
sbb
adc
sbb
aaa
inc
into
lock
test
ret
jl
lret
js
pop
rorb
sbb
ja
lret
push
pop
mov
adcl
aam
jl
inc
arpl
shlb
imul
and
or
sbb
sub
iret
addr16
xchg
stc
pop
xor
fisubrs
imul
jecxz
iret
fcmovnu
out
and
mov
mov
sub
and
shrb
sbb
loop
inc
push
or
dec
in
add
push
into
das
cmp
jb
and
sar
test
inc
fwait
push
or
cwtl
jns
sub
xchg
imul
add
arpl
pop
clc
imul
mov
in
inc
dec
fldt
add
mov
sub
lock
ds
push
les
pop
test
js
lret
stc
pop
in
adc
or
testl
hlt
mov
insb
call
or
jge
jmp
push
inc
out
adc
fmul
pop
out
jo
addr16
in
cmp
js
decl
shll
mov
icebp
out
lods
push
mov
into
mov
popa
addr16
jl
mull
ja
in
xchg
adc
int
push
dec
fiadds
sti
adc
pop
clc
dec
jge
rep
sbb
repnz
mov
lods
es
sti
jbe
inc
dec
lock
or
pop
nop
out
popl
pop
adc
add
jae
or
xchg
lea
lret
or
sbb
mov
out
mov
and
in
inc
pop
mov
pop
lods
ja
nop
jp
adc
adc
stos
in
cld
add
or
rol
decl
out
cmpsl
pop
inc
not
test
pop
out
stc
xchg
lock
mov
push
push
in
out
dec
js
cmpl
repz
cmp
jns
mov
mov
fucomip
mov
push
xchg
or
mov
jno
push
jecxz
sub
mov
ja
mov
test
push
sbb
xor
pusha
jl
add
xlat
rcrb
inc
dec
push
cmpb
inc
aam
iret
dec
and
scas
push
dec
inc
mov
arpl
lds
nop
cmc
sti
cli
cmp
lret
sti
pop
imul
sub
pop
dec
shrb
pop
nop
xor
js
inc
adc
inc
push
sub
cmp
or
xlat
cwtl
mov
add
sub
and
int3
jnp
mov
inc
and
sar
stos
lahf
adc
and
add
les
test
or
pusha
xchg
mov
roll
pop
andl
dec
stc
in
into
movsb
and
clc
leave
int3
lea
pop
mov
jl
sub
dec
mov
xchg
add
sbb
fwait
add
cmp
aaa
je
adcb
cmc
push
popl
mov
xor
jmp
sub
push
repnz
mov
jbe
imul
fisubl
aas
pushf
fmul
mov
dec
jo
mov
ficoms
stos
adc
sub
rcrb
bound
xchg
std
mov
jo
arpl
xor
icebp
out
out
and
cli
in
dec
sbb
and
lret
imul
and
shll
push
pop
pop
push
push
dec
jl
negb
xchg
out
push
sub
xchg
aam
shl
orb
jb
fnsave
imul
push
cmp
xcrypt-ecb
cmpsl
dec
push
dec
xchg
mov
subb
popa
lret
movsb
inc
hlt
bound
fstpl
cmpsl
push
test
fsubrs
jp
ror
mov
pop
xor
insl
stc
xchg
xor
test
mov
frstor
addr16
roll
shl
mov
aam
inc
xchg
and
xor
push
sub
jne
cmp
es
sbb
xchg
cmpsb
push
pop
in
int
pop
mov
pop
subl
push
repnz
mov
mov
fwait
mov
movsl
jnp
div
sbb
cmpsb
mov
in
sti
pusha
sub
testb
out
jne
cmp
stos
mov
fistps
inc
scas
xchg
adc
sbb
stos
fcoml
fucomip
subb
xchg
xor
jno
inc
or
jno
push
jmp
imul
lods
pop
jne
sub
xchg
scas
adc
shlb
mov
out
push
imul
add
pop
or
mov
mov
pusha
bound
mov
pop
lock
mov
sub
push
sub
jmp
and
ret
outsb
xchg
push
leave
push
hlt
cmc
stc
mov
add
cmp
rclb
pop
cmp
dec
dec
dec
cmc
lock
pop
push
inc
push
insb
lds
imul
dec
out
inc
enter
fcoml
inc
ret
jne
pop
jl
mov
jmp
stc
fildl
mov
sbb
ret
das
ljmp
mov
jecxz
jns
cmp
daa
add
andl
inc
sub
adc
mov
sub
into
dec
xchg
and
ret
in
mov
je
jmp
std
xchg
sbb
pushl
dec
inc
pop
loop
pushf
sbb
mov
xchg
push
stos
and
int
sti
mov
jno
insl
sbb
inc
adc
pop
ss
push
mov
aad
cwtl
mov
cs
lret
pop
push
leave
lret
pop
repnz
test
or
out
cltd
aam
adc
mov
inc
stc
mov
sbb
mov
mov
leave
fbld
mov
lods
push
in
pop
pop
or
or
and
xchg
adc
xchg
les
popf
loope
fs
arpl
push
mov
or
hlt
push
jb
loop
push
les
ljmp
mov
popf
cmpsl
cmpsb
fwait
and
mov
loopne
imul
addr16
les
mov
mov
js
pop
jne
testb
cmp
cmpsl
shrb
ljmp
iret
add
je
push
clc
test
mov
jb
aam
push
xchg
and
cmp
pop
lods
push
clc
rorl
ss
cmp
xor
hlt
scas
mov
ljmp
sbb
xorb
addr16
cmp
lcall
inc
je
aas
mov
jns
adc
sub
dec
ss
nop
negl
mov
pop
shrl
gs
cld
div
cmc
mov
fisubs
adcb
inc
adc
out
adc
mov
pop
icebp
gs
push
mov
xor
repnz
lcall
aam
xchg
movsb
pop
add
adc
adc
int3
pop
out
xchg
addb
sti
in
dec
movsb
cltd
push
sub
cwtl
lret
jmp
sub
or
sbb
mov
inc
cld
mov
inc
pop
pop
mov
sub
push
and
cmpsl
push
or
cld
mov
mov
pusha
sbb
popf
ds
xor
repz
iret
sub
push
sbb
push
test
lods
mov
imul
sub
push
push
mov
add
lea
push
inc
pop
inc
push
je
cwtl
and
pusha
push
gs
jne
jl
lret
outsb
push
cmp
fcmove
adc
and
pop
jns
add
push
push
mov
xlat
in
cmp
xchg
dec
rorb
dec
outsb
mov
inc
pop
jmp
jbe
push
bndstx
xchg
cmp
add
mov
sub
mov
test
jle
stc
adcb
sarb
cli
mov
dec
pop
mov
sbb
xor
jno
lret
fimuls
pop
je
and
nop
jecxz
xor
adc
xchg
test
xor
repnz
call
sahf
out
push
sub
mov
mov
pop
in
divl
xor
fs
dec
pop
daa
ret
dec
sbb
add
idivl
pop
adc
fisttps
mov
pop
mov
js
push
or
ror
testl
daa
aas
ret
data16
lret
push
cmpsb
pop
mov
shl
data16
add
lock
push
cmpsb
mov
xchg
jle
mov
inc
or
xchg
fwait
pop
sub
cmp
iret
mov
mov
pop
scas
test
and
sbb
mov
xchg
xchg
std
sub
xchg
ljmp
fsubl
dec
inc
ret
pop
mov
jno
sarl
mov
jle
and
fsubr
scas
test
call
into
sub
jecxz
fsubrs
mov
fidivrs
jle
je
stc
shrb
inc
movsl
aas
xlat
mov
sub
mov
push
hlt
int
jnp
pop
xor
js
aad
lods
push
lcall
xchg
jae
xor
inc
cmp
fimuls
dec
pop
xchg
adc
add
loopne
pop
cmpsl
inc
shl
in
inc
popf
xchg
pop
cmpsl
add
test
cli
pop
mov
lods
adc
mov
leave
mov
mov
and
push
popf
sbb
mov
push
cli
push
subb
mov
lcall
pop
adc
imul
test
loop
sbb
shrl
mov
adc
and
lret
mov
in
xlat
mov
inc
xchg
stos
call
jbe,pn
lods
adc
and
sbb
push
xchg
pop
repnz
push
inc
lret
out
sbb
pop
jbe
cmc
push
outsl
lds
or
sub
push
push
xor
mov
call
and
imul
loop
testl
or
pushf
cmp
or
addr16
enter
imul
sbb
stos
call
mov
ljmp
sbb
sub
aaa
jb
dec
jne
aad
sub
dec
andl
sub
and
dec
out
jno
or
jmp
cmp
and
mov
sbb
mov
loopne
lods
and
data16
push
addr16
jl
inc
aaa
fidivrs
push
mov
lret
pusha
jo
out
pop
mov
jne,pt
call
jg
dec
add
jns
pop
or
mov
sub
mov
jmp
jb
aad
popf
fs
dec
sbb
outsl
sbbb
enter
dec
xor
or
lock
std
into
pop
icebp
lods
add
dec
rcrb
ret
pop
xor
gs
cli
adc
pop
mov
or
xor
ficoml
dec
ljmp
pop
xor
rclb
shll
rclb
aad
sub
ret
insb
and
push
arpl
push
std
mov
pop
rorb
xchg
inc
mov
nop
scas
inc
les
in
lea
or
leavew
pushf
das
or
jnp
sarb
or
sbb
call
ret
or
or
lods
dec
jns
pusha
int
mov
sub
add
fldenv
mov
mov
cli
xchg
pusha
cmp
cld
and
lds
icebp
movsl
push
cli
jmp
enter
push
mov
pop
fdivrl
call
adcl
inc
add
mov
lahf
rcrw
cmp
mov
rol
mov
jnp
pushf
arpl
cmp
mov
jb
mov
dec
mov
xchg
sbbl
push
xchg
cmpb
negl
inc
jbe
cmp
add
stos
mov
aaa
jno
fs
add
add
movsb
mov
movsb
mov
fmuls
repz
aad
outsb
mov
hlt
jp
push
pop
int
pop
dec
push
mov
xlat
pop
sbb
xchg
ljmp
mov
and
daa
das
mov
inc
add
sbb
repz
jno
pop
stc
enter
lds
mov
testb
fmuls
cmp
incb
inc
xor
sbb
imull
shlb
stc
repz
fstl
sub
xchg
jge
adc
out
mov
loopne
subb
dec
inc
dec
popf
cmpsl
cmpsb
jns
lret
insl
lret
fnstenv
nop
push
dec
mov
outsb
push
dec
out
or
outsb
aad
sbb
inc
scas
outsl
and
push
push
mov
movsl
inc
jmp
mov
xchg
roll
push
cld
fidivrs
or
and
das
lods
aam
ret
adc
addr16
add
inc
fcmovu
mov
inc
push
lahf
or
sbb
adc
cmp
push
sub
jno
lock
rolb
lret
xor
out
mov
xor
popa
sub
shlb
imull
adc
xor
xchg
pop
add
fbld
mov
xor
pop
sbb
xchg
in
mov
pop
add
cmp
mov
cmp
lods
push
mov
jecxz
jns
gs
mov
cmpsb
rep
dec
aad
icebp
cmp
inc
pushf
dec
mov
pop
jmp
shll
enter
outsb
es
push
dec
clc
cmpsl
sub
xchg
aam
mov
icebp
mov
adc
inc
dec
leave
mov
xor
and
pop
inc
dec
inc
push
ss
jno
ds
sbb
stos
or
ljmp
pop
iret
xchg
jae
pop
xchg
nop
sahf
pushf
lock
push
push
je
mov
push
adc
iret
inc
movsl
ret
pop
jge
mov
stos
cmp
push
adc
xchg
and
adc
lcall
icebp
pop
leave
gs
cmp
push
push
dec
jmp
inc
adcb
push
sbb
rcll
popa
add
cmpsb
mov
xor
cmp
sub
aas
lret
sbb
xor
jne
xchg
in
pop
pop
and
sbb
sub
lcall
mov
jnp
jmp
testb
imul
inc
sub
jp
cmp
xor
sbb
jne
bswap
aaa
push
cmp
mov
push
inc
cmpsl
or
mov
and
lock
mov
loopne
xchg
jle
out
mov
aas
outsb
dec
push
pop
sti
sahf
test
jl
scas
inc
cmp
jno
cmp
jmp
sar
lea
mov
add
mov
mov
jecxz
fbld
bound
xor
in
or
cmpsl
pop
mov
neg
dec
jmp
or
cli
push
jecxz
ret
inc
and
mov
shll
fsubl
popl
xchg
sbb
sub
dec
and
sub
xchg
sbb
in
lock
loopne
pop
pop
cltd
clc
push
push
fwait
jbe
es
insb
mov
cli
push
arpl
mov
cmc
int
movsb
fnstsw
insl
imul
mov
lods
and
or
jbe
mov
jne
stc
unpcklps
jb
mov
mov
cmp
xchg
add
push
or
popf
in
test
jge
jns
cmp
lahf
in
sahf
cwtl
push
mov
cmc
fmulp
and
inc
stos
and
xor
out
jno
gs
movsl
pop
jmp
cmc
std
cmpsb
cltd
leave
jbe
adc
inc
lock
mov
sub
pop
push
xor
aam
loope
and
add
xor
jmp
mov
movd
inc
push
lods
mov
std
fwait
roll
icebp
pop
lcall
or
mov
pop
mov
xor
outsl
xchg
cmpsb
push
std
xchg
ljmp
cmpsl
test
mov
mov
leave
and
imul
xchg
sub
dec
and
sub
bound
cltd
jbe
fwait
mov
xor
pop
push
xchg
dec
push
adc
xchg
inc
jmp
jge
bound
subl
cmpsb
mov
movsl
jne
sahf
out
flds
out
aad
dec
cltd
adc
mov
and
add
sbb
subl
sub
jo
test
imul
insb
lods
das
repnz
outsl
test
cwtl
mov
sbb
jmp
or
int3
testb
ss
push
cmpsb
imul
popf
mov
jns
int3
pop
jp,pn
mov
cwtl
jle
cltd
out
mov
add
pop
sub
imull
js
aam
sbb
mov
cli
xor
and
inc
push
xchg
stc
sub
xchg
adc
mov
adc
xchg
push
push
jecxz
cld
dec
insb
pop
arpl
jne
icebp
xlat
xor
jb
inc
inc
xor
mov
fdivrp
sti
aas
repnz
cmp
push
pusha
jmp
push
flds
mov
leave
mov
mov
cltd
pop
mov
xchg
mov
adc
sbb
adc
mov
mov
popf
push
xor
std
push
std
adc
leave
or
insl
dec
in
in
add
jae
mov
add
jo
xchg
jecxz
cmc
sbb
movsl
mov
or
stos
push
mov
xchg
insb
shlb
dec
out
test
scas
cmp
scas
xor
movsl
in
test
int3
sub
xchg
pop
add
cmpsb
mov
mov
stc
adc
roll
lea
jo
jle
xchg
data16
leave
cld
jl
jl
adc
lds
pop
dec
add
pop
mov
pusha
addb
dec
iret
mov
cmp
popa
movsb
movsl
or
add
cmp
dec
or
pusha
outsl
push
cmp
xchg
std
add
les
lcall
mov
fldlg2
pusha
imul
cmp
movsl
stos
jnp
aaa
test
mov
pop
fldt
out
or
jns
stc
stos
inc
mov
pop
lcall
into
enter
pop
jmp
hlt
rcl
fdivl
push
in
fs
xchg
add
pop
int3
mov
out
mov
mov
mov
xchg
bound
cli
pusha
mov
push
loope
dec
xchg
and
pop
outsl
xor
mov
dec
pop
stc
pop
mov
shlb
mov
inc
andb
mov
xor
cmpsl
cld
jno
test
lods
sar
pop
sbb
cld
arpl
out
inc
icebp
xchg
or
push
ljmp
shrl
enter
outsl
xchg
and
cmp
xchg
and
je
jb
mov
shr
test
inc
mov
dec
aam
rol
xor
movsb
fnclex
fmull
nop
jne
xchg
jno
rolb
lret
lcall
ja
mov
cmp
ss
adc
icebp
jmp
or
jo
add
inc
jl
int
out
scas
les
dec
cmp
jnp
movb
pop
mov
inc
add
xor
aas
flds
jge
jb
dec
pop
int3
sbb
xor
cli
aaa
jle
inc
xor
xor
fs
jge
inc
jne
mov
mov
mov
dec
and
outsb
stc
cmc
pushf
cmp
sahf
sahf
mov
rol
mov
mov
stos
icebp
clc
mov
mov
je
mov
mov
pop
lods
std
dec
xor
das
imul
inc
cli
jg
into
or
sbb
cmpsb
int3
push
xchg
pop
call
push
aam
bound
int
fmull
sub
dec
dec
cmp
sbb
xchg
inc
dec
lcall
std
out
push
out
push
xor
cmp
ss
xor
fsub
lods
loopne
inc
lea
outsb
mov
aam
pop
jno
iret
dec
or
lock
notl
popf
test
stos
xor
daa
dec
mov
push
fstps
push
iret
rcrl
push
cmp
js
add
aaa
icebp
fists
push
sti
je
xor
xchg
aad
inc
in
addr16
rol
pop
fwait
mov
test
fstpt
add
scas
call
ljmp
loope
mov
mov
mov
mov
push
adc
push
stos
ljmp
cmc
mov
mov
xlat
jecxz
dec
lods
mov
inc
popf
xlat
mov
and
dec
je
add
inc
scas
pop
outsb
cltd
mov
fwait
rol
jmp
scas
in
fisubrl
jnp
pop
dec
fldcw
test
sub
rorb
inc
xchg
pop
mov
shr
xlat
adc
and
pushf
iret
dec
popf
push
aaa
aas
push
aaa
popa
cmpb
dec
andl
jb
mov
aaa
nop
push
or
js
jbe
mov
fdivl
xchg
jmp
nop
imul
or
cwtl
into
adc
fs
inc
lret
cwtl
fimull
je
fisubrl
inc
loope
pop
jg
in
mov
mov
jbe
jns
inc
call
xchg
cmp
les
sahf
xchg
fwait
jecxz
inc
test
cs
mov
pop
scas
add
vmptrld
mov
mov
xor
and
mov
push
cli
popf
xor
push
sbb
jecxz
sbb
rcrl
dec
int
and
jns
mov
fnsave
or
repnz
add
nop
out
nop
rcll
rcl
test
lods
jle
pop
pop
add
dec
cld
dec
sbb
xorb
lret
xchg
push
rol
jg
das
ror
mov
call
dec
mov
out
arpl
or
inc
negb
mov
push
mov
jns
enter
mov
adc
shlb
xlat
lcall
dec
in
push
cmpsb
adc
jmp
xchg
int
dec
jns
fildl
call
lea
mov
xchg
mov
or
lock
movsl
mov
call
ds
aaa
and
sub
popa
xorb
xchg
shlb
sarb
aam
enter
mov
sub
out
imul
and
bound
push
ja
aad
aam
mov
pop
ljmp
test
stos
lcall
lods
fbld
cmp
cltd
adc
outsb
and
out
dec
int
aaa
es
test
push
inc
xchg
aad
sbbb
lea
jae
mov
dec
dec
and
adc
mov
mov
inc
and
mov
fisubs
inc
mov
pop
lods
icebp
inc
mov
or
push
pop
mov
and
fidivrl
cmp
mov
sub
jecxz
or
pop
ret
data16
mov
in
cmp
xor
cmp
mov
sub
nop
jl
cmp
pop
in
mov
mov
stos
mov
mov
lcall
daa
outsb
cmp
cmpl
es
push
inc
add
adc
cld
xorl
push
scas
jmp
push
jl
fcmovne
imul
and
push
mov
pop
jg
aas
or
sbb
xor
push
clc
mov
sub
inc
xchg
scas
ret
mov
out
les
adc
dec
mov
mov
sub
ljmp
adc
das
int
add
xchg
mov
jge
gs
shlb
pop
lds
andb
dec
repz
sbb
jbe
test
movb
mov
adc
subl
or
dec
cmc
xor
push
daa
pop
add
sbb
ret
lret
jne
jae
cmp
cmp
cltd
inc
mov
add
movsb
or
lds
mov
daa
or
lods
mov
lahf
mov
aas
and
inc
mov
push
jb
daa
lea
cmc
add
fwait
jo
xorl
sub
xor
sbb
xchg
imul
xchg
adc
in
into
out
mov
mov
mov
pop
shll
mov
test
jecxz
dec
fmull
sbb
adc
cmpsl
mov
mov
xchg
ror
cwtl
sbb
push
flds
imul
insb
and
int
aad
jno
shl
xchg
push
sbb
outsl
mov
scas
dec
xchg
xor
push
cmp
fadds
ja
jg
sbb
mov
imul
xchg
bnd
xchg
test
les
pop
icebp
pop
call
xor
fildl
fcom
in
sbb
insl
push
pop
xor
repnz
inc
jo
jecxz
cmpsl
out
xor
dec
and
jecxz
mov
nop
cmp
xor
pmullw
aad
sbbl
fiaddl
push
jbe
lret
or
out
xchg
outsl
or
in
loopne
xchg
mov
std
mov
sarb
xchg
testl
mov
test
sub
sub
test
imul
add
shrl
lahf
mov
xchg
xor
xchg
jns
or
mov
test
mov
pusha
jecxz
pop
rcll
push
add
flds
in
scas
lcall
pop
ficomps
lcall
pop
sub
shlb
jbe
add
sahf
push
fmul
rorl
scas
xchg
sbb
and
pop
and
movsb
pop
adc
out
dec
divb
jno
xchg
shrb
lds
lock
and
dec
sub
sarl
sti
sub
mov
adc
add
mov
icebp
test
mov
out
or
cmp
std
inc
dec
loop
pop
test
or
stos
inc
fadds
test
and
ds
ljmp
call
xor
cmp
mov
sub
repnz
dec
lods
rcl
jb
fadds
int3
mov
into
mov
sbb
sub
push
mov
loop
inc
push
mov
fnsave
fs
out
cmp
jb
cli
push
pop
pop
push
jecxz
inc
pop
push
lods
cmp
pop
lret
mov
mov
ds
or
pop
mov
mov
or
idivl
pop
aam
subb
dec
xchg
mov
add
in
push
outsl
jne
fs
clc
add
jb
movsl
pop
cmp
lcall
jg
lea
adc
sub
sti
lock
insl
in
into
jmp
outsl
jo
pusha
lock
dec
or
sti
sbb
insl
std
jb
mov
jge
sub
divb
daa
mov
adc
adc
sti
pop
int3
or
sub
pop
push
push
fsubrl
inc
sbb
push
fdiv
lods
loopne
jnp
mov
hlt
add
mulb
mov
jmp
push
mov
jg
push
or
ret
mov
jecxz
and
fcoml
rcrl
mov
popl
negb
imul
movsl
shrl
and
iret
mov
push
popf
cmp
je
scas
dec
or
mov
push
cmp
sti
cs
push
lods
decb
jp
out
test
dec
and
or
sub
popa
cmpsl
pop
xor
cwtl
ljmp
cli
mov
xor
mov
mov
cli
and
mov
int3
cs
pop
aaa
pop
movsb
popa
adc
hlt
lret
dec
xchg
out
dec
hlt
xchg
pop
jg
loope
addr16
jbe
leave
mov
cmpsb
mov
inc
jp
test
mov
inc
or
and
test
xchg
movsb
roll
mov
enter
cmc
adc
jl
dec
fidivs
and
ret
sub
int
mov
shrl
mov
repnz
ret
fdiv
cli
jp
lret
sarl
popa
mov
insl
or
push
mov
cmc
imulb
cmp
cli
xchg
lret
shr
mov
iret
sub
xor
xrelease
and
pop
sbb
jbe
out
mov
cmpsl
sub
sub
pop
push
imul
xor
mov
test
dec
sub
mov
sti
sarb
xchg
jbe
mov
pop
sarl
lahf
les
icebp
lret
into
push
pop
pop
ret
jp
aaa
cmp
mov
and
mov
movsl
jg
jmp
cwtl
mov
lcall
sbbb
adcb
xor
addr16
dec
dec
and
or
repz
repz
outsb
pop
imul
stc
insb
imul
mov
xor
push
jb
bound
paddsw
mov
add
mov
jb
loopne
lret
sti
mov
sbb
or
scas
enter
lea
ret
xor
sahf
jo
mov
push
aad
dec
lret
cs
lods
test
cmp
aam
dec
iret
outsl
mov
cmp
push
sub
pop
add
lea
or
clc
dec
mov
rolb
xchg
xlat
pop
aad
push
clc
sub
lods
xor
xchg
fdivrl
lods
cmp
lret
gs
lahf
sbb
add
test
mov
push
or
jle
in
mov
mov
ja
jns
push
and
cmpsl
xchg
pop
sub
movsl
clc
inc
mov
sbb
es
xchg
cmpsb
shlb
into
int3
or
test
fwait
and
adcl
fs
rcl
and
push
inc
lret
int3
aam
fwait
and
movnti
or
cmc
cmp
xor
addb
lcall
push
xor
pushf
cs
nop
add
into
in
adcb
outsb
mov
fisubrs
fldenv
out
pop
pusha
lods
pop
icebp
repnz
and
addr16
adc
mov
sub
gs
adc
adc
xchg
cmc
mov
rcr
mov
pusha
xchg
test
sbb
inc
inc
jnp
and
movsl
cmp
mov
adc
out
pop
dec
ror
sub
in
fisttps
xor
cmp
mov
mov
push
imulb
jmp
xchg
pop
push
or
push
cwtl
imulb
xchg
lcall
add
pop
repz
push
add
shl
and
lods
mov
lcall
and
loopne
mov
mov
cltd
mov
xlat
sti
addr16
bound
hlt
and
inc
outsb
movsl
enter
in
cmp
mov
enter
mov
outsb
popa
mov
fimuls
jecxz
out
shl
inc
adc
loopne
xchg
cltd
pop
popf
dec
pushf
gs
cltd
test
mov
fcoml
mov
repz
jmp
ja
pusha
fnstenv
rclb
mov
xor
ss
cwtl
sbb
or
dec
jne
int
mov
mov
xor
mov
int3
xchg
scas
call
push
insb
in
cmp
fs
ss
add
dec
add
icebp
xchg
jne
shlb
add
xor
sbbb
out
imul
mov
adc
fsubrs
jb
mov
orb
and
imul
es
sub
jge
pshufw
dec
pop
arpl
hlt
xchg
lcall
xor
aas
cmpl
data16
ds
int3
xor
cmpsl
fsubl
xchg
addr16
sbb
sarl
mov
std
roll
adc
inc
and
lods
cmp
aaa
lods
adc
shrl
mov
jb
ja
inc
push
xchg
or
dec
xchg
in
int
loopne
ss
lahf
push
add
xor
dec
push
cwtl
inc
ljmp
bndldx
fnstenv
dec
loop
dec
out
dec
data16
mov
cmpsb
sti
test
and
adc
imulb
push
insl
mov
xchg
sbb
push
rorl
fisttpl
test
mov
sub
negl
insb
jl
pushf
inc
xchg
push
cmp
jbe
dec
and
or
add
cmpsb
out
pusha
sahf
xchg
loope
ficompl
sbb
dec
cmp
sub
or
in
cmpsl
add
test
arpl
pop
pop
in
add
sar
push
ds
mov
xor
sbb
inc
mov
sbb
lock
inc
sti
imul
jecxz
push
mov
testl
ja
xor
or
sub
inc
lret
fs
xchg
test
jbe
jp
push
inc
in
dec
inc
xchg
xor
mov
adc
sbb
dec
std
mov
lret
cmp
rclb
outsb
pop
xor
jle
sahf
test
call
mov
xor
jecxz
ss
mov
and
xor
outsl
jno
mov
sbb
jmp
andl
fsubr
push
or
xchg
int
push
xchg
inc
stc
jno
jl
mov
inc
sbb
pop
xlat
push
jecxz
jmp
cmpsb
jne
int3
arpl
xor
and
neg
cmp
push
push
xchg
and
pop
hlt
mov
scas
and
popf
dec
inc
adc
pop
lods
int3
test
push
cmp
add
push
mov
insl
bound
imull
xlat
mov
jno
jno
fisttps
cmpsb
or
sbb
pushl
sbb
jb
and
cwtl
cmp
mov
jl
mov
aas
mov
repnz
cmp
push
rcr
cld
push
and
movsl
push
jp
sbb
mov
out
mov
mov
lds
inc
clc
std
jns
xor
cmpsb
pop
call
repz
lock
ret
andl
sbb
cmpl
loop
pop
roll
ret
mov
leave
sbb
roll
lods
push
or
shrb
das
and
jecxz
popf
and
jae
cltd
insl
cltd
fistpll
enter
xor
pop
jmp
addr16
fwait
add
xlat
pushf
lods
inc
and
cmpsl
adc
loopne
mov
gs
insl
sub
fsubp
addl
sub
sub
into
movsl
test
cmc
loop
stos
sahf
push
dec
sbb
hlt
adc
scas
sahf
lret
cmp
jnp
fildll
mov
mov
pop
inc
int
add
mov
call
cmpsl
roll
mov
push
mov
jo
lods
dec
jno
loopne
push
pushf
sbb
pushf
imul
fdivs
add
cmp
push
pop
lock
sbb
rol
jge
aas
jmp
pop
sub
out
or
push
jecxz
mov
mov
mov
cmpsl
cli
shll
test
test
mov
ret
inc
and
mov
aaa
les
divl
or
sub
into
movsl
dec
and
lea
dec
and
sbb
repz
aam
sub
aas
cld
cld
divb
pop
lods
fmul
or
ja
daa
gs
add
insb
movsb
push
mov
je
sub
lret
and
rcrl
xchg
in
repnz
sbb
jecxz
adc
jp
fs
inc
cld
lret
popl
mov
pop
dec
push
sahf
clc
ja
xlat
gs
movsb
mov
stc
xchg
xchg
jnp
sbb
nop
bound
push
xchg
sbb
popa
dec
and
stos
test
xchg
mov
imul
cmpb
div
aas
daa
xchg
pop
lods
dec
sbb
test
movsl
iret
mov
fsubrl
jge
inc
in
jb
add
jmp
rcll
sub
push
dec
es
and
pop
pop
pop
or
mov
sub
loopne
or
aas
sub
mov
loope
mov
pop
mov
data16
sbb
push
sbb
xchg
pop
stos
xlat
rclb
inc
jg
dec
in
cmp
addb
jg
sti
jl
mov
xchg
xor
loopne
inc
shll
mov
push
ret
and
mov
insl
enter
adc
or
arpl
stos
push
stc
sub
pop
cli
testb
xchg
add
stos
call
pusha
sub
jle
popf
xor
push
inc
pushf
and
lods
inc
data16
dec
adc
mov
or
bound
test
movsl
lahf
movsb
jl
loop
mov
pop
jo
loopne
mov
sbbb
mov
cmp
js
and
test
aam
test
into
repnz
cli
pusha
test
int
or
bound
pop
lcall
gs
mov
push
cmp
into
dec
adc
fcmovnbe
cmp
pop
icebp
fwait
cmp
jnp
push
aam
add
mov
cmp
push
sub
pop
adc
in
jo
in
push
or
rorb
fs
and
cmp
into
sub
add
ds
scas
dec
sti
xor
arpl
and
fndisi(8087
loopne
jmp
mov
jbe
lret
add
dec
test
std
xor
test
jns
or
ret
push
loop
mov
jb
inc
test
push
movsl
sti
pop
xlat
int3
lret
ds
pop
repnz
dec
lret
pop
push
dec
mov
test
psubsw
cltd
gs
data16
leave
jge
add
adc
inc
jnp
clc
cld
inc
mov
sti
out
mov
push
scas
scas
pop
sub
pop
sahf
xor
ret
ss
ret
cmpsb
xchg
jno
insl
pop
in
pop
test
push
pop
loopne
insl
ret
insl
xchg
out
jb
std
jle
dec
shrw
push
ss
inc
mov
leave
pop
and
sub
sbb
test
cmp
xchg
lret
cmpl
hlt
dec
lret
xchg
mov
cwtl
sbb
adc
push
jnp
idiv
mov
jns
add
test
adc
fstpt
sub
mov
mov
test
cs
or
or
loope
cmp
call
cltd
test
mov
ror
push
aam
ds
hlt
cmpsl
les
push
sbb
cmp
cwtl
icebp
push
xor
fs
bound
stos
dec
jno
test
popf
daa
dec
fidivrl
call
xor
loop
into
mov
cmpsb
test
loop
mov
test
imul
movsl
xchg
sarb
out
orb
push
mov
dec
lret
or
int
push
lret
pop
sub
idivb
inc
push
xchg
icebp
add
jbe
cltd
inc
in
aad
addr16
xchg
icebp
popa
lods
jbe
stc
stos
and
pop
lret
dec
or
inc
cmp
out
addr16
insb
inc
js
in
xchg
cmp
dec
or
adc
mov
ja
push
adc
stos
push
int
inc
in
das
pop
push
jb
adc
cmpsl
jns
cmp
jno
xlat
sbb
cmpsb
push
push
lahf
inc
dec
cld
push
jp
bound
mov
push
push
test
aad
out
shl
stos
mov
dec
repz
pop
jo
out
icebp
out
jl
enter
pop
mov
mov
arpl
daa
xor
arpl
cli
imul
cmp
nop
popf
push
xor
jb
push
std
movsl
lahf
adc
rcr
inc
outsb
loop
hlt
icebp
mov
pop
jnp
xorb
cmpsb
push
scas
or
cmp
jle
xorl
xor
mov
leave
aam
inc
or
movsl
sub
jae
lcall
jbe
loopne
fisubs
adc
fst
call
adc
mov
pushf
jo
jne
pop
sub
mov
mov
pop
cmp
push
dec
jmp
pop
or
gs
stc
push
in
pop
das
inc
push
and
jno
jnp
pop
idivl
icebp
mov
xor
clc
xchg
imul
jo
push
mov
imul
add
das
cld
add
ret
stc
loope
xchg
pop
sub
push
inc
xlat
jecxz
lods
je
push
insl
xrelease
sbb
xor
dec
mov
rcl
mov
cli
pop
cmp
sub
arpl
inc
fnsave
xchg
nop
or
mov
jno
pop
subl
mov
cmp
ficoms
ljmp
lret
mov
outsl
lahf
mov
push
jb
cmp
pusha
dec
cmp
ret
or
cmp
int3
pop
enter
lret
fucom
sbb
jo
std
pop
lods
cmp
movsb
popf
in
icebp
sbb
xlat
sbb
repnz
fists
insl
jl
cmc
mov
testb
xor
mov
in
dec
aas
ja
sub
js
jg
hlt
cmovo
dec
je
jne
pop
inc
pop
rcl
sahf
xor
fistl
fldt
push
inc
popf
pop
push
and
stos
and
push
mov
pop
jbe
xchg
mov
divl
mov
hlt
mov
push
call
int
pop
add
cwtl
je
ss
int3
mov
adc
jmp
dec
ds
imull
xor
mov
mov
je
imul
inc
jne
jge
mov
add
jl
pop
aas
std
clc
cmp
and
enter
dec
mov
in
xlat
fcomps
pop
imulb
jns
xlat
faddl
mov
jl
ss
ljmp
jmp
popf
jg
pushf
sarb
dec
shll
add
scas
pop
sar
adc
sbb
adc
or
and
sub
dec
jl
sub
in
and
pop
xlat
fstl
dec
pushf
ror
addb
jmp
lods
inc
mov
bound
push
add
mov
mov
pop
mov
mov
sub
enter
aaa
shlb
ret
xchg
shlb
xlat
ret
add
mov
inc
dec
xchg
xor
movsl
mov
xorb
pop
xchg
js
pop
inc
add
add
repnz
jo
xchg
and
or
xchg
push
pusha
xor
add
xchg
cmp
cmp
rcrb
cmp
cmp
call
mov
stos
mov
insb
rcrl
dec
mov
xlat
xchg
push
cmp
mov
pop
in
test
in
lods
adc
hlt
inc
sub
sbb
dec
int3
cwtl
dec
cli
xor
mov
or
jns
test
cld
sbb
dec
mov
lds
inc
cwtl
add
stos
addb
add
stos
insl
sub
pop
lds
jae
aaa
stos
int3
jle
into
dec
out
loope
subl
dec
pop
adc
or
shlb
add
xorb
jnp
pop
jne
or
sub
arpl
movsb
cli
rcll
mov
aad
pop
lock
rcl
jae
xchg
ret
stos
jns
jl
xchg
test
imul
mov
call
jae
push
cmp
push
lret
sub
push
sbb
arpl
call
in
adc
mov
in
cmpsl
mov
pop
mov
lods
mov
xchg
jnp
mov
mov
add
mov
jns
xor
pop
or
hlt
rcl
dec
stos
pop
lods
push
inc
jnp
hlt
pop
out
rorl
push
stos
xchg
fwait
jae
cmp
lods
mov
mov
call
add
sbb
sub
add
pop
lods
mov
dec
adc
push
subl
mov
jl
js
cmp
std
mov
icebp
cli
cli
not
mov
call
out
xor
sub
daa
xchg
or
or
repnz
pop
popf
imul
in
mov
in
popf
or
jmp
fs
cwtl
jbe
push
or
push
adc
inc
adc
fnsave
adc
mov
dec
nopl
fldt
imul
addr16
cmp
inc
out
dec
inc
jp
data16
icebp
mov
shll
pop
push
or
add
jg
pop
push
movsl
push
push
push
cmp
mov
lea
lcall
test
daa
mov
mov
sub
movsb
movsl
cmp
jne
cmp
xor
repz
pop
xorb
bound
mov
xchg
xchg
xchg
pop
pushf
je
xchg
push
mov
jne
cwtl
out
xchg
in
push
gs
repnz
out
inc
inc
pop
bound
in
pop
nop
clc
insb
jne
cmp
insb
gs
enter
push
add
lret
mov
xor
and
aad
shll
push
pop
fsubrl
aaa
mov
jne
inc
lret
mov
mov
test
loope
xor
dec
out
add
rcrb
hlt
and
mov
int
pop
out
mov
lcall
ss
cmp
add
dec
outsb
out
pop
fistpll
mov
push
ffreep
dec
jae
or
fwait
lods
andl
cmp
adcb
sti
fidivrs
mov
sarl
sub
mov
arpl
lret
aam
popf
ss
pop
or
stc
mov
mov
mov
push
sbb
loope
mov
mov
sub
sbb
rcrl
adc
mov
jle
sahf
jne
test
aaa
rsqrtps
xor
or
xor
mov
push
and
fdivl
pusha
lcall
outsl
xchg
xchg
lret
mov
mov
adc
cmpb
sti
test
scas
movsl
mov
das
call
jle
or
push
cli
int3
imul
add
stc
into
pop
xchg
imul
aaa
cmp
inc
rorl
loopne
dec
xchg
cmp
fisttps
aaa
sub
enter
lods
pop
loopne
xor
mov
leave
es
outsb
in
call
iret
jecxz
inc
dec
add
mov
mov
adc
pop
or
sub
dec
sub
les
adc
and
stos
into
fnsave
cmp
pop
fneni(8087
out
jecxz
cmp
insl
les
jbe
jmp
bound
or
ds
sub
shr
cmp
cwtl
cs
mov
repz
push
popa
adc
into
push
cmp
push
movsl
repz
or
mov
mov
inc
push
mov
sbb
fcoms
cld
jno
push
mov
jbe
int
xchg
mov
jne
sbb
aas
outsl
popa
fldt
ds
ret
adc
js
std
enter
aad
mov
rcrl
aaa
push
mov
and
movsl
push
gs
sub
inc
push
sti
dec
push
into
jg
or
imul
mulb
or
or
imul
pushf
pop
jbe
scas
jno
pop
push
mov
pop
jl
cld
add
xor
cli
ja
push
stos
xor
jp
enter
ja
popf
movsl
push
mov
daa
scas
incb
push
hlt
shr
sbb
inc
sti
mov
daa
push
mov
data16
hlt
addb
out
lea
lret
rcl
lods
outsl
loop
sbb
out
in
push
ret
scas
adc
xor
in
push
loopne
cmpsb
xchg
pop
pop
leave
cs
adc
sub
or
inc
lds
xchg
xchg
xchg
dec
xchg
or
mov
add
mov
dec
pusha
push
xor
push
scas
nop
in
mov
sbb
aad
xchg
mov
shlb
xchg
cs
mov
mov
push
cmp
or
push
cmp
das
scas
test
mov
gs
inc
jmp
jp
pop
ficomps
std
cli
pop
mov
adc
dec
dec
fildll
out
xor
enter
fcomp
leave
mov
cltd
pop
outsl
adc
xchg
aam
jmp
jns
imul
push
jmp
cld
add
mov
lret
xor
adcb
pop
dec
and
xor
call
dec
inc
adc
in
aad
mov
repnz
dec
xor
adc
shrl
repnz
cmp
mov
out
lret
inc
ss
cltd
xor
push
sbb
sbb
push
lds
out
shll
leave
xor
push
or
and
mov
pop
frstor
add
jne
push
enter
mov
loope
xchg
cltd
push
imul
daa
cltd
ret
push
adc
mov
mov
lods
ficoms
pop
cld
rcll
mov
arpl
jno
cs
aas
cmc
push
push
dec
movd
inc
test
push
inc
incl
std
pop
xor
adc
ljmp
jbe
outsl
push
int3
mov
add
sti
das
or
cmp
add
inc
mov
push
jmp
rcrb
push
dec
mov
cmp
ljmp
xorb
sbb
adc
pop
subb
jo
sbb
push
jns
xchg
push
push
push
movsl
clc
sbb
out
cmp
fistps
jno
rcl
push
pop
add
cs
pop
inc
dec
mov
add
movswl
cmpsl
sub
mov
out
pusha
jno
pushf
scas
adc
mov
aam
mov
mov
data16
adc
popf
cld
sti
dec
loopne
outsl
mov
lds
jl
pusha
call
xchg
aas
xchg
out
dec
dec
sub
mov
dec
or
and
addl
scas
and
in
call
sub
mov
sub
xor
mov
ret
sbb
aad
test
ds
jno
shlb
pushf
mov
adc
adc
add
sbb
sbbl
push
push
test
leave
dec
xor
push
scas
ret
or
inc
cwtl
inc
mov
in
dec
mov
popf
add
xor
adc
push
arpl
xchg
ljmp
stos
je
test
push
cmp
adc
sbbl
jb
out
mov
scas
pop
cmp
pop
jbe
pop
ds
in
test
scas
xor
enter
pop
repz
sub
adc
adc
arpl
adc
push
dec
or
cmp
in
pop
jecxz
lcall
inc
xchg
push
out
lods
test
push
sbb
xchg
imul
and
insb
mov
xor
push
adc
lods
mov
loop
mov
jns
fstpt
xchg
and
sub
or
push
push
lods
aam
addl
and
aad
lea
xchg
stos
cs
pop
mov
pop
sbb
sub
or
js
adc
test
jnp
cmp
xchg
adc
fsubr
jmp
pop
repz
xchg
out
add
pushf
sbb
dec
sub
cwtl
xchg
notb
xor
loopne
aas
pop
mov
cld
jmp
xor
aaa
cltd
cmp
imul
js
stos
sti
outsl
mov
in
aaa
movl
inc
add
xlat
push
cmp
dec
fdiv
inc
jg
inc
xchg
sub
pop
test
sbb
hlt
xchg
xchg
scas
adc
mov
dec
ja
sub
and
dec
mov
bound
xchg
inc
aas
pop
cmp
in
jmp
sarb
out
repnz
nop
cli
mov
test
push
adc
and
jo
icebp
jge
outsb
mov
push
sbb
pop
bnd
loope
iret
xchg
in
jno
dec
jb
in
fcmovne
outsl
and
ds
mov
mov
pushf
sub
pop
testb
call
mov
jmp
xchg
inc
adc
mov
xor
xchg
cmp
shlb
dec
ja
aam
lods
outsl
jmp
mov
out
adc
pop
cld
fwait
mov
icebp
xor
addb
mov
mov
fistpll
cmp
mov
xchg
dec
scas
pop
hlt
xchg
add
pop
stc
push
dec
scas
sete
dec
push
inc
test
push
hlt
xchg
fistps
shrb
xorl
pop
and
in
add
mov
divb
loope
out
stc
arpl
into
mov
ret
xor
addb
adc
les
push
in
dec
and
or
xor
and
xor
adc
mov
jmp
cmpl
js
shr
xor
jecxz
sarl
out
test
clc
cmp
in
dec
pusha
test
pop
inc
sbb
adc
inc
jno
cli
and
sub
pop
xlat
shrb
pop
sbb
push
xchg
push
fstpl
ficoml
jb
jp
in
pop
cmp
jb
pop
add
lock
mov
inc
add
ljmp
setle
or
dec
or
add
pop
sahf
adc
inc
hlt
inc
jmp
iret
add
cmp
pop
cmp
dec
outsl
xchg
lock
mov
jecxz
shlb
xchg
aaa
pushf
cmp
das
lds
xor
sbb
and
sti
popf
sbb
push
imul
and
push
or
cmp
mov
push
scas
mov
push
fistl
jle
clc
movsl
ret
hlt
cwtl
and
sahf
push
and
mov
mov
adc
icebp
loop
pop
imul
sub
idivb
dec
std
push
push
das
inc
lea
cs
insl
test
sti
mov
jno
mov
outsl
rcll
dec
push
sar
out
addr16
sbb
xchg
dec
or
cmp
pop
xchg
dec
inc
js
insl
insl
jns
inc
in
push
fnstsw
or
cmp
loopne
xchg
sub
fadds
pushl
test
sbb
jl
or
mov
mov
xlat
fadd
jns
jb
sti
jmp
mov
les
cmp
mov
cmc
push
pause
test
ds
lods
dec
mov
pop
rcr
mov
movb
lods
mov
lods
cmp
and
sbb
jne
xor
addr16
sahf
ret
lcall
aad
or
bound
cmpsl
aad
aad
loop
notl
jecxz
shrl
dec
repnz
sub
xchg
mov
sahf
sub
mov
cmpsl
jns
xchg
nop
or
arpl
and
cwtl
mov
push
push
call
fistpl
mov
test
or
sub
sti
xor
lret
or
addb
mov
movl
push
push
or
test
mov
push
inc
and
subl
push
mov
mov
mov
mov
inc
or
xchg
mov
mov
push
imul
jl
mov
xor
sbb
xchg
gs
bound
push
xchg
and
xchg
test
push
adc
jmp
inc
mov
leave
add
adc
inc
jns
test
xchg
sar
data16
mov
push
loop
adc
bswap
das
fwait
jb
cli
mov
or
push
dec
push
xor
mov
mov
js
pop
push
push
pop
js
push
mov
add
dec
repz
add
js
mov
shll
sub
xchg
mov
out
mov
jp
fnstcw
adc
popa
out
lods
fwait
pushf
je
xchg
and
stos
lahf
mov
pop
fstl
lcall
dec
push
push
into
push
sti
repz
and
dec
imul
rdmsr
xchg
lea
daa
xchg
in
xchg
lea
repnz
cmp
pop
outsb
je
xor
adc
enter
and
xor
push
fisttpl
pop
pusha
and
add
imul
pop
sbb
cmp
notb
in
test
adc
adc
mov
lret
push
repnz
out
stc
add
xchg
in
cmp
jns
js
jg
mov
shrb
test
adc
in
cld
out
dec
adc
dec
subb
cs
or
mov
sub
xchg
adc
dec
add
sbb
lods
add
out
in
cmpsb
shrb
mov
in
leave
hlt
test
jae
and
repnz
shrl
mov
jae
xchg
hlt
mov
adc
jmp
adc
push
xor
push
cmp
jmp
fcmovbe
pop
sbb
mov
pushf
ret
mov
xor
enter
test
cs
adc
or
js
xlat
inc
out
cmp
enter
push
xor
or
hlt
add
jb
mov
loope
loop
or
call
cmp
std
mov
push
xor
sub
leave
sbb
jl
imul
test
enter
inc
sbb
out
xor
mov
int
ljmp
lea
sub
lock
dec
fcmovne
push
pop
stc
ja
lods
mov
sbb
jl
shrb
xchg
jp
and
inc
aam
cmp
inc
mov
mov
subl
icebp
insl
xchg
test
in
xor
shll
ret
in
pop
sbb
pushf
dec
cmpb
sub
sbb
cs
imul
jmp
inc
rolb
mov
inc
mulb
popf
push
dec
loopne
sub
or
and
mov
cmp
out
testl
inc
daa
cmpsl
lret
movsb
rcrb
scas
lock
xor
xlat
scas
and
ds
fs
sbbl
ret
or
and
lods
xlat
clc
push
lods
dec
outsl
cmovns
mov
aam
add
mov
pop
pop
popf
fsubrs
test
cmp
int3
xchg
adc
mov
or
rolb
sub
sbb
nop
jp
out
orb
out
popa
dec
sbb
addr16
and
lret
sarl
xchg
pop
mov
mov
cmpsl
and
add
jle
dec
stc
mov
pop
fadds
or
xor
aam
adc
and
xor
test
push
fwait
jns
ss
xchg
mov
stc
test
mov
mov
pop
sub
mov
shl
loope
sarb
insl
imul
gs
xlat
cs
sub
rolb
sub
sub
push
insl
mov
cmp
mov
idivb
pop
imul
sub
jmp
js
xlat
dec
adc
test
sbb
mov
ja
dec
xchg
push
popf
sub
mov
shlb
xor
or
sub
sbb
mov
inc
mov
inc
in
les
xor
push
mov
aas
sub
cmp
rcrl
aaa
fidivl
push
mov
xchg
test
push
xchg
xlat
lcall
and
lods
cltd
adcb
sbb
inc
dec
mov
icebp
jae
mov
aaa
movb
sub
push
and
popa
xchg
jge
push
aas
sbb
fcomp
inc
mov
mov
pop
loopne
sti
dec
shr
and
iret
inc
and
inc
mov
mov
push
cmp
shrl
pop
iret
mov
xchg
xchg
dec
push
in
xchg
adc
mov
dec
push
xchg
je
clc
testb
ret
sub
jl
sub
dec
sub
jns
dec
aam
cmp
pop
adc
lds
mov
inc
lret
cmp
imul
dec
or
fnstcw
xchg
sbb
pusha
incb
cmp
pop
popa
lock
jno
sahf
lock
xchg
push
inc
sub
ss
arpl
mov
ds
call
rorl
ss
and
test
and
sub
shrb
pop
adc
mov
adc
and
mov
mov
bound
cs
mov
pop
rolb
xchg
push
call
cmp
cmp
icebp
outsb
xchg
pop
int3
sbb
xchg
popa
insb
in
mov
rep
and
dec
notl
cpuid
dec
cmp
dec
xor
imul
sbb
cmp
xor
fisttpl
adc
addb
mov
jns
push
das
mov
mov
gs
test
daa
mov
in
add
xchg
test
jne
push
adc
adc
pop
xor
jo
fisttpll
xor
lret
pop
iret
mov
push
int3
rcll
cwtl
daa
inc
mov
mov
lds
pop
push
pop
rclb
fmuls
add
insl
push
inc
pop
sbb
adc
mov
jmp
xor
mov
xchg
insb
mov
sbb
adc
leave
imul
ljmp
dec
fcompl
decl
pop
mov
gs
icebp
jne
or
idivb
xor
mov
inc
nop
lcall
sub
or
das
insl
mov
sbbl
add
xor
sbb
cmp
cmp
mov
push
or
xor
mov
fldt
mov
data16
adc
mov
xchg
popa
mov
sub
or
add
push
sbb
div
mov
sub
sub
and
cmp
dec
rcl
stos
push
cmp
adc
ja
ljmp
pop
mov
inc
cmp
mov
mov
dec
fs
call
dec
shlb
pop
xchg
inc
test
xor
pop
sbb
adc
rcrl
mov
mov
call
push
mov
sub
pop
push
aas
bound
push
mov
movsb
incb
pop
ds
adc
aaa
das
inc
gs
imul
lock
mov
xchg
sbb
and
stos
push
rcll
in
sub
jbe
mov
mov
movsb
xlat
stos
outsb
iret
sbb
daa
dec
push
sub
sub
or
sub
int3
inc
jo
je
lret
mov
xor
mov
cmpsb
lods
dec
mov
fwait
or
mov
pop
and
fdivr
jp
stos
icebp
push
in
xor
adc
in
xchg
mov
dec
leave
insl
add
jecxz
xlat
xor
cmpsl
lahf
cmpsb
into
subb
out
inc
test
mov
stos
lret
inc
insl
jg
sub
stc
mov
cwtl
push
fwait
and
xor
fcmovnu
and
ljmp
dec
mov
mov
cmp
clts
mov
sub
inc
shl
sbb
addr16
jno
mov
dec
das
mov
adc
test
xchg
add
jbe
repnz
or
cld
pop
mov
add
stc
mov
xor
cs
xor
cmp
add
push
test
jl
add
mov
in
cld
aaa
daa
push
xor
testb
out
dec
or
sub
pinsrw
xor
xchg
sbb
adc
mov
insl
popa
cmc
lret
jnp
xchg
fcompl
dec
pop
cmpsb
insl
xchg
mov
dec
ja
jecxz
leave
aas
cwtl
cmpl
lahf
btr
or
adc
mov
fwait
adc
dec
mov
gs
pop
pushf
pop
push
ds
add
cwtl
lds
mov
mov
mov
clc
loope
flds
dec
pop
xor
mov
sti
mov
jb
es
xor
mov
or
test
dec
pop
mov
cmp
cld
leave
inc
and
pushf
add
retw
cs
jg
cwtl
scas
pop
cmc
aam
lahf
xor
push
pushf
jo
cmp
cmp
jo
loopne
bound
inc
inc
or
test
arpl
inc
pop
jno
dec
jbe
jp
mov
adc
fucompp
in
pop
cmp
test
rclb
push
dec
out
bnd
outsl
sub
xchg
cmp
xor
and
fiadds
inc
loope
jl
mov
jle
fs
or
aam
js
outsb
fwait
jle
addr16
jle
mov
loopne
push
fnstenv
popa
sbbl
pop
mov
mov
std
add
sub
jle
and
push
sbb
rolb
scas
or
sub
xor
out
iret
ret
sbb
adcl
jle
test
push
mov
sub
pusha
fsub
mov
icebp
mov
mov
into
arpl
xchg
hlt
out
cltd
jle
rcll
push
arpl
push
sub
fcoms
les
pop
insb
out
mull
pop
xchg
sub
rolb
inc
xchg
sbbb
inc
or
push
pop
repnz
adc
in
mov
pop
and
pop
xor
push
mov
ficoms
push
push
ljmp
insb
xor
shrl
fnsave
lods
mov
sub
cmp
pop
dec
xchg
dec
mov
cmp
jno
fstl
jbe
sub
mov
mov
push
hlt
mov
xorl
aam
fs
cltd
mov
xchg
mov
hlt
fisttps
xchg
mov
sbb
or
stos
shrl
gs
stos
push
aas
and
data16
and
jmp
popa
iret
jne
adc
lcall
imul
shlb
push
mov
cmpsl
cmp
pusha
fwait
mov
les
mov
pop
dec
or
movsl
outsl
jg
rcl
inc
subl
push
mov
stc
jnp
lahf
push
fdivl
mov
jbe
test
jbe
sti
imul
or
negb
and
stc
push
mov
pop
lods
dec
mov
sbb
cwtl
cmp
fwait
mov
add
inc
mov
dec
jbe
dec
orl
mov
push
push
jp
test
es
movsl
mov
add
ljmp
popf
das
xor
lea
adc
push
in
sbb
push
dec
and
call
daa
stos
lock
mov
test
dec
xchg
arpl
push
jl
jbe
push
jp
aas
push
pop
pop
sbb
or
mov
shrl
dec
stc
icebp
outsl
mov
addr16
addl
pop
clc
lret
xchg
adc
fiaddl
lret
dec
or
pushf
ljmp
call
mov
clc
push
add
cmpsl
arpl
push
outsl
cmpsl
daa
jge
insl
je
stc
jge
jb
sbb
ss
lods
sub
jo
lods
mov
mov
sahf
rcll
or
jmp
inc
adc
bound
aaa
push
push
into
and
cmp
pop
nop
or
and
sbb
xchg
cld
jmp
jne
cmp
insb
xchg
pop
stos
dec
and
aaa
dec
jns
jno
ljmp
aaa
push
xchg
mov
das
cltd
in
xor
dec
cmp
and
cmp
aad
adc
jae
int
sti
adc
aad
movsl
mov
mov
mov
pop
add
jmp
aas
or
xchg
jmp
ret
ret
daa
inc
push
mov
outsb
data16
femms
inc
loop
std
dec
push
mov
mov
je
xor
dec
inc
or
pop
sbb
adc
inc
push
xchg
std
pop
mov
inc
xchg
or
add
push
popa
fwait
pop
mov
fcmovb
mov
mov
cmpb
mov
addb
int
test
xchg
mov
jmp
lahf
imul
add
ret
and
pop
jecxz
mov
push
cmpsb
adc
push
shll
popf
sbb
inc
xchg
cs
mov
not
adc
fldl
inc
out
notl
aaa
cmp
adc
mov
mov
into
test
xor
scas
dec
inc
sbb
sbb
xor
push
lods
scas
test
popl
jmp
xchg
insl
ja
hlt
sahf
std
insb
pop
mov
or
jo
cs
xchg
xchg
aam
popf
fstpl
push
leave
fists
stos
dec
pop
cmp
push
jo
mov
repnz
mov
fs
pop
mov
inc
icebp
push
mov
jo
fistps
dec
cli
lea
and
test
mov
xchg
add
mov
sub
loope
shlb
popa
xor
fisubrs
mov
stc
xlat
ds
aas
sbb
inc
xchg
pushf
aad
fiaddl
pop
out
push
sub
lret
mov
adc
cmc
pop
fdivr
imul
mulb
sub
adc
hlt
enter
sti
out
xor
jle
push
pop
ja
repnz
and
cltd
push
dec
nop
push
push
push
sahf
xlat
lock
mov
jle
idivl
stos
sub
xchg
fstl
xchg
sub
mov
xchg
add
cmp
sbb
lods
repz
popf
pop
cmp
aas
dec
push
xchg
pop
in
push
ficompl
jns
frstor
ljmp
mov
and
popa
pushf
push
and
adc
push
sti
pop
inc
ja
add
hlt
dec
icebp
movsl
sarb
cwtl
sbb
push
into
bnd
adc
roll
popa
ljmp
rolb
shll
std
in
dec
int
dec
int
inc
cwtl
rorl
dec
mov
adc
fmuls
xchg
bound
and
enter
icebp
pop
psrad
inc
ljmp
dec
pop
ds
aad
mov
inc
jbe
lock
loop
sbb
orb
xchg
fmuls
xor
push
insl
push
xchg
add
out
jp
lods
std
add
fldl
inc
jne
xchg
iret
cmpsb
enter
aaa
cs
jns
cmp
and
in
out
mov
data16
fsts
or
test
sti
insl
daa
fistpll
les
sbbl
or
dec
orps
add
ret
pop
iret
mov
int
xor
or
cmp
push
popa
inc
aam
or
sub
jae
fldenv
push
pusha
xor
sti
cld
jns
cmc
xor
push
fisttps
shll
inc
hlt
and
lret
and
and
jmp
sahf
paddsb
adc
push
test
mov
sub
rcrl
int
xor
lahf
push
and
clc
jecxz
sub
mov
insl
jbe
js
mov
dec
imul
lock
add
nop
pop
sub
mov
dec
ds
repnz
ljmp
push
add
ffree
arpl
icebp
lcall
lods
stc
cwtl
sub
adc
sbb
pop
pop
cltd
das
and
lock
adc
cmp
jle
dec
in
sbb
lahf
cmp
sub
int3
lcall
cmp
push
call
js
cmpsb
loope
sahf
pop
push
and
and
pop
rcll
jns
cmp
xchg
lret
scas
mov
daa
pop
cmovs
subl
imul
cmp
cmp
push
dec
imul
xchg
je
sub
lret
xchg
loope
loop
imul
add
arpl
push
xchg
lret
add
mov
repz
add
test
subl
xor
insl
fiaddl
mov
imul
xorb
js
cltd
fst
test
shll
loop
into
add
mov
xor
mov
loopne
pop
adc
inc
cmp
xchg
and
in
or
sbb
movsl
mov
add
cmpl
loop
fimull
xlat
ss
or
adc
test
add
dec
pop
jmp
adc
xor
int3
gs
dec
adc
cmp
test
dec
out
popf
xorl
call
ljmp
mov
ss
lcall
xchg
adc
lods
jnp
lcall
dec
imul
adc
xchg
mov
lea
dec
pusha
dec
xor
adc
dec
nop
jmp
call
jge
orb
xchg
mov
sbb
jl
pusha
sbb
scas
push
jb
aaa
add
repz
push
mov
xor
xchg
push
fcompl
subl
adc
cmp
inc
std
and
aas
cwtl
gs
js
and
jecxz
add
inc
lcall
idivl
out
jnp
rcll
xor
cmp
mov
loopne
mov
sahf
pop
lahf
pop
es
jecxz
inc
iret
jg
aam
adc
xor
cmpsb
lds
jge
inc
jmp
stos
add
xor
mov
jb
jns
loopne
xchg
xchg
xlat
pushf
aad
pop
mov
mov
add
dec
sub
cmpsb
filds
divl
stos
fdivrs
js
pop
cltd
add
sbb
leave
ss
mov
nop
and
dec
xchg
sbb
dec
pop
add
xchg
ret
push
mov
mov
sub
das
loop
addr16
loope
lock
xor
lretw
mov
or
or
jg
call
inc
mov
mov
add
flds
aam
push
adc
sbb
shlb
movsl
rclb
mov
xor
jmp
mov
xor
adc
fsts
mov
das
inc
pop
push
or
cli
jbe
pop
in
lods
dec
xchg
jecxz
or
cmc
mov
sub
or
mov
mov
std
inc
sbb
dec
push
jns
enter
mov
cmp
jg
icebp
psrlw
clc
int
jb
dec
sti
mov
cmp
scas
out
or
sub
popa
iret
sarb
push
shrb
daa
jp
into
jae
ljmp
inc
or
cmp
cmp
fisubl
call
mov
fcoms
cmp
into
cmp
cmp
dec
xlat
mov
adc
ret
roll
pop
and
popa
stc
fists
pushf
pop
out
mov
fs
jl
mov
data16
cmp
mov
adc
or
stos
jge
test
nop
cld
or
mov
repnz
repz
adc
iret
add
and
and
iret
outsl
jns
pushf
mov
xchg
cmc
shrb
add
movsl
outsb
cmp
xor
mov
cmp
cli
lods
jge
pop
pop
sub
jae
insb
pop
jno
cmp
stos
push
cmpsl
in
add
fisttpl
cs
ja,pn
jne
push
push
or
cmp
sub
out
jnp
inc
shr
popf
icebp
fwait
in
and
popf
cltd
jmp
clc
mov
incb
xchg
leave
adc
dec
bound
push
rcll
cwtl
icebp
and
xor
out
cwtl
test
in
push
cltd
js
mov
push
bound
test
mov
mov
xchg
mov
stos
data16
and
and
jl
insb
xchg
sub
mov
xchg
xchg
outsl
sub
int3
push
scas
ss
jle
xchg
jnp
mov
or
test
pop
negl
sub
imul
stc
add
mov
test
add
sub
xchg
pop
mov
roll
cwtl
inc
pop
sbb
xchg
stc
sar
mov
cmc
shrb
pop
inc
dec
or
stos
jge
test
mov
shll
out
es
aam
call
int
data16
cli
sub
fidivl
jns
repnz
push
test
iret
insb
xor
cmpsl
jae
adc
dec
lods
inc
sbb
test
pop
mov
or
sti
jae
pop
scas
ljmp
lods
pusha
pop
pop
cmp
clc
pop
shlb
xor
sbb
int3
sti
mov
pusha
push
test
ljmp
mov
shll
inc
ds
mov
sbb
push
mov
imul
adc
xlat
shlb
push
mov
repz
jb
jl
cs
fisttpl
stos
cmp
add
jle
fadds
mov
jmp
mov
push
cmc
jno
or
push
in
push
cmp
and
mov
jp
into
or
sbb
cs
and
idivb
pop
inc
jne
xor
adc
push
sbb
insb
mov
neg
sti
mov
and
and
pushf
sbb
xor
xor
fiadds
ljmp
sbb
sarl
fldt
push
out
sub
push
fs
dec
lea
nop
sub
stos
sub
push
jnp
andl
push
test
lods
add
xor
shlb
and
mov
psraw
fisubrl
xchg
xchg
nop
leave
or
add
insb
ds
hlt
mov
mov
mov
push
push
lret
push
dec
nop
loopne
xor
dec
sub
cmp
jb
dec
jno
arpl
mov
incl
adcl
dec
mov
xchg
loopne
sub
push
cwtl
into
jb
sub
mov
and
and
testb
pop
and
mov
add
popa
cmp
pushf
scas
movntq
es
scas
sbb
test
divl
addr16
xchg
pop
and
int
flds
mov
pop
ret
cltd
cmc
fcomps
xorl
lcall
cmp
pop
pushf
out
ror
jmp
sbb
fwait
and
inc
mov
imul
dec
xor
cmpsl
or
ljmp
xchg
les
lret
mov
cmpsl
jno
imull
inc
pop
ret
or
lds
aas
push
mov
mov
sub
jne
jp
mov
es
jle
xchg
adc
fsubl
idivb
mov
rcll
push
loope
sub
adc
iret
mov
shlb
cmp
jns
mov
das
fistpl
aad
loopne
orl
or
jge
pop
jns
repz
mov
add
mov
mov
mov
mov
int3
int3
std
dec
cmp
sub
and
mov
sub
sbb
mov
insl
dec
push
push
in
aas
push
xchg
sbb
outsl
pop
mov
fnstcw
out
popa
nop
loope
mulb
adc
jo
je
xchg
pushf
repnz
push
das
dec
adc
sbb
dec
out
cmc
cmp
loop
push
xchg
stos
mov
dec
adcl
call
sbb
cltd
sub
ret
leave
loop
pusha
arpl
je
mov
or
mov
push
mov
imul
dec
xchg
jmp
sub
test
xor
dec
xor
gs
int
repnz
pop
ret
out
pop
adc
dec
cmp
repz
in
add
outsb
rcll
adcl
xchg
mov
adc
iret
out
loopne
adc
xchg
xlat
mov
imulb
shrb
pop
sub
and
dec
aad
fsubrl
sbb
fcoms
add
mov
daa
rcrl
lea
mov
lds
inc
pop
or
out
adc
mov
mov
and
shrb
test
mov
dec
cmp
int
adc
or
clc
mov
dec
pushf
mov
cltd
ljmp
pop
mov
inc
call
imul
pop
cmp
cmpsb
and
and
mov
int
sub
fdivrl
std
outsb
es
push
inc
ret
sbbl
es
dec
stos
mov
xor
add
fidivrl
fnsave
mov
cmp
cwtl
dec
xor
repz
clc
fs
mov
in
stos
ds
pop
int3
lods
mov
rcl
cmc
imul
jae
jg
push
mov
aad
popf
or
dec
lret
jb
mov
sbb
xchg
mov
or
xchg
cltd
inc
ror
popa
mov
pop
sbb
mov
pop
mov
stos
jns
nop
orb
xchg
cmp
cmp
inc
fstps
sbb
in
adc
add
sub
mov
iret
xchg
into
xor
mov
mov
jg
movsl
mov
mov
sub
mov
xchg
adc
xor
sub
and
sub
jle
mov
mov
outsb
insl
xor
aaa
adc
inc
fwait
or
and
push
xchg
lret
call
push
dec
mov
ret
lcall
mov
add
call
jbe
lods
cli
movsl
iret
lcall
xor
repnz
mov
xchg
filds
icebp
inc
sahf
sbb
icebp
je
sahf
dec
out
mov
out
sub
jp
jns
sub
dec
xor
cld
cmpsl
bound
imul
out
ret
mov
subb
mov
sub
fs
aad
test
pop
add
sti
ljmp
aad
xlat
push
pop
pop
lcall
xchg
inc
and
aas
popf
loopne
pusha
scas
cmp
je
shll
cli
adc
rolb
iret
arpl
mov
cmp
int
rcrb
dec
rcrb
stos
aam
jb,pn
imul
mov
stc
adc
test
rolb
inc
rcrl
addl
mov
or
out
mov
pop
sbb
pop
jge
sub
negl
pop
enter
push
int3
imul
out
jecxz
inc
inc
std
push
mov
sahf
push
mov
cmp
cld
cmp
jb
mov
in
jle
dec
mov
mov
push
inc
add
sahf
lahf
aam
pop
out
push
out
lahf
mov
dec
test
mov
fimull
outsb
iret
sub
outsb
push
cmpsb
ds
or
jle
inc
push
jecxz
fs
movsl
jb
lds
repz
push
push
cmp
in
xchg
jne
ficompl
xor
and
scas
fnstsw
jne
jns
mov
dec
push
jge
jecxz
in
and
aas
inc
xor
jge
jge
push
popf
xchg
adc
and
xchg
pop
rcr
add
sbb
ss
popf
push
adcl
cmp
inc
outsl
pop
xor
outsb
pop
sbb
and
out
inc
ds
mov
mov
imul
jo
test
ror
xchg
dec
jae
rcr
push
call
jno
bound
mov
outsb
lahf
jmp
jecxz
sti
xor
mov
push
cmp
out
inc
adc
and
inc
enter
popa
inc
das
and
xchg
shlb
mov
bound
pop
jg
jmp
imul
add
lret
sbb
xchg
sbb
sti
pop
dec
scas
shl
xlat
roll
dec
ljmp
sub
push
adc
stc
mov
cmp
xchg
mov
jg
aam
aad
roll
mov
in
in
xchg
ss
in
pop
lods
pusha
mov
cmp
sbb
sti
push
ret
push
sti
add
inc
jle
dec
ja
sbb
out
cwtl
push
in
in
std
cmpsb
sbb
mov
mov
lcall
popf
sub
cli
popl
lahf
jno
rclb
xchg
pop
adc
pop
cmpsl
push
sbb
mov
lods
sbb
cmc
mov
pusha
push
jg
dec
dec
cmpsb
pop
add
lock
fs
insb
popa
cmp
notb
adc
inc
push
int3
dec
jecxz
add
bound
xor
dec
xchg
loop
cmp
xchg
out
out
inc
add
push
aam
ret
mov
mov
push
adc
shl
xchg
psrld
je
movsb
push
jae
out
popf
lret
insl
mov
dec
jge
jl
faddp
rclb
jge
adc
movq
pop
add
sbb
in
ds
jp
pop
jae
mov
push
xor
jo
insb
cmc
loop
cwtl
xor
and
lock
push
and
add
mov
out
idiv
negb
daa
and
push
sub
shlb
icebp
lret
mov
daa
push
sbb
inc
pop
scas
movsl
mov
mov
jge
adc
mov
in
pusha
gs
cmp
push
dec
std
lods
ror
dec
xchg
out
cmpsl
lea
fildl
xor
notl
test
out
jo
mov
push
jo
push
jecxz
push
sub
mov
jge
rcl
mov
loopne
call
das
dec
or
push
rolb
jne
in
les
jne
arpl
mov
lahf
cmp
in
fiadds
frstor
into
adc
shr
inc
out
cmp
jbe
or
xor
cmp
imul
inc
jns
test
movsb
pop
testl
gs
or
mov
in
ss
nop
jo
xchg
or
pop
insb
rorl
pusha
popa
nop
cmp
xorb
lret
sub
enter
and
jle
pop
and
outsl
outsb
inc
mov
iret
ret
in
jg
lahf
jb
mov
mov
and
aaa
jb
hlt
xchg
gs
dec
xchg
sbb
sub
cmp
and
push
inc
push
mov
and
add
mov
and
lcall
sub
push
jnp
rolb
or
stos
adc
imulb
mov
outsl
mov
and
mov
lds
pop
repnz
cmpsb
cltd
xchg
push
inc
sub
aam
and
xor
xor
inc
mov
add
out
sbb
adc
push
outsl
lret
outsb
call
in
sbb
push
sub
iret
dec
mov
add
loopne
dec
icebp
mov
test
hlt
test
lidtl
and
mov
xchg
pop
mov
mov
mov
mov
adc
push
push
jmp
xchg
inc
dec
movsb
mov
iret
jle
jmp
es
mov
outsl
push
scas
aam
in
sahf
xchg
pop
push
xor
jecxz
mov
arpl
js
lret
pop
rcl
rorl
jns
sti
xor
pop
mov
addr16
jnp
cmc
mov
iret
adc
mov
pop
jae
hlt
push
jne
fcoms
dec
mov
hlt
xchg
inc
cmp
sub
frstor
stos
int
mov
cmp
jo
xchg
mov
and
cmpsb
fldt
inc
repz
int3
cmp
dec
outsb
pop
xor
test
cmc
inc
inc
mov
ljmp
pop
aas
je
mov
inc
or
adc
inc
xor
ficomps
mov
fcmovu
popf
pop
cmp
test
stos
inc
xchg
out
or
iret
test
test
adc
cmp
lds
stos
sti
std
ret
xor
shl
push
cmp
fidivs
mov
jno
scas
jb
xchg
sti
pop
and
adc
jl
cld
outsl
movsb
sub
mov
nop
adc
pop
decl
aad
repnz
ret
call
push
pop
dec
pusha
pop
or
nop
rcll
cli
pop
xchg
call
push
bound
mov
mov
jb
cmpsl
shr
jl
xchg
lea
pusha
ljmp
jae
repz
outsl
je
inc
push
ja
add
sti
xor
xor
out
mov
imul
pop
cli
fstl
and
pop
xor
xor
jo
out
int3
leave
pop
in
cltd
jmp
test
or
and
ja
mov
scas
jnp
push
inc
fdivs
and
xor
sbb
sbb
scas
ret
cmc
mov
gs
in
filds
mov
or
clc
movsl
nop
pop
xor
into
outsl
push
xor
cs
xor
mov
lcall
sbb
lock
out
push
pop
int
cld
data16
mov
push
jl
push
ret
xchg
or
mov
movsl
add
cmpb
clc
inc
sti
das
outsl
idivb
xchg
ss
int
into
or
pop
sarb
sbb
xchg
pop
inc
adc
push
mov
mov
jmp
dec
daa
movsl
mov
enter
dec
repnz
pop
lods
mov
adc
dec
xchg
push
arpl
insb
lods
xchg
js
testl
rcll
dec
xlat
scas
jle
xchg
or
sahf
push
in
test
in
je
outsb
dec
test
dec
dec
sbb
jecxz
sub
lahf
stos
ficoms
push
in
adc
xor
push
mov
mov
rclb
adc
add
dec
xchg
test
xor
dec
fdivr
xchg
cs
in
or
ret
or
cmp
imul
int
lcall
jge
push
add
imul
and
pop
mov
ret
into
sbb
fisubrl
mov
mov
pop
pop
rcrb
imul
fisttpll
ret
lret
fsubs
loop
imul
xchg
push
rorl
pop
flds
movsb
aam
mov
test
lods
in
sub
inc
insl
enter
daa
add
fdivs
sti
pop
insl
das
dec
sbb
push
mov
push
push
mov
xchg
fsubr
movsb
add
clc
int
adc
mov
xor
jo
mov
mov
movsl
add
pop
adcl
jbe
mov
scas
cs
pop
aaa
pop
or
mov
and
jecxz
nop
movsl
hlt
call
pop
jo
cmp
push
cmp
inc
pushl
dec
add
xor
dec
rcr
and
lahf
jmp
xchg
mov
xchg
or
inc
lret
shlb
loop
mov
add
adcl
cmpl
jno
xchg
mov
leave
shlb
sub
push
cmpsb
adc
push
add
and
jle
push
test
into
mov
xchg
lock
adc
adc
imul
mov
mov
shlb
lret
jae
jle
mov
sbb
call
mov
jnp
mov
stc
outsb
xchg
push
outsb
push
jno
or
jl
scas
lock
data16
arpl
mov
into
popa
cmp
movsb
aas
push
mov
into
xchg
cltd
pushf
cmc
mov
arpl
and
lock
xorl
outsb
rolb
jecxz
mov
jno
mov
mov
rcrb
jno
iret
sbb
xchg
push
jg
cs
dec
and
ret
fidivrl
add
xchg
in
arpl
or
cmp
jnp
arpl
pop
bound
mov
mulb
inc
push
xchg
mov
neg
push
cmp
in
mov
push
std
or
cmp
stos
jp
es
mov
flds
and
cmp
sbb
in
xchg
int3
fdivrs
and
pop
pushf
xchg
jle
stos
jns
jg
inc
std
push
std
dec
adc
or
in
fcom
pop
and
lods
xchg
fidivs
bound
inc
sahf
daa
jnp
test
ss
movl
aaa
push
stos
lcall
test
movsl
mov
adcl
jle
pop
stos
jp
or
fwait
bound
mov
and
nop
adc
jnp
movsl
push
push
outsl
aaa
ljmp
pop
scas
mov
outsb
in
popf
mov
and
out
fs
mov
lds
xchg
sub
fiadds
popa
xchg
push
ret
add
xor
add
jne
dec
and
and
mov
push
adc
scas
std
subl
loope
das
mov
xchg
das
and
pop
out
ret
clc
movsl
ret
cmp
and
test
xor
aaa
lock
add
fcompl
xchg
mov
repz
gs
cmp
popf
ret
sub
xor
js
sub
inc
shrl
test
addb
orl
or
jmp
mov
leave
pop
mov
cmp
cld
jmp
icebp
pop
js
or
mov
ret
push
gs
es
cltd
daa
icebp
subb
pop
cmp
leave
xchg
out
pop
fwait
xchg
js
shrb
outsl
lahf
sti
test
sbb
jp
or
inc
push
mov
imul
popa
cmp
int3
notw
stos
adc
outsl
hlt
rorb
jae
jne
stc
or
push
repnz
pop
ret
mov
fcompl
add
push
or
xor
cmp
mov
lods
push
xchg
xchg
add
stos
mov
ds
aam
fidivs
dec
adc
dec
aad
xor
or
stos
dec
xchg
and
repz
and
xor
inc
rcrb
repz
scas
add
test
aam
and
xchg
mov
cli
enter
je
movsb
data16
movsl
pop
test
je
jl
out
push
movsb
lods
xlat
lods
loope
add
xor
into
rcr
adc
add
popf
and
inc
test
testl
sbb
jne
btc
test
enter
loop
mov
fidivl
shlb
xchg
ret
xchg
mov
loope
call
and
in
mov
mov
xlat
push
aaa
lds
das
pop
mov
jns
jmp
leave
push
inc
pop
mov
fdiv
inc
ret
imul
dec
mov
shlb
sbb
mov
adc
or
rol
pop
cmpsl
xchg
dec
hlt
xchg
xchg
mov
cmpsb
js
add
push
dec
movsb
add
xchg
jle
ss
push
call
jb
pop
cmp
clc
mov
test
jmp
pop
cli
jle
ss
hlt
divl
mov
cmc
movsb
xor
cmpsl
inc
inc
cs
lods
mov
push
lea
jl
mov
mov
xchg
int3
jne
and
cwtl
mov
lock
push
pop
jns
loope
xlat
mov
mov
mov
loopne
fiadds
xorl
xchg
cmc
imul
shll
pop
jbe
mov
call
icebp
xchg
rcll
das
pusha
mov
daa
int3
hlt
adc
xor
adc
in
jmp
loop
ja
stos
popf
inc
icebp
mov
sbb
mov
pop
lea
pushf
xor
aas
ret
push
dec
xor
cmp
mov
hlt
rol
push
mov
mov
cltd
data16
xor
test
cmc
inc
cmp
push
and
sub
jmp
inc
in
inc
jae
xchg
repz
pop
xor
fisubl
adc
repnz
cs
add
out
add
or
mov
dec
pop
dec
rol
es
inc
sub
pop
int3
dec
pop
and
int3
daa
ret
mov
repnz
jp
sbb
cmp
jge
cwtl
test
and
adc
push
notb
push
mov
sahf
lock
mov
sub
xor
dec
in
ror
jae
push
int
out
jle
push
pop
xlat
jo
push
push
push
inc
jns
imul
mov
add
and
or
adc
mov
addr16
aas
adc
push
add
lea
fnstcw
adc
call
mov
loop
nop
inc
pop
xor
inc
in
ret
iret
jb
mov
out
dec
adc
js
mov
jg
fcoml
mov
or
inc
in
insb
dec
push
sbb
xchg
sub
mov
dec
inc
pop
int3
imul
lods
inc
jb
scas
push
cltd
pop
inc
les
loope
push
pop
idivb
out
pop
or
std
and
test
gs
pop
pop
sbb
hlt
rcll
jb
cmp
cld
pop
xor
insl
inc
inc
and
xchg
dec
pop
mov
and
xor
push
cmp
mov
sbbb
mov
push
shl
adc
aad
inc
and
or
test
aad
iret
mov
hlt
add
movsb
inc
ds
in
mov
fisubrs
std
cmc
test
aaa
outsb
xor
mov
loop
es
data16
das
loopne
xor
or
ret
rorb
adc
and
xchg
adc
inc
push
enter
cs
push
repz
jbe
add
cltd
mov
jmp
packuswb
movsl
cmp
flds
mul
push
xchg
int3
scas
loop
or
inc
daa
test
mov
or
out
jns
mov
jnp
clc
xchg
lret
clc
js
insb
adcl
lods
test
orps
and
and
ljmp
jmp
xor
shlb
lcall
mov
or
adc
sub
ds
inc
sarl
test
inc
repnz
xchg
lcall
ror
roll
jg
gs
xor
xchg
xor
push
dec
cli
in
ficompl
rcll
mov
mov
mov
dec
in
das
sbb
push
in
fld1
lock
lret
pop
sbb
scas
sub
icebp
push
inc
inc
cmp
mov
push
sub
or
shll
add
xchg
pop
outsl
movsl
mov
pop
test
outsl
loope
fnsave
test
daa
insl
xchg
add
jo
fcmovbe
nop
xor
add
ret
cmp
inc
mov
in
dec
cmp
xchg
mov
lret
rolb
sbb
mov
add
sbb
fdiv
addl
jbe
scas
xchg
jp
sahf
jns
adc
dec
and
mov
cmp
pop
push
sti
std
push
jecxz
dec
cmp
sub
dec
adcb
push
push
stos
int
outsl
aaa
mov
iret
test
mov
into
xchg
fsubr
xor
xor
cmp
sbb
add
pop
xchg
fidivrl
xchg
pop
mov
into
xor
hlt
or
sub
stc
mov
adc
icebp
in
jg
push
shr
adc
dec
push
insl
lahf
pop
push
mov
cs
shlb
mov
movsb
or
filds
jns
xchg
and
rcrl
dec
aam
push
leave
or
inc
mov
daa
jge
xchg
mov
mov
test
dec
rolb
sub
mov
insl
out
neg
cmpsl
les
push
loopne
pop
jo
push
or
lea
adc
shl
rclb
pop
mov
fwait
inc
pop
iret
fs
sub
pop
scas
imul
ficoml
lahf
pusha
cmp
xor
pop
jecxz
and
inc
addr16
add
mov
sbb
movsl
lods
xchg
rcrb
insb
sub
jl
addl
imul
sti
rolb
sub
cld
inc
add
jne
fisttps
cmovns
sbb
jg
jb
call
pop
out
sarb
std
inc
mov
xchg
mov
mov
add
clc
fsubrl
dec
mov
dec
add
fsubr
sahf
mov
je
xor
sbb
mov
ljmp
sbb
xor
push
xchg
outsl
jno,pt
lods
ljmp
jne
movsb
fildll
fstpt
jne
outsb
cmp
outsb
shll
push
lcall
aaa
add
inc
jge
pop
outsl
mov
dec
add
push
jecxz
int
ljmp
xchg
add
push
sbb
add
add
sahf
inc
jnp
mov
cmp
push
es
rcr
ret
popa
jl
jle
pusha
xchg
push
pop
sbb
push
or
dec
fidivs
xchg
mov
dec
inc
ret
in
add
test
mov
mov
pop
jb
xchg
add
cwtl
adc
inc
adc
ret
popa
or
daa
add
mov
sbb
dec
jnp
jp
rcrb
enter
cmp
test
in
mov
or
sbb
add
fcmovu
jecxz
scas
xor
clc
jl
jle
repz
push
cmp
mov
repnz
and
sbb
lods
mov
leave
rolb
aas
lahf
ljmp
pop
aaa
adc
cli
push
push
mov
cmpsb
outsb
hlt
adc
in
pop
mov
mov
in
mov
dec
and
pop
cmp
cmp
push
jns
adc
or
jecxz
lahf
pop
jns
inc
mov
imul
adc
stos
pop
push
mov
repz
adc
in
test
orb
jnp
lret
sbb
sub
vpmuldq
pop
mov
mov
lret
stos
inc
daa
fistpll
pop
testl
in
fldenv
cmp
das
arpl
rolb
in
add
out
jmp
stc
adcl
mov
or
cli
add
mov
lods
clc
inc
or
sbb
cmpsb
mov
ja
daa
rcrl
test
mov
sub
push
stc
lods
ds
and
iret
cld
adcl
push
mov
pop
jo
push
fistl
mov
loopne
div
pop
pop
push
jg
inc
nop
pop
push
sarb
jg
les
cmp
xchg
push
sbb
rcll
das
mov
dec
mov
inc
lods
aad
aaa
mov
mov
jae
sub
jb
mov
push
nop
xchg
aaa
test
ret
imul
jecxz
push
pop
movsl
adc
sar
int
in
cld
xchg
cwtl
sbb
call
enter
push
xor
mov
xchg
fxch
xchg
push
out
out
push
mov
popa
mov
pop
mov
cmpsb
xchg
dec
in
pop
xchg
xchg
jge
push
in
sub
sub
or
les
std
popf
fdivrs
lods
cmp
test
mov
shlb
lods
mov
in
push
jae
pop
out
cmp
pop
dec
add
mov
inc
cwtl
adc
sub
jnp
out
lret
icebp
loope
repnz
sbb
push
stos
icebp
push
sbbb
xor
les
jecxz
adcb
in
inc
pop
lods
xor
cmp
or
xchg
dec
aad
push
ja
jns
inc
push
sub
dec
add
into
rcr
or
pop
sbb
add
clc
push
pop
sub
jmp
cmpsl
mov
in
sarb
repz
add
or
ret
xchg
add
pop
xor
ljmp
ret
dec
gs
push
aam
cld
inc
ljmp
or
rorl
xor
dec
xor
shrb
and
xchg
push
enter
jle
or
or
mov
fidivrs
inc
pop
or
push
sbb
ds
sub
mov
in
in
mov
fstp
aas
aad
xor
push
xchg
or
loop
cmpb
nop
sahf
aad
pop
mov
ds
sahf
pushf
mov
aad
enter
call
aam
or
sub
clc
stc
mov
insb
push
loop
cs
xchg
jo
cmp
xchg
inc
movsb
sub
xor
sub
and
mov
cmp
sbb
pop
add
push
pop
lods
push
movsb
cmpsb
lret
sahf
mov
call
push
popf
pop
filds
xchg
aas
pop
adc
aam
dec
cmp
insl
addl
adc
xor
mov
rorb
pop
push
mov
sbb
dec
fsts
shlb
push
mov
mov
shl
xchg
mov
and
push
call
loope
divb
vmovshdup
or
fmull
lds
jmp
movsb
fsts
dec
pop
cli
jle
jle
test
pop
jmp
data16
mov
dec
lret
adc
loopne
adc
push
pop
sti
fstl
bound
popa
jg
aad
imulb
jp
fwait
mov
pop
test
cltd
test
and
movsl
mov
sub
xchg
or
test
mov
loop
jmp
adc
mov
push
push
xchg
mov
repnz
pushf
sbb
mov
dec
jge
push
repnz
orb
cmp
mov
pushf
add
into
adc
aam
or
dec
arpl
test
mov
in
dec
jge
call
and
loopne
jbe
fcomps
or
stc
cmp
or
sub
scas
fists
pop
and
mov
dec
adc
js
or
pop
push
adc
dec
clc
fcmovnb
stc
mov
xchg
decb
or
lods
pop
in
push
cmpb
jbe
adc
lretw
insl
lock
pop
push
test
shll
push
into
pop
xchg
add
pop
xchg
pop
and
aas
dec
popf
push
add
les
imul
jo
ret
test
cmp
inc
xchg
mov
std
pop
adc
jmp
loop
icebp
inc
out
jns
hlt
mov
call
lods
xchg
dec
sahf
pop
inc
mov
fisttps
jo
mov
or
mov
negl
xchg
gs
aad
add
cmpsb
sub
adc
lea
in
mov
js
roll
cmp
aas
dec
repz
and
enter
mov
fisttpl
loope
pushf
popl
dec
fstl
xchg
jne
xchg
shlb
jp
test
icebp
loope
out
repz
andl
daa
nop
adc
repnz
xor
or
test
ljmp
aad
out
ror
push
cltd
imul
xchg
lds
sti
nop
imul
fwait
sub
jmp
sub
call
int
lock
not
std
stos
sbb
aaa
inc
push
adc
mov
jp
or
dec
ret
or
and
jno
aad
lods
mov
test
pusha
cltd
mov
jb
adc
add
add
and
cmp
dec
stos
mov
dec
jo
xorb
lea
loopne
add
jnp
mov
fs
dec
faddl
aad
xor
sub
xor
jle
aad
aaa
cmp
and
cmp
mov
xchg
repz
jp
and
push
cmp
mov
rcr
adcb
push
jne
xor
lret
nop
mov
mov
in
dec
sub
jnp
sbb
hlt
clc
aas
jg
jae
fwait
pop
push
and
mov
ret
pop
testl
aad
dec
and
jge
sub
sub
out
lahf
fs
fs
pop
cwtl
dec
fists
lcall
lret
stos
sub
mov
mov
lcall
mov
jae
cmc
and
inc
cmp
xlat
test
in
roll
sbb
xor
cmpsl
mov
xchg
cmc
clc
sub
sbb
mov
mov
sti
pusha
pop
lock
push
ja
jle
xor
clc
or
mov
mov
xor
in
pop
int3
out
ja
push
call
jbe
pushw
les
imul
movl
shlb
mov
mov
cld
leave
xlat
adc
jo
dec
pop
mov
jbe
mov
or
nop
inc
out
cmp
icebp
into
add
xchg
leave
and
stos
rorb
fs
push
jbe
fstpt
xor
pop
imul
xor
dec
dec
cmp
aas
jno
xor
test
pop
pop
xchg
std
inc
add
mov
xchg
mov
mov
pop
cmp
dec
sbb
cmp
imulb
mov
xchg
addr16
dec
int3
xchg
pop
or
jbe
sbb
sub
sub
xor
inc
mov
sub
sahf
jns
loop
push
sarb
push
cmp
pop
and
pop
loope
int3
outsb
testl
dec
sbb
data16
icebp
add
lcall
mov
sarl
adc
or
inc
outsl
xor
add
push
insb
push
rol
push
push
xchg
add
lcall
int
mov
adcb
inc
dec
jecxz
jb
ret
icebp
push
in
push
sub
sbb
call
test
or
ja
pop
dec
scas
push
or
jle
mov
aas
or
outsb
popa
mov
pop
xor
movsb
fwait
xor
fbstp
pop
aam
fdivs
jnp
mov
cmpsb
stos
mov
mov
xchg
mov
cli
mov
push
js
mov
jecxz
jbe
cltd
ljmp
jl
jae
test
xchg
lret
mov
cltd
lret
jecxz
stos
sti
clc
mov
call
adc
aaa
xchg
das
aaa
clc
mov
jmp
inc
daa
mov
inc
mov
ljmp
xchg
xor
cmpsl
xor
ljmp
lds
dec
fwait
test
sbb
mov
dec
test
and
leave
mov
push
inc
gs
in
push
leave
or
jle
pop
in
mov
push
dec
andb
test
fdivrs
test
mov
addl
nop
add
ja
mov
jo
out
mov
jmp
movsb
aaa
and
xchg
lret
inc
push
int3
rclb
stc
jbe
adc
push
xchg
out
push
inc
mov
lret
mov
loop
dec
sub
je
adc
mov
insl
sbb
ret
sbb
sub
pop
cld
adc
jmp
mov
std
cmp
xchg
xor
stos
cmp
test
repz
rol
test
cmpsb
xchg
push
sahf
sbb
xchg
pop
int3
sbb
mov
inc
and
movsb
and
mov
call
xorl
dec
fists
stc
mov
aam
jle
adc
pop
or
lock
cmp
mov
and
jo
jge
jne
cvtdq2ps
adc
fmull
add
sub
jns
jg
fistl
mov
fcmovu
adc
daa
jnp
push
xchg
mov
pop
xor
rcrl
push
push
fs
cmp
adc
scas
sub
lahf
or
enter
fldl
xchg
pop
xchg
dec
cmpsb
sbb
xor
scas
jb
loopne
xor
and
aaa
vpmacssdqh
and
or
repnz
sub
sbb
xchg
and
mov
jl
lea
and
sbb
and
popa
sahf
pop
sbb
lcall
lea
push
cmp
int
inc
outsl
out
outsb
adc
cld
add
movsb
add
sbb
aam
enter
or
data16
lds
int
mov
xchg
xchg
push
or
xchg
dec
test
mov
lcall
shrb
ds
xor
lods
sbb
dec
mov
pushf
pop
test
add
dec
push
ja
dec
xchg
push
in
push
add
push
js
push
gs
mov
cwtl
movsb
test
out
mov
or
stos
gs
mov
add
fsubl
dec
jg
lret
adc
xchg
pop
push
dec
cmp
cmpsb
dec
negl
mov
cmpl
dec
in
call
leave
mov
mov
jns
stos
fsubr
ljmp
dec
mov
sub
clc
inc
push
xor
clc
shlw
jno
sbb
mov
jg
cmpl
mov
xchg
outsl
mov
adc
bound
mov
mov
int
out
mov
clc
inc
lcall
js
bound
out
or
das
mov
jp
nop
bound
aaa
jmp
or
mov
cltd
jne
push
data16
sub
pop
adc
divb
cli
scas
jp
movsl
scas
adc
insb
adc
aam
iret
test
sub
xchg
mov
leave
loop
dec
stc
int3
mov
int
fwait
or
repnz
mov
sub
xor
jne
xlat
and
icebp
mov
mov
shlb
mov
nop
das
push
dec
sbb
adc
mov
icebp
or
jno
sbb
hlt
pop
or
xchg
popa
sbbl
push
or
cmp
adc
jb
sbb
push
and
dec
push
arpl
inc
mov
adc
inc
push
scas
mov
mov
sub
pop
insl
xor
mov
out
incl
outsb
inc
pop
cs
sub
cmp
sub
loop
push
int3
mov
into
es
cmp
lods
adc
jl
xor
push
popl
xlat
ljmp
xor
fbstp
scas
sub
ffree
dec
dec
loop
stos
sub
jp
dec
and
data16
leave
push
inc
loopne
jae
cmp
and
icebp
test
mov
int3
repz
loop
stc
mov
lds
jle
xor
cs
mov
or
push
push
les
std
push
sub
xor
gs
or
test
les
shrb
les
in
loope
outsb
xor
push
jno
mov
rol
adc
addr16
mov
jmp
dec
xor
sbb
or
mov
lods
mov
pushfw
mov
fs
mov
loop
push
jge
mov
dec
mov
and
imul
fcom
xchg
std
mov
popf
outsb
mov
out
daa
cmc
shr
or
mov
sbbb
jnp
sub
cwtl
lods
js
ds
es
js
test
adc
dec
fs
xchg
sbb
into
pop
int3
push
pusha
push
inc
insb
adc
mov
fisubl
std
mov
cld
loope
ljmp
cmp
mov
fstps
leave
pop
pop
sbb
add
addb
repz
pusha
ficomps
repnz
ficoms
cmpsl
xor
daa
inc
jae
sbbb
xchg
jnp
arpl
bound
lds
push
test
jns
jae
add
xlat
mov
adc
cs
jecxz
mov
shlb
pop
jbe
subb
add
inc
mov
fadd
jne
inc
pop
int
shlb
aad
pop
cmpsb
mov
sti
movsb
mov
sbb
inc
sbb
hlt
mov
enter
out
insb
movsl
sub
scas
xchg
cmp
cmp
lds
dec
add
pcmpeqb
dec
outsb
fnstsw
imul
pop
mov
push
jge
sbb
inc
stos
jge
cmpsb
xor
nop
mov
add
scas
sub
xchg
mov
insl
scas
add
mov
int3
mov
pop
out
or
xchg
add
nop
fucomi
aaa
aad
push
cmp
js
mov
dec
push
sarl
jge
sbb
mov
fisubl
mov
cmp
xor
mov
popa
jg
and
popf
cmp
stos
xchg
pop
fwait
cmp
jae
les
push
add
test
jmp
lods
cmc
out
jl
or
cmc
mov
imul
repnz
jb
iret
push
stos
negl
das
cmp
outsb
stos
lods
fisttpl
scas
outsl
dec
xlat
dec
sbb
test
xchg
and
cmc
push
lret
mov
sub
fildl
das
fwait
cs
and
mov
fcmovne
dec
loopne
xchg
mov
in
fcmovnu
mov
cmc
lret
aad
sarb
fcomip
or
inc
mov
push
jecxz
mov
mov
stc
mov
push
faddl
xchg
and
ret
mov
faddl
test
jg
scas
aaa
cmp
sub
loope
jmp
adc
fistpll
lods
sub
movsb
cmp
andb
loope
mov
cmp
in
mov
call
daa
lret
mov
mov
mov
xor
movsb
mov
sub
xchg
push
jp
xchg
mov
arpl
mov
repz
sub
jge
push
xchg
and
jns
andb
sarl
cld
jg
mov
jp,pt
pop
dec
cmpl
hlt
test
sbbl
loope
loope
repnz
dec
mov
jmp
iret
jecxz
or
push
shll
pushf
dec
inc
cmp
cmpsl
out
jns
mov
cmp
lcall
cld
pop
sub
xchg
cwtl
push
jg
push
je
sub
icebp
inc
mov
xchg
repnz
fsubr
xor
fcomps
fwait
aaa
ret
into
push
sub
fucomip
mov
into
sahf
xchg
mov
or
pop
ja
es
fisttps
and
cmp
loop
sub
jmp
aaa
mov
mov
jge
jecxz
cmovp
jno
dec
ja
pusha
adc
hlt
dec
mov
mov
out
xor
ret
repnz
insl
test
push
jp
lods
cld
mov
test
mov
ret
aam
mov
push
lret
jmp
sbb
mov
mov
cmp
loop
mov
cmp
stc
push
adc
sub
lea
xlat
mov
iret
mov
fcmovb
js
sbb
or
cld
inc
insb
mov
xor
ret
jge
lds
mov
jns
dec
sbb
cmpsb
mov
cld
sub
pop
iret
cmp
icebp
jecxz
pop
out
stos
push
cwtl
inc
pop
dec
daa
inc
push
cmpsb
test
pop
pminsw
lods
out
repz
sbb
adc
and
out
cmc
dec
sbb
cwtl
sub
mov
iret
mov
dec
jnp
add
test
sub
fdiv
mov
push
adc
sbb
mov
sub
jnp
std
dec
xchg
fbstp
mov
xlat
dec
ljmp
aad
and
mov
cmp
hlt
arpl
mov
outsb
or
ja
push
test
push
pop
sbb
mull
pop
aam
imul
xchg
fsub
pop
xchg
aad
sbb
repz
push
mov
outsl
xchg
ficomps
movsl
xchg
xor
or
pop
sbb
or
cmc
xchg
push
call
sub
push
cmp
cmp
adc
in
std
dec
adcb
xbegin
adc
cltd
inc
cmp
add
mov
or
jl
adc
shr
bound
jp
aam
stc
scas
daa
pop
dec
shrb
add
loope
jno
jae
sub
aam
pushf
push
test
stc
mov
add
popf
idivl
xorl
jo
xor
mov
jo
add
and
push
adc
aam
jp
cld
jmp
enter
test
inc
or
mov
mov
sub
sub
jl
mov
ret
jo
pop
out
fistl
iret
mov
stc
pop
aad
add
jle
daa
cmpsl
add
jnp
lahf
jne
jbe
jns
aaa
push
jge
add
repnz
dec
pop
fs
cmp
inc
xor
lods
add
mov
insb
scas
adc
insl
push
or
mov
test
je,pn
stc
adc
cmp
sbb
mov
stc
inc
subl
mov
cmc
sub
fnsave
push
push
and
cmc
fs
cmpsl
cli
or
lret
scas
push
push
or
cmp
push
in
lcall
push
sbbb
mov
in
pop
aaa
fcomps
pop
adc
mov
jno
bound
in
mov
mov
sub
add
out
roll
mov
cmp
push
addr16
sbb
push
iret
inc
mov
sbb
dec
pop
ds
and
mov
mov
mov
daa
fst
add
outsl
loope
cmp
mov
mov
cmp
unpcklps
rorl
push
cmp
or
or
imul
adc
lret
mov
test
rorb
push
add
pusha
add
lcall
test
mov
hlt
fdivr
push
mov
nop
insb
or
fdivl
dec
test
mov
out
push
cmp
jmp
xchg
and
gs
push
movsl
dec
jo
cld
xchg
popf
stos
dec
test
mov
or
sub
test
aam
and
jmp
xchg
push
lods
pop
jg
icebp
jb
subb
adc
insl
ror
outsb
cmp
push
mov
leave
bound
icebp
lret
cli
aad
jae
mov
xchg
add
in
jns
jecxz
xor
mov
lahf
stos
mov
adc
mov
and
shrb
lahf
push
sbb
test
rolb
dec
dec
add
js
push
dec
inc
emms
ds
push
add
push
movsl
dec
lods
es
mov
pop
popf
add
hlt
popa
dec
mov
cmpsb
lea
xchg
aam
push
xchg
or
jmp
mov
push
and
or
js
xor
enter
xorl
aad
sbb
push
je
mov
fistl
sbb
or
and
hlt
pushf
xchg
xchg
cld
jle
mov
hlt
cmp
sbb
fcoms
and
lcall
mov
fdivrl
xchg
jle
in
rclb
pop
aaa
in
sub
hlt
mov
jle
test
push
sti
adc
ret
xchg
in
ss
out
sarb
pop
sub
ja
mov
in
mov
or
fsubr
mov
call
xchg
iret
mov
xchg
adc
in
adc
sub
jp
pop
movsb
fdivrl
jns
mov
sbbb
pop
xchg
mov
cltd
cmp
leave
loope
clc
jmp
jl
aam
ret
lcall
xor
and
dec
leave
stos
mov
mov
xor
ds
call
daa
ret
pop
xchg
ss
popa
insl
add
or
adc
inc
fadds
mov
mov
mov
ljmp
mov
mov
dec
test
jmp
lds
stos
xor
insl
inc
push
pop
dec
push
inc
call
ja
dec
or
adc
add
js
divl
sub
js
push
dec
faddl
cltd
xchg
ret
ret
aas
pop
pop
push
imul
add
mov
or
in
cmp
sub
bound
push
xorl
rcr
insl
aas
jo
call
push
int
stos
call
popa
or
cmp
pop
fsubs
jecxz
pop
cltd
xchg
aad
sahf
adc
pop
rcll
daa
adc
sbb
inc
das
cmpsb
xor
cmp
and
jbe
aam
cmp
jle
fisttps
std
push
lea
cmpsb
leave
ret
push
dec
scas
pop
xchg
add
out
mov
out
shlb
pop
pop
inc
rcll
cmp
mov
out
xchg
and
inc
mov
cmp
inc
inc
pop
arpl
inc
mov
dec
inc
loopne
push
cltd
mov
pop
mov
mov
jmp
stos
and
mov
cwtl
fs
mov
jae
inc
orl
jbe
xor
cmp
out
cmp
into
lret
inc
popf
hlt
fidivrs
imul
xchg
xchg
inc
sbb
call
adc
jne
in
sub
clc
xor
mov
ja
jmp
xchg
cld
mov
jnp
mov
push
bts
sarl
xchg
rcl
jne
es
scas
mov
aam
pop
out
addr16
ljmp
ret
adc
movsb
roll
pop
aad
test
xchg
jmp
sbb
xchg
adc
loop
lds
xor
call
xchg
sti
xor
xlat
and
pushf
xor
inc
add
xchg
mov
in
clc
sti
adc
out
sbb
clc
call
xchg
xor
lret
add
ja
xor
lcall
loop
mov
fwait
call
adc
sub
mov
mov
lret
and
and
pop
outsb
ffree
jecxz
ret
ror
mov
shll
leave
ffreep
mov
push
jns
in
lds
ljmp
xchg
pop
and
add
push
cmpsb
or
sbb
scas
mov
outsl
lcall
int
dec
mov
hlt
dec
addr16
jl
ljmp
cmp
push
mov
xchg
rcrb
cmp
lods
pop
adc
dec
sub
inc
jne
aad
rcrl
test
mov
push
and
mov
scas
es
pop
xor
inc
out
mov
sub
ja
fsubl
aam
jg
bound
popf
push
sbb
push
cld
xorl
mov
xchg
xchg
bswap
leave
hlt
movsb
sti
stos
xor
mov
cmp
dec
enter
js
cltd
nop
lret
lret
add
in
mov
sub
popf
out
mov
stos
mov
adc
cwtl
adc
shll
pushf
mov
sbb
inc
js
xchg
pop
inc
adc
les
out
scas
mov
and
pop
cmp
shll
dec
mov
sub
cmpsl
cmp
faddp
int3
inc
or
test
out
lea
es
fimuls
lock
mov
icebp
js
out
xchg
and
insl
out
in
cmp
pop
push
dec
rcrb
cmp
lock
scas
jge
push
into
mov
pop
inc
out
and
aaa
jge
xchg
in
ret
push
jne
xor
or
popa
repz
xchg
sbb
test
int3
cmp
aam
das
lret
mov
sbb
or
adc
cmpsb
inc
cmp
in
bound
jb
inc
imull
ljmp
cltd
fisttpl
push
aaa
mov
hlt
push
mov
sbb
dec
inc
adc
inc
push
aam
std
lret
xor
and
dec
arpl
pusha
mov
xchg
lcall
jmp
repz
stos
std
stos
xchg
or
imul
hlt
xchg
cmpsl
xchg
arpl
jecxz
arpl
arpl
add
out
jnp
call
cmc
push
push
mov
and
lods
data16
stos
popf
arpl
lods
scas
add
movsl
loopne
fwait
sub
addr16
in
cmp
jg
out
hlt
dec
inc
sbb
adc
mov
sar
imul
mov
dec
or
or
lea
mov
adc
insb
mov
mov
js
push
in
cld
lods
push
int3
jecxz
cwtl
xchg
pop
mov
icebp
cmp
cmp
fidivs
pop
mov
rol
or
xchg
xor
shlb
pop
sub
cmpsl
pop
int
loopne
fs
stc
rcr
std
mov
imul
dec
sub
insl
mov
popa
jle
adc
enter
std
and
push
rclb
inc
xchg
lock
mov
scas
mov
dec
mov
out
add
cmp
repnz
mov
fnstsw
lods
fsub
out
push
inc
xchg
mov
insl
int
and
push
pop
xor
mov
mov
rcl
sub
int
jae
inc
jne
lock
bound
mov
lea
popf
int
subb
mov
xchg
pop
ss
jp
aad
loopne
fdivr
add
mov
sub
sbb
loope
push
push
xchg
and
insl
jle
sbb
mov
test
addr16
popa
pop
addl
jg
iret
and
fists
fisubl
ja
js
negl
pop
pop
cmc
add
scas
pop
jecxz
popf
mov
ljmp
adcb
cwtl
inc
pop
mov
nop
adc
js
pushf
mov
jne
mov
dec
fmul
pop
sarb
cmpsl
fsubl
xor
iret
lret
sahf
jbe
pop
stc
mov
pop
push
movsl
add
xchg
shrl
jecxz
sbb
repz
rclb
mov
shlb
mov
xchg
push
scas
xchg
lods
insb
repz
xchg
lods
cmpsb
movsl
jb
sub
outsb
xlat
data16
adc
xchg
mov
fwait
push
rorb
cmp
sbb
js
push
sbb
jg
xchg
mov
adc
flds
xchg
push
dec
or
jo
mov
sbb
out
pop
push
jp
jmp
jmp
jecxz
jnp
lret
lcall
add
push
aam
mov
jge
repnz
les
test
repnz
cld
cmp
fists
scas
std
aam
sub
pop
lods
imul
mov
or
jmp
test
out
hlt
jge
push
push
push
loop
push
or
push
into
or
iret
inc
or
mulb
cmp
mov
test
fs
out
pop
mov
mov
jg
cltd
lahf
adc
push
shlb
outsb
mov
movsl
or
cltd
divl
loope
pop
mov
add
sti
stos
jns
inc
push
xor
add
and
dec
inc
jb
sbb
dec
mov
add
mov
xor
xchg
jmp
movsl
sub
sub
pop
add
in
inc
out
jecxz
jne
jl
sbb
jmp
push
or
xor
shrb
pop
jo
movsl
jmp
jle
mov
shrl
sub
cmpsb
mov
iret
out
insl
xchg
xor
and
daa
imul
addr16
out
pop
add
cmp
fs
sti
jo
rolb
cmp
adc
xlat
mov
or
cmp
sbb
hlt
xor
clc
mov
xchg
mov
adc
iret
loopne
push
add
repnz
or
pop
mov
notl
inc
pop
ret
ret
push
stos
mov
cmp
popa
pushf
push
sbb
adc
jl
pop
pop
sahf
jne
movsl
int3
or
pop
or
inc
lret
mov
pop
sbb
jno
jbe
cmc
add
sub
xchg
mov
mov
push
in
xchg
imul
cmp
in
lret
jmp
inc
jb
adc
mov
mov
pop
out
add
xlat
in
dec
adc
lret
or
xchg
movsl
mov
or
mov
jmp
int3
data16
out
nop
adc
std
mov
hlt
xchg
pop
gs
sub
movsb
dec
imul
push
in
sbb
xchg
push
ljmp
fbld
lret
es
dec
or
in
push
scas
addr16
inc
jae
cmp
mov
push
hlt
pop
gs
je
cmp
filds
mov
sbb
fldenv
addr16
in
fs
mov
sbb
xchg
insb
adc
popl
add
add
shl
aaa
jp
jb
adc
mov
or
addb
inc
fldenv
xchg
idivb
arpl
stos
add
in
mov
ss
pop
fsubs
out
cmp
mov
loop
sub
mov
push
fdivs
push
xchg
fldenv
jmp
xchg
sub
mov
and
mov
in
cli
pop
mov
dec
push
stc
je
pop
push
push
test
arpl
cmp
push
fisubl
jne
out
imul
loope
out
and
ljmp
push
lret
xchg
xchg
iret
test
mov
adc
or
mov
sbb
dec
jns
inc
mov
mov
dec
sahf
and
fimull
ja
sarb
or
scas
out
fcmovne
dec
insl
xor
imul
shr
xor
out
dec
call
repnz
push
jecxz
mov
xchg
rcrl
test
roll
sub
mov
and
jne
mov
sbb
pop
mov
and
add
ret
inc
sahf
add
iret
nop
jge
mov
push
sti
pusha
pop
ret
xor
xchg
sub
xchg
ss
scas
insl
lcall
adc
int
mov
jne
mov
xor
movl
scas
sub
fs
mov
push
ja
jg
mov
insl
sbb
fsubs
cmp
adc
inc
fnstsw
sbb
shlb
adc
sub
fbld
inc
inc
imul
adc
addr16
cmp
or
test
insb
dec
jge
cs
out
xor
mov
fmuls
cs
addr16
cmp
jbe
mov
nop
dec
or
cmp
daa
call
popf
popa
into
nop
cmp
in
dec
clc
inc
jnp
insb
ljmp
sbb
mov
mov
sub
fdivs
clc
mov
loope
in
dec
ja
in
stc
loop
and
pop
mov
fwait
testl
push
test
push
leave
mov
push
in
fisubl
mov
std
mov
popa
adc
lods
fmull
popa
cs
repnz
fisttpl
pusha
movsb
in
inc
repz
gs
cltd
es
fisubs
adc
jo
dec
testb
or
pop
stos
sub
enter
mov
das
scas
sub
addb
or
test
movsl
test
data16
mov
xchg
jo
enter
fcmovnb
hlt
xor
xor
gs
cmp
cmp
and
jp
inc
pop
js
xorb
xor
hlt
jl
dec
mov
lret
jg
fiadds
sbb
fwait
in
mov
lods
sahf
out
and
push
cmp
mov
imul
mov
add
xchg
mov
bound
movsl
es
jl
scas
mov
push
sbb
xor
sbbb
outsb
xchg
mov
lcall
ret
cmc
pop
inc
pop
push
push
jp
test
sub
movsl
mov
dec
sahf
out
insb
int
mov
cmc
fsubl
shlb
sbb
cmpsl
and
xchg
push
test
lret
add
sbb
xchg
mov
cmpsl
and
loop
in
decl
iret
cltd
bound
lret
cmp
mov
dec
push
mov
sti
cli
dec
jae
jne
lret
xchg
nop
insl
mov
movsl
and
fs
mov
dec
xor
insl
jg
div
and
test
cwtl
pop
ret
in
pop
push
sti
fimuls
push
into
or
adc
jg
cld
subb
push
out
vphadduwd
and
jecxz
push
pop
dec
mov
lahf
add
jb
inc
clc
popa
mov
shrl
push
dec
imul
nop
ret
push
sbb
push
cmp
push
inc
in
fistps
loop
pushf
inc
repz
nop
loop
pop
pop
and
xor
ror
push
mov
xor
xorl
mov
aaa
cmp
test
lret
lea
lcall
incl
jmp
add
mov
insl
sbb
pop
and
out
inc
or
fstl
jecxz
imull
cmp
mov
sbb
cli
rcl
jge
mov
and
scas
insb
cli
nop
lahf
loope
lock
sbb
clc
jg
mov
lahf
xor
and
arpl
or
or
int
sub
jecxz
insb
xchg
push
mov
mov
cld
xchg
push
jno
mov
sbb
cld
repnz
les
and
popf
fnstcw
push
jns
stos
stc
xchg
pusha
xor
mov
xor
push
mov
mov
dec
aam
sbb
add
dec
jmp
sbb
mov
push
fnstcw
bound
mov
fstpl
mov
jne
inc
push
cmp
dec
inc
das
dec
mov
nop
sbb
push
jo
mov
jae
xchg
pop
xchg
ficomps
inc
sbb
pusha
faddl
sbb
adc
sbb
icebp
inc
dec
add
push
lods
jp
shrb
fprem
mov
xchg
pop
scas
jo
pop
xor
cmp
mov
aad
cmpsl
daa
stos
sub
cmpsl
adc
push
mov
ja
mov
add
icebp
daa
mov
pushf
mov
xchg
shr
inc
or
xchg
ds
pop
and
sbb
dec
mov
mov
adc
movsl
mov
pop
shl
xchg
pop
fcomp
iret
inc
sub
mov
sbb
dec
dec
add
leave
aaa
push
fbld
push
jp
into
cld
dec
imul
mov
nop
pop
mov
cmc
sbb
popa
inc
pop
dec
dec
mov
ja
fcompl
adc
jo
jb
xor
fldt
nop
imul
cmpb
mov
jmp
sbb
adc
pop
or
sti
mov
lret
aas
sub
inc
lea
add
xor
mov
call
jne
loop
test
ret
fidivrl
and
lock
pop
inc
mov
aam
mov
test
fwait
leave
sbb
push
js
loopne
mov
nop
pushf
mov
rorl
aaa
int3
arpl
in
ret
add
cwtl
adc
inc
mov
mov
or
jne
loopne
cld
add
push
pop
enter
push
neg
sub
adc
les
cmpsl
dec
ja
pop
into
fsubr
cltd
pop
sbb
or
lods
mov
js
stos
pop
mov
push
ret
fldt
dec
cld
out
pop
adc
push
push
sbb
mov
pop
dec
cmp
cmp
dec
pusha
imul
scas
sbb
call
sarb
ds
jbe
xchg
jecxz
pusha
dec
rcll
dec
stos
loop
add
push
cmp
or
or
mov
popf
aam
adc
fisubrl
sub
das
enter
mov
mov
pop
cmp
and
add
fisubrs
add
cwtl
mov
jns
or
jae
xlat
jnp
lock
insb
push
or
rcrb
inc
dec
gs
adc
bound
out
lock
rcll
cmp
mov
push
mov
cmp
int
in
dec
inc
mov
sbb
cli
in
xor
cmpb
mov
jmp
xor
repz
sbb
jb
lcall
pop
lret
lds
psubb
scas
scas
add
repz
vmulps
cltd
xchg
jbe
pop
jecxz
scas
mov
adc
cli
fwait
mov
mov
hlt
xchg
xchg
adc
pop
imul
dec
push
pop
push
sbb
pushf
cmp
repz
cs
pop
inc
sub
rcrl
bound
cmpsb
ja
les
stos
ret
out
sbb
loop
mov
or
sarb
xchg
pop
aam
pusha
das
divl
jp
sub
dec
ljmp
sbb
into
dec
repnz
lahf
lea
pop
mov
mov
push
pop
aad
add
or
fcomps
jecxz
mov
ficoml
rorl
dec
fidivrl
shlb
enter
push
xchg
ljmp
pop
test
mov
lods
inc
ds
mov
xor
add
dec
jne
sub
mov
test
xor
mov
jg
pop
xor
cmp
cmp
loop
sbb
mov
lds
fidivrl
mov
and
and
xchg
cmp
or
mov
ds
push
cmpb
lret
jp
add
dec
mov
and
pop
pop
jns
mov
jp
or
jmp
aas
adcl
jge
mul
add
jecxz
or
push
mov
cmpb
fs
insb
sbb
ja
push
mov
xchg
ror
in
pop
lcall
adc
out
out
scas
fs
xor
dec
cmp
nop
or
or
sub
sbb
daa
xor
out
pop
ret
ret
xor
sbbb
loopne
fbstp
sahf
jecxz
inc
cmp
out
mov
mov
xorb
mov
cli
jo
mov
add
jp
fnstenv
mov
sub
mov
fsubl
xor
fwait
in
or
pop
clc
in
scas
xchg
jbe
stc
jl
insb
jg
mov
jbe
outsb
cmpsl
push
cmpb
out
mov
pushf
cmpsl
mov
or
mov
sti
add
cli
fsubs
insb
jmp
push
test
push
cmp
loope
popa
jecxz
pop
lret
fwait
cmpsl
push
push
dec
in
addr16
scas
les
sub
mov
mov
mov
cmp
repnz
jmp
rorb
adc
in
xor
aad
mov
roll
and
or
call
dec
js
push
mov
test
sahf
dec
sbb
fwait
lods
les
push
mov
scas
pop
loop
adc
fistps
leave
dec
mov
mov
jnp
cmp
out
pop
rcr
cmp
inc
sti
sub
loopne
les
pop
sbb
fadd
out
pushf
rcr
int
nop
pop
gs
jle
and
ficoml
or
fstl
push
push
test
push
push
outsl
sbb
aas
movsl
push
ret
sahf
lea
inc
jecxz
cmp
and
dec
std
je
es
stos
push
test
bound
popf
xchg
mov
repnz
mov
push
loop
into
xlat
and
cwtl
ljmp
pop
arpl
in
jo
loope
or
lods
and
cmc
inc
imul
popa
sub
lret
push
sbb
inc
leave
and
mov
dec
mov
sub
dec
pop
repnz
repnz
leave
and
out
es
jmp
loop
popa
adc
shrb
test
inc
fisttps
loope
out
fmuls
outsl
aas
in
inc
inc
lods
in
sub
push
jbe
mov
in
icebp
cmp
pop
ficoml
dec
les
jp
iret
and
std
and
pop
inc
test
push
pop
adc
cmp
orl
push
xor
in
jmp
xorl
rolb
sahf
add
nop
imul
and
idivb
mov
arpl
dec
push
mov
popf
push
arpl
stc
inc
push
fdivrp
push
das
jno
dec
ficoml
and
lea
mov
mov
push
push
in
out
mov
fsubs
out
jno
xor
ret
imul
div
sbb
add
sub
cli
or
filds
mov
and
in
ldmxcsr
push
cltd
sub
add
xchg
scas
fwait
inc
imul
mov
xchg
push
rcr
leave
push
dec
jge
std
add
push
int
mov
and
cli
pushf
pop
push
popa
lock
data16
imul
sub
test
jns
leave
add
mov
mov
and
sarb
sbb
jge
push
xchg
bnd
pusha
imul
cltd
xorl
pop
scas
fisubl
add
mov
repnz
mov
out
dec
push
pop
stos
xchg
lret
inc
repnz
sbb
xor
mov
enter
jnp
bound
cmp
and
jno
lahf
pop
fisubl
in
testl
imul
xor
movsb
minps
mov
xchg
add
mov
loop
mov
popf
mov
or
in
lods
pop
mov
imul
mov
cs
ficomps
inc
xor
out
mov
add
push
mov
jb
mov
sub
jo
cmp
pop
es
iret
xor
mull
rclb
pop
stos
rclb
shlb
pop
and
add
xor
lea
shlb
filds
xor
push
popf
adc
and
sub
xor
aam
ljmp
xlat
mov
xchg
xchg
xor
cmc
test
inc
test
add
test
jnp
or
pop
push
mov
push
lcall
xlat
es
loope
aaa
repnz
add
mov
scas
push
in
dec
mov
fnstenv
inc
loopne,pt
sbb
mov
xchg
dec
cwtl
mov
xor
pushl
adc
out
jge
sbb
jae
sbb
cmpsb
repz
sub
addr16
add
jge
jns
mov
loopne
int
xchg
sbbb
dec
sbb
mov
mov
jb
shll
pop
test
adc
shlb
sub
fwait
mov
sbb
outsl
dec
pop
lods
jbe
mov
loopne
pusha
stc
les
pushf
pusha
sarl
adc
loope
ds
jbe
sahf
into
push
add
or
ret
dec
pop
cmp
repz
adc
popf
add
push
or
jns
mov
daa
movsb
loope
inc
out
inc
xor
stos
in
jmp
or
fisttpl
mov
xchg
fldl2t
rcrb
mov
into
movsl
les
mov
lods
jnp
pop
push
dec
out
push
adc
fcompl
inc
scas
lret
or
xchg
mov
sarb
and
lret
mov
ds
xchg
jle
jo
les
xchg
mov
cmp
adc
ljmp
sub
push
in
insl
out
ds
leave
ja
sbb
mov
xchg
xchg
xor
dec
cld
mov
test
enter
in
cmp
pop
pop
lret
clc
pop
add
in
pop
enter
ljmp
push
jns
incl
inc
mov
jno
repnz
hlt
pop
push
sbb
in
jle
sbb
outsb
add
shlw
push
and
dec
dec
add
repnz
out
sub
ljmp
xor
aaa
pop
gs
xor
jecxz
or
or
clc
mov
fwait
jae
out
pusha
mov
and
add
mov
aas
and
call
pop
add
orb
shll
dec
add
icebp
dec
mov
push
mov
ret
fcomi
mov
mov
iret
add
lods
mov
aaa
mov
pop
subb
sbb
lret
loope
shlb
jo
xor
fldcw
mov
and
mov
dec
outsl
mov
and
push
jmp
clc
fwait
insl
loop
or
mov
jecxz
ret
mov
cmpsb
xor
xchg
lds
mov
aaa
scas
rcrl
pop
nop
xchg
pushf
fnsave
into
jge
pop
insb
ds
lcall
cmp
pop
xchg
push
std
int
mov
outsb
faddl
add
mov
push
dec
push
or
push
fbld
xchg
and
daa
jno
push
mov
push
xor
push
sbb
xorb
and
or
inc
test
sub
push
mov
leave
cmp
dec
in
fidivrs
enter
aas
into
popf
or
mov
pushf
xchg
shr
push
mov
sbb
and
inc
fwait
cmpsb
loope
mov
cmp
add
add
dec
xchg
frstor
js
xor
clc
inc
sbb
xchg
imul
xchg
cmc
lods
fstpl
movsb
out
cmpsb
into
aam
mov
jle
subl
les
in
inc
je
repnz
out
sarl
jp
stc
jge
cmc
xor
mov
andb
sbb
push
fbstp
inc
loop
es
inc
jl
xchg
jecxz
sub
stc
or
dec
cmpsl
xchg
cmp
rclb
dec
fldcw
movsl
fadds
push
das
ss
push
pop
jns
sub
add
das
dec
mov
mov
cmp
dec
addr16
xor
into
stc
cmp
adc
sub
jp
das
xor
mov
cmp
nop
add
insl
mov
je
mov
aaa
cmpsb
sub
xor
imul
mov
fistpl
jecxz
repnz
cmpsl
add
scas
mov
jnp
shrb
lods
mov
pop
adc
xchg
scas
cli
sbb
out
ret
xchg
insl
add
mov
imul
sbb
imul
bound
fs
cs
cwtl
xchg
cwtl
lret
cmp
mov
insb
mov
pushf
jmp
pop
pushf
xorb
sbb
jp
fstl
in
jne
mov
call
mov
xor
ret
jne
outsl
pusha
add
fstpt
stos
jmpw
out
pop
stos
fsubl
ds
scas
loope
mull
in
dec
loope
cmpsl
cmp
sbb
xchg
pop
cli
mov
call
cmp
scas
and
call
push
fmuls
sbb
xchg
push
movsb
rcrl
popf
cmp
mov
arpl
inc
push
jo
ss
aad
cmp
jmp
dec
jno
mov
sbb
xor
sub
xchg
pop
add
mov
mov
sub
nop
jecxz
mov
jno
or
in
dec
mov
xchg
xor
std
insl
nop
pop
jl
orl
lods
or
addr16
mov
in
and
sub
or
or
add
sahf
xor
rcll
out
push
lret
xchg
xchg
adc
sub
int3
pop
std
nop
in
adcl
xor
pop
pop
ror
stos
and
bound
mov
jns
sbb
cmp
shll
dec
mov
movb
adc
aad
jge
jge
pop
mov
popf
cmp
repnz
inc
pop
sub
push
inc
push
aas
bound
fwait
or
repnz
shrl
or
incl
in
hlt
mov
inc
imul
pop
sub
sahf
icebp
das
jbe
test
and
scas
icebp
jge
mov
sub
adc
fdivrs
cli
popa
mov
dec
iret
xor
aad
inc
in
xchg
stos
and
out
inc
add
imul
rcl
mov
push
in
inc
in
rcrl
adcb
hlt
cld
adc
shll
stc
inc
sti
shlb
xchg
cmp
mov
lret
fmull
ja
mov
add
mov
dec
mov
jge
dec
add
add
adc
enter
xchg
push
out
or
mov
std
lds
sbb
addr16
cmp
mov
or
icebp
loope
pushf
cwtl
or
mov
or
movsb
pop
call
jo
in
xchg
fisubs
aas
mov
mov
aad
call
sbb
fistpll
pop
xor
sub
jle
repz
aad
cmc
lcall
and
fwait
js
dec
adc
lds
push
jg
loopne
jns
jmp
sbb
dec
xor
in
or
or
gs
push
sbb
mulb
shl
sub
test
xchg
es
mov
aas
int
lret
mov
cwtl
inc
fdivrs
and
pop
sub
aaa
rcl
lcall
add
imul
rolb
push
mov
pop
les
sar
pop
call
mov
test
push
pusha
ds
subb
push
mov
bound
cmp
inc
inc
pusha
hlt
icebp
or
add
stc
ds
dec
mov
orb
icebp
xchg
sub
adc
loopne
into
mov
cmp
mov
mov
cld
cmpsl
add
js
jl
xlat
push
mov
enter
das
loop
rorl
imul
sti
xchg
in
sbb
daa
cld
and
sub
es
add
pop
negb
repnz
shll
or
sbb
sub
nop
push
dec
mov
dec
les
sub
test
push
dec
xor
cmp
mov
xchg
mov
cmpsb
cmp
jp
ja
pop
mov
mov
lods
dec
inc
inc
push
aas
push
ss
xchg
mov
pop
shl
mov
lds
imul
ja
adc
adc
pop
jns
xchg
sub
out
insb
xor
adc
pushf
cmpsl
fimull
ja
mov
xor
push
sub
pop
cmp
xor
push
cwtl
cmp
lods
mov
pop
scas
fstpl
lahf
out
sub
pop
loopne
push
aad
lds
sub
loop
xchg
and
inc
sub
aaa
or
inc
jmp
cmc
cmp
jae
pop
sub
aam
mov
les
std
shlb
fsubl
push
jg
mov
mov
and
movsl
sub
je
mov
nop
mov
adc
push
lahf
mov
mov
or
mov
fnstenv
and
jbe
popf
cmp
je
pop
dec
xlat
mov
jae
xchg
flds
mov
sub
xor
outsb
xchg
rcrb
dec
icebp
outsb
add
int3
cmp
movsl
xchg
ret
adc
jns
fdivrl
lds
nop
mov
mov
adc
dec
push
jae
xor
int
dec
push
xor
jmp
f2xm1
insl
mov
and
push
push
dec
push
add
pop
mov
bound
repnz
push
int3
sub
xchg
adc
or
rcl
xchg
jb
ds
xchg
xchg
sbb
sbb
fldt
or
ret
or
mov
jmp
cmp
mov
loopne
repnz
ret
inc
dec
pop
call
jg
inc
mov
mov
lds
lds
fldcw
push
push
pop
rcll
aas
dec
out
sti
in
mov
rcll
and
rclb
je
dec
xchg
and
aad
inc
mov
mov
dec
mov
out
lcall
sub
pop
sti
dec
mov
xchg
pop
mov
iret
dec
in
clc
stos
icebp
cmp
mov
cmc
sahf
or
mov
inc
push
cmp
sbb
mov
sbb
dec
icebp
mov
push
insl
mov
in
and
ds
js
mov
insb
shr
mov
mov
mov
aam
sbb
pop
insb
loopne
lret
xchg
push
hlt
adc
pop
loopne
mov
cwtl
mov
in
or
inc
lcall
lcall
rcll
shll
push
sub
adcb
cli
mov
adc
mov
aaa
test
addr16
daa
mov
lods
jle
mov
jmp
ja
mov
jb
sbb
sahf
imul
sbb
insl
data16
and
faddl
ljmp
pop
xlat
fdivp
int3
jnp
xlat
rorb
jg
aad
xchg
inc
hlt
mov
push
push
pop
and
pop
int3
addr16
xchg
cmp
dec
imul
lret
test
fiaddl
out
mull
fcmovnb
and
pop
pop
bound
jns
xchg
cmp
pop
ljmp
jns
lret
mov
or
push
inc
jle
addl
dec
test
cmp
mov
mov
addr16
or
sbb
repz
inc
mov
rorb
sbb
adc
scas
rcl
cltd
jo
inc
test
dec
das
aaa
mov
xor
ljmp
cmp
xchg
and
mov
and
jb
jo
add
out
movsl
test
xchg
cmp
int3
dec
cs
inc
add
jno
testb
test
lcall
ret
in
outsb
outsl
mov
into
repnz
loope
xor
pushf
cmpsl
test
jmp
lods
lcall
data16
int3
outsl
loop
fs
and
imul
xor
movsb
adcl
mov
jno
sarl
xor
or
add
stc
rorl
ficompl
in
mov
and
push
dec
outsl
enter
stos
mov
outsb
sbb
shll
jmp
or
mov
adc
add
aas
insb
icebp
arpl
pop
xor
sub
push
imul
mov
scas
pavgb
mov
mov
sahf
mov
mov
push
cmp
ja
cld
xchg
cmpl
aam
jecxz
lcall
loop
faddl
xor
xchg
jge
shll
enter
mov
out
xor
test
inc
gs
and
iret
pop
mov
adc
popa
inc
popa
push
in
ds
data16
add
jp
fs
jns
jnp
dec
daa
mov
or
sub
inc
aam
mov
fsubl
lods
cmp
dec
jmp
sub
or
sahf
pop
adc
adc
jg
lock
mov
lahf
cmc
add
sar
mov
jmp
fstps
mov
test
mov
jo
es
jp
xchg
aad
aam
jns
cs
test
xchg
sahf
pop
inc
xor
cmp
in
pushf
test
cmpl
test
dec
les
imul
pushf
mov
push
or
xchg
sbb
push
adcl
push
ret
lahf
mov
sbb
ds
test
cltd
cmp
pop
jne
cmpb
push
mov
popf
aam
int
or
mov
mov
push
cmp
mov
pop
jge
sarb
or
or
hlt
imul
pop
xor
xor
pop
jb
cltd
mov
lods
or
cmp
test
shll
jmp
cld
sub
and
xchg
stos
mov
xchg
int
mov
and
pop
lea
adc
fwait
test
leave
aas
mov
push
pop
push
inc
sahf
push
and
outsb
dec
cmpsb
roll
pop
sub
and
pop
sub
imul
push
vpsadbw
or
sbb
popf
xchg
push
push
enter
scas
push
je
or
loope
jmp
bnd
mov
mov
insb
push
dec
mov
out
aam
inc
xorb
pop
fwait
cmp
adcl
insl
stos
mov
push
aad
outsl
xchg
lods
jle
in
mov
sub
mov
mov
inc
xchg
in
in
lea
add
notl
and
jmp
mov
jbe
jp
mov
sub
std
subb
mov
push
repnz
adc
sbb
push
flds
mov
xchg
or
jo
incl
ljmp
adc
popa
inc
hlt
gs
sbbl
fwait
inc
cmpsb
loopne
xchg
inc
adc
dec
jg
mov
outsb
push
add
mov
cmp
jmp
push
ds
lcall
cmp
leave
shr
or
add
std
or
cld
sbb
ss
int
sub
jnp
fdivrs
dec
loop
int3
out
pop
fs
cwtl
fidivrs
mov
pop
test
push
push
push
fstpt
push
xor
loopne
mov
cmp
sub
in
fistps
in
dec
enter
in
add
add
push
and
xchg
fcoms
clc
mov
xchg
jb
sub
int3
mov
lods
fnstenv
mov
rclb
sbb
fdivp
jb
aam
push
or
mov
or
mov
cs
push
inc
push
inc
jno
cwtl
cwtl
dec
adc
lcall
mov
daa
repz
sbb
xchg
push
cmp
sbb
sub
in
std
repnz
in
or
fidivrl
jg
les
fistpll
sub
inc
cmpsl
repnz
ja
addr16
jae
pop
mov
mov
cmp
arpl
inc
sub
imul
cmp
xchg
add
mov
test
test
pop
mov
out
mov
loope
inc
stc
lds
mov
fcmovu
dec
sbb
add
sahf
aaa
sbb
mov
fdivrl
dec
dec
add
mov
push
or
sar
dec
fnstcw
mov
mov
mov
dec
imul
ds
add
jo
push
shrl
gs
scas
test
aaa
xor
and
cmp
push
mov
aaa
push
js
push
dec
stc
or
out
add
movsl
leave
pop
adc
hlt
mov
rorb
or
nop
or
pop
jno
dec
sahf
mov
cmp
mov
pusha
mov
dec
mov
xchg
ss
aas
add
int3
adcl
or
xchg
sbb
aad
xor
or
loop
cmp
insb
or
dec
cs
and
sbb
hlt
jge
pop
out
mov
xor
dec
inc
jbe
cmc
lock
stos
out
test
sub
gs
inc
adc
dec
inc
sahf
or
ret
push
xchg
mov
sar
dec
stos
cmpl
push
hlt
and
sarl
jbe
insl
imul
pushf
push
lock
mov
inc
xchg
add
xchg
or
sbb
pop
mov
mov
js
xchg
loop
mov
iret
inc
arpl
adc
push
pop
jnp
push
mov
dec
bound
or
hlt
pop
sbb
loope
inc
jne
or
jbe
sub
mov
faddl
je
cmpsl
lret
cmp
xor
sarl
mov
mov
dec
out
cmp
jl
mov
push
mov
insb
fwait
ret
in
pop
jecxz
call
cmpsl
imull
dec
dec
push
mov
insb
sub
jmp
loope
fidivl
sub
adc
pop
inc
pop
out
xchg
xor
and
and
mov
fldenv
mov
icebp
add
sub
xchg
scas
popa
jle
adc
dec
cmp
add
inc
insl
repnz
ficomps
inc
inc
dec
fwait
sahf
cmp
aas
mov
sarl
test
lahf
add
pop
fcomps
ja
mov
fimuls
lahf
ds
mov
hlt
inc
push
int3
mov
scas
fnsave
nop
aas
pop
sbb
sub
jo
push
popf
data16
iret
daa
xchg
sbb
js
lea
inc
xchg
cmp
and
add
jle
xor
dec
push
push
push
pop
testb
jae
push
cmp
mov
bound
sti
repnz
add
leave
lea
movsb
sub
add
push
test
in
push
lods
and
sub
stc
dec
ss
fdivs
loop
ret
stos
in
cmc
ljmp
mov
inc
mov
mov
subl
mov
addb
xlat
mov
push
out
dec
icebp
or
jmp
je
aaa
jno
dec
sbb
stos
add
pushf
clc
sbb
loop
mov
mov
adc
imul
pop
xchg
pop
cltd
jo
inc
mov
std
cmp
mov
test
sbb
div
jl
sbb
das
mov
ljmp
xor
adc
ret
insl
es
pop
xchg
test
sarl
add
xchg
daa
or
push
out
pop
je
jecxz
or
loopne
xor
or
fcmove
lcall
sbb
repz
sub
cli
xchg
outsb
sbb
iret
aam
dec
or
jg
inc
push
int3
scas
es
mov
add
aad
loopne
aas
cwtl
or
icebp
jns
stos
jmp
or
push
mov
int
lret
jle
sub
sbb
loop
jnp
push
and
int
or
aad
js
jle
lcall
push
test
arpl
insb
jae
push
xor
adcb
xor
jge
je
inc
jns
push
outsb
xchg
test
xor
jo
test
arpl
mov
adc
sti
aam
sarb
mov
lds
xlat
pushf
lods
push
lahf
dec
hlt
jno
sarb
rol
std
sub
jae
add
repz
dec
movsl
push
dec
lret
ds
inc
shrl
es
cmovb
dec
xchg
jl
mov
mov
cs
fwait
shlb
push
add
dec
inc
pop
xlat
repz
movsl
lret
mov
hlt
fwait
pop
ss
mov
call
push
bound
push
dec
es
sbb
cmc
mov
imul
aas
lock
int
push
test
int
and
push
in
outsb
pop
fsts
inc
inc
nop
pop
js
fcoms
mov
push
jne
sub
stos
inc
mov
xchg
icebp
mov
mov
pop
xchg
mov
aam
scas
imul
lea
call
cltd
shll
fstpt
incb
xchg
iret
mull
aam
ljmp
mov
out
fidivl
ds
sbb
adc
dec
xlat
popa
mul
mov
xchg
jo
add
mov
in
sub
in
xchg
xor
push
sbbl
cmc
mov
sub
fmuls
repz
and
stos
ret
mov
jle
mov
xor
insb
push
cli
mov
or
adc
imul
stos
outsl
fldt
cmp
sbb
in
and
stc
pop
xchg
jge
gs
or
in
mov
cmpsb
ljmp
sahf
insl
call
bound
pop
add
sbb
mov
or
leave
pushf
dec
or
mov
sub
jae
fdivr
adc
insl
xorl
lcall
fsubrs
iret
pop
jmp
mov
scas
leave
mov
push
insl
leave
mov
lds
push
xor
pop
xlat
push
mov
mov
fildl
xor
lods
int
in
sub
sbbl
mov
sub
pop
push
mov
add
cmpsb
push
popa
in
pop
js
push
shrl
push
mov
js
cli
ret
mull
cmp
imul
je
pop
cmp
jo
sbb
mov
addr16
mov
cli
sbb
cmpsb
movl
fsincos
les
cmpsb
clc
mov
jp
xor
in
push
mov
mov
xchg
lock
stc
add
in
je
in
test
mov
mov
insl
ret
mov
sub
jbe
push
fisubs
dec
pop
cmp
lock
mov
mov
xor
inc
icebp
mov
sahf
lea
mov
xorb
xlat
pop
sbb
inc
inc
fcoml
xlat
scas
cmc
dec
fbld
jecxz
xchg
fadds
or
rorb
out
and
adc
adc
aam
test
roll
mov
fcoml
jmp
push
xor
gs
scas
jecxz
and
arpl
cmp
pop
pop
push
nop
mov
std
xchg
rolb
xchg
jle
decb
cltd
pop
mov
jecxz
mov
dec
push
jl
cmp
dec
and
or
jno
xchg
cmp
out
add
bound
repnz
mov
mov
mov
inc
mov
jl
mov
jno
imul
fwait
sahf
mov
or
incl
mull
jmp
pop
xchg
call
mov
mov
cmp
jge
gs
test
mov
xchg
mov
pop
jo
hlt
xchg
das
pusha
test
pop
and
je
ficompl
hlt
test
dec
popa
mov
ret
xchg
xlat
push
test
in
jno
xchg
dec
imulb
aad
push
lock
mov
and
xor
cltd
lcall
xor
xchg
mov
test
cmp
sbb
add
or
rolb
imul
sbb
inc
jp
and
loop
jle
xor
clc
pop
bound
outsb
call
iret
lret
add
adc
test
outsb
data16
pop
bound
mov
subb
fdivrl
jnp
iret
pop
fbld
andb
addr16
sbb
fcmovne
xor
mov
popf
push
lcall
sbb
jmp
cmp
scas
call
xor
fcmovb
fsubp
in
mov
mov
xchg
pop
popa
fdivrp
mov
jns
nop
dec
outsl
xlat
jl
shll
dec
fisttpll
out
stc
icebp
cmp
loop
mov
scas
fsubr
loopne
dec
pop
mov
pop
cmp
pop
idivl
in
or
mov
mov
cmp
cmp
pushf
mov
sub
mov
loopne
mov
pop
pop
add
and
clc
xlat
cmp
cmpl
cmc
or
cmp
and
add
mov
loope
xchg
sub
stc
mov
outsl
add
adc
jp
je
imul
insl
and
mov
mov
fxch
xchg
sti
aas
cli
mov
xorl
adc
icebp
pop
sbb
mov
add
jge
xchg
push
shll
or
call
test
test
adc
iret
scas
test
out
and
daa
adc
insb
pop
mov
cmp
xchg
movsb
sub
mov
mov
lods
sub
fsubs
clc
push
stos
les
pop
pusha
xchg
mov
jnp
lahf
fisubs
adc
xor
add
xchg
in
dec
jge
es
insl
lcall
adc
dec
push
xlat
outsb
aad
mov
cmpsb
xchg
stc
or
std
iret
shll
and
pop
lcall
insl
js
pop
aad
push
cmp
push
das
sti
stc
or
lods
push
bound
mull
pop
push
mov
xchg
cmp
clc
xor
inc
cmpsl
xlat
insb
rorl
ffree
push
cltd
mov
sbb
insl
xchg
bound
bound
cwtl
push
pop
out
inc
or
repnz
jbe
dec
xchg
scas
mov
enter
cmp
clc
mov
ljmp
stos
sbb
push
xchg
push
sbb
lcall
sub
inc
push
cli
mov
aaa
pop
mov
pop
sbb
aad
test
cwtl
adc
jb
sub
out
adc
mov
out
add
jne
cmc
inc
xorl
push
xlat
jo
and
push
add
pop
sete
push
add
shll
negb
clc
pop
das
jle
loop
imul
mov
xchg
adc
ja
jge
adc
mov
ja
xor
pusha
mov
adc
xchg
add
inc
xor
aaa
mov
shr
rorl
iret
sbb
negb
mov
xorl
repnz
cmpsb
addl
je
ficomps
aad
xchg
and
mov
and
lods
lahf
xchg
push
add
and
jle
and
leave
push
mov
cmp
sahf
cmp
movsl
push
sub
lds
call
pushl
jg
push
and
pushf
nop
fistpll
aas
fs
cmpsl
dec
inc
mov
loopne
data16
inc
xchg
xor
bound
rcll
lcall
sub
fsubp
pop
movsl
or
les
mov
rcr
push
das
add
jbe
sahf
or
and
or
loop
mov
rorl
ficoms
movaps
cs
fisubrl
dec
jp
das
loope
inc
jne
or
aas
out
xor
iret
pop
cmc
adc
cmp
test
or
mov
jge
jo
jl
pusha
sub
inc
jecxz
pop
jo
sbbb
adc
cmp
js
cli
xor
push
loopne
push
xchg
inc
cs
push
mov
adc
sub
lock
lock
xor
jg
cmp
sbb
jl
lret
es
mov
outsl
daa
popa
adc
sbb
push
cmc
mov
jnp
cmp
dec
sub
ret
icebp
testb
sub
sbb
rorl
add
cmp
aad
stc
push
and
jnp
in
daa
je
fcompl
insl
mov
cmp
or
cld
pop
adc
enter
clc
cld
mov
popf
in
outsb
es
mov
pop
test
xor
xor
mov
xchg
xor
cs
sub
aam
insb
daa
pushf
xchg
fwait
scas
movsl
int3
loope
adc
pop
or
inc
pop
cmp
fcomp
jno
jg
jns
sbbb
mov
dec
or
into
int3
gs
push
xchg
cwtl
adc
push
mov
mov
lock
cld
enter
push
sub
pop
jno
subl
sahf
fnsave
fidivs
push
xlat
push
idiv
mov
jecxz
mov
repz
ss
xchg
or
sub
dec
imul
mov
out
icebp
test
sahf
sti
or
lahf
pushl
push
imul
cmp
nop
js
stos
insl
subb
loope
cs
enter
dec
pushf
or
cltd
add
push
xchg
dec
xor
movsb
popa
lea
cmp
test
or
mov
stc
or
mov
cmp
xor
test
cmp
add
cmpsb
mov
add
add
xor
cmc
or
inc
cld
pop
mov
mov
mov
cmp
outsb
pop
push
popf
mov
bound
out
adc
mov
push
fcoms
leave
inc
cltd
or
add
sub
xchg
push
aam
mov
push
sub
pop
add
jno
dec
jmp
cmp
cmpsb
repz
scas
fstpt
dec
pop
and
cmpsb
outsb
cld
or
fdivrs
push
out
rclb
or
je
sbb
hlt
out
mov
stc
ja
push
loope
das
ror
out
test
fstpt
mov
push
cmp
les
push
pop
sub
out
loopne
imul
jecxz
das
pop
cmpsl
int3
adc
jge
cmp
aaa
or
jno
pop
dec
stos
nop
jo
imul
stos
and
rorb
pop
int
movsb
je
push
mov
arpl
mov
insb
rorl
lret
inc
test
pop
cmp
sub
imull
xchg
mov
arpl
and
bound
push
shll
sahf
and
cltd
bound
into
sub
push
jbe
insl
jns
mov
jnp
sub
mov
mov
jle
mov
rclb
leave
fdivrp
push
daa
mov
mov
scas
mov
cmp
repnz
lods
daa
mov
xorl
mov
mov
or
dec
add
int
jns
repnz
add
jg
mov
shrb
cmp
lret
xor
sbb
insl
push
rcr
mov
std
sub
cld
shlb
sbb
out
mov
mov
loop
ret
and
into
stos
add
std
into
dec
push
sub
and
pop
adc
hlt
jp
icebp
movsb
mov
adc
loop
mov
sar
cli
and
int
adc
adc
cs
test
xchg
loope
adc
mov
dec
test
and
rorb
popa
inc
cmp
inc
dec
dec
and
push
add
and
sub
frstor
test
insl
lock
mov
sbb
jno
lcall
leave
ds
cmp
clc
mov
pop
lret
fisubrl
repz
mov
das
sub
or
xlat
mov
dec
dec
jnp
out
push
mov
mov
add
jns
xchg
getsec
mov
mov
je
orl
mov
pop
jo
rcrl
xchg
ret
xchg
dec
cmp
daa
punpckhdq
daa
es
fisubrl
in
fnstcw
sti
and
adc
ljmp
push
sbb
incb
ret
inc
cltd
fnstsw
std
and
cltd
test
insb
rorl
xor
pop
add
icebp
test
pushf
es
outsl
cmpsb
push
and
ret
subl
and
mov
inc
test
movsl
popa
sub
add
sub
pop
loope
add
cwtl
xlat
cli
out
push
fidivrs
imul
dec
outsb
adc
xchg
and
mov
push
fimuls
cmp
add
filds
fcomps
push
mov
lcall
shrl
and
mov
jne
cmc
dec
jp
in
sbb
repz
movsb
dec
lods
mov
iret
adc
add
andb
ja
xchg
enter
xor
sbb
les
pop
shrb
clc
sub
or
int3
add
xor
stos
adc
jbe
repnz
inc
mov
lret
adc
hlt
push
and
mov
xor
outsb
sbb
xchg
push
repz
repz
or
or
add
in
incb
mov
pop
lea
mov
mov
jne
lods
test
repz
xchg
arpl
jbe
adc
popa
and
fmull
dec
shl
adc
mov
cmp
jb
sub
mov
outsb
or
add
mov
xor
daa
jge
jecxz
cmp
and
pop
dec
mov
push
xchg
in
imul
ljmp
xchg
push
daa
pop
dec
aam
adc
adc
shl
push
nop
xor
sbb
adc
int3
add
add
fs
shrb
mov
and
dec
sub
lea
cmp
pop
dec
fisubs
xchg
inc
jnp
mov
sbb
and
leave
test
mov
and
scas
outsb
fists
mov
cld
adcb
inc
and
rcrb
stos
add
and
outsb
lret
cmp
rcrl
fisubl
mov
aas
std
ss
call
test
push
daa
ret
pop
xlat
mov
test
call
adc
add
ret
xor
xor
add
xor
fwait
pop
dec
imul
movsl
jns
dec
cmp
sbb
lods
and
icebp
pop
mov
push
jmp
insb
sbb
int3
mov
mov
lret
jns
movsl
cmp
dec
ljmp
jno
lock
jmp
mov
mov
push
rcrb
movsb
xchg
push
mov
or
or
jnp
das
hlt
add
seto
lahf
mov
sti
das
insb
push
xchg
iret
sahf
adc
stc
adcl
js
mov
jge
stc
movsb
adc
inc
pop
lods
icebp
cmc
or
mov
jl
pop
xor
sub
fwait
or
bound
mov
icebp
inc
in
add
les
lock
daa
xchg
inc
pop
cmpsb
mov
lahf
outsl
inc
push
cmpl
test
add
lea
adc
add
push
in
dec
fs
addr16
xor
out
fsubrl
mov
push
jo
push
scas
popf
fs
jge
lcall
movsb
inc
fdivr
adc
clc
jp
insl
bound
rcrb
loopne
ficomps
lret
lcall
lock
test
fldl
inc
scas
and
rcr
jp
add
jge
inc
mov
divb
pop
adc
dec
sbb
push
dec
pop
sahf
lret
xchg
faddl
sti
push
stos
add
add
xchg
mov
adc
inc
cld
adc
jmp
jbe
mov
daa
mov
and
sahf
ss
sarb
push
in
xor
imul
into
jecxz
setb
movsb
call
rcll
ss
scas
mov
in
mov
cmp
std
rorl
fstl
lock
inc
mov
pushf
jo
cmp
scas
dec
out
aad
xchg
push
push
ficoms
sub
lds
sar
aam
mov
lcall
sbb
cmp
mov
xchg
imul
popl
sub
sbb
pop
lods
mov
outsb
mov
int
dec
pop
or
push
or
xor
and
add
aas
push
in
jecxz
xor
inc
testb
sbb
gs
jge
dec
ja
cli
clc
icebp
pop
lods
adc
mov
push
out
xchg
cld
movsb
es
push
ljmp
pop
pop
adc
lcall
mov
jecxz
lahf
pop
mov
mov
dec
aaa
cmpb
cmp
mov
les
pop
inc
lods
push
dec
daa
xorb
int
add
and
cmp
ret
dec
xor
mov
insb
sub
pop
fs
push
dec
sub
pop
cwtl
mov
inc
or
icebp
das
jns
add
in
popf
pop
add
xor
dec
mov
jns
push
cwtl
jbe
jne
sbb
sub
add
adc
into
cltd
dec
movb
test
insl
sbb
js
lret
or
adc
mov
pop
jg
in
out
ja
daa
xchg
std
lds
test
jbe
leave
test
aas
loopne
jo
popa
jl
jnp
xchg
cmp
loope
aaa
jmp
mov
dec
repnz
push
sub
mov
xchg
in
leave
stc
loope
add
stos
pop
dec
sub
mov
mov
pop
push
int
int3
and
push
aaa
jp
dec
push
xor
xchg
not
jne
dec
jmp
rorl
or
jmp
or
insl
sbb
dec
xchg
aam
cld
sbb
cmc
lods
cmp
call
pop
dec
pop
leave
jb
mov
aas
iret
loopne
pop
gs
sub
xor
loope
xchg
dec
inc
inc
in
ss
fisttpll
jecxz
loopne
adc
sub
sbb
adc
shr
lods
xchg
jno
loope
push
jnp
orl
adc
stos
pop
mov
adc
jmp
pusha
mov
pop
lods
jno
add
lret
cmpsb
xor
push
fxam
cmp
lock
push
iret
je
xor
cli
in
call
pop
pop
sub
mov
mov
int3
in
les
loop
lret
xor
movsb
inc
outsb
mov
jmp
cwtl
les
shrb
adc
cmp
mov
hlt
inc
bound
mov
xor
ja
test
shll
fisttpll
jae
std
data16
cltd
sbb
push
push
sar
test
movsl
aam
mov
push
and
add
mov
data16
jmp
sti
insb
and
push
out
dec
cmp
mov
or
adc
pop
adc
adc
adc
fs
lcall
mov
sbb
pusha
and
jae
ror
or
das
iret
lahf
in
jmp
dec
jb
jnp
andnps
xor
sub
rcrl
dec
test
cmc
inc
leave
lds
mov
cmpsb
test
rolb
jge
js
int3
dec
bound
out
movsl
hlt
dec
sbb
cwtl
outsl
push
mov
adc
mov
outsl
leave
xor
adc
dec
cmp
cmp
mov
lea
inc
adcl
filds
std
stos
sbb
mov
rcl
roll
mov
xlat
or
mov
pop
sub
ffreep
outsl
xor
mov
call
in
adc
jbe
popf
xor
sbb
out
decb
mull
cmp
out
or
push
mov
adc
dec
xchg
hlt
add
cmp
mov
mov
fwait
addr16
outsb
mov
pushf
xchg
aam
adc
aam
lock
dec
xchg
adc
popf
repnz
xchg
xor
imul
in
lahf
testb
pop
pop
mov
jle
lret
xor
or
fsubs
jno
lds
inc
data16
gs
lods
pop
dec
mov
add
jecxz
ds
jmp
push
lds
xor
and
cltd
out
arpl
lret
pop
add
dec
and
sbb
inc
repz
add
inc
lahf
xchg
push
mov
mov
in
imul
jne
xchg
fucomp
subl
pop
sub
adc
mov
and
cmpsb
cmpsl
shll
out
test
xor
xchg
sbb
hlt
inc
and
xor
fmuls
xchg
or
mov
mov
dec
hlt
fdivrs
movsb
icebp
pop
pusha
mov
gs
push
pop
stos
mov
xchg
aam
mov
push
out
mov
adc
cs
xchg
or
lock
popa
in
inc
into
outsl
inc
add
popa
ljmp
mov
mov
pop
daa
shll
enter
dec
stos
mov
shl
cs
mov
pop
jmp
pop
push
cld
call
mov
dec
xor
push
loope
cltd
xchg
dec
adc
cmp
imul
scas
cmp
es
sub
or
mov
aas
jbe
add
int3
jge
aad
mov
cld
push
mov
xchg
dec
out
inc
nop
and
scas
out
mov
ret
jle
cmp
cwtl
cmp
mov
addb
lods
iret
or
inc
rorl
sbb
xchg
cmp
js
mov
xor
pop
sbb
daa
dec
xchg
ss
in
inc
mov
ret
leave
xor
test
pop
das
mov
imull
dec
cld
pop
addr16
jb
lock
dec
adc
push
push
cmp
mov
lahf
pop
sahf
call
ja
test
daa
cmc
rorb
movsb
pcmpgtd
pop
in
pop
sti
inc
mov
mov
div
iret
add
mov
shll
lods
lahf
pop
sbbb
aas
maxps
iret
push
shlb
add
movsl
aas
subb
mov
xchg
outsl
cwtl
jno
or
adc
imul
lds
xchg
dec
subl
and
pop
xchg
mov
jl
inc
lea
adc
es
cmpsb
enter
xchg
add
lea
mov
jo
inc
adc
testb
mov
add
jle
arpl
insb
xchg
hlt
loopne
out
cmpb
push
xor
mov
mov
sbb
inc
sub
rorl
xchg
ss
repnz
rcrb
xor
enter
mov
repnz
pop
subl
dec
inc
lcall
fldl2e
stc
mov
ret
movaps
jg
pop
orl
cmpl
and
lock
dec
dec
sar
das
je
xor
or
leave
jno
add
inc
mov
popa
or
js
addr16
gs
pop
cmp
arpl
lcall
loop
mov
or
test
sub
cmpsb
jle
inc
dec
inc
pusha
xlat
cmp
hlt
repz
pop
bound
pusha
out
pop
stc
lcall
dec
pop
pop
pushf
mov
sbb
jg
dec
mov
outsl
shll
xor
cli
or
dec
xor
sahf
xlat
mov
mov
iret
popf
movups
cli
jb
push
mov
ljmp
test
or
jno
dec
mov
insl
pop
les
push
add
mov
lret
out
lcall
aaa
imul
dec
hlt
outsb
jbe
addb
cmc
pop
pop
pop
sbb
fstp
insb
sbb
lret
or
xor
aad
sub
mov
sarb
push
jecxz
in
dec
cmp
aaa
ja
jl
adc
adc
fsts
and
dec
out
stos
fistpl
mov
push
xlat
inc
pop
inc
hlt
leave
jl
cwtl
inc
adc
adc
insl
ds
cmp
ror
scas
xchg
in
mov
xor
into
sub
negl
xor
cs
repnz
or
jno
pop
fisubs
xchg
in
loope
xor
sub
or
mov
movsb
gs
pop
push
inc
iret
orl
jno
cmc
xchg
xchg
or
ljmp
jle
mov
pop
cmp
in
lds
js
dec
testl
popf
lahf
sbb
movsl
roll
mov
dec
jno
test
mov
push
xchg
fdivrs
jmp
insl
stos
jbe
jae
loope
push
xlat
push
and
and
push
pop
jmp
je
push
insl
shrb
push
imulb
ljmp
outsb
arpl
shrl
dec
xchg
add
xchg
je
idivl
mov
push
adc
js
mov
pop
add
out
stc
push
ja
xor
cltd
aaa
inc
push
fs
or
xchg
lret
in
xor
in
sbb
ljmp
fwait
jge
and
xchg
adc
out
rorb
inc
sbb
into
mov
add
pop
sbb
mov
push
dec
stos
pop
lret
mov
mov
fnstsw
pop
cmp
out
arpl
out
fs
xchg
add
iret
mov
pop
ljmp
fadds
repz
mov
push
dec
fstpl
jl
mov
or
xchg
cmp
aad
jne
lret
sub
jne
sarb
inc
lahf
pop
xchg
idivb
in
pop
sub
inc
push
loope
enter
pop
cmp
ja
ss
sbb
sbb
leave
scas
daa
lock
push
in
fwait
inc
movl
mov
sbb
jb
dec
lahf
aam
sub
pop
adc
cmc
or
adc
jge
insb
in
mov
stos
les
sub
sub
cwtl
repz
inc
jo
cld
jno
jmp
xchg
add
pop
adc
nop
lods
jge
xor
fistpl
jo
jnp
mov
in
xor
call
mov
int
pop
adc
rol
shlb
ret
push
sbb
fistpll
repnz
and
les
nop
insb
jmp
into
loope
out
andb
pushf
pusha
mov
push
fsubs
repnz
inc
xchg
fimuls
mov
dec
scas
cmpsb
push
mov
cmp
and
aam
out
push
in
movsb
inc
nop
test
fisubrs
xchg
imul
frstor
pop
dec
mov
push
cltd
mov
add
ss
cmp
sbb
fsubrl
pop
mov
xor
add
xor
clc
sbb
xor
in
mov
aam
jae
repnz
out
cmp
adc
jmp
and
icebp
lods
into
dec
cmp
negb
adc
cmp
push
push
out
pusha
mov
mov
pushf
cmp
cltd
lods
in
scas
mov
push
push
inc
push
and
repnz
xor
pop
cmp
cli
mov
data16
inc
jge
sbb
mov
pop
rcrl
mov
mov
mov
adc
dec
push
popa
xchg
in
pop
outsb
inc
pushf
push
add
shrb
mov
movsl
fidivrs
lret
pop
std
out
hlt
test
pop
xor
and
jns
push
xchg
call
jno
vpshlw
stos
push
xchg
ret
js
lcall
inc
jmp
push
jl
divb
sbb
and
push
push
fldenv
sahf
leave
in
fsubs
enter
adc
arpl
xchg
xchg
mov
add
ret
aam
adc
sub
jl
dec
insl
mov
and
addr16
inc
ret
dec
add
cmp
out
gs
sub
sbb
loopne
jno
testl
aad
push
fucom
xor
and
xchg
jns
xchg
int
sbb
mov
inc
or
add
mov
pop
in
aam
push
sbb
push
push
pop
ss
jle
loope
dec
cmp
sbb
imul
inc
inc
mov
fwait
mov
sahf
dec
xchg
icebp
dec
and
fxch
xor
pushf
adc
jns
repz
es
in
pop
movsl
dec
inc
mov
xchg
xchg
cmpsl
jne
xchg
stc
lret
gs
cwtl
notl
sahf
push
call
sbb
sub
jnp
add
adc
mov
in
sahf
insb
mov
lret
je
mov
sub
push
cltd
adc
lcall
in
xchg
fsubl
out
or
scas
sub
mov
and
out
jp
popa
sbb
mov
sub
cmp
inc
mov
fistl
ficoml
xchg
aad
sub
pop
aad
mov
dec
fadds
jp
push
outsl
pslld
adcb
push
push
cltd
add
jg
insb
lock
mov
mov
sbb
negb
sbb
test
les
xchg
stos
push
adc
ds
or
inc
scas
mov
cmp
dec
arpl
cs
sub
sbb
cmpsl
daa
shl
out
cmp
insl
into
clc
pop
cli
lahf
gs
dec
stc
push
mov
mov
push
fwait
jge
shlb
dec
xchg
or
pop
imul
or
or
inc
and
xchg
into
dec
in
es
push
cmp
and
sub
cmp
mov
insl
ljmp
loopne
sub
push
lea
cmp
test
adc
add
mov
mul
iret
pushf
rcll
stc
pop
push
int3
xor
data16
hlt
rolb
out
adc
hlt
inc
xchg
sti
cwtl
out
and
and
repnz
jecxz
pop
insl
leave
jne
cmp
pop
int
jecxz
xor
mov
lds
and
xchg
aad
cmpsb
ds
push
scas
push
mov
jno
adc
push
sub
scas
sbb
xchg
add
popf
add
fdivrp
dec
sarb
repz
in
pop
mov
test
add
mov
jge
testb
in
imul
dec
sbb
dec
pop
xchg
or
mov
and
inc
in
bndstx
jecxz
in
stc
or
push
cmc
jnp
in
lock
xchg
das
xlat
loopne
cmpb
notl
mov
xor
lds
jmp
aaa
icebp
je
cmc
dec
push
jmp
sub
lods
mov
inc
es
test
or
pop
pushf
out
sub
push
mov
jae
shll
out
cmc
notl
ret
pop
xor
mov
dec
loope
xchg
aaa
inc
sub
les
mov
stos
pop
mov
mov
and
shr
jg
js
test
daa
aad
or
decb
cmpsl
ret
jae
sahf
mov
jnp
mov
clc
pop
sbbb
lcall
pop
jne
and
lret
push
fs
pop
std
and
lods
scas
jno
lods
mov
pushf
sbb
aam
cmpsl
push
stc
or
enter
push
rcrl
pop
cltd
push
push
pushf
test
xchg
cmp
push
jl
lods
leave
lods
xchg
ret
adc
jno
mov
cld
pop
inc
mov
jne
movsl
fwait
push
loopne
fmul
sub
popa
xor
push
pushf
adc
dec
pop
adc
mov
insb
adc
push
pop
movsb
or
loope
popa
sti
jecxz
mov
fdivrp
ret
jbe
cmc
jmp
popf
sbb
push
jbe
mov
ljmp
adc
adc
push
lahf
sbb
or
xchg
mov
inc
out
dec
faddl
imul
es
pop
xchg
enter
stc
push
popa
sub
in
dec
add
and
clc
lret
push
xchg
loopne
imul
aaa
cld
in
je
hlt
bound
jmp
mov
rcr
jns
jne
jmp
add
into
jb
sub
mov
pop
xor
push
movsl
popa
leave
adc
add
cs
imul
cltd
imul
jbe
pop
in
cli
cli
nop
lods
xchg
out
dec
daa
adc
push
xor
adc
sub
cmp
loop
xchg
fdivs
pop
lea
mov
aas
incl
push
loopne
ja
add
idiv
inc
cmp
loop
outsl
add
jns
enter
mov
jnp
fwait
icebp
mov
adc
aaa
sub
mov
push
scas
or
adc
push
mov
stos
jg
pop
clc
aam
mov
adc
mov
cmpsl
into
add
out
sub
shlb
mov
stc
dec
jae
inc
and
or
hlt
insl
jnp
and
call
nop
jae
sbb
dec
lret
enter
mov
dec
pop
mov
sbb
jo
xor
mov
mov
dec
push
divb
sbb
test
iret
imul
pop
mov
fcmovnb
sti
sub
jmp
cli
mov
mov
fistl
out
inc
test
mov
push
add
rclb
fsubrs
js
cmp
dec
inc
pop
out
inc
or
xchg
sbb
mov
adc
xor
adc
add
add
cmp
jne
dec
inc
mov
inc
jge
stos
mov
clc
scas
xchg
mov
das
fsts
push
xchg
fcomps
mov
xchg
dec
ffreep
jbe
in
aaa
add
jae
push
leave
push
test
dec
xor
sbb
mov
add
xor
shll
jmp
nop
fimull
gs
aas
add
cmpsl
fwait
ret
pop
fsubrs
mov
cmp
ljmp
ja
cld
dec
and
arpl
mov
mov
out
xor
js
or
out
mov
jge
xor
movl
imul
in
into
dec
out
bndldx
sti
cmpsl
xchg
push
mov
arpl
data16
rorl
sub
mov
mov
jl
mov
adc
cmc
int3
mul
mov
rclb
test
push
cmpb
bts
inc
bnd
push
arpl
mov
adc
pop
jecxz
xchg
cmpsb
mov
str
mov
pusha
mov
mov
sti
mov
push
pusha
inc
imul
rcrb
cmp
sub
and
inc
dec
inc
sub
test
xor
xor
cmp
daa
mov
hlt
add
cmp
sbb
sub
sbbl
dec
jae
and
scas
dec
cwtl
addr16
ljmp
adcb
cmpsl
sub
rcll
cmpsl
pop
xchg
lods
mov
or
movsb
sbb
out
ret
sub
lcall
fsubl
and
dec
es
mov
xchg
out
jno
sbb
push
inc
nop
add
sbb
xor
cmp
xchg
insb
jae
loope
adc
out
mov
sahf
and
dec
lods
dec
xchg
pop
dec
xchg
stos
fwait
mov
xor
xor
xor
xor
or
xor
push
movntps
push
and
loopne
mov
fstl
jmp
adcb
push
subl
outsl
add
cmp
pop
rcr
aam
dec
mov
lcall
es
fldpi
popf
jno
into
mov
je
loope
out
add
mov
in
or
or
popf
jecxz
push
lds
aad
loopne
cmpsb
test
sbb
adc
and
setne
cmp
xor
mov
test
outsl
and
sub
push
loop
cwtl
add
xchg
hlt
loope
stc
mov
inc
mov
sub
dec
jo
jne
imul
out
or
cmp
jb
sub
test
adc
pop
sub
cmp
xchg
addr16
addr16
ret
rcrl
int
pop
sub
push
call
add
pop
mov
or
mov
and
inc
xor
push
out
jmp
pop
xchg
pop
sbb
push
lret
mov
dec
fadd
push
fwait
xor
mov
xchg
test
addl
std
add
adc
in
pop
mov
push
dec
bound
xchg
mov
jnp
in
ds
xchg
in
imulb
dec
inc
dec
mov
cld
cmp
outsb
es
mov
inc
mov
xchg
out
xchg
cmp
mov
push
jo
inc
jg
mov
mov
loop
andl
fdivrp
sub
push
js
iret
std
and
std
mov
stos
int3
les
sbb
bound
scas
and
xchg
stc
sbb
xchg
push
jns
xchg
jno
leave
ret
ss
push
loope
repnz
inc
xorl
xlat
dec
ret
jg
cmp
insb
repnz
inc
inc
ret
arpl
in
cmpl
outsb
push
sarb
sahf
jmp
and
call
leave
rclb
xchg
xchg
xchg
xor
rorl
push
push
int
push
fisubrl
call
and
push
adc
or
addl
int3
jecxz
push
out
sub
cltd
push
push
test
inc
cltd
lods
aam
push
mov
call
subb
fs
and
jo
test
sbb
push
nop
pop
fistpl
or
add
leave
loopne
sub
pop
add
fsts
les
iret
bound
sbb
dec
sub
inc
shlb
inc
dec
pop
jl
lods
mov
push
or
and
and
sti
aas
sbb
jmp
ljmp
mov
sbbb
xor
nop
pop
adc
out
hlt
ret
push
sti
in
push
das
test
jg
ds
dec
into
cs
inc
jmp
ljmp
sbb
sub
adc
push
jmp
scas
fwait
neg
outsb
push
lcall
test
mov
lds
pusha
jle
scas
sbb
add
mov
pusha
jg
sti
jbe
or
repz
cmpsb
test
lds
arpl
pop
and
ljmp
sub
sti
icebp
pop
subb
inc
push
aad
icebp
sbb
pop
sub
sbb
jg
or
push
dec
mov
cmpsb
sahf
enter
daa
out
sahf
scas
pushf
les
fldenv
hlt
sub
mov
mov
sbb
add
int3
in
adc
outsb
outsb
jbe
push
das
mov
xchg
dec
mov
movsb
scas
fsubrs
iret
insl
pop
mov
lret
nop
pop
push
stc
pop
add
mov
je
push
inc
ret
gs
movsl
jge
and
mov
inc
cmp
pop
je
push
jbe
fs
mov
iret
jl
push
out
xor
jo
insl
xor
hlt
daa
mov
outsl
jl
add
jmp
clc
or
jl
inc
insl
js
pushf
in
sbb
inc
inc
inc
sbbb
mov
sbb
and
pop
clc
idivb
rcrb
xor
jle
mov
clc
push
xchg
pop
inc
mov
dec
leave
fistps
lahf
scas
push
adc
mov
in
add
xchg
in
xor
mov
icebp
jge
dec
loopne
jae
stos
cld
cmc
mov
bound
inc
pop
mov
insb
push
dec
xchg
ror
in
in
pop
push
push
gs
imul
xchg
jbe
rolb
popa
add
cmp
pop
xlat
inc
pushf
fwait
out
ficomps
loopne
pop
pusha
int
icebp
xor
jae
jo
inc
push
test
insl
cmpsb
or
cld
mov
ffreep
jp
daa
out
arpl
xor
push
cmc
inc
cmp
leave
jb
push
mov
lret
cmp
repz
shll
out
pop
data16
xor
jo
ret
lcall
add
inc
xor
add
dec
add
xor
push
push
test
sub
or
fs
lret
push
mov
hlt
dec
xlat
repz
rep
dec
inc
push
movsl
inc
push
mov
mov
adc
enter
mov
lcall
dec
sub
xorl
loope
mov
fcmovnb
pop
and
cmp
sti
fimuls
call
lea
or
add
pusha
jnp
jg
outsl
pop
ret
fwait
push
je
mov
mov
imul
mov
movsl
test
or
imul
lods
mov
pop
in
adc
jle
leave
and
imul
repz
test
and
jnp
mov
jecxz
shlb
stc
fwait
sbb
gs
js
pushf
sub
mov
push
test
mov
fldcw
repz
imul
mov
in
cmc
and
xchg
jns
in
jmp
mov
pop
jae
lret
dec
stos
outsl
ss
subb
sbb
shrb
stos
or
pop
mov
dec
dec
jne
sub
sbb
push
leave
dec
popf
cwtl
jno
out
and
mov
or
adcl
cmp
jne
xchg
std
cmp
stc
sub
jo
mov
jmp
add
lcall
daa
mov
rcll
daa
cli
mov
push
daa
rolb
shl
push
shl
dec
jmp
inc
out
out
or
adc
dec
test
dec
mov
push
cwtl
mov
js
pop
xor
and
adc
adc
push
cld
cmc
pop
ret
call
rcl
jge
lcall
in
imul
jp
stos
es
scas
loope
fwait
lods
mov
sub
jo
outsb
aad
xor
add
insb
cmp
cmpsb
inc
mov
imul
and
push
and
movsb
stc
sbb
imulb
mov
ss
jle
and
fisubl
mov
cli
pop
mov
sbb
or
and
sub
xchg
enter
test
xor
xlat
sub
or
dec
jo
test
jmp
aam
mov
mov
pop
jg
push
data16
iret
stc
mov
xor
jge
xchg
xchg
lahf
sbb
sub
das
jl
xor
fbld
shrl
ljmp
lret
adc
mov
mov
sub
fimuls
push
loopne
sub
dec
jne
clc
lret
ljmp
xchg
outsl
es
cld
mov
into
das
nop
sahf
or
orps
and
jb
mov
xchg
js
inc
xchg
xchg
push
or
jecxz
xchg
xchg
fs
lret
test
jp
jo
jb
jb
pusha
cmp
xlat
pop
jne
test
push
jmp
cmpsl
pusha
cmp
aaa
popf
fdivrp
adc
add
mov
and
push
sub
xor
daa
sahf
add
inc
fstpl
addr16
sub
xchg
lret
jecxz
push
mov
pop
shl
xor
hlt
xor
shl
pop
push
mov
or
or
fs
hlt
and
mov
pop
pop
add
cmp
push
adc
push
movsl
gs
mov
cmp
inc
inc
mov
push
adc
xchg
aaa
repz
imul
scas
cmpl
mov
dec
sahf
sti
mov
test
enter
xor
xor
sub
mov
add
notl
sbb
mov
jle
inc
xor
mov
xor
push
cli
adc
sbb
iret
scas
sbb
test
leave
mov
jbe
fnstenv
test
les
ficoml
pop
arpl
or
jmp
cmp
lahf
sbb
cwtl
repz
hlt
and
mov
mov
loopne
xchg
sbb
sub
cmpsl
lods
shr
inc
inc
lahf
or
pop
add
cmpsl
out
mov
out
les
adc
push
ljmp
cwtl
cmc
or
aaa
es
lret
lahf
leave
int3
das
fidivl
aam
push
test
sbb
insl
lret
push
fdivl
jno
fadds
push
xor
test
shlb
loope
cmp
inc
div
cmp
adc
lock
inc
dec
and
nop
pop
push
cmpsb
pushl
mov
popa
es
sbb
fwait
loope
xor
orb
jnp
adc
cmp
push
repnz
push
dec
push
sbb
fcmovnb
inc
add
clc
imul
pop
scas
jmp
test
pushf
mov
stc
push
lahf
jns
mov
adc
es
inc
sub
push
imul
push
sub
sub
mov
xchg
fiadds
sbb
pop
scas
add
push
stc
subb
xlat
dec
mov
sarb
cmp
jmp
ds
test
stc
or
gs
push
outsl
push
hlt
pop
bound
not
cli
and
in
stos
loop
jae
mov
adc
lods
aas
scas
sbb
or
jne
xchg
popaw
pop
sbb
pushf
popf
xor
cltd
pop
lcall
sbb
mov
hlt
and
sbb
lods
pop
mov
dec
int3
sbb
xlat
sbb
in
xchg
fwait
sub
jns
add
push
and
cmpsl
cltd
test
aaa
sbb
mov
in
loopne
fucomp
std
sub
inc
stc
cmp
out
jmp
fbld
xor
inc
cmp
mov
xchg
jb
push
aad
xor
xor
inc
mov
or
or
mov
xchg
adc
jno
mov
inc
fld
fwait
push
stos
mov
sbb
jbe
aaa
fwait
ret
cld
push
das
adc
jle
sbb
jae
push
es
mov
cltd
push
cli
add
stos
pop
ss
loop
push
stos
mov
jecxz
pop
mov
sub
xor
sbb
dec
fstp
mov
mov
fimuls
cmp
mov
lods
imul
test
insb
mov
int
cmc
data16
daa
in
pusha
mov
inc
jmp
xor
jg
adc
je
xchg
mov
or
sbb
pop
das
aas
popf
mov
cmp
fdivrs
movsb
cmc
cmpsb
inc
or
mov
aas
push
mov
stc
inc
jno
mov
call
mov
stc
movsb
out
xchg
mov
fsub
push
and
data16
mov
les
fmull
jbe
test
jns
das
and
dec
pop
in
pusha
inc
push
xor
push
into
iret
inc
outsb
adc
inc
xor
add
cmp
cmpsb
xchg
pop
mov
push
inc
fidivrl
mov
xor
test
mov
sahf
shlb
xor
icebp
mov
rcrb
adc
and
mov
jnp
push
lcall
out
in
scas
faddl
out
cmp
aaa
out
iret
mov
push
nop
es
xchg
mov
cld
in
outsb
hlt
add
int3
push
dec
addr16
push
stos
loopne
leave
stc
xor
hlt
cmp
jbe
cli
repz
iret
scas
hlt
mov
adc
dec
xchg
cmpsl
int
xor
ret
push
sti
dec
hlt
mov
jno
add
jb
es
sahf
add
mov
insb
jp
mov
xor
fldl
cltd
push
inc
push
pop
and
cmpsb
int3
daa
pop
jae
pop
dec
stos
pop
shlb
jns
into
lret
or
mov
sahf
lret
cmp
lea
and
popf
arpl
lret
lcall
adc
and
into
sbb
in
xchg
or
pop
sahf
psrlq
mov
ss
out
andb
sub
mov
or
dec
scas
and
mov
mov
or
push
sub
mov
mov
out
sub
ja
fildl
jns
ljmp
push
dec
repnz
stos
fstpl
lret
fs
push
je
mov
jnp
mov
mov
jp
repnz
and
call
lods
and
dec
leave
adc
or
sub
ds
in
cmpsl
sahf
xor
push
sub
mov
call
adc
pop
test
push
push
pop
in
xor
test
fdivrs
sbb
repz
adc
out
f2xm1
xor
rol
ja
je
mov
lods
loopne
push
mov
mov
dec
call
dec
sti
imul
es
or
mov
rcll
rolb
and
in
cmp
sbb
xor
push
jle
aaa
push
mov
or
xchg
lea
imul
loop
mov
sbb
test
int3
pop
sub
dec
cwtl
xchg
xchg
inc
outsl
xchg
xchg
call
insb
and
inc
imul
cli
and
jp
fdivr
push
lock
aaa
mov
aaa
sub
pop
push
xchg
or
cmp
imul
push
sub
leave
shrb
adc
test
std
dec
aaa
adc
andnps
mov
dec
dec
lds
dec
aaa
lea
push
cmp
pop
mov
add
dec
xchg
xchg
lret
jg
pop
pop
repz
lcall
and
out
mov
pop
adcb
addr16
mov
imul
stc
ret
insl
shrb
ljmp
xor
jno
jno
jno
pusha
loope
sub
loope
ljmp
mov
mov
test
add
repnz
push
std
dec
loope
in
mov
loopne
mov
adc
std
jmp
fsts
inc
xchg
and
pop
ret
icebp
jo
cwtl
mov
sub
inc
inc
xchg
jo
rorb
and
pushf
clc
repz
xor
lds
xchg
daa
iret
mov
or
inc
ljmp
addr16
cli
fnstsw
inc
fnsave
lds
xor
cmc
pop
lods
lods
pop
pop
sbb
imul
xor
adc
repz
adc
dec
sbb
rclb
out
add
mov
shrl
popa
xchg
mov
xor
or
mov
cmpsl
jno
not
push
pop
adc
scas
pop
dec
test
aas
push
test
inc
xchg
inc
addr16
sahf
mov
push
xor
jns
aas
or
sti
popf
lock
test
jp
aad
jl
stos
sbb
or
in
and
sbb
push
ficompl
shrb
pop
mov
stos
xchg
fdiv
outsb
sub
pop
pop
roll
jmp
test
imul
stos
sbb
or
inc
cmpsb
fdivl
rorb
lcall
cmp
sar
xchg
sbb
in
bound
jp
ret
mov
incl
add
sub
bnd
call
and
neg
pop
loop
fbld
stos
hlt
xchg
jg
dec
inc
out
or
cmp
pop
test
cmp
xor
add
and
jle
das
xor
mov
jo
mov
sbb
or
out
mov
les
iret
lods
ret
fisttps
in
stc
dec
mov
dec
xchg
push
dec
stc
cmpsb
fcmovu
roll
lods
out
push
addl
jno
sarl
nop
mov
iret
jp
jle
add
std
jmp
addr16
outsb
jns
push
vmwrite
lods
inc
popf
lret
mov
divl
call
jnp
dec
loope
insb
inc
in
jle
out
std
stc
push
mov
andb
int
mov
jp
cmp
and
push
push
addr16
popa
mov
mov
fbstp
nop
cs
out
movb
dec
stos
iret
mov
inc
test
and
push
adc
loope
sub
lods
and
clc
cmpsl
adc
fdivp
imul
sub
cmp
sbbb
pop
aam
jo
in
rorb
sti
bound
xor
mov
inc
xor
in
add
loope
pop
inc
sar
xchg
dec
lahf
dec
mov
mov
shlb
daa
jle
scas
adc
clc
aad
js
add
lea
mov
out
mov
dec
repnz
push
cmp
mov
fcoms
dec
loopnew
in
sbb
jge
lods
jle
gs
fstl
inc
jl
add
xor
test
jnp
adc
subb
sub
sub
sbb
push
adc
mov
mov
cmp
push
lds
inc
insl
lahf
sbb
push
lods
push
adc
push
insl
mov
mov
xchg
lods
xor
fs
xorb
sbb
aad
ljmp
test
cs
push
imul
cld
sub
imul
cmp
bound
aad
adc
ds
sbb
test
inc
repz
dec
out
xchg
inc
sub
pop
xchg
pop
lods
rorb
loop
imul
jbe
mov
loop
rcll
push
outsb
outsl
add
je
jb
fsubs
loop
inc
out
dec
lcall
push
mov
sbb
mov
movb
inc
xchg
mov
jle
ja
cmp
and
cmp
jbe
test
cltd
xchg
mov
adc
fnstsw
int3
xchg
inc
loop
sbb
repnz
fs
adc
xchg
inc
sbb
addl
jl
je
sub
add
jmp
cmp
push
imul
dec
or
xchg
jmp
jle
jecxz
sti
and
fdivr
cmp
push
fists
inc
sub
add
adc
lret
gs
inc
inc
jns
mov
out
scas
scas
cwtl
sub
dec
test
lods
or
popa
add
push
dec
shlb
jnp
jl
cmp
or
jb
mov
adc
orb
add
jg
cmp
cltd
fmuls
push
and
daa
pop
loopne
xor
adc
sbb
jns
xlat
mov
or
rcll
sub
mov
jge
and
mov
movsb
jno
jo
mov
enter
sti
or
mov
add
dec
fldcw
mov
push
push
jbe
ret
inc
pop
cmpsb
cmp
jmp
push
xchg
stos
cli
inc
fstpt
xchg
mov
cmp
mov
stos
ror
nop
push
ljmp
xor
inc
jae
loopne
sbb
insb
ret
sub
and
xchg
dec
jge
rolb
int
or
and
cmp
jl
inc
dec
push
in
dec
push
and
aaa
fisubrl
or
scas
movsl
mov
cmpsl
mov
loop
pop
sar
lcall
push
inc
push
add
sub
jmp
movsb
pop
mov
psrlw
mov
pop
arpl
pop
lock
aad
pop
dec
push
push
out
pushf
aam
stos
adc
outsb
gs
mov
gs
adc
dec
test
and
jmp
enter
xor
xor
in
test
xlat
mov
push
pusha
sti
das
arpl
insb
or
leave
aam
addb
lahf
in
in
jnp
fs
push
xor
jno
arpl
arpl
inc
push
clc
mov
or
adc
lods
aad
das
data16
and
adc
sbb
js
xchg
fdivrs
jp
jmp
or
or
mov
and
mov
aaa
jmp
pop
cmp
pop
mov
insb
outsw
sbb
sti
bound
and
add
xchg
xchg
and
and
mov
or
xor
int3
ljmp
cmp
push
movsl
pop
dec
push
dec
pop
cmp
push
cmp
push
ds
ss
jo
sbb
int3
lods
jecxz
sbb
xchg
js
mov
ja
inc
dec
out
loope
dec
lcall
lods
mov
adc
mov
inc
push
roll
sbb
mov
sbb
hlt
pop
popf
movsl
or
dec
pop
cmc
jmp
mov
std
mov
push
es
bound
cmp
loope
and
sarl
sbb
pop
dec
mov
shr
lods
addr16
jbe
movsb
test
cmp
and
pop
rcl
adc
out
mov
jne
in
jge
incb
push
movsl
mov
adc
pop
mov
push
mov
lods
pop
stos
mov
aam
hlt
push
stos
enter
push
out
sbb
sbb
dec
xor
xchg
add
std
sti
or
mov
dec
movsl
xor
iret
mov
jbe
fldcw
sbb
in
movsb
sbb
dec
mov
sarl
enter
lea
cld
or
push
nop
cltd
mov
mov
ror
xchg
outsl
adc
pop
pop
les
in
cmp
addr16
idivl
or
fmuls
mov
or
cmp
add
sbb
enter
into
sub
mov
into
xchg
sbb
cli
cmp
or
sti
rcl
pop
movsb
daa
fadd
jp
loopne
push
lret
add
push
xlat
dec
jo
dec
loopne
xchg
jge
pop
push
add
sti
and
push
scas
bound
dec
repz
mov
adc
push
or
cmc
test
ljmp
lods
inc
test
repnz
daa
mov
xor
jmp
push
fnsave
jnp
sub
stc
jnp
inc
in
subl
js
pop
jo
pop
cmova
xor
das
idivl
mov
divb
jb
fisttps
into
fisubs
cmpsb
xlat
dec
test
pusha
es
mov
mov
add
fbstp
arpl
dec
in
mov
insl
icebp
jae
cmpsl
push
pop
vmwrite
pushf
cmp
dec
mov
mov
mov
call
nop
mov
or
xchg
jbe
ret
push
push
sbb
add
pop
adc
test
gs
adc
pop
mov
mov
dec
out
mov
add
push
rorl
sti
push
cld
mov
xchg
xchg
out
inc
hlt
adc
out
fcoms
dec
mov
subb
mov
jo
xor
jnp
es
pop
test
xorb
sbb
inc
cmp
loope
inc
movsl
adc
aam
sub
mov
lods
and
addr16
cmp
pop
dec
mov
lods
scas
lods
xchg
hlt
popf
jb
mov
cwtl
das
loop
mov
cmp
pop
mov
and
dec
mov
std
inc
in
fimull
imul
orl
inc
mov
outsb
mov
push
sub
sti
lds
jo
xor
daa
dec
dec
push
inc
mov
popa
mov
jb
push
mov
ret
inc
mov
xorl
pop
jp
enter
shl
or
lock
rcrb
cmpsb
inc
cmc
mov
adc
inc
cmp
sarl
fcoml
std
mov
jmp
push
jecxz
jle
adc
cwtl
xor
jg
std
fnstcw
shrl
mov
cmpsb
cmpl
jg
rcll
sbb
adc
iret
lds
je
add
mov
arpl
xchg
push
push
insb
xor
fstpt
push
sub
fiadds
mov
stc
dec
inc
adc
mov
xchg
in
aaa
xor
mov
dec
rcl
jmp
push
and
mov
pop
popa
mov
sub
xor
pop
repnz
fstpl
shlb
or
sbb
pop
mov
cmp
xor
xchg
sti
mov
fidivl
bound
jg
xlat
pop
adc
xor
mov
hlt
xor
pcmpeqd
out
jge
fldt
sbb
dec
jmp
jo
mov
mov
andb
or
sbb
pop
pop
insb
jae
mov
out
test
dec
js
movsb
mov
mov
movsl
pop
add
ret
in
iret
sbb
mov
jno
aas
xchg
test
in
fcoml
xchg
inc
insb
test
insl
sub
daa
aas
adc
pop
aaa
push
and
mov
push
mov
adc
jns
cld
push
hlt
scas
lahf
js
jo
fdivl
cld
xchg
ds
jno
cwtl
push
nop
jbe
push
sbb
pop
cmpsb
ja
ss
enter
sbb
punpcklbw
push
mov
inc
dec
ret
je
sbb
les
or
inc
lods
cld
pop
and
add
sub
mov
dec
aas
dec
fxch
mov
lret
sbb
movsl
xor
add
push
xorl
jp
push
cmp
push
mov
mov
adc
shrl
cli
sbb
push
and
daa
lahf
hlt
jp
xor
xchg
das
cmpsl
push
fxch
sub
jnp
mov
jbe
call
jne
or
sub
mov
lock
cmp
xchg
sub
adc
pusha
lods
in
adc
fimuls
sub
push
jns
push
mov
adc
and
sbb
loopne
sbb
xor
pop
aad
pop
fidivl
les
out
add
das
rcrl
sub
or
xor
mov
cli
iret
mov
cmp
lods
push
in
lea
push
es
push
cmp
jg
lcall
arpl
aam
xchg
jmp
mov
sub
in
cmp
sub
dec
test
scas
mov
push
mov
xor
or
or
sbb
mov
insl
rcll
es
mov
mov
jge
ja
push
stos
ljmp
daa
cmp
mov
jnp
adc
scas
adc
sbb
clc
or
shrb
inc
iret
shlb
jbe
jle
sub
scas
dec
jns
and
xor
dec
xor
sarb
push
insb
mov
add
inc
inc
shlb
add
repnz
cmp
clc
push
decl
dec
push
icebp
add
pop
ljmp
mov
aas
out
fdivp
mov
jg
iret
fistpll
out
mov
pop
mov
unpckhps
mov
sub
xor
sub
cmp
adc
dec
xchg
daa
fidivl
add
inc
stos
enter
push
adc
aam
icebp
cmp
mov
cld
jnp
repnz
cwtl
stos
les
test
mov
jecxz
lock
arpl
sbb
or
orl
dec
jnp
loope
inc
stos
loope
sbb
pop
les
outsl
int
adc
jp
call
fisubl
pop
pushf
mov
mov
mov
das
lcall
xchg
fsts
dec
inc
int3
icebp
scas
lods
xor
fisttpl
nop
sbb
cmp
xor
lcall
mov
insb
inc
js
int3
out
in
jbe
sub
cltd
sti
lahf
pop
and
push
jns
scas
sub
push
inc
pop
jmp
mov
xchg
jl
pcmpeqd
inc
push
cmpl
and
adc
popa
in
jb
clc
fcomp
push
xor
push
daa
jp
lock
addr16
xor
shlb
jecxz
fstps
cli
ds
negb
call
inc
push
push
jns
jl
mov
lret
icebp
xchg
fwait
add
ret
sbbl
popl
es
and
js
stc
andb
fs
xor
inc
or
jnp
out
dec
xor
and
pop
in
push
mov
mov
sbb
sahf
ret
add
in
pop
push
and
mov
shlb
in
push
daa
ss
cmc
mov
rorl
and
inc
popa
es
cmp
or
xor
in
add
or
fsubrs
jnp
int3
jl
iret
xchg
loop
insl
dec
xchg
into
xchg
dec
xchg
test
stc
mov
mov
lret
addl
ja
xchg
adc
pop
push
and
cmc
sahf
mov
inc
cld
lcall
sahf
icebp
xor
mov
cld
es
mov
stc
in
jmp
nop
jl
js
adc
test
dec
xorl
lcall
adc
outsb
jno
dec
sub
xor
push
andb
out
jp
jno
lahf
call
lea
mov
sbb
pop
decl
ret
add
inc
cmp
mov
push
addr16
pusha
adc
outsb
cld
sub
out
nop
xchg
out
pop
fadd
adc
adc
sbb
les
and
fsubl
sbb
cmp
lcall
jmp
arpl
pop
sub
mov
adc
lds
iret
sub
rcr
push
sbb
jmp
mov
stc
or
inc
mov
jns
xchg
inc
int3
cmp
add
lret
cmp
lock
push
popa
es
mov
addr16
xchg
sbb
sbb
aas
rclb
sub
clc
xor
cwtl
xchg
mov
in
shl
sub
adc
not
jnp
sbbb
pop
add
or
jns
add
enter
xchg
arpl
pop
fnstcw
mov
sbb
jae
mov
sub
loope
jl
sbb
ret
push
in
stc
es
cmp
cmp
das
sbb
in
and
lcall
pop
push
mov
loopne
jno
mov
and
jne
push
hlt
mov
fidivrl
jge
push
sarb
enter
or
push
icebp
add
push
or
xchg
iret
add
and
sub
jp
xchg
aas
lock
ror
fmull
sbb
cs
push
in
arpl
pop
xchg
sarb
out
add
mov
cmp
mov
push
xchg
xchg
mov
sbb
mov
insb
fdivr
loop
adc
adc
push
adc
inc
pop
cmp
mov
or
inc
pop
xchg
repnz
pop
xchg
push
dec
mov
cmp
dec
fs
mov
rorl
adc
pop
enter
or
stos
andb
jle
pop
jmp
icebp
das
popa
sub
cmp
jmp
cmp
xchg
push
inc
xor
pop
pop
adc
xor
sahf
fcomi
and
mov
mov
out
lods
lods
aaa
xor
sub
pop
pop
sbb
das
subb
aas
insb
jae
mov
popf
pusha
into
cmc
ja
popf
and
add
inc
std
pop
jecxz
fs
push
xor
pop
insl
jl
sbb
push
xchg
std
mov
inc
repnz
mov
mov
lea
and
fists
test
outsl
repz
cmp
fwait
cmp
scas
outsl
mov
pop
xor
mov
fwait
inc
stos
push
sub
mov
in
ss
xor
sbbl
fisubl
lret
sub
pop
sbb
jg
sub
aad
decb
push
mov
push
mov
mov
ljmp
roll
outsl
push
iret
popl
lods
stc
xor
xchg
jp
or
loope
aaa
clc
test
out
popf
add
aas
push
cmp
ss
outsb
mov
inc
add
jecxz
into
add
push
outsl
push
lahf
xor
fnsave
nop
inc
add
data16
and
decl
xchg
incb
loop
xchg
daa
xchg
cmp
scas
add
push
idivl
pop
je
and
adcb
ljmp
cs
bound
cmp
lahf
mov
lret
mov
push
sub
xlat
out
dec
or
push
pop
arpl
mov
mov
std
mov
adc
popa
fwait
jp
mov
fisubrs
inc
xchg
mov
js
sbb
cmp
cld
fistl
push
int
ret
out
rol
fprem1
fists
je
push
inc
loop
into
mov
scas
negl
rcpps
push
fnstcw
test
mov
xchg
push
inc
fwait
jo
sbb
mov
cmp
dec
xchg
pop
rclb
xor
frstor
insb
dec
push
mov
push
xor
imul
push
pop
adc
std
call
mov
sbb
imul
imul
hlt
test
xchg
mov
insl
test
add
and
dec
lods
sbb
push
mov
sti
aam
scas
or
sbb
mov
push
cmpsl
pushf
pushf
push
mov
pop
inc
mov
mov
cwtl
shrb
push
inc
xchg
mov
lods
out
aam
aad
jbe
ret
aad
jbe
fldcw
je
xlat
ror
loope
xchg
mov
lock
xor
cld
js
mov
jp
mov
xor
and
arpl
loop
mov
jb
sbb
jno
push
in
and
in
popa
jne
sbb
cmp
jnp
sbb
pop
dec
mov
xchg
mov
scas
adcl
adc
jae
into
addl
clc
scas
push
subl
loopne
loop
pop
mov
clc
sarl
loop
cwtl
ds
in
decb
lret
mov
aam
sbb
aaa
sti
es
repnz
cmp
icebp
mov
imul
addr16
push
dec
cmc
jg
push
pop
loopne
xchg
mov
lds
lock
das
mov
cmpsb
stos
pop
dec
inc
jg
sbb
sar
in
data16
jg
push
ret
dec
lahf
repz
js
sub
mov
cmpsb
scas
pusha
or
jns
pop
xchg
push
clc
and
call
je
movsl
sub
add
dec
cld
sbbl
xorl
dec
loopne
cltd
aam
inc
push
or
add
or
call
inc
pop
or
cmc
dec
fidivrl
lock
inc
jmp
add
scas
push
daa
aam
xor
dec
cmc
out
pop
arpl
mov
pop
scas
push
sbb
sar
aam
popf
dec
cmpsl
or
repz
mov
lds
mov
pop
dec
insl
mov
and
int
cmp
mov
mov
push
mov
sub
jnp
cmp
jno
sub
adc
add
addr16
inc
sbb
dec
js
jmp
scas
nop
enter
jo
dec
aad
sub
jbe
jae
int3
jne
pop
pushf
mov
enter
add
notl
add
cmp
push
iret
cld
ljmp
pop
push
xor
lds
lahf
mov
es
pop
ljmp
cwtl
pop
pop
and
lock
dec
sub
shll
lcall
jae
iret
movsl
xor
adc
out
pop
rcrl
fimuls
insl
or
inc
mov
adc
mov
shlb
cltd
lahf
jb,pt
jno
cmp
in
jge
lret
add
dec
stos
in
sbb
scas
je
add
mov
fidivl
xchg
mov
cmp
jbe
test
xorl
add
mov
gs
roll
xor
pop
rclb
lahf
push
xor
xlat
repnz
or
sahf
into
adc
xchg
inc
repnz
sti
int3
movsb
pop
cmc
loopne
dec
pop
jg
js
sbb
inc
jns
jnp
dec
mov
dec
push
leave
arpl
ja
mov
aad
sub
or
jb
loope
or
scas
loopne
popf
dec
or
movsb
int3
icebp
push
adc
test
adc
popa
pop
loope
or
lds
and
mov
addb
sub
in
or
xor
stos
sahf
jbe
mov
cmpb
jmp
mov
ret
into
orw
sti
add
mov
push
mov
out
subb
gs
lcall
out
lret
push
insl
jns
jne
leave
insl
repz
outsb
ljmp
jg
add
scas
adc
mov
pop
mov
fistps
arpl
push
test
add
mov
push
sub
scas
lock
add
or
movsb
push
sbb
push
and
stos
ja
popa
and
or
out
inc
or
pop
cltd
inc
ljmp
adc
adc
out
add
cmp
std
hlt
mov
out
repz
je
xorl
mov
aas
mov
insl
imul
rcll
test
ret
pop
mov
arpl
imul
mov
test
xchg
push
repz
sub
mov
scas
pushf
fildl
dec
testb
dec
pop
dec
mov
stos
jmp
bound
lock
jnp
nop
scas
add
mov
pop
sub
add
mov
add
mov
or
cld
push
jmp
xor
imul
ljmp
sbb
adc
jg
xor
jb
jmp
adc
push
pusha
sub
adc
sub
sbb
in
xor
es
lock
lock
repz
pushf
sti
push
or
mov
lea
idivb
hlt
dec
fists
aaa
leave
pop
xchg
cmpsl
mov
add
mov
mov
fstpt
add
or
mov
cltd
sbb
fbld
adc
jb
in
push
fxch
imull
pusha
push
mov
push
imul
in
adc
xchg
add
sbb
push
xchg
jecxz
es
and
inc
jmp
cli
int
pop
mov
arpl
mov
rorb
imull
sub
mov
nop
cmpl
and
dec
orl
sbb
adc
test
roll
scas
arpl
lds
push
sbb
out
jmp
mov
adc
and
mov
adc
mov
mov
or
xor
shlb
imul
insb
push
mov
xchg
inc
scas
dec
dec
test
aaa
lds
inc
or
sbb
and
lods
sbb
gs
loope
imul
cmp
scas
sti
pop
mov
lods
inc
flds
orl
mov
mov
and
or
cmp
nop
add
out
pusha
pusha
sub
std
lret
loope
xchg
vpmulhw
mov
bound
cmpsl
push
dec
pop
cmp
sbb
adcb
push
pop
push
pop
cltd
fsubp
inc
out
sar
inc
xor
xchg
fstl
sbbb
fwait
adc
je
sahf
in
enter
push
mov
or
adc
in
mov
rorb
sub
sbb
jae
ror
mov
scas
sahf
cmp
adc
std
clc
movsl
cmp
inc
cmp
jo
int3
dec
mov
xor
lcall
das
push
pop
mov
adc
int3
jo
addps
mov
and
xchg
cld
divl
xor
pop
sub
push
sub
in
cmp
adc
add
ja
int
mov
pop
out
pop
sub
sbb
mov
imulb
sbb
jne
loop
in
and
xlat
movsl
sti
in
xor
js
mov
push
add
rcrb
adc
jne
mov
scas
sub
cmp
xchg
int3
sbb
jnp
adc
sti
jge
sub
andb
rcrb
jmp
mov
imul
addr16
mov
dec
xchg
push
jae
xlat
pushf
movsl
loopne
rol
gs
dec
imul
inc
push
cli
adc
push
testl
repz
gs
or
sbb
push
push
xchg
or
sbb
mov
xchg
dec
out
pop
cmpsl
jne
aam
xorl
and
scas
sbb
sub
inc
mov
mov
pop
xor
repz
jmp
ret
out
pop
sub
push
roll
in
int
in
pop
jno
call
mov
fmuls
out
mov
sbb
fimuls
dec
dec
mov
pop
sub
fldenv
push
cmpsl
mov
mov
xchg
fimull
mov
pop
or
fwait
cmc
testl
sub
ljmp
adc
dec
orb
shlb
popf
dec
outsl
aam
xchg
inc
pop
out
int
das
adcb
popa
fidivrs
movsl
cli
or
push
outsl
jbe
imul
shrb
cmpsl
stos
dec
jnp
and
std
cld
dec
out
pop
adc
into
cmc
stos
xor
sbb
call
and
cwtl
push
add
push
xchg
sarl
aas
in
scas
icebp
cmpsl
aaa
xor
adc
inc
push
and
inc
sti
dec
cmp
enter
xchg
xchg
add
and
and
enter
pop
add
movsb
dec
push
and
lods
inc
lea
ss
jge
insb
pop
and
test
ljmp
ja
push
inc
outsb
jge
pop
ds
inc
pop
dec
jne
enter
test
popf
pop
and
adc
lock
repz
jle
push
mov
cwtl
or
xor
sbb
vpaddusw
or
pushf
pusha
rclb
mov
sti
xor
pop
es
hlt
adc
ret
jle
ret
cmpsl
out
out
sub
lods
xchg
push
out
test
repz
sub
xchg
dec
ljmp
inc
mov
jecxz
jg
push
adc
jl
push
mov
mov
aad
jns
lods
xlat
push
or
or
stc
push
push
xlat
inc
out
jbe
mov
xor
xor
adc
sbb
ljmp
or
pushf
fidivrs
arpl
jb
push
ret
paddusb
sbb
mov
arpl
xchg
popl
mov
aam
mov
sbb
popf
out
das
loopne
inc
andl
loope
mov
jg
cmp
sbb
fnstsw
mov
shll
pop
xor
out
xchg
cmp
cwtl
push
repz
pop
das
repnz
stc
mov
call
jp
or
add
fs
sub
loopne
das
cmp
clc
ss
jl
mov
sbb
rorb
sbb
pop
pop
icebp
insb
and
shrl
inc
gs
cld
out
mov
xchg
xchg
dec
pop
js
out
js
pushf
outsb
rolb
stc
pop
sub
jnp
into
mov
adc
jmp
das
mov
sbb
loope
or
insb
out
mulb
sbb
stos
hlt
mov
inc
popf
jge
adc
ss
roll
jge
out
rcrl
add
xchg
cmc
mov
cmp
decb
xchg
adc
pop
lret
aaa
icebp
out
cld
les
pushf
mov
lcallw
and
dec
loop
shll
ror
xor
mov
aam
pop
ja
mov
out
mov
mov
mov
faddl
mov
jmp
loop
je
add
mov
xchg
mov
add
adc
out
mov
pop
sbb
sub
or
std
push
test
xor
push
pop
frstor
lods
mulps
outsl
sbb
sahf
leave
cmpxchg
sbb
iret
icebp
jp
xor
or
imul
ds
or
into
mov
and
fs
dec
or
imul
mov
stos
xlat
dec
cli
es
arpl
xor
dec
add
dec
sub
sub
cli
loop
ss
ljmp
aam
cmp
pop
icebp
loope
int3
repnz
sub
into
and
das
jno
mov
popf
andb
fwait
or
arpl
fidivrl
dec
movsl
neg
sbb
jge
cmpsb
out
xor
aaa
add
mov
int
adc
ss
and
mov
add
call
dec
adc
add
push
push
lahf
int3
xor
sarb
outsb
pop
pop
add
repz
shll
test
sbb
xchg
pop
push
aaa
inc
cmp
pop
sub
repnz
push
add
lret
add
lea
fstpl
shrl
xor
lcall
cmove
add
mov
adc
pop
pop
mov
dec
stc
loopne
ret
sbb
arpl
adc
mov
sub
push
stos
mov
add
xchg
xchg
jbe
jp
imul
stc
arpl
and
adc
je
sbb
int
lahf
repz
idivl
loopne
scas
xor
cmp
and
sbb
xchg
lcall
test
sub
insl
jle
cmp
mov
pop
es
inc
mov
adc
iret
sub
mov
xchg
rcll
ja
daa
and
and
outsl
push
mov
in
jns
lock
pop
cwtl
ds
movsl
jp
bound
sahf
and
repz
mov
movsl
mov
cmp
pop
cmpl
add
rcrb
insl
subb
mov
mov
dec
push
xorl
aam
movsl
dec
mov
and
jl
pop
inc
in
xlat
add
jo
aaa
gs
mov
lock
lock
push
or
out
stos
fcomps
push
movsl
imul
cmp
faddl
subl
or
mov
xor
inc
jo
pop
push
icebp
jns
cmp
jle
pop
adc
ret
lods
jmp
loop
jg
dec
xor
cli
jl
mov
sbb
outsl
mov
sbb
cmp
push
mov
pushf
xchg
lea
xor
xchg
loop
rolb
gs
out
jp
rorl
shlb
insb
mov
jle
dec
cmpsb
adc
jns
into
inc
cld
mov
ds
rorl
stc
orl
sarb
lock
pop
sbb
int3
mov
cltd
std
ret
adc
add
or
bound
sub
pop
jecxz
lret
inc
add
sahf
lea
lds
cmpsl
fwait
out
pop
imull
cmp
les
jmp
movsl
mov
popa
in
stos
xor
xor
sbb
and
pop
jno
fstl
cmp
in
mov
sbb
jno
scas
icebp
dec
xor
addr16
inc
or
push
xorl
push
cmp
mov
inc
push
sbb
nop
jnp
lods
je
out
sbb
xor
cmpsl
stos
test
js
into
mov
pop
out
mov
fadd
push
pop
icebp
pop
xchg
mov
pusha
adc
push
xchg
sbb
lea
scas
mov
pusha
xchg
cmp
stos
aam
loopne
and
in
cli
test
cmp
push
jle
pop
imul
das
adc
aaa
cmp
fadd
mov
bnd
push
xor
jns
mov
imulb
es
rorl
add
sets
mov
xor
mov
fs
add
repz
leave
xor
pop
dec
cld
lahf
out
ljmp
dec
roll
mov
notb
push
mov
push
dec
mov
jo
inc
mov
mov
mov
pop
data16
jp
push
pop
dec
mov
enter
lcall
aas
dec
in
pop
fstpt
outsl
popf
jl
rol
cltd
call
xor
lods
jnp
fsubs
dec
test
ja
out
jge
sub
mov
fdivp
bound
push
mov
mov
jecxz
pop
xlat
mov
mov
lret
stos
aaa
in
icebp
out
inc
jmp
addr16
movsl
subb
in
pop
cmc
push
sub
jmp
jae
inc
js
cs
fstps
and
xor
push
and
cmpb
xor
movsl
sub
xchg
dec
in
xchg
je
hlt
pop
sbb
xor
out
push
push
mov
xor
inc
mov
and
std
sbb
stos
out
mov
sub
sbb
sbb
mov
adc
and
addl
jg
into
popf
mov
xor
push
arpl
mov
jb
xorl
outsb
outsl
test
inc
jmp
idivb
lock
repnz
lds
xchg
popf
dec
or
movsb
adc
mov
pop
push
mov
andb
loope
cwtl
xchg
mov
insb
sti
xor
out
je
aam
sub
dec
lds
sub
mov
lcall
aaa
aad
mov
or
aas
fnstcw
sub
cmc
out
aam
sub
mov
insl
lock
leave
push
pop
xchg
pop
mov
clc
sbb
dec
in
leave
inc
into
or
xlat
sbb
pop
push
push
ret
xor
lock
jae
dec
pop
sub
mov
pop
and
loop
psubsw
out
pop
cmp
jg
jb
aam
in
sub
int3
insl
sub
imul
ret
hlt
add
loopne
jl
jle
add
das
lds
jno
cmp
sbb
adc
adc
push
push
cmpsb
mov
mov
cmp
inc
mov
inc
xor
jl
mov
mov
lods
in
xchg
jns
add
nop
push
pop
test
cltd
xchg
insl
loop
inc
add
loopne
loop
adcl
jno
jnp
mov
xlat
mov
std
mov
pop
sub
cs
push
test
dec
or
mov
dec
jp
jo
dec
filds
shrb
aaa
mov
ret
xchg
and
imul
add
pop
fs
scas
and
std
adc
rcrb
bound
repz
hlt
pop
cld
cmpb
orb
and
mov
and
flds
arpl
in
xchg
mov
cmp
lods
jne
mov
jecxz
mov
ljmp
rorb
dec
js
mov
das
mov
or
xchg
mov
or
mov
push
cld
sub
clc
adc
loop
daa
insb
xor
imul
pop
xchg
popf
cltd
jge
and
shll
pop
outsl
in
push
jb
mov
pop
push
int3
sbb
pushf
das
dec
pop
addr16
movb
std
cmp
add
aaa
mov
andl
cld
lret
jmp
lahf
sbb
mov
xor
insl
jnp
pop
inc
adc
aas
pop
loope
xor
stos
popa
clc
dec
xchg
cld
push
inc
push
push
in
pop
sti
add
fstl
mul
mov
inc
shll
mov
cwtl
add
xchg
sbb
jge
sti
test
inc
xor
dec
pop
aaa
insl
add
jns
shlb
xor
jp
dec
out
repz
xchg
nop
xor
dec
scas
repz
xchg
loop
adc
fisubl
repnz
ret
xchg
sbb
jb
ja
jle
sub
test
add
push
addl
addr16
pop
mov
cmp
sbb
jge
adc
mov
sbb
test
es
loopne
or
dec
push
iret
sub
and
lret
inc
add
inc
inc
mov
orb
je
lods
xchg
sahf
rorl
dec
jne
repnz
sub
rorl
mov
fisubrl
fcompl
mov
insb
mov
popa
jmp
adc
xchg
ljmp
push
pop
lods
mov
sbb
movsb
bound
sbb
push
and
xor
push
mov
insl
int3
mov
jecxz
mov
pushl
add
rolb
jo
rclb
lcall
lock
adc
movsl
inc
xor
cmpsl
popf
adc
xor
cmpsl
mov
and
in
xor
imul
jnp
push
or
inc
insb
test
aad
xlat
dec
test
xchg
mov
sbb
cmpsb
mov
ret
shrl
pop
cltd
xchg
insl
rcrb
inc
xor
cmp
push
cmp
incb
cmp
testl
push
clc
and
inc
push
in
xlat
jle
mov
xchg
adc
and
mov
bound
sub
mov
hlt
nop
cli
mov
push
loop
mov
mov
outsb
sarl
push
adc
cmp
cltd
sbb
and
rol
jnp
jl
add
repz
inc
sti
xor
xchg
sub
enterw
repz
outsl
pop
out
sahf
mov
mov
pop
jne
and
movsl
dec
and
jnp
out
add
cmp
out
adc
sub
sbb
jbe
add
sbb
mov
lcall
adc
or
jge
stc
aam
popa
cmp
orb
sub
push
imul
dec
or
test
lret
bound
adc
call
cmp
into
imul
push
aaa
jb
pop
add
sbb
dec
add
rolb
out
out
sub
mov
inc
mov
idivb
sbbl
test
sbb
test
fs
xor
sbb
cmpl
scas
mov
lds
add
jle
mov
add
roll
pop
js
pop
sbb
and
into
fcomps
in
push
pop
cli
out
hlt
adc
mov
mov
hlt
mov
cltd
mov
mov
js
repz
add
adc
push
jl
pop
inc
push
xchg
and
mov
lcall
call
push
mov
out
push
mov
lret
push
aaa
push
inc
ljmp
call
cli
xchg
aaa
fmull
and
mov
cmpsl
sti
aad
mov
pop
addr16
cmp
push
ja
fdivrs
or
test
hlt
lods
pop
and
xchg
dec
cmp
loope
mov
movsl
adc
out
inc
mov
lds
cs
and
xchg
push
popa
out
hlt
lods
push
sbb
mov
cld
hlt
fstl
pop
inc
in
push
cld
jg
in
movsl
shlb
fsts
test
addr16
das
xchg
sbb
imul
inc
push
sbb
pop
sbb
or
les
lahf
xlat
cmpsb
je
mov
sbb
clc
pop
xor
sub
mov
call
cmp
cmp
lea
sarl
in
ds
xlat
pop
ffreep
mov
adc
jae
js,pn
jl
push
xchg
add
stc
jmp
sbb
fildll
adcl
sahf
cltd
sub
cmp
sbb
mov
inc
bound
mov
and
fucomi
orb
dec
in
lea
mov
rclb
cld
mov
and
xchg
push
loope
test
fisubs
mov
out
pop
cwtl
lods
sub
in
push
xlat
or
test
mov
std
push
lahf
push
push
push
pop
sbb
loopne
dec
pop
daa
into
jb
jg,pn
dec
cmp
mov
int3
roll
adc
stc
push
pushf
cmp
imul
pop
cld
jg
stos
sub
outsl
jne
lods
xor
std
xchg
dec
sub
and
out
outsl
mov
and
movsl
test
fadds
aas
pop
mov
adc
xor
cltd
adc
js
xchg
iret
jecxz
jl
loopne
loope
andb
push
mov
cli
int
call
out
test
pushf
cmp
mov
mov
fwait
and
mov
out
jo
mov
enter
mov
dec
jp
fwait
inc
ljmp
dec
push
mov
aad
pusha
ret
push
adc
mov
or
aaa
andl
inc
xchg
rcll
inc
leave
aas
icebp
mov
jmp
inc
cltd
xchg
push
mov
sahf
jnp
adc
aad
jno
push
js
into
mov
or
nop
mov
push
xlat
xor
inc
and
loope
or
icebp
lds
shlb
mov
cmc
xchg
add
add
push
ret
int
xchg
sbb
adc
add
std
and
test
mov
xchg
cmp
push
cs
inc
mulb
mov
or
incl
notb
dec
pop
mov
cli
ds
xchg
out
sti
jno
jmp
xchg
and
enter
cltd
je
or
cltd
mov
adc
push
adc
push
leave
inc
and
lahf
xor
repz
incb
sbb
lcall
movsl
push
lods
push
xchg
jae
pop
push
stos
lret
test
push
inc
sti
xchg
push
jmp
pop
xchg
pushf
jae
jbe
daa
stos
aad
cmpsb
mov
xchg
push
popf
mov
fcoms
sub
inc
fldt
mov
js
push
mov
mov
sbbb
adc
stc
pop
dec
jecxz
call
stos
or
mov
and
pop
jle
int
dec
jl
jmp
nop
arpl
inc
pop
jo
mov
jbe
lds
pop
sbb
adc
pop
mov
sub
sti
movsb
or
add
daa
ds
cmpsb
addl
negb
pop
int
push
nop
pop
aas
movsl
cmp
scas
rorl
data16
pop
out
and
or
mov
stos
push
push
repz
es
xchg
out
pop
shrb
and
jmp
lret
aam
xchg
inc
sbb
and
or
ret
iret
inc
push
mov
jl
sarl
pop
out
cmp
pop
fistps
xchg
lds
out
sahf
cmp
icebp
or
neg
push
mov
aam
sub
inc
popa
sub
stos
ficoms
imul
pop
pop
aas
push
adc
push
rcll
sub
in
clc
hlt
dec
insl
loop
jle
pop
adc
pop
xchg
pop
jecxz
sahf
jle
sub
pop
xlat
enter
out
ljmp
std
pop
inc
dec
inc
ds
sub
or
sbbl
and
push
mov
adc
repnz
ljmp
imul
push
cwtl
addr16
mov
sbb
pop
rcr
loopne
rcrl
push
cmpsl
sub
shll
out
inc
xor
int3
fistpl
fildl
negb
xor
cmp
insl
mov
push
jmp
mov
into
push
xor
enter
sbb
in
pop
cmpsl
add
sbbl
loop
out
pusha
push
xchg
mov
ss
sub
shll
or
adc
shlb
jo
insl
mov
iret
or
xchg
push
mov
mov
test
test
and
xlat
lret
xchg
sbb
sbb
aas
pop
xchg
push
add
scas
in
ljmp
cmp
or
iret
adc
stos
stos
les
mov
mov
test
push
cmp
sbb
fsubrl
test
popf
mov
push
cmp
fnstsw
insl
inc
cmp
cs
inc
sti
ret
insl
cmp
and
adc
sbb
jno
or
decb
into
cs
pop
pop
mov
fs
cltd
xor
xchg
and
mov
fdivl
inc
mov
fisubrs
gs
adc
mov
pop
data16
add
aas
lret
aad
xchg
or
in
ret
adc
cmc
cltd
das
and
pop
call
mov
loope
add
les
lcall
dec
lds
or
es
jp
imul
pushf
cmp
push
adc
sub
jmp
inc
out
insl
add
outsl
je
test
cmpl
imulb
sub
and
xor
pushf
or
gs
mov
shl
aam
sbb
negl
xor
rorb
in
sbb
loope
or
addr16
adcl
lea
xor
pop
addr16
sbb
lea
in
pop
jns
in
ljmp
ret
jne
test
sub
iret
popa
repnz
in
push
and
push
mov
xchg
xchg
cmp
adc
dec
call
mov
mov
xchg
iret
sti
popa
add
pop
ret
lahf
add
xchg
add
and
adc
ja
push
idiv
lods
push
bound
or
insb
cmp
ret
add
nop
cmp
cwtl
popa
ds
xor
and
and
cld
pop
stos
jmp
aad
mov
lahf
addr16
clc
push
stos
add
mov
xlat
sbb
inc
int3
cmpsl
arpl
rcll
pop
pop
and
lret
pop
mov
or
push
jmp
mov
sub
test
xchg
sub
int3
inc
and
add
std
rolb
or
mov
fdivp
push
inc
cwtl
push
push
insb
pop
adc
sbb
xor
xor
andb
pop
ljmp
xchg
xchg
add
lods
jb
ret
ja
push
rcll
dec
lret
adc
out
popa
shlb
cs
mov
or
inc
inc
ljmp
or
dec
nop
pop
lcall
sub
jle
or
adc
loopne
ja
add
or
push
jecxz
and
cltd
xor
neg
dec
xchg
nop
cmpsb
movsb
int
xchg
dec
pop
pop
mov
inc
mov
mov
and
fidivs
out
cmp
sti
sbb
sbb
jmp
inc
inc
fisttpll
dec
sub
lods
ds
xlat
push
pop
adc
sbb
sbb
cmpsl
jl
ljmp
fcoml
or
sbb
inc
dec
addr16
mov
jb
das
stc
cmp
mov
test
sbb
insl
xor
sti
cld
push
mov
imul
sub
into
mov
mov
pop
roll
test
cwtl
push
jae
lret
pop
sbb
lds
dec
rcll
dec
sub
sbb
adc
dec
loope
and
push
inc
in
stos
jb
fldl
sub
mov
inc
jns
aam
add
mov
push
imul
in
rcll
fdivrl
inc
dec
fwait
enter
xchg
ret
adc
clc
cli
mov
fisubl
icebp
shlb
xlat
xlat
xchg
popa
cwtl
push
lret
and
sub
fsubs
cwtl
cmp
jmp
add
mov
jne
inc
sarl
aam
leave
rcr
mov
mov
jno
ret
xchg
or
iret
cmp
mov
bt
int
cmp
cli
mov
lret
xor
roll
xchg
and
xchg
ljmp
push
add
and
pop
mov
stos
lock
mov
out
dec
mov
mov
pop
and
es
fcmove
push
cld
xchg
jo
push
push
push
int3
rcl
push
pusha
popf
push
xchg
add
imul
imul
imul
mov
and
ret
sbbb
push
ss
jns
pop
mov
fisubl
mov
bnd
call
sub
push
int
test
push
shl
jbe
dec
jo
add
and
xchg
andb
pop
mov
enter
dec
inc
movsl
jne
enter
int3
nop
popa
clc
xor
xor
lods
inc
adc
inc
sbb
repz
inc
pop
andl
adc
lcall
xorl
das
dec
cmp
ss
bound
ror
pop
mov
mov
cmp
cmp
fmull
jno
lcall
xchg
in
cld
fidivrs
mov
sbb
pushf
push
fidivl
aam
leave
xchg
xor
adc
cs
xor
jecxz
jg
add
add
mov
inc
je
sub
pop
cmpb
loop
mov
dec
outsl
vprotw
clc
outsl
or
pop
mov
jecxz
mov
mov
cltd
pusha
fistps
inc
dec
inc
lcall
rcll
stos
rcll
inc
jb
movsb
test
fisttpll
cmpsl
insb
sub
int3
cmp
inc
rcrl
outsb
push
insl
popf
loop
fwait
xor
inc
jp
xchg
inc
mov
rorl
push
das
mov
jo
sub
sub
inc
js
mov
and
jo
in
inc
out
xlat
dec
push
push
adc
push
push
ret
and
xchg
sub
sub
and
mov
fmull
imul
pop
cld
add
add
push
mov
pop
out
out
bound
incl
inc
cltd
pop
inc
rcrl
ret
loop
fadd
mov
icebp
scas
dec
hlt
inc
mov
lret
arpl
jp
xchg
mov
jge
shll
mov
cwtl
xchg
sbbl
pop
dec
incl
jns
jge
cltd
sub
sahf
jbe
add
loope
repz
push
xor
es
int3
movsb
xor
enter
push
mov
popa
add
mov
fildll
dec
sbb
sbb
mov
mul
adc
cs
push
mov
xchg
hlt
push
bnd
insl
mov
jns
fcmovnbe
inc
out
popf
push
push
jecxz
mov
adc
add
mov
icebp
xchg
add
or
aam
das
outsb
call
stos
ret
push
pop
sub
cli
rcll
pop
cmp
jmp
aas
push
cmpsl
add
stos
mov
and
xor
sbb
fsubrl
adc
jg
js
nop
dec
push
xchg
movsl
cmc
iret
push
add
or
dec
sub
dec
daa
cld
imul
or
in
xchg
xchg
imul
test
add
xchg
int3
lods
outsl
mov
mov
rcrb
pop
dec
ss
xlat
sub
stos
push
mov
outsl
sub
cmpsb
test
pop
mov
lods
out
subl
push
cmp
pop
mov
sub
ret
loopne
ljmp
push
popa
cmp
incb
mov
push
js
sbb
xlat
in
and
sarl
jmp
sbb
rcrb
fcomps
fists
mov
push
xchg
fimull
dec
pop
and
pop
add
xchg
pop
mov
imul
lods
icebp
inc
and
push
int3
aam
pop
jle
push
imul
add
nop
je
or
mov
lods
cmp
cld
cmp
icebp
or
pop
xor
add
adc
repz
inc
cmpsl
in
outsl
cmp
orl
inc
adc
in
pusha
pop
ret
push
ss
insl
inc
arpl
ret
outsb
gs
push
cmp
mov
mov
jo
adc
divb
or
jge
add
xor
mulb
and
outsb
jp
lea
mov
test
call
xorl
pop
cmp
lahf
ss
fidivrl
mov
push
cmpsl
sub
fsubp
icebp
mov
pop
pop
push
adc
call
sbb
repnz
sbb
aaa
loope
lods
icebp
ss
inc
mov
dec
xchg
sbb
rol
or
lcall
and
jl
mov
ljmp
mov
dec
hlt
jae
pop
mov
push
jb
rcl
push
and
adc
nop
insl
aam
or
mov
sub
aam
add
scas
fmul
mov
les
pop
push
jl
imul
inc
sbb
cltd
cs
mulb
ret
insb
rolb
out
scas
mov
push
mov
cmp
fcoms
mov
cmpsl
popa
fcoms
repz
mov
mov
movsl
xor
dec
mov
push
test
leave
je
loope
notl
sbb
pop
fucomp
cwtl
cli
sub
push
cmc
in
sti
mov
sbb
jmp
inc
dec
aas
lret
ja
adc
gs
push
leave
xchg
push
arpl
aas
fdivs
lcall
inc
addr16
dec
sarb
lret
loopne
ja
in
jp
and
pop
es
xchg
ret
hlt
repz
pop
lock
test
ret
imul
sbb
sbb
mov
cmp
sub
pop
test
dec
sub
jno
or
cmp
inc
inc
pop
pop
pop
shl
sub
shrb
jge
jg
bound
cmp
adc
icebp
sub
cmp
js
int
pusha
inc
or
xchg
aas
xchg
out
sahf
ficoms
mov
cld
sub
mov
and
sub
sub
adc
push
sub
je
and
hlt
xchg
mov
ret
rcrb
nop
out
xor
xchg
sbb
jno
cmpsb
mov
sahf
dec
dec
lock
mov
iret
sbb
push
mov
jecxz
push
mov
push
add
clc
xchg
fisttps
push
jbe
cmp
dec
adc
xchg
cld
imul
shl
inc
push
jle
inc
cwtl
push
dec
es
out
clc
js
mov
test
inc
sbb
dec
es
and
jbe
scas
into
inc
mov
std
jo
jbe
sti
fisttps
jne
xchg
push
rolb
pop
nop
aam
sbb
sbb
out
and
cmp
xor
fadds
or
inc
fmul
lods
push
cld
lahf
or
movsb
adc
inc
lods
stos
hlt
mov
push
lods
loopne
call
sub
bound
sbb
imul
bound
ret
lcall
adc
xor
push
or
mov
xchg
loope
sahf
dec
mov
lcall
push
gs
sbb
push
lods
std
and
xchg
push
mov
pop
hlt
mov
shl
popf
push
ds
push
pop
adc
pop
pop
inc
fisttps
xlat
popa
xchg
pop
mov
aas
mov
push
xor
sbb
int3
bound
cwtl
and
cmp
xor
out
add
jb
ss
add
pop
xchg
lret
ds
pop
inc
sub
test
test
push
clc
push
xor
mov
jno
in
mov
mov
aas
loopne
xor
ret
loope
ds
sti
mov
jo
movsl
sbb
push
pop
into
cmp
dec
lea
inc
lods
loopne
repz
jecxz
push
scas
call
jo
les
movsl
maxps
pushf
cli
mov
shlb
xor
xchg
stos
gs
popa
aas
xor
sar
push
xor
adc
pop
push
lods
pop
loop
fsubrl
mov
int3
ret
popa
or
fidivrl
adc
mov
notb
or
stos
repnz
xchg
push
lea
or
sub
fwait
mov
xor
xor
xchg
cwtl
aas
addb
cmp
cmp
or
jae
lods
sahf
fs
xor
mov
cmpsb
je
hlt
test
pop
push
inc
jo
cld
jne
loop
push
fidivrs
fstpl
jle
fdiv
push
subb
addr16
imul
adc
cmp
sahf
mov
sbb
mov
xor
pop
lds
adc
out
sub
enter
lret
sub
mov
inc
pop
data16
call
xchg
adc
in
xor
stos
and
inc
add
adc
jecxz
call
cmp
mov
xor
xchg
mov
lock
dec
sbb
or
xchg
icebp
int
inc
jo
movsl
lds
add
push
push
inc
std
pop
cmp
jb
sub
cmpsl
pusha
and
xchg
out
pushf
outsl
mov
add
sbb
xchg
pop
data16
pop
xchg
or
test
ret
pop
je
mov
lock
xor
mov
or
mov
jle,pt
push
cmp
roll
daa
push
push
jl
je
sub
push
mov
or
fwait
pop
pop
dec
cmp
in
fadds
sub
push
push
push
mov
data16
xor
pop
outsl
scas
lods
cmp
xchg
push
mov
xor
cmp
lods
xor
push
adc
inc
mov
cld
xor
push
mov
or
push
or
inc
inc
xchg
test
and
ljmp
cmpsb
std
repz
mov
mov
arpl
out
mov
inc
push
push
sub
movsb
adc
outsb
push
push
loope,pt
cmpb
mov
dec
jbe
or
pop
pop
cmp
enter
pop
sub
pop
xlat
lret
xchg
adc
ja
add
push
mov
fcmovbe
dec
fsts
add
adc
jl
push
data16
jecxz
test
fs
mov
mov
push
aam
fnstenv
int
scas
jp
dec
div
mov
js
popf
sbb
mov
bound
mov
mov
pop
or
cwtl
lea
adc
mov
dec
inc
arpl
pop
ljmp
xorl
addb
inc
dec
adc
xchg
divl
jp
adc
shll
fnsave
cmp
push
jb
sbb
ret
addr16
mov
xor
sub
cmp
fimull
sbb
lret
scas
sbbl
lret
and
pop
xchg
adc
fists
int
int3
idivl
ret
popf
xor
aam
in
dec
ss
stos
jle
mov
add
xor
ja
stos
nop
int3
data16
mov
ljmp
lods
aaa
push
push
imul
cmp
jle
orl
xor
mov
sub
test
mov
dec
insl
jne
or
jle
es
cwtl
ja
adc
jbe
mov
inc
sub
scas
lret
stos
push
in
adc
cs
xor
or
lods
xor
scas
pop
test
test
xchg
xor
sbb
icebp
das
stc
lods
insb
notb
sub
xchg
push
fisubrs
add
gs
aad
dec
xor
xor
repnz
dec
sbb
rol
adc
lcall
scas
jmp
cltd
adc
pop
popa
xchg
rorb
pop
jle
cmp
fsubrl
sub
mov
mov
xchg
cli
jl
mov
es
out
jmp
mov
xlat
jmp
and
lahf
aam
push
mov
jle
mov
fdivs
cmp
push
pushl
mov
cld
jecxz
sbb
dec
cli
aam
icebp
das
popf
and
stc
cmpsl
sub
outsl
or
adc
sbb
lret
or
shl
sahf
insl
movsl
xchg
cmp
mov
int3
push
js
xor
jo
mov
ljmp
jb
stos
ljmp
jo
popf
mov
sti
stc
or
adc
pop
stos
int3
add
std
stc
lcall
xor
repnz
leave
ds
pop
push
pop
dec
xor
decb
pop
int
xchg
loope
jb
inc
fimuls
scas
lods
insb
pushf
mov
daa
fs
cmp
fdivrp
mov
frstor
mov
ja
repnz
ss
out
arpl
xor
int
data16
adc
iret
repnz
fwait
test
mov
dec
rorb
mov
ljmp
shrl
mov
pushf
mov
lods
sub
mov
into
mov
sar
mov
outsb
dec
mov
jno
nop
das
dec
push
inc
mov
sbb
pusha
inc
jmp
jns
fdecstp
aas
jo
stc
int
lcall
mov
call
fsubl
adc
loope
mov
hlt
gs
mov
into
jae
and
shrl
insl
test
pop
addr16
lds
jb
mov
pushl
sub
mov
mov
pop
cmp
xchg
imul
cs
mov
dec
mov
mov
psrad
cmp
test
jo
xor
xchg
lods
fwait
dec
xor
push
sub
add
inc
test
mov
fwait
pop
scas
mov
lock
pop
jg
rcll
sbb
in
xorb
in
rcrb
pushf
call
and
stos
imul
adc
jge
and
es
xchg
adc
dec
mov
daa
jle
ljmp
adc
hlt
pushf
pop
aas
test
xchg
outsl
push
dec
aaa
lds
lods
sub
mov
in
cmp
out
pushl
mov
gs
mov
cmpsl
lods
xchg
fists
lods
push
or
inc
pop
push
jno
adc
push
scas
push
xor
js
xchg
popf
add
or
push
leave
xor
sub
imul
xchg
lods
or
fldcw
repnz
test
pop
xor
add
call
inc
sar
rclb
outsb
dec
ret
scas
out
add
mov
or
shl
inc
and
xchg
repnz
in
js
movsb
jb
sub
fs
outsl
mov
cmp
rcrl
movsl
dec
addl
xor
and
ss
or
mov
push
cli
cmp
mov
xor
ficoms
mov
shlb
outsb
into
pusha
push
pop
pop
call
mov
dec
cmp
fistpll
cwtl
mov
push
mov
aaa
packuswb
daa
add
loope
and
imul
jne
fwait
loop
aaa
jb
ja
jg
jb
data16
lds
xor
mov
lods
pop
js
ljmp
or
ja
xchg
ret
daa
aaa
pop
push
cmp
mov
cs
sub
inc
xchg
sbb
or
push
aam
sbb
mov
stos
mov
shll
pushf
jecxz
add
popf
sti
fs
aaa
mull
add
sub
jne
leave
or
pop
or
leave
mov
mov
clc
shrb
mov
push
sub
dec
lods
test
je
mov
cltd
pop
mov
mov
xchg
pop
sub
movsb
lcall
dec
pop
inc
mov
push
sbb
dec
lret
or
xchg
jae
into
shr
xor
stos
addb
rolb
cmp
lods
sbb
add
dec
push
call
push
out
xor
sub
subb
rorl
cmp
pusha
ficoml
call
add
pop
sbb
jg
mov
cld
xchg
mov
xchg
rcrl
dec
stc
jnp
aam
mov
dec
mov
adc
xor
dec
adc
mov
loop
push
ret
inc
mov
mov
push
fcomps
jmp
or
xlat
pop
pop
mov
pop
push
jae
pop
dec
mov
lods
rolb
imul
mov
pop
sti
clc
inc
aad
xchg
jecxz
insb
stos
mov
mov
mov
in
in
out
xchg
cli
call
repnz
aas
movsb
jb
pop
pushf
inc
and
add
mov
das
idivb
popf
pop
mov
mov
jp
sbb
adc
inc
cmp
subl
and
mov
fmuls
in
out
and
xor
mov
mov
inc
loopne
inc
in
xor
lcall
sets
pop
mov
scas
jb
xchg
mov
jne
int
call
mov
sbb
jmp
pop
dec
bound
fnstsw
scas
aad
andl
lcall
lds
adc
aad
loop
or
mov
sbb
sbb
dec
leave
mov
mov
jg
xchg
or
jbe
pop
jp
inc
jo
lret
nop
pop
aad
outsl
ficoms
jp
into
data16
daa
insl
jp
mov
movsb
push
movsb
pop
negb
xchg
sub
negl
mov
add
sbb
movsl
push
repnz
call
rcrl
arpl
cmc
sub
iret
mov
mov
repz
mov
cltd
xchg
data16
outsb
addr16
aam
jl
adc
lods
shlb
in
dec
and
popa
aam
loopne
sbb
push
mov
push
and
dec
push
add
sub
inc
fstpt
lahf
pop
inc
or
out
jno,pn
repnz
out
repnz
and
sub
mov
xchg
cmp
fadd
ret
push
mov
in
insl
sbb
mov
fisttpl
faddl
in
cmp
sbb
pop
pop
test
out
pop
mov
fwait
xor
cmp
clc
scas
loop
std
mov
dec
xlat
cmp
dec
xor
adc
pop
and
out
imul
ss
adc
lret
dec
jbe
mov
cmpl
std
add
jae
jbe
int3
imul
or
push
xor
pusha
daa
dec
loopne
lods
xchg
xchg
mov
test
xchg
add
scas
scas
xor
movsb
outsb
xchg
mov
or
es
aam
or
push
sbb
fwait
jmp
push
xlat
dec
or
push
push
sahf
stc
loopne
mov
pusha
sbb
testb
lret
add
mov
sbb
aaa
pop
xor
mov
cwtl
push
mov
out
ja
mov
or
or
loopne
clc
xchg
sti
mov
pop
icebp
imulb
dec
test
test
cmp
and
sahf
inc
popa
mov
lods
das
sub
push
fisubrl
leave
push
mov
dec
jno
enter
or
mov
pusha
jno
movsl
xor
push
ds
mov
sbb
sbb
mov
cmpsb
sbb
sbb
mov
adc
popf
js
pushf
shll
out
mov
push
sahf
stc
pusha
out
ja
push
jg
stos
lods
movsl
add
sub
adcl
xor
push
mov
xchg
mov
pop
out
testl
loop
jno
cmp
shl
jl
lret
xlat
sbb
xor
movsl
or
xor
jo
les
cmovs
adc
ja
popa
xchg
fcomps
push
xchg
dec
mov
cmp
out
adcb
xchg
add
je
sub
mov
je
cmpsb
fildll
pushf
sahf
xchg
std
mov
in
movsb
or
inc
arpl
sahf
push
stc
mov
fsubrs
mov
fnstsw
dec
pop
mov
xchg
je
cmp
cwtl
pop
jmp
lea
mov
stc
jl
jecxz
mov
jle
lahf
jo
and
dec
xchg
lods
pop
ret
mov
add
mov
gs
jmp
clc
arpl
inc
and
cmp
rorb
jbe
shll
push
cmc
jge
cwtl
xor
in
push
int
mov
dec
cmpsb
mov
insl
addr16
add
jo
xor
or
push
pop
rol
dec
pop
xchg
in
popf
lret
adc
shll
pop
sbb
fadds
cmpsl
mov
mov
mov
hlt
lea
or
loop
mov
test
and
xchg
sti
push
mov
xchg
jno
or
or
stos
ss
nop
ret
pop
fwait
mov
loopne
arpl
jle
out
mov
fildl
jg
mov
mov
push
mov
cmp
and
sbb
test
pop
dec
sahf
stos
push
pop
xor
loop
mov
xlat
ds
mov
xchg
mov
fildll
sbb
sarl
aas
imul
addr16
rclb
lea
mov
nop
int3
out
fcmovu
popf
jae
dec
out
movsl
loopne
pop
dec
int3
mov
into
sti
and
xchg
int3
ljmp
xchg
jbe
inc
xchg
test
mov
outsb
jmp
call
pop
xor
mov
addr16
sub
fcomp
pushl
dec
and
pushf
push
mov
loop
mov
cmp
jp
cld
xchg
mov
std
lock
fldenv
ret
mov
in
cmpsl
bound
xor
xor
movsl
add
jno
sti
pop
xchg
mov
pop
cmp
sahf
popw
push
rclb
lcall
pop
ss
cmpb
int3
fdiv
cmpb
imul
cmp
rcr
stos
dec
inc
push
frstor
or
jns
adc
xchg
fildll
int3
je
or
orps
nop
shrb
jno
jnp
and
enter
add
std
das
adc
sbb
jmp
dec
in
jp
mov
xor
dec
xor
lret
mov
imul
nop
sub
jb
leave
imul
and
inc
fwait
jecxz
xchg
push
mov
xor
lret
lds
or
cli
loopne
cmpsl
outsl
push
movsb
xchg
call
sub
jge
mov
in
loope
les
mov
mov
dec
leave
leave
in
lret
adc
repz
or
adc
xchg
sbb
mov
fwait
loopne
xchg
repz
dec
and
out
pop
scas
pop
mov
shrb
adc
xchg
insb
mov
scas
mov
cmp
jno
cwtl
dec
lcall
pop
inc
push
divl
ja
pop
mul
cmp
add
jp
cmpsl
in
ds
std
icebp
dec
push
gs
rolb
mov
pop
sub
push
or
add
adc
pusha
pop
movsb
mov
xchg
outsb
inc
xchg
xchg
sti
out
xor
cmp
addr16
dec
ds
mov
out
outsl
and
cltd
xchg
jecxz
test
push
fxch
xchg
pushf
loope
stos
inc
jmp
nop
add
hlt
popa
repz
movsl
cmp
gs
xchg
push
in
xchg
jle
xchg
daa
scas
in
ds
sub
sbb
loope
les
subl
mov
adc
in
stc
xor
xchg
pop
sbb
adc
shll
loop
sbb
ret
mov
sub
outsb
xchg
pop
jbe
ljmp
out
mov
xor
inc
inc
jae
add
adc
test
sbb
and
jecxz
cmp
cmpsl
sbb
mov
sub
dec
orl
sbb
cmp
push
shrb
lret
andb
pusha
test
xchg
xchg
xor
test
jo
iret
dec
xor
in
loop
popa
movsb
cmp
adc
cwtl
mov
call
jmp
cmpsl
cmp
and
std
or
push
dec
xor
push
and
xchg
fwait
popa
ss
xchg
data16
aaa
imul
les
fcomps
loopne
jbe
stos
lcall
sub
int
movsl
cltd
pop
cli
xchg
popf
xchg
call
jbe
inc
popa
lods
les
fisttps
or
dec
clc
les
xchg
sub
andb
popf
mov
jns
int3
push
std
xchg
add
pusha
push
mov
jecxz
inc
pop
push
cmp
es
push
xchg
dec
ljmp
test
in
aas
les
hlt
inc
into
mov
fsts
je
add
xchg
cld
xor
or
jo
dec
popa
outsb
xlat
push
xor
xchg
xor
push
xchg
fbstp
mov
in
or
xchg
push
scas
pop
ljmp
add
aas
int
orl
push
mov
je
pop
jbe
cmp
jb
xchg
add
into
mov
xorb
stos
movntq
ds
test
inc
mov
fldt
pop
clc
and
jg
ljmp
negb
add
fdecstp
dec
mov
sbbb
out
or
dec
inc
cli
sahf
or
js
es
scas
push
pushf
push
fs
sbbl
aaa
int
sbb
insb
sbb
loope
data16
sub
fld
sbb
add
mov
imul
std
pop
jns
ss
out
xchg
xlat
rorb
nop
dec
test
mov
pop
xchg
rclb
and
jp
sub
pop
lods
adc
arpl
into
add
and
test
cmp
lahf
mov
daa
cs
les
in
mov
pop
mov
roll
and
push
and
jp
mov
fisttps
sub
arpl
sarl
inc
lea
lcall
push
out
cld
fistpl
lret
int
xor
daa
adc
xor
xchg
cmp
xor
sbb
js
das
push
loop
dec
xchg
adc
jne
xchg
fs
ret
jnp
sbb
sbb
ds
mov
cmpb
das
lea
out
xor
xchg
push
test
scas
cs
mov
clc
movb
imul
test
adc
cs
pop
inc
sarl
jb
pop
mov
xchg
mov
gs
fisubl
cwtl
ds
enter
dec
sahf
push
shlb
push
xor
add
jmp
lcall
jecxz
out
pop
andl
push
rcrl
push
mov
xchg
into
dec
push
call
pop
fnstsw
les
movsb
add
cmovb
xor
xchg
mull
stos
mov
xchg
cmp
insb
hlt
xchg
cmp
mov
jp
dec
xchg
sbb
xorl
pop
fmull
call
stos
pushf
xor
jae
ret
cmp
js
mov
push
cltd
ss
imul
movsl
jl
cmp
cmp
pop
outsb
sub
inc
adc
pop
push
stc
xorl
lods
xchg
lods
gs
into
je
mov
adcb
rorl
mov
sbb
hlt
std
movsb
cli
xor
xchg
push
sbbl
pop
aaa
sub
negb
fdivrl
dec
add
dec
mov
cmp
mov
xchg
xlat
lcall
cmpsb
nop
push
fldcw
outsl
popa
outsl
aaa
loopne
outsl
cmpsb
sub
jnp
iret
mov
push
outsl
fs
sbb
mov
pop
jecxz
dec
mov
pop
jbe
inc
aad
sti
jmp
mov
adc
jne
leave
push
das
cwtl
mov
cmpb
xchg
mov
and
mov
arpl
sbb
loope
mov
sahf
cli
push
dec
andl
push
lret
jecxz
imul
aaa
mov
daa
rcll
mov
cmc
sahf
hlt
mov
xchg
shr
dec
fidivrs
xor
hlt
mov
mov
in
stos
gs
mov
test
insl
push
test
scas
add
sbb
pop
pop
sbb
xor
in
cmc
addr16
outsb
pushf
pop
nop
jmp
rorl
and
sub
add
jl
or
adc
stc
mov
lods
leave
outsl
movsb
les
dec
push
lahf
test
push
into
sbb
pop
jns
into
mov
dec
push
cmp
sbb
repz
out
jbe
xorl
arpl
push
or
stos
xor
in
test
out
rorl
loopne
lret
fmull
pusha
or
xor
es
rcll
aas
int3
in
sub
mov
addr16
pop
movsl
int3
in
insl
pop
hlt
xor
out
popf
push
sarl
or
push
cmpl
sub
into
lret
inc
inc
adc
imul
mov
jl
icebp
sub
pop
ds
test
aam
dec
jp
pop
scas
fwait
mov
push
cwtl
fcom
xor
aad
cwtl
jg
or
pop
aaa
mov
pop
sbb
push
outsl
push
pop
push
stos
into
mov
out
xchg
nop
dec
jecxz
xchg
mov
ds
repnz
xor
addr16
push
adc
inc
lock
rcll
cld
int3
cltd
fsubrs
sbb
mov
adc
movsl
xlat
test
call
movsl
dec
pusha
cli
sub
xchg
lret
repz
dec
fiaddl
sbb
mov
add
push
stc
out
stos
pushf
pop
cmp
sarl
or
push
ljmp
mov
out
repnz
sbb
lods
mov
rclb
pusha
popf
test
ss
jno
nop
ror
add
jae
sub
cmp
jbe
pusha
sbb
movsb
loop
adc
mov
push
xor
jne
cltd
outsl
ljmp
mov
faddp
out
xor
jno
xor
mov
push
aam
cmp
aad
mull
iret
inc
sbb
inc
das
jne
and
jp
xchg
dec
pop
pop
fildll
jne
xor
mov
push
dec
bound
push
or
sbb
cmpsl
mov
or
push
and
lret
adc
add
dec
xchg
mov
inc
inc
xchg
pop
jle
negl
mov
push
imulb
jne
add
sub
or
inc
lods
imul
loope
dec
sti
lcall
fnstenv
les
movsb
xchg
inc
sub
xor
scas
and
aam
in
test
jo
cmp
mov
mov
mov
pop
por
pop
xchg
das
movd
and
cmp
mov
sti
imul
and
mov
mov
int
icebp
mov
lcall
lods
dec
push
movsb
in
push
data16
or
std
repz
xchg
xchg
push
in
jb
test
ret
cmp
bswap
xchg
dec
mov
lret
dec
adc
loope
dec
and
or
lret
movb
dec
cmp
mov
mov
arpl
aam
sbb
movsl
mov
outsb
popl
fdivl
pop
push
lods
ret
lret
add
and
jb
lds
lret
jp
test
dec
out
mov
fnstsw
fwait
data16
cmp
push
out
or
mov
add
or
pop
insb
adc
or
cltd
xchg
inc
sub
xor
adc
inc
jno
inc
pusha
pop
rclb
clc
xchg
xchg
stos
fisttpl
add
into
jo
out
xor
mov
pop
lea
mov
repz
arpl
fs
es
mov
cltd
sbb
daa
xor
adc
lea
fucomip
ja
sbb
lods
mov
xor
icebp
fmull
push
inc
jmp
shrb
jle
aad
dec
xchg
and
push
jbe
popf
mov
std
mov
aam
mov
mov
aaa
xchg
scas
pop
xchg
loopne
add
jg
dec
or
xorl
jae
or
cli
adc
dec
je
faddl
xchg
xor
mov
pushl
sub
out
jbe
mov
sub
cli
js
xorl
stos
pushf
ja
mov
int3
dec
jmp
mov
adc
insl
xchg
loopne
push
lahf
lods
inc
in
bound
pop
push
push
push
push
jge
bound
inc
pop
pop
data16
lds
cmc
sbb
cltd
dec
shl
stc
or
cmp
mov
cmovne
mov
mov
fsubr
lret
js
xchg
repz
cmp
lret
mov
dec
lret
test
sub
dec
jnp
and
push
test
mov
sbb
push
xlat
leave
std
mov
pop
imul
xlat
sarb
xchg
mov
icebp
cmpsl
mov
jne
dec
out
push
sbb
adc
mov
push
cmp
jae
arpl
xchg
dec
movsb
push
xor
jl
int3
pop
xchg
push
iret
pop
sarl
cmp
icebp
jbe
int3
stos
adc
and
dec
aam
push
jnp
and
dec
mov
mov
push
mov
mov
loop
imul
leave
stc
subl
sbb
sub
pop
pop
popf
inc
sub
mov
jecxz
lret
lods
jnp
pushf
dec
inc
lahf
jo
mov
xchg
scas
and
jg
clc
mull
push
pop
sahf
cmpsl
sti
jg
and
fisttpl
inc
xchg
aad
push
jmp
mov
mov
jmp
or
nop
fiaddl
ss
imul
sbb
mov
rolb
inc
lahf
xchg
cmpsb
inc
inc
xlat
das
xchg
and
mov
sbb
lods
push
arpl
test
mov
push
push
mov
push
push
incl
push
insl
int3
das
push
mov
push
in
daa
out
sub
popa
imulb
mov
lods
cmp
and
push
pop
insl
mov
lock
push
shr
cmpsl
pop
in
ja
ret
out
out
aam
gs
lods
xchg
jge
shl
ds
call
lods
fmulp
pop
dec
andl
lcall
pop
xlat
xor
mov
cmp
in
inc
mov
jmp
mov
int3
fisubrl
sbb
and
imul
mov
or
into
lock
pop
mov
push
aad
das
out
lcall
or
enter
push
adc
pop
push
ror
xor
jo
jecxz
sbb
imul
int3
cmp
cmp
cmp
out
fcoml
jp
cmp
cmp
xor
cmp
mov
ss
inc
inc
enter
daa
or
fisubrl
inc
cli
mov
lcall
shr
fisubrl
mov
pop
or
xchg
and
frstor
add
stc
mov
cld
dec
test
or
imul
pop
push
pop
xchg
frstpm(287
fmull
cld
pop
rol
jle
aas
cwtl
xchg
xor
cmp
icebp
into
or
subl
push
lcall
orb
std
mov
aam
das
out
je
inc
mov
imul
inc
and
pop
cmp
sub
pop
dec
sub
add
out
movsb
xchg
in
xchg
push
lcall
add
outsb
inc
bound
je
adc
pop
mov
aam
lods
pop
cmp
push
pop
jae
inc
lds
and
fs
ret
jg
stos
ret
in
dec
adc
pop
stc
mov
add
xor
loopne
and
fbstp
mov
push
bound
or
cmp
mov
push
pop
cmpl
and
scas
sub
lods
aaa
dec
mov
inc
jmp
xchg
ss
add
mov
add
mov
ret
mov
lcall
dec
dec
rcl
adc
dec
mov
pop
daa
divb
push
and
add
test
insb
fimuls
sub
stos
daa
sti
wrmsr
mov
and
in
cmc
pop
xlat
or
jmp
les
cmp
jecxz
ds
push
jp
mov
adc
call
xor
dec
xchg
pop
faddl
fs
inc
mov
pop
fmull
mov
xchg
push
or
repnz
mov
push
lea
cmp
add
jecxz
jg
fdivl
aam
idivb
gs
inc
aas
std
and
inc
push
je
sbb
jno
in
pop
pop
adc
add
sub
sbb
mov
xor
lret
mov
xor
outsb
inc
push
ret
shrl
mov
repz
ljmp
int3
mov
cli
aas
jae
int3
popf
andl
cmp
jle
or
cld
out
fsts
or
mov
les
ret
push
mov
dec
jne
pop
ja
idiv
xchg
and
sahf
jecxz
loope
in
xchg
mov
push
jg
lea
in
xor
loop
hlt
jmp
pop
aam
daa
lcall
jmp
stos
jno
lahf
fsubs
cmp
lea
add
into
rep
popf
adc
ja
test
sbb
xor
int3
push
xchg
push
mov
or
mov
lock
sub
mov
add
pop
jo
stos
arpl
frstor
cmp
cmp
insb
mov
lcall
in
add
aaa
scas
leave
mov
fsts
mov
push
stc
scas
sbb
es
hlt
mov
jmp
xchg
sub
push
cmp
lods
scas
push
divb
mov
cltd
cmp
arpl
ret
adc
adc
call
pop
loopne
das
xchg
jns
xchg
jg
jne
lcall
lahf
inc
das
pop
repz
jae
or
js
mov
mov
out
fcomps
jno
push
sub
dec
pushf
fwait
sub
sub
mov
xchg
insb
xor
cmpsl
or
xor
xchg
test
dec
sub
inc
movsl
loop
inc
xchg
add
pop
shr
push
push
in
xchg
popf
pushf
pusha
mov
out
pop
stos
or
rcrl
push
push
add
xor
push
popf
jmp
stos
fistps
inc
mov
cltd
pop
cltd
xchg
mov
sub
sub
in
add
or
adc
adc
enter
pop
xor
lcall
xchg
jne
jno
nop
sub
inc
lret
mov
daa
js
shll
scas
and
popw
cli
pop
cmpsb
cld
lods
pop
fldcw
mov
adc
inc
rcrl
inc
inc
jne
jo
stos
popa
aad
fcomps
jp
xorl
inc
inc
cmp
mov
gs
mov
fdivs
pusha
scas
das
leave
cmpsb
or
cmp
and
fstpl
and
inc
mov
sbb
mov
sbbl
mov
and
fisubs
adc
cmp
sbb
adc
pop
jecxz
push
mov
lods
cmpsl
sub
push
cmp
xor
mov
xor
jo
mov
stc
popf
push
imull
call
cmp
add
pop
mov
xchg
push
loope
or
mov
lods
pop
mov
jle
mov
jmp
pop
jmp
scas
and
shll
loopne
dec
sub
cs
pop
out
jae
cmp
inc
pop
mov
adc
iret
add
iret
push
fisubrl
arpl
lds
mov
sti
into
call
jbe
cli
out
or
bound
or
insb
xchg
xor
adc
pop
int
or
adc
cmp
mov
aam
and
push
int
dec
js
pop
sub
and
mov
xorl
icebp
push
inc
mov
popa
aad
pop
ss
jnp
mov
out
call
pushf
lcall
test
inc
pop
ret
ja
fisttpl
shlb
mov
push
pop
inc
lods
js
std
add
push
outsb
outsb
xchg
jo
xchg
popa
push
jmp
lcall
leave
les
push
mov
in
dec
jnp
ss
aad
add
adc
and
ficomps
outsl
sbb
cmpsw
sub
push
cwtl
sbb
je
and
cmp
ds
or
push
pop
into
pop
lcall
cmp
mov
inc
add
or
mov
adcl
sbbl
cmp
add
rcrl
pop
popa
xor
inc
push
pushf
xchg
xchg
test
push
lods
sbb
jmp
stc
ret
scas
in
jp
xor
push
stos
lahf
outsb
aaa
scas
insb
scas
fnstcw
xchg
addr16
in
xor
sbb
mov
dec
shll
int
fisubrl
xor
xchg
aas
lea
jns
lret
fisubrl
and
add
ja
arpl
fsubrs
xor
out
shlb
into
push
mov
in
pop
subb
add
scas
decl
and
cs
mov
enter
lret
fiaddl
and
aas
in
add
fwait
ja
sub
mov
mov
in
test
cld
hlt
loopne
xchg
aas
mov
lods
cmpsl
stc
les
out
sbb
cmp
pop
adc
pop
les
jecxz
in
andl
push
scas
fldl
inc
out
mov
sbb
movsb
jnp
xchg
pop
xlat
scas
pop
sbb
outsb
fs
sub
adc
iret
and
out
push
xor
xor
dec
add
ja
or
popf
repz
lock
cmp
les
in
lods
dec
shr
bnd
mov
sbb
pop
add
jecxz
lods
push
inc
mov
push
lcall
xchg
push
pop
je
shlb
jle
sbb
sbb
in
fs
sbb
add
xchg
or
push
rcl
jmp
inc
inc
xchg
in
out
and
ss
xchg
adc
outsl
mov
in
xchg
imul
pop
inc
xchg
stos
and
outsb
push
lret
xor
push
mov
cmp
fmuls
movsl
cmp
jae
bound
ret
pop
aad
stos
dec
sbb
mov
gs
lds
pop
jl
outsl
cmpsl
dec
fmuls
fcoms
add
pop
addr16
mov
jecxz
addb
xchg
mov
ret
stos
cmpsb
xchg
pop
ds
addl
cmp
cwtl
fiaddl
in
mov
xlat
fstpl
ss
push
mov
xchg
xor
xchg
pop
orl
and
mov
ret
lcall
stc
loop
add
cmc
les
xor
xor
loope
mov
xchg
adc
sbb
dec
cmp
mov
mov
inc
and
ret
and
push
incl
out
or
cmp
mov
outsb
int3
into
sub
fnsave
ss
imul
insb
sti
mov
pusha
sbb
push
mov
jge
mov
add
imul
ror
jnp
jbe
and
jle
imul
pop
ret
test
add
push
jae
outsb
ljmp
testl
out
imull
push
cmp
lret
fmull
push
es
and
cmc
mov
sti
and
xchg
inc
sbb
mov
pop
mov
mov
cmp
fsubrp
test
je
pop
ljmp
dec
dec
sbb
jecxz
fwait
cwtl
fwait
push
or
nop
and
mov
and
test
pushf
sbb
inc
enter
dec
or
inc
mov
lds
das
iret
add
and
daa
cltd
adc
dec
sub
add
mov
mov
push
adc
push
sub
xor
jno
lds
mov
mov
sbb
shrb
push
add
xchg
div
clc
jns
shl
dec
pop
mov
xlat
mov
test
cmp
or
push
shll
cmp
jne
fdivrl
das
nop
pop
mov
in
sbbl
les
movb
in
cmpb
test
popf
sub
mov
cmp
xchg
je
iret
pop
nop
je
pop
outsb
push
jae
sarl
xor
icebp
inc
shrl
pmovmskb
sub
mov
or
fsubl
mov
dec
les
xchg
lret
sbb
lods
imul
push
mov
dec
outsl
es
mov
inc
push
adc
ficoml
rcll
adc
sahf
outsl
and
out
popa
push
sub
fwait
outsl
pushf
dec
lods
mov
fcoms
or
addr16
hlt
cltd
dec
push
fmull
rcrl
xor
mov
sub
pop
sti
jg
mov
repnz
pop
add
insb
and
xchg
pop
lods
inc
in
cmp
mov
test
pop
aad
cmp
and
sub
out
sub
mov
sbb
sub
jno
xor
inc
sub
inc
cmp
leave
cli
mov
into
push
hlt
xorl
jecxz
xor
stc
fstps
cmpl
adcb
dec
xchg
call
pop
std
jecxz
xchg
call
ds
xchg
insl
call
lret
and
push
fs
mov
jns
cmc
inc
icebp
pop
xchg
jo
ss
mov
push
cmp
mov
add
jmp
xor
dec
in
outsb
jecxz
jno
dec
xchg
js
inc
adc
sti
and
jne
ds
mov
mov
fcmovnb
dec
scas
push
rolb
cmp
test
shl
cmp
enter
aaa
movsb
and
jl
adc
dec
push
mov
sub
fs
xor
lds
sub
out
in
inc
lock
jne
into
mov
mov
and
nop
cmpsl
add
dec
add
add
mov
aam
xchg
jne
mov
aam
add
jle
dec
pop
jmp
clc
sti
popf
mov
push
jbe
mov
mov
nop
fisubrs
or
cmp
in
cld
sbb
mov
jmp
mov
aam
jg
aaa
leave
cmovnp
pusha
jo,pn
shlb
fnstcw
das
ret
mov
xor
dec
or
push
decl
mov
inc
addr16
incl
push
aad
mov
dec
add
cmp
jmp
inc
stos
cs
dec
adc
mov
fdivrs
dec
in
mov
push
addr16
sub
dec
jae
push
test
push
jno
out
shll
idivb
xor
aam
mov
or
es
push
lret
popf
jmp
add
loop
sub
into
sbb
mov
shrl
or
mov
add
mov
jne
dec
rorb
inc
aam
les
shr
das
mulps
mov
jl
gs
jg
pop
push
dec
push
jb
ljmp
fbstp
iret
aas
jmp
mulb
call
subl
shll
xchg
scas
cmpsl
pop
lcall
mov
xorl
pop
add
jns
push
std
and
decl
mov
cmpsb
inc
push
jne
test
mov
je
inc
sbb
in
jp
call
insl
stos
and
rcr
inc
ret
stos
cwtl
loope
or
xchg
insb
push
cmp
aam
clc
or
movsl
test
mov
adc
repnz
jae
and
pop
dec
adc
dec
push
jecxz
jp
mov
rcll
repz
aas
mov
adc
xlat
pop
jns
mov
ds
sub
pop
arpl
mov
lock
sarl
adc
cmp
shlb
fisttps
cli
popa
sbb
movsb
das
xor
xchg
inc
mov
inc
xchg
fimull
xor
and
shrb
inc
jbe
dec
add
es
fidivrs
adcb
pop
adc
xorl
fidivs
mov
and
sub
and
in
sar
sarl
mov
jnp
lret
icebp
inc
and
pinsrw
push
jp
das
pop
jns
mov
cmp
xchg
fisubrs
pop
aaa
cmpsl
repz
in
mov
ja
rep
lock
and
pop
xchg
lahf
pushf
sub
sub
out
arpl
aad
push
addr16
inc
rorb
inc
jno
mov
decb
loop
cmpsl
fdivrp
push
pop
jecxz
sub
outsb
sub
dec
push
mov
sahf
xor
dec
addb
mov
sub
inc
arpl
mov
addr16
mov
xchg
jnp
adc
push
dec
ds
cmp
rcrl
push
daa
xor
pop
pop
aam
cmp
cs
mov
test
adc
xor
xchg
sub
inc
or
lds
and
rclb
mov
mov
cmp
adc
mov
push
mov
sbb
ret
sbb
aad
out
andb
stc
in
sub
jbe
je
sbb
lahf
mov
jnp
sbb
jb
repz
ja
insb
or
and
lds
dec
aad
das
dec
dec
sub
outsl
aaa
xchg
pop
sbb
std
lahf
stos
loopne
add
data16
xchg
pop
dec
mov
gs
lock
adc
jo
push
sbb
icebp
test
aad
lock
cmp
inc
dec
arpl
push
out
and
mov
imull
cmp
xchg
push
push
mov
push
aam
or
add
jno
jp
enter
mov
mov
mov
dec
or
mov
jp
enter
in
push
xor
mov
push
push
adc
jmp
sbb
jae
sub
outsb
push
adc
inc
loop
sub
push
fcmovnb
xchg
adcl
jns
adc
shrb
pop
mov
insl
sbb
xor
sub
pop
xorl
inc
push
insl
push
dec
je
out
jmp
add
sbb
sbb
rcr
push
repz
mov
jne
loope
loopne
mov
xchg
sub
repz
xor
mov
aas
cli
cmc
mov
cs
jns
jne
pop
jns
push
xchg
pop
mov
and
into
cmp
sarb
rolb
jb
loope
push
sbb
shll
cmp
add
mov
inc
jae
ret
mov
xchg
jmp
int3
fistpll
sub
push
insb
inc
xchg
aas
sub
rorb
mov
jb
pop
add
jne
sahf
xchg
sbb
cltd
lret
cld
rcrb
testl
subb
lods
xor
and
mov
loop
ret
bound
mov
pusha
mov
out
fists
fadds
aaa
pop
ficompl
jns
pop
sbb
outsb
jno
ja
shrl
addr16
in
cmp
jo
sub
imul
rorl
fsubl
sub
ss
push
leave
pop
xchg
in
ja
cmp
cmp
jmp
out
mov
inc
mov
ss
jbe
pop
cmp
fisubrs
pop
outsl
pop
push
adc
cld
sti
adc
test
xchg
pop
sbb
pop
cld
pop
mov
inc
jg
cmp
shrb
decb
insb
xlat
pop
and
push
arpl
aam
fucomip
ret
push
fwait
bound
sti
loop
rcrb
psubd
dec
dec
pop
inc
mov
pop
aad
xchg
jl
cmpsb
aas
or
dec
das
xlat
xchg
loopne,pt
addr16
adc
mov
andb
js
cld
jnp
mov
jo
aas
out
jns
jne
in
mov
aaa
popa
test
lods
xchg
add
leave
and
and
ja
or
les
scas
fildl
enter
mov
mov
pusha
mov
mov
adc
rorl
push
dec
fimull
xor
mov
xor
dec
mov
dec
sub
jmp
stos
add
xchg
je
cwtl
fldenv
je
inc
nop
insb
out
shr
sti
mov
sub
addl
dec
mov
adc
and
mov
scas
mov
or
push
nop
sub
gs
or
cmp
pop
jmp
shll
and
and
loopne
std
jmp
jle
hlt
int3
xor
aaa
adc
lret
mov
sub
sarl
jae
sbb
inc
std
and
mov
push
sbb
mov
cli
add
lods
and
adc
int3
ljmp
cmp
adc
dec
cmp
cli
sub
shl
pop
and
lahf
sub
es
inc
iret
sbb
in
movsb
out
pop
call
xor
push
loopne
sub
jmp
fnsave
loopne
lods
add
clc
outsb
mov
addb
das
adc
jl
outsb
adc
rcll
mov
es
roll
mov
mov
pop
imul
mov
pop
pop
push
cltd
jle
in
jo
mov
mov
lcall
pop
ja
mov
clc
inc
sub
fistl
int3
es
fmull
push
dec
mov
scas
push
dec
mov
les
out
or
andb
mov
or
dec
pop
and
call
mov
pop
test
jecxz
sbb
out
add
shll
rep
popa
xlat
int3
xchg
add
mov
out
rcrl
es
mov
insl
xchg
jl
cmp
push
push
mov
enter
cld
jo
sub
add
cmp
jl
or
ljmp
push
hlt
mov
xchg
jns
ss
mov
fwait
pushf
mov
sub
sbb
or
shrb
jp
cmp
icebp
add
cs
scas
movsb
aaa
xchg
imulb
cmp
and
nop
adcl
aas
ss
mov
ret
inc
pushf
jae
cmp
push
fdivr
mov
xor
leave
subl
ljmp
dec
xchg
dec
fldl
les
in
or
out
out
pop
stos
sbb
mov
xchg
lret
pop
cmpsl
into
cmp
nop
fs
cwtl
mov
xchg
jno
pop
mov
jae
out
pop
rcrl
push
in
pop
inc
divl
pop
sbb
hlt
mov
aas
push
lock
mov
jl
mov
loope
push
int3
shlb
sub
jne
and
call
int
jo
jns
cwtl
inc
in
mov
jmp
mov
lcall
dec
in
xor
jg
push
int
iret
out
mov
popf
cwtl
in
leave
push
out
xlat
testb
push
jge
jb
pop
std
leave
lods
mov
push
xor
push
cmp
divb
mov
mov
push
dec
xchg
cmp
ret
push
add
leave
mov
dec
popa
int3
cs
outsl
sti
ds
or
stc
jg
iret
dec
inc
xlat
adc
in
sub
push
add
lods
lods
out
popa
mov
mov
mov
rcl
enter
stos
idivb
jae
sub
stos
jp
cmpsb
adc
and
inc
stos
repnz
adc
mov
mov
push
sub
bound
call
xchg
std
cld
dec
sub
adc
aad
vmread
cmp
xchg
or
or
push
stos
and
and
leave
adc
xor
outsl
jae
in
es
mov
cmp
ret
int3
sbb
stc
mov
xor
inc
in
cmp
push
mov
xchg
xor
mov
stos
mov
add
fisubs
mov
insb
in
aam
loope
daa
lods
pop
outsb
shll
into
ficomps
xchg
popa
pushf
fsubrs
aad
sbb
gs
push
push
sti
outsb
insb
jnp
testb
dec
pop
jle
clc
push
jne
xlat
movsb
fwait
imul
flds
add
cmpsb
jmp
xchg
lahf
in
dec
xchg
ljmp
adc
sbb
jmp
dec
adc
inc
out
inc
inc
shrb
enter
ret
lahf
add
aas
pop
jo
push
popa
fstpl
cli
movsl
stos
mov
cltd
ja
fiaddl
sub
out
insl
pop
daa
std
xchg
int
scas
xor
insb
into
pop
leave
filds
xor
inc
and
inc
xchg
sti
std
pop
and
add
push
out
mov
and
ror
scas
or
rcrb
adc
insl
cmc
lds
jg
scas
fisttps
fisubl
mov
fists
pusha
dec
pop
das
test
int3
add
pushl
nop
push
inc
cmp
fisttpl
adc
ja
out
or
outsl
lods
push
sub
mov
add
push
leave
mov
lock
sbb
sti
pop
adc
mov
stos
cmpsb
cmpsb
jp
loop
cld
cmp
sub
movb
xor
dec
dec
jmp
outsl
sbb
sbb
out
cmova
or
and
ficomps
les
mov
push
or
popa
je
int
test
mov
dec
popa
push
insl
into
enter
add
shrl
enter
mov
and
mov
movsl
sub
pop
sub
sarl
push
xor
mov
mov
or
into
shrb
imul
sub
inc
rcll
lahf
dec
ret
add
xor
and
outsl
dec
fs
jns
dec
dec
lcall
outsb
fsubrs
sbb
inc
arpl
push
sbbl
ret
xlat
ja
add
jns
mov
cmp
aad
fstpt
push
mov
je
cld
ret
icebp
clc
pushf
sbb
push
push
xor
cmpsb
pushf
popa
dec
adc
mov
in
mov
inc
adc
jmp
mov
and
leave
sub
popa
leave
sahf
lods
cmp
das
or
xor
call
adc
lea
push
sub
iret
xor
ljmp
push
adc
push
cmc
roll
popf
movsb
stos
jne
xorb
xor
sub
in
int3
lret
mov
mov
pop
push
test
aas
ja
mov
jns
push
dec
xor
int3
movsb
add
jns
adc
clc
jle,pn
add
push
and
sarb
sub
shlb
iret
jae
ja
jge
sbb
cmp
or
shlb
sbb
push
xor
sub
or
test
mov
lods
cmc
inc
loope
rcll
mov
jmp
mov
cs
cmp
filds
aaa
mov
and
xor
mov
jne
cmp
pop
test
xchg
mov
lods
mov
mov
mov
xchg
add
mov
jb
gs
push
cmp
sub
insb
push
adc
dec
mov
mov
fcmovnbe
cld
or
icebp
mov
jg
cmp
mov
xchg
dec
outsb
clc
call
push
cltd
das
pop
inc
das
dec
sahf
and
dec
sti
sub
add
loop
mov
or
outsl
cmp
sub
arpl
scas
movsb
outsb
push
sub
loop
movsl
push
sub
push
iret
jecxz
push
xor
scas
jge
mov
mov
lods
xor
addb
mov
jbe
and
ja
fbld
clc
aaa
or
daa
sbbl
dec
ja
mov
mov
mov
call
popa
push
xor
jno
aas
pushl
lahf
push
mov
fwait
aam
xchg
mov
pop
cmp
pusha
jecxz
shr
ljmp
jl
xlat
or
sbb
frstor
movsl
test
xor
ja
add
in
out
mov
sarl
ficompl
and
in
mov
clc
out
sbb
pusha
pop
lcall
data16
js
lods
nop
xor
lcall
in
sbb
mov
add
and
std
lahf
stos
pop
sbb
dec
rcll
or
adc
push
fstl
or
js
pop
rcll
pusha
xchg
fiaddl
stos
sbb
rcrb
movsb
lret
adc
fcmovbe
leave
int3
imul
jp
lcall
and
adc
testl
lods
sbb
xor
jno
ds
jnp
push
dec
cmpsl
xor
jl
scas
stos
mov
bound
lods
or
mov
out
lods
out
xor
dec
scas
mov
or
mov
cmp
sub
scas
jle
sahf
mov
mov
mov
mov
icebp
mov
loopne
out
int
cmp
inc
xor
mov
test
stos
add
nop
or
stos
mov
or
dec
adc
test
inc
int
pop
push
or
mov
in
ficomps
aad
in
cld
cmpsb
xchg
jle
and
loop
push
jnp
sbb
and
adc
pop
xchg
cmp
arpl
ret
xchg
xor
les
add
inc
push
ss
ss
mov
pop
out
xchg
mov
adc
push
xchg
orl
or
cmp
mov
fisttpl
pop
cwtl
data16
adc
sbb
mov
dec
and
push
sbb
xchg
mov
lcall
js
jno
or
in
icebp
jecxz
test
movsl
insl
mov
in
outsl
loopne
lret
inc
sbb
cmp
lock
jns
xchg
mov
ds
or
lods
sub
arpl
push
sub
out
in
insl
xor
fisubrs
sub
stos
and
std
daa
pusha
imul
fildl
jmp
mov
ljmp
sub
test
lods
das
mov
mov
cmp
fldt
and
adc
daa
inc
and
in
cmc
dec
sbb
push
inc
lock
jge
and
jle
sti
repnz
pop
in
mov
mov
iret
xor
mov
xchg
pusha
out
dec
add
push
inc
repnz
adcl
mov
and
aas
fwait
jecxz
lock
addb
orb
xchg
inc
jb
cmpsb
inc
testb
dec
jp
adcb
mov
add
into
aas
inc
dec
xor
lcall
dec
arpl
pop
jb
cmp
jg
jp
sahf
popf
cwtl
sti
mov
inc
inc
mov
mov
popf
dec
movsb
iret
cmp
das
push
add
and
pop
test
mov
mov
in
clc
jl
cmp
lock
fisubrs
sarb
sub
ja
into
std
push
and
jne
outsb
mov
inc
push
fucompp
call
jbe
int
pop
cli
in
add
jns
popf
cmpsl
test
mov
addl
daa
leave
push
popa
mov
lret
sub
jge
inc
add
mov
jecxz
sahf
push
scas
sub
out
lea
test
lds
out
pop
jge
dec
outsl
test
inc
inc
arpl
push
pop
jne
cmp
cld
divl
into
inc
test
xor
push
mov
mov
jbe
iret
lret
fidivl
dec
lret
cmp
and
lea
lods
jnp
out
ret
cmp
call
mov
or
stc
cli
cmpsl
push
rcll
mov
adc
jnp
aaa
or
cmp
adc
xorb
mov
adc
push
lods
dec
adc
scas
push
inc
enter
pop
jno
xchg
scas
and
mov
or
xor
lret
push
jl
and
rcrl
ret
or
and
cmp
ds
jge
mov
clc
dec
cmp
repz
lcall
imul
mov
out
xor
pop
pop
add
loope
and
mov
mov
sub
mov
outsb
imul
fstpt
movsb
outsb
aas
sbb
or
ror
ljmp
fnstenv
aam
or
push
iret
outsb
mov
mov
jo
adc
movsb
imul
lock
incl
in
xchg
ljmp
fisubl
ret
repz
roll
dec
in
ret
xchg
jge
or
in
loopne
fcmovb
xor
inc
mov
jbe
push
sbbb
cli
dec
fldt
mov
pop
and
push
add
in
adc
cld
jo
lods
xor
sbb
or
movsb
fildll
hlt
jp
or
ss
cs
jecxz
pop
fdivr
rorb
sahf
sub
add
mov
mov
push
les
jg
sbb
cmp
adc
popf
cmp
inc
enter
jl
sbbl
lods
sub
dec
add
pushl
xchg
nop
push
test
lods
dec
sbb
pushf
arpl
push
lahf
mov
iret
out
mov
jo
cld
mov
loope
and
jl
daa
out
ja
les
shll
cmc
cld
inc
push
jmp
push
xchg
pop
es
in
inc
mull
hlt
stc
push
stos
fdivs
mov
jb
cmp
ficomps
iret
insb
jp
popf
jmp
jl
cwtl
in
mov
cmp
les
int3
xor
inc
xchg
repnz
push
movsl
das
cmp
inc
sbb
adc
dec
test
adc
std
inc
andb
fisubs
push
cmpsb
fidivrs
aas
dec
or
fstl
xchg
mov
mov
lret
mov
cmp
xor
stos
mov
inc
adcl
push
push
lods
mov
pop
shrl
push
or
aam
add
mov
dec
jno
mov
out
xchg
push
out
insl
jne
rclb
add
dec
inc
and
aam
push
cmpsl
ja
in
hlt
add
mov
add
cli
sbb
cmpsb
rorl
jecxz
mov
sub
inc
cmp
in
iret
or
insl
leave
xchg
sub
sahf
jle
and
imul
or
fs
cmpsb
movsl
xchg
add
mov
scas
push
push
in
test
mov
test
adc
dec
pop
mov
jb
mov
inc
les
leave
or
lahf
call
push
jmp
jmp
pop
xchg
xor
jne
or
in
lds
push
rcrl
mov
xor
sar
xor
addr16
mov
sbb
iret
cmp
dec
push
mov
push
xchg
fmuls
test
popa
mov
jmp
popf
hlt
mov
popf
sbb
fs
mov
lock
xor
or
mov
pusha
adc
cwtl
mov
jne
mov
out
bound
xchg
imull
xlat
cltd
stos
mov
mov
mov
mov
jbe
sub
add
testb
stos
push
pop
in
pushf
js
jecxz
ret
or
mov
cmc
dec
inc
movsb
out
cmp
dec
jae
decl
movsb
daa
daa
sbb
xor
push
insl
fdivs
shrb
outsl
mov
bnd
fnsetpm(287
add
scas
negb
out
and
dec
inc
cwtl
cs
xlat
mov
xchg
mov
dec
fstl
mov
test
popa
lock
das
jg
mov
shlb
repz
and
sbb
into
mov
into
mov
xor
orb
mov
lock
cmp
rcrl
mov
sti
imul
ret
std
add
mov
in
sbb
inc
popf
push
outsb
jmp
pop
lea
cmp
sub
rclb
gs
inc
adc
adc
push
ja
daa
mov
mov
and
test
push
lret
adc
andb
cmpsb
push
outsl
or
push
sti
xor
mov
add
inc
rol
mov
cmpb
push
rcr
stc
fs
movsl
jbe
test
enter
je
sbb
jge
lods
mov
mov
lahf
lret
aaa
adc
push
es
lock
sahf
mov
cmp
imul
ds
mov
jno
add
push
jno
rclb
orl
pop
dec
jp
or
aaa
add
addb
mov
leave
and
dec
mov
aas
xor
jb
imul
cmpsl
dec
movb
shrd
pop
nop
popf
sub
iret
dec
jge
test
push
add
add
les
lcall
mov
hlt
jne
mov
sarb
xchg
clc
and
adc
lret
lods
and
adc
bound
xchg
adc
imul
insl
push
scas
in
ficoml
cs
rcrl
ja
mov
adc
pop
stos
jg
pop
aad
inc
dec
movsb
outsl
aad
in
fists
rcl
ss
and
mov
and
inc
lods
or
xchg
add
cmp
ss
enter
cmpsl
fdivs
push
adc
add
dec
dec
xchg
testl
outsl
lea
icebp
fwait
push
xor
insl
mov
dec
hlt
shll
int
rolb
xchg
mov
fdivr
inc
push
repz
dec
xchg
xchg
jne
cmp
xlat
mov
xor
daa
and
and
xchg
jns
int
inc
pop
jp
faddl
or
movntq
and
cli
sub
sahf
sub
out
cmp
nop
ret
addb
jno
inc
push
mov
mov
insb
xchg
inc
lds
xchg
gs
out
cmp
jle
std
bnd
or
sahf
sub
xor
ss
jecxz
daa
jg
inc
xor
out
fnsave
inc
mov
pop
nop
int3
mov
arpl
xchg
das
and
gs
scas
jae
pop
faddl
jl
cltd
fnstcw
mov
mov
ja
and
cmc
jmp
add
pcmpeqb
les
out
and
jecxz
fcmovb
loopne
adc
or
lcall
sub
jle
mov
aas
inc
mov
inc
cmc
inc
pusha
push
xchg
xchg
mov
xchg
shr
xor
sbb
scas
inc
out
xor
xchg
adc
sub
test
loopne
sti
pop
jle
xchg
cltd
lcall
rolb
cmp
fs
xor
xchg
adc
cmp
cltd
sbb
push
inc
out
inc
out
sarb
dec
jg
xlat
mov
int
push
xchg
fcomps
ja
mov
mov
xchg
and
into
sbb
out
shll
cli
cwtl
xchg
jae
ljmp
ljmp
jnp
mov
push
mov
in
pop
add
push
mov
jmp
push
in
cmp
insl
xchg
xchg
es
aaa
shlb
shll
lods
int
jge
scas
xchg
arpl
ss
dec
pushf
xorb
and
aas
dec
cmp
lahf
ret
movsb
and
sub
push
push
sbb
les
cmpl
movsb
dec
testl
and
popa
sub
jo
into
fsub
pop
out
repnz
sahf
push
lods
xor
gs
imul
dec
xlat
cwtl
mov
mov
mov
push
bound
repz
adc
jnp
and
inc
pusha
sub
mov
adc
add
fwait
mov
inc
in
imulb
pop
testl
mov
mov
lahf
mov
xlat
mov
test
jno
xorl
in
pop
inc
mov
sub
pop
mov
inc
sbb
loopne
aas
popa
push
cmpsl
out
push
mov
cmpsl
xchg
pushf
enter
inc
sub
or
adc
gs
jl
subl
pop
lods
xor
sub
jecxz
shrl
and
sub
int
jbe
mov
scas
leave
dec
popf
clc
push
add
pop
add
or
cmp
adc
xchg
cmp
popa
repnz
and
jl
xor
inc
shrl
repnz
scas
xor
out
mov
cld
pop
add
adc
dec
push
mov
dec
mov
jne
mov
mov
pop
sarb
push
movsl
jp
lcall
stos
dec
pop
jle
mov
xlat
jnp
jmp
inc
and
or
sbb
xor
push
fisttpll
dec
inc
repz
push
inc
ja
mov
cs
setns
aas
jl
mov
sub
push
cmpsb
iret
add
movsw
pop
mov
mov
add
push
ret
sub
jmp
enter
sbb
sub
push
sub
std
lahf
pop
push
xchg
into
mov
loope
and
popa
pop
adc
mov
es
dec
test
pop
rolb
lcall
adc
out
inc
lcall
sbb
jae
xor
and
test
mov
nop
mov
stos
adc
out
imul
insl
faddl
sub
or
lds
push
xlat
test
mov
into
inc
inc
push
or
stos
sbb
mov
push
repnz
xchg
ror
xchg
fwait
mov
jb
xor
cmp
test
add
mov
xorb
sbb
sti
push
adc
stc
icebp
xor
sahf
jg
add
jmp
mov
sub
inc
aas
cmp
jo
fadd
xorb
cwtl
and
or
ds
push
mov
xchg
jb
dec
and
arpl
je
jne
int
xor
fwait
pushf
jmp
sub
pavgb
lahf
push
and
les
mov
mov
lahf
clc
inc
jecxz
sub
sbb
mov
jg
bound
xchg
fsubrs
out
and
das
push
shlb
stc
jp
cmpl
dec
arpl
cmp
stc
inc
insl
cmp
outsb
rclb
sub
movsb
fadds
jp
mov
adc
mov
movsb
in
or
lods
jns
in
pop
out
cmp
sbb
test
test
mov
dec
movsb
mov
insl
pop
stc
add
pop
push
jnp
dec
mov
in
ds
int
sbb
pushl
jge
cli
or
add
je
lret
popf
and
fldt
sbb
leave
cmc
cmp
std
inc
and
inc
je
imul
or
sub
leave
inc
jecxz
and
je
xchg
cltd
aaa
mov
ss
or
pop
xchg
std
rol
fcoml
test
lods
xor
aas
idivb
mov
jl
or
fmuls
mov
std
dec
loopne
add
adc
mov
pushf
mov
ret
js
das
gs
and
aam
push
push
cld
fwait
notl
es
jge
popf
push
ds
pop
xor
fcompl
dec
push
xor
imul
push
dec
ror
dec
scas
adcl
ret
inc
pop
xchg
jg
jbe
xor
rclb
pushf
lock
loop
movsb
xchg
data16
mov
inc
sub
or
sbb
pusha
inc
test
int3
lret
cmpsb
in
adc
mov
insl
mov
fs
or
ss
xchg
push
inc
mov
push
rcrl
out
mov
mov
lds
das
or
mov
or
test
fwait
inc
inc
lds
pusha
xchg
insl
cltd
push
xchg
mov
sbb
inc
xchg
test
stc
int3
jge
in
aad
push
enter
call
aas
pop
scas
inc
push
loope
push
and
jb
out
cwtl
pop
rorb
mov
addb
inc
mov
negl
faddl
push
mov
mov
in
insb
lcall
sub
faddl
sbb
fldt
out
fisttpll
fs
aad
popl
mov
repz
jae
sbb
test
push
lret
push
movsb
xor
lret
loope
mov
and
mov
xor
pop
mov
fcomps
jmp
push
call
out
jno
mov
dec
jno
lods
mov
test
sbb
adc
or
pop
cmp
jb
fucom
mov
rorb
xor
lds
or
sbb
in
pushf
loope
push
mov
xor
nop
ret
and
es
mov
and
push
sub
xor
lea
jb
mov
xor
int3
dec
sub
xor
add
out
inc
or
fcoml
xor
stos
mov
push
dec
out
repnz
aad
cmpsl
loop
mov
popf
push
push
fucomi
bound
push
inc
fidivl
xchg
xchg
fsub
push
xlat
fisubrs
pop
pop
mov
push
out
sbb
xchg
xchg
daa
pop
cmc
push
rcrb
mov
fsubs
push
mov
out
clc
mov
adc
push
stos
xchg
cmp
jl
cwtl
sub
movb
mov
mov
aam
xorb
dec
pop
popl
les
int3
test
pop
fcom
jb
and
jbe
sub
mov
mov
out
jle
adc
ss
push
mov
and
cli
push
mov
push
pop
xor
hlt
add
pusha
and
adc
push
stc
rorb
cmp
ss
mov
int3
pop
xchg
mov
test
fwait
lret
pop
pop
inc
es
orl
mov
xchg
jns
movsb
hlt
sti
int3
mov
test
mov
push
idivb
mov
lahf
repz
jo
xor
dec
sahf
cmp
popa
push
and
adcl
mov
push
mov
jo
decb
mov
std
mov
pop
pop
fists
ja
adc
pusha
cmp
xor
imul
push
pushf
hlt
push
inc
cli
loop
outsb
stos
xchg
or
adc
lahf
add
es
int3
jl
je
jg
inc
add
test
push
and
stos
jno
mov
stc
push
in
ret
cs
push
push
shl
inc
add
out
pop
insb
cmc
push
mov
xchg
inc
outsb
pop
xchg
dec
shll
ljmp
sub
and
daa
sahf
xchg
sub
outsl
jp
push
sub
dec
lea
xchg
insb
das
fcoml
xor
cmp
pop
mov
mov
int
dec
jb
dec
inc
jp
rcrb
push
push
pop
lcall
push
and
dec
sbb
inc
xor
test
sbb
inc
outsl
negl
icebp
or
add
push
adc
cmp
repz
mov
adc
adc
loope
ret
push
xor
mov
imul
adc
push
pushf
pop
outsl
inc
jno
jae
ja
xor
nop
insb
idivb
out
rdmsr
sub
cwtl
jbe
fldenv
push
sub
shll
bound
and
fdivrs
test
inc
call
aam
add
out
mov
fdivrp
xchg
inc
xlat
mov
shll
push
mov
cmpsb
adc
adc
push
lock
add
stos
mov
dec
mov
xchg
inc
pop
outsb
push
xor
ljmp
sub
movb
lahf
adc
test
cmp
mov
imul
xor
das
sbb
shll
loopne
adc
fildll
push
popa
add
add
push
stos
add
aaa
mov
pop
and
iret
sub
arpl
loope
lcall
mov
pop
shlb
repz
and
xchg
mov
or
call
sahf
sahf
xchg
xlat
lds
stos
cmpl
pushf
dec
mov
jle
jg
xor
sqrtps
push
push
push
js
sar
sbb
jl
mov
dec
jp
cwtl
sbb
push
insb
mov
xchg
cmpsb
aas
jo
divb
aad
push
mov
sub
into
rcr
jnp
sbb
scas
movsb
pop
and
adc
mov
loopne
notb
lock
fdiv
jg
bound
mov
icebp
and
mov
jl,pt
inc
and
bound
stos
lret
pop
test
and
aas
add
loop
dec
ds
icebp
adc
fwait
addl
andb
mov
int3
sti
fimull
loope
xchg
scas
add
pusha
xor
in
fwait
cltd
sahf
push
push
lcall
add
adc
xor
negl
jle
jle
jl
fisttps
fisubs
lret
dec
and
push
xor
mov
cmpsb
sub
lret
cli
pop
sub
adc
aad
jns
mov
and
lret
xchg
cwtl
cmp
xchg
and
enter
sub
jge
or
lret
mov
cltd
dec
inc
ja
lods
je
mov
adc
adc
mov
mov
repz
or
mov
lret
pushf
outsl
push
rclb
ret
jb
inc
movsl
inc
jne
pop
adc
aas
mov
and
fwait
jb
movsb
sbb
es
and
rorl
xorb
enter
mov
or
jb
jb
or
sbb
jmp
ds
rcr
addb
mov
scas
adc
fsts
fs
fnstenv
mov
aam
push
pop
cmpsb
aaa
sar
xor
hlt
fsubp
loope
add
outsl
std
jecxz
sub
xchg
and
dec
sub
out
divb
sbb
xor
movsb
mov
cmp
ds
xor
push
push
in
mov
sbb
fcomi
lods
jg
paddusb
jg
mov
mov
sub
aam
imul
setl
lea
jge
shrb
mov
adc
jmp
mov
xchg
test
fidivl
push
stc
mov
dec
sub
inc
adc
and
cmp
into
cmp
sbb
sbb
or
jp
inc
push
pushl
stos
stc
mov
jno
xchg
shr
sbb
ret
movsb
inc
dec
out
test
push
ja
sahf
push
cwtl
push
fwait
sbbb
push
rorb
test
and
cli
mov
push
push
lcall
adc
lcall
fs
sbb
ljmp
std
mov
aam
xchg
je
jnp
ret
das
sub
push
rorb
lcall
jno
push
inc
mov
xchg
jo
jne
and
stos
pop
mov
sub
cmp
xchg
push
dec
dec
popa
jne
and
adc
mulb
pop
adc
fidivrl
add
push
rorb
cmp
ret
inc
cmc
clc
mov
push
or
xor
lods
repz
repnz
sub
xor
pop
jns
iret
push
push
fwait
shlb
lds
daa
jle
fsub
dec
push
push
xchg
mov
cli
movsl
pusha
jno
dec
arpl
inc
pop
daa
sbb
call
sbb
les
and
mov
mov
cwtl
add
xor
imul
scas
mov
jmp
and
and
jmp
sbb
outsb
jo
stos
stos
or
std
stos
xchg
inc
subl
test
aad
xchg
andb
or
push
pop
jne
jnp
lret
int3
das
jge
aad
jb
mov
imul
push
push
adc
xchg
cwtl
scas
jmp
lret
pop
subb
push
sub
sti
mov
mul
jbe
sub
lds
repnz
cltd
push
mov
cmp
lcall
in
sub
push
jge
sarl
sub
push
fmull
hlt
xchg
jno
popl
mov
mov
loopne
fs
xchg
lea
leave
and
das
push
out
xchg
aam
xor
mov
testl
jae
loopne
loope
mov
cli
add
adc
fcmovnbe
mov
sahf
out
test
scas
and
call
loope
or
ljmp
and
push
push
dec
inc
sub
push
lds
pop
fs
incl
push
mull
mov
stos
arpl
adc
and
and
and
out
lret
test
or
sub
movsb
adc
nop
lock
xchg
aas
mov
out
ror
mov
mov
adc
popf
lahf
lods
jg
fs
jl
adc
and
sub
xchg
popf
mov
inc
push
enter
adc
mov
push
xor
push
shlb
fmul
inc
and
pop
fsubrp
popa
xchg
dec
fsubs
insl
bound
jg
cmpl
xorl
pop
jl
int
cmp
lock
outsb
xchg
decb
test
ja
xchg
gs
cltd
add
divl
push
repz
gs
dec
cs
sbb
or
adc
lods
jno
cwtl
mov
sbbb
sbb
sarb
aaa
out
jb,pn
movsb
mov
cmp
cltd
call
nop
mov
xor
call
sarl
jg
sahf
jp
enter
add
lret
inc
jo
jbe
adc
cmpsb
jnp
pop
aad
mov
dec
mov
sbb
loope
cli
xchg
sbb
ret
pop
bound
int
movsl
pop
daa
lock
imul
lods
ret
fs
push
jnp
icebp
pop
fwait
pop
aam
xor
dec
cltd
aad
mov
or
mov
cld
pop
cmp
lahf
push
rolb
jbe
adc
adc
loope
adc
pop
loopne
mov
fs
inc
mov
sub
xchg
inc
in
test
loope
sbb
xchg
xchg
jns
dec
xor
ss
lods
std
mov
and
mov
iret
adc
fwait
push
rcrl
jnp
jne
mov
push
adc
aad
jg
xchg
xor
push
inc
fwait
es
push
mov
arpl
rolb
jo
or
negb
mov
popa
ljmp
jg
das
fucom
push
jmp
jns
jmp
or
xlat
sahf
mov
pop
outsb
xchg
daa
sub
int
pop
xor
add
and
pop
dec
or
dec
sahf
loope
add
adc
cmp
dec
cmp
adc
test
jns
jns
jge
lods
lcall
repz
and
xor
sbb
inc
lods
sahf
inc
jne
lret
outsl
cmpsb
notb
and
clc
icebp
add
rorb
mov
cmp
in
xchg
add
cmpsl
mov
repnz
loop
loope
push
mov
inc
aam
add
push
sub
sbb
xchg
xor
xor
pop
jmp
data16
sub
xchg
jle
addr16
out
pop
in
mov
sbb
mov
mov
scas
enter
pop
push
mov
xchg
mov
mov
jno
and
cmc
sub
outsb
out
mov
das
sub
push
push
fxch
lds
std
sbb
mov
push
xchg
cs
cmpsb
fisubl
repnz
pop
adc
subl
inc
inc
ss
or
push
push
sub
mov
cld
outsb
sub
xor
mov
mov
cld
adc
sbbl
gs
gs
or
jnp
mov
dec
cltd
mov
push
jmp
cli
cwtl
inc
loop
int3
cltd
fistpll
xchg
mov
es
push
in
ss
scas
arpl
xchg
daa
mov
repnz
sar
pop
cmp
xor
xchg
sarl
lea
or
xchg
bound
loope
mov
push
into
int
in
inc
jge
jl
xchg
jle
jb
repz
or
mov
sbb
mov
loopne
adc
mov
cld
adc
test
add
into
xor
sub
jno
sbb
stos
sbb
out
xchg
sarb
jle
ja
jmp
outsb
pop
iret
cmpsl
sbb
fcmovbe
mov
lret
jl
xchg
lahf
pop
pop
inc
in
popf
ficoms
out
popf
das
paddusb
les
mov
sbb
mov
dec
test
ret
add
xchg
mov
ds
pushf
les
cmp
test
cmp
fldcw
fnstcw
inc
iret
rcll
daa
not
dec
cmpsl
mov
aas
es
sub
pop
cmp
ret
mov
cmp
mov
movsb
mov
or
scas
push
dec
pop
or
lret
cmp
aad
lahf
mov
cmp
add
scas
rorl
mov
sub
scas
movb
or
dec
in
fisubrl
xchg
outsb
data16
aam
add
fabs
dec
jmp
or
inc
xor
mov
sub
mov
imul
sbb
pop
test
or
dec
mov
mov
xchg
push
nop
mov
push
mov
cmc
test
test
nop
pop
and
cld
jge
mul
cmpsl
push
cli
ljmp
das
stos
mov
or
mov
or
mov
aaa
push
inc
push
and
jp
leave
jmp
fwait
sbb
in
outsb
add
enter
dec
jl
xchg
dec
aas
aad
jge
jbe
cmp
repnz
add
loope
lea
int3
sub
enter
push
mov
add
scas
push
insb
push
mov
add
jne
incl
pop
add
aas
sub
and
push
sub
pop
and
dec
or
pop
add
xchg
pop
pop
mov
mov
xchg
cmp
cmp
or
sbb
lods
je
repnz
jmp
ficomps
rclb
xlat
lcall
mov
leave
pushf
inc
mov
subb
add
xor
hlt
adc
mov
sbb
sbb
or
popa
bound
sbbb
fidivrs
je
popa
ljmp
mov
repz
inc
or
dec
pushf
push
push
test
enter
or
daa
ja
jae
test
ficompl
jno
aam
sub
mov
push
aas
das
jbe
and
pop
dec
dec
in
rorb
popa
test
mov
in
nop
or
mov
out
lret
loope
xor
and
bound
inc
inc
iret
pop
test
fwait
pop
fsubs
pop
enter
daa
lock
xchg
fldt
lock
add
cli
and
sti
fldcw
mov
mov
fcomi
push
xchg
std
adc
sub
push
pop
cld
push
adc
addl
fldcw
xchg
cltd
dec
cli
adc
jb
sarb
jae
out
xchg
das
mov
lods
sub
jmp
into
cmpl
std
xor
hlt
int3
adcl
mov
pusha
mov
push
cld
cmpsb
sbb
sub
inc
dec
sub
mov
cmp
xchg
ret
cwtl
xchg
mov
cld
das
xchg
push
and
mov
add
add
outsl
imul
cwtl
sub
jl
cmp
shlb
xor
push
adc
pop
add
stc
test
push
add
fisttps
clc
into
or
xchg
pop
cmp
cmp
xor
in
sbb
sbb
outsb
add
ret
and
push
sbb
out
add
ret
inc
mov
stos
pop
push
or
and
jmp
rclb
fstps
repz
dec
push
ja
add
and
ret
or
ljmp
inc
leave
test
xlat
mov
push
orl
repz
ss
das
jle
xchg
pop
cwtl
mov
sbb
test
push
xor
or
push
adc
push
push
jae
mov
fstps
mov
cmp
dec
hlt
in
cmp
xor
push
fadds
mov
xchg
mov
dec
loope
imul
jge
jo
push
arpl
lds
xchg
int3
pop
cltd
mov
test
pop
adc
les
push
test
and
subl
sub
xchg
dec
cmp
adc
xchg
gs
mov
sbb
push
incb
push
jnp
push
xlat
push
bound
imul
jg
pop
or
stos
mov
cltd
orl
aad
ja
and
push
inc
dec
fadds
aaa
insb
daa
cmp
add
dec
clc
movsb
faddl
lods
lods
jl
pop
sub
mov
mov
jno
push
out
imul
insl
adc
cmp
pop
push
cmc
jns
fs
dec
nop
lcall
lcall
sbb
or
xchg
xchg
cltd
push
xor
faddl
mov
mov
jnp
mov
jb
mov
jns
inc
jmp
pop
add
movsb
inc
test
ret
mov
mov
sbb
movsl
inc
jg
mov
rclb
stc
and
or
out
dec
fsubrl
inc
dec
andl
fidivrl
sub
cmp
nop
adcl
lret
fwait
sub
pop
scas
std
in
add
out
les
add
loop
js
test
fdivrs
jnp
jns
out
insl
in
jb
stc
adc
enter
dec
sbb
push
je
dec
mov
fs
xchg
pop
aaa
not
lock
cmpl
xor
ljmp
mov
mov
or
push
sbb
es
xchg
jge
ret
mov
jmp
imul
push
imulb
cwtl
rol
sub
and
mov
jp
or
xor
inc
dec
lahf
pop
pop
mov
sahf
lahf
nop
mov
mov
jl
push
les
jae
xchg
mov
test
adc
pusha
push
pushf
cmpsl
int3
mov
fs
sbbl
ss
fisubrl
mov
xchg
xchg
xchg
out
ss
sub
insl
mov
dec
sub
xchg
or
sub
int3
addb
xor
shrl
or
xor
jg
mov
xor
and
stos
pop
fisubrs
xor
ja
loope
mov
les
das
inc
jbe
into
int
test
sbb
xor
pop
std
xor
dec
add
push
jg
imul
int3
test
and
in
outsl
xor
sbb
sbb
popf
mov
mov
cmp
iret
push
xchg
mov
jb
inc
aam
mov
popa
imul
mov
xor
cmp
cs
repz
mov
jmp
arpl
inc
mov
inc
sbbb
add
iret
and
movsl
divb
xor
js
lea
push
mov
sarl
push
loopne
fcoms
jecxz
add
add
jp
pop
int3
jnp
sub
mov
mov
lahf
imul
dec
xlat
fwait
adc
dec
je
adc
jae
and
dec
adc
stos
pusha
xor
lahf
les
out
test
pop
push
inc
or
test
inc
ret
and
or
lock
in
mov
stos
push
add
jl
popf
int3
and
jb
and
fs
adc
cmc
repz
mov
cmpsb
pop
lock
and
add
xchg
push
add
mov
add
mov
dec
xlat
push
inc
imul
cwtl
mov
stos
outsb
psllw
pop
in
arpl
dec
cmpsl
dec
mov
jp
shrb
imulb
sub
push
dec
cltd
lock
es
or
dec
jmp
cmp
out
arpl
pop
inc
imul
in
or
push
rolb
jp
pop
cmp
outsl
cmpsb
jmp
adc
mov
jle
jno
cli
cltd
imul
mov
outsb
in
shrl
out
pop
cmp
lcall
inc
xor
jae
mov
mov
mov
jmp
and
aam
out
dec
enter
push
inc
pop
icebp
jnp
pop
pushf
int3
fists
mov
cmpsb
std
movsb
iret
xor
shll
mov
sbb
in
cs
adc
in
ja
aaa
add
sbb
add
lea
mov
ljmp
into
mov
nop
mov
sub
inc
jnp
adcl
push
test
inc
imul
loop
repnz
in
je
stos
je
repnz
imul
jecxz
sub
pop
adc
out
or
imul
push
sub
int3
loop
dec
add
rcrb
mov
pusha
inc
in
pop
xchg
test
hlt
pop
mov
leave
ljmp
shll
pop
ja
fwait
add
in
test
sahf
push
xlat
in
aad
stos
shlb
add
js
lcall
xchg
xor
stos
jns
shl
dec
dec
in
jne
inc
cmp
xchg
or
mov
sbb
nop
lret
nop
aam
cmp
out
cmp
xlat
out
movsl
mov
push
lahf
popa
sub
out
add
jmp
sbb
add
push
scas
or
xor
imul
pop
cmp
int3
imul
fwait
aam
push
sub
push
insl
cmp
data16
fbld
adc
adc
pop
and
mov
dec
jnp
or
add
fadds
inc
ljmp
mov
mov
pop
fisubs
mov
bound
mov
dec
call
mov
push
pusha
xor
loop
js
push
jle
mov
inc
mov
cmpsl
hlt
push
fcmove
imull
sti
sahf
sbb
sbb
dec
inc
inc
stos
push
fiaddl
adc
iret
inc
and
das
add
js
pop
fmull
movsl
nop
pop
xchg
add
sub
aas
jb
pushf
and
sbb
inc
imul
cmp
cli
sbb
pop
nop
mov
xchg
repz
incl
mov
aad
loope
dec
pushf
aad
inc
cmc
adc
xor
dec
and
sbb
xchg
xor
popf
aas
lea
out
cwtl
std
dec
sbb
sbb
pop
adc
subb
sbb
push
out
cmpsl
movsb
add
sbb
xor
cmp
movsb
jno
inc
out
fwait
test
xor
ljmp
jl
shrb
gs
test
and
cld
mov
sbb
jp
pushf
pushf
loop
xor
mov
pop
cwtl
mov
mov
jmp
stos
fcmovnb
xor
mov
mov
push
andl
dec
or
adc
sub
test
dec
iret
ja,pt
leave
xor
test
or
jne
xor
mov
cmp
xchg
mov
subb
je
push
cmp
or
inc
sub
and
xchg
fwait
jne
lds
or
sahf
nop
sbbl
or
data16
loopne
mov
pushf
jmp
add
inc
jmp
mov
mov
inc
cmp
and
std
insb
roll
xchg
sbb
mov
mov
pushf
or
in
sbb
insl
cmp
jge
push
cmc
ret
jb
icebp
in
adc
xor
inc
add
add
mov
jo
out
jecxz
das
mov
pop
cmp
enter
repnz
jp
cli
orl
movsb
adc
cld
xor
adc
mov
movsb
arpl
cmp
fsubrl
and
arpl
mov
cmp
inc
push
dec
dec
xlat
mov
in
xchg
push
fildl
push
repnz
int3
adc
sbbb
js
ret
mov
push
mov
inc
in
and
jb
xor
movsl
jo
adc
and
xor
push
loop
rcrl
push
cmp
dec
lcall
pop
int3
outsb
add
fldl
and
out
lahf
call
imul
mov
add
fadds
icebp
mov
frstor
jle
dec
gs
jo
xchg
daa
jno
orb
mov
sbb
in
mov
pop
dec
leave
sarl
mov
imul
loope
mov
rorb
es
jmp
mov
cld
sbb
xor
adc
cli
sar
aas
and
add
sbbb
testl
call
stos
mov
fwait
lret
inc
pop
add
push
cmpl
mov
lds
cmp
scas
pop
popa
in
pop
adc
addr16
push
mov
loop
lret
xor
adc
pusha
fimull
xchg
lock
out
dec
mov
lea
gs
sbb
mov
push
notb
xchg
push
cli
xchg
pop
jne
cmp
mov
into
daa
mov
jecxz
inc
xor
outsb
mov
and
push
cmpsl
mov
movsb
xchg
jle
dec
xchg
lods
rcll
dec
bound
jmp
sarl
pcmpgtb
push
dec
and
mov
in
icebp
jbe
push
imul
aas
in
fs
jecxz
inc
mov
xchg
cltd
lcall
pop
sti
fs
loope
jl
jmp
cli
mov
add
aad
jo
jecxz
jbe
dec
mov
cwtl
decb
in
push
outsb
cmpsb
sub
rol
jb
out
xor
cld
lret
mov
push
enter
pop
sbbb
fiaddl
mov
sub
pop
pop
dec
jmp
pop
fs
or
enter
cltd
cmc
cltd
mov
add
add
popa
in
and
xor
arpl
hlt
jecxz
mov
repnz
iret
loope
sub
add
mov
out
cmp
int3
fisubl
xor
adc
mov
pop
add
daa
dec
outsl
scas
inc
xchg
dec
sbb
jo
hlt
out
daa
outsl
push
xor
aad
stc
jo
lods
ret
clc
push
add
in
popf
mov
aad
icebp
pusha
adc
push
mov
adc
jno
test
add
xchg
outsb
pop
and
mov
aas
insb
aaa
pop
sahf
mov
xlat
daa
add
or
mov
movsl
lods
jb
or
inc
pushf
enter
and
pop
mov
jns
mov
enter
push
cmp
lods
leave
and
sub
cmp
jmp
fwait
mov
in
mov
pop
lods
mov
jge
dec
sub
insb
mov
xchg
mov
scas
testb
icebp
mov
shl
pop
sub
xchg
rorl
adc
stc
cmp
fdivrp
pop
cmpsl
jg
mov
jl
out
inc
jbe
jecxz
dec
sub
sub
add
sub
movsb
mov
jmp
fld
lods
test
or
int3
cs
push
xchg
pop
cmpsb
mov
test
sti
das
xchg
xchg
divb
fdivrl
pop
lret
jmp
aam
adc
mov
jo
sub
add
mov
pop
lret
cld
pop
iret
fnstcw
cmc
lret
nop
pop
adc
add
sbb
add
cmp
dec
push
rol
or
add
insw
pop
jmp
dec
cmp
je
frstor
push
and
ret
out
jns
shrb
dec
pop
sub
pop
nop
inc
sbb
push
xchg
out
fwait
inc
dec
jg
sbb
frstor
sbb
mov
in
das
mov
mov
inc
lret
push
iret
cs
jns
test
mov
fwait
test
clc
les
or
adc
mov
data16
adc
push
ds
fidivl
xlat
cmp
leave
dec
divb
cmc
aam
adc
xor
out
ret
push
movb
jg
xchg
imul
and
push
mov
aas
scas
movsb
popa
inc
lahf
test
mov
in
jnp
and
ss
and
or
cs
and
lods
test
ja
pop
pop
mov
sbb
ret
outsb
lods
aas
loop
add
mov
stos
xor
ret
mov
inc
scas
insb
flds
add
sbb
loop
push
dec
call
push
push
lret
cmc
dec
ds
xchg
adc
jl
dec
cmp
lret
push
inc
jecxz
cmpsl
shrl
cmp
les
dec
test
sbb
mov
sti
rolb
lahf
sub
leave
xor
jmp
lods
idivl
pop
sbb
dec
mov
ss
stos
mov
xchg
push
iret
and
arpl
popa
adc
mov
mov
sbb
popa
fwait
push
movsb
sbb
lahf
sbb
sbb
inc
loope
mov
test
jne
andnps
frstor
outsb
and
roll
cmp
xchg
imul
clc
es
in
jo
cmpsl
jge
xchg
sub
pop
leave
and
shlb
adc
mov
sar
jo
inc
lea
jp
lds
lahf
stc
nop
popa
xchg
pushf
inc
pop
pop
mov
xchg
push
rcll
rorb
add
cmp
aaa
sub
push
dec
cld
vmovq
dec
add
sub
lret
pop
push
ficoms
xor
jecxz
push
jne
nop
mov
das
andb
sub
or
ret
xchg
jge
sbb
push
repz
les
shr
ljmp
stc
mov
daa
xchg
push
push
inc
test
aas
mov
cmpsl
pop
mov
sbb
jp
enter
push
mov
mov
dec
cmpsb
jp
push
and
imulb
xchg
mov
mov
or
sbb
pop
mov
xchg
xchg
sub
frstor
xchg
mov
aad
adc
sbb
out
sub
loopne
scas
ret
inc
jecxz
or
sbb
shlb
xchg
xor
inc
popa
or
mov
lock
cmpsl
mov
pushf
jge
or
mov
movsl
test
mov
lcall
cmp
loopne
fidivs
clc
aaa
and
add
add
imul
and
inc
insl
sub
mov
aam
fisubl
xchg
mov
adc
ret
insb
mov
repz
test
xchg
inc
sbb
or
jno
xchg
xor
adc
pusha
xchg
jne
dec
fcmove
daa
insb
out
push
je
ficompl
shll
movsl
lods
or
or
xchg
mov
fstpt
sahf
xor
add
setb
cmc
stc
add
or
mov
inc
rorb
cmc
fisubrs
xor
arpl
add
iret
leave
jmp
int3
in
aam
push
sbb
mov
int3
data16
push
ret
arpl
push
pop
imull
ja
sub
push
lods
xchg
sub
mov
cmp
push
mov
shl
bound
out
and
xor
aad
jl
xchg
fldcw
xchg
and
leave
loop
fnclex
cmpsb
push
and
push
xchg
cmp
xor
int3
adc
mov
inc
or
mov
insb
mov
sahf
cmc
jno
shll
cli
mov
mov
sti
iret
mov
xchg
into
cmp
mov
mov
adc
sbb
test
mov
movsl
fisubrl
std
scas
mov
and
xor
imul
lret
aas
fldt
xchg
je
push
push
mov
aad
or
idivl
or
add
lods
sub
bound
mov
mov
add
imul
movsl
push
cmp
sarl
cmp
pop
cld
pop
push
adc
dec
mov
jo
xor
pop
and
and
lea
sub
inc
mov
ljmp
sub
mov
mov
push
insb
and
arpl
call
andl
movsb
fidivs
hlt
shrl
imull
insl
pop
jo
xchg
ja
pop
and
or
dec
inc
inc
jns
subl
enter
movsb
xorl
push
imul
mov
addr16
insb
inc
popa
cmp
imul
mov
mov
dec
into
mov
inc
fwait
adc
movsb
fcom
pop
or
sub
add
movsl
cmp
or
add
test
mull
int3
in
or
xor
cmpsb
bswap
cli
orb
dec
je
popf
ret
hlt
fistpl
add
aad
xchg
cmp
jne
adc
lret
or
data16
and
mov
pop
nop
push
or
pop
or
xchg
mov
test
repnz
mov
testb
or
cmpsb
mov
sbbl
in
or
xor
icebp
jns
mov
shrb
ljmp
lcall
aas
sbb
test
jle
imul
loopne
push
ret
movb
and
jg
fs
lods
dec
fsubrl
mov
lahf
mov
pop
inc
sbb
fistps
into
mov
mov
sub
popa
xor
xchg
dec
push
add
sahf
cs
push
inc
int
adc
or
fwait
push
xor
inc
in
jno
and
shll
lret
movsl
add
or
mov
push
mov
sub
mov
ficoms
lock
mov
pop
xchg
das
inc
or
cmp
sbbl
dec
xchg
inc
jae
jo
sbb
dec
rolb
clc
mov
imul
rorl
add
ljmp
sti
dec
jl
sub
xor
jmp
jne
mov
stc
popf
push
pop
mov
fbld
pop
pop
add
aas
lret
push
dec
jo
ja
int3
add
lret
mov
cmc
shl
dec
stos
cmp
jecxz
ja
sbb
int3
lods
fcomip
in
dec
shr
cli
push
or
ja
dec
mov
xchg
std
sub
or
pop
mov
jg
sbb
fs
pop
pushf
std
scas
lea
jmp
jecxz
or
out
ja
stc
std
inc
out
xor
sub
sub
dec
adc
mov
pushf
jmp
mov
and
je
andb
mov
fwait
movsb
subl
cmp
lds
dec
jmp
movsl
arpl
sub
dec
and
adc
push
mov
icebp
scas
lahf
or
outsb
xor
testl
nop
add
clc
pop
sbb
sbb
ret
mov
sbbl
leave
cmp
mov
notb
js
dec
repnz
or
lret
in
dec
xor
ja
jle
push
in
mov
insb
arpl
jge
lea
stos
fwait
daa
sbb
mov
mov
rcrb
jp
and
rcrb
les
inc
fcmovnbe
pop
lcall
out
arpl
push
jmp
aas
int
mov
mov
lock
xchg
jne
bound
jg
jno
int
mov
stos
mov
fstpl
jne
testl
pop
sub
jae
mov
int3
and
test
xor
mov
jmp
mov
fldenv
enter
xchg
in
shlb
pop
scas
or
sub
cmpsl
ret
imul
sub
mov
mov
adc
push
jge
ja
jbe
test
test
push
cmp
xlat
bound
mov
xor
add
ja
push
jge
das
test
orl
aas
mov
stos
aas
push
lock
subl
int3
enter
fimuls
out
xor
sub
and
stos
jg
push
cmc
and
cmpsb
popf
rolb
pop
adc
jp
jb
or
mov
pop
push
cmp
sahf
pop
imul
or
pop
xchg
lds
pop
lret
jecxz
or
mov
pop
test
adcb
sahf
or
dec
fdivrl
ja
add
add
icebp
pop
mov
rolb
adc
jl
loop
dec
cld
dec
mov
and
add
mov
mov
mov
push
jle
pop
jae
xchg
fidivs
roll
mov
sbb
cmpsb
shll
xor
push
fs
mov
imul
in
mov
fs
mov
xor
inc
fcom
lds
jns
jno
pushf
es
in
in
outsb
xorb
lods
mov
xchg
or
test
push
jne
dec
std
sar
loope
or
loopne
push
les
push
xchg
mov
sub
jg
push
cli
xor
fistl
rclb
mov
xchg
stos
fisubrs
jl
push
pop
aam
push
shrl
mov
mov
arpl
fs
icebp
jne
and
mov
mov
bnd
cmp
daa
and
and
jbe
sub
gs
mov
cld
cmove
push
rcrb
inc
add
adc
pop
and
data16
inc
andb
adc
sbb
enter
add
enter
lret
pop
adc
mov
icebp
push
xchg
clc
jg
out
adc
out
cmp
out
sti
lret
inc
dec
jne
jne
loope
loope
mov
pop
dec
adcb
iret
call
mov
rcrl
aaa
sbbb
int
jecxz
cli
std
ss
xchg
dec
inc
movsl
lods
pushf
mov
ret
jne
mov
jl
movsl
jg
int3
aad
mov
aaa
aaa
in
test
push
pop
sahf
jbe
pusha
je
nop
cld
aas
push
mov
fs
jmp
ffreep
mov
repnz
fwait
js
dec
xchg
test
xchg
mov
mov
int
pop
adcl
jp
lods
xchg
minps
or
mov
inc
inc
nop
dec
mov
push
pop
dec
mov
push
mov
inc
out
or
imulb
jno
rcll
push
push
aas
adc
or
ljmp
sbb
sub
pop
cmpsb
aad
inc
insl
repz
and
pop
out
popa
xchg
xchg
cmp
rclb
inc
cmpsl
cmp
mov
pop
iret
gs
mov
mov
ds
or
cld
dec
stos
and
icebp
xor
out
sub
mov
pop
xchg
mov
push
push
inc
push
cmp
pop
push
mov
mov
cmpsb
inc
les
adc
movsl
loopne
sahf
std
les
add
dec
adc
jns
pushf
stos
fnstcw
inc
mulb
jo
stc
addr16
ss
cmp
lcall
mov
xchg
lret
push
sbb
mov
mov
je
movsb
cmp
cwtl
cli
xchg
in
loope
push
push
addl
pop
mov
ss
loope
or
mov
frstor
pop
adc
sub
inc
fcoms
xor
in
add
decb
repz
dec
fucomi
push
or
mov
in
aam
dec
sub
or
into
xor
mov
sbb
jle
push
mov
dec
fsubr
mov
jge
pop
enter
inc
pop
adc
fbstp
test
mov
cmp
test
jle
xchg
daa
rcrl
addr16
fbstp
icebp
adc
icebp
mov
lea
or
dec
and
scas
mov
cmp
movsb
pop
dec
cmpsl
adc
gs
add
lcall
pushf
in
fcoml
push
jb
sti
xorb
sbb
mov
scas
pop
inc
call
push
pop
cmp
or
iret
dec
aad
mov
xlat
push
lret
sahf
dec
iret
inc
dec
cmp
pop
sbb
mov
or
aad
fwait
leave
push
cld
movsb
mov
in
cltd
stos
push
cli
rcl
aas
mov
pop
and
jns
scas
adc
inc
cmpsl
jg
push
data16
fmul
cmp
shll
lds
fistl
sub
test
mov
int3
dec
sbb
lcall
pop
cmpsl
add
mov
test
add
lahf
ret
or
clc
push
fcompl
dec
cli
dec
jbe
out
mulb
cmp
sub
or
pop
jae
pop
sub
sbb
in
lock
leave
add
jo
js
test
popf
adc
mov
fisttpl
or
mov
mov
ljmp
xor
jns
xor
int
bound
push
leave
adc
cmc
gs
and
jmp
mov
jbe
mov
test
mov
pop
cld
pop
test
lret
mov
pop
push
sub
push
sub
adc
aaa
xchg
sub
jp
test
push
fisubs
aam
popl
or
cmp
fildl
shlb
into
jge
inc
xchg
xchg
pop
xorl
mov
mov
pop
push
xor
push
into
aad
or
push
and
cmp
in
test
loopne
loop
mov
mov
out
mov
mov
testl
cmpsb
mov
mov
push
hlt
xlat
lds
jmp
loop
sti
pop
sub
ror
or
jae
outsb
lcall
in
mov
pushf
cmpsl
add
lcall
dec
repz
insl
xchg
sbb
fucom
jmp
shr
add
pop
pop
push
jge
push
push
dec
arpl
push
mov
iret
and
push
out
pop
xor
mov
into
pushf
int3
jno
dec
cmovns
inc
mov
cmpl
orb
or
mov
sub
push
insl
and
sub
push
push
mov
mov
lock
flds
mov
ja
or
push
enter
xchg
inc
fstps
outsl
mov
cmpsb
idivl
sbb
ja
xor
aad
dec
addr16
add
scas
sub
xor
jns
push
scas
xchg
cmp
push
ss
mov
mov
ret
mov
pushl
outsb
pop
add
pop
test
scas
decl
mov
push
cmp
push
mov
shl
pop
mov
scas
pop
arpl
addl
xchg
aas
hlt
push
scas
mov
fiaddl
cltd
push
out
cli
or
cmp
inc
fsubl
xor
add
or
sub
fwait
mov
adc
xor
xlat
adc
lock
fsts
and
fwait
push
adc
fldcw
and
repz
push
call
or
mov
add
sbb
pushf
lods
out
jne
sub
bound
jg
jmp
imulb
loope
mov
mov
out
sbb
dec
out
inc
daa
cwtl
shrb
push
xchg
dec
adc
stos
mov
test
or
loopne
mov
fs
xor
daa
sub
cmp
and
dec
sbb
call
cwtl
push
and
jnp
push
cmp
jp
nop
inc
mov
fmuls
mov
push
ror
cmp
popf
or
push
cwtl
cmpsb
int3
cmp
inc
add
cmpsl
fisubs
xor
out
xor
jmp
lea
mov
icebp
in
mov
or
decl
sub
loope
sahf
mov
out
mov
pop
insl
jno
xchg
cmp
cmc
pop
scas
pop
cmp
dec
cmpsb
cmpsl
or
xchg
mov
stc
rorb
enter
cmpsb
inc
xchg
xchg
insb
add
enter
rorl
jo
aam
mov
cwtl
jbe
xchg
lock
push
jl
loope
sti
cmp
mov
fstps
mov
pop
pushf
inc
mov
xor
cmp
push
into
pop
xchg
xchg
xchg
adc
inc
dec
mov
mov
inc
sub
daa
sub
pop
fisttps
je
loop
cmp
es
mov
jbe
scas
or
repz
out
xchg
adc
cmpsl
pop
out
sarl
pop
fadds
push
cwtl
addr16
iret
adc
jg
pop
push
cmp
fs
add
subl
fcomps
mov
pop
add
cmp
and
jae
fsubrs
cmp
push
jge
inc
fistpl
cmp
jg
enter
sbb
xor
add
leave
rcr
ljmp
aaa
xlat
popa
test
ror
and
adc
jne
mov
lods
vmwrite
add
sahf
mov
aam
in
and
mov
aas
fidivrs
jmp
inc
cmpsl
inc
std
sarl
xlat
xor
shll
pop
mov
mov
mov
or
jnp
pop
mov
jecxz
adc
sbbb
insl
pop
stos
jo
jl
inc
outsl
mov
adc
outsl
fdivs
lahf
jecxz
mov
pusha
and
pop
hlt
cs
pop
sub
ds
jl
add
mov
repz
push
fcom
repz
or
ljmp
mov
aas
jl
lock
aaa
cmc
push
fstps
xchg
inc
popa
inc
and
je
cmc
xchg
shlb
cld
mov
dec
dec
fcompl
xchg
pop
pusha
icebp
sub
xor
inc
mov
cmp
push
and
fistl
fadd
push
jge
pop
iret
rorb
jo
aam
mov
mov
out
es
into
mov
push
scas
and
pop
push
xchg
push
xor
and
cmp
xor
xor
sbb
les
ljmp
add
sub
jns
enter
push
inc
lds
jae
xor
and
test
call
adc
call
sbb
jno
mov
ja
pop
cwtl
cli
add
int
sub
mov
cmp
insb
clc
jno
pop
sbbl
clc
sub
ljmp
inc
cmp
pop
push
divb
mov
xor
in
fdivrl
cmp
add
pusha
mov
std
mov
xchg
cmpsl
bound
js
nop
popa
lods
insl
jbe
in
sub
mov
xchg
xchg
sbb
data16
data16
sub
mov
cmp
xchg
adc
push
mov
push
stos
aas
cmp
xlat
xor
push
pop
sbb
push
stos
inc
cmc
mov
sbb
mov
sarl
inc
sub
and
inc
ss
mov
or
and
stos
inc
cmp
sbb
pop
in
or
mov
adc
sbb
xchg
or
lods
ret
xchg
jmp
xor
lahf
push
aaa
pshufw
jne
jle
xor
cld
xchg
scas
scas
xor
sub
aad
movsl
add
insb
fcompl
mulb
outsb
sub
sti
jecxz
push
adc
xchg
cmp
inc
call
add
mov
sbb
and
test
xchg
push
inc
je
fiadds
mov
jp
mov
hlt
cmc
test
pop
xchg
pop
mov
orl
stos
int
das
dec
popf
jno
ss
push
in
sbb
mov
or
ds
mov
mov
inc
popa
pop
cld
sbb
stos
add
lea
lds
lea
push
inc
jl
imul
jp
lods
in
lods
in
add
lgs
pop
fisubrs
add
jp
jle
subb
push
lret
jle
mov
pushf
rcrb
sub
sti
mov
sbb
push
xchg
ja
jg
mov
jmp
arpl
pop
imul
dec
xorb
adc
ret
test
xor
xor
pop
inc
pop
jns
pushf
adc
or
scas
gs
dec
loopne
sub
push
sbbl
adcb
imul
rolb
xor
sub
cltd
rcl
popf
rcl
ret
jge
adc
jmp
ret
lahf
lods
inc
xchg
lods
test
mov
hlt
xchg
fstpl
cmp
or
or
add
ja
in
xor
lret
loop
int3
sbb
xor
repz
loop
loop
and
rorb
loop
dec
adc
jle
clc
jb
rcrl
and
ljmp
push
mov
popf
or
mov
das
ss
cmpsb
shl
orb
jns
mov
aaa
adc
push
nop
sahf
jb
xchg
mov
xchg
shll
test
ljmp
jl
fsubrs
push
aaa
adc
jmp
in
js
ja
and
add
sub
mov
add
divb
pop
out
ljmp
adc
cmp
orb
imul
cli
dec
arpl
xor
or
call
dec
xchg
stc
ja
in
scas
fidivl
dec
pushf
hlt
jmp
mov
add
int3
push
mov
mov
cmpl
mov
adcb
aam
mov
dec
ds
repnz
xchg
movl
adc
mov
push
fs
leave
ljmp
dec
test
xor
shl
std
mov
cmp
sub
jno
shl
roll
sub
js
jle
stc
push
adc
inc
cli
mov
jge
and
lret
adc
xor
pop
jg
call
sbb
lea
jmp
in
xor
xor
rcrl
popf
mov
shll
push
int3
jb
pop
jmp
paddq
lret
mov
scas
sub
adc
push
imul
xor
pusha
add
mov
jno
xor
mov
insl
cwtl
mov
out
mov
cli
repnz
cmp
or
xchg
mov
outsl
bound
sbb
sbbb
mov
cmp
in
sbb
lods
repz
sbb
lret
ljmp
mul
bnd
push
pushf
add
popl
add
mov
out
cmp
sbb
lret
arpl
mov
xchg
cmpxchg
gs
xchg
bound
shl
outsb
imul
xchg
mov
roll
mov
sub
pop
add
fdivs
cltd
xor
sub
test
jl
lcall
jg
repnz
popf
fxch
repz
leave
fwait
pop
cwtl
cld
push
loope
xor
pop
aas
xchg
pop
test
mov
pop
push
push
out
pushf
out
fsubrs
subb
adc
lcall
fnstsw
jle
stos
idivl
pop
jno
xchg
mov
xchg
aaa
loopne
or
add
inc
lahf
andl
add
cmpsb
cmp
xor
xchg
jb
sub
mov
pop
inc
pushf
sti
out
lret
into
pop
push
fadds
push
aas
loopnew
imul
mov
out
leave
add
add
xor
sti
mov
test
gs
fcomps
mov
inc
out
add
js
xor
out
mov
mov
sbb
mov
and
rorb
jo
movsb
mov
retw
ja
or
nop
icebp
xor
and
and
jecxz
and
cmp
loope
xor
pop
adc
xor
mov
inc
dec
mov
push
dec
sbb
sub
adc
sbb
adc
fildll
jo
sub
outsl
xchg
push
dec
adcb
push
mov
sarb
jge
popf
popf
mov
xchg
add
sbb
or
push
lcall
enter
sub
sub
imul
call
mov
mov
outsb
jo
not
rol
pop
mov
mov
btr
jle
subb
bound
jns
aas
aam
cmp
popa
movb
inc
stos
shl
pop
aad
jae
rcrl
fildll
add
cmp
loopne
lods
int
adc
mov
dec
out
or
shrl
movsl
lahf
fmul
repz
xchg
cmp
xor
xlat
jns
pop
xlat
or
pop
insl
mov
call
sbb
lds
lds
mov
cmc
loop
leave
imul
inc
stc
and
loope
call
mov
add
cmpsl
int3
push
add
cmp
inc
jnp
add
arpl
add
dec
dec
fisttps
inc
popa
fdivl
cld
sbb
and
jecxz
mov
shlb
adc
jl
mov
xor
repz
pop
pop
mov
imul
das
in
pushf
incb
fstpl
imul
sti
push
inc
out
mov
pop
pop
xor
in
fbld
jne
sti
push
imul
push
xor
addl
pop
nop
pop
fbstp
push
mov
mov
stos
xor
adc
stc
ja
push
jb
mov
in
inc
movsl
push
pop
mov
xchg
jge
mov
push
mov
mov
mov
dec
inc
cltd
mov
fisttpll
and
push
jno,pn
jmp
movsb
out
js
enter
or
test
and
xor
push
jb
pop
cmc
mov
fucomi
outsl
pop
pop
rolb
inc
jmp
xor
test
mov
xchg
pushf
xor
inc
icebp
aad
or
insb
or
sbb
cmc
mov
and
ja
cmpl
addl
push
mov
pop
div
cld
xchg
mov
repz
cmp
roll
pop
mov
inc
cmp
ret
pop
add
dec
add
cmpsl
jl
cwtl
sbb
popf
iret
rolb
fbstp
push
sti
and
fwait
or
dec
addr16
ljmp
jae
aad
cmpsb
mov
push
lock
or
or
cld
sub
inc
and
xor
sti
sbb
xor
fstps
dec
add
std
stc
and
dec
xor
cmp
pop
sar
pop
lret
push
ljmp
fcomp
out
mov
add
mov
add
or
inc
dec
pop
xor
arpl
notb
shrl
push
popf
fdivl
daa
test
jg
lock
jp
stos
jmp
or
out
pop
ss
leave
je
pop
decl
pop
rcll
and
lds
inc
pop
fdivrl
pop
mov
outsl
sarb
jmp
pop
sbb
or
lret
outsb
jo
aaa
rcl
sbb
mov
hlt
cmc
subb
jns
shlb
loope
pop
or
sub
jl
test
dec
xor
mov
mov
notb
or
inc
and
stos
repz
clc
sbb
int3
push
mov
lret
test
jge
and
push
dec
pop
or
hlt
stos
sbb
fucom
lret
ret
xchg
cmovo
bound
fnstsw
xchg
jle
clc
sahf
clc
scas
cmp
push
push
mov
mov
stos
ror
lods
pop
mov
xchg
in
repnz
ds
pop
push
cmp
ret
mov
xchg
sbb
pop
cmp
sub
leave
jmp
cmpsb
sbb
adc
push
add
xchg
data16
or
mov
inc
xchg
je
sbb
rorb
nop
fnstcw
test
pop
pushf
inc
repnz
gs
sahf
or
inc
rorl
xor
icebp
gs
pop
fcoml
xor
insb
or
mov
pop
xchg
mov
je
stc
pop
adc
add
cmc
sti
movsb
fistl
jg
pop
in
add
cmp
pop
scas
lds
ds
in
loopne
mov
pop
test
add
mov
lret
pop
adc
imul
pop
movsb
sahf
dec
dec
xor
out
loope
mov
dec
cwtl
test
mov
mov
into
push
sbbb
mov
pop
add
sbb
cmp
out
lds
cwtl
xchg
movsb
scas
shlb
es
in
sub
mov
cmpsl
adc
mov
ja
stc
sub
mov
add
les
rcll
mov
jmp
out
fwait
movsb
cmp
jp
call
sbb
pop
xchg
push
mov
shlb
mov
nop
xchg
push
lret
call
xchg
test
pop
loop
mov
xor
addr16
mov
lcall
dec
sub
xchg
mov
in
cmpsl
imul
data16
mov
lea
cmp
or
pop
rolb
lea
enter
lds
adc
pusha
dec
xor
ret
mov
xlat
cmc
repnz
stos
out
std
pop
aaa
adc
andl
ficoml
and
sub
imul
arpl
add
pushf
lea
insb
xchg
movsb
xchg
mov
xchg
popa
mov
dec
negb
mov
or
sbb
movsl
add
pop
fcoms
lds
mulb
repz
call
xor
or
stc
popa
adc
xor
pop
jnp
lahf
add
sarl
adcl
fnstcw
sub
sbb
lea
push
movsb
or
push
ss
add
and
insl
sti
jno
out
ret
xor
jo
pop
loop
stos
shlb
mov
and
inc
dec
or
adc
ret
pop
inc
in
cmp
shrl
inc
negl
rcll
mov
loopne
mov
jl
add
adc
int3
jge
mov
sarl
jp
data16
jmp
pop
cmp
cld
lcall
inc
les
and
daa
xchg
fdivs
icebp
cs
jge
jle
rorb
xor
mov
aad
sub
adc
das
clc
sbb
sahf
xor
xchg
dec
ljmp
adc
jno
bound
shl
jno
stos
cmp
sub
xchg
scas
cli
lods
fists
push
mov
fnstenv
pop
mov
add
rcrb
shr
jmp
cmp
je
aaa
sub
sub
scas
and
mov
mov
sbb
adc
jge
test
and
xor
xchg
mov
xchg
fbstp
outsl
sub
ss
jmp
jnp
daa
sub
mov
adc
repz
gs
sub
xchg
jecxz
ljmp
mov
mov
popa
mov
out
popa
test
test
cmp
test
push
jo
jmp
inc
lret
and
data16
and
add
cmpsl
sbb
mov
mov
and
imul
ljmp
nop
lcall
ret
xchg
repnz
sub
xchg
lcall
jecxz
lods
adc
cwtl
mov
cs
xchg
and
ret
movsb
sbb
int
adc
lcall
xchg
xchg
push
fsts
stc
pop
push
aad
outsb
mov
ret
xchg
int3
jns
cltd
cwtl
repnz
mov
test
icebp
cmp
test
cmp
mov
mov
or
dec
inc
lcall
test
or
cmp
iret
rep
adc
jb
mov
add
imul
aad
push
fisubrs
push
adc
and
mov
pop
or
or
out
push
dec
ja
je
jnp
mov
std
push
fisubs
xchg
push
lods
add
mov
nop
idivl
and
test
jb
push
bnd
and
or
pusha
shrb
or
jl
jecxz
add
frstor
mov
sahf
inc
adc
mov
cld
cmp
les
jo
fdivp
and
push
inc
fs
dec
sub
inc
imul
sub
cld
inc
rcrb
subb
sub
adc
das
cli
popa
ljmp
arpl
cmpsb
outsl
mov
mov
xchg
jmp
outsb
ljmp
add
das
stos
add
push
insb
add
and
push
dec
cld
push
lea
jecxz
aad
sub
jne
fidivrs
and
cmc
ret
mov
cs
xchg
adc
outsl
addb
icebp
popf
aas
int3
aas
adc
scas
pop
pusha
push
sub
testb
inc
mov
sbb
sub
dec
xor
fcompp
les
adc
inc
frstor
jbe
inc
mov
flds
popl
add
cmp
xchg
jo
iret
jl
pop
mov
pop
inc
or
es
and
lock
lock
adc
loope
dec
and
push
in
negl
in
cli
mov
ljmp
cmc
sbb
xchg
repnz
sahf
adc
scas
aam
mov
mov
repnz
clc
pop
out
loopne
insb
xor
mov
scas
adc
in
push
adc
shl
lcall
mov
lock
jg
pusha
jno
add
fcompl
or
sub
gs
hlt
cmpsl
sbb
shlb
scas
sbb
out
xchg
pop
arpl
xor
jp
aad
test
in
jo
movsl
pop
jno
pop
bound
iret
sbbl
shr
int3
push
pop
pop
and
int
fldcw
test
jg
pop
pop
sbb
mov
inc
sbbl
mov
or
pop
sub
scas
push
sbb
sarb
xchg
jl
iret
aaa
shlb
jb
sub
cmp
add
rcl
cld
pop
pop
fs
dec
nop
lea
inc
xchg
inc
movsl
in
mov
xor
mov
mov
jnp
lods
out
incl
in
rol
or
fwait
call
push
lds
movsl
add
iret
or
gs
push
scas
fadd
and
das
out
popf
data16
mov
inc
mov
fwait
add
and
fiadds
aad
outsb
int
mov
enter
es
sub
idiv
adcl
cmp
jne
pop
xor
push
jns
aas
or
std
mov
ljmp
fwait
jl
sbb
pop
rcr
or
out
lock
push
mov
pop
outsb
lcall
xchg
sub
inc
lret
repnz
pop
sub
fwait
cmc
lcall
cwtl
jae
pusha
aad
out
scas
xchg
gs
or
push
in
popa
push
popf
sbb
xor
in
push
into
adc
dec
insb
mov
push
sub
nop
mov
jle
fcmovnbe
inc
sub
shrb
ret
addr16
lods
pop
dec
mov
in
xlat
hlt
push
sub
pushf
pop
jo
scas
sbb
and
add
imul
jnp
sbb
es
mov
dec
mov
mov
das
outsb
pop
popa
adcl
adc
mov
or
iret
into
dec
aas
dec
sub
adc
jbe
adc
jmp
jge
push
shl
nop
mov
imul
sti
ret
mov
cmp
inc
adc
fimuls
fcmovbe
or
rorb
lret
add
subb
push
divb
sbb
movsl
adc
sub
xchg
sub
fmull
mov
lret
flds
mov
call
cmpl
mov
pop
push
cs
subb
cmp
mov
xlat
push
lret
loope
jns
repnz
xor
pop
loope
in
adc
adc
sti
fmull
fwait
inc
repnz
jg
iret
addr16
dec
or
int3
jle
jl
pop
xor
and
inc
mov
push
lcall
insb
jno
ljmp
out
cld
pop
pop
mov
in
lret
xchg
mov
dec
xchg
lds
orl
cmc
cwtl
std
out
and
mov
in
pop
stos
or
xchg
rcrb
xor
mov
arpl
dec
lock
mov
jmp
scas
or
jb
cltd
xchg
or
xor
sti
mov
sub
sub
int
in
xchg
ret
xchg
call
std
dec
test
pop
fwait
lret
icebp
ss
add
sub
cltd
pop
ret
les
cwtl
push
es
jo
bnd
pop
sbb
xor
inc
daa
cmp
sti
adc
or
adc
inc
and
pusha
cmp
xor
mov
jnp
lods
or
xorb
mov
pop
into
pop
cld
xor
test
mov
dec
jmp
ljmp
cmp
test
or
fs
cltd
aad
sbbl
xor
add
test
jae
out
movsb
mov
mov
mov
or
repnz
sbb
shufps
mov
adc
pop
lcall
sbb
shll
hlt
xchg
fildl
xor
dec
jp
xor
jbe
and
leave
dec
cmpsl
sbb
cmp
add
int3
push
xchg
and
inc
cmp
ja
jne
add
lcall
cmp
or
clc
stc
push
push
mov
ret
fs
push
jbe
fldl
rorl
mov
pop
mov
push
insb
cmpsl
nop
imul
and
jmp
push
jns
push
mov
sub
pop
push
push
mov
dec
mov
push
ss
push
mov
mov
imul
cmp
inc
jmp
ja
cli
dec
imul
jle
cli
int3
icebp
ljmp
shl
popa
sub
mov
outsl
popf
dec
scas
xchg
xlat
je
xchg
je
pop
inc
test
jnp
imul
adc
cwtl
lea
pop
mov
in
mov
out
xchg
bound
xchg
ret
pop
jbe
std
inc
out
nop
add
cs
movl
inc
lcall
sub
inc
call
addr16
movsl
add
mov
ljmp
mov
push
push
xchg
xor
loopne
pop
aad
mov
pop
int3
push
add
and
mov
jle
pop
pushf
lods
fmul
lret
lret
jmp
cs
inc
popa
cmp
mov
in
jl
sub
inc
fs
xor
imul
sub
inc
and
push
sub
mov
insl
jmp
aaa
inc
sub
or
test
sahf
mov
enter
xchg
jae
ret
xchg
cwtl
int
inc
sbb
cmp
mov
jp
add
pop
inc
push
adc
dec
sti
pushf
jae
and
stos
add
mov
adc
mov
inc
sub
mov
push
repz
sub
dec
in
in
loopne
mov
jae
mov
data16
inc
xor
iret
adc
pop
jle
dec
jg
sbb
mov
push
lcall
mov
push
adc
xor
repnz
hlt
push
test
les
adc
scas
sbb
test
icebp
mov
cwtl
xor
or
dec
fsubrl
push
adc
and
repz
jno
repnz
mov
daa
or
cs
popf
and
xlat
lret
fwait
xchg
mov
call
sub
sti
add
or
push
rorb
xchg
stos
sub
mov
push
dec
sub
popf
orb
lahf
mov
pop
int
pushf
or
sbb
cld
fidivs
sub
test
lahf
or
xchg
ds
xor
outsl
and
xorb
or
repnz
mov
imul
inc
sbb
sub
fwait
mov
xchg
sub
jae
repz
mov
sbb
outsb
pop
mov
test
mov
inc
jecxz
cmpsl
loope
and
leave
in
insb
mov
popa
jmp
add
push
pop
sub
loope
add
pop
mov
cmp
push
lahf
loope
and
or
insb
rclb
int
into
out
lds
lahf
cmp
repnz
adc
mov
sub
fnstenv
cmp
inc
out
mov
add
test
inc
aam
arpl
xchg
inc
push
scas
adc
mov
les
lea
mov
jge
popf
imul
mov
sub
xor
lahf
sarl
mov
or
rolb
out
xchg
mov
jbe
and
test
jecxz
sbb
mov
arpl
cmc
scas
jb
aaa
sub
jle
mov
int3
jns
dec
das
out
insb
push
push
popf
sbb
inc
push
enter
lcall
mov
add
aad
xor
xchg
jg
or
inc
outsb
dec
ja
pop
loopne
mov
pop
adc
fistl
mov
jmp
imul
push
shrb
rolb
or
jl
add
in
adc
pop
cmpsb
mov
idivb
pop
push
idivb
lea
and
mov
mov
cli
xchg
or
daa
test
lretw
popa
add
int
sbb
mov
cmp
jl
lahf
in
push
ret
jne
aas
sbbl
mov
sbb
mov
inc
pop
push
pushf
lret
ja
loop
jmp
in
test
jge
imul
out
add
pushf
std
mull
movsb
ret
daa
call
mov
add
push
orl
mov
inc
out
jno
sbbl
lahf
icebp
sub
jns
icebp
shr
inc
jle
negb
inc
mov
dec
cmp
mov
or
mov
jmp
bound
push
into
stos
enter
push
mov
imul
arpl
in
inc
xchg
sub
cmp
cmp
stos
sbbb
pop
pop
lret
out
js
fwait
pusha
cmpsb
cs
shll
cmpsb
jo
add
push
jmp
or
and
notb
push
xchg
dec
mov
popf
idivl
ret
fs
lock
inc
or
push
addr16
jne
imul
aad
mov
or
in
imul
sub
sub
sub
mov
push
scas
out
add
adc
push
arpl
jo
stc
gs
ret
imul
dec
cmc
vdivss
and
shlb
loop
xor
call
cmpsb
repnz
sbb
dec
mov
and
js
push
jle
mov
cmovg
in
xchg
insl
dec
xor
insl
dec
arpl
push
add
repnz
shrb
cmpsl
ja
int3
cmpsb
fidivrl
imul
scas
mov
mov
and
stos
jl
sbb
mov
pop
lret
cmp
je
dec
popf
pop
lock
lret
pop
pop
mov
pop
ret
or
mov
pushf
mov
cwtl
mov
imulb
xor
adc
lret
dec
xor
scas
es
dec
mov
add
push
xor
push
pop
push
into
imul
arpl
stos
dec
pushf
fidivrs
std
ja
jae
sub
ret
xor
movntps
mov
sub
dec
mov
popa
and
inc
fnstenv
xchg
mov
xchg
adc
mov
push
or
jo
sahf
or
add
jns
xor
dec
les
gs
jecxz
fnstenv
push
cmp
scas
xchg
testb
xchg
mov
fwait
inc
imul
mov
in
fwait
outsl
pop
jl
mov
xchg
imul
outsb
push
data16
arpl
push
mov
mov
jb
cmp
mov
loop
lahf
mov
loopne
mov
bswap
push
mov
dec
les
mov
bound
out
and
adc
sbb
pop
sub
mov
pusha
and
movsb
ljmp
fmull
std
inc
popf
adc
mov
xchg
arpl
cs
lret
popf
jb
xchg
xor
stc
xchg
das
repz
fnstenv
cs
divl
lcall
dec
xor
aaa
or
xchg
mov
divl
jne
jns
mov
lret
add
enter
out
mov
add
inc
push
fwait
xchg
loopne
gs
out
sti
sub
pop
sub
xor
dec
pop
jg
mov
out
xchg
fs
sub
inc
mov
jg
ja
cmp
jge
push
xor
jmp
int3
dec
sub
and
adc
mov
mov
pusha
jb
adc
and
xor
push
inc
das
pop
push
je
dec
cmp
xchg
ljmp
lcall
bnd
in
in
mov
adc
xor
xor
sbbb
inc
stc
testl
out
jne
je
adc
adc
ss
xor
xor
pop
outsl
pop
mov
mov
aam
push
mov
pop
test
test
mov
sahf
out
push
adc
call
xor
ret
cmp
pop
jg
mov
sarl
aas
jle
and
adc
std
jge
xor
out
and
xchg
iret
into
add
xor
mov
test
outsl
fsubrl
loopne
es
sbb
xchg
je
popf
sub
push
jne
inc
loope
jge
ja
inc
inc
xor
ficoms
push
mov
jmp
jb
cmp
ss
xor
push
jge
mov
aam
or
aad
adc
cmp
jnp
xchg
mov
ljmp
loopne
pop
or
cmp
jge
ror
aad
mov
adc
or
dec
dec
mov
sub
jg
xor
out
les
mov
ror
cmp
and
imul
jecxz
dec
sub
dec
scas
sub
fwait
call
and
cld
test
lret
movsl
mov
fs
pop
ja
add
jg
jmp
lret
out
fnstcw
jg
pop
aas
ret
push
or
aas
mov
outsb
xor
nop
in
sti
cli
or
das
in
loopne
mov
pusha
xor
cmpsl
add
xchg
inc
mov
movsb
mov
orb
ret
mov
sbb
mov
add
lret
ret
into
pop
adc
pop
out
lahf
jno
push
lcall
mov
es
and
jne
pop
sbb
fisubl
push
mov
fdivs
iret
jne
imul
andb
pop
adc
addr16
mov
mov
push
add
adc
rcrb
shll
xchg
cld
mov
or
adc
cmp
dec
insb
jge
int
adc
push
addr16
nop
nop
into
gs
jbe
ds
rcr
push
fcmove
cmpl
lock
cmpsl
cmpsb
fs
aam
fimull
dec
lds
cmp
insl
xor
or
shrl
lds
popa
ja
les
cmp
cmp
into
imul
mov
insb
push
jl
pusha
mov
add
cmpsb
test
or
or
sbb
rcll
mov
in
popf
dec
and
pop
lods
pop
push
cs
pop
popf
hlt
xchg
and
shll
fisubrl
rcl
mov
jmp
inc
in
out
cmp
movsl
push
dec
orb
cld
nop
inc
adc
mov
inc
mov
insb
insl
xor
fistpl
gs
dec
ret
js
sbb
push
xchg
imul
jno
add
pusha
rcll
cmp
adc
and
lods
cld
popa
add
push
es
addr16
push
jecxz
xchg
push
outsl
inc
push
inc
repz
jnp
out
xchg
in
push
lret
adc
outsb
add
in
testb
xchg
loope
les
mov
in
jl
test
sub
mov
jno
jb
xchg
xchg
mull
in
mov
or
push
clc
fsubl
sub
insb
inc
sbb
negb
fwait
sti
xchg
call
flds
nop
xor
cmp
push
negb
stc
xchg
fsubl
mov
adc
xor
pop
fldz
xor
test
orb
cmpsb
sbbl
cmpsb
clc
jne
shlb
fwait
daa
loop,pn
rclb
in
in
dec
or
icebp
dec
movsb
sahf
pusha
mov
out
out
ficoml
jb
add
push
pop
in
jl
cmp
jle
mov
push
or
in
xchg
mov
in
repnz
sbb
mov
or
xchg
arpl
sahf
xchg
lea
sub
mov
push
sub
sti
jb
mov
lods
gs
adc
push
jns
out
or
lock
divb
popa
dec
dec
push
xor
pop
pop
push
push
scas
xor
in
scas
cli
xor
jl
orb
jae
pop
mov
pop
aaa
ret
mov
pop
adc
push
mov
lds
out
xor
xchg
je
mov
lds
cmpl
aam
loopne
add
idivb
ficoms
gs
inc
jns
and
lds
scas
mov
lret
jp
mov
ja
movsl
bound
fstp
jge
ja
push
fdivrp
mov
mov
add
mov
lock
adc
jo
mov
cmp
stos
lcall
arpl
sub
orl
add
mov
fwait
scas
or
test
sbb
mov
cmc
inc
repnz
imul
out
fimuls
mov
movsl
inc
loop
nop
push
push
and
fwait
nop
cmp
mov
adcl
test
mov
stc
jb
push
jg
mov
iret
mov
adc
inc
cld
sbb
or
mov
in
in
loopne
adc
push
jge,pt
scas
and
testb
icebp
insl
push
sahf
jg
pop
mov
mov
or
nop
fcoml
push
push
jb
or
lea
pop
scas
jne
stos
jns
loope
fistpll
inc
mov
fsubs
lret
xchg
popf
aad
rorb
divb
add
sub
or
outsl
pop
movsl
sub
push
and
mov
hlt
add
mov
out
loop
add
jno
scas
lds
pushf
in
cwtl
xlat
shlb
sub
mov
xor
inc
sub
outsl
add
cs
pushf
push
push
mov
cmp
add
sbb
cmp
lret
shl
push
stos
in
push
inc
xchg
mov
lret
outsl
cli
stos
ljmp
jo
inc
cmpsl
movsb
cli
mov
cmp
fidivl
cltd
xchg
popf
add
dec
xor
xchg
repnz
fdivs
adc
mov
int3
push
repz
imul
in
or
cwtl
mov
adc
add
or
rol
insb
mov
mov
cli
inc
jl
jle
mov
mov
mov
imul
xchg
out
push
inc
popf
push
imul
pop
shlb
sarb
nop
gs
lods
push
dec
cld
or
push
mov
cmp
roll
jb
push
or
mov
xchg
adc
hlt
cld
fistl
push
aam
sub
in
jp
xchg
cld
ds
pop
cmp
lock
jmp
push
stos
mov
inc
jle
sub
in
xlat
jae
pop
xor
fimuls
mov
lret
mov
movsl
add
pop
push
sahf
xor
inc
frstor
pop
push
jno
cwtl
out
push
mov
lret
push
dec
add
test
test
xor
ljmp
push
sbb
xchg
sub
xchg
pusha
int
push
imul
push
sub
lods
xchg
pop
inc
shl
scas
nop
lods
cld
xor
and
xchg
jmp
sbb
xor
call
xchg
or
popa
testl
outsb
or
push
sub
mov
inc
test
rorl
filds
fiaddl
movsl
push
xor
enter
push
and
test
jp
xchg
lret
popl
jnp
add
sbb
shll
pop
mov
leave
push
cmpsb
sarl
inc
testb
mov
stc
out
adc
cmp
stos
mov
stos
aas
push
and
cmp
clc
push
ja
mov
jo
rolb
push
mov
inc
ret
xchg
lret
jmp
pop
lock
sub
jg
xchg
pop
lock
and
sub
push
int
xchg
inc
cld
xor
cmc
fsubl
pushf
mov
repz
leave
jae
lea
pop
mov
sahf
mov
mov
inc
cmp
mov
xor
or
popa
imul
mov
test
dec
xor
rolb
or
ljmp
mov
mov
stos
and
mov
ret
adcl
inc
les
sub
mov
adc
loope
xchg
test
in
scas
cltd
and
ljmp
clc
mov
push
cmp
mov
xchg
cli
or
jecxz
std
into
pop
xor
xor
and
out
loop
xor
cmp
push
pop
rol
dec
cltd
leave
imul
lcall
add
mov
adc
loope
or
dec
sub
xchg
jle
push
push
xchg
cmpsb
test
pop
loopne
stc
sub
mov
pop
sub
inc
and
mov
lcall
or
scas
mov
pop
mov
shlb
jno
sub
subl
jnp
aam
sbb
mov
std
movsl
aam
enter
push
sbb
xor
sahf
add
pop
mov
cmp
cmp
fldl2e
aas
xchg
add
xchg
jl
jnp
ds
lahf
mov
mov
mov
out
dec
dec
aaa
xlat
cltd
leave
pop
sub
std
js
cmp
or
cltd
dec
mov
push
or
sub
or
pusha
das
popf
or
stc
das
adc
movl
push
fmull
jg
outsb
sbb
xchg
dec
int3
cwtl
sbb
sub
std
jne
sub
clc
and
jle
inc
pop
adcl
out
leave
jl
mov
les
lods
outsl
or
dec
in
add
jl
inc
add
mov
repz
paddusw
add
pop
jbe
and
loope
rol
int
aad
inc
loop
cs
sbb
in
in
mov
mov
popf
xor
xchg
and
sub
outsl
cmp
and
xor
or
dec
and
fxtract
xchg
popl
lret
fsubrs
fdivrl
jo
mov
add
test
push
ljmp
jo
dec
adc
sti
jmp
mov
mov
cmp
std
in
cmpsb
adc
dec
cmp
cmp
test
lods
cld
mov
test
std
cmp
ret
iret
popa
insl
adc
rcr
push
cmp
loop
jo
mov
xchg
dec
iret
or
inc
sarw
sbb
outsb
sbb
xchg
or
mov
mov
push
inc
sahf
sbb
mov
pop
mov
out
das
inc
jge
stos
push
cli
push
addl
adc
orl
daa
push
mov
xor
scas
xchg
das
add
popa
rorl
clc
sbb
and
mov
ljmp
push
dec
repz
mov
daa
sbb
sti
pop
pop
in
imul
sub
cs
lods
fsubl
cmc
sub
lods
push
incl
sub
fldl
push
mov
fstpl
xchg
repz
mov
movsb
adcb
dec
mov
adc
inc
mov
arpl
pop
inc
std
jge
lahf
rorl
sbb
sbb
mov
xchg
cmp
xchg
jecxz
popf
in
pop
in
gs
or
sbb
inc
mov
fstp
int3
loope
test
adc
sbb
testb
add
inc
sahf
in
sti
and
mov
sarb
rorl
shlb
pop
lea
ja
dec
movsb
ret
jae
cli
int
mov
mov
in
roll
cltd
dec
fdivrs
out
jle
add
sub
mov
cmp
xlat
sbb
sub
out
sub
lds
repnz
hlt
xchg
pmaxub
std
sub
not
enter
inc
mov
mov
insl
pop
lods
popf
lea
mov
test
sub
shll
xchg
test
ljmp
popa
mov
and
mov
pop
cmp
imul
pop
dec
stos
ret
add
push
sub
ficoml
inc
inc
sbb
xor
mov
in
sub
scas
call
popa
sbb
cwtl
jmp
test
incb
pop
pop
cltd
fwait
add
mov
rcll
push
mov
pop
jl
pop
push
and
lcall
pop
mov
addr16
xchg
xor
mov
scas
mov
cltd
cli
insl
xor
cld
fldlg2
mov
and
xor
cmpl
cmpsb
andb
adc
adc
sub
push
xchg
inc
inc
call
pop
je
repz
pop
dec
insl
popl
nop
lea
mov
mov
inc
mov
out
and
mov
mov
mull
pop
imul
mov
add
push
aaa
mov
loopne
xor
das
leave
andb
sbb
ret
lcall
fucomip
mov
xor
mov
xchg
adc
and
shlb
and
in
imul
mov
out
jbe
mov
xorb
int3
adc
pop
insl
push
xchg
scas
fistpll
clc
xor
sahf
in
dec
fstpl
inc
mov
jb
lock
pop
hlt
add
mov
mov
add
mov
cltd
sub
fwait
test
push
and
stos
fwait
aam
icebp
in
bound
and
or
call
xorb
dec
push
stos
cld
jg
add
fidivl
dec
fwait
imul
dec
cmp
xchg
inc
shrb
notb
notl
call
roll
sbb
push
sub
outsl
fistpl
add
xor
mov
mov
stos
cmpsb
inc
bound
clc
and
mov
movsb
sbb
mov
mov
or
stos
dec
in
jecxz
fnsave
sbb
mov
or
arpl
xchg
movsl
aam
aad
fwait
xchg
pop
stos
push
jecxz
and
call
xchg
inc
push
fs
dec
mov
jmp
pop
sub
mov
ljmp
and
push
mov
pushf
call
cmp
ret
imul
mov
test
sub
adc
lods
push
insb
dec
mov
pop
outsb
fbld
push
mov
es
lods
scas
in
jle
js
out
outsb
xchg
mov
lock
xchg
lahf
stos
mov
subps
fisttps
int3
lods
and
and
aaa
mov
and
xchg
sti
or
mov
ret
push
xchg
mov
mov
jg
mov
cmp
nop/reserved
fldl
add
arpl
mov
xor
xchg
hlt
pop
repz
push
test
jle
fisubl
push
clc
pop
sbbb
ror
bound
xor
repnz
jno
add
mov
outsl
push
pop
arpl
sub
add
sti
fcmove
cwtl
xchg
rorb
lea
jecxz
mov
cmp
mov
pop
clc
and
or
inc
sbb
xchg
imul
jb
leave
pop
fwait
cmp
in
xchg
movsl
cmp
dec
xor
sbb
or
out
mov
data16
xor
mov
jp
push
out
fldt
ret
ljmp
cmc
xchg
add
push
das
dec
pop
add
sbb
mov
iret
sbb
adc
cmp
jbe
movsl
js
loopne
les
icebp
add
lcall
mov
xchg
xchg
rcll
add
faddl
and
push
xor
pop
xlat
mov
or
mov
pop
pmuludq
mull
ficomps
push
int
loope
and
xorb
scas
cltd
pop
push
bound
xorl
pusha
pop
jne
adc
enter
stc
or
lcall
and
js
xchg
xchg
push
fstps
cmpsb
in
in
jp
mov
fwait
pop
sub
rcl
mov
cmp
push
xlat
fs
mov
sahf
and
xchg
in
mov
mov
jl
ss
mov
xor
imulb
add
jg
stc
inc
inc
add
jae
pop
dec
scas
cmp
inc
rolb
push
stc
xchg
push
ja
sti
lret
add
sbb
mov
mov
adc
jecxz
or
stc
mov
push
mov
jge
out
or
sub
or
push
xor
test
add
jbe
mov
xlat
cltd
cmpsb
mov
push
mov
cmc
enter
leave
xchg
xchg
inc
out
xchg
inc
add
mov
jl
fisttps
lods
pop
xor
lds
jnp
mov
dec
rclb
push
push
xor
shr
sbb
sahf
or
jno
mov
xchg
in
cmpl
sbb
and
sub
fimull
fs
mov
mov
fisubrs
inc
clc
fimull
shrb
call
movsl
pop
pop
and
mov
xchg
mov
cmp
dec
jne
cmp
test
mov
jmp
mov
testb
add
or
icebp
pop
mov
icebp
cmp
mov
lock
rcrl
test
mov
push
jecxz
cmp
jmp
stos
cmc
ret
nop
loopne
pop
hlt
ds
mov
push
inc
fldlg2
imul
push
xor
add
notl
cmp
test
mov
xchg
adc
cmp
fmuls
jo
inc
push
mov
mov
cld
push
ss
pop
inc
push
icebp
and
add
std
std
mov
popf
rorl
cmpsb
fcoml
xor
xlat
imul
or
popa
xchg
shrl
mov
mov
lock
or
std
add
shlb
sub
adc
mov
xchg
adc
ja
or
pop
xchg
mov
enter
xchg
test
push
pop
lahf
bnd
insl
inc
stc
enter
iret
xor
mov
ds
push
das
ljmp
or
imul
jmp
push
scas
loope
lods
out
push
imul
shlb
ret
xor
push
imul
testb
push
sub
push
cmpsb
xchg
xchg
or
mov
nop
mov
xor
pusha
adc
jnp
stc
in
xor
fcmovne
dec
jae
mov
dec
jnp
repnz
pop
imull
xchg
push
add
sar
push
popf
pusha
iret
mov
cld
sub
mov
enter
cmp
push
insl
xor
test
imul
mov
dec
leave
push
mov
lods
sarl
cmp
inc
mov
and
jecxz
lahf
mov
insl
jns
adc
mov
pop
out
fistl
sub
cltd
test
inc
and
push
adc
dec
movsl
mov
inc
movsl
xchg
push
jae
push
push
ds
mov
xchg
imul
xchg
cmp
or
mov
cs
pop
and
rep
mov
push
or
inc
fnstenv
sbb
pop
mov
lock
addr16
mov
test
fildll
xchg
ss
fdivr
daa
mov
pop
fucomip
cltd
in
lds
or
push
in
frstor
shl
pop
mov
sub
lahf
jmp
pop
mov
test
je
pop
and
pushf
mov
push
data16
mov
mov
lcall
xchg
pop
or
pop
push
cmp
mov
fnstcw
je
mov
pop
adc
sub
loopne
sbb
mov
cmp
imul
cmc
mov
imul
test
loope
mov
lds
xor
enter
push
jmp
adc
xchg
std
mov
rcrb
mov
xchg
arpl
pusha
mov
xchg
jp
mov
jg
mov
sahf
pop
mov
testb
dec
inc
mov
and
outsb
stos
xchg
mov
mov
jecxz
adc
cmp
stos
das
adc
mov
xor
movsl
add
aas
xlat
sti
out
cmp
shl
lods
clc
daa
xchg
cld
jno
test
cmp
in
sbbb
fcmove
cmpsl
add
or
sub
mov
rcrl
adc
push
mov
lods
inc
jle
fildl
xor
aam
dec
iret
mov
dec
mov
ret
cmp
imul
cmp
xor
cmp
jle
mov
xchg
xchg
lahf
pop
jle
push
test
push
jl
and
das
jo
in
mov
shlb
lds
imul
jle
jo
nop
lods
aaa
sbbl
mov
mov
fucomi
popa
outsl
out
dec
mov
mov
shlb
pop
inc
mov
dec
mov
lret
or
test
inc
lods
imull
xchg
call
nop
cli
gs
xchg
int3
les
pop
in
mov
or
mov
add
gs
sbbb
popa
leave
sbb
sub
jne
in
dec
stc
add
and
sbb
sbb
ret
pop
int
fmul
jp
in
in
add
loop
xchg
mov
shrl
jg
inc
xor
and
pusha
adc
mov
mov
popa
lds
jl
mov
out
mov
xor
lds
movsl
es
nop
add
and
push
jns
mov
outsb
bound
js
or
mov
mov
lret
cmp
add
rcll
sbb
das
movsl
mov
and
call
and
andb
mov
pop
push
pop
and
dec
and
add
push
shlb
sub
cmc
add
xor
lret
popf
and
stos
mov
push
clc
inc
ficoms
add
jae
or
es
pop
cmp
mov
mov
pop
pop
jecxz
int3
jns
rorl
shlb
es
fadd
inc
mov
pop
loop
fdiv
fidivrl
out
das
dec
cs
stos
xchg
jge
fbld
lahf
or
sub
icebp
pop
enter
adc
lret
loopne
loopne
ljmp
push
pop
aad
imul
imul
popa
ss
dec
in
fidivrl
inc
mov
sub
into
rol
gs
jp
cmc
xchg
jo
sub
mov
dec
cmp
xchg
xchg
mov
stos
pop
adc
dec
adc
xchg
gs
jp
or
cld
out
scas
dec
xor
sbb
mov
xor
dec
or
adc
subb
pop
icebp
shll
xchg
add
test
aam
lods
mov
out
lcall
and
push
adc
call
add
pop
scas
sub
push
xchg
add
aaa
enter
nop
outsl
ds
out
cmpsb
insl
xor
jle
out
inc
daa
push
adc
dec
pop
in
jp
xchg
adc
pop
xchg
pop
pop
xchg
stos
out
je
pop
int
dec
rorb
mov
test
mov
and
adc
das
mov
dec
shlb
inc
sub
mov
push
pop
aaa
mov
mov
or
fdivs
add
cmp
les
push
in
fcoml
xchg
std
xor
test
fsubrs
xchg
lock
inc
pop
mov
pushf
and
pop
jb
insl
cmp
cwtl
out
in
cmpb
ret
jnp
fbld
je
dec
dec
xchg
or
sarl
rorl
cld
std
sbb
xchg
into
in
jo
sub
mov
cmpsl
pop
sbb
jne
lds
bound
inc
adc
outsb
test
pop
jle
imul
pop
lcall
push
ljmp
mov
mov
xor
mov
mov
aad
mov
rcrl
add
sbb
or
movsb
jno
mov
xchg
cmp
and
repz
pushl
dec
std
rolb
mov
pop
icebp
inc
mov
notl
inc
push
inc
dec
loop
lret
xor
popa
rorb
and
pop
das
add
jae
daa
imul
in
in
fcoms
mov
cmp
rcrb
dec
orl
jb
xor
sub
inc
adc
shlb
jno
gs
sub
xchg
cmp
sbb
jno
push
outsb
imul
lcall
push
loopne
jl
lds
mov
mov
push
outsb
push
xchg
adc
push
faddp
mov
test
pop
test
les
insl
faddl
cmc
pop
push
push
js
test
jmp
mov
js
gs
mov
add
aaa
gs
cmp
adc
xchg
mov
jb
add
cmp
popf
mov
out
mov
repz
scas
xlat
jecxz
je
mov
add
lret
in
and
lea
rol
push
jp
cmp
jge
pushf
add
inc
call
cli
outsl
inc
pop
jg
push
sub
daa
sbb
out
inc
lea
dec
sarl
cmpsb
test
fmull
mulb
fbld
inc
lea
inc
ret
in
xchg
data16
ret
aam
aam
lahf
in
out
fisubrs
mov
dec
js
mov
jnp
pop
inc
ljmp
mov
aas
aaa
dec
mov
mov
jmp
fwait
cmpsb
jmp
scas
and
xchg
jmp
pop
add
lret
data16
call
mov
sub
dec
cs
cltd
div
gs
das
scas
push
mov
inc
sub
cltd
nop
rcl
adc
lods
ficompl
push
in
and
add
jb
cmp
jbe
cmp
add
stos
idivb
jb
in
xlat
mulps
or
sbb
test
mulb
clc
jle
nop
push
mov
inc
shrb
stos
mov
xchg
mov
movsb
push
jo
add
stos
mov
in
clc
int
mov
bound
scas
fs
xor
leave
add
lcall
pop
xor
fistps
adc
test
dec
rcll
push
sbb
mov
pop
aam
les
test
inc
mov
or
jne
rcl
xchg
sub
call
add
loopne
fstl
mov
mov
iret
dec
jb
mov
xchg
xlat
call
shll
pushf
sub
les
xchg
sahf
rcl
shrl
js
adc
jbe
mov
push
pop
or
dec
aam
and
sbb
neg
ljmp
sub
lods
jne
insb
add
jp
fnclex
mov
add
jg
das
adc
addb
xor
shl
jns
fistps
cmp
jg
cmp
adc
mov
push
lcall
fcomi
jbe
mov
xchg
or
icebp
xor
or
inc
int
and
movsb
cmp
rclb
mov
pop
add
mov
adc
in
jb
imul
popa
mov
inc
mov
imul
ret
add
cmp
je
lock
jmp
or
jo
xor
out
inc
mov
fucomp
scas
mov
pop
sub
scas
jae
imul
pop
test
test
mov
add
cld
xor
fsubl
pop
outsb
idivb
stos
mov
stos
mov
test
ficoml
sub
xchg
int
stc
and
pusha
imul
fnsave
xchg
fldl2t
ret
fcomps
scas
sbb
and
jecxz
cli
fdivrl
lret
gs
test
lods
cmp
mov
xchg
xchg
adc
cmp
fcmovbe
loope
pop
jmp
ja
jae
push
ss
loopne
cwtl
fstpl
jle
adc
cmpsl
dec
and
repz
inc
push
imull
aam
lods
orb
xlat
test
pop
cmp
or
pop
rcrl
mov
xchg
push
testb
pop
mov
or
imul
aas
pop
ret
daa
mov
jbe
jp
cmp
mov
rep
add
out
mov
mov
and
inc
aaa
mov
and
lods
jb
jne
pushf
fiadds
push
or
xor
sbb
mov
mov
cmpb
stos
xchg
push
mov
sub
pop
cld
les
dec
sbb
jae
push
ljmp
ret
int3
and
dec
sub
mov
cltd
lds
add
mov
sub
pop
push
xchg
inc
jns
push
lea
xchg
das
jne
jae
out
fiadds
mov
xchg
jno
xorl
push
insb
inc
mov
sub
inc
fldl
int
mov
cmp
nop
testb
inc
aad
jl
pop
mov
data16
mov
lea
lea
arpl
xlat
mov
les
add
add
cld
jns
movsb
dec
ret
xchg
into
cwtl
adc
xor
lock
sub
ret
cmp
movsb
jp
imul
push
push
fstps
jl
ljmp
cli
sub
ficoms
repz
mov
and
roll
stc
hlt
test
mov
and
add
in
nop
mov
popa
mov
cmp
cwtl
arpl
jne
lret
das
xor
out
jo
lcall
jp
mov
mov
add
cmpsb
out
adc
pop
dec
iret
jecxz
push
std
das
inc
into
sbb
inc
pop
lods
rcll
xor
sbb
mov
xor
xor
add
push
cmp
addr16
jb
ljmp
jb
sar
dec
mov
iret
adc
aaa
sub
mov
add
mov
xor
bound
movsl
jo
dec
mov
daa
mov
sbb
test
imul
cmp
cld
inc
dec
cmp
cmc
hlt
add
push
add
xor
int3
sbb
lds
inc
out
push
cmp
fwait
out
mov
insl
paddusw
jle
iret
mov
mov
test
fnsaves
repz
or
sti
adc
cwtl
adc
jg
sbb
cs
pop
rep
je
cmp
in
dec
jo
xor
xchg
pop
std
stos
sti
xchg
sub
jg
fwait
cmp
out
xor
ss
pop
jae
loope
scas
inc
lods
cmpsb
adc
jecxz
inc
scas
xchg
stos
scas
in
pop
mov
mov
xchg
movsl
mov
jbe
shrb
jo
inc
insl
movsw
stos
hlt
adc
mov
mov
sbbb
mov
flds
outsl
pop
scas
sub
inc
pop
jg
cmp
stos
mov
jae
push
out
jg
sarl
cld
or
sub
inc
hlt
sahf
cli
sub
mov
lea
rcrb
add
and
outsl
mov
lods
push
jp
mov
sub
shl
cwtl
pop
fidivrs
ret
sub
xor
fnstcw
outsb
sub
out
xchg
xor
subb
adc
cltd
lods
and
cli
movsb
hlt
ja
cld
xchg
sbb
cmp
stc
push
sti
das
add
ljmp
jne
and
icebp
test
cmp
nop
call
mov
xrelease
stc
cs
xchg
cmpsl
push
mov
push
sub
fucomi
scas
mov
movsl
inc
jae
daa
leave
push
cmp
outsb
push
inc
mov
mov
dec
stc
lea
test
cmp
outsb
in
scas
std
loope
test
mov
sbb
shll
xchg
or
out
rcl
push
cli
inc
in
xor
fimull
fidivrs
int
mov
pop
aaa
add
push
cmp
adc
jne
jecxz
push
enter
jo
sbb
mov
cmp
xor
xor
clc
clc
repz
or
sbb
ret
ss
scas
test
xorl
aaa
clc
mov
mov
shll
add
mov
std
xor
cmp
jne
cmp
scas
inc
sahf
lret
or
pushf
loope
fs
cmp
add
aam
cmp
lods
push
cs
outsb
stos
add
loop
adc
add
sahf
mov
popf
xchg
and
jle
fistpll
in
imul
and
jp
fmuls
out
lahf
loop
in
scas
add
cmpsb
pop
movsb
inc
mov
mov
out
rcrb
mov
xchg
out
and
andl
shlb
lock
dec
sahf
movsb
clc
dec
mov
and
jbe
push
sub
cld
push
data16
pop
add
cmp
test
jp
out
jmp
loop
icebp
push
loope
pop
mov
ret
les
cmpsb
dec
call
jp
movsl
adcb
inc
mov
into
and
addb
mov
ficompl
xor
les
aad
mov
loop
pusha
jp
test
cmp
xchg
push
pop
add
lods
mov
repnz
add
and
shll
mov
nop
stos
xlat
orl
neg
outsl
pop
les
lret
adc
clc
fmull
cmp
jns
mov
xchg
or
jo
movsl
notl
jno
jb
rcrl
lcall
cmp
roll
or
mov
fs
dec
enter
add
rolb
pushf
into
test
xor
outsl
sahf
mov
xor
rcrb
adc
mov
movsl
shrb
scas
fistpll
cs
pop
mov
sbb
sbb
cld
rcrl
mov
and
imul
sbb
ss
sbb
add
inc
mov
cli
mov
pushf
and
nop
or
fwait
lret
in
adc
outsl
add
mov
mov
lret
adc
adc
mov
xor
mov
and
pop
lret
lds
sub
ds
xchg
addr16
or
dec
push
rol
push
div
fs
ja
icebp
mov
scas
ret
mov
mov
int
xor
fcomp
aam
lret
xor
push
pop
lahf
jnp
stc
lret
inc
mov
mov
std
dec
sub
pop
adc
xor
cmp
cmpb
addr16
data16
xchg
rcl
dec
dec
and
ljmp
pop
or
rcrb
sub
adc
test
mov
aad
adc
sbb
out
xor
cmp
pop
dec
and
jno
sub
add
mov
xchg
mov
subl
dec
in
xor
jbe
and
cmp
mov
enter
ret
roll
or
pop
insl
clc
mov
xchg
arpl
stos
iret
dec
inc
das
or
cwtl
out
call
mov
jns
rorl
loope
fists
fadds
shlb
test
mov
and
add
xchg
pop
pop
scas
push
pop
sti
arpl
int3
ds
std
pop
or
out
mov
dec
in
adc
pop
inc
pop
in
xchg
ljmp
adcb
bound
loope
inc
or
andl
test
out
sub
mov
iret
mov
pusha
mov
mov
addr16
xor
and
imul
jb
cs
aaa
test
movsb
and
hlt
movd
gs
inc
cmpsb
insb
mull
daa
sub
inc
out
sbb
xlat
or
jl
nop
andl
out
cmpsl
repz
ret
jb
xchg
cwtl
ret
add
dec
lret
sub
cmpsl
inc
bound
jo
dec
push
cmp
cmp
fsubl
pop
or
mov
pop
bound
xor
shll
bound
aad
jne
enter
or
lea
inc
xchg
enter
cltd
pop
mov
lret
xor
mov
mov
bts
cmpsb
mov
mov
or
mov
nop
mov
mov
rcrl
inc
inc
sbb
inc
fldenv
pop
xchg
pop
aas
mov
mov
rolb
lret
ret
pop
sub
sub
and
add
fimull
dec
xchg
or
sbb
loop
shlb
mov
aad
sub
data16
rsm
push
pop
test
imul
pop
pcmpeqw
int
lods
mov
je
ljmp
in
push
push
pop
arpl
add
push
jp
adc
xchg
test
push
jbe
inc
pusha
jo
inc
sub
rcll
xor
popa
dec
inc
pop
push
lods
psubusb
rcll
add
test
clc
int3
jne
sub
push
dec
cmc
xchg
jl
es
cld
or
push
aaa
out
jp
ret
ffree
or
inc
pop
mov
pop
jmp
push
jg
adc
or
pop
xchg
add
cmp
fs
es
sahf
jg
ss
std
loope
mov
nop
add
xlat
sbb
bound
loop,pn
cmp
add
rorl
or
inc
mov
int3
arpl
fcomip
adc
push
lock
mov
xor
shrb
scas
push
mov
adc
jl
fs
jns
mov
subb
in
imul
jg
pop
lods
out
clc
jb
loop
imul
xchg
push
mov
inc
adc
jne
add
jg
inc
pop
pop
out
dec
sbb
aam
sbb
out
insl
cmp
sub
rcrl
or
lods
addr16
mov
mov
xchg
cli
adc
test
xchg
pushf
fildll
sub
add
and
into
inc
imul
fidivrl
out
out
fiadds
leave
pop
lods
roll
imul
dec
mov
xchg
mov
mov
lcall
mov
loop
loopne
test
add
or
pop
mov
divb
or
js
or
push
sub
out
lods
sbb
imul
fs
int
sahf
sbb
clc
xchg
iret
scas
cmpsb
cmp
lcall
aam
mov
adc
mov
adc
ret
inc
icebp
repz
decl
das
les
cltd
bound
jnp
jo
aam
cmpl
adc
sbb
fsubs
out
pop
faddl
or
cwtl
cltd
int
xlat
mov
call
jg
pop
leave
xchg
dec
ljmp
lahf
out
rcrb
sahf
fwait
lcall
into
out
jg
mov
mov
insb
mov
idiv
popa
mov
outsl
pop
and
inc
scas
mov
movsl
sub
popf
cmp
xchg
jmp
xor
popa
push
push
or
test
sbbl
inc
cwtl
mov
jg
add
sbb
call
mov
dec
sbb
test
bound
js
jnp
xchg
call
enter
lods
cmpsl
or
sahf
dec
pusha
add
in
mov
mov
adc
cmp
mov
sbb
scas
fwait
in
mov
icebp
mov
xchg
adc
xchg
mov
lret
sub
enter
dec
in
cli
sub
push
and
outsl
push
dec
mov
or
in
clc
scas
test
psadbw
aaa
pop
js
sub
mov
jl
fucomip
lds
sub
push
test
fimull
xor
in
add
ret
int
jns
dec
push
aaa
add
aam
jmp
jb
sbb
inc
cmpsb
mov
inc
rcrl
or
jae
in
adc
pop
popf
outsb
mov
sub
ds
les
pushf
xchg
push
rorb
dec
pop
xchg
ds
sarb
in
xor
xchg
sbb
mov
nop
and
sarb
cmp
data16
adc
sub
js
jge
in
mov
loope
inc
inc
jecxz
mov
rcll
xor
test
sahf
mov
xchg
fadd
hlt
dec
mov
dec
inc
daa
test
cwtl
out
movsl
dec
pop
mov
jle
mov
and
dec
js
insl
inc
lds
and
mov
ret
or
pop
scas
repnz
mov
sub
leave
scas
fidivs
mov
or
movsb
jae
lcall
iret
push
xchg
mov
dec
jae
gs
test
or
test
jns
idivl
cli
int
fwait
push
mov
cltd
cmc
lds
ret
jae
or
mov
add
jg
xchg
icebp
mov
popa
pop
and
and
js
ss
mov
inc
mov
mov
daa
outsl
push
add
adc
stos
lea
xchg
in
ret
add
pop
daa
cmp
ss
mov
int3
xorl
add
arpl
sbbb
test
daa
cmc
in
sbb
arpl
jnp
jg
pop
imul
xlat
or
pop
inc
mov
shl
jo
dec
test
ja
fs
push
imul
push
imul
push
sub
imul
test
repz
and
sarl
jbe
daa
mov
scas
mov
jmp
test
lahf
xor
sub
les
or
lahf
xor
and
and
sub
push
push
jbe
jno
and
mov
add
testl
jns
xchg
sub
sub
lahf
xor
outsb
leave
add
out
adc
and
inc
stos
pop
fsubrl
dec
or
mov
mov
cmovp
lds
cmpb
mov
mov
mov
in
cli
insl
andl
push
sub
outsl
lds
outsb
cld
into
sahf
push
inc
pop
out
mov
sarl
pusha
or
and
out
cmp
shrb
lret
icebp
inc
shrb
fs
int3
lods
and
jb
ret
cmp
or
std
inc
xor
arpl
dec
pusha
shlb
jns
jb
or
inc
mov
pushf
stos
aas
cmpsb
hlt
jge
int
fsubrl
sbb
lds
clc
cmp
xor
jae
sbb
out
xchg
jge
pop
arpl
outsl
cmp
mov
pushl
pop
xor
sbb
mov
jo
pop
or
pop
mov
xorl
jle
pop
es
pusha
scas
fiaddl
repz
dec
add
sbb
stos
outsl
loope
aam
ds
push
lret
and
cmpsb
fs
sar
sbb
add
notb
shrb
inc
xor
jg
xchg
jnp
fcompl
hlt
cltd
fisubrs
adcl
pop
out
in
ret
inc
sarb
xchg
in
xor
mov
cmp
inc
lret
iret
movsl
jbe
fs
jge
sub
loope
pop
sti
add
rcl
ds
int
shll
inc
imul
js
lods
fcmovnb
test
test
aam
xor
cmp
cmp
bound
sar
sub
mov
addr16
adc
jmp
adc
fisubs
iret
std
rolb
xor
fadd
stos
jns
ret
ja
ret
ret
add
push
sub
lods
sub
xor
xor
dec
jbe
decl
inc
outsb
mov
ja
stc
sbb
pusha
add
pop
imul
mov
push
fsubl
inc
sahf
test
pop
pop
es
mov
sbb
mov
addr16
jmp
or
or
sub
sub
mov
push
cmp
out
pop
jecxz
mov
insl
push
and
fsubl
pop
fs
paddb
cli
mov
or
out
int3
adc
popa
mov
das
xor
pop
push
add
daa
inc
sbb
nop
push
mov
add
lods
pushf
stos
cwtl
fst
mov
ljmp
inc
cmpsl
addr16
xchg
adc
scas
mov
ja
push
notl
in
pop
dec
lea
aad
dec
bound
xchg
and
movsb
xchg
pop
mov
mov
sub
addb
ret
out
stos
mov
shlb
testl
add
add
jecxz
fldcw
nop
arpl
dec
cmpsb
pop
dec
pop
je
imul
jl
sbb
sub
dec
sarb
inc
iret
inc
dec
mov
test
xchg
and
inc
add
imul
jl
xchg
js
and
scas
test
inc
push
cli
movb
enter
and
inc
out
ret
jmp
mov
and
xor
xchg
and
in
enter
push
mov
in
mov
add
popf
jl
dec
rcrl
mov
jg
fadd
xchg
mov
aam
stc
jo
add
dec
loope
dec
dec
mov
in
rol
mov
cs
out
cmp
pop
mov
fcoms
xchg
jmp
jg
mov
inc
jno
rolb
lret
push
sub
inc
mov
sahf
pop
sub
in
stos
shrl
inc
or
mov
xchg
out
pushf
test
sbb
ret
shll
xor
fiaddl
sarl
or
into
pop
pop
mov
clc
xorb
sbb
mov
idivb
adc
insb
and
mov
cmpsl
ss
xchg
and
mov
sti
mov
ds
in
nop
cmp
sbb
dec
dec
popf
adc
cli
or
test
push
mov
in
mov
scas
cmpsl
vhsubpd
mov
out
outsl
dec
sub
loopne
inc
mov
cmp
cwtl
lea
push
mov
pop
popf
inc
imulb
imulb
mov
xorl
jb
adc
xor
lea
imul
ret
sti
jne
jg
add
pop
sub
adc
cli
or
fstps
xchg
repnz
fisttpl
lret
pop
add
push
aaa
pop
pop
lds
jg
mov
jecxz
adc
popf
mov
push
rclb
ret
test
mov
sub
and
fcomps
xchg
push
stos
scas
jne
out
mov
or
inc
in
int3
pop
mov
gs
mov
sar
iret
inc
push
mov
fcmovne
xchg
out
mov
out
cli
push
les
testb
pop
mov
in
add
fstl
pop
aaa
fisubl
push
mov
insl
cmpsb
adc
push
pop
leave
dec
and
loope
mov
cmpsb
jno
mov
pop
lods
mov
sbb
mov
mov
xor
outsl
fadd
out
data16
mov
cmp
hlt
adc
dec
out
lret
fsub
and
push
pop
lcall
ja
arpl
lea
cmpsl
sub
xchg
cmp
std
jg
scas
push
and
insb
fcomp
ja,pt
mov
push
xchg
fldenv
mov
loop
add
push
push
test
movsl
aad
cli
insb
mov
imul
mov
add
push
push
in
fstps
cs
jmp
pop
add
dec
rorb
sub
mov
sbb
shrl
pop
cmp
jae
add
inc
mov
dec
adc
cmp
out
ficomps
mov
mov
stos
dec
lds
mov
or
dec
int3
add
dec
popf
scas
movsb
push
inc
jmp
test
fcompl
rcl
cmpsb
cmp
dec
mov
xor
fcmovnu
add
jnp
xor
addb
js
mov
jle
stos
cmp
lds
xor
jecxz
rcrl
popa
inc
ret
cmp
rolb
cmp
and
adc
dec
fcoml
jl
repz
xchg
cmpl
dec
xchg
inc
xchg
aaa
adc
dec
push
cmp
push
test
sti
adc
mov
sub
fstps
jb
sub
jmp
dec
js
insl
mov
adc
ds
xlat
mov
add
lahf
mov
pop
enter
inc
setp
sbb
jb
fnstsw
jbe
enter
mov
aam
add
sbb
or
sub
mov
dec
cmp
jb
lods
mov
or
les
and
lret
mov
les
imull
pushf
push
xor
jecxz
mov
stos
imul
cwtl
add
and
add
push
mov
add
and
pop
lods
call
jle
insb
ss
or
fwait
jne
inc
sti
xor
std
sub
sbb
mov
lea
addr16
inc
add
sbb
popa
out
not
xchg
in
push
movsb
jb
dec
lcall
sbb
mov
outsb
cmpsl
xchg
mov
mov
push
in
push
lret
out
cmp
out
dec
mov
je
xchg
cmove
mov
xchg
cmp
ja
lea
push
and
adc
aaa
fldl
sahf
leave
scas
cmp
pushf
outsb
loopne
or
and
aad
fcoms
adc
xor
popf
in
xor
ljmp
daa
ficomps
imul
xchg
and
aam
mull
test
clc
stc
insl
ficoms
or
cli
pop
outsl
int3
pop
dec
scas
add
cmpsb
inc
jle
adc
mov
push
inc
or
mov
mov
popa
jbe
out
lock
loopne
push
frstor
mov
ja
pop
jb
push
mov
dec
sbb
and
dec
repz
push
popa
ret
aaa
sub
aaa
adc
dec
out
out
lret
in
je
aad
sbb
push
mov
xchg
aad
sub
test
xchg
push
ret
stos
mov
mov
and
mov
ja
mov
test
jne
mov
xchg
cmp
jne
stos
mov
mov
sub
cmpsb
inc
or
jle
and
divl
stc
mov
ljmp
and
add
adc
adc
mov
jmp
and
lahf
orb
mov
dec
jp
js
cli
push
dec
ljmp
dec
loope
cmpsl
sbb
mov
stos
inc
nop
sub
aam
dec
add
dec
jg
xor
add
imul
dec
push
cmp
mov
sub
aaa
adc
loopne
mov
sbb
sti
mov
fcmovbe
pop
sub
ret
insb
out
lahf
sbb
sbb
or
ja
or
push
lcall
push
xor
dec
jne
push
jno
mov
imul
add
fsubl
out
test
jnp
sub
cmp
pusha
insb
lea
ret
pop
orl
fld
xchg
mulb
movsb
lea
icebp
sub
mov
inc
mov
xor
inc
fiaddl
fcomp
addr16
mov
test
decb
sarb
mov
xor
and
leave
jmp
xor
aad
aam
bound
pusha
or
xchg
and
jo
cli
push
jge
and
lret
cmp
add
pop
mov
daa
mov
push
sub
lahf
dec
rolb
cmp
das
ljmp
es
leave
xchg
mov
jp
push
xchg
cld
in
add
xorb
es
ror
and
push
mov
out
stos
mov
sub
test
mov
out
pop
push
dec
es
lcall
fimuls
hlt
mov
movsl
dec
ljmp
test
add
call
inc
arpl
xor
adc
mov
lods
lcall
cmp
sahf
cmp
xlat
sub
adc
cwtl
out
pop
bound
lret
push
xchg
lea
in
repz
mov
into
or
dec
jmp
in
xchg
cmp
fstpt
pop
dec
fldcw
pop
fisubrs
lds
add
out
push
jecxz
jo
fiaddl
sbb
es
movb
cmp
inc
fisubrs
or
or
jp
mov
sbb
push
shll
and
dec
sahf
mov
add
test
push
out
fdivrs
sbb
mov
jb
les
inc
cld
dec
mov
mov
jb
dec
in
cmp
stos
clc
jnp
fisubrs
cld
jns
mov
stos
mov
xchg
notl
mov
fistpl
cmp
loop
fmuls
rclb
into
xor
and
mov
cmp
cmp
push
out
sub
daa
add
mov
ja
icebp
mov
pusha
sti
dec
andl
adc
orb
adc
int
jle
or
push
adc
mov
xchg
out
rol
hlt
cmpsl
pop
xlat
imul
jmp
ljmp
sahf
push
cli
dec
loopne
push
fs
sub
push
in
repz
mov
in
jnp
and
sbb
push
xchg
push
pop
mov
popa
and
ja
jmp
lcall
dec
cwtl
sub
xor
rcrb
leave
pop
push
es
test
dec
movsl
ret
hlt
dec
push
sbb
lret
lods
xlat
loope
pop
pop
add
cmpsb
lcall
pop
jae
and
cmp
xchg
mov
rorl
cmp
popf
roll
insl
xchg
jno
div
pop
aaa
ja
aas
xchg
mov
pop
pusha
sub
jp
in
jg
in
lret
pop
cli
and
fwait
xor
xor
pop
mov
imul
push
stos
dec
adc
in
sti
rcrb
test
pop
mov
out
fldl
mov
dec
xchg
sub
mov
mov
cld
movsl
lock
dec
xchg
out
daa
das
mov
jmp
mov
push
push
addl
inc
das
in
subl
stc
fdivrp
les
dec
mov
mov
leave
jmp
jge
ds
aad
test
dec
repz
insb
dec
popa
fsin
jge
fdiv
cli
mov
or
fstps
push
push
sbb
cmp
xor
lret
in
cmpsl
clc
pop
mov
popa
cmp
push
adc
mov
mov
pop
mov
lods
mull
arpl
xchg
mov
dec
fistpll
in
add
xchg
mov
inc
push
mov
lods
cmp
push
popa
bound
or
mov
iret
js
push
fdivrl
fs
rolb
sbb
ja
mov
mov
das
rorl
mov
ja
mov
and
jno
add
push
decb
cmp
mov
mulb
icebp
es
fucom
mov
int3
stos
and
add
out
lret
insl
iret
sbb
dec
dec
pushf
dec
outsb
adc
adc
stos
in
es
addl
xor
jecxz
call
xor
inc
arpl
imul
stc
jle
mov
cmp
aas
adc
inc
or
cmp
mov
roll
xchg
ficomps
mov
dec
pushf
lcall
pop
pop
lock
adc
lds
push
into
sub
jge
dec
pushl
jno
jmp
jo
in
push
rcrl
pop
pop
leave
mov
in
mov
jns
add
cmp
xchg
int
test
or
xchg
and
cltd
push
stos
out
jg
cld
lret
mov
or
ljmp
pop
pop
lods
jae
inc
jecxz
pop
sub
test
push
and
sub
sub
xor
mov
push
pop
add
movsl
cmp
arpl
adc
add
xor
pop
mov
ds
rol
in
outsb
test
xchg
push
xchg
std
xor
jb
mov
pusha
fcoml
push
sbb
inc
jge
sarb
add
leave
out
jl
push
xchg
add
sub
sbb
inc
sub
sub
jl
mov
mov
sub
mov
lret
leave
enter
adc
ret
shrb
adc
mov
mov
vmread
int3
sbb
movsl
out
cwtl
imul
sahf
in
sbb
sbb
in
jb
imul
pop
sbb
fs
pop
inc
adc
xchg
dec
insb
cmp
mov
outsl
fidivrs
mov
jns
mov
push
stc
not
leave
jge
insb
dec
in
mulb
push
ss
testb
mov
lea
xchg
jne
sub
push
ret
pop
inc
sub
xchg
notl
mov
push
movsl
pop
push
out
mov
aad
outsb
pop
repnz
or
stc
adc
fldl2e
enter
push
xor
mov
or
cmp
andb
cld
inc
fisttpl
aad
jg
add
sub
daa
test
ror
ror
ss
adc
iret
out
fisttpl
xchg
cmp
dec
xor
push
test
cmpl
cli
aaa
outsl
mov
and
inc
std
inc
pop
mov
sub
cli
cmpsl
mov
in
jmp
sbb
mov
iret
cmpsb
aaa
mov
xchg
scas
dec
call
int
fistps
and
imul
jns
jmp
scas
push
frstpm(287
es
xchg
jl
or
in
or
je
add
mov
faddp
lret
js
popa
data16
in
sbb
mov
lahf
inc
pop
xchg
into
sub
out
sbb
lock
push
or
jnp
cmpb
jl
inc
sub
pop
mov
ret
and
lods
xor
out
pop
sbb
ss
and
scas
pusha
fbld
std
aad
add
dec
cmp
push
mov
testl
in
leave
in
pop
mov
and
outsb
and
int3
nop
inc
push
mov
repz
dec
cmpsl
imulb
cmp
int3
mov
jg
pop
out
pop
push
dec
stos
dec
insl
xor
mov
insb
ds
dec
jae
add
push
adc
xor
adc
and
outsb
mov
cmp
xchg
loope
cmp
popa
pop
mov
mov
xchg
or
popf
adc
xor
xor
xchg
movsb
sub
movsl
arpl
pop
push
in
cltd
mov
cwtl
cltd
cwtl
iret
xor
sub
leave
ret
ret
cs
sub
loopne
hlt
loopne
pop
int3
jne
lret
push
shr
mov
add
loop
xchg
mov
push
fidivl
sub
outsl
gs
aad
inc
sbbb
cltd
mov
jle
mov
lcall
inc
push
sub
fadds
shlb
push
out
mov
aam
xchg
in
loop
push
fisubrl
or
mov
xchg
lock
in
jl
ja
pop
rcll
add
or
rorb
mov
ljmp
test
in
push
xor
pop
cli
xchg
rol
sbb
aas
add
aaa
jp
xorl
js
inc
lock
test
xor
sub
mov
lock
ficoms
inc
jne
xor
scas
pusha
pop
stos
je
das
lret
cmp
mov
cmp
imul
movsb
out
mov
stos
dec
jne
push
movsb
test
xchg
push
mov
jecxz
inc
mov
aas
pop
icebp
add
pop
mov
sbb
adc
popf
addr16
std
test
nop
cmp
and
add
enter
jle
clc
aas
add
jnp
cwtl
sar
imul
test
jge
aaa
aaa
lock
inc
mov
xchg
test
in
rorb
cmp
inc
inc
xor
inc
mov
xor
push
sub
mov
mov
vhaddpd
dec
fldl
pxor
fwait
sbb
jmp
xor
push
outsb
xor
hlt
or
std
popa
movsl
inc
hlt
adc
outsb
fs
pop
jns
outsl
xchg
mov
xchg
int3
adc
in
sbbl
jle
jo
xchg
testb
sub
jecxz
xor
cmpsl
push
test
test
fs
inc
pop
jno
mov
call
popf
loope
push
inc
subl
sti
xchg
push
sbb
push
xor
pop
mov
sarl
push
sti
xor
mov
pop
and
dec
adc
pop
les
std
stc
push
fcmovu
das
pop
vcvtps2pd
mov
leave
je
ljmp
stos
mov
pop
adc
out
into
cmp
and
daa
sub
add
push
mov
daa
and
add
adc
xchg
pop
lret
inc
aaa
addl
mov
lret
push
rcl
cli
xchg
add
dec
repnz
cmpsb
test
lret
mov
cmpsl
int3
jne
sbb
orl
mov
xlat
lock
push
push
sub
fdivrl
les
aaa
int
orb
in
es
mov
bound
in
xor
call
push
mov
or
mov
ret
dec
or
push
sub
mov
std
js
imul
xor
xchg
xor
xchg
adc
push
and
mov
or
lahf
mov
dec
outsl
mov
aas
xchg
push
pop
test
in
inc
push
movsl
std
out
daa
je
cmp
xchg
call
xor
ja
fdivl
dec
inc
cli
int3
inc
testl
insb
stos
sbb
push
testl
inc
xor
push
pop
push
xchg
mov
dec
sbbl
mov
scas
fwait
jp
xchg
jge
adc
daa
lods
or
add
push
add
loopne
mov
cmp
and
push
cld
add
orl
mov
mov
out
xchg
icebp
ds
loop
mov
out
sub
js
jo
or
in
xor
cltd
es
mov
pop
jne
push
leave
sub
adc
inc
imul
inc
jnp
dec
pop
inc
lock
lcall
scas
dec
adc
sub
into
mov
push
icebp
mov
push
int3
lahf
inc
xchg
xor
jmp
dec
inc
fnstsw
jno
popf
ds
movsl
jmp
and
iret
scas
movsl
push
pop
test
xchg
test
aaa
sub
out
jno
adc
aaa
das
xlat
sub
sbb
mov
sti
stos
orl
mov
dec
pushf
ret
mov
cmpsb
dec
jae
clc
clc
jns
pop
jge
shrb
outsb
lret
pop
mov
pop
sub
fstl
add
outsl
mov
repnz
mov
ss
mov
loopew,pt
sub
dec
pop
pop
sbb
scas
std
fcomps
cmp
xchg
clc
mov
sub
xchg
cmp
sbbl
sub
pop
pop
cmp
scas
into
loopne
pop
es
into
cmp
insl
xor
insl
ret
outsl
je
xchg
cmpsl
add
loope
mov
enter
popa
je
push
jns
pop
xchg
mov
or
mov
inc
cmpsl
popf
cmp
or
les
ja
inc
and
cmc
sbb
hlt
leave
mov
cmp
stos
push
std
mov
inc
das
pop
lret
fdivrl
test
mov
inc
mov
sbb
nop
in
inc
orb
loope
jno
sub
test
sub
lcall
push
repnz
xchg
mov
rcr
jns
lods
xor
pusha
xor
shll
data16
psubb
or
mov
into
lock
mov
lret
mov
pop
adc
loop
inc
jns
cmp
insb
fxtract
xlat
rol
cmp
rcrl
iret
test
mov
int3
outsb
jo
callw
sub
mov
gs
and
out
out
sarl
inc
imul
or
mov
jl
adc
dec
cld
in
push
jecxz
dec
pop
call
push
cli
sbb
push
loop
pop
dec
mov
sbb
mov
adc
cmc
push
mov
mov
push
cmpsb
repz
push
sbb
sub
or
jne
stc
repnz
inc
aaa
xchg
push
adc
out
ret
push
sub
mov
lea
pop
pop
adc
pop
int
push
sti
push
jle
repz
testl
es
inc
sahf
or
ljmp
xlat
fcmovbe
icebp
addr16
pop
mov
xchg
jle
fidivrl
jg
push
inc
push
mov
cwtl
xchg
dec
fcoms
flds
jne
sbb
repnz
pop
in
mov
cwtl
pop
stos
dec
lret
and
cltd
cmc
sub
pop
sbb
adc
leave
sti
iret
inc
mov
inc
test
push
sbb
testb
add
cli
mov
jnp
jmp
xor
pop
jecxz
stos
or
jmp
in
stos
pop
mov
je
in
lds
jae
mov
fwait
neg
sahf
es
nop
jbe
hlt
dec
or
push
and
sarb
jp
xchg
add
dec
int
xchg
mov
lods
push
cs
daa
loopne
nop
push
xorl
xor
dec
shr
inc
sub
fsub
jno
or
adc
adc
push
fwait
loopne
add
inc
in
xor
xor
and
lock
flds
jmp
cmpsb
mov
xor
std
lds
call
rcll
data16
or
dec
cld
pop
fwait
inc
hlt
mov
inc
add
loop
inc
lret
xor
das
sarl
inc
nop
and
scas
call
loop,pt
xor
lods
fs
jo
pop
rcrl
aaa
and
inc
fnstcw
sub
bound
mov
out
out
addr16
push
mov
pushf
clc
jg
pop
push
inc
sub
shrb
fs
push
rcll
bound
pushf
push
sub
xor
int3
cli
fldcw
mov
push
int
pop
hlt
fwait
stos
cmpl
dec
pop
xor
add
mov
add
jecxz
insb
inc
repz
pop
xlat
mov
jnp
inc
mov
cs
sub
ds
orl
daa
addl
jecxz
repz
adc
mov
and
jns
dec
xor
movsl
push
inc
repnz
lea
lea
mov
lret
das
add
push
fisubrl
mov
pop
mov
shlb
nop
lock
mov
fdivrl
xor
adc
f2xm1
xor
in
daa
push
loop
mov
test
out
dec
pop
pop
repz
bound
xchg
test
fcoms
insb
popf
push
mov
adcb
and
pop
or
xorb
fwait
imull
pop
int3
inc
sub
adc
mov
mov
mov
cmc
mov
scas
mov
out
cwtl
push
push
cltd
outsl
xchg
pop
xor
pop
lods
inc
push
lahf
xlat
lret
sbb
lea
stc
xchg
inc
add
scas
xorb
movsl
pop
mov
mov
and
pusha
ljmp
pop
mov
dec
std
repnz
adc
pop
push
push
push
jp
sbb
rcrl
push
push
add
add
sahf
dec
inc
push
loopne
xchg
sub
sbb
mov
jge
xchg
lret
mov
loopne
loope
enter
push
adc
cmpsl
stc
add
aas
fwait
pop
ljmp
cwtl
bound
sbb
scas
leave
int3
cmp
es
mov
xor
insl
addr16
jmp
mov
arpl
rorl
push
push
sbb
and
cmp
mov
rorb
mov
data16
jg
push
stos
aas
addr16
mov
add
xor
jnp
push
inc
dec
inc
ss
push
jecxz
mov
or
iret
fstp
or
mov
jl
dec
mov
les
jge
aam
adc
cld
xchg
lcall
pushf
xchg
iret
mov
imul
mov
fisubs
mov
push
cmpsl
lcall
cmp
and
mov
mov
xchg
lret
mov
dec
sub
out
subl
push
je
jne
cmp
fldenv
rcrb
mov
xor
ss
pop
movsb
into
das
sub
imul
sub
and
ss
repnz
adc
dec
push
xchg
pop
imul
jbe
hlt
loopne
popf
std
adc
movsb
pop
testb
cwtl
mov
rorb
mov
sti
fwait
int3
mov
gs
int
orl
adc
sti
xchg
mov
sahf
das
push
sbb
cs
lods
mov
mov
sbb
out
jne
cmpsb
out
mov
nop
push
xor
jg
xchg
mov
mov
pop
xchg
loop
shrb
sub
data16
je
push
or
fwait
or
and
je
pop
jnp
adc
sbb
insb
in
shll
or
mov
jg
or
cmp
sti
lahf
adc
mov
pop
dec
inc
jne
daa
jmp
add
das
rclb
sti
jo
ret
cli
leave
out
pop
xchg
jbe
icebp
popa
sbbl
ret
cs
adc
insb
pop
in
push
add
fcmovnb
outsl
mov
aas
std
sahf
fists
add
and
fdivrs
fstpl
xor
mov
mov
sub
jecxz
mov
jl,pn
xchg
out
jl
push
ja
xchg
dec
jge
push
inc
scas
xchg
push
js
stos
mov
test
inc
fs
ljmp
aas
movb
imul
fildl
add
adc
push
popa
mov
aas
shlb
aad
adc
in
es
add
in
xor
cltd
sbbb
xchg
lcall
rorl
xor
test
clc
test
inc
add
call
xor
xlat
mov
cmpsl
psllw
cld
out
movsl
addr16
xchg
mov
hlt
mov
ja
cmp
mov
jg
aas
push
jae
pop
jno
imul
ja
sar
pushf
aaa
movsb
and
dec
jecxz
popl
adc
incb
icebp
je
in
push
fimull
das
mov
mov
outsb
testl
outsb
mov
xchg
inc
cmc
scas
ret
mov
pop
mov
push
ret
lock
xlat
xor
popa
sarl
mov
inc
aas
mov
or
gs
cmp
aaa
push
ljmp
cmp
mov
pop
les
inc
and
xchg
jnp
lock
enter
sub
stc
addr16
inc
or
pop
mov
test
push
mov
sti
outsb
mov
dec
outsl
aad
mov
pop
icebp
sub
cmp
mov
inc
inc
jnp
mov
add
mov
cmp
cmp
sbb
adc
cmp
popf
xor
adc
js
jnp
loopne
adcl
mov
pop
pop
push
lock
jge
mov
push
lea
in
mov
stc
jbe
shrl
faddl
mov
jnp
in
inc
push
push
in
bound
ljmp
data16
push
and
enter
xchg
sar
push
js
mov
xchg
addr16
shrl
mov
jge
push
ja
sub
adc
mov
xchg
sbb
jne
cltd
cmp
ljmp
sahf
mov
push
test
test
inc
add
mov
add
std
add
repnz
cwtl
or
add
pop
mov
test
mov
pushf
hlt
int
mov
and
xor
call
loop
xor
jecxz
mov
jno
lret
mov
test
ret
shl
ss
push
or
lret
sub
aaa
jno
inc
cmpsb
fwait
xchg
dec
and
loop
clc
xor
out
mov
lds
or
and
orl
pop
dec
out
mov
ficoml
pop
cmp
and
loop
ds
aam
and
mov
call
add
or
imul
stc
fldenv
xchg
xor
mov
cld
pop
lret
or
adc
clc
add
push
pushf
jmp
cltd
xor
inc
in
aam
bnd
lods
shll
jmp
cmp
mov
mov
std
inc
mov
cwtl
pop
mov
fidivs
aad
sub
pop
or
pop
push
xchg
mulb
cmp
pop
dec
xor
push
ds
cs
push
mov
inc
test
pop
ss
and
mov
in
add
cld
outsb
pop
fisttpll
das
les
xchg
jo
lods
sub
jbe
mov
xor
in
xor
scas
cli
push
sub
int
aas
lods
fldl
jmpw
or
sub
push
lods
in
in
mov
or
hlt
xchg
jne
jmp
add
inc
cmp
ja
adc
jl
out
cmp
lods
dec
mull
mov
popa
mov
adcb
cltd
inc
push
inc
mov
adc
xor
inc
push
jecxz
and
cs
sub
fildll
int
cmp
jecxz
cli
lods
andl
rcr
call
bound
and
dec
sub
add
test
test
dec
add
dec
cltd
call
pop
into
repnz
les
orl
lcall
fwait
jae
movsb
mov
adc
scas
orb
add
push
mov
cli
pop
cmp
imul
loop
add
in
repz
lock
jl
scas
inc
hlt
lds
mov
jno
stos
fnstenv
pop
std
mov
jae
dec
push
or
sbb
and
lret
and
adc
push
jle
mull
roll
add
ds
sub
lds
ljmp
xlat
dec
jno
jmp
scas
adc
xlat
test
sub
sbb
ret
fisubl
cmp
shll
sub
xlat
loopne
sahf
pop
cs
push
daa
mov
pushf
mov
xchg
jne
mov
stos
fadd
jno
pop
pop
dec
cld
scas
pop
add
pop
xor
aad
mov
call
popa
sbb
dec
push
clc
cmc
cwtl
stos
scas
lahf
psadbw
out
inc
movb
addl
jb
inc
push
and
clc
xor
pop
fbld
cmpl
pop
pop
jge
mov
push
mov
pop
add
rclb
ret
add
sbb
fwait
xchg
mov
xor
adc
in
les
xchg
mov
jns
add
shl
jbe
xor
jne
jno
mov
pop
mov
int3
xchg
lock
mov
sub
daa
icebp
or
lret
cli
scas
aam
pop
out
cmp
lods
push
mov
adc
int3
push
mov
xchg
lods
jp
cmp
mov
jge
cmp
cmp
jb
shlb
cmp
push
std
testl
or
mov
inc
push
aad
or
out
cmp
inc
add
cmpl
inc
cmpsl
ja
cmp
mov
repz
cli
xchg
ljmp
or
inc
jnp
sub
push
or
cmpsl
in
mov
mov
xchg
test
mov
cmp
loopne
aaa
jb
nop
in
and
mov
test
es
xchg
call
gs
jnp
push
negl
adc
sbb
add
adcl
fimuls
out
cmp
roll
jge
add
stos
and
and
sub
scas
push
jns
icebp
fldl
scas
and
jge
mov
sbb
jl
push
pop
pop
jnp
in
push
add
mov
adc
xchg
bound
pop
ret
mov
dec
sbb
cltd
xchg
xchg
mov
rorb
orl
ds
lcall
pop
jmp
lock
cmp
xor
push
cmp
xchg
insb
xchg
add
sub
andl
psllq
dec
mov
shll
fists
mov
stos
int3
xor
sub
push
xorb
loopne
cmpsb
inc
jl
mov
jmp
out
sub
in
ljmp
fiaddl
xchg
mov
shrb
cmp
adc
push
je
mov
xchg
ds
xor
pop
or
jmp
stc
test
std
mov
push
xchg
mov
js
xor
cs
push
sti
jecxz
mov
aaa
mov
mov
cwtl
dec
cltd
xor
mov
pusha
push
dec
pop
in
addr16
test
mov
imul
mov
jb
iret
jae
lods
dec
sar
jg
mov
dec
lea
push
test
pop
scas
js
movsb
out
ss
stc
xchg
xor
adc
scas
and
cmp
sbb
push
sbb
aas
mov
cmp
xchg
lds
lret
mov
xor
dec
sbb
les
rcrl
bound
icebp
stos
sub
popa
lea
lock
jle
fbld
loop
pushf
sbb
xlat
sub
repnz
lods
xlat
push
pop
push
fwait
or
outsl
mov
lods
sub
pop
xlat
inc
xlat
push
fmull
xor
and
mov
and
popf
lahf
and
sti
inc
and
out
cmp
les
mov
adc
pop
xchg
ss
adc
ds
ret
cmp
dec
jecxz
cltd
and
das
cltd
inc
pop
hlt
pop
aas
loop
mov
mov
push
insl
cmpb
mov
mov
sbb
dec
adc
or
xor
sbb
mov
adc
sub
fstl
adc
xchg
xor
cltd
inc
test
mov
mov
dec
push
dec
stc
aas
mov
test
mov
cmpsb
mov
push
sbb
xor
cld
push
and
dec
dec
pop
cmpsl
imul
int
fiaddl
mov
test
test
jo
test
je
into
dec
into
mov
repnz
fisubrl
dec
daa
pop
popa
adc
mov
xchg
in
ret
inc
xchg
bound
test
cmpsl
or
sub
fwait
lahf
mov
xchg
repz
jle
bound
loope
cmp
lahf
addr16
adc
inc
mov
or
pop
in
fisttpll
push
roll
int3
cmp
ret
arpl
push
negb
push
aaa
lods
cmp
out
cmp
mov
add
and
cmp
fistpll
rclb
add
outsl
push
jb
or
clc
sbb
push
test
mov
test
es
pushf
call
repz
ret
popf
pop
test
data16
sarl
loopne
jo
mov
xor
sub
insb
push
nop
icebp
mov
pop
fmull
jge
mov
pop
cmpsl
outsl
add
insl
adcb
rcrb
mov
stos
and
mov
mov
mov
sbb
sub
pop
ljmp
sub
in
lcall
dec
leave
mov
jae
add
idivb
and
add
cli
insl
bound
aam
jo
add
movsb
xchg
sbb
cmp
inc
adc
jnp
sbb
adc
jbe
aad
daa
xchg
icebp
mov
mov
into
cs
mov
adc
pop
push
or
jge
imul
pushf
ss
in
or
or
pop
mov
cli
hlt
mov
mov
cmpsb
mov
or
sbb
mov
shlb
inc
add
add
fsubs
stc
in
stc
adc
adc
pushf
or
jbe
add
or
sub
and
dec
mov
rorb
jb
push
and
cmp
mov
mov
cwtl
ret
push
cmpl
arpl
orb
xor
jns
pop
popa
add
stc
ret
out
lret
daa
loop
sub
cmp
ret
sahf
je
push
pop
jo
je
clc
out
mov
sarb
enter
rcll
adc
in
inc
or
xchg
orb
fisubrl
repnz
xor
adc
pop
xor
jnp
clc
and
cmp
call
cmp
inc
adc
jp
dec
sbb
enter
add
fstpl
adc
cld
pop
cltd
insb
outsb
dec
jbe
hlt
and
mov
cmpsl
fs
and
bound
rol
imulb
fstpl
gs
aas
je
aas
popf
mov
popa
jns
aam
xor
xchg
rorl
mov
fsubr
sub
xchg
es
test
clc
push
mov
mov
sbb
aam
cs
test
das
mull
mov
orb
and
cmp
mov
fsubrl
out
cld
daa
and
xchg
aaa
cld
push
mov
add
mov
adc
mull
pop
push
icebp
jnp
ljmp
movsb
cmc
enter
lret
and
or
cmpsb
mov
test
ret
push
in
pushf
jo
cmp
adc
and
ret
in
jl
ret
mov
imul
lcall
jns
jecxz
insb
jno
jnp
xchg
and
es
into
cmp
js
jl
push
mov
in
imul
pop
movb
ret
xor
sbb
int
mov
in
lock
xor
push
inc
mov
loopne
lock
jle
xchg
sbb
cmp
jle
mov
incl
mov
adc
fcmovnbe
mov
cmp
jne
fistps
cld
mov
test
jae
cld
adc
sub
movsb
sub
repnz
cwtl
repz
cmp
inc
test
scas
call
xor
push
jmp
loopne
lret
cmp
cltd
sub
test
inc
dec
mov
mov
lahf
mov
leave
loope
and
mov
push
leave
mov
test
cmp
aaa
mov
and
lcall
and
repnz
cmc
insl
dec
xchg
jecxz
and
push
ficomps
fnsave
lahf
fs
lcall
lahf
enter
push
mov
cmp
test
divb
mov
adc
lods
iret
rcrl
dec
notl
and
clc
sbb
mov
pushf
gs
dec
xchg
mov
rclb
ljmp
outsl
or
test
and
sbb
in
faddl
mov
aaa
jno
jbe
mov
and
inc
adc
les
adc
arpl
push
movsb
lret
leave
and
imul
mov
cwtl
gs
fndisi(8087
hlt
mov
shll
xor
negb
add
jge
int3
aam
sub
jle
xor
or
inc
sub
add
adcb
int3
adc
stc
inc
and
jl
inc
and
or
stc
rcll
inc
add
icebp
pop
out
xor
pop
mov
les
in
ljmp
push
adc
mov
push
pop
clc
sbb
test
xchg
sbb
popa
movsb
fcoms
mov
cmp
in
jne
add
mov
std
icebp
jns
stos
shrl
pop
dec
push
addr16
mov
sub
push
push
mov
fstpt
dec
loope
daa
test
cwtl
popa
push
mov
fdivs
cmp
sub
pop
jne
pop
jae
cli
add
push
inc
mov
dec
pushf
leave
or
jp
shl
adc
in
mov
lods
inc
rorl
lds
aas
pop
ret
movsl
sub
dec
popa
add
or
sub
push
repz
cmp
add
adc
sbb
rclb
loop
sbb
js
ret
pop
cmpb
mov
addl
es
xor
sub
arpl
mov
mov
sub
cli
cli
cmp
xor
mov
xchg
inc
adc
add
aam
dec
pop
mov
aad
insb
clc
bound
mov
leave
aas
js
add
test
xor
add
sbb
and
iret
loopne
sbb
mov
or
adc
cmp
push
xchg
pop
or
mov
cmpsb
cmc
jb
xchg
lea
jg
mov
inc
in
push
imul
jl
dec
adc
gs
pop
adc
xor
xor
pusha
xchg
cmp
fs
xor
mov
cld
stc
lods
adc
add
cmp
dec
movsl
sub
dec
inc
push
aaa
lods
and
dec
sbb
xchg
stos
push
aam
adc
jne
mov
rcrl
cmpb
add
jno
or
ret
mov
arpl
jb
jl
rcll
adc
pushf
jo
xor
insb
out
and
jecxz
and
adc
and
cmpsl
sbb
fs
lock
mov
in
jbe
adc
call
xor
sbb
ret
frstor
mov
mov
sahf
nop
jno
loopne
adc
and
inc
inc
movsl
pop
out
mov
pop
push
lret
mov
adc
test
test
cmpsb
repz
leave
sbb
scas
out
mov
mov
pop
scas
hlt
cmp
je
push
or
sbb
arpl
dec
sub
cmp
pop
cmc
push
or
cs
dec
leave
js
insl
inc
push
stos
lds
xchg
sub
jmp
lret
cmp
mov
adc
cmp
jo
fs
test
pop
cmp
cli
mov
push
pushf
mov
xor
pop
out
push
mov
or
mov
cli
push
ljmp
adc
out
repz
adc
adc
adc
sbb
aad
loop
adc
xchg
rol
xor
push
push
mov
aas
xlat
js
mov
xor
fwait
clc
mov
pop
fwait
je
mov
rorl
cmp
jns
xchg
ficoms
mov
pop
les
shrb
cld
and
mov
cmpsl
lods
xor
test
add
mov
sbb
push
pop
insb
outsl
dec
pop
lods
sbb
aam
xchg
and
pusha
imul
sbbb
sarl
inc
sub
mov
in
sbb
mov
cmp
je
fsubrp
aas
pop
out
out
jnp
ds
xor
fcomps
arpl
lret
insl
xor
out
push
pop
push
cltd
pop
nop
popf
jl
std
cmp
or
pop
xor
pop
push
mov
inc
mov
dec
push
out
pop
in
or
fiadds
sub
ja
inc
jae
add
sub
jg
pop
repnz
adc
sti
and
data16
iret
pop
pop
iret
push
inc
sub
je
aad
arpl
cltd
insl
adc
bound
and
ss
xchg
dec
cmp
stos
aas
mov
pop
cli
xchg
out
cmp
add
add
push
pushf
add
in
mov
cld
jle
pop
add
cmpsb
xchg
fmull
mov
mov
mov
cli
xchg
xchg
sub
in
ss
cmp
repnz
imul
mov
int3
mov
shlb
xchg
add
or
jne
dec
dec
pusha
mov
mov
push
mov
stos
mov
mov
enter
js
aam
cmpsl
jb
das
pop
call
push
push
jg
mov
cmp
push
jmp
dec
dec
mov
inc
push
push
push
mov
jmp
inc
mov
idivl
loopne
imul
rcr
icebp
inc
scas
aaa
imul
idivb
into
push
adc
xchg
xor
fcomps
cltd
inc
mov
aam
fdivs
xor
fldl
lcall
sbb
jle
xor
iret
cmc
adc
test
mov
repnz
out
dec
and
mov
icebp
jge
popa
dec
in
mov
adc
xor
fiadds
xchg
and
jge
enter
in
push
mov
dec
in
cltd
inc
gs
rcrl
pop
mov
pop
xor
sbb
out
jae
popa
fdivl
cltd
lahf
xchg
mov
rcr
add
decb
enter
jnp
xchg
dec
adc
mov
xor
loopne
adc
decb
xor
imul
movsl
mov
es
jae
jp
inc
es
jnp
es
jge
aad
mov
cmpsb
push
inc
sub
dec
push
imul
xchg
repnz
cmp
loop
popf
es
cwtl
in
mov
lock
sbb
sahf
nop
popf
dec
ljmp
or
inc
jge
dec
repz
sub
mov
rol
mov
jbe
mov
fsubrs
sbb
inc
and
sub
push
lahf
mov
jmp
add
xchg
pop
or
inc
mov
mov
enter
pop
pop
sub
mov
xchg
sahf
out
mov
dec
aaa
mov
insl
xchg
or
or
adc
dec
cmp
std
dec
xlat
sub
inc
push
inc
xchg
addr16
mov
mov
ss
pop
stos
out
rcl
sub
xchg
mov
add
mov
push
cmp
icebp
pop
xor
inc
push
xor
sbb
cli
and
pusha
in
repz
loopne
shrl
shlb
push
ret
jge
xor
dec
and
xchg
cmpsb
mov
sub
movsl
scas
xchg
shr
repnz
push
fcompl
pop
sub
push
es
or
push
sti
xor
sub
push
imulb
push
fs
dec
jecxz
nop
clts
pop
daa
stc
xchg
adc
jns
or
lds
lret
mov
sarl
fcoms
add
pop
cmp
mov
jne
cmp
or
adc
out
xchg
das
push
dec
xlat
mov
in
push
fisubrs
mov
mov
jb
or
std
pusha
xchg
xor
xor
cltd
mov
repnz
aas
cmp
push
adc
jne
and
xor
imul
jnp
lods
orb
push
icebp
pushf
xchg
ret
outsl
addr16
lds
popf
adc
mov
dec
repnz
iret
push
or
in
int
adc
in
push
push
stc
mov
jl
aas
das
sahf
mov
mov
jl
clc
inc
mov
loopne
mov
nop
es
add
mov
push
xchg
hlt
ss
sbb
push
xchg
mov
pop
cltd
nop
jmp
xchg
xor
mov
fisubl
dec
orb
jg
pop
repnz
popa
cmp
dec
and
fcomps
dec
mov
pop
data16
ret
scas
gs
out
push
in
add
mov
rorl
addb
inc
mov
dec
jo
push
push
bound
pop
pop
cltd
mov
arpl
sti
add
int3
jecxz
call
mov
jne
les
pop
adc
push
sbb
fld1
jle
stos
arpl
xlat
inc
mov
push
push
mov
cmpsb
mov
repz
mov
xchg
cmc
mov
orl
dec
xor
aaa
sbb
fnstsw
push
fwait
ja
and
pop
jecxz
lsl
sub
in
stos
movsl
push
mov
and
movsb
pushf
je
pop
jmp
in
addr16
xlat
lcall
imul
lcall
xchg
scas
mov
dec
mov
jnp
cltd
loop
jns
mov
out
inc
addr16
dec
mov
lcall
sbb
mov
into
push
out
sub
dec
push
sub
pop
lock
scas
dec
push
adc
in
leave
mov
sbb
xor
jp
and
inc
daa
and
pop
ficoml
leave
xor
add
out
pushf
in
jecxz
je
inc
mov
fdivrs
lret
cld
mov
push
cs
jnp
rorb
fstl
push
mov
pop
mov
and
jo
push
int3
jns
dec
or
mov
scas
and
mov
xor
cltd
jo
leave
sarb
in
sbb
xchg
sub
movsl
das
cmpsl
iret
mov
stos
jo
xor
push
popa
add
loopne
and
jns
and
sbb
mov
push
push
mov
push
pop
fwait
jo
and
repz
jecxz
lcall
test
and
in
and
cmc
daa
cmp
jbe
rclb
aad
imul
pushf
loopne
imul
repz
loop
push
pop
inc
lock
mov
int
sbb
mov
mov
loopne
pop
fdivr
repz
jecxz
jns
mov
push
mov
add
adc
mov
dec
inc
insl
repnz
pop
dec
inc
jecxz
rsqrtps
xor
movsb
cmpsb
ja
sbb
mov
push
scas
lods
xchg
adc
inc
dec
inc
nop
test
gs
es
mov
lret
in
lods
inc
and
inc
adc
das
sbb
or
leave
pop
es
cs
fistpll
xchg
push
nop
pop
or
pop
mov
scas
das
inc
push
jae
cld
cmp
jb
push
adc
push
popf
and
cmpsl
shl
rcrl
in
or
flds
dec
stc
je
sbb
sbb
lock
movsl
xchg
push
jb
enter
loop
and
into
cwtl
mov
in
daa
flds
mov
dec
popa
lods
bound
mov
jmp
jnp
into
cmp
push
stos
faddp
iret
jno
pop
sub
ds
dec
cpuid
test
pushf
js
fs
mov
mov
lcall
dec
xchg
sub
rcll
jp
repnz
add
dec
cmc
nop
cltd
push
sub
jnp
mov
cltd
jecxz
cmp
enter
iret
inc
sub
adc
test
cli
aam
and
ret
fsubrs
cltd
dec
add
cld
mov
push
sub
mov
adc
xor
psubsb
fbld
icebp
jle
mov
popf
lret
cmc
mov
xor
xor
push
or
imul
cmp
xchg
insb
xor
repz
aam
push
nop
xor
cli
mov
orb
stos
shr
out
xor
adc
mov
push
sub
test
enter
es
push
cmc
aas
mov
mov
and
mov
inc
add
iret
hlt
lock
jecxz
xlat
insl
leave
lcall
add
mov
sbb
mov
inc
sub
test
stos
out
in
jmp
mov
loope
sub
mov
ret
bound
jle
cmpsl
push
shr
icebp
aam
sbb
sbb
sbb
mov
jne
repz
sbb
clc
adcb
fstps
cmp
stc
xor
hlt
sub
or
ljmp
xor
push
cli
adc
les
xor
sti
stc
call
mov
lock
out
fistl
pop
xchg
xor
xor
sub
xchg
mov
fcmovnbe
xor
push
sub
mov
or
pop
mov
cwtl
xor
jle
mov
mov
push
push
mov
test
je
xchg
mov
mov
dec
int3
call
mov
xchg
adc
sbb
scas
dec
dec
data16
test
push
pop
jg
or
push
mov
xor
push
insl
fwait
mull
mov
mov
mov
je
fs
ja
subb
rcr
mov
sbb
and
adc
ljmp
cwtl
fadds
push
insl
fs
lcall
fstps
rorl
push
jg
push
int
jno
and
call
mov
and
jb
test
in
test
sub
and
mov
mov
jp
add
movl
rcll
xchg
mov
lods
imul
jns
daa
sbb
cmpsl
fnsave
mov
or
mov
inc
inc
and
scas
stos
mov
lret
push
negb
sbb
lcall
jo
inc
jbe
icebp
push
pusha
push
rolb
sub
gs
js
repz
gs
inc
call
scas
repnz
or
lcall
pusha
dec
jl
jle
aaa
insb
in
mov
popf
add
sub
xchg
inc
movsl
cmp
adc
jl
fucomip
cmp
ja
aaa
dec
jp
adc
and
test
fyl2xp1
add
inc
sub
inc
jmp
mov
cmp
sub
sub
lods
cmp
in
pop
call
add
cmp
dec
inc
jg
mov
mov
xor
adcl
test
test
push
out
sbb
loop
xor
cmc
jle
mov
sub
iret
and
into
push
push
leave
jmp
cmpsl
leave
das
dec
sub
mov
adc
cmpsb
and
sti
data16
inc
sub
jae
lret
dec
testb
add
and
sbb
jae
ret
loope
pop
push
aad
shll
cmc
mov
jns
pop
int
inc
divl
fadd
jmp
pop
gs
andb
mov
adc
and
test
rclb
sbb
push
scas
inc
cwtl
repz
stos
imul
nop
in
iret
mov
pop
ficomps
sub
sbb
jo
xlat
pop
xor
aaa
adc
jmp
out
lea
es
push
aad
xchg
dec
mov
add
mov
adc
dec
aam
or
xchg
xchg
xlat
stos
icebp
xchg
fdivs
fcoml
mov
ret
xor
outsb
xchg
inc
mov
xchg
int
pop
cld
cmpsb
fcoms
dec
inc
outsl
fstpt
gs
rclb
inc
and
dec
inc
das
mov
jg
mov
adc
stos
int
and
outsl
pop
lods
xchg
fmulp
enter
lret
dec
data16
pop
pop
mov
or
out
sbb
push
scas
jecxz
rolb
stc
sbb
inc
leave
das
pusha
loopne
push
pop
mov
outsb
xchg
hlt
push
sbbl
mov
dec
rcrl
arpl
jle
stos
push
je
sete
arpl
rcrl
enter
jle
mov
cmpsb
into
xchg
fldl
jl
mov
test
mov
xlat
repnz
mov
cltd
and
mov
scas
jae
mov
in
add
aas
mov
aam
aaa
xchg
cmp
movsl
lahf
in
fldcw
je
jno
je
mov
and
lahf
ret
sbb
popa
mov
mov
xchg
add
xchg
xchg
icebp
push
mul
sbb
xchg
cltd
jne
stos
lret
lcall
inc
lods
xchg
xor
sbb
mov
bound
lods
fucom
pop
ds
pop
xor
push
and
andl
cmpb
xor
cwtl
jno
lahf
in
mov
dec
nop
pop
sbb
call
and
sub
push
xor
ljmp
inc
adcb
popa
mov
jne
cmp
inc
jg
outsb
xor
adc
jge
mov
jmp
ljmp
sbb
pop
dec
mov
sbb
adc
in
sarb
ss
addr16
sti
add
fdivrl
xchg
mov
fwait
cwtl
adc
xor
jo
fmuls
orl
adc
add
mov
es
xchg
jbe
and
inc
shlb
adc
add
imulb
adc
sub
inc
push
cmpsl
test
inc
sbb
adcb
mov
lea
stc
clc
mov
in
aaa
test
outsl
and
loop
dec
and
mov
repz
xorb
push
xor
push
pop
in
in
add
andl
mov
shrb
sub
fwait
rcrb
test
inc
and
into
mov
xor
jo
int
dec
cwtl
xchg
js
cmc
lret
inc
or
push
jle
popa
mov
mov
mov
rorl
ja
lcall
and
push
dec
xlat
cli
dec
add
push
add
inc
sbb
movntq
movsl
fdivl
dec
lahf
cmp
xchg
sbb
push
mov
or
out
fcmovnbe
pop
ljmp
test
mov
inc
adc
lcall
xchg
out
stc
inc
in
int
pop
and
inc
inc
insb
xor
rorb
stc
enter
mov
movaps
xor
or
mov
pop
lods
pop
mov
pop
sti
inc
mov
les
idiv
loopne
movl
add
lods
test
bound
jle
ljmp
sbb
adc
sbb
insb
shr
inc
lods
iret
pop
or
adc
idivl
notl
or
add
mov
xor
popf
lea
iret
sti
mov
cmp
or
push
sub
and
sbb
add
clc
in
fs
push
inc
lcall
into
les
mov
xchg
pop
dec
inc
rclb
pop
cmp
mov
or
aam
push
enter
es
fists
clc
and
and
add
xchg
movsb
repz
lods
mov
popf
jecxz
int
loop
mov
cld
shrl
jnp
into
dec
js
sbb
push
daa
dec
rcrl
das
lods
out
mov
std
mov
imul
idiv
mov
dec
cmp
pop
into
pop
loope
arpl
outsl
lds
ss
adc
cmpl
mov
push
or
scas
out
sub
inc
outsl
lods
jne
xchg
jbe
jg
xchg
add
dec
icebp
mov
jnp
pusha
cmp
inc
mov
mov
dec
shrl
cmp
rcr
pop
mov
shlb
jmp
inc
jb
gs
mov
or
in
in
incb
mov
inc
in
roll
add
lret
iret
push
xchg
lods
dec
dec
inc
mov
lock
dec
mov
and
xor
in
push
ds
lea
cmpsl
cmp
ss
add
adc
lods
sti
or
adc
inc
iret
adc
jl
out
and
popa
cwtl
arpl
pop
decl
jno
fstpt
or
jl
sub
jg
push
dec
add
mov
fs
movsb
xor
orb
add
pushf
ss
fwait
sbb
rclb
insl
or
adc
mov
movsl
xchg
repz
mov
sbb
or
push
sbb
leave
not
and
sbb
nop
add
pusha
ds
repnz
cltd
js
add
icebp
cmpsl
dec
pop
test
or
push
mov
and
mov
sarb
xor
das
xchg
and
sbb
fwait
jle
mov
mov
imul
roll
dec
iret
xchg
and
lcall
pusha
movsl
lods
pop
xor
sub
push
rorl
push
jge
push
divb
push
imul
mov
and
fsts
dec
ret
push
dec
imul
cld
jecxz
repnz
ljmp
data16
sbb
adc
mov
mov
xchg
gs
push
data16
lahf
mov
pop
xchg
loop
fildll
inc
pushf
pop
mov
and
cltd
aam
pop
inc
push
push
aaa
xchg
sub
fsubrs
adc
xlat
test
arpl
iret
rclb
inc
int
test
fistpll
mov
js
stos
stos
cmpsl
adc
xchg
lcall
orb
inc
jl
mov
cmpsb
inc
jne
jmp
mov
pusha
or
stc
ds
pop
xchg
and
pop
outsb
xchg
lock
cwtl
das
into
and
cmp
sahf
pushf
mov
popa
push
gs
xor
jb
jbe
and
imul
push
dec
lock
mov
push
and
pop
cmp
ret
push
bound
movsl
sbb
mov
mov
jmp
adc
cmpsb
outsb
mov
jp
loope
or
scas
js
push
fmul
push
fildl
xchg
pop
xchg
sub
push
fdivl
xchg
gs
into
stos
mov
or
jno
sub
imul
fisttps
mov
outsl
xor
ret
mov
imul
inc
jnp
mov
xchg
sub
insl
xor
popa
pop
push
bswap
jb
lcall
das
add
sbb
ret
jns
mov
xor
aad
jo
push
add
sub
and
push
les
scas
shr
ret
cwtl
mov
xchg
pusha
out
icebp
sub
jo
rclb
call
mov
call
mov
scas
dec
fiaddl
fucomi
popa
or
jmp
dec
xchg
or
xor
jp
int
and
add
repnz
cmc
sub
es
or
xor
in
inc
in
push
xchg
test
pop
loope
rcrl
inc
sbb
out
sarb
push
pop
jns
dec
push
push
stos
stc
sbb
sub
fadd
aaa
cli
xor
iret
xchg
out
inc
test
jb
mov
sbb
cmp
xchg
pop
sbb
aam
cmp
xchg
inc
xlat
cli
sub
ficoml
mov
xor
mov
rorl
ds
in
jns
dec
adc
cwtl
push
loop
xchg
jnp
add
adc
testl
push
sub
je
inc
insb
dec
pusha
xor
jne
mov
leave
cld
out
jl
cwtl
sar
mov
dec
sub
mov
sbb
mov
jnp
mov
into
popf
or
leave
add
leave
jg
ficompl
sub
jo
fmul
adc
lock
and
lods
xor
ds
pop
pop
mov
cmp
cs
cmp
lods
sbb
push
push
inc
lret
adc
cli
sub
or
stos
pop
ljmp
jge
adc
sub
stos
adc
lret
test
int
mov
out
stc
cmpsb
mov
ds
xlat
inc
sub
nop
xor
data16
out
out
inc
lahf
mov
jecxz
push
cmpsl
clc
pop
pop
sbb
push
cmpsb
int3
mov
lret
cmp
out
mov
jno
and
pop
lcall
decb
shlb
inc
add
dec
inc
inc
xlat
call
ror
daa
adc
jb
jmp
sub
pop
or
jl
rolb
sub
xor
and
add
inc
cli
inc
imul
cmp
stos
dec
mov
sub
sbb
cwtl
lds
or
adc
push
xchg
push
add
jge
adc
xchg
mov
fadds
mov
add
xchg
jmp
sbb
scas
sub
pop
pop
mov
xor
cs
ficompl
add
loop
inc
cmp
add
or
lahf
js
dec
popa
sub
packsswb
fdivr
and
push
aam
dec
or
cld
fidivrs
jle
add
xor
sub
test
sbb
repz
or
out
fisubl
inc
xchg
pop
jge
fidivrl
int3
sub
xor
pusha
daa
cwtl
jp
jnp
lods
pop
insw
dec
inc
push
repz
rclb
sahf
out
hlt
xor
out
cmp
outsb
xchg
sub
mov
adc
xchg
xchg
icebp
insl
inc
enter
cld
or
dec
add
call
sbb
jg
hlt
cmpsb
xor
mov
lock
xchg
sub
addr16
mov
je
pop
repnz
ja
dec
jbe
mov
xchg
lret
fs
cltd
jbe
or
jg
pusha
sti
pop
out
inc
daa
adcl
aas
sub
mov
cwtl
adc
adc
frstor
fisttps
out
inc
in
mov
lea
xor
scas
mov
popa
cmc
pusha
ror
jno
out
fistpl
xor
mov
clc
addb
mov
dec
fwait
jb
sbb
sub
jmp
pop
insb
decb
xchg
notl
enter
lock
jnp
inc
lock
mov
ret
std
sbb
int
call
xor
push
in
xor
fwait
xor
dec
adc
dec
mov
mov
int
into
fists
pop
je
dec
shl
xor
push
data16
sbb
popa
jae
icebp
dec
fwait
inc
fistpl
rcll
imul
js
in
daa
dec
rolb
scas
jmp
cmc
hlt
push
fcmovnu
int
icebp
cwtl
das
or
mov
cmp
jle
push
push
jmp
or
sub
mov
or
out
lds
sub
movhlps
test
dec
and
movsl
aaa
jle
stc
ss
data16
sbb
cmp
call
mov
jns
insl
in
clc
jecxz
in
push
daa
adc
addb
es
sbb
aaa
dec
or
add
xor
cmp
dec
fdivrl
and
rclb
mov
push
jbe
mov
jns
in
push
push
int3
inc
cs
lock
fneni(8087
xchg
xchg
adc
inc
fldcw
fimuls
jno
inc
mov
mov
or
adc
jae
cld
js
or
xlat
lds
fimull
loop
mov
lds
into
xchg
or
jg
fisttps
or
mov
mov
imul
icebp
mov
sarb
add
push
lea
cmpsl
aas
lahf
mov
push
decl
push
mov
in
fwait
pop
jb
jg
stc
scas
sub
mov
mov
cmp
sarl
jge
sbb
jp
fidivl
inc
cmp
lods
data16
shll
mov
cltd
ljmp
mov
jle
dec
jno
push
lret
or
test
js
out
push
add
int
rcll
dec
dec
and
xchg
fildll
out
es
insb
jmp
jge
ljmp
ret
mov
mov
sbb
std
addr16
shl
sbbl
test
xchg
dec
ror
cmp
cmp
push
xor
xor
mov
push
je
je
sbb
movsb
movsb
jno
and
and
jmp
mov
jo
fimuls
loop
xchg
add
jo
push
mov
jae
out
mov
cmpsl
jb
lds
rcrl
sub
je
add
test
xor
pop
adc
fwait
or
add
xchg
cli
stc
fcoml
mov
lock
movsl
mov
cmpsb
jbe
cmp
sub
inc
decl
ljmp
adc
mov
lods
outsl
scas
mov
loopne
inc
push
push
sub
mov
cld
mov
clc
cmpb
jmp
and
cmpsl
adc
mov
cmp
stos
sar
shrl
and
ret
jl
inc
sbb
nop
mov
clc
stos
ss
int
pop
arpl
or
xchg
cmpsb
xor
mov
lods
jg
and
dec
inc
and
lods
leave
fsubl
out
push
pop
test
cmpsb
fsts
mov
sub
or
negb
xchg
mov
mov
dec
outsl
or
cmp
cmp
in
jo
inc
dec
mov
rolb
push
decl
fcmovnb
adc
pushf
sbb
sub
cmpsb
and
mov
pop
mov
jecxz
hlt
xor
pop
xchg
sbb
mov
addr16
adc
pop
das
or
mov
and
sti
and
adc
call
xchg
jle
adc
jnp
lret
lods
nop
sub
dec
fildll
fcmovu
out
lock
xor
pop
into
cmp
mull
ljmp
mov
aaa
xchg
dec
jae
jo
mov
call
imul
mov
cvttss2si
add
mov
out
pop
pop
xor
sub
lcall
cmp
xchg
push
enter
aam
adc
mov
ret
dec
test
jo
sbb
inc
pop
rclb
arpl
push
js
stc
out
mov
sarl
mov
lcall
dec
mov
xchg
out
jg
and
aad
sbb
adc
jae
subl
mov
and
add
ljmp
cltd
je
sbb
fstpl
cmp
sub
xchg
scas
mov
insl
aas
sub
popa
imul
and
adc
setle
je
xchg
pop
sbbb
xchg
mov
scas
clc
push
sbb
mov
mov
mov
pop
pop
push
repnz
jns
sbb
rcll
lret
jg
mov
add
jle
nop
cltd
jmp
and
adc
jg
mov
popa
movsb
xor
jne
jae
sarl
mov
leave
jne
cmp
cs
adc
xlat
lods
adc
jmp
in
andl
push
mov
push
lahf
mov
mov
nop
dec
and
and
cmp
xor
gs
jne
insl
enter
jmp
loop
xchg
leave
sub
push
mov
add
push
cwtl
or
lods
adc
push
in
jne
pop
fildll
ret
test
fisubrs
insl
sbb
inc
sarb
jno
push
nop
fisubs
pop
inc
out
cwtl
call
push
addr16
cmpb
pop
cmp
fsts
insb
mov
sbb
inc
cmp
leave
adc
mov
and
pop
fwait
sub
adc
nop
push
xchg
or
cmp
inc
jmp
scas
es
jne
addr16
lods
dec
fcompl
lods
loop
pop
pop
imulb
inc
ret
cmp
shrl
jle
inc
inc
jo
push
bound
scas
incb
es
mov
or
pop
jle
mov
xchg
jb
push
popf
inc
out
sbb
inc
daa
jmp
loope
and
insb
ja
adc
adc
fs
jne
scas
ja
pushf
or
push
sbb
cmc
add
mov
cmp
push
push
mov
pop
jb
aam
xor
bound
dec
sbb
outsb
shlb
lea
jmp
pop
int
cwtl
test
and
adc
call
rorb
add
add
xorb
in
loop
mov
jg
cmp
ret
fwait
mov
sar
sub
movsb
cld
xchg
add
push
pop
outsl
mov
and
adc
adc
lds
aad
cld
push
data16
fcmovne
pop
in
xlat
rcrl
inc
popf
cmp
test
pop
xchg
add
call
inc
push
adc
xchg
jo
enter
mov
fmul
aad
jae
pop
cmc
mov
and
adc
push
jns
pop
push
jno
in
sbb
call
cli
test
mov
repnz
mov
out
sbb
mov
pop
sti
pusha
dec
xchg
outsl
mov
pop
mov
mov
lcall
sahf
sub
or
je
popf
sub
sub
adc
and
xchg
testl
cmp
in
inc
cmp
mov
hlt
jns
rclb
jl
xor
out
mov
inc
inc
ficoml
push
lods
xchg
add
enter
test
int
cwtl
notl
insl
sahf
xchg
rcll
rcrb
dec
outsl
sbb
mov
mov
dec
arpl
xor
adc
mov
cmc
sahf
movsb
jle
imul
adc
int
jmp
xchg
sbb
test
shrb
push
jmp
in
inc
adc
imul
out
das
gs
scas
scas
push
adc
mov
iret
je
scas
mov
outsb
dec
sbb
lcall
cmpsl
sbb
call
sahf
and
cwtl
clc
and
test
fimuls
mov
jp
pushf
mov
cli
mov
cmp
xor
cmpsb
nop
cmpb
cmovg
inc
add
mov
hlt
pop
ret
repnz
aam
stos
push
pop
cli
mov
cmp
sub
test
ffree
lds
loop
fsub
jne
mov
xchg
out
jns
rcrb
ret
mov
mov
mov
sub
and
inc
aam
pop
mov
addr16
sub
pop
daa
outsb
aam
in
icebp
inc
mov
lea
or
xchg
pop
pop
mov
xchg
pop
xchg
inc
xor
mov
push
xor
loop
mov
mov
popf
test
pop
jg
mov
subb
ret
adc
inc
ret
mov
pusha
pop
out
mov
lcall
pop
ss
shll
test
xor
aam
dec
fidivl
repnz
push
inc
or
xchg
pusha
push
push
insl
imul
and
addr16
lds
js
add
movsb
sub
test
xor
dec
push
hlt
repz
mov
xchg
sub
inc
mov
pop
mov
shlb
inc
iret
iret
cmpsl
mov
pop
push
push
pop
bsf
mov
lret
mov
mov
push
add
and
loopne
adc
or
ret
ret
jo
xor
movsl
push
jne
das
pop
nop
ja
loope
cmpl
push
push
sti
push
mov
sbb
mov
test
ret
pop
inc
in
cmpl
or
ret
imul
addb
ret
xor
insl
and
outsb
dec
popf
fwait
cmp
out
enter
das
adc
sub
pop
pop
aaa
sbb
movsl
stos
outsl
aam
out
cmp
mov
cmp
mov
jl
leave
into
push
mov
or
mov
xor
cmp
xchg
int
dec
push
jnp
cmp
leave
cli
gs
insl
aaa
pop
test
pop
and
sub
xchg
sub
ds
mov
insl
jmp
mov
int3
fcomip
mov
stc
dec
mov
mov
nop
jmp
scas
in
adc
lcall
shlb
mov
push
outsb
les
inc
insl
scas
stos
hlt
ja
sahf
mov
adc
fsubrs
hlt
cmp
jl
sbb
xchg
notb
je
lods
mov
sahf
mov
push
mov
or
es
lods
cmp
push
adc
mov
fwait
xchg
push
call
pcmpeqd
dec
hlt
mov
jle
rorb
ja
add
outsl
aam
push
fidivrl
data16
pop
push
xor
ds
mov
repnz
jecxz
loop
cli
pcmpgtb
inc
inc
xchg
mov
aas
leave
xchg
jle
jle
fists
mov
inc
lret
leave
jmp
inc
or
hlt
sbb
mov
fs
inc
int3
aam
lret
ss
and
mov
inc
je
lahf
sub
movsb
jmp
fidivl
xlat
movsl
sub
or
adc
cmp
adcb
test
sbb
sahf
dec
icebp
inc
dec
stos
cmp
adcl
cmp
or
xor
imul
and
inc
inc
scas
in
jg
rol
jge
fs
insl
push
push
mov
cmp
fidivs
sub
push
rol
cwtl
pop
outsl
adc
mov
enter
mov
adc
or
mov
mov
cmp
mov
or
add
push
test
out
xchg
add
in
leave
mov
imul
ja
jl
push
outsb
adc
sahf
and
testl
mov
pop
xadd
test
dec
xchg
out
mov
std
lcall
sbb
or
outsb
xchg
int3
or
mov
mov
xor
cmc
pop
icebp
dec
shlb
xchg
mov
mov
or
cmp
or
mov
fbstp
jae
xchg
pop
nop
jns
lret
xchg
inc
inc
imul
outsl
andl
sbb
pop
sbb
cmc
xor
fwait
sub
filds
xchg
pop
or
add
shll
ja
pop
enter
xor
cmp
out
lods
cmp
add
movsl
lcall
push
mov
or
imul
decb
bound
xor
xor
or
pusha
inc
add
lods
push
pop
ret
or
inc
adc
mov
aad
cli
cmp
jle
cli
mov
cmpl
imul
xchg
jmp
jmp
mov
xchg
push
mov
inc
xchg
into
mov
sbb
push
and
inc
cmp
adc
imul
mov
ret
lods
pop
sti
rcl
add
mov
and
push
adc
cmpsb
lret
push
adc
pop
xchg
xchg
cli
sub
hlt
stos
in
mov
inc
fimull
sub
scas
pusha
cmp
dec
je
inc
fcmovne
pop
jle
loopne
repz
inc
lods
aaa
pop
inc
mov
xchg
cmp
iret
test
in
ljmp
push
mov
xor
lods
test
xlat
cmp
ljmp
xchg
jp
arpl
jp
es
lcall
add
jge
sub
jae
cltd
add
jge
fcoml
nop
mov
hlt
pop
inc
push
mov
jp
push
cwtl
dec
or
out
add
lods
sub
aas
push
popa
jbe
mov
xchg
jne
mov
dec
push
xchg
inc
or
adc
sub
cmp
mov
movsl
xor
ljmp
and
ficoml
pop
imul
or
mov
call
ss
pop
test
adcb
scas
sbb
fs
pop
idivb
gs
add
fisubrl
or
insl
add
xor
cmp
arpl
xor
sti
jecxz
mov
pop
add
xchg
add
and
inc
out
out
loope
out
jns
dec
sarl
jbe
mov
xor
mov
pop
mov
icebp
fsubl
out
jbe
and
cmpsb
xchg
pop
imul
iret
push
out
mov
mov
xchg
call
fs
rcl
outsb
or
cmp
loope
ja
adc
jmp
dec
addr16
call
pop
mov
jnp
aas
fcmove
pushf
jge
dec
mov
outsb
insl
xor
es
sarb
cmp
test
adc
inc
insl
and
sub
jl,pt
mov
sbb
add
mov
sub
add
imul
mov
push
mov
fsubrl
inc
and
int
jnp
ljmp
faddl
jo
dec
mov
ret
shrl
and
or
arpl
subl
sbb
add
cmp
xor
rcl
loopne
xchg
ds
shlb
loop
fcmovbe
jge
int
movsb
xor
pop
shrb
mov
jo
imul
std
ds
pusha
jnp
sub
pop
jge
mov
jl
push
sti
dec
lret
xchg
push
movsb
dec
lods
xor
ljmp
sbb
cmp
ud0
cmpsl
out
add
js
sub
mov
out
push
and
cmc
mov
xchg
roll
jmp
jg
xchg
dec
sbb
into
cwtl
lret
mov
in
dec
mov
mov
movsl
enter
mov
sbb
loope
aas
lret
notl
ja
je
popf
jp
aam
aas
cmp
daa
call
sub
mov
cmp
outsl
stos
loop
bound
xor
fidivs
sbb
mov
out
xchg
xchg
ss
mov
cld
or
mov
cli
pop
mov
sub
inc
cli
mov
cld
mov
sub
mov
fcomp
jbe
scas
mov
rep
sbb
shll
in
les
ret
pop
dec
loop
push
mov
push
push
es
lcall
push
int
push
cmp
int
jo
push
jl
int
cmp
dec
sbb
add
jno
inc
stc
push
hlt
sti
mov
sarl
ficoms
xor
enter
repz
or
jo
ror
push
fstpt
hlt
mov
gs
aam
out
adc
scas
adc
mov
jne
cmc
xchg
mov
in
outsl
stc
and
mov
fldt
push
xchg
sub
ret
arpl
mov
push
shll
mov
popa
and
stc
aas
and
fwait
cmp
ds
insl
push
cs
mov
mov
insl
lret
inc
or
lods
fistpll
mov
rclb
imull
pop
pop
xchg
cmp
sbb
mov
icebp
and
fstpl
test
les
adc
popa
mov
push
outsl
test
sbb
push
mov
cmp
mov
test
adcl
fxam
ljmp
mov
xchg
mov
push
and
mov
adc
int3
jl
mov
pop
xchg
pop
std
pop
shll
and
cmp
mov
mov
pop
dec
in
inc
loope
popa
test
cmc
fstpt
add
fcmovne
cmc
test
mov
add
int3
jns
lods
jg
imul
xorl
inc
or
insl
jge
call
stos
mov
push
cmpsl
mov
sub
imul
or
cmp
adc
xor
pop
mov
mov
and
sbb
adc
test
cltd
add
mov
test
subb
mov
dec
lcall
pop
mov
nop
add
push
fnstcw
xchg
sahf
adc
mov
mov
xchg
das
daa
mov
mov
adc
dec
lods
dec
lods
jecxz
xchg
pop
dec
inc
fcomip
lcall
sub
inc
inc
sub
sbb
and
fistl
mov
cld
xchg
fs
mov
out
fdivl
inc
leave
sarb
pop
imul
lret
out
jle
pop
sbb
sbb
fnsave
pop
out
add
mov
fmuls
cmp
icebp
xchg
in
cmp
mov
push
add
call
xchg
xchg
fsubr
push
scas
shrb
rcrb
jecxz
cmp
and
inc
adc
cmc
dec
push
in
and
jne
or
xorl
pop
and
lea
mov
and
jno
lahf
dec
or
jp
sahf
add
pop
sbb
inc
pop
push
xchg
iret
mov
outsb
aas
lods
and
arpl
mov
int3
jns
push
push
xchg
cs
push
mov
pop
mov
insl
jae
cld
popf
push
xor
out
test
cli
fdivl
lcall
cmp
jmp
mov
loope
jnp
daa
inc
call
aam
mov
sub
jnp
repz
fwait
pop
xor
sbb
jl
jb
push
mov
test
cmp
jge
pop
xchg
xor
pop
loop
inc
or
fdivl
das
xlat
mov
add
lcall
test
movsb
hlt
pop
mov
stos
es
xchg
nop
insl
mov
mov
jno
sar
adcb
sbb
ja
sub
push
jge
sti
jmp
loop
ret
sahf
sub
das
sbb
and
nop
sbb
out
das
jnp
je
ret
add
movsb
xor
leave
mov
aas
mov
jp
repnz
ret
xchg
sbb
xor
jo
xchg
bound
ficoms
gs
inc
sub
pusha
push
cmpsl
sub
sbb
lahf
lahf
mov
cmp
cmc
notb
push
aaa
xlat
cmpsl
mov
sub
in
and
lret
idivb
xchg
mov
fs
js
xchg
xorl
das
addb
jg
jne
lds
cmp
daa
add
test
xchg
sbb
shlb
xor
jg
mov
cltd
push
xor
fiaddl
stos
sbbb
jg
or
sub
add
imul
daa
sbb
xor
shrb
sub
mov
sarl
lock
jge
mov
sub
cmpsb
pop
scas
xchg
add
xchg
push
dec
mov
mov
pop
add
jbe
into
or
cli
dec
ja
outsl
negb
popf
pusha
ss
jnp
mov
lret
inc
xchg
test
sub
sbb
xor
mov
mov
jp
aas
and
push
fwait
jmp
bts
je
fwait
xchg
aam
or
xchg
sub
push
fcoml
jne
sbb
scas
xchg
push
push
push
outsb
adc
xor
dec
lods
sbb
add
dec
pusha
jnp
jp
mov
and
std
sti
lcall
mov
mov
mov
adc
dec
mov
xchg
jmp
outsl
and
or
nop
insb
insb
stos
insb
divb
sbb
clc
fidivl
ljmp
popa
mov
inc
cmp
and
loopne
dec
std
repnz
mov
ret
ret
or
call
daa
imul
and
je
inc
iret
repnz
mov
sbb
adc
fadds
stc
xlat
xchg
fmul
push
popa
and
push
xchg
dec
xchg
into
sbb
fnstcw
sbb
inc
dec
xor
inc
mov
pop
sub
jecxz
fsts
or
pop
enter
call
xchg
pop
jbe
add
negl
adc
xor
aaa
inc
mov
or
dec
xor
mov
push
incb
data16
test
inc
jo
es
jnp
push
mov
mov
mov
add
dec
mov
dec
movsl
clc
or
mov
sahf
adc
aas
and
pop
push
xchg
test
pop
dec
test
arpl
jg
mov
inc
movsb
js
xor
out
roll
rol
xchg
sahf
test
lods
fnstenv
inc
gs
adc
adcl
jg
mov
addr16
push
dec
int3
popf
add
push
incb
rcll
sbb
xchg
inc
das
cs
in
pop
add
xchg
sbb
aam
xchg
jge
into
adc
data16
cmp
jp
dec
and
sub
fdiv
add
lea
mov
daa
imul
or
dec
test
test
aad
aam
rclb
xor
mov
pusha
mov
and
repnz
subl
daa
iret
xorb
stos
and
sbb
mov
push
xchg
insl
repnz
mov
jl
adc
or
lret
pop
add
test
daa
xor
or
bound
jno
testl
add
jg
xchg
xchg
or
xlat
lret
inc
add
mov
adc
lock
rclb
ljmp
xor
sti
insb
add
out
sub
in
push
and
fidivs
or
lret
fcoml
dec
mov
cld
aad
cmpsl
mov
push
dec
inc
call
push
jle
out
or
mov
stos
push
in
ret
mov
cli
xor
mov
imul
in
jge
jmp
dec
arpl
cmp
jp
jl
sbb
xlat
fidivs
imul
xor
sbb
nop
xlat
out
xor
leave
ret
shll
dec
lods
jg
sub
dec
or
mov
sub
sub
in
into
shrd
lcall
jno
jge
xchg
and
setb
and
and
add
lods
add
mov
fnstenv
stos
in
fs
fmuls
mov
cmpsb
adc
push
jecxz
loop
ret
std
mov
pop
xchg
jae
lock
mov
push
push
jae
fsubrl
xor
dec
add
push
or
mov
lods
inc
aas
dec
iret
lret
call
jae
cwtl
fistpl
pop
jp
cmpsl
mov
movsb
repz
pop
hlt
cld
in
push
sbbl
mov
adc
imul
sub
test
arpl
mov
imul
fbld
pop
aam
push
dec
push
sbb
or
jp
and
sbb
sbb
out
cmp
movsb
push
sbb
mov
xor
push
cwtl
mov
nop
sbb
sahf
sub
and
andl
sbb
rorb
mov
xlat
in
fidivrs
cmp
data16
ds
in
jecxz
std
pop
fiaddl
dec
in
sti
adc
cmp
rcll
cmpsl
sub
mov
subl
sbb
fisubs
iret
fwait
icebp
and
mov
mov
iret
mov
fisubrs
test
adc
sbb
iret
add
dec
imul
pop
push
test
push
xchg
into
jo
xor
jle
data16
inc
xchg
in
pop
xorb
cmp
test
mov
push
icebp
ds
loope
push
dec
xlat
mov
push
ds
mov
icebp
ds
xor
scas
lea
stc
push
sbb
aas
cmp
fmuls
ss
je
pop
push
aaa
push
mov
jno
cmp
dec
xor
or
mov
dec
inc
cmc
add
stos
shll
push
movsb
push
mov
ret
into
dec
lahf
enter
dec
jbe
adc
lahf
movsb
mov
or
mov
mov
scas
fsubrs
faddl
or
push
mov
fcoml
sub
pusha
xorl
test
xchg
jecxz
cmpb
push
or
lea
dec
int3
xchg
mov
fadds
cmp
addl
xchg
inc
pop
js
sub
or
ds
jmp
pop
sarl
dec
es
int3
sub
fs
lret
lock
mov
or
sub
rolb
dec
inc
or
pop
pop
mov
dec
loop
aaa
stos
pop
movsb
push
xor
roll
clc
les
mov
push
dec
arpl
js
or
or
jo
mov
push
hlt
or
push
mov
fdivrl
aaa
mov
push
xor
inc
adc
sub
cs
xchg
xor
js
xchg
xor
cmc
xchg
rclb
jecxz
in
clc
lea
loope
notb
mov
aad
pop
push
out
add
xchg
cld
in
mov
call
orl
ss
stos
les
mov
push
setle
mov
hlt
adcb
add
ljmp
sbb
fwait
popf
je
mov
dec
repnz
js
arpl
lods
cmp
dec
movsl
std
fstps
lds
repz
stc
mov
shld
or
mov
dec
sbb
push
jmp
mov
or
ss
mov
jl
ror
cmp
lock
xchg
push
add
fs
mov
inc
jle
cmp
in
into
andl
pop
cmp
lret
xchg
pop
xchg
aad
repz
mov
sarl
cs
fnstenv
lock
mov
jmp
popa
mov
jl
cmp
pop
cs
inc
ret
idivb
inc
jbe
repz
dec
stc
xor
adc
mov
clc
jns
push
mov
and
int3
xor
mov
int
rcrl
lods
imul
repnz
test
rorl
sbb
inc
push
sub
test
sbb
mov
imul
xchg
xor
adc
lret
mov
push
inc
shlb
dec
shll
mov
pop
xor
leave
xor
cmp
jbe
aam
dec
incl
pushf
fldenv
cmpsl
cld
ljmp
inc
mov
jg
xchg
and
lcall
push
fists
stos
jno
add
or
push
mov
loopne
rorl
and
or
js
adc
incl
mov
inc
fucomp
pop
push
repnz
rcll
loopne
sub
mov
insl
movsl
test
pop
push
inc
jns
mov
lret
adc
jnp
or
pop
arpl
in
jl
cwtl
push
add
sbbb
add
loopne
ret
push
push
cmp
subl
mov
imul
dec
dec
int3
mov
dec
mov
in
test
loop
mov
rorl
mov
pop
pminsw
outsl
insb
push
lcall
inc
xor
jmp
push
std
mov
push
xor
and
or
adc
adc
push
scas
das
push
cwtl
push
mov
pextrw
pop
ja
fs
push
mov
repnz
mov
cmp
or
pop
test
add
dec
dec
pop
xor
orl
dec
add
cmp
gs
insl
and
push
jnp
sbb
roll
cmp
cld
js
push
loope
inc
cmp
movsl
bound
sarl
dec
sbb
inc
sub
push
add
stos
addr16
mov
int3
adc
and
popa
jo
dec
stos
cmp
cwtl
mov
scas
and
in
sbb
sub
mov
adc
mov
xor
and
mov
inc
lods
dec
into
aam
jns
daa
and
into
adc
mov
pop
and
inc
add
rorb
mov
fnstenv
shr
mov
in
xchg
popf
xchg
mov
inc
inc
and
mov
cmp
loope
push
aaa
cltd
test
mov
jb
shl
cmp
pop
push
test
out
push
jp
mov
jecxz,pt
sti
xor
jge
mov
jmp
shlb
bound
les
mov
add
int
jns
or
mov
pop
sub
cmpsl
mov
mov
jb
imul
xchg
fldl2t
andnps
mov
mov
push
in
in
movsl
outsb
sbb
mov
fmul
xlat
popa
in
js
add
mov
xor
inc
test
pop
dec
fmull
push
mov
or
frstor
loope,pn
sbb
or
pop
sbb
xchg
nop
jg
sub
inc
clc
fsubrs
or
daa
lods
rcrb
xchg
fsts
pop
add
xor
stos
or
imul
cmp
insb
dec
mov
pop
xchg
inc
sarb
or
icebp
mov
jb
mov
outsl
pop
in
xchg
jecxz
in
pop
mov
cmp
xchg
aaa
or
jae
jae
pop
xchg
mov
xor
cwtl
add
or
xchg
pop
and
add
mov
sub
out
mov
and
or
mov
dec
js
sbb
cmovno
push
es
dec
scas
movsb
gs
push
sti
movsb
add
outsl
popf
jbe
outsb
add
jae
inc
sbb
fwait
jns
mov
lods
cmp
add
push
pop
scas
inc
stc
jl
out
xchg
pop
push
ja
lea
cmpsl
pop
addr16
push
jecxz
pop
shl
cwtl
mov
inc
std
add
pop
mov
pop
dec
and
pop
std
cmp
xchg
ss
nop
sbb
rolb
sbb
in
add
fucomp
shl
or
jp
cwtl
or
decb
push
movsb
int3
xchg
mov
and
inc
int3
pop
scas
or
notl
lret
inc
das
cli
inc
lret
and
push
push
adc
jecxz
ss
and
loop
cli
test
fsubp
subl
cs
sub
dec
rep
add
lahf
outsl
add
lea
stos
or
lret
cmp
and
pop
mov
inc
jg
pusha
jle
and
add
std
repnz
ror
cwtl
bound
outsl
sub
mov
xchg
pop
xchg
scas
jl
orl
xchg
dec
repnz
mov
shll
pop
push
push
aam
movsb
mov
pusha
add
mov
shll
and
loopne
jae,pt
push
mov
or
push
aad
or
cmp
outsl
or
stc
mov
inc
sbb
iret
jns
fcomps
xchg
xchg
fs
push
xchg
fs
cwtl
das
cltd
push
mov
dec
pusha
je
stos
sbb
dec
cmp
movsl
sbb
fwait
jb
push
mov
les
bound
push
xor
ds
add
rcrl
sbb
or
daa
aas
outsb
mov
push
imul
jl
and
adc
repnz
inc
pop
dec
lock
mov
mov
dec
data16
mov
inc
add
ds
dec
cmpsl
dec
mov
rclb
inc
sbb
aam
out
pop
sti
pop
cmp
mov
fcoms
clc
or
xlat
cmpb
jge
jne
jmp
mov
and
aam
fcmovnbe
add
dec
lds
push
xchg
rorl
lcall
mov
out
adc
shl
ljmp
out
and
movsl
scas
out
cmp
mov
xchg
mov
pop
sbb
push
into
mov
pop
adc
test
out
adc
inc
jno
push
jne
push
adc
jl
dec
xor
lret
rcrb
xor
push
lret
loope
stos
push
test
mov
jge
fs
adc
mov
cmp
in
aad
mov
mov
dec
cwtl
jns
ret
rcr
jae
popf
les
jmp
xor
nop
push
ret
cld
data16
leave
pop
pushf
leave
rcrl
cmp
cwtl
jbe
incl
addb
scas
xor
sbb
shll
lods
daa
add
in
das
orl
cmpsb
out
or
xchg
jg
inc
lods
pop
mov
pop
leave
xor
pusha
mov
cmp
cmp
fldl
pushf
pop
push
stc
mov
adc
adc
mov
test
in
mov
pop
shll
mov
sahf
jno
xchg
mov
adc
bound
lahf
arpl
js
xlat
mov
mov
ret
mov
es
imul
adc
imul
andl
mov
and
fcompl
dec
mov
pushf
in
cmpl
dec
mov
ret
sbb
xchg
jns
xor
xchg
dec
xchg
xor
xchg
pushf
into
mov
jp
push
movsb
mov
push
popa
mov
iret
push
cli
cld
loop
sahf
mov
sti
or
and
je
cld
daa
insb
xchg
leave
loop
sub
mov
mov
dec
sbb
inc
xorb
testb
jbe
clc
jae
push
add
shlb
fstpt
jl
std
add
add
cmp
dec
cmpsb
jno
movsb
je
pop
jl
and
scas
loop
or
sub
inc
inc
xchg
hlt
xchg
inc
ja
call
pop
mov
xchg
or
xchg
sbb
addr16
xchg
jo
jg
jnp
push
out
push
sbb
fs
stc
ljmp
out
push
fs
inc
std
mov
js
mov
icebp
out
jmp
pop
leave
std
outsl
and
inc
pushf
add
scas
ss
adc
xor
pushf
test
adc
test
dec
lods
movsb
and
jl
shlb
mov
aas
mov
adc
ja
nop
rcr
insl
popa
jns
pop
ds
jb
push
push
mov
jb
dec
push
and
pop
in
jle
xlat
outsl
sarb
jae
test
sub
jb
dec
push
adc
rorl
mov
push
insb
cmp
mov
fcompl
and
in
mov
jnp
aaa
fnstsw
add
cwtl
xor
add
cli
cld
jno
and
loopne
stos
sahf
lret
lahf
push
lods
bound
int3
js
dec
mov
sete
fldcw
mov
add
inc
mov
rcll
pop
shl
push
in
das
lcall
stc
xor
sbb
or
fldl
inc
jle
push
push
out
or
sub
sti
dec
gs
mov
push
mov
sub
out
test
bound
sbb
push
lods
cltd
addr16
ficomps
nop
and
in
cmp
mov
mov
sbb
pop
mov
jns
ret
push
pop
jl
or
int
cmp
por
sub
push
es
lds
jbe
ret
icebp
add
mov
push
clc
pop
sbb
std
sub
ja
push
imul
lock
or
inc
xchg
rol
pop
je
or
cmp
lahf
movsl
into
dec
mov
repz
push
dec
int3
cld
out
and
decl
inc
sahf
js
or
jecxz
jmp
jecxz
cwtl
and
jbe
lcall
clc
incl
mov
pop
xchg
adc
jle
insl
mov
arpl
ja
add
sub
fbstp
loope
push
add
lods
adc
repnz
cmc
jp
push
push
xchg
cmp
or
mov
cmp
push
cmpsb
xor
push
push
test
cmp
dec
sub
dec
push
inc
sbb
sar
inc
xor
cli
cmc
cmp
adc
and
push
mov
shrl
mov
inc
outsb
pop
cwtl
inc
daa
movb
mov
inc
cmp
sub
stos
nop
jg
in
sbb
jmp
sti
sub
or
push
adc
imul
jg
xchg
push
aaa
lock
adc
hlt
xorl
aas
out
imul
add
jns
test
jns
into
add
int3
add
sub
movsl
clc
pop
adcl
pushf
pop
movsb
xchg
sbb
mov
pop
cmpsb
test
and
shll
dec
rorl
jns
or
daa
call
test
aas
mov
fimuls
loope,pt
push
pop
inc
lahf
xchg
pop
dec
fs
pop
inc
push
insl
repnz
fldl
outsb
subb
lods
fs
fadds
icebp
call
and
xchg
lcall
mov
push
cmc
mov
push
addr16
addps
pop
sbb
inc
inc
cmp
scas
mov
lcall
js
ljmp
fisttpl
mov
mov
xchg
jg
jp
push
in
jp
imul
cmp
jg
pop
inc
add
inc
mov
mov
pop
pushf
outsl
aam
enter
aaa
mov
lahf
push
sbb
sbb
ljmp
negb
mov
rorl
js
push
jle
js
sub
sbb
shlb
test
jl
sti
outsl
mov
es
push
std
mov
xchg
jge
dec
adc
adc
lock
cmp
jno
in
dec
clc
int3
mov
loop
mov
jb
mov
fldt
std
daa
sahf
and
fists
pop
push
imul
mov
mov
mov
ret
add
push
add
ljmp
add
in
in
pop
or
loope
cs
cmp
in
push
sub
mov
sbb
out
sbb
shrl
jge
ss
ja
dec
repz
cwtl
ljmp
add
cmpl
pusha
das
pusha
iret
mov
sbb
jmp
repz
cmc
xor
lcall
rcll
or
dec
js
call
leave
test
iret
fisttpl
or
lahf
dec
mov
sub
shlb
loopne
xchg
mov
mov
icebp
lock
sub
stos
ja
xchg
mov
inc
mov
imul
and
fcos
das
mov
out
xor
lock
pusha
mov
or
aad
mov
int3
cs
sub
bound
push
mov
cmp
cli
daa
popa
in
imul
add
push
xchg
mov
sahf
xor
fwait
dec
pop
xchg
xchg
dec
xchg
or
fs
adc
mov
adc
pop
jg
jno
fcmovnb
das
sub
push
xchg
pusha
dec
out
call
int3
lods
test
sub
pusha
cld
or
xor
fildll
sub
pop
push
and
je
sbb
shrl
inc
into
movsl
adc
dec
pop
add
xor
adc
insb
and
xor
cmp
inc
enter
or
addr16
mov
stos
std
aas
mov
jg
or
jl
and
cmp
leavew
imul
int3
shll
adc
leave
xchg
das
pop
sahf
cmp
pop
fidivrs
rcl
popa
js
add
add
es
les
roll
and
shlb
push
or
aad
fildll
or
sub
or
testl
mov
jno
lods
xor
xchg
sub
outsl
sbb
test
lahf
or
sbb
cs
jle
repz
xchg
or
repz
inc
xchg
sub
pop
jge
ds
dec
mov
xor
sub
push
jns
ror
sar
dec
aaa
addr16
pop
mov
pop
in
adc
or
inc
mov
les
adc
fwait
add
out
pop
rclb
int3
and
inc
adc
loop
dec
sub
inc
in
sti
sub
movsl
jns
or
mov
ja
dec
mul
test
jle
notl
ret
jbe
cmp
shlb
inc
cld
jo
pusha
mov
push
xor
ja
jge
outsl
and
jne
dec
add
in
xlat
mov
and
jmp
sub
gs
mov
mov
adc
aam
jbe
es
movl
out
jp
mov
roll
inc
pop
cltd
pop
fs
aas
movsb
cmp
mov
push
dec
popf
mov
pop
out
jl
popf
jo
push
test
cmpl
adc
push
push
sbb
dec
lahf
push
xchg
and
jecxz
sub
push
push
add
xchg
pop
fucomip
popa
dec
mov
pop
movsb
inc
dec
inc
dec
cmp
outsl
sbb
mov
mov
aam
stos
or
aaa
rcrl
and
mov
aad
stc
mov
inc
jecxz
sbb
xchg
jmp
xchg
mov
aad
mov
dec
cld
jg
bound
aas
dec
dec
test
aad
mov
adc
dec
push
jmp
arpl
lcall
add
pop
pop
mov
push
lret
mov
adc
sub
inc
insl
dec
mov
add
xchg
loop
ss
push
push
das
sub
or
cli
mov
cs
xchg
xchg
jnp
fwait
js
sti
out
mov
cltd
lret
lahf
test
jle
xor
scas
xchg
ret
sub
fisubrl
mov
sub
sub
mov
arpl
dec
je
xchg
push
lret
xadd
outsl
loope
cmpsb
pushf
xchg
xlat
xor
cmpsb
adc
push
and
lock
insb
or
test
mov
mov
mov
pop
stc
push
dec
arpl
jno
or
jg
sarl
enter
lret
stos
in
in
loop
aam
popf
xchg
xchg
xchg
pushf
aas
ljmp
jg
test
fwait
cld
testb
adc
adc
pusha
ljmp
stos
xorb
stc
inc
test
aam
gs
adc
rcl
mov
fisubl
cltd
repnz
scas
std
cmp
cmp
loope
mov
jl
fdivrl
dec
aam
xor
mov
stos
push
jns
sbb
addr16
imul
cmp
pop
repnz
sbb
mov
rcl
adc
ficoml
inc
test
mov
xchg
gs
pop
ret
adc
pop
ret
mov
in
xchg
add
adc
stc
mov
leave
inc
fdivrl
add
enter
mov
pop
mov
adc
call
mov
imul
int
push
repnz
clc
aas
aaa
dec
xor
maxps
lret
aaa
into
xor
xchg
add
sub
dec
mov
xor
mov
xchg
add
arpl
decb
test
pop
mov
fs
data16
jecxz
int3
xchg
sbb
pop
sbb
or
mov
jle
ret
and
push
mov
mov
ljmp
xor
mov
xchg
and
fwait
push
lea
push
adc
push
jg
fcoml
in
fwait
mov
xor
movsl
adc
and
pop
fildll
out
cmc
int3
call
fmull
mov
inc
adc
inc
loope
adc
subl
mov
pop
movsb
mov
dec
mov
and
movsb
add
push
daa
andl
lods
adc
pop
jns
aaa
mov
pop
push
addr16
iret
push
add
gs
sbb
mov
filds
in
push
arpl
mov
jns
inc
adc
lods
pop
fidivl
lahf
mov
xchg
test
scas
test
sti
jmp
adc
sub
jo
imul
fprem
pop
mov
cwtl
rorb
aas
scas
pop
push
cs
das
pop
adc
mov
mov
sahf
jb
je
fiaddl
shll
xchg
or
xlat
pop
jecxz
xchg
push
std
int
push
adc
xchg
aam
sbb
std
jmp
add
pushf
cmp
push
xchg
insb
or
ret
aam
jmp
push
and
fs
std
mov
imul
adc
pushf
ds
pushf
aam
loope
sub
jmp
mov
lret
aad
adc
pop
cmp
and
xor
jb
pop
out
sbbb
mov
adc
rcll
xor
lock
xor
addb
or
mov
add
scas
hlt
movsl
add
dec
call
mov
shrb
insl
lea
jmp
popf
ss
jl
lret
jb
cmp
push
xchg
sub
lock
je
addl
pop
mov
or
cmp
movsl
add
cli
es
pop
gs
xchg
xor
cwtl
ds
xchg
mov
mov
mov
pop
mov
nop
sub
adc
rol
incl
repnz
imul
imul
jnp
imul
movsb
icebp
xor
cltd
loopne
out
out
out
push
and
sub
lret
enter
sarb
push
aam
fwait
in
adc
neg
in
pop
add
enter
mov
enter
pushl
or
mov
mov
cmp
es
jne
shll
sbb
xchg
bound
into
dec
push
or
jmp
inc
jne
dec
pushf
ss
add
jge
mov
jl
inc
xchg
add
stc
inc
cmp
jo
fmuls
cmp
or
mov
sub
mov
insb
ds
pushf
adcl
dec
cmc
sub
inc
sarb
outsl
push
cmp
adc
mov
inc
lret
or
adc
aam
jecxz
test
mov
inc
cmp
test
and
outsl
cmpsl
push
cmp
lcall
dec
dec
dec
add
pop
popf
test
jae
jp
push
in
add
rol
out
js
and
sbb
mov
in
sub
cmpsb
fsub
xlat
clc
pop
clc
imul
mov
xchg
add
add
out
dec
mov
loopne
xchg
jecxz
push
adc
roll
xor
mov
fstp
rcrb
lods
mov
test
mov
stos
pop
les
mov
and
hlt
movsl
mov
jnp
repnz
fistpl
sbb
movsb
lcall
cmpsl
fdivp
mov
jp
cmpsl
add
adc
hlt
test
and
jecxz
shll
or
daa
iret
sahf
fs
mov
inc
mov
inc
es
into
sub
sbb
or
mov
pop
pushf
es
jp
testb
mov
jne
scas
leave
shll
adcb
aaa
leave
adc
or
add
cwtl
xor
mov
lods
inc
mov
and
push
pop
cwtl
fxch
mov
mov
loopne
push
dec
inc
and
loope
adc
adc
imul
add
jg
and
sub
fwait
inc
mov
shlb
cmc
stc
sbb
shrl
dec
cmp
loopne
in
sub
notl
popf
adc
xor
lcall
mov
mov
jns
je
dec
mov
cmp
lock
jnp
inc
mov
outsl
add
sar
cli
add
pusha
fs
pop
pop
scas
push
es
or
and
insl
movsl
push
sub
movsb
sub
lret
popl
pop
scas
cltd
add
movsl
xor
mov
sahf
lock
jl
xor
sub
scas
inc
push
mov
sub
das
cmp
sub
pushf
push
ja
in
mov
push
xor
fmull
in
inc
adc
lods
mov
jge
in
mov
inc
cld
jbe
mov
nop
stos
adc
sub
out
outsb
push
lods
sub
push
xor
inc
in
jae
mov
cmc
ljmp
sub
frstor
in
cs
dec
dec
fdivrl
pop
add
sbb
xchg
dec
xchg
and
pop
leave
inc
mov
repz
loopw
xchg
xchg
lcall
or
push
pop
cmpsb
push
mov
iret
fmuls
scas
mov
enter
bound
lret
mov
mov
jb
mov
sub
repz
add
aas
pop
mov
popf
xor
push
test
jno
pop
mov
mov
push
jne
adc
push
jecxz
imull
sub
mov
pop
mov
test
pop
xchg
dec
bound
out
xlat
push
es
xchg
stc
mov
and
repnz
dec
adc
rcll
xor
pop
pop
rcrl
negl
int3
jmp
lcall
dec
fs
mov
jg
pop
movsl
test
fdivrs
inc
call
in
mov
loope
shll
xlat
mov
insb
fincstp
dec
jns
jp
out
fdivrl
jecxz
push
stos
adc
cld
cmp
js
xchg
inc
test
dec
test
scas
push
data16
sub
dec
cmpl
rcrb
outsl
in
mov
pop
imul
orb
ja
adc
scas
mov
adc
push
adc
sub
repnz
jnp
and
imul
dec
mov
mov
cmpsl
mov
les
pushf
in
add
and
sbb
inc
rclb
cmpsb
rolb
push
fidivl
imul
jae
xchg
sbb
mov
adc
dec
repnz
and
repnz
cmpsb
aas
and
stos
sub
fbstp
push
call
ret
pop
and
jnp
mov
sbb
sbb
fimull
mov
cmp
sarl
movsb
cmp
lock
cmpsl
cmp
jnp
mov
test
addb
pop
pop
inc
rdpmc
stos
mov
fmull
gs
xchg
mov
iret
jecxz
int
in
cmpsl
loop
and
xchg
push
stc
cmp
jno
lcall
cmp
xchg
fadd
pop
push
sub
ja
lods
out
fldt
xchg
iret
xor
or
pop
scas
mov
jae
lcall
add
pop
lods
popa
addr16
push
fdivrs
mov
add
pop
outsl
fsubr
je
inc
lcall
jle
inc
jmp
aam
pop
xchg
sub
jp,pn
sub
jns
xchg
lahf
jb
cmp
dec
and
dec
popa
cmpb
aas
lcall
loop
inc
xorl
jl
in
sarb
lds
ror
loope
adc
je
outsl
mov
in
int
pushf
dec
fnstsw
mov
pusha
cmp
rolb
add
push
dec
xchg
lock
hlt
sub
shr
cld
mov
fldcw
cli
pop
into
pop
mul
push
cmpsl
sub
jge
adc
mov
aam
jecxz
mov
outsb
sbb
js
xchg
aaa
aam
loopne
xor
cli
fidivrs
enter
loope
adc
mov
out
icebp
push
test
xor
gs
inc
cwtl
or
inc
mov
push
je
mov
cmp
xor
mov
pop
in
sahf
in
lret
loop
jno
cmp
shlb
incl
cld
jo
push
mov
aas
mov
imul
xor
imul
jns
inc
pop
pop
fucom
sub
pop
add
jp
jecxz
int3
jnp
mov
inc
testb
scas
mov
dec
test
mov
or
bound
ds
aam
pop
cmp
push
int3
int3
fiadds
sub
mov
add
sbb
lret
xor
in
in
cmc
sbb
dec
lock
cmp
add
lcall
fdivrs
int3
xor
lcall
sub
mov
dec
lea
mov
lock
mov
dec
add
mov
sti
mov
lret
scas
fdivs
jmp
push
imull
cs
or
mov
stc
pop
xor
js
addl
in
push
ds
cmp
fists
ss
mov
ds
dec
jno
inc
lahf
movsb
inc
testl
add
mov
dec
sbb
incl
nop
mov
xchg
pop
cmpsb
push
mov
das
adc
dec
dec
pop
loope
out
xor
jnp
pushf
sub
shlb
jne
dec
sbb
jg
gs
setge
or
popf
test
call
mov
dec
cmc
les
push
addr16
jp
mov
sahf
rorl
add
sbb
jne
jl
sub
jnp
mov
test
add
popf
test
cmp
lds
ret
push
xchg
lods
jl
mov
inc
test
and
and
rcr
xchg
in
xchg
mov
adc
in
lret
mov
xchg
testb
pop
lods
jae
or
cmpsb
xorl
or
mov
test
clc
fbstp
nop
inc
jecxz
and
mov
inc
add
out
jbe
mov
ret
jp
cmpsb
shrb
or
inc
inc
ja
push
push
mov
aas
fs
or
into
inc
dec
popf
inc
push
and
mov
mov
push
or
mov
dec
xlat
mov
repnz
sub
cmpb
cli
or
clc
mov
rorl
js
insb
jle
sahf
insb
jmp
xchg
cmpsl
movsl
pushf
test
pusha
mov
or
jo
repz
in
shr
mov
test
outsl
pop
in
jmp
mov
mov
clc
sar
add
adc
push
jl
lret
mov
pusha
adc
repz
xchg
push
test
test
push
push
push
out
imul
mov
inc
push
push
loopne
mov
jbe
ret
les
hlt
fidivs
lcall
movsl
and
in
out
notl
sahf
test
std
xchg
add
les
pop
das
ret
cmp
adc
jae
push
stc
lcall
inc
pop
fnsave
jge
sbb
xor
lret
insl
jae
xchg
or
movlps
call
push
push
subl
xlat
je
lock
jecxz
sahf
shrb
ljmp
push
leave
push
pop
push
popf
lds
inc
aam
bound
sarl
mov
int
jecxz
pop
dec
adc
jnp
sub
in
mov
fisubs
mov
iret
insl
pop
popa
andb
fabs
movsb
shrb
stc
scas
sbb
mov
or
test
cmp
dec
dec
mov
and
xor
stos
and
mov
push
ret
sahf
adc
xor
cld
sub
popa
insl
fstps
ss
jnp
pop
xor
gs
or
pop
xor
cmp
fs
aaa
sub
xor
cmpl
sub
shrl
mov
pop
mov
jmp
cmpsb
mov
scas
mov
rorl
sbb
xor
jb
mov
ror
mov
inc
inc
mov
push
sbb
mov
sub
push
and
cmp
lods
mov
push
iret
inc
sub
js
sti
lock
arpl
push
cmp
sub
stos
in
leave
mov
and
and
pop
ret
pushf
pop
and
cmp
ljmp
jo
inc
sub
mov
dec
jecxz
addb
int
inc
mov
test
out
mov
das
ret
into
mov
repnz
sbb
in
fstpt
mov
lods
fwait
inc
mov
and
or
ret
dec
pushf
cmp
and
movsb
das
test
sahf
imul
lods
push
rcrl
lods
outsl
jbe
jl
jo
mov
or
movsl
movsb
fwait
movsl
sub
jg
in
push
push
stos
dec
test
mov
lea
cmp
mov
fcom
xchg
dec
jl
inc
sub
cmp
lret
push
mov
jl
fs
lock
cmpsb
jb
repz
in
movsb
jmp
or
pop
imul
add
jle
jae
dec
hlt
jp
add
in
xchg
add
sub
or
jge
or
fildll
clc
mov
push
movsl
jns
dec
fstp
shrl
xor
rcrl
xchg
or
js
mov
pushf
enter
or
stos
test
or
fisttpl
mov
push
popa
jge
inc
fisttps
inc
dec
push
cld
arpl
and
jl
jae
dec
jmp
incb
mov
add
dec
ljmp
jb
scas
sub
std
or
mov
sub
jg
xor
in
pushf
in
sarb
dec
jp
mov
xchg
cltd
icebp
cmp
stc
subb
dec
enter
sbb
popf
loopne
clc
inc
aas
mov
loope
and
mov
test
push
test
hlt
fcmovne
add
xchg
jmp
pop
mov
jp
aam
movnti
pop
jp
mov
and
lds
outsb
jne
fistpl
pop
nop
dec
cmp
add
and
inc
lret
mov
push
stos
fiaddl
loope
cltd
cmp
jnp
mov
push
pop
sbb
and
mov
push
jmp
mov
adc
push
loope
sbb
and
jmp
movsb
mov
repz
mov
pop
ljmp
cmovb
out
xchg
ret
adc
int3
lock
nop
repnz
xor
arpl
lea
aam
sbb
pop
lcall
jo
add
dec
jb
jg
jle
sub
cmpsb
scas
inc
sub
add
cmp
movsl
lcall
sbb
dec
inc
lcall
push
lret
scas
push
xchg
pushf
loope
mov
adc
lock
lret
gs
inc
ud1
popf
ja
pop
push
movl
push
mov
adc
aam
pop
or
test
rcll
cld
and
xchg
ljmp
scas
mov
movb
mov
jno
test
lret
mov
hlt
mov
nop
divb
lods
jl
or
xor
lcall
aaa
cmp
negl
insb
cmc
xchg
sub
cmc
loopne
xchg
xor
sbb
adc
jmp
mov
jp
lcall
clc
mov
cmovb
or
jmp
andb
add
push
vmwrite
icebp
in
adc
imul
jbe
and
imul
jo
pushf
xchg
das
mov
lods
pop
push
or
xor
addl
xchg
xchg
pushf
cld
sbb
cwtl
pop
jnp
mov
mov
sarb
das
cwtl
mov
movsl
push
sub
mov
lea
scas
mov
shl
ret
cmp
into
out
es
push
out
ret
inc
sbb
loope
cmpsb
jmp
mov
call
cltd
push
js
pop
inc
xor
lock
fsubrs
cmp
push
jns
dec
ret
pop
cmp
xchg
les
add
add
les
push
jnp
sub
and
adc
adc
xchg
or
push
inc
sti
and
outsl
popa
add
idiv
movsb
shl
xchg
sub
dec
sbbb
xchg
ss
add
insl
mov
dec
cmp
cmp
push
insb
cmp
mov
cmp
gs
ljmp
mov
jns
scas
mov
inc
cmpsb
leave
dec
lea
fisubrs
mov
es
arpl
mov
hlt
dec
cwtl
mov
inc
mov
popf
xor
int3
mov
mov
xchg
inc
sub
push
fsubrs
shlb
and
lods
cmp
pop
rcrb
jp
stos
sarb
mov
es
in
and
xor
fcoms
inc
cwtl
lret
nop
xchg
xor
mov
psubd
lret
push
test
add
cmovb
sub
iret
dec
ss
daa
in
loop
ds
movsl
scas
outsl
cmpsl
add
xchg
cmc
shll
dec
rcrb
lret
lret
ds
or
jecxz
lock
sub
xor
or
hlt
outsl
out
and
enter
cwtl
int3
cli
pop
adc
push
leave
dec
xchg
test
scas
pop
mov
movsl
cmpsb
insb
sub
loop
subb
in
jo
mov
je
adc
mov
mov
push
cltd
and
adc
cwtl
or
pop
enter
cli
pop
ja
cmp
in
sub
cld
and
arpl
mov
mov
mov
jp
push
xchg
push
cltd
imul
test
in
out
push
sbb
add
rcrl
jno
js
leave
sub
push
data16
addr16
mov
jne
scas
pop
xor
adc
add
ja
push
sbb
cli
shr
xchg
cs
scas
pop
mov
aas
push
mov
dec
cli
mov
push
adc
push
cwtl
stos
or
mov
mov
lret
js
dec
inc
adc
mov
jl
aam
in
bound
add
into
pop
scas
js
aad
insb
mov
loop
xor
hlt
jbe
mov
popf
js
fs
or
jbe
and
outsl
dec
adc
xor
push
mov
mov
insb
les
cmp
enter
mov
or
rep
push
push
or
int3
pop
popa
inc
inc
jle
and
jns
jecxz
scas
test
aad
jp
je
inc
inc
cmpsl
pop
and
mov
sub
dec
popf
fldt
pushf
dec
dec
sub
pop
jle
outsb
js
and
cmp
xchg
in
mov
je
clc
dec
out
fcomp
into
je
leave
ret
sbb
jbe
popa
out
lahf
mov
lret
cmp
and
in
push
enter
rcr
adc
dec
int
ret
repz
cld
push
insl
mov
or
jb
xchg
xlat
jge
dec
add
orl
fimull
add
lods
jae
pop
mov
pop
cmp
movsl
test
jae
stos
lret
xor
loop
xchg
inc
outsl
xchg
mov
test
pusha
pop
out
in
jmp
mov
mov
inc
mov
sbb
cmpsl
push
jae
inc
cmpsl
repnz
cld
cmp
aaa
loopne
in
jge
std
mov
pop
mov
add
pop
sti
xchg
fiaddl
push
mov
mov
cmpb
sub
shl
test
mov
xchg
inc
pop
fisttps
mov
dec
cmp
xchg
push
test
pop
sbb
dec
gs
and
les
sub
test
fldl
enter
inc
mov
xchg
filds
dec
push
pop
mov
cmp
mov
movsl
add
and
jge
out
hlt
filds
mov
push
mul
and
jne
jmp
xchg
cmc
leave
cmp
out
jo
xchg
xor
and
cmp
dec
nop
jo
xlat
fstpt
addr16
sub
pop
jo
rol
mov
test
js
push
gs
or
orb
test
stc
push
psubusb
jmp
lret
test
xchg
rorb
xchg
popa
int
ja
sahf
xchg
xchg
sub
cmc
mov
xorl
mov
lock
jecxz
out
add
xor
push
test
jne
insb
jae
cwtl
call
divb
pop
es
imul
in
xchg
jl
cmp
jmp
call
lcall
dec
dec
cld
add
adc
mov
gs
pop
out
mov
in
lahf
shrb
and
push
sbb
mov
xchg
mov
lock
popf
cs
or
dec
in
sarl
xor
and
sbb
mov
dec
in
xchg
in
pop
xchg
and
jae
out
aad
hlt
mov
ja
inc
and
inc
imul
dec
inc
addr16
or
ret
and
or
jne
insl
repnz
push
enter
dec
jecxz
roll
lahf
xchg
sub
lods
scas
movl
into
mov
cmpsb
push
inc
mov
shll
inc
cmp
or
jle
mov
pop
cmp
call
push
inc
jle
out
test
push
fstl
xchg
mov
cmpsb
jmp
pop
inc
jnp
test
js
dec
js
std
fidivs
cli
into
inc
xchg
das
xchg
lret
cltd
aad
stos
push
and
dec
icebp
cmc
sbb
mov
in
call
and
adc
popa
lds
jne
leave
mov
movsl
stc
jmp
dec
arpl
jns
inc
sbb
mov
sbb
push
inc
push
add
addl
jle
add
xchg
sahf
rcrl
negb
pop
into
or
out
sub
jl
jnp
cli
cld
dec
cmpb
ret
ret
stos
xor
xor
dec
dec
sub
mov
movsw
pop
fdivs
xor
push
inc
in
dec
rcrl
cs
adc
mov
pop
xchg
outsl
out
and
xchg
mov
cmp
xor
xchg
stc
dec
pop
dec
sbb
mov
sub
mov
lods
pushf
imul
mov
xchg
jg
xor
pop
mov
fidivrs
pop
xor
pop
cwtl
sub
jmp
clc
dec
mov
sub
sbb
sub
icebp
cmpb
lea
paddd
lods
cmpsb
out
cmp
pop
mov
outsb
hlt
mov
add
loope
jno
jnp
pop
sub
mov
xor
cs
mov
lcall
and
insb
into
dec
xor
mov
stos
add
or
sbb
push
mov
sbb
icebp
sbb
shr
or
pop
jnp
dec
shlb
mov
fs
push
lods
push
pop
mov
push
mov
fdivl
ja
or
dec
inc
shlb
das
push
sub
dec
xchg
daa
pop
pop
add
push
pop
xor
test
jno
pop
adc
sar
dec
push
adc
js
repz
repnz
dec
push
inc
jae
fcomps
ljmp
jmp
mov
pop
fnstcw
jne
cmp
xorb
cmp
int
in
ja
jbe
push
add
movsb
sbb
hlt
ret
push
cltd
jo
out
cmpsb
mov
push
scas
out
sub
cli
stos
adc
cmp
jg
jp
rorl
std
stc
and
and
sub
dec
lcall
xor
out
cld
lea
lods
ror
arpl
dec
push
movsb
adc
sbb
mov
push
shlb
mov
imulb
in
ficomps
sbb
loope
fdivp
iret
and
idivl
mov
and
mov
inc
pop
inc
xor
shlb
fwait
hlt
xchg
mov
test
add
int
xacquire
in
cltd
mov
fbstp
ljmp
insb
xor
testb
xor
ljmp
pop
mov
clc
insl
inc
pusha
ja
xchg
mov
xchg
xchg
add
xchg
in
popf
xchg
fsts
jno
es
xchg
mov
mov
dec
mov
call
in
push
and
pushf
sub
push
add
cmp
push
lock
arpl
insl
push
add
roll
daa
xlat
pop
in
xor
aas
repz
faddl
inc
jle
push
add
lret
mov
rolb
xchg
lea
cs
sub
fidivl
pop
lahf
ficoms
ret
cmpsb
hlt
cwtl
add
gs
dec
add
cld
aaa
mov
mov
push
test
dec
push
push
inc
fs
mov
lds
sbb
push
cs
xor
dec
inc
or
adc
inc
cmpsl
jae
pop
outsb
inc
call
mov
xor
mov
fwait
es
lea
lcall
fistpl
jo
dec
iret
aad
ljmp
pop
sahf
insb
push
dec
cmpsb
xchg
cmp
in
test
add
int
aad
jl
push
sbb
and
mov
cld
xor
call
mov
adc
cld
mov
push
dec
mov
in
mov
fisubs
jo
sti
nop
adc
cmc
push
stos
mov
test
dec
enter
add
mov
faddl
jns
jae
test
imulb
add
cmp
adc
sub
pop
cmp
test
imul
sub
and
ss
sub
daa
aam
cmp
push
scas
aaa
mov
rorl
loope
setl
and
xchg
stos
xorl
sub
or
daa
push
xchg
lods
fldcw
xorl
sub
int
dec
or
xchg
data16
cmpsl
mov
aaa
lcall
pop
push
mov
push
adc
rcl
aam
shrl
jle
addb
fs
lcall
jecxz
stc
inc
inc
cmp
test
js
imul
pop
jnp
nop
fsubrl
jmp
stos
sub
dec
sti
cmpsl
les
hlt
insb
aas
mov
mov
pop
stos
call
sbb
ret
mov
jle
sub
sbb
mov
loop
imul
out
push
adc
lods
mov
or
or
cltd
andl
sub
int
and
stos
fildl
call
and
std
and
sbb
dec
aam
push
cwtl
test
push
mov
sub
lea
cmpsl
cmp
and
mov
stos
ja
sbb
enter
xchg
mov
push
test
ret
in
sbb
cmc
gs
leave
push
and
push
mov
iret
dec
clc
jne
sbb
mov
ficomps
or
fildl
and
clc
cmp
das
fs
scas
mov
int
jle
or
cs
push
mov
dec
sbbl
push
push
addl
xchg
repz
xlat
mov
ljmp
dec
inc
mov
sub
fidivrl
scas
inc
int
pop
loopne
cli
pushf
mov
lahf
mov
push
test
fistpll
cmp
mov
lock
loop
mov
mov
xor
push
gs
data16
ret
repnz
sbb
adc
or
pop
dec
ss
movsl
daa
dec
fcom
jnp
adc
dec
mov
mov
pusha
icebp
cmp
imul
sbb
pop
lahf
fs
mov
mov
mov
insl
nop/reserved
movsl
js
cs
cmp
push
dec
sahf
inc
xor
add
enter
ret
cmp
mov
cmpsb
dec
cmp
sahf
inc
sbb
fwait
lock
pushf
inc
sahf
sbb
movsl
cmp
mov
lea
gs
das
popf
fcomps
fistpll
test
test
pop
mov
popf
inc
xor
movsb
mov
outsb
jno
ficoms
jmp
stc
cmp
xor
xchg
clc
fwait
cmp
mov
aad
push
aam
add
dec
and
push
pushf
fstpl
pop
je
out
insb
push
jg
sbb
iret
insb
fsubrl
cmp
xor
mov
mov
xchg
push
shrl
imul
mov
mov
adc
jne
mov
test
popa
lock
stos
es
push
leave
cmp
pusha
movsb
nop
mov
adc
pop
and
and
dec
xor
movsb
jl
xlat
push
iret
notl
mov
in
mov
mov
shl
lea
mov
dec
loope
iret
xor
push
push
outsb
push
sub
dec
pushf
pop
pop
aam
je
cmc
movsl
adc
mov
or
mov
adc
jns
dec
lock
inc
mov
push
mov
jl
nop
and
test
mov
sub
adc
mov
fisttps
adc
jae
lret
shlb
add
push
insb
ljmp
cmp
push
mov
aas
xchg
cmp
or
push
leave
int
jecxz
out
movsb
inc
xchg
mov
cmp
mov
pop
imul
outsl
adc
mov
jo
in
loope
loope
lret
or
pop
js
cltd
and
out
mov
lock
xchg
jle
adc
jae
wbinvd
rcrb
adc
in
jmp
xchg
mov
fsts
lcall
arpl
scas
inc
jne
xchg
out
push
xor
in
mov
mov
pop
jmp
xchg
adc
mov
stos
push
sti
and
pop
adcb
dec
mov
pop
pushf
cmp
test
test
mov
cld
ss
shll
pop
xchg
vpunpcklbw
add
and
inc
pop
mov
push
ljmp
test
cwtl
and
add
stos
scas
out
arpl
sub
addl
mov
adc
sbb
xchg
xorl
nop
mov
enter
and
filds
or
dec
shr
cli
lea
scas
and
jmp
lcall
adc
cwtl
pop
and
fsubrs
fwait
insl
fistpl
orl
les
pop
out
cmp
pcmpgtb
cmp
imul
pop
stos
sub
movsl
mov
cwtl
fucomp
jl
push
mov
sti
lcall
fnstenv
ret
leave
mov
xor
pop
push
bound
dec
lds
push
aam
out
rolb
iret
dec
lds
cltd
cmp
sub
fistpl
lcall
inc
cli
imul
jne
es
int3
mov
es
sub
loop
mov
lea
fsubrs
xchg
pushf
mov
xchg
es
out
push
clc
test
in
inc
mov
leave
cmpsb
lea
movsl
push
int3
mov
inc
xchg
push
jmp
in
scas
filds
xchg
mov
or
jecxz
movsb
out
jecxz
cmp
inc
mov
jae
out
or
sub
cmp
dec
pop
iret
xchg
loop
push
loop
mov
insb
std
fadd
outsb
dec
jmp
mov
jno
popf
into
mov
fnsave
xor
add
pop
mov
or
add
sbb
mov
cli
je
push
scas
push
xchg
xor
push
pop
fldenv
es
jmp
or
into
jne
pop
cmpsb
jo
jl
sub
mov
cmp
orb
es
mov
cwtl
push
fcompl
or
repnz
fadd
sbb
out
iret
fs
add
movsl
ja
int3
lock
and
ljmp
std
in
jl
scas
iret
lds
and
loope
lea
pop
aas
shl
cli
mov
dec
mov
sbb
scas
mov
and
in
xlat
js,pn
xor
mov
push
dec
faddp
inc
xchg
das
mov
and
popa
sti
lock
mov
stc
sbb
sub
sbbl
pushf
hlt
xchg
mov
iret
adc
push
sahf
sbbl
stos
int3
xor
test
or
cli
xchg
inc
sahf
pop
pop
out
push
add
ret
jne
jg
cmp
xchg
aaa
les
cmp
cmp
imul
rcll
mov
popa
int
fstpl
jg
adc
es
push
shlb
cmp
mov
stc
cmp
orl
mov
xchg
jno
inc
mov
cs
or
dec
testb
sbb
jecxz
add
ret
xchg
add
inc
mov
or
popf
mov
repz
sub
jge
mov
fwait
mov
mov
or
cmp
push
inc
ljmp
mov
or
mov
rcrb
jnp
pop
sub
fistpll
dec
cwtl
sbb
sbb
stos
xchg
jge
adc
push
nop
jge
xchg
shlb
cld
data16
loop
inc
and
jmp
inc
mov
gs
or
cmc
lock
int
push
jo
adc
imul
dec
jg
rcrb
je
lahf
dec
jp
insb
lods
int3
cmp
xchg
mov
jp
repz
xchg
mov
xchg
mov
pop
aad
cmpsl
pop
or
mov
fs
in
or
adc
cmp
iret
sub
mov
shll
cs
mov
xchg
shll
xor
shr
sarl
sahf
movsl
aas
add
add
pushf
andl
or
push
adc
add
pop
dec
outsb
mull
and
jg
mov
mov
inc
jne
movsb
jae
sub
add
in
add
add
pusha
and
ss
int
push
pop
and
nop
push
jae
addr16
neg
pop
in
mov
inc
jl
pop
cmp
sahf
mov
rorl
repz
inc
mov
push
mov
cmpsb
imul
in
dec
and
jecxz
in
cld
scas
xchg
xor
icebp
das
pop
xor
pop
jg
aad
or
fsts
test
pop
and
sbbb
aaa
xchg
stc
adc
push
xlat
xor
incl
call
lea
pop
in
outsb
out
push
push
lods
fdivrl
lret
pop
fucomi
ret
fsubrs
in
xchg
jl
jbe
rcr
adc
sahf
cltd
and
imul
pop
out
insl
mov
mov
loop
clc
mov
icebp
jbe
xor
cs
sub
cli
mov
pop
stc
pop
fcmovnu
jnp
inc
sbb
mov
mov
aas
or
cld
mov
sub
inc
or
mov
movb
mov
mov
inc
jne
movl
adc
stos
les
cmp
jp
and
ja
inc
lret
sub
mov
jmp
mov
adc
inc
xchg
adcl
aas
inc
js
test
mov
cs
roll
mov
or
iret
sub
xlat
mull
cmpsl
jle
out
test
daa
fstl
ret
mov
push
cli
inc
push
or
xchg
jmp
cwtl
cmpsb
out
cwtl
ds
pop
andb
shll
test
xor
mov
leave
sbb
aad
or
inc
imul
inc
pushf
daa
shl
xor
and
mov
insl
push
dec
push
arpl
divl
lret
daa
mov
pop
mov
mov
pop
xchg
mov
inc
das
mov
sub
pop
outsl
inc
and
shr
into
cltd
mov
sar
xchg
pushf
dec
mov
je
rolb
popa
jecxz
je
adc
sbb
and
sbb
popa
loop
cmp
ds
aaa
inc
jp
lock
push
stos
int3
sub
int3
sub
mov
and
cmc
push
xor
inc
mov
sub
insb
aam
sub
pop
pop
int3
sub
fidivl
subb
roll
test
cmc
jae
popa
mov
cmp
push
xchg
lahf
push
xlat
icebp
bound
xchg
sbb
pop
adc
fcomip
out
pop
adc
push
push
push
push
les
call
jle
imul
enter
pop
push
out
cmp
xorb
dec
lea
push
and
sub
add
sahf
fldt
inc
pop
shll
nop
imul
insb
or
scas
notl
enter
shl
jbe
sub
jb
push
pop
mov
inc
xchg
adc
jnp
sbb
add
scas
fidivrl
mov
jbe
lea
dec
fstpl
movsl
lcall
lods
cmc
rclb
fidivl
movsb
push
out
inc
pop
push
loopnew
mov
call
adc
cmp
xchg
xor
dec
test
je
gs
out
mov
loopne
or
into
clc
inc
jbe
gs
or
shll
add
out
std
stc
imul
xchg
lds
popl
inc
xor
pop
pop
xchg
idiv
fbld
outsl
cli
adc
nop
and
xor
dec
jmp
testb
mov
loop
lods
sub
rcrb
dec
push
and
in
push
outsl
add
fcoml
jle
sahf
adcb
mov
xchg
hlt
push
pop
xchg
pop
popf
push
scas
bound
cld
pusha
fcmovbe
dec
imul
sub
sti
mov
add
icebp
sbbl
sahf
xchg
xchg
fwait
call
popf
cmp
push
out
mov
cmp
lret
mov
adc
lcall
or
mov
pop
sbb
test
or
sarl
outsl
mov
arpl
pop
dec
push
fdiv
push
ret
unpckhps
gs
cmc
cmp
jle
pusha
imul
mov
mov
pop
mov
xchg
jno
cmp
fucom
push
pop
inc
jno
push
cmp
lahf
jg
sub
mov
push
or
sub
daa
jns
loope
stos
dec
cmpsb
in
ds
mov
into
imul
fsts
sbb
mov
adc
sbb
movsb
xor
and
or
mov
cli
dec
ret
push
sub
xlat
and
inc
ss
fbstp
sub
js
test
xchg
mov
adcl
push
mov
popa
dec
fidivrl
xchg
adc
outsb
xchg
pop
pop
sub
and
push
adc
mov
lret
xchg
stc
pop
jo
lds
mov
pop
push
pop
pop
ljmp
lods
mov
sub
out
sub
push
imul
jnp
in
add
inc
inc
push
aad
push
lret
add
orb
pop
sbb
mov
in
pusha
aam
.byte
scas
jecxz
push
pop
dec
sub
fbld
lea
mov
stc
mov
leave
pop
mov
adc
clc
jnp
jge
retw
sub
imul
sub
push
je
push
ficompl
pusha
sar
or
mov
push
xchg
cs
or
test
mov
stos
sbb
repnz
gs
fsubs
and
xchg
add
gs
stos
lret
push
dec
and
adc
or
ss
call
and
movsb
cmc
push
dec
cmp
ss
mov
gs
fsubrp
mov
loop
xchg
fwait
mov
in
je
or
mov
ret
orb
mov
test
rcll
jnp
sbb
movsb
jle
data16
mov
mov
iret
in
mov
test
inc
or
xchg
daa
pop
mov
jecxz
push
sbb
outsl
push
rcrb
shlb
and
int
insb
sub
sti
push
test
or
mov
fisttpl
lods
out
mov
imul
inc
push
and
jecxz
add
out
adc
clc
fwait
ds
and
and
cmc
in
xchg
enter
nop
jecxz
push
sbb
pushf
rorl
xor
mov
sti
stc
dec
pop
push
dec
sbb
rorb
inc
inc
lahf
xchg
pop
or
insl
xor
popl
jg
pop
cli
xchg
lods
test
dec
scas
dec
loope
push
and
imul
add
adc
sbb
gs
adc
jae
out
jae
stc
pop
ja
mov
clc
sti
jl
int
in
cmp
js
pop
bound
test
aas
xchg
xor
insl
push
and
add
loop
xor
idiv
into
mov
jne
add
mov
sarl
jmp
stc
pop
jp
popa
and
andb
lds
xchg
je
xchg
idivb
or
cmp
std
mov
or
xor
xor
mov
hlt
cmp
dec
dec
sti
fdivl
dec
mov
ja
stos
adc
ffree
cwtl
into
push
or
add
stos
popa
jnp
stc
roll
pop
push
arpl
mov
in
mov
sti
and
cmp
jl
addr16
lods
mov
repnz
mov
scas
test
adc
bswap
out
mov
addr16
adc
addl
xchg
or
out
rol
popa
pop
fs
dec
cmp
inc
stc
out
mov
sbb
test
loopne
lret
sar
adc
cld
mov
xchg
aas
cmpl
rorl
cmc
arpl
jae
pop
jp
add
xchg
pop
ds
jle
inc
nop
mov
test
lahf
lds
negb
pop
cmp
push
mov
std
pop
bound
dec
mov
std
shlb
movsb
sti
sbb
xor
jle
loope
fwait
cmc
sahf
mov
int3
adc
mov
pop
outsl
std
loope
push
xchg
xor
sti
icebp
jg
inc
xchg
stc
push
mov
daa
leave
in
pusha
sti
add
add
mov
lods
lret
adc
jle
cwtl
sbb
inc
addr16
inc
mov
stc
ljmp
xchg
mov
popf
lret
insl
and
cld
add
dec
gs
mov
ja
inc
rol
or
in
pop
dec
sbb
push
inc
loop
mov
cld
aam
ss
adc
sbb
push
and
add
xchg
stos
cmc
out
xchg
outsb
jae
outsb
inc
outsb
mov
ja
jo
push
push
ds
dec
mov
mov
adc
push
bound
cmp
ret
pop
das
mov
cmp
jle
sbb
out
jecxz
imul
leave
enter
jnp
mov
pushf
or
test
and
icebp
add
lahf
dec
repz
xor
and
es
dec
ljmp
out
cmpsb
mov
push
in
push
xchg
mov
jb
jecxz
mov
xor
push
into
aas
pop
sbb
push
xchg
mov
jbe
faddl
loop
lods
inc
lods
adc
mov
imul
lcall
arpl
jecxz
hlt
and
push
mov
cmove
dec
inc
sbb
adc
loop
test
popa
shlb
cmc
subl
cmpsb
cmc
push
adc
aaa
call
pop
sbb
xchg
fldl
mov
pop
mov
movsl
lahf
scas
cmp
lods
daa
loope
or
mov
pop
ljmpw
cmp
cltd
mov
xchg
add
sub
lcall
test
push
jp
lret
cmc
pop
push
leave
ret
xchg
popa
or
fcoml
add
leave
lea
add
mov
dec
mov
xchg
mov
mov
push
jmp
sub
movd
movd
add
sub
test
jne
ret
call
movq
movd
add
add
jmp
push
mov
sub
movl
movl
pusha
mov
movq
movd
mov
xor
lea
push
push
push
push
call
popa
leave
ret
xchg
inc
pop
xchg
ja
dec
push
jno
aaa
int
xchg
pop
out
in
sub
pop
sub
mov
negl
stos
popa
mov
test
iret
outsl
ljmp
jge
sbb
sub
push
xchg
mov
int3
loop
bound
adc
fwait
imul
cmp
cs
and
cmc
dec
test
or
shll
js
mov
sti
xor
push
cmp
pushf
dec
test
mov
add
lds
roll
xorl
sub
adc
shlb
add
fsts
sub
dec
inc
mov
daa
cli
wbinvd
and
pop
or
adc
add
repz
mov
cltd
cmpsl
loopne
pop
jb
daa
shrl
fcompl
pop
ficomps
pop
dec
mov
aas
int
cmp
int3
mov
jnp
daa
or
aad
or
ret
vrsqrtss
push
push
cmc
jl
nop
pop
arpl
fbld
in
push
enter
pop
sbb
jo
loop
xchg
mov
es
xchg
adc
push
mov
in
test
push
mov
sub
lret
and
sahf
leave
xchg
mulb
pusha
cmp
adc
in
and
hlt
lock
sbb
addr16
enter
gs
popf
push
add
js
cmp
add
test
push
jno
cwtl
insl
push
idivl
fstl
scas
cmc
cmp
inc
aam
inc
fwait
mov
sbb
dec
divb
shlb
movsb
aad
mul
sub
and
stos
outsb
insl
into
inc
mov
dec
push
ds
movsl
ss
pop
sbb
push
cs
jle
dec
dec
leave
pop
sub
iret
cmp
fisubl
add
or
aad
pop
mulb
add
in
dec
into
add
rolb
and
sbb
movsb
in
clc
mov
lds
fcomp
mov
in
add
pop
jp
xor
fcmovbe
lods
out
repnz
lds
test
push
push
adc
lret
mov
sbb
or
cld
or
pop
add
cmpsb
or
mov
jnp
xor
pop
xchg
cmp
sbb
sbb
orl
inc
mov
and
stos
idivl
popf
loopne
ficoms
push
and
push
adc
mov
push
stos
fisubrs
dec
fidivl
lcall
dec
mov
or
in
dec
mov
fs
inc
cmp
enter
test
pop
adc
jg
ja
push
inc
jae
mov
adc
sub
xchg
cmp
iret
aaa
mov
adc
adc
movsl
test
movl
or
aaa
pusha
mov
test
pusha
cmp
fwait
xchg
sub
pop
nop
cmpsl
add
adc
aaa
jmp
or
adc
mov
out
repnz
clc
sti
orl
fldcw
fildl
pop
fsub
dec
addr16
push
xor
sbb
imul
cltd
cli
mov
in
lret
xlat
flds
test
aaa
arpl
or
xchg
insl
mov
sbbb
mov
hlt
cmp
das
mov
ja
inc
loop
daa
mov
idiv
mov
inc
inc
mov
push
hlt
sub
dec
outsl
xchg
outsl
shl
rolb
jmp
stos
mov
mov
cmp
adc
enter
rolb
lods
xor
add
push
push
and
mov
adc
cmp
test
dec
add
stc
enter
int3
mov
aaa
jle
mov
push
inc
mov
incl
xor
jle
arpl
cmp
lock
loopne
aad
sbb
adc
xchg
inc
test
sub
je
mov
xor
xor
add
and
test
cmp
hlt
ret
iret
sub
push
outsl
ret
arpl
push
aam
mov
jmp
div
xorl
dec
jge
addb
in
sahf
cmpsb
imul
mov
rcr
ret
out
adc
cmp
das
mov
sub
mov
jno
adc
out
mov
loopne
shlb
cmp
xchg
cwtl
test
adc
call
fdivrs
addl
jbe
xchg
hlt
imul
xchg
je
es
scas
into
and
dec
sahf
dec
push
adc
mov
adc
sub
jb
xchg
cltd
bnd
inc
xchg
das
movsl
add
unpckhps
pop
mov
iret
jae
subb
scas
push
cwtl
push
jbe
and
iret
in
addr16
push
sbb
mov
push
fisubrs
mov
movsb
fcomi
dec
add
cmpsb
dec
dec
sbb
dec
xlat
sbb
pop
stos
idiv
xacquire
fdivrs
out
jbe
jae
jae
jno
jmp
pushf
out
mov
