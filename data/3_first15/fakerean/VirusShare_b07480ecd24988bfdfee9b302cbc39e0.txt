xor
push
push
push
push
push
push
push
call
add
cmp
jne
push
push
push
call
mov
xor
inc
ret
xor
ret
push
mov
push
call
pop
ret
push
mov
sub
push
push
push
call
mov
movl
mov
mov
call
test
je
movl
jmp
mov
xor
mov
mov
dec
mov
mov
mov
pushl
push
mov
call
pop
pop
mov
dec
mov
cmp
je
lea
jmp
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
mov
mov
add
mov
add
mov
mov
lea
jmp
call
xor
inc
pop
leave
ret
push
mov
push
xor
mov
mov
div
push
push
mov
test
jne
mov
xor
mov
div
push
neg
sbb
and
push
pushl
call
mov
mov
mov
sub
mov
mov
xor
mov
inc
sub
dec
jne
pop
xor
pop
inc
pop
pop
ret
int3
int3
int3
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
cld
mov
and
push
jne
push
pop
leave
pop
jbe
sub
out
mov
inc
jecxz
lahf
and
and
fcoml
jbe
sti
add
ds
pop
pop
or
push
sbb
cwtl
sbb
movsb
int3
addb
lods
enter
lock
xor
std
movsb
hlt
adc
pusha
xchg
movsl
jnp
les
int
popa
data16
sub
and
test
xlat
inc
iret
popf
inc
out
ja
test
and
mov
arpl
ret
jl
mov
stos
andl
xor
inc
fs
sbb
or
pushf
inc
insb
movsb
jno
jno
fildll
call
iret
sbb
aam
out
pop
cmpsb
push
ds
or
int
add
or
mull
leave
mov
xor
rorl
aas
dec
push
ret
popf
loope
sub
les
aam
or
pop
testb
test
cmpsb
push
insl
repz
inc
push
repz
mov
arpl
jmp
jno
jp
cmp
mov
add
sub
mov
pop
sbb
cli
arpl
cmp
sbb
data16
sahf
mov
das
adc
push
push
adc
or
rorl
pop
pop
mov
ds
dec
aas
loope
jb
adc
rcrb
mov
mov
mov
jbe
hlt
outsb
jae
push
dec
movsl
fistpl
mov
dec
dec
cwtl
sbb
xchg
adc
icebp
dec
xchg
int3
pop
ss
stc
mov
into
mov
or
xor
add
sbb
cmpsb
out
sub
adc
mov
mov
xchg
pusha
adc
jno
adc
mov
adc
push
pop
pop
bound
fstl
out
jecxz
mov
rorb
lret
cld
pop
jg
cmp
pushf
or
lock
pop
and
sub
jmp
jo
das
xlat
jae
hlt
cmp
xchg
or
mov
clc
test
stos
nop
insl
pop
stos
aam
cs
pop
pusha
call
rolb
pushf
add
cltd
xor
and
iret
scas
and
mov
pop
dec
fisubl
cmpsl
lock
fwait
mov
push
pushf
shll
fcomps
repnz
sbb
dec
or
cmp
in
cmc
pop
orl
and
sub
outsl
dec
jg
shr
movsl
inc
inc
push
bnd
add
aas
inc
and
pop
rcl
pop
stos
lds
fisttps
mov
sub
out
cmp
or
cmc
pop
jle
jae
and
xor
pop
in
rcrl
in
jecxz
xchg
cmpb
cmp
ret
xchg
xchg
mov
fldcw
fcoms
xchg
stos
fildll
daa
mov
jle
test
jp
mov
or
loope
xchg
xchg
mov
jb
mov
mov
xchg
pop
add
mov
adc
jbe
jne
jnp
cld
repz
stos
mov
jb
mov
mov
inc
pop
ret
call
or
loopne
daa
int3
fsubr
aam
cmpl
or
into
jns
lret
movsl
xchg
mov
pop
lahf
outsl
lcall
gs
lahf
mov
ljmp
push
sub
adc
jnp
mov
repz
ret
subb
lret
mov
gs
stc
push
adcl
push
adc
push
rclb
and
fs
out
inc
movsl
mov
sbb
adc
test
mov
js
mov
push
cmp
push
fisubl
and
mov
sbb
jle
popa
addr16
sbbb
je
push
rcrb
mov
rcrb
cmpsl
fbstp
repz
xchg
or
out
push
mov
mov
adc
sub
lock
repnz
pusha
filds
cmp
dec
push
sub
lret
mov
ret
dec
push
iret
or
inc
fwait
call
jb
or
inc
loop
push
ljmp
mov
int3
ss
pop
mov
stos
mov
mov
scas
mov
cmp
fucomip
fs
push
loop
cmpsl
lds
xlat
enter
xchg
ror
dec
pop
push
or
or
aam
pop
sub
das
or
or
cmp
les
bound
push
or
js
jb
cltd
xor
test
adcl
inc
adc
mov
fwait
inc
push
xchg
sbb
pop
xchg
mov
ficoms
int3
dec
aam
adc
inc
push
clc
cmp
jns
pop
das
imul
loopne
or
lock
push
pusha
inc
lds
stc
ret
rcll
push
push
repnz
out
outsl
cmp
inc
nop
shl
in
dec
and
mov
adcb
mov
inc
and
shlb
sub
dec
cli
mov
mov
jae
ljmp
or
jmp
mov
clc
xor
push
call
loope
out
and
cmp
dec
cmpsl
dec
push
jae
pop
dec
mov
mov
pop
cld
mov
hlt
fwait
in
xor
lcall
xchg
out
test
popa
test
ljmp
pop
xchg
dec
faddl
mov
pop
fimuls
lods
icebp
les
pop
push
into
sti
add
lods
sahf
pop
sub
ret
xchg
xchg
and
pop
outsl
or
xlat
inc
lret
mov
sti
ds
sbb
fsubl
fwait
aam
and
and
subb
pop
pop
fnop
sarl
fdivrp
loop
je
sbb
out
mov
call
cltd
cmp
mov
icebp
sub
push
push
and
xlat
bound
sbb
mov
int3
lcall
mov
loopne
adc
jecxz
or
sahf
ret
pop
std
push
lcall
lahf
sahf
mov
push
jmp
mov
jne
cs
inc
or
cmp
loop
outsb
xchg
pop
push
xchg
pop
jno
in
sbb
cmpsb
mov
out
pop
xchg
xchg
xor
fucom
sbb
xchg
or
js
xor
xor
scas
popf
mov
lret
sbb
cmp
jge
aam
xor
out
add
sub
jge
imul
dec
cld
mov
lock
clc
addr16
ja
inc
lret
out
or
repz
push
push
mov
std
dec
sub
lock
fsubrp
dec
mov
adc
ds
and
sub
into
stos
jecxz
aaa
mov
sub
mov
sbb
mov
repz
lcall
test
in
popf
lret
call
jle
les
cmp
inc
push
mov
lret
cmp
sub
jmp
mov
hlt
or
fcompl
pushf
sbb
aaa
cmc
cld
xor
outsb
bound
cld
xor
cli
pop
mov
mull
dec
and
or
and
cld
push
popf
push
lds
movsl
in
test
shrl
sbb
shll
data16
gs
loopne
pop
dec
add
adc
int
cmp
cmpb
cld
popa
stos
pop
xor
lods
sub
push
xor
adc
in
fcoms
cmp
repz
imul
xchg
mov
mov
sbbl
sub
icebp
and
push
push
push
push
xor
pushf
std
cmc
cmp
adc
cs
into
mov
fiaddl
sub
insl
jl
dec
jb
repnz
aad
push
inc
sbb
les
push
scas
xor
jno
mov
adc
arpl
mov
test
imul
ss
lcall
sahf
das
fdivrs
aas
sbb
nop
mov
lock
cld
jmp
or
pop
in
and
std
addr16
ja
notl
jmp
fnstsw
or
cmp
sub
sbbl
adc
cld
xor
stos
dec
push
mov
test
lock
or
mov
inc
add
aas
shrb
int
scas
loope
mov
stos
mov
movsl
or
clc
outsl
les
aas
cmp
int3
pop
pop
or
jmp
iret
push
stos
loope
mov
fsubs
popa
ja
aam
mov
out
int3
cltd
add
stc
les
add
push
jae
ja
cmp
mov
sahf
adc
fstpl
das
add
cmpsl
out
bound
or
dec
jecxz
bound
scas
jle
mov
mov
xchg
pop
xchg
add
ror
call
inc
int3
cmpsb
or
fs
ds
and
test
lock
jl
inc
jg
jecxz
pop
test
cmpsb
in
fldln2
push
dec
test
inc
push
repnz
xor
and
dec
fimuls
sub
adc
outsl
mov
pop
loop
pop
clc
push
popa
daa
sbb
sti
xor
subb
or
mov
add
pop
or
xchg
loope
lret
mov
push
sub
cmp
mov
lea
nop
xchg
mov
adc
out
icebp
adc
lods
shl
inc
repz
xorl
enter
mov
jae
xorb
nopl
mov
xor
aaa
out
jp
inc
mov
cmp
mov
mov
cmpsl
jne
inc
pop
xor
inc
xor
repnz
out
rclb
dec
jnp
cld
adc
bound
out
mov
in
ficoms
jl
aam
cmpsb
fs
inc
scas
push
push
mov
xchg
xchg
sbb
shrl
push
test
das
xchg
sub
les
cmp
testl
mov
mov
mov
jecxz
stos
arpl
repz
in
fiaddl
or
sti
clc
pop
repnz
push
imul
push
fimull
push
cmc
loopne
push
rcrl
lods
subl
stc
pop
cld
shlb
mov
addb
add
rorb
mov
push
sti
inc
bound
add
iret
std
xlat
and
icebp
and
push
add
shl
sbb
jne
mov
mov
or
push
xor
daa
or
inc
jg
mov
sbb
sub
pop
mov
out
xchg
scas
mov
mull
or
jnp
movsl
sahf
divl
fsubr
or
and
lds
jb
xor
mov
stos
insb
repz
sbb
add
dec
jno
mov
popf
cmpsb
arpl
inc
popf
stos
xor
add
adc
sbb
test
cmp
data16
pusha
ds
push
jmp
mov
rolb
test
pop
xchg
scas
call
out
int
and
inc
pop
mov
in
aaa
mov
pop
mov
and
inc
dec
mov
xor
sub
int
add
subl
outsl
sbbb
jg
js
in
bound
mov
mov
jne
neg
cmp
retw
inc
int3
sub
cmp
lret
xchg
adc
sbb
xchg
jecxz
lds
adc
jnp
mov
gs
lret
ss
dec
mov
iret
adc
push
pop
into
jnp
or
mov
mov
mov
sub
mov
mov
fidivs
pop
scas
cmpsb
lcall
inc
or
imul
jnp
xchg
pusha
pop
in
scas
xchg
mov
mov
sarb
mov
ljmp
mov
cmc
and
and
mov
pop
inc
xchg
lret
or
test
cmpsl
or
dec
scas
mov
test
out
sti
imul
enter
adc
jmp
sbb
popf
mov
dec
sub
outsl
leave
repnz
adc
out
mov
push
inc
outsb
popf
in
add
mov
lcallw
les
push
pop
repz
mov
mov
dec
or
dec
xrelease
fwait
adc
stos
sub
dec
cmp
aam
mov
mov
cmp
fidivs
dec
leave
xchg
jne
jp
das
clc
push
mov
jo
adc
aad
dec
scas
xchg
loopne
mov
sbb
fwait
mov
cmp
jae
xor
clc
pop
push
inc
loopne
jnp
out
jmp
mov
sub
data16
test
arpl
and
pushf
xor
out
in
ficoml
mov
mov
repz
inc
dec
adcl
incb
add
int3
jle
incb
movsb
add
stos
daa
ja
xor
adc
iret
and
cmp
das
jmp
sub
dec
insl
orl
cmpsb
cmpsb
adc
orb
movaps
mov
push
andb
cltd
icebp
enter
xchg
jle
xlat
lods
fwait
cmp
cmp
and
xor
push
out
jnp
fisttpl
dec
data16
xor
aam
and
inc
testl
stc
out
mov
inc
aad
stos
idivb
pop
lret
ret
xchg
fistpl
sub
popa
outsb
aas
js
and
or
stc
or
outsb
pop
js
sub
xor
mov
not
xor
or
ret
cwtl
mov
sti
int
movsb
rclb
mov
and
lock
jg
shll
or
add
test
inc
stos
and
pop
std
test
lret
sarb
mov
push
fs
mov
fwait
loopne
test
add
mov
adc
jb
dec
adc
int
mov
xchg
cwtl
cltd
aad
roll
testl
stos
push
push
dec
adc
fmull
and
lds
adcb
jge
or
mov
pop
clc
push
cmpsl
sbb
test
jne
js
pop
mov
sub
lock
add
in
movq
or
out
dec
and
adc
push
pop
add
in
aas
iretw
stc
out
xchg
out
add
push
dec
shrb
ret
and
push
xor
ret
clc
mov
stc
sbb
dec
push
mov
sahf
mov
scas
xchg
jne
sub
dec
inc
mov
jp
nop
loopne
into
pushf
shl
fstpl
mov
pop
negl
cmp
fcompl
cwtl
iret
xchg
xchg
rcll
cmp
pop
inc
insb
sbb
push
cli
xor
daa
ss
std
mov
movsb
sahf
and
orb
pop
sub
mov
mov
stc
leave
add
mov
xchg
pop
pusha
mov
xlat
inc
ss
pop
add
sbb
nop
or
cmp
imul
rsqrtps
sub
xor
outsl
push
jle
fs
xchg
loop
out
xor
jle
cs
cmc
mov
insl
outsl
mov
lea
filds
jnp
aam
aad
pusha
adc
out
jnp
or
mov
push
lcall
adc
sahf
das
sbbb
xchg
inc
dec
mov
mov
cmc
and
cmp
sbb
jmp
xor
dec
lock
addr16
or
mov
cltd
adcl
cwtl
jno
hlt
cmp
jae
repz
outsb
popf
mov
es
dec
sub
loopne
roll
pushf
cld
mov
mov
or
int3
mov
add
xchg
mov
add
das
stc
inc
icebp
loope
imul
out
fsubrs
jns
pusha
jmp
out
rcl
jge
mov
addb
jecxz
stos
das
dec
adc
mov
jno
sarb
std
xchg
fimuls
xchg
notl
scas
or
popf
mov
xor
pop
and
stc
das
xchg
and
shrl
xchg
xor
testl
fsts
xor
pop
jbe
dec
add
in
add
dec
decl
and
nop
icebp
sbb
inc
cmp
mov
jecxz
int3
cltd
popa
xchg
adc
inc
ja
jb
cwtl
push
push
xchg
stc
pop
sti
test
mov
js
test
cwtl
xchg
or
adc
jae
ja
cmp
xchg
and
jle
mov
repnz
mov
adc
pop
loope
sub
xchg
cmpsl
mov
inc
sbb
loopne
xor
test
sub
xchg
cmpsb
dec
ds
mov
sbb
mov
sub
pop
shlb
and
jge
jno
test
jecxz
xor
add
jmp
pop
dec
sub
adc
fwait
inc
lahf
jl
aaa
mov
in
fmul
popa
mov
jp
not
fs
push
push
jl
insb
andb
add
in
cmp
and
xor
addr16
pop
scas
cmovg
push
mov
cmpsb
and
fwait
cwtl
jae
hlt
fists
icebp
jmp
scas
mov
cmpsb
fldt
fwait
mov
inc
jno
nop
daa
adc
and
ljmp
loopne
adc
push
test
add
lds
mov
in
mov
iret
stc
xchg
hlt
loope
jnp
pop
clc
jno
imul
mov
bound
push
add
mov
lods
and
cltd
dec
aas
ljmp
decb
sbb
inc
jnp
fs
rorb
std
cld
add
or
inc
cwtl
pop
gs
arpl
push
xor
push
sub
push
dec
out
cmp
mov
mov
repz
jae
mov
in
dec
xor
in
push
leave
mov
pop
je
stc
mov
fdivs
lahf
test
jno
repz
orb
inc
insb
rcrb
push
shr
stos
out
test
lea
inc
mov
jne
xor
xchg
cli
lock
add
pop
aas
xchg
ds
push
out
bound
rcrb
scas
out
inc
mov
or
mov
iret
aam
stos
pop
les
xor
adc
dec
push
stc
inc
movsl
sub
adc
inc
icebp
nop
fcmove
aas
stos
xchg
jbe
xor
cld
loopne
repz
call
pop
movsl
mov
mov
push
outsb
repnz
loopne
jnp
adc
sbb
sub
and
inc
xor
mov
and
or
inc
and
jne
dec
inc
xchg
sub
sub
cwtl
xchg
and
pop
adc
insl
ret
aaa
lods
sarl
ret
jl
iret
add
js
cmp
sbb
mov
lods
jns
push
jns
add
mov
pop
arpl
lret
stc
inc
rorb
icebp
daa
cmp
in
or
fwait
pop
cmp
push
add
andb
pop
cmpsl
sarl
cmp
test
adc
cmp
xor
lods
lods
mov
mov
jbe
mov
dec
repz
dec
adc
sub
ret
repz
cli
fisttpl
mov
lods
outsb
test
hlt
movsb
ret
pop
and
cmp
rcrb
lahf
stc
xchg
imul
xor
addr16
mov
mov
sarb
data16
les
fwait
aad
jl
test
or
push
mov
pop
mov
into
je
jb
daa
sub
lret
popf
add
scas
cli
adc
sbb
cwtl
sub
mov
lret
xlat
clc
in
xchg
cmp
jns
mov
xor
inc
push
lahf
jmp
int3
inc
out
stos
repz
pop
lock
lods
mov
mov
push
push
out
adc
add
lcall
inc
xor
cli
adc
sub
or
jmp
subb
mov
adc
and
sub
loope
daa
adc
mov
mov
inc
push
and
inc
or
and
rcrl
or
decb
test
sub
mov
pop
xor
mov
jl
mov
sti
push
cmp
jg
nop
scas
in
je
adc
rclb
push
ss
rcr
dec
nop
pop
pop
adc
xlat
out
int
adc
and
pop
xchg
out
xchg
or
sbb
jp
mov
push
dec
xchg
test
xlat
shrl
cmpsl
out
cmpsl
sbb
popa
insb
mov
das
xchg
nop
fnstenv
and
into
xor
pusha
jne
or
jmp
push
ror
es
jp
movsl
xor
shlb
mov
ret
mov
in
hlt
jp
xchg
rcrb
std
adc
les
sub
jge
sbb
sahf
push
adc
jle
leave
int
xchg
lods
hlt
subl
lods
xchg
push
jmp
cmp
xor
mov
stos
dec
sub
pop
cmpsl
test
rcrb
jle
cmp
jno
cli
mov
xchg
sbb
push
sub
add
push
ret
aad
cmp
lods
xor
sub
dec
fwait
or
pop
jb
ficomps
mov
and
pop
push
imul
add
in
test
in
mov
out
popf
cli
mov
jge
in
or
dec
shll
dec
fcoml
cld
mov
shrb
icebp
rclb
je
enter
sub
rcll
dec
popf
sbb
pushf
and
add
adc
or
mull
push
test
mov
xchg
arpl
xchg
jp
pop
stos
movsl
inc
mov
push
sti
mov
in
aad
lahf
fimull
int
mov
and
sbb
mov
out
pop
orl
mov
add
mov
fisubrl
lret
adc
andl
mov
outsb
cmp
iret
repnz
mov
mov
dec
pushf
push
xlat
out
aaa
cli
aas
subb
gs
jno
pop
push
rcll
hlt
xchg
mov
mov
aas
out
movsl
inc
pop
fbstp
cmc
push
mov
sbb
dec
sub
mov
frstor
sbb
rcrb
and
sbb
sbb
loopew
mov
cs
insl
push
jle
mov
testl
subb
mov
cli
sahf
xchg
fistpl
mov
push
push
lret
leave
imul
out
shll
add
loop
aaa
cs
mov
mov
adc
mov
cmp
mull
inc
jecxz
roll
loop
inc
jae
mov
test
cmp
jbe
pop
mov
loope
mov
adc
or
and
xchg
xor
and
fldenv
stos
dec
pop
fcompl
sar
adc
xchg
cmp
xchg
pop
cmp
in
push
inc
xor
nop
aad
add
mov
push
cmpsb
negl
pop
and
sbb
jbe
mov
mov
dec
jecxz
lock
mov
jmp
push
cli
fsubrl
xor
rcll
scas
ret
sub
mov
fdivrl
addr16
fdivr
mov
adc
aas
pop
jmp
xchg
push
ds
das
pop
pop
cmp
sahf
data16
mov
xchg
outsl
dec
push
adc
test
movl
jmp
stos
add
jno
daa
sub
shr
hlt
jp
out
cmpb
sbbb
mov
outsl
xchg
cwtl
jle
cmp
arpl
jb
add
movsb
ret
dec
stos
mov
call
xchg
xchg
movsl
pop
outsl
test
push
jnp
dec
push
mov
jnp
aad
pop
int
test
pop
jns
mov
loopne
pop
inc
fmuls
mov
add
fildll
divps
xchg
sahf
subl
mov
dec
lcall
fists
jg
mov
adc
imul
xor
sub
or
cltd
adcl
clc
mov
scas
fwait
imul
jg
ljmp
sar
and
lods
jns
call
dec
outsb
nop
ret
mov
test
idivb
iret
push
push
adc
pop
jmp
push
es
sarb
outsl
fmul
fistpl
xchg
test
lods
mov
or
decb
lahf
int
inc
mov
ficoml
dec
testb
xchg
ja
cmpb
jae
inc
pop
pop
fmull
mov
movsl
sbb
pop
xchg
popa
ss
cwtl
add
mov
dec
mov
mov
push
out
and
adc
jecxz
dec
mov
push
pop
xchg
xchg
inc
insb
rorl
pushf
mov
pop
js
aas
adc
adc
std
shrb
push
xor
inc
psllw
mov
xchg
xor
xor
xchg
pop
mov
stos
inc
adc
lods
mov
mov
insl
fisubrs
iret
cmp
sub
das
add
in
jmp
fmuls
inc
es
pop
inc
push
and
scas
rcrl
xchg
out
jo
rcrl
popa
out
aaa
add
loopne
out
cld
or
out
jno
cmc
rclb
not
stc
or
add
nop
cmp
mov
bound
imul
outsb
jge
cld
push
push
mov
push
leave
xchg
fsubrl
cs
push
sbb
cmp
divl
cmpsl
stos
lcall
or
jns
pop
rorb
pop
jmp
sub
repz
jecxz
adc
jmp
pop
pop
mov
add
mov
leave
mov
lret
mov
nop
in
add
jbe
lret
dec
dec
loopne
dec
pop
xchg
jmp
loopne
inc
pop
sahf
js
and
jp
pushf
mov
jg
in
lret
fcmovnb
je
adc
or
push
iret
mov
fcoms
and
mov
out
jp
dec
lcall
or
adc
mov
dec
mov
and
xchg
adc
fadd
loope
stc
cmp
dec
fldl
orl
addr16
orl
and
and
shrl
jle
xchg
xlat
sub
int3
mov
inc
sbb
xchg
dec
pop
cmp
adc
push
and
push
inc
insb
xchg
cmpsl
xchg
or
inc
push
adc
sub
into
pop
jo
pop
cmp
inc
and
jl
repnz
adc
mov
ja
rcrb
aaa
pop
push
push
cmpb
dec
out
sbb
inc
sahf
int3
pop
push
adc
fsts
stos
add
sub
mov
xchg
loope
imul
movsl
xchg
dec
xchg
jge
dec
mov
pop
mov
or
inc
push
mov
popa
push
sbb
pop
dec
mov
inc
and
fwait
and
aad
jbe,pt
lret
enter
mul
adc
sbb
push
aam
sbb
xchg
mov
jecxz
pushf
inc
pop
iret
stos
push
dec
sub
fldt
mov
dec
adcb
jo
pop
in
sbb
jmp
bound
push
sub
jl
mov
mov
out
out
push
ds
popa
push
adc
dec
lds
jbe
icebp
mov
notl
add
out
fimuls
addl
sub
test
lods
imul
mov
sub
repz
ss
enter
pop
repz
xor
nop
ds
stos
cmp
mov
xchg
pop
inc
cli
lock
pushw
enter
rolb
aaa
test
dec
jge
adc
fwait
cmp
dec
sti
popa
jo
shrb
scas
cmpb
adcb
push
lret
dec
push
andl
dec
jo
cmp
inc
shrb
xor
inc
xor
sub
add
push
in
pop
cli
jns
and
cmp
and
jle
enter
out
aaa
insl
sub
mov
int3
stc
daa
jbe
jle
loop
or
fwait
xchg
inc
stos
sub
inc
add
sbb
fnsave
repnz
xchg
js
rcl
cmp
movsb
lods
mov
sub
jnp
cmp
rcl
lret
int
enter
push
lea
jge
mov
mov
add
shrb
loope
neg
mov
xchg
jns
mov
mov
cmc
pop
mov
aaa
inc
sarl
ret
mov
test
std
scas
sbb
dec
les
push
adc
adc
out
pusha
push
cmpsl
lea
add
fcomps
sub
imull
mov
xor
test
push
add
mov
shl
popa
sbb
push
fnstenv
jbe
mov
mov
decl
push
cmp
in
ds
adc
leave
mov
out
dec
mov
test
add
aas
movsl
xor
lds
cmp
inc
sbb
cwtl
cmpsb
shr
mov
push
sbb
and
jae
sub
pop
sbb
popa
dec
sysret
fidivl
mov
test
cmp
stos
stc
call
popa
pop
punpckldq
lret
loope
and
ja
inc
and
pop
xchg
scas
jno
jno
insb
adc
sub
adc
push
add
inc
inc
and
push
cmp
cmp
into
jmp
mov
insb
clc
pop
and
cmp
repnz
xorb
inc
xchg
pop
dec
jno
mov
jno
adcl
test
pop
in
popf
cmp
mov
push
jg
das
addr16
xchg
inc
out
cmp
cltd
push
lods
xor
and
jl
int3
outsb
jne
outsb
shrb
adc
int
xchg
and
in
mov
xor
xor
inc
xchg
inc
cli
icebp
repz
enter
push
je
pusha
cwtl
mov
mov
ss
std
mov
lds
dec
sbb
loope
fcompl
call
mov
in
mov
push
nop
push
jg
add
imul
jae
insb
fisttps
scas
mov
cmpsb
pop
nop
insb
test
dec
rclb
inc
aad
aad
pop
pop
pop
and
ds
dec
test
or
loope
push
aas
mov
sbb
jns
enter
xchg
fs
mov
or
es
cwtl
int3
dec
shll
icebp
cmpl
dec
bswap
cmp
sub
in
jecxz
in
jne
test
fs
ljmp
insb
cmp
in
pop
je
aad
mov
dec
lods
push
hlt
lahf
ret
push
adc
adc
sti
out
or
aaa
jl
int3
xor
subl
inc
stc
sti
ss
gs
add
ljmp
pop
aaa
xor
cmp
stos
jge
cmp
mov
xor
dec
xor
test
insb
in
sub
or
jns
xor
mov
or
shlb
dec
int
push
test
sub
xchg
cmc
add
fcmovnbe
adc
jbe
inc
or
cmp
dec
inc
andb
ja
arpl
lea
imul
inc
das
cmpsb
and
and
push
xchg
pop
jecxz
scas
movsl
fstps
stos
jecxz
sub
lret
out
mov
daa
aas
ja
js
ss
into
mov
push
int3
push
dec
bound
jo
rcrb
inc
aam
xchg
sub
sbb
cmp
sbb
inc
pusha
out
mov
and
inc
push
sbbl
sub
inc
dec
sbb
xchg
lods
mov
lcall
xchg
aad
aad
cli
arpl
adc
fcom
jg
arpl
mov
hlt
sbbl
sub
shlb
push
imulb
leave
enter
roll
inc
and
lahf
sub
mov
mov
cmp
jge
jae
push
jno
or
out
pop
test
adc
push
adc
push
aam
in
vmovaps
mov
add
andl
dec
mov
jge
jb
fucomip
mov
jbe
dec
outsl
mov
test
insl
popa
aas
frstor
dec
addr16
lea
xlat
sti
idiv
xchg
icebp
cmpl
aad
gs
mov
xor
lcall
xlat
inc
clc
jmp
and
cmpsl
jo
sub
mov
jp
icebp
sub
cmp
xchg
mov
inc
mov
out
xchg
movl
loopne
gs
xor
stc
or
cli
or
daa
cpuid
xlat
fwait
das
call
ficoml
push
dec
cli
sbb
xor
fsubr
or
das
dec
ja
adcl
adc
idivb
xor
jmp
sti
pushf
rorb
lcall
stos
adc
adcl
scas
sarl
xlat
inc
pop
inc
shrb
cmp
cwtl
adc
pop
out
dec
sub
jl
mov
cmp
imul
ja
mov
mov
xchg
cmpsb
mov
xor
jmp
dec
js
push
xchg
scas
add
into
pop
pop
sub
add
sti
imulb
mov
in
cmp
fs
mov
jmp
jle
dec
mov
insb
adc
out
pop
fwait
dec
adc
popf
inc
or
outsb
cmp
popl
mov
int
test
inc
andb
xorl
jns
rcll
iret
fdivs
into
in
push
insb
cltd
xorl
jge
sbb
lods
insl
mov
mov
dec
cmp
mov
xor
dec
pop
jb
les
ljmp
in
leave
add
aas
or
movsb
and
inc
mov
mov
imul
push
mov
icebp
dec
adc
xchg
hlt
mov
sbb
lods
adc
test
or
add
pushf
xor
inc
loope
mov
adc
xor
xchg
adc
pop
mov
xchg
xor
pop
int
adc
mov
sti
stos
test
fidivs
nop
cmc
jns
xchg
or
push
shl
jno
inc
out
addr16
inc
pop
ret
out
icebp
mov
fs
rclb
xchg
jle
add
es
xchg
or
mov
outsb
repz
addr16
mov
push
fisttpl
stc
rolb
bound
nop
xchg
dec
pop
mov
and
sub
mov
fcomi
inc
mov
scas
idivl
sti
iret
dec
mov
mov
leave
fdivl
lods
mov
les
jno
jg
sub
jecxz
adc
mov
subl
or
scas
mov
xchg
cmp
cmp
lahf
mov
xor
lods
and
testb
cmp
fistpll
imull
add
cmp
lahf
sbb
dec
das
lret
test
pop
inc
push
std
fs
xchg
mov
jl
out
inc
repnz
pop
rclb
jnp
lcall
and
sahf
clc
ret
mov
xchg
xor
lods
cmp
inc
shl
pop
and
gs
ljmp
push
rclb
popl
test
xchg
mov
add
lea
cmpsb
jp
lret
lea
data16
fnstcw
out
push
xor
jns
nop
mov
nop
xchg
idivl
prefetch
adc
iret
sahf
sar
inc
adc
adc
adc
mov
jl
lods
push
and
aam
lcall
mov
incb
pop
push
mov
jg
sub
sub
movsl
mov
xlat
mov
ljmp
in
stc
mov
cmp
or
mov
adc
int3
add
orl
inc
imul
xchg
test
and
repnz
out
inc
jl
cltd
dec
daa
adcb
sbb
mov
pop
loopne
dec
je
sahf
xor
sub
mov
cld
in
and
or
adc
mov
cli
sbb
sbb
sbb
stos
pusha
test
nop
jecxz
cld
add
cmp
rcrb
pop
ja
cmp
lret
cmp
lcall
pushf
push
and
mov
sbb
pushf
jge
sub
movl
or
cmpsl
sub
mov
mov
daa
push
gs
and
dec
push
mov
dec
xchg
sub
mov
xchg
mov
imul
push
test
mov
mov
sahf
in
outsl
gs
call
mov
sub
div
aaa
les
arpl
and
cmp
aam
ja
mov
sub
mov
add
stos
shrb
pop
pop
out
in
rclb
inc
sub
daa
jecxz
fdivp
mov
mov
pop
push
add
cmp
lret
hlt
mov
cmp
mov
sub
jmp
test
mov
mov
lret
jae
scas
mov
hlt
loopne
lock
mov
or
arpl
cwtl
icebp
orb
scas
inc
fndisi(8087
notb
sub
or
sbb
fbld
ljmp
mov
lea
stc
movsb
jns
test
in
add
outsb
hlt
pop
pushf
nop
pop
jne
or
pop
mov
cmpsb
sbb
cs
xchg
xor
aam
pop
loopne
mov
sahf
data16
mov
imul
jne
je
push
xor
outsl
enter
mov
push
mov
lahf
aas
pop
cmp
and
mov
clc
andl
je
xchg
sub
cmp
xchg
xchg
inc
data16
icebp
mov
shlb
cli
cmpsb
dec
or
push
and
push
fsubrs
lods
cwtl
mov
lcall
inc
xchg
cs
pop
pop
mov
je
in
or
sub
jge
fildll
addr16
rcl
sar
jge
lea
out
xor
movsw
xchg
pop
and
imul
nop
sub
daa
fstl
mov
inc
popf
mov
mov
ja
lcall
jns
add
cmpsb
stc
add
lcall
mov
mov
jns
cwtl
or
adc
pop
add
shrb
fdivrl
out
xchg
rcrl
sbb
cmpsb
or
cltd
pushf
ret
and
cwtl
or
nop
adc
call
jae
repnz
mov
inc
sub
mov
push
jns
xorl
cltd
inc
and
xor
pusha
out
cs
inc
aam
inc
adc
aad
shr
repnz
adc
lret
and
add
adc
testl
sbb
lock
jl
out
test
or
dec
aas
add
mov
pop
mov
jge
das
cmpsl
aas
add
repnz
push
add
push
aas
sbb
ret
xchg
sbb
and
pop
fsubrp
shlb
in
les
rcll
push
fcomps
sub
outsb
ja
pop
and
lret
outsb
mov
adc
rcrb
nop
mov
pop
xchg
pushf
loopne
dec
aam
or
xchg
pop
jmp
mov
pushf
dec
xor
xchg
mov
ss
jl
xchg
inc
icebp
test
addr16
sub
lods
iret
nop
jns
add
aas
pop
adc
fistl
lcall
jne
mov
sti
mov
mov
pusha
xor
std
mov
sbb
mov
mov
add
and
imul
inc
mov
decb
out
mov
imul
push
cwtl
ret
mov
sbb
fdivr
inc
push
pop
mov
pop
push
aas
push
int3
xchg
hlt
push
shlb
or
jg
out
in
pop
sbb
iret
mov
arpl
inc
lret
roll
mov
mov
cmc
cwtl
pop
push
call
loop
lret
xchg
xor
xor
jp
jno
in
jno
cli
in
nop
mov
dec
xor
es
or
mov
hlt
sub
mov
xor
push
xor
insb
data16
jge
decl
xchg
sub
cmc
jb
andb
mov
scas
jmp
pop
pop
in
in
mov
pop
std
xor
mov
push
sti
movsl
dec
out
sbb
push
dec
cmp
sub
jno
mov
out
xchg
sub
lds
xchg
imul
mov
dec
pop
sbb
sbb
fwait
into
popaw
test
pop
cmp
add
jle
outsb
and
lock
movsb
cmpsb
push
les
push
int
dec
adc
cmpsl
test
mov
mov
inc
sub
test
stc
inc
mul
xchg
jno
rcl
clc
out
shlb
mov
dec
cmc
xchg
cmpsb
sbb
stos
mov
iret
dec
negl
push
fisubrs
imul
rolb
xchg
push
dec
jp
or
mov
mov
cmp
jae
sarb
sbbb
aaa
mov
jl
jns
cmpsl
orw
hlt
aaa
das
or
cmp
mov
nop
js
lahf
sub
sbbl
sti
shr
loopne
iret
inc
rcrl
xor
push
outsl
jo
in
cmpsb
lea
xor
xor
or
mov
mov
lahf
xor
mov
push
or
sub
stos
inc
add
dec
or
or
das
out
popa
ret
fs
inc
mov
lret
mov
call
mov
push
jns
sub
sub
loop
outsb
not
je
push
repnz
jns
jno
repnz
dec
pop
popa
das
shll
int
or
int3
add
pop
jne
mov
xor
fwait
xchg
dec
int3
enter
stos
mov
int
incl
mov
xor
adc
mov
les
in
jno
aam
push
int
negb
jecxz
rclb
jmp
xor
adc
stos
ss
xlat
loope
lds
pop
pusha
or
ja
xchg
mov
mov
ja
or
ror
push
js
mov
out
cmp
sub
fiaddl
out
gs
data16
pop
jp
push
add
aas
inc
stos
mov
aam
mov
inc
jge
mov
jb
mov
adc
fbld
or
sub
add
or
pop
hlt
stc
into
mov
rcrl
inc
insl
mov
mov
add
incb
aas
subl
addr16
shll
mov
pmaxub
cld
loope
sarl
and
mov
daa
jg
xor
aam
push
pop
mov
mov
in
pop
ficoml
sti
in
jbe
repnz
rcrl
jae
cmp
dec
popf
xor
ficompl
xor
dec
xchg
cmp
lret
insl
and
sbb
or
lea
add
dec
xlat
sub
aam
in
icebp
jo
sbbl
aam
and
mov
icebp
mov
icebp
stos
inc
sarb
pop
fwait
dec
add
out
fdivl
hlt
jp
mov
xchg
mov
mov
fcmovbe
dec
test
loope
in
cmp
data16
lea
fsubp
mov
lea
rcrb
lcall
idivb
lahf
inc
lock
push
shll
or
inc
cwtl
jo
jbe
cmp
dec
push
mov
fadd
push
pop
test
push
cmp
or
popf
and
rclb
pushf
xchg
in
mov
popf
cmp
or
dec
jne
movsl
aam
add
je
mov
cmpsb
inc
insb
dec
les
ja
dec
enter
jne
scas
insl
jmp
sbb
sahf
fst
ljmp
mov
jg
imul
push
stc
mov
das
fidivrl
js
mov
sub
and
mov
adc
out
daa
test
inc
fsubs
fsts
mov
mov
push
push
lods
mov
xchg
inc
sbb
dec
cs
clc
or
inc
sbb
lret
pop
leave
insb
dec
repnz
adc
in
sub
fidivl
cmp
shl
loope
testl
xchg
scas
sbb
out
hlt
mov
pop
popf
nop
add
push
mov
test
pop
sbb
int
add
out
nop
rorb
pushf
lcall
pop
jp
jae
hlt
pop
mov
inc
dec
daa
lret
repz
jne
inc
js
test
cmp
cmp
add
mov
std
lods
test
push
mul
lcall
mov
arpl
rcrb
outsl
mov
notl
stos
stc
jb
adc
pusha
imul
ljmp
lea
mov
sarb
sbb
lods
xor
adc
and
pop
pop
movl
pop
call
bound
xor
cmpl
cs
push
jl
xchg
sar
loopne
sbb
outsl
sub
dec
imul
adc
dec
dec
scas
add
mov
pop
cmp
movsl
xor
jbe
in
push
test
dec
push
jnp
sub
xor
adc
stos
add
iret
or
and
jne
or
lea
cmp
dec
cmp
and
nop
sub
xor
sbb
scas
push
mov
inc
std
sub
or
sar
ret
inc
or
push
jg
cmp
repnz
je
repz
push
sbb
repz
outsb
jns
or
loop
xor
mov
cltd
xchg
repnz
sub
loopne
cmp
dec
andb
mov
fnstcw
daa
sbb
leave
inc
cmp
jg
sub
jecxz
mov
inc
orl
mov
aas
loope
xor
mov
int3
pop
xchg
ljmp
mov
loopne
mov
mov
jge
adc
outsl
or
inc
xor
jmp
outsl
inc
call
adc
mov
lahf
cmp
test
lods
loop
bound
mov
fidivs
jg
jecxz
xchg
and
sub
pop
and
sbb
sbb
arpl
jp
or
or
fdivrs
clc
push
pop
or
sti
mov
lods
inc
push
mov
push
mov
stos
add
stc
sbb
scas
dec
xor
das
push
mov
xchg
repnz
dec
rorl
in
arpl
push
cmpl
push
lret
scas
jg
mov
mov
sbb
leave
sbb
mov
idivb
push
mov
or
jne
jmp
mov
sbb
sbb
ja
mov
sbb
shrb
mov
aad
mov
fcmovnb
push
add
por
int
mov
push
cs
inc
push
mov
xchg
push
add
cmpl
inc
fs
call
cmp
pop
xor
sub
popa
inc
xor
test
cmpsb
clc
adc
mov
cli
sarb
jmp
pop
add
mov
inc
jb
inc
add
sahf
lods
test
dec
inc
adc
push
cwtl
out
adc
jecxz
mov
loopne
repnz
mov
and
cmpsl
push
or
dec
xchg
gs
shrl
dec
sub
cmp
jl
mov
loopne
mov
push
iret
dec
mov
add
aaa
xchg
outsl
add
pop
dec
rorl
rcpps
dec
and
push
movsb
lret
ret
xlat
out
sbb
add
sub
movsl
cmp
sti
or
fstps
push
mov
test
jbe
addr16
jns
sub
movsb
push
nop
fwait
push
sahf
adc
inc
sub
and
outsb
stos
add
loop
push
nop
mov
mov
bound
cmp
psrad
inc
int3
xorl
pop
aad
jae
movsb
or
mov
loopne
inc
fdiv
xchg
inc
xchg
das
dec
xor
mov
dec
mov
push
std
cmp
push
lret
pop
sub
mov
sarb
jo
dec
es
addr16
rol
cmc
sbbl
mov
sbb
xchg
sub
adc
pusha
lods
xchg
sub
dec
push
out
sbb
adc
add
jecxz
daa
out
flds
pushl
adc
popf
inc
sarl
and
adc
popa
jae
repnz
pop
mov
add
jmp
mov
and
xchg
aaa
add
sub
xor
cmpsl
add
pop
popa
dec
adc
stos
mov
fstpl
adc
stos
test
push
gs
dec
sbb
loope
push
sub
das
pushf
jmp
sarl
sahf
pop
jecxz
add
repnz
int3
adc
xchg
cmc
cltd
adc
andl
jbe
call
lds
out
adcb
addr16
jb
or
fmull
loope
daa
shlb
std
pop
dec
push
loopne
cmp
push
mov
xor
call
jg
add
pop
sbb
pop
mov
out
outsl
rcll
push
cmp
xchg
fwait
mov
cmp
dec
mov
push
ljmp
dec
decl
lret
loop
or
mov
outsl
mov
test
or
test
hlt
das
lcall
inc
inc
daa
sub
cltd
lods
hlt
call
nop
add
adc
lcall
gs
addr16
notb
jo
push
aas
aad
add
sub
andb
pop
and
xor
in
xchg
jg
and
push
push
inc
dec
mov
loopne
shr
cmp
sbb
ljmp
xor
fcmove
in
and
adc
negb
push
es
dec
push
mov
and
pop
xor
push
xlat
jge
xchg
imul
jp
shrb
bound
mov
pop
and
aam
pusha
aaa
push
mov
hlt
mov
ljmp
adc
jb
inc
pop
fwait
xchg
in
dec
jne
test
out
dec
into
pop
inc
inc
aas
jecxz
pop
fstps
cwtl
add
clc
lods
inc
jecxz
subl
or
sub
and
inc
jecxz
aam
mov
dec
lea
cmpsl
gs
lods
push
daa
cmp
inc
xor
bound
ja
daa
test
xchg
mov
cmp
lds
sbb
adc
nop
mov
sub
sbb
dec
enter
mov
jg
mov
add
adc
das
ret
out
outsb
lret
mov
xor
lcall
call
xchg
dec
arpl
push
ficoml
scas
addr16
testb
push
jae
rcrb
xchg
dec
out
fcmovnb
and
xchg
fildll
lods
cwtl
or
js
fistl
pop
mov
cmp
mov
xlat
sub
inc
xchg
jne
dec
inc
cmpsl
out
popa
sub
xor
xchg
adc
mov
fisttpll
pop
and
in
fsubrs
and
and
lods
shll
lret
js,pn
mov
push
jp
xchg
imul
dec
shll
xor
fwait
add
repz
inc
jb
sbbb
imul
push
cmpsb
repnz
mov
mov
push
lods
roll
or
pop
mov
jnp
mov
or
mov
pop
jg
enter
push
mov
fistpll
lahf
cmp
pusha
adcl
add
icebp
pop
mov
pop
test
mov
insb
insb
and
les
xchg
stos
inc
lret
addr16
ret
popf
scas
mov
mov
mov
fsubrp
loope
inc
jecxz
xchg
push
add
loope
xor
fildll
push
imul
fistps
mov
call
adc
and
adcb
xor
pusha
test
sub
inc
dec
in
mov
int3
jbe
add
xor
loope
and
or
je
sub
cmpsl
fisubl
xchg
imul
and
xor
es
add
mov
xchg
mov
push
rolb
outsl
mov
mov
mov
mov
jae
pop
test
mov
inc
inc
fyl2xp1
push
pop
cmp
insb
mov
or
jecxz
xchg
aaa
or
inc
pop
inc
mov
lcall
or
pop
cld
stos
mov
xchg
int
in
mov
stc
pop
adc
repz
fmulp
sbb
setne
pop
sbb
mov
pop
lods
sbb
fldt
in
inc
sub
sbb
mov
xchg
xchg
int
mov
mov
sub
lcall
mov
bound
jb
out
sahf
fwait
and
and
pop
sub
call
lret
roll
jnp
mov
push
xchg
rcrl
dec
insb
mov
movsl
sti
jmp
xchg
mov
mov
ljmp
rolb
pushf
loop
mov
in
dec
aas
mov
movl
xchg
pop
mov
sahf
mov
shl
loop
mov
repz
gs
xlat
inc
and
orb
add
orb
call
add
mov
mov
mov
adc
jmp
aad
mov
adc
inc
adc
test
bound
add
cltd
inc
or
inc
dec
loop
scas
and
pop
enter
xchg
lcall
scas
repnz
gs
dec
rol
js
or
cmpsl
jbe
out
pop
rcll
push
and
xor
sub
loopne
ror
sbb
inc
mov
add
fdivrs
mov
fs
cmpsb
arpl
add
lods
mov
dec
pop
in
adc
subl
mov
arpl
push
add
outsb
jbe
mov
cld
jg
jbe
jns
shlb
mov
push
pavgw
movsl
or
push
jp
mov
mov
into
jnp
pop
xor
mulps
fcmovnu
push
aam
push
sarl
les
inc
scas
sbb
xor
lock
mov
xchg
adcl
imul
rep
scas
filds
mov
arpl
fldenv
mov
out
or
shrl
aad
lahf
scas
inc
aas
std
out
mov
decb
outsl
sub
outsb
mov
pop
or
or
cmc
scas
and
inc
fnstenv
jp
pop
push
jne
inc
pop
pop
and
std
mov
loope
jae
les
and
xor
insb
xor
xchg
and
sub
dec
cmpsb
cmp
cmp
out
out
out
dec
jmp
jle
cmp
jp
mov
cwtl
push
loope
add
jp
int
push
add
xor
loop
sub
inc
or
sub
lock
xor
aas
pop
mov
push
cmpsl
push
std
inc
and
lret
jg
adc
ds
popf
adc
adc
movsl
lock
dec
lcall
pop
test
lds
xchg
arpl
ss
outsb
popf
xor
lods
sti
test
in
lcall
or
aam
jne
push
xorb
push
cwtl
mov
xchg
icebp
lods
or
hlt
sub
jbe
fcomps
notl
add
cmp
push
inc
and
push
test
in
add
sbb
add
arpl
test
mov
rcrb
iret
frstor
arpl
mov
mov
fidivs
and
ljmp
aas
cmpl
jns
stos
insb
outsl
int3
or
lock
mov
test
pop
jmp
dec
push
outsb
out
mov
movsl
or
fst
bound
push
outsl
lds
sub
int3
dec
cmp
fsubs
aam
pop
push
xchg
fdivrl
adc
or
js
push
jbe
xor
cs
mov
and
push
mov
scas
ret
or
pop
and
dec
aas
jnp
and
imul
mov
rcl
sub
insl
and
or
jmp
movsl
fs
xchg
lahf
imulb
loop
cmp
or
or
adc
sub
leave
roll
or
popa
lea
mov
rorl
dec
add
js
push
es
hlt
fcoml
scas
aas
mov
mov
cmp
addr16
fadd
loope
sbb
push
jbe
adc
dec
cmp
andps
xor
mov
xchg
lret
sbb
sahf
cs
loope
jmp
cmp
xchg
xchg
or
aas
dec
mov
pushf
dec
in
lcall
mov
js
leavew
sbb
fs
push
fs
or
dec
and
jno
push
mov
ficompl
xchg
bound
sub
dec
jle
mov
lods
lret
fcoml
lods
jae
stos
jg
vcvtsd2si
xor
mov
sub
enter
sbb
mov
mov
pushl
adc
xchg
adc
test
sbb
daa
push
enter
jle
lock
jno
sahf
das
mov
outsb
lods
push
repnz
gs
sub
mov
mov
js
mov
dec
cwtl
pop
cmp
sbb
jle
mov
mov
sub
xor
pop
fdivr
xchg
aas
push
or
lods
mov
push
xchg
insb
add
stos
les
inc
inc
lcall
icebp
int3
cli
mov
addb
outsb
lret
cwtl
inc
add
test
rcrb
fisubrl
addr16
mov
mov
dec
shll
push
jo
jbe
movsb
sar
push
int
sub
icebp
pop
fadd
mov
mov
and
xchg
push
mov
mov
sbb
mov
push
mov
lcall
lret
ficompl
leave
or
into
std
popf
cld
jae
frstor
xor
push
cwtl
stc
divb
xchg
fcomip
or
outsl
bnd
roll
ret
dec
dec
mov
fldl
scas
aad
lods
jne
pop
stos
dec
jecxz
mov
inc
lea
jg
push
lret
mov
pop
and
jmp
clc
ret
mov
xchg
jnp
cltd
aas
xor
lds
ljmp
in
out
arpl
in
pop
add
adc
or
mov
clc
imul
adcl
mov
gs
adc
inc
jnp
cmpsl
xor
loopne
jnp
in
mov
sub
jl
sti
inc
mov
fadd
mov
sub
test
jecxz
sub
cmp
and
push
dec
dec
cmp
daa
mov
mov
scas
lods
lcall
adc
push
dec
mov
sub
cmp
scas
lock
lcall
cltd
loopne
pop
mov
add
ja
dec
and
push
shll
pop
xor
in
fildll
adc
pushf
or
lds
rorb
jnp
addr16
inc
bound
loopne
fmull
sbb
pop
xor
sar
dec
call
stos
mov
aas
fistps
and
or
and
inc
fstpt
fiaddl
cmpsl
mov
inc
sub
repnz
popf
cmp
addr16
cmpsl
and
ljmp
push
cld
aas
pop
and
jae
adcl
jo
mov
pop
insl
jge
enter
je
icebp
sbb
cwtl
add
sarl
cmpl
popf
sub
xchg
data16
jp
adc
adc
push
mov
mov
pop
test
xor
pushf
cs
mov
sahf
fildl
cmpsl
clc
cmc
sub
dec
imul
test
js
enter
or
hlt
cli
xchg
xchg
adc
jl
and
scas
movsl
mov
fists
mov
int3
push
fisttps
mov
or
insl
or
scas
push
push
jo
cmpsb
dec
callw
inc
xor
ret
in
dec
sbb
loop
mov
sub
mov
jl
out
dec
ljmp
scas
js
push
cld
sbb
in
pop
push
movsl
hlt
mov
inc
sub
pop
iret
lds
ljmp
stos
cmp
mov
mov
negl
in
mov
lret
repnz
popf
in
dec
sti
dec
sub
push
outsb
incl
push
xor
std
mov
mov
loop
sbb
xlat
cld
lods
inc
jae
jmp
sub
mov
inc
es
and
pop
icebp
push
push
and
jo
jo
roll
or
xor
lahf
sbb
clc
sub
repnz
or
into
mov
cmp
push
jmp
mov
push
push
dec
inc
dec
jl
fisubl
sub
int3
test
and
add
dec
fs
push
jg
mov
pushf
lret
js
shlb
jl
sbb
pop
jg
inc
lock
cmpsl
cmpl
fldcw
jecxz
mov
adc
icebp
cmp
fsubrl
sub
roll
xchg
and
test
leave
ja
aaa
ret
movsb
mov
jmp
sbb
enter
rorl
ret
dec
push
loop
sbb
and
cltd
cltd
xlat
testl
or
je
mov
movsb
add
xchg
mov
lock
ret
pop
pop
mov
push
and
xchg
fidivrs
mov
outsb
xor
or
adc
outsb
and
adc
pop
ret
jae
sbbb
sahf
xchg
pop
sahf
shrl
sbb
cmp
mov
lret
data16
loopne
div
loopne
xorb
pop
mov
push
in
fs
pop
push
pop
call
sub
scas
sub
test
jg
xchg
sar
rorl
vpmaxub
je
rclb
jnp
xlat
lods
sti
mov
and
sbb
mov
mov
mov
jno
stc
mov
repz
xor
mov
insl
xchg
mov
mov
bound
push
push
mov
mov
cld
pop
ljmp
sbb
xor
dec
rcrb
aas
or
repnz
mov
adc
popf
push
add
bound
dec
adc
sbb
adc
sbb
aam
pop
or
pop
jle
mov
mov
sub
cltd
cmp
mov
dec
inc
repnz
fists
push
pop
add
xor
rcrb
sbb
xchg
test
cs
scas
inc
repnz
ljmp
out
arpl
mov
inc
jg
mov
jbe
sub
pop
orb
adc
popa
loopne
lahf
and
xor
lods
jnp
and
insb
push
mov
and
test
jp
xchg
and
aaa
rcrl
aaa
mov
xchg
pop
pusha
mov
movsb
in
arpl
ljmp
mov
sbb
or
add
push
aaa
lahf
sbb
push
nop
sbb
out
xchg
sbb
fwait
lahf
je
push
es
cwtl
test
lahf
cmp
std
into
rcrl
nop
es
out
inc
lds
imul
xlat
cvtpi2ps
push
cli
enter
sub
test
fcomp
lods
icebp
into
mov
and
mov
mov
imul
sub
pop
jecxz
jmp
mov
xchg
add
les
in
subl
lahf
inc
ret
test
push
hlt
int
inc
sub
mov
xor
jnp
xor
jg
in
lcall
bnd
add
jbe
imul
int
mov
clc
xchg
add
jg
add
lock
jns
clc
arpl
fstpt
adc
imul
call
push
sub
sbb
lock
sub
or
mov
les
adc
adc
xchg
pop
out
pop
popa
inc
fiaddl
cli
insb
mov
lahf
mov
adc
sub
roll
dec
push
push
jbe
lods
jno
in
xor
jns
push
in
push
add
cld
inc
in
daa
mov
xchg
fcompl
and
push
add
pop
in
nop
mov
testb
push
ficoml
int3
xchg
lock
xchg
mov
scas
imul
mov
test
lret
mov
or
mov
sub
pop
cmp
cmpsl
mov
inc
std
jmp
fnsave
mov
jp
or
or
sahf
xchg
mov
push
inc
insl
jg
add
jae
pop
daa
sub
push
pop
je
push
les
decb
call
and
inc
xor
push
xchg
push
fadd
sub
stos
inc
out
mov
mov
arpl
test
or
pop
dec
popa
inc
aas
sar
jp
std
cmp
push
mov
fadd
sub
imul
roll
fucomip
aas
cld
imull
jo
rcll
add
bound
push
mov
repnz
insb
in
mov
shlb
incb
lcall
cmp
aad
mov
lret
pop
sahf
add
cmp
push
pusha
aad
pop
mov
xor
pop
jle
sub
push
push
rolb
add
push
fmuls
mov
in
mov
jmp
inc
or
es
ret
cmc
jnp
and
mov
adc
inc
fdivp
cli
lcall
xchg
cmpsb
imul
mov
mov
jg
sbb
adc
adc
in
add
and
inc
je
subl
push
ficomps
xor
inc
scas
cmp
inc
mov
mov
mov
push
dec
sub
mov
pop
jle
mov
loop
in
dec
insl
icebp
inc
ss
inc
push
call
icebp
xchg
cmp
xor
shlb
cli
pushf
pop
mov
xchg
test
scas
out
inc
and
adc
and
ret
xor
ficompl
or
pop
in
pop
pop
adc
dec
cmp
xchg
adc
fadds
lcall
jae
popa
scas
adc
pop
addb
out
push
insb
ss
mov
imul
pop
out
xor
mov
lods
inc
outsl
rcll
inc
inc
test
dec
dec
lods
mov
add
lds
lock
in
lods
movsb
pushf
or
fs
xor
pop
pop
ret
xchg
pop
jo
add
cwtl
fisttps
xor
inc
je
out
sbb
mov
jbe
adc
sti
loope
pop
push
rcl
out
out
in
lock
pushf
test
dec
dec
stc
sbb
jmp
nop
fdivrs
sub
pop
cmpsl
pop
dec
or
loope
push
rclb
jno
mov
fmull
push
add
mov
or
mov
push
mov
std
sub
popf
lret
or
mov
jb
scas
and
lds
push
jg
aaa
dec
ret
and
rorl
add
daa
call
mov
loop
repz
adc
jae
xchg
imul
inc
out
lds
sub
cmpsl
pop
repz
icebp
mov
fnstsw
out
sub
cs
jl
jp
pop
iret
test
orb
fistl
pop
pop
cmp
xor
stc
stos
je
nop
xchg
popf
scas
mov
pop
pop
xchg
jmp
jns
mov
mov
mov
xchg
ficoml
and
jg
add
cmp
and
mov
cmp
adc
and
add
negl
fmuls
shlb
lock
cmp
scas
jecxz
push
pop
inc
cld
mov
fisubrl
shlb
sub
hlt
arpl
test
ds
mov
fs
sub
inc
adc
mov
xchg
out
xchg
mov
mov
fisttps
xchg
and
insl
stos
icebp
imul
loopne
movsl
pop
push
inc
gs
lea
mov
aaa
sub
cmpsb
adc
xchg
jno
push
mov
adc
insl
lret
pop
dec
int
scas
bound
pop
movsl
gs
fisubrs
mov
fimull
jp
xchg
cmc
push
js
pop
aas
daa
not
out
and
mov
fmull
in
adc
and
mov
xor
lods
addr16
outsb
xchg
adc
dec
mov
add
add
and
scas
jle
xchg
dec
xor
pushw
mov
mov
out
pop
add
stc
xchg
jmp
pushw
jo
es
stc
add
bound
into
outsl
dec
lcall
add
stc
nop
stos
or
pop
dec
jnp
push
ret
mov
ss
fisttpl
pop
cmpsb
dec
outsb
inc
push
out
mov
and
add
or
cld
push
ljmp
or
rclb
jns,pn
ret
xchg
icebp
stos
inc
imul
jmp
xor
jmp
xor
in
push
jp
mov
mov
mov
js
mov
sarl
mov
cli
jo
mov
mov
mov
negl
jp
mov
scas
cmc
sub
aam
das
mov
in
push
rorb
inc
jl
aam
sahf
push
int
leave
outsl
mov
in
outsb
pop
and
and
rorb
inc
mov
mov
leave
mov
pop
xor
sbb
push
das
sbb
and
mov
aad
mov
dec
dec
lahf
std
int
test
mov
mov
pop
je
or
test
icebp
dec
lcall
cmpb
mov
cld
imul
mov
test
adc
pop
xor
imul
fdivrs
pop
mov
scas
inc
stc
nop
ja
or
clc
insl
jne
push
cmpsl
sub
cmp
push
inc
sbb
push
cltd
inc
sub
loope
pop
mov
insb
mov
xor
aas
adc
push
dec
filds
fld
xchg
inc
adc
jp
adc
push
jecxz
dec
int3
les
das
jmp
rorb
xor
dec
std
repnz
jmp
sti
cmpl
cmpsb
mov
test
aad
scas
push
clc
stos
pop
fnstsw
mov
add
mov
in
int
lds
sbb
ds
imul
fidivs
pop
loop
push
push
mov
mov
femms
or
cmp
add
inc
sbb
outsl
enter
dec
mov
push
sbb
mov
cmpsl
adc
cmpsl
test
daa
push
ljmp
nop
mov
orb
push
imul
xor
and
xor
fmull
hlt
cmp
mov
ret
cmp
insl
sub
xchg
pop
dec
mov
aaa
mov
xor
xor
adc
fstpl
fidivs
in
inc
mov
lret
mov
std
mov
pop
lods
cs
popf
ret
loope
mov
pop
loopne
outsb
sub
subl
cmp
and
inc
lock
sbb
cmp
repnz
xor
jmp
jno
test
sbb
repnz
mov
rol
stos
and
aas
dec
cmp
xchg
clc
call
dec
subl
dec
dec
inc
sti
and
add
mov
push
js
mov
ljmp
mov
pop
int3
push
mov
inc
mov
dec
sbb
fwait
push
loope
xor
lahf
xor
pop
sbb
lods
hlt
out
sbb
cmp
lods
pop
out
cs
sub
shrb
push
xchg
cli
clc
pop
in
mov
aad
add
jne
mov
les
mov
add
loope
adc
fcoml
sub
loop
repz
mov
cmc
loop
out
loopne
addr16
mov
adc
pop
outsl
idivl
mov
aam
scas
mov
inc
lea
jae
and
push
jbe
lcall
imul
or
shlb
sbb
fldenv
test
lods
movsl
xchg
cmp
inc
lret
fistl
lds
pop
jne
dec
sti
lods
xchg
pop
and
imul
adc
xor
lods
aas
inc
inc
nop
pushf
sub
mov
mov
das
jecxz
jecxz
sub
jecxz
repz
repnz
xrelease
ret
leave
cs
inc
popf
adc
xor
cmp
sub
fidivrs
loopne
mov
sahf
and
in
adc
mov
xchg
mov
xchg
dec
xor
or
iret
mov
mov
std
push
aaa
call
jno
cmc
mov
mov
dec
mov
popf
add
lahf
pop
ljmp
pop
push
lcall
adc
jmp
push
add
xor
mov
pop
mov
int
pop
jmp
cmp
addr16
cmp
insl
mov
mov
lret
sarl
mov
movsb
push
data16
mov
push
dec
and
and
ss
jmp
ss
mov
adc
pop
or
pop
nop
dec
enter
mov
dec
cs
scas
lret
jb
adc
sub
pop
int3
outsl
mov
inc
adc
fwait
js
cli
xchg
mov
mov
sub
pop
lcall
jl
and
pop
cmp
sbb
mov
stos
imul
mov
pusha
movsb
mov
data16
jb
and
lds
in
inc
repz
test
fisttpl
inc
mov
into
or
mov
push
sub
dec
movd
push
stos
xchg
ja
mov
loopne
lock
lret
dec
sbb
cmp
jl
sub
adc
ss
lcall
decb
cmpsb
dec
lret
add
dec
sub
pop
cmc
das
leave
enter
push
sbb
rcll
out
push
inc
in
mov
mov
std
lods
bswap
sub
shll
or
ljmp
iret
out
sbb
dec
pop
das
stc
mov
inc
mov
sarl
je
push
mov
ret
or
and
cmp
loopne
sbb
jecxz
das
mov
sbb
faddl
outsl
sti
fs
imul
stc
jge
into
arpl
insl
leave
stc
fcomip
adc
push
push
inc
push
mov
jmp
jo
loopw
push
es
and
xchg
push
xor
in
jl
cmovo
xor
dec
imul
push
dec
subb
out
js
pop
popf
pop
jbe
hlt
jne
push
xor
pop
jbe
test
lea
dec
jno
pop
ss
dec
into
pusha
add
cmp
inc
add
jno
mov
push
fists
jno
adc
jg
jb
mov
int
adc
and
push
addr16
dec
or
mov
or
jns
fwait
mov
and
sub
daa
mov
sub
ja
cmp
cltd
inc
lcall
es
outsl
xchg
xor
idivl
inc
decb
mov
jl
mov
add
mov
fcmovu
add
push
cwtl
and
in
sub
stos
or
push
xchg
adc
dec
out
adc
add
call
jle
repz
ljmp
scas
leave
and
ja
mov
adcb
xor
pushf
inc
mov
lahf
and
dec
xor
pop
xor
jmp
mov
out
ja
int
fwait
mov
jb
out
pop
xchg
sub
mov
inc
jp
insb
jmp
ret
lds
inc
and
sub
mov
dec
jge
mov
shll
push
popa
push
cmpl
fstpt
movsl
fmul
cmc
popw
gs
pusha
xor
je
movl
nop
inc
push
sbb
jnp
sbb
lods
dec
cmp
cmp
shr
and
pop
lods
and
mov
icebp
pushf
adc
add
aaa
inc
lcall
stos
dec
cmpb
xor
addr16
and
dec
out
fs
mov
xchg
dec
fisttps
outsb
sub
pop
jne
lods
or
push
iret
ja
and
out
je
imul
pushf
stos
insl
push
hlt
mov
inc
enter
sub
insl
mov
lea
xchg
in
mov
ja
pop
in
mov
fistl
adc
jecxz
jge
pop
add
jle
inc
mov
jg
in
mov
sbb
cmp
add
jno
inc
orl
dec
loope
iret
fdiv
mov
ja
mov
fsubl
cmp
and
mov
rcrl
rorb
or
nop
ljmp
adc
in
xor
mov
adc
ror
call
clc
aas
cmp
in
jne
push
jg
or
xor
jg
shufps
add
orl
sub
movsl
pop
or
mov
cld
add
jnp
dec
or
clc
rolb
add
pushf
fwait
xchg
sti
mov
in
jne
pop
or
frstor
loop
mov
hlt
jge
out
rol
pop
call
aas
stc
shlb
stos
icebp
inc
ficompl
popa
sbb
push
and
inc
push
cmp
mov
mov
es
xchg
xor
pop
sbb
push
sub
pusha
sbbl
in
jno
outsl
xchg
pop
movsl
cmpsl
pop
jg
lea
scas
xchg
pop
and
xor
in
push
mov
jmp
div
out
dec
and
add
dec
lods
fnstcw
or
or
cmp
xchg
jge
shll
mov
sbb
in
mov
loope
ja
std
addl
fsubl
stc
mov
jp
lods
xor
or
js
xlat
inc
pop
mov
xor
js
int3
cltd
adc
out
jns
or
out
push
jl
jp
pop
insl
push
inc
push
mov
pcmpeqd
xlat
lock
ss
lods
jmp
aam
cli
sub
or
insl
sbb
or
mov
pop
cmp
lahf
pop
rol
lahf
pop
fistl
push
mov
add
cmp
lret
mov
mov
add
enter
leave
ret
mov
loopne
dec
add
sub
cmp
pop
iret
sbb
bound
push
mov
jge
xchg
or
iret
xchg
jmp
adc
jne
or
pop
xor
mov
dec
paddd
scas
lret
mov
jne
ja
sub
inc
cmp
fwait
dec
fwait
adc
mov
or
leave
test
dec
pop
mov
dec
test
inc
lock
pop
loopne
jae
test
sahf
and
ss
test
jge
xorb
adc
inc
inc
sub
pop
jo
std
andl
loope
dec
scas
out
je
movsb
add
movb
mov
pop
stc
xchg
mov
rol
addr16
imul
pop
add
lret
mov
orb
mov
les
cmp
dec
jl
pop
dec
sub
add
cmp
addr16
rolb
inc
xchg
pop
or
out
pop
out
movsb
cmp
xor
push
pop
and
mov
seta
ljmp
cmpsl
inc
inc
jp
pop
in
ficoml
in
sub
or
addr16
xchg
mov
mov
xchg
js
pusha
mov
out
pop
mov
mov
mov
insb
pushf
orb
in
cwtl
add
add
mov
mov
hlt
repnz
imul
filds
inc
jne
adc
xchg
cmp
fsubl
loope
repz
mov
cmpsb
je
mov
push
bound
adc
push
mov
xchg
wrmsr
data16
out
icebp
out
add
and
je
cmp
xchg
in
orb
popa
icebp
out
inc
xchg
fs
mov
int
or
inc
and
mov
dec
int3
and
ficompl
adc
test
mov
sbb
js
cmp
sub
push
test
movsb
lods
imul
adc
add
xchg
pop
mov
pop
xchg
cli
das
les
push
aam
adc
pushf
test
sahf
fdivrl
mov
jecxz
sub
jg
or
xchg
cmp
sbb
in
stos
out
jns
cmp
cmp
adc
ret
pushf
cmp
ret
jns
jmp
push
loopne
int3
mov
es
dec
arpl
pop
or
imul
xor
xchg
icebp
lret
push
xchg
inc
sahf
mov
push
loop
sbb
push
idiv
rcrb
push
mov
cmpsl
mov
and
outsl
fsubl
mov
mov
dec
and
ret
insb
nop
add
sub
loope
mov
cmp
push
call
cli
cmp
out
movsl
dec
adc
xor
jecxz
lods
aad
xchg
and
aas
mov
cmp
push
movsl
cld
bndldx
cs
loop
dec
adc
push
loop
adc
stc
pop
pusha
cmp
pop
push
aas
bound
sbb
mov
sub
xor
ljmp
loop
aaa
lcall
mov
xchg
mov
lcall
adc
pushf
jbe
inc
sti
arpl
iret
mov
jle
lret
push
ss
shll
push
clc
pushf
leave
inc
mov
cmp
leave
inc
cwtl
and
out
leave
stos
push
std
rorb
fwait
push
rol
cmp
loope
push
pushf
push
xchg
push
mov
aaa
or
pop
xor
cwtl
lds
mov
lock
imul
mov
mov
mov
es
repnz
mov
aas
shrb
adc
mov
push
sahf
sarl
and
test
cmp
ret
pop
mov
popf
push
jb
bound
xchg
push
sbb
test
jg
loope
cs
fcompl
fisubl
in
ret
adc
xchg
pop
adc
sbb
imul
cmp
daa
pop
xchg
lret
xlat
inc
dec
add
add
les
out
out
sub
dec
fbstp
inc
rorb
imul
outsb
fstpl
into
sub
xor
sbbl
inc
fs
mov
test
sub
sub
in
jbe
pop
repz
cmp
aas
add
inc
popa
cmp
cmp
xchg
dec
add
repz
xor
out
mov
xor
xor
aaa
mov
popa
sub
mov
push
leave
push
dec
out
inc
or
jp
push
aaa
adc
cmp
add
sahf
mov
push
popa
jnp
cmp
cmp
and
lock
cltd
out
sti
push
inc
mov
scas
por
ret
mov
repz
push
mov
pop
adc
cmp
popa
lret
hlt
xor
mov
jmp
insl
loop
fnstenv
lea
ret
arpl
testl
aam
movsb
mov
pop
or
sbb
fadd
push
pop
sbb
imul
and
xor
pop
sbb
pop
xorl
mov
test
insb
sahf
adc
rolb
mov
or
dec
movsb
fcomi
push
pop
nop
aas
xlat
mov
adc
rcrl
sub
popf
cmp
inc
mov
test
stc
repz
pop
enter
and
or
ds
ja
int
movswl
xchg
adc
sarb
scas
scas
hlt
mov
sub
fwait
out
pop
xor
xlat
add
pop
mov
arpl
push
jl
mov
shlb
sub
pop
sub
stos
int3
out
pop
out
loope
xchg
sub
xchg
pop
cs
pop
shrb
lods
adc
ret
xor
imull
out
cs
clc
in
xchg
add
mov
adc
nop
es
cmpsl
dec
xchg
loop
xchg
xor
out
shlb
fwait
sbb
rcr
sbb
mov
hlt
std
or
xchg
xchg
pop
out
shll
and
stos
and
and
mov
aam
sbb
nop
sbb
sbb
lahf
mov
push
shlb
xchg
cli
nop
outsl
pop
jg
mov
push
or
cmp
and
popf
push
fidivl
out
enter
movsb
dec
es
and
mov
adc
sub
xchg
cmpsb
clc
cmpb
mov
mov
or
scas
hlt
xlat
popa
in
aaa
mov
or
mov
lret
push
push
imul
pusha
imul
stos
mul
in
mov
pop
ljmp
push
xor
test
sub
mov
lret
nop
mov
nopl
movsl
pop
and
fildll
fsubrs
js
lcall
jnp
jle
cltd
mov
mov
daa
or
cli
mov
adc
lea
adc
sti
adc
mov
stos
adc
push
push
jnp
ss
test
xorl
fists
rcr
popf
add
enter
push
jno
inc
insl
dec
inc
in
shlb
add
add
orb
jmp
in
fimull
lock
pop
inc
cwtl
cwtl
mov
push
and
sbb
aad
cld
cltd
ljmp
pushf
es
test
mov
data16
dec
stc
jb
ljmp
or
sub
mov
mov
add
push
dec
into
jp
sbb
mov
xchg
push
cmp
movsb
pop
mov
cmp
lcall
xor
repnz
jae
jg
leave
fldl
pop
into
insl
in
pop
mov
ljmp
sbb
jl
lock
cmp
arpl
pop
sub
push
fisubrl
aam
mov
into
inc
xchg
repnz
and
mov
dec
fimuls
repnz
add
test
and
scas
test
cmpsl
fisttpl
pop
mov
inc
sub
ret
clc
push
cmpsb
xchg
stc
mov
jae
call
shrb
and
out
adc
sub
jnp
das
aaa
cmp
out
lock
orb
jp
mov
xchg
mov
sbb
roll
shrl
outsb
sub
cmpsb
xor
ss
pop
sbb
and
mov
xor
ja
loop
lcall
pushaw
cmp
cmp
cmp
inc
test
adc
roll
mov
ja
sbb
or
gs
ffreep
xchg
sub
xchg
mov
js
pop
popf
adc
out
sub
cld
mov
dec
insb
sbb
dec
in
xchg
into
mov
cli
add
add
scas
jmp
xor
lahf
das
xlat
fst
stc
sarb
fisubs
xchg
xor
cmp
push
out
jo
std
aaa
fmul
jge
imul
mov
mov
xchg
out
pusha
int
mov
inc
add
push
daa
sub
and
stos
fists
jle
jle
ja
xchg
jle
sub
xor
decb
popf
jecxz
insb
push
insl
es
in
mov
and
repnz
outsl
fisttpll
aad
xor
rcr
jo
hlt
and
fstpl
mov
mov
pop
scas
jg
jecxz
imul
push
out
mov
jle
xchg
dec
shlb
adc
insb
insl
inc
sbb
dec
and
cmpsb
or
ret
into
fwait
std
xchg
xchg
data16
ja
cs
mov
adc
sub
cmpsb
dec
sarl
and
jp
fistl
cli
js
push
jmp
pop
dec
stc
stos
xchg
sti
push
fs
mov
and
sbb
and
cmp
push
cmp
scas
cmp
aad
loopne
fistl
mov
add
cmp
std
stos
add
push
popa
nop
and
and
cmp
sub
or
ds
out
xchg
push
cwtl
dec
mov
rorb
fimull
mov
rcr
xor
ss
xchg
mull
aaa
lock
je
out
xchg
mov
xorl
mov
incl
into
cmp
data16
mov
adc
add
pop
int
cmpsb
mov
ljmp
cld
adc
adc
fcmovnu
mov
enter
cmpsl
repz
loope
cmc
shlb
xor
daa
push
adc
xchg
rclb
add
lock
fisubl
ss
in
and
push
imulb
sbb
ljmp
push
ret
push
enter
cmp
dec
add
les
and
or
pop
les
cwtl
aad
jno
lcall
lcall
jg
sbb
aas
mov
mov
inc
scas
loop
mov
sub
cmc
sti
sbb
rclb
es
into
and
jno
mov
ficomps
es
sarl
jne
cmpsl
jae
dec
mov
xchg
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
imul
add
add
add
adc
adc
cmp
in
xor
adc
add
pushl
pushl
pushl
call
ret
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
push
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
test
inc
add
sbb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
push
sbb
inc
sbb
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
inc
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
adc
inc
add
inc
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
inc
add
sbb
enter
rcrb
inc
add
sbb
loopne
inc
add
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
inc
add
inc
add
inc
add
sbb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
jmp
add
adc
int3
mov
inc
push
cmc
lock
adc
adc
adc
mov
bound
stos
sub
cmp
adc
cmp
adc
lock
adc
adc
sub
cmp
outsl
das
cmp
mov
adc
addr16
push
bound
cli
adc
cmc
bound
fs
mov
out
bound
pop
sub
stos
lock
add
xor
aaa
lods
out
int3
xor
adc
xor
xor
xor
sub
add
xor
xor
dec
or
xor
insl
xor
push
xor
xor
dec
push
add
xor
aas
add
xor
ss
aas
xor
xor
xor
xor
ss
addr16
xor
xor
xor
cld
hlt
xor
aas
dec
aaa
notl
xor
xor
mov
arpl
xor
xor
xor
add
mov
xor
mov
or
xor
xor
xor
popf
fwait
pusha
or
xor
xor
xor
sbb
xor
lea
xor
aam
mov
push
inc
dec
cld
push
adc
add
popl
insb
testb
push
adc
mov
xchg
add
test
pop
mov
jo
add
pop
adc
xchg
push
add
mov
incl
call
add
cwtl
add
add
add
mov
iret
movsl
cmpsb
add
jae
dec
add
jmp
mov
push
cld
jmp
test
push
add
lea
aam
add
pop
add
inc
loopne
add
add
call
push
mov
call
push
add
adc
add
test
push
stc
mov
push
push
mov
add
add
add
add
add
add
call
add
addr16
add
add
fcompl
add
lahf
add
sbb
add
add
add
incl
lahf
jo
adc
add
xchg
add
add
add
jmp
add
add
adc
mov
adc
add
add
add
add
lahf
push
add
adc
add
and
add
lahf
add
add
add
lahf
add
jnp
jmp
adc
add
incl
add
add
push
add
add
add
lahf
add
incl
clc
lahf
fsubl
add
add
add
xor
add
adc
mov
pop
mov
in
imul
adc
cmpl
cmp
jno
inc
test
cmp
adc
and
adc
icebp
add
push
js
mov
addr16
nop
inc
ret
addl
jl
add
and
pop
ret
add
and
je
mov
add
test
and
or
add
or
decl
or
test
pop
adc
inc
mov
rol
push
inc
call
imul
je
pop
loopne
call
push
addr16
int3
loopne
push
cmp
add
cld
push
imul
adc
xchg
push
push
and
and
push
add
push
aam
push
sbb
mov
sarb
push
or
testb
mov
mov
add
mov
adcb
or
jne
cld
call
xor
mov
add
decl
jne
adc
lea
fdivr
mov
push
stos
adc
or
jmp
push
add
dec
add
call
mov
push
cmp
push
incl
adc
adc
add
decl
ret
inc
jmp
test
adc
hlt
lcall
jne
pop
inc
ret
mov
incl
push
adc
adc
or
lock
xlat
or
incl
ljmp
jne
adc
lea
incl
ret
push
push
ret
inc
push
adc
push
mov
inc
push
adc
ljmp
mov
addr16
call
push
les
addr16
pushl
std
xor
jne
mov
decl
adc
pavgb
je
push
jle
adc
push
jne
add
push
add
add
or
adc
testb
push
sbb
xor
pop
inc
adc
imul
add
add
add
xor
test
add
inc
sbb
ret
rorb
in
add
adc
add
add
add
add
or
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
adc
add
add
add
add
add
adc
add
mov
leave
ljmp
adc
inc
push
dec
inc
add
test
cmpsl
ds
mov
add
loopne
lahf
adc
into
push
call
adc
push
call
addb
mov
mov
add
add
adc
mov
je
add
or
add
pop
jne
gs
pop
push
inc
push
add
pushf
inc
add
push
add
push
subl
mov
incl
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
addb
or
add
add
jo
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
pusha
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
add
pop
add
or
push
add
add
add
or
add
add
mov
add
add
pop
add
add
add
add
add
add
add
add
add
add
push
push
add
add
add
add
add
addb
add
or
add
add
add
add
add
add
add
or
add
add
loopne
or
add
add
lock
add
add
add
rolb
add
add
add
add
add
add
add
or
rolb
add
add
push
add
add
add
add
add
add
add
add
add
add
push
dec
iret
je
mov
add
push
push
add
jb
or
add
mov
adc
mov
jb
incl
mov
mov
mov
mov
push
push
adc
imul
add
sar
push
je
push
cmp
jae
add
adc
pop
inc
rorl
imul
push
lea
jle
add
sbb
orl
push
push
dec
push
add
fcoms
jo
jle
addr16
pop
inc
stos
add
push
or
adc
add
push
push
push
sbb
aam
dec
adcb
call
add
sbbl
lret
in
push
add
leave
js
add
push
add
stos
pop
add
add
jmp
inc
push
or
mov
push
push
sub
add
pop
adc
or
mov
inc
dec
jbe
call
or
add
rolb
add
mov
push
add
add
xor
mov
addb
mov
add
lret
add
mov
xor
lcall
ja
jbe
dec
jbe
inc
xchg
add
js
mov
xor
cmpsl
sbb
sbb
add
jnp
add
add
lret
add
rolb
incl
imul
add
lcall
push
inc
inc
inc
inc
or
inc
inc
add
incl
push
add
inc
inc
inc
data16
data16
imul
inc
out
add
sbb
inc
data16
inc
inc
inc
incl
add
jmp
jmp
inc
data16
inc
data16
add
push
inc
inc
inc
ds
inc
push
inc
inc
inc
insb
inc
inc
ds
inc
inc
imul
pop
data16
push
adc
jo
lea
cmp
adc
lea
in
jge
imul
push
adc
xchg
lods
sbb
ljmp
or
incb
imul
imul
jae
call
shlb
call
imul
push
enter
push
adc
call
add
push
rolb
push
push
bound
push
decl
add
push
mov
add
outsl
subl
push
jmp
add
adc
and
inc
xchg
scas
push
bound
incl
dec
push
mov
insb
rorb
call
lea
cld
mov
push
jmp
call
sbb
cld
test
push
push
je
adc
addr16
adc
or
or
cmp
adc
add
data16
data16
add
push
data16
call
add
jmp
push
add
enter
aas
add
and
shl
mov
stc
mov
aaa
mov
data16
add
and
clc
stc
mov
test
sbbl
addl
adc
cmp
push
inc
shll
lahf
or
xor
xor
cmp
cmp
cmp
ss
fdivr
inc
xor
xor
fsubr
push
cmp
cmp
jb
jne
inc
xor
out
cmp
cmp
xor
or
movb
cmp
xor
iret
cmp
xor
sarl
cmp
cmp
cmp
xor
mov
cmp
out
xor
xor
add
add
add
add
addb
add
add
add
add
add
xor
add
add
add
add
add
add
arpl
add
add
add
popa
add
add
add
incl
add
inc
add
shll
pop
enter
push
add
push
inc
mov
dec
in
call
mov
push
inc
xlat
push
jnp
mov
or
adc
dec
push
push
mov
inc
add
adc
adc
imul
add
add
adc
call
push
je
into
mov
push
add
ss
rcll
inc
add
push
mov
push
add
xlat
push
incl
into
add
imul
inc
sbb
pop
jne
push
adc
or
or
mov
dec
adc
or
and
pushf
sub
push
pop
pop
adc
push
les
or
mov
adc
dec
add
mov
mov
imul
bound
add
outsl
add
add
dec
add
and
add
add
dec
je
outsb
push
jb
add
add
add
add
add
lret
ss
aaa
ss
sbb
xor
outsl
xor
adc
aaa
aam
in
xor
xchg
xor
and
xor
adc
addl
cmp
add
test
mov
add
incl
shlb
sub
call
imul
imul
add
cmp
inc
push
mov
fdivl
inc
jno
jmp
jnp
add
and
and
xchg
pop
or
lcall
pop
adc
cmpxchg
jne
das
ljmp
mov
and
push
push
and
push
incl
push
lcall
dec
jb
inc
xchg
mov
adc
fmul
lret
jne
push
add
adc
ror
call
call
cmp
adc
mov
cmp
incl
adc
dec
xadd
add
adc
jmp
test
pushl
and
add
add
add
jmp
mov
test
push
xor
add
pusha
addr16
push
or
push
mov
add
push
incl
push
scas
add
call
shrl
add
test
mov
roll
loop
cmp
add
push
ljmp
call
mov
call
add
add
rcl
add
popa
shlb
add
add
add
add
add
add
add
jae
add
add
add
add
adc
jo
jo
add
add
add
add
add
add
mov
testb
insb
add
pop
jo
add
push
jo
add
push
add
add
add
insb
ja
add
add
add
add
add
outsl
add
add
add
jae
mov
add
add
add
add
insb
add
add
addr16
add
jae
jae
cmp
add
add
add
add
jo
add
add
add
add
push
add
add
add
add
add
outsl
outsb
jne
add
add
add
add
add
add
outsb
popa
add
add
outsl
add
add
add
add
add
add
jae
imul
outsb
jae
add
imul
add
jne
add
jb
add
jb
add
add
jae
add
add
popa
push
add
add
add
add
add
add
add
outsb
je
add
push
int3
call
jmp
or
push
or
mov
cmp
mov
lea
addr16
imul
and
mov
decl
lock
decl
add
adc
push
call
imul
push
incl
add
add
add
xlat
push
add
adc
push
add
test
push
cld
ljmp
adc
and
inc
cld
in
rcll
adc
or
mov
push
cld
or
push
sub
adc
pop
pop
popa
outsb
imul
add
add
jae
add
jns
imul
add
add
add
imul
add
add
add
add
add
add
push
je
add
insl
outsb
add
imul
outsl
outsb
add
add
add
gs
outsb
and
je
push
add
and
fs
add
add
insb
outsb
imul
add
add
push
popa
push
add
arpl
add
add
outsb
add
outsl
add
gs
gs
les
xor
push
adcb
inc
rolb
push
jmp
mov
push
call
push
ret
sub
inc
incl
mov
cld
decl
addr16
jne
incl
add
incl
sub
les
mov
push
cld
jne
or
adc
add
push
adc
inc
cltd
lock
or
or
or
ljmp
and
inc
fmull
add
inc
lock
inc
push
adc
incl
inc
mov
push
mov
inc
lea
or
add
push
addr16
add
incl
adc
addb
inc
or
jo
imul
cmp
pop
loop
cmp
pop
cmp
sarl
cmp
arpl
cmp
cmp
cmp
dec
cmp
lcall
cmp
ss
cmpb
cmp
scas
ss
add
cmp
lods
cmp
xor
cwtl
push
cmp
cmp
cmp
adc
pop
xorb
inc
cmp
cmp
aaa
aaa
push
push
ss
jl
cmp
cmp
push
mov
outsl
add
add
add
add
lcall
outsl
jo
add
jne
add
sbb
push
jp
mov
push
add
add
sbb
add
mov
popa
add
add
incl
push
js
pop
add
add
add
pushl
sbb
je
cltd
add
push
add
pop
bound
add
pop
add
add
dec
add
add
incl
add
add
pushl
add
cmp
sarb
fnstsw
cmp
xchg
cmp
idiv
sub
int3
cmp
cmp
cmp
stos
cmp
cmp
cmp
dec
cld
cmp
cmp
aas
cmp
and
cmp
cmp
jp
cmp
cmp
cmp
sub
xor
cmp
cmp
adc
arpl
sar
rolb
test
add
push
sbb
inc
test
adc
call
push
test
add
add
add
test
in
adc
rcrb
sbb
mov
les
mov
rclb
add
in
sub
call
inc
addl
push
add
mov
push
push
adc
add
adc
adc
or
adc
cmp
mov
adc
push
jmp
cld
mov
mov
mov
add
adc
lcall
add
shrb
mov
adc
adc
add
imul
imul
push
imul
jmp
mov
jb
into
jo
push
push
or
adc
adc
jb
mov
call
add
push
add
add
add
je
mov
xor
add
push
mov
add
adc
adc
pop
xor
add
jno
adc
push
ret
adc
imul
adc
jb
and
add
jb
add
shlb
xor
jo
mov
mov
adc
push
add
outsl
add
add
add
insl
add
outsb
jb
imul
add
inc
add
outsl
arpl
jb
add
add
fs
add
add
add
add
inc
add
push
add
add
outsl
add
jb
add
and
sub
imul
sub
popa
je
add
add
add
add
imul
add
popa
je
je
add
add
add
outsb
add
jb
add
add
je
call
adc
mov
decl
cmp
inc
movsb
call
or
je
cmp
add
mov
call
jge
pop
push
push
call
je
rcrb
push
lea
pop
pop
mov
jne
or
mov
push
inc
add
and
bound
popa
jo
bound
outsl
dec
jb
add
add
jae
add
outsl
das
popa
outsb
add
jb
push
jne
gs
bound
add
dec
bound
outsb
gs
outsb
push
add
outsb
insl
jae
jae
bound
outsl
gs
bound
je
dec
outsb
insl
das
je
popa
gs
add
fs
popa
push
jb
add
add
outsl
add
adc
movsl
add
add
lock
mov
sub
and
add
adc
movsl
add
adc
lea
mov
fsubr
add
push
add
adc
adc
add
andl
aam
inc
sub
inc
faddl
mov
mov
scas
add
push
lea
add
add
push
mov
push
lds
cmp
cmp
sbb
stos
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
or
loopne
dec
cmp
and
aam
in
cmp
out
mov
cmp
push
arpl
aaa
aaa
cmp
es
or
es
mov
add
add
add
es
sbb
mov
or
mov
add
or
and
es
push
es
jmp
adc
sub
pop
decl
repnz
adc
es
or
add
add
incl
add
es
lret
add
sub
incb
adc
add
out
jmp
add
adc
push
add
jmp
add
es
and
or
lods
lods
jl
sbb
add
or
add
lret
mov
jmp
adc
or
add
or
add
add
mov
add
scas
bound
add
es
add
es
add
inc
lret
inc
push
push
adc
inc
cwtl
inc
adc
mov
mov
push
je
les
out
mov
adc
push
adc
sbb
inc
add
mov
incl
call
lret
push
inc
mov
imul
push
jmp
add
adc
imul
incl
cmp
jne
push
adc
insb
mov
inc
add
iret
mov
push
pop
and
add
aas
lods
call
add
add
lods
mov
add
add
push
or
add
inc
cmp
mov
sbb
push
imul
incl
push
test
xor
or
dec
mov
add
inc
test
dec
test
pop
or
xlat
adc
add
add
push
test
add
test
add
leave
mov
add
push
call
adc
mov
mov
mov
call
push
add
mov
jo
sbb
pusha
sarl
call
push
add
mov
ret
adc
push
rolb
add
sub
ud0
jo
add
adc
add
ret
push
add
or
jne
addr16
pusha
cltd
pop
addr16
ljmp
rcl
jne
lock
decl
inc
and
addr16
add
jne
pushl
stc
push
inc
decl
or
shll
push
push
inc
clc
clc
push
push
addr16
jmp
jmp
push
pushl
call
clc
sub
jne
jne
adc
adc
adc
lock
adc
push
add
add
inc
je
add
add
gs
add
imul
arpl
add
add
inc
add
add
inc
inc
add
add
add
inc
add
add
add
add
inc
add
inc
add
add
add
inc
add
and
add
inc
add
add
inc
add
add
inc
inc
add
inc
xor
add
inc
add
add
add
or
inc
dec
inc
add
inc
add
inc
add
add
jnp
sarb
mov
cmp
call
adc
roll
adc
ret
or
jl
test
add
xor
add
notl
mov
lock
mov
ja
cmpl
call
addr16
add
add
lods
dec
inc
mov
cmp
jl
dec
adc
dec
lcall
add
decl
mov
mov
jle
inc
lods
mov
mov
addb
mov
mov
jl
dec
orb
dec
in
mov
popa
inc
cmpb
inc
inc
push
jl
dec
cmp
bound
lods
dec
incl
add
pop
lods
bound
mov
jl
decl
jp
inc
cltd
andb
dec
decl
cltd
inc
lods
inc
jmp
mov
movl
leave
or
jge
subl
sbbl
add
mov
pop
test
mov
jno
or
rcll
incl
in
adc
push
inc
imul
sahf
cld
mov
ljmp
adc
imul
mov
adc
jmp
push
incl
push
add
mov
adc
add
add
imul
push
mov
add
push
adc
push
imul
imul
adc
adc
adc
push
adc
adc
add
adc
inc
adc
hlt
adc
mov
add
adc
call
push
adc
push
inc
push
and
add
addb
lea
enter
add
push
imul
pop
push
push
add
sbb
adc
cld
add
or
or
lods
push
xchg
hlt
mov
push
add
rol
psubsb
call
push
lds
adcb
adc
dec
in
jmp
inc
pop
push
sbb
test
incl
add
jge
imul
jmp
jp
fadds
lods
xor
mov
adc
mov
clc
push
imul
lea
fwait
push
incl
jne
push
add
lods
add
mov
add
lea
xchg
or
idivl
dec
xor
decl
mov
push
out
adc
add
pop
push
cltd
incl
push
add
or
mov
pop
add
test
lea
xor
ja
decl
jnp
cld
aam
jae
add
aaa
mov
mov
add
add
jl
add
add
test
push
or
mov
stc
push
cmp
repnz
add
str
or
incl
into
add
add
orl
leave
cmovge
push
test
xor
mov
mov
imul
call
add
ret
in
add
mov
add
cltd
call
inc
insl
imul
jb
jo
imul
jb
jae
add
outsl
outsl
jns
add
outsl
push
insb
outsb
gs
and
add
inc
jae
outsl
jb
dec
popa
adc
add
add
call
cld
push
or
les
push
adc
push
inc
mov
push
lea
sti
mov
call
jo
je
inc
xor
ljmp
lea
add
jne
mov
mov
add
add
mov
sahf
push
incl
adc
pop
repz
pop
push
add
add
cmp
ret
xorl
push
add
and
das
add
pop
psubw
add
lock
mov
add
add
jmp
or
add
add
dec
pusha
add
in
ud0
adc
add
dec
push
or
lea
add
call
mov
cmp
jbe
adc
inc
mov
jne
cld
lcall
lsl
imul
fiadds
push
cmpb
jo
mov
push
incl
mov
decl
test
sti
data16
or
adc
cmp
into
add
adc
gs
push
in
add
fdivs
imul
adcl
push
ret
inc
in
or
push
jecxz
inc
or
les
and
ljmp
imul
cmp
jne
pop
add
test
cmp
mov
addl
add
adc
or
shlb
addr16
lea
push
data16
push
sarb
dec
xchg
add
call
add
ret
mov
mov
hlt
cmp
clc
pop
incl
mov
data16
jp
add
incl
cwtl
rorb
add
add
lcall
cmpl
add
add
jg
add
or
add
js
add
add
add
add
inc
incl
inc
add
inc
add
inc
inc
add
out
add
inc
add
add
add
add
add
add
inc
add
add
or
add
push
add
push
add
add
inc
add
inc
daa
adc
add
inc
add
add
inc
inc
add
incl
rolb
inc
add
xor
add
rolb
add
add
inc
inc
inc
inc
add
add
rolb
inc
inc
pop
inc
rolb
cmp
add
incl
incl
inc
add
add
push
inc
jg
add
inc
add
inc
inc
inc
add
inc
add
inc
add
add
shlb
add
push
add
inc
das
add
add
add
add
add
xor
rolb
rolb
or
add
rolb
add
add
add
add
incl
pop
add
inc
and
add
add
add
inc
inc
rolb
add
add
inc
add
inc
add
add
inc
add
inc
add
add
dec
push
incl
test
xchg
call
push
jmp
add
adc
je
lcall
adc
addl
or
call
adc
call
je
pop
push
add
daa
pushf
into
mov
test
jmp
jne
inc
dec
lea
add
add
jne
adc
push
jne
decl
call
test
outsb
add
hlt
add
js
data16
push
xchg
enter
jne
adcl
call
push
inc
add
lea
clc
rol
xor
sbb
adc
dec
add
aaa
clc
call
addw
add
push
lea
call
jmp
add
add
add
xor
add
es
and
and
add
or
sub
es
add
add
add
and
es
sbb
add
add
add
scas
add
add
add
add
add
sbb
add
add
add
add
xor
add
add
add
adc
addr16
add
add
xchg
and
xchg
add
sbb
pop
incl
add
add
addr16
push
add
add
add
scas
add
call
adc
rolb
add
scas
stc
jl
mov
decl
mov
inc
div
inc
pushf
inc
pushl
in
add
add
out
pop
mov
pushl
orb
dec
lcall
add
mov
xor
xor
cwtl
mov
pop
jl
xor
cwtl
xor
addl
ljmp
xor
xor
cmp
ljmp
imul
in
jl
incl
xor
add
fwait
pushl
incl
mov
addr16
pushl
in
decl
pushl
jl
inc
xor
sub
inc
dec
fwait
pop
xor
push
push
scas
jl
cwtl
xlat
inc
inc
xlat
jl
xor
xchg
xor
jl
ret
add
pushl
nop
cmp
xor
pop
pushf
xor
imul
mov
jl
jmp
xor
xchg
add
or
xor
jl
xor
aaa
fldl
incl
add
lcall
add
add
add
add
str
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
pop
and
add
add
aas
add
add
add
pop
sar
add
add
add
clc
add
sub
jg
add
add
pop
add
pop
pop
add
aas
add
add
add
add
add
add
sldt
add
add
add
add
add
add
sarb
cld
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
and
pop
add
addb
add
lock
add
add
add
add
add
add
clc
add
clc
shlb
add
add
add
add
lock
add
add
pop
pop
add
add
incl
add
outsb
add
add
pop
adc
add
add
into
jne
push
jmp
shlb
mov
push
and
adc
shll
or
mov
mov
add
add
adc
ja
out
adc
add
add
das
adc
fidivrl
fs
cmp
add
bound
adc
add
and
in
cmp
jb
bound
cmp
push
bound
add
outsb
jb
cmp
add
cmp
outsl
add
bound
add
bound
adc
jo
adc
in
add
add
cs
add
adc
outsb
add
jmp
add
adc
sub
das
bound
add
outsl
out
call
add
bound
arpl
cmp
cmc
bound
add
add
add
gs
out
adc
bound
add
adc
add
bound
adc
add
and
adc
bound
xor
sub
outsl
arpl
outsl
add
adc
je
add
add
cmp
add
add
add
adc
add
add
and
pop
add
add
daa
add
add
add
add
add
add
pop
add
addb
sub
inc
sbb
add
adc
pushf
sbb
add
add
add
add
add
pop
and
or
add
sbb
push
add
and
add
push
add
add
clc
add
add
add
adc
add
add
sub
add
add
add
sbb
incl
add
adc
adc
incb
add
add
add
add
add
cld
add
add
add
sbb
add
add
and
add
or
add
add
cld
and
add
or
add
add
add
add
add
incl
adc
shlb
push
clc
pop
xorl
ret
add
adc
ret
mov
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
