push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
jne
mov
mov
push
push
push
push
call
mov
test
je
lea
lea
add
add
add
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
lea
add
push
push
mov
add
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
add
pop
ret
nop
nop
mov
mov
ret
nop
nop
nop
lea
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
call
mov
lea
push
push
call
mov
mov
sub
push
push
push
push
push
lea
call
mov
mov
push
push
push
push
call
mov
or
push
push
push
push
call
mov
call
mov
call
pop
mov
pop
add
ret
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
call
mov
mov
xor
push
test
push
push
setne
push
mov
call
push
push
mov
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
test
je
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
jne
push
lea
call
push
push
mov
call
mov
call
push
push
jmp
push
lea
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
push
push
mov
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
mov
push
push
push
push
call
mov
push
push
push
push
lea
push
push
push
mov
call
push
push
push
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
mov
call
xor
lea
mov
call
mov
mov
push
push
push
push
movb
call
lea
cmp
je
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
lea
push
push
lea
movb
call
lea
movb
call
test
jne
xor
mov
push
call
lea
push
mov
mov
call
push
mov
mov
call
mov
mov
push
push
push
push
call
mov
lea
push
lea
push
push
mov
push
push
lea
push
push
mov
add
push
push
mov
lea
push
push
lea
push
push
mov
mov
call
mov
mov
add
mov
mov
mov
push
call
mov
movl
test
jle
mov
push
lea
call
lea
mov
mov
push
push
push
push
call
cmp
je
push
push
push
mov
call
mov
inc
cmp
jl
lea
push
push
push
mov
call
mov
mov
sub
mov
imul
push
mov
push
push
push
call
mov
test
je
push
call
mov
call
mov
call
lea
movb
call
movl
call
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
push
test
jne
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
mov
jne
test
push
je
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
test
je
lea
push
lea
push
push
push
call
add
mov
call
pop
ret
lea
lea
push
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
push
call
mov
add
add
add
jb
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
push
lea
call
lea
movl
call
cmp
je
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
lea
push
push
lea
call
mov
movb
test
jne
lea
push
lea
push
mov
push
lea
push
push
lea
push
push
call
add
jmp
mov
push
push
call
add
test
je
mov
lea
push
lea
push
push
push
call
add
push
mov
call
mov
mov
xor
push
push
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
push
lea
movl
call
lea
mov
mov
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
call
push
push
push
lea
call
mov
call
lea
movb
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
push
push
push
mov
push
call
lea
test
je
push
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
movl
test
jne
lea
push
lea
push
lea
add
xchg
lea
push
push
call
add
jmp
mov
lea
lea
push
push
push
call
add
lea
movl
call
test
jne
pop
mov
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
push
lea
mov
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
mov
add
mov
call
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
push
push
lea
call
push
lea
mov
call
mov
mov
push
push
push
push
call
or
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
cmpl
je
lea
call
mov
push
push
lea
push
push
movb
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
cmp
je
cmpl
jne
mov
mov
lea
movb
call
mov
mov
inc
add
cmp
mov
mov
jb
mov
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
pop
mov
add
ret
nop
mov
test
je
jmp
ret
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
sete
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
lea
push
mov
lea
mov
testb
je
movl
test
je
movl
mov
mov
test
je
mov
testb
mov
je
mov
push
mov
adc
jmp
xchg
movsb
add
add
add
pop
je
movl
test
je
mov
testb
je
movl
mov
push
shr
and
mov
mov
call
mov
call
pop
pop
ret
push
mov
cmpl
je
push
push
call
mov
mov
cmp
mov
ja
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
lea
mov
neg
sbb
and
or
mov
sub
pop
je
dec
je
dec
mov
lea
je
mov
mov
jmp
mov
movl
jmp
mov
mov
lea
movl
jmp
mov
lea
mov
mov
mov
mov
lea
lea
mov
neg
mov
sbb
and
or
mov
pop
ret
lea
ret
cmp
and
fdivrl
and
push
and
push
mov
mov
test
je
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
mov
inc
add
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
xor
ret
add
incl
push
call
add
push
push
push
call
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
xor
test
setne
mov
or
inc
add
test
setne
add
lea
push
mov
call
push
mov
call
mov
call
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
xor
mov
mov
inc
lock
add
setne
mov
mov
mov
xor
test
setne
mov
mov
mov
add
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
je
mov
jmp
xor
test
je
mov
test
je
mov
jmp
xor
test
je
mov
adc
inc
add
inc
insb
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
mov
inc
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
aaa
cmove
add
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
cmp
jbe
mov
push
lea
add
mov
cmp
js
add
inc
add
mov
test
jne
movl
push
mov
call
add
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
sti
out
add
add
insb
add
push
push
call
mov
add
cmpl
jne
cmpw
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
jl
inc
add
cmp
sete
mov
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
ret
add
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
shl
inc
add
push
ja
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
mov
leave
cld
inc
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
cmp
jg
test
jge
xor
jmp
cmp
jle
mov
mov
mov
mov
mov
mov
inc
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
xor
mov
push
push
push
push
call
lea
call
push
lea
mov
call
lea
call
movb
mov
push
push
lea
push
push
call
mov
mov
test
je
push
mov
push
push
push
call
inc
cmp
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
mov
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
push
push
call
test
jl
mov
lea
push
push
call
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
call
test
jl
mov
test
je
mov
mov
push
push
call
mov
push
mov
call
pop
pop
add
ret
push
push
push
push
call
mov
lea
test
push
push
setne
push
push
mov
mov
call
add
test
je
xor
call
mov
pop
pop
ret
mov
push
push
push
call
add
test
jne
xor
mov
push
call
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
push
lea
movl
call
lea
xor
mov
movl
movl
mov
mov
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
movl
lea
movl
mov
lea
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
add
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
push
push
mov
lea
push
call
push
push
push
push
push
call
mov
mov
add
test
je
push
push
call
add
push
call
lea
mov
xor
mov
push
push
rep
push
call
push
push
push
push
push
call
mov
add
test
je
push
push
push
push
call
add
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
push
call
mov
mov
add
test
je
lea
push
push
push
call
add
push
call
mov
push
push
push
inc
push
push
mov
call
mov
add
test
je
push
add
push
push
push
call
add
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
call
add
test
jne
mov
mov
push
push
push
call
mov
add
push
call
pop
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
push
call
add
mov
mov
push
call
test
pop
je
mov
mov
cmp
je
lea
push
call
add
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
mov
call
mov
test
je
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
add
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
inc
add
xchg
add
add
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
inc
add
add
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
add
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
inc
add
add
add
rolb
ljmp
add
sbb
inc
add
call
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
mov
and
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
sbb
and
xchg
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
mov
cmp
jbe
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
test
mov
je
lea
push
push
push
call
add
jmp
movw
test
je
mov
push
mov
mov
push
lea
shr
rep
mov
and
rep
pop
pop
mov
lea
push
mov
lea
add
push
push
mov
lea
push
push
push
push
push
push
call
test
je
xor
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
lea
push
lea
push
push
push
call
add
test
je
xor
add
ret
push
mov
test
je
mov
lea
push
push
push
call
add
test
je
mov
xor
test
mov
setne
mov
pop
add
ret
movl
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
xor
push
push
mov
mov
call
mov
add
cmp
jne
pop
xor
pop
add
ret
mov
cmp
je
cmp
je
push
lea
push
push
call
add
jmp
lea
push
push
push
push
call
add
test
jne
mov
lea
push
mov
push
mov
test
je
cmpw
je
mov
xor
test
jne
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
lea
push
push
call
add
test
jne
mov
mov
neg
sbb
lea
and
add
push
mov
push
push
push
call
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
je
mov
inc
test
je
jmp
mov
test
jne
mov
test
je
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
jmp
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
neg
sbb
mov
and
lea
add
push
mov
push
push
push
call
add
test
je
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
jne
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
cmpw
jne
mov
lea
push
push
push
call
add
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
add
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
add
movl
call
add
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
call
mov
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
push
call
mov
leave
jp
leave
nop
test
add
mov
add
enter
lahf
lods
into
test
jnp
mov
jmp
repnz
push
mov
add
push
push
push
push
push
push
lea
push
call
add
add
mov
mov
jbe
aad
jb
idiv
xchg
aam
add
jl
pop
ja
addb
xchg
jle
add
sahf
stc
xchg
push
add
add
jnp
mov
js
add
add
add
mov
pop
popl
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
fwait
add
xchg
add
sahf
jnp
clc
mov
add
pusha
add
xchg
add
fcmovb
push
xchg
add
add
add
lahf
xchg
add
mov
fdivr
lcall
push
push
push
call
jo
fstp
out
test
lds
xchg
jecxz
add
add
add
push
popf
push
cmpsb
add
push
push
push
call
push
add
add
mov
roll
pop
cltd
lret
push
shll
fwait
xchg
xchg
stos
jb
add
add
add
loop
add
lahf
sahf
add
mov
add
hlt
not
enter
repnz
fsubrp
push
popa
lahf
sub
pop
push
push
lea
push
lea
push
push
call
cli
add
add
pop
mov
xchg
mov
aad
cld
js
repnz
in
add
add
leave
add
add
add
call
add
add
xchg
lds
scas
xchg
rcrl
add
add
icebp
call
sub
pop
push
push
push
lea
push
lea
push
push
call
testb
test
add
add
add
mov
testl
gs
add
jp
add
movsl
push
rolb
push
add
mov
jnp
add
add
add
push
loope
ret
mov
lahf
mov
add
push
pop
mov
add
xchg
add
mov
add
negl
sub
pop
call
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
popf
pushf
fsubl
add
add
mov
imulb
pop
ror
add
add
add
aam
sarl
gs
lods
lds
add
icebp
add
add
movsl
cmc
mov
idivb
outsl
arpl
pushf
mov
pop
sub
pop
call
push
lea
push
push
push
push
push
call
add
mov
add
add
les
leave
add
mov
add
fadds
enter
add
add
sub
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
pop
scas
mov
repnz
mov
add
mov
fldl
mov
out
add
mov
add
mov
in
add
mov
lock
lcall
xchg
add
push
loop
lea
push
call
add
mov
add
aad
xchg
jl
clc
mov
add
sarl
add
push
nop
add
add
add
ja
scas
xchg
add
cwtl
add
add
int
add
cltd
mov
jns
popa
add
js
lea
xchg
enter
mov
fwait
sub
pop
jmp
ret
push
push
push
push
push
lea
push
lea
push
push
push
push
call
pop
mov
imul
faddl
mov
imul
add
add
test
leave
add
sti
jecxz
add
mov
rorl
push
pushf
add
add
push
add
pop
aam
push
mov
mov
loopne
add
fidivrs
in
fcomps
inc
hlt
mov
push
push
push
push
lea
push
push
push
push
call
stc
movsl
jge
mov
add
push
jb
stc
lock
pusha
mov
add
std
int3
add
mov
mov
fadds
fisubl
jge
in
loopne
lcall
pop
in
push
push
lea
push
call
add
mov
arpl
test
add
int3
pop
mov
add
mov
test
fs
add
add
out
pop
jp
mov
xchg
add
scas
lret
pop
mov
add
add
push
lods
add
ljmp
add
add
hlt
popa
cmc
add
cmc
clc
pusha
add
sub
pop
add
push
push
push
push
call
push
cld
insb
add
add
scas
add
stc
cmpsb
add
lcall
ja
lahf
add
add
je
hlt
pushf
add
add
xchg
mov
into
aam
test
add
pop
xchg
pop
xchg
fstpt
jne
cltd
jo
add
xchg
ret
fmuls
add
push
lea
push
lea
push
push
lea
push
push
push
call
pop
out
mov
mov
icebp
aam
jge
test
in
int3
add
popl
hlt
shlb
xchg
jmp
xchg
add
sub
pop
mov
push
push
push
lea
push
call
fdivrl
push
mov
add
cltd
add
push
add
mov
fs
add
add
add
lcall
sbb
push
push
push
push
push
push
lea
push
call
addl
mulb
add
lret
jge
mov
shlb
in
js
xchg
add
mov
jge
leave
ja
nop
add
add
add
fnsave
sarb
xchg
lock
lret
imul
in
in
add
push
push
shr
xor
push
or
inc
add
add
lea
add
sub
add
ror
pop
add
not
pop
push
lea
push
push
push
push
call
cltd
out
fadds
out
add
add
je
fidivrl
jns
stos
add
add
mov
add
push
ljmp
add
add
jbe
add
mov
add
ljmp
pop
add
bnd
loopne
shlb
mov
add
push
bound
lcall
jne
call
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
pop
add
xchg
add
pop
add
add
pop
sahf
in
mov
loop
jns
aam
imul
add
add
add
xchg
testl
lahf
popl
add
xchg
add
add
mov
clc
rolb
add
xchg
call
out
sahf
jmp
mov
movl
push
push
lea
push
push
push
lea
push
call
lahf
cli
mov
add
add
out
lods
std
testl
test
lds
add
mov
lods
push
loop
xchg
out
lea
in
add
pop
iret
outsl
shll
rolb
inc
call
rcr
push
push
push
call
add
add
data16
pop
lock
cwtl
add
push
add
stos
pop
mov
add
iret
xchg
add
sub
pop
pushl
push
push
push
push
push
call
mov
add
pushf
loop
jmp
pushf
fnstsw
scas
mov
add
mov
lret
add
jbe
xchg
add
push
shlb
cmpsb
mov
rcr
imul
mov
lock
je
nop
mov
in
pop
pushl
push
push
lea
push
call
add
push
jge
add
jno
addl
roll
jnp
imul
loopne
add
mov
add
incb
pop
ja
mov
in
xchg
lods
ja
std
andl
mulb
add
push
lea
push
push
lea
push
call
add
pop
lret
add
push
adcb
add
in
aam
add
pop
arpl
add
icebp
mov
clc
cld
add
add
lcall
mov
in
lock
pushl
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
fiaddl
add
add
scas
mov
icebp
flds
xchg
xchg
add
hlt
pushf
mov
add
push
rolb
fcoms
int
mov
stos
add
cmpsl
jo
add
aad
mov
hlt
fisttpl
sub
pop
call
push
push
sub
shl
dec
push
or
inc
add
not
lea
rol
sub
shl
dec
ror
pop
sub
pop
push
lea
push
push
call
add
mov
mov
add
add
mov
add
push
addr16
add
push
add
add
in
add
add
fs
add
imul
mov
add
mov
in
hlt
lcall
jne
call
push
push
push
lea
push
push
call
call
lcall
add
out
imul
jbe
add
add
jbe
add
add
xchg
mov
cmc
mov
mov
pop
jnp
mov
pop
add
add
pop
add
pusha
data16
sub
pop
push
push
push
add
add
push
sub
add
xor
sub
sub
lea
inc
pop
not
not
pop
push
push
call
add
add
mov
int
js
clc
add
int
add
loop
add
add
mov
int3
mov
add
add
mov
add
fidivs
add
mov
ljmp
roll
sub
pop
push
push
push
call
call
xchg
roll
testb
nop
lods
mov
mov
xchg
stc
add
jp
stos
push
int
mov
cmpb
add
add
cltd
fwait
add
std
lcall
mov
enter
out
add
sub
pop
push
call
push
lea
push
lea
push
push
push
push
call
in
cmpsb
add
add
fadds
sahf
add
add
mov
xchg
add
xchg
xchg
xchg
mov
add
arpl
fimuls
mov
xchg
shrl
into
mov
add
fwait
ret
lret
in
call
lea
push
push
call
popa
mov
movb
mov
jne
jmp
add
clc
scas
int
add
xchg
xchg
fstpt
stos
add
cltd
add
sti
mov
fwait
add
icebp
xchg
into
sub
adcl
push
push
push
lea
push
call
add
xchg
adcl
mov
scas
add
outsl
fadd
add
mov
add
add
push
pop
push
push
into
add
addr16
pop
push
push
push
push
call
jl
mov
mov
out
mov
popa
push
in
out
mov
movsb
fisttpl
lods
frstor
shr
add
loop
jno
jecxz
testl
int
pop
add
add
jne
les
add
add
jne
insb
add
add
add
xorb
add
out
sub
pop
mov
push
lea
push
lea
push
push
call
add
in
fcomp
pop
pop
bound
stc
add
fwait
mov
add
xchg
jmp
fucomip
push
jle
jno
fnop
pusha
add
jecxz
pop
xchg
push
push
push
lahf
lretw
add
aad
pop
add
add
fstps
outsl
xchg
sub
pop
add
add
push
lea
push
push
call
add
mov
lcall
add
mov
pop
clc
fstl
add
add
scas
add
mov
pop
add
clc
add
add
loopne
add
add
add
mov
xor
push
lea
push
push
push
push
push
push
lea
push
push
call
add
mov
pop
mov
insb
scas
aad
out
lret
mov
test
insb
cwtl
add
sahf
loopne
add
sahf
add
popf
fyl2xp1
mov
add
cmp
lret
stos
add
add
lcall
jne
push
push
push
lea
push
lea
push
call
aad
cltd
xchg
mov
pop
push
jmp
testl
push
mov
jo
jne
into
movsl
add
jmp
add
lods
add
add
in
pop
push
mov
xor
push
push
push
push
push
lea
push
call
shl
xchg
iret
add
fiadds
imul
addb
popl
nop
popa
ljmp
out
add
xchg
add
add
add
lds
test
jno
pop
cli
mov
add
fistps
fiaddl
pushf
add
sub
pop
add
push
lea
push
push
push
push
push
push
call
lods
popa
add
xchg
add
arpl
mov
push
out
add
xchg
add
add
xchg
fildl
mov
add
mov
movsl
imul
out
mov
in
add
add
jge
sub
pop
pop
push
push
push
call
add
cmpsb
test
add
add
push
mov
push
add
jp
add
jb
add
mov
jno
add
lock
push
add
leave
pop
add
xchg
in
jle
in
hlt
lcall
dec
add
xor
adc
lea
push
push
push
push
call
add
add
push
roll
aad
cltd
mov
pop
add
movsb
mov
insb
jmp
xchg
push
add
add
add
loopne
int
in
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
out
lea
add
add
add
test
loop
lock
add
scas
add
js
mov
add
push
stc
add
mov
add
ja
add
nop
mov
jmp
pop
add
add
std
xchg
add
fdivr
lcall
les
add
push
push
push
push
call
nop
xchg
bound
incb
bound
add
sub
mov
popf
nop
stos
xchg
add
test
push
jecxz
mov
incb
add
addl
mov
add
mov
xchg
add
mov
add
mov
push
push
push
push
call
add
pusha
imul
add
add
add
pushf
cmc
clc
in
add
faddl
shrb
imul
adcb
pusha
add
add
shll
mov
test
push
sub
pop
xor
push
push
lea
push
push
lea
push
call
imul
mov
imul
jb
jge
fadds
jge
aam
add
ljmp
add
push
sti
lods
movsl
shlb
add
add
add
add
loop
imul
out
in
add
enter
pop
add
sub
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
jnp
jmp
pop
mov
pop
push
add
repnz
out
shll
add
pop
cld
add
add
add
mov
add
push
mov
int3
add
add
xchg
pop
add
add
jo
pop
add
mov
mov
in
fdivr
lcall
enter
push
call
add
into
add
add
nop
mov
add
mov
jge
jnp
into
loope
xchg
rol
mov
jmp
mov
xchg
add
enter
imul
add
add
add
add
fwait
sub
pop
pop
push
push
push
push
push
push
call
add
rolb
add
mov
xchg
jnp
add
mov
add
add
fwait
pop
add
add
jne
dec
add
add
in
mov
stos
add
add
pop
mov
mov
add
ja
jle
test
add
add
call
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
outsl
mov
add
mov
add
jno
add
add
enter
testb
flds
fs
add
lcall
add
cmpsb
add
add
push
test
add
out
shll
lcall
pop
hlt
add
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
xchg
add
fnstenv
jo
add
lods
add
popl
flds
test
jge
int
imul
push
add
fxam
popl
push
add
fistpll
push
add
add
loopne
cltd
add
push
mov
add
add
add
ret
add
add
push
push
lea
push
push
push
push
push
push
push
call
add
lock
add
add
ljmp
add
push
jl
call
in
add
pusha
addb
push
testl
in
fdivr
lcall
ret
fmuls
add
lea
push
push
lea
push
lea
push
push
push
push
call
push
rcrb
xchg
add
pop
add
repnz
xor
mov
add
out
mov
test
jecxz
incb
mov
mov
jbe
loopne
test
cmpl
out
mov
add
add
lcall
inc
and
adc
aad
call
scas
mov
mov
std
icebp
add
jecxz
mov
js
mov
stos
xlat
in
add
stos
mov
add
add
xchg
add
mov
outsl
in
add
movb
in
add
roll
mov
lcall
add
add
lcall
push
and
xor
adc
xchg
lea
push
push
push
lea
push
push
push
push
push
call
pop
push
jo
add
pushf
test
add
popl
in
add
shl
add
mov
pop
les
shrb
cwtl
test
push
mov
add
pop
add
movb
mov
fcomps
adc
push
push
lea
push
push
push
call
push
popa
add
pop
add
xchg
jne
add
imul
add
roll
loopne
addr16
int3
movsl
xchg
mov
lds
add
sahf
mov
jecxz
add
test
lcall
les
add
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
mov
push
add
fildll
insb
add
mov
add
mov
push
fwait
add
jno
xchg
push
add
add
mov
pusha
xchg
jmp
jo
cmpsb
outsl
pop
dec
les
mov
clc
add
mov
add
add
hlt
add
add
enter
jb
add
fcomps
dec
sub
adc
push
push
call
pop
loopne
xchg
sahf
add
add
xchg
add
fstl
outsl
ljmp
mov
mov
ror
ja
add
add
add
fwait
add
out
add
out
pop
mov
lds
jns
jle
int3
add
call
add
sub
pop
add
push
lea
push
push
call
in
mov
xchg
sti
pop
push
popa
cmc
add
xchg
in
add
add
add
xchg
mov
mov
in
add
call
stc
mov
mov
incb
roll
add
loope
jbe
clc
mov
icebp
sub
pop
add
push
push
push
push
push
lea
push
call
scas
add
nop
add
out
add
add
jecxz
add
enter
add
add
lret
add
sub
push
cli
add
push
add
popa
add
add
shll
add
int3
je
in
cmpsb
lahf
add
add
push
add
fadds
cwtl
lret
sti
subb
push
stos
jns
sub
pop
mov
push
push
add
xor
lea
shl
push
sub
add
shr
dec
sub
sub
sub
add
sub
pop
lea
sub
pop
push
not
ror
lea
xor
pop
pushl
push
ror
pop
call
push
push
push
dec
push
xor
add
xor
sub
ror
pop
ror
add
pop
push
add
dec
lea
sub
pop
push
push
push
lea
push
lea
push
push
push
push
call
in
mov
push
testb
outsl
pop
xchg
pop
pusha
nop
roll
leave
add
push
add
cld
add
xlat
add
mov
mov
iret
in
add
mov
mov
push
cld
jnp
lea
xchg
les
fadds
add
mov
jb
ja
sub
pop
push
push
lea
push
call
add
cltd
push
add
add
shlb
leave
add
call
pop
add
lock
rcll
add
call
mov
push
lea
push
push
lea
push
call
add
fsub
ja
add
jp
add
mov
subl
stos
test
add
add
lock
les
add
add
sub
pop
push
push
lea
push
push
lea
push
push
call
jp
lods
add
add
icebp
rorl
lcall
imul
add
add
test
add
add
push
mov
xchg
mov
xchg
aad
std
add
addr16
pushf
add
out
add
add
add
movsb
add
call
in
in
lcall
mov
push
dec
ror
shr
pop
add
push
sub
rol
pop
add
add
push
not
dec
lea
pop
mov
xor
push
push
push
push
push
call
rcrb
add
lods
jnp
rcr
add
mov
fs
cltd
mov
mov
add
call
testb
mov
add
sub
pop
add
push
push
rol
pop
mov
push
push
push
push
push
lea
push
lea
push
call
stc
aam
add
jnp
add
jo
add
jl
int3
cmpsl
bound
fldl
je
add
add
enter
sub
pop
xor
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
lret
add
add
add
push
add
cli
mov
add
add
pop
lahf
add
jecxz
into
add
lcall
les
push
push
push
push
push
push
call
jae
add
mov
pop
enter
jo
cmc
popa
pop
add
cwtl
add
out
stos
mov
arpl
add
add
add
add
loope
fwait
mov
mov
push
add
add
loop
sub
pop
add
pop
push
shl
inc
dec
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
cltd
rclb
pop
add
add
add
popf
mov
add
addb
data16
fdivrs
mov
rcll
xlat
pop
in
sub
pop
xor
push
push
push
push
push
lea
push
call
rolb
stos
ja
add
out
push
add
add
push
mov
jl
add
je
add
mov
iret
add
add
nop
add
add
add
add
add
aad
add
jo
hlt
add
nop
rolb
add
cltd
pop
bound
les
add
push
push
push
push
push
call
jno
xchg
add
leave
add
cmpb
mov
sbbb
add
add
cmc
mov
cwtl
pusha
pop
nop
test
out
pushf
mov
add
pop
add
jle
push
stc
add
sub
pop
rep
mov
xor
push
pop
or
je
push
push
push
push
push
lea
push
push
push
push
push
call
add
fildl
add
add
gs
fiadds
mov
in
addb
roll
jbe
mov
xchg
jno
int3
push
xchg
add
rol
je
mov
mov
xchg
addr16
add
arpl
sub
pop
mov
push
push
push
push
push
push
call
add
call
add
jnp
add
xchg
popa
mov
add
pop
add
mov
push
clc
add
jb
add
in
in
pop
xor
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
lret
icebp
lods
movb
mov
mov
mov
add
les
jo
add
leave
lds
std
sahf
add
add
xlat
add
aam
repnz
bound
mov
add
mov
jo
add
pop
leave
add
lcall
les
add
push
push
lea
push
lea
push
push
call
xorl
add
sahf
test
add
mov
into
jb
fcmovnb
arpl
add
jo
add
add
add
xchg
push
mov
sub
pop
mov
xor
push
lea
xor
shl
shr
pop
add
push
sub
rol
pop
add
push
push
push
call
add
scas
pusha
add
test
add
mov
cmc
jne
add
addb
scas
fimuls
hlt
lcall
push
push
push
lea
push
push
push
push
push
push
call
add
xchg
int
jmp
add
cmpsb
add
add
lods
add
mov
add
cli
jo
add
in
add
add
add
add
add
negb
clc
fldl
add
fsub
jae
add
sub
pop
mov
push
push
push
call
add
sahf
fstpl
add
cmc
jne
mov
loope
push
mov
ljmp
jge
xchg
scas
call
fs
mov
xchg
pusha
mov
jb
andl
push
clc
sub
pop
xor
push
push
call
stc
pop
add
jno
stos
addl
shl
rcrb
test
add
into
pusha
lods
aad
lea
cmpb
clc
pop
add
push
sub
sub
shl
rol
pop
add
pop
push
inc
pop
rep
push
shr
ror
pop
mov
push
push
push
push
push
push
push
push
push
call
shrl
lds
add
mov
push
mov
shrl
ljmp
add
test
stc
add
add
loop
int
add
cmpsb
js
pop
mov
add
mov
pop
add
cwtl
addb
add
mov
scas
add
xchg
add
lcall
or
push
push
push
push
push
push
push
push
push
lea
push
call
stos
out
fildl
loop
add
pop
mov
xchg
xchg
out
popa
xchg
mov
testb
jnp
add
mov
add
add
movsb
scas
sub
pop
add
push
push
push
push
push
call
stos
lret
add
in
bound
aad
add
sahf
add
test
xchg
scas
add
ljmp
add
scas
mov
shlb
stc
sub
pop
or
je
push
push
lea
push
call
add
add
add
add
jp
lahf
mov
add
mov
movsl
leave
mov
add
add
add
loop
lcall
mov
pop
mov
addl
mov
nop
jge
movsb
push
popa
in
add
add
add
pop
add
jb
test
mov
adc
in
hlt
lcall
repz
shl
pop
add
push
push
push
lea
push
call
test
add
pop
rcr
andb
roll
push
icebp
mov
add
push
add
lods
add
in
add
add
insb
add
scas
add
add
add
mul
sub
pop
add
rep
push
push
push
lea
push
lea
push
lea
push
call
add
mov
add
lods
jns
imul
fadds
mov
mov
xchg
addr16
add
add
add
add
add
add
out
mov
add
add
les
add
stos
jbe
add
add
xchg
lods
leave
addb
sti
pop
add
push
in
call
pop
push
push
xor
rol
push
or
inc
add
inc
rol
sub
xor
pop
sub
dec
dec
pop
push
inc
pop
pop
push
lea
shr
pop
mov
push
sub
pop
mov
push
push
push
lea
push
call
pushf
aam
add
jo
into
imul
repnz
push
ret
out
andl
cmpsb
jge
add
add
cli
rolb
addb
mov
pop
test
xchg
add
inc
and
push
lea
push
push
push
push
lea
push
push
push
push
call
xchg
cltd
mov
mov
add
mov
add
outsl
cli
mov
add
jmp
push
je
shl
cwtl
pop
pop
fwait
mov
lea
add
jecxz
add
shl
lahf
add
add
add
add
pop
lock
ficompl
add
xchg
add
fildl
sub
pop
jmp
push
not
sub
inc
add
pop
push
push
ror
add
add
shr
pop
mov
push
inc
sub
pop
add
push
rol
xor
rol
shl
pop
push
push
lea
ror
pop
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
push
out
fwait
jns
add
loop
mov
mov
add
add
stc
fs
roll
je
flds
mov
add
ja
call
add
mov
xlat
add
std
imul
add
pop
aam
add
add
push
mov
add
pop
lcall
lcall
push
push
lea
push
call
mov
add
pop
ja
add
leave
add
mov
mov
add
movsl
add
add
add
popa
push
loop
imul
add
add
hlt
jno
in
hlt
lcall
inc
cld
push
push
call
add
add
cmpsb
xchg
fisubrl
stos
add
pop
push
add
js
lea
mov
add
add
orb
popl
jb
loope
add
xchg
or
push
add
fidivl
out
loopne
add
add
add
popf
lods
add
add
add
pop
pop
push
sub
shr
pop
pop
pop
push
ror
rol
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
call
nop
popa
fwait
stos
mov
loopne
mov
add
int
sti
fidivl
mov
test
test
mov
mov
push
mov
add
pop
add
push
mov
add
jns
jae
filds
mov
leave
push
sub
pop
ret
push
lea
push
push
push
push
call
cli
add
add
mov
loop
add
add
fsubs
jle
add
add
add
add
push
xchg
add
cli
xchg
enter
gs
hlt
xchg
js
pusha
add
sub
pop
push
push
not
sub
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
jl
mov
add
add
add
jl
add
jmp
je
jl
mov
cmpb
lret
addb
add
add
mov
pop
push
add
sub
pop
add
push
push
push
push
push
push
push
lea
push
push
push
call
jo
imul
add
movsl
add
int3
sbb
add
test
add
add
mov
mov
fxch
testl
mov
fisubrs
push
outsl
fbstp
filds
add
sub
pop
push
push
dec
pop
push
push
shr
ror
lea
lea
pop
push
push
push
call
addl
clc
cwtl
xlat
lret
add
mov
add
add
add
push
add
cwtl
in
mov
test
enter
add
add
push
add
data16
je
pop
sub
pop
push
push
push
lea
push
push
push
push
call
add
pop
lcall
mov
mov
add
lds
push
movsl
xchg
mov
add
andb
mov
mov
lcall
jb
mov
add
jl
ja
sub
pop
movl
push
lea
push
push
call
jmp
leave
lea
arpl
add
jge
add
lods
je
clc
add
add
rol
push
movsl
push
push
push
add
pop
add
push
cltd
rolb
jbe
mov
xchg
add
add
add
add
inc
clc
incl
add
add
std
dec
add
pop
mov
push
add
inc
dec
pop
pop
push
inc
sub
pop
pop
pop
push
rol
pop
pop
push
push
lea
push
call
bound
add
add
add
shr
scas
push
mov
add
pop
add
add
lock
mov
rcr
add
add
into
iret
add
add
mov
mov
aam
test
pop
aad
add
xlat
jl
popa
jp
add
sar
cmpsb
lods
sub
pop
leave
push
push
lea
push
lea
push
call
mov
cmc
loope
add
fidivs
lret
add
add
lcall
add
add
push
add
add
popa
jne
xchg
add
add
je
add
movsb
je
jecxz
mov
rclb
je
jmp
loop
add
testl
lock
lcall
add
push
push
push
lea
push
push
push
lea
push
call
add
std
test
add
lea
pop
add
cwtl
add
out
add
mov
mov
add
nop
jmp
mov
mov
repnz
pop
movl
out
movsb
pop
mov
add
lret
pop
mov
scas
leave
test
add
add
add
jmp
sub
pop
push
push
push
call
add
add
fcmovne
add
js
fnstcw
push
fiaddl
cmpsb
cmpsb
add
flds
mov
push
add
add
in
add
xchg
roll
add
fwait
imul
into
loope
add
ljmp
add
xchg
outsl
mov
mov
push
shr
sub
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
call
add
jae
lds
pusha
lods
insb
cmpsb
notl
into
scas
jae
fiadds
xchg
sti
xorl
jecxz
xlat
iret
add
mov
mov
xchg
mov
add
popf
add
add
lea
push
mov
ret
add
stc
je
add
fcompl
push
push
shr
add
lea
pop
push
push
rol
ror
pop
push
push
inc
ror
shr
rol
pop
testl
push
push
push
push
lea
push
push
call
addr16
add
fiaddl
push
call
sahf
mov
jb
add
idiv
mov
not
add
pop
flds
mov
neg
fadds
add
pop
cmpb
faddp
scas
add
fisubl
add
add
add
in
call
call
push
push
call
add
pop
iret
jl
mov
add
jns
imul
push
clc
add
pop
add
popf
add
flds
out
add
add
test
add
test
add
add
je
add
flds
add
xchg
cli
call
push
push
push
call
push
imul
icebp
cmpsb
gs
shlb
scas
mov
in
hlt
mov
ja
in
push
in
add
mov
std
ret
stos
cld
leave
add
add
movsl
sub
pop
mov
push
xor
xor
lea
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
push
push
call
pusha
stos
out
imul
add
pop
xchg
fadds
out
mov
push
add
mov
in
add
add
add
scas
add
clc
add
addb
add
push
add
xchg
pushf
fisubs
add
sub
pop
push
push
lea
not
rol
pop
push
call
push
shr
pop
cmpl
jne
push
rol
rol
lea
pop
pop
push
push
push
call
faddl
fldt
push
stos
loopne
add
add
addl
add
fcoms
pop
push
add
mov
add
loope
testl
test
add
arpl
add
cmc
xchg
mov
add
add
add
movsb
jb
xchg
addl
add
scas
jo
add
mov
shlb
in
hlt
pop
pop
pop
push
lea
push
push
push
push
call
scas
add
lcall
add
mov
popa
ljmp
call
into
mov
fldl
test
out
mov
xchg
loop
add
mov
lcall
push
add
shr
sub
pop
leave
push
push
push
push
push
push
push
call
loope
out
ljmp
xchg
add
add
out
enter
insb
add
stos
add
lret
jb
ficoml
jns
add
mov
imul
fwait
lahf
js
add
mov
jecxz
int
rorb
lcall
add
push
push
xor
pop
mov
push
push
push
push
push
push
lea
push
push
call
arpl
add
test
add
rorb
xchg
out
mov
xchg
imul
mov
add
pop
add
icebp
add
loopne
add
push
add
shl
pop
push
push
push
push
push
call
xchg
xchg
add
xchg
add
add
add
add
scas
popa
icebp
jecxz
popa
std
add
loope
add
mov
cmpsb
enter
movl
mov
push
fsubl
mov
mov
pop
cmpsl
add
sub
pop
push
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
loope
mov
fwait
lods
add
add
add
fld
add
add
xchg
add
add
add
add
pop
xchg
add
stc
pop
hlt
add
lcall
movl
push
not
sub
add
xor
pop
push
push
push
lea
push
lea
push
push
call
in
add
pop
idivb
add
out
add
mov
jp
add
mov
out
sti
leave
push
add
mov
mov
push
shrb
mov
aad
in
in
pop
call
push
push
push
push
lea
push
push
lea
push
push
call
add
fs
push
jmp
rol
mov
jecxz
mov
sti
les
add
add
fwait
in
bnd
imul
fisubs
push
movsb
add
jp
imul
filds
rcr
add
push
push
add
pop
call
push
add
add
rol
pop
subl
cmpl
jne
push
sub
shl
pop
pop
push
inc
inc
pop
pop
pop
push
push
push
push
push
push
push
push
call
mov
ja
scas
pushf
add
add
stos
add
jae
movsb
add
jne
add
in
lods
add
cmc
rorb
mov
add
ret
jl
add
jl
add
xchg
lock
push
scas
add
add
cmc
xchg
test
mov
xchg
jmp
movsb
add
pop
add
sub
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
add
jmp
lods
subl
push
stos
add
mov
add
stc
add
xchg
faddl
into
mov
add
cmpsb
stc
stos
jle
mov
xchg
bound
ret
add
add
add
lock
pop
leave
ret
push
shr
inc
rol
pop
push
mov
push
xor
add
rol
inc
pop
add
push
ror
ror
shr
pop
push
push
not
pop
push
push
push
lea
push
push
push
push
call
add
mov
jns
add
mov
hlt
mov
push
mov
lret
mov
push
call
add
pop
stc
add
addl
mov
xchg
add
cmc
pushf
jge
add
adcl
cmc
add
je
xchg
sub
pop
push
push
sub
sub
pop
mov
push
rol
add
pop
lea
push
lea
xor
shl
pop
sub
push
rol
add
shl
dec
pop
mov
push
add
shl
shl
rol
pop
shr
push
push
push
lea
push
push
push
push
push
call
pop
add
flds
in
add
add
add
add
add
aam
mov
mov
bound
movsb
add
iret
add
int
add
push
lahf
scas
add
cltd
add
in
loopne
add
mov
push
inc
shr
rol
pop
mov
add
push
lea
ror
pop
add
push
sub
sub
pop
mov
push
dec
pop
mov
push
lea
push
push
push
push
push
push
push
push
push
call
pusha
mov
xlat
imul
leave
add
outsw
add
add
pop
mov
add
data16
add
mov
add
mov
push
jecxz
jl
add
add
enter
xchg
gs
add
mov
lret
xchg
lcall
add
scas
cltd
jp
rolb
jb
add
lcall
pop
outsl
jne
push
add
not
pop
cmp
jne
mov
push
not
pop
movl
jmp
push
push
push
call
into
add
test
int
test
ficoms
add
icebp
add
add
rolb
fs
xchg
loope
add
std
jne
mov
add
popf
cli
add
cmpsb
add
cld
add
mov
add
sti
pop
add
movl
fimull
hlt
pop
mov
push
sub
pop
mov
push
xor
rol
add
sub
pop
sub
jne
push
push
push
push
push
push
push
push
push
call
push
enter
add
add
pop
xchg
jb
roll
add
add
add
add
into
out
cmc
add
adcl
add
rolb
add
jp
iret
icebp
in
add
leave
xchg
pop
lret
andl
add
add
add
sub
pop
mov
push
inc
pop
movl
jmp
push
push
lea
push
push
push
call
jle
mov
add
icebp
mov
rcr
scas
add
nop
mov
mov
out
out
mov
add
add
cld
add
add
add
arpl
add
lcall
inc
cld
mov
push
dec
ror
not
pop
cmp
jne
push
inc
sub
pop
mov
push
inc
inc
pop
movl
jmp
push
push
push
call
rcrb
add
ficompl
lods
out
mov
add
jl
bnd
mov
push
mov
add
int
faddl
add
add
add
in
pop
mov
add
fisubrs
add
lcall
inc
cld
cmpw
jne
push
shr
add
pop
mov
movl
push
add
pop
jmp
push
push
push
call
popa
loope
rolb
mov
in
add
mov
add
jmp
add
test
pop
add
addb
pusha
cli
sub
pop
pushl
pop
push
not
xor
pop
mov
push
rol
pop
mov
mov
push
push
shr
dec
rol
push
push
pop
add
dec
add
sub
rol
pop
not
add
rol
pop
push
add
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
cltd
clc
add
lcall
add
add
add
mov
jo
bound
add
in
add
add
iret
lret
add
add
pop
cmpsb
add
loop
add
cmpsl
mov
out
add
xchg
add
lcall
push
add
mov
nop
mov
add
fdivr
lcall
stc
cmp
add
out
ret
cmp
add
push
push
shl
rol
sub
push
sub
add
ror
sub
ror
add
shr
pop
pop
push
shr
ror
pop
push
push
push
push
push
push
lea
push
push
call
ja
add
add
add
mov
add
add
mov
mov
loop
int3
add
out
icebp
add
ljmp
lcall
push
add
push
add
not
sub
pop
cmpl
je
push
push
sub
ror
push
or
not
add
shl
inc
not
sub
ror
pop
sub
rol
pop
push
push
push
push
push
push
push
push
lea
push
call
jl
add
test
imul
loop
add
pop
lahf
jbe
add
mov
ja
add
add
jge
add
add
out
lock
xchg
jnp
adc
add
push
push
loopne
add
add
xchg
fstp
lcall
jle
mov
incb
push
push
push
push
call
add
leave
jge
icebp
add
add
add
add
mov
mov
add
cld
into
mov
push
add
add
add
add
shlb
add
mov
add
repnz
xchg
add
add
xor
add
push
shl
add
pop
cmpl
je
push
push
dec
not
sub
push
push
pop
add
add
sub
shr
pop
lea
pop
push
xor
add
rol
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
add
add
add
add
stos
xchg
leave
xlat
rolb
out
push
ja
add
add
add
add
add
mov
add
out
imul
add
add
add
clc
jge
imul
fcomps
ja
add
push
add
pop
cmpl
je
push
push
add
push
xor
add
dec
sub
sub
sub
sub
lea
inc
pop
add
shl
not
sub
pop
push
ror
lea
add
pop
push
call
push
xor
rol
pop
cmpl
je
push
push
ror
sub
sub
push
sub
add
sub
not
sub
add
add
rol
pop
sub
add
dec
pop
push
dec
add
sub
pop
push
call
push
push
push
push
push
call
mov
push
mov
cli
mov
add
add
add
sahf
add
je
add
xchg
add
jb
movsb
jecxz
in
mov
out
loop
cmc
push
add
add
int3
cltd
std
mov
mov
add
rolb
sub
pop
cmpl
je
push
push
shl
push
and
add
sub
not
inc
sub
sub
sub
dec
pop
shr
lea
add
shr
pop
push
dec
not
pop
push
call
push
lea
push
lea
push
push
push
lea
push
call
ja
int
add
testl
pusha
stos
add
add
add
add
stc
add
pop
test
mov
out
into
mov
ret
mov
outsl
add
add
add
mov
push
aam
loop
loope
mov
lods
sub
pop
cmpl
je
push
push
sub
push
or
inc
add
ror
xor
sub
rol
add
pop
add
pop
push
push
push
push
push
push
call
add
sahf
cld
add
add
int3
out
add
ret
push
test
xchg
push
int3
les
movsb
addr16
push
test
add
rcl
add
add
xchg
xchg
jne
push
mov
mov
ret
sub
pop
push
call
push
push
push
push
push
lea
push
lea
push
call
je
into
jno
je
outsl
jae
mov
add
clc
lea
add
lock
into
data16
repnz
call
loopne
mov
mov
js
mov
xchg
js
int3
fldz
ret
sbb
add
push
push
shl
lea
add
sub
push
and
add
shr
dec
sub
shl
pop
sub
pop
push
ror
shl
pop
push
push
sub
inc
pop
call
push
lea
dec
pop
cmpl
je
push
push
shr
shl
push
or
inc
add
dec
lea
sub
pop
sub
pop
push
add
add
sub
pop
push
push
shl
xor
shl
pop
call
push
push
call
add
aam
add
add
mov
rclb
mov
add
popf
push
add
add
stc
add
jp
add
std
mov
out
add
add
out
add
stos
add
mov
std
imul
pop
add
addb
add
add
jmp
popf
addr16
pop
cmpl
je
push
push
dec
add
shr
dec
push
or
not
add
ror
xor
xor
sub
shl
sub
pop
shr
pop
push
push
push
call
jae
cmpsl
jmp
add
outsl
add
mov
add
addb
loopne
fs
push
loopne
imul
stos
add
nop
add
add
sahf
add
add
test
popf
add
add
add
stc
sbbl
leave
add
sub
pop
push
push
push
push
push
call
pop
addl
add
add
call
pusha
faddl
add
sarl
add
push
add
add
pop
add
add
add
cmpsl
scas
mov
int
add
int3
add
scas
jmp
clc
shlb
add
loop
call
movb
pop
call
push
inc
pop
cmpl
je
push
push
inc
push
and
add
sub
dec
pop
shl
add
shl
pop
push
add
pop
push
push
push
push
lea
push
push
call
in
xchg
stc
imull
add
add
leave
add
add
add
imul
roll
add
mov
add
jbe
sarb
out
loopne
into
push
cmpsb
add
jge
add
add
lret
mov
in
pop
call
cmpl
je
push
push
sub
add
push
or
inc
add
add
not
sub
add
not
pop
ror
shl
pop
push
lea
pop
push
push
not
dec
pop
call
cmpl
jne
push
rol
inc
add
pop
mov
movl
push
push
call
out
int
rolb
iret
movb
jl
int
in
out
cmpsb
add
push
div
fcmovne
add
clc
pop
add
cwtl
loope
add
add
mov
mov
rolb
add
stos
add
add
pop
jmp
out
add
lcall
arpl
add
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
divl
pop
add
add
push
xchg
ret
insb
jnp
add
add
cmc
ret
add
imul
sarb
lods
shlb
mov
add
add
add
loopne
xor
pop
push
push
push
call
in
mov
xchg
pop
bnd
pop
add
mov
imul
mov
std
add
add
test
push
add
pop
push
add
add
sub
sub
pop
pop
push
shl
pop
pop
push
push
push
push
push
push
call
add
mov
clc
leave
add
pop
add
rolb
add
jne
push
add
bound
add
sub
pop
leave
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
ficoml
loope
jo
in
add
imul
pop
jb
add
in
add
add
mov
movsl
ja
gs
outsl
in
addr16
fs
add
movsl
mov
out
add
mov
add
iret
add
pusha
add
mov
sbbb
sub
pop
ret
push
lea
dec
add
pop
push
push
xor
lea
add
xor
pop
mov
push
push
call
add
mov
std
jne
add
add
add
jne
add
mov
add
int
add
je
jb
add
push
pop
add
jo
add
add
or
mov
mov
add
in
mov
pop
mov
iret
out
pop
add
stos
testb
in
push
push
lea
push
push
push
push
call
mov
pop
mov
jns
cmpsl
cwtl
mov
add
jp
int
add
add
mov
mov
add
in
mov
icebp
mov
add
test
movl
cli
les
jbe
add
add
in
in
call
cmpl
jne
push
push
not
dec
push
and
add
ror
sub
xor
pop
inc
pop
push
lea
push
lea
push
push
lea
push
call
add
mov
pushf
in
fstl
pop
roll
add
add
add
add
add
mov
jge
mov
js
incb
popl
add
add
xchg
add
add
lods
pop
mov
test
in
in
lcall
jne
push
ror
pop
call
push
pop
push
push
push
push
lea
push
lea
push
push
call
fs
add
testl
mov
mov
push
addl
lock
ja
rorl
add
bound
add
jbe
loop
lret
test
add
pop
sahf
std
add
add
cmpsb
outsl
add
roll
imul
in
call
add
add
push
lea
push
push
lea
push
push
lea
push
push
push
call
ja
cmpsl
add
scas
pushf
add
cltd
stos
ja
mov
cmpsb
mov
add
add
add
add
int3
add
mov
rcrl
add
fildl
add
cmpl
je
push
lea
push
call
add
add
mov
jp
xlat
fcmovnb
add
push
iret
add
repnz
add
mov
fiaddl
add
pop
int
rcr
add
add
repnz
gs
add
sub
pop
cmpl
jne
push
push
push
push
push
call
add
add
add
add
sar
add
cmc
clc
popf
fimull
xchg
mov
mov
rolb
in
jae
xchg
mov
cld
fists
leave
push
push
push
push
lea
push
push
push
push
call
jecxz
add
in
enter
insb
popl
aam
jne
test
add
ljmp
add
cli
add
fprem
add
add
iret
stos
mov
sub
pop
add
pop
push
push
push
push
push
push
push
call
fcom
add
pop
mov
push
add
addl
add
lea
add
add
pop
jns
add
cmpsb
add
cltd
pop
add
mov
hlt
add
into
sub
pop
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
add
pop
add
pushf
mov
pushf
add
loopne
push
call
add
add
add
cltd
pop
add
add
mov
add
add
lcall
push
push
push
push
lea
push
call
xchg
pop
loope
cld
mov
add
addb
shll
add
movsb
jns
lahf
add
shll
ret
add
jo
out
data16
shrl
arpl
addr16
popa
add
xchg
in
add
mov
lea
add
add
add
add
mov
lcall
push
add
ror
pop
add
ret
push
push
push
push
push
push
push
push
push
call
mov
add
pop
xchg
add
jle
add
mov
scas
add
repnz
rclb
mov
movsl
stc
mov
in
fcompl
lock
add
out
int3
pop
cmpl
jne
push
push
add
add
inc
lea
push
sub
add
sub
sub
shl
sub
lea
xor
pop
sub
pop
push
shr
shr
lea
pop
pushl
push
rol
pop
call
push
push
push
call
add
idivb
add
add
jge
fidivrl
add
mov
mov
std
iret
jecxz
add
add
add
pusha
add
add
js
add
jnp
add
add
xchg
fistpll
add
add
out
mov
sub
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
jmp
mov
jle
movsb
mov
in
fiaddl
fstp
iret
les
movsb
movsb
clc
xlat
add
add
in
out
sub
pop
call
push
lea
push
push
lea
push
lea
push
push
push
call
orl
add
test
add
gs
add
mov
add
in
add
add
in
add
mov
jge
add
test
push
push
push
push
push
push
call
leave
mov
add
decb
add
push
add
ljmp
mov
hlt
add
mov
mov
add
mov
clc
mov
add
add
mov
xchg
add
stos
in
add
xlat
jecxz
adcb
add
nop
in
add
push
add
loop
add
push
lret
add
mov
in
in
mov
push
lea
pop
mov
push
dec
sub
rol
pop
push
push
push
add
push
or
inc
add
inc
sub
lea
shl
pop
ror
shr
xor
pop
push
dec
not
sub
pop
pushl
call
push
rol
pop
call
push
push
add
lea
inc
dec
push
xor
add
dec
sub
sub
sub
sub
pop
dec
inc
pop
push
lea
dec
add
pop
pushl
push
sub
sub
pop
call
call
push
push
add
push
or
inc
add
dec
shr
sub
sub
lea
lea
pop
rol
shl
not
shr
pop
push
add
not
inc
pop
pushl
push
ror
add
xor
pop
call
push
rol
add
sub
ror
pop
call
push
push
not
dec
inc
push
or
inc
add
not
sub
add
shr
pop
add
pop
push
push
push
lea
push
lea
push
push
call
ret
lret
add
xchg
xor
pusha
add
jne
test
mov
in
stos
lret
add
int
push
add
sti
icebp
shl
mov
jl
testb
jl
add
add
lcall
jne
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
mov
add
add
fcompl
xlat
faddl
iret
jge
xchg
add
cmpsb
add
data16
add
cmc
add
imul
mov
xchg
loope
fiaddl
aad
add
pop
iret
add
fwait
add
in
fcomps
in
daa
add
call
push
push
inc
push
xor
add
sub
ror
inc
sub
sub
add
pop
ror
pop
push
not
pop
pushl
push
dec
pop
call
push
add
shr
pop
call
push
push
shl
push
and
add
inc
inc
sub
rol
sub
pop
inc
add
dec
pop
push
ror
ror
shr
pop
pushl
call
push
lea
push
push
push
push
push
push
call
fmuls
movl
add
fwait
mov
add
add
std
xchg
add
lahf
scas
lods
rolb
add
cmpsl
add
mov
fildl
mov
add
fistps
add
mov
push
sub
pop
call
push
push
shl
push
and
add
sub
ror
add
sub
sub
add
xor
shl
pop
not
inc
pop
push
push
push
lea
push
push
push
push
push
push
push
call
aam
mov
add
pop
add
sbbl
add
add
mov
add
lcall
mov
lcall
jne
push
push
lea
push
push
push
lea
push
lea
push
push
call
cmc
mov
ret
add
add
test
test
loopne
mov
les
add
mov
lods
add
push
add
gs
addb
mov
add
jnp
add
pop
call
call
push
push
sub
push
or
inc
add
rol
rol
sub
sub
pop
shr
inc
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
fldl
pop
jle
mov
lock
push
pop
push
add
add
in
mov
jecxz
cmpsb
add
fsubrs
jl
call
add
test
sahf
add
clc
jb
add
add
cmpsl
add
mov
add
jns
add
lea
pusha
add
lcall
jne
push
push
push
lea
push
push
push
call
je
add
add
pop
add
repnz
jle
add
add
add
add
in
ljmp
lods
xchg
add
add
fildl
test
jnp
add
lcall
adc
push
push
xor
push
or
not
add
xor
add
add
sub
not
sub
pop
ror
not
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
test
jecxz
xchg
test
pop
incb
add
lods
fs
push
mov
cmpsb
out
clc
sub
pop
pushl
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
lret
add
add
gs
add
add
mov
lds
lds
aad
leave
push
add
add
test
jge
std
pop
lret
add
in
in
add
add
xchg
cltd
add
iret
add
add
clc
push
mov
add
scas
repnz
add
push
add
imull
in
fdivr
lcall
and
add
loopne
pop
call
push
push
shr
push
or
inc
add
sub
lea
dec
sub
shr
sub
add
pop
lea
lea
lea
shr
pop
push
shr
pop
pushl
push
shr
xor
ror
add
pop
call
push
pop
lea
push
push
push
push
push
push
push
push
call
jno
iret
add
test
add
popf
mov
add
add
add
loope
xor
imul
add
add
faddl
stos
gs
sti
shlb
fildl
xchg
shrb
scas
js
push
xor
push
or
not
add
ror
not
sub
add
inc
sub
pop
dec
add
lea
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
outsl
popl
add
popa
out
add
out
popa
out
jge
insb
int3
rcll
push
in
add
add
add
loop
mov
lahf
mov
jo
pop
add
pop
faddl
nop
sub
pop
pushl
call
push
pop
call
push
push
push
or
not
add
rol
sub
rol
add
pop
not
pop
push
sub
add
pop
pushl
push
push
push
push
push
push
push
push
call
add
rolb
add
xchg
pop
add
fdivl
test
add
add
mov
gs
cli
jl
in
add
add
add
add
cwtl
jae
je
jge
add
pop
add
add
add
data16
sub
pop
call
push
pop
call
push
push
inc
add
xor
push
push
pop
add
add
not
inc
sub
dec
not
pop
xor
inc
sub
shr
pop
push
shl
pop
pushl
push
not
sub
pop
call
push
add
dec
sub
shl
pop
call
push
push
push
call
mov
add
mov
scas
mov
addb
push
lock
xchg
add
imul
add
add
push
add
add
add
pusha
aad
push
add
mov
fwait
add
pop
cwtl
add
add
fst
mov
xchg
movsl
add
add
sub
pop
lea
push
push
sub
push
xor
add
shr
sub
sub
add
add
pop
dec
dec
dec
pop
push
push
push
call
icebp
add
mov
mov
mov
pop
add
add
pushf
jno
lods
stos
jp
xlat
add
mov
add
jp
icebp
mov
add
imul
adcb
aad
movsl
fs
addb
add
jns
mov
add
lock
add
fisttps
lcall
jne
push
push
push
push
push
lea
push
call
add
mov
add
out
xchg
movsb
mov
out
jae
push
add
add
add
lods
add
jecxz
leave
add
add
popf
addl
loope
les
add
aam
add
fdivl
add
add
mov
addl
movsl
pop
jb
add
sub
lea
push
push
push
push
call
add
xchg
add
rcrb
jecxz
add
lods
scas
imul
add
add
mov
mov
mov
add
xchg
add
add
add
xlat
test
add
test
add
add
cwtl
mov
jge
add
ror
mov
push
push
add
pop
call
push
push
sub
push
or
inc
add
add
add
add
sub
inc
dec
pop
shr
pop
push
lea
push
call
data16
add
xchg
xchg
add
xchg
lock
hlt
mov
add
in
add
insb
add
fiaddl
mov
add
cld
fistpll
jo
loop
in
clc
lcall
jne
call
push
xor
dec
not
pop
call
push
sub
pop
mov
push
push
add
sub
push
or
not
add
shr
sub
xor
pop
pop
push
add
add
ror
pop
pushl
push
shl
pop
call
push
shr
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
mov
cwtl
mov
add
aam
add
fidivs
add
rorb
add
repnz
int3
mov
add
add
add
add
rcrl
xlat
repnz
lcall
jne
push
push
push
push
push
call
ja
add
add
imul
add
add
add
movsb
mov
push
add
add
add
lcall
add
sahf
add
enter
jbe
out
mov
ret
imul
fiadds
mov
add
movsl
ret
out
icebp
add
add
in
in
lcall
shrb
sahf
jns
push
add
sub
push
xor
add
shr
lea
shl
xor
sub
not
ror
pop
inc
pop
push
push
push
push
lea
push
lea
push
call
add
add
lods
xchg
fucom
scas
test
pop
into
jb
add
cli
mov
add
add
movb
into
int3
ja
xchg
add
push
cwtl
push
add
add
into
add
xchg
mov
lret
lods
add
mov
add
mov
xchg
mov
sub
pop
pushl
call
push
push
add
dec
sub
push
and
add
ror
xor
sub
ror
add
pop
sub
pop
push
push
shr
rol
sub
xor
push
sub
add
shl
dec
sub
shr
pop
pop
push
rol
shr
shl
pop
call
push
push
shl
sub
xor
push
or
not
add
add
sub
dec
shl
pop
xor
pop
push
ror
add
pop
pushl
call
push
rol
pop
mov
push
push
push
call
add
add
mov
add
add
clc
cmpsl
add
add
scas
add
add
add
subl
hlt
pop
lea
lea
push
push
push
push
push
call
jecxz
mov
cli
cmpsb
pop
add
jns
add
mov
rorl
jl
lahf
push
add
add
push
ret
xor
add
add
imul
int
sub
pop
push
push
add
rol
shr
pop
push
push
add
rol
pop
push
push
lea
push
push
lea
push
call
add
test
idivb
mov
jmp
xchg
aam
add
arpl
add
xlat
fcom
rorb
add
add
add
out
add
pushf
movsb
mov
xchg
add
add
add
jle
loop
add
lret
mov
les
pop
push
push
rol
pop
push
push
ror
sub
pop
push
push
push
xor
xor
pop
push
pushl
push
push
push
push
call
mov
leave
lods
add
fldl
cmpsb
mov
add
fdiv
add
mov
add
popa
add
pop
jmp
ja
add
mov
add
add
mov
addr16
addl
flds
call
pop
add
add
push
push
push
lea
push
lea
push
push
push
call
add
arpl
add
cli
push
scas
add
add
mov
jno
add
jp
add
pushf
add
lea
pusha
fistps
sti
pop
add
add
fs
add
xchg
sub
pop
call
push
push
inc
push
or
not
add
add
not
dec
sub
rol
pop
pop
push
lea
dec
pop
pushl
push
sub
pop
call
push
sub
add
not
pop
call
push
lea
push
push
lea
push
push
push
call
push
repnz
push
clc
add
lock
aad
sahf
add
add
add
out
add
mov
add
fs
lahf
mov
jecxz
mov
jno
add
shlb
andl
inc
clc
push
push
lea
push
push
push
push
push
push
call
scas
mov
add
mov
pop
push
push
shlb
sahf
rolb
jmp
jbe
in
fwait
add
add
add
add
fists
cld
add
add
add
fiaddl
dec
jne
push
shr
sub
pop
jmp
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
lods
add
imul
lods
imul
add
sahf
add
push
je
add
xchg
add
xchg
mov
add
sub
pop
call
push
push
add
dec
push
push
pop
add
shr
not
shr
sub
ror
pop
add
pop
push
dec
inc
pop
pushl
push
shl
add
pop
call
push
push
push
lea
push
push
call
add
push
add
jbe
add
mov
mov
lret
ret
sahf
add
lahf
jae
xchg
jmp
lds
bnd
in
lock
lcall
sarb
push
inc
ror
pop
lea
push
push
ror
sub
push
push
pop
add
xor
sub
sub
rol
ror
shr
add
pop
pop
push
ror
pop
pushl
push
push
call
add
add
mov
jnp
xchg
rol
jp
rcr
add
aad
lods
iret
add
out
add
jne
lret
movl
xchg
add
mov
mov
add
add
clc
pop
call
push
dec
pop
push
push
push
push
lea
push
push
push
push
push
call
cld
add
addb
add
fwait
add
mov
add
enter
add
xchg
rcrb
roll
add
add
lcall
shrb
mov
fdivl
faddp
jmp
push
xor
add
not
sub
sub
shr
not
shl
pop
shr
not
pop
push
ror
lea
shr
pop
pushl
call
push
push
push
push
push
push
call
add
add
stos
add
addl
jo
mov
movl
jge
pop
mov
out
in
call
inc
cld
push
sub
inc
shr
pop
lea
push
push
add
inc
lea
shl
push
or
inc
add
xor
sub
sub
add
sub
pop
inc
rol
add
pop
push
push
push
lea
push
push
lea
push
call
call
jle
out
out
add
in
in
out
pushf
xchg
add
bound
add
in
pop
push
mov
aad
pop
add
lcall
jne
push
push
push
lea
push
push
call
cmc
add
into
scas
add
out
add
test
pop
test
mov
mov
notl
pop
test
mov
mov
loopne
add
push
sub
pop
call
push
pop
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
std
add
lods
sahf
clc
mov
mov
add
add
add
cli
jge
add
add
add
add
mov
mov
add
scas
lock
add
add
fcmove
xchg
add
add
push
mov
movsb
xlat
pop
add
push
push
push
push
push
call
pop
shl
mov
into
in
add
add
mov
fwait
test
pop
add
fists
out
movsl
mov
add
movb
fwait
cwtl
in
add
push
mov
flds
lock
pusha
lds
call
idivl
add
xchg
ljmp
add
add
add
jo
sub
pop
push
push
not
rol
add
sub
pop
push
push
lea
push
push
push
push
push
call
ret
loop
shr
rolb
scas
add
add
jnp
add
stos
mov
add
add
push
repnz
mov
in
bound
cmc
test
add
add
mov
test
add
sbb
jbe
xchg
add
sub
pop
pushl
push
push
inc
xor
push
sub
add
lea
inc
inc
sub
xor
not
add
pop
not
dec
rol
not
pop
push
push
lea
push
call
xchg
mov
add
mov
add
iret
cwtl
incb
mov
mov
std
add
push
scas
cmpsb
add
pop
stos
mov
add
add
fadd
add
xchg
add
mov
add
add
push
jne
pop
icebp
rcr
add
lcall
push
add
shr
sub
pop
call
push
push
inc
xor
dec
push
xor
add
xor
inc
sub
not
pop
lea
inc
pop
push
push
call
call
add
fdivrl
movsl
rolb
mov
xorb
fs
add
add
add
test
add
jne
push
add
dec
pop
call
push
push
push
push
push
push
push
call
push
nop
stos
stos
add
rolb
out
mov
jne
add
out
add
jge
add
add
add
pop
jmp
stos
add
data16
scas
add
shll
mov
add
add
push
push
popa
popl
jmp
add
mov
add
movsb
stos
add
add
testb
in
in
push
push
push
lea
push
lea
push
push
push
call
add
mov
std
clc
flds
add
sbbb
ficoml
int3
pop
hlt
add
add
mov
add
add
imul
aad
repnz
cmpsb
add
nop
pop
outsl
hlt
jl
jle
add
cmpsb
out
mov
jns
push
add
shrb
xchg
loop
push
shl
push
or
not
add
rol
sub
inc
pop
dec
pop
push
lea
push
lea
push
push
lea
push
push
push
call
lahf
scas
sahf
mov
mov
add
jge
mov
hlt
cmpsl
add
add
add
pushf
add
mov
cmpsl
add
ret
xlat
add
mov
xchg
roll
mov
in
lcall
jne
push
xor
shl
pop
call
push
push
push
push
call
ret
add
mov
mov
xchg
lret
add
add
push
push
add
movsl
sarl
test
mov
add
add
add
mov
fst
add
push
mov
jae
jns
mov
add
rclb
rolb
jmp
push
lea
pop
pushl
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
cld
ja
push
mov
lcall
ljmp
not
add
add
lea
add
add
pop
add
mov
lcall
mov
jmp
push
push
ror
push
or
not
add
add
sub
shl
add
pop
lea
pop
push
shr
shl
lea
not
pop
pushl
call
push
lea
inc
ror
pop
push
push
lea
pop
call
push
push
ror
xor
push
sub
add
ror
add
sub
sub
pop
ror
pop
push
ror
pop
pushl
push
lea
push
push
push
call
add
into
add
add
int
add
mov
jno
add
add
xchg
add
add
add
pushf
out
lods
shlb
repnz
push
xchg
xchg
sub
pop
call
push
push
push
lea
push
call
imul
cmc
add
add
push
add
add
fldl
hlt
mov
add
scas
int
add
add
je
aad
add
into
mov
push
fstpt
lcall
rclb
lret
rol
adc
push
rol
pop
add
pop
push
lea
lea
pop
pop
pop
push
lea
not
pop
pop
leave
push
lea
pop
add
ret
push
lea
push
push
push
push
push
push
push
push
call
enter
add
mov
rorl
mul
add
add
add
pop
xchg
add
add
add
in
add
xchg
add
lret
int3
add
jno
into
add
sahf
add
arpl
rcll
les
cltd
add
add
fdivr
lcall
ret
push
lea
sub
xor
pop
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
pop
add
pop
add
clc
leave
lcall
pop
add
jl
fisubrl
fldl
pop
ljmp
add
pop
xchg
add
imul
add
mov
icebp
xchg
add
movsb
fcomps
mov
mov
add
add
cmpsl
jne
in
sar
jns
sub
pop
mov
cmpl
jne
push
push
lea
push
push
call
stos
popf
mov
mov
shrb
in
in
add
out
add
add
add
add
add
xchg
xlat
clc
fnclex
mov
mov
incb
add
xchg
fldenv
cli
add
fildl
mov
fdivl
add
in
lock
mov
push
push
push
push
call
stc
out
add
cld
test
leave
add
add
enter
outsl
jbe
jmp
xchg
pop
out
cli
push
enter
add
add
jle
add
add
push
xchg
jp
add
add
add
jbe
test
mov
xchg
imull
incb
add
flds
cmc
imul
in
lock
jmp
push
lea
push
push
lea
push
push
push
push
call
add
fmulp
lcall
in
aam
add
push
add
clc
mov
add
les
roll
xchg
pop
popf
add
add
mov
add
mov
add
lcall
inc
or
loopne
push
lea
push
push
push
call
ficoms
jp
add
cld
pop
mov
sti
mov
add
add
add
outsl
add
lods
add
test
nop
xchg
jl
add
lcall
leave
push
rol
sub
pop
xor
push
rol
sub
pop
add
push
push
call
mov
mov
push
add
pop
add
add
arpl
imul
stos
jnp
add
xlat
push
enter
in
clc
lcall
dec
decl
push
lea
push
push
push
push
push
lea
push
push
call
add
fcom
push
jle
sti
stc
mov
loopne
add
add
add
xchg
int
add
add
add
pop
lock
test
out
push
stos
mov
add
pop
je
mov
and
add
add
lea
add
in
fcompl
jmp
jmp
push
dec
xor
pop
sub
push
lea
push
call
int3
add
add
add
add
add
loope
add
subl
add
add
jmp
enter
add
lahf
add
in
add
fildl
add
cmpsl
cld
add
sahf
sti
xchg
push
add
add
stos
add
mov
add
cmpsb
mov
add
xor
dec
xor
xor
dec
pop
sub
push
push
lea
push
push
push
push
push
call
rcrb
mov
mov
in
add
mov
add
imul
fldcw
add
jp
jno
add
fstpt
rolb
add
add
add
roll
add
add
add
scas
xchg
cmpsb
add
in
lcall
cmp
or
decl
aam
sbb
add
rol
pop
lea
push
dec
inc
pop
sub
push
sub
shr
pop
mov
shr
push
shl
rol
dec
pop
add
sub
push
push
push
lea
push
lea
push
push
push
lea
push
call
addr16
addl
add
lcall
xchg
iret
push
jb
xchg
mov
add
lock
movsb
add
in
add
add
mov
add
aam
shl
movl
pushl
pop
push
xor
pop
shr
push
not
dec
pop
and
sub
push
add
inc
shr
shl
pop
cmp
jne
push
push
lea
push
call
popf
add
jmp
add
add
test
retw
xorl
cld
xchg
hlt
jbe
add
add
add
in
cld
lds
in
add
mov
jecxz
lods
add
add
add
aam
add
aam
add
mov
hlt
pop
leave
push
lea
push
push
push
push
call
add
roll
enter
mov
aam
fbstp
sar
add
jge
enter
imul
flds
mov
add
add
fildl
fistpll
imulb
add
add
mov
add
jbe
add
lahf
testb
add
xlat
jne
or
push
call
add
add
mov
push
add
imul
push
mov
cltd
add
mov
add
test
add
mov
jae
std
fiadds
push
mov
jecxz
add
add
popa
scas
fnstenv
lret
mov
std
fwait
leave
leave
pop
stos
out
add
mov
pop
push
push
ror
add
pop
mov
add
push
xor
pop
push
push
push
call
push
movsl
add
jno
lret
add
add
push
gs
mov
add
scas
pop
add
add
mov
icebp
push
xchg
insb
cmpsb
mov
add
add
add
add
lret
add
pusha
add
lods
loop
leave
lea
stc
roll
add
fwait
ljmp
lcall
push
push
push
call
xchg
add
add
out
add
pop
mov
into
add
push
add
jne
jecxz
arpl
sahf
jl
add
add
mov
add
jecxz
out
mov
jge
add
add
popf
scas
test
xchg
jne
pop
add
jae
scas
add
in
clc
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
faddl
add
push
sarl
push
test
test
fucom
add
addl
add
add
sarb
add
add
in
loopne
push
mov
push
push
push
push
push
push
push
push
push
push
call
ja
mov
add
add
xorb
jbe
add
add
loope
pop
mov
in
add
ret
sbbl
iret
add
lcall
push
cmp
ljmp
adc
call
mov
jecxz
imul
mov
push
push
lea
push
lea
push
push
lea
push
push
call
mov
leave
add
add
mov
add
mov
add
add
out
test
add
lods
add
les
test
add
push
sub
pop
shr
push
push
push
call
pop
pushf
add
xchg
jmp
cld
mov
icebp
testb
add
les
fiadds
lea
fiadds
test
bound
out
add
add
lea
hlt
pop
add
push
not
sub
pop
mov
push
ror
rol
pop
add
push
push
lea
push
push
push
push
lea
push
call
add
jbe
popa
add
add
js
add
cmpsb
add
add
jne
iret
mov
ja
fcompl
add
mov
add
lcall
mov
add
add
add
scas
in
add
aad
in
in
lcall
jnp
push
sub
lea
pop
add
xor
push
shr
pop
mov
push
shr
dec
pop
and
push
shl
add
sub
sub
pop
rol
rol
push
push
lea
push
lea
push
push
lea
push
push
push
call
aam
movsb
stos
xorb
cli
cltd
add
jecxz
lea
jnp
mov
jb
add
add
test
enter
lcall
add
rorb
shl
sub
pop
inc
push
push
lea
push
lea
push
lea
push
call
movb
xchg
movsl
imul
cmpsb
add
movsb
mov
movsl
fildl
mov
mov
add
cmc
xchg
add
add
add
add
scas
add
mov
fiadds
out
mov
add
lock
add
outsl
test
add
sub
pop
cmpb
jne
push
sub
pop
add
push
push
lea
push
call
add
mov
movsb
out
addb
mov
clc
stos
pop
add
pusha
mov
add
add
lcall
ja
sahf
add
push
push
add
lods
sub
pop
cmp
je
push
push
push
push
push
call
add
cltd
je
add
stc
add
add
popf
mov
je
add
sbbw
add
imul
mov
mov
loope
jmp
add
push
int3
add
call
add
add
cmpl
jne
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
mov
pop
add
add
into
add
in
add
mov
xchg
fnsave
push
add
in
loopne
lcall
rclb
xchg
mov
push
push
push
push
push
call
add
mov
pop
pop
pusha
ja
add
add
imul
cwtl
add
lea
push
mov
add
add
add
push
jae
mov
fildl
jb
add
mov
mov
push
pushf
ljmp
add
call
add
add
bound
add
sub
pop
pop
push
not
not
rol
pop
pop
push
inc
shl
pop
pop
push
add
inc
pop
pop
push
ror
sub
pop
pop
push
lea
pop
leave
ret
push
shl
shr
inc
pop
mov
add
push
push
push
push
push
push
push
lea
push
push
push
call
add
out
add
in
out
add
add
xchg
addl
loop
add
add
add
mov
movsb
jne
mov
mov
rolb
add
enter
popa
add
xchg
pushf
add
ljmp
push
push
sub
pop
push
push
push
push
call
insb
xlat
add
mov
add
enter
sbbl
mov
add
hlt
add
test
push
add
add
add
xchg
add
mov
in
hlt
pop
add
mov
push
add
xor
pop
testw
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
jo
stos
add
add
fistpl
nop
xchg
add
add
out
mov
mov
mov
test
add
add
pop
add
pop
in
fadds
add
jo
in
fcomps
push
push
push
push
lea
push
push
call
add
add
jnp
stos
push
add
mov
add
add
pop
ja
lea
sbbl
cmc
xlat
lahf
ret
out
subb
pusha
out
add
imul
xchg
addl
xlat
add
jle
in
call
push
dec
add
pop
push
call
push
push
push
call
rcl
jge
mov
add
push
mov
fistl
addl
add
mov
add
imul
jmp
xor
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
add
mov
add
cltd
pop
fcomip
push
mov
gs
jle
xchg
add
jle
test
jae
mov
cmpsb
sub
add
mov
mov
mov
add
add
outsl
push
jbe
lock
cwtl
cmc
add
push
not
pop
pop
pop
push
not
ror
xor
pop
pop
push
shl
xor
dec
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
push
jp
out
lret
mov
add
aam
pop
nop
add
jne
add
outsl
test
filds
pop
mov
jecxz
add
rolb
add
push
push
lea
push
push
push
push
push
push
push
push
call
mov
add
lock
add
add
addr16
add
cmpb
add
add
mov
test
add
push
pusha
add
jne
pop
movsb
out
shll
sahf
pop
aam
sahf
add
stos
add
out
lret
lret
add
in
cmp
mov
test
add
sub
pop
ret
push
lea
push
push
push
call
je
xchg
addr16
add
mov
push
lods
out
jmp
add
add
mov
xchg
cltd
add
mov
popa
mov
pop
add
sub
pop
push
mov
push
push
lea
push
push
call
pop
mov
popa
add
fxch
into
mov
add
outsl
add
cli
add
push
cld
add
iret
add
fsubrl
push
add
mov
popf
mov
add
add
sub
pop
add
push
push
call
fsubrs
add
mov
mov
jge
js
mov
cli
lea
addb
xorb
shl
fistl
add
pop
sub
pop
push
push
lea
push
push
push
push
lea
push
push
call
cmpsb
add
out
mov
cmpsl
add
mov
cltd
xchg
sahf
xchg
into
popa
add
popf
push
add
ja
movsl
add
jl
mov
jae
arpl
add
add
test
jecxz
add
loopne
test
mov
in
add
in
add
in
out
clc
push
add
test
add
pusha
add
push
ror
rol
xor
pop
push
push
pop
push
push
not
pop
mov
push
push
push
lea
push
call
popa
jno
add
jmp
mov
add
add
pop
add
int
add
jb
popf
add
mov
mov
add
sub
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
add
rcll
lea
mov
add
add
in
mov
loop
add
add
outsl
lcall
leave
test
fucomi
lods
lret
add
add
cld
mov
push
sbbl
mov
mov
mov
sub
pop
lea
sub
push
shr
xor
pop
mov
shr
push
push
push
push
push
push
push
push
push
push
call
leave
add
cltd
add
mov
sahf
lcall
mov
pop
jecxz
in
add
iret
add
jo
add
add
rcrl
in
ret
stc
add
push
cltd
hlt
sub
pop
add
mov
push
shr
not
pop
add
push
push
push
push
push
push
push
push
call
mov
add
mov
xchg
push
into
mov
pop
imul
js
cmpsl
or
lods
add
ljmp
jno
add
in
loopne
pushl
push
sub
pop
popl
mov
push
shl
inc
pop
add
xor
push
pop
lea
push
shr
xor
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
call
loope
pop
add
add
gs
add
push
stc
lret
add
scas
lods
add
add
je
pop
push
pop
pop
call
outsl
add
movl
fldl
pop
add
add
mov
add
add
add
fiadds
rcll
sar
mov
push
push
push
push
push
push
call
add
add
add
pop
add
add
in
xchg
add
add
flds
popa
xchg
push
add
add
mov
pop
in
enter
stos
add
into
pop
add
mov
out
mov
ljmp
in
call
push
push
push
push
lea
push
push
push
lea
push
push
push
call
aam
std
add
add
filds
xchg
stos
add
add
add
add
add
add
hlt
nop
xchg
imul
cwtl
pop
add
add
lcall
in
lret
add
mov
ficoml
mov
mov
lcall
push
push
lea
push
lea
push
push
push
push
call
add
mov
js
popa
add
push
add
data16
sarb
add
lret
add
loop
test
int
mov
add
rclb
add
scas
add
frstor
call
imul
in
in
lcall
push
xor
xor
xor
rol
pop
xor
push
push
call
mov
add
add
ret
add
add
push
cmpsb
clc
imulb
fld1
int3
leave
jae
mov
add
add
add
into
add
add
clc
add
cltd
add
add
bound
fdivr
add
add
aad
add
mov
cld
repnz
mov
div
rolb
lcall
push
add
sub
pop
nop
push
lea
push
push
push
push
call
add
flds
add
mov
add
xchg
xchg
add
add
add
test
mov
push
lret
add
add
decb
cmpsl
mov
add
lcall
nop
push
push
push
push
push
push
push
call
arpl
add
popa
pop
lret
add
jo
jo
add
add
add
ja
mov
push
jbe
movb
int
mov
je
cltd
add
sub
pop
nop
push
pop
cmpb
jne
push
shr
inc
pop
add
push
not
pop
nop
nop
push
xor
pop
cmp
je
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
loopne
add
add
outsl
mov
clc
incb
add
xchg
loop
mov
pop
add
mov
aam
add
cmpsl
test
insb
in
push
add
push
iret
gs
loopne
mov
jo
test
push
mov
sbbb
nop
push
push
push
call
mov
icebp
add
mov
imul
in
mov
add
push
sub
add
iret
test
lcall
push
lea
push
push
push
push
lea
push
push
push
push
call
sti
mov
add
xchg
into
add
add
add
add
rorl
add
icebp
add
add
add
cmpsb
loopne
loop
mov
int
in
fdivr
lcall
push
not
add
dec
pop
nop
nop
push
ror
dec
pop
cmp
jb
push
push
push
push
push
lea
push
push
call
cmpsb
shr
jae
add
ret
cmpsb
icebp
sahf
mov
push
jecxz
cmc
loopne
add
add
push
add
arpl
std
mov
mov
mov
in
xor
jmp
push
add
ror
pop
mov
push
shr
dec
pop
add
movzwl
push
sub
pop
mov
push
push
lea
push
push
push
call
loope
sarl
int3
add
cwtl
in
add
loopne
push
mov
xchg
xchg
fidivl
data16
add
leave
nop
int3
icebp
push
xlat
cld
xchg
add
push
lahf
add
xorl
in
aad
roll
add
stc
sahf
xchg
lcall
rorl
in
dec
lea
inc
pop
xor
xor
push
xor
pop
shl
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
aad
add
mov
incb
shll
out
add
cwtl
mov
add
mov
in
shl
push
les
add
imul
faddl
scas
pop
flds
clc
jmp
add
mov
stc
movsl
xchg
movsl
leave
xchg
add
pusha
add
sub
pop
xor
push
ror
pop
shl
push
shr
sub
pop
xor
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
rcll
fsub
add
jae
add
add
aam
xchg
add
jp
add
add
sub
pop
shl
push
rol
pop
xor
push
push
push
push
push
push
push
push
push
call
rcl
mov
testb
scas
add
add
add
lods
push
leave
add
xchg
shr
mov
mov
fistl
mov
jne
add
pop
add
mov
add
pop
jl
sahf
add
rcll
pop
add
push
sub
pop
pop
pop
push
push
lea
push
call
ljmp
jbe
cmpsb
aad
lods
add
ret
roll
out
add
add
xchg
add
fldl
xchg
jmp
add
leave
mov
add
movl
fadds
pop
push
pop
leave
ret
push
lea
lea
shr
pop
push
push
shl
shr
pop
mov
push
sub
sub
lea
pop
push
push
lea
push
push
call
test
cwtl
add
test
ljmp
repnz
add
popf
std
popl
imul
cwtl
jl
sahf
add
mov
sub
pop
push
push
push
push
push
push
call
test
add
add
add
add
xchg
add
push
pop
lods
pop
add
fcomps
out
add
jno
add
loope
add
ja
in
jbe
add
aad
add
lcall
push
push
add
rol
inc
pop
mov
push
sub
add
inc
pop
mov
mov
push
shl
rol
add
pop
test
je
push
lea
push
push
push
push
call
xchg
xlat
xchg
add
in
add
into
shlb
mov
imul
ret
add
mov
mov
add
loope
icebp
adcl
movb
insb
add
xchg
incb
test
sahf
add
stos
add
lret
push
leave
push
add
icebp
sub
pop
mov
push
lea
push
call
stc
push
add
mov
add
add
add
xchg
mov
add
push
xlat
pop
fs
out
jns
jne
pushf
loop
push
addb
arpl
add
addb
add
clc
pop
test
je
push
push
push
push
call
add
mov
cmpsb
add
push
add
add
xchg
in
add
add
xchg
movsb
mov
mov
mov
aam
add
jl
test
pop
mov
push
lea
push
push
call
roll
sahf
xchg
add
vcvttpd2dqy
loopne
les
shl
add
xchg
push
add
add
pushf
iret
lret
add
sti
sti
add
lock
test
stc
add
add
lods
rcr
enter
add
jl
popf
mov
mov
lds
add
adcl
hlt
lcall
dec
or
inc
ror
inc
inc
pop
mov
push
add
pop
inc
push
push
push
lea
push
lea
push
push
push
push
push
push
call
jae
movsb
loop
add
jge
add
add
je
jae
lcall
add
fadds
add
add
add
frstor
clc
fwait
add
add
out
add
pop
pushf
imul
test
add
pop
add
rorb
test
push
push
call
push
int
popa
add
mov
lds
pop
add
into
pop
add
add
rol
add
add
aad
cmpsl
mov
add
add
rolb
jp
not
mov
add
fcmovb
arpl
mov
in
add
addl
std
add
mov
addl
in
hlt
lcall
rorb
fiadds
add
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
lods
xchg
xchg
add
add
add
add
add
pusha
jne
add
mov
add
fiadds
xchg
jnp
loopne
ffree
add
add
loope
sahf
lods
movsl
jbe
add
ja
sub
pop
inc
push
push
push
push
push
push
push
lea
push
push
push
call
add
scas
add
xchg
add
mov
les
add
in
jmp
mov
add
pop
cmp
je
push
dec
xor
dec
pop
test
jne
push
add
lea
pop
xor
push
xor
add
pop
pop
pop
push
push
lea
push
lea
push
lea
push
push
call
scas
push
xchg
add
add
adcl
cli
je
mov
cmpsl
pop
fsincos
mov
fadds
push
jns
xchg
add
movb
mov
mov
add
scas
lret
add
jecxz
add
add
fildl
add
pop
add
shl
ljmp
shrl
jne
add
add
rorl
lcall
push
push
push
push
push
push
push
call
sarb
cli
mov
add
popf
test
add
lods
in
add
jbe
add
testl
pop
jne
xchg
jo
add
add
push
fiaddl
jl
add
pop
add
cwtl
roll
pop
nop
fadd
pop
xchg
add
sub
pop
pop
push
add
add
pop
leave
push
lea
push
push
lea
push
push
push
call
lock
stos
imul
lods
push
xchg
add
add
add
fdivrl
popf
vpsubb
add
push
mov
add
arpl
sub
pop
ret
mov
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
pop
jnp
add
notl
js
xchg
arpl
gs
int
cmpsl
outsl
scas
fwait
mov
scas
fistl
push
lret
andb
mov
icebp
mov
mov
add
in
aad
add
jbe
add
ja
lea
lcall
cmp
jne
push
add
pop
lea
push
push
push
push
push
push
call
cltd
add
add
out
push
stos
push
add
out
icebp
fisubrl
lods
add
iret
lds
push
popa
add
pushf
push
add
jns
mov
test
test
add
pusha
add
fists
add
imul
gs
popa
lret
mov
call
mov
test
je
push
ror
shr
pop
mov
push
shr
xor
add
pop
add
cmp
jne
push
ror
pop
mov
push
ror
not
pop
test
je
push
inc
inc
not
pop
mov
add
push
push
push
call
add
add
add
add
xchg
lods
add
les
clc
add
add
jnp
add
fiadds
sub
pop
cmp
je
push
lea
push
push
call
mov
xchg
xchg
popf
add
out
add
mov
add
sbbl
lock
in
popf
iret
jnp
xlat
mov
add
pop
push
hlt
mov
push
mov
lock
faddl
mov
add
hlt
lcall
pusha
cli
call
inc
not
pop
xor
push
lea
push
push
lea
push
push
call
scas
fisubl
add
add
add
movsb
mov
push
test
xchg
add
xlat
test
add
add
test
sti
add
test
add
add
mov
nop
add
scas
aam
in
in
lcall
pop
push
push
push
lea
push
push
push
call
mov
mov
mov
testl
add
add
add
add
mov
pop
cld
testl
push
fmuls
add
mov
pop
push
sub
ror
inc
lea
pop
pop
push
pop
leave
ret
push
push
lea
push
push
call
pushf
fadds
out
fstl
out
add
ja
add
add
jecxz
add
call
push
push
scas
cwtl
ja
add
clc
add
roll
in
sub
pop
lea
push
add
inc
pop
pop
push
lea
pop
pop
push
push
push
push
push
push
call
hlt
cwtl
push
add
mov
add
jnp
test
add
mov
lcall
cmpsb
lods
loope
cmpsb
add
mov
pop
lock
mov
push
add
add
shrb
mov
stos
rolb
gs
jb
jle
lret
sub
pop
pop
push
push
push
push
push
call
imul
adcl
jae
mov
imul
stc
push
add
add
add
lcall
xchg
add
addb
xchg
ja
movsb
lea
add
push
add
pusha
jne
in
nop
add
pop
jecxz
push
sub
pop
pop
push
inc
pop
leave
ret
push
ror
sub
pop
mov
push
add
not
pop
pop
pop
push
xor
sub
pop
pop
pop
push
sub
sub
inc
pop
leave
push
push
push
push
lea
push
push
push
push
push
push
call
add
loope
out
mov
mov
jp
pop
mov
add
out
add
in
insb
scas
out
mov
add
pushf
test
add
mov
push
add
in
fdivr
lcall
or
xor
cmp
insb
xor
adc
and
adc
inc
cmp
mov
hlt
cmp
xor
adc
jb
adc
add
add
cmpsb
jmp
outsl
ja
mov
cld
sbb
dec
out
or
data16
popa
cltd
out
xchg
test
xchg
pop
jns
cmp
dec
lcall
jnp
jne
mov
dec
mov
aaa
and
outsl
popf
mov
mov
adc
xor
je
test
jne
aas
imul
gs
jne
sbb
les
vdivsd
nop
es
pop
stos
xor
pop
jb
push
in
or
dec
in
movsb
test
push
adc
pop
xchg
dec
call
xchg
or
push
test
xchg
leave
push
repz
ret
mov
scas
jp
mov
pop
icebp
push
in
mov
push
inc
subl
pusha
add
mov
push
rolb
dec
jo
repnz
loope
mov
cltd
sbb
mov
xor
repz
bound
aam
sub
add
push
pusha
cltd
jmp
test
xchg
aam
mov
pop
or
and
lea
jle
sbb
adc
test
xchg
or
push
push
pop
insl
cmpl
cs
es
sbb
jge
mov
pop
xlat
lret
lret
cmp
lret
sarb
out
xchg
push
xor
adcl
or
scas
jb
into
ret
sub
test
xchg
cld
insl
movsb
rcr
mov
jnp
and
lock
stos
xchg
sahf
cld
mov
fisttps
jp
scas
mov
push
in
pop
stos
lahf
cmp
mov
lret
mov
and
repnz
dec
rorl
push
jae
enter
stos
pop
inc
test
in
fildl
in
and
cmp
push
hlt
push
push
mov
add
mov
loop
or
and
movsl
int3
fcompl
add
cmp
push
cs
into
pop
cmp
addr16
inc
cmp
xchg
shr
push
jbe
and
lcall
inc
out
cmpsl
push
add
push
pop
xchg
pushf
xorl
push
shll
cmp
xor
sbb
aas
or
lret
outsl
xor
fmuls
dec
push
or
aam
arpl
cmp
mov
mov
pop
xor
outsb
cmp
sbb
cld
jnp
push
mov
rcrl
insl
dec
and
dec
xchg
leave
out
ficompl
mov
pop
adc
call
mov
sbb
ret
inc
ret
sar
jns
fwait
mov
aas
jo
mov
jp
ret
shl
std
push
dec
jge
out
test
out
or
ret
pop
sbb
sbb
imul
dec
mov
outsl
je
mov
mov
xchg
ja
push
or
lahf
mov
test
jb
inc
lahf
lods
cmp
in
das
cmp
add
push
sub
adc
iret
push
icebp
mov
xchg
mov
hlt
dec
push
add
or
ffreep
cli
cwtl
call
jp
pop
mov
out
mov
out
dec
cmp
mov
add
fs
pop
loop
std
push
mov
add
das
fs
jmp
sub
popf
and
xcrypt-ctr
cmpsl
lcall
cmpsl
ret
push
out
jg
xor
cltd
mov
mov
lret
in
out
adc
dec
stos
outsl
or
and
and
push
nop
addr16
cmpb
clc
xor
jbe
cs
icebp
loop
dec
pushf
xlat
pop
add
outsl
fidivrl
in
cwtl
or
mov
ss
testl
adc
xchg
jmp
and
aaa
jno
inc
mov
inc
pop
fs
add
xchg
mov
out
or
jge,pn
mov
es
fst
idivb
or
in
sbb
add
xchg
out
inc
inc
sti
cmp
decb
mov
pop
aas
js
jl
mov
jae
inc
outsb
cmp
adc
adc
push
insb
push
pushw
jb
negb
inc
push
in
push
pushf
add
shlb
dec
pop
inc
ljmp
sub
out
pop
aaa
pop
mov
hlt
xchg
scas
jmp
and
fsubr
stos
fbld
fisubs
mov
or
dec
sbbb
or
fiadds
inc
repnz
inc
xchg
add
ret
cmp
mov
movsl
js
xchg
pop
xor
mov
rcrl
sub
cmp
aaa
aad
shl
nop
int
ret
sbb
mov
xchg
arpl
jae
mov
and
or
fwait
lahf
daa
add
insl
fsubrs
enter
sbb
inc
lods
outsl
add
clc
mov
xor
test
jno
aam
es
cltd
and
ljmp
jo
push
pop
inc
mov
mov
mov
mov
iret
jns
in
ret
mov
adc
enter
pop
daa
pandn
outsb
inc
int
jno
mov
cld
sub
out
mov
sbb
loopne
shr
mov
jbe
cmp
pop
dec
in
push
mov
push
inc
add
add
clc
jb
test
and
add
add
int
shr
jnp
das
sbb
push
xchg
mov
push
cwtl
fidivrs
xchg
lea
xor
leave
insl
mov
sahf
cmp
pushf
scas
cwtl
insl
outsl
es
out
mov
mov
mov
mov
jle
jo
scas
repz
andl
popf
pusha
insl
loope
movsl
mov
mov
inc
pusha
ficompl
pop
pop
stos
sbb
xor
fisttpl
sbb
push
into
popf
push
dec
inc
mov
mov
sub
iret
mov
xor
push
mov
pushf
icebp
xor
stos
cmpsl
lret
push
xchg
iret
fisttps
js
sarl
into
add
mov
stos
leave
xor
insb
icebp
push
es
jmp
in
les
lret
xor
mov
add
ret
xchg
scas
aas
sub
xor
push
andl
enter
sahf
scas
rorb
popa
pop
hlt
sti
inc
jno
movsb
jmp
pop
fldcw
add
pop
hlt
xchg
insb
test
or
jns
add
push
out
xchg
push
test
aad
jge
lret
sub
mov
lret
mov
ret
ret
gs
inc
pushl
gs
cmpsb
popa
pop
test
hlt
sahf
outsb
in
out
shrb
mov
add
cmpsl
cmp
mov
cmpsb
adc
fisttps
inc
cmp
sbb
pop
cmp
mov
push
sbb
leave
ljmp
in
and
fdivl
push
out
inc
fcmovne
std
inc
pop
lds
cli
or
add
push
sar
fdivr
lret
data16
outsl
mov
xor
push
scas
lahf
mov
push
mul
ret
lret
adcl
cmp
mov
stc
jb
mov
fidivl
mov
ret
adc
pop
fbstp
jmp
movsl
scas
add
and
sub
inc
mov
sbb
push
push
mov
call
pusha
or
leave
pop
sub
cmc
xchg
sbb
cmp
push
daa
add
shll
mov
sbb
cmp
push
xchg
pop
cmp
jb
push
repz
std
inc
push
icebp
sahf
mov
ljmp
scas
push
aad
jbe
out
cmc
jecxz
sub
push
aas
jmp
sub
jecxz
nop
jbe
inc
pop
dec
dec
js
dec
mov
pop
faddl
mov
mov
sub
addr16
jne
pop
jle
scas
pop
or
push
and
mov
xor
sti
ljmp
fidivrs
or
into
and
adc
rcrl
xchg
inc
nop
mov
stc
add
xor
loope
ret
xor
jns
xor
pop
aam
pop
push
mov
mov
mov
insb
push
int
push
roll
stos
mov
pop
jbe
dec
cmp
test
leave
cld
jno
leave
jge
repz
adc
scas
or
fdivrs
mov
ds
xchg
mov
pop
fimull
nop
jno
xor
daa
xchg
push
xchg
roll
testb
jns
xor
ss
mov
dec
mov
shll
out
pop
cmpsl
mov
fstps
mov
out
xchg
xlat
push
in
adc
pusha
aam
insb
lods
mov
subb
out
jecxz
outsl
jmp
dec
pop
out
inc
into
cmp
push
mov
repz
jb
add
testb
fiaddl
mov
test
mov
pop
fdecstp
jbe
ret
push
fimull
test
pop
xchg
lret
push
cld
call
inc
insb
push
mov
adc
lods
and
sbb
fs
push
jnp
xchg
ret
sub
pop
mov
rclb
mov
fldcw
and
popa
data16
ss
and
mov
push
mov
negb
inc
jne
test
sbb
dec
sub
int3
cmc
sahf
sub
add
sbb
enter
daa
add
mov
in
subl
xor
mov
in
stos
sub
jge
cmp
into
loopne
mov
cltd
dec
mov
cmp
sbb
icebp
pop
ret
inc
fisttpl
jne
xor
pop
xchg
mov
sub
je
imul
jecxz
dec
rcrb
inc
jmp
outsb
inc
jb
test
scas
aas
fucomp
pop
push
mov
and
and
rolb
xor
aas
inc
sbb
lock
nop
out
sub
xor
test
inc
mov
cmc
push
mov
mov
insb
sti
add
push
cli
and
cmp
je
in
mov
pop
mov
dec
dec
add
mov
cmp
push
mov
add
cmp
lods
pop
mov
push
cld
fdivs
lea
mov
out
xchg
cmp
push
adc
es
push
or
push
lret
fwait
pushf
fcmovne
mov
int3
lea
jb
ret
xor
and
ljmp
pop
icebp
cmpsb
jns
push
dec
cli
dec
movsl
jmp
fwait
dec
mov
xchg
bound
adc
xor
xor
push
insl
gs
dec
cs
xchg
sbb
pop
into
and
pop
dec
mov
lods
lahf
fiaddl
loope
out
loop
lods
ret
mov
dec
xchg
inc
sub
jp
jp
sarl
adc
inc
push
dec
dec
adc
mov
pop
dec
cmp
pop
outsb
dec
xchg
and
add
jbe
push
xlat
xchg
jae
push
fcoms
jle
add
les
push
in
mov
mov
add
subl
mov
lcall
les
mov
inc
dec
pop
leave
mov
pop
imul
sti
mov
push
push
dec
cld
lea
inc
dec
addr16
lock
cltd
mov
dec
pushf
pop
mov
insl
rolb
xchg
add
dec
int3
jne
outsl
xlat
or
push
faddl
in
jns
cmp
xchg
femms
dec
lea
mov
jmp
or
mov
add
in
pop
mov
roll
neg
ss
outsl
add
in
pop
or
inc
lods
pop
shlb
push
sbb
in
mov
or
rcrl
cmp
ds
adc
mov
and
testb
inc
sbb
mov
pop
sub
insb
mov
inc
jge
test
test
pusha
cmpsb
test
dec
insl
xchg
xlat
mov
lea
stc
or
and
jmp
fwait
dec
test
je
fs
xchg
adc
xchg
and
hlt
push
mov
pop
enter
and
push
mov
cmp
mov
rcr
test
insl
add
sub
fidivl
insl
test
inc
push
dec
pop
sub
mov
inc
push
dec
add
sbb
dec
push
add
pop
jbe
pop
mov
dec
cmp
mov
cmpsl
pushf
jecxz
call
daa
push
pop
lock
lea
or
xchg
push
insb
into
lret
pop
inc
das
popf
pop
movl
sbb
push
loop
outsl
mov
inc
insb
xchg
mov
dec
push
popf
pusha
test
cli
into
int3
das
mov
icebp
inc
aad
int3
push
hlt
pshufw
pop
push
and
jle
mov
cmpsb
add
mov
mov
add
dec
sti
xlat
pop
lea
rclb
mov
jp
andb
and
imul
iret
shll
mov
dec
inc
fsubl
bound
fistpl
rcrb
clc
and
ljmp
sbb
mov
pop
xchg
inc
pop
push
add
fs
sub
mov
loopne
mov
xor
adc
insb
lret
sub
insl
out
mov
push
jl
sbb
das
leave
or
cmp
xchg
shrb
clc
jnp
int3
test
mov
insb
sub
shl
adc
cmpsl
lahf
sub
mov
loopne
add
jl
sbbb
arpl
std
loop
mov
jbe
or
add
and
rcl
cmp
and
pop
jge
cld
sub
mov
mov
cwtl
popa
in
jp
mov
cwtl
xchg
icebp
add
leave
aas
adc
jle
adcl
inc
flds
push
popf
in
sbb
cmp
mov
jle
pusha
nop
and
jmp
dec
lcall
inc
mov
jnp
shrb
push
push
test
xor
xor
hlt
sbb
lcall
mov
xor
lods
xor
add
imul
sbb
outsb
xor
mov
adc
inc
lock
loopne
xchg
in
js
jmp
out
xor
and
xor
jno
outsl
and
pop
inc
cs
insl
jg
pop
fldl
rcr
cmp
fwait
lock
iret
pusha
lret
sub
aas
fimuls
jnp
or
loop
dec
inc
incb
psrlq
pushf
inc
int
fcom
nop
sbb
mov
and
testb
subb
adc
cmp
into
lret
xor
sahf
xchg
mov
cmp
outsb
imul
enter
jb
push
adc
ljmp
and
dec
data16
cmc
sub
dec
xchg
push
pop
testl
jle
call
fwait
add
ret
scas
jbe
dec
imul
out
jle
iret
inc
push
mov
fsubrs
xor
icebp
aad
test
test
mov
sarl
call
and
xor
loopne
scas
push
pop
mov
rorb
in
xchg
pop
fiaddl
dec
and
fwait
dec
jle
fsub
in
jmp
inc
lock
shrb
call
test
xor
mov
stos
outsl
add
pop
int3
enter
fucomp
push
mov
jb
mov
mov
stc
mov
and
or
xchg
mov
stc
mov
negb
mov
push
rcl
frstor
pop
jno
ljmp
test
pop
cmp
fcoms
mov
iret
add
out
lock
pop
xor
jae
leave
mov
dec
mov
lea
int3
push
cmp
in
ds
pop
je
mov
jb
push
pop
jbe
loope
sbb
mov
fcomps
outsl
rcr
lea
pop
dec
push
xchg
mov
jg
mov
jne
sub
push
cmp
cld
mov
std
push
lods
and
mov
call
lret
push
mov
out
pop
jge
lahf
sbb
negl
in
dec
xor
pop
aad
sbb
flds
jbe
cmp
push
mov
xorl
inc
fistpll
mov
out
jo
in
push
sahf
int3
mov
xchg
pop
std
cmc
xor
insl
adc
pop
pop
push
mov
mov
loop
push
mov
addr16
je
jno
push
cmpb
sahf
loop
insl
sti
jmp
es
rorb
mov
fwait
jne
mov
fs
lds
test
pop
or
jnp
mov
jno
sub
mov
out
mov
mov
jmp
fnstenv
fs
push
mov
lock
add
mov
push
test
xor
hlt
mov
jnp
jae
jecxz
mov
or
test
cmp
and
push
mov
or
out
jp
in
inc
fimuls
stos
ja
inc
mov
ljmp
popf
lds
sub
dec
popa
lcall
nop
and
xor
jno
inc
mov
inc
fs
jno
or
jae
jae
push
sub
push
cld
cmp
out
xchg
popf
jmp
or
push
adc
cwtl
test
add
ds
imul
jmp
mov
fldl
cmp
xchg
sub
push
and
inc
gs
and
movsl
push
cs
jmp
ja
sbb
mov
pop
add
lods
xor
jl
cmp
enter
loop
and
test
scas
push
ds
add
sub
call
xlat
add
xor
cmp
mov
mov
arpl
jmp
mov
enter
je
sbb
stos
mov
test
scas
rcr
mov
lods
sbb
leave
movsl
add
push
cld
out
mov
cmpsb
sub
leave
pusha
lods
xchg
mov
arpl
sub
jecxz
mov
add
add
or
xlat
das
mov
mov
and
jnp
mov
aam
dec
mov
cmc
pop
std
xchg
cwtl
fwait
xor
aaa
pop
jno
ss
mov
xlat
test
cld
mov
push
sbb
out
or
adc
xchg
fucom
addb
setnp
push
add
mov
sbb
out
pop
lea
pop
insb
adc
iret
hlt
add
mov
inc
das
les
cmp
sarl
push
loope
dec
push
xchg
push
shll
push
or
jecxz
mov
out
scas
dec
pop
adc
xor
push
imul
push
jne
lods
mov
mov
stos
lock
mov
in
xor
cmpsb
push
inc
std
push
and
xor
loopne
mov
xchg
dec
pop
out
or
push
ret
into
out
dec
je
cmp
jg
sbb
mov
mov
fisttps
repz
rcrl
je
loopne
xchg
lret
rcrl
jl
or
mov
or
pop
pop
loope
mov
cmp
inc
dec
push
inc
aas
lahf
pushf
lods
aaa
outsb
andl
mov
stos
sahf
inc
jo
addr16
mov
mov
pop
add
cmc
stos
rorl
mov
faddl
cmp
jae
jl
cmp
sub
pop
fldlg2
pop
ret
xor
daa
lods
mov
shl
push
outsb
cmp
lods
jmp
out
jno
mov
cmc
pop
jge
loop
cmp
iret
aas
pop
sbb
pusha
mov
cmp
jmp
fcmovne
aaa
mov
int3
in
xor
push
orb
mov
sub
rcll
repnz
push
loop
cmp
mov
into
stc
mov
cwtl
adc
sub
mov
outsl
mull
cmp
stos
loope
pop
bnd
inc
cmp
shll
xor
out
iret
daa
adc
cmpsl
jp
pushf
test
leave
jae
rcll
pop
test
push
pusha
sub
add
aam
lods
or
or
jp
in
aad
bound
add
pusha
repnz
xor
icebp
mov
nop
cmp
je
add
adc
hlt
push
dec
xor
into
push
xor
or
icebp
add
int
fwait
mov
pop
test
scas
jno
push
int
push
mov
inc
inc
in
int3
adc
jge
bndstx
mov
pop
push
dec
cwtl
clc
mov
sub
je
and
mov
xchg
cmpsl
jne
push
mov
sub
xchg
jne
aas
scas
pop
lcall
push
sbb
in
cltd
mov
shrb
icebp
or
add
fsubl
cltd
in
cmc
jl
sbb
xchg
jmp
lock
jl
push
shrb
jecxz
clc
movsb
int3
mov
leave
dec
popa
lods
add
aad
add
lahf
sub
jge
arpl
inc
movsl
xor
loope
sub
push
jmp
cmp
das
add
popa
lds
mov
popa
dec
addr16
out
pushl
hlt
jno
push
mov
mov
test
mov
adc
xchg
pop
jl
jl
jge
jo
push
stos
mov
in
decb
rorb
pop
sbbl
push
sti
xchg
cwtl
ja
jge
pop
sub
cmp
and
push
sbb
in
sub
ficomps
lret
iret
xchg
test
sbb
xchg
in
jecxz
push
lock
fxch
lahf
lods
std
jl
push
and
and
fsub
fcompl
mov
inc
mov
in
insl
mov
jne,pt
fimull
addr16
mov
mov
cmpsl
fisttpll
and
dec
mov
fs
test
insl
pop
push
pop
add
inc
sub
cmpsb
cmp
or
cmpsl
roll
scas
dec
mov
loop
imul
cmpsb
jg
push
test
je
adc
xchg
loop
dec
sub
jae
xor
cmp
mov
sub
sarb
jnp,pt
push
loope
fcoml
dec
and
jns
cmp
xchg
loopne
mov
sarl
adc
fldt
xchg
jnp
hlt
aaa
inc
sub
pusha
aam
cmp
insb
bound
iret
cmp
cld
pop
and
mov
cmpsb
jmp
xchg
mov
adc
jmp
out
push
sbb
jg
mov
fbld
adc
fcomip
ret
insl
and
or
repz
adc
and
lahf
lock
mov
adc
pop
or
sub
add
addr16
xchg
loopne
cmp
lret
inc
cmp
adc
fdivr
adc
stos
add
inc
dec
or
mov
cmp
leave
sbb
xchg
adc
jnp
xor
outsb
ss
insb
dec
jae
stos
dec
xorb
add
mov
mov
xchg
inc
fs
insb
enter
sub
and
jnp
sub
inc
jp
pop
loope
mov
sub
cmp
cmp
pushf
repz
cmp
inc
fmuls
adc
pushf
sahf
or
testb
sbb
or
jne
jno
arpl
mov
push
add
push
rcll
or
xor
jnp
jo
mov
iret
in
jno
jp
jbe
es
mov
js
std
jmp
repnz
or
repz
mov
push
mov
aaa
add
xchg
mov
dec
sub
cwtl
movb
xchg
xor
sub
sbb
cmpsb
xchg
push
xor
sub
xor
inc
movsl
jae
pop
sbb
insl
xchg
inc
add
and
cmc
popf
sbb
lods
outsb
pop
mov
dec
mov
pusha
arpl
mov
xor
cmpsb
pop
call
rol
mov
aas
fldcw
adc
xchg
cmc
xchg
cmp
dec
jbe
inc
xor
ds
xchg
push
pop
les
addr16
mov
shll
movsb
mov
xchg
dec
adc
mov
shlb
push
mov
dec
mov
loope
rclb
subl
xor
xchg
jg
cld
lds
rcrl
dec
sar
cmp
jp,pn
cmp
xchg
jb
aaa
mov
dec
loope
pop
jno
js
sbb
mov
repz
push
sbb
mov
ja
dec
inc
mov
outsl
in
stc
dec
jne
push
in
ret
jbe
dec
lret
and
jp
pop
popa
add
mov
inc
sbb
and
cmpsb
fdiv
sub
add
test
test
ja
popf
repz
cli
hlt
dec
pop
inc
mov
std
inc
push
out
xor
add
or
fwait
int
pop
imul
mov
std
jb
cmc
cmc
out
leave
pop
out
jecxz
shlb
mov
push
cli
add
xchg
inc
xor
dec
rcrl
sti
push
sbb
mov
cmpsb
mov
mov
jge
xchg
mov
mov
outsb
push
sub
mov
dec
xchg
inc
inc
xor
out
add
jl
xchg
push
imul
lret
mov
dec
jle
stc
popf
je
frstor
popa
cmp
xchg
push
xchg
mov
lret
add
pop
and
out
sub
scas
and
stos
add
rcrb
jb
sbb
push
xchg
fs
hlt
or
aaa
getsec
xchg
push
repz
mov
mov
push
nopl
hlt
cmpsb
repnz
pop
in
fsubrs
ror
push
sbbb
xor
pop
lods
outsb
dec
xchg
in
adc
ficompl
incl
mov
leave
test
inc
xchg
stos
fwait
or
add
outsl
jmp
movsl
arpl
std
data16
sbb
jbe
adc
adc
pusha
add
lods
int
cmc
xchg
std
and
popl
push
call
inc
inc
orb
xor
cwtl
xor
ja
mov
fwait
jg
fwait
or
mov
in
lods
mov
pop
movsl
shll
add
dec
adc
sahf
mov
aad
lods
mov
outsb
repnz
adcl
pop
and
je
xor
dec
dec
iret
or
rcl
xchg
add
shrb
and
insb
xor
aad
cltd
cmpsb
dec
cmp
sub
sbb
adc
lds
imull
fidivl
push
mov
fisubrl
call
xchg
xor
nop
jae
mov
scas
add
add
mov
dec
outsl
shr
xchg
mov
and
pusha
aam
push
stos
cmp
inc
icebp
test
stc
jmp
call
inc
jno
imul
lret
push
pop
in
outsl
xor
adc
das
fwait
orl
mov
cld
pop
pop
cmp
lods
xchg
push
pop
xchg
aas
daa
mov
int3
cmpsb
push
out
daa
xlat
mov
or
add
rcll
std
xchg
inc
jb
mov
inc
dec
ret
inc
adc
pop
vunpckhps
jae
cmp
lods
dec
and
xchg
fistl
push
pop
mov
andl
aam
cmp
ss
and
pop
outsl
int3
xchg
jmp
fldpi
pop
sti
jne
mov
test
cmpsb
aaa
mov
inc
stos
shll
push
loop
or
lcall
adc
addr16
sti
lret
jecxz
or
sarl
orl
loopne
lock
adc
in
mov
add
pop
ret
and
insl
xor
jecxz
loopne
or
mov
pop
addr16
inc
jo
outsl
or
shlb
inc
fcoms
sub
test
mov
cmpsb
push
lcall
ljmp
and
pop
je
les
adc
jmp
call
xchg
push
lea
cmp
daa
jmp
into
leave
cmp
push
je
in
and
fsubrs
jmp
pop
pusha
pop
dec
xchg
add
aad
push
inc
sub
sub
icebp
cld
imul
pop
mov
lret
or
sbb
ljmp
ss
and
stos
xchg
aas
pop
outsb
pop
jle
mov
test
pop
movsl
jmp
movsb
inc
into
sub
push
fwait
shll
dec
cmp
sbb
cmc
jae
rcl
testb
or
icebp
dec
lret
inc
push
push
pop
cmp
and
aas
xor
xchg
iret
adc
incl
lcall
out
mov
inc
test
pop
xchg
mov
scas
push
les
mov
push
push
shrb
cmp
cs
jns
pop
pop
add
gs
cmp
and
ss
stc
enter
mov
cmp
add
push
xchg
xchg
ss
jae
dec
repz
imul
inc
pop
call
add
in
fistps
sub
les
jmp
push
add
pop
scas
jle
or
popf
js
sub
lods
add
pop
xchg
lock
or
sub
fldenv
mov
dec
mov
push
or
xor
jp
fmull
or
enter
adc
inc
jb
or
xor
inc
gs
or
rol
jae
and
mov
and
stos
stos
fistpll
inc
repnz
jmp
pop
push
out
jmp
sbb
insl
cmp
das
mov
cld
pop
or
clc
mov
push
in
push
dec
sub
xchg
test
inc
lods
pop
dec
pop
int
jge
loope
xor
push
scas
pushf
enter
mov
xchg
ret
outsb
lea
out
push
mov
sub
inc
push
jecxz
insl
mov
outsl
mov
inc
shrb
inc
into
dec
pop
leave
imul
add
subb
aam
bound
out
rcll
sbb
cmp
loope
jb
loope
push
in
pop
xchg
rcll
mov
ds
xor
out
fsts
arpl
inc
or
sub
filds
adc
fyl2x
imul
shrb
dec
mov
jmp
or
sub
pushf
imul
jae
lret
xchg
and
insb
sub
in
sbb
sub
mov
mov
mov
xor
jl
repnz
jne
inc
and
push
add
push
fistpll
or
fs
add
xlat
jecxz
inc
gs
hlt
mov
mov
subl
xor
mov
iret
add
cmpsl
cmp
ret
push
dec
push
and
dec
xchg
push
and
push
leave
sahf
pusha
adc
inc
jbe
scas
out
jno
pop
pop
xchg
fwait
lcall
sbb
fdiv
pop
popf
out
sbb
arpl
std
int
add
sbb
xor
test
mov
notb
inc
cmp
lea
lcall
dec
sub
inc
popf
out
pop
jle
leave
cs
mov
mov
mov
dec
shrb
leave
sbb
movsl
and
enter
adc
and
mov
cmp
subb
rol
cld
data16
push
shl
dec
fisubs
leave
adc
in
pusha
inc
cli
movsl
fisttpll
sbb
xchg
mov
or
mov
xchg
in
mov
cmp
push
pop
mov
loopne
lret
xlat
lret
push
addl
lahf
test
jo
enter
sbb
popa
call
jmp
pop
fnsave
in
jbe
lock
and
jecxz
jo
les
push
lods
repnz
xchg
xchg
int
int
mov
pop
dec
and
jecxz
jle
mov
or
in
loop
gs
xchg
xchg
add
pop
push
xor
loop
repnz
mov
js
mov
and
sub
nop
in
dec
imul
inc
out
daa
movsl
iret
cli
sub
push
and
icebp
mov
inc
test
lahf
cmc
cs
stos
push
and
push
out
arpl
jae
scas
je
mov
or
bnd
inc
sti
jo
jns
out
inc
out
imul
loopne
sti
stos
stc
lahf
sbb
and
out
cwtl
jp
nop
dec
pop
inc
andb
push
adc
ret
movsl
popl
jns
rorl
and
xlat
jbe
or
addl
ljmp
and
movsb
cmp
push
pop
rorl
pop
movsb
jmp
mov
adc
loop
mov
xchg
sub
lds
stc
pop
inc
sbb
xor
pop
jns
hlt
mov
shll
cmpsb
xchg
cs
jmp
pushf
addl
shll
repnz
and
mov
mov
and
cmp
lahf
lods
mov
insb
test
sbb
jg
insl
sbb
rcrl
dec
pop
iret
push
and
mov
fdivrp
mov
ret
and
inc
inc
jo
jmp
ficoml
in
mov
or
repz
lret
xchg
les
loope
mov
mov
mov
xchg
cmp
mov
sub
and
loop
mov
add
lea
or
sbb
test
cmpb
mov
data16
inc
sarb
arpl
aas
pop
iret
mov
pusha
jno
push
xor
mov
fnstcw
xor
leave
filds
mov
or
stos
sbb
outsb
mov
jo
mov
in
lcall
mov
cmpl
fidivl
inc
jae
mov
pop
out
lcall
ja
divl
aam
js
fimuls
pop
push
popl
into
xchg
lods
andb
and
insl
jmp
mov
mov
and
cmpsb
stos
jne
push
dec
rorl
jle,pn
cltd
and
cltd
dec
cld
rcl
pop
pop
push
xchg
lock
nop
das
add
fdivs
clc
mov
dec
sbb
jae
mov
popf
jmp
fmull
push
push
je
inc
mov
xchg
jl
out
movsl
push
fmul
push
out
iret
adc
es
dec
sub
arpl
push
imul
hlt
add
stc
sbb
pop
in
cmpsb
popf
sub
in
mov
pop
xchg
repz
add
and
fs
lret
mov
call
fbld
sub
mov
jecxz
jge
enter
jmp
cmp
stos
cmp
jno
inc
inc
pop
jnp
outsb
pop
popl
xchg
into
inc
adc
movsb
sbb
adc
adc
push
insb
cltd
imul
cmc
xor
xor
test
mov
adc
add
lods
inc
aad
sbb
popa
inc
mov
add
pop
jno
or
lcall
loopne
xchg
loopne
ja
jmp
jns
sahf
out
js
adc
pushf
jnp
out
or
add
add
jbe
xchg
loopne
or
call
dec
aas
add
pop
jnp
jnp
bound
popf
rorb
xor
or
mov
lahf
cmp
jae
xchg
scas
sbb
mov
ret
xor
sbb
rclb
mov
stc
es
into
dec
lock
jae
jge
test
ds
ss
ljmp
call
push
psubsw
mov
pushf
fdivl
push
jecxz
ds
jmp
lahf
sbb
jno
lahf
xchg
dec
icebp
mov
in
stc
sbb
jecxz
xchg
ljmp
int
call
aad
sbb
ret
cmp
jo
or
outsb
cmp
push
push
mov
fnstsw
out
jae
xlat
or
pop
daa
icebp
aaa
lods
jne
fwait
xor
add
lret
mov
js
outsl
sub
push
jl
pusha
jp
lock
adc
js
ljmp
jo
int3
lds
and
inc
add
fwait
sub
jmp
pop
cwtl
inc
cmp
stos
pop
popa
insl
hlt
push
xchg
xchg
mov
jbe
inc
cmp
ret
xor
je
sti
fwait
jnp
aaa
add
xchg
cmp
sti
lock
or
lods
ss
outsl
repnz
mov
mov
pop
ja
rclb
cmc
sbb
sub
sub
mov
or
daa
fbstp
push
sub
push
push
and
mov
xor
incl
cmp
mov
jbe
push
cmp
ljmp
jae
jb
cltd
mov
movsb
ficomps
push
pusha
dec
scas
jp
xchg
cmp
lret
test
push
cmpb
call
xor
ja
int3
jo
inc
jno
lock
data16
jnp
ret
and
jp
add
in
test
jns
addr16
inc
stos
dec
sbb
inc
ret
cmp
cmpsb
mov
mov
shld
pushf
dec
push
in
data16
push
js
int3
fiadds
mov
xor
pop
jo
mov
cs
adc
add
popa
ja
sbb
sbb
in
mov
addb
aad
xchg
in
test
cmpsb
mov
nop
or
cmc
in
sbb
sbb
mov
xchg
jbe
int3
fsubl
add
inc
test
cld
mov
pop
std
insb
negl
mov
sub
fisubl
shrb
test
lods
push
mov
or
out
jne
add
add
xchg
pop
dec
sub
and
sub
mov
mov
stc
imul
mov
les
jne
pop
inc
std
cmp
jne
cs
pop
mov
mov
add
dec
xchg
inc
jp
mov
xor
push
mov
aas
dec
dec
repnz
shll
loopne
mov
negb
aaa
dec
lahf
test
ja
rorl
and
ja
dec
lods
lahf
out
fs
jno
push
pop
hlt
movsb
fsubr
cltd
mov
cld
cmp
adc
sbb
ss
je
xchg
stc
mov
outsl
xchg
cld
or
jge
popf
aas
xchg
outsb
xchg
rcrb
cli
ss
adc
lret
or
dec
inc
aaa
imul
and
push
push
imul
movsl
xchg
mov
push
ret
outsl
pop
ja
rolb
cmp
rorb
test
cmp
adc
add
shr
xchg
fisubs
mov
lods
sub
mov
pop
pop
pop
in
repz
adc
fwait
cwtl
in
pop
or
or
lods
call
aaa
cmpb
dec
cmp
push
pusha
push
pop
jo
push
ljmp
push
jne
jb
pop
ljmp
mov
push
cmp
and
push
pop
mov
sub
and
xchg
and
fadds
popa
ja
testb
sbb
je
push
test
xor
sbb
mov
xlat
jl
pop
mov
jae
aas
scas
bswap
or
out
mov
jae
cld
mov
inc
mov
leave
jge
jp
movsb
aas
push
sub
lods
hlt
notb
rcl
dec
mov
arpl
or
xor
out
lods
idiv
mov
cmp
ret
inc
icebp
lahf
pop
mov
lds
imul
mov
enter
scas
push
pop
test
add
xlat
inc
movsl
jg
mov
je
lcall
mov
enter
xchg
xorb
sti
mov
fstpt
sbb
jno
push
push
inc
add
sub
mov
mov
or
jmp
pop
xchg
outsb
fwait
loopne
and
out
sar
pop
pop
and
sbbl
in
cltd
testb
cli
pop
xchg
insl
aad
mov
movsb
dec
fists
inc
aam
cltd
cmp
in
mov
adc
mov
jl
icebp
in
lds
pop
push
xor
inc
and
xchg
inc
neg
outsl
and
push
xor
and
cmp
cmp
and
bound
hlt
test
sbb
cld
rclb
imul
xor
std
stos
sub
into
mov
stos
sub
ret
fwait
lret
into
in
inc
fisubs
inc
pop
addb
pusha
nop
rcrb
bound
cli
jge
inc
and
ja
xchg
mov
ss
inc
xor
loop
add
inc
std
sbb
add
xchg
mov
arpl
add
in
adc
xchg
int
ds
push
jne
and
and
mov
sbb
jmp
push
jmp
jl
mov
ret
js
mov
push
stos
inc
mov
and
mov
gs
ljmp
inc
mov
jl
sahf
xorl
out
mov
push
sbb
xlat
ret
jne
roll
cmp
shlb
jbe
out
sub
sti
adc
shrl
addr16
aaa
test
into
sbb
jns
fiaddl
mov
shlb
mov
xlat
mov
repz
mov
sub
jecxz
mov
jl
fwait
mov
mov
cmp
rep
mov
pop
push
movsl
pop
cwtl
outsl
jnp
push
or
and
frstor
loop
xchg
in
aam
jbe
push
sub
popa
testl
mov
xlat
outsl
pop
lock
stc
stos
mov
cwtl
rcl
cwtl
pop
cmp
push
fwait
imul
push
aaa
sbb
sub
inc
jae
jnp
and
cmp
je
scas
mov
dec
loopne
or
jg
jne
cmpsl
push
lahf
lods
jmp
push
lcall
add
imul
hlt
test
fistpl
stos
or
fcomi
bound
lods
and
pop
es
dec
xchg
add
push
mov
push
arpl
lcall
sub
out
ret
xchg
fs
jmp
pop
inc
jnp
push
shrb
inc
push
ret
lret
mov
adc
pop
add
xchg
and
cmpsl
pop
mov
xor
push
or
lea
sub
das
mov
je
push
sbb
jb
xor
dec
jbe
fnstcw
dec
xchg
xor
push
dec
pop
dec
sbb
loopne
pop
push
and
bound
mov
loopne
lods
les
mov
jmp
in
stos
dec
divl
pop
fiaddl
insb
and
push
and
in
mov
ret
sbb
rcrl
push
pop
inc
jl
jae
xchg
loope
dec
fs
sbb
xchg
add
lahf
fcoms
or
clc
hlt
lds
mov
push
pop
inc
shr
pushf
es
sub
pop
cmc
lock
cltd
inc
je
jmp
ljmp
mov
push
mov
scas
call
cmpsb
push
scas
sub
sub
pop
inc
outsl
lock
aad
js
jno
sub
addr16
inc
mov
cmc
ret
or
push
or
test
aaa
out
out
dec
in
rcr
pop
pop
loope
decb
inc
je
dec
in
js
pushf
push
mov
jb
pop
xor
imul
mov
aas
sub
mov
fcoms
pop
cld
xor
inc
jno
mov
mov
sbb
push
dec
sbb
cld
pop
push
loope
and
xor
mov
dec
cmp
mov
dec
mov
xchg
dec
cmp
int
pop
add
out
cmpb
loopne
cmp
pop
jl
push
loope
xchg
mov
mov
mov
clc
test
inc
icebp
jmp
add
push
les
sarb
pop
nop
sbb
pop
xor
adc
and
ljmp
or
cmp
jb
mov
jbe
dec
mov
inc
pushf
xor
jb
xchg
adc
lret
insl
in
js
add
jb
int3
movsb
std
inc
xchg
xorl
adc
ret
add
shrl
lahf
sub
inc
aam
fcomps
fcoml
pop
and
outsl
xlat
push
imul
cmp
mov
outsl
or
cmp
jmp
or
xor
scas
js
or
dec
inc
clc
push
mov
mov
jmp
lahf
insl
xlat
cmp
sub
inc
sub
mov
lock
cmp
inc
push
sub
inc
ljmp
lods
mov
pop
and
cltd
out
ret
xchg
stos
mov
loop
dec
jae
vmread
out
mov
sub
xorb
movsl
cmp
bound
mov
mov
in
xor
int
push
push
add
test
adc
jbe
xchg
repnz
jns
aas
call
xlat
cli
test
adc
inc
pushf
or
test
pop
xor
lods
jo
je
xor
sbb
mov
out
repz
test
push
fildl
ret
pop
dec
jge
pop
xor
jg
movsl
repnz
hlt
lcall
push
mov
insb
sub
loopne
cli
inc
push
arpl
mov
jge
int
push
and
and
mov
cmp
nop
mov
addr16
cld
repz
inc
aas
sbb
fistps
pop
shl
jl
mov
std
pop
xor
push
adc
push
jnp
fmuls
or
fwait
pop
rol
lret
ds
lcall
subl
out
mov
pop
test
shlb
je
lds
ljmp
enter
adc
shll
dec
bound
xchg
jno
cmpsb
pop
mov
push
pop
cwtl
int
mov
sub
enter
sub
lret
push
scas
inc
adc
andb
push
out
scas
outsb
ficompl
pop
sub
pcmpgtw
jmp
std
shlb
xchg
cmp
jne
scas
jle
xor
sbb
sub
or
or
es
inc
pop
sub
dec
aas
and
mov
add
add
les
mov
das
push
fdivrs
sub
inc
and
mov
mov
jno
adc
dec
insb
bound
cmp
rcrl
mov
mov
aam
mov
mov
repnz
inc
pop
pop
popf
lods
push
dec
sub
in
scas
idivl
xchg
lods
arpl
sub
or
push
leave
fucomip
imull
pop
pop
push
push
add
scas
inc
das
xorb
test
sar
jae
xchg
mov
sub
pop
cmpsl
fiaddl
sbb
mov
push
adc
mov
cmp
and
adc
int
cmpb
in
fsubrs
cld
minps
mov
arpl
arpl
outsl
mov
ds
mov
xchg
out
cmp
dec
shrb
subl
je
stc
pop
inc
dec
and
jnp
loopne
out
push
adc
pop
sub
mov
dec
push
pop
xor
loope
andb
sub
mov
inc
cmp
xlat
gs
xor
out
addr16
stos
cmpsb
popa
mov
pop
std
hlt
xlat
out
or
push
outsl
out
jg
and
imul
jnp
bound
imul
sbb
jns
push
dec
bound
shrl
in
bnd
hlt
clc
mov
mov
roll
addr16
outsl
insb
add
fstpt
ret
mov
mov
repz
enter
ret
hlt
add
rcl
push
push
hlt
cmp
xchg
mov
mov
sahf
jmp
cltd
mov
xchg
xchg
stos
jae
mov
enter
sub
imul
or
popf
ja
fwait
mov
mov
lret
mov
jnp
out
cmp
arpl
lret
out
mov
or
ss
and
pop
sbb
out
jae
cmpsb
mov
in
lret
cmp
imul
fisubrs
fstps
adc
adc
repnz
icebp
mov
push
or
adc
aam
cmp
adc
cmp
sub
out
pop
call
sbb
xchg
mov
sbb
daa
xor
insb
add
aad
gs
and
ljmp
and
adc
cmpsb
add
cmc
rcrl
sbb
sbb
or
repz
popa
lcall
js
ja
in
mov
dec
jae
test
mov
jnp
mov
int
mov
and
icebp
cs
mov
dec
sub
ja
sub
fstpl
lea
mov
int
out
sbb
xor
popa
adcl
sbb
insl
outsl
in
mov
xor
ss
jp
sbb
xchg
das
jae
and
rcll
pop
push
nop
sbb
push
dec
scas
push
sti
or
add
std
adc
cmp
pusha
ljmp
jg
push
xor
xchg
arpl
sbb
mov
out
cmp
lahf
add
sub
pop
les
and
xchg
adc
out
xchg
pusha
sbb
clc
xchg
xor
inc
fdivs
xlat
ljmp
in
xor
neg
enter
rsqrtps
xor
fldl
inc
lock
repnz
sets
dec
jge
adc
or
andl
js
push
enter
in
cmp
mov
jp
repnz
push
stc
lods
add
pop
mov
loop
sbb
dec
jae
dec
sub
cmp
push
inc
imul
arpl
fwait
sub
mov
push
sbb
jb
test
pop
lret
or
orb
add
pop
cmp
mov
cltd
movsl
les
adc
into
mov
jae
sub
xchg
sub
jge
enter
pop
sub
pop
mov
pop
imul
add
pushf
cmpsl
movsb
add
push
loop
rclb
mov
in
pxor
dec
mov
mov
icebp
or
push
xor
test
mov
incl
flds
int3
in
js
mov
xchg
dec
pop
addr16
add
adc
xor
mov
pusha
cmp
daa
xchg
pop
inc
cli
jmp
and
cmpsb
push
outsl
addr16
add
out
sbbb
xchg
fstpt
mov
mov
push
push
xchg
orl
mov
mov
mov
sbb
in
push
or
fs
pop
mov
shll
in
mov
push
test
test
and
xchg
nop
xchg
adc
dec
push
hlt
xchg
add
adc
mov
shlb
rclb
mov
in
pop
adc
cwtl
scas
shll
xor
je
push
pop
sbb
jb
mov
mov
and
lock
cltd
cmp
lods
sub
jecxz
and
jle
xor
fdivrl
sarl
mov
imul
test
arpl
sahf
cwtl
pop
test
test
and
push
sbb
push
dec
adc
cwtl
das
add
and
lcall
mov
pop
dec
xlat
push
and
sti
filds
fisttps
inc
or
xchg
jo
inc
shl
adc
jno
inc
addb
movsb
mov
shrb
test
inc
ds
jmp
imul
in
cmp
bound
lahf
push
stos
push
mov
gs
fsubr
sbb
idivb
daa
rcll
in
inc
mov
xlat
inc
negb
sub
ljmp
js
cwtl
sbb
or
lea
stc
mov
shll
pop
sub
call
clc
and
pop
fs
mov
aam
je
jl
outsb
mov
movsb
mov
ret
inc
aam
imul
jg
test
stc
shlb
icebp
filds
in
sbb
push
dec
or
testl
cmp
imull
cmp
loope
xor
negb
inc
loope
inc
pop
and
aad
aam
sub
ret
push
sub
cmp
sub
jnp
lock
repnz
and
jae
pop
cwtl
xchg
and
xchg
cltd
js
sub
cmp
inc
inc
aas
sbb
dec
scas
fs
lahf
out
loopne
repnz
in
data16
mov
fcmovne
sbb
jmp
sub
push
add
xor
cmp
mov
inc
movsl
xchg
xchg
aas
sbbl
cmpsl
add
mov
loopne
push
xlat
cli
and
or
cli
lock
mov
push
enter
sbb
jbe
jnp
mov
push
ret
ljmp
sbb
jmp
lret
rcll
fdivs
test
adc
mov
rorl
push
aaa
mov
in
mov
sti
daa
sbb
ljmp
enter
out
cmp
sbb
bnd
adc
xor
outsb
jl
push
push
mov
ljmp
test
test
xor
enter
sub
jmp
pop
sbb
cmc
or
xchg
adc
push
mov
cli
filds
inc
mov
mov
movsb
dec
and
jae
mov
dec
cmp
aas
add
fistpl
adc
in
pop
cmp
jge
pop
inc
jecxz
xlat
mov
or
xor
mov
movsb
cli
lock
push
rolb
cmp
mov
sahf
mov
cmpsb
mov
mov
movsb
pop
loopne
incl
sub
xchg
mov
add
sbb
and
jb
ret
sub
rcrb
pop
lds
cmp
add
push
int3
outsb
xor
xchg
mov
lcall
aam
jle
lods
ja
popf
push
or
divl
fbstp
pop
fnsave
pop
or
loop
jns
jmp
sub
in
movntq
out
adc
mov
mov
call
ja
rcll
xchg
jle
and
inc
cmc
cs
leave
ror
mov
imull
sub
popa
pop
in
arpl
shr
jl
or
push
aaa
gs
jge
shrb
sub
and
mov
lcall
or
daa
push
add
loop
cmpsl
jecxz
xor
stos
test
jns
hlt
adc
nop
pop
cwtl
mov
repnz
xchg
mov
xchg
inc
popa
cmpsb
or
scas
dec
mov
sarl
jbe
mov
and
cmp
scas
push
mov
pop
out
push
test
or
sub
es
xor
add
mov
and
out
fnstenv
pop
jns
lods
inc
push
pop
lods
jle
xor
add
cmp
shl
adc
test
pop
xchg
sbb
jo
dec
loopne
sahf
lahf
mov
dec
jb
adc
jecxz
dec
fucomp
cli
lods
add
cmp
int
ret
mov
mov
xchg
mov
test
dec
push
loop
daa
xlat
mov
ret
mov
sub
cli
mov
pop
addr16
loopne
in
cmp
mov
jmp
push
in
adc
mov
jmp
dec
ja
in
ret
sahf
dec
jns
add
aaa
dec
inc
pop
repz
mov
or
mov
std
cwtl
icebp
push
push
adc
dec
repnz
cmp
lcall
cmp
or
jmp
leave
leave
or
mov
outsl
cltd
call
insb
jp
push
test
ds
loop
jns
or
pop
pusha
pop
iret
inc
pop
sub
add
imul
dec
sti
cmp
cmp
jecxz
jge
notb
aas
push
jno
out
pop
and
rcrb
jle
cmp
test
out
inc
lahf
mov
push
addr16
mov
std
xchg
xor
mov
pop
jge
xor
cmp
cmpsl
and
dec
lea
or
ficomps
add
cmp
shll
mov
and
andb
add
pop
jle
xor
imul
mov
inc
pop
sahf
xor
test
gs
sbbb
adc
dec
jns
btc
dec
stos
iret
movsb
insb
repz
cmp
out
jmp
ds
jp
lahf
xor
pop
inc
sub
xlat
arpl
or
lods
xchg
movsl
out
push
leave
jns
pop
pop
push
inc
add
or
ljmp
sti
je
fimuls
leave
insb
add
push
mov
xor
add
nop
mov
adc
jnp
fwait
adc
popf
test
aas
cmp
sahf
jecxz
iret
stc
mov
adc
add
loop
fadds
lds
daa
mov
pop
push
xchg
mov
or
lret
mov
out
notl
and
aas
inc
repnz
xchg
pusha
clc
lret
sbb
mov
imul
xor
pop
inc
jmp
movsl
jne
movsl
ret
lret
jl
insb
jmp
ret
xor
mov
pop
sub
dec
xchg
inc
addr16
pop
mov
push
or
iret
pop
dec
inc
rorb
es
fsubrl
push
fimuls
outsb
and
insb
test
scas
add
ficomps
orl
add
jge
repnz
or
imul
jmp
push
add
cmp
ficompl
in
lds
mov
push
dec
pop
jb
sbb
sti
dec
dec
or
push
push
std
mov
and
call
pop
sbb
clc
and
push
and
aam
lret
enter
cmp
adc
or
sbb
xchg
mov
mov
sbb
sub
sbb
push
jmp
inc
inc
pop
sbb
ja
call
mov
inc
add
fbld
lret
sarb
mov
add
mov
nop
inc
outsb
mov
push
sti
arpl
and
inc
inc
aad
jae
add
mov
cmp
jne
push
sbb
xor
jb
insb
pop
cmpsb
jo
cmp
xchg
xor
subl
xchg
lahf
mov
ficoml
sbb
aaa
lahf
add
mov
or
repnz
mov
test
xchg
add
or
xchg
cmpxchg
dec
and
loop
sub
mov
enter
or
icebp
sti
and
jl
outsl
ds
loopne
mov
ljmp
fidivrl
pop
leave
pop
mov
hlt
aaa
jae
je
std
push
call
jae
jecxz
and
mov
or
adc
pop
setl
roll
pop
cmp
pop
push
push
inc
je
adc
push
out
push
ljmp
enter
stos
lahf
idiv
xchg
int
subl
insl
sbb
or
mov
jg
push
jp
mov
xchg
lahf
fnstenv
insl
or
sbb
or
jg
add
sti
and
adc
mov
mov
loope
rorl
movsb
addr16
push
jge
mov
cld
stos
adc
in
xchg
dec
ret
xchg
outsb
xor
lret
jae
xchg
movsl
test
cmc
and
call
inc
rorb
clc
adc
inc
imul
push
mov
mov
mov
cmp
loope
jmp
lds
and
mov
push
and
push
test
mov
sbb
cmc
in
push
mov
sti
jp
std
xchg
and
inc
lds
out
and
xor
scas
ficomps
xlat
pop
xchg
cli
jo
xor
lds
pop
hlt
add
cmp
push
orb
pusha
xchg
iret
cwtl
and
mov
into
clc
add
xor
pushf
aam
adc
shlb
cmpsb
lret
insl
adc
lahf
nop
shrl
std
mov
imulb
inc
punpckhbw
mov
jg
sbb
add
test
cltd
mov
test
and
fmull
das
push
sub
fcmove
or
ja
lcall
xchg
out
push
stos
pop
and
xchg
mov
addr16
push
mov
mov
jp
mov
mov
mov
lds
sbbl
xor
jge
ficompl
mov
cmpsb
push
mov
lcall
std
mov
shll
lea
cmovg
pushf
xchg
inc
imul
leave
cmp
push
insb
and
loope
xorb
sbb
sbb
and
xchg
cmp
adc
mov
in
gs
mov
aam
mov
aaa
scas
and
arpl
repz
pop
imul
movb
scas
cld
xchg
push
xchg
imul
adc
loope
pop
mov
outsl
lahf
lcall
xchg
stos
mov
mov
in
jl
and
dec
cmp
push
or
and
sbb
mov
pop
or
xor
hlt
sub
or
xchg
mov
dec
sub
out
jb
push
cmp
dec
gs
andb
imul
adc
jle
mov
mov
aam
sahf
movsl
and
lods
push
ja
jb
pushf
cmp
mov
mov
mov
or
lock
std
dec
jnp
push
ss
xchg
sbb
mov
xor
push
xchg
lods
cmp
jecxz
and
mov
push
cmpsl
adc
add
or
test
dec
call
mov
les
outsl
sub
dec
jg
dec
nop
cld
fldenv
pop
adc
mov
cmp
adc
pop
adc
adc
xchg
lock
mov
jg
in
sbb
xor
jmp
sub
and
ss
mov
xor
ret
adc
dec
sub
jmp
xchg
cmpsb
and
add
and
sahf
test
inc
jnp
jl
push
imul
int3
pop
xchg
cmp
adc
xchg
add
fsubs
stos
and
lods
into
je
push
sub
mov
mov
data16
pop
or
and
mov
push
movsl
data16
into
sub
pop
les
cmpl
jge
dec
das
roll
ret
mov
mov
push
std
jnp
xchg
and
pop
ret
or
rcr
imul
insl
imul
les
leave
cmp
pop
sbb
mov
popf
jae
dec
xor
cmpsb
push
lahf
repz
jl
out
adc
nop
mov
or
push
xchg
test
fiadds
add
ljmp
int
insb
test
cmp
in
sub
cltd
inc
cmp
add
inc
mov
xchg
cwtl
test
sub
cmpsl
xor
aaa
repz
call
inc
or
cmp
fs
data16
mov
mov
xchg
inc
mov
cltd
push
iret
mov
pop
popf
idivb
lret
and
mov
fwait
shll
add
ret
leave
movsl
mov
pop
adc
rclb
xor
mov
lock
insb
push
cld
add
lods
mov
in
outsl
icebp
aaa
lret
add
adc
filds
pop
stc
lds
imul
shlb
popf
mov
into
and
pushf
push
rorb
imul
in
mov
in
dec
inc
pushf
call
leave
cwtl
push
and
popf
push
add
push
xchg
hlt
int
div
loop
sbbb
mov
add
arpl
adc
je
xor
mov
xchg
push
and
xor
das
pop
call
insl
rorl
and
inc
sub
adc
push
sbb
hlt
sub
mov
das
xchg
in
int
imul
andb
sbb
fdivl
xchg
pushl
add
call
push
push
cmovg
rcrb
push
dec
pop
or
push
test
inc
xor
mov
mov
into
xchg
sbb
bound
jg
aad
jno
mov
repnz
cmp
movsl
ds
mov
popa
dec
aaa
add
pop
fwait
dec
sbb
rcrl
add
mov
sub
js
push
sti
insb
lahf
xchg
lret
sub
in
jno
andb
notb
movsl
cmp
xchg
loope
sub
fldenv
push
push
sarb
or
xor
orb
fwait
loope
mov
mov
sub
add
jns
test
push
test
sbb
out
push
or
sub
ljmp
add
popa
ljmp
xor
mov
jmp
incl
or
test
int
mov
mov
pushf
add
inc
dec
mov
or
push
cmp
insb
cwtl
add
nop
addr16
shlb
fistps
pop
cmpb
dec
sbb
call
mov
push
adc
sbb
sbb
dec
sbb
lahf
iret
sub
pop
adc
in
notl
mov
jb
cwtl
rcrb
mov
lods
ror
ret
jnp
fs
movsb
pop
sti
jmp
and
ja
test
rcrb
stc
mov
iret
sub
scas
loopne
adc
test
pop
jns
into
dec
fisubs
jo
add
mov
addr16
add
sub
push
je
jge
scas
les
or
je
sbb
and
packuswb
mov
or
pop
aaa
mov
and
stos
jge
insb
mov
cmc
xchg
pop
xlat
pop
xor
rcll
negb
adc
scas
arpl
pushf
inc
sub
xchg
push
inc
fs
mov
adc
xor
jg
and
lahf
cltd
lds
test
test
es
stos
cwtl
inc
sbb
or
test
mov
ds
sub
std
push
jg
sbb
mov
std
in
repz
inc
imull
ficompl
push
cmp
loopne
lahf
loop
xchg
sbb
or
mov
inc
xchg
xchg
jle
int
aaa
cmp
pop
or
xor
out
xchg
dec
cltd
lret
xchg
mov
inc
adc
mov
mov
dec
lock
mov
orb
aad
adc
and
sub
mov
lcall
mov
aam
jnp
fstp
fldcw
jmp
jne
cmp
mov
mov
fucomp
cltd
push
fidivrs
adc
mov
int
dec
xchg
ret
cmp
mov
repnz
add
andl
aaa
cmp
popa
enter
xchg
lret
xchg
stos
sbb
cmp
cmp
data16
mov
mov
mov
mov
push
xor
subl
or
jle
mov
mov
adc
sar
xchg
and
jecxz
popa
ljmp
xor
aam
mov
jg
ss
lock
inc
lret
clc
fstl
fnstsw
repnz
in
insl
xchg
pop
aad
xchg
shll
outsb
insl
fldt
in
lock
insl
loopne
pop
add
dec
and
out
dec
mov
int3
cmp
addr16
inc
jl
gs
sti
add
cmp
ss
sub
pmaxub
and
dec
mov
xor
jmp
push
mov
subb
inc
in
test
pop
ffreep
loop
stos
or
int
and
ja
and
mov
pop
out
xor
repz
mov
mov
loop
std
cmp
ror
repz
lods
add
or
push
mov
fcmove
leave
cmp
or
or
push
jg
mov
aas
rolb
decl
push
lock
out
stc
mov
jbe
pusha
or
cmp
inc
xchg
jb
bound
inc
aam
adc
jo
jnp
mov
push
cmc
dec
cmc
nop
dec
pop
outsl
je
fldl
add
jge
rol
cmp
push
out
insl
mov
insl
rclb
jg
iret
xor
out
pop
loopne
push
ret
ja
inc
data16
cmp
sub
adc
popf
ja
fdivrs
mov
movsb
xchg
fcmovnu
out
std
popa
pop
outsb
pop
cmpsl
in
lcall
shrb
loop
lahf
adc
sub
enter
push
cmp
mov
push
out
stos
arpl
dec
fwait
jle
inc
cmp
les
out
jecxz
xchg
rcrb
fidivrl
mov
xchg
dec
neg
out
push
or
ja
aas
and
sbb
movl
lret
cmp
and
loopne
pop
aad
mov
mov
sub
outsb
in
cmp
cli
xor
test
push
es
lahf
loop
mov
and
imul
jae,pt
sbb
add
adc
mov
lahf
jne
push
mov
sbb
xchg
fadds
xchg
ret
les
add
dec
xchg
hlt
sub
scas
mov
adc
mov
pop
dec
mov
mov
sub
bound
imul
pop
adcl
cmp
test
inc
cmp
cltd
mov
outsl
pop
push
ds
loopne
sbb
imul
icebp
pop
lock
xor
add
add
or
mov
mov
dec
mov
int3
insb
jno
ror
cmp
sbb
add
addr16
mov
lahf
sub
mov
jecxz
dec
mov
xor
in
fdivs
add
stc
jle
jb
push
or
push
inc
out
dec
or
mov
sub
and
stc
add
add
frstor
jecxz
mov
or
sub
in
xchg
movsb
out
add
rcl
sbb
mov
add
shll
les
jge
mov
nop
lahf
mov
js
xchg
std
lret
jge
xor
imul
or
cltd
adc
xchg
sub
lods
jo
pop
lcall
fwait
lods
lock
in
mov
sub
test
iret
cmc
les
jnp
push
lahf
and
sub
and
mov
dec
mov
cmp
push
xchg
sub
cltd
es
and
xlat
aas
inc
mov
outsl
outsb
xchg
push
movsl
push
cs
aaa
cmc
cmp
int3
xchg
outsl
cli
fdivs
stc
adc
fcoms
sbb
mov
cmc
daa
lods
sti
pushf
inc
cltd
sbb
mov
test
push
mov
mov
or
mov
mov
sbb
mov
icebp
divl
jmp
lds
fsubrl
into
xor
xor
and
mov
dec
iret
mov
dec
push
movsb
or
mov
cmp
fcmovnbe
ret
testl
sub
mov
jbe
and
pop
mulb
mov
repz
lret
arpl
add
sbb
pop
shrb
ret
inc
fcomip
jne
mov
xlat
xor
or
mov
ffreep
pop
mov
mov
out
mov
incl
xor
add
cltd
xchg
jge
mov
mov
jecxz
push
ljmp
add
xchg
iret
xchg
push
mov
and
inc
es
fisubs
xchg
adc
mov
cmp
dec
fbstp
cli
push
ret
cmp
mov
nop
dec
jns
pop
bound
stos
incb
nop
test
es
add
arpl
push
push
xchg
inc
movsb
pop
loope
addl
mov
dec
and
mov
or
sti
das
jns,pn
es
dec
mov
pushf
pop
jb
aam
mov
adc
test
stc
dec
sub
sbb
mov
or
arpl
jae
cmpsb
loopne
aam
xchg
fcompl
icebp
sub
sub
fnstsw
cmc
lods
push
scas
mov
aaa
cmp
stos
xchg
out
add
lods
repz
cltd
xchg
push
das
sub
mov
inc
je
and
cwtl
or
mov
or
cmpsl
mov
repnz
lahf
push
jns
push
adc
cmc
aam
push
addl
insb
pop
push
out
add
and
push
xchg
sahf
test
insl
sbb
lahf
lods
pop
pop
xor
xchg
or
bnd
jp
in
fsubrs
mov
ffree
push
xchg
dec
nop
adc
adc
jg
or
add
fmuls
cld
and
std
cmc
int
sti
aas
fwait
push
dec
out
mov
mov
jl
fcoml
in
cmp
movsl
leave
push
movsl
dec
inc
and
jbe
mov
popf
in
fadds
sub
jno
movsb
cmpsl
or
mov
mov
aaa
push
fs
fs
js
jp
inc
addr16
lea
popf
pusha
adc
sub
sarb
ss
cmp
mov
mov
sub
nop
dec
pop
sarl
imul
xchg
mov
xchg
ret
ds
setb
add
sbb
push
pushf
sbb
daa
jb
fisubrs
rclb
hlt
sbb
in
pushf
dec
ret
add
add
jns
es
imull
fdivr
pop
inc
arpl
lea
jno
mov
rcrb
cld
push
fstpl
lods
iret
imul
adc
push
xchg
stos
lret
cmpsl
negl
dec
push
inc
and
pop
jp
filds
pushf
add
cmc
iret
push
aas
and
out
fildl
adc
dec
adc
sub
push
out
pop
cmovg
test
inc
and
sbb
mov
mov
fmuls
adc
sar
sub
jmp
xchg
in
xchg
jl
pushf
mov
cwtl
ds
sbb
addr16
movsb
xor
add
jg
repnz
add
mov
lcall
jno
xchg
ljmp
dec
jp
pop
and
and
cwtl
jl
jae
and
clc
cmpb
xchg
adc
mov
jnp
fstps
outsl
js
mov
popa
rcrl
dec
dec
pop
dec
test
jmp
hlt
cmpsl
inc
sub
es
test
lret
inc
xchg
pop
loop
shlb
sub
les
adc
outsl
adc
in
xchg
in
leave
std
sbb
std
cmp
lret
dec
jl
jmp
inc
jmp
sub
jo
test
mov
or
stos
pop
out
or
in
popa
lds
mov
jl
xlat
lea
sub
leave
cmp
cwtl
push
mov
cmpb
mov
cmp
test
imul
inc
ljmp
sub
pop
sbb
and
sbb
sub
mov
jge
lcall
or
pop
pushf
rol
jge
pop
data16
adc
jae
cmp
dec
icebp
outsl
cwtl
iret
stos
xor
xchg
movsb
xchg
mov
xlat
imul
fs
and
pushaw
int
push
and
cmc
xchg
xor
push
lahf
pushf
push
addr16
lahf
jecxz
out
push
push
jl
enter
mov
dec
aaa
or
fldcw
aas
aam
and
cs
js
xchg
add
stos
pop
jnp
cmp
adc
jmp
or
shl
int3
jmp
cli
ja
adc
sbb
mov
pushf
push
pop
jmp
xchg
out
mov
xor
movsb
pushl
lahf
jns
mov
xor
push
xor
mov
aad
xor
xchg
rcrl
iret
pop
arpl
fs
lods
shll
test
loopne
or
dec
dec
xchg
or
mov
sbb
jmp
mov
push
xchg
int
dec
aad
jno
cmp
rolb
test
inc
mov
pop
adc
jg
cmpsb
dec
rolb
add
popf
inc
mov
jo
sub
dec
jmp
push
mov
adc
movsb
mov
addr16
rorb
adc
dec
mov
add
arpl
sbb
mov
sbb
inc
dec
xor
cs
xor
mov
ja
or
xor
test
jle
pop
movsb
mov
lcall
push
xchg
jp
mov
out
out
shrl
mov
jnp
shlb
push
cmp
js
xchg
inc
into
loope
pop
cmp
mov
mov
jns
lret
pop
sbb
push
mov
mov
xor
testb
mov
cli
pop
addr16
jecxz
or
jecxz
adcl
mov
cs
ficomps
imul
pushf
jmp
push
jg
jae
and
or
lods
ret
jge
jecxz
or
out
nop
add
clc
test
mov
inc
xchg
jne
sbb
mov
fmuls
or
jbe
loop
aad
sbb
pop
xor
jno
xor
push
imul
pop
cwtl
rorl
pop
fs
add
mov
decl
test
clc
pop
mov
and
pop
xchg
scas
shrl
mov
jb
outsb
jmp
ds
rcl
mov
notb
jecxz
or
in
sub
adc
sbb
pop
xchg
outsb
test
jecxz
lret
in
movsl
and
dec
add
dec
lcall
lds
shlb
adc
outsl
stos
imul
jnp
loope
pop
push
sbb
or
jg
mov
xchg
inc
cmpsb
clc
enter
push
mov
ljmp
adc
sar
inc
pop
push
fsub
stos
jecxz
mov
arpl
push
movsl
fcomps
mov
sarb
hlt
sahf
cld
orb
xlat
mov
bnd
loop
dec
fldenv
mov
lods
mov
xor
xchg
stos
orps
rclb
scas
sbbl
scas
outsb
xchg
sbb
xor
test
push
add
ljmp
cmp
push
jmp
in
stc
lret
xor
iret
cs
mov
addr16
or
repnz
ja
push
jmp
pop
xchg
mov
hlt
cwtl
jp
das
das
jle
dec
push
cmpsb
scas
test
movsl
outsb
clc
push
sbb
jne
adc
ret
mov
xchg
xor
stc
lahf
add
jmp
xchg
rcll
movsl
mov
loop
pop
or
outsb
scas
fcomps
or
mov
sti
imul
jge
pop
pop
dec
ja
mov
xor
sub
mov
movsl
jns
mov
cmp
in
lods
push
add
gs
lret
lahf
aas
mov
add
push
sub
lods
mov
frndint
outsl
outsb
or
insb
jo
mov
xor
xor
leave
iret
push
xor
push
inc
fists
call
pop
mov
or
push
dec
xor
mov
imul
ja
fwait
xlat
aaa
jae
jecxz
pop
inc
popf
shr
xchg
xchg
aam
jnp
shll
mov
enter
adc
loop
push
jnp
cmpsl
fsubs
sub
pushf
add
cs
iret
cmp
insb
in
xor
or
cmp
cltd
pop
div
pop
int3
in
cld
stos
cmp
ljmp
push
mov
mov
in
icebp
fs
xor
cli
xchg
and
insl
lods
testl
icebp
dec
mov
iret
ret
out
and
sub
out
in
push
mov
or
push
add
pop
xor
and
pop
push
rclb
movsl
lahf
imul
mov
mull
ljmp
xchg
sbb
push
outsl
adc
push
sub
jne
fcomps
mov
mov
mov
and
idiv
pop
popf
inc
daa
adc
cmp
ja
xor
jecxz
jnp
lcall
mov
ficomps
ret
pop
mov
mov
and
aad
ret
xchg
cmp
in
cltd
imul
scas
jp
repz
jge
push
icebp
push
xchg
out
std
add
lret
dec
scas
out
cli
repz
adc
mov
pusha
cwtl
jge
fwait
cmpb
mov
stc
mov
xchg
adc
add
test
mov
lds
cmc
jl
mov
inc
call
aas
jae
xor
fisubl
cwtl
mov
mov
mov
outsb
pop
mov
out
push
pusha
mov
popf
adc
sahf
pop
dec
dec
pop
add
pop
mov
enter
mov
imull
je
jge
dec
dec
mov
test
pop
mov
lods
pushf
paddd
xchg
push
mov
and
je
add
xchg
lods
fistl
inc
push
cmp
xchg
pop
cmp
or
aad
int3
addr16
in
cmp
sub
iret
xchg
xchg
fwait
jb
ds
inc
das
filds
je
rcr
cmp
inc
xchg
lahf
xchg
outsl
cmp
dec
push
sbb
lods
ljmp
pushf
mov
scas
stos
fcmovnu
adc
mull
shlb
adc
pop
ffree
jb
insb
fcomp
sub
and
xor
sub
pop
pop
sbb
jg
cmp
movl
out
lock
rol
or
lds
and
imul
xchg
mov
adc
mov
movsl
xor
mov
mov
outsl
xchg
xor
adc
mov
gs
call
cwtl
fcompl
test
xor
cmp
jp
pop
andl
jns
xor
jae
faddl
dec
addr16
jge
mov
out
mov
shll
and
gs
cmp
fsubr
rcl
ror
ss
dec
in
gs
pop
adc
cmp
das
aas
sub
or
pusha
jo
sub
mov
pop
in
ja
sub
dec
pushw
idivb
xchg
adc
jl
lret
jo
jg
mov
sub
imul
aad
mov
lock
cwtl
mov
pop
call
pop
sbb
dec
xor
int
bound
mov
sbb
push
inc
icebp
or
dec
sbb
mov
mov
add
rcrl
jo
jmp
sub
enter
xchg
fadd
rcrb
cs
xlat
mov
push
imul
and
push
add
jmp
icebp
ss
popa
fs
stc
addr16
jns
pop
negl
nop
mov
dec
movzbl
push
dec
test
pop
les
pop
dec
push
cmpsb
cmp
mov
js
loopne
sbb
popa
add
push
jbe
dec
and
jne
mov
add
cmp
mov
neg
iret
xor
loop
das
shrb
sbb
pop
push
sbb
fistpl
lret
rcl
repnz
lods
sbb
cld
add
push
xor
jle
and
dec
jecxz
dec
mov
in
pushf
xchg
xlat
shll
lahf
mov
loop
fs
or
in
dec
mov
gs
mov
pop
cmp
xchg
pop
xchg
out
mov
mov
inc
push
and
subl
cmpsb
cli
jmp
dec
std
bound
xchg
or
data16
sbb
lret
sti
dec
and
mov
cwtl
jg
arpl
xor
or
jo
fucomi
jle
loopne
mov
sbbb
out
ljmp
arpl
clc
mov
je
or
xor
stos
adc
dec
imull
aas
xor
stos
sub
roll
push
inc
fdivl
cmp
mov
push
lods
pop
mov
push
mov
in
fsincos
xor
pop
addr16
mov
cmpsl
mov
jecxz
pop
aad
cmp
test
jle
stos
loopne
imul
xor
inc
xor
mov
adc
jp
imull
pop
movsl
icebp
push
int
xchg
xchg
ja
adc
jb
inc
dec
xorl
mov
test
popa
lret
and
sbb
jp
lods
pop
jle
aad
or
pusha
xchg
jp
shll
leave
clc
mov
sahf
cwtl
out
add
mov
out
inc
repz
xchg
shll
popa
cmp
adc
test
inc
pop
mov
mov
dec
adc
mov
xchg
pop
jmp
fwait
mov
pushf
scas
sbb
jo
std
jo
ja
or
es
das
mov
adc
mov
push
stc
mov
sahf
or
and
inc
movsl
push
push
pusha
inc
in
int3
negl
arpl
pop
sub
push
outsl
out
lret
sbb
inc
aam
jg
mov
lret
sbb
mov
sbb
cmp
mov
jg
pop
mov
jmp
ss
jns
pop
or
xchg
sub
or
enter
sbb
jb
lret
xchg
mov
pop
push
mov
pop
mov
push
xchg
js
mov
mov
daa
lds
outsl
inc
adc
mov
int3
xchg
shl
fwait
add
cmp
in
outsl
aam
pop
rcl
cmc
and
lds
dec
fcoms
std
jg
xchg
add
lds
test
clc
pop
dec
decl
stos
push
lret
mov
in
and
adcl
ret
and
stc
cltd
test
fistpll
jne
lret
fwait
loopne
daa
insl
pop
cld
jmp
outsl
inc
xor
test
add
pop
inc
outsl
shlb
xchg
sub
and
mov
push
ss
pop
mov
xor
pop
push
test
lahf
stos
pop
cmc
inc
push
sahf
jno
adc
mulb
adc
ja
rcll
mov
add
add
push
push
stc
sub
push
cs
add
gs
lret
pop
dec
adc
jp
mov
movsb
cmpsb
and
xor
dec
xor
inc
dec
sub
data16
lds
nop
xor
pop
jo
xor
jl
sahf
cld
clc
call
test
es
cwtl
ficomps
jbe
in
lret
dec
dec
daa
push
sub
in
insl
rol
push
xor
xor
pop
pop
ds
out
outsb
fwait
cmp
scas
sub
les
les
je
cmp
cmp
test
jo
ret
jecxz
push
jl
pop
mov
repz
sbb
pop
pop
test
das
paddd
into
mov
fnstcw
or
push
push
loope
out
cld
adc
nop
inc
mov
sahf
sahf
jmp
mov
es
push
xor
test
xor
cmc
inc
pop
sub
xchg
jecxz
xor
cs
daa
into
or
sub
xor
rcrl
jno
push
rorl
mov
adcb
sub
imul
mov
push
aas
pushf
sbb
xchg
roll
inc
lock
clc
sahf
aas
pop
stos
stos
adc
pop
test
push
out
iret
leave
and
dec
lds
and
outsb
inc
pop
sub
das
xor
or
jb
rorb
idivl
lock
movsl
cltd
xor
mov
jg
out
outsb
mov
insl
xlat
in
push
outsb
daa
popf
fs
scas
mov
das
dec
scas
mov
jbe
call
xchg
push
push
je
enter
lea
pop
lock
orl
pop
rcll
push
fs
pop
or
mov
xchg
aaa
add
popl
and
xlat
call
cmc
jb
xlat
inc
cld
shrl
mov
test
cmc
mov
ja
jl
out
mov
xchg
xor
pop
inc
push
addl
lcall
ss
sub
pushf
inc
push
sbb
xor
push
scas
dec
ds
fldt
sub
sub
sub
sub
pop
and
fisubrl
jbe
imul
rcrb
adc
fiaddl
push
inc
xor
bnd
shll
out
sub
sahf
movsb
and
neg
cwtl
fidivs
xlat
fldt
sub
int
xor
ss
inc
mov
xchg
out
lcall
imul
cwtl
ret
mov
push
bound
push
cmc
add
lcall
inc
outsb
dec
mov
je
inc
pop
stos
cmp
out
inc
jae
xchg
dec
repz
mov
shr
int
cmp
mov
and
pop
mov
fildl
inc
enter
xchg
adcl
jne
in
jecxz
sub
int
cmpl
dec
mov
aad
mov
fadds
repnz
rcrl
xor
adc
loope
jno
andb
and
push
sub
call
mov
push
ret
push
outsl
loop
or
and
push
aad
cmp
movsl
xor
aad
stos
push
outsb
mov
lahf
fisttps
rcl
and
sbb
es
jp
mov
subb
ss
push
pop
clc
stos
add
sbb
xorl
and
aaa
lods
daa
cwtl
adc
je
jle
adc
js
ja
xchg
movsb
fisubl
mov
push
or
jmp
push
mov
or
lock
shrl
add
nop
call
outsb
xor
mov
cwtl
mov
outsb
mov
sbb
push
push
out
adc
dec
dec
add
adc
insb
je
ljmp
enter
lcall
sbb
xchg
ret
pop
xchg
dec
dec
cmp
xchg
sti
dec
subb
ljmp
mov
test
add
mov
mov
lods
and
sbb
movsb
cltd
mov
fistl
cli
shll
cmp
mov
xchg
outsb
cltd
shrl
mov
pop
cmp
jecxz
in
mov
dec
mov
fnsave
idivb
into
sbb
sti
das
mov
loopne
pop
test
cmp
nop
mov
icebp
dec
pop
mov
xchg
or
mov
mov
jmp
or
jnp
xchg
cmpl
ret
mov
jbe
push
nop
mov
lahf
mov
pop
jae
push
lds
in
pop
jae
jne
out
mov
divl
add
in
push
repnz
adc
mov
mov
aad
add
pop
xor
push
mov
pop
mov
xor
xorl
iret
lds
sbb
je
shlb
jns
sub
gs
cmpsl
fcmovne
lahf
push
mov
int
movsb
sub
out
fdivrs
adc
jle
pop
cmp
loopnew
stos
mov
push
sahf
sbb
fisubrl
lret
cmpsb
repz
popf
ja
mov
test
aas
mov
sbb
mov
sub
sbb
cmp
bound
sub
cli
shlb
add
cmp
movsl
lock
add
mov
repz
test
push
push
jne
icebp
addr16
fildll
xorb
insl
push
lock
xlat
call
or
inc
push
out
stos
and
sbb
xlat
flds
cmp
mov
in
icebp
cmpsb
sbb
push
push
jbe
test
add
jecxz
imul
xchg
mov
in
incl
xor
mov
lock
ja
dec
cmp
jno
cs
mov
mov
cmpsb
dec
loopne
sub
hlt
add
pop
lcall
jns
xchg
lds
add
jle
mov
repnz
lahf
stos
movsb
cmp
mov
je
rcll
mov
inc
pop
sbb
mov
cwtl
mov
push
out
fdivrs
pop
mov
xchg
popf
pusha
aas
movsl
dec
dec
sbb
pop
pop
ss
leave
popa
mov
sbb
rolb
xchg
xchg
lret
stos
aas
ja
leave
mov
add
jecxz
stos
mov
pop
cld
pushaw
fldt
shll
jne
in
popf
stos
jp
imul
dec
lock
ja
adc
xchg
xor
mov
pop
bound
les
dec
cmp
mov
cmp
lret
rcll
push
inc
std
adc
mov
sub
addb
mov
push
inc
mov
cmp
sub
add
inc
cli
imul
test
mov
mov
xor
xchg
insb
jo
inc
xor
loop
in
push
sarl
push
push
xor
fucomi
add
add
pop
xlat
and
movsl
fwait
push
sub
pushl
push
call
xchg
bound
roll
repnz
aaa
imull
sbbb
push
jmp
aad
out
push
pop
fcomps
xchg
cmp
xlat
scas
out
ret
mov
cmpsb
add
cwtl
mov
pushf
movsb
into
in
push
insb
and
push
cmp
sub
pop
ljmp
mov
xor
and
es
add
xor
sub
andl
out
add
fwait
test
pop
das
lret
int3
rcrl
orl
pop
jl
jl
and
cld
dec
pop
adc
dec
mulb
les
jne
int
rorl
jle
aad
pop
cmp
xchg
sub
cltd
insl
mov
xor
push
mov
movsb
fnstenv
rclb
jns
push
jecxz
jnp
imul
mov
adc
movsb
inc
xor
cmp
mov
xchg
cwtl
cmpsb
dec
lahf
adc
adc
sbb
jne
pop
mov
divl
stos
mov
push
fcoml
jae
ficoml
test
push
pop
xor
push
mov
add
call
js
mov
add
or
subb
push
jns
dec
or
mov
and
nopl
adc
rcrb
xor
push
lcall
xchg
sbb
mov
data16
xlat
pop
fstpt
dec
jp,pt
dec
lcall
inc
add
sahf
jg
mov
divb
addr16
fstp
add
and
fsubrl
test
add
push
xchg
sbb
cltd
stos
repnz
cmp
dec
inc
sbb
sub
je
mov
xchg
test
loop
aad
add
mov
jbe
lret
mov
mov
loope
or
stos
mov
test
bound
jne
addr16
cmp
lds
mov
notb
icebp
add
call
add
sahf
xlat
aaa
lret
jno
mov
pop
sbb
inc
lods
xchg
repnz
add
test
jbe
stos
ret
mov
push
xlat
aas
clc
or
xlat
and
ss
jmp
or
jo
les
ficomps
idivl
iret
sbb
imul
test
jge
lea
movsb
fldl
xchg
packssdw
sbb
mov
inc
shl
pop
ret
add
jge
push
xchg
cmpsl
es
lret
sbb
push
sub
xlat
rcrb
xchg
jns
xlat
add
leave
mov
pusha
lret
jae
stos
sbb
lds
call
and
lret
cli
push
mov
loope
cmp
xor
js
ds
iret
in
aad
mov
xor
xlat
addl
xchg
jmp
decb
lods
fnstenv
lods
sti
sub
mov
jns
add
cld
loope
cmp
push
mov
and
dec
xor
jp
or
push
xchg
jecxz
mov
pop
jp
cmpsl
out
int3
and
icebp
xchg
and
pop
divb
jl
mov
xchg
repz
xchg
je
test
adc
cltd
mov
sbb
jp
mov
add
test
fstpl
filds
xchg
outsl
test
cwtl
sbb
push
push
mov
inc
enter
cwtl
sahf
jbe
inc
out
sub
pushf
sbb
scas
ja
adc
cmp
aaa
lcall
add
fidivrl
sbb
mov
push
xchg
add
pusha
or
or
adc
shlb
test
sub
sub
fs
jecxz
jns
dec
jae
sbb
aaa
ret
fisubrs
or
rorl
pop
imul
imul
jb
and
fdivrl
or
xor
sub
xchg
sbb
ror
and
sbb
mov
xchg
scas
mov
aam
xchg
xchg
aam
xorl
popa
out
or
aam
mov
pusha
mov
aas
ja
sti
push
mov
data16
sub
je
enter
repnz
sahf
loop
sarb
insl
mov
pop
jecxz
push
sbb
stos
inc
and
adc
inc
sbb
rorb
daa
pop
mov
dec
pop
push
mov
xor
int
dec
insl
xchg
adc
push
in
push
addr16
out
cli
jg
xchg
outsl
test
jge
xchg
imul
xchg
addr16
pop
xlat
lds
lods
std
aas
lea
mov
push
or
mov
enter
mov
cld
loope
xchg
mov
test
mov
push
xchg
sub
shlb
out
xor
jns
sti
or
fisubrl
adc
mov
loop
xor
inc
xchg
mov
push
fwait
pop
push
adc
mov
shlb
fstl
adcb
nop
push
ja
bswap
out
mov
xor
repz
fwait
loop
adc
add
dec
hlt
lret
clc
dec
mov
arpl
mov
int3
repnz
xor
sbb
or
mov
data16
xchg
pushf
jp
jl
fisubl
push
test
sub
sbb
pop
or
mov
xor
pop
sub
imul
jl
ficoms
jmp
bound
pop
push
xorl
cmp
icebp
outsl
outsb
rorb
sbb
dec
mov
movsl
lods
in
and
mov
loopne
sbb
leave
lods
orl
nop
jge
test
mov
dec
icebp
addr16
push
xchg
pop
repnz
mov
in
jo
cwtl
xor
dec
jle
mov
rorb
mov
fcomps
in
mov
dec
clc
loopne
or
lahf
dec
push
testb
pop
dec
movsb
mov
pop
out
sbb
lock
repnz
fsts
inc
test
push
std
imul
pop
jl
cwtl
shlb
arpl
xor
out
jmp
mov
push
inc
xor
testl
ja
and
dec
faddl
and
cld
andb
and
pop
xchg
int
mov
xorb
and
fs
sub
mov
clc
lock
jne
scas
jnp
addr16
sub
mov
loopne
std
inc
bnd
int3
add
movsb
ret
pop
mov
jg
mov
out
sub
jecxz
dec
push
imul
and
sbb
or
out
sahf
in
sarb
int
pusha
cmp
aaa
xor
lock
xchg
test
pop
pop
mov
in
sub
push
int
jg
sub
push
xorl
aaa
jns
sub
add
lods
jo
adc
cmp
jmp
sub
cmp
ret
inc
push
mov
sahf
xchg
or
xor
mov
mov
jns
or
inc
push
jle
sti
mov
jmp
inc
dec
push
sbb
or
xchg
ja
cmp
mov
gs
gs
xchg
mov
jno
popf
sbb
aad
xor
jne
mov
mov
push
mov
and
or
int3
aaa
popa
mov
out
inc
and
insb
mov
aad
fcompl
lahf
sbb
mov
xor
add
push
pop
out
sub
xor
flds
mov
ret
cmc
pop
mov
data16
dec
mov
mov
lahf
jl
jb
in
add
pop
jg
sarl
jnp
xor
lret
gs
adc
lods
or
and
adc
out
in
cmpsl
mov
ds
mov
les
rcrb
cmpsl
scas
mov
pop
push
lea
push
inc
aas
repnz
in
push
push
shrb
fs
lods
movsl
ss
adc
fwait
mov
add
les
jbe
dec
iret
std
icebp
adc
cmp
pusha
sub
push
xor
xchg
rcrb
jbe
dec
xchg
xor
test
je
sub
xchg
fwait
cmp
pop
mov
daa
inc
in
cmpsb
mov
test
ss
pop
adc
xor
repz
cmp
in
mov
sbb
movsb
mov
cld
jns
out
stc
lds
mov
icebp
aas
mov
sti
gs
addr16
fldcw
ljmp
test
sti
and
rorl
jge
addr16
xor
add
or
jl
jl
mov
or
or
add
loop
cld
adc
jge
loopne
imul
push
mov
shrl
ljmp
xchg
test
out
pushf
pop
sub
cmp
sub
and
cmp
and
jg
dec
mov
daa
sub
out
out
roll
shr
out
sti
test
mov
pop
lods
shlb
enter
xchg
popa
lcall
mov
je
push
and
roll
scas
cwtl
notl
push
mov
repz
imulb
loopne
nop
mov
imul
insb
stos
push
roll
iret
jle
repnz
jge
testb
mov
inc
fdivrl
in
fstpt
mov
pop
pop
jnp
add
or
call
mov
push
jg
xchg
and
ss
in
push
adc
dec
cmp
sbb
lret
jb
xor
ficoml
dec
sbb
int3
aas
add
rcl
push
mov
xlat
add
ds
mov
sub
pop
xor
mov
inc
inc
mov
and
popf
jae
jno
dec
int
adc
jp
or
jg
adc
int
xor
mov
mov
pop
lcall
cmp
lret
mov
mov
add
dec
jbe
mov
add
inc
mov
jns
cmc
cmp
test
xor
or
out
jae
jg
inc
push
dec
push
out
inc
test
ja
test
or
daa
sbb
jo
enter
add
sbb
inc
xor
sbb
jbe
sbb
xlat
push
dec
dec
cmp
dec
cmp
jns
cmc
lods
add
or
mov
pop
les
sub
sbb
pop
mov
cmp
sub
jns
int3
adc
mov
mov
inc
cltd
rorb
imul
fwait
je
popf
mov
adc
roll
xchg
cli
lahf
sbb
imul
movsl
pushf
enter
mov
xor
sbbl
adc
test
iret
xor
and
iret
mov
test
mov
mov
mov
fidivrl
fwait
repnz
xchg
cmc
mov
fistl
inc
pop
shlb
ret
mov
mov
sbb
add
imul
cmpsl
popa
push
sbb
ficoms
sub
jo
jno
push
cltd
lds
adc
xchg
rorl
push
adc
xchg
mov
mov
sub
mov
or
xchg
ljmp
pop
out
cmp
sub
ret
sub
dec
mov
iret
sbb
dec
stos
outsb
mov
push
lcall
imul
fs
in
xchg
push
jecxz
lret
cld
mov
push
popa
jmp
xchg
add
stos
xchg
pop
hlt
jg
movsl
dec
dec
push
bound
mov
movl
sub
add
shlb
repz
mov
int
inc
push
push
test
cmp
test
xchg
dec
push
or
add
iret
mov
testb
imul
cmpsb
adc
insl
ror
movsl
push
into
ret
cld
stos
and
outsb
test
fnstsw
enter
lahf
rorl
sbb
in
stos
lea
lret
mov
int
nop
jo
jle
pushf
jmp
pop
es
pushf
imul
cmp
jecxz
popf
cli
movsb
jno
xchg
cltd
adc
arpl
cmp
push
popf
loope
inc
je
fidivrl
or
insb
sub
adc
decb
mov
push
lods
push
loopne
in
cmpsb
cmp
jno
cld
imul
stc
stos
int3
inc
mov
out
mov
lods
idivl
xchg
out
inc
test
jbe
lock
add
inc
mov
cmp
gs
out
cli
xor
mov
ljmp
or
fiadds
ror
dec
pop
in
int3
leave
jnp
sbb
sub
movsb
cmp
adc
into
pop
xor
and
rorb
das
mov
ror
imull
mov
ss
lods
pop
mov
add
pop
std
push
or
pop
call
aaa
mov
cmp
dec
pop
adc
fnstenv
mov
adc
incb
dec
movsl
movsb
repz
push
dec
cli
pop
fs
mov
cmp
iret
inc
sbb
std
mov
or
inc
pushf
push
fucomi
shrl
emms
sbb
into
nop
cmp
mov
mov
into
fistpll
pop
shll
daa
stc
gs
or
arpl
xor
mov
xor
test
xorl
sub
outsl
mov
loop
add
outsl
dec
roll
and
jl
fst
in
in
and
push
ja
mov
out
pop
shl
addr16
jp
fs
js
mov
mov
das
mov
sub
into
inc
sbb
test
fnsave
orl
std
je
adc
inc
rcr
in
or
nop
mov
mov
mov
cli
push
cli
jne
pop
repz
movl
jnp
std
cltd
jmp
stos
pop
repz
repz
jbe
lods
xor
push
loopne
dec
mov
jns
fstl
repz
cmc
out
mov
sbb
mov
add
sbb
pop
mov
jns
stos
mov
jmp
test
xor
push
jne
out
add
data16
xchg
fs
scas
dec
imul
mov
rcrb
pop
xor
rol
test
das
adc
push
add
scas
sub
test
sahf
sbb
jnp
mov
add
xchg
jge
loop
dec
jl
shlb
push
into
xchg
cs
add
lahf
mov
aam
das
jecxz
jns
xor
and
scas
divb
hlt
in
jmp
pop
jb
ljmp
hlt
fisttps
push
cmpsb
into
jbe
mov
int
inc
out
jnp
inc
or
xor
cmp
push
and
mov
jle
mov
xchg
subb
rorb
hlt
mov
mov
pop
in
mov
cwtl
xor
cmpsb
pop
std
and
movsl
jge
divb
sub
daa
frstpm(287
loop
mov
pop
cmp
push
in
pop
cli
andb
lods
pop
test
adc
mov
jbe
cmp
repz
inc
jp
jbe
mov
or
lds
pop
cs
mov
int
leave
pop
mov
in
pop
and
jne
std
lret
mov
movntps
ss
fimull
lods
cmp
and
test
jbe
jl
sbb
es
fimuls
pop
mov
pop
sub
pop
mov
cli
ja
pop
dec
imul
scas
arpl
loopne
daa
xlat
add
xchg
sub
cld
pop
cld
orl
arpl
mov
cld
xor
cmp
popa
xor
negl
xchg
sbb
mov
lcall
mov
or
pop
rorb
or
push
inc
adc
imul
faddp
popf
stos
add
addr16
mov
inc
push
subb
lcall
enter
xchg
or
out
or
xchg
mov
in
push
xor
or
popf
out
fs
inc
es
jb
mov
in
sbb
xchg
pusha
mov
sub
ss
js
out
mov
addb
out
dec
leave
imul
fwait
loop
sbb
mov
out
in
test
cwtl
aam
push
push
inc
xor
repz
inc
pop
stos
faddl
pop
cmp
ss
xchg
aaa
pop
btr
sub
sbb
push
test
push
fdivl
pop
shrb
sar
add
ffree
mov
mov
adc
mov
and
xor
inc
or
rorb
jne
xor
in
lcall
lea
xchg
xchg
ret
leave
inc
pop
lcall
xlat
fists
adc
cmc
insb
cltd
das
pop
adc
xchg
lods
pop
or
mov
xchg
sar
rol
mov
xchg
leave
popa
cld
test
clc
insb
or
in
jg
aaa
movsb
mov
cwtl
shrl
lock
mov
out
inc
or
mov
cmp
dec
pusha
dec
in
jnp
andl
cmp
lret
mov
mov
dec
xor
pusha
pop
adc
test
in
cmc
xor
cs
sub
xchg
cli
incl
add
xlat
adc
jnp
and
adcl
mov
pop
mov
pop
mov
int
cmp
or
enter
loop
ds
jae
jb
pop
xor
popl
lea
pop
cmc
movsl
lods
aam
push
ja
int3
mov
loope
push
or
popf
pushf
adc
inc
ja
or
cwtl
out
pop
daa
notl
inc
sub
arpl
sbb
fidivl
or
jns
mov
push
xorb
jmp
inc
iret
test
sub
xchg
scas
lret
jmp
lret
mov
sti
jmp
dec
pop
sbb
xor
rclb
insb
pop
in
inc
push
es
adc
push
test
xlat
jb
aaa
sbb
imul
out
rcll
daa
inc
push
mov
es
adc
roll
sub
adc
sbb
lods
jnp
dec
popf
lcall
fsubp
mov
lods
inc
xchg
fdiv
imul
pushf
jp
jnp
dec
into
cmp
mov
out
frstor
test
jg
pushf
xchg
or
ja
lds
adc
mov
shll
jne
xor
arpl
sub
psubusw
fidivrl
dec
movl
scas
sub
insl
shl
push
ja
and
lock
test
ljmp
mov
xchg
daa
sub
cmpl
inc
fs
sarb
sbb
nop
fcmovnbe
in
dec
mov
or
fcompl
shll
stos
mov
loop
xchg
pop
cli
fidivrl
or
sahf
ror
xor
push
mov
xchg
and
pop
push
cmp
inc
testb
loope
cwtl
cmp
loopne
out
outsl
pop
mov
mov
popa
repnz
cltd
int
mov
inc
inc
mov
and
xchg
mov
into
rclb
cmc
sarl
dec
roll
sbb
cltd
scas
lods
pop
push
push
dec
scas
mov
push
stos
jae
lock
push
sbb
hlt
movsb
mov
inc
int
jp
mov
xor
fimuls
int
fldcw
sbb
lret
aaa
adcb
fdivl
inc
loop,pt
test
insl
les
or
js
jmp
in
mov
mov
jmp
data16
inc
inc
dec
cwtl
or
addl
jb
xchg
and
push
xchg
inc
mov
decl
rolb
ret
push
pop
sub
pop
mov
rorb
push
pop
loop
out
cmp
imul
leave
bound
aas
pushaw
loope
mov
fs
adc
cmpl
icebp
xorb
imul
jmp
pop
jns
jl
inc
inc
sub
lock
aam
fwait
pop
add
lret
mov
out
fists
ss
jg
rolb
pop
out
out
jmp
and
stos
push
adc
fucomi
xchg
shll
cmc
jno
xchg
sarb
mov
idivb
inc
cs
or
pop
sbb
iret
mov
imul
push
pop
lock
sbb
adc
dec
int3
call
adcb
sbb
aas
sub
cmp
push
sbb
push
bound
pushf
xchg
shr
or
test
cmp
pop
fnstenv
out
inc
loope
mov
and
std
outsb
int
in
push
push
mov
shll
cmp
stc
mov
xor
movsb
int
popf
stc
aam
lcall
mov
adcb
lret
mov
sub
lcall
jae
jmp
push
popf
push
xchg
push
insb
xor
push
popf
shr
lcall
inc
orb
xor
push
xor
fdivrl
jb
mov
jp
pop
in
out
xor
loope
jae
and
lret
push
into
mov
pop
jns
les
cmpb
adc
push
push
sbb
mov
test
test
lret
fwait
outsl
iret
adc
jl
xor
mov
mov
adc
sub
jmp
rcr
or
sbbl
mov
movsb
and
or
int3
movsb
mov
in
mov
out
out
test
fldcw
cmp
jl
popf
mov
push
pop
and
pushf
cmpsb
mov
addr16
sub
lods
mov
cmp
aad
mov
add
push
mov
add
mov
mov
aaa
test
dec
dec
pop
sbb
hlt
inc
call
bound
fs
cmpsb
pushf
mov
addr16
rcl
jmp
dec
dec
mov
sbb
sbb
push
push
push
sbb
mov
lcall
test
push
sub
mov
dec
inc
push
dec
xchg
outsl
xchg
fcomp
push
hlt
std
into
adc
xchg
xchg
sub
dec
mov
jnp
xchg
sbb
pop
jecxz
sahf
mov
loopne
push
fsubl
inc
callw
outsl
adc
jmp
push
shlb
test
push
cld
push
or
push
pop
cmp
aaa
xor
adc
outsb
or
in
pop
jmp
jbe
cwtl
or
sbb
mov
xchg
imul
int
jg
cli
xor
hlt
into
adc
insb
push
or
dec
popf
push
pop
cs
push
lea
xlat
aaa
roll
movsb
push
adc
and
push
scas
mov
pop
jns
fidivrs
lods
bound
leave
xor
sbb
insb
xchg
popf
mov
sbb
sub
xchg
sub
mov
testb
xor
and
xchg
cmp
pop
std
test
jns
inc
das
push
enter
test
xchg
repnz
stos
shrl
mov
popa
fimuls
adc
in
loopne
cltd
andl
jne
pop
les
ljmp
or
and
call
outsl
or
dec
xchg
pop
fstl
daa
je
outsl
xchg
mov
cmp
orl
lods
sub
adcl
sub
fcom
popf
pop
imul
in
jae
cmc
filds
push
inc
mov
out
pop
jge
jmp
sbb
inc
and
jge
lods
mov
mov
mov
jmp
sti
ficoml
daa
loope
lret
xchg
idivl
pop
jnp
icebp
cltd
jmp
jg
adc
mov
int
cwtl
mov
dec
mov
lods
inc
outsb
lret
movsb
test
cli
ficomps
popf
fisubrl
outsl
cmp
mov
pop
jg
or
push
xchg
sub
arpl
ja
inc
cmp
add
add
add
test
in
fisubl
pop
dec
lds
push
add
shl
loop
cli
in
sbb
mov
rclb
push
enter
dec
cltd
rcr
jp,pt
jg
popa
cld
push
inc
cmp
xlat
adc
cwtl
push
and
xchg
dec
mov
or
in
fs
inc
cmp
xchg
pusha
fnstsw
pop
jae
push
jmp
sub
cmp
lret
mov
icebp
lret
pop
sbb
shll
xlat
popa
dec
pop
xchg
xor
xchg
or
inc
xor
cmp
jl
xorb
mov
orl
and
in
test
sbb
push
sub
mov
xchg
push
pop
sbb
or
fidivs
mov
cmpsl
test
mov
loop
xchg
pop
adcb
and
jp
repz
push
mov
xor
pop
frstor
push
sti
lds
aas
imul
stos
push
add
iret
sti
jbe
lret
hlt
or
cmp
out
inc
xor
push
inc
lcall
fsubrl
push
pop
pop
mov
aam
adc
push
lds
mov
cmp
pop
adc
xchg
adc
mov
add
nop
or
loopne
mov
or
inc
mov
aas
cmp
movl
out
push
fiadds
push
xlat
int3
add
out
test
push
sbb
jmp
xchg
add
xchg
and
mov
inc
stos
mov
cmc
nop
mov
mov
lds
jmp
pop
push
mov
insl
call
sbb
dec
nop
add
scas
mov
sahf
or
push
stos
mov
jp
subl
sbb
mov
push
mov
aam
dec
fidivrs
cmp
mov
in
push
mov
arpl
or
je
adc
pop
cmpsb
mov
or
scas
clc
hlt
pop
sahf
ljmp
cmp
fcoms
ret
dec
sub
fwait
xor
mov
mov
cmp
in
in
ljmp
cmp
or
fcoml
repz
add
bound
test
std
imul
pop
cmp
incb
xchg
pushl
and
inc
std
adc
shl
in
push
xchg
dec
push
pop
and
cmc
xor
cwtd
repnz
jg
push
jecxz
sahf
imul
xchg
xor
inc
mov
ss
inc
ret
mov
pop
and
jg
repnz
sbb
inc
jno
sub
mov
mov
popf
jecxz
call
jp
sbb
sahf
add
icebp
cmp
xor
jl
or
lret
jnp
aad
cmp
jno
bound
loop
jle
mov
movsb
stos
push
mov
in
cmp
mov
mov
outsb
xor
fisttpll
jge
cmpsb
push
ds
jno
icebp
add
adc
mov
and
sub
adc
cmp
adc
xchg
test
filds
mov
imul
dec
cltd
push
push
fsubr
dec
in
sbb
daa
loop
xchg
in
test
inc
pop
nop
aaa
repnz
and
xor
sub
je
sbb
test
push
mov
jl
jnp
aam
test
and
mov
dec
clc
or
pop
cli
aaa
or
inc
sub
push
mov
or
xor
adc
jl
mov
stos
mov
aam
push
ret
adc
push
push
inc
mulb
aad
pop
aaa
dec
subl
pop
push
sti
cld
pop
push
xchg
mov
jge
push
inc
nop
je
hlt
pushf
sub
pop
cmp
or
das
scas
inc
jns
adc
sahf
cwtl
mov
mov
scas
je
jb
fwait
inc
inc
xor
cmc
fs
cs
pop
fs
jmp
adc
pushf
insb
jg
andl
pop
popa
ljmp
inc
jmp
push
out
cmp
jae
adc
xor
mov
cmp
rcrb
pop
test
pop
shlb
mov
int3
rcll
xor
jae
lods
imul
mov
in
push
pusha
test
cmp
loope
xor
loope
mov
push
and
inc
pop
dec
dec
scas
fisubs
pop
and
pop
mov
mov
outsl
cmp
xlat
imul
sbb
sbb
xchg
sub
mov
dec
les
in
sbb
adc
shrb
test
imul
loope
outsl
pop
daa
aas
jge
xchg
popa
jns
xchg
or
cltd
push
out
movsb
add
roll
cmpsb
dec
cltd
sbb
lea
sbb
lret
jl
push
or
loopne
lcall
enter
imul
mov
nop
pop
sub
mov
fidivrl
and
add
cmpl
in
leave
mov
pushl
fidivl
xor
cli
inc
leave
push
testb
cmp
loopne
lcall
out
cmp
or
sbb
outsb
inc
cmp
push
dec
cmp
rcl
xor
xor
inc
inc
push
enter
xchg
jl
xor
or
jecxz
sbb
loop
mov
int
mov
mov
lahf
mov
pop
push
insl
add
mov
cli
push
sbb
ret
cmpsb
ret
ss
out
in
dec
mov
mov
outsl
jp
das
mov
and
mov
imul
jns
cmp
mov
xchg
xchg
scas
xor
mov
cmc
std
fistpll
mov
fs
ret
add
pop
les
jle
icebp
mov
lea
or
dec
inc
and
lock
xchg
loopne
xor
mov
aad
or
jo
dec
daa
fidivrl
sub
add
gs
cltd
jnp
lcall
fsubs
push
test
js
ljmp
ss
mov
int3
adc
call
jo
mov
fisubs
or
outsl
ret
lcall
push
clc
cmp
lods
insl
xchg
push
pop
enter
js
pop
or
xor
jns
lea
cmp
xlat
or
inc
push
mov
stc
sub
jle
dec
test
adc
leave
pusha
lds
cmp
mov
mov
and
lods
loopne
jnp
cmovp
fildll
dec
inc
and
mov
mov
add
xchg
loope
dec
mov
xchg
mov
adc
xor
xorb
sub
xchg
fistps
mov
roll
push
push
add
cmp
sbb
dec
sub
inc
cmp
in
sysret
psrlw
sub
fsub
js
xor
leave
aas
pop
jecxz
xchg
or
fisubs
mov
push
cld
cs
pop
adc
scas
mov
in
mov
jb
pop
sub
xchg
xor
ret
outsl
jb
addr16
cltd
inc
or
aaa
loopne
inc
inc
addr16
lock
ljmp
push
ds
mov
rcrb
cmp
dec
test
mov
dec
sub
in
test
xchg
inc
cmp
sbb
push
sub
mov
icebp
inc
cmp
sub
daa
xchg
scas
stc
dec
imul
mov
hlt
jle
hlt
fmull
pop
xor
xchg
sti
sub
mov
addb
dec
test
sbb
xlat
icebp
popf
inc
scas
cmpl
je
add
add
insl
mov
cmp
out
cmp
mov
mov
data16
imul
cmp
inc
dec
mov
adc
pop
es
pop
fisttpll
jnp
jo
adcb
sbb
xchg
stos
inc
in
jns
clc
mov
cli
xchg
cmp
fst
pushf
adc
push
sub
test
mov
pextrw
mov
scas
jbe
sub
lds
inc
xchg
add
pop
sub
inc
or
pop
pop
sub
mov
xchg
in
sub
dec
push
add
or
mov
mov
cmp
out
push
lahf
xchg
lods
aas
push
aad
sub
push
mov
push
sbb
push
negl
ret
aad
inc
stos
or
mov
mov
and
aad
xchg
rolb
cmpsl
mov
jae
arpl
int
test
cmp
sbb
test
insb
pop
cmpb
inc
stos
dec
xor
push
adc
fdivrs
jo
arpl
xor
adc
pop
cmp
insl
jle
outsb
scas
jg
or
cmp
sbb
push
add
dec
cld
sbb
push
idivl
sub
push
cmp
sub
and
popf
jg
add
loopne
imulb
jg
mov
and
adc
and
out
inc
adc
mov
mov
sub
fs
in
test
and
jmp
stos
pop
push
adc
lods
sbb
pop
pop
xchg
push
and
xor
out
and
mov
mov
dec
lcall
jb
fwait
rorl
xor
in
fadds
dec
js
cwtl
lock
jo
push
cmpsl
mov
xchg
jnp
mov
aas
lret
ret
xor
xor
jb
jmp
jae
push
xor
aam
aad
lahf
inc
gs
fwait
pop
mov
sbb
adc
mov
test
loopne
jle
or
test
xor
repnz
stos
jne
andb
aaa
jne
xlat
jnp
sub
lods
jae
icebp
or
jb
sarb
les
push
test
jg
rcrb
dec
sahf
cmc
cltd
pop
hlt
mov
mov
cmpsb
jp
inc
xchg
xor
scas
loop
sub
xchg
mov
jmp
loope
inc
lods
dec
xor
mov
add
outsb
out
xchg
push
sub
jae
test
roll
adc
or
es
add
outsl
in
or
nop
jge
repz
adc
or
xchg
push
push
fnstsw
les
js
daa
in
xor
xchg
mov
popa
cmp
dec
xchg
xor
and
out
jge
push
mov
movsb
andl
ret
fisttps
sahf
inc
inc
out
xor
addr16
dec
mov
sbb
les
jb
in
cmp
push
adc
dec
fisttpll
inc
jmp
jl
push
sub
sbb
mov
or
lret
ficomps
fldt
mov
popf
mov
pop
out
xchg
and
mov
scas
loopne
xor
mov
outsb
rcrl
test
lea
push
lret
add
das
xlat
cmp
push
adc
sub
mov
and
loope
sub
push
pushl
push
ror
jmp
shll
pop
push
inc
dec
sub
push
pushf
movsb
mov
cwtl
cmp
stc
in
cld
xor
sbb
ret
gs
aas
or
arpl
add
mov
and
cmp
mov
pop
inc
xchg
stos
scas
and
dec
test
mov
ret
and
insb
test
pcmpeqb
in
clc
in
faddp
push
jg
daa
mov
push
aam
mov
adc
iret
jb
jg
pop
mov
scas
xchg
mov
test
push
push
mov
jbe
inc
lret
xor
cwtl
lahf
xchg
sub
call
or
push
shufps
insl
cmp
out
sar
dec
jle
lret
fsin
sti
sbb
fldl
adc
dec
in
jmp
jecxz
ret
xchg
sub
rcll
sub
les
jmp
lds
loop
into
inc
repz
jl
ret
inc
test
ret
jne
daa
in
xchg
pop
std
mov
fnstenv
pop
imul
dec
movl
adcl
jns
jb
mov
iret
repnz
ret
mov
bound
test
pushf
stos
aas
pop
mov
test
sbb
das
cmp
mov
add
test
sarb
xchg
mov
int
dec
cmp
pop
add
js
out
les
and
lds
sub
adc
cmp
xor
cmp
and
imull
mov
sbb
stos
insl
stc
add
pushf
jle
pop
cmp
in
jl
pop
xchg
dec
dec
enter
sbb
push
stos
sar
xchg
adc
lock
sbb
lea
jae
rcll
mov
fsubrl
jg
popa
sub
cmpsb
jl
sbb
repz
mov
push
push
jmp
ja
mov
fucomip
xor
push
fnstenv
lea
movsb
insb
jnp
cmc
nop
push
pop
sbb
lret
mov
sbb
jb
icebp
aad
jne
leave
arpl
pop
adc
das
jns
cli
mov
and
les
add
sub
sbb
inc
js
sbbl
lahf
mov
movsb
shl
push
lahf
pusha
enter
jge
mov
pop
idivb
xlat
push
push
mov
outsb
push
in
aam
sub
ss
or
and
xchg
int3
in
pop
cmp
jo
in
scas
adc
mov
outsl
mov
dec
xor
mov
and
cmpl
adc
out
inc
inc
outsl
pop
mov
icebp
sub
rcl
dec
xor
cltd
int3
cmp
lahf
jmp
mov
add
aaa
sub
ds
ljmp
xchg
add
pop
adcb
call
push
rol
shll
lcall
rcl
jns
loope
xor
push
lahf
jbe
add
add
lock
jle
inc
addr16
insb
icebp
xchg
xchg
in
jge
mov
in
mov
xchg
sub
pusha
and
push
sbb
clc
scas
sti
and
out
lods
inc
push
mov
out
imul
cltd
jl
hlt
das
mov
dec
xchg
cmp
cs
in
add
cmp
inc
xor
in
adc
mov
iret
insb
adcl
jno
cmp
pop
pop
in
insb
lea
push
jmp
jae
test
mov
cmp
ja
inc
in
ja
jnp
add
cmpsb
sub
xlat
push
movsb
xchg
in
sub
in
cs
lret
stc
mov
rcll
out
mov
inc
and
lock
pop
les
or
loope
test
push
inc
mov
and
bound
sbb
insb
ljmp
push
inc
subl
mov
adc
insl
cmpsl
test
jp
enter
mov
fldt
cmp
adc
mov
dec
and
mov
lods
jle
rorb
ds
jns
adc
movsl
dec
loope
or
in
orb
jae
dec
cmp
mov
cmovno
pop
sti
in
cmp
push
leave
cmpsl
sub
sbb
xor
sbb
lret
xchg
cmc
inc
push
push
scas
out
sub
insl
gs
int3
arpl
scas
jbe
lods
fmuls
push
mov
jle
inc
push
jle
pop
inc
gs
call
mov
add
mov
test
int3
jns
adc
popf
js
sub
bound
jecxz
jno
insl
inc
rcr
in
adc
lret
add
iret
dec
rolb
sub
sub
int
in
je
lahf
divb
ja
xchg
mov
sbb
jne
adc
mov
stc
cli
inc
out
in
pop
add
sbb
mov
or
test
pop
cli
mov
push
mov
and
xor
pushf
pop
jle
mov
add
pop
cmpb
shl
xchg
insl
sub
sti
lret
ret
xchg
fcmovbe
ljmp
rcrb
loopnew
movsl
ficomps
ret
std
aaa
jp
stos
sbb
xchg
outsb
xchg
xor
mov
inc
xchg
call
sub
mov
or
jge
pop
push
outsl
push
ret
or
cmp
or
adc
push
fs
aam
mov
lea
and
idivb
push
mov
aam
mov
jns
lock
test
lods
jp
sub
inc
test
clc
xchg
repnz
jmp
data16
mov
bound
test
add
cmpsb
popa
sbb
mov
xchg
mov
xchg
into
pop
movsw
adc
outsb
mov
outsb
out
dec
test
fisubrl
pop
rorl
and
lods
in
je
fdivrs
std
mov
xchg
pusha
jmp
xchg
insb
cmp
cmp
mov
js
adc
sub
sbb
cmp
adc
mov
in
jno
in
imul
stos
shll
outsl
popf
aam
mov
mov
xorb
les
outsl
pop
push
push
jo
mov
movsb
cmpsl
loop
cmp
push
inc
push
ss
pop
in
insl
mov
lods
stos
enter
add
pop
in
frstor
mov
lods
movsl
into
fnstenv
pop
dec
daa
popa
pop
cmp
add
and
cmp
mov
xchg
adc
ficoml
dec
sbb
dec
js
daa
push
push
cmp
dec
stos
clc
jae
sub
mov
jge
jno
adc
mov
push
mov
push
pop
in
pop
cmpsb
cld
sbb
pop
into
jo
pop
pop
and
pusha
shll
pop
pop
add
push
sub
test
das
push
sbb
mov
iret
cmp
lea
popf
and
pop
lock
xor
sub
gs
xchg
dec
test
scas
mov
out
add
es
push
mov
test
fidivrs
hlt
aam
andb
cld
orl
add
xchg
adc
inc
addb
mov
mov
shrl
xchg
imul
mov
add
mov
xlat
subb
ret
ret
sub
mov
xor
mov
pop
mov
shrb
jl
pop
das
sub
mov
stos
pop
mov
and
sub
xor
gs
pushf
es
pop
or
pop
fiadds
pop
int
fmull
add
jp
dec
pop
in
adc
cmp
cmp
cli
mov
aam
iret
mov
popa
add
lcall
aad
sbb
adc
jl
mov
jmp
outsl
xchg
mov
es
inc
fldt
mov
fisubrl
inc
fcmovnu
push
cmpsl
int3
test
rolb
mov
push
xor
jnp
pushf
mov
or
jb
adc
sub
gs
inc
mov
enter
cmp
jmp
bound
dec
scas
jbe
inc
xor
lods
xchg
pop
je
icebp
cli
jae
sub
or
mov
icebp
mov
sbb
shll
jnp
lods
fldcw
rolb
into
push
loop
pop
inc
es
jp
mov
push
or
cld
xorl
dec
lods
inc
pop
xchg
rolb
popf
add
stos
xchg
ja
daa
jg
jne
repnz
repnz
stc
jns
test
in
pop
ljmp
xor
je
jp
xor
xchg
lahf
pop
jl
mov
pop
addr16
push
call
adc
and
inc
rcl
mov
mov
xor
and
nop
dec
xor
sbb
stos
fmull
jno
in
pop
mov
pusha
jb
push
dec
sahf
xor
cmp
add
push
fcoms
dec
insl
hlt
mov
or
xchg
mov
xchg
push
loope
or
xchg
mov
into
pusha
xchg
ljmp
imul
dec
outsb
xor
sbb
das
xlat
jl
into
out
in
sbb
mov
loope
jo
lock
adc
lret
add
into
loope
mov
jge
pop
add
ljmp
inc
mov
sub
sarb
movsb
and
xchg
sub
mov
mov
or
roll
cmp
adc
out
mov
sbb
call
lcall
shlb
es
dec
xor
and
cmp
iret
jle
icebp
icebp
pop
mov
xlat
dec
mov
xlat
test
mov
jp
das
fdiv
jge
pusha
or
add
insb
mov
sbb
add
xchg
adc
cmp
and
pushf
mov
xor
int3
movb
mov
inc
jmp
sti
mov
mov
fs
mov
push
shll
repz
addb
xor
rcrl
xchg
pop
mov
mov
sbb
pop
push
adc
dec
test
pop
fistps
lahf
dec
stc
test
cmp
lcall
shrb
pop
addr16
jne
xor
and
icebp
ficoml
pop
ret
sbb
jle
inc
icebp
inc
cltd
scas
jo,pn
adc
inc
jae
dec
enter
cmp
pop
dec
lcall
test
cmp
dec
sbb
mov
dec
and
es
adc
cmp
lahf
mov
push
gs
loopne
add
iret
rcll
icebp
flds
mov
jo
and
push
or
scas
and
call
test
xor
jo
into
outsb
hlt
cmpsl
subb
add
dec
add
sub
imul
adc
ret
add
push
data16
pop
outsl
clc
pop
sbb
cltd
test
rcrb
daa
sti
inc
faddl
jg
out
pusha
or
test
movl
mov
jae
das
cmp
pop
mov
js
pop
jecxz
lock
jns
mov
jne
jl
xchg
mov
xchg
popa
pop
test
repz
lret
sbb
adc
cmc
add
cmp
mov
mov
xor
aad
cmp
loope
pushf
mov
sbb
movb
fadd
test
push
fiadds
nop
divb
add
and
jle
dec
inc
xor
movsl
arpl
and
xchg
in
test
sbb
daa
pop
pop
pushl
negb
xor
push
sub
fdivs
mov
aaa
ds
or
jnp
das
in
lret
icebp
xchg
cmpsb
fwait
rcll
xor
daa
mov
xchg
nop
lret
subb
mov
jmp
inc
aas
inc
out
loope
cmp
fsts
jge
arpl
repz
sti
push
gs
xor
xchg
cltd
std
add
mov
nop
sbb
xlat
fs
std
xchg
adc
ja
and
push
iret
and
cmp
hlt
mov
test
sti
inc
jecxz
insl
scas
push
stc
sahf
xchg
mov
sahf
loop
pop
adc
jge
push
andb
sbb
imul
xchg
setnp
mov
cmpsl
xchg
pop
pop
mov
lret
or
jne
testb
lods
inc
xlat
and
jbe
pusha
iret
dec
mov
mov
std
sub
ret
adc
push
ljmp
insb
and
or
inc
insb
stc
dec
add
xchg
xor
ljmp
push
push
test
das
jns
pop
bound
xchg
pop
ret
rcll
pop
andb
ret
adc
fadd
jecxz
imul
mov
dec
sbb
scas
or
fcomps
xchg
neg
add
ljmp
cld
and
mov
rclb
or
sbb
stos
sbb
mov
cli
pop
jp
xchg
mov
lcall
sub
cs
mov
in
mov
clc
neg
cs
and
in
int3
out
lods
mov
out
aaa
sbb
imul
lret
mov
lds
sarl
cmpsl
cmp
fwait
dec
xor
enter
push
lahf
sbb
jbe
push
inc
inc
push
pop
out
dec
stc
add
hlt
jno
mov
push
jne
cmp
jle
xchg
outsb
jl
jge
or
mov
in
dec
cmp
add
jecxz
bswap
out
inc
mov
push
or
xchg
iret
loope
sbb
jl
push
into
dec
js
rorb
call
ss
pop
inc
popf
out
std
sbb
aas
inc
cmp
lret
movsb
pop
sbb
aaa
shrl
loope
lock
mov
sub
repnz
mov
mov
pop
push
cmp
add
adc
sub
test
mulb
adc
clc
dec
repnz
dec
cli
addr16
cltd
jae
fstps
aaa
add
jo
jae
pop
mov
and
aaa
ss
fisubs
test
xchg
add
pop
das
mov
test
fists
mov
int3
adc
mov
rcll
mov
das
jae
popa
add
outsb
sbb
pop
inc
push
or
dec
mov
arpl
push
dec
jmp
insl
ret
hlt
mov
mov
mov
dec
enter
lea
rcrb
jmp
xchg
mov
popa
jecxz
mov
mov
pop
dec
aaa
cmpb
aam
inc
mov
aam
aas
insb
inc
push
jmp
push
xchg
loopne
cmp
or
nop
sbb
add
mov
lea
pop
cwtl
cs
clc
add
inc
and
lret
stos
inc
sub
and
enter
mov
arpl
rorb
je
sbb
mov
dec
test
lock
sbb
ja
or
mov
mov
and
mov
bnd
push
pop
mov
adc
and
pslld
pop
popa
ljmp
mov
jbe
mov
jle
cli
and
sub
out
mov
jg
push
daa
sbb
addl
sbb
das
outsb
mov
pop
out
and
mov
movsl
lcall
sti
loopne
jae
pop
xchg
jno
adc
cmp
clc
lret
dec
loope
xchg
mov
out
in
frstor
mov
outsl
outsb
pop
push
pop
out
and
pop
and
test
les
lds
push
cmp
scas
add
xchg
mov
sub
xlat
mov
sub
pop
clc
adc
test
int3
out
cmc
dec
movsl
inc
cmp
test
push
adc
dec
cmpsb
mov
push
xchg
icebp
push
shll
call
in
dec
xor
fisubl
ja
ror
push
sbb
stc
lcall
or
xor
pop
lcall
outsl
cli
push
int3
sbb
dec
adc
hlt
inc
xchg
jnp
jo
scas
fcom
ja
jp
fnstcw
shl
in
pop
lock
faddl
fsubrs
adc
mov
out
add
jbe
mov
popa
adc
insl
stc
test
mov
js
scas
cwtl
cli
or
scas
push
push
jb
adc
or
data16
imul
adc
sub
mov
insl
insl
leave
repnz
pop
push
loope
jmp
das
xchg
out
dec
testb
mov
xacquire
jne
daa
pop
pushf
sti
inc
testb
mov
mov
lret
repz
orb
cmp
test
test
aas
insb
movsb
xor
pop
pop
sbb
sahf
mov
stos
fwait
mov
jmp
shr
push
or
jg
lahf
push
jne
loopne
mov
iret
and
push
imul
pop
push
and
xor
dec
and
rcr
cli
mov
outsb
pop
and
fwait
aas
sbb
mov
subl
pop
mov
addr16
or
nop
jb
pop
jecxz
pop
lcall
mov
lds
jo
or
adc
pop
push
pop
lahf
lods
add
jbe
in
push
lock
sub
and
sbb
jae
pop
out
pop
bound
and
fsts
or
dec
ljmp
add
imul
aas
js
pop
mov
out
mov
iret
mov
push
jne
dec
push
dec
pop
jp
push
jnp
adc
lret
sbb
xchg
repz
inc
inc
scas
sub
jae
dec
lahf
test
in
outsl
nop
push
or
inc
pop
sub
push
push
popf
scas
loope
mov
gs
fldcw
int3
pop
stc
inc
dec
cmpsl
mov
jb
out
dec
adc
cs
imul
jl
adc
xor
xlat
jno
sarl
addr16
mov
push
mov
or
out
adc
mov
arpl
mov
out
push
addr16
and
jp
es
xorl
jnp
pop
loopne
fsubrl
push
imul
insb
lahf
adc
jb
out
ja
jns
notb
stos
add
rcl
popa
jmp
test
mov
scas
les
nop
cli
rcrb
add
push
ficompl
gs
mov
fldcw
inc
fildl
dec
imul
ret
test
pushf
mov
mov
mov
pop
push
cmp
dec
push
push
jge
push
inc
jne
sbb
fistpl
push
inc
stos
call
dec
jmp
dec
pop
inc
andl
xor
popa
in
fnstcw
jle
pop
scas
ds
scas
gs
sbb
popf
push
loop
sub
mov
scas
inc
xor
pop
and
int3
popl
stos
pop
and
mov
jne
and
sbb
xor
or
pop
and
arpl
lret
movsb
or
fwait
push
cmpsl
push
xchg
mov
std
dec
push
jg
cmp
test
add
xchg
loope
push
or
loopne
add
int3
xchg
dec
and
adc
adc
fistps
cwtl
mov
push
lret
cwtl
movsl
sbb
les
mov
sub
jle
and
push
cmp
add
sbb
je
stc
add
loop
js
xchg
sti
test
paddb
mov
mov
add
mov
mov
loopne
sub
ljmp
loop
and
push
adc
imul
dec
cmp
sbb
sti
aaa
movsb
push
int
aam
sbb
add
je
mov
pop
fcmove
push
lods
sub
adc
xchg
pop
inc
lock
jl
mov
pop
lods
pop
leave
xchg
fnsave
inc
sbb
cmp
cmpsb
push
orb
scas
push
loope
sahf
mov
mov
and
std
fisttps
fsubrl
xor
push
jno
adc
jbe
cmc
inc
pop
mov
xchg
insb
scas
ret
cld
push
mov
das
and
js
aam
mov
add
mov
jg
xchg
iret
mov
mov
cltd
fdivrs
aas
sbb
jbe
sub
cmc
inc
mov
pop
sbb
or
jno
sub
fwait
xor
dec
in
mov
hlt
bound
inc
insl
xchg
lret
sub
pop
xor
xor
sarb
adc
push
movsl
aaa
enter
inc
sbb
roll
popa
lock
ja
fbstp
jg
cmp
je
or
sub
into
adc
hlt
and
inc
stc
mov
lret
add
loopne
jae
jne
xor
pop
dec
cmc
push
add
mov
or
jg
add
jmp
inc
cmp
ljmp
js
fnstenv
icebp
insl
stos
cmpsl
jg
xchg
sahf
icebp
inc
fcoms
clc
cli
out
sti
lods
jb
sub
jl
jle
test
dec
adc
mov
push
loopne
pusha
movsb
or
aam
mov
mov
cmp
sub
into
or
in
mov
iret
mov
inc
cmpsl
aas
aam
add
mov
data16
idivl
or
sbb
fstl
daa
dec
fwait
inc
lea
add
add
pop
in
test
sbb
in
aam
mov
xchg
cmp
dec
stos
cmp
xchg
xor
addr16
pop
cltd
fstps
mov
pop
add
mov
in
daa
sub
test
shr
outsb
inc
mov
sbb
pop
dec
push
inc
and
andl
loope
sub
add
imul
fisubs
sbb
cli
cmp
pop
add
xchg
in
mov
jge
jnp
iret
inc
sub
clc
ds
mov
cmp
loop
orl
mov
push
test
or
cmpsl
ds
pusha
js
aaa
cmpps
cmp
jecxz
and
adc
inc
jns
cs
andb
pop
or
cmp
or
ret
loope
cwtl
sbb
dec
xchg
inc
enter
idivb
iret
add
cmp
cmpsl
jp
xchg
ret
addr16
sub
mov
inc
mov
mov
lahf
push
inc
cmp
xor
xor
icebp
add
xchg
shrl
jae
shlb
mov
arpl
pop
lock
sbb
mov
ret
mov
int
dec
mov
and
adcb
sub
pop
pop
adc
enter
movsl
push
mov
sub
in
loop
fwait
dec
sahf
lret
adcl
sub
lret
xor
sbb
xor
push
dec
and
dec
and
ja
repz
adc
mov
insl
cmc
test
jmp
cmc
fmuls
sti
push
test
pop
shlb
sub
pop
call
cwtl
loop
sub
das
adc
aad
and
lds
and
mov
orb
or
and
inc
ja
mov
aas
cmp
xchg
add
or
and
fsub
xchg
les
paddb
mov
mov
fwait
inc
std
mov
push
out
fsubl
imul
cld
sub
shrl
shrl
mov
cli
stos
fldcw
jge
cmc
mov
push
push
fldl
arpl
inc
mov
xchg
test
loope
push
jl
xchg
shrb
test
cs
sbb
les
xchg
push
sub
push
and
loopne
and
push
inc
pop
cmp
iret
out
stc
std
add
dec
mov
jge
scas
popa
inc
push
aad
xlat
lds
fs
xor
ja
add
mov
jp
mov
sub
add
xor
mov
int
push
sub
fdiv
or
rol
cmpsl
jo
lds
roll
imul
add
sarb
xor
cmp
pushf
outsb
sub
xchg
push
xor
in
add
and
or
adc
call
xor
or
xchg
or
imul
movsb
mov
sub
pop
mov
pop
inc
fldl
sub
mov
jne
popa
push
push
pop
adc
push
and
aad
sti
popf
and
or
in
imul
jmp
aam
jl
sub
add
ret
add
mov
in
fbstp
inc
jo
stos
add
xor
inc
jae
inc
push
jns
ds
sbb
inc
imul
aas
dec
imul
es
mov
scas
mov
xchg
ffreep
xchg
jb
mov
in
fsubs
pop
and
pop
inc
mov
pushl
cmp
xor
jecxz
and
jmp
and
jb
cmp
jns
mov
hlt
in
cmpsb
xor
and
inc
je
mov
cmp
andb
out
adc
and
enter
mov
mov
idiv
cmpsl
rorl
fists
or
cmpsl
notb
ss
sub
pop
out
in
adc
pop
loopne
mov
mov
mov
inc
mov
inc
cmp
dec
test
sbb
push
cmp
mov
dec
addb
add
xchg
xor
in
into
pop
xor
or
jmp
std
sbb
pop
xchg
repnz
jnp
daa
pop
add
cld
jp
movsl
in
ficomps
mov
fldpi
decb
popa
push
add
ja
or
adc
into
arpl
dec
movlps
ficompl
jno
push
aam
xchg
clc
adc
inc
jns
jb
or
sub
sub
aas
stos
push
push
mov
pop
jo
jno
daa
sbb
jge
ds
push
orb
ss
imul
fsts
out
cld
iret
mov
mov
data16
cli
xlat
shr
mov
fwait
or
mov
ljmp
xor
movsl
add
xor
adc
leave
test
ret
out
jp
inc
xchg
xchg
enter
mov
fwait
push
sbb
iret
sbb
fs
idivb
mov
inc
push
xchg
jmp
sbb
clc
sub
xorb
mov
loop
fsts
adc
add
pop
adc
in
sbb
add
scas
lahf
sub
adc
rcrl
faddl
out
divps
call
mov
popf
cmp
mov
and
clc
cmc
in
and
std
inc
dec
fisubs
mov
add
cmp
dec
adc
stc
and
jecxz
int3
fiadds
mov
sbb
xchg
sbb
rclb
data16
push
dec
cmp
lret
mov
shll
cmc
xor
or
outsl
fidivl
adc
mov
and
jl
inc
scas
ss
mov
push
jle
add
inc
outsl
push
jl
adc
stc
push
or
push
out
or
js
lcall
int
in
or
mov
arpl
or
out
sub
enter
xor
inc
repz
mov
xorb
popa
add
cmp
cmc
hlt
in
jns
fstps
lret
mov
xor
xor
lods
lret
push
clc
sub
sub
int
mov
scas
dec
shrb
nop
les
cmp
aas
sbb
mov
pop
push
ret
leave
pop
jecxz
test
xchg
in
stc
aas
add
or
out
sub
mov
add
testb
fisubrl
popa
xchg
xor
push
sbb
pand
out
outsl
das
xchg
aam
imul
sahf
ret
mov
xchg
xor
add
mov
aaa
fs
cwtl
sar
ds
push
int
ds
mov
xlat
insb
fistl
mov
push
addr16
inc
dec
dec
jns
fisubrs
les
xor
pop
push
inc
dec
cmovno
jae
daa
in
push
mov
pusha
call
add
aam
cmpsl
inc
sbb
repnz
das
lds
orl
lock
pop
int
loopne
adc
fidivrs
pop
inc
dec
clc
cmpb
movlps
cmp
lcall
dec
and
mov
mov
fnsave
inc
fsubrs
ds
minps
sti
dec
clc
jnp
pusha
aaa
mov
and
das
outsl
int3
bound
test
jbe
adc
inc
mov
push
fcmovb
iret
imul
lahf
repz
xor
arpl
pop
sub
jno
cltd
push
jp
iret
fisubs
jno
dec
mov
aam
mov
sbb
mov
aam
inc
stos
mov
lcall
popa
inc
xor
negb
xchg
addr16
cs
fimuls
iret
cmpsl
out
sahf
lods
add
fisubs
fwait
popa
pop
mov
xor
ficoms
mov
lahf
movsb
push
xchg
enter
scas
dec
dec
add
push
lock
xor
and
aaa
mov
xor
mov
cmc
sbb
sti
xor
test
xor
push
es
mov
sub
inc
fimuls
ss
ds
insb
pop
pop
fucomip
les
push
lock
jg
adc
push
sub
subl
movhps
and
scas
xchg
and
lcall
sbb
in
iret
mov
sbb
mov
inc
fstl
ret
leave
dec
imul
add
cmp
push
push
scas
ja
adc
inc
lret
xchg
pop
and
fdivrp
mov
popaw
inc
outsb
adc
jno
mov
pop
sarl
lods
and
sub
mov
notb
sbb
add
xchg
mov
gs
fiaddl
loop
popf
lcall
adcb
icebp
out
dec
sbb
popf
rorb
sub
nop
inc
movsb
xchg
outsl
or
clc
adc
push
dec
stos
fsubrl
xor
out
lcall
xor
inc
xchg
jno
pop
loopne
punpckhdq
inc
ror
lret
in
test
pop
xchg
aad
mov
ret
xchg
sbb
and
or
cmc
xchg
sub
lret
out
in
out
ds
lock
pop
cltd
and
push
in
mov
aaa
cmp
xor
mov
frstor
mov
lea
in
hlt
ret
rcl
outsl
test
scas
mov
cmpsb
outsl
push
sbbl
or
fistl
inc
fcomps
cmp
push
mov
mov
pop
sahf
push
cld
xchg
cmp
and
lock
popa
dec
pop
ljmp
call
cld
movsb
fisubrs
push
lahf
cli
lods
xchg
lahf
ficomps
cli
inc
cs
push
fs
faddp
iret
mov
mov
shlb
hlt
out
ret
xor
xchg
insl
adc
mov
mov
stc
inc
adc
hlt
shll
mov
pop
mov
fldenv
lahf
push
in
movsb
mov
push
rclb
pop
repnz
inc
out
mov
and
sub
movups
jne
pop
and
ja
or
sbbl
jae
sub
or
adc
rorl
in
sub
pop
sbb
lock
out
and
mov
cmp
fldenv
mov
shl
or
fbstp
inc
shll
out
leave
movsb
fsubrl
stc
ret
aaa
imul
inc
add
push
dec
mov
xor
scas
add
pop
addr16
inc
fs
repz
pop
jle
adc
dec
imul
sub
jbe
std
outsl
lret
movsb
pop
mov
inc
dec
arpl
out
stos
jg
xchg
xchg
adc
cmp
sbb
inc
clc
mov
gs
js
call
mov
arpl
test
fsubr
pop
add
xchg
test
pop
leave
inc
nop
mov
bound
and
test
mov
push
adc
mov
lds
push
fisubrs
das
outsb
dec
xlat
ret
mov
andb
popa
mov
xchg
jg
and
and
dec
arpl
sbb
xchg
mov
in
xchg
ficoms
fstpt
jno
and
sbb
nopl
mov
cs
es
mov
mov
push
pop
push
mov
add
xchg
or
sbb
arpl
cltd
dec
xor
cwtl
dec
xchg
push
inc
dec
or
dec
out
push
sbb
rorb
ss
and
jne
xor
fnstenv
mov
aad
sub
jmp
pop
fwait
mov
cltd
add
sbb
nop
jno
xor
pop
imul
sub
imul
lcall
cmpsl
push
adc
xchg
or
dec
cmp
pop
pop
dec
inc
movsb
cwtl
ja
sub
dec
lahf
xor
and
mov
stos
out
push
test
cmpsl
jl
sti
out
insl
cmp
leave
leave
fwait
mov
ljmp
sbb
imul
xchg
pop
add
sbb
enter
mov
mov
repnz
data16
pop
mov
insl
sub
cmp
inc
sub
sahf
xchg
fwait
pmulhuw
fwait
aaa
mov
push
or
cwtl
sub
xorl
fs
pusha
add
mov
mov
int3
xor
inc
test
xchg
mov
cwtl
mov
xchg
dec
outsl
pop
fistl
add
in
mov
inc
mov
sbb
adc
fbld
or
push
fwait
out
cmp
mov
xor
in
mov
arpl
jle
dec
sar
pop
xor
jnp
push
mov
pop
mov
sbb
pop
prefetch
or
push
imul
xchg
sbb
dec
popf
scas
scas
jbe
mov
inc
aas
rorb
ftst
xor
adc
push
sub
mov
arpl
mov
xchg
lock
push
xlat
sbb
cmp
popf
or
in
sbb
inc
cs
jmp
mov
shlb
add
jmp
xchg
cmp
jmp
repnz
mov
pop
stos
mov
ljmp
or
push
dec
pop
cmpsl
lods
mov
gs
inc
jne
call
fdecstp
pop
mov
add
inc
inc
sarb
daa
stc
mov
pop
and
xchg
int3
je
add
stos
cmp
jl
adc
data16
gs
cmp
gs
insb
jb
push
and
xchg
or
ds
loop
pop
inc
cs
sbb
adc
leave
aaa
aaa
fsubs
aam
ja
adc
add
daa
arpl
cli
adc
xchg
push
adcb
movsb
adc
xchg
cmp
sub
ficompl
mov
inc
xchg
or
adc
cmpsb
lea
movsl
pop
dec
subl
std
mov
aas
fisubs
dec
mov
fidivrl
jbe
push
mov
mov
ljmp
sub
std
inc
loopne
pop
ss
nop
mov
dec
jecxz
insl
add
push
push
iret
pop
fmull
stos
dec
ret
lods
jne
mov
notl
out
sub
or
in
sub
out
jnp
cmp
pop
cmp
xor
inc
jmp
test
jbe
in
repnz
push
inc
and
sbb
daa
adc
bound
mov
arpl
cmc
inc
mov
sub
ret
add
fwait
jmp
ss
loope
pusha
adc
cmp
sbb
cmp
enter
mov
push
fidivl
mov
cs
aad
dec
mov
push
xlat
sub
inc
cmp
repnz
mov
xchg
mov
jnp
adc
movsb
repz
test
orb
xchg
repnz
fists
push
call
int3
btr
pushf
mov
dec
sub
je
cli
cmp
add
xchg
scas
stos
sbb
jne
sbb
loopne
or
mov
push
mov
and
lods
jno
pop
mov
fstpt
pop
fiadds
jnp
das
repz
iret
inc
pop
and
sub
jo
and
push
jno
add
test
xchg
and
push
pop
pusha
shlb
insl
scas
adc
movb
ret
shl
cmp
mov
lret
or
stos
adc
push
nop
test
lea
test
loopne
into
jae
jo
les
aam
cmp
gs
test
lret
mov
mov
xor
dec
push
xchg
mov
mov
scas
gs
pop
fstpl
dec
push
dec
fsubr
mov
dec
std
mov
jmp
jno
xlat
and
xlat
das
setge
push
idivl
fcmovu
cmp
jns
mov
cmp
int3
fcmovb
insb
gs
into
into
int
xchg
in
data16
shl
mov
icebp
pusha
cmp
sbb
xchg
jne
ret
xor
andl
dec
push
xchg
sub
xchg
sbb
adc
inc
ret
std
jo
push
outsl
xorb
pusha
bound
mov
aaa
xor
push
fsubs
cmp
fsubrl
scas
push
mov
sbb
lds
push
je
int3
lret
adc
lret
mov
xchg
lcall
pushf
lea
mov
inc
mov
movsl
mov
adc
cmp
repnz
daa
int
push
es
lods
mov
xchg
pop
jnp
mov
cmp
add
sbb
xchg
aas
xor
mov
or
jae
inc
push
pushf
outsl
mov
and
mov
mov
push
mov
insl
or
popf
pop
mov
xchg
addr16
arpl
fcomi
mov
sub
push
or
iret
not
sub
dec
insb
adc
out
out
repnz
lods
mov
jno
rclb
ja
fildll
movl
mov
sbb
fidivrs
adc
sub
jae
add
push
adc
je
repnz
pop
rcll
push
or
int3
xlat
lret
or
jle
pop
jbe
aas
test
scas
aaa
popf
dec
xchg
mov
xchg
lock
sbb
stc
aaa
push
dec
int3
jmp
push
cmpl
loop
ljmp
movsb
mov
in
insb
dec
lret
imul
mov
es
pop
rcrl
dec
mov
sub
mov
mov
mov
or
subl
fisttpll
cmp
jno
loope
cs
push
arpl
jmp
hlt
jp
push
xchg
stos
lea
movsl
insl
repz
push
jge
mov
add
sbb
push
jae
or
loop
mov
lods
jb
xor
sbb
dec
imul
push
shrb
adc
add
clc
bound
jmp
mov
pusha
add
test
int3
mov
ja
pop
push
sub
push
jge
icebp
imul
xor
cmp
roll
leave
xchg
in
daa
cltd
and
jns
xor
jnp
dec
or
in
aad
outsl
mov
mov
xor
pushf
jp
and
test
nop
jb
and
movsb
dec
jmp
push
push
loopne
push
loop
mov
adc
mov
sub
js
daa
adc
jnp
xchg
rcrb
jno
mov
imul
movsl
loop
inc
mov
out
push
mov
and
or
loop
fistpll
xchg
mov
gs
ja
in
cmpsb
sub
mov
mov
push
sbb
adc
or
push
sub
pop
or
loope
fadd
movsl
xchg
imul
sub
cmc
push
stos
and
xor
jecxz
stos
inc
sub
xchg
push
cmp
mov
mov
sbb
rol
push
repnz
lods
sub
insl
dec
sbb
ds
jmp
adc
daa
cli
inc
iret
imul
out
popf
inc
dec
sbb
pop
aam
imul
xchg
js
push
jne
add
ret
mov
lret
fcomip
pop
mov
das
sub
ret
cli
mov
xchg
push
out
and
sub
push
xlat
or
push
or
cmc
push
test
dec
in
mov
or
mov
iret
cmpsb
cmp
push
shlb
mov
bound
sahf
test
test
in
ljmp
cmp
sbb
lret
fs
push
mov
xor
xor
repz
jns
jbe
pop
jg
add
adc
aaa
sarb
popf
or
and
cmp
out
mov
mull
inc
pop
nop
enter
sub
icebp
nop
rcrl
lock
add
mov
push
aas
push
xchg
mov
ret
outsl
aaa
mov
call
bound
aas
xchg
daa
pop
dec
xor
jae
inc
pop
cmp
andl
int
inc
shrl
add
jmp
fucomip
lcall
sbb
out
in
aas
mov
enter
mov
jbe
xor
or
mov
push
mov
fisubl
rolb
lret
mov
jns
jle
hlt
sub
mulb
pusha
pop
lods
pause
xor
das
ret
push
aam
ret
das
cli
inc
mov
push
push
es
shll
jae
and
std
pop
ja
dec
adc
sbb
mov
jb
dec
cmc
push
push
mov
inc
cmp
ja
cmp
sar
jg
dec
mov
fdiv
jne
sub
lcall
adcl
insl
jae
sbb
sahf
dec
xor
xchg
mov
dec
dec
rdmsr
test
cmpsl
jg
pop
cltd
arpl
fidivs
ds
iret
sub
pushf
add
fisttpl
das
mov
mov
loop
dec
jbe
popf
cmp
aaa
mov
rcll
mov
adc
cmpsb
pusha
fwait
jno
fldt
sub
mov
fnsave
mov
cli
aad
cltd
xchg
sub
pop
mov
dec
dec
add
adc
sbb
repnz
jnp
push
lahf
mov
or
inc
inc
mov
mov
ficompl
push
mov
sbb
imul
incl
jl
mov
mov
pop
mov
icebp
outsb
out
insb
push
jbe
and
jg
les
ja
sarl
xor
sub
sbb
pop
cmp
mov
mov
push
jl
add
adc
arpl
les
loope
out
cltd
aaa
stos
sbb
iret
lds
lahf
scas
movsl
aad
add
jecxz
into
sub
fwait
pop
add
mov
stos
out
mov
xchg
adc
dec
push
and
sub
outsl
divl
int
mov
nop
popf
pushf
sbb
push
sbb
and
subl
int
or
lret
mov
daa
je
sti
inc
push
fisubrs
shl
out
std
outsl
add
sub
test
sub
movups
lcall
testb
out
aaa
sub
sub
push
xchg
dec
ljmp
movsl
or
adc
inc
loope
sbb
repnz
and
adc
pop
dec
mov
pusha
fcomps
jne
pusha
cmc
jae
jnp
mov
into
int3
insb
loope
cmp
pop
lods
data16
popa
in
sbbl
jmp
mov
mov
mov
cmp
adc
out
int3
shl
test
loope
push
sub
dec
cwtl
in
lcall
add
std
dec
inc
or
fbstp
out
sub
pop
mov
sahf
mov
xorb
popf
aas
pop
mov
dec
fldt
mov
and
cmc
jmp
inc
fiaddl
sbb
movsl
je
or
sbb
xchg
enter
loopne
dec
scas
popa
and
xchg
fstps
pusha
shrb
jl
xor
movsl
jp
cmpsl
stc
lock
or
push
jb
rclb
repz
mov
mov
mov
mov
sub
test
fcompl
leave
adc
test
push
sbb
mov
pop
sbb
incl
cltd
xlat
and
lods
or
dec
lock
xor
je
push
jp
or
mov
mov
dec
popf
les
cmc
push
xor
aaa
int3
mov
imul
sbb
mov
clc
xor
mov
stos
imul
loope
mov
xchg
test
test
jo
inc
test
mov
push
in
inc
testb
or
lock
jp
adc
icebp
xor
jmp
rclb
lea
xor
xchg
mov
out
mov
movsl
loop
xor
jmp
mov
out
mov
cmp
lods
adc
sub
mov
and
mov
out
jae
mov
jge
xorb
test
fnstcw
fwait
imul
bound
sarl
xor
lahf
das
sub
inc
out
sub
stc
xchg
pop
sahf
sahf
inc
xchg
and
sbb
xor
push
iret
cmp
in
push
push
test
loope
jb
enter
mov
pop
mov
add
fsts
gs
das
pop
push
out
xchg
sbb
stos
sub
out
mov
xchg
adc
repz
pop
fldenv
inc
roll
fisubrl
in
and
xorl
dec
add
pop
dec
outsl
add
jp
je
cwtl
mov
inc
sbb
mov
lock
mov
cwtl
cmpsb
push
sbb
mov
mov
es
jmp
bound
add
adc
xor
and
push
xlat
add
push
popa
in
lods
mov
xchg
ljmp
cmc
ret
dec
fwait
hlt
inc
and
add
out
pop
pop
mov
sbb
fdivs
shr
sti
addl
pop
fnsave
outsb
das
lcall
jmp
sbb
cmp
pop
mov
xor
aam
test
repz
iret
lds
or
int3
pop
lock
sub
out
mov
sub
ja
sub
inc
push
dec
mov
stos
push
in
push
or
pop
outsl
push
scas
aam
ret
push
cmp
lahf
gs
cmp
push
lcall
std
or
inc
pop
jmp
data16
xsavec
sbb
mov
ss
mov
inc
test
push
lea
lock
xchg
pop
add
repnz
subl
roll
push
pop
cli
mov
lds
test
aas
jne
inc
xchg
test
mov
dec
ficoms
adc
out
ja
cmp
rcll
imul
repz
test
aas
daa
loop
fucomip
jp
xor
push
mov
dec
mov
xchg
push
lds
cmp
dec
test
shlb
xor
xchg
clc
inc
subb
xchg
leave
dec
in
add
or
inc
cmc
sub
push
daa
sti
cmp
imul
mov
jmp
mov
iret
js
scas
into
mov
inc
lcall
cmc
sub
aad
mov
lcall
leave
xchg
in
add
sti
cmpsl
xor
sub
and
push
loope
sub
lods
ret
lds
xchg
idivl
es
loope
xchg
push
push
jae
call
inc
int
das
nop
adc
sbb
cs
std
dec
dec
jo
inc
out
shll
pop
std
sbb
nop
sarb
imul
or
xor
jl
dec
int
inc
mov
rorb
pop
fldcw
mov
and
iret
sbb
jnp
ja
imul
stos
movsl
shl
add
pop
sub
mov
leavew
inc
sbb
test
es
bound
insw
xchg
sub
subb
adc
or
lds
mov
loopne
test
dec
push
mov
dec
bound
push
lods
arpl
jbe
movb
xor
and
addl
mov
jg
das
cltd
lret
inc
add
int
and
or
push
out
xchg
mov
out
xchg
mov
xor
add
mov
fildl
mov
jmp
jne
stos
mov
jb
pop
adc
xor
inc
mov
push
js
lods
aad
jl
fildl
mov
jne
or
ret
and
mov
jp
jbe
inc
daa
pop
or
clc
sbb
loope
cmp
sbb
push
ljmp
pop
out
inc
stc
jae
mov
and
ffree
xchg
inc
iret
adc
adc
sbb
shlb
dec
xor
jbe
dec
retw
push
push
lcall
mov
jb
pusha
rcrl
push
xchg
out
jns
pusha
dec
sbb
call
jmp
std
mov
loopew
jmp
pop
xchg
and
ret
cmovnp
scas
jl
dec
imul
movsl
mov
iret
mov
stc
int3
or
and
rorb
mov
xchg
mov
fwait
out
outsl
mov
arpl
test
adc
dec
sub
lock
xchg
mov
popa
test
es
icebp
dec
ds
scas
test
inc
ljmp
enter
mov
pop
push
dec
adc
jp
into
leave
repnz
push
mov
mov
push
add
loope
pop
lahf
xchg
and
ret
sub
dec
bound
mov
mov
push
pop
pop
outsl
mov
scas
sarb
add
out
add
inc
push
xor
ret
es
mov
xlat
and
jl
repnz
adc
xchg
int3
cwtl
call
dec
in
inc
shlb
mov
fcoms
adc
pop
push
jmp
dec
orb
das
shlb
scas
mov
outsb
mov
decl
jg
jo
stos
mov
shl
and
cmpsb
jg
mov
loope
scas
and
cmp
xor
mov
inc
gs
ljmp
loopne
out
in
aas
push
arpl
mov
out
nop
jnp
dec
xchg
sbb
into
jge
daa
push
mov
enter
xor
cmp
pop
inc
pop
sbb
and
pop
dec
sbb
enter
xchg
in
cltd
andl
outsb
jb
test
jecxz
cmp
sub
arpl
dec
stos
pop
icebp
scas
mulb
push
call
fidivrl
add
mov
add
out
orb
lret
lahf
adc
xor
mov
lret
xchg
adc
leave
add
push
pusha
mov
gs
mov
mov
clc
sar
fstl
cmp
std
sbb
in
dec
add
jmp
inc
les
push
testl
out
inc
cmc
push
cli
mov
les
xchg
jle
sub
fldcw
jno
xlat
cmp
shlb
sti
and
daa
xchg
mov
inc
pop
and
orb
in
lea
pop
pushf
daa
jns
ja
outsl
adc
add
mov
inc
mov
mov
decb
dec
mov
jle
sub
mov
xor
cmpsb
pusha
push
inc
out
inc
push
mov
mov
push
cmp
mov
dec
call
fwait
std
push
mov
inc
data16
movsl
pusha
pop
cmp
xchg
iret
cltd
xor
fidivs
xor
adc
push
sbb
lcall
jno
and
dec
adc
mov
dec
imull
bound
mov
mov
popa
movsl
xchg
adc
mov
push
jns
xchg
adc
add
int
mov
sub
push
jg
insb
daa
dec
mov
lock
gs
mov
and
mov
lret
push
pusha
mov
and
jno
pop
mov
pop
test
cwtl
dec
add
arpl
sbb
xlat
mov
xchg
mov
scas
nop
push
gs
out
hlt
aad
push
or
push
lds
std
int
xchg
pop
out
xor
pop
ja
sub
out
cwtl
or
mov
jmp
xchg
jl
into
sbb
sbb
lea
and
add
mov
divl
out
push
imul
mov
movsl
mov
nop
add
lahf
add
and
fwait
push
add
rcrl
inc
gs
adc
enter
leave
cwtl
imul
jns
fwait
pop
sbb
cltd
ret
sub
in
lahf
adc
push
dec
rorl
cmpb
xchg
mov
nop
xchg
xor
inc
or
mov
mov
test
mov
lds
and
imul
ret
divl
and
adc
mov
ret
push
and
cmpsb
dec
jge
sahf
ss
inc
or
push
jp
mov
leave
adc
in
adc
xor
nop
rcl
mov
dec
iret
mov
scas
inc
inc
or
cmpsb
mov
fcomip
mov
inc
in
mov
cltd
lods
cmp
cwtl
cmp
mov
loopne
xor
and
mov
ret
push
mov
inc
ljmp
xor
repnz
cmc
mov
jmp
outsl
sbb
push
clc
xchg
pop
pop
mov
popf
movsl
aaa
inc
pop
sti
push
jp
sub
icebp
jb
jge
insl
mov
jge
push
out
xchg
sub
sbb
ljmp
test
mov
add
inc
dec
xchg
pop
fildl
push
pop
fnstcw
dec
lret
or
lds
xlat
inc
mov
out
popf
mov
pop
sti
call
sbb
fcoms
imul
xchg
cmp
arpl
iret
aaa
ja
push
inc
jg
js
jo
outsl
push
cld
push
cmp
mov
jmp
js
or
sti
or
pop
inc
je
pushl
mov
testb
fs
lods
cmpsl
aas
xchg
mov
push
xchg
sub
push
rol
insb
dec
mov
ret
mov
lret
movsb
lret
sbb
jne
or
mov
adc
xchg
neg
xor
loop
jns
mov
data16
int3
xchg
xchg
lahf
sbb
in
xchg
fdivl
xor
dec
pop
cmp
jae
aam
jns
xor
sub
mov
in
out
cmp
mov
mov
mov
cli
int
andb
popf
mov
mov
icebp
fstl
mov
mov
xor
cmp
idivl
push
push
movsb
mov
inc
or
popa
mov
cltd
jge
ss
or
movsl
mov
mov
dec
pop
sub
mov
call
mov
mov
cmp
mov
add
sbb
je
stc
push
mov
insb
add
subb
bound
jne
push
xchg
aas
pop
jne
out
lret
xor
lea
stos
outsb
mov
dec
lcall
push
mov
pop
mov
jno
sbb
imull
out
ret
xchg
testb
cld
xor
leave
enter
les
fdivp
popa
insb
hlt
dec
cs
cmp
fdivrp
ds
cmp
adc
push
and
cmpl
sbb
push
cld
adc
fwait
stos
mov
fs
push
int3
cld
fwait
mov
inc
test
ret
out
jo
aam
sub
mov
inc
xor
das
icebp
pop
fisubrs
testl
nop
in
push
sub
adc
jbe
lds
mov
mov
add
daa
mov
sbb
xchg
mov
stos
and
cmpl
xchg
lock
ret
mov
cmp
sub
outsb
sarb
ja
outsl
cwtl
loope
or
movsb
movsb
pop
sahf
lds
stos
fldl
aam
mov
out
add
or
test
add
and
mov
sub
lds
daa
ds
aas
xlat
mov
sub
out
test
sub
mov
jmp
ja
imul
scas
mov
add
lock
popf
mov
cld
ret
or
rcr
push
push
frstor
movsb
adc
or
inc
mov
cld
pop
add
inc
jne
int3
loope
pop
cmp
pop
das
jo
enterw
loopne
inc
sub
aam
jbe
repz
push
mov
mov
mov
mov
shlb
xchg
xor
dec
addr16
in
mov
or
shlb
out
shll
add
movsb
std
and
ror
dec
push
pop
repnz
mov
cmc
std
daa
jg
call
imull
or
popl
xor
roll
repz
movsb
idivl
mov
cmp
pop
insl
inc
push
sub
xchg
push
cld
popa
addr16
mov
sub
add
mov
push
and
test
pop
xor
dec
out
ss
in
mov
or
sub
in
aaa
mov
cmp
rorl
push
nop
fdivrl
movsl
aad
mov
mov
insb
and
xchg
int3
shrb
mov
je
jbe
popf
dec
adc
push
push
jbe
stc
hlt
lret
xor
movsl
xor
cld
mov
jo
sub
xchg
sbb
scas
pop
nop
sub
cli
subb
cli
inc
andl
ljmp
cs
cmp
gs
sub
adc
shll
jo
or
addr16
mov
adc
add
cmp
jno
cwtl
inc
jbe
into
cwtl
inc
idivl
sti
fcoml
pop
dec
sub
sbb
cmp
jbe,pn
pushf
inc
filds
mov
add
fsubrs
iret
lds
popf
mov
mov
mov
fwait
jge
push
xchg
sti
lcall
pop
loopne
ror
jg
neg
jb
jo
stc
enter
bound
sbb
movsl
fcoml
mov
mov
iret
sbb
ret
sub
das
into
fistpl
hlt
fisttps
decb
leave
xchg
rclb
lret
roll
and
pop
cmp
inc
xchg
fwait
xor
xor
mov
out
rclb
loope
dec
outsb
addr16
push
shlb
xor
shl
fnstsw
xor
or
xor
inc
and
or
stos
clc
les
jno
dec
inc
jae
jl
hlt
sbb
js
adc
inc
outsl
add
iret
inc
mov
jno
enter
push
mov
lds
add
sbb
ljmp
push
sbb
cmp
lds
mov
cwtl
adc
shlb
cmp
ret
xlat
xchg
call
or
add
xlat
push
mov
mov
loopne
pushf
shrl
jge
push
fiaddl
aas
push
push
cli
test
sbb
mov
and
into
push
jb
nop
das
jge
lret
pop
into
xchg
adc
cmp
imul
sbb
and
ds
enter
xchg
sbb
adc
inc
xor
loopne
rorb
mov
inc
pop
jmp
sub
insb
aam
dec
mov
in
mov
adc
roll
fsubrp
adc
jle
imul
mov
imul
xchg
cmp
mov
add
fisubs
icebp
popl
adc
xchg
ja
jns
jecxz
add
sbb
pop
adc
enter
adc
inc
mov
in
pop
iret
ljmp
push
adc
jge
lret
fimuls
xchg
fldl
pop
cmpl
int
stc
lret
inc
cmpsl
inc
call
arpl
pop
mov
int3
sub
divl
lret
hlt
xor
mov
adcb
imul
test
lock
or
or
jle
xchg
nop
shl
add
jne
dec
mov
or
xor
in
test
pop
mov
and
xchg
shll
add
push
xor
mov
mov
jle
xor
shlb
sbb
fwait
xlat
sub
cmp
int
add
sbb
notb
cmpsl
mov
scas
jae
cmp
ret
in
in
push
pop
dec
in
popf
xchg
sbb
jmp
jmp
adc
nop
icebp
fnstenv
out
or
sbb
js
int
cmp
shr
lret
mov
data16
sub
mov
icebp
insl
cld
daa
in
lahf
insb
aaa
cmpsb
imulb
pop
out
or
jge
ret
pop
rcr
or
pusha
push
int
in
mov
sub
repnz
mov
mov
xor
mov
int
dec
xor
pop
push
and
enter
pop
fldt
and
xor
pushf
xchg
imul
push
push
push
mov
xchg
aad
mov
fcmovnb
add
push
scas
dec
inc
into
cmp
cmp
clc
sub
adc
or
jb
mov
insb
insl
imul
push
popf
cmp
loopne
and
test
dec
push
dec
out
pop
pop
mov
cmpsb
xor
mov
cmpsb
cmpsb
push
jge
mov
stos
xor
xchg
push
mov
aas
pop
stc
mov
xchg
add
xchg
or
inc
xchg
dec
movsl
les
dec
leave
or
cltd
push
test
sub
cmp
in
lds
inc
adc
jo
dec
dec
sub
inc
xchg
and
std
jnp
int3
hlt
outsl
outsl
mov
enter
flds
mov
add
xor
and
mov
mov
xor
out
mov
clc
movsb
enter
mov
and
and
ficoms
push
sqrtps
dec
push
inc
sub
orb
add
mov
int
enter
and
sti
pop
xchg
jnp
jg
add
dec
jp
in
mov
fists
jne
push
scas
mov
mov
lock
mov
in
rorb
arpl
test
addr16
xlat
cmp
cmp
mov
clc
imul
cmpsb
add
adc
add
fistpll
pop
test
dec
or
jp
in
add
push
scas
shl
or
es
fwait
pusha
pushf
cmp
test
idivl
push
jo
mov
test
mov
repnz
aam
mov
lcall
lds
mov
jns
repnz
fsubl
cwtl
xor
push
cmp
pop
pop
or
out
gs
cmc
mov
and
and
push
inc
adc
cmp
and
clc
js
popa
push
pusha
pop
ja
xor
jecxz
lcall
fldln2
pop
jns
jle
rol
push
popf
push
jecxz
xlat
sti
lahf
lds
sahf
add
inc
inc
daa
mov
dec
test
arpl
cli
dec
add
sub
clc
sub
mov
lods
je
add
test
sbb
mov
rclb
popfw
arpl
out
das
cmp
lea
jl
pop
fbld
mov
sbb
mov
push
xchg
xchg
add
js
or
mov
ljmp
aas
addr16
dec
sysexit
xor
inc
add
jae
cmpsl
icebp
out
jbe
les
sti
lret
xchg
mov
inc
xchg
mov
push
scas
fldenv
repz
jne
pushf
ss
cmpsb
aas
inc
jbe
adc
xchg
or
push
orb
jo
repnz
xchg
stos
mov
sti
or
mov
jl
clc
and
pop
jmp
xchg
or
arpl
or
adc
pop
loop
xor
repnz
jle
ja
rcrl
fistpl
jae
aaa
xchg
jecxz
cmp
js
cmpsb
clc
mov
sahf
dec
lods
ljmp
jnp
or
fcmovne
adc
hlt
out
cmp
insl
mov
ljmp
mov
idivb
out
js
orl
lods
sbbl
lock
mov
cld
push
push
enter
in
sbb
divb
jo
inc
xchg
jnp
xchg
lahf
lcall
and
shrb
nop
or
jp
sub
sbb
mov
bound
divl
mov
inc
test
adc
jnp
js
mov
mov
jecxz
loope
js
scas
in
js
push
jge
add
dec
mov
inc
xchg
add
dec
outsl
daa
dec
gs
mov
pop
cld
lret
leave
mov
mov
shll
jno
scas
cltd
fsubrs
fs
mov
jae
cmp
ret
loope
xor
jecxz
packuswb
dec
or
mov
scas
xchg
jo
das
pop
adc
mov
lret
orl
inc
mov
pop
pop
lods
mov
fstpt
repz
stc
fidivrl
scas
sbb
and
aad
mov
and
je
and
stc
test
add
pop
xchg
roll
adc
loope
hlt
jo
fiaddl
dec
pop
jmp
push
sbb
cs
lcall
and
stos
pop
xor
lcall
leave
iret
daa
faddl
rcrb
sbb
fistps
mov
lret
sub
sti
sub
xchg
scas
fs
inc
imul
pop
dec
add
shrb
jnp
outsl
add
xor
loope
repz
ljmp
jne
repnz
mov
cmp
mov
dec
cmpsb
dec
lods
lds
jb
mov
sbb
mov
movsl
imul
dec
cmpsl
loopne
xchg
lcall
cltd
push
into
mov
jg
cmp
mov
jecxz
aaa
fimull
add
cltd
add
cmpsb
stos
pop
sahf
or
xor
repnz
jecxz
jnp
mov
pop
dec
push
inc
lcall
insl
pop
ret
sub
dec
xor
les
or
sub
adc
sbb
mov
clc
incl
mov
test
xor
and
lods
or
aaa
or
jle
mov
orl
fnstcw
xchg
push
movsb
scas
in
adc
push
int
ja
mov
mov
repz
sbb
jno
rorl
mov
and
mov
xor
jle
lret
stos
lret
push
mov
xchg
stc
scas
outsb
movsl
push
aaa
test
test
int
inc
mov
movsl
je
cmpsl
jbe
movsb
int3
into
add
orb
ficomps
jne
push
xchg
add
addb
and
add
dec
push
xchg
pop
and
orb
pop
aaa
mov
bound
stos
aaa
and
jge
push
sahf
mov
pop
jb
jbe
leave
call
cmpl
test
inc
mov
push
pop
sub
fcomip
push
pop
cmp
mov
lcall
cmpsl
jnp
adc
push
dec
loop
dec
loop
and
ljmp
adc
test
insb
mov
add
in
jbe
mov
and
xchg
hlt
mov
imul
int3
xchg
sub
cmp
adc
lcall
mov
jae
mov
stos
sub
lahf
mov
test
sar
rolb
rclb
mov
js
and
dec
sub
repz
in
jnp
or
mov
add
adcb
xor
mov
nop
test
dec
jbe
or
mov
sbb
rcrl
and
fimuls
xchg
and
xchg
xor
push
movsl
pushw
imul
fldenv
mov
xchg
rorb
jnp
dec
push
push
jno
add
mov
arpl
pop
loope
mov
inc
jle
data16
fwait
sbbb
pop
cld
pop
pop
pop
nop
jecxz
call
push
mov
xchg
and
jns
cmpsl
and
filds
outsb
cmp
ss
ljmp
rol
int3
pop
mov
popa
stos
aam
or
adc
xor
data16
jmp
nop
repz
inc
mov
ljmp
push
cmp
stos
jo
xchg
xchg
cmp
xlat
pop
or
fidivrl
std
xor
jge,pt
out
outsl
push
jg
mov
cmp
lods
fucom
pop
insb
jp
ds
mov
mov
xor
test
jp
or
jnp
hlt
lret
lret
test
insl
mov
loop
fdiv
xor
and
mov
es
fsubrp
shlb
xor
jg
call
mov
addb
leave
xchg
scas
cmovs
push
lods
mov
inc
mov
xchg
enter
iret
xchg
stc
mov
adc
adc
mov
repnz
push
jb
jp
nop
or
outsl
pusha
mov
inc
mov
out
pop
lret
dec
push
movsl
pop
cmpsb
cwtl
mov
cld
mov
stc
jmp
andb
bts
mov
mov
leave
ret
inc
pop
idiv
das
push
jge
xchg
lods
in
arpl
sub
cmp
gs
fidivs
push
xchg
inc
add
in
jae
out
jns
cmp
jns
xchg
jne
lea
and
bound
or
aam
aad
sbb
lods
and
xor
mov
test
out
pop
pop
inc
in
sarl
add
pop
scas
xor
outsl
mov
push
fisttpl
cmp
addb
es
sti
jmp
push
in
mov
stos
lret
shll
adc
adc
ror
out
jg
std
outsl
subb
adc
fs
rolb
pop
pop
pop
clc
rolb
test
je
mov
mov
dec
xor
adc
add
inc
or
mov
cltd
popa
dec
mov
push
mov
push
jns
ret
xchg
inc
mov
jb
mov
dec
stc
mov
adc
cmpb
into
int3
sub
adcb
or
das
mov
nop
arpl
adc
add
enter
jmp
sub
adc
repz
cli
test
pop
xchg
jno
jmp
xchg
cld
or
bnd
fiaddl
pop
push
dec
cwtl
add
into
xor
push
mov
or
add
mov
jno
or
jl
and
fwait
jg
and
jle
jne
test
inc
incb
xor
outsb
mov
inc
or
jge
adc
in
adcl
push
jbe
cmp
jo
fdivrp
aas
daa
dec
mov
or
push
add
and
sub
sarb
or
or
outsb
jae
imul
xchg
and
sub
mov
pushf
cmp
into
cmpsl
pusha
je
inc
loopne
inc
jns
and
fwait
scas
cwtl
mov
es
mov
xor
jo
jmp
and
xchg
fisttpl
outsb
mov
dec
insl
cld
mov
leave
int
add
fldt
adc
mov
mov
push
cmp
xchg
sahf
inc
inc
jne
pop
lcall
fsubs
dec
or
fcoms
push
pop
push
fldcw
or
mov
int3
dec
repnz
cmp
out
aad
decl
movsl
sbb
jecxz
loop
pushl
or
inc
xchg
cmpsl
loope
aam
jecxz
sbb
xor
xchg
stc
push
shlb
imul
adc
mov
jp
sbb
add
fimuls
adc
dec
dec
sub
fidivs
dec
add
inc
mov
adc
out
pop
sti
xchg
test
inc
mov
push
ds
mulb
dec
movsl
xor
xchg
leave
mov
or
hlt
dec
mov
mov
sbb
xchg
fucomi
xchg
sub
loop
lret
cmp
xor
mov
jb
jnp
adc
cmp
or
mov
scas
icebp
push
ret
imul
sbb
sbb
adc
aaa
aaa
icebp
jl
dec
jge
out
rorb
loop
jae
popf
push
adc
lret
loopne
add
lret
dec
test
cld
sarb
stos
lods
jge
jb
xor
mov
mov
adc
ret
dec
dec
lret
insl
jno
sub
lods
mov
push
xchg
fdivrl
fldcw
ret
and
leave
mov
mov
icebp
pop
not
sbb
dec
xchg
sbb
xor
cltd
mov
out
popf
ret
mov
rolb
xchg
push
mov
pop
push
aad
insl
mov
push
shll
lds
pop
repnz
lcall
sub
and
mov
out
adc
inc
fcompl
push
ret
jecxz
and
mov
cmp
daa
cli
xchg
out
ss
jle
cmp
fiaddl
jl
sub
stos
jp
inc
push
jecxz
sar
sbb
pop
repnz
jp
mov
mov
pushf
and
xlat
in
and
sbb
imul
movsl
mov
cltd
outsb
inc
outsl
cwtl
aas
outsl
nop
dec
mov
mov
imul
loope
xor
add
rcl
sub
mov
xchg
rcr
jl
dec
dec
mov
push
pop
or
dec
pop
sub
dec
leave
sahf
test
flds
jg
push
pop
push
ljmp
dec
mov
pop
push
xchg
ds
movsb
dec
push
out
enter
cmc
and
stc
mov
adc
repnz
adc
push
push
or
movsb
mov
push
repnz
inc
inc
arpl
mov
out
stos
ss
leave
lods
adc
push
push
inc
inc
fisubl
scas
xchg
dec
fcoms
in
lcall
dec
xchg
jb
or
aad
push
sub
pop
sarb
xor
cmp
add
scas
sub
arpl
ja
stos
cmc
adc
dec
mov
pushf
dec
jnp
push
xchg
pop
mov
jle
sahf
rorl
mov
fimuls
shll
es
inc
jno
out
adc
inc
and
cmp
cltd
shl
repz
add
cmpl
inc
xor
sbb
push
and
mov
dec
repz
mov
inc
or
mov
out
pop
mov
std
pop
adc
xor
test
add
adc
fucom
pop
imul
mov
lock
fstpl
add
mov
push
and
mov
lahf
mov
jbe
mov
clc
cmp
inc
and
imul
inc
cmpsl
pop
dec
imul
inc
jg
into
leave
call
das
in
rcr
mov
mov
sbb
movsl
iret
ret
or
push
testl
xchg
movlps
push
pop
xor
popa
and
in
icebp
adc
repz
faddl
ja
pop
ja
cltd
insb
outsl
jne
or
js
push
pop
cmp
out
arpl
call
xchg
sub
xchg
fisubrs
push
mov
xchg
pop
inc
add
shr
mov
pop
insb
mov
aad
hlt
inc
repnz
out
jge
jo
inc
xlat
inc
mov
xchg
sbb
xchg
inc
mov
mov
adc
test
int
rclb
mov
sbb
cltd
mov
push
rorb
int
xor
arpl
ja
outsl
or
int3
cmp
cwtl
in
clc
adc
fcompp
lods
sbb
or
dec
xor
push
and
add
xchg
dec
stc
fstpl
jbe
imul
cs
or
sar
ss
dec
repz
xor
rclb
jo
xor
sub
xor
lds
scas
push
in
mov
sub
loopne
ret
aas
or
aad
jge
jb
inc
mov
mov
out
adc
ja
test
pop
std
dec
jp
push
call
fdiv
ret
sub
inc
sbb
mov
ds
jnp
sub
xlat
push
lock
adc
dec
pushf
dec
xchg
mov
hlt
jmp
add
inc
sub
cli
pushf
adc
adc
faddl
out
mov
fstpt
xor
stos
pushf
jae
and
nopl
dec
xchg
adc
add
ds
xchg
out
loopne
mov
ret
inc
rolb
es
push
jmp
inc
mov
test
jge
mov
mov
js
into
mov
mov
sub
rcrl
inc
pusha
gs
insl
push
mov
mov
les
sub
ds
cmp
dec
xor
mov
out
adc
xchg
jb
xchg
and
jp
imul
inc
ja
fsubl
ljmp
not
sub
adc
sbb
rclb
jns
movsl
loope
mov
loope
enter
mov
fcoml
adc
jecxz
pushf
cld
push
cmc
sahf
pop
pop
jb
inc
or
jle
xchg
fiadds
mov
int3
cmc
jne
leave
jnp
in
out
in
inc
arpl
movsl
inc
or
jl
inc
push
adc
loope
fwait
push
sbb
imul
out
dec
icebp
add
add
test
cmp
stos
sbb
sub
sub
enter
repz
mov
and
stos
pop
faddl
out
pop
jnp
mov
imul
mov
les
test
adc
icebp
xor
addl
sub
mov
cmc
inc
fmull
inc
xor
aas
adc
inc
outsb
inc
faddl
mov
or
add
out
fninit
xchg
lahf
pop
shrb
shr
test
test
or
test
lcall
jmp
and
insl
jb
and
add
out
insb
inc
adc
mov
pop
jae
daa
movsb
xchg
mov
sub
fidivrl
sbb
fildl
out
add
xchg
cmp
insb
pop
cltd
mov
fildl
addb
enter
cmp
fadds
xchg
lods
mov
fiaddl
cli
es
or
pop
leave
bound
mov
fdiv
cmp
icebp
xor
lea
fstp
push
pop
aas
rep
std
loope
xchg
push
sbb
lret
inc
push
jmp
into
xchg
out
push
xchg
inc
inc
inc
gs
orb
xchg
movsb
mov
out
jnp
cmp
lds
push
jae
jg
adc
fisubrs
daa
push
or
test
add
fsubs
pop
dec
mov
ret
push
mov
or
orl
popf
dec
jb
mov
jg
imul
call
pop
and
repnz
sub
pop
fidivrs
xor
std
cmp
in
call
mov
std
addr16
adc
int
inc
cmpsl
pop
lcall
stos
dec
cmp
cmp
arpl
lret
andl
ja
lods
push
into
add
pop
pop
add
push
je
subl
pushf
xchg
fisttpl
cmpb
out
cmp
sub
rcll
push
push
xchg
fidivrl
jle
andb
push
xor
cmp
sbbl
popf
mov
sub
ja
pop
cld
daa
add
xchg
pusha
cltd
xorl
pop
sti
mov
jnp
mov
inc
iret
jmp
cmp
andb
cmp
in
cmp
icebp
push
les
mov
add
das
fsubr
push
dec
sbb
sbb
imulb
andb
jne
xor
add
and
sbb
decb
aaa
mov
lahf
fcmovbe
rcrb
cmp
mov
lret
cmp
mov
sub
repnz
imul
mov
leave
popa
cmp
mov
xchg
jmp
mov
xchg
pop
sbb
lods
imul
mov
cmp
imul
sbb
addl
xchg
jmp
rcr
jno
test
divl
fcmovnb
cmp
out
jmp
aam
push
add
adc
stos
push
pop
push
mov
and
fs
mov
mov
xchg
or
inc
jno
push
movsb
jns
in
call
mov
shlb
aaa
cmp
xchg
int
and
push
mov
or
rcrb
mov
mov
push
xor
cmp
les
leave
mov
in
clc
mov
mov
adc
dec
repz
mov
adc
es
cli
bound
xchg
inc
mov
into
adc
inc
insb
inc
sbbb
in
vmovaps
fdivs
xchg
push
lea
data16
mov
mov
lods
adc
std
push
inc
adc
cmpsl
mov
repnz
push
jle
imul
mov
rclb
fnstenv
and
sub
fsubrl
fildl
rcrl
and
in
mov
or
les
pop
adc
inc
inc
xor
shll
sti
sbbb
sbb
popf
jne
out
imull
pop
gs
test
aam
imul
outsl
or
insl
fisubs
popf
ret
dec
pop
and
shr
push
add
and
jmp
inc
scas
loopne
cmp
mov
aad
movsb
dec
and
ja
jp
or
or
mov
lock
pop
push
sbb
cld
arpl
lahf
pop
jnp
xchg
daa
push
mov
sub
lds
ljmp
cmc
in
cmp
pop
mov
sarb
lret
std
shlb
andb
lods
icebp
jne
stc
or
insb
dec
xchg
cmpsl
cmp
xor
enter
dec
adc
inc
xchg
inc
ljmp
pop
or
pop
cld
stc
mov
dec
pop
jecxz
loope
lcall
loop
mov
mov
inc
jne
mov
adc
inc
pusha
jo
sbbl
lret
jo
xchg
stc
lret
popf
cmp
cli
mov
jge
jge
mov
and
pop
inc
ljmp
jbe
pop
daa
popf
out
aas
fwait
subb
push
or
pop
fcmovbe
lcall
mov
inc
mov
scas
mov
gs
cs
xor
xchg
sub
aam
test
cmp
outsl
lods
mov
jmp
cmp
pusha
mov
aam
mov
mov
test
jnp
dec
lcall
jp
pop
in
lret
mov
mov
pop
divl
sti
push
fisubrl
cmp
pop
xlat
ljmp
xchg
inc
mov
sbb
xor
sahf
push
mov
jge,pn
jmp
ret
cmc
or
push
add
test
insl
outsl
mov
mov
sbb
daa
negl
xor
sub
adc
data16
or
sbb
mov
ror
sbb
cmpsb
pop
xor
loopne
cmp
sub
mov
in
inc
mov
push
pop
outsb
cmp
mov
xchg
imul
lcall
mov
lods
cmp
mov
inc
into
loopne
pop
pop
aas
or
jle
xchg
sti
js
shl
stos
or
adc
imul
lcall
and
sbb
insb
repnz
pop
push
adc
adc
sub
out
pop
mov
lods
xor
sbb
test
test
icebp
xchg
push
fdivs
pop
or
push
sbb
add
faddl
sbb
cmc
jle
sbb
sbb
rcrl
insl
fwait
shll
fdivrl
mov
loop
mov
ja
imul
mov
je
pop
cld
pop
mov
mov
inc
mov
dec
daa
and
insb
punpcklbw
ja
mov
mov
test
jge
xchg
and
mov
mov
lcall
ret
and
mov
sbb
jge
loope
pop
push
scas
scas
loop
scas
jecxz
ffreep
aam
loop
jecxz
imulb
stc
mov
pop
push
xchg
xor
adc
xor
push
and
inc
xor
lcall
inc
xlat
fcmovb
mov
daa
stc
sub
movsb
out
mov
and
xlat
sub
cmp
out
lods
shrb
arpl
aad
push
sbb
shll
in
add
sbb
loopne
xchg
adc
stc
stos
test
mov
pusha
add
xchg
mov
and
xchg
test
aam
mov
js
cli
cmp
fcoms
sahf
into
cmp
lcall
popl
pushf
and
lds
xor
sub
mov
aaa
jno
daa
int
or
icebp
dec
movsl
int
add
jae
push
jge
dec
das
roll
dec
mov
mov
push
inc
imull
dec
add
popa
and
fsubs
add
adc
xor
mov
xor
push
or
leave
adc
cmp
jge
fs
and
or
xchg
mov
pop
dec
hlt
jmp
mov
rorb
cld
or
fimull
fs
das
xor
lds
pop
test
fisttpl
popa
cmp
pop
push
int3
negl
xchg
jns
shlb
ret
popa
mov
cmp
inc
ror
jbe
mov
pop
and
mov
push
fidivrl
push
mov
in
push
out
jg
jbe
dec
fisubrs
aad
je
push
ret
stos
sbb
sub
jb
aam
divl
aas
xor
into
push
addr16
dec
sahf
insb
lds
das
pop
into
jle
add
sti
les
mov
cs
mov
mov
das
jnp
movb
mov
sbb
jbe
sub
dec
cmp
cltd
mov
movsl
lcall
call
test
test
fs
aam
jbe
cld
test
add
daa
dec
dec
or
cmp
inc
pop
dec
or
jne
push
sub
jle
gs
nop
incl
inc
and
jns
and
jecxz
or
fsubl
xchg
xchg
mov
loope
xchg
and
push
cmp
sbb
add
lret
cmp
in
inc
scas
jg
push
cmc
cmp
xchg
inc
pop
repz
mov
and
js
inc
movsl
insl
or
mov
xor
movsl
pop
mov
xor
bsr
xlat
adc
xor
mov
mov
cmp
mov
cmp
ret
xorl
xchg
aad
add
or
repz
and
mov
cmp
mov
mov
push
adc
mov
or
or
int3
int
fsts
and
lret
or
clc
mov
into
xchg
adc
lds
mov
inc
mov
mov
dec
icebp
and
testl
cld
xchg
add
mov
rclb
push
cmp
add
pusha
mov
test
mov
cmp
lods
xchg
pusha
sbb
dec
in
xchg
notb
test
add
mov
push
mov
jmp
and
and
mov
xor
push
popf
mov
sub
pop
push
xor
mov
ljmp
xchg
cmpsl
std
popf
pop
icebp
pop
cld
cmp
sbb
inc
add
enter
rol
jbe
and
pop
ljmp
movsb
adc
add
out
add
aaa
xchg
or
inc
mov
add
pop
inc
xlat
pop
and
aam
mov
aam
fadd
mov
lcall
mov
mov
ficompl
mov
xchg
pop
repnz
xchg
dec
imul
mov
inc
inc
pop
scas
add
sarl
jo
arpl
decl
or
and
mov
out
xchg
jae
dec
dec
sub
sub
bound
cmp
xchg
xor
xor
lea
rcrb
les
sbb
out
cmp
and
pop
cmp
jb
or
hlt
ffreep
sbb
stos
and
insb
adc
movsb
pusha
jmp
shll
hlt
adc
in
and
cmpsb
insl
lea
fnstsw
inc
das
adc
jnp
stos
shrb
imul
add
lds
sbb
xchg
jl
sbb
pop
push
out
push
cli
in
xchg
rcrl
addl
jb
and
xor
lcall
shlb
stos
xchg
mov
pop
call
std
mov
pop
movl
dec
data16
dec
dec
gs
std
fcomps
call
cld
test
loopne
or
mov
mov
pop
mov
xor
bound
leave
sbb
in
mov
sub
int
mov
xchg
adc
cwtl
cmp
aad
faddl
loop
fdiv
mov
mov
stos
aas
xor
in
sbb
lods
imul
adc
adcl
mov
test
js
mov
add
lods
inc
xor
gs
xor
bswap
mov
cltd
mov
mov
adc
cltd
scas
lds
xor
addb
out
push
repnz
jo
adc
add
jle
outsb
adc
pushf
fisttps
std
jo
fiadds
mov
dec
add
mov
lods
scas
sbbb
int3
inc
sahf
cmp
ja
xchg
mov
xchg
cmpsb
mov
test
outsl
enter
popf
jnp
ja
cli
lret
aad
dec
movsl
xor
lret
sub
and
setnp
jns
pop
stos
dec
mov
loop
pop
pop
aas
jae
and
pop
mov
lret
xlat
js
pop
test
cmp
ljmp
std
outsb
cmp
stos
or
popf
or
jg
movsl
inc
add
adc
inc
dec
popa
xchg
dec
jnp
xor
mov
inc
mov
lds
rclb
xchg
push
imul
inc
scas
ja
add
pop
ja
stos
outsb
popf
out
aaa
jb
push
xor
popf
cld
or
xor
fldenv
ljmp
cli
dec
cltd
shl
and
inc
in
mov
stos
lgs
mov
dec
inc
xor
push
rorb
mov
mov
cwtl
pop
cltd
cld
fistpl
incb
call
inc
idivb
daa
cmp
push
cmp
xchg
je
cmc
push
aam
cmpsb
mov
arpl
mov
cmpsl
sub
dec
test
popf
int3
mov
mov
jge
inc
fldt
xchg
push
arpl
jns
test
pushf
pop
addr16
int3
mov
cmp
push
mov
and
lods
mov
jp
and
sub
jnp
int
add
xor
mov
stc
xchg
or
fmul
or
aas
pop
cs
xchg
sbb
mov
scas
jns
sti
sub
add
pop
pop
enter
or
add
inc
leave
xchg
mov
ljmp
lds
mov
lret
push
sub
push
bound
push
imulb
imul
and
jnp
lea
xchg
or
dec
dec
shlb
ja
andb
and
ja
add
add
push
inc
std
test
pusha
jno
lods
insb
fstps
sub
das
cmp
xor
cmp
ja
les
mov
int
xchg
rcrl
lds
adc
xor
xor
push
xlat
and
push
mov
dec
mov
aam
mov
cs
mov
lods
xor
jnp
pop
jg
ds
jnp
sbb
jmp
push
sbb
inc
dec
outsl
jbe
in
lea
test
mov
and
and
repnz
xchg
mov
stc
mov
lea
inc
xchg
fs
mov
lock
cmp
xor
ljmp
test
dec
push
int
xor
fsts
jmp
mov
mov
nop
dec
xlat
push
test
mov
into
cmp
pop
add
mov
push
fnstsw
in
push
jecxz
cs
sub
mov
ss
ret
in
jae
inc
pop
jae
popa
in
pop
hlt
ss
xchg
or
mov
inc
shrl
test
sub
ficomps
iret
rclb
add
aam
fdivl
lret
push
das
ret
fistl
or
icebp
insb
push
jg
imulb
jg
scas
shrb
das
push
dec
jns
ficoms
sub
popa
dec
hlt
mov
push
jo
icebp
pushf
inc
xchg
adc
mov
cmc
mov
cmp
repnz
shlb
mov
test
mov
fdivrl
fldcw
pop
testl
je
lahf
cmpsb
pop
dec
rolb
inc
mov
lds
into
sbb
mov
cmc
or
ds
repnz
mov
repz
dec
int
test
cs
ret
decl
mov
mov
test
lea
test
aaa
dec
xrelease
sub
mov
mov
loope
test
ret
sbb
pop
dec
nop
out
imul
fisubrl
push
loope
pop
mov
jo
sti
imul
fs
sbb
mov
and
adc
negl
repnz
xchg
fsubrs
mov
repz
insl
jmp
or
dec
jae
js
sahf
mov
mov
rorl
jbe
arpl
icebp
repz
mov
and
fidivrl
addr16
shrb
xlat
xchg
idivl
cmpsl
fs
and
mov
mov
mov
xor
cmp
pushf
jl
and
popa
sbb
xchg
xchg
mul
pop
xorl
pop
xorl
outsb
adc
insb
test
xchg
outsb
data16
jecxz
ret
scas
or
shrl
cmpsb
clc
xchg
sub
xchg
loope
adc
jb
out
aam
fcmovb
iret
inc
mov
xor
xor
stos
mov
xor
icebp
xor
jb
jge
shll
js
cmpb
xor
push
movsb
pop
imull
jne
js
pushf
jae
xor
test
cmp
mov
dec
pusha
jns
xchg
sub
daa
fisubrs
jbe
inc
out
cmp
pop
or
mov
add
adc
sbb
mov
adc
repnz
mov
mov
pop
cmp
xorps
xchg
popa
pop
fnsave
jg
inc
inc
push
mov
or
jmp
loope
dec
sbb
cld
adc
xlat
mov
iret
mov
pop
cli
mov
test
movsl
xchg
in
lahf
outsb
ret
aas
fsts
aad
addr16
ja
xchg
out
xor
add
arpl
xchg
jmp
cs
fst
jmp
xchg
add
insb
jl
loopne
pop
cmp
or
popf
std
ret
repz
mov
cmpsb
cmp
fsubrs
mov
loope
mov
aaa
es
outsl
int3
outsb
call
movsb
and
inc
sbb
mov
aaa
sub
mov
rcrl
lds
add
imul
adc
dec
pop
jo
fdivl
or
lcall
mov
loop
jl
xor
out
add
clc
dec
aaa
int3
inc
and
or
mov
push
push
adc
cwtl
out
push
aas
and
rcl
cmc
shlb
mov
jecxz
mov
pusha
sbb
out
dec
mov
dec
in
or
popa
imulb
push
or
imul
inc
ja,pt
hlt
nop
jns
in
cmp
mov
imul
hlt
pop
xchg
mov
push
xor
les
sub
out
or
test
cmp
orl
jp
fsts
movsb
pop
mov
clc
pop
jp
jns
pop
mov
dec
cmpsb
leave
adc
push
rorl
iret
std
lea
adc
cld
pop
outsl
or
sbb
cs
push
out
in
sbb
sub
sbb
sub
push
rcl
xor
mov
fsubp
dec
insl
dec
gs
or
movb
lahf
push
je
int3
repz
sbb
jbe
sub
scas
test
orb
popf
mov
imul
xchg
fnstenv
dec
fsts
iret
leave
adc
mov
pop
and
sti
ss
fidivrl
gs
inc
cmp
sbb
xchg
xchg
push
lret
aas
repnz
movsb
push
fldcw
mov
jle
and
ljmp
repnz
repnz
lods
lahf
cmp
adc
sbb
xor
pop
lea
pusha
dec
dec
fcmovu
call
mov
sub
push
pop
dec
lcall
repnz
out
jb
or
dec
pusha
pop
pop
ror
leave
in
fs
ret
and
jb
lahf
in
xchg
loope
das
jmp
add
adc
cmp
dec
pshufw
push
xor
dec
mov
in
scas
ret
popa
addr16
movsl
in
mov
cmpsl
cmpsb
add
pop
in
imul
rorb
xchg
sub
xor
jno
sbb
aam
ja
and
jno
mov
dec
cwtd
addr16
sbb
cmpsb
or
mov
adc
cmpsl
sub
lcall
stos
mov
adc
inc
mov
lds
push
push
insl
mov
xor
jmp
cltd
ss
jecxz
vcvtps2dq
stos
fwait
jge
xchg
lea
test
add
xchg
sbb
mov
mov
outsb
ss
xorl
jmp
addr16
je
fstpl
sub
mov
sub
incl
mov
into
imul
orl
jns
push
rcrb
xchg
mov
jmp
sbb
mov
mov
push
sub
dec
bound
xor
in
lods
sbb
xlat
mov
aam
sbb
paddusw
insb
addr16
les
iret
ljmp
int3
sub
mov
loope
xchg
pop
fwait
and
out
stos
daa
dec
mov
cs
dec
mov
xchg
cmp
add
xor
or
mov
mov
pop
push
inc
add
dec
adc
mov
stos
mov
test
cmpsl
sub
loope
and
test
pop
arpl
pop
push
mov
or
mov
into
mov
cltd
rcrl
cmpsb
xchg
adc
mov
mov
sbb
mov
push
mov
push
bound
push
insb
sub
ret
test
cltd
sbb
push
dec
test
push
push
jmp
into
xor
adc
xor
ret
add
hlt
push
js
addr16
sub
jmp
inc
cmp
jle
mov
das
ja
mov
daa
or
jp
loopne
xchg
notb
iret
int3
fnstcw
xchg
jnp
out
adc
push
mov
push
xor
add
test
push
pop
mov
std
xor
fmull
mov
out
lods
mov
xchg
cs
or
movsl
cli
xor
cld
jne
push
shld
test
inc
out
insl
push
dec
push
mov
inc
cwtl
in
mov
loope
dec
push
xchg
adc
mov
xchg
xchg
pop
xlat
mov
adc
es
xchg
test
fisubs
cmp
aam
jle
insb
sub
fstl
adc
repnz
pop
sbb
mov
jge
add
xor
test
aas
and
cmp
in
loope
cmp
push
dec
lcall
ss
inc
mov
jno
cwtl
idivl
xchg
lods
hlt
jno
int
mov
adc
and
jg
adc
les
sub
cld
sti
dec
pop
icebp
adc
pop
pop
pushf
ja
jl
fistl
orb
je
test
mov
cmp
imul
aaa
rolb
add
jns
mov
or
jle
jne
fucomi
adc
aaa
sub
sbb
xor
ror
fnsave
push
int
inc
and
jnp
pusha
xchg
mov
jle
mov
fsubs
test
push
daa
cwtl
jne
fnclex
xchg
inc
add
rorl
aas
shl
push
jb
xchg
xor
decl
inc
lret
hlt
les
inc
cmp
pop
cmp
push
aaa
pop
xchg
nop
mov
dec
xchg
hlt
pushf
sub
or
neg
jp
in
test
scas
or
cltd
jns
iret
repnz
mov
mov
imulb
jecxz
leave
cmc
popa
ljmp
add
push
sbb
sbb
je
jg
xor
arpl
push
outsb
movsb
std
dec
pop
inc
jno
jae
jp
push
cmp
xchg
sbb
out
imul
scas
dec
pop
rcll
js
jl
movsb
dec
pop
shll
popa
inc
and
sub
aas
inc
ss
dec
iret
test
movsl
jbe
mov
xor
pop
lock
inc
ficoms
lcall
nop
adc
lods
cmp
inc
es
add
mov
mov
pop
scas
out
mov
jno
test
dec
into
rcr
dec
pop
test
sahf
mov
lret
out
fwait
unpcklps
lret
dec
sub
cmpsb
mov
repnz
dec
dec
dec
jmp
adc
or
adc
inc
mov
cwtl
test
into
pop
mov
xor
pop
outsl
or
inc
je
or
adc
jae
push
xlat
mov
lods
adc
push
stos
cmp
and
scas
push
xchg
aam
sbb
mov
jle
leave
xor
cmpsb
inc
std
dec
mov
sbb
sbbb
mov
jb
insl
inc
aas
test
mov
xorl
int
mov
sbb
shll
sub
cmp
push
xor
push
cld
test
and
mov
xchg
cltd
imull
xchg
fs
dec
jae
std
mov
mov
mov
fs
mov
scas
add
sub
pop
jecxz
in
fstp
xchg
mov
or
xchg
or
andl
mov
inc
pop
daa
adc
cmc
rolb
fucomi
cwtl
je
mov
aas
inc
clc
aam
movsl
jnp
aad
or
cli
test
push
repz
xchg
sahf
cmp
test
jle
pop
stc
sbb
clc
bound
xchg
push
nop
int3
in
add
sbb
or
pop
pop
cwtl
xchg
call
hlt
pop
clc
sub
rcrb
or
cwtl
or
sub
call
fnstsw
test
daa
imul
orl
fimuls
mov
jge
dec
inc
and
pusha
aam
call
push
cmp
mov
in
subl
push
mov
loopne
or
xor
inc
imulb
inc
scas
lea
xor
std
sbb
mov
mov
mov
inc
push
stc
je
adc
pop
xorb
dec
jl
cmc
and
and
lret
add
loope
test
xor
loop
ss
bnd
loop
cmp
xor
cmpsb
add
outsb
rcr
inc
xchg
in
imul
sbb
fisubrl
xor
xor
and
jb
jb
icebp
adc
xor
aam
lret
push
mov
jle
jmp
fwait
and
repz
in
mov
mov
add
and
in
loopne
cmp
cmpsb
mov
test
dec
lds
fisubs
cmp
test
rcrl
in
repnz
pop
sub
test
dec
insl
jecxz
push
adc
sbb
push
mov
loop
push
out
or
mov
mov
sbb
test
lea
fildll
mov
xchg
fdivl
lahf
mov
std
arpl
fiadds
pop
add
adc
mov
icebp
movsl
addr16
xor
popa
sub
popf
repnz
push
sbb
lods
cld
addr16
pop
ds
xchg
and
in
push
sbb
mov
inc
cmp
adc
inc
ret
roll
addb
push
dec
dec
cmpsb
insl
cmp
rclb
bound
and
jmp
sub
out
inc
pushl
cmp
dec
sbb
das
push
lret
xchg
fiadds
jbe
cwtl
mov
repnz
cmp
push
ja
cmpsb
mov
add
je
fdivl
scas
out
bound
sahf
and
mov
stos
xor
fwait
and
pushf
clc
xchg
adc
ljmp
push
lods
lahf
xor
cmpsl
jbe
push
jb
pop
rclb
mov
jns
add
ljmp
mov
xchg
mov
pop
dec
mov
jp
addr16
dec
mov
loope
cmp
sub
addl
icebp
mov
mov
and
cmp
add
sbb
add
pop
dec
push
test
dec
add
nop
mov
inc
lods
insl
fidivrl
ja
or
add
ret
lea
scas
je
and
loop
xchg
clc
add
pop
test
xor
shlb
out
lock
mov
mov
lods
sub
call
pop
inc
sbb
dec
scas
std
xchg
stos
js
push
xchg
inc
nop
mov
daa
fucomi
xor
out
jecxz
bound
insb
hlt
and
mov
mov
or
stos
sub
lods
ret
push
jge
jns
jo
cwtl
mov
mov
xor
adc
add
rcrl
shl
sub
inc
sbb
add
push
inc
aad
es
lds
xchg
inc
cli
test
jnp
cmpsb
cmp
mov
stos
es
scas
and
and
fdivl
xchg
jmp
push
std
sahf
into
daa
in
pop
and
jmp
jnp
jae
lods
jp
mov
push
xchg
mov
pop
fsts
mov
adc
mov
movsb
dec
jp
out
into
sub
sbb
dec
fdivrl
fmul
decl
fsubl
mov
je
decl
icebp
fs
rorl
cmp
pop
sbb
ja
or
and
dec
pop
push
enter
sub
jnp
xor
fadd
je
mov
fstpt
mov
mov
pop
int3
notl
sub
data16
jecxz
in
mov
cmp
adc
pop
pop
xchg
add
inc
hlt
dec
pop
sub
andb
sbb
cld
pop
sbb
std
popa
fcmovnb
sbb
push
decl
ljmp
out
ficoms
sbb
push
sbb
mov
push
push
cmp
dec
imul
cmp
inc
inc
and
cmpsl
repnz
push
lea
ret
rcl
sub
aad
push
fsubrs
sbb
mov
out
jne
jnp
test
xlat
ret
sti
rol
scas
inc
arpl
push
dec
scas
sbb
lahf
adc
in
shlb
iret
callw
lahf
cmpsl
pop
inc
push
pop
dec
imul
ljmp
sbb
mov
mov
adc
fsts
push
cmp
mov
mov
xchg
jecxz
sbb
mov
outsb
pop
push
ss
lds
in
add
int
mov
rcrl
cmc
loopne
dec
mov
xchg
cwtl
fstp
mov
jno
bound
loopne
std
inc
mov
fs
xchg
fsubrl
int3
iret
out
inc
lock
cmp
and
cli
and
and
xlat
lea
inc
subl
test
or
or
adc
stos
xchg
leave
stc
ds
lahf
js
mov
pop
mov
js
mov
mov
aam
xor
jmp
ret
test
test
adc
mov
xchg
push
push
mov
rcrl
movsl
das
adc
scas
ss
and
inc
mov
rcrl
dec
out
fnsave
or
nopl
add
fstl
aas
cmpsl
or
cmp
pop
arpl
pusha
ret
mov
loopne
addl
adc
jno
loopne
nop
mov
ficomps
js
cld
cmpsb
rcll
insl
mov
enter
dec
or
push
repnz
sbb
add
mov
aad
xchg
pushf
fs
inc
push
fdivrl
pushf
inc
lahf
add
in
add
hlt
stos
movsb
test
push
xchg
cmp
sbb
and
cmpsl
cmp
loopne
push
cmp
sub
mov
nop
jae
in
pop
dec
jnp
xor
or
cmpsl
mov
sbb
ret
xchg
mov
xchg
out
arpl
xor
out
jg
std
pop
dec
sub
jmp
or
inc
pop
cmp
mov
add
pushf
mov
dec
sahf
push
push
jp
jbe
out
or
xchg
dec
mov
xchg
insb
mov
in
ret
call
mov
push
aaa
aaa
xchg
pop
push
mov
insl
xchg
or
lret
sbb
cmc
shl
jmp
push
adc
jl
mov
sti
pop
pop
stos
lret
mov
inc
adc
push
mov
sahf
cmpsb
ljmp
xchg
out
sbb
sar
push
int
lock
sarl
mov
iret
inc
sub
xor
cmp
mov
mov
push
lea
adc
mov
sbb
popf
inc
dec
mov
cli
popa
jg
jg
or
addl
cmpsl
dec
push
in
lods
fsubrs
nop
popa
inc
fmull
push
pop
call
daa
adc
je
insl
mov
aaa
push
incb
xlat
or
sarb
std
lcall
sahf
mov
push
lahf
push
xchg
mov
dec
sub
dec
int3
cmp
pop
das
roll
es
cmpl
imul
push
arpl
xchg
in
iret
or
cmpsb
xor
cmp
popa
sarl
cmp
daa
ds
push
andb
aam
popf
dec
sbb
mov
fiadds
jae
cmp
pop
sbbb
cli
or
inc
sbb
add
and
cmp
and
insb
bound
inc
std
fadd
add
out
add
add
mov
faddl
add
fst
shrl
je
xchg
fsubs
fistpl
divb
sbb
push
mov
inc
cmpsb
xchg
mov
pushf
popa
mov
repz
sbb
ljmp
xor
mov
hlt
xchg
call
and
ljmp
leave
sar
jg
add
mov
les
inc
fs
insb
mov
jne,pn
mov
das
xchg
stos
sbb
insl
test
mov
cmp
leave
fs
test
pop
lds
lahf
adc
stos
lods
push
push
push
mov
add
dec
pop
insb
push
push
pop
lods
jno
in
int
into
leave
hlt
imul
mov
add
pop
imul
sarl
out
mov
hlt
adc
mov
iret
sub
stc
sbb
inc
add
mov
adcl
lods
pop
jb
lcall
test
xor
or
rol
fsubrs
adc
and
pop
push
icebp
xor
and
cmp
inc
rolb
dec
icebp
mov
jno
filds
fisubl
lods
jg
mov
and
push
fdivs
xchg
adc
and
inc
lock
iret
xchg
mov
jp
adc
jo
inc
jns
pop
add
fwait
pop
enter
xor
icebp
adc
adc
push
jns
inc
add
mov
icebp
addr16
ja
test
andl
call
mov
aam
rcl
mov
or
push
fisubrl
js
pop
lcall
fwait
ljmp
jae
jb
cmp
sti
pop
call
pop
inc
cmc
in
idivb
fwait
pop
ljmp
sti
push
add
pop
push
or
fdivp
push
inc
xchg
testb
mov
push
mov
or
xchg
pop
std
jo
fistpll
inc
xor
cltd
shll
jno
mov
rolb
xchg
ss
dec
mov
adc
insl
pop
sbbb
scas
ja
pop
outsl
adc
stc
inc
cltd
xor
rorl
xor
xor
cmc
pop
jle
stos
sub
sbb
rcll
std
adc
pop
or
adc
and
nop
scas
arpl
pop
cltd
pop
das
gs
lock
mov
inc
pop
xchg
test
into
pop
jecxz
das
out
fistpl
xchg
jg
and
jbe
mov
ror
test
cmp
add
out
outsb
push
in
xchg
add
jp
push
insl
or
sub
push
mov
out
ret
sti
inc
add
xchg
fstpl
inc
mov
rol
lods
cmp
xchg
xor
fwait
scas
sti
outsl
push
lock
or
mov
pop
insb
iret
cmp
fldenv
mov
lret
jno
adc
cli
xor
lock
fidivrs
fnstcw
aad
icebp
mov
fsubp
stos
mov
add
jns
scas
jae
mov
repz
pop
leave
add
xchg
sub
push
push
test
dec
xlat
xorb
sub
movsb
ja
mov
xor
sti
push
inc
nop
jmp
jnp
negl
sbb
scas
imul
dec
bound
push
pop
sbb
cwtl
idivb
xchg
mov
push
mov
cmp
xchg
xor
loope
jnp
rdtsc
mov
mov
inc
and
cmpl
loopne
call
inc
insb
movlps
inc
mull
cmp
aam
xor
add
mov
dec
xchg
mov
adc
lahf
repnz
xorl
je
inc
scas
mov
cld
sub
pop
in
int
cmpsb
pop
adc
xor
mov
inc
repz
push
jns
test
and
int
aad
cmpsl
out
push
or
mov
mov
cmpsl
shrl
pusha
sarl
movsb
mov
jns
add
fcomi
scas
add
sub
jnp
push
sbbl
mov
movsb
mov
test
sbb
sub
out
fildll
inc
jg
imul
jnp
inc
fbld
dec
imul
jo
xchg
lret
fidivs
push
mov
xor
adc
jns
xlat
lods
std
push
and
cli
lods
xor
ret
mov
jno
out
ret
push
sub
pop
aaa
xchg
pop
testl
mov
int
mov
test
insl
xchg
push
leave
mov
cmp
jle
fldcw
pop
aam
jo
sbb
add
xchg
cmpsl
pushl
addr16
dec
pop
push
push
mov
jp
dec
jl
push
repz
xchg
outsb
cmpsl
inc
add
nop
shrb
ljmp
sub
pop
xchg
cmp
jo
or
insb
in
xor
imul
mov
repz
out
inc
les
ja
push
sbbb
jo
sub
nop
js
sbb
jmp
jle
fs
sbb
addl
jecxz
ds
push
push
jmp
xor
mov
shr
mov
push
inc
or
dec
gs
dec
push
push
pop
in
inc
flds
cmp
push
xor
adc
and
sbb
test
xor
outsl
popa
add
push
sbb
mov
ds
pop
fwait
and
pop
sbb
mov
xchg
push
aas
mov
sbb
xchg
imul
scas
push
dec
mov
call
in
cli
add
out
sub
sbb
insb
mov
mov
mov
pusha
pop
shr
ret
arpl
pop
or
addr16
fnstcw
xchg
mov
scas
clc
in
bnd
pop
and
sub
adc
jne
or
stos
adc
push
shll
roll
and
scas
xor
in
or
add
fiaddl
scas
dec
sbb
cmpsb
push
dec
or
lods
loopne
fs
pushf
or
pop
loop
mov
test
mov
jle
inc
mov
adc
lahf
push
adc
ja
dec
jg
push
outsb
sti
xorb
lds
jmp
repz
jge
push
mov
ret
lods
dec
into
adc
dec
inc
adc
xor
lods
push
lret
mov
ljmp
jne
loop
jmp
data16
jmp
shlb
jnp
sub
and
jmp
sahf
out
add
pop
popf
or
xor
jge
add
lds
pop
jmp
xor
cld
nop
jns
nop
add
sbb
daa
push
cmp
cmpsb
jne
ret
adc
add
mov
pop
mov
imul
or
movsb
scas
adc
xlat
mov
sub
leave
mov
sbb
test
data16
js
popa
xchg
loope
lods
xchg
mov
cs
jecxz
jae
or
sub
scas
lea
dec
or
sahf
push
dec
sbbb
stc
push
lock
sbb
mov
adc
mov
mov
xor
sub
push
cmp
ss
fimuls
or
inc
push
and
inc
stos
dec
gs
lahf
mov
push
xchg
roll
les
daa
pusha
and
or
xor
adc
mov
sbb
push
lock
xor
pushf
mov
mov
call
sub
test
fmuls
mov
mov
out
or
lds
sbb
sbbl
rorl
test
jbe
cmp
xchg
jl
je
outsb
pop
daa
xchg
idivb
dec
mov
sbb
pushf
aaa
xchg
push
mov
mov
fisttpl
scas
jle
fisttpl
pop
std
mov
sub
test
dec
shll
out
outsb
pop
push
xchg
fistpl
sub
je
and
xor
daa
popa
sub
or
rcrb
mov
jg
sub
ja
jge
adc
ss
push
pushw
fistpl
loop
xchg
int3
stc
push
mov
jnp
sbb
nop
fists
inc
fdivs
xor
nop
mov
pop
inc
xchg
lret
or
and
and
dec
imul
cmp
push
adc
sbb
mov
mov
es
decl
hlt
cwtl
mul
ss
ret
xor
pushf
xor
xchg
stos
xchg
cmp
mov
lret
dec
or
insb
jge
and
loope
es
or
loop
les
test
dec
lea
int
stos
pop
inc
pop
xor
sbb
nop
push
lcall
in
insl
cmp
enter
shlb
mov
mov
mov
xor
xor
dec
out
inc
adcb
push
movsl
pop
push
inc
push
movsl
fs
int3
repnz
cmp
jae
outsl
je
ljmp
jp
or
jnp
in
pop
incb
jmp
out
orb
test
jge
fwait
cmpsb
xchg
mov
adc
push
out
popf
xlat
cmc
sti
arpl
idivb
movsb
sahf
stc
cmp
xor
hlt
and
mov
sarb
add
inc
mov
mov
mov
idivl
add
outsl
pop
xchg
or
sahf
mov
cmp
push
and
mov
mov
nop
jp
xor
enter
mov
mov
jae
jne
sub
cld
mov
mov
sub
dec
lret
or
shrb
push
mov
add
cmpsb
loop
and
out
sbb
pop
cmp
add
xchg
xor
jl
rcll
outsl
outsb
pusha
popf
mov
cmp
call
mov
dec
add
int
rcr
in
and
daa
fwait
cmp
mov
push
decb
scas
sbb
test
pop
jecxz
pushl
pop
jae
sti
mov
imul
cmp
mov
stos
add
sbb
lahf
mov
aas
in
aas
xchg
lret
dec
fcompl
jecxz
mov
jae
ljmp
hlt
call
push
test
sbbl
xor
cmp
push
lahf
enter
enter
dec
fisubrl
fstl
xchg
cmc
pop
xchg
lock
adc
loopne
call
dec
fldl
jl
cltd
jmp
jg
pushf
xor
cmc
sbb
pause
jbe
mov
leave
mov
inc
or
or
pop
mov
xchg
daa
xchg
test
pop
das
mov
cld
sbb
pop
inc
mov
dec
lods
cmp
clc
fidivrl
and
push
je
rol
jg
sub
jb
xchg
sti
pusha
mov
aad
je
or
lcall
subl
dec
jns
cmp
cwtl
mov
cmpsb
mov
and
add
mov
add
xor
lret
sub
inc
xor
inc
dec
xor
hlt
push
cs
push
mov
enter
lcall
sub
aaa
test
lea
test
je
rcl
insb
das
enter
mov
xor
inc
cmpsb
aas
xor
into
sbb
addr16
mov
imul
jmp
test
push
xchg
sub
out
cmp
jge
xor
cmp
and
add
ret
popa
xor
das
mov
testl
in
lret
std
push
push
or
push
or
sub
repnz
cmc
cld
lret
xchg
xchg
out
lea
pop
sarb
outsl
mov
fdivr
mov
aaa
and
cld
jle
outsb
xor
fdivr
repnz
or
pop
iret
in
push
mov
flds
push
mov
xor
sbb
adc
cmp
jo
jne
negb
and
xchg
out
dec
cmp
fwait
push
rcll
push
sub
mov
mov
cmp
out
iret
adc
cwtl
push
les
and
xor
fdiv
sbb
lods
push
into
dec
mov
fisttpl
sbb
adc
push
movsl
mov
lcall
lret
pop
cmp
mov
outsl
jp
cltd
jne
push
fsubp
mov
data16
notb
leave
fidivrs
inc
cmpsb
ret
out
adc
and
jle
js
push
stc
inc
push
int3
sub
flds
lret
push
inc
lea
test
leave
rcll
mov
divb
pop
add
movsl
or
mov
push
fimull
lock
aaa
lods
bound
arpl
movsb
xchg
scas
int
push
and
xor
shr
iret
jns
or
dec
adc
dec
je
lret
in
jno
js
arpl
cld
pop
in
xchg
add
and
ficomps
fsubp
pusha
pop
in
repnz
pushf
xchg
lods
lea
sbbb
in
stc
into
jne
and
mov
movsl
mov
jp
mov
int
xchg
cmpl
and
arpl
jbe
jmp
adc
int3
js
std
xchg
jp
add
lods
pop
loopne
jg
pop
jnp
cmc
les
push
mov
sbb
xchg
test
xor
xchg
les
push
stc
sbb
cmp
xlat
lret
stos
push
adc
mov
mov
das
sti
push
dec
nop
cmp
dec
adcl
pop
mov
dec
repz
fbld
into
add
mov
mov
cs
outsb
std
pop
cmpsb
movsl
mov
cmc
and
add
shll
out
and
cltd
sbb
out
andl
jp
fistpll
jb
pop
movb
orb
and
ficompl
syscall
add
in
jmp
test
bound
shr
sub
int3
lret
mov
pop
pushf
or
dec
lds
cs
shl
je
dec
jo
ds
ret
mov
arpl
sbb
mov
cwtl
stc
sub
dec
xchg
lcall
mov
mov
xor
clc
jno
ds
sar
xor
inc
inc
fcomip
jmp
je
dec
sub
iret
sbb
cmp
shr
pop
push
cld
inc
bound
mov
dec
les
sbb
scas
cmp
enter
stos
push
push
into
cli
sub
xor
mulb
mov
sbb
xor
leave
sub
mov
xlat
outsb
push
call
mov
xlat
push
scas
sbb
mov
cmp
fimull
push
mov
inc
add
out
adc
loope
js
add
mull
inc
mov
or
lret
dec
hlt
cmpb
pop
scas
lea
xchg
ficoms
rolb
adc
out
xor
add
pop
xor
shll
sbbl
sarb
mov
lods
add
and
xor
fbstp
pop
lcall
cmp
sbb
lds
fstp
mov
rorl
cmp
or
dec
out
sbbb
push
cltd
xchg
pop
xor
test
int3
or
mov
add
aam
or
mov
and
lret
adc
movsl
push
push
insb
adc
sbbl
in
mov
repnz
pop
das
clc
dec
fcompl
adc
pop
pop
pop
push
xchg
fst
jle
fnstenv
fdivrl
push
add
pop
test
imul
mov
jns
and
jo
test
cld
push
mov
add
aas
sbb
fcomps
cmpb
and
jmp
dec
scas
pop
jmp
je
mov
xor
les
outsl
leave
and
inc
sub
sbb
mov
stos
loop
subb
test
jp
inc
mov
add
mov
cmpxchg
arpl
push
mov
cwtl
add
sub
fimuls
jle
popf
mov
push
into
test
xor
jae
jp
xchg
gs
call
mov
xchg
add
mov
cmpb
into
aas
adc
pop
pop
fimuls
push
mov
out
mov
aaa
mov
sbb
push
jae
sti
mov
mov
jo
xchg
loop
sub
arpl
data16
jp
mov
adc
fisttpll
out
icebp
pop
cwtl
cltd
ret
mov
sbb
sub
cmpb
pushf
jp
jg
cmp
out
and
scas
push
icebp
shlb
sub
sarl
clc
movsl
in
testl
pop
test
nop
je
pop
sub
add
mov
sahf
cmp
ret
aaa
in
cmp
ds
es
fdiv
inc
dec
jae
aaa
imul
hlt
cwtl
jns
fcmove
mov
inc
adc
cmc
lret
dec
jbe
int3
insl
lret
xchg
adcb
xchg
cmpsl
lock
push
jno
push
and
cld
lods
mov
pop
out
add
xchg
and
or
xor
inc
repnz
mov
fdivrl
cmp
call
outsb
push
ja
inc
rolb
scas
lret
and
dec
push
mov
pop
leave
push
push
gs
andl
or
pop
cmp
cwtl
stos
adc
mov
xchg
add
fsub
mov
repz
jmp
mov
or
cmp
inc
aad
mov
rclb
cmpsb
aaa
sbb
mov
popf
jle
mov
icebp
jge
das
mov
call
and
mov
push
shl
push
ljmp
xchg
pop
shll
jp
pop
push
push
add
add
sbb
lods
cld
mov
lods
scas
xor
inc
nop
fiaddl
sub
leave
sub
dec
sub
fidivrs
insb
mov
mov
xchg
sarb
test
mov
outsb
addr16
adc
pop
push
jo
xchg
cmp
jbe
and
stos
pop
out
idivb
add
jg
aaa
mov
dec
add
push
adc
bound
cmp
int3
sbb
and
aad
cmp
rorl
and
jp
mov
int3
xchg
dec
sub
popf
loope
lahf
lods
scas
pop
push
xchg
fistpll
sti
jl
or
sub
repnz
jp
orb
rcrb
dec
jne
cmp
rcll
xchg
mov
mov
sub
xor
or
sub
rolb
test
xor
dec
mov
sbb
mov
sbb
inc
xchg
movsl
dec
and
adc
mov
or
dec
pop
loop
popf
nop
andb
inc
pop
pusha
jmp
adc
dec
adc
mov
xchg
push
idiv
stos
and
mov
push
scas
mov
sub
dec
mov
adc
add
sub
pop
pop
lea
pop
dec
push
nop
dec
pop
cmpb
movsb
stc
outsb
testl
aas
jg
or
movsl
inc
sar
stos
leave
lret
jns
or
or
inc
loopne
xchg
mov
movsl
jmp
push
mov
loop
test
jnp
test
and
cmp
mov
pop
push
jb
xchg
jbe
out
mov
xor
inc
gs
insl
or
popa
fldcw
in
mov
int3
out
leave
push
adc
jae
sbb
xchg
hlt
dec
ret
insb
imul
push
sub
xor
dec
adc
and
push
xsave
jno
and
inc
daa
repz
out
sbb
jge
sarb
inc
jo
xchg
cmc
cmp
dec
out
sub
loopne
out
mov
cs
pop
in
jmp
cmp
movhps
dec
jl
jmp
aaa
cs
lods
sbb
dec
ret
cld
push
mov
stc
jns
xor
push
xchg
sarl
cmp
mov
lret
jne
mov
ret
pop
jp
sbb
ss
sar
fwait
mov
stos
int
xchg
mull
dec
adc
int
iret
cmpsl
aas
inc
lcall
leave
stos
fisttps
inc
push
gs
xchg
in
lcall
int
xor
sub
fwait
idivb
xlat
iret
fcompl
jnp
push
inc
outsb
fdivr
push
rcrb
mov
aaa
jae
into
daa
adc
shlb
call
push
rcrb
and
sbb
idivl
mov
out
jmp
loop
jge
dec
fwait
shlb
test
insb
mov
call
and
sbb
inc
lods
testb
push
repnz
sub
sub
xchg
shrl
dec
pop
mov
add
xchg
dec
fstpt
lahf
pop
xlat
lock
xchg
mov
jl
sub
or
repz
push
pop
xor
inc
and
ljmp
sub
sbb
mov
jecxz
and
and
or
leave
dec
test
out
add
int3
clc
dec
or
js
cmp
xor
inc
cli
jle
fs
dec
push
mov
add
call
xchg
cmpsl
fst
jno
push
sbb
add
jge
xor
divb
push
sbb
mov
dec
loop
mov
jb
or
fwait
in
xchg
sbb
icebp
int3
sbb
cld
fs
mov
push
pop
mov
push
or
lcall
mov
and
mov
or
sahf
sbb
mov
mov
or
add
push
mov
fidivl
adc
fnstcw
fwait
leave
cwtl
push
out
push
or
cli
stos
xlat
ja
scas
addl
dec
fwait
and
aam
in
or
ret
sub
incl
cli
je
fwait
sub
enter
arpl
jns
mov
test
or
mov
mov
loop
or
xchg
in
xchg
decb
rcrl
aas
int3
shr
mov
mov
dec
rcrl
dec
mov
notl
int3
or
pop
hlt
or
out
xor
popa
lds
xchg
icebp
push
std
add
outsl
scas
cmpsl
and
jae
and
xor
popa
stos
xor
sahf
jo
push
fs
xor
test
sbbl
dec
inc
into
push
xor
sbb
mul
dec
xor
pop
jns
cld
dec
inc
mov
lret
rorb
pop
jno
mov
orl
shll
mov
xchg
and
jge
jbe
jb
adc
sahf
pop
out
mov
push
ljmp
jnp
rcrl
xchg
push
or
addr16
pop
xor
mov
push
dec
jmp
ljmp
pop
mov
xchg
aam
mov
sbb
ret
aas
outsb
xchg
and
int
mov
push
out
adc
les
ds
adc
nop
sbb
and
cmp
sub
inc
fidivs
pop
mov
xchg
daa
outsb
cmp
ds
mov
leave
insl
repz
adc
aaa
pop
lods
pop
daa
dec
inc
cmpl
hlt
mov
and
pusha
lods
test
lods
mov
jb
sub
data16
inc
jp
ljmp
das
ljmp
aam
gs
inc
cli
sbb
out
dec
aam
and
add
pushf
xchg
sbb
mov
inc
repnz
mov
mov
jmp
in
stos
add
lret
out
xor
adc
loope
jno
xor
test
lret
stc
in
into
push
sbb
lret
icebp
push
push
xor
imul
lods
scas
jns
mov
nop
push
mov
jno
xchg
adc
jae
out
insl
dec
dec
ljmp
sti
sahf
adc
pop
pop
cmp
lcall
xor
adc
stos
scas
cltd
insl
mov
inc
jp
notb
inc
shrl
mov
mov
ljmp
fistl
outsb
push
ret
xchg
xchg
inc
int
fbld
fwait
cli
pushf
nop
dec
rclb
leave
or
mov
repz
rcrl
sub
stos
scas
mov
jl
xchg
pop
xor
rorb
imull
xor
divl
pop
sub
sub
std
fsubl
scas
sub
pop
lcall
pop
rclb
pop
push
add
push
daa
pop
xchg
and
notl
scas
dec
or
shlb
dec
dec
loop
dec
in
flds
in
cmp
jae
lret
shrb
pop
addr16
cmp
xor
push
mov
lods
std
jmp
arpl
test
sahf
aam
and
popf
mov
aaa
xchg
cli
xchg
mov
nop
dec
aam
xchg
test
out
scas
push
sbb
ljmp
fwait
mov
mov
pop
mov
movsl
arpl
sub
jno
mov
enter
xchg
mov
push
sub
std
fdivr
sti
sub
mov
js
and
add
test
mov
cs
or
pop
addr16
pop
sub
fsubs
sub
es
cli
outsl
fisubrl
fs
lahf
das
stos
mov
les
xor
xor
fwait
xor
inc
dec
jbe
jns
out
dec
inc
mov
lods
push
adcl
add
sub
dec
stos
xor
cwtl
jmp
aas
inc
pop
or
xchg
pop
icebp
nop
add
push
loope
mov
xor
jne
or
cmp
cmpsl
mov
push
loope
add
addr16
scas
mov
nop
sbb
jo
or
pop
outsb
pusha
jle
ficoml
fistpl
inc
pop
js
xchg
pop
test
stos
jge
rcl
mov
cld
cld
scas
fs
test
cltd
lcall
aaa
push
pop
cmp
mov
pusha
pop
outsb
mov
and
mov
mov
mov
pusha
pop
sbb
loope
pop
mov
dec
push
adc
mul
push
nop
inc
mov
mov
insl
and
xor
scas
jg
int
pop
sbb
and
andl
sbbb
rol
testb
rol
xlat
and
pusha
mov
mov
jno
ljmp
cld
inc
sub
add
loope
jge
jno
dec
in
ss
icebp
aaa
add
sarl
dec
stos
inc
jg
shll
lds
sahf
movsb
cmp
mov
push
jl
repz
dec
mov
cmpsb
push
jo
filds
fcoml
xchg
adcb
and
js
xchg
shl
adc
and
repnz
stos
xchg
sbb
sbb
mov
or
push
and
xchg
adc
rorl
sub
loope
scas
hlt
fistpl
lahf
insl
jbe
dec
in
or
cwtl
aad
xchg
sub
cmp
pop
mov
ffreep
test
popf
sub
hlt
cmp
jne
or
ret
push
sub
dec
sub
xor
mov
xchg
je
dec
ss
test
test
jge
pop
mov
in
fwait
jl
out
loop
jmp
icebp
fsts
push
imul
sahf
adc
lcall
and
and
mov
and
imul
out
inc
jg
push
ret
lcall
push
test
xlat
mov
mov
test
int
push
movsl
xor
fidivrl
gs
scas
test
mov
fsts
nop
pop
dec
ret
inc
xchg
mov
sarb
inc
xor
jmp
xchg
or
leave
adc
rcr
arpl
mov
enter
push
push
lds
js
scas
or
les
insb
popw
insl
push
daa
aas
mov
mov
add
lods
aas
je
add
stos
mov
ret
clc
dec
lret
into
lcall
fidivs
pop
popa
sarl
insl
lret
hlt
add
outsl
xchg
cmp
push
insb
imul
sub
mov
aam
mov
dec
sub
lock
shl
notb
icebp
or
movsl
pop
lret
xchg
inc
mov
sti
and
roll
add
mov
xchg
orb
xchg
xchg
push
aas
inc
mov
xchg
push
loope
stos
sub
pop
inc
mov
or
jge
adc
ja
cmpsb
fisubrs
nop
lahf
fnstenv
push
fmuls
mov
jnp
xor
outsl
pushf
in
lods
into
jnp
cmp
pop
xor
pop
adc
les
sub
adc
arpl
lcall
aam
into
jnp
shr
xor
jnp
pop
bound
arpl
sub
scas
stc
leave
test
inc
xor
cltd
push
push
mov
push
fnstcw
add
in
xor
xor
push
pop
rclb
inc
push
inc
xchg
or
xchg
pop
and
std
pop
add
mov
sbb
pop
xchg
mov
out
pusha
pop
icebp
xchg
rcrl
or
scas
sbb
sbb
aam
testl
jmp
loopew
loopne
pop
mov
and
hlt
or
loopne
dec
roll
jne
leave
test
jae
add
popf
mov
jge
xor
shll
or
aad
xor
rclb
jne
outsl
jmp
test
mov
xchg
pusha
pop
push
aam
call
fidivrl
fsubl
pop
xchg
fwait
xchg
mov
insl
cmc
ret
fisubl
shr
or
lods
stos
sahf
mov
aam
push
push
mov
or
and
adc
push
out
xchg
push
jge
pop
xor
fwait
jne
cs
jmp
rol
outsl
mov
adc
dec
lock
mov
pop
xchg
cmp
hlt
cmpsb
mov
xlat
cld
cmpsb
sub
lahf
pop
mov
push
push
cmpl
mov
arpl
mov
mov
je
xchg
adc
into
mov
in
or
bnd
xchg
mov
push
decl
sub
mov
test
xchg
dec
inc
inc
pop
push
lret
fbld
or
cwtl
pop
and
inc
test
out
movsl
lret
repz
shlb
cs
sub
mov
pop
pop
lret
add
mov
stc
pop
add
jb
fadds
aaa
daa
jle
repz
pusha
pop
pop
and
and
mov
cmp
shll
push
add
add
arpl
mov
std
arpl
out
cwtl
leave
movsl
insb
xchg
mov
test
aas
mov
mov
dec
pop
fists
dec
jo
into
loopne
shrb
pop
int3
xorl
addr16
jb,pn
data16
movsb
mov
fldcw
xor
enter
sub
push
adc
aaa
lret
test
mov
lods
jg
push
mov
adc
insl
sub
fcompl
and
jnp
scas
shll
sarl
mov
mov
cmp
xor
mov
in
push
test
mov
dec
pop
inc
setle
mov
push
sub
pop
add
sarb
lret
push
sbb
aaa
xchg
xor
test
mov
add
jno
iret
out
int
rorb
lods
adc
loopne
rorb
mov
add
dec
sbb
cmp
cmp
xchg
cltd
add
and
imul
sbb
or
mov
jge
or
sub
stos
sbb
dec
cmp
cmpl
out
scas
xlat
stc
jne
into
mov
push
xor
dec
pop
fcmovb
cmp
cmp
lahf
jge
fldl
into
adc
xchg
dec
xchg
fstpl
std
ja
xor
insb
fstpl
bnd
cmp
loop
sub
sti
scas
iret
cmp
cmp
enter
add
arpl
push
push
lcall
push
push
lock
dec
inc
pop
and
das
mov
dec
adc
mov
xchg
dec
in
cmp
cmpsb
inc
andl
nop
add
pusha
mov
leave
lods
call
inc
sub
cmp
pop
xchg
cltd
ljmp
je
mov
loopne
sbb
xor
and
inc
add
dec
cmp
aas
mov
popf
adc
mov
jmp
lods
cmp
jl
dec
push
or
dec
dec
int
aaa
dec
push
sbb
jge
inc
aad
mov
cld
out
push
out
pop
xchg
sbb
adc
icebp
sub
pop
iret
notb
das
xchg
fsts
or
pop
add
or
jnp
test
mov
inc
jne
xor
xchg
loop
fwait
cmp
push
inc
adc
sahf
pop
roll
data16
cmpsb
mov
addr16
and
and
fwait
ret
xchg
sub
cltd
fidivl
push
adc
test
ss
xor
inc
insb
and
mov
lock
jo
pop
ret
inc
in
push
sub
test
lret
jp
lcall
into
cld
pushf
cmp
xchg
out
mov
jl
mov
push
sbbb
js
loop
add
xchg
std
sbb
lods
roll
xlat
jns
pop
or
cmp
enter
stc
int
or
les
push
aaa
insl
jg
ja
xchg
inc
push
aaa
push
or
mov
into
imul
cli
sub
mov
rcll
data16
adcl
fwait
pusha
cmp
gs
repz
xchg
pop
inc
push
clc
cmovae
insb
and
fwait
or
sbb
in
decb
popf
mov
stos
daa
add
add
push
ret
mov
xchg
jbe
and
jge
lods
jo
mov
iret
cmp
push
xchg
out
xchg
bound
xchg
repnz
ror
scas
add
fdivrl
out
movsl
xor
jge
mov
cmovo
mov
inc
add
outsb
mov
sahf
push
in
adc
or
mov
fbld
push
pusha
test
stos
jmp
jbe
test
push
divb
pop
bound
inc
aam
adc
cmp
and
add
insl
xchg
cmp
mov
or
mov
push
jno
lahf
jmp
or
cmpsl
pop
sub
xchg
sti
sti
add
jno
jg
hlt
inc
jns
pusha
adc
outsl
adc
mov
fadds
movsb
ss
inc
and
in
jnp
insl
cmpsl
imul
cmp
test
stos
icebp
sbb
lcall
pop
pushf
stc
cmp
mov
inc
dec
fnsave
xchg
add
fsubrs
xor
push
or
je
jl,pn
int
xchg
pop
mov
mov
xor
inc
test
clc
ret
or
orl
aaa
xchg
mov
push
and
call
jns
and
adc
insb
and
sbb
xchg
es
cmp
pop
sbb
mov
sbb
mov
pop
mov
out
pop
mov
loop
inc
dec
das
shlb
mov
shll
dec
xchg
add
pop
pop
pop
mov
nop
xlat
push
mov
test
out
fwait
test
cmp
imul
std
dec
out
lcall
pop
xchg
jg
sub
pop
ficoml
mov
aas
mov
inc
push
icebp
stos
mov
pop
aas
in
lret
rcll
insl
sbb
sbb
hlt
jo
sub
add
mov
cs
fdivs
iret
sub
inc
rcr
outsl
mov
xchg
mov
adc
mov
dec
fwait
push
xchg
stos
or
enter
in
xchg
ret
mov
mov
dec
adc
cwtl
mov
andl
in
sti
jo
lea
push
das
xchg
imul
mov
jp
push
or
and
cmp
pop
int
add
sub
sub
xor
imul
mov
jecxz
jmp
clc
push
roll
outsl
popa
lret
xchg
sahf
jne
push
cs
and
mov
out
pop
xchg
stos
test
lea
cld
mov
or
sahf
sbb
test
cmpsl
sub
test
aas
and
dec
sbb
jl
cmp
mov
and
mov
cmpsl
rcpps
push
sahf
sbb
pusha
roll
jb
ret
xor
lods
jmp
aad
jae
pop
cli
outsl
lods
xchg
inc
jne
cli
xchg
sti
ljmp
test
xor
ror
and
mov
pushf
mov
pop
movsb
or
sub
inc
mov
fildll
andl
out
mov
xchg
outsb
rcl
ss
push
jne
adcl
add
jge
and
inc
mov
pop
test
mov
mov
hlt
and
notl
xchg
jle
cmpsl
sti
sbbl
popf
roll
inc
ret
mov
xchg
mov
dec
outsb
push
and
mov
fcmovu
ret
or
enter
pop
sahf
xchg
lock
icebp
aaa
mov
out
shll
and
cmp
mov
mov
cmp
xlat
bound
dec
aam
mov
jnp
call
jo
ss
dec
cmp
int3
sub
aaa
fisubl
rcr
or
mov
adc
mov
scas
ficoms
mov
sub
mov
jns
jbe
xchg
adc
push
scas
xchg
jg
decb
lahf
andb
jb
dec
fnsave
flds
inc
scas
arpl
mov
mov
inc
or
cmc
icebp
cmpsb
lds
lahf
movsb
mov
adcb
and
xchg
lods
sub
and
ljmp
cmp
imul
int
add
xchg
xor
das
mov
enter
dec
xor
sub
adc
sbb
adc
addl
ja
test
adc
setne
adc
push
imulb
push
test
mov
mov
fistpll
pop
xor
test
mov
test
dec
mov
in
pushf
shlb
dec
int3
sbbl
xor
test
pop
es
adc
loopne
xchg
adcl
imul
jb
xchg
bound
sub
sbb
arpl
push
lcallw
inc
xchg
mov
out
add
mov
addr16
xchg
movaps
cmpsl
fxch
ds
xchg
mov
in
ret
sbb
int
mov
rclb
mov
lea
and
xor
in
scas
hlt
push
ss
dec
adc
adc
xor
push
jg
or
lcall
pop
xor
jno
shlb
sub
xlat
or
push
sub
cmpsb
int
or
jne
pop
jecxz
je
lea
inc
fstpt
mov
loope
aad
adc
lods
mov
sbb
mov
insl
pop
ljmp
iret
movsl
inc
shlb
cmpb
mov
and
mov
ljmp
push
pop
pop
popl
mov
hlt
lods
jae
imul
inc
push
push
inc
test
push
loop
mov
aas
notb
cmp
xchg
imul
pushf
test
push
cmc
cmp
xorb
subb
and
sbb
cmp
add
mov
push
sbb
stos
ret
push
dec
mov
lea
add
scas
adc
inc
stos
cmpsl
aad
mov
stc
mov
loopne
pop
xor
xor
aam
push
inc
sahf
dec
lods
add
test
test
push
mov
jl
add
clc
idiv
cmpb
fsubs
mov
xchg
mov
mulb
push
cmp
repnz
stos
xor
xchg
out
movsl
lods
insb
sub
mov
cmp
out
sarb
scas
cli
pop
jecxz
cmp
out
enter
push
xchg
cli
xchg
push
mov
lcall
enter
sub
mov
add
jo
mov
mov
loopne
add
pop
daa
bound
pop
hlt
fisttps
fisubl
add
pop
cmc
fsubrs
ljmp
dec
xchg
pop
arpl
push
in
ds
ljmp
push
push
and
enter
jge
push
sub
das
pop
mov
sahf
out
and
mulb
cmp
mov
xchg
add
icebp
fimull
jnp
push
ss
and
nop
mov
ljmp
xchg
sbb
dec
mov
mov
movsb
in
fldt
pusha
sar
loop
or
adc
shll
inc
xchg
xlat
and
lods
mov
dec
jp
sbb
fiaddl
add
stc
lods
pop
xor
push
jb
mov
outsb
rolb
insb
int3
frstor
inc
gs
push
xchg
lock
out
push
mov
mov
test
add
mov
cs
add
inc
std
stc
ret
lods
int3
fdivs
test
gs
pop
loope
sbb
sbb
fldcw
dec
xchg
movsb
mov
mov
inc
les
sahf
mov
and
mov
pop
jmp
mov
test
mov
sub
xor
ja
xchg
pop
push
mov
mov
mov
es
cmp
xlat
out
adc
test
fxch
push
ja
mov
out
dec
ret
cli
ret
daa
dec
adc
cmpsl
loop
and
cmp
mov
pop
or
mov
ret
jecxz
mov
xor
xchg
sarb
jns
pop
gs
xlat
leave
lret
xlat
push
scas
adc
mov
jnp
sbb
ror
pushf
add
aas
sbb
js
sar
js
jbe
cmp
add
and
jmp
aas
dec
lret
push
push
push
mov
movsb
movsb
popf
mov
mov
ret
ss
mov
push
sarl
cmpsl
adc
pop
cwtl
ja
xchg
push
dec
aas
pushf
inc
icebp
sub
jno
lock
outsb
fnstenv
ja
mov
cli
stc
inc
mov
fadd
mov
jne
out
pop
adcl
xor
js
pusha
pop
xchg
inc
fucomi
mov
cmpsb
xor
push
lahf
mov
cmp
sub
icebp
cs
ficoml
mov
test
int3
out
pop
pop
scas
repnz
mov
out
add
addr16
cmp
push
or
in
insl
push
repnz
aas
popa
add
mov
shlb
in
call
add
out
cwtl
insl
popf
push
cmpsl
fyl2x
xor
push
lret
jle
test
pop
icebp
sub
daa
test
cltd
xchg
das
cli
add
push
push
rolb
call
push
arpl
dec
mov
mov
or
or
cmp
xorb
aad
xchg
pusha
dec
insl
xor
fistl
popf
mov
test
das
push
mov
faddp
sbb
lcall
into
cmp
imul
dec
int3
adc
cmp
sub
rcll
lods
mov
xchg
stos
and
sti
mov
mov
jle
push
iret
cmp
lcall
xchg
or
sbb
cmp
lahf
stos
dec
ljmp
outsb
int
nop
push
push
fidivrl
cmp
rsm
xchg
dec
bound
cltd
fwait
test
jmp
mov
mov
fs
iret
shr
jl
pop
xlat
mov
dec
sub
and
sub
jae
mov
inc
inc
rclb
and
jl
adc
iret
insl
cs
pushf
xchg
mov
ret
xchg
sarb
sahf
inc
sub
pop
sbb
pop
mov
mov
stos
jns
cmp
int
aas
lock
pop
xlat
inc
pop
cmp
adc
fcmove
dec
addr16
pusha
add
out
lcall
mov
js
outsb
testl
loop
mov
xchg
adc
test
xchg
cmpsb
adc
jecxz
push
sbb
insl
jp
pop
test
xchg
inc
mov
push
adc
shlb
test
dec
in
jne
insl
arpl
sub
fistps
sti
jo
gs
cmp
ret
out
int3
lret
stc
aaa
loop
call
push
sub
add
addb
jnp
aam
jae
pop
rol
scas
dec
out
inc
mov
shlb
dec
jmp
negb
xorl
movsb
mov
sub
in
icebp
jno
fcompl
or
sbb
add
mov
add
xchg
mov
mov
inc
cli
push
and
sbb
lds
outsb
iret
add
cmp
mov
xchg
out
test
pop
scas
and
push
cmp
fimuls
cmpsl
dec
out
cmp
loopne
xor
insl
mov
sub
mov
xlat
imul
cli
and
scas
nop
pushf
clc
stc
inc
movsl
add
pop
sti
rolb
in
jb
xchg
nop
into
mov
pop
dec
in
and
out
adc
add
push
mov
mov
stos
push
inc
push
jnp
ss
push
adc
inc
repnz
fs
test
iret
mov
or
add
add
fs
sbb
or
test
sub
inc
movsl
xor
mov
add
xchg
jns
mov
or
cmpsl
test
out
xchg
push
jmp
fisubrs
arpl
mov
jmp
mov
out
pop
lahf
clc
bound
sbb
ljmp
pop
das
sbb
jno
dec
inc
pop
loop
jns
cld
push
les
bound
mov
test
dec
pop
loopne
out
cld
enter
out
imul
pop
cmp
es
dec
mov
sbb
daa
data16
sub
or
jbe
lock
push
repz
shlb
xor
mov
outsb
loope
mov
adc
mov
mov
sub
push
aas
mov
out
push
jnp
loope
fsubrs
jo
cmp
in
addr16
jp
pop
add
pop
push
test
pop
jns
xor
repz
adc
rorb
sbbl
pop
ret
popf
push
dec
jge
fs
push
das
nop
sbb
or
stos
mov
jbe
mov
insb
mov
jae
dec
popa
sbb
mov
add
jo
push
out
imul
sbb
out
in
sub
push
sbbl
or
lcall
or
lahf
shlb
xor
std
es
or
sbb
pop
inc
sbb
imul
inc
mov
inc
cmp
jmp
mov
push
jg
mov
mov
add
rorb
test
add
cmp
adcl
cmp
pop
je
pop
out
sub
mov
mov
mov
jl
push
movsb
mov
clc
sub
jge
sub
and
adc
cs
rcrb
xchg
andb
push
cmp
jb
cmp
and
pop
mov
cmp
sbb
jns
out
adc
jg
xlat
fidivl
sbb
loop
int3
aaa
mov
mov
cmp
or
push
fildll
icebp
aas
xor
mov
movsl
enter
inc
lret
sbb
les
ja
outsl
xor
subl
adc
mov
lods
jnp
ror
lahf
push
mov
js
add
pop
push
mov
arpl
sub
dec
cltd
cwtl
pushf
push
xor
push
and
jmp
int
sbb
mov
sub
jle
sbb
or
jp
std
in
push
xchg
aaa
lods
vpsubd
xorb
cmpsl
push
lea
hlt
test
cmp
hlt
mov
mov
or
mov
sub
pop
xchg
out
and
cmp
scas
outsl
and
or
test
ss
xor
or
clc
dec
setge
fsubrs
jmp
sbb
and
sbb
inc
push
in
sub
jp
fisttpl
enter
add
lret
cmc
inc
pushf
mov
loopne
xchg
xor
pop
push
push
adc
lea
push
aad
jae
mov
scas
xchg
xor
dec
dec
out
push
andb
lret
mov
push
lret
jle
cmp
sub
incl
xor
or
xchg
mov
mov
jl
int
scas
xor
dec
stos
push
pop
xchg
pop
sub
hlt
clc
and
xchg
imul
filds
movsl
int
sti
mov
dec
lods
or
sbb
xchg
mov
scas
mov
out
lret
fnstcw
mov
sarl
mov
outsb
popf
das
popf
xchg
inc
popf
xchg
nop
je
mov
cmp
inc
cli
mov
int3
mov
das
jl
imul
mov
jb
mov
lahf
iret
cmp
sarb
rolb
neg
push
push
roll
test
xor
imul
mov
cmc
mov
sti
xor
cld
push
xchg
adc
sub
mov
cmp
outsb
mov
mov
dec
dec
and
repz
int3
clc
jmp
jge
fisttpll
icebp
mov
mov
outsb
mov
dec
dec
popa
inc
in
cmp
aam
rorl
cmc
es
cmpsl
ret
jae
iret
push
rol
clc
push
jge
popa
add
lahf
pop
jne
mov
mov
gs
mov
xchg
repz
push
push
sub
push
mov
or
and
rcl
mov
pusha
cli
lods
xor
lahf
jmp
aaa
ret
test
pop
test
adc
insb
inc
mov
mov
cmp
add
jnp
enter
dec
dec
xor
mov
inc
push
stos
inc
popf
out
dec
or
imul
test
aad
xor
leave
imull
mov
insl
jp
jnp
ret
jns
and
jno
inc
test
setno
scas
mov
movsl
dec
jg
xchg
push
mov
add
scas
les
inc
sbb
push
or
push
inc
and
aaa
jg
enter
xor
insb
fimuls
sbb
enter
push
test
jne
dec
xor
or
cmp
push
popa
mov
in
stc
jl
das
outsb
or
sbb
cmp
icebp
add
aaa
adc
dec
add
daa
pop
xchg
push
std
pop
sbb
clc
adc
arpl
imul
insb
shll
call
ljmp
cmpsl
add
lahf
cmp
mov
push
rolb
fsubrs
sti
inc
push
popa
jp
dec
xor
pushf
and
jle
xchg
xor
and
adc
sbb
test
jo
negb
andps
jp
adc
xor
leave
sbb
data16
fsubrp
pop
mov
int
cmp
jno
repnz
or
mov
shll
xlat
inc
xor
or
cmp
adc
mov
mov
ljmp
pop
mov
int
rorb
adc
mov
push
sahf
inc
jp
test
fisubrs
add
in
xor
add
mov
out
and
xchg
jecxz
push
lcall
lds
push
adc
sahf
lcall
lea
jp
push
dec
aaa
xchg
insb
inc
mov
sti
pop
inc
pop
inc
inc
scas
xor
leave
loopne
xchg
out
out
xchg
pop
jbe
dec
call
adc
icebp
cmp
ljmp
cmp
outsl
jns
and
mov
pop
movsb
fsubl
add
push
push
leave
pop
aaa
ret
pop
mov
inc
sub
in
cmp
inc
or
push
mov
into
xchg
ds
pushf
sub
or
popf
or
loope
add
insb
or
js
inc
add
mov
loop
mov
or
and
andb
xchg
push
iret
inc
sbb
jge
cmp
jb
xor
mov
pusha
inc
jge
roll
scas
jl
mov
xchg
push
jp
movsb
test
addr16
dec
aam
imul
loop
movsb
aad
xchg
mov
repz
leave
jo
cmp
pop
pusha
lcall
push
xchg
ds
ja
jmp
sar
sti
push
pop
inc
cvtpi2ps
lods
cld
xor
jbe
jmp
mov
mov
rolb
mov
es
jle
xchg
and
sbb
adc
xchg
xor
test
cmpsb
mov
mov
push
jmp
xchg
out
jp
orb
adc
pop
insl
cwtl
and
in
mov
inc
cmpsb
rcrb
push
bound
cmp
mov
and
mov
aas
cmp
push
iret
insb
inc
hlt
push
xchg
jg
inc
sub
arpl
stos
ljmp
icebp
out
push
test
int3
out
sti
das
aas
xor
stos
fists
loope
ror
idiv
je
ja
mov
mov
dec
imul
bound
sbb
push
xchg
imul
mov
mov
mov
clc
pop
insl
push
jmp
push
push
mov
mov
mov
push
or
notl
mov
lds
jb
sbb
or
mov
out
inc
imul
dec
jp
pusha
sub
out
into
ljmp
sbb
jle
lods
xlat
cmp
in
repz
mov
jecxz
sub
cmp
mov
pop
lret
jbe
push
movsb
stos
adc
mov
sbbl
mov
jle
jns
fcmovnbe
loope
nop
pop
add
decb
xstore-rng
cmpsl
add
jb
sbb
daa
lds
int3
cmc
lahf
in
out
push
sarl
mov
pop
ret
mov
ret
and
push
add
mov
mov
xchg
adc
loop
and
dec
mov
jmp
fdivr
testl
call
xor
into
mov
adc
xchg
add
push
outsl
mov
sbb
loop
idiv
add
sahf
lods
mov
xor
cmp
sub
dec
pop
xor
lahf
ret
push
push
inc
xchg
cmp
push
mov
fiadds
mov
xchg
cmp
rorb
or
cmp
popa
test
push
add
xor
push
xchg
incl
dec
fidivrl
push
faddl
jne
sub
popf
out
mov
fs
test
test
outsb
push
jecxz
mov
ljmp
jnp
gs
xchg
pop
jno
add
xchg
jmp
xor
pop
shl
pop
adcb
hlt
lcall
sbb
or
scas
cmpb
repnz
sub
push
add
and
fists
lock
pop
mov
dec
lcall
xchg
pop
mov
lds
cltd
mov
cmp
inc
pop
dec
xchg
test
cmc
in
in
leavew
ret
aam
fs
subl
out
jle
push
add
push
scas
subl
xor
out
or
add
pop
sbb
xlat
push
sbb
mov
inc
inc
inc
xchg
xchg
inc
addr16
out
xor
dec
mov
mov
fdivp
pop
push
jl
ret
mov
push
call
ja
ja
mov
movb
sub
pusha
push
scas
pop
ljmp
pop
inc
das
sbb
dec
jae
cmp
iret
inc
push
jnp
xchg
loopne
mov
adc
and
imul
adc
test
cld
fsubs
mov
and
push
and
add
inc
xchg
xchg
pop
lahf
jp
pop
inc
dec
jnp
and
ja
inc
jecxz
arpl
mov
pop
push
cmc
dec
mov
cmp
hlt
push
les
testb
lahf
dec
jge
mov
outsl
and
add
xor
and
sarl
xchg
adc
jl
push
dec
cmpsb
pop
mov
ss
pop
pop
repz
stc
xor
rol
aas
pop
inc
ljmp
lcall
lods
ss
push
xorb
and
icebp
sbb
jp
cmp
dec
out
pop
stos
or
dec
fwait
mov
jnp
insb
aaa
pop
sbb
mov
cmpsb
xchg
gs
or
jae
pushf
sbb
fwait
sbb
push
insb
jmp
mov
outsb
popf
mov
cmpsl
test
mov
push
ds
inc
std
inc
xlat
mov
sbbb
cmp
pop
pop
and
repnz
mov
inc
adc
jo
xchg
mov
stos
test
cwtl
mov
mov
xchg
imul
mov
outsb
dec
adc
jle
into
cmp
mov
insl
es
pop
cld
nop
lret
test
loop
test
xchg
icebp
fldenv
or
cmp
push
ja
lds
lahf
push
add
shrb
leave
enter
notb
out
sbb
daa
call
mov
jp
mov
xor
sub
lret
mov
pop
movsl
cmp
xchg
cltd
jmp
mov
xchg
movzwl
cmp
add
jp
xchg
or
in
mov
dec
and
push
outsl
gs
addr16
sub
frstor
repnz
and
mov
mov
shll
add
sub
add
cmp
lods
stos
cmp
ljmp
mov
adc
xor
sbb
add
pop
sbb
popa
subl
adc
sub
addr16
jecxz
inc
lret
or
sarl
das
xchg
iret
imulb
dec
sub
and
push
sub
out
cmp
dec
push
jno
ja
test
xor
ljmp
add
sub
test
add
fsubs
or
push
pop
pushf
push
dec
mov
or
push
dec
clc
inc
mov
jnp
std
mov
and
xor
push
pop
mov
sub
movsb
sarb
push
ljmp
xlat
xor
icebp
cld
pop
sbb
jo
cmp
jmp
jns
jnp
rcl
cwtl
mov
xor
stos
ficompl
orb
jg
pop
inc
sahf
addr16
scas
aaa
addr16
mov
dec
mov
jae
mov
lock
out
fsts
mov
pop
imul
push
stos
inc
and
and
dec
cld
add
dec
outsl
test
or
push
pop
vaddsd
sbb
notl
add
cmp
xchg
jo
add
xchg
call
pop
mov
xchg
ja
aaa
or
mov
out
push
push
sub
fstpl
push
sbb
push
aad
leave
adc
mov
addr16
xlat
sub
jae
fldt
repnz
repnz
sbb
mov
cmp
inc
testb
repz
aaa
pusha
ficoms
inc
adc
jge
stos
mov
dec
push
cmpsl
sub
mov
bound
sub
sbb
insl
mov
add
and
insl
scas
int
mov
outsb
and
jns
bound
mov
and
repnz
daa
ds
adc
jle
dec
xor
jmp
jp
xchg
sub
jl
subl
aaa
int3
fisubs
sti
and
mov
aaa
out
xchg
cmpsl
iret
add
dec
or
insl
imul
adc
rcl
clc
and
adc
loope
aaa
fs
add
xor
arpl
rcrl
test
cmp
pop
mov
adc
xlat
test
sub
jo
daa
or
movsb
test
popa
ds
mov
shl
daa
mov
in
cmp
repnz
xor
imul
adc
pop
dec
repz
push
lret
and
pushf
adc
push
jge
inc
lret
int3
jecxz
into
lods
icebp
popa
orl
leave
mov
movsb
mov
dec
ret
cmp
ja
push
arpl
addr16
lea
imul
dec
in
xchg
pop
loopne
sbbb
decl
adc
mov
in
adc
sub
mov
addr16
imul
sub
or
or
xchg
sbb
push
shll
mov
jl
mov
or
or
insl
sbb
push
cld
gs
fs
xor
add
imul
jne
sbb
pop
jmp
lods
jl
xor
mov
addr16
pop
int3
insb
wrmsr
insb
out
out
push
add
and
gs
imull
arpl
sub
push
or
cli
fisttpl
roll
mov
add
or
dec
ljmp
sub
mov
adc
add
push
cli
lock
jmp
mov
push
mov
movsl
push
scas
mov
jecxz
mov
or
xorb
fwait
rcr
subb
addl
xlat
ret
insb
jmp
jb
add
pop
imul
fistpll
fadd
xchg
sbb
sbb
xor
out
fucomi
xor
rclb
lds
sub
hlt
fimull
aaa
test
mov
aam
sti
lock
nop
out
push
fdivs
push
icebp
cmp
mov
cli
daa
sbb
cmp
test
js
inc
and
mov
sbb
pusha
insl
fwait
mov
je
fildll
sub
pop
popa
xchg
pop
rorl
mov
dec
rolb
dec
mov
int3
push
sbb
ds
and
aaa
sbb
and
in
xor
test
sbb
sbb
outsl
or
adc
faddl
pop
je
lahf
invd
sub
adc
shr
cmp
sbb
mov
sub
pop
mov
inc
inc
into
jae
jae
ss
cmp
sub
and
sbb
int
pop
leave
ljmp
and
aad
pop
js
dec
jmp
aas
in
pop
mov
push
mov
je
push
mov
inc
test
insl
dec
mov
sbb
cmp
or
or
jecxz
push
sub
loop
adc
mov
rcll
mov
lea
cmp
fdivrp
pop
leave
je
pop
test
lcall
inc
sub
and
insb
dec
cmp
ja
sub
mov
jmp
test
out
arpl
negl
hlt
pop
or
xorb
push
mov
jae
pop
sbb
adc
fld1
mov
mov
lods
fnstenv
out
mov
xor
outsl
and
mov
mov
push
or
rcr
daa
sub
lahf
xchg
mov
lret
jne
test
imul
xor
dec
adcl
xchg
les
xchg
lahf
xchg
xchg
mov
xchg
inc
jecxz
aad
inc
inc
test
jg
mov
aad
sarl
mov
pop
or
add
or
xor
aam
testl
or
fmuls
ljmp
bound
repz
pop
xchg
filds
mov
inc
stos
jmp
cmp
mov
jnp
xchg
or
into
jle
xor
jg
and
shll
repz
movsl
stc
test
xor
gs
hlt
repnz
int3
add
lcall
pop
cli
cmp
push
std
add
hlt
xor
jge
je
pusha
xor
pop
cmp
idiv
sub
sub
pushl
out
xor
and
mov
dec
std
fisttpll
fldenv
fcomps
mov
into
xor
cmp
loop
outsb
xchg
test
decw
int3
pusha
imul
roll
ret
cmp
pop
ss
sbb
jge
xlat
pop
int3
xor
sarb
fnstenv
xchg
mov
mov
jne
or
push
shl
shrl
mov
cli
rorl
xchg
xchg
ret
adc
xor
in
pop
jne
test
aas
into
cmp
pushf
repnz
add
repz
aam
pop
cld
cmc
cmpsb
mov
jo
and
and
jecxz
xorl
add
mov
push
inc
pop
or
sbb
xchg
sbb
addr16
movsb
inc
fcmovb
hlt
mov
jnp
sbb
sti
jns
repnz
inc
mov
mov
repz
fs
jp
jp
das
xor
add
mov
out
cmc
dec
jecxz
pop
adc
imul
pusha
in
jecxz
daa
aam
xchg
cltd
dec
jp
inc
ljmp
xor
ret
fidivrl
sbb
push
xor
lods
cmc
mov
mov
aam
data16
ja
lret
and
jge
mov
fldcw
xor
stos
mov
lahf
pop
mov
inc
test
popa
add
icebp
fnsave
and
jl
icebp
fs
or
iret
inc
lea
js
loop
and
cltd
mov
mov
andb
jns
cmpsl
adc
out
mov
fstps
jecxz
xor
adc
insl
test
cmc
movsl
pop
push
mov
mov
mov
fistps
pop
cmp
stos
ss
fnstcw
test
xchg
test
clc
pop
je
int3
mov
pop
imul
dec
std
dec
repnz
cmp
push
jo
scas
aad
fistpll
insl
test
pop
ret
sti
popa
xchg
int3
aam
movsb
mov
push
loope
or
in
add
int
inc
mov
and
sub
fldenv
mov
lds
addr16
ret
dec
loop
mov
gs
mov
outsl
sbb
test
jp
scas
mov
or
dec
mov
push
adc
outsl
dec
je
push
mov
xor
aaa
xchg
mov
lcall
fisubrl
xchg
into
cmp
subb
test
xorb
imul
out
add
insl
clc
sub
pop
push
lods
fwait
mov
lock
adc
loopne
jnp
push
mov
push
xchg
lock
and
xchg
dec
mov
dec
mov
shrb
cltd
and
and
movsb
mov
gs
icebp
nop
inc
pusha
fucom
or
push
out
or
add
lods
sbb
mov
jmp
movsb
inc
xor
shrb
sub
shl
jns
and
fwait
and
inc
popa
pop
faddl
cmp
nop
test
xor
sbb
push
repz
pushf
lret
xor
jns
nop
inc
insb
mov
inc
inc
sahf
adc
xlat
jne
cmp
rol
pop
cmp
fstpt
jmp
mov
cs
adc
fildll
push
mull
ja
push
jp
into
add
fidivrl
ret
data16
std
cltd
lods
js
clc
xchg
out
test
mov
lahf
fadds
jle
lahf
sub
dec
pop
movsb
scas
in
imul
push
js
loopne
mov
out
xchg
ss
fbstp
popf
add
mov
jo
insb
dec
cwtl
outsb
insl
into
das
add
dec
mov
in
arpl
adc
mov
jne
aaa
cmp
cmp
loop
mov
jecxz
bswap
and
clc
xchg
rorb
mull
xor
sbb
sbb
pop
pop
mov
or
mov
cmpsb
dec
cmp
mov
imul
shll
fsubr
inc
repz
pop
ja
push
mov
push
mov
dec
jae
aaa
adc
sub
push
fisubl
int
xor
dec
jmp
rcl
jbe
popa
add
adcb
aad
dec
jecxz
aaa
jo
xor
cmp
enter
in
jmp
cmc
stos
push
lock
dec
add
pop
pop
test
xlat
sbb
xor
out
scas
xor
stos
cmp
lock
sub
cmpl
mov
data16
in
ret
cs
or
outsl
add
lock
pushf
dec
push
sbb
inc
int
or
cs
and
int
and
jb
inc
push
popf
adc
pop
mov
lret
std
xchg
push
imul
pop
mov
xchg
xor
xor
std
mov
gs
lret
sbbb
mov
arpl
or
nop
push
fcomps
adc
push
sbb
adc
cmp
add
nop
call
jo
outsl
dec
and
xchg
xchg
inc
dec
adc
test
jmp
mov
arpl
repnz
in
out
cmpsb
and
insb
push
adc
lret
mull
lock
sub
push
outsl
and
jle
mov
cmp
int3
sti
dec
push
jl
cwtl
loope
mov
adc
add
inc
and
sbb
pop
xchg
ljmp
nop
aad
je
pop
stos
ror
mov
lods
jb
dec
inc
pop
adc
out
mov
pop
add
leave
insb
fadds
int3
inc
add
xchg
jb
or
mov
lcall
jae
pusha
cmpsl
add
and
shlb
adcl
movsb
subb
mov
or
push
cmpsb
cmp
or
inc
mov
scas
das
es
push
cmp
push
push
ret
lcall
mov
lcall
repnz
mov
inc
fsts
pop
pusha
and
xlat
jmp
sbb
imul
mov
push
lock
stc
jbe
pop
and
adc
sahf
push
jmp
or
mov
test
cmpsl
mov
xchg
repnz
push
cmp
inc
push
push
dec
sti
out
pusha
je
add
mov
add
pop
sub
es
dec
shrl
jmp
lret
xor
mov
ficomps
xchg
nop
pop
adc
jns
cwtl
dec
rcll
cmp
or
adc
lcall
lds
lods
in
rcr
jnp
and
jle
mov
xor
rolb
lahf
xchg
cmpsl
sbb
out
in
in
push
pop
xor
cmp
pushf
data16
idivb
outsb
cltd
mov
sbb
xor
leave
mov
push
ljmp
int
test
add
addb
mov
imul
in
sbb
test
push
xor
inc
cld
xlat
insb
add
push
and
js
add
xor
adc
in
push
or
add
push
int3
daa
mov
ret
hlt
fwait
subl
sar
jne
push
in
shll
cmp
push
int3
or
imul
cltd
fs
adc
cmpsb
mov
aaa
test
int3
shl
pushf
scas
xchg
inc
sti
or
push
leave
pop
dec
jnp
mov
ja
rcl
imul
inc
push
pop
in
cs
andl
fwait
xchg
push
mov
lock
addr16
mov
adc
push
pop
sbb
or
subl
fcmovnb
insl
stos
and
mov
test
pop
notl
leave
cli
rolb
and
cli
lds
inc
insl
insl
ljmp
add
inc
jmp
jmp
call
xchg
repnz
or
xchg
jl
test
icebp
in
dec
in
pop
movsl
dec
stc
and
insl
cltd
or
and
mov
pushf
jne
mov
jo,pt
aam
ss
inc
not
push
jne
jmp
sahf
cmp
stos
insb
aaa
leave
leave
xor
xor
xor
cld
lahf
xchg
int3
ja
fs
pop
inc
mov
call
xchg
pop
sub
push
dec
cmpsb
test
dec
dec
rcrl
jge
fmull
rcr
inc
in
insl
inc
rorl
jge
popa
or
ss
adc
std
dec
mov
leave
outsl
outsl
pop
xchg
iret
nopl
ret
in
sbb
dec
mov
scas
mov
test
rcr
jmp
ja
mov
jg
fs
cmp
lahf
xor
sbb
push
pop
xor
insb
mov
aam
testl
mov
push
nop
lahf
pop
xor
jno
xor
ror
fdivs
ds
addr16
xorl
xor
stos
mov
dec
jb
or
int3
in
in
stc
mov
aaa
push
aaa
popa
mov
rcr
push
xchg
mov
push
sub
mov
in
pop
gs
loop
rcrb
fsubrp
aad
mov
push
popa
cmp
pop
mov
jle
cld
adc
ret
xchg
xchg
movsb
lds
stos
and
dec
arpl
jg
test
negb
out
das
lods
ret
lret
push
icebp
push
adcb
shll
insb
adc
jb
dec
shr
icebp
sbb
fbld
je
xchg
popf
vmulps
js
sub
stos
daa
mov
ds
push
call
loopne
pop
add
inc
test
jg
inc
popf
xor
cwtl
iret
inc
lret
aas
les
jp
pop
ds
outsb
jae
pop
and
lods
cmp
aad
pusha
jmp
imull
ja
inc
sub
mov
inc
das
outsl
mov
pop
inc
cwtl
or
addl
and
dec
add
add
das
cwtl
aaa
scas
sub
shlb
imul
int3
sti
call
mov
in
out
mov
and
hlt
cltd
cmp
movsl
ljmp
jmp
add
fdivrp
pop
loopne
sub
insl
jecxz
inc
ja
aad
xchg
sahf
and
mov
aas
ja
xchg
push
shl
shrb
scas
add
stos
repnz
loop
mov
mov
scas
or
pop
sarl
int3
cmpsb
and
jecxz
sbb
pop
pop
mov
add
adc
in
inc
jp
sbb
sbb
sbb
fs
adc
rcr
jle
sti
sub
add
movsb
push
sub
lret
mov
sahf
inc
sbb
xchg
add
sahf
push
xchg
inc
movsl
fdivl
adc
adc
adc
jle
and
jne
leave
fdivl
int3
xchg
cmp
ja
inc
push
ja
mov
cmc
daa
push
push
dec
jecxz
enter
dec
iret
jbe
cmp
scas
fadd
sub
fwait
cmc
fnstenv
push
cli
adc
das
nop
mov
arpl
inc
lahf
push
rorl
shlb
add
mov
push
rcl
jo
std
add
add
fwait
loope
fidivs
ret
scas
nop
loope
stos
aad
and
sub
cmp
xchg
jo
fldt
stos
test
inc
les
out
pop
cmc
pop
pop
dec
in
inc
mov
mov
movsb
mov
in
jl
jo
fsts
iret
pop
repz
testb
gs
test
mov
sbb
into
push
dec
int3
call
shlb
pop
pop
mov
lret
add
movsl
mov
ja
inc
sti
xor
jae
decb
lods
jl
popa
les
repnz
jp
stos
loop
ud2
rorb
es
lea
out
cmp
stc
sbbb
cmp
mov
inc
cmc
loop
fwait
jecxz
mov
jmp
loopne
lcall
sub
loopne
dec
iret
and
pop
ljmp
pop
sub
idivl
lcall
std
mov
sbb
decb
mov
nop
cltd
xchg
cmp
and
arpl
loopne
sbb
push
testb
cld
or
ds
and
in
div
out
pop
in
hlt
addl
xlat
ljmp
adc
and
mov
sbb
pusha
adc
stos
xchg
adc
push
jmp
icebp
movsb
iret
or
es
xchg
in
dec
js
inc
sbb
andb
fldpi
les
add
xchg
iret
jb
pushf
dec
in
out
loopne
adc
loop
lahf
and
adc
xchg
lds
inc
mov
ds
jne
inc
sbb
add
incl
ret
dec
jl
repz
cmc
flds
arpl
xchg
stos
add
addl
jns
nop
pop
dec
in
cmp
cmp
movsb
xchg
xchg
insl
inc
inc
mov
adc
mov
xchg
call
cwtl
in
and
xchg
dec
imul
and
fisttpl
dec
jmp
sbb
sub
adc
outsb
dec
incl
shll
fbstp
adc
arpl
aas
in
in
out
cs
je
pop
mov
cmp
decb
roll
jle
pop
mov
mov
jmp
xchg
das
int
sub
mov
cmp
push
enter
hlt
test
pop
call
mov
mov
cld
xchg
dec
adc
or
adc
jge
out
in
pop
shr
xchg
add
sbb
jmp
xor
sub
shlb
jb
push
jmp
movsl
and
int
adc
mov
not
gs
xorb
icebp
mov
scas
movsb
xor
mov
inc
nop
mov
adc
dec
pushf
mov
pop
int3
fistl
fcoml
inc
mov
test
adc
ja
movsl
mov
xlat
lods
pusha
std
ljmp
inc
jbe
pop
pop
das
outsb
repnz
ljmp
shll
cltd
inc
mov
popa
inc
cwtl
pusha
xchg
sub
aad
inc
pop
mov
pop
and
out
pop
ss
sub
and
mov
out
push
mov
push
aam
in
ljmp
push
out
dec
xchg
testl
rclb
mov
daa
cmc
cmp
xchg
fisubl
aam
fnsave
scas
mov
xor
mov
fcoms
jp
sbb
mov
mov
repz
hlt
jns
or
push
das
insb
loopne
ret
fcompl
out
in
mov
adc
pop
ds
loopne
xchg
cli
inc
xchg
aam
mov
push
outsl
testl
dec
pop
daa
add
xchg
add
xor
inc
jo
dec
enter
add
bound
cli
or
push
sub
push
sub
inc
fcmovnb
cwtl
ret
cs
jns
jg
jl
sub
lds
add
xlat
pushf
popf
cmp
cmp
and
jbe
lock
xor
mov
add
sub
ja
ljmp
test
jnp
movb
clc
xchg
std
dec
push
sbb
shl
xchg
mov
push
fcomps
mov
fmuls
cmpsb
dec
pop
stos
mov
fcomip
fdivr
sbb
or
cmpsb
nop
leave
sbb
punpckhwd
jno
dec
imul
daa
pop
daa
aad
pushf
icebp
jmp
push
mov
lret
aas
outsl
inc
mov
dec
loope
js
cli
sub
or
in
xchg
dec
dec
and
mov
mov
lods
xrelease
sub
xlat
aam
lret
jno
cmp
xchg
or
inc
je
push
mov
fdivrs
fstl
shr
bound
es
or
pop
xchg
pop
mov
dec
jg
xor
clc
cli
sbbb
or
pop
leave
mov
in
das
fwait
xchg
pop
fstpt
push
pop
call
inc
int
outsl
out
aas
or
jns
push
popf
into
inc
push
dec
xor
fcmovne
jecxz
dec
pusha
movsb
mov
pushf
icebp
push
in
or
enter
es
shl
aad
sbb
jp
cmpsb
mov
mov
fbld
mov
cmc
test
jmp
scas
sahf
push
sarl
jb
mov
and
xchg
pop
imull
cmp
lea
pop
add
jnp
fadds
pop
sbb
aas
lahf
pop
dec
adc
loope
test
push
sbb
dec
push
inc
jmp
push
enter
mov
psubsb
lret
mov
push
pop
data16
sti
lret
cs
repnz
lods
outsb
fwait
das
cmp
shlb
sbbb
lock
loope
cli
xor
shrl
add
shld
add
aam
lds
jge
mov
lods
mov
or
inc
mov
stos
or
test
mov
xchg
xor
pop
enter
aam
loopne
lods
aam
mov
sbb
test
pop
dec
clc
xor
loopne
dec
rol
test
pop
addr16
xor
dec
push
mov
cld
adc
cmp
fdivl
iret
test
push
xchg
dec
stos
pop
scas
push
pushf
scas
out
stc
in
jle
mov
and
je
clc
rcrl
call
insl
imul
add
cli
or
aaa
ja
pushf
jno
and
das
cmp
xor
loope
scas
js
test
xchg
outsb
callw
adc
mov
in
add
adc
int3
dec
loop
pop
inc
inc
jge
das
sub
adc
inc
out
scas
iret
rclb
aad
test
fstps
lret
int
jge
pop
dec
xchg
rcrb
jp
xor
dec
jge
mov
or
push
pop
sbb
insl
out
cmp
fs
mov
sbb
add
xchg
pop
mov
mov
xlat
cmpsl
andb
or
sub
add
sbb
sbb
sub
sbb
jo
test
mov
jb
leave
cmc
lcall
test
xchg
mov
adcb
dec
jno
fs
int
fidivrs
ficomps
pop
sbb
shlb
add
test
std
mov
or
inc
sub
enter
les
mov
nop
and
mov
testl
imul
das
lahf
cld
into
jmp
xor
icebp
and
test
js
inc
push
sbb
test
fldcw
jo
ds
arpl
xchg
inc
stos
daa
add
sub
test
fucomp
aam
orb
xor
and
xor
mov
xorb
andl
pop
mov
jo
jnp
add
pop
in
sbb
mov
sub
and
and
xor
mov
add
stos
cld
ret
xor
add
add
idivb
pop
xchg
dec
sbb
out
ja
xor
das
pop
ret
or
outsb
stos
pusha
loope
cmp
cld
push
movsl
lcall
mov
jmp
and
adc
loope
mov
int
xor
arpl
pop
lock
and
sbb
ljmp
cwtl
loope
aad
mov
leave
mov
pop
jns
mov
rorl
sbb
sub
scas
pusha
test
jle
test
addr16
aad
pop
and
inc
xchg
cli
ss
stc
mov
test
lahf
pop
enter
addb
dec
cmp
popl
jae
pushf
xlat
jmp
call
mov
mov
dec
ss
mov
push
ljmp
out
cmc
mov
daa
xor
mov
addl
mov
xchg
outsl
add
imulb
in
aam
xlat
add
push
pop
inc
ret
xor
jnp
jp
stos
cmp
aas
pop
rorb
mov
pop
bound
cmc
jbe
jno
dec
aaa
mov
hlt
cmpsb
sti
lea
rolb
inc
dec
pop
mov
sub
outsb
pop
mov
adc
xor
bound
pop
les
sub
cmp
imul
scas
sbb
adc
test
mov
cld
adc
insb
or
sbbl
mov
dec
les
mov
sub
adc
mov
pop
mov
js
jb
pop
sbb
je
sub
jne
or
inc
mov
lret
inc
dec
xor
xchg
mov
pop
inc
pop
xchg
and
sub
jecxz
inc
and
mov
insl
cmp
sbb
pop
xchg
test
mov
mov
mov
dec
xor
jle
pop
inc
cmpsl
mov
test
enter
scas
cs
mov
jns
leave
clc
inc
mov
jmp
test
test
mov
or
leave
outsl
push
sub
adc
lcall
call
orl
xor
stc
jmp
fstpt
mov
xor
push
out
inc
imul
mov
push
stc
inc
fsubs
sbbb
jl
add
mov
pop
call
inc
aaa
cltd
test
lret
xchg
push
iret
in
adc
mov
sub
fistpl
movsb
out
int3
xor
mov
adc
sbb
xchg
mov
lret
ficoms
jmp
mov
xor
add
cmp
cld
aam
inc
test
test
in
sbb
fists
or
shl
cmp
dec
enter
and
cs
shll
jbe
jno
fs
lock
inc
repnz
test
push
and
mov
push
cmp
sbb
sub
mov
repz
sub
add
add
jnp
ret
stc
pop
ret
cmpsl
inc
pop
stos
mov
xchg
push
mov
and
stos
popf
lock
push
daa
pushf
fwait
add
dec
dec
stos
xchg
jg
test
or
adc
cmc
pop
jns,pn
inc
in
iret
jge
cli
pop
in
stc
lods
push
mulb
add
enter
mov
fucomi
mov
rol
std
out
lcall
lret
dec
mov
insl
or
lret
fiaddl
pmaxub
test
xorl
iret
dec
push
mov
jp
fst
push
xchg
imul
mov
mov
cld
and
shrl
ja
mov
test
push
jo
push
sub
in
lahf
hlt
movsl
xchg
ficompl
vmread
mov
xchg
fsts
imul
xchg
fs
xorl
mov
pop
xor
xor
mov
adc
cmc
jo,pn
dec
fdivs
bound
cmp
sarl
jbe
adc
cmp
aam
sarl
jb
sahf
rclb
enter
cmpsb
add
daa
or
ret
test
mov
js
in
lea
mov
inc
mov
xchg
aad
loop
cltd
pop
cli
pop
je
xchg
addl
aad
scas
cmc
adc
mov
ret
xor
xchg
xchg
cmpsl
and
scas
jge
imul
pop
pop
mov
pop
out
sub
mov
ficoms
mov
mov
inc
in
add
push
out
mov
loope
fdivp
or
mov
pop
xchg
sub
jo
scas
fdivp
xchg
push
addb
jle
pop
lock
cmp
scas
xor
and
pop
roll
dec
imul
les
imul
enter
pusha
aas
xchg
test
inc
push
xor
insb
iret
aam
xor
and
pushf
dec
dec
jge
mov
add
and
inc
mov
shrb
inc
das
sahf
cwtl
test
xor
subl
jnp
mov
inc
cli
dec
push
inc
xchg
adc
add
popa
imul
jno
in
adc
scas
xlat
xchg
adc
fstps
pop
arpl
xchg
sbb
imul
xchg
push
icebp
mov
mov
dec
dec
bound
stos
inc
stos
lcall
pop
pop
jae
out
jo
or
dec
out
lcall
mov
mov
or
jno
pushf
insl
jne
dec
ficomps
test
cmp
dec
or
mull
jmp
mov
pop
mov
fsts
ljmp
jg
mov
out
testb
cmp
pop
imul
mov
sub
aad
or
sbbb
mov
xor
lcall
repz
mov
mov
sub
sub
clc
lcall
mov
loope
pop
pushf
xchg
mov
jb
ljmp
fistl
imul
sub
and
adc
sbb
gs
push
jo
fstp
in
pop
adc
xorl
std
pop
sbb
pop
and
leave
movsb
or
sbbl
push
or
jp
or
sbbb
add
adc
enter
loopne
out
push
aaa
and
fwait
dec
clc
lret
movsl
mov
push
ss
sbb
push
mov
shrb
cmp
cmp
stos
loopne
cmp
mov
hlt
push
jp
jle
sub
ds
xchg
repz
mov
sti
mov
test
xor
pop
mov
in
inc
dec
ret
aam
xchg
je
int
nop
push
icebp
dec
xchg
mov
aaa
dec
lret
push
xor
mov
in
adc
jns
mov
notb
mov
sarl
mov
cli
inc
out
pop
insl
les
leave
adc
shlb
pop
push
insl
or
repz
mov
push
daa
jg
pusha
xor
cmp
out
repnz
movsb
loope
pop
shlb
pop
and
pushf
cmpsl
sub
or
imul
jmp
call
pop
mov
sub
pop
or
iret
scas
xchg
lahf
ss
fisttps
cwtl
pushf
xor
add
adc
fsubr
jecxz
adc
cld
sub
addb
in
mov
in
xor
stos
lahf
fwait
pop
popf
stos
xchg
dec
xchg
mov
rolb
push
xchg
lret
inc
loopne
add
lret
roll
inc
sbb
jle
cmp
xchg
mov
dec
test
punpcklbw
mov
or
jb
popf
dec
fnstenv
jecxz
movsl
pop
das
fidivl
int3
mov
pop
sub
aad
shl
push
mov
jbe
mov
movsb
mov
mov
insb
shlb
jae
clc
lret
iret
cwtl
push
mov
pushfw
in
lock
jns
or
loope
push
std
add
push
adcl
pop
mov
stc
mov
xor
adc
or
or
fisttpl
and
xor
stc
fsubl
jge
adc
push
icebp
dec
cmp
dec
push
mov
mov
inc
subl
and
or
loopne
xchg
out
arpl
int3
movsb
test
mov
ffree
sbb
popl
mov
mov
pop
lods
xchg
lahf
xchg
test
mov
pop
and
punpckhdq
mov
notl
dec
jp
fisttpll
mov
or
mov
or
jmp
push
or
out
inc
sbb
jb
xor
mov
cmp
andl
fucom
movsb
push
cli
jae
popf
mov
push
sub
rcl
mov
and
test
add
es
aam
cmp
inc
sub
aaa
scas
push
icebp
loopne
stos
aad
into
nop
and
pusha
ljmp
sub
les
out
lcallw
ljmp
movsl
sub
push
mov
sub
xor
mov
mov
mov
xor
push
sub
hlt
push
cmp
adc
lret
in
and
lret
hlt
pop
div
xor
mov
addl
mov
adc
cmp
aam
ror
in
adc
lahf
pop
xchg
pushl
cmpsl
hlt
lods
add
dec
jb
aas
sub
mov
pop
fsubrl
imul
jg
xchg
sbb
shlb
out
cli
inc
jge
lds
xchg
dec
sbb
aas
mov
enter
push
mov
add
sbb
fbstp
inc
icebp
xor
mov
lahf
xchg
popa
ds
test
andl
mov
imul
out
pop
jnp
popf
clc
fwait
xchg
sub
push
stos
jb
je
mov
enter
pop
cmp
push
sbb
fmuls
popf
scas
pop
cli
mov
mov
sbbl
icebp
pop
cmpsl
arpl
mov
dec
sbb
mov
dec
mov
nop
out
in
sar
outsl
push
fcoms
mov
mov
test
sbb
pop
dec
js
push
add
jp
jecxz
test
popa
mov
test
in
pop
jmp
push
sbbl
adc
icebp
dec
xor
je
rcrl
rcrl
pop
xor
sub
xchg
out
fnsave
ljmp
pop
ret
xor
adc
out
cli
xor
int3
mov
pop
movsl
imull
stos
lds
xor
mov
mov
inc
dec
xor
jge
repz
mov
xchg
imul
scas
je
out
fs
fidivl
scas
nop
xor
rcrb
fisubs
sub
push
lds
xchg
aad
cmpsl
out
inc
xchg
pop
enter
decl
sbb
jmp
jecxz
add
jnp
jle
rolb
ja
cwtl
lods
test
mov
cmp
add
xor
and
jg
cmp
js
in
pop
pop
jp
ror
xchg
ds
sti
dec
cs
inc
sub
jl
jg
sub
cmp
scas
xchg
pop
sub
mov
jno
inc
ljmp
divl
xchg
je
dec
xor
popf
mov
pop
roll
sub
mov
std
mov
loope
lock
push
rorl
cwtl
pop
aaa
sbb
add
mov
test
jne,pn
cmp
jp
inc
arpl
push
nop
scas
shr
les
mov
cmp
jne
cmc
cs
pop
add
pop
xlat
xchg
lds
and
stc
mov
cs
repnz
push
sti
addr16
pop
jae
pop
mov
hlt
hlt
imul
out
dec
inc
negl
out
gs
rorl
xor
inc
cmovo
int3
push
mov
ss
jne
test
test
lret
loopne
mov
icebp
sbb
lcall
mov
aaa
stc
jne
xchg
mov
and
ret
jp
adc
lret
clc
or
push
push
dec
inc
lods
ret
jae
mov
imull
add
adc
and
sub
leave
mov
lret
clc
rorl
pop
mov
lods
cli
loope
das
mov
int
dec
mov
add
inc
icebp
and
das
out
mov
movsb
push
icebp
pop
inc
push
mov
inc
jns
adc
int
rorb
pop
adc
mov
aas
or
subl
test
ret
xor
cwtl
iret
int
sbb
into
cmpsl
mov
shl
stos
fstpl
cmpsl
or
cmp
mov
adc
xchg
rolb
dec
and
cmpsb
lret
jmp
lock
pop
scas
sbb
xor
cmp
pop
ljmp
jecxz
xor
inc
mov
out
jmp
flds
fsts
loopne
cs
xchg
mov
stc
popa
cmp
xor
aam
jb
pop
ret
movsb
shrl
and
lods
stc
insb
addr16
fildl
jb
and
js
ds
popa
loope
testb
in
ret
inc
outsb
add
xor
mov
mov
xor
lds
call
es
dec
lahf
jg
sahf
inc
add
mov
sbb
adc
movsb
mov
ljmp
inc
incb
imul
adc
xchg
dec
shlb
dec
jae
jp
into
mov
pop
arpl
jno
cmc
loop
jl
mov
sub
add
iret
sti
adc
mov
and
sbb
sub
inc
push
mov
in
jbe
pop
add
fcoml
mov
mov
xchg
add
push
add
aas
add
repz
xchg
dec
xchg
pop
int
inc
movl
adc
scas
xchg
fistps
fdivrl
in
xchg
mov
push
add
cmp
adc
xor
cmp
mov
dec
adc
xlat
pop
and
sbb
pop
cmp
and
fstp
xor
loope
mov
push
fmuls
lock
fisttpll
push
sbb
gs
scas
lds
cld
addb
dec
in
mov
cld
mov
iret
add
scas
xlat
je
dec
fbstp
fwait
adc
pop
push
lcall
inc
mov
aaa
faddp
faddp
lock
push
loope
fmull
fimull
sub
cmp
adc
je
addr16
adc
xor
out
or
lret
rcrb
jg
cmp
lods
icebp
add
ret
and
outsl
pop
xchg
mov
sti
insb
adc
xchg
xchg
mov
sub
or
push
add
incl
inc
cli
mov
fs
pushl
jae
mov
jbe
mov
lret
std
or
jg
dec
push
and
js
loope
add
dec
or
dec
arpl
popf
cwtl
cld
and
or
movsb
loopne
mov
ret
ret
add
mov
pop
lods
push
ficoml
xchg
add
andb
inc
or
repnz
lock
xor
fdivl
cmp
add
loope
outsl
addb
jge
movsl
mov
imul
imul
xchg
mov
sarl
ficoms
fwait
cmp
cmpsl
pop
nop
lret
aad
add
dec
pop
sub
dec
mov
in
hlt
fldenv
add
inc
sbb
ret
or
icebp
ficoml
repz
cmp
mov
dec
scas
mov
mov
xlat
xchg
ja
inc
test
mov
push
test
xchg
popa
sbb
xchg
out
and
nop
mov
ldmxcsr
cmp
mov
mov
xchg
xor
add
xchg
in
mov
lods
test
sub
pop
xor
test
jl
pop
mov
pop
rolb
jp
lahf
out
addl
xor
out
xchg
leave
faddl
sbb
cmpl
mov
pop
ds
cmpsl
std
imul
fcmovb
cmp
jmp
and
into
pop
addr16
mov
xchg
sub
mov
sbb
cltd
xchg
leave
arpl
jno
mov
cmp
rolb
xchg
sub
mov
mov
add
cmp
lahf
xor
sub
xor
cmp
xchg
jecxz
sub
sbb
lcall
inc
jp
enter
xor
sarl
in
cs
xor
scas
ret
mov
jae
cwtl
inc
jbe
mov
dec
cmp
xchg
add
sub
roll
jno
jb
sbb
roll
jne
lahf
arpl
in
icebp
push
push
mull
jae
shlb
sub
mov
inc
inc
icebp
or
mov
pop
aas
enter
ja
aam
cmp
cmp
loope
int
xchg
xor
rcll
lret
xchg
lea
inc
cmp
test
ret
cmp
sahf
arpl
adc
fadds
jge
pop
jae
shlb
aad
mov
imul
ret
mov
nop
fstpt
shll
mov
or
inc
fidivl
test
jb
dec
daa
lods
lods
ret
mov
insb
cs
xchg
dec
out
cmpb
aam
pop
mov
mov
xchg
jle
imul
lcall
mov
jle
or
xchg
cmp
dec
pop
xchg
dec
arpl
xchg
popf
gs
push
mov
lds
sbb
lods
pop
pop
xchg
jge
lcall
mov
popa
add
sbb
cmc
lds
cmpsb
jp
cmpsl
pop
cmova
iret
test
xor
ds
movsb
rclb
push
xor
pop
aas
scas
pop
cmpsb
hlt
and
pop
xchg
sub
adc
pop
movsb
fldenv
pop
xchg
daa
adc
outsb
push
fbstp
and
fisubrl
push
lock
sub
and
mov
in
xchg
and
lds
xchg
sub
sti
sbb
cmp
ret
nop
add
mov
mov
fcmovb
aam
sub
test
popf
int
jnp
xor
repnz
push
mov
lahf
xchg
pop
dec
sti
cld
mov
or
jae
ljmp
stos
cmp
add
faddl
jno
repz
add
sti
sub
jns
rcl
push
sbb
jne
mov
cli
mov
jbe
mov
jae
cmp
pop
out
divb
xor
push
and
shl
out
adc
call
sbbb
inc
push
lcall
cmpsl
xlat
enter
jnp
push
xchg
jmp
jp
mov
mov
pop
iret
cmp
dec
je
adc
mov
add
out
dec
mov
xor
inc
test
pop
inc
cld
jno
sahf
push
cmp
filds
imul
cmp
pop
leave
sub
hlt
je
aad
lret
pcmpgtd
add
xchg
pop
cmp
andb
cli
cmp
sbb
pop
jbe
sysret
testb
rolb
ja
xchg
neg
daa
xchg
add
xlat
pop
movsl
ret
ret
mov
lds
cmpb
jmp
mov
sahf
daa
ret
outsl
adc
addl
pop
jnp
xchg
xchg
sti
int3
adc
inc
test
movl
ret
xchg
xchg
mov
add
cmp
mov
ljmp
fstl
lahf
jnp
cmp
movsb
fimuls
xchg
out
stc
mov
sarb
push
add
and
dec
xchg
in
xchg
mov
lock
addr16
rorb
loopne
inc
xor
inc
fnstcw
scas
xchg
sub
sub
sub
jle
jmp
lcall
xchg
ret
mov
fimull
push
into
push
lods
jp
sbb
jbe
xchg
scas
adc
jae
popf
lahf
xchg
mov
in
mov
pop
leave
clc
inc
jae
mov
xor
cmpsl
stos
mov
add
mov
bound
push
cmp
jmp
mov
idivl
sbb
mov
add
jnp
pop
stos
rcrl
enter
imul
mov
xor
mov
lahf
loope
subb
arpl
std
dec
adc
jle
adc
cmp
sti
es
sbb
std
shl
jecxz
sti
out
clc
xchg
rcrl
fidivl
xor
pop
mov
xor
ret
imull
push
mov
push
leave
add
setae
xchg
pop
jecxz
daa
cmp
inc
mov
mov
xchg
fsubr
or
lock
aaa
fstpl
es
mov
sub
xchg
xchg
aam
xor
dec
pop
fstps
pop
pop
cmp
jb
divb
jecxz
imul
mov
lret
xchg
jp
ss
mov
pop
adc
scas
mov
hlt
xlat
loop
out
mov
mov
shr
sar
mov
aas
loop
dec
scas
mov
cmp
mov
loope
sbb
dec
fwait
loop
jns
lock
inc
push
xchg
insb
mov
and
icebp
and
bound
or
imul
jle
mov
mov
cwtl
int3
movsb
pop
ret
lods
outsl
js
aas
xor
sahf
mov
outsl
test
lea
pushf
nop
sbb
cmp
and
push
mov
dec
scas
in
mov
mov
jne
mov
insl
push
add
and
or
and
or
lcall
je
mov
sarb
lock
ret
push
jl
mov
xor
push
frstor
xor
mov
adc
dec
sub
divb
mov
pop
out
je
lcall
mov
cmpsb
lea
and
sahf
jae
lcall
clc
stos
xor
test
pop
dec
testl
push
push
cwtl
or
ficoms
and
jae
aam
shll
lea
adc
jbe
and
lods
add
or
outsl
sbb
insb
mov
in
xor
jecxz
out
ljmp
lcall
cmp
repz
push
shrl
movsb
inc
enter
xor
loope
push
enter
xor
cwtl
movsb
pop
popf
movsl
outsl
cltd
out
adc
iret
pop
and
jno
negb
xlat
mov
and
sub
test
jle
sub
and
pop
sbb
sbb
jnp
cmp
dec
das
mov
rorl
inc
add
push
mov
repnz
lahf
pop
adc
fsub
rol
aas
or
into
shll
xchg
dec
mov
sbb
add
or
test
pop
cmp
aam
loop
dec
inc
xchg
rolb
movsl
sahf
add
mov
xor
xchg
repnz
xchg
push
ja
xor
imul
test
fsubrs
mov
xor
or
pop
xchg
or
mov
xor
pop
in
jl
jnp
cmp
sub
push
sub
clc
call
int
inc
movsb
push
outsl
lret
xchg
andb
gs
push
jne
push
mov
test
dec
ss
jnp
ss
xchg
lods
movsl
movsb
adc
sub
mov
cmp
adcl
or
push
mov
jmp
xor
scas
lods
jb
cmp
fimull
or
dec
out
adc
fwait
outsl
cmp
sbb
add
cli
adc
dec
cmp
stos
repnz
rcrb
loop
sarl
pop
aas
lock
mov
add
iret
dec
fdiv
cwtl
jmp
arpl
add
cmp
sub
out
sahf
add
jo
ljmp
daa
movsl
or
lret
and
jo
fnstcw
in
pop
dec
imul
jp
push
in
lcall
mov
cli
inc
pop
ljmp
inc
cmp
xchg
icebp
cwtl
and
inc
out
cs
pop
mov
inc
pusha
jns
xor
js
jg
lods
mov
repz
into
pop
adc
nop
imul
push
xchg
dec
sub
mov
cmp
nop
pop
in
and
and
int
outsl
rcrl
enter
inc
mov
das
and
sarl
cmpsl
aam
leave
sbb
not
push
sub
lret
sbb
jbe
pop
cmpsb
mov
xlat
loope
lahf
movsb
mov
mov
mov
pop
lods
or
scas
cmc
lcall
les
in
sbb
aam
lock
jge
adc
xor
push
mov
xorl
cmp
rclb
and
xchg
xlat
inc
les
inc
enter
adc
sti
jmp
mov
repz
int3
sub
or
push
sub
enter
pusha
and
pop
xchg
push
daa
add
inc
scas
jmp
mov
icebp
pop
jp
mov
jo
sub
daa
ret
add
add
repz
mov
arpl
sbb
xchg
test
or
push
jp
push
push
jns
jb
jns
lods
add
adc
and
stos
cmpsb
mov
jne
cmp
and
int
scas
sti
loopne
and
inc
mov
fisttpl
dec
jno
push
add
and
mov
fwait
cli
repnz
inc
shl
adc
repnz
call
or
js
nop
leave
mov
enter
push
test
movsw
adc
and
jnp
jmp
xchg
rcrb
ljmp
in
cmp
test
mov
xor
dec
ret
xchg
jnp
aad
into
mov
push
jl
mov
scas
xchg
mov
scas
outsb
cmp
repnz
outsb
ja
loope
sarb
pop
movsb
push
loop
add
loopne
hlt
ret
push
aad
insl
sahf
lds
pop
fcoml
dec
inc
pop
and
dec
push
mov
cmpsl
adc
mov
jge
xchg
pop
test
sti
mov
stos
inc
or
mov
adc
and
inc
mov
inc
mov
or
jne
jb
xor
pop
xor
stos
repz
jle
mov
inc
loopne
mov
xor
sti
ds
cmp
lahf
xchg
pop
stos
fidivs
fcomip
lret
jg
mov
mov
out
jp
iret
out
stc
pusha
in
or
movsb
jge
adcl
in
das
int3
sbb
sbb
pop
pop
test
xchg
mov
outsl
nop
push
pop
stos
cmp
insl
insl
ret
lds
into
inc
adc
in
cmp
fimull
in
jo
mov
jno
mov
jbe
xchg
jns
fnstcw
imul
jmp
adc
mov
push
dec
shl
std
mov
rcrl
scas
add
jo
xlat
xor
adc
push
lea
outsb
repnz
out
mov
test
push
lock
add
mov
fs
xchg
sub
hlt
pop
jae
xchg
lcall
push
mov
fcomi
nop
call
ja
push
sbb
bound
cmpsb
inc
mov
dec
sti
cmpsl
cmp
pop
or
push
lods
imul
and
lcall
or
scas
push
push
loope
inc
mov
jp
stc
mul
pop
push
cmp
imull
sbb
xchg
lret
add
dec
aaa
inc
cmp
imul
xor
push
loope
clc
imul
dec
sub
mov
jns
ds
and
pop
sub
push
or
sbb
xchg
loope
xor
inc
cmpsl
mov
add
imulb
in
into
das
fs
xchg
xchg
mov
inc
notl
adc
push
inc
mov
push
ret
mov
aas
push
pop
popf
pop
outsb
ficoms
aam
pop
or
hlt
in
repz
push
testl
mov
ss
fwait
mov
iret
scas
insb
sbb
xchg
push
shlb
mov
push
and
add
rcrb
stos
dec
mov
xor
mov
lret
xor
adc
lods
imul
or
repz
pop
data16
and
gs
test
insl
xchg
push
pop
xchg
inc
js
mov
add
or
jmp
add
push
mov
roll
imul
fcmovb
out
sahf
push
addb
je
cltd
inc
dec
out
jbe
sub
push
push
loope
and
cmp
testb
mov
shl
mov
repz
or
cmp
stos
cltd
mov
mov
aas
push
mov
mov
xchg
lds
pop
jo
repnz
pop
and
add
cmp
jnp
mov
aas
scas
or
inc
rclb
iret
dec
mov
sbb
or
loope
bnd
cltd
lods
call
imul
subb
inc
push
jg
jne
xchg
cmp
js
mov
call
mov
insb
xchg
cwtl
pop
add
lret
insl
or
jo
leave
fstl
pop
shll
es
pushf
ja
xchg
imul
pop
mov
dec
jmp
out
xchg
xlat
jnp
sahf
xchg
movl
fiadds
out
sub
jle
jle
jecxz
enter
int3
sub
rolb
jg
mov
push
insl
fdiv
cmpsl
xchg
push
testb
arpl
push
mov
mov
js
es
loop
fisubl
push
push
shl
shr
test
repnz
jnp
dec
insl
mov
pop
daa
enter
orl
addr16
xchg
out
lods
inc
dec
pushf
negl
in
stc
in
sahf
jge
sub
sti
xchg
fs
je
add
pop
mov
pshufw
mov
bound
les
inc
insb
stos
sub
movsl
adc
adcl
pop
int3
lds
icebp
sbb
push
jb
js
mov
testl
mov
and
fiadds
and
push
dec
movsb
mov
mov
stc
insl
insl
sbb
mov
repnz
stos
push
test
or
dec
lcall
rcrb
lahf
push
ficomps
sbb
jbe
fbstp
push
xlat
mov
loopne
mov
xchg
sbb
incl
ljmp
xchg
and
in
and
mov
int
imul
cmpsl
stc
push
xorb
mov
push
rol
ret
add
shlb
inc
mov
mov
and
cmp
and
dec
xchg
pop
cmp
cmpsb
cmpsl
mov
and
in
mov
jl
adc
sub
cltd
call
aas
push
cmp
adc
and
movsb
mov
xlat
test
adc
push
pop
pop
sub
in
jp
xor
aaa
mov
in
fcomip
and
jge
mov
in
xchg
mov
sub
mov
popa
push
ficompl
or
ja
add
jl
ds
aad
inc
cld
sub
ss
daa
icebp
gs
in
and
rolb
adc
je
jecxz
jnp
push
mov
nop
add
popf
sbb
push
sbbl
adc
dec
into
xchg
push
enter
js
mov
fcmovu
xchg
sbb
ljmp
push
xchg
sbb
enter
enter
mov
mov
cli
sub
xchg
inc
push
mov
nop
add
dec
stc
inc
pop
ds
inc
cmpsb
shlb
dec
xchg
mov
js
push
push
into
fs
or
mov
mov
push
mov
adc
fisttpl
aaa
sahf
outsl
outsb
js
bound
lods
sub
sbb
push
or
dec
ss
xchg
xchg
subl
push
and
fst
test
pusha
add
cmp
pop
inc
add
push
cmpsl
sbb
pushf
add
inc
pushf
xlat
adc
adc
sbb
js,pt
jg
int3
iret
mov
lock
in
dec
pop
jg
jnp
out
inc
outsl
sahf
movsl
jecxz
push
push
jmp
std
add
sahf
xor
add
fisubrs
jns
scas
hlt
in
dec
cld
pushf
and
or
test
pop
and
sarb
stos
movsb
loopne
mov
jbe
ss
repnz
fwait
ret
xchg
ds
jp
sbb
test
adc
repnz
and
dec
jge
fisttpll
outsb
jbe
movsl
cld
into
cwtl
outsl
pop
icebp
inc
pcmpeqb
dec
adc
pop
mov
dec
mov
xor
mov
sub
xchg
xor
adc
jmp
aam
xor
in
js
sti
out
iret
idivl
aad
pop
lds
xchg
stc
shlb
out
movsl
insl
ss
inc
mov
jnp
xor
movsl
popf
inc
outsb
out
das
fadds
lds
mov
or
jmp
aaa
cmpsb
stc
mov
pop
lods
cld
and
adc
js
push
xchg
inc
test
div
scas
xor
scas
dec
sub
fstps
push
aas
icebp
push
aam
mov
or
sbb
add
mov
iret
pop
lret
sahf
push
pusha
nop
jns
fstps
lods
ja
xchg
mov
dec
xlat
inc
add
pop
inc
sbb
xchg
cmp
jmp
test
cwtl
jnp
jns
sub
adcb
clc
loope
inc
inc
add
std
xchg
int3
mov
push
scas
lea
test
jecxz,pt
arpl
lods
int3
mov
jl
rcrl
adc
inc
sbb
jb
and
mov
jp
sbb
mov
pop
and
ja
or
das
dec
jl
pop
push
add
sbb
fimuls
cmp
xchg
push
push
inc
or
push
add
mov
mov
lods
and
lods
arpl
scas
and
adc
psrld
testl
pop
sbb
icebp
and
lret
cs
jnp
pusha
mov
out
ror
adc
loope
mov
jl
lock
fnstcw
push
dec
sbb
pop
sub
popa
push
jns
push
imul
inc
out
pushf
lea
push
roll
js
mov
in
out
sub
jl
sub
cmp
push
push
scas
push
mov
mov
test
jecxz
call
sbb
sbb
mov
add
dec
stos
arpl
mov
push
jae
es
sbb
mov
cwtl
dec
loope
leave
mov
fdivrs
fadds
sbb
out
pop
or
cmp
add
fwait
and
loopnew
mov
mov
loop
in
pop
cmpsb
out
dec
mov
fs
mov
or
jb
dec
or
mov
jmp
push
filds
clc
mov
xor
rcll
cmp
adc
movsb
dec
mov
mov
mov
nop
or
cmp
ds
sbb
fwait
leave
test
sbb
mov
or
mov
loopne
and
ret
adc
outsb
lret
das
xchg
das
cmp
inc
test
dec
dec
jb
jge
je
add
pop
push
xor
pop
fs
mov
or
mov
ds
inc
push
scas
cmp
insb
loope
dec
add
pop
cli
or
movsb
jp
push
xchg
lds
pop
cmovb
movsl
icebp
jge
and
popa
mov
dec
and
adc
testl
loopne
arpl
pop
cmp
je
push
cmpsl
push
setbe
sahf
dec
and
add
int3
jns
fimuls
adc
jge
push
jbe
cld
sarl
xor
sbb
cli
icebp
mov
aas
scas
cmp
in
ret
out
add
gs
loopne
pusha
sbb
dec
es
cmp
out
loope
push
test
pop
lcall
mov
jl
sub
dec
and
imul
repnz
mov
mov
insb
js,pn
adc
mov
cmc
dec
xchg
daa
inc
roll
or
lahf
jae
adc
xor
je
pop
test
les
fildll
je
dec
xor
and
xor
sbb
pop
scas
add
mov
lds
pop
adc
push
aas
mov
push
in
dec
jne
fsts
pop
push
mov
pop
out
cli
mov
add
pop
sbb
cmpsl
add
xchg
mov
int
andl
in
ret
xor
cltd
fisubl
cltd
pop
test
push
in
mov
push
cmp
mov
xor
fs
call
dec
in
test
call
loop
aas
fisubs
adc
cmpb
cmp
mov
jae
fsubp
cld
pop
push
push
lcall
lret
jl
aaa
add
lods
mov
test
xchg
cmpsl
add
xor
rcll
cmp
pusha
jle
outsl
stos
in
adc
cmp
mov
mov
cli
push
mov
scas
push
dec
lods
int
out
mov
cmp
mov
les
decb
lret
and
out
nop
movsb
jne
adc
fs
lcall
fdivr
ficoml
ljmp
data16
out
insl
je
enter
sub
mov
std
rcr
mov
lods
and
stc
pop
sbb
rcrb
push
adc
cwtl
loope
sbb
cmp
loopne
aam
mov
scas
inc
or
ja
loopne
out
sbb
lcall
push
insb
daa
stc
add
xlat
mov
imul
cmp
imul
cmp
push
mov
adc
pop
push
push
arpl
test
mov
mov
xchg
and
ficoml
mov
cmpl
xchg
repz
fldl
mov
and
or
add
les
movsb
xor
mov
inc
roll
test
test
cltd
push
and
pop
mov
sahf
cmp
jbe
lock
pop
add
cmp
cs
push
adc
daa
lock
lds
movsb
push
mov
dec
or
cmp
cmpb
mov
xchg
popa
dec
or
push
sti
push
leave
enter
adc
sbbl
andnps
xchg
ret
xchg
pop
aam
insl
push
mov
xchg
push
daa
push
test
or
shll
add
dec
mov
fwait
jge
lcall
mov
xchg
mov
and
mov
popa
ljmp
jns
fwait
cmc
in
lcall
xor
jp
movsl
dec
or
int3
add
cs
out
mov
inc
sbb
pusha
sub
or
int3
inc
xor
sbb
outsb
mov
push
iret
cmp
mov
jle
xor
sub
inc
test
sub
and
not
pop
js
js
jb
repnz
movb
mov
ljmp
add
cld
pop
repz
xchg
sar
movsb
xor
je
pop
ja
enter
repz
mov
mov
mov
lret
lret
sub
xchg
xchg
jno
jnp
sbb
add
cli
xor
jge
or
test
aas
inc
push
jge
out
leave
or
iret
lods
push
and
orl
pop
cmp
sbb
jle
les
inc
call
scas
sub
mov
push
inc
icebp
btr
aam
lahf
and
and
loopne
adc
jg
shlb
push
add
jge
scas
mov
inc
fdiv
pop
jae
or
cmpsl
and
pusha
mov
cwtl
fwait
pusha
jg
loope
int3
aaa
shrb
jle
push
xchg
push
dec
aas
lret
je
inc
xor
icebp
or
jno
aad
popa
mov
fcomip
scas
repnz
jp
enter
test
out
push
out
mov
sbb
lock
cmp
out
int3
lret
mov
sub
mov
loopne
imul
dec
in
lcall
mov
shlb
sub
cmp
stos
adc
sbb
outsb
pop
mov
test
jge
jo
jns
xchg
cmp
inc
xabort
mov
dec
or
scas
inc
adc
decb
inc
es
insl
ret
push
push
dec
lret
jno
cmp
push
insb
stos
pushf
xor
push
sub
push
or
mov
repnz
xchg
insb
ja
cli
testb
or
jmp
dec
lods
and
sahf
jo
js
lods
add
out
and
mov
or
pop
mov
out
imul
mov
lods
inc
and
insb
xchg
daa
add
mov
mov
rclb
movsl
js
mov
cmp
pop
xor
jne
daa
pop
mov
mov
bound
or
mov
jecxz
ret
push
gs
cmc
ss
xchg
push
sbb
push
insb
mov
cmp
imul
sarb
jns
les
popf
leave
sub
add
loop
xchg
xchg
xor
lea
shlb
sub
insl
mov
clc
adc
xchg
mov
xor
jge
cmpl
aaa
dec
inc
int
fcmovu
cmp
xchg
xchg
mov
mov
das
jmp
sbb
jle
lock
ja
fwait
xchg
add
cmp
dec
clc
fdivs
mov
pop
mov
subb
out
rclb
mov
js
push
fisttpll
dec
mov
push
push
and
in
fimuls
pop
stc
sbb
arpl
aam
or
sti
movsb
cli
or
fldt
mov
pop
aad
repz
sbb
adc
xor
adc
repz
mov
or
daa
sbb
or
dec
xchg
or
dec
jp
lret
imul
sbbb
mulb
mov
inc
or
and
call
pusha
and
and
sbb
leave
pusha
es
jne
add
add
not
jp
pushf
es
push
inc
or
adc
adcb
jo
test
shlb
aaa
inc
and
and
scas
out
clc
add
nop
and
pop
sub
xor
push
dec
xchg
pop
subl
cltd
push
gs
andb
loopne
sbb
pop
outsb
lods
cmp
mov
jl
jle
xchg
dec
insb
movsl
push
in
dec
inc
sbb
mov
iret
cmp
call
push
outsl
je
pop
mov
addr16
push
pop
iret
sbb
adc
pushf
push
mov
or
push
testl
adc
mov
rcl
xchg
or
mov
adc
push
push
push
jg
and
movsl
sbbl
lds
lods
adc
stos
test
or
cmp
sahf
dec
jmp
push
fs
mov
add
pop
xchg
dec
xor
cmpsl
dec
push
cmpsl
xchg
shll
push
xchg
adc
xorb
js
add
xor
shl
xor
cltd
or
adc
xchg
add
push
xchg
xor
cmpsb
insl
jae
xchg
jmp
div
ret
mov
arpl
lret
aas
into
xchg
mov
dec
daa
loopne
mov
out
push
mov
daa
inc
push
xchg
imul
mov
jge
cmp
das
iret
bound
sarl
outsb
std
fwait
push
in
mov
pop
fdivs
es
ret
xchg
cmp
push
jecxz
leave
cld
lcall
mov
out
or
rol
mov
scas
es
jge
mov
pop
lods
jle
xor
xchg
outsl
or
sub
adc
sbb
cmp
ficomps
jl
push
jbe
pop
repnz
sub
es
ds
adc
rcr
sub
int
mov
mov
jecxz
icebp
mov
inc
mov
outsl
pop
sub
push
xor
jg
test
jo
push
xor
mov
add
push
pop
pop
push
enter
pop
insb
push
outsl
jno
bound
pop
ds
inc
hlt
mov
into
cwtl
mov
enter
mov
push
cltd
mov
aam
sbb
pop
sbb
lret
jno
lahf
inc
les
scas
xchg
or
fistl
dec
lcall
push
jae
scas
sub
jne
lcall
in
xchg
jns
jae
pop
cmp
pop
movsl
adc
and
hlt
cmpsl
or
int3
jle
arpl
mov
mov
out
mov
mov
in
mov
test
test
pop
in
insl
adc
xchg
inc
xchg
jmp
jb
xchg
iret
ret
arpl
nop
mov
loop
call
scas
loope
test
adc
and
lahf
pop
sub
xor
or
insb
pop
ret
jp
test
mov
jns
lods
or
pop
sbb
sarl
cmc
rorl
xchg
test
imul
push
and
ds
icebp
dec
aaa
dec
punpckhbw
aas
or
mov
xor
cmc
mov
and
inc
cmp
push
and
shrl
out
gs
idivl
outsl
or
bound
shl
lahf
iret
sahf
leave
sub
pop
dec
xor
mov
mov
xchg
aad
xchg
out
popf
sahf
call
sbb
push
les
ffreep
cs
cltd
push
inc
push
xlat
cwtl
dec
pop
xchg
sbb
pop
cmp
outsl
jnp
inc
jp
or
roll
fnstsw
sub
xchg
mov
imul
add
pop
int3
or
pop
mov
or
ljmp
cmpsl
enter
mov
mov
mov
xorb
cmp
hlt
sbb
mov
cltd
dec
out
enter
push
jnp
jmp
add
sbb
mov
cmpsl
insb
in
sbb
sub
sub
adcl
jg
dec
sbb
ss
push
jnp
scas
ljmp
mov
mov
push
rolb
mov
in
arpl
je
add
iret
dec
jg
or
es
inc
mov
insb
inc
xor
push
push
xchg
mov
repz
xor
mov
mov
cmp
sub
loopne
mov
mulb
subb
das
inc
in
lret
incb
xor
jns
pop
sub
fnsave
sar
mov
fsubl
pop
call
pop
sbb
fldcw
and
pop
insb
loop
adc
adc
cwtl
cmpsb
xor
mov
jno
je
and
add
pop
pop
or
and
or
loopne
aas
mov
jae
pop
lds
repz
shlb
bound
dec
cmp
mov
jle
pop
in
dec
ret
xor
clc
sub
xor
fwait
sub
or
jge
pop
sarl
adc
sar
mov
mov
pop
test
mov
xor
dec
xor
lret
in
jl
add
loope
push
sub
sub
aas
mov
lea
dec
in
mov
ss
push
sysret
mov
fwait
and
adc
push
dec
jecxz
ret
in
idivl
xor
push
mov
xchg
ljmp
inc
aaa
mov
lret
in
test
jg
xor
call
jns
test
mull
or
sti
mov
enter
movsl
fwait
pop
mov
add
sub
jg
sbb
jp
adc
mov
out
insl
and
jmp
sbb
in
in
inc
mov
add
jb
jo,pt
add
aas
mov
test
pop
dec
xchg
stc
mov
dec
lahf
sbb
dec
sbb
jns
cltd
aas
jne
mov
fsubrs
adc
jbe
fsubp
jl
dec
div
mov
repz
gs
fcmovnbe
aad
outsb
cmp
pop
call
das
and
clc
jp
inc
dec
pop
mov
inc
sub
lret
test
or
push
cli
outsb
add
icebp
push
sar
xor
mov
rcll
test
sti
subb
lods
mov
out
fistps
lcall
dec
sbb
push
xchg
mov
pop
jmp
test
inc
daa
sub
dec
cmp
daa
in
roll
mov
dec
inc
ja
xchg
sbbl
jecxz
mov
push
popa
xchg
sbb
js
ja,pt
sub
ficompl
ss
add
xchg
inc
jle
inc
pop
jae
iret
test
jp
add
je
jb
xchg
bound
and
pushf
in
incb
xor
testl
call
mov
sbb
aad
cwtl
sbb
add
pop
ret
es
xor
jns
rcrb
subl
es
aad
shrl
pop
hlt
sbb
or
pop
repz
jo
xor
dec
mov
sarl
cmp
add
push
xor
sub
mov
sub
push
mov
mov
adc
pop
cmp
add
pop
cwtl
mov
mov
aaa
push
out
scas
mov
push
adc
mov
rcll
pop
sti
mov
add
mov
mov
jmp
lea
in
fadds
ja
pop
jmp
push
lds
sub
xchg
jnp
fucomi
es
call
ds
dec
js
jge
xchg
mov
sbb
xchg
mov
adc
jl
ss
arpl
xor
adc
jecxz
sbb
int
push
paddusb
iret
and
daa
pop
push
xor
fldl2e
cmp
in
xchg
mov
and
sub
adc
mov
mov
pusha
ret
negl
or
test
inc
movsl
std
fidivl
orb
ficoml
dec
lods
in
icebp
mov
js
jmp
jns
daa
movsb
scas
dec
out
cmpsb
cmpsb
adc
cmp
outsb
xchg
adc
xor
sahf
lret
int
data16
push
cmpsb
pop
fmull
jl
dec
es
adc
push
pushf
push
fists
xor
shrb
mov
pop
sar
out
outsb
mov
mov
out
pusha
rolb
pop
notb
inc
flds
or
es
test
jae
sbb
pushf
jbe
imul
clc
cmpsl
ja
or
leave
cs
dec
sub
rcrb
fidivrs
je
stos
and
xor
maxps
pop
lret
xchg
mov
cmp
jle
mov
cmp
dec
inc
mov
loope
xor
pop
xor
test
pop
sbb
jmp
mov
popf
and
outsb
movsl
cmp
sub
in
lret
filds
xchg
js
mov
cs
pop
stc
mov
fstpl
cmp
out
or
push
push
cld
jecxz
ror
subl
aaa
scas
xchg
and
inc
adc
push
sbb
xchg
push
lret
jmp
ja
jb
dec
shrb
or
xor
cs
rorb
sbb
sarb
mov
movsb
cmp
push
fwait
ss
pop
jecxz
mov
pop
dec
iret
stc
movsl
test
pop
std
pop
sub
cmp
sbb
test
fstpt
loopne
leave
cli
mov
insl
xchg
push
aas
pop
out
sbb
add
out
lods
rolb
fiadds
sub
daa
stc
lea
daa
rorl
xchg
les
cmpsb
ret
inc
add
mov
in
lock
push
out
pop
inc
repnz
lret
iret
dec
ja
ret
imul
loope
or
and
in
dec
cmp
inc
sub
and
fscale
or
pop
testl
xor
shl
sub
lods
jnp
lret
xor
mov
ja
pusha
pop
loope
pop
push
fidivl
outsb
pushf
nop
lock
mov
and
mov
mov
fbstp
test
test
inc
inc
lock
push
add
or
lock
xlat
scas
sub
add
lods
and
mov
stos
or
mov
push
data16
jo
or
leave
iret
xchg
cmp
in
mov
or
hlt
mov
push
mov
iret
inc
ss
rclb
pop
cmpsl
push
xor
mov
dec
mov
xchg
out
and
and
jecxz
loope
sbb
jmp
iret
jle
jp
push
adc
ret
xchg
pop
dec
addr16
inc
lock
jmp
jno
add
mov
hlt
mov
jp
out
sarb
es
bound
movsl
mov
mov
les
xchg
outsb
xchg
out
sub
sub
push
call
pop
inc
xchg
xchg
add
popf
pop
js
jp
lea
scas
add
addr16
lahf
push
add
negl
jmp
lcall
fstpl
pusha
out
inc
je
mov
push
or
js
mov
push
jo
sti
jbe
and
gs
inc
iret
ret
push
negl
mov
aam
xchg
cmp
push
xchg
fmull
outsb
or
add
lret
lahf
cmp
and
nop
sbb
push
mov
sub
adc
xchg
sahf
repnz
ss
sub
arpl
and
mov
icebp
or
inc
mov
mov
ljmp
mov
jmp
jbe
das
xor
xchg
jg
adc
jb
jg
push
adc
sbb
fsubs
sbb
inc
add
push
xchg
jo
xchg
test
roll
jecxz
jl
fs
leave
ror
mov
pop
lds
scas
ljmp
in
mov
ds
push
push
sub
into
mov
nop
jl
cld
bound
gs
dec
fsub
lock
push
lret
jl
imul
cwtl
loope
lods
adc
xor
jnp
dec
pop
jo
mov
lods
xchg
pop
inc
mov
mov
push
sub
sbb
and
cmp
xor
push
mov
into
add
out
push
adc
mov
push
pushf
jmp
mov
push
cmp
insl
aam
adc
neg
inc
aam
add
sti
in
subb
lods
daa
shrl
sub
imul
xor
outsb
pop
fisubl
or
jecxz
lock
xchg
loopne
lds
dec
jno
xchg
nop
adc
fst
in
iret
push
mov
pop
push
push
in
inc
ud1
popf
jp
xor
add
stc
jns
cmpsb
and
mov
sbb
imul
xchg
dec
cmp
jae,pn
stos
sbbl
pop
sbb
out
aaa
jle
mov
pushf
hlt
push
jp
jo
adc
xor
test
sarl
sbb
push
imul
mov
add
mov
sbb
cmp
cltd
stc
inc
mov
push
push
adc
mov
and
lds
push
ss
cmpsb
mov
cld
shld
xchg
pop
dec
loope
mov
out
in
inc
pop
pusha
enter
in
jae
fnstenv
xor
mov
stc
ret
jo
adc
rcrb
dec
lcall
lods
xor
push
outsb
pop
sub
aas
pop
xchg
jg
mov
adc
roll
nop
in
jns
inc
sub
les
pop
xchg
repz
push
add
iret
ret
lds
int
shl
xchg
imul
les
xorl
cltd
add
mov
popf
cli
mov
and
enter
imul
jg
mov
insl
pop
xor
iret
dec
xlat
xlat
mov
and
popf
test
fisttps
lods
pop
mov
jp
push
or
mov
mov
je
jmp
je
pop
inc
xor
add
dec
dec
cli
test
adc
mov
cmp
loop
lret
scas
mov
inc
add
fstl
out
inc
xor
and
xchg
jmp
xor
mov
movsl
pop
iret
in
inc
dec
pop
xor
std
cli
mov
mov
push
outsb
jecxz
jg
icebp
sbb
adc
pop
in
pusha
mov
mov
aad
push
sbb
add
xchg
jge
lret
sahf
cmp
sar
or
bound
pop
pop
add
adc
lret
adc
mov
xchg
jmp
aas
int
inc
jp
mov
and
insl
jnp
lcall
out
xor
mov
aaa
call
jo
ret
or
andl
sub
add
popf
inc
mull
cmp
in
sbb
scas
sbb
add
add
pop
dec
push
test
add
push
pop
mov
adc
shll
dec
sti
mov
addr16
lods
jno
and
repnz
and
cmpsl
mov
and
cmp
sti
xor
and
and
rcrb
and
add
fimull
adc
mov
push
and
shr
pop
mov
or
test
call
mov
aaa
xlat
fwait
or
push
pop
daa
push
in
nop
lahf
loope
fisttps
push
das
inc
mov
sbb
loop
dec
push
and
stos
xor
cmpsl
paddusw
ds
push
lret
xchg
inc
dec
in
test
sbb
or
ret
icebp
pop
xchg
and
push
push
cmp
adc
int3
mov
fldl
js
iret
dec
pushf
test
and
push
inc
inc
movsb
sahf
xchg
movsb
pop
sbb
ss
je
into
mov
and
mov
nop
lcall
enter
aaa
push
push
std
lods
pusha
into
inc
cmp
or
push
std
add
add
ds
push
add
sub
or
cs
sbb
fidivs
or
aam
gs
sbb
js
pop
dec
pusha
inc
dec
mov
inc
push
js
das
push
scas
and
jbe
jmp
add
ds
fldt
sbb
mov
lret
scas
fsub
mov
les
adc
rorl
test
pop
push
adc
fcmove
lret
rcrl
stc
test
shrl
pop
or
pop
out
xchg
shll
fstp
jbe
dec
mov
lea
mov
xchg
and
subb
scas
sub
lret
pop
jnp
xor
xor
movsb
fsubrs
ljmp
mov
scas
int
aam
sbb
pop
aam
mov
mov
dec
jecxz
jno
pop
jmp
std
icebp
lret
mov
ja
fldcw
cmp
xchg
shr
adc
xchg
cmpsb
push
adc
jle
mov
in
dec
add
mov
or
ljmp
push
add
sbb
mov
pop
repz
pop
pop
pop
push
xlat
outsb
data16
stc
shrb
shl
dec
loope
lds
or
xor
jge
mov
aaa
repz
pop
adc
dec
sbb
xchg
push
mov
insl
push
roll
cmp
cld
push
pop
jl
inc
movsb
andb
jmp
sub
pop
movsb
ret
stc
inc
leave
cmp
jge
fstl
add
into
add
clc
inc
shrl
mov
or
add
adc
cwtl
xchg
dec
lods
inc
push
adc
inc
jne
dec
popa
push
push
push
nop
ret
int3
xor
push
jb
rorb
xlat
jne
loope
xchg
stos
xchg
mov
cld
dec
push
stc
sahf
adc
or
dec
in
pop
jnp
inc
mov
ljmp
cmp
or
xchg
cmc
xchg
popf
jnp
or
adc
pushf
inc
loopne,pn
scas
cs
push
inc
in
fbstp
stc
cs
movntq
out
adc
xchg
adc
mov
sbb
jne
adc
xor
cmp
ss
adcl
mov
xor
pusha
push
repz
jo
dec
call
lods
xchg
repz
xor
sti
std
xor
push
xchg
dec
lcall
add
mov
pop
push
mov
jo
mov
lods
cs
mov
pusha
inc
adc
mov
jnp
pop
fisubrs
xchg
cmp
into
rorl
xlat
loope
into
mov
popf
loop
push
mov
jbe
add
or
xchg
or
and
push
addb
lret
mov
cs
aas
rcr
push
int3
mov
daa
out
xchg
mov
and
scas
lret
pop
push
les
fdivs
xchg
and
sbb
popf
into
cmp
hlt
mov
mov
cmp
push
popf
xor
enter
in
adc
fwait
lret
ss
sbb
push
jg
lds
mov
xor
fdivr
jbe
hlt
in
aam
cs
add
adc
into
mov
notl
inc
pop
stc
mov
aaa
adc
or
push
movsb
or
dec
int3
sti
push
sub
and
xchg
cmp
mov
add
mov
mov
lock
dec
popf
push
mov
faddl
lods
adc
pop
pop
jle
ljmp
or
push
jl
pop
pop
aas
and
pop
cmp
xor
inc
mov
mov
sbb
stc
jge
jno
xor
adc
push
js
xchg
and
mov
pop
xchg
outsl
ljmp
std
mov
mov
xchg
mov
cmc
xchg
mov
xchg
sbb
adc
push
clc
in
dec
dec
cwtl
cmp
out
stos
and
out
or
push
xor
jge
adc
scas
jmp
add
aad
mov
aas
push
mov
loopne
fistpll
je
pop
mov
repz
xchg
aad
mov
pop
mov
push
xchg
movl
mov
leave
or
hlt
test
push
mov
jle
mov
leave
rcrb
or
and
lods
fnstenv
pusha
ret
cmp
ficompl
mov
jo
pushf
cmc
sti
fcmovb
popf
jae
stc
sub
mov
mov
in
outsl
push
pop
sbb
int3
test
dec
mov
jns
pop
mov
lret
loopne
in
mov
push
clc
mov
sbb
jp
cmp
mov
cmp
add
or
pop
sub
mov
rorb
adc
dec
dec
add
divl
ljmp
xchg
mov
ds
inc
dec
fldpi
mov
add
imul
xor
xchg
pop
pop
xchg
mov
jmp
adc
push
jecxz
mov
fcomps
nop
in
push
dec
mov
iret
shll
stos
and
xchg
and
test
rolb
mov
xor
push
std
cmp
fdivs
test
bound
cmpsl
ret
fdivl
dec
dec
das
cltd
mov
test
cmp
xlat
cli
hlt
dec
jmp
mov
nop
xchg
mov
add
out
mov
and
jns
push
stos
in
dec
hlt
lret
popa
notl
ret
xchg
repz
int3
loop
lahf
push
sti
arpl
xorb
movsl
ret
xchg
ss
data16
jge
std
cld
leave
add
in
sub
pop
inc
cwtl
and
dec
mov
jl
jne
dec
xchg
xchg
scas
ret
stos
mov
pushf
mov
aad
push
cld
xchg
stc
dec
push
inc
dec
jge
push
push
mov
mov
cmpsl
iret
xor
fprem1
fstps
xor
push
pop
jmp
dec
mov
mov
iret
and
sahf
aas
fs
inc
xchg
into
xchg
lds
mov
and
andb
mov
mov
dec
stos
lods
xchg
inc
lret
add
xor
jae
rolb
add
cltd
in
xchg
pusha
add
pop
bound
adc
mov
lahf
es
cmp
xchg
mov
imulb
nop
pop
insb
xor
rcll
pop
mov
stos
cmp
daa
jge
int
and
loope
ret
mov
stc
cmpb
add
test
push
mov
push
adc
jmp
ljmp
out
mov
adc
inc
mov
stos
jnp
loop
loopne
jg
icebp
pop
loope
push
sub
xchg
xor
mov
jp
sub
mov
push
push
sbb
cmp
sbb
faddp
js
rcl
jge
jp
loop
dec
lods
sub
mov
xchg
data16
gs
add
lahf
dec
nop
imul
pop
mov
lods
cs
or
test
add
fmull
xor
dec
mov
lahf
repz
iret
popa
in
cmp
xlat
push
sub
lock
xchg
jl
sub
xchg
scas
mov
push
mov
loop
stc
mov
inc
or
xchg
and
stos
dec
sub
mov
pop
or
movsl
jnp
mov
rcl
dec
add
nop
scas
movsl
imul
hlt
faddp
fnsave
daa
adc
rorb
xlat
jo
imul
or
cld
inc
jnp
aaa
push
pop
push
into
lcall
loop
xchg
enter
stos
in
sbb
xor
push
fistps
aam
push
scas
mov
mov
and
or
sarl
xchg
mov
mov
test
lds
je
or
inc
sub
adc
test
dec
add
cmp
add
into
inc
ss
sahf
xor
xchg
adc
iret
adc
movsl
push
aas
es
andl
fcompl
pop
lahf
inc
test
lahf
cmp
push
mov
js
or
fs
push
cwtl
aam
and
cs
xchg
fwait
jmp
cld
add
add
outsb
movsl
sbb
add
int
pop
packssdw
adc
lods
bound
bound
mov
inc
lods
xor
sbb
jns
xor
mov
in
sub
jg
sti
jo
xlat
pop
lea
cmpsb
and
int
add
or
or
scas
jbe
sub
xchg
push
sub
iret
and
addr16
cmpsl
loopne
daa
aad
add
jbe
add
xchg
push
fwait
sbb
test
cmp
pop
cmp
test
jp
sub
iret
xchg
loop
xchg
jno
dec
fidivrs
xor
jno
nop
xchg
or
mov
and
sub
mov
cmp
xor
pop
fucomp
jbe
cld
int
mov
jbe
js
xor
pop
rorb
lret
cli
popa
and
call
mov
ljmp
sub
popa
push
lods
test
int3
or
add
xabort
daa
pop
lea
dec
loope
add
inc
mov
aaa
popa
mov
aaa
daa
lret
inc
out
push
fdivrl
cmpsb
mov
inc
dec
push
inc
shlb
push
xchg
dec
adc
add
cmc
aad
xchg
xor
push
lods
call
mov
repz
xor
les
daa
aaa
aad
dec
mov
mov
push
fs
pop
in
sub
mov
pop
sahf
sub
cwtl
scas
adc
cmp
sbb
pop
popf
jl
mov
pop
fidivrs
lret
push
inc
inc
add
das
or
pop
rcll
pop
mov
jg
flds
sbb
xchg
push
fwait
xchg
sub
jae
mov
movsl
std
je
mov
in
sbb
popl
ret
das
push
repz
cmp
push
lret
nop
das
int3
iret
mov
inc
sbb
pop
dec
adc
outsb
lock
and
adc
fmull
shlb
movsb
mov
dec
adc
das
fadds
jge
mov
loope
jae
pop
mov
repnz
dec
pop
mov
pop
dec
push
mov
call
adc
popa
dec
into
pop
xor
push
mov
subb
mov
mov
add
or
cmpsb
leave
aad
mov
cld
rcrb
mov
out
jl
xor
dec
loop
push
xor
pushf
nop
push
push
leave
call
add
mov
inc
inc
test
stc
je
dec
add
xor
xor
scas
cmp
cmc
jo
or
lods
inc
outsl
fnstenv
jg
cwtl
xchg
pop
xchg
jl
cltd
sbb
jbe
xor
stos
jle
js
cmc
push
mov
dec
mov
cld
xor
sbb
mov
stos
jmp
adc
xchg
daa
push
ljmp
lods
inc
dec
cli
ret
ds
dec
movsl
pop
inc
insl
int3
out
pop
inc
adcl
rcrl
cmpsl
bound
stos
and
movsb
add
xchg
mov
or
cmpsb
mov
add
sti
fwait
mov
push
mov
jge
sbb
sbb
cli
mov
xchg
daa
pushf
mov
dec
stos
mov
jmp
add
sahf
daa
push
ja
mov
jge
pop
push
repz
jl
in
fdivrs
push
scas
in
xor
sbb
sbbb
pop
add
les
out
xchg
pushf
rcrl
push
js
xor
ljmp
pop
into
pop
cmp
jne
jge
sbb
cmp
lods
sti
add
xor
add
shr
cmp
mov
outsb
push
mov
dec
sbb
dec
mov
inc
bound
addr16
shl
jne
jo
data16
in
outsb
dec
mov
cmp
and
mov
ret
pop
pop
mov
jno
pop
rclb
pause
xlat
aaa
cmp
sub
add
mov
lock
imul
lret
cmp
je
cmp
mov
xchg
mov
push
jp
inc
ret
aad
push
and
mov
mov
cmc
aam
xor
sahf
push
or
bound
mov
xchg
test
sahf
cltd
lods
roll
push
push
aas
pushf
sub
xchg
pop
pop
mov
mov
test
xchg
repz
insb
lock
cmp
lret
cwtl
sbbl
cli
push
nop
push
jbe
push
jne
or
mov
mov
jge
push
in
clc
push
jae
shll
mov
dec
arpl
cli
mov
in
xchg
loopne
push
ljmp
inc
negl
test
xchg
xor
aas
leave
in
mov
or
jb
aad
jae
sub
fcoml
xorl
sbb
lods
ss
cld
xchg
mov
pop
flds
push
mov
push
sub
ret
xor
imul
roll
mov
scas
xchg
pop
cs
int3
fsubs
jae
xchg
cwtl
inc
pop
or
stos
and
ljmp
cmp
mov
mov
es
dec
sbb
add
orb
lods
lods
lods
in
cmp
inc
jl
add
sub
pop
add
insb
das
mov
popf
in
pop
das
imul
inc
mov
lcall
out
icebp
cli
popa
mov
push
push
scas
mov
shlb
addr16
rcr
cmp
sub
push
adc
mov
jl
fldt
out
aaa
mov
js
sub
fnstenv
mov
mov
lret
dec
jo
sbb
shrb
cmp
and
sub
jmp
or
mul
dec
sbb
cmpsb
inc
jl
push
push
sbb
into
xor
cld
jmp
pop
inc
sar
nop
mov
push
jp
inc
jle
add
pop
mov
or
fs
aad
ret
jle
add
test
in
pusha
sub
and
xor
cmp
aam
mov
push
cmp
push
js
lea
mov
mov
pop
imul
and
jg
and
adc
sahf
push
sbb
scas
adc
mov
les
push
mov
cs
pushf
outsl
sti
cmp
in
sub
pushf
xor
add
loope
mov
je
sbb
int3
scas
dec
fisubs
aad
push
xchg
mov
ret
shll
cwtl
test
loope
pop
pop
mov
popf
mov
loop
sahf
jecxz
adc
test
xchg
cli
roll
loop
test
sbb
je
jb
push
mov
fsubl
ds
or
xor
adc
cltd
mov
int
jae
xor
pop
cmpsb
mov
lcall
movsb
js
ret
int
pop
leave
xor
loop
add
cmc
add
addr16
dec
in
pop
fwait
shll
filds
pop
and
aad
dec
mov
jns
inc
ss
and
fld
mov
xlat
nop
push
das
cs
mov
lret
push
push
insl
test
imull
inc
lods
mov
test
adcb
adc
std
fwait
sub
jp
icebp
pop
add
jns
enter
test
repnz
iret
sbb
imul
sub
aam
sub
push
fstpl
and
in
test
cli
ds
xlat
sub
int
fiaddl
ss
mov
mov
mov
in
push
shl
icebp
test
insb
jae
pusha
cmp
jge
sbb
cmpsb
push
int3
ficomps
inc
iret
cli
adc
mov
fs
inc
and
shll
nop
mov
aad
push
jmp
sub
lcall
loope
nop
loopne
dec
jge
sbb
adc
jns
call
jg
or
les
fidivs
sbb
loope
mov
push
fwait
rcrl
shl
and
ret
xor
cmp
movsl
lret
push
push
mov
addr16
mov
loop
sub
mov
test
in
icebp
fstpl
movsl
stc
mov
std
or
and
hlt
dec
dec
add
jg
xchg
mov
jno
adc
out
repz
into
jno
stos
mov
sahf
ja
shlb
insl
sbb
dec
and
into
icebp
imul
adc
gs
xor
mov
aaa
push
roll
adc
pop
loop
stc
sub
xchg
mov
stos
push
int3
sub
cltd
iret
or
and
dec
daa
add
int3
mov
negb
jnp
inc
xlat
sarb
mov
add
jp
push
push
loop
jg
jne
ss
aad
adc
imul
xchg
or
test
mov
or
jns
fistpll
lods
cmpsb
xchg
mov
adc
aas
jo
mov
in
lcall
add
lcall
inc
sub
fwait
sbb
xor
adc
xor
out
outsb
outsb
xor
repnz
add
into
mov
mov
xorl
mov
sub
div
in
test
cld
xchg
test
into
mov
xor
xor
dec
mov
pusha
stos
js
push
scas
in
cmc
lret
fcmovnbe
imul
jmp
stos
movsl
sub
idivl
mov
mov
xor
or
sub
sbb
adc
adc
leave
sbb
push
jg
push
jmp
xchg
cltd
fcmovnu
dec
outsb
add
je
fimuls
push
or
mov
hlt
push
loop
shlb
push
mov
mov
popa
push
cwtl
mov
or
xor
inc
push
test
xchg
jp
xchg
or
jo
jecxz
and
enter
inc
sarb
xor
xchg
fwait
mov
mov
jmp
imul
inc
cmp
or
nop
loop
rcll
movsb
and
repnz
movsl
sbb
sub
adc
adc
mov
mov
dec
std
je
andb
pop
lcall
les
out
ret
orb
xchg
fidivs
push
pop
shll
mov
fsub
inc
mov
js
sub
pop
adc
les
pop
add
neg
jmp
xchg
adc
xchg
sub
test
addr16
jg
aaa
outsb
inc
inc
scas
sbb
dec
dec
ss
scas
sbb
orl
repnz
call
ror
add
sub
fyl2x
ds
icebp
mov
int
pop
pop
sub
mov
mov
arpl
in
mov
sbb
cmp
mov
roll
or
adc
aaa
cltd
call
sbb
fs
dec
sub
xchg
ficomps
mov
or
xchg
adc
mov
call
and
scas
aad
int3
xchg
out
jnp
mov
pop
popf
mov
mov
mov
or
test
mov
arpl
push
in
jbe
mov
cmp
stos
fwait
pop
mov
inc
cwtl
fs
popa
and
rcrb
neg
or
xor
pop
adc
dec
dec
sti
jmp
jbe
rol
xor
dec
jbe
and
jge
dec
sti
data16
sub
lods
cwtd
hlt
lods
lahf
and
jg
push
js
and
test
push
fwait
in
inc
dec
push
and
pop
popf
jge
inc
outsb
mov
jbe
dec
lock
bound
test
mov
mov
das
insb
push
jl
mov
fbld
divb
inc
inc
test
xchg
mov
out
sbb
xchg
call
orl
mov
cmp
mov
or
out
ds
inc
mov
in
jmp
mov
out
xchg
mov
push
xor
inc
xchg
call
cmp
sub
test
nop
pop
sub
fst
xchg
sarb
cmp
lods
dec
int3
divb
xor
cmc
pushl
jbe
push
inc
cmp
ret
repnz
into
cwtl
jno
jo
xchg
test
and
inc
aaa
loopne
jle
xchg
pop
pop
repz
dec
cmp
setnp
rcr
mov
orb
or
xchg
sbb
int3
or
adc
xchg
loope
mov
xlat
js
movsb
outsl
xlat
lock
sbb
inc
test
mov
xchg
jg
testb
popf
sbb
or
pop
adc
mov
movsb
add
xor
push
jb
clc
in
stos
mov
xchg
and
add
mov
leave
gs
ss
sub
mov
js
je
pushf
jo
mov
sbbl
push
andl
xor
xchg
cmp
into
adc
js
ret
push
sahf
pushf
popa
aaa
arpl
test
adc
mov
insb
lcall
pop
jl
cwtl
adc
sbbb
rcrl
xchg
xor
addr16
in
lea
mov
pop
sub
mov
jmp
add
mov
leave
or
mov
adc
push
add
in
mov
xchg
leave
icebp
imul
mov
jl
pop
push
pop
sbb
ficoms
lds
mov
dec
dec
dec
push
dec
test
mov
sub
das
xor
popa
push
mov
and
cs
mov
sarb
push
add
jnp,pn
jno
adc
fs
ret
dec
paddq
call
mov
js
in
inc
mov
repz
insl
pop
pop
cmp
and
xor
imul
dec
dec
pop
imul
cmp
dec
xchg
xchg
xchg
xchg
cmp
jno
ficoms
and
xor
in
sub
mov
in
in
xchg
out
mov
sbb
adc
cmp
arpl
cwtl
and
sub
in
xor
cltd
sbb
out
rclb
push
adc
push
jnp
popa
scas
adc
inc
test
popa
fs
out
pop
cmp
in
mov
test
popf
push
push
xor
pop
mov
mov
xor
mov
ds
sbb
pop
pop
sub
add
popf
aam
fnstcw
and
mov
push
in
inc
aas
inc
lret
stos
xchg
inc
movsb
movsl
lods
cmpl
movsb
mov
inc
iretw
repz
out
sub
xor
xchg
jecxz
loope
aaa
mov
cwtl
jne
mov
dec
out
pop
rol
lds
es
stos
test
dec
xchg
pop
cmp
std
out
pop
mov
inc
add
push
in
inc
xor
adc
lock
fistps
fistpll
lcall
mov
pop
sbb
inc
and
mov
pop
cld
dec
test
adc
inc
fmul
jo
xor
repz
rol
pop
lods
pop
fs
lds
mov
jbe
mov
lret
fwait
shr
sbb
das
in
testb
mov
out
mov
clc
ss
cmpl
and
or
fnstsw
popf
je
add
test
jge
mov
jle
sub
dec
cmp
adc
out
test
sbb
call
push
adc
sbb
pop
mov
scas
xor
and
jge
xchg
mov
xchg
enter
jnp
stos
jb
loop
les
das
mov
hlt
pop
mov
sub
mov
outsb
jle
cwtl
bswap
adcb
loope
call
cmp
out
icebp
add
repnz
dec
pop
push
add
sub
jle
iret
inc
inc
cmpl
dec
mov
scas
push
sahf
test
lahf
xor
pop
dec
xor
aad
fldl
xor
ljmp
mov
or
daa
and
in
jae
cmp
pop
mov
push
sub
sti
push
and
test
add
daa
lods
pop
hlt
and
popa
ret
mov
clc
maskmovq
notl
sbb
mul
mov
pop
sar
sub
xor
cs
xchg
push
in
jle
pop
pushf
js
jecxz
jno
push
bnd
into
mov
fstl
sbb
xchg
imul
pusha
sbb
sti
loope
out
xlat
pop
sub
mov
loopne
xorb
xchg
xchg
pop
out
cmp
sbb
mov
xor
sub
movsb
jo
cld
mov
bsr
imul
aas
sbb
dec
or
lods
push
popa
shlb
adc
mov
data16
ja
fs
mov
outsb
xchg
sbb
mov
mov
and
inc
cwtl
mov
fstps
mov
addr16
dec
cmp
cwtl
scas
shll
dec
dec
add
lock
push
sbb
inc
adc
testb
xchg
mov
mov
icebp
addb
lock
loopne
addl
and
xor
ficoms
into
insl
lret
mov
mov
mov
pop
mov
push
popa
pop
repnz
repnz
stos
sbb
cmp
lret
pop
adc
add
outsb
ficoms
inc
outsl
aas
inc
xchg
inc
push
das
test
les
sarl
stc
cmp
andps
shlb
movzbl
je
push
ljmp
lods
or
insl
push
lock
lret
out
dec
jp
loop
cmp
jg
push
push
xchg
xchg
shlb
decl
cmp
mov
aas
stos
mov
pop
std
ja
jecxz
push
xchg
int3
pop
test
aam
popa
xchg
dec
sub
ficoms
repz
mov
mov
pop
stos
xchg
dec
xchg
std
mov
adc
lods
jmp
push
pushf
xor
xchg
mov
test
jle
negl
mov
fnsave
shrl
push
xchg
out
sub
int3
cmp
push
ficomps
jae
mov
mov
pop
pop
push
pop
rcl
ret
repnz
aam
jno
sbb
jmp
sbb
mov
into
xlat
jo
jb
pop
flds
shl
int
out
push
movsb
sub
add
jb
addb
jb
mov
mov
jnp
ud1
pop
add
xchg
std
repnz
add
push
loope
fucomip
lock
lret
in
sub
mov
cwtl
jae
pop
xor
mov
jg
into
and
jno
imul
icebp
dec
es
push
or
shll
jle
xchg
mov
push
mov
enter
in
sarb
shl
jns
cwtl
jnp
dec
add
xchg
pop
sub
add
jge
mov
or
adc
sub
fidivs
stos
pusha
dec
mov
movsl
cmp
outsl
or
test
and
xchg
cli
ret
xchg
mov
mov
outsl
cwtl
sysexit
xor
mov
sbb
mov
mov
sti
cmp
gs
lds
jnp
jbe
dec
mov
inc
iret
sarb
xor
lret
sub
movsb
pop
out
dec
mov
add
jmp
jecxz
jg
jns
dec
pop
lods
or
xchg
push
pusha
jle
test
mov
stc
arpl
popf
pop
fists
sbb
js
mov
mov
sub
scas
pop
out
in
mov
data16
pop
mov
mov
imul
or
xchg
push
pop
sti
push
inc
sbbl
fbld
xor
push
xchg
test
and
dec
dec
xor
push
les
sbb
mov
xor
sub
xchg
stc
popf
lds
icebp
leave
ret
sbb
cmp
xor
int
add
mov
add
movsb
insl
icebp
sub
faddl
cmpsl
test
add
jns
sub
push
jle
push
je
xor
ss
fwait
xchg
in
data16
imul
xchg
or
dec
fidivrs
popf
pop
popa
mov
movsb
xorl
sub
jle
mov
and
mov
inc
sbb
push
outsb
jmp
test
pop
mov
and
roll
rorb
negl
mov
jmp
ja
jle
je
mov
lcall
roll
and
mov
bound
dec
jmp
scas
jecxz
outsb
mov
fidivrs
popa
mov
xor
mov
daa
pop
jns
sbb
sbb
mov
sub
dec
xchg
and
rclb
lods
sbb
rcrb
xchg
testl
add
ret
dec
xchg
lods
repz
aaa
xor
outsl
pop
dec
mov
xchg
sub
and
mov
dec
mov
js
mov
jno
jmp
xchg
fnstcw
mov
or
xlat
iret
xchg
clc
xchg
in
push
inc
adc
cmp
and
out
sbb
sbb
push
push
insb
iret
xchg
lods
lea
push
sahf
xchg
cmp
shll
popa
cmp
mov
mov
jmp
sub
cwtl
sub
xchg
leave
into
or
pop
loop
out
pop
arpl
lcall
dec
testl
js
popa
xchg
fcoml
fdivp
addr16
mov
adc
ret
mov
sub
add
push
inc
jns
push
fistpll
jmp
mov
insl
adc
leave
out
mov
add
adc
fisttpl
addl
xchg
pushf
out
and
fidivs
pop
and
sub
jp
pop
daa
dec
or
ret
xchg
scas
or
adc
gs
xchg
push
test
aas
inc
dec
cmp
orb
aam
addr16
lods
out
xor
fwait
add
add
das
xor
arpl
mov
insb
imulb
inc
fwait
stc
xor
jo
roll
mov
push
popa
jbe
push
in
fcom
xchg
or
into
and
dec
in
push
ficomps
push
or
fldpi
scas
jne
sub
aad
mov
fistpl
mov
rcrb
test
xor
fisubrs
mov
xor
lahf
adc
ret
mov
testl
scas
sbb
mov
fwait
jnp
mov
adc
lcall
mov
inc
fsubl
inc
sti
fadd
lcall
mov
xor
outsl
push
ret
scas
test
mov
pushf
cli
adc
ja
popa
pop
addr16
pop
sbb
out
push
notl
iret
shr
test
cmp
insl
test
sub
pop
fsubrs
stos
dec
pop
jbe
orl
mov
bound
mov
xlat
fs
shrb
mov
popa
ret
lahf
push
addr16
lret
xchg
cmpsb
scas
mov
cld
mov
xchg
mov
fdivrp
jae
fisubs
std
sbb
sub
inc
add
arpl
mov
mov
and
loope
add
xchg
push
xor
pop
mov
fdiv
pop
jbe
jg
xchg
xchg
lods
sub
sub
jnp
xor
cmc
xchg
sub
sbb
sbb
sub
aam
inc
daa
cmp
jmp
mov
fstpl
shll
insl
mov
mov
decb
inc
mov
push
ficoms
lret
stc
sbbl
jle
cmpsl
jg
sbb
lods
inc
xor
pop
adc
mov
pop
cltd
hlt
arpl
cmc
call
pop
enter
inc
lea
test
aad
push
and
jecxz
roll
pop
arpl
jbe
inc
es
pop
fs
adc
loop
insl
sbb
sbb
aaa
stos
call
test
out
insb
orb
xchg
pop
ljmp
ja
xchg
ret
pop
data16
sbb
push
adc
or
rorb
mov
es
dec
repz
stos
mov
loope
rclb
or
or
adc
pmaddwd
add
pop
imul
fchs
scas
lcall
out
in
mov
lds
repz
adc
dec
movsl
jge
xor
push
repz
rcrl
lahf
mov
cmpb
ss
in
xchg
xchg
call
mov
pop
xor
pop
popa
std
mov
in
lret
or
hlt
inc
and
dec
add
mov
lcall
mov
into
sub
pop
push
or
inc
push
pop
stos
ds
outsl
lock
cltd
lds
adc
data16
mov
mov
lock
mov
mov
out
test
push
jo
pop
movsl
xchg
dec
mov
xchg
testl
mov
fisubrs
aad
xlat
cmpsl
subb
mov
lods
jae
mov
mov
shll
cwtl
or
faddl
stos
jo
and
jmp
shrb
jns
sbb
mov
add
adc
mov
pop
negb
loope
mov
xor
arpl
pop
pop
ss
mov
lahf
xchg
dec
je
test
shlb
aaa
int
cld
push
scas
lock
bound
xchg
cmp
nop
out
or
rorl
out
loopne
ljmp
enter
sbbb
lock
lea
fistpll
jb
and
jb
cmp
imulb
test
pop
int
test
push
test
adc
mov
jb
pop
inc
jmp
adc
add
sti
rorl
sub
push
test
fsubs
pop
subb
mov
add
sbb
out
and
mov
sub
cmc
stos
loope
inc
fsubrs
xor
scas
mov
inc
lea
std
sbb
mov
mov
xor
jo
mov
scas
push
and
outsb
sti
inc
daa
dec
pop
xchg
insl
fwait
sbb
jns
dec
ljmp
or
cmpsl
mov
aas
out
mov
inc
mov
movsl
mov
aad
sub
sub
push
loopne
fstl
sbb
adc
aad
mov
into
das
aas
add
hlt
hlt
mov
loop
pop
les
in
test
ljmp
push
hlt
xor
xor
pop
loopne
fisubrl
jo
jne
push
adc
mov
push
and
cmp
mov
xor
sbb
popf
mov
sti
jmp
dec
loop
push
fwait
daa
ret
adc
add
sub
mov
int3
dec
pushf
sarb
push
mov
test
mov
outsb
fwait
inc
or
mov
cltd
ja
and
out
cmp
fsubrs
adc
push
neg
xchg
dec
inc
mov
test
out
imul
std
cmp
xchg
xchg
pusha
cld
push
cmc
mov
add
mov
mov
iret
adc
sbb
jo
jbe
rcl
cmp
movsb
loopne
ret
inc
mov
lret
xor
cmp
or
pop
cmp
add
ds
jbe
sti
or
es
xchg
and
add
and
mov
xchg
sub
pop
ror
fwait
popf
and
sti
push
cld
sti
push
push
loopne
les
xor
mov
pop
mov
add
jne
mov
test
xchg
jmp
shl
shrb
cmpsb
repnz
mov
scas
in
add
mov
and
lock
xchg
jo
cmpl
cmp
mov
inc
call
inc
das
enter
popa
add
mov
cmp
mov
mov
dec
out
mov
enter
cld
test
cmp
repz
jmp
cli
addr16
iret
jo
out
sub
mov
loopne
mov
lds
mov
imul
cmpsb
rcrb
in
mov
and
mov
pushf
jmp
les
andl
cmp
inc
xor
xor
stc
addb
stos
je
enter
stc
jg
ret
mov
into
bound
sub
or
loop
in
leave
loopne
xor
jae
testb
xchg
sbb
or
test
push
lahf
dec
decb
push
je
arpl
lcall
fdivrl
or
add
es
sub
xor
mov
inc
cmpb
add
mov
fcmovne
lea
jns
mov
ss
jp
xchg
mov
sbb
push
test
in
sbbl
push
dec
fsubl
push
xchg
jnp
scas
cmp
or
lea
inc
jae
fidivrs
ljmp
stos
ds
sub
fsubrl
in
mov
mov
mov
cmpsl
in
orb
mov
ficoml
sub
aaa
mov
loopne
adc
popf
push
pusha
outsb
push
push
add
call
cmpsb
push
jge
data16
dec
scas
jne
fldt
std
pushf
pminsw
sahf
ja
mov
ret
iret
jl
jae
jle
sbb
xchg
sbb
fcomp
cltd
test
hlt
gs
or
push
xchg
push
clc
fstl
mov
jns
lahf
outsl
movsb
aaa
mov
pop
sti
pop
in
pop
hlt
push
fbld
dec
js
repz
out
mov
aad
mov
mov
sbb
aad
mov
and
pop
lds
jns
pop
push
fcoml
or
mov
daa
pop
mov
test
mov
insl
jae
insb
xor
cmp
pop
cmpsl
add
out
pusha
test
mov
sub
sub
mov
inc
fs
adc
mov
lahf
insl
lods
andl
mov
ds
jecxz
fcmove
xchg
loop
push
fsubs
mov
jbe
sbb
fcoms
xorb
inc
xchg
js
nop
mov
pop
pop
sub
cwtl
jnp
lea
stc
dec
imul
imull
insb
sbb
jns
jns
xor
xchg
mov
mov
rorl
xchg
into
mov
dec
test
leave
adc
and
lret
popa
push
inc
fistps
call
mov
fbld
sub
mov
loopne
inc
inc
out
scas
push
repz
idivb
inc
les
lods
and
arpl
loopne
jp
ljmp
scas
enter
xchg
lret
dec
dec
lods
xchg
push
pop
jge
xor
int3
pop
mov
push
sub
add
shl
negl
shlb
data16
jno
sbb
cmp
jnp
popf
jge
inc
sbb
xor
addb
and
hlt
test
mov
mov
mov
cmpsb
add
inc
cmp
pop
lods
sbb
das
call
inc
into
stos
in
push
cwtl
sbbb
push
sub
stc
push
movsb
out
push
pop
shl
cli
and
xchg
inc
mov
mov
into
ja
cmpsb
jns
mov
mov
pop
jns
out
push
jp
sti
daa
je
sbb
xchg
xlat
loope
adc
mov
add
data16
jae
cmp
inc
testl
mov
sbbl
rcrb
les
in
mov
in
in
test
ja
lahf
into
jl
push
bnd
sub
addr16
scas
lock
adc
or
stos
pop
xchg
iret
fcmovnbe
scas
push
and
dec
ljmp
mov
icebp
dec
mov
clc
mov
cmpl
cmpsb
addr16
xchg
insb
arpl
pop
cmpsl
in
pop
mov
stos
call
gs
gs
loopne
pop
mov
rorb
dec
cmc
cmp
sbb
cmpsl
dec
mov
lock
stos
jns
sbb
cli
jle
pop
mov
aad
mov
rclb
jbe
dec
rorl
pop
inc
test
lods
aas
xor
mov
rorl
push
push
jg
dec
mov
les
sub
add
xchg
and
or
jbe
xchg
mov
add
pop
cmp
cld
dec
sbb
pop
or
mov
pop
movb
push
xchg
sbb
lds
cmpsl
sbb
pop
mov
jecxz
lea
sbb
scas
or
lahf
cmc
imul
fsubl
sub
mov
adc
cmpsl
movsl
adc
in
mov
lods
ds
loop
add
cmp
cmp
scas
and
xchg
inc
addl
jbe
or
adc
in
jno
js
and
dec
xlat
leave
fsubl
mov
add
out
xchg
testb
xor
sbb
scas
sub
ja
fdivr
out
add
xchg
xor
mov
lret
fdivrl
mov
fucomi
icebp
push
fs
pop
jae
lea
mov
mov
mov
cmp
fldl
lahf
push
jmp
sub
int
lret
pushf
pop
test
inc
loop
push
jnp
rorl
dec
cmp
nop
fdivr
pop
inc
push
or
dec
shr
adc
fbstp
lods
xor
jle
mov
in
cwtl
cmovno
loopne
in
loop
pop
es
xchg
mov
add
mov
call
xchg
lahf
fimuls
jmp
icebp
inc
pop
lret
aaa
jmp
jnp
lret
cwtl
mov
insb
mov
mov
xchg
jno
cmpsl
xlat
xlat
inc
in
fwait
and
gs
cmp
imul
or
test
push
out
rorl
rcr
mov
outsb
cmc
cmp
jmp
sti
popf
and
enter
out
daa
push
in
and
dec
pop
insl
test
ret
fs
lock
inc
and
pushf
outsb
xchg
jo
popf
pop
call
jecxz
mov
add
frstor
jnp
sbb
in
ds
xor
out
insl
test
sub
sub
mov
sub
lock
jmp
jne
mov
out
lahf
test
pusha
sti
pop
xchg
jp
outsl
ja
stos
mov
loope
and
lret
scas
mov
mov
mov
fsts
mov
int
cwtl
dec
iret
mov
sub
nop
mov
xor
or
pop
loop
fs
in
test
inc
data16
pop
fwait
in
mov
cmc
xlat
cs
imull
or
inc
mov
add
push
vgatherdps
repnz
jo
mov
dec
mov
je
bound
sub
stos
incl
clc
xor
arpl
add
ret
ret
aad
roll
push
aas
push
cmc
sti
xor
ret
adc
fidivrs
fidivs
jb
xchg
and
push
mov
add
mov
xchg
repnz
movntps
incl
and
lret
call
or
addb
mov
cmp
les
mov
loopne
mov
cltd
lcall
sahf
test
jne
aad
jg
out
xchg
mov
cwtl
hlt
test
in
stc
mov
cmp
or
testl
mov
or
xchg
mov
cs
mov
outsb
pusha
mov
gs
xchg
mov
cmp
sbb
jl
nop
sub
mov
dec
mov
xchg
cwtl
push
in
mov
mov
push
mov
inc
fstpl
dec
mov
jle
cli
popf
xlat
add
dec
xchg
jge
cmp
cld
std
fildll
jecxz
gs
cs
outsb
inc
dec
xchg
fdivrp
pop
sub
sub
gs
mov
andb
lods
lock
inc
xchg
sub
sub
or
cwtl
inc
sbb
mov
dec
insl
cld
xor
or
sub
and
xchg
movsb
insb
js
ja
jecxz
xor
lret
lods
inc
add
aam
in
lock
ret
pop
aam
out
push
int3
ljmp
cli
cmpsb
dec
pop
fsubs
into
and
mov
lods
insb
pop
setns
or
mov
xor
and
jae
or
sbb
test
inc
push
mov
sub
cmp
imul
ret
ljmp
xor
pop
dec
push
lea
sbb
ss
lahf
dec
mov
jnp
idivb
push
cld
dec
mov
dec
and
testb
repnz
push
jp
add
fsubl
mov
cmpsb
fisttpll
mov
js
leave
mov
or
pop
jns
sti
push
xchg
clc
mov
inc
jno
push
sahf
push
shll
xchg
or
aad
xor
movsl
push
pop
paddw
test
dec
lea
push
ret
add
dec
cmc
das
fimuls
mov
or
adc
jo
and
pop
or
std
mov
push
sub
out
jne
shrb
out
mov
aam
dec
push
dec
cld
xchg
pop
in
iret
daa
push
fsubr
mov
cmp
adc
or
dec
push
push
sbb
int
xor
nop
test
jbe
mov
cmp
inc
aam
cltd
pop
cmp
int3
das
js
dec
xchg
jbe
mov
sub
fcoms
jnp
and
cltd
sub
push
jb
push
xchg
or
dec
clc
or
int3
dec
imul
cmc
cwtl
sbb
insb
test
scas
aaa
je
imul
out
leave
inc
cmc
inc
loopne
lret
cmp
dec
mov
jle
aad
cmp
clc
loop
xor
mov
int
imul
mov
ret
jge
out
cs
insb
dec
pop
cmp
in
mov
and
xchg
mov
idivl
jecxz
mov
rcrb
aas
push
inc
test
sub
lea
mov
cmp
outsb
sti
push
mov
inc
sbb
or
push
sbb
ja
jp
cwtl
cmpb
sub
mov
push
mov
pop
push
iret
ds
mov
and
les
push
mov
mov
add
scas
sbb
jg
mov
leave
into
fidivl
add
pop
adc
and
outsl
jle
sbb
adc
lahf
aam
xchg
jmp
popf
jp
push
dec
cmp
nop
mov
adc
mov
in
aam
fistpll
sub
dec
push
sub
pop
loope
or
sub
out
inc
aad
adc
in
or
hlt
decl
das
jmp
jo
cs
mov
sbb
cmp
testl
rclb
stos
jmp
enter
add
rol
xor
icebp
sbb
pop
in
mov
scas
mov
sub
ret
mov
push
xchg
std
add
fiaddl
jmp
dec
xchg
inc
mov
xor
sbb
push
leave
hlt
icebp
jg
xor
fimull
xorw
nop
insb
aaa
imul
imul
and
pop
mov
cs
insl
pop
ficompl
test
jl
pop
scas
lret
adc
sbb
ja
fcompl
shr
das
dec
insl
lahf
cld
mov
pop
mov
mov
scas
hlt
xchg
loop
sarl
add
jno
pop
inc
jno
in
repz
jb
je
out
or
sub
mov
rcl
cmp
int3
imulb
inc
cmp
fs
push
lods
add
sub
jnp
es
mov
movsl
add
es
mov
adc
adc
lods
enter
cmpsl
cwtl
sbb
repnz
inc
mov
inc
push
jmp
mov
inc
mov
scas
jge
fcoml
dec
jbe
and
out
cmpb
movsb
clc
test
or
fwait
or
adc
pop
std
sti
shr
sbb
cmc
cmc
xor
push
xor
mov
scas
outsl
push
adc
add
or
lock
jno
adc
ja
sahf
in
rorl
mov
add
or
ja
icebp
add
sbb
insb
stc
xchg
rorb
xchg
mov
and
lods
std
ficoml
rorb
fisttps
std
cmp
xchg
test
loopne
lods
lahf
jg
test
xadd
jmp
mov
lods
and
mov
sahf
sarl
jo
push
xor
jne
daa
lock
loopne
push
popf
sub
xlat
push
mov
or
sub
mov
add
scas
mov
negb
ljmp
int3
push
out
sub
mov
jno
inc
mov
fmulp
pop
dec
add
mov
loopne
push
or
mov
aaa
lds
test
jecxz
mov
push
loop
or
inc
xchg
adc
mov
sti
mov
decb
xlat
inc
dec
cmp
shrl
loope
scas
scas
add
dec
jnp
scas
sbb
ret
in
in
loope
bound
xchg
insl
in
jb
or
inc
call
xchg
loopne
and
mov
inc
mov
cmp
call
loope
ja
rolb
mov
jecxz
mov
mov
jne
std
xor
xchg
mov
sub
sub
sbb
lcall
add
push
jge
and
cmp
sarb
fsubr
xlat
pop
jl
xor
xchg
inc
notb
cs
cmp
test
inc
rcr
pop
popa
fxch
mov
icebp
and
push
pop
out
push
test
fbstp
sub
mov
shlb
xchg
andl
test
mov
inc
dec
xchg
mov
mov
int3
sbb
mov
popa
jns
sbb
xchg
jns
stc
pop
test
insb
sub
mov
clc
stc
sbb
incl
scas
xchg
cmp
inc
mov
insb
push
ja
mov
scas
sahf
mov
sbb
not
lods
adc
test
mov
sub
movsb
cmc
enter
jae
dec
mov
cmp
and
cmpl
je
cmp
data16
enter
scas
sbb
pop
pop
movl
fwait
dec
inc
jne
cs
ljmp
jnp
pop
jo
fdiv
std
pusha
movsb
adc
cmpsb
inc
pop
imul
jne
aaa
test
sbb
sub
adc
cltd
clc
xchg
shrb
cld
push
daa
sbb
scas
aas
xor
jle
out
and
mov
jno
test
lds
ljmp
and
iret
inc
xchg
push
jmp
push
lds
out
repnz
lahf
clc
fsubrs
popf
lcall
iret
mov
insl
cmp
jecxz
test
mov
and
shrb
push
das
cmp
mov
inc
inc
xchg
xor
cmp
adc
cli
xchg
flds
filds
dec
xchg
mov
ror
inc
je
mov
dec
jo
sub
jmp
jo
decl
sbb
in
repz
ja
nop
fst
inc
les
mov
adc
movsl
loop
pushw
mov
fisubl
js
adc
pop
lahf
cmc
pop
repz
pop
test
rorl
int3
in
jb
inc
fs
incl
int
mov
jmp
es
loope
xor
cmp
cmp
scas
inc
pop
jmp
movsl
sub
push
mov
sub
scas
sub
lcall
pop
and
pop
jbe
stc
stos
in
push
xchg
adc
dec
cmp
loopne
out
push
cwtl
fiaddl
shll
sub
mov
imul
pop
lcall
cmp
add
push
add
or
adc
xorb
in
ss
lcall
shll
pop
adc
fisubrs
sub
dec
pushf
push
mov
xor
ss
and
push
fisttpll
push
pop
mov
aaa
mov
cld
jne
aaa
outsb
inc
leave
loopne
test
sbb
and
sub
mov
icebp
pop
mov
das
mov
adc
test
test
xor
mov
push
jns
cmp
stos
test
cltd
xchg
cmp
xor
stc
mov
subl
mov
out
xrelease
fisttps
push
cmp
fsts
inc
sub
lahf
cmp
cli
adc
fsubs
scas
int
fstl
ret
mulb
pop
or
pop
fistpl
and
loopne
enter
sub
mov
mov
mov
insb
push
push
cmp
mov
std
fsubl
inc
jno
ss
rcrl
sub
inc
push
lea
repnz
push
adc
push
daa
fwait
clc
dec
xlat
inc
arpl
aaa
inc
adc
xchg
or
fucomip
mov
xchg
rcll
ja
rcl
into
adc
pusha
dec
in
daa
push
lock
ljmp
ljmp
fcmovnu
pusha
push
push
xor
je
push
js
pop
gs
std
sub
push
in
mov
cmp
int
pop
pop
jmp
loope
mov
loopne
out
mov
mov
ljmp
inc
mov
inc
inc
cmpsl
or
dec
out
or
push
in
pop
xor
cwtl
and
cmp
fistpll
push
cmpsl
xchg
in
mov
ja
stos
or
repz
xor
imul
mov
adc
ljmp
bound
sahf
int3
mov
ror
dec
iret
int3
aam
sub
cli
xlat
push
xlat
cmp
mov
test
xorl
fldcw
pop
adc
xchg
ret
repnz
loop
mov
inc
pushf
addr16
sub
sbb
lea
pop
inc
sbbb
js
orb
dec
xorl
outsl
and
fsubrl
adc
mov
ljmpw
movsl
jmp
pop
lahf
jae
cli
cltd
fiaddl
notb
xor
lret
inc
sub
and
adc
adc
mov
addr16
xchg
rorl
imull
stos
sahf
sti
jb
mov
xchg
mov
sarl
addb
xor
mov
sbb
push
mov
sub
or
xchg
push
outsl
mov
sub
cmp
repz
sub
cmp
push
sbb
icebp
icebp
divl
adc
pop
test
mov
icebp
arpl
or
repnz
sub
arpl
movsb
shll
mov
and
mov
cmp
scas
addb
bound
mov
add
pop
adc
ljmp
loop
mov
icebp
pop
insl
add
xchg
jne
cli
push
xlat
inc
and
jb
movsl
sub
mov
js
addr16
mov
call
push
inc
lds
pop
sbb
cmc
scas
or
mov
mov
sarl
fadds
adc
pop
jbe
popf
dec
out
and
ss
clc
in
jb
add
pop
or
icebp
xor
nop
cmpsl
ja
aas
adc
imul
push
xor
lahf
fbld
inc
and
push
sub
in
inc
jno
add
sbb
aam
out
jecxz
shll
push
jb
inc
mov
loop
mov
push
arpl
or
pop
lahf
dec
insb
movsb
divb
xor
push
adc
sbb
and
fcoms
jmp
out
roll
lret
mov
inc
cmp
adc
les
clc
mov
mov
into
int
pushf
dec
mov
push
cmp
fidivs
dec
jge
jo
loope
das
outsb
mov
add
out
mov
xchg
inc
dec
adc
cmp
mov
stc
pop
or
mov
out
mov
fsts
sbb
pop
jmp
mov
mov
ja
add
dec
mov
popa
adc
fwait
repz
mov
mov
cmp
xor
sub
or
xchg
or
pop
cwtl
mov
inc
dec
shlb
cltd
mov
mov
test
inc
jge
psrad
fisttpl
les
call
push
pushf
pop
int
mov
std
xchg
sub
int3
subps
add
push
xchg
iret
mov
ljmp
out
movsb
push
mov
jecxz
roll
push
mov
and
out
rol
xlat
pop
rcr
jmp
lcall
sbb
push
stc
outsl
cltd
add
mov
jl
sbb
pop
jge
pop
sub
xor
jmp
inc
mov
push
xchg
xchg
mov
cli
ret
inc
inc
push
add
xorl
xchg
mov
insb
add
arpl
sbb
pop
stos
lret
add
mov
mov
jle
ds
add
add
sub
xor
testl
aaa
ljmp
sbb
inc
shlb
xchg
mov
leave
xchg
and
aad
ss
push
mov
lahf
xor
repz
jle
hlt
mov
sbb
das
push
lret
mov
sbb
fadd
cltd
inc
out
ficoms
inc
add
arpl
cmc
xchg
adc
mov
dec
sub
xor
outsb
sbb
js
sbb
roll
pop
xor
insb
adc
test
pusha
jg
sub
jo
hlt
cmp
mov
xchg
adc
jae
push
sbb
mov
xchg
mov
fwait
in
sbb
scas
or
sub
ret
and
hlt
or
jg
push
mov
xor
dec
cmp
iret
push
sbb
pop
je
out
pop
jbe
fwait
cli
leave
xor
cmp
js
in
int3
lcall
add
imul
and
loop
lcall
cs
cld
xor
test
or
icebp
sbb
out
xchg
and
jg
aas
cmpsb
repnz
sub
sbb
mov
jo
leave
cmp
add
mov
aad
sbb
inc
sub
adc
cmp
out
mov
xchg
les
jo
push
pushf
cmpsb
jae
fwait
xchg
adc
rcll
mov
mov
dec
jo
jle
xchg
mov
push
cmpsl
cltd
cmpsl
pop
jae
stc
loope
mov
push
icebp
ljmp
jmp
out
pushf
mov
xor
cli
cmp
movsl
popf
jge
outsl
lahf
push
sarb
sbb
xlat
cltd
mov
mov
xchg
sub
push
icebp
push
push
cmpsb
sub
xchg
xchg
movsb
mov
adc
jecxz
jbe
fcomp
pop
daa
lods
push
adc
mov
xchg
adc
mov
sbb
or
sbb
in
stos
xchg
xor
mov
stc
loopne
pop
jno
out
xor
and
lock
push
in
lds
scas
stc
enter
fcos
sti
stos
aaa
ficompl
outsl
cmc
in
dec
or
add
adc
bound
clc
cmp
xchg
jb
das
ror
mov
sub
popa
and
pop
es
iret
insl
jge
pop
or
dec
xor
sbb
jmp
popf
mov
les
push
inc
fwait
cld
adc
mov
push
inc
stos
sbbb
push
and
fildl
mov
mov
jmp
int
in
test
in
xor
xchg
test
jp
test
jg
stos
sub
fnstcw
pop
jmp
sahf
sub
ret
inc
sahf
dec
jge
add
sub
test
fst
push
filds
or
nop
jno
shl
xchg
mov
and
clc
icebp
fwait
cmc
mov
jl
pop
imul
ds
add
cmp
sub
mov
push
jnp
and
pushf
int3
and
push
test
mov
cmp
add
test
les
or
stos
test
add
inc
outsb
sbb
frstor
popf
imul
call
fwait
jno
data16
and
imul
pop
inc
mov
mov
sbb
lret
imul
rcl
push
xor
push
ret
cmp
sub
fwait
stos
ret
pop
fs
decb
xlat
jnp
jb
aas
outsb
xor
mov
bound
sub
sub
push
lahf
sbb
and
mov
hlt
je
cmpl
cli
add
dec
xchg
mov
sahf
dec
cmp
adc
push
out
insb
int
das
lea
add
cmp
jg
jecxz
dec
adc
dec
sar
adc
sti
mov
out
and
mov
mov
xchg
cmp
int3
mov
inc
int
sbb
loope
and
and
mov
mov
aas
loop
movsb
jo
cmp
icebp
mov
jl
fs
sbb
gs
xor
dec
enter
dec
inc
jno
nop
popa
cmpb
add
aaa
xchg
mov
roll
or
mov
ds
or
xor
fbstp
cld
sbbb
push
xor
pop
sbb
sqrtps
loop
add
sbb
push
repnz
jo
test
mov
push
outsb
cli
add
pop
pop
je
into
push
scas
add
in
mov
or
adcl
repnz
jl
adc
jnp
sub
out
jmp
stos
test
mov
iret
xchg
inc
pusha
gs
jnp
pop
out
outsb
push
scas
mov
adcb
xchg
sahf
rolb
fadd
daa
xchg
lea
les
cmpsb
push
popa
out
adcl
cmp
cld
imul
cltd
mov
xor
loop
sahf
orl
cs
fldenv
loop
mov
mov
xchg
mov
out
cmp
jmp
scas
jnp
imul
stos
mov
test
inc
outsb
sub
jb
push
stos
iret
cmpsb
jg
mov
sub
mov
mov
mov
int
pop
stos
and
mov
adc
int
jne
xchg
loopne
repnz
sbb
jl
bound
in
hlt
push
and
xchg
lods
fnstenv
pop
fsubl
sub
inc
inc
std
mov
add
sti
shll
push
jmp
mov
mov
dec
sbb
inc
adc
xlat
push
xchg
pop
dec
nop
cwtl
and
sbb
mov
or
mov
pop
mov
jno
xchg
and
jle
cmpl
shlb
leave
arpl
lcall
push
in
popf
jae
rorb
mov
jnp
add
test
push
sub
xrelease
pusha
sub
xlat
subl
mov
mov
pushf
push
call
inc
jg
xchg
mov
push
mov
mov
adc
xchg
mov
jno
mov
adc
jge
pop
cld
dec
int
jno
flds
or
test
inc
mov
mov
test
movsl
push
ss
sbb
mov
xchg
lcall
xchg
mulb
imul
xchg
mov
call
fwait
insb
fidivrs
sarl
jae
push
jecxz
mov
dec
adc
cltd
clc
les
mov
push
fmuls
test
pop
insl
sub
xchg
div
bound
movsl
inc
pop
or
mov
inc
dec
push
push
ret
sbb
mov
ja
cs
adc
mov
mov
daa
push
push
mov
lds
out
cmp
pop
xchg
arpl
ja
push
into
es
outsl
leave
aaa
push
jmp
push
test
mov
and
xchg
or
scas
cmp
pop
test
inc
jnp
movsl
jb
adc
aaa
imul
xchg
jbe
in
ljmp
sub
and
pusha
mov
xor
movsl
addl
scas
fs
out
xor
in
push
sub
push
aaa
pushl
les
pop
mov
fdivl
in
mov
out
xor
addr16
xor
cltd
daa
das
jge
push
add
xlat
lods
push
push
sub
sarb
cwtl
jbe
insl
in
push
inc
dec
inc
sub
ret
jbe
rep
enter
sbb
dec
pushf
or
xchg
sbb
movsb
mov
inc
aaa
jbe
sbb
push
xor
cmpsb
add
cmpsl
ljmp
fildll
xor
iret
add
into
dec
notb
cmp
jb
and
adc
addr16
je
scas
xor
ss
cli
repnz
adc
inc
lods
and
mov
aaa
cmp
pop
dec
enter
cmpsl
jl
ficompl
in
das
xor
into
adc
jns
shlb
movsl
enter
adc
cmpsb
mov
dec
jae
movsl
jl
and
cwtl
xchg
push
sub
cld
clc
xchg
stc
or
insb
jnp
xchg
int
mov
xchg
sub
call
jp
pop
mov
shrl
add
sub
insl
mov
mov
mov
push
inc
push
add
lods
idiv
ljmp
ja
mov
ficompl
jo
popf
sub
test
push
jae
xor
iret
jecxz
cltd
jne
push
outsl
jno
xor
and
dec
add
shrb
adc
rol
cld
movb
outsb
sub
das
jns
pop
mov
aad
mov
cmpl
or
xchg
xor
fsub
inc
jnp
addr16
jg
movsb
dec
stos
ja
mov
jmp
add
popa
pop
lea
xor
and
mov
js
in
cltd
dec
xor
jle
xlat
pop
sahf
pusha
mov
sub
push
jge
cmpsb
dec
adc
mov
mov
pop
mov
pop
jge
sbb
ret
lods
leave
or
test
adc
pop
push
test
ds
aam
inc
pop
add
jecxz
in
ret
push
lret
shrl
mov
jmp
nop
or
enter
inc
daa
pop
lods
cmpsl
and
inc
cmpsb
push
imul
neg
fwait
mov
or
inc
inc
push
into
cltd
daa
jae
jno
cltd
pop
decl
lret
mov
rcll
clc
flds
mov
fildl
imulb
stos
mov
mov
add
and
mov
lds
jno
inc
push
mov
dec
mov
idivl
out
arpl
repnz
stos
fwait
add
dec
sarb
xor
imul
incl
lock
insb
dec
xor
test
and
add
adc
mov
out
les
or
or
adc
inc
add
cmp
mov
mov
pop
pusha
sub
sbb
push
dec
icebp
shrl
sar
jae
gs
mov
adc
dec
jnp
pop
pop
je
sahf
cmp
dec
pop
cmp
scas
sub
popf
xor
lods
inc
inc
xchg
pop
fcmove
les
or
xor
ret
jecxz
pop
xchg
pop
dec
test
xchg
dec
pushf
mov
xchg
lret
testl
sub
test
cmp
mov
cmp
push
pop
das
jp
stos
lret
jecxz
xor
push
cmp
je
jb
sub
push
inc
and
cmp
adcb
repnz
mov
test
pop
shl
addr16
mov
lods
aaa
add
and
int
sbb
je
mov
xor
xor
add
scas
arpl
jno
mov
mov
push
jnp
sub
sbb
stc
sub
sub
pop
pop
lcall
push
cmp
or
cmp
pop
popa
sub
inc
dec
xor
push
pop
adc
in
xchg
mov
pop
fisttpl
xor
cmp
movsb
out
or
xor
mov
es
mov
jl
mov
lahf
xchg
test
sbb
call
inc
outsb
fsubrp
not
push
jp
xor
xchg
ds
mov
lods
xchg
lret
mov
or
out
dec
arpl
push
clc
test
bound
aas
iret
xchg
dec
sahf
adcl
je
push
into
push
mov
adc
fstpl
dec
imul
sbb
inc
mov
inc
inc
mov
mov
dec
in
loop
data16
push
add
xor
movsb
pop
ds
cltd
insb
stos
js
popf
shlb
lock
popa
xchg
inc
xor
xchg
mov
dec
adc
adc
jo
mov
notl
push
mov
xor
push
std
arpl
xchg
mov
and
lahf
fnstsw
xlat
mov
jns
mov
sub
adc
out
ret
sbb
cmp
fistps
in
loopne
rol
jo
or
lds
ret
adc
add
aaa
xor
movsb
sbb
jl
fstl
addb
sub
popf
lods
bound
daa
push
inc
xchg
pop
mov
push
mov
lret
xchg
imul
popa
mov
std
jl
ss
sti
lret
out
mov
pop
rol
shll
insb
mov
and
jbe
das
add
bound
outsb
pop
push
or
cmp
int
cmp
pop
jb
fmulp
dec
dec
dec
xor
xorl
decl
mov
xor
test
push
test
inc
arpl
xchg
jno
test
shrl
hlt
hlt
repnz
fisubrs
fiaddl
insb
rcll
jecxz
pop
bswap
test
mov
and
sub
aas
das
data16
pop
cmp
pop
orl
inc
inc
fcoml
or
pop
jns
test
dec
fldcw
sub
lret
push
ja
daa
inc
clc
or
ljmp
jg
cmp
repz
popf
ljmp
data16
inc
mov
xchg
push
sbb
jne
test
cmc
hlt
sbb
lret
cmp
outsb
xchg
inc
mov
sti
sub
push
icebp
mov
sbb
cmc
mov
lds
xor
mov
jno
aad
jae
xor
mov
push
push
adc
dec
dec
int
xor
jno
xor
or
adcb
loope
je
inc
aaa
jl
pusha
mov
jno
int
mov
in
iret
out
xchg
xchg
imul
out
iret
sahf
inc
out
in
fisubs
sub
mov
jmp
mov
xchg
or
and
out
jmp
inc
int3
xor
mov
dec
test
push
jge
mov
fistpl
mov
inc
jmp
or
adc
adc
jge
mov
xchg
lock
xchg
mov
lods
popf
es
fdiv
mov
dec
int
xchg
lret
daa
repz
mov
or
dec
adc
clc
mov
fmuls
notl
push
outsl
subl
stc
enter
mov
add
cmp
outsl
pop
leave
out
mov
addr16
push
push
inc
mov
xor
test
pop
ss
fnstcw
popa
sbb
pop
xchg
cmp
adc
or
lahf
jg
dec
loope
das
add
mov
lods
in
xchg
outsl
pop
pop
and
fisubrl
nop
int3
sub
insl
pop
or
push
push
mov
pop
lods
je
clc
jno
fsubrs
or
pop
adc
int
jo
mov
jle
or
xchg
fisubl
inc
andl
cs
cmpsl
and
testb
dec
push
cmp
xor
ja
fwait
mov
icebp
loopne
cmp
mov
insb
jno
and
ljmp
xor
jg
xor
inc
movsl
mov
in
popa
inc
sbb
jge
sub
mov
shrl
scas
rcl
pop
xor
xor
push
call
adc
jae
test
cmp
clc
aas
repz
pmulhuw
cmpsb
push
mov
mov
repnz
pop
jne
out
push
xor
add
das
jle
lahf
dec
lret
dec
mov
aam
pop
mov
mov
lds
gs
dec
mov
lds
and
sbb
lret
aad
fists
and
add
adc
xor
mov
dec
pushf
fldcw
cmp
jl
outsb
cwtl
loopne
sbbl
pop
mov
mov
pusha
iret
push
mov
bound
pop
int
mov
les
pop
xchg
mov
decb
mov
lock
cmpl
cmpl
addr16
and
pop
xor
and
xchg
int3
pusha
stos
xor
mov
pop
cmp
es
scas
arpl
jb
adc
scas
sbb
add
insb
or
mov
shlb
ret
add
add
repz
lcall
lret
adc
push
rcr
dec
inc
sub
or
and
jmp
imul
inc
mov
adc
jl
jecxz
fldcw
jmp
fldt
and
cwtl
pop
mov
xor
fdivrl
sbb
mov
lock
loopne
xchg
add
rcrl
movsb
xor
mull
test
daa
push
mov
mov
stc
fmulp
sub
inc
fdivrl
movsl
gs
mov
push
jp
into
pop
mov
mov
dec
out
pop
mov
mov
filds
or
xchg
add
pop
xlat
xor
mull
pop
test
fnstenv
push
sbb
or
sbb
pusha
or
pop
xchg
pop
mov
sbb
sarb
mov
out
movsl
ds
and
and
test
call
mov
add
adc
jle
sbb
add
mov
in
lahf
icebp
ror
test
movsl
cmp
pusha
dec
in
iret
push
dec
mov
dec
ret
aas
mov
jno
loopne
nop
js
pusha
movsb
jae
lcall
push
ret
push
ljmp
adc
jge
sub
mov
test
adc
cs
into
jbe
lahf
xor
or
adcb
pop
into
inc
rclb
dec
out
inc
psrlw
mov
pop
push
shll
std
add
or
pop
out
or
cmp
dec
in
adc
sbb
adc
mov
and
imul
clc
outsl
int3
sbb
in
mov
data16
jne
inc
push
rclb
test
add
xor
fidivl
cmp
in
stos
das
outsl
insl
arpl
mov
outsl
shll
popf
leave
ss
mov
rorl
movl
push
daa
jns
jp
or
jp
rorb
aad
shlb
popa
jo
lahf
inc
jmp
cmpl
enter
add
scas
aas
fdivr
sbb
and
insl
push
bnd
jns
xchg
ds
pop
pusha
out
pop
and
lods
leave
shrb
mov
sbb
cli
xchg
mov
mov
mov
movhlps
sbb
negl
lcall
adc
jb
inc
addr16
jmp
jp
imul
adc
enter
hlt
cmpsb
mov
mov
xor
lret
outsl
addr16
cmp
cli
outsl
lea
int3
dec
test
jmp
insb
and
push
or
fldl2e
jmp
cmpsl
jns
or
sub
int3
js
jle
lds
mov
sbb
insb
push
aam
add
sar
lret
imul
jmp
xchg
jg
in
pop
fildll
xor
pop
push
sub
xchg
dec
es
imul
jbe
popa
dec
jns
call
mov
imul
cltd
push
in
data16
mov
push
icebp
jo
pop
push
mov
addr16
nop
ja
enter
int
mov
pop
xor
or
adc
jmp
fs
mov
lahf
xor
lahf
mov
pop
sub
pop
xchg
ss
cmp
cld
pusha
push
test
push
mov
cmp
xchg
sbb
fwait
jb
das
ss
jo
mov
jo
outsb
and
push
dec
push
or
push
mov
mov
test
fnsave
adc
stc
lcall
lret
lods
and
dec
in
mov
cmc
in
mov
pop
lock
fdivrl
lods
rcll
xchg
sahf
jle
out
sub
fistl
push
call
push
fisubrs
push
aas
movsb
sub
mov
push
imul
out
sub
pop
jmp
xor
test
out
mov
icebp
ret
add
adcb
incl
punpckhdq
xchg
cli
loop
fldenv
outsl
jbe
leave
mov
and
lds
fildl
addl
ret
repnz
scas
or
or
mov
test
xchg
or
rolb
xchg
scas
clc
add
jnp
jmp
jb
outsb
or
mov
push
xchg
push
loopne
push
push
lahf
mov
clc
mov
fimuls
mov
mov
push
sbb
mov
cld
subb
jmp
cmp
pop
gs
cltd
ss
fmul
dec
xchg
or
sbb
in
aas
cmp
cld
mov
ret
inc
clc
ss
jmp
imul
mov
cmp
mov
xchg
xchg
mov
pop
mov
lods
rolb
sbb
pop
int3
or
inc
cmc
jl
shll
xor
out
aad
adc
pushf
es
adcb
aam
add
jno
mov
enter
push
rol
inc
loope
aas
xchg
lods
popa
int
nop
push
jne
icebp
add
pop
repnz
shl
popa
ret
push
divl
xchg
out
mov
or
mov
test
negb
mov
popf
push
dec
add
cmp
add
cmp
icebp
or
sub
nop
je
popa
pop
ss
jns
and
xor
push
into
fisubrs
dec
push
fcoms
jge
inc
xchg
inc
add
or
push
inc
add
test
mov
sub
cmpsl
pop
lret
ret
inc
push
mov
data16
and
xchg
sti
gs
loope
sub
outsb
pop
shll
scas
ds
mov
jae
aam
push
pop
pop
fstpl
mov
cmp
inc
push
push
jle
jae
repz
lods
xchg
push
jp
mov
add
cmpsl
pusha
std
test
mov
stc
out
dec
repnz
addl
fwait
push
aam
nop
inc
rcll
xchg
int
sahf
mov
mov
cmpsl
push
mov
mov
stc
loop
sbb
shrl
repnz
ds
mov
scas
cmp
pop
mov
outsl
ret
dec
test
stos
xchg
mov
inc
lret
aad
jbe
cld
imul
test
popa
inc
dec
jbe
aaa
ret
or
je
call
sub
movsb
sub
cmpsl
adc
pop
xor
jp
push
adc
mov
lahf
mov
mov
mov
mov
dec
test
ret
sbb
in
push
xor
adc
popf
jae
int
mov
into
into
xchg
jmp
jle
je
arpl
push
cwtl
inc
addr16
inc
xchg
bound
mov
jg
dec
shlb
push
pop
add
mov
hlt
xchg
push
add
sbb
fs
outsl
cmc
mov
lods
out
jb
jb
push
add
outsb
push
xchg
pop
add
adc
xchg
xlat
sub
icebp
lcall
ja
outsl
or
mov
jge
cltd
mov
mov
inc
sbbl
or
bound
jbe
push
dec
xchg
cld
pop
das
repnz
add
daa
mov
push
pop
push
cmp
outsb
nop
inc
js
cld
fcom
or
cmc
sub
pop
xchg
push
stos
out
xchg
out
push
out
mov
and
lret
mov
shl
and
mov
xchg
int
das
adc
cli
xor
push
mov
fisubrs
mov
xchg
jnp
add
test
or
sbb
mov
mov
pushf
xrelease
push
mov
test
mov
test
sub
mov
mov
xor
pop
push
scas
push
aad
stos
pop
fsub
or
cmpl
ficomps
cltd
sub
pop
mov
and
dec
lret
divl
scas
fimull
mulb
stos
inc
adc
call
push
push
fisubrs
mov
popf
sub
and
popf
add
scas
xchg
sub
push
mov
fs
es
fstl
outsl
rcll
or
loopne
les
jnp
jne
test
mov
repz
xor
xchg
popf
call
pusha
or
dec
and
and
dec
adc
popa
fisttps
dec
mov
clc
lahf
cmp
outsb
push
mov
cli
adc
cs
cmp
aas
add
lcall
inc
fistpll
or
xchg
addb
add
fstp
out
js
jb
push
lret
pusha
mov
xchg
cs
pop
push
movsb
dec
inc
or
mov
pop
andl
sbbb
gs
jne
pushf
sbb
pop
pop
mov
addr16
call
daa
lahf
notl
int3
pop
mov
xchg
lods
adcb
insl
push
and
dec
outsl
addr16
mov
mov
insb
adc
mov
inc
and
mov
movsb
push
ret
jle
xchg
inc
loope
or
jmp
add
mov
sub
in
pop
xchg
xor
fmuls
pusha
or
mov
test
cli
gs
xor
pop
mov
push
mov
mov
cmpsl
jg
lret
out
push
movlps
int3
fs
push
pop
movsb
mov
cmovae
jge
rorb
xor
lock
adc
fwait
aad
aas
scas
cmp
stos
mov
or
xor
mov
ss
xchg
into
cmp
out
add
iret
in
out
mov
fsubrl
add
lds
add
popf
stos
mov
pop
add
jg
call
nop
xchg
int
mov
shlb
int3
pop
sbb
paddusw
repz
pop
pop
ljmp
aas
popf
fisubrl
mov
shll
sub
mov
enter
push
xlat
mov
movsb
fildll
pop
inc
lahf
jl
cmp
pop
xor
adc
out
adc
xchg
mov
jne
pop
and
fwait
movsb
andb
sub
cmpsl
cwtl
rcrb
call
or
popf
das
lds
xchg
hlt
les
jae
into
mov
out
outsb
imull
sbb
aad
pop
xchg
adc
xlat
pop
xchg
hlt
pop
mov
add
pop
jge
je
add
sbb
lret
push
test
sub
adc
mov
test
mov
ret
sub
sbb
gs
shlb
and
add
std
and
lahf
loope
jnp
jg
imul
les
dec
add
arpl
xor
xchg
lock
xchg
daa
sbb
idivb
lret
and
jbe
xor
adc
insl
sub
xchg
mov
or
sub
stc
push
inc
dec
xchg
rcrb
inc
arpl
lock
jecxz
mov
sub
xchg
ss
in
and
jle
cld
adc
out
push
jp
insl
sbb
and
and
pop
jle
add
std
sub
mov
inc
pushf
push
push
jb
daa
test
sbb
loop
push
pop
dec
lret
push
push
pop
push
mov
sub
test
or
mov
hlt
ret
imul
rcrb
mov
lods
jg
lock
xor
rorb
addr16
out
xorl
outsl
push
mov
mov
mov
cli
dec
sub
call
test
mov
sub
xchg
das
and
mov
adc
dec
dec
dec
cli
pop
aad
sub
push
cmc
add
mov
dec
lea
int3
sbb
mov
lahf
xor
iret
adc
pop
sbb
dec
or
aas
mov
stc
sbb
nop
mov
push
dec
scas
or
jge
mov
stc
dec
and
maxps
hlt
mov
notl
inc
xor
movsl
inc
lret
sbb
loopne
inc
pop
dec
fsubs
xorb
inc
xchg
out
fmulp
xchg
mov
je
mov
mov
sahf
subb
das
or
sbb
add
lds
inc
cmpsb
pop
rclb
popl
les
jge
popf
outsl
and
mov
repz
mov
jmp
mov
cmc
fwait
sbbl
lds
or
clc
inc
push
sub
cmpsl
ds
sbbb
mov
roll
das
fcmove
fs
add
movsl
jnp
jno
mov
hlt
popa
pop
fcomi
pop
movsl
popf
pop
int
and
iret
mov
in
add
imul
pop
mov
push
xor
pop
loope
fcomip
adc
addb
iret
movsl
movsl
outsb
xchg
lcall
rorb
movsl
imul
or
ret
outsb
movsb
xchg
and
jmp
mov
test
mov
test
cmpsb
pop
and
mov
sti
loope
dec
outsl
jp
fcomp
jp
jno
xor
or
and
pop
mov
dec
movsl
sub
ja,pt
scas
or
call
pop
enter
lds
jo
out
cld
pop
add
mov
in
lea
or
sub
sahf
xchg
cltd
add
xchg
outsl
push
inc
repz
xchg
ds
out
data16
adc
mov
pop
into
xchg
and
and
sti
lcall
push
push
lea
pop
cmpsl
push
es
fidivrs
inc
inc
sub
mov
scas
mov
dec
mov
pop
xchg
clc
jl
push
pop
int
test
xor
sti
mov
rcrl
xor
inc
dec
aam
or
stos
call
sbbl
mov
sbb
mov
ficoml
mov
and
pusha
inc
icebp
testb
xchg
sbb
in
clc
push
inc
nop
inc
sub
imulb
test
fnstsw
xor
add
fldt
adc
add
repnz
jle
inc
xchg
fnsave
jne
pusha
ss
pop
and
adc
aad
and
cmp
mov
dec
sub
movsb
pop
jno
and
fdivr
dec
cmp
lods
push
push
iret
in
mov
mov
popa
stos
sbb
cltd
jg
shll
xor
mov
shlb
arpl
xor
data16
fldcw
fldl
lret
call
scas
adc
jbe
cwtl
push
imul
mov
pop
jp
in
sub
xorb
xchg
shrl
push
je
push
or
add
dec
inc
in
sub
inc
push
and
inc
xor
insl
xlat
stos
pop
and
xchg
push
jno
hlt
push
jl
add
fwait
dec
dec
mov
aas
jp
jns
and
clc
dec
lea
sub
test
pop
inc
add
dec
adc
jnp
jo
pop
mov
mov
jecxz
inc
imul
mov
cmp
mov
inc
pop
inc
xor
jne
rcrb
out
xor
mov
rcll
push
xor
ds
jno
aad
pop
sbb
test
fcmovnb
aaa
and
xchg
and
dec
jle
pop
in
in
xchg
pop
mov
es
xor
insb
mov
sub
bound
xor
add
sbb
xor
or
pusha
cmp
jmp
enter
repnz
mov
mov
rcr
std
insb
sbb
and
mov
and
fistpll
xlat
pop
jp
xchg
std
mov
dec
mov
xor
lods
call
daa
sbb
shrb
xlat
ljmp
sbb
xchg
je
push
mov
jb
push
orb
xchg
jns
mov
insb
adc
out
mov
lods
rcrb
mov
stc
adc
mov
jge
xchg
cltd
adc
loope
dec
pop
push
mov
mov
xchg
mov
outsb
jmp
cmp
jl
dec
push
mov
mov
inc
push
xchg
call
mov
push
lcall
daa
pop
add
or
leave
add
mov
xchg
cmp
in
xacquire
fwait
mov
loop
push
in
clc
arpl
rcrl
pusha
imul
xchg
adc
movsl
push
scas
sahf
stos
inc
imul
fwait
push
lock
jge
xor
test
movsl
pop
dec
mov
mov
jo
pop
add
sahf
loopne
iret
out
xchg
cmp
in
addl
xchg
rorb
lea
stos
dec
push
inc
dec
call
adcl
jp
mov
jge
ja
dec
mov
es
lahf
stos
adc
pusha
or
add
out
mov
push
sbb
push
mov
std
mov
jae
sbb
xor
mov
push
ljmp
aaa
das
xchg
ss
xchg
jns
jbe
pop
std
xchg
aam
mov
cmpsb
pop
scas
push
hlt
push
jecxz
mov
popa
mov
out
dec
imul
or
lds
mov
xor
fildll
dec
out
les
fildl
icebp
xchg
add
ss
cmp
iret
in
xchg
cmpsb
sbb
jae
sub
push
pop
lahf
add
aad
mov
inc
xchg
xor
sarb
mov
imul
dec
cmp
mov
mov
mov
mov
aaa
iret
imul
add
add
jae
mov
xchg
mov
xor
add
cs
inc
cmpsb
push
fwait
in
and
scas
in
cwtl
stc
hlt
in
dec
hlt
ret
adc
sarl
iret
mov
jle
cmp
test
jge
dec
mov
sbb
xchg
dec
add
shlb
mov
cs
mov
cs
enter
cmp
inc
mov
lds
push
in
rcl
shrb
pop
cmp
push
cmp
mov
sub
call
fldcw
mov
jg
pop
adc
and
mov
mov
cbtw
and
lods
jmp
insb
jne
xchg
popa
lret
in
test
lret
test
mov
ret
push
push
movsl
mov
test
leave
xor
inc
inc
andb
sub
into
mov
jl
repz
adc
inc
scas
outsb
out
xchg
sub
xor
in
xchg
push
mov
sub
sarb
push
mov
mov
push
add
dec
in
inc
fldl
fbld
shl
add
xor
fnstsw
fwait
xchg
test
cli
xchg
pop
fs
lods
or
aaa
push
push
sahf
scas
arpl
pop
pusha
dec
data16
stc
jge
jp
dec
rorb
or
sbb
fiadds
cltd
add
lret
jecxz
js
lock
xor
inc
dec
roll
xchg
lods
cmp
mov
push
mov
mov
push
add
iret
scas
jns
xor
add
xchg
dec
mov
pop
push
lahf
dec
sub
add
xchg
xor
fwait
push
push
loopne
sub
sbb
add
popl
sahf
push
jle
iret
push
test
shll
sarb
stos
adc
xchg
ret
ss
sti
or
or
and
sub
add
outsl
jmp
push
sbb
shll
fstpt
popa
movsb
cwtl
and
inc
mov
nop
cmp
jbe
fnstenv
push
cli
in
icebp
pop
inc
jmp
mov
std
pop
dec
push
inc
mov
pop
dec
sub
xor
dec
push
out
push
mov
adc
mov
cltd
mov
push
sub
push
hlt
mov
fwait
clc
mov
jmp
imul
dec
sbb
clc
pushf
js
and
xorl
test
cld
in
and
xor
inc
fsubl
mov
push
scas
cs
fs
les
sub
dec
xor
mov
aaa
loopne
mov
in
jne
in
mov
es
pop
lock
shl
popf
pusha
cmp
push
mov
mov
dec
cwtl
filds
mov
cli
out
int3
stos
stc
dec
fwait
jle
mov
push
aas
scas
xor
hlt
mov
push
std
or
ret
ret
outsb
jae
scas
ljmp
cmpsl
push
outsb
adc
scas
and
add
pop
mov
sbb
daa
sub
loop
mov
mov
aaa
mov
push
es
dec
sub
fstp
jg
adc
sub
iret
pop
or
lds
in
cwtl
cmp
ja
mov
out
jno
lds
xor
out
xchg
xchg
test
jg
movsb
je
push
and
push
or
or
icebp
sbb
or
xchg
enter
adc
add
push
jmp
mov
mov
fs
ds
loopne
std
es
add
icebp
aam
sub
hlt
out
cmp
pop
test
lea
sbb
test
ljmp
ds
int3
jecxz
outsb
inc
loopne
xor
jp
cmp
cmpsl
adc
cs
push
jnp
and
lods
mov
inc
insb
movsb
cmp
jb
pop
jo
pusha
sbb
es
js
push
div
fldcw
xchg
cmp
shlb
add
icebp
popf
fsub
mov
les
sbb
fdivr
or
cld
sub
iret
xchg
jge
jne
pop
cld
int
jno
push
mov
mov
fldcw
push
push
loopne
ja
dec
dec
xor
sub
aas
adc
lret
jne
xchg
xchg
adc
test
jo
push
and
pushf
lods
mov
add
cli
adc
sub
les
xchg
int
jmp
inc
sbb
dec
fidivl
dec
les
sahf
repz
and
insl
add
inc
hlt
or
in
stos
es
inc
mov
add
mov
xchg
in
cwtl
pop
xlat
add
sbb
mov
cmpsl
pop
daa
dec
outsb
lret
cmp
fwait
pop
dec
nop
push
mov
scas
mov
push
icebp
pop
int3
push
loop
jae
sbb
das
popf
pop
jb
push
add
push
cmc
icebp
cwtl
mov
mov
push
pop
pop
xor
ljmp
pusha
pusha
inc
cmp
mov
ret
sbb
and
pop
insb
push
sbb
imul
ret
jg
mov
xchg
and
adc
add
xor
mov
push
ret
jae
push
pop
cmc
bound
inc
cmpsl
repnz
aad
jg
ret
cmp
pop
in
add
test
shl
loopne
xor
dec
adc
scas
xchg
sbb
stc
testl
mov
jns,pt
xchg
test
idiv
mov
mov
clc
pop
inc
mov
test
xchg
xor
jecxz
js
popf
inc
and
fisubrs
mov
sbb
jecxz
mov
cmp
fdivl
cmpsb
or
icebp
insl
sahf
aad
jnp
xor
mov
xchg
push
mov
push
xchg
stos
sbb
loop
clc
cmpsb
cmpsb
fucomip
mov
out
mov
out
cmp
scas
movsb
mov
aam
adc
iret
or
das
mov
mov
push
sbb
cmp
xchg
push
lods
into
sub
pop
shl
or
sub
mov
rcr
hlt
push
xor
jecxz
cli
stc
inc
dec
jnp
sbb
xchg
fldcw
jns
mov
mov
stos
add
popf
iret
or
js
test
cmp
inc
mov
fidivrs
pop
lret
xchg
push
push
inc
mov
mov
stos
je
in
popl
sub
lahf
out
pop
mov
pop
mov
or
push
out
jo
sbb
xchg
ljmp
nop
ljmp
jge
mov
push
pushf
leave
cmpsb
das
call
frstpm(287
leave
jl
imul
rorl
lahf
mov
in
push
in
in
pushf
jne
pop
movsl
add
fs
stos
xor
pop
mov
popf
pop
sub
sahf
cmp
jno
mov
xchg
push
sbb
out
ret
lcall
loopne
fcoml
dec
fwait
sub
mov
into
imul
push
enter
std
test
pushf
sub
or
xchg
mov
jnp
mov
dec
cmpsl
insb
mov
aam
mov
pop
cmp
pop
ret
int3
sub
adc
pop
mov
push
xchg
and
cld
adc
rorl
popa
test
cld
cltd
call
icebp
jge
fs
arpl
sarb
xlat
ljmp
mov
imul
or
or
rcrb
into
lret
fiadds
mov
sbb
and
pushf
gs
cmc
shrb
out
pushf
aad
push
jb
cmp
iret
cld
add
lea
xorb
iret
out
fisttpl
xor
add
fcomps
pop
inc
mov
repnz
nop
sbbb
mov
hlt
mov
js
mov
add
inc
ljmp
subb
and
insb
mov
dec
sub
pop
add
xchg
icebp
test
dec
pop
mov
fadd
mov
mov
push
fadds
xor
pusha
xor
rorb
mov
inc
jl
adc
xor
mov
jg
retw
inc
mov
test
xor
push
lods
lods
add
nop
std
sahf
dec
repnz
jecxz
cli
xor
pop
sbb
mov
dec
fbld
and
push
mov
mov
xchg
mov
and
aas
inc
push
addr16
sahf
xchg
pop
pop
dec
cld
call
rorl
gs
fisubs
xchg
pop
dec
cld
sub
jnp
fcmovb
out
mov
mov
adc
mov
arpl
inc
sbb
aaa
sub
mov
push
sbb
adc
scas
push
jo
push
push
pop
iret
in
ret
jmp
pushf
xor
cmpsb
stos
out
dec
xchg
push
inc
orl
adc
jne
clc
out
repz
decl
mov
xor
push
icebp
lods
loop
lods
icebp
cmp
inc
mov
mov
into
movlps
mov
pop
sub
mov
and
imul
mov
jne
jo
mov
lret
mov
ret
mov
cld
sub
jmp
out
pop
in
jmp
sub
imull
into
sbb
pop
add
mov
mov
jl
iret
stos
cld
ss
mov
push
xor
dec
std
addr16
loope
fnstsw
pop
pushf
cmp
sarl
fimuls
orl
mov
fisubl
je
and
and
sbb
into
call
or
sub
bound
jns
stos
mov
pop
imul
icebp
aaa
or
bound
js
lods
mov
sahf
mov
add
push
lcall
movsb
std
aam
pop
jo
rolb
push
cmc
pop
xchg
xor
addl
imul
fwait
dec
push
xlat
out
cmp
cmp
aaa
into
movsl
jns
loop
mov
icebp
push
addb
test
repz
mov
jecxz
iret
std
movsl
iret
sbb
add
test
sbb
hlt
and
insb
jo
mov
xchg
pushf
icebp
add
loopne
mov
mov
cmpsl
xor
adcl
mov
out
xchg
imul
lods
ss
mov
ljmp
mov
sbb
test
add
repnz
lret
repnz
out
imul
mov
cmc
imul
push
cmpsl
in
ja
dec
arpl
adc
movsb
or
fisubl
cmp
jg
ret
hlt
push
movsb
sub
pop
outsl
stos
mov
sbb
pop
sub
pop
mov
mul
xor
xor
mov
shlb
fildl
and
pop
ret
push
or
and
leave
out
or
or
idivb
push
mov
stc
lock
paddsb
xor
shll
test
cmp
sbb
roll
mov
insl
les
test
pop
mov
popa
adc
rorb
test
jnp
icebp
sahf
cmp
iret
stos
xchg
sbb
js
js
push
enter
mov
pop
test
mov
and
mov
xchg
ret
int3
or
xchg
shr
es
popf
add
subps
cwtl
int
jb
pop
mov
xor
das
or
jle
rcrl
mov
ja
mov
push
cltd
ret
jns
fucom
jg
stc
sub
ficoms
fisttps
daa
xchg
int
push
lock
mov
je
ss
lds
xlat
shll
mov
fidivl
imul
push
test
and
test
mov
test
push
js
mov
cmp
sbb
pop
cmp
mov
bound
sbb
xor
mov
lods
mov
and
sub
xor
sub
xchg
push
sti
pop
ret
and
sahf
mov
je
and
xchg
or
shl
clc
dec
fsubs
orb
fwait
pushf
xor
xchg
adc
pop
call
mov
mov
scas
out
andb
inc
test
cld
insl
lods
mov
iret
push
inc
hlt
repz
pop
dec
xchg
xorl
jnp
lret
and
lods
push
dec
mov
jl
push
leave
jmp
cmpsb
cmp
mov
outsl
cmp
push
xor
int
cli
addl
cmc
out
hlt
sar
cmp
jecxz
movb
inc
jne
sbb
dec
jb
repnz
jecxz
iret
xor
adc
lock
pop
clc
sbbl
push
jle
push
arpl
sbb
adc
push
std
xor
rorl
xor
and
outsl
aad
arpl
lret
or
cmp
out
sbb
push
dec
rcrl
cmp
aaa
or
mov
subl
je
pop
movsb
test
imul
cmp
lahf
ss
lcall
jno
lcall
test
test
and
add
popf
jle
or
icebp
mov
cmc
jo
into
dec
jge
loopne
jecxz
in
inc
xchg
arpl
gs
lods
pop
nop
in
jp,pn
inc
xchg
push
dec
sbb
jle
mov
test
xchg
add
ror
sub
mov
sbb
jnp
mov
call
push
add
push
cmp
inc
sub
cmp
movsb
das
lret
rclb
call
mov
dec
or
movsl
in
loope
dec
loopne
xor
mov
xchg
xor
cs
movsl
sbb
mov
stos
dec
cmp
aaa
in
adc
imul
mov
or
movsb
xor
dec
outsl
fwait
call
add
dec
and
dec
mov
dec
inc
adc
push
cmp
jns
loope
mov
icebp
push
out
cmp
xchg
sub
mov
mov
jge
mov
adc
inc
fmuls
scas
pop
pop
lods
aad
push
or
ficoml
lock
in
in
inc
jp
jno
push
cmp
stos
or
sbb
ss
mov
enter
mulb
pop
adc
jg
xchg
sbb
xor
sub
in
mul
jno
cmp
insl
outsl
xor
pop
outsl
inc
ret
push
lret
test
pop
sub
nop
stc
jns
je
neg
xchg
mov
jne
dec
fldenv
imul
cmp
gs
imull
xor
shlb
mov
insb
add
adc
push
es
ds
sub
xlat
dec
std
daa
movsl
sbb
das
xchg
pop
nop
push
sbb
xor
xchg
shrb
push
les
push
dec
lea
jne
outsl
stc
adc
push
mov
movsb
cld
dec
lods
loope
scas
cmpsl
lods
push
inc
push
push
mull
xchg
incb
pop
and
test
imul
add
mov
ljmp
pop
cmp
xchg
sub
fwait
in
or
loopne
sbb
test
and
xlat
mov
jno
mov
mov
daa
sbb
sub
dec
mov
rcrl
das
subb
sbb
leave
scas
dec
cltd
lods
jbe
jne
fsubp
sub
cmpsl
cmp
sahf
imul
inc
leave
or
cwtl
xor
push
push
mov
sbb
cwtl
call
es
push
inc
adcl
sub
mov
cmc
cld
lods
pop
mov
sar
or
add
push
push
cmp
in
js
push
aad
mov
leave
jo
push
loop
test
inc
notb
xchg
lds
repz
cmp
add
push
pop
cmp
jbe
loope
mov
mov
cmp
test
mov
mov
xor
cmpsl
mov
and
repz
xchg
or
daa
test
test
mov
mov
push
out
or
push
push
dec
int
fisttpl
mov
xor
adc
insb
nop
cmp
insb
rolb
mov
addb
push
xchg
pop
lds
or
lods
sub
adc
fimuls
repz
push
sbb
and
pop
lret
mov
sub
data16
fildl
arpl
fcoms
xchg
pop
cmp
std
xor
scas
cmc
or
push
fnstenv
push
jecxz
sahf
int
xchg
loopne
pop
test
iret
mov
movsb
sub
inc
dec
add
int
es
adc
xor
leave
and
sub
ljmp
dec
test
mov
add
push
sbb
add
sub
clc
xchg
aaa
cmp
test
shrb
cmp
add
and
negl
inc
push
xor
sbbb
adc
mov
stc
lahf
pushl
ds
add
jbe
movsl
mov
push
int3
push
mov
push
xchg
xor
sub
push
sbb
aam
push
fisubrl
fxrstor
loope
push
insb
adc
cmp
and
pop
pop
add
icebp
popf
stc
and
jb
mov
dec
loop
aam
sbb
cmc
lock
push
decl
shlb
pop
jl
lds
dec
pop
xchg
hlt
xchg
ljmp
mov
jecxz
data16
jle
mov
sti
rclb
push
fidivrl
nop
ja
or
mov
popa
push
mov
dec
in
sbb
aaa
rol
stc
shrl
push
in
fstl
out
call
cmp
test
fwait
and
je
jmp
sub
adc
jbe
adc
cwtl
xor
or
inc
addr16
push
ret
test
jmp
mov
xchg
jno
loope
das
ficoms
xor
sbb
push
out
scas
in
pop
xlat
ret
das
inc
testb
ljmp
addl
stc
xchg
lahf
mov
xchg
jns
hlt
dec
outsb
ds
sub
pop
into
push
test
push
call
push
pop
and
mov
xor
out
imul
lahf
add
ret
dec
jmp
iret
mov
insb
es
xchg
cmp
adc
jnp
movsl
push
add
push
push
test
std
loope
and
push
jle
loope
xor
pop
cltd
bound
or
arpl
jns
movsl
xor
gs
repz
je
repz
xor
out
arpl
cs
and
mov
hlt
pushf
xor
push
das
xchg
scas
adc
or
mov
daa
mov
loopne
mov
ds
fmulp
push
jns
stos
addr16
inc
mov
pop
leave
rorl
inc
cs
xchg
mov
fwait
and
push
stos
cli
push
mov
xor
mov
inc
lahf
pop
ds
hlt
shlb
cmpsl
adc
xchg
out
enter
inc
test
jns
mov
push
xor
iret
pop
mov
pop
dec
pop
lahf
aam
outsl
loop
lret
jno
sub
daa
jl
xor
sbb
jno
xchg
pop
ss
cmpsb
push
push
mov
pop
mov
mov
mov
fsubrl
shll
mov
inc
sbb
xchg
mov
addr16
push
inc
jp
cmp
subl
push
outsl
loopne
mov
or
ret
outsl
fildl
push
xchg
outsb
rcll
repnz
xchg
lds
and
jp
rclb
dec
rcrl
nop
mov
inc
cmpsl
mov
les
test
and
xchg
hlt
and
pop
dec
ja
in
pop
xor
xor
out
insb
mov
pop
lcall
adc
inc
pop
xor
push
mov
inc
sti
mov
out
frstor
or
adc
xlat
inc
repnz
mov
push
ret
pop
push
sbb
aaa
push
stc
cmp
sahf
fmul
pushf
popf
sbb
push
fsub
sbb
leave
mov
rorl
xchg
jno
jae
dec
ret
lahf
mov
fnstsw
and
stos
or
mov
adc
andl
or
jge
or
test
xchg
dec
int3
pop
rcr
loop
leave
cmp
leave
xchg
xchg
stos
cmp
vmread
stc
jnp
lahf
fdivs
pop
cmp
jne
add
mov
lods
pop
rol
sub
lds
pop
sbb
ds
jecxz
cmp
mov
loope
rclb
fcmovne
cmp
push
imul
and
cmpsb
mov
mov
mov
add
das
dec
add
jbe
icebp
jp
push
mov
or
pusha
jmp
pop
pusha
out
jnp
imul
fwait
rsm
pop
pop
cmp
ljmp
leave
fnstenv
mov
cmp
mov
sahf
sbb
lret
jno
rorl
or
dec
pop
xor
push
test
push
and
aaa
cmp
sub
gs
or
pop
sbb
enter
fwait
scas
cmp
fwait
ja
aad
dec
lds
fnsave
in
push
jge
loop
add
rclb
sbb
sbb
lds
cmpsl
fs
ja
insb
fmuls
push
sub
enter
repz
inc
std
sbb
fistpll
aaa
sbb
lret
push
test
sub
lret
push
addl
sbb
cvtpi2ps
xchg
sbb
cltd
aaa
jo
dec
pop
in
loope
cld
sub
lock
pusha
mov
pusha
nop
loop
jbe
aad
inc
pop
jns
mov
add
add
mov
jmp
movsl
aam
sub
call
mov
int3
cmp
lahf
sbb
mov
cmpsb
sbb
mov
ja
xor
in
movsb
roll
mov
cltd
push
push
andl
push
dec
test
loop
push
push
das
xor
cld
jg
jnp
imul
lods
pop
adc
pusha
dec
mov
ficoms
jb
shl
shrl
jno
push
mov
pop
or
divb
add
sub
into
push
dec
std
outsb
mov
insl
lcall
aad
inc
gs
push
cltd
insl
xor
pop
lds
repnz
in
or
hlt
or
pop
add
mov
or
sbb
pop
jle
sub
bound
jecxz
cwtl
rcll
scas
hlt
push
icebp
aad
test
cwtl
lds
mov
stc
insl
fs
jb
movsl
fucomi
cmp
xor
rcll
out
pop
jnp
movsb
sub
mov
xchg
es
bound
cmp
enter
jne
or
pop
lods
or
pushf
daa
add
xchg
push
xchg
daa
and
cwtl
insb
idivb
movsl
lods
icebp
test
sub
test
lcall
mov
sahf
lretw
jbe
mov
test
or
push
pop
cmpsb
hlt
in
test
fs
test
pop
push
xchg
ds
or
test
push
pop
mov
push
iret
adc
dec
lods
ja
add
cmpsl
sbb
dec
dec
mov
jmp
sbb
inc
cld
sbb
add
lea
sub
insb
sbb
mov
test
mov
imul
lods
cmc
mov
stc
movsl
call
psubd
int3
pop
mov
mov
js
test
test
push
lcall
mov
push
inc
cld
pop
rolb
adc
fmulp
jge
jmp
sub
nop
lods
push
add
std
arpl
ds
fiadds
iret
or
daa
jnp
push
lock
rcll
aas
xchg
icebp
mov
jnp
dec
cmpsl
dec
ja
mov
dec
cmc
cltd
cmpxchg
mulb
add
push
loope
and
mov
les
push
push
mov
dec
dec
lret
ret
sbb
in
xchg
dec
lcall
mov
cmpl
jae
add
sbb
fnsave
mov
popa
imul
test
test
es
repnz
inc
rcrb
testb
fldl
adc
pop
xchg
lods
addl
aam
cmp
mov
sbb
jnp
jmp
daa
in
cld
push
cld
popa
lret
and
sbb
repz
ret
cmp
or
fwait
aaa
je
call
arpl
jbe
imul
push
xchg
sti
adc
mov
rcr
xchg
xchg
mov
lds
rorb
adc
mov
fwait
loope
stc
fidivrs
mov
mov
jge
imul
test
pop
mov
add
bound
ret
cmp
pop
loop
rol
jge
js
and
cmp
icebp
call
fiaddl
sub
push
scas
push
xchg
pushl
outsl
dec
imul
dec
inc
pop
pop
xlat
mov
jl
xchg
mov
shlb
outsb
aaa
in
popa
xchg
jp
and
loope
jmp
aas
pop
cmp
imul
xor
out
or
cli
adc
inc
pop
mov
push
cld
sub
mov
das
orb
xchg
pop
xor
mov
push
les
repnz
andb
adc
xor
xor
mov
fisubl
nop
incl
cmpb
loop
xchg
and
stos
push
xor
cmpl
add
sub
cltd
insb
insl
xor
cwtl
jecxz
adc
daa
add
outsl
xor
and
sub
gs
xlat
aad
xchg
subb
sub
icebp
lcall
pop
ja,pn
ret
dec
xor
jl
and
jb
cmpsb
je
add
ljmp
icebp
pop
cs
shrl
enter
jmp
jo
jne
push
pushf
push
imul
fwait
cmc
insb
rcr
mov
add
movsl
fsubl
das
arpl
fwait
jge
pusha
mov
sahf
cmpsl
mov
in
fiaddl
add
pushf
adc
adc
fnstsw
subb
test
aas
xor
nopl
fnstcw
pop
xchg
aad
sbb
aaa
cmp
imul
sbb
les
ret
das
sub
movsl
inc
popa
mov
mov
xor
jnp
clc
pop
in
jo
sub
pop
push
fadds
xor
xor
mov
push
mov
jne
loop
pop
mov
in
dec
mov
loopne
arpl
imul
adc
mov
rol
sbb
or
add
jbe
xchg
xor
flds
xor
insl
std
mul
shrl
sbb
sbb
add
mov
nop
sub
sbb
das
push
dec
pop
ror
adc
fiaddl
push
in
out
inc
dec
shlb
push
adc
push
mov
loopne
fcom
int3
lods
inc
mov
mov
fnstcw
mov
enter
cmc
out
popa
dec
dec
push
das
es
das
cmc
andl
in
lds
jb
sbb
les
push
lahf
lret
int
fsts
mov
imul
inc
fbstp
dec
push
incl
out
icebp
sbb
pop
add
lahf
pop
jecxz
sub
xchg
je
mov
jns
dec
xchg
loope
inc
mov
hlt
add
lret
jecxz
lea
and
push
sbb
jbe
mov
stos
dec
xor
test
out
leave
jnp
adc
jmp
mov
xchg
int3
or
ficoml
mov
adc
fmull
mov
pop
daa
sub
pushf
sub
lds
jb
or
lds
xchg
arpl
xor
sub
cmp
testb
xor
fcom
aas
call
sbb
aad
and
scas
mulb
rol
jns
fsubrl
mulb
in
repz
jg
iret
rorl
lds
push
adc
stos
adc
repz
ja
and
sub
das
mov
push
mov
and
xorl
call
inc
in
test
pop
inc
mov
repz
jno
pop
dec
pop
xor
pop
aam
mov
popa
fs
jns
test
sbb
jbe
mov
add
jmp
pop
and
cwtl
sub
cld
inc
hlt
sbb
dec
xlat
or
ss
mov
stos
addb
int3
sbb
cmp
xlat
sbb
cld
push
js
jno
jns
xor
lods
adc
fs
mov
pop
xor
dec
xorl
fs
nop
xor
and
mov
jle
push
ja
mov
jnp
stos
xchg
pushf
in
fidivs
adc
cmp
push
adc
inc
popf
rorl
dec
cltd
vsubss
xchg
push
shl
mov
stos
shrb
dec
out
out
shl
clc
mov
inc
shlb
data16
ror
jmp
enter
sarb
cmp
adc
movsb
xor
mov
sbb
xor
adc
and
data16
mov
adc
inc
fsubs
mov
push
mull
xchg
int3
inc
pop
pop
in
ret
jp
lock
jnp
popa
adcl
stc
inc
in
cltd
inc
xchg
repnz
inc
jnp
hlt
add
and
test
sahf
jb
pop
push
int
addr16
xor
mov
mov
testb
add
out
inc
repz
bnd
xor
xchg
dec
jmp
nop
stos
fmull
push
mov
mov
in
pop
sub
and
movsl
xchg
icebp
sub
cmpsb
ds
inc
aaa
mov
mov
imul
and
rorb
mov
jecxz
mov
mov
sbb
sbb
mov
push
insl
mov
inc
push
mov
and
call
orb
cmpsb
mov
addr16
rorl
je
mov
inc
lret
fldenv
pop
lahf
lahf
loope
or
lahf
inc
lahf
adc
mov
pop
mov
and
dec
insb
test
mov
jo
fildl
dec
loop
and
cmc
jae
push
push
in
or
jmp
jnp
fcoms
adc
mov
mov
or
xchg
mov
xor
push
cmc
into
fiadds
pop
xor
imul
cmpsl
jb
mov
jbe
mov
cmpsl
lret
sub
jb
inc
test
gs
and
shll
jl
sbb
lcall
jecxz
xchg
cmp
leave
shlb
mov
xor
jp
icebp
jno
pop
rcr
fwait
push
add
xor
mov
jecxz
ret
and
cmc
imul
and
xlat
adc
cwtl
std
insb
cli
hlt
push
jg
mov
lds
fsubrs
jb
shlb
loop
xlat
cmpsb
cmp
xchg
xor
arpl
or
mov
jae
cmp
mov
rol
ret
shll
clc
mov
ds
pop
or
sahf
jecxz
or
fsubrl
loopne
pop
lods
inc
in
sub
out
or
adc
mov
enter
andb
adc
sub
add
cmp
lret
adc
fdivr
and
and
lcall
fs
xchg
or
test
scas
insb
xor
cmp
scas
xor
repz
inc
repnz
xor
insl
pop
jle
mov
jmp
push
xor
stos
cmp
push
and
cmc
scas
dec
or
xchg
xor
adc
mov
jbe
xor
mov
adc
pop
sbb
xchg
sar
add
fldl
push
push
sahf
repnz
test
popa
and
loop
mov
call
sti
in
shll
shrl
sub
dec
lea
inc
push
insb
jecxz
mov
decl
test
mov
loopne
jnp
fldt
mov
jp
subb
inc
leave
sub
cmp
loop
outsl
pop
add
xchg
cwtl
or
lods
sbb
adc
fcmovu
addb
leave
enter
mov
movsb
or
adc
insb
dec
sub
popl
mov
shl
jg
data16
mov
movsl
mov
xchg
pop
negl
adc
inc
rol
jecxz
shll
push
add
jle
je
fcoms
pop
pop
jns
js
jp
cmp
cmp
int3
movsb
rorb
imul
lods
les
cmpb
xor
es
adc
das
xor
xchg
loopne
xchg
scas
pop
sarb
and
push
jno
inc
sbb
jge
dec
mov
mov
fsubrp
xchg
out
in
xor
or
sub
loopne
pop
adc
iret
das
xor
shrb
pop
std
lahf
ret
mov
pop
push
mov
mov
pop
mov
in
mov
movsb
sbb
xchg
jmp
and
sbb
sar
inc
popl
and
inc
xor
lret
scas
mov
xor
adc
push
lods
ds
dec
lock
dec
jge
jne
pushf
cmp
mov
xchg
test
ficoms
addl
sub
xchg
enter
fcmovnbe
lret
stos
rcl
fptan
jg
pop
push
test
xor
sbb
test
leave
out
mov
push
pop
cmp
loope
cwtl
fnstcw
and
xchg
std
int
addb
lods
test
cli
ficoms
clc
xchg
dec
movsb
icebp
mov
mov
fucom
outsb
mov
movsb
icebp
mov
imul
and
dec
sbb
push
incb
orl
ficompl
pop
xor
std
ss
dec
leave
pop
std
cmovno
js
int
mov
daa
inc
mov
xor
or
test
xor
dec
lcall
mov
xor
aad
dec
push
mov
sbb
dec
stos
sbb
fsubrs
out
pop
inc
adc
pop
sbb
cltd
sbb
xchg
shlb
aam
jmp
inc
fnstcw
xlat
xchg
iret
cs
in
in
pusha
sbb
clc
push
sti
adc
jecxz
icebp
inc
out
and
cld
push
mov
mov
dec
lea
jp
push
xchg
add
cmc
les
fnsave
int3
xchg
roll
fwait
or
js
faddl
push
mov
lea
xor
dec
bound
mov
mov
mov
test
shll
push
imul
xchg
fwait
add
imul
fdivr
mov
andl
das
jecxz
mov
jb
xor
cmc
jp
cs
jo
in
stc
jb
push
cmp
ja
cwtl
sti
push
or
add
imul
lds
push
lret
test
or
mov
xchg
sub
je
lea
cmp
inc
out
push
mov
mov
test
fnsave
sub
sub
mulb
imul
arpl
add
jl
sahf
icebp
pop
mov
sarl
sub
sbb
insl
cmc
gs
iret
mov
dec
clc
mov
or
shrl
mov
push
mov
es
xor
add
pop
add
xlat
ds
lods
lea
in
sbb
outsb
cmpsl
adc
pop
xor
pop
or
arpl
imul
popa
adc
std
outsl
adc
inc
test
cwtl
movsb
jno
call
inc
imul
ja
insl
cmp
dec
popa
or
enter
pushf
mov
jbe
test
pop
lock
and
idivl
cmp
dec
sub
sub
adc
inc
dec
dec
mov
lret
shlb
fstpt
lret
sbb
add
fsubl
orl
or
dec
xor
clc
into
mov
or
clc
sti
jb
sbb
xchg
xor
dec
daa
scas
sub
pop
aam
inc
std
stos
jbe
ficoml
inc
jb
in
or
ja
dec
out
movsl
dec
imul
lcall
scas
push
mov
imul
jmp
ljmp
pushf
negb
dec
in
sub
pop
cmp
repz
mov
push
out
mov
iret
dec
jmp
jns
or
nop
sub
movsb
rolb
in
push
mov
scas
lods
popa
clc
in
add
gs
iret
xor
cmpb
fnsave
mov
push
xor
add
jp
mov
in
mov
pop
push
dec
adc
into
and
jns
xchg
rcrl
add
push
and
sbbl
pop
scas
adc
movsl
mov
mov
cmc
aaa
mov
dec
mov
les
lock
jne
mov
cmp
xorl
mov
andb
cs
and
sbb
fstp
mov
fcomps
cmpb
in
shrb
in
out
daa
ja
lds
xor
aad
mov
adc
pop
ret
cmc
mov
das
into
test
mov
imull
dec
pop
xchg
push
daa
lods
ljmp
or
lock
dec
popa
mov
adc
cld
pop
dec
in
aas
push
test
sbb
in
aad
add
push
pusha
and
hlt
jb
mov
cwtl
and
out
loope
xlat
and
ror
insb
loop
movsb
lds
xlat
out
mov
mov
push
inc
ds
jmp
mov
push
xor
push
mov
dec
sub
sub
je
xchg
hlt
shll
add
mov
jecxz
xchg
aad
dec
lahf
int
jae
mov
adc
jmp
test
scas
lahf
add
outsl
inc
cmp
mov
lret
icebp
mov
mov
lret
and
sbb
fisttpll
mov
sahf
xchg
roll
imul
pushf
jg
je
loop
ds
sub
orl
cmp
add
jp
pop
pop
adc
popa
and
pusha
push
mov
add
pop
inc
ss
push
mov
cwtl
sub
fnstcw
adc
xchg
ds
fisubs
testb
xor
rcl
adcb
in
pop
inc
ljmp
mov
and
sbb
xchg
pop
ja
mov
pop
nop
sbb
leave
inc
xor
mov
pop
idivb
test
xchg
sbbb
or
fs
lds
adc
or
dec
mov
sub
fincstp
pusha
sbb
push
add
add
mov
es
in
je
dec
push
mov
aad
push
icebp
insl
lret
inc
lret
lcall
lcall
mov
shlb
subl
mov
sahf
fldt
leave
mov
jbe
dec
xchg
mov
ss
clc
lds
sbb
xchg
add
mov
rclb
lea
movsb
push
push
and
sub
fwait
cs
push
jns
adc
into
adc
fidivrs
xor
sub
xchg
add
test
test
aad
jo
imul
add
or
lods
xchg
push
loop
sub
jmp
dec
adc
call
push
scas
outsb
fstl
sbb
mov
dec
jg
shrb
jg
ljmp
inc
mov
add
push
push
mov
sub
lea
outsl
lods
outsb
sbb
mov
xor
mov
adc
or
push
mov
cmpsl
fisubrl
or
mov
dec
stos
mov
faddl
pushf
xor
dec
in
stos
idivl
dec
loope
xchg
jae
pop
add
add
jbe
subl
lods
cmc
mov
pop
xchg
je
cli
fisubs
shl
mov
cs
addl
int
add
shrl
adc
cld
lods
stos
sub
in
movsl
test
rep
rcl
es
int3
dec
mov
rcll
adc
inc
fistpll
push
nop
rorb
push
das
aaa
dec
not
out
inc
push
jbe
scas
icebp
sbb
xlat
xchg
adc
cltd
inc
jno
fidivs
sbb
or
test
xorb
cld
add
mov
add
outsw
pop
jne
push
call
roll
xor
adc
push
scas
orb
outsl
out
gs
mov
cmp
movsb
sbb
popf
xchg
pop
adc
push
jg
pop
js
cmpsl
pop
adc
xor
mov
push
enter
cmp
push
push
dec
ficoms
into
not
addr16
sub
pminub
repz
and
and
pop
and
lcall
push
xchg
mov
pop
lods
fisubrs
pusha
jecxz
push
sub
fnsave
pop
lret
sbb
repz
scas
sbb
adc
leave
cmpsl
mov
jb
inc
xor
sbb
lret
call
lods
jp
push
mov
pop
mov
push
pop
in
xchg
stos
dec
lds
push
sarb
das
adc
mov
cmp
pushf
repnz
mov
jo
push
adc
xchg
xchg
jnp
push
or
jmp
mov
and
push
xor
hlt
fildl
fwait
sub
je
mov
fwait
outsl
cmp
repnz
dec
inc
jno
jle
jne
sub
push
cmpsb
repnz
xchg
cli
dec
pop
jge
sbb
xchg
mov
andl
add
pop
pop
icebp
jmp
shr
scas
in
cwtl
xchg
adcl
fucom
sbbb
xor
mov
out
dec
insb
lea
test
movsb
rcr
imul
adc
mov
pop
dec
add
nop
mov
jmp
or
cmp
repnz
inc
adc
bnd
fnstsw
icebp
mov
or
subb
jb
add
xor
inc
cmp
push
into
adc
out
xchg
lods
les
xchg
mov
cltd
xor
inc
pop
insl
fxtract
adc
sti
cmp
dec
mov
out
inc
pop
and
mov
sahf
out
add
rol
push
je
dec
sbb
imul
outsl
jle
int3
repnz
dec
clc
xchg
adc
movb
jnp
mov
jg
mov
cmp
rorl
insl
sbb
adc
mov
std
xchg
push
imul
mov
jno
sbb
push
popa
pusha
pop
ret
pop
or
push
xor
in
jecxz
mov
test
in
rorl
icebp
push
mov
mov
mov
inc
inc
add
out
ljmp
sbb
jle
mov
mov
std
dec
dec
mov
or
add
pop
dec
lods
sahf
add
jl
jle
bnd
push
pop
mov
jl
jnp
orb
lods
enter
xor
loopne
or
ffree
pop
fscale
cmc
push
lods
pop
mov
lahf
xor
jmp
inc
inc
sub
arpl
fsubrs
mov
testb
mov
mov
sub
hlt
call
cmp
movsb
movsl
pop
fdivrl
lds
outsl
mov
and
movsb
jg
cmp
mov
dec
mov
mov
aam
sti
cmp
sahf
mov
iret
cmp
and
lods
movsl
xorb
out
js
sti
sbb
das
xlat
aad
shlb
mov
xor
mov
lea
daa
adc
jmp
xchg
test
lret
lret
pop
push
nop
dec
loop
int
pusha
loope
lea
loope,pt
test
inc
out
mov
sti
mov
test
jb
mov
adc
jns
xor
test
mov
sarl
gs
es
in
mov
xchg
push
inc
repz
sbb
jl
cmp
outsb
pop
and
dec
out
sbb
push
cmpsb
xor
mov
fwait
lret
rolb
push
jnp
out
push
aaa
jb
dec
or
lea
dec
leave
sub
jno
out
insl
xchg
hlt
out
add
xor
adc
outsl
loop
add
gs
cmp
jne
leave
or
roll
gs
loop
mov
jbe
sub
cmp
mov
dec
mov
xchg
lret
movb
add
xor
xchg
pop
push
sbb
lds
pop
xor
sahf
ret
xor
lcall
inc
stos
xor
sbb
lds
sub
pop
dec
or
aaa
enter
xor
pop
mov
jg
ret
je
es
jg
popf
push
push
sbb
ss
add
fidivrs
les
insb
pop
add
negl
pop
mov
mov
sbbl
repz
cmp
mov
mov
scas
lds
addl
hlt
data16
mov
in
jle
popf
mulb
sbb
not
and
mov
pop
into
rcl
fildl
or
fmull
imul
mov
sti
out
dec
shrb
aam
sub
sub
rcrl
es
adc
push
pop
fdiv
test
fadds
pusha
inc
aam
cmp
adc
rcr
pushf
adc
or
out
pop
mov
cmc
fiaddl
fsqrt
rorl
lock
pop
cmp
pop
ds
push
pop
rcrb
sbb
mov
gs
jbe
adc
mov
and
add
mov
leave
inc
or
add
or
xchg
add
test
insl
fsub
adc
lret
pop
call
movsb
les
outsl
pop
cmp
addr16
ficoml
and
loopne
les
movsb
xlat
mov
sub
push
dec
movsl
and
not
jnp
jnp
add
mov
subb
insb
lock
jmp
dec
ret
scas
mov
mov
mov
test
sbb
mov
outsb
jb
xchg
flds
cmp
stos
outsb
je
fsubs
insb
jb
dec
jno
mov
fsts
xor
inc
gs
arpl
inc
cmp
enter
dec
andb
add
sub
pop
fists
aaa
fdivrs
jl
fnstsw
rep
out
adc
fs
std
pop
rcr
rol
sahf
sbb
mov
sbb
stos
mov
js
lods
imul
pop
mov
lcall
fimull
inc
cwtl
mov
std
sub
fsubs
test
adc
vunpcklps
data16
mov
sahf
ret
pop
dec
mov
in
lock
xchg
pop
lods
add
mov
push
lcall
sub
pop
je
mov
shll
xor
pop
lret
insb
pop
repz
jb
das
sahf
jae
mov
xchg
js
xor
add
shrb
or
pop
jg
sbb
xchg
xor
add
out
out
imul
repz
pop
ds
mov
ljmp
cld
inc
insb
inc
xchg
out
enter
adc
shrl
in
and
pushf
adc
pop
les
outsl
das
xchg
and
mov
out
pop
pop
xor
cmp
push
leave
sub
mov
int3
inc
inc
gs
sub
bound
push
test
fsts
and
sarb
rorb
dec
in
movsb
fucomip
out
jg
sbb
out
xor
adc
mov
adc
mov
loope
xchg
inc
mov
xchg
jmp
pop
jl
sub
mov
add
test
xor
mov
mov
or
outsl
leave
sub
ror
mov
int
frstor
jmp
or
popa
icebp
adc
fwait
test
stos
imull
insl
nop
pop
or
lret
inc
pop
xchg
mov
movsl
rcrl
jl
xlat
jbe
jecxz
inc
push
xchg
mov
inc
adc
stos
jno
sbb
daa
nop
mov
stos
mov
loopne
pushf
hlt
add
ret
mov
pop
jno
push
xor
lret
test
xor
xor
cli
cmc
lock
pusha
lahf
movsl
and
stc
mov
jbe
sub
insl
cltd
push
lahf
out
mov
inc
cmpsl
xchg
and
sub
loop
std
out
cmpsb
jmp
out
jp
dec
push
adc
dec
xchg
mov
push
dec
negb
ficoms
cmp
movsb
jae
lret
lock
mov
jle
ja
fsts
leave
inc
mov
jecxz
into
jne
repnz
push
inc
sbb
xlat
rcr
jecxz
scas
push
xor
outsl
ret
addl
cltd
adc
cli
sub
ja
ja
xchg
repnz
iret
inc
iret
popa
xchg
inc
and
mov
jge
push
mov
push
pop
in
lahf
push
movl
mov
je
xor
outsb
movsb
or
inc
lock
stc
iret
bound
xorl
xor
sub
jns
push
dec
lods
pop
fisubs
std
addr16
out
cli
es
ja
and
jl
sbb
clc
jae
push
and
pop
movsb
es
ret
gs
fs
sub
dec
outsb
jb
mov
sbb
mov
dec
nop
add
mov
mov
jecxz
out
cld
mov
lcall
repz
mov
lret
scas
testl
jb
shrl
inc
lock
ror
cmc
add
aam
hlt
sub
jae
test
lret
dec
ja
pop
dec
lods
push
imul
jne
jg
add
pusha
je
inc
jnp
jnp
lret
movsb
inc
fwait
out
sti
dec
fbld
pop
jmp
sti
sub
xchg
inc
fsubs
test
or
icebp
loopne
mov
mov
out
fnsave
popa
aam
jbe
loopne
mov
and
cmc
sbbb
pop
insl
push
fs
popa
out
lock
insb
pop
sub
mov
inc
mov
imul
loope
test
or
jno
fcmovnb
and
inc
shr
in
in
loope
pop
scas
dec
mov
fcoml
ja
outsl
pop
and
push
mov
mov
sbb
push
cmp
pop
fadds
inc
or
inc
shl
test
mov
fisttpll
fdivrl
add
jge
call
inc
jecxz
mov
xor
repnz
sbb
add
pop
dec
jecxz
fnsave
stos
inc
loop
andl
pop
orl
adc
pushf
adc
pop
add
loope
add
sbbl
or
outsb
adc
jns
adc
mov
loopne
testb
xchg
int3
pushf
nop
in
xorb
pop
dec
lea
testb
nop
jp
dec
inc
cmp
stos
ror
add
and
inc
popf
andb
pop
pop
nop
jle
dec
fbld
inc
mov
fwait
in
scas
dec
jg
mov
adc
jb
and
ret
pop
xor
cmpsl
pusha
call
add
add
adc
adc
insb
mov
pop
and
dec
aas
cli
jecxz
xchg
test
xchg
andb
loope
sbb
shrl
cld
shll
cli
stc
pop
jns
loop
sbb
lahf
xchg
lds
or
push
mov
dec
popf
push
inc
inc
pop
idivl
es
inc
dec
lret
sarb
pop
das
leave
push
stos
xchg
insl
inc
in
ss
dec
jnp
icebp
lret
mov
mov
push
subl
lret
jge
xchg
les
push
xor
test
cmpsl
mov
dec
fmull
or
cwtl
repnz
lock
cmp
jle
shlb
xchg
jae
subl
push
mov
adc
fidivrs
sbb
popf
in
xchg
in
inc
adc
fs
dec
mov
and
or
addr16
push
push
inc
leave
out
xor
or
ret
sub
add
push
icebp
adcl
lea
cmp
test
mov
mov
pop
mov
test
cltd
lea
mov
push
je
mov
mov
testb
or
dec
sub
int3
mov
mov
cmp
jge
adc
fistl
int
and
pusha
aam
fs
push
xlat
imul
cs
cli
sbb
cwtl
ljmp
push
int
push
lds
xchg
jbe
mov
nop
xor
jo
mov
out
add
sbb
cmp
mov
mov
lds
dec
je
xor
mov
adc
xchg
bound
mov
xchg
movsl
sbb
mov
inc
in
popa
fs
dec
mov
lods
hlt
faddl
push
aaa
push
xor
mov
or
or
movsb
cmp
popa
roll
add
loope
aam
mov
pop
scas
mov
sbb
push
rorl
subb
out
clc
fsubl
push
inc
insb
cmp
mov
pop
ret
jae
jl
sbb
ljmp
adc
lret
dec
lods
mov
adc
imul
repz
imull
stos
lock
popf
sbb
jg
ja
aam
mov
jp
sub
lods
xlat
cmp
xchg
inc
mov
loopne
xorl
xor
in
jle
cmpsl
bound
mov
pop
rcl
fdivrs
mov
mov
in
mov
mov
jb
adc
fwait
pop
cmp
lcall
aad
inc
sahf
pop
daa
mull
lds
popf
sbb
mov
cmp
dec
push
and
test
aam
les
mov
stc
adc
xor
mov
adc
dec
sahf
jge
and
cmp
sub
jne
dec
jno
xchg
roll
in
test
ss
fistpl
jnp
repnz
jae
lods
dec
jne
insl
mov
push
int
or
mov
arpl
jl
gs
push
or
and
mov
cmp
cmp
xor
lret
dec
addb
arpl
stos
mov
into
xchg
cmpsb
xor
push
add
inc
es
fwait
aaa
sub
movsl
jl
push
fucomip
fnclex
or
arpl
dec
imul
xor
scas
lods
pop
fwait
dec
ficoms
arpl
call
jnp
test
cmp
es
pop
inc
sti
inc
mov
jne
notl
repnz
inc
bound
outsl
imul
and
stos
mov
add
popf
cmc
xor
xlat
push
loop
dec
dec
out
push
ljmp
loope
fsubrp
cmp
jae
les
lds
xchg
jg
or
mov
jne
adc
insl
pop
dec
stos
push
stc
testl
sbb
pop
mov
cmpsb
es
data16
movsl
mov
arpl
push
stos
xor
ja,pn
push
ret
sbb
fimull
shrl
nop
lret
inc
loop
mov
cmp
sti
lods
or
ja
es
aam
sarl
imul
sub
push
dec
insl
int3
push
jecxz
insl
or
or
fs
or
pop
in
movsb
out
insl
rorl
cmp
push
sub
jg
adc
cmp
shll
mov
fs
mov
lds
jb
adc
mov
jle
pop
sbb
lcall
jge
shl
adc
mov
sub
sbb
rcll
fcmovnu
mov
or
xor
sti
xchg
push
out
das
into
add
cmp
sub
dec
sti
xchg
mov
and
sbb
loop,pn
push
out
push
aaa
dec
inc
push
hlt
ret
add
pop
imul
dec
icebp
bound
gs
mov
iret
sbb
mov
inc
repnz
xchg
pop
push
add
lods
pop
and
imul
mov
and
sub
frstor
ja
inc
add
addr16
or
leave
jb
jne
mov
loope
adc
ret
mov
xor
dec
pop
pop
inc
rcl
lock
jg
out
cmc
stc
inc
ret
mov
test
pop
les
jp
fwait
mov
insl
cmp
ljmp
xchg
ja
mov
inc
cld
test
addr16
rcrb
dec
mov
pop
add
inc
sbbl
iret
aaa
stos
adc
rcrb
cmp
stc
push
int
in
pop
mov
jl
es
testb
stos
and
mov
cltd
or
lahf
xlat
mov
mov
insl
int
sub
jns
sbb
xor
xchg
jmp
pusha
lret
dec
inc
nop
pop
mov
inc
pop
pop
fisttpl
stos
adc
jle
mov
pop
mov
rol
pop
xor
int
ret
cld
fcmovne
or
and
clc
pop
mov
mov
add
cwtl
bound
xorps
sbb
xor
insb
adc
sub
or
jge
pop
jp
inc
out
and
xchg
inc
or
addl
pop
into
fldt
cmp
sub
fucomip
mov
aad
insl
jb
dec
lret
lahf
loopne
sahf
outsl
insb
mov
out
inc
notb
pushf
daa
or
jne
lcall
scas
data16
lock
ljmp
imul
loope
xor
mov
cmp
and
xor
dec
jnp
jno
xchg
in
repnz
mov
leave
pop
lea
ffree
pop
jle
test
adc
js
data16
mov
or
cmp
cmc
and
mov
dec
bound
cmp
rorb
loope
fsubrs
ret
outsl
adc
xor
popa
xchg
lock
mov
icebp
mov
ret
fbld
cmp
movsb
popa
movsb
xchg
les
mov
out
fwait
push
dec
xor
cmpsl
push
lods
pop
push
xchg
cmp
pmovmskb
cmpsb
add
jbe
pop
dec
and
clc
popa
xor
xchg
out
inc
iret
jno
push
or
mov
pop
in
mov
out
cwtl
mov
fld1
xchg
mov
sub
movsb
je
adc
ror
lahf
xchg
mov
jge
aaa
cltd
mov
insb
pop
sti
mov
jnp
push
mov
adc
aam
nop
add
push
pop
cs
xor
clc
xor
fwait
push
mov
test
cmp
loop
psubw
ficompl
xchg
jnp
lret
lds
pop
mov
stos
add
xor
lahf
and
dec
inc
adc
ss
push
jae
pop
cmc
cmp
mov
pop
in
jne
mov
sahf
push
cmp
into
pop
aas
std
ja
sarb
xor
adc
push
xlat
test
adc
shrb
test
pop
in
mov
sar
shrb
test
test
rclb
les
movsb
adc
jge
sbb
test
add
fcmovne
lret
or
sbb
imul
xor
mov
xor
push
in
xor
cmp
imul
xchg
jno
sub
ss
add
aas
cmp
mov
repz
sub
loop
xor
test
jmp
loop
jmp
or
aas
inc
jmp
sub
mov
dec
mov
mov
sbb
and
sub
pushf
jmp
jbe
les
sar
and
fwait
lea
cwtl
and
sbb
hlt
pop
loopne
mov
stos
out
sub
adc
mov
xchg
daa
mov
hlt
jb
push
cmpsb
mull
outsl
dec
stc
roll
and
mov
and
std
lea
pop
rclb
leave
mov
lret
idiv
add
cmp
pop
shlb
sub
xlat
mov
jmp
movl
mov
xchg
mull
push
cmp
loop
insb
insl
lahf
rcr
mov
loope
mov
sti
inc
ret
out
sbb
outsl
push
insl
sbb
fnsave
xchg
jne
cmp
popa
dec
adc
xor
jns
dec
sbb
ret
out
hlt
scas
sbb
xor
jecxz
cwtl
ror
mov
in
dec
adc
aad
sbb
mov
sub
mov
pop
clc
movl
fimull
out
ljmp
sarl
mov
xor
xchg
jl
xor
xchg
fs
fdivrp
leave
xor
mov
test
adc
add
in
in
rorb
movsb
movsl
inc
sub
icebp
and
jle
adc
cwtl
ds
les
mov
mov
dec
mov
cmc
sbb
jle
push
bound
jne
cs
inc
movsb
mov
push
fcoms
arpl
mov
add
or
lahf
push
xchg
push
mov
imul
add
arpl
add
xor
lret
and
adc
clc
mov
aas
xor
jb
in
mov
inc
std
out
outsl
das
stc
lds
xor
enter
daa
add
cmp
adc
std
es
orb
scas
outsb
jmp
pop
ret
adc
lcall
outsl
subl
cli
frstor
shl
fmull
inc
pop
cmp
mov
mov
divl
int
add
iret
sub
mov
test
add
xchg
mov
cli
iret
in
dec
scas
popf
jae
pushf
jp
inc
mov
fistps
dec
mov
mov
mov
push
inc
call
and
sub
and
sbb
loop
inc
movsl
push
hlt
gs
dec
mov
xor
jo
popa
jbe
mov
fmul
xor
jg
lods
push
sub
clc
daa
dec
jmp
dec
mov
inc
adc
mov
frstor
xor
fwait
cmc
push
aas
jge
js
pop
loopne
jge
push
gs
add
and
fisubrl
loop
out
mov
cmpsb
addr16
fistpl
dec
aas
mov
ja
jp
sbb
jmp
inc
xchg
int
mov
outsl
test
or
pop
adcl
adc
mov
pop
aas
mov
jg
test
adc
push
jb
stos
scas
mov
je
je
ficoml
std
not
xor
adc
and
sub
jno
inc
xor
pusha
out
fstpt
jecxz
lods
movsl
inc
sbb
xor
push
xor
xchg
dec
dec
jo
dec
sub
xchg
mov
std
sub
lock
sbb
daa
sbb
lahf
inc
inc
out
add
push
pop
imul
sbb
inc
in
and
push
lds
enter
rcll
les
orb
jmp
xchg
stos
jge
lret
mov
xchg
push
fsubr
loope
outsl
mov
cmp
mov
jno
push
xchg
in
idivl
iret
pusha
jmp
jge
dec
inc
sbb
xor
pop
es
or
incl
imul
or
push
fcmovb
jo
mov
push
inc
cmp
push
sub
js
fcomp
out
lcall
cmc
dec
dec
stos
mov
mov
mov
adc
xorb
push
aad
dec
ds
sbb
in
push
ret
xchg
les
in
jae
or
popa
cmp
mov
dec
dec
aaa
jae
mov
fcmovnb
push
addr16
xor
mov
cmp
popf
pop
push
cmp
cmp
cmp
xor
adc
sub
adc
add
fisttps
aaa
in
xchg
sbb
mov
mov
ljmp
cmp
add
xor
imul
test
cs
xchg
aas
test
jg
in
dec
sub
ret
adc
sbb
hlt
push
pop
scas
iret
outsl
std
xor
test
test
mov
mov
ficompl
insb
and
in
sub
addr16
fs
push
fdivs
jns
lds
cltd
or
and
aas
fidivrl
fcomp
sbb
adc
lahf
test
sub
xchg
lods
fcmovbe
aad
mov
push
sbb
mov
rolb
mov
or
outsl
cli
add
inc
fwait
inc
or
rcrl
mov
adcb
sbb
mov
cltd
out
repz
pop
or
mov
xchg
sbb
loopne
mov
mov
lahf
subb
inc
pop
shlb
mov
into
adc
gs
sub
add
data16
test
push
js
inc
inc
jg
sbb
imull
xchg
or
data16
mov
sahf
jmp
imul
push
mov
pop
stos
mov
cltd
inc
xchg
aas
fcomip
dec
xchg
cmp
inc
movb
clc
cmp
lds
stos
xchg
mov
cmc
pop
xchg
adc
fimuls
scas
dec
sub
and
pop
mov
cwtl
cli
cmp
xchg
data16
cmpsl
or
sbb
mov
dec
in
mov
adc
mov
test
sahf
adc
push
imul
or
mov
scas
pop
sbb
ja
rcr
loop
xor
cmp
dec
push
gs
ja
and
sbb
stos
int
in
mov
ljmp
faddl
xor
xchg
push
int3
push
test
xchg
gs
call
and
xorb
dec
xchg
out
jmp
mov
inc
addr16
xorb
adc
pop
push
mov
mov
adc
mov
mov
les
and
mov
call
push
lds
cmp
push
and
mov
in
jp
dec
cmp
jae
or
inc
fdivr
mov
bound
xchg
cld
lcall
loope
cmp
cmpsl
mov
xchg
cmp
adc
push
cli
cmp
cmp
xchg
loopne
and
arpl
inc
aad
sbb
add
stos
ret
push
push
and
add
dec
icebp
lahf
call
les
stos
mov
xchg
pop
push
push
lahf
in
lahf
dec
leave
cmp
daa
pop
sbb
sub
xor
sbb
sbb
addr16
sbb
xlat
mov
adc
dec
sbb
enter
test
sub
push
pop
or
rorb
outsb
mov
lret
mov
xchg
lods
dec
sbb
in
or
in
mov
sub
add
jl
jge
sub
movsl
xchg
fwait
sbb
or
bound
ljmp
fldt
sarl
mov
mov
movsl
jb
fwait
cli
popa
mov
pusha
mov
mov
adc
mov
movl
push
shl
call
and
dec
xchg
and
sahf
shrl
mov
stos
int
inc
lods
lods
pop
outsl
iret
mov
dec
xor
jbe
jle
sbb
negb
mov
mov
cmp
enter
pop
jne
pop
push
sub
xchg
enter
mov
sbb
mov
addl
ficompl
sub
fisubl
lea
and
fidivs
loope
xor
inc
ja
xlat
inc
movsb
dec
dec
imulb
out
cmp
inc
push
jecxz
pushf
and
sbb
rcll
aad
dec
cs
push
dec
sub
xchg
in
dec
call
sti
mov
push
test
stos
jg
rcl
or
jo
sub
pop
addr16
imul
jmp
insl
stos
imul
popf
mov
pop
mov
pop
stc
or
pop
mov
lret
repz
int3
and
xor
inc
cli
test
rcl
xchg
shr
adcl
xor
fdivrs
adc
popf
fsts
mov
jg
dec
jecxz
lcall
test
add
pop
adc
or
fimull
insl
sub
iret
orb
jns
bound
lcall
int3
add
sub
lods
outsb
and
or
imul
les
in
lock
cltd
mov
iret
adc
or
dec
adc
iret
arpl
js
xor
push
mov
mov
pop
int
sub
dec
inc
mov
adc
loopne
mov
jnp
scas
ds
push
test
cmc
jp
and
outsl
loope
adc
mov
bswap
repnz
jno
scas
adc
ret
cltd
out
test
xchg
lahf
push
push
ds
xor
mov
insl
cltd
in
repnz
push
addl
daa
cmp
stc
daa
repz
mov
inc
in
in
xchg
jge
xchg
adc
dec
adc
loopne
mov
and
bound
setnp
and
nop
test
jb
mov
mov
mov
testl
add
test
neg
xchg
movsb
jno
and
popf
fs
in
push
aas
dec
testl
cmp
xor
imul
testl
ret
ds
fld
jmp
jb
mov
xchg
test
scas
subb
popa
pop
push
pop
mov
es
dec
pusha
clc
std
pop
mov
or
cmp
mov
mov
icebp
mov
mov
push
out
inc
mov
call
xor
aam
js
xor
fcmove
inc
sub
push
lds
lock
mov
dec
jl
mov
ret
cmp
xchg
or
add
push
mov
fsubrs
stos
aam
pushf
adc
lods
xchg
int3
jg
mov
dec
cmp
xlat
aad
xchg
sub
popa
mov
mov
jb
or
inc
sub
aad
repz
fwait
jg
arpl
data16
into
icebp
xchg
sbb
xor
fcmovnu
cmpsb
mov
push
stos
mov
pop
dec
insb
in
push
jp
cmp
mov
jle
fs
movsb
push
pop
lods
xor
and
stc
in
pop
pop
mov
push
out
hlt
shrb
mov
fcomip
lar
sti
pop
jmp
aad
lods
fidivs
sub
push
add
mov
sbb
cmovno
add
test
cmp
jno
hlt
imulb
loopne
jg
ljmp
jae
dec
pop
arpl
test
rclb
xchg
mov
cmpsl
outsl
aad
idivl
lock
sbb
xlat
jns
push
sbb
sbb
mov
mov
scas
ret
lods
ret
dec
loopne
aaa
sub
in
enter
cs
std
push
test
cs
in
adc
daa
or
lea
or
movb
loope
adc
xchg
pop
shlb
lcall
push
mov
and
xchg
mov
out
lods
push
out
fstpt
frstor
mov
dec
test
cmp
sub
jmp
jmp
mov
or
insl
mov
xchg
lods
in
push
jbe
dec
sbbb
ficomps
mov
mov
out
into
lods
pusha
clc
sbb
jne
or
int
cli
adc
cmove
call
outsl
setne
movl
cli
mov
xchg
inc
push
fcomps
cmp
mov
test
mov
bound
lea
out
inc
or
mov
cmp
jbe
stc
inc
enter
mov
sahf
xchg
daa
jmp
aad
cs
dec
sub
xor
movsl
lret
xchg
mov
movsl
push
jnp
and
int
popf
xchg
stos
adc
add
jge
mov
push
mov
enter
adc
lds
or
or
aaa
pusha
psubw
sub
mov
lock
or
mov
adc
test
jne
into
inc
push
lods
mov
sub
lret
sahf
out
loope
lods
inc
ror
mov
int3
mov
pop
aas
xor
xchg
mov
loopne
or
mov
sbb
ja
pop
lret
or
or
or
mov
lea
add
ja
sbb
inc
sub
fisubrl
rcrb
enter
scas
jns
loopne
int
rcr
mov
cmp
pop
jecxz
xchg
iret
and
call
test
lcall
ss
push
addr16
test
add
test
mov
push
pop
and
push
xchg
shll
lret
mov
pop
jecxz
pop
sub
pop
push
and
leave
mov
mov
push
in
aas
mov
lcall
xchg
pop
lods
shl
and
mov
push
aaa
xor
lcall
adc
jnp
xchg
clc
inc
jl
and
mov
das
in
push
mov
ret
xor
fsubl
repz
ja
lods
mov
loop
xor
add
cld
movsb
fs
pop
xchg
mov
push
xchg
pop
push
leave
xor
and
push
xchg
adc
mov
push
out
fidivrs
das
pushf
mov
movsb
add
jbe
pop
cld
arpl
jnp
push
into
pusha
and
inc
insb
adc
lock
cmp
in
out
sbb
cmp
imul
ror
rcll
push
pop
rcll
lods
lahf
in
xlat
aas
test
fldt
mov
pop
xchg
mov
xor
jmp
lret
gs
inc
mov
cmpsb
out
into
sahf
jbe
das
in
push
cmp
ficomps
mov
xchg
subb
ljmp
insl
scas
mov
out
adc
cmp
cmp
lcall
push
cltd
stc
lock
mov
into
mov
lret
lods
shrl
jl
cmc
ret
cmp
mov
nop
getsec
jnp
mov
dec
cmpsl
stos
mov
inc
outsl
in
pushf
loopne
sbb
ss
sbb
std
loope
mov
outsl
xchg
sub
push
and
lahf
xlat
icebp
icebp
sub
jnp
stos
add
push
scas
or
jg
les
or
adc
sub
dec
mov
sub
imul
cmp
gs
push
dec
fucom
sbb
push
jecxz
jnp
shll
cli
out
mov
lea
mov
mov
imul
fcmovnu
loopne
inc
pop
cwtl
imul
aad
add
cli
xor
fnsave
imul
add
movsb
add
fwait
cmpl
loop
push
and
lds
jmp
arpl
xor
les
dec
jle
ret
fistpll
sbb
mov
jo
cmp
xor
inc
cmc
mov
cld
pop
into
xrelease
cmp
rcll
or
cltd
arpl
pop
cmp
out
ss
pop
mov
pop
mov
jge
add
cmp
fnstcw
dec
and
mov
loope
jo
push
add
xor
test
xchg
or
sub
dec
mov
dec
ret
sbb
stc
mov
xor
or
xchg
sub
dec
dec
push
cltd
cmpb
push
mov
in
cs
dec
cmpsl
cltd
mov
stos
and
cmpsb
dec
mov
test
call
lea
sbb
adc
lds
mov
add
ss
pop
rcr
loopne
imul
sub
ss
add
or
xchg
mov
hlt
fiadds
test
pop
jl
push
xor
push
cmp
sub
pop
fldl
sbb
negb
jge
push
clc
movsb
push
sub
pop
inc
addl
add
loop
jbe
mov
mov
mov
lret
pop
scas
loope
mov
decl
repz
lea
mov
pcmpgtb
dec
daa
loop
cs
fcmovne
fisubrs
cmc
mov
adc
dec
pop
pop
insb
sahf
fdivrs
test
test
je
es
lahf
std
pop
push
jnp
in
push
sbb
jge
jl
jp
xchg
cltd
and
inc
cmp
in
pop
ret
shll
adc
push
xchg
js
push
js
ds
push
jo
insb
sub
and
data16
scas
mov
stos
repnz
xchg
jmp
mov
xchg
pop
and
mov
sbb
xor
ret
adc
jb
pop
imul
es
out
mov
cltd
int
shl
pop
xor
in
lcall
mov
mov
hlt
and
jle
push
push
jns
sbb
cmpb
adc
sub
mov
xchg
enter
dec
xchg
pop
pusha
xchg
mov
lret
mov
js
dec
mov
hlt
xchg
sbb
test
fnstsw
fwait
cmp
cmp
and
jmp
leave
sbb
adc
adc
push
in
cld
daa
sti
jmp
push
cmc
push
pop
jecxz
adc
call
mov
popa
dec
loopne
scas
xor
or
lcall
std
jo
loop
mov
jae
lahf
int
and
dec
dec
rcrb
sbb
pop
jg
add
imul
jne
mov
inc
out
sbb
jg
out
xchg
push
add
and
mov
int3
inc
pop
cmpsb
cwtl
mov
or
adc
jns
ret
push
scas
dec
test
gs
jne
das
adc
dec
cmp
push
xchg
mov
mov
push
sub
inc
xor
outsl
jo
pop
pop
andb
lahf
cmpsl
call
test
sub
pop
mov
sub
xchg
sahf
cmp
mov
dec
insl
movsl
sub
andb
and
mov
jg
int3
rorb
pop
test
test
or
fld
iretw
cmp
inc
add
imul
insb
pavgb
fnstenv
lret
add
rolb
addr16
adc
and
inc
das
addr16
mov
mov
shrb
icebp
cli
jp
jns
ds
xor
icebp
xchg
lock
rol
int
adc
pop
sub
lahf
lods
adc
or
mov
sub
dec
jecxz
xchg
hlt
and
test
popf
dec
stc
arpl
iret
dec
sahf
dec
in
ror
cmp
cld
mov
aam
xchg
sub
pop
sbb
and
push
jae
pop
mov
mov
xor
mov
push
mov
inc
movsl
sbb
cmp
or
loopne
and
mov
aad
add
sub
or
lahf
xchg
add
jns
leave
lods
sbb
push
add
addb
rep
rorb
adc
test
dec
sahf
enter
sbb
add
ret
pop
xor
or
xchg
scas
dec
stc
es
adc
add
outsl
out
out
xchg
xor
sbb
xor
test
push
ds
xchg
dec
jae
mov
ret
imul
mov
outsl
xor
ficoml
adc
fimull
scas
insl
add
clc
andb
out
jno
push
rorb
cmp
inc
les
cmp
shl
int3
adc
sti
sub
ljmp
and
add
lea
mov
ror
ds
icebp
movsl
inc
stos
mov
xchg
or
add
jge
bound
test
inc
jecxz
xchg
repz
mov
pop
repz
das
in
test
inc
lock
cmp
lcall
cmp
scas
nop
sti
or
inc
lea
das
aad
fisubrs
movsl
and
int
cs
cmp
lcall
add
push
jno
and
mov
mov
popa
cmc
add
cltd
faddl
push
jp
std
aam
mul
cmpl
sbb
mov
mov
push
aas
or
insl
dec
pusha
jns
cltd
aam
int
and
sub
sub
add
call
icebp
into
adc
pusha
and
dec
sbb
or
cmp
shll
sub
lahf
push
mov
jl
mov
mov
jg
add
xchg
test
sub
lahf
das
out
out
nop
das
jecxz
pop
sti
xlat
cmp
adc
clc
jbe
testb
mov
fdivs
addr16
jmp
sahf
aaa
je
fs
jge
pop
dec
inc
or
lahf
stc
clc
cli
jo
lcall
das
pushf
push
loope
mov
pop
std
or
push
out
addl
fidivs
jp
addr16
sbb
sbb
mov
popa
xchg
bound
nop
icebp
iret
xor
insb
jp
mov
xchg
mov
xchg
sahf
jb
push
loop
mov
movsl
stos
into
pop
lcall
jns
sahf
sub
aas
xchg
mov
push
mov
add
cld
or
xor
mov
sub
dec
movsb
nop
ret
pushf
lds
xor
pop
cmpl
outsl
rorb
inc
mov
jbe
dec
add
repnz
stc
adc
fs
sub
adc
mov
mov
scas
mov
aas
dec
jg
jns
fidivl
out
fcompl
rolb
es
cs
jo
imul
xor
scas
add
mov
mov
call
jae
xor
es
mov
and
bnd
push
imul
or
mov
es
test
fmulp
arpl
aam
popa
idivb
rol
pop
cld
push
fsub
xor
adc
dec
decb
cmc
xchg
test
mov
int3
fstl
cs
xchg
imul
daa
shrb
scas
lret
dec
xor
mov
pop
outsl
and
cltd
subb
mov
push
imul
adc
jnp
jecxz
jb
pop
push
adc
fcoms
je
push
jb
xchg
in
lock
cmpb
rcrb
cmp
les
dec
mov
cld
cmp
test
icebp
cmp
outsl
mov
jle
mov
inc
ljmp
clc
mov
mov
push
iret
dec
mov
loop
stos
xchg
inc
fucomi
out
sahf
es
push
loope
outsb
push
and
push
jle
sub
cmp
leave
cmc
les
insb
jo
push
sub
lret
insl
dec
pop
movsl
rol
push
inc
out
lahf
out
inc
mov
stc
add
bnd
xchg
int
jne
gs
jae
fwait
mov
sbb
dec
sub
adc
gs
add
stc
enter
sbb
push
jg
rorb
aas
xchg
xchg
pop
jno
and
xor
imul
adc
and
dec
hlt
push
fstpl
xor
inc
lahf
mov
out
mov
scas
fcomp
mov
fldenv
ss
int3
ljmp
sarl
mov
lret
push
outsb
clc
outsb
mov
insb
jmp
loop
fisubrs
rorb
testl
mov
cmp
dec
push
push
stos
daa
mov
sub
sbb
jle
repz
bound
xchg
adcl
mov
inc
out
add
xor
out
cld
cmpsl
inc
insl
test
xor
jge
cmp
jp
pop
sub
sub
pusha
mov
int
and
lcall
test
sbb
mov
xor
dec
cmp
xor
fstl
add
xlat
cmp
jns
pop
jmp
pushf
or
dec
sbb
movl
in
int3
push
notl
insl
mov
mull
push
xor
loop
adc
mov
cltd
repnz
xor
sub
fildl
pop
adc
test
mov
jae
adc
and
mov
sbb
roll
lock
jmp
mov
das
imulb
xchg
popa
xchg
fildll
and
push
cs
sbb
push
push
lcall
jb
cs
adc
or
mov
mov
push
push
adc
sub
pop
lds
push
cmpsb
repnz
fwait
xchg
movsl
dec
jns
ljmp
mov
jbe
cli
andb
imul
jle
je
lods
sahf
jo
fistps
in
clc
push
cmc
mov
pop
jae
fmul
mov
insb
sub
and
fildl
xchg
je
pop
mov
lock
xchg
jle
mov
repnz
and
fwait
inc
test
adc
ds
call
sbb
popa
xor
dec
bound
mov
cmp
es
outsb
or
pop
jecxz
loopne
xlat
add
sbb
mov
mov
and
sub
inc
xor
lret
jg
xor
fs
adc
cmp
mov
mov
inc
mov
mov
or
movsb
xchg
movsl
mov
cli
xchg
out
pop
xchg
call
dec
push
jne
imul
adc
popf
jg
pop
iret
shr
or
jmp
outsl
dec
mov
cmp
pop
mov
inc
aas
fwait
mov
jge
lods
mov
arpl
mov
int
fcomi
mov
lcall
sub
jge
adc
and
jecxz
jecxz
lret
mov
lods
lcall
cmp
mov
ret
outsl
sbb
fsubrs
add
lret
loopne
ret
aas
addr16
push
pmulhw
cmp
ret
xchg
sar
xchg
lahf
cmpsl
incl
roll
shlb
mov
negl
jno
dec
pop
cmp
jp
add
push
roll
xor
scas
sub
imul
insb
push
sbb
sbb
addr16
imull
and
xor
mov
add
lock
adc
push
into
subb
jo
mov
or
or
or
sahf
inc
insl
or
and
leave
hlt
jnp
iret
sbb
mov
repz
xor
adc
adc
sub
fwait
mov
mov
jns
ret
lret
int3
into
and
adc
fdivs
xor
dec
les
jmp
mov
inc
enter
mov
mov
out
mov
inc
fidivs
jnp
xchg
test
das
mov
lods
adc
sbbb
xchg
push
adc
scas
mov
lock
lea
in
clc
push
fs
incl
in
and
fidivl
aad
sahf
adc
push
push
xchg
mov
movsl
push
leave
jge
cli
dec
adc
gs
xor
iret
or
imul
aaa
ja
add
mov
ret
pusha
xor
stos
jg
fwait
inc
in
xor
dec
aad
loop
icebp
inc
cmp
add
fnstenv
icebp
jecxz
mov
jle
jnp
push
mov
daa
dec
pop
dec
in
roll
add
out
pop
fst
fcmovbe
mov
and
dec
fnstenv
cld
sbb
push
pop
cmpsl
test
xor
and
movsl
jb
and
xchg
xchg
hlt
ja
stc
sarb
outsl
iret
out
dec
push
dec
sahf
xchg
pop
adc
push
or
aaa
mov
push
adc
mov
test
mov
jns
sti
cmp
out
fiadds
cmpb
in
aam
scas
push
jle
out
stos
xor
gs
int3
loopne
dec
jge
lahf
mov
mov
cmovl
negl
push
xchg
repz
adc
shl
jl
cmp
out
fldcw
hlt
ja
out
push
es
cmp
js
pop
insl
ret
clc
cld
push
cltd
and
scas
inc
xchg
dec
jle
cmp
das
xlat
jg
cli
mov
push
lahf
dec
aaa
ja
iret
arpl
test
xchg
add
or
jae
sbb
movsl
jp
ljmp
imul
adc
jp
and
xchg
mov
sub
loopne
cmp
mov
pop
xchg
divb
mov
aas
mov
xlat
and
repnz
mov
jge
repnz
cmp
js
mov
mov
leave
andb
sahf
stc
out
iret
mov
adc
push
dec
int
lea
jbe
repz
push
punpcklwd
add
inc
xchg
loope
cmp
sbb
test
cmp
xchg
add
cld
inc
push
add
jnp
mov
gs
fcoml
or
jns
je
adc
cmp
adc
push
mov
nop
js
sbb
xchg
xlat
mov
xchg
sbbb
sbb
pop
jmp
xor
daa
inc
push
jne
mov
in
cmp
xor
insl
or
push
mov
arpl
mov
mov
aam
jnp
push
cmpsb
jb
pop
dec
je
pushf
dec
out
and
xchg
pop
cmp
mov
mov
lret
int
arpl
imul
xor
in
out
push
cmp
ret
sub
popf
xlat
lret
sarb
stos
adc
adc
mov
scas
xchg
or
dec
inc
inc
mov
in
in
cmp
sub
std
enter
js
pop
lahf
and
clc
mov
push
test
lods
lods
std
dec
scas
je
addb
adcb
dec
dec
mov
mov
add
sbb
je
ja
scas
leave
out
call
xor
notl
lret
aad
and
fmul
gs
jnp
xor
mov
sbb
jne
jl
stc
adc
repnz
xor
xchg
xchg
cmp
es
dec
push
mov
test
mov
in
out
lods
fdivl
xor
mov
mov
mov
popf
mov
mov
pushf
add
cmp
add
test
gs
cmp
pop
fisttpll
adc
fimull
cmp
xchg
jo
cmp
adc
pop
ss
xchg
mov
cmc
jns
mov
cli
pusha
xorl
xchg
or
pop
mov
mov
insb
aaa
mov
dec
or
std
xchg
stos
sub
mov
cmpsb
and
and
fdivrp
pop
push
scas
add
xor
cmp
pop
imull
xchg
cld
fs
jle
enter
pop
or
adc
ds
outsl
loopne
dec
sti
push
int3
or
jp
fs
in
dec
cli
jecxz
fldt
cmp
sub
aam
lock
jge
dec
into
push
insl
mov
ret
mov
pop
cmp
nop
adc
sbb
and
jnp
fcompl
icebp
je
das
xchg
cld
or
xor
loop
xlat
xchg
int
xor
std
mov
or
pop
sub
mov
jns
add
jb
cmp
cltd
mov
xor
test
inc
fldl
js
sqrtps
out
adc
sub
sub
in
ds
xchg
rorl
mov
cld
daa
orl
adc
sbb
rcr
in
inc
push
and
je
or
xor
sub
mov
gs
lock
addr16
scas
lock
xchg
adc
jb
rolb
mov
mov
mov
hlt
rclb
mov
mov
les
add
aam
scas
jge
adc
xchg
pusha
push
rep
mov
in
fiadds
sbb
shl
cmc
xor
fwait
jl
imul
or
sbb
sbb
and
jbe
fistl
xchg
inc
out
xchg
sub
and
mov
mov
mov
jle
ret
outsl
add
imul
cwtl
sti
xchg
jl
xor
leave
loope
dec
outsl
lret
repnz
dec
repz
jecxz
sub
pop
in
mov
lret
mov
or
mov
xor
and
je
mov
sub
mov
lock
outsl
add
inc
stc
push
jbe
dec
shlb
push
shl
ja
ds
xor
cmpsb
pusha
cld
enter
repnz
sti
mov
sahf
leave
pop
lret
ret
loope
sub
std
inc
mov
ret
inc
fdivrp
fisubrs
or
push
inc
mov
adcb
mov
loopne
push
cli
ret
fdivrl
or
adc
mov
inc
clc
jecxz
dec
jns
shll
lds
push
and
ja
into
into
and
insl
sbb
adc
popa
or
xor
pop
pusha
test
test
in
in
hlt
les
mov
jmp
xchg
add
movsb
jo
fistpl
sub
xchg
xor
inc
cmp
leave
mov
mov
or
push
mov
cmp
pop
aaa
xlat
rol
xchg
mov
das
insl
cmpsl
mov
bound
stos
mov
sbb
xchg
das
fs
sbb
dec
mov
xchg
cwtl
and
cmp
xchg
fdivr
ja
pop
or
or
fisubs
testb
clc
inc
add
add
and
inc
ja
lea
add
push
orl
inc
push
mov
out
lds
mov
outsb
push
mov
xor
gs
stos
movsb
add
loop
sub
cmp
out
stos
outsb
cmpsb
rcrb
pop
rcll
out
add
jmp
mov
mov
push
cmp
jge
in
cs
push
test
imulb
adcl
or
popa
push
aas
push
fsub
fst
inc
xchg
jge
mov
fsubr
add
mov
dec
add
ret
xchg
push
std
dec
adc
pop
shll
cmp
fwait
jmp
dec
fs
mov
int
cs
mov
stc
ds
out
push
scas
or
insl
scas
jnp
cmp
in
arpl
push
push
lret
dec
sub
into
inc
lea
les
scas
and
or
or
scas
cmp
mov
adc
int
add
adc
mov
sbb
inc
push
sub
inc
dec
mov
sub
mov
cmova
std
fistpll
fcomip
fwait
pop
mov
popa
sahf
insl
ljmp
and
and
test
int
pop
cmp
push
adc
les
or
or
outsl
insl
nop
sbbl
ds
icebp
mov
icebp
push
fcmovu
push
xorl
cmpsb
or
xor
mov
pushf
movsl
push
and
cld
sbb
es
cmc
les
jmp
jle
ljmp
sub
jmp
mov
jle
icebp
add
ljmp
fcomps
mov
mov
add
jle
adc
mov
jmp
sbbb
sbb
imul
loopne
lcall
dec
cmp
or
lds
cmp
enter
cld
rcl
sub
xor
lcall
cmp
test
cmp
cmp
and
in
mov
xor
mov
sbb
jb
fwait
cmc
mov
adc
xchg
or
dec
in
jbe
sbb
push
cmp
mov
bound
mov
daa
lock
lock
inc
add
std
push
popa
rcrl
jne
pop
mov
les
popa
pop
xor
sbb
aas
in
push
lret
cmp
push
mov
xchg
xor
mov
mov
jge
mov
test
cli
inc
das
inc
scas
jle
inc
repz
popa
cld
mov
xchg
mov
inc
and
or
aad
shl
int
scas
stc
pop
nop
sbb
xor
sub
mov
repz
add
arpl
idiv
jns
decb
icebp
ljmp
jb
sub
sbb
std
dec
adc
xor
lds
in
ret
dec
aaa
int
adc
add
push
push
stos
inc
shr
cwtl
jns
mov
xor
icebp
sub
sub
das
fstp
xchg
out
in
cmp
cli
and
adc
sbb
into
and
movsl
repz
xchg
aas
cmp
mov
jno
lods
inc
and
mov
das
inc
mov
dec
pop
sbb
notl
and
leave
mov
cwtl
shll
jbe
stos
mov
mov
xor
mov
xor
sub
push
ljmp
fs
or
or
mov
cltd
sbbb
push
insb
or
sbb
in
pop
xchg
xlat
cmp
insl
loop
addr16
inc
and
in
shrb
sub
mov
cld
incl
leave
push
cmp
xchg
add
hlt
test
neg
xor
push
ret
ret
popa
stc
xlat
bound
icebp
nop
cmp
es
aaa
jns
xor
movsb
insl
sarb
inc
int
push
push
mov
lret
bound
push
mov
cmc
pusha
enter
arpl
push
iret
shlb
lock
sbb
cmp
jnp
fs
jno
sbb
scas
outsb
adc
add
mov
sub
jnp
mov
out
sarb
xor
pop
or
or
and
mov
inc
push
aad
cmp
fisubs
jo
ds
ljmp
stc
dec
xchg
xchg
push
sahf
scas
push
mov
int3
nop
pop
icebp
aas
push
xchg
xor
int3
mov
mov
mov
push
jnp
pusha
sub
sub
lret
mov
pop
xchg
ja
jns
inc
pop
dec
adc
sub
insb
mov
add
cmpsb
or
repnz
je
sbb
cmc
sti
push
mov
inc
and
dec
xlat
add
fcomps
addl
lahf
xchg
xor
add
pop
cmp
shll
mov
es
mov
xor
cli
inc
lods
dec
lods
cmpsb
inc
rcr
int3
adc
sub
xor
lahf
iret
aas
fdivs
sbb
xor
jecxz
rcl
inc
cmp
sahf
mov
fwait
or
sti
pushf
dec
adc
test
or
mov
push
in
sub
fisttps
daa
pop
outsb
das
mov
mov
ss
xor
xchg
jbe
add
dec
cld
pop
mov
adc
movsb
call
xchg
dec
jns
out
jl
adc
out
and
and
xchg
gs
mov
cli
cwtl
inc
push
mov
out
stos
fs
mov
aam
or
arpl
mov
pop
enter
int3
fsub
inc
cmp
lods
scas
repz
mov
and
pop
iret
mov
mov
pop
loope
add
push
inc
mov
pop
int
mov
std
add
scas
jae
mov
fwait
pop
pop
mov
jp
mov
lods
or
mov
movsb
mov
jne
xchg
sbb
mov
outsb
lods
jno
pop
test
pop
aas
pop
pop
in
scas
or
cmp
push
mov
sti
inc
fists
adc
pop
mov
lods
and
lret
loope
mov
pop
popa
cmp
divb
fidivrl
mov
jo
sbb
outsb
pop
test
pop
flds
and
pop
jge
addr16
dec
clc
mov
gs
mov
sahf
mov
arpl
rcrb
push
and
jge
or
rorl
xchg
push
or
xor
enter
pop
inc
inc
or
and
xchg
and
imul
xor
mov
notb
shrb
mov
pop
in
jl
pop
lods
cltd
inc
in
loope
ljmp
dec
sbb
hlt
adc
in
pop
inc
pop
mov
data16
int
inc
addr16
adc
xchg
movsl
pop
ret
lret
in
push
cmp
ret
pop
sbb
popa
lahf
fs
cmc
or
mov
fs
pop
les
jg
fwait
in
xlat
xchg
dec
and
cmp
mov
fnstsw
push
aas
lcall
push
pop
movsl
xchg
mov
xor
pop
xchg
test
addr16
mov
loop
outsl
loope
fs
mov
sub
popa
push
aam
imul
outsb
mov
loopne
add
mov
jnp
fdivrs
dec
mov
test
cli
lahf
mov
push
adc
pop
cmp
flds
movsl
lahf
push
clc
push
fdivl
nop
mov
imul
test
call
push
jo
cltd
pop
mov
addl
stc
and
push
aad
inc
pop
and
out
jne
sbb
enter
push
and
fdivl
lret
shl
mov
repz
adc
adc
mov
insb
push
test
and
call
cmp
test
sti
jb
rorb
cmp
sbb
pop
insl
lahf
movsl
or
lahf
or
sbb
rcl
rol
inc
cwtl
sbb
sahf
xchg
add
push
add
mov
cld
aaa
ss
shl
jecxz
ljmp
jbe
pop
lcall
dec
or
pop
push
push
xchg
sbb
cmp
push
add
repz
ja
testl
shlb
or
fs
inc
test
lret
push
sbb
popa
xchg
xchg
or
cmp
lahf
test
adc
pusha
mov
dec
mov
icebp
push
push
and
jbe
mov
scas
call
jnp
out
jge
mov
les
jge
mov
inc
or
stc
popa
and
clc
dec
lahf
xchg
stos
sahf
test
sbbl
jae
vmulps
mov
pop
les
cmp
out
jg
xchg
or
pop
insl
pop
imul
mov
xor
or
cld
cmp
mov
jg
pop
xchg
cmpsl
or
ret
pop
mov
xor
jno
push
pop
and
lds
sub
inc
repz
rorb
xchg
push
mov
push
push
or
xlat
test
xor
adc
stos
and
lret
push
icebp
add
mov
outsb
movsb
and
int3
in
push
or
iret
and
xchg
cmp
push
ret
adc
lahf
xchg
mov
lahf
je
insb
jge
or
mov
fldt
out
push
ret
imul
in
xlat
mov
mov
pusha
data16
sbb
inc
pop
sbb
popf
sbb
fstpl
test
imul
mov
shlb
lds
push
and
sub
adc
pushf
call
mov
and
out
scas
fsubs
pop
cwtl
out
jb
xorl
xchg
hlt
fimull
stos
mov
lods
dec
push
arpl
inc
std
dec
sahf
test
inc
into
cmc
loope
stc
fs
outsl
push
in
cmpsb
or
and
testb
inc
ret
dec
in
push
pop
imulb
xor
dec
lret
fiaddl
insb
sub
push
data16
and
jmp
mov
push
pushf
aaa
or
ds
sbb
icebp
mov
pop
cmpsb
dec
rol
mov
mov
in
imul
fisubl
jecxz
dec
lahf
pop
or
mov
int3
adc
jns
ss
sbb
push
dec
push
mov
inc
mov
fcmovnb
jle
cmp
push
and
pushf
cli
mov
pop
adc
fbld
push
test
call
or
mov
pop
mov
mov
add
in
or
stc
push
xor
jb
mov
pop
imul
cli
stos
and
repz
mov
and
cltd
int3
mov
or
out
sbbl
inc
adc
mov
sub
sbb
xor
jp
arpl
mov
add
jo
adc
or
mov
mov
add
xchg
into
rol
sbbl
les
fstp
or
cmc
mov
mov
mov
arpl
fs
mov
mov
mov
inc
scas
inc
pop
adc
data16
stc
pop
lahf
fdivrl
add
and
adcl
es
cmc
lea
mov
jb
fucom
pop
test
sbb
outsb
imul
shrl
adcl
js
lock
jae
sub
fwait
sbb
push
test
imul
fimuls
or
outsb
movsl
pop
dec
inc
inc
xchg
cmpsb
ss
stos
loopne
xchg
dec
andl
ret
cmpsl
in
or
jo
frstor
mov
mov
or
or
mov
out
cmp
mov
fsts
mov
loop
inc
lods
and
fmull
sub
lea
push
leave
mov
gs
mov
nop
ret
mov
cmp
in
jnp
push
and
xchg
out
mov
call
jo
cld
pop
ret
scas
inc
push
jle
popf
push
out
orl
cmpsb
push
dec
out
pop
rcrl
mov
ffree
fmull
js
loopne
push
in
mov
jmp
push
and
in
aam
and
notrack
push
and
in
adc
les
jl
sub
and
rcrb
lret
insl
push
loop
mov
inc
pop
imul
adc
pop
push
jbe
push
imul
push
pop
xor
and
or
loopne
cmc
pop
push
sub
lcall
ds
int3
push
je
fnstcw
lea
pop
or
out
pop
clc
pusha
call
int3
movsl
mov
dec
mov
loop
cwtl
divl
aad
push
inc
roll
push
jo
sub
xchg
test
lods
inc
or
pop
pop
imul
insb
rolb
les
in
push
sarb
push
jp
lods
push
and
and
lods
cmp
enter
jmp
mov
mov
cli
insb
pushf
sub
ja
rclb
mov
xchg
pop
iret
adc
mov
ret
push
sbb
mov
leave
fstps
mov
add
fcmovne
in
shr
lahf
stos
adc
int3
in
xor
or
sub
in
xchg
test
xchg
sub
jb
jmp
cli
mov
cwtl
and
jecxz
int
stos
xchg
xchg
mov
scas
and
das
addr16
movsl
test
adc
inc
sub
stos
lret
movsl
sti
pop
inc
inc
push
mov
sbb
js
loop
sbb
stc
mov
push
outsl
outsb
jb
lods
icebp
mov
sbb
loope
push
xchg
dec
xchg
rorl
mov
mov
test
out
mov
pusha
xchg
pop
sub
in
ljmp
sahf
hlt
cwtl
ja
outsl
icebp
popf
jecxz
xchg
xchg
lea
pop
push
cmp
fnstenv
fs
jg
cmp
ljmp
adc
and
cmp
pusha
shlb
pop
cmp
orb
inc
push
cs
ja
mov
adc
adc
in
roll
lods
push
and
sub
add
js
jb
cmp
cmc
mulb
xor
jns
pop
xchg
xchg
out
data16
mov
cmpsl
cs
hlt
xchg
or
lods
and
cmc
bound
test
icebp
mov
and
pop
mov
push
divb
xchg
jb
mov
cmp
sti
daa
push
jbe
mov
loopne
mov
cmp
adc
xchg
ret
repnz
mov
inc
cli
pop
adc
add
jmp
idiv
push
loope
mull
dec
mov
rolb
dec
push
decb
dec
cmp
adc
xor
out
mov
lock
push
dec
mov
std
cmp
push
xor
mov
je
sbb
insl
sahf
push
mov
lret
scas
fwait
xchg
sbb
jmp
lds
xchg
and
cmp
jne
sub
js
jle
cmp
jbe
mov
cld
ss
int
cmp
adc
scas
cmp
add
sbb
in
dec
je
xor
dec
rclb
cmc
pop
inc
jg
mov
and
dec
arpl
daa
sub
lcall
je
mov
dec
aam
outsb
sub
lds
fsts
repnz
push
fyl2x
fcomi
dec
inc
mov
sub
iret
idivb
mov
mov
in
sub
xchg
jge
push
cmp
fldl
jle
inc
roll
add
jg
mov
popa
paddusb
outsb
loope
jo
popa
mov
lea
push
test
jp
pop
xor
mov
in
adc
in
add
rolb
mov
fcmovbe
and
popa
inc
and
fs
test
sahf
or
cmc
ret
mov
out
or
imul
std
xor
push
mov
inc
and
sarl
arpl
pop
cmp
sarb
or
int
mov
sub
dec
xchg
inc
fists
notb
ja
push
std
push
sti
cltd
or
fwait
adc
test
and
stos
outsb
jge
maskmovq
imull
xchg
scas
rcrl
sti
pusha
mov
stc
les
xorb
in
cmp
shlb
lcall
pop
cli
rcl
mov
lret
fldcw
cmp
sbbl
fsubs
dec
add
push
sbb
cmpsb
lods
push
or
iret
mov
dec
push
and
mov
subl
cmp
mov
lods
xchg
imul
sbb
scas
xchg
ljmp
lock
sbb
mov
cli
pop
clc
lahf
push
enter
add
lea
jno
lret
jg
dec
lods
dec
or
ljmp
adc
xchg
enter
and
sub
outsb
cmp
jns
aad
pop
loopne
mov
das
mov
icebp
lcall
or
inc
cmc
adc
mov
xchg
stos
jl
cmp
popf
arpl
push
xchg
xchg
mov
mov
popa
jae
stos
push
push
fstps
jge
daa
jmp
int
fcoms
pushl
jns
sub
fwait
xor
push
add
xor
push
inc
cltd
xchg
xchg
push
or
les
loope
xchg
das
mov
jmp
fwait
test
xor
iret
jmp
sbb
xor
gs
test
adc
jp
fstpt
push
inc
aas
call
call
inc
sub
repz
out
sbb
into
fidivrl
adc
rolb
xlat
sti
popa
xchg
jmp
xor
sub
mov
dec
adc
add
lret
in
imul
mov
add
jge
arpl
xchg
inc
pop
mov
and
pop
rol
add
faddp
les
sbb
arpl
cmpsb
mov
imul
push
cmpsb
push
daa
ret
adc
push
icebp
test
push
xchg
jg
xchg
jmp
jmp
xor
xor
lods
sub
jg
sbb
mov
cmpb
das
and
add
pop
pop
inc
mov
inc
cs
fisubs
sbb
sub
gs
xchg
xor
daa
push
bound
xlat
test
hlt
mov
sbb
enter
pop
mov
popa
insl
mov
ljmp
pop
flds
sbb
mov
lret
out
test
mov
xor
dec
test
push
pop
adc
add
in
jmp
outsl
into
fimuls
out
xor
popf
and
push
lock
mov
pop
aam
cmp
jle
lret
fcmovne
pop
jnp
std
sahf
add
lea
jns
lret
in
iret
xchg
sub
adc
push
xor
jo
int3
jmp
push
movsl
and
pop
aaa
cmp
mov
ds
add
jnp
push
adc
jle
cmc
fcmovne
inc
xor
cwtl
pop
fmull
xor
cmpsl
inc
jle
cmpsb
aas
push
and
xchg
sub
shll
sub
or
inc
lods
inc
in
lds
pop
inc
push
rorb
lahf
add
sub
sti
nop
xchg
sub
add
mov
mov
adc
dec
enter
mov
sbb
outsb
push
std
js
mov
push
insl
dec
movsb
inc
insl
rcll
lock
ljmp
push
call
jmp
fmull
jne
or
leave
scas
rclb
shr
lods
scas
pop
enter
clc
lods
adc
shl
mov
sar
rclb
stos
nop
mov
pop
mov
or
addr16
aam
cmp
dec
or
mov
rcrb
push
dec
test
fiadds
cli
mov
mov
adc
adc
inc
jecxz
movsl
jne
outsb
push
in
adcb
xchg
push
int
mov
setnp
test
add
mov
imul
popf
mov
pop
mov
push
pop
mov
mov
and
adc
js
cli
cmp
add
stc
adc
inc
mov
mov
mov
mov
cli
into
jge
cmpsl
les
addr16
add
adc
test
std
loop
in
inc
xchg
loope
add
xor
mov
and
sbb
leave
sub
sub
pop
bnd
cmp
jo
mov
mov
sbb
xchg
jg
call
movsl
lods
std
mov
shlb
jnp
push
imul
das
mov
stos
cmp
pop
aad
pop
dec
mov
pushf
loopne
dec
out
nop
dec
mov
sbb
pusha
pop
icebp
sbb
jl
jb
xchg
or
mov
jmpw
cmpsb
sbb
test
pop
dec
dec
sbb
jge
pusha
dec
fmul
sub
cmp
add
push
add
scas
sahf
hlt
je
imul
je
out
cmp
sbb
jl
cmp
pop
ret
pop
push
inc
jo
sbb
adc
push
test
test
inc
cmp
data16
inc
jnp
nop
and
pusha
cmp
pop
out
loope
test
push
outsb
das
sti
pop
nop
xchg
cmp
jmp
push
xlat
push
xorl
xor
cli
clc
jbe
leave
pop
sub
rcrb
mov
sub
in
icebp
push
adc
js
mov
push
gs
mov
inc
xchg
xchg
push
call
cmp
mov
call
fisttpl
inc
int3
jmp
xor
pop
mov
mov
cmpsb
std
fistl
imul
dec
xchg
mov
pop
mov
rcr
xor
lahf
imul
subps
shrb
js
sbb
bound
pop
mov
movsl
aam
iret
rclb
ss
loope
xor
add
scas
movsl
push
push
in
mov
dec
out
jmp
loopne
dec
enter
pop
cmp
and
mov
out
sarl
int
add
test
or
mov
fists
subl
push
mov
pop
dec
andb
push
sub
mov
mov
xor
shl
movsb
or
sbb
mov
jge
jns
movsl
aaa
mov
icebp
dec
ss
dec
add
xchg
stos
gs
pop
mov
loop
cmp
arpl
out
pop
ret
add
subl
pop
andl
pop
arpl
pop
dec
fsubrl
test
cmpsl
das
stos
imul
ja
jno
add
iret
lcall
faddl
xchg
repz
imul
andb
adc
xchg
mov
mov
xlat
je
adc
in
add
lret
add
jl
leave
sub
add
adc
push
xchg
adc
jbe
js
stos
xor
pop
icebp
pushl
xchg
clc
or
lcall
pop
aas
outsb
cltd
dec
pusha
pop
ja
inc
pop
fs
xchg
sub
ficompl
adc
fstpl
sbb
xchg
loop
or
pop
aaa
imul
shr
std
lcall
mov
mov
push
mov
stc
insl
aas
iret
xor
jno
push
dec
mov
fdiv
test
mov
loope
pusha
sub
dec
roll
in
jmp
imul
mov
mov
or
xchg
mov
jp
in
in
bound
dec
out
dec
aad
inc
testl
pop
and
dec
out
loopne
mov
add
insl
repz
dec
mov
push
lods
pop
push
fildll
jnp
and
rclb
cld
sub
lods
pusha
xchg
jge
sbb
jae
cmp
push
ss
dec
xchg
out
rorl
inc
lret
imul
lahf
stos
pusha
call
addr16
jl
cmp
jns
adc
insl
cwtl
and
das
repnz
pop
divl
scas
sbb
in
dec
cmp
xchg
ret
mov
ds
cs
ljmp
mull
and
xchg
jbe
dec
lcall
outsl
mov
push
add
sahf
rcrl
iret
mov
jb
mov
or
cmp
jns
inc
fmul
clc
or
and
pop
and
mov
dec
test
xchg
push
imull
jp
cmpsl
call
jne
pop
xchg
sbb
lods
push
mov
movsl
aas
push
and
cli
pushf
lods
fidivs
mov
fs
jne
inc
mov
jns
mov
sub
push
inc
icebp
cmp
xchg
ljmp
int
and
sub
mov
daa
in
lcall
xor
or
pusha
les
in
sbb
out
jno
push
jg,pt
jno
cld
mov
cwtl
sub
sub
push
std
xchg
fldl
das
out
in
xlat
mov
call
pop
xchg
movsl
sbb
shrl
cmp
test
sub
mov
xlat
xchg
mov
pop
or
sbb
xchg
pop
sbb
push
insl
fcmovnu
mov
cs
and
out
pop
push
rcl
shll
rorb
rorb
xor
mov
sbb
mov
in
out
fs
ljmp
cmp
sub
ret
pusha
js
or
adc
mov
bound
fsubrl
ljmp
lds
rcrl
lret
mov
ja
pop
xchg
and
in
insl
mov
adc
and
pusha
push
in
dec
test
loop
cmp
push
in
sbb
cltd
dec
leave
cmp
daa
outsb
dec
mov
fdivrs
dec
test
mov
ret
sar
mov
addr16
lret
test
adc
push
outsb
sub
adc
js
popf
aad
jnp
aam
pop
fisubrs
dec
jecxz
mov
aas
xor
jp
mov
mov
pop
jecxz
mul
aaa
inc
or
jne
or
push
inc
ds
mov
add
inc
cmp
test
rcr
imul
call
inc
aam
mov
xchg
mov
push
or
testl
shll
pop
frstor
mov
mov
in
lds
fldl
insl
faddl
mov
xor
sbb
lods
adc
popa
dec
orb
push
mov
pop
sub
and
scas
jp
arpl
into
dec
sub
mov
sbb
out
in
test
out
inc
outsl
shrb
daa
xchg
inc
sbbb
cmp
dec
xlat
std
jo
jns
mov
dec
xor
add
add
fnstcw
mov
out
or
fmul
lods
dec
or
sti
push
xchg
insl
push
ret
pop
iret
imul
clc
sbb
out
aam
inc
mov
mov
scas
scas
imul
or
fstpt
inc
sub
mov
pushf
sbb
pop
es
out
out
out
mov
mov
xor
jl
dec
lcall
and
push
outsb
aaa
sub
lds
xchg
addl
ja
insb
insb
xchg
mov
mov
jnp
cmc
inc
mov
and
jecxz
in
dec
cld
adc
mov
movsb
enter
sub
and
add
lcall
out
inc
xor
mov
inc
xchg
xchg
mov
stc
mov
adc
insl
jmp
jp
push
push
enter
jl
mov
inc
in
dec
out
inc
loope
mov
jb
xchg
adc
out
jo
cli
push
inc
mov
push
cld
orb
push
sbb
fnstcw
xor
xor
push
call
jne
mov
mov
rcll
dec
loopne
js
mov
push
sub
and
xchg
fsubs
mov
stc
mov
in
ljmp
fcmovnbe
leave
fucomi
lea
je
fcmovbe
cld
sarb
lcall
xchg
add
pop
sti
arpl
sahf
rorb
daa
sub
movsb
sbb
inc
push
dec
push
mov
mov
jae
and
icebp
mov
pop
test
cmp
mov
xor
int3
mov
ss
das
mov
int
je
mov
pop
add
mov
sub
les
int
test
out
shlb
sarl
repz
or
sbb
push
es
push
lds
pop
outsb
pop
enter
xor
out
sub
fidivrs
nop
dec
push
xchg
jbe
add
jge
jl
mov
add
mov
shl
push
dec
scas
sub
and
insb
in
add
loopne
stos
out
add
pop
mov
adc
std
and
add
xor
adc
fistps
xchg
int3
xor
je
pop
pop
jbe
lcall
add
fildl
je
jecxz
shll
lahf
push
stc
pusha
xchg
aad
icebp
mov
sbb
pop
leave
mov
jnp
aaa
shrb
bound
aad
push
adcb
push
mov
cmpb
mov
inc
xor
and
jb,pt
xchg
jnp
cli
out
arpl
fucom
aas
sbb
paddsb
push
adc
pusha
sub
scas
pop
sbb
mov
mov
xor
out
inc
lcall
fisubs
pusha
inc
jmp
out
or
xlat
in
push
jmp
imul
lock
test
jmp
arpl
addr16
mov
push
inc
lock
loope
clc
mov
subl
mov
add
add
data16
dec
loop
ljmp
push
pop
mov
add
pop
es
jp
stc
in
adc
test
pop
fisttps
into
mov
cmp
adc
dec
adc
nop
inc
mov
push
pop
xlat
leave
ss
lcall
add
stos
sbb
aas
sub
scas
nop
xchg
push
adc
pop
test
jecxz
mov
jle
inc
adc
daa
imul
ss
pop
gs
mov
xchg
jmp
dec
outsl
jmp
cmp
in
mov
mov
scas
inc
div
sub
ja
adc
mov
popa
mov
jo
imulb
xchg
pop
fisttpll
sub
xlat
jmp
push
stc
and
aas
ja
js
jg
mov
add
stc
repnz
cmp
push
adc
cmpsl
sahf
popa
into
leave
out
into
jbe
push
leave
pop
and
movw
pop
js
dec
bound
je
and
fcoml
or
xor
imul
adc
pop
mov
lret
sbb
mov
das
mov
push
out
dec
and
cmp
inc
pop
int
sbb
orb
das
mov
daa
push
popf
cmc
cwtl
in
jns
mov
aaa
fstpt
sahf
cmpsl
js
mov
movsl
adc
mov
jecxz
testb
add
cmp
or
sub
sbb
not
stos
insl
cltd
imul
sub
stc
xchg
bound
lahf
lods
mull
cmp
adc
popf
lock
pushl
ret
outsl
adc
fsubl
mov
mov
mov
jns
lret
pop
cmp
das
mov
mov
orl
pop
mov
pop
adc
popa
mov
stos
outsb
jg
jge
xor
pop
mov
inc
lods
xor
xor
jge
mov
xchg
shll
shlb
push
nop
jb
sub
push
mulb
pop
into
insb
or
test
mov
movsl
fwait
add
call
mov
push
dec
cmpsl
into
out
mov
jmp
and
xor
lcall
adc
rcrb
inc
aaa
repz
adc
xor
iret
pushf
cmpsb
cmp
aas
out
mov
mov
inc
or
das
idiv
mov
adc
jg
pop
dec
pop
loope
jno
push
in
mov
int
mov
push
sbb
jp
push
adc
gs
cmp
insb
jmp
add
insb
das
push
lret
or
loopne
push
cmpsl
stc
and
cld
add
movsl
je
jl
fld1
push
pop
add
idivl
fsubrl
enter
push
sub
jg
ljmp
lahf
xchg
push
orb
std
cmp
lods
jbe
add
fwait
aas
dec
repz
aas
push
inc
ror
pop
mov
cmp
xor
pop
sbbl
or
push
lahf
lods
mov
xchg
sti
addl
sbb
andb
mov
sbb
fstpt
repnz
sti
testl
cmp
dec
out
add
or
push
push
or
jo
pop
outsl
je
js
adc
and
loope
jb
mov
xor
push
orl
inc
sbb
lds
and
dec
stc
xor
and
sarl
clc
dec
test
sbb
sbb
pop
in
stos
int3
sarl
js
fnstsw
shlb
pop
into
sbb
dec
lea
movsb
cs
xor
cmp
cmpsl
jmp
pop
pop
mov
rcll
adc
cld
add
addl
cmc
adc
in
xor
jae
mov
out
fmull
push
inc
sbb
sub
sbb
mov
lahf
icebp
adc
cld
loopne
js
mov
lret
mov
in
repz
pop
dec
add
fisttpl
add
cmp
sbb
pop
es
mov
xchg
fnstsw
pop
jl
push
dec
jmp
sti
pop
or
push
and
hlt
pop
cmp
fcom
mov
mov
inc
push
dec
sbb
dec
add
adc
out
lahf
dec
inc
aad
xor
add
subb
scas
add
pop
or
aas
mov
mov
in
pop
jne
pop
iret
sub
ja
pop
out
mov
sub
cmp
or
scas
lds
fptan
cmc
mov
sub
bound
ljmp
adc
mov
nop
xchg
jle
inc
mov
pop
sbb
mov
sti
adc
cmc
outsl
sbb
filds
ds
fbstp
lret
inc
adc
cli
arpl
jnp
rorb
stos
mov
dec
and
rclb
mov
mov
or
and
outsl
stos
les
divl
nop
jl
mov
std
movsb
sahf
push
scas
cmpsl
sbb
push
cmp
enter
lret
aam
inc
lea
iret
clc
insl
add
into
lods
ds
push
push
adc
mov
push
sub
ss
xchg
jnp
add
es
mov
sub
adc
jae
xchg
loope
mov
add
inc
rolb
dec
xchg
es
pop
iret
jmp
mov
or
shll
pop
stc
mov
mov
sbb
inc
rcrb
outsb
sbb
in
cld
xchg
mov
xor
push
idiv
outsb
push
aam
add
mov
sub
mov
sub
or
cmpsl
pop
jp
nop
aad
daa
add
ds
cmp
sbb
pop
popa
jne
push
fsubrl
push
std
nop
dec
pop
imul
jne
sub
inc
and
mov
fstl
sbb
push
ret
mov
xchg
stos
jg
mov
push
adcl
decl
and
sbb
mov
push
push
inc
dec
add
mov
enter
adc
push
out
adc
test
dec
pop
jle
loopne
pop
sub
or
xchg
cs
ja
stc
jg
in
cli
mov
jne
add
mov
nop
sbb
gs
jae
out
add
pushf
lret
xchg
xchg
xor
mov
lcall
es
ljmp
push
rcll
push
adcb
xlat
call
fcmovne
push
outsb
pop
cmp
lahf
xor
fiadds
pop
stos
push
addr16
mov
popa
insb
das
mov
lcall
sbb
mov
lret
fistl
jecxz
sub
push
mov
mov
sbb
inc
ret
push
jno
mov
sahf
outsb
jecxz
jecxz
mov
xchg
inc
pop
fbstp
cld
sahf
dec
ret
push
cli
ret
xchg
inc
dec
dec
push
dec
sbb
cmpsb
sub
push
idivl
pop
mov
sbb
clc
fildll
je
loop
shrl
jp
sub
setbe
fs
or
lea
movsb
adc
scas
jl
adc
adc
jg
lret
lea
or
ficoms
bound
stc
sub
ds
push
mov
stos
push
pop
jb
push
adc
std
mov
je
movsl
lcall
enter
stos
lods
fmulp
hlt
inc
pop
ret
xor
jno
sub
lea
xor
aas
test
daa
push
sbb
les
push
fcmovnb
inc
sbb
test
and
pop
dec
or
test
fbld
cwtl
lahf
push
and
in
sbb
add
jno
stos
push
cltd
cltd
icebp
inc
add
lods
cmp
fisttpll
iret
and
push
rorb
pop
cmp
insl
and
mov
xchg
aaa
sub
add
mov
dec
out
sarl
cmc
pop
and
mov
jp
jmp
mov
cmc
jecxz
xchg
add
mov
jmp
sbb
or
cld
lock
dec
mov
push
sub
daa
sbb
and
jmp
aas
mov
fstp
popf
int
movsb
jno
jg
orl
mov
jbe
jecxz
and
push
sti
lds
scas
mov
pop
rorl
pop
inc
lods
push
aam
lcall
sbb
stos
xor
loop
mov
mov
push
add
std
aad
ljmp
cmp
and
push
enter
imul
gs
loope
je
mov
aaa
faddl
jecxz
adc
iret
xor
jae
xor
lds
arpl
sbb
fwait
jge
mov
int
lods
push
stos
icebp
ljmp
add
dec
aad
xchg
pop
cmp
jg
sahf
cmp
imul
shlb
stc
sbb
xchg
sbb
movb
xchg
fwait
bound
cmpsb
mov
sbb
or
xchg
movsb
inc
test
push
lcall
sbb
mov
mov
in
lret
push
dec
dec
addr16
or
mov
mov
in
cmc
cli
mov
or
arpl
jmp
push
sbb
inc
cmpl
es
popf
pop
pop
push
dec
mov
xor
add
mov
ds
sbb
test
xlat
out
testl
mov
mov
xchg
jle
dec
out
add
xchg
push
sarl
dec
push
in
ret
lea
mov
mov
shr
adc
fidivl
push
cld
stc
mov
notb
enterw
jae
paddsb
inc
dec
daa
pop
jbe
push
ret
repnz
sbb
movsb
loop
and
aaa
jl
xchg
daa
dec
clc
push
xlat
pop
mov
out
add
pop
pop
sbb
lods
jbe
sbb
mov
mov
cmp
push
push
sti
mov
movsl
sbb
xor
repnz
jno
outsl
sbb
or
sub
lret
imul
cmp
push
adc
rolb
jmp
arpl
dec
movsl
or
pop
decl
dec
add
leave
jge
test
xchg
rcr
sahf
andb
ljmp
cmp
mov
xchg
aaa
xchg
int3
pop
div
in
inc
xorl
push
pop
mov
push
push
lret
dec
cmp
call
add
mov
xchg
sbb
clc
shr
push
pop
dec
add
mov
jo
pop
in
sub
lret
xor
xor
or
push
mov
add
cmpsb
cmp
push
fs
add
iret
and
jl
mov
je
push
int
mov
xchg
mov
cli
mov
lcall
in
pop
ja
mov
mov
fstpt
sti
cmpsb
stos
jge
sub
pop
cwtl
mov
bound
jb
xchg
mov
imul
pop
xor
hlt
inc
out
mov
insb
addr16
ficoms
sub
out
sub
loop
popa
mov
sahf
cmp
lcall
adc
icebp
dec
rcrl
mov
jecxz
cmp
add
test
push
mov
lods
mov
inc
ds
dec
jmp
jmp
jnp
sbb
xor
add
sbb
out
mov
ljmp
mov
popa
sub
imul
inc
and
into
or
mov
cmp
jl
sub
xor
push
dec
or
push
aam
test
xor
enter
insb
dec
rcl
sti
lcall
cmp
sub
stos
adc
mov
pop
xchg
mov
adc
dec
xorb
sbb
inc
aad
xlat
xor
in
jae
hlt
lock
sub
cmpsb
jp
js
data16
jns
and
pop
pushf
xchg
aas
cld
mov
repz
lea
stos
addb
lret
gs
clc
mov
outsl
repz
into
push
or
mov
jb
mov
mov
cli
mov
sbb
pusha
xor
lret
lret
outsb
ficomps
into
repz
jae
adc
fwait
sbb
gs
xor
rorl
loopne
adc
mov
and
push
jecxz,pn
jmp
test
mov
test
hlt
sbb
js
outsl
jnp
xchg
call
loop
loopne
fbld
pop
cmp
movsl
fmuls
push
loop
fs
stc
mov
mov
mov
sub
jecxz
mov
dec
mov
scas
push
test
add
dec
into
loop
push
push
inc
mov
jno
cltd
sbb
or
xor
nop
in
push
bound
sub
mov
scas
or
dec
add
jnp
cld
outsl
or
push
xorl
xchg
mov
jne
shll
sub
push
cmp
pop
pop
cltd
mov
jnp
xchg
adc
es
addr16
fucomip
call
out
sub
jp
add
arpl
lock
jmp
mov
jnp
push
shlb
cli
mov
hlt
das
cli
imul
mov
mov
std
popf
or
add
inc
inc
and
dec
fcoms
mov
and
loopne
xchg
mov
xor
in
dec
lret
fnstcw
addr16
add
mov
inc
in
les
cs
shl
in
pop
subb
movsb
jge
lods
mov
pop
inc
inc
cli
and
jg
pop
daa
mov
fiaddl
sub
add
dec
dec
sub
int3
nop
jp
aas
push
sbb
pushf
push
mov
test
jge
inc
or
int
js
fisttpl
jns
and
xchg
cld
pop
adc
movsl
int3
mov
lea
xlat
dec
fdivl
incb
push
sahf
into
subb
rorb
xchg
xchg
jmp
sub
pop
mov
test
aaa
mov
add
adc
cs
add
cmp
push
in
mov
shrb
dec
cmp
pop
pop
cwtl
lock
mov
in
lcall
inc
out
popa
ljmp
sbb
aas
pop
push
xchg
into
push
xor
add
je
jmp
ja
sub
fbstp
xor
test
aad
jns
xor
out
in
pop
lret
jo
scas
cmpsl
lret
mov
mov
loope
sahf
cmp
repnz
add
bswap
cmovp
xchg
nop
adc
mov
loop
les
cmp
divl
pop
adc
das
lahf
jbe
adc
mov
subl
and
imul
dec
and
jge
pop
xchg
mov
pop
jne
or
loope
movsb
jno
lods
inc
inc
rorl
addb
mov
pop
mov
jb
jl
dec
hlt
xchg
bnd
sti
ret
jmp
and
push
fistps
jne
mov
jno
loop
pop
out
in
dec
inc
and
and
repz
clc
mov
outsb
push
shrb
lods
addr16
es
pop
add
jb
sahf
rcll
adc
cmp
scas
fs
push
mov
xchg
icebp
jns
stos
cld
xchg
jp
xchg
pop
sub
and
mov
push
es
stos
mov
pop
dec
in
inc
repnz
lret
push
pop
mov
mov
pop
mov
in
stos
in
mov
add
fldt
push
mov
hlt
loopne
fcoml
or
sub
push
aas
push
add
push
ret
popf
repnz
add
mov
andl
or
cwtl
lds
mov
loopne
push
push
aas
scas
mov
pop
inc
gs
or
mov
push
adcb
decb
add
jbe
out
andl
add
sbbl
ror
lret
cwtl
mov
or
loope
sti
push
arpl
cmc
scas
aas
bound
scas
jns
imul
andl
mov
test
sahf
or
loopne
dec
jnp
loope
popf
hlt
orb
mov
stc
and
jo
hlt
pop
or
in
mov
loopne
add
pop
sbb
pop
xchg
xorl
jb
adc
test
ficompl
fisubrs
sub
fildll
and
dec
add
sarl
leave
daa
mov
and
xor
adc
push
push
sahf
push
aas
jl
pop
jecxz
adc
pushf
mov
mov
xchg
les
clc
sub
outsb
femms
shl
dec
xchg
outsl
pushf
mov
add
and
xchg
repz
mov
xchg
and
sub
hlt
subb
xor
lock
pop
lret
iret
pop
mov
inc
pop
jbe
fdivs
lods
sahf
mov
mov
divl
mov
pop
mov
inc
pop
in
inc
inc
shl
xorb
adc
enter
jmp
je
arpl
sbb
xor
push
in
or
sahf
mov
dec
sub
push
sub
pop
ds
add
xor
stc
je
mov
inc
rorb
sbb
push
shll
cmp
push
mov
jmp
cltd
jo
add
jns
add
cmp
pushf
pop
pop
push
or
push
sarl
ss
xor
test
cmc
aam
cmc
cmp
add
dec
outsl
test
imul
enter
in
push
mov
lods
push
xchg
jae
jno
sub
adc
jge
xchg
adc
into
sub
add
xor
xchg
jne
mov
push
xchg
fcompl
or
add
push
cmpb
mov
jge
cmpsl
lret
mov
fcmovnu
movl
mov
pop
cmp
ret
mov
inc
fmull
out
leave
xchg
pop
sub
lret
outsl
insb
mov
in
jo
xchg
mov
insb
lahf
addr16
xor
cmp
out
sbb
mov
lods
mov
dec
fisubl
vpsrld
jae
push
ret
aas
cmp
lret
sahf
pop
xchg
cmpxchg
xchg
adc
in
inc
ljmp
mov
dec
pop
push
add
imul
mov
ror
in
in
sbb
std
xlat
ret
push
xor
leave
ja
lock
insb
dec
pop
stc
lcall
dec
test
shr
notl
mov
dec
dec
jmp
jl
sbb
xchg
jl
pushf
ss
je,pt
faddp
in
push
dec
mov
adc
addr16
test
dec
jg
or
test
jae
fbld
notb
je
arpl
mov
testl
and
push
dec
mov
jp
jae
pop
scas
pop
lcall
sbb
sar
cmpl
loop
in
mov
inc
xchg
xchg
fstpl
push
push
or
mov
and
mov
jl
mov
xchg
and
sub
sarl
cmpsb
adc
push
cmp
or
jb
jbe
xchg
jmp
arpl
loop,pt
sti
je
sbb
ficomps
jbe
movsb
dec
lock
les
add
add
notb
sbb
pop
dec
lahf
sub
nop
cs
lods
and
loopne
jae
sub
mov
mov
insb
dec
ja
std
push
add
ret
testb
dec
mov
add
repnz
in
int3
xor
mov
inc
mov
inc
and
aas
xor
add
icebp
push
jp
dec
sub
or
mov
fwait
and
adc
faddl
jmp
loop
ret
inc
jb
or
rclb
jns
mov
and
mov
cmpsl
pop
lods
or
rcl
scas
and
ret
cli
movsb
lods
int3
adc
bsr
push
and
push
test
test
cwtl
rcl
repnz
adc
clc
subl
jg
mov
pop
in
testb
insb
push
adc
or
movsl
sti
mov
xchg
jae
or
and
shl
cs
mov
mov
rorb
jge
mov
inc
sub
out
das
out
dec
sbb
dec
push
mov
in
pop
jbe
mov
scas
andb
cmpl
xor
push
fdivl
ja
or
adc
fdivrp
xchg
sahf
xor
sub
cmp
xor
ss
test
jg
push
insb
xchg
push
aam
sarl
xchg
mov
je
lock
movsb
filds
sub
repz
mov
pop
push
orl
cli
jb
sub
jns
lea
inc
in
or
repz
push
int3
jnp
xor
pop
sbb
pop
ljmp
orl
les
jne
cli
sbb
lahf
rcr
adc
sbb
mov
fisubs
push
shld
mov
inc
pop
aaa
and
xchg
sarl
test
pop
adc
xchg
data16
in
xchg
stc
jmp
cwtl
inc
loop
cmpsb
jmp
shl
scas
dec
mov
mov
pop
imul
insl
sbb
mov
testl
rorb
cmp
sub
roll
push
add
push
dec
push
rcll
into
cmc
dec
pop
js
outsl
jmp
rcrl
outsb
std
in
in
or
sub
popw
add
push
push
rep
dec
pop
subl
outsl
sbb
jmp
repz
mov
testb
stos
sbb
push
lods
dec
sbb
mov
out
mov
inc
mov
lds
dec
enter
dec
add
test
mov
fmul
xor
push
jns
or
std
and
xor
in
inc
das
mov
and
pop
or
outsl
les
sub
leave
mov
mov
push
lahf
cs
or
int
stos
scas
sti
lods
xchg
add
inc
data16
mov
sbb
scas
push
jp
aaa
testl
daa
dec
jmp
es
sbb
mov
add
cmp
push
fcomip
divb
inc
in
xchg
out
push
stc
ljmp
cmc
jns
test
mov
xor
cld
iret
sar
push
pop
mov
mov
cli
jns
sarb
dec
sti
jl
cld
cmp
or
lcall
repnz
adc
inc
inc
xchg
push
cmpsl
cmpsl
pop
adc
mov
mov
ss
pop
stc
or
loop
out
testb
pop
xchg
inc
lods
inc
push
fdivs
cmpsl
mov
sub
inc
addr16
mov
repnz
push
push
outsl
pusha
inc
movsl
sbb
and
jno
dec
es
lods
push
mov
cmc
fists
add
ljmp
rol
xor
or
fbld
cmp
inc
bound
lock
add
sar
std
loope
jp
jp
fs
cld
movsb
repnz
sti
aam
faddl
clc
out
push
adc
sbb
xlat
fimull
testl
orl
sub
in
cmp
push
mov
jae
out
add
daa
stos
out
cs
fucomp
push
sub
mov
scas
push
and
inc
test
lods
aaa
jmp
divl
cmp
xchg
cmp
mov
xchg
mov
loope
es
sbb
sub
out
or
inc
mov
lods
fwait
jbe
add
rorl
fisubrs
push
add
add
js
imul
add
imul
vpunpckhbw
sbb
testb
xlat
xchg
or
jmp
dec
mov
stc
cmpsl
jmp
inc
pop
jnp
in
add
mov
sbb
jbe
and
cmp
cmp
loopne
fstps
fwait
add
popa
or
mov
mov
pop
call
jl
ljmp
jl
add
dec
clc
xchg
lret
add
pop
adc
push
adc
aaa
cltd
jmp
inc
dec
add
lods
das
add
dec
jae
and
or
push
mov
xchg
xor
xlat
cmp
inc
and
cmp
insl
dec
and
cmovne
jns
sub
xchg
push
or
arpl
iret
push
jle
pop
fldz
lret
inc
ss
into
xchg
arpl
jge
movsb
xchg
notb
sub
xchg
sbb
add
cmpsl
ret
les
cmp
xlat
rclb
jne
adc
sub
in
xor
cltd
fistps
push
push
scas
bsf
insb
jno
inc
push
adc
mov
sbb
or
mov
addr16
pop
add
outsl
mov
mov
dec
imul
addr16
push
adc
aas
sub
decl
lock
inc
push
pop
int
or
cmpsb
jle
in
aad
out
das
gs
stos
fisubl
sub
clc
int3
fsubrs
jno
or
push
fnsetpm(287
and
pop
loopne
pushf
dec
psadbw
sbb
lret
ret
mov
inc
imul
scas
sub
and
leave
mov
inc
xchg
pushf
mov
jecxz
test
push
js
add
ret
sbb
shlb
fcmovu
nop
adc
je
and
loopne
aas
mov
sbbb
push
std
jb
daa
mov
xchg
mov
add
jns
ljmp
pop
cmp
stos
pushf
in
in
stos
sbb
push
daa
out
dec
push
das
jge
xorb
data16
movntq
push
nop
inc
xchg
sub
jg
xor
stc
mov
push
repz
call
lods
dec
aas
xchg
add
inc
dec
inc
movb
jle
xor
test
clc
mov
mov
cmp
pop
lods
jbe
add
sahf
inc
fs
pop
mov
popa
mov
jl
lods
outsl
xchg
shr
add
stc
cmp
roll
inc
rcl
mov
adc
sub
mov
daa
test
push
pop
clc
xchg
mov
fxch
cld
daa
jbe
adc
xor
adc
mov
sub
fnstenv
xor
and
mov
test
fistpl
jle
add
orb
mov
mov
sti
stc
and
and
dec
mov
pop
or
icebp
shlb
jb
jle
aaa
outsb
mov
out
mov
inc
ja
dec
jns
aaa
aas
cwtl
jle
add
enter
adc
push
sti
cmp
xchg
mov
jnp
lock
jbe
inc
loop
or
cmp
dec
sbb
mov
mov
shlb
xchg
leave
int3
mov
imul
loop
mov
pop
mov
mov
xor
mov
push
or
pop
mov
sub
icebp
jnp
dec
push
and
mov
mov
xchg
jge
std
sub
mov
adcl
mov
sahf
adc
out
mov
scas
loopne
hlt
popf
and
pop
das
pop
jnp
inc
mov
mov
int
mov
loopne
sahf
mov
fsts
mov
pop
or
mov
cs
stos
mov
jae
dec
xchg
jbe
pop
xorl
push
mov
loope,pt
add
mov
xor
jb
cmpsb
addr16
popa
mov
xlat
mov
das
or
lret
mov
scas
movl
jmp
cs
leave
mov
ds
mov
or
pop
pop
xor
ror
mov
jmp
negb
rorb
iret
mov
add
sbb
sub
cmp
sub
or
adc
lock
and
cltd
xlat
movsl
push
out
sub
mov
rolb
fistl
xchg
pusha
fwait
pop
sahf
test
mov
cmp
hlt
jb
mov
sbb
push
stos
cmpb
lods
mov
mov
mov
and
cmp
jnp
sbbb
imul
jmp
push
mov
xchg
in
insb
dec
out
daa
imul
clc
xchg
sahf
adc
mov
popa
xorl
xor
push
xchg
xor
cltd
and
xchg
jecxz,pt
fmuls
push
hlt
jp
mov
mov
scas
cmp
out
xadd
xor
jo
inc
ja
jl
int3
or
xchg
adc
mov
icebp
js
int
arpl
mov
xchg
xchg
ljmp
pop
push
add
adc
mov
lret
push
add
sub
in
cmp
imul
arpl
repz
leave
sub
daa
lds
jne
dec
mov
push
jne
mov
bound
sti
ret
popl
mov
ljmp
xor
insb
shrb
xchg
mov
shr
add
ret
out
xchg
movsb
pop
scas
add
hlt
push
cmp
adc
dec
xchg
pop
and
xlat
pop
and
fwait
and
vunpckhpd
je
cmpsl
call
xor
push
and
jmp
sbb
xor
aad
mov
lock
push
pop
aam
nop
push
lods
add
inc
in
std
mov
add
pusha
shlb
dec
mov
mov
sub
ljmp
mov
push
dec
jge
or
sub
rcl
cmp
xor
leavew
and
sbb
jbe
pop
pusha
cmpsb
add
pushf
pop
cmpsl
test
pop
mov
int
jnp
ljmp
repnz
data16
arpl
ljmp
fs
cmp
in
shl
popf
pushf
aad
jb
adc
daa
jmp
dec
jp
add
scas
xor
fs
inc
rolb
ljmp
mul
push
lret
in
mov
ja
ret
cmc
jne
outsb
xor
iret
out
push
sbb
sub
cmpl
xor
or
sub
fistl
std
push
pop
cmp
mov
sbb
jno
mov
les
decl
call
faddl
cmc
or
subps
out
jp
adc
arpl
mov
sbbb
mov
cmp
jl
lock
in
std
jbe
mov
insb
jp
jno
les
xlat
pop
xchg
inc
sahf
jb
fistl
movsl
push
andb
pop
xlat
mov
popf
shl
hlt
andb
add
fisttps
push
xor
sbb
mov
das
inc
inc
dec
mov
aam
cwtl
je
mov
sahf
int3
test
js
mov
repnz
adc
jle
pop
mov
std
add
mov
scas
into
mov
fs
mov
inc
jmp
mov
mov
orb
inc
repz
je
pop
sahf
gs
pop
cmp
mov
shr
movsb
xor
lods
jmp
push
xchg
out
notb
xor
call
les
sbb
movsl
pop
pop
or
pop
std
jo
insb
stos
jno
nop
out
mov
daa
ss
repz
icebp
outsb
cmp
inc
cmc
mov
and
sti
in
dec
mov
inc
into
and
jl
xchg
mov
pop
test
push
adc
jmp
imul
test
push
mov
and
mov
loopne
leave
dec
xchg
popa
pushf
xlat
shlb
mov
imul
jmp
adc
les
mov
push
sbb
mov
data16
stos
scas
or
mov
sub
std
call
jns
out
je
cmp
loopne
loopne
mov
enter
ja
mov
xor
fs
and
std
lods
cmc
int
daa
xchg
in
rorl
stos
iret
jge
es
stos
sub
xor
jge
test
pop
mov
roll
ljmp
pop
aas
out
fucomip
insb
test
loope
dec
jns
inc
push
add
xor
js
xor
cs
mov
mov
rclb
idivl
test
xchg
repz
push
clc
call
sub
and
out
idivl
push
mov
mov
incl
leave
xor
stos
xchg
scas
cld
flds
fstpt
enterw
dec
mov
sti
stos
and
xor
and
jl
sub
and
mov
add
cmp
data16
push
sub
and
sbb
sbbb
rcrl
adc
fsubr
lds
add
and
nop
inc
xchg
fisttpl
subb
mov
loopne
out
shlb
jg
xor
lods
inc
jecxz
aad
jb
into
adc
and
xchg
xchg
xchg
mov
test
lahf
xchg
das
mov
scas
pop
repnz
jg
cmp
scas
roll
sbb
movsl
les
adc
or
lcall
cwtl
pushf
cltd
rolb
pop
xchg
pop
pushf
ljmp
stc
and
das
jl
adc
jle
and
je
push
mov
sub
insl
iret
pop
ret
push
or
mov
popf
and
jns
or
cmp
jecxz
xor
add
mov
mov
push
adc
mov
daa
xchg
fwait
shrb
mov
jmp
jbe
nop
lea
push
mov
and
or
sub
fmul
fstl
xchg
mov
sub
add
addr16
and
insb
ljmp
jo
jge
es
test
idivl
imul
mov
cwtl
sarb
xor
and
or
add
xchg
adc
ss
scas
or
pop
cld
dec
cmpb
mov
ret
dec
jae
inc
out
sar
mov
mov
stc
in
mov
mov
xor
jnp
mov
mov
cmp
xor
sahf
filds
std
es
lret
dec
inc
lret
fdivrs
add
mov
sub
cmp
je
ljmp
sub
ja
inc
fstps
inc
addb
arpl
pop
fcoms
loopne
aad
xor
sub
das
mov
cld
ljmp
xlat
xchg
std
dec
mov
mov
xor
or
push
clc
cmpb
push
add
test
cli
in
or
jb
mov
ret
jle
loope
ds
mov
out
scas
add
pushf
lds
aas
out
mov
adc
lahf
mov
addr16
bound
data16
cmp
decl
dec
aad
leave
or
test
mov
add
adc
stc
shrb
push
enter
jne
xchg
shr
cld
fucomip
cmc
and
int3
aad
aad
mov
ljmp
stc
test
je
ret
scas
lcall
mov
out
adc
sarb
push
pop
push
jno
pop
and
push
cmp
mov
inc
pusha
lds
ljmp
sbb
push
mov
mov
xchg
out
scas
out
enter
fdivr
or
lods
lret
movl
sarl
xor
jmp
in
pop
mov
add
mov
inc
out
fldenv
dec
or
xchg
add
loope
cltd
sbb
xchg
mov
in
mov
mov
divl
ret
adc
data16
push
dec
mov
loope
push
int3
ja
in
push
or
sbb
and
sub
out
jne
imul
bnd
or
js
jg
into
insl
push
push
push
test
sbb
outsl
ja
out
scas
jo
cmpsl
js
mov
jnp
push
xchg
or
pop
pushf
cmpsb
mov
jbe
inc
pop
fnstsw
cmpsb
fdivl
mov
ljmp
aas
inc
fwait
jno
lea
testb
das
sub
jl
fstpt
add
xchg
mov
test
add
or
test
lea
jle
xchg
pop
lahf
rcl
mov
inc
mov
and
fwait
or
int3
adcb
pop
mov
inc
fnstenv
cmp
mov
sbb
mov
xchg
lret
vucomisd
out
fwait
iret
pushf
ror
jp
xlat
adc
leave
loop
sub
jle
nop
jmp
test
cmc
sbbb
xchg
sub
inc
inc
cmp
cmp
lcall
jl
clc
int3
rorb
aad
add
mov
cli
add
xor
mov
cmp
inc
das
push
enter
movsl
push
les
sbb
les
fdivrl
mov
mov
jo
pop
lods
mov
mov
test
sbb
jnp
aas
movsl
cmpsb
ret
xor
and
outsl
mov
in
cmp
xor
sbb
dec
pop
sub
mov
and
dec
scas
testl
and
punpckldq
arpl
sub
jns
xor
cli
xor
mov
js
out
cmpsb
add
mov
out
mov
sahf
xor
repnz
cmp
jo
loopne
and
add
adc
cs
jbe
shrb
loope
pop
imul
mov
ret
mov
push
test
cmp
jae
fcmovnu
push
stc
insb
hlt
pop
push
imul
ja
sbbb
call
jns
scas
aaa
and
dec
mov
cld
pop
sub
addr16
xchg
addr16
daa
call
mov
mov
inc
dec
jns
and
adc
lods
int
insb
pop
sbb
pop
imul
inc
pop
in
test
adc
ret
ljmp
dec
out
or
enter
sbb
inc
stc
movaps
jge
jle
idivl
xchg
dec
int3
jp
cmp
loopne
repz
test
mov
stc
fwait
test
pusha
sbb
xchg
mov
cmp
push
pop
inc
pop
stos
xor
xor
aad
lods
push
loopne
xchg
orb
mov
jge
mov
movsb
lcall
incb
mov
sbb
cmpsl
ret
clc
cli
add
lahf
jmp
or
out
mov
in
lea
inc
mov
xor
lcall
cmp
cli
pushf
jbe
nop
das
es
js
and
pusha
jmpw
fwait
cmp
idivb
insl
fxch
js
xchg
mov
aaa
sub
xor
mov
mov
xchg
add
mov
movsl
jae
sub
mov
ret
push
or
dec
popa
fwait
cmpsl
cmp
jo
xor
fldl
add
mov
clc
cli
int3
nop
inc
pop
or
push
and
test
inc
inc
dec
stc
das
fcoms
jnp
mov
mov
jl
mov
dec
xchg
mov
lcall
xor
cmp
dec
mov
lret
xchg
jb
insb
int
sbb
push
jmp
daa
sbb
cmp
inc
pop
ficoms
jmp
scas
push
xor
jmp
sbb
je
ret
jnp
ffreep
xchg
mov
movsl
dec
push
mov
mov
jae
lods
sbb
or
lea
and
pop
insl
pop
jg
push
jnp
dec
xor
mov
add
mov
shll
jl
xchg
std
push
mov
and
mov
ja
xchg
add
daa
adc
cs
push
push
push
lret
mov
mov
or
xor
sub
movsl
push
xchg
add
mov
inc
jp
out
and
lahf
xorl
jecxz
popa
cs
mov
insl
lea
ja
push
pusha
jae
or
adc
adc
xchg
wrmsr
mov
jmp
hlt
fsubs
jl
hlt
outsb
int
cmovno
test
pop
in
fnstsw
test
dec
mov
mov
sub
mov
sub
fs
jmp
adc
pop
push
xorl
mov
push
leave
out
jne
outsb
pop
jo
ret
hlt
sbb
sub
sti
fwait
iret
cmp
pop
jge
mov
xor
mov
fisubs
nop
inc
and
sub
push
pop
imul
dec
push
add
xor
arpl
insl
lret
jecxz
xchg
negl
lcall
into
pop
or
pop
stc
jle
push
mov
dec
inc
lahf
cmc
shl
repz
sarl
mov
add
push
cltd
in
imul
inc
adcb
xchg
xchg
fnstsw
and
insl
orb
cmp
cmp
dec
lods
fidivrl
orb
js
sbb
das
int3
jl
and
rol
cmpsl
push
push
xor
pop
add
sbb
mov
adc
jae
sbb
xchg
dec
jne
call
mov
in
push
rclb
aas
shrl
dec
int3
xor
push
add
cmp
mov
in
andl
scas
or
loop
adcl
hlt
add
adc
jmp
fwait
pushf
pop
out
sbb
out
inc
das
mov
adc
cmp
pop
jl
xchg
add
std
mov
xchg
and
or
dec
xchg
jmp
out
mov
aam
add
out
push
pop
hlt
sub
adc
ret
movsl
inc
or
pop
sti
mov
cltd
loopne
cmc
dec
sbb
jns
negb
mov
cwtl
addl
test
shlb
lret
push
sub
add
dec
divl
inc
rcll
icebp
aad
bound
xchg
in
and
movsb
mov
in
bound
ret
lds
and
iret
movl
movsb
cmp
scas
adc
mov
arpl
out
das
inc
add
mul
pop
xchg
add
fucomi
mov
hlt
push
mov
loopne
ret
inc
and
mov
mov
nop
mov
addl
inc
sahf
inc
mov
jmp
call
adc
outsb
add
push
pop
add
fucomip
sub
arpl
xorl
lock
int3
imul
into
adc
cmpsl
loopne
push
test
stos
mov
jnp
adc
mov
xchg
sbb
js
bsf
out
mov
in
scas
shlb
or
inc
sbb
xlat
and
adc
mov
xchg
jl
insb
leave
sub
or
clc
cmp
ljmp
pop
mov
sbb
and
mov
jbe
daa
lcall
and
pop
mov
push
lods
xor
xchg
jg
cld
jb
cwtl
sub
js
sub
je
sti
adc
inc
xor
xor
fwait
out
or
pop
jo
jb
sub
ss
add
repnz
sbb
jb
out
mov
ljmp
js
shl
cmp
mov
fcmove
fsubl
out
pop
add
bound
fsts
push
movsb
pop
xchg
pop
or
and
pusha
adc
mov
aas
in
xor
jae
jmp
mov
loopne
aaa
jns
dec
movsb
mov
shll
jae
push
lret
mov
dec
cmp
sti
movsb
mov
std
pushf
je
xor
das
in
repz
sub
xlat
pop
mov
call
scas
fcmovnbe
and
call
cld
pop
push
sbb
mov
into
js
mov
mull
jp
std
add
jnp
pop
aas
lock
fs
insl
adc
xchg
mov
push
fadd
jo
out
les
push
adc
stos
jp
xchg
in
and
push
adc
test
icebp
ja
add
mov
mov
dec
ljmp
aam
mov
mov
mov
jbe
or
clc
shlb
mov
aas
and
sbb
push
sub
sbb
rcll
push
out
add
mov
and
push
jne
call
lods
dec
jae
inc
jp
jbe
dec
xchg
std
cwtl
push
xchg
jns
mov
jge,pn
jecxz
jo
jne
lcall
mov
mov
jnp
ret
sub
pop
jo
and
pop
lods
jl
mov
dec
mov
dec
dec
push
lret
pusha
xor
cld
dec
jl
inc
jae
mov
mov
push
or
insb
imul
cmc
loop
push
mov
cmp
inc
pop
mov
dec
ret
mov
addr16
pushf
push
sub
sbbl
repz
out
xchg
repz
cmp
pushf
inc
mov
out
in
test
sub
insl
in
aas
test
and
dec
pop
mov
push
or
mov
cmpsl
add
push
jg
in
fiaddl
lods
dec
andl
lock
jnp
hlt
mov
in
sahf
xor
int
sbb
cwtl
lahf
jbe
mov
cmc
dec
add
or
xchg
je
out
psubb
pop
fsubp
mov
jae
je
fsts
push
test
and
insl
or
push
icebp
mov
sub
repnz
not
jns
mov
inc
jae
inc
xchg
adc
mov
cltd
adc
imul
lret
shl
mov
cmpl
adcb
push
xchg
dec
and
loope
nop
scas
xor
pop
jo
push
addb
mov
push
xchg
mov
xor
inc
jbe
xchg
adc
or
cmp
xlat
adc
mov
add
cmp
mov
jne
jmp
std
decb
sub
ficomps
xchg
xlat
cmpsb
outsl
push
ret
and
in
iret
leave
pop
mov
in
and
sti
aad
or
mov
xchg
jle
mov
ds
pop
outsl
sbb
sbb
cmpb
push
sbb
jne
test
cmp
in
push
loopne
lods
stos
adc
xchg
xor
in
stc
mov
into
cmp
xchg
gs
push
sahf
and
inc
jge
sub
mov
xor
cltd
sbb
in
bswap
sbbb
mov
jae
cmp
ret
xor
mov
inc
push
ss
aaa
scas
jmp
sbb
shll
jae
sub
mov
sbb
movsl
xchg
jp
fcoml
shlb
cmp
xlat
and
mov
pop
ljmp
adc
sub
dec
sbb
or
lods
push
repz
jge
loop
mov
imul
pop
sub
cmp
es
adc
mov
arpl
loope
repnz
mov
rep
xlat
daa
lahf
sub
out
xor
cli
addr16
jne
sub
sub
aaa
stos
xor
cmp
mov
pop
push
cs
jne
out
inc
call
cmc
pop
jg
into
lcall
push
pushf
sbb
ja
jns
popf
xchg
mov
adc
insb
sbb
inc
nop
push
push
out
popa
out
xor
loope
push
dec
and
lret
fisubrl
sbb
push
pop
lea
or
subl
daa
push
mov
sti
fbstp
cwtl
int
data16
je
pop
lahf
test
adc
lahf
xchg
lods
dec
into
mov
ret
push
add
aas
and
pop
jns
pop
out
lret
fcompl
daa
jno
loopne
fmuls
xchg
movsb
cwtl
insb
xor
and
aas
das
jg
icebp
jp
xor
dec
outsl
gs
cmp
jp,pn
enter
cmp
ret
jbe
fimull
push
inc
fcompl
popa
jbe
sbb
jle
sub
adc
pop
cmp
mov
mov
sbb
enter
jno
je
mov
ljmp
mov
ja
adc
add
jne
push
inc
test
sub
stos
mov
jle
dec
and
mov
add
inc
ss
push
rcrl
sbb
cmp
jnp
mov
fists
mov
mov
arpl
or
and
cmp
es
lods
mov
fs
dec
dec
pushw
out
ja
inc
cmpsb
cmpsb
adcb
fidivrs
call
jne
jg
xlat
pusha
or
push
sbb
enter
addr16
jns
xchg
clc
js
dec
jg
pop
xor
push
movsb
pop
cmc
cmpsl
and
sbb
movsl
pusha
sbb
mov
push
sbb
popa
testb
push
adc
enter
cli
jns,pt
mov
jl
outsb
xchg
mov
pushf
xchg
repnz
scas
inc
mov
xchg
fidivrl
test
sub
sub
or
add
daa
hlt
test
mov
or
cmp
movsl
jp
adc
sahf
adc
jecxz
push
add
js
add
jl
mov
mov
fistpll
mov
xor
popf
loop
pop
inc
cld
cmc
jl
pop
cmpl
call
push
mov
ret
mov
in
test
test
push
dec
sub
or
scas
gs
dec
inc
mov
insb
xlat
push
or
inc
mov
mov
lret
mov
jne
leave
sbb
imul
dec
mov
and
cmp
mov
ficompl
xor
push
and
sub
sti
wbinvd
or
mov
pop
mov
les
inc
popf
pop
sbb
dec
or
jp
jmp
jnp
fadds
mov
inc
ss
insl
push
pop
cmp
add
ret
lds
mov
std
ret
arpl
das
and
jle
or
sub
ret
ds
cli
js
adc
aam
lret
imul
rcll
cltd
dec
sbb
jecxz
jbe
pop
mov
dec
adc
push
fstl
jmp
mov
jmp
movl
and
and
cwtl
dec
lods
mov
pushf
sarb
push
adc
cmp
pop
orb
mov
ss
adc
fildll
or
jmp
cmp
adc
stc
xor
arpl
dec
pop
jl
xor
mov
and
test
mov
and
divl
add
std
rorb
mov
xor
adc
es
push
lock
rol
aas
add
cld
pop
inc
and
loop
imul
lock
xchg
xor
dec
aad
sub
pop
pop
sub
in
insb
leave
shrb
adc
mov
inc
fstl
mov
fldenv
repnz
stos
daa
lret
cmp
je
or
xor
pusha
imul
xchg
adc
adc
push
js
push
in
cld
sbb
jle
or
sbb
ret
out
test
sar
mov
sub
mov
pop
or
cmpsl
test
add
popa
xor
add
sub
cli
pushf
lock
or
loope
pop
mov
imul
cs
pop
je
jl
inc
outsl
push
ret
mov
imull
or
cmp
cmc
mov
jo
stos
pop
je
sbb
shll
test
loop
icebp
leave
sub
mov
adc
leave
pushf
dec
out
cs
ja
pop
insb
aad
jg
cmp
push
jo
push
mov
inc
lahf
sub
lgs
mov
sbb
jmp
mov
js
jp
shrb
es
pop
sbb
pushf
push
data16
cmp
and
lock
xchg
xchg
xchg
inc
push
jo
enter
in
leave
shr
push
dec
add
les
jne
enter
and
ds
shl
mov
int3
test
sbb
mov
mov
jno
push
pop
pop
dec
and
xchg
pop
sarl
sub
inc
ret
xor
sub
lods
add
dec
es
ss
ficompl
out
mov
and
jmp
adc
xchg
sarl
popa
stc
cli
mov
push
fadds
fiadds
mov
dec
jnp
aaa
fadds
add
add
arpl
or
pop
addl
jae
pop
loope
scas
out
aas
xchg
mov
jle
mov
fimuls
mov
mov
dec
sub
mov
xor
mov
and
xlat
lret
pop
xchg
mov
inc
cmpsb
cmp
or
insb
add
xchg
xchg
out
popa
jnp
scas
das
in
mov
lods
test
es
xchg
icebp
and
sti
pop
inc
inc
pop
orl
out
popa
cmp
test
xor
inc
imul
pop
push
imul
mov
pop
or
sub
jbe,pt
mov
enter
mov
test
dec
sbbb
push
push
xchg
lock
push
std
dec
out
test
or
add
dec
mov
js
loopne
loope
add
out
fs
xlat
xchg
add
cmp
dec
out
cmp
in
add
jae
inc
out
rol
cmpb
mov
scas
ds
pop
addr16
shlb
adc
dec
dec
mov
dec
sub
mov
sbb
movsl
lret
jle
sahf
sti
les
xchg
lock
sub
stos
cmp
xlat
jmp
push
inc
pushl
les
leave
cli
jp
addl
mov
or
loop
scas
test
push
xchg
