add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
clc
cmp
decl
decl
test
mov
adc
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
sub
inc
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
mov
inc
add
push
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
mov
push
push
push
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
mov
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
sbb
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
cwtl
dec
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
cmp
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
out
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cli
dec
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
and
or
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
inc
inc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
add
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
xor
inc
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
cmp
nop
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
push
inc
add
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
jae
inc
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
xor
add
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
xchg
inc
inc
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
mov
inc
and
call
test
je
xor
cmp
mov
cwtl
cmp
and
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
popa
cs
add
add
mov
and
cmp
jne
mov
mov
add
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
pop
cmp
decl
decl
adc
into
call
mov
das
dec
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
xchg
adc
cmp
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
dec
inc
inc
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
pusha
push
call
mov
enter
pop
add
rolb
int
add
mov
add
xchg
scas
add
popa
lcall
xchg
test
jmp
in
cltd
add
add
add
add
divl
add
loopne
pop
cwtl
add
push
push
lea
push
push
lea
push
call
lret
loop
jbe
add
pop
mov
loopne
out
add
loope
loop
cmpb
add
add
mov
lea
add
in
mov
lea
pop
popl
push
lea
push
push
push
call
jl
xorl
insb
iret
shrb
cld
add
add
int3
add
add
fistl
xchg
stos
mov
lock
iret
rolb
popf
add
lea
add
rorb
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
mov
loope
push
stos
mov
add
mov
add
pop
fxch
jmp
push
add
add
mov
jbe
mov
shrl
enter
add
loop
iret
add
mov
mov
add
pusha
test
jns
mov
in
add
bound
add
jae
add
outsl
mov
les
push
push
push
call
mov
push
fcoms
mov
popl
jno
add
ret
add
lds
pushf
hlt
add
jge
mov
add
push
add
add
shlb
movsb
xchg
cmpsl
add
pop
fsubs
add
add
add
flds
data16
add
mov
shll
mov
addr16
add
push
loope
sar
add
add
ja
aam
bound
pop
call
push
lea
push
push
lea
push
push
push
push
call
push
add
mov
ljmp
push
add
test
aad
les
fildll
add
add
add
add
pop
add
jmp
add
fildl
add
add
jecxz
cmc
add
add
mov
add
bound
pusha
int3
add
pushf
pop
add
add
push
hlt
lds
add
add
add
mov
lea
pop
call
push
push
push
push
push
push
push
push
push
call
add
cmpb
add
add
push
mov
pop
mov
push
pop
lock
lds
negb
mov
add
loope
lock
mov
xchg
lock
add
std
add
add
jp
lea
fwait
add
add
mov
rolb
add
add
stos
mov
lea
pop
push
call
push
lea
push
push
push
push
push
call
mov
add
pop
jge
jbe
add
cltd
mov
push
icebp
mov
add
mov
xchg
add
add
into
add
add
add
jge
xchg
popl
faddl
out
leave
mov
lea
pop
jmp
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
add
mov
mov
add
jle
add
add
push
add
add
pop
push
jmp
imul
lods
add
in
push
add
adc
test
add
add
add
add
add
jmp
add
into
add
mov
ret
mov
lea
pop
ret
mov
push
push
push
lea
push
lea
push
push
call
outsl
out
add
add
pushf
add
cwtl
fists
add
jge
pop
movb
add
pop
add
fisubrs
jns
fs
xchg
add
test
add
xchg
push
stc
add
scas
add
add
cmpsl
popf
mov
add
add
add
addl
arpl
push
orl
lds
pop
mov
push
push
call
add
add
add
add
fidivrs
add
cld
add
add
add
test
pop
and
add
push
push
jecxz
xlat
pop
push
jnp
loope
addl
addl
add
add
pop
gs
lea
pop
add
push
push
push
push
push
push
call
fst
fdivrp
xchg
lcall
push
add
mov
rcrl
push
sahf
mov
add
add
add
jge
add
mov
add
sbb
ret
add
add
push
lea
push
push
call
xchg
add
mov
add
ja
mov
add
pushf
out
add
add
mov
sti
je
add
xchg
add
add
flds
mov
xchg
mov
movsb
add
jmp
add
rcl
les
lods
add
rorl
sbb
scas
pop
lret
add
cld
lea
pop
add
mov
xor
push
push
ror
push
sub
add
inc
rol
add
dec
sub
shr
pop
sub
pop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
lods
add
pop
imul
add
mov
add
mov
add
push
in
add
add
addl
mul
jns
xchg
in
fildl
mov
lea
pop
pushl
call
push
push
lea
push
push
lea
push
push
push
push
call
add
push
add
jae
shll
add
add
iret
incb
sbb
mov
bound
add
add
add
add
fld
mov
arpl
test
add
cmpb
add
add
add
mov
lea
pop
mov
push
lea
push
lea
push
push
push
push
push
call
stos
roll
add
ret
out
movb
add
add
jno
mov
add
jp
xorb
out
test
add
push
add
mov
add
mov
push
add
add
loope
add
mov
adcl
add
push
add
js
mov
lea
pop
movl
push
push
push
push
push
push
push
push
call
add
mov
add
add
add
mov
test
jp
cld
add
add
addr16
pop
add
mov
add
test
out
insb
faddl
add
pop
lea
push
push
call
popl
filds
pop
jns
add
add
xchg
add
mov
cmc
mov
out
fildl
xchg
jnp
je
cmpsb
lret
test
pop
add
fsub
add
jmp
jb
sahf
lret
shlb
sti
testl
call
add
add
add
mov
jmp
push
add
andl
add
push
pop
icebp
out
imul
add
add
shrl
in
lret
out
fnop
fmuls
pop
pushl
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
arpl
add
add
add
add
add
add
add
icebp
add
lds
bound
add
rcll
lret
add
iret
mov
imul
add
add
add
std
add
xchg
jge
add
stos
scas
filds
addb
add
fsts
add
add
mov
out
mov
les
imull
add
pushl
push
lea
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
mov
movsb
std
gs
add
repnz
jmp
add
lods
lcall
add
add
push
jge
jno
addl
add
add
add
add
add
mov
lea
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
push
push
call
int
add
jmp
mov
xchg
lahf
imul
loop
loopne
add
add
add
add
pop
push
roll
add
add
into
lds
add
jp
add
mov
lea
pop
call
push
push
shl
add
push
or
inc
add
shl
lea
sub
shr
pop
shl
sub
pop
push
lea
push
lea
push
call
pop
nop
movsl
add
out
jb
stos
xchg
add
lret
add
pusha
xchg
xchg
scas
jp
icebp
iret
add
add
loope
nop
add
cld
lahf
add
lock
push
aad
test
rclb
mov
mov
lea
pop
pushl
call
push
lea
push
push
push
call
add
cltd
add
sbbl
add
int3
mov
add
pop
add
lods
fsub
popf
add
in
scas
fdivrl
js
push
popf
add
add
test
roll
add
faddl
lods
add
in
add
js
leave
lret
pop
ljmp
lahf
pop
leave
cld
push
pop
scas
add
rolb
sti
test
cltd
cli
add
pop
push
push
push
sub
not
push
and
add
sub
not
dec
sub
shl
rol
dec
pop
shl
pop
push
push
push
push
push
call
icebp
add
add
jae
add
add
push
popf
add
jae
mov
roll
popa
insb
fwait
xchg
mov
pop
add
incb
fadds
jae
add
add
mov
lea
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
andb
cwtl
lds
ret
ljmp
test
imul
add
jae
add
lahf
pop
add
insb
xchg
subb
add
jns
out
popa
add
add
jmp
jle
fmull
add
dec
outsl
push
call
add
add
aad
mov
add
mov
mov
add
add
add
add
shl
add
std
add
imul
mov
lea
pop
call
push
push
push
push
push
call
add
mov
add
ret
fs
add
loop
popa
add
add
js
add
add
rol
mov
faddl
pop
pop
add
shl
add
mov
pop
add
filds
pop
xchg
mov
push
add
mov
les
push
add
add
enter
xchg
push
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
add
jnp
fwait
xchg
mov
test
out
add
add
add
add
out
loop
add
leave
add
mov
cmpsb
add
loopne
test
add
xchg
add
jnp
lock
popa
and
push
push
lea
push
push
push
call
fadds
add
ljmp
add
mov
add
jecxz
add
lahf
jae
mov
add
add
pop
add
data16
push
xchg
jl
pusha
add
add
push
jb
out
addl
lea
pop
mov
add
push
push
push
push
push
lea
push
push
call
cmpsl
add
mov
mov
add
add
mov
scas
iret
loop
jge
je
jge
pop
loop
pop
nop
add
ret
test
jmp
add
add
int3
stos
add
out
xlat
jecxz
push
add
imul
add
add
add
add
les
ret
add
add
add
push
push
lea
push
push
push
lea
push
call
out
hlt
out
test
movsl
add
fiaddl
je
xchg
call
add
fcomps
xchg
add
jno
out
push
gs
addl
jl
add
add
mov
add
std
in
in
lret
add
pop
mov
xor
push
push
push
call
roll
leave
mov
lock
add
mov
mov
fadds
xchg
mov
test
cmpsb
add
mov
add
add
xchg
add
add
add
mov
xchg
add
mov
add
add
pop
mov
xchg
add
pop
add
push
push
push
lea
push
push
push
call
add
add
jmp
in
add
stos
mov
fldl
add
cld
pop
fldl
add
scas
imul
add
mov
loope
clc
add
mov
jp
jmp
loope
add
sub
imul
clc
out
add
push
sarl
add
jmp
gs
imul
mov
lea
pop
mov
push
push
push
push
lea
push
push
call
add
add
js
jae
scas
jb
push
add
roll
and
test
cltd
call
mov
add
aad
rolb
add
add
call
jo
test
add
roll
test
add
add
popa
mov
shr
push
lods
add
pushf
add
scas
pop
add
add
add
pop
xor
push
push
push
call
repnz
add
push
movsl
xchg
jnp
add
add
add
jle
test
add
rcll
add
add
jae
mov
jl
stc
push
test
imul
mov
push
pusha
insb
xchg
add
mov
mov
lea
pop
add
push
push
push
push
push
push
push
push
call
popf
ljmp
xchg
loopne
add
pop
add
mov
flds
jno
mov
movsb
mov
xchg
int
mov
aam
movsw
in
add
lcall
lea
pop
add
pop
push
lea
push
lea
push
push
push
push
push
call
add
test
add
jmp
mov
fcmovb
add
ret
xchg
add
xorb
mov
je
in
add
push
addl
xchg
out
lret
int
jbe
addl
push
add
lret
add
add
xchg
add
push
add
mov
jb
test
add
in
sti
mov
mov
lea
pop
mov
xor
push
push
push
push
push
call
add
movsb
je
add
movsb
add
mov
call
add
fiadds
cmpsl
xchg
xlat
add
popl
fiaddl
icebp
add
mov
push
add
add
add
add
jge
add
push
jne
lock
mov
lea
pop
push
mov
xor
push
push
call
push
out
rolb
add
mov
mov
repnz
iret
rol
mov
add
loope
lcall
in
push
add
iret
add
add
mov
lock
std
ljmp
or
enter
and
add
rcl
fcomps
xchg
jnp
stc
test
add
add
mov
addl
mov
rcl
add
push
lret
sarb
add
jle
jge
add
mov
rolb
out
je
add
xchg
add
mov
aam
pop
xchg
add
add
fld
popa
add
mov
lea
pop
pop
push
lea
push
push
lea
push
push
push
push
push
call
add
xchg
mov
fsts
xchg
jmp
stos
jb
add
mov
add
stos
add
nop
lea
mov
fcmovnbe
sbbl
pusha
popl
add
mov
add
add
cmpsb
jmp
add
mov
mov
mov
lea
pop
rep
push
push
call
add
fwait
mov
shlb
add
fldl
add
jp
add
mov
add
mov
jbe
add
addl
xlat
add
add
add
mov
ja
cmpsl
cld
add
mov
add
stos
cli
add
enter
xchg
add
arpl
jecxz
mov
out
add
add
repnz
mov
lea
pop
pop
mov
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
leave
fidivs
add
add
mov
andb
mov
pop
add
movsl
add
pop
cmpsb
add
add
add
fdivrs
push
add
add
add
push
add
int3
push
add
xchg
add
gs
add
pop
add
push
push
lea
push
push
push
lea
push
call
lock
add
pop
push
add
popf
fnsetpm(287
add
xchg
movsl
lcall
aam
add
mov
test
jo
add
add
jb
cmpsl
pop
add
add
ror
loopne
jmp
jle
add
add
mov
add
scas
push
add
xchg
stos
cwtl
add
pop
add
add
push
push
call
add
jne
add
pop
add
pop
xchg
ret
add
add
bnd
in
add
jl
add
fwait
mov
add
push
fiaddl
add
jl
xchg
add
cmpsl
add
add
pop
add
add
fildll
add
xchg
add
mov
fwait
mov
add
lea
pop
mov
push
push
lea
push
push
call
add
xchg
jne
stc
iret
cltd
add
jns
gs
add
cwtl
aad
jne
movsb
arpl
jmp
int3
mov
mov
popf
fs
mov
lock
imul
cld
lea
pop
xor
push
push
lea
push
lea
push
push
push
push
push
call
lock
fildl
pop
add
mov
add
add
rorl
add
mov
push
add
xchg
lock
jl
pop
add
add
add
add
xchg
mov
add
rorb
add
add
fdivp
cli
add
mov
add
add
pusha
and
les
push
push
push
push
push
lea
push
lea
push
call
test
lahf
xlat
fwait
add
add
mov
push
mov
mov
ja
stc
test
add
push
xchg
add
add
add
jecxz
add
pushf
add
push
add
add
mov
and
push
and
test
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
call
icebp
mov
fiaddl
pop
mov
cmpsl
mov
add
popf
jecxz
shl
shl
arpl
mov
lcall
testb
outsl
add
jns
mov
into
add
imul
fldl
add
cmpsl
imul
lock
add
ljmp
imul
lea
pop
xor
push
lea
push
lea
push
push
call
aad
sahf
ret
out
add
aad
cltd
add
cld
addb
mov
mov
add
flds
add
cltd
jmp
call
outsl
cmpsb
add
data16
rorb
jae
xchg
mov
lea
pop
add
push
lea
push
call
mov
xchg
xchg
add
add
ja
xchg
add
roll
mov
add
add
mov
push
add
bound
je
jmp
add
jae
xchg
add
rclb
fmul
insb
add
test
add
roll
push
add
add
add
add
add
outsl
test
fucomi
cwtl
add
pop
mov
push
push
lea
push
push
push
push
call
sarb
roll
stos
add
test
push
add
add
add
add
jl
outsl
arpl
in
in
jbe
add
outsl
jle
add
icebp
add
push
add
cld
mov
stos
fildl
out
pop
in
mov
mov
adcb
out
ret
lea
pop
xor
push
lea
push
push
lea
push
lea
push
push
call
lock
mov
add
add
add
add
arpl
add
jecxz
mov
loope
add
gs
mov
cmp
fiaddl
test
add
mov
popf
test
fiadds
call
add
test
push
jp
jns
gs
shll
sbb
les
add
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
cwtl
loope
movl
add
mov
add
add
pop
aam
add
push
add
add
mov
push
stos
arpl
add
out
imul
testl
add
in
ret
add
add
add
jl
add
pushf
add
sbb
add
push
lea
push
push
lea
push
push
push
lea
push
call
add
xchg
add
add
add
jb
mov
add
mov
call
xchg
les
ljmp
xlat
imul
add
loop
add
test
mov
jmp
add
add
add
add
add
cli
mov
add
push
in
shr
nop
add
stos
lcall
popa
sbb
add
mov
push
push
not
push
push
pop
add
xor
ror
sub
ror
ror
pop
xor
shr
pop
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
xchg
add
add
mov
mov
add
add
movsb
mov
les
jne
add
rolb
add
mov
lea
pop
pushl
push
push
push
push
call
insb
pop
in
in
push
into
xchg
pop
xchg
add
jge
loop
jne
push
add
fildl
popf
add
add
cltd
add
je
add
jl
add
add
add
testb
mov
mov
lahf
mov
add
add
add
fiaddl
add
adc
in
add
push
push
push
push
push
push
call
add
mov
hlt
add
add
add
mov
mov
addr16
loopne
lret
repnz
add
pop
cmc
add
cmpl
clc
jmp
insb
stos
add
imul
andb
push
add
nop
mov
addr16
cld
add
in
mov
arpl
jge
rorl
pop
push
push
push
dec
shl
add
add
push
or
not
add
rol
add
ror
sub
shl
pop
sub
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
pop
add
add
add
std
roll
sbbb
out
push
mov
imul
add
jb
add
add
add
sti
jmp
mov
testb
in
bound
add
add
lret
stc
add
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
lret
add
add
add
add
jp
cld
xorl
mov
arpl
fs
add
out
leave
add
add
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
cmpsb
add
test
add
not
lcall
add
ret
imul
loop
add
mov
add
add
jb
add
mov
loope
hlt
xorb
add
pop
xchg
test
mov
add
push
add
add
add
cli
add
add
jb
cld
xchg
add
add
fisttps
pop
call
push
push
push
push
push
push
lea
push
push
call
add
add
add
stos
je
mov
add
add
addb
add
push
add
out
add
outsl
add
test
add
xchg
shrl
add
add
add
add
outsl
mov
add
xchg
cmpsb
add
add
loop
add
insb
pop
jns
repnz
add
lea
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
add
pop
mov
add
add
mov
add
ja
add
outsl
clc
add
mov
jno
jge
jge
add
mov
mov
add
mov
add
add
mov
adcl
fsubl
jnp
pop
bnd
add
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
clc
mov
je
jne
popf
pusha
movb
add
add
add
mov
jecxz
add
std
lods
mov
add
pusha
cld
add
cld
add
add
loopne
stos
add
int
bnd
add
add
add
xchg
add
jl
add
stos
in
pusha
frstor
fwait
jae
lcall
mov
cld
lea
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
imulb
add
add
push
jae
movsl
add
int3
mov
add
add
add
fiaddl
stos
add
add
insb
roll
add
insb
cmc
add
add
add
or
enter
pop
add
hlt
lea
pop
add
push
ror
add
sub
pop
add
push
sub
pop
add
push
sub
add
ror
inc
pop
mov
xor
push
lea
push
call
rolb
add
add
faddp
add
test
stos
mov
scas
add
add
fs
cli
jb
ljmp
stos
push
add
xchg
lods
add
or
jne
push
shl
pop
push
push
push
push
push
push
push
push
call
in
icebp
popf
mov
add
mov
add
lret
add
jb
add
add
add
push
push
add
mul
xchg
roll
ret
flds
add
add
imul
ljmp
mov
push
push
push
push
push
push
call
pop
add
add
add
xchg
cmpsl
jns
add
add
lods
add
lock
add
push
mov
lock
mov
mov
cmc
mov
popf
add
lcall
pop
movl
les
add
push
push
push
push
call
add
jnp
add
add
add
lcall
add
cmpsl
add
les
int
add
jne
add
push
ljmp
add
clc
jmp
add
jmp
lods
add
fcom
add
lock
add
add
fsubs
data16
les
add
push
push
push
push
call
add
add
stos
add
add
jne
pushf
add
add
add
add
mov
stos
add
add
cmpb
push
int3
lea
pop
add
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
fstpt
add
mov
arpl
pop
add
add
jns
mov
add
movsb
cwtl
mov
outsl
add
lahf
pop
add
cmc
add
lea
lret
pop
jne
fmull
push
add
pop
mov
xor
push
sub
add
shr
pop
rep
push
not
sub
add
dec
pop
mov
push
push
lea
push
push
push
push
push
call
xchg
jle
cli
test
addb
ja
add
fists
add
test
fiadds
mov
add
scas
mov
adc
add
out
roll
add
insb
test
mov
mov
sbb
or
push
push
call
rcrl
add
xchg
leave
add
add
push
mov
lock
jl
mov
add
bound
pop
sahf
pusha
fnstsw
cld
add
mov
out
fisubl
je
fidivl
in
in
stos
add
pop
add
jge
scas
jnp
add
pusha
or
les
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
jae
incb
in
movsl
add
add
ret
add
cmc
mov
jecxz
outsl
push
add
in
gs
mov
add
pop
ljmp
add
mov
pop
add
add
mov
lea
pop
or
je
mov
xor
push
push
lea
push
lea
push
push
lea
push
call
jl
add
ret
add
nop
add
in
add
jle
mov
cli
in
out
fidivs
mov
test
icebp
nop
add
fs
out
push
in
add
add
data16
movsb
insb
push
test
mov
add
test
js
cltd
add
pusha
add
add
pop
aad
hlt
popf
idiv
add
mov
test
addr16
lea
pop
mov
xor
push
lea
ror
sub
inc
pop
add
add
push
shl
pop
push
push
push
push
push
push
push
call
aam
xchg
fstp
add
xchg
add
idiv
add
add
add
add
lods
add
xchg
jge
sahf
into
add
lret
add
add
add
lret
mov
in
add
mov
add
add
xchg
jecxz
aam
bound
pop
mov
xor
push
push
push
lea
push
call
mov
lret
test
sahf
xchg
xlat
fmul
mov
add
fiadds
jns
mov
pop
popa
popa
mov
add
push
add
cwtl
xchg
xchg
add
in
andb
add
out
add
add
imul
lahf
leave
add
out
mov
fmull
lock
push
xor
shr
shr
pop
rep
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
push
add
push
add
lods
jne
mov
cli
add
addr16
pop
test
add
mov
cmpsl
mov
add
addl
scas
add
test
fmulp
xchg
add
popl
add
pusha
lcall
scas
add
add
sub
or
push
push
call
add
test
pop
add
mov
pop
lret
add
std
pop
add
push
leave
hlt
roll
cmpsb
push
push
add
add
add
mov
in
add
add
fsts
add
add
add
add
stos
add
add
add
xchg
mov
jmp
loopne
add
addl
lds
fiadds
xchg
add
fidivl
out
loop
out
orb
add
push
not
pop
or
je
push
push
lea
push
push
call
lea
add
jb
add
cmpsb
jl
add
stos
add
add
xchg
xchg
push
add
add
add
out
add
mov
loope
add
testl
xchg
test
rclb
fdiv
push
icebp
mov
aam
bound
pop
mov
push
lea
push
push
push
call
mov
int
fimull
jae
add
add
fildl
add
cli
add
addr16
xchg
add
add
add
pusha
push
out
mov
int3
call
fsts
add
xchg
add
add
add
imul
add
add
add
pop
add
push
dec
add
add
pop
add
push
rol
lea
shl
pop
rep
pop
push
push
xor
push
xor
add
xor
not
sub
xor
inc
pop
xor
lea
shr
pop
push
lea
push
push
call
mov
repnz
add
js
mov
add
add
shrb
shl
out
push
add
pop
subl
mov
lea
pop
pop
mov
push
lea
push
push
lea
push
call
repnz
loopne
icebp
mov
add
xchg
add
add
arpl
add
out
js
xchg
add
int3
add
out
fadds
add
add
jmp
add
pushf
add
add
fsub
js
push
addb
pop
rolb
out
add
add
adc
insl
in
push
sub
pop
mov
push
sub
xor
shl
pop
jmp
push
push
push
call
xchg
loope
xor
hlt
add
cli
shl
mov
add
add
add
outsl
jno
jl
in
in
pop
mov
stc
arpl
clc
add
add
lock
xchg
add
scas
xchg
pop
mov
jo
add
testb
add
sub
add
aad
pushf
push
add
hlt
sar
popa
add
fldl
rorl
jmp
jnp
out
add
pop
push
push
push
push
push
push
push
call
xorl
add
pushf
loopne
add
xlat
scas
add
add
add
add
add
jmp
mov
add
add
mov
nop
scas
add
nop
add
fidivrl
add
add
js
mov
push
jno
jno
jmp
ja
les
lea
pop
mov
add
push
sub
sub
add
ror
pop
push
push
sub
ror
pop
push
push
push
add
pop
push
push
lea
add
lea
pop
mov
push
push
lea
push
push
lea
push
push
call
add
add
add
movl
mov
out
add
les
test
jo
pop
cmpsb
mov
mov
mov
add
cltd
xchg
add
clc
scas
divl
jnp
add
fiadds
jbe
add
add
std
clc
int3
jnp
jmp
pop
rcrb
push
add
mov
lea
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
add
jb
add
not
add
filds
enter
add
add
popf
fidivs
in
mov
stos
leave
add
fadds
push
pushw
add
arpl
idivl
xchg
call
mov
rol
clc
mov
jno
scas
mov
add
mov
mov
lea
pop
pop
push
lea
push
push
push
push
push
call
mov
mov
add
pusha
add
xchg
imul
addl
add
test
add
mov
cwtl
pop
add
data16
add
test
mov
pop
xlat
rol
push
jns
add
push
add
mov
fmull
push
push
push
push
push
push
push
push
call
lods
add
push
mov
add
mov
bound
mov
ja
addb
xchg
fs
add
add
add
jl
add
icebp
add
mov
add
arpl
xchg
add
lea
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
test
cmpsl
ja
add
loope
js
rolb
mov
mov
add
add
gs
add
xchg
pop
add
mov
add
add
std
xchg
out
add
jnp
scas
xchg
pop
loopne
fmull
ret
push
push
call
mov
push
dec
xchg
scas
add
jmp
add
cli
les
add
xlat
xchg
push
add
mov
push
add
add
add
add
lea
test
jecxz
fisubrl
lea
pop
push
push
lea
pop
mov
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
add
jo
add
add
push
fiadds
mov
fwait
fs
jl
fisubs
cltd
call
out
pusha
jbe
fisubl
pop
xchg
hlt
push
into
xchg
mov
mov
imul
push
lods
test
xorl
add
in
add
aam
bound
pop
add
push
sub
rol
xor
rol
pop
push
push
push
push
push
push
push
push
push
push
push
call
out
add
out
lret
add
add
add
popa
mov
out
add
arpl
mov
stos
pop
movsl
add
scas
jns
add
iret
mov
lods
outsl
mov
mov
mov
jae
add
cmc
enter
pop
jbe
add
orb
push
push
push
pop
movl
push
lea
pop
addl
push
sub
inc
not
pop
test
je
push
push
push
lea
push
push
push
call
ljmp
add
mov
pop
add
jnp
add
add
scas
add
add
add
add
xchg
mov
addr16
in
clc
pushf
hlt
mov
add
sahf
aad
cwtl
pushf
ja
ljmp
push
mov
lods
mov
mov
stc
test
add
mov
lea
pop
mov
push
push
lea
push
push
push
lea
push
push
call
mov
int
mov
xchg
add
mulb
scas
lods
add
outsl
add
mov
lea
add
addl
xlat
mov
imul
add
fstpt
add
mov
imul
add
xchg
fidivrs
add
leave
jecxz
movl
sbb
pop
push
push
push
push
push
push
call
add
fs
push
add
add
test
frstor
mov
add
add
mov
cmpsl
test
mov
push
data16
add
testl
add
mov
lea
pop
pop
pop
push
push
push
call
fldenv
push
lds
movsb
add
nop
loope
jns
jp
jbe
add
lods
stos
sahf
add
ljmp
jp
scas
add
lea
mov
lea
pop
pop
push
sub
pop
leave
ret
push
lea
push
push
lea
push
push
push
call
shl
andl
add
int
add
add
xchg
add
in
repnz
test
add
add
test
add
fs
add
int3
lea
pop
push
push
sub
pop
mov
push
push
call
add
add
stos
add
add
mov
shll
add
rolb
xchg
push
jmp
add
add
xchg
scas
add
add
imul
jp
clc
add
add
pop
mov
lea
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
cld
cli
add
jnp
add
cwtl
fs
add
push
add
fwait
add
add
add
add
add
lock
add
mov
add
add
jo
add
jl
push
add
lcall
add
push
loopne
sarb
loope
clc
add
cmpsb
aad
hlt
lea
pop
push
push
xor
sub
ror
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
loop
add
leave
jle
loop
add
mov
add
pop
add
add
cmpsb
xorb
aad
add
add
nop
mov
scas
add
add
add
jmp
cld
lea
pop
push
push
push
push
push
push
push
push
push
push
lea
push
push
call
cld
stos
mov
lock
stos
imul
add
into
add
add
test
add
fildl
add
movsl
add
pop
cld
add
add
mov
add
add
mov
add
hlt
test
add
pop
testl
push
lea
push
push
push
call
jl
add
mov
popl
fiadds
mov
lds
mov
clc
jecxz
cld
xlat
repnz
add
cld
mov
pop
jle
in
filds
ja
rolb
stc
jbe
add
xchg
add
jo
cld
mov
lea
pop
addl
push
push
push
lea
push
push
lea
push
push
push
call
mov
iret
push
rolb
test
xlat
icebp
pushf
add
lods
movsb
mov
aam
add
mov
loopne
add
insb
add
mov
xchg
mov
push
add
test
sahf
add
ret
mov
popf
int3
mov
add
mov
lea
pop
call
push
xor
pop
mov
pushl
push
rol
inc
pop
push
push
push
sub
inc
add
pop
call
cmpl
jne
push
push
push
push
push
push
push
push
lea
push
push
call
out
add
leave
jno
pop
pop
add
add
push
add
add
add
in
test
js
add
add
add
loopne
add
xchg
add
mov
cmp
sub
pop
push
push
call
movsl
add
pop
jp
jl
add
orl
add
add
movsb
subb
add
add
add
add
add
icebp
add
movb
jmp
push
addr16
mov
or
pop
push
lea
push
push
push
push
push
call
shr
add
pop
add
leave
xchg
fldenv
fs
add
adcl
les
add
add
push
add
add
add
imul
mov
aam
bound
pop
leave
push
xor
pop
ret
push
push
push
push
push
push
push
push
call
jo
mov
cld
insb
loop
mov
add
add
add
add
fldl
test
fcmove
add
outsl
imul
add
add
popa
add
jnp
mov
add
add
mov
jns
sarb
leave
add
loopne
flds
fiaddl
popf
add
add
mov
mov
xchg
icebp
jbe
aam
bound
mov
add
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
push
out
cltd
add
add
add
xchg
add
addl
in
mov
lahf
fildl
aam
in
xchg
fiadds
add
push
push
mov
add
add
add
add
push
add
push
add
pop
push
push
push
ror
shr
shl
xor
pop
push
push
lea
push
push
push
push
lea
push
call
in
add
add
aam
xchg
jae
pop
push
imul
rolb
sti
ja
add
scas
xchg
jae
xchg
mull
andl
push
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
xchg
leave
add
mov
jbe
jge
mov
icebp
pop
add
outsl
mov
add
idivb
mov
movsb
mov
out
push
cltd
ret
add
add
jnp
fdivrs
bound
movl
push
push
add
ror
shr
pop
call
push
push
push
push
lea
push
push
call
add
scas
add
push
mov
mov
add
mov
flds
gs
pop
cli
test
mov
lret
jecxz
add
add
pusha
add
rolb
add
add
std
mov
idiv
test
loope
add
xlat
add
add
add
jb
mov
int3
mov
stc
add
add
js
add
jns
add
imul
jle
int3
lea
pop
push
push
dec
shr
inc
pop
call
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
gs
add
pop
add
xchg
test
add
scas
js
add
call
out
jo
add
add
mov
mov
lea
pop
subl
push
shr
ror
pop
cmpl
jne
push
rol
pop
pop
push
lea
shl
pop
pop
pop
push
push
push
push
lea
push
push
call
fdivrl
gs
lods
cli
pop
mov
lock
js
stos
add
add
add
stos
sti
add
int
stos
add
add
test
in
loope
push
faddp
mov
gs
xchg
add
pop
pop
push
push
push
push
push
call
add
jecxz
lea
nop
push
add
bound
xchg
ja
add
out
add
add
xchg
add
add
add
lahf
add
add
fidivs
xchg
scas
cld
add
cld
add
add
popa
cmc
lock
sahf
stos
add
jmp
pusha
add
hlt
lea
pop
leave
ret
push
push
push
push
push
push
push
push
push
push
call
icebp
push
add
pop
add
lea
push
mov
add
in
insb
orl
icebp
rcl
popf
push
stos
cmpsl
add
jl
add
aam
add
add
add
add
in
jae
shr
add
add
add
bound
pop
stc
add
add
add
add
clc
scas
add
roll
ret
outsl
mov
lea
pop
push
push
push
call
add
mov
lcall
popa
iret
sahf
cld
add
add
mov
roll
jbe
jns
lds
lock
add
out
mov
in
bound
mov
add
shrb
loop
test
stc
cmpsl
add
add
fnsave
add
scas
jns
mov
add
add
push
rcll
push
rorl
pop
mov
push
sub
sub
add
pop
add
push
push
push
call
add
xorl
mov
popf
add
outsl
xchg
push
add
add
add
xlat
lcall
jl
add
cmpsb
out
add
cltd
out
test
jo
aam
enter
add
outsl
test
incb
add
pop
pop
mov
iret
cmc
bound
fwait
push
sahf
jbe
jne
stos
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
fisubs
test
mov
add
jbe
pop
push
mov
push
int3
pop
add
add
add
pop
xchg
out
add
test
jle
fnstenv
mov
lea
pop
push
push
shr
pop
push
mov
push
add
pop
lea
push
rol
dec
pop
sub
mov
push
push
push
push
call
testb
add
add
fldcw
add
add
push
loop
lret
popa
pop
mov
xchg
mov
add
add
fildl
add
test
js
push
add
int
les
call
rorl
jle
push
push
call
loope
pop
push
add
add
scas
push
push
imul
xchg
mov
insb
mov
add
add
imul
xchg
jne
add
xchg
xchg
xchg
mov
add
mov
lea
pop
add
mov
push
add
pop
mov
push
push
push
call
mov
fisttpl
add
outsl
lret
mov
add
pop
lret
int3
add
add
in
xchg
scas
lds
cwtl
add
add
into
add
mov
jo
iret
pop
add
mov
mov
add
shll
jmp
aad
add
cltd
out
mov
std
add
add
jmp
orl
add
push
lea
pop
mov
push
rol
xor
pop
mov
push
push
push
lea
push
lea
push
push
push
call
cld
mov
call
mov
push
mov
add
imul
mov
testb
add
push
popa
fcmovnbe
iret
add
clc
in
xchg
add
ljmp
add
les
mov
mov
lea
pop
cmp
jne
push
push
push
push
push
push
push
push
push
push
call
add
add
loop
add
xchg
fldt
fs
les
in
jecxz
add
add
js
mov
fiadds
mov
add
xchg
out
jmp
add
add
add
out
add
jb
jecxz
jecxz
mov
lea
pop
cmp
jne
push
push
push
lea
push
push
push
push
push
call
add
push
imul
add
push
mov
cli
add
popf
pop
jae
fildl
ljmp
into
push
mov
xchg
add
add
add
mov
lea
pop
mov
push
lea
ror
pop
movl
jmp
push
lea
push
push
push
call
add
add
mov
enter
mov
jle
add
jae
add
pop
ljmp
add
mov
imul
pop
pop
add
filds
loope
mov
cmpsl
jne
movsb
add
add
mov
add
scas
addr16
lea
pop
mov
push
lea
push
lea
push
lea
push
push
push
call
add
enter
add
ror
add
xchg
mov
stos
add
jbe
add
xchg
pop
add
mov
add
test
add
push
pop
mov
lcall
lods
mov
xchg
test
mov
in
mov
ret
stos
add
cmc
xchg
insb
add
in
add
jae
cli
jb
add
pop
mov
push
push
push
lea
push
push
push
lea
push
push
call
sar
fbld
add
loopne
out
rolb
add
add
mov
add
add
mov
gs
enter
jns
xchg
sti
add
imul
cmpsl
add
cmpsl
add
nop
in
bound
add
jbe
jge
neg
test
movl
and
ljmp
and
inc
adc
push
call
add
add
pop
add
shlb
add
jnp
add
add
mov
add
pop
lret
add
les
add
mov
roll
movsl
rol
nop
cli
add
add
cmc
mov
int
mov
lea
pop
movl
push
push
push
push
push
lea
push
call
xchg
mov
jbe
jo
test
pop
testb
jecxz
add
mov
add
ljmp
mov
mov
mov
lahf
cmpsl
movsl
movsl
cwtl
leave
add
xchg
add
add
arpl
sahf
jl
add
addb
jno
bound
arpl
pop
jmp
push
push
push
call
test
lea
add
in
add
movsb
push
lahf
idivl
add
add
mov
add
add
mov
add
mov
add
add
cld
fld
pushf
jl
lods
les
int3
lea
pop
mov
push
lea
not
pop
mov
push
push
push
push
push
push
call
cmpsb
add
push
add
add
fldl
add
add
add
xlat
add
outsl
mov
xchg
cmc
pop
loop
push
lret
jne
pop
add
mov
fstl
add
loope
jge
mov
lret
scas
add
add
fstps
jnp
mov
imul
push
add
pop
add
shl
add
js
add
mov
sarb
les
cli
add
test
add
add
lea
push
lea
push
lea
push
push
lea
push
call
add
aam
call
mov
add
pop
jns
into
add
iret
mov
add
jbe
rolb
add
add
bound
add
mov
add
test
cmc
jle
add
add
mov
add
fldl
add
icebp
add
fwait
mov
add
mov
add
add
sbb
mov
push
push
call
ret
mov
add
add
lock
imul
je
jmp
add
xchg
add
add
add
xchg
jbe
push
push
pushf
mov
add
sahf
mov
int
int3
test
add
add
bound
cwtl
add
xchg
mov
aam
bound
pop
movl
jmp
push
ror
inc
pop
mov
push
xor
inc
pop
cmpw
jne
mov
push
sub
pop
movl
push
push
push
push
push
push
call
insb
jmp
jle
push
mov
jp
add
sti
add
add
lea
pop
out
jecxz
add
add
pop
clc
push
xchg
fs
test
add
leave
add
jl
add
add
add
jbe
pop
push
mov
add
push
fisubs
incb
add
int3
pop
lret
add
outsl
jbe
jmp
add
mov
lea
pop
jmp
push
xor
lea
pop
pushl
pop
push
xor
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
push
pop
aam
push
fcmovu
xchg
add
mov
loope
add
add
add
popa
add
into
add
int3
add
popf
pop
add
mov
add
add
mov
add
xchg
jmp
pusha
add
push
insb
add
add
add
cmpsb
imulb
stos
add
lea
popf
add
fldl
jge
mov
lea
pop
mov
push
lea
push
lea
push
lea
push
push
push
call
in
add
add
insb
fiadds
aad
fs
add
rcrb
push
add
pusha
mov
add
sbb
add
add
repnz
add
xchg
xchg
add
add
add
mov
add
add
pop
mov
push
push
not
not
lea
lea
push
sub
add
xor
dec
rol
sub
sub
add
ror
shr
shl
pop
pop
push
lea
rol
pop
push
call
push
shl
pop
cmpl
je
push
push
inc
rol
push
push
pop
add
rol
sub
inc
sub
lea
pop
ror
add
pop
push
push
call
cmpsb
push
mov
in
mov
add
push
lret
stos
add
mov
lahf
jb
lods
sarb
add
add
mov
add
pop
push
push
push
push
push
push
push
call
mov
add
pushf
add
loope
add
loop
rolb
add
lcall
add
jns
add
add
push
pop
add
add
add
jne
lods
mov
fstps
add
imul
insb
add
imul
jle
add
repnz
push
jne
imul
pop
icebp
xchg
add
push
mov
add
mov
hlt
push
mov
lea
pop
call
push
ror
pop
cmpl
je
push
push
shl
add
inc
push
or
inc
add
add
sub
not
dec
pop
rol
add
dec
not
pop
push
lea
push
push
push
push
push
push
call
add
add
xchg
out
int3
xchg
add
xchg
add
jo
add
add
add
fs
push
add
addb
add
xchg
outsl
add
mov
push
jecxz
xchg
mov
add
jmp
push
in
add
push
je
add
add
jbe
add
jb
stos
icebp
xchg
jae
jl
mov
lea
pop
push
push
add
shr
add
pop
call
push
push
push
push
call
add
sahf
add
mov
sti
mov
shll
add
lcall
add
push
xchg
test
mov
fs
add
js
add
int3
sti
jo
add
mov
stos
jle
in
add
vpcmpeqw
add
pop
lret
add
bound
pop
cmpl
je
push
push
add
push
or
inc
add
ror
sub
ror
add
pop
inc
xor
pop
push
add
lea
add
pop
push
call
push
not
inc
pop
cmpl
je
push
push
rol
push
sub
add
add
xor
sub
not
sub
add
add
sub
pop
not
inc
not
pop
push
xor
sub
xor
pop
push
push
shl
lea
not
shr
pop
call
push
not
sub
pop
cmpl
je
push
push
lea
lea
sub
push
and
add
add
sub
sub
pop
ror
inc
add
pop
push
not
rol
pop
push
push
not
dec
sub
pop
call
push
push
lea
push
lea
push
push
push
call
xchg
nop
enter
add
add
mov
insb
xchg
fwait
mov
cmpl
loopne
mov
clc
popf
cmpsb
add
add
add
add
mov
fwait
add
test
add
add
sbb
cmp
rol
je
push
push
lea
rol
dec
push
and
add
sub
shl
sub
shr
rol
pop
add
shl
pop
push
dec
sub
inc
pop
push
call
push
lea
sub
add
pop
cmpl
je
push
push
shl
lea
push
xor
add
rol
lea
ror
sub
sub
pop
sub
add
shr
rol
pop
push
inc
add
pop
push
call
push
push
lea
push
lea
push
call
add
jae
pop
mov
jae
rcll
add
add
out
add
stos
push
jbe
roll
add
mov
push
fnsave
add
xchg
add
lret
aam
add
add
scas
pop
mov
jnp
add
fst
add
add
mov
lea
pop
cmpl
je
push
push
push
sub
add
sub
rol
ror
pop
add
pop
push
xor
inc
inc
pop
push
push
shr
pop
call
push
push
push
call
test
lret
xchg
mov
popa
gs
add
fcoml
add
loopne
add
in
add
jmp
add
add
add
cwtl
add
add
push
pop
repnz
lea
pop
cmpl
je
push
push
sub
sub
inc
sub
push
or
not
add
shl
shl
sub
dec
xor
pop
not
add
add
shr
pop
push
push
lea
push
lea
push
call
loopne
rolb
sbb
add
add
aam
pop
mov
repnz
stc
bound
pushf
add
fadds
jb
add
push
fiadds
add
push
mov
add
add
sbb
addl
add
add
add
mov
lea
pop
push
push
lea
push
lea
push
push
call
add
lea
mov
add
xor
loop
cwtl
push
add
add
cwtl
addl
add
add
lock
mov
bound
loopne
jbe
mov
out
add
add
add
test
sti
shl
int3
lret
jl
mov
lea
pop
call
push
xor
shl
dec
pop
cmpl
je
push
push
shl
sub
push
or
inc
add
sub
sub
sub
sub
pop
add
sub
dec
pop
push
push
push
lea
push
lea
push
push
push
call
rolb
lcall
mulb
fldl
mov
ljmp
add
cltd
pop
out
mov
cltd
mov
add
fwait
pop
mov
addr16
add
mov
imul
mov
lea
pop
push
call
push
dec
pop
cmpl
je
push
push
rol
push
push
pop
add
lea
shr
sub
sub
sub
not
pop
add
pop
push
push
push
push
push
push
push
call
add
roll
fcmovnb
jbe
jns
fisttpll
add
add
lods
mov
jnp
mov
fwait
pop
push
cltd
fadds
add
test
mov
stos
add
add
mov
test
lods
add
pusha
xchg
loopne
mov
mov
push
iret
add
icebp
scas
jp
add
mov
idivb
lea
pop
push
push
rol
pop
call
cmpl
je
push
push
inc
lea
dec
ror
push
or
inc
add
rol
inc
sub
shr
sub
add
inc
pop
pop
push
push
push
lea
push
push
call
test
add
mov
rcl
out
xchg
add
add
jp
xchg
add
mov
stc
stos
incb
test
add
xchg
jecxz
add
pop
iret
add
add
out
cld
lea
pop
push
push
not
pop
call
push
lea
push
call
fiaddl
add
add
sti
out
repnz
nop
addl
enter
jno
add
add
repnz
add
add
add
add
bound
popf
call
add
out
mov
jecxz
mov
add
add
rolb
xorl
lea
pop
cmpl
jne
mov
push
push
push
push
push
push
push
push
call
add
int
add
fwait
add
pop
pop
xchg
in
add
lret
pop
xchg
add
ret
pop
stc
add
xlat
addr16
insb
add
push
pop
sar
rolb
add
pop
test
imul
mov
lea
pop
movl
push
shl
xor
pop
jmp
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
lcall
test
lret
addb
add
add
push
add
add
addl
add
test
mov
loope
ljmp
jmp
sub
rclb
ror
pop
pop
push
push
call
add
add
xchg
cmpb
mov
pop
mov
out
add
add
add
outsl
push
add
add
cmpsb
jae
add
into
add
in
mov
add
jle
add
add
rorb
pop
pop
push
add
sub
pop
pop
push
sub
pop
pop
push
lea
push
push
push
push
call
int
xorl
mov
ljmp
add
lods
fsubp
cmpsb
pop
test
add
lret
mov
mov
jnp
add
filds
fists
scas
scas
xchg
push
add
add
push
add
pop
leave
push
sub
not
pop
ret
push
push
push
lea
push
push
push
call
mov
lock
mov
mov
mov
add
add
add
imul
add
add
fldl
push
incb
test
movb
push
add
push
test
popf
mov
add
stos
addl
add
popf
add
into
add
xchg
pop
lds
icebp
popa
mov
rcll
lea
pop
mov
push
add
pop
add
push
not
shl
xor
pop
cmpl
jne
push
push
lea
shr
push
and
add
not
sub
inc
rol
pop
sub
pop
push
add
add
sub
pop
pushl
push
rol
shr
shl
pop
call
push
push
pop
call
jmp
push
push
push
lea
push
lea
push
push
push
call
add
cmp
add
fisubrl
add
add
add
mov
mov
hlt
cli
movsb
add
push
lock
pop
in
add
add
int
add
add
outsl
push
add
flds
mov
mov
jo
add
add
cltd
add
enter
int
add
xchg
scas
fiaddl
jbe
sti
push
add
int
add
lea
pop
cmpl
je
push
push
call
add
add
add
in
add
add
jno
push
hlt
mov
lods
jle
push
movsb
shll
cmpsb
scas
mov
add
lea
jbe
cmpsl
mov
ja
push
into
enter
push
xchg
std
jmp
xor
add
addl
scas
mov
add
lahf
add
add
enter
mov
add
pop
cmpl
jne
leave
push
add
pop
add
push
add
add
pop
pop
push
push
lea
push
lea
push
push
push
call
pushf
add
add
fucomip
add
pop
push
leave
add
fadds
imul
pop
lods
add
add
mov
add
aad
lock
add
in
add
add
push
int3
pop
add
add
loope
shll
int
hlt
lea
pop
pop
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
push
jnp
fcompl
add
movsl
sahf
add
outsl
clc
fsubr
jb
popa
add
sbb
je
into
add
add
add
add
add
and
push
lea
sub
inc
pop
leave
push
not
pop
add
ret
push
sub
add
dec
pop
jmp
push
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
add
in
xchg
pop
mov
int
add
lock
pop
lcall
ljmp
fidivrl
xlat
js
add
mov
xlat
add
pop
addl
mov
add
mov
sahf
add
add
add
xchg
add
fmull
jge
add
test
add
add
int
xlat
push
inc
shr
push
or
not
add
not
shl
sub
sub
rol
pop
shl
ror
not
pop
push
sub
xor
add
sub
pop
pushl
push
shl
sub
inc
sub
pop
call
push
push
push
push
lea
push
push
lea
push
push
call
xchg
cmpsl
cld
je
sar
xchg
sti
add
push
aam
aam
int
fsubl
mov
add
push
testb
out
add
add
in
xchg
add
add
ret
add
incb
add
pop
out
stos
in
aam
nop
add
popf
xchg
mov
cmc
push
jecxz
cmp
int3
lea
pop
call
push
add
pop
jmp
push
rol
lea
pop
cmpl
jne
mov
push
rol
add
shl
pop
mov
push
sub
pop
push
push
push
rol
dec
push
push
pop
add
xor
sub
shl
pop
sub
pop
push
xor
sub
pop
pushl
call
push
push
add
lea
rol
push
push
pop
add
sub
dec
dec
sub
sub
dec
rol
rol
pop
lea
pop
push
pop
pushl
call
push
lea
push
lea
push
push
push
call
pop
add
jae
add
xchg
data16
mov
aam
add
add
mov
insb
add
in
pop
les
pop
mov
je
lret
mov
mov
add
adc
call
push
push
rol
lea
dec
dec
push
xor
add
lea
sub
shl
add
sub
pop
xor
pop
push
not
shr
dec
pop
pushl
push
push
push
call
add
add
push
add
ret
pop
add
add
add
add
xchg
mov
add
jl
xchg
movsl
add
add
add
pop
cmpsl
add
iret
add
xchg
popl
sbb
mov
add
cld
lea
pop
call
push
rol
pop
call
push
push
lea
sub
push
sub
add
shl
dec
sub
sub
shl
lea
pop
xor
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
out
xchg
add
gs
les
add
pusha
pop
call
enter
add
add
add
scas
add
rol
repnz
add
add
add
jl
add
cmpsl
lods
add
scas
jnp
jne
jo
add
add
add
pop
pushl
call
push
lea
push
push
call
add
push
out
out
popl
mov
mov
add
stos
mov
loopne
std
popf
roll
fmul
iret
fwait
add
add
fiadds
scas
lea
add
add
call
arpl
call
push
push
push
and
add
shl
sub
shl
inc
inc
pop
add
pop
push
push
push
push
push
call
push
add
add
test
push
jp
out
add
add
mov
jno
addl
sahf
add
lret
cmpsl
mov
clc
add
mov
add
add
mov
js
add
add
addl
add
push
test
add
jge
add
loopne
add
mov
xchg
mov
popa
adc
pushl
call
push
add
add
sub
pop
call
push
push
sub
sub
not
push
xor
add
xor
sub
sub
shl
sub
lea
pop
add
pop
push
inc
sub
sub
add
pop
pushl
call
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
jns
int
add
add
push
je
pop
fmul
pop
pop
bound
add
int3
shrb
cmp
add
add
add
add
add
mov
add
mov
xchg
rorb
jecxz
pop
popa
sbbl
add
push
rorb
pop
call
call
push
push
dec
push
sub
add
lea
rol
sub
dec
pop
ror
shl
lea
pop
push
lea
push
push
push
push
push
push
call
stos
pop
out
fdivl
loope
mov
add
jle
sahf
add
jb
add
push
testb
add
pop
popf
add
testb
add
fiaddl
out
test
rorl
pushl
call
push
push
push
push
push
lea
push
push
push
call
in
mov
mov
lret
jge
add
popa
jns
xchg
add
call
add
push
pushf
mov
xlat
leave
mov
test
add
add
add
add
imul
andl
push
lcall
add
mov
cld
mov
mov
push
add
mov
xchg
add
lcall
add
push
jno
roll
xchg
mov
lea
pop
lea
push
push
add
shl
ror
add
pop
call
push
push
xor
sub
push
sub
add
sub
dec
sub
lea
rol
pop
lea
inc
sub
shl
pop
push
push
push
push
push
push
call
cltd
add
add
cwtl
add
int3
sti
mov
add
incb
cltd
xorb
add
mov
aad
add
rorl
add
add
add
scas
add
mov
cmc
icebp
pushf
add
mov
fldenv
add
add
data16
jne
push
lea
push
push
push
call
add
mov
ja
pop
std
in
xchg
mov
xchg
add
jns
mov
add
push
xchg
lahf
int
add
xchg
add
mov
movl
fcoml
add
fiadds
mov
mov
add
add
clc
add
mov
lea
pop
call
push
sub
lea
not
pop
call
push
push
rol
sub
push
or
not
add
add
inc
lea
add
sub
sub
pop
sub
shr
ror
shr
pop
push
shr
lea
ror
lea
pop
pushl
push
sub
pop
call
push
push
push
push
push
push
push
push
push
call
scas
mov
shrb
add
into
jb
cwtl
add
ret
add
xchg
out
add
add
stos
enter
in
outsl
scas
lret
in
test
add
js
pushf
add
aad
mov
loop
cld
lea
pop
call
push
push
sub
push
sub
add
xor
xor
add
add
sub
add
sub
pop
ror
pop
push
add
lea
rol
pop
pushl
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
xlat
test
stos
mov
shrl
int
jae
rcr
icebp
arpl
add
add
pop
add
mov
add
int
add
add
mov
testl
icebp
pop
cli
pop
add
add
aad
mov
xchg
imulb
add
xchg
jge
add
add
mov
mov
pop
call
call
push
push
push
push
push
lea
push
push
call
mov
jmp
add
mov
add
xchg
fistpl
roll
movl
pop
cwtl
add
add
pusha
add
add
xchg
add
popa
fiadds
mov
jp
ficomps
lret
add
add
push
mull
add
cmpsl
add
add
fcmovu
addl
idivl
lea
pop
lea
push
push
shr
sub
inc
push
push
pop
add
rol
sub
shl
shr
shl
pop
not
pop
push
lea
push
push
push
push
lea
push
call
lahf
shll
clc
loop
scas
sahf
add
mov
add
out
ficomps
rol
add
jecxz
fwait
add
add
popf
cli
fistps
jp
add
in
mov
mov
pop
add
in
mov
add
pop
pushl
push
rol
pop
call
push
rol
pop
push
push
push
push
push
push
push
lea
push
push
push
call
sub
jne
aad
add
int
out
bound
add
nop
add
add
into
clc
iret
lds
pusha
in
add
mov
add
mov
addb
jb
mov
add
jnp
add
outsl
mov
pop
call
push
push
sub
push
or
inc
add
sub
rol
inc
sub
shl
pop
dec
rol
add
pop
push
lea
push
lea
push
push
push
push
call
jnp
add
scas
mov
hlt
add
add
add
cld
popf
jle
add
fiaddl
mov
add
loop
add
add
pop
add
add
pop
loop
pusha
loop
add
add
int3
mov
add
rolb
test
notb
add
fildl
ficompl
add
fcmovne
mov
lea
pop
pushl
push
add
inc
pop
call
push
ror
shr
inc
add
pop
call
push
push
push
lea
push
push
push
push
lea
push
call
add
add
sahf
les
add
jno
xchg
add
testb
incb
lret
out
mov
add
addl
pushf
add
in
testb
add
add
jmp
add
cmpsb
add
add
pop
cltd
add
mov
lea
pop
mov
push
push
sub
dec
xor
ror
push
push
pop
add
add
shr
xor
sub
inc
sub
add
pop
sub
shr
lea
inc
pop
push
add
add
lea
sub
pop
pushl
push
lea
push
push
push
call
call
add
add
fwait
movsl
add
add
add
push
shll
mov
sahf
add
icebp
mov
cld
mov
clc
add
sbbb
add
out
add
add
lret
add
add
add
add
roll
push
scas
imul
lret
push
mov
lea
pop
call
push
push
rol
inc
not
add
pop
pushl
call
push
push
shr
push
sub
add
rol
sub
rol
add
shl
ror
pop
sub
lea
add
add
pop
push
push
push
push
push
push
push
push
call
add
int
add
rcrb
mov
fstp
leave
jp
mov
sahf
push
imul
add
rolb
fldl
stos
mov
jecxz
out
add
mov
add
std
aam
int3
lea
pop
pushl
call
push
push
sub
push
and
add
sub
add
sub
shl
rol
pop
pop
push
push
not
lea
not
push
or
inc
add
sub
xor
sub
not
pop
pop
push
shl
pop
call
push
push
xor
sub
push
or
inc
add
not
add
ror
sub
shr
add
add
pop
add
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
jle
xchg
ljmp
xchg
jle
add
push
outsl
push
mov
mov
fdivrl
xchg
mov
lahf
add
add
add
in
push
add
add
add
scas
add
ror
add
std
add
pop
pushl
push
not
xor
pop
call
push
push
push
push
push
call
push
pop
xchg
add
scas
jp
mov
add
pop
xchg
int3
add
cld
add
add
xchg
add
add
cltd
lret
outsl
add
add
push
ljmp
jp
lcall
add
add
add
test
mov
adc
mov
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
lods
imul
add
add
mov
add
mov
xlat
mov
outsl
lret
imul
xchg
pop
cld
add
add
std
mov
mov
add
lds
pop
mov
lea
pop
lea
lea
push
ror
sub
add
pop
push
push
push
push
push
push
lea
push
push
call
lahf
mov
scas
mov
add
add
rcl
pusha
fwait
add
add
add
outsl
add
add
repnz
sarl
loopne
aam
add
mov
pop
pop
add
add
test
add
add
add
out
pusha
add
movsl
lahf
add
add
mov
xchg
mov
lea
pop
push
push
push
call
jo
add
lods
test
add
rclb
stos
mov
int
enter
add
nop
popa
fildl
push
add
add
add
outsl
add
add
popa
int3
push
add
add
add
xchg
add
xchg
ja
xchg
pop
fstps
add
jmp
lock
add
mov
add
mov
add
cmpl
hlt
lea
pop
push
push
push
pop
push
push
pop
push
push
push
shl
xor
pop
push
push
rol
inc
pop
pushl
push
push
sub
sub
pop
call
push
push
lea
push
sub
add
xor
inc
add
sub
dec
ror
shl
pop
not
rol
pop
push
push
push
push
push
push
call
fcmovbe
gs
xchg
add
js
add
add
stos
add
add
pop
xchg
fstl
mov
mov
out
add
bound
loope
push
add
pop
add
jmp
xchg
pop
mov
add
imul
mulb
popa
pop
add
out
cld
lock
add
lods
insb
mov
jecxz
lds
nop
icebp
mov
lea
pop
pushl
call
push
push
push
push
call
idivl
add
clc
add
jno
add
push
add
pusha
icebp
lds
jecxz
icebp
test
xchg
in
stc
xlat
mov
pusha
add
add
mov
add
add
jle
add
lea
pop
call
push
ror
pop
mov
push
push
push
push
push
push
push
call
pop
add
jae
add
jnp
js
mov
js
lcall
add
push
push
mov
popa
test
cmpsl
flds
mov
int3
out
pop
roll
mov
out
pop
jbe
out
mov
lea
pop
pop
push
sub
rol
pop
dec
jne
push
push
push
push
push
lea
push
push
lea
push
push
call
fadds
add
xchg
xchg
push
add
mov
imul
sbbb
add
loop
mov
ja
push
add
popa
std
add
push
mov
insb
out
test
add
push
jl
lret
hlt
add
push
aad
add
cmpsb
push
pusha
pop
push
mov
add
add
push
add
addr16
lea
pop
jmp
push
shr
pop
call
push
push
rol
push
and
add
shl
lea
sub
add
pop
lea
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
stos
mov
add
lret
add
add
leave
loopne
add
xchg
add
jecxz
fadds
test
cli
jb
add
add
add
imul
mov
add
add
mov
lea
pop
pushl
push
dec
pop
call
push
add
pop
push
push
lea
not
add
pop
call
push
shl
ror
pop
mov
push
lea
push
push
push
push
lea
push
push
call
mov
enter
add
mov
mov
mov
add
add
push
add
add
cwtl
shr
pop
arpl
jne
hlt
cli
jecxz
mov
xchg
stos
xchg
loopne
mov
ror
mov
jb
cld
add
mov
repnz
jo
add
lea
pop
lea
push
push
rol
push
push
pop
add
add
inc
sub
xor
dec
pop
shl
rol
shl
pop
push
push
lea
push
call
add
add
imul
popa
add
fsubl
aam
mov
pushf
insb
leave
mov
add
add
les
jmp
xchg
jne
out
out
jne
mov
push
add
mov
lea
pop
pushl
push
rol
shr
pop
call
push
push
lea
push
lea
push
push
push
push
call
std
add
add
mov
lret
add
add
add
jo
in
add
mov
pop
add
mov
ljmp
ja
cltd
jmp
popf
mov
insb
add
insb
push
add
mov
push
fcomip
add
add
add
clc
pop
lahf
jnp
xchg
mov
lea
pop
call
push
push
add
shr
add
push
sub
add
lea
sub
rol
add
not
pop
shl
pop
push
push
push
push
push
push
push
call
jl
add
testl
ror
pop
push
add
add
jl
cmpsb
fmul
add
add
imul
popa
add
scas
add
add
pop
xchg
fadd
lret
movl
add
incb
add
cmc
movsb
lods
add
jmp
cmpsb
ficomps
add
xchg
add
xchg
add
add
add
push
add
mov
lea
pop
pushl
push
push
lea
push
push
push
push
push
push
push
push
call
mov
add
add
addr16
loope
xchg
jge
add
call
push
xchg
add
add
add
mov
leave
jbe
add
cmpsb
mov
jp
mov
fmul
sti
sarl
sub
mov
add
push
dec
pop
call
push
lea
pop
mov
push
pop
lea
push
push
push
or
inc
add
shl
dec
xor
sub
rol
shr
xor
shl
pop
sub
pop
push
push
lea
push
push
push
push
push
call
mov
xchg
add
add
xchg
push
addr16
add
jne
add
add
add
add
add
jb
add
add
addb
add
add
add
nop
mov
mov
add
mov
nop
add
add
out
xchg
jecxz
ret
mov
mov
je
add
push
add
add
les
jne
push
push
push
lea
push
call
add
jecxz
add
repnz
add
mov
popf
add
add
push
mov
pop
mov
add
icebp
add
outsl
popl
add
add
add
jae
jecxz
pop
add
add
add
mov
bound
pop
call
push
lea
pop
lea
push
sub
inc
pop
push
push
push
lea
push
push
push
call
addr16
add
sarl
add
mov
add
jno
add
add
jle
cmpsl
adc
in
mov
flds
mov
add
add
into
mov
mov
out
ret
mov
lea
pop
push
push
lea
push
push
call
xchg
add
push
ljmp
pop
add
cmc
lret
add
mov
icebp
add
add
push
addr16
mov
add
add
xchg
mov
xchg
xorl
pop
insb
out
int3
lea
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
addl
add
push
add
add
test
into
ja
fiaddl
push
add
add
je
cmpsl
mov
in
add
int3
jnp
lods
pop
lcall
push
hlt
scas
cmpl
xchg
aad
push
add
push
add
add
add
mov
add
data16
jb
add
les
jne
push
push
dec
push
sub
add
shr
not
sub
dec
add
add
pop
lea
lea
not
shl
pop
push
lea
rol
lea
pop
push
call
push
push
not
rol
push
or
inc
add
lea
sub
not
sub
pop
add
rol
pop
push
push
lea
push
push
push
lea
push
lea
push
push
call
ja
add
fadds
loop
in
rorl
add
add
add
les
scas
popa
add
add
add
mov
out
add
arpl
add
add
pusha
jecxz
stos
add
push
mov
stc
ljmp
ja
fldl
push
add
test
stc
ja
hlt
xchg
add
add
mov
lea
pop
pushl
push
ror
not
sub
shr
pop
call
push
push
push
push
push
push
lea
push
call
push
test
add
add
add
xchg
pop
out
cmc
mov
cmpsb
mov
data16
mov
add
add
add
repnz
in
add
add
int
stos
movl
ja
add
mov
add
add
add
pop
add
add
add
mov
lea
pop
call
push
push
sub
dec
push
xor
add
sub
add
xor
sub
ror
lea
not
ror
pop
add
pop
push
lea
push
lea
push
call
xchg
add
test
test
add
cld
test
add
shlb
lahf
xlat
add
add
out
jo
xlat
test
add
movsl
mov
bound
add
mov
mov
add
add
jecxz
mov
lea
pop
pushl
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
mov
enter
add
loope
add
add
add
add
add
test
jmp
sbb
mov
add
add
add
xchg
sti
fwait
add
add
in
add
addr16
call
push
lea
pop
call
push
dec
ror
pop
jmp
push
ror
pop
pushl
mov
push
xor
pop
jmp
push
push
add
dec
push
and
add
sub
lea
sub
shl
inc
pop
shr
shr
pop
push
push
lea
push
lea
push
push
call
popf
mov
add
leave
add
xchg
testb
add
mov
add
in
loop
add
cwtl
jae
xchg
add
in
xchg
add
testl
add
lods
mov
shlb
push
stc
fwait
add
jb
add
add
add
rcrl
rcrl
fildll
add
add
pop
pushl
push
sub
pop
call
push
not
pop
push
push
add
lea
add
lea
pop
call
push
push
shr
inc
push
xor
add
shl
add
ror
sub
ror
pop
not
lea
add
not
pop
push
push
push
push
call
cwtl
testl
push
add
add
mov
cmc
loop
add
mov
xchg
pop
leave
add
add
out
lods
ffreep
add
add
cli
scas
cld
pop
add
mov
add
lea
pop
pushl
push
push
lea
push
push
push
push
lea
push
call
mov
fsincos
popf
add
add
add
push
add
xlat
iret
add
push
sbbb
je
iret
jmp
mov
js
out
imul
lcall
lcall
cltd
out
jecxz
add
add
add
les
add
cld
std
mov
pop
jae
xchg
movl
loopne
rcrl
je
add
pop
call
push
push
push
push
push
lea
push
push
push
call
push
mov
roll
fisttps
add
add
add
add
add
add
fdivl
add
xchg
mov
push
push
lds
bound
mov
stos
shrb
gs
jmp
add
out
add
add
add
addr16
add
add
add
sbb
call
push
add
pop
leave
add
push
push
call
push
stos
xchg
add
add
sbbl
out
mov
add
loope
push
lret
lock
div
nop
rclb
shl
pop
mov
cmc
clc
add
notl
mov
add
stos
pop
push
mov
fwait
in
pop
lds
les
pop
push
dec
pop
pop
push
not
pop
pop
push
rol
add
pop
leave
add
push
shr
lea
pop
ret
leave
push
push
push
push
push
push
push
push
push
push
call
outsl
add
add
add
mov
int
lahf
lea
mov
add
pop
add
imul
out
jmp
push
sti
mov
or
sar
jp
roll
add
add
add
push
iret
loop
mov
lret
mov
xchg
add
add
fucomip
mov
stos
movl
fmull
or
push
push
lea
push
push
push
call
movsb
lods
mov
rcrb
add
add
testb
mov
add
rorb
shlb
add
add
add
data16
add
lahf
add
test
xchg
mov
add
lcall
add
mov
mov
movsb
add
add
add
add
aam
jb
mov
lea
pop
push
mov
push
shl
xor
pop
cmpl
jne
push
lea
push
call
scas
testb
add
in
push
mov
add
add
out
xchg
ljmp
add
mov
rcr
lods
js
out
les
xchg
add
add
std
jmp
mov
arpl
fldl
add
add
pusha
mov
lea
pop
mov
push
sub
sub
sub
ror
pop
jmp
push
push
lea
push
lea
push
push
call
push
add
add
mov
add
add
jae
cmpsb
xchg
imul
stos
popa
mov
add
adcb
iret
mov
mov
add
icebp
test
add
jmp
add
pusha
pop
cmpsl
push
xchg
arpl
add
add
mov
jo
jmp
mov
add
mov
adc
mov
push
push
call
add
xchg
pop
push
add
jne
faddl
icebp
jp
mov
test
xchg
sar
add
add
xchg
add
out
iret
add
fs
add
add
ror
push
fiaddl
add
add
add
lock
mov
mov
lea
pop
and
xor
push
push
push
lea
push
call
clc
gs
add
push
mov
mov
stc
push
add
stos
add
add
shll
lock
mov
add
push
add
xchg
aam
sahf
in
add
add
fldl
jmp
cltd
stos
ja
scas
add
mov
add
out
fildll
in
enter
sahf
pop
mov
lea
pop
xor
push
push
push
lea
push
call
add
lret
in
mov
add
add
mov
int
add
add
fsubrl
pop
popf
pop
jle
cmp
fmull
pop
add
push
push
push
push
lea
push
lea
push
push
call
stos
add
xchg
ret
add
test
fiaddl
loop
gs
out
out
out
imul
add
and
add
data16
out
fucom
leave
cwtl
add
int3
lea
pop
xor
push
push
lea
push
push
push
call
mov
ficompl
push
add
add
add
add
mov
add
jo
fiadds
add
jge
add
pop
shl
mov
add
add
lret
int3
add
cmpsl
test
xchg
insb
test
add
jbe
lret
mov
in
fadds
out
mov
mov
lea
pop
dec
sub
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
rcrb
add
add
add
xchg
popl
mov
add
add
add
add
jbe
jecxz
int3
jae
add
test
mov
iret
add
fiadds
add
add
lock
mov
lea
pop
jmp
sub
push
add
add
pop
pushl
push
shl
lea
add
pop
pop
push
not
add
inc
pop
sub
push
shl
shr
add
pop
cmp
jne
push
sub
shl
xor
pop
mov
push
ror
sub
pop
lea
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
stc
add
mov
push
push
xchg
jnp
push
std
push
mov
in
ret
add
add
mov
add
add
add
test
lods
add
xchg
lcall
lea
pop
sub
mov
push
ror
dec
pop
shr
push
push
push
push
push
call
fwait
movsb
out
add
push
add
add
pushf
fidivl
add
jp
add
ljmp
cmpsb
add
ret
add
pop
enter
jge
add
add
add
add
pop
int
mov
lds
in
add
cmc
add
push
pop
subl
popa
adc
add
push
push
lea
push
call
test
fildl
lods
add
add
add
jns
add
jp
pusha
add
out
mov
out
jno
add
arpl
mov
mov
mov
add
ja
add
jge
cmpsb
enter
pusha
or
sub
push
dec
pop
pushl
push
sub
pop
pop
shr
push
push
call
pop
add
xchg
popa
cltd
jmp
add
popf
jno
mov
fucomp
mov
add
bound
fisubs
add
add
add
jae
fiaddl
add
pop
xchg
outsl
stc
mov
xchg
add
pop
and
sub
push
push
push
push
call
test
add
add
lds
roll
add
add
mov
add
add
xchg
je
jnp
xchg
add
cmpsb
add
add
lods
xchg
shrb
mov
mov
addr16
add
pop
cmp
jne
push
sub
pop
leave
ret
push
push
push
lea
push
push
push
push
lea
push
push
push
call
je
cltd
add
into
pop
add
add
mov
add
fiaddl
in
add
nop
outsl
jae
jbe
xchg
add
add
jp
jnp
add
add
push
add
pop
push
push
sub
inc
rol
pop
mov
push
add
rol
pop
add
push
push
shr
xor
pop
push
push
push
not
pop
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
sahf
lahf
add
cltd
lret
add
gs
pop
xchg
add
add
add
add
mov
lcall
lods
pusha
movsl
sahf
fidivl
loope
mov
aam
add
mov
jecxz
xlat
in
mov
enter
add
data16
add
add
idivl
add
add
mov
lret
test
pop
push
push
add
not
pop
mov
push
not
sub
pop
lea
sub
push
push
push
push
push
call
add
add
jnp
fcomi
push
push
ror
add
push
jl
xchg
add
add
fcmovb
mov
add
add
std
fmul
mov
xchg
data16
rorl
pop
mov
push
push
push
push
push
push
call
sti
imul
cld
xchg
test
hlt
int
add
add
ret
mov
scas
add
cmpsl
add
jbe
add
add
mov
jge
add
out
xchg
mov
outsl
lret
add
pop
shr
add
push
dec
xor
lea
xor
pop
mov
push
xor
pop
add
mov
push
ror
pop
add
push
push
push
push
push
push
push
call
in
movsl
xchg
testl
mov
ljmp
jno
imul
les
add
ret
fdiv
scas
int
in
aam
lea
add
xchg
hlt
add
lods
add
jp
add
movsb
pop
cmpsl
mov
jl
add
add
add
mov
iret
xchg
add
lea
pop
xor
mov
push
push
push
call
add
add
xchg
mov
out
add
imul
jle
mov
add
add
mov
ljmp
roll
gs
add
stc
pop
jnp
mov
add
add
incb
jnp
mov
xchg
lret
in
push
mov
add
fs
jp
add
scas
add
mov
lea
pop
and
push
push
push
push
push
push
push
push
call
add
out
fldcw
in
out
jne
mov
mov
pop
pop
add
pop
mov
lods
int
aam
add
add
std
add
shr
clc
out
rol
add
addr16
push
hlt
sti
mov
lret
add
add
cld
add
and
rolb
ret
xchg
cmp
es
pop
xor
push
not
shl
rol
xor
pop
inc
cmpb
jne
push
add
shl
add
pop
add
push
lea
push
push
push
lea
push
call
mov
stos
mov
add
add
lret
pop
add
mov
xchg
jo
stos
je
xchg
imul
cli
add
mov
lahf
mov
add
add
addl
out
add
jp
jb
mov
outsl
jge
pusha
js
push
add
scas
add
add
fists
outsl
out
mov
lea
pop
cmp
je
push
push
push
push
push
lea
push
push
push
call
add
add
mov
mov
lock
push
add
mov
out
add
add
test
int
mov
sti
mov
add
into
add
add
xchg
ja
mov
add
cmpsl
pop
add
lods
cwtl
stc
fcomp
xchg
jbe
hlt
lea
pop
add
cmpl
jne
push
not
pop
xor
pop
push
pop
pop
push
push
push
call
cwtl
add
aam
mov
jle
pop
std
fnstsw
add
push
jbe
into
les
add
mov
stc
std
out
add
add
out
mov
add
add
data16
mov
add
mov
cwtl
rclb
jle
les
push
push
lea
push
lea
push
push
push
lea
push
push
call
les
add
add
mov
faddl
add
xchg
sti
rorb
add
mov
mov
push
add
js
mov
movsl
mov
clc
pop
arpl
mov
out
push
push
test
insb
add
cmpsl
add
push
data16
jmp
push
push
scas
insb
add
mov
push
outsl
jecxz
add
and
push
sub
not
dec
pop
pop
push
push
push
push
push
push
call
push
fiaddl
lods
cmpsb
add
iret
cmc
add
add
add
les
andl
lods
lds
in
mov
add
mov
iret
in
pushf
movsl
in
mov
loopne
jp
mov
push
cmc
pusha
jne
mov
add
mov
movb
push
jno
add
add
push
dec
jmp
add
add
add
xchg
jne
add
mov
lea
pop
leave
ret
push
push
call
add
add
add
add
popf
xchg
add
outsl
lcall
fistps
mov
add
jno
add
mov
mov
add
add
mov
pushf
add
iret
test
add
rolb
mov
mov
pop
in
add
data16
push
adc
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
add
add
push
jmp
mov
jl
cltd
js
hlt
imull
add
negl
xchg
lods
cli
add
cmpsb
mov
add
jge
mov
add
add
add
loopne
gs
add
add
mov
mov
mov
push
jns
xchg
rcll
mov
lea
pop
add
push
push
push
push
call
cwtl
pop
aad
add
add
add
pop
push
ja
rcl
cmpsb
add
lcall
xchg
add
cmc
add
xchg
jge
orl
push
push
shl
sub
pop
add
mov
push
push
push
lea
push
lea
push
call
add
add
aam
out
xchg
add
jae
add
movsb
add
cmc
in
add
out
cmc
out
pop
leave
mov
iretw
out
fists
add
add
aam
lret
movsl
sti
andb
mov
add
out
push
fsubrs
fdivr
iret
add
add
add
pop
test
jl
push
test
int3
lea
pop
cmpw
pop
push
not
xor
pop
pop
push
push
push
push
lea
push
push
push
lea
push
call
data16
mov
fldcw
add
jp
hlt
addl
outsl
mov
add
sti
jae
add
xchg
fcompl
add
mov
lock
aad
mov
push
add
pop
mov
push
dec
shl
pop
push
push
sub
pop
call
xor
push
dec
pop
pop
push
shl
dec
add
pop
pop
pop
push
push
push
push
push
call
add
hlt
push
rcr
stos
push
add
add
arpl
add
filds
push
out
add
mov
pushf
outsl
push
add
testl
popa
cmpsb
scas
add
add
add
jl
imul
add
mov
addb
add
aad
add
mov
mov
lea
pop
pop
push
ror
pop
pop
push
add
rol
pop
leave
push
push
push
push
push
push
push
push
push
push
call
negl
into
add
add
mov
icebp
add
addl
add
add
mov
cwtl
cld
cld
push
xchg
lea
jb
xchg
add
addb
jb
add
pop
sti
test
add
out
aam
mov
lea
pop
ret
push
push
push
push
call
test
jmp
add
mov
add
xchg
mov
mov
mov
add
lahf
mov
add
shl
loopne
std
add
push
imul
mov
lea
pop
push
mov
push
lea
push
push
push
push
lea
push
lea
push
push
call
xchg
movsb
add
jbe
mov
pop
add
int3
add
add
mov
add
add
add
mov
jp
fdivrp
imul
add
add
lret
add
movl
jecxz
mov
scas
fsubr
add
enter
ljmp
mov
bound
add
sti
lea
pusha
and
hlt
push
not
pop
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
add
out
add
push
pop
push
add
test
pop
add
popa
and
add
add
test
mov
popa
add
cmpsl
arpl
in
stos
mov
add
flds
out
xchg
cltd
jge
add
andl
lock
add
jmp
iret
mov
mov
les
push
shl
sub
add
pop
push
mov
push
push
push
push
push
push
push
call
mov
add
add
pop
xchg
in
in
mov
add
add
popf
into
add
add
je
add
add
add
add
add
imul
add
add
add
rolb
fiaddl
faddl
test
jns
add
rorl
jae
add
mov
add
add
pop
add
sti
in
jp
fiadds
push
mov
cld
lea
pop
push
push
shr
sub
rol
pop
pop
push
lea
push
push
push
lea
push
push
call
add
mov
fdivrp
mov
jbe
call
fadds
mov
mov
add
fwait
jecxz
add
jns
add
add
add
add
fidivrs
call
vpxor
add
add
push
mov
mov
test
sti
jnp
add
add
sbb
push
cmp
sub
sub
sub
lea
pop
sub
push
add
inc
pop
mov
push
sub
pop
shr
push
push
push
push
push
push
push
call
pop
add
add
lahf
add
push
add
test
pop
jmp
arpl
jmp
push
roll
xchg
jns
add
add
lret
add
jnp
push
fldenv
xchg
jmp
add
add
int
lea
loop
cmc
in
clc
cmpsb
jl
add
add
negl
arpl
movsb
add
pop
add
mov
push
lea
push
call
mov
add
jmp
add
add
divb
pop
add
push
loope
in
sti
jmp
add
add
js
add
jge
cli
add
out
add
pop
cmc
mov
add
hlt
arpl
add
add
jne
imul
mov
add
loopne
add
ja
jmp
add
or
fsts
sub
add
inc
pop
pushl
popl
push
shl
not
sub
pop
mov
push
dec
pop
add
xor
push
dec
lea
add
pop
lea
push
inc
sub
pop
mov
push
pop
add
xor
push
rol
dec
lea
pop
rol
nop
push
rol
pop
nop
xor
push
push
push
call
add
filds
test
push
push
add
fsubr
scas
mov
add
add
add
pop
add
cltd
mov
mov
loop
jecxz
movb
add
add
mov
jge
aam
bound
nop
nop
push
shr
xor
pop
inc
nop
push
push
push
call
mov
pop
cltd
cltd
mov
add
out
push
out
stos
xchg
scas
mov
pop
add
jae
add
add
aam
add
add
testl
add
add
lea
push
mov
lea
pop
nop
cmpb
jne
push
shl
not
sub
pop
add
push
add
inc
pop
nop
nop
push
shr
pop
cmp
je
nop
push
xor
shl
xor
pop
nop
inc
push
sub
pop
nop
push
push
push
push
call
add
arpl
test
pop
stos
sahf
popa
jle
add
add
add
add
jp
add
movsb
add
add
or
add
out
add
icebp
pusha
cli
add
mov
divl
cli
jmp
add
mov
jnp
push
push
iret
add
add
lahf
fcmove
ja
add
push
leave
sti
mov
add
mov
test
repnz
lea
pop
nop
push
lea
pop
cmp
jb
push
not
rol
inc
sub
pop
xor
push
push
push
push
lea
push
call
mov
gs
lcall
push
loope
cmpb
add
jecxz
add
int
roll
jo
fucomp
add
jl
add
sbb
add
add
add
mov
sti
mov
loopne
fistps
jne
mov
out
jmp
add
add
mov
add
mov
add
add
pushf
add
jecxz
arpl
add
mov
lea
pop
jmp
push
add
sub
lea
pop
mov
push
shl
pop
add
movzwl
push
push
push
lea
push
push
call
jmp
xchg
add
loopne
mov
adcl
cmc
jo
lcall
stc
jns
popf
add
add
add
mov
add
add
mov
test
add
add
cltd
scas
shl
jnp
call
lea
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
fsts
jmp
js
xchg
lock
add
mov
add
jp
add
add
push
jmp
add
cwtl
movl
cmpsl
nop
add
pusha
add
loop
je
add
add
ret
lds
add
filds
add
int3
lea
pop
add
mov
push
rol
add
sub
not
pop
xor
push
push
lea
push
call
fsubrs
mov
ja
mov
add
add
add
mov
add
repnz
in
stc
test
pop
add
insb
add
xchg
add
add
add
mov
loop
jnp
add
lcallw
pop
icebp
jo
std
out
bound
jb
add
lods
mov
lea
pop
xor
shl
push
ror
pop
xor
push
push
push
lea
push
push
push
push
push
push
call
mov
jae
add
gs
lcall
add
add
hlt
add
insb
into
add
into
add
xorb
mov
stc
mov
popf
add
add
mov
add
xchg
fucom
add
xchg
jb
gs
mov
lea
pop
shl
push
push
push
push
push
push
lea
push
push
call
pop
stc
add
gs
add
add
loop
mov
les
add
test
lds
repnz
sahf
pop
push
add
out
push
pop
jp
push
mov
pushf
mov
lea
pop
xor
shl
push
lea
shr
not
pop
xor
push
shr
shr
dec
pop
mov
push
lea
push
push
push
push
push
push
push
push
push
call
xchg
mov
cmpsl
rolb
js
mov
add
scas
in
add
roll
push
arpl
mov
movsl
iret
add
pop
add
nop
shl
mov
lea
pop
add
push
shr
pop
pop
push
push
push
push
push
call
int
add
add
pop
push
add
add
add
lret
add
pop
stc
pop
xchg
add
add
add
loopne
add
add
add
stos
add
push
add
insb
andb
nop
add
rclb
add
pop
add
add
pop
add
rolb
mov
lea
pop
pop
pop
push
push
lea
push
push
call
add
add
add
gs
mov
add
add
jecxz
aam
add
add
test
lds
mov
scas
cmc
sahf
cli
push
call
lcall
xchg
int
xlat
lods
addb
jo
add
xchg
mov
add
jo
ljmp
rorl
add
popa
adc
push
push
push
push
push
lea
push
push
push
call
stc
mov
stos
mov
xchg
loopne
std
add
xchg
push
add
filds
pop
add
cli
mov
add
mov
mov
jns
add
fwait
mov
mov
mov
popa
and
ret
push
push
call
add
xchg
pop
lods
xlat
mov
add
jnp
bound
loopne
add
out
mov
add
data16
jmp
xchg
roll
push
add
mov
test
mov
add
add
add
add
push
lds
push
add
add
add
popa
or
push
ror
ror
xor
pop
mov
push
push
call
pop
add
add
add
call
xlat
add
pop
pop
xlat
mov
mov
rclb
xchg
add
push
shll
in
jl
sti
add
fcmovnu
add
loope
add
fisttps
or
push
lea
dec
sub
shl
pop
push
push
not
pop
push
push
not
sub
pop
push
push
xor
pop
mov
push
sub
pop
mov
push
push
push
push
call
add
add
int3
add
add
mov
add
scas
cltd
add
add
lods
add
repnz
in
mov
outsl
add
add
addl
add
push
add
jbe
lret
rcr
add
add
add
pop
mov
add
push
sti
add
add
add
mov
leave
test
add
add
mov
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
cli
std
fwait
add
icebp
imul
rolb
mov
addr16
sbbb
add
add
add
cld
add
roll
in
xchg
jno
popf
in
add
add
clc
push
iret
ja
mov
movsl
add
cwtl
mov
iret
add
int3
add
pop
imul
add
testl
mov
aam
bound
test
je
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
add
addr16
add
les
out
push
pop
mov
pop
add
jns
add
lods
popa
imul
mov
rolb
xchg
add
je
pop
add
loopne
add
ljmp
hlt
lea
pop
mov
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
pop
jle
cmpl
incb
rolb
add
lahf
add
mov
aad
add
loop
jae
jle
add
add
test
clc
add
flds
scas
add
or
mov
loop
loop
add
add
mov
jno
aam
push
push
arpl
std
mov
lea
pop
test
je
push
add
lea
pop
mov
mov
push
push
push
push
push
push
lea
push
push
call
add
les
lea
xchg
iret
add
mov
xlat
mov
fstl
in
add
popf
pop
mov
add
loope
add
pop
fmuls
iret
mov
mov
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
push
call
xlat
pop
mov
add
enter
nop
popa
sti
cltd
addl
loop
lcall
add
test
movsb
fiaddl
scas
add
add
cwtl
mov
add
mov
lea
pop
inc
push
rol
pop
cmp
je
push
ror
not
sub
pop
test
je
mov
push
push
push
lea
push
call
mov
pusha
cwtl
xorb
lods
out
stc
jns
mov
add
les
int
add
lods
add
out
add
add
addb
addr16
in
add
bound
loopne
add
mov
cmpsl
add
roll
testl
add
lods
stos
add
test
mov
fmull
cmp
je
push
push
call
movsb
add
aad
push
add
mov
jb
cmpsb
cmc
mov
cmpsl
les
out
call
add
loopne
mov
jmp
jno
leave
jnp
add
mov
mov
popl
faddl
add
ret
jp
jno
clc
mov
lea
pop
test
jne
push
push
push
call
into
add
rolb
loop
jmp
cltd
popl
add
mov
pusha
std
cltd
pop
add
loope
add
add
push
jnp
add
add
sti
pop
xchg
fadds
pop
lods
mov
add
mov
add
loopne
add
add
pop
xor
push
not
pop
pop
push
shr
pop
pop
push
push
push
call
jmp
add
add
mov
add
add
add
add
in
add
jbe
cmc
call
add
mov
jle
fnstcw
leave
loop
add
iret
addr16
add
ficompl
add
add
add
cld
mov
lea
add
mov
lea
pop
pop
pop
push
xor
add
pop
leave
push
push
call
jae
pop
lahf
push
add
cli
add
add
aad
hlt
xchg
aam
mov
add
add
add
cli
movsb
add
arpl
add
out
add
jl
add
test
add
pop
ret
mov
push
push
push
push
push
push
lea
push
push
call
jns
sahf
je
add
cli
cmp
add
add
addr16
mov
in
xlat
add
add
add
xchg
icebp
add
add
fldl
mov
addl
add
pop
inc
push
sub
inc
pop
cmp
jne
push
sub
add
pop
lea
mov
push
lea
pop
test
je
push
push
push
call
cmpl
loopew
into
lcall
enter
add
lret
add
lock
xchg
mov
fadd
cmpsl
add
pop
jns
int3
lea
pop
mov
add
push
dec
pop
cmp
jne
mov
push
add
pop
test
je
mov
push
inc
pop
add
push
inc
shr
pop
cmp
je
push
inc
shl
add
rol
pop
jmp
push
push
lea
push
push
push
call
add
in
add
shrl
add
shl
cmc
mov
add
mov
sahf
cmpsb
fcmovnb
xchg
add
fbstp
jns
mov
subb
rol
jbe
jnp
vmulss
add
add
rclb
fnsave
add
pop
jp
or
js
jge
add
mov
lea
pop
xor
pop
push
lea
push
push
push
call
pusha
push
add
movsl
in
out
add
pop
add
cmpsl
add
mov
mov
mov
add
push
add
pop
pop
add
insb
bound
add
imul
add
pop
pop
pop
push
push
push
call
add
add
xchg
cmpsb
xchg
rclb
fldl
add
add
data16
andl
add
add
add
push
bound
add
pop
fsubl
add
in
xchg
mov
add
add
clc
pushf
je
xchg
jne
add
lock
add
add
xlat
lret
mov
add
popa
or
pop
leave
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
push
pop
stc
lods
imul
scas
sbbb
add
js
jne
add
stos
jge
xchg
mov
mov
push
cltd
out
jp
xchg
sahf
iret
add
pop
push
in
jno
mov
mov
mov
add
jle
mov
cmpsl
add
push
jbe
add
cltd
mov
lea
pop
ret
push
not
pop
lea
push
not
pop
pop
push
not
not
ror
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
push
testl
xchg
scas
addl
test
clc
jno
add
arpl
out
mov
add
push
add
push
mov
in
add
je
movsb
add
add
push
mov
lea
pop
pop
push
push
push
lea
push
push
call
add
icebp
out
mov
add
xchg
add
call
js
xchg
out
movsb
andl
mov
imul
imul
mov
push
stc
movb
shrl
add
loopne
add
mov
add
nop
add
add
add
add
out
mov
lea
pop
leave
push
add
lea
inc
shl
pop
ret
push
lea
push
push
push
push
lea
push
lea
push
call
stos
cltd
leave
loopne
mov
xchg
pop
mov
add
lret
negl
add
add
jmp
add
add
shlb
add
add
mov
add
add
add
js
push
jo
fcomip
add
add
mov
lea
pop
mov
push
push
push
push
push
push
call
add
out
mov
out
test
add
in
add
mov
lock
xorl
mov
fcoml
sbb
push
push
call
add
add
jecxz
divl
add
mov
aad
cwtl
enter
mov
jae
push
fldl
add
jp
add
sti
add
add
add
add
lahf
stc
mov
fildl
push
fistps
add
iret
add
add
mov
les
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
repnz
loopne
add
addl
ja
add
xchg
aam
ljmp
fadds
aam
js
into
xchg
lods
in
iret
addr16
push
cwtl
add
add
add
jp
add
add
add
add
add
add
jecxz
xlat
mov
lea
pop
pop
push
sub
pop
pop
push
push
push
call
mov
lods
shll
mov
add
add
loopne
add
add
addr16
loop
out
push
add
jno
shlb
add
enter
mov
xchg
add
add
push
mov
push
add
jno
test
lods
push
imul
mov
loope
pusha
push
fucomip
add
add
add
pop
aad
into
add
mov
pop
leave
ret
test
push
test
jae
test
jb
shrl
push
cmpsb
and
push
jle
jae
test
jae
xor
jb
repnz
mov
or
aad
or
pop
jo
loope
cmp
repnz
and
clc
imul
pop
xor
hlt
stos
inc
pop
jne
mov
jb
inc
mov
add
jbe
dec
repnz
lret
and
or
mov
loope
int
cs
pop
and
bound
pusha
nop
js
xor
inc
mov
inc
add
and
push
ficomps
cli
aam
sbb
mov
int
push
jns
xchg
push
addr16
and
lds
scas
xor
and
cmp
pushf
mov
pop
mov
fdivrs
jb
dec
daa
aaa
mov
pop
lods
paddsb
sub
cmc
pop
aad
mov
xchg
mov
loopne
outsl
mov
ret
xor
sbb
or
lods
testl
popa
adc
dec
hlt
imul
stos
xchg
jmp
cmp
out
mov
mov
xorb
lock
cmp
gs
lahf
cmp
clc
push
rcrl
push
xchg
sbb
sbb
mov
popf
lret
jmp
repnz
adc
adc
pop
hlt
jecxz
repnz
jmp
sbb
mov
decb
cmpsl
inc
fcmovne
add
leave
sti
mov
mov
sbb
dec
dec
in
shlb
aaa
out
rcll
cld
inc
ja
scas
leave
notb
cmc
in
test
mov
xchg
push
sub
push
jae
arpl
cld
lods
cmpsb
mov
enter
mov
mov
rcrb
jne
fidivrl
and
std
xor
xor
lds
jge
jno
mov
xchg
fwait
test
jo
inc
lods
or
leave
jbe
roll
jo
adc
push
jbe
and
adc
mov
ret
scas
push
pop
repz
sbb
pop
leave
xlat
dec
bnd
or
outsb
bound
inc
cmp
aaa
fldt
outsb
ret
mov
loop
dec
stos
lods
fs
push
adcb
sbb
add
fucomi
lock
test
mov
add
fxch
xchg
decl
jp
and
jno
mov
sub
dec
xor
fisubrs
adc
iret
inc
adc
push
dec
jae
test
hlt
xchg
push
dec
jp
loop
int
test
rorb
pop
pop
test
xchg
mov
mov
xor
xor
notrack
xor
cmp
test
cmp
popf
js
mov
mov
rclb
testb
xchg
pop
mov
aas
jbe
ss
rcll
pop
ret
cwtl
out
xchg
and
divb
mov
push
inc
mov
test
call
jnp
pop
div
push
adc
dec
xor
imul
or
or
adc
and
xchg
outsb
lahf
sbb
test
or
scas
mov
rclb
mov
xlat
mov
cmp
sahf
cmp
leave
rcll
subb
stc
push
and
icebp
dec
jo
sbb
sbb
mov
mov
int
pop
cmp
arpl
cwtl
sbb
icebp
mov
repz
aas
scas
out
xor
pop
jns
pop
loope
add
fidivs
subl
movsb
dec
shlb
mov
xchg
daa
push
adc
lods
popf
inc
xchg
filds
loopne
jmp
test
sbb
jp
fcmovu
mov
or
lret
out
in
in
mov
or
scas
lea
mov
popf
push
adc
xchg
jge
pop
push
sbb
adc
dec
subl
dec
jne
lcall
xor
ljmp
mov
aam
clc
pop
jg
iret
push
and
push
adc
imul
mov
inc
push
push
pop
sarb
push
std
cmpsl
push
outsl
push
sub
jmp
lahf
aam
cld
in
sub
aas
pop
sbbl
mov
mov
lds
lods
xor
sbb
movsb
outsb
xor
and
inc
inc
into
pushf
inc
testb
int3
test
lods
jbe
dec
sar
bt
xchg
lahf
push
push
pop
loope
mov
inc
cmp
xchg
sub
adc
out
sbb
add
xor
cmpsl
das
push
das
scas
and
fists
jecxz
sub
sahf
fistps
lds
lret
sub
and
stc
and
sar
aaa
int
xchg
adcb
cmp
iret
and
popa
sub
sahf
lods
dec
cmpsl
andb
cmpsl
call
push
jge
inc
cli
fwait
insb
in
ret
dec
and
fs
cld
and
inc
inc
fimull
fcmovu
lea
insb
push
cltd
in
pop
lods
mov
mov
stc
sbbl
loop
out
mov
cmp
and
push
cmp
cmc
sbb
movsl
add
addl
inc
and
pop
ret
push
mov
sbb
jg
add
test
add
arpl
add
jmp
sub
xor
mov
xchg
xchg
fisubs
push
jno
inc
or
jae
sbb
cwtl
in
test
das
or
lret
sbb
ss
mov
mov
push
pop
push
out
shll
inc
stc
imul
inc
pusha
shll
lcall
sbb
call
jb
mov
cli
in
xor
enter
push
cmc
insb
popf
mov
cld
mov
idiv
sbb
add
mov
mov
cli
lods
das
push
adc
fistpl
pop
and
bound
and
call
in
push
fiaddl
fistpll
and
xchg
shlb
xor
loopne
insb
sahf
mov
jmp
sbb
jns
fidivrl
adc
adc
faddp
data16
inc
mov
mov
mov
clc
and
loop
je
push
loop
jle
add
jbe
pop
fdivrl
aad
test
outsl
push
cltd
push
dec
mov
sbb
fs
movsb
push
cld
shlb
mov
mov
sub
push
push
pop
mov
inc
insl
cmp
loopne
mov
mov
or
cmpb
ret
out
sub
jae
sub
mov
fsts
int3
idivb
mov
int
sbb
test
dec
in
stos
andl
and
inc
popa
aad
sbb
cwtl
pop
push
lods
dec
push
ss
xchg
aam
inc
cmc
movsl
jo
addr16
mov
in
push
movsl
sub
dec
or
mov
xor
pop
fnstcw
jnp
shll
imul
mov
popa
insl
je
sbb
stos
loope
inc
pusha
mov
jecxz
push
mov
cli
insb
cmpsb
lret
sub
and
andl
jle
outsl
popf
xlat
mov
es
pop
xchg
adc
imul
and
push
in
xchg
insb
push
sub
lds
outsb
and
push
jp
leave
lahf
std
jle
int3
xor
xchg
and
push
cmp
adc
js
int
mov
test
cltd
call
mov
mov
pop
pop
out
push
fs
push
pop
mov
xchg
mov
xor
in
cmc
lret
jl
pop
enter
cmp
mov
mov
sub
xchg
and
add
sarl
repnz
and
sub
jg
lahf
or
cmpsl
movsl
xchg
push
add
insw
aad
mov
pop
xor
push
test
pop
cltd
js
int3
arpl
xlat
popf
dec
jecxz
ds
mov
mov
push
xor
scas
nop
mov
mov
cmpsl
sub
mov
repz
sbb
out
testl
ficompl
pop
inc
add
cmp
mov
xchg
cmpsl
sahf
or
xchg
subl
pop
and
dec
push
add
jg
lock
mov
repz
xor
and
fistpll
data16
inc
jno
into
subl
into
mov
fadds
imull
test
ss
es
testl
and
fnstenv
clc
dec
xchg
lods
int
lahf
lret
dec
push
sbb
addl
aam
sub
imull
jae
insl
xor
std
push
ja,pt
pop
adc
mov
push
test
add
xchg
lret
lods
add
orb
cli
int
shrb
xor
test
cmp
cmpsb
xor
push
add
pop
sub
je
sbb
cwtl
pop
subl
test
mov
pop
xchg
stc
or
arpl
and
mov
mov
popa
jmp
push
lret
xchg
mov
pop
cmp
xor
jnp
pop
aaa
sbb
out
mov
push
dec
dec
push
push
decb
mov
jmp
mov
mull
sbb
lret
mov
push
lcall
mov
inc
mov
test
loope
lods
jo
jns
aam
lret
lock
mov
scas
call
pop
xor
push
jmp
sub
push
int
mov
pop
lahf
push
and
pushf
sub
push
andb
mov
push
lock
hlt
cltd
sub
inc
fnsave
xor
xchg
xchg
jge
orb
fldcw
popa
mov
push
mov
fdivl
or
fneni(8087
mov
mov
mov
dec
ja
add
add
dec
setns
jl
stos
int
ficomps
mov
loop,pn
push
bound
test
rclb
test
fucomp
mov
jle
ss
hlt
inc
aad
mov
negb
mov
mov
fdivrl
int3
push
lods
cmp
clc
xchg
push
test
fcoms
repz
mov
lcall
mov
lods
int3
jo
icebp
imul
mov
ljmp
and
in
mov
inc
jmp
adc
cmp
ficompl
push
mov
xor
mov
mov
ret
rcrb
test
daa
imul
push
inc
pop
stc
or
mov
cmpsl
jmp
imul
mov
mov
movsb
lret
sbb
mov
sbb
addr16
call
test
shll
add
ds
imul
sub
inc
fs
sahf
loopne
jl
and
and
aam
pusha
call
bound
ret
fnstenv
insb
loop
xchg
fisubl
jmp
mov
sbb
dec
fistpl
and
and
insl
add
mov
or
pop
push
jmp
test
dec
xchg
xchg
mov
scas
mov
inc
data16
and
aaa
aam
icebp
outsb
fadd
xchg
and
and
push
sbbl
loopne
mul
aad
stos
repnz
jb
mov
cmp
lods
jae
mov
lcall
lcall
jmp
cmp
daa
test
push
inc
xor
xor
fcomps
and
cmp
repz
push
clc
lock
out
dec
lods
inc
mov
test
shll
push
les
and
in
and
pextrw
push
xlat
inc
cmpb
dec
push
out
clc
xchg
scas
xor
jno
imul
andb
xor
popa
push
inc
cwtl
inc
add
lods
xor
jp
sub
and
xchg
pop
shll
out
jge
aad
cltd
push
cmc
cwtl
inc
push
mov
pushf
je
fidivrl
xadd
jns
pop
sub
ss
cmp
push
fldcw
mov
inc
adc
aaa
mov
cmp
pop
cmp
mov
out
or
jmp
mov
cmc
lcall
cmpsl
mov
bound
jg
pop
rcll
sbb
inc
in
arpl
jg
adc
in
xlat
int
sub
or
xor
add
jbe
cmp
das
mov
shrb
mov
mov
in
int
ja
lea
ja
addr16
mov
push
cmc
inc
jp
and
ficomps
fsubp
xchg
jecxz
dec
mov
ds
dec
fbstp
push
cmp
mov
imul
pop
mov
and
lcall
xor
mov
hlt
and
lret
jo
adc
scas
dec
jae
movsb
jbe
add
out
and
add
inc
pop
sub
cmc
or
stos
jae
xor
add
cmp
and
test
cmpsb
mov
jbe
mov
jmp
push
mov
pop
add
xchg
jmp
jns
adc
or
rcrl
cmp
adc
or
push
stos
jle
lods
jl
insb
mov
pushf
fisubrl
xchg
ja
ficoml
and
mov
add
dec
sahf
mov
cld
adc
mov
scas
mov
jle
pop
outsl
les
rolb
sub
lret
cmpsb
cmp
push
hlt
cld
and
adc
test
or
add
pushf
push
adc
cmp
into
lcall
sbb
push
dec
mov
and
test
daa
mov
out
or
push
mov
lds
ds
mov
xchg
out
jecxz
int
adc
adc
push
pushf
or
call
push
rorl
andb
xor
and
xor
loop
pop
loope
mov
inc
push
mov
sub
pop
divb
outsl
mov
insb
xor
ret
daa
cmp
jo
popaw
pop
adc
movsb
icebp
xor
aas
outsb
ja
adc
adc
dec
mov
add
lods
push
mov
mov
sbb
mov
fildl
stc
cli
popf
jnp
or
insb
pop
insl
je
jmp
sub
adc
mov
aaa
lret
or
dec
pushf
sbb
xor
push
jae
inc
out
aas
test
gs
test
cmp
cltd
int3
add
fwait
and
xor
dec
xchg
mov
pop
inc
cmp
sub
fnsave
insb
pusha
xor
rcl
sbb
or
or
xor
inc
pop
mov
outsb
test
jbe
or
adc
out
lcall
fiadds
sub
adc
addr16
pop
mov
mov
pop
sbb
shr
lods
pop
and
sbb
sbb
jns
in
pusha
dec
leave
dec
loop
cmp
and
shrd
cltd
adc
pusha
xor
aad
sub
aad
push
mov
cmp
mov
lea
mov
loop
or
mov
je
aaa
leave
pop
aad
cltd
mov
push
lret
adc
add
and
hlt
jno
fs
and
repnz
mov
fdivs
jns
mov
mov
repz
inc
inc
mov
lret
and
and
nop
ljmp
rclb
shl
ds
out
and
lea
sbb
movsb
push
mov
ret
mov
mov
dec
inc
int
mov
sbb
daa
int
add
rcrl
dec
adc
shlb
pop
sub
repz
stos
std
push
add
mov
cwtl
jns
sub
jae
sbb
sub
cmp
seto
sub
and
and
sub
xor
push
stos
mov
je
or
push
add
push
popa
adcb
ss
sti
jno
in
scas
xchg
lea
cld
mov
loopne
cwtl
fildl
add
lret
push
and
and
aaa
daa
inc
jecxz
sti
pop
push
cmp
mov
testb
in
mov
jnp
adc
xor
daa
adc
lds
test
subb
jp
mov
xor
aam
mov
mov
out
andl
xchg
cmp
popf
outsb
into
dec
add
pop
push
inc
xchg
and
outsb
mov
and
lea
inc
pusha
imul
ljmp
stc
xlat
mov
mov
dec
add
push
subb
int3
jg
sbb
fdiv
in
ds
ds
es
sub
orl
popf
dec
jns
jno
std
shrl
jae
out
inc
xor
dec
mov
aad
movsb
adc
les
sti
test
adc
test
lock
fbld
outsb
mov
sub
test
ficomps
loope
lcall
fistpl
stos
xchg
dec
pop
pop
sub
xchg
pop
fsts
lret
pop
xchg
or
mov
in
lods
das
xor
les
fistpl
dec
adc
fnstsw
mov
stos
xchg
in
imul
mov
shl
jp
xchg
pand
mov
je
iret
xor
mov
test
or
call
sbb
mov
push
imulb
pop
jbe
cmp
sub
addr16
mov
pop
xlat
js
pusha
and
shrb
lods
imul
mov
insb
pop
and
aam
pushf
call
xchg
icebp
xchg
lods
jecxz
mov
repnz
and
push
xchg
ljmp
int3
add
and
sub
insl
cli
sbb
xor
and
xchg
jp
je
dec
lods
cmp
rcrl
jo
xor
sbb
lahf
pop
cmpsl
lock
sarb
gs
pop
xor
inc
lea
cli
or
mov
xor
lret
cwtl
and
mov
inc
fistpll
fistpl
psubsb
fimull
xchg
out
mov
iret
xor
cmp
fwait
dec
inc
ja
mov
insb
je
mov
fcmovnbe
jle
test
cmp
push
mov
mov
adc
jle
out
mov
sub
dec
pop
aad
popa
nop
pushf
int
lret
sbb
inc
out
stc
mov
popfw
and
js
inc
mov
icebp
add
or
mov
xchg
in
frstor
cld
xchg
out
inc
mov
xchg
and
or
sbb
div
popf
push
ss
daa
rcrb
sub
lods
cmp
jge
movsb
dec
jp
and
test
xor
in
lock
leave
inc
popa
xor
fildll
jge
mov
and
sti
sub
or
xor
popf
test
push
mov
and
aad
add
jb
or
jl
sbb
and
das
icebp
sub
cmpsl
pop
push
fimull
xor
jno
int
movsl
jle
push
adc
adc
jecxz
inc
imul
lds
shr
test
inc
test
orb
in
push
es
jb
dec
sbb
cwtl
lcall
cmp
pop
loop
dec
jp
sub
lods
shl
xchg
stc
dec
cmp
push
mov
xor
pop
mov
sub
adc
sbb
dec
movsb
movsl
fldcw
inc
lret
sub
sub
fcmovne
punpckhdq
out
add
cmpsb
sub
inc
stos
push
sbb
roll
xchg
sbb
sbb
add
xchg
mov
jg
cltd
in
pop
movsb
in
ds
rcrb
movsb
pushf
or
frstor
je
jmp
cld
mov
and
push
aaa
adc
and
cmc
ljmp
sub
or
mov
mov
or
xchg
cltd
cmp
mov
xchg
dec
sahf
js
cli
shll
scas
mov
test
adc
adc
xchg
push
pop
push
jg
xorb
arpl
jmp
xchg
out
lods
inc
sbb
ret
cmp
fs
insl
jecxz
cmpsl
lock
pop
enter
inc
and
and
and
lods
nop
cmp
mov
sbbb
pop
adcl
sbb
mov
inc
in
test
enter
int3
dec
pop
mov
out
sub
repz
loop
xor
int
es
ret
jge
mov
int
inc
mov
push
inc
adc
inc
push
mov
pop
out
pop
pop
xchg
fbstp
je
sub
dec
or
stos
cli
or
sbb
and
popa
pop
xchg
dec
rcrb
out
jae
push
mov
mov
jo
xchg
adc
jmp
and
jecxz
lret
add
sbb
xchg
and
and
mov
out
cmp
daa
mov
xorb
loopne
xchg
stos
mov
mov
cs
out
stos
mov
int3
sub
jg
sub
test
inc
jb
in
test
in
lahf
jmp
dec
dec
mov
ret
addr16
mov
test
out
jnp
gs
pop
xchg
cmc
add
lds
push
outsl
addl
outsb
in
xlat
loope
popa
pushf
mov
sets
rcr
mov
dec
or
pop
fisttpll
push
ss
mov
sbb
lret
leave
ret
inc
push
insb
into
inc
jp
cwtl
cmp
and
adc
pop
das
popf
mov
lods
jo
mov
add
and
and
and
rcr
roll
outsl
ljmp
pop
push
xchg
push
icebp
loope
mov
inc
xor
dec
ds
enter
inc
push
dec
and
or
xchg
mov
mov
sbb
fucom
mov
or
sarb
das
aam
xchg
js
sti
lret
aam
xchg
call
int3
mov
insb
imul
sub
dec
enter
addr16
cmp
xchg
enter
in
pop
lahf
xor
xor
xchg
pop
mov
ljmp
fdivl
cmc
dec
pop
jb
dec
or
jne
xor
sub
pushf
repnz
jae
test
loop
in
cmp
clc
jo
sbb
ja
and
popa
push
insl
sbb
or
or
push
mov
adc
sbb
xor
push
stc
out
mov
dec
sbb
in
inc
dec
mov
add
or
and
std
sub
sahf
pop
dec
int3
push
sub
cmc
std
pop
ret
cmp
xchg
xchg
loop
push
add
jecxz
cmp
sub
adc
sbb
sub
ret
mov
repz
mov
add
sbb
nop
daa
outsb
mov
cld
add
arpl
icebp
inc
jne
pop
cmc
in
mov
cmp
xchg
pop
dec
rcrl
add
inc
push
outsl
push
lock
les
mov
out
adc
sahf
push
or
pop
pop
pop
xchg
loopne
js
xchg
push
mov
bound
jl
int3
push
int3
hlt
push
or
add
xor
aam
ret
jl
mov
out
test
jp
mov
add
test
and
rcrb
mov
sub
fdivrs
inc
idiv
or
or
push
scas
lcall
dec
inc
inc
or
rcrl
xlat
loopne
jns
xor
addr16
mov
dec
add
fcoml
add
xlat
lods
ss
lahf
cmp
int3
mov
cli
adc
out
sub
and
repz
pushf
pushf
aas
out
aam
push
push
lret
push
ror
shrd
out
xorl
pushf
push
mov
lods
dec
push
xchg
pop
xchg
lret
jnp
fdivr
fildll
sub
sbbb
inc
fcmovu
dec
push
and
in
stc
or
mov
fcmovnu
mov
mov
sbb
jne
push
add
or
mov
inc
push
mov
aaa
jae
dec
sub
jge
jne
xor
shr
pop
push
out
outsl
jae
mov
fistl
mov
aas
mov
push
je
jle
sub
sbb
mov
movsl
lods
repz
lahf
inc
dec
into
aaa
xchg
jns
fwait
imul
mov
jns
jle
dec
add
xlat
sbb
mov
xchg
sbb
and
inc
cli
gs
xor
mov
dec
jmp
cs
mov
jbe
lock
cmp
fdivl
adc
cmpsb
loopne
xchg
call
pusha
sbb
xchg
add
loope
xchg
push
mov
adc
in
xchg
es
ljmp
sar
cmpsl
mov
push
mov
and
or
dec
push
push
mov
daa
or
mov
cli
push
movsl
add
rcll
stos
mov
pop
mov
mov
ljmp
push
sti
or
lahf
out
sbb
fildll
push
jl
cs
sub
sbb
pop
sub
xor
pop
push
out
push
inc
jg
mov
push
icebp
insb
lcall
fnstenv
mov
gs
pop
or
mov
push
inc
mov
fisttpl
cli
mov
arpl
sbb
mov
inc
decl
int
or
sbb
fdivr
pop
add
loopne
aas
jno
sti
shrb
clc
decl
mov
subl
and
arpl
mov
dec
or
xor
ljmp
popf
not
or
push
or
jp
hlt
fldenv
sub
int
pop
adc
cmc
mov
jmp
test
pop
push
lods
adc
in
sub
jecxz
ss
pop
cmp
sbb
inc
mov
fisubrs
sbb
outsl
and
xchg
jecxz
or
pop
imul
jbe
loope
or
xorl
or
xlat
push
and
ror
and
std
inc
cmpsb
xchg
test
fs
sbb
imulb
inc
add
add
mov
in
jne
fwait
push
push
dec
dec
dec
daa
jl
fidivl
inc
dec
cwtl
std
push
xor
or
lret
mov
aam
adcl
jmp
scas
sub
sbb
cwtl
jnp
push
xchg
xchg
subl
xchg
mov
sarl
sub
mov
lcall
push
lds
or
or
pop
jl
mov
mov
cmpb
push
mov
std
inc
push
gs
inc
adc
clc
sub
mulb
pop
inc
xor
mov
mov
jno
cmc
mov
xlat
cli
inc
pushl
mov
ss
pop
and
jmp
jecxz
ds
das
out
pushf
xlat
outsl
out
in
adc
in
push
push
orb
sahf
inc
stos
aaa
jb
cmp
add
push
sbb
xchg
hlt
fdivl
pushf
mov
push
mov
inc
outsb
add
int3
add
clc
les
inc
repz
popf
scas
or
leave
iret
jno
xchg
and
cs
sbb
cli
sbb
insl
movsl
sbb
jmp
rcrl
fistps
out
lods
mov
push
mov
mov
sub
stos
sbb
or
pop
std
sub
inc
lods
adcl
mov
xor
xchg
mov
mov
ror
cltd
insl
push
mov
inc
mov
jecxz
jo
outsl
lock
sub
popa
dec
icebp
adc
inc
push
cmp
jle
mov
sbb
into
jl
sub
scas
mov
movsb
push
dec
pop
aad
push
dec
fnstcw
jnp
dec
xor
and
pusha
outsb
sbb
mov
jp
inc
les
mov
mov
cmp
mov
pop
in
adc
and
push
test
sub
dec
xor
xor
dec
testl
add
inc
xchg
add
mov
insl
cmp
test
mov
push
mov
fistps
sub
jb
jns
mov
negl
xchg
jne
ret
xor
lcall
cmp
in
leave
fidivs
jmp
or
push
xor
addr16
cmp
jge
inc
pusha
lods
inc
add
mov
arpl
or
cwtl
cmp
cli
outsl
lock
jb
jl
xchg
push
pop
enter
pop
adc
testl
lods
enter
xor
cmp
aas
fnstsw
adc
das
pop
orb
xchg
push
push
loope
xchg
mov
xor
push
loop
and
dec
insl
jo
nop
dec
lcall
je
add
sti
xchg
or
inc
aad
adc
mov
push
idiv
mov
clc
xchg
stc
xlat
fnstenv
bswap
push
in
sub
lret
xchg
and
xchg
sahf
mul
in
loop
push
jmp
pop
inc
cltd
xlat
push
scas
mov
jg
or
xor
push
sub
and
aam
cmp
push
push
mov
sub
mov
or
sub
xor
ficoms
test
push
inc
push
sbb
and
fsts
pop
je
lock
push
imul
pop
iret
jle
adc
shr
jp
mov
mov
arpl
out
push
rcrl
push
pushl
mov
es
push
inc
lds
stos
rcrl
push
int
mov
push
btl
adc
lods
sbb
lods
xlat
cmp
dec
fildll
mov
in
mov
pop
outsl
add
mov
lods
pop
nop
mov
inc
pop
int
ds
imul
lret
mov
iret
sub
lods
stos
imul
mov
aad
neg
rcrb
mov
enter
inc
xor
xchg
add
in
xchg
or
imul
jo
das
or
mov
cmpsb
sbb
push
push
aam
sub
es
lock
dec
mov
sbb
jmp
in
pop
mov
mov
or
fsubr
mov
int
out
stos
cmp
pop
outsb
sbb
rcr
testl
xor
lea
lahf
imul
and
inc
sub
pop
inc
pop
stc
pop
fs
mov
jmp
dec
rcr
mov
push
jnp
jno
sub
int
cli
xor
ja
pop
nop
sub
or
repnz
leave
push
pop
aaa
jns
adc
popa
rcrl
push
iret
insl
xor
icebp
xchg
inc
aas
adc
or
xchg
or
jns
mov
and
xor
fwait
aam
das
out
dec
rorl
lcall
push
repnz
adcb
ja
push
pop
dec
jmp
jne
daa
dec
lods
xchg
xor
xor
lret
mov
adc
pusha
je
fyl2xp1
sub
xlat
cwtl
or
jnp
xchg
mov
jmp
orl
lcall
pop
clc
test
fcompl
push
cmpsb
push
imul
sbb
mov
ret
push
adc
sub
mov
pop
push
mov
pop
add
stos
mov
cmp
addb
sub
fistps
mov
outsl
or
mov
dec
mov
xchg
sub
dec
aam
push
jle
pop
cmp
mov
mov
sahf
pop
stc
fnsave
aaa
push
sbb
add
adc
insb
movsb
mov
jb
stos
cmpsb
fnstenv
jns
loopne
sbb
jmp
call
fsubl
shrb
and
mov
or
dec
rcrl
push
idivb
cmp
jnp
mov
in
orl
or
mov
pop
push
sub
adc
jp
or
add
movsb
out
and
mov
clc
lahf
mov
adc
test
sub
cs
jbe
int3
push
and
lcall
sbb
stc
dec
sub
test
mov
inc
cmpsl
pop
and
lods
inc
mov
gs
fwait
mov
or
daa
jae
inc
outsl
and
ljmp
xchg
enter
xchg
je
test
aaa
pop
cmpsb
nop
or
cli
dec
pop
sbb
xor
std
rclb
jno
loope
push
psllq
jecxz
mov
movsb
dec
pop
rolb
in
or
and
adc
rorl
out
push
test
pusha
inc
imul
mov
pop
adc
mov
jb
pop
sahf
ret
imul
out
out
pop
cmp
mov
repnz
sub
pusha
gs
add
jmp
std
adc
scas
mov
cmp
jle
dec
push
xchg
lods
hlt
mov
mov
in
movb
popf
dec
add
dec
mov
cmp
js
out
xchg
adc
xchg
shll
inc
mov
jmp
out
ja
xchg
or
sbb
cmp
stc
xchg
mov
leave
dec
sbb
out
push
loopne
aas
sub
pop
pop
jb
pop
xchg
pop
mov
jg
pusha
and
lret
lock
or
ret
lret
mov
xchg
sbb
push
out
mov
mov
in
push
fsubl
push
out
mov
mov
push
aam
call
mov
aad
mov
pop
dec
out
mov
xchg
fwait
std
push
sub
aas
cwtl
ss
inc
adc
movsb
addr16
movsl
xchg
push
pcmpgtw
cmc
push
out
in
push
jecxz
aas
and
mov
out
out
jge
out
ja
testl
in
jbe
fwait
push
jg
xchg
ljmp
xchg
jae
iret
sub
stos
push
push
xor
cmp
fistpl
inc
mov
mov
dec
ret
jb
xor
arpl
cltd
lock
xorb
add
sahf
dec
or
sub
mov
in
fwait
lea
pop
or
push
dec
xor
cmp
dec
insl
scas
icebp
test
cmp
pop
mov
test
pop
inc
sub
push
mov
sbbl
xor
and
lea
movsl
fninit
fistl
cmpsb
sub
sub
repz
sub
mov
cmp
fidivs
lods
mov
cmpsl
cmc
lret
push
adc
push
into
cmp
jg
leave
sbb
push
cmp
lods
and
int
cmpsb
imul
scas
xor
hlt
adc
insb
xchg
mov
and
mov
jle
roll
mov
mov
add
sbb
dec
sbb
jg
sarb
mov
out
test
mov
inc
mov
lock
adc
out
pop
jl
call
mov
and
out
enter
jo
lds
jb
inc
or
sub
lods
dec
ret
dec
and
mov
les
mov
scas
add
cwtl
sub
mov
mov
sub
out
rcrl
ret
pop
push
cmp
pmaxub
mov
xchg
testl
or
repz
je
lahf
test
cli
leave
frstor
mov
mov
test
mov
adcl
jnp
jecxz
mov
lock
add
xor
or
rorl
mov
std
mov
scas
mov
and
mov
je
pop
add
sub
push
push
ss
push
stos
push
xor
ja
fwait
xchg
addr16
pop
jae
dec
push
adc
mov
inc
jb
insl
push
or
shrb
pop
or
push
fcmovnu
test
fwait
jo
mov
and
stos
xchg
mov
aam
mov
ret
xchg
stc
shll
push
dec
out
cmp
out
in
int3
dec
lods
out
subb
addl
jns
jle
inc
mov
pop
mov
mov
mov
movsl
rcl
cmc
pop
fstpt
mov
inc
scas
cltd
mov
out
adc
fcomip
aas
push
push
aad
repnz
jnp
sub
ficompl
loope
cli
push
add
cmp
or
lahf
movsl
icebp
pop
jmp
pop
in
leave
dec
bound
mov
xor
sub
mov
push
add
mov
push
popf
enter
inc
sbb
mov
ret
inc
adc
cmp
sahf
stc
jl
mov
mov
cmp
xchg
cmc
push
dec
gs
orb
sti
or
xor
sbb
pop
ja
lcall
and
mov
adc
pop
loope
fstl
push
jecxz
jb
cmpb
in
jg
cld
jmp
push
aas
jne
in
inc
sbb
adc
xchg
call
and
arpl
fldl2t
out
push
adc
dec
roll
mov
dec
xchg
inc
clc
pop
repnz
pusha
nop
push
shlb
mov
cld
repz
cld
inc
leave
leave
push
cltd
dec
and
imul
fstpt
movsl
aaa
mov
mov
jmp
xchg
push
ljmp
pop
jl
push
dec
sub
rorb
shlb
lock
int
mov
pop
outsl
mov
adc
jmp
lahf
cmp
jecxz
or
sbb
cmp
jnp
xchg
push
jo
push
repz
insl
test
ljmp
bound
mov
xchg
orl
sti
insl
xchg
lahf
dec
xor
lds
lret
lods
mov
pop
loop
decl
cmp
shl
mov
outsl
push
fstpl
inc
mov
and
js
scas
out
cmp
add
fisubrl
push
cs
xlat
les
int3
pop
sti
jbe,pn
daa
cmpsb
cmp
xor
xchg
notl
sarl
cs
std
hlt
imul
incl
jo
adc
in
rorl
mov
fimull
or
pop
mov
lahf
push
loop
push
pop
jno
dec
psadbw
or
jle
jl
pop
adc
les
jmp
mov
jp
mov
bnd
or
cwtl
movsl
add
stc
lahf
xor
mov
sub
jl
data16
repz
js
mov
cld
and
in
shrl
mov
repnz
lahf
cmp
repnz
imul
movsl
subb
nop
in
fildll
jne
das
fiadds
in
add
and
jb
mov
or
cli
mulb
dec
loopne
sti
push
pop
lock
push
movsl
push
movb
mov
sub
sub
cmp
cmp
aad
xchg
mov
xchg
jmp
cmpsl
or
inc
out
jp
loop
sbb
cmp
pop
adc
sub
cmp
movsb
add
mov
xor
ds
cmp
shll
push
in
mov
jo
and
push
out
jp
rclb
loop
pop
js
outsb
fwait
xor
xchg
outsb
stc
mov
jmp
mov
inc
push
inc
add
pop
xor
inc
push
add
jl
pop
push
pop
sbb
mov
popa
int
or
out
rclb
daa
push
mov
add
adc
xor
sahf
xor
insb
shlb
out
loop
push
and
test
xchg
test
repnz
lcall
inc
ds
jmp
push
mov
sbb
sub
jg
cli
add
jne
ja
cmp
mov
icebp
fwait
cltd
rol
sub
dec
add
repnz
xchg
lods
test
inc
gs
jne
jno
pop
mov
mov
pop
lds
xor
aam
les
lahf
mov
adc
or
mov
inc
je
clc
movsl
mov
test
cmp
cmp
pusha
mov
mov
pop
push
add
leave
cvtps2pd
xchg
xchg
loope
dec
aam
test
mov
mov
rcr
loope
dec
pop
inc
push
mov
add
aaa
int3
cmpsl
dec
mov
shrl
mov
xchg
mov
ret
jno
pop
ror
in
lss
out
loopne
cltd
pop
jl
dec
xor
fstl
je
mov
mov
insb
out
mov
push
jge
in
mov
lcall
lock
mov
pop
jecxz
or
adcl
inc
fdivp
push
sbb
test
jo
mov
sbb
sbb
scas
test
lods
add
fmuls
xchg
cmpl
jbe
xchg
es
cmp
call
push
jge
shl
lahf
adc
push
icebp
and
test
cmp
fdivr
cld
movsl
sbb
out
xchg
dec
or
cmp
mov
sub
jae
jb
jo
in
movsb
ja
lcall
test
push
test
mov
sub
pop
mov
ds
dec
sbb
xor
lahf
stc
mov
sbb
insl
aam
push
lock
test
out
sub
sbb
pop
inc
push
push
lret
lret
add
xchg
push
cmp
xor
dec
push
daa
push
stos
jb
popf
push
icebp
int3
nop
push
mov
lcall
mov
or
shr
arpl
mov
movsb
push
pop
push
jnp
mov
roll
insl
loop
xor
pop
lea
cmpsl
push
adc
xchg
or
sub
sub
xor
notl
fadds
cmpsb
cmp
push
test
popf
inc
and
cmp
xchg
imul
rcl
loop
lcall
inc
sbb
sbb
or
addr16
outsl
hlt
stos
loope
pop
mov
test
xor
jle
pop
notl
mov
inc
push
cltd
ljmp
add
push
mov
aas
mov
inc
mov
ljmp
mov
mov
insb
sub
int
jecxz
es
mov
xlat
push
mov
add
adc
and
push
xchg
ret
mov
sti
mov
pop
push
jmp
jae
or
inc
mov
cmp
jae
sbb
mov
in
je
mov
lea
sbbb
mov
int
xchg
xor
insl
add
hlt
call
adc
arpl
pop
sbb
incb
movsl
jo
fsubrl
cmp
lock
add
sahf
push
popf
orl
clc
pop
push
ss
shl
xorl
insl
cmc
pusha
stc
add
jp
mov
stc
push
sbb
sbb
mov
addr16
add
pop
adc
movsl
push
or
adc
aaa
sub
ret
dec
mov
mov
dec
jnp
inc
nop
dec
pop
jmp
hlt
xchg
adc
call
lods
movl
call
jecxz
mov
adc
stos
pushf
loop
pop
fcmovnbe
test
fcmovnb
out
orb
icebp
arpl
loop
jle
jno
mov
jne
pop
stos
out
popf
add
mov
loopne
nop
jnp
pop
mov
insl
mov
hlt
mov
test
sbb
outsb
push
pop
or
mov
mov
cmp
cmpsb
or
test
icebp
bound
push
jmp
lock
add
jp
add
cmpsl
inc
jp
cmp
mov
nop
adc
pushl
cmp
ficoml
bound
jp
add
push
jns
fdiv
jg
sub
je
cmp
shll
or
int3
inc
xchg
jnp
and
std
push
ljmp
xchg
ret
adc
int3
aaa
daa
fdivl
jae
ficomps
and
mov
mov
dec
sub
aad
les
shrb
fsubp
pop
leave
stc
mov
mov
inc
addr16
movsl
xchg
or
xor
dec
jns
push
ljmp
mov
sbb
jg
lcall
xlat
mov
loope
pop
insl
test
mov
dec
and
ret
insl
ja
cmc
xchg
dec
mov
add
and
aaa
int3
mov
fidivl
pop
dec
push
adc
inc
dec
pusha
dec
mov
cmp
js
ret
pop
sbb
cld
test
cwtl
mov
lods
cmp
int
push
cltd
and
sub
nop
and
pusha
into
out
sub
xchg
push
push
imul
add
rorl
inc
lods
inc
push
add
cmpsb
call
mov
inc
push
fidivl
push
xchg
leave
mov
sbbb
mov
daa
bound
cs
mov
stos
das
cwtl
xchg
cmpl
mov
test
cmpsl
sti
jge
push
shrb
inc
popf
xor
push
cmp
popf
cld
inc
sub
sub
or
pop
insb
and
int
lcall
sti
dec
mov
push
mov
cmp
ret
loopw
lods
jmp
mov
jp
iret
mov
or
enter
lea
scas
movsb
pop
sti
mov
pop
gs
fwait
ror
push
insb
jecxz
mov
fstps
cmp
xor
fisubrl
insl
mov
inc
adc
movsb
xrelease
rcrb
movb
rolb
adc
nop
insb
jmp
add
cmp
out
repz
mov
and
and
push
aad
orl
scas
fisttpll
mov
push
out
inc
int3
add
popf
popf
imul
gs
shll
test
mov
mov
mov
fwait
cmp
addb
iret
js
mov
add
ret
ss
ljmp
icebp
loopne
inc
pop
xchg
es
arpl
and
xchg
adc
jns
push
iret
movsb
lea
pusha
hlt
fisttpl
fnsave
or
sbbb
arpl
mov
xchg
inc
mov
sub
mov
pushf
outsb
in
push
aam
xchg
xchg
std
int3
daa
out
shrb
cmp
lcall
mov
add
outsb
lock
sub
in
jae
shrb
imul
mov
xchg
push
hlt
xlat
les
lea
out
jl
push
iret
adc
lock
cmp
mov
push
cmp
fmuls
add
xor
sub
mov
jae
lock
jne
mov
incb
mov
or
pop
shrd
inc
cmp
dec
push
and
inc
xchg
inc
inc
daa
add
orb
mov
stc
rclb
rorb
rcl
lahf
sub
push
scas
pop
stos
movsl
mov
or
leave
adc
or
shl
fldenv
add
nop
shrl
fmul
mov
rcrb
movsl
stc
add
clc
gs
sub
sub
mov
sbb
ss
test
addb
stos
adcl
and
ds
pushf
lds
inc
mov
fucomip
pop
inc
faddl
les
inc
pop
adc
int
mov
inc
mov
or
mov
dec
addb
and
call
push
in
lds
pop
mov
mov
mov
aaa
ret
test
and
in
jbe
sbb
loopne,pt
sub
pop
inc
push
mov
xchg
push
xchg
xchg
mov
addb
mov
repz
or
xchg
push
stos
sub
insb
std
pop
lds
ret
mov
enter
fmul
sbb
pop
out
cmc
addr16
lahf
adc
jo
jne
addr16
inc
xor
aaa
jae
lea
call
leave
add
adc
into
inc
pusha
int3
lahf
aam
popa
add
adc
mov
gs
sub
dec
lcall
lds
mov
repnz
sub
scas
lret
cld
jo
cmc
or
xor
movsl
cwtl
sbb
das
arpl
stos
in
mov
cmp
je
out
loope
pop
clc
fildl
xor
outsb
roll
mov
inc
cmc
mov
fisubs
mov
xor
cmpsb
iret
les
lods
mov
jne
push
sbb
push
bound
adc
movsb
shrb
test
je
adc
add
mov
aaa
fstl
daa
ret
push
jl
js
push
jns
xor
push
xchg
add
push
mov
and
or
lods
repnz
mov
andl
jo
hlt
test
xchg
aaa
xor
cmc
decl
addb
mov
cld
push
sbb
push
pushf
and
dec
xchg
setae
fnsave
xchg
mov
repnz
push
push
mov
jge
lock
cmpsb
push
cmc
and
sub
js
sarb
sub
and
dec
pop
and
mov
data16
push
xchg
cld
cmp
jne,pt
addl
cwtl
xchg
mov
loopne
in
sahf
add
pop
fsubrl
jae
clc
bound
sbb
cmp
mov
pop
push
push
daa
cltd
xchg
dec
sti
push
mov
dec
jne
adc
and
mov
ss
and
out
pusha
scas
push
mov
pop
test
orl
pop
jmp
mov
push
pop
aas
lret
lcall
mov
inc
in
adcl
sarb
pop
push
pop
inc
inc
cld
lock
and
and
pusha
das
mov
mov
cvtps2pi
in
iret
jo
jecxz
jmp
sar
and
jne
rcr
sbb
xchg
jbe
subb
pop
testb
das
push
inc
nop
orb
mov
jecxz
jecxz
dec
ret
mov
mov
sub
pushf
ror
mov
daa
arpl
push
mov
cmp
call
push
pushf
xchg
lret
fidivs
push
into
mov
mov
aas
dec
insb
sahf
out
xor
arpl
push
sti
int
es
int3
or
dec
or
fcoms
dec
xbegin
xor
adc
xor
cli
int
test
out
xchg
dec
shrl
testb
aam
lock
mov
sub
cmpsl
push
negl
popa
dec
std
push
sbb
test
cmp
or
mov
jle
inc
pushf
mov
repz
jmp
push
je
imul
dec
stc
lcall
fwait
fs
push
push
or
movsb
cmpl
or
cltd
out
or
dec
gs
dec
sub
ja
jo
jb
add
push
sbb
push
aad
cli
push
xor
sbb
dec
pop
push
lea
stc
pushf
lcall
mov
sbb
push
dec
xor
or
aam
fs
cmpsb
add
pusha
jb
add
pop
lret
je
insb
pop
pop
loop
enter
cwtl
xchg
xchg
xlat
dec
jae
arpl
xchg
mov
in
jne
cwtl
repnz
xchg
or
xchg
jns
xor
imull
outsb
xchg
cmp
jo
xchg
or
inc
mov
add
or
stc
in
rorb
popa
lcall
dec
sub
or
cmp
cmp
jp
clc
inc
sub
lahf
push
aas
push
jecxz
mov
sub
mov
scas
lods
pop
andb
sub
dec
sub
xorb
pop
cmp
cmp
cltd
mov
mov
movsl
jno
mov
mov
or
xchg
cmp
sub
sahf
in
pop
aad
int3
js
and
outsl
mov
ret
dec
xchg
sbb
push
arpl
icebp
push
scas
inc
push
adc
and
fstl
sbb
pop
das
mov
inc
and
fsts
sarl
and
adc
mov
jne
test
mov
sbb
sub
mov
addr16
pop
sbb
out
mov
aam
push
cld
add
adc
orb
mov
xor
lods
stos
popf
adc
aas
jns
push
pop
sbb
scas
xor
cmp
sbb
cmp
fiadds
adc
dec
inc
sbbl
arpl
dec
mov
mov
or
cmp
inc
stos
add
pop
mov
test
mov
jp
hlt
push
xchg
mov
loopne
and
out
rorb
and
outsl
mov
pop
lods
sahf
lret
je
mov
jbe
test
test
and
xor
sbb
lods
and
and
notl
mov
adc
in
xchg
or
xor
mov
jae
sbb
mov
fstl
imul
scas
mov
aaa
push
cmp
fwait
jmp
push
mov
sbb
outsl
mov
inc
dec
mov
lods
loopne
mov
inc
daa
sub
pop
divl
inc
push
orl
jg
dec
pushf
rcrl
loop
sbb
aaa
aam
int
mov
call
xchg
inc
sti
dec
mov
mov
int3
add
out
xor
sbb
lret
adc
lret
sarb
sub
jge
add
xchg
notl
enter
outsb
out
sahf
daa
enter
lcall
in
jg
or
pop
int
shll
stc
and
roll
in
mov
mov
pop
add
jge
jge
mov
sbb
inc
outsb
push
jle
adc
loope
insb
aam
mov
mov
mov
lock
ror
adc
aas
das
cwtl
idivl
pop
aad
xchg
aas
sbb
fsubrl
cmpb
mov
mov
dec
xor
daa
outsl
add
bound
rorl
popl
mov
sbb
pushf
out
add
bound
cmpsb
mov
push
push
mov
mov
mov
jns
and
je
cmp
xlat
insb
or
daa
ret
jne
adc
enterw
push
pop
test
add
inc
and
outsl
shrd
inc
pop
pop
movsl
xchg
and
add
sbb
dec
loop
pop
rcrb
iret
nopl
fistpl
pop
icebp
shlb
pop
es
and
lret
add
lret
mov
dec
xchg
pushf
dec
add
adc
xchg
xchg
pop
das
adc
push
jecxz
inc
sbb
scas
xchg
push
add
test
or
inc
rcrb
dec
cmpsb
mov
xor
fsubr
jecxz
ja
add
movb
inc
int3
addr16
add
iret
or
sarl
pop
mov
call
fnstenv
flds
inc
push
or
addr16
arpl
in
and
addl
xlat
hlt
and
adc
iret
sub
enter
mov
adc
mov
push
inc
scas
rcr
ljmp
ret
repnz
jnp
push
aam
xchg
pusha
in
aad
xor
lcall
push
es
insl
push
mov
pushf
rclb
jge
xor
pop
xor
pop
loopne
pop
add
push
xor
add
mov
jo
test
and
lret
adc
inc
pop
jmp
or
mov
jg
jge
stos
fmull
cli
cmp
imul
inc
cwtl
xchg
mov
sub
daa
jp
loopne
pop
es
adc
mov
inc
add
stos
mov
jno
cwtl
test
xchg
leave
stc
or
shlb
js
pop
jns
subl
pop
lret
cmp
sbbl
push
mov
loope
xchg
insb
out
mov
mov
cmpsb
fidivl
mov
jnp
aad
or
cmc
repnz
lcall
pop
mov
push
filds
inc
mov
push
pop
into
ret
jl
movsb
cli
jmp
lods
push
or
enter
dec
adc
test
loop
roll
loope
das
imul
adc
pop
pop
cmp
sub
jle
or
addl
lahf
cli
popf
mov
test
mov
xchg
scas
or
sub
roll
adc
inc
aaa
cmp
jg
stos
adc
cmc
ret
cmp
in
push
xchg
loop
cmp
pop
leave
mov
shlb
jb
mov
xchg
inc
mov
movsb
aaa
jns,pn
sub
jge
add
test
outsb
aaa
lods
cli
and
dec
and
cmp
sub
add
loop
lcall
test
fistl
mov
push
adc
or
inc
lret
and
sbb
or
jo
lds
or
es
fs
addb
into
sbb
loopne
lahf
pop
hlt
fstpl
inc
repz
push
sahf
xor
loope,pn
pop
bound
sub
mov
and
xchg
xchg
mov
sbb
sbb
mov
cmp
mov
scas
push
xor
pop
cmc
xor
icebp
jl
and
or
mov
inc
inc
fs
xchg
es
inc
xor
sbb
and
cmp
adc
popf
mov
int
and
loopne
mov
outsl
cmc
je
sub
addr16
stos
addb
jb
xchg
inc
mov
les
les
push
scas
mov
pop
xor
jecxz
pop
jp
movsl
cld
sub
jnp
and
push
jle
and
dec
jno
pop
outsb
xchg
cltd
inc
fildl
mov
out
aad
clc
xchg
sub
cmpsb
or
mov
and
and
add
pushf
les
push
fisttps
rcrb
hlt
and
in
ja
and
pop
sbb
pop
mov
and
pushf
sub
scas
and
jo
mov
sub
jnp
xor
push
orb
inc
pop
pop
jecxz
push
inc
add
sub
ja
imull
rcll
xor
pop
lcall
push
xor
test
in
test
test
out
pop
dec
outsl
cmc
sbb
in
fistpll
push
jae
mov
lcall
stos
add
xchg
inc
cmpsl
arpl
sub
test
cwtl
pop
movsl
and
dec
fucomi
inc
sub
lods
jns
xor
js
mov
sub
in
and
adc
scas
es
xchg
lds
sbb
sbb
iret
sub
jge
mov
or
pop
xchg
mov
adc
cmc
inc
mov
mov
dec
stos
or
xchg
jge
clc
or
jno
pop
sub
aad
daa
pop
mov
adc
add
int
cmp
add
or
out
scas
add
xchg
leave
dec
loopne
add
test
in
mov
leave
fisttpl
push
cwtl
repz
out
xchg
lret
mov
dec
negl
mov
ret
fisttps
das
dec
cld
add
data16
cli
ret
lds
out
add
xor
mov
add
test
mov
mov
repz
or
mov
lret
xorb
dec
stos
sbb
mov
adc
add
and
xchg
stos
lea
xchg
mov
test
sub
and
sbb
out
or
fdiv
call
xor
inc
inc
pop
cltd
add
pop
sbb
inc
jmp
mov
cmp
mov
daa
mov
rcl
jbe
lcall
push
aaa
sub
and
adc
push
jmp
push
mov
add
add
xchg
dec
xor
cwtl
lods
idiv
bound
mov
rorb
mov
jg
adc
shlb
clc
push
xchg
pop
fsubrp
stos
out
imul
push
lods
hlt
stos
push
xor
sahf
imul
sub
cld
mov
addl
pop
or
mov
and
ds
subl
in
jp
faddp
daa
adc
ja
push
arpl
inc
shrb
loope
out
stos
mov
dec
sbbl
sub
adc
out
test
sti
stos
test
lahf
add
sbb
cwtl
dec
fwait
gs
sbb
lret
popl
xor
push
loop
ret
pushf
or
mov
hlt
sbb
pusha
aaa
inc
push
pushl
loope
test
add
popf
sbb
movsl
push
and
mov
mov
enter
ds
mov
jb
mov
add
mov
add
or
add
sub
imul
jge
cltd
imul
pusha
xchg
mov
jo
push
and
cmpsl
push
and
rorb
pop
push
mov
mov
adc
shlb
xor
jmp
jl
mov
sub
lret
gs
jle
push
push
jmp
push
adc
mov
dec
sub
adc
clc
insl
adc
or
loope
jmp
movsl
leave
repz
cmp
lret
cmp
shrb
shrl
pop
push
sub
and
pop
sbb
data16
in
xchg
xchg
mov
mov
lods
sbb
mov
sarl
pop
std
daa
sub
je
push
xchg
outsb
pusha
mov
fwait
popf
xchg
jb
pop
mov
insb
xor
cs
out
xchg
cli
ss
sub
dec
pop
fwait
add
sti
push
outsl
fimull
in
push
pop
into
or
pop
jge
jae
xchg
or
fwait
imul
shl
add
mul
mov
dec
mov
mov
mov
sbb
ret
mov
movsb
mov
xchg
xor
cmp
ja
cmpsl
pop
sbb
xchg
loope
fdivrl
or
dec
mov
sbb
push
adcl
xor
sub
cs
or
sub
mov
sub
hlt
movsl
lahf
inc
jo
mov
push
popa
jno
in
jno
pushf
sub
divl
cmp
add
subl
push
lods
data16
mov
push
aaa
je
icebp
jge
sbb
jmp
aam
mov
xor
imul
sub
jb
cwtl
inc
mov
test
sbb
sub
hlt
imul
sarb
pop
adc
mov
aas
smsw
cmp
push
pop
cmp
fldl2e
sbb
out
pop
stc
ficoml
enter
insb
shl
xor
jno
and
sub
cli
xor
fdivs
fistps
inc
lar
loop
pusha
cmp
adc
gs
mov
mov
ds
cmpb
aam
pop
cwtl
cmpsb
sub
add
insl
cwtl
push
push
or
adc
mov
ljmp
or
int3
not
es
or
cmpb
inc
call
mov
bound
ss
mov
sbb
out
xchg
sub
lahf
andb
cmpsl
jae
mov
pop
aam
push
mov
mov
ffree
js
jmp
lret
pop
dec
idiv
or
mov
pop
xchg
movsl
daa
test
int
jo
adc
mov
mov
out
push
pop
cltd
arpl
rolb
cmpsl
dec
lods
or
int
cli
mov
add
mov
jns
adc
loope
andl
icebp
mov
add
mov
or
push
repnz
sub
or
lahf
rol
push
lock
subb
cli
sar
cmp
xchg
sbb
cld
xor
xchg
rcll
or
rcrb
add
jns
inc
mov
adc
add
adc
mov
aaa
cmpsb
loopne
dec
xchg
mov
fnstcw
cwtl
push
or
ljmp
daa
and
jle
mov
in
jne
add
pop
xchg
jl
jo
pushf
lds
scas
mov
shrl
insb
stos
cwtl
adc
leave
dec
mulb
dec
pop
mov
inc
xor
mov
adc
js
imul
push
pop
mov
es
out
sbb
sub
dec
or
sarl
dec
sub
jbe
xchg
nop
les
cmp
mov
fnstsw
push
mov
scas
dec
push
rcl
jmp
push
lods
je
shr
insb
pop
ljmp
in
jl
std
sbb
loop
sub
sti
xor
test
mov
jle
cli
lea
outsb
cs
or
lahf
loopne
mov
cli
das
data16
in
fldt
das
or
jl
xchg
bound
adc
jb
jecxz
sbbb
stos
dec
adc
mov
or
xchg
sti
bnd
inc
dec
mov
mov
jo
cwtl
pop
cmpsb
pop
cs
enter
std
loopne
mov
cmp
mov
ret
stc
add
jbe
not
cmp
js
int
or
dec
aam
jo
sub
test
adc
mov
mov
pop
cmpsb
mov
or
int
inc
ljmp
mov
lock
adc
and
mov
ret
push
or
dec
pop
rcrb
outsb
jl
filds
mov
sub
jbe
cmpsl
bound
mov
adc
push
cli
aas
mov
ss
mov
mov
cltd
inc
arpl
cmp
jb
push
movsb
xchg
dec
cmc
mov
sub
cmp
or
sahf
or
and
stos
mov
add
aas
sbb
dec
cmp
mov
mov
push
fdiv
lods
ror
in
test
xchg
xchg
rcrb
cmpsl
adc
outsb
sar
shlb
and
mov
orb
aam
or
xchg
mov
je
pop
sti
and
fnsave
sahf
movsl
bndstx
jg
ss
jb
push
push
xchg
and
out
std
rcr
hlt
push
aaa
insb
mov
lea
scas
shrb
outsl
push
jae
mov
mov
xor
sti
dec
call
and
out
mov
add
and
ret
ja
jno
mov
push
stos
mov
or
negl
mov
and
mov
mov
xchg
daa
cmp
mov
mov
pushf
daa
int
adc
mov
cmp
adc
out
sbb
lahf
in
adc
sti
out
sbb
xor
inc
ljmp
in
jno
pop
mov
cmc
into
or
faddl
daa
adc
push
leave
and
in
pop
jg
in
test
mov
push
and
jle
push
and
fdivrs
jge
push
aas
repnz
loopne
push
in
loope
fistpl
sbb
cltd
pop
lods
xlat
push
add
gs
inc
inc
shll
and
jnp
scas
cmpsl
in
subl
sbb
fsts
std
clc
in
lods
dec
add
push
test
mov
fs
adc
xlat
dec
ret
xchg
out
mov
xorb
inc
pusha
scas
mov
in
jp
add
lds
mov
push
mov
ror
in
dec
dec
mov
mov
test
xchg
sbb
xchg
dec
into
rcll
dec
xchg
dec
les
imul
xchg
mov
jmp
sbb
sub
cmc
push
sbb
enter
out
notb
fistl
enter
pop
aas
push
bound
jle
movsb
sub
mov
adc
lret
rcr
sub
inc
mov
ds
roll
xor
push
jg
loope
fnstcw
outsl
sahf
ds
aad
testl
pop
daa
ret
pusha
mov
and
and
dec
sbb
mov
pop
sub
adc
sub
sbbl
mov
inc
or
mov
or
mov
cld
cmp
repz
jp
lock
xor
sbb
xchg
hlt
push
movsl
mov
leave
dec
lock
leave
pushf
loop
js
outsl
sub
shll
cs
xlat
ret
mov
mov
mov
lret
push
stos
xchg
addr16
mov
pop
lds
mov
adc
cmc
mov
jne
cmp
push
rclb
and
push
fadds
mov
jl
shrl
lret
sub
mov
sarb
pop
inc
xor
pop
add
lock
push
ret
cli
ror
adc
into
dec
inc
mov
push
xor
fs
imul
out
cmpsl
fistpl
das
sbb
cs
dec
or
cmp
bound
cmc
addr16
aad
xor
mov
int3
xlat
xchg
imull
test
sbb
lock
test
es
stos
fisubrs
sahf
fiaddl
sbb
add
gs
test
in
cmp
ja
or
std
lahf
add
xchg
aam
dec
inc
cmpsl
mov
in
je
add
push
adc
or
lods
cmp
pop
aam
mov
sbb
xchg
lret
pusha
xor
add
cltd
insl
aas
gs
adc
jl
xchg
lods
lret
fdivp
sbb
test
arpl
test
add
jmp
xlat
int
into
shlb
mov
dec
call
dec
lds
call
add
repnz
mov
xchg
iret
pop
rcl
divl
jl
push
xchg
adc
inc
xchg
shlb
xrelease
int
popa
and
inc
gs
jg
iret
mov
out
popa
pop
js
stos
dec
outsb
xchg
cmp
jle
mov
mov
out
inc
adc
cmp
sarb
add
pop
cwtl
int3
addb
xor
pop
inc
xchg
lahf
decb
pmaxsw
movsb
jecxz
xchg
outsl
lret
das
add
inc
loop
std
pop
scas
cltd
pusha
xchg
inc
xchg
aad
add
lds
loop
mov
jp
sbbl
gs
out
shl
or
and
les
pop
xor
add
or
aaa
pop
pop
mov
test
push
mov
sbb
dec
or
fwait
push
inc
xchg
sub
jns
mov
xchg
orl
idivl
mov
cmp
les
fcomp
fwait
adc
add
aad
mov
mov
mov
mov
test
and
pop
dec
xchg
or
mov
sahf
out
or
aas
addr16
hlt
xchg
inc
and
imul
test
mov
imul
scas
sub
dec
pop
lret
xor
push
movsl
stos
pushf
push
cmp
cmc
mov
in
lcall
leave
dec
arpl
fidivrl
call
fildl
call
lods
mov
xor
in
fdivrs
adcb
and
fidivl
pop
mov
and
pop
dec
rcr
jg
mov
jp
lea
cmp
adc
cmc
in
push
cmp
addr16
mov
xchg
imul
jo
xchg
pop
xor
cmp
cmp
mov
xlat
ret
and
xor
adc
jno
jno,pt
dec
mov
mov
pop
mov
mov
cltd
ja
mov
sub
lret
lock
ja
xor
int
fldl
mov
mov
xlat
jns
jo
mov
imul
movsl
xchg
push
push
ja
mov
dec
shl
rcrl
gs
jno
mov
iret
sub
jb
push
ljmp
xchg
mov
outsb
push
push
or
arpl
cmpsl
iret
push
rorb
xchg
mov
push
cmp
mov
pusha
ret
or
test
pop
dec
scas
mov
jle
rcrb
fnstsw
xchg
in
mov
push
push
lret
cmpsb
bnd
cltd
fwait
mov
jecxz
xor
xchg
je
pop
dec
lds
jmp
mov
mov
cmp
mov
inc
xchg
fisubrl
cmp
int
ficoml
mov
cmpsl
add
mov
sbb
outsl
lahf
and
xchg
inc
add
mov
cmp
jnp
loopne
xchg
dec
jle
xchg
daa
xor
iret
cmp
and
andnps
pop
xlat
cmc
aaa
jo
jb
push
int
pop
mov
adc
jmp
and
and
and
test
call
fidivrl
shlb
sbb
insl
push
dec
mov
sub
and
cmp
dec
lock
add
add
clc
mov
leave
xchg
fsts
or
mov
sub
jmp
xchg
xchg
jmp
dec
add
push
mull
adc
and
xor
enter
pushf
inc
fistl
inc
add
je
lahf
mov
mov
scas
jnp
in
loopne
cmp
xlat
lret
lahf
inc
popf
arpl
aas
add
inc
dec
test
stos
sub
enter
xchg
jmp
or
shr
lret
sbb
adc
scas
leave
aaa
add
push
popf
xor
dec
out
mov
je
es
test
js
xchg
addb
imul
mov
int
inc
sbb
push
nop
fsts
inc
stos
mov
sahf
inc
outsl
or
lds
int
add
adc
fldt
push
bnd
sbb
insl
cmc
cld
cs
mov
mov
cmpb
push
push
push
xor
lods
pusha
adc
rorl
incb
aaa
lea
mov
adc
fstpl
mov
adc
cli
xchg
lea
out
fs
mov
xor
outsl
push
pop
dec
jg
dec
push
scas
pop
popa
je
or
mov
add
popa
lcall
ss
mov
pushf
repz
daa
xor
popa
outsl
jb
insb
add
or
dec
mov
or
push
imul
xlat
xchg
xor
loopne
imul
sahf
inc
movl
enter
fldl
arpl
dec
mov
dec
les
jl
stc
dec
mov
jl
cltd
inc
inc
xor
jne
stos
xor
inc
or
lods
adcb
movsl
jmp
fimull
test
ja
sti
rorb
movsl
fiadds
xor
addl
pop
in
and
in
mov
push
int3
or
and
ret
or
fsub
xchg
push
and
adcl
push
pop
push
jno
repnz
pop
cmpsb
xor
js
call
iret
in
mov
stos
inc
out
inc
shll
out
aad
inc
cmp
out
pause
or
dec
int3
and
add
jmp
fstl
jne
loop
shll
jo
stos
bound
dec
dec
jle
lock
das
push
push
or
fwait
lcall
add
or
sub
mov
xor
dec
shld
ds
popa
mov
xor
pop
push
jp
cmpl
inc
add
inc
out
sub
jo
pop
lea
fmulp
gs
push
cmp
sbb
imul
lcall
repnz
clc
xor
push
out
adc
and
loop
and
popa
sub
mov
push
cli
pop
jb
test
mov
cmp
test
loope
bound
popf
push
andl
xchg
jb
add
and
enter
xchg
out
and
push
aad
dec
mov
outsl
pop
cmp
hlt
jl
fstpl
mov
add
add
data16
sbb
ret
xor
div
mov
aad
fildll
cmp
aas
dec
jne
inc
cwtl
xchg
xor
and
jae
cmp
popf
je
shll
push
jmp
push
into
cs
add
jle
test
jns
xchg
push
mov
fldcw
xor
xlat
inc
xchg
pop
xor
xchg
mov
sbb
push
mov
cld
mov
jmp
aam
mov
jmp
or
cwtl
lock
fcmovbe
loope
bound
mov
inc
inc
popa
lret
xor
mov
push
ret
lock
xchg
and
pop
out
cwtl
out
in
or
mov
adc
pop
outsb
icebp
sbb
mov
das
leave
and
insl
outsl
insl
pop
or
arpl
inc
mov
mov
jo
sbb
fneni(8087
add
aas
popf
cmp
cwtl
xchg
xor
inc
outsb
sti
fisttpl
inc
jp
rcrl
inc
shl
insl
shlb
test
mov
insb
pusha
or
psubb
mov
adc
fld
or
and
jge
and
scas
cmp
outsb
test
xchg
inc
or
jle
cmp
adc
aam
cmpb
add
arpl
add
aas
aaa
fisttps
xchg
mulb
jge
and
sbb
scas
ret
push
jnp
push
mov
dec
push
push
or
and
inc
mov
push
movsb
enter
ja
or
rcrb
icebp
jp
inc
inc
pop
push
mov
and
dec
shr
cli
push
mov
test
jbe
and
cmpsb
sub
xor
mov
sub
jp
movsb
cld
mov
mov
sti
mov
mov
int
adc
lods
cmp
add
inc
adc
iret
xor
pop
stos
fwait
daa
cmc
rclb
push
in
mov
mov
push
testl
mov
cmp
aaa
pop
push
in
cs
mov
pop
inc
in
enter
lahf
pop
cmc
mov
mov
jbe
std
sbb
and
mov
fmuls
inc
add
insl
and
mov
jge
or
mov
fs
ret
ret
fisubs
clc
clc
and
out
adc
xchg
jns
leave
push
inc
iret
pop
xor
and
adc
dec
out
leave
pop
imul
xchg
jle
xor
iret
push
in
pop
push
cmp
ss
in
fsts
pop
jmp
in
clc
jl
aas
jle
xchg
lret
enter
out
adc
adc
arpl
aaa
stos
test
addl
xchg
arpl
xor
aad
jle
sub
xlat
sub
arpl
pop
testl
or
pop
or
mov
and
push
scas
roll
sbb
sub
in
dec
mov
sbb
dec
pop
jg
jg
clc
lcall
lcallw
pusha
adc
call
mov
dec
mov
pop
pusha
push
scas
mov
pusha
aam
cs
mov
xchg
fimull
jne
dec
xlat
adc
ja
pop
xchg
in
test
subl
ds
and
fildl
cmc
xor
aaa
mov
pushf
sbb
loopne
ret
xchg
mov
inc
cmp
push
lcall
mov
pop
cmp
mov
sbb
rcrl
insb
stos
mov
in
in
mov
int3
pop
pop
std
icebp
dec
mov
loopne
stos
outsb
jo
cmp
dec
stc
fmul
shll
xor
xchg
insb
pop
inc
fadd
cld
or
call
push
sub
int3
xchg
push
int
or
aam
pop
push
pop
jb
test
mov
std
into
push
mov
jb
mov
xor
pusha
lret
shrb
insb
ret
mov
xchg
mov
sbb
shlb
rorl
test
loope
rcll
cld
sti
or
and
int
scas
xchg
nop
in
addr16
sub
out
add
push
and
mov
cmp
aas
xor
test
lret
mov
mov
mov
mov
jmp
dec
sub
cmp
in
test
lret
in
lret
imul
stos
mov
dec
lcallw
inc
out
addr16
lock
in
mov
pop
lahf
mov
insb
std
test
pop
mov
lea
cwtl
dec
iret
push
jg
jecxz
inc
sbb
jne
xor
inc
ljmp
push
and
push
adc
lea
addl
aad
sbb
aam
adc
mov
lock
insl
mov
xor
in
leave
lds
push
stc
xchg
push
adc
xor
mov
ja
adc
les
sub
mov
fistps
lock
mov
and
cmp
xor
jo
sub
leave
mov
ret
mov
call
fs
cmp
cmpsl
fcomip
jl
mov
gs
sar
and
cltd
sti
call
gs
push
sub
fucomip
pop
xor
call
adc
data16
inc
jnp
mov
mov
mov
mov
cmpl
push
lret
mov
mov
push
dec
xor
sti
sbb
sbb
inc
mov
and
pop
aas
pushf
mov
jmp
scas
shrb
mov
arpl
aas
jmp
mov
out
orb
fsubrp
push
in
dec
fmul
and
sbb
xchg
lahf
and
popa
mov
push
andl
out
lret
and
push
orb
pop
imul
test
jnp
test
xchg
out
bound
mov
sub
fldl
andl
adc
stos
pusha
mov
aas
je
adc
idivl
cltd
xchg
std
sti
adc
ss
daa
ljmp
jg
xchg
cmp
bnd
xchg
outsl
xchg
jle
scas
dec
and
scas
ja
xchg
pop
mov
mov
mov
push
divb
jnp
mov
enter
mov
std
lret
add
sarl
mov
pushf
sbb
and
les
add
mov
mov
in
cli
inc
mov
push
sbb
lcall
cltd
sbb
jle
or
mov
sbb
imul
mov
fwait
push
xlat
xchg
mov
jecxz
inc
repz
dec
fcoml
jg
data16
out
sub
iret
leavew
lock
sub
iret
push
fs
cmp
sbb
lret
jbe
sub
in
shll
dec
push
popa
mov
out
pop
sub
out
or
sub
clc
sbb
repz
mov
subb
add
jge
rorl
adc
arpl
dec
lret
lcall
clc
popf
cmc
cmp
mov
pop
in
aas
xor
jo
xor
dec
mov
xor
lcall
fcomip
jnp
xor
dec
jo
mov
insb
dec
cmpsl
pop
inc
ja
fdivrl
xor
or
test
jl
rclb
fdivs
insb
mov
in
cwtl
sbb
inc
push
jbe
xor
test
jecxz
mov
scas
xor
dec
xor
in
jg
adc
mov
mov
or
lea
sahf
lret
test
cmp
insb
mov
xchg
mov
jge
xchg
pop
jno
pop
cltd
jmp
insl
pop
or
adc
dec
ljmp
shlb
lahf
xchg
cmpsl
daa
mov
popa
stos
dec
clc
mov
scas
repz
inc
fmull
movsb
inc
in
lahf
lcall
cltd
out
sbbl
adc
cmp
cmp
or
mov
aad
xchg
test
inc
mov
dec
ja
push
mov
mov
pop
std
inc
ja
cs
into
xchg
or
dec
lods
fstpt
mov
or
ret
jp
adc
cmp
mov
outsl
push
pop
shll
dec
adc
cmpsl
js
xchg
in
rcrl
out
jnp
out
iret
jg
mov
adc
cmp
neg
stc
pop
mov
push
out
push
inc
into
insl
sti
sub
repnz
push
dec
or
dec
outsl
in
ljmp
push
inc
dec
push
movsl
push
cmp
pop
cmpsl
enter
es
fcmovne
iret
pop
jb
sub
leave
das
push
jg
add
aam
pop
das
sbb
jg
lock
pusha
lret
cmp
ljmp
stos
mov
push
and
mov
adc
inc
and
out
loopew
lret
jg
xchg
sub
adc
adcl
xchg
push
out
aad
dec
xchg
ficomps
int3
mov
jnp
aam
test
fstpt
mov
clc
cs
mov
mov
sub
out
test
enter
test
add
xchg
jno
or
daa
jg
movsl
into
addr16
ficoml
jge
movsl
ret
insl
sub
mov
or
mov
and
xchg
cmpsb
fwait
int
lock
mov
rcl
orb
lcall
pop
js
mov
pop
push
loope
push
in
mov
sbb
sub
stos
mov
fiadds
mov
xor
push
xchg
push
aam
stos
jo
sbb
shlb
ret
scas
adc
scas
mov
mov
cmpsl
cmc
mov
inc
into
cmp
sbb
xchg
stos
out
dec
andl
sub
push
xchg
scas
ficoml
pop
adcl
out
addr16
cmp
pop
lahf
adc
and
push
sub
aad
adc
cmpsb
rolb
push
ret
or
push
or
mov
movsl
add
dec
mov
sarb
pop
cmp
out
mov
incl
xchg
xchg
jp
popf
dec
jnp
dec
repz
test
pop
or
xor
mov
mov
insb
adc
xchg
xchg
fldcw
xchg
out
pmaxub
jmp
cli
sub
and
cmp
lea
xchg
or
sub
repz
in
fucom
jle
into
stc
sub
push
xchg
rorb
sti
push
into
pop
inc
sub
mov
ljmp
xor
mov
mov
cmp
xor
adc
and
adc
repz
push
cmpsb
inc
add
int3
mov
in
jbe
inc
lret
ds
data16
gs
mov
popa
and
rclb
push
out
loope
inc
test
dec
adc
ss
nop
das
icebp
mov
cmp
xchg
jo
and
lret
lock
xchg
mov
inc
je
pop
mov
ds
jl
xchg
inc
clc
sub
jge,pn
outsl
sbb
mov
mov
rcrl
inc
push
adc
es
out
fidivs
and
inc
clc
arpl
fists
inc
jo
das
ljmp
dec
push
push
pop
std
std
adc
xchg
or
sub
pop
push
push
fwait
mov
sbb
cmp
test
dec
insl
xchg
lods
add
out
das
cld
mov
fimull
ret
inc
add
loop
mov
xlat
xchg
adc
pushfw
mov
stos
dec
xchg
mov
jecxz
les
push
out
outsb
pop
jns
sub
repnz
scas
loop
jmp
jbe
add
and
fidivl
hlt
and
in
in
test
jp
fldenv
int
jns
mov
and
xlat
popa
add
jmp
cmp
inc
pop
inc
xchg
loopne
insl
mov
fidivrl
cmpsb
jno
xor
xor
push
inc
in
cmp
aaa
mov
inc
add
mov
push
scas
mov
repnz
nop
or
cld
out
inc
push
inc
sbb
xlat
pop
negl
mov
fistpll
jns
jp
int
dec
cmp
dec
ss
xchg
xlat
cmpxchg
adc
pop
inc
jle
outsb
in
sub
aad
mov
pop
xor
ror
xchg
sub
xorb
add
fcmovbe
dec
ret
dec
xor
or
jp
arpl
pop
jns
pop
inc
mov
mov
pop
adc
xchg
in
xchg
aaa
cmp
sarl
sti
cmp
fs
lock
fiadds
xchg
push
cmp
mov
rolb
mov
dec
dec
mov
cmp
repz
cld
cmc
mov
push
jge
rcrb
or
lods
push
push
cmp
dec
outsb
xor
cmp
inc
push
xor
jne
sti
fwait
mov
mov
add
add
mov
jo
xchg
fwait
mov
or
cpuid
int
adc
out
push
push
shll
xor
in
lret
lds
iret
sub
sti
int3
mov
or
stos
lock
iret
roll
and
js
stos
mov
pop
jb
into
xor
pop
xchg
or
outsl
xor
fidivs
hlt
shll
inc
pop
idivb
fwait
mov
rcl
or
lock
xchg
gs
out
jno
scas
sti
inc
mov
jmp
cs
and
mov
jne
xor
lahf
or
mov
dec
or
pop
ret
cmpb
lret
imul
scas
test
cmc
stos
fisubrl
stos
outsb
out
das
jl
sub
mov
clc
sub
inc
fwait
pushw
pusha
cmp
dec
or
ficomps
push
xchg
ret
sti
test
add
xchg
sbb
lea
or
mov
jno
call
jge
fsubl
nop
jecxz
pushf
push
nop
loopne
test
outsl
mov
out
sub
mov
xor
cmp
outsb
xor
shll
add
ret
sbb
nop
popf
inc
cmpsb
adc
test
push
std
cmp
loope
xchg
in
jmp
ljmp
daa
push
mov
das
mov
dec
gs
mov
inc
out
jo
lahf
lea
inc
cmp
add
or
mov
mov
in
adc
sbb
lcall
lret
ja
ret
sbb
and
fsubrs
jg
stos
insl
fildl
pop
adc
insb
add
cmp
fidivrl
mov
sub
je
inc
in
lods
loope
scas
aaa
call
outsb
xchg
mov
or
ja
lahf
jo
imul
bound
loop
ss
cwtl
and
pushl
cltd
pop
stc
nop
adc
lcall
nop
test
add
insb
bound
mov
hlt
push
in
sbb
jmp
pushf
or
push
dec
leave
mov
add
mov
and
xchg
lock
inc
roll
mov
pop
outsl
cmp
jle
repz
add
xchg
push
cmp
sti
lret
mov
ljmp
push
mov
jle
sbb
push
add
add
mov
mov
xor
push
or
fldt
movsl
adc
add
xor
inc
test
lret
xor
addr16
repnz
pushl
test
sahf
dec
in
das
dec
mov
inc
xchg
pop
jecxz
cs
pushl
lret
test
xor
mov
mov
ffree
add
ja
xchg
in
sub
pusha
adc
lahf
testl
stc
aas
dec
lcall
ljmp
mov
lods
fisttpll
cmpsb
int3
xchg
sbb
lea
xor
cmp
adc
std
pop
adc
cld
int
cli
pop
lret
mov
out
sahf
cmp
hlt
dec
out
sbb
aad
lods
int3
jge
adc
loopne
lock
imul
insb
jmp
or
xchg
dec
add
test
dec
lods
in
and
imul
jmp
popf
imul
out
cwtl
dec
push
push
push
cmpsb
mov
std
jg
and
push
or
cmpsb
add
mov
xor
mov
fwait
push
push
cmp
adcl
dec
mov
fidivrs
popf
dec
mov
fnstsw
popa
pop
std
or
lret
pop
add
out
out
pop
pop
mov
inc
push
out
std
les
sub
cmpb
out
mov
mov
or
cld
in
xchg
mov
xor
push
jnp
sub
hlt
xchg
jo
pop
sbb
lock
add
je
aas
push
enter
sbbb
bound
and
or
mov
cmpsb
adc
popa
test
in
cmp
aad
xor
push
scas
mov
xor
mov
push
out
sarl
in
dec
lret
jo
mov
xor
push
mov
in
mov
mov
cmp
mov
push
jno
dec
pusha
xchg
test
dec
inc
data16
jno
mov
xchg
mov
ret
cmpl
mov
aam
mov
jg
cwtl
stos
xlat
sub
es
fxch
or
filds
inc
sbb
push
loop
and
sti
pop
sbb
dec
mov
mov
lahf
repnz
in
inc
loop
lds
sub
push
shlb
jp
out
cmpsl
icebp
xor
inc
out
dec
adc
and
cwtl
or
and
fnstcw
mov
adc
iret
cmp
nop
add
insb
and
inc
inc
icebp
jge
mov
and
fadds
mov
or
cwtl
and
and
jbe
leave
loop
mov
jb
xchg
mov
mov
test
jl
repz
cmc
adc
fisubrs
inc
shlb
adc
jae
into
mov
mov
inc
push
mov
xor
loopw
scas
mov
ret
mov
mov
dec
int
dec
adc
mov
push
adc
cmpb
lcallw
jp
xor
push
or
sub
rcr
fcomps
mov
popa
enter
test
fsts
jge
and
das
test
mov
mov
movsl
aas
jecxz
jb
jl
lds
xor
xchg
into
mov
sbb
cwtl
dec
into
xor
inc
mov
pop
dec
adc
cld
add
or
jnp
gs
mov
pop
out
or
mov
shlb
lock
fwait
lahf
out
out
clc
dec
stc
xor
clc
repnz
jecxz
cmpsb
add
xor
aam
leave
adc
je
add
pop
pop
pop
data16
dec
ret
inc
ret
movsb
iret
out
xchg
push
jecxz
xchg
cmp
int
mov
lret
out
inc
sub
or
in
imul
sbb
mov
mov
imul
push
sbb
xchg
shrl
pushf
in
test
cmpsb
test
mov
xchg
adc
fidivrs
mov
and
decl
mov
addl
lahf
push
dec
pusha
jo
push
mov
jge
mov
ss
jge
adc
and
xchg
sub
xor
sub
test
pusha
call
add
test
in
aam
faddl
push
icebp
jge
dec
mov
in
sete
and
cld
outsb
jne
aas
push
and
subb
jne
mov
inc
cmp
fisubrs
in
xor
sbb
xadd
mov
insl
cwtl
push
and
mov
arpl
adc
jno
jle
jae
xlat
mov
xchg
cmpsb
imul
in
push
incb
loop
das
mov
sbb
mov
adc
xor
dec
aas
sbb
push
jae
dec
jns
rcr
les
push
mov
daa
aaa
std
sub
adc
mov
cli
pop
mov
mov
leave
jae
or
aas
int
aam
add
pop
jecxz
out
arpl
and
jbe
pop
testb
pushf
push
sarl
add
movsb
cmp
cmpsb
lock
jb
test
into
pop
mov
out
pop
push
mov
pop
push
dec
negb
in
or
sub
cmc
add
sahf
push
lods
mov
pop
std
loopne
xacquire
inc
lea
xchg
icebp
aas
push
mov
dec
adc
jno
pop
bound
rorl
mov
and
stc
sbb
sub
add
xlat
dec
jecxz
dec
push
xchg
push
rcrl
testb
mov
or
into
jno
mov
xor
jmp
inc
jns
cli
lcall
lea
daa
lea
adc
jle
and
insl
into
je
es
ret
addl
into
adc
add
pop
inc
jmp
scas
xchg
das
rorl
cltd
adc
cmp
aaa
adc
nop
or
push
cmp
cmp
sbb
inc
jmp
cwtl
pop
jecxz
push
scas
movsl
les
lret
mov
xchg
ja
push
adc
inc
jecxz
clc
or
pop
pop
aad
pop
fildl
adc
or
test
sbb
aad
cli
add
xchg
cmp
dec
subl
loop
mov
mov
imul
mov
pop
sbb
sub
and
push
in
mov
int3
dec
lds
popf
movsl
subl
imul
push
loop
pop
out
repnz
mov
and
push
inc
push
mov
mov
stos
jae
nop
mov
repz
dec
dec
mov
fwait
mov
push
inc
push
test
jo
sbb
mov
mov
gs
xor
sub
stos
push
mov
arpl
xchg
stc
xchg
ss
mov
out
mov
nop
xchg
mov
pushf
clc
ljmp
dec
test
cmp
daa
cld
es
jns
xchg
ss
fisubrl
mov
xor
jb
dec
inc
lods
mov
cwtl
imul
cmp
scas
push
aad
fildll
sarb
cmc
fadds
sbb
pusha
mov
sub
add
ss
ret
lock
xchg
lahf
dec
addl
aad
xchg
mov
add
inc
scas
xlat
in
jp
sub
test
mov
sub
sbb
in
mov
mov
movsb
ficomps
push
mov
jae
push
jecxz
mov
cs
add
lds
test
in
mov
jle
js
hlt
jecxz
shll
xchg
sbb
inc
je
addr16
mov
xchg
out
push
cmp
inc
sub
jp
add
imul
stos
pop
ret
lods
into
sbb
mov
or
lret
mov
inc
insb
fsubl
scas
or
xor
clc
pop
mov
mov
sub
xchg
bnd
and
shrb
imul
or
lcall
movsl
pop
push
inc
add
shl
fwait
mov
bound
in
and
fidivs
push
pop
pop
push
fidivl
pop
push
insl
cmp
dec
xchg
pop
inc
pop
sbb
out
and
xchg
lods
fld1
arpl
xchg
inc
xchg
and
lods
sbb
inc
jle
scas
add
stc
jg
in
jle
sahf
push
fldenv
fimuls
jne
push
idiv
sbb
ljmp
mov
jbe
push
dec
mov
addl
or
pushf
pop
or
shll
das
mov
mov
xchg
loope
cmp
xchg
jnp
push
std
xor
push
sbb
mov
or
lea
push
dec
jl
lret
push
xchg
clc
pushf
inc
add
pop
sub
sub
je
lahf
lods
stc
xchg
rorb
xor
outsb
mov
stc
mov
aam
fcomip
mov
sahf
jnp
movsb
cmp
xor
jae
mov
sti
shrb
out
xchg
por
add
dec
inc
out
add
xchg
adc
mov
jp
pop
pop
cltd
jo
sbb
mov
pmullw
popf
push
ret
adc
cmp
mov
push
jmp
js
lea
daa
xchg
rcll
lods
arpl
rcrl
sbb
outsl
cmpsb
rcl
adc
adc
psubq
or
cs
ret
ficoms
mov
xor
mov
mov
xchg
xchg
pop
loopne
push
out
fwait
mov
mov
inc
out
andb
sub
xor
sub
push
ja
adc
shll
push
lcall
jecxz
shrl
pop
fiadds
push
or
fldl2e
jo
enter
cmc
sub
xchg
test
loopne
rorb
xchg
jp
adcl
push
ja
push
jo
xchg
pop
add
push
lods
subl
sub
roll
adc
dec
mov
addl
or
imul
mulb
mov
add
loop
data16
mov
push
pop
push
fcoms
popa
fldenv
xchg
cmpsl
pop
and
and
out
movsb
dec
xor
out
sub
leave
push
decl
dec
data16
cmpl
xor
ja
lea
fiaddl
pop
dec
cli
lds
sti
add
rcr
iret
int
in
push
adc
jp
mov
daa
lret
xchg
dec
dec
mov
lcall
ss
inc
lods
sub
das
pop
cmp
data16
jge
jno
movsl
stos
mov
incb
je
add
mov
imull
repz
mov
mov
pop
in
test
aad
jl
fcmove
adc
dec
popl
cmp
imul
outsl
cli
push
mov
je
scas
xchg
scas
xor
fnstcw
or
in
popa
stc
mov
lahf
adc
dec
or
sub
add
xchg
cmpl
and
mov
addr16
sub
sub
sarl
mov
sarl
cmpsb
rcll
push
adc
dec
push
and
lahf
add
mov
cld
loopne
sbb
adc
jge
das
shrb
les
cli
aaa
pop
in
ret
pop
sbb
scas
adc
gs
data16
ret
xor
adc
xchg
fwait
mov
ret
outsl
sub
call
dec
jp
cmp
mov
adc
es
mov
push
ds
mov
xchg
jmp
mov
leave
not
lea
in
in
mov
push
push
mov
dec
sti
xchg
cmp
bnd
stc
jle
adc
filds
jb
sbb
jne
popa
repz
cwtl
out
mov
aam
xchg
insb
cltd
fdivrp
cmp
mov
andb
stc
lds
lcall
dec
lods
and
rcrb
inc
aaa
mov
sub
cmp
fadds
fdivl
sahf
pop
mov
or
xchg
sbb
repz
mov
mov
mov
inc
int
fisttps
lock
int3
sub
xor
movsb
or
inc
push
popa
push
add
lds
xchg
arpl
clc
fsubs
outsl
sbb
cmp
dec
dec
jmp
imul
insb
cmpsl
cmp
es
mov
hlt
js
cmpsb
xchg
mov
cwtl
jge
push
dec
mov
imul
clc
or
adc
inc
incl
jge
adc
mov
scas
cld
ds
stos
je
adc
cs
dec
in
scas
jno
dec
inc
xor
mov
or
ficoms
insl
push
faddl
pop
fstps
ror
sub
xchg
adc
or
xor
orl
push
add
inc
addr16
adc
sti
push
lret
xor
out
and
or
inc
xchg
and
sbb
xor
lret
cmc
popa
and
xchg
adc
pop
push
xchg
xor
and
clc
lea
sbb
inc
call
push
andb
xor
xchg
daa
fistps
xchg
dec
mov
mov
or
dec
push
mov
xor
je
iret
shlb
fdivrp
idivl
jle
dec
lcall
lahf
add
scas
lds
xor
sbb
sbb
add
outsl
out
xchg
bound
adc
insb
add
adc
hlt
adc
test
mov
add
sbb
pop
jae
sbb
cmpsb
mov
sub
mov
lea
lock
add
jge
mov
add
das
adc
cmpsl
inc
jmp
stc
in
sub
sbb
hlt
mov
inc
shr
and
insl
stc
xor
xor
sbb
fdivr
cmp
pop
dec
cli
xchg
xor
push
push
cld
mov
sub
ds
sbb
xlat
xchg
pop
test
mov
mov
pushf
sub
inc
jne
dec
dec
imul
xchg
dec
jb
mov
xchg
mov
xor
jne
jecxz
divb
scas
test
int
movsb
jmp
push
add
mov
jmp
xorl
add
jae
mov
jb
or
sub
pop
outsl
pop
inc
jmp
jecxz
and
aad
push
push
subl
cmp
jae
lret
ret
pop
stos
mov
jg
inc
std
mov
or
dec
test
cmp
icebp
or
iret
sub
int3
cmp
xor
mov
imul
jnp
hlt
pop
lods
subl
xor
push
jae
dec
sbb
or
imul
jae
push
mov
pop
insl
jle
sub
fistps
int
ds
in
adc
repz
cmp
mov
adc
lock
in
xchg
sub
shr
lret
pcmpgtw
adc
add
dec
adc
mov
jo
adc
cld
fs
pop
loope
jmp
mov
scas
aad
in
cmp
mov
mov
pop
dec
push
mov
inc
dec
jp
xor
push
push
push
inc
mov
ja
andl
stos
push
xlat
cs
sbb
adc
add
arpl
cmpb
add
bound
mov
daa
stc
sbb
cmc
mov
inc
sbb
enter
enter
lock
mov
adc
sub
mov
push
mov
and
pop
inc
cwtl
and
imul
out
es
es
sub
test
and
mov
ljmp
stos
jmp
cltd
mov
nop
cmp
inc
out
sub
lods
insb
aad
sub
or
cmpsl
mov
adc
inc
inc
mov
out
sahf
dec
push
jl
jo
pop
xchg
bound
movsb
inc
jo
call
pop
leave
inc
and
repnz
imul
ficompl
mov
movsb
lods
inc
call
jl
or
sbb
jno
daa
or
push
cwtl
into
push
xor
xchg
jno
cmp
pop
addb
fadds
daa
sub
xchg
sbb
xor
test
jmp
les
adc
fnstcw
mov
inc
outsl
nop
dec
ja
cmp
adc
pop
stos
jbe
das
jecxz
cltd
movsl
movl
sub
adc
addl
mov
cmp
mulb
fs
xor
rclb
and
cmc
in
notl
and
mov
xchg
push
test
and
cmp
out
dec
mov
lcall
mov
jmp
testl
orl
mov
ret
addr16
stc
cwtl
push
je
test
aam
pop
out
lods
jmp
or
int3
mov
mov
or
inc
loop
stos
xor
fadd
roll
push
test
leave
sub
test
sub
mov
cld
imul
fisubs
in
cmp
popf
xchg
dec
xor
xor
outsb
leave
jns
sbb
mov
int3
jge
int3
push
fs
pop
xor
cmp
outsl
push
mov
sti
xchg
xchg
inc
push
es
fisttpl
pushl
std
loopne
or
mov
cmpb
jb
sbb
lds
lret
adc
mov
pop
xchg
leave
clc
or
cmp
in
lds
insb
js
pop
push
loope
in
jns
add
push
int3
or
add
ror
outsb
das
inc
je
adc
xor
jno
mov
repnz
push
fdivrl
add
sub
mov
outsl
jne
call
sbb
jns
inc
cli
push
test
in
cli
sahf
scas
nop
xorb
fwait
mov
xchg
xchg
sbb
jmp
idivl
rorl
sub
or
inc
repz
add
aam
push
jns
addr16
nop
in
int
and
or
xor
das
rcrl
xchg
adc
mov
mov
inc
popf
mov
aas
ja
cltd
mov
and
sbb
ret
dec
clc
cs
fwait
mov
movsb
add
ud2
mov
out
dec
jle
iret
mov
pusha
cmpsl
push
push
gs
mov
test
cwtl
jge
mov
add
call
lret
lret
sahf
push
arpl
or
push
mov
inc
sbbl
jp
js
adc
mov
adc
xor
sub
in
sub
cmp
sbb
stc
or
fwait
push
rolb
scas
pop
faddl
xor
dec
arpl
sub
int
or
dec
cmp
scas
lea
inc
test
in
sarb
imul
push
sub
sahf
out
scas
lods
inc
or
sbb
sub
es
cmpsl
aaa
stc
shl
jo
pop
frstor
jne
jbe
xchg
mov
ss
lcall
outsb
adc
xchg
xchg
cmp
cwtl
mov
push
vsubsd
fdivrl
or
pop
inc
enter
lea
out
repz
cmp
dec
cmp
xor
shl
or
fisubrl
inc
mov
out
dec
pushf
sub
subl
cmp
sbb
js
xchg
leave
add
lret
jbe
js
shll
adc
or
test
nop
aaa
testl
xlat
out
sbb
jae
popf
pop
adc
in
jnp
or
sub
ljmp
std
mov
cmpsb
cmp
pop
fldt
repz
lock
lahf
jle
int
fmuls
pop
js
push
jbe
pop
lret
sub
inc
jg
int3
sub
pop
xor
aas
mov
jns
fists
test
push
jnp
push
jle
pusha
das
inc
mov
mov
scas
test
stos
les
push
hlt
mov
push
mov
in
sub
mov
inc
test
lea
repnz
ud0
loop
ficompl
and
cmp
xchg
mull
xor
stos
push
roll
jg
add
daa
rolb
dec
jo
push
sbb
cli
mov
sub
and
jbe
stos
jmp
shlb
dec
cli
adc
or
ret
pop
sbb
movb
push
cmp
fsubs
push
clc
xchg
cltd
cmp
rorb
es
dec
scas
and
popa
lcall
out
mov
xor
dec
adc
loope
jl
mov
in
aam
fstps
mov
gs
cli
insl
dec
cli
sbb
test
and
jns
leave
mov
jns
lahf
testl
std
dec
fimuls
cld
xor
hlt
xor
xchg
aad
das
mov
push
fcompl
js
call
xchg
lea
repnz
pop
out
lds
mov
xchg
fwait
popf
inc
xor
xchg
cmp
dec
call
leave
xchg
jo
les
jb
xchg
arpl
mov
adc
mov
dec
mov
ss
mov
jp
ret
sbb
and
das
jmp
sbb
sbbb
adc
test
xchg
gs
mov
iret
sub
jecxz
iret
movsb
pop
fstps
and
sub
pop
pop
test
into
fidivl
or
shl
aam
test
fcoml
and
mov
or
addr16
pop
dec
dec
and
sbbb
adc
xchg
xorl
jne
push
lret
out
scas
stc
ljmp
das
iret
lods
inc
ljmp
or
stc
test
pop
test
pop
xchg
imul
fdivrl
fists
subb
movsl
push
insb
call
xor
cmp
insl
adc
adcb
mov
mov
testl
sub
clc
jl
mov
push
icebp
cmpsl
sub
mov
mov
pop
out
popa
mov
xchg
fstl
mov
into
xchg
shrl
test
scas
int3
loopne
imul
bts
lods
adc
mov
jg
lret
test
jo
cmp
loop
and
idivl
mov
popa
adc
pop
dec
rorb
sahf
and
das
addr16
pop
out
jae
sbb
inc
push
sti
push
xlat
dec
sub
leave
lods
add
add
xor
dec
or
std
push
mov
stc
loope
lcall
cmp
sub
dec
pop
shrl
xchg
inc
fistpll
jo
jmp
xchg
mov
mov
add
push
push
and
cmp
adc
add
sub
fdivrs
adc
das
inc
push
ss
out
sub
add
sub
xor
es
push
inc
in
xor
inc
popa
mov
jecxz
mov
int
inc
rcll
jecxz
pop
mov
popf
push
das
jmp
ret
ja
lods
in
xchg
iret
jle
cmp
inc
pop
dec
cmpsl
lods
mov
pop
adc
stc
pop
add
mov
pop
lahf
xchg
lods
test
scas
popf
fsubrl
pop
stos
fwait
sub
cmpl
sub
shlb
mov
add
ljmp
push
leave
fistl
push
sbb
daa
or
fistpl
in
enter
sbb
jle
push
cli
imul
movswl
and
jnp
ret
out
add
pop
cli
es
mov
push
xor
mov
xor
int
pusha
aad
leave
pop
cmc
insb
sbb
loopne
xor
cli
push
outsl
pop
sti
mov
mov
lret
lahf
ret
or
daa
mov
mov
js
sbbl
enter
rorl
xlat
out
mov
inc
jbe
insb
push
pop
mov
sub
fistpl
push
ret
push
add
xchg
call
in
push
push
adc
jmp
sahf
sbb
mov
mov
sbb
ds
aad
mov
add
or
dec
outsb
repz
dec
les
pop
dec
lahf
mov
push
shll
stc
or
rcrb
daa
scas
push
filds
cld
outsb
fisubrl
pop
fisubrs
mov
lret
cld
cmp
push
shll
lods
xor
scas
xchg
sti
hlt
jne
adc
or
cmpsl
in
push
and
sub
int
scas
int
in
sbb
fnsave
repnz
out
push
lods
xor
adc
or
inc
adcl
jb
pop
add
or
cmc
les
mov
or
in
push
mov
mov
ds
pusha
mov
arpl
arpl
add
xchg
fldl
leave
aaa
sbb
or
add
idivb
or
and
cmp
mov
xor
loope
stos
jmp
xchg
sbb
pop
push
mov
daa
lret
out
mov
and
mulb
mov
add
pop
sub
loop
clc
push
jne
or
fwait
sbb
lods
popa
push
imul
push
mov
mov
push
pop
int
dec
adc
cs
lahf
sbb
mov
adc
adc
test
push
xchg
addr16
outsl
arpl
in
test
push
icebp
sub
and
adc
or
mov
js
push
mov
adc
insl
xchg
stos
in
xor
adc
mov
sahf
inc
test
xlat
mov
sub
mov
push
cmpsl
insb
ret
cld
into
test
inc
mov
shl
insl
or
mov
push
pop
stos
push
ljmp
xor
add
xchg
mov
push
sarl
gs
dec
enter
adc
cmpl
aam
and
xchg
xchg
test
in
insl
mov
cwtl
subb
add
test
daa
xor
mov
jg
xchg
mov
mov
mov
sti
inc
mov
out
aas
lods
mov
iret
leave
adc
sub
sbb
cmp
out
sub
push
cli
pushf
and
mov
sbb
les
push
xor
cmp
mov
clc
push
test
jne
add
aaa
sti
push
fimull
sbb
outsb
push
and
jge
pop
aam
mull
add
add
shrb
lcall
mov
dec
or
orb
or
int3
lods
fwait
sahf
sbb
and
push
fmuls
iret
int3
lods
xchg
add
rorl
cmp
dec
push
js
ja
imul
mov
inc
jg
and
push
jae
jo
ss
cmp
push
pop
mov
and
lods
push
popf
in
bound
jbe
pop
int
xchg
mov
inc
subl
nop
sub
inc
push
and
mov
jae
sahf
jmp
push
push
adc
test
cmp
cmp
mov
push
clc
mov
andb
popf
shl
int3
sub
outsb
imul
dec
and
je
xlat
sub
cmp
or
adc
adc
xchg
push
das
jb
scas
add
out
mov
aas
xor
mov
in
mov
hlt
mov
dec
popf
push
pop
scas
xchg
mov
cmp
icebp
adc
aam
adc
mov
pop
sub
das
pop
xor
jp
in
outsl
sub
push
sub
inc
lahf
xlat
testl
fdivr
daa
add
jecxz
or
sub
adc
repz
dec
push
jne
ja
pop
mov
push
dec
jo
sbb
subl
aaa
push
and
dec
rorl
pop
test
aaa
imul
jmp
mov
sbb
fisubl
inc
xor
das
or
stc
loopne
mov
test
sbb
fisubl
dec
pop
repz
jle
sbb
cmc
pop
push
movsl
loope
lea
ss
in
out
fldl2e
movsl
clc
addl
jo
outsl
insb
fidivs
adc
and
mov
pop
cwtl
mov
xchg
popa
mov
push
aaa
and
cltd
clc
mov
sub
xor
mov
out
stos
outsl
jbe
xchg
dec
dec
int
dec
sbb
sti
add
pop
scas
pop
inc
imul
ljmp
aas
cmp
popa
push
popf
cmpb
cmpsl
sbb
xor
mov
aad
mov
mov
pop
mov
jge
mov
inc
sti
add
push
outsb
movsb
icebp
sar
rorb
xor
xchg
addr16
js
pushf
pop
daa
aas
xorb
mov
cmp
ss
cli
xchg
enter
push
dec
pop
fildl
dec
int3
lods
and
enter
adc
imull
test
scas
lea
jg
cld
mov
fwait
dec
push
sub
cmpsl
or
cmc
inc
lahf
rolb
shlb
mov
push
xorb
push
jno
lea
rcrl
scas
add
aam
jnp
add
pop
xor
test
pop
roll
test
jl
pop
std
push
xchg
mov
decl
loopne
sub
mov
sti
inc
jns
iret
dec
fwait
shrd
inc
movsl
xchg
jl
lea
xor
lret
xchg
fs
repz
xlat
lods
jae
jl
lods
xchg
loopne
jge
mov
mov
or
imul
sti
inc
fisubrl
int3
and
ljmp
inc
popf
add
pushf
js
jge
pop
mov
sub
xchg
mov
add
sub
mov
arpl
mov
sbb
fwait
dec
sub
and
push
mov
addl
jnp
mov
and
push
hlt
rcr
imul
add
mov
out
mov
in
sub
lret
jnp
lods
sbb
dec
jecxz
lahf
xchg
or
mov
pop
add
push
push
push
jg
sbb
pop
adc
or
sub
jae
imul
sahf
rorb
pop
enter
mov
repz
insl
leave
lahf
jmp
sbb
sub
adc
push
mov
pop
and
leave
push
fs
fidivrl
pusha
insb
jb
mov
push
loope
fmuls
or
xor
xchg
aaa
dec
shrb
cmp
aas
ficoms
ret
push
fwait
cs
bound
mov
or
adc
dec
mov
ss
rclb
lgs
xchg
cwtl
pop
jmp
jo
outsl
pop
xchg
lock
mov
loopne
outsl
push
pop
lds
and
mov
or
push
out
xchg
into
pop
adc
iret
out
andl
jp
push
mov
jo
xchg
fdivrl
mov
fistl
mov
inc
adc
jb
sbb
cmpl
into
jmp
mov
std
loop
lcall
outsb
sbb
sub
dec
ljmp
out
jge
out
jmp
mov
mov
jmp
dec
loope
pop
mov
pop
movsl
in
add
jb
in
mov
insl
mov
stc
mov
in
lock
loop
mov
adc
xchg
dec
aam
stos
fnstenv
cmp
jge
add
imul
cli
fnstcw
or
jge
out
icebp
sub
iret
sbb
out
sub
mov
mov
dec
das
repz
cmp
sti
les
addr16
dec
push
lret
xchg
pop
notl
mov
dec
jbe
pop
dec
insb
sub
out
movsl
scas
cmpb
iret
subl
or
cmpsl
lock
or
xchg
lods
push
adc
sbb
lea
cmpsb
jbe
or
inc
xchg
sbb
fnstcw
out
int
pop
xor
lods
js
mov
xchg
push
jnp
ret
dec
cmp
sar
test
add
or
add
push
mov
icebp
adc
in
jmp
mov
mov
push
add
mov
add
addr16
bound
push
icebp
and
push
and
add
xchg
mov
xchg
inc
je
xor
das
test
adc
mov
mov
cmp
pop
xchg
call
push
ss
mov
push
lea
inc
xchg
jo
jo
stos
icebp
inc
and
rorb
nop
or
subb
dec
inc
gs
cmpsl
pop
xchg
pop
push
sub
mov
fwait
aam
roll
xor
sbbl
inc
cmpb
mov
jb
pop
imull
sbb
sub
adc
xor
push
jbe
ss
mov
sbb
aaa
out
jo
xor
jg
fisubl
add
jo
pushf
add
or
inc
scas
mov
outsl
mov
dec
dec
lret
addb
das
pop
dec
sti
xchg
ret
jge
xchg
fs
cwtl
sub
stos
jbe
stc
and
popa
and
adc
push
and
in
mov
sarb
bound
fadds
dec
sub
mov
mov
push
mov
or
mov
push
jl
mov
jge
inc
cmp
mov
push
cpuid
sbb
lahf
jp
inc
add
pop
mulb
mov
sahf
cld
mov
lock
push
fisubrs
fisttpll
sub
rclb
inc
call
test
sbb
inc
sbb
nop
push
repz
xor
push
insb
lock
movsl
or
jbe
mov
popf
add
push
pusha
mov
outsb
clc
pop
fs
movsb
xor
cmp
inc
pusha
cmpsb
test
test
bound
or
sbb
cs
stos
push
xor
mov
jl
sub
jl
call
xchg
ja
dec
mov
nop
int3
push
jae
negb
imul
or
stc
bound
adc
pusha
fcoml
jecxz
andl
mov
addr16
addl
dec
add
int3
xchg
fildll
add
mov
rcll
fistl
mov
jbe
adc
loope
jb
or
cmp
push
lods
fsubrl
es
jnp
mov
pop
aas
js
out
dec
shl
ret
xorl
mov
add
xchg
loop
xlat
int
and
inc
out
shrb
mov
sub
dec
das
popa
push
popa
ret
repnz
mov
xor
dec
jl
daa
xor
xor
shlb
push
dec
lret
adc
fcomps
add
jne
sti
xlat
mov
and
inc
xchg
test
adc
mov
xor
in
movsl
rcll
mov
sbb
inc
inc
xchg
mov
mov
les
push
add
push
lahf
xchg
push
test
xchg
das
icebp
and
or
in
dec
bound
pop
test
pop
js
sub
mov
dec
mov
stos
pusha
adc
pop
xor
fimuls
ds
mov
inc
xchg
jb
dec
dec
mov
mov
js
xchg
add
jns
bound
adc
pop
pop
movaps
cs
ss
pop
sub
dec
pop
mov
xor
test
mov
push
lret
cmp
jb
push
mov
xchg
cmp
rorb
dec
jmp
enter
loope
outsl
enter
sbbl
xchg
lret
mov
int
inc
pop
pushf
bound
add
std
xor
xor
adc
xlat
push
lds
test
add
cmp
repz
sub
imul
aam
fmull
and
shll
xor
pop
clc
pop
push
popl
cmp
mov
add
push
or
mov
repz
cli
pop
mov
xchg
popf
sbb
mov
or
inc
jle
cmpb
data16
mov
mov
enter
push
jns
inc
imul
jmp
idivb
inc
dec
adc
imul
fsubr
mov
sub
stc
sbb
push
push
shrb
cmpl
into
push
addr16
sbb
mov
insb
loopne
mov
imul
pop
and
jbe
mov
pop
add
dec
push
dec
add
ds
fcmovnu
rorl
inc
scas
mov
and
sbb
gs
push
cmp
inc
sub
xor
loopne
mov
pop
mov
pop
push
mov
add
stos
stos
cmp
and
nop
xchg
dec
push
add
shll
adc
loopne
scas
mov
push
fcomps
outsl
pushf
out
das
fs
clc
das
loop
leave
cmp
mov
mov
sub
jnp
mov
mov
in
rep
mov
repz
repz
ret
and
jb
arpl
dec
scas
pop
popf
push
stos
mov
xor
iret
call
popa
xor
pop
sbbl
adc
mov
in
push
fcoml
data16
out
cmpsl
in
jg
in
lods
in
or
jecxz,pt
mov
or
mov
fiaddl
push
adc
mov
inc
in
scas
lods
mov
cmp
adc
rorl
jns
jg
add
dec
dec
cmc
pop
jecxz
mov
mov
mov
test
mov
std
stc
and
jle
lret
and
inc
call
push
push
or
js
test
pop
xchg
enter
or
scas
inc
testb
sbb
cmc
leave
test
mov
scas
sub
jne
or
push
fwait
or
into
or
jl
in
fsubr
in
inc
addr16
xchg
mov
mov
add
xchg
sbb
jae
out
stc
mov
xchg
rclb
adc
sub
aad
rorb
pop
fcomps
jno
xor
push
aad
adc
mov
jl
mov
ja
jg
jmp
mov
or
shlb
inc
mov
xchg
dec
pusha
inc
mov
or
in
pushf
jne
dec
adc
aad
xor
mov
movsl
or
dec
stc
dec
mov
lret
xchg
sarb
loop
cs
mov
jmp
aad
xchg
and
mov
jp
mov
adc
jo
or
adc
js
in
xlat
xlat
jno
push
mov
or
cld
shlb
leave
lock
out
push
and
sub
cmc
sbb
inc
aaa
les
aaa
xor
push
jmp
sub
pop
sub
dec
dec
call
add
fidivrl
mov
stc
fmuls
cwtl
dec
ret
push
ja
int
adc
jo
sahf
push
addr16
sub
std
cmp
sbb
fcompl
insb
iret
mov
jo
rcrb
lods
pop
dec
movb
gs
push
lret
cltd
ja
and
fstpl
or
fldenv
inc
into
int
sub
fwait
lods
xlat
ret
lret
hlt
lods
dec
jb
cltd
mov
mov
xchg
push
das
and
idivl
cli
mov
ja
jnp
mov
repz
sub
push
jnp
mov
out
ja
xchg
jno
mov
sbb
test
push
mov
xchg
cltd
add
cli
xchg
xor
std
int3
jecxz
fld
pop
bound
pop
mov
adc
jg
mull
ret
popf
shll
push
mov
cmp
bound
jb
ljmp
stos
test
pop
test
stc
call
fs
push
sbb
add
or
and
dec
dec
mov
out
fwait
push
ss
xchg
addr16
cmpsb
jbe
add
and
test
mov
inc
aas
aas
and
xor
fwait
inc
sti
sub
cwtl
pop
mov
rolb
mov
mov
dec
data16
int3
jmp
inc
inc
lret
sarl
mov
mov
out
imull
lea
add
fcompl
push
push
pusha
hlt
adc
mov
mov
cld
insl
add
mov
cmp
gs
fistl
leave
lret
mov
movsl
sub
mov
mov
adc
out
xor
arpl
int3
push
mov
xchg
aas
sub
mov
in
xchg
out
dec
jge
repz
std
inc
xor
jp
enter
imul
repnz
pushf
sub
pop
push
jge
cwtl
test
std
dec
add
mov
sub
je
nop
cmp
push
mov
int
xchg
jecxz
inc
insb
xor
mov
mov
jecxz
lret
mov
mov
mov
jne
and
popf
rol
jbe
lds
inc
ror
dec
mov
push
sbb
xor
push
aaa
cmp
out
mov
pusha
loop,pn
in
and
push
add
jmp
mov
sub
jo
lods
or
sbb
lcall
negl
mov
lods
jg
sub
stos
inc
testl
stc
or
test
popa
test
pop
and
dec
mov
leave
sbb
int
fadds
cld
push
pop
out
mov
mov
shlb
add
adc
clc
orl
je
movsb
push
fcomip
xchg
movsl
and
clc
addl
jecxz
jno
loopne
ljmp
dec
mov
sbb
mov
push
xchg
in
mov
leave
outsl
mov
push
mov
scas
shlb
es
xchg
add
inc
sbb
xchg
call
ficoml
aam
jne
push
jnp
inc
mov
cld
imulb
push
mov
xchg
popf
pop
xor
jb
aas
sub
test
repz
aaa
xchg
rolb
cmpsb
loopne
sbb
push
push
inc
xor
cmp
xorl
inc
add
sub
lahf
inc
and
nop
inc
aam
adc
out
sbb
jo
clc
stos
aam
hlt
lock
out
js
js
scas
adc
dec
lret
pop
sahf
or
int3
lahf
rclb
fisubl
inc
jl
cwtl
inc
or
std
pop
inc
fldenv
and
cltd
jle
pop
cmp
cmpsb
ret
and
add
es
sub
ljmp
dec
fwait
das
nop
push
scas
or
push
sbb
push
xor
cmp
stos
and
sub
jb
scas
aad
pop
out
pop
cld
or
xor
das
sbb
mov
add
daa
out
xchg
add
cmp
sbb
and
xor
das
mov
es
rcll
push
xor
test
pop
iret
popa
repz
or
jnp
push
push
in
scas
xchg
cwtl
ljmp
mov
cmc
mov
cmp
adc
repnz
in
mov
adc
dec
scas
loopne
ja
mov
xchg
fs
in
cmc
xchg
cltd
pop
dec
test
pop
lret
sbb
loope
clc
js
mov
clc
pushf
xchg
jge
ret
push
aas
js
nop
icebp
inc
iret
or
add
pop
dec
lods
mov
out
pop
sbb
loope
stos
jmp
inc
push
inc
add
lods
dec
mov
fldt
subl
push
adc
bndstx
adc
imul
shrb
in
adcb
icebp
mov
sbb
fisttps
xor
gs
movsl
mov
lret
mov
fistl
jno
and
sbb
xchg
ja
call
xor
mov
ja
jne
das
pop
rcr
cli
jle
icebp
pop
dec
hlt
lea
orb
add
sbb
push
icebp
addr16
ds
xor
divl
cli
mov
in
mov
out
dec
arpl
mov
add
push
xor
subb
jge
sbb
fsubrl
add
or
popf
int
insb
cmp
in
aas
outsb
ds
jnp
into
jecxz
or
cmp
imul
mov
and
stos
mov
es
add
out
inc
jmp
cmp
adcb
into
push
mov
sub
addl
jbe
and
jns
inc
jmp
in
mov
es
pop
in
sub
mov
xchg
lcall
sub
inc
or
shll
ret
repnz
mov
std
inc
push
fdivrs
jl
xor
sbb
xor
cmpb
push
mov
rclb
daa
aaa
in
movsb
fsub
mov
movups
in
xlat
cmp
call
xchg
lea
lcall
sbb
popa
xor
stos
or
test
insl
jne
mov
mov
push
and
push
sub
or
test
int3
or
lds
ret
dec
gs
std
iret
mov
push
cli
aad
lock
xor
fwait
test
xchg
aaa
cwtl
bound
imul
loope
incl
imul
add
or
sub
je
mov
aam
sbb
xchg
fmuls
and
sub
js
inc
cmc
jecxz
cmp
mov
stos
lret
rcll
mov
dec
adc
xor
cmp
lahf
inc
out
jb
movsb
push
pop
shl
pop
lcall
incl
imul
sbb
les
ljmp
scas
mov
pop
adc
and
adc
gs
int
bound
ja
leave
pop
jge
insb
sub
test
ds
pop
adc
cli
pop
pop
gs
xchg
jp
je
sub
clc
in
mov
les
mov
cmp
xchg
pushf
dec
es
fucomp
fimull
pop
pop
cmp
out
add
setge
scas
out
lock
cmc
mov
push
mov
js
imul
dec
mov
mov
mov
sbb
ss
das
xchg
jle
popf
stos
and
lock
enter
mov
cmp
cmp
jnp
jnp
cmc
mov
shlb
gs
iret
inc
inc
pushf
fistpll
mov
sub
iret
movsb
dec
mov
daa
xor
repz
and
jne
mov
mov
or
push
or
mov
and
insl
sarb
xchg
int3
cmp
xor
xchg
fistl
loope
daa
negl
fs
fiadds
pop
mov
sbbb
xor
pop
cmp
lcall
sub
mov
xor
inc
xchg
js
sahf
mov
imul
ret
sbb
mov
xlat
int3
mov
cmp
mov
subb
and
mov
lea
cmp
rclb
inc
fidivs
fmuls
nop
cmp
mov
inc
notl
cld
dec
sahf
inc
jnp
into
inc
scas
pop
mov
push
test
adc
shlb
push
jl
js
mov
out
or
subl
jns
cli
pushf
mov
in
jl
cmc
movsb
dec
sbb
jae
rorb
adc
lods
inc
outsl
xchg
out
int
scas
sub
adc
dec
add
xor
mov
sub
loope
jp
cs
test
mov
dec
sbb
in
mov
insl
pop
push
and
loopne
inc
cwtl
or
popf
xor
mov
dec
sub
sbb
mov
das
nop
inc
lea
jmp
push
test
sahf
popf
movsl
mov
movsl
jae
mov
jge
sahf
pop
ljmp
jp
xchg
in
pop
loopne
sub
push
pop
out
lcall
sahf
std
xchg
sbb
mov
pop
jae
lret
mov
stos
jns
stos
xchg
xchg
cld
sbb
adc
scas
out
aas
push
sub
les
stc
xor
ss
jnp
out
add
lret
mov
xor
imul
scas
or
mov
adc
mov
pop
orl
pop
stos
or
ss
out
je
cld
and
cmp
fisubrs
jmp
lcall
cmp
mov
and
adc
jmp
shr
lcall
popf
outsl
sub
xchg
xchg
inc
idiv
push
xor
jecxz
bound
out
mov
mov
js
dec
fistl
adcl
xchg
sbb
push
ljmp
add
dec
addr16
jb
pop
push
movsb
icebp
cmp
adc
push
cmp
scas
addb
shl
mov
popf
fistpl
outsl
scas
mov
xchg
lock
test
inc
cmp
mov
push
fildll
and
xorl
ret
test
pop
add
test
ja
mov
mov
lods
shl
xchg
jl
or
xchg
ss
test
sbb
in
push
inc
fiaddl
ljmp
push
and
scas
sbb
lret
xor
mov
mov
push
pop
or
pop
hlt
bound
fsts
lahf
in
rorl
jns
pop
mov
fsubs
fwait
pop
sbb
or
shlb
inc
lret
mov
inc
sub
add
sar
fisttpll
inc
xchg
jne
icebp
loop
xorb
rcl
insb
and
insl
mov
loope
jle
insl
scas
inc
cmp
add
pushf
aaa
pop
jmp
mov
sub
sete
add
xchg
popa
fstpl
cwtl
nop
hlt
or
jbe
test
adc
xchg
arpl
jge
mov
mov
xor
dec
sbb
daa
jmp
call
mov
movsl
jl
bnd
rol
add
mov
xlat
xchg
rcll
adc
push
adc
and
std
pop
push
rolb
jns
test
lods
pop
pusha
push
inc
xchg
imul
adc
adc
cld
fidivrs
insl
sbb
xorb
lea
jnp
xchg
das
cmp
xchg
leave
inc
push
and
push
pop
mov
imul
inc
cmp
leave
mov
add
xchg
jecxz
push
adc
ss
cmp
je
and
inc
stos
xor
sbb
inc
dec
mov
shlb
mov
mov
jbe
xlat
lret
loope
aam
rorl
mov
idiv
jae
dec
in
cmp
outsl
jmp
adc
jno
icebp
mov
xchg
xlat
pop
ret
out
add
inc
adc
pop
push
add
adc
sbb
mov
arpl
mov
aaa
lds
test
cs
xor
mov
enter
lock
inc
movsl
in
loope
cmp
jp
cmp
int3
fwait
scas
hlt
ljmp
sbb
adc
add
push
xchg
in
or
jmp
xchg
mov
test
mov
lods
adc
mov
sub
sarb
push
mov
mov
mov
cmp
add
imul
pop
leave
mov
sahf
leave
sub
mov
mov
and
jl
iret
in
pushf
jp
sbb
mov
out
in
sarb
add
rcrb
dec
lret
and
dec
ss
in
je
ficoml
mov
popa
xor
dec
inc
fiadds
mov
sub
push
xchg
test
mov
nop
into
xchg
inc
dec
lods
sti
ret
fnstenv
sub
xchg
xor
mov
pushf
ret
jge
lcall
mov
cmp
push
sbb
inc
lods
iret
sbb
adc
outsl
or
jae
in
sub
sub
and
rorl
fildl
push
aaa
outsl
xchg
or
enter
jns
and
repz
push
mov
test
sbbl
pop
dec
loopne
add
jge
lods
or
sub
out
add
inc
das
pop
inc
sub
jp
fcmove
dec
sbb
dec
push
and
leave
ficompl
xor
mov
pop
cs
psrld
pop
add
push
movsl
inc
dec
out
adc
jecxz
mov
fs
mov
inc
rcrb
mov
push
xor
xchg
in
stos
loop
xor
repz
pop
js
enter
in
ret
jno
jne
jo
jae
lods
popa
push
sbb
notb
test
sub
out
loope
cmp
mov
push
mov
fstps
lahf
fcoml
inc
mov
testl
or
sbb
pop
mov
lods
adc
pushf
cmp
fildll
dec
adc
mov
ljmp
outsb
cmp
mov
mov
xor
insb
inc
jecxz
pop
sub
mov
out
sub
sarb
mov
mov
mov
adc
mov
inc
push
popl
test
xor
int
and
in
push
ja
push
mov
icebp
cmp
add
fstps
lret
cmp
sbb
cmp
mov
ret
mov
cmpl
es
popf
mov
iret
pop
jg
adc
leave
pop
repz
popa
test
aaa
add
sti
mov
mov
lods
xchg
xchg
xchg
dec
mov
jecxz
xorl
dec
mov
out
insb
jmp
popa
add
ret
cltd
clc
cmp
imul
adc
dec
inc
cli
mov
cmp
xchg
fidivrs
or
lcall
pop
or
inc
or
ror
cs
repnz
sahf
xor
cmc
iret
rol
and
dec
sub
xor
ja
pop
imul
popa
mov
pop
and
fimuls
xchg
mov
sbb
push
mov
push
out
pop
xor
push
movsb
orl
xchg
ss
inc
adc
aad
cmp
mulb
jp
adc
xlat
xchg
lret
inc
aaa
data16
sub
mov
stos
rolb
push
scas
pop
out
fdivr
iret
dec
sub
ljmp
cmp
jmp
sti
mov
jae
cs
fistps
mov
stc
inc
dec
xchg
xor
pusha
push
sbb
in
jbe
inc
push
lret
pop
jb
mov
add
xor
aam
and
ja,pn
mov
or
imul
xchg
out
pop
jo
arpl
mov
icebp
cs
imul
mov
cmp
sub
jno
lock
dec
lea
test
ds
mov
cwtl
mov
push
cmpsb
xchg
xor
imul
adc
mov
ljmp
adc
inc
push
dec
fcmovnb
jmp
imul
dec
mov
push
jmp
stos
imul
iret
mov
pushf
stos
pop
sahf
fisubrs
lea
mov
mov
xchg
pop
cmc
movsb
sahf
push
pop
insl
xor
pop
sub
pop
xchg
fwait
and
mov
mov
push
cwtl
pushf
iret
xor
or
adc
xor
scas
scas
xchg
fsubs
bound
inc
mov
fdivrs
cmp
lock
xchg
push
inc
mov
push
adc
shll
arpl
ficomps
idivb
inc
movsl
sub
iret
or
or
into
add
jb
fcom
add
push
in
or
out
sbb
std
push
insb
stos
flds
fs
jg
inc
pop
call
jbe
and
adc
cld
repnz
xchg
and
inc
imul
jae
mov
xchg
das
add
lret
and
out
std
lret
cmp
hlt
mov
push
xor
fsub
dec
mov
in
out
mov
and
js
jnp
ds
jae
loope
out
xlat
test
cmp
xor
hlt
xor
mov
dec
out
or
incb
xor
sti
mov
push
hlt
test
pop
xor
jg
push
mov
es
hlt
inc
mov
jmp
fwait
push
dec
hlt
scas
dec
sub
rorb
cmc
repz
cmp
scas
pop
add
and
jne
mov
sbb
push
cmp
sbb
ret
push
push
dec
mov
or
push
adc
sbb
cltd
jecxz
dec
inc
fwait
sub
sbb
cmp
enter
mov
mov
into
lret
je
pop
cli
cli
mov
incb
pop
mov
orl
xor
or
rcll
fsts
lds
and
dec
insl
mov
cltd
getsec
add
add
pop
inc
add
adc
fiadds
je
mov
loopne
or
cmp
jmp
xor
and
mull
adc
jmp
mov
fnstenv
outsl
pop
mov
repnz
sbb
mov
hlt
mov
cmp
xchg
dec
push
js
dec
inc
test
or
sub
imul
inc
push
aam
imul
mov
dec
lods
sbb
scas
jl
sub
fs
jl
cmp
jmp
enter
in
inc
lahf
lock
xor
mov
andl
fmull
pop
mov
mov
movsb
xchg
jo
pop
push
mov
ret
sbb
add
add
sbb
shr
and
insb
add
insb
ffreep
dec
mov
pop
ds
fs
dec
jne
in
repnz
popf
sbb
jg
rclb
or
or
inc
xor
xchg
call
rol
imul
xchg
test
mov
cmp
daa
test
dec
lods
fcompp
inc
addl
sub
lcall
dec
mov
popa
jae
out
imul
fbstp
loope
inc
push
jae
fwait
hlt
xor
shl
insl
push
in
sub
lret
ds
rorl
xchg
add
es
insl
lods
mov
shlb
inc
enter
daa
mov
ljmp
jns
loopne
daa
dec
push
repnz
pop
dec
adc
je
and
cmc
fstpl
fcoml
sbb
or
ds
mov
mov
xchg
outsl
pop
mov
and
fstpt
push
movsb
pusha
or
into
adc
cli
xchg
test
arpl
roll
mov
xor
pop
xchg
fcmovnu
push
andl
mov
mov
lret
insb
sub
andb
outsb
and
rcrb
adc
fimull
dec
ja
push
mov
cmp
cmpsl
mov
leavew
cli
xchg
push
dec
call
push
mov
adc
daa
int
aad
or
push
xchg
or
xchg
mov
lods
cmp
add
repz
fwait
cmp
push
mov
adc
jno
mov
into
mov
or
pop
mov
fisubs
push
xchg
inc
hlt
jb
outsb
or
lock
sbb
lret
iret
ret
popf
inc
push
sub
push
sub
repnz
xlat
imul
xchg
popf
insl
cmpsl
fcompl
cmpl
lcall
fldl
mov
js
xchg
and
icebp
add
test
pop
repz
nop
outsb
jb
pushl
inc
clc
xor
test
pop
or
mov
mov
sbb
mov
lock
mov
movsb
sub
push
xchg
out
add
mov
jbe
cli
xor
cltd
dec
mov
lods
test
pop
push
testl
and
fs
cmp
and
inc
enter
out
adc
pop
repnz
dec
in
lods
arpl
lahf
mov
mov
sub
mov
lea
int
sub
pop
sbb
cmp
mov
jmp
inc
ror
nop
mov
jp
scas
in
jl
aaa
and
gs
push
xorl
lret
loop
cmp
adc
sbbb
out
imul
test
js
popa
idivl
movsl
add
addr16
jb
jo
js
cltd
fdivs
mov
mov
stos
mov
pop
push
xor
outsb
outsb
movsb
push
out
sbb
jg
sbb
inc
inc
les
je
lods
lret
outsl
and
and
out
insl
dec
xor
or
sbb
fs
dec
das
insl
sbb
mov
in
mov
mov
jne
mov
aad
xchg
mov
and
mov
rol
mov
or
mull
sahf
and
cmp
pop
daa
sti
xor
testl
ficoms
sbb
sbb
mov
mov
into
and
inc
jle
enter
pop
les
clc
push
insl
mov
ljmp
addr16
push
call
xrelease
sub
shll
lret
ret
pop
dec
ss
mov
out
lret
xchg
inc
ss
sbb
in
jno
pusha
sbb
pop
push
push
lock
cmp
aad
test
aaa
cmpsl
mov
xor
cmpxchg
xor
mov
addr16
leave
mov
push
and
and
cmp
inc
push
cmpsl
lods
or
add
loope
dec
ja
gs
add
dec
cmpsb
sbb
or
push
pop
or
jecxz
dec
aad
mov
add
test
mov
mov
sbb
repnz
adc
or
imul
iret
cmp
lcall
sub
xchg
or
mov
pandn
imul
sbb
ljmp
xchg
test
sahf
push
inc
inc
add
push
adc
xor
test
imul
pop
int
fildl
sbb
and
pop
mov
mov
and
or
leave
test
push
xlat
and
cmp
aam
sub
mov
mov
das
pusha
arpl
sub
pop
push
je
cmp
pop
sub
aad
jge
push
stos
sbb
aad
repnz
push
jne
out
adc
adc
test
mov
out
fstpl
xchg
repz
jb
shll
mov
scas
and
or
testb
fists
push
inc
popa
fisubrl
dec
xchg
xorb
in
popf
sbb
and
andl
and
hlt
call
orl
mov
jae
xchg
push
stos
xchg
dec
in
outsb
rcll
inc
xchg
sbb
fdivrs
mov
movsl
jg
mov
out
and
lds
inc
into
push
xor
mov
cld
mov
mov
jg
inc
push
and
inc
shrb
push
dec
aas
movl
xor
fdivl
push
inc
popa
mov
sub
js
rol
in
test
jecxz
stos
out
sbb
push
rorb
push
pop
lret
inc
pop
mov
cmp
xchg
mov
insb
xchg
mov
mov
mov
lea
inc
int3
xchg
and
adc
sahf
in
insl
ficompl
cmpsb
cwtl
ds
lds
out
and
rol
or
fnstcw
push
iret
fsubl
arpl
xchg
push
ljmp
cltd
xor
test
ljmp
adc
aas
lods
jecxz
es
add
das
dec
negb
mov
xor
xchg
push
sub
loope
add
mov
fcomps
mov
out
bound
xchg
sub
hlt
adc
dec
mov
pop
sbb
pop
add
cmpsl
adc
cmp
movsl
xlat
jle
imul
insl
inc
sti
and
push
mov
dec
dec
inc
negb
or
push
testb
xchg
jge
or
rcrl
cltd
push
xor
add
shll
add
jae
mov
xor
xor
adc
cltd
fisubs
jb
sub
cs
inc
out
in
push
add
mov
in
mov
cmp
pop
lcall
mov
mov
mov
pop
pop
lret
mov
fwait
jg
cltd
cmpsl
in
or
jno
sub
mov
jb
insl
and
adc
inc
mov
jno
and
push
inc
mov
or
mov
pop
sbb
js
movsl
cmp
movsb
add
hlt
pushf
movsb
push
pusha
outsl
shlb
rcl
xchg
lods
xchg
jnp
or
in
lret
mov
sbb
movb
aam
pop
mov
mov
or
fwait
pop
xchg
loopne
das
inc
in
lods
mov
jae
dec
aam
adc
int3
sub
add
cmp
and
mov
push
ret
cmc
stc
hlt
adc
fiaddl
or
add
or
popl
fcmove
ljmp
jbe
sub
aaa
fbstp
inc
adc
inc
jp
mov
xchg
jb
ss
dec
in
aaa
jbe
call
cli
stc
mov
mov
cli
out
mov
les
mov
mov
movsl
jb
rcrl
inc
push
add
fdivr
jae
pop
aaa
test
test
xchg
sbb
js
pop
xor
pop
pop
outsb
popl
popa
into
cld
out
aad
dec
inc
repz
jp
sub
fidivl
popf
lea
mov
out
lahf
xchg
mov
push
add
jbe
xchg
aam
push
rcrb
subl
sbb
cmpsl
ficomps
testl
or
bound
jmp
addr16
mov
fsubl
and
shl
movb
js
bnd
and
loopne
sub
adc
jbe
out
dec
repnz
pop
push
adc
hlt
adc
push
mov
jl
xor
dec
ss
ja
pusha
jg
ljmp
mov
pop
out
pop
xchg
in
cmp
sarb
dec
sbb
mov
mov
fld
jo
mov
lea
test
shlb
xor
jp
jp
mov
pop
sar
mov
outsb
int3
sub
mov
ja
pop
lods
ja
adc
jbe
popf
sbb
fbstp
mov
add
add
popa
fxch
icebp
and
shll
cmpsb
pusha
mov
mov
daa
sub
shll
je
mov
mov
push
shl
or
dec
test
or
jno
outsb
aad
push
call
mov
leave
cmpsb
sub
ret
push
pushf
ljmp
ja
pushf
push
inc
mov
fists
aad
pop
push
call
sub
ret
cmp
push
lahf
ljmp
les
pop
mov
sub
cmp
mov
hlt
push
nop
out
or
push
jbe
shll
push
mov
jmp
ds
sbb
add
cld
imul
stc
pop
jnp
aaa
cmpsl
dec
mov
fwait
sub
in
jbe
aaa
ss
jne
sub
in
stos
les
test
pop
lahf
mov
das
jnp
pop
mov
dec
ret
fs
mov
lahf
lods
bound
jmp
inc
pop
jge
or
rclb
movl
addr16
cmp
cld
xchg
inc
mov
cmp
pop
and
inc
add
imul
push
sti
xor
popa
jb
mov
or
jae
jle
xor
and
hlt
pop
jns
sbb
ds
mov
jno
das
std
mov
xchg
and
int
xor
add
int
pop
into
pusha
lods
dec
movb
pop
enter
push
and
hlt
sbb
cmp
xchg
pop
orl
fdivrs
add
and
mov
add
shll
sti
out
test
addl
sbb
out
fsubs
jmp
outsb
lock
lcall
sbb
jle
shl
sbb
mov
imul
lcall
dec
out
notb
in
and
mov
mov
jnp
pop
hlt
sbb
adc
cmovl
scas
lds
rcl
enter
adc
nop
clc
adc
test
jbe
cmpsl
mov
xchg
mov
nop
or
pop
mov
cmp
ljmp
mov
mov
daa
xor
push
adc
dec
aad
pop
jmp
inc
inc
out
nop
loop
arpl
xchg
xor
cld
lahf
jl
popa
xchg
push
mov
adc
aad
adc
xchg
leave
imul
ljmp
mov
dec
xlat
fdivl
xor
cmp
mov
jnp
aas
scas
outsb
push
mov
xor
or
sbb
test
dec
dec
sahf
jae
pop
mov
xchg
in
inc
add
les
sub
subl
inc
pop
ljmp
pop
test
add
push
jmp
out
cmp
sbb
ljmp
cli
popf
jb
xchg
je
and
or
sub
icebp
cmpsl
sbb
push
rep
pop
loop
xor
cmc
jecxz
ja
mov
mov
sti
test
fldenv
xor
inc
xchg
out
sbb
in
lods
mov
pop
lock
adc
pushf
movsl
mov
out
cld
sub
mov
lea
lds
imul
fdivl
jnp
aad
and
incl
push
inc
in
clc
ret
jb
cmp
mov
cmpsl
pop
mov
and
cmpsb
popa
cmp
dec
mov
addb
adc
push
lahf
addr16
push
leave
xor
inc
push
incl
mov
add
sub
ret
mov
sbbl
xchg
in
cmp
sahf
xchg
ret
jae
or
and
mov
pusha
mov
lret
nop
lock
fwait
inc
pop
mov
xchg
jle
repz
int3
dec
in
cmpsl
test
sahf
add
sub
jne
loope
mov
jecxz
dec
cmp
and
mov
push
hlt
stos
or
ffreep
cmp
lods
test
lret
dec
lret
xchg
jbe
es
inc
lds
mov
loope
nop
fucom
inc
inc
pop
or
dec
sbb
enter
cmp
add
gs
insl
sti
mov
inc
mov
mov
cmp
mov
push
popa
mov
add
das
arpl
push
outsl
jb
int
dec
xor
xchg
jmp
push
push
jp
test
mov
mov
lcall
xor
adc
cmc
mov
fdivrs
dec
adc
mov
sbb
inc
mov
cmc
jmp
sbb
add
xchg
inc
jo
sub
and
fsubr
shl
stos
or
enter
popa
ja
popa
pop
outsl
sahf
loopne
lds
subl
das
mov
mov
pop
dec
adc
adc
push
add
or
cwtl
or
dec
dec
adc
add
jp
jno
or
inc
cmp
outsl
fs
cmpsb
sti
cs
lds
cmp
sbb
dec
out
nop
pop
int
dec
pop
fs
mov
rolb
xchg
dec
cmpsb
ljmp
repz
cmpsb
dec
gs
in
in
and
outsl
leave
inc
push
jge
push
jno
test
sarb
mov
iret
pop
cmp
and
cld
insl
pop
movsl
adc
pop
cmpsb
adc
dec
les
jle
adc
adc
stc
ret
movswl
sbb
cmp
push
adcl
fiadds
dec
movsl
jns
aad
and
jg
inc
negl
mov
jmp
jle
roll
aaa
xor
dec
outsb
xchg
adc
arpl
test
sbbb
js
loope
call
cmpsl
out
rep
vmovsldup
lods
dec
aam
pop
mov
jecxz
xor
test
fs
test
jl
scas
jg
enter
roll
call
cmp
scas
cmpsl
jnp
roll
jo
hlt
mov
push
add
xchg
arpl
sti
xor
dec
in
jp
aaa
xchg
mov
jmp
sub
or
in
negb
dec
jne
pop
mov
testl
xor
push
dec
stos
mov
ljmp
aaa
mov
pop
jbe
lahf
push
cmpsb
xor
mov
stc
lods
into
inc
jg
ds
ss
sub
mov
push
rcl
sub
push
pop
leave
jge
popf
inc
stos
sti
loopne
sti
insl
xchg
pop
cmp
mov
repnz
ficomps
adc
pop
scas
mov
mov
dec
dec
ret
sbb
in
jae
xlat
push
xor
stos
mov
pop
stc
ret
cmpsb
mov
pop
inc
cmpsl
dec
lods
or
aaa
jge
jno
std
mov
pop
mov
movl
cld
fimuls
xor
aas
adc
fdivrs
data16
ss
push
js
mov
fdivrs
pop
rol
aam
add
xchg
movsb
mov
mov
test
pop
mov
gs
pop
sbb
inc
faddl
daa
pop
lods
add
lds
mov
sbb
or
addr16
mov
cmp
cs
rcrl
adc
lods
xchg
mov
call
fdivrp
jge
aad
and
aaa
mov
popa
or
or
cmpsl
lock
sbb
icebp
ret
fs
mov
mov
and
out
or
iret
pop
cmpsl
rcrb
mov
add
jp
jmp
cwtl
sub
aaa
cltd
arpl
pop
mov
jnp
divb
pop
out
outsl
dec
out
outsb
pop
lea
pusha
aaa
and
mov
push
pop
andl
test
mov
lea
pop
inc
inc
pop
movsl
jecxz
cmpsb
andl
jae
sub
cmc
sub
into
and
or
out
mov
or
dec
int
lods
mov
int
mov
cwtl
inc
lock
orb
or
movsl
fdivrl
push
inc
iret
sub
sub
cmp
insl
les
inc
hlt
sbb
adcl
into
lahf
mov
idivl
popa
dec
outsl
mov
push
and
inc
pusha
jo
dec
mov
ljmp
clc
lods
test
cmp
cmp
adc
lret
jecxz
dec
mov
xchg
idiv
adc
stos
sbb
cli
int3
cmp
and
stc
xor
cmp
scas
dec
and
sahf
dec
xchg
cmpps
dec
hlt
ss
dec
adc
push
or
cld
cmc
loopne
cmpsb
outsb
lods
inc
inc
cmp
aam
or
or
and
push
cmpsb
loope
jno
into
lcall
xchg
and
inc
orb
sub
scas
daa
cmp
out
adc
imul
out
adc
jmp
push
aam
loopne
pop
adc
jns
cmpsb
inc
xchg
sbb
jecxz
sbb
aas
mov
mov
jnp
jns
mov
scas
fimuls
lods
imul
loopne
ss
push
jns
stos
into
repnz
testb
pushf
and
iret
les
jb
mov
push
div
sbb
leave
stos
cmp
mov
std
je
jne
dec
popf
mov
jecxz
rcrl
jbe
push
sub
and
addr16
jp
inc
push
fwait
insl
mov
inc
jecxz
and
out
sbb
pop
ds
sbb
xor
fisubs
stc
jns
xor
pop
adc
mov
inc
cmp
jnp
xchg
xchg
jae
movb
jle
mov
lds
insb
dec
push
xor
in
cmp
adc
sub
xchg
jns
imul
shl
push
adc
rorl
loope
mov
inc
jns
jmp
sub
jo
cli
rclb
and
clc
dec
mov
orb
stos
jae
fucomi
roll
mov
sahf
lds
std
sarl
incl
std
in
dec
dec
xchg
jns
mov
push
mov
sub
xlat
popf
js
pop
mov
fst
or
in
nop
cmp
sub
cltd
mov
je
repnz
jne
imul
pushf
add
repnz
sti
cmp
daa
dec
mov
loopne
sbb
add
mov
outsl
aam
data16
pop
bnd
int3
int
outsb
xlat
sub
in
pop
push
add
add
mov
ret
jnp
push
test
adc
loopne
inc
jb
out
loopne
xlat
cli
jge
dec
daa
mov
fimull
pop
xchg
bound
ss
out
testl
popf
fisttps
stc
addr16
filds
pusha
mov
and
ret
and
inc
push
dec
dec
call
sub
inc
stos
lcall
mov
jo
pop
sti
jnp
test
sbb
jbe
rclb
bound
js
inc
ljmp
cmpsb
pop
jnp
out
cmp
ficomps
daa
sbb
mov
xor
repz
bnd
and
dec
test
add
popa
jmp
cmp
pop
adc
ficompl
lods
push
stos
test
imul
les
push
shlb
pop
clc
push
lods
mov
lods
pop
ret
mov
mov
adc
jae
fs
js
sub
inc
jge
movsl
cmp
movb
adc
insb
mov
lret
cmp
cmpsb
or
inc
test
jb
xor
mov
das
mov
sbb
inc
pop
jecxz
scas
mov
out
into
xchg
sahf
add
imul
ficomps
mov
push
sbb
shlb
push
ror
in
jbe
and
cmp
xchg
push
mov
rorb
adc
mov
jo
adc
popf
jb
sbb
adc
xchg
fucom
lahf
inc
xor
mov
push
jmp
lret
repz
and
xchg
sub
or
or
mov
rorl
fbld
mov
hlt
sub
xor
sub
mov
ror
sbb
jb
jne
out
ja
xor
or
daa
xor
inc
adc
es
xchg
mov
cs
xchg
sub
lea
in
cmpb
movsl
push
add
pop
jne
push
add
cmpb
adc
and
icebp
and
push
pop
mov
loop
dec
lods
and
dec
aas
push
jg
lahf
gs
add
loopne
clc
dec
ss
repz
xchg
jno
sbb
cmc
xor
lds
adc
aam
xor
or
rorl
jns
loopne
clc
sbb
sbb
hlt
add
mov
cmp
jl
push
loope
stos
mov
cmp
fcomi
subb
repz
jl
out
sbb
loopne
dec
add
push
dec
sbbl
subl
push
repz
mov
mov
movsl
cmpsb
not
hlt
sub
add
pushf
add
inc
stos
cmpb
jmp
cmc
outsl
dec
add
stc
adcb
jg
mov
ds
imull
mov
imul
lret
cmp
push
and
xchg
push
shlb
dec
inc
or
pop
cmpsb
mov
pop
fstps
inc
adc
aad
xchg
cmp
sub
cmc
data16
data16
fdivrl
sbb
add
mov
jge
inc
mov
sbb
out
mov
rorb
das
cltd
in
dec
adc
jmp
movsl
iret
cli
or
dec
pop
cltd
test
or
sub
xchg
jns
cmpl
aaa
cltd
xor
sbb
outsl
or
out
xor
outsl
jle
mov
inc
xchg
pop
or
les
mov
adc
add
cmpxchg
inc
leave
andb
outsl
and
fnop
push
in
pop
lahf
pusha
into
push
xor
cmp
cli
or
mov
andps
fs
ja
mov
pusha
lahf
je
cmpsb
movsb
mov
or
fs
mov
in
mov
jb
push
xchg
jl
sbb
push
cmp
adcb
dec
je
push
xchg
loope
clc
lock
call
push
sub
iret
movsl
leave
orl
jle
jns
mul
cmpsb
cmpsb
mov
in
pop
xor
imul
pop
jae
mov
pushf
adc
xor
adc
adc
test
cltd
cmpsl
and
test
xchg
jo
mov
dec
inc
repz
arpl
mov
push
in
sbb
pop
sbb
insl
in
in
addr16
fs
ds
lret
data16
enter
sbb
js
or
pusha
lock
sbb
pop
jbe
jno
fistps
sahf
cmp
filds
jne
pop
pop
ja
fstl
jnp
dec
mov
inc
push
dec
in
popf
ror
pop
pop
jae
inc
mov
and
push
lea
and
and
xchg
push
cmp
jmp
mov
fstpt
jg
in
push
push
push
and
jmp
xor
dec
fnstenv
cmp
lret
xchg
sub
out
popf
js
dec
in
sbb
cmp
xchg
mov
adc
inc
or
mov
mov
push
arpl
pop
mov
push
xchg
dec
enter
insl
cmp
jae
add
arpl
jp
fsubr
lds
cmpsl
pop
add
popa
mov
in
sub
sub
add
cmpl
testb
cmc
pop
or
fstpl
aas
ds
call
mov
faddp
ret
and
mov
xchg
es
bound
aaa
inc
fimull
add
push
adc
lret
xchg
adc
push
sbb
fstp
xor
call
mov
test
xchg
inc
push
add
outsb
stos
pop
jp
bnd
mov
repnz
xor
pop
pop
aaa
xchg
gs
dec
inc
or
lcall
aaa
sarl
shl
je
cmc
idivl
stc
cmp
out
mov
xor
hlt
mov
dec
jae
and
ficoms
dec
add
js
sbb
xorl
and
cmp
insb
popa
add
mull
xlat
jne
hlt
int3
jnp
dec
cvtdq2ps
adc
dec
push
outsb
repnz
test
test
inc
mov
jo
lods
add
mov
cli
pusha
pop
fdivs
aaa
out
inc
hlt
push
push
repz
or
sub
dec
aaa
divb
jb
mov
and
scas
add
lea
loope
insb
or
data16
push
push
into
test
ljmp
push
or
xor
push
inc
gs
xchg
lret
xlat
add
add
pop
cs
fcom
fnstenv
insb
aaa
xchg
mov
notl
inc
add
and
adc
into
inc
push
jnp
mov
jl
ja
mov
inc
repz
and
das
pop
cli
mov
dec
stc
fbld
lock
add
dec
lret
jecxz
cmp
test
stc
jb
mov
push
sahf
mov
mov
xor
and
js
jp
or
lret
test
ror
out
out
cmp
ret
jae
pop
addr16
push
inc
pop
push
push
dec
mov
sub
rcr
push
sub
loope
nop
push
subl
ficompl
mov
push
ret
in
and
dec
cmpsb
rorl
sbb
or
mov
out
and
test
test
xor
cmpsb
mov
sbb
in
loopne
fstp
jl
mov
in
int3
jg
clc
call
stos
sbb
test
inc
sub
add
fdivs
cmp
mov
loope
cld
iret
jns
xchg
add
into
cmp
adc
adc
sub
xchg
into
inc
push
jge
cmpsl
jp
push
push
fildll
addl
outsb
add
xchg
es
mov
mov
xor
stc
sbb
cmp
es
push
lahf
js
aas
stc
mov
fnstenv
mov
les
pop
aad
stos
add
enter
lret
mov
mov
cmp
cmp
arpl
push
gs
xor
push
pop
pop
push
testb
test
test
cmpsb
sbb
lret
int3
sub
jnp
xchg
pop
mov
push
stos
push
adcl
fsub
adc
pusha
mov
xchg
xor
sub
das
int
xchg
xor
paddw
addb
jbe
xorps
sbb
roll
or
or
or
mov
arpl
leave
add
test
les
mov
clc
in
inc
adc
and
mov
mov
dec
sbb
movsb
loope
test
sbb
aas
xor
lock
inc
jp
stos
mov
sbb
mov
loop
lods
jo
mov
sub
jg
popf
xchg
inc
cmpsl
xor
aas
mov
in
pop
sub
arpl
into
imul
dec
push
and
call
sbb
and
fldl
in
stc
movsl
push
xor
dec
xor
and
sbb
inc
adc
push
cmp
pop
gs
sub
or
lahf
test
cmc
xchg
decl
mov
jg
jmp
gs
mov
arpl
popf
jge
fwait
adc
popa
dec
pop
mov
in
xor
inc
pop
lods
ja
dec
cmp
icebp
jae
xor
jo
rcrl
aas
mov
inc
in
lcall
loopne
mov
int3
int
pusha
add
pop
insb
xchg
stos
movsb
popl
stos
bound
mov
xchg
ss
xchg
and
jae
and
aaa
aam
mov
push
inc
cmpb
mov
sbb
sub
lcall
sbb
insl
cmp
dec
sbb
rcrl
addr16
push
mov
pop
stos
push
cltd
addb
sbb
pop
mov
scas
mov
test
pop
xlat
or
push
out
xchg
push
je
pop
pop
or
pop
adc
test
outsl
and
xor
push
cwtl
jecxz
sub
jno
jne
adc
inc
jmp
es
jb
jae
jl
push
pusha
popa
test
mov
popf
test
adc
cmp
lcall
repnz
mov
push
lock
lret
mov
or
out
xchg
in
mov
dec
fsts
clc
outsb
jbe,pt
pop
cmpsl
cmp
in
cwtd
les
lea
sbb
loope
adc
repz
inc
cld
ds
leave
fs
mov
decl
cmpl
shrl
pop
cmp
mov
push
inc
xchg
pop
imul
cmp
pusha
fcoms
pop
push
push
rorb
push
pop
repz
cwtl
in
xor
xor
lods
mov
jmp
nop
sub
cmpsb
fdivp
or
mov
cmp
mov
adc
push
enter
inc
aas
bound
popa
loopne
mov
sbb
push
stos
adc
push
dec
rol
xor
gs
mov
cwtl
cmp
and
xchg
adc
or
push
mov
xor
out
bound
ret
jbe
rcl
add
jecxz
fstp
dec
and
outsl
mov
btr
lods
jg
data16
lret
dec
jbe
mov
mov
push
popf
shrb
leave
jp
xor
nop
xlat
jbe
ds
jle
mov
xchg
into
mov
into
adc
loope
sub
in
aam
mov
insl
movsl
sbbb
data16
xor
push
sub
cwtl
cs
mov
mov
fistl
adc
mov
xchg
pushf
hlt
test
cmp
sub
insb
mov
in
xor
movsl
sbb
cltd
jo
lds
daa
push
das
leave
pop
pop
xlat
jg
mov
lcall
inc
push
mov
pushf
adc
or
sbb
inc
in
imul
inc
sub
enter
jae
mov
push
je
repz
loop
imul
iret
jne
negb
dec
push
test
lret
aaa
js
pop
lcall
ret
or
loopne
lcall
aam
mov
adc
push
shll
pop
sbb
jb
into
int3
mov
stos
fiaddl
js
jle
or
aad
fwait
xor
test
mov
pop
cwtl
cmp
test
ss
fdivp
out
gs
sub
pop
ror
mov
lahf
std
inc
rorb
jns
xor
mov
fidivrl
push
inc
pusha
jb
iret
rcrl
pop
mov
js
int
xor
mov
loope
mov
fcmovu
fnstenv
imul
popf
pop
outsl
push
inc
fcmovnb
cwtl
pop
loopne
iret
cli
lret
insb
mov
mov
cwtl
test
add
jo
popa
push
push
dec
int
cmp
adc
cltd
nop
mov
out
mov
ds
and
or
mov
dec
insb
repz
lahf
jp
nop
inc
push
lock
ja
movq
inc
inc
rclb
lock
pop
sbb
int
in
cmc
jecxz
pop
aam
push
lods
adc
rolb
nop
clc
sub
and
push
stos
pop
mov
fisubl
out
idivl
cmp
inc
xor
push
das
ret
enter
sub
xor
sbb
ret
mov
push
insl
stc
sbb
sbb
hlt
mov
rclb
dec
mov
pusha
xchg
push
jns
mov
xor
adc
push
sub
es
mov
outsb
daa
xor
cmp
loopne
xor
cmp
jmp
mov
add
mov
mov
rcrl
daa
sub
mov
imul
sub
cmp
daa
mov
mov
rorb
and
inc
int3
cwtl
mov
in
lret
pushf
lock
mov
xchg
sbb
push
mov
jmp
adc
repz
rolb
nop
jg
rorb
pop
pop
mov
loopne
pop
jp
push
jo
mov
jnp
push
xchg
cmp
aam
push
mov
loope
out
mov
ds
ss
adc
fidivrs
cwtl
xchg
dec
test
test
outsb
xor
sub
les
or
or
pop
push
test
fucomip
dec
in
mov
xchg
movsl
mov
and
add
xor
subb
shll
xchg
sti
es
mov
mov
data16
jnp
xor
cmp
cmpsb
in
addr16
adc
ss
ror
pusha
push
gs
data16
ljmp
inc
adc
lret
lods
lods
jg
fiadds
pop
sbb
test
ja
dec
mov
or
cltd
cmp
push
pop
movsb
subl
inc
js
int
insb
clc
push
test
sub
sbb
arpl
cmp
mov
add
mull
ror
jl
mov
dec
fcmovne
cmpsl
or
dec
pop
outsb
xchg
adcb
adc
pop
repz
mov
addr16
pop
sbb
sub
arpl
in
adc
jmp
jp
mov
ljmp
out
scas
add
adc
mov
push
xor
mov
mov
jnp
jns
loop
mov
stos
mov
push
cltd
movsb
push
cmp
and
movsl
cmpsb
lods
xchg
in
test
push
jns
mov
and
sbb
add
adc
push
fidivrs
mov
es
or
mov
imul
lahf
dec
mov
lahf
inc
xchg
into
mov
push
lretw
inc
cmp
iret
in
jge
popf
stc
aaa
aas
or
cmp
cltd
in
push
repnz
arpl
nop
jle
mov
pop
sub
xor
jle
decl
add
push
sub
or
xchg
pop
jb
mov
xor
mov
or
jno
loopne
sbb
push
std
jmp
mov
stos
jmp
popf
shrd
fwait
addr16
xchg
sbb
sbb
sbb
sahf
xchg
nop
or
jnp
lods
dec
or
inc
cmp
fcoms
fdivp
inc
xor
pusha
push
movsb
mov
adc
add
jle
fists
adc
cmpsb
inc
popa
jnp
dec
pop
fmuls
rorl
or
pop
aas
insl
in
mov
add
rcrb
push
inc
lock
xlat
call
shrb
adc
jne
ja
inc
pop
cmp
sub
xchg
fimull
xchg
mov
pop
dec
mov
or
cmp
icebp
mov
xchg
hlt
in
mov
fdivs
cmpsl
jecxz
add
xchg
pop
imul
and
cmpsl
test
roll
int
fstl
repnz
and
outsl
lahf
pop
insl
into
push
mov
fwait
scas
xchg
sbb
sub
mov
test
xchg
lret
movsl
cld
pop
or
jp
dec
imul
adc
inc
testb
pop
shl
or
pop
sub
jns
mov
ret
xchg
sub
cmp
in
mov
add
dec
int
xorl
enter
pop
pushf
out
adc
das
or
mov
cmp
arpl
scas
shlb
and
andl
les
cmp
mov
adc
xlat
sbb
xor
imul
mov
daa
ja
cmc
scas
cmp
xorl
push
lcall
popf
jae
mov
jmp
int3
xchg
mov
lds
mov
or
mov
add
test
push
jmp
mov
add
mov
incb
xchg
imul
rorb
and
ret
fwait
fwait
leave
inc
add
loopne
ret
repnz
orl
add
jo
gs
or
jbe
push
inc
jo
ficoms
mov
lock
mov
leave
das
or
lods
flds
mov
insl
push
das
xor
fimuls
das
sahf
in
adc
fcoml
mov
jnp
mov
roll
ss
xchg
add
adc
dec
sti
sub
dec
mov
mov
mov
notb
insb
push
mov
gs
fldcw
loope
stc
or
cmp
mov
leave
mov
out
nop
and
xor
stos
mov
add
in
xchg
loopne
cmp
loope
test
int3
and
scas
xor
inc
pop
jo
push
cmpsb
shll
aad
icebp
xor
xchg
sbb
loopne
xchg
frstor
mov
and
push
sbb
loopne
add
call
xchg
test
push
push
je
hlt
rcll
out
rclb
xor
imul
adc
gs
lods
nop
sub
cmp
loopne
pop
push
or
xor
fstl
std
add
adc
mov
int
and
movsb
jge
xchg
cmp
test
test
mov
push
pop
aad
pusha
push
adc
test
push
sbb
fwait
aam
adc
adc
stos
popa
dec
sbb
pop
sti
mov
jl
scas
ret
in
pop
mov
in
xchg
and
movsb
repnz
mov
mov
sub
sbb
insl
and
mov
mov
outsb
sbb
cli
outsl
inc
jp
push
mov
push
sbb
pushf
aad
js
rol
loope
sarb
sbb
aas
std
cmp
push
mov
push
pop
ljmp
xor
sub
enter
addb
push
add
insl
sbb
cmp
mov
jg
stos
icebp
ljmp
mov
sahf
sub
cwtl
ret
adc
lock
pop
fsubrl
mov
add
filds
xchg
pop
xchg
hlt
or
sub
mov
push
push
cmovs
pop
mov
fisubs
push
ja
pusha
movsl
xchg
mov
hlt
jg
js
or
mov
dec
lds
jge
mov
mov
movsb
or
lods
shufps
rcr
mov
and
leave
scas
mov
cmp
mov
dec
sahf
add
xor
lahf
and
fidivs
sub
jae
and
push
popf
jge
movsl
ret
push
cmp
data16
jl
push
pop
mul
ss
scas
insb
test
and
jle
ds
aad
sub
jg
gs
xchg
sahf
cmp
adc
out
imul
loope
lods
clc
adc
je
dec
out
nop
test
test
sbb
jl
mov
testb
push
xor
int
ljmp
mul
aam
push
inc
ljmp
mov
cmc
cmp
dec
push
inc
roll
mov
mov
aaa
out
xchg
cmp
loope
jp
dec
jae
mov
xchg
adc
xchg
aaa
loop
cmp
jge
jecxz
jns
push
sahf
mov
push
int
add
jns
or
in
xchg
stos
bound
inc
fidivrs
push
and
loop
push
lds
pop
pushf
sub
aas
dec
mov
in
stos
in
and
push
mov
sarl
pop
and
clc
in
popf
int3
and
mov
mulb
jne
sarl
jle
in
and
lcall
lret
paddd
inc
cmpsl
mov
inc
mov
lods
movsl
add
sbb
das
rorb
pop
shlb
push
icebp
jns
rorl
pop
xor
adc
test
push
les
xor
or
push
js
es
incl
into
and
or
bound
jns
or
ficoml
popf
rorl
mov
and
sti
inc
mov
sbb
imul
aaa
cmp
push
int3
movsb
push
andl
jb
cwtl
lret
jecxz
mov
std
fwait
pop
adc
or
cmp
adc
push
mov
xchg
jmp
js
mov
pusha
push
push
mov
mov
mov
in
das
outsl
sbb
icebp
jno
aam
mov
loopne
cli
fs
insl
bound
test
inc
xchg
lret
inc
fiaddl
in
push
jmp
or
icebp
sbb
or
inc
fistl
imul
xchg
cli
pusha
push
mov
dec
push
hlt
and
sbbl
mov
add
sbb
scas
mov
inc
inc
mov
xor
in
xchg
shll
cmp
aam
push
push
jmp
and
pop
or
cmp
mov
mov
jb
jl
popf
add
vpmovmskb
adc
movsl
xchg
cmp
ja
pusha
in
push
movzbl
push
in
add
mov
out
pop
jle
loop
mov
sbb
push
test
jb
stos
pop
mov
aad
mov
stos
lahf
test
adc
xor
repnz
decb
rolb
leave
mov
roll
jns
mov
mov
push
std
lds
jecxz
mov
mov
mov
add
mov
fsts
scas
mov
mov
cmc
add
aad
inc
sub
loop
add
sub
xchg
dec
push
mov
in
jns
push
addl
mov
adc
fucomi
sbb
sahf
jl
cmpsl
push
push
xlat
stc
mov
cmp
lea
sub
inc
fisttpl
out
std
lret
mov
stos
sub
gs
mov
not
xor
push
test
mov
mov
cmc
mov
scas
sbb
lods
adc
cmp
adc
fmull
arpl
and
sub
aas
pushf
inc
inc
fs
aad
cmp
add
shrl
mov
or
sub
adc
and
out
stc
cld
adc
loope
in
je
icebp
push
fiadds
add
fisubs
xor
push
fwait
out
scas
inc
aam
mov
loope
xor
and
ret
jl
jae
fwait
push
test
lcall
sub
shlb
sarb
xchg
loopne
jns
sti
pop
mov
add
sub
lods
push
mov
sbb
insb
mov
push
xchg
mov
lds
icebp
lods
adc
lcall
jecxz
stos
arpl
adc
mov
adc
mov
fldcw
daa
add
xchg
xor
fisttpll
mov
mov
jne
or
test
dec
dec
mov
lods
xchg
mov
cmp
add
xchg
dec
adc
out
pusha
add
rcll
js
dec
xchg
adc
or
movsl
adcb
adc
add
insb
push
add
in
iret
jle
out
sbb
push
adc
push
aad
lea
sbb
push
mov
fldcw
lds
mov
mov
xor
pushf
adc
loope
cmp
lret
jg
iret
and
fcmovnb
or
lea
test
jnp
fistpl
orb
mov
inc
adcl
ret
cmp
inc
test
mov
xchg
iret
rolb
mov
adc
js
aad
cmpb
sar
jbe
lds
or
mov
sti
mov
in
mov
movl
repnz
pushf
xchg
rorb
adc
push
pop
push
mov
mov
mul
aad
xor
fcoms
std
aad
lea
repnz
loop
scas
fimull
fdivrp
or
push
push
pop
loopne
andl
pop
std
xor
enter
and
mov
scas
loope
or
stos
xchg
sbb
sbb
mov
inc
insb
adc
jmp
js
push
xchg
adc
cltd
pusha
ja
in
add
int
sub
cli
jo
inc
mov
add
sbb
mov
sti
lock
pushf
shr
inc
scas
pop
mov
adc
dec
or
or
pop
mov
sub
in
scas
pop
mov
pusha
adc
lret
or
fildl
pop
cmp
jecxz
jne
ror
jg
mov
pop
inc
dec
mov
dec
fwait
cmp
stos
pop
pop
xchg
mov
xchg
jg
incl
pop
pop
outsl
jae
inc
stc
aad
fdivrp
fwait
inc
xor
adc
lret
mov
pop
mov
out
xchg
xchg
ret
hlt
out
insl
enter
aaa
mov
cmpl
cmpsl
fwait
xor
mov
daa
inc
or
mov
jle
add
mov
push
jp
inc
mov
movsb
out
mov
jnp,pt
cmpsb
gs
clc
jle
cwtl
jge
and
mov
xor
dec
push
mov
imul
daa
mov
ret
pop
inc
mov
ret
mov
orb
sbbl
add
test
sub
call
mov
ljmp
repnz
xchg
and
and
xor
sub
jb
xor
jle
or
int
or
and
push
and
ljmp
adc
xor
xchg
ss
adc
or
loope
mov
mov
test
sbb
fists
mov
add
daa
fdivrs
push
cmp
mov
sub
fld
inc
nopl
popf
and
dec
sarl
add
push
add
cmp
scas
into
enter
dec
jno
stc
add
arpl
cli
mov
and
scas
adc
out
ret
jns
jnp
jo
mov
test
inc
mov
inc
jge
cmp
and
movsb
sub
js
cmc
xor
popa
mov
inc
xor
dec
gs
and
sbb
xlat
cmpl
lea
repnz
es
outsb
out
mov
and
dec
mov
cmp
pop
dec
out
imul
inc
push
lahf
nop
loop
and
push
adc
xor
mov
movsl
hlt
pminsw
inc
adc
in
mov
xchg
pop
loopne
fstps
imul
dec
call
ljmp
sbb
int
addr16
or
ret
push
or
pop
mov
ret
sub
or
jb
adc
ret
cmp
xlat
add
sbb
addr16
pop
loop
arpl
jp
cmp
push
or
xrstor
fnclex
cmp
mov
add
push
xlat
pop
out
int
mov
inc
pop
stc
ljmp
mov
test
lret
fst
mov
mov
out
xchg
std
push
inc
pop
sub
leave
dec
lods
and
inc
outsl
out
iret
sub
addr16
inc
outsl
push
cmp
test
rcrl
cld
pop
or
jb
lcall
std
sub
aad
mov
ja
out
out
inc
inc
sub
pop
test
push
data16
push
and
sub
add
inc
int
jnp
jp
loopne
pop
cmp
or
fstps
js
daa
stos
dec
add
inc
ret
loop
icebp
and
call
cltd
mov
mov
cwtl
inc
cmpsb
scas
add
or
insl
int3
jne
movsb
data16
fs
std
cmp
mov
es
xor
or
loop
inc
das
inc
push
and
pop
mov
push
mov
push
xchg
adc
pop
jmp
lea
mov
out
push
and
mov
cmpsb
mov
cmp
mov
mov
fcmovnb
pop
scas
sbb
sti
int
js
in
test
lods
ret
shll
pop
popf
aas
stos
and
sub
dec
sub
sbb
out
addl
xlat
in
iret
gs
mov
push
shr
lret
cmp
mov
jmp
ss
shrb
int3
in
scas
mov
ds
inc
fs
cli
arpl
es
addl
xor
jmp
mov
push
subl
mov
or
idiv
pop
adc
mov
loopne
rorb
sbb
or
pop
xchg
ja
test
pop
mov
mov
xor
lods
ret
cmpsl
cmp
mov
lret
in
mov
lsl
sbb
je
jae
push
mov
jnp
mov
testl
inc
jae
subl
xchg
push
xchg
cmp
lret
mov
inc
xchg
mov
mov
out
aam
cvtdq2ps
pusha
xlat
aad
inc
andb
lock
sub
cmp
insl
mov
add
mov
dec
xchg
mov
and
xor
inc
scas
iret
pop
jns
xor
imul
inc
mov
test
push
jecxz
xor
xor
aad
mov
repz
hlt
inc
xchg
fimuls
pop
pop
jo
es
sbb
xor
fsubr
lahf
push
inc
jae
xchg
je
add
xchg
pop
pushf
dec
ds
loope
test
and
aaa
fnstcw
stos
loop
sub
in
rorl
fmuls
fimuls
iret
std
test
jmp
clc
sub
dec
mov
xchg
lahf
mov
icebp
xor
test
and
adc
vdivpd
lds
jnp
rcrl
dec
inc
dec
cs
pop
mov
mov
imul
pushf
xor
xor
sbb
or
push
stos
sbb
or
enter
push
add
push
dec
push
sti
lret
inc
mov
xor
mov
cmp
push
push
push
xchg
sub
notb
jp
mov
xchg
mov
ljmp
cwtl
cmpsl
xchg
and
cmp
je
push
jne
sbbl
subl
mov
inc
or
cmpsl
shrl
jle
xchg
add
addr16
add
push
pop
xlat
inc
mov
stc
dec
add
push
push
sub
sahf
fcmovb
pop
xlat
fisubs
xor
and
std
jo
dec
mov
mov
jb
fadd
inc
fsubl
fs
cwtl
stos
push
adc
test
add
test
sbb
or
and
xchg
push
cmp
call
cli
pop
sbb
scas
fcmovne
insl
cld
arpl
ds
lahf
xchg
mov
and
and
shll
jnp
xor
push
cmp
andb
dec
mov
outsb
daa
pop
cmp
cmc
mov
inc
fnstenv
inc
jns
ffree
cmp
sar
hlt
xchg
sub
cmp
leave
push
xor
scas
xchg
inc
jecxz
cmc
mov
push
mov
add
ljmp
iret
mov
add
mov
icebp
pop
mov
lcall
jns
test
es
push
fdivs
aaa
add
popa
inc
push
movsl
cltd
mov
pop
fbstp
sbb
xchg
mov
inc
mov
mov
mov
mov
add
dec
cmp
inc
mov
nop
jg
cltd
loope
enter
adc
adc
test
fstl
jo
push
and
cmp
clc
jmp
testb
sahf
push
mov
mov
inc
push
ss
push
mov
loope
mov
sbb
xor
sub
adc
mov
test
adc
test
pop
inc
adc
pop
call
add
dec
cmc
xor
mov
or
xchg
out
and
dec
dec
or
dec
mov
lgs
pop
xlat
lock
loope
sti
rclb
xor
lods
pusha
insb
test
adc
addb
bound
rolb
mov
dec
adc
xchg
or
repz
dec
pop
jns
shrb
ja
push
shlb
mov
cli
aas
mov
push
cmpsl
mov
push
mov
cs
ss
mov
cmp
xchg
in
daa
mov
iret
sbb
dec
xchg
or
popa
pop
fidivl
ss
jmp
and
mov
test
loope
fstl
mov
dec
shll
dec
neg
fildl
enter
lahf
dec
inc
ja
push
push
cmpsl
jl
dec
sbb
les
fsts
mov
cmp
leave
jecxz
xchg
xor
and
aas
leave
jp
addl
pop
mov
mov
and
xchg
or
loope
push
out
dec
mov
addb
mov
add
rcrl
push
js
subl
sbbb
call
pushf
int3
adc
lock
sbb
pop
rcrb
mul
repnz
sub
pop
push
gs
sub
mov
popa
shll
push
pop
add
repnz
jb
lea
int
cltd
in
xchg
mov
mov
in
inc
mov
and
mov
and
lea
or
shlb
sahf
ds
mov
rorb
fsubs
jnp
xor
mov
call
jp
sbb
push
push
stos
xchg
stos
sub
xchg
aaa
insl
ljmp
add
daa
cltd
push
pop
sarl
mov
xlat
or
outsb
and
xchg
mov
int
dec
add
std
cmp
and
idivl
fsub
and
inc
mov
loope
xor
inc
int3
mov
subps
mov
lods
insb
stos
stc
inc
js
iret
xchg
cwtl
push
fbstp
lcall
pushf
push
scas
push
clc
inc
and
call
cmpsb
jmp
jp
mov
fsubr
dec
xor
mov
fwait
aas
and
cmp
inc
nop
shll
cld
repnz
repz
push
jne
xor
pop
add
imul
ret
mov
pop
jmp
mov
xor
loop
cmpsb
cmpsl
cli
mov
mov
lcall
xchg
push
leave
mov
cltd
ss
fcomip
les
lahf
or
adc
push
xchg
pop
push
jecxz
adc
out
cmp
sub
cmp
and
mov
aad
mov
xchg
adc
aam
scas
adc
stos
ret
cmp
jne
clc
fimull
cmp
movsl
pop
out
mov
or
lret
popa
fistps
gs
jno
jecxz
addl
xchg
out
mov
outsb
mov
loopne
repz
xor
lods
ret
add
incb
dec
mov
sbb
mov
clc
push
inc
inc
or
outsl
hlt
push
push
loop
mov
xlat
stos
or
in
in
lds
cli
dec
test
test
cmp
orb
into
add
pop
enter
cmp
jmp
sub
jb
imulb
call
xlat
mov
lods
test
daa
xor
or
ds
jo
fcomp
cmp
adc
xchg
mov
and
cmp
or
fcmovnu
adc
push
aad
lret
fmuls
push
mov
inc
xlat
aas
nop
bound
cmp
add
mov
or
xor
int3
jb
inc
aad
cmp
xchg
mov
popa
mov
cmpsb
stos
jb
cmpsb
jno
jecxz
cmpsb
sahf
mov
aaa
aas
movsl
mov
and
and
das
popa
testl
jae
xchg
outsb
sbb
and
jno
cld
adc
xchg
push
fisttpl
ret
iret
jl
dec
ds
push
aad
das
aas
adc
jo
fcoml
inc
push
sbb
dec
int3
data16
lret
fdivr
test
movsb
mov
int3
inc
cmp
inc
int3
inc
movsl
adc
scas
imul
or
lds
les
test
push
pop
and
movsl
jnp
cs
xchg
mov
fldcw
inc
dec
ss
push
sub
inc
loop
push
rolb
adc
dec
dec
lock
cmp
sub
mov
dec
cli
sbbl
lods
add
adc
jo
insl
jle
cmp
inc
pop
jno
iret
push
notl
insl
sub
scas
mov
imul
jo
out
or
and
mov
pushl
cmp
lods
leave
mov
int3
arpl
testb
fwait
sub
std
nop
vucomiss
and
push
dec
pop
adc
cwtl
mov
cmpsb
clc
outsb
push
notl
pop
ret
mov
push
call
dec
push
mov
subb
addr16
scas
add
or
nop
jecxz
leave
jge
mov
xor
dec
enter
pop
push
push
mov
mov
adc
pop
xchg
es
lcall
pusha
pop
dec
ja
dec
fstl
mov
push
and
out
orl
pop
cmp
and
inc
rcl
ja
call
and
cwtl
and
cmp
xor
into
icebp
out
xchg
mov
pop
xor
sbb
or
push
aas
adc
idivb
jge
pop
and
jge
fsubrl
gs
pop
and
mov
pusha
xchg
sub
loop
dec
cmp
test
int3
mov
lds
adc
lcall
push
out
sbb
xlat
inc
pop
push
movb
and
pusha
subl
and
loope
cmpsb
ljmp
test
test
repz
and
or
jne
push
mov
andl
arpl
cmpsb
enter
test
lods
insl
lret
xlat
imul
push
push
xor
pop
fbld
les
fidivs
ret
aaa
xlat
mov
jno
sub
jl
or
hlt
pshufw
stos
hlt
add
xchg
mov
cmp
mov
mov
ficomps
pushf
das
fiaddl
xor
mov
lods
fcomps
inc
and
les
in
les
pop
loopne
cs
xchg
dec
aaa
sub
popa
sbb
add
test
cmp
push
pop
dec
lock
dec
dec
call
sub
jg
cmp
jmp
pop
sbb
ret
or
ret
xor
lock
bound
test
pop
pop
xchg
pop
jmp
in
jl
push
adc
push
sub
push
or
ret
jae
in
push
movsb
adc
std
xchg
jl
stos
cltd
xchg
cmp
or
mov
mov
roll
inc
jmp
dec
and
sub
cmp
in
rolb
sbb
push
fildl
pusha
push
gs
pushf
repz
pandn
gs
movsb
leave
mov
mov
push
adc
push
outsb
imul
sahf
dec
sub
adc
and
js
push
cmp
fistpll
mov
xor
clc
sahf
outsl
jp
ret
sub
stos
loopne
movsl
push
pop
outsl
sub
adc
jl
out
inc
inc
test
jl
xchg
jl
mov
out
push
fisubrl
jns
xchg
jo
nop
cmp
in
lock
fstpt
add
fnstcw
stos
mov
stos
lods
xor
aas
jle
stos
rcrl
test
test
aaa
inc
imul
sahf
xor
lcall
in
mov
sbb
fistl
dec
fimuls
jo
adc
cld
cmp
aad
xor
xchg
xor
lock
sbb
popa
mov
out
shl
daa
sbb
mov
or
and
xchg
mov
and
aad
aas
dec
push
mov
mov
cmp
inc
jae
stos
xor
mov
dec
arpl
add
adc
sub
mov
iret
mov
xchg
pop
push
inc
icebp
fs
test
cld
insl
fstps
and
sbb
xor
push
pop
out
aam
daa
add
push
dec
out
lods
adc
hlt
inc
mov
adc
and
pop
mov
push
sbb
mov
popf
fwait
adc
jg
popa
adc
pop
sbb
inc
mov
loope
xchg
xor
mov
insb
inc
mov
imul
sbb
cmp
ss
adc
xchg
ja
test
jmp
ds
aam
call
in
mov
inc
js
fnsave
push
xchg
mov
pusha
movsb
test
lock
shlb
out
iret
mov
stos
jmp
mov
or
ja
cmp
stos
pop
or
insl
pop
adc
fiadds
or
lods
jl
insl
sbb
dec
mov
movsb
rcrl
xor
testl
in
lret
dec
cltd
enter
mov
mov
into
mov
les
sbb
aam
test
in
sti
sub
fisubs
shll
fwait
clc
test
ret
and
cld
mov
add
or
cltd
notl
shll
or
and
jmp
push
ret
lret
dec
push
outsb
cmp
xor
in
adc
mov
rcr
push
movsb
in
test
mov
in
imul
sbb
bound
popa
ljmp
clc
xchg
mov
push
or
or
xchg
scas
movsb
cmp
ret
movsl
int3
push
movsb
hlt
rorb
insb
xchg
adc
pusha
call
cmp
testb
xchg
adc
cmc
fiaddl
std
jle
and
push
jecxz
xor
sub
inc
cmp
mov
mov
xor
call
lcall
lahf
push
cwtl
cmp
xor
jo
cmp
lock
call
mov
sbb
icebp
in
inc
shll
lret
and
adc
add
lcall
ret
dec
inc
mov
pop
mov
repnz
mov
inc
cmpsb
imul
dec
into
rolb
push
shl
outsl
and
xchg
sbb
fcomip
sbb
in
repz
pop
nop
inc
dec
inc
cmp
ss
ss
xchg
in
pop
mov
sti
punpckhdq
dec
lcall
ja
inc
lret
mov
pop
cmp
adc
push
xchg
mov
int3
popa
mov
lods
out
sub
push
cmp
sub
push
sbb
cld
jne
imul
bound
out
sbb
pop
mov
clc
out
outsl
xchg
dec
or
pop
jae
mov
xchg
or
ja
sbb
xor
popa
and
loopne
and
iret
pop
call
fwait
inc
lock
and
push
push
jecxz
mov
call
push
test
or
test
fucomp
out
sbb
aam
insb
ja
push
add
scas
sbb
add
pop
repnz
or
adc
stos
or
jmp
sub
cmp
roll
push
adc
mov
sub
shrl
outsl
add
into
mov
mov
mov
sbb
sbb
adc
xchg
xchg
fstpl
sub
ljmp
dec
aad
imul
jne
lods
add
xchg
dec
repz
pop
mov
jns
xchg
and
hlt
jo
shlb
pop
inc
ljmp
pop
scas
and
lcall
adcb
test
push
and
mov
dec
imul
mov
dec
push
into
fwait
lods
out
mov
cmc
xor
dec
cli
lods
mov
xor
cli
ss
adc
push
mov
and
lods
insl
mov
jmp
mov
xchg
cltd
popa
cmc
jmp
pop
stos
mov
jno
icebp
xchg
inc
mov
insb
out
cmp
lods
inc
incl
adc
xor
sbb
or
mov
sbb
daa
adc
in
int
push
test
leave
stos
js
jae
gs
jnp
adc
fists
dec
out
outsl
shll
data16
jp
or
mov
pop
or
popf
mov
dec
and
outsl
fisttps
sbb
jge
call
fs
sarb
rcr
aam
xchg
leave
pop
fisubrl
rcr
pop
mov
sbb
dec
xor
repz
pop
jae
int
int3
xchg
or
push
or
adc
xor
data16
or
mov
subl
mov
jl
mov
in
pop
push
out
cmp
lret
imul
cmp
mov
das
mov
xor
aad
push
inc
pop
push
and
push
jmp
mov
inc
jmp
xchg
mov
mov
sub
ljmp
lea
jge
xor
adcb
cld
mov
or
jns
es
add
pop
dec
xor
push
test
push
or
aam
mov
div
cmp
imul
addr16
jl
test
in
or
in
or
lret
scas
lea
mov
mov
sbb
mov
adcb
mov
scas
cld
ljmp
jb
mov
out
cld
es
test
subps
add
scas
mov
pop
daa
das
pop
jle
adc
mov
ret
fstpl
test
mov
mov
or
into
jmp
stos
repnz
ds
imul
lds
mov
and
ja
testl
or
or
mov
or
push
xchg
jge
cmc
cld
xor
popf
xor
mov
das
out
outsb
in
sbb
sbb
lret
bnd
pusha
xor
jmp
test
jge
inc
out
push
scas
jae
popa
jge
icebp
out
pusha
fisubrl
mov
cmp
and
jns
adc
add
mov
outsb
add
xor
sbb
pop
or
jb
aad
mov
jmp
add
pop
xor
scas
cmp
popa
mov
dec
pushf
movsb
aas
sbb
test
mov
stc
push
xor
jge
daa
jge
push
lods
js
icebp
cmp
mov
lock
dec
test
pop
ljmp
imul
mov
lahf
jmp
in
jb
jae
addr16
les
imul
lock
cwtl
incl
outsl
jnp
outsb
mov
mov
lea
push
lcall
mov
insl
adc
sub
adc
or
xor
mov
in
adc
test
ds
loop
xchg
sub
aas
or
mov
mov
cmp
lds
push
imul
lds
out
std
into
mov
inc
push
scas
cld
cmc
sbb
push
push
scas
push
mov
fwait
inc
clc
bound
test
stos
add
jg
jle
sub
xor
or
mov
cltd
xchg
fnstsw
mov
xor
enter
popf
bound
jae
dec
adc
shll
or
std
or
cmpsb
rorl
es
outsb
or
push
test
pop
insb
jp
insl
popf
int3
out
fcmovnu
or
lret
jns
xor
popa
and
leave
in
int3
fisubrl
mov
xor
loopne
jb
and
xchg
jecxz
mov
mov
insl
push
sbbb
clc
or
push
aas
out
push
or
into
out
pusha
fs
out
xchg
and
mov
xor
inc
sbb
add
push
daa
pop
jle
fwait
push
int
mov
and
int
cmpb
adc
push
xor
es
hlt
test
ficoms
cmc
add
push
fs
rolb
push
jo
and
lds
xchg
inc
lret
sub
adc
pop
imul
cmpsl
add
or
mov
std
loopne
xchg
jecxz
add
call
out
loop
xor
cltd
cmp
sub
xor
pusha
cmp
ss
cmp
movl
sub
mov
std
jnp
add
cmpl
in
push
out
dec
jle
push
pop
outsb
aam
ds
add
xchg
cltd
adc
cmp
shlb
mov
hlt
xchg
and
adc
mov
xor
jbe
push
jne
ljmp
daa
jno
lret
sub
iret
sbbl
sbb
add
ret
sbb
sti
lahf
mov
adc
xor
dec
inc
mov
push
inc
fmull
mov
sub
aad
mov
and
sbb
pop
or
lahf
shlb
adc
clc
sub
mov
je
push
imul
dec
clc
dec
popa
aas
fxch
dec
mov
pop
out
clc
add
push
sub
sti
xchg
push
or
mov
popa
xor
jge
mov
jne
pop
sub
sub
jns
cmp
inc
idiv
jl
sbb
bound
cmpsl
inc
mov
lods
pushf
fistps
cmc
dec
push
add
push
xor
out
sub
push
mov
pop
pop
stos
push
add
add
loopne
pop
lcall
pop
xlat
cmpsl
and
mov
or
jge
loopne
ud2
mov
mov
icebp
adc
das
and
cmp
inc
mov
adc
into
aad
push
push
cmp
sbb
pop
data16
cld
mov
pop
mov
inc
mov
fistpll
lahf
int
repnz
cs
roll
in
mov
mov
orl
scas
cmp
dec
mov
add
out
shlb
cli
mov
inc
lods
pop
pop
cmp
repz
adc
jp
stos
fnstcw
loop
mov
pop
orl
lea
pop
mov
cltd
and
mov
fsts
mov
ljmp
jmp
sub
xlat
inc
push
test
ss
jp
in
lret
sub
push
fidivrs
mov
out
xor
or
out
push
pop
jecxz
icebp
jo
lods
loopne
fbld
rcrl
arpl
pop
or
hlt
icebp
fstl
stc
jae
test
jne
sub
lahf
mov
seto
mov
push
imul
popa
icebp
mov
dec
xchg
mov
lods
and
ja
repnz
jne
addr16
jmp
sbb
shrb
add
out
xlat
call
cmp
push
mov
pop
sbb
addr16
mov
xchg
cmp
mov
test
popa
sbb
mov
jnp
mulb
aam
adc
dec
stos
jle
adc
std
and
int
mov
jl
xchg
inc
popf
xor
jns
dec
popa
xchg
add
sub
cs
mov
xor
or
inc
cld
push
mov
or
roll
loopne
jbe
lret
aas
inc
dec
xchg
ret
sbb
int
cwtl
lahf
mov
fsub
adc
repz
fnstenv
lret
push
mov
xchg
jbe
pop
lock
inc
and
int
mov
ljmp
movsb
fistl
fstpt
cmc
push
cmc
sahf
lea
ret
test
mov
sbb
or
mov
ljmp
lret
pop
jl
xor
mov
icebp
mov
or
cmc
cmpxchg
scas
mov
out
sahf
xchg
sub
frstor
pop
dec
dec
adc
cmp
mov
in
rcrl
mov
lret
pushf
adc
mov
push
cmp
cli
popa
pop
add
adc
rcr
jne
lock
daa
es
fcmove
and
xlat
div
insl
sub
jp
fs
and
imul
jnp
lret
shl
cld
rclb
push
iret
lret
test
sbb
cmpsl
push
push
mov
lea
mov
rcll
jae
and
push
lcall
jae
negb
cmpsl
call
lods
push
js
pop
push
gs
xor
pop
sub
jl
dec
jne
aam
ficomps
inc
lods
imul
scas
stos
and
xchg
insb
fcmovb
cmp
cmp
jge
repz
in
pop
sub
sahf
aad
mov
cmp
jp
adc
sbb
clc
fnstcw
jbe
stos
aam
adc
aam
push
or
lods
inc
notb
ret
inc
pop
xor
data16
push
data16
loopne
sbb
jbe
orl
push
xlat
fldenv
pop
inc
mov
dec
pop
dec
jg
xchg
mov
mov
jle
outsb
cmp
shll
pop
mov
cvttps2pi
mov
pop
cmp
sbb
jno
notl
arpl
sahf
movsb
aas
add
mov
lret
insb
mov
and
hlt
mov
and
or
call
jno
xchg
sub
lahf
inc
dec
lods
fdivrl
pop
xchg
mov
jle
jne
sub
orl
jge
mov
cmp
and
rolb
inc
push
xor
stos
mov
gs
mov
movsl
jmp
adc
jl
adc
mov
xchg
jne
mov
fistpl
xor
adc
jne
inc
lods
xchg
sbb
inc
test
loopne
jne
mov
lcall
pop
test
cmpsb
sub
add
jae
mov
sahf
sti
popf
adc
push
jne
lea
jle
pop
mov
xchg
clc
mov
pop
shrb
push
aad
pop
mov
jbe
adc
imul
adc
sbb
xor
inc
dec
xor
adc
ja
push
imul
aaa
or
cmp
mov
adc
sub
mov
sub
sbb
std
sub
mov
mov
frstor
adc
xchg
or
lods
mov
xor
fldcw
mov
mov
push
jne
ror
cmp
jne
adcl
test
pop
test
ss
outsb
mov
testb
sbb
sti
inc
psrad
roll
mov
pop
cmpsl
inc
push
das
in
xor
xchg
jmp
pop
xor
sbb
dec
mov
insb
xchg
mov
je
lret
xor
sbb
std
leave
pcmpgtd
xchg
or
mov
inc
push
mov
push
scas
lds
cmpsb
push
fistps
pusha
shrb
lret
clc
mov
andl
and
stos
lea
inc
insl
mov
in
scas
and
and
mov
movsb
push
les
push
sub
sti
imul
add
aam
aam
inc
faddl
cmp
add
mov
cld
fcomps
popa
ret
inc
add
aad
scas
pop
push
add
cmpsl
mov
fisttpl
push
sub
out
cmp
cld
or
sbb
push
fimuls
mov
outsb
fs
push
pop
mov
test
lahf
cltd
mov
je
mov
popf
nop
inc
bound
xchg
xlat
inc
adc
mov
bound
scas
lock
out
mov
fdivp
loopne
sbb
fcoms
movsb
ja
fcom
inc
mov
enter
inc
aad
pop
push
dec
mov
xchg
cmpsl
imul
xchg
mov
sarl
xchg
xor
cmp
jae
in
lahf
faddl
dec
addr16
addb
add
mov
movsb
bound
mov
cltd
shll
cltd
jmp
sbbl
cmpsb
btl
xorl
jp
iret
pop
xlat
outsb
sbb
pop
pop
orl
aas
fiaddl
inc
insl
or
scas
enter
aad
negl
nop
xor
jnp
cmp
ret
cwtl
stos
pop
mov
cltd
pminub
outsl
outsl
jl
mov
push
sbb
cmp
stos
or
lods
ffreep
movsb
lods
mov
or
xchg
add
inc
pop
push
ja
in
jo
xor
cmpsb
cmp
sub
sub
aaa
aam
cli
out
inc
cmpsb
pop
push
ret
stc
aad
movsb
in
int3
jno
xchg
mov
cmp
mov
add
pop
xor
pusha
xorl
std
sbb
xor
jb
mov
mov
inc
xchg
repz
aaa
rol
and
cli
xchg
es
or
in
inc
push
jg
and
push
mov
push
jecxz
adc
adcb
test
cmp
inc
lcall
js
pop
cli
cmc
nop
jbe
std
cs
push
sahf
iret
push
mov
or
ja
push
call
std
xchg
cmp
sub
pop
jge
or
cmp
dec
js
mov
ljmp
jo
es
js
jmp
dec
test
ljmp
xchg
push
dec
jne
ss
jno
push
and
aam
sbb
test
jns
lock
cld
pushf
sti
cmp
loopne
mov
enter
mov
push
enter
xchg
sub
mov
sub
adc
dec
test
adc
or
jns
stos
bound
shlb
or
jbe
adc
pop
cmpsl
js
sbb
aad
notl
cmp
addb
adc
shlb
jno
mov
ja
jl,pt
mov
fs
or
fimull
inc
leave
bswap
mov
scas
sbb
push
pushf
mov
pop
cwtl
mov
pop
xor
out
cmpsb
gs
sub
fsts
jae
and
outsl
sbb
rolb
fbld
inc
add
into
pop
xor
add
inc
hlt
jbe
mov
mov
pushf
mov
shll
pop
adc
mov
mov
sub
and
jnp
ss
call
or
xor
and
out
aam
lods
or
and
xchg
popf
loop
xchg
out
xchg
sub
pop
rcr
arpl
data16
mov
pop
adc
dec
into
add
cmpsl
mov
aam
movsl
shrb
dec
std
pop
fs
sar
leave
in
mov
pop
sub
cmp
pop
jmp
jmp
and
xor
scas
cmpb
mov
ja
gs
ret
gs
xchg
inc
lret
pop
icebp
aaa
scas
into
outsb
add
sub
nop
lret
clc
push
sarl
dec
mov
xor
stos
daa
loopne
cmp
test
and
mov
xor
ret
mov
daa
dec
test
xchg
or
ficomps
movsl
clc
pop
mov
lods
pop
xchg
outsb
jae
and
mov
mov
sti
nop
pushf
nop
xor
xchg
ficoml
push
jae
rclb
mov
xchg
xor
outsb
jmp
push
sti
movsl
xchg
push
xchg
lods
outsb
iret
mov
andb
mov
sbb
loope
dec
mov
rclb
push
jae
jge
jne
cltd
and
clc
fldcw
lds
or
dec
xorl
mov
lcall
push
movsb
cwtl
add
sarb
mov
push
mov
add
cmp
lret
sub
dec
push
inc
xor
fstl
xchg
push
call
jecxz
outsl
shll
leave
popa
cwtl
sub
aad
xchg
xor
ljmp
leave
pop
lds
add
js
rclb
inc
lds
push
jne
cwtl
out
ss
adcl
fstpt
xchg
xor
xchg
subl
rcrb
pop
in
jg
dec
mov
not
mov
inc
sub
inc
aas
mov
jne
outsb
xor
cmp
sub
adc
sub
pusha
dec
cld
cli
cmp
sbb
cmp
sbb
xchg
sub
or
mov
cmp
mov
jmp
sbb
mov
pop
popl
inc
test
pop
cs
xchg
cmc
insb
fisubrl
jecxz
or
xchg
jmp
test
mov
mov
mov
xchg
adc
js
xor
push
pop
add
sbb
mov
mov
mov
aaa
inc
ja
xor
ficompl
jmp
push
aad
adc
cwtl
jns
mov
cs
cmpsl
lods
data16
mov
adc
xchg
xor
cmpb
into
mov
add
into
xor
mov
enter
div
fmul
xchg
int
ret
adcb
pop
fstpt
sbb
adc
mov
jp
gs
addr16
push
in
movsb
push
jo
in
xchg
andb
cwtl
push
out
cmpl
and
and
lret
test
imul
dec
int3
dec
data16
cmpsb
loopne
push
jl
push
out
outsb
pop
mov
shlb
inc
stos
xchg
outsb
push
lods
cmp
pop
xor
js
xchg
add
mov
sbb
lock
aam
imul
lret
jg
or
dec
mov
inc
xlat
jb
xor
pop
repz
sub
mov
das
pop
mov
add
pop
fimuls
dec
cmp
push
test
cmp
or
ss
roll
jmp
jmp
xchg
xorl
ljmp
add
jge
imul
push
xor
aad
ret
mov
mov
push
mov
adc
cmp
stos
sbb
mov
dec
cmp
aaa
mov
out
pop
std
and
or
subb
jmp
push
lods
test
scas
and
rorl
mov
nop
int3
jb
subb
fistpl
jmp
adc
mov
aam
and
test
movsb
adc
mov
pop
push
outsl
pop
xor
or
in
adc
jg
mov
dec
jmp
pop
enter
std
add
repnz
or
mov
jle
popf
aaa
pop
rcrb
sub
xchg
sub
sbb
sbb
scas
lods
xor
jecxz
addr16
and
test
mov
scas
cltd
outsb
sbb
add
icebp
or
mov
mov
mov
js
push
push
inc
roll
movl
mov
pop
xchg
mov
shrl
lcall
pop
cmpsb
push
and
pusha
adc
sbb
popf
js
add
outsl
dec
adc
mov
test
les
jns
dec
mov
js
popa
fcoms
in
mov
push
test
repz
sahf
mov
sbb
ret
add
fisubrs
test
aaa
sbb
mov
fistpl
mov
mov
sahf
inc
inc
ss
mov
lret
insb
pop
imul
sbb
sti
dec
xchg
xor
adc
xor
inc
pop
xor
cmpsb
lds
adc
loopne
into
in
pop
cmp
sbb
mov
fnsave
in
cmp
or
ds
add
inc
out
xor
lret
cmpsl
push
jns
repnz
pusha
add
imul
dec
imul
lods
mov
add
and
inc
add
mov
in
xchg
push
jb
pop
fmuls
or
je
xor
cltd
lret
inc
flds
arpl
gs
adc
mov
cmp
ficoml
incb
jmp
fsubs
jle
jno
cld
ret
out
nop
xchg
pop
xor
movsl
mov
mov
mov
mov
push
fs
sbb
loop
mov
dec
outsl
jo
jp
outsl
push
test
xchg
arpl
mov
or
pushf
mov
dec
cmp
and
pop
lret
and
push
sub
xchg
cmp
dec
test
cmc
addl
push
inc
movsl
inc
push
mov
insb
fldenv
sub
fsts
scas
aad
pop
ror
mov
ret
imul
dec
xor
test
cmp
jle
jno
push
add
sub
fsqrt
inc
mov
leave
pop
mov
push
inc
imul
inc
cli
xchg
sbb
repnz
push
mov
dec
lods
pushf
sub
lcall
ja
cmp
pop
and
nop
xor
test
movsl
in
andl
adc
jnp
dec
jbe
aaa
sub
pop
push
sub
pop
add
mov
aad
notl
jb
ret
jp
lahf
addr16
scas
sbb
pop
sti
daa
ja
jne
imul
mov
sub
icebp
cld
xor
xchg
shl
sub
cli
test
push
pop
movsl
imul
pop
and
xor
and
loop
scas
lea
into
fistpl
or
pop
mov
test
xor
sbb
fnsave
xchg
div
insl
mov
xchg
mov
testb
rcr
push
mov
sarb
aas
arpl
jae
or
pop
dec
jmp
push
jecxz
add
subb
and
hlt
lret
jno
xor
movsl
pop
int3
test
and
popf
cmc
sbbl
push
and
or
mov
add
dec
mov
inc
xor
xchg
shll
test
insb
mov
hlt
lock
stos
sbb
leave
pmulhuw
les
sbb
sti
ds
sub
add
adc
lods
hlt
movsb
bound
xchg
inc
sbb
push
sub
pop
pop
test
inc
aas
fstpt
adc
or
xor
jge
dec
je
pop
adcb
das
rcll
js
mov
mov
leave
faddl
aas
pop
or
fldl
rclb
mov
push
push
lret
lods
fsubr
add
jp
xlat
and
divl
push
adc
std
pop
mov
lahf
xor
mov
or
in
in
andb
jne
jne
dec
divb
ja
mov
dec
les
out
add
jne
mov
mov
addl
lods
xor
push
int3
or
cmpsb
test
movsb
mov
pop
dec
or
or
int3
inc
repz
mov
cmp
jge
pop
arpl
pop
mov
cmp
cmp
rcrl
or
int
daa
lods
test
dec
mov
pushl
int
inc
out
dec
popf
xor
mov
movsl
inc
out
and
test
pusha
push
xor
pop
inc
mov
adc
lods
gs
lock
mov
call
clc
daa
jl
mov
wbinvd
ret
into
sti
test
jne
jecxz
int3
sub
inc
in
fcmove
cmpb
decb
std
pusha
push
aas
sub
xor
in
lods
aam
sbb
or
fistpll
or
mov
xor
cmp
sbb
mov
inc
lcall
xor
push
push
std
les
aad
xor
sbb
mov
jle
mov
mov
add
jp
hlt
shrl
add
push
jg
ds
xor
or
lret
in
outsb
fs
jne
clc
xchg
pop
fwait
mov
push
fisttps
pop
lahf
push
mov
nop
in
sub
inc
mov
inc
test
or
les
push
push
xchg
inc
pop
lret
add
add
jmp
xlat
in
sub
add
mov
iret
jp
inc
sub
jg
and
sbb
pop
std
pushf
pop
dec
fimuls
loopne
sub
dec
lret
dec
ret
xchg
fcompl
mov
rcrl
test
rcl
std
lods
mov
cmp
mov
popa
ss
scas
daa
xchg
push
lock
mov
das
fnstenv
push
or
push
xchg
inc
xor
inc
xchg
cmp
cmp
fists
jp
iret
add
add
add
cs
adc
inc
imul
lods
out
rcrl
pop
pop
out
inc
jnp
push
adc
dec
pusha
mov
fwait
popa
cmpsl
mov
popf
ljmp
mov
je
dec
or
testb
fcomip
sbb
andl
jns
or
repnz
cmp
ret
scas
jae
xchg
lahf
dec
lret
mov
jno
jns
addb
not
outsl
push
movhps
pop
out
repz
push
lahf
inc
aaa
cmp
add
mov
cmp
push
lock
mov
mov
adc
push
xlat
out
add
fsubrp
lahf
ret
cs
arpl
xchg
arpl
dec
jno
and
cmp
movsl
insl
fxch
and
cmc
and
movsb
cld
push
mov
xlat
jmp
sbb
jle
inc
sahf
jle
mov
in
ficompl
test
mov
jmp
mulb
mov
pop
cmc
cltd
push
pop
push
out
and
push
and
mov
pop
or
mov
mov
mov
pop
outsl
mov
and
out
dec
sarb
jae
mov
das
repz
test
cltd
lock
push
and
push
sub
je
insw
mov
cmp
dec
dec
lods
js
adc
xor
ja
repnz
add
lret
cmp
outsb
mov
test
outsb
mov
mov
movsl
xchg
mov
jmp
js
or
jne
mov
cmp
ss
rcrl
fadds
stos
mov
in
cmp
fisubl
imul
adc
fimuls
repz
mov
add
iret
xlat
adc
push
sti
cs
outsb
enter
and
xlat
test
dec
insb
inc
cld
push
xchg
test
loopne
sbb
es
xor
jae
and
imul
push
sub
js
repz
mov
pop
dec
xchg
orl
add
jp
sub
test
mov
mov
jmp
es
flds
cwtl
and
outsb
lds
mov
or
mov
mov
xlat
cmp
in
xor
xchg
jnp
jns
pop
pop
sbb
cmpl
add
cli
add
fstps
aaa
xor
enter
adc
es
outsb
pop
inc
push
mov
outsb
push
shll
pop
cwtl
mulb
out
xchg
movsb
aad
movsl
xchg
outsw
cmp
loope
in
push
inc
adc
repz
inc
xor
mov
cltd
mov
movsl
mov
and
lahf
out
movsl
fstps
loopne
mov
int3
mov
sbb
imul
mov
mov
adc
xor
das
iret
movsl
mov
repz
add
xor
out
lret
sbb
mov
mov
or
orb
out
in
push
loop
testb
enter
sub
mov
inc
cltd
jg
inc
mov
ret
add
xchg
dec
pop
push
sbb
rorl
adc
es
outsl
jp
int3
cltd
packuswb
jle
add
xchg
shl
div
and
mov
xor
lret
add
inc
sbb
fistpl
leave
lods
decb
inc
test
dec
mov
leave
outsb
sub
clc
jp
mov
push
inc
jle
mov
mov
mov
dec
xor
jl
adc
jmp
fisubrs
push
mov
in
push
mov
divl
jno
psubsb
push
cmp
fistps
outsb
adc
fnstenv
mov
sub
jb
push
ss
lea
xor
cmp
rorb
in
push
pop
jge
xor
mov
jo
xchg
out
adc
fcmovnbe
addl
dec
in
int3
pop
fs
adc
pushf
inc
fnstenv
push
cmp
dec
xor
add
nop
push
push
pop
mov
fidivrs
popa
pop
cs
mov
dec
xlat
mov
mov
jbe
sbb
into
sbb
iret
jae
das
xor
inc
les
icebp
std
push
pop
nop
adc
jp
sub
inc
inc
adc
ss
mov
add
cltd
adc
mov
mov
push
es
dec
insb
pop
mov
mov
pop
cmp
adc
subl
xchg
in
call
or
push
mov
mov
addr16
test
cli
mov
addl
icebp
nop
mov
pop
mov
rorl
fbstp
lock
out
fwait
cmp
mov
push
dec
lods
jo
cmp
cwtl
jne
fbld
aad
in
adc
adcb
sahf
adc
or
jno
cmp
call
lods
cwtl
xor
mov
out
adc
pop
loopne
mov
scas
mov
bound
sub
ja
int3
stc
in
imul
lahf
mov
adc
mov
test
mov
xor
pop
cltd
outsb
iret
pop
push
mov
in
add
push
mov
and
aaa
in
xchg
mov
adc
xchg
decb
in
jp
scas
inc
or
add
xchg
xchg
ljmp
cmp
dec
imul
add
and
jns
and
or
neg
in
push
in
dec
add
test
mov
jle
dec
mov
mov
fimuls
sub
scas
mov
mov
mulb
sub
mov
pop
ficomps
mov
jno
in
mov
ja
cmpsb
sbb
comiss
cmpsb
idivl
cmp
dec
xor
das
xchg
cli
sbb
xor
mov
lahf
sbb
cmc
jp
ret
sub
incb
jo
cli
shl
mov
mov
sub
push
je
dec
or
scas
sbb
pop
insb
mov
lock
loope
push
mov
xchg
cmc
mov
dec
mov
stos
cld
sub
mov
sbb
jle
jmp
jns
sbb
mov
in
loope
sub
scas
push
xchg
idivl
into
pop
clc
pop
jle
cmc
cmpsb
push
xor
sub
cmp
sbb
push
mov
or
leave
add
mov
std
pushf
js
shr
stos
std
dec
out
jns
jge
aam
dec
rolb
ret
sbb
out
push
rol
push
push
push
ficompl
xor
div
rcrb
mov
sti
mov
xchg
mov
ss
pushl
out
dec
and
ret
xchg
xchg
mov
in
cmp
pop
mov
sub
repnz
adc
sbb
out
loopne
push
pushf
cmp
xlat
or
mov
xor
dec
icebp
out
ljmp
cmp
cmp
fcos
sub
push
lcall
mov
or
jg
je
dec
in
rcrl
and
push
das
ss
mov
push
xor
mov
and
add
cmp
push
outsl
adc
inc
addl
mov
clc
sar
sbbb
cld
out
jns
cli
shrl
out
mov
jecxz
aad
sub
movsl
add
movsl
shl
xchg
cmc
fmul
cmp
arpl
mov
jo
or
shl
adc
fprem
mov
xchg
cmp
fiadds
das
aaa
mov
xchg
mov
outsl
int
mov
inc
fs
pop
mov
int3
mov
xchg
xchg
scas
dec
adc
ret
cli
inc
fstp
xchg
pop
and
ror
icebp
fidivrl
add
movsl
mov
arpl
and
pushf
movsb
xchg
movsb
int3
in
inc
adc
fldt
sbb
pop
int
or
push
and
mov
xchg
inc
jno
cwtl
in
ja
aaa
lods
test
inc
pushf
mov
push
jno
dec
add
nop
xchg
dec
pop
cmp
and
push
mov
push
push
fs
jb
shl
nop
test
or
or
sahf
xchg
mov
int3
jl
lods
or
sbb
dec
add
and
std
mov
fwait
stc
jmp
in
stos
clc
int
iret
sbb
daa
mov
nop
push
cmpsl
jbe
das
xor
inc
sti
aad
sub
mov
fs
into
stos
shlb
push
and
mov
mov
jns
addr16
inc
cmp
clc
xchg
mov
inc
inc
sarl
addr16
lods
ss
mov
fmuls
sbb
and
leave
cmp
pop
jno
lds
je
cmp
add
inc
inc
lock
or
mov
bound
or
daa
iret
es
in
add
in
das
cmp
scas
enter
jns
outsb
std
das
mov
cmp
fstp
leave
into
sbb
add
jnp
add
dec
or
es
inc
add
rcrl
pop
inc
xchg
and
jg
popa
inc
dec
shll
lret
gs
into
sub
cmpsl
cmp
lods
js
jmp
adc
movsl
mov
sub
test
pushf
into
push
pop
xor
inc
add
mov
mov
push
aad
shl
aas
ret
cmpsb
mov
test
mov
xor
lcall
enter
sbb
pop
add
mulb
push
insb
insw
repz
cwtl
popf
or
inc
dec
mov
xor
mov
mov
push
ud1
lock
pop
dec
push
mov
mov
push
sub
cmc
fists
dec
cmc
lret
sbb
and
data16
lods
adc
or
cmp
dec
ret
in
jecxz
daa
imul
or
push
sbb
gs
pop
test
stos
push
mov
sub
inc
mov
mov
outsl
fidivl
lret
pusha
imul
jmp
loop
data16
push
packuswb
js
lcall
test
inc
addl
test
lcall
faddl
cmpsl
ljmp
cmp
pushf
jecxz
ss
mov
or
cmp
lea
add
and
pop
and
ficoms
pushf
cltd
pop
btsl
insb
mov
andl
out
dec
cmp
xor
xor
rorl
jnp
ret
hlt
inc
stos
addr16
pop
adc
xor
mov
adc
iret
testb
dec
lods
icebp
ljmp
add
loope
or
or
popf
fnstcw
faddl
fucomip
loopne
cmp
movsl
cmpsb
sub
divb
cmp
push
ret
popf
out
arpl
lock
and
insl
push
mov
aam
cmpsb
inc
dec
jge
loop
orb
lahf
push
mov
bound
xlat
sbb
mov
dec
and
cmpsl
insb
sub
pop
inc
push
shlb
xor
xchg
inc
rep
mov
add
mov
jmp
dec
xor
inc
mov
push
jg
es
and
dec
mov
add
in
ficoms
inc
repnz
push
xor
sub
pop
inc
xor
cmc
pop
sub
icebp
dec
out
test
mov
inc
and
scas
lret
out
fwait
jns
pusha
xchg
pop
xchg
shl
jecxz
lret
push
inc
dec
push
cmp
mov
pop
adc
mov
fdiv
out
test
inc
inc
aam
cli
xchg
sahf
stc
lock
push
adc
mov
bound
lods
pop
lods
addl
mov
cmp
movsl
cld
inc
lods
loope
fwait
cmp
rclb
mov
push
popa
cltd
sahf
mov
sub
xlat
xchg
aam
cmpsb
ja
inc
ljmp
jnp
mov
dec
inc
mov
in
ja
mov
out
push
cmp
mov
dec
xchg
js
pop
rcrl
inc
std
xchg
in
popf
lock
in
add
pusha
xchg
pop
insl
aas
inc
stos
lods
orl
movsb
pop
xor
ds
mov
jno
pop
add
adc
push
cmp
gs
daa
mov
pop
jle
xor
inc
add
fldenv
ja
andl
xor
int
sbb
dec
int
mov
jne
leave
mov
test
imul
mov
je
mulb
pop
cli
daa
pop
mov
outsl
gs
cmpsl
fucomip
jbe
sbb
inc
in
pop
sub
sbb
mov
xchg
in
ret
and
cmpsb
mov
add
push
add
les
pop
pop
push
adc
inc
add
adc
fldl
inc
or
imul
push
jo
lds
jle
popa
jnp
inc
pop
push
push
and
jo
cs
lcall
jo
fmulp
push
adc
or
push
ret
lret
sub
addl
fidivs
fbstp
xor
movsb
jecxz
mov
mov
addr16
mov
mov
aas
test
iret
jae
stos
das
and
adc
aad
inc
in
imul
shl
jae
inc
dec
sahf
mov
pusha
lret
shrb
fnstenv
arpl
call
aaa
loop
cwtl
test
xchg
inc
inc
aas
cmp
cmp
mov
fwait
mov
xor
jge
add
int
js
dec
loope
mov
sub
dec
and
lea
inc
cmp
in
dec
pop
cs
mov
and
adc
lret
push
add
dec
mov
sub
mov
scas
adc
jg
jo
xor
fiaddl
sbb
push
repnz
mov
outsb
dec
arpl
add
mov
pop
pop
aam
xchg
lods
aad
adc
aaa
sub
out
jo
adc
pop
movsb
mov
sub
inc
lea
dec
cmp
lods
push
out
aam
lock
pop
xchg
mov
fisubl
pop
ja
sbb
or
jno
aam
xchg
xchg
fisttps
jl
mov
xor
mov
xchg
pop
jl
xchg
lds
dec
pop
mov
nop
cmp
mov
pop
inc
cmc
pusha
xor
ficoms
int3
cs
xor
cs
in
fldt
xor
in
cs
push
jo
loope
mov
aas
push
outsl
test
gs
inc
loopne
push
ror
jns
imul
jge
lock
cmp
scas
push
shrl
fsts
leave
in
lcall
add
int
sar
stos
clc
rorl
cltd
bound
das
inc
lret
xor
outsb
in
fmul
imul
inc
mov
cmpsl
lods
xor
int
nop
int3
ror
ja
testl
testl
stc
lahf
cs
pusha
jae
ss
adc
cld
dec
push
jnp
ret
or
mov
andl
addr16
push
push
aam
and
cmpb
test
aas
jne
sbb
and
mov
cli
in
daa
cmp
outsl
pushf
int
inc
mov
lea
ror
mov
ret
fdivrs
enter
andb
outsl
inc
adc
js
xor
mov
scas
loopne
out
pop
dec
mov
adc
dec
jns
cld
sub
jmp
leave
fadds
add
xor
jae
outsb
shrb
arpl
aaa
inc
lret
cs
cld
roll
or
or
sub
mov
fbstp
cmc
jnp
xlat
lea
and
adcb
ret
scas
popa
push
xlat
add
sbb
dec
mov
jnp
push
jmp
mov
dec
xor
in
gs
std
sub
imul
iret
cmp
pop
adc
sub
into
cmovp
adcl
leave
adc
jne
sub
push
or
mov
call
lret
adc
int3
add
cmpsb
sti
sahf
cmp
fists
cmp
cs
adc
xor
lret
daa
clc
in
jg
inc
mov
fs
pop
xchg
fstpt
loop
fs
aas
imul
outsl
outsb
out
and
lds
adc
popf
cmp
dec
xor
cltd
push
icebp
ret
cli
mov
inc
inc
leave
in
sti
pop
popa
addl
loop
mov
xchg
push
mov
mov
test
fisubl
fmull
popa
xlat
jl
daa
mov
rcll
mov
roll
scas
test
ret
lods
pop
xchg
dec
aas
aam
into
or
xchg
xchg
fcom
push
outsb
xor
cs
repnz
cmp
daa
stos
pop
repz
pop
int3
xor
mov
push
inc
out
into
sub
xchg
inc
inc
test
adc
mov
fwait
pop
cmc
sti
xor
mov
dec
mov
and
sbb
popf
sbb
aas
push
leave
test
sbb
daa
mov
add
js
fiadds
cli
inc
shrb
in
out
data16
into
and
in
daa
xor
lcall
adc
pop
push
popf
push
push
mov
dec
or
stos
mov
adc
pop
jno
xchg
push
adc
cli
in
sub
into
xorl
and
les
pop
and
mov
inc
sub
mov
sub
and
repnz
mov
sbb
pop
testb
inc
sbbl
push
clc
subl
mov
mov
movsb
fdivrl
adc
xchg
and
mov
jo
sub
pop
daa
cmp
xchg
lock
adc
or
lret
ljmp
xor
js
xor
and
fisubl
lret
mov
fistps
lods
cmpsl
ja
pop
scas
cmp
loop
mov
rdtsc
shll
lock
dec
mov
scas
repnz
jno
jo
in
adc
insb
js
hlt
add
and
mov
mov
mov
ja
mov
jae
mov
dec
pop
loop
jg
popa
jle
add
xchg
enter
and
mov
cmp
push
out
stos
sbb
andb
sub
sub
adc
lock
mov
jae
dec
filds
les
and
clc
mov
fbld
add
xor
xchg
add
inc
mov
or
add
and
cmp
xorb
cs
jmp
adc
out
cli
std
lods
inc
inc
out
xchg
mov
pop
push
inc
push
daa
insb
sbb
cltd
hlt
xorb
lods
mov
pop
push
ret
mov
movsb
push
pop
das
pop
mov
mov
jmp
inc
mov
cmpb
inc
out
pop
loop
imul
fimull
rcr
leave
jge
repz
adc
rcrb
mov
syscall
rcrl
push
adc
clc
sub
rorl
inc
or
xor
enter
pop
jmp
pop
mov
or
cmp
andl
cmpsl
imul
jbe
rcrb
test
cwtl
scas
fildll
mov
dec
fisubs
nop
cmpsb
jbe
sbbl
je
cwtl
and
sbb
mov
mov
or
clc
clc
sub
xchg
filds
mov
idivb
push
xor
test
icebp
enter
idiv
dec
sub
xchg
sbb
pusha
jnp
push
adc
xor
xor
shrl
in
xchg
mov
pop
mov
pushf
mov
push
and
lock
jecxz
pop
pminub
gs
imul
sbb
jb
sub
clc
std
xchg
pop
sarb
jno
bsr
ss
fnstenv
or
jb
jb
dec
mov
stos
xor
mov
hlt
cli
or
cmp
xor
sub
or
xchg
push
jae
jp
xchg
push
shl
push
cmpsl
rcrl
adc
cmp
jle
es
jbe
push
push
sti
ja
push
inc
jae
dec
adc
or
add
pop
jb
or
es
xlat
dec
pop
lock
sub
repnz
push
and
lods
mov
xchg
addb
test
imul
sbb
sbb
mov
cmp
jp
lods
fistpll
dec
pusha
cli
repz
push
and
ret
cmp
into
bnd
xor
das
pop
leave
inc
and
test
dec
mov
repz
lret
sbb
cmp
mov
adc
inc
je
stos
stc
test
cwtl
push
jnp
pop
cmc
pop
xchg
out
fwait
mov
mov
flds
ja
jnp
cmp
mov
sbb
and
cli
xchg
xor
cmc
adc
pusha
inc
mov
push
pop
ret
xchg
movsl
ja
jbe
mov
rcrl
test
and
adc
out
mov
add
jnp
outsb
add
sub
xchg
je
loop
jp
dec
rcrb
and
or
lock
xlat
call
or
loope
cld
mov
lret
aaa
lret
ja
mov
mov
cmp
mov
scas
ss
xor
and
rcll
pop
and
scas
jecxz
insl
std
stos
fs
lock
cmpb
insb
pop
pushf
push
jae
jg
in
push
xchg
xchg
mov
adc
shlb
cmp
push
mov
out
cmp
mov
and
cwtl
xlat
in
mov
jo
mov
inc
movsb
pop
sub
pop
test
lea
xchg
jecxz,pt
pop
xchg
fimull
pop
xchg
adc
clc
mov
mov
lock
out
out
pop
push
mov
sbb
add
addr16
adc
sub
xor
mov
arpl
ja
repnz
addr16
and
dec
jp
lds
jae
push
subl
scas
out
or
cltd
das
mov
adc
or
dec
mov
lcall
pop
dec
insb
fdivp
push
sub
repz
lods
rcrl
xchg
pusha
cwtl
pop
scas
mov
insl
mov
dec
push
ret
test
je
mov
aad
fwait
mov
inc
imul
popf
mull
mov
cmp
call
fildl
lret
dec
xlat
scas
arpl
mov
push
jmp
mov
clc
sub
dec
push
out
fldenv
orb
add
loope
and
sub
out
jnp
outsl
shr
mov
jp
loop
paddsb
dec
sbb
lods
clc
add
pop
xchg
cmpb
jns
mov
xor
ret
rorb
notb
mov
xchg
gs
movsl
pop
loopne
cmp
adc
adc
dec
cs
lds
cld
mov
das
fildll
sbb
xchg
movsl
adc
nop
pop
sbb
mov
stos
jo
insb
out
push
inc
push
xchg
daa
in
xor
in
mov
inc
iret
or
sub
dec
data16
and
lret
inc
addr16
and
ljmp
sbb
xchg
push
xlat
mov
jns
clc
or
jg
loopne
out
inc
xor
enter
cld
stc
inc
jecxz
push
sbb
mov
push
decl
fld
int
mov
mov
ret
add
jecxz
inc
or
das
orb
mov
outsb
lahf
dec
xchg
inc
aas
test
mov
mov
aad
movsb
adc
cmpsl
xor
arpl
shrl
iret
mov
mov
xor
aas
jbe
arpl
or
xor
push
test
test
or
clc
inc
jp
cltd
mov
shll
dec
movsb
addb
pop
das
mov
mov
or
adcb
arpl
shlb
pop
test
mov
aaa
cmc
aad
or
mov
jl
clc
mov
xchg
adc
mov
cmp
jp
pushf
sbb
les
bt
sub
jge
mov
iret
sbb
xchg
or
outsb
dec
push
jns
xchg
int3
cld
clc
je
popa
test
jae
or
sbb
inc
jge
decl
dec
cltd
aas
out
add
jo
adc
sbb
int
inc
das
or
adc
pusha
push
jle
add
inc
pushf
pop
xlat
cltd
xchg
scas
pushf
in
inc
adc
add
outsl
mov
arpl
xor
pop
aad
fbld
inc
pop
jbe
decb
mov
aam
add
xlat
jne
sti
das
pop
sub
cmp
in
repnz
inc
cwtl
shrl
popa
dec
sub
call
cmp
movsb
cmp
movsl
packuswb
loop
lock
test
imul
jl
xor
mov
shr
fcom
dec
ss
outsl
dec
fdivrl
movsl
sbbb
dec
jne
fnstsw
mov
push
adc
adc
jmp
out
ss
out
fdivl
aad
adc
test
test
imul
or
int3
cmp
dec
xchg
scas
mov
mov
scas
out
stos
out
cmp
lcall
jns
shlb
xor
mov
cltd
lret
jne
stos
lret
mov
addr16
fstpl
sbb
mov
xor
enter
mov
mov
cmpsl
add
leave
dec
xchg
push
sub
push
data16
js
out
int
mov
lret
pop
icebp
loop
insl
add
in
mov
mov
push
adc
jge
push
adc
mov
pop
jmp
leave
xor
pop
ss
mov
pusha
xlat
fs
sub
xor
and
mov
push
int3
sbb
inc
xor
loop
addl
loopne
xchg
xchg
and
inc
pop
stos
outsb
xlat
push
add
mov
mov
mov
and
mov
daa
cvtps2pd
or
adc
lcall
pop
aad
cwtl
outsb
pop
and
mov
lods
pop
repz
fdivs
mov
jecxz
mov
lret
movsb
jns
cmp
pop
rolb
push
inc
sub
repnz
iret
cmp
orb
and
push
lods
scas
or
cs
fdivrs
jmp
je
outsl
mov
sbb
call
adc
mov
sbb
inc
pop
xlat
add
inc
dec
xor
scas
pop
dec
inc
inc
sbb
mov
fdivrs
push
or
ret
cwtl
loop
mov
dec
push
add
loope
mov
or
add
outsl
fsub
and
push
mov
daa
jns
mov
aad
push
rclb
add
not
sbb
jmp
ja
mov
lods
rclb
dec
aam
test
sbb
inc
mov
daa
nop
roll
add
pop
push
lret
movsl
jno
fisubl
adc
pushf
aad
int
es
push
mov
jno
sbb
rclb
xor
jge
push
int3
addr16
ret
push
arpl
mov
pop
shrb
hlt
add
ret
sub
or
mov
dec
in
cmc
aaa
addr16
mulb
fsubs
ret
dec
xchg
out
inc
mov
push
nop
dec
fldcw
imul
push
je
sub
mov
cmp
fidivl
push
hlt
xchg
add
lret
xchg
test
int3
sub
scas
mov
ds
cmc
push
inc
mov
xchg
lock
xchg
es
dec
xchg
sbb
fucomp
stos
mov
pop
pusha
cli
cvtps2pi
xor
enter
or
cmp
push
mov
mov
rcrb
mov
lock
fiaddl
js
pop
popl
push
dec
jecxz
push
int3
xchg
adc
lret
dec
sbb
xchg
in
sbb
inc
mov
pop
xor
sar
lea
clc
adc
clc
sub
sub
adc
addr16
push
rcrb
pusha
repz
notb
ds
sarl
sub
pop
xor
test
enter
dec
aaa
outsb
es
fistpl
pop
sbb
mov
lret
scas
in
pop
mov
inc
mov
and
iret
or
or
addr16
and
mov
mov
pusha
mov
xor
pop
std
mov
push
xlat
dec
pop
xor
mov
aam
pop
dec
xchg
mov
pushf
in
push
mov
sbb
xor
adc
jb
nop
popf
mov
jnp
out
cli
push
in
sbb
shl
inc
outsb
jge
rcrb
cmpsb
repnz
fistps
inc
add
mov
mov
in
sub
cmp
std
rol
outsl
mov
ds
jmp
sub
cli
jnp
xchg
fstps
fwait
cmc
les
mov
and
cmpsb
cwtl
jne
sbb
ret
lret
sbb
lods
jge
xor
test
pop
inc
sbb
or
jnp
call
aam
push
sbbb
pop
xor
push
or
push
jge
mov
fnstenv
call
icebp
out
shlb
adc
clc
and
add
loope
cltd
lea
mov
and
cld
gs
out
test
or
adc
rorl
jo
adc
xor
ficoml
pop
xor
xchg
test
in
mov
cmc
cli
pop
jecxz
fildl
popa
pop
rorb
fs
and
shr
test
fistpl
lcall
push
xchg
fisttpll
push
sbb
push
scas
leave
mov
loop
fisubl
dec
sbb
mov
or
test
xor
loop
das
jnp
pop
jnp
sbb
jo
les
mov
mov
sbb
fistpl
frstor
pop
pop
aad
aas
adc
adc
cmp
jl
lret
inc
push
fldl
fidivrl
sub
pusha
outsl
outsb
rcr
lock
cltd
and
push
add
mov
pop
cwtl
jbe
aam
ja
insl
xlat
pop
mov
and
inc
sub
popf
test
inc
ds
ja
cmp
cs
enterw
fwait
lea
enter
ret
inc
fiaddl
aaa
pop
push
pop
scas
xlat
adc
jbe
xchg
sbb
adc
pushf
sbb
sub
push
jo
mov
out
test
das
loopne
mov
cmp
mov
xchg
test
pop
outsl
push
lahf
repnz
push
lods
or
std
mov
lret
fcomi
decb
cmpsb
into
mov
dec
repz
and
push
dec
jg
movsb
shl
outsl
inc
iret
ljmp
lret
sub
add
dec
das
xchg
dec
add
pop
xchg
jmp
pop
sete
jbe
mov
fwait
arpl
xchg
jp
push
std
mov
push
movsl
fiadds
in
mov
daa
out
mov
rcl
cmp
popf
imul
in
loop
cmp
clc
mov
push
and
push
jecxz
jmp
jne
cmp
test
ficomps
lods
xor
movsb
adc
fwait
repnz
test
sbb
scas
xchg
push
push
and
cmpsb
stos
sbb
sbb
outsb
lahf
fnstenv
cld
jg
dec
neg
clc
push
and
lahf
jno
scas
test
lods
jo
dec
adc
or
data16
dec
add
or
xchg
sub
cmpsb
icebp
rolb
lea
cmc
mov
shlb
loopne
cmovae
add
aas
xor
test
push
std
repz
mov
dec
xchg
mov
int
divb
imul
out
jo
aas
loop
cmp
std
call
sbb
idiv
test
xlat
rcrl
dec
outsb
pushl
lock
push
loopne
lcall
jno
stos
and
rorb
push
lds
pushf
popf
sbb
jmp
pop
or
lea
mov
push
xor
mov
mov
call
xor
iret
js
cli
pop
ss
test
aad
addr16
inc
adc
shll
push
xor
dec
push
add
sti
fsubr
popa
jae
popa
adc
pop
inc
push
and
sar
pop
jg
mov
mov
mov
scas
mov
repnz
add
inc
adc
xchg
fs
cmp
inc
mov
or
loopne
or
sub
xor
mov
test
xor
sbb
in
push
les
stc
mov
in
ds
inc
testl
testl
mov
mov
pop
add
jl
push
pop
pusha
into
les
stc
push
push
sbb
ret
mov
cld
lcall
jp
sahf
je
pop
fsubrl
mov
es
xchg
cmpsl
sbbl
testl
and
cmp
fs
lock
cmp
iret
dec
cmpsb
or
or
mov
xchg
sub
test
adc
roll
subl
or
loopne
stos
pop
ljmp
ljmp
pop
inc
jno
xor
cmp
fisttpl
adc
sbb
jno
andb
pop
clc
rep
mov
pop
mov
inc
scas
rcr
andb
inc
push
stos
xor
mov
cmp
xor
push
icebp
mov
movsl
test
and
hlt
fsubl
pop
or
xchg
stc
dec
adc
jecxz
mov
push
xor
insl
xchg
pop
repz
jb
in
outsb
test
pop
mov
sbb
add
int
lods
jge
mov
dec
cmp
es
push
pop
jl
arpl
cmp
sub
pop
inc
dec
or
push
movsb
or
sbb
les
mov
je
inc
sti
inc
ss
push
int3
jge
jecxz
jp
mov
push
call
popf
mov
and
dec
in
dec
stc
add
cmp
icebp
and
hlt
jmp
aam
mov
test
push
xchg
adc
mov
mov
sarl
pop
push
outsb
adc
test
shll
cmp
mov
mov
jo
xor
aam
js
lcall
jg
lret
cmpsl
sub
aam
out
in
movsb
sbb
dec
les
nop
inc
scas
imul
jbe
aas
dec
incb
push
push
push
fninit
outsl
aam
mov
ja
or
into
cs
sub
cmpsb
into
xor
mov
push
ret
out
std
mov
daa
xor
dec
lods
jne
ret
mov
cld
dec
push
mov
sub
inc
push
nop
aam
mov
adc
or
lret
es
bound
repz
or
mov
xchg
ja,pn
shrb
lods
sub
cltd
icebp
inc
push
inc
lods
aaa
loopne
andl
scas
sti
sub
jno
outsl
stc
pop
shlb
outsl
cmp
sub
jbe
lea
dec
clc
lea
pop
push
les
mov
mov
mov
inc
adcl
loopne
mov
push
cmp
push
mov
and
pushf
jp
std
daa
mov
mov
jne
adc
insb
cld
sbb
out
adc
mov
cwtl
sbb
mov
dec
xchg
sub
pop
xor
out
scas
inc
pusha
lock
xchg
addr16
or
xchg
mov
xor
jmp
scas
fdivr
xchg
pop
sub
pop
movsb
bound
pop
in
aaa
xchg
lgs
push
pop
cltd
add
xchg
pushf
mov
mov
rol
pushf
sbbb
mov
lods
push
push
and
cmc
dec
add
cs
int
call
test
push
aaa
add
outsb
add
jmp
pop
lahf
adc
and
lds
fsubl
or
jp
faddp
hlt
mov
or
ret
xor
jle
adc
jl
xchg
nop
pop
sub
inc
xchg
jne
ficompl
jno
ret
add
sarb
dec
enter
push
test
jge
scas
je
sub
inc
add
mov
inc
jb
jl
data16
inc
idiv
lds
sub
dec
cltd
je
nop
jmp
imul
ret
mov
ja
adc
cs
out
pop
imul
push
fildl
mov
and
test
inc
loop
lods
es
inc
cwtl
sub
sub
daa
movsl
dec
dec
adc
lea
ja
fadds
adc
dec
mov
nop
ret
and
mov
ja
pop
jbe
xorl
sti
call
sbb
mov
jl
enter
sbb
xchg
fisttps
pop
xor
dec
add
inc
mov
push
xchg
cmp
mulb
xor
in
or
arpl
aad
inc
pop
shll
jg
push
jp
sub
andl
lods
pop
fisttpl
fsts
js
xchg
add
xchg
or
dec
in
andb
cmp
pusha
xor
fidivl
sbb
and
lods
xor
iret
es
ss
lods
cli
insl
fimull
xchg
mov
mov
shll
jl
leave
inc
mov
sbb
lds
imul
lock
imul
jne
push
push
add
andb
xor
fcmovnu
pop
adc
pop
ds
rcr
sti
sub
mov
sub
or
jg
dec
in
cmp
adc
add
popa
xor
adc
rcr
test
xlat
nop
inc
stc
xor
mov
dec
lods
shlb
loop
out
rolb
xchg
imul
roll
outsb
jb
push
dec
leave
cmp
pop
test
pop
fwait
mov
test
xchg
jmp
out
and
sbb
iret
movsl
das
xchg
negb
adc
xchg
jg
xor
adc
or
scas
dec
mov
iret
push
test
cmp
cmp
jne
sub
movsl
aas
cmp
xchg
mov
jp
test
inc
int3
jo
ret
pop
pop
imull
pop
pop
pop
or
adc
mov
jg
jne
sub
cmc
push
xor
mov
test
cmp
add
xchg
sub
nop
ret
les
jnp
dec
into
lahf
leave
and
clc
sub
mov
push
xor
adc
cltd
sub
mov
imulb
mov
mov
and
dec
mov
aas
add
sbb
aad
xchg
pop
sbb
jno
int
popa
cmpb
push
insb
ret
lcall
lret
pop
leave
mov
inc
fs
sub
loopne
xchg
or
mov
mov
sub
pop
mov
xchg
or
mov
int3
jnp
push
fstps
dec
test
add
aaa
fwait
fs
pop
jne
cmpsl
mov
stos
test
rorb
cmp
or
push
mov
iret
or
dec
mov
sub
pop
shl
gs
andl
jno
xchg
xorb
ljmp
std
cld
outsl
mov
pop
call
addr16
js
aas
dec
mov
daa
jae
out
insl
adc
add
int
mov
push
pushf
mov
xchg
test
push
adc
and
fxam
repz
icebp
ljmp
lahf
repnz
cmp
push
or
aam
fildl
sub
pop
jne
xlat
xchg
add
ret
fsubl
jmp
or
int
repz
mov
xor
and
aam
cmp
jle
push
mov
mov
cmpb
js
pop
dec
and
adc
push
dec
mov
je
xlat
lock
dec
mov
cli
xlat
push
mov
fistps
and
movsl
dec
mov
jecxz
sahf
and
push
cmp
lods
push
out
xchg
cmpsb
push
ss
push
mov
mov
js
mov
leave
repz
loope
xor
sub
out
jmp
in
and
loope
mov
pop
pusha
xor
xor
pushf
jnp
pusha
je
sbbl
add
mov
or
es
mov
jl
add
repnz
test
pop
xchg
xchg
mov
dec
movsb
stos
cltd
adc
or
push
pop
xor
jge
jno,pn
lahf
xor
popf
adc
lcall
es
mov
mov
inc
adc
in
pop
mov
jg
mov
adc
daa
in
adc
fs
jns
ja
inc
enter
mov
jecxz
sub
xchg
push
cmp
ja
hlt
mov
push
aas
daa
inc
mov
lds
dec
mov
das
cmp
into
sbb
jne
sub
xchg
test
push
scas
mov
pop
or
or
addr16
mov
pop
or
enter
insl
jmp
jns
mov
out
push
in
in
dec
out
push
pop
rolb
push
iret
pop
push
adc
fbstp
fsubr
xchg
in
cld
jnp
mov
cmpsb
push
add
cmc
orb
push
shlb
inc
mov
fdivp
or
popa
rcll
push
jecxz
hlt
pop
out
and
pushf
or
loopne
push
add
push
out
mov
stc
or
aas
xchg
adc
inc
inc
stos
mov
mov
xchg
ljmp
sbb
lahf
or
pop
cmp
lock
sahf
std
aad
int3
jo
inc
jle
popl
cld
ficoms
arpl
jg
movsb
inc
pop
jecxz
pop
or
jne
cmp
rcrb
cmpsl
dec
pop
sub
cs
inc
cld
pop
sub
jb
xchg
ficoml
loope
add
and
adc
cld
int
test
mov
fnstenv
gs
test
lods
lods
mov
fidivs
rcrb
fiadds
dec
push
repnz
das
push
shll
test
mov
movsl
sbbb
pop
push
and
xor
pop
push
mov
addr16
iret
ffree
insb
insl
mov
dec
and
push
mov
jge
pop
mov
mov
sbb
mov
lds
add
jmp
mov
bound
lods
pop
ficomps
out
mov
jmp
add
cmp
sbb
xchg
divl
pop
test
inc
sarb
or
and
jg
or
push
shlb
and
pop
cmp
icebp
lods
sub
lcall
xlat
mov
jne
cmp
arpl
push
and
xlat
dec
aas
fcomps
jge
imul
jae
test
mov
bnd
sub
jp
test
add
or
fmuls
xor
jp
jl
mov
or
fisttpl
pop
sbbb
xor
and
cltd
and
or
movsb
jno
pop
cli
sub
xchg
fstpl
add
negb
es
or
shl
push
sahf
xchg
dec
fsubrs
pop
and
aad
addr16
mov
int
aas
and
inc
fistps
inc
adc
mov
insl
jo
popl
push
fldenv
or
pop
push
jle
mov
inc
pop
stos
xchg
fs
sub
or
jne
pop
cmp
lahf
or
pop
sub
add
aam
mov
orl
call
pushf
mov
mov
or
mov
push
daa
stc
ret
inc
pop
pop
ljmp
int3
xor
or
inc
jg
outsl
xchg
jno
divl
je
lret
sbb
aad
jge
ljmp
shrb
addr16
jle
mov
in
or
xchg
insl
pop
fsts
mov
add
lret
insb
ds
in
fs
stc
xchg
cmp
decl
leave
iret
xorb
sbb
sub
adc
dec
mov
ret
xor
popf
ficompl
es
outsb
setno
and
pop
je
mov
push
shll
loopne
mov
adc
dec
in
fdivp
mov
xchg
scas
mov
mov
mov
pop
or
adc
push
dec
jg
rcrb
lahf
xchg
dec
lcall
mov
cmovs
test
jne
sbbb
dec
nop
cld
push
and
xor
push
loope
fimull
sbb
mov
stos
test
aas
adc
cs
mov
push
push
jecxz
inc
push
test
or
outsl
or
sbb
mov
xor
dec
mov
or
push
mov
dec
cmp
ficoml
mov
outsl
cwtl
js
cmp
outsl
lret
ds
inc
ret
std
mov
imul
mov
ret
pop
mov
pushf
mov
dec
xor
ljmp
lods
jb
xchg
sbb
andl
js
adc
sbb
xchg
add
pop
jb,pt
jnp
sarb
cmp
fisttpl
mov
stos
sbb
fdivs
out
scas
out
lcall
mov
jp
cli
adc
insl
xor
push
cmp
jns
sbb
mov
loope
or
movsb
adc
das
pop
mov
and
je
mov
add
mov
xchg
cli
mov
cmp
test
xlat
mov
cmp
ret
dec
into
dec
imul
scas
or
xor
scas
mov
pop
movsl
jae
je
mov
xor
loopne
cltd
aaa
and
decb
xor
xor
pop
cli
jb
inc
cmc
imulb
pusha
popf
fmuls
fucomip
in
in
sbb
cmp
adc
iret
push
aad
repz
fcoml
cs
hlt
fildll
jle
aam
orb
mov
pop
mov
fsub
lods
inc
ds
add
sub
pop
adc
repz
fidivrl
cwtl
repz
scas
mov
pop
push
cs
movsb
push
fnstsw
mov
or
xor
sub
repz
xor
and
jp
or
stos
movsl
insl
adc
dec
out
push
xorl
mov
rorb
divl
aaa
sub
jo
daa
sbb
jmp
shll
sarb
adc
bound
mov
mov
or
repz
fldt
jmp
scas
add
sub
les
mov
push
pop
push
ret
adc
jo
xchg
sub
push
pop
xchg
pop
lods
out
jp
jmp
pop
fs
pop
xor
movsb
rcrb
rolb
xor
inc
mov
cmp
pop
daa
jl
sbb
test
or
push
jg
mov
mov
push
sbb
mov
stc
and
out
out
sbb
lds
jo
cmp
mov
outsl
in
jb
adc
or
jnp
gs
jp
push
negl
push
fisttpll
mov
jmp
sbb
ljmp
aad
mov
and
sbb
icebp
xlat
xchg
lock
add
pop
mov
mov
movsl
imul
jns
rorb
cld
addb
or
xchg
mov
inc
shlb
push
shll
and
and
lcall
cli
testb
lret
aas
xorb
stc
xchg
maxps
incl
cmp
cltd
push
inc
inc
pusha
jo
adc
inc
aad
jns
xchg
mov
hlt
scas
aaa
stos
lahf
sub
decb
xor
or
pop
xchg
mov
cmp
adc
in
mov
fiadds
xor
call
adc
xchg
fs
gs
or
jns
je
daa
leave
pop
dec
mov
adc
xchg
fstpl
cmp
lret
xchg
inc
jnp
insl
mov
sub
lcall
xchg
jl
push
fs
pop
lods
fdivp
popf
pop
inc
push
xchg
push
push
addr16
test
push
in
stos
int3
push
push
inc
and
aad
sarl
mov
jb
filds
lret
xchg
and
js
leave
mov
cmp
inc
dec
xor
cmp
and
push
out
movsl
push
sbb
stos
and
nop
push
inc
inc
and
roll
or
or
mov
and
imul
sahf
mov
aad
sbb
pop
stos
mov
cmp
jecxz
lcall
adc
mov
push
xchg
sbb
adc
cmpl
mov
or
fldenv
ja
push
mov
mov
pop
sub
cmp
add
cwtl
add
repz
mov
arpl
sbb
jp
sbb
ret
popf
push
lret
xor
enter
push
shlb
adc
xor
mov
jmp
inc
fistl
lods
jae
inc
lahf
lahf
push
call
outsb
negl
loopne
sti
repz
lds
jbe
jecxz
xor
xchg
push
adc
lcall
pop
out
mov
xor
jbe
iret
addr16
bound
mov
mov
mov
lret
xchg
pop
iretw
push
xlat
in
out
ds
inc
das
fmulp
jge
lea
fsub
dec
sti
loope
inc
pop
sbb
clc
xchg
enter
popf
cli
inc
enter
out
loop
das
clc
mov
jo
pushf
pop
dec
cmpl
sub
insl
dec
push
cld
arpl
sahf
sysret
popf
sysenter
xor
lods
or
sub
add
lds
cmp
jg
daa
imul
aam
adc
jle
lds
fdivrl
ret
mov
mov
addr16
leave
das
icebp
push
sbb
enter
cmp
arpl
popf
adc
xor
pop
push
cltd
jmp
and
mov
aas
aaa
push
mov
cld
stos
aas
pushf
pop
push
inc
out
repnz
out
roll
outsl
or
xchg
jno
nop
push
xchg
mov
mov
ret
xchg
or
loopne
sub
xchg
xlat
jbe
sbb
stc
mov
inc
cltd
insl
into
lods
or
fcomp
ret
adc
pop
hlt
inc
test
imul
dec
or
push
std
fdivrs
aaa
std
test
and
xor
in
push
sbb
fcomps
jne
shll
repnz
sbb
shl
call
sbb
jmp
into
pushf
nop
fcoml
outsl
cmp
cmp
fdivs
pop
les
xlat
sbb
cltd
ret
leave
or
daa
sarb
ficoml
jae
int3
cmp
jae
fwait
xchg
push
popf
or
iret
xor
jo
and
xor
cmpsb
outsl
inc
cld
imul
or
enter
pop
clc
stos
add
outsl
push
xchg
cmpsl
cwtl
dec
sahf
insb
subb
cmp
or
lea
pop
push
rcrl
mov
push
push
pusha
add
sbb
stos
leave
pusha
fnstsw
mov
enter
repz
sbb
mov
cmp
shll
int3
jne
ret
adc
pop
lods
cltd
push
lea
mov
add
push
pop
add
mov
pop
adc
sub
jmp
adc
mov
fisubl
inc
inc
adc
test
cli
ror
std
sbb
popa
pop
aas
je
clc
sbb
shrl
jne
arpl
pop
stc
fwait
loopne
mov
xor
shr
loop
popa
mov
sub
mov
mov
push
sbb
pop
insl
dec
fwait
sti
inc
adc
xchg
mov
jle
xor
push
imul
dec
sti
pusha
pop
fcomi
outsb
repnz
mov
push
rcl
push
push
push
adc
lds
pop
inc
rcrl
stos
je
dec
sbb
into
jae
andb
daa
in
xor
dec
lods
add
stos
stos
negl
aad
jno
mov
call
rorl
clc
mov
arpl
dec
sbb
stos
push
pop
in
mov
scas
rorb
mov
sub
mov
sbb
in
inc
std
pop
dec
adcl
push
pop
sub
loopne
test
lret
push
and
ror
sbb
clc
sbb
test
loop
push
cmp
ret
scas
inc
ret
clc
cmc
ss
mov
xor
mov
mov
mov
les
push
imul
mov
dec
stos
push
jg
adc
lea
es
nop
adc
push
jmp
mov
mov
add
xor
and
test
outsl
dec
daa
pop
and
pop
sbb
inc
mov
sub
not
mov
lea
mov
jno
movsl
iretw
xchg
sub
add
addr16
or
ror
cmp
pop
push
imul
add
int
jns
stos
fidivrl
or
and
call
mov
stos
dec
jb
adc
xchg
rol
stos
popf
or
pop
fs
nop
and
clc
sti
add
xlat
xlat
movsb
js
cltd
pop
cmp
outsl
prefetch
xchg
add
scas
push
jle
pop
loop
bound
shr
sbb
xlat
mov
adc
movsb
mov
inc
pop
insl
inc
addr16
pop
shrl
sbb
adc
push
push
pop
fistps
cmp
popf
sahf
adc
pop
and
sahf
mov
push
jle
mov
cld
ljmp
test
xchg
mov
inc
xor
das
shrl
push
jmp
outsb
or
ror
push
inc
fisubrs
imul
fistpll
sbb
or
fsubrl
lahf
lods
lods
and
ret
lods
xor
scas
or
sti
jge
inc
imul
stc
sbb
out
add
into
mov
or
push
xchg
mov
sbb
sub
and
mov
inc
adc
shlb
mov
jo
cmpsb
test
push
daa
mov
test
pop
sahf
popa
out
inc
dec
scas
xor
idivl
and
flds
or
xchg
push
es
movsb
mov
shlb
sbb
mov
xor
inc
and
mov
data16
nop
push
in
repnz
cmp
lds
push
dec
sahf
adc
ds
stc
mov
mov
jbe
jno
imul
daa
mov
outsb
xor
lds
mov
fdivrp
push
xchg
imul
outsl
mov
loop
cld
aas
in
popa
sbb
xchg
shlb
xchg
mov
inc
in
es
dec
rcl
or
mov
mov
sbbl
out
idivb
inc
pop
daa
popf
push
dec
sub
jo
dec
movsb
push
or
xor
fdivl
sbb
pop
mov
add
mov
stos
mov
in
das
daa
mov
orb
mov
cmp
les
mov
dec
add
add
movsl
lds
push
inc
fwait
and
xor
roll
lahf
icebp
dec
mov
decl
lds
call
push
mov
xchg
lcall
insb
xchg
arpl
dec
xchg
pop
enter
in
cmp
imul
push
inc
popf
adc
and
movnti
mov
xchg
adc
mov
and
xor
push
add
sbb
cmp
or
push
xchg
mov
arpl
bound
movsl
in
adc
pop
cli
int
les
cmpsb
jns
out
fcoms
icebp
shrl
xchg
out
mov
test
push
inc
add
dec
ds
lret
enter
les
int
sub
mov
pop
dec
mov
fstpt
fcoms
cmc
pop
aas
mov
add
adc
pop
add
iret
push
out
fcomi
push
loope
mov
mov
push
sbb
movsl
ror
std
mov
jecxz
in
je
enter
negb
nop
shld
movl
loopne
sbb
dec
mov
mov
movsl
popa
sub
and
pusha
push
sbb
mov
sahf
dec
sbb
adc
xor
inc
das
xor
fmuls
jnp
sbb
or
cmpb
mov
paddq
repz
sbb
pop
mov
sub
sub
pop
cmp
jbe
jmp
fldcw
fwait
pop
cmp
popf
adc
gs
add
lcall
insl
mov
test
mov
push
gs
xchg
sbb
or
adc
std
mov
int3
inc
inc
cmpsl
adc
xor
xorl
insl
divl
xor
xor
insl
call
lea
jne
sbb
aam
ljmp
pop
les
or
jg
xchg
ja
adc
clc
dec
dec
jge
insl
mov
mov
cmpsb
inc
mov
daa
dec
inc
jns
xlat
pop
lcall
stos
lds
pop
pop
std
and
mov
xor
sbb
jmp
adc
adc
je
shlb
daa
lea
pop
insb
icebp
add
mov
cld
lret
hlt
frstor
pop
sbb
popa
rclb
imul
imul
iret
test
cwtl
je
add
pop
imul
mov
push
push
enter
push
test
add
xchg
add
jb
adc
pop
adc
rorl
fdivr
cld
fcomps
stos
rorl
out
or
nop
popa
mov
xor
outsb
rcll
repnz
sbb
push
cmp
adc
sub
bswap
clc
and
outsb
sub
dec
xchg
and
push
sub
sti
and
or
mov
sbb
js
xor
and
or
mov
pop
nop
lahf
cmpsb
stc
and
cmp
adc
cmp
mov
fistps
ffree
fiadds
xor
test
sbb
lahf
push
loopne
bound
jp
lods
mov
fistl
mov
scas
mov
pop
dec
maskmovq
idivl
inc
dec
push
incb
enter
movsl
mov
xor
and
nop
push
add
push
mov
and
xor
push
push
cmc
mov
in
jne
jo
push
mov
or
dec
mov
pop
cmp
jnp
ds
mov
mov
sbb
cmp
cmpsl
rolb
push
sbb
xchg
jge
or
popf
sub
movsl
js
inc
sub
mov
push
push
pop
mov
fstpl
dec
adc
inc
das
hlt
add
lea
fstpt
xchg
xor
cmp
jecxz
mov
aaa
adcb
dec
or
mov
and
and
aas
lods
push
rorl
pop
dec
or
mov
mov
loopne
mov
movsb
test
popa
out
testl
stos
xchg
dec
adc
mov
cmp
in
mov
mov
clc
stc
dec
or
cld
push
lods
sbb
out
in
dec
popa
iret
add
pop
push
outsl
push
fiaddl
cmp
stos
push
push
pop
repz
jb
mov
dec
xchg
lahf
mov
insl
mov
xor
lods
scas
cwtl
ret
dec
cwtl
mov
jmp
ret
adc
cmp
mov
and
xchg
jbe
inc
leave
push
mov
inc
orl
push
loopne
cwtl
outsl
aas
push
add
test
out
aad
inc
cmpsb
jne
mov
sub
dec
cmp
pop
hlt
add
stos
loopne
and
in
cmc
sub
jns
sahf
xor
jbe
push
sbb
push
pop
mov
inc
js
xabort
int3
add
arpl
enter
lret
std
popf
arpl
gs
arpl
jmp
aas
rol
fcomps
cmpsl
sbb
sub
xor
outsl
cmovl
pop
mov
cmp
dec
mov
jp
xchg
inc
add
stc
xchg
push
popf
xchg
stc
sahf
in
aaa
mov
sbbl
mov
popf
and
inc
mov
fsubr
arpl
or
orl
cmp
test
push
sub
fwait
cmp
arpl
sbb
or
test
test
shll
push
out
sahf
cmp
stos
dec
lods
jle
mov
enter
mov
jp
inc
mov
jno
shlb
jp
push
js
cmp
jp
inc
mov
in
jmp
aaa
mov
mov
jmp
fnsave
sbb
lea
xor
jae
xlat
xchg
adc
mov
leave
or
pushf
lahf
daa
xchg
movsb
stc
xchg
push
push
movsl
and
dec
call
xor
stos
xchg
in
imul
cmp
enter
inc
imul
push
scas
out
sarb
pop
and
and
ret
mov
or
insl
pop
int
mov
cmp
fidivs
dec
sub
movsl
mov
adc
jae
sbb
or
js
fs
movsl
or
ds
shl
lods
lea
repz
push
push
shlb
mov
std
cmp
ret
pop
jecxz
jo
mov
sbb
mov
mov
jl
inc
xchg
ljmp
pop
lcall
mov
adc
sub
add
pusha
jle
and
loop
push
push
daa
jg
test
sbb
jno
adc
inc
dec
mov
cmp
jl
jmp
mov
stos
dec
add
pop
push
inc
push
push
add
int3
das
cmp
adc
inc
xchg
sbbb
and
fcoms
and
push
mov
in
int
push
xor
into
das
adc
pop
scas
test
loope
inc
push
mov
mov
test
or
sub
mov
mov
dec
scas
sub
mov
jo
push
mov
outsl
cli
dec
faddp
in
pop
mov
sub
dec
mov
inc
ret
movsl
pop
sti
cwtl
cltd
sub
fistpll
daa
addr16
out
scas
cmp
fdivrl
lcall
sub
xor
or
mov
or
sbbb
inc
cli
xchg
sub
dec
nop
int3
int
sbb
xchg
push
mov
aam
mov
gs
xchg
outsl
insl
push
fdiv
dec
stc
or
jno
xchg
lahf
mov
inc
mov
dec
lahf
mov
xlat
fwait
cmpsb
push
sbb
xlat
dec
sub
dec
mov
cmp
cmp
sub
nop
inc
inc
outsl
xchg
dec
lcall
pop
push
sbb
jp
jb
out
loopne
xchg
cmc
dec
jmp
push
jns
cmp
adc
les
sbb
xchg
dec
dec
out
sub
mov
sahf
es
or
push
sbb
fs
inc
lock
pop
test
xor
out
mull
xchg
xchg
movsb
icebp
adc
jge
scas
loopne
sub
test
js
add
pop
add
push
lock
jb
push
push
iret
xorl
sbb
jne
and
call
push
inc
inc
cmp
mov
fwait
int
cld
fdivs
popf
adc
mov
aas
cs
mov
lods
mov
xchg
cmc
push
sbb
rolb
pop
or
fistpll
dec
jl
jne
in
mov
jecxz
stos
push
push
jnp
dec
jg
jmp
xchg
xor
cltd
pop
mov
dec
sbb
push
xchg
sbb
and
in
xlat
insl
stos
aaa
lds
xlat
mov
dec
sahf
std
cmp
xchg
jl
mov
in
ja
cmc
cmc
mov
pop
fucomi
lds
out
imul
inc
xorl
lret
out
jl
lahf
gs
sbb
mov
popa
sbbb
shr
sbb
add
or
rclb
mov
repnz
scas
mov
es
jg
imul
adc
xor
nop
leave
loopne
xor
pusha
and
adc
inc
clc
hlt
xchg
fsub
ja
cmp
xor
add
or
mov
fisubrs
lea
adc
or
imul
jns
sub
mov
pop
inc
mov
dec
mov
xchg
xchg
jno
mov
or
jge
dec
lods
pop
xchg
ljmp
shlb
or
or
lcall
shrl
pop
ljmp
fdivrl
daa
int
inc
jge
pop
clc
rolb
jnp
and
mov
in
rcl
dec
aam
and
stos
mov
dec
in
inc
aad
or
int
xchg
jno
sbb
int3
jmp
je
or
stos
hlt
out
push
cmp
mov
push
pushw
adc
test
cmpsl
lods
neg
cmp
adc
in
push
fiadds
lcall
roll
je
mov
xchg
call
push
rcrb
cwtl
jns
ja
leave
mov
loope
lds
repnz
insl
lahf
mov
shrb
sub
inc
jle
xchg
notb
cmp
cltd
aaa
or
push
mov
jp
int
bound
out
cli
mov
jo
add
mov
inc
jle
addr16
cltd
pop
stos
mov
add
adc
pop
lds
cld
lea
cli
gs
dec
shl
sub
jbe
adc
lods
stos
mov
test
inc
cmpsl
inc
push
sub
sub
mov
loop
mov
sbb
rolb
dec
int3
push
fldt
gs
addb
es
xor
inc
int3
inc
mov
jp
add
imul
inc
cs
outsb
xchg
sbb
dec
mov
pusha
js
aas
imul
aaa
mov
xchg
js
test
pushf
inc
ljmp
das
sub
gs
notl
insb
test
ss
cmc
scas
push
std
adc
hlt
jl
mov
cmc
xchg
andb
xor
cli
ja
stos
push
cld
sub
or
push
mov
ljmp
repz
daa
repnz
orb
mov
push
mov
nop
pop
push
fcoml
pushf
jl
mov
stos
add
mov
shr
jo
cmovb
mov
test
push
in
xor
jl
cmp
js
inc
inc
pop
sbb
pop
loope
ljmp
mov
lea
pop
jnp
out
fdivp
push
mov
fwait
daa
pop
pop
inc
es
cmpsb
imul
je
dec
mov
fisubl
out
movsl
push
sbb
rdmsr
arpl
fldz
xchg
cmp
pop
adc
cltd
inc
xor
fildll
in
sub
jmp
lds
push
loop
jmp
repz
mov
mov
adc
lret
cld
into
jle
enter
cmp
clc
imul
and
les
mov
arpl
inc
xor
cmp
jo
imul
and
rcl
pop
dec
pop
adc
ret
pop
imulb
add
lahf
lea
mov
fbstp
xor
rorl
cmp
mov
and
and
or
and
lds
test
stc
jge
ss
xchg
dec
pop
movsl
mov
or
aam
push
jo
arpl
stos
mov
mov
lret
pushf
adc
popf
add
outsl
jne
xchg
dec
xchg
mov
fiadds
fldt
xchg
cmp
shr
cmpsb
mov
mov
inc
push
pop
dec
mov
je
movsb
push
jno
sub
or
lods
sub
js
and
dec
sbb
outsl
movsb
hlt
nop
fisubrl
adc
xor
pop
inc
xor
xor
cmp
cmpl
lret
mov
aas
cmp
push
jne
xor
fcmovne
sarl
in
out
sbb
out
xor
mov
lret
sbb
fwait
in
lret
arpl
ljmp
aam
lahf
cmp
adc
xor
pop
sub
out
push
xchg
ds
cmpsb
xchg
jg
inc
ja
loope
cmp
cmpsb
aam
iret
std
sbb
cwtl
cmp
cmp
std
xchg
dec
subl
mov
invd
add
xchg
ss
cltd
and
lret
aaa
xor
push
mov
mov
cmpsl
enter
fs
loope
out
dec
sub
icebp
sarl
mov
aas
shr
or
fnstcw
push
pop
cmc
fs
xorb
out
mov
cmpsb
or
cltd
adcb
and
mov
dec
rcrb
shl
adc
je
popf
scas
mov
xor
outsl
dec
ds
push
add
movl
sahf
sub
stos
mov
jp,pn
pop
jp
jle
jp
xchg
push
pop
cs
xchg
mov
les
cwtl
add
inc
pop
xor
in
mov
jo
movl
inc
ret
pop
mov
sahf
pop
in
pusha
jl
test
sbb
ljmp
mov
add
mov
in
sbb
aas
ret
fdivs
int
jmp
cmpsl
mov
fstpt
sbb
add
dec
int3
adc
add
mov
mov
stos
cmpsl
mov
mov
push
outsb
push
inc
pop
mov
push
addr16
es
pop
imul
incl
mov
pop
adc
sbb
dec
dec
cmp
int3
mov
xor
pop
andb
jecxz
sbb
in
fisttps
xchg
sub
shlb
jae
rolb
fiaddl
stos
sbb
aas
int3
lods
fisubrs
lahf
jnp
dec
fs
xor
mov
dec
hlt
mov
add
fsubrl
xor
loope
xor
jae
fisubl
out
add
add
stc
lods
pusha
sub
in
cwtl
pop
and
hlt
add
insb
jns
mov
pop
sbb
mov
loope
nop
cs
popf
mov
fdivl
mov
xor
fsubp
imul
aad
sbbl
sbb
out
push
imul
jmp
ret
cs
in
mov
pop
mov
ret
jo
lcall
gs
jg
push
mov
iret
pop
lret
fs
or
leave
das
insl
add
adc
sub
pop
mov
jnp
add
insb
outsb
xor
xor
hlt
adc
mov
sti
and
sub
sub
xchg
xor
call
add
fmull
inc
fdivs
and
sbb
xchg
add
mov
cmp
rolb
push
add
pop
mov
negb
xchg
pop
mov
cmp
stos
popf
jbe
fcmovu
mov
out
pushf
ficomps
loop
dec
fs
mov
push
sbb
inc
mov
push
rcrb
dec
aas
sub
ja
dec
scas
adc
dec
hlt
daa
iret
insl
popl
pop
xchg
test
mov
mov
iret
xor
inc
pop
xchg
repz
jae
mov
jo
cmp
or
lock
mov
movsb
or
and
mov
xchg
scas
jge
jo
jnp
push
test
addr16
and
xor
rcrb
pop
mov
push
enter
sbb
mov
addr16
pop
sub
pop
es
sbb
je
mov
daa
fwait
or
mov
mov
and
pop
jne
mov
or
sbb
in
lods
jns
rclb
dec
cmp
jae
xor
out
pop
xor
jno
inc
cmp
xchg
push
and
jbe
testl
sbb
mov
mov
or
idiv
add
cmp
mov
sbb
lods
int3
inc
stos
jmp
pop
xchg
fdivrp
popa
dec
xor
xor
mov
jno
mov
test
clc
test
sub
jmp
hlt
mov
adcb
sub
ret
inc
stos
mov
sub
fdivs
cmc
cmpsb
lea
sahf
jbe
dec
stc
inc
mov
xor
fdivs
out
jbe
cli
mov
lret
ret
fimull
arpl
pop
int
adc
js
loop
fsubs
sbb
adc
sub
adc
loop
and
inc
xor
imul
inc
mov
cmp
lock
or
or
dec
clc
dec
pop
xchg
mov
xchg
mov
cld
and
add
push
je
inc
pushf
sub
lods
xor
arpl
jl
adc
jge
mov
xor
adc
stos
cmp
loopne
pop
inc
xchg
xchg
cmp
xchg
pop
ja
arpl
and
mov
cmpsb
jle
shlb
mov
inc
push
mov
jmp
stc
mov
sbb
outsb
or
push
xchg
arpl
scas
fsub
push
mov
jnp
jns
mov
mov
popf
pop
xchg
sub
inc
sub
hlt
dec
pop
cmp
out
sub
mov
rcr
adc
pop
cmp
jp
sbb
dec
mov
fcmovnb
mov
das
fnstenv
lds
xlat
fwait
bound
cltd
pop
mov
jmp
mov
sub
mov
sbb
outsb
lds
leave
dec
lret
mov
pop
js
xor
lods
mov
xor
jb
sarb
sub
mov
jbe
pushl
rorl
fisubrs
enter
push
xor
lahf
sarl
or
rolb
fstpt
fdivr
rclb
mov
clc
or
dec
or
lods
add
sbb
and
jp
sti
or
inc
and
dec
aam
je
mov
lds
outsb
mov
test
jle
jmp
lcall
push
or
orb
clc
mov
adc
imul
out
jno
cmp
andb
or
push
sbbl
pushf
cld
jg
xchg
enter
movsl
mov
loope
adc
lods
pop
jg
jae
jno
cmp
sub
mov
iret
mov
jle
cmp
xchg
clc
push
jge
xchg
cmp
cmpsl
xchg
scas
or
sbb
stc
stos
push
jnp
loopne
mov
lcall
mov
pop
dec
fcoml
fbstp
xor
clc
les
sub
inc
sub
mov
js
aam
xchg
movsb
lods
sbb
add
cmp
xchg
loope
ret
sahf
xor
push
sbb
out
mov
outsb
inc
lock
lods
imul
pop
popf
dec
adc
ret
fistl
es
outsl
mov
stos
xor
cmpsl
sti
inc
out
push
adc
lock
movsb
pop
mov
or
mov
cmp
mov
push
mov
outsl
pop
or
mov
push
divb
scas
iret
mov
fwait
add
or
mov
daa
cmpsl
dec
ror
and
or
daa
mov
mov
mov
mov
gs
cmpsl
fisubrl
cmp
repnz
shlb
pop
xor
push
sub
mov
sti
inc
cmp
jl
mov
and
xchg
sub
mov
dec
pop
mov
imul
or
cwtl
movsl
lret
xchg
test
adc
push
das
and
repz
scas
jl
movsb
xchg
std
ss
xor
int
dec
aam
jp
mov
lods
pop
psrlw
fstpt
or
dec
inc
mov
fld
movsb
or
rorl
pusha
mov
add
xchg
adc
dec
lret
and
lods
adc
xchg
add
jne
in
xchg
or
or
cmp
test
pop
jbe
iret
ret
dec
insl
in
fldt
jno
lea
and
movsl
push
outsl
mov
pop
pop
jns
nop
adc
popf
push
mov
pop
adc
inc
in
adc
dec
mov
lret
jmp
ja
das
pop
jmp
repnz
imul
into
cmp
nop
mov
mov
jnp
es
icebp
pop
push
xor
das
repz
mov
dec
xchg
pop
xchg
shlb
or
cmpl
testl
addl
inc
cmpsl
in
mov
cs
and
pop
orb
lret
dec
and
mov
and
and
xor
sbb
adc
cmp
jg
iret
aam
mov
mov
mov
data16
inc
call
jl
lods
lret
push
jae
adc
sbb
push
addl
cmovl
jg
pop
dec
cmp
jb
add
mov
ds
fidivs
mov
dec
push
adc
movsb
mov
popa
push
pop
sub
pop
pop
xchg
sqrtps
fnstenv
or
imul
xchg
cltd
push
sub
sti
ljmp
cld
push
or
sbb
push
leave
inc
sahf
inc
inc
out
dec
jns
jg
jg
lret
mov
aam
repnz
pop
push
mov
out
push
icebp
fs
in
shll
cmpsb
nop
movsb
xchg
xchg
mov
mov
xchg
cs
push
and
xor
jg
testl
xchg
mov
jo
mov
xchg
push
mov
fisubrs
add
cmc
push
movsl
mov
fdecstp
clc
mov
push
outsl
pop
jecxz
mov
adc
shlb
mov
or
popa
xchg
incb
xchg
push
xchg
std
jo
jp
imul
inc
fisttpll
mov
add
xchg
fldl
mov
in
fistpl
cmp
mov
and
lret
clc
jl
pop
movsl
mov
icebp
mov
xchg
lock
push
sbb
arpl
mov
inc
xchg
pop
sub
popf
sti
add
int3
pop
add
and
fsubrp
xor
jecxz
mov
mov
xchg
test
jp
into
or
mov
cmp
xchg
jmp
cld
xchg
cmp
or
mov
scas
loope
inc
inc
pop
popf
cmp
push
cwtl
ficompl
das
push
dec
mov
test
jno
mov
add
add
sbb
lods
cmp
mov
lods
mov
mov
jecxz
add
out
cmp
dec
mov
int
inc
or
dec
and
jno
out
mov
push
pop
or
shl
dec
inc
sbb
int
cmp
adc
pop
pop
movsb
cmp
and
xor
fisubl
repnz
outsb
adc
add
jle
mov
mov
sub
sbb
pop
lret
sub
repnz
pop
or
int3
mov
popf
sbb
xor
lea
imul
xchg
cmp
out
jg
in
lds
and
es
int
pop
in
inc
das
add
sahf
add
jae
orl
push
in
xlat
mov
fs
mov
mov
and
add
data16
pop
dec
jnp
jne
xor
bswap
sbb
xchg
outsl
lcall
mov
push
sub
dec
int
xchg
jns
notl
and
sbb
jmp
dec
and
adc
rcll
cli
pop
cmp
cld
cmp
lea
leave
push
xor
sbb
mov
dec
or
pushf
cmpl
addr16
out
mov
hlt
adc
cs
stc
imul
sti
int
sub
orb
fiadds
clc
mull
sbb
sub
aas
outsl
add
sbb
leave
sti
out
fwait
push
aas
roll
adc
sbb
mov
jle
adc
mov
rcl
mov
xchg
bnd
mov
mov
loopne
rcrl
pop
sbb
xchg
xor
cwtl
inc
xchg
ret
mov
adc
mov
inc
dec
and
mov
push
lds
sbb
out
jae
inc
dec
call
sub
adc
pop
sbb
xor
mov
insl
cmp
fisubs
add
arpl
and
je
jmp
jbe
adc
mov
in
es
ret
or
ljmp
and
cltd
jl
mov
aam
das
dec
pop
sub
inc
pop
insb
rorb
mov
cmp
sub
adc
add
mov
mov
and
xchg
mov
sbbl
mov
add
cmp
loop
push
leave
pop
mov
jge
or
mov
aas
xchg
cmpsl
jae
push
scas
sbb
imul
push
and
scas
and
sbb
frstpm(287
cmpb
fmuls
or
sahf
js
pusha
cwtl
jne
jno
push
jge
and
int3
outsl
minps
xchg
xor
inc
cmp
and
inc
decl
testb
jns
and
xchg
adc
test
addr16
aaa
pop
stos
jb
insb
in
inc
dec
mov
mov
inc
dec
cmp
popf
jge
out
add
cmc
mov
stos
orl
shll
mov
and
xor
out
mov
adc
popf
mov
push
sahf
stc
pop
mov
aaa
push
or
jne
or
xor
jmp
push
mov
adc
jg
add
cwtl
jno
mov
add
gs
ds
stos
xchg
rclb
pop
insl
mov
fists
in
xchg
push
push
sbb
popa
jg
xor
push
inc
dec
ljmp
imul
mov
stc
arpl
or
and
inc
push
add
cmp
mov
pop
inc
xchg
aas
dec
add
mov
iret
xchg
xchg
dec
mov
push
cmp
xorl
mov
pop
adc
jg
dec
and
xor
jmp
mov
cmp
pushf
add
test
imul
mov
cmp
sub
mov
lods
lcall
call
rorb
jge
fisubrl
xchg
push
cwtl
lret
movsl
and
add
dec
cltd
outsl
into
jo
xor
iret
mov
dec
xchg
pusha
movsl
or
hlt
cli
mov
hlt
cmp
dec
movsb
cmp
cmp
into
or
mov
nop
cmc
mov
in
push
loope
dec
nop
xchg
inc
andb
test
add
test
aad
imul
dec
stc
cltd
data16
test
repz
mov
add
fbstp
mov
imul
mov
or
stos
sub
xchg
lahf
lret
xor
movsb
cmpsb
jnp
add
jl
ljmp
imul
push
dec
fwait
push
iret
adc
mov
mov
sbb
sarl
or
pop
xchg
ds
xor
adc
lock
xor
push
jo
fsubrp
gs
in
into
loope
push
sbb
xchg
pop
mov
gs
push
daa
jbe
pusha
out
xchg
int3
mov
and
cmp
add
cmpb
fistpl
sub
icebp
mov
mov
xchg
loope
outsb
mov
fistpll
call
mov
in
ds
push
mov
popf
adc
imulb
test
aad
inc
hlt
and
jnp
fdecstp
dec
stc
outsb
mov
fs
sbb
pop
adc
jnp
cmp
inc
xchg
jmp
enter
clc
dec
clc
cltd
scas
leave
out
xor
and
rolb
xchg
or
mov
je
iret
cli
cmp
loopne
push
inc
mov
dec
or
call
aaa
mov
fdivrs
sbbb
scas
or
dec
jl
popa
dec
popa
int
popa
scas
xchg
rcrl
das
repz
insb
pop
lock
outsl
mov
insl
lock
or
fiadds
cli
std
sbb
mov
and
adc
pop
aad
clc
iret
mov
dec
pusha
push
jno
cwtl
fldenv
add
test
sbb
inc
mov
pop
dec
sub
or
xor
jne
mov
scas
les
int
jmp
cli
cltd
jno
je
fadds
xor
sbb
cli
mov
xor
jp,pt
push
insb
push
sbb
push
clc
mov
sub
jmp
inc
mov
dec
fs
xchg
dec
repnz
in
popf
in
ret
dec
jecxz
int3
lock
jecxz
sub
lret
clc
dec
mov
inc
xchg
sbb
jbe
jno
mov
inc
adc
cwtl
cmp
nop
sub
pusha
vpaddd
mov
xchg
sbb
cwtl
and
sbb
cmp
jno
fwait
sbb
jl
mov
sarb
popf
add
sbb
or
cmp
rcl
aam
xlat
jnp
xchg
dec
add
pop
stos
std
sbb
mov
divl
xor
inc
pop
mov
push
insl
imul
shrl
ret
push
mov
cmp
mov
das
bound
add
cs
inc
inc
xchg
stc
pop
and
insl
jns
cmp
in
sahf
ud1
pop
daa
lret
out
fcmovbe
sub
testl
sub
mov
pop
or
xor
adc
mov
jmp
outsl
cmp
ds
jge
push
movsl
movsb
lea
popf
push
pop
jbe
mov
fs
mov
testl
sub
mov
dec
mov
lds
adc
lret
out
adc
push
fwait
stos
add
cmc
jmp
xchg
test
mov
les
inc
jb
add
das
mov
xlat
pop
aam
scas
insl
add
jmp
je
dec
outsl
dec
push
adc
arpl
std
push
scas
je
sbb
or
andb
nop
aam
es
fnstcw
jo
push
adc
aas
mov
xchg
push
push
repz
daa
stc
mov
sub
and
mov
mov
dec
jecxz
cmp
sub
dec
sub
and
sbb
lcall
js
pop
jecxz
leave
int
or
les
ja
adc
xchg
shll
dec
cmp
mov
jae
lcall
mov
pop
data16
daa
aas
mov
inc
mov
inc
out
inc
int3
mov
mov
lret
pop
mov
imul
cpuid
daa
xor
pop
jl
jl
in
mov
lds
sar
inc
mov
fbstp
ret
dec
pop
sbb
sbb
lods
inc
and
cmp
fdivs
xor
outsb
push
ds
sbb
lods
xor
push
mov
adc
add
dec
rolb
xlat
jbe
push
jbe
push
mov
insl
xchg
imul
pop
pop
mov
mov
ffreep
aad
fnstsw
fldenv
movsl
je
pop
add
jle
imul
and
dec
gs
push
sbb
jl
mov
pop
inc
jno
icebp
arpl
inc
ret
cwtl
lods
mov
sub
frstor
jae
lods
out
fnsave
lds
mov
adc
popf
sbbl
roll
mov
ss
outsl
pop
fdivrs
vaddsubpd
xorl
sub
ret
scas
les
cmp
mov
popa
iret
xchg
jmp
int
jo
enter
and
shlb
mov
push
ret
mov
xchg
pop
sub
lcall
jnp
rorl
std
fs
push
cwtl
dec
outsb
dec
dec
inc
xor
imul
je
lahf
test
or
and
out
sarb
mov
mov
fnsave
mov
imul
xchg
outsb
iret
jae
push
inc
jg
mov
cmp
out
fs
push
aad
dec
ret
sub
insl
pusha
sti
push
and
test
fsubrl
add
negl
sbb
fs
add
dec
mov
in
push
sbbl
test
shll
mov
lcall
icebp
xorl
mov
dec
out
jo
mov
in
push
sub
out
add
xchg
lods
jbe
scas
lds
mov
lock
dec
sub
sub
loope
nop
inc
clc
lods
jbe
xor
mov
enter
stos
inc
push
add
jecxz
fs
mov
sbb
adc
xchg
dec
cmpsl
pop
lea
jmp
sar
ja
data16
inc
gs
cmpsb
ret
push
mov
adc
test
rorl
fsubr
mov
dec
inc
out
sub
dec
jo
clc
std
cmp
pop
test
mov
add
dec
sbb
push
in
lods
mov
dec
and
repnz
decl
xchg
repnz
mov
xor
stos
mov
inc
jecxz
pushf
mov
gs
das
pop
flds
lock
mov
hlt
mov
inc
or
in
mov
rorl
cmpsl
andl
lods
out
cld
dec
repnz
mov
movsb
jbe
imul
inc
dec
test
lcall
fs
sbb
in
pusha
adc
jne
test
jne
pavgb
outsb
jno
cltd
aaa
rcrb
dec
mov
loopne
mov
xchg
cld
out
or
mov
aas
xor
popf
xor
fnstcw
cmpsb
test
enter
dec
cld
lds
out
pop
xor
mov
sub
mov
sub
cli
jp
iret
xchg
pop
pop
add
push
jge
mov
out
pop
and
js
push
loope
in
mov
or
mov
and
pop
dec
pop
push
pushf
repnz
dec
sahf
add
movsb
and
push
pusha
mov
sti
loope
jno
xor
sub
or
or
and
mov
clc
vpshufhw
cwtl
andl
sub
cld
clc
repnz
fsubs
fmull
sbb
scas
into
fwait
dec
lods
leave
lcall
xchg
mov
push
push
cmpsb
and
inc
popf
imul
push
nop
or
xchg
movsl
mov
add
adc
cmp
and
or
cmp
dec
pop
dec
cmp
lods
shll
into
fldl2t
repnz
add
sbb
push
adc
incb
fldt
and
dec
js
adc
lret
cmp
lods
repnz
or
or
pop
jge
sub
stc
mov
imul
mov
hlt
xchg
sbb
push
test
xor
and
mov
mov
push
mov
cmp
out
outsl
pop
push
ret
and
imull
shl
and
movsl
dec
gs
xor
ja
in
add
ret
rorl
aaa
out
shlb
add
iret
cli
jnp
xchg
mov
faddp
push
loope
cld
shll
sbb
xor
scas
enter
adc
ljmp
adcb
aam
mov
push
ret
jp
add
outsb
cmp
add
and
rolb
mov
pushf
push
add
sahf
cmp
aad
mov
cwtl
jae
jbe
test
mov
bound
daa
dec
xor
inc
inc
imul
and
leave
xchg
mov
jecxz
xchg
lret
push
and
mov
fsubp
test
andb
call
das
aam
mov
int3
mov
in
repz
ficoms
pushf
arpl
das
pushf
adc
mov
call
push
xchg
pop
mov
mov
idivl
xorl
es
ljmp
xchg
inc
addr16
mov
int
lods
ret
out
xchg
adc
lods
fs
imul
jo
push
pop
clc
outsl
lret
pushf
mov
not
sbb
push
jmp
jl
push
bound
mov
fnstsw
mov
cmp
mov
int3
cmp
jecxz
pushl
loope
sbb
aam
dec
rcr
mov
out
mov
inc
jg
iret
jns
mov
sub
inc
lods
insl
mov
fsubl
lods
and
fldenv
rorl
push
aam
mov
icebp
or
add
adc
cmp
inc
lret
fisttpl
test
das
mov
mov
aad
pop
push
add
adc
cmpsb
loop
orb
add
aad
jmp
sub
push
sbbl
test
adc
xchg
dec
repz
inc
pop
ja
jno
jns
and
cmp
push
mov
scas
mov
add
sub
pusha
movsb
lcall
mov
out
femms
push
adc
dec
sub
test
lock
ds
shlb
in
sbb
mov
xlat
sbb
call
xor
fsubs
loopne
or
dec
sbb
mov
sahf
mov
dec
push
mov
idivl
shl
pop
dec
adc
mov
sbb
jp
lods
or
xchg
notb
int3
sbb
ss
inc
dec
jecxz
or
jmp
andb
call
pop
insl
add
negb
imul
inc
mov
jl
fs
push
ret
jns
fidivl
add
cs
and
iret
add
cmpsl
int3
aad
mov
jne
das
mov
test
sti
mov
insb
and
dec
addb
inc
xor
sub
fstps
jle
sahf
mov
shll
insl
jge
cmp
cmp
xchg
adcl
sbb
sti
jg
outsb
std
test
nop
adc
mov
pop
fsubr
xor
mov
sbb
jg
rolb
push
push
scas
cmp
pop
cli
nop
pcmpeqb
iret
sbb
xchg
cmp
push
clc
xchg
fldenv
lahf
cs
mov
dec
add
add
in
cmpsl
fistpl
enter
in
and
jle
out
and
jl
je
xchg
jno
adc
int
dec
in
mov
add
aam
sub
inc
dec
inc
lods
ret
mov
sub
xchg
pushf
pop
push
repz
imull
adc
cmc
dec
lds
shl
out
xchg
push
pop
das
add
scas
xchg
adc
xlat
xor
push
daa
jae
shrl
clc
adcl
jnp
imul
ret
sti
and
sbb
inc
xchg
stos
mov
mov
jg
mov
dec
popf
cmp
fisubrl
adc
nop
push
addr16
pushf
push
or
xchg
je
xlat
nop
and
sbb
mov
adc
push
mov
sarb
fistl
movsl
pop
mov
push
dec
insb
es
pop
mov
jp
adc
sub
cs
and
neg
popa
dec
int
adc
call
rcrb
xor
mov
push
push
sahf
inc
xchg
popl
jo
mov
add
cmc
mov
mov
mov
loop
rcll
cld
lret
xor
push
sub
popf
sub
mov
test
dec
mov
or
mov
rorb
xchg
xchg
mov
shll
jp
out
or
inc
mov
and
dec
lcall
push
into
hlt
adc
fwait
xor
loopne
xor
adc
inc
jnp
sub
arpl
jne
mov
dec
roll
iret
movsl
movsb
roll
insl
mov
loop
xor
sbb
adc
ret
cmp
mov
pop
les
cwtl
fwait
mov
pop
pop
pop
outsl
scas
adc
negb
inc
notb
nop
aam
pop
xchg
bound
popl
inc
imul
rcrl
add
sti
and
cli
add
mov
lea
add
mov
adc
push
mov
sub
xor
cmpsl
add
cld
and
mov
xchg
test
imul
test
clc
into
out
mov
lret
jb
inc
pop
ljmp
or
ret
aas
add
lret
pop
sbb
movsl
push
int
xor
mov
data16
sbb
cli
sahf
mov
pop
xor
mov
adc
ss
cmc
div
push
inc
dec
out
add
sub
scas
dec
in
xchg
inc
in
pop
sbb
mov
jb
push
lds
add
push
xor
push
sbb
mov
ss
shll
adc
insl
clc
repnz
out
and
pop
aas
scas
loopne
push
mov
std
dec
into
jp
pop
pop
fxch
jns
lea
push
and
dec
jae
inc
xchg
mov
lret
out
xchg
sub
out
dec
lods
push
cmp
xchg
push
rcrb
push
xor
mov
xor
sbb
add
ret
ss
cmp
jo
js
dec
mov
shrl
dec
cmpsl
pop
cmp
mov
xchg
testl
ret
jb
xor
dec
push
push
and
je
rol
sub
or
mov
rcll
sbb
repz
mov
mov
or
add
pop
jp
enter
test
or
ss
and
mov
mov
mov
aaa
jae
loop
push
inc
movsl
lock
fstps
pop
add
and
loope
cmpsb
xchg
popa
xor
in
test
fwait
mov
xchg
fadds
notl
mov
js
repnz
sbb
push
pusha
mov
fs
in
je
sub
lock
out
scas
sub
mov
inc
shrb
dec
xchg
ret
movsl
test
in
add
and
call
jo
sub
cld
jecxz
mov
js
call
mov
lds
int3
popf
xor
repnz
movsl
into
pop
mov
call
inc
jo
cld
repnz
leave
popf
subb
pusha
ficompl
cmp
xchg
lret
jp
mov
dec
jge
dec
lds
pop
arpl
roll
roll
test
xor
pop
repnz
mov
xchg
inc
fimuls
jbe
std
sbb
and
xor
or
dec
mov
aas
add
mov
mov
push
inc
dec
addl
rorb
test
add
cli
in
cmpl
movsb
mov
cmp
fisubrl
ja
mov
dec
iret
xor
and
filds
cmp
pop
pop
sti
cmc
dec
emms
cmp
ret
iret
inc
xchg
pusha
loope
inc
sahf
fs
push
lods
insl
loop
dec
jp
in
ret
jbe
scas
xchg
cltd
add
mov
jae
stos
jne
mov
add
out
or
cmc
jmp
jo
inc
test
sub
push
pop
icebp
pushf
aas
mov
add
hlt
imul
xchg
sbb
jmp
out
cmp
xor
mov
mov
cmp
outsl
xchg
adc
xchg
iret
or
fnstsw
lods
loop
jmp
xchg
clc
pop
call
ss
dec
inc
sbb
pop
dec
cmc
jb
lods
clc
sub
adc
inc
xchg
xlat
enter
lods
sub
sub
dec
cmpsl
adc
sub
aad
or
cmp
fcmovnbe
cltd
xchg
arpl
out
mov
xchg
lea
sbb
pop
and
out
popa
mov
outsl
mov
mov
sub
push
cmp
add
loope
or
insb
das
cli
mov
shrl
fwait
sbb
dec
sub
out
sbb
pushf
dec
xchg
cmpsl
fs
mov
arpl
cli
xor
lcall
cmpsb
push
sbb
cmp
aas
hlt
mov
mov
or
pop
fcoml
in
add
cwtl
mov
sbb
fwait
mov
call
test
mov
loope
cli
pushf
and
and
inc
shll
rcrl
push
and
lcall
jnp
lods
cmp
xchg
scas
dec
and
test
mov
aam
jecxz
mov
arpl
loopne
cmp
mov
pop
int
or
and
pop
jmp
mov
loopne
test
lods
rcl
inc
mov
mov
fs
and
sti
fisubs
xor
bound
shlb
mov
and
xchg
ret
and
xor
mov
enter
pop
jb
mov
je
and
stos
push
std
fisubrl
hlt
mov
jbe
jl
pushf
scas
or
xor
jmp
mov
jle
mov
jecxz
out
adc
adc
xchg
dec
aaa
sbb
jo
loopne
in
sar
cmp
jl
mov
cmp
pop
aam
mov
mov
pop
nop
fwait
cmpsb
dec
jle
fs
lods
out
sbb
mov
sbb
cltd
outsl
add
test
aam
scas
or
sti
lock
xchg
add
stos
call
cmc
adc
insl
clc
xor
xchg
in
lods
dec
lea
es
or
dec
mov
jle
push
in
sub
loopne
mov
sbb
sub
add
adc
out
cwtl
enter
mov
cmp
push
mov
xchg
push
push
and
ret
aad
sub
fdiv
hlt
leave
idiv
and
xor
push
roll
cmp
cs
push
or
lds
fbstp
xor
cmp
and
sbb
pop
dec
adc
fcmovnu
sub
dec
out
ret
scas
imul
mov
outsb
sub
and
and
pop
stos
or
out
push
test
loope
ror
andl
fdivl
add
cli
xchg
adc
push
loope
jns
cmp
out
mov
out
jo
or
enter
jne
cltd
pusha
cmpsl
push
mov
inc
data16
xor
mov
scas
lods
and
sarb
scas
inc
shrl
mov
and
insb
movsl
cmp
mov
pop
mov
test
dec
fnstenv
negb
pop
popf
sti
add
mov
pusha
fstps
aaa
mov
jl
jl
dec
inc
out
dec
push
repnz
jae
pop
or
arpl
mov
cmp
ret
pop
mov
ficomps
adc
pop
repnz
mov
pop
push
or
xchg
fnstenv
cltd
adc
lds
mov
lahf
stos
sbb
mov
popa
cmp
push
xor
push
xor
xchg
rol
imul
or
aas
aas
pop
adc
fcoms
into
xchg
jl
mov
and
sub
jne
es
jmp
xchg
fcoml
inc
shlb
loop
fsubs
ja
mov
and
mov
lcall
leave
mov
mov
xor
xlat
or
xchg
xchg
je
popf
testb
rcll
pusha
pop
call
push
xchg
push
movsl
jno
shrl
imul
leave
cmp
movsb
insl
mov
outsb
push
imul
jno
xor
stc
clc
fadd
push
adc
sub
jnp
sbb
icebp
sbb
xchg
hlt
je
call
jno
pop
cmp
jl
push
sub
or
adc
lcall
dec
add
sub
cs
xor
sbb
imul
pop
ret
jmp
orb
xor
xor
sbb
mov
mov
push
repz
out
cmc
xchg
imull
or
jg
xchg
cmp
lds
fisttpll
xor
popf
mov
push
push
rcl
xchg
ret
pop
or
adc
add
testl
sub
add
sub
push
out
dec
insl
stos
mov
cli
mov
insl
adc
notb
cmp
lahf
xor
fdivr
cmp
mov
mov
lret
addl
imul
daa
sub
dec
pop
jl
andb
lret
push
add
dec
or
das
clc
arpl
push
and
push
out
mov
sahf
out
adc
xchg
dec
mov
inc
testl
jmp
fsubs
xchg
insl
es
xchg
aas
test
mov
movsl
xor
mov
xlat
pop
movb
out
cmpsb
push
mov
mov
shlb
pusha
std
mov
mov
dec
mov
in
lret
adc
iret
test
insl
push
dec
data16
ret
and
adc
fndisi(8087
and
jae
std
outsl
lea
adc
jnp
out
mov
fsubl
pusha
gs
adc
cmp
xlat
cmp
test
pop
in
fldcw
hlt
mov
inc
fwait
cmpsb
les
lea
imul
push
int3
jg
adc
aaa
ljmp
inc
enter
ret
mov
loope
repz
jae
push
bound
push
push
mov
iret
jnp
call
pushf
push
lcall
lcall
jo
push
xor
or
push
jecxz
lahf
xchg
mov
bound
jns
cmpsb
cmpsl
loope
mov
mov
push
les
or
inc
sbb
stc
or
sbb
mov
das
adc
dec
or
pop
dec
or
nop
sub
dec
inc
lret
fsubs
mov
add
xor
pop
mov
jne
cmp
rorl
repnz
mov
or
in
inc
and
sbb
or
cmc
into
jns
push
sbb
push
pop
ss
xor
cs
push
call
xor
mov
xlat
in
mov
push
negl
rclb
movsl
loopne
dec
jo
cld
inc
cmp
pop
cmp
jg
rolb
add
pop
xchg
ljmp
sub
mov
bound
sbb
ss
and
xor
mov
fsubl
lret
cmc
inc
cmp
mov
js
mov
or
xchg
rol
movsb
aad
pop
cltd
lahf
pop
or
in
xchg
push
jp
sahf
cld
xchg
xchg
loopne
test
push
pop
fldt
or
test
iret
fildll
dec
daa
xchg
jmp
push
pop
enter
pop
sub
add
aas
hlt
cmp
adc
xor
xchg
lahf
xor
insl
dec
jle
repz
sbb
call
incb
jmp
inc
rorb
xchg
daa
mov
ds
cli
cltd
dec
lds
sub
pop
test
iret
arpl
test
or
push
inc
out
inc
xchg
mov
std
out
sub
sub
push
js
sbb
pop
add
push
sar
inc
sbb
push
inc
in
pop
sbb
mov
add
jb
sbb
lcall
adc
call
scas
xchg
push
cmpsb
cwtl
cmp
xchg
cmp
imul
pop
pop
inc
mov
data16
cmpsb
lret
call
stc
add
jl
jnp
xchg
jno
js
xor
dec
mov
fnstenv
mov
int3
in
sbb
gs
pop
inc
in
push
imul
cmp
pusha
loop
jno
sub
xor
pop
jns
and
sbb
cld
or
rolb
jle
push
adc
add
or
sub
lahf
xor
cmp
mov
xchg
sti
mov
loopne
sbb
pop
xor
mov
adcb
inc
call
fmul
mov
fwait
adc
pusha
pop
fwait
inc
jge
ret
lahf
outsl
mov
add
shrb
xchg
cmp
mov
push
pop
adc
or
xlat
jge
pusha
jp
jnp
ficoml
loope
cmp
ja
lahf
test
into
mov
jp
leave
aaa
mov
js
mov
cmpsl
ljmp
lods
and
push
or
stos
test
mov
mov
xor
xlat
cld
pop
mov
dec
dec
nop
ss
fidivl
sbb
jo
outsl
fdivrs
mov
cs
sarl
adc
icebp
stos
lret
outsb
dec
in
repnz
pop
loopne
gs
and
int3
xchg
test
cltd
mov
push
push
dec
mov
and
or
mov
frstor
adcb
sar
fwait
add
andb
or
dec
lods
aam
out
xchg
iret
rclb
sub
dec
push
in
cli
lods
mov
cmpsb
push
mov
jmp
dec
cli
in
or
shl
mov
xlat
test
test
mov
int3
and
fisttpll
in
push
out
inc
and
scas
jecxz
xor
jno
push
test
push
push
test
push
js
mov
mov
mov
outsl
cmp
test
or
adc
mov
test
mov
cmpsl
xor
sbb
push
test
or
sbb
pop
out
mov
mov
mov
mov
pop
push
out
arpl
jl
push
dec
stos
pop
repz
sub
int3
dec
pop
inc
dec
sub
maskmovq
negl
insl
jnp
cmpl
adc
sub
xchg
cli
aas
adc
and
or
pop
add
mov
adc
push
sti
insl
push
call
push
pop
call
adc
dec
test
push
cmc
in
iret
inc
testl
mov
push
mov
sub
pop
jg
cmp
in
or
cmp
inc
daa
add
add
aad
loopne
mov
sbb
cmp
push
mov
repnz
sti
bound
jns
in
das
cmp
pop
xchg
fisttpl
cltd
mov
mov
xor
mov
cltd
nop
sub
mov
xchg
xchg
mov
pop
and
outsb
mov
cltd
push
or
lcall
jp
cld
into
xchg
shlb
adc
outsb
mov
into
mov
pop
push
stc
pop
xor
ss
pop
xchg
add
mov
xchg
sbb
mov
adc
hlt
xchg
aaa
mov
call
pop
mov
push
pop
push
cli
add
or
nop
jle
std
repz
sbb
stos
sub
and
lods
cli
mov
movsb
mov
stos
movsl
add
xchg
cmp
fwait
inc
inc
nop
pop
out
nop
sub
mov
and
inc
sti
inc
mov
cli
mov
and
andl
xchg
pop
cmp
push
lret
cwtl
mov
cmc
mov
pop
sub
int
addr16
aam
sub
lea
xchg
sub
inc
mov
cmc
jb
or
mov
int3
pop
jmp
mov
xchg
cmpsb
movsb
sbb
mov
rolb
mov
sbb
cld
jge
dec
popa
xchg
xchg
cmpsb
xchg
adc
jae
ds
cmp
mov
adc
push
ljmp
or
fadd
and
test
test
mov
push
movsb
jne
dec
pop
jb
repnz
pop
push
mov
sub
lcall
jb
and
cs
in
jne
xor
fstpl
pop
xchg
add
jb
or
pusha
add
inc
xchg
cmp
imul
shlb
repz
sti
incl
add
lret
push
sub
adc
and
jge
sti
rorl
pop
scas
lahf
bndstx
pop
decl
pop
mov
dec
xchg
ret
cmpsb
lret
fs
jmp
sub
cmc
out
pop
mov
pushl
cld
mov
clc
and
fnstenv
jmp
stc
push
cli
lods
stos
lods
mov
pop
jo
cmc
lret
cmp
cmovle
daa
les
inc
test
xchg
pop
call
jl
and
sub
cmp
or
clc
xor
divb
and
hlt
pop
lock
mov
pop
lcall
inc
repz
les
xchg
js
test
sub
mov
testl
inc
push
arpl
bound
loope
jecxz
cmc
pop
mov
rcrb
cmp
andb
test
out
xchg
ret
daa
stos
arpl
stos
insl
adc
inc
shlb
arpl
in
pop
sbb
mov
ret
clc
inc
cli
hlt
inc
fwait
iret
jno
xor
lds
adc
std
add
and
js
aaa
xchg
fwait
and
sbb
movl
cmp
packssdw
push
xchg
push
test
push
inc
pop
jbe
mov
xchg
mov
cli
mov
adc
jmp
cmpsb
mov
stos
shrb
or
addl
and
pop
pop
cmp
jmp
fimuls
sub
daa
or
push
xor
jge
scas
cmp
adc
pop
add
repz
pushf
out
xor
pop
adc
or
or
mov
sbb
mov
mov
fdivs
out
scas
notl
cltd
adc
ret
and
sbb
push
mov
rolb
jecxz
push
xchg
fisttps
pop
bound
add
ss
push
dec
sbb
fnstenv
dec
cli
lods
dec
fs
dec
mov
je
sub
add
aam
adc
xchg
jno
enter
dec
push
mov
mov
out
ret
adc
xchg
sub
stos
jae
push
sbb
sti
lahf
fnstsw
test
loop
lret
push
lds
lea
subb
aad
cmp
mov
jecxz
lea
cmc
sarl
rcrb
jle
fmulp
push
adc
adc
stc
cwtl
shr
cmp
lahf
push
lretw
push
adc
jno
cli
jno
data16
out
cmp
ds
push
inc
loop
mov
cmp
cwtl
stos
mov
stos
in
inc
sub
data16
std
push
pop
push
bound
push
leave
test
adc
jle
in
dec
xchg
stos
jmp
push
cltd
addr16
mov
xchg
sub
inc
addr16
imul
lock
xor
sbb
pop
movsl
cmpsb
adc
out
das
push
jp
jge
sub
sbb
shrl
in
xor
xchg
mov
pop
popa
cmp
push
xor
inc
loopne
mov
lret
mov
add
xchg
lahf
inc
sbb
in
jecxz
nop
adc
adc
cmp
add
es
jle
xor
inc
jnp
adc
or
sbb
icebp
loop
mov
add
and
lea
incb
pop
pushf
stos
int
hlt
and
mov
push
scas
pop
inc
push
or
pop
and
pop
jae
xlat
push
xchg
jne
inc
pop
dec
and
sub
xor
iret
insb
sbb
inc
dec
aad
mov
cmpsl
mov
inc
pop
repz
xor
xchg
cmc
lock
sub
push
add
push
clc
push
inc
xchg
aaa
jbe
add
inc
jle
fs
sub
aam
xchg
sub
mov
inc
or
test
stos
std
mov
add
xchg
adc
mov
or
sbb
push
cmp
adc
sahf
outsb
scas
fisubl
sub
jp
push
xor
fnstsw
cwtl
xor
mov
nop
mov
cmpl
push
mov
xor
cmpsl
out
notl
test
test
lcall
mov
or
out
std
pmaxsw
fisubl
xor
ficoml
rol
jge
and
test
cwtl
mov
lock
loop
mov
mov
mov
or
pop
xor
fisttps
ret
mov
push
movsb
lock
and
fidivs
je
ret
clc
dec
out
mov
das
movsb
xlat
stos
sti
or
sub
dec
cmp
cltd
inc
rol
inc
fwait
and
aas
nop
or
sub
lods
test
and
ja
and
mov
xchg
push
data16
das
lahf
cmpsl
addr16
xchg
inc
xchg
push
push
sbb
push
dec
dec
jecxz
lret
repnz
mov
ret
pop
adc
aas
inc
jo
cmp
popf
push
sahf
jp
cmp
je
dec
jo
movl
enter
lock
in
lahf
fwait
push
sub
nop
adc
imul
cmp
scas
notb
dec
pop
jo
mov
decl
push
add
xor
sbb
clc
lahf
test
inc
dec
insb
or
dec
inc
rcll
xchg
cmp
pop
shl
sub
mov
jecxz
stos
stc
ss
fstp
cmpsl
push
stos
cmp
and
popf
hlt
pop
movb
cli
sbb
jmp
mov
pop
cmp
mov
pop
scas
shlb
dec
xchg
adc
or
mov
add
and
iret
xchg
mov
cs
cwtl
addr16
scas
pushf
sti
enter
xor
test
push
ret
push
push
cwtl
or
or
xchg
add
ret
xor
test
add
mov
arpl
cmpsl
mov
lahf
push
push
into
pop
sbb
in
cmp
xlat
sbb
push
xchg
sub
mov
inc
andb
adc
add
mov
pusha
jmp
jmp
xor
fimull
sbb
scas
lcall
push
inc
insb
mov
jae
push
mov
mov
movsb
push
sub
pop
out
pop
movsl
movsb
xchg
fisubl
adc
jg
xchg
ds
adc
mov
out
xchg
fisubl
xchg
fstl
dec
cwtl
fnstsw
shlb
shrl
arpl
out
push
lahf
stc
dec
dec
sti
cmpsl
cmp
test
std
notb
cmp
aas
inc
push
jle
iret
loop
movsb
lret
sbb
daa
popf
loop
mov
aas
pop
push
sub
xor
and
add
lods
mov
cmp
jp
mov
arpl
sbb
jmp
loope
inc
xchg
cmp
xchg
mov
mov
sbb
cmp
ljmp
dec
mov
dec
ret
fiaddl
in
mov
fcomi
and
cmp
sub
push
cmp
adcl
jmp
mov
xchg
sbb
icebp
push
xlat
bound
add
push
cltd
test
jns
rorl
jge
lock
xor
cli
pop
pop
mov
pushf
pop
inc
movl
xorl
les
adc
jb
fdivs
add
addl
adc
aas
cmpl
nop
in
aaa
sti
cmp
in
adc
ret
int3
sti
scas
xor
xor
stos
lea
addl
xorl
xchg
gs
ss
out
stos
roll
sbb
pop
loop
adc
and
sub
mov
mov
dec
mov
loope
cmp
xchg
ljmp
add
push
out
cld
pop
or
add
daa
xchg
jg
insl
cld
pop
gs
mov
daa
push
adc
stos
mov
sarb
negl
stos
sarb
mov
shll
sbb
cmp
in
and
push
cwtl
rcrb
adcb
rorl
sahf
jne
dec
stc
insb
jge
clc
test
in
mov
sbb
adc
dec
aaa
sbb
rdtsc
imul
mov
push
pop
nop
and
mov
xchg
push
loop
test
inc
xor
sbb
push
dec
jo
jne
sub
jle
push
xlat
loopne
jge
xor
jle
jmp
aaa
xor
jno
repnz
pop
stos
mov
and
fwait
out
push
xchg
movsb
push
or
or
cld
test
push
mov
adc
mov
ljmp
test
outsb
shll
and
sub
das
mov
data16
push
test
cmp
mov
dec
cmp
stos
nop
insl
xor
jle
in
mov
adc
pop
inc
adc
jl
mov
dec
jo
pushf
lcall
repnz
out
scas
aas
or
cli
add
pop
loop
mov
pop
addb
pop
xor
out
pop
mov
outsl
xchg
in
or
xchg
fcomps
ja
adc
rcrl
repz
outsb
sbb
incl
loopne
bound
movsb
or
pop
cmpsb
add
shlb
sbb
inc
xchg
mov
clc
mov
lahf
xor
scas
fcoml
dec
pop
mov
adc
std
sbb
cli
stos
mov
xchg
out
sub
or
jne
pop
add
int3
jmp
insb
mov
sub
push
pop
addr16
mov
inc
iret
mov
and
push
sbb
xor
adc
jecxz
stos
and
pop
popf
imul
lods
popa
out
push
hlt
aad
jb
scas
bound
cli
and
stos
lods
pop
push
les
lret
inc
sub
popf
mov
fdivs
int3
mov
test
rorl
jns
pop
es
cs
lods
jae
sahf
xchg
jle
dec
fstl
ja
out
mov
dec
xlat
cs
in
xchg
cltd
aam
pop
lea
imul
jecxz
pop
cmp
xor
in
xor
aas
mov
dec
xor
jg
mov
lock
jb
subb
mov
xchg
and
leave
call
in
imul
hlt
fisubrl
push
xchg
inc
imul
sbb
sub
movsl
inc
and
pop
adc
jne
mov
in
adc
fptan
fisubs
add
inc
inc
in
movsl
mov
cwtl
bound
and
add
imul
jo
mov
and
xor
and
popf
push
pcmpeqw
das
dec
xor
jbe
cmp
pop
ljmp
sahf
clc
or
push
xor
pop
mov
push
leave
adc
je
jp
int3
mov
adc
fcmovu
jg
dec
dec
inc
hlt
pop
int3
jnp
andb
xor
stos
add
loop
mov
arpl
out
ret
scas
add
ja
lret
and
mov
mov
hlt
mov
add
bound
dec
call
ljmp
adc
lods
out
mov
jl
dec
idivl
inc
push
loope
shlb
aad
cltd
cmpsb
sbb
xor
or
stc
jae
and
lcall
popa
cmp
fisubl
push
loopne
xchg
adc
iret
iret
pushf
ds
mov
shll
cmp
jge
fisttpll
push
loopne
mov
and
cmp
xchg
pop
jle
xchg
ss
repz
mov
out
aam
jl
push
sarl
dec
xor
sub
mov
adc
jmp
js
mov
mov
jbe
mov
ja
rolb
cmc
xor
imul
popa
and
dec
push
aas
bound
pop
fwait
rolb
add
sbb
add
gs
in
push
inc
lahf
pop
pop
dec
cltd
aas
lods
mov
jg
rorb
xor
pusha
stos
sti
fsub
sbb
inc
mov
into
jae
push
jb
ffreep
lea
addb
out
or
popf
icebp
jecxz
or
jns
push
jb
inc
out
stos
add
dec
aam
dec
ret
test
loope
mov
int
mov
enter
and
adc
lea
xchg
mov
lea
sub
out
jle
add
stc
insb
rclb
add
pop
jnp
lret
inc
and
aam
movsl
les
push
inc
mov
jo
enter
rcrb
imul
paddd
out
jecxz
pop
or
bound
push
shl
sub
adc
jge
jnp
cmp
lcall
jns
ds
xor
lahf
std
fbld
pusha
xchg
xchg
out
js
jl
jae
imul
pop
scas
and
push
jg
rolb
mov
or
fistps
inc
xchg
test
imul
fisubrl
mov
fstpl
push
test
dec
and
add
mov
aam
lea
int
push
xor
dec
mov
sbb
jbe
ret
test
lret
xor
xor
sbb
xor
popf
mov
icebp
xchg
dec
or
push
sub
shrl
test
push
sub
popl
fldt
inc
mov
lods
jmp
push
lds
and
lods
test
shrl
xchg
stc
sbb
call
mov
push
lods
mov
inc
outsb
pop
out
dec
mov
mov
and
cwtl
cmpl
dec
jne
push
mov
mov
ficompl
pop
xlat
out
jge
push
scas
pop
dec
sub
sti
es
push
push
push
add
orps
das
mov
sub
ror
test
push
sbb
push
int
and
in
ljmp
gs
mov
in
mov
movl
pop
int
cmpb
in
fs
imul
jno
je
cmp
iret
std
xchg
add
bound
cmp
or
std
daa
sbb
push
push
addb
pop
paddusb
and
jecxz
and
xchg
xchg
sub
insl
insb
lcall
inc
int3
dec
es
sub
mov
pusha
xchg
and
hlt
loop
clc
test
lret
stos
or
addl
stos
sbb
shlb
cwtl
out
xchg
mov
dec
inc
push
jp
add
test
jecxz
mov
sti
and
into
pop
push
push
sub
xor
cmpl
pushf
jmp
inc
ja
mov
jl
icebp
jp
dec
jle
pop
rcrl
jg
fs
adc
cmpsl
mov
mov
and
jns
inc
dec
jns
or
adc
push
add
inc
mov
pusha
lret
add
lcall
mov
imul
sbb
nop
jg
xlat
jb
rcrl
int
es
or
mov
testl
sub
sbb
push
popf
fcompl
or
mov
sub
sub
xchg
adc
call
mov
inc
mov
xchg
pop
inc
sbb
in
std
mov
push
stos
mov
push
xchg
or
repnz
mov
lahf
outsb
sub
cmp
int3
mov
mov
mov
lods
fisttpll
sbb
cmp
enter
adc
mov
imul
lock
jo,pn
push
mov
add
pop
cmc
loopne
aam
sahf
repnz
mov
jl
jo
mov
std
stos
loopne
into
xor
in
cmp
lcall
inc
outsl
add
pop
je
rorl
aam
inc
or
lret
or
ret
jmp
pop
jbe
inc
or
fldcw
fsubrs
push
inc
sub
push
pop
fcmovne
pop
cld
pop
outsl
push
mov
mov
mov
fldl
mov
xchg
popa
fisttpl
pop
popa
adc
int3
xor
dec
sub
inc
mov
mov
nop
mov
pop
xchg
pop
pop
dec
push
jb
pushf
lds
dec
mov
or
pop
mov
push
cmp
les
mov
aas
sbb
incb
push
xor
aaa
jle
mov
add
movsl
pop
inc
fbstp
and
test
cwtl
aad
inc
dec
test
or
cmp
jmp
jae
cmpl
xchg
xor
sbb
cld
or
hlt
lret
and
icebp
mov
cli
adc
add
outsl
pop
sbb
and
shl
fadds
inc
out
mov
pop
add
cld
xchg
cmc
inc
clc
xor
nop
addb
add
test
gs
loope
adc
inc
int
cwtl
xor
jecxz
in
ret
sub
add
pop
je
shl
mov
add
and
aaa
pop
addl
lea
lahf
dec
xchg
cmc
or
les
jb
pop
outsl
dec
and
stos
cmpsb
dec
xor
xchg
int3
fcom
mov
cmc
pusha
sbb
xor
jbe
mov
xlat
fldcw
shr
push
in
int
sbb
inc
mov
xor
push
mov
pop
fwait
dec
mov
sub
jne
cmp
push
inc
popf
cmp
out
or
icebp
xor
inc
lods
dec
cld
mov
dec
xchg
mov
mov
cltd
cmpsl
lock
addr16
std
loopne
jns
xchg
in
std
mov
and
ljmp
in
mov
scas
jnp
pop
in
jecxz
sarl
fisttpl
mov
xor
fbld
pop
fists
cwtl
mov
inc
aaa
aaa
pop
nop
scas
sub
xor
nop
jns
aad
popa
jnp
cld
out
xor
or
shrl
aam
out
fs
sbb
mov
and
cmp
xor
xchg
pop
shl
lcall
fwait
and
mov
jle
mov
stos
xor
xorl
fmulp
pop
push
xchg
movsl
scas
push
add
lcall
imul
xor
loope
pop
or
fbstp
lret
add
adc
push
lret
mov
mov
outsb
fcompl
hlt
out
std
xchg
fnsave
out
jb
ja
aad
int3
dec
popf
mull
shrl
adc
stos
xchg
sahf
dec
cmpsl
mov
pop
mov
jl
jg
xchg
push
dec
cli
dec
movsb
jnp
cmc
in
jmp
and
dec
out
mov
jae
mov
and
xchg
movsl
mov
pop
jb
aaa
lock
cmpsl
lahf
test
push
dec
mov
ror
sti
daa
push
jecxz
push
mov
shlb
lahf
sbb
cltd
inc
pop
lret
mov
imul
repz
cli
popf
jnp
inc
insl
fs
dec
inc
push
inc
or
lcall
outsl
iret
inc
jnp
sbbl
dec
leave
sbb
mov
imul
sub
mov
sahf
js
sub
jp
mov
mov
mov
pop
in
daa
andb
inc
push
xchg
les
arpl
xor
inc
jnp
int3
dec
xchg
pushf
and
cwtl
push
jp
sbb
add
jb
in
xor
cmc
push
mov
add
mov
and
aad
mov
imul
xchg
xchg
cwtl
cli
fstps
adc
stc
dec
push
dec
mov
push
pop
addr16
xchg
cmpsb
pusha
inc
out
fwait
icebp
xchg
into
inc
sub
jl
aam
movsb
enter
and
inc
sbb
mov
adc
adc
mov
jmp
rcrb
cs
inc
mov
mov
in
mov
add
clc
sbb
lock
push
cmpsl
sub
inc
shl
add
push
push
outsl
push
mov
and
aam
fwait
pushf
xor
fs
adc
xor
pop
mov
xor
push
inc
lds
incb
bound
aaa
lods
cmp
mov
imul
cmp
es
mulb
jg
iret
adc
pop
pop
cmpsb
or
aam
jmp
ret
clc
add
dec
or
mov
xor
repnz
cwtl
call
jae
sub
aaa
out
dec
xchg
jb
testb
adc
sarl
cli
push
sbb
lock
sub
or
dec
std
push
jg
shlb
rol
adc
push
or
aas
fists
pop
dec
or
inc
hlt
xorl
cli
lret
and
in
fsubrs
mov
mov
mov
cmp
ret
inc
dec
aad
orl
jbe
sbb
popa
sbb
mov
push
stos
xor
xchg
fstl
mov
jns
out
xchg
cmp
xchg
arpl
imul
clc
mov
sub
iret
sahf
sti
lds
lods
mov
inc
test
loopne
add
dec
imull
shll
jns
and
movsl
xchg
scas
loop
test
aaa
gs
xor
in
adc
inc
jns
aaa
push
add
cmc
aad
jno
lcall
enter
stc
scas
mov
lret
jecxz
in
or
jae
enter
dec
sbb
jl
pop
aam
pusha
cmp
loop
mov
pop
stc
cmp
bound
aad
mov
enter
shr
jnp
or
xor
or
sub
into
in
xor
out
xchg
div
jno
pushf
pop
shrl
adc
das
or
and
lods
pop
jmp
imul
stos
pop
and
sbb
push
mov
add
cwtl
xchg
jge
insl
pop
loope
icebp
inc
push
sti
jno
pop
cld
int
lea
scas
cmpsb
adc
mov
dec
test
xor
cli
mov
mov
xchg
and
xchg
push
sub
mov
xor
stos
in
je
loope
cmp
dec
cmp
dec
mov
sti
push
mov
pop
jno
hlt
push
dec
push
or
sbb
mov
adc
scas
int3
es
mov
fs
orb
adc
mov
cmc
ds
les
xchg
and
mov
push
xor
mov
cmp
cltd
lcall
add
fucomp
gs
fsubrp
and
or
scas
int
cmovns
sbb
xchg
test
stc
adc
dec
jmp
mov
xchg
adc
dec
mov
arpl
push
fsubrl
xchg
xor
mov
xor
push
int
ret
mov
mov
lea
mov
ljmp
pop
adc
fsubl
lea
mov
repz
jge
fiadds
xchg
lods
push
es
and
test
dec
adc
xchg
and
xor
mov
xor
js
dec
dec
dec
sbb
mov
and
mov
xchg
lock
stc
ja
jmp
outsb
fsubrs
xor
pop
iret
rolb
outsb
mov
pop
cld
incb
aam
push
movsl
fildll
dec
test
mov
popa
sti
ds
cli
sbb
ret
xchg
cwtl
jle
sbb
call
xchg
data16
xchg
cmp
adc
roll
test
sub
push
add
mov
dec
test
inc
add
ret
loop
pusha
pop
xchg
shll
adc
lods
sbb
fldt
fistpll
mov
cwtl
jno
mov
in
fs
sbb
cs
pop
scas
dec
andb
jle
cmovnp
outsl
mov
cmovl
sbb
jl
jo
aad
mov
add
pop
push
mov
pop
inc
test
push
ljmp
add
hlt
pop
push
ljmp
pop
dec
ss
xor
pop
out
xchg
lcall
add
bound
xor
or
sbb
push
add
cmp
fisttpl
fsqrt
imul
fldl
push
scas
adc
outsb
mov
bsr
notl
sub
lock
dec
mov
pusha
out
fisubrs
jbe
jle
and
ja
loop
and
cmp
leave
and
and
inc
pop
or
adc
nop
and
les
sbb
push
mov
inc
jmp
fisttps
jmp
movsb
xchg
iret
rclb
rorl
add
jae
jge
gs
loop,pn
imul
jle
push
inc
scas
ret
in
add
outsb
and
idivb
mov
sbb
xchg
cwtl
cmp
shr
in
sub
inc
jg
inc
scas
jle
xchg
and
ljmp
jnp
out
push
sub
rorl
cli
int
inc
lcall
scas
arpl
pop
xchg
mov
repz
mov
pushf
aad
pop
and
or
adc
addl
push
cli
xchg
cmpsl
lcall
popf
push
push
or
xor
or
xchg
lods
jnp
mov
or
xchg
xchg
loopne
repz
and
adc
sbb
xchg
scas
mov
inc
sub
xchg
clc
mov
jb
lahf
aad
push
out
push
add
jnp
clc
xor
mov
fists
xchg
pop
cltd
mov
or
mov
add
fsubrp
sbb
insb
mov
lds
sub
not
loopne
mov
mov
lcall
mov
mov
pop
movsl
sahf
lcall
jo
bound
pop
mov
cmp
arpl
jno
mov
insl
ja
mov
int
stos
inc
mov
iret
ds
or
and
add
xchg
repz
mov
out
das
sbb
or
push
mov
jmp
sub
inc
je
adc
les
dec
rorb
lahf
jge
push
dec
testl
sub
mov
stos
stc
dec
aam
inc
icebp
imul
inc
cmp
pop
xchg
iret
inc
mov
fmull
lds
testl
jg
test
cmp
loopne
xor
add
out
repz
jg,pt
jae
xchg
js
lret
xchg
hlt
mov
test
rcr
cltd
std
jb
pusha
push
mov
int3
out
mov
inc
dec
push
fcoms
scas
roll
jbe
sub
js
rclb
int3
bound
outsl
sub
jns
push
ds
int3
andb
mov
mov
iret
jmp
xchg
and
push
popl
into
imul
inc
imul
shlb
mov
mov
mov
xor
inc
scas
push
sub
fisubs
movsb
rcl
mov
add
in
pop
pop
or
pushf
mov
in
leave
or
mov
jbe
ds
adc
jae
mov
jge
mov
mov
jg
cmp
cmc
cmp
lcall
mov
hlt
in
lret
push
push
pusha
fs
cld
jns
xor
adc
mov
and
sti
xor
cmc
mov
adc
or
xchg
das
push
fiadds
scas
mov
cmpsb
push
je
mov
jg
test
cmp
cmp
rorl
pop
ljmp
dec
clc
push
sbb
jns
xchg
decb
popl
test
add
xchg
int3
jmp
bnd
mov
sbb
in
inc
mov
scas
ds
leave
xchg
subps
xchg
xor
out
mov
js
push
js
pop
mov
fisubs
orb
bswap
call
es
sbb
jbe
in
fldcw
roll
std
lret
push
std
add
scas
mov
and
cwtl
imul
aam
sub
and
movl
xor
xacquire
repz
les
and
jge
outsl
sbb
or
jo
out
fldcw
cld
push
pop
or
lds
out
scas
sarl
push
mov
push
stos
std
lret
movsl
adc
stos
inc
or
stc
mov
push
and
xchg
fldt
icebp
std
testl
adc
dec
add
in
jecxz
adc
outsb
cmp
call
inc
in
xchg
enter
dec
loop
or
pop
sahf
fisttpl
jg
lea
and
roll
jmp
pop
popf
mov
imul
sub
stos
xchg
idivb
decl
leave
jge
inc
jns
imul
add
fdivrs
lahf
arpl
rcr
dec
mov
test
fmull
adc
push
in
add
xchg
push
sti
cmp
xchg
pushf
push
fstp
lock
jg
lahf
jno
outsl
xchg
sub
fsub
sub
jp
ret
xor
out
pop
repz
dec
inc
inc
outsl
jns
movsl
sub
dec
clc
sub
sbb
inc
mov
incl
cmp
pop
mov
push
das
ja
in
dec
inc
mov
sub
inc
pushf
pusha
adc
ss
mov
pop
sub
hlt
sub
lahf
mov
dec
fdivs
sub
dec
sar
ja
inc
mov
mov
xor
adc
imul
xchg
stos
dec
xorl
dec
adc
dec
mov
popf
lods
mov
xchg
aas
hlt
lock
fdivs
adc
mov
cmc
xor
and
cltd
sti
push
mov
hlt
mov
inc
cmpsb
xchg
dec
ret
test
sub
pop
bound
xor
dec
out
or
pop
push
dec
sbb
and
in
adc
xor
adc
adc
cmp
arpl
into
jb
arpl
lock
mov
out
fldenv
push
jae
sbbb
sti
fs
inc
leave
push
mov
aam
add
push
cmp
cmp
push
insb
repz
fstl
sub
mov
mov
mov
mov
movsl
adc
insb
dec
sbb
mov
sarb
dec
sub
and
jae
or
pop
jge
and
aad
lock
test
mov
dec
mov
insl
cs
test
roll
pop
xchg
jae
add
mov
jae
dec
subb
pop
fs
in
das
sti
sub
loope
rclb
mov
add
ja
out
sti
aas
mov
pushf
jno
adc
dec
pop
jae
in
dec
jne
inc
movsb
scas
fldcw
push
fildl
idivl
cmp
cs
in
int
and
in
push
shrl
test
les
cltd
test
outsl
pop
mov
out
mov
add
cmp
xchg
orl
imul
mov
add
adc
in
xor
shlb
pop
jae
call
or
dec
cs
jo
andl
sbb
jno
dec
into
aas
pusha
sbb
fcoms
pop
movsb
adcl
out
or
xorb
inc
pushf
xor
fsts
or
jns
or
mov
or
sbb
dec
fwait
or
adc
sarb
repz
ja
sahf
sahf
push
test
push
mov
in
lret
lahf
xchg
cwtl
push
or
cmc
mov
ret
je
jnp
push
push
cs
pop
test
aaa
minps
fmull
maskmovq
divl
pop
aam
lea
movlps
outsl
hlt
aas
rcll
xor
xor
xchg
cld
iret
mov
dec
lcall
dec
std
in
ja
cmp
flds
add
imulb
mov
adcb
xor
dec
test
stc
dec
jbe
sub
fucomp
cmp
sbb
sbb
loopne
mov
cltd
xchg
xor
xchg
nop
stc
mov
jae
jnp
into
leave
cmpsb
xor
mov
push
jae
in
stos
call
loop
mov
pop
lret
into
les
neg
inc
sti
out
insb
lret
es
jmp
mov
mov
or
mov
outsl
cmp
adc
sub
add
insb
loope
rolb
pop
loopne
ja
imul
movl
enter
or
add
cmp
cmp
add
and
addr16
add
inc
inc
inc
dec
stos
jno
xchg
add
xchg
push
mov
lcall
inc
sub
pop
mov
mov
jmp
adc
add
adcb
outsb
cmc
les
cwtl
popa
or
insb
jne
xor
aaa
das
int3
out
sbb
add
or
aam
mov
xor
inc
push
adc
iret
jo
xchg
hlt
fmul
push
pop
mov
cmp
jmp
xor
lret
push
xlat
aas
and
xchg
fbstp
xchg
cmp
into
popf
inc
mov
sbb
mov
xchg
sbb
popf
mov
jnp
pop
mov
lock
adc
movsw
nop
cltd
or
mov
mov
inc
cltd
jecxz
xchg
add
xchg
sub
cli
call
cmp
pop
rorl
mull
sbb
popf
push
insb
cli
loopne
fs
xchg
mov
push
jbe
imul
lcall
or
daa
fnstcw
mov
or
push
enter
inc
fadds
out
pusha
add
and
addb
in
cmp
insb
cmp
jle
stos
mov
fstpt
insl
pop
add
jno
inc
jecxz
imul
loopne
mov
popf
dec
xchg
sarl
or
pop
inc
fsub
enter
sbb
arpl
test
adc
out
mov
mov
loop
inc
mov
push
xchg
adc
icebp
cltd
popa
xchg
cmp
jecxz
push
es
cmp
inc
cmp
js
mov
int3
push
xchg
dec
lock
fbld
stos
jl
lahf
fnstsw
pop
mov
add
imul
stos
cmp
aad
dec
mov
add
mov
inc
push
fwait
lock
in
sbb
fildl
push
lret
movsl
and
loopne
sbbl
sub
inc
mov
dec
mov
push
adc
push
cld
repnz
mov
or
dec
movsb
fnsave
jmp
test
cmpsb
loope
fcom
push
jle
pop
mov
adc
jo
loopne
push
and
dec
pop
mov
and
add
insl
sahf
in
pusha
lods
xchg
push
js
das
insl
insl
dec
pop
lea
pop
add
xor
push
scas
jle
icebp
aas
mov
jbe
cmpl
mov
jecxz
push
test
loop
push
in
sti
subl
or
shll
js
or
jnp
jno
inc
sbb
je
lea
movsl
das
push
cmpsb
aam
jne
pop
insl
sbb
out
or
xchg
sub
add
mov
push
xor
xchg
adcl
and
mov
mov
sub
test
pop
sti
and
stc
mov
fldt
xchg
call
pop
jl
dec
cmpsb
imul
xchg
inc
in
insb
inc
sbb
outsb
imul
imull
mov
xor
out
pop
push
lret
movsl
leave
mov
mov
push
push
jne
adc
push
fwait
cmc
cwtl
filds
fwait
cmp
dec
sbb
ret
sub
icebp
jecxz
jecxz
dec
faddp
cwtl
pop
mov
jo
pop
jne
mov
jp
aad
jmp
dec
scas
ret
lret
mov
mov
daa
daa
stc
sbb
pusha
sbb
les
dec
jbe
jbe
push
jge
mov
imul
out
dec
js
jl
mov
ret
out
daa
stc
push
push
or
gs
mov
in
push
sti
divl
sub
xchg
pop
mov
sub
pop
sub
loopne
iret
pushf
adc
addl
add
out
ja
mov
hlt
ds
das
jmp
add
xorl
ds
sahf
int3
hlt
push
imul
roll
aam
jns
sub
popa
lods
push
call
xchg
and
xor
imul
js
test
xchg
mov
jno
loope
sbb
dec
mov
cmp
stos
and
pop
das
mov
mov
icebp
stc
popf
shlb
rcrb
rcll
or
sbb
push
mov
addr16
int
repz
pop
mov
popa
jecxz
mov
cmp
orb
sbb
xor
add
sbb
xchg
js
sub
push
repnz
push
jbe
rclb
and
cmpsb
add
or
flds
add
xchg
test
inc
int
inc
stos
sub
loopne
jb
pop
jmp
xor
and
mov
gs
stos
mov
add
fidivrl
add
scas
cmp
mov
jl
cmpb
mov
dec
jp
jmp
sub
fcmove
movsl
cmpsb
mov
repnz
mov
xchg
lahf
in
ss
or
mov
movsb
or
mov
mov
inc
xchg
push
cmp
filds
into
jmp
fmul
jne
sub
aaa
sbb
mov
clc
mov
adc
xchg
mov
adc
rcl
insb
or
arpl
push
mov
aad
mov
inc
xor
loope
push
sub
mov
js
mov
insb
call
mov
ss
and
pop
jmp
in
sar
jle
pop
jno
mov
rorb
fs
movsb
testl
mov
mov
cmp
xchg
adc
xor
mov
sbb
jl
inc
sbb
iret
jp
mov
and
movsb
ret
call
dec
loope
mov
jb
xor
inc
mov
hlt
cmp
or
movsb
pop
rolb
lods
pushf
cmpsl
and
mov
enter
je
adc
xor
adc
call
push
imul
dec
pop
popf
mov
mov
and
add
adc
xchg
jo
xchg
ja
movsb
dec
sub
lcall
mov
pushf
subl
cmpsb
insl
jb
movsl
fisubrl
xor
loope
fs
xor
push
sbb
sub
add
lods
xchg
cmp
xlat
pop
in
jmp
cli
mov
std
sub
lock
xchg
outsb
sti
imul
or
sub
out
xor
mov
test
sarb
or
roll
xchg
ljmp
mov
and
rclb
subl
or
jb
cmpsb
sbbb
and
out
cmp
push
push
iret
arpl
and
pop
cli
inc
xor
xchg
jp
popf
xlat
cmp
sarl
jg
add
fs
mov
es
fnstenv
inc
and
jnp
mov
int3
mov
mov
xor
iret
mov
out
push
mov
and
mov
in
notb
cmp
inc
mov
dec
popf
xor
push
ret
fcmovb
inc
nop
xor
dec
ljmp
sub
aas
cmc
mov
mov
jno
cmp
mov
cmpsb
sbb
dec
sub
and
xchg
call
repz
testl
loop
or
xchg
ffreep
mov
cmc
cmpsl
mov
pop
inc
mov
add
jecxz
lret
xchg
dec
into
outsl
add
insb
xchg
ss
jle
pushf
sti
popa
pop
sahf
add
mov
fldcw
hlt
in
ljmp
loopne
lret
fisttpl
daa
mov
bound
fs
mov
sub
mov
or
jne
xor
out
xor
mov
jl
mov
xchg
leave
add
outsl
add
ffree
lahf
loopne
aaa
mov
or
and
or
in
bnd
imul
inc
nop
push
ror
adc
repz
stos
add
int3
aaa
aad
xchg
movb
leave
sbbb
add
stc
xchg
xchg
std
jbe
mov
dec
movsb
mov
leave
sbb
pop
mov
mov
jmp
push
mov
dec
loope
pop
sahf
add
rcrl
sub
sti
xor
test
cmpsl
push
cld
xchg
popf
lret
imul
or
insl
aam
call
xor
mov
mov
mov
shlb
inc
add
inc
ret
cmpsl
popf
sbbb
jg
psadbw
xor
inc
mov
jo
out
pushl
dec
mov
adc
mov
dec
mov
insb
sbb
add
popa
dec
int3
mov
jecxz
or
pop
addr16
std
cmpsb
jmp
or
stos
fcompl
scas
cmpsl
pop
addps
std
hlt
inc
icebp
jle
xchg
lea
cwtl
sbb
arpl
insl
inc
fdivrs
mov
jecxz
aam
dec
xor
call
mov
orb
mov
aam
leave
mov
sbbb
loop
push
scas
addl
and
aad
lods
lret
jns
pop
mov
jbe
hlt
outsb
dec
iret
movsb
mov
repz
lret
and
cmpsb
mov
inc
lahf
call
lea
mov
cld
leave
sti
aaa
cld
jne
daa
mov
pop
std
ret
ds
inc
jae
lret
add
mov
out
bound
mov
pop
loop
testb
xlat
jmp
insb
mov
jne
or
and
add
repnz
stos
jmp
sub
jge
sbb
and
inc
cs
roll
mov
inc
std
mov
xor
xor
mov
fisubl
lret
aaa
std
mov
and
ss
sti
scas
pop
mov
scas
mov
icebp
mov
into
mov
jmp
sub
in
xchg
sbb
scas
mov
mov
popl
xor
clc
push
xchg
push
pop
pushf
jbe
or
dec
mov
int
and
add
lret
jge
or
fisttps
jbe
mov
outsb
jge
adc
or
cmc
jecxz
pusha
fisubrs
add
push
inc
xor
movsb
add
inc
add
sbb
sub
mov
lock
sbb
arpl
sub
mov
inc
call
mov
movsb
fstl
push
pop
mov
rcrb
leave
jmp
test
add
les
adc
aam
dec
fwait
popa
push
pop
jge
outsb
push
cmp
sbb
lret
xchg
dec
mov
sbb
add
inc
mov
rolb
sub
cwtl
dec
popf
idivb
add
dec
insl
das
idivl
lock
xor
or
ficoml
std
orb
xor
jno
xchg
add
inc
nop
pop
jb
pop
clc
ret
xchg
fdivs
mov
pop
daa
cmpl
orl
mov
push
or
dec
mov
ss
incb
ss
data16
push
xchg
fisttpll
popa
xchg
pop
pop
xchg
cmpsl
jbe
mov
ficompl
lods
cmp
add
mov
jns
fisttpll
xor
dec
xchg
je
das
arpl
add
ja
cmp
fptan
pusha
xchg
inc
rorb
jge
mov
dec
fsubp
jns
call
pop
movsb
mov
jo
test
xchg
add
jge
push
push
jecxz
add
mov
out
hlt
mov
fsubl
add
notb
xchg
jecxz
adc
mov
arpl
adc
push
mov
mov
mov
and
push
shll
stos
rol
push
mov
in
mov
mov
xchg
popf
mov
mov
push
int3
cmpsl
insl
pop
mov
and
adc
cli
inc
rclb
add
pop
xor
popa
lret
sub
pop
in
add
pusha
cwtl
add
call
lock
xor
cld
inc
pop
out
int
and
cltd
push
movsl
sub
inc
cmp
push
and
push
fstl
mov
mov
addr16
mov
add
jmp
or
sbb
xor
pop
jbe
mov
xchg
shlb
cmp
jnp
dec
mov
in
jne
fisttpll
into
lahf
sbb
ja
jo
jecxz
sub
add
adc
out
fwait
mov
cli
movsl
loop
push
fimull
mov
inc
sbb
cmp
addr16
sub
add
push
test
loope
jbe
add
rcl
sti
cmp
push
push
jle
aam
mov
pop
ror
inc
or
repnz
cli
je
and
cmpsb
dec
jne
xor
or
xchg
in
xchg
cmp
mov
pushf
mov
movsl
int3
bnd
sbb
cltd
insb
mov
dec
add
adc
fcmove
add
lcall
shlb
or
adc
shl
outsl
push
mov
mov
jecxz
je
xor
xchg
arpl
movb
fcompl
mov
dec
popf
push
pop
sbb
cs
adc
or
or
cld
cmc
dec
adc
mov
loope
mov
les
rcrb
je
cmp
out
std
pop
mov
mov
scas
mov
xchg
popf
bound
inc
mov
push
js
aad
pop
push
sahf
sub
subl
lea
mov
movsl
movlps
push
out
data16
imul
and
repnz
mov
dec
sub
mov
leave
jne
jo
les
addr16
and
jg
jns
push
mov
testb
jmp
mov
cld
lock
shll
adc
and
adc
daa
inc
daa
sahf
loop
inc
or
xchg
jns
dec
add
mov
ret
sbb
push
jb
pop
je
jae
lods
shlb
inc
inc
mov
and
xor
lods
filds
mov
dec
or
fsubs
fildl
cmp
and
js
daa
mov
cwtl
roll
movsb
ljmp
mov
divl
shrl
into
lock
lods
dec
imull
and
sbb
clc
loop
insl
jmp
pop
xchg
imul
push
xor
push
or
or
mov
jge
std
push
lret
mov
inc
cmp
test
fsubrl
add
lock
jns
pop
adc
mov
pop
xor
fcos
dec
mov
dec
mov
xchg
dec
sbb
rolb
fsubl
xchg
loopne
jle
daa
push
or
sahf
cmp
shl
push
movsl
add
dec
pop
sub
lock
mov
pop
popf
shlb
jnp
jb
xor
mov
push
pop
jb
rolb
cmpl
adc
scas
jae
pop
sub
std
lock
pusha
mov
xchg
cld
loop
push
pop
mov
fisttpl
rcr
push
incb
fisttpl
cmpsl
lahf
jbe
xchg
lea
sbb
sbb
stc
mov
int
pop
inc
js
ret
loopne
mov
pusha
push
mulb
jo
jg
push
jno
imul
xchg
mov
mov
es
or
das
jmp
pop
jne
pop
lods
aam
int3
mov
fmull
pop
pushf
cmp
mov
js
mov
xchg
inc
aaa
add
arpl
mov
dec
pop
xor
push
rcll
push
and
sbb
lods
pusha
out
mov
jb
mov
orb
push
stc
inc
xchg
loope
inc
dec
push
clc
dec
cmc
xchg
mov
xor
lods
cmp
xchg
stc
xor
jge
cmp
std
daa
mov
mov
out
test
cli
clc
add
sub
and
sbb
push
rorb
xor
lock
and
jbe
sahf
stos
mov
cli
lods
shrb
jge
test
mov
shr
xor
mov
aad
rorl
sti
add
movsl
jns
mov
das
nop
negl
push
imul
push
xor
inc
js
pusha
icebp
xor
addr16
mov
pop
adc
pop
cmp
lret
and
js
js
cmp
jp
inc
and
adc
gs
xchg
add
mov
adc
inc
outsb
pslld
in
es
push
xor
dec
inc
and
inc
pop
or
add
mov
dec
gs
dec
mov
rorb
daa
adc
xor
sub
dec
xor
mov
je
fistl
pop
aam
inc
xchg
push
andb
aad
dec
sbb
stos
mov
pushf
test
xlat
xchg
cmc
cmpsl
outsb
pop
in
lds
aas
mov
ret
and
enter
or
adc
push
scas
js
cmp
icebp
push
jle
cltd
test
imul
or
push
jno
push
dec
push
jno
aas
repnz
inc
cmp
pop
jo
xor
or
jge
sahf
mov
mov
mov
repz
call
fucomip
pop
sub
in
loop
adc
pop
jle
xor
jnp
js
lods
dec
dec
repz
pop
pop
lret
data16
int
outsb
pop
js
lret
jne
call
insl
cmp
data16
sti
aas
lahf
popa
imul
mov
push
mov
push
jmp
pop
hlt
pusha
push
mov
test
dec
cmp
mov
push
and
cmp
adc
mov
mov
jl
dec
stos
xor
aad
mov
shlb
push
and
ss
in
inc
xor
cmp
unpcklps
sbb
xor
cld
scas
dec
mov
mov
js
cmp
jmp
inc
ret
aam
and
fs
pop
imul
test
enter
jg
outsb
mov
push
mov
and
pop
pop
inc
popa
cmp
mov
adc
movsl
push
lret
cmc
lcall
fs
jns
sub
mov
ret
xchg
add
mov
add
cmp
and
stos
stos
cltd
or
pop
push
stos
jb
pop
in
fbstp
jg
mov
mov
daa
sub
sub
mov
cmpsw
jp
jecxz
mov
push
rcrl
dec
shl
sbb
negb
mov
xchg
pop
movsb
movsb
dec
sub
pop
inc
xchg
sti
mov
adc
xchg
sub
cld
and
xor
pop
in
add
les
and
sub
dec
push
xor
sub
iret
popl
test
xor
inc
out
rol
adc
cmp
cmp
cmp
mov
add
ret
add
mov
mov
dec
jne
rcrl
das
repnz
inc
pop
test
push
lret
push
mov
int
repz
mov
arpl
xchg
inc
jnp
test
mov
imul
jns
cltd
repz
es
popf
rorl
dec
add
jnp
cmp
pushf
insb
out
add
adc
ret
jl
push
push
ds
dec
repz
push
sub
lahf
dec
mov
push
dec
pushf
ja
dec
cli
add
sbb
cmp
cltd
jns
mov
fs
mov
inc
test
inc
inc
inc
pusha
scas
inc
inc
leave
jno
dec
push
sub
imul
pop
and
sti
divb
add
jae
cld
dec
sti
pop
cmp
xor
pop
pop
dec
pop
pop
jge
imul
cs
xor
push
xchg
popf
dec
ret
subb
adc
sbb
push
mov
shlb
addl
inc
pop
dec
adc
xor
adcb
rolb
xchg
sbb
aas
pop
test
adcb
je
and
sbb
xor
mov
fwait
lock
jge
mov
pop
adc
incb
mov
push
dec
sub
in
pusha
data16
jno
call
mov
arpl
ds
push
push
fdiv
mov
leave
clc
mov
xchg
inc
add
aad
leave
cmp
inc
dec
pop
and
jbe
mov
jge
ds
mov
jno
xchg
nop
in
insb
out
lcall
iret
pop
sbb
xorb
dec
push
mov
testb
adc
cmpl
push
adc
test
jp
shll
loop
loope
call
pop
int3
mov
das
push
das
xorl
movsb
push
insb
dec
mov
mov
lea
mov
mov
test
lds
jle
pop
sub
sub
loope
sbb
es
and
inc
push
in
rclb
pop
in
in
notb
jle
js
inc
cltd
clc
lea
adc
shll
shl
nop
js
rorb
sbb
hlt
pop
out
fimull
imul
aad
adc
jne
ret
push
into
ret
push
scas
scas
or
mov
aam
pop
out
and
leave
and
ja
ret
cmp
xchg
mov
leave
jp
sbb
jmp
mov
popa
adc
pop
leave
test
xchg
jl
sub
je
in
push
scas
pop
mov
add
mov
adc
lds
pop
cmpsl
or
fidivrs
jmp
cltd
dec
sub
sti
movsb
mov
push
dec
ljmp
adc
cmc
dec
lret
ljmp
jp
or
lds
mov
pop
mov
jmp
cmc
jmp
mov
mov
out
loopne
xchg
xchg
les
pop
and
sub
xchg
jae
inc
leave
out
xchg
push
push
pop
ljmp
xlat
aad
outsb
or
mov
mov
adc
das
or
add
sbb
or
lahf
sahf
ljmp
in
nop
adc
cmp
adc
add
mov
fwait
xor
das
arpl
mov
dec
push
stos
test
dec
and
jg
adc
ret
lods
fists
sub
test
adc
lret
mov
push
ficompl
rol
in
rolb
and
sahf
iret
pop
or
cld
dec
cmp
rcrl
not
insl
andb
xor
stos
ret
rorl
sub
arpl
fldcw
sahf
test
xchg
adc
cld
lods
jns
adc
xor
lahf
push
dec
imul
sub
in
cmp
sbb
push
ja
enter
mov
je
pushf
enter
dec
stos
pop
jae
pushf
sbb
in
mov
sub
pop
add
in
dec
xor
xchg
and
and
les
jl
sbb
push
or
cmp
loope
add
popf
pop
lret
outsl
lock
imul
jnp
push
or
pop
int
dec
rcrb
std
ret
leave
push
xchg
xchg
scas
pop
and
adc
mov
ret
in
mov
adc
and
jns
mov
aaa
or
test
lahf
or
add
jns
push
add
sbb
leave
or
cli
xor
sub
add
loope
xchg
or
mov
lock
call
jecxz
dec
mov
repnz
scas
and
sbb
fcomip
ja
jne
les
loop
out
jb
jns
out
add
addb
repz
shll
ret
bound
push
sub
mov
pop
ja
inc
movsl
imul
jno
mov
bound
pop
in
in
fsubrl
cltd
xchg
imul
cmp
mov
ret
mov
pop
fcoms
push
lahf
movsl
imul
arpl
stos
sub
mov
mov
aaa
rolb
cmp
and
clc
cmp
ret
cmp
add
js
lds
aaa
sub
jb
xor
mov
loop
mov
notl
adc
xor
stc
iret
rcll
mov
mov
cmp
adc
leave
imul
jae
ret
imul
cmpb
pop
sbb
jae
sub
push
mov
fiadds
jp
lock
xchg
push
xor
cmp
xchg
add
inc
xlat
mov
bound
imul
mov
out
inc
mov
mov
or
adc
or
addl
mov
cmp
ret
test
pop
clc
inc
inc
leave
lock
rolb
ljmp
test
or
push
sti
dec
loope
jnp
push
out
ret
and
test
or
mov
xchg
pop
mov
aaa
cld
aam
inc
fsts
idiv
adc
or
icebp
out
jecxz
repz
jle
pop
pop
shrb
gs
push
mov
pushf
decb
bsf
je
imul
jbe
stos
and
ss
xchg
in
pop
sbb
test
push
ja
pop
out
cli
scas
inc
push
pushf
das
leave
and
add
jmp
fsubrs
adc
dec
data16
push
jne
ffree
inc
aad
test
push
pop
and
movsl
iret
aad
lock
push
sub
cmp
adc
jge
pushf
inc
das
sub
test
mov
outsb
mov
sbb
sahf
scas
inc
ret
negl
sbb
stos
add
or
cmp
andl
xchg
dec
aaa
stos
dec
push
outsb
mov
in
hlt
addl
sub
das
inc
inc
push
adc
cs
cmp
xor
jmp
fsubrs
dec
pop
add
xchg
xchg
cvttps2pi
stos
rol
mull
pop
out
enter
mov
shrb
cmpsl
pop
or
xchg
jo
adc
sbb
cs
jp
loop
hlt
pop
out
int
dec
frstor
outsb
repnz
dec
push
sub
jno
in
pusha
fldt
inc
mov
mov
sub
xchg
cs
sbb
pop
ljmp
aaa
cs
add
or
cmp
xchg
jg
scas
cli
sarb
nop
mov
inc
in
icebp
fcmovbe
mov
jno
in
mov
clc
mov
pop
repnz
lea
insl
loope
sub
and
popa
ja
sub
mov
into
popa
cmp
loope
sub
jno
dec
cwtl
loope
rcl
dec
daa
inc
lods
test
fisubrs
add
xchg
lret
shll
mov
and
mov
sbb
movsb
mov
lcall
pop
sub
add
arpl
mov
es
out
loope
add
cli
mov
mov
std
ret
cmc
pop
xor
movsb
xchg
out
ret
mov
in
cmp
pop
mov
arpl
pop
out
mov
adc
inc
daa
xor
mov
mov
push
rcrl
sub
es
loopne
dec
int3
mov
gs
lods
test
movsl
cmpsb
push
fcmovne
scas
icebp
mov
sub
jmp
cmpsl
pop
pop
and
fidivrs
lock
stos
dec
sbb
shrl
movsl
xor
movsl
push
push
out
cmpsb
dec
sbb
fcoms
mov
mov
lock
inc
push
sbb
dec
push
mov
icebp
mov
jge
mov
adc
scas
aam
cmpsl
jle
xchg
clc
data16
xchg
pop
cmc
dec
xor
lds
mov
lds
sub
stos
mov
xchg
adc
mov
or
sub
mov
lods
mov
in
fbstp
push
sub
scas
in
jne
jne
in
popf
pop
and
andb
mov
enter
pusha
xor
aas
or
loope
negl
gs
aad
jb
jge
repnz
test
inc
in
enter
and
mov
cs
das
sub
mov
fwait
push
xchg
imul
loop
cld
dec
mov
dec
js
jns
mov
sahf
fcoms
push
sbb
adc
pop
sbb
loop
into
out
pop
subl
fdivrs
insl
mov
sbb
aas
rclb
cmp
ds
out
pop
rol
xchg
cmp
int3
pop
adc
mov
jecxz
clc
out
dec
shlb
daa
xor
add
mov
stos
or
mov
ljmp
push
adc
outsl
xor
std
jb
loope
sub
inc
adc
aas
xchg
stc
dec
inc
dec
xor
or
add
shr
jnp
mov
fcmovne
scas
mov
pop
sub
outsl
add
sub
push
stos
xchg
and
inc
mov
pop
mov
ja
pop
and
out
mov
push
sub
insb
dec
ret
mov
add
lcall
subb
and
out
mov
and
scas
adc
sbb
arpl
mov
pop
mov
into
mov
insl
sbb
mov
and
fsubrs
cmp
aam
mov
addr16
sbb
insl
mov
pop
dec
xchg
xchg
jmp
js
mov
gs
mov
iret
pop
mov
and
pop
adc
or
inc
adc
mov
cmp
les
test
pop
leave
repz
lock
cmp
mov
inc
xchg
jbe
fdivr
test
jl
leave
push
stos
jle
jnp
psllw
adc
push
rorl
std
cmp
or
sub
icebp
call
mov
and
inc
jp
pop
call
mov
outsl
or
repnz
insl
mov
or
xorl
rorb
xchg
les
mov
les
ljmp
push
jecxz
mov
add
xchg
rcr
pop
scas
lret
inc
loopne
ss
cltd
mov
and
insb
jns
xchg
jne
out
mov
xchg
mov
push
and
stos
and
repz
dec
adc
push
shlb
add
lock
scas
daa
jmp
ror
cmp
fildll
xchg
jmp
cmp
sbb
mov
sub
int
cmpsb
mov
jmp
or
int
adc
mov
pusha
pop
out
iret
shll
movsb
sbb
iret
adc
test
adc
push
xor
nop
xlat
xchg
mov
fisubrl
jp
mov
jae
mov
addb
sub
mov
lret
add
pop
stos
fs
aad
adc
adc
push
in
test
pop
fsubrl
loope
shll
adc
mov
les
rolb
and
and
push
jbe
mov
xchg
fldcw
jbe
jl
add
mov
aaa
add
sub
imul
insl
mov
aam
repnz
dec
pop
insb
pop
fisubrs
arpl
js
loop
lret
jno
aaa
scas
mov
imul
test
out
sub
stc
fistps
out
arpl
rcrl
jbe
jns
jo,pn
mov
fisubl
mov
lcall
sub
lret
push
lret
sub
or
push
push
cmp
pop
js
inc
clc
mov
icebp
js
xchg
adc
ss
mov
jmp
add
sub
jne
subl
and
xlat
dec
dec
test
dec
dec
lcall
push
add
cmp
cmp
lcall
sbb
mov
hlt
add
pushf
cli
scas
cltd
mov
loopne
fimuls
jne
jp
test
and
out
pop
or
push
push
push
add
adc
pop
scas
xchg
inc
rorb
add
jge
insl
and
imul
cmp
push
dec
lods
dec
dec
in
sub
enter
ss
stos
js
mov
dec
add
loop
int
rorb
cmpsb
xchg
or
pop
and
aas
adc
popf
mov
mov
cmpsb
jge
sbb
lods
or
and
mov
mov
xor
or
push
xor
imul
push
inc
lds
loopne
stc
pushf
mov
in
mov
sub
mov
add
mov
sbb
jp
cmp
loope
mov
or
lahf
mov
mov
das
nop
frstor
stos
mov
or
cmp
mov
push
xchg
test
arpl
cli
or
cs
fistl
mov
or
or
rcr
push
loopne
loope
adc
je
xor
scas
in
lds
push
jecxz
push
pop
imul
xchg
lds
jge
test
bound
mov
aas
rclb
test
cwtl
jp
sbb
and
ja
dec
sub
hlt
sub
stos
xor
nop
pop
popf
or
mov
cmpsb
inc
movsb
pop
enter
sub
cld
mov
lods
in
leave
fcoml
shrb
out
pop
dec
mov
add
nop
movsb
and
daa
mov
xor
ds
cmpsb
and
mov
lret
les
popl
psrad
daa
jno
or
mov
aaa
xor
xchg
pop
xlat
cmp
jns
add
xchg
data16
out
dec
cmp
andl
out
mov
and
and
cmp
or
dec
popa
clc
sbb
sahf
cmp
add
pushf
shlb
or
jl
and
sub
adc
pop
adc
int
pop
cmp
scas
gs
cli
pop
cmp
xor
xor
mov
push
insl
sarl
jae
loope
jmp
fidivrl
insl
aas
pop
add
sarb
flds
mov
lahf
stos
pop
int3
or
in
std
lock
push
cmp
xchg
dec
mov
call
fnsave
ret
pop
out
jge
sub
xor
inc
xchg
jb
inc
pop
mov
xchg
xor
cmp
bnd
jnp
xor
xor
mov
adc
pop
test
js
cmpsb
mov
inc
call
inc
inc
jmp
dec
test
and
or
inc
fstp
jns
out
sub
pop
fsubrl
cmc
push
bound
pop
jl
lea
or
dec
ljmp
ss
movb
test
adc
cld
xchg
out
xor
xor
imul
in
std
jmp
adc
jb
test
fcmovnu
dec
mov
lret
dec
sbb
out
xchg
lret
sub
mov
ret
int
mov
sbb
mov
pop
sbb
sbb
aad
leave
movsb
push
adc
mov
mov
fisttpll
and
adc
clc
xchg
push
insl
mov
test
mov
push
imulb
and
or
cmp
dec
insl
xlat
rol
inc
fiadds
pop
scas
nop
xchg
clc
jne
repnz
or
nop
adc
or
add
mov
packssdw
sbb
sub
mov
incb
imul
lret
mov
add
sub
es
and
mov
adc
aaa
pop
sub
fists
lea
push
sarb
lcall
xlat
xorb
in
jecxz
inc
dec
mov
mov
loop
imul
sar
dec
sbb
dec
pushf
ljmp
push
push
imul
adc
mov
stos
mov
nop
in
mov
iret
or
test
fidivs
lahf
pushf
je
adc
cld
out
jne
stos
loopne
pop
ljmp
lods
inc
iret
inc
push
or
fsubl
dec
sti
mov
sti
sbb
cltd
mov
insl
xchg
ret
xchg
jbe
mov
out
lcall
repz
shll
mov
cmpsb
xchg
sub
in
out
lds
cmp
es
xchg
jo
sub
mov
repnz
mov
add
sub
push
test
nop
cmp
je
jl
jbe
test
and
mov
push
imul
mov
or
cli
es
int3
dec
ret
mov
rcl
xlat
scas
pop
movsb
aad
into
cltd
pop
push
mov
jns
mov
pop
in
in
in
sbb
cs
jbe
sbb
adc
popa
dec
jmp
loop
pop
out
push
movsb
pop
jbe
scas
mov
inc
add
ret
lods
sbb
int
dec
mov
stos
fwait
or
test
xchg
cmpsl
mov
push
xor
cmp
xor
push
ja
arpl
or
shrl
pop
lock
jmp
imul
call
cmp
pop
lock
aam
sub
stos
jecxz
in
addr16
sbb
aad
xchg
sub
sbb
push
or
or
adc
call
cli
subb
sub
negl
push
test
fcoms
adc
imul
outsl
aam
in
add
or
xlat
add
outsl
loopne
adc
scas
xor
rolb
fs
cwtl
inc
sbb
jae
pop
sub
repz
mov
stos
dec
in
es
jns
push
popa
test
inc
shll
jb
pop
jno
or
sbb
in
inc
and
mov
sub
inc
inc
rol
push
mov
mov
dec
cmp
gs
lret
stc
cs
aaa
fstp
mov
sub
ret
sahf
hlt
push
rcrl
mov
test
mov
push
adc
fsubp
rcrb
mov
ljmp
outsl
lcall
std
adc
and
mov
cld
cli
cmp
sbbb
mov
jo
mov
push
sub
rclb
icebp
cltd
jo
and
sub
movsb
mov
sub
test
insl
stc
aas
mov
fisubrs
add
jle
jno
adc
in
fidivrl
mov
popl
out
cmp
cli
xchg
jg
jecxz
ss
mov
daa
mov
dec
js
les
jecxz
xor
xor
sbb
push
mov
nop
dec
pop
mov
dec
sbb
clc
sbbl
nop
or
push
js
hlt
dec
pop
mov
outsb
mov
add
stos
cmp
stc
adcl
enter
jne
dec
lods
jb
xchg
pop
sar
mov
mov
xchg
addr16
fsubrs
xchg
ljmp
aas
pop
shlb
cmpl
sub
sbbb
cli
and
btc
jnp
xor
fwait
in
or
add
mov
cmp
mov
add
jmp
out
loope
aas
mov
imul
cmpsb
popa
into
and
xor
add
jge
shl
pop
lret
mov
scas
pop
jecxz
jno
roll
push
pusha
cld
es
xchg
fwait
push
nop
dec
insb
xchg
icebp
mov
dec
pop
daa
jmp
mov
jbe
mov
pop
cmp
sti
cmp
stc
addr16
add
pop
hlt
dec
scas
repz
or
in
xor
subb
add
in
and
inc
jecxz
xor
cmp
dec
into
enter
push
mov
enter
or
sti
mov
and
sub
jmp
jne
jns
or
test
pop
lods
jb
mov
lcall
adc
dec
into
xorb
sbb
inc
das
out
and
insl
clc
pop
fcmovb
mov
mov
inc
jge
stos
and
jo
inc
ss
int
sbb
cmp
push
arpl
mov
cmp
xchg
add
sbb
push
pusha
or
push
sub
add
push
test
ja
mov
mov
ja
push
not
out
xchg
inc
pop
scas
push
adc
add
pop
popa
mov
pop
pop
scas
lahf
cld
outsb
push
sub
push
jmp
imul
inc
push
jp
mov
inc
add
sbb
mov
in
in
or
add
sbb
pop
mov
fs
call
jle
aas
push
xchg
leave
cs
sub
cli
push
stos
ljmp
push
nop
bound
cwtl
icebp
cli
push
push
fistpl
or
jnp
mov
insl
clc
cmpl
cwtl
ret
in
pushf
out
jg
sahf
pushf
pop
mov
das
aad
mov
jnp
jl
pop
mov
das
insb
jmp
cmp
sbb
pop
je
mov
insl
ror
je
jb
imul
pop
xchg
pop
lds
stos
out
ds
sub
imul
daa
notl
xor
les
adc
icebp
fcompl
aaa
imul
cld
les
dec
popa
sub
repnz
test
xor
fdiv
clc
sub
pop
sbb
mov
ficoml
add
xchg
fbld
pop
push
mov
xchg
sub
pop
ret
xchg
clc
inc
out
jns
pop
mov
call
jae
pop
ret
sub
lods
repz
mov
test
jo
js
xchg
addl
add
cwtl
or
in
gs
xor
cmpsl
sbb
notl
movsb
test
pop
testb
jo
popa
cmp
add
lret
add
sbb
cmpsb
mov
sti
add
mov
dec
and
test
fmulp
popa
jle
inc
daa
sti
jp
push
mov
aas
mov
mov
ss
aaa
mov
addb
jmp
xchg
xchg
in
adc
cli
ss
mov
or
aam
mull
mov
push
call
push
pop
aad
sbb
push
sbb
adc
mov
movsl
xchg
repz
addr16
mov
ja
push
ds
mov
push
sub
add
mov
call
cwtl
push
das
sbb
and
mov
or
ja
pop
imul
xstore-rng
cmpsl
xor
bound
inc
mov
mov
test
stc
dec
je
inc
push
cmp
add
out
fcoms
mov
lods
and
leave
adc
pop
pushf
fdivrl
loop
aaa
scas
mov
imul
repnz
push
fimuls
shrl
dec
pusha
cmc
ret
jmp
mov
clc
loop
insb
sti
fisttpll
or
jmp
adc
lahf
adc
jns
cmp
jns
mov
or
or
jmp
jge
and
daa
fists
lcall
xchg
pop
push
scas
or
mov
out
insb
sti
add
inc
xchg
or
cmpsl
sarb
inc
and
add
loopne
std
out
jg
cmp
push
insl
jge
aam
jecxz
ja
push
jae,pt
jl
pop
movsl
sti
add
xlat
lock
jbe
lds
insl
nop
mov
fsubrp
mov
mov
out
xor
cltd
or
xlat
sbb
negl
xor
into
inc
fstps
stc
mov
int3
cli
jle
mov
enter
int3
cmpsb
adc
sbb
jbe
int
xchg
lret
test
insb
leave
dec
sub
xchg
arpl
pop
mov
and
aad
mov
inc
arpl
loopne
hlt
enter
inc
scas
xor
adc
nop
jge
scas
inc
repnz
jbe
push
stos
push
sub
lea
sub
in
clc
fcoms
mov
bswap
jle
xor
out
aad
push
inc
xor
jno
iret
add
mov
mov
mov
out
push
ror
push
cltd
adc
dec
jb
mov
test
xor
or
mov
idivl
dec
cmp
jns
out
jno
push
int3
and
pop
sub
jo
cli
push
push
js
fsubrs
mov
pop
mov
add
inc
mov
pop
or
imul
xor
jmp
jp
pop
pop
dec
inc
xor
shrb
shll
adc
mov
ret
loop
jnp
daa
xchg
js
add
pop
popa
dec
rcr
fcomps
outsl
icebp
cmp
pop
ret
add
mov
daa
mov
pop
xchg
call
dec
cmp
push
out
push
push
pop
into
push
jb
clc
pop
lahf
mov
pop
scas
dec
fwait
dec
fwait
mov
aad
in
inc
mov
fsubrs
push
loop
dec
push
data16
ja
sub
pushf
inc
sbb
movsl
inc
sbb
clc
ljmp
loopne
imul
push
in
or
push
aam
daa
fwait
lods
aad
mov
mov
jns
cld
push
mov
sbb
das
aad
lds
sub
lret
fdivl
or
cmpsl
mov
adc
imulb
or
dec
mov
mov
mov
and
arpl
cmp
enter
push
mov
jmp
in
sbbl
mov
pop
imul
inc
jnp
arpl
push
and
xchg
repz
add
mov
push
xchg
pushf
xchg
cwtl
mov
imul
inc
push
cmp
sub
fdivrl
add
into
push
jbe
xchg
sub
lret
bound
sub
pop
xchg
sbb
ror
pop
lret
hlt
leave
imul
int
subl
inc
imulb
mov
sbb
mov
sub
in
and
shll
jns
xchg
xorl
mov
adc
pop
sbb
mov
jb
sub
iret
dec
lods
sbb
rorb
fsubs
jae
je
jnp
xchg
int3
enter
gs
cld
insl
pushf
add
movsl
add
insl
jno
mov
and
and
jno
stc
subb
je
leave
push
push
int
mov
inc
sub
xchg
push
push
add
jb
in
loopne
sbb
scas
mov
pop
dec
adc
xchg
cmp
jl
loope
mov
mov
or
fstps
xchg
out
leave
into
xor
push
mov
mov
sahf
mov
xor
mov
leave
or
xor
fucom
lret
push
xchg
fidivrl
insb
out
fidivs
movsb
mov
push
add
adc
lret
pop
ds
idivb
lea
lahf
xor
repnz
adc
fisubrl
insl
outsl
inc
in
cmp
cltd
xlat
fwait
push
stc
add
or
push
pop
push
lods
iret
aad
test
add
and
data16
jle
cwtl
es
insl
mov
mov
andl
sbb
xor
sbb
inc
mov
je
and
movsb
scas
mov
mov
sbb
xchg
mov
jne
jle
inc
add
les
notl
sbb
mov
push
mov
and
adc
mov
in
dec
add
push
es
imul
insb
call
cmp
sbbb
push
add
xor
movsl
pop
pop
icebp
icebp
imul
xor
xchg
jmp
pop
repz
cmpb
mov
jae
aas
fildll
adc
cmp
out
sub
inc
sbb
in
scas
inc
xchg
mov
dec
push
cmp
jb
cltd
or
cwtl
and
and
scas
aaa
sbb
fs
loope
mov
inc
cmp
aam
xlat
mov
loope
mov
popf
in
mov
stos
jg
jle
cld
aaa
mov
mov
sbbl
popa
xchg
inc
outsl
adc
pop
or
lea
enter
in
adc
and
or
scas
call
mov
sbb
push
iret
call
mov
xor
add
dec
nop
and
jo
movsl
pop
xchg
and
insl
xchg
push
mov
push
dec
sti
daa
mov
cmp
xchg
fmul
push
xchg
or
jno
cmp
out
cmpsl
push
hlt
push
sbb
jge
pusha
mov
jmp
cli
xchg
pusha
mov
mov
int3
or
arpl
jne
sbb
sub
dec
movsl
test
or
bound
repz
mov
adc
mov
mov
jb
shlb
xchg
mov
pushf
xlat
scas
les
mov
sbb
jge
pop
xchg
ja
pushf
xchg
xor
mov
and
push
cmc
and
cmp
inc
and
and
data16
mov
sahf
fstl
sbb
movsb
push
outsb
inc
shll
push
loop
or
mov
mov
adc
ret
xchg
test
mov
nop
lret
sbb
fsubrs
pop
loop
mov
add
adc
push
push
adc
jmp
dec
inc
sbb
pop
idivl
in
imul
cmp
lock
cmc
adcl
fimull
xchg
pop
and
jno
push
fildll
repnz
cmp
fs
xorb
int
stos
into
mov
xlat
icebp
sub
out
roll
pop
lds
jb
iret
bound
pop
push
mov
cmc
movsl
xlat
mov
repnz
dec
dec
sub
xlat
fnstsw
sbb
add
lret
test
enter
xor
mov
test
lret
testb
xchg
cmp
rcrb
orl
imul
jge,pn
icebp
repz
jb
sub
push
mov
or
xchg
mov
arpl
lods
bound
push
sbb
pusha
mov
cmp
mov
leave
dec
pushf
out
pop
fdivrl
fsubl
ljmp
mov
out
mov
fnsave
dec
mov
push
or
xchg
jae
xchg
pop
inc
mov
pop
out
adcl
dec
push
dec
fistpl
sarb
andl
movsl
dec
mov
cli
mov
cwtl
icebp
mov
adcl
popf
mov
mov
pop
sbb
xor
mov
jp
lret
xor
out
xchg
push
pop
shlb
cmc
inc
scas
daa
cmp
jne
mov
push
cwtl
jle
lret
out
out
jo
and
xchg
mov
iret
cmpsb
mov
mov
xor
inc
pop
test
push
loope
mov
pushf
lahf
test
cs
outsl
imul
test
pop
jmp
out
mov
cmovge
popa
sbb
ljmp
add
add
hlt
add
daa
push
pusha
sub
or
je
xchg
imul
push
jbe
mov
cmp
sahf
out
loop
outsl
mov
mov
inc
mov
cmpsl
shlb
repz
cltd
sti
int
jle
sbb
addr16
mov
rorl
clc
notl
add
mov
and
push
or
xchg
or
in
fisttpl
jo
mov
imul
or
sub
xchg
mov
incl
dec
call
loop
push
mov
mov
pusha
movsl
fcomps
aas
inc
iret
cmpsl
jl
int
inc
or
adc
dec
stos
push
dec
aaa
add
pop
jnp
push
aaa
mov
cmpsb
loop
push
mov
push
movsl
inc
adc
movsb
js
addr16
inc
shl
repz
lods
test
dec
xchg
das
aad
inc
push
inc
fcomps
sub
fwait
xor
jae
add
dec
pop
and
mov
cmpsb
fsub
mov
cmp
sbb
cmp
dec
xorl
lret
lods
add
push
fnstenv
call
and
sub
scas
addr16
xlat
sub
sbb
inc
ds
mov
inc
roll
outsl
ss
sbb
ja
sbb
lcall
xor
into
lds
dec
stos
psadbw
push
lret
pushf
insl
roll
in
stos
sahf
pop
and
aad
adc
mov
adc
hlt
cmp
int
dec
stos
dec
ds
mov
adc
push
push
repnz
incb
adc
sbb
inc
fadds
mov
jo
cltd
add
pop
call
icebp
xchg
mov
lret
clc
pop
or
or
std
mov
pop
adc
push
in
add
in
in
pop
je
jecxz
dec
cwtl
popf
push
ja,pt
testl
push
stos
sarb
jb
mov
pop
cmpsb
cmpsb
sbb
push
out
and
bound
push
mov
pop
test
cs
dec
stos
shl
mov
sbb
mov
repz
mov
icebp
sbb
movsb
rorl
adc
cltd
mov
xchg
lods
dec
or
add
jp
cmpsl
jo
push
push
fldcw
mov
out
aam
mov
pushl
fcoml
pop
call
popa
pop
mov
adc
jne
mov
push
xchg
cs
fmuls
popf
xor
or
xor
or
imul
lahf
imul
sub
mov
ja
and
jp
sbb
xor
add
mov
cmp
cmp
jg
push
xchg
add
repz
icebp
lods
inc
fadd
sub
je
test
and
out
faddp
fists
jno
testl
xchg
push
arpl
sbb
insb
mov
pop
out
add
mov
cmpsl
dec
fisttps
call
xor
stos
in
test
push
xor
add
mov
add
inc
xchg
pop
sbb
les
or
or
test
ja
cwtl
inc
das
dec
incb
sahf
sbb
int3
pop
scas
dec
pushf
push
out
adc
outsb
xchg
sbb
stos
add
adc
scas
cmp
movsl
les
out
in
or
xor
jnp
mov
mov
lea
mov
xor
dec
inc
andb
jl
mov
out
out
into
sub
popa
and
jo
mov
pop
cmp
push
sar
and
or
mov
push
daa
xchg
ja
outsl
xchg
stos
or
cmpsb
push
mov
sbb
pop
adc
and
add
add
repz
fwait
jne
or
pop
push
test
ret
aam
xor
movsl
add
lret
mov
icebp
fbld
push
imul
jle
repnz
loope
lcall
jge
jo
jmp
into
cwtl
mov
insl
ret
jmp
mov
lcall
pop
arpl
sbb
scas
add
xor
idivb
fdivl
loop
xor
sarb
kandnb
repnz
xchg
adc
xchg
xchg
sbb
dec
dec
sub
push
testb
pusha
dec
mov
lcall
test
cmpsb
pop
aam
dec
mov
or
clc
lcall
