sbb
add
mov
xchg
fdivrl
mov
stc
inc
test
andl
lds
xchg
add
sub
and
jg
ret
inc
ficompl
loope
mov
xor
les
push
jge
data16
int3
lock
xchg
pop
je
sbb
push
pusha
int
sti
movsb
fisubl
adc
mov
mov
mov
fisttps
lds
loopne
jbe
scas
lea
fnsave
mov
jb
push
mov
jno
sub
pop
sub
das
xchg
aas
int3
cwtl
das
outsl
inc
jmp
jns
xchg
or
pop
inc
fsubrs
lret
inc
flds
add
loope
inc
mov
pusha
imul
loopne
mov
lret
add
cmpsl
dec
aad
jmp
int3
mulb
sbb
xorb
mov
mov
orl
test
imul
jne
test
mov
lret
gs
push
nop
test
in
in
clc
mulb
or
fwait
dec
mov
xor
lahf
mov
sbb
xlat
repnz
jns
fwait
jo
out
pop
testb
call
aam
xchg
or
mov
push
cwtl
movsb
repz
pop
and
pop
mov
int3
xor
fnstenv
ljmp
inc
repz
int
jmp
int
mov
pop
bound
aam
imul
or
mov
icebp
out
pop
in
popa
add
cmpsl
or
cmp
lods
adc
dec
test
fistpll
call
mov
jnp
xor
stos
test
cwtl
cli
mov
jb
lcall
sti
inc
pop
cmc
icebp
add
lcall
adc
mov
repz
in
inc
rol
fnstcw
in
repnz
movsl
and
or
mov
push
jl
stos
test
push
roll
push
loopne
into
mov
cmp
lock
jo
fsubrl
push
out
mov
cmp
xor
xor
cwtl
aas
jg
mov
mov
out
or
fnstcw
cwtl
mov
adc
test
mov
pop
lret
fwait
mov
or
cmp
test
into
insl
clc
and
adc
fsubrl
sub
sbb
fwait
xchg
sbb
int3
movsb
sbb
mov
xor
cmpsb
sub
sub
xchg
push
inc
aas
sbbb
lock
mov
inc
sbb
push
leave
cmp
xor
mov
js
mov
je
xchg
cmp
push
sbb
pshufw
mov
sub
adc
lret
je
xchg
pop
add
daa
mov
stos
pop
push
mov
push
mov
movsl
push
or
cwtl
xor
incl
jg
jae
je
es
or
nop
dec
mov
cld
mov
dec
adc
aam
repz
addl
stos
xor
push
or
push
dec
je
dec
fldcw
cwtl
dec
cld
rcrb
fwait
inc
cmp
incl
add
or
into
sarl
mov
insl
mov
bnd
cmc
dec
outsb
loop
xchg
push
inc
and
mov
out
adc
mov
xor
enter
or
jg
push
xchg
test
fisttpl
out
mov
mov
or
pop
cmp
mov
jge
dec
xlat
adc
pop
sbb
sbb
aaa
loopne
push
xchg
cmpsl
lret
fnstsw
mov
cld
cmp
mov
imul
mov
inc
cmpsl
xchg
fsubp
inc
mov
mov
sbb
xor
mov
mov
jae
call
cmpsb
loop
inc
inc
and
add
mov
cmp
or
push
andb
imul
int
dec
pop
or
popa
cs
adc
dec
mov
enter
loop
popa
xor
jg
test
dec
dec
xchg
inc
sub
int3
ret
cmpsl
inc
adc
lock
adc
fcmovb
out
dec
cmp
andb
or
repz
and
sbb
inc
or
jp
inc
pusha
push
xchg
rorl
xor
and
xor
imul
in
mov
test
mov
cli
in
imul
push
sub
aas
test
and
shlb
pusha
subb
testl
or
mov
jmp
jecxz
loope
jae
xchg
mov
in
ret
insl
adc
fdivrl
push
loopne
dec
xchg
sub
ds
or
frstor
popf
sbb
fs
mov
mov
jge
add
faddp
jmp
test
bound
stc
pop
sbb
ja
jmp
xchg
test
xchg
push
orb
xchg
enter
and
arpl
mov
out
jno
adc
xor
sbb
hlt
mov
dec
cmp
ja
xor
sub
into
imul
cmp
xor
jbe
or
add
insl
xchg
xchg
in
mov
inc
push
or
push
xor
sbb
and
inc
outsl
xor
das
ret
dec
bswap
mov
jno
push
cmpsl
xchg
xlat
hlt
popf
int3
int
jno
lahf
pop
push
repz
mov
lea
add
loopne
fbld
jno
aad
leave
jmp
inc
cwtl
xor
fldcw
or
fistps
fldcw
mov
lret
xor
pop
jmp
push
push
and
pop
pushf
aaa
cltd
pop
pop
mov
push
js
pop
lods
int
filds
sub
jmp
dec
jg
adc
jge
dec
subb
mov
dec
sub
and
mov
scas
testl
ret
test
sbb
or
scas
jno
ja
jno
sbb
insb
sbb
das
stos
xor
push
or
ja
push
sub
cld
dec
pop
cmp
push
insb
push
rclb
jb
pop
repz
push
or
cmp
jge
ljmp
inc
inc
bound
std
adcb
or
dec
stc
cmpsl
outsb
or
sbb
mov
pop
mov
mov
enter
int
fildll
and
cmpsb
push
pop
stos
xchg
sbbl
jbe
subl
lahf
movb
icebp
jg
stos
stos
and
inc
xor
cmp
mov
sbb
scas
push
ja
out
push
sbb
mov
sbb
xchg
lcall
fistpll
fsts
int
xchg
jne
jge
stos
push
xorb
add
sub
or
mov
ss
cmp
mov
lret
lret
xchg
push
xchg
cli
fistpl
sub
push
out
leave
xchg
cmpsl
call
cmpsb
fistpll
or
or
cmp
jge
scas
xchg
aam
lcall
lods
jno
fdivrs
bound
xor
mov
inc
shlb
cli
push
pop
and
fsubl
adc
sub
mov
xchg
xorb
mov
lods
and
pop
and
or
fsts
cld
sub
sahf
xor
xchg
hlt
mov
lcall
ljmp
popa
cmp
jbe
jmp
lods
push
in
xchg
jl
add
mov
xchg
das
test
or
xchg
addr16
sub
fmuls
pop
ljmp
into
clc
mov
lea
push
and
mov
adc
shll
repnz
push
js
mov
stos
lea
test
jl
mov
xchg
daa
int
add
adcb
call
mov
fninit
repz
xlat
mov
xchg
inc
out
cmp
jle
es
subb
aam
pusha
imul
push
push
sub
cs
out
call
or
inc
add
xor
sub
pop
sbb
out
sbb
gs
stos
jmp
or
fstl
enter
pop
rep
jmp
mov
clc
cld
or
or
cmc
cs
inc
push
sub
cmp
jp
sbb
cli
loope
popf
insb
fisubrl
imul
cltd
push
or
push
xchg
repnz
pushf
push
or
outsl
add
dec
out
xor
pop
sbb
xchg
xchg
dec
mov
adc
inc
outsl
xor
out
aaa
adc
sarl
sbb
sub
test
data16
adc
or
clc
pop
and
stc
xor
xor
scas
int3
fistps
mov
xchg
sub
inc
lds
cwtl
mov
xchg
dec
inc
orl
iret
inc
push
aad
ja
push
out
pop
jmp
add
call
mov
xchg
cmp
cmp
mov
sahf
ror
aas
or
xlat
pop
push
aam
mov
pop
sbb
mov
mov
loopne
movsl
repnz
pop
ret
les
xor
inc
sbb
leave
in
scas
mov
xor
ret
mov
mov
pushf
fldenv
jle
mov
xlat
ret
popa
xor
cmp
lods
iret
bound
jo
push
dec
gs
push
in
jb
sub
dec
xor
xchg
xchg
je
mov
lahf
cwtl
push
pushf
das
adc
notb
fisubrs
imul
pop
jnp
je
jle
aad
arpl
les
fs
aam
add
decl
movsb
dec
setbe
in
jo
mov
ds
xchg
out
and
jb
cmp
sti
xchg
dec
outsb
xchg
inc
loopne
stos
stc
enter
xor
pop
xor
mov
fwait
arpl
inc
adc
lds
je
push
fisubrs
outsl
into
mov
cmc
dec
in
movsl
mov
pushl
jne
push
enter
or
sbb
sub
jmp
pop
xor
rcll
jns
mov
lret
sub
mov
cmp
rcll
enter
ror
sub
bnd
sti
cmc
cld
ljmp
test
jo
movsb
movsl
inc
or
jo
xlat
xor
ja
mov
out
js
or
arpl
fadd
cmp
in
sub
dec
das
ret
sti
andb
scas
add
mov
scas
rclb
imul
loop
inc
mov
lahf
mov
push
xor
mov
inc
sub
cmpsl
out
adc
add
adcl
add
repnz
lea
mov
xchg
inc
mov
sbb
scas
jmp
xchg
jne
mov
add
or
mov
call
jle
cmpsb
not
testl
cld
adc
mov
rolb
js
or
jge
cs
push
pop
stos
push
lea
mov
cli
jmp
cltd
out
mov
or
pop
adc
sarl
xor
cmp
push
mov
enter
and
adc
cmp
lea
mov
sub
inc
fldl
jns
push
das
roll
mov
pop
cmp
fldt
cwtl
ja
pop
movsb
fdivrs
dec
cmpsl
push
pop
movsl
sahf
outsl
cmp
imul
cwtl
xor
in
lcall
mov
jl
loopne
mov
or
mov
pop
lods
clc
jne
mov
push
pop
imul
ds
les
pop
or
mov
je
loop
jge
inc
mov
or
adc
dec
add
lahf
jp
incb
mov
push
dec
sub
sti
and
mov
js
fwait
mov
mov
loope
call
insl
scas
sub
push
add
sbb
notb
xor
popa
lea
lcall
jae
push
outsl
inc
out
sbb
out
jo
lret
adc
or
fstps
xor
fmuls
jg
iret
jns,pt
dec
icebp
movsl
adc
scas
mov
adcl
test
xchg
push
xchg
and
push
jle
adc
xor
repnz
scas
mov
inc
test
outsb
fdivl
out
push
xlat
dec
add
push
inc
ret
pop
or
dec
fistpll
adc
mov
pop
mov
inc
movsl
rorl
std
repnz
iret
ror
and
pop
jmp
insl
xlat
out
inc
dec
mov
popf
push
cli
push
stos
pop
clc
adc
hlt
scas
cmp
loope
scas
aad
pop
in
aam
dec
or
loope
in
mov
inc
push
mov
pop
daa
sub
clc
cmp
cs
sub
jne
hlt
mov
lock
in
test
add
shrb
fnstsw
inc
xor
pop
loopne
fs
pop
add
mov
fstps
pop
xchg
nop
mov
outsb
fisttpl
pushf
sbb
inc
scas
xorb
inc
jle
test
out
fcompl
out
addl
cli
add
inc
mov
sub
and
ret
inc
hlt
cmc
sbb
xor
pop
stc
jne
loope
imul
dec
pop
lcall
pop
pop
dec
push
test
dec
setl
lret
mov
add
mov
mov
cmp
mov
jae
mov
adcl
orl
addl
fsubs
mov
movsl
mov
leave
or
jle
and
pop
cmpsl
jno
mov
pop
jnp
aas
sub
cmp
and
dec
insl
cmp
and
mov
and
cli
add
cmp
jns
sbb
fs
cltd
sbb
xchg
push
fs
pop
fs
dec
loopne
mov
mov
outsb
ret
iret
inc
mov
xchg
out
cld
cwtl
xchg
sub
adc
xorb
push
subl
ret
xchg
fildll
xor
loopne
xchg
imul
insl
loopne
sarl
flds
add
inc
adc
push
push
or
ret
test
push
push
mov
loop
repz
push
fadd
stos
add
xor
jne
shrl
sbb
data16
lock
adcb
adc
cmp
dec
in
cwtl
nop/reserved
add
nop
out
lret
rcll
aaa
subb
mov
test
stos
adc
mov
filds
mov
xor
dec
int
mov
lds
pop
adc
mov
adc
and
sbb
adc
in
jmp
imul
popa
inc
aad
push
xor
mov
int
adc
icebp
sub
loopne
pop
mov
iret
pop
inc
loopne
addr16
or
addr16
cmp
sarl
imul
xchg
pop
xchg
dec
fildll
sbb
cltd
or
sbb
ss
cmp
addr16
mov
inc
xor
cmp
sbb
test
mulb
loope
push
fs
in
sbb
fwait
lahf
sub
test
pop
insl
cltd
aam
mov
add
adc
dec
pop
cwtl
cmpsb
mov
sbb
stc
sub
xor
xchg
cmc
xor
sbb
pop
clc
cmp
sub
push
rclb
fucomi
daa
dec
fwait
jae
mul
add
lods
mov
mov
or
mov
push
test
andl
pushf
mov
std
scas
ljmp
les
and
data16
or
int3
jbe
sub
pop
stos
jb
addl
jno
cld
inc
cwtl
mov
dec
int
sbb
cld
mov
jnp
add
out
rcr
lods
adc
or
arpl
jmp
inc
push
mov
in
mov
loop
push
adc
fiaddl
xor
sahf
adc
sub
fadds
fwait
movsl
add
es
mov
jo
mov
out
xchg
cltd
aas
pop
arpl
rorb
hlt
js
decl
imul
stos
mov
xchg
xchg
mov
jge
xlat
adcl
push
ss
rcl
out
sub
xor
cld
sahf
cmpsl
cli
adc
xor
add
fldt
add
mov
test
imul
dec
mov
js
push
mov
sub
add
add
xor
mov
cli
lret
adc
mov
fwait
add
bound
push
inc
sub
fs
daa
pop
lea
ljmp
lods
loopne
fdivr
or
cmp
jmp
das
cld
bound
lahf
out
cmp
xchg
mov
sub
adcl
aam
sub
push
jb
icebp
dec
addr16
test
ds
aam
inc
bound
add
pop
mov
dec
scas
stos
and
mov
push
mov
aam
push
xchg
aad
pop
sbb
xchg
into
adc
push
push
test
mov
jp
addl
cmp
push
test
push
out
sbb
push
jmp
dec
add
rcrl
sub
mov
loop
cwtl
cld
xchg
jg
add
das
fidivs
mov
pop
or
push
fsubl
mov
sbbl
ja
gs
int3
repz
jno
push
or
jmp
nop
popf
push
pop
sub
rorb
push
shll
push
and
jl
push
mov
and
arpl
jmp
arpl
imul
pop
jmp
pop
or
jecxz
dec
and
ror
adc
adc
xchg
pop
popf
cld
repz
sub
xor
lcall
or
jg
mov
iret
pop
jl
mov
inc
fcoml
scas
push
stos
nop
xchg
mov
xchg
mov
das
push
add
out
jbe
dec
test
mov
cmpsl
out
icebp
dec
ja
xchg
push
decb
dec
sahf
inc
aaa
pusha
test
inc
adc
adc
and
mov
icebp
repnz
mov
movsb
inc
in
insb
aas
inc
out
pop
ja
add
and
dec
push
jl
pop
push
sbb
jnp
mov
inc
ljmp
sbb
mov
dec
dec
jp
or
sti
imulb
dec
inc
xchg
ljmp
and
or
faddp
xchg
loope
xor
in
mov
fucomp
mov
loopne
dec
lret
add
nop
and
aam
xchg
xchg
rcll
sub
bound
fbstp
sbbl
out
ljmp
int
add
ss
imulb
bound
xchg
push
adc
dec
jge
sub
popl
sub
mov
dec
dec
out
jbe
sar
mov
ja
sub
sub
push
rolb
andb
cld
and
mov
sbb
in
loopne
inc
popa
stos
adc
loopne
clc
shr
mov
add
ret
pop
and
movsb
push
add
enter
cmp
push
imul
mov
out
mov
cmpsl
movsl
cmp
cmpsb
sub
cwtl
scas
paddq
sbb
jp
je
out
lret
or
xor
sbb
lret
mov
cmp
les
inc
adcb
nop
enter
data16
daa
out
cmp
xchg
mov
enter
shrb
inc
dec
jle
push
dec
out
leave
icebp
jp
icebp
sub
setl
out
shlb
leave
test
scas
push
and
clc
into
adc
ja
xor
pop
test
push
lcall
sahf
cmp
jmp
in
sub
arpl
repnz
frstor
pop
or
insl
lret
repz
es
sub
arpl
sub
adc
sub
add
pop
loopne
sbb
inc
jg
mov
xchg
dec
outsb
push
add
inc
rcrb
mov
or
das
adc
into
imul
inc
popa
imul
repnz
insb
jecxz
xor
in
ja
xor
or
xor
inc
mov
test
jge
sbb
push
sub
sub
test
fwait
stos
sub
jne
aas
or
inc
push
jmp
pop
or
and
cmc
aam
movsl
mov
xchg
movsb
xchg
mov
mov
ret
test
xchg
xchg
test
push
adc
ss
pop
push
aad
inc
mov
inc
jmp
ja
push
lret
je
dec
dec
xlat
fwait
divb
push
mov
dec
repz
fsubr
addr16
pop
push
addr16
jae
testb
dec
jle
xchg
jle
xchg
fwait
pop
inc
scas
xlat
test
das
rcl
sahf
pop
stos
iret
pop
adc
push
test
inc
pop
push
add
dec
mov
mov
pop
push
loopne
dec
cltd
dec
aam
pop
enter
jmp
ss
enter
mov
ret
stos
ljmp
and
cli
mov
inc
test
jb
sub
in
fldt
or
inc
jle
push
in
fldenv
data16
push
cmp
mov
push
add
loop
jl
mov
rcrl
ja
sub
xor
jb
jl
in
js
jge
jmp
lahf
sub
push
cmp
mov
dec
aaa
mov
pop
out
shr
daa
cltd
fists
mov
sbb
cmp
inc
out
cmpsb
imul
out
and
mov
cli
lock
out
jge
int
jmp
dec
mov
hlt
xor
ficompl
adc
xor
ja
loopne
xchg
or
call
rolb
daa
pop
jno
pushf
fstpt
sahf
mov
cmpsl
fstps
push
rol
adc
sbb
in
xor
dec
pushf
mov
arpl
xor
jae
fwait
sub
xchg
andb
ss
mov
jae
rclb
mov
add
in
movsb
cltd
out
nopl
fsubs
movsb
test
and
pushf
adc
stos
mov
add
mov
loop
pop
pop
push
daa
inc
mov
minps
sbb
xchg
xor
mov
aas
in
mov
sub
jl
addl
add
imul
nop
repz
cltd
cld
test
cmp
jp
push
push
rcr
jo
pop
pop
xor
cmp
not
stos
add
mov
xor
fwait
out
fiaddl
sahf
loopne
add
shll
jl
and
mov
xor
push
lcall
or
jmp
sarb
jle
je
mov
aad
sub
shll
in
mov
dec
cs
dec
pop
mov
bts
lea
fs
cmp
mov
mov
test
clc
out
loopne
mov
iret
mov
jno
jnp
cmp
xor
shl
adc
adc
sub
rcrl
mov
pushf
sub
call
loopne
cmp
scas
inc
leave
int
in
outsb
clc
adc
mov
xchg
enter
ja
in
mov
adc
mov
mov
pop
and
xchg
or
pop
push
mov
lret
mov
mov
arpl
lahf
push
pusha
cwtl
or
sti
push
stos
test
pop
cwtl
fsubrl
add
add
xchg
fmuls
push
dec
mov
lock
mov
dec
cmp
jmp
data16
stos
jg
mov
jge
xorb
cmc
fisttps
sub
call
movsb
test
test
push
cmp
notl
cmp
fnsave
cmp
mov
jns
jle
jno
imul
push
std
jge
lret
sub
fwait
aad
rolb
pushf
movsb
icebp
xor
lea
movsb
out
iret
push
xor
inc
scas
lahf
xchg
sbb
xchg
jb
jge
sub
adcl
push
mov
sbb
scas
sti
das
sub
push
mov
ret
ljmp
mull
fcompl
loope
out
rcrb
das
or
sbb
jg
fsubl
cmp
scas
xor
or
leave
lock
lret
ret
pop
pop
and
lahf
jbe
xor
adc
pop
shll
andl
in
mov
cltd
cmc
rorb
cld
out
mov
hlt
leave
jnp
jle
or
xchg
fst
clc
shll
repnz
jne
std
sub
jae
lds
push
cmp
in
nop
popa
out
xchg
or
xor
jnp
xchg
fdivrp
adc
mov
mov
lods
dec
gs
lcall
dec
addr16
inc
arpl
jnp
push
mulb
xchg
sub
fcom
rcll
std
std
orl
pushf
sbb
addr16
cmpsb
fbld
imul
xchg
pop
bound
loope
out
mov
push
jecxz
xor
pop
sbb
mov
pushf
imul
cmp
aam
xlat
xor
pop
ds
sub
xor
jl
rorb
lds
inc
pop
dec
ss
jmp
inc
xchg
in
loopne
cmp
or
cs
and
fistps
adc
sub
in
pop
sarb
mov
jle
or
mov
std
ror
and
repz
jno
pusha
xlat
movsl
mov
cmp
ss
push
lds
or
push
test
pop
clc
mov
ds
mov
std
pop
dec
rcr
fstpl
lock
push
stos
fdivrl
out
jno
fcomps
loop
imulb
xchg
adc
mov
rclb
out
pusha
adc
xor
cmpl
hlt
add
gs
leave
jg
sbb
out
aaa
and
dec
imul
add
jg
jne
fcomps
cmp
inc
in
mov
jp
xor
ja
sub
jb
enter
insl
jmp
dec
lcall
mov
cmp
xchg
loop
xor
xchg
or
int3
push
cmp
in
int
out
bound
jl
push
mov
xlat
test
inc
push
pusha
jno
mov
int
mov
loop
loop
and
mov
sbbl
dec
jle
stos
iret
inc
leave
insb
mov
in
rorl
mov
sar
adc
lret
add
mov
xchg
xchg
mov
pop
test
lods
mov
loope
movsb
faddl
into
mov
mov
int
inc
xchg
sbb
inc
mov
std
std
mov
mov
orb
int3
cmpsb
jl
jmp
mov
cld
xchg
sub
hlt
cmpsb
jmp
or
popa
loope
push
mov
cmp
fistpl
push
mov
repz
mov
aad
je
cmp
mov
pop
iret
push
shrb
sbb
mov
out
shrb
lods
fidivl
xchg
daa
pop
sahf
fbld
add
imul
inc
inc
inc
dec
into
sahf
push
adc
negw
inc
pusha
mov
sub
stos
and
sti
push
and
test
enter
enter
out
adc
data16
push
aad
repz
mov
and
inc
fisttpll
sub
mov
hlt
mov
cltd
in
lea
hlt
ret
jecxz
dec
cmp
push
and
mov
push
sub
fidivrs
fs
xor
jb
jb
jge
and
ret
or
sub
js
xor
es
mov
and
jo
rorl
sti
cli
pop
mov
push
pop
add
sbb
sbb
stc
mov
ror
sub
xor
mov
sbb
out
rcrl
jg
popa
pusha
pop
lcall
fdivl
pop
xor
je
aaa
lret
outsl
push
into
imul
adcl
scas
test
negb
add
xor
ret
aad
cmp
xor
adc
in
push
cltd
pop
hlt
push
out
clc
ret
mov
mov
arpl
lcall
ficompl
int3
xchg
cmp
jge
lret
loopne
push
int3
xchg
aad
cmp
repz
xchg
push
mov
es
sbb
arpl
mov
addr16
jg
push
das
movsb
and
je
mov
mov
mov
mov
ret
pop
sub
fnstsw
dec
mov
cmp
dec
cwtl
cmpsl
xchg
xor
stos
sub
rcrb
fists
cmpsb
or
jno
repz
imul
mov
sbb
sbb
push
popl
iret
push
xchg
mov
out
mov
xor
fisttpl
iret
add
sbb
ljmp
ljmp
cmpsl
std
cltd
aaa
jns
xchg
and
cmp
scas
jb
jmp
sub
pop
std
xor
ret
cmp
daa
in
mov
inc
pop
cli
mov
dec
cmp
test
push
sbb
adc
mov
adc
mov
adc
mov
pop
push
mov
cmp
enter
mov
sbbl
mov
lcall
cmp
mov
jno
pop
mov
jle
cmpsl
fistps
sub
movsl
adc
mov
mov
pop
int3
popf
add
xchg
out
jb
shrb
add
jmp
adc
test
ror
and
cs
test
or
cli
lret
mov
cmc
icebp
jge
es
into
fs
fldl
or
xchg
ror
push
fwait
mov
fs
inc
es
aaa
push
mov
mov
xor
pushf
xchg
sub
pop
jno
xor
push
js
imul
dec
lock
lcall
xchg
ds
push
stos
and
sbb
mov
std
jae
xchg
in
push
mov
fmul
aam
jge
mov
xor
ja
scas
push
fwait
jecxz
or
or
add
xchg
cli
adc
call
add
dec
enter
shl
mov
clc
mov
test
pop
into
xchg
jecxz
scas
mov
push
pop
cmpsl
sub
sub
mov
push
xchg
add
lea
jge
stos
ds
rorl
or
es
cmp
mov
push
jns
cli
mov
xchg
shl
fisubl
xchg
sbb
sbb
add
jo
dec
xor
pop
aas
add
imul
test
mov
cmp
push
fwait
inc
test
dec
shrb
lock
repz
fldl
lea
inc
addr16
sbb
out
int
out
aaa
push
inc
mov
inc
int3
adc
cs
pushf
mov
xchg
fisttpl
cmp
inc
aas
cmp
insb
int
mov
inc
movsl
nop
and
xor
cmp
xchg
sbb
xor
int
out
inc
pop
out
and
inc
mov
or
das
negb
aad
lds
adc
push
add
dec
pop
xor
xorb
push
xor
idivl
sub
daa
ja
sub
mov
pop
insb
adc
inc
aas
loop
mov
ljmp
loope
adc
out
mov
mov
fsubrs
mov
mov
aas
mov
fidivrs
inc
ljmp
cmp
jle
mov
lods
push
das
stos
push
and
cmp
test
outsb
out
add
mov
inc
push
add
and
pop
push
cs
je
adc
clc
cmpsb
ljmp
js
mov
pop
fcompl
das
mov
lea
inc
stos
sub
stos
or
enter
inc
jbe
push
icebp
mulb
jp
stos
insb
add
xchg
xor
int3
test
adc
sbb
lods
mov
test
push
add
es
shll
add
clc
sub
frstor
mov
pop
mov
xor
inc
add
or
rorl
mov
jp
push
test
mov
ret
mov
enter
aad
inc
sbb
and
adcl
mov
stos
cmp
aad
add
mov
and
push
cmp
fcoms
mov
or
pop
jae
fistpl
cmp
test
pop
mov
loopne
repz
xor
aaa
push
mov
jne
aam
ljmp
mov
cli
shl
lds
mov
icebp
les
inc
lcall
fcoms
mov
enter
jmp
xor
inc
pop
push
mov
push
repnz
call
push
inc
cmp
sbbb
or
pop
xchg
and
dec
loopne
aaa
ret
movsl
inc
jmp
fnop
jge
mov
sbb
or
xchg
jmp
addr16
stos
push
popf
retw
and
shrb
lods
cmp
jle
inc
test
lret
sbb
dec
add
add
jne
adc
mov
idivb
xor
xor
mov
rcrb
popf
ffree
popa
in
dec
inc
in
push
and
ficoml
loop
out
and
sbb
add
ja
mov
ficoml
inc
jg
std
cmc
xorb
out
add
push
in
push
hlt
add
dec
cs
mov
lods
and
int
dec
pop
inc
emms
mov
aas
loop
jo
push
pusha
xchg
jns
and
mov
rcrl
test
jmp
mov
stos
fsubs
out
push
aaa
sub
push
aam
jns
clc
lock
js
je
jb
das
pop
or
sub
jmp
mov
inc
jmp
imul
xor
pusha
movsl
and
mov
mov
or
fimuls
cwtl
pop
fldenv
and
pushf
push
or
add
lret
movsl
jl
out
sbb
loope
push
decb
lret
dec
sbb
cmp
pop
pop
sbb
into
in
inc
sahf
pushf
push
xchg
jmp
mov
push
ret
sar
leave
xor
mov
mov
mov
inc
es
leave
push
mov
dec
das
pop
mov
rcrl
fdivs
shrl
pop
cmp
test
xor
xchg
sti
and
xor
movsl
push
out
inc
and
or
jmp
cmp
ss
cmpl
shrl
add
mov
jb
cmp
cmp
enter
xchg
mov
mov
ljmp
aas
lods
leave
jbe
repz
and
jbe
pop
das
push
or
or
xchg
enter
leave
adc
mov
pop
jmp
cmp
ret
sbb
repnz
rclb
stc
stc
nop
mov
xor
xchg
push
cld
sub
mov
minps
sub
push
sub
jmp
mov
adc
push
inc
inc
gs
mov
sti
outsb
int3
in
xchg
sbb
dec
push
lret
dec
mov
mov
inc
mov
sub
fs
mov
les
adc
cmp
fbld
aam
test
and
incb
xchg
pop
int3
subb
push
nop
jge
adc
mov
jmp
jno
in
leave
negb
add
mov
fwait
mov
mov
pop
push
mov
or
mov
mov
mov
int
or
push
lret
ficoml
sub
movsb
cs
mov
sbb
xor
in
push
out
in
negl
outsb
jne
push
ret
or
into
sub
cs
and
out
ficoms
push
mov
inc
sbb
push
push
mov
insb
mov
pop
call
push
jo
xor
inc
fidivrs
sbbl
arpl
fdivl
push
adc
and
addr16
dec
ds
jle
out
mov
sub
test
inc
sbb
xchg
sahf
je
out
fs
pop
xchg
shlb
insl
cmpsl
arpl
mov
arpl
jne
mov
xor
add
jg
daa
and
xchg
push
sub
ret
sbb
fildll
cmp
lods
outsl
xchg
and
fs
xor
adc
lret
cmp
int3
subb
das
jbe
fwait
bound
xchg
sbb
ficomps
xchg
divb
andps
cmpsl
data16
mov
data16
jecxz
or
pusha
iret
mov
pop
ret
add
sarl
imul
add
mov
enter
push
cld
xchg
jecxz
lods
scas
orl
jmp
imul
xlat
xacquire
jo
jecxz
mov
fimuls
add
aam
cwtl
out
iret
fidivl
push
arpl
mov
pop
and
sub
repz
cmp
icebp
mov
xchg
pop
adc
add
push
call
movb
push
cltd
pop
aam
repz
cli
jae
lret
sub
into
mov
sbb
test
ss
inc
in
xchg
cmp
dec
or
pop
mov
mov
and
push
adc
push
mov
test
aam
cmp
fisttpll
cmpsl
adc
mov
into
adc
push
gs
mov
rcrl
sbb
lods
add
je
fdivrs
xchg
cmp
test
jl
add
push
push
mov
mov
mov
xor
jg
xlat
out
dec
mov
test
adc
popf
in
cld
sahf
pop
sbb
dec
mov
out
adc
dec
mov
test
lock
inc
pop
out
cwtl
or
xlat
mov
cli
jl
int
pop
push
int
ss
xchg
les
push
jo
fwait
jg
mov
cmpsb
inc
fistl
js
fists
xchg
xor
fcoml
mov
idivb
andl
mov
xor
lds
das
test
sbb
lahf
ds
orl
rcrl
lock
aad
cmp
fcompl
sti
cmc
mov
cmpsb
push
test
mov
out
add
xor
jo
inc
xchg
bound
ret
repnz
mov
mov
xchg
ss
xchg
leave
fmuls
aam
mov
out
ret
cmc
fidivrl
xor
sbb
xor
lahf
adc
sub
stos
mov
cld
add
dec
test
popf
sbb
stos
xor
cmp
inc
test
cli
aam
cs
icebp
out
inc
mov
adc
lods
addr16
and
cmpsb
sbb
mov
in
dec
add
notl
cmp
adc
test
rcrl
inc
outsl
jl
dec
adc
xor
hlt
adc
fistpl
pop
or
bound
pop
int
cmp
aas
daa
jo
jae
aaa
dec
or
inc
adc
sbb
sub
fstps
lock
or
sahf
mov
outsb
cmpsb
jp
cld
mov
sub
jmp
mov
inc
outsl
orb
out
pop
push
mov
push
mov
jb
ret
fincstp
out
cmpb
adc
pushf
mov
cwtl
mov
inc
testb
stc
loopne
insb
enter
in
jns
jg
clc
push
jnp
mov
pop
imul
mov
pop
hlt
das
rcll
adc
cmp
sub
iret
mov
jle
and
pusha
mov
xchg
xchg
stos
and
icebp
cmp
pusha
adc
xchg
mov
sub
rorl
mov
mul
mov
out
xchg
mov
jbe
mov
std
adc
mov
sub
inc
lret
sub
shrb
cmc
lods
adc
shl
pop
out
je
mov
xor
loope
leave
cld
cmc
loopne
sbb
out
jl
add
int
pop
xchg
mov
out
lret
daa
hlt
jle
rcll
fistpl
sub
or
and
pop
lahf
sub
imul
push
add
cmc
pop
call
repz
jl
cmpsl
mov
push
fwait
push
cmc
test
inc
es
and
push
enter
jle
push
mov
sub
push
icebp
sbb
jo
enter
lret
push
ss
gs
repnz
or
add
decb
adc
sbb
add
clc
xchg
repz
in
xor
adc
cmc
push
jp
ds
popf
loope
mov
loop
sbb
push
sbb
fcomps
sbb
jb
mov
push
imulb
mov
xlat
cmp
fsts
xchg
mov
gs
les
sub
jecxz
iret
jle
popa
jbe
repz
inc
rcll
mov
pop
xor
push
addb
pop
and
and
add
addr16
insb
ss
sbb
mov
mov
scas
inc
mov
or
push
aam
lods
rcr
aam
and
dec
stos
fimuls
jmp
xchg
hlt
repnz
xchg
xchg
xchg
and
adc
iret
ret
mov
cltd
mov
lods
sbb
mov
and
inc
fbld
push
lret
rorl
out
jmp
cmc
mov
pop
mov
xor
inc
jo
or
adc
mov
xchg
mov
xor
es
sbb
or
mov
sbb
sub
mov
daa
sub
popa
dec
sti
lahf
pop
mov
mov
xchg
mov
push
fistpll
mov
add
mov
jae
lea
out
mov
push
push
sti
gs
ja
fneni(8087
iret
insl
cmp
idiv
add
iret
xchg
shrb
lods
stos
push
int
movsb
insl
lcall
xchg
shrl
lds
jle
ss
mov
jle
int
xchg
jge
mov
rcrb
jmp
inc
or
pushf
lahf
ds
sbb
jno
dec
adc
mov
int3
out
icebp
loope
lock
dec
jmp
es
xchg
push
sub
iret
jecxz
xor
in
in
pop
push
pusha
and
lcall
je
test
lods
sbb
xor
das
insl
inc
push
fucomi
mov
xor
pop
mov
sbb
lds
mov
mov
jle
inc
stos
in
jecxz
scas
cmp
add
test
push
int
lea
pushf
mov
cmpsl
jmp
ret
xchg
jge
pop
pusha
shrl
xchg
jae
mov
shlb
out
lret
mov
mov
mov
rol
rclb
cli
push
xor
std
sbb
jo
sub
cltd
rorb
lds
idiv
push
adc
call
jb
dec
jnp
test
in
pop
mov
push
lea
nop
xor
mov
add
xchg
mov
cmpsb
xchg
xchg
mov
inc
addl
pop
stos
cmpsb
imul
fstps
les
fnsave
int
push
or
or
pop
pop
inc
inc
jno
pop
xchg
dec
les
push
mov
mull
cmp
ret
repnz
jno
shl
sahf
dec
pop
cwtl
cmpsl
jb
fistpl
cmp
inc
lea
sub
adc
les
fistpl
aad
sub
mov
pop
inc
cmp
jo
shl
and
scas
inc
mov
sub
push
pushf
cmp
mov
mov
outsl
dec
jg
cli
pop
mull
scas
rcrb
lods
inc
pop
sub
pop
leave
ret
shl
shr
jecxz
lea
pop
sbb
pushw
pop
loopne
test
inc
jle
aas
test
dec
inc
mov
mov
lahf
cmpsl
jl
fistpll
ficoml
pop
aad
xchg
lcall
mov
cmp
jecxz
shl
and
js
ja
cs
movsl
dec
in
fchs
mov
movb
inc
test
or
mov
rclb
or
loope
mov
sbb
sub
cwtl
add
ret
mov
push
dec
jl
mov
mov
and
mov
push
imul
fldenv
mov
add
inc
jl
dec
inc
and
ret
pop
ljmp
rclb
mov
mov
sbb
jnp
and
jecxz
xchg
mov
repz
add
push
shll
cmpsl
cmp
and
stos
xlat
inc
push
lods
roll
push
and
jno
push
loop
xor
loope
icebp
lods
adc
add
push
aad
pop
push
arpl
fcmovnbe
testb
cs
cs
cmc
mov
pop
pop
sbb
add
das
mov
xchg
fidivs
pop
jg
fs
lds
fsubrl
out
outsl
push
arpl
adc
nop
mov
inc
jb
test
fcomps
dec
and
gs
jg
out
in
xchg
fdivl
das
roll
das
push
pusha
adc
test
repnz
dec
lret
mov
hlt
push
jle
jbe
fidivl
mov
sub
fucomp
dec
add
out
adc
shl
lcall
jecxz
mov
loopne
mov
fidivrs
shll
or
cmpsl
cmpsl
push
or
xchg
jmp
jg
test
mov
xchg
sbb
jge
sti
fcoms
adc
mov
inc
sahf
xchg
mov
mov
push
jnp
inc
dec
cmp
hlt
roll
out
push
sbb
inc
out
rorl
mov
inc
cmp
mov
push
add
ja
and
xchg
addb
xor
inc
mov
pop
dec
sbb
mov
stos
stos
arpl
cmp
pop
push
sbb
xor
call
push
outsb
xchg
push
movsl
sbb
lods
xor
and
aam
addr16
fsub
sub
cmp
test
imul
jmp
idivb
shll
cmp
sbb
leave
addb
fdivr
addb
out
pop
dec
loope
out
insl
shlb
sub
test
xchg
outsb
negl
dec
out
idivl
sarl
in
jno
inc
inc
mov
xchg
cltd
push
mov
es
das
jbe
jns
aaa
imul
sbb
lahf
xchg
or
test
test
les
stos
pop
arpl
mov
int
pushf
cld
sbb
mov
mov
push
inc
lock
mov
sbb
ss
mov
out
bound
daa
push
leave
pop
xchg
lods
sbb
lea
add
xor
std
xor
fildl
shrb
test
je
ficomps
and
mov
dec
into
pop
lahf
lods
sub
xchg
inc
or
sub
inc
add
mov
fstpt
push
lahf
and
pop
jp
lret
dec
insb
int
mov
bound
and
adc
dec
popf
in
inc
les
adc
aad
xchg
xor
jg
div
int3
jb
sub
sub
mov
scas
cmp
xchg
mov
ljmp
push
and
sti
cmpsl
pop
lods
push
shll
lock
lcall
clc
aas
sub
lret
and
xor
std
sbb
test
das
and
mov
pusha
jae
add
out
wbinvd
rcl
fs
jb
sub
xor
pop
mov
stos
jg
xchg
mov
nop
lret
test
mov
loop
test
imul
sub
xor
or
push
outsl
mov
jp
add
das
lods
clc
fisubrs
lea
daa
addr16
cmpsl
cmp
imul
clc
mov
insl
adc
sub
mov
xor
fimull
mov
pop
shll
jb
add
mov
xlat
loope
jp
rorb
add
add
xchg
jb
popf
test
fsubs
movsl
lret
call
mov
mul
mov
std
xchg
add
andl
sbb
pop
rol
and
sbb
mov
sbb
mov
test
cli
dec
sub
cmc
inc
inc
xor
push
mov
add
sub
outsb
mov
ffree
ja
push
lret
pop
scas
js
clc
inc
dec
pop
lahf
push
push
testl
cmp
sbb
push
pop
fistl
stos
mov
xor
and
pop
or
jo
imul
inc
push
dec
psrld
popf
push
jbe
push
call
xor
cmp
sub
push
add
shl
repz
pop
jg
xchg
adc
mov
cwtl
sub
cmpsb
lret
dec
or
xchg
ljmp
push
outsl
out
fstpt
add
mov
sub
lds
and
lahf
mov
fstl
nop
xlat
jb
mov
movsb
adc
push
cmp
jle
push
add
pop
inc
xchg
dec
inc
pop
xchg
jno
movsl
jns
sti
or
fisttpl
inc
cmc
addr16
pop
cwtl
lcall
aas
fbstp
cmp
jbe
lahf
gs
dec
out
mov
ja
cmpsb
mov
sti
sub
imul
sti
jg
sbb
xchg
in
jecxz
loop
pop
and
and
mov
xor
inc
movl
dec
in
cli
imul
je
mov
pop
das
mov
loopne
mov
jnp
lock
stos
out
pop
lahf
or
mov
and
xchg
jno
mov
and
jns
xor
push
xchg
jae
test
mov
dec
jg
cmpsl
pop
mov
xchg
roll
hlt
pop
push
out
std
add
adc
push
outsl
inc
rcrl
icebp
xor
inc
add
cwtl
fmuls
mov
mov
jnp
push
in
adc
mul
clc
outsl
cmpsb
lret
and
mov
aad
pop
xorb
fwait
mov
mov
jp
and
mov
cmp
cbtw
xchg
and
pop
push
lcall
jo
cmp
pop
or
call
repnz
or
push
adc
addr16
dec
fcomp
mov
push
push
cwtl
mov
fsubs
jle
aad
jo
pop
inc
or
xor
xchg
jb
popf
jecxz
in
fsubrl
lret
sub
jnp
sti
xor
jecxz
je
or
cmp
aad
xor
out
cmc
jl
pop
mov
lret
mov
sub
jle
push
cmp
push
stos
imul
xchg
cmp
cs
mov
mov
fdivrp
jbe
jmp
popf
mov
mov
add
mov
shlb
inc
xchg
sbb
and
fs
jmp
inc
mov
shll
loop
jne,pt
mov
jmp
scas
inc
lods
and
aas
and
sub
or
mov
mov
cmp
icebp
rolb
cmp
push
cmpsl
fcmove
sbb
cmp
add
and
ss
mov
cmp
jns
pop
ljmp
cld
rcrl
xor
lret
mov
in
push
fistpl
aas
loope
adc
rolb
lret
xor
cmp
sub
imul
xor
and
dec
inc
rclb
std
mov
sbbb
xor
pop
test
and
ret
and
xchg
insb
and
fwait
bound
xor
test
jp
and
or
dec
mov
fadd
add
data16
dec
hlt
mov
jb
add
and
xchg
je
xor
cmp
aad
push
leave
push
in
clc
mov
lods
data16
out
into
loop
xchg
bound
sar
xchg
jp
jl
imull
xchg
jo
das
jge
jl
jg
jnp
popa
push
cmp
test
jge
sbb
inc
mov
push
push
dec
hlt
mov
fs
xor
pop
dec
sahf
or
aam
or
aas
pop
cmc
inc
jmp
cwtl
daa
pop
cmp
push
in
adc
pushf
mov
cmpsl
sbb
movsb
fbstp
sarl
flds
pop
jne
shl
arpl
cli
cmpb
aaa
fcmovu
lea
xor
pop
xorl
loopne
adc
in
push
cmp
fwait
xchg
or
dec
movsl
rol
ljmp
and
mov
bound
mov
inc
mov
xchg
jae
ljmp
lea
and
adc
cld
ret
or
int3
nopl
add
outsl
adc
pop
push
adc
stc
daa
and
jbe
movsl
mov
adcb
jl
add
ds
xchg
pop
mov
iret
mov
sub
pop
filds
mov
aam
dec
sub
call
pop
inc
and
rcrb
ret
add
lcall
push
sub
jmp
jp
pop
cmp
in
mov
inc
es
mov
test
fidivl
xchg
cmp
in
jecxz
add
out
call
mov
push
xchg
pusha
fimuls
jnp
adc
jge
push
out
int3
add
cmc
sub
jmp
sub
mov
repz
xor
data16
add
sbb
adc
aam
aas
cmp
add
mov
jp
jmp
ret
ret
sbb
es
push
jmp
adc
inc
repnz
cmpsb
dec
adc
dec
je
dec
xlat
sub
imulb
mov
mov
xchg
rcrl
xchg
jbe
rorl
dec
mov
aas
addb
mov
xor
movsb
ljmp
mov
jge
imul
cmp
jb
outsb
rorl
pop
test
stc
fsubr
xchg
inc
dec
cltd
push
xchg
ljmp
xchg
jbe
notl
cmpb
jmp
cwtl
fistl
stc
cltd
dec
inc
cltd
stc
and
test
jp
mov
mov
fisttps
pop
cmp
add
dec
ret
cli
mov
mov
into
inc
xchg
push
jmp
shrb
fidivrl
pop
adc
and
sbb
lss
ret
icebp
in
cltd
imul
adcl
jecxz
mov
insl
jnp
cmp
and
sbb
nop
scas
adc
fistpll
or
cmp
sub
es
add
je
fcoml
add
loope
add
sbb
xor
rclb
push
jmp
push
mov
sbb
mov
jg
loop
push
fidivrl
adc
test
subb
add
mov
imul
pop
or
pop
mov
inc
sbb
out
fmull
je
mov
scas
jns
dec
push
fs
call
imul
mov
inc
lahf
mov
sbb
les
pop
sbb
insl
add
dec
clc
pushf
fxsave
xchg
mov
iret
pop
stc
pop
insb
testl
pop
pusha
lret
inc
cmpsl
hlt
lcall
dec
outsl
xor
aad
add
cmpsl
pop
push
adc
js
nop
notl
jne
add
xor
loope
pop
pop
mov
mov
xor
pop
jmp
sub
stc
fs
cltd
std
add
push
ss
dec
orb
rcrb
cwtl
shlb
lcall
sar
mov
minps
or
dec
inc
outsl
mov
add
jl
push
or
cmp
jno
dec
stos
jbe
es
int3
sbb
call
cmp
push
int3
pop
xor
aas
outsl
lret
add
enter
cmpsl
pop
cltd
stos
push
lret
jnp
lcall
je
cmp
out
mov
fucompp
pusha
jmp
dec
mov
or
xchg
cmp
outsb
sub
sbb
stos
sbb
adc
ja
jno
xchg
cmp
mov
adc
repnz
js
fs
pop
lds
outsb
aas
mov
sarb
lahf
outsb
push
add
lcall
and
or
shll
xchg
pushf
lret
in
push
mov
inc
dec
nop
pop
fs
fists
sub
dec
lahf
add
mov
dec
pop
add
std
in
aad
pop
aad
mov
mov
push
bound
data16
ds
arpl
loopne
mov
and
lods
inc
sub
sarl
or
push
stc
adc
arpl
aaa
inc
mov
xor
js
dec
js
lods
xor
out
sbb
fstl
cld
push
mov
ss
pop
cld
imul
inc
and
jne
bound
jae
pushf
push
pusha
adc
add
mov
push
dec
andb
and
cmp
lahf
clc
xchg
xor
movl
test
mov
mov
cli
ss
mov
fucomp
xor
gs
push
pop
rol
push
xchg
mov
scas
daa
negl
xor
shlb
mov
pop
jnp
push
movsl
lds
push
pop
shlb
iret
scas
fisttpl
jecxz
cmpsl
xor
addb
psubq
and
dec
xchg
repnz
and
mov
add
add
mov
sub
xor
mov
dec
adc
pop
js
int
std
pop
sub
pop
cmp
ret
mov
pop
test
jp
adc
jo
in
pop
push
mov
and
out
fmul
xchg
mov
sarb
lahf
pop
push
fs
jb
push
cli
aad
add
pop
cmp
jp
mulb
push
mov
repz
movsb
pop
xor
int3
or
mov
xchg
pushf
in
ret
sbb
adc
sub
pop
dec
mov
rcrl
out
cltd
bound
int
mov
fnstenv
or
adc
lods
scas
stos
mov
inc
ljmp
push
sbb
sbb
lods
mov
adcb
jo
inc
fistpll
cwtl
lods
int
and
xchg
xor
pop
jns
fiadds
sbb
ror
dec
xor
cli
incb
lret
pushf
jno
mov
pop
inc
imul
in
push
cmpsl
cmp
pop
and
cmc
pop
test
inc
xchg
lcall
cmp
in
fistpll
scas
clc
push
sub
cwtl
int3
sub
int
sub
dec
xchg
jo
push
mov
sub
daa
scas
scas
es
scas
cmc
cltd
or
fiadds
jg
inc
insb
mov
stos
js
dec
cmp
push
push
pusha
mov
sub
jl
aam
mov
mov
push
popf
lcall
cmpsb
mov
mov
jnp
mov
dec
push
cmc
fimuls
lahf
mov
cmp
xor
cmc
mov
dec
pop
sub
fwait
jmp
loopne
adc
ficompl
into
movsl
loope
ljmp
inc
mov
sbb
inc
xor
mov
xor
jp
jl
add
outsb
jle
push
aam
ss
xor
or
jl
aaa
lods
cs
outsb
icebp
in
sbb
fdivrs
bound
and
dec
inc
int3
xor
xorl
popf
xchg
orl
popa
push
push
leave
int
and
outsl
xchg
push
sarb
adc
cmp
mov
mov
in
lds
and
into
mov
mov
mov
sub
mov
mov
nopl
sub
sbb
and
jno
insl
xchg
pop
pushf
aas
ret
aam
cmpsl
pop
inc
mov
mov
cli
fs
mov
mov
test
pop
push
xchg
in
pop
mov
stc
fwait
mov
mov
int
ja
ret
dec
pop
pop
push
call
mov
push
sub
xchg
pushf
push
fwait
in
mov
sub
pop
pop
rolb
cltd
cltd
rcll
into
je
cmp
mov
mov
scas
add
adcl
jg
push
mov
push
dec
mov
cmp
fdivrs
cmp
mov
ret
fs
in
stc
xchg
shl
arpl
ja
std
lret
push
xor
sbb
addr16
and
adcl
adc
inc
test
pop
in
mov
xchg
mov
call
stc
jmp
sub
mov
mov
nop
mov
xchg
inc
leave
fstps
cmp
in
lea
repnz
pop
adc
mov
frstor
movsb
or
aad
lods
sahf
iret
jb
push
xchg
cmp
out
mov
push
jno
arpl
inc
cmp
fs
cld
sbb
les
mov
scas
adc
add
xchg
lahf
aaa
dec
fnstenv
icebp
js
int
adc
movsb
cs
mov
mov
pop
les
pop
idiv
out
test
mov
xchg
je
and
aaa
jbe
pop
test
push
arpl
mov
loopne
movsl
stos
xor
cwtl
test
cld
pop
loope
aad
and
cltd
cmc
pop
xor
mov
shrl
jno
cld
mov
adc
jp
add
add
mov
sti
sub
fstl
xor
outsl
or
or
push
ja
jmp
arpl
lret
and
push
arpl
mov
or
mov
xor
pop
pop
xchg
mov
lock
mov
movsl
mov
or
cltd
xchg
ja
cs
daa
sub
shrl
fs
ret
xor
cmp
sub
pop
xlat
mov
jmp
mov
or
pop
lea
add
lret
cmp
decb
inc
cmp
lret
ret
orb
fistpll
sbb
jbe
jne
mov
pop
cmpsl
pop
mov
das
sub
mov
inc
cmp
sub
inc
mov
mov
loop
lahf
addr16
mov
xchg
mov
pop
adc
push
and
xor
imul
push
mov
sahf
loop
push
sarl
or
es
in
mov
mov
aaa
inc
push
movsb
push
sar
call
addr16
into
xchg
push
or
aaa
cs
push
inc
movsl
stos
mov
xor
sbb
and
fbstp
or
int3
outsl
push
out
cmp
pop
in
and
dec
adc
pusha
aam
pop
stos
hlt
clc
daa
adc
fnstcw
je
sbb
sbb
adc
cmp
and
ret
jecxz
mov
ss
inc
sub
hlt
ja
fidivl
aas
mov
push
sub
mov
sub
addb
mov
push
mov
gs
cmp
and
aad
lret
lcall
mov
pop
ljmp
mov
or
test
push
imul
jmp
push
rolb
cmp
mov
ret
push
push
rclb
mov
mov
out
xchg
sbb
jo
jge
lret
test
jg
mov
xor
addl
cld
jecxz
sahf
insb
and
loope
sub
loop
pop
jnp
add
sbb
ljmp
mov
lret
insb
jbe
add
fadds
and
int3
ret
nop
stos
jecxz
sarl
jnp
mov
push
cmpsl
mov
or
out
inc
rolb
es
out
pop
test
aaa
push
ret
neg
cmpsb
xor
fstl
dec
icebp
cwtl
loop
jp
out
jo
fdivs
mov
push
cld
jae
arpl
dec
adc
mov
sbbb
in
push
cmpsl
cltd
jne
ljmp
inc
ljmp
dec
arpl
push
sub
out
jl
add
mov
fistpll
aad
ret
mov
push
inc
mull
inc
bound
ret
ds
sbb
jp
pop
mov
out
pop
dec
xor
ljmp
pop
jno
stos
pop
push
adcb
push
cmpsb
lea
dec
shlb
popa
pop
cmp
jbe
add
adc
pushf
sub
addr16
dec
push
sub
and
push
aas
xchg
std
adc
rcrl
and
and
adc
dec
sarb
cli
and
cmc
sbb
mov
stos
shr
inc
xor
sbb
push
pop
sbb
xor
shrb
or
push
fsts
ficoml
jb
push
cmp
stos
js
jne
adc
sahf
stos
rcrl
ljmp
pop
je
lret
fstpt
icebp
jno
jg
ja
sbb
clc
out
lret
adc
push
outsl
sbb
sbb
mov
lock
adc
cltd
mov
mov
fistpll
dec
fidivrs
sbb
sub
mov
loope
jo
lea
pusha
sbb
mov
xchg
xor
mov
inc
and
aaa
push
mov
jp
hlt
add
dec
dec
xor
sub
ss
mov
fcom
cmp
clflush
outsb
xchg
repz
inc
movsl
sbb
add
inc
mov
into
dec
cmp
fsubrl
outsl
daa
dec
scas
xchg
pusha
in
fisubrl
add
and
int3
push
or
and
jg
jb
shll
loop
lds
in
dec
out
dec
xchg
push
push
lods
in
xor
imull
aaa
lret
or
mov
test
movsb
cmpsb
das
pushf
mulb
stos
test
pop
shlb
sbb
sbb
sbb
pushf
inc
mov
jl
aam
test
les
mov
push
pushf
popa
xchg
iret
pusha
and
fistpl
mov
mov
mov
push
mov
dec
cmp
test
outsl
jb
movsb
rolb
dec
icebp
inc
pop
cmc
loop
andl
lret
addr16
jle
cli
cmp
test
std
mov
mov
out
int3
ret
in
into
mov
mov
test
shrl
cmpb
xchg
fwait
add
xor
xor
xchg
dec
fwait
add
or
mov
fiadds
pop
sub
jmp
fdivs
sbb
jo
lcall
ljmp
enter
pop
fnsave
aas
lods
jg
sysenter
repnz
jne
add
sbb
mov
jmp
outsb
mull
xor
jge
pop
push
je
es
inc
out
xor
mov
mov
adc
mov
cmc
fmulp
call
imul
insb
aam
sbb
ds
and
mov
push
xor
enter
jmp
adc
jge
cwtl
sub
dec
inc
andb
sbb
cmp
in
das
aaa
je
fnstcw
mov
dec
sbb
mov
lods
roll
mov
push
ret
inc
clc
in
pop
insb
sub
lret
repnz
fistpll
addr16
insb
jb
sub
lea
sti
fildll
mov
clc
repz
aam
scas
add
push
jae
into
lret
inc
mov
addr16
dec
or
mov
mov
mov
es
push
push
xor
popf
shrl
or
faddp
out
lret
ljmp
mov
adc
xlat
inc
xchg
and
sbb
das
enter
fiaddl
jg
dec
cltd
push
inc
fimull
or
lds
les
imul
rclb
test
jo
arpl
lock
mov
dec
jno
jmp
xchg
ljmp
or
jge
jge
push
adc
dec
sahf
sbb
mov
jnp
fildll
pop
pop
movsl
nop
pop
jne
fdiv
int3
arpl
test
lock
fwait
mov
push
fadd
jmp
out
ret
out
mov
ret
cmp
xchg
xchg
lret
sbb
pushf
aad
outsl
das
fisubs
cmp
pusha
sbb
push
push
pop
xor
jne
xchg
mov
or
fcompl
and
jg
pop
jp
jns
mov
in
sub
lock
jae
enter
lcall
inc
cmp
enter
stos
inc
ret
pop
repnz
push
rorl
ror
aas
cmpsb
sub
or
jmp
jmp
sbb
shrb
ljmp
mov
scas
fsts
dec
loopne
pop
cs
xchg
push
inc
jnp
arpl
aas
frstor
sub
push
mov
xor
sbb
cmovp
ds
and
sub
sbb
loop
mul
mov
cmpb
popf
in
in
gs
filds
icebp
adcl
mov
mov
int3
add
fwait
xor
inc
popf
jae
sub
imul
out
psrlq
dec
outsb
pop
shll
add
dec
mov
jns
push
sub
sbb
xor
adc
and
inc
lret
ja
sbb
imul
lods
cmp
cmp
mov
fsts
pop
imul
mov
test
xchg
dec
inc
lret
icebp
cltd
sahf
pop
clc
xor
test
jnp
leave
psrld
xor
dec
hlt
push
xchg
or
pop
subb
cmc
inc
mov
ss
imul
or
add
xchg
push
push
cmc
push
jnp
add
das
rcrl
ljmp
cltd
push
fistpl
mov
inc
sti
xchg
xchg
lret
add
int
adc
aas
add
jle
xor
mov
mov
ja
or
stos
sub
shll
or
inc
ret
xor
sbb
inc
xchg
popa
cld
sbb
jmp
shlb
adc
addr16
mov
mov
aad
and
push
bnd
test
mov
mov
dec
gs
pop
xor
shlb
jbe
push
xor
cmc
inc
adc
cmp
jae
xor
loopne
neg
es
push
mov
and
or
aaa
pusha
add
js
dec
inc
sahf
in
jg
call
addr16
lcall
sbb
sbb
mov
adc
pop
xchg
icebp
and
xchg
sbb
xchg
lret
mov
cli
lcall
push
pop
arpl
xor
mov
stos
xchg
aad
add
enter
sbb
pop
out
sbb
lods
js
jbe
xchg
test
ljmp
ret
adc
push
sbb
dec
in
lea
int
inc
sbb
das
push
cmpl
lds
insb
test
adc
sub
ljmp
mov
ja
pop
cwtl
mov
cmpsl
loop
mov
mov
outsl
cld
out
lods
add
ljmp
or
mov
xchg
fstp
repz
aad
cmc
pop
push
adc
call
mov
inc
movsb
lcall
adc
xchg
pop
pop
mov
add
int
fcomip
add
lret
subl
lahf
sbb
test
add
push
xlat
mov
xchg
xlat
enter
push
xchg
ja,pn
inc
aam
jmp
mov
lret
lret
mov
mov
aaa
jb
xchg
stc
loopne
mov
out
in
pop
mov
xchg
jp
cwtl
ret
pop
xor
mov
sbb
pop
mov
call
sbb
mov
pushf
popf
dec
bound
push
cmp
nop
jp
sub
xlat
inc
fidivs
pop
test
lcall
outsb
shlb
sub
ja
icebp
js
jnp
sbb
push
mov
daa
sti
rclb
mov
popl
sbb
clc
lret
or
dec
cmp
loop
cs
jnp
cltd
sbb
sahf
jmp
mov
jmp
mov
fmuls
rcrb
loop
fs
sub
bound
loopne
sti
orl
clc
sarb
mov
dec
cmpsl
and
inc
dec
loop
jge
scas
adc
mov
and
sahf
and
sbbb
inc
mov
push
cs
pop
int
setns
cmp
xorl
ficoms
outsb
cmp
fnstenv
andb
ja
ret
dec
lods
xor
scas
lods
pushw
je
xchg
lds
mov
inc
cmpsl
gs
sub
inc
sbb
push
stc
jp
push
mov
mov
add
imul
mov
inc
xchg
fmull
jp
loopne
jg
mov
sbb
jbe
out
stos
int
outsb
test
enter
fwait
dec
jns
mov
sub
or
jmp
xor
in
push
lea
fwait
add
jg
xor
rolb
inc
xor
out
mov
call
jl
ss
aad
inc
cmp
pop
xchg
vmovhps
or
mov
ret
push
ficoms
xor
inc
fisubl
jge
push
popl
stos
sti
les
inc
test
xchg
adc
pop
push
dec
push
mov
xorps
add
cmp
pop
add
in
pop
lret
cmpl
test
cmp
in
sbb
subl
xor
roll
es
ret
hlt
inc
ja
mov
xor
sub
into
and
aam
push
and
jmp
movsb
jg
pop
pop
jae,pn
mov
xorl
adc
xor
lcall
aas
mov
mov
or
cmp
pop
movb
or
lea
es
xchg
popa
pop
repz
pop
adc
repz
popf
pop
pop
cmp
adc
or
xorl
dec
test
mov
andb
push
push
shl
pop
ror
popa
daa
cmp
add
in
int
adc
std
shll
cmp
mov
xchg
xor
ds
jle
push
dec
data16
push
les
int3
jmp
fwait
cwtl
out
test
insb
int
xchg
dec
jb
fcmovnb
or
and
shlb
loope
cli
rcr
lods
xchg
xor
in
sub
fcmove
repz
or
or
mov
jb
pop
jo
lds
mov
sub
cmc
inc
daa
xor
orl
fbld
sbb
dec
sarb
inc
sub
cmp
dec
or
outsl
xor
shrl
mov
mov
lea
cwtl
je
aas
out
mov
addr16
xor
pop
in
mov
shrb
gs
pop
dec
mov
sbb
repz
inc
leave
test
movsb
push
test
adc
xchg
ds
cli
add
daa
or
adc
xchg
ret
fnstenv
mov
mov
inc
xchg
xchg
inc
jo
xchg
xor
and
imul
jae
mov
sarl
jo
jns
jl
cmpsl
rcrl
ds
scas
xorb
or
fildl
gs
dec
pop
aaa
pop
jecxz
negl
xorl
add
pop
data16
shll
push
push
shrl
hlt
shll
xor
imul
hlt
and
pop
cltd
dec
dec
xchg
add
icebp
xor
fildll
pop
aam
shll
add
shl
fbstp
das
stos
dec
daa
and
pop
mov
xor
pushf
dec
mov
ret
sbb
imul
ljmp
pop
mov
jle
and
rep
mov
rorb
imul
shr
ds
repnz
adc
jge
mov
imul
pop
or
cmove
loopne
ficoml
cmp
mov
jbe
insb
sub
loope
negl
mov
mov
test
push
mov
and
int
iret
test
jmp
sub
sub
mov
mov
pop
ds
int3
and
cmc
jl
out
push
out
ror
test
push
jno
xchg
mov
pop
cmp
mov
jp
add
or
adc
ss
aas
dec
loope
ret
mov
xchg
hlt
andb
test
outsb
sub
mov
dec
ljmp
in
gs
dec
in
adc
movsl
push
push
daa
jo
add
push
add
pop
mov
lret
cmpsl
nop
popa
push
dec
cmovne
outsl
lret
dec
mov
add
cli
push
dec
pop
inc
movaps
mov
xlat
cmp
push
pusha
fcomps
mov
fnstenv
rorl
lock
adc
cmpsl
sub
add
movsl
cltd
idivl
rorb
adc
cmp
clc
cmc
std
nop
jae
jae
es
out
in
icebp
out
cwtl
repnz
movsl
aas
aam
fadds
jmp
lea
jge
shrb
iret
cmp
push
add
mulb
jae
gs
enter
jns
in
into
push
dec
mov
and
clc
push
cmp
mov
adc
fucom
dec
add
in
fdivrp
dec
pop
xor
std
mov
mov
cwtl
shlb
add
gs
xchg
push
mov
addr16
shll
rcll
arpl
xchg
or
fs
mov
xor
mov
imul
stos
das
enter
fldt
dec
out
xor
les
dec
jp
bswap
imul
cltd
dec
addl
dec
mov
je
push
lea
cmp
ss
arpl
jbe
iret
and
pop
mov
sbb
pop
xchg
inc
adc
xor
in
clc
push
jmp
mov
jg
jb
mov
test
add
fwait
dec
or
scas
jmp
fs
push
loopne
cwtl
mov
in
and
and
repnz
sbb
add
push
inc
inc
bound
jae
repnz
inc
out
xchg
test
call
std
sti
xchg
movsb
aad
fcoml
sbb
leave
inc
call
mov
inc
adc
add
and
lret
int
cs
insl
pop
sbb
dec
pop
pop
jp
add
xchg
scas
pop
hlt
jl
xorl
ret
mov
mov
jnp
mov
adcb
int
imul
ret
mov
inc
xor
lahf
fwait
cmpsl
jae
icebp
xchg
or
xsha256
cmpsb
xchg
test
cli
adc
test
xchg
stos
fsub
popa
and
sti
fsubp
push
movsl
mov
inc
add
xchg
mov
bound
sti
mov
sbb
movsb
jl
out
sbb
cmp
inc
in
inc
aaa
sti
pop
push
test
in
or
xchg
lret
sub
adc
test
xchg
jbe
das
sbb
daa
cld
aas
cmpsb
pop
aad
lds
xchg
xor
cli
mov
mov
das
mov
fnsave
or
fldenv
dec
arpl
mov
push
fistl
rorb
push
aad
ss
in
mov
xlat
mov
xor
xchg
xchg
outsb
jecxz
out
mov
pop
adc
in
add
in
test
sub
mov
outsb
push
or
movb
mov
outsl
cmpsb
cld
mov
mov
insl
addr16
jne
push
je
stc
pop
test
add
repnz
mov
fdivl
mov
push
psrlq
stos
mov
cmova
or
repnz
mov
and
aaa
jno
imul
mov
jl
test
pop
sbb
jg
sbb
dec
jmp
ret
fwait
or
add
or
inc
mov
sarl
jne
xchg
xchg
sbb
adc
mov
xchg
mov
mov
push
gs
jmp
shl
mov
xchg
ja
and
mov
out
out
adcb
pop
lods
and
mov
mov
inc
es
xchg
dec
popa
imul
add
arpl
inc
daa
daa
mov
cltd
in
test
in
pop
inc
mov
cltd
sbb
push
sbb
mov
xor
shll
pop
ret
add
or
mov
imulb
in
clc
jmp
or
mov
xchg
pushf
or
or
or
gs
or
pop
cmc
fmuls
in
push
cld
fstps
jo
cmovo
loop
es
loop
mov
cs
movsb
int
dec
movsl
std
maxps
mov
das
aas
ret
pusha
mov
xor
or
ljmp
adc
cmp
add
pop
loopne
insl
sbb
in
std
jge
cmp
stc
lea
or
cmpsl
divb
push
out
xor
out
or
test
mov
arpl
movsb
fsubrs
sub
pop
jns
jae
lret
mov
inc
or
repz
sub
mov
or
in
out
adc
sbb
or
enter
add
jno
add
adc
and
and
orl
aas
sbb
aad
cli
dec
and
outsl
ror
das
jno
imull
cwtl
inc
shll
and
pop
inc
add
lcall
mov
pop
xor
jl
int3
add
sbb
icebp
out
aaa
xor
enter
incl
sahf
shrb
and
mov
mov
adc
mov
xchg
xchg
cmc
insb
xor
adc
jo
xlat
or
fsubl
aas
popa
addr16
lret
sub
cmpsb
mov
sar
ret
xchg
mov
xor
xchg
xchg
jno
xchg
add
push
clc
xlat
push
leave
scas
cli
push
inc
sub
scas
pop
push
dec
push
or
jmp
adc
sub
add
cmpb
out
push
pop
stos
cmp
push
sub
bound
mov
push
cld
call
mov
js
jge
add
mov
in
jnp
cli
and
lret
out
cmpsl
cmpsb
out
mov
clc
repz
pop
lods
jnp
sbb
jecxz
xor
push
jne
push
pop
outsb
into
ja
sbbl
imul
and
pushf
inc
in
xor
sbb
pop
inc
mov
imul
int
xchg
into
movsb
outsb
pop
cmpsl
test
or
dec
mov
in
push
fnstenv
mov
fdivl
aas
fnstenv
fistpl
pop
ljmp
sub
dec
mov
mov
iret
jle
pop
sub
mov
add
adc
push
pop
aas
cli
jb
sub
es
setbe
lds
ret
stc
flds
arpl
out
js
push
pop
repz
xchg
pushf
pop
mov
neg
add
loope
divb
mov
shr
in
jb
cmp
push
es
cli
in
xor
adc
rolb
pop
xor
and
cmovs
shl
cwtl
insl
or
dec
loop
dec
cmp
popa
insb
dec
xor
ja
nop
sbb
stc
jg
test
cs
sbb
xchg
cwtl
jl
into
repz
or
cmp
pop
sub
push
pop
pushf
adc
mov
cmp
repz
dec
out
fistps
out
adc
jecxz
addr16
jl
xor
movsb
data16
inc
mov
pop
cmp
and
adc
sti
add
jmp
es
xor
push
mov
scas
mov
jp,pt
cmp
mov
test
dec
sub
mov
and
fwait
jns
mul
xchg
mov
outsl
andl
ja
idivl
notl
je
mov
mov
lret
cmp
mov
insl
mov
sahf
jo
cmp
ljmp
adc
cwtl
loop
mov
fists
sub
mov
dec
aad
ljmp
jge
dec
jp
jp
adc
pop
rcrl
push
xchg
outsl
scas
add
mov
sub
add
pop
or
push
sub
mov
inc
adc
push
es
lock
ljmp
mov
xchg
int3
ret
into
clc
pop
inc
push
pop
mov
lds
mov
pop
jo
pop
dec
jbe
in
js
xchg
jmp
sti
cmc
pop
pop
xor
or
ljmp
jge
std
pop
stos
mov
mov
clc
ret
loop
cltd
dec
aad
mov
mov
jl
push
sub
fcoms
push
mov
pop
mov
jmp
push
jne
and
stc
shl
ss
repz
fcmove
jne
or
sbb
out
mov
pop
les
int
stos
lock
shlb
mov
mov
loopne
sub
dec
lock
cmp
js
cmpsl
cmc
jle
or
jnp
bound
into
test
add
ja
fsubs
adc
ror
mov
aaa
insl
xchg
ficoms
xchg
mov
das
int
xor
into
mov
pop
fldt
cmc
fs
hlt
xlat
les
cmp
pop
cmp
push
lcall
scas
adc
fwait
dec
add
inc
ja
arpl
mov
lcall
push
bound
ret
xchg
addr16
xchg
das
sbb
mov
popa
jnp
jne
mov
rcr
mov
cmc
pop
jo
mov
aas
hlt
or
cmpb
in
stos
xlat
pop
out
add
dec
mov
bnd
mov
pop
fs
cwtl
and
adc
negl
sub
push
loope
je
push
add
js
pop
shlb
mov
mov
daa
mov
in
mov
mov
cli
dec
stc
sub
mov
addr16
test
insl
cmp
jb
add
xlat
pop
or
jo
iret
movsb
jno
xchg
pop
xor
addr16
sbb
ficoml
adc
cmc
in
shrb
fmull
sub
jne
and
or
testl
lahf
adc
rcll
xchg
aam
imul
insb
sti
inc
mov
mov
mov
sub
test
mov
aas
das
sbb
jle
addl
rcrl
fs
push
jle
push
das
fwait
pop
jnp
sub
sub
mov
not
xchg
mov
jle
in
pop
popf
sub
dec
or
push
cmp
inc
mov
fprem
or
pop
cmpsl
dec
cmpsl
loopne
jmp
sub
inc
mov
dec
mov
fldt
out
leave
pop
pop
pop
das
dec
jl
mov
dec
sbb
icebp
mov
mov
mov
push
arpl
sub
imull
push
push
add
shrb
imul
sbb
dec
and
lahf
ds
jge
mov
repz
ds
xor
xlat
add
push
sub
push
dec
movsl
cmp
js
mov
out
outsl
test
std
cmp
and
mov
je
shrl
mov
inc
sti
sub
mov
movsl
jns
inc
cmp
leavew
jb
jle
pop
mov
dec
aad
out
cli
jne
test
ljmp
xlat
mov
dec
pop
xchg
insl
insl
fistps
cmp
or
pop
rorl
jnp
jmp
pushw
stos
cwtl
jge,pt
inc
jp
mov
pop
pop
adc
xor
movsl
jb
lods
lods
pusha
lods
mov
mov
add
xlat
pop
pop
sti
call
test
cmp
les
cltd
sub
je
push
mov
test
sbb
jne
xor
sbb
outsb
pop
in
mov
sub
xor
and
adc
rclb
loope
outsb
pop
mov
cltd
adc
gs
jo
testb
lcall
fdivr
fsubr
ja
add
inc
aaa
out
mov
push
sbb
add
mov
push
inc
mov
shll
bound
aam
push
and
mov
arpl
jle
das
xor
pop
push
ljmp
push
lods
insl
in
pop
or
loopne
daa
and
cli
mov
jge
push
push
cmp
and
jbe
xor
lods
ja
test
ficompl
pop
mov
add
lahf
movsb
xor
popf
jl
cmp
and
push
fisttpll
push
in
or
popa
push
or
jmp
push
hlt
pop
lret
inc
gs
xchg
pop
movl
insb
cmp
lret
xor
jp
xchg
sub
mov
popf
push
push
enter
adc
jbe
sub
icebp
push
xor
es
dec
lds
add
push
sbb
les
push
sti
repnz
daa
cld
sub
push
lds
cltd
lock
and
std
or
mov
inc
sub
stos
bnd
mov
xor
adc
sub
push
xchg
fcmovnbe
lods
cwtl
out
movsl
xor
mov
shlb
cmp
fisubrl
cmp
insl
in
xor
xor
leave
iret
inc
stc
lea
and
mov
ja
testb
push
lret
add
mov
mov
enter
push
jnp
xorb
pop
jp
andl
fidivrs
xchg
je
outsb
adc
mov
test
lret
call
jno
xchg
jns
jo
jne
cmp
pop
sub
sbb
das
jle
test
inc
ss
sub
jbe
pop
imul
mul
std
into
jae
jnp
jnp
pop
int3
xchg
xchg
mov
mull
pop
popf
mov
mov
inc
push
jnp
dec
cld
sti
adc
gs
aas
lahf
fwait
jne
sarl
mov
repnz
fsqrt
fs
out
cmpsl
xchg
and
xor
je
andl
roll
sahf
dec
fwait
mov
or
or
pop
inc
in
cmpsl
cmp
inc
loope
in
mov
or
jg
aas
mov
repnz
cwtl
data16
lahf
das
ljmp
aad
test
dec
push
jle
xor
mov
mov
arpl
ja
push
loope
fsubr
add
add
ja
adc
and
cmc
cwtl
push
add
inc
insb
movsl
sub
popf
stc
aam
and
inc
ja
inc
add
sbb
outsl
out
pop
xchg
and
and
and
push
divb
int
out
cs
lds
cmpsl
dec
xlat
mov
divb
sti
movb
aad
xchg
xchg
and
pop
repnz
or
ret
mov
xchg
push
mov
xchg
mov
movsb
fstpt
mov
das
push
mov
les
in
in
add
stc
std
test
sub
or
ret
xor
adc
inc
jno
push
pop
xchg
adc
out
cmp
or
fstps
dec
lods
adc
cmp
jmp
xchg
mov
negl
mov
dec
push
ja
dec
mov
mov
aam
pop
bswap
mov
or
fdivs
ss
outsl
imulb
jo
xor
mov
push
pushf
movsb
aad
into
lret
ret
jle
mov
push
inc
rcrl
and
mov
imull
xchg
test
mov
insb
dec
std
cmp
imul
shll
in
cli
fmul
dec
mov
out
imul
rcrl
xor
cmp
mov
mov
adc
push
loope
push
sbb
mov
cmp
aaa
cmp
mov
mov
aad
push
jl
pop
nop
mov
xchg
mov
das
pushf
xor
jp
stc
jecxz
jg
and
cmc
xchg
sbb
shl
and
repnz
pop
sbb
out
pop
ret
sti
and
dec
cmp
xchg
add
lods
or
lock
push
sub
mov
mov
outsl
stos
imul
mov
or
out
inc
test
aaa
add
cmc
mov
and
imul
lock
push
mov
sahf
scas
push
adcl
cld
jp
jo
fldcw
xor
scas
fistl
xlat
pop
push
out
and
xchg
jo
xor
sub
and
and
out
imul
outsl
xchg
das
sub
or
push
jne
mov
aad
and
lods
dec
scas
jp
add
mov
scas
lcall
jmp
push
push
adc
repz
or
mov
lds
sbb
pusha
imul
popa
push
aad
sbb
insb
pop
push
dec
mov
arpl
mov
mov
mov
jmp
test
in
ja
stos
test
ja
aam
push
sbb
mov
movsl
aad
cmc
push
sar
imul
or
jb
shlb
inc
mov
xchg
popl
test
xor
icebp
aas
cwtl
test
mov
sub
mov
movsb
scas
loopne
nop
adc
in
mov
ret
ljmp
in
xchg
lods
mov
push
mov
sbb
loop
and
jmp
mov
inc
iret
inc
dec
es
pop
mov
fisttps
icebp
stos
jnp
push
iret
loopne
out
scas
xchg
divl
inc
mov
cmp
add
cwtl
xor
movsl
loope
or
dec
xor
push
sbb
push
out
sub
sti
or
push
jg
jb
sahf
insb
aam
test
pop
stos
add
andl
mov
aas
loopne
and
xor
mov
mov
lds
xchg
add
inc
inc
mov
ss
mov
xchg
jge
into
mov
dec
std
mov
or
cmp
xchg
ds
mov
out
add
and
sbb
pop
stc
push
push
stos
mov
pop
push
mov
pop
fisubrs
push
xchg
jle
jp
lea
push
stos
dec
push
xchg
int
pushf
jne
adc
push
enter
incl
xchg
add
sarl
fdivrl
push
ljmp
ficoms
mov
push
bound
xchg
jnp
inc
aam
scas
int
pop
and
mov
sub
fcom
inc
loopew
push
jp
xchg
fnstsw
push
icebp
lret
ljmp
lods
hlt
adc
pop
aad
stos
dec
fldl
xor
bound
inc
inc
push
adcl
pshufw
adc
sbb
test
ljmp
mov
dec
add
and
hlt
addr16
push
loop
hlt
scas
call
sbb
cld
fsubrs
out
mov
shrb
notl
and
dec
mov
scas
adc
mov
sti
pop
stc
popa
or
out
test
add
pop
addr16
lods
cmp
imul
jmp
cld
ss
cmpsl
add
mov
xlat
push
pop
mov
rcrl
jnp
sbb
imulb
push
xchg
scas
lock
push
mov
pop
sbb
jp
pusha
mov
inc
test
cmp
jl
xchg
mov
in
addl
pop
pop
jmp
inc
mov
int
xor
sbb
mov
call
xor
mov
sub
cmp
push
outsb
jp
lds
push
jp
sub
and
test
sub
adc
arpl
outsl
ret
loopne
repz
mov
inc
cmpsb
in
jae
sbbl
ret
in
mov
push
mov
test
inc
jo
fdivr
outsl
mov
aas
adc
mov
lret
pop
js
and
shll
mov
stos
lods
ljmp
je
and
out
repz
call
or
cmp
push
shlb
addr16
scas
pop
mov
hlt
imul
mov
bound
inc
inc
lahf
xchg
pushf
mov
aaa
test
inc
push
movsb
add
dec
out
jb
out
jmp
xor
bound
adc
xor
stc
inc
fstpl
mov
pop
rclb
or
push
push
je
cmp
jp
and
mov
dec
add
pusha
jne
clc
adc
sbb
jae
mov
sarl
cmpsl
loope
mov
and
dec
loopne
lods
xor
clts
leave
sbb
sbb
or
jae
sub
lock
insb
enter
pop
leave
std
notb
mov
and
push
fisttpl
sbb
add
bound
in
xor
fs
xchg
sahf
lahf
lods
ja
negb
pop
mov
test
loop
cmp
push
dec
stc
nop
les
pop
jmp
fsubr
push
push
sbb
popf
jmp
sahf
aam
scas
ud2
mov
jns
scas
push
sbb
mov
testb
arpl
jmp
cmc
push
jns
ja
pop
mov
sbb
fs
adc
push
jbe
ret
adc
inc
mov
push
mov
pop
insl
outsl
and
sbb
shrb
mov
imul
leave
mov
push
out
cmp
sbb
jno
cli
dec
outsb
popa
mov
pop
mov
jbe
adc
in
inc
nop
cmp
leave
inc
in
testb
push
dec
mov
arpl
jns
ja
dec
inc
jge
inc
adc
scas
movsb
test
pop
dec
add
xor
leave
daa
rolb
shl
xchg
jp
push
int3
aaa
xor
push
push
dec
movsl
fildl
inc
int
mov
fadds
int3
adc
and
sub
inc
rorb
mov
cmc
and
iret
cmp
nop
insl
sub
mov
nop
add
rorl
mov
icebp
cld
leave
icebp
je
leave
dec
test
jbe
dec
test
enter
jb
xor
mov
push
stos
insl
sub
lea
stos
in
pop
mov
jmp
fwait
cli
or
push
push
xchg
pushf
sbb
inc
enter
dec
in
lods
and
icebp
rcll
out
loope
adc
sbb
inc
orb
xchg
cld
scas
pop
cmp
enter
test
xchg
popf
xchg
js
jle
inc
pop
fdivp
or
xchg
or
inc
stos
cmp
mov
pop
hlt
daa
add
cld
filds
jbe
mov
andb
jb
stc
and
push
call
fmuls
imul
vmwrite
jge
std
lods
data16
mov
mov
add
dec
fnstenv
rorb
fstpl
lods
mov
and
mov
js
lahf
sub
cmp
inc
insl
xchg
mov
negb
mov
jl
sub
aas
in
add
sub
aad
or
aaa
mov
mov
out
lret
scas
scas
sub
mov
adc
mov
call
ljmp
xor
pushl
out
xor
into
add
out
cltd
test
sahf
aas
aas
dec
cmpsl
mov
addr16
mov
cli
mov
es
xor
inc
dec
xchg
mov
in
dec
sub
mov
rorl
jae
cmp
mov
popf
jo
and
push
testb
dec
data16
pop
mov
fs
les
aad
in
sbb
or
jb
sub
add
cli
sub
sbb
hlt
pop
je
lock
aad
inc
clc
xchg
cwtl
xchg
xchg
movsb
imul
mov
nop
push
or
mov
cmp
icebp
and
pop
sub
clc
and
or
dec
xor
ficomps
mov
push
daa
push
sub
push
inc
push
shl
xor
push
imul
mov
cltd
shrl
xlat
inc
repnz
push
enter
lahf
test
jmp
mov
sbb
stos
jb
sbb
jae
xchg
gs
adc
push
or
or
add
pop
jne
scas
aas
xor
mov
sub
jno
loopne
iret
xorl
lods
stos
adc
add
in
test
pusha
xor
cmp
mov
daa
inc
loopne
in
adc
icebp
gs
xor
movhps
insb
dec
ja
daa
mov
adc
push
add
arpl
mov
or
inc
pop
adc
sbb
add
mov
inc
adc
aas
cmpsb
into
mov
dec
in
fidivrl
cmpsl
frstor
xor
js
stc
rcl
mov
jecxz
in
mov
out
lcall
cmp
gs
testl
push
das
mov
mov
out
mov
cmp
xor
outsb
or
int3
fucomi
ret
push
xchg
aaa
or
push
push
out
fistpl
push
into
test
sub
int3
sbbl
pop
cmp
xchg
sti
mov
xchg
or
push
push
inc
inc
bound
pop
pop
sub
xor
inc
test
xchg
mov
pushf
bound
jnp
mov
inc
add
add
hlt
ss
inc
jo
aam
push
jmp
dec
mov
sarb
mov
cmp
ja
ja
inc
xchg
and
not
sub
and
fdivrp
ret
mov
movsl
lock
into
jl
popa
in
inc
jne
adcb
inc
bound
sub
std
sbb
jo
loope
or
push
lock
repnz
sbbb
adc
cltd
jo
dec
xlat
jae
int3
push
ja
lahf
scas
int
push
mov
jmp
icebp
fmull
rolb
mov
fwait
ljmp
xchg
mov
pusha
clc
ja
pushf
dec
sbb
xchg
dec
repz
outsb
gs
xor
xor
in
jle
out
cmp
popf
popf
insb
or
inc
add
shl
pop
test
xor
pop
jle
sbb
sbb
jge
in
pop
arpl
cmc
push
pusha
fs
ret
notb
pop
fistps
sub
fdivl
inc
or
insl
adc
cltd
cmp
rcl
repz
mov
test
cmc
stc
enter
in
adc
push
mov
in
in
test
sub
icebp
jle
mov
mov
sub
sub
nop
cmpl
dec
and
cwtl
ret
mov
fadds
movsl
inc
mov
adc
imul
jae
pusha
lods
shlb
xor
mov
add
add
xchg
icebp
addb
data16
out
movsl
cltd
in
dec
fwait
movsb
fcom
inc
movsb
in
lret
dec
pop
icebp
pop
sub
shrl
mov
or
adc
stos
cld
cmpsb
inc
lods
aas
lea
sbb
ljmp
jae
pop
jl
repz
rorb
cmp
sbbl
sub
dec
xor
scas
insb
sbb
mov
ja
jmp
ja
ja
push
sbb
push
jae
js
cwtl
mov
cmp
push
sbb
xor
hlt
and
ja
mov
dec
out
leave
sbb
push
jbe
imul
sbb
pop
inc
fdivrl
cmc
fmul
mov
lods
cmp
rcrl
dec
ucomiss
je
js
popa
cmp
push
iret
pop
push
outsb
push
adc
adc
icebp
xor
loop
pushw
push
xor
cmp
xor
mov
insl
div
lret
inc
bound
ss
test
inc
mov
mov
mov
lcall
fwait
out
out
hlt
adc
dec
cmpsb
sbb
push
movsb
pop
test
add
mov
mov
inc
jp
mov
fidivl
popa
loope
ja
das
aas
jno
in
cmp
mov
xor
mov
and
pop
aaa
iret
and
xchg
cmc
imul
fwait
dec
push
mov
pop
iret
or
sub
std
ljmp
sub
jbe
jne
xchg
scas
jge
ds
cltd
bswap
scas
jne
jecxz
movsb
mov
xor
xacquire
pop
mov
movsl
pop
dec
lcall
mov
adc
dec
insl
mov
cmp
push
mov
mov
and
outsb
rolb
xchg
in
mov
je
inc
sbb
ret
dec
mov
jb
data16
sbb
or
sub
ja
fmull
inc
push
loope
outsl
scas
idivl
jle
sbb
or
fists
ja
rolb
je
jae
fidivs
adc
movsl
sub
jnp
add
inc
fisubl
fcoms
ja
push
std
loopne
mov
mov
jl
hlt
test
jecxz
lret
adc
fwait
jne
mov
imul
push
idivb
inc
add
cmpsb
aas
push
xor
or
outsl
add
pop
cwtl
and
pop
cmp
aaa
movsl
dec
and
mov
jbe
stc
xchg
sub
sub
adc
add
pop
and
das
mov
mov
fnstenv
jne
xchg
aas
lods
pop
or
sub
int
mov
xchg
insl
push
test
mov
shl
scas
pop
mov
jae
imul
inc
add
aaa
push
push
hlt
push
mov
test
push
cmp
mov
loop
outsb
push
push
pusha
cmpsb
inc
jns
daa
xchg
addr16
aaa
push
stos
popl
inc
jmp
loopne
mov
sub
stc
xor
jbe
mov
xchg
dec
adc
ja
daa
out
jmp
dec
mov
mov
push
mov
int
test
add
loopne
add
push
inc
cld
push
inc
mov
sub
sub
adc
lods
repnz
imul
rolb
fistps
fcom
jp
loopne
jae
les
jmp
cltd
je
cmp
adc
std
push
into
shll
pushf
popf
clc
mov
mov
add
inc
clc
rcl
add
stos
adc
sti
fneni(8087
jmp
adc
inc
push
add
cmc
push
fwait
add
mov
jmp
pusha
mov
mov
push
insb
shl
fcmovb
xor
arpl
sarb
in
xchg
sbbl
pop
adcb
dec
xchg
insl
inc
push
sbb
adc
xlat
loope
das
rcr
mov
push
mov
mov
push
iret
mov
inc
fisubrs
cmp
mov
jecxz
clc
ror
int3
sbb
roll
fildl
jle
fcomps
int
lahf
test
imul
popf
lcall
lds
xchg
addl
hlt
leave
test
push
cmpsb
rcrb
cmp
and
mov
ljmp
push
jne
mov
es
sub
xor
addr16
sbb
sbb
rclb
div
clc
add
fsubrl
jl
scas
pop
xor
sahf
in
adc
xor
jmp
pop
mov
ret
dec
dec
pop
jmp
pop
lods
orl
xchg
pop
pop
sbb
mov
jmp
sbb
std
insl
cmpsl
andb
or
inc
fs
xlat
ret
xchg
test
xchg
mov
dec
or
dec
mov
leave
fiaddl
divl
repnz
jmp
xchg
cmpsl
std
sub
jge
movb
mov
int
xchg
das
inc
aam
xor
dec
sub
cltd
cmp
push
and
push
cli
lcall
mov
inc
cmp
or
pop
std
or
and
pusha
ss
adc
jo
xchg
inc
mov
sub
xor
pushf
xchg
pop
cmc
dec
and
xchg
mov
dec
pop
imul
ret
inc
sti
insb
cmc
push
xchg
pop
pusha
push
popf
fwait
cmp
mov
maskmovq
testl
adc
arpl
mov
repnz
adc
rcll
bswap
lock
js
sub
fdiv
jmp
jne
pop
fucom
call
jo
ret
push
jnp
cmp
in
fnsave
divl
add
lret
mov
mov
repz
pop
dec
pop
mov
sbb
ja
pop
push
or
repnz
mov
sub
mov
lds
jl
mov
push
aad
mov
inc
jle
mov
mov
addb
pusha
dec
fisubl
movb
mov
inc
mov
jecxz
xchg
adcb
or
xor
push
nop
rcr
or
insl
mov
push
dec
cs
mov
sahf
cli
dec
dec
mov
add
fldl
inc
shll
push
out
lcall
clc
hlt
test
fdiv
sahf
cld
cmc
mov
push
les
popf
in
into
iret
sarb
dec
aaa
xor
ficoml
insb
scas
es
add
dec
scas
stos
fstpt
push
stos
daa
repnz
xor
dec
or
push
insl
dec
xchg
loope
add
sbb
add
arpl
outsb
das
add
scas
repnz
cmpsb
xchg
push
sub
scas
outsl
in
inc
stc
mov
ret
mov
cmp
out
cmp
sbb
loopne
lock
das
les
xor
dec
pop
lcall
stc
stos
shrb
add
mov
mov
cltd
add
xlat
imul
ds
xchg
faddp
iret
es
stos
cmpsl
icebp
out
rcr
imul
push
adc
mov
mov
hlt
pop
mov
sti
mov
adc
sahf
mov
pop
bound
jge
xlat
mov
adc
mov
test
clc
xor
cli
mov
pushf
push
icebp
aad
std
dec
loope
mov
ja
movsl
bnd
adc
mov
bound
mov
mov
or
aam
jmp
mov
inc
sub
cmpsb
and
rcl
ret
fistps
xorl
jg
inc
addr16
ss
pop
ds
iret
shr
jle
mov
pop
repz
fsubp
mov
xor
pop
push
push
lock
pushf
mov
and
xchg
add
jge
outsl
sub
jns
lret
xor
addb
sub
sub
dec
nop
and
in
dec
mov
stos
in
pop
mov
xchg
leave
inc
push
jb
cmc
jmp
dec
mov
lock
notb
mov
outsl
sub
in
mov
pusha
mov
xor
sub
xor
mov
int3
sub
sarl
hlt
jecxz
ja
test
pop
repz
les
loop
imul
pop
inc
xchg
imulb
jg
lds
stc
sbb
repz
rcrb
cs
sub
mov
gs
push
std
fsts
sti
stos
int
inc
cmp
xor
fnstcw
mov
pop
cli
aas
in
push
jle
mov
pop
lcall
je
cmpsl
jg
jbe
mov
pop
and
aas
enter
sbb
jbe
test
pusha
cltd
jle
add
inc
cli
into
hlt
inc
pop
xchg
rcl
rolb
and
jnp
fimuls
adc
leave
mov
push
mov
adc
mov
xchg
aaa
mov
dec
inc
inc
ja
or
jne
lahf
mov
sbb
mov
dec
push
icebp
mov
ret
mov
jnp
fadd
fdivl
dec
in
xchg
iret
test
fstl
dec
sub
out
xor
fxtract
in
sub
stos
movsb
cmp
cmc
dec
adc
mov
out
outsb
or
or
xor
push
dec
inc
jecxz
xor
or
xlat
pop
push
or
mov
sbb
sub
dec
jg
dec
mov
stos
jb
and
push
inc
mov
insb
pop
test
ficomps
adc
les
xor
imul
adc
or
mov
xchg
mov
lret
sbb
jns
mov
insl
sahf
test
push
pop
cmpl
dec
sbb
sbb
mov
pop
rolb
insl
inc
pop
xor
xchg
cmp
cltd
jo
stos
fcoml
aaa
push
aad
scas
out
mov
orl
mov
sbb
xor
and
data16
je
sbb
std
iret
scas
xchg
sub
int
notb
sbb
lahf
dec
or
mov
pop
xchg
dec
xlat
imul
xorl
cmp
pop
jecxz
loop
jecxz
jp
js
push
sub
jmp
jmp
cwtl
roll
inc
cmp
jnp
fimuls
and
ret
arpl
pop
lods
jae
xor
or
mov
dec
and
dec
out
dec
jmp
pop
gs
inc
mov
mov
dec
negb
xor
mov
pop
adc
out
leave
pop
push
push
insl
pop
pop
fadds
idivl
lahf
out
adcb
inc
or
pop
cmpsl
in
jne
pusha
jne
fisubs
repz
push
xchg
loopne
xorl
das
lret
adc
pop
setge
es
xchg
scas
clc
pusha
shrb
xchg
pop
imul
add
fidivrl
xor
out
jmp
or
push
mov
jb
cli
jno
sbb
stc
adc
orb
jae
xchg
ja
inc
lret
xorb
sbb
jbe
mov
sub
jmp
inc
dec
gs
and
ja
cmp
pop
ret
jb
adc
sub
out
inc
cmp
cmp
sbb
lahf
es
scas
push
lea
inc
or
int
mov
inc
adc
mov
fidivl
mov
pop
inc
xor
and
mov
aad
mov
outsb
pop
jl
arpl
or
cwtl
pop
mov
mov
mov
mov
add
xor
pushf
xchg
adcb
hlt
fadds
xor
js
sbbb
push
push
push
xor
mov
adc
xchg
dec
gs
test
in
sub
mov
mov
lds
fcoml
fs
jb
pop
fs
fwait
gs
test
and
dec
pushf
leave
fcomps
xchg
jne
aaa
call
popa
jg
jp
push
sub
push
scas
dec
lss
xchg
jp
in
add
in
mov
je
push
pop
and
add
stos
and
in
cltd
mov
mov
lret
push
add
lcall
xor
sub
imul
and
ljmp
jne
xchg
mov
mov
pop
mov
test
add
in
insl
dec
mov
dec
xor
scas
cwtl
mov
xchg
adc
lea
dec
bound
cmc
lcall
cmpsb
jnp
int3
jle
fdiv
scas
adc
imull
aam
and
jge
xchg
add
arpl
jno
lods
arpl
arpl
jne
mov
sbb
mov
dec
xchg
clc
addr16
cs
cmp
sub
inc
out
jl
int
push
mov
scas
dec
rcrl
mov
test
pop
dec
outsb
adc
out
rcrb
dec
sub
and
test
mov
loopne
xor
or
daa
sub
pop
mov
xor
jl
push
cmp
cmpsl
roll
sqrtps
out
fs
movsb
mov
push
fdivrs
leave
ficoms
int
cmpsb
sbb
hlt
shll
cmp
movsb
out
pusha
mov
cmpsl
fwait
sub
dec
gs
pop
fdivrl
movsb
dec
leave
jge
pushf
sbbl
gs
sub
and
imul
pop
jp,pt
stos
fdivrl
clc
mov
in
cmp
nop
ljmp
ret
lret
loope
dec
cmpsb
rcll
xchg
jno
adc
popa
mov
fistl
push
adc
dec
lea
sub
inc
add
orl
out
cmp
scas
mov
daa
xchg
insb
adc
popf
pop
cwtl
xor
ficomps
jbe
jecxz
xor
dec
repz
je
adc
cmp
mov
cld
cmp
test
mov
das
fnstcw
les
lahf
test
mov
or
dec
pop
sti
pop
push
in
fcmovb
dec
inc
hlt
rclb
ds
dec
cmc
cltd
mov
out
pusha
loop
mov
divl
js
outsb
mov
jp
ljmp
xchg
sbb
cld
push
add
jb
add
mov
mov
xorl
or
rcrl
lods
jecxz
shl
fidivs
inc
loop
mov
pop
pop
adc
stos
and
fistl
dec
shlb
push
dec
es
rol
popl
push
jno
out
mov
mull
clc
and
pop
xchg
in
dec
jecxz,pn
sbb
rolb
mov
mov
insb
mov
or
sar
je
dec
sbb
mov
cs
and
jns
dec
pop
into
xlat
ja
pop
xor
leave
or
sub
in
es
xchg
inc
and
in
inc
dec
sbb
and
xlat
inc
xchg
push
out
jl
xchg
stos
aaa
aaa
pop
xor
bound
insl
in
push
fistl
andl
subb
sar
mov
sub
aad
stos
mov
mov
push
add
sbb
das
lret
lret
test
cmp
in
dec
mov
inc
and
adc
rsm
inc
fisubrl
in
push
pop
sub
xchg
cmp
mov
sbb
pusha
lods
mov
in
fcompl
repz
adc
mov
mov
xchg
jle
mov
psrlw
sbb
sbb
jge
sbb
add
arpl
fmuls
int3
mov
and
add
xor
sbb
add
fidivrl
leave
fdivl
sub
sbb
push
fnsave
mov
jnp
and
xchg
jl
insb
into
push
aas
xor
out
cmp
adc
cwtl
push
scas
inc
lock
xor
xchg
cmp
sbb
adc
aam
iret
out
xor
mov
xor
daa
sub
xchg
cmp
mov
adc
ljmp
in
lods
inc
pop
scas
jg
shll
push
jbe
arpl
xchg
push
mov
imul
aad
adc
mov
inc
ss
cli
and
sbb
stos
call
cmpsl
lret
push
mov
xor
mov
lret
insl
js
lret
adc
inc
fsubrs
jge
or
imul
pop
mul
int
cmp
inc
not
jmp
nop
jle
daa
popf
adc
inc
mov
sub
sbb
push
and
dec
nop
orl
aam
or
mov
mov
mov
fmul
stc
dec
xlat
or
leavew
inc
lods
xor
push
dec
lea
dec
pop
cmp
pop
add
jno
imul
mov
int
test
dec
jecxz
pop
in
and
cmpsl
lds
movsl
mov
fnstcw
pop
or
dec
cmp
dec
mov
jno
xchg
rcll
std
aad
cmp
fisttps
aaa
rcr
in
in
popa
test
orb
shrl
pop
push
and
mov
out
fxtract
pop
push
mov
xlat
cmp
inc
jle
es
jge
in
xlat
hlt
iret
sbb
xchg
mov
or
sbb
mov
lret
adc
sub
incb
sarl
sbb
ret
mov
adc
adc
or
add
xchg
jp
push
int3
cmp
psllw
jne
add
sub
push
insb
dec
cmp
cmpsb
cmp
add
push
pop
rclb
push
testl
sbb
ret
fs
cmpsb
dec
fldenv
stos
leave
add
and
ret
and
cmpsb
mov
jl
xorb
push
dec
or
and
cmp
xchg
outsb
xor
dec
sub
outsl
mov
dec
pop
div
rcll
fisttpll
scas
inc
cmpsb
jl
and
and
call
int3
orb
daa
popa
jl
out
test
push
fcoml
sub
cmp
add
insb
icebp
les
cld
push
inc
nop
rclb
loop
in
push
decl
add
add
arpl
mov
mov
lret
aas
ret
fisubl
lret
push
cwtl
xor
sahf
jp
cmpsl
mov
jp
xor
mov
mov
test
xlat
ljmp
in
dec
popf
bnd
rcl
enter
mov
lret
or
andb
fstps
sub
xor
xlat
xor
sbb
mov
jg
movsl
and
xor
pop
lret
dec
imul
push
rdpmc
ret
stc
cs
lods
cld
and
call
mov
arpl
loop
xor
in
xor
rclb
js
mov
sub
std
xchg
repnz
adc
add
inc
test
jmp
daa
sub
inc
lret
mov
pop
sub
or
fst
leave
lcall
jb
cmp
mov
lcall
dec
jo
inc
jno
jg
mov
fstp
aam
add
xchg
mov
scas
shll
mov
sub
jb
icebp
fidivs
lds
sti
nop
mov
xor
or
rorl
inc
popa
lock
fbld
arpl
stos
mov
out
loopne
mov
and
sahf
or
dec
xchg
hlt
popa
cmp
sbb
outsl
push
les
add
and
test
addr16
adc
shll
into
js
sub
or
cmp
in
aaa
mov
or
out
pop
cli
xor
mov
cmc
sbb
dec
dec
jb
into
add
cmp
cmc
sarl
inc
iret
aad
enter
xor
jl
mov
cmpsb
xor
lods
jmp
int
push
or
cwtl
adc
ljmp
test
mov
jmp
outsl
or
dec
popf
lea
stos
push
aaa
cmpsb
inc
fldl
inc
push
push
cli
ss
insl
hlt
jl
jmp
push
jp
dec
mov
js
jb
shlb
sbb
divb
sub
std
imul
movsb
or
xchg
mov
sub
mov
dec
int
shrl
shrb
dec
sti
lock
jne
adc
repnz
mov
jmp
aam
rcl
shll
mov
ljmp
sub
test
js
test
lret
jae
clc
sub
icebp
hlt
or
fwait
test
adc
xchg
pop
push
jle
mov
sub
std
jbe
shrb
test
mov
push
mov
enter
pop
xchg
andl
add
xor
lea
js
push
mov
mov
dec
xchg
pop
dec
dec
in
sbb
lret
fildll
jmp
xor
call
sub
jg
inc
mov
pushf
out
mov
arpl
int3
popa
sub
fstpt
mov
cmp
divb
mov
jbe
inc
call
pop
jnp
xchg
cmpsb
loope
mov
andl
sub
test
scas
sub
add
shl
ret
and
gs
pop
jp
mov
inc
fistl
daa
jnp
scas
cwtl
adc
sub
scas
adc
push
sbb
loopne
jns
data16
mov
negb
inc
pushf
add
sbbl
mov
pop
ljmp
js
addr16
dec
mov
jb
xlat
mov
mov
adc
neg
in
frstor
sub
jmp
in
inc
sahf
cmpl
adc
sub
sbb
sarb
pop
xor
sub
outsl
call
fistpll
mov
pop
loope
fs
mov
cmpsb
mov
das
out
mov
sbb
ss
adc
jge
test
aam
and
push
add
fisttps
sub
cmp
fildll
stc
repnz
mov
or
xor
iret
xchg
mov
pop
das
adcb
stos
jle
fcoms
sub
push
cmpsb
push
and
lret
inc
jb
pushf
inc
jmp
adc
mov
jmp
jb
lds
daa
loop
xor
lret
pusha
add
lcall
push
and
ds
mov
xor
ret
movsl
jne
dec
mov
mov
sbbl
mov
mov
div
rorb
rolb
dec
jne
push
sbb
cmp
xlat
fidivl
data16
add
frstor
jle
xorl
and
fistpl
cld
aam
pop
pop
inc
iret
aas
cmp
push
ja
push
in
push
aad
inc
gs
adc
aam
xchg
fimuls
into
mov
mov
test
test
lretw
mov
mov
ljmp
push
sbb
jbe
pop
xchg
lea
daa
and
cmp
push
roll
movsl
inc
pcmpeqw
sarb
jae
jnp
arpl
xchg
movsb
and
shll
and
cltd
sub
add
movsb
xor
sahf
stos
rorl
mov
cmp
pop
aas
clc
in
lea
push
jecxz
fbld
sub
jp,pt
dec
pushf
lods
jg
stos
cltd
test
nop
or
out
test
mov
xchg
mov
lcall
jns
int3
cli
insb
xchg
mov
xchg
adcb
lcall
push
sahf
jge
sub
int
insb
mov
loopne,pt
ret
das
imul
fists
push
dec
inc
popa
cs
dec
arpl
les
jp
in
repnz
cmc
inc
lret
cmp
xchg
push
jl
enter
xchg
xor
cld
inc
lret
push
cltd
out
fucomip
movsb
test
cltd
lock
jecxz
mov
pop
std
mov
mov
mov
cs
imull
and
imul
in
xchg
xor
outsl
sub
cld
push
xchg
out
sbb
js
mov
mov
cmp
xchg
mov
fwait
cwtl
mov
iret
test
mov
xchg
ljmp
in
mov
imul
outsl
mov
or
mov
ja
jecxz
mov
call
dec
stos
scas
xor
dec
dec
jp
sahf
mov
mov
sahf
push
out
push
pop
imul
nop
leave
xor
push
dec
sub
call
mov
xchg
rcl
sbb
pop
jmp
push
in
out
in
insb
lret
pop
stc
movsb
cmp
and
push
lods
push
dec
sahf
cmp
movsb
push
sbb
lock
pop
jle
adc
aad
gs
lret
xchg
and
mov
push
mov
pop
xor
mov
dec
lds
sub
sub
scas
ljmp
pop
fiadds
pushf
mov
or
pop
hlt
xor
lea
repz
or
and
xchg
dec
sub
enter
adc
jge
rcr
out
imul
jb
dec
cmp
or
scas
inc
stc
pop
loopne
outsl
clc
stc
imul
inc
pop
lods
mov
sub
aaa
dec
movsb
iret
push
cmpsb
mov
andnps
hlt
rcr
fidivrl
cs
mov
xor
pop
out
inc
shll
cwtl
lret
mov
mov
leave
xchg
scas
jle
push
cld
lods
mov
cmp
pop
jno
adc
arpl
lret
xor
mov
lds
and
sbb
sub
jno
adc
inc
inc
dec
out
clc
not
push
push
aam
xor
xchg
xchg
sbb
push
inc
fsts
or
data16
out
xor
xor
push
loop
jns
cmp
adc
popf
scas
jnp
ror
or
iret
sbb
addr16
lea
insb
hlt
and
nop
adcl
xchg
sti
mov
adcb
jb
sub
fs
inc
int
testl
scas
cmp
icebp
pop
fisttpll
push
mov
mov
pushf
repnz
sbb
or
and
or
jmp
jne
cld
or
inc
xlat
call
mov
sbb
push
das
scas
in
jge
out
fistpll
cmp
repz
inc
fbld
fs
cmp
dec
rcr
pop
sbb
mov
int
jo
ret
and
jne
or
cmc
out
xchg
xor
pop
cmp
jno
fmul
xchg
rclb
int
mov
adc
pop
in
ss
out
dec
ja
push
push
outsb
out
cld
push
push
js
cmp
scas
clc
cld
lahf
adc
mov
icebp
pop
pushf
aad
sub
push
addb
xchg
dec
cmp
cmp
popa
pop
sub
jb
sub
xchg
xchg
pop
push
dec
movsl
insl
aas
call
pop
iret
std
call
mov
or
imul
xchg
xchg
adc
lret
outsb
sbb
cmp
leave
mov
stos
push
test
icebp
mov
xchg
sti
mov
jno
stos
xor
arpl
pop
dec
add
js
es
jnp
pop
inc
sbb
clc
divb
pushf
xchg
or
or
or
inc
aaa
leave
inc
dec
add
mov
clc
sbb
clc
cmc
mov
dec
cwtl
lods
push
mov
adc
dec
push
cltd
pop
lds
test
push
xchg
scas
xchg
push
jl
pop
mov
outsb
fwait
daa
ljmp
ss
cmp
in
push
test
into
mov
sub
test
cld
sahf
jmp
xchg
jbe
mov
push
add
adc
push
ljmp
mov
aaa
test
sub
fucomp
mov
push
fdiv
lahf
popf
insb
add
sbb
mov
sub
xor
jle
mov
jl
xor
xchg
in
mov
jmp
cmpsl
aad
add
xchg
sbb
cld
adc
adc
out
jle
repnz
sar
pusha
dec
cmpb
test
jne
in
mov
popf
cli
insl
mov
or
subb
call
jl
cmp
das
adc
ss
pop
js
sub
pop
dec
sub
loope
pusha
out
nop
push
pop
movsb
mov
pop
lret
cmp
adc
dec
arpl
mov
imul
mov
inc
adc
push
ret
in
xchg
inc
imul
mov
ljmp
aas
outsb
jp
adc
xor
pop
mov
mov
fnclex
jg
push
push
orl
xchg
fcompl
xchg
cs
sbb
and
cmc
jp
in
ret
jb
mov
je
xchg
or
fists
imul
mov
in
mov
jle
xchg
ss
inc
test
into
xchg
xchg
ret
dec
pop
je,pn
mov
jo
or
xchg
push
sahf
gs
fistl
cmp
cmpsl
inc
or
pop
dec
add
test
and
aas
fisubs
mov
xor
cmpsb
scas
sub
jge
test
imul
imul
sahf
sub
dec
out
enter
mov
inc
jne
jnp
push
pusha
cmp
pop
mov
mov
rcrb
repz
jmp
pusha
lods
sub
ljmp
sti
out
into
xor
lods
imul
fisttpl
inc
pop
mov
sbb
sub
ret
imul
iret
mov
repz
dec
lahf
fstenv
decb
loope
push
push
sub
pop
pop
xchg
push
out
aaa
mov
fistl
lahf
push
daa
xchg
jg
mov
or
fsubrs
add
mov
add
jo
mov
leave
xor
sbb
fsubl
lcall
mov
add
je
add
sub
aad
insb
sbb
xchg
or
fsubl
or
mov
loopne
dec
dec
out
mov
xor
sarl
daa
mov
pop
andb
movsl
mov
push
push
jge
adc
pop
stc
movsb
gs
xor
add
push
mov
leave
inc
das
jne
nop
inc
out
aas
fimuls
mov
mov
gs
popf
jmp
mov
iret
mov
and
jl
adc
inc
rcl
sbb
and
jg
inc
mov
shr
ficoms
fs
and
cli
mov
aam
jecxz
sub
repz
pop
sbb
mov
push
dec
add
push
mov
imul
pop
pop
mov
or
lock
jge
inc
inc
dec
scas
stos
popa
push
les
cmp
fisubrl
mov
int3
addr16
adc
ss
dec
addb
jp
xor
pop
push
insl
test
stos
mov
pop
sahf
mov
inc
iret
mov
jmp
pusha
mov
sarl
dec
clc
cs
mov
and
and
and
xchg
cli
or
and
jle
rclb
inc
fs
xchg
andl
mov
int3
or
mov
imul
mov
ds
jne
push
add
aad
jb
dec
mov
xor
add
dec
cli
mov
in
fadds
sbb
sub
inc
mov
add
xchg
sub
js
pop
xchg
scas
mov
cmpsb
mov
mov
sub
ficoml
bound
jno
rolb
ret
add
inc
jae
pop
stc
mov
push
jo
pop
dec
jo
cmp
mov
repnz
shll
lea
callw
sarl
sahf
jecxz
stc
and
sub
mov
jbe
lret
push
insb
cwtl
dec
push
inc
mov
mov
pop
fsubr
pushf
movsb
das
ljmp
add
icebp
push
fildl
push
jmp
es
xor
cmpsb
test
mov
xchg
dec
jne
pop
push
sbb
mov
cmp
in
hlt
push
xchg
cmpsb
lcall
call
cmp
add
cmp
sbb
test
mov
out
lahf
xchg
xchg
adc
lret
push
cltd
imul
jl
lret
leave
inc
dec
shl
sbb
pop
in
cmp
jbe
jne
in
fdivrl
pop
push
shrl
pop
sub
outsb
nop
loop
jge
ret
pop
js
test
int
dec
mov
and
jp
adc
out
pop
fidivrl
sbb
movsl
cwtl
rorl
shll
shr
out
sub
push
loop
insl
lahf
xchg
mov
ds
ret
push
jmp
pop
pop
pop
and
xchg
add
outsb
and
andl
popa
das
xchg
inc
sub
mov
dec
sysexit
orl
sarl
pop
out
outsl
adc
sbb
add
sub
xchg
adc
xor
sub
js
fucompp
lret
sub
push
stc
cmp
fisubrs
lods
pop
or
fisubrl
push
nop
test
inc
fwait
inc
ret
out
mov
clc
push
add
sub
outsb
and
lahf
dec
mov
cmp
xor
loope
cs
dec
inc
jae
pop
mov
test
pop
mov
fwait
jmp
enter
mov
lds
je
lds
xlat
push
aaa
lea
mov
imul
std
xchg
jb
cli
mov
pop
ss
cmp
lds
mov
and
pop
jns
pop
jmp
sbb
pop
notl
sbb
popa
stos
mov
push
jle
ficoml
dec
sbb
jo
and
and
orl
out
pop
adc
cmp
pop
push
rclb
cmp
push
xchg
addr16
sbb
in
push
test
adc
mov
pop
dec
jne
mov
sbb
add
inc
out
insl
jae
lret
addr16
or
lea
dec
jno
xorb
jle
xchg
loopne
jno
pop
dec
mov
mov
dec
fwait
mov
sahf
mov
and
mov
fadds
mov
pop
cmp
aas
fildll
cmp
xor
add
jnp
and
mov
or
test
mov
mov
gs
mov
subb
ljmp
sbbl
out
jecxz
in
fidivl
adc
sub
frstor
sbb
adc
pop
xchg
repnz
mov
cvtps2pi
leave
mov
stos
nop
push
icebp
or
add
push
dec
jl
jo
pop
dec
sub
popa
add
or
push
sti
sub
dec
out
cmp
sub
dec
cmp
aaa
shlb
xchg
xchg
push
xchg
pop
jno
loope
push
enter
xor
dec
addr16
mov
into
pop
bnd
fwait
xchg
push
shrl
and
adc
xlat
xchg
es
adc
aad
cmp
adc
jle
jge
jno
loopne
jp
xchg
bound
jnp
add
outsl
cltd
ljmp
dec
xchg
mov
sub
adc
sbb
shl
inc
in
sub
jnp
and
fcmovnu
xchg
push
jp
pop
lahf
xlat
xchg
pop
add
xchg
cmp
jl
dec
and
loope
sbb
lcall
push
cwtl
aam
in
sub
inc
icebp
call
mov
adc
xchg
rolb
inc
push
out
jns
adc
inc
mov
mov
cmpsl
fcmovne
add
ret
movsl
sbb
cwtl
mov
xchg
xor
ret
fsts
rol
mov
mov
push
xchg
icebp
out
cld
sahf
xchg
aaa
mov
or
sbb
insl
dec
xor
adc
jp
addl
mov
mov
sbb
jp
add
push
pop
fcomps
adc
shlb
sbb
stos
lret
cli
cmp
pop
stc
in
mov
test
movsl
dec
cmp
xor
lea
in
push
icebp
add
mov
jecxz,pt
push
pop
sbb
jne
add
pop
popa
loopne
out
loop
aad
xor
or
jno
movsb
dec
loopne
push
lcall
push
cmc
andl
mov
pop
movsb
add
dec
in
mov
insb
fbstp
inc
jg
cld
cld
mov
mov
inc
ja
push
hlt
pop
adc
push
repnz
sub
push
pop
pop
xor
sub
dec
popa
test
std
push
jl
adc
mov
lret
pop
add
sbb
dec
mov
in
cmp
cwtl
add
xchg
push
inc
dec
push
in
outsb
mov
out
les
ret
or
cmpsl
out
jb
aad
inc
mov
xchg
arpl
and
push
jns
rolb
into
imul
or
outsb
and
mov
sahf
push
or
mov
aaa
adc
and
aam
cmpsb
in
jne
xchg
pop
jle
push
adc
aam
cmp
out
adc
aam
mov
or
rcl
jg
shrl
xor
out
in
ljmp
scas
out
test
ja
push
dec
mov
loop,pn
jno
pop
iret
lret
ja
sbb
mov
mov
add
inc
sbb
gs
inc
inc
push
pop
test
cmc
add
xchg
fmul
pushf
clc
mov
lcall
scas
andl
mov
cs
add
jle
cmpsl
outsb
push
cmp
push
xchg
inc
test
jo
shrb
add
pushf
pusha
addr16
ret
loopne
inc
ret
push
outsb
cwtl
stc
inc
stc
cmp
mov
mov
dec
roll
outsb
and
mov
movsb
rclb
jg
xor
je
jb
push
adc
push
mov
call
addr16
hlt
test
pop
mov
sub
call
shrl
pop
jl
mov
sbb
push
je
xor
insl
dec
dec
scas
fdivrs
imul
xor
sbb
call
jnp
out
mov
icebp
sbb
rclb
gs
aaa
into
mov
cli
test
aas
pop
js
adc
loop
out
jmp
js
mov
shll
push
test
test
popf
xlat
push
push
test
inc
ret
loopne
jbe
emms
push
jmp
mov
into
cmp
jae
cld
adc
and
jecxz
jo
add
and
lahf
pop
stos
data16
cmc
xchg
int3
addb
icebp
sbb
ret
jge
insl
out
fcoml
pop
fwait
sbb
stos
movsl
fs
inc
mov
dec
ss
fdivrl
roll
fwait
mov
shlb
pop
pop
out
scas
mov
ja
mov
cmp
jnp
mov
gs
pop
call
pop
sti
ss
xchg
push
inc
dec
rorl
jp
mov
enter
loope
mov
sub
lods
test
xor
mov
jg
rclb
and
jbe
scas
clc
fdivrl
in
out
jl
mov
imul
mov
adc
dec
aas
out
fwait
lods
push
add
and
mov
jae
lods
sub
pop
cmp
adc
ljmp
mov
sbbl
cli
cs
mov
inc
out
push
mov
mov
hlt
ret
pop
sub
mov
ret
repnz
rcrb
sbb
mov
sub
fmull
loope
mov
out
ljmp
cld
dec
mov
mov
dec
cmc
mov
pop
push
sbb
jne
sbb
inc
lcall
lret
cli
push
jae
cwtl
cwtl
scas
inc
dec
xchg
sub
pop
and
push
mov
pop
push
pusha
in
lret
mov
add
out
adc
es
add
mov
pop
dec
in
and
pop
add
in
into
mov
rclb
mov
jg
data16
test
lods
je
dec
inc
lret
jge
mov
xchg
adc
mov
bound
mov
cmc
mov
dec
cs
xchg
mov
popf
jae
call
pop
js
lcall
aam
mov
imull
mov
push
scas
nop
sub
aam
lahf
lea
jb
push
mov
popa
stos
sahf
cltd
add
mov
mov
por
and
int
out
cmpsl
lret
daa
scas
fidivrl
adc
cld
repnz
jb
jne
jbe
js
cli
push
dec
cli
and
and
dec
aam
bound
cmpsb
xchg
jns
jmp
xchg
push
es
xor
aas
popf
int
mov
pop
stc
mov
ds
outsl
sbb
mov
daa
and
push
popa
fcos
xchg
mov
out
xor
and
je
scas
or
cmpsb
and
jo
mov
and
and
mov
in
movsb
or
and
sbb
xchg
push
sub
int
test
bound
jmp
mov
mov
adc
dec
in
test
mov
lret
inc
mov
jmp
add
push
mov
mov
push
ljmp
mov
cmp
sub
faddp
stc
push
subl
inc
js
sbb
lds
mov
lcall
jmp
pop
cltd
add
sahf
ror
jb
into
cwtl
mov
mov
cltd
imul
mov
push
xchg
xchg
int3
addr16
pop
sub
jo
popa
sbb
mov
ret
jge
pop
push
int
clc
rclb
jnp
in
jb
adc
icebp
mov
jnp
js
mov
dec
xor
enter
out
jnp
ss
rclb
iret
pop
outsl
push
jp
xchg
add
fidivs
shlb
push
and
add
int
sbb
mul
ss
mov
dec
fwait
out
jmp
les
je
lods
cmp
rolb
mov
dec
inc
jecxz
inc
scas
cli
dec
call
add
cltd
fwait
shll
xchg
mov
push
inc
mov
out
add
sahf
xchg
jl
imul
ljmp
outsb
inc
push
push
sti
jg
lret
dec
jns
mov
mov
lret
adc
insb
xor
adc
sub
cmp
xchg
ret
ss
test
jno
sahf
cltd
push
xor
les
bound
jecxz
mov
dec
cmp
sub
movsb
pushf
push
mov
and
jnp
sbb
rcrl
add
js
adc
into
inc
mov
cmp
aam
push
repnz
push
and
aaa
pop
push
xchg
pop
push
roll
shr
adc
nop
jns
and
testb
in
hlt
sub
movsb
shlb
or
and
mov
mov
mov
lods
jb
gs
jmp
clc
es
pop
jne
adc
int3
sub
cmpsb
dec
jb
push
imul
icebp
das
push
movsb
jmp
int
adc
jnp
cmp
popf
mov
addr16
call
mov
js
imul
sub
push
dec
ret
xor
push
lock
pusha
jge
cmc
out
fnstcw
sar
jl
fcompl
push
mov
nop
jp
lcall
daa
loop
xchg
jae,pt
test
jmp
cmpsl
data16
jp
pop
add
cmpsb
lods
lret
movsl
bound
cmp
and
ja
aad
sub
pop
push
pop
mov
cmp
test
out
jne
inc
pop
add
dec
cli
inc
xchg
aas
add
xchg
out
les
mov
mov
outsl
loope
test
adcl
push
jp
mov
fbstp
dec
cmp
push
data16
pop
and
es
fwait
clc
xchg
xchg
lea
mov
adc
pop
mov
icebp
ds
loopne
mov
mov
aad
xchg
xor
mov
roll
sub
lcall
and
mov
in
jmp
cmp
idivl
test
or
outsb
jo
mov
fucomi
push
and
bound
mov
dec
movl
data16
cmp
jge
enter
in
mov
movsb
shlb
cmp
out
mov
bnd
mov
outsl
aad
dec
pop
ljmp
or
push
cmp
cmp
mov
movsl
mov
mov
mov
scas
ds
data16
cwtl
fildll
xor
fistpl
jge
mov
sahf
mov
pop
jno
out
add
in
test
push
andb
xor
push
pop
ja
xor
push
cmpsl
rcl
xor
cmp
xchg
sahf
out
pop
shl
lcall
loope
xlat
or
pop
jo
shlb
fwait
dec
sbb
jl
mov
mov
scas
clc
xor
cwtl
push
out
inc
sbb
jmp
cmpsl
jecxz
mov
add
or
mov
pusha
out
mov
pop
dec
mov
add
add
andl
inc
mov
jno
jl
pop
sub
stc
push
xchg
lret
cmp
insb
arpl
popf
or
push
add
push
rcr
xor
push
mov
adc
or
mov
xor
enter
jecxz
mov
adc
lds
int3
push
data16
fdivrs
dec
dec
xchg
fmull
mov
push
mov
movsl
push
arpl
mov
and
pop
bound
push
mov
mov
jmp
mov
inc
cli
pop
dec
ret
push
jae
loope
clc
push
ja
mov
pop
es
jmp
pop
inc
out
ja
xor
adc
xchg
inc
push
jne
out
addl
rorb
mov
daa
sbb
int
push
jge
aas
pop
dec
and
xchg
pushl
xor
pop
xor
outsl
cmp
dec
dec
dec
sub
repz
jno
xor
aaa
nop
mov
mov
jno
xchg
pusha
cmp
lods
or
aas
lret
inc
lods
jo
xchg
push
addl
sbb
lret
xchg
push
sub
or
pop
out
dec
repz
icebp
add
add
stos
cmp
dec
xor
pop
add
push
jns
pop
or
test
daa
or
cmp
mov
cmp
cmp
std
push
pop
aam
jg
shll
add
in
jb
fcmovnbe
punpckhwd
gs
sbb
and
aad
fstl
add
repnz
sbb
push
movsb
andb
pushf
repz
inc
push
mov
jg
icebp
jb
data16
fsubrs
leave
repnz
xchg
pop
pop
adc
pusha
adc
cmpsb
hlt
rcll
int3
inc
inc
add
mov
xchg
jbe
mov
fdivr
or
jle
adcb
sbb
sub
jmp
adc
push
adc
call
cld
or
in
dec
clc
std
cld
jbe
jl
in
dec
lret
mov
push
sub
inc
xlat
adc
movsl
loopne
mov
mov
xchg
clc
in
mov
in
mov
pop
cwtl
sarb
pop
es
inc
es
shl
push
out
inc
or
sub
lret
sbb
fcomi
and
xor
mov
outsb
add
pop
xor
in
inc
xor
jno
pop
push
mov
lret
in
test
ret
iret
mov
and
jb
mov
xchg
das
cmp
int3
cli
mov
cltd
dec
nop
xor
sub
out
mov
add
jecxz
dec
push
mov
and
arpl
jecxz
mov
and
leave
clc
adc
cmp
sbb
jb
mov
jne
adc
adc
aas
in
add
lret
lret
xchg
dec
das
cmpsl
pushl
outsb
fmull
das
scas
in
shl
adc
and
insb
call
testl
pushf
jmp
repz
mov
out
add
mov
jo
je
shl
stc
outsb
mov
add
and
outsl
fidivl
in
jmp
mov
or
iret
and
sub
mov
repz
jge
jb
push
adc
add
sbb
nop
sbb
call
inc
cld
fidivrs
mov
dec
push
mov
dec
fdivrl
sbb
xchg
lods
adc
into
push
stos
jb
mov
add
mov
scas
hlt
add
orl
push
jae
mov
les
enter
push
push
xchg
add
push
xchg
xchg
cmp
sbb
shrl
xor
jno
call
push
repnz
jp
mov
fdivr
dec
pop
and
jno
or
sub
aas
aaa
xor
lahf
mov
add
in
xlat
mov
loop
cmp
test
inc
add
jle
test
jae
xor
out
mov
push
inc
fsubrs
and
insl
push
sarl
daa
cmp
mov
adc
lods
stc
fwait
jle
das
push
add
jmp
add
pop
fadd
fmull
lahf
xchg
push
out
repz
xchg
sti
inc
pop
pop
lahf
ficompl
pop
fisubrs
lahf
into
hlt
fsts
and
sbb
lea
into
iret
popl
nop
mov
ffreep
outsb
insl
xor
jge
xchg
sub
jb
xchg
adc
lret
inc
inc
mov
in
out
movsb
repz
in
pop
adc
xor
xrelease
rcrb
sahf
sbb
mov
ja
lds
fwait
sbb
mov
les
xor
xchg
insb
nop
lea
test
push
int
xor
sbb
sub
test
xor
sbb
aas
xchg
push
push
mov
stc
dec
add
imul
jnp
adc
leave
xchg
mov
jbe
sar
in
dec
loopne
mov
repnz
mov
data16
jle
sub
iret
adc
jno
push
pop
sbb
mov
push
popf
push
pop
xchg
inc
push
sbb
xchg
outsl
mov
dec
cmp
stos
in
mov
push
gs
mulb
sarb
sbb
hlt
push
sbb
out
cld
adc
sbb
add
lret
mov
and
cwtl
adc
mov
dec
pushf
fisttps
push
mov
or
sub
mov
mov
pop
mov
call
out
sbb
mov
cmp
jo
stos
pop
loope
insl
and
xor
int3
mov
pop
fidivs
test
add
jno
xchg
fldenv
sub
pop
in
pop
add
pop
cltd
and
mov
das
fstl
dec
lods
jp
sub
dec
xchg
sbb
roll
cwtl
inc
leave
pop
in
push
repnz
sarl
push
jb
push
out
pop
fdivrl
stos
jp
sbb
lods
mov
push
jmp
pop
cmp
push
jl
add
push
fildll
stos
dec
jmp
leave
cmp
mov
maskmovq
negl
stc
mov
insb
push
arpl
mov
mov
or
jecxz
cmp
cmp
xor
cmp
mov
inc
mov
gs
mov
inc
into
xor
mov
arpl
loop
cmpsb
sti
push
sub
inc
push
adc
cld
mov
dec
and
adc
out
out
pop
cltd
enter
mov
insb
jg
mov
loope
push
and
dec
cmp
dec
add
ret
mov
jb
lret
addb
loope
es
in
xchg
sbb
into
jb
mov
and
dec
push
mov
fmul
es
add
pop
lds
movsl
dec
xchg
test
decb
push
jno
sub
jne
out
jp
mov
or
in
sti
xchg
xchg
xor
xchg
mov
cmp
sbb
sbbl
mov
stos
dec
adc
cltd
fisttps
aam
es
pop
sub
push
mov
ljmp
stos
cmp
enter
aaa
clc
mov
sub
shrb
jne
jns
imul
popf
loopne
push
ficompl
xchg
or
xlat
xchg
cmp
xor
jp
and
out
push
dec
sbb
ljmp
pop
or
mov
subb
jnp
xor
mov
ljmp
lds
hlt
inc
fwait
mov
cltd
or
cmc
enter
lret
lret
adc
mov
jle
xchg
out
loop
aam
or
inc
mov
push
pop
call
xchg
test
mov
clc
add
test
std
sub
enter
jp
push
popa
dec
dec
xor
insl
ljmp
pop
mov
mov
bound
sbb
or
mov
sti
into
mov
addl
aad
int3
xlat
push
jg
fs
xor
andl
in
fldcw
and
push
push
and
or
jno
jecxz
mov
pop
loope
mov
dec
jge
mov
pop
cmpsb
mov
mov
pop
pop
adc
clc
dec
mov
mov
in
jo
repz
pop
mov
das
mov
andl
add
es
jbe
xor
lods
ja
mov
in
adcl
lea
push
sbb
fs
movsl
jmp
adc
jle
mov
mov
les
cmp
cltd
mov
push
push
push
cmpsb
lcall
xchg
fnstenv
cmpb
les
xor
cmc
rcrb
mov
mov
enter
in
test
invd
outsl
movsb
dec
xor
mov
cld
or
push
outsb
xorb
addl
dec
jecxz,pn
dec
push
add
stos
divl
ds
fcomi
lret
jbe
into
iret
addr16
dec
std
push
jle
xor
test
mov
xchg
mov
lds
aaa
lahf
mov
es
mov
negl
or
lods
cwtl
pop
pop
mov
and
cmpsb
pop
mov
lcall
arpl
cs
pop
and
add
adc
xor
nop
add
or
push
aad
push
jmp
sbb
mov
hlt
xor
cli
aas
or
mov
sbb
mov
adc
pop
fs
cld
stos
jns
cs
xor
pop
adc
repnz
mov
cmp
ficompl
hlt
andb
xchg
push
movsb
psllw
sub
mov
rclb
mov
dec
lods
and
inc
or
repz
mov
xchg
mov
rcrb
dec
fimull
dec
lcall
xchg
mov
std
pop
cmp
in
push
ljmp
fiaddl
es
aad
lds
add
pop
movsb
imul
xor
int
clc
call
inc
jl
xlat
jmp
dec
push
je
gs
test
call
fcom
ret
inc
mov
js
or
addb
and
and
imul
mov
add
mov
and
call
hlt
xor
shrb
push
xchg
test
rcll
lods
mov
lock
mov
jmp
imul
imul
pop
lods
aam
mov
mov
add
in
jg
bound
inc
insl
pop
dec
mov
sbb
or
lret
pop
cwtl
out
and
mov
nop
aad
jne
and
mov
pushf
les
mov
sbb
enter
aas
pop
mov
and
mov
mov
lock
lds
fcompl
pop
xchg
xor
cltd
andb
pop
mov
adc
sub
cmp
add
xor
lds
sub
das
xchg
rorb
shrl
mov
mov
into
mov
sti
sub
mov
xchg
sbb
adc
mov
add
repnz
lcall
test
push
cltd
repnz
rcll
add
fcomps
push
xchg
xor
jmp
push
pop
inc
fwait
test
or
out
jle
cs
bound
movsb
push
mov
or
test
mov
enter
cld
pop
daa
jmp
add
jae
out
xor
sub
sbb
cmp
inc
rolb
js
jbe
mov
testl
nop
pusha
clc
pop
pop
sbb
movsl
rcll
xchg
iret
enter
add
cmp
out
dec
mov
jp
ja
lea
mov
inc
fnstenv
addr16
fstpl
jnp
lcall
pop
fmuls
xchg
cmp
pop
call
es
in
lcall
sti
jo
mov
dec
pop
jp
outsl
cwtl
cmp
sti
sarl
jo
aad
jo
push
mov
xor
xchg
and
aam
lahf
push
dec
or
les
daa
push
jg
sub
leave
fstpl
or
pop
jmp
add
mov
icebp
add
cwtl
nop
dec
jl
out
and
sbb
jg
into
add
jno
std
xor
fstpt
push
arpl
movl
dec
repz
adc
cmp
enter
loope
fs
or
jge
mov
dec
push
gs
stc
cmp
xor
jecxz
mov
inc
out
push
pop
in
xchg
mov
jmp
subl
rcll
out
sbb
push
push
sub
or
iret
sbb
fsubrl
pop
dec
in
and
xor
xchg
lret
mov
xchg
sub
inc
mov
push
inc
cmp
rcll
mov
imul
add
fistps
adc
scas
and
shll
subl
shlb
add
xchg
hlt
push
fnsave
ret
loope
int
cmc
stos
mov
xchg
lods
mov
repz
scas
mov
jnp
lahf
call
insl
cmpsl
pushf
push
adc
dec
popf
xor
out
add
test
push
dec
sbb
subb
out
xchg
je
into
ret
int3
mov
fimuls
push
ret
push
sub
sarb
int3
pop
push
ficoml
icebp
in
in
lock
loopne
sbb
popa
xchg
mov
adc
cmc
lcall
sub
rorl
aas
enter
stos
fdivp
push
inc
adc
mov
mov
cmp
xchg
bound
mov
push
ret
adc
jae
mov
sub
push
clc
add
ret
jb
mov
push
mov
and
add
mov
mov
mov
cmp
sub
mov
mov
orl
mov
xchg
int
xchg
mov
jecxz
adc
adc
pop
ret
push
xchg
mov
push
inc
arpl
jg
sub
outsb
mov
pop
arpl
rolb
xlat
shr
adc
mov
popa
scas
mov
push
pop
push
or
bound
mov
mov
imul
mov
xor
pop
dec
push
and
cmp
mov
gs
pop
aad
test
mov
xchg
mov
aas
or
cmpsl
testb
dec
sub
imul
add
daa
pop
iret
mov
int
pop
cmp
pop
jbe
adc
mov
adc
sbb
fdivrp
jl
mov
mov
stos
lock
jp
popa
pop
lods
mov
xor
jge
bound
lcall
imul
ret
dec
inc
xchg
mov
daa
sub
outsl
add
pop
mov
scas
push
jle
xchg
push
cmp
in
mov
popa
and
sbb
cld
xor
repnz
adc
and
inc
call
cltd
aaa
mov
xchg
in
imul
sub
xor
push
push
sbb
lods
ret
adc
inc
ss
add
cld
cmp
fisubrs
and
or
sarb
add
pop
push
cmpsl
xchg
imul
faddl
fnsave
mov
int3
call
add
inc
mov
test
ficoml
mov
outsb
movsb
mov
add
push
faddl
mov
or
scas
push
fucomip
sub
ds
push
les
mov
pop
mov
js
xchg
xchg
mov
mov
fwait
xor
mov
or
cmp
dec
jno
sub
pop
dec
pop
leave
or
inc
sub
fidivl
dec
stc
lods
lcall
or
pop
jmp
adc
cmpsl
dec
push
pop
inc
and
xor
inc
xor
adc
hlt
sub
and
leave
nop
mov
jnp
insb
sub
ret
lret
and
cmc
dec
inc
dec
cmp
or
sbb
jo
jne
lret
pop
adc
daa
bound
data16
out
pop
cs
loopne
sub
push
dec
lcall
xchg
rcrl
xchg
sub
nop
sbb
dec
jno
mov
mov
lahf
cli
movl
mov
hlt
shrl
mov
fildl
push
shll
jp
in
dec
popf
dec
mov
wbinvd
fldt
and
sar
outsb
pop
add
std
cmp
mov
inc
mov
fisubrs
divb
inc
stos
xor
lds
fisubl
enter
jae
cmp
mov
or
iret
xchg
add
push
negl
fsts
out
jmp
jae
adc
pop
pop
inc
cld
dec
loop
shlb
inc
out
dec
sub
fcompl
aam
rclb
loopne
out
mov
jp
repz
je
movsl
adc
xor
sub
arpl
xor
mov
aam
sbb
shlb
push
mov
les
ss
imul
push
out
push
cmp
sbb
cmp
xor
popf
add
lahf
addr16
inc
adc
xor
mov
and
dec
movsb
push
pop
outsb
iret
enter
js
push
jns
adc
leave
sti
add
sub
lahf
pop
add
sub
movsb
bound
pop
jo
lods
inc
adcb
mov
scas
les
data16
mov
cmpb
xchg
jp
fs
rcrl
xor
loopne
xchg
mov
sarl
inc
adc
rclb
cld
stc
flds
lea
and
jp
cltd
cmpsl
push
popf
mov
call
jno
in
in
movsl
dec
stc
in
jmp
jbe
and
ret
pop
cmp
mov
jle
adc
jg
lods
push
xor
jnp
jbe
stc
mov
rclb
xchg
xor
pop
jle
and
xchg
fs
push
jbe
in
pusha
movsl
aad
dec
es
xchg
pop
cmp
inc
and
xchg
xor
outsb
inc
outsb
das
lods
sub
mov
inc
sub
mov
andb
in
sub
roll
mov
data16
daa
cwtl
sahf
movsl
stos
fcomip
or
iret
scas
add
adc
add
jl
fnsave
mov
arpl
adc
cmp
jo
data16
mov
js
imul
popf
jo
jp
pop
repnz
sbb
call
fdivl
stos
jge
mov
sub
test
repz
add
xchg
gs
lahf
mov
negl
jg
fnsave
mov
sub
sbb
cli
pop
lret
in
int3
cmp
adc
repz
test
mov
icebp
clc
addr16
sbb
adcl
repnz
pop
xchg
fwait
sub
jg
loopne
call
or
mov
cmpsl
mov
imulb
stc
daa
adcl
xchg
addb
out
push
xchg
adc
xchg
mov
mov
test
idivb
dec
test
out
mov
lret
adc
push
jg
out
mov
out
dec
sub
or
push
inc
cs
mov
scas
xchg
mov
lds
jp
stos
or
adc
mov
jg
outsl
xchg
pop
clc
arpl
sub
enter
aas
sub
sub
cmp
xor
fildl
add
pop
jbe
dec
mov
jge
pop
into
and
cmp
xchg
jmp
popf
xchg
seta
mov
dec
xchg
arpl
stos
sub
inc
outsb
in
and
sbb
sub
sbb
imul
or
dec
ja
int
pop
loopne
movsl
jbe
imul
xchg
cmp
pop
jmp
sbb
inc
lods
pop
mov
mov
mov
mov
push
adc
mov
lret
xchg
leave
imul
stos
mov
mov
xchg
jnp
fsubs
fstpl
xchg
adc
jo
nop
dec
mov
xchg
lahf
xor
inc
iret
movsl
aad
mov
push
enter
push
jo
test
xor
orb
mov
test
xchg
pop
push
inc
inc
cmc
or
and
add
sbb
arpl
fildll
sbb
or
inc
into
inc
test
pushf
jae
pop
sub
push
dec
jmp
out
incl
cltd
push
lahf
cmpsl
notl
pop
cmpsl
lods
push
jmp
adc
or
scas
nop
jecxz
mov
and
gs
movsb
stos
pop
mov
imul
jb,pt
mov
xchg
enter
sahf
loop
adc
jne
mov
inc
stos
and
xor
and
xchg
dec
ljmp
sbb
lds
pop
mov
pop
pop
sub
dec
cmp
dec
mov
out
push
pop
cmp
and
add
push
mov
add
mov
and
sub
jge
lods
ss
xchg
cmpsb
stos
inc
cmp
movsl
inc
lea
pop
insl
repz
das
icebp
sbb
sbb
sub
and
into
inc
mov
stos
dec
test
pop
lahf
sbb
xor
or
in
movsl
mov
adc
bound
jmp
push
xchg
imul
mov
lds
shrl
mov
ret
ficompl
loop
mov
int3
pop
nop
js
push
out
das
repz
jge
push
mov
push
and
sub
daa
cwtl
or
sub
es
lock
daa
cwtl
jge
and
fwait
mov
cmp
inc
in
lret
inc
mov
cmp
sahf
cmp
or
inc
push
sti
loope
and
xchg
aas
mov
xor
mov
test
xor
outsb
fists
jns
jecxz
call
mov
cmpsl
adc
enter
cltd
call
lds
jne
fiaddl
xor
icebp
sub
sbb
lret
adc
fisttpll
int3
ljmp
fldcw
lahf
insb
add
lcall
out
cmp
outsb
sar
ss
mov
mov
into
imul
in
push
or
cmc
xchg
movsl
ret
add
je
leave
xchg
add
xchg
je
inc
inc
and
or
dec
imul
fs
or
xor
inc
aas
mov
lods
hlt
pop
inc
arpl
sahf
pusha
and
and
jmp
insl
aas
sub
cmp
cs
pop
dec
jmp
sbb
popa
adcb
cmpb
mov
sub
adcl
pop
pushf
fnstenv
aam
mov
dec
jne
mov
das
gs
pop
lahf
push
xor
loopne
and
into
inc
jbe
mov
xor
lcall
mov
jb
dec
xchg
fwait
and
xchg
and
push
push
mov
xor
and
sbb
adcb
popf
inc
loope
jl
outsl
or
aad
sbb
movsl
or
or
adc
jle
std
imul
dec
adc
mov
jmp
xchg
js
shr
sub
cld
jb
cwtl
sti
data16
sbb
inc
in
xor
push
jne
dec
jns
movsb
das
fwait
add
cmc
es
inc
cmp
dec
and
loope
xchg
inc
mov
pop
adc
mov
or
pop
jo
xchg
xorb
add
mov
dec
pop
xchg
mov
scas
jp
pop
dec
movsl
cmp
addr16
jns
outsl
xchg
sub
xchg
icebp
in
jp
dec
fyl2x
push
scas
mov
mov
mov
fiadds
xchg
inc
cmp
sub
xchg
add
sti
daa
mov
pop
lods
push
add
dec
jge
enter
test
push
push
rorb
std
pop
clc
xchg
cmp
sub
inc
xor
push
cmp
movsl
test
std
sti
jge
add
lret
stos
bound
mov
pop
push
push
fisubs
mov
aam
icebp
push
outsl
mov
insb
lret
popa
lds
pusha
nop
sub
push
push
loop
fwait
dec
or
rcrl
sbb
faddl
loope
push
insl
inc
lret
loop
mov
dec
gs
in
lret
fsubrl
inc
shl
in
cwtl
subb
js
mov
jg
mov
mov
fstpt
xchg
cmp
in
adc
push
out
pop
cmp
add
xorl
es
repnz
sub
sbb
stc
call
xor
int3
fstpt
push
sahf
xchg
inc
adc
out
mov
lret
insl
xchg
jge
outsl
pop
lods
sti
cmp
or
pop
test
push
imul
inc
mov
mov
add
rcrl
push
or
pop
cmpsl
jnp
sub
cltd
mov
shlb
pop
dec
mov
jmp
pop
imul
mov
sahf
stos
cmp
pop
in
adc
sub
xchg
add
outsb
jo
rcrb
xchg
adc
inc
or
lret
hlt
sbb
pop
xor
mov
dec
fdivs
cmc
mov
fists
xor
xor
out
push
push
sub
fidivl
outsb
lahf
push
lods
out
mov
add
pop
cmp
jnp
mov
jmp
push
jne
repnz
popf
sbb
xor
scas
sbb
les
sub
xor
mov
in
xchg
add
xor
lock
shll
cmpsl
nop
pushf
lods
add
jne
cmpsb
cmp
addr16
inc
inc
cld
arpl
lods
clc
shrl
pushl
mov
bound
test
jmp
pop
inc
push
jbe
mov
fisubl
popf
test
add
mov
dec
jbe
ljmp
popa
lods
cmpsb
pop
xchg
es
mov
sub
loop
into
cmp
icebp
cli
and
ret
jp
xlat
mov
mov
mov
je
or
sub
xlat
pop
jge
sahf
pop
ret
fwait
les
jp
lret
fbld
testb
hlt
dec
mov
xor
ss
sbb
cs
push
pop
cmp
xchg
movsl
mov
adc
cmpsl
fisttpl
sub
es
cmp
ja
pop
loop
fiaddl
dec
jb
inc
mov
lock
push
xacquire
xor
push
loope
sti
sub
cmp
mov
mov
mov
iret
lock
xor
into
iret
push
or
sahf
cmpsl
dec
movsl
pop
test
xchg
jo
sbb
cli
sub
movsb
adc
or
cmp
mov
dec
jle
imul
lcall
stc
mov
cltd
pushl
dec
aas
push
jp
push
mov
aas
xor
lret
in
in
jl
add
sub
mov
xor
pusha
pushf
pop
pusha
and
pop
push
stos
and
loope
icebp
jb
dec
inc
or
cld
pop
cmp
xchg
jns
roll
in
dec
xchg
mov
cmpsl
mov
cmpsb
pop
xchg
nop
jns
in
push
cld
push
roll
icebp
popa
inc
sbb
lret
dec
aaa
cmpsl
emms
orl
popa
pop
ljmp
mov
in
flds
fsubr
pop
mov
addb
ss
mov
ret
cmp
mov
pushf
pop
mov
add
jo
adc
dec
retw
fildl
shll
nop
pop
pop
mov
dec
add
das
cmp
jecxz
sub
cmp
push
jnp
pop
pop
jno
mov
xor
and
aas
inc
dec
lret
aad
jo
fmull
lea
rolb
stos
dec
les
jno
jle
pop
mov
push
hlt
ret
jp
sub
xor
and
sub
xchg
enter
xor
xor
das
mov
xchg
fistps
mov
mov
outsl
mov
cld
lock
mov
add
mov
push
in
push
fstpt
dec
jg
add
push
ret
cmpsl
shll
fs
lahf
adc
cmp
out
out
dec
inc
push
lret
sub
push
pop
dec
setne
ss
fists
lahf
dec
jp
call
sti
or
jnp
and
and
xor
jo
mov
fstps
shll
and
cld
cltd
pop
xchg
shl
shl
outsb
pushf
stc
cmp
adc
mov
dec
popf
jg
data16
pop
cmp
stos
inc
cs
xchg
adc
push
mov
out
xchg
mov
sbb
fs
aam
push
mov
fildl
sarl
cs
mov
cmp
xor
cmp
fsubs
sarl
sub
lods
outsl
int
dec
repz
xchg
out
jecxz
incb
aaa
inc
stos
cmpsl
test
std
adc
int
sbb
jb
mov
cmovns
movsb
inc
dec
add
dec
stos
jecxz
lds
ljmp
test
pop
ficoml
add
lcall
cwtl
add
std
jbe
sub
lds
pop
fisttpll
mov
inc
sarb
repz
or
mov
inc
push
lcall
pop
pop
mov
leave
cmpsb
pop
inc
sbbb
cmp
pop
fisttpll
fidivrs
dec
outsb
xlat
js
pop
loop
movsb
mov
rcl
fwait
jo
aam
scas
cmp
mov
mov
xlat
mov
ret
loopne
jno
pop
lret
pop
rcll
loopne
sub
adc
loope
mov
dec
or
mov
loopne
push
cli
add
add
cmp
fnstcw
mov
xchg
mov
sbb
xchg
push
out
mov
push
lods
inc
cli
inc
clc
jl
mov
in
and
pop
lods
mov
mov
test
jg
scas
test
xchg
sahf
dec
adc
loope
call
scas
das
or
shlb
iret
insl
sub
pop
scas
pop
and
sbb
fistpll
fstl
xor
gs
andb
xchg
pop
push
shr
lods
sub
sbb
push
pop
pop
jg
mov
pop
shrl
adc
repz
in
sbb
repnz
or
and
mov
test
shl
stos
push
cmc
sbb
enter
stos
inc
pusha
or
sbb
push
sub
cmp
inc
ret
imul
add
lods
jp
inc
sbb
inc
dec
sbb
sub
pop
cmp
jg
xor
xchg
in
test
jnp
sti
push
js
mov
mov
pop
xchg
outsl
and
nop
fprem1
cltd
mov
idiv
inc
sbb
rcll
cmp
stos
pop
xchg
ret
mov
cmp
rep
jbe
lods
sbb
aad
sub
jg
jmp
inc
cwtl
lods
push
mov
fwait
mov
int
adcb
jbe
arpl
add
ss
sub
sti
ja,pt
sarb
jbe
and
nop
out
jle
xchg
or
insl
or
sub
cmp
in
leave
inc
sub
mov
cmpb
or
sub
outsb
pop
repz
repz
fs
xlat
xchg
ja
mov
jle
and
sbb
add
pop
sub
iret
loopne
or
and
sub
shlb
fists
or
lock
mov
cmp
inc
addr16
jo
jae
insb
mov
fbstp
test
outsl
aaa
dec
out
stos
dec
pop
mov
call
sbb
outsb
dec
out
or
mov
xor
sbb
mov
out
hlt
inc
xchg
lahf
test
mov
pop
loopne
dec
pop
mov
test
outsb
fcomip
xlat
jnp
sub
lods
stc
into
mov
jmp
xchg
test
cmp
jp
mov
pop
xchg
pusha
cmpsb
out
ss
sbb
lcall
and
add
sbb
jg
add
les
cmp
adc
inc
cld
pop
je
sub
xchg
fs
fwait
insl
and
mov
and
sub
lds
pop
inc
pop
dec
jno
ror
push
pop
add
out
add
xor
dec
cmpsl
nop
push
in
dec
mov
sub
cmp
cli
shr
addr16
mov
leave
insl
lock
fdiv
movb
pop
mov
or
fstl
inc
mov
fwait
notb
cmp
or
scas
mov
xchg
inc
add
lahf
in
ds
cmc
fsubrl
xlat
jg
jns
pmaxub
add
dec
and
xor
movsb
cmc
dec
mov
xchg
pop
aas
push
in
sub
fcoml
add
pop
sbb
sbbb
fsts
repnz
add
mov
fistps
pop
xchg
jmp
out
xor
or
adc
js
xchg
std
movsb
xchg
stos
xchg
mov
dec
jl
js
aaa
xor
pop
adc
xlat
sbb
cmpsb
addl
mov
lods
pusha
fstl
adc
insl
mov
lds
cmp
repz
xchg
mov
mov
test
mov
or
das
jnp
fldt
data16
nop
sahf
push
cmpsb
rclb
or
icebp
int3
aam
dec
adc
int
mov
inc
aam
addr16
cld
pop
dec
into
xor
in
xchg
push
scas
nop
cli
mov
mov
arpl
js
and
cmpsl
inc
push
dec
push
mov
lock
lods
push
xlat
mov
pop
jmp
test
jne
sub
shll
mov
sub
pop
xchg
adc
data16
jne
fmuls
cmp
sbb
lret
flds
leave
cli
jle
push
push
mov
add
cmpl
mov
sbb
jle
fldenv
and
xor
sub
pop
pop
stos
dec
xchg
jbe
out
loope
jo
movsb
cld
test
cmp
jl
jbe
cmpsb
mulb
aam
outsl
ror
cltd
xlat
imul
sbb
lahf
aas
sbb
outsb
ds
in
arpl
pop
sub
push
xchg
enter
aas
mov
push
jno
adc
dec
adc
adc
ss
jns
adc
fwait
sub
cld
insb
mov
out
pop
out
loop
push
je
rcl
popa
mov
mov
loopne
ljmp
movsb
addr16
hlt
cwtl
das
imul
or
sbb
add
or
jmp
push
fsubl
scas
push
mov
nop
and
jnp
jg
leave
xor
pop
lods
cmp
mov
push
jecxz
iret
stos
mov
dec
out
out
sub
mov
out
pop
xor
dec
adc
lahf
pop
or
ss
inc
movsl
mov
dec
sub
or
iret
pop
sub
sub
mov
sbb
inc
in
push
mov
psubw
adc
jns
outsb
pop
iret
mov
jl
scas
jnp
mov
hlt
pusha
mov
pop
sbb
rcll
jmp
int
jae
adc
add
adc
jg
fwait
cmp
mov
add
pusha
xchg
shrl
mov
scas
repz
aad
and
stos
cmp
lcall
sbb
fdivrl
in
push
insl
movsl
orl
push
sub
sub
cmpsb
fcomps
mov
in
add
lods
call
push
insb
ret
jmp
mov
and
sub
and
sbb
std
fwait
and
dec
movsl
cmp
ret
and
sub
mov
ljmpw
xchg
cmc
dec
adc
push
xchg
fisubs
and
aas
pop
imul
inc
sbb
roll
inc
daa
std
mov
movsb
mov
insb
rorb
push
dec
push
sti
test
outsl
add
lahf
push
jmp
popf
mov
mov
lcall
pop
or
imul
repz
mov
lock
or
movsl
jne
ljmp
mov
or
jo
cmp
inc
repz
pop
sarl
test
cs
stos
jl
pop
dec
jp
das
inc
push
xchg
mov
and
in
icebp
setne
ja
pop
cmp
fstpl
call
inc
pop
fdivp
and
push
test
push
sbb
cmpsb
addr16
stc
fwait
pop
ds
inc
in
jb
lock
jecxz
ds
stos
mov
push
sub
dec
inc
sub
aam
adc
cmp
int3
call
xor
adc
xor
gs
out
mov
mov
test
loopne
pop
movsb
roll
nop
sub
ror
cs
ret
testl
jnp
xchg
mov
pushf
les
pop
arpl
test
or
arpl
imull
push
aas
dec
jg
loop
outsl
pop
xchg
cmpsl
mov
pop
mov
sub
rcr
adcb
fidivl
shlb
jmp
ficoml
cmpsb
sahf
adc
or
lret
cmpsl
xor
ror
repz
mov
push
test
out
xchg
push
daa
push
mov
movsl
aam
push
dec
aas
push
xor
es
test
fisttps
aaa
xchg
dec
inc
dec
xchg
xor
xor
pop
inc
sub
sub
fwait
pop
xlat
add
xchg
out
andb
mov
in
ret
dec
lods
add
mov
or
xchg
add
xchg
lcallw
xor
jbe
dec
jne
pop
sub
imul
ljmp
mov
adc
inc
xchg
fs
stc
repz
mov
mov
aaa
ljmp
push
dec
dec
ljmp
jmp
lock
xchg
mov
cmp
dec
ret
cmpsb
or
add
xor
mov
lock
sbbb
cmc
jo
push
adc
sbb
jnp
xor
testl
scas
rcll
dec
add
rorl
ffree
shlb
loopne,pn
add
je
rorl
dec
adc
je
pop
testl
adc
mov
lea
add
mov
push
mov
lret
rolb
mov
shll
aas
xchg
xchg
add
je
jp
mov
shlb
push
xor
bnd
dec
shl
ret
inc
jns
push
std
mov
out
jmp
popa
call
fwait
insl
mov
mov
cmp
in
subl
fmull
xchg
cmp
sti
sub
loop
jecxz
mov
fwait
sub
ljmp
cwtl
jb
test
mov
jbe
xor
xor
pop
xchg
mov
shrb
sub
mov
xchg
out
aam
sub
inc
lods
mov
jg
push
xor
mov
cmp
push
push
cs
or
jb
jno
rcr
leave
test
and
mov
addr16
inc
out
gs
popa
pop
jb
cld
add
aas
addl
sbb
sbb
outsb
subl
jle
pmulhw
adc
push
int
andl
add
into
inc
test
loope
cs
popf
je
pop
adc
xorb
jmp
fwait
test
mov
movsb
adc
mov
flds
popa
subl
jo
and
add
xor
and
adc
jecxz
jo
or
pop
mov
adc
inc
data16
sub
xchg
not
xchg
js
loope
inc
cmp
pop
test
or
popa
and
pusha
adc
xchg
in
inc
popa
xchg
xchg
push
dec
cs
pop
mov
mov
std
push
mov
and
sub
stos
cmp
pop
sub
loop
pop
das
and
mov
scas
xchg
lcall
aad
fisttpll
inc
insl
mov
clc
mov
sub
sub
push
cmc
cmpsb
jg
es
notl
cmc
js
sbb
test
sbb
int
inc
xlat
or
cmp
inc
xor
mov
bound
sti
cmp
mov
movsb
idivb
in
cmp
aas
lcall
mov
cmp
or
pop
or
jnp
dec
sbb
pop
cmp
xchg
xchg
push
inc
and
sti
adc
sahf
arpl
xchg
ds
sbb
fidivl
xchg
ljmp
inc
push
pop
and
stc
jb
mov
bsr
mov
mov
cmp
xor
sbb
mov
das
or
mov
cmp
outsl
pop
popf
push
xchg
sub
mov
jo
popf
and
pushf
jle
je,pn
and
pusha
xchg
xchg
mov
or
imul
outsl
loop
jae
cld
lods
mov
out
or
scas
push
mov
cli
in
sbb
sub
stos
mov
outsb
lret
scas
outsb
out
ffreep
pop
pushf
cmpsl
test
fldt
mov
ds
add
adcl
push
mov
xor
or
out
mov
pop
mov
lds
or
mov
inc
lret
lods
test
lods
sbb
mov
jle
pop
int3
movsl
stc
sbb
mov
mov
jl
call
out
inc
add
lock
fldl
outsl
scas
mov
out
jae
push
push
jbe
aaa
insl
push
arpl
jmp
mov
arpl
fisttpl
push
mov
mov
mov
or
xchg
xor
dec
popa
xchg
int
nop
divb
fstps
imulb
aaa
sub
je
loope
daa
test
or
push
repnz
loopne
sub
dec
js
cmp
sub
pushf
lahf
pop
data16
rolb
ss
inc
cmpl
xor
xchg
out
leave
repnz
sub
int3
or
and
fildll
enter
stc
pop
push
jl
pop
popf
lea
sbb
adc
jo
and
rcrl
aad
jmp
popf
iret
fwait
push
in
sbb
jecxz
nop
shl
repnz
es
push
jbe
or
ret
jl
cmp
mov
shr
lret
nop
jecxz
adc
pop
out
dec
enter
pop
jle
inc
daa
cmpsb
test
dec
mov
stos
push
outsb
ja
out
fs
add
push
test
mov
or
push
cmpsb
addr16
into
roll
mov
cltd
mov
lea
lods
xchg
adc
add
mov
jg
ss
into
mov
pop
cld
xchg
add
cmpsl
mov
fldt
daa
xchg
dec
out
mov
ret
sub
sub
out
cmc
daa
enter
push
xor
and
mov
popf
lcall
pop
inc
rclb
fimull
not
push
lcall
pop
mov
outsb
in
adcb
ja
arpl
dec
clc
addl
shlb
mov
icebp
les
in
cmpsl
mov
xor
pop
push
and
ds
les
cltd
inc
sub
repz
out
scas
sti
shlb
xor
mov
filds
shrl
mov
inc
iret
aad
jg
or
orl
stos
shl
mov
xor
jp
ret
xor
movsl
les
arpl
test
shlb
imul
loopne
pop
outsl
fldcw
sbb
xchg
mov
int
mov
or
bound
loop
jo
sub
jle
mov
lcall
dec
adc
mov
push
std
pop
or
in
mov
daa
imul
clc
sub
cmp
int3
loop
cmp
xchg
addb
push
imul
loopne
lcall
mov
mov
and
repz
push
cmp
ficompl
ja
mov
movsb
notb
add
cwtl
xchg
cltd
test
mov
dec
data16
mov
imul
sub
push
mov
cwtl
cmp
mov
pop
test
insl
mov
sub
sahf
incl
insl
outsl
dec
cs
push
aaa
js
fisubrs
addr16
jp
enter
fldl
cmp
or
test
inc
sub
dec
mov
mov
cmp
stos
xchg
inc
loope
cmp
in
shrb
mov
das
in
jnp
pop
divl
xchg
shl
push
add
movsb
call
or
sti
mov
jae
xchg
in
rcr
fdivrs
mov
repnz
xor
and
sub
jbe
sbb
push
sbb
pop
rcrl
andb
sub
cmp
out
pop
pop
cmp
mov
sbb
add
insb
lahf
sbb
fwait
push
out
pop
adc
incl
push
pop
imul
out
ret
stos
dec
jae
xor
jp
xchg
mov
test
inc
or
lods
xchg
out
pop
add
stos
xor
addr16
add
in
mov
jo
sahf
jge
xchg
hlt
mov
addb
je
jo
imul
mov
jp
test
mov
hlt
cs
fwait
arpl
or
jl
test
std
sbb
pusha
ret
and
xor
add
sub
rcll
andl
inc
inc
jno
push
lock
cmp
add
arpl
daa
ja
mov
pop
sbb
sahf
ss
mov
pop
inc
sarl
jle
push
stos
add
in
cmpl
dec
fsubs
or
jae
icebp
inc
dec
mov
jmp
jge
leave
or
mov
rorl
push
out
mov
loop
cmp
mov
jno
stos
das
jns
movsb
stc
repnz
mov
fwait
or
shl
negb
mov
inc
mov
xchg
pop
push
xor
cmpsl
negb
mov
jl
fistps
out
pop
outsl
leave
daa
add
sub
cwtl
fsubrs
test
add
mov
or
cmp
add
in
ficomps
mov
xlat
push
xchg
arpl
mov
xchg
jg
inc
push
mov
mov
js
sub
jecxz
sub
push
add
pop
call
bound
in
pushf
sbb
inc
out
mov
mov
mov
pop
pop
and
sarb
nop
sub
jne
or
jne
jmp
jg
pop
jmp
mov
mov
cmp
dec
push
pop
mov
jle
dec
and
cmp
pop
dec
pop
jne
scas
add
or
pop
mov
adc
sbbb
jno
jecxz
mov
or
push
push
shll
sbb
cmpsb
aad
rcrb
add
vandpd
rolb
int
icebp
dec
xor
pop
adc
fwait
daa
jb
and
or
sbb
aas
into
subb
je
ret
dec
jno
sub
add
jle
adc
je
lods
aaa
or
into
test
mov
push
xchg
xchg
negl
ja
loop
cmp
and
test
and
out
dec
sub
or
jle
aam
loopne
aam
adc
mov
stos
loope
lahf
push
ja
outsl
inc
inc
jle
cmp
les
push
mov
mov
andb
int3
or
mov
push
std
scas
aaa
sub
stc
mov
mov
push
das
mov
add
xor
call
cmpsl
inc
je
xchg
nop
xchg
loope
cld
xor
ds
mov
jnp
xor
aaa
or
xor
dec
test
ljmp
add
in
pop
jae
cmp
fdivrs
aaa
sub
in
push
cmp
jl
out
cmp
jecxz
jnp
cld
xor
xor
jl
js
xchg
sbb
cmp
adc
cld
rorb
leave
mov
ljmp
insl
xor
push
shrl
ja
inc
push
sarl
test
inc
ss
jmp
push
and
das
inc
sub
pop
lock
ljmp
lret
int
stos
mov
icebp
mov
mov
je
adc
mov
dec
xor
inc
mov
jo
jno
pusha
push
fs
fildll
mov
ljmp
mov
xor
and
sub
nop
add
jb
jmp
sub
test
imull
pop
add
cmp
iret
loop
and
iret
mov
jns
ds
lods
push
xlat
ret
adc
shrl
ss
and
jne
cmp
push
pop
mov
fisubl
sbb
adc
xlat
pop
lock
mov
xor
dec
xor
mov
sub
repnz
data16
imul
mov
dec
pop
adc
movsb
outsl
xchg
cmp
sbb
cmp
push
pop
xor
add
inc
sahf
or
adc
insb
shlb
aam
sbb
jnp
jno
gs
ficoms
xorb
loop
mov
xchg
jbe
lahf
shll
jle
jo
jp
adc
es
jecxz
ss
sahf
xchg
jl
xchg
stc
sbb
and
inc
push
jnp
mov
loopne
sarl
test
mov
imul
pop
mov
stos
and
dec
nop
mov
leave
xchg
and
dec
fnstenv
aam
sbb
push
jae
lahf
fcoml
cld
cmc
roll
jg
cmpb
jns
outsl
fisubrl
xor
xor
lds
lret
mov
inc
jl
xor
xchg
xor
dec
dec
sub
stos
mov
cmp
xor
xchg
in
pop
fiaddl
int
sbb
loopne
stos
push
xchg
cwtl
lods
loopne
int3
push
mov
in
push
shrb
add
sbb
jne
les
inc
mov
inc
rcrl
pop
xor
cwtl
mov
mov
lods
fs
push
fists
out
addb
mov
xchg
xor
xor
popa
dec
jns
xchg
xchg
dec
ffree
dec
scas
movsl
lods
inc
push
insl
mov
les
stc
cs
xor
xchg
and
fcoms
lds
in
push
inc
mov
pop
aad
or
outsl
fstpt
xchg
stos
mov
or
inc
jmp
cmpsb
dec
int3
mov
pop
rcrb
push
push
cmp
repnz
adc
mov
fimuls
out
jecxz
xchg
ret
insl
dec
pop
cmp
cmpsb
aad
or
arpl
inc
push
xor
arpl
sbb
aad
mov
mov
jae
addl
icebp
adc
mov
gs
aas
cmpl
cmp
mov
imul
leave
sub
xchg
stos
mov
lret
orl
adc
mov
adc
sbb
ja
jg
nop
mov
sbb
mov
add
add
bound
or
jne
lock
mov
push
adc
jo
aas
dec
lret
sub
test
lahf
xchg
jmp
mov
pop
insb
push
andb
adc
jbe
sbb
out
repz
dec
ja
pop
cmp
mov
cmpsl
dec
loop
xor
mov
ja
test
movsl
and
push
gs
jb
cmp
add
add
out
xor
popf
jbe
dec
test
adc
pop
pop
sub
xchg
jmp
mov
mov
out
sub
enter
out
lds
xchg
xchg
cmpsl
rcrb
cltd
fcmovnb
dec
fidivrl
add
xchg
lock
out
mov
mov
aaa
and
movsl
leave
mov
out
sahf
sarb
and
mov
ret
inc
punpcklbw
jl
xchg
decb
out
sub
xor
cli
fmulp
mov
xor
mov
jno
xor
pop
cmp
cmp
mov
imul
aam
or
mov
inc
adc
testl
mov
incl
imul
aad
dec
into
pop
and
ret
in
sub
xor
push
inc
xor
dec
cmp
push
pop
lods
xchg
shlb
sub
sub
and
icebp
jns
scas
mov
push
call
sahf
aaa
stc
out
xchg
push
js
scas
jns
aad
fimull
xchg
pop
mov
lea
pushf
jg
aaa
inc
out
inc
enter
fisttpll
adc
shl
pop
cmp
adcl
arpl
shl
fisttpll
mov
add
mov
mov
mov
adc
mov
jnp,pt
lcall
mov
aas
iret
aas
mov
in
aas
push
rorb
lock
dec
mov
pop
sbb
cltd
jne
cmpsl
lock
sbb
icebp
pop
ja
pop
cltd
in
subb
into
imul
cmp
repnz
mov
lahf
or
test
jg
aad
mov
hlt
cmp
push
jp
loop
imul
fs
jnp
xchg
insl
ret
scas
pop
add
inc
shlb
inc
dec
cmp
xor
adc
rcrl
pop
jg
push
hlt
imul
sub
jns
inc
adc
scas
stc
mov
push
inc
rol
mov
cmp
addl
lds
ljmp
les
dec
in
shll
cwtl
or
outsb
jp
insb
cmp
adc
mulb
xchg
lret
aam
push
xchg
xchg
mov
aaa
cld
jmp
sbb
pop
into
mov
mov
insb
test
data16
lret
mov
mov
jecxz
pop
pop
mov
mov
insb
cld
leave
gs
sub
mov
xchg
mov
cld
stos
xor
movsl
xchg
push
cmp
lret
sbb
jmp
mov
addr16
adc
jp
xchg
mov
das
cmp
cmp
ror
js
test
shlb
mov
or
shll
jge
stos
jl
scas
decl
push
icebp
jbe
lea
push
int3
test
sti
lea
push
cltd
in
jge
pop
in
mov
incb
testb
test
xor
sbb
mov
mov
fidivl
cmp
fwait
cmpb
aam
cmc
cmc
subl
mov
mov
cmp
push
js
inc
pop
mov
lods
mov
lods
daa
xchg
pop
dec
pop
ret
xor
sahf
mov
int
push
adc
push
or
std
dec
ss
jge
pop
push
ljmp
movsl
test
xchg
call
test
push
stc
sbb
xchg
jae
pop
call
lcall
xchg
cltd
xchg
push
int
addl
jmp
sub
cmp
pop
stos
add
mov
mov
aam
cmpsb
pop
add
xor
dec
jmp
sbb
cmpsb
xor
add
sub
sahf
dec
lock
xor
int3
outsb
cli
sbb
pusha
dec
dec
shrl
fwait
hlt
pop
dec
loope
fdivs
xchg
mov
in
push
js
mov
dec
lds
sub
stos
dec
bound
xchg
mov
push
ja
into
in
cmp
sbb
push
enter
add
jp
jl
enter
outsl
pusha
pushf
jo
fwait
inc
push
fwait
sub
lds
rcll
add
pop
push
adc
mov
rorl
and
loope
cs
pop
or
push
ss
lock
sub
ljmp
fwait
mov
test
xor
pop
xchg
push
icebp
pusha
push
push
adc
clc
andb
jle
mov
cmpl
jl
lret
bound
xor
cmp
fs
dec
jnp
stc
fwait
xchg
dec
mov
cmpsb
dec
jge
dec
repnz
add
push
test
jp
fisubrl
cs
dec
iret
mov
outsl
rcl
cmpsl
push
push
lock
push
fildll
jmp
or
in
sbb
xchg
push
das
adc
rcll
jb
loop
insb
or
cmp
ljmp
add
xchg
dec
pop
jno
xor
adc
ret
mov
das
mov
sbb
pushl
push
mov
gs
pop
or
cltd
jne
idiv
scas
test
mov
mov
rcll
aas
pop
adc
or
pop
mov
push
jge
arpl
mov
sub
cmp
jbe
fs
mov
cli
sbb
cwtl
sub
scas
sbb
cld
and
sub
cmc
test
push
insb
mov
and
les
sbb
es
lahf
mov
lahf
adc
or
mov
xchg
sbb
jne
bound
cwtl
sarl
out
mov
xor
cmp
inc
ljmp
sbb
add
mov
fistps
loopne
xchg
push
push
inc
jmp
add
std
sbb
push
lea
stc
movsl
or
push
xchg
sbbb
sub
adc
int3
mov
mov
loop
xor
sbb
pop
leave
scas
push
aas
ror
xchg
dec
arpl
insl
push
dec
mov
xchg
popf
enter
pop
call
ss
shr
mov
jno
mov
push
sub
fildl
add
pop
xor
mov
out
sbb
dec
adc
adc
jo
sub
xorb
fwait
sub
jmp
test
mov
add
add
in
andb
push
ja
sub
mov
int
aad
sbb
push
cmp
in
imul
sar
sbb
fisubrl
and
xchg
int
subb
mov
jmp
adc
inc
lret
cmpsb
add
sub
inc
adc
enter
mov
add
cwtl
sub
cmp
sbb
pop
das
push
push
dec
push
int
or
jmp
mov
adc
popa
vmulsd
inc
enter
jo
fprem1
out
flds
add
sti
int
repnz
jo,pn
stc
call
shlb
sbb
cmp
lock
add
cmp
or
shl
mov
shrb
xchg
or
add
es
or
dec
mov
lret
ficompl
idivb
jo
fisubl
push
popf
dec
push
push
in
adc
lret
mov
lods
stos
fisttps
dec
fldenv
dec
jp
xchg
cwtl
xchg
inc
cmp
or
scas
clc
sub
xor
xchg
xor
jbe
sub
push
in
jnp
pop
push
test
out
add
rcrl
pop
xchg
mov
sti
fs
xor
mov
xor
gs
push
rcl
and
xchg
test
stos
nop
ja
inc
stos
mov
mov
mov
xchg
xlat
std
lret
cmc
add
xchg
dec
push
stos
push
iret
adc
jbe
fisttpll
and
dec
inc
enter
movsb
push
xchg
fisubrl
scas
std
imul
cli
mov
sbb
pop
push
shll
addr16
xchg
pop
lods
call
test
xchg
jecxz
mov
push
fstpl
dec
cmp
mov
adc
pop
mov
popf
add
pushf
notl
xchg
cmp
or
iret
adc
add
add
jecxz
pop
mov
aad
cmp
popa
jne
aas
jle
xor
icebp
fldt
out
mov
and
pop
push
test
cmpsl
dec
mov
stos
sub
into
cli
sbb
sub
loop
jno
jns
loop
xor
inc
mov
int3
sbb
mov
lock
jno
and
mov
loope
sahf
mov
dec
fistpl
lock
outsb
mov
mov
fistps
es
sub
pop
imul
mov
test
insl
imul
sub
jle
or
popa
lods
lea
push
mov
mov
or
sbb
call
leave
pop
addr16
xor
in
sbbb
jne
adc
into
movsl
push
mov
negl
inc
dec
xor
das
mov
pop
or
lds
cmp
xchg
ret
xchg
mov
popf
sbb
dec
imul
mov
enter
ror
jp
ret
popf
addl
cmp
fdivl
fldenv
cmp
mov
loopne
popa
cmp
adc
sbb
je
mov
jle
jne
outsl
in
xor
out
lds
cwtl
mov
cmpsl
mov
je
ss
cli
inc
outsb
insb
mov
xlat
sbb
mov
jno
mov
in
inc
dec
les
pop
es
lret
jg
inc
addr16
inc
xchg
in
out
sub
push
jle
addr16
stos
mov
je
pop
adcb
xchg
movsl
shrb
les
mul
mov
jmp
cmpsl
sbb
sbb
pop
xor
popf
pop
cmp
rorb
and
push
sub
lock
fs
add
dec
sub
sbb
push
dec
pop
inc
and
rcrl
jns
or
jp
xor
adc
scas
cmp
imull
inc
gs
mov
adc
mov
test
lret
inc
cs
pop
mov
mov
lret
pop
popf
mov
bound
xor
mov
ds
aam
xchg
clc
ret
lods
inc
fbstp
dec
add
mov
jo
addr16
aam
and
popa
cmp
cwtl
sub
sarl
jle
add
mov
fistl
push
pushf
push
lock
sub
pushf
pop
jns
adc
imulb
jnp
push
in
fidivrl
dec
xchg
out
pop
xor
mov
cmp
fiadds
pop
scas
loopne
mov
mov
call
dec
call
xor
xchg
hlt
rolb
pop
jecxz
popa
xor
pop
andb
inc
mov
cmpsl
mov
xor
inc
aad
and
rcll
lea
popl
inc
std
adc
out
shlb
sbb
mov
fimuls
in
mov
bound
push
mov
xor
fmuls
mov
mov
les
inc
cmp
and
push
popf
xchg
dec
pop
imul
push
popf
sahf
fs
mov
jg
add
icebp
xchg
and
testb
dec
movsb
fcmovnbe
inc
nop
les
pop
out
cmp
jl
stos
clc
daa
mov
add
aad
push
jl
mov
leave
shlb
subl
sbb
lret
jle
dec
rcll
cli
mov
fwait
es
out
aam
scas
xchg
ss
cmpl
mov
out
bound
jmp
xlat
cli
adc
xor
leave
cmp
out
lret
pushf
pop
ret
or
mov
in
adc
mov
lret
roll
mov
test
cli
jnp
shll
push
sbb
jp
das
outsb
scas
ret
std
sbb
repnz
mov
fcmovnbe
lret
pop
decb
push
mov
inc
dec
in
xlat
xchg
sbb
adc
fildll
fisttpl
fldl
repnz
or
into
cmp
jb
lahf
push
xor
adc
sub
popa
rcrb
jecxz
pop
jmp
iret
fwait
pop
sub
in
add
ds
pop
xor
imul
mov
ljmp
shll
lods
iret
push
dec
dec
sub
xorb
add
orb
jnp
dec
hlt
push
inc
popa
xchg
or
push
jecxz
xor
mov
push
push
adc
pop
and
loope
leave
xchg
add
pop
push
leave
pop
and
test
lods
sub
xchg
xor
ss
inc
or
mov
imul
mov
mov
outsb
xchg
jnp
adc
xchg
jo
shlb
sbb
test
xlat
cmp
pop
add
mov
cmpsl
andb
clc
sbb
cmp
cmpb
cmp
xchg
lret
mov
mov
call
out
adc
xchg
cmpsb
cltd
adc
xor
mov
mov
divb
aas
clc
shl
repnz
out
xchg
cmpsl
sbb
mov
outsb
repnz
push
push
fidivl
push
mov
fmuls
jmp
mov
int
mov
cmp
icebp
shlb
xor
sarb
mov
sub
clc
gs
mov
mov
fdivs
pop
mulb
fisubs
and
ret
scas
sbb
push
dec
add
push
jae
sub
add
mov
imul
ja
scas
jbe
xchg
xor
jbe
sub
pop
jne
mov
push
cmp
dec
movsl
xor
and
add
mov
mov
bsf
cmc
dec
scas
cld
jmp
clc
mov
xor
jg
xor
arpl
fcmovb
repz
leave
or
sub
pushf
fcomp
sub
out
out
je
sbb
jp
int
out
arpl
mov
jnp
inc
pop
cmp
xchg
push
sti
xchg
lret
mov
mov
sub
outsl
xchg
incl
mov
pop
jp
cmpsl
xchg
jno
jmp
dec
mov
pop
sub
jns
pop
add
mov
pop
inc
gs
repz
rorb
clc
push
jp,pt
out
out
icebp
xchg
lods
adc
ds
mov
cmpsb
push
jl
mov
xchg
addr16
aam
sbb
das
out
and
xchg
out
lock
or
pop
ja
add
aas
daa
jge
shrl
pop
das
imul
xor
adc
outsl
pop
in
stos
mov
push
loope
pushf
arpl
nop
pushf
cmc
mov
and
jns
cld
add
lods
jp
xchg
test
add
repnz
fcoml
lret
pop
leave
sub
mov
xor
enter
xchg
mov
das
addr16
push
sub
scas
fistpl
mov
repz
loopne
dec
dec
push
add
and
push
and
shll
insb
outsb
jge
clc
or
mov
movsl
adcl
stos
jg
into
jge
into
add
mov
cltd
xor
sub
js
mov
inc
sbb
arpl
aas
scas
xor
lcall
push
sbb
mov
add
pop
cmc
push
xchg
cmc
xchg
pop
and
cmp
mov
mov
nop
int3
or
jg
pushf
les
lret
push
xor
adc
pop
loop
pop
out
mov
jmp
and
sbb
or
pop
repz
xchg
push
pop
cmp
rorb
and
fs
aaa
and
std
movsl
aaa
stc
inc
mov
jo
mov
mov
and
push
mov
pop
xor
stc
and
or
pop
dec
jns
js
inc
rcll
test
inc
insb
fisubrs
cmc
push
imul
sub
lods
bound
mov
and
sub
jl
mov
fwait
inc
lds
rol
sti
xchg
out
push
sbb
dec
sub
push
in
aad
mov
adc
arpl
repz
fsubr
sar
sbb
add
lds
cmp
pop
lahf
inc
je
and
stos
test
or
aas
int3
mov
inc
insl
sbb
xor
out
nop
push
ret
jmp
sub
jne
lcall
stos
cltd
mov
xchg
test
fstpt
movsl
adc
mov
mov
pop
jo
inc
push
mov
or
sub
push
std
aaa
test
sub
inc
push
js
dec
adc
daa
fwait
inc
jne
test
mov
mov
cmc
jle
adc
stos
ret
mov
outsb
loop
aas
inc
mov
mov
mov
jns
cli
mov
loop
aas
mov
cmp
in
ljmp
xchg
adc
sub
movsl
cmpsb
orl
mov
sbb
jno
mov
aam
sub
aam
inc
lds
in
lods
push
inc
inc
add
out
adc
sub
int
cmp
and
pop
xchg
filds
data16
scas
add
xchg
sbb
test
ret
or
and
xlat
mov
push
mov
je
jge
ljmpw
cli
insb
mov
jo
push
cmp
stc
rcll
js
out
push
ja
jmp
dec
shrb
jecxz
mov
lret
stc
cmpsl
xchg
repnz
pushf
dec
mov
add
mov
insb
out
dec
movsb
push
or
sti
mov
xor
inc
pop
sbb
mov
mov
jecxz
mov
push
arpl
pop
add
in
je
mov
mov
mov
fdivl
push
shlb
loopne
mov
insl
push
jbe
jns
cmp
push
lret
hlt
fsubrl
out
lret
mov
add
aaa
push
xor
mov
mov
fists
aad
sub
outsl
cmp
daa
xchg
dec
cmp
cmp
sbb
mov
fcomps
lret
mull
and
pop
push
jno
ficompl
jp
adc
pop
into
jg
cmpsb
notb
fsubrl
arpl
das
inc
dec
in
mov
or
inc
dec
mov
out
dec
jl
mov
inc
jl
inc
test
mov
jg
xchg
stc
sbb
das
inc
pop
int3
push
sbb
fxch
repz
pop
push
lock
inc
shld
xchg
pop
push
mov
cmpsl
out
cli
sub
pop
scas
jno
xor
and
mov
outsb
into
inc
sbb
xchg
mov
lds
pop
xchg
sti
clc
push
cltd
adc
sub
dec
ret
int
mov
stos
in
inc
ljmp
xor
ret
dec
xor
in
mov
sbb
adc
cld
sub
mov
sbb
scas
dec
das
iret
and
cmp
lahf
sbbl
dec
inc
mov
scas
rclb
imul
je
dec
push
fsts
call
add
push
jb
sbb
dec
int3
or
sub
stos
movsl
rorl
mov
das
cli
imulb
pusha
cmp
sbb
and
iret
scas
cmp
das
pop
ret
nop
sub
outsb
lahf
push
cwtl
dec
mov
cmp
xchg
popf
jns
cmp
mov
outsb
je
mov
xor
mov
in
mov
jbe
mov
repnz
push
sarb
xlat
jbe
push
or
jecxz
mov
cmp
add
negl
adc
fs
xor
pusha
fsubp
cmc
and
xor
es
jb
popf
mov
sbb
fiaddl
mov
out
jecxz
daa
dec
lds
ja
cmc
sub
dec
ret
jo
shrl
sub
add
insl
push
popf
push
jno
pop
in
pop
aas
cs
mov
adcb
mov
or
cmpsl
inc
sbb
push
sbbl
lea
or
xchg
les
jae
shlb
test
jl
fsubs
sub
dec
and
hlt
das
and
call
pop
adc
lret
mov
in
aam
neg
jbe
lock
call
in
sti
jo
lods
pop
xchg
xor
pop
mov
jb
and
ret
loopne
sub
out
inc
mov
popf
xchg
movsl
cwtl
in
rcrl
push
adc
in
into
in
sub
cmp
subl
mov
rcrb
std
imul
daa
mov
lret
jmp
xor
xchg
cmp
xor
mov
xchg
movsb
cmp
fs
mov
std
lods
xchg
mov
movsb
cld
mov
adc
and
les
jp
xlat
fcompl
sbb
pop
pop
das
fisubrl
adc
and
mov
push
pop
mov
cmp
adc
and
enter
adc
xchg
cwtl
inc
cltd
cwtl
movsl
ja
cwtl
xchg
test
pushf
rol
jl
call
lods
push
add
scas
push
and
ds
mov
inc
ret
rolb
adc
leave
repz
mov
lock
xchg
sbb
jo
inc
or
xor
ds
push
cmpsl
xchg
in
push
pop
and
xchg
add
sbb
lods
pop
and
sbb
ret
dec
int
in
outsl
pop
pop
and
jae
xchg
data16
jmpw
mov
pop
adc
push
cltd
flds
inc
jae
jl
lret
xor
mov
sbb
stos
and
dec
lea
add
push
pusha
push
loope
dec
inc
insl
xchg
iret
mov
fists
les
xlat
add
jae
or
repz
and
cwtl
and
lock
xchg
mov
push
out
add
test
hlt
lods
and
in
jmp
mov
sbb
cltd
mov
shlb
cli
notl
inc
imul
jmp
pusha
mov
jne
pusha
insb
dec
add
push
or
stos
inc
mov
bound
mov
ret
mov
dec
sbb
das
aaa
es
jmp
mov
int3
and
sub
ss
cmp
or
adc
mov
add
push
cwtl
cmp
jb
mov
inc
push
mov
sub
pop
ret
scas
in
fiaddl
in
push
push
fadd
cmpsb
dec
pop
jnp
mov
xor
mov
jnp
es
and
jae
scas
jnp
push
adc
into
ss
push
dec
outsl
xchg
add
mov
add
icebp
inc
outsl
stos
xchg
mov
sbb
xor
aam
pop
in
pop
adc
push
psubsb
add
inc
insb
jnp
cmp
or
cmpl
std
push
cmpsl
jecxz
nop
add
insl
dec
aaa
fnstenv
xchg
adc
mov
addb
mov
repz
inc
pop
stc
lret
mov
nop
cmp
cmp
jecxz
das
mov
lock
xchg
xor
push
ljmp
sarb
pop
and
pop
out
ret
sub
xchg
or
mov
imul
rorl
cmp
lock
inc
outsl
cli
out
inc
jae
and
pop
es
xor
loopne
mov
aaa
mov
lods
jle
inc
aam
jns
dec
stc
or
mov
dec
mov
jo
ret
stc
push
lret
mov
fwait
adc
push
test
adc
mov
test
jl
push
add
jo
imul
xchg
int
mov
out
lods
and
sub
push
cmp
ja
mov
cmp
cmp
movl
addr16
pop
jp
mov
jp
popa
aaa
mov
xchg
sbb
add
add
sbb
adc
mov
negl
jno
dec
adc
lret
imul
cmp
cmp
jmp
sub
xchg
arpl
and
les
rol
lock
lcall
dec
mov
ss
mov
jo
mov
sub
idivb
or
enter
stos
fldcw
xchg
mov
jmp
sub
pop
push
sarl
sarb
stos
mov
pop
inc
in
mov
stos
add
or
aas
cmc
in
inc
lods
aas
sbb
adc
sti
lcall
or
inc
or
notb
sbb
lcall
push
insl
sbb
push
cld
mov
inc
imul
stc
mov
test
sub
imul
inc
movl
stos
push
sbb
sbb
push
std
jbe
popa
pop
push
inc
mull
cmp
in
inc
sub
les
add
pop
fwait
nop
or
ror
add
dec
rcll
dec
in
das
push
ss
mov
insl
rorl
pushf
mov
add
push
push
pop
jg
ds
test
xchg
pop
sbb
push
and
testb
js
loop
inc
dec
push
das
jnp
cmp
add
in
xchg
add
movsb
xlat
lahf
cwtl
cmp
jo
xchg
dec
lret
into
and
loope
cmpsl
sub
lea
mov
dec
inc
add
cmp
jo
les
xor
dec
loopne
in
les
fsubr
iret
adc
in
add
push
or
inc
mov
stc
and
out
mull
sbb
call
dec
xchg
fnstcw
jno
or
cmpsb
pop
mov
adc
push
mov
lret
and
lods
push
sub
test
cld
mov
aam
mov
jge
pop
and
leave
ficomps
ror
cld
cmp
test
mov
jle
push
mov
aam
pop
aam
or
cmp
scas
jp
jl
lcall
add
push
xchg
cwtl
movsl
in
xchg
iret
sbb
xchg
xchg
mov
iret
es
inc
movsb
mov
shll
mov
sub
ret
pop
enter
rcrl
pop
std
ficomps
cld
push
into
mov
cs
lcall
sbb
add
sbb
fs
mov
test
movsb
int
add
stos
push
jne
stc
cmp
jnp
scas
daa
jge
sbb
cmp
aam
das
jmp
or
pop
jp
xor
test
and
int
mov
imul
and
mov
push
mov
fildll
shll
jno
dec
xchg
rcrb
mov
nop
adc
dec
add
adc
push
sub
and
mov
imul
xchg
jne
pop
pushf
lret
ja
aaa
adc
bound
and
xchg
pop
push
xor
cltd
add
inc
lds
or
dec
push
add
push
mov
or
sbb
adc
decb
inc
mov
mov
int3
push
jle
data16
ds
cwtl
mov
sub
push
dec
fdivl
add
repz
imulb
cmpsb
push
pop
sub
pop
dec
dec
pop
mov
add
rolb
outsl
dec
not
pop
jle
inc
cmp
mov
hlt
cmp
push
ret
jmp
inc
stos
loopne
scas
mov
xchg
andb
xor
addl
sahf
scas
outsl
pop
and
les
arpl
rol
popl
or
mov
adc
add
loopne
jl
jp
cld
ret
ja
rorb
mov
push
cltd
andb
jp
and
xor
adc
test
lock
mov
mov
aaa
je
and
rcrl
adc
mov
xchg
flds
mov
out
add
pop
cmpsb
out
cwtl
sbb
jb
xlat
sarb
icebp
hlt
mov
in
rcrb
or
push
mov
push
lcall
push
sar
mov
pusha
pop
dec
xor
dec
push
jnp
mov
sub
dec
adc
xchg
jne
jns
dec
push
cmpsl
cmp
int3
xchg
ds
in
dec
nop
mov
xor
and
xor
xor
int
out
js
push
daa
lret
cmpsl
add
or
mov
push
or
hlt
cmc
xchg
cmpsb
std
adc
dec
pop
scas
lcall
adc
xchg
adc
or
xor
push
cwtl
push
sub
bound
aaa
or
repz
push
lret
mov
gs
lods
call
cmp
je
push
data16
or
push
dec
call
pop
inc
add
clc
das
sbb
sub
inc
xor
xor
jg
dec
mov
scas
dec
ret
leave
rcrl
cmp
cmp
xor
jg
fimuls
out
jo
popa
mov
lods
cltd
push
rclb
cmp
pop
daa
mov
nop
ja
cmp
xchg
es
and
push
fwait
and
idivl
cmp
add
sbb
idiv
jge
push
push
push
cmp
mov
mov
and
mov
stc
jle
cmpsb
mov
js
xchg
mov
call
stos
lods
sbb
in
lods
psubb
dec
insl
xchg
dec
or
lock
pushf
jmp
fcmovb
sbb
das
or
push
xor
jg
fdivrs
dec
addr16
adc
loop
int
pop
inc
jecxz
shlb
sti
cmp
ljmp
adc
jae
lods
mov
decl
adc
and
or
out
scas
into
push
scas
xchg
cwtl
push
pushf
test
jl
push
mov
sahf
jne
xor
or
rcrb
cld
scas
sbb
hlt
ljmp
nop
test
int
into
dec
jl
test
and
or
in
popa
dec
mov
pop
xor
repnz
in
dec
inc
nop
cli
xchg
xor
pop
mov
cmp
out
xor
cmpsl
lea
in
cmp
push
sti
or
xor
addr16
cwtl
pop
pop
jecxz
gs
mov
inc
cmp
ret
fsubrs
xchg
push
dec
jae
cwtl
cmp
pop
mov
movsl
imul
clc
ret
xchg
and
andb
push
imull
mov
lcall
xchg
xchg
out
cmp
or
and
imul
test
mov
pop
or
out
pop
outsl
add
test
js
mov
pop
aaa
mov
mov
mov
and
xchg
inc
pop
cld
inc
lods
insb
arpl
or
add
filds
jb
xchg
bound
or
push
test
mov
loope
fdivr
pop
cmpsl
fadds
popa
and
loope
dec
and
cmpsl
dec
mov
cmp
lods
in
pushf
aaa
cmp
imul
xor
fs
xchg
or
idiv
jmp
scas
lcall
insb
xchg
aas
push
gs
mov
push
inc
test
xchg
mov
in
xchg
into
mov
lret
add
jecxz
aaa
cwtl
adc
ljmp
and
mov
sbb
ficompl
adc
sahf
add
out
mov
sub
mov
xor
inc
pop
push
mov
in
addr16
out
or
xchg
cli
ja
sbbl
jne
jmp
and
cmp
add
enter
add
pop
xchg
xor
xchg
gs
push
pop
ljmp
lret
ljmp
inc
ret
mov
loop
shr
xor
and
sbb
fwait
cmp
cld
and
aas
sbb
repz
ljmp
shll
dec
jmp
fs
js
fstl
push
pushf
pop
mov
js
add
xchg
push
scas
xchg
jae
add
dec
jg
xchg
rcrb
push
xchg
adc
bts
mov
icebp
inc
sbb
stos
cmp
mov
mov
push
jge
mov
mov
aas
cmp
or
movsl
pop
jge
cmpsb
pop
cmp
push
cmpb
sub
mov
mov
loopne
enter
cmp
push
shll
data16
insl
jb
aam
cmp
cmp
jnp
fldenv
in
mov
adc
mov
movsb
push
push
les
jl
stc
mov
mov
fdivrs
lods
movl
sub
aas
gs
jecxz
xor
popf
push
fcmovbe
in
jo
cltd
mov
mov
lea
das
ret
jns
add
push
mov
push
pop
jbe
dec
jbe
nop
dec
sub
and
mov
pop
xor
mov
scas
subl
adc
ja
jno
xchg
daa
jg
adc
dec
adc
xchg
pop
mov
les
mov
fildl
pop
xchg
cwtl
push
xor
mov
cmp
negl
rcll
pop
jo
add
dec
out
jae
jmp
aaa
mov
add
test
loope
push
adc
shr
popf
fadds
push
pushf
lds
rolb
pop
sbb
push
mov
sub
push
mov
push
lret
push
cwtl
xor
or
add
push
stc
loopne
bound
mov
in
mov
outsl
xor
lds
neg
lahf
xchg
xlat
jl
pop
sub
loope
mov
pushl
in
inc
dec
pop
adc
xor
pushf
cmp
lahf
cld
rcr
jns
scas
pushf
out
popa
xor
or
in
jmp
imul
dec
bound
push
dec
adc
jnp
mov
or
xor
xchg
cmp
enter
adc
sbb
stc
jb
xor
mov
push
mov
xchg
and
sbb
arpl
fwait
push
sub
pop
pushf
imul
iret
jnp
adc
sub
push
mov
fcmovnbe
lock
fisttpl
sbb
iret
in
inc
xchg
out
test
addr16
psubusw
loopw
dec
loop
aaa
sbb
inc
daa
xchg
fucom
aaa
das
outsl
xorl
mov
pop
lahf
lcall
mov
mov
dec
add
xchg
cmc
jne
pop
add
arpl
cmp
ss
fildl
lock
inc
stos
out
hlt
mov
test
adc
je
push
test
outsb
or
pop
cli
mov
test
or
mov
cmp
jmp
dec
cmp
outsb
xchg
jbe
pop
sub
sub
in
clc
xchg
cltd
and
push
lret
lcall
jno
dec
pop
imul
push
aam
and
lret
call
sbb
shrb
test
pop
in
xchg
cmp
push
inc
mov
std
pop
dec
out
inc
xor
xchg
enter
sub
aaa
xchg
xor
paddsb
mov
push
pop
sbb
and
dec
add
iret
or
cmp
clc
adc
enter
les
xor
sbb
sbb
sub
test
and
leave
pop
popa
and
test
sbb
aam
xchg
add
rolb
xchg
adc
dec
jbe
lock
stos
sub
mov
push
jae
adc
hlt
or
pushf
mov
pop
inc
data16
mov
out
lods
push
incb
add
or
nop
push
jl
jae
outsl
fwait
xor
xchg
xor
addr16
or
jne
fldcw
pop
jg
pop
sbb
or
loopne
xchg
and
fucomp
sti
xchg
push
sbb
dec
int3
pop
jb
xor
dec
xchg
push
stos
bound
outsl
sbb
mov
sti
pop
repz
push
cmp
jnp
pop
inc
sub
cli
out
lret
mov
adc
and
aaa
mov
adc
test
jne
pop
dec
clc
mov
fs
mov
pushf
mov
dec
or
les
ret
int3
mov
mov
xchg
add
xlat
and
lock
inc
loopne
mov
test
xchg
decb
jnp
mov
mov
out
data16
lahf
out
mov
mov
lret
dec
adc
sti
and
ret
out
lcall
pop
add
dec
adc
add
cmc
and
and
push
adc
dec
mov
jp
cmpsb
lret
xchg
push
popf
inc
push
xchg
xor
and
adc
loopne
adc
subb
sahf
daa
mov
add
xchg
outsw
jmp
xchg
repnz
insb
scas
sub
stc
inc
push
and
adc
cmp
lock
pop
jg
cs
jbe
jae
in
int
jb
adc
push
dec
mov
popa
jle
es
xor
ret
mov
mov
jp
clc
inc
sbb
popa
testl
mov
orb
fs
add
stc
push
pop
outsl
cmc
push
aaa
push
dec
pusha
cli
mov
hlt
dec
cmp
adc
push
xor
xchg
pop
mov
push
xlat
popf
or
jge
fs
pusha
mov
scas
push
xchg
fdivrs
or
push
or
xor
add
xchg
int3
ficoms
nop
lahf
mov
push
mov
mov
push
cmpsb
test
cmp
repz
push
insl
sbb
lret
hlt
mov
loopne
insb
jmp
bound
jle
ror
mov
aaa
push
pushf
jmp
adcl
xor
xchg
jb
std
push
lahf
sub
lock
xorb
mov
push
es
ljmp
dec
adcb
lret
push
adc
out
sbb
lods
repz
jle
push
sahf
sbb
stos
lock
fnstcw
push
jno
call
adc
cmp
dec
loop
fwait
lahf
add
movsbl
xor
inc
out
bound
xor
fs
or
xchg
pop
xchg
ret
movsl
mov
xchg
adc
cs
fistpll
mov
xor
int
lret
and
sbb
or
pusha
cmpsb
sbb
cmp
inc
xchg
mov
mov
mov
outsb
int
inc
stos
and
vpaddw
pop
fxch
in
xor
jbe
mov
test
hlt
pushf
push
loopne
arpl
xchg
push
outsb
rcrb
shlb
or
adc
lcall
pushf
pop
rcll
bnd
repnz
je
mov
das
rorb
push
mov
loop
mov
dec
dec
lret
nop
or
xor
cmp
scas
fs
fstpl
out
in
out
sbb
loope
add
and
outsb
fwait
sbb
movsl
sbb
push
fistl
xchg
cmp
ljmp
push
enter
divl
inc
insb
pop
push
fisubs
enter
orb
fcoms
jb
cmpsl
mov
out
jmp
sub
call
jne
stos
sub
das
divb
lods
into
jnp
aam
xor
outsl
jecxz
cmp
jnp
fcoml
add
or
mov
xor
adc
mov
xchg
jns
stos
and
into
lods
fs
test
or
ds
je
jb
mov
shrl
dec
xchg
inc
aas
cmp
test
popf
gs
fs
cmp
movsl
cltd
scas
lods
mov
ret
enter
adc
pop
sbb
xchg
loop
cmc
cli
pop
push
dec
mov
decl
lret
mov
pop
fs
xor
scas
bts
or
insb
out
cmp
mov
push
and
pushf
sbb
lahf
mov
mov
sysexit
rorl
icebp
jg
aad
popf
add
mov
xchg
or
imul
iret
mov
fsts
jle
andl
cmp
push
xchg
popa
pop
mov
push
pushl
pusha
test
mov
mov
out
clc
sub
fisubrl
cmp
mov
xchg
daa
adcb
adc
mov
mov
push
fnsave
mov
jbe
shl
icebp
push
in
inc
push
aas
fists
jnp
rcrl
cltd
pushf
sti
pop
out
mov
addb
movsl
lahf
in
mov
pop
xchg
jbe
js
gs
scas
ret
push
sub
outsb
mov
mov
test
pop
out
dec
xchg
nop
cmp
lods
sub
push
ret
hlt
ss
dec
sar
and
xchg
int3
jnp
repz
sub
adc
lret
push
mov
sbbb
mov
div
ja
js
pushf
mov
movsb
idivl
push
jle
and
rclb
nop
in
push
jbe
and
xchg
ja
loope
call
lea
int
pop
mov
mov
ret
push
mov
or
mov
aad
sub
sub
mov
lcall
arpl
rol
add
ljmp
repz
inc
push
pop
arpl
cmp
mov
popa
mov
aam
mov
xchg
movsb
popa
jno
outsb
pop
push
push
push
jns
push
cs
pop
fisubs
stos
xchg
cmc
mov
movsb
pop
fcmovu
out
dec
inc
xchg
popf
jo
test
fidivl
cmc
push
in
mov
mov
popa
stc
sbb
sub
ret
xor
push
test
inc
rcrl
fwait
or
adc
popf
push
cld
jo
lcall
push
and
xor
xor
mov
adc
xor
jecxz
pop
insb
jecxz
movsb
outsb
inc
lcall
pop
or
jb
sub
pop
test
mov
adc
and
loop
sub
cli
ja
push
dec
mov
adc
call
cld
je
cmpsb
dec
sbb
mov
movsl
aas
into
lods
inc
or
push
mov
loop
xchg
bound
xchg
inc
push
shlb
sahf
xor
xor
sub
sub
loope
sub
sbb
jns
stos
xchg
fisttpll
push
sbb
fs
dec
jg
shll
mov
inc
jae
out
imul
or
jne
xchg
xchg
andb
push
adc
daa
jge
inc
xlat
sbb
xor
ret
test
fiadds
sarb
stos
imul
add
dec
test
arpl
dec
repz
jle
jo
inc
jmp
repz
outsb
mov
mov
sbb
dec
mov
or
or
mov
lods
mov
add
insl
push
leave
dec
aam
test
push
gs
jmp
jne
imul
inc
jg
ret
sub
adc
ja
sbb
sti
loop
jnp
push
jb
push
pop
aad
jp
cltd
xchg
clc
in
hlt
xor
testl
fdivrl
adc
movsb
arpl
hlt
inc
sahf
mov
pop
test
cmp
cwtl
push
stos
ds
inc
out
shr
sbb
mov
gs
pop
xchg
xor
dec
aam
inc
mov
push
cmp
insl
and
aas
test
pusha
fnsave
fsubrs
sub
mov
jecxz
pop
mov
call
scas
push
outsb
pop
sti
push
sti
or
xchg
sub
xchg
add
inc
xchg
out
fwait
push
icebp
sbb
mov
out
sbb
xor
xchg
mov
mov
inc
push
stos
jle
inc
mov
cmp
sarl
mov
mov
mov
std
pop
dec
in
lods
and
mov
xchg
push
lret
loope
sub
mov
call
lret
daa
push
sub
push
sbb
xchg
std
aas
or
mov
pop
jecxz
jae
jmp
shlb
xor
adc
mov
mov
ret
push
fldt
loopne
push
mov
dec
out
adc
jb
aam
sub
les
jmp
call
ffree
fstp
mov
jne
fstpl
js
iret
fwait
dec
jmp
inc
sbb
xor
jns
mov
lock
cmp
cmp
pushf
xor
sub
dec
jno
movsb
pop
add
mov
mov
and
xlat
cmpsl
call
push
dec
pop
mov
bswap
outsl
and
mov
repz
or
mov
pop
cli
cmp
mov
ficompl
push
and
pop
mov
inc
or
sub
push
dec
push
add
repz
fucomip
adc
outsl
push
cs
inc
push
ljmp
mov
cmpsl
das
cmp
pop
mov
pop
cmp
inc
cli
push
dec
mov
sub
jecxz
xchg
in
lods
inc
out
addr16
les
jp
mov
dec
pop
jle
mov
adc
xor
and
pop
sbb
pop
xchg
js
mov
mov
mov
outsl
lods
xchg
dec
in
stos
fisttps
enter
jbe
das
dec
pop
aam
add
call
mov
mov
test
xor
cwtl
test
into
sti
out
in
cld
cmp
xchg
pop
mov
popl
bound
ret
push
and
mov
repnz
lcall
repnz
mov
jbe
sub
jecxz
push
cltd
rorl
jl
xchg
mov
push
ror
outsb
pop
scas
xor
push
push
out
adc
fadds
test
fistl
pop
xor
add
adc
ret
addr16
in
sti
mov
jb
adc
mov
jno
or
jmp
mov
add
rorb
mov
icebp
pcmpgtb
movsl
add
push
mov
adcl
jmp
rorl
dec
xchg
test
lea
mov
pop
out
cmp
repnz
mov
imul
adc
sbb
cmp
jmp
adc
sub
push
cs
popf
pop
xchg
jmp
ret
fnstenv
ja
iret
imul
imul
rcrb
insl
clc
ljmp
sbb
roll
outsl
clc
sub
push
xor
sub
cmp
sub
jmp
out
arpl
xchg
cmc
loopne
mov
mov
stos
inc
pop
jmp
mov
enter
mov
mov
loope
dec
jns
fisubrs
inc
or
aaa
out
mov
push
adc
insl
mov
add
popf
sub
push
or
repz
dec
sbb
repnz
fiadds
addr16
or
paddusw
xchg
add
and
mov
imul
jne
jno
aad
fsubrl
dec
jecxz
mov
test
out
or
clc
xor
std
sarl
insl
push
add
lahf
pop
das
jnp
rol
in
xchg
push
sbb
cmpsb
push
mov
outsb
mov
sub
dec
cmp
mov
dec
lahf
dec
push
add
int
stos
je
xchg
scas
mov
int3
cmpsb
sarl
dec
jne
cmp
pop
je
outsb
cmp
xor
clc
sub
push
loope
xlat
push
ffree
fs
and
dec
push
rclb
push
and
inc
mov
subl
jbe
add
daa
icebp
je
dec
add
leave
lret
or
in
cmp
dec
in
ror
ror
loopne
dec
insl
outsb
jmp
pop
cmp
mov
sub
mov
sbb
xchg
stc
ja
mov
sarb
imul
jo
ret
icebp
cmpsl
sub
popf
xchg
add
inc
push
jne
loopne
movsl
and
xor
das
inc
or
cmp
jl
subl
popa
xor
fsubl
adc
nop
pushf
and
pop
pop
push
add
jae
sti
jbe
pop
cmpsl
xchg
sti
mov
dec
mov
stc
inc
rorl
or
ljmp
adc
lods
repnz
psadbw
mov
mov
sti
lds
adc
lods
mov
jbe
ret
or
mov
movsb
ds
adc
inc
outsb
lods
out
xor
shrb
and
imul
int3
sub
mov
pop
pop
in
call
popa
leave
inc
imul
insb
and
sub
adc
pop
inc
fstpl
add
pop
lds
ror
mov
ret
sbb
xor
mov
mov
subb
cmp
dec
cmp
out
lods
out
aad
dec
dec
inc
pop
push
cmp
jge
mov
int3
pop
jmp
xor
dec
data16
pop
adc
scas
push
jb
xor
or
ja
std
cwtl
add
inc
push
xor
jbe
call
out
mov
inc
mov
imul
xor
mov
or
inc
and
mov
ss
push
sbb
xchg
movsl
or
stos
mov
daa
mov
dec
adc
mov
jmp
push
sahf
repz
in
xchg
mov
mov
cmpb
pop
sbb
lea
xorb
std
pop
and
jne
or
mov
adc
inc
xchg
and
in
add
cmc
mov
inc
insb
mov
sbb
mov
ja
loope
dec
pop
ss
ss
mov
scas
cmpsl
or
fmull
mov
push
push
test
push
sti
cmpb
in
xchg
xlat
jnp
sub
test
dec
enter
add
dec
sbb
and
in
push
xchg
jmp
mov
aad
cmp
in
out
clc
rolb
pushl
cmp
je
pop
shrl
pop
jae
jge
icebp
pop
sbb
xchg
fcomps
insl
push
or
xor
sub
sub
pop
push
or
pop
les
aad
adc
xor
aas
pop
rcl
sbb
repz
insl
xchg
stos
jb
sub
xlat
or
hlt
fs
jp
call
dec
and
cld
and
xchg
push
add
sbb
xor
dec
loope
into
pop
jl
scas
test
xlat
xchg
xlat
aaa
enter
dec
fbstp
jne
movsb
mov
cmp
xchg
inc
mov
enter
lods
ror
fisubl
scas
push
xchg
jno
aad
jge
inc
mov
inc
sbb
aad
test
cld
mov
dec
pop
push
pop
notb
xchg
inc
pushf
add
fwait
cmp
imul
cld
fisubrs
lahf
arpl
jp
dec
test
add
push
inc
or
mov
inc
jb
mov
insl
jg
push
jle
fwait
mov
test
aam
xchg
out
mov
cmpsb
mov
lcall
xchg
divl
dec
pop
jb
inc
jb
js
jmp
fwait
or
jge
out
call
xor
imul
add
adc
push
loop
sub
subb
iret
pushf
adc
pop
lods
add
mov
sbb
jno
mov
add
add
pop
lahf
ficoml
push
das
mov
cmp
gs
dec
in
pop
int3
out
cmp
mov
fstpl
xor
ret
mov
cmpsl
inc
aad
push
dec
mov
jecxz
and
loopne
sbb
push
cwtl
into
or
aad
gs
je
jae
hlt
lret
push
fistps
push
fwait
popa
cmp
jmp
scas
stos
push
sti
int
dec
cwtl
fimuls
xchg
decl
leave
inc
pushf
or
lods
loopne
mov
repz
push
je
adc
adcl
push
mov
ret
js
repnz
cmc
inc
push
jae
dec
mov
shl
mov
clc
dec
mov
cmp
popf
sbb
inc
and
movsb
cltd
mov
push
mov
mov
cmp
testb
mov
dec
pushw
mov
and
mov
mov
add
add
sub
sbb
and
push
outsb
fistl
js
out
jle
or
adc
pop
or
mov
mov
xchg
loop
mov
xchg
aas
sub
cmp
pop
fcomps
lods
cli
xchg
push
loop
lahf
fnstenv
or
hlt
add
pop
cmc
mov
adc
dec
sbb
hlt
or
dec
inc
lock
mov
pusha
stc
pop
xor
xor
jp
idiv
dec
xor
test
icebp
and
mov
push
stc
rcll
in
mov
cli
and
and
arpl
xchg
and
dec
shlb
xchg
dec
call
cwtl
mov
adc
sbb
dec
idivb
mov
jmp
cmp
mov
cmc
je
cs
into
fidivrl
call
and
dec
imulb
pop
arpl
rclb
inc
lret
jo
pop
dec
dec
push
dec
fadds
dec
xor
sub
cmp
cmp
imul
xor
imull
std
ds
or
push
xchg
loop
movsb
xlat
repz
jno
std
sub
mov
movsl
fsts
mov
dec
jno
mov
es
imul
ss
icebp
rorl
pushf
cmp
pop
out
or
orb
ljmp
cmp
add
pop
or
dec
fidivl
adc
xor
xor
cmp
xlat
or
dec
popa
fnstcw
mov
jnp
imul
add
sbb
xchg
jbe
aaa
fsubs
jg
and
ret
push
lds
scas
cmpsb
rorb
push
outsb
stos
ds
js
pop
xor
and
dec
fsubrs
gs
mov
jne
lret
andb
push
jae
inc
cltd
jb
push
test
divb
aas
shlb
stos
das
popa
jno
xchg
adc
rol
sub
cmp
shll
lret
icebp
pop
shrl
and
dec
mov
pop
xchg
lods
mov
js
pop
adc
nop
mov
mov
xor
jo
test
pushf
imul
hlt
sbb
enter
or
icebp
lea
rolb
je
out
push
sarl
ret
sub
cmp
cmp
mov
movsl
loopne
or
xor
mov
icebp
jb
mov
fdivl
adcb
cs
xor
mov
pop
scas
xchg
test
clc
sub
hlt
jo
mov
jmp
icebp
xchg
xor
std
bound
aas
jp
in
test
stos
fists
inc
push
in
cmp
js
les
repz
aad
and
push
pop
nop
or
mov
lea
fnstcw
mov
cmpsb
xor
jge
mov
ds
jnp
fldl
or
fbld
pop
mov
jmp
push
jmp
pop
and
out
jg
and
mov
and
xor
aaa
dec
sub
iret
pop
add
rcll
xlat
add
jae
js
cmpsb
adc
mov
stos
les
dec
sbb
sub
dec
jns
sbb
les
add
or
test
and
push
mov
leave
lods
ljmp
jns
dec
ja
in
and
fs
cmp
xchg
cmpsl
and
sub
push
lret
xchg
inc
cmc
shl
leave
aas
test
jno
mov
mov
mov
cmpl
xchg
mov
daa
cld
ds
or
mov
lods
xor
or
pusha
mov
paddusw
shrl
or
jl
adc
stc
outsl
shrl
cmpsl
xlat
das
jno
testb
test
rorl
popa
mov
push
in
sub
xchg
dec
inc
xchg
addr16
daa
jne
das
or
cmpsb
inc
cmc
js
jp
ds
sbb
inc
xchg
inc
jecxz
adcb
ds
sbb
in
pop
movsl
pop
pop
pop
mov
call
mov
dec
fcomps
sbb
fwait
mov
stos
insl
cmp
imul
divb
mov
out
clc
cmp
popa
sbb
fstpt
pushf
test
dec
sti
daa
test
push
jge
mov
popa
popf
mulb
cmp
lret
inc
mov
cmp
bound
xchg
sbb
push
xor
adc
mov
in
lret
jge
push
mov
rcrl
adc
xchg
fs
shlb
shlb
test
jmp
adc
mov
add
pop
xchg
popa
fistpl
fiaddl
mov
or
arpl
data16
dec
inc
out
mov
pop
adc
dec
and
pop
mov
jg
mov
mov
add
jbe
push
movsb
fwait
jns
mov
pushf
sbb
add
pop
cld
add
xchg
data16
cmp
stos
add
dec
jl
faddp
popf
aas
jbe
xlat
ds
out
push
test
fsubr
idivb
mov
addr16
out
sub
xchg
push
ja
xchg
xchg
add
mov
outsb
xor
stc
popa
push
mov
mov
push
ja
loop
add
push
push
movb
adc
mov
cmpsb
negb
inc
and
repz
jb
mov
pop
pop
ss
push
mov
inc
sahf
imull
dec
enter
arpl
je
adc
movsb
fistpll
popa
scas
rcr
fstp
inc
cld
mov
xlat
lods
jl
cli
push
lods
cmp
ret
push
and
xchg
inc
in
mov
jne
scas
icebp
in
loop
outsl
sub
ror
pop
pop
scas
and
sahf
fisubrs
cmp
movl
movsl
xchg
lret
adc
xchg
dec
mov
sbb
pop
jmp
mov
popa
mov
lret
lds
stos
xchg
aaa
std
pop
pop
pop
int3
icebp
iret
sbb
pushl
loop
pushl
fdivrl
ss
popa
jb
les
in
adc
rcrb
sbb
adc
mov
jmp
mov
adc
pop
sub
aaa
hlt
data16
mov
je
lret
and
adc
and
test
push
cmp
push
aas
mov
insl
add
lds
fwait
jmp
cmp
imul
lods
jae
push
jns
push
push
xchg
fidivrl
push
dec
push
jge
aas
repnz
xchg
mov
adc
jb
sub
and
pop
out
scas
xchg
mov
xchg
mov
rorl
aaa
js
das
dec
clc
test
mov
inc
push
pusha
insb
scas
lods
mov
mov
cmp
cmc
call
out
sub
into
mov
loop
js
test
dec
ficoms
jnp
jp
fisttpl
push
aam
jge
ljmp
or
xor
jnp
mov
mov
jmp
inc
in
dec
in
jb
mov
nop
bswap
xchg
add
jae
cmp
test
out
sbb
dec
pop
shlb
pusha
int3
lahf
stc
add
xchg
fiadds
mov
sub
push
pop
mov
sti
add
stc
xchg
lock
sub
jno
shl
inc
mov
xorl
mov
fisubrs
inc
add
jo
or
test
orb
push
sbb
or
mov
popa
out
mov
jb
xchg
loope
jp
xor
and
mov
push
mov
jl
jle
mov
popf
aaa
xor
jle
xchg
call
jno
cmpsb
subb
into
mov
or
mov
jmp
jp
push
mov
jl
push
sub
sahf
cltd
inc
xor
cmp
ret
pop
inc
cmpsl
lods
cltd
out
dec
sub
xchg
repz
mov
popa
mov
and
rcrl
out
cmp
and
xor
mov
pop
add
sub
xchg
cmpsl
aaa
dec
lcall
add
mov
out
inc
rorl
inc
sub
mov
and
dec
or
nop
fiadds
add
data16
ljmp
inc
jge
popf
push
pop
jne
push
leave
mov
adc
dec
daa
push
fisubl
orl
mov
testb
aad
fdivs
lahf
sub
in
aam
cmp
cmp
mov
test
imul
xlat
pusha
fldt
jno
pop
dec
dec
arpl
inc
test
stos
push
pop
mov
push
jb
in
pop
into
icebp
ds
shlb
mov
cmp
adc
and
push
cmp
jo
iret
inc
xorl
sbb
cmc
test
mov
mov
jne
xchg
sbb
or
add
xchg
push
aaa
popa
scas
and
fistps
leave
mov
shll
sub
movsl
push
repnz
mov
or
in
fs
sarl
mov
loop
sti
or
mov
lds
sahf
pop
cmc
pop
lret
sbb
pop
sbb
mov
adc
sbb
shlb
dec
jmp
lods
or
out
mov
mov
lret
xor
mov
gs
mov
push
rcrl
or
int3
daa
push
lods
int3
mov
out
mov
in
fildll
or
aad
adc
xchg
xor
push
jle
into
mov
les
mov
popl
xor
lods
aad
imul
shl
jb
jecxz
xchg
imul
cld
shrb
dec
neg
inc
ret
inc
jle
fcmovnbe
push
sbb
jp
sar
iret
mov
call
sbb
jae
xor
out
sbb
shl
leave
popf
int
jge
icebp
cli
and
fs
insl
and
test
lahf
aam
adc
sub
or
cmpsb
insl
sbb
js
pop
out
inc
or
pop
icebp
aam
sub
fs
rcll
sti
stos
clc
int3
inc
icebp
push
push
xchg
lods
testb
and
fdivl
push
clc
fnsave
nop
rolb
jge
rol
loopne
jg
cld
or
test
mov
inc
jmp
push
mov
insb
aaa
sub
in
sub
dec
loop
push
insb
pusha
adc
imul
fdivl
loope
pusha
or
pop
or
push
fiaddl
in
sub
in
sub
ja
cld
std
ret
icebp
ja
repz
gs
add
pop
xor
mov
out
inc
and
sbb
sbb
sub
rcrb
fisubrs
cmpb
nop
mov
jo
dec
mov
inc
push
lds
mov
add
fstl
popf
into
es
shrb
lret
outsl
movsb
shl
sarl
mov
mov
mov
std
push
jge
in
inc
andl
adc
cli
lcall
repz
test
enter
jb
adc
rol
ficoms
in
push
fs
push
bsf
dec
pop
and
push
mov
loop
xchg
sub
out
add
sti
icebp
xchg
and
lods
jnp
pop
sbb
inc
leave
insb
sub
xchg
fdivl
cmp
cli
mov
movl
into
push
or
fldenv
and
mov
leave
add
cmp
fists
jae
std
xlat
push
xchg
sub
push
add
sub
sahf
in
add
mov
faddp
mov
cmpsb
iret
push
subb
test
xchg
push
inc
cmp
aam
leave
int3
repnz
imul
data16
in
mov
mov
sahf
mov
test
cmp
stos
inc
add
or
repnz
sub
nop
les
aad
sub
cmpsb
je
xor
push
mov
sub
scas
and
es
dec
mov
mov
movaps
inc
stos
rorl
lods
leave
cmpsb
neg
fsubrl
scas
sti
mov
rorl
shr
lds
mov
push
fists
push
lds
fsts
pop
pop
adc
in
mov
xor
loop
rclb
into
push
cmp
sub
mov
mov
test
out
or
scas
pop
mov
jle
call
add
out
inc
dec
sub
or
cld
cmp
dec
int
nop
jecxz
rolb
inc
pushf
pop
add
and
mov
and
addr16
and
jecxz
pushf
lods
push
jecxz
sub
es
adcl
outsl
fistps
mov
les
rcrb
into
push
gs
dec
or
lcall
adc
dec
mov
lea
mov
xchg
shrl
jmp
cld
or
jb
cmp
subb
lahf
mov
xchg
addr16
jne
aad
dec
cmpsb
jecxz
cld
mov
test
nop
call
push
enter
lahf
call
test
mov
push
xchg
lret
call
xchg
iret
push
mov
mov
sar
cmp
in
enter
pop
hlt
dec
js,pn
rcrl
inc
daa
out
scas
jbe
das
loopne
insl
jecxz
push
pop
test
rorl
fbld
repnz
test
mov
andps
dec
cmc
pop
icebp
xor
xlat
dec
push
sbb
push
loope
jbe
dec
mov
cld
testl
pop
jle
add
repnz
imul
out
stos
nop
sub
lea
popf
mov
push
lret
cmp
and
xor
adc
out
clc
mov
aam
enter
call
pop
mov
push
fsubrs
and
lret
cmpsb
sti
cld
out
push
adcb
cltd
push
xchg
add
adc
xlat
sub
enter
mov
xchg
cmp
inc
ja
popa
notb
add
sub
gs
bound
mov
sbb
push
jecxz
mov
fdiv
mov
sbb
pop
int3
lea
in
rcll
sub
imul
ljmp
aam
sub
mov
xor
jge
dec
imul
jne
push
xor
in
mov
jmp
sbb
add
fbstp
sub
xor
pop
sbbb
inc
inc
inc
jle
jle
ja
mov
fidivrs
push
movsb
repz
popa
movsb
arpl
push
adc
shlb
in
pop
imul
adc
dec
cmp
xchg
pop
outsb
mov
iret
shlb
or
je
push
dec
sti
mov
js
shlb
out
mov
adc
jle
sahf
aaa
xor
decb
shl
sub
repnz
frstor
repnz
adc
stos
pop
push
mov
int
push
lods
or
pop
mov
jge
sub
push
dec
cltd
ret
stos
cld
jp
cmc
dec
dec
mov
dec
push
sti
jp
lods
shrb
or
rcrl
sarl
out
scas
sbb
inc
sub
cli
sahf
mov
sub
mov
xor
gs
fistps
out
repz
loope
push
mov
outsl
mov
and
push
lods
jmp
sbb
rorl
pusha
lcall
cmp
sbb
outsb
and
push
cltd
sbb
jge
dec
jne
jne
mov
sub
iret
jae
imul
inc
outsl
dec
xchg
lods
movsl
mov
push
inc
aas
testl
pushfw
or
or
push
add
inc
movsb
cli
sbb
sub
dec
mov
or
movzbl
jge
add
mov
dec
push
xor
jo
pop
test
jb
in
fildl
xchg
xor
loopne
in
push
xor
icebp
xchg
xchg
pop
imul
scas
scas
mov
adc
or
sbb
ret
int
cmp
cmc
mov
cmp
call
int3
outsb
rcr
sub
fimuls
aas
adc
clc
or
mov
or
addr16
cwtl
dec
insb
adc
cltd
fadd
mov
push
popf
adc
mov
repz
pusha
js
in
dec
add
pop
and
mov
inc
rolb
mov
and
scas
pop
stos
pop
or
enter
pop
cmpsl
std
bound
into
pop
cmpsb
adc
cmp
sti
fbld
jns
repnz
or
xchg
js
and
add
dec
adc
and
push
icebp
cli
dec
lcall
int
enter
cmc
into
cwtl
sub
insl
and
subb
movb
sbb
pop
cmp
sbb
sub
sub
and
push
ja
outsb
fisttpl
jge
cld
xor
mov
xlat
xor
out
movb
jl
jnp
shrb
push
mov
and
or
fbld
adc
add
or
mov
mov
jl
cmpl
xor
pop
lahf
sbb
test
ss
xchg
arpl
lds
push
jge
iret
jnp
push
jmp
mov
mov
sub
pop
mov
mov
rcll
scas
shl
mov
and
mov
xlat
into
dec
jo
dec
push
loope
mov
xchg
or
sti
or
stos
pop
gs
sub
pushw
stos
stos
fstpt
push
sahf
pop
mull
insb
mov
xchg
jge
mov
cltd
int
push
mov
xor
push
sub
xchg
dec
xchg
movsl
shll
mov
cmpsl
jecxz
int3
push
inc
cli
xchg
pop
fbld
xchg
loop
inc
ljmp
inc
fistpll
imul
xor
cmp
sub
popa
jo
imul
or
add
and
jbe
sub
add
fidivrs
cmp
out
dec
stc
dec
mov
repz
aad
mov
popa
mov
repz
add
lock
xor
cmp
push
jg
or
jne
inc
add
outsl
ret
mov
xchg
ffree
add
cmc
jl
sbb
int3
jmp
push
lock
xor
mov
sbb
outsb
or
mov
imul
rcrl
inc
loope
scas
outsb
mov
nop
pop
cltd
jg
inc
cs
adc
push
mov
mov
sbb
push
test
dec
lret
cmp
mov
mov
push
push
mov
daa
push
jno
addr16
repnz
push
sbb
jp
cmp
sti
outsb
sbb
bound
cs
adc
aad
loopw
sub
fsts
in
or
enter
mov
mov
inc
push
cmpsb
pop
jle
add
loop
adc
scas
sbb
push
not
jbe
loopne
sbb
cmp
cmpsl
ss
xchg
mov
mov
dec
push
and
xchg
les
mov
or
hlt
pop
jno
sar
mov
mov
js
cmp
push
in
test
mull
popa
and
std
xchg
adc
sub
fwait
cmp
fsubs
imul
insb
ds
xor
arpl
push
xchg
xchg
cmp
sarb
int
adc
sub
lock
inc
in
xchg
inc
mov
cs
or
test
and
mov
sbb
daa
jne
inc
dec
jne
pushf
scas
xor
fmul
mov
xor
mov
ds
push
mov
xchg
fsubr
inc
or
and
cld
filds
outsl
cltd
pop
jle
pop
and
xor
loop
enter
xor
mov
mov
mov
test
stos
push
jle
push
leave
ret
bt
sbb
aam
daa
xchg
lahf
out
cltd
jne
pop
pop
iret
cmp
shll
fcompp
movsl
sub
xchg
mov
push
loopne
sbb
daa
xorl
cmp
jp
mov
lret
cs
rorb
negb
mov
dec
jbe
mov
sti
inc
jno
ja
cmp
repnz
inc
push
popa
cmp
fwait
push
pushf
pop
iret
sub
dec
dec
sub
xchg
xor
push
mov
movsb
cli
cld
fs
pop
inc
xor
cmp
mov
sbb
xor
mov
lret
pop
sbb
aaa
xlat
cmp
dec
hlt
pop
ljmp
sbb
popf
fstpt
xlat
adc
pushf
mov
xchg
pop
inc
push
ljmp
or
jge
mov
jp
pop
in
fisttpl
adc
jo
out
dec
dec
popf
mov
out
inc
jb
jns
sbb
aas
rcll
jecxz
fidivs
xchg
cmp
lcall
adc
and
fwait
test
std
mov
popa
pushf
cmpsl
sub
scas
cld
push
or
shlb
add
int3
jne
adc
stos
stc
cmp
mov
pushf
jne
pop
and
pop
frstor
in
into
dec
insb
hlt
rol
xchg
bound
lahf
xor
lret
lock
adc
mov
int
xor
mov
neg
or
mov
dec
lahf
sub
test
jge
mov
scas
ljmp
mov
sti
in
fadd
and
loopne
or
push
aam
rolb
ljmp
mov
pop
out
popa
mov
pop
cld
incl
pop
lds
fs
in
jbe
fld
fsts
aas
or
lds
push
into
xchg
pop
lcall
cs
add
xchg
sub
xchg
jp
jge
in
jno
xchg
scas
lahf
xchg
test
out
jl
inc
nop
mov
ljmp
negb
push
in
mov
dec
hlt
adc
stc
or
dec
arpl
les
pusha
mov
adc
out
mov
lcall
jnp
dec
or
and
xchg
pop
insb
pop
andb
cmpsb
cmc
scas
jge
lock
adcb
das
pop
stos
subl
or
cmpsl
lea
inc
jb
fs
mov
or
mov
mov
inc
adc
repz
cmp
call
stos
cli
push
movsl
leave
inc
xchg
gs
out
lods
sti
xchg
ja
fldenvs
mov
push
mov
jl
jg
adcb
imul
jmp
mov
bound
dec
sbb
sub
jmp
fwait
mov
push
xchg
daa
out
lret
sbbl
pop
pushf
fwait
cmp
repz
mov
das
decl
mov
aam
xchg
movsl
jg
jo
inc
or
repz
push
pop
xchg
add
lock
jne
out
fucomip
gs
xchg
mov
scas
mov
jecxz
pop
push
xor
and
jb
clc
dec
or
xchg
loope
cwtl
rcrl
stc
mov
xor
or
addb
push
test
mov
mov
inc
pop
push
xchg
lahf
fisubrs
fwait
leave
mov
int
xor
rcrb
inc
lds
daa
in
fsubp
out
jge
inc
dec
adc
mov
xchg
sbb
cld
ror
movsb
adc
pop
fdivrl
jmp
in
orl
daa
or
imul
lahf
cmp
sub
cltd
adc
ja
push
add
inc
hlt
mov
mov
insl
daa
js
push
andl
imul
pop
sub
mov
pop
or
sub
sub
xor
in
clc
cmp
push
or
xchg
xchg
pushf
push
xchg
test
sub
les
outsl
mov
loopne
rcl
negb
mov
enter
fadd
jg
mov
out
popf
scas
shll
or
mov
or
add
or
inc
mov
sub
int3
lds
inc
push
jecxz
fs
fcmovu
test
jo
testb
fsubrs
cmp
clc
js
sub
jge
shlb
je
in
std
dec
push
or
mov
and
push
and
fdivrl
stos
mov
jmp
push
rorb
iret
insb
pop
mov
push
out
cmp
pusha
ret
jb
dec
adc
mov
dec
scas
fnsave
jbe
pushf
movsb
push
xchg
mov
xchg
inc
repnz
es
scas
icebp
sub
loop
push
aas
out
cmpsl
in
outsb
lahf
ja
adc
stos
ret
dec
cmp
add
fstl
xchg
call
aam
mov
test
test
or
push
push
jns
mov
inc
sub
pop
pop
stc
xor
jne
mov
lcall
stos
lea
dec
xor
fcoml
int3
jle
push
pop
ffree
jno
std
mov
out
mov
inc
movsb
test
mov
pop
push
mov
adc
mov
aaa
and
sub
icebp
leave
jns
into
jno
mov
aaa
loop,pn
fcmovbe
scas
testl
inc
ss
mov
popa
xchg
mov
xchg
or
pop
int
sub
jnp
pop
std
jmp
sbb
mov
cmp
mov
cmpsb
nop
lret
or
adc
push
dec
sti
or
outsl
sti
shlb
jne
aaa
dec
mov
mov
xchg
or
sbb
adc
xchg
les
js
and
dec
push
mov
mov
mov
mov
out
call
mov
fbstp
push
add
mov
adc
lret
jne
or
les
cmp
pushf
xor
fcoml
ds
pop
pushf
sbb
mov
rclb
mov
sub
sahf
mov
mov
mov
xor
mov
out
in
data16
shrb
pop
push
mov
cli
mov
add
push
push
add
mov
xchg
ds
imul
stos
arpl
ficoml
test
add
into
add
push
lcall
idiv
mov
int
jb
mov
or
push
mov
je
pop
and
inc
push
cli
xor
push
aad
adc
pop
jns
xchg
gs
and
xlat
loopne
or
repz
cmpsl
and
xor
mov
daa
fiaddl
inc
push
xchg
int
es
fwait
mov
lahf
mov
repz
mov
lds
pop
and
xlat
inc
pop
int3
dec
xchg
cld
xor
in
imulb
addb
or
add
lock
fistl
push
nop
and
push
dec
loope
and
ljmp
push
mov
test
push
arpl
mov
push
xchg
push
mov
pushf
xchg
testl
sbb
lahf
mov
xchg
dec
push
dec
mov
xorl
mov
mov
imul
lcall
mov
lds
jl
and
sti
cltd
test
scas
mov
add
movsb
mov
and
insb
insl
adc
adc
push
push
divb
cmpsl
rorl
cmc
lcall
push
lcall
xchg
mov
test
fnsave
fld
icebp
inc
xchg
shlb
jae
or
aaa
add
mov
sub
movsb
subl
jnp
fstl
popa
xor
xor
movsb
xchg
cwtl
loopne
rcrl
rcl
fcoml
fldenv
clc
jo
out
push
enter
mov
shll
and
adc
add
dec
leave
cmp
cmp
and
dec
sbb
je
dec
pop
jmp
rorl
push
or
cwtl
mov
in
lock
xor
jns
sub
mov
add
jle
dec
dec
xor
sbb
notl
jl
pop
sti
jb
push
data16
scas
imul
fcmovnbe
push
test
insl
add
sar
lret
imul
cmpsb
add
pop
repz
jle
cs
add
inc
movsb
call
hlt
xchg
mov
mov
pop
inc
cmp
add
subl
jne
and
push
std
lea
sub
jb
ds
subb
adc
jmp
ret
or
lods
les
std
jno
mov
xchg
mov
aad
fcmovne
jmp
popl
mov
stos
cmp
call
and
add
or
xlat
xlat
and
test
mov
int3
aad
sub
push
lret
in
pusha
loopne
jecxz
je
jecxz
popl
outsl
mov
cmpsl
int3
sub
push
outsl
dec
inc
pop
addl
sub
mov
mov
mov
sbb
mov
mov
dec
sub
ret
or
dec
addl
mov
or
mov
inc
xchg
jge
cld
jns
mov
mov
cmp
pop
pop
mov
call
xor
ret
jl
jbe
int3
mov
inc
incl
mov
pop
in
dec
sarb
pop
sti
int3
sarb
mov
add
insl
mov
test
add
or
push
sub
addl
mov
inc
push
cmpsl
push
sub
outsl
cmp
rorl
add
mov
inc
xchg
mov
sbb
repnz
sbb
repz
xchg
or
mov
xchg
cld
sti
mov
add
jge
sahf
std
rolb
mov
jns
push
dec
in
fwait
sbb
shlb
cli
sarl
adc
imul
or
mov
cmp
xor
or
loope
jne
pop
scas
sbb
jnp
aas
or
pop
out
std
jg
shrl
clc
xchg
sbb
out
insl
cltd
jecxz
out
jno
push
xchg
mov
xor
fidivl
in
js
testb
adcb
divb
fs
test
sbb
sti
mov
lds
xchg
xor
and
or
loopne
lds
mov
lret
fisttpl
adc
inc
push
dec
sbb
xlat
push
adc
pop
negl
decl
and
add
inc
and
sub
mov
xchg
push
icebp
out
insb
scas
add
fmull
add
mov
rorl
out
push
sbb
jb
mov
cmpsl
mov
pop
and
lcall
inc
push
into
xchg
adc
pop
in
fcompl
rcrb
aaa
push
jb
test
xchg
push
mov
inc
xchg
mov
insb
aas
mov
test
xchg
sub
loop
dec
icebp
adc
add
les
push
repz
test
data16
pop
out
jbe
adc
adc
ret
lret
sbb
fs
inc
sub
arpl
mov
lahf
fsubrs
xor
test
std
mov
addr16
and
jnp
mov
sub
test
pop
aas
outsl
mov
xor
mov
sti
test
lret
scas
mov
sub
sub
hlt
movsl
jl
insl
jnp
pop
xchg
roll
sbb
sub
xor
shlb
in
leave
mov
lods
mov
faddl
iret
cltd
stc
outsl
into
mov
int3
push
iret
stos
in
ror
aad
dec
inc
dec
inc
mov
mov
inc
sub
xor
inc
push
call
xchg
out
cmpsb
out
fnstenv
outsl
cmpsl
push
cltd
mov
adc
jbe
loop
mov
mov
cli
pop
test
ja
ret
pop
rcrb
jnp
push
xchg
lret
in
xchg
cmp
aam
mov
mov
out
addr16
loope
daa
movsl
shr
popa
or
dec
aas
sub
mov
adc
aaa
dec
in
jo
cs
lret
jb
push
lock
jle
adc
or
push
jo
std
jg
or
sub
cmpsb
adc
add
std
or
or
out
hlt
adc
out
lods
xor
and
scas
push
cmc
adc
insl
es
mov
insb
dec
mov
pop
push
hlt
clc
daa
test
pop
aam
loope
sahf
sub
add
stos
mov
xor
jb
jmp
imul
or
add
test
aas
cmp
sub
add
fwait
sub
in
mov
adc
fnstenv
and
imul
inc
pusha
movsl
movsl
lods
scas
mov
mov
dec
push
mov
in
push
gs
add
mov
insb
std
cmp
or
cli
aam
sbb
xor
sbb
popf
repnz
jo
les
or
jle
fnstenv
imul
lods
stc
push
wrmsr
stos
jns
jmp
fstp
mov
pop
jp
int
iret
dec
and
jae
dec
xchg
adc
rol
cmpsb
fistpl
push
popa
fs
pop
aam
iret
mov
into
dec
push
push
stos
lcall
aas
sbb
mov
dec
lea
sub
sbb
cld
inc
mov
adc
dec
sub
stos
lret
cmp
pop
scas
mov
movsb
mov
push
std
xchg
daa
ret
mov
jno
aad
fisubrs
movsb
pop
ficoml
aad
jb
fidivs
mov
and
cltd
ret
xor
roll
aaa
cwtl
aad
into
fcomps
sahf
jne
lcall
in
add
mov
push
fisubrl
mov
push
insl
adc
sub
loop
push
mov
pop
xchg
mov
mov
jmp
mov
in
xor
testb
inc
mov
push
test
es
mov
jne
cmp
or
xor
cs
inc
cmp
pop
lcall
addb
jl,pn
jb
mov
jbe,pn
mov
push
jle
in
test
push
inc
cmp
movsb
pusha
mov
fdivs
pushf
repnz
ror
iret
test
fcomi
les
jmp
jle
or
lods
lahf
mov
rcr
ljmp
ficomps
push
pop
fcmovnbe
aaa
shrl
fidivrs
lea
leave
sub
dec
inc
xchg
rolb
shl
repz
and
mov
inc
mov
push
lcall
pop
mov
bound
test
test
loop
cmc
jl
push
cli
inc
fisubl
shrb
sbb
sub
lea
stc
imul
and
int3
xor
and
fcomps
push
inc
adc
sub
das
hlt
into
popa
add
std
push
cmc
out
call
mov
and
test
es
jmp
pop
jmp
add
push
inc
fidivrl
lods
jp
adc
jbe
xor
inc
fwait
lods
xor
cmc
inc
insl
xlat
add
pushf
push
xchg
loope
cs
sahf
sahf
adc
or
push
icebp
fwait
aaa
jnp
mov
mov
dec
in
mov
out
mov
clc
xor
sti
sub
addl
insl
jg
out
fadds
in
scas
enter
das
ss
xrelease
lods
pop
jg
jns
mov
push
sti
enter
adc
pop
mov
add
outsb
addb
mov
cltd
imul
loopne
xchg
lret
je
adc
pushf
dec
push
loopne
orb
mov
divl
lods
sub
ja
lea
sbb
shr
fidivrs
sbb
outsb
inc
push
xlat
jne
test
or
xor
xchg
insl
sbb
add
or
xchg
dec
lea
or
pop
mov
cmp
mov
jg
push
mov
or
or
outsb
lea
insl
mov
mov
dec
push
imul
sahf
mov
data16
outsb
cmpsl
popa
in
adc
push
rorb
sbb
outsl
inc
dec
cmp
dec
movsb
scas
mov
push
fmul
add
orb
mov
push
iret
insl
mov
jne
lods
mov
fists
push
pop
rclb
imul
test
sbb
lret
scas
adc
mov
aaa
push
inc
mov
add
and
ret
sub
bound
xor
leave
pop
jl
pop
das
sahf
decb
xchg
and
xor
divb
mov
push
push
negb
mov
and
loope
aad
imul
sub
test
and
dec
adc
push
cltd
rol
les
notl
test
mov
adc
sub
lea
xchg
xchg
jb
mov
idivb
and
add
cld
or
loop
test
jnp
xor
xor
mov
shrb
and
cmpsb
mov
iret
push
push
xor
lods
shlb
popa
shll
test
jns
or
loope
or
sub
sbb
mov
test
jg
test
xor
or
out
pop
sub
scas
mov
repnz
rorb
jae
inc
add
rcrl
inc
fcompp
mov
dec
insb
negl
add
inc
lret
lea
popw
inc
jae
pop
in
add
sti
popf
and
jmp
jmp
pop
imul
or
sub
mov
or
int
loop
ja
int
add
jne
inc
mov
imul
cltd
sti
sbb
outsl
pop
or
cli
jbe
jl
add
aaa
jg
shrl
cmp
xor
push
inc
fisttpl
scas
adc
mov
jge
jno
shr
int3
push
inc
sub
xchg
dec
and
adc
jne
icebp
testb
adc
iret
repz
negb
ret
xchg
adc
dec
xchg
sub
sub
and
rcrl
int
push
fdivrl
repz
cmp
jle
shlb
movsb
nop
inc
ds
out
adc
and
mov
cmp
aam
ja
add
push
pop
mov
or
jp
push
adc
jae
scas
adc
fisubrl
ja
dec
and
enter
push
gs
sub
inc
cltd
inc
pop
test
outsl
mov
jle
or
idivl
cmp
ret
daa
call
or
imul
pop
jns
cwtl
fs
add
push
sub
sahf
push
js
mov
popf
cltd
dec
rolb
mov
inc
pop
sub
test
jmp
inc
addr16
fbld
in
iret
hlt
das
and
inc
in
adc
or
scas
dec
sbb
packssdw
add
inc
adc
pop
xchg
or
push
dec
sbb
pop
jnp
icebp
mov
mov
mov
test
sbb
sbb
sbb
xorb
mov
jb
pop
push
incl
or
repnz
lcall
inc
scas
sbb
jmp
and
xchg
and
pop
adc
adc
or
mov
addr16
sbb
dec
jae
fs
rol
std
mov
in
mov
ret
stc
lret
push
mov
pop
pop
in
push
mov
mov
int3
lock
inc
adc
sub
popf
mov
js
popf
cs
jp
pop
adc
xchg
lret
mov
adc
loopne
dec
mov
shr
je
pop
xlat
mov
add
push
ljmp
lahf
je
adc
xlat
xchg
pop
fisubrs
sahf
jle
lods
bound
mov
rcr
xbegin
jo
or
inc
dec
mov
or
nop
ficoml
ja
ss
pushf
aas
fldt
jl
ret
xor
add
jge
mov
mov
pop
pop
sahf
jnp
mov
out
mov
adc
repnz
pop
inc
enter
and
imul
xchg
or
pop
inc
dec
lret
adc
in
push
add
xlat
cmp
in
iret
push
pop
fldenv
daa
or
push
mov
adc
daa
sub
cwtl
sub
mov
imul
mov
ljmp
aas
rorb
outsb
sbb
stos
pop
pop
popa
scas
clc
jg
arpl
sbb
icebp
push
adc
sbb
loope
sub
cmp
or
xchg
xor
nop
add
loop
jno
mov
jmp
cmp
movsb
fpatan
and
sub
mov
jmp
icebp
push
push
push
test
and
out
ljmp
dec
jmp
xchg
push
mov
jns
test
ljmp
sbb
flds
mov
and
cmp
push
pusha
sbb
jo
dec
in
outsb
jbe
adc
cs
add
sbb
movsl
inc
add
imulb
add
jecxz
pushf
cmpsb
test
xchg
xor
pop
mov
dec
pop
push
mov
sub
push
rol
addr16
call
mov
aaa
mov
mov
xchg
cmp
leave
fstpl
xchg
mov
add
xchg
pop
imull
xchg
inc
jno
call
pusha
stos
daa
or
les
push
shlb
add
pop
adc
cmc
fsubrs
dec
fcmovne
mov
mov
loopne
mov
fcoml
flds
mov
stc
pushf
pop
jle
mov
mov
repnz
repz
insl
xchg
hlt
ljmp
add
jne
xchg
sbb
data16
iret
dec
and
scas
jecxz
or
jb
movsl
or
outsb
mov
mov
xchg
movsl
loope
lods
incb
pop
jo
lahf
daa
in
sub
lea
pop
adc
lods
repz
pusha
lahf
data16
jns
xor
clc
lods
jl
adc
shll
lret
out
insl
jmp
mov
push
loope
xor
cmp
int
pop
loopne
sti
dec
cmp
sbb
lcall
fnstsw
addr16
push
cmpsb
mov
pop
jge
jns
add
xor
adc
insl
jmp
test
push
mov
adc
cld
push
cmp
cmpsb
xchg
cld
and
scas
or
push
sbb
xlat
xchg
pusha
mov
movsb
ja
pushf
insb
int3
insl
repz
jbe
lret
or
fwait
mov
sub
loopne
cmp
or
lods
das
ss
mov
xor
push
sub
mov
sub
mov
orb
ja
jo
mov
xor
imul
insl
dec
add
jl
in
inc
pop
aad
xchg
lea
in
dec
jmp
sti
andl
scas
ret
xor
mov
mov
enter
mov
pop
jns
dec
mov
movsb
push
inc
mov
nop
and
or
das
push
push
adc
xchg
pop
push
lcall
fdivl
sub
in
sub
in
mov
hlt
mov
mov
fbld
insl
scas
inc
imul
adcb
inc
loopne
mov
mov
in
roll
sbb
data16
aas
dec
gs
scas
jg
add
inc
cltd
iret
mov
add
sbb
dec
pop
xor
adc
jecxz
in
mov
cs
mov
dec
rcr
xchg
lds
push
mov
fmull
add
orb
cmpb
pop
sahf
cmpsb
xchg
push
mov
pop
std
je
test
dec
jge
ret
add
sub
enter
sbb
test
movsb
mov
stos
mov
stc
pop
push
or
jmp
pushf
shr
mulb
cmovno
lahf
test
push
stos
xor
xchg
jnp
sbb
fsts
dec
call
testb
sub
int
pop
cli
pop
ss
cmp
sub
adc
imul
push
test
xchg
add
push
pop
jecxz
xchg
lret
cmpsb
clc
addl
mov
gs
test
or
pop
adc
push
pop
lds
mov
loop
jno
andnps
push
push
das
cld
lock
jb
jne
mov
and
or
test
stc
nop
push
push
icebp
xlat
fidivrs
adc
dec
lea
call
sub
cltd
pop
mov
sbb
movsb
imul
pusha
xchg
or
lock
xchg
add
and
sarb
xor
push
sahf
andl
sub
inc
xor
jp
les
data16
sub
stos
mov
sub
cmp
dec
xchg
ret
fwait
mov
dec
fiaddl
testl
ds
lods
sub
push
cs
sub
cmc
ljmp
inc
inc
call
stos
out
pop
push
jge
dec
mov
jb
mov
jno
pop
and
rol
jl
push
dec
push
pop
dec
in
jle
lods
pusha
cltd
out
inc
repz
aas
insl
into
fnstsw
ljmp
je
adc
push
addb
dec
sti
sti
ss
sub
mov
fdivl
ja
and
ds
lcall
rorl
stos
aas
aad
sbb
aad
repnz
sarb
testb
icebp
rclb
mov
jl
sti
add
mov
in
dec
adc
push
daa
fidivrl
push
jg
loopne
push
sbb
mov
cmc
jne
andb
imul
int
cli
cmpsl
test
inc
test
out
aas
pop
pop
fptan
test
pop
xchg
enter
jg
dec
lock
xor
fdivrp
or
in
adc
sbb
sti
rorb
cwtl
cmp
mov
or
data16
shll
push
aam
inc
ds
push
jge
iret
test
mov
sbb
rclb
dec
hlt
inc
enter
aad
push
fdivp
and
ds
aaa
aas
inc
enter
adc
or
in
adc
into
std
cs
mov
je
xor
cli
mov
fildll
push
lds
and
fmulp
mov
cltd
lahf
jl
inc
inc
lds
test
leave
cmp
wbinvd
sub
mov
add
call
xchg
sbb
xor
aad
mov
stos
adc
mov
cmpsl
adc
adc
jae
int
sbb
add
cli
push
lcall
ret
cmp
das
sub
mull
xlat
ljmp
call
insb
js
rep
les
push
mov
push
push
jo
and
cmp
or
divl
jle
jmp
sub
xor
cmpps
push
scas
std
xchg
imul
push
into
or
stc
mov
mov
mov
push
ljmp
adc
movsb
sbb
rclb
ljmp
iret
jns
or
lcall
dec
mov
aaa
jnp
lds
pop
mov
add
clc
mov
push
sahf
xchg
out
inc
jne
notl
lahf
arpl
stos
adc
cmp
push
roll
adc
pop
add
push
lds
dec
outsb
mov
mov
cmp
push
mov
iret
outsl
inc
add
cld
add
int
mov
es
xchg
movsb
jnp
rorl
cmp
out
addr16
cmp
mov
fmull
xchg
mov
lods
std
and
in
or
sbb
jmp
orb
iret
dec
movsb
jmp
int
fiaddl
mov
xlat
clc
mov
sub
mov
fldz
fcmovnbe
bnd
lahf
pop
and
inc
xchg
push
sbb
sti
in
lock
or
adc
dec
mov
adc
fidivl
pop
test
adc
xchg
jnp
stos
and
mov
scas
push
pop
xor
cmp
dec
inc
cmpsl
inc
test
jge
cmp
repz
popa
pusha
add
imul
xor
xchg
jne
stc
ret
pmaxsw
mov
cmp
aam
and
cmpsb
add
push
out
adc
jo
ficompl
pop
mov
movsb
sbb
addr16
inc
out
or
push
arpl
fdivr
push
ljmp
call
jne
sahf
pop
cltd
mov
xor
pop
inc
aam
fsubl
mov
dec
xchg
cmp
mov
lea
aas
popa
js
out
xchg
adc
pop
das
scas
loope
iret
pop
dec
icebp
jnp
hlt
cmp
je
push
rdmsr
lret
imul
das
daa
fisubrl
cwtl
lea
pop
mov
hlt
sub
scas
cmpsb
testl
fdivs
into
mov
cmpsl
mov
pop
adc
dec
mov
int3
xor
xor
mov
popf
cmp
aad
cmc
push
fimuls
icebp
out
xor
inc
dec
mov
loope
lods
cmp
dec
gs
adc
mov
push
cmp
ret
notb
and
xor
or
in
movsl
and
or
sub
shlb
xor
xor
xorl
clc
rcl
adc
imul
inc
jmp
jmp
es
xor
jnp
movsb
fbstp
insl
adc
pop
add
jmp
in
das
adc
repnz
mov
dec
clc
pop
lock
fiaddl
scas
aaa
testl
adc
repnz
movl
incb
or
iret
or
stos
add
xchg
insb
xchg
cs
lea
push
ss
push
pop
stos
adc
sub
addr16
jnp
cli
or
jl
cmp
fimuls
mov
js
sbb
push
outsl
pop
aam
stc
add
dec
push
ret
push
lret
xchg
imul
jae
cmp
xor
sub
imulb
test
and
or
add
outsb
pushf
jge
dec
mov
mov
push
lods
mov
and
out
call
mov
xlat
les
sbb
js
or
sub
cltd
mov
sub
std
xor
ret
outsl
sub
add
pop
aad
nop
mov
inc
adc
ja
movsb
in
mov
or
mov
pop
cmpsl
sbb
xorl
jns
jnp
popa
push
xchg
pop
imul
std
adc
sahf
mov
in
add
lcall
lahf
mov
shrl
add
cld
xor
sub
mov
and
into
cli
ret
cmp
cmpb
pop
sti
add
hlt
push
inc
inc
push
cmpsb
jae
int3
fisubrl
repnz
add
pop
pop
popf
outsl
sbb
jg
jmp
lea
mov
jbe
xchg
das
clc
cmc
dec
lods
test
clc
inc
jnp
or
jae
inc
xor
mov
cli
xor
xor
inc
jl
xlat
fidivs
mov
cmp
jmp
add
adc
xchg
mov
push
outsb
test
popf
pop
sub
cmp
popf
push
call
out
insl
insl
ret
daa
iret
mov
daa
icebp
xchg
mov
int3
xchg
jno
leave
ret
ljmp
jne
in
or
addl
dec
sbb
or
aaa
fdivrs
cmp
dec
notl
mov
push
jp
cmp
jmp
repz
aad
add
sbb
push
mov
aad
jns
into
shrb
arpl
cmp
xchg
cmp
pop
test
addr16
jno
movsb
xchg
cwtl
jae
out
xchg
push
xchg
loopne
cmc
aam
lcall
lret
int
cmpsb
mov
call
mov
outsl
stos
jns
pop
xor
dec
mov
cmp
cmpsb
xlat
fidivrl
mov
lods
mov
add
aas
mov
jmp
xchg
lcall
mov
cltd
mov
mov
push
shll
mov
ror
loope
data16
pushf
in
rcrl
xchg
popf
in
ret
add
fwait
cmp
inc
jmp
out
cmp
inc
or
dec
cmp
pop
cmc
dec
cli
fiaddl
mov
fdiv
shrl
xchg
mov
in
lods
loope
pop
mov
adc
add
fstl
jge
scas
mov
paddusb
iret
dec
xchg
movsb
xor
jne
outsl
mov
das
divps
inc
push
insl
stc
pushf
mov
js
mov
add
fisttpl
stc
inc
sbb
sub
gs
aam
or
out
xor
mov
scas
mov
or
xor
shl
xchg
add
jl
mov
xchg
outsb
cltd
lods
cmc
mov
outsb
jl
xchg
imul
mov
popa
in
jge
sbb
sub
jno
add
nop
push
lea
jne
repz
or
or
sbb
pushf
or
push
sahf
rcrb
mov
outsl
dec
mov
cmpsb
insb
pop
jae
bound
test
ret
test
fwait
xchg
sahf
out
fisubrl
daa
mov
scas
hlt
push
sar
add
xorb
dec
ljmp
push
outsl
int
stos
jb
dec
xchg
sbb
xchg
notb
mov
inc
loop
push
jo
pushf
ret
jae
add
adc
xor
push
xchg
jnp
and
fs
outsb
imul
test
mov
inc
push
bound
loop
ja
sub
icebp
cmp
lods
lea
stc
mov
sahf
loope
aaa
add
sahf
jae
sbb
imul
xor
rol
les
movsb
cmpsl
cmpl
or
mov
outsb
xor
ljmp
pop
lret
inc
push
and
das
insb
mov
call
dec
sub
lahf
cmp
cltd
adc
ss
call
pop
sti
stc
jnp
test
mov
inc
arpl
mov
in
scas
mov
loop
or
cltd
xchg
in
push
lock
xchg
dec
sahf
push
xchg
push
jmp
jo
xchg
out
imul
in
ret
test
jb
shlb
inc
movsb
inc
jno
int3
mov
pop
jl
xchg
add
sbb
pushf
sar
mov
or
stc
push
sub
ja
inc
test
push
adc
jo
inc
push
adc
sub
mov
adc
pop
dec
sti
add
push
dec
sub
inc
test
rorl
fcoml
test
sahf
scas
ret
adc
lods
xchg
in
dec
test
mov
push
push
mov
call
bound
pop
negl
fs
push
sarl
sbb
lds
mov
arpl
mov
push
popa
cwtl
andl
adc
inc
inc
in
call
aam
data16
out
dec
and
aad
xchg
inc
jge
or
xor
mov
xchg
pop
cmc
pop
test
sarl
inc
stc
fnstcw
jp
out
dec
fidivl
sbb
insl
xchg
xchg
cli
or
movsl
fbld
inc
pop
notb
stos
mov
inc
xchg
mov
movl
xor
mov
mov
lahf
adc
lea
addl
das
dec
lods
icebp
out
xchg
jo
ds
pop
loopne
lock
or
sahf
jg
add
jmp
push
test
xlat
mov
xchg
and
iret
je
add
jns
out
inc
movnti
gs
mov
mov
hlt
jns
pop
ret
or
movsb
inc
mov
jne
xor
mov
pop
cmp
sbb
je
mov
xchg
and
push
insl
or
mov
mov
push
ds
ss
fmuls
xor
or
cltd
jg
mov
ss
out
sarb
inc
sbb
adc
sub
push
pop
xchg
dec
ss
imul
jbe
xlat
insb
jmp
xchg
dec
sub
call
shrl
loope
in
nop
sbb
xchg
push
xor
push
daa
fisttpll
aaa
adc
pusha
and
movsl
stos
pop
dec
inc
sbb
pop
cmp
daa
cmp
rcrl
adc
sbb
mov
std
jnp
pop
incb
and
loopne
pop
faddl
call
das
rcrb
jne
fwait
test
jnp
enter
jae
fwait
and
popf
push
xor
cmp
xor
xchg
cltd
pop
lods
mov
les
scas
cwtl
repnz
xor
shlb
sub
sub
outsl
ja
popa
inc
xchg
mov
cmp
mov
mov
aaa
mov
jge
xchg
add
push
stos
or
std
fsubs
addr16
in
mov
sbb
mov
mov
cli
jae
pop
push
push
cltd
lods
cli
enter
and
xor
aaa
les
jl
fsubl
mov
lea
dec
sbb
jge
rorb
dec
das
test
xchg
or
and
sub
lods
cmp
shll
mov
inc
mov
sbb
add
in
pushf
aad
frstor
xlat
add
sbb
push
not
cmp
mov
and
jb
jl
inc
pop
dec
test
add
inc
and
imul
jmp
mov
test
shlb
cltd
sbb
mov
sbbb
xchg
and
arpl
xor
jns
mov
ljmp
iret
and
xor
inc
pop
sub
pop
mov
ret
mov
mov
jecxz
or
push
iret
sahf
cmp
or
sbb
dec
and
pop
es
and
inc
lret
popa
aaa
xor
dec
ss
pop
repnz
cli
or
mov
push
fcomps
jle
scas
popf
shrl
push
repz
imul
jnp
pop
xor
push
mov
sub
push
gs
jge
jae
popf
je
sub
mov
insb
pop
insb
cli
in
repnz
cmpsb
pushf
das
xchg
xchg
and
adc
dec
ja
lcall
pop
addb
and
xchg
and
sub
shrl
jp
add
subb
dec
insb
mov
pop
dec
or
fsubs
cltd
mov
lcall
sub
leave
and
mov
dec
imul
and
out
pop
pusha
fmuls
push
push
inc
dec
gs
mov
pop
lods
loope
ffree
add
jns
adc
mov
repnz
loope
xchg
cmpsb
pop
popf
xchg
fs
pop
dec
push
mov
insb
or
or
sbb
inc
jp
jb
cltd
inc
pop
test
add
in
ds
pop
lods
jg
jo
scas
stos
cmp
push
test
es
cmpsb
mov
sub
jnp
jb
push
stc
jns
mov
sbb
outsb
xor
mov
xchg
in
sarb
jmp
out
add
jo
in
or
in
or
mov
mov
test
fisttps
xchg
add
sbb
inc
pop
adc
scas
out
fs
adc
ja
fists
jne
fs
adc
cld
or
rorl
setp
or
xor
sbb
sub
insb
pop
fsubrp
jo
lock
mov
rcrb
jge
gs
aam
faddl
call
mov
in
dec
mov
xor
int
mov
rcrl
mov
cltd
mov
pop
int
mov
add
bndldx
add
cmp
xchg
cmpb
push
repnz
jmp
leave
fidivrl
adc
push
scas
scas
add
push
sbbl
mov
repnz
popf
dec
dec
jg
jg
sahf
inc
test
push
sub
dec
xor
lret
adc
jmp
mov
xchg
inc
lcall
insb
es
aam
or
ret
mov
or
pop
xchg
inc
jge
movsb
lods
dec
fiaddl
loop
dec
cmpsb
int3
lahf
pop
mov
leave
cli
in
bound
enter
lcall
xchg
or
lds
outsl
aad
pop
lock
xor
inc
mov
insl
or
mov
imul
shlb
nop
ja
movl
mov
sub
daa
adc
and
popa
dec
xchg
add
icebp
inc
xchg
das
fsubrs
clc
push
mov
cmp
sbb
test
adc
jecxz
mov
dec
xor
mov
sbb
dec
dec
fldenv
and
inc
faddl
pop
mov
sub
fiadds
add
mov
cli
xor
mov
lret
into
pop
add
inc
daa
sahf
add
pop
jno
jg
push
cmp
andb
mov
jp
pushf
dec
add
adc
js
fdiv
mov
stos
inc
xchg
adc
pop
fwait
incb
push
cmp
lcall
outsb
adc
adc
mov
out
mov
testl
ja
inc
pop
scas
add
and
mov
lea
enter
cmp
adc
adc
inc
popa
sub
push
xchg
sahf
mov
sahf
mov
add
cmp
cmp
push
jg
add
sbb
inc
mov
sub
icebp
cld
mov
das
fwait
aad
xchg
cwtl
inc
pop
loope
sahf
pop
cmp
cli
xor
inc
pushf
je
in
push
dec
pop
pop
leave
cmp
sbb
jno
sub
or
mov
mov
xor
or
aas
lcall
outsl
mov
push
cmp
jo
xchg
jbe
mov
push
lea
inc
sbb
ss
inc
fwait
adc
cmp
mov
mov
push
lds
cmp
cmc
andl
imull
pop
push
test
mov
adc
mov
jo
fwait
fs
out
or
mov
pop
stos
cmpsl
jmp
sbb
jecxz
push
push
mov
cli
inc
sahf
lret
jg
mov
jno
jge
fstpl
cmp
jg
push
jmp
xor
xor
sbb
lods
repnz
fisttps
outsl
mov
adc
push
sarb
sub
aaa
and
push
mov
pop
sti
push
adc
mov
jae
repz
int3
out
outsl
sbb
pop
lcall
scas
sbb
fucomp
inc
stos
push
mov
pop
sahf
jl
push
sub
ljmp
xor
or
or
addb
movsl
xor
data16
data16
mov
clc
jae
icebp
xor
and
cmp
push
sbb
fcmovnb
pop
sar
in
out
in
cmpsl
sub
jae
add
cltd
mov
insl
jo
test
mov
mov
es
pop
mov
inc
sbb
dec
cmp
xchg
nop
push
sub
mov
pop
repnz
pop
xchg
xor
push
in
cltd
jl
shl
call
lea
mov
pop
adc
and
mov
and
and
stc
filds
pop
mov
fsubr
xorl
stos
jo
dec
test
jne
pushf
nop
mov
popa
pop
push
fildl
or
push
jle
sbb
or
xchg
scas
jo
mov
jp
or
jb
cld
fldcw
sbb
push
inc
push
rcrb
pop
mov
sbb
mov
xchg
xchg
push
mov
jo
inc
out
push
outsl
mov
scas
loope
stc
xchg
sbb
lock
xor
cmp
enter
jo
enter
inc
in
inc
loop
pushw
jns
scas
cmp
clc
push
and
shlb
loope
dec
iret
rcrl
shlb
movsl
jl
test
mov
xor
cmp
cmp
lret
cmp
pop
not
xrelease
or
or
outsl
imul
fcomi
and
mov
pop
push
inc
or
dec
jl
or
pop
xchg
mov
jle
sub
dec
loope
mov
in
push
inc
inc
cmp
inc
fsubs
orl
jns
cmpsl
jno
adc
into
stc
out
rcrl
mov
out
lret
mov
dec
mov
or
punpcklbw
sahf
ret
js
cs
xchg
inc
sbb
jmp
in
pop
jl,pt
test
pop
mov
out
or
addr16
stos
notb
xor
ss
loopne
xor
test
ljmp
cmp
pushf
movsl
es
icebp
in
or
outsb
call
jmp
in
sti
ljmp
aas
fwait
mov
inc
test
imul
lock
xchg
iret
out
pop
imul
pusha
lods
and
push
mov
xchg
mov
sbb
sub
stc
or
dec
dec
int
inc
movb
mov
mov
dec
xchg
inc
sub
mov
or
cmp
fadds
out
sub
filds
popf
jns
int
pop
inc
mov
rolb
xor
ss
out
push
mov
js
in
adc
arpl
jae
xor
sub
mov
movsl
fisttpll
xor
fwait
stos
insb
sub
push
arpl
in
test
xlat
ja
sbb
adc
in
inc
int
rcrb
movl
push
in
xchg
pop
mov
bound
cmp
mov
out
mov
inc
xchg
inc
push
sub
sub
mov
sub
mov
sbbl
in
jp
and
jns
shll
jp
xor
test
mov
arpl
addr16
push
push
pop
lret
jmp
xor
gs
and
sbb
adc
push
rcr
dec
test
jg
outsl
fists
xlat
int
dec
sbb
repz
inc
adc
out
xor
movsb
popf
aam
inc
mov
sti
gs
ds
aam
loope
repnz
aaa
adc
shlb
pop
nop
and
adc
arpl
imul
mov
jp
xchg
and
in
jo
fiaddl
jnp
out
ss
sub
adc
jle
pop
cld
inc
sbb
adc
jno
in
add
clc
or
std
push
push
inc
repz
outsb
aad
mov
lods
dec
push
rcrb
push
aas
mov
cmp
xorl
leave
movsb
lods
dec
xor
xchg
mov
mov
sbb
rol
mov
std
clc
test
add
mov
sbb
lret
in
movhps
pop
out
aad
mov
adc
mov
and
decb
ret
jb
sti
out
lcall
push
xor
inc
cmpsb
push
jmp
ret
test
gs
out
or
in
sub
adc
repz
rorl
fldl
mov
dec
push
mov
push
xchg
int
inc
lea
add
inc
or
jl
cmp
fdivl
in
push
mov
xchg
sbb
xchg
push
lret
add
clc
pop
sub
scas
lods
jae
pop
jb
xchg
push
scas
ss
sbb
sub
js
lea
lcall
aad
and
repz
push
fidivrs
scas
insb
fsts
ret
dec
xor
xlat
in
call
movsb
mov
mov
adc
test
gs
xor
dec
sti
jo
testb
lods
neg
negb
cmp
xor
movsb
pop
faddp
fisubrs
mov
mov
mov
jecxz
jg
push
fsubr
loop
das
insb
mov
mov
xor
sti
push
rcll
mov
mov
loope
imul
mov
inc
xchg
push
inc
xor
mov
jmp
test
adc
movups
fsubs
js
inc
dec
sub
add
sbb
jl
mov
je
lahf
rclb
xchg
mov
js
lds
pop
je
mov
jne
cmp
cmp
hlt
aad
div
jo
shrb
loop
notb
xchg
es
cmpl
movsl
xchg
popa
xor
aaa
lret
insl
sbb
fstl
jns
call
es
and
add
or
out
popf
rorl
mov
mov
aas
xor
lock
sbb
adc
jg
out
test
ljmp
mov
sub
sub
xlat
test
insb
inc
cld
cltd
and
sub
cs
sbb
gs
out
jbe
mov
iret
push
mov
adc
fwait
pop
inc
and
outsl
out
and
icebp
in
inc
cli
sbb
dec
clc
add
lods
mov
test
enter
repnz
xor
push
dec
test
stos
les
dec
cwtl
push
stc
je
pusha
push
neg
cmp
mov
movsl
test
lret
daa
scas
imul
cmpsb
add
and
cmp
loopne
or
lods
push
lahf
fcmovnbe
push
loopne
push
fadds
scas
pushf
aaa
sbb
stos
push
flds
cmp
clc
cli
pop
jecxz
sbb
int3
dec
cld
xchg
mov
xor
pop
jl
dec
sbb
js
shrl
arpl
xchg
insb
push
pop
cwtl
sbb
or
and
push
adc
insl
push
les
pop
sub
ss
rorl
sub
or
jp
cmpsl
outsl
les
jecxz
pusha
aas
rorb
or
shlb
in
mov
dec
xor
std
xchg
lock
shlb
mov
push
lea
cmpsl
mov
push
dec
mov
push
andl
cmpsl
push
jl
in
iret
negb
jb
rolb
jmp
inc
sbb
ja
cltd
imull
scas
push
or
sbb
pop
adc
out
cli
cmp
arpl
repnz
aas
add
ja
scas
and
inc
ljmp
insl
scas
mov
out
mov
or
mov
imul
sbb
adc
xor
adc
mov
sbb
pop
aas
into
enter
sub
push
pop
mov
and
add
test
leave
xchg
mov
popa
outsb
cmp
jne
lea
xchg
sbb
pop
mov
js
ret
pop
ret
lods
dec
mov
cmp
sbb
mov
or
xchg
sbb
push
jle
daa
mov
cmovp
sub
subl
ret
lds
xchg
fs
sbbl
lret
fs
jge
mov
push
leave
stos
dec
jmp
cmp
mov
inc
ret
lret
movsb
stos
into
das
mov
sti
or
push
xchg
test
cmp
push
inc
xor
adc
jb
lahf
aas
stos
lret
xor
mov
outsb
es
and
pop
xchg
leave
jle
into
inc
sar
and
mov
sbb
fs
jecxz
inc
sbb
or
dec
mov
mov
mov
pop
dec
mov
ss
cmp
cwtl
push
js
add
inc
push
icebp
test
and
call
inc
loopne
test
add
mov
dec
fbstp
sub
mov
sub
lea
cmc
lea
js
mov
rorl
add
push
jo
adc
adc
mov
push
mov
lret
mov
adc
js
sbb
dec
out
in
and
loopne
dec
in
jmp
cld
inc
das
xchg
push
fnsave
dec
cmpl
cmc
movsb
xor
add
push
imul
or
lock
ret
pop
in
jecxz
outsl
sbb
outsl
push
enter
jno
pop
adc
out
jne
adc
imul
fnsave
sar
imulb
sub
fists
lods
addr16
sbb
sub
lret
in
xor
in
adc
xchg
mov
xchg
cmp
mov
pop
dec
in
xlat
xor
stos
cmp
xchg
jno
xor
imul
arpl
test
cwtl
xchg
mov
inc
push
sbb
push
sbb
cli
rol
xor
and
xor
out
xchg
leave
pop
jmp
dec
outsl
mov
sahf
aam
movsl
mov
cmpsb
xchg
dec
aad
incb
mov
adc
mov
stos
sti
xor
loopne
out
mov
inc
int
lods
ret
inc
or
or
in
mov
inc
mov
jmp
test
mov
cmp
inc
cmp
aas
test
loop
dec
lods
xor
cmpsb
daa
jge
cld
xchg
dec
inc
jae
xor
dec
insb
sbb
or
xor
inc
jb
and
mov
daa
mov
lcall
bound
jb
aad
enter
out
fistpll
push
jle
fdiv
mov
insb
inc
mov
stos
gs
movsb
fcoml
cmp
sbb
xchg
repnz
and
sahf
pop
shl
test
jl
fdivr
pop
fwait
imul
pop
test
repz
mov
adc
mov
mov
xor
push
jg
mov
pop
xor
xlat
fidivrs
push
sbb
xchg
test
adc
pop
jmp
sub
xor
sub
adc
cmp
fs
sub
pop
cwtl
nop
or
decl
repnz
cmpsl
clc
ret
out
mov
jl
lcall
push
outsl
or
fsubr
rcrb
xchg
sub
sarl
lret
xor
leave
xor
lods
ret
and
xor
xchg
add
mov
xchg
lahf
sub
repnz
add
outsb
push
loope
negb
movsb
jns
sarl
mov
aaa
adc
adc
out
outsb
int
xlat
mov
mov
je
and
push
sub
and
adc
jns
or
sbb
jl
hlt
inc
outsb
gs
lock
hlt
movl
popa
mov
inc
jle
pop
js
clc
mov
sub
adc
mov
mov
lea
mov
adc
aad
outsl
cmp
test
ljmp
cmp
push
repz
ss
and
cli
popa
dec
aaa
pop
popa
and
fldcw
push
and
dec
mov
jae
pushf
imul
xchg
inc
xchg
rcl
arpl
aad
pop
test
lds
mov
dec
mov
or
xchg
iret
dec
stc
xchg
int
stc
sub
arpl
adc
sbb
mul
clc
inc
add
cmp
rcll
cmp
xor
mov
sub
and
xchg
aad
mov
in
call
stos
and
outsb
push
jl
pop
add
xlat
or
push
mov
iret
ss
mov
lods
xlat
dec
sbb
leave
insl
jmp
jecxz
pop
lret
in
repz
fs
dec
pop
jecxz
sub
push
stos
xchg
lcall
add
xor
mov
xchg
aas
orb
stos
cltd
ror
outsl
loope
repz
test
or
mov
jmp
dec
mov
fimuls
push
pop
insb
dec
popf
lods
dec
ss
cmc
test
cs
sub
dec
and
mov
xchg
mov
and
xor
mov
jmp
xchg
jne
imul
repnz
je
inc
stc
cwtl
mov
inc
sti
into
test
int3
loope
negl
dec
mov
xor
jmp
mov
lock
adc
cmp
inc
jae
cld
cmc
push
push
jmp
scas
lods
push
out
and
mov
push
inc
push
xchg
rcll
sarb
sub
xchg
lods
xchg
movsb
jno
pushf
nop
fcoml
es
push
add
jle
icebp
rep
sub
adc
lcall
or
mov
call
add
sub
xor
adc
jae
dec
mov
repz
pop
jno
idivl
sub
pop
lcall
not
aam
fdivl
adc
fs
mov
pop
jl
xchg
daa
cmovs
fnstsw
dec
sbb
call
adc
mov
shll
and
push
xor
inc
das
ret
daa
cmp
arpl
imul
lahf
or
dec
insl
jb
leave
sbb
repz
lock
mov
in
mov
ss
inc
sarl
hlt
jns
adc
sbb
pop
loopne
or
xor
inc
leave
add
fs
push
pop
xchg
sbb
test
bound
adc
jae
adc
ret
loope
cmpsb
mov
movsl
or
iret
push
xchg
sti
cwtl
imul
lods
ret
adc
xchg
inc
cmp
sbb
in
jmp
cmc
popf
bound
mov
rol
int
cmp
jno
push
sbb
outsb
push
cld
mov
mov
lcall
and
daa
js
ja
gs
js
lds
lods
xorl
inc
leave
xchg
xor
dec
mov
call
pop
mov
push
add
xor
mov
xor
pop
dec
fs
inc
cmpsl
xchg
ljmp
leave
pop
push
push
sub
jg
cmpsb
test
bound
dec
adcb
js
pushf
out
ds
dec
mov
xlat
jecxz
lar
frstor
add
pop
test
idivb
push
adc
push
push
push
inc
call
lret
lret
add
or
cmpsl
and
imul
xorb
jns
stos
xchg
insb
xchg
inc
xor
xor
aaa
shlb
orb
cmp
std
lahf
inc
testb
int3
outsb
cmp
jp
mov
mov
fsubp
push
cmp
stos
push
jecxz
dec
sbb
in
dec
xor
dec
mov
nop
dec
xchg
xor
or
and
jp
sbb
fists
rorl
xor
push
mov
mov
mov
dec
xor
pop
dec
and
jo
mov
movl
adc
notb
cmp
clc
cmp
xchg
pop
ss
inc
test
and
insl
and
fsubr
and
lods
cld
adc
cmp
dec
sbb
fadd
dec
lret
or
pop
xlat
and
subl
xchg
xchg
mov
mov
arpl
push
cmc
aad
lcall
push
mov
ret
cld
xchg
xchg
insl
ss
mul
sub
push
pop
enter
or
scas
add
scas
dec
call
xchg
in
outsb
out
out
stos
jbe
cli
or
pop
pop
add
xor
mov
jle
push
dec
mov
jns
xor
jne
pop
fwait
cs
add
jl
fmull
inc
xor
mov
addr16
push
subb
jecxz
sub
fimuls
out
xor
and
dec
test
cmpsb
movsl
mov
call
jg
jg
fcompl
fdivrl
lods
mov
sbb
cmp
mov
les
sub
int3
xor
loop
inc
and
or
icebp
pop
xchg
adc
fsubrl
pusha
out
popf
sbb
nop
push
and
cmp
imul
sbb
jno
add
jne
lcall
xor
adc
mov
adc
pop
xchg
in
sbb
xchg
popa
xchg
roll
jno
add
inc
fisubrs
js
movsb
inc
sbb
es
jle
jbe
rorb
xor
adc
cmp
pushf
popf
mov
dec
inc
loop
rclb
or
fwait
cmpsb
iret
je
mov
xchg
movsl
add
xor
xchg
pop
push
out
ret
sbbb
pop
sub
xchg
adc
xorb
jns
aad
daa
mov
loope
push
or
xchg
sbb
cs
or
push
lret
sub
cmp
mov
lcall
mov
xor
mov
js
or
inc
lret
mov
cwtl
push
mov
pop
imul
cli
shrb
jne
cs
mov
add
outsb
xor
test
sbb
or
push
xchg
sub
dec
mov
movsb
pop
fadds
pop
pop
or
add
cmp
and
xchg
iret
mov
pop
push
inc
xchg
mov
fisubrl
mov
imul
rcll
test
scas
lret
stos
adc
or
dec
pusha
cmc
loopne
call
addb
jmp
add
cwtl
xchg
out
stos
arpl
out
or
dec
cld
adc
int
loopne
mov
int3
xchg
sbb
lods
mov
mov
sahf
fidivrs
or
nop
arpl
jecxz
push
dec
cmp
sbb
or
pushl
sub
scas
movsb
mov
das
hlt
out
lods
jns
loope
xor
xchg
sbbl
gs
mov
aaa
and
mov
mov
aaa
cltd
jnp
mov
shll
adc
rorl
sarl
out
pop
xor
mov
mov
cltd
mov
mov
bound
or
in
loop
xchg
inc
xchg
sbb
ror
cmc
adc
imul
addr16
or
pusha
ljmp
mov
pop
incl
aad
push
jne
mov
push
inc
test
xchg
loopne
sbb
dec
inc
sbb
add
fildll
push
faddl
cmpl
push
pop
xchg
mov
or
pop
out
mov
subl
and
test
sahf
jp
ljmp
nop
sbb
mov
dec
int
aaa
cli
insl
subl
es
iret
sub
jge
loope
std
jae
dec
adc
or
dec
loope
sbb
mov
xchg
mov
cmp
fdivp
add
adc
xchg
push
sbb
adc
cli
add
jae
imul
inc
inc
sbb
mov
add
jbe
mov
cmp
jg
enter
cs
mov
icebp
fisubrs
xor
into
je
outsb
sbb
pop
incl
cmpsl
jl
cmc
aaa
mov
pop
jecxz
or
dec
xor
inc
faddl
jne
fdivrs
jae
adc
std
fcompl
shll
jo
lahf
mov
pop
push
fdivp
fildl
out
test
jne
shll
xchg
mov
jno
cmp
popf
mov
dec
pop
insl
loope
lret
adc
imul
enter
add
pop
mov
adc
sub
mov
js
pushl
inc
pushf
pop
idivl
rol
jno
mov
ja
mov
test
push
out
shr
cmpsl
sbb
mov
jb
int3
test
mov
loopne
rcl
xor
sub
cltd
mov
mov
sbb
inc
enter
push
xchg
adc
shlb
xchg
add
xchg
fildl
pop
rorl
rcl
xchg
or
sub
iret
sarb
jnp
imul
cld
jge
or
sbb
xor
xor
ja
push
mov
sahf
out
test
shlb
and
imul
pop
fsub
movsl
scas
xor
jnp
mov
jmp
icebp
icebp
ret
inc
dec
adc
ror
jg
inc
push
mov
sub
xor
mov
mov
dec
fisttpl
mov
xchg
daa
movsl
xchg
ret
pop
test
fcmovne
test
xor
mov
test
xchg
es
inc
mov
mov
mov
pop
adc
xchg
in
adc
xchg
mov
adc
jecxz
mov
mov
mov
cmp
dec
out
or
ror
jb
xchg
cmp
xor
pop
test
inc
sbb
mov
stos
mov
add
sub
jns
add
inc
in
jo
xor
cs
repnz
int
or
aaa
jge
outsb
mov
pushf
push
outsl
ja
mov
scas
jb
inc
insb
mov
inc
imul
xor
pop
jge
insb
jle
adc
and
mov
xor
test
push
mov
add
push
xchg
push
idivl
xchg
mov
push
imul
mov
cmp
lcall
mov
movsb
or
xchg
lahf
cmp
iret
repnz
std
enter
and
lods
xchg
pop
lahf
sbb
jnp
rcl
push
ja
out
mov
mov
ljmp
les
lcall
outsl
and
cwtl
mov
push
stos
lods
shl
push
scas
ret
and
jecxz
or
cmp
aas
xor
pop
pop
mov
inc
inc
movsl
rcl
xor
sub
adc
fdivs
mov
jecxz
shll
xchg
jb
add
dec
test
lods
pop
adc
mov
cmp
and
aam
aam
push
sub
call
fisubrl
adc
and
cmp
jo
mov
mov
and
mov
shr
pop
sub
pushf
mov
xor
stc
adc
loopne
inc
test
add
aad
lods
sarl
or
sbb
dec
in
inc
xchg
outsb
lret
add
xor
or
icebp
fistl
push
lret
cmp
outsl
sub
dec
in
lret
addr16
xchg
lret
ret
xchg
mov
jns
mov
xchg
frstor
fidivs
out
pop
pusha
pushf
lea
ficompl
fiadds
int
stos
out
inc
cmpsb
movsb
fadd
out
test
popa
call
std
cld
xorb
jecxz
dec
fmull
adc
adc
push
xor
push
jb
adc
idivl
jge
mov
and
rolb
adc
les
jle
push
cmp
or
jbe
dec
aad
fmuls
jb
lods
jle
insb
pusha
xor
aas
inc
movsb
shrb
cmpsb
dec
fimuls
inc
jbe
cli
aad
aad
shlb
xor
xchg
inc
insl
inc
lret
subb
jbe
loop
adc
mov
into
popf
loopne
sbb
jns
pusha
mov
outsl
popa
iret
pop
push
insl
xor
or
lahf
rcl
outsb
out
scas
push
xchg
jb
leave
pop
inc
mov
das
mov
incb
jne
fisubl
adc
jp
push
ror
adcl
add
sbb
ja
mov
icebp
movsb
jecxz
scas
pusha
fistl
and
test
push
frstor
jp
xor
sbb
in
push
stos
and
fdivrl
sbb
pop
xchg
cmpsb
jnp
and
out
mov
aam
push
xor
hlt
enter
dec
hlt
loop
movsb
mov
dec
pop
leave
adc
mov
jl
ss
xchg
fwait
pop
rolb
hlt
fsubr
cmp
out
bound
mov
jns
jb
lock
mov
cmp
pop
icebp
out
cwtl
imul
lret
lret
sbb
jno
or
es
cbtw
inc
jle
icebp
pop
jno
insl
and
mov
mov
cmpsb
enter
xchg
xor
test
flds
pop
or
loope
mov
call
repz
rcl
xor
inc
psubd
pop
xor
ja
aas
mov
ljmp
cmp
xchg
iret
mov
sub
daa
push
add
add
imul
jae
lret
adc
mov
adc
lds
xchg
icebp
sbb
add
dec
jg
jle
clc
dec
scas
lea
sbb
rcrl
test
cmp
ficomps
repz
imul
mov
sub
mov
mov
cmp
jae
sbb
les
aad
ss
push
xchg
cmp
cs
inc
mov
and
imull
mov
push
adc
pop
pop
rorl
adc
pop
ror
jmp
out
mov
xchg
add
sub
gs
movsb
push
sbb
nop
mov
stc
cmpb
xchg
xlat
jns
pusha
dec
arpl
dec
mov
mov
cld
fdivs
and
lock
rol
cmc
fcoml
sbb
push
pop
mov
inc
adc
dec
mov
jecxz
sub
jl
push
daa
jg
cmp
movl
pushf
sbb
inc
daa
test
pop
bound
adc
repnz
fs
cwtl
xchg
js
sub
rolb
mov
lahf
mov
and
scas
in
sub
mov
js
adc
xor
and
add
aam
outsl
es
insb
sbb
push
and
imul
repz
add
stos
enter
and
jae
ss
adc
fwait
push
and
lock
mov
jns
push
sahf
xor
xchg
in
jne
inc
mov
xchg
roll
cmp
fld
jb
sbb
andl
lret
das
lret
lds
mov
xor
mov
mov
sbb
mov
jecxz
cmp
je
add
sahf
mov
lret
add
cvtpi2ps
inc
je
add
adc
stos
shll
push
insb
jle
fbstp
aaa
adc
xor
daa
roll
mov
fldcw
cmp
push
xor
xor
adc
ss
js
dec
testb
js
shrl
push
inc
in
gs
add
mov
mov
imulb
clc
mov
push
push
loope
lahf
mov
jbe
popf
pop
adc
gs
or
aas
lods
fsubp
and
and
div
xchg
in
ss
dec
and
and
cwtl
cs
or
xlat
lret
add
pop
push
mov
pop
data16
inc
inc
mov
mov
jno
mov
inc
sti
ret
mov
mov
push
cmp
lret
pop
cmp
stos
je
xor
add
and
push
xor
es
into
dec
sub
pop
adc
lods
inc
stos
push
test
dec
adc
cs
lret
xchg
mov
push
mov
clc
dec
stos
fs
popf
lcall
mov
sbb
inc
movntq
test
mov
sbb
push
stc
sub
lcall
xchg
xor
cld
dec
mov
ljmp
shr
cmp
ds
jne
sub
add
push
or
std
lods
xchg
or
push
jmp
iret
push
sub
push
mov
arpl
push
out
cmp
fnsave
push
sbb
cmp
cmp
mov
lods
enter
fs
ds
sub
dec
into
test
fwait
test
lcall
andl
pop
inc
push
daa
mov
mov
dec
xchg
push
jno
jnp
test
mov
push
lcall
mov
adc
mov
pusha
fists
jecxz
mov
cmp
adc
nop
push
leave
mov
jp
fildll
mov
andl
inc
adcb
std
add
sbb
dec
lahf
push
cwtl
xchg
mov
mov
mov
cwtl
pop
cmpsl
outsl
inc
and
dec
popa
imul
sbb
inc
pop
and
mov
sub
sbb
pop
addr16
jmp
jo
fidivrl
jae
imul
add
or
pop
push
inc
aad
inc
gs
and
or
sub
test
in
aas
in
fidivrs
dec
mov
into
stc
or
in
push
mov
mov
and
dec
xchg
mov
xchg
fidivl
and
dec
repz
mov
stc
je
mov
xor
lds
ret
je
aas
jmp
inc
or
jp
cmp
cli
jmp
xor
push
and
lds
les
xor
pop
add
mov
dec
cmc
push
popa
dec
lods
out
push
mov
inc
leave
andl
mov
imul
in
pop
jmp
xor
and
loope
leave
mov
add
lahf
movsb
adc
mov
loopnew
js
inc
cmc
movsl
push
or
ja
jne
jns
insl
cli
pop
add
push
or
mov
dec
xor
cmp
subl
stc
pop
js
dec
sbb
out
add
dec
mov
sbb
int3
shlb
dec
inc
xor
and
lods
jle
add
adc
idivb
ss
ja
shr
icebp
pop
pop
lcall
mov
adc
push
icebp
sub
sub
mov
pop
jg
add
rorb
sahf
pop
out
jne
push
xchg
sbb
outsb
subl
testl
leave
push
aam
mov
daa
pop
pusha
ds
sub
push
xor
test
popa
push
xor
sbb
jbe
cmpsb
stos
aaa
cmpsl
enter
ret
sub
adc
outsl
pushf
jmp
shl
scas
rcr
arpl
xchg
into
xor
jb
cmp
int
roll
jae
push
mov
xor
mov
aaa
push
sbb
jecxz
push
inc
into
test
cmp
pop
dec
pop
dec
and
and
sbb
push
jge
out
fildll
cmp
repnz
dec
test
repnz
push
mov
lahf
inc
sub
xchg
lcall
or
mov
fadd
mov
shll
and
sarl
cmp
mov
pop
adc
fs
jecxz
add
push
cmc
mov
hlt
pushf
pop
ret
xor
mov
fucomp
repz
or
xlat
cmp
cmc
std
mov
fdivl
inc
sahf
fcom
push
adc
and
arpl
cwtl
pop
cltd
fs
cmp
xlat
gs
jl
lds
lods
inc
neg
imul
and
aam
mov
xor
inc
je
cmp
aad
jno
and
enter
xor
mov
dec
pop
jns
lods
add
cmpl
addb
dec
sub
fdecstp
pop
rorl
pop
pop
or
frstor
popf
jge
popa
repz
stos
and
daa
xor
push
add
outsl
sub
data16
fcomi
insl
mov
cltd
dec
sbb
xorb
ja
mov
movl
add
jns
pop
push
mov
push
scas
cmp
sahf
sbb
pop
pop
push
imul
ja
and
nop
fs
sub
xchg
je
lods
inc
in
mov
add
sbb
cs
jmp
cmp
push
sbb
pop
movsb
out
xchg
cmp
sub
push
sub
jns
mov
push
sub
jae
pushl
push
shll
xlat
fcom
addr16
mov
dec
loopne
lret
jo
mov
xchg
jl
outsl
rorl
pop
xchg
add
testb
inc
lret
cli
lahf
add
pop
push
inc
and
imul
adc
adc
inc
scas
jle
outsb
adc
ret
or
sbb
or
pop
arpl
xor
or
nop
ret
mov
mov
mov
cmovle
mov
mov
test
cmp
mov
adc
ss
loope
rol
pop
into
lret
popf
mov
mov
pop
mov
lret
adc
hlt
xchg
movsl
lods
out
mov
push
adc
inc
inc
dec
or
clc
cmp
std
aaa
sarl
daa
pop
insl
sarb
mov
iret
pushf
push
inc
cmp
jp
das
xor
adc
xchg
test
xlat
push
inc
push
dec
leave
stc
inc
rcll
xor
sbb
bound
test
and
mov
adc
sbb
rorl
inc
das
sbb
ret
adc
dec
xor
aas
mov
in
adc
dec
pushf
insb
insb
stos
sub
jge
xlat
adc
xchg
xchg
imul
pusha
into
repnz
push
pop
lds
mov
mov
dec
ds
jg
aaa
lods
lods
cli
lea
aam
dec
push
jb
outsb
xor
push
outsb
sti
clc
into
pop
adc
lods
pop
jp
push
je
rcrb
push
jle
sti
and
out
test
addr16
mov
aas
testb
or
push
sub
xor
dec
xor
std
adc
jne
scas
xchg
pop
movsl
mov
and
jbe
dec
fs
push
mov
insb
test
cmp
fnsave
cmp
push
dec
pop
jg
mov
insb
or
pushf
idivb
mov
cmp
dec
pop
inc
pushf
mov
outsl
mov
in
pop
inc
dec
push
push
jg
inc
adc
dec
or
dec
clc
jp
mov
xor
outsb
xor
sahf
out
scas
push
mov
out
daa
jp
jmp
pop
inc
lds
cmp
adc
scas
repnz
inc
pop
xchg
pusha
outsl
js
pop
adc
pop
or
jecxz
cmpsb
sub
sbb
fcmove
and
pop
andnps
popa
xchg
adc
inc
or
fwait
inc
nop
dec
sub
fsubr
rclb
out
or
fwait
addr16
daa
in
pop
push
mov
add
and
inc
adc
sub
pushf
dec
pop
and
lcall
fisttps
in
pusha
lods
jle
pop
pop
repnz
data16
gs
push
jno
or
inc
sub
out
scas
shl
stos
shlb
outsl
dec
sbb
loope
incb
int
inc
sub
pop
ja
jle
gs
aaa
mov
or
les
das
out
and
mov
jbe
jb
lret
jne
sub
pop
mov
push
inc
movsb
sub
inc
jl
scas
into
movsb
sbbl
sub
add
aad
shrl
cmp
shll
shll
lret
lds
cmp
pusha
fistl
xor
cmp
popa
and
hlt
mov
pop
xchg
push
pop
scas
arpl
stos
jg
mov
mov
es
cs
out
cmp
adc
out
ret
xchg
insb
xchg
mov
jns
jle
dec
xor
mov
push
lret
and
repz
loopne
jmp
shll
cmpsl
rorb
adc
push
mov
cs
pop
mov
shll
outsb
in
xchg
push
jle
enter
mov
in
xchg
in
dec
in
jp
push
jmp
mov
xor
xlat
mov
mov
je
mov
sbbb
call
test
out
lea
imul
xor
lcall
pop
adc
dec
and
jge
insl
xlat
xchg
pushf
sbb
mov
jle
pushf
mov
add
jb
stos
adc
mov
mov
dec
jbe
push
into
inc
mov
mov
push
add
movsl
cs
pop
mov
test
outsb
hlt
jl
jl
pop
movsl
mov
mov
mov
movsb
inc
in
inc
pop
and
mov
sbb
push
imul
scas
add
fsubr
add
inc
xor
push
shlb
inc
idivl
popf
inc
pop
js
jo
add
push
fucomp
dec
fistps
add
bound
stos
cmp
sbb
push
sbb
and
leave
shr
adc
sub
and
push
xor
arpl
fcmovnb
pushf
test
int
push
int
or
inc
pop
lock
add
xchg
cmp
jl
aad
addb
fstl
jl
loop
adc
inc
movsb
push
int
xor
ljmp
clc
test
out
in
push
add
insl
pop
shl
pop
movsb
mov
mov
sbb
inc
pop
push
ds
pop
mov
jbe
xor
cmpsl
cmpsb
sbb
outsl
xchg
cli
or
xor
in
iret
lods
xorb
outsb
popa
mov
jp
out
inc
jmp
cld
fisttps
scas
sub
fbld
es
inc
fs
sbb
xlat
stos
and
test
in
pushf
ds
add
add
push
stc
outsl
pop
mov
cmp
rcr
xchg
push
rcrl
ja
and
inc
or
int3
sbb
mov
sub
xchg
das
scas
adc
clc
sarl
mov
inc
jns
jecxz
fiadds
push
xorl
bound
or
xchg
cmp
test
gs
xor
movsl
xor
mov
js
inc
xlat
mov
sbb
fmull
std
inc
outsl
mov
fidivrl
push
push
mov
cwtl
outsb
and
stos
sbb
orb
inc
hlt
xor
ds
push
faddl
xor
inc
jmp
cmp
nop
hlt
mov
add
sub
dec
jp
sbb
mov
jb
es
jne
scas
call
jb
add
out
icebp
xchg
dec
movsb
push
sub
mov
lret
imul
fiadds
pop
mov
addr16
addr16
jge
fisubs
pop
and
sub
sbb
fldt
xor
daa
into
pop
frstor
inc
mov
cli
jo
das
dec
repnz
add
paddq
scas
mov
inc
adc
mov
test
push
dec
sub
and
iret
in
pop
std
or
jns
inc
stc
pop
mov
pop
rclb
xchg
das
cs
lret
loop
arpl
mov
imul
or
lcall
adc
lret
loopne
jns
mov
rol
pop
sub
mov
xchg
hlt
cmpsl
or
mov
inc
outsb
stos
fidivl
in
and
popa
mov
sti
sbb
push
cmp
sbb
pop
sbb
push
lods
jae
inc
push
ds
enter
dec
inc
popf
mov
pop
cmp
fs
sub
jbe
lret
cmpsl
jo
and
cmp
call
and
jo
cmp
push
or
add
lcall
cmpsl
push
pop
push
testl
adc
mov
jo
pop
xchg
xchg
sub
push
dec
sub
loop
mov
in
ds
rcrb
outsl
lret
sarb
pop
sub
call
inc
in
push
sub
push
lret
iret
jecxz
and
into
aaa
sbb
jne
inc
push
int3
cmp
bound
clc
daa
inc
mov
lret
inc
mov
sbb
ja
leave
adc
mov
out
cmp
fcoml
mov
mov
rorl
cmp
popf
or
lahf
xlat
aas
cmp
fcoml
inc
push
cmp
ror
dec
scas
cmp
xor
and
stc
movsl
sar
jne
lret
cmpsl
scas
rcrb
adc
sub
outsb
or
push
or
out
into
out
pop
and
cmp
aas
pop
mov
xchg
and
sub
push
add
ret
test
lahf
jbe
jg
jnp
xchg
ljmp
cs
push
test
jg
das
in
and
mov
push
fcmovnb
in
orb
fcos
xchg
cmp
inc
std
sub
sbb
hlt
xchg
je
sub
mov
fildl
sbb
mov
idivl
fstl
xchg
push
repnz
scas
mov
clc
mull
imul
lea
out
jbe
jl
and
js
pusha
push
inc
incl
aad
inc
fs
and
hlt
stos
and
ficompl
jo
lock
dec
cmp
xlat
jge
xchg
inc
sti
clc
adc
scas
mov
into
push
cs
leave
dec
repz
add
xor
cmc
lret
jb
add
lea
stc
aam
scas
lcall
cmpsl
xchg
stos
dec
inc
fisubrl
sar
inc
bound
inc
push
aas
xchg
leave
mov
mov
mov
in
in
je
cmp
cmp
or
jle
addr16
fs
sub
or
sbb
out
lds
cld
leave
pop
push
mov
enter
jmp
mov
pop
adc
or
jne
xchg
push
push
inc
pop
or
in
xor
out
cs
lock
xchg
mov
add
fcoml
out
add
sarl
cmp
daa
lods
mov
cld
hlt
jmp
xor
add
inc
adc
adc
repnz
hlt
xor
fs
or
rcrl
pop
out
push
xchg
repz
popf
cmp
or
das
cmp
dec
xchg
push
cs
sbb
mov
leave
adc
push
mov
mov
push
mov
add
cmpsl
je
ret
stc
outsb
scas
jo
test
rolb
pop
mov
leave
ljmp
xor
gs
push
aam
sub
sti
sbb
pop
negl
icebp
adc
arpl
out
out
das
mov
ljmp
testb
sub
pop
xor
rol
mov
loope
insl
jl
ret
sahf
out
addr16
sbb
lock
inc
mov
pop
adc
aam
push
jno
sar
xchg
pushf
aaa
scas
xchg
mov
fsubl
aaa
mov
nop
xchg
fsts
and
fwait
jbe
das
pushf
icebp
sbb
mov
outsb
prefetch
lret
mov
notl
fisttpll
mov
xchg
es
pop
or
push
call
lods
inc
test
sub
int3
loopne
lahf
data16
fsubs
pop
push
ret
mov
arpl
xor
fidivrs
enter
mov
jbe
mov
add
test
mov
repz
sbb
inc
jge
inc
inc
ljmp
iret
cmp
inc
xchg
push
xor
and
mov
or
es
loope
rep
xchg
push
jbe
cmpsb
stos
mov
xor
fs
inc
subl
orl
adc
or
mov
cwtl
jo
xor
cmpsb
inc
jbe
or
push
ja
fsubs
repnz
repnz
xchg
fs
dec
daa
and
ljmp
jmp
cltd
rcl
cmp
in
push
xor
mov
sarb
xor
mov
test
aam
cmp
pop
hlt
mov
adc
mov
subl
add
mov
xor
lret
xchg
test
sbb
mov
lret
cmp
pop
dec
push
xor
and
jecxz
iret
mov
sbb
sbb
jge
or
int3
stc
sbb
cmp
out
outsb
mov
xchg
sbb
push
or
roll
lret
xchg
push
or
inc
sub
in
mov
sbb
cli
push
mov
and
test
or
out
adc
daa
int3
xchg
or
cmp
jle
mov
fistps
lcall
adc
pop
jno
sub
mov
jne
jle
jno
js
mov
mov
ret
xor
stos
aas
ss
mov
dec
test
jb
addr16
pop
inc
push
outsl
ficoms
pushf
or
rolb
int
xlat
fs
aam
cmpsb
fists
inc
push
or
lock
jge
mov
sub
or
xchg
mov
jnp
push
xchg
dec
cmpsb
or
sbb
repnz
dec
daa
test
aad
in
rcll
jno
loopne
jo
test
cmp
mov
fdivrl
sbb
out
xor
popa
xchg
or
mov
mov
hlt
adc
mov
scas
pop
push
jl
push
sub
insb
mov
les
and
call
pop
jge
adc
outsb
sbb
loope
gs
jbe
daa
mov
push
mov
cmc
mov
dec
xor
insl
popa
fucomp
es
shrb
sub
out
leave
push
inc
mov
jbe
push
mov
cmp
es
push
and
ljmp
dec
adc
add
cmp
push
and
sbb
ja
add
xlat
mov
pop
and
scas
outsl
ret
inc
adc
pop
cmp
je
pusha
fnstcw
mov
inc
test
or
mov
push
std
in
movsl
lahf
fs
push
lds
pop
jne
mov
jge
fisttps
mov
fstps
enter
shll
daa
jmp
mov
cmpsl
repnz
inc
fwait
push
gs
xlat
incb
xchg
popa
xor
xor
jne
insl
sub
adc
sub
jno
adc
stc
pop
jae
jecxz
push
call
sub
or
pop
out
xchg
sarl
pop
es
cs
loope
mov
xor
test
cmpsb
pop
movsl
repz
icebp
add
and
xor
ret
mov
cmc
mov
sbb
jle
out
ljmp
lds
cli
ljmp
outsb
jb
jae
scas
negb
jne
xor
decb
mov
mul
xchg
pop
mov
std
lea
xlat
ds
sub
inc
sarl
push
xor
pop
shll
xor
cmp
cmovge
mov
in
dec
mov
lahf
inc
xor
xor
fsubl
in
mov
out
sub
push
fimuls
out
and
pop
cmpsb
lods
jb
lds
test
push
lahf
add
arpl
in
mov
cmp
pop
dec
test
dec
adc
mov
movsb
icebp
sbb
pop
mov
fs
jo
mov
mov
sub
mov
push
or
push
sbb
js
gs
in
add
dec
pusha
jo
shlb
xchg
jle
lahf
push
imul
ret
mov
insb
iret
mov
cmc
mov
push
test
inc
dec
push
es
inc
ja
jno
add
insb
mov
mov
es
shrb
cld
lods
fisttpl
push
xor
hlt
jl
push
outsl
in
in
pop
cmpsl
sbb
jge
mov
pop
jecxz
je
out
mov
pop
jb
stc
mov
mov
mov
cltd
xchg
jne
dec
cli
sbb
xor
cmp
loope
and
stos
cltd
lret
push
sub
xlat
dec
insl
mov
mov
outsb
push
inc
leave
fmull
outsb
hlt
mov
mov
sarb
sub
inc
imul
mov
loop
repz
add
push
jmp
inc
push
fiaddl
addl
push
push
cmc
outsb
addb
mov
arpl
xchg
lahf
add
sbb
mov
adc
or
xchg
lock
jge
push
lea
cmp
sbb
adc
and
mov
fxch
sbb
mov
lods
fsincos
jno
push
rclb
shll
lea
cmp
aas
popa
inc
sub
mov
sbb
jno
scas
xor
in
inc
cld
dec
xchg
std
jae
inc
cltd
ja
push
xlat
cmp
frstor
pop
ljmp
aaa
xchg
lods
repz
pusha
adc
adc
loopne
xor
je
cmp
mov
scas
ds
sub
push
lcall
mov
enter
jnp
mov
arpl
xchg
repnz
aas
enter
lds
mov
cmpb
pop
hlt
jmp
cmp
in
rcrb
les
pop
push
push
pop
ljmp
les
into
lods
mov
in
dec
adc
jg
mov
xor
bound
ljmp
xlat
mov
cmp
inc
xor
jle,pn
xor
frstor
jl
sub
cmp
adc
or
mov
pop
or
push
push
inc
xchg
test
in
jb
lods
pop
jbe
inc
cwtl
es
dec
rol
gs
rcl
into
out
sub
arpl
fcmovnu
call
adc
or
popa
cli
xor
dec
scas
stc
sahf
pusha
dec
mov
int3
dec
or
sbb
jecxz
xlat
xchg
adc
sbb
xchg
int3
hlt
xchg
inc
push
xchg
mov
loop
ds
out
ja
or
clc
js
inc
mov
sbb
sbb
std
sub
icebp
lods
xor
stc
outsb
rcr
lret
xchg
test
ja
hlt
add
sub
mov
sbb
xor
push
cltd
xor
stc
ficoms
ret
pop
jp
sbb
inc
test
mov
popa
cli
adc
dec
in
xchg
lret
mov
pop
test
dec
jno
lods
dec
sub
jno
roll
popf
cmp
sub
xchg
popa
or
push
sbbl
xchg
mov
sbb
sbb
jo
fwait
repnz
pop
mov
ds
jp
xchg
clc
sub
ret
xor
outsl
fadd
jbe
test
mov
xor
lcall
lret
pop
jge
js
jge
in
xor
xor
mov
adcl
data16
pop
sub
outsl
icebp
frstor
jg
jle
ja
ss
pushf
adc
xor
mov
mov
dec
dec
cs
push
and
mov
and
jecxz
cmpsl
mov
cmpsb
xrelease
xchg
mov
aad
add
inc
mov
push
push
mov
test
clc
sub
sub
imul
pushf
mov
out
mov
pop
and
lods
ljmp
inc
aam
lcall
stc
mov
jae
popf
dec
push
icebp
adc
adc
pop
ja
adc
or
push
das
dec
loope
out
pop
jmp
pop
testb
push
xchg
mov
fsub
jbe
pop
loope
add
leave
in
jne
cld
fcompl
jne
adc
lret
testl
out
and
data16
aas
cmp
pop
and
out
enter
pop
sbb
lds
hlt
or
or
and
and
add
into
sbb
cmp
cmpsb
pop
jnp
mov
lods
inc
pop
in
xchg
cmp
mov
mov
push
sbbb
jmp
inc
add
dec
and
lods
or
popa
and
ss
popf
aas
sbb
repz
add
adc
orl
or
cmp
aad
cmp
mov
outsb
ret
mov
out
scas
pop
add
mov
sbb
xchg
dec
cltd
sub
pop
dec
inc
test
xor
js
dec
aaa
sub
arpl
mov
repz
jge
mov
mov
mov
fwait
sbb
cs
and
decb
inc
pop
adc
push
orl
repnz
push
inc
popf
push
and
pop
loope
cltd
das
lock
or
insb
sahf
xchg
aaa
and
mov
xchg
inc
decl
xor
cld
les
or
sbb
jne
nop
cmp
jmp
js
jns
scas
fcomip
jns
push
mov
cmp
push
jg
jmp
nop
das
shrb
jae
mov
mov
dec
dec
insb
dec
inc
sarb
out
pop
std
mov
addb
popa
xchg
jo
jne
mov
sbb
and
ds
add
rclb
cmpsb
xorb
xor
xor
adc
or
filds
outsl
pushf
insb
mov
sbb
pop
pop
and
ficomps
xor
xor
icebp
stos
ror
ljmp
stc
pushf
adc
inc
mov
xor
iret
cwtl
nop
jle
mov
or
pop
ret
nop
dec
add
ss
adc
test
in
and
mov
adc
xorps
fildl
cmp
aas
xchg
out
dec
xchg
fldt
xchg
mov
cmp
inc
mov
xchg
lods
cli
mov
push
mov
mov
fimuls
cmpsb
inc
mov
mov
sub
ficoms
outsl
cld
add
sub
xor
xchg
xchg
inc
mov
and
jnp
sub
jg
js
sub
cltd
pop
mov
xchg
mov
pop
xor
cmp
sbb
cwtl
in
xor
sbb
jmp
fsts
push
cmpsl
mov
push
pop
xchg
mov
clc
or
mov
sbb
dec
pushf
mov
jns
cmp
mov
pop
lods
fildll
mov
add
nop
mov
mov
cli
outsl
add
icebp
dec
inc
sub
push
in
xchg
daa
aam
mov
bound
jnp
mov
xor
mov
mov
aaa
jb
pop
lods
mov
das
fisubs
pushf
pmulhuw
fcomip
scas
mov
jnp
popa
push
movsl
mov
adc
out
jne
lock
push
repz
fnstenv
cs
subl
icebp
pop
sbb
imul
test
mov
outsl
push
sarb
push
fistps
pop
adc
add
fisubrs
into
das
or
in
mov
sub
cmc
std
dec
xchg
mov
jmp
shrb
fnstsw
inc
and
pop
outsb
push
inc
in
inc
mov
fldenv
xchg
mov
leave
outsl
rclb
sbb
push
inc
push
ret
cwtl
das
pop
shlb
pop
aas
test
aam
into
sti
in
mov
arpl
scas
xchg
xchg
sbb
dec
or
jmp
imul
dec
xchg
mulb
in
rcrl
cmp
adc
and
loopne
lahf
pop
arpl
jp
lods
jmp
sarl
sahf
mov
call
nop
fstl
and
roll
cmp
insb
inc
lea
xchg
mov
jns,pt
jge
mov
sub
repnz
and
xchg
stos
and
aad
or
shlb
lret
sti
iret
mov
jg
fisubs
fwait
mov
out
andb
mov
push
fisttpll
rolb
idivl
jnp
ds
loopne
stc
add
xchg
or
pop
jne
xorb
into
sub
fsts
sbb
push
call
mov
inc
repnz
mov
mov
xor
test
fstl
scas
mov
xor
aas
sub
adc
decb
shl
sub
xor
aas
mov
lods
sbb
les
sub
stc
jne
dec
sub
push
iret
movsl
push
iret
test
dec
faddl
mov
inc
cmpsb
pop
jg
xchg
jne
jae
pop
sbb
sarb
and
inc
call
xor
cmp
cmp
xor
sbb
divl
out
repz
lret
cmpsb
pop
popf
adc
sbb
fistl
cltd
inc
sbbl
in
psubusb
adc
inc
iret
pop
add
aam
test
rcl
sbb
mov
mov
sub
xor
sub
sti
mov
scas
mov
imul
je
incl
ja
inc
cmp
mov
dec
push
cmp
fistl
cmp
inc
in
jbe
or
inc
inc
and
inc
push
insl
aad
sub
push
repz
fdivl
loope
cmp
clc
xchg
xchg
test
pop
mov
inc
jno
rolb
xor
aaa
fs
fstpl
xor
jl
or
dec
rolb
dec
nop
outsb
push
or
adc
adc
or
ss
xchg
test
ret
std
mov
pop
idivb
xor
lret
fstps
adc
out
sahf
je
xor
out
mov
jle
push
out
das
mov
cmp
in
jp
fcoms
pop
out
flds
mov
mov
out
leave
dec
aaa
mov
add
cmc
fs
cmp
ljmp
dec
test
imul
xchg
xchg
loop
mov
dec
pop
mov
mov
xor
fadds
and
adc
cvtdq2ps
mov
mov
outsb
lcall
sub
ljmp
xor
mov
add
std
movsb
sbb
mov
fcompl
xchg
stos
popf
mov
ja
xor
mov
iret
jo
jmp
pop
sahf
pop
cmc
mov
push
enter
out
adc
jl
int
inc
mov
sbb
into
in
rolb
jae
je
fxam
loop
mov
cmp
pop
andb
pop
fldcw
xchg
insb
pushw
aas
cmp
dec
xchg
cmp
add
sub
inc
mov
cld
push
fstpl
jns
add
int
inc
fmull
mov
mov
or
mov
sbb
movb
push
repnz
mov
fimull
fdivl
mov
outsl
jne
cmp
cmp
cmpsl
xchg
mov
divl
loopne
cmp
push
fstps
hlt
scas
cltd
push
xchg
fs
lods
fstl
pop
and
fsubp
loopne
mov
xchg
lahf
and
hlt
pop
and
leave
out
cmpsl
mov
hlt
xor
fstps
aas
inc
push
push
jle
jb
cs
ss
testb
sub
xor
mov
and
sub
scas
movsb
push
filds
popa
push
paddb
out
dec
fwait
sarl
cmpsb
dec
add
inc
push
test
cmp
and
call
imul
push
inc
cwtl
mov
xlat
mov
cmp
pushf
loopne
bound
jle
loop
mov
in
inc
push
push
jae
call
xchg
out
mov
in
mov
fwait
fwait
ja
imul
cmpl
dec
mov
rclb
sub
lret
repz
xor
ljmp
sbb
xorb
inc
lret
mov
ret
icebp
inc
or
push
jno
out
stos
test
loopne
ss
fcoms
push
mov
hlt
movsl
jp
in
jno
mov
push
addl
or
dec
pop
lods
push
mov
movd
cmp
jmp
sahf
stc
iret
pop
sub
dec
or
dec
loopne
inc
repnz
popa
add
pop
jmp
mov
addr16
fdivrs
mov
inc
leave
adc
movl
aaa
lret
mov
cli
das
cli
jbe
and
cltd
in
movsb
aas
sub
ljmp
inc
test
push
les
push
inc
sbb
lret
out
aaa
stos
rorl
xor
movl
nop
mov
mov
into
jle
scas
cmp
lds
data16
or
aas
int3
gs
lret
clc
cmp
scas
mov
add
mov
andb
sub
and
fs
or
inc
pop
jae
add
arpl
mov
nop
and
fmul
dec
pop
sbb
mov
mov
cmp
mov
out
xlat
xor
cmc
xor
cmpsb
cmp
inc
push
push
jge
xor
out
or
imul
in
vpsubsb
cltd
xor
xchg
into
lods
in
leave
lods
sbb
jo
jge
pusha
incb
push
movsl
pop
fistpl
es
cmp
sti
add
pop
sti
insb
inc
leave
ret
repz
mov
xchg
inc
mov
lock
mov
movl
out
testb
jle
or
mov
mov
les
fisubrl
cmpb
jle
outsl
mov
xor
jne
pop
int
test
xor
add
out
push
and
and
aam
cmp
mov
dec
cmp
mov
jns
xchg
jecxz
pushf
inc
add
pop
or
jge
arpl
dec
mov
scas
sub
and
mov
and
outsl
pop
push
rcll
xor
sarl
bound
adc
sbbl
test
mov
xlat
sbb
fnsave
inc
jnp
mov
enter
sti
or
adc
or
stos
mov
sbb
adc
xlat
arpl
dec
and
adc
mov
rcr
mov
sbb
xchg
and
mov
imulb
jns
jmp
addr16
mov
add
push
xchg
mov
dec
push
xchg
or
addr16
cwtl
inc
insb
cmp
mov
xor
jno
jmp
lods
or
cmc
rcr
in
es
or
mov
in
jecxz
ljmp
xchg
jg
push
hlt
data16
cmp
push
xchg
stos
inc
mov
dec
xor
fistpll
cld
sub
lds
jb
xchg
out
cli
jbe
shlb
stos
mov
jae
jp
je
push
movsb
cld
sbbl
ret
mov
pop
sarl
cli
hlt
das
jl
adc
flds
stc
or
push
aad
sbbl
xchg
push
pop
inc
test
sti
inc
popa
andb
cmp
das
dec
sbb
jmp
dec
in
mov
loop
outsl
push
sbb
adc
sti
ds
sub
dec
sub
mov
fidivrs
xor
or
pop
lcall
jbe
xchg
mov
mov
dec
xchg
test
je
cmpsl
imul
cmpsl
movsb
in
push
es
mov
js
outsl
adc
lods
dec
pop
push
pop
sub
arpl
aad
stc
fbld
movsl
dec
sub
pop
pop
mov
outsb
jg
scas
jmp
push
sahf
lret
sahf
sbb
mov
jecxz
sub
sub
jg
out
sbb
xor
mov
adc
aaa
mov
add
xor
clc
and
push
std
nop
jl
xchg
roll
in
pop
ds
mov
cmp
mov
push
push
loope
and
push
insl
mov
lret
add
idivb
stos
or
int
rorb
xchg
aad
mov
adc
popf
ljmp
add
add
jmp
cmp
push
inc
clc
mov
xchg
fnstenv
fldl
pushf
push
jne
es
mov
cmc
cli
cmp
nop
sub
adc
or
and
xchg
jnp
jne
add
stc
cmp
add
shl
ja
inc
add
inc
test
mov
std
mov
cwtl
cmp
roll
stc
xor
test
pop
lods
pop
stos
je
pop
stc
das
loopnew
out
scas
stos
sbb
idivl
or
mov
mov
mov
addr16
jmp
xor
stos
sub
loop
pop
imul
cmp
pop
insb
fwait
icebp
sub
ret
sub
outsl
data16
in
pop
or
xor
cmpsb
lds
xchg
int3
loop
jno
fst
into
adc
push
rcll
jae
pop
push
mov
aaa
pop
jmp
test
out
mov
or
repnz
sub
sbb
js
rclb
sub
cmp
jp
adc
stos
and
cmp
lea
xchg
movsb
inc
imul
lret
ja
sub
shlb
push
test
jecxz
push
cmp
pop
bound
int3
mov
mov
notb
and
jbe
dec
ss
xor
outsl
lahf
gs
rcrl
inc
popf
stos
sbb
addr16
adc
or
push
pushf
pop
loope
cmp
push
sub
ss
jo
cmc
push
cmp
pop
pop
fcmovnu
cld
aaa
pop
add
dec
pop
fidivl
in
push
in
push
mov
sbb
or
mov
push
or
push
mov
or
sub
mov
xchg
int
enter
mov
std
mov
sub
inc
jl
or
xor
xchg
hlt
mov
sub
loop
xor
adc
iret
or
push
nop
mov
inc
movsb
dec
jno
adc
and
xchg
inc
ds
add
call
outsb
ret
cs
xchg
pop
cmp
jo
add
outsl
punpckhdq
or
scas
and
rorb
es
lret
xlat
mov
mov
sub
add
js
pop
and
or
xchg
insl
inc
andb
cmpsl
pop
rol
je
sbb
stc
test
sbb
ja
mov
cmpsl
jp
or
dec
sbb
daa
jo
lret
mov
mov
dec
fildl
ret
pusha
push
mov
popf
mov
test
pop
frstor
push
inc
or
iret
out
and
ret
xchg
int
jp
push
dec
test
add
inc
adc
int
and
xchg
dec
cld
push
mov
pop
lea
aad
loope
rcl
es
std
jle
and
mov
jl
jle
sub
cmp
push
push
fisubrs
push
jle
dec
and
adcl
add
xchg
pand
or
mov
nop
dec
inc
jmp
rcl
leave
sub
mov
lods
insl
push
mov
mov
push
in
andb
or
lods
jg
push
shll
pop
stos
je
jns
jl
fwait
pushf
and
and
imul
pop
mov
lods
fadd
or
shll
stc
dec
xchg
imul
xor
dec
inc
outsl
ds
dec
test
subb
aas
clc
mov
in
pop
mov
xor
clc
dec
xor
ret
inc
lcall
nop
cs
mov
scas
es
push
pop
repnz
loope
mov
out
sub
sbb
fldenv
pop
in
shrb
sbb
data16
rorb
aas
cmp
rclb
adc
dec
sbb
sbb
or
cmp
test
or
mov
pop
daa
repz
out
jno
movsl
mov
mov
insl
test
cltd
stos
loopne
dec
imul
dec
into
pop
pop
arpl
push
pop
pusha
aaa
fcoms
cmp
xlat
into
cmp
or
cld
call
dec
fldpi
aad
in
xchg
stos
pop
pop
js
inc
inc
push
cs
into
cmp
imul
jmp
pop
cmp
or
cmp
sahf
or
mov
sbb
ret
inc
bound
repz
test
cltd
shll
adc
enter
pop
xor
je
inc
repz
push
xchg
leave
sub
js
jo
testl
scas
or
test
rolb
push
inc
mov
jle
add
ffreep
and
fcmovb
push
stos
sbb
lret
lret
rcll
int
ret
mov
xchg
inc
xchg
or
int3
pop
popa
rcr
and
imul
push
inc
xchg
ss
xchg
notl
outsl
gs
xor
xor
pop
cmpsb
push
push
dec
xchg
sub
scas
push
loop
dec
or
mov
pushf
je
pop
rorl
fs
or
scas
inc
push
mov
lods
cltd
inc
out
test
js
add
scas
or
jmp
mov
cwtl
push
out
adc
jb
movl
aas
push
mov
push
xor
cmp
fdivp
das
push
pop
pop
cli
cld
sub
hlt
push
xor
inc
scas
enter
std
add
pop
cmpsb
xor
subb
mov
lcall
xor
stc
pop
ret
lods
mov
and
arpl
xchg
test
mov
ds
push
insb
push
lret
inc
in
in
pop
test
push
dec
xor
fdivs
std
xor
gs
xor
mov
es
adc
push
aaa
ja
test
adc
jbe
or
or
mov
ficompl
mov
cld
adc
mul
stos
es
mov
dec
push
dec
sub
leave
lahf
mov
repz
xchg
in
cmp
add
mov
sbb
inc
pop
in
hlt
outsb
ljmp
sub
sbb
jp
test
aas
xor
push
sahf
mov
pop
cmpsb
xchg
push
mov
push
cs
pusha
jmp
andl
and
and
fdecstp
test
out
cmp
movsb
sub
dec
out
jp
js
outsb
and
hlt
mov
into
mov
xor
imul
jge
test
call
push
mov
mov
mov
jecxz
pop
bound
ja
fstpt
fmull
pop
rorb
lahf
or
sbb
mov
pop
add
jno
sbb
jo
rclb
not
and
pop
jno
sbb
and
fldl
arpl
std
xor
stc
pop
int3
jnp
loope
adc
pop
mov
and
push
lds
dec
ror
mov
fwait
dec
dec
aad
daa
out
jmp
scas
addl
inc
rol
into
insb
mov
xor
mov
sar
pop
mov
push
mov
sarl
arpl
stos
cmpsl
cwtl
gs
jbe
mov
les
dec
and
ljmp
cld
test
xor
sub
cwtl
lcall
ja
sbb
pop
in
adc
push
out
pop
call
pop
cmp
xor
xor
push
fists
dec
fwait
and
dec
mov
std
int3
mov
ljmp
dec
add
daa
jmp
lea
push
add
lods
jmp
mov
mov
hlt
in
pop
xchg
sbb
shll
ret
lea
sbb
in
cmp
cmp
nop
mov
fwait
test
sbb
aam
cli
test
mov
inc
push
mov
mov
sbb
stos
adc
cwtl
rorl
sbb
int3
ss
mov
es
xlat
xchg
cltd
mov
jp
test
cmp
ja
add
in
ss
sbb
mov
fidivrl
sub
sbb
inc
scas
pop
movsl
mov
mov
fcmovnu
call
fmull
inc
aas
into
cmpsl
mov
adc
xchg
lret
int
pop
or
icebp
inc
mov
xchg
jge
xor
orb
cs
cs
shlb
jecxz
inc
cmp
sbb
int3
xchg
int3
std
mulb
add
stos
xchg
xchg
add
xchg
dec
popf
shl
dec
ss
dec
dec
mov
cmp
pop
add
addr16
lods
es
mov
pop
fwait
loopne
cmpb
push
outsl
mov
repnz
shlb
ds
mov
sbb
pop
ljmp
cmp
or
jne
inc
pop
jge
inc
jne
mov
jne
int3
out
imul
sahf
scas
and
out
sub
xor
and
sti
js
enter
cwtl
gs
pop
add
mov
std
or
jbe
cwtl
xor
loopne
icebp
jmp
sti
or
popf
std
lock
pop
sub
xchg
lret
push
lods
loope
or
cwtl
aad
mov
push
outsl
sbb
cmp
xor
push
mov
add
sub
std
and
cwtl
fsubs
adc
xchg
insl
ret
dec
outsl
scas
dec
mov
outsb
jo
lahf
push
bnd
add
jne
dec
icebp
in
mov
inc
insb
dec
lea
mov
test
lds
fcoms
or
mov
insl
mov
jmp
pop
fistpl
out
sub
int3
push
dec
pop
pusha
cltd
xor
and
popa
into
mov
jns
cltd
aaa
xlat
adc
repnz
fistpl
jne
add
xchg
or
insl
repnz
mov
xchg
inc
sbb
les
and
cmp
movl
andb
in
xchg
sbb
push
out
fbstp
push
mov
shll
lea
cmp
sub
out
sub
int
aaa
jg
xchg
je
lahf
and
out
pop
hlt
pop
dec
add
sbb
jmp
sbb
call
xlat
push
and
ds
mov
stos
loope
or
push
jp
push
xchg
mov
mov
in
adc
jb
xor
pop
outsl
dec
push
fnsave
nop
fisttps
and
scas
iret
push
add
lret
add
dec
push
ja
fbstp
xor
and
scas
ficoms
mov
cmp
mov
lcall
add
adc
mov
and
arpl
sti
and
cs
sahf
inc
adc
add
fwait
xlat
scas
jg
push
fcmovnbe
dec
insb
fistpll
test
xlat
mov
arpl
mov
insl
js
and
ret
ret
jge
sbb
pop
push
sub
jno
movsl
stos
and
mov
xchg
dec
push
cmp
insl
cmpsb
inc
push
cmc
add
jle
xchg
xchg
aaa
aas
add
insb
pop
sub
and
push
test
in
sbb
mov
cmpsl
lock
adc
xor
fildl
fdivs
push
xor
jae
fdivrl
xchg
push
sub
repnz
inc
dec
dec
fs
mov
inc
mov
mov
test
std
insl
fimuls
fwait
rcrl
mov
fwait
adc
dec
outsb
rorb
inc
jecxz
pop
out
add
and
iret
sbb
jo
clc
aaa
mov
sbb
jo
push
jg
mov
aad
xor
dec
xchg
inc
adc
pop
xchg
dec
shr
dec
add
fimuls
jg
dec
pushf
jl
xchg
mov
dec
fdivrs
add
rcrl
sbb
sarb
jp
fisubrl
adc
lds
call
fadd
arpl
mov
cmpsl
or
ret
lods
xchg
sti
hlt
mov
sbb
add
loope
dec
orb
xor
mov
push
pop
xchg
popa
orl
sti
pop
das
dec
push
lea
xchg
mov
xchg
and
out
pushl
adc
insb
push
xchg
mov
xor
popa
jbe
leave
stos
out
jp
sbb
fdivrs
cmpsl
insl
dec
hlt
inc
sahf
dec
aad
gs
ds
or
xchg
divl
adcb
push
out
mov
adc
xor
dec
std
xor
push
icebp
adc
roll
testb
addr16
into
aad
sub
pop
cltd
in
cltd
xchg
movsb
mov
sub
xchg
test
adc
test
sbb
jecxz
shrl
aad
pop
inc
pop
xor
mov
dec
or
xor
cmpsb
push
icebp
sar
fcmovb
xchg
insl
mov
testb
push
scas
push
cltd
sahf
iret
and
imul
sbb
pop
fiaddl
scas
sbb
in
arpl
rorb
stc
sbb
mov
add
daa
orb
sbb
nop
movsb
xchg
mov
outsb
inc
mov
mov
pop
and
fwait
mov
xchg
in
mov
and
mov
nop
mov
sahf
out
mov
mov
add
shlb
sub
test
inc
fs
out
jge
xchg
inc
test
dec
pop
test
stc
lret
cltd
cmp
xor
add
mov
sbb
popa
fldenv
sub
cmp
leave
scas
cmp
mov
jne
push
stos
test
mov
adcl
inc
setle
mov
push
loop
cmp
dec
into
lea
lea
popf
sub
jnp
pop
imul
cli
mov
popa
orb
push
pop
xor
inc
adc
or
loope
jmp
cli
jne
test
mov
shlb
xchg
arpl
mov
jecxz
mov
out
fldenv
jg
sbb
mov
aam
adc
adc
xchg
addr16
aas
mov
mov
mov
rcll
ds
test
lret
jmp
ret
add
push
jecxz
sbb
mov
mov
aam
or
inc
lret
mov
xor
popf
aaa
or
int3
rcl
push
jb
or
and
scas
add
dec
sti
lock
int
dec
cld
leave
movsl
and
cwtl
inc
lds
adc
pop
ds
sbb
outsb
dec
gs
ljmp
jbe
sahf
mov
imul
lock
aam
imul
sbb
cwtl
dec
add
mov
xchg
div
jne
scas
xchg
jb
pop
jp
std
jae
stc
push
int3
add
pusha
in
nop
mov
xchg
push
clc
mov
fwait
push
add
push
and
fwait
in
cmp
int3
xchg
jb
xchg
jb
cli
imulb
xor
mov
filds
mov
xchg
popf
and
loopne
in
out
and
ds
out
sbb
push
dec
push
mov
xchg
shlb
or
jg
aam
cmp
jge
aas
inc
scas
dec
in
jae
mov
pop
pop
into
inc
jecxz
scas
jo
call
adc
aam
stos
mov
ss
or
ljmp
mov
lods
fstpt
arpl
cli
sbb
in
stos
out
cmp
dec
push
test
add
sub
out
cmp
dec
aas
dec
push
mov
and
lahf
sub
mov
in
ljmp
dec
test
jb
bound
pop
testl
mov
lret
push
pop
jl
btr
dec
mov
inc
ss
test
or
jge
pushf
sbb
outsl
mov
pop
movb
shll
mov
leave
out
sub
test
adc
clc
popa
inc
lods
lock
cmp
mov
or
out
and
push
fistpl
pusha
mov
cmp
cmc
faddl
add
fs
xchg
bound
jo
sbb
xor
arpl
dec
xchg
and
loope
pop
dec
cwtl
mov
fwait
jno
cmpb
push
mov
daa
faddl
or
popf
fstps
repnz
mov
iret
sub
mov
popa
mov
lea
ss
pop
clc
fsts
js
jg
xchg
cwtl
inc
sbb
shl
push
mov
pushf
loope
dec
xchg
test
sti
sub
int3
and
dec
incb
ss
xorl
push
adc
orl
out
pop
imul
pusha
jge
mov
adc
mov
sbb
adc
xlat
xor
js
jno
fidivs
push
ds
mov
jnp
mov
sub
mov
dec
pop
mov
push
fsubl
xor
xchg
xor
sub
jo
jl
mov
cmp
sbb
cmp
les
cmp
fisttpl
mov
or
mov
int3
push
mov
outsb
jne
adc
push
filds
popa
stc
add
sbb
mov
in
dec
and
mov
push
sti
shrl
or
arpl
lock
es
shll
mov
loope
sti
pop
rorl
cmp
xchg
pop
ds
mov
xchg
mov
hlt
add
jge
cltd
mov
ret
int
jg
xor
add
adc
mov
insb
adc
xor
jg
jecxz
jbe
xor
ffreep
pop
mov
mul
jmp
push
mov
and
lea
test
sti
aad
xchg
mov
mov
ds
imul
les
test
add
cld
push
mov
fwait
mov
out
xchg
mov
xor
out
cmp
negl
lcall
or
dec
fildll
call
or
pusha
jae
and
sub
push
push
cmc
stos
out
les
jne
lock
mov
mov
pop
dec
sbb
leave
inc
lds
test
push
cmp
scas
cmp
inc
or
sbb
cmp
int
aas
jle,pn
adc
filds
rclb
out
mov
ret
sbb
lea
les
shrl
orl
mov
rol
lods
jb
rcr
mov
scas
mov
mov
sbb
sub
jne
mov
iret
jne
popa
loopne
mov
sbb
push
adc
xchg
sti
xchg
mov
jmp
xchg
fimull
and
mov
das
mov
sbb
imul
mov
xchg
je
pop
gs
xchg
cli
xor
out
cmp
cmp
ret
jg
xchg
xchg
fdiv
add
fiaddl
andb
cwtl
xchg
sub
fisubrs
repz
cmpsl
jnp
data16
push
inc
add
fstps
push
cmp
fmuls
cmp
inc
xchg
mov
mov
shrb
push
fnstenv
int
int
mov
sub
pop
sbb
out
push
stos
mov
rclb
cwtl
inc
rcr
or
add
dec
ror
fdivrs
stos
popf
xor
jmp
cmp
leave
leave
xchg
das
dec
cltd
scas
sub
push
xlat
dec
mov
and
xor
and
push
add
sub
jns
testb
fwait
jo
mov
data16
movsl
inc
sub
xchg
test
jl
sbb
enter
xor
xor
cmp
and
mov
xor
mov
push
push
shr
out
daa
jnp
and
pop
mov
outsb
push
jne
loopne
imul
cmp
fstpt
popf
test
add
outsb
fnstsw
js
fwait
dec
dec
push
sbb
rcl
jle
dec
xchg
adc
jp
inc
pop
mov
xchg
imul
mov
mov
sub
add
stos
popf
ffree
insb
pop
fimull
jne
jb
or
nop
mov
inc
or
jb
sti
sub
cltd
pop
ret
in
pop
dec
and
lret
iret
lds
push
imul
adc
ss
insl
call
jmp
dec
mov
cltd
mov
flds
sub
bound
popa
inc
inc
nop
jge
add
xlat
mov
mov
inc
push
xchg
lds
or
cmp
ja
sub
xor
mov
mov
add
pop
jae
and
pop
add
pop
lcall
fiaddl
cmp
aad
adc
cs
add
orl
mov
pushf
inc
xchg
xchg
push
pop
repz
aas
inc
or
sub
iret
jmp
cmp
in
cmp
mov
dec
and
scas
pop
mov
sahf
dec
push
mov
mov
sarl
mov
bound
mov
fmuls
ja
mov
imulb
mov
stc
sub
xchg
imul
pusha
cmp
jne
popf
or
mov
dec
mov
sbb
add
mov
call
in
mov
mov
mov
inc
jg
int
dec
jle
sub
mov
faddl
rclb
push
pop
xor
push
dec
mov
and
or
mov
mov
sbbb
push
rolb
roll
mov
std
pop
mov
mov
push
lahf
adc
pop
or
push
lret
int
sbb
xchg
mov
pop
movsb
jg
out
dec
cmc
pop
lcall
fisubs
inc
jmp
popa
pop
inc
jbe
insl
iret
leave
ljmp
pop
or
pushf
pop
xor
jle
jg
dec
lahf
inc
adc
repnz
sub
xchg
fmulp
stc
stos
sbb
lds
inc
push
jb
shr
inc
cwtl
push
sub
add
mov
test
aam
inc
or
bnd
sub
adc
cmp
adc
cmpsb
iret
sbb
sahf
push
fwait
loopne
dec
mov
cld
mov
sbb
rorl
and
out
jp
pop
inc
sub
aad
inc
imul
xchg
mov
outsb
push
cmp
rorb
aaa
lret
pop
adcb
or
bound
cmpsb
inc
xchg
icebp
push
mov
call
sub
gs
xor
enter
rcr
mov
push
and
xchg
inc
subl
mov
jns
xchg
jp
hlt
jg
out
mov
dec
arpl
jle
or
xor
adc
push
je
iret
int3
stc
push
popf
cmp
cmp
loop
jb
adc
rclb
das
in
mov
lods
repnz
cmpsb
cwtl
scas
decb
dec
xor
loope
insb
add
pop
pusha
aad
xor
sub
jae
add
mov
movl
ror
bound
fwait
dec
cmc
lahf
adc
pop
sahf
jo
sbbb
xchg
call
sub
push
lock
jae
pop
scas
pop
aad
ficompl
jge
xor
aas
icebp
mov
jo
mov
dec
fisubrs
lcall
hlt
push
dec
imul
jne
dec
fidivrl
fadds
add
dec
cmp
fcompl
es
loopne
sbb
andb
fdivs
andb
lret
sub
les
mov
loopne
fcom
aam
xor
jmp
ds
std
pop
jg
dec
cmp
into
sahf
stc
test
leave
pusha
mov
push
mov
cmpsb
add
outsb
add
mov
mov
xor
std
or
xor
mov
dec
out
aas
xor
fisubrl
push
mov
dec
mov
insl
mov
add
shl
addr16
fdivl
add
bound
fwait
scas
stc
jle
mov
jmp
lret
sarl
shll
repz
push
cwtl
pop
cmp
dec
adc
aad
fpatan
nop
pinsrw
cmc
lods
inc
push
xor
xor
fdivrl
and
mov
mov
pop
dec
inc
sub
sti
xor
imul
inc
mov
inc
popa
pop
imul
push
inc
shr
adc
sbb
and
aaa
and
xor
sub
test
test
dec
fcoms
sahf
repz
cmc
and
jmp
cmp
divb
jmp
daa
or
lods
fstpt
xor
xor
loopne
insl
fs
sub
out
and
nop
cmp
insl
mov
xor
stos
in
sar
push
xchg
and
sbb
cmp
test
jb
pop
sub
cmp
sbb
ror
aas
add
imul
stos
cld
and
mov
int3
xchg
adc
out
scas
add
std
cmp
rcrl
test
add
mov
clc
or
cmp
rclb
nop
lret
adc
and
subl
dec
fs
ret
xor
dec
and
add
mov
sbb
pop
cmpsl
push
or
mov
test
cmc
jno
test
loope
pop
cmpsl
inc
ja
andl
into
jnp
lods
cmpl
sar
mov
sbb
xchg
or
lcall
ds
shrl
or
mov
add
adc
in
fidivs
loop
push
xor
testl
jmp
mov
jae
adcl
dec
jno
repz
arpl
mov
mov
push
popf
lock
cltd
add
popf
outsl
out
or
jge
push
arpl
push
add
dec
push
push
int
dec
add
fnsave
push
shlb
out
jnp
jmp
push
daa
inc
fimull
dec
nop
jle
fidivrs
sahf
pop
and
xor
in
add
jg
add
jnp
lock
adc
loopne
jno
pop
insl
mov
addb
rorl
cmpsb
sub
lret
xchg
adc
add
addl
fstpt
sbb
cmp
push
sub
shlb
sbb
xchg
dec
push
ds
adc
sbb
xor
loope
dec
mov
sbb
pushf
push
jae
out
sarl
loop
nop
in
xchg
cmc
sbbb
mov
mov
sub
leave
loope
xchg
add
xchg
shll
push
pop
int3
mov
mov
cmp
cmp
xlat
shrl
stc
inc
fcmovnb
sar
ds
adc
pop
jnp
cmpl
xchg
push
in
inc
adc
push
lods
pop
mov
pop
push
sbb
das
popf
dec
mov
cmc
sbb
repz
push
fwait
pop
mov
pop
fnsave
cmp
lcall
jge
or
cmp
pop
sub
cmc
add
mov
or
mov
jno
dec
pusha
xor
push
jnp
dec
in
and
into
dec
hlt
les
test
pop
fsub
sub
pop
mov
mov
jne
push
sbbb
pop
adc
je
and
dec
enter
mov
fnstenv
adc
xchg
addr16
aaa
jbe
cmp
lods
pop
imul
sub
push
jmp
sub
orl
and
cltd
out
iret
add
inc
sbb
outsl
pcmpeqd
lods
pop
aam
and
jle
adc
xchg
setge
sbb
test
into
pop
xor
daa
xor
xor
rcll
xlat
mov
test
mov
push
cltd
pop
adc
cmp
std
ljmp
mov
inc
dec
out
or
loopne
fadds
sub
push
shlb
mov
sub
jle
lods
mov
add
and
call
lret
mov
iret
xlat
ljmp
push
xor
sbbb
add
loopne
cltd
sbb
pop
xchg
mov
pop
ret
mov
pop
test
stos
xchg
xor
call
mov
repz
pop
je
cmovns
add
mov
fdivp
pushf
imul
icebp
xchg
stos
adc
ror
ss
fidivrl
inc
lahf
and
ss
xor
mov
xchg
or
lcall
in
daa
jno
cld
push
lods
ret
xchg
mov
in
iret
mov
xor
mov
inc
mov
into
pop
int3
xor
lea
xor
repnz
lods
paddq
xor
xor
lock
ret
lret
into
cs
lea
jb
les
test
xor
and
add
lods
dec
mov
in
and
dec
mov
addr16
scas
test
jmp
outsb
les
or
dec
inc
pushf
mov
inc
aaa
fwait
popa
cmp
sub
dec
lcall
int3
scas
mov
imul
xchg
hlt
stc
add
std
pusha
add
insl
push
sbb
fs
insb
fdivrl
out
push
lock
lods
int3
test
cmpsl
xchg
dec
aam
nop
mov
ret
pop
in
pop
sub
je
dec
jecxz
enter
push
cmpsl
pop
int3
jg
inc
ss
rcrb
adc
jnp
xchg
and
jo
pop
enter
out
lcall
dec
mov
lret
push
popf
xchg
aas
cmp
int
es
mov
rclb
mov
lods
pop
loope
loope
sbb
outsb
ds
lods
out
scas
lods
cld
mov
loope
out
sub
and
or
movsl
pop
jmp
out
push
xchg
cmp
lock
or
push
sub
sti
inc
xor
fistl
ds
test
aam
repnz
push
mov
push
arpl
mov
lret
cwtl
push
aam
or
out
push
cld
mov
dec
add
fists
lahf
lea
out
inc
pop
cmp
and
pop
mov
mov
push
push
pop
icebp
ret
fnstsw
xorl
xor
inc
mov
add
les
lea
xor
push
lods
mov
push
mov
inc
push
mov
cld
push
dec
into
call
mov
repz
mov
inc
cmp
sub
fwait
inc
inc
int3
pop
es
ss
xlat
pop
cmp
lret
sub
adc
pop
push
dec
leave
jo
mov
pop
ljmp
pop
sub
fwait
xor
inc
pop
jb
jg
mov
push
dec
clc
leave
push
jo
enter
push
push
or
xorl
pop
cmpsb
push
xor
fcomp
fmuls
leave
xchg
sub
rcr
cmpsb
stc
or
dec
dec
mov
rorl
sbb
cmp
lret
mov
cmpsl
xchg
aad
or
xchg
out
cmc
dec
mov
push
test
sbb
cmp
cli
jecxz
hlt
enter
mov
sub
push
jmp
dec
lods
iret
pop
push
pop
inc
xchg
jl
fidivrs
incb
testb
ror
fwait
je
dec
push
cli
js
repnz
cmp
sahf
jo,pt
and
mov
jecxz
xchg
mov
insb
sbb
stc
mov
xor
cwtl
or
lods
neg
or
jl
sbb
jmp
mov
scas
mov
lcall
iret
sub
imul
and
mov
hlt
ss
mov
inc
insb
js
das
inc
sub
mov
jbe
pop
je
adc
imul
sub
popf
inc
pop
repnz
sub
push
cs
inc
lret
xlat
mov
addr16
insb
sub
lds
cmp
mov
pusha
shl
cmp
pop
aad
inc
test
pop
or
into
nop
fwait
das
in
pop
push
add
lea
sub
gs
pop
sarb
popf
mov
mov
jge
and
and
xor
gs
gs
xlat
out
lds
decb
lcall
imul
jbe
and
fadd
mov
dec
jp
cwtl
test
mov
add
mov
lret
lea
mov
mov
lock
imul
arpl
mov
pop
mov
inc
xlat
mov
rcrb
shll
mov
add
lea
cmpsl
mov
sub
sbb
aad
jle
dec
lods
dec
push
jmp
stc
ret
sahf
outsl
adc
loopne
es
push
into
test
sub
les
js
aad
shr
mov
xor
pop
push
dec
fcomp
stos
xchg
xchg
mov
lcall
inc
repz
loope
push
lods
aad
pusha
enter
addr16
ficompl
add
int
add
mov
xchg
data16
imul
btrl
ficoms
mov
inc
pop
and
out
divl
popa
in
out
jo
pop
sbb
js
push
arpl
jle
pop
imul
sub
jl
aaa
dec
lds
hlt
jae
aaa
sahf
mov
stos
mov
fildl
movsb
xchg
arpl
mov
sti
testb
sbb
xchg
push
aad
inc
aas
rorl
inc
mov
mov
pop
icebp
lods
and
cmc
sub
scas
mov
inc
jge
mov
jge
rcl
icebp
sub
pop
adc
aaa
pop
movsb
or
sbb
fiadds
xor
es
mov
popf
imul
fneni(8087
lahf
pop
psrlw
push
jbe
fs
pop
or
sti
in
and
fldenv
inc
outsl
lods
sub
xor
jne
mov
add
jns
xorb
jg
pop
mov
out
add
std
testl
or
rclb
lods
push
push
mov
mov
fnstcw
fadd
sbb
dec
cmp
subl
jge
jae
roll
rclb
mov
call
push
in
xchg
cmp
cmpsb
in
icebp
out
test
outsb
out
mov
les
es
pusha
arpl
inc
out
scas
adc
fcoms
cmpxchg
xchg
or
push
sbb
and
cld
aas
inc
lea
mov
movsl
add
dec
test
xor
das
mov
jae
cmp
xor
dec
sti
fildll
shrb
pop
movsl
pop
movsb
and
pop
pop
cmp
les
push
sub
mov
in
jns
inc
aad
or
cmp
movsb
mov
dec
and
xchg
sub
aad
cmp
jae
mov
sub
icebp
inc
push
xorb
or
adc
sub
stc
js
leave
sbb
sub
out
scas
jge
out
mov
movsb
mov
lret
das
push
ljmp
cmp
and
xchg
dec
adc
repnz
ret
stos
mov
out
mov
popf
or
or
mov
lcall
shl
sbb
into
addr16
cmp
mov
vaesdec
or
inc
push
outsb
pop
push
sbb
push
shlb
cmp
lret
insl
xchg
out
jecxz
mov
sub
pop
sub
add
add
adc
and
adcb
rclb
add
call
jg
add
rclb
cmp
pushf
ss
lret
popa
outsl
aam
jbe
ss
mov
add
addr16
add
push
out
in
inc
cmpsl
mov
dec
jae
sub
pop
fdivp
xchg
repnz
cmp
pusha
lcall
inc
cmp
push
mov
ret
mov
adc
pop
mov
xchg
add
jle
xchg
push
cld
xchg
inc
cltd
ret
insb
push
inc
adc
mov
and
push
mov
push
mov
xchg
mov
ljmp
pop
jge
int3
add
dec
ljmp
in
lret
mov
push
jnp
mov
mov
mull
mov
repz
cwtl
hlt
xor
mov
add
scas
push
jns
push
in
pop
test
jo
call
in
mov
repnz
sbb
arpl
or
sub
dec
std
inc
add
shlb
in
mov
ret
js
in
add
mov
orl
es
adc
cmp
mull
xchg
mov
data16
jecxz
jnp
lret
push
xor
ja
hlt
inc
dec
decl
xchg
push
sub
filds
lret
push
adc
mov
or
arpl
stos
lock
xchg
pushf
mov
mov
leave
outsb
sbb
dec
std
scas
lret
mov
pop
push
aam
jb
push
test
mov
cmpsb
sbb
idivl
mov
add
pop
xchg
adc
call
loop
pop
mov
repz
lcall
jae
xchg
mov
sub
jp
adc
in
sarb
jns
cmpsb
pop
jmp
std
outsb
adc
pushf
adc
pop
cmp
sbb
outsb
mov
sbb
int3
iret
subb
and
xchg
inc
cmp
nop
mov
mov
cmp
mov
scas
rcrl
leave
ljmp
into
aaa
jno
xor
mov
sub
insb
push
mov
int3
ss
fldenv
jo
add
gs
push
in
jno
sbb
xorl
dec
adc
mov
jo
shr
loopne
mov
or
cmp
pop
ljmp
mov
adc
int
pop
pop
xorb
lcall
adc
mov
xchg
inc
sbb
push
sub
sub
cmp
inc
int3
inc
or
push
mov
movsl
mov
mov
mov
mov
fst
push
fs
xchg
dec
adc
std
test
xchg
add
mov
imul
lods
xchg
or
stc
call
fisttps
clc
lret
mov
xchg
sbb
or
fwait
jo
leave
insl
das
push
inc
sbb
loope
inc
mov
add
repz
xor
in
jnp
cwtl
mov
mov
fcompl
or
mov
fisubrs
sub
data16
push
pop
sbb
mov
dec
mov
push
cmpsl
mov
jb
lahf
ret
cmp
or
sub
sbb
inc
add
jns
inc
ds
add
cmp
cmpsb
and
mov
jns
sub
mov
sahf
mov
mov
lahf
cmp
inc
mov
xchg
stos
out
dec
inc
mov
repz
div
pop
cltd
test
lods
xor
sarl
pop
sti
and
pusha
xchg
dec
iret
push
lods
insb
and
cmp
jo
out
ds
clc
mov
sbb
icebp
cli
setg
xor
cld
in
push
sbb
es
or
mov
pop
xor
loopne
cmpsb
jle
loop
rorl
loopne
inc
jmp
xchg
arpl
shll
into
or
fidivrs
add
pop
and
fidivs
sub
sub
or
cmp
bound
lret
dec
dec
sub
fs
insb
xor
in
les
cwtl
mov
enter
repz
mov
divl
jle
add
mov
addl
imul
aam
cmp
adc
push
loope
dec
sarb
mov
lds
out
aad
push
push
mov
test
adcl
or
mov
mov
mov
sub
jg
ljmp
sub
and
adc
inc
cmp
stos
repnz
push
pop
xor
sbb
sbb
rcrl
fs
cmp
cli
clc
aad
scas
loope
mov
sti
jae
clc
bound
pop
movsb
sub
jmp
sahf
outsl
inc
jp
pop
gs
and
in
das
ret
lret
adc
dec
xchg
clc
jne
adc
inc
aaa
scas
test
daa
les
xchg
pop
jge
inc
jp
push
sahf
cld
ljmp
inc
rcrb
sub
andl
icebp
aam
adc
rcll
push
xchg
in
adc
ror
fwait
or
pop
add
mov
mov
pop
scas
sbb
mov
das
sti
std
or
shl
sbb
fdivrl
sub
adcb
mov
or
fistl
mov
fmull
push
mov
int
sbb
sbb
fdiv
push
jns
dec
mov
cmp
mov
jp
mov
xchg
lret
stos
in
cli
xor
fcoml
jne
mov
insb
cmc
ss
shll
stc
mov
mov
xor
out
xor
dec
aaa
pushf
lods
aaa
int
inc
lahf
and
mov
insb
cmp
sahf
call
and
add
xchg
push
inc
mov
jg
fnstenv
jmp
les
hlt
ret
test
enter
jecxz
or
lcall
dec
jno
adc
sahf
mov
movsl
test
outsb
cmp
mov
imull
in
inc
insl
cmp
dec
xchg
std
mov
rcrl
mov
das
pop
mov
jecxz
dec
mov
adc
aad
orl
cmp
jmp
mov
inc
push
cmp
adc
or
in
sub
scas
rcr
and
test
mov
mov
scas
dec
popl
dec
aas
dec
xor
mov
cmp
aaa
test
leave
aad
xor
and
adc
mov
xchg
or
mov
xchg
lds
inc
or
ja
mov
adc
addb
mov
popf
mov
stc
mov
sarl
std
fnstenv
int
push
fdiv
jno
add
adc
nop
dec
xchg
ret
adc
adcb
push
inc
mov
test
xchg
daa
enter
nop
add
ds
out
mov
adc
int
shl
sub
stc
cmc
and
push
sub
dec
add
jbe
sub
insl
scas
imul
mov
mov
fwait
stos
xor
sub
int
inc
fwait
mov
adc
mov
dec
cs
in
pop
inc
test
out
aad
out
das
arpl
pop
mov
adc
outsl
repnz
xorb
clc
fwait
push
lret
cmp
jecxz
stos
mov
sub
loope
enter
aad
add
pushf
jl
mov
filds
sub
sub
aaa
cwtl
enter
ljmp
mov
push
in
fstpl
test
fistps
mov
scas
ret
jl
std
and
jl
frstor
je
loopne
loope
call
aaa
dec
mov
fld
cmp
xchg
sub
mov
add
mov
out
mov
inc
mov
into
xor
xor
adc
pushf
xlat
out
push
mov
inc
mov
xchg
push
fimuls
mov
lret
clc
into
imul
cmpsb
adc
sub
jo
rcll
jno
mov
stos
ja
sbb
popf
xchg
jecxz
outsl
cmp
rolb
inc
sti
add
sbb
fimuls
jge
xor
add
xor
cmpsl
jg
dec
arpl
pushf
xor
cmovnp
lds
jbe
pusha
jb
and
cmp
movsl
movsb
je
insb
jp
pop
xorl
add
jg
add
negl
xchg
incl
je
inc
sbb
xchg
int
push
jmp
inc
sti
and
movb
jnp
pop
dec
jmp
and
cmpsb
xchg
movsb
jnp
and
inc
and
push
jno
push
sub
sub
dec
pop
repnz
outsb
cmp
mov
pop
test
mov
in
xchg
jae
mov
out
jge
add
pop
xchg
int
scas
subl
and
mov
daa
and
mov
inc
icebp
pusha
movsl
push
sbb
cmp
popl
inc
arpl
pop
xorb
lcall
mov
jge
dec
fisubl
out
popf
pop
aaa
inc
cmp
mov
pop
in
in
fnstcw
xchg
mov
out
xchg
rcr
add
lods
out
sub
out
nop
in
adc
add
or
mov
cmpl
out
rcrb
std
mov
push
mov
shlb
push
pushf
mov
sbb
or
nop
inc
xor
shll
push
jo
stos
test
adc
mov
dec
iret
sub
xor
lds
into
sub
fdiv
je
push
aad
sbb
pop
addr16
adcl
stos
jno
insb
inc
adc
lods
jmp
cmp
pop
sub
daa
sar
push
mov
mov
cmp
sbb
fstps
push
cmc
cmp
stos
dec
sbb
fadd
jo
inc
push
pop
adcl
xchg
pop
lret
xlat
mov
insb
push
ret
insb
adc
aas
mov
or
and
fs
sbb
outsb
sub
xchg
xchg
pop
shll
je
cmp
int
pop
mov
ja
pop
fmul
jp
mov
dec
cltd
gs
mov
out
jp
fsub
sbb
add
js
sbb
xor
jne
sbb
add
push
decl
cltd
jmp
or
lea
lret
adc
sbb
jmp
inc
lcall
cmp
mov
lret
adc
mov
clc
shlb
sbb
loopne
lea
movb
pop
inc
jmp
fnstcw
mov
xor
dec
cwtl
adc
mov
in
scas
push
inc
dec
mov
fsubrl
mov
mov
push
xchg
pop
jbe
shlb
dec
fwait
fwait
test
aad
flds
test
loopne
pushl
cmp
fisttpl
iret
lret
or
fildl
mov
cmc
pop
xchg
mov
and
lods
inc
sarl
cwtl
call
push
sub
xchg
xchg
xchg
and
mov
dec
lret
or
mov
xchg
cmp
rcll
enter
iret
push
mov
rorl
jb
inc
push
or
push
dec
push
ret
gs
pop
cmp
mov
xchg
add
sbb
xor
xchg
call
sub
mov
nop
jnp
mov
pop
jb
or
add
stc
mov
popa
cmp
dec
inc
stos
sarl
mov
cmpb
push
adc
cmp
add
push
and
or
imulb
jmp
xchg
dec
sub
cmp
jp
add
xor
mov
out
jmp
sub
pop
sbb
popa
lods
push
repz
pop
lret
mov
lahf
or
je
bound
popa
repz
mov
loope
xor
push
push
mov
mov
or
add
pop
lock
cwtl
push
mov
sahf
and
push
sub
pop
js
imul
push
mov
in
push
pop
xor
mov
mov
sub
adc
js
mov
enter
pushf
xor
xchg
sub
sti
rcll
rorl
fistl
sahf
push
jmp
mov
push
jo
and
fmull
divb
das
fcomps
mov
aad
mov
test
dec
repnz
xor
mov
int3
cli
fbld
adc
xchg
xor
cltd
or
mov
lds
enter
or
push
jno
paddsw
dec
sarb
xchg
pushf
insb
pop
scas
ret
and
jecxz
ljmp
mov
enter
or
pop
inc
into
lock
int
gs
adc
pop
push
addr16
add
or
push
cmp
or
and
dec
ret
fdiv
push
inc
xchg
mov
imul
or
push
and
or
cmp
cmp
mov
lret
sahf
adcl
pop
ljmp
pop
cld
xchg
adc
into
sub
fidivs
lods
jle
xchg
cli
or
add
mov
push
mov
jecxz
add
cs
clc
dec
scas
jle
sub
mov
lcall
stc
pop
pop
leave
lcall
pop
out
loope
mov
adc
xor
and
pop
mov
jb
mov
mov
add
lods
add
std
je
cmp
xor
mov
call
cmp
pop
stos
out
inc
sti
mov
adc
shrl
movsb
out
xchg
or
mov
mov
xor
je
repz
cmp
or
xchg
fnstsw
mov
mov
or
popf
cmc
sti
and
sub
in
sub
or
jns
xor
push
xor
dec
mov
sub
std
gs
scas
call
cltd
orb
lods
loopne
mov
mov
xchg
mov
movsb
lret
cmp
pop
dec
pusha
fsts
sub
lods
scas
lods
into
stos
mov
cmp
popa
push
and
outsl
loop
fcmovne
sub
push
mov
jle
lea
in
popf
mov
loop
mov
sarl
pop
mov
jge
pop
add
cmovne
int
add
fdivs
addr16
mov
pop
jge
cmpsl
dec
imul
repnz
mov
movsl
shr
sub
shrb
cmpsb
xchg
les
add
out
adc
push
int3
cmp
mov
or
data16
adcb
jo
jmp
or
mov
cwtl
pop
pop
fistpl
test
lods
inc
push
ljmp
data16
sub
jb
xor
mov
push
push
dec
mov
repnz
xchg
add
cmpsb
cmp
dec
and
fsubrl
dec
les
adc
leave
xor
lret
mov
xchg
lahf
ljmp
cmp
out
movsl
ljmp
push
cli
fs
ljmp
pop
lods
dec
ror
outsl
mov
jnp
jg
dec
lret
je
jg
dec
out
xchg
imul
sub
popa
lds
cmc
iret
jecxz
shrl
rcll
lret
pop
jae
shrb
pop
mov
test
call
dec
push
jl
cs
test
repz
fdivs
and
jns
mov
popf
das
inc
inc
and
addb
sbb
mov
out
jno
hlt
pop
push
iret
insb
aas
aaa
mov
jle
movsl
mov
push
test
adcb
cmp
in
mov
push
xor
jl
pusha
mov
push
adc
das
in
enter
jno
fs
push
jne
mov
insl
mov
insb
jmp
lcall
cmpb
nop
jo
lret
hlt
pop
jne
sub
jge
ljmp
out
ret
cmp
inc
mov
cmp
add
and
cmc
cmp
idivw
in
pop
xor
add
adc
ss
das
cwtl
xchg
sbb
pusha
dec
cli
add
sub
or
dec
mov
mov
ficomps
scas
in
push
mov
out
xchg
ror
inc
sub
or
in
js
pusha
out
in
push
jg
sub
test
cld
stc
add
shrl
jg
lret
int
stos
mov
imul
scas
cltd
jl
std
loope
in
pop
test
mov
and
je
pop
sar
push
imul
adc
mov
pop
push
sub
cmc
into
mov
or
push
lods
adc
push
sbb
call
imulb
and
adc
sahf
lahf
pop
loopne
and
cmp
and
stos
fildl
aaa
in
pop
fwait
outsb
inc
call
mov
inc
ss
inc
or
lcall
aam
aam
xchg
push
adc
dec
pop
in
mov
pusha
dec
out
rolb
inc
repz
push
mov
mov
lret
jecxz
or
pop
cmp
fisttpll
js
in
shl
pop
lret
scas
or
sti
test
sbb
dec
mov
adc
les
imul
loope
repz
mov
jp
jns
test
les
push
out
fisubrl
push
or
push
jbe
les
popa
jne
shll
ss
cmp
pop
aad
les
in
cmp
push
sbb
mov
lods
adc
fcoml
arpl
icebp
insl
sub
popa
inc
adc
sbb
scas
jge
jae
in
fcmovne
leave
out
out
roll
cmp
js
xor
repnz
mov
fcmovu
aad
mov
nop
add
mov
and
pop
and
mov
repz
mov
cmpsl
mov
pop
jle
icebp
fiadds
cs
mov
test
adc
les
xor
cmp
loop
push
rolb
shll
cmp
add
xchg
call
ja
popa
mov
hlt
or
cwtl
push
sub
inc
scas
and
aam
fldcw
fcmovne
rcrb
add
stc
jnp
xor
cmpsl
int3
push
insl
lret
pushl
or
pop
add
mov
dec
xchg
pop
aaa
sbb
pop
mov
popf
xchg
xor
mov
inc
add
add
aas
pop
mov
es
sahf
dec
or
mov
and
repnz
sub
into
and
outsl
roll
dec
movsb
out
mov
sarl
aas
mov
jge
jp
std
push
repnz
inc
rolb
pop
lret
test
mov
loopne
lret
in
or
mov
dec
insb
inc
add
fisubrs
sbb
popf
in
out
mov
repnz
mov
cli
clc
adc
loop
sbb
cmc
aad
call
and
mov
fwait
pushw
cwtl
adc
popa
test
das
gs
xchg
pop
cmpsl
into
rcrl
pop
shrl
je
sub
mov
movb
lds
xlat
xor
stc
lcall
popf
nop
cmp
adc
or
add
jnp
xor
mov
fildll
dec
ds
ja
inc
sub
dec
popw
xchg
and
sub
cltd
xor
in
and
add
dec
test
cwtl
into
sub
in
scas
leave
push
fbstp
pop
sarb
jg
lahf
and
mov
inc
imul
adc
mov
stos
stos
jne
lcall
imul
xor
dec
jge
sub
fdivl
inc
test
or
aam
ret
fs
lret
sub
xor
popf
xchg
imul
jae
push
push
xchg
or
mov
mov
mov
mov
jb
adc
fidivs
inc
or
dec
xchg
daa
ja
movsl
add
mov
test
scas
and
fsubrp
int3
xor
or
fldcw
xchg
ret
outsb
mov
mov
lret
iret
pop
pop
data16
jbe
adc
pusha
int3
sub
lret
stc
jnp
pop
cmp
les
adc
xchg
cmc
or
or
adc
test
jo
loopne
das
outsl
decb
repz
mov
or
push
es
xor
mov
inc
repnz
jne
stos
sbb
js
sti
inc
stos
mov
fsub
xchg
xor
mov
lods
shl
cmp
mov
dec
adc
scas
xor
enter
fucomip
xchg
cltd
hlt
push
push
mov
pop
xchg
adc
sub
xchg
mov
les
push
sbb
sbb
mov
data16
gs
xor
push
push
cmp
mov
dec
jne
xor
and
stos
leave
jb
je
sbb
test
out
pusha
cmp
sbb
cmp
nop
dec
jne
xchg
int
xorb
test
fsubl
jo
sbb
add
lods
cltd
icebp
push
jns
dec
out
scas
mov
in
pop
sbb
fnsave
dec
bnd
lods
pop
mov
xor
xlat
xor
xor
cs
icebp
xor
mov
pop
andl
inc
xor
or
fldl
aaa
jecxz
sarl
js
cmpsl
mov
mov
sbb
scas
mov
inc
jl
test
pop
push
cmp
lds
lods
and
aaa
xacquire
jle
push
push
je
and
shl
ja
jns
mov
loopne
mov
ficomps
pop
xchg
push
mov
cmpsb
push
xchg
adc
cmp
mov
xor
xsaves
hlt
inc
xlat
pop
inc
shl
mov
cld
daa
sub
repz
mov
fwait
xor
lods
rcrb
jmp
pop
or
xchg
and
inc
fisttpl
inc
pop
repz
insb
push
pop
or
mov
add
pop
jnp
insl
xor
xlat
inc
push
xor
push
cmp
sub
shll
ss
cld
and
out
add
jl
mov
push
stos
push
sbb
icebp
inc
loop
fldenv
fcoms
pop
jmp
pop
sub
in
fisttpll
inc
mov
lret
push
inc
dec
fistpll
inc
dec
mov
xor
and
test
xlat
mov
in
in
subl
iret
aam
fs
jne
xchg
push
div
mov
in
shrb
fisttpll
adc
pop
cmp
dec
imul
sbb
mov
and
dec
mov
cmp
cmpsb
mov
xchg
stos
std
out
fdivrl
cmp
sbb
mov
pop
gs
xchg
jae
call
shlb
jp
nop
lea
push
ja
movsb
fidivrl
mov
es
push
pop
cli
xor
lds
pop
shll
add
jns
mov
aaa
pop
dec
xor
sbb
jmp
lds
imul
pusha
fcoms
popf
jecxz
lcall
call
cli
es
mov
mov
cmp
cs
sub
and
fstl
xor
mov
inc
inc
mov
cmc
add
push
insl
repz
jl
mov
mov
mov
sub
insl
add
pop
pop
push
out
cmc
divb
shl
pop
push
push
mov
enter
das
pushl
mov
cmp
out
sub
xlat
mov
sbb
clc
aam
ror
in
xchg
and
bound
pop
xchg
int3
out
pop
icebp
orb
xor
arpl
lcall
mov
mov
adcb
shrl
shrl
movsb
xchg
mov
cltd
pop
or
lock
aas
inc
inc
jecxz
or
scas
lods
pusha
dec
shlb
mov
lea
ds
movsl
pop
sbb
xchg
lahf
idivl
dec
dec
mov
popf
adc
fadds
sbb
or
mov
xor
xchg
dec
nop
cli
bound
shrb
mov
sub
adc
test
sub
out
adc
cmpsb
es
sahf
cltd
int3
out
or
jns
inc
repnz
or
fs
shrl
or
outsl
std
outsb
pop
adc
icebp
add
sbbb
loop
popa
outsb
insb
aaa
das
fs
and
mov
push
repnz
repnz
insl
je
jecxz
jg
arpl
mov
cmpb
std
mov
add
dec
mov
repnz
pop
lods
sbb
lret
mov
add
push
and
or
mov
cmp
loope
orb
add
repz
cmp
das
xlat
ss
cs
imul
and
jae
sub
xchg
xchg
icebp
xchg
xor
cltd
pusha
aas
xor
sbb
enterw
pop
lods
fimuls
cmc
cmpsb
test
rorl
cs
jnp
hlt
pop
pop
int3
pop
lret
mov
lea
adc
dec
in
sti
sub
stos
repz
arpl
in
movhps
dec
jbe
ret
in
sbb
or
push
stos
bound
stos
xchg
mov
mov
xor
push
insb
xchg
push
fcoml
pusha
jb
push
pop
sbb
and
sub
popf
in
sbb
and
stc
push
stos
or
sbbb
rclb
insb
jmp
es
pop
rclb
xor
cmc
outsb
and
test
clc
mov
cli
pop
mov
repz
adc
inc
xchg
sub
int
and
mov
jne
or
xor
sti
shl
jle
add
adc
lock
insl
cltd
pop
pop
adc
cmc
loopne
pop
movsl
sub
ret
xor
adc
add
cmpsb
out
dec
adcl
mov
outsl
gs
pushf
bound
inc
add
add
mov
testb
xchg
adc
aaa
mov
pushf
cmp
pop
test
loopne
dec
orb
shrl
ret
pop
mov
and
je
lds
pop
pop
pop
or
cli
ja
mov
mov
jmp
icebp
adc
inc
sub
pop
orb
scas
lret
fcomi
push
cltd
mov
movsl
adcl
jecxz
push
sub
adc
test
cmp
fldcw
jne
xchg
mov
pop
outsl
add
xlat
xlat
lods
jbe
add
loope
fiadds
ret
mov
mov
or
mov
dec
or
loopne
sub
bnd
scas
sub
loop
cld
mov
cmc
dec
dec
push
in
nop
and
cmp
call
mov
push
cs
xchg
sbb
dec
ljmp
mov
arpl
cmp
std
xchg
xchg
xchg
xchg
adc
xor
cmc
fsubr
sbb
fnstsw
push
arpl
inc
scas
test
data16
jp
cmpsl
sarb
in
andb
jno
out
stos
pop
jbe
cltd
andl
add
dec
cmp
in
sbbl
pop
xor
inc
lods
pop
or
push
jbe
pop
pop
cmp
jl
clc
fisttpll
add
add
cmp
cs
jge
pusha
sbb
outsl
sub
sbb
lock
push
sub
xor
and
aad
jae
adc
movsb
sahf
inc
imul
es
mov
push
rolb
pop
or
and
xchg
out
dec
adc
fs
push
dec
dec
mov
jb
shlb
fcmovne
ja
jae
adc
or
arpl
lock
lcall
stos
out
cs
inc
add
sub
lret
or
sbb
mov
xlat
jne
fstl
adc
mov
fsub
lcall
popf
xlat
mov
push
xchg
mov
repz
aaa
pop
cmpsb
sub
movsb
mov
int
mov
sbb
adc
lds
push
stos
pop
cmpsl
imul
dec
add
push
pop
mov
ljmp
push
insb
mov
into
or
mov
sbb
lea
cmpsl
push
cli
into
hlt
mov
mov
jle
and
mov
notl
fmull
sub
inc
dec
pop
sbbl
fsubr
cmpsl
dec
test
lock
inc
inc
cmpsl
shl
je
rcrl
xor
fistps
mov
mov
movsl
cmp
inc
xchg
sub
or
xchg
push
pop
sbb
sbb
pop
dec
inc
xor
mov
push
addr16
jl
pop
ljmp
jge
xchg
mov
rolb
pop
in
inc
leave
add
or
ljmp
adcb
shl
fucomi
hlt
shrb
fstps
ret
andb
dec
pushf
enter
test
sarl
pop
adc
daa
into
in
pop
and
scas
lock
dec
aam
sarl
idiv
pop
lahf
or
ffreep
or
es
sti
inc
leave
pop
cli
xchg
sarl
sub
push
rol
mov
shll
dec
addl
add
adc
xchg
lret
testl
or
xor
adc
imul
cmpl
aaa
data16
xor
fsts
testl
das
lods
mov
sbb
push
lods
mov
loop
gs
jg
xchg
push
fcom
das
cmp
pop
jb
incb
cmp
loop
out
add
push
adc
ds
sub
cmp
or
js
ror
mov
sub
add
pop
cltd
nop
dec
orl
xchg
call
xor
js
shll
adc
int3
jg
push
lea
push
stos
insb
mov
je
mov
mov
inc
std
aam
pop
cld
xor
mov
in
pop
aam
jno
add
mov
dec
mov
add
gs
fldenv
xchg
pop
xchg
mov
mov
std
insb
loopne
adc
dec
rcr
jl
pop
out
push
stos
push
dec
mov
lahf
subb
and
mov
out
bound
pop
jp
pop
sti
jo
jno
push
dec
or
cmovl
and
sbb
jbe
repnz
daa
aam
ss
jnp
cmpsb
aad
lods
pop
mov
mov
add
int3
and
sbb
fimull
cmpsl
repnz
in
rcrb
sti
push
fnstcw
lret
es
cmp
pop
in
into
mov
dec
add
push
sub
jp
cmp
xor
rcrl
inc
jne
imul
repz
jmp
popa
xchg
testl
jmp
dec
cmpsb
mov
test
mov
mov
dec
xchg
jg
dec
rorl
jo
ret
adc
ret
push
lods
dec
push
and
nop
xchg
mov
gs
iret
mov
fmull
sub
es
xchg
push
mov
xchg
lret
or
cmp
stos
adc
jle
and
mov
push
je
lcall
inc
pop
dec
roll
sbb
loop
push
test
xor
mov
jp
sbb
push
lahf
adc
jg
fs
sub
fldl
inc
es
inc
jo
xchg
fists
or
in
arpl
popf
dec
pop
enter
setp
xor
mov
test
sbb
cld
xor
mov
dec
out
pusha
sarb
and
in
pop
scas
lods
into
addr16
dec
enter
mov
cmpsw
sub
insb
mov
pop
jb
cmc
sub
and
add
cli
adc
sub
sbb
sub
mov
push
es
nop
int
jl
out
push
enter
subb
cmp
dec
sbb
pop
gs
mov
cs
scas
popa
fimull
or
addb
sbb
xchg
and
or
mov
add
jnp
test
push
inc
aas
dec
sub
or
aas
xor
sbb
jge
sahf
add
push
dec
xchg
mov
mov
incb
ja
mov
cmpsl
out
loopne
shrl
inc
lds
jg
sub
xor
mov
push
pop
gs
std
sub
xchg
fisubs
scas
mov
xor
ds
add
sbb
xor
sbbb
imul
frstor
push
jo
inc
pop
test
or
sub
sub
cltd
imul
xor
sarb
cwtl
sahf
push
or
dec
dec
or
sbb
xor
xchg
push
jmp
je
shrb
xor
sbb
inc
jg
fcmove
inc
mov
xchg
out
test
insb
pop
sbb
dec
inc
cs
push
mov
lock
jbe
sbb
orb
enter
xchg
in
lret
xlat
frstor
jle
xchg
out
gs
loopne
pop
out
jg
dec
inc
mov
imul
popa
push
push
arpl
addb
iret
add
inc
imul
imul
pop
into
andb
cltd
inc
loop
pop
mov
adc
aas
pop
daa
shlb
xchg
jle
xor
cmp
adc
or
push
in
icebp
rorb
insl
loope
xchg
in
mov
shlb
and
push
dec
andb
mov
inc
cmpsl
fwait
xchg
rep
mov
sub
push
xchg
cmp
fwait
adc
dec
movzwl
dec
or
add
fstpl
pop
sub
test
aam
xchg
sahf
or
mov
jg
adc
ss
addr16
push
xor
inc
xchg
dec
outsb
or
mov
lcall
dec
mov
in
push
ds
mov
mov
dec
jmp
aas
mov
mov
mov
mov
fdivs
or
lds
movsl
repnz
cli
push
jno
out
xchg
jbe
inc
mov
xor
jae
xor
inc
jnp
fiadds
add
les
in
loope
sbb
push
mov
and
cmpsb
sub
ret
pop
lahf
jp
mov
cmp
and
fsubrs
jne
test
cmp
mov
inc
dec
out
enter
push
popf
loopne
test
cmp
lcall
xchg
test
dec
test
fs
lahf
rol
or
sub
fcmove
pop
dec
xchg
enter
pop
movsl
lods
xor
shrb
out
and
xchg
pop
xchg
and
aam
cmp
and
ljmp
roll
and
cmpsb
cltd
mov
mov
jne
push
imul
or
inc
jmp
cmpsl
into
popa
mov
adc
loope
jae
jmp
repz
cmpsb
cmpsl
cmp
stc
inc
mov
cwtl
mov
ss
and
pop
cwtl
shll
jno
jo
pop
out
sbb
call
inc
sub
outsb
in
fs
xchg
pop
ret
xchg
pop
shlb
mulb
cmp
fs
dec
lret
cmp
icebp
dec
xchg
sub
sbb
out
or
mov
add
pop
and
sti
sub
iret
lret
ja
fildll
fmuls
out
nop
test
mov
xor
aaa
ret
mov
fsts
cmp
xor
xorb
add
addr16
xor
and
inc
out
push
dec
push
mov
testb
aam
lods
dec
jae
sbb
cmp
add
gs
lea
sbb
fcmovb
push
aas
pop
pop
cmp
stc
xor
mov
rcll
mov
jae
inc
mov
outsb
into
cmp
mull
push
add
or
sbb
int3
dec
out
jb
jnp
mov
mov
cmp
shr
lock
ss
cmp
out
rclb
add
lods
push
psubd
jno
lcall
or
mov
push
inc
adc
pop
pushf
mov
cmpsb
outsl
dec
mov
mov
mov
dec
inc
and
sub
jno
or
jge
bound
mov
js
xchg
int
movsl
push
xor
fisubl
ljmp
pop
jge
ret
jg
pop
sarl
push
sbb
mov
mov
xchg
dec
xchg
shrb
or
aaa
mov
fisubrs
fisubrl
mov
adc
cmc
pop
and
je
rcr
std
dec
loope
adc
mov
mov
aad
push
pop
xchg
loope
add
loop
int3
call
cli
pop
jmp
push
xchg
inc
mov
mov
int
and
fsubp
repnz
cli
jo
jbe
xor
jbe
xchg
mov
scas
sbb
xor
out
leave
pushf
pop
jle
mov
test
xchg
xchg
dec
js
fiaddl
mov
mov
add
mov
das
call
pop
out
call
in
imul
cltd
icebp
and
sbb
push
ss
sbb
mov
out
adc
imul
imull
adc
daa
xor
dec
dec
lods
mov
out
sub
shll
xor
out
add
loopne
and
mov
push
and
xlat
pop
mov
mov
sbb
fdivl
sahf
lea
out
lret
and
sbb
mov
int
sti
add
dec
xor
jmp
shl
and
push
and
rcll
hlt
mov
pop
shrl
xor
mov
pop
ds
adc
sbb
pop
jmp
adc
xchg
xchg
xor
pop
mov
mov
mov
test
addl
mov
inc
andl
mov
jb
pop
add
add
enter
mov
shlb
fsts
jp
cmpsb
fldcw
pop
cwtl
into
fidivrs
rclb
jl
mov
int3
cltd
les
fmuls
rcrb
sub
xchg
jmp
and
push
push
sub
pop
into
xchg
movsb
fstp
dec
push
das
or
sahf
lret
popf
icebp
xchg
xchg
data16
push
dec
mov
scas
or
pop
out
and
mov
ficompl
xchg
fwait
inc
lods
mov
addr16
je
dec
lods
js
arpl
sbb
imul
cmp
pop
cmpsl
sbb
pop
dec
jns
inc
pusha
jne
setno
sub
inc
mov
jbe
and
cltd
fdivrl
psubusw
cmp
cmpb
mov
jmp
int
ds
add
ljmp
jg
push
pop
stos
cmp
lcall
mul
mov
movsb
js
push
xor
and
movsb
or
sbb
push
push
mov
or
faddl
fsts
lret
stos
jp
sbb
fldenv
es
outsb
adc
shll
imul
pop
jg,pn
mov
and
in
lock
in
inc
cmc
jmp
adc
insb
repnz
movsl
dec
imul
fimuls
inc
ljmp
movsl
hlt
ret
imulb
pop
xchg
imul
add
ljmp
cmpb
adc
dec
imul
ds
xor
pushf
pop
push
daa
fwait
sbb
jge
dec
mov
icebp
adc
loopne
call
xchg
adcb
mov
jge
repz
sarl
pop
mov
lret
and
enter
iret
int3
add
push
mov
jb
mov
stos
jg
rclb
outsl
je
nop
dec
test
and
push
add
jle
sbb
ret
decb
mov
jp
repnz
test
jmp
xor
dec
cs
stc
out
out
cwtl
lret
lock
stos
frstor
xchg
xor
out
mov
push
popa
mov
movsb
inc
jno
inc
dec
mov
int
dec
mov
int3
shlb
es
pop
ss
push
data16
sbb
adc
lods
and
lret
push
inc
or
jnp
xchg
lcall
imul
pop
fildll
and
dec
mov
gs
jp
hlt
cld
je
inc
fldt
push
imul
out
add
add
xor
xor
jno
push
cmp
cwtl
sub
jge
push
insl
roll
lods
mov
jl
in
mov
cmp
js
fcoms
adc
mov
jl
ret
scas
mov
cltd
aam
sub
inc
xchg
push
adc
cwtl
mov
or
out
jg
push
jmp
sbb
lcall
shll
and
push
fwait
aaa
shll
jmp
rcll
adc
push
pop
fwait
and
fneni(8087
pop
lods
cs
pop
outsl
fisubrs
iret
js
imul
mov
pop
ret
mov
push
push
mov
movsb
xor
pusha
mov
rclb
leave
jle
jno
push
loopne
adc
cmp
adc
js
stos
mov
or
mov
popf
movsb
test
jbe
dec
cmc
mov
pop
leave
xchg
into
mov
xor
push
and
inc
dec
aad
es
push
cmc
cmpsb
inc
or
jae
in
cmpsl
enter
adc
rol
data16
fisttpl
das
mov
pop
mov
mov
xchg
jae,pt
movsl
in
jg
xlat
popf
adc
hlt
popa
popf
jb
in
ljmp
cmp
ss
orl
cmpsb
or
shr
pop
xor
mov
or
in
mov
sub
sbb
push
push
or
bound
cs
es
fldt
ret
jecxz
and
xchg
xor
push
ja
es
cs
shll
sbb
das
sub
cmp
xor
pop
roll
cmp
pop
out
lds
adc
pop
and
sbb
int
adc
mov
and
pop
mov
cmc
mov
pop
dec
jnp
push
jb
jne
push
adc
mov
ljmp
sub
pushl
inc
dec
xor
es
popf
pop
into
xor
lret
jne
mov
jno
loop,pn
stos
stos
sub
cwtl
jo
clc
dec
test
ja
frndint
pop
xlat
wrmsr
arpl
movsb
xor
subl
aas
sub
cli
lock
sub
xchg
sbbb
mov
lcall
cmp
add
add
dec
pop
and
xor
push
test
sub
jg
nop
xchg
lds
outsl
sbb
xchg
xchg
stos
mov
imulb
sbb
xchg
outsl
add
adc
aaa
sarl
fiadds
ljmp
push
test
push
jmp
push
mov
cmpsb
sbb
gs
leave
dec
imul
ja
and
repz
call
rol
sbb
pushl
xchg
mov
pushf
fadds
icebp
sbb
inc
test
xchg
jmp
and
lahf
jecxz
shl
xchg
pusha
adc
shlb
pop
add
dec
xchg
movsl
mov
cltd
repz
xor
fadd
test
and
inc
mov
and
outsb
mov
sbb
rorl
xor
out
sbbb
xchg
popl
dec
dec
in
dec
popa
adc
bound
pop
adc
or
insw
iret
rorl
mov
mov
scas
nop
dec
xor
outsb
sahf
pop
je
xor
lcall
mov
jne
mov
loopne
add
push
test
stos
cs
gs
xchg
mov
mov
sahf
xor
test
pushf
adc
fdiv
sarl
lret
dec
or
adc
cmp
sbb
iret
std
cmc
fs
decl
mov
xlat
mov
and
int3
sti
jmp
jns
sti
xlat
mov
inc
scas
mov
push
xchg
xor
insl
in
pop
repz
loopne
lods
ja
cltd
sub
fildl
cmc
jo
bound
aam
std
pushf
cltd
dec
out
push
xor
scas
push
or
fs
jle
mov
mov
mov
pop
loopne
movl
ljmp
add
adc
mov
popf
cmc
sub
mov
xor
test
or
lock
cs
fucom
mov
or
mov
in
and
ret
add
pop
add
xchg
gs
cmpsb
popf
jno
dec
popf
xlat
and
xor
addr16
neg
inc
push
ss
sub
rclb
es
inc
xchg
or
xchg
in
cltd
dec
outsl
cli
lcall
sahf
pop
jge
cmpl
sbb
jb
subl
ret
xchg
in
and
outsb
test
stos
sub
dec
add
dec
sub
dec
xchg
cwtl
pop
popa
gs
insb
dec
xor
cmpsb
and
rorb
outsb
fwait
mov
inc
stos
xchg
xchg
sahf
mov
andb
int
jae
aaa
mov
ja
xor
dec
imul
cmc
fwait
jns
test
xchg
xchg
ljmp
cmp
mov
fwait
mov
adc
inc
scas
push
xor
imul
mov
ja
sbb
and
xor
cmpps
mull
cld
mov
out
adc
popa
add
in
out
pusha
cs
cwtl
inc
lock
fidivl
sahf
cmpsb
xlat
lcall
fidivrl
mov
inc
cli
out
int3
sub
in
out
cmp
xchg
cmc
lret
das
hlt
dec
cmpsb
push
adc
jecxz
push
lock
mov
ds
lods
js
pop
inc
sub
xchg
add
add
je
sbb
mov
lret
mov
pop
ret
and
mov
ja
in
xor
lods
test
flds
lock
sub
scas
jg
pop
push
push
fnstsw
cmp
sub
xchg
dec
pop
stc
mov
movb
xor
fdivs
pushf
fs
cmp
shll
pop
mov
and
xor
inc
aam
jb
cwtl
std
daa
shl
jns
std
jmp
lret
cld
cmpsb
jle
cmpsl
fwait
fcoml
xchg
aas
stc
pushl
sahf
pop
xchg
cmp
sub
push
rcll
je
imul
fiadds
add
mov
push
stc
sarb
pop
cld
cwtl
mov
rorl
add
cltd
fldenv
aad
fsts
data16
push
dec
insl
dec
push
cwtl
sub
add
sti
add
add
or
adc
hlt
cli
test
jne
push
enter
adc
sbb
or
jnp
and
call
lods
inc
test
rorb
xlat
jnp
in
mov
push
fs
jb
pop
or
jne
aam
xchg
xchg
lahf
adc
xchg
out
ret
mov
mov
cmp
notl
outsl
add
cltd
icebp
leave
xor
mov
xchg
push
ret
add
insb
mov
jb
test
mov
sbb
cmc
into
nop
xchg
bound
jg
jo
cwtl
sub
mov
shrb
jne
addr16
or
jns
outsb
mov
cmpsb
jnp
in
je
push
lahf
sti
lret
ret
mov
ret
and
adc
das
mov
adc
ss
cs
mov
or
dec
dec
ss
sbb
mov
xchg
test
imul
mov
adc
xor
movsl
call
loope
jno
gs
mov
scas
jle
rcrb
lcall
lods
sahf
and
add
jne
test
inc
dec
inc
outsl
rcll
daa
add
push
pop
jne
xchg
mov
leave
iret
popa
xor
xchg
pop
xchg
hlt
inc
aam
pop
leave
pop
xchg
sar
cmp
pop
adc
sbb
fldt
and
cmpsb
inc
sub
sub
mov
jge
loop
pop
jecxz
ret
add
xchg
cwtl
scas
std
imul
pusha
dec
bound
not
shlb
xchg
popf
xor
jg
dec
jp
imul
fwait
cld
xor
mov
pop
fildll
and
lods
dec
cltd
or
loope
lods
andb
aam
mov
fldcw
pop
pushf
out
int
gs
pop
mov
jae
popa
mov
arpl
movsl
xchg
or
push
mov
sub
inc
xchg
mov
push
cmp
cmpsb
js
testb
cli
out
and
shlb
mov
mov
ja
lods
cmp
xchg
add
adc
xchg
pop
sti
test
pop
fnstenv
cwtl
mov
mov
xor
ret
mov
jno
mov
pop
mov
popf
mov
push
adc
into
std
mov
out
mov
dec
mov
mov
jp
sub
mov
or
cmp
mov
popf
jmp
jb
out
mov
or
xor
lahf
add
sub
push
cmpb
lcall
jo
push
cmpsb
ss
roll
les
mov
daa
pop
jp
aad
dec
daa
jp
stos
aaa
and
in
int
or
jbe
stos
adc
push
and
mov
jne
inc
lea
outsb
sub
jno
in
xor
cmpsb
shl
push
xor
inc
cmp
adc
into
out
and
movsb
sahf
xor
cmpsl
std
sahf
add
cmpsl
jmp
sahf
ret
sub
stos
adc
adc
call
cs
ret
ss
sub
out
mov
push
adc
into
hlt
mov
sbb
lds
roll
aaa
or
jnp
addr16
mov
mov
sub
push
mov
imul
adc
outsl
lahf
or
fisubs
stc
aam
push
into
rcll
xchg
pop
mov
shrb
sahf
mov
jl
test
mov
jbe
inc
or
push
jg
adc
test
and
jge
and
cmc
bound
xor
out
inc
xchg
in
cmc
cmpsb
or
add
inc
into
adc
xor
or
in
int3
xlat
mov
and
cli
jno
cmp
jbe
inc
int3
adc
adc
fdivs
mov
add
out
push
lahf
je
test
adc
push
lahf
loope
arpl
add
aad
or
sub
jp
push
cmpb
push
test
std
sti
dec
jbe
ljmp
pop
sbb
fwait
xchg
mov
call
orl
fists
mov
bound
rorb
pop
jg
fistl
dec
into
jns
movsb
fs
stos
mov
pushf
cmp
xchg
inc
les
or
adc
js
sbb
dec
adc
mov
and
push
cltd
fcoms
pop
out
daa
pop
jnp
sbb
inc
testl
mov
jno
and
sub
notb
push
dec
mov
dec
enter
cmpsl
or
or
xchg
mov
rcl
clc
fcmovbe
adc
gs
imul
push
ss
xor
pop
mov
pop
sub
pop
nop
mov
stc
cltd
sbb
fldl
inc
mov
sub
mov
add
pop
in
bound
out
jmp
bound
out
xchg
push
stc
sbb
stos
in
insl
les
cs
xchg
cmp
out
cmpl
xchg
sbb
inc
sbb
cli
or
rcrb
lods
repnz
fisubs
hlt
lods
mov
lret
xor
popa
xor
inc
insl
ficomps
or
sub
fnstsw
in
and
push
pop
inc
out
mov
nop
xor
xchg
pop
cld
dec
mov
sbb
dec
lods
sarb
mov
stos
mov
scas
cmc
data16
mov
jp
or
sbb
jb
mov
adc
push
rcr
xor
mov
lea
dec
sbb
dec
and
jns
add
loopne
insb
fldcw
repz
pop
mov
jns
outsl
into
hlt
jge
mov
popa
xchg
popf
xchg
pop
jns
scas
rcrb
adc
dec
xchg
adc
dec
adc
or
and
dec
adcl
das
lea
xor
and
loopne
cwtl
cmp
jecxz
mov
mov
repz
imul
and
add
cmc
ret
inc
xchg
enter
lds
fnstsw
subb
add
sub
and
dec
out
sbb
sbb
lahf
imul
sub
adc
data16
xlat
cltd
xor
xor
cmp
sbb
loopne
lcall
lret
mov
adc
pop
shrb
xor
xchg
push
movsb
pop
and
and
fs
std
fcomip
adc
mov
add
cmp
jl
push
shl
repnz
je
cs
pop
ret
mov
pop
and
xor
lret
mov
and
xchg
adc
scas
sbb
push
cli
xor
jo
push
repz
lahf
and
push
insl
fiaddl
cli
out
pop
icebp
push
dec
xor
ret
push
or
xor
add
sbb
rcll
cwtl
sti
xchg
push
push
test
repz
int3
mov
mov
in
daa
imul
or
pop
or
mov
movhps
data16
xor
cmp
jl
test
mov
lds
inc
data16
push
adc
xlat
adc
adc
mov
addr16
cs
in
in
or
or
out
stos
jns
dec
repz
add
in
mov
mov
or
mov
jp
lods
sub
pop
pusha
pusha
outsl
cs
mov
sub
gs
jne
and
push
cld
sub
aam
mov
out
fwait
add
cmp
mov
push
fnsave
fcmovne
cmp
or
out
lret
dec
sub
fs
cmp
cmp
push
fldl
sub
cmp
lods
inc
mov
not
mov
sarl
adc
sti
popa
ss
ja
fwait
ss
popf
xchg
repnz
mov
aad
inc
cli
movb
mov
outsl
outsb
inc
sti
movsl
shr
push
imul
loopne
jle
inc
dec
push
shrl
inc
mov
lcall
push
lcall
mov
fs
or
data16
popf
aam
push
xchg
fdivrl
adc
sbb
dec
xor
xor
inc
push
push
mov
pop
push
mov
cmp
xchg
cmc
sbb
imul
ljmp
fldcw
jnp
repz
iret
in
sbb
inc
jae
popa
mov
ret
pop
add
push
rcll
mov
rcll
das
mov
inc
imul
mov
cmp
pop
rcl
das
push
mov
xchg
cmc
lret
jp
shrb
ja
sbb
lret
pop
xlat
in
mov
mov
xchg
and
pop
repnz
cmp
das
or
xor
rclb
icebp
adc
xchg
mov
xor
inc
mov
fadd
int
rclb
add
ljmp
xchg
push
jbe
lds
push
std
faddp
ret
sub
sub
push
mov
imul
add
loop
xchg
nop
and
ljmp
arpl
or
call
jae
mov
or
scas
roll
push
xor
ret
daa
mov
mov
xchg
lods
cwtl
jle
jb
jp
pop
clc
rclb
ficoml
aam
pushw
adc
pop
sbb
add
mov
repnz
stos
xchg
fistl
mov
sub
mov
nop
leave
cmp
out
cmp
lock
mov
lret
fsubrl
sbb
sub
and
mov
mov
xor
inc
dec
mov
pushf
pop
xchg
push
ficompl
das
pop
test
xchg
xchg
cltd
repz
lea
es
lret
leave
mov
lods
sub
and
dec
hlt
jae
sbb
dec
cmpsl
pop
jle
dec
stos
pop
mov
xchg
and
or
mov
js
lods
movsl
out
jl
jp
mov
cltd
or
push
dec
in
mov
pop
inc
fimuls
push
mov
sbb
pop
jg
inc
es
jmp
lds
out
cmpsb
pop
push
xchg
mov
lcall
mov
jmp
add
jne
jmp
mov
stos
test
addb
sahf
outsl
add
xor
dec
jp
push
xchg
loop
xchg
mov
mov
imul
xor
lock
fcompl
icebp
add
xchg
ds
or
in
clc
pop
add
out
jne
cmpsb
dec
jno
or
out
in
inc
les
push
dec
lret
pop
pop
icebp
lcall
loop
mov
cwtl
call
add
ja
mov
xchg
clc
pushf
jle
jl
call
lods
inc
adc
sub
repz
cmp
sbb
mov
lods
dec
aam
push
or
push
jge
and
cmp
imul
xor
test
xchg
cmp
or
aas
jb
push
jno
sub
and
cs
ljmpw
mov
sub
mov
mov
adc
ret
mov
scas
and
mov
and
out
jb
cld
daa
int
xchg
jno
inc
leave
cmp
add
jp
aam
xchg
xchg
addr16
add
test
in
sub
pop
ret
loopne
sbb
mov
mov
mov
dec
pcmpgtb
repz
decb
dec
add
roll
mov
and
shlb
or
mov
push
decb
rcrb
mov
xchg
sbb
sbb
es
cmp
xor
adc
fs
daa
and
imul
cmc
or
es
push
out
scas
mov
dec
jecxz
xor
or
pop
lahf
repnz
jnp
jle
jl
ljmp
sub
fnstcw
imul
fimull
mov
and
and
insl
pop
pop
xchg
dec
add
xchg
mov
mov
in
jmp
pop
or
xchg
cmp
and
cmp
dec
lods
lds
inc
inc
mov
inc
sbb
fldenv
xchg
push
scas
or
sub
jecxz
cmp
loopne
or
subl
cli
pop
push
xchg
movsb
mov
fdivrl
fdivl
cli
ss
dec
mov
cwtl
push
cmpsb
xlat
jne
jmp
movb
aaa
stos
jnp
cwtl
push
arpl
fs
push
cmp
out
dec
aas
push
pop
inc
ja
jg
mov
mov
insl
jmp
stos
sub
cld
in
das
xchg
push
and
mov
icebp
inc
mov
pusha
or
test
mov
sub
pop
bound
pusha
cld
movsl
xor
push
or
vpacksswb
xlat
lcall
add
push
stos
pop
inc
push
test
add
scas
std
movsb
aaa
adc
xchg
arpl
sti
jle
add
pop
mov
sub
lret
push
fdivrl
insb
mov
repnz
xor
mov
cmc
xorb
jns
pop
loope
rorb
and
pushf
outsl
in
push
std
pop
ljmp
test
fimuls
cmp
add
cmp
mov
add
icebp
cs
xor
inc
hlt
test
cmp
lods
neg
cmp
cwtl
xchg
notl
pop
and
inc
pop
out
ljmp
cli
xor
pop
fstpl
fmul
mov
shrb
loop
insl
cmp
pop
cwtl
add
aad
mov
shll
adc
sub
mov
sbb
clc
adc
cld
sub
pop
sti
ret
sub
cli
clc
sahf
pop
dec
cld
aaa
sti
stc
inc
xchg
mov
cwtl
xchg
lret
xchg
jb
aaa
jle
fidivl
lret
fsubr
cli
je
pop
jmp
adc
dec
rorl
rorb
or
iret
add
cmpsb
sub
inc
in
jb
mov
sbb
movl
enter
out
sbb
pop
cmp
xchg
cmp
inc
mov
dec
push
sub
push
sahf
push
inc
pop
sub
adc
jmp
lret
sbb
sarb
inc
stos
xor
inc
pop
push
push
inc
mov
sbbl
sub
inc
imul
push
jns
push
sub
fsts
in
mov
out
scas
xor
push
adc
and
cmp
lods
repnz
jl
sub
fcmovne
dec
cld
loope
test
jne
inc
sub
dec
push
mov
lcall
test
pop
int
jb
pop
shrl
adc
bound
lods
push
pusha
jmp
shrl
ja
in
or
aad
mov
add
test
adc
jns,pn
push
or
and
call
pop
aad
push
mov
cmp
mov
inc
add
jmp
adc
andb
jmp
ret
cmpsb
scas
lahf
cmp
scas
add
adc
int
jno
xor
pop
xchg
mov
push
in
cmp
adc
lea
xor
mov
loope
mov
add
notb
sub
fbstp
sub
cmpsb
imull
jo
jo
sbb
adc
adc
jnp
pop
dec
and
pop
notl
pop
xchg
push
dec
and
loope
xchg
xchg
cli
andl
push
add
stc
shufps
xor
clc
mov
and
in
dec
lds
ficomps
jmp
sbb
insb
xchg
adc
jp
push
mov
bound
or
mov
jmp
jns
fcompl
cmp
xchg
xor
lahf
mov
jmp
jnp
cmp
mov
xchg
push
pop
dec
addr16
pop
dec
mov
pushf
dec
aaa
stc
push
add
jnp
iret
xchg
push
lret
into
js
xor
or
mov
addb
push
fcoms
mov
sub
fistpll
pop
pushf
sbb
js
test
dec
jp
arpl
xchg
lcall
add
inc
iret
insl
adc
and
pop
aaa
in
dec
ror
mov
or
add
pop
cmp
loopne
scas
cmp
data16
dec
lcall
je
pop
imulb
inc
jne
mov
in
movsl
daa
mov
push
sub
cld
xchg
adc
cs
mov
cmp
xchg
jg
sbb
xchg
pop
les
xchg
je
cltd
pop
sbb
enter
inc
in
pop
cmpsl
or
scas
mov
ljmp
push
cmpsl
sub
aas
add
dec
fisubrl
xor
and
dec
dec
lahf
loop
test
es
into
mov
jbe
out
adc
jl
stc
and
pop
xor
mov
or
loopne
es
dec
mov
arpl
xor
call
stos
shll
arpl
add
lahf
popa
mov
xor
ret
nop
pop
std
pop
addr16
mov
xor
add
sub
mov
add
aaa
mov
jbe
mov
and
sbb
xor
into
icebp
mov
xor
mov
in
shl
inc
lret
mov
inc
test
pop
movsl
add
push
movsl
and
sub
and
clc
adc
sub
andl
push
mov
inc
dec
push
jns
lods
jnp
mov
insb
xor
addr16
out
push
push
xchg
add
outsb
xchg
insl
insb
mov
xchg
jne
ljmp
jmp
mov
aad
test
add
test
rorb
fcompl
jecxz
icebp
jno
cmp
inc
daa
sub
js
jecxz
insl
mov
leave
andl
and
lcall
sub
and
sub
int
mov
and
xchg
inc
add
insl
mov
jo
jns
pop
dec
add
add
fimuls
stos
arpl
leave
cli
pushf
lds
aad
std
stos
decl
push
mov
pushf
mov
insl
xchg
inc
dec
mov
or
xchg
es
outsb
cmpl
lcall
push
inc
adcl
js
push
pusha
rcrl
lods
popa
rcr
and
fiadds
push
addr16
or
cmp
inc
loopne
sbb
aam
and
and
pop
fdivr
into
inc
lock
pop
adc
hlt
jb
fs
jns
ret
out
and
dec
fstl
pop
out
cltd
ret
mov
or
xor
push
push
movsl
or
shlb
or
je
data16
roll
cmc
loopne
pop
push
rep
inc
pop
cmpsb
adc
xor
popa
sarl
icebp
xchg
repz
std
loope
cmp
cmp
fldenv
daa
stos
lods
jle
and
adc
imul
jmp
mov
fcmovne
push
pop
fdivrp
jmp
movsl
xor
and
mov
lock
add
scas
or
rcrb
mov
std
stos
pop
incb
ds
cmp
nop
loope
outsb
gs
lock
out
xchg
adc
out
or
aaa
int
and
out
addr16
mov
mov
sub
xor
dec
arpl
inc
outsl
mov
sub
loopne
in
push
add
dec
movsl
cmp
loop
add
jmp
mov
dec
movsb
xor
dec
jnp
push
pop
aad
rcrl
xor
lret
mov
inc
rorl
outsb
bound
imul
cmc
xchg
stos
mov
mov
iret
or
jp
and
sbb
mov
daa
inc
sub
push
pop
jb
sub
sub
movsl
mov
popa
fstpt
adc
inc
mov
imul
add
fbstp
ds
xchg
in
pusha
popa
or
push
add
repz
and
xor
cwtl
sbb
dec
dec
and
pusha
cli
mov
movsl
push
add
roll
mov
shl
cmp
add
dec
je
xchg
sub
cmp
pop
insl
inc
pop
fwait
dec
insl
add
divb
fcoml
iret
mov
dec
andl
rclb
inc
mov
into
bound
xchg
test
loop
fsub
dec
sub
fnstsw
or
xor
push
dec
repz
dec
jnp
iret
std
xchg
pushl
xor
add
stos
stos
xorb
pushf
pop
test
jle
mov
push
push
rorb
jge
mov
or
popa
divl
pusha
jne
mov
xor
iret
push
and
cmp
inc
and
pop
cli
pop
xchg
mov
jecxz
jl
sbbl
pop
push
aaa
lea
sbb
mov
push
lods
idivl
cmp
addl
psubw
sbb
mov
dec
xchg
jl
enter
hlt
lock
pop
flds
pop
ficoms
dec
mov
dec
cltd
mov
movsb
repz
insb
push
mov
mov
arpl
cwtl
mov
mov
mov
sbb
mov
fmull
mov
sub
arpl
cmp
or
into
loopne
dec
dec
xlat
in
inc
popa
out
ret
or
inc
adc
js
sbb
idivl
loopnew
dec
cmc
data16
jnp
and
jge
ss
sbb
xor
xor
movsb
adc
jg
sub
xor
dec
repnz
sbb
sub
gs
les
nop
lock
mov
ret
xchg
stc
dec
std
and
test
je
ret
adc
shll
adc
adc
popf
push
pusha
mov
scas
sub
mov
addr16
mov
scas
adc
mov
ljmp
pop
mov
scas
clc
inc
test
cmpl
stc
sub
add
pop
cmc
aad
jae
dec
cmp
sub
int3
orl
out
pusha
negb
or
jecxz
xor
lcall
xchg
push
mov
clc
jb
xor
xlat
mov
dec
les
jno
out
bound
cmp
sub
inc
mov
rcll
incb
jmp
xchg
push
nop
lods
add
add
dec
mov
mov
and
push
ja
cmp
aaa
add
les
lds
mov
outsl
ss
mov
mov
movsl
lods
jg
adc
in
mov
gs
mov
push
push
and
jmp
cmp
inc
jg
inc
fcompl
aas
lcall
cltd
jbe
fmulp
push
xchg
nop
cmovl
and
inc
fs
mov
rorb
cli
insl
sub
add
inc
mov
jns
pop
cmp
les
cmpsb
cmp
inc
xchg
stos
stos
lcall
pop
fsubl
aad
lods
xchg
inc
mov
lahf
jbe
rorl
push
mov
ljmp
das
in
jmp
pusha
mov
ja
pop
xchg
in
popf
mov
ror
cwtl
nop
outsl
fwait
push
or
mov
icebp
dec
cmpsb
xor
jae
imul
xchg
xchg
daa
imul
cmp
xchg
or
jnp
imul
jg
xchg
adc
sahf
sbbl
repnz
jecxz
xor
std
xchg
out
adc
dec
pop
and
sub
clc
call
loope
xlat
mov
into
cmpsl
adc
test
sahf
jmp
sbb
xor
inc
sahf
xchg
jnp
add
out
pop
stos
test
cmpl
lret
sub
inc
sar
hlt
in
nop
sub
push
mov
incb
jae
in
mov
daa
inc
loop
mov
xchg
cmp
clc
test
xchg
push
cmp
lret
test
leave
test
push
jmp
movsl
add
and
neg
orl
jg
xor
sete
add
arpl
lcall
rorb
or
dec
dec
cwtl
mov
shr
xor
getsec
cmpsl
pop
cwtl
xor
add
aas
add
adc
cwtl
hlt
cld
jmp
or
outsb
xlat
inc
daa
inc
pusha
cli
shrl
sahf
repnz
push
out
push
test
das
insl
leave
mov
rclb
mov
jb
and
std
outsb
xchg
negb
ja
cmp
mov
loopne
push
xor
cmp
mov
scas
cmpsl
dec
xlat
cli
jge
inc
pop
mov
jnp
xchg
aad
jno
cld
das
sti
pushf
sub
cs
and
pop
xor
js
sbb
pop
sbb
outsb
inc
cltd
icebp
cmpsl
inc
add
cmpsb
xlat
jle
sbb
out
stos
cmp
mov
or
fmuls
test
xchg
xor
icebp
sarl
aaa
sbb
or
aaa
mov
mov
jl
fistpl
jns
loop
or
pop
roll
and
aam
inc
jg
out
rorb
mov
sub
push
out
imul
rolb
not
xchg
or
lret
movsl
dec
dec
into
in
xchg
pop
cmpsl
ret
dec
and
lds
pop
sti
pop
icebp
jns
popf
dec
shll
mov
fidivs
cld
jb
int
mov
cmp
cltd
inc
stos
or
call
rol
insb
sub
std
push
adc
cmpsb
lahf
addb
sub
outsl
pop
scas
jle
sti
fisttpl
lods
stos
mov
lds
mov
insl
aam
pop
fsubl
pusha
bound
and
mov
jmp
lds
fcompl
push
jle
lds
mov
jp
test
push
mov
scas
mov
leave
or
fsubs
jmp
incb
inc
xchg
or
push
sbb
test
loopne
xor
fnsave
add
xor
adc
leave
mov
mov
outsl
int
add
pop
popa
stos
iret
call
push
xchg
push
daa
sub
bound
mov
inc
add
in
pop
jb,pt
push
int
outsl
cmpsb
add
repz
adc
sub
pop
aam
sub
nop
pop
jns
setae
xchg
in
out
hlt
add
jae
sbb
mov
push
sub
data16
into
push
test
cmp
push
aas
lea
jp
xchg
cmp
data16
xchg
in
add
add
cmc
jb
imul
insl
cmp
iret
shl
or
xchg
mov
lods
mov
std
in
icebp
int3
jne
hlt
add
pop
xor
jle
lcall
gs
xor
dec
ljmp
fsub
addr16
inc
dec
cmp
ret
sbb
xchg
push
std
cltd
push
xor
dec
enter
sub
pop
adc
arpl
shl
fisttps
imul
sub
mov
lods
cmc
fwait
ss
push
inc
and
push
sub
push
push
cmpl
shlb
sbb
fdivl
mov
jne
arpl
pop
test
and
out
mov
mov
dec
nop
sbb
insl
inc
pop
ja
pop
addr16
push
mov
nop
repz
lcall
mov
sti
pop
gs
jle
sahf
xor
mov
jns,pn
ds
pop
mov
xchg
push
push
dec
mov
test
int3
xchg
lods
dec
sub
fsts
outsl
sub
fsts
jg
xchg
or
xchg
icebp
insl
xlat
and
outsl
xor
nop
data16
sub
test
cltd
xor
inc
scas
je
dec
mov
push
sbb
or
dec
push
ss
stos
gs
pop
lret
sub
mov
pop
push
leave
jo
pop
ja
les
sbb
mov
test
add
addr16
sarb
sub
pop
add
add
cmpb
and
fistpll
mov
movsb
mov
shll
pop
adc
and
into
or
mov
popf
jp
adc
lret
stc
ds
lahf
cwtl
bound
or
mov
push
lods
mov
push
lcall
or
jb
pop
aaa
cld
xchg
mov
lret
popf
lds
lds
and
lock
lds
pop
cmp
cmp
in
call
xor
test
outsb
jne
rorb
cmp
cmp
int
cmp
mov
cmc
shlb
ss
and
lea
jbe
loopne
and
inc
testl
cli
adc
mov
xchg
pusha
mov
arpl
sbbl
in
dec
mov
or
xchg
ss
jg
mov
jmp
sbb
xchg
shll
pop
popf
adc
dec
enter
add
inc
sub
shr
stos
push
ds
mov
jg
xor
je
xor
stos
adc
cli
clc
inc
iret
mov
test
sub
and
xchg
popa
adc
cwtl
pop
pop
sub
pop
xchg
lahf
and
dec
pop
lahf
ret
cmpsb
adc
rorb
cli
dec
ret
sub
sub
jae
cld
jp
cmp
push
jle
lock
cmp
in
fsubr
movsl
inc
inc
scas
aad
mov
lock
mov
stos
insb
aam
cmpsb
sbb
loope
ret
neg
cli
aaa
dec
cmp
adc
inc
cwtl
pop
push
xorl
xor
pop
mov
pop
sbb
sbb
lahf
sbb
into
lods
test
sbbb
outsb
sbb
int3
inc
stc
jecxz
popa
mov
cmp
pop
xor
and
xor
fnstcw
and
jb
ds
cmc
mov
mov
or
fsts
add
cs
jl
jno
mov
xor
mov
call
ljmp
xor
dec
mov
sub
mov
aaa
adc
mov
repnz
add
rcll
jne
test
cltd
cmp
bound
xchg
lret
add
leave
lea
mov
dec
mov
pop
lea
lods
lds
lock
add
push
std
dec
jbe
pop
das
sbb
jo
jns
test
mov
pusha
cltd
out
or
fidivrl
js
jle
call
fcmovbe
imul
jmp
lods
repz
out
and
mov
dec
ficoml
shll
jl
ret
imul
pop
jbe
xor
adc
fnstcw
cltd
sbb
adc
or
popa
in
cmp
repnz
mov
aam
xchg
fstl
pop
leave
aas
repz
leave
mov
in
cmp
jmp
addr16
add
xchg
jg
xchg
loope
sahf
mov
scas
shll
roll
xor
mov
and
xchg
in
lret
unpcklps
repnz
fsubr
dec
fwait
test
push
lock
repz
jae
pop
adc
in
cmp
push
xor
push
dec
cmp
and
cmp
stos
addb
mov
notl
ljmp
cmp
pushf
out
fidivl
jmp
push
xchg
pop
xchg
dec
movsb
and
mov
gs
push
and
into
pushf
das
add
mov
out
testb
inc
in
push
add
push
jne
pop
jo
fucomip
push
jge
mov
ds
cmpl
push
pusha
pop
nop
xchg
cmp
pop
jge
xor
lret
int
test
push
imul
jmp
sahf
in
push
adc
or
rcr
mov
push
lock
push
sub
notl
in
sbb
xor
fmull
subl
icebp
xor
mov
les
dec
sti
mov
xlat
fdivrl
cmp
stos
movsb
jb
popf
lds
pop
lods
adc
push
std
lret
push
xchg
xchg
xchg
push
add
inc
jns
xchg
cwtl
inc
dec
aaa
or
inc
fcoml
in
jmp
addr16
xor
dec
add
push
jg
es
adc
mov
rolb
rcll
push
adc
iret
ret
scas
test
test
pop
ljmp
pop
mov
push
pop
push
lods
test
jle
lahf
xor
mov
cwtl
pop
and
and
pop
jge
pusha
inc
xchg
lret
lea
pop
sbb
xor
push
mov
cwtl
push
out
sti
inc
gs
lcall
fwait
addr16
cmp
loopne
fwait
in
in
mov
rorl
scas
dec
pop
leave
push
ret
push
cwtl
lods
fucomp
mov
push
add
mov
xchg
or
repnz
cli
fdivl
cs
push
cmp
out
ljmp
bound
mov
repz
mov
jo
sbb
sub
jge
loopne
test
jg
test
add
repz
xor
iret
jl
sub
pop
mov
jb
dec
jecxz
hlt
jecxz
mov
insb
test
xor
movsb
or
xchg
push
mov
lcall
sub
jno
push
roll
sub
loopne
repnz
loope
mov
mov
xchg
mov
scas
jge
aaa
ret
into
repz
ds
jl
and
inc
repz
in
jne
adc
addr16
pop
cmp
pop
jne
fcoms
in
pop
push
sahf
mov
hlt
ror
push
test
cmpsl
and
adc
clc
pop
sub
or
pop
adc
out
xor
std
mov
sbb
lds
scas
lcall
or
clc
pop
into
xchg
add
stc
pusha
adc
incb
add
push
lods
pop
into
and
xor
clts
mov
sbb
shll
je,pn
push
scas
pop
int
test
loope
or
inc
jns
cmp
mov
xchg
aad
xchg
adc
mov
inc
dec
pop
mov
inc
xor
ret
pop
bound
incb
loope
push
dec
icebp
add
ljmp
loop
sub
mov
pop
adc
inc
or
mov
les
inc
ficompl
jle
xlat
mov
xchg
fsub
xorb
and
aas
mov
cltd
popf
ds
sahf
jnp
add
jg
repnz
lods
insb
pop
pop
sbb
out
xor
je
mov
mov
xchg
std
shll
xchg
xor
xor
in
cld
stos
ljmp
sbb
dec
and
insl
das
insb
ficompl
mov
lods
dec
test
xor
insl
mov
sbb
inc
cs
xchg
jp
ljmp
jno
bound
movsb
lahf
repnz
pop
push
sub
jae
xlat
dec
sbb
mov
mov
cmp
cmp
adc
push
mov
cmpsl
adc
aad
popf
shlb
add
push
js
mov
cmp
das
xor
int
gs
mov
roll
lcall
test
repz
lock
and
mov
mov
jl
pop
imul
aas
push
das
cmc
push
mov
pusha
int3
sbb
and
scas
in
push
push
mov
sti
movsb
dec
popf
and
jmp
mov
mov
mov
mov
cmc
sbb
test
loop
jle
lret
insb
xchg
daa
js
sbb
pushf
mov
cli
jnp
mov
les
mov
test
dec
pop
jae
fiadds
cwtl
cwtl
inc
dec
pop
or
test
sub
xchg
push
test
loope
outsl
jmp
inc
std
xlat
sbb
sub
bnd
mov
mov
fstps
and
int3
aad
mov
int
xchg
sub
adc
pop
neg
xchg
mov
jg
insl
inc
scas
lock
outsl
insb
jp
lock
outsb
fs
std
mov
inc
xchg
into
inc
outsb
pop
mov
cmp
es
xchg
leave
push
test
in
adc
xchg
pop
data16
mov
fcoms
adc
dec
ss
push
stos
stos
pop
push
mov
js
test
call
lds
mov
jb
fiadds
push
or
mov
mov
test
clc
push
shlb
lcall
mov
and
xor
mov
xchg
jno
ffreep
ds
nop
nop
pop
pop
fcoml
sbb
scas
sub
jb
ret
pushf
xchg
icebp
cmp
ficoml
mov
jg
enter
jnp
loopne
push
dec
dec
xchg
jmp
mov
adc
cmp
jbe
rcll
out
daa
xchg
pop
repnz
in
test
jg
andl
dec
inc
fs
adc
sub
fwait
sub
enter
xchg
out
stos
es
inc
mov
and
cld
sub
jo
ds
imul
iret
addr16
pop
push
add
test
lret
shlb
outsb
out
leave
inc
jno
mov
in
sub
mov
mov
dec
pop
pusha
ja
and
std
pop
jae
inc
pop
fidivl
in
mov
iret
cwtl
dec
mov
jnp
jbe
adc
js
or
dec
xor
xchg
mov
mov
and
dec
test
popa
addr16
popf
scas
and
je
jae
lahf
mov
push
adc
cmp
test
je
mov
movsl
mov
xor
mov
add
sbb
dec
xchg
jge
mov
xchg
sub
sub
and
xor
xchg
xchg
sub
add
pusha
mov
jecxz
xor
mov
andl
mov
or
push
bound
jl
lret
pop
mov
mov
mov
fst
cli
lcall
jge
xchg
mov
cmp
adcl
pop
iret
stos
mov
je
mov
cwtl
inc
add
mov
mov
lods
xlat
sub
sub
arpl
cltd
shrb
add
push
pop
cmp
inc
mov
mov
inc
jnp
push
repnz
mov
fisubrs
inc
mov
pop
xchg
stc
push
add
rcrb
mov
jle
jle
mov
xchg
inc
push
adc
xor
push
mov
or
aaa
pusha
adc
mov
or
jp
pop
ss
in
xlat
dec
adc
mov
push
movsb
insl
lahf
mov
mov
cs
push
mov
xor
mov
mov
bound
adc
call
push
inc
cmp
xchg
xchg
xor
push
fsubrs
cli
lock
testb
mov
sbb
xor
int
clc
lcall
dec
addr16
sub
mov
add
jae
mov
push
inc
ficoms
mov
cmp
pushf
cmpsb
rclb
or
lcall
out
push
je
fisttpl
fisubl
xchg
and
test
fsubl
and
stos
or
test
add
stc
das
mov
int3
push
lea
shlb
nop
pop
jecxz
and
leave
jb
cld
mov
aad
dec
les
pop
ja
in
push
add
mov
mov
std
and
jp
dec
repz
lcall
rcrl
fnsave
arpl
cmp
cs
sbb
mov
add
popa
cmp
sub
cmpsb
sub
dec
ja
pop
repz
sbb
andb
hlt
and
add
arpl
dec
inc
push
pop
sar
fidivl
sbb
inc
push
push
mov
push
dec
pusha
or
stc
leave
jno
lods
push
push
fwait
or
gs
fwait
sbb
inc
popa
outsb
sub
inc
add
test
xchg
out
jge
add
lds
call
adc
push
jns
call
loop
xchg
dec
orb
fwait
idivl
push
gs
push
xchg
sbb
mov
jmp
lods
daa
ror
pop
repnz
xor
pop
dec
scas
mov
sub
cmp
fisubrs
mov
ja
jns
aas
push
cltd
inc
call
rorb
cmp
xchg
bound
sbb
cmp
daa
fld
xor
and
fs
mov
push
inc
add
dec
mov
push
repz
mov
pop
push
leave
loopne
pop
jle
test
inc
cmp
sbb
cmp
inc
out
mov
cwtl
fwait
jg
mov
xor
ret
jp
faddl
xchg
or
test
pop
cltd
popa
repz
mov
sbb
repz
or
daa
in
stos
cli
sbb
mov
add
fstp
mov
push
dec
adc
xchg
insl
ffreep
shr
pop
jge
aaa
fisttpll
pop
and
or
push
mov
cmp
popa
push
or
jns
in
push
push
cmp
hlt
or
lock
xchg
fisttpll
loope
rorl
pushf
stc
fdivl
sbb
xchg
aam
js
adc
hlt
pop
es
enter
lock
dec
stos
ds
test
adc
pop
mov
rcll
sti
mov
hlt
lds
jp
push
xor
cmp
and
push
adc
icebp
dec
mov
sbb
notb
ja
push
xchg
ret
push
dec
lahf
daa
sbb
xlat
int3
mov
xchg
iret
cmp
addr16
mov
sar
loop
inc
ret
mov
iret
icebp
mov
lea
hlt
push
ret
jbe
xor
popa
vsqrtsd
sub
xor
cmp
push
rcll
jmp
jmp
leave
ja
xchg
mov
xlat
arpl
cmpsb
mov
les
loope
xor
dec
sbb
and
stos
and
sub
xchg
pusha
fcoml
jl
adc
call
pushf
and
adc
xor
iret
shr
add
pop
cld
rcl
ljmp
mov
push
dec
aaa
hlt
cmpsl
xchg
jmp
sbb
mov
mov
and
xor
incl
jae
ss
jo
sbb
or
sub
mov
jns
out
daa
jp
cmp
adc
hlt
pop
xchg
bnd
xor
xor
pop
out
repnz
inc
loopne
xor
loope
cwtl
pop
shrl
out
lods
xchg
fldz
scas
addr16
enter
ret
cltd
or
aas
aam
aad
push
out
xchg
mov
mov
mov
iret
scas
jp
inc
inc
xchg
mov
enter
adc
jl
mov
fdivs
mov
aam
scas
pushf
cli
fidivrl
jae
out
shll
pusha
push
fs
setle
cmp
loop
cmp
frstor
add
int
outsl
fidivrl
pop
push
push
mov
or
bound
add
aam
iret
or
stos
inc
lcall
mov
int
pop
out
loop
add
into
dec
lods
mov
push
pop
test
pop
fldl
gs
dec
pop
clc
mov
mov
push
cs
lods
inc
push
mov
xor
pop
je
adcb
inc
jmp
sahf
cltd
fsubs
lock
inc
ror
test
and
push
dec
clc
adcl
imul
xor
xchg
jns
in
lret
shlb
orl
pop
das
rclb
push
loope
and
mov
scas
mov
dec
fnstsw
sub
push
aam
mov
mov
imul
mov
or
mov
ds
mov
jns
ficomps
inc
fisubrl
popf
out
int3
into
movsb
insl
fmull
sti
stos
shlb
aas
push
scas
repz
xadd
jle
jbe
test
popf
aad
repz
popf
mov
dec
repz
in
or
mov
repz
cld
loopne
inc
jnp
mov
mov
pop
icebp
out
and
sub
jb
ds
std
pop
push
or
stc
xchg
dec
sahf
fdivl
mov
test
dec
mov
xchg
sub
pop
dec
fbstp
nop
sbb
pop
hlt
jl
mov
jo
loop
adc
lds
mov
push
dec
aaa
xlat
fucomi
mov
mov
mov
xchg
xlat
cmp
jbe
push
xor
lds
push
adc
inc
xor
push
loope
out
add
adc
ja
sahf
fucom
inc
sub
lret
dec
fisubrl
jge
push
leave
scas
loopne
je
stc
add
push
iret
push
dec
lret
mov
adc
jb
add
jp
sub
cmp
xchg
cli
jne
stos
mov
es
and
adc
sahf
into
sub
int
jecxz
xchg
rcll
inc
push
pop
pop
addr16
orl
out
cmp
addl
jge
dec
int
std
jns
push
and
jo
xchg
rclb
addb
daa
dec
sbb
mov
sub
xchg
rol
push
clc
stos
out
xchg
popa
xor
mov
xchg
xchg
xor
sbb
add
sbb
ret
fnstcw
jg
adc
sub
jo
fists
xor
sub
add
std
cli
aam
int
and
pop
popa
xor
pusha
push
aad
add
cmp
pop
inc
xorb
aam
mov
stos
jg
mov
sub
dec
test
cmp
dec
rcrb
inc
push
mov
ljmp
fs
insl
pop
push
cmp
scas
or
mov
cli
out
stc
mov
shlb
dec
in
mov
xor
fdivrs
sub
mov
test
das
sbbb
test
mov
or
pop
mull
fisubs
rcll
push
add
xchg
push
stc
xor
or
xor
mov
inc
icebp
sbb
xor
sub
mov
cli
mov
rolb
adc
dec
mov
rorl
add
dec
out
push
insl
mov
jl
bound
rolb
shll
or
xchg
mov
cmp
mov
inc
jl
ficompl
sbb
in
add
popf
mov
push
jbe
je
dec
pop
fisttps
stos
mov
mov
int
les
or
pop
jg
pop
shrl
adc
hlt
xchg
mov
mov
fldt
bound
scas
mov
sti
sub
xchg
lret
test
xor
andl
and
xchg
mov
cltd
fcoms
stc
insl
or
lock
jecxz
push
bound
fsts
add
xchg
push
adc
add
shrd
in
js
sub
fldenv
mov
in
fcmovbe
mov
out
adc
sti
rcl
aam
stos
pop
addr16
sbb
into
repz
mov
mov
gs
or
fs
cli
rcrb
shr
sti
test
outsl
or
cmp
xor
add
push
das
mov
je
subl
mov
aaa
mov
mov
push
rclb
sbb
aad
stc
xchg
jns
and
fimuls
push
push
and
pusha
mov
cwtl
jl
dec
push
dec
out
dec
rcrb
add
lret
nop
cmp
jo
push
push
leave
shll
jge
push
mov
cmp
testb
mov
jnp
cmp
roll
sti
loope
insb
ja
daa
out
sahf
sub
test
jg
cmp
cltd
push
lret
push
cmp
cmc
aas
push
cwtl
lds
insb
insl
lock
cmpsl
jnp
jle
push
pop
push
scas
jae
sub
cltd
inc
cmp
test
into
or
push
mov
sbb
mov
loopne
pushf
mov
insl
mov
repz
sarb
sbb
jb
fldl
mov
mov
out
and
pop
inc
adc
mov
add
into
pop
push
mov
add
cli
lret
sub
gs
mov
fcoml
int
push
and
lods
fisubs
repnz
ja
fcmovne
aaa
xchg
movsb
jb
mov
aam
jg
push
cmp
or
cli
int3
out
repz
pop
lret
or
jmp
fwait
imul
test
ja
lret
test
mov
cmp
addr16
clc
jne
data16
mov
outsl
mov
iret
loope
or
ficompl
cltd
addr16
in
dec
rcll
adc
push
outsl
cld
cs
dec
cmc
es
pushf
fs
daa
mov
pop
data16
and
pop
popa
pop
call
push
dec
fsubp
or
xlat
icebp
jae
inc
mov
sub
cmpsb
rcr
cmc
jno
jnp
lods
inc
hlt
jnp
push
les
inc
sbb
pop
das
xchg
rorl
sbb
jbe
mov
pushl
sub
push
aad
sbb
aam
xchg
pop
lods
lcall
lods
add
sbb
addr16
outsl
and
cld
push
push
lret
movsb
adc
mov
subl
jecxz
push
scas
cmpb
fs
pop
pop
in
lret
cmpsl
pop
out
stc
xchg
inc
dec
cwtl
lret
daa
jg
cwtl
dec
jne
lock
xchg
pop
movsl
push
fwait
cli
mov
mov
pop
imul
cmp
add
cli
in
in
add
jecxz
push
nop
inc
fstpl
in
stos
xchg
cmp
sbb
adc
dec
pusha
cltd
and
fidivrl
cwtl
psllw
jp
xchg
dec
sti
or
outsb
nop
mov
les
stos
pop
pop
mov
inc
dec
add
cmp
ret
stos
push
xchg
xor
daa
inc
xor
stc
in
sbb
xor
lods
jns
dec
in
ret
adcb
dec
imul
cmp
out
inc
inc
outsb
dec
in
inc
sbb
mov
int
daa
mov
lods
mov
add
mov
push
sub
lods
lea
push
scas
sbb
xor
sub
jp
jp
incb
push
xor
mov
xchg
jb
cs
loope
inc
cmc
ret
ror
add
fcoml
lret
stc
lock
dec
pop
aam
fmul
rol
or
das
push
enter
add
cmpsb
sub
pop
rorb
imul
mov
ja
jp
lods
pop
mov
add
push
inc
and
mov
inc
mov
cld
outsb
sbb
pop
test
xor
add
clc
mov
inc
fimuls
xchg
shl
push
mov
rcr
add
clc
sub
cmp
gs
sbb
push
cld
dec
int
mov
lods
push
dec
sub
out
clc
xchg
cwtl
cltd
cmp
mov
arpl
push
out
jne
inc
dec
lret
mov
push
fcom
pop
pop
pop
fiadds
imul
repnz
fsubrs
xor
mov
orl
sbb
jo
shlb
out
sub
test
lods
sub
lock
ficoms
and
mov
jb
mov
in
xchg
ret
jo
enter
xor
inc
dec
pop
lahf
xchg
popf
enter
mov
mov
and
xlat
inc
fldenvs
sahf
mov
mov
cmp
gs
pop
jl
and
aam
in
sbb
and
and
jge
add
scas
fmull
cmpl
hlt
xchg
sbb
jl
add
push
pop
mov
js
mov
cwtl
repz
xchg
push
sbb
push
push
lock
div
loop
xchg
sarl
mov
push
dec
mov
fs
push
int
cmp
pmulhw
outsl
jmp
popl
loop
xor
pushf
stos
enter
cwtl
ret
jnp
jne
jb
jecxz
sarb
sbb
push
int
mov
or
sub
inc
daa
test
shlb
xchg
inc
mov
mov
ret
bound
pusha
jl
or
mov
lahf
lcall
loop
sti
push
in
orb
rcrb
sub
loopne
stc
and
int
cmp
out
add
sbb
cmp
sahf
aaa
mov
fdivs
push
jp
lock
cmpsb
imulb
inc
add
leave
pushf
sub
mov
roll
sbb
mov
mov
push
stos
jp
int3
loope
repz
xor
aad
int3
repnz
shlb
push
push
mov
jb
popa
mov
leave
jl
fists
xor
pop
adc
orl
or
fiadds
mov
sbb
sub
adc
mov
iret
repnz
xchg
repz
mov
pop
jmp
shll
jl
data16
shlb
int
xorl
sbb
cmp
jge
inc
and
rcrl
add
adc
rcrb
ficoml
mov
or
sbb
arpl
push
clc
insl
push
and
or
jne
repnz
call
pop
in
lea
adc
pop
jb
and
pop
frstor
aad
outsl
insl
cmp
dec
jae
sub
and
pop
push
adc
inc
mov
cmp
pop
jb
addr16
sbb
lcall
adc
or
aam
je
sbb
test
sti
dec
insb
cli
fcoms
add
inc
repz
pop
sarl
lods
inc
sbb
insb
pop
je
sbb
xlat
jbe
cltd
jp
syscall
xor
mov
fcmovnb
aam
ret
or
in
outsb
fadd
push
inc
test
cmp
mov
movsb
idivl
xor
sub
or
xor
sub
daa
xor
lock
inc
stos
jno
inc
jae
fs
lods
stos
lret
call
add
jno
cs
ffree
adc
jl
adc
mov
bound
aas
or
xor
mov
pop
mov
or
cmp
add
cmp
mov
mov
aad
fiadds
pop
adc
pop
xor
cld
push
js
push
mov
mov
movsl
sbb
out
cli
add
jae
push
mov
aad
and
fistpll
cs
shufps
or
dec
cmpsl
jo
adc
pop
dec
ljmp
out
ljmp
push
push
loop
hlt
in
in
aas
jb
outsl
lods
ljmp
adc
ljmp
int3
push
je
xchg
add
sub
mov
inc
clc
dec
xor
shrb
or
jp
in
cmp
pushf
dec
cmpsl
mov
mov
xlat
or
inc
mov
imul
shl
sbb
orl
and
jle
les
cwtl
iret
push
jnp
push
xlat
add
sub
jp
pop
xchg
sbb
cwtl
jp
psubq
imul
hlt
dec
mov
mov
pop
repnz
aas
jnp
cmp
lock
sbb
xchg
into
and
in
nop
je
dec
or
fwait
icebp
sub
call
fsubrl
ret
divl
dec
into
into
inc
push
hlt
adc
sbb
ficoms
adc
movsl
or
sbb
add
pop
xor
hlt
int3
mov
adc
icebp
shr
adc
popa
inc
add
jg
adc
add
xchg
out
push
insb
cmp
mov
mov
xor
fsubr
shl
in
pop
jbe
push
mov
mov
sti
add
dec
ficompl
cmp
insb
jnp
inc
lret
jmp
arpl
jbe
iret
popf
loopne
ljmp
add
xchg
sqrtps
or
dec
and
inc
and
fbld
stc
dec
push
enter
aaa
cmp
enter
fsubl
mov
xchg
lock
dec
lret
in
in
cld
mov
shll
ret
mov
mov
xchg
ficompl
data16
out
inc
jo
jp
mov
imul
mov
mov
daa
cld
imul
mov
cs
push
stos
fsub
xchg
add
mov
inc
out
push
push
xor
repz
pushf
je
je
sbb
loope
pop
subl
insb
push
sbb
adc
call
nop
add
xchg
mov
clc
sub
cmpsl
dec
into
out
lods
fs
aam
rolb
mov
inc
mov
pop
sub
test
push
outsb
adc
ljmp
out
imul
shrl
mov
xchg
xor
xchg
pop
jns
add
dec
xchg
xor
lods
inc
mov
repnz
insl
push
sarl
add
fucom
out
mov
mov
jl
icebp
scas
mov
cs
lods
adc
add
dec
dec
or
fisubs
mov
cltd
cmp
pop
adcb
std
scas
test
cmp
jmp
jo
cmp
aam
scas
cmpsb
lds
inc
dec
call
jae
cmc
sbb
pop
push
rolb
loope
mov
lds
loop
push
add
das
or
adc
add
sub
push
adc
adc
mov
sub
or
xor
ret
cmp
ror
inc
and
mov
bound
adc
scas
fimull
ds
jg
or
shlb
js
repz
hlt
into
push
cmpsl
jno
jmp
les
dec
sub
outsb
int3
mov
pop
mov
adc
out
dec
test
rcll
roll
iret
pop
pop
xor
mov
mov
rol
mov
cld
arpl
cmpl
adc
adcb
aaa
add
mov
ds
popa
adc
jmp
arpl
dec
xor
jmp
mov
cli
and
mov
add
jge
in
add
fstl
cmp
inc
cltd
stos
bound
adc
outsl
lock
lcall
nop
imul
nop
mov
dec
xchg
add
xchg
loope
insl
jmp
jge
mov
and
sarb
mov
pop
pushf
pop
loope
stos
dec
jnp
arpl
stc
ljmp
push
hlt
mov
xor
jnp
xor
pushf
jo
scas
cltd
pop
lahf
iret
xor
fucomp
inc
test
lock
das
cmc
in
cmp
mov
scas
pop
xchg
mov
stos
lock
dec
insl
jl
dec
jge
pop
xor
jbe
div
flds
adc
mov
mov
mov
lret
popf
add
xorl
mov
or
or
pop
ljmp
xchg
xor
dec
sbb
scas
push
push
dec
xchg
popf
xor
mov
repnz
push
dec
daa
insl
jge
add
fs
mov
push
add
xor
testb
fcmovne
stos
rcl
in
push
into
sub
dec
enter
sub
push
or
scas
aaa
enter
xchg
xchg
or
dec
sbb
add
xchg
setae
push
mov
in
cli
nop
mov
sti
sbb
add
lods
stc
jbe
cmp
sbb
jo
out
lahf
rorb
loope
imul
dec
or
add
mov
sbb
faddl
or
daa
dec
shlb
lea
inc
lods
popf
xchg
xor
mov
rorl
xor
call
jo
je
shrb
xor
arpl
jbe
nopl
xchg
mov
mov
cli
pop
cmp
mov
push
push
xor
mov
mov
or
outsl
sub
or
call
adc
cmp
xor
sbb
or
sub
pop
xchg
pop
dec
sbb
ret
aam
les
fisubrl
shll
xchg
add
cld
dec
jae
ficomps
mov
jb
das
sbb
fdivrl
jle
inc
adc
ret
or
xor
in
dec
hlt
loope
imul
jae
pop
lea
into
gs
pop
cmp
mov
jg
std
rcrb
mov
inc
ret
and
push
bound
mov
mov
cwtl
inc
adc
mov
loop
adc
lahf
inc
cmpsl
nop
sahf
inc
cltd
adc
sub
fstps
popf
test
mov
push
outsl
and
sub
out
add
push
adc
cmp
hlt
push
bnd
mov
ja
and
hlt
adcl
pushf
cltd
ljmp
push
in
lods
jo
push
mov
enter
andl
sbb
mov
cmpsb
adc
mov
lcall
shr
enter
inc
jo
int
xchg
cmp
ja
jae
add
popl
xor
dec
push
dec
ret
rolb
cltd
add
mov
jo
ficoml
cli
xor
mov
dec
mov
imulb
sbb
insb
dec
mov
add
push
pop
jne
push
sbb
orb
out
cmp
pop
mov
lcall
repz
shll
orl
fs
stos
cld
out
inc
dec
ds
jl
addb
paddusw
sbb
in
adc
jae
push
cld
rolb
inc
cmpsl
fldcw
jg
outsb
movsl
mov
loop
outsb
inc
imul
loope
outsb
jl
add
or
nop
sahf
push
iret
jl
roll
xlat
pushf
mov
dec
sub
xchg
jge
loope
repz
cmp
call
sbb
mov
add
xchg
rcll
adc
lds
sbb
shll
xor
cmp
sarb
js
jmp
fsubs
push
jns
sbb
in
and
xchg
pop
iret
pop
pop
sbb
in
enter
sbb
notb
sbb
mov
jno
fcomps
rolb
sbb
fwait
xor
add
into
or
aam
inc
push
sub
mov
and
outsb
scas
fwait
icebp
lcall
sbbl
cmpsb
outsl
jp
cmp
adc
xlat
adc
aam
jg
inc
cmp
and
in
and
loope
sbb
hlt
popf
movsl
xchg
and
cmpsl
xor
xor
sysenter
je
mov
sbb
scas
loopne
lock
test
es
push
mov
mov
leave
jno
rclb
pop
add
in
adc
test
imul
or
inc
sbb
sub
data16
pop
add
jae
xor
gs
dec
mov
cmpsl
out
push
mov
push
pop
das
adc
pop
fistl
push
mov
pop
popf
or
inc
mov
mov
xlat
test
push
movsb
mov
pop
lret
add
mov
fwait
push
sti
andl
loop
xorl
enter
std
xchg
shrl
xchg
call
lds
pop
cmp
jle
addb
cmp
sub
lahf
data16
lea
movsb
subl
dec
xchg
and
dec
int
out
push
sub
push
inc
repz
repnz
enter
adc
push
or
sub
mov
test
mov
and
cs
xor
pop
test
mov
clc
out
in
adcl
cmpsl
or
add
rorl
lret
pop
sbb
popa
imul
mov
shrb
xchg
xor
les
cli
and
insb
out
push
mov
ds
sub
scas
push
cmp
movsb
jp
faddl
gs
push
xlat
sbb
cmp
xchg
or
cmpl
mov
xlat
dec
xor
push
scas
cmp
or
pop
out
jne
dec
push
mov
jne
push
and
shrl
sub
push
bound
fwait
insl
push
push
hlt
jle
cmp
out
adc
jl
subb
ret
push
stos
inc
xchg
inc
cmpsb
test
sarb
pop
mov
pop
ret
mov
inc
imul
dec
in
movsb
lahf
nop
fistps
outsl
add
clc
mov
sti
pop
xchg
mov
dec
std
sub
sub
pop
push
push
adc
ror
scas
cmp
dec
testb
dec
sub
xor
mov
jecxz
or
movsb
out
popf
mov
ret
push
jmp
ljmp
cltd
incl
push
enter
iret
jns
flds
jp
sbb
mov
arpl
popl
divl
fbstp
xchg
rcr
push
xchg
cmp
sub
out
mov
xchg
ficoml
test
aaa
fists
jg
xor
aam
jns
lret
xor
orl
cmpsl
cmp
pop
sub
push
add
lds
test
aaa
int3
pop
cs
or
popf
and
sub
jno
xchg
xchg
loope
outsb
lcall
movsb
cli
scas
xor
cmpsl
sub
xor
aad
dec
int3
and
loope
shl
ret
mov
loop
dec
out
xor
subb
xchg
pop
xchg
fnsave
adcl
imul
lea
sahf
jle
sub
cmp
shrl
test
stos
cltd
and
sub
ds
iret
ror
cld
and
inc
std
pop
leave
add
push
jne
xchg
jnp
mov
fs
sahf
fbstp
push
and
push
mov
mov
ret
pop
xor
xchg
jle
lahf
stos
xor
loop
push
pop
scas
call
push
xor
mov
add
or
lods
push
adc
shr
into
push
push
out
mov
out
jns
iret
loopne
jp
scas
pop
sbb
pop
in
jne
rorl
lahf
inc
repz
outsb
fs
in
lcall
jle
push
mov
inc
mov
jle
cld
mov
or
jbe
mov
rcrb
and
inc
cld
loopne
sti
mov
inc
dec
pop
pop
stos
jp
fstpt
sub
sbb
les
fistpll
fbld
dec
sub
mov
gs
inc
sbb
sbb
imul
xor
mov
or
mov
scas
dec
or
out
fisubrs
das
adc
xchg
cmc
mov
xchg
pop
sbb
pop
in
int3
lea
pop
clc
das
cltd
and
sbb
push
mov
or
inc
ds
stc
and
mov
or
mov
or
ret
pop
sahf
cmovbe
dec
cmp
mov
and
adc
aas
push
adc
pop
rclb
mov
lods
xchg
mov
sbb
cs
push
lret
daa
out
bound
jle
push
mov
xchg
ja
sbb
jae
repnz
call
subb
adc
mov
cwtl
cmpb
getsec
lahf
mov
or
push
lahf
aad
dec
cltd
stc
jmp
push
adc
fwait
push
inc
dec
or
push
lea
xor
in
stos
aam
into
pusha
add
orl
inc
sbb
and
test
stos
cli
cmp
fldl
dec
imul
fadds
sbb
outsl
xchg
adc
xchg
int3
pop
scas
cmc
jl
ss
mov
sahf
addb
sbb
jg
and
repz
dec
rorl
sti
push
lock
in
fldcw
pop
xchg
or
pop
out
aaa
test
out
pop
xchg
test
or
subl
jno,pt
outsb
jne
leave
cmp
mov
test
movsl
int3
inc
clc
mov
inc
ss
dec
lret
movsl
adc
lods
push
push
pop
scas
hlt
rcll
mov
subb
inc
movsb
dec
lea
call
xor
and
mov
pushf
dec
mov
push
xorl
and
cmp
fsub
sahf
cmpsl
fwait
pop
mov
fcmovne
cmp
cmpsl
xlat
sar
movsb
std
test
andl
into
leave
shr
imul
jno
or
lahf
inc
jbe
adc
scas
imul
ret
mov
mov
cld
jl
aam
call
das
ret
cmp
and
jns
or
inc
lods
in
inc
and
mov
rclb
leave
and
jg
add
pop
rcrb
hlt
arpl
dec
flds
inc
repz
cmp
lods
mov
pop
ja
mov
push
cwtl
insb
mov
and
cld
lret
jb
xchg
sahf
adc
movb
mov
incb
xor
ljmp
movsl
xor
pop
push
inc
stos
les
inc
mov
pop
cmpb
xchg
sti
arpl
mov
les
nop
mov
mov
sarb
sar
sti
in
imul
xchg
jbe
lret
jo
ficompl
mov
pop
mov
cmp
mov
mov
pushf
iret
mov
pop
mov
aad
fwait
xchg
jb
movsb
pop
mov
dec
or
les
adc
jmp
fstpl
adc
mov
fnstsw
es
dec
aad
cmp
aas
mov
xchg
aad
aad
fnsave
adc
dec
inc
in
push
mov
jae
inc
aad
out
sub
daa
xor
and
dec
xor
and
and
insl
cmp
mov
and
pop
loop
and
dec
lahf
mov
push
seto
jl
mov
stos
pop
stos
not
jg
or
sbb
imul
jb
orb
adc
lods
pop
ss
pusha
mov
jmp
adc
sub
stos
or
pop
adc
sbb
sbb
push
jmp
aam
push
jns
lahf
jnp
fstp
inc
clc
pop
inc
push
fimull
into
mov
shrb
push
cmpsl
pop
in
lahf
jg
ret
repz
cmpb
adc
dec
xchg
jge
shrb
sbb
or
lds
or
rcrl
xchg
mov
add
inc
or
inc
faddl
repz
push
das
sbb
data16
loope
adc
adc
loope
sbb
shll
adc
mov
mov
cmp
dec
hlt
fs
sbb
pop
add
arpl
or
pop
fistl
lret
inc
cwtl
inc
push
push
lret
imul
popf
cwtl
das
stos
imul
daa
and
cmpsl
mov
rcll
xchg
movsl
aaa
shl
cli
out
pop
shrb
call
out
pop
inc
mov
adc
popa
inc
lret
jbe
mov
push
push
and
pinsrw
push
stos
fs
fsubrl
and
dec
aam
pop
test
rorl
arpl
clc
mov
addb
push
xor
ret
je
loope
add
inc
sub
cmp
out
into
gs
cltd
addr16
cltd
test
sbb
push
sbbb
sbb
xor
in
mov
pop
jg
aaa
mov
imul
out
xor
inc
dec
xchg
xchg
cmpsl
fiaddl
mov
cmp
cmpsb
pop
lcall
xor
sub
mov
test
mov
cmp
push
dec
stos
flds
and
clc
lea
repz
mov
and
inc
dec
sub
fcoml
jno
pop
cmpsb
or
fisttpll
dec
add
das
inc
mov
stos
je
aad
cli
dec
inc
mov
mov
cmpsl
call
clc
add
cwtl
adc
in
scas
add
lds
xor
lds
je
pop
adc
popa
negb
mov
cmpsl
xor
stos
int3
imul
sahf
or
sub
inc
in
stos
mov
pop
rcrl
out
cmp
xchg
dec
pop
jp
fistpll
aam
loop
pusha
sub
add
dec
int3
add
or
aas
cwtl
xchg
ljmp
dec
ud2
xor
inc
je
cmc
pop
dec
inc
mov
jo
loope
jl
cmc
jp
fnstenv
in
inc
sahf
or
loop
inc
inc
mov
mov
sbb
add
gs
idivb
out
mov
movsb
xchg
fcompl
faddl
push
ds
add
mov
mov
imul
add
push
sbb
mov
sti
cmpb
mov
add
jl
cli
pop
jmp
movsl
in
adc
fdivr
fsubl
mov
sub
movsl
verr
mov
pop
mov
repnz
sbb
jbe
shll
in
test
or
push
jbe
rorb
into
mov
shr
test
dec
mov
xchg
adc
out
pop
imul
ljmp
test
repz
xchg
jle
je
adc
sbb
ds
mov
cmpsb
push
popa
pop
cmp
add
je
stc
mov
xchg
mov
xchg
mov
imul
or
adc
mov
pop
mov
imul
xchg
nop
adc
jecxz
mov
sub
cltd
ljmp
icebp
push
shr
aam
shl
push
jae
int
mov
in
lea
rcrl
mov
xor
enter
nop
addr16
or
in
dec
jnp
push
jecxz
sahf
hlt
inc
fstpt
aam
gs
daa
cmp
lods
sahf
pop
sub
and
jnp
sbb
inc
testl
xor
hlt
sub
clc
mov
jae
sbb
std
xchg
dec
flds
pop
xor
js
leave
cli
call
pop
cmp
dec
jne
scas
gs
fs
cli
nop
shl
cmpsl
dec
loope
mov
add
lock
scas
dec
insb
ljmp
pop
iret
and
js
sbb
add
ficoml
sarl
ds
adc
and
scas
dec
xchg
aaa
js
xchg
int
cmpsb
lea
aas
push
pushf
cld
ss
sarb
aaa
cs
xlat
arpl
mov
pop
jmp
adc
cmp
jmp
and
shl
fdivrl
pop
ja
pop
push
inc
rcrb
repz
push
movsb
inc
shl
fisubrs
mov
je
pop
lret
popa
loope
add
add
mov
jmp
cmp
mov
or
inc
mov
xchg
dec
jo
hlt
push
and
or
sub
stos
divb
imul
adc
adc
sbb
sbb
jbe
xchg
dec
stc
inc
ja
jmp
js
fwait
jne
shlb
shl
lods
mov
hlt
shl
or
dec
push
dec
xor
int
iret
and
fcmovnb
lahf
mulb
or
inc
int3
cmp
aam
push
inc
ss
mov
pop
insl
mov
or
jns
fimuls
jno
xchg
sti
lahf
cmp
push
lock
jecxz
pushf
negb
mov
pushw
and
sub
or
pusha
and
dec
add
repz
lods
xchg
cmp
pmaxsw
and
aad
lds
mov
stc
jle
cmp
fisttpl
clc
inc
inc
adc
cli
xchg
jno
pop
sarl
cli
jecxz
inc
lods
mov
ss
adc
sti
aad
lret
fists
jle
lods
shr
lock
xor
mov
dec
sbb
sub
jo
push
xchg
orl
inc
adc
loope
mov
int
into
adc
adc
xor
dec
cwtl
jnp
cmp
cmp
add
sbb
xchg
pop
rolb
push
jae
mov
in
dec
bound
jge
mov
jb
adc
std
push
mov
sub
mov
outsl
lcall
cmpsl
xchg
and
mov
fiadds
jg
loop
xchg
sbb
mov
lods
das
cmp
cmpsb
xlat
pop
xchg
inc
mov
dec
inc
jno
jl
xor
cltd
orb
push
xchg
sarb
push
lret
test
adc
xchg
or
stc
cmp
ds
into
loope
xor
cmp
mov
pop
cmpsb
cmp
ja
outsl
fisubrs
rcll
aam
inc
les
push
fidivl
mov
jl
xchg
sub
repnz
sbb
mov
push
scas
and
fldcw
pusha
adc
call
scas
loope
adc
add
imul
rclb
lds
and
inc
fcmove
lahf
sbb
xchg
aas
testl
push
je
jl
cmp
hlt
shlb
test
mov
lods
repz
jge
jb
cwtl
loop
jae
add
inc
mov
sbb
lods
std
cmp
pop
push
pop
sub
aaa
jecxz
rolb
pop
xlat
callw
imul
cld
mov
xchg
dec
push
mov
xchg
in
mov
or
sbbb
call
mov
pusha
add
addl
inc
add
cs
leave
fldenv
out
outsb
xor
enter
nop
data16
mov
jae
inc
and
and
lcall
pop
xor
mov
fs
mov
xor
ret
sub
mov
lret
jmp
cli
inc
addb
cmp
lret
subl
je
push
mov
les
add
cmp
push
adc
hlt
or
cmp
and
sar
or
jnp
pop
and
jnp
push
mov
ja
fimuls
jp
push
pop
cs
test
mov
sub
std
or
mov
lahf
icebp
fldenv
push
test
and
pop
mull
shll
mov
dec
cmp
mov
sub
sbb
push
pop
push
xadd
jno
sub
into
movsl
jle
or
ds
pop
pop
ss
sbb
stos
cli
jnp
mov
xchg
cmpsl
mov
push
aam
pop
inc
gs
xor
adc
in
push
pop
push
ret
bound
pop
push
cltd
cmpsl
call
loop
add
mov
dec
jae
adc
push
notb
stc
lret
popa
mov
mov
jge
add
outsb
inc
hlt
push
or
mov
stos
adc
std
mov
mov
mov
out
xor
adc
xchg
add
or
sar
stos
movsl
ja
inc
movsl
or
shrl
cltd
aas
aas
sbbb
push
cmp
movsl
cmp
std
push
bound
mov
lea
dec
cs
mov
sbb
cld
mov
add
lret
incb
mov
jo
adc
orb
fmulp
popf
test
sub
or
int
xchg
xorl
push
ror
lock
in
arpl
inc
insl
mov
sub
push
xchg
call
cmp
cmc
hlt
loopne
mov
jo
daa
inc
add
jp
and
add
adc
lret
sbb
fnstenv
pop
lret
test
xchg
mov
arpl
in
fisttps
and
push
jbe
ret
push
pop
ljmp
mov
adcb
or
popf
cld
repz
fstpt
push
mov
dec
xor
rorb
dec
mov
pushf
test
or
sbb
adc
mov
and
cmp
sti
dec
cmp
mov
cmpsb
subb
and
ss
test
lahf
cmp
sbb
jbe
push
fsubs
xor
ret
cwtl
insb
sbb
js
inc
in
cmp
xlat
dec
out
dec
cmp
or
jle
lcall
sarb
int3
fstpl
lret
pop
movl
add
inc
mov
in
jne
mov
sarl
enter
jb
ds
pop
and
aad
cmp
or
imul
ret
mov
xor
sbb
push
cmpsl
dec
lret
pop
xchg
loop
and
cltd
jns
ds
ret
push
mov
lcall
in
fildll
pop
mov
ja
int
insl
add
aad
mov
jmp
idivb
xor
mov
addl
push
mov
xor
add
pop
push
cmp
dec
pushf
std
inc
js
movsb
mov
fcomip
inc
pop
mov
xor
adc
add
int3
adc
jg
xchg
fcoml
pushf
push
adc
adc
mov
jl
popf
pop
fadds
cmc
lods
outsb
pop
subl
test
sbbl
sbb
pop
and
ds
dec
jns
loope
arpl
jecxz
dec
shll
orb
scas
push
xlat
mov
push
popa
and
mov
jne
cltd
jl
mov
pop
je
je
dec
mov
outsl
imul
adc
lahf
addb
and
and
xchg
inc
inc
fistpl
or
push
jg
gs
sub
popf
xor
orb
xor
add
out
daa
pop
jg
sbb
sbb
in
stos
movsl
bound
imul
adc
adc
scas
stos
addr16
cmp
dec
pop
loope
enter
or
cmp
xchg
loop
fldt
call
rcrb
jb
jle
and
sub
lcall
push
fcmovnbe
in
mov
pushf
cmp
pop
out
push
jne
pop
inc
faddp
cld
sti
or
dec
gs
testb
sbb
insl
scas
lea
pop
aas
xchg
pop
jo
pop
lock
clc
sahf
ret
inc
imul
xchg
mov
cwtl
inc
ljmp
pop
pop
stos
pop
pushf
push
test
mov
push
out
mov
sbb
xor
adc
mov
xor
xor
movl
dec
in
pop
adc
clc
jl
nop
mov
mov
xlat
int
adc
dec
jno
enter
mov
cmp
js
pushfw
push
mov
add
fstpt
inc
cmp
or
inc
out
js
pop
mov
mov
andb
xchg
push
icebp
insb
scas
loopne
push
xchg
mov
mov
mov
sbb
mov
push
icebp
mov
lea
mov
in
popa
popa
ror
fsub
mov
cwtl
iret
gs
sti
inc
cmp
out
mov
iret
xlat
ror
add
rcrb
lock
daa
hlt
in
push
stos
addr16
xchg
mov
out
add
ja
mov
xchg
imul
dec
movsl
ljmp
mov
daa
jge
jae
lea
in
pop
divb
fdiv
adc
jle
sub
sbb
popa
adc
mov
inc
fs
cld
xchg
and
and
dec
jecxz
dec
mov
cmpsl
sti
and
daa
imul
mov
ljmp
mov
mov
mov
adc
lcall
jne
or
inc
lcall
xchg
jno
jmp
and
enter
dec
fnstenv
or
jle
lcall
jno
pop
mov
mov
adc
xchg
insl
xor
sbb
aas
or
repnz
int3
inc
mov
push
std
pushf
push
jp
cld
outsl
and
xor
xchg
hlt
jae
out
pop
push
sub
sbb
pushf
std
sbb
jmp
lcall
push
or
outsl
icebp
in
imul
fucomp
pop
fadds
jne
xor
xchg
dec
repz
add
and
jg
gs
stc
shl
loop
sub
test
mov
sub
loopne
shlb
push
shlb
push
mov
push
call
ffreep
push
mov
cld
test
mov
add
sub
mov
mov
shr
jo
xor
pop
push
pop
push
pop
mov
push
jecxz
jmp
jbe
inc
xchg
bound
inc
pop
add
or
add
jecxz
int3
sbb
or
dec
ret
dec
aad
clc
cmpl
pop
jbe
loop
lcall
mov
mov
shlb
and
dec
lock
ja
rcll
inc
add
outsb
push
mov
mov
js
adc
imul
xchg
xor
mov
mov
int
call
leave
aad
iret
mov
push
pop
pop
icebp
daa
clc
arpl
push
int3
in
jnp
mov
ds
add
sub
xlat
mov
xchg
xchg
sarl
xchg
in
orb
and
sub
les
sbb
fwait
cltd
std
or
nop
call
enter
dec
push
outsl
mov
cmc
imul
das
in
in
or
test
test
sub
rcr
cmp
mov
std
shlb
adc
pop
int
in
dec
lds
or
ret
aaa
icebp
ljmp
mov
pop
xor
test
or
and
mov
sub
in
cmp
sbb
outsl
cwtl
rcrb
jae
stos
lock
lret
jns
sub
xchg
dec
insl
outsb
push
cmp
jmp
orl
int
in
int3
mov
cmc
xor
cmpsl
adc
cli
aad
fsubr
jnp
jbe
lcall
in
sbb
test
sarl
stos
inc
shll
lcall
dec
lret
call
pop
inc
loope
push
inc
sbb
cld
mov
push
add
in
xchg
xchg
faddp
jmp
push
push
fs
adc
mov
cmp
pop
adc
push
mov
insl
jle
imul
leave
xchg
stos
xchg
mov
lods
mov
mov
jge
js
mov
jno
clc
stos
lods
out
or
call
jnp
jnp
jp
stos
adc
pop
shrl
rcr
loop
mov
push
and
mov
push
addr16
mov
repnz
daa
xchg
shrb
add
ss
insl
xor
push
mov
sub
sbbl
jge
pop
je
scas
xchg
adc
ds
add
cmp
add
stos
mov
push
and
lea
cltd
fcompl
push
mov
xchg
sub
and
push
outsb
and
fstl
test
fadd
jl
fucomip
test
cltd
rolb
push
imul
stos
jnp
dec
or
cmp
cwtl
or
cltd
add
sbb
cmp
push
nop
fs
ja
ljmp
insb
or
sub
mov
pop
mov
stc
scas
shll
sub
push
dec
mov
adc
imul
lods
sub
rorl
js
mov
mov
mov
and
inc
add
adc
jns
ds
leave
leave
insl
adc
fs
and
pop
lahf
push
sbb
jmp
aaa
jle
sbb
add
cli
gs
mov
xchg
push
adc
in
test
adc
mov
cmp
pop
mov
mov
sbb
dec
mov
rclb
push
push
mov
sbb
push
inc
inc
cs
mov
mov
xchg
dec
test
in
iret
and
jle
adc
jl
aad
ret
mov
cmc
mov
cmc
ja
sbb
bound
cmpsl
loope
adc
adc
push
xchg
mov
jbe
rolb
dec
jne
addr16
in
jo
test
mov
fs
jmp
cmp
sbb
xlat
lret
pusha
out
dec
push
ret
mov
stc
or
add
fcmove
xor
xchg
sub
sahf
fistps
sbb
xchg
out
sub
inc
and
cmpl
insl
sub
icebp
rcrl
outsl
dec
mov
lds
sbb
fcmovnbe
repnz
xchg
and
in
test
out
or
xchg
pop
jmp
xor
test
push
inc
outsl
xchg
push
xchg
test
ljmp
lret
pushf
je
sbb
popa
mov
mov
lods
int3
and
mov
xor
inc
div
loope
mov
int3
mov
mov
and
mov
es
bound
fsubrs
jl
mov
cmp
repz
repz
cmp
cmp
dec
push
lret
add
fisttps
inc
xchg
push
xor
mov
jns
inc
mov
adc
leave
cli
mov
sbb
out
mov
out
pop
push
sbb
shrl
sbb
outsl
ret
pushf
adc
clc
cmpsl
dec
enter
into
sub
aaa
int
xchg
sbb
int
sbb
ret
bound
test
popf
adc
movsl
stos
cmp
mov
insl
dec
iret
sub
mov
popa
xor
loope
mov
decl
sbb
mov
sarl
out
sub
insl
stos
das
shrb
xchg
sbb
mov
test
test
push
jo
sub
clc
test
sbb
and
jns
subl
xchg
aad
fucompp
xor
and
dec
mov
movsl
pop
pop
jo
enter
mov
xor
fidivs
dec
std
pop
lret
fisttpll
add
xchg
dec
fstl
fs
outsl
sbb
mov
negl
daa
push
lock
cwtl
pminub
lcall
in
sub
push
adc
lret
out
jmp
xor
js
adc
rcrl
pop
rcl
popf
fwait
leave
mov
inc
aaa
sub
aas
movsb
push
jne
in
movaps
loopne
mov
inc
cli
xchg
adc
and
mov
xchg
addb
xlat
dec
jge
xchg
xchg
bnd
ret
lahf
sub
inc
fildll
les
hlt
imul
xorb
sub
and
mov
mov
into
mov
sti
pop
orl
adc
cltd
iret
stc
adc
ret
cwtl
xor
int
jns
mov
mov
bound
jmp
mov
cltd
test
sbb
lds
imul
or
push
xchg
xor
sbb
xchg
into
in
movsb
lret
pusha
cmc
inc
xchg
mov
inc
mov
fldcw
pop
push
mov
dec
fmul
sbb
add
pusha
adc
inc
mov
leave
add
imull
mov
dec
mov
jg
out
nop
xor
flds
int
sub
cmpsb
inc
add
js
pop
cwtl
dec
gs
imul
mov
and
sbb
dec
nop
jne
adc
ljmp
fisubrs
mov
andl
dec
cmp
inc
shlb
ss
shlb
jo
xor
imul
testl
pop
mov
pop
lds
jbe
pusha
mov
outsb
or
arpl
fwait
shll
leave
sti
ja
repz
call
mov
idivb
enter
jg
mov
add
push
inc
cmpsl
popa
sub
sub
adc
enter
out
loope
mov
mov
mov
loopne
jno
push
adc
loope
pop
clc
sub
shlb
dec
add
inc
sub
jge
loope
lds
mov
movsb
lock
es
mov
repnz
leave
mov
into
int3
outsb
jb
xchg
lahf
stc
jns
out
insb
push
clc
push
dec
sar
out
dec
repz
cmp
push
push
cmp
fdivs
out
loop
cmp
cmp
pushf
gs
negl
sbb
shr
cld
into
shll
jle
jle
movsb
push
dec
xchg
in
mov
int3
inc
ja
aaa
mov
xor
inc
lds
and
mov
imul
xor
push
jl
pop
lcall
sub
aaa
add
rclb
ljmp
rcrl
int3
scas
xchg
stos
insl
inc
mov
jae
sub
std
jae
lock
add
leave
je
cmp
stos
mov
push
pop
and
and
out
rorl
pop
lods
mov
adc
leave
xchg
rclb
movsb
pop
pop
xorl
lcall
pop
ret
leave
mov
xchg
stos
mov
leave
sbb
test
out
call
mov
xchg
add
sti
push
in
lret
push
sbb
fmull
fcomi
xchg
repz
leave
das
bound
outsb
insb
fldl
mov
sbb
pop
out
push
lcall
iret
cmpsb
inc
loope
fucomi
pop
sub
xor
insb
or
fxch
sbb
sbb
mov
test
icebp
insl
sti
push
sbb
les
add
sub
icebp
jnp,pn
sub
out
stc
ss
mov
out
mov
fsubl
ret
int
sub
pop
cmp
das
mov
stos
ss
pop
xchg
add
or
sbb
xchg
jns
cmp
call
int3
ret
push
jp
bound
test
cmp
mov
xor
fwait
pop
sarb
shrb
fwait
pop
mov
adc
jecxz
dec
sub
test
jge
xor
pop
daa
and
das
out
popa
ret
mov
push
jne
mov
or
cld
mov
inc
and
jecxz
pop
or
imul
xchg
xchg
pop
xchg
add
sbb
mov
pusha
imul
xor
sbb
mov
or
aas
pop
jo
imul
dec
cltd
cmp
dec
cmp
enter
jg
rorl
push
hlt
jp
idivl
pop
pop
sub
into
out
sub
ss
mov
cmp
lahf
insb
addr16
mov
sbb
daa
test
jns
in
es
outsb
sub
test
mov
xor
mov
in
out
sbb
adc
pop
lcall
and
jmp
movsl
repz
pop
mov
mov
pop
int
lahf
mov
push
mov
test
loopne
dec
fisttps
jne
cmpsl
cmp
xchg
sbb
stos
std
sbb
insb
cwtl
xchg
push
mov
scas
or
push
or
lahf
pop
ljmp
data16
add
in
bound
and
mov
shrl
pop
cmp
test
outsb
sub
mov
adc
into
out
adc
fildll
pop
jge
aaa
or
enter
or
add
cld
and
add
pop
dec
dec
jp
frstor
push
into
sbb
test
push
sub
fcmovb
xchg
push
fs
mov
jge
jae
ss
mov
push
lcall
nop
or
xor
adc
popa
xor
xchg
mov
sub
stc
sbbb
out
sbb
rol
push
gs
cmp
lock
inc
int3
cld
jle
mov
pop
xor
dec
xchg
push
mov
xchg
adc
lods
fdivrs
loop
pusha
cwtl
lcall
outsl
pop
and
sbb
scas
mov
lret
test
andb
inc
pushf
mov
push
jge
sbb
fnsave
psrlq
dec
cli
ret
push
cld
das
cmp
sbb
stos
or
jg
mov
cmpsb
scas
push
push
in
lret
insb
lods
push
mov
sub
decb
push
push
or
call
cmp
mov
push
out
dec
mov
jp
xchg
mov
outsb
movsb
ds
arpl
fisttpl
hlt
sbb
jecxz
lret
mov
nop
mov
push
lds
sub
xor
xchg
das
dec
jge
clc
pop
rcll
jg
add
lcall
mov
pop
int
fstps
mov
subl
jno
lods
repz
mov
mov
mov
jge
repnz
mov
sbb
lcall
lret
call
or
or
mov
out
jle
in
and
xchg
mov
mov
mov
mov
pop
pop
or
je
mov
aas
jo
fcoms
out
jmp
xlat
sub
in
outsl
pop
push
sub
inc
xchg
inc
iret
cs
jmp
lods
pop
ret
sbb
popf
scas
int
add
mov
out
adc
mov
add
jg
and
std
jo
and
pop
mov
dec
mov
xchg
aad
lds
adc
jbe
xlat
imul
lcall
xor
shr
push
fstps
adc
xor
cmp
call
cmc
fmull
jae
pop
sti
pop
mov
cld
cmp
or
mov
inc
sub
mov
lret
inc
mov
leave
and
push
lret
mov
mov
std
and
movsl
repnz
adc
adc
idivb
mov
add
out
xor
inc
dec
popf
adc
iret
bound
sub
pop
aaa
cmp
pop
dec
xor
shr
pusha
outsb
sbbl
in
jmp
mov
mov
imul
lret
sub
mov
and
or
cmpsw
add
lods
and
cs
or
lods
add
xchg
jbe
xor
sub
xchg
in
adc
mov
sub
divb
ljmp
scas
mov
mov
mov
mov
jns
xchg
jne
loope
stos
aaa
jns
sbbb
xchg
dec
jl
mov
addl
aaa
nop
addr16
movsl
movsb
dec
shll
dec
pop
hlt
mov
cltd
push
lods
and
mov
scas
testl
int3
or
in
xor
inc
clc
mov
jno
sub
add
jg
cld
lret
add
jo
sbb
andb
cmp
xchg
jp
push
mov
movsl
insl
jecxz
jnp
leave
mov
push
mov
and
setnp
add
bound
fs
jns
jp
ljmp
insl
push
mov
sub
xchg
mov
cltd
cld
popf
lea
adc
add
jb
shr
mov
add
stos
fidivrl
in
pop
addr16
jmp
addl
rclb
xchg
imul
shrb
cld
add
loope
xchg
jmp
andb
inc
fsts
adc
stos
loope
loopne
sub
into
in
sub
lock
rol
ja
nop
loop
pushf
fxtract
mov
sbb
add
xor
test
scas
xchg
mov
inc
xor
in
imul
or
ret
and
inc
loop
rcrl
sbb
cld
hlt
int
pop
lea
add
lcall
mov
xchg
lds
cmc
dec
aas
test
in
dec
lods
fidivs
mov
jmp
jmp
loop
jp
insl
loope
dec
mov
loopne
stos
cltd
dec
je
mov
mov
and
test
sti
mov
add
sbb
push
in
xchg
sbb
xor
fsubrs
or
loop
sbb
cmp
popf
addr16
nop
stos
addr16
sbb
push
popf
xchg
push
mov
push
xchg
ds
je
mov
adc
and
stos
outsl
je
xor
mov
pushf
mov
pushf
jae
inc
dec
xchg
sbb
dec
cmp
ret
push
mov
out
rolb
cmp
cmp
std
mov
sub
inc
adc
icebp
ret
in
jmp
pop
cmp
xchg
jmp
repz
lret
in
mov
inc
lock
lods
andl
mov
pop
mov
aaa
jns
push
push
mov
fdivrl
clc
fstl
xor
sub
push
jp
sub
cmp
cmc
xchg
mov
rcll
daa
bound
ret
xor
imul
imul
mov
shll
rcll
adc
push
jmp
mov
xchg
ret
ss
pop
push
mov
mov
and
inc
sti
shl
xor
add
inc
mov
adc
int
jmp
scas
je
popf
imul
mov
sub
pop
addr16
push
mov
mov
and
cmp
sbb
add
test
sub
cmp
hlt
sub
sub
popa
xchg
test
arpl
inc
loope
out
sub
and
push
and
pop
pop
dec
gs
xchg
aas
or
hlt
insb
sub
push
lods
test
lret
imul
sbb
adc
pop
es
jp
lahf
xchg
divb
or
and
mov
nop
rcll
cmp
push
in
or
enter
sbbb
cli
rcl
subb
push
call
cwtl
cwtl
mov
cs
sbb
ret
cmpsl
add
lods
xchg
dec
jmp
mov
aaa
jle
les
xor
jnp
scas
aad
popaw
pop
jecxz
pop
mov
lods
push
test
aam
sub
mov
xor
cmp
inc
adc
outsl
in
jecxz
inc
push
mov
loopne
push
flds
aam
xor
xor
inc
add
test
in
out
jge
std
cli
scas
sar
mulb
pop
mov
mov
into
hlt
adc
xchg
xor
xor
pop
mov
cmp
add
pop
ret
frstor
sbb
xchg
mov
xchg
mov
jno
mov
jne
orb
dec
cmpsl
mov
roll
or
pop
sub
xlat
lods
and
lret
fcomi
int
stos
push
sti
cmpsl
cmp
inc
gs
inc
out
loop
inc
sti
cmpsl
loopne
mov
pop
fcmovb
cltd
sub
lret
insb
fiadds
push
lds
xchg
mov
xchg
shl
mov
push
std
xor
jle
ficompl
xlat
mov
lds
pop
push
pop
mov
fists
adc
or
out
sti
decl
mov
out
movsl
and
les
and
les
pop
rcrl
xor
lcall
test
xchg
xor
and
and
adcl
sbb
inc
jecxz
insb
mov
dec
push
adc
push
xchg
daa
push
pop
aam
inc
dec
sbb
js
push
lods
sub
test
aam
and
push
sub
or
jge
inc
cltd
jmp
out
jae
sbb
test
mov
dec
cmp
inc
arpl
jns
stos
mov
nop
or
dec
imul
xchg
mov
sti
cli
xchg
xchg
xchg
movsb
mov
push
and
lods
addr16
leave
xor
mov
out
lcall
push
fnstenv
int
mov
cli
nop
loope
sbb
sub
add
movsl
mov
ret
and
daa
loopne
in
pop
or
xor
xchg
cmc
lea
int3
pop
in
into
in
in
mov
test
in
xor
or
lea
push
gs
jbe
ja
fistps
xchg
xor
imul
testb
gs
call
add
add
or
jnp
inc
push
test
test
into
or
js
test
mov
das
xchg
inc
mov
xchg
cs
sbb
sbb
lahf
lcall
jmp
cmp
insl
arpl
and
lahf
rcll
mov
divb
testb
push
cmpsl
xor
out
jns
aam
lods
or
aas
xor
mov
mov
sub
add
and
sub
sbb
nop
sbb
sbb
adc
lcall
add
std
sbb
mov
in
enter
out
add
jmp
pop
stc
lock
movsl
push
jge
ret
movsl
pop
int3
adc
adcl
testl
test
dec
dec
shl
ja
push
in
ret
movsb
sbb
shl
pop
pop
or
mulb
inc
cmc
cltd
xlat
fwait
ss
or
or
aas
cmp
pushf
jecxz
fildl
add
mov
inc
les
idivb
dec
cmp
inc
ljmp
lds
sarl
mov
sbb
xlat
add
ficoms
cmp
mov
jge
cli
pusha
cmp
cmp
imul
cltd
ja
push
mov
xchg
or
push
out
adc
fnstenv
in
jae
lret
fistps
dec
push
out
pushl
mov
add
mov
sub
xchg
lods
dec
in
sbb
cwtl
fwait
and
pop
out
mov
pop
scas
push
add
push
ja
pop
orl
stos
outsl
and
add
imul
fwait
xchg
jge
push
push
mov
rorl
cmp
leave
lcall
adcb
fisubrs
dec
xchg
notl
and
fwait
aas
xchg
ret
push
xor
jns
es
mov
js
add
out
sbb
cmp
mov
loop
int3
jle
push
mull
rcrb
jae
mov
fdivrl
shll
adc
stc
shlb
das
repnz
add
pop
stos
scas
pop
push
in
out
push
or
pop
xchg
mov
push
and
inc
divb
cmp
enter
sahf
fcmovnb
data16
xchg
mov
fcoml
ret
mov
mov
lods
mov
mov
mov
pop
sub
ffreep
adc
pop
sbb
sti
xorl
mov
jl
xchg
xorb
push
adc
inc
push
inc
fisttpl
in
cld
leave
stc
xchg
and
addr16
fucomi
rcll
dec
mov
and
xchg
xor
push
lods
jle
xor
sub
stos
ds
or
ja
lret
xchg
or
aas
cmp
jmp
jl
add
test
sub
mull
sarl
ljmp
aas
adc
mov
mov
push
imul
pop
cmp
rorl
in
mov
stc
lock
je
xlat
dec
pop
push
jno
add
mov
mov
mov
int3
addb
or
push
xchg
mov
loopne
test
jge
sbb
arpl
sub
sub
adc
rorl
and
adc
fdivs
cmpl
fbstp
lret
dec
fisubrl
daa
orl
xchg
loop
ret
lods
inc
adc
gs
inc
adc
sub
in
adc
or
addr16
test
ret
in
clc
mov
aas
pop
fmul
into
lahf
jnp
xchg
inc
pop
outsl
push
add
sub
push
cld
cmp
test
ret
dec
adc
leave
mov
jnp
pusha
inc
dec
repz
stc
add
stc
mov
das
mov
push
sti
mov
dec
rclb
imul
pop
scas
idivb
push
adc
das
fcom
aaa
cmp
dec
add
adc
push
add
test
bound
and
pop
fsubl
cmp
lock
mov
fwait
push
mov
mov
inc
pop
stc
or
enter
xor
in
and
aas
cmp
andl
inc
out
outsb
add
cld
scas
sbb
adc
jb
inc
pop
popf
push
loopne
jg
aad
push
dec
inc
xor
adc
out
lret
push
dec
mov
shll
sub
and
sub
ffreep
xchg
aaa
mov
cs
shll
das
jae
cmp
mov
xchg
cmp
mov
lea
ds
daa
das
imul
xchg
mov
call
lds
test
xchg
imul
movsb
lea
xchg
iret
jns
xor
pop
lret
ljmp
sub
jne
out
in
mov
sbb
xchg
xorl
testl
test
cmp
cmp
mov
lods
movsb
ja
iret
cmp
pop
fnstenv
push
pop
sub
add
xorb
push
mov
imull
adc
push
fimull
mov
insl
xchg
inc
lret
stos
rol
jl
adc
xchg
mov
mov
sahf
or
test
divl
cmp
insl
aad
push
fs
mov
push
or
fsubs
mov
push
push
mov
hlt
aas
mov
or
int
cs
push
testb
icebp
roll
push
fwait
jnp
movlps
inc
sbb
xchg
std
mov
sbb
dec
xchg
inc
mov
cmp
push
pusha
mov
mov
or
mov
lea
xchg
xchg
in
lock
das
sub
repz
or
fisubl
movsl
mov
lahf
scas
pusha
mov
xorb
push
ljmp
xchg
xor
test
and
popf
add
inc
add
in
repnz
aam
push
test
mov
sbb
push
inc
jb
testb
fs
xor
popf
cwtl
std
pop
int3
lock
cld
repz
cmp
add
sbb
fdiv
sbb
mov
aam
scas
mov
xchg
mov
inc
push
lods
adc
push
loop,pt
push
cli
es
push
ficompl
or
jns
mov
sub
sub
dec
sti
jo
nop
outsl
gs
pop
lret
xchg
mov
mov
imul
cmp
rcr
pop
out
sbbb
in
fwait
mov
icebp
int3
rorl
dec
data16
sbb
push
cmpsl
push
mov
outsl
stos
xchg
inc
xlat
and
adc
fists
pop
mov
mov
push
inc
stos
test
add
sbb
xor
imull
xorl
pop
shll
xor
and
mov
pop
push
shrb
mov
faddl
cltd
or
push
addr16
mov
add
xor
cmp
sub
xchg
cmp
cmpl
xor
loope
std
iret
test
lret
scas
push
in
cli
sub
shlb
and
lds
or
push
ds
sbb
mov
mov
mov
incl
int3
or
adc
cmpb
in
out
cmp
in
cmpsl
push
mov
add
jg
rcl
sbb
icebp
dec
cmp
xor
sbb
test
lcall
movsl
xlat
mov
xlat
sbb
mov
mov
bnd
lcall
sub
sbb
xchg
dec
stos
mov
addr16
mov
jbe
dec
sbb
imul
fs
in
pop
xchg
cmp
hlt
test
scas
mov
jl
int3
mov
jne
iret
pop
stos
add
jl
in
pusha
xchg
loope
adc
cmp
xchg
iret
sbb
and
repz
fcomps
jp
mov
pushf
test
dec
sub
xor
iret
test
jl
lds
adc
push
pushf
push
xlat
sub
lcall
sbb
stos
jle
and
mov
idivl
sbb
dec
repnz
sbb
enter
xchg
arpl
int3
mov
call
mov
out
cmp
bndstx
adc
adc
xor
pushf
testb
xchg
jg
inc
testb
inc
addr16
std
cmc
xchg
idivb
mov
pop
mov
push
stos
sbb
andb
cli
jl
in
pusha
hlt
sub
sub
lret
push
sub
adc
xchg
lods
arpl
out
fdivs
in
sbb
lds
xor
call
ss
arpl
enter
cmpsb
inc
pop
xchg
out
movsl
call
test
int
sahf
sub
imul
sarl
mov
xchg
inc
lret
mov
popa
inc
dec
pushf
or
popf
dec
inc
xor
loopne
movsl
sti
out
and
cmpsl
rcrl
add
rcrl
lock
out
sbb
in
mov
adc
lea
mov
adc
add
jns
xor
aas
fbld
push
xor
or
fbstp
pop
das
out
xchg
jnp
testl
jle
adc
mov
jmp
jg
cmc
xchg
pushf
leave
rolb
repnz
in
sarl
int3
aas
nop
stc
fwait
mov
dec
test
aas
imul
jb
loope
sub
pop
pop
mov
sti
pop
dec
cmpl
sub
sub
mov
cli
cwtl
push
add
jbe
stc
xor
cmp
mov
pop
insl
or
js
les
mov
movnti
add
pop
add
dec
outsl
inc
imul
mov
aaa
pop
mov
mulps
hlt
push
subb
popf
out
test
lret
pop
mov
outsb
fdiv
xchg
out
dec
popf
dec
lret
loope
enter
jmp
decl
sub
lods
xchg
movl
cmp
pop
pop
xor
push
clc
mov
adc
mov
dec
cmpsl
and
stos
lock
aaa
adc
bound
add
and
lods
rcrb
cwtl
lods
mov
xchg
push
adc
repz
in
dec
and
or
mov
dec
xor
in
jg
pop
mov
add
int
nop
cltd
xchg
hlt
mov
icebp
cmc
test
icebp
inc
cltd
and
faddl
mov
mov
in
push
jne
inc
imul
or
pop
insb
aaa
aaa
xor
dec
ss
std
mov
test
das
cltd
test
ljmp
imul
data16
jp
dec
clc
push
jle
push
rolb
mov
push
es
out
out
adc
mov
stos
or
xchg
subb
cmp
xor
inc
sbb
pop
bound
xchg
outsl
push
push
std
push
mov
mov
fisubl
test
jne
mov
cmpsb
outsl
sahf
es
pop
inc
jns
adc
lods
adc
lods
lahf
popf
jmp
jle
lea
mov
test
jl
push
bound
cmp
xchg
jge
testl
push
jp
inc
inc
push
ss
fidivl
jo
in
insl
cmp
lahf
add
adc
ficoml
shl
pop
xabort
movsl
aam
roll
mov
push
mov
mov
insb
mov
sub
adc
mov
mov
ror
cltd
rolb
mov
out
sub
mov
mov
or
call
push
cmp
ljmp
inc
pop
data16
cmpb
sbb
jno
xlat
inc
outsb
add
fldcw
les
mov
xchg
jmp
lahf
jecxz
sub
out
jo
jb
aas
loopne
mov
xchg
add
inc
adc
push
cld
push
into
xlat
push
mov
lret
dec
sbb
add
int
sbb
aaa
gs
xor
inc
insl
xchg
cmp
dec
pusha
fdivr
push
xchg
mov
mov
adc
mov
push
sub
sti
mov
scas
xchg
and
shl
push
movsl
test
movsl
fldcw
and
sbb
mov
cmc
pop
mov
and
gs
xor
hlt
stos
xor
fistps
out
inc
cmp
test
mov
lea
fwait
sti
js
testb
iret
inc
movsl
test
sbb
mov
jns
jmp
fstp
push
mov
mov
sub
iret
pop
loope
and
fiaddl
stc
and
je
mov
dec
pop
push
add
sbbb
jle
adc
in
pop
jbe
movl
das
mov
and
cmp
lods
rolb
inc
and
cmp
pop
fldcw
push
mov
aas
movsb
xchg
sbb
push
adc
scas
hlt
pop
push
adc
push
adc
fdivl
jne
hlt
mov
lea
dec
sti
or
inc
mov
inc
movsb
cmp
shrl
and
or
pusha
in
fs
js
push
mov
mov
sub
sahf
xlat
mov
push
testb
iret
xor
movsb
sub
mov
ret
pop
add
or
dec
test
das
mov
daa
fldt
inc
movsl
xchg
test
inc
mov
jl
icebp
cs
jno
fildll
pop
in
jg
cmp
ret
pop
ss
push
mov
add
add
data16
jge
daa
inc
lahf
repz
lock
mov
insl
cmp
shrb
xor
ss
in
xchg
int3
xchg
jge
cmpsb
mov
add
cwtl
xchg
mov
pop
shl
ret
mov
and
nop
dec
out
lcall
icebp
xchg
out
addr16
sub
and
nop
push
sub
mov
jle
and
sbb
mov
popf
das
sbb
popf
xor
xchg
xchg
sqrtps
mov
test
push
cmc
std
mov
jg
hlt
loop
loop
lods
insb
dec
push
inc
mov
imul
inc
fdivrs
xor
and
mov
in
rcl
mov
adc
pop
test
cmp
fbstp
pusha
add
repnz
lock
xlat
addl
and
repnz
ret
xlat
aam
rcl
inc
out
ret
insb
out
sti
aas
lret
or
mull
xchg
push
push
xchg
out
dec
lds
popf
js
iret
inc
mov
mov
rcl
mov
push
jmp
xlat
inc
ja
add
repz
dec
sub
testb
xchg
cmpsb
sub
cmp
mov
int
outsb
fistl
ficomps
mov
ds
adc
mov
imul
in
daa
nop
cmp
stos
xchg
ficomps
call
gs
mov
into
mov
into
xor
imul
rorl
sbb
dec
sbb
push
dec
cltd
data16
add
rclb
or
cmp
dec
mov
jp
insl
popf
lock
stos
sbb
sub
inc
cli
mov
dec
ret
adcb
ret
mov
orl
mov
outsl
pop
mov
movsl
fdivr
and
pop
repnz
fidivl
je
outsb
movsb
push
mov
hlt
cld
xchg
adc
push
mov
mov
push
xchg
mov
jle
xchg
loop
movsl
push
add
lret
mov
test
jle
mov
sbb
sbb
and
loopne
mov
inc
add
pop
bound
lea
fmuls
xor
mov
les
js
into
pop
les
mov
jnp
jb
mov
mov
mov
xchg
leave
or
mov
add
mov
call
adc
fldenv
enter
iret
add
bound
sbb
cwtl
inc
jbe
movsb
xor
insb
stos
jecxz
and
push
jo
clc
insl
push
rclb
repnz
movsb
mov
inc
sbb
hlt
inc
test
cmc
and
addl
in
sub
adc
push
rcrl
dec
xchg
xchg
or
movsl
and
jecxz
mov
xor
daa
sbb
jns
lea
push
xor
xor
and
bound
dec
jns
movsl
pop
xor
push
xor
call
aam
ja
dec
enter
movsl
movsl
shll
and
roll
inc
sub
aam
mov
aaa
aad
xchg
pushf
daa
scas
mov
jo
lock
jns
int
jle
or
dec
mov
mov
jle
nop
pop
movsl
dec
mov
xlat
jae
cltd
cld
out
xchg
sbb
and
mov
add
sub
xchg
cwtl
dec
push
sub
adc
icebp
sub
scas
outsl
jae
cmp
mov
xchg
mov
dec
dec
cmp
mov
hlt
jae
sub
mov
xchg
mov
cmp
or
lea
pop
mov
xor
cmp
daa
mov
aam
xor
push
inc
enter
jmp
jnp
fcmovnbe
xchg
and
add
fmuls
fstpt
lods
mov
mov
cmpsl
cmp
adcb
or
imul
das
mov
fwait
mov
cmp
inc
cmc
shlb
faddl
cmp
outsl
call
mov
out
shrb
xchg
push
inc
sbbb
nop
rcll
mov
or
dec
lret
stc
sbb
push
adc
bound
loopne
ss
shlb
add
mov
mov
rcr
mov
insl
jae
arpl
int3
fmuls
lea
pop
je
ja
mov
pusha
repnz
mov
jp
push
fistpll
add
pusha
fs
push
mov
popf
and
jne
sti
ret
mov
or
nop
jmp
aas
popa
and
dec
cmp
add
inc
lods
stc
cmc
and
ss
mov
out
mov
test
bound
fucomp
cmp
in
adc
fadds
jne
sbbl
adc
add
jno
cmpsb
dec
out
hlt
fnstenv
mov
loop
push
stos
and
mov
mov
outsl
push
xchg
fisubl
sub
call
lcall
lahf
inc
adc
pop
dec
xor
nop
shl
repz
xlat
enter
insl
jge
arpl
mov
aam
out
fsubrs
inc
or
pop
ja
xor
out
push
or
jb
inc
xchg
movsl
adc
mov
les
shl
mov
ds
xchg
mov
andb
xor
cs
out
data16
dec
into
mov
xchg
fisubrl
fwait
jae
and
cmc
push
ret
aam
out
and
insl
subb
add
cmp
jns
fs
cmpxchg
xchg
ljmp
arpl
pop
and
pop
xchg
mov
dec
cmp
idivl
lret
sbb
and
testb
stos
in
pop
repz
mov
insb
scas
mov
sub
or
push
adc
jl
mov
or
or
or
into
jecxz
dec
sbb
imul
or
imul
ficoms
inc
jnp
pushf
and
cmpsb
cmp
lahf
repnz
push
roll
pop
cmp
dec
xor
jne
bndldx
pop
jg
push
dec
jmp
dec
jns
shll
jne
imul
pop
jl
lods
cli
mov
in
scas
fcompl
enter
jns
dec
cmp
jle
das
or
or
dec
stc
and
push
sbb
cld
pop
ss
push
xchg
in
andb
in
jb
sti
stos
stos
jno
cwtl
jecxz
mov
repnz
jp
mov
pusha
loopne
mov
adc
or
gs
xchg
pop
fdivrs
mov
pop
int3
pop
push
pop
add
clc
add
or
or
test
nop
inc
pop
xor
scas
and
repz
push
push
ja
sbb
movsb
xor
sti
call
xor
cmc
je
cmp
jo
js
inc
mov
sub
inc
pop
xchg
fs
pop
repnz
ret
int3
fnstsw
test
cli
lret
es
addr16
mov
scas
jno
nop
jno
arpl
in
lahf
or
cmp
inc
add
and
or
push
push
sti
fidivs
sarb
mov
ljmp
rolb
add
popa
cmc
rep
inc
pop
cmc
ret
sub
mov
cwtl
sub
or
and
popf
mov
movntq
pop
stc
jle
rolb
gs
dec
cmpsb
loope
iret
addb
fnstsw
inc
jl
pop
xchg
push
adcl
cmp
fwait
cli
cmc
jno
jmp
fstps
mov
daa
aam
int
inc
push
or
mov
pop
push
fwait
repz
mov
stos
bound
dec
jns
fcmovne
add
popf
xchg
pop
pop
push
stc
andl
and
subb
fdivl
sub
sbbl
and
sarb
insb
xchg
push
add
lret
clc
mov
mov
adc
sub
dec
xor
mov
jne
jae
iret
outsb
cmpsl
roll
inc
test
dec
jne
add
setbe
mov
js
sahf
ret
mov
dec
cmp
sbb
sbb
loop
stos
jl
aas
push
iret
lods
dec
in
pop
adc
xor
push
in
in
outsb
adc
jecxz
in
popf
addr16
outsl
enter
mov
test
sbb
dec
movl
arpl
ds
cld
fimull
fdivrl
pop
clc
mov
mov
push
je
jmp
gs
pop
pusha
pop
das
inc
sbbb
jmp
adc
cwtl
push
pusha
jno
ds
sub
push
and
ljmp
pushf
inc
popa
mov
xchg
xchg
lcall
push
dec
push
lods
dec
shrl
inc
cli
add
mov
or
loopne
sbb
mov
mov
adc
push
fldenv
jb
push
xor
call
jo
mov
test
xchg
pop
je
fcmovne
stc
aas
xor
push
dec
sub
clc
xlat
dec
xchg
push
inc
shlb
and
mov
lret
popa
lcall
mov
or
dec
ficoml
in
push
iret
and
mov
daa
pop
jo
std
jns
add
push
clc
repz
das
loope
sub
add
stos
loop
dec
lock
dec
ret
push
xor
inc
sbb
imul
xor
arpl
pop
xor
ds
imul
cmp
pop
xchg
xor
and
cwtl
lcall
adc
adc
fcompl
pop
xchg
and
sbb
adc
xor
dec
sbb
or
ja
out
pop
aad
rcrl
pop
jecxz
sbb
adc
push
xlat
lea
out
sub
push
ficompl
xchg
xlat
dec
mov
aaa
out
lock
shll
cmp
mov
and
jge
xchg
clc
xor
out
pop
xchg
lret
mov
outsl
inc
test
jmp
lcall
rorl
rclb
mov
lret
loope
ljmp
lret
imul
cmp
xchg
push
pop
inc
mov
inc
adc
in
test
cli
mov
test
aam
fimull
mov
cmp
notl
movsb
jne
mov
jne
inc
dec
pop
mov
cmc
pop
mov
mov
jnp
xchg
int
fisttpll
pop
sbb
mov
add
incl
dec
scas
cmp
fwait
add
jne
sub
setne
pushl
mov
nop
ficoms
mov
sbb
ljmp
popf
mov
mov
adc
cmp
pop
sub
test
cmp
sahf
inc
inc
addr16
add
jecxz
push
fcmovbe
pop
sbb
jnp
lds
sbb
inc
jbe
lds
add
shll
in
in
int3
inc
lret
nop
add
testb
mov
jg
test
imul
add
std
leave
mov
icebp
dec
mov
xchg
pop
xchg
lahf
add
pop
push
hlt
lcall
mov
rcr
xchg
adc
mov
popf
jmp
gs
xor
in
jge
mov
push
aad
fldl
mov
mov
lea
xchg
outsl
or
sub
lea
je
daa
or
out
mov
xchg
shlb
cli
les
les
dec
mov
call
dec
and
fbstp
das
mov
int
push
scas
cmp
mov
test
pop
push
inc
pop
pop
dec
repz
adc
adc
shl
jne
dec
int
mov
int3
rcrb
cwtl
shll
mov
cs
loopne
jnp
cmp
inc
ror
cmp
push
leave
pop
lock
and
xchg
es
mov
xor
outsb
mov
and
gs
xchg
jno
je
or
popf
xlat
or
insl
mov
jle
scas
push
cmp
sub
gs
adc
insb
sbb
inc
and
sbb
and
jo
pop
adc
out
adc
int
lds
mov
gs
jno
xchg
sub
outsb
out
and
pop
ret
lea
dec
push
stos
mov
jg
xchg
xor
dec
xor
sbb
mov
lock
ret
sahf
dec
mov
mov
xorb
cli
dec
or
test
push
and
fwait
pushf
mov
xorb
in
lret
sbb
mov
cltd
pop
cmp
daa
adc
daa
cmp
sarb
and
out
loopne
mov
sub
inc
sti
mov
ja
cli
lret
inc
mov
into
inc
outsl
iret
scas
jge
push
cmp
mov
decb
stc
jl
push
out
pusha
pop
pop
fwait
imul
or
fdivp
pop
mov
pop
dec
sbb
and
push
or
test
pop
arpl
lea
push
nop
inc
xchg
loopne
inc
adc
daa
int3
mov
insl
sbb
mov
push
pop
cmpsb
mov
int
xor
movsl
out
mov
stos
lods
mov
lods
pop
push
push
jg
sbb
in
std
and
pop
outsb
add
jae
daa
adc
push
jl
push
mov
push
jl
pop
xchg
ret
cmp
pop
cli
insb
mov
test
pop
js
subb
xor
aad
idivl
icebp
test
ss
into
dec
imul
imul
pop
shlb
push
sub
dec
mov
faddl
inc
in
jmp
jmp
jae
loope
into
adc
sub
sub
add
stos
mov
pop
test
mov
outsl
rcrl
loop
and
push
in
add
cli
xchg
jp
pop
je
mov
inc
in
cltd
xor
shlb
inc
shrb
test
jnp
add
xchg
ret
mov
jge
stc
cmp
insl
xor
leave
xchg
popf
inc
fnstcw
movsb
popa
sar
sahf
iret
cmp
mov
call
int
pop
cmpsb
std
mov
xchg
dec
je
and
mov
dec
dec
imulb
push
out
pop
mov
xor
leave
or
cmp
lods
iret
or
mov
lret
movsl
jmp
mov
jb
xor
cli
xor
addr16
aas
mov
into
inc
ret
sub
pop
insl
cmp
mov
sbb
data16
push
pop
cmp
and
sahf
testl
out
inc
jnp
dec
dec
mov
lahf
shrb
jns
pop
stos
sub
sub
mov
or
add
shrl
stc
pusha
arpl
popf
aad
or
lcall
call
je
jp
into
call
push
shlb
sbb
das
ret
xchg
icebp
out
add
cmp
or
sbb
repnz
mov
test
mov
mov
out
adc
leave
mov
jg
jmp
sti
mov
and
jo
lret
stc
xor
aam
mov
mov
sbb
push
dec
pop
or
stc
in
push
shl
and
mov
cltd
cmpsb
jl
out
fsubs
mov
out
or
orl
pop
sbb
je
andl
sub
or
push
sub
cli
pop
scas
xchg
jg
lods
cwtl
mov
inc
pushf
std
cs
test
jo
sarl
int
fbld
pop
push
sub
push
out
daa
aam
jnp
sti
jo
repz
outsl
and
icebp
xor
mov
lret
cwtl
add
inc
js
imul
outsl
js
mov
push
orb
inc
cmp
dec
xchg
js
mov
aad
dec
xchg
sub
test
clc
mov
test
jecxz
cmp
aam
mov
jo
cld
addb
das
adc
pop
pop
movsb
test
and
pop
mov
pushf
inc
dec
aam
out
cltd
mov
mov
insl
sub
xor
adc
enter
mov
mov
inc
mov
fcomip
lods
cmp
les
mov
insb
test
cli
sub
mov
fwait
add
sub
mov
pop
test
std
xchg
outsb
or
pushf
je
scas
sub
pop
mov
rcr
xlat
sub
xor
int3
ret
and
dec
lret
adc
mov
jb
mov
mov
pop
mov
xchg
sti
push
or
push
push
cmp
or
jae
ltr
xor
ret
sub
aam
mov
insl
js
pop
mov
xchg
jecxz
xchg
cmp
gs
and
lahf
adc
pop
fwait
pop
dec
repz
xchg
inc
daa
mov
orl
cmpsb
jecxz
loopne
push
fwait
fwait
movsl
dec
into
inc
or
xorb
mov
subb
loope
lods
mov
outsb
xchg
movsb
cltd
cwtl
mov
out
into
mov
dec
xchg
pop
add
add
dec
mov
aaa
and
dec
in
dec
setnp
mov
inc
insb
rcll
push
stc
pop
out
add
and
stos
pop
imul
xchg
loope
enter
gs
aam
outsl
xor
dec
stc
lock
xor
lock
repz
push
add
cmc
rcll
outsl
mov
xchg
mov
xor
adc
add
mov
sbb
les
pushf
cmp
push
lods
mov
fcomp
negb
inc
xchg
outsb
insl
fucomp
or
in
movsl
int
ret
add
mov
lea
pop
add
mov
insl
adc
lock
aam
and
mov
movsl
mov
add
cli
jns
push
loopne
loopne
lcall
stc
out
push
mov
cmp
mov
or
push
out
arpl
scas
adc
ret
into
sbb
push
cmp
pop
in
lea
push
inc
inc
xchg
test
out
rcl
push
pop
mov
adc
lods
mov
movsb
jno
or
popl
cmp
xor
adc
jl
jnp
xor
xchg
adc
loop
test
xchg
insb
xlat
jnp
pusha
sub
btc
pushf
and
lods
addr16
subl
leave
dec
cmp
xor
mov
sub
cmp
mov
test
pop
sub
pushf
outsl
sbb
cmc
and
out
push
shrb
cli
stos
mov
in
icebp
inc
jle
dec
push
mov
sub
add
fisttpll
mov
push
cmp
lods
inc
stc
jnp
push
aad
or
jp
xor
mov
add
sub
sbb
into
enter
mov
push
addr16
jl
jmp
lds
mov
lret
push
dec
insb
rolb
nop
sub
or
repz
dec
push
push
and
xchg
cmpsb
fisubrs
cs
jae
js
inc
addr16
cmp
push
mov
add
idivl
push
repnz
jmp
negb
ret
out
aas
fstp
outsb
push
mov
addb
insb
fchs
scas
pop
inc
xor
out
fsubl
sub
hlt
in
add
scas
leave
sahf
and
mov
icebp
pop
cmp
push
scas
pop
in
pushf
lcall
cmp
arpl
xor
test
call
jne
movsb
push
loop
cmp
stos
fisubl
icebp
push
dec
push
cwtl
insb
xor
push
and
and
test
lds
mul
daa
fsubs
jne
repnz
xchg
cs
adc
mov
addr16
inc
pop
and
jae
push
sbb
outsl
sahf
add
in
cs
lret
jmp
pop
lods
mov
mov
lcall
in
je
inc
movsb
je
repnz
into
pop
push
inc
dec
jecxz
in
stos
fmull
dec
dec
dec
sub
out
jp
stos
rcl
pop
adc
mov
std
inc
addr16
pop
push
cmpsl
and
cmp
outsl
jnp
stc
jp
mull
fldl
int3
mov
int
mov
xchg
jle
push
inc
mov
dec
push
sbb
fsubs
xlat
lahf
lret
pop
jb
iret
adc
loop
xchg
push
rclb
inc
outsl
push
stos
fnstenv
sbb
leave
mov
mov
sub
test
xchg
mov
cmp
cmc
jbe
pop
lea
in
call
pop
dec
gs
leave
mov
fdiv
ss
lea
lds
xor
and
fnstsw
and
dec
lods
std
call
loop
ret
sti
rol
or
and
je
mov
jo
dec
enter
dec
mov
pop
loope
dec
popa
sbb
add
loopne
cltd
dec
mov
in
dec
sbb
inc
mov
test
mov
sbb
sub
pop
rcrl
ret
inc
repnz
jae
orl
je
fs
sub
aas
cmp
sbb
stos
sbb
movsl
lcall
add
or
rolb
cmp
xchg
stc
pop
outsl
pop
mov
cmpsl
cltd
in
push
fistps
fwait
popa
rclb
inc
inc
add
sbb
hlt
out
outsb
xchg
jmp
das
fisubrl
xorl
xor
movswl
adc
test
out
sbb
loope
mov
sub
inc
pop
loopne
cmp
insl
sbb
jle
lods
jg
pop
das
fildll
pop
shrb
fmuls
xchg
dec
xor
sub
movsb
dec
push
insb
add
mov
out
fwait
sub
subl
out
dec
mov
mov
jbe
xchg
nop
xchg
lods
and
call
mov
mov
xchg
stos
pushf
add
inc
dec
rcr
in
push
bound
mov
shlb
call
inc
test
adc
test
jl
pop
pop
pushf
dec
data16
dec
addr16
out
cwtl
mov
cmp
mov
fbstp
aad
or
icebp
xor
or
aam
adc
inc
xchg
es
test
cld
cmpsb
call
loope
sarl
fst
data16
add
mov
sbb
xor
push
shll
popa
mov
xchg
out
repz
sar
adc
xchg
lods
lret
push
mov
jbe
rorb
sbb
js
jecxz
mov
arpl
mov
or
ljmp
jbe
or
ret
mov
mov
cmpsb
call
adc
xor
mov
push
rclb
daa
sarl
in
jne
hlt
cmp
test
aam
popa
adc
add
jns
cs
sbb
movsl
call
addr16
shlb
sbb
mov
pop
int
fwait
add
mov
push
push
add
push
mov
xor
scas
xorl
test
or
lods
inc
adc
push
jno
nop
test
xor
in
or
test
cmpsl
cmp
mov
fcom
mov
push
pop
mov
in
repnz
sbb
ja
adc
fisubs
enter
sbb
push
rcrb
rolb
cs
mov
sti
adc
scas
stc
imul
scas
in
fwait
mov
lret
mov
sbb
test
test
ja
sub
mov
mov
cmp
jb
loop
jae
out
fs
mov
fstpl
fwait
repnz
notb
mov
ret
movhps
or
push
jno
enter
push
lods
push
ljmp
cmp
out
test
jb
pop
shrl
mov
enter
and
insl
lcall
fstps
sub
sbb
orb
shlb
xor
jl
movsb
xor
outsl
lcall
jl
mov
mov
rolb
pop
jo
cli
dec
out
loope
push
push
ret
divl
lock
clc
iret
cld
daa
imul
decb
out
aaa
xchg
mov
jnp
mov
loopne
xor
xchg
mov
or
lods
xor
les
icebp
js
clc
xlat
cmp
or
inc
mov
cld
fcomps
pop
lds
insl
out
inc
fildll
mov
sbb
ljmp
mov
pushf
cltd
repnz
int3
inc
adc
adc
cmp
out
nop
cmp
lds
imul
scas
nop
cmc
in
xor
in
dec
sub
xchg
std
mov
fcmovbe
or
aam
in
mov
push
mov
inc
pushf
lds
out
lods
mov
or
inc
push
fs
xor
insb
movsl
jmp
cmp
push
mov
mov
jmp
into
xchg
stos
mov
sarb
ficoms
pop
jae
pop
mov
adc
ret
mov
mov
outsl
mov
fsubp
sahf
int3
pop
iret
cmp
and
adc
push
push
adc
cmpsb
shlb
inc
pop
repnz
inc
mulb
sbb
mov
jb
push
xchg
xorl
jge
lret
xor
out
rcrb
sub
xchg
adc
fisubrl
mov
lret
jg
test
jo
mov
in
xchg
repnz
movsb
jg
mul
aad
add
std
iret
push
cmp
or
push
stos
enter
cmpsb
sub
and
push
add
ja
ljmp
pusha
ja
jg
push
dec
outsl
out
cld
mov
imul
fidivrs
xchg
mov
mov
and
dec
out
jp
xor
xrelease
or
xchg
lret
mov
test
jle
iret
ret
cmp
adc
and
ret
pop
out
ja
pminsw
adc
mov
adc
mov
sbb
lea
lcall
outsb
into
cmp
or
cmp
push
in
mov
pop
fwait
xrelease
out
add
add
stos
nop
mov
mov
test
mov
js
into
bndstx
mov
icebp
jns
aaa
mov
out
pop
mov
dec
push
rolb
scas
loope
daa
es
int
xchg
data16
adc
rcl
sub
lret
push
test
out
int3
jae
push
lret
cmp
in
push
ret
imul
jbe
cwtl
cmpsb
mov
push
push
lea
sbb
push
and
int3
push
test
bound
and
mov
pop
jle
adc
or
pop
inc
xchg
dec
rol
icebp
pop
xchg
mov
aas
xor
cltd
sbb
test
jae
mov
dec
xchg
aam
xor
lret
scas
notl
mov
dec
rorb
adc
jecxz
cltd
inc
inc
xor
test
movsl
mov
xchg
or
test
pop
clc
inc
imul
test
in
fwait
movsl
cmc
inc
xchg
rcrl
movsb
and
push
outsl
lock
push
clc
and
inc
or
rorl
pop
mov
pop
test
sbb
pop
add
popf
push
mov
or
loopne
fbstp
xchg
xchg
lcall
xchg
dec
loop
ror
pusha
inc
pop
test
or
daa
pop
ficoms
push
scas
jl
pop
dec
shlb
mov
cmp
cmp
mov
jno
pop
jmp
shr
mov
jp
aaa
jp
inc
test
es
add
insb
ja
dec
dec
or
add
cli
sub
pop
addr16
out
push
cmp
out
and
jnp
fisubs
movl
xor
cmp
mov
push
sub
cmc
xor
lret
aas
push
xor
mov
cmpl
ror
add
mov
lret
call
in
test
jne
sub
arpl
sbb
push
in
es
xchg
add
push
sub
mov
dec
test
mov
icebp
push
jp
stos
adc
shlb
stos
incl
jbe
xchg
xchg
pop
inc
mov
add
mov
xorb
nop
fcoml
inc
mov
repz
mov
iret
lds
and
xlat
xor
sbb
inc
ds
cwtl
in
out
je
rolb
pop
out
mov
inc
jmp
cwtl
test
bound
scas
or
inc
jg
test
repnz
mov
popf
ror
jnp
and
jns
xlat
sub
mov
add
push
jmp
enter
add
or
rcrb
stos
push
jge
cwtl
lret
pop
xchg
std
xor
pop
dec
lret
xlat
jmp
bound
mov
sub
ljmp
ret
call
popf
push
cmp
into
and
cmp
popf
add
test
dec
mov
enter
jnp
sbb
sbb
orb
int3
mulb
mov
mov
popa
pop
in
data16
insb
out
mov
adc
lods
test
leave
xchg
lea
sarb
shl
sbb
lahf
or
xchg
imul
sti
pop
mov
jnp
push
dec
pop
in
add
add
sbb
inc
cld
popf
and
add
add
imul
andl
xchg
rclb
inc
ficomps
in
je
mov
outsb
mov
push
adc
mov
xor
lcall
mov
dec
mov
jecxz
jb
adc
pop
insl
imul
lds
notl
xor
mov
outsl
cmp
push
adc
scas
test
lods
push
adc
push
push
cmc
and
scas
out
clc
cmpsb
xor
jl
insl
lahf
pop
int3
in
call
stos
mov
pushw
mov
repnz
push
jp
sbb
mov
popf
rcrb
ja
imul
ret
lods
jne
or
mov
sbb
pop
and
cmp
popf
inc
fdivrs
jno
adc
xor
es
fmuls
add
mov
push
imul
test
mov
push
scas
aad
add
push
int
leave
scas
aas
aam
je
imul
sub
enter
sub
xlat
stc
xchg
pop
stos
mov
jae
cmpsb
test
call
lret
sbb
add
pop
repnz
mov
pop
test
outsb
pop
push
sbb
aas
pushf
lret
dec
sahf
es
xchg
gs
dec
data16
dec
rorl
adc
in
std
lock
push
and
loop
mov
ss
mov
test
jbe
xchg
test
adc
push
dec
and
adc
pushf
adc
mov
adc
test
sti
iret
inc
or
cmp
jb
jge
push
mov
and
xchg
pop
xor
dec
mov
imul
out
movl
outsl
inc
jl
out
add
stc
les
ja
mov
scas
rcrb
jge
inc
xchg
dec
xchg
pop
ja
add
jno
mov
dec
inc
adc
pop
aaa
scas
stos
and
xchg
adc
dec
stos
aad
mov
xchg
rorl
xor
dec
outsl
fstl
js
dec
add
dec
push
jecxz
movsl
mov
sahf
jecxz
ss
leave
out
loope
ret
scas
adc
pop
lret
pop
sbbl
mov
mov
sub
aas
fidivrs
mov
xor
mov
adc
adc
cs
add
pop
idiv
xor
add
push
insb
lds
push
jecxz
lret
popa
cmpb
pop
daa
pop
jmp
cmp
mov
out
inc
outsl
loopne
ud1
ss
clc
xchg
jne
ds
push
and
push
sbb
push
adc
xchg
repz
pop
jg
push
repnz
fsubr
aam
imul
push
jmp
xchg
adc
cmc
pop
xlat
mov
nop
jg
push
mov
movsl
mov
push
and
push
in
fisubl
aaa
jg
faddl
insl
jo
mov
xchg
jecxz
or
xchg
shll
aaa
mov
out
xchg
nop
inc
pop
lcall
pop
and
mov
out
jecxz
mov
stc
outsb
out
inc
jb
add
inc
pop
sbb
out
lods
cli
arpl
rcll
add
push
bnd
je
xor
cltd
inc
loope
jnp
out
sbb
add
dec
add
fs
xor
sbb
fldt
je
lock
fwait
ljmpw
and
daa
pop
test
xor
mov
pusha
sub
sti
fwait
or
or
mov
cld
test
and
repnz
push
out
jecxz
or
add
popa
das
push
or
lds
pop
popa
shrl
addr16
mov
repnz
adc
test
push
pop
push
xorl
xchg
jg
jp
push
sbb
out
sbb
pop
leave
test
jmp
dec
loope
imul
in
mov
jb
sub
xor
mov
dec
sahf
popf
in
adcl
jb
les
ja,pt
inc
and
into
mov
std
adc
decl
sbb
jge
mov
and
ds
jne
xchg
dec
mov
lret
les
mov
mov
rcr
cmp
stos
pop
mov
push
xlat
or
std
sbb
adc
xchg
scas
push
int3
inc
call
xor
iret
mov
das
or
stos
call
sub
das
jno
xchg
cld
dec
xchg
adc
sub
mov
pop
mov
loop
push
and
jae
mov
xor
pop
sub
loope
scas
enter
jp
daa
pop
rorl
jb
loopne
daa
and
jmp
and
pop
mov
int3
mov
cmpsb
add
mov
add
mov
jmp
push
int
adc
pusha
xor
cmp
adc
xor
iret
sbb
das
es
jae
dec
pop
out
push
cmpsb
test
add
xor
dec
imul
mov
test
adc
movsb
js
repz
pop
or
jae
jae
lods
xor
je
cmpsl
lods
mov
lds
scas
sbb
push
push
and
popf
call
jae
rcll
lea
into
or
shr
mov
pop
add
or
jmp
aas
mov
sbb
dec
dec
adc
das
mov
push
jns
adc
xchg
and
aas
dec
fidivl
sbb
repz
dec
lret
cmp
cmp
in
jg
sub
lcall
insl
sbb
scas
aaa
inc
or
xor
add
xlat
lods
inc
dec
stos
push
sbb
push
add
enter
inc
xlat
sarl
test
int3
cmp
les
cli
xchg
jmp
inc
mov
cwtl
and
xchg
mov
xor
sbb
mov
test
and
jns
inc
mov
jge
adc
lds
pusha
cmp
je
jnp
pop
push
mov
in
xor
into
ret
adc
dec
push
imul
mov
stos
jp
xchg
jg,pt
sub
stc
and
mov
xchg
mov
and
sub
xchg
and
sti
ret
mov
out
test
sbb
and
jnp
jno
aad
mov
cmpb
cmp
test
or
out
or
mov
adc
insl
dec
inc
popf
mov
in
sub
mov
or
sti
imul
jo
mov
loop
sub
xor
stc
mov
inc
fimuls
pop
aad
add
inc
xchg
xor
fcomp
sbb
icebp
ret
ds
outsl
push
sbb
jno
fwait
cmp
sub
arpl
push
les
dec
mov
aas
jb
add
daa
and
test
jnp
pop
xor
jne
push
pop
mov
pop
xor
xchg
sub
loopne
push
inc
jnp
idivl
inc
pop
les
addr16
pop
jmp
xchg
mov
or
xor
fwait
mov
and
mov
xchg
pop
inc
test
xor
div
add
fidivs
mov
jno
sar
xor
enter
icebp
jle
int
inc
test
mov
hlt
mov
pushf
in
inc
sbb
inc
repz
sbb
mov
mov
loopne
rolb
inc
mov
es
incb
jge
xchg
in
hlt
and
mov
add
push
gs
leave
sub
out
flds
ds
adc
dec
adc
test
push
aad
nop
sti
mov
lret
pushf
cwtl
cli
mov
pop
push
ret
cmpsb
sbb
push
insl
sbb
loope
lahf
inc
or
jne,pn
cmpsb
xlat
aas
gs
sub
jmp
fs
adcb
mov
mov
out
inc
or
mov
or
dec
cmc
jp
dec
rorb
dec
inc
sahf
jle
sbb
adc
int
pop
dec
and
jne
repz
mov
mov
inc
stos
pop
mov
jp
cmp
xlat
push
xor
enter
scas
sbb
ds
xchg
sub
or
cmp
push
lea
cwtl
or
popa
mov
hlt
push
xchg
out
push
xchg
int
inc
ja
mul
ljmp
ret
sbb
cli
imul
or
cmpsb
xchg
je
or
flds
push
mov
sub
and
bound
sub
add
jae
fsubrl
js
inc
test
push
jno
daa
sub
shrb
jp
cmp
out
xchg
icebp
sub
xchg
mov
push
dec
mulb
movsl
or
fisubs
pop
mov
arpl
or
jl
and
pop
mov
js
jne
dec
ret
sbb
sbb
mov
jp
push
dec
push
sti
or
jp
enter
mov
mov
clc
jge
inc
xchg
pop
jae
mov
jae
in
cmc
rol
lock
jmp
out
vpaddb
add
mov
adc
or
jae,pn
bndldx
insl
or
jae
jne
stos
sub
ret
xorl
into
xchg
push
repnz
out
add
pusha
mov
das
adc
adc
or
jns
pop
dec
cmp
inc
roll
cld
mov
loope
jae
dec
sahf
aam
das
pop
xchg
rolb
scas
sti
pop
mov
push
iret
hlt
aam
stos
jecxz
dec
or
in
sub
mov
adc
xchg
notb
mov
sahf
xchg
mov
sbb
or
xor
jne
mov
xor
add
mov
enter
lldt
xchg
mov
test
sti
movsb
out
int3
ficompl
int3
mov
mov
dec
adc
push
mov
imul
xchg
cmp
mov
shl
push
inc
add
xchg
lret
push
inc
inc
addr16
repnz
mov
xchg
out
pop
inc
cmp
gs
push
pop
outsl
test
inc
push
negl
xor
mov
dec
je
mov
or
jne
in
mov
ja
xor
mov
mov
loope
mov
inc
sub
call
mov
sub
les
xor
cs
shll
dec
xor
cmp
inc
mov
or
cltd
shrb
fwait
add
cmp
push
ja
jle
and
add
addr16
call
jge
push
fisubs
cmp
movsb
test
mov
dec
sub
jo
or
mov
pop
sbb
dec
inc
popf
lods
push
sub
ja
ret
mov
xor
sbb
push
pushf
nop
push
pop
or
fnop
xor
add
sbb
loope
add
in
fldpi
into
or
jl
jmp
inc
dec
fwait
inc
cmp
adc
shlb
testl
mov
cmp
stos
or
mov
pop
cs
push
nop
insb
daa
dec
sbb
jge
stos
inc
lret
add
out
mov
xor
push
addr16
gs
xor
pop
inc
shll
js
inc
lods
lahf
inc
mov
andb
sub
xor
loopne
mov
pop
xor
cmp
data16
nop
jae
aad
into
popf
adc
and
sub
jbe
lea
fdivs
lret
add
mov
cs
scas
es
stos
rcll
lods
je
adc
outsb
dec
cmpsb
inc
cld
sub
lods
shl
mov
xchg
scas
push
jo
dec
lahf
jne
cmp
xor
ss
inc
inc
mov
pushf
lds
das
push
cmp
test
jp
fcoml
and
cli
push
push
mov
push
mov
and
adcl
subl
fnsave
xchg
push
gs
lock
lahf
outsl
test
int3
add
jno
je
iret
mov
mov
xor
mov
and
mov
ja
cmp
adc
push
stos
cmp
or
xchg
pop
rorb
and
push
mov
into
lods
les
cmp
je
test
jmp
mov
sahf
sub
add
xchg
mov
jae
and
mov
mov
lock
fmull
adc
add
testb
icebp
insb
rcrl
js
jmp
mov
and
cmc
adc
js
outsl
cmp
jecxz
push
push
cmp
aam
push
xchg
push
sahf
imul
lahf
xchg
popf
stos
fcoms
ljmp
xchg
push
dec
stc
and
lea
clc
adc
xchg
pop
or
daa
negl
bound
fidivl
cs
inc
sub
adc
daa
call
adc
cmp
cmp
popf
daa
jns
sbb
cli
xor
push
cmpsl
mov
push
sbb
or
push
mov
sbb
and
js
ficomps
test
push
inc
lret
jnp
and
out
cmp
push
cmpsl
adcb
mov
mov
pop
mov
mov
adc
cltd
mov
loopne
mov
add
mov
in
push
push
scas
lret
pushf
inc
mov
mov
pmaddwd
rorb
lock
cmpsl
cmpsl
lret
cld
xor
adc
mov
adc
adc
roll
or
sbb
stc
data16
in
js,pn
sti
push
sbb
lahf
js
sarb
test
jg
inc
pop
lock
mov
nop
es
ret
xor
cmovno
and
daa
lods
xor
inc
loop
jo
subb
adc
jp
loope
cmpsb
add
mov
jg
aaa
push
arpl
mov
outsl
test
out
cli
pop
adc
hlt
lea
fsubrl
mov
push
shll
daa
jmp
mov
xor
ja
mov
movsl
test
push
sbb
adc
or
movsl
fsubl
mov
test
sbb
push
or
shlb
fcompl
nop
ljmp
jp
mov
jne
jecxz
inc
and
pop
mov
jb
imul
xor
loop
xlat
xor
pusha
and
inc
out
pop
testb
add
les
inc
jno
mov
js
mov
cwtl
dec
or
mov
push
jne
adc
xor
mov
lods
ret
ljmp
loope
mov
jno
outsb
mov
sub
dec
movsb
cmc
add
push
mov
pop
mov
mov
pop
push
adc
pop
mov
int
jo
push
and
push
fsts
pusha
inc
and
das
call
xorl
pop
pop
sahf
daa
add
repnz
dec
retw
into
repz
test
adc
into
faddl
test
jmp
jmp
scas
sub
int3
xchg
pop
xor
shll
js
mov
sti
pop
cmpsb
or
mov
or
enter
bound
inc
mov
je
pop
nop
push
stos
mov
iret
inc
sub
movsl
inc
cmp
mov
xchg
mov
js
jbe
xor
or
nop
pop
lret
aaa
jne
mov
pop
push
popa
pushl
mov
fisubrs
ret
pop
sub
mov
sub
mov
mov
sub
add
push
loope
mov
and
jle
xlat
lahf
xor
insl
fstl
ret
pop
mov
sti
cs
sarl
addb
test
movsl
call
jae
hlt
es
mov
cld
aam
lcall
or
int3
stos
int3
lret
or
xchg
nop
or
or
inc
ljmp
in
jns
test
xchg
aas
lret
jmp
cltd
notb
ret
xchg
test
mov
in
imul
test
movsb
loopew
mov
notl
cmp
subb
lods
mov
jge
imul
mov
int3
and
pusha
add
cmp
jae
int3
lahf
inc
aas
pop
push
test
add
rorb
mov
lret
push
mov
push
imul
cmc
addr16
mov
sub
imul
mov
test
jge
lcall
xor
and
addr16
inc
sbb
mov
addr16
and
ss
pop
jecxz
mov
xchg
loope
or
cmp
push
insl
imul
cli
sub
movsb
jne
dec
shlb
jmp
sbb
mov
dec
mov
push
xchg
lret
rolb
pop
mov
or
int3
test
add
js
mov
cli
js
mov
iret
out
dec
pusha
scas
add
scas
push
sub
lods
mov
movsb
add
cmovl
push
pop
push
sarl
addr16
ret
jmp
and
sbb
add
outsb
xchg
or
test
insl
testl
fnstenv
out
das
mov
lahf
outsb
jb
xchg
cld
mov
shll
iret
mov
sub
xchg
dec
pop
pop
mov
mov
jmp
add
pop
push
gs
jae
into
mov
xchg
and
daa
lods
cmpsb
jmp
sbb
lea
sbb
in
jo
sahf
mov
js
ss
ret
dec
push
push
cmp
cmp
ficompl
mull
lret
clc
adc
mov
mov
in
jmp
mov
ficoms
loope
pusha
push
jg
dec
adc
out
daa
dec
repz
ret
fistpll
and
xchg
push
stc
push
mov
cmp
cwtl
push
jecxz
jp
cmc
mov
xor
lock
sub
xor
das
repnz
dec
xor
adcb
pop
cmc
clc
jmp
sbb
add
fstpl
mov
fdiv
push
xchg
pop
ret
sub
jp
push
hlt
in
sbb
jmp
mov
das
jge
iret
pop
cmp
mov
sbbl
lret
aad
jecxz
mov
movsl
imul
or
or
rol
imul
jle
cmovl
sahf
into
fnstcw
rcrb
lcall
add
mov
and
loop
aas
jge
pop
add
lahf
and
cmp
inc
in
test
push
xor
xor
and
push
imul
dec
iret
dec
mov
ds
fimuls
sahf
dec
ret
mov
mov
inc
notl
dec
jp
stos
mov
fcoms
mov
ds
or
xchg
rcr
push
adc
cmp
gs
insb
movsb
mov
lret
jmp
roll
push
and
lds
enter
incl
cmc
sub
bnd
rclb
lcall
or
bound
fisubrs
cmp
sbb
insl
add
loope
mov
lods
or
int
adc
mov
xor
add
mov
pushf
out
push
mov
addr16
xor
xor
gs
adc
jmp
mov
flds
mov
lcall
gs
mov
inc
or
lods
push
inc
shll
movsb
fs
daa
test
aad
sbb
add
mov
adc
and
and
iret
fucom
xchg
or
loopne
mov
bound
pop
cmpsb
mov
fistpll
mov
int3
mov
dec
push
dec
test
add
and
lods
imul
fcmovnu
mov
dec
mov
clc
sub
rcrb
mov
add
inc
test
sbb
faddl
push
popf
lods
adc
sbbb
scas
add
jno
lods
lods
push
rcl
xor
js
dec
sub
sbb
add
in
icebp
sahf
out
or
dec
mov
outsb
cmp
out
roll
mov
test
js
dec
ss
xchg
loope
enter
movsb
addb
jne
push
jg
jns
inc
out
leave
cmp
out
mov
sbb
mov
cld
lcall
add
pop
lea
cbtw
mov
adc
scas
cmpsl
xlat
inc
xchg
enter
int3
aad
or
push
arpl
inc
imul
jns
cltd
cmp
imul
call
es
cmc
jp
mov
mov
add
fdivs
mov
mov
leave
cmp
fdivr
push
cld
push
pusha
cld
jo
pop
std
inc
mov
or
repz
aaa
addr16
int3
and
jle
xor
lret
mov
mov
cmp
cmp
pop
push
fidivrl
jl
stos
mov
test
adc
test
mov
out
add
xchg
jecxz
jbe
in
fcoml
outsl
jbe
xchg
inc
jecxz
jl
mov
inc
ljmp
jmp
call
mov
adc
loop
sub
loop
sbb
push
cmpsb
pop
lahf
jb
inc
lods
mov
int3
inc
dec
adc
dec
or
push
movsb
out
mov
lahf
xor
aam
cmp
inc
fmull
sbb
lret
jg
mov
ss
out
in
mov
pop
sub
jmp
adc
adc
add
inc
inc
sbb
loopne
cli
scas
push
pop
xchg
ret
cwtl
xor
jnp
scas
out
or
cmc
fs
push
mov
scas
adc
aam
cwtl
adc
push
fcoms
das
popa
or
lret
int
push
xor
jp
icebp
sbb
cmp
cwtl
cmp
and
mov
addr16
dec
dec
rcrl
fnstsw
vminsd
mov
in
insb
cs
jno
xlat
push
lds
xor
and
jne
jg
inc
cmp
push
cld
mov
lahf
inc
jne
imul
xchg
xor
mov
jecxz
rclb
insl
push
xor
inc
inc
out
test
ss
out
cld
add
mov
std
adc
popf
cld
add
fcoms
mov
stos
fs
ret
movsb
ret
xor
fisubrs
mov
js
or
fcomp
lds
jne
imul
mov
mov
test
pop
pushfw
fisubs
lock
lret
decl
cmpsl
mov
push
add
nop
shrb
sub
leave
enter
add
fs
dec
data16
mov
xchg
cli
pop
sbb
mov
lret
add
adc
aaa
and
add
xchg
inc
sbb
mov
popf
test
sbb
clc
aad
xor
jns
pop
adc
ret
movsb
inc
insb
pop
sahf
xchg
xchg
mov
sbb
pop
or
mov
jecxz
add
push
mov
inc
inc
push
daa
movsb
or
sub
stc
pushf
sub
mov
mov
mov
dec
inc
dec
and
js
call
outsl
mov
cltd
pop
sub
xor
pop
loope
mov
cmc
cmp
mov
cmp
xchg
push
icebp
adc
sbb
arpl
pop
mov
aad
dec
negl
dec
int
dec
lock
cmp
push
ret
test
cld
mov
pop
test
jge
or
aaa
iret
pushl
dec
push
push
out
mov
and
ror
bound
and
and
js
or
test
jns
or
fs
xor
sbbl
jmp
jnp
and
in
pop
test
sub
clc
cmc
das
negb
je
lods
mov
dec
mov
or
sub
push
xchg
dec
hlt
dec
and
sub
or
dec
pushf
aad
fadd
loope
cmpsl
les
repnz
ret
mov
xor
enter
enter
jp
push
and
sahf
icebp
cmp
cmpb
in
and
test
jo
loopne
sbb
fs
jecxz
repz
mov
dec
movsl
movsl
push
mov
mov
loopne
scas
inc
stos
fcomip
xor
int
jg
inc
push
push
daa
jmp
xchg
add
lods
cmp
popa
dec
rcr
cwtl
lret
insb
hlt
mov
xchg
aas
fimuls
test
cmc
mov
sub
and
pop
test
lahf
push
jge
lods
jmp
and
in
dec
icebp
cmp
xchg
leave
sahf
lock
mov
inc
les
adc
xchg
stc
in
fiadds
jge
push
cmpsb
adc
inc
mov
aas
sub
arpl
push
repnz
sti
cmp
das
fnsave
add
shl
loope
add
push
outsl
sbbb
movb
xchg
cmp
cltd
sub
inc
mov
ds
popa
push
scas
cmp
push
add
add
sbb
cwtl
mov
dec
sbb
adc
or
push
sbb
repnz
rol
test
pop
iret
loopne
pop
fcompl
pop
cmp
sbb
pop
jmp
pop
pop
mov
adc
movsb
jno
sbb
and
sub
xor
arpl
mov
mov
adc
repnz
movsb
push
repnz
cmp
scas
lds
inc
jmp
jmp
jl
add
inc
pop
lahf
pop
fcompl
sub
ds
jns
int
popa
sahf
rorl
out
ja
movsl
repnz
shrl
fistpl
sbb
adc
cmp
sbb
mov
iret
divl
dec
insl
push
ljmp
pop
xchg
cld
sub
cmp
lret
push
mov
push
pop
xchg
jne
mov
mov
mov
scas
test
es
pop
sub
xchg
shrb
out
stc
arpl
lds
fldcw
sub
or
in
lods
aad
push
enter
sbb
lcallw
jle
addr16
stos
mov
sub
scas
mov
loop
and
fwait
stos
jle
arpl
lret
pushf
mov
shll
mov
insl
pop
fcoms
mov
repnz
shl
into
aaa
ds
mov
xor
xorl
push
sub
mov
cmp
mov
call
stos
mov
jbe
and
push
inc
xor
mov
add
push
inc
shll
cmp
in
jmp
negl
sbb
dec
and
out
cwtl
xchg
sbb
sti
insb
ds
hlt
scas
sub
mov
pop
mov
mov
mov
xchg
cmpsl
jl
mov
jo
xchg
int3
jecxz
mov
in
pop
mov
pop
or
mov
inc
mov
test
and
sub
aaa
lods
sbb
lods
xchg
jae
nop
ds
std
sbb
pop
aam
mov
call
imul
and
jmp
into
jecxz
fmul
js
dec
jne
or
push
cld
lret
hlt
filds
das
inc
cli
pop
cli
pop
push
mov
inc
mov
in
mov
into
push
mov
xchg
or
pop
inc
in
inc
or
fbstp
mov
jl
leave
or
dec
inc
cli
adc
mov
jne
mov
repz
dec
adc
jbe
out
ja
addr16
loop
xchg
mov
fdivl
test
xor
push
inc
pop
pop
js
push
pop
pop
mov
ret
push
in
std
das
dec
mov
dec
push
mov
jl
jp
repnz
or
sub
bound
sahf
out
mov
popl
cli
push
fidivrs
and
dec
add
frstor
sarb
stc
ficomps
jb
and
or
and
pop
sub
fadds
and
cli
and
push
sub
outsb
stos
pop
rcr
cli
data16
mov
dec
push
mov
stos
sarb
pop
pcmpeqd
aaa
cmpsb
push
std
nop
in
adc
push
push
sub
mul
cwtl
arpl
sub
fisubl
adcb
and
cld
cli
js
call
cs
out
sarb
jns
ljmp
add
data16
xchg
mov
sbb
inc
adc
jmp
insl
xor
sbb
aaa
cmp
mov
mov
mov
and
and
iret
data16
es
sbb
fsts
nop
sub
xchg
jl
and
inc
and
cmp
fldl
mov
cmp
pop
jbe
lock
pop
pop
neg
xor
adcb
ret
test
fcmove
sbb
insb
dec
add
mov
xchg
pop
add
add
inc
popf
push
dec
mov
sbb
sbb
xchg
push
enter
add
aaa
js
outsb
or
lret
xchg
mov
pop
daa
jne
jl
push
sbb
or
mov
ret
scas
push
je
pop
movsl
xor
mov
add
pop
cli
lods
cmp
mov
shl
cmp
push
pushf
add
ljmp
xor
das
sbb
mov
testb
movsb
insl
popa
inc
divb
int3
or
cmp
xor
push
fists
mov
test
lret
dec
es
mov
and
ret
mov
mov
stos
xchg
cs
insl
adcl
es
movsl
push
lahf
push
ror
lea
imul
add
into
dec
or
mov
xlat
cltd
fildll
incb
mov
ljmp
mov
adc
mov
inc
pop
adc
adcl
out
stos
jnp
dec
int3
ret
cmc
repz
cmp
jnp
dec
arpl
pop
andb
jb
outsb
js
sub
rorl
shrb
fidivrl
push
lea
inc
mov
sub
aam
inc
and
ljmp
adc
clc
out
stos
je
xor
lods
enter
pop
cmp
jp
icebp
sti
sub
sbb
and
cld
mov
xchg
aad
sub
xchg
mov
fmuls
lods
adc
testl
ja
jbe
mov
add
lahf
pusha
or
sub
into
leave
fs
sbb
insl
imul
sub
icebp
cmp
insl
inc
inc
mov
cli
mov
out
or
ja
nop
enter
out
pusha
fldl
mov
mov
aad
mov
mov
aam
call
scas
add
jmp
test
xchg
nop
orb
out
xchg
jl
or
aas
mov
lds
add
jle
xchg
mov
lds
and
out
sub
insl
lcall
push
inc
pop
xchg
inc
repz
inc
adc
mov
xchg
add
ds
divl
fimull
and
bound
cmp
mov
pop
inc
mov
dec
insl
pop
data16
cmc
sub
add
js
cs
test
mov
dec
sub
inc
pop
sbb
fs
movl
fiaddl
aad
movsl
fwait
ljmp
and
rclb
out
pop
outsb
js
sbb
add
daa
imul
int3
xor
sti
jo
cmp
jg
rorl
jl
inc
cmp
cmp
adc
test
enter
or
lea
andl
pop
stc
mov
mov
fnsave
xchg
sbb
add
push
xlat
dec
dec
pusha
aaa
jbe
mov
fnstcw
xchg
fcompl
or
call
sbb
addl
sbbl
mov
push
and
push
loop
jae
inc
and
inc
shrb
aas
stc
xor
les
call
jnp
pushf
adc
jmp
jle
and
lcall
and
jle
push
js
gs
insb
pusha
mov
jne
xchg
cmc
bound
inc
sbb
push
or
cs
aad
mov
icebp
in
inc
sub
dec
or
loope
mov
push
or
js
jl
sti
cmp
push
and
or
xor
xor
jo,pt
fisubrs
jp
shlb
mov
insb
dec
inc
rorl
cld
or
fwait
push
mov
xchg
cmc
rcl
into
jmp
pop
sub
out
hlt
sbb
mov
inc
sub
inc
sbb
and
cli
cs
jecxz
add
call
mov
adc
push
and
ljmp
push
push
test
xchg
sub
lods
loope
mov
fists
mov
icebp
mov
inc
jl
pop
mov
xor
inc
call
or
lcall
cmp
bswap
xor
in
loop
push
inc
add
add
mov
and
es
xlat
sub
icebp
mov
jno
jno
pop
adc
fs
test
add
xchg
adc
inc
daa
mov
sarl
dec
pop
jg
or
ljmp
mov
imul
int3
xchg
iret
xchg
cmp
lahf
mov
mov
xor
pop
test
adc
pushf
or
inc
xchg
repnz
mov
xor
fisttpll
daa
or
mov
mov
and
int3
popf
fmulp
jecxz,pt
xor
xchg
inc
jp
scas
cmpsb
mov
jge,pn
mov
cmp
test
inc
and
cmpsb
sarb
scas
int3
push
mov
popa
ret
adc
and
pop
jl
pop
xchg
and
call
repnz
jbe
ret
bound
enter
and
enter
mov
mov
cmpsl
sbb
inc
jecxz
push
sbb
cmp
ret
mul
inc
inc
pop
mov
pop
je
dec
mov
adc
pushf
mov
adc
mov
cli
mov
push
aaa
xor
loopne
sbb
mov
cltd
out
int
inc
lcall
inc
mov
mov
lods
mov
lea
inc
aam
aaa
iret
mov
stos
xlat
loopne
pop
sbb
cmpsl
pop
ret
notb
fsubrs
sub
adc
xchg
or
das
les
jnp
test
pop
pop
jbe
and
mov
dec
int
cwtl
mov
mov
test
fcompl
jecxz
pop
in
in
stos
lds
pop
scas
mov
add
add
jae
jle
aad
outsl
cmpsb
mov
mov
push
lcall
incl
inc
inc
fwait
pop
loop
dec
xchg
gs
movsl
dec
stos
push
fstl
push
sbb
mov
sbb
cs
inc
xchg
mov
sahf
jo
mov
imul
lcall
cmpsb
mov
mov
fidivs
push
adc
lahf
test
and
lret
int3
sar
int
mov
sub
js
insl
mov
gs
movsl
pop
into
mov
lret
mov
jae
dec
leave
sub
mov
inc
shlb
sub
sbb
in
aad
lret
mov
pushf
sub
jae
sub
xchg
xchg
jmp
xchg
clc
fs
insl
nop
fs
pavgw
sub
jecxz
mov
pop
daa
push
pushf
sbb
mov
sub
add
push
icebp
mov
jl
and
push
stc
mov
nop
test
pop
cmp
add
ljmp
or
insb
ret
je
sub
jne
lahf
sbb
mov
adcl
inc
inc
mov
jbe
clc
loope
mov
in
cmp
shlb
mov
jg
movsb
inc
jne
xchg
dec
in
dec
scas
pushf
pop
hlt
xchg
outsl
arpl
lods
push
push
sbb
subps
repnz
xchg
sbb
mov
mov
dec
test
cli
push
pusha
fucomp
or
pushf
push
xor
xchg
mov
pop
add
dec
dec
pop
test
xchg
mov
in
out
outsl
jno
xor
lret
mov
add
pop
or
and
int
ja
jns
ja
into
in
dec
and
mov
xchg
repnz
add
cli
jns
loop
mov
int3
test
daa
pop
imul
je
out
push
arpl
xlat
pop
jecxz
inc
jecxz
xchg
shll
push
mov
dec
cmp
sbb
sub
xchg
jne
lds
aaa
xor
subb
jo
pop
dec
loope
imul
and
and
cmp
sti
xchg
loope
into
ret
xchg
pop
popf
mov
sub
and
pusha
push
stos
sbb
clc
arpl
xchg
mov
jns
jp
ret
lret
nop
stos
sub
mov
xchg
mov
sub
insl
jbe
pop
inc
mov
loopne
enter
sbb
jg
pop
xor
pop
add
add
or
aas
test
aas
es
xchg
stos
repnz
sbb
rclw
lock
popa
push
sub
call
inc
in
fnstsw
daa
dec
ljmp
sbb
add
out
or
aas
add
mov
ss
mov
adc
aas
mov
int
xchg
mov
mov
rclb
jle
mov
push
fistpl
mov
adc
pushf
rolb
jno
ss
rclb
add
loope
addb
mov
push
icebp
sbb
incl
mov
or
xchg
sahf
push
sub
lods
xchg
rcrb
aas
or
mov
push
mov
ja
xor
imul
out
fsubp
lahf
int3
aaa
push
imul
dec
xor
sbb
daa
xchg
push
lcall
push
jp
std
insl
movlps
fimull
add
jmp
cmpsb
add
or
stos
cs
popf
lahf
pop
or
mov
frstor
scas
sbb
push
push
cld
fs
push
adc
cmp
icebp
arpl
dec
mov
idiv
aam
hlt
xchg
mov
stos
ja
jns
mov
pop
daa
rcl
jae
mov
mov
add
push
je
out
jno
inc
mov
jnp
insl
or
addr16
icebp
sahf
outsb
jns
jge
mov
mov
dec
lods
stos
lahf
push
ja
cli
dec
out
mov
int3
icebp
mov
sbb
cmp
in
mov
ret
pop
sbb
push
lock
cmp
into
fsubr
pop
sbb
clc
or
ljmp
scas
pusha
lds
adc
dec
dec
dec
pop
xor
dec
cmpsl
mov
lret
push
data16
xchg
cmc
add
adc
imul
cmp
mov
fisubrs
imul
xor
in
pop
jmp
xor
push
jmp
insb
out
fcomip
jns
ds
xor
imul
jg
outsb
fxch
or
sti
adc
test
jle
cmpsb
mov
jge
rcl
cmpb
xlat
js
jnp
rcrl
sbb
cli
cmc
jno
ret
push
push
fwait
fwait
xchg
push
jo
xchg
nop
mov
mov
fldl
inc
inc
inc
jbe
adcb
mov
stos
or
add
cmpsl
jno
mov
cmp
ljmp
sub
xor
test
mov
jno
arpl
and
dec
std
insl
repz
mov
pop
add
sbb
daa
mov
mov
xchg
xlat
mov
jmp
lret
daa
ret
je
xlat
mov
or
xchg
push
ljmp
stos
lret
and
loopne
xchg
cltd
pop
fdivp
jns
shrb
popf
fsts
mov
cmc
sarl
sub
push
ss
push
inc
mov
adc
pop
jp
stos
sub
stos
mov
and
mov
ret
ret
sbb
inc
ljmp
and
insl
out
pop
pop
push
mov
hlt
add
and
movsl
test
mov
lret
out
cs
and
sti
dec
hlt
psubsb
jnp
cltd
push
xor
std
roll
mov
cmp
push
gs
test
add
popa
mov
arpl
jbe
ret
iret
notl
sub
or
testl
out
das
xchg
test
and
xor
mov
mov
xor
mov
jno
ss
lahf
adc
sbb
popf
or
test
cli
pop
lret
xchg
call
pop
mov
jecxz
daa
aaa
and
cmc
adc
inc
pslld
sahf
cmp
lods
jecxz
lcall
cli
mov
bound
pop
cld
adc
jecxz
ljmp
jmp
cmp
cwtl
jbe
loopne
cmp
xchg
js
add
add
push
jo
imul
and
repnz
jmp
push
mov
imul
data16
lock
adcb
push
icebp
add
shlb
cld
inc
push
ror
pop
adc
push
insb
sti
pop
inc
fadds
testl
xchg
pop
hlt
popa
arpl
sub
cmpsb
pop
xor
or
scas
push
jl
bound
je
xchg
push
test
add
fdivrs
push
dec
test
clc
cwtl
mov
push
int3
out
stos
enter
lock
sub
add
or
push
lahf
mov
cmp
cli
bound
sbb
mov
mov
cmp
jp
shrb
inc
out
pop
xchg
stos
iret
data16
stos
add
frstor
jno
insb
clc
xor
pop
jno
jmp
mov
xor
mov
iret
xor
das
mov
mov
lahf
stc
je
and
out
data16
into
lods
jno
cli
mov
jnp
xchg
repnz
adc
iret
jae
shlb
xchg
xor
xchg
push
mov
sahf
lret
mov
fidivs
cld
rcr
adc
inc
or
fcomps
aas
sub
xor
xor
adc
dec
mov
clc
sahf
or
xor
pusha
sub
jne
rorb
sub
hlt
std
push
mov
adc
int3
iret
or
jb
cmp
or
inc
lcall
and
add
pop
je
cmp
js
inc
mov
and
pop
jle
xchg
jb
or
cwtl
sahf
and
push
stos
cli
add
mov
out
push
bound
push
movsb
outsl
jle
mov
enter
sbb
fs
sub
mov
mov
cltd
sub
dec
cmp
xchg
pop
andb
int3
sti
add
aad
sub
or
pop
and
xchg
daa
add
mov
jge
push
enter
sahf
data16
push
cld
lret
js
cltd
test
jbe
in
lods
inc
shrb
insb
stc
out
test
push
xchg
pop
lcall
mov
jno
inc
pop
dec
mov
inc
mov
call
cmp
ret
adc
jl
sbb
inc
test
xor
jecxz
mov
sbb
dec
mov
jecxz
mov
ror
mov
mov
lret
mov
cmc
mov
adcb
dec
sub
aaa
lret
mov
push
cmp
or
mov
adc
pop
jp
test
sbb
xor
sub
dec
or
push
and
ss
jbe
dec
insb
cmpsl
js
mov
sub
aam
inc
jns
mov
push
or
imul
ds
in
sbb
hlt
mov
push
xor
jns
cmc
mov
fstps
scas
loopne
nop
mov
outsb
int
ja
int3
mov
cwtl
add
mov
aad
aad
mov
loopne
push
in
loopne
inc
rolb
pop
add
rdpmc
fcomps
cmp
sub
cltd
repnz
lods
push
aaa
insl
sti
out
jle
add
jbe
and
je
stc
inc
je
jno
pop
xchg
jo
lock
loopne
or
mov
sub
add
jmp
sbb
ja
loop
pop
jle
or
cmp
pop
arpl
stos
aad
scas
push
pusha
mov
shll
idivb
mov
mov
xchg
loope
leave
rorl
sbb
into
sbb
aam
movsb
sub
movsb
pop
outsb
cs
sub
lea
cwtl
mov
in
jmp
xor
idiv
cmp
sti
mov
loopne
lods
dec
fbld
bound
xchg
jns
and
dec
adc
pushw
jne
ficoms
xor
sub
dec
xchg
inc
scas
mov
andl
ffree
repz
fldenv
lods
inc
push
sbb
outsl
and
test
add
negb
lods
xchg
aaa
jns
pop
cmp
stos
dec
pop
dec
shlb
add
dec
or
mov
ss
popf
leave
xor
hlt
sub
lea
stos
shll
mov
jle
pop
adc
xor
inc
fimuls
jne
mov
pop
repz
xchg
push
jmp
jecxz
or
pusha
das
xor
mov
in
mov
add
int3
mov
jae
imul
mov
lahf
repnz
xchg
out
imul
andl
push
in
mov
jecxz
push
call
incl
xchg
mov
cmp
js
cmp
mov
mov
add
pop
int
sbb
out
sub
mov
add
fs
inc
push
sbb
pop
call
dec
jne
shll
jns
sbb
adc
add
ljmp
sbb
shrb
mov
or
jecxz
xor
jne
push
fcoms
inc
cmp
rorl
out
jecxz
push
push
sub
xor
scas
aad
rclb
sub
dec
mov
shl
movsl
mov
push
clc
lret
incb
pop
push
fcmove
jnp
xchg
dec
cmp
ret
jg
fmuls
push
fildll
gs
mov
and
or
jae
popa
add
leave
in
movsb
sub
pop
mov
cmp
sub
xchg
add
insb
jno
push
test
lods
repz
cltd
push
xor
add
add
lods
daa
nop
add
adc
and
jbe
mov
jb
aad
jb
shll
jb
cltd
dec
push
mulb
iret
iret
es
mov
push
addb
mov
lret
sti
test
sub
sbb
mull
xchg
or
inc
idivb
push
adc
lret
and
cmp
int
inc
mov
std
sub
add
cwtl
subl
xchg
fimuls
mov
mov
pushf
out
mov
into
rcrl
add
mov
ljmp
mov
in
jne
stos
outsl
bound
or
mul
mov
jg
enter
fbld
mov
pushf
pop
jecxz
cld
add
test
push
movsl
das
shll
in
cmp
cli
or
pushf
xor
mov
push
mov
fimuls
outsb
ss
ljmp
fdivr
jecxz
xor
cs
cmp
pusha
jecxz
cld
mov
loope
mov
and
and
lock
cs
gs
mov
stos
sub
iret
jns
jp
sub
or
push
das
mov
test
cmp
sbb
push
in
aaa
sub
shll
jp
push
outsb
fldcw
cmp
jp
xchg
push
jl
cmpsl
pop
lcall
js
or
mov
sub
in
repz
sti
pop
arpl
je
bound
adc
js
lcall
stos
dec
shll
dec
and
lods
insb
lahf
sti
outsb
xchg
jno
xchg
pop
jne
push
lahf
dec
push
out
rcrb
lea
sub
mov
fs
xlat
push
inc
rorl
inc
and
es
call
stos
push
mov
cld
call
fwait
jb
out
cmp
pop
mov
push
popa
mov
pop
push
gs
bound
cmp
pushf
mov
mov
bound
je
ljmp
sti
cmp
pop
mov
js
jge
lcall
loope
clc
insl
data16
data16
loop
in
in
pop
sbb
scas
int
pushf
xchg
lcall
adc
push
les
insl
stos
jbe
or
mov
cmpsl
mov
jge
lods
mov
mov
fwait
inc
xor
loopne
lret
xor
xchg
jne
and
mov
jge
stos
sbb
in
mov
test
rorl
lds
das
mov
dec
pushf
cmp
sbb
or
rorb
test
add
mov
sub
sub
loop
lds
fisttps
pop
in
xor
push
pop
inc
xchg
jmp
dec
and
mov
jmp
insb
arpl
out
and
lock
out
adc
xorb
sbb
ljmp
aam
insl
div
bound
xor
mov
ror
xor
std
mull
outsb
stos
mov
insb
inc
inc
mov
xchg
sbb
mov
jbe
cmp
adc
sbb
stos
test
in
popf
sbb
mov
lds
mov
inc
arpl
dec
repnz
sahf
mov
dec
dec
fs
push
ffree
iret
scas
pop
mov
mov
pop
or
push
insb
sbbb
xor
insl
xlat
push
movsb
cmc
stos
addr16
push
daa
xchg
mov
cli
lock
jo
adc
int
rclb
out
jge
xor
mov
dec
in
push
mov
call
outsb
push
jne
aaa
std
cld
add
dec
cmpsl
stos
push
push
insb
xchg
lcall
xadd
jmp
mov
stos
cmpl
inc
in
imul
cmp
fcoms
pop
dec
mov
jnp
icebp
inc
dec
push
jl
lcall
and
pop
cltd
mov
mov
jmp
arpl
lea
fcompl
jne
jne
cwtl
mov
in
jmp
mov
dec
ljmp
jb
xor
add
dec
int3
test
lahf
enter
mov
mov
cltd
aaa
pop
adc
inc
mov
jns
adc
dec
xor
push
mov
clc
shll
mov
cmp
lods
pop
xchg
fildl
scas
pop
call
lock
in
loopne
pop
add
and
test
test
stos
stc
pushf
inc
sti
int
sub
scas
cltd
nop
popa
pop
test
roll
lcall
xchg
lods
and
or
aaa
pop
sbbl
cld
xor
xchg
xchg
negl
stos
xchg
xlat
jmp
add
rcrl
jmp
aam
ds
sti
push
mov
cmp
jb
mov
and
jo
lahf
mov
loopne
jecxz
popf
lods
add
inc
jno
adc
sub
cmc
shr
xor
sti
pushf
add
stos
push
aad
ljmp
popa
loopne
add
fnstcw
testb
lret
push
cwtl
xchg
flds
mov
and
xchg
cs
sbb
cmp
pushf
es
mov
add
xchg
shl
cmp
or
jns
jge
lods
push
add
sbb
inc
dec
xor
sub
xor
jl
in
sbb
rolb
in
sub
adc
mov
xchg
orl
inc
hlt
cltd
mov
add
es
add
mov
and
mov
jecxz
xchg
mov
int3
xchg
cmc
inc
loop
push
mov
mov
out
adc
movsb
popl
popa
outsl
bound
sbb
repz
dec
mov
sti
mov
dec
int
orl
in
xor
imul
adc
mov
pop
adc
push
scas
mov
mov
xchg
testb
rcrl
jle
xor
dec
and
push
inc
mov
inc
mov
pop
xchg
adc
xor
dec
rcll
inc
push
mov
lea
xchg
movsl
leave
outsb
xchg
or
and
inc
ficoml
push
fucomip
ret
lods
call
ret
dec
jo
adc
cmp
add
cmpsl
jmp
adc
fstp
popa
sbb
lods
into
icebp
aad
mov
xlat
dec
mov
test
fsubr
mov
or
insb
mov
fcompl
or
in
xor
aaa
mov
inc
jg
fisubs
pop
jae
jne
cltd
sbb
dec
cli
mov
inc
sbb
pop
mov
and
nop
lret
cmp
aas
mov
loop
cmc
repz
pop
rorl
icebp
nop
imul
pop
jge
mov
jmp
mov
push
test
mov
arpl
aam
xchg
sub
push
sub
pop
loop
cmp
lds
mov
dec
xchg
pusha
jp
push
and
xchg
sub
jmp
nop
sub
outsl
ljmp
adc
and
sbb
or
xchg
nop
clts
pop
cmp
testl
js
aas
stc
cmpsl
sub
inc
jno
mov
lret
push
jo
mov
mov
enter
or
sbb
xor
mov
inc
fnsave
add
scas
jecxz
push
inc
lret
fcmovb
imul
shrl
mov
pop
repnz
xor
pop
jno
test
dec
ficompl
and
sub
xlat
or
jno
cli
insl
xchg
clc
shl
jl
inc
inc
mov
int3
jb
andl
and
mov
dec
adc
ret
mov
push
fwait
sbb
loope
dec
cli
push
add
mov
shlb
inc
xor
pop
dec
xchg
xchg
mov
sbb
dec
in
lea
and
jmp
gs
jnp
in
adc
aas
push
lods
stos
lock
rcrb
loop
insb
pop
jg
scas
mov
cwtl
fistpll
outsl
leave
push
lret
and
xor
dec
add
negl
nop
jns
pop
fadds
loope
or
inc
push
pop
push
std
decb
xchg
jmp
insl
ret
scas
jle
xchg
outsl
pusha
jecxz
loopne
jmp
cs
sbb
cwtl
outsb
dec
fst
not
sub
lds
xor
sahf
fbld
or
data16
jne
pop
mov
fldln2
lret
fldt
incl
xchg
push
leave
leave
andb
dec
mov
add
cmp
and
jle
cmp
inc
xor
xchg
cmp
fs
sahf
fmul
out
enter
push
les
sub
in
mov
inc
outsl
mov
add
addl
dec
pop
sub
sti
icebp
mov
shrb
sysret
inc
aam
sahf
ja
lods
pop
shr
mov
sbb
rcl
push
mov
popa
mov
mov
push
adc
push
sub
fdiv
rcll
inc
aad
addb
pop
push
pop
mov
inc
jns
mov
jle
jecxz
loopne
xor
xorb
movaps
xchg
in
inc
jno
cmc
add
outsl
aad
add
jg
scas
movsb
or
imul
and
push
nop
pop
or
mov
pushf
dec
call
sbb
lret
jb
jae
xchg
loopne
jb
iret
ja
cmp
shll
mov
mov
inc
mov
imul
ds
cs
ret
sbb
add
jbe
aam
icebp
push
test
push
mov
js
clc
xchg
vphaddwd
nop
cmp
loope
jle
bound
add
cmp
cltd
clc
jne
fistpl
jmp
in
inc
inc
adc
out
std
mov
clc
dec
jecxz
jno
fdivs
cmpsl
mov
or
ficomps
orb
inc
bound
out
sub
sbb
sub
push
data16
add
push
push
in
add
mov
pop
sub
pop
jmp
and
push
jne
jae
xlat
jae
dec
cld
push
out
xchg
mov
sarl
cmp
lea
in
dec
add
push
inc
test
mov
into
les
fcmovnbe
mov
test
aaa
lcall
cld
sbbb
out
gs
dec
cltd
mov
inc
push
frstor
inc
repnz
cmp
frstor
hlt
cmpb
loop
call
xchg
xchg
mov
lcall
fucomi
dec
es
jne
push
or
push
aam
xor
cmp
ret
leave
xchg
pop
test
outsb
insb
lods
or
mov
in
sub
cmp
jge
adc
mov
cmp
in
adc
pop
xor
or
fstps
divl
sub
nop
or
mov
call
jbe
xor
call
jmp
cmpsl
xlat
mov
push
stos
bnd
inc
jmp
xchg
cwtl
ret
mov
dec
pop
adc
push
adc
push
sbb
dec
jmp
sti
das
cmp
jl
arpl
pushl
push
cmp
cmpsb
adc
hlt
cltd
nop
outsb
and
adc
xchg
adc
sbb
sbbb
mov
jl
push
adc
movsl
lea
testl
addr16
lahf
push
adc
pop
sbb
addr16
and
lods
or
jno
push
mov
imul
es
iret
cs
out
in
xor
into
push
int3
mov
jbe
iret
into
rolb
and
sbb
out
int3
jns
or
pop
push
loope
jl
push
in
cld
inc
jne
jo
testl
mov
jg
std
test
aaa
bound
push
add
inc
adc
jmp
cmp
push
dec
jecxz
mov
add
pcmpgtw
int3
repnz
stos
sub
gs
xor
call
fadds
mov
test
aaa
pusha
mov
fdivrl
lock
dec
imul
incb
stos
std
dec
jp
cmpsl
mov
ret
into
pusha
jne
rclb
inc
and
ja
cmpsb
push
xor
mov
push
loopne
adc
or
cltd
push
std
pop
pop
loop
mov
jno
icebp
xchg
stc
pop
mov
andb
pop
adc
loopne
or
push
adcb
rcl
mov
xor
dec
adc
inc
clc
jno
jge
jns
test
mov
dec
loop
data16
mov
dec
clc
adc
inc
fsts
or
add
xchg
mov
ror
dec
js
loope
jbe
cmp
dec
outsl
lret
adc
stos
scas
adc
jp
cmp
push
and
fstps
push
mov
xchg
or
cs
dec
sub
pushf
sub
test
push
inc
pop
mov
dec
pusha
xor
in
aam
fists
loope
shlb
cmp
out
adc
inc
repnz
sub
push
lahf
test
test
test
add
dec
xor
out
adc
adc
cmp
dec
sbb
call
cmp
sub
insb
pushf
andb
mov
cld
pop
mov
mov
jnp
mov
adc
push
push
cld
sar
mov
test
loopne
cmpsl
pop
sub
sbb
dec
andb
inc
inc
mov
xor
cmp
sbb
mov
xor
xchg
push
ficompl
or
and
mov
imul
inc
mov
sbb
lock
xchg
add
jo
ror
and
mov
bound
scas
jecxz
mov
cmc
adc
addb
movsl
mov
aas
jae
cmp
outsl
cmp
dec
push
gs
popa
into
repnz
mov
and
lds
mov
loopne
and
out
add
inc
orl
push
std
aaa
mov
orb
push
fisubrl
stc
insb
cmc
jns
mov
pop
movsb
mov
out
frstor
out
jae
sbbb
and
inc
andl
jae
or
sub
hlt
fs
push
bound
test
jno
lods
dec
mov
pop
add
mov
arpl
mov
out
rep
out
lret
adc
mov
inc
stos
xor
xor
cmc
in
and
add
loop
inc
inc
mov
lods
mov
adc
adc
ret
push
or
shll
loope
mov
jae
add
arpl
je
pop
pop
loopne
add
or
jl
mov
xchg
fldt
add
outsb
push
and
add
das
jno
test
nop
jmp
ljmp
pop
xchg
out
loop
sbb
jb
adc
int3
hlt
push
or
mov
in
repz
mov
leave
sti
jne
cmc
mov
ljmp
adc
pop
push
push
pop
dec
cli
push
ficoml
aas
xchg
xchg
add
sub
pop
std
mov
mov
int3
jae
cmp
lods
movsl
add
imul
repz
lcall
jbe
outsb
ja
and
push
mov
arpl
mov
mov
mov
add
cwtl
test
and
sbb
push
pop
arpl
fnstsw
push
xor
jb
loopne
xorb
mov
jmp
fwait
dec
push
lahf
dec
mov
call
dec
dec
repnz
cli
push
mov
rcrb
sub
fstpt
xchg
dec
cmp
inc
mov
in
lret
scas
bnd
sahf
sbb
stos
ja
lea
addr16
sbb
push
inc
mov
push
std
test
sub
ljmp
repz
imul
mov
movsl
mov
bnd
arpl
add
dec
xor
mov
insb
je
pop
insb
cld
shrb
and
push
lods
and
jl
inc
mov
out
je
enter
shrb
int3
pushf
or
adc
mov
mov
jae
push
jg
lret
mov
sbb
movsb
xchg
cmp
aaa
movsb
xchg
push
lret
sbb
pop
js
jb
outsb
mov
dec
rcr
or
dec
adc
les
stc
jne
push
fwait
dec
sbb
cmpsb
sbb
mov
lahf
push
mov
in
mov
push
outsl
ficoms
xor
fucomp
mov
out
sbb
jne
mov
test
sbb
in
adc
shl
cmpsb
outsl
mov
fisubrs
and
mov
or
hlt
inc
pop
pop
and
movsb
xor
andl
mov
stos
jg
sbb
daa
aam
nop
inc
xchg
mov
outsb
outsl
pop
sbb
mov
jp
push
int3
bswap
cmp
insl
xchg
cwtl
jo
jg
xchg
mov
in
pop
dec
dec
repz
adcb
pop
sbbb
test
jne
iret
popf
add
xchg
xor
sub
add
add
into
mov
data16
jmp
and
stc
and
xor
or
les
mov
sti
lods
les
outsl
lds
test
insb
adc
dec
aas
icebp
addr16
es
jne
mov
mov
add
stos
cltd
mov
xorb
fidivrs
ret
lea
sbb
data16
xor
dec
imul
or
scas
lea
ret
lret
dec
push
xchg
in
mov
pop
nop
pop
out
lds
mov
pushf
shlb
xchg
arpl
or
clc
pop
push
xor
scas
imul
lods
out
mov
push
roll
jmp
xchg
mov
pushf
push
pop
jecxz
or
jae
jne
pusha
test
dec
sbb
mov
into
sbb
test
add
iret
loopne
imul
pop
push
lret
mov
sub
mov
jb
and
les
xchg
jb
lods
cmp
ljmp
cmp
ret
jp
jle
jnp
inc
and
jl
xlat
jae
jp
jns
iret
scas
dec
push
xchg
inc
clc
mov
jo
fcmovnb
xorb
lahf
lock
jmp
dec
loopne
ret
mov
fildll
stos
cmp
cld
push
jge
das
fisubrl
xchg
dec
imul
mov
xor
decl
pmaxsw
int
cmp
popf
ss
js
sub
cwtl
cwtl
pop
lcall
push
fdivs
insb
mov
lds
sub
xchg
popf
jo
leave
les
sbb
js
dec
shll
sub
and
pop
ds
inc
insl
pop
movsl
adc
mov
shrb
pop
push
mov
cmp
jbe
adc
xor
inc
mov
mov
dec
movl
mov
mov
popa
or
jnp
mov
jg
mov
enter
rolb
insl
out
daa
xor
imul
ss
fiadds
fimuls
add
mov
rcr
lea
pop
in
data16
clc
lods
mov
fdivs
lcall
sbb
push
xchg
cmp
lods
ljmp
test
jmp
fcoms
dec
shrb
or
into
aad
or
jmp
sbbl
sbb
jns
xlat
push
push
jne
dec
sbb
xchg
test
mov
movsl
add
sub
lahf
ret
mov
cmp
pop
jmp
dec
sbb
mov
or
add
push
add
adc
sub
lahf
inc
mov
xor
adc
adc
ss
ljmp
jae
mov
and
add
push
into
pusha
adc
adc
aaa
jnp
ret
add
mov
movsl
shll
scas
rorl
lea
jp
add
imul
sub
js
insl
ds
mov
jle
out
sub
inc
jne
add
mov
adcl
jge
jb
es
ret
jecxz
cli
lea
or
push
cwtl
cmp
jp
icebp
sub
or
or
sbb
inc
xor
jae
jno
shrl
scas
sbb
mov
pop
push
sbb
push
dec
sub
push
jmp
loopne
dec
push
add
mov
in
and
mov
pop
jmp
test
and
out
and
dec
test
lods
cs
int
fld
sahf
mov
add
inc
popf
pop
jecxz
sbb
call
xor
adc
imul
pop
into
mov
pop
mov
and
pop
fs
pop
sub
xor
jae
sbb
sub
repnz
mov
mov
sub
das
push
fcmovbe
daa
loop
or
cltd
push
adc
or
xchg
loopne
movsl
orl
cmc
insl
gs
xor
jge
mov
mov
lods
in
frstor
fidivl
fsubs
cmp
lahf
push
dec
pop
fwait
inc
mov
inc
loopne
jae
cltd
sbb
push
xchg
xchg
dec
ljmp
lcall
cltd
mov
test
inc
mov
addl
sahf
repz
xchg
and
icebp
lds
xor
mov
push
inc
xchg
mov
imul
stos
dec
sbb
fwait
mov
sbb
push
sub
imul
js
enter
pop
or
mov
mov
and
fs
mov
leave
rcrl
in
adc
fcoms
push
shrb
pusha
div
fidivs
xchg
push
mov
mov
not
stos
jb
mov
test
shrl
push
cs
nop
ljmp
push
rorb
mov
jl
adc
fsubrp
mov
sub
lock
aam
dec
mov
in
iret
call
adcb
cmpsl
push
test
es
mov
popf
add
addr16
jmp
jge
lea
or
xlat
add
jecxz
cwtl
hlt
out
stos
pop
into
mov
inc
jae
and
push
js
scas
in
repnz
push
sbb
outsb
or
rcl
and
fldlg2
adc
push
adc
inc
mov
outsl
imul
cltd
jns
ds
push
int3
xor
mov
lret
inc
xor
pop
cmp
cmpsl
divb
sub
and
cld
shlb
enter
stc
lods
cmp
jp
stc
test
mov
adcb
sti
lods
js
mov
or
mov
loope
loop
mov
imull
mov
imul
orb
rorb
js
xchg
mov
jle
js
sbb
in
and
scas
push
bnd
jle
cmp
mov
sbb
mov
sub
cmp
push
test
and
mul
ljmp
nop
sti
cmc
mov
xor
iret
mov
add
lea
pusha
pop
cmp
lcall
sahf
fisubs
jae
and
or
xor
popa
pop
jg
mov
mov
cmp
adc
test
ficoml
sahf
jne
dec
mov
data16
cmp
orl
jle
clc
push
cmp
xchg
dec
jge
popa
jo
pop
xor
pop
inc
and
sub
test
inc
pop
js
das
mov
pop
clc
dec
adc
push
cmp
jg
das
orl
pop
dec
and
aad
fsubrl
sbb
lret
ljmp
in
scas
xchg
mov
cmp
rcr
sbb
dec
flds
or
inc
push
add
cmpsl
jmp
mov
aam
push
pop
out
stos
push
cmpsl
add
iret
push
mov
mov
hlt
cmp
arpl
cmpsl
jnp
and
flds
and
mov
hlt
shll
loop
and
dec
shrl
ds
data16
or
iret
clc
xchg
jo
xchg
rorb
fucomip
ja
cwtl
mov
int3
ret
jg
xchg
test
dec
dec
mov
std
dec
imul
sub
ljmp
negl
sub
sbb
mov
out
dec
fisttps
push
fsubrs
and
cmp
xchg
ret
scas
cwtl
insl
addb
test
sub
xor
call
jg
adcl
pop
lcall
push
sarb
int3
js
hlt
cmc
or
jno
in
out
jae
out
xchg
pop
cmpsl
mov
jl
test
cwtl
push
sub
mov
push
inc
ret
std
mov
xor
or
insb
int
and
jns
cs
aas
mov
jecxz
lds
dec
lret
push
out
std
and
clc
fildll
jmp
stc
cld
in
cmpsl
jbe
je
pop
les
mov
pusha
lods
popa
call
lcall
lcall
jecxz
cmp
adc
jb
clc
jne
scas
push
inc
dec
inc
add
xor
lock
test
push
or
xchg
and
xchg
jns
ja
or
insl
mov
scas
dec
leave
sbb
xchg
in
mov
cltd
aad
or
test
inc
jp
xor
lret
das
cld
mov
clc
aas
cwtl
stc
imul
and
mov
xorl
or
jl
in
add
jne
adc
jo
inc
in
sub
push
ljmp
inc
insl
or
daa
insl
cltd
call
fisttps
or
cmp
adc
add
and
mov
mov
sbb
out
or
inc
nop
pop
jmp
in
stos
outsb
push
iret
sub
inc
clc
lods
inc
repz
rorb
adc
jecxz
mov
and
cmpsl
mov
sbb
adcb
dec
rcrb
push
sbb
push
testb
sti
sbb
stc
insl
xchg
dec
inc
dec
and
xchg
ret
mov
inc
lret
dec
dec
popa
and
out
stos
es
lahf
popa
push
repz
insb
xchg
xor
mov
enter
test
and
xor
std
push
sub
sbb
pop
out
or
pop
xor
jnp
jmp
jmp
lret
dec
test
pop
loop
and
cmp
mov
fdivrs
js
jmp
xlat
push
iret
mov
xchg
ret
aam
inc
addr16
pop
repz
fcomps
mov
add
lods
jge
or
imul
inc
into
add
mov
and
sbb
push
ljmp
pop
pop
pop
dec
dec
divl
mov
or
sbb
sub
cmpsl
loope
mov
cmpsb
pop
test
subl
stos
mov
or
aad
fidivl
push
dec
xchg
mov
push
jge
shll
or
mov
cmp
sub
clc
js
mov
mov
mov
data16
rcrb
sbb
push
adc
cmp
jo
adc
rcll
lahf
sbb
adc
insl
mov
cs
dec
pushf
bt
mov
ja
add
sbb
jge
flds
xor
in
add
ja
mov
sub
jbe
mov
scas
sub
dec
clc
jns
jp
sbb
pop
insl
jl
fbstp
test
adc
pop
push
loop
pop
bound
push
movl
xchg
xchg
shll
orb
popa
sbb
popa
mov
fs
sbb
mov
push
lret
scas
test
cmp
mov
push
mov
movsl
les
test
adc
jo
mov
gs
add
xor
mov
push
lds
mov
mov
std
push
xor
pop
and
push
push
repnz
fwait
xchg
movsb
mov
xchg
mov
add
sub
in
jae
rolb
and
push
cs
rorb
or
in
xchg
push
mov
jle,pn
rcr
mov
mov
fistps
test
add
movb
mov
dec
cltd
pop
ds
rcrb
repz
xor
cli
mov
xchg
xor
aad
leave
dec
xchg
cmp
mov
xor
add
pop
stc
pop
pushf
mov
es
out
add
jecxz
lock
and
or
sbb
mov
daa
jb
jg
lret
push
shlb
fildl
pop
xchg
mov
and
cld
fs
pop
mov
mov
repnz
pop
jbe
scas
sti
into
xlat
cmpsl
push
nop
fdiv
dec
in
in
xchg
out
jb
cld
icebp
gs
mov
cmpsb
mov
ficompl
dec
pop
add
stos
enter
fidivs
adc
push
mov
sti
test
idivb
and
cmp
loopne
sub
leave
and
adc
ficomps
add
daa
add
push
scas
ficoms
popl
sub
add
xor
inc
fdivr
stc
or
lea
out
daa
xor
mov
sbb
sbb
mov
cmp
fsubr
dec
xchg
popf
mov
adc
jo
cmp
sbb
adc
cltd
xchg
push
xlat
lret
out
pusha
sbb
and
incb
cmc
stc
nop
push
pop
push
arpl
jnp
ffreep
dec
xor
adc
inc
scas
dec
and
adc
lret
les
clc
test
or
jns
sbb
mov
aas
pop
pushf
imul
fsubrl
xchg
into
movsb
jge
inc
lahf
aas
add
imul
mov
stc
push
xchg
out
add
add
aam
cli
mov
adc
inc
fs
shr
enter
das
dec
sarl
mov
xchg
adc
push
es
and
add
in
mov
sbb
sbb
out
or
out
mov
inc
mov
mov
sbb
pop
repnz
int
jmp
xchg
fdivs
jle
xor
out
jns
idivb
js
loop
inc
into
fcmovnu
stos
and
pop
mov
pop
in
adc
dec
mov
fidivrs
ror
xor
sahf
mov
cs
mov
sbb
inc
pushf
xchg
fldl
in
jle
jb
push
ss
ror
into
add
loopne
fnstcw
aas
dec
pop
xlat
mov
xchg
fwait
jo
test
in
cmovnp
pushf
in
fisubrl
and
inc
sbb
xor
lock
mov
int
outsb
mov
jle
ljmp
popf
fisubl
test
push
mov
push
xor
pop
test
lds
jmp
inc
addl
sbb
sub
lret
pop
or
push
mov
ss
incl
sub
daa
icebp
not
adc
sub
int
xchg
xor
or
loope
sahf
leave
mov
loope
fs
sahf
mov
int3
cmpsl
test
test
and
and
dec
ficoms
cli
xor
cmp
iret
repnz
ror
movsb
sub
in
sub
mov
xor
imul
je
fisubrs
aam
mov
mov
push
mov
outsb
or
push
fwait
and
dec
call
sarl
nop
cltd
test
add
sti
adc
cmpsb
test
rorb
xor
outsb
adc
fwait
into
mov
or
lcall
jge
divb
jmp
xorb
andl
shll
xchg
dec
popf
cmpl
mov
ret
dec
in
cld
fiadds
jb
pushf
jle
insb
imul
lahf
mov
data16
mov
pushf
push
divl
push
mov
das
lods
test
inc
push
mov
push
or
dec
sarl
xchg
aas
js
sbb
jbe
add
xor
loopne
and
and
mov
ss
gs
cwtl
fbld
xlat
loope
aad
push
or
es
shrb
push
movsb
xchg
incl
mov
aas
mov
mov
push
in
cli
loop
mov
jge
pop
inc
push
mov
cmp
fcomps
mov
pop
ss
andb
sbb
mov
out
icebp
push
pop
lcall
test
flds
movl
mov
test
negl
jnp
adc
out
stos
test
xchg
ficomps
rclb
push
insb
sbbl
pop
fimuls
insl
ret
test
add
inc
sbb
lods
add
stos
pop
inc
mov
xor
jo
pusha
out
ret
divb
sub
ret
add
lock
dec
ljmp
add
adc
test
orl
lds
jecxz
dec
mov
sbb
popf
xchg
test
jmp
inc
int3
in
in
int
xor
outsb
loope
popf
pop
pop
imul
out
add
pop
or
in
ljmp
push
adc
jno
pushl
clc
cmpsb
popa
jp
xchg
imul
enter
ficompl
flds
dec
dec
push
out
xchg
mov
les
fsubs
fldcw
jmp
dec
mov
add
rorl
add
inc
ljmp
lahf
das
lret
fwait
pop
loop
add
fstps
gs
clc
dec
sub
leave
pushf
fwait
xchg
push
fiadds
negl
stos
adc
lcall
jg
cmp
leave
std
push
outsl
sarl
cs
and
pop
jg
ja
mov
adc
sub
ljmp
push
fldenv
sub
add
insl
xchg
pop
addr16
out
test
insl
inc
stos
xchg
inc
mov
sbb
pop
push
xchg
mov
aaa
cwtl
call
ljmp
and
out
movb
leave
mov
outsl
add
sub
cmpsl
in
loope
dec
xchg
outsb
jl
hlt
subl
sub
repnz
sub
clc
ss
dec
lods
ja
xchg
xlat
pop
cmp
inc
lock
mov
mov
adc
inc
or
push
int
inc
test
lahf
push
inc
or
ror
and
pop
xchg
stc
cwtl
adc
fisttps
xchg
xchg
loop
and
mov
xchg
lcall
movsb
sbb
xchg
pusha
imul
and
sbb
cmc
jae
js
ja
mov
cli
in
ficompl
cmp
sub
add
dec
and
outsb
in
and
mov
adc
dec
into
xchg
or
mov
mov
iret
jecxz
push
je
or
lods
sbbl
mov
pop
sbb
cmp
outsl
sti
inc
or
adc
cmp
ret
stos
xchg
sub
sbb
sbb
imul
sub
xchg
mov
repnz
add
cs
std
push
call
pop
and
out
mov
jne
mov
aam
movsl
add
lea
bound
jle
mov
and
and
cmp
test
bound
out
enter
or
addl
sahf
imul
xor
pushf
push
call
or
mov
dec
popf
add
mov
shlb
shll
and
mov
pop
pushf
mov
ja
pusha
adc
cmp
xchg
pop
xchg
mov
bound
xchg
aad
pop
rcrb
daa
and
add
shrl
adc
and
fldl2e
jl
add
repz
lods
bound
sbb
out
jp
inc
das
fisubrs
xor
mov
dec
pop
jl
ret
loopne
cmpsl
ja
ljmp
or
lret
outsb
mov
int3
jno
push
repnz
pop
dec
sub
inc
push
mov
aaa
nop
mov
cmp
mov
out
sub
xchg
cwtl
std
adc
in
js
sub
mov
inc
inc
dec
push
or
lahf
mov
fimuls
mov
jl
cs
mov
inc
dec
nop
ret
pusha
insb
aas
ds
out
adc
mov
setb
outsl
inc
fwait
lea
out
xchg
stos
aam
dec
jecxz
js
pop
mov
and
xor
pop
dec
lods
out
addl
lret
inc
dec
dec
sbb
xchg
dec
push
cmp
mov
dec
lods
fidivrs
aaa
cld
or
mov
roll
mov
dec
push
outsl
dec
mov
aam
pop
mov
push
mov
lcall
push
enter
je
pop
cmpsl
or
add
ds
push
insl
ja
test
jne
in
loope
inc
add
xchg
jb
lock
cs
mov
fs
xor
mov
mov
rcrl
fimuls
push
jge
jle
sahf
and
lcall
adc
lock
sbbb
push
fadds
shlb
int3
xlat
daa
add
shlb
or
enter
xchg
je
add
mov
in
xchg
out
lahf
pop
pop
mov
popf
sahf
and
mov
sbbl
add
test
dec
cmpsl
pushf
sub
mov
movsb
ret
sub
mov
sbb
push
loope
inc
add
mov
mov
mov
xchg
scas
aam
mov
dec
cltd
adc
popf
negb
daa
int
dec
or
dec
push
jnp
add
add
mov
in
push
jmp
insl
fs
fmul
orb
sub
or
sub
mov
lret
testl
jmp
xchg
pop
shll
lcall
and
adc
jg
fbstp
das
insl
stos
divl
rol
clc
pop
cwtl
test
nop
stc
into
sub
or
pusha
sbb
cmp
popf
push
test
fistpl
dec
dec
fistps
repnz
xor
shlb
adc
mov
jno
and
fsubp
fiadds
inc
xor
sbb
mov
mov
dec
sub
es
push
notl
int
les
or
addl
cwtl
jae
rol
push
ds
out
adcl
push
insb
mov
mov
mov
aam
xchg
jnp
sbb
clc
testl
cmp
repz
mov
mov
or
push
imul
test
loope
push
add
mov
lock
mov
mov
push
adc
xchg
ds
sti
inc
shrb
mov
jle
enter
mov
jp
icebp
jns
mov
jo
pop
push
xor
xor
mov
addb
outsl
add
jne
lret
mov
loop
aam
mov
push
push
orb
and
es
mov
dec
adc
mov
cli
jecxz
subb
and
xorl
std
jmp
sbb
mov
pop
std
lret
pop
sub
jl
xchg
cmp
and
xor
xor
mov
jmp
xor
repnz
imul
pop
and
scas
push
aaa
std
mov
xchg
loopne
sbb
jns
xchg
ret
push
jae
push
loopne
enter
pop
pop
loop
std
or
and
js
jns
pop
inc
cld
lock
rorb
jnp
and
or
call
rorl
in
xchg
inc
sub
sub
cs
fildl
orl
call
and
lea
dec
sbb
mov
les
rcrb
mov
rcll
fdivl
jle
cmp
lods
push
cmp
xchg
addr16
sub
ss
push
mov
dec
push
jg
movsl
gs
inc
add
pusha
scas
pop
pop
lods
addr16
sbb
and
lds
xchg
xor
push
push
inc
inc
fmulp
popf
lods
in
mov
cmp
fs
jecxz
into
inc
inc
mov
or
add
and
cld
daa
adc
fcompp
and
push
mov
push
es
mov
out
jmp
ljmp
iret
das
inc
mov
fs
jmp
push
mov
lcall
or
inc
cmc
out
push
xchg
push
inc
icebp
hlt
dec
xor
ret
inc
out
adc
data16
gs
repz
outsb
test
sbb
loop
adc
adc
fisubrl
cmp
mov
cmc
leave
add
imul
and
or
mov
jle
pop
inc
pop
jnp
xchg
ffree
rclb
sub
sti
and
pop
cmp
mov
lock
into
fnstenv
jo
pop
insb
mov
jo,pn
int3
scas
mov
jge
mov
mov
clc
mov
jle
push
pop
mov
aaa
dec
inc
mov
js
mov
push
push
repnz
mov
jmp
fwait
push
test
cs
mov
adc
add
inc
and
loopne
divb
outsl
mov
incl
ljmp
cmpsb
test
out
pushf
xor
mov
into
pushf
shr
lcall
out
xchg
ja
inc
iret
std
pop
xchg
sub
ljmp
test
pusha
das
xchg
addl
sahf
aad
jo
daa
adc
int3
popf
rclb
push
or
leave
ljmp
dec
push
fcmovnb
ret
stos
mov
dec
inc
je
cmc
xchg
or
mov
sbb
scas
pushf
fsts
xor
or
sbb
loop
xchg
push
sti
fstpl
push
sub
pop
cs
mov
pop
test
cmp
xor
std
mov
mov
sbb
es
setb
aas
loopne
pop
shl
xor
in
imull
fwait
loope
pop
loopne
lds
pop
lods
push
out
fstl
and
addb
arpl
push
or
xchg
push
push
add
sub
repz
cmp
insl
mov
pop
nop
mov
jne
or
cmpsl
cwtl
out
aaa
stos
loop
addl
xor
lods
push
jno
or
out
pop
inc
sar
dec
in
mov
shll
dec
pop
lea
inc
into
sbb
pop
loope
ja
sub
leave
cli
cli
push
dec
shll
daa
out
xchg
adc
mov
mov
pop
stc
scas
mov
mov
push
pop
out
fs
cmp
test
mov
cwtl
mov
fdivrs
ret
popf
or
rolb
out
sub
dec
dec
or
out
cmp
push
cmp
in
jle
aaa
adcl
inc
cmp
cli
ret
lret
mov
mov
cmpsl
jnp
add
xor
insb
jno
pop
cmpsl
std
fdivl
lret
loop
clc
std
xchg
fmull
xchg
dec
addr16
cmp
xchg
cmp
sbb
push
sub
cmpsl
jmp
mov
jbe
dec
bound
sti
pop
cmpsb
flds
push
xchg
xchg
movsb
mov
mov
add
cwtl
xor
and
push
clc
lods
jb
movsb
cmp
xchg
cmp
mov
rcll
xor
das
xchg
and
jbe
rcrb
shrb
pusha
dec
je
pop
ss
pop
or
push
testl
fwait
rcrl
jecxz
in
fcompl
cmp
and
test
adc
mov
xor
daa
pusha
cltd
adc
cmp
sbb
xchg
push
pop
cltd
lods
test
push
lock
mov
ret
dec
or
imul
adcl
cmp
mov
cld
inc
jo
cmp
loope
cli
mov
mov
push
inc
cmp
mov
call
subl
mov
inc
fstl
dec
mov
subl
fstpl
ljmp
xchg
jns
lret
dec
inc
xchg
mov
out
adc
add
dec
insl
xor
sar
mov
cltd
ja
shlb
clc
stos
fnsave
shrb
add
out
jg
scas
sbb
fsubl
cmp
xchg
pop
pop
fidivrl
xchg
jle
sarl
adc
popf
mov
rcrl
pop
sub
arpl
sbb
push
sub
dec
call
fucom
and
jbe
imul
push
fimuls
test
sub
aam
out
shlb
outsl
mov
cs
jmp
dec
pop
mov
inc
stos
fists
mov
adc
push
adc
lret
mov
lds
lahf
les
or
lret
aaa
lret
dec
outsl
xor
jo
cmpsb
dec
xchg
jg
sbb
mov
and
shrb
sub
fnstcw
mov
inc
jae
push
fisttpl
imul
addb
stc
insl
adc
mov
mov
cmp
in
jg
jne
mov
bound
arpl
xor
sub
hlt
and
or
or
xor
jae
into
mov
push
js
cmp
mov
jp
jp
xor
mov
cld
outsb
sti
and
mov
loope
insb
add
mov
fnsave
outsl
loop
xchg
negl
sysenter
in
cmp
out
inc
je
or
lock
mov
add
lods
and
sub
repnz
xor
lea
jge
addr16
lods
pop
iret
jo
testl
jo
inc
adc
ret
test
fwait
jl
mov
mov
add
sub
imul
gs
dec
mov
jb
add
xor
int
notb
and
sbb
inc
cmp
in
repnz
test
and
push
scas
xchg
scas
pushf
add
sub
je
adc
mov
fldl
jno
fsubl
outsb
pushf
shl
xchg
nop
xchg
sub
shrl
adc
aam
dec
push
xchg
mov
daa
and
repnz
xchg
jmp
or
adc
stos
xchg
cld
xorb
cmp
stos
les
data16
iret
jg
jl
fucomp
pop
jne
dec
mov
mov
jg
xchg
sub
xor
subb
inc
nop
and
add
dec
add
adc
loopne
ja
jecxz
test
xchg
jge
ss
pop
imul
push
push
js
lahf
mov
mov
sub
mov
ds
loop
cli
lcall
hlt
fisubrl
sub
xor
out
cmp
loopne
mov
sub
je
sub
and
popa
addb
cld
push
xorb
and
in
cmp
out
movsb
aaa
inc
adc
rcr
fstl
xor
pcmpgtb
stos
inc
push
pusha
or
pop
sbb
xchg
loopne
sarl
js
cmp
or
pop
inc
mov
mov
int
icebp
out
cmpsb
sbb
adc
out
lahf
add
orl
out
sub
test
daa
pop
jne
daa
push
mov
push
pop
jp
cmp
mov
adc
mov
call
fyl2xp1
push
data16
xchg
and
cli
not
ffreep
addr16
scas
rol
mov
sub
je
inc
fisttpll
lds
movsb
mov
test
outsl
fldenv
repnz
cmp
dec
sub
sbb
push
cmpsb
sbb
push
rorl
cmpsl
int3
or
outsb
ret
inc
mov
add
sarl
adc
iret
pop
test
push
adc
out
test
mov
adc
lock
dec
repz
xorl
pusha
inc
or
cmpsb
mov
fidivrl
arpl
push
outsl
xor
pop
hlt
shrb
lods
loop
xor
push
inc
fdivr
xchg
lds
clc
push
xor
cs
xchg
in
outsb
mov
or
xchg
ficoms
pushf
js
movsb
addr16
pop
hlt
mov
nop
outsb
mov
adc
xor
pop
pushf
repz
test
cltd
fs
test
fsubl
cltd
mov
out
imul
jge
hlt
add
andb
or
jns
ret
flds
test
sbb
popa
pop
pop
test
adc
adc
mov
ja
or
or
cwtl
fwait
cmp
add
or
cmp
repz
and
sbb
xor
cmp
push
call
imul
cs
and
xchg
sbb
mov
lret
icebp
stos
jbe
call
sahf
pop
sub
lock
xchg
imul
mov
jge
in
mov
xor
dec
xor
out
data16
mov
in
cmp
movsl
dec
pop
ret
inc
cmp
and
sbb
shll
pop
cmc
les
lret
inc
in
xchg
std
dec
pop
or
push
push
mov
mov
andl
xchg
clc
aas
pusha
daa
dec
mov
in
dec
iret
mov
jo
je
out
fistl
es
in
fisttpll
dec
cmpsb
movsl
fldenv
cwtl
stc
arpl
pop
push
jge
sub
xor
lods
inc
cmp
add
test
mov
pop
aad
dec
dec
fld
jns
and
dec
popf
and
sbb
iret
mov
sbb
mov
xchg
es
inc
hlt
push
cld
cmp
xlat
iret
pushf
outsb
jbe
out
cwtl
imul
jns
sarb
gs
inc
pop
leave
cmpsl
imul
and
inc
addl
cld
adc
sub
sbb
scas
mov
cwtl
icebp
lock
fmull
mov
rclb
dec
xchg
sahf
xchg
pop
sbb
imul
mov
in
stos
sub
xchg
outsb
inc
enter
out
daa
mov
add
shl
cmp
jo
insl
fwait
int3
fsubp
sub
shl
shlb
cmp
cwtl
jne
cmp
mov
jns
or
inc
js
xor
adc
int3
fsubs
and
add
call
ret
jmp
lods
jmp
mov
sub
jl
dec
addr16
ret
fmul
in
test
ds
pop
insl
mov
xchg
add
loop
mov
xchg
das
pop
push
and
mov
dec
loope
cmpsl
mov
sub
repz
add
pop
jb
stc
into
push
and
sub
rcrb
push
pop
fdivr
test
add
hlt
sbbb
js
repnz
mov
jmp
loopne
dec
ljmp
inc
lock
in
mov
mov
mov
mov
mov
jge
adc
xchg
icebp
dec
pop
xchg
ret
fs
mov
hlt
out
stc
bound
inc
daa
das
pop
and
pop
xchg
dec
lods
shll
dec
mov
fwait
sti
adc
mov
cmp
scas
stc
push
leave
das
mov
stos
divb
or
mov
cpuid
fsubrs
xlat
add
xchg
sarb
int
and
mov
cmp
aas
mov
xor
sub
notb
xchg
arpl
mov
xchg
inc
jecxz
out
sub
pusha
pop
fbld
pop
repnz
icebp
fwait
dec
sarl
and
fisttps
fmull
inc
bound
aaa
aas
fdivl
ret
mov
fnsave
imul
shll
push
xor
rep
jnp
mov
and
mov
lods
xor
push
pop
test
mov
or
jb
lds
xlat
pop
inc
dec
popa
sbb
xor
pop
cmpsl
movsl
shll
addr16
xor
mov
mov
inc
jne
lret
and
or
pop
je
enter
mov
sub
fcmovnbe
ret
es
sahf
dec
mov
jns
fnclex
jo
or
int3
push
push
scas
push
mov
lret
pop
dec
xchg
jl
sahf
mov
adcb
aam
adc
sarl
dec
fnstenv
jmp
and
pop
cmp
jmp
addl
fnstcw
inc
out
mov
loopne
dec
inc
fistl
in
push
mov
mov
sbb
dec
push
pop
xchg
out
cld
push
push
addr16
jl
or
mov
addr16
and
stc
repnz
mov
cli
mov
xchg
mov
mov
fwait
int3
pusha
mov
push
int3
push
jge
add
jmp
testb
pop
add
xor
mov
sbb
sub
mov
fstpt
push
lock
dec
test
shrb
dec
cmp
jo
fwait
shl
hlt
add
and
adc
mov
sub
and
cld
aaa
mov
cmpl
add
orl
inc
xor
mov
pop
sbb
pop
cmp
call
inc
scas
imul
mov
gs
dec
push
xor
sub
ret
pop
jp
sarw
cltd
add
arpl
bnd
repnz
mov
dec
in
iret
sti
jb
ror
aas
push
mov
or
jb
cmp
cmpb
jno
adc
clc
jae
cmp
into
push
test
jae,pn
into
push
popf
or
ret
or
sub
cmpsl
adc
push
insl
cltd
jp
into
mov
pop
mov
pushaw
mov
inc
fyl2xp1
push
imul
ljmp
insl
jmp
add
or
int
shlb
cmp
push
outsl
lock
adc
mov
jle
lock
dec
jns
aad
xchg
prefetch
sbb
pop
das
pop
adc
jbe
popf
xchg
loopne
sub
divb
lods
xlat
mov
out
sub
ds
xor
jmp
loop
orl
hlt
out
add
lock
ds
fnstcw
jne
pop
pop
adc
cmp
jnp
daa
sub
add
sub
push
stos
test
arpl
sbbl
icebp
je
adc
and
sbb
mov
loop
loopne
cmp
inc
or
push
fimuls
or
mov
sbb
and
test
jmp
in
sbb
push
mov
out
mov
cmpb
or
mov
rorl
bswap
addr16
push
mov
xchg
cmp
out
aas
loope
rorl
xchg
mov
nop
or
pop
sbb
push
insl
mov
jae,pn
rcrb
in
mov
jp
mov
and
or
sahf
sub
or
rcrl
or
cmp
imul
cmpsl
push
or
sti
and
aas
pop
mov
jno
mov
xchg
mov
mov
push
loopne
jo
popa
cmpsl
idiv
dec
mov
sub
test
ss
aad
dec
jl
insb
push
popf
pop
into
xor
fiadds
les
test
xor
fdivs
clc
cltd
mov
mov
mov
or
std
fldenv
int
mov
out
mov
test
mov
dec
lret
dec
jae
leave
mov
outsb
out
push
sti
push
inc
jmp
jbe
jge
int3
pop
fcoml
pop
and
aas
mov
mov
lret
push
adc
imul
out
sahf
mov
mov
inc
lahf
test
push
push
iret
push
dec
cmc
mov
xchg
sub
sbb
jmp
or
aam
pop
inc
or
mov
mov
push
fwait
sub
icebp
jg
push
mov
dec
xchg
aam
mov
mov
xor
mov
fdivl
jmp
xchg
push
stos
sub
dec
cwtl
in
add
jo
mov
inc
daa
and
dec
mov
test
jle
sbb
cmp
inc
mov
shl
and
and
or
call
cmp
jb
jecxz
push
pop
shrl
cltd
jb
flds
insb
jge
pop
cmp
out
pop
xor
adc
mov
push
hlt
sub
cmp
jg
inc
test
aam
jns
in
mov
testl
xor
int3
push
in
push
cmp
sbb
and
scas
or
aaa
popf
dec
mov
sahf
jp
iret
stos
or
rcrb
pop
pop
push
jle
adc
leave
xor
mov
int3
in
add
push
lock
fwait
and
pop
mov
les
xor
fsub
cwtl
cltd
sahf
xchg
lret
inc
aam
xor
out
inc
lret
fcmovne
pop
adc
adc
sub
ss
jp
push
shlb
cmp
inc
pop
sbb
pop
mov
jnp
loop
push
jmp
sahf
bound
pop
sets
sarb
leave
aas
lahf
cmp
rclb
mov
filds
pop
sbb
dec
cmpsl
in
dec
mov
and
dec
jnp
outsb
int
push
pop
out
fsts
je
daa
and
out
test
push
fnstenv
dec
inc
push
xor
es
xor
leave
inc
data16
hlt
pop
adc
out
mov
add
ficoml
sahf
jb
cmpsl
cld
cmp
fwait
leave
idivl
xchg
fsubrl
in
and
cld
pushf
call
stc
test
push
test
lret
fcompl
mov
insb
fld
cs
dec
xlat
and
insl
jbe
ja
fwait
sub
or
icebp
ds
or
sub
mov
push
dec
push
jmp
aas
xor
pop
fs
mov
repz
icebp
sahf
fdiv
adc
fdiv
mov
add
hlt
pop
scas
mov
addr16
xchg
cmp
add
mov
sahf
neg
incb
jg
adc
xchg
cmp
hlt
out
mov
adc
out
jp,pt
lods
jl
ret
xor
and
data16
sub
mov
cmc
lock
aam
sbbb
fnstenv
push
xor
push
mov
mov
lock
cmpsl
mov
pop
xchg
imul
pop
aaa
jb
fisubs
push
iret
je
mov
push
in
cld
data16
adc
mov
scas
mov
xlat
and
gs
mov
pop
jle
in
xor
mov
jp
pop
inc
mov
lock
dec
cmp
add
loopne
lret
gs
jle
mov
push
push
add
cwtl
push
or
loopne
adc
out
push
fucomp
cmp
sbb
insb
in
xlat
mov
out
inc
fcmove
xchg
jo
mov
ja
jae
dec
das
cmp
rorl
lock
dec
cmp
cwtl
cmc
fsubrl
xor
sub
jecxz
popf
push
cld
push
int
into
sub
sti
insl
push
nop
sub
jb
lret
ret
imul
je
adc
clc
sbb
mov
fcmovnb
sbb
aas
pop
inc
aam
rcrl
in
jnp
mov
ja
ds
push
aaa
jne
jae
adc
jle
es
in
js
mov
call
rcr
dec
out
cmp
std
pop
icebp
mov
repz
fsub
and
push
aam
jp
sbb
mov
or
push
jo
inc
outsb
orb
cmpl
xchg
xor
adc
dec
int
bound
shrl
arpl
dec
sbb
imul
jge
cmp
push
mov
xchg
fisubs
sbb
repz
daa
mov
mov
jbe
inc
xlat
idivb
stos
push
cmp
push
aas
aas
cmc
inc
aad
insb
lret
mov
movsl
inc
inc
rorb
dec
hlt
and
lods
sahf
loopne
imul
xlat
shr
jbe
xor
mov
dec
jne
aaa
les
lods
inc
ljmp
inc
imul
mov
negl
sahf
jp
inc
sub
add
or
jp
insl
xchg
les
push
dec
sub
gs
and
pop
fxch
mov
push
imul
fidivrs
fnsave
jb
sub
mov
lods
mov
and
rcl
push
imul
mov
iret
jnp
mov
imul
lock
pop
push
lcall
pop
dec
dec
xchg
pop
popa
and
pop
insb
stos
dec
repz
pop
std
sbb
cwtl
movsb
adc
xchg
das
push
cmpsb
test
pop
push
mov
jg
xor
cwtl
and
insb
mov
int3
fnsave
xor
popl
sbb
cmp
add
dec
ja
and
shlb
jnp
or
inc
mov
imul
add
sti
add
jg,pt
imul
scas
pop
sbb
mov
loopne
icebp
or
and
mov
mov
mov
xor
gs
popf
xchg
cld
mov
xchg
jne
test
shrl
enter
mov
jae
dec
sbb
push
push
lcall
ror
mov
push
dec
push
sbb
sub
sub
in
cmpsb
or
push
jle
fstpt
sbb
test
inc
out
popf
pop
jmp
lods
pop
fidivs
mov
xor
packuswb
jnp
pusha
or
xor
mov
in
fsubs
clc
paddsw
sbb
cld
cmp
mov
mov
nop
arpl
orb
pop
lock
jne
call
incl
test
cmp
loop
jge
int
pop
mov
add
sti
jnp
xor
lret
movsb
lcall
fwait
test
in
fwait
lcall
pop
sbb
add
jb
jl
inc
in
jle
icebp
pop
fwait
mov
movsl
cs
mov
adc
mov
testl
mov
push
pop
movsb
hlt
mov
cld
insb
mov
xchg
jnp
sbb
clc
mul
mov
je
lret
and
int3
xchg
aad
arpl
popf
and
jle
jne
inc
push
adc
mov
inc
bound
nop
lret
and
xor
fbld
adc
dec
cltd
or
ret
in
dec
sti
mov
and
and
mov
adc
inc
pushf
or
push
push
xchg
imul
and
and
dec
fimull
movsl
dec
xor
push
adc
in
xor
sub
cmp
daa
movsb
scas
test
roll
test
jl
xlat
inc
call
xlat
ja
push
hlt
fdivp
sub
jmp
shl
adc
pop
mov
ret
bound
adc
jno
testl
add
test
fs
mov
cmpsb
and
push
mull
pop
popf
dec
sbbl
cmpsl
jp
xchg
xor
sub
mov
lea
xchg
int
xchg
stos
aas
ret
lcall
xchg
sub
inc
pop
xor
adc
test
add
mov
les
cmp
loopne
leave
sub
sete
ret
fcmovnb
and
inc
and
stos
stos
adcl
leave
outsb
call
cmp
jb
jae
scas
ret
or
lock
shrl
lret
xor
cmp
pop
fistps
fldt
jecxz
icebp
adc
sti
and
enter
cmp
adc
mov
scas
jnp
xor
jmp
je
pusha
shlb
vmread
mov
sbb
push
shr
fs
push
fsts
mov
inc
adc
sahf
mov
push
push
or
mov
icebp
inc
fnstcw
xlat
fs
cmpsl
mov
push
cli
cwtl
aam
jmp
pusha
shlb
ret
mov
jno
mov
test
dec
lret
dec
jmp
cli
mov
push
shrl
and
int3
inc
cmpsl
mov
inc
push
mov
inc
enter
scas
or
aas
lahf
test
call
jmp
loope
pop
dec
cs
repnz
repz
stc
sub
xchg
aaa
popa
and
mov
xor
fs
imul
pop
dec
mov
dec
push
pop
fs
jno
sub
xor
dec
jbe
and
cs
js
sbb
gs
pop
mov
mov
sbb
jecxz
repz
pop
js
sub
pusha
aas
shll
fwait
cltd
add
popf
dec
gs
rcrb
je
push
faddl
dec
xor
jg
push
mov
add
push
rcll
ret
test
fidivl
xchg
movsb
xor
inc
jnp
aas
mul
pop
ja
adc
jns
arpl
test
mov
cmp
inc
adc
xchg
xor
push
push
int3
jb
mov
mov
mov
inc
xor
mov
mov
add
subb
clc
mov
push
hlt
or
pop
xchg
xor
dec
push
stc
orb
pop
mov
sub
fsubrs
and
jmp
cs
mov
and
sub
jo
out
bound
xchg
lahf
xor
jecxz
iret
and
mov
movb
jo
fistpl
les
sbb
xchg
push
mov
icebp
scas
call
sbb
loop
sbb
cmp
pop
imul
pop
jo
lahf
push
lds
push
test
adc
fmull
pop
mov
lea
sarb
mov
mov
sbb
outsb
adc
sub
lret
ja
scas
in
sbb
arpl
pop
mov
adc
mov
ret
pop
scas
clc
aaa
and
xor
dec
sbb
into
mov
or
mov
loopne
jno
or
push
sti
fildll
dec
and
out
pop
pop
dec
xor
xor
mov
adc
sti
mov
push
arpl
int
inc
mov
mov
mov
push
mov
lea
or
push
add
cmc
popa
and
add
xlat
jb
or
and
mov
inc
leave
mov
sbb
aas
jmp
pop
jmp
pop
adc
insl
sbb
jno
pop
mov
jae
mov
lahf
leave
dec
rcl
pop
jnp
sub
fucomp
inc
insl
or
inc
push
lret
ljmp
cmpsl
fwait
xchg
insb
pop
popa
jne
jno
loope
inc
lock
dec
into
fs
dec
and
sub
movsb
xchg
inc
pop
jmp
inc
jno
lods
out
or
movsl
add
es
repz
loope,pt
das
sahf
cmp
pop
and
push
test
nop
stos
popf
xor
outsb
out
les
sarb
jb
cmpsb
sub
das
jl
sti
push
xor
lahf
xlat
stc
sbb
imul
sub
aaa
rcll
je
inc
xor
jb
xor
in
push
cs
and
out
sbb
mov
sub
adc
dec
cli
dec
mov
incb
fsubrl
mov
enter
imul
dec
jne
cmp
testl
cmp
jns
repz
jge
aad
hlt
pop
mov
xchg
pop
imul
pop
push
and
dec
pop
inc
and
and
adc
add
and
mov
addl
sub
cmp
sahf
or
js
jbe
out
enter
loope
inc
push
outsb
inc
stos
mov
push
roll
push
lcall
inc
lea
cmp
shll
adc
cmpsl
loopne
fiadds
stc
subb
adc
enter
pop
mov
jb
pusha
movsl
test
rcrl
test
mov
aad
mov
mov
mov
dec
int
cmc
mov
shr
in
adc
outsb
inc
dec
fisubrs
es
pop
mov
jnp
cmp
aad
push
mov
cld
xorb
sub
in
loopne
or
movsb
je
dec
addr16
adc
fcmovnb
mov
int
mov
mov
gs
pop
mov
or
inc
mov
xlat
std
fsubr
sbb
xchg
cmc
out
pop
mov
push
or
jnp
arpl
push
adc
push
scas
add
and
stc
add
or
fildl
test
pop
test
xchg
inc
push
ljmp
push
or
xlat
lret
dec
fcomps
jns
mov
or
cmp
cmp
dec
rol
jle
mov
leave
in
daa
arpl
mov
sahf
lcall
into
inc
sbb
pop
xchg
dec
fnstsw
mov
jae
pop
cmp
mov
adc
mov
aas
lea
sbb
sub
loop
pop
lret
fsts
rcr
add
adc
sarb
aam
sbb
push
out
in
push
lods
bound
je
decl
rcr
jo
jmp
mov
mov
addb
mov
jne
adc
inc
jbe
xor
test
incb
mov
add
and
push
and
addl
clc
mov
fcompl
cwtl
mov
sbb
xor
inc
bound
pop
sbb
mov
cmp
cmc
jg
mov
iret
in
shr
pop
xchg
xchg
cmp
jle
xor
cmc
lahf
loop
mov
xlat
sbb
mov
mov
roll
sbb
lds
gs
xchg
mov
sahf
add
movsb
pop
push
repnz
lahf
dec
xchg
mov
jae
in
sbb
push
push
xchg
xchg
cltd
std
lret
inc
or
or
xchg
dec
jecxz
test
neg
shlb
lds
repnz
sub
sub
sbb
add
inc
or
ja
mov
lahf
fnsave
cli
inc
lea
sbb
and
lea
lods
inc
mov
in
add
mov
pusha
cltd
jmp
cmp
hlt
addr16
xor
movsb
lock
popl
out
dec
jns
cmpsb
pop
pusha
adc
dec
aad
add
push
addb
out
or
and
ja
sbb
cmp
stos
pop
std
outsb
fists
mov
xchg
xor
mov
in
sub
cmc
icebp
inc
imul
fsubr
or
push
sub
pop
out
js
pop
xlat
lea
sub
in
cmpsb
mov
sbb
cwtl
xlat
mov
xor
mov
lds
nop
xor
and
test
call
mov
jp
js
out
xchg
cmpsb
push
scas
pop
ds
pop
add
sub
push
dec
xor
ficomps
jg
mov
rol
lock
lock
cmpsl
daa
pop
lcall
jge
lock
xchg
push
ret
and
xchg
xor
inc
adc
mov
push
test
adc
add
cmpsl
mov
and
je
dec
rcrl
loop
push
xor
sub
ja
cltd
scas
pop
or
or
ds
cmp
push
jp
aaa
xchg
jo
rcll
sub
ss
xor
cs
fwait
repz
cli
enter
mov
cmp
pop
xor
mov
pop
adc
ds
cmp
push
fcmovnb
mov
mov
xorb
push
cs
inc
fimull
jecxz
test
mov
mov
insb
push
subl
or
in
xor
adc
lcall
mov
sub
inc
scas
push
imul
jo
scas
adc
fisubs
leave
sub
mov
sbbl
loopne
inc
jl
mov
adc
in
test
and
xchg
xchg
imul
aam
pop
js
ds
inc
stos
jnp,pn
sbb
inc
out
cmp
sub
daa
and
rcr
into
push
popf
fidivl
or
lahf
lods
dec
das
out
push
aam
insb
pop
clc
dec
pushf
mov
cmp
pop
shrb
daa
gs
adc
nop
stos
mov
push
mov
inc
adc
adc
sti
mov
mov
and
stos
dec
cmp
outsb
and
mov
imul
adc
mov
inc
sbb
xor
clc
lods
cmp
jmp
dec
push
lcall
imul
push
sbb
shll
xchg
ds
js
shll
popf
je
dec
movl
inc
cltd
pop
xlat
rclb
pop
sbb
out
int
iret
out
data16
push
or
xlat
inc
sub
pop
jne
dec
mov
sti
int
sbbl
shl
jae
les
stc
lahf
xchg
inc
into
icebp
jno
repnz
and
std
outsb
call
or
js
add
sbb
jecxz
fmulp
mov
mov
scas
mov
test
or
mov
or
mov
mov
cmc
adc
sbb
shl
lods
popf
leave
repz
mov
mov
or
add
mov
sbb
inc
or
mov
movsl
cmp
push
fwait
jecxz
dec
ret
vshufps
outsb
jge
lret
cwtl
xor
and
outsb
cmp
mov
jle
aad
sbb
mov
jle
repnz
push
je
mov
xor
jno
dec
dec
dec
pop
ror
into
push
int3
lahf
push
cmp
push
add
and
inc
les
adc
xlat
or
dec
jg
rorl
adc
lcall
das
mov
xchg
mov
dec
enter
pop
push
jne
push
jns
fdivl
pop
mov
sub
insl
xchg
shlb
adc
xor
rcll
and
xor
adc
aad
mov
sbb
pop
lret
add
fidivrs
imull
and
mov
mov
xchg
and
addb
or
in
fisubrs
mov
arpl
test
jmp
inc
add
aad
xchg
dec
add
pushf
add
dec
lea
cmp
push
cmpsl
xchg
pop
cmp
xor
out
cmpsb
sub
add
push
jae
imul
int
bound
orb
sub
je
movsl
stc
adc
fs
out
les
inc
icebp
push
dec
inc
movsl
gs
add
arpl
adc
nop
cmpsl
sti
lret
scas
jg
adc
pop
mov
mov
sbb
scas
sbb
adc
push
mov
xchg
call
ja
enter
lret
jae
inc
into
es
mov
test
sbb
imul
outsb
jae
and
lods
dec
jl
cmp
adc
negl
pop
aam
ds
mov
in
push
out
in
popa
pusha
dec
js
dec
add
jg
sbb
sbb
stos
xor
dec
xor
adc
out
test
outsb
xor
cwtl
cmp
jecxz
and
dec
or
sbb
jl
or
inc
xchg
rcrl
sub
sbb
cmp
jb
test
enter
adc
pushf
cmpsb
data16
mov
dec
adc
fdiv
loope
mov
pop
mov
mov
push
das
pop
fldcw
sbb
push
or
pop
add
int3
push
in
sahf
adc
xor
xchg
inc
add
fucomip
les
dec
ret
in
push
cmc
mov
out
jae
push
adc
in
inc
dec
and
adc
divl
test
mov
inc
jns,pn
or
test
out
ljmp
loope
imul
cld
adc
xchg
push
gs
cli
sbb
xor
daa
shr
jb
jle
cmp
inc
or
cmp
add
cwtl
inc
mov
iret
addl
cmpsl
in
out
adc
push
jbe
inc
xlat
fs
shrl
es
dec
mov
sub
stos
mov
pop
inc
pop
sbb
shlb
iret
mov
test
leave
fdivs
push
xor
adc
call
mov
pusha
rolb
or
inc
dec
xchg
shr
sarl
mov
enter
sbb
sbb
jp
lods
test
movsl
cmpsb
jg
pusha
lahf
xlat
inc
into
sub
pop
push
faddp
rorb
out
in
cli
dec
mov
xchg
add
dec
lods
mov
and
mov
xor
mov
cmp
mov
xchg
mov
lods
pop
outsb
push
pop
mov
add
adc
push
xchg
and
push
inc
out
adc
jne
xor
cmp
jmp
sti
cmp
shll
and
enter
out
mov
dec
insb
jno
lods
xchg
int
decl
mov
inc
call
xor
nop
cmp
add
fsubl
add
lret
aam
jnp
cmp
aad
push
mov
in
lea
loop
dec
fcmovnb
aas
xor
lret
outsl
rorb
arpl
in
mov
push
pop
mov
sti
mov
in
add
fisttps
pop
cmc
xchg
xchg
repnz
js
fstl
cmpl
clc
mov
shl
in
push
adc
sub
movsl
mov
pop
or
adc
cwtl
shlb
ror
into
add
push
popf
fld1
mov
scas
xchg
push
repnz
fldt
fcoms
mov
jp
cs
mov
out
sbbl
pop
inc
movsb
inc
aas
pop
mov
push
inc
inc
pop
mov
pop
dec
daa
add
cmp
add
arpl
push
inc
jmp
sbb
stos
cmpsb
adc
mov
roll
jo
xchg
rsm
xor
jo
cmpb
test
es
in
cli
loop
mov
cmpsl
int
imul
out
rcrb
cmp
add
ds
frstor
lods
dec
fwait
mov
pop
xchg
add
addl
pop
mov
and
aad
mov
dec
mov
int3
jmp
hlt
push
cmp
lcall
das
imul
enter
sahf
mov
inc
or
push
mov
fwait
sbb
push
add
xchg
cmpsl
pop
mov
adc
adc
rorb
and
cmpsl
movsw
mov
cli
push
xchg
mov
pop
pop
lock
mov
pop
inc
pushf
sbb
mov
add
cmp
jmp
out
adc
inc
das
push
pushf
or
lcall
inc
sub
mov
pop
jmp
and
fsubl
sahf
jge
xchg
sub
lret
jge
mov
aas
xchg
or
jmp
mov
pop
stos
stos
xchg
mulb
jb
mov
xchg
cmc
lahf
nop
loope
inc
cmp
cmp
push
sarb
xchg
mov
decl
adc
inc
pusha
mov
jne
pushf
addr16
sub
xor
pusha
pop
gs
movsl
fnstcw
mov
movsl
loope
imul
jl
lods
xchg
and
in
shlb
sbb
and
iret
push
mov
or
fwait
mov
popf
sub
pop
mov
dec
icebp
stos
adc
call
out
pop
ds
and
sbb
dec
mov
dec
add
or
scas
nop
xchg
push
sahf
inc
fwait
mov
fs
pop
fs
sub
dec
jl
mov
mov
insb
xor
jl
sub
dec
inc
adc
xlat
inc
ljmp
add
adc
dec
ss
sub
adc
adc
insb
sbb
hlt
dec
pop
aad
sub
adc
mov
push
int
das
ror
pop
mov
jl
das
dec
aad
in
pusha
hlt
cmc
inc
mov
push
dec
pop
jns
int3
insl
or
outsb
push
adc
inc
ljmp
test
pusha
out
cmp
insb
aaa
loopne
aas
push
dec
and
inc
sub
sbb
lcall
dec
cmp
push
popa
pop
rcll
sbb
and
add
mov
sub
mov
imul
rcrb
rol
cmp
dec
xor
divb
dec
push
and
fisttpll
push
call
jge
adc
xchg
mov
adcl
inc
icebp
sbb
daa
dec
push
mov
cmp
outsl
movsl
lock
outsl
mov
mov
push
es
shlb
sbb
push
imul
sub
ds
ljmp
mov
lahf
pop
xor
into
daa
mov
cmp
int3
rorb
fisubl
pop
lret
sub
push
cmp
mov
aad
bound
xchg
jle
cwtl
mov
and
xlat
in
pop
pop
push
in
loope
mov
mov
xchg
notb
inc
insb
neg
loope
sub
jg,pn
sbb
sub
inc
pop
mov
push
jo
movsl
and
pop
sub
or
cld
insl
int3
sbb
inc
aam
mov
push
pop
test
scas
into
xchg
adc
dec
scas
sahf
std
add
jns
adc
out
ds
es
jmp
sbb
cwtl
rcrl
jmp
jecxz
dec
shlb
sbb
inc
decb
ret
adc
push
jne
adc
ret
adc
bound
xchg
fisubrl
stc
js
inc
mov
daa
notl
push
push
das
outsb
mov
mov
aaa
ljmp
das
pop
xchg
xchg
pop
add
jg
rcrb
sub
mov
mov
mov
pop
xchg
aad
adc
test
gs
sbb
inc
out
push
fistl
popa
into
or
pop
pop
push
andl
dec
sub
dec
xchg
pop
pop
mov
dec
cwtl
cmpsl
ret
pop
aaa
fiadds
fisubl
inc
rcr
outsl
cmp
and
insb
mov
es
repz
or
mov
ret
test
inc
sbb
int3
addr16
dec
les
cmpsb
mov
xchg
mov
aam
push
dec
cmp
std
roll
rol
int
in
xor
cltd
in
js
add
iret
lock
pop
pop
push
add
insb
adc
dec
inc
cld
dec
movsl
jge
repz
in
and
outsb
into
lds
aas
mov
sub
sub
cmpsb
les
sbb
shrl
xchg
outsb
jbe
hlt
jno
adc
adc
mov
nop
je
std
inc
imul
push
insb
and
dec
lcall
inc
push
fisttpll
add
aam
sti
in
pushf
pop
bound
wbinvd
mov
xchg
or
mov
add
pop
push
and
xchg
in
xchg
roll
adc
repz
shll
mov
rcrl
out
inc
push
das
in
sub
mov
xor
jb
repz
inc
rolb
call
std
dec
bswap
cmp
cmp
mov
aad
jmp
cmp
or
pop
xchg
pop
sub
enter
and
xor
jp
jne
add
mov
ret
xor
add
sub
pop
dec
insb
push
dec
jecxz
cmp
lahf
pop
mov
mul
subl
jmp
mov
add
pusha
hlt
pushf
rcrb
je
push
imul
inc
adc
aam
fcmovb
jnp
and
ret
sub
pop
sahf
sbb
ja,pn
and
rcl
les
aad
call
xchg
ret
cmp
cmp
add
mov
xchg
xchg
aad
mov
sub
and
mov
jmp
adc
call
mov
pop
mov
ja
cltd
fstpt
inc
mov
xchg
lods
sbb
test
pop
adc
out
push
movsb
mov
add
stos
pop
rcrl
cs
fstl
mov
xor
add
cmp
orl
ja
fiadds
popa
mov
mov
enter
mov
out
push
scas
jmp
xchg
sub
add
jmp
fstpl
xchg
mov
mov
xor
sti
ss
xor
imul
pushf
lret
sahf
lods
mov
jns
inc
push
push
sub
pop
es
mov
shr
push
mov
jl
xor
mov
roll
daa
lea
in
xchg
push
fisubs
out
aas
aaa
sub
leave
adcl
fisubrs
mov
repnz
scas
out
lods
std
jl
fstpl
push
mov
imulb
jbe
ret
xchg
testl
loope
shrb
js
aad
scas
jl
js
mov
jne
ja
out
rol
leave
push
cmp
adc
icebp
mov
sti
mov
jbe
inc
shrb
mov
filds
arpl
adcb
cmp
xor
mov
in
call
sbb
insl
dec
fstp
aad
das
test
xchg
fucomp
dec
push
mov
stos
rol
push
ja
inc
data16
adc
pop
lds
push
push
dec
pop
xor
mov
test
or
pop
add
aam
mov
sahf
cmpltps
outsb
in
in
rep
and
cltd
add
loope
mov
xchg
jmp
out
mov
jns
push
jecxz
jb
sbb
stos
sarb
jecxz
roll
add
push
add
andb
es
pop
sti
rcll
sub
cmp
stos
call
lcall
cmp
int
adc
lret
nop
fstpl
jns
pushf
ficoml
sub
push
xchg
pop
scas
sbb
or
push
mov
jae
sbb
sbb
std
pop
iret
lahf
sbb
nop
scas
into
ljmp
or
and
xor
out
mov
jecxz
sub
xchg
jns
xchg
jg
roll
cmp
xor
inc
jnp
arpl
out
pop
push
cmp
imul
add
into
mov
nop
iret
cmc
cmp
jle
xlat
xchg
out
aaa
dec
ljmp
adc
rcrl
aas
sbb
pop
addr16
pop
cmpsl
pusha
jo
lds
mov
push
test
push
stc
adc
enter
arpl
stos
ljmp
and
nop
sbb
iret
mov
mov
cmc
movsb
call
ds
add
gs
xchg
jno
hlt
cmpsb
das
jae
cs
hlt
in
xchg
jecxz
inc
andl
inc
dec
sar
int3
arpl
jp
xor
stc
jo
lods
push
fisttps
sbb
push
pop
push
lret
pop
dec
mov
cmpsb
and
sbb
jl
jmp
lret
pop
push
jae
adc
daa
jbe
cli
frstor
pusha
cmp
hlt
xchg
or
jo
and
cmp
out
inc
loopne
mov
xchg
add
and
adc
and
cltd
cmp
int3
sub
mov
pop
addr16
pop
sub
or
mov
adc
and
pop
xor
xchg
cmp
jge
in
and
sub
cmc
xchg
dec
popf
leave
sub
subl
inc
pop
icebp
into
inc
xchg
xlat
pop
jb
or
hlt
push
and
xchg
movsl
dec
jns
nop
sti
add
orl
sbb
sbb
push
repz
mov
mov
popa
xchg
in
lcall
popa
sbb
xor
and
cmp
dec
sbb
fldenv
dec
daa
mov
lock
push
subb
jmp
pop
mov
sarb
lahf
iret
push
inc
cs
cwtl
insl
jmp
ljmp
or
dec
ret
addb
paddd
push
cmp
sbb
or
push
or
cmc
sbb
cmpsb
cmpsl
fstps
arpl
or
add
ds
and
sub
and
mov
mov
fs
fists
fiadds
mov
and
sbb
sub
cmp
jb
jg
or
daa
pop
pop
sub
leave
mov
psrlq
ret
lods
mov
lahf
sbbb
xor
adc
cwtl
icebp
ja
sub
xchg
repz
fwait
push
mov
xchg
js
mov
xchg
mov
out
lcall
incb
xor
cmp
jne
mov
jne
fidivrl
xor
sti
ss
test
inc
ret
jl
loop
dec
fdivl
cmp
inc
pop
pop
or
inc
imul
jle
xchg
rcll
lret
jb
clc
sbb
xlat
pop
pop
leave
sub
pop
pushl
push
fcompl
pop
pop
and
adc
movsb
pop
rcrb
pop
push
orl
pop
in
mov
mov
ljmp
aas
pop
xchg
add
test
jl
int3
inc
les
and
jle
ret
xor
pop
cmc
in
test
js
push
push
testl
sub
idivl
fbstp
loop
add
out
call
fdivrs
lods
add
cmpsb
ljmp
sub
pop
icebp
adc
xor
cmp
or
scas
fidivs
pop
cmpl
inc
jnp
outsb
sbb
testl
scas
adc
loopne
push
jl
add
adc
jge
push
mov
dec
aam
out
outsb
xchg
in
sub
pop
lods
mov
cmpsl
mov
notl
push
ds
les
inc
iret
rorl
scas
mov
and
into
xchg
fisubrl
and
nop
outsl
je
aaa
lods
and
pop
add
mov
mov
push
sbb
mov
lods
mov
jg
test
data16
adc
xorl
xchg
jb
popa
inc
ss
clc
sbb
xchg
jb
out
mov
popf
jg
lahf
inc
xchg
lret
int3
insl
fdivrl
fimuls
sub
xor
pop
pop
mov
xchg
adc
lods
or
push
loop
clc
push
adc
insl
push
outsb
repz
ljmp
add
dec
mov
not
mov
push
mov
cmpsl
jne
jl
test
adc
push
mov
shlb
inc
scas
sub
popf
mov
sbb
call
jbe
lods
sub
pop
imul
mov
out
jge
dec
nop
ss
mov
xchg
jns
push
outsb
and
dec
lds
es
dec
lds
xor
or
xor
and
or
call
fcmovu
unpcklps
adc
stc
and
jb
aaa
pop
dec
je
and
mov
pop
lcall
xor
mov
lock
mov
sub
push
lds
imul
adc
call
hlt
fldcw
das
push
adc
push
aam
dec
loope
sbb
add
fists
add
mov
into
add
popa
adc
pop
sbbl
mov
push
jl
jbe
es
add
pop
xor
je
push
inc
adc
fisubrs
jmp
lods
out
inc
pop
mov
mov
xchg
test
add
sarb
mov
test
sarl
xor
cmpsl
test
inc
shrl
movsb
sbb
rep
sbb
jae
pop
inc
sub
test
push
adc
fwait
fs
lcall
in
sub
lcall
icebp
es
fdivs
xor
cmp
scas
jp
xlat
cmp
jae
imul
xchg
adc
xchg
inc
xor
mov
inc
js
add
clc
and
js
les
mov
mov
cld
jne
call
jae
mov
push
mov
loop
out
dec
ficoms
sarb
repnz
mov
lods
cmp
push
sub
inc
xor
mov
out
loope
or
push
jmp
fldlg2
xor
dec
movsb
out
inc
cmp
fs
inc
leave
jbe
addr16
jbe
lods
test
sub
lock
lret
dec
cmp
push
add
xchg
ficoms
or
leave
pushf
sti
mov
mov
lret
jecxz
sbb
xor
addr16
dec
xor
pop
cmp
mov
flds
fldcw
aam
loope
push
cs
mov
cmc
ss
and
push
inc
dec
push
mov
icebp
xchg
or
lods
and
add
and
fs
jmp
fwait
mov
xchg
sbb
xchg
lods
add
mov
jp
lret
jecxz
jnp
pop
mov
add
sub
cwtl
inc
stc
mov
push
out
lods
mov
icebp
shr
adc
out
jle
sbb
or
ljmp
daa
test
shr
test
gs
xchg
outsb
xor
dec
dec
mov
out
push
loope
dec
mov
or
mov
loopne
inc
notl
aam
daa
shlb
stc
stos
dec
xchg
push
ds
mov
dec
and
mov
jecxz
lret
xchg
dec
sbb
and
shll
out
add
scas
out
fldenv
aad
out
cmpsb
test
popf
lods
outsb
pop
push
adc
and
movsl
inc
cmc
lret
jmp
mov
movl
mov
shll
nop
sbb
js
and
xor
aaa
stos
jp
xchg
jbe
pop
or
push
testb
xchg
mov
push
aas
mov
popf
jb
aam
cmp
repz
rcl
add
mov
cld
and
xor
jb
loope
insl
adc
push
in
outsl
xchg
dec
lret
repnz
popa
adc
lret
xchg
push
das
test
and
or
outsl
xor
mov
ds
cwtl
clc
push
shll
int3
scas
aam
sbb
mov
cmp
mov
cmp
lock
adc
pop
fists
icebp
jbe
loop
dec
clc
stc
xlat
sub
imul
mov
aaa
pop
adc
push
sub
popf
mov
insl
cmp
cmp
shrb
popf
cmp
fwait
sbb
jo
das
std
mov
shrb
testb
mov
fisttps
scas
mov
mov
stos
adc
push
mov
ficomps
insb
inc
inc
cmp
mov
aad
mov
es
dec
sbb
stos
add
pop
lcall
lds
aam
mov
and
fisubs
std
sub
cld
pop
out
hlt
popf
sub
add
adc
inc
cmp
out
mov
or
outsb
test
dec
or
dec
andl
push
xlat
sub
lds
xchg
in
int
call
jmp
xchg
in
pop
ret
mov
fistps
js
testb
adc
dec
cmpsl
movsb
mov
stos
mov
xchg
scas
les
rorb
cli
adc
jp
push
pop
mov
mov
cmp
lods
ja
jb
roll
loopne
addb
mov
idivl
lods
mov
or
repnz
fsin
pop
mov
ret
mov
pop
hlt
mov
jmp
push
les
es
inc
push
xlat
pop
xor
mov
repnz
test
cld
add
pop
roll
repz
adc
jne
stos
jbe
cwtl
cmpsb
bound
mov
adc
jnp
dec
adc
or
out
and
adc
insb
adc
mov
lods
jbe
sbb
adc
and
mov
mov
push
fidivrs
sbb
cmp
xor
mov
sub
mov
cltd
inc
jl
or
icebp
jo
dec
int
mov
sub
repz
dec
js
mull
push
push
orl
hlt
frstor
push
cmp
sub
add
lea
dec
jle
cmp
mov
push
mov
push
shlb
inc
enter
clc
out
fsts
aas
out
add
xchg
jg
mov
daa
push
adc
out
rolb
sbb
pop
inc
add
push
cmp
rol
mov
push
jb
fwait
or
mov
cltd
lods
subb
test
data16
jbe
mov
push
imul
push
xor
push
int3
in
cmp
pop
xchg
or
lods
outsb
aas
mov
sbb
lods
ficomps
mov
pop
mov
mov
mov
inc
inc
jmp
sbb
js
mov
bound
shll
adc
xchg
pop
das
mov
bound
inc
inc
adc
icebp
or
sar
imul
je
and
cmp
dec
lret
cli
lds
cltd
dec
mov
mov
dec
scas
add
jp
and
ficompl
loope
xchg
daa
pop
adc
push
pop
lods
imul
push
jmp
jbe
cltd
pop
dec
add
cmc
adc
xlat
xchg
jp
xchg
cmc
pop
fmuls
in
or
pop
mov
mov
loope
int
sbb
rcrl
scas
sub
inc
sbb
cmp
test
in
or
jle
mov
out
pop
fs
inc
arpl
lahf
int3
pop
pop
xlat
push
pop
or
sub
ss
or
lods
pop
jns
fsubrs
popa
test
ss
lret
and
sbb
in
jmp
push
fsubl
xchg
or
cmp
pop
test
push
or
adc
mov
jne
jl
icebp
lret
iret
push
mov
jne
mov
or
das
bound
push
lods
enter
push
xor
pop
nop
mov
frstor
imul
outsb
adc
rorl
fwait
enter
sub
into
push
push
push
jl
push
lahf
inc
jp
push
rcpps
outsl
data16
neg
lods
push
shll
inc
jne
xchg
out
jp
mov
pusha
ret
cmp
mov
adc
in
jg
jns
mov
test
scas
xor
in
mov
lret
jge
insl
fcompl
pop
js
and
movsb
dec
xor
insl
lods
push
dec
iret
popa
pop
mov
or
xchg
imul
xchg
addl
addr16
mov
xor
popf
in
mov
ljmp
xchg
xchg
mov
jb
push
ss
sbb
xchg
xchg
mov
lcall
loop
pop
repz
repnz
xchg
jo
mov
push
ljmp
lock
into
aad
mov
clc
lods
ljmp
xchg
adc
cmp
cmp
hlt
xchg
test
out
js
lret
push
mov
mov
sbb
popa
push
or
test
pop
aaa
ja
adc
add
cltd
daa
inc
push
xor
out
and
jle
or
rorb
lock
dec
data16
jmp
iret
test
sti
sub
test
pop
mov
xchg
jnp
stc
sub
out
pop
pushl
sub
and
and
dec
pop
lea
inc
xlat
ds
and
outsl
inc
hlt
cmp
mov
fidivs
mov
cmp
push
xchg
sub
lock
testl
lret
xchg
xor
and
pushf
cmpsb
mov
jb
pop
jb
jbe
xchg
rorl
push
fldt
int3
jae
cld
lea
cltd
add
jge
mov
and
call
pop
adc
dec
xchg
push
mov
jmp
push
and
pop
cwtl
mov
fsubrl
mov
sbb
rcrb
clc
insl
enter
andl
mov
inc
dec
adc
jge
stc
lahf
int
test
cwtl
clc
int
decl
and
inc
cmpsl
loope
iret
dec
sarb
test
xor
mov
sub
add
scas
inc
jp
enter
and
cmp
scas
push
iret
jmp
setbe
ret
jne
popa
push
jge
mov
into
stos
push
sti
dec
dec
cs
cmc
fdivl
xlat
dec
push
rcrl
jecxz
xchg
mov
out
scas
push
neg
jmp
push
cmp
jns
push
mov
or
movsb
mov
cmp
add
cmp
and
fisttpll
mov
loopne
jno
pop
notb
in
aaa
ljmp
mov
mov
notl
mov
xchg
xchg
and
fsubl
insl
or
loopne
testb
jge
je
loopne
pop
in
je
inc
cli
in
test
and
stc
movw
adc
cmp
mov
rorl
mov
mov
int
inc
inc
lds
sub
xor
loope
imul
lcall
lds
stos
fwait
push
mov
jl
jne
imul
or
cmp
push
or
or
or
push
enter
sub
push
mov
push
mov
xor
cmp
push
inc
cmp
push
inc
popa
rorb
stc
jmp
dec
pop
sub
xor
or
popl
outsl
icebp
movsl
addr16
inc
aam
mov
mov
push
aad
push
jns
or
xchg
leave
add
imul
in
pop
xor
and
or
dec
or
test
rorl
sahf
or
jg
aaa
daa
dec
test
adc
xchg
mov
icebp
andb
fsubl
adc
out
jno
ficoms
xor
pop
addr16
dec
xor
push
mov
inc
or
xchg
pushf
add
into
leave
sbb
pop
das
or
push
or
add
inc
lock
pusha
or
out
mov
ret
push
push
shl
pop
push
pop
adcl
lea
movl
and
loope
xchg
loopne
addr16
pop
out
push
xor
jg,pt
out
rclb
data16
jne
fwait
xor
jo
enter
jle
pop
sub
adc
fiadds
pop
or
mov
adc
mov
cmpsb
push
lcall
xor
sbb
pop
int
mov
mov
xor
mov
mov
fdivs
subl
sarb
cmpl
daa
rolb
xchg
adc
adc
push
jns
add
sti
add
jb
fcom
xchg
jecxz
popf
inc
inc
cmc
negb
push
rclb
sub
stos
sub
sub
xchg
inc
add
je
xlat
jb
ret
inc
shll
cmp
push
inc
icebp
gs
xchg
adc
lahf
aas
pop
ljmp
mov
push
loopne
push
jle
jl
pop
stc
pop
scas
fistl
cmp
cmpsb
rcrb
stc
push
arpl
rolb
mov
sub
mov
push
dec
dec
data16
xchg
dec
mov
out
inc
pushf
pop
iret
xor
push
push
out
mov
xchg
jb
rol
sbb
mov
jnp
lret
lods
xchg
cwtl
jge
lock
adc
mov
ror
das
push
test
cli
inc
das
loope
push
loop
test
int3
pop
add
out
add
sbb
sub
inc
sub
sub
and
pop
std
movsb
out
fisubrl
mov
jno
call
lock
mov
xor
xchg
adc
test
cmpsl
divl
stc
pop
pop
mov
pop
xchg
jns
dec
dec
cltd
sub
in
outsb
in
jecxz
cmpsb
inc
mov
das
out
jp,pn
out
int3
dec
lcall
aam
sbb
insb
jl
push
inc
cmp
or
into
pop
or
add
sarl
push
jne
movsl
lods
push
mov
stc
push
test
xor
in
push
xchg
jge
sahf
inc
xchg
xor
xor
add
adc
out
out
mov
jo
leave
insb
push
push
xor
mov
lds
sub
cmc
pop
sub
mov
hlt
addr16
lods
ret
or
adc
push
in
adc
cmp
cmp
int
push
notb
jbe
pop
xchg
fistl
mov
out
sub
mov
loopne
out
cmp
jge
mov
mov
sahf
arpl
mov
std
mov
mov
xor
daa
lret
sbb
nop
inc
ret
adc
mov
pop
scas
les
cs
push
xor
mov
testb
cltd
mov
into
ror
daa
int
xor
out
inc
movsl
pushf
inc
cld
and
pop
adc
lods
mov
cltd
push
sbb
or
rolb
mov
xor
loop
pop
sub
push
and
push
push
lock
dec
xchg
cwtl
jno
mov
popa
mov
push
xor
neg
rcll
mov
jecxz
dec
or
jg
nop
insb
bextr
mov
cmpsl
jb
subb
pusha
andl
mov
add
jp
mov
dec
lods
stc
cld
es
mov
hlt
sarl
push
inc
repnz
and
pop
sub
adc
stc
fneni(8087
add
cmpsl
dec
imul
xchg
sbb
cmp
or
pop
outsb
adc
shlb
iret
loop
push
or
and
inc
sahf
insb
out
mov
mov
psubb
stos
and
arpl
dec
in
ss
sahf
xor
hlt
ljmp
pop
or
cmp
mov
cmc
pushf
dec
adc
orb
and
jne
leave
push
pop
lock
pop
das
or
jmp
jp
adcl
sarl
sub
push
mov
or
or
dec
or
add
mov
mov
mov
das
mov
lock
mov
xchg
push
inc
inc
add
adc
leave
icebp
popa
lods
lahf
test
xchg
pop
jmp
out
xchg
sub
fisubs
add
sub
mov
fs
mov
shlb
inc
sub
adc
xchg
mov
dec
jge
push
repz
dec
mov
and
arpl
outsl
add
test
das
rclb
fisubrl
popa
enter
xchg
in
aas
cld
xchg
icebp
daa
pop
push
in
vmwrite
pop
and
stc
ss
jl
lods
cmp
fcompl
outsl
inc
enter
xchg
ja
lret
aam
pop
cmpsb
mulb
pop
inc
shrl
cmp
sbb
inc
jnp
cmpsl
xor
jp
outsl
mov
addb
add
sub
movsb
add
das
jecxz
mov
popa
pop
sbb
add
jo
adc
or
jo
nop
sbb
repz
jne
fildl
adc
movsb
and
loope
out
lret
mov
int
jb
inc
sbb
ret
fldenv
mov
rclb
rolb
jle
sub
adc
mull
stos
add
imulb
lock
iret
ret
and
xor
pop
inc
adc
push
and
call
stc
and
test
mov
cmpsl
dec
dec
pop
daa
aaa
outsb
daa
repnz
sub
lods
xlat
push
ret
adc
rcrl
rorl
mov
sub
cmp
scas
lret
push
imul
ds
push
lcall
rclb
or
xchg
imul
or
mov
mov
dec
and
mov
jl
mov
dec
orl
xlat
mov
pop
rcrb
pushf
add
in
add
sbb
jnp
out
or
mov
stos
test
mov
dec
and
stc
lcall
ss
daa
add
js
push
imul
jbe
add
dec
xor
scas
sti
push
lsl
jl
jae
adc
inc
push
leave
mov
inc
push
pushf
inc
sbb
pop
js
pop
sub
or
out
repnz
call
adc
testl
fisubrs
rcll
cmp
and
les
hlt
jns
test
push
lock
add
sub
movb
rorb
push
lods
lahf
or
xchg
in
mov
insl
mov
inc
ss
call
shrl
clc
pop
xchg
sub
push
fcomi
mov
inc
mov
outsl
ljmp
addr16
dec
icebp
sbb
sbb
addl
cmp
cld
insb
jb
fsubrl
add
imul
iret
dec
fwait
inc
mov
stc
xchg
scas
out
cs
mov
test
pushf
mov
inc
dec
stc
and
clc
mov
push
and
adc
popf
pusha
pusha
pop
pop
add
push
cmpsl
aas
inc
push
mov
or
dec
pop
arpl
xor
fwait
mov
std
mov
fadd
out
mov
test
rcr
mov
imulb
aas
ss
and
mov
jl
mov
int
push
fldl
icebp
inc
cmp
jb
das
mov
mov
imul
clc
cli
pop
and
lds
mov
xor
lret
ret
mov
mov
dec
sub
mov
and
rolb
ret
mov
push
dec
popf
or
fmuls
cwtl
xlat
les
mov
dec
jo
push
pop
or
nop
xor
jne
lahf
mov
ffree
jg
in
stos
ss
addl
push
mov
mov
clc
mov
les
stos
inc
mov
jl
test
adc
cmp
and
in
mov
bound
mov
sub
inc
aas
mov
loopne
cli
xchg
dec
xchg
cmp
je
xchg
daa
push
mov
arpl
inc
repz
mov
shlb
cmpsl
mov
test
into
clc
test
mov
push
xlat
and
dec
xor
push
les
jno
sub
sbb
or
movsb
inc
stos
cmp
mov
stc
mov
push
sbb
inc
xlat
dec
push
out
adc
push
add
and
clc
fisttpl
adc
das
push
addb
pop
or
lret
cmp
add
push
out
push
fisttpll
das
mov
sbb
xchg
loopne
jg
sub
pop
and
loope
inc
xor
mov
sbb
dec
add
movsl
mov
and
icebp
pop
lea
jno
cmpsl
popa
sub
pop
std
mov
andl
push
cmp
mov
mov
and
shl
mov
mov
sti
imull
inc
movsb
or
add
adc
jno
sbb
cmp
cmp
dec
mov
cwtl
push
insb
mov
rclb
in
sub
push
inc
sbb
cld
push
call
lahf
enter
jecxz
jp
jns
test
jbe
mov
cmp
lods
mov
cli
or
leave
test
aad
sbb
dec
add
jecxz
lea
xor
adc
repnz
add
push
inc
stos
xchg
add
jno
push
es
pop
arpl
or
hlt
mov
in
movsb
xor
out
inc
pop
sub
fs
cmp
jg
mov
and
and
mov
ds
insl
out
or
cmp
fidivrl
shrl
pop
mov
push
inc
leave
cmp
xchg
clc
xor
std
mov
jno
insl
cmp
bound
xor
sub
pop
stos
fcom
notl
leave
fwait
loop
call
cld
cmp
xchg
push
jbe
or
movsb
mov
sbb
or
daa
pop
mov
ja
dec
negb
mov
mov
repz
xor
or
sbb
push
push
push
adc
cmp
test
cli
adc
mov
dec
imull
lcall
into
jmp
cmp
and
clc
popa
lods
lods
fs
movsb
stos
jge
push
data16
xor
push
push
dec
call
sahf
fmull
and
jnp
leave
scas
or
sub
sti
mov
loop
cmpsb
jnp
add
mov
out
pop
mov
out
push
lods
fstps
ret
jmp
lock
mov
or
or
xchg
movsl
loopne
push
pop
or
xchg
push
mov
aad
adc
sub
sub
pushf
inc
bound
data16
pop
lret
or
outsb
pop
aad
mov
outsl
and
push
fcmovu
roll
xor
rolb
cmpsl
jae
dec
ss
es
xchg
inc
pop
aas
adc
test
aas
mov
enter
sarb
push
push
icebp
sub
pop
ds
push
push
jmp
in
fs
ret
cmp
mov
cs
sub
xchg
fmull
sub
fs
stos
or
sbb
xchg
mov
xlat
sub
adc
imul
xor
lcall
jne
data16
js
sbb
push
cld
rcrb
cmp
pop
add
addr16
aas
out
icebp
and
fcompl
mov
sub
jo
out
divb
hlt
lds
dec
js
push
scas
in
fdivrl
cs
addl
rolb
subl
xchg
jecxz
cwtl
jg
adc
jbe
not
out
push
cmc
sahf
nop
xor
inc
dec
addr16
add
jae
imul
cmpsl
fs
sahf
jp
addr16
repz
sub
xor
add
fwait
ret
sbb
in
pop
xchg
xor
and
mov
arpl
int3
or
stc
stos
test
mull
push
jbe
pop
cmp
in
in
xorb
mov
add
xor
aas
pushw
adc
ljmp
dec
xchg
cmpl
das
inc
xlat
scas
fisubrl
sub
stos
adc
fisubrs
nop
inc
sub
movsb
push
sbb
sub
stos
xor
call
dec
inc
and
movsl
cmpsl
jne
test
lcall
push
adc
jbe
icebp
mov
jg
cmp
add
loop
repz
outsb
orl
into
mov
pop
stos
dec
sbb
shlb
sbb
sbb
or
pop
sbb
mov
lock
jns
dec
cmc
sbb
out
sbb
repz
inc
and
pushf
ja
push
sub
jecxz
pop
in
cltd
ljmp
push
bound
in
inc
push
xchg
inc
cmpsb
sub
test
cmp
aas
cmp
xchg
mov
bound
mov
sbb
push
data16
ja
mov
lock
lock
sbb
ljmp
stos
pop
dec
pop
mov
orb
lea
adc
add
stos
test
sbb
imull
popf
pop
xchg
sbb
movsl
fdivrs
jl
rcll
into
pop
sub
lods
mov
push
push
jae
sub
cmp
in
jp
xor
fdivrl
xchg
adc
jae
pop
std
nop
xchg
push
in
test
ror
mov
fidivrs
xor
test
xor
lds
pop
shrl
ss
mov
cmp
or
daa
fdivl
lret
sbb
cmp
add
addr16
xchg
inc
and
in
divl
dec
in
hlt
or
mov
mov
cmp
out
or
cmpsb
popa
jne
out
push
jno
add
jnp
mov
idivb
pusha
js
add
into
loop
out
je
adc
fsubrs
pop
int
dec
insl
notl
jno
push
int3
insl
inc
es
push
dec
mov
dec
test
addr16
xor
push
mov
aad
les
dec
or
js
mov
and
sarl
inc
pop
cmp
pop
mov
hlt
enter
cmp
jns
pop
les
sub
push
das
cmpsl
cmpsb
inc
insl
sub
scas
lahf
icebp
outsb
ss
pop
shrb
int
mov
lea
ret
mov
icebp
sub
int3
leave
stc
dec
pop
pushf
add
adc
push
jno
jp
nop
out
lock
xor
into
push
shrb
push
mov
call
pop
xor
mov
push
popa
outsb
lds
loope
js
push
call
iret
sbb
fidivrl
idivl
popa
pop
aam
inc
or
daa
shll
lock
jmp
sbb
mov
add
mov
mov
or
mov
dec
jnp
xchg
add
mov
icebp
imul
dec
and
and
lahf
mov
mov
repnz
cmpsb
enter
cmpsb
or
movsl
cli
pop
out
fcmove
lret
scas
inc
sub
iret
lret
dec
test
rcrb
sbb
push
sbb
gs
pop
fdivrl
mov
fdivrl
xrelease
adc
cld
mov
cs
jno
es
cld
cli
dec
lea
dec
ja
sbb
out
popf
loop
pop
mov
test
data16
push
sti
stos
and
inc
cmc
or
xor
sub
iret
push
and
mov
mov
mov
jbe
mov
rcll
outsl
cmp
jg
movsb
xchg
fistpll
aaa
mov
cmp
jns
int
inc
test
lret
sbb
push
std
sbb
pop
xorl
ds
dec
pop
mov
jnp
adc
cwtl
test
iret
inc
or
popa
add
lahf
call
test
out
push
comiss
xchg
mov
ret
and
hlt
stos
mov
cmp
gs
adc
test
pushf
into
inc
mov
stc
dec
xchg
cltd
mov
rcr
int
pop
std
inc
adc
cmp
lods
xchg
xor
pop
push
inc
test
cmpsl
sub
dec
or
ljmp
push
push
das
push
js
jnp
sub
mov
fucomip
mov
inc
loope
pop
mov
cld
rolb
sbb
das
das
mov
loopne
jl
push
int
aam
lock
decl
sbb
enter
pop
ret
and
mov
jge
xchg
jne
sbb
iret
xor
scas
inc
inc
lods
out
js
pop
clc
sub
mov
xchg
pop
or
mov
pusha
xlat
int3
in
or
popa
xor
dec
pushf
cli
imul
xchg
in
fcom
mov
test
mov
in
jns
fst
or
sub
mov
mov
daa
jbe
shrb
mov
ret
sbb
mov
insl
fsubl
test
ret
sub
dec
jne
cwtl
bound
outsb
enter
jecxz
inc
mov
jmp
dec
sbb
cmc
out
int
cmpsb
sub
out
roll
fstpt
into
cmp
mov
mov
and
jmp
and
dec
add
xor
jns
andb
imul
icebp
cmp
lea
aad
jnp
iret
cld
rclb
dec
xor
lods
mov
rclb
sahf
ffree
ret
cmpsl
loopne
cmp
xor
mov
xor
inc
mov
shl
pop
push
in
repnz
dec
xchg
xchg
inc
mov
pop
or
fs
or
andb
pop
adc
inc
jl
jl
in
dec
lcall
stc
mulb
mov
shll
jmp
iret
popf
adc
xchg
mov
mov
or
ss
leave
sub
jae
add
or
push
jo
pop
popl
lock
jbe
js
xchg
and
push
fnstcw
xor
sub
jns
dec
add
xor
mov
subb
dec
dec
ret
mov
mov
test
ret
gs
mov
mov
mov
fdivs
ror
mov
pop
lods
mov
loopne
adc
sbb
mov
js
loopne
sbb
fldenv
std
les
xchg
loope
and
or
adc
insl
stc
jg
inc
outsb
fbld
jecxz
leave
addr16
sbb
push
dec
mov
mov
and
mov
gs
fstl
mov
loopne
add
xlat
and
in
add
sub
adc
inc
pop
pop
shrl
aaa
je
sbb
dec
into
jae
mov
inc
mov
dec
cld
mov
imul
inc
mov
push
cwtl
lcall
xchg
pusha
sahf
cmpsb
inc
xchg
fidivl
jbe,pn
or
sbb
push
xor
addb
jl,pt
jae
or
jbe
fwait
cmpsb
test
cmc
test
push
lcall
outsl
or
xchg
push
sbb
in
mov
sub
pop
pop
ja
nop
xor
aad
pop
adcl
lahf
push
imul
mov
movsl
cs
lea
push
adc
inc
sbb
mov
les
add
push
lea
xor
adc
shrb
shlb
or
xor
pop
fsubp
push
xor
jecxz
cltd
sub
cmp
stos
rcrl
and
jno
in
pop
xchg
ret
adc
ret
popa
mov
sarb
ljmp
std
insb
pop
lret
loopne
mov
fxch
mov
repz
mov
fisubrs
sbb
mov
xor
aaa
lea
js
sub
dec
and
mov
lcall
push
mov
mov
mov
push
aas
and
cmp
xchg
mov
add
movsb
jne
mov
sub
les
push
iret
and
movsb
rcrb
je
fdivl
ljmp
adc
lea
std
jge
cmp
js
leave
gs
mov
jle
movups
jge
or
imul
xor
sub
out
push
xlat
jnp
sub
movsb
daa
add
dec
pop
lea
lea
fwait
pop
jl
insb
loope
loopne
xchg
mov
mov
cmp
aas
mov
int
inc
nop
outsl
jecxz
dec
mov
jl
push
push
xor
pop
mov
mov
pop
icebp
push
nop
inc
enter
push
hlt
and
sarb
cmp
fmull
inc
and
mov
in
test
mov
outsb
movsb
xchg
inc
out
stos
xor
inc
movsl
imul
inc
dec
jns
ret
xchg
push
je
adc
fnstcw
cs
sbb
or
xor
xlat
cmp
dec
pop
pop
add
pop
add
ficompl
cld
adc
rorb
movsl
stos
rcrl
sbb
jnp
in
icebp
aam
push
loope
xchg
cwtl
sbb
jmp
add
ss
sub
sbb
loope
dec
xor
pop
lea
mov
int3
sbb
jne
ss
cmp
inc
in
dec
addr16
push
fstps
mov
fistpl
fbstp
jnp
and
jo
jmp
pushf
out
hlt
mov
incl
imul
arpl
loopne
cmp
mov
cmc
sbb
sub
stos
andb
sub
addr16
notb
push
dec
inc
out
int3
inc
mov
or
or
test
cwtl
fdivrl
call
sbb
dec
outsb
popf
pop
pop
sahf
mov
sub
jmp
maxps
inc
sub
int
sub
insb
dec
inc
cmc
xchg
xchg
iret
loop
daa
cltd
xor
outsl
dec
mov
mov
bound
dec
iret
iret
push
mov
das
insl
add
inc
xchg
outsb
cmp
outsb
jl
out
outsb
cs
cs
js
fcompl
js
mov
add
ljmp
shlb
loop
das
fneni(8087
jle
cmpsb
xorl
rcl
enter
jne
dec
ficoml
adc
cli
call
aad
xchg
out
sarb
dec
pop
mov
push
repz
push
pop
cli
push
arpl
into
and
repnz
aaa
push
pop
fdiv
cmp
out
in
mov
inc
cli
stos
insl
sarb
xchg
inc
aam
pop
xchg
dec
and
push
jg
xorb
rorb
in
adc
pop
hlt
add
pop
xor
ficoml
cs
into
movsb
shll
pop
mov
sahf
sbb
xchg
pop
jns
adc
cs
sub
push
xor
bound
nop
and
xorl
pop
aad
push
pushf
out
sbb
sub
mov
push
int3
push
mov
adc
adc
test
addr16
push
subl
es
push
imul
outsl
jnp
or
jmp
mov
ror
and
shrb
loope
popa
pushf
orl
fdivrl
and
sahf
and
das
cs
lock
add
sub
mov
xorl
fnstenv
dec
hlt
mov
mov
hlt
xor
test
mov
sbb
aas
imul
sbb
mov
imul
outsb
adc
iret
outsl
mov
repz
jg
test
push
gs
fcmove
mov
call
xchg
std
xorb
outsb
mov
lds
enter
addl
mov
int
fwait
imul
es
int3
mov
mov
jo,pn
mov
in
js
pop
daa
cltd
ja
mov
popf
shll
push
mov
leave
inc
aad
sub
jae
mov
xchg
ja
data16
aas
push
lcall
mov
jmp
aad
sub
fldcw
push
cld
ss
pop
jl
sub
insb
push
mov
outsl
cmp
pop
add
dec
scas
cwtl
jne
jle
arpl
sub
mov
jle
ficoml
cmpsb
and
mov
add
push
jae
testb
jl
sbb
adc
aad
inc
inc
arpl
fisubl
xor
mov
test
or
or
das
stos
loope
or
lcall
sub
int
xchg
shl
cmp
cmpb
or
or
jp
sub
out
lds
inc
iret
inc
cli
pop
pop
jne
out
xchg
mov
fs
pop
jbe
aad
mov
inc
cmpsl
call
sahf
addr16
hlt
adc
pop
repz
test
xchg
shrb
mov
shll
push
insl
mov
adc
pop
add
sub
and
andl
pop
clc
sub
repz
mov
sbb
dec
xor
pop
aam
lods
imul
cld
push
jp
mov
or
imul
fmull
xor
mov
jg
mov
cld
push
cmp
loopne
repnz
mov
stc
fwait
sarb
ja
enter
mov
xchg
scas
fstpt
xchg
cmp
mov
and
aad
push
ret
cmpsb
jno
fcomi
inc
movsb
pop
adcl
in
inc
icebp
mov
xchg
in
clc
mov
add
pop
jnp
sbb
out
push
push
cmpsb
pusha
bound
lahf
loopne
addr16
jmp
adc
inc
in
inc
cmpsl
cmpsl
add
and
loop
sbb
mov
xorl
mov
shlb
jno
rorb
xchg
adc
mov
push
jge
adc
push
xchg
xchg
mov
jp
xchg
sti
pop
lea
ja
xlat
sti
fcmovbe
dec
cli
dec
adc
sub
xchg
outsb
enter
mov
sahf
mov
dec
mov
arpl
mov
mov
dec
push
and
and
in
imul
and
xor
jnp
dec
clc
xchg
push
sub
cmp
clc
repnz
clc
sub
push
push
and
sarb
aam
dec
clc
push
imul
lcall
shlb
insl
enter
gs
pushf
test
scas
lahf
push
adc
mov
or
jg
and
sbbb
sbb
inc
mull
and
inc
push
lret
leave
dec
fmuls
mov
andl
cmp
js
sub
jle
jg
push
aaa
hlt
and
and
movsb
inc
fmull
scas
and
aam
or
or
mov
nop
inc
out
fsub
jb
cmp
mov
cmp
ds
push
js
and
sarl
jo
int
adc
lret
mov
fcompl
cmovne
gs
mov
cmp
sub
in
rclb
scas
out
fcomps
push
hlt
cmp
outsb
test
popa
mov
adc
mov
scas
dec
mov
scas
daa
fiadds
xchg
push
cltd
adc
sbb
push
cmp
lock
and
jo
aaa
js
nop
stc
fildl
jae
lcall
dec
jge
add
sub
pop
sarb
iret
aad
mov
mov
add
sbb
pop
xor
or
push
sbb
mov
je
cmp
pushf
mov
aas
adc
sub
xor
scas
je
and
adcl
push
ljmp
sub
adc
shrl
dec
and
xchg
push
into
into
dec
orl
mov
dec
hlt
sti
into
cwtl
imul
loope
push
lods
mov
xchg
loopne
add
out
les
lock
cmc
xchg
lret
inc
movb
pop
xchg
es
fcmovbe
mov
arpl
iret
stos
sub
imul
into
pop
jns
cwtl
pop
test
sub
jg
xor
xchg
mov
adc
clc
cmp
and
lahf
xor
or
jne
outsl
cmpsb
sahf
in
mov
adc
cli
leave
pop
adc
cmp
pop
roll
pushf
ret
pop
cmp
cs
and
insl
aam
xchg
and
xor
push
bound
adc
adc
scas
push
mov
shrl
xchg
aam
lahf
daa
mov
les
sbb
mov
repnz
push
call
mov
xchg
sahf
xlat
hlt
xchg
or
icebp
adc
bnd
loope
jmp
add
fcoms
mov
into
shll
inc
dec
cmp
jmp
push
fsubrp
pushf
inc
mov
sub
imul
dec
push
add
fsqrt
fadd
cld
sbb
lret
in
iret
mov
mov
leave
pop
out
adc
into
repnz
sub
mov
jnp
stc
loopne
pop
push
and
xor
scas
and
mov
jo
jle
loop
push
push
outsl
dec
push
or
mov
decl
mov
mov
hlt
and
fstps
inc
test
jnp
pusha
cwtl
out
aas
test
lret
mov
pop
je
push
imul
stos
pop
lahf
pop
insl
mov
jmp
or
rolb
and
xor
add
jo
jg
pop
pop
mov
out
imul
mov
test
orb
cmpb
jo
clc
insb
cmpb
jbe
and
lahf
mov
test
mov
js
jl
out
in
out
pop
pop
fcmovb
ret
mov
dec
fdivs
add
aad
jecxz
das
inc
ret
mov
push
je
sbb
fdivrs
out
pop
shrl
mov
lods
jb
and
add
stc
xor
loopne
aaa
xlat
mov
xchg
or
push
cmp
add
fimull
mov
cltd
cs
je
xchg
call
mov
jl
sbb
adc
and
ret
add
iret
jo
mov
adc
cmp
mov
jecxz
sub
sti
xchg
rclb
adc
sbb
das
sbb
or
sbb
pop
js
fdivrs
cmp
push
in
aas
lea
lock
test
jns
fisubrs
xor
xchg
mov
mov
and
xor
mov
jns
and
decl
add
cmp
push
cmc
sub
add
out
mov
sbb
jge
nop
pop
lods
xor
je
call
fldt
ret
repnz
jne
inc
mov
repz
arpl
leave
daa
add
cld
sti
xchg
nop
gs
pop
into
dec
add
pop
xor
mov
xor
push
fisttpll
ret
jecxz
aad
pusha
mov
adc
jmp
iret
adc
and
scas
sub
rorl
mov
add
mov
xchg
imul
das
or
cmp
adc
or
or
daa
pusha
mov
fstp
push
xchg
je
add
or
mov
sti
jne
adc
bound
xor
mov
aam
dec
dec
jae
ja
cmpsb
nop
fs
mull
or
jecxz
cwtl
loop
inc
ss
pop
icebp
jle
jae
jb
lahf
in
push
xchg
xchg
loop
or
scas
adc
je
rolb
pop
mov
cmc
lds
aaa
pop
icebp
cli
shlb
shrb
iret
daa
lret
xchg
repnz
add
lods
daa
dec
and
pop
fstpt
mov
dec
xor
loope
in
sbb
xchg
mov
imul
scas
sub
std
in
jmp
push
push
loopne
es
push
inc
mov
mov
or
add
sub
mov
stos
mov
or
pop
movsb
bound
mov
sbb
scas
and
xor
xor
push
push
jno
mov
mov
and
arpl
mov
mov
add
sbb
mov
sub
hlt
imul
push
loop
sbb
push
sub
mov
stos
mov
outsb
lahf
xlat
rcr
dec
jle
mov
xchg
push
out
ljmp
push
fdivrl
mov
push
mov
cs
sub
js
lret
inc
aas
inc
xor
fcomps
out
scas
repz
jno
mov
stos
add
or
and
push
int3
xchg
popa
sbb
out
mov
mov
dec
leave
adc
mov
les
data16
cmp
cmc
mov
lods
sbb
test
xor
xchg
push
adcl
out
cmpsb
and
loopne,pn
outsb
rcrb
add
rcr
pop
mov
dec
cmp
cs
xchg
lock
lea
adc
pop
pop
sbb
ss
mov
dec
mov
out
daa
jno
gs
push
fcoml
sbb
add
sbb
adc
cmp
std
pop
sti
test
pop
notl
hlt
int3
ds
aam
iret
lods
cmpsl
aaa
cld
mov
imul
leave
and
xchg
lods
cmp
sub
int3
add
outsb
or
popa
pop
mov
sub
ja
mov
stos
movsb
hlt
mov
mov
ljmp
fists
imul
cmp
sti
add
push
jae
scas
adc
popa
and
push
fdivrl
mov
fisubrl
das
scas
push
mov
mov
iret
sub
stos
jae
lret
out
and
inc
outsb
loop
jnp
xor
addr16
add
inc
jns
xor
std
push
xchg
inc
insl
cmpsl
dec
ja
adc
ds
int
inc
lahf
mov
iret
xor
xor
xchg
push
insl
lock
fldt
cmc
mov
mov
push
les
stos
popf
out
push
xchg
xor
fsincos
jge
and
imul
cltd
stos
pop
ljmp
imul
into
rcr
ret
cmpsl
call
xlat
fwait
mov
and
out
jg
mov
sub
andl
dec
xchg
cs
and
sbb
xchg
and
xlat
pop
sub
clc
xor
and
in
mov
cmp
jge
fidivs
imul
push
in
pop
incl
cwtl
or
sbb
pop
push
sub
lds
pop
shrl
mull
or
addr16
iret
andb
push
mov
push
mov
movsl
popa
sbb
loop
jno
push
flds
call
sbb
mov
stos
mov
imul
add
fwait
dec
xor
adcb
out
sub
or
xchg
enter
ret
and
push
testb
jo
in
push
scas
push
sahf
jb
jae
int
repnz
pusha
inc
adc
incl
loop
lods
std
std
dec
test
fstpt
mov
xor
out
pop
rcll
lock
sub
sbb
adc
xchg
fdivl
xchg
pop
sbb
jnp
testb
test
hlt
lock
loop
and
std
mov
roll
dec
dec
mov
test
and
or
sub
sub
mov
jo
jae
outsb
adc
inc
mov
mov
fwait
mov
lock
mov
xchg
jmp
mov
mov
jle
dec
aad
bound
addr16
lods
js
std
daa
xchg
push
movsl
adc
ds
mov
jecxz
mov
push
sbb
aad
xlat
or
fadd
adc
sub
jl
jg
lock
mov
and
jmp
into
push
and
ja
pop
out
aas
or
outsl
ror
inc
cmpsl
insb
push
pop
ja
pop
xlat
pushf
lods
add
add
stos
loope
aaa
iret
xor
addr16
mov
pop
jmp
mov
xor
adc
lds
add
gs
xchg
test
adc
cmp
pop
lds
sbb
in
repnz
xchg
rclb
push
imul
push
sub
add
jle
fs
jae
xchg
cmp
mov
push
cli
iret
jne
mov
test
outsb
add
fbstp
out
push
in
aaa
jb
push
rclb
insl
or
push
mov
xchg
jnp
lods
fs
mov
sti
mov
pop
stc
cs
movaps
mov
dec
sub
clc
dec
andb
mov
es
xchg
mov
mov
jp
loope
ljmp
cmp
lahf
hlt
fidivrs
fcmovne
les
loope
xchg
ds
cmp
lods
jo
ljmp
sbb
push
mov
mov
mov
out
mov
bnd
xchg
jae
adc
xor
cmp
inc
push
js
je
cli
inc
mov
clc
and
sahf
mov
xchg
cltd
rcll
sub
mov
sub
bound
add
xchg
shrb
and
outsl
jle
lret
push
testb
or
sub
sub
xchg
jle
jno
sbb
gs
mov
int3
mov
in
dec
push
movsl
jb
push
pop
mov
test
shl
cld
scas
loopne
icebp
mov
fisubrl
lret
add
and
mov
hlt
sub
ds
std
stos
jne
mov
jle
adc
push
sub
das
mov
lods
notb
iret
movsb
mov
fdivrl
cmp
jecxz
js
mov
or
adcb
mov
fs
insb
aad
iret
mov
gs
jae
pop
dec
mov
cmp
lret
mov
push
addr16
mov
lock
imulb
jecxz
clc
je
rcrl
and
and
sub
lea
xorb
lcall
loope
push
out
cmpsl
test
xchg
aam
pop
popa
in
incl
lret
outsl
aad
jae
mov
dec
inc
loope
imul
movsl
or
movsl
fcomps
jne
insl
aaa
and
test
lea
ret
imul
pushf
hlt
cmp
imulb
mov
lret
dec
add
fsub
int3
dec
test
orl
rcr
orl
inc
ljmp
dec
cmp
add
mov
das
pop
icebp
hlt
inc
test
xor
push
dec
js
into
test
aad
rcrl
sti
shlb
push
xor
jecxz
adc
imul
ds
fidivs
and
arpl
fwait
repz
imul
mov
imulb
push
inc
cld
sub
rcrb
sub
and
or
jmp
mov
push
mov
mov
rcrb
rol
imul
or
in
sub
js
pushf
xchg
jns
sub
cmpsl
dec
arpl
mov
int3
ret
shl
fiaddl
push
cmp
sti
cmpsl
cmp
mov
fwait
xchg
xor
xchg
sti
inc
sti
sbb
xchg
xchg
xor
mov
mov
fstps
sbb
pop
ret
mov
pop
fwait
mulb
rcrl
lods
and
idivb
xchg
adc
or
jnp
sbb
dec
and
in
xchg
adcl
xchg
addl
int
inc
cmc
cs
mov
scas
daa
mov
test
and
cwtl
push
inc
dec
insl
negb
inc
call
pop
mov
das
cltd
mov
jmp
inc
jns
rolb
inc
es
leave
sub
repz
outsb
xchg
int
rcl
jbe
pop
mov
in
fistpl
popf
adc
or
sbb
mov
lret
push
imul
int
sub
xchg
out
mov
xlat
add
jne
fwait
test
ffree
add
pop
mov
in
arpl
cli
push
aad
movsb
lds
scas
fidivl
jmp
int3
and
sub
or
mov
aas
pop
enter
inc
ret
cli
fdivl
adc
xchg
xor
repnz
lret
add
popf
mov
scas
jle
jecxz
je
inc
mov
adc
push
xor
lahf
js
cli
jge
movsb
movsl
push
push
hlt
dec
sbb
cmc
adc
in
out
inc
lods
adc
add
jecxz
mov
mov
dec
cli
std
data16
kmovb
mov
rorl
cli
dec
xchg
hlt
ja
push
sbb
pop
movsb
mov
lods
xchg
push
add
push
popa
call
lods
or
lret
fsubl
jnp
stc
pop
inc
aas
lds
test
icebp
mov
leave
xchg
pop
imul
sbb
mov
fs
xchg
clc
sahf
xchg
aas
mov
jg
stos
xchg
push
mov
mov
xchg
lods
dec
mov
jle
dec
jns
inc
aad
ret
pop
mov
loop
fisubrs
mov
cmp
and
mull
aaa
jnp
pop
iret
jp
and
pushf
cli
shlb
fadds
xchg
xor
daa
mov
pusha
xchg
sub
cmc
mov
insl
xchg
stc
sbb
out
ss
and
cmp
clc
sbb
cmp
sahf
xchg
int3
xlat
or
mov
idiv
mov
out
pusha
fisttpll
mov
nop
out
arpl
push
adc
jo
and
std
mov
insl
mov
ss
dec
mov
lods
jne
cmp
andl
lahf
imul
xor
push
mov
iret
push
sbb
ds
sub
cmpsl
int
repnz
fldcw
inc
push
or
push
push
clc
mov
push
inc
mov
repz
dec
daa
pop
or
cld
aas
inc
mov
cmp
lret
adc
shrb
shll
jl
out
jbe
inc
inc
pop
daa
sar
inc
orl
shl
jbe
repnz
movsl
inc
into
mov
mov
sti
call
push
mov
push
inc
jbe
lret
repz
or
inc
pop
push
mov
inc
sub
mov
xor
fsubrs
sahf
xor
sti
repnz
lret
test
sub
movl
aas
or
mov
mov
inc
dec
loopne
bound
mov
add
lret
mov
cltd
pop
loop
jmp
mov
orb
ja
sbb
inc
adc
push
cmp
xchg
cltd
mov
insb
je
xor
sbb
dec
cmp
cmp
mov
insl
dec
setbe
push
sub
push
in
mov
enter
or
ljmp
mov
imul
inc
aas
and
call
inc
add
movsb
sbb
cmp
movsb
or
and
cwtl
jnp
xlat
mov
and
nop
data16
jo
or
iret
mov
jecxz
lret
bound
int3
sub
and
sub
cltd
add
js
cmp
int
mov
clc
pop
mov
test
ror
pop
jg
add
sahf
fwait
rorb
pop
jg
xor
scas
jnp
ss
int
cmp
and
lods
jnp
ficoml
xor
call
jnp
or
and
out
test
add
packuswb
mov
jl
lds
mov
adc
sub
adc
shl
xor
mov
inc
xchg
adc
jnp
mov
pop
pop
inc
jo
sbb
sub
fdivr
mov
add
mov
test
pushf
aad
mov
dec
and
leave
pop
jl
addl
jbe
pop
js
imul
adc
inc
inc
cmp
cmp
adc
dec
xchg
fiaddl
jae
dec
xchg
or
jb
shl
mov
ja
jecxz
or
repz
cmp
scas
fisubrl
aam
mov
sahf
dec
fldcw
bnd
outsb
or
push
mov
cmp
aad
call
leave
adc
inc
nop
idivb
int
ds
jge
mov
clc
shrl
cmpb
ja
mov
inc
nop
xor
mov
andb
outsl
jae
mov
fstps
and
push
repnz
jp
popa
cmp
mov
adc
xchg
cwtl
in
lahf
es
mov
fisttpl
mov
mov
sub
or
cmovl
jae
ja
insl
popl
pop
aas
aad
push
loopne
inc
sub
adcl
or
inc
imul
imul
push
xor
add
out
xchg
xchg
out
repz
in
adc
aas
lret
push
pop
cmp
in
aad
pop
fsubrl
xchg
sbb
in
orl
mov
sbb
in
loopne
mov
testl
mov
mov
scas
mov
fwait
out
stos
push
popf
dec
lods
cld
ljmp
adc
mov
xchg
and
sub
in
es
mov
outsb
jnp
jns
and
jge
shlb
cmp
fstl
cltd
pop
adc
adc
mov
jge
or
in
xchg
out
pop
fwait
loope
mov
sbb
sbb
add
dec
jmp
dec
jb
jb
repz
mov
dec
daa
pop
dec
lods
mov
movsl
fs
mov
out
inc
lret
push
dec
roll
xchg
cmpb
cmp
pusha
movsb
dec
xor
push
push
cmc
lfs
xor
scas
fdivp
add
mov
push
nop
aas
test
fistpll
xchg
pop
lcall
mov
inc
pop
icebp
fimuls
add
jecxz
stc
dec
pushf
or
ret
mov
sbb
add
sbb
popa
push
mov
rol
xchg
xor
call
xor
aad
ret
cmp
in
iret
pop
nopl
out
mov
sub
pop
push
dec
cs
cli
add
repnz
popa
push
xlat
fs
pop
and
inc
aas
lods
xchg
mov
icebp
fwait
pop
jnp
testb
mov
movsb
popf
mov
mov
js
xchg
dec
add
notl
adc
jle
call
inc
mov
clc
xor
iret
in
xchg
ror
popa
aam
mov
xor
xor
aam
shrb
fldl
clc
xor
or
nop
inc
xor
test
ret
mov
cmp
sbb
rcr
sub
cmp
adc
scas
imul
cmp
add
lret
push
xchg
pop
jp
xlat
push
rolb
inc
adc
and
push
mov
xchg
enter
mov
mov
loop
scas
jge
insl
xor
add
add
xchg
add
lods
andl
jecxz
enter
mov
les
adc
loopne
stos
aas
push
les
cmp
lahf
push
mulb
outsb
in
pusha
hlt
cld
lretw
xchg
popf
fdiv
call
xchg
idivb
jle,pt
mov
pop
pusha
je
sbb
sbb
mov
cmpl
push
into
in
pop
sbb
imul
mov
dec
jmp
sub
push
jne
jnp
scas
and
adc
mov
out
sbb
cmp
mov
repz
mov
mov
cs
shlb
dec
lods
mov
pop
test
sahf
mov
jle
inc
cwtl
inc
jmp
xchg
fimuls
in
mov
xchg
iret
iret
loopne
ret
jb
cli
testl
mov
std
rclb
jge
and
or
adc
clc
lahf
jo
dec
jno
dec
pop
push
mov
lods
test
pushf
inc
push
sub
mov
xor
jns
fisubrs
inc
daa
xchg
xor
es
sti
fistpl
int3
cmp
test
inc
cltd
cmp
jp
aaa
clc
sbb
and
in
mov
adc
jl
call
fiaddl
mov
xchg
xchg
jne
fs
jg
loopne
lods
sub
sahf
mov
rol
hlt
xor
push
cli
mov
dec
cmp
or
mov
mov
addr16
mov
mov
lcall
or
jbe
push
and
ftst
outsl
or
cmp
imul
bnd
push
xchg
aad
and
mov
sbb
mov
inc
push
push
cld
les
dec
imul
xchg
ljmp
test
xchg
decb
cmpsb
cmp
mov
fcmove
push
and
push
cmp
outsl
into
xchg
rcl
xchg
xchg
test
jo
pop
mov
popa
filds
rcr
nop
testb
mov
adc
dec
shll
fstl
sbb
test
add
sub
adc
inc
jb
leave
inc
cs
cwtl
in
rcll
sub
mov
lahf
and
mov
aam
rclb
cmp
pop
sahf
sbb
inc
rcrl
mov
movsb
cvttps2pi
mov
and
lcall
aas
or
js
lods
jge
mov
pop
sbb
ret
cltd
cmc
fwait
push
sub
out
das
loop
pop
pop
gs
enter
push
outsb
ja
push
mov
js
hlt
out
sub
jl
xor
divl
test
inc
adcl
xor
cwtl
in
out
rcrb
pop
and
lahf
loop
in
test
inc
scas
cmp
outsb
outsl
pushf
add
hlt
dec
push
rcrb
test
in
jo
mov
sbb
inc
sbb
js
out
push
jmp
dec
cmc
lret
es
leave
cmp
les
and
xchg
push
adc
ret
sahf
es
dec
adc
sbb
and
cmc
pop
cwtl
or
push
mov
or
mov
push
fisttps
mov
add
inc
gs
pop
xor
cld
fwait
push
lret
push
test
daa
push
add
push
lret
rcl
sbb
ret
push
xchg
sub
inc
les
ret
push
and
mov
push
test
dec
or
and
sbb
addb
mov
sahf
into
outsl
adcb
adc
fmull
add
xchg
inc
xlat
push
inc
xor
into
push
pop
shr
fisubrs
and
out
mov
mov
mov
js
in
daa
ret
lcall
pop
push
push
mov
xlat
js
pop
or
cli
inc
adc
movsl
sub
and
js
gs
or
cwtl
popa
inc
aas
jl
cmp
mov
dec
push
iret
mov
in
cmp
xor
dec
cmpsb
adc
outsb
loop
adc
push
mov
inc
repz
lock
push
xor
hlt
out
cmp
pop
jmp
clc
pop
push
fcomps
dec
sbb
out
cld
xchg
cli
cmp
outsl
xchg
mov
jb
das
push
push
into
pop
icebp
hlt
pop
xor
adc
sub
loope
call
cmp
rclb
add
repz
aam
mov
pop
pop
adc
fimuls
fidivl
insl
or
jecxz
cmp
xchg
adc
out
mov
jmp
addb
jg
and
scas
inc
add
adc
idivb
testl
push
xchg
sbb
xchg
repz
or
mov
dec
xchg
mov
rcr
sar
sbb
data16
ret
sbb
or
xchg
jne
icebp
adc
dec
mov
mov
scas
ja
push
cmpsl
out
xchg
jle
adc
sbb
stc
ss
imul
adc
lock
sub
mov
movsb
in
cmp
mov
fwait
dec
fsubl
push
in
inc
std
or
jnp
aad
pop
leave
shll
clc
xchg
and
push
cs
ds
loope
scas
cs
inc
cli
mov
es
scas
pop
sbb
cmp
jns
jne
xchg
fidivs
test
out
mov
sub
cmp
mov
loop
je
pushf
loope
mov
mov
add
aas
jmp
sbb
aaa
jnp
and
adc
jo
in
fcomps
xor
ljmp
pop
adc
in
jmp
and
jnp
imul
dec
push
sar
js
loope
mov
insb
ss
push
xor
es
push
lret
vcmppd
imul
lret
mov
cmp
sub
vpsrld
leave
mov
jecxz
inc
ljmp
dec
inc
xlat
jb
mov
fbld
xlat
ds
inc
pop
fwait
mov
fcoml
insl
out
mov
loopne
dec
pop
out
cmc
aas
test
adc
dec
jo
jns
cltd
orl
hlt
rcll
mov
jle
mov
xchg
jmp
pop
sbb
iret
loop
push
sub
jb
dec
jno
push
xor
imul
and
fnsave
add
fldl
inc
inc
popa
pop
push
mov
out
fs
out
mov
adc
pop
adc
out
sbb
ss
and
mov
cmp
repz
or
sar
ret
push
push
cld
les
fstps
cwtl
adc
aaa
adc
jecxz
mov
or
sbb
push
imul
mov
int
mov
xor
lods
out
xlat
mov
xchg
cltd
pop
lock
or
jns
mov
adc
xor
dec
aad
jecxz
pop
pushl
fistpll
fistpll
cmc
jae
dec
push
cld
in
xlat
das
cmp
call
fistpll
subb
xlat
cmpb
xor
popa
pop
pop
fildl
fistl
mov
icebp
sub
das
rcrl
lods
lret
dec
mov
aad
cmp
mov
cmp
movsb
insb
bswap
mov
lret
enter
lea
iret
rcl
jmp
mov
and
cmpsb
and
clc
sbb
mov
jle
inc
mov
lods
xor
aam
mov
jge
negl
ss
xchg
cmp
mov
das
inc
jecxz
push
cmp
hlt
cmp
aas
lods
sub
je
aam
pushf
mov
in
sub
dec
adc
sbb
cmp
push
adc
stc
mov
mov
insb
or
loop
fstps
mov
or
in
cmp
sbb
mov
gs
sub
jnp
pop
cli
incl
push
inc
inc
call
cmp
fcomps
pop
and
fisttps
mov
arpl
mov
jns
aas
int3
ds
dec
or
dec
dec
mov
or
fs
pushf
test
adc
push
jmp
push
arpl
insl
cmp
add
pop
dec
and
xchg
hlt
test
icebp
pop
pop
mov
pop
fwait
popa
dec
cs
xor
xor
bound
iret
jg
push
pop
push
dec
int
sahf
ss
push
cmp
mov
mov
jae
stos
mov
mov
push
mov
les
xchg
insb
mov
enter
mov
xchg
xor
inc
movsl
mov
fmul
mov
or
fwait
mov
addb
sub
ja
pop
jns
or
ljmp
imul
adc
pop
dec
test
push
lods
mov
jo
aas
roll
jae
ret
out
lock
push
mov
andl
or
xor
sub
dec
and
push
mov
jle
cld
movsl
lret
mov
inc
push
scas
je
lret
or
shlb
out
and
pushf
outsl
jp
jmp
clc
inc
add
lock
jbe
jge
mov
add
and
gs
sbb
sbb
mov
pop
cmp
adc
addr16
stc
sahf
pop
add
pop
pop
pop
repnz
mov
sahf
inc
xor
lds
adc
and
fsubrl
cltd
out
nop
adc
lods
cmp
pushf
stos
loop
dec
fnstenv
outsb
lds
adc
fdivrs
pop
pop
sub
cltd
add
or
xchg
sbb
inc
sub
pop
in
inc
loopne
repnz
jle
je
mov
lods
add
xchg
je
data16
dec
xchg
adc
cmpsl
out
ljmp
mov
jno
mov
ljmp
adc
mov
push
mov
imul
xor
cli
dec
xor
pop
outsb
mov
mov
and
mov
bound
push
frstor
push
fwait
dec
std
xchg
fldcw
or
cmp
in
fstl
mov
lods
repz
pop
cmp
pop
mov
es
int3
jle
test
xor
fsts
dec
js
xchg
das
cmpsl
in
test
fwait
in
sahf
addr16
push
lea
inc
inc
fbstp
cli
addr16
dec
jg
xchg
adc
repz
mov
inc
bound
or
sar
mov
add
sbb
inc
mov
add
dec
mov
and
enter
std
push
lahf
popf
cmp
add
push
shl
mulb
mov
push
jnp
mov
inc
enter
and
push
sub
lret
enter
add
mov
popl
daa
call
and
mov
enter
xor
sahf
cmp
adc
sub
and
cmpsl
push
movsb
ja
arpl
pusha
je
xchg
add
push
adc
mov
outsl
xchg
test
outsb
cmp
std
stos
mov
test
mov
stos
mov
aam
or
sarl
xor
cmp
ss
add
sahf
pop
mov
jne
push
imul
sub
xchg
mov
test
xor
mov
arpl
and
stos
adc
jae
push
pushf
lcall
cmp
mov
je
pop
xchg
jecxz
pop
ret
pop
xchg
data16
pop
push
xor
mov
mull
xor
nop
lret
call
mov
pop
stos
xor
mov
insl
add
cltd
mov
arpl
xor
and
rorb
fs
cmpsb
jb
arpl
arpl
or
mov
inc
out
sub
inc
icebp
int
inc
arpl
scas
out
fdivrs
outsl
lret
or
mov
test
xor
ret
push
cld
push
imul
fistps
dec
in
cltd
sbb
xchg
mov
sub
dec
outsb
inc
pop
outsl
cmpb
dec
xchg
mov
insl
loop
jp
in
jnp
cmp
loop
ret
fdivs
inc
inc
repz
push
pusha
dec
insl
addr16
add
pop
leave
sbb
movsl
push
adc
out
sub
cmp
mov
cmp
adc
lahf
lods
pop
cmpsb
stos
push
cmp
enter
mov
sti
out
or
mov
jb
arpl
imul
leave
shll
data16
cmp
cld
les
popa
in
xchg
enter
and
xchg
notb
insl
pop
fiadds
xchg
add
add
addl
sbb
imul
xchg
xor
push
or
rol
in
mov
clc
mov
shll
mov
inc
dec
xor
outsl
or
push
push
xchg
js
and
repz
sarl
test
jecxz
pushf
xor
movsb
cmp
sbb
je
mov
push
aam
fldl
xor
lock
scas
sbb
test
cmp
cmc
add
jl
sti
inc
ds
lret
jle
das
insl
test
orl
add
mov
ret
sbb
lcall
dec
dec
push
call
dec
cwtl
cs
lahf
shlb
pop
aas
or
imul
sbb
jno
daa
sbb
sub
or
jg
mov
dec
les
push
mov
or
mov
inc
adc
add
jns
popf
loope
adc
xchg
das
sbb
daa
mov
sti
arpl
xchg
and
cmpsl
movb
in
push
sbb
das
sub
sti
lcall
cmp
movb
scas
stos
push
or
insb
cmpsl
sbbb
cmp
dec
fiaddl
enter
scas
add
sbb
cmp
inc
adc
adc
cmp
test
jbe
das
pusha
out
add
push
test
add
xchg
in
lods
push
out
xchg
out
cmp
repnz
sbb
stos
push
dec
icebp
mov
sahf
les
mov
mov
or
xor
push
cmp
xchg
data16
mov
loope
or
sub
popf
sub
sbb
jecxz
inc
dec
cld
and
fnsave
mov
iret
jo
jmp
mov
push
into
jg
les
cmp
cld
lock
imul
and
mov
cmp
popa
xor
roll
in
test
test
sub
mov
mov
cmp
xor
or
and
and
mov
xor
cld
out
nop
iret
mov
sub
loopne
pusha
lahf
cmp
mov
test
xor
mov
add
or
test
out
in
imul
pop
ja
dec
inc
call
jg
repz
jns
fadd
jecxz
push
pop
cmp
or
repnz
aas
call
mov
xchg
rep
pop
fbstp
push
xlat
lods
push
popa
lcall
xchg
mov
mov
mov
mov
hlt
jmp
out
adcl
or
mov
mov
or
aaa
xor
out
add
mov
mov
outsb
adc
loopne
mov
inc
stc
mov
repz
mov
ljmp
testb
dec
inc
test
add
pop
inc
xchg
sub
push
adc
xor
clc
sub
inc
or
lods
jp
push
add
jo
repz
add
mov
pop
mov
sahf
ret
scas
jne
mov
or
lea
mov
inc
mov
ljmp
mov
cmp
push
stc
push
lods
out
in
sub
jne
adc
rclb
mov
sbb
mov
outsl
lock
lods
fwait
scas
mov
push
xchg
or
fsubrp
pop
xor
pop
jge
cmp
sbb
inc
out
and
and
xor
movsl
mov
gs
cwtl
add
mov
inc
aad
sti
shrl
jbe
ljmp
xor
jge
ja
add
pop
rcrl
jno
pop
pop
orl
or
fdivl
or
inc
mov
daa
jnp
icebp
daa
mov
rorl
test
scas
dec
lods
sub
push
sub
out
ficompl
shrl
loop
idivb
inc
jmp
mov
aam
mov
imul
in
outsl
dec
insl
icebp
subb
mov
or
mov
and
loope
imul
jae
cs
xor
mov
mov
fdivrl
cmpsb
jae
nop
adc
cmpsl
xchg
roll
pop
jp
sbb
push
adc
inc
repz
jmp
mov
pop
mov
cmp
lods
es
cs
inc
or
in
inc
cld
jae
add
arpl
dec
sub
xchg
xchg
cltd
outsl
jbe
mov
pop
int3
sub
sti
orl
add
inc
loop
mov
ret
xchg
mov
imul
xchg
int3
test
addr16
inc
mov
daa
int
mov
cmc
dec
aaa
inc
je
sbb
mov
jns
adc
add
sbb
fisubrl
mov
xchg
mov
push
sbb
cmpsl
mov
leave
sub
inc
mov
push
sbb
fimull
dec
push
loope
cmp
jno
jns
sub
sbb
mov
inc
fisubrs
ret
xchg
inc
or
inc
shlb
sub
lock
incb
lahf
fisubl
sbb
push
out
cmp
mov
mov
sub
push
or
and
cmp
ljmp
fcmovbe
ret
pop
in
cmpsb
ja
or
xor
pusha
pop
cltd
in
sarb
ljmp
ss
mov
xchg
fmuls
rorb
sbb
adc
add
fcmovne
ss
loop
and
and
inc
stos
test
cltd
mov
icebp
adc
pusha
cwtl
cmp
cmp
jbe
sub
mov
and
shlb
testl
xchg
cmp
push
xorl
mov
push
pop
aas
js
pop
cltd
test
xchg
fimuls
sub
jns
push
dec
jo
push
stos
dec
jmp
xlat
test
sub
rorl
sbb
bound
test
jnp
cli
xlat
dec
xchg
jne
sysret
loopne
xor
popf
and
push
jle
sbb
ss
imul
inc
mov
sub
xchg
add
cmp
push
mov
shl
cmp
andb
xchg
pop
mov
cmp
aaa
cmp
sbb
stc
pop
inc
cmpsl
cmp
xor
cmp
lret
mov
cmpl
jne
aas
sbb
cmp
pushf
shlb
xor
dec
clc
xchg
dec
into
ficoms
jge
lret
test
loop
pop
xchg
js
lea
or
push
xchg
sbb
mov
cmp
cli
sub
popl
sbb
movsl
scas
push
scas
adc
pop
jmp
xchg
xor
lcall
enter
push
pushf
dec
rcrb
mov
cmp
adc
lods
addl
xchg
add
lea
bndstx
in
shll
xchg
push
xchg
sub
pop
aad
mov
sar
mov
add
shl
jne
movsb
paddw
cld
stc
decb
push
xchg
xchg
insb
push
sbb
iret
or
cwtl
je
loope
ja
jb
adc
and
xchg
gs
addb
jnp
test
push
add
ud0
pop
clc
mov
pop
je
add
inc
out
mov
mov
fiaddl
jne
xchg
shr
mov
jb
pop
loopne
lret
pop
andl
pusha
xor
mov
cmp
mov
push
xor
outsb
jns
icebp
add
cs
sbb
in
add
cmp
bound
insl
push
and
fisubs
pusha
aam
scas
or
mov
and
xchg
fnstsw
jecxz
hlt
dec
lods
and
inc
jnp
mov
shrl
fstl
rclb
mov
inc
notb
cmp
daa
jl
sbb
or
or
adc
in
fs
out
mov
lea
xchg
outsl
in
sbb
imul
dec
cmp
pop
js
lock
shlb
in
pop
adc
xor
xchg
and
jle
add
das
pop
insb
leave
mov
loop
jmp
int
jmp
shlb
xor
jecxz
push
sti
lock
cmp
jnp
out
cld
lds
sub
push
sub
xchg
aad
lods
fwait
and
bound
or
push
aad
inc
fwait
divl
fs
mov
lea
cmp
pop
int3
add
gs
out
mov
cmp
aad
ss
enter
in
popa
adc
lods
lret
sbb
scas
stos
adc
pushf
mov
fs
and
fisttps
add
and
dec
rolb
and
lret
xchg
dec
sub
dec
xorb
adc
fs
scas
mov
xlat
jg
sbb
push
xlat
jne
scas
je
cwtl
mov
jno
push
mov
fadd
jp
subl
mov
mov
jg
push
in
or
or
mov
pop
dec
xchg
ljmp
adc
pusha
inc
cmp
icebp
mov
lahf
or
jns
sbbb
pop
les
inc
jbe
mov
lds
jl
in
mov
jecxz
push
xlat
inc
mov
in
stc
aad
mov
out
cltd
push
dec
mov
or
ss
mov
adc
mov
mov
add
xor
in
dec
pop
mov
mov
or
call
lods
jle
inc
add
stc
xor
bound
inc
add
and
inc
xor
mov
push
xor
repz
fcmovnu
outsl
pop
push
and
jp
pop
jo
stc
sbb
gs
or
scas
aas
test
pop
xchg
push
shlb
fstpt
sub
mov
test
nop
jge
xor
jmp
cmp
mov
mov
xchg
sub
pusha
bound
adc
out
rolb
pop
clc
les
sub
in
daa
pop
out
out
pop
adc
data16
sub
test
lds
psubd
lret
inc
lret
rcrb
mov
xor
sbb
lcall
jns
sub
sub
mov
xchg
shrb
lock
xchg
or
jecxz
into
jo
rcrb
dec
mov
mov
scas
test
and
popf
cli
cmpb
popf
ficomps
inc
sub
mov
xchg
xor
lret
adc
imul
jg
pop
pop
lret
shrb
pop
pop
dec
pop
subl
jnp
cltd
adc
clc
cmp
in
inc
xor
xor
or
call
cmpsl
rolb
cli
jae
push
xchg
cmp
jo
sub
mov
rorb
inc
imul
sahf
aam
jg
jns
xchg
dec
ljmp
push
and
mov
pusha
outsb
fmuls
sbbl
rol
call
in
pop
movsb
in
mov
mov
jne
mov
mov
pop
pop
fcoms
fs
mov
push
xchg
fsts
push
aam
lahf
xor
das
leave
scas
fnstcw
inc
sub
ja
push
push
jle
ret
sub
xorb
and
in
sbb
push
or
icebp
adc
fisubl
negb
ss
push
lahf
faddl
xchg
fsubrs
aas
pop
out
xchg
stos
xor
pop
push
dec
mov
cmp
repnz
rorb
dec
cmp
shrb
push
test
inc
iret
shll
cmp
or
xchg
ret
pop
hlt
dec
dec
mov
cld
imul
test
loop
add
inc
test
shlb
xchg
rcl
xchg
mov
or
mov
mov
shl
add
pop
xor
xchg
adc
rcrl
mov
push
lahf
stos
mov
loopne
mov
cmp
enter
jbe
push
cmpb
xor
outsl
into
pop
cltd
and
cmpsl
fdiv
mov
in
and
push
lock
jmp
sbb
xchg
inc
add
mov
aam
mov
loopne
pop
xor
flds
sbb
mov
lods
ret
mov
adc
leave
push
pop
adc
dec
dec
aad
inc
or
jg
jnp
inc
mov
sbbb
subps
fs
faddl
mov
outsb
or
and
int3
push
dec
les
jnp
adc
int3
repnz
je
stos
xchg
inc
repnz
dec
aad
lret
mov
icebp
dec
push
jge
and
fldl
dec
jae
mov
cmp
cmp
movsb
lock
fiadds
repz
aad
add
outsl
imul
insb
andl
dec
jle
mov
stos
icebp
jae
out
adc
rcrb
xchg
jb
inc
mov
push
cmc
pop
in
sub
xor
fdivs
jne
cmp
xor
rolb
adc
cmpsl
int
icebp
sbbb
clc
lret
stos
arpl
xchg
mov
xor
mov
sbb
ss
pusha
cli
mov
pop
cli
jns
stc
test
cmp
xor
mov
sub
add
sbb
mov
dec
xor
mov
cmp
enter
test
pop
cltd
in
mov
call
push
rcll
mov
cltd
pop
mov
mov
out
or
out
cmpsb
popf
xchg
mov
sbb
testb
sbb
out
sub
fyl2xp1
jbe
outsl
loopne
iret
mov
shlb
clc
pushf
mov
push
je
and
jl
clc
mov
clc
dec
dec
lret
aam
jecxz
jb
jmp
clc
jae
aad
xchg
scas
xchg
jg
filds
inc
inc
xchg
push
cmp
mov
and
push
out
push
sbb
into
data16
pushf
push
fstl
sub
mov
pop
or
cmpsl
movsb
mov
and
mov
sub
push
imul
sarb
test
adc
cmp
repnz
fwait
mov
ret
test
inc
es
adc
inc
inc
insb
scas
fimuls
je
ret
mov
xor
scas
sbb
cmp
divb
mov
insl
stos
or
sub
imul
test
in
push
pop
push
cmp
sbb
lret
xchg
or
out
pop
and
inc
sbb
fstl
fistps
cltd
mov
cmp
fwait
or
add
incb
mov
dec
mov
cli
cmp
dec
into
jp
cld
std
fcom
popf
in
stc
jl
lea
cmp
in
xor
jne
adc
in
test
leave
cmp
std
and
push
mov
mov
jb
push
ds
mov
and
lahf
fwait
cltd
les
mov
aam
mov
int3
mov
mov
repnz
js,pn
push
xchg
popf
jp
xor
ficompl
jns
push
sbb
inc
mov
pop
movsl
int3
sbb
mov
xor
push
jge
cmp
mov
lcall
adc
jp
or
into
sub
xchg
fwait
mov
and
add
in
or
xor
mov
hlt
out
enter
in
sbb
popf
pop
push
pushf
xor
les
lods
jg
cltd
stos
add
dec
add
hlt
push
outsl
sub
into
cwtl
jge
mov
call
ljmp
test
mov
imul
cmp
cmp
mov
outsb
fsubrp
pop
and
enter
shlb
mov
ljmp
out
out
cwtl
and
cmpb
sbb
jge
cltd
lds
icebp
adc
jb
je
scas
mov
dec
sbbl
test
sbb
or
cmp
out
jmp
push
mov
adcl
sti
or
jb
mov
pop
xor
jae
inc
lds
pop
or
loopne
sbb
stc
enter
aas
jne
sahf
aas
mov
std
movsl
jge
arpl
add
rorb
stos
xchg
xchg
cmp
ret
sbb
lock
pop
call
loope
pop
xlat
mov
xchg
jae
int
out
push
or
shrl
pop
icebp
adc
gs
loop
cmp
xor
sbb
test
jmp
xchg
xor
cs
stos
push
fistl
cs
ja
iret
scas
mov
jns
stc
movsb
fwait
push
cmp
or
popf
inc
jnp
es
add
into
jl
lock
clc
fucomi
xchg
in
idivl
mov
je
pushf
insb
sub
mov
add
and
cmp
mov
sbb
cltd
lods
jle
dec
adc
sub
ret
mov
add
cs
adc
cmp
push
xchg
push
dec
testl
cmpsl
insb
popf
mov
out
fdivl
add
movsb
dec
jge
out
sub
aad
dec
adc
sarb
addr16
data16
pushf
ss
lods
adc
mov
jnp
sub
mov
imul
call
hlt
mov
and
mov
insb
sahf
jae
pusha
dec
mov
xchg
xchg
pushf
lods
aad
repnz
aas
outsl
rclb
aam
jno
dec
pushf
or
ret
lret
ja
xchg
aam
outsb
xor
mov
mov
sub
xchg
mov
daa
out
inc
sahf
inc
ss
lock
fimull
in
xchg
lret
sub
jg
cmp
inc
lods
or
in
sbb
push
jl
ja
sub
adc
xchg
sbb
mov
lods
cmpsl
lcall
push
out
inc
fldcw
adc
xor
rorb
add
aaa
int3
jbe
pop
push
push
sbb
cwtl
pop
arpl
lds
mov
adc
mov
rcll
stos
xchg
cmp
test
shlb
push
pop
popf
mov
iret
ds
jg
cltd
sbb
push
decb
pop
push
xchg
push
dec
xchg
jnp
mov
test
mov
inc
mov
inc
xor
jge
dec
mov
mov
fmull
filds
sub
lcall
insb
inc
inc
inc
cmpsl
dec
addr16
vpsrlw
aas
push
push
cmp
sbb
out
dec
push
cltd
adc
and
push
fs
movsl
jb
xchg
and
jnp
imul
jg
mov
sbb
out
pop
sbb
aas
sbb
sub
roll
pop
xchg
jecxz
pop
xor
in
mov
or
lret
adc
dec
sub
fisubl
or
sbb
dec
call
jp
out
pop
cmp
sbb
scas
aam
and
call
sbb
dec
sbb
add
mov
jbe
pusha
ss
cmp
mov
adc
inc
push
jmp
jne
push
mov
push
add
push
rorl
cmp
outsl
adc
repnz
fcompl
hlt
add
cmpsb
popa
test
in
xchg
pop
fsubrl
dec
loop
jg
xor
jb
push
call
dec
adc
adc
lcall
xlat
jl
or
xor
cmp
jo
pop
jg
mov
adc
sbb
mov
add
pushw
xchg
gs
jae
movsb
jl
gs
imul
nop
and
xor
mulb
adc
pusha
scas
aaa
inc
mov
cmp
push
push
rcl
std
hlt
std
fcoms
xor
xchg
fsts
mov
dec
movsb
pop
sub
adc
adcb
mov
add
sahf
xor
dec
fists
cmp
in
jnp
mov
mov
push
push
add
insl
fidivrl
ret
and
daa
xchg
pop
popl
fdivrl
movsb
arpl
sarb
call
or
or
adc
test
xchg
pop
push
mov
iret
sbb
out
cld
jmp
mov
lods
adc
cmp
in
sti
add
out
das
adc
mov
in
test
in
icebp
lods
cmp
mov
out
in
and
mov
into
insl
cmp
add
mov
data16
dec
das
call
xchg
push
xor
cs
pop
jg
jae
in
fs
xchg
inc
pop
stos
mov
js
shlb
xor
jns
add
jp
sbb
in
lret
sbb
fidivrl
pop
scas
jo
jb
jae
xor
shrd
push
cs
addb
jns
jnp
xchg
inc
sti
scas
in
stos
movsl
outsb
cltd
or
add
cmpsl
aad
xlat
out
jnp
sbb
push
mov
push
std
mov
push
adc
ds
mov
test
or
pop
mov
loope
sub
jmp
and
inc
fcoml
ret
sbb
push
jno
call
arpl
out
mov
cwtl
ret
scas
in
scas
sbb
repnz
pop
cmp
dec
mov
cs
xchg
pushf
es
gs
test
mov
xchg
out
or
adcb
addr16
cmp
push
adc
push
xor
lahf
dec
pop
aaa
enter
xchg
adc
sahf
call
rclb
movsb
out
adc
mov
push
hlt
lods
pushf
pop
popf
dec
jp
pop
popf
cmp
std
lret
and
pushf
and
sbb
iret
fdivrs
sti
dec
push
aas
inc
adc
ret
adc
jbe
mov
jg
inc
into
xor
sub
jmp
dec
push
pop
pushf
inc
cmpsb
divb
loope
sub
mov
rorb
dec
test
add
nop
pop
es
test
aaa
orl
mov
ret
mov
xchg
stos
jo
in
mov
test
jmp
movb
push
push
dec
in
and
xor
inc
lret
in
mov
xchg
sub
xor
xor
mov
addr16
int3
cmpsl
ss
adc
leave
shlb
sub
addr16
pop
or
fldcw
add
mov
arpl
sub
xchg
mov
jne
mov
jge
xchg
and
mov
fmuls
scas
pop
jle
inc
sti
sub
imulb
mov
test
push
sub
sub
lods
push
lret
push
jno
imul
stos
ret
pusha
leave
je
dec
pushf
das
adc
push
pusha
test
sub
xchg
lods
test
icebp
mov
fmuls
jp
movsl
lret
jbe
lods
pop
push
mov
fndisi(8087
mov
repz
rcrb
ret
out
xor
aaa
push
mov
ja
lds
push
shlb
pop
and
push
jp
inc
mov
xor
lods
xchg
add
cmpsb
rorb
cmpl
push
repz
mov
movsb
jle
inc
out
adc
subb
mov
mov
and
clc
or
data16
mov
hlt
rcrb
cmp
aad
jl
je
in
pop
test
repz
leave
xchg
mov
mov
mov
addr16
lods
mov
pushf
addr16
out
jl
or
repz
loopne
add
test
fcomi
cs
pop
push
repz
sbb
shl
xchg
cmp
add
and
or
or
ds
aas
outsb
cmp
jp
mov
stos
lcall
ss
and
call
mov
adc
cmpl
inc
cmpsb
mov
pop
out
je
imull
nop
sbb
jle
stos
clc
in
les
shrb
jno
jne
js
iret
jge
mov
mov
or
aam
inc
je
xor
outsb
arpl
fnsave
stos
mov
pop
repz
mov
sbb
or
mov
jne
mov
jnp
out
aaa
das
dec
out
xchg
je
in
in
sbb
ret
mov
push
pop
arpl
hlt
pop
sbb
neg
push
mov
adc
xor
pusha
fisubl
loopne
pop
clc
test
ffree
push
test
stos
movsb
mov
test
jo
mov
xchg
dec
cmp
imul
adc
or
imul
dec
push
xlat
mov
int
daa
add
sub
sub
int3
cmp
xor
inc
jg
cltd
orl
test
adc
mov
out
sub
lret
or
mov
and
adc
cmpsl
adc
xor
rcrl
fs
test
cmpsb
sub
decl
or
mov
jne
dec
mov
xor
lcall
ficompl
aaa
into
rcr
xlat
cmp
ljmp
inc
mov
sub
ja
movsl
lods
imul
ret
cmpsl
fisubrl
add
bound
or
mov
mov
test
mov
pop
sbb
pop
dec
outsl
push
mov
mov
jge
lcall
inc
pushf
out
lock
mov
sti
xor
popa
scas
jo
sbb
mov
xor
insb
sete
cs
add
xchg
cmc
jns
data16
test
jl
push
jno
sub
out
and
push
cltd
pop
jp
cmpsb
es
scas
cmp
dec
xor
cmp
insl
inc
add
sahf
jle
xchg
mov
jno
daa
add
pop
cmp
mov
cmp
std
xchg
mov
cwtl
lcall
adc
mov
int
and
xchg
mov
shll
xchg
lahf
push
mov
and
mov
lods
and
dec
push
outsl
dec
stos
pop
xor
rorl
jge
mov
or
pop
jnp
rcrb
cmpsl
imul
ljmp
aam
pop
xchg
lds
or
mov
ret
jnp
test
popf
or
sbb
test
cmp
into
imul
adc
inc
popf
mov
pushf
mov
mov
adc
or
cmp
pusha
dec
je
ja
mov
lock
aam
jno
lock
insl
ljmp
xchg
or
adc
loop
inc
xor
sub
mov
inc
rorl
or
fimuls
inc
push
pushf
shll
add
jne
fsubs
call
out
stos
xor
add
cmp
test
or
mov
pop
push
push
inc
jo
rcl
stos
inc
cmc
lret
and
leave
and
cmpsl
add
cli
cmp
outsl
cmpsl
sbb
mov
mov
out
push
imul
and
fmuls
xor
stos
out
fwait
shrb
int3
ret
sub
ss
mov
cmpb
lods
aad
loop
inc
jecxz
xchg
in
mov
ljmp
fs
push
sbb
mov
adc
xorl
not
lret
psrld
mov
push
xchg
jmp
mov
lret
js
aam
mov
xchg
xchg
mov
or
cld
xlat
push
pusha
out
incl
jae
dec
sub
mov
in
cwtl
mov
cmpb
shrl
adc
lcall
mov
add
xchg
cmp
xchg
cltd
jne
and
in
jbe
out
fwait
pop
inc
and
xor
clc
cmp
shl
data16
mov
rcrl
lea
sbb
push
jns
jl
sbb
leave
lods
pop
lods
loop
repnz
jns
call
fcomps
adc
mov
call
jae
xchg
cmp
jbe
dec
dec
mov
dec
or
imul
rorl
scas
mov
push
bound
loope
gs
cmp
push
les
sbb
addb
dec
ss
cltd
xchg
sbbl
cmc
addb
inc
mov
jb
loop
je
adc
pop
cmp
pushf
or
aam
aad
mov
repz
shlb
cmp
icebp
push
push
and
jle
into
ret
ss
les
xchg
xor
rolb
cmp
in
add
add
push
cmpsl
sarl
mov
test
rcll
and
sbb
pop
sbb
cwtl
push
test
xor
mov
repnz
inc
lret
mov
test
jecxz
pushf
xchg
mov
lock
push
lods
mov
adc
insl
fdivrs
mov
jnp
jecxz
ds
push
scas
or
sub
mov
mov
dec
inc
fs
icebp
roll
shl
inc
fwait
mov
cmp
pop
inc
pop
and
inc
and
jg
out
pop
cmp
xor
int3
or
inc
cmpsb
into
fmuls
ret
jnp
add
fdivrl
lcall
nop
mov
pop
dec
rcrb
add
loopne
popa
fdivs
pop
add
imul
add
call
mov
and
or
inc
sti
imul
in
and
pop
mov
mov
jae
pop
push
lods
stc
xor
dec
adc
repnz
push
iret
or
adc
fildl
cmpsl
sub
bndstx
adc
cmp
imul
cmp
aad
pop
adc
dec
ret
mov
sbb
sub
cmp
sbb
pop
dec
dec
lret
push
and
aas
inc
imul
or
push
nop
jnp
hlt
cmp
xchg
xor
add
xchg
cld
mov
dec
mov
sti
test
dec
push
negb
pop
add
push
fcmovnb
push
or
pop
iret
mov
insl
shll
jae
jmp
das
mov
dec
rcl
aas
data16
movsb
push
fs
flds
xchg
fwait
mov
push
stos
push
and
xchg
out
imul
repz
inc
mov
int3
aaa
push
xchg
lcall
pop
fwait
xchg
push
mov
aas
call
inc
mov
and
movsl
es
bound
popf
xor
mov
mov
out
xor
out
popa
loopne
dec
push
dec
dec
pop
cmp
sti
pushf
aas
and
add
add
sbb
gs
loop
roll
pop
cmp
or
aad
mov
mov
stc
sub
pop
inc
push
mov
mov
pushf
insl
cs
mov
lods
insl
loop
mov
cs
shr
sbb
jbe
fisubl
inc
mov
js
dec
out
and
fucom
into
pop
mov
outsb
shrl
add
test
das
cmc
pushf
call
mov
mov
addr16
mov
mov
inc
nop
sub
mov
xor
sahf
and
mov
inc
jns
xchg
push
fs
dec
sbb
mov
or
xchg
lods
mov
idiv
sahf
clc
stos
add
aaa
sbb
addr16
dec
int
cmpsb
mov
repnz
int3
outsb
mov
dec
pop
and
push
pop
push
std
insl
xchg
inc
jecxz
stos
jae
test
jmp
ret
repz
addb
mov
adc
pusha
je
push
arpl
sti
xchg
pushf
sub
cmp
xor
jne
loop
ljmp
das
mov
cmp
inc
dec
xlat
movsb
es
mov
pop
inc
pop
jmp
dec
pop
nop
push
sarb
lret
inc
test
xchg
pop
fnstenv
lds
jl
js
movsl
pop
mov
inc
or
fmull
popa
pop
fnclex
mov
in
dec
leave
jmp
clc
cmp
js
jge
mov
in
inc
scas
iret
ficomps
pop
mov
cmp
push
mov
pop
dec
jb
cmp
movsl
wbinvd
pop
sub
idivl
push
gs
mov
scas
inc
js
or
repz
test
dec
nop
repz
mov
orb
ja
rcll
loope
out
mov
cmp
aad
lcall
int
in
ret
out
leave
cmp
and
and
das
fcmove
out
je
jp
orb
and
imul
popa
js
mov
xorb
cld
and
cmpsl
inc
inc
mov
inc
mov
push
aaa
push
movsb
pop
push
adc
or
cmp
sbb
or
push
ljmpw
pop
inc
and
ss
xchg
mov
add
dec
testb
push
push
mov
mul
mov
shrb
push
sbb
cmp
outsb
dec
mov
sub
shrl
inc
in
lret
imul
dec
shrb
stc
mov
out
lock
xchg
shl
sbb
dec
imull
lret
and
enter
lock
test
sub
dec
test
loop
movsl
and
fwait
pop
fbld
xchg
into
jno
data16
dec
xor
cmpsb
inc
or
add
adc
sub
push
jbe
cmpsb
mov
jnp
popl
xchg
outsb
in
fs
clc
pop
notb
pusha
jle
xor
inc
jo
lock
into
stos
cld
call
imulb
inc
or
fst
scas
mov
dec
and
fcmovu
insb
stos
pop
sbb
iret
push
adc
push
sub
sarl
das
test
lahf
out
repz
lock
mov
aas
insb
inc
insl
mov
adc
call
adc
push
js
lods
stos
lea
in
je
or
mov
stos
jl
sbb
inc
mov
mov
rolb
cli
ss
xchg
pop
jge
testl
clc
mov
mov
movsb
fcoml
stos
push
jp
jns
pop
orl
es
mov
mov
mov
mov
mov
cwtl
nop
inc
push
jns
push
movsb
add
push
xor
mov
mov
pop
jne
es
add
in
jmp
fldl
add
add
add
adc
cmp
jne
es
inc
jle
stos
test
and
pop
pop
je,pt
push
cs
xor
fs
test
test
orb
pop
push
stc
leave
lret
mov
sarb
sbb
xor
xor
insb
fiadds
dec
mov
cmpsb
mov
mov
lds
mov
xor
outsb
xchg
fldenv
fsts
push
mov
stos
and
ja
inc
and
and
mov
cld
into
dec
mov
iret
xchg
std
mov
jge
cmp
push
mov
insl
or
idiv
movsl
lock
inc
cmpsb
push
dec
sahf
add
imul
xchg
je
mov
loop
inc
sbb
scas
fdivr
or
sbb
sbb
call
inc
ds
jae
mov
adcb
mov
inc
jnp
add
sbb
stos
out
or
fbld
mov
sbb
mov
sub
cltd
xchg
into
or
imul
stc
bnd
push
pop
arpl
lret
pop
adc
fdivl
enter
jle
lods
ljmp
outsb
push
test
xchg
adcl
repnz
es
shl
fistpl
and
nopl
jge
xchg
fnstcw
aam
mov
cld
push
pop
mov
mov
dec
inc
adc
cmp
inc
fs
and
test
rcrb
mov
mov
add
inc
pop
sub
add
in
mov
jbe
arpl
lcall
adc
lds
ljmp
sub
jmp
xor
popf
cmp
pop
movsl
inc
ret
pop
push
mov
jae
lds
inc
neg
test
mov
int3
mov
add
mov
or
insb
or
daa
mov
loope
jmp
inc
scas
pop
repnz
dec
inc
ret
jns
mov
jle
mov
inc
dec
add
and
or
loopne
jno
fcmovb
cmp
stc
jle
jae
es
pop
adc
arpl
outsb
mov
mov
add
adc
aad
loope
dec
gs
cs
or
scas
push
pop
xchg
stos
aad
and
stos
adc
mov
add
sahf
cli
mov
push
pop
sbb
or
jne
out
mov
js
mov
cltd
push
push
repz
sub
test
fisubs
out
mov
stos
das
lock
push
jbe
push
addr16
dec
mov
mov
pop
jnp
jp
and
es
lods
hlt
dec
ret
pop
push
addr16
push
dec
push
pop
mov
jg
mov
push
cld
mov
xchg
loopne
push
pop
fildl
loope
out
push
jle
jae
cmp
cltd
negb
popa
push
adc
push
add
jne
ret
inc
pop
mov
xor
pop
pop
mov
cmp
ret
outsb
ljmp
jmp
pop
adc
out
xchg
or
pop
adcl
aam
lret
ficompl
clc
inc
pop
jl
test
cmpsb
inc
fnstcw
fcoml
call
movsb
xchg
mov
mov
push
sbb
pop
test
sub
lods
les
mov
rcrb
inc
mov
in
bound
mov
push
ja
push
pop
loope
lcall
cmp
sarl
mov
mov
or
test
mov
dec
fsubrs
rorl
pop
mov
testl
jns
es
jmp
pop
shl
cmp
insb
sbb
push
or
push
sbb
mov
cmp
das
and
sbb
pop
add
or
into
sbb
fbld
fs
movsl
fisttpl
adc
dec
jno
cs
repnz
mov
xchg
stc
mov
outsl
jb
sub
xchg
pop
aaa
xchg
scas
xchg
mov
mov
out
xor
adc
mov
ljmp
xor
vpmovsxbq
loop
mov
repnz
scas
mov
andl
xor
and
pop
inc
adc
mov
loop
int
bnd
mov
fucomp
push
jl
shrb
and
cmp
xchg
lret
outsb
sbb
xor
sti
or
mov
rorb
xorb
lock
stos
fcmovu
fsub
daa
add
jnp
imul
pop
xchg
in
jns
cld
mov
insl
add
sub
loop
test
inc
inc
xor
xchg
js
lret
in
leave
ror
scas
adc
sub
sub
or
xor
imul
adc
call
inc
out
insb
repz
enter
stos
push
movsl
jle
xor
insb
data16
cld
adc
push
btc
cmp
loop
xchg
aas
scas
movsl
or
mov
jl
cmpsl
adc
jbe
push
adc
push
dec
add
stos
mov
push
and
int
lret
divb
cmp
cwtl
fcoms
inc
xchg
sbb
mov
add
sub
mov
iret
sub
sbb
sbb
cwtl
imul
jne
into
mov
adc
sbb
jp
adc
push
pop
lcall
nop
fiadds
out
mov
mov
and
lahf
xchg
add
movsl
cld
scas
or
xchg
loop
popf
aaa
jmp
mov
enter
loope
test
and
pop
sub
cmp
ja
mov
out
les
pop
and
je
and
cmp
or
fcmovbe
cmpsl
lcall
fdivr
je
mov
ljmp
pop
lcall
je
shrb
fcomps
test
xlat
and
add
mov
pushf
lret
xor
and
adc
dec
xor
pop
nop
inc
dec
or
sub
mov
clc
sti
int3
int
dec
insb
repz
push
addb
dec
push
lods
outsb
push
imul
test
ret
inc
push
nop
cli
push
imul
jp
fidivrl
push
lods
cmpl
call
mov
in
test
das
inc
add
xchg
sub
outsb
pop
in
push
stos
in
jbe
sub
neg
outsb
jge
stos
sti
out
lcall
adc
aam
loope
scas
loope
add
aam
movsl
pop
repz
lcall
cmpsl
int3
jp
inc
or
dec
insb
jbe
mov
fwait
in
mov
inc
mov
mov
daa
mov
pop
int
sbb
lahf
and
imul
cmp
stos
xchg
enter
sub
mov
mov
mov
mov
xchg
mov
pop
pop
lock
push
mov
cwtl
jl
outsb
mov
sbb
mov
movsb
lock
xchg
stos
je
lahf
mov
das
ret
or
cwtl
fdiv
in
inc
pop
popa
cmp
mov
mov
sahf
cmp
mov
mov
push
jg
pop
dec
mov
scas
and
test
adc
jle
imul
mov
push
sub
cld
test
outsl
ret
shll
jecxz
adc
stos
sbb
in
jns
mov
or
cltd
fcomps
xor
cltd
bound
outsb
out
and
hlt
icebp
jns
push
popf
jmp
add
imul
xchg
pusha
fcoms
xchg
pop
inc
mov
and
cmp
out
add
xor
rcll
sub
shrl
mov
mov
pop
pushf
mov
cmc
inc
push
and
inc
adc
jle
sub
icebp
popa
enter
jb
sub
das
lcall
fs
jnp
cld
sbb
lahf
xor
mov
pop
fnstenv
jp
cmp
fs
xchg
dec
pop
movsb
mov
add
cmpsl
mov
push
xchg
xor
or
scas
repnz
data16
cmpsb
sahf
push
punpckldq
rcll
mov
push
pop
jmp
pop
es
cld
fs
cwtl
xchg
dec
cmp
push
outsl
hlt
movsl
jp
xchg
mov
ror
lcall
int
cmp
mov
cmp
daa
aaa
push
cwtl
pop
jns
lea
repnz
lock
adc
lods
ljmp
push
inc
xor
cmp
sub
dec
sub
adc
out
inc
call
mov
cs
cwtl
inc
jno
cwtl
mov
inc
insl
mov
dec
push
mov
aam
lahf
xchg
insl
inc
or
xor
popf
dec
mov
mov
xchg
pop
in
and
test
scas
jns
into
sub
notb
inc
push
cmpsb
cmpsb
loope
mov
loopne
inc
popf
addr16
dec
or
or
mov
dec
or
fcomps
loopne
push
aas
pop
hlt
in
push
inc
stos
dec
jns
data16
cmp
aaa
cmp
bound
outsl
enter
rcrb
in
je
add
cmpsb
pop
ja
mov
andb
lcall
or
fcoms
test
mov
cmp
xchg
into
arpl
adc
dec
sbb
cltd
jbe
sub
enter
cmc
xor
and
pop
inc
or
bound
dec
fidivrl
aad
jne
aas
cmc
mov
cmp
mov
loope
loop
and
xor
mov
lret
push
push
dec
test
lds
cld
daa
lcall
push
js
call
push
or
ret
cmpsl
scas
shlb
dec
cmpsb
daa
adc
push
jmp
fsubl
jae
adc
inc
jae
push
mov
dec
pushf
test
jle
xor
and
int3
mov
in
test
cmc
pop
dec
loope
test
aam
out
jle
pop
mov
push
jae
cwtl
sbb
xchg
sbb
mov
scas
int
push
outsl
mov
sub
mov
notb
loope
ficoms
aam
enter
and
lret
mov
adc
jecxz
push
imul
maxps
and
sbb
fsubp
fwait
push
imul
dec
dec
pop
xlat
fsubrl
or
dec
pop
es
lea
std
fdivs
xchg
xchg
test
mov
icebp
pop
ss
xchg
subb
jecxz
push
cmpsl
dec
xor
imul
cmp
arpl
lahf
arpl
or
mov
mov
cs
ja
scas
cmp
xlat
xor
and
xchg
sahf
inc
in
jge
je
enter
push
je
jecxz
mov
sti
das
inc
jnp
movsl
rcl
ret
lahf
push
enter
loop
gs
addr16
lods
imul
mov
mov
jl
hlt
add
cmp
fwait
sbb
lock
xchg
push
jbe
notl
sbb
int3
push
pusha
dec
out
test
inc
lahf
sbb
les
pusha
lret
fidivl
out
xchg
movsl
lods
cmc
mov
fisttpll
xlat
js
add
popa
aam
nop
scas
out
sbb
cs
lds
rolb
subb
jbe
xchg
std
dec
ficomps
xchg
call
sbb
sub
aad
cmp
clc
popa
dec
xchg
cltd
daa
jle
xor
xor
and
push
mov
iret
dec
or
in
pop
xchg
repz
mov
addr16
lock
xchg
fs
arpl
mov
xchg
test
xchg
xor
lcall
dec
mov
iret
hlt
loop
jb
adc
xchg
cmp
stos
stc
aaa
addb
fiaddl
mov
mov
add
cmp
js
addr16
mov
shrl
dec
es
je
popf
das
mov
outsl
inc
mov
push
or
loopne
ljmp
cmp
mov
xchg
xchg
lods
pop
rcrl
outsb
mov
mov
lods
inc
add
pushf
xchg
mov
xor
adc
std
adc
xlat
and
add
fs
xchg
pusha
xchg
add
adc
mov
xor
les
js
add
push
js
subb
add
jnp
inc
addl
inc
push
and
popa
mulb
xchg
and
mov
out
cmp
loope
dec
mov
push
xchg
xor
pop
test
scas
mov
push
jne
test
sbb
sbb
xorl
push
jb
jns
mov
je
data16
xchg
push
push
add
push
sbb
and
sub
inc
add
pushl
or
fcomps
mov
push
les
lods
cwtl
mov
cld
dec
lret
lahf
sub
aad
dec
ljmp
xor
jge
and
fs
xchg
into
inc
loop
gs
add
xchg
push
stc
ss
loope
out
sub
mov
mov
int
lock
push
aas
fsub
mov
mov
xor
dec
jb
add
lret
loopne
lret
in
loope
inc
fs
jecxz
shlb
mov
mov
mov
les
push
lods
sub
xchg
stos
sahf
enter
push
fs
call
lea
add
cmp
std
ljmp
movsl
or
add
inc
cmc
repnz
pop
push
push
js
inc
and
andl
in
fsubr
push
mov
push
adc
and
xchg
cmp
clc
pop
jns
roll
mov
jl
inc
lret
push
sub
cmp
ret
scas
aas
inc
iret
pop
repnz
push
inc
loope
inc
sub
mov
dec
cmpsb
jp
loope
add
out
enter
test
pop
mov
add
stc
mov
ja
sti
ja
pop
rcrl
scas
dec
pop
leave
mov
cltd
test
stos
stos
push
or
ljmp
leave
ja
fstpl
adc
push
gs
repnz
lret
rcrb
or
fsubrs
pop
out
dec
push
adc
sbb
xor
bnd
mov
imul
dec
and
dec
test
mov
movsb
push
fiadds
pop
testb
outsl
cmp
xchg
imul
test
cmp
pop
mov
push
push
je
pop
stc
adc
pusha
and
jae
pop
stos
and
lret
rcrl
mov
inc
xchg
mov
sub
xchg
jge
mov
loope
push
orl
js
pop
xchg
rol
dec
mov
nop
push
lret
pop
dec
les
jg
cmp
cvtps2pi
dec
push
or
mov
hlt
pop
pusha
inc
shl
inc
sbbl
mov
imul
adc
lock
out
ljmp
pop
js
out
add
adc
jns
push
inc
adc
aam
xchg
leave
loop
mov
jns
push
jo
andb
outsb
cmpsl
add
lock
stos
or
movsb
inc
scas
xchg
push
repz
fdivl
andb
xchg
mov
push
lret
add
aad
stos
adc
rcrb
sbb
dec
or
cld
adc
push
jle
mov
fsubl
je
cmpsl
sahf
adc
movsb
inc
xor
insb
dec
or
mov
sub
in
and
stos
mov
xor
in
out
cmp
inc
mov
pushf
adc
push
adc
nop
dec
fidivl
fdivrs
lahf
lcall
out
inc
rcll
dec
inc
jo
sbb
xor
lret
lds
in
test
adc
xorb
xor
jo
stos
or
jp
je
in
in
scas
jle
mov
mov
add
les
adc
adc
xchg
mov
mov
scas
push
mov
adc
adc
outsb
jae
out
das
inc
jl
iret
jg
push
fsubrl
sti
cmp
mov
jo
xor
dec
je
ret
xchg
cmp
lahf
mov
mov
inc
popf
cltd
lea
leave
cmc
mov
sub
daa
jp
push
or
pop
push
mov
cmp
sbbl
sub
push
inc
push
lcall
in
sub
pop
push
push
pop
insl
mov
xor
cltd
ret
fimull
pusha
lea
ret
shlb
mov
ret
inc
mov
mov
ffree
into
add
inc
int
out
jb
cmp
xor
pop
sub
stc
mov
xchg
nop
arpl
inc
pusha
cld
cmp
scas
out
and
jno
sub
aaa
call
dec
jp
test
insl
jge
pop
lret
mov
jecxz
mov
push
repz
mov
dec
es
mov
and
inc
test
rcrb
pop
sbb
flds
cmp
test
mov
int3
jmp
and
stos
add
push
push
pop
dec
add
dec
pop
insb
add
add
out
les
cmp
in
pop
mov
popf
cmp
dec
pop
cs
dec
bswap
stos
loop
iret
mov
jecxz
push
sbb
pop
push
jg
daa
xor
jle
lods
adc
jmp
adc
imul
in
lgs
int
jp
mov
cmpsl
sbb
lea
out
jp
jae
jp
inc
sbb
xor
xchg
mov
fucomi
lds
add
cmpl
jmp
sbb
insl
mov
test
addr16
sub
imul
nop
adc
into
jno
dec
sbb
adc
or
shl
xchg
stos
insl
sbb
mov
mov
addr16
pop
das
les
in
lds
jbe
js
xchg
pop
push
ds
jne
out
sub
cli
into
jbe
sub
js
sub
mov
dec
fwait
lretw
pop
or
sub
dec
mov
fistpl
add
mov
lods
ss
xchg
sbb
xor
sub
into
jns
add
imul
and
loopne
sub
pop
xor
addr16
stos
in
and
cmp
sub
adcb
fstp
fs
sbb
inc
insl
inc
or
rcrl
xchg
or
incl
mov
or
dec
fs
inc
fdivrl
adc
fsub
pop
mov
inc
les
push
int
imul
cmp
adc
rclb
nop
imul
jle
sub
push
in
loop
andb
jns
mov
pop
in
out
je
sbb
subl
pop
clc
out
add
xchg
add
inc
ss
cmp
sub
add
adc
je
shlb
inc
cmp
loopne
lea
mov
enter
sbb
mov
push
add
aad
jae
movsb
xor
ret
inc
popf
sbb
xor
mov
mov
sub
cmp
fisubl
inc
insl
mov
sub
stos
or
lds
loop
cs
jle
lds
loop
push
loop
gs
fs
push
nop
jne
pushf
fmuls
cmp
dec
popa
mov
ret
lds
rcr
xor
xor
in
sub
mov
jle
shl
lds
sti
pop
push
mov
dec
push
or
aaa
lods
mov
jo
inc
inc
jne
sahf
add
orl
mov
aaa
push
cltd
sub
inc
xor
add
cli
jne
jp
and
sbb
jo
outsb
jbe
inc
sbb
mov
inc
fcompl
add
imull
mov
test
mov
xchg
cmpsb
popa
dec
xor
cmpsl
jb
mov
jecxz
stc
xor
outsl
jle
cmp
into
mov
sub
lret
inc
jmp
test
inc
fucom
outsl
mov
cmp
mov
lds
xor
call
inc
mov
lret
nop
mov
je
cmp
testb
inc
pop
cmc
aam
ds
cmp
sbb
stos
clc
in
lret
ret
cltd
jbe
and
pop
fisttpll
test
fcomps
mov
pop
mov
push
push
dec
cmc
cmpb
push
ss
scas
in
nop
notb
push
in
hlt
cmp
push
adc
xor
cmp
int
add
mov
aad
and
sub
pop
aas
lods
movsl
xor
xchg
js
shr
cmp
iret
sub
push
and
pusha
dec
in
cld
addr16
popa
inc
and
nop
lret
adc
xchg
insb
pop
add
push
push
add
push
add
int3
mov
add
fcmovb
xor
push
mov
movsl
movsl
sub
mov
fldt
jmp
mov
mov
lock
or
xor
int3
xchg
shlb
xchg
cld
test
popf
mov
mov
arpl
lret
sub
mov
les
popa
pop
out
shlb
sbb
xor
dec
mov
mov
jg
jle
jecxz
and
rorb
add
cmpsl
push
jl
fdivrl
cld
xchg
sub
iret
gs
xchg
cwtl
or
ljmp
adc
xor
add
mov
aaa
scas
int
sbb
ret
je
ljmp
enter
fisubrs
pusha
cmp
lds
adcb
fldenv
lcall
mov
jg
adcb
xchg
je
jge
mov
mov
into
push
xor
or
mov
divb
add
ds
aad
inc
frndint
and
or
rcrb
pop
add
or
hlt
cli
xorl
out
mov
cltd
or
fdivr
mov
sbb
xlat
sti
push
pop
cmp
rcl
ljmp
imul
lret
mov
cvtpi2ps
ss
scas
add
pop
fnstenv
and
adc
cmp
aas
mulb
or
clc
lea
xchg
jns
lds
push
fcoml
daa
lret
fstpt
and
dec
sahf
push
xchg
xchg
adc
or
inc
mov
lea
and
shl
cmpsl
push
pop
inc
iret
jmp
loope
cmpl
rol
jmp
repnz
push
out
stos
add
push
jg
push
popf
pop
add
adc
lods
loopne
jnp
stos
dec
lods
ljmp
andb
or
mov
mov
push
ficomps
xor
fs
and
ret
fcoml
mov
mov
mov
cmpsb
dec
mov
cltd
mov
repz
mov
xchg
mov
jnp
loopne
ss
clc
ljmp
mov
inc
loopne
ret
jecxz
fcmovnbe
inc
in
mov
into
mov
xchg
inc
outsb
mov
inc
outsb
out
xorb
mov
out
popw
cmpsb
xor
in
popa
repnz
push
std
rcrb
fbstp
xor
and
nop
movsl
insl
fisttpll
xor
jnp
divb
and
dec
pushf
data16
xor
adc
daa
add
hlt
inc
stos
or
negl
jb
orb
or
mov
or
xchg
nop
loop
shl
pop
cltd
test
xchg
cmp
fists
adc
mov
aas
pusha
push
lret
movsl
sbb
push
xrelease
xchg
std
ret
add
pop
arpl
or
cwtl
sub
or
push
mov
pushf
lods
xor
dec
pop
and
test
std
mov
xchg
dec
out
inc
imul
or
mov
loop
lds
ss
sti
push
fmuls
cwtl
lea
shlb
ja
les
jmp
adc
pop
into
insb
outsb
lahf
jg
sbb
mov
out
cld
outsb
popf
data16
in
inc
shrl
loop
or
xchg
mov
inc
adc
xchg
in
push
lahf
fsubrp
hlt
std
mov
insb
jb,pt
push
in
aas
add
popf
fnstenv
xchg
cli
mov
daa
or
lahf
sbb
xchg
and
int
pop
nop
lds
jmp
mov
pop
andb
outsl
cltd
cmpl
inc
mov
cmp
and
pusha
scas
jb
outsl
cltd
dec
jnp
sbb
sbb
pusha
roll
and
cmp
popf
lods
and
in
pop
jle
adc
mov
cs
mov
push
addr16
xor
ds
inc
xchg
adc
push
xchg
pop
decb
sbb
aam
cmpb
xor
adc
jne
push
sbb
cmp
xchg
scas
orl
jmp
cs
out
xchg
push
mov
jl
data16
sbb
push
mov
mov
je
sahf
or
rep
add
cmpsb
arpl
repnz
or
or
clc
xchg
cmp
repnz
inc
fsubl
add
popf
enter
hlt
mov
jecxz
jle
mov
roll
add
mov
jno
xchg
mov
cmp
iret
aad
xchg
inc
pop
mov
sub
or
jecxz
push
mov
mov
out
fs
lret
stc
mov
cmp
jbe
dec
jg
addr16
or
dec
adc
mov
fmuls
cmpsb
int
dec
jmp
icebp
ret
mov
jae
jmp
inc
fisubs
into
fnstenv
js
out
jae
push
frstor
mov
jnp
pop
lcall
daa
jmp
call
adc
lea
adcb
mov
call
pusha
sbb
lods
or
sti
insb
sbb
iret
es
push
adc
jns
mov
add
lea
xchg
mov
add
inc
cmc
mov
cwtl
ret
pushf
es
movsl
or
aam
push
testb
dec
inc
add
mov
subb
popa
or
test
lea
or
jmp
push
mov
rorl
push
xchg
sub
pop
insb
fs
test
call
fcom
pop
jb
push
lods
jge
cwtl
xchg
in
dec
ret
cwtl
xor
xlat
lds
mov
shll
mov
arpl
stos
jl
jmp
mov
lahf
mov
fwait
test
cs
xor
pop
sbb
adc
fstpl
cmp
fdivrs
mov
sbb
cmc
xor
ret
aad
xchg
inc
sbb
imul
into
add
std
mov
and
push
mov
out
lods
cli
addr16
push
addl
repnz
push
adc
xchg
jnp
mov
or
jg
in
xor
daa
lock
mov
sti
movsb
pmuludq
sbb
ret
jne
pop
into
pop
push
pop
pop
sbb
push
mov
pop
sbb
pop
dec
ret
fs
sbb
add
jp
lea
xor
adc
xlat
inc
xchg
adc
int3
in
or
xlat
inc
pop
fldenv
scas
sbb
lock
rcrb
orb
mov
xchg
and
addr16
fs
sub
or
push
mov
pop
hlt
add
ffreep
cmpsb
sahf
cmp
cmp
inc
jge
bound
imul
pop
inc
jb
adc
dec
js
sbbl
jbe
jbe
push
adc
or
push
inc
cli
jp
sarb
call
in
push
fwait
cmc
cmp
push
cmp
lret
sub
pusha
test
push
popf
cwtl
or
cmp
popa
leave
imulb
xor
add
adc
xchg
mov
sbb
jb
rolb
fiaddl
in
dec
mov
pusha
xchg
mull
dec
fwait
pop
mov
mov
popf
int
rcrb
or
fs
jnp
jle
fsubl
shl
jns
xor
cwtl
inc
dec
push
lcall
inc
and
inc
mov
jmp
inc
imul
cmp
jp
iret
dec
out
pop
shlb
test
sub
sarb
fdivrl
jle
loopne
cmp
pusha
cs
lret
out
xor
jno
add
sbb
das
enterw
cld
push
sbb
dec
jb
loopne
xor
xchg
in
jno
fldt
pop
jns
lret
cmpsl
mov
or
mov
push
aam
mov
xor
xchg
mov
mov
adc
xchg
sbb
fisubrl
and
sbb
xchg
cmp
les
and
or
jno
sbbb
mov
fdivrl
ret
std
xor
sbb
mov
push
daa
xchg
fisubrl
inc
or
repnz
pop
mov
inc
jns
shll
pushl
insl
mov
int
outsl
lcall
dec
sub
daa
mov
inc
fwait
and
js
adc
cmp
bound
shl
push
imul
cmp
push
or
mov
mov
jne
xchg
das
dec
aaa
pop
test
sub
or
out
mov
pop
scas
push
lahf
popa
hlt
jnp
test
pushf
push
mov
push
push
ret
imul
orl
dec
push
dec
js
loopne
clc
jne
ret
xchg
aaa
es
repnz
and
fwait
imul
out
mov
inc
int
sub
call
mov
into
roll
mov
inc
or
loop
cmc
test
mov
or
push
xchg
test
jns
cmpsb
inc
sub
cwtl
add
sub
data16
fadds
jl
inc
adc
popf
sbb
or
xchg
push
sarl
cmp
push
je
mov
pop
mov
repz
jge
mov
push
loope
pop
sub
test
out
fcompl
fstpl
shrb
xor
fstl
movb
or
sub
out
out
inc
movsb
addr16
or
fidivs
dec
movsb
push
mov
cmpb
cmp
out
cmp
mov
pop
fiaddl
push
fsubrs
or
mov
cltd
inc
push
inc
cwtl
mov
clc
adc
repnz
addr16
mov
lea
dec
inc
inc
imull
lahf
pusha
movsl
or
sub
inc
dec
and
inc
out
cmpsb
xchg
and
mov
pop
and
pop
pop
dec
movsl
mov
xor
xchg
mov
and
scas
xchg
mov
fcmovu
ret
adc
sbb
sbb
shlb
inc
into
enter
cmp
sbb
inc
es
mov
inc
inc
pop
or
add
fimull
xchg
stos
sbb
in
add
pop
jae
jbe
or
inc
cli
dec
pop
mov
mov
inc
pusha
shrl
add
dec
cmc
notl
cmp
xor
aam
lret
mov
mov
fnstenv
cld
dec
push
lods
ja
in
stos
sahf
in
mov
cmp
stc
or
leave
bound
rorb
mov
lret
push
xchg
inc
or
lea
dec
pop
and
sbb
sbb
xchg
mov
jge
loopne
inc
in
imul
pop
pop
and
daa
int
lcall
bnd
add
fidivs
or
cmpsl
cmp
mov
scas
call
stos
shl
cwtl
mov
push
dec
jns
jle
push
add
fcoms
mov
test
pop
pop
int
aad
in
mov
pushf
into
insb
cmpsb
and
scas
addr16
pushf
jnp
lds
push
mov
pop
in
mov
xor
lea
out
inc
xor
add
fcomip
and
push
sbb
cli
test
xchg
adc
addb
ds
orl
in
movsb
mov
sti
xchg
ja
stos
and
pop
in
mov
dec
je
das
aad
add
jmp
cmc
cmp
fsub
ret
test
lods
mov
xchg
jg
fs
pop
inc
jns
mov
xchg
daa
add
adc
vpsubd
xor
cwtl
cld
push
dec
repnz
in
xchg
mov
pusha
int3
jmp
lcall
fwait
cmp
lret
iret
test
or
jge
cmp
or
inc
dec
in
jno
push
pop
add
pop
rorb
mov
add
les
mov
jg
xchg
xchg
jmp
dec
in
push
xchg
mov
in
sbb
dec
sub
movsl
into
mov
pop
pop
mov
push
insb
test
push
mov
push
add
aad
sbb
add
sbb
dec
push
xlat
add
inc
mov
or
loope
gs
push
stc
xchg
cmpsb
cli
jle
or
xlat
aad
and
movsl
xchg
jge
pop
mov
and
pop
int
jge
jae
cmpsl
cmpsb
inc
out
inc
ucomiss
and
mov
push
js
fisubrs
jnp
shlb
je
cli
pop
rorb
or
pop
adc
jg
mov
jns
popf
ljmp
mov
pusha
push
mov
sbb
ret
jbe
cmp
push
push
sbbl
dec
lahf
sbb
daa
mov
inc
into
cmp
mov
cmp
push
aad
add
or
cmp
imul
popa
arpl
jmp
negb
jp
lds
push
xchg
popf
popa
in
xlat
jae
jge
dec
mov
xchg
test
rclb
inc
mov
ja
xchg
dec
mov
jge
mov
mov
dec
ss
clc
mov
mov
xchg
fcoms
jo
pop
bound
jbe
pop
mov
pop
push
sbb
test
outsb
add
mov
lods
scas
push
sub
pop
mov
mov
aaa
aam
jnp
mov
jp
sub
pushf
jle
in
and
dec
push
xor
adc
xchg
mov
ficoml
fwait
add
mov
mov
cmp
mov
decb
pusha
push
jl
dec
mov
mov
fdivr
fsubl
mov
clc
pop
jmp
ja
arpl
in
mov
adc
pop
push
shlb
jmp
daa
dec
scas
outsl
add
push
lock
and
jne
lret
xor
add
out
je
rolb
mov
std
enter
or
or
jo
xchg
push
out
dec
pop
testl
xchg
or
inc
lods
mov
movsb
xor
insl
push
mov
mov
mov
stos
mov
inc
mov
inc
sbb
in
popw
dec
xchg
data16
sub
push
adc
sub
cli
and
xchg
aad
inc
dec
les
sub
arpl
push
aam
jae
mov
pop
shll
dec
ret
dec
mov
inc
mov
adc
xor
sbb
mulb
aam
and
hlt
daa
fsubrs
enter
mov
fidivrl
adc
push
sti
cmc
ja
jb
incl
cld
pushf
imul
push
mov
and
divb
push
stos
cli
sbb
loope
mov
sti
cmp
add
leave
push
frstor
call
lret
add
cmp
leave
out
sahf
push
int
int3
fsubrl
hlt
sub
sub
xchg
cwtl
mov
rolb
cmc
sbbl
dec
test
cmp
popf
xchg
adc
js
std
dec
xor
add
push
ljmp
pop
iret
imul
push
lahf
xchg
leave
add
mov
pop
mov
sub
push
mov
mov
stos
mov
stc
fldt
sahf
mov
pop
mov
fs
inc
dec
sti
inc
mov
sub
ja
ficoms
or
std
jge
rolb
enter
lldt
insb
sarl
xchg
lret
fldl
xchg
scas
sub
loope
int
adc
mov
push
push
xchg
mov
sub
into
and
pop
add
mov
mov
ljmp
xor
aas
dec
push
out
dec
jae
jbe
sbb
test
sbbb
icebp
notl
leave
cmp
jecxz
test
scas
iret
in
lret
dec
dec
and
push
dec
and
jl
jmp
repz
xchg
fcmovu
repz
mov
and
jb
test
lods
inc
repz
xor
out
call
imul
add
inc
pop
pushf
sub
sbb
xchg
ljmp
xchg
add
incl
push
pop
stos
fnstcw
cld
movsl
insl
adc
bound
movsl
xchg
inc
addl
adc
adc
cltd
inc
adc
push
stos
enter
mov
xlat
fcomps
mov
scas
pop
pop
cmp
adc
bnd
cwtl
and
pop
inc
fstps
into
hlt
andl
lods
mov
cwtl
ds
cmp
fisttps
std
mov
fsubs
lock
jbe
popf
xchg
push
xlat
inc
inc
pop
scas
in
popa
mov
into
js
inc
in
and
mov
cmp
arpl
inc
mov
mov
mov
lahf
push
jns
sbb
pop
in
dec
popa
xor
mov
xchg
mov
cmpsl
mov
jo
pop
add
imul
mov
lret
lret
mov
adc
cmp
cmp
and
mov
lcall
xchg
jle
loope
inc
mov
mov
mov
adc
add
sub
jne
mov
rcll
mov
movsl
outsb
and
mov
or
stos
xor
leave
or
xchg
pop
les
cmp
jo
pop
or
fistps
mov
nop
nopl
mov
nop
or
mov
into
sub
xchg
jp
mov
pop
jmp
cs
sbb
rorl
test
lock
mov
sti
adc
adc
movsl
aad
jo
mov
adc
add
fistps
fldcw
sub
test
jecxz
lret
sar
cltd
xchg
cwtl
ljmp
cmp
push
add
push
pop
and
sub
orb
inc
and
fnstenv
les
xchg
dec
leave
pusha
ret
pop
int
mov
dec
popf
mov
add
add
insb
inc
push
lock
roll
mov
fistpll
inc
sub
pop
mov
imul
inc
jno
xchg
mov
mov
mov
xchg
xlat
insb
mov
repnz
sbb
sbb
add
inc
xchg
imul
test
ficomps
test
cmp
inc
insb
cltd
icebp
xorb
mov
mov
scas
xor
andl
divb
jp
lret
addb
test
mov
mov
mov
repz
inc
and
andl
sub
repz
xchg
adc
aam
rcl
out
outsb
cmp
dec
add
xchg
pop
loope
je
sbb
daa
cmp
add
pusha
inc
push
sbb
add
jae
mov
adc
mov
ficompl
lret
sti
out
adc
and
ljmp
out
add
movsl
outsb
adc
movsb
mov
ja
icebp
push
push
lea
fcom
fcmovnbe
xor
push
test
repnz
sub
test
and
add
loope
or
xor
fcompl
mov
mov
or
repnz
nop
cltd
mov
stos
xchg
push
push
adc
xchg
push
bound
das
pusha
cmp
or
out
and
popf
mov
push
fstpt
cmpb
jl
loop
je
out
push
cmp
xchg
mov
clc
add
pop
leave
test
xchg
int3
fidivs
shrl
mov
divb
sbb
out
dec
cmc
and
jnp
scas
jb
outsl
and
sub
mov
enter
or
and
hlt
inc
mov
push
pop
aas
dec
mov
mov
dec
ljmp
stos
pop
mov
stos
xchg
inc
mov
jp
xor
xchg
mov
pushf
jle
sub
xorb
loope
cmp
push
pusha
ljmp
scas
outsl
push
negl
xchg
pusha
scas
icebp
sub
or
mov
movsb
js
pop
pop
addr16
clc
jg
add
js
mov
sbb
sbb
in
pop
into
lock
jo
lret
int
xchg
jecxz
sbb
push
roll
sahf
ret
fmuls
shlb
hlt
lock
jne
lcall
or
in
loop
lret
add
jg
jne
xchg
jl
pop
adc
test
sarl
jb
dec
cmpsb
arpl
lahf
adc
int
sub
xor
mov
cmpsb
dec
into
sub
push
mov
pop
or
movsb
jno
rolb
shl
insl
sahf
cli
mov
and
push
sarl
dec
out
movsl
or
sub
push
push
and
cmp
mov
push
sub
ret
out
cmp
inc
or
sbb
mov
insl
in
movsl
dec
dec
in
lods
xchg
in
stc
out
daa
dec
mov
push
cmpsl
out
jno
int
xor
stos
dec
cmpsb
mov
scas
lods
std
adcl
nop
adc
add
jbe
cmp
xor
sbb
test
test
loopne
and
jle
je
dec
aam
fsubr
mov
fwait
ljmp
popa
dec
into
addl
addl
push
in
in
addr16
jo
mov
or
adc
sbb
mov
jns
mov
adc
out
add
scas
cld
jp
shll
adc
test
out
fcomps
mov
pop
pop
adc
fmuls
in
sahf
mov
or
sbb
pop
rcrb
test
adc
mov
sub
inc
push
scas
mov
push
dec
test
repnz
xchg
adc
subl
rcrb
adc
mov
jno
movsl
push
and
dec
ret
xchg
mov
and
xchg
rcrl
shll
jg
sub
decl
das
push
mov
aad
push
cmc
lods
roll
in
push
mov
js
sub
cmp
aam
dec
lea
sbb
je
mov
test
cs
add
lods
rol
pop
je
adc
sub
mov
fisttpll
mov
and
aam
cwtl
cli
sub
xor
ret
sbb
lahf
xchg
lds
stc
mov
fwait
pop
add
div
inc
or
data16
mov
xchg
xchg
mov
xchg
mov
pop
hlt
sbb
cld
jnp
dec
jae
jg
inc
pop
fnstenv
data16
dec
lods
dec
xchg
shlb
lods
dec
add
cmp
mov
mov
inc
cwtl
rcrb
or
dec
in
inc
push
insl
mov
cmp
add
inc
cmp
push
xchg
ljmp
and
dec
fdivrs
out
inc
cmpsl
sarb
gs
addr16
add
fisubl
loope
inc
ss
test
push
in
in
inc
mov
dec
fucomi
xchg
insb
push
lds
mov
add
lock
push
jl
mov
dec
jo
add
psllw
popf
arpl
add
mov
into
movups
xchg
xor
fiaddl
lea
call
pushf
sbbl
imul
sbbl
mov
add
sub
jno
mov
fsubs
jp
outsb
cmc
inc
aad
xor
stos
xchg
mov
inc
cmp
lock
xchg
sbbb
xchg
fwait
pop
insl
push
jp
mov
hlt
inc
xlat
mov
cmpsb
movsl
jnp
inc
shrb
sbb
pop
mov
xchg
clc
inc
frstor
daa
dec
popa
inc
test
aaa
push
cli
mov
push
jns
loop
and
pop
shll
push
jbe
and
xor
dec
lahf
jl
mov
lahf
mov
data16
xchg
and
lods
bound
ds
pushf
fcoms
ret
fsubl
push
shlb
dec
adc
mov
lahf
xchg
outsb
fwait
lds
mov
mov
or
testb
cmp
and
or
jno
scas
repz
lds
lret
add
sub
arpl
in
in
add
and
mov
mov
sub
out
test
sbb
movsl
lds
je
int3
jecxz
and
mov
scas
cmp
mov
and
mov
cmpsb
xor
call
dec
xchg
outsb
and
pop
pushf
ja
loope
aad
pop
ljmp
cmp
and
ret
aam
loope
push
cmpl
pop
inc
fistpl
pop
mov
mov
xor
js
mov
push
mov
add
xor
or
out
in
mov
jp
add
cs
mov
jb
cld
adcb
jnp
rep
cld
push
jnp
push
xchg
sub
pop
mov
repnz
lret
insb
jbe
jge
bound
orl
mov
loope
or
jnp
jae
sbb
push
dec
sbb
mov
mov
das
and
mov
pop
mov
nopl
ljmp
aam
aaa
ljmp
test
mov
ret
divl
repnz
mov
test
inc
arpl
pop
push
shr
and
movsb
sub
loop
adc
mov
rcl
ljmp
cltd
adc
es
mov
cmp
add
fwait
orb
sub
fldenv
insl
pop
pop
ja
test
stos
xlat
mov
stos
push
sbb
inc
mov
push
jge
sbb
inc
lds
insb
mov
rclb
cld
subl
insl
or
roll
sub
mov
mull
enter
mov
jnp
lods
lahf
inc
mov
jbe
inc
imul
push
fstps
cwtl
jg
mov
inc
pop
mov
adc
xor
pop
sbb
shll
xorl
mov
inc
and
add
cmp
sub
xchg
outsb
or
inc
or
xchg
adc
negb
xor
outsb
inc
scas
out
andb
jne
popa
or
ret
stc
imul
jecxz
mov
mov
pop
das
outsb
ret
pop
adc
in
pop
popf
lods
js
sarl
mul
sub
scas
js
jmp
ljmp
stos
hlt
stos
rcrl
ret
mov
cld
out
fcmove
dec
dec
lods
pop
or
icebp
sbb
test
adc
fnstcw
add
addr16
and
cmpsb
push
aam
add
cmp
insb
adc
push
movsl
test
into
test
and
dec
leave
aas
jae
push
ds
in
mov
jg
aad
lahf
out
in
cwtl
cmpsb
enter
sub
mov
push
divl
scas
mov
out
imul
pop
popa
ja
and
mov
lcall
inc
adc
icebp
or
or
push
push
out
or
in
sbb
jge
scas
mov
gs
and
loope
leave
aaa
jo
dec
sbb
or
or
daa
mov
cmp
xorb
out
fs
je
lcall
int3
mov
into
pop
pop
out
das
mov
imul
sub
cmp
and
mov
sub
sub
xor
ds
scas
jno
inc
fildl
sbb
jl
mov
aam
fdivrl
jle
pop
dec
cmpsl
adc
sub
xlat
fstp
pop
mov
dec
out
push
mov
stos
xlat
jmp
and
js
out
dec
add
movsb
lock
inc
icebp
sub
mov
stos
xchg
repnz
stc
sub
xor
sub
xor
test
xorl
add
lea
and
cmp
mov
popa
pop
mov
adc
adc
movsl
mov
lgs
mov
pop
add
ja
mov
pop
call
xchg
cli
shrl
loop
adc
cltd
aad
push
push
in
xor
pushf
jno
popl
sbb
and
jb
aad
ss
pop
lret
aad
in
jb
test
push
lret
rcll
lods
push
push
or
dec
ljmp
fidivrl
sub
pop
aaa
jo
or
mov
xlat
stos
ret
cltd
into
jg
popa
sbb
call
ds
or
add
cs
or
jp
push
in
je
sbb
lret
gs
jnp
ret
mov
out
ffreep
cmpsb
sti
faddl
xor
lods
and
push
and
ret
lock
push
popfw
shr
popa
mov
out
lea
outsl
sbb
imul
loope
mov
in
push
les
inc
and
mov
lods
addr16
gs
ret
icebp
gs
ret
cmp
cmp
hlt
cld
inc
pop
shrl
pop
into
or
loop
lock
mov
mov
aaa
fwait
outsb
cmpsl
add
lret
pop
ss
dec
pushl
sub
lret
sub
idivl
out
aam
xor
xor
sbb
push
push
mov
test
das
filds
daa
into
and
jns
or
cmp
push
push
xor
jl
mov
xchg
push
sahf
mov
addr16
xchg
ret
jae
and
das
pop
sub
push
sbb
andb
sub
pop
xchg
adcl
mov
nop
imul
stos
icebp
aad
adc
cli
sbb
sahf
jmp
lahf
jns
sub
jl
xchg
mov
pop
push
loop
clc
or
sbb
movsl
push
jnp
push
mov
movsb
ret
mov
xor
daa
mov
pop
mov
xor
int3
cmp
testb
jge
adc
fs
aam
leave
xor
mov
xor
inc
dec
inc
orb
push
jle
rorl
and
mov
ds
pop
mov
in
jmp
jne
sub
iret
fcmovnb
mov
xchg
xchg
stc
inc
fsubrs
mov
inc
cmpsb
sbb
mov
push
stos
xlat
mov
nop
mov
inc
lds
sti
aas
daa
push
das
int
arpl
jb
xchg
sbb
xor
xor
jl
ljmp
mov
cmpsb
jb
dec
lcall
popf
and
sbb
cmp
std
sub
add
or
aas
sub
adc
dec
jo
dec
mov
fst
dec
push
push
mov
pop
mov
mov
push
dec
mov
cltd
std
outsl
and
jnp
int
cmpsb
sbb
fs
dec
push
ret
rcr
loope
cmp
call
and
test
in
ret
and
jnp
or
pop
mov
jp
inc
xchg
es
test
orl
mov
pop
xor
pushf
sti
pop
cwtl
jns
push
mov
dec
imull
mov
daa
pop
mov
inc
bound
pop
sbb
mov
stc
mov
xchg
mov
fidivl
xor
push
inc
cmp
xchg
sbb
test
mov
push
rcll
dec
mov
and
sahf
fstl
lcall
test
push
xchg
stos
add
scas
jbe
pop
aas
lock
popf
out
xor
stos
gs
jle
jle
stos
add
mov
test
test
push
inc
mov
fnsave
sbb
xor
sahf
dec
mov
outsb
jmp
out
in
clc
mov
inc
lahf
fimuls
jno
jecxz
xchg
fsubs
fdivrp
pop
mov
dec
and
and
pushf
cmp
pop
fwait
dec
aaa
xor
inc
ljmp
inc
rcrl
test
int3
dec
iret
jge
inc
je
loopne
mov
push
lods
mov
jl
mov
or
cmp
jae
mov
xchg
push
jmp
lock
and
cmp
jbe
jno
push
repnz
xchg
add
aam
or
cmpsb
cmpb
sub
mov
xor
inc
test
scas
xchg
add
xor
pop
xchg
movsb
jae
inc
stc
fcomps
jns
into
aam
xchg
and
pop
orb
cli
add
movsl
jecxz
sub
dec
mov
imul
shll
xchg
rol
lds
xlat
push
sbb
pop
cltd
sbb
ljmp
imul
movl
pop
rolb
cli
cld
dec
sub
aam
int
dec
arpl
test
dec
in
push
stos
pop
ret
jbe
popf
ret
fnstsw
sub
inc
pop
sub
jl
test
les
cltd
mov
xor
clc
out
out
mov
pop
xchg
jb
ficomps
mov
jno
mov
mov
mov
jp
sbb
jmp
insb
push
into
sete
mov
sahf
cmp
in
sarb
xchg
lcall
mov
push
and
push
mov
test
dec
xchg
movsl
icebp
mov
fsts
repnz
movb
ss
pop
je
lahf
dec
push
jbe
lds
pop
sub
cmpsl
jae
sub
cmp
mov
inc
mov
xor
or
shl
movsb
sbb
mov
mov
bound
push
pop
mov
xchg
and
pop
mov
cmp
mov
imul
lds
imul
pusha
push
je
jb
mov
and
test
jp
in
imul
jl
sbb
addr16
push
neg
outsl
mov
pop
sub
pop
sbb
jecxz
or
out
dec
xchg
das
push
cltd
adc
int
cli
in
fnstsw
and
or
mov
aad
dec
imul
xor
idivl
pop
or
cmp
xor
xor
jle
ret
jecxz
fldcw
xor
test
aam
add
test
jno
push
adc
add
xchg
daa
shrl
js
cmpsb
mov
pushf
cmp
pusha
push
jecxz
lea
jb
addr16
xchg
leave
xor
pop
ds
lret
sbb
push
into
fcmovnbe
stos
andb
pop
add
and
imul
jno
xchg
shll
in
addl
push
push
adc
add
inc
inc
ret
pop
imul
mov
iret
cwtl
roll
loopne
nop
loop
adc
mov
push
pop
cmpsb
cwtl
leave
shlb
jmp
xor
push
pop
fcom
ret
xchg
xchg
push
dec
and
pop
mov
add
stos
mov
sti
je
mov
clc
mov
fwait
inc
sub
cmp
sahf
add
jno
jge
lea
pop
and
pop
sbb
es
jl
xchg
and
inc
scas
ret
and
insb
out
push
push
push
jge
xor
clc
test
movsl
lds
pop
adc
scas
lret
ret
daa
xor
and
in
lret
ds
jp
inc
inc
in
inc
insl
cmpb
test
mov
lods
push
or
enter
fs
mov
inc
mov
lods
pushf
xchg
aaa
mov
cs
pop
insl
push
inc
popf
pop
and
mov
fldt
std
mov
loopne
add
pushf
cmc
jp
subl
mov
imul
stc
ror
fdivs
cli
jecxz
add
ss
push
xchg
mov
mov
and
jbe
fadds
test
scas
inc
lods
xchg
xor
in
stos
pop
loopne
test
lret
push
mov
push
cmc
ja
fdivl
imul
ljmp
stc
jecxz
je
cmpsl
pop
jp
inc
xchg
fimull
ret
add
dec
outsb
std
out
mov
push
mov
lock
pusha
jb
data16
lcall
test
lock
add
fistpll
cmp
add
push
shrd
mov
or
outsl
inc
ss
rolb
mov
in
mov
cmc
jne
mov
cmp
xor
popf
hlt
cs
cmp
mov
xor
jecxz
add
out
push
aas
xchg
sbb
or
push
inc
daa
or
mov
lret
push
addr16
fwait
loope
fmuls
push
lret
test
cmpsb
rcr
sbb
push
rorl
push
das
ret
sbb
shr
mov
cmc
cwtl
aas
xchg
mov
sub
mov
add
test
je
out
pop
cli
mov
cmpsl
pop
scas
adc
inc
xor
cmp
push
je
jmp
mov
mov
push
or
into
dec
pop
test
outsl
pop
add
jmp
xchg
fcompl
dec
mov
cltd
cmp
repz
pop
es
test
pop
push
cwtl
jmp
xchg
sub
jecxz
mov
subl
sbb
fdivrs
fiaddl
mov
or
adcb
loopne
adcl
fisubs
adc
das
jl
mov
subl
out
test
jecxz
push
pop
and
mov
push
xor
mov
call
loop
inc
cmp
xor
xor
popf
or
ret
push
dec
dec
out
dec
ss
movsl
sti
jg
repz
mov
out
mov
push
aas
sub
push
call
roll
push
mov
adc
or
mov
jae
stos
call
insl
add
add
sub
inc
sbb
jae
das
xchg
adc
mov
mov
dec
scas
int
int
mov
ss
jno
jns
add
outsb
xchg
loopne
push
pop
cwtl
out
dec
aas
sub
pushf
movsb
adc
xchg
pop
mov
add
xor
jg
imul
or
cmc
ja
mov
fildll
adc
jno
addr16
icebp
scas
js
sar
xor
push
xor
add
test
decl
and
sbb
pop
jecxz
icebp
test
aad
sub
or
inc
jmp
sbb
hlt
lds
cltd
cmp
mov
adcb
xlat
popl
std
and
loopne
and
sti
inc
xchg
xor
aas
mov
jg
mov
mov
repz
fwait
inc
inc
dec
ljmp
push
pop
adc
shlb
inc
lds
xchg
mov
jmp
pop
pop
rorb
aam
mulb
pop
inc
rcl
push
inc
sbb
xorl
gs
mov
in
xor
iret
int3
inc
test
push
xchg
cld
jmp
push
repz
mov
lock
dec
imul
movl
sub
xorl
adc
sbb
jo
cmp
call
stc
hlt
movsb
insl
fidivs
mov
xchg
xchg
enter
inc
jbe
push
jmp
shrb
popf
xor
mov
pop
sub
dec
mov
lret
jo
addr16
popf
in
push
fs
xor
add
jmp
mov
add
add
add
les
ret
test
sbbb
and
out
imul
arpl
pop
push
or
rcrl
ljmp
mov
cli
ds
jbe
test
cmp
xor
xchg
dec
cwtl
push
idivl
inc
adc
leave
and
mov
add
fistps
into
aam
add
dec
rcrl
and
jecxz
push
cld
jae
sti
in
mov
sbb
or
rorb
mov
fcmovbe
sbb
mov
fcomp
test
jle
call
push
add
cmp
jge
push
mov
lahf
dec
mov
sub
fnstsw
xchg
pop
mov
xchg
lea
xor
fsubrp
push
hlt
jge
in
stc
xchg
loope
jae
movsb
mov
clc
sbb
aas
andb
jbe
jle
pop
sub
and
rcrl
sub
jp
stc
stc
mov
cli
push
mov
negb
inc
das
test
insb
pop
lods
pop
jle
mov
mov
cmp
icebp
cmp
out
lods
addr16
xchg
lahf
shll
mov
jmp
lods
in
xchg
rolb
fcomi
int3
inc
jge
inc
sahf
lds
mov
pop
or
adc
cmpl
jbe
pop
cmp
gs
mov
jnp
addb
sarb
mov
jmp
loop
lret
es
add
loope
outsb
ret
testl
call
jb
call
into
adc
cwtl
mull
fisttpll
lcall
int3
mov
sbb
mov
mov
sbb
sub
imul
fiaddl
jne
shll
add
cmp
ss
xchg
lahf
xor
rcr
es
mov
dec
ss
dec
call
aad
push
ljmp
popa
out
std
or
jl
sti
les
daa
lods
fistps
ds
sbb
fisttpll
jmp
sbb
loop
cltd
add
sbb
mov
es
arpl
repz
loope
or
hlt
xchg
or
adcb
xlat
add
aad
stos
lahf
mov
and
je
or
les
xlat
packsswb
das
xor
sub
inc
adc
hlt
dec
push
push
ret
enter
out
ljmp
pop
and
negl
push
fadds
jne
pop
nop
sub
xchg
test
dec
lret
push
mov
dec
pop
push
rcl
or
test
sbb
imul
push
sub
ljmp
pop
inc
sub
sbb
jmp
pop
call
push
insb
xchg
lahf
dec
cmpl
or
sahf
push
adc
adc
cmp
and
or
test
aas
xor
jl
les
fdivs
pop
outsl
lock
cli
movsl
xor
add
ret
or
adc
into
inc
pushf
sub
cmp
loopne
mov
push
xchg
xchg
das
insb
adc
outsb
stc
aaa
dec
imul
movsl
cwtl
popa
nop
leave
xchg
outsb
push
mov
fists
loope
push
or
dec
mov
enter
xorl
xchg
adc
shll
scas
outsl
sbb
or
push
lds
push
or
jg
out
dec
sbb
inc
xor
mov
mov
jl
jmp
push
jecxz
lret
cmp
inc
dec
mov
repnz
push
sub
mov
idiv
pushfw
fcmovbe
out
sbb
jae
push
mulb
leave
movsb
push
xor
mov
lods
dec
hlt
jl
addb
mov
mov
mov
push
sbb
imul
stc
mov
inc
fst
fldln2
sbb
addr16
in
add
pop
lea
sbb
xorb
pop
pop
mov
cltd
xlat
jbe
mov
pop
sbb
popf
aad
test
outsl
out
mov
in
mov
jp
aad
push
fdivl
inc
fisubl
xor
aaa
pop
adc
sub
int3
pop
gs
push
int3
dec
call
mov
lahf
xchg
sub
xor
ds
rclb
testb
iret
jmp
repz
mov
repnz
and
int3
enter
es
mov
mov
cwtl
adc
adc
push
or
lcall
add
cmp
stos
sub
adc
or
lea
dec
lea
mov
rclb
dec
cwtl
jmp
jge
sub
popf
aas
xlat
pop
mov
out
icebp
call
xchg
movsl
call
push
lahf
mov
scas
or
iret
sub
and
adc
inc
push
push
sub
das
mov
jmp
jns
fsts
out
loopne
sbb
mov
cmc
addr16
ss
cwtl
sahf
xor
fistps
or
jg
sub
xchg
adc
inc
add
loopne
xchg
scas
xor
mov
mov
mov
jnp
sarl
xchg
jae
pushf
mov
pop
jl
mov
push
in
enter
loopne
pop
icebp
sbb
mov
xchg
xchg
jns
sub
lds
and
or
pop
dec
sub
fs
repnz
sbb
out
test
pop
jbe
inc
cld
mov
outsl
cmp
ljmp
sub
pop
mov
divb
jb
rcrl
mov
mov
inc
ss
out
dec
sub
icebp
cltd
lods
lcall
xor
loope
mov
mov
adc
leave
sbb
fsubp
push
aam
das
push
sbb
sbb
sti
mov
pop
sub
mov
xchg
mov
push
mov
loope
in
jle
add
or
xchg
cmp
lods
ret
sbb
xchg
lock
outsl
aad
dec
fsubl
mov
pop
pop
int3
jnp
bound
popf
scas
cwtl
cli
cmp
mov
movsb
sbb
pop
mov
push
xchg
lret
imul
push
and
ss
mov
cmpb
sahf
les
lds
sbb
xlat
dec
pop
sub
ds
aad
xchg
jge
dec
call
insb
or
cmp
std
icebp
jno
out
insb
js
movsb
leave
pop
jecxz
lods
outsb
add
lods
jp
loopne
pop
sbb
fstpl
mov
fsubp
pop
adc
mov
inc
loopne
pop
mov
sub
shr
jmp
jl
inc
mul
jecxz
ja
and
or
das
shll
or
loope
mov
test
es
fbld
cmp
and
loopne
shl
push
jno
mov
push
xor
pop
cmpsl
and
stc
pusha
fcmovnu
add
push
mov
add
cli
jecxz
xor
mov
push
mov
jnp
ss
xlat
xchg
adc
loop
push
jns
les
xor
mov
outsb
xor
sbb
out
lds
das
inc
pop
popa
lret
xchg
flds
scas
jg
and
pop
cmc
ljmp
ljmp
nop
aad
mov
jp
stos
pop
cmc
pop
push
scas
hlt
sti
cli
sahf
push
mov
cwtl
jge
inc
xor
fsubr
xchg
lret
fmull
ja
xchg
ror
inc
adc
fsub
pop
mov
cltd
push
popl
jo
sbb
es
xchg
imul
fisubl
pop
sbb
stos
sar
add
xchg
inc
je
hlt
cli
adc
loopne
rorb
ret
je
dec
mov
inc
lret
sub
aam
shlb
lret
notb
lret
sub
imul
and
add
jl
call
es
out
inc
lahf
loopne
mov
lret
pop
icebp
enter
ljmp
add
ficoml
jl
fst
in
cs
ss
sbb
inc
inc
in
es
leave
jno
out
pop
cli
sti
ds
les
test
pop
sub
sbb
sub
or
roll
push
daa
fdivrs
sbb
mov
sub
lock
sub
aaa
dec
jp
xchg
mov
aas
mov
ficompl
bound
cmp
ljmp
fnstcw
mov
push
imul
movsb
add
and
popf
xor
mov
popf
mov
ret
mov
sub
stos
or
inc
jns
pusha
xlat
jl
fstps
inc
aas
pop
mov
dec
jae
add
jecxz
jp
roll
ret
inc
fisttps
out
ja
shll
sub
pop
lcall
and
ficoml
scas
xchg
push
subl
mov
pop
pop
jne
decl
cmp
cwtl
aas
xchg
sbb
fsubp
cmpsl
mov
pop
loope
fstp
fimuls
sbb
cmp
lods
cmp
push
imul
scas
loopne
cmp
jbe
out
loope
cmp
daa
mov
xor
jne
rcrl
cmpsb
sub
insl
push
pop
fidivs
addr16
es
push
cmp
imul
stos
xchg
nop
inc
push
jno
mov
lods
gs
mov
jg
sub
mov
jle
adc
fsubs
and
and
stc
loop
mov
pop
shll
or
and
test
mov
sbb
jp
jae
lods
into
xchg
vmovmskps
xchg
dec
call
sti
cmpsb
mov
cmc
fucom
or
out
sti
mov
or
mov
enter
test
mov
cmc
mov
cmp
dec
xor
outsl
inc
scas
sti
push
test
dec
test
inc
insb
cmpsl
jb
adc
pop
lret
cmc
jmp
jl
test
repnz
fistps
ja
mov
sub
ret
ret
push
mov
enter
add
and
pop
sbb
xchg
test
aad
and
adc
jle
aam
push
and
lods
cltd
cwtl
loope
add
rol
jmp
xor
loop
mov
cld
cwtl
icebp
rcrb
faddl
mov
inc
sub
push
jae
jns
mov
inc
repz
jnp
ficoml
cmpsl
fst
pusha
aam
movsb
test
int3
out
pop
mov
maskmovq
idivl
lret
and
ja
push
cmp
cld
sbb
dec
add
pushf
stos
xchg
popf
mov
add
orb
push
pop
xchg
bnd
xor
sbb
sbb
je
and
rcl
imul
ja
jns
xor
enter
outsl
mov
in
dec
push
filds
mov
mov
fs
test
sahf
bound
sbb
movsl
inc
das
jle
mov
push
cmp
addb
cmpb
and
lods
ss
loopne
push
loope
ja
jno
jb
adc
jl
in
fwait
inc
xchg
mov
mov
inc
push
sbb
fsubp
mull
popf
out
cld
adc
fldt
dec
ds
mov
shll
aas
mov
xlat
idivl
imul
push
adc
aad
hlt
add
jo
lret
ljmp
mov
out
lods
clc
lret
push
test
pop
cmp
gs
jle
icebp
and
loopne
lret
xchg
mov
sub
inc
fbstp
adc
xor
and
lret
in
shlb
push
frstor
push
or
jmp
aaa
jg
sub
jg
popf
out
fs
jnp
lds
call
mov
sub
or
outsl
inc
mov
mov
out
pop
movsl
xchg
pop
stos
out
xor
sahf
jne
pusha
push
pushf
xor
adc
outsl
movsl
inc
mov
jnp
mov
cwtl
sbb
pop
insb
push
das
addr16
xor
inc
mov
enter
out
and
int3
pushf
push
pushf
ds
xor
cld
mov
cmp
push
mov
pop
inc
cmpsl
repnz
movsb
test
imul
adc
icebp
push
es
fidivs
xchg
mov
test
xchg
push
lods
push
lods
in
lods
arpl
xor
bound
push
sub
mov
mov
aam
xchg
pop
fldt
mov
mov
js
push
mov
out
dec
loop
push
push
aad
mov
call
xor
out
das
cmp
outsl
mov
push
sub
cvttps2pi
jp
daa
or
xchg
or
mov
jae
mov
aaa
nop
inc
and
sub
outsl
in
or
stos
dec
mov
jb
xlat
push
and
aas
xor
pop
push
pop
imul
mov
push
xor
sub
mov
addl
dec
popf
push
push
xor
pusha
pop
imul
sub
in
sub
xor
rorl
pushf
inc
inc
inc
push
adc
cmp
inc
icebp
jg
decb
mov
push
mov
xorb
xchg
xor
xchg
xchg
mov
add
andb
push
rcrl
popa
fwait
ret
ret
inc
push
jmp
adc
mov
ror
hlt
ret
stos
or
daa
mov
int3
insl
add
push
pop
lahf
mov
mov
pop
ds
stos
pop
ficompl
in
jg
ret
sub
xor
dec
cwtl
sti
inc
pop
and
movlps
fidivrl
inc
jecxz
mov
and
pop
out
hlt
xchg
dec
int
cmp
xchg
sti
cmp
sub
inc
aas
push
jns
cmp
imul
cmpl
inc
inc
xchg
jns
mov
mov
cmp
xor
xchg
mov
and
mov
pop
push
sub
hlt
jae
xor
fs
xor
sbb
ds
adc
cld
add
shl
pop
mov
neg
xchg
lret
cmpsl
and
inc
jmp
sbb
jecxz
sbb
mov
popf
iret
mov
adc
xchg
aas
call
mov
loop
decl
push
sbb
stos
cmp
lods
jne
jle
not
push
pop
fwait
lods
pop
out
fsubrp
das
std
iret
sub
notb
sub
sub
roll
sbbb
fcmove
pop
in
pop
sarl
jle
sahf
adc
in
mov
out
add
push
fisttpl
outsb
cmp
jg
negw
xor
stos
scas
hlt
aad
pop
xchg
lret
mov
adc
cs
mov
js
mov
jb
jecxz
pop
jo
sbb
arpl
dec
enter
hlt
sahf
mov
sub
cmp
mov
out
fmul
fcompl
xor
addr16
loop
js
inc
sub
popa
inc
mov
fstpl
mov
push
clc
leave
outsb
mov
aad
jns
pop
mov
xchg
or
add
push
mov
popf
aam
fcomps
es
mov
sub
add
std
aam
sub
int
push
mov
push
sti
pop
movsl
mov
aad
jecxz
ja
call
xor
xor
push
cld
adc
and
outsl
cs
push
jg
ret
mov
pop
mov
in
pop
pusha
push
or
cmc
or
push
mov
movsb
adc
inc
adc
mov
jae
jbe
dec
jge
xlat
sub
movsl
out
push
cmp
data16
outsb
mov
ss
adc
push
js
pop
out
jmp
push
ficomps
add
inc
mov
inc
loope
icebp
xchg
and
jge
movsb
sbb
jns
add
sbb
and
push
rclb
pop
mov
dec
jb
stos
shlb
sbb
loop
pop
inc
push
out
jb
cmp
mov
or
outsl
cltd
lea
rolw
fisubrl
jnp
aad
xchg
push
insb
popf
xchg
fmuls
lods
mov
inc
movsb
pop
enter
cwtl
test
sub
sub
daa
int
add
push
mov
cmpsb
inc
fs
aaa
jge
fnstsw
popa
stc
inc
cmp
cmc
icebp
stos
icebp
xchg
imul
add
dec
mov
das
jbe
ss
jno
pop
jecxz
and
repnz
cmp
in
lret
mov
xor
inc
mov
inc
int
xor
adc
push
mov
andb
dec
insb
mov
pop
in
outsl
push
pop
pop
adc
enter
lret
sub
pop
or
sub
mov
or
in
xchg
fdivrl
inc
and
sub
mov
xchg
adc
sbb
es
incb
mov
inc
divb
sti
inc
sbb
lret
and
dec
stos
mov
pop
jmp
mull
jne
cmp
mov
adc
jp
jp
scas
xor
lea
out
dec
lahf
xchg
stos
jecxz
sbb
imul
lcall
ss
and
repz
ds
lock
push
cmp
shll
jbe
pop
jbe
add
jmp
mov
sub
sub
sub
scas
jne
imul
inc
inc
hlt
jecxz
and
test
jp
rcll
mov
push
jno
lcall
jnp
add
dec
sbb
jle
jae
jge
je
mov
int3
dec
xlat
mov
mov
and
add
aam
sub
push
mov
xchg
pop
enter
cmp
repz
push
iret
ljmp
movsb
xchg
mov
xor
lock
or
leave
stc
jmp
sub
leave
mov
arpl
cli
xchg
cwtl
fistl
stc
sbb
mov
dec
insl
bound
xor
lahf
inc
cmpsb
dec
rcl
adc
inc
js
sub
popa
jl
xchg
cmp
bound
int3
jno
insb
gs
fisttpl
mov
cmp
lods
jo
outsl
pop
imulb
addb
cmp
lods
ja
fdivr
outsb
fldcw
pop
cmc
scas
fnsave
out
pop
addl
loop
pushf
fcomps
loop
sbb
mov
lret
shr
fcoms
pop
push
push
sbb
pop
sbb
loop
or
mov
sub
inc
jbe
mov
out
jp
lea
sub
jl
in
sub
jns
in
insb
sub
aaa
mov
clc
scas
mov
jmp
dec
adc
mov
jg
sbb
push
repnz
sarb
adc
mov
icebp
ja
mov
jnp
adc
mov
jg
call
push
leavew
orb
push
sbb
mov
fiaddl
rolb
in
clc
test
pop
mov
addl
cld
leave
lret
sub
sarb
ret
inc
scas
scas
mov
lods
sbb
xor
add
test
out
xchg
pushf
daa
mov
repz
inc
test
sbb
jl
les
sbb
mov
fs
cli
jge
pop
subb
into
test
mov
add
test
in
fstps
test
inc
sbb
pop
out
or
jno
inc
mov
out
or
mov
sbbb
jbe
cmp
mov
js
inc
push
sub
out
inc
xchg
jle
data16
in
ficomps
imul
aad
outsb
or
leave
aam
sub
jp
adc
sub
cwtl
xchg
shll
cmpsb
inc
imul
lahf
aas
push
stos
xchg
mov
enter
loope
adc
push
cs
stos
jle
shll
dec
sbb
mov
call
jbe
dec
add
cmp
imul
xor
rclb
std
sub
je
das
jecxz
bswap
dec
stos
or
cltd
aas
mov
shlb
cs
sbb
pop
loop
test
popa
xchg
js
shll
cmp
scas
mov
adcb
pop
cmp
push
data16
jb
enter
sbb
and
jl
mov
out
push
xchg
pop
scas
outsb
mov
inc
mov
out
bound
mov
gs
cmp
je,pn
cmp
xchg
jbe
int
call
and
nop
scas
and
loope
bound
out
std
mov
cld
cmc
jo
push
mov
xor
mov
push
lods
lock
xchg
data16
xor
and
hlt
pop
repz
cmp
hlt
jecxz
js
add
cmp
inc
mov
inc
jmp
inc
cmp
inc
add
not
popf
add
or
cmpsl
sbb
stos
in
mov
pop
aas
fnstsw
sbb
cld
insb
xchg
loopne
shll
xor
in
lret
cmp
pop
pop
adc
mov
jae
adc
stc
addr16
rcrl
cmp
notb
mov
std
jp
rcrl
sbb
jae
sbb
push
push
rcll
cli
push
xor
push
dec
sbb
jbe
pop
pushl
xor
cltd
ret
test
add
data16
movsb
jne
adc
arpl
hlt
jbe
cli
dec
push
in
int3
nop
dec
jl
shr
inc
das
adc
dec
jge
xchg
into
adc
jb
mov
push
pop
int
mov
call
mov
mov
pop
adc
pop
jnp
mov
fucomip
mov
pushf
push
jge
mov
add
mov
imul
out
clc
popf
ja
ret
aam
notb
add
loope
xlat
jnp
aam
lods
xor
aaa
mulb
mov
pushf
sub
loopne
loopne
push
add
and
pop
out
ficoml
aad
xor
xchg
or
aam
les
js
in
adc
lret
lcall
lret
xchg
repnz
repz
lock
hlt
enter
inc
fstps
dec
lods
bound
pushf
sbbb
push
lret
stos
cmpsb
pop
cld
cmpsb
fnstcw
mov
mov
daa
lahf
push
inc
test
xor
sbb
add
daa
rclb
fwait
in
pop
mov
push
test
inc
mov
add
in
sbbl
ja
scas
sti
pop
fbld
cwtl
or
add
sbb
into
xlat
jae
or
inc
cmp
enter
xchg
mov
stos
pop
xor
sbb
cmpsb
adc
xlat
movsl
arpl
mov
rcr
xchg
push
outsl
stos
xor
dec
cltd
sbb
sub
push
fidivl
mov
jno
test
mov
inc
pop
pop
repnz
hlt
loop
jne
mov
into
jle
dec
pop
inc
test
ret
loope
adc
ljmp
les
dec
bound
jae
adc
out
pop
jle
mov
ja
scas
jge
test
xor
pop
lret
or
sbb
movsl
sbb
sub
xor
lret
push
jns
mov
add
xchg
lahf
adc
sbb
test
push
cli
imul
std
loope
icebp
aas
mov
inc
cwtl
pop
inc
push
pop
out
push
movsb
fwait
jmp
mov
mov
jl
ss
scas
mov
jmp
call
jmp
loop
arpl
pop
pop
cmp
push
add
clc
out
mov
lret
popa
insl
pop
hlt
imul
add
int
add
cs
pushf
jmp
jnp
cmpsb
in
lcall
andb
test
shl
pop
fnstenv
mov
or
adc
adc
jbe
pop
daa
xchg
repnz
cmpsl
out
sahf
jne
outsl
adc
inc
adc
add
and
dec
adc
cmp
cmpsl
js
out
or
lcall
pop
jp
pop
cltd
loopne
mov
sub
adc
rcrb
adc
push
pop
xchg
inc
call
ret
dec
mov
lret
or
mov
xchg
inc
mov
xchg
adc
add
fidivs
or
stos
xchg
sahf
mov
mov
push
testl
outsb
shll
sti
and
sbb
movsl
jmp
dec
and
mov
sbb
lods
stc
in
lock
xchg
or
mov
cmp
ja
xchg
test
lcall
jnp
mov
scas
mov
xchg
jle
xchg
movsb
fs
mov
push
mov
inc
loope
or
or
xchg
lods
mov
pop
mov
mov
sbb
into
sub
mov
enter
enter
into
lret
movsl
rcl
jbe
int3
jl
insl
sbb
clc
or
jecxz
add
mov
jle
jo
lret
cmc
or
ja
push
or
jae
mov
lcall
cmp
mov
inc
fs
fs
int3
sub
mov
mov
les
xchg
xchg
pop
aaa
mov
jne
jb
loopne
cmp
xchg
fcoms
sub
adc
cmpb
mov
mov
in
xchg
push
push
jo
push
push
xchg
pop
fwait
sub
jmp
mov
push
jb
mov
orl
xchg
jns
mov
mov
mov
cltd
inc
mov
cs
loope
add
jno
inc
and
rcrb
mov
dec
clc
xor
jbe
imul
pop
xchg
adc
xchg
insb
call
dec
and
adc
xor
inc
pop
sub
dec
in
mov
test
call
xchg
push
xor
mov
insl
imul
scas
sub
movsb
lahf
enter
lret
dec
adc
sub
sbb
sbb
lcall
pop
jnp
js
xchg
dec
sbb
cmc
cwtl
cmp
scas
repnz
es
pop
lret
push
or
sub
aad
cmp
jle
stos
out
hlt
mov
sbb
mov
scas
sub
call
inc
dec
mov
into
leave
out
cmpsb
addr16
sub
and
adc
dec
mov
jae
bound
lcall
jne
aaa
scas
aad
pop
imul
jecxz
leave
fiaddl
sub
mov
loopne
pop
int3
push
cwtl
and
dec
push
ret
push
jbe
aas
push
xchg
cmp
xor
daa
add
fucomp
imul
and
arpl
stc
push
repz
aam
ja
loopne
push
fildl
inc
insb
lcall
daa
sub
mov
and
ds
cmc
push
inc
push
or
sub
or
jg
pop
repnz
mov
test
jecxz
push
fwait
scas
add
pop
mov
loope
nop
sbb
inc
fs
pop
sbb
ds
bnd
cmp
fcoml
pop
subl
mov
fisubrl
sarl
scas
lcall
jns
out
and
iret
lret
sbbl
push
jp
lcall
jle
pop
enter
not
fmuls
jb
inc
fildl
fdivl
fisubrs
adc
cmp
sub
pop
push
inc
rcrb
or
jns
lret
sub
jb
lahf
in
ljmp
aad
jecxz
aad
xchg
xor
mov
sbb
mov
mov
in
ja
mov
imul
xchg
or
lods
cmc
fldl
push
push
push
pop
outsl
xchg
or
xor
insl
sub
jmp
adc
push
fbstp
in
mov
test
dec
pop
lcall
popa
push
adc
sbb
dec
xor
std
das
cmp
sub
clc
lock
mov
inc
sbb
test
push
fnstsw
loopne
pop
cmp
pop
out
jecxz
dec
pop
adc
test
rorl
jle
lea
in
mov
jbe
data16
addr16
dec
addb
lahf
aaa
jno
mov
add
mov
inc
or
cmp
test
aam
pop
scas
dec
jl
push
je
data16
adc
ja
pop
or
dec
in
out
out
roll
iret
arpl
cmp
stc
xor
lcall
and
shl
jbe
rolb
loopne
div
out
inc
out
push
fbstp
xor
mov
push
leave
scas
or
mov
lods
xchg
adc
repnz
xchg
stos
in
aad
sarl
mov
xor
jmp
lcall
cwtl
adc
pop
cmpsb
xchg
shrl
cmp
jmp
imul
lret
mov
lea
inc
hlt
icebp
nop
pusha
int3
loop
mov
mov
repnz
sahf
cmp
es
std
mov
jno
mov
call
cli
dec
inc
dec
inc
jo
scas
lret
notl
pushf
xor
test
jns
dec
cwtl
outsl
pop
jle
jl
cmp
pusha
int3
addb
jno
sbb
dec
je
or
dec
inc
xchg
cmp
test
outsl
pop
push
xor
mov
add
pop
xor
test
adc
pop
and
pop
jnp
test
and
push
mov
pop
loopne
add
dec
lcall
push
pop
adc
sbb
aam
aam
add
or
push
mov
test
pop
sbb
dec
call
add
fisubs
jno
sub
push
out
adc
fiadds
push
adc
inc
cmp
mov
popf
mov
addb
les
push
mov
andl
and
roll
jge
adc
dec
fwait
jmp
add
cmpsb
rcrb
das
pop
mov
xor
in
and
and
push
inc
mov
call
mov
xchg
adc
add
add
ljmp
scas
sub
mov
lds
int3
sbb
leave
and
mov
into
push
popf
sbb
adc
mov
mov
and
jae
test
mov
stos
ret
sbb
jmp
xchg
in
popa
push
ret
cmp
leave
insl
sub
loopne
jg
adc
shr
dec
sbbl
popf
sbb
fiaddl
in
sbb
test
and
out
jge
dec
mov
loopne
adc
mov
jle
sbb
sbb
imul
mov
negb
fwait
or
cmp
in
loopne
cmp
lods
arpl
lods
sbb
jl
sbb
aad
imul
adc
js
sub
insl
call
sarb
insb
ret
mov
mov
pop
cmpsl
adc
add
ret
pop
ror
mov
dec
loop
lods
or
jge
ja
jae
add
push
ret
jge
mov
cmp
lds
mov
pop
sub
movsb
jo
pcmpeqd
fdiv
jae
lds
push
test
jmp
scas
es
xchg
out
dec
or
lods
mov
mov
or
stos
imulb
or
fwait
and
cmp
loopne
rcrb
sbb
dec
subl
mov
pop
stos
sbb
dec
and
orb
add
pusha
adc
sub
lcall
jo
xchg
pop
mov
sub
aam
sbb
cmp
xchg
test
sbb
adc
xor
jno
aaa
cs
sbb
movsb
mov
sbb
into
lret
and
movb
jo
inc
inc
sbb
jbe
cmp
cmpl
jbe
pop
daa
pop
fiadds
data16
repz
sbb
loope
aad
mov
jbe
loopne
aas
les
push
cmp
ss
jg
adc
inc
rcrb
imul
int3
loope
pusha
dec
cs
lcall
xchg
stc
lcall
mov
push
pop
stos
jne
clc
outsl
cmc
loope
stc
sysret
insl
test
jl
es
addr16
add
jns
mov
or
mov
jg
mov
cltd
or
mov
outsl
fnstsw
mov
cmp
scas
sarl
mov
cmp
cltd
or
idiv
cvtps2pi
aad
insb
testl
sbb
xlat
cmpsl
sub
out
push
mov
and
push
lea
xor
ret
xor
pop
cmp
mov
bound
jbe
mov
out
mov
or
jns
mov
and
pushl
test
add
jb
cmpsb
or
ret
mov
jno
xlat
push
dec
inc
mov
lea
pushf
xchg
and
xchg
cmpsb
pusha
mov
adc
cld
dec
fwait
cli
jmp
mov
rorl
xchg
xor
icebp
ljmp
and
dec
jns
cmc
fdivrs
lcall
push
fldl
insl
xor
sbb
add
fisubs
sub
or
dec
in
add
sub
mov
repnz
or
fcomps
stos
sub
push
out
outsl
cld
int3
mov
in
xor
sbb
int
sub
and
adc
mov
push
adc
xor
adc
xchg
push
and
in
mov
iret
inc
push
shr
sub
loope
cmpsl
lahf
jbe
mov
das
out
les
imul
mov
sbb
mov
enter
push
insb
sahf
and
gs
negl
add
xor
push
pop
jge
int
ljmp
push
lea
outsl
pshufw
xor
push
sub
push
mov
sbb
xor
jmp
xor
inc
pop
mov
jo
xlat
adc
icebp
jns
jle
add
adc
fwait
xor
dec
rcll
push
pusha
mov
inc
add
lret
dec
test
stos
inc
push
mov
pop
cmpb
sbbb
test
pop
aas
dec
and
pop
mov
jmp
add
jo
xor
mov
cmc
pop
inc
std
cmp
insl
fnstsw
jne
cli
lahf
push
xchg
fbstp
xchg
mov
mov
je
mov
test
nop
insb
adc
in
jne
push
cli
and
cmp
fisubs
js
xlat
xor
fidivl
gs
arpl
or
or
add
bnd
bound
cmp
out
cmp
fldl
jb
xchg
bswap
and
nop
mov
stc
push
cmpl
push
xchg
repz
and
test
cli
ja
jl
xor
mov
outsl
bound
adc
loopne
xor
pop
test
cmpsb
push
sahf
idivb
lods
sbb
lods
leave
mov
lods
dec
or
std
jg
jecxz
sub
movl
sub
or
xchg
ret
icebp
or
jle
cmp
mov
incl
loopne
call
dec
ret
insb
fcoms
or
addr16
cmp
pop
cmc
push
fnstcw
loop
jge
push
fdivs
inc
dec
adc
lods
xor
das
mov
or
cmpsl
lret
mov
andl
pop
shrb
or
push
push
rolb
xchg
xchg
shrl
pop
jnp
insl
dec
aas
push
fwait
inc
loop
ds
mov
nop
arpl
mov
mov
in
movsb
or
fs
cli
outsl
sbb
in
cmp
xchg
push
xor
test
js
in
xor
and
add
xchg
xlat
sub
pop
int3
adcl
mov
lods
js
stos
sub
ja
icebp
jae
aam
sbb
cmpl
xor
cs
sti
jle
sbb
ljmp
incl
adc
xchg
lcall
xchg
cs
jg
mov
jnp
sub
mov
adc
ret
jp
add
pop
out
jp
add
sbb
mov
hlt
sahf
mov
jge
jae
aam
xchg
jg
dec
sar
dec
fsubrl
mov
xor
test
stos
cmp
inc
je
es
xchg
mul
cmp
cmpsb
or
out
test
adc
dec
sarl
or
idivb
pop
stos
jo
mov
sbb
push
xchg
fldcw
ret
shrl
into
nop
bound
sub
notb
xor
sbb
fs
mov
movsb
into
xor
pop
fiaddl
icebp
rol
inc
pop
inc
pop
mov
cmp
test
sub
xchg
cmpsl
in
movsl
pop
aas
sub
pop
ds
mov
dec
imul
xchg
cmp
pop
int
popa
fwait
mov
and
sahf
pop
or
mov
xchg
imul
jbe
stos
pusha
cmp
sti
mov
icebp
lahf
jb
jp
sub
xchg
pop
out
mov
mov
cs
shrb
lds
push
jb
adc
sarl
add
in
mov
andl
cli
lcall
mov
stc
jmp
and
shll
xor
into
xchg
adc
test
dec
pushf
mov
daa
mov
jg
jge
inc
movsl
clc
sub
push
outsb
cltd
sbbl
or
test
faddl
mov
sbb
scas
movsl
push
mov
aaa
sahf
loopne
xor
lret
xchg
sbb
imul
mov
cmp
aas
push
movsl
jecxz
push
adc
sub
and
or
cmp
std
fdiv
push
sbb
pop
popf
xlat
push
and
and
lds
sbb
pop
push
psubb
cmpsb
xor
mov
imul
jae
int
or
push
sub
ret
sahf
aad
lret
pop
fsub
cmp
cld
jae
je
pop
push
mov
imul
push
and
ret
or
rcll
pop
xor
arpl
mov
imul
popl
ret
dec
mov
sbb
or
xchg
mov
mov
xchg
inc
cltd
or
and
jecxz
mov
or
es
ds
push
movsb
jl
pop
mov
mov
xchg
movsl
scas
dec
xchg
xor
pop
bound
lea
sub
pop
lret
or
pop
cltd
enter
jne
outsb
push
cmp
mov
test
mov
ret
xchg
mov
mov
and
mov
sbb
dec
cmpsl
scas
stos
pop
cmp
lret
mov
movsl
fistpl
mov
insl
jo
jbe
or
push
cmp
out
scas
ret
lods
jae
xchg
fs
rcrl
cwtl
clc
cmp
pop
fwait
aad
mov
and
cli
aas
sub
cwtl
jge
xorl
add
mov
xor
int3
mov
imul
mov
pop
lds
test
rol
jae
mov
mov
adc
jge
and
in
push
lahf
lods
adc
ror
add
adc
mov
rorb
inc
inc
jle
dec
dec
jp
push
pop
scas
addr16
mov
push
mov
jle
xchg
movsl
js
inc
mov
outsb
xchg
xchg
aad
pop
dec
test
xlat
dec
sub
sbb
pop
ljmp
sahf
dec
xchg
sbb
in
cmp
add
mov
jb
xchg
je
popf
add
dec
fwait
mov
dec
xchg
leave
fsubl
lods
or
jns
mov
mov
adc
aas
negb
inc
cltd
rcrl
fmull
jmp
aad
or
pop
inc
and
test
aaa
jg
inc
push
xchg
add
fwait
xchg
mov
idivb
xchg
arpl
rcrl
sub
iret
ret
pusha
dec
xchg
mov
and
mov
xlat
inc
xchg
rorl
inc
cmc
mov
dec
pop
dec
jl
mov
test
push
les
cmp
dec
fcompl
or
xchg
mov
imulb
fcomp
or
xchg
imul
or
ret
repz
ss
add
outsb
xor
pop
cmpsb
test
arpl
and
mov
mov
pop
sarl
ja
sbb
mov
call
and
sub
mov
inc
loope
addr16
pop
repnz
bound
and
sbb
adc
adc
icebp
pop
andb
in
xchg
inc
mov
leave
leave
std
or
jb
mov
mov
lods
pop
roll
out
call
pusha
cwtl
aas
inc
push
insb
js
adc
fdivl
int
popa
xor
xor
add
idivl
hlt
testl
xchg
push
loope
xchg
add
add
shlb
cmp
scas
aaa
xlat
orl
jne
decb
pop
ret
in
daa
pop
out
pop
pop
mov
subl
push
int
jb
xchg
jl
push
es
movsl
rclb
jo
out
test
or
mov
jle
mov
loop
hlt
rep
loop
jge
cmp
dec
decb
jae
fwait
inc
mov
xor
cs
xlat
inc
pop
fldt
jnp
int
daa
sub
inc
mov
mov
mov
or
adc
fcom
arpl
pop
loope
mov
mov
mov
rol
add
xor
lret
nop
mov
cmp
mov
cmp
or
ds
xor
enter
push
leave
leave
fnstcw
or
add
stos
jecxz
xor
iret
inc
xchg
repnz
les
ljmp
pop
dec
sbb
sub
int
mov
push
mov
xlat
add
sbb
jbe
dec
not
gs
mov
ljmp
jg
std
or
adc
mov
pop
pop
sub
push
xchg
rcll
cwtl
pop
adc
xchg
ds
mov
fsub
divb
and
adc
inc
rcrb
loope
xor
jb
adc
insb
push
inc
mov
push
outsl
mov
loop
sub
notl
daa
shlb
cmp
loop
cli
jmp
xor
aaa
adc
lcall
bound
xorl
sub
les
jbe
pushf
xor
dec
dec
jle
popa
mov
scas
addr16
pop
sarl
pop
pop
test
cmc
cmp
adc
mov
jo
push
adc
mov
xchg
insb
add
mov
das
cmpsb
clc
push
mov
or
pop
push
pop
addr16
lcall
cmp
jbe
inc
loope
cwtl
dec
shll
cmp
outsb
mov
xchg
gs
pop
mov
ss
or
push
adc
push
insl
negl
add
and
outsb
shlb
daa
push
insl
fistl
cli
xor
sub
xchg
lods
stos
insb
sub
adcb
pop
push
mov
jle,pt
or
syscall
fisubrs
xchg
fwait
xchg
pop
in
mov
mov
ja
es
inc
shll
cmp
leave
and
iret
mov
shrl
adc
push
insb
adc
ret
sub
insl
sub
xor
ja
decl
xchg
aam
arpl
arpl
loope
push
and
sar
loop
lea
inc
fs
mov
and
dec
faddl
mov
jns
pop
inc
adc
sbb
and
stc
out
fsubrl
scas
arpl
shlb
maxps
xchg
sbb
imul
xor
lock
sub
movsl
cwtl
jo
dec
add
mov
movsl
sar
jbe
dec
hlt
mov
aam
push
rclb
sarb
std
popl
push
xor
fisubs
xchg
push
jg
cmp
rcrb
pop
jl
pop
inc
in
pusha
push
movsb
lahf
fadd
andl
cmc
and
sbb
cmc
xchg
xor
sub
mov
into
pop
mov
in
loopne
push
scas
add
sbb
or
mov
push
xor
mov
and
ljmp
enter
loope
movsb
cmp
adc
ds
arpl
cli
movsb
std
sub
add
rorl
fwait
pop
sub
dec
add
pop
movsb
cmpsb
cmp
loopne
add
pop
sbb
dec
add
lahf
mov
pushaw
sahf
mov
xor
xchg
pop
js
or
shll
aam
xchg
jl
cmc
fs
shrb
cld
pop
push
mov
push
test
xchg
fst
daa
fwait
mov
mov
sbb
jb
pushf
and
lcall
cmp
in
addb
testl
out
or
jno
xchg
jne
pop
outsb
jnp
int3
out
and
notb
inc
push
xchg
push
sub
stos
cmc
cmpsl
ret
data16
mov
mov
sbb
dec
jnp
popa
inc
fwait
sub
xor
imul
dec
xor
push
cmp
add
or
dec
and
cmp
ror
cmc
and
cmp
dec
cmc
mov
xor
mov
pop
jb
push
jmp
repnz
push
inc
jo
push
sahf
int3
dec
jge
push
imul
jne
push
pop
stc
dec
jns
test
je
pop
test
push
test
mov
sub
hlt
mov
inc
leave
aas
or
nop
jmp
repnz
out
out
mov
test
gs
jno
das
pop
cmp
mov
mov
call
add
or
add
or
lods
jae
cs
pop
dec
cmp
pop
dec
jmp
adc
or
push
cmpsb
out
pop
int3
fsubl
lcall
push
insl
das
aaa
sub
dec
push
adc
aas
hlt
mov
stos
into
sbb
add
xchg
pop
mov
sar
out
out
cmp
mov
mov
pop
out
lret
aaa
stos
movsb
imul
pop
xchg
shr
xor
hlt
pop
mov
sbbb
jb
ljmp
mov
push
addb
fs
mov
das
xchg
fldenv
stos
enter
lret
repnz
sub
mov
push
dec
aad
pop
ss
cmpsl
in
push
fistpll
dec
pop
xchg
or
xchg
stos
mov
adc
orb
shll
leave
sbb
fistpll
push
jle
jge
repz
mov
cmpl
dec
divl
ljmp
lea
stos
popa
cmp
xchg
mov
enter
ja
ficoml
sar
in
xchg
mov
mov
lea
ljmp
dec
mov
aam
or
aad
in
sub
movsb
mov
loope
sbb
mov
xchg
aad
sub
adc
cld
cmp
in
xchg
mov
lcall
or
push
or
cli
pop
bound
sub
pushl
rcr
xchg
adc
into
out
jbe
sub
inc
loop
and
dec
icebp
fwait
push
flds
mov
sub
jmp
pop
dec
xor
std
fcompl
testb
lock
repz
sub
jecxz
adc
popa
lods
das
fs
shlb
test
and
sbb
shll
cmpsb
cmpsl
or
repz
fwait
std
and
mov
push
push
cmp
aas
xchg
mov
add
sub
sub
add
jae
ja
or
adc
push
ret
mov
or
inc
popa
jmp
cmpsl
rcrl
and
lods
xchg
cmp
sahf
push
je
pop
mov
mov
movsb
out
subb
in
lret
ja
mov
fs
arpl
sub
mov
ffree
adc
dec
jo
pushf
jnp
leave
fistps
inc
cmp
cmpl
outsb
rcll
ret
dec
mov
adc
js
lret
ds
push
lcall
or
shlb
or
jbe,pn
adc
jmp
jbe
pop
inc
mov
clc
int
int
adc
xor
sub
loopne
jge
pushw
and
icebp
insb
in
mov
data16
ror
xchg
xor
push
and
inc
add
or
aas
scas
imul
jno
sbb
in
inc
addps
insb
gs
and
insb
and
or
imul
adc
loope
movsl
leave
scas
mov
aam
fcoml
scas
inc
sub
adcb
dec
and
enter
sbb
cmp
or
cwtl
aas
fnsave
mov
xchg
jnp
xchg
sub
fdivrs
add
add
mov
and
dec
xor
inc
xor
cmpsl
in
lods
push
adc
test
out
es
jne
outsb
jmp
popa
jecxz
or
imul
scas
pop
rclb
ret
or
cmp
insb
mov
cs
mov
jnp
popw
lahf
popa
fisttpl
sub
movsl
lods
inc
sub
jmp
cld
push
ss
push
jns
xchg
mov
imul
dec
and
in
fcompl
cli
movsl
xchg
cli
mov
loop
mov
cld
dec
jae
loop
in
pushf
inc
cmpsl
je
sub
outsb
mov
iret
cmp
or
xchg
inc
pop
add
mov
mov
repz
add
mov
push
push
push
sti
lahf
loopne
xchg
es
daa
mov
cld
addr16
dec
loopne
xchg
jnp
mov
mov
mov
loop
mov
xorl
pop
outsl
dec
aam
jp
aam
fs
and
orb
mov
or
inc
mov
add
sbb
arpl
lds
int3
int
inc
ret
add
pop
add
mov
jge
xchg
fadds
and
push
das
fisubs
jg
movsb
mov
inc
lods
mov
outsb
lret
fistps
popf
push
adc
das
xchg
and
stos
mov
and
loopne
rcrl
sub
hlt
xor
inc
mov
daa
and
insl
push
xchg
pop
mov
imul
inc
and
mov
xor
icebp
mov
mov
outsl
pop
mov
or
pop
and
jge,pt
xchg
and
jp
jo
aam
inc
mov
mov
das
test
ret
pop
or
pop
push
jbe
mov
add
sub
push
add
mov
out
push
push
fisubrl
push
mov
sub
pop
sarl
rcr
push
mov
adc
pop
imul
jp
dec
sarl
ret
out
mov
cmp
inc
push
jns
sbb
lret
out
dec
sbb
ds
pop
leave
xor
or
mov
jle
jmp
pop
out
push
inc
sbb
ljmp
jg
push
dec
rol
scas
lcall
js
xchg
insb
roll
insl
sub
movsl
jae
pop
js
neg
or
rcr
cltd
sub
orb
cmp
inc
daa
jae
popa
push
sub
sbbb
popf
fs
push
add
mov
jle
adc
test
inc
popf
fnstcw
adcb
mov
add
jp
xchg
stc
add
xor
sub
mov
lock
or
movsb
int3
dec
gs
cmp
add
sub
shlb
mov
xchg
das
test
cmc
push
add
mov
je
pop
inc
push
jl
push
frstor
addr16
incb
out
xor
frstor
sub
sub
in
ljmp
fisubrl
aaa
stos
gs
dec
int
ljmp
clc
daa
shll
fisubrs
mov
sahf
sbb
cmp
sub
mov
push
ret
iret
pop
xor
mov
mov
int
insb
mov
mov
shlb
lods
mov
adc
je
lret
push
or
fisttpll
int
mov
pop
bound
adc
ret
icebp
jns
scas
ljmp
adc
pushf
jecxz
test
xchg
test
loope
mov
mov
rcr
cmpsl
xchg
xchg
xor
sub
lahf
jo
js
sbb
std
cmp
mov
sahf
add
movsl
cwtl
fistpl
cmc
push
or
repnz
xchg
lds
pop
dec
lock
dec
and
cmp
xor
dec
pop
dec
push
sub
lea
std
ds
scas
adc
push
mov
ja
call
imul
dec
andl
icebp
inc
sbb
lret
xchg
cmp
jne
cmp
dec
jecxz
addr16
mov
mov
mov
insl
push
pusha
or
cmp
sbb
nop
out
sarl
ficompl
sbbl
out
fildll
and
mov
call
pop
das
dec
mov
cmp
or
or
sub
jns
flds
push
pop
test
loope
mov
push
mov
xchg
mov
pop
idivl
outsb
mov
les
mov
pusha
leave
ljmp
cmp
lods
mov
std
icebp
out
int
dec
cld
cmpl
adc
movl
lea
pop
inc
lods
dec
dec
gs
repz
les
lea
jecxz
mov
ret
lea
pop
pop
push
gs
mov
pop
cmp
das
inc
xchg
lods
lret
sahf
loop
movsb
jns
xchg
fisttps
fistpll
or
cld
mov
data16
sti
cmp
mov
cmpsl
stos
pandn
mov
stos
out
mov
andb
decl
aas
sbb
lock
xor
mov
int3
and
lock
fwait
cld
sahf
dec
jp
aas
inc
call
sub
inc
hlt
inc
dec
test
and
stos
sbb
jne
cmp
cmc
icebp
rorb
pop
and
push
sub
ljmp
imul
sbb
or
xchg
mulb
sbb
mov
xor
fcom
popf
xchg
pop
mov
int3
jl
push
dec
dec
sub
mov
stos
mov
dec
pushf
pusha
push
dec
shlb
dec
lcall
adc
and
xor
aas
outsb
fsubl
into
test
jg
push
cmp
into
cwtl
jge
aas
arpl
jo
push
lret
jecxz
mov
inc
mov
xor
and
cmc
sub
data16
or
out
and
jae
int3
xor
adc
mov
jmp
daa
enter
adc
out
nop
fdivrs
aad
jne
dec
fcomi
iret
jo
ret
push
in
dec
cmp
pop
int3
daa
mov
orl
ficoml
cmpsb
inc
or
mov
sub
ficoms
inc
call
or
movsl
adc
pop
sub
cmovae
ret
idivl
xchg
movsb
push
filds
arpl
mov
inc
pop
dec
or
cmp
adc
sbb
cmc
or
les
push
ret
xchg
adc
dec
push
push
cld
xchg
dec
js
je
repnz
mov
xchg
pop
push
mov
xor
scas
pushf
sti
or
mov
repnz
lahf
pop
push
xchg
mov
insb
push
mov
aam
pop
jno
mov
ficompl
pop
or
xchg
enter
xor
xor
jecxz
adc
adc
out
jnp
frstor
les
das
pop
std
push
scas
shr
jle
sbb
xchg
mov
int
sub
xchg
push
mov
add
ljmp
sbb
mov
mov
subb
sub
pop
fstpl
cs
js
and
adc
stos
loop
iret
fsts
mov
fsubl
adc
push
stos
aas
xor
cmpsb
call
mov
and
push
movsb
aad
xor
mov
or
pop
and
in
lret
lcall
pop
xchg
adc
sbb
jp
push
xchg
add
cwtl
or
in
or
test
mov
movsb
test
jmp
lcall
cld
bound
pop
inc
or
imul
inc
movsb
xchg
test
lods
movsl
je
mov
xchg
cmp
cmp
mov
jecxz
es
and
call
add
dec
adc
das
addb
or
mov
cmp
icebp
pop
aad
push
sub
insl
dec
inc
mov
push
mov
iret
rolb
cmp
adc
mov
outsb
sbbb
adc
sub
jp
in
in
mov
jno
sub
int
stc
jmp
adc
sbb
rcrl
fildl
push
arpl
push
ret
inc
dec
and
fisttpl
sub
loop
comiss
pop
mov
in
push
or
stos
cmp
add
scas
ljmp
push
subl
jp
popl
push
out
cltd
imul
cmp
clc
sbb
or
imulb
sub
mov
jae
jg
sbb
cwtl
outsb
and
xchg
mull
mov
popa
push
int
cmc
and
mov
or
push
mov
rcrl
repz
js
mov
or
ljmp
popa
les
sti
arpl
loopne
mov
lods
bound
xor
fs
sti
enter
xor
scas
inc
lahf
fsubr
sbb
or
int
ds
and
pop
dec
add
lcall
adc
daa
cmpsb
push
xchg
in
fisubl
and
test
gs
inc
sbb
mov
mov
decl
sbb
cs
adc
mov
ss
and
in
jne
jmp
imull
adc
or
aad
movsb
cld
pop
and
mov
and
stc
add
divb
wbinvd
or
sub
or
loope
xchg
lcall
mov
and
cmc
add
sub
and
popf
lods
pop
xchg
xchg
add
loope
addr16
inc
out
sbb
test
push
ficoml
inc
stc
fdivrs
ss
push
add
jge
push
fldcw
lds
mov
xchg
sbbb
mov
mov
js
sbb
fcomp
in
out
xchg
jp
fnsave
imul
idivb
cmc
sub
mov
push
call
jno
inc
add
push
mov
lret
and
mov
mov
sub
ror
cmp
mov
popa
cmp
repz
or
jbe
adc
adc
fcmovu
mov
push
push
les
cmp
push
es
sub
dec
lock
mov
aam
imul
xor
lods
aam
lock
das
test
stos
sub
outsb
mov
fsubl
ljmp
ds
insb
inc
mov
inc
add
dec
sub
popa
pushf
inc
mov
aam
mov
fmuls
sub
dec
and
into
and
dec
hlt
aad
fdivrp
pop
and
pop
and
out
xor
jl
add
cmpsl
xorb
in
mov
and
outsl
cmpsb
aam
dec
xor
dec
sahf
push
sub
mov
ss
mov
shl
incl
pop
push
push
nop
push
in
imul
lods
rorb
cmpsl
popf
or
jno
add
fadd
aam
bnd
imul
and
fildll
push
dec
rclb
jle
nop
imul
dec
fs
sub
repz
sub
sbb
mov
or
les
ret
icebp
jecxz
rcrl
rolb
inc
sbb
inc
jmp
inc
push
and
ds
xchg
sbbb
pop
xchg
dec
cmp
std
and
push
imul
sub
jno
iret
aad
push
push
andl
adc
movl
inc
mov
add
mov
cmp
xor
mov
mov
scas
and
adc
jnp
sub
out
mov
push
addr16
lret
movsl
aam
and
xor
cmpsl
jne
push
out
add
push
enter
movsb
push
cmp
sbb
test
into
addl
ror
mov
gs
push
pop
test
test
sub
in
out
idivl
out
cld
call
popa
hlt
gs
mov
ss
scas
sub
pop
in
inc
add
inc
mov
xor
in
pop
scas
sub
and
push
int
mov
push
and
jg
xchg
mov
insl
pop
aas
mov
aam
out
push
clc
mov
or
mul
adc
or
xlat
ds
pusha
xchg
pop
jg
or
inc
xchg
adc
shlb
rcll
into
xchg
lcall
jns
mov
movsb
push
xlat
idivb
ja
xchg
mov
mov
mov
pop
inc
leave
adc
and
cmp
les
enter
sahf
mov
jge
lcall
fildl
push
repnz
fstpt
dec
mov
sbbl
sbb
inc
sti
es
mov
int
add
sbbl
int3
ja
call
lods
fadd
sbbb
fstl
push
sarb
bound
aad
push
repnz
scas
ficoml
xor
les
fdivrl
lret
sub
outsb
jp
cld
sbb
cmp
adc
into
mov
mov
mov
fidivs
cld
pextrw
inc
inc
mov
xor
pop
stos
out
leave
xchg
test
mov
xchg
ret
fs
cs
mov
mov
add
push
pop
das
jp
adc
or
sti
or
or
call
cltd
mov
clc
sbb
fiadds
or
ss
adc
test
xchg
dec
push
xor
lahf
mov
sub
arpl
jecxz
scas
mov
mov
inc
sbb
movsl
or
decl
and
in
xor
mov
pop
cmp
jne
js
add
sub
fdivl
or
push
imull
subb
out
call
out
or
add
mov
adc
fistpll
ss
add
jae
xor
loop
pop
mov
lea
shll
repnz
repz
loope
mov
sti
mov
das
xorl
inc
sub
adcb
outsl
jb
cmc
pop
jg
repnz
mov
adc
pop
shrl
mov
add
cs
jecxz
arpl
je
and
pop
xor
push
out
leave
lock
dec
xor
jno
mov
arpl
sub
shrb
test
mov
dec
push
xor
dec
call
aam
out
pop
adc
in
nop
clc
add
in
psadbw
divb
stos
imul
enter
addr16
xor
xchg
inc
mov
inc
sub
add
aam
adc
ud2
pop
pop
negl
decl
dec
push
es
jno
or
loop
mov
loop
jp
popa
ljmp
xchg
mov
dec
sub
lahf
ds
loop
mov
pop
adc
and
xor
int3
pop
jae
test
mov
fldenv
adc
or
lock
dec
cmp
pop
pop
sub
add
and
call
xlat
fistps
cltd
pop
and
push
pop
mov
cmp
mov
dec
or
sbb
pop
xchg
cltd
jge
mov
stos
rorl
sbb
xchg
push
ret
jg
push
jae
xor
divl
outsb
mov
lea
inc
push
push
adc
cmp
aad
jae
test
or
mov
sub
pop
insl
incl
cmp
adc
push
mov
sbb
jecxz
adc
jne
push
lds
lea
stc
inc
xor
cld
xchg
sahf
adc
ja
lcall
pop
pop
inc
aaa
and
repnz
mov
fbld
xor
aam
mov
ja
ds
movsl
roll
stos
jge
mov
orl
pop
mov
ds
adc
sub
mov
iret
sub
dec
mov
jne
pop
cmp
sbb
test
aad
loopne
mov
mov
dec
rorb
mov
and
in
test
imulb
addr16
mov
jecxz
adc
mov
data16
jns
movsb
sbb
test
loop
mov
scas
xchg
pop
cwtl
out
xchg
movsl
add
mov
dec
mov
ja
in
add
dec
jne
or
cmp
aaa
or
ss
arpl
mov
inc
sbb
jbe
fldt
add
pop
xchg
cltd
cld
jle
imul
sbb
sbb
scas
cs
cmpsb
sbb
adc
push
movsb
add
mov
adc
push
adc
xchg
sahf
ja
jbe
pushf
mov
mov
addr16
cmp
std
mov
js
cmpsb
cmp
add
iret
jno
jle
mov
cmp
jle
js
dec
ret
xor
int
in
ret
mov
loop
mov
data16
in
dec
aaa
rcrb
fdivs
sub
and
mov
and
movsb
add
jmp
sahf
ret
das
pop
ud1
dec
lds
mov
and
js
cmp
test
add
pop
jge
popa
push
je
xor
mov
arpl
cli
les
pop
lahf
inc
outsl
push
fimuls
ja
jns
std
notl
sti
sahf
and
pop
sub
into
dec
call
or
js
scas
xor
stc
in
xor
add
or
lret
jle
push
jnp
fs
out
add
mov
inc
push
xchg
imul
and
aam
movsl
xor
push
scas
xor
xor
jno
xchg
mov
pop
iret
pop
cmp
fnstcw
xchg
push
push
nop
jb
pop
jmp
cmpsb
dec
jg
jo
mov
or
sbb
adc
mov
das
push
dec
jbe
sbb
lds
push
gs
or
or
insb
fwait
repnz
mov
fwait
xchg
mov
cwtl
popl
pop
into
loopne
lret
cmpb
test
imul
outsl
popf
lret
shrb
rcrb
mov
and
mov
jne
xor
jge
push
pusha
nop
or
cmc
xchg
fistl
stc
jns
ror
xchg
stos
push
test
lret
or
movsb
dec
aam
jae
in
dec
sub
push
mov
sbb
aas
or
adc
inc
push
push
push
outsb
lods
xchg
xor
cmc
adc
xchg
xchg
test
sti
sbb
jge
enter
mov
rolb
stos
shll
mov
sahf
mov
mov
ds
xor
push
ds
push
fidivrs
mov
daa
xor
add
jns
fwait
dec
mov
push
lds
mov
lock
pmaxsw
lcall
inc
cmp
in
call
data16
inc
add
insb
sbb
clc
out
mov
outsb
adc
sbb
repnz
pop
out
jmp
xor
cmpsl
cmp
pop
cwtl
ds
sbb
xorb
inc
mov
jnp
stc
xchg
jbe
mov
insl
adc
jg
push
cmpsl
or
mov
repnz
rolb
movsb
add
daa
cmpl
cmpsl
mov
fstpt
ja
xor
aaa
mov
inc
jb
mov
sub
test
xor
dec
jp
scas
add
push
pop
and
fisubrl
fsubrs
andb
ss
loope
aad
push
sbb
ljmp
lret
add
push
mov
daa
push
subb
xchg
daa
adc
repz
jo
pextrw
sub
xor
leave
in
mov
push
in
stos
xchg
lds
jmp
jbe
sbb
fs
adc
jbe
xorl
push
jae
mov
mov
and
add
dec
xchg
inc
clc
stc
test
enter
icebp
push
fwait
stc
fisubrl
push
sti
addl
adc
xchg
xor
into
xorl
xchg
pop
pop
dec
cmp
hlt
std
clc
dec
cmpsb
mov
out
outsl
in
dec
ljmp
dec
loopne
xchg
testb
xor
adc
sub
ret
stc
push
clc
mov
xchg
and
xor
sub
call
jno
mov
std
icebp
xchg
dec
popa
push
cli
inc
ds
adc
mov
rclb
or
mov
pop
stc
jnp
icebp
mov
loope
bound
mov
jmp
adc
popl
cmp
xor
inc
push
int3
sub
scas
ja
mov
adc
mov
xchg
mov
push
int
adc
pop
icebp
into
sbb
ret
js,pt
push
add
sbb
cmp
dec
mov
mov
xchg
call
sub
stos
jb
jae
mov
into
inc
dec
jnp
das
call
xchg
fwait
aas
aam
aam
add
mov
mov
inc
repnz
xor
sti
es
mov
push
jne
test
cmpsb
pop
lcallw
mulb
lea
ss
movsb
pop
mov
sub
and
shl
mov
out
xchg
sahf
inc
mov
dec
mov
push
pushf
or
js
int3
or
fstps
fistpl
out
pop
pop
cmp
lea
andl
sbb
cli
inc
dec
mov
insl
or
popf
xchg
negl
xchg
push
stos
add
enter
xor
aam
push
cltd
pop
imul
subl
in
icebp
scas
xor
lea
das
call
xchg
inc
sbb
fs
cmp
dec
imul
scas
cmp
lock
cli
addr16
mov
call
xchg
mov
lea
jmp
xchg
sarb
repnz
outsl
data16
adc
sbb
mov
lret
loop
stos
cwtl
lea
ja
mov
inc
sahf
dec
mov
mov
cmp
lcall
cmpsb
leave
pop
ficoms
or
movsl
jge
lcall
or
push
popa
dec
cmpl
jecxz
mov
pop
and
dec
mov
cmpsl
lods
jge
loopne
aaa
imul
sub
add
push
xchg
hlt
jl
rcll
hlt
jne
push
cmc
push
imul
cli
xor
jbe,pt
stc
fsubrs
arpl
dec
gs
mov
cmp
test
fisttpl
pop
adc
xlat
inc
lods
sbb
cmp
sub
outsl
cmp
add
or
lret
push
mov
repz
out
ljmp
jae
push
xchg
fisubs
cli
dec
mov
movsb
cmp
push
xchg
push
cli
cmp
xor
insl
mov
and
push
outsb
push
jmp
lret
dec
add
pop
leave
outsl
popf
mov
pop
cmp
dec
sub
and
xchg
inc
jns
mov
jno
mov
popa
aaa
stc
sbb
cmp
in
cli
decl
ss
test
mov
adc
out
in
adcl
or
mov
fstpl
fsub
jb
adcb
and
inc
jb
push
adc
lods
or
movsl
mov
rorl
dec
mov
es
xor
cwtl
inc
xor
test
in
clc
jns
in
fistps
pop
arpl
data16
cmpsl
adcb
push
push
shlb
inc
dec
sub
bound
outsl
cwtl
cmp
xchg
movsl
scas
test
dec
push
xor
sbb
insl
out
cmp
js
in
movsb
ja
lret
jb
inc
sbb
in
dec
mov
cmp
push
dec
ret
cmp
dec
xchg
rcll
or
lret
mov
mov
aaa
addr16
divl
outsl
fstl
loopne
loopne
pop
sbb
push
mov
fcompl
mov
mov
neg
dec
icebp
icebp
jle
test
jg
jns
jecxz
sbb
test
jp
popf
mov
or
jns
notl
lds
cmp
push
xor
mov
sbb
push
add
fadd
test
push
test
push
mov
xchg
pop
sbb
mov
cmp
leave
divb
jmp
cli
jae
xchg
jmp
out
shlb
xchg
daa
nop
mov
pop
jmp
icebp
and
ja
mov
xor
push
push
test
stos
jmp
mov
and
idivb
jmp
rol
jo
pop
and
aam
xor
inc
sub
in
and
fidivs
inc
enter
sub
movsl
mov
xor
leave
negl
orb
cltd
add
aam
xor
lretw
ficomps
sarb
fdivs
mov
fists
cmp
mov
mov
pop
pusha
sub
and
mov
jle
jmp
jnp
mov
pop
into
je
das
sbb
xor
movsl
mov
jae
in
mov
or
imul
nop
les
hlt
mov
orb
iret
xor
xor
mov
and
push
scas
rol
inc
mov
repnz
mov
pusha
jp
ss
push
test
loopne
mov
leave
sbb
shlb
and
sub
sub
js
fsubrs
outsl
jne
xchg
rep
rcr
dec
jmp
les
stos
mov
aad
mov
pop
sub
pusha
ret
xlat
or
dec
shl
fisttpl
test
call
insb
lds
mov
cwtl
mov
inc
les
cmp
fistps
or
mov
adcb
sbb
jge
ret
pop
mov
mov
and
pop
out
cwtl
inc
psubd
or
repnz
stc
add
popf
jle
pop
js
mov
mov
xchg
dec
sub
aad
jne
popa
loope
xor
push
mov
mov
push
add
mov
shlb
ret
add
pop
xor
mov
pop
jmp
mov
addb
leave
add
adc
fisttps
jmp
pop
mov
fcom
repz
cmpsb
jge
adc
push
sti
xor
pop
stos
in
adc
dec
fsubrs
mov
add
clc
lret
sub
imul
add
push
lods
inc
nop
rcrb
pop
dec
movl
dec
dec
mov
call
insb
push
addl
ror
xlat
aam
out
dec
push
xchg
int
or
negb
pop
and
push
push
in
leave
rcrl
int3
outsb
pushf
jns
xchg
rolb
sahf
in
inc
mov
fnsave
mov
and
ret
lret
cs
data16
out
dec
leave
nop
aam
pop
cld
lock
inc
out
ja
lock
shlb
adc
aam
xchg
adc
loopne
pop
xchg
jmp
xor
add
loopne
mov
push
adc
sbb
insl
push
fisttpll
repnz
pushl
sbb
leave
adc
sti
or
cmp
pop
add
adc
push
dec
in
js
and
aam
aaa
cs
std
sbb
movsb
add
int
rcrb
and
inc
repz
insl
js
cli
pop
clc
cmp
addl
push
sub
pop
insl
sti
int
adc
mov
cmp
lcall
pusha
inc
add
mov
or
js
sbb
mov
stc
ja
mov
xor
loop
push
pop
mov
and
mov
and
cmc
cmp
fisttpll
enter
or
push
jno
std
inc
mov
dec
push
into
fs
not
test
add
push
sub
jae
dec
mov
out
push
push
stos
pop
jo
adc
ror
mov
inc
pop
mov
pushf
hlt
test
das
sub
cmpsl
pusha
scas
popl
jae
mov
movsb
mov
xor
leave
imul
pop
mov
xchg
dec
or
adc
or
mov
out
push
jbe
inc
push
push
rcl
pop
xchg
test
lods
and
adc
out
push
cmpsb
pop
xor
js
addr16
pop
xchg
push
mov
popa
je
ja
xor
push
repnz
push
shrb
lock
daa
arpl
or
and
sub
icebp
cwtl
push
aam
adc
mov
mov
mov
mov
div
mov
pop
sbb
orb
aaa
xchg
ret
jp
clc
ret
cmpb
in
mov
dec
lods
scas
jmp
repz
dec
movsb
cmp
jb
inc
lock
jnp
dec
jbe
or
pop
scas
cmc
pop
imul
aam
shll
push
inc
outsl
imul
inc
xchg
push
movsl
xchg
cmp
push
push
add
and
pop
pop
dec
inc
test
cmp
std
out
int
mov
and
add
xchg
ret
stos
jo
orb
lods
dec
xor
fstps
xor
fmuls
loope
sub
pop
loopne
insb
dec
mov
push
ja
hlt
mov
loopne
sbb
call
aam
cmc
mov
jbe
dec
sbb
andl
ja
add
sbb
aaa
add
sub
sbb
push
iret
fidivrl
cmpsb
dec
jae
xor
sub
andb
movsl
pop
cmp
push
or
insb
clc
in
andb
pop
sub
xor
and
pop
mov
xchg
aam
or
addb
scas
sbb
xchg
stos
mov
xchg
es
sbb
jbe
loop
and
ret
mov
mov
sbb
out
sbb
out
add
or
dec
adc
je
inc
and
mov
outsb
clc
mov
pop
or
jle
fstl
leave
mov
pop
leave
cli
insl
ja
jmp
fisttps
xchg
sbb
push
jg
cmp
fldt
jae
and
lcall
mov
or
pop
out
loopne
mov
js
inc
mov
adc
dec
sbb
imul
ja
je
mov
stos
fsubr
pop
fldcw
test
popa
pop
fptan
adc
mov
movsl
imul
inc
stos
dec
mov
mov
xchg
mov
ds
xchg
xchg
add
fbstp
cmp
mov
pop
sbb
loop
imulb
shlb
pusha
shlb
pop
mov
pop
lret
lcall
xchg
sbb
or
int
pop
mov
add
in
xchg
dec
rcrl
imul
inc
aas
dec
add
insl
int
jl
jg
scas
les
jno
cmc
js
stc
pop
std
xchg
cmpsl
mov
inc
mov
and
orl
scas
enter
adc
mov
jmp
arpl
std
fcmovu
mov
mov
adc
adc
sahf
imul
xor
push
inc
xchg
adc
fsubl
lea
xchg
outsb
icebp
pop
scas
mov
mov
and
es
pushl
mull
outsb
fisttps
outsl
mov
adc
lods
push
es
jno
scas
inc
das
xor
pop
test
out
ss
iret
dec
int3
push
sub
mov
cli
jno
cmc
pop
dec
test
mov
jecxz
hlt
insl
int
insl
ljmp
sub
mov
sub
loop
sbb
fmuls
mov
cmp
push
adc
xlat
push
fdivs
sti
jge
loop
loop
and
jl
mov
inc
adc
xchg
cli
aam
adc
aas
lcall
fwait
lods
cld
pop
xchg
subl
xor
out
ljmp
cli
in
pop
cmp
loope
stos
or
addr16
movsl
lret
or
cmp
mov
ljmp
and
test
outsl
cmpsl
fidivrs
xchg
jbe
dec
jmp
rorb
mov
dec
jl
out
xchg
add
fimull
outsl
pop
in
sbb
lock
imul
into
adc
fiadds
scas
testl
mov
imul
cmp
mov
push
inc
insl
fldt
sub
dec
cmpl
xor
aad
sub
cmovle
mov
mov
jecxz
sbb
adc
xor
js
pop
popf
in
outsb
xchg
daa
fldenv
lret
xlat
gs
mov
jnp
mov
in
push
stos
bnd
iret
and
sbbl
std
cmpsl
dec
subl
popa
jns
inc
fcmovnb
cwtl
aad
or
adc
int
je
cltd
jb
and
jmp
or
mov
stos
loop
pop
sti
mov
mov
jbe
xor
jmp
popa
jge
mov
and
xchg
dec
jo
sbbl
or
xor
and
cmp
xor
bound
pop
not
mov
out
in
mov
push
mov
push
xor
inc
or
into
dec
fldt
mov
add
in
cli
ret
mov
aaa
adc
cmc
pop
nop
out
stc
sbbb
inc
pop
aam
push
cmp
enter
pushf
and
dec
add
cli
xor
dec
push
adc
das
inc
adcb
pop
rcrb
test
movsl
fidivrl
inc
sub
jmp
and
jb
cmp
and
insl
xor
push
inc
add
or
sarl
stos
stc
mov
push
in
stos
in
nop
adc
lods
push
pop
jge
mov
push
push
push
mov
push
movsl
leave
fdivs
dec
les
js
daa
and
imul
testb
pop
cmp
ja
loop
fisttps
lds
repz
xchg
sbb
std
test
aas
cs
push
add
popa
cmp
test
or
test
test
mull
sub
test
outsl
dec
pop
jmp
push
xchg
sarb
shrl
sub
cmp
dec
nop
jg
lret
cmp
mov
inc
jne
les
push
cmp
movsw
in
mov
nop
js
cmpsb
sahf
xor
ficoml
int
mov
add
jge
jp
scas
xor
lret
test
shrb
mov
jecxz
push
mov
jp
jle
into
cs
jge
repnz
mov
fmuls
cli
add
enter
mov
jp
outsb
mov
in
mov
arpl
jns
cmpsb
mov
add
and
adc
scas
jno
out
sahf
shl
aaa
fcoms
jns
jmp
add
cli
jne
push
mov
lea
dec
and
mov
stos
hlt
mov
pushw
jp
and
mov
test
inc
cwtl
repz
test
repz
mov
imull
call
sti
mov
dec
mov
fistl
and
jle
icebp
js
jo
xor
bound
jmp
pusha
iret
mov
sub
jns
dec
mov
movsb
sbb
jle
sbb
add
mov
inc
arpl
imul
pop
xchg
push
mov
scas
or
ss
mov
jo
mov
push
je
insb
add
fidivl
cli
jecxz
sub
into
leave
lock
pop
fimull
adc
pop
insl
aad
and
inc
cmpsb
mov
xor
shll
bound
dec
push
pusha
mov
push
enter
inc
lcall
cmp
or
fcmovnb
dec
js
call
pop
mov
push
fistpll
adc
negb
aas
sbb
inc
scas
and
fcoms
movsl
mov
mov
or
test
push
pushf
aad
dec
jle
cltd
call
scas
in
daa
sbb
add
cmpsl
daa
pop
xchg
inc
dec
sbb
xor
movsl
addr16
arpl
addb
loopne
daa
inc
jg
mov
repnz
cmpsl
testl
mov
in
jmp
out
lods
cld
icebp
push
icebp
mov
pand
cmp
leave
sub
xor
mov
mov
sub
pop
leave
fstl
dec
mov
lock
push
mov
icebp
inc
pop
iret
jb
xor
xor
xor
adc
movsb
inc
lcall
das
mov
push
jl
shl
aas
test
add
loop
test
push
sahf
jl
pop
dec
dec
cwtl
neg
pop
pop
sub
insl
mov
pop
sbb
out
jge
inc
lcall
imul
inc
popa
mov
js
fs
call
mov
sti
jmp
mov
cwtl
and
xor
cmpsl
push
jo
mov
ret
xlat
push
push
clc
dec
bound
mov
xor
or
mov
out
or
cwtl
inc
push
fcoml
dec
jp
dec
pop
faddl
xchg
pusha
call
loopne
push
out
sub
scas
js
or
pop
insb
jnp
cmpl
xor
orl
xchg
lock
scas
cmc
push
mov
into
dec
inc
fnstsw
idivl
pop
mov
push
add
add
les
pop
les
pop
cmc
adc
jb
clc
pop
gs
push
icebp
loop
jo
movsb
call
sub
mov
int
sti
enter
mov
jg
jecxz
je
sti
push
fsubs
push
push
cld
fisttpll
out
fstps
lret
lret
subl
jno
ja
clc
andb
jno
lahf
out
jno
xlat
sbb
pusha
sbb
inc
sub
mov
adc
mov
dec
inc
pop
sub
lods
das
out
cmp
push
pop
jg
ljmp
push
or
adc
or
sub
mov
dec
dec
mov
popa
into
rolb
ss
sbb
xor
dec
push
lock
sbb
test
fdiv
mulb
or
mov
je
dec
sbb
sub
xchg
mov
adc
cmc
in
outsl
mov
mov
inc
dec
sub
sub
jne
jo
dec
outsb
push
repz
fnstsw
fadds
or
cltd
push
mov
outsl
and
pop
movsl
lock
roll
aam
or
lahf
lods
mov
mov
in
push
sub
lods
push
jecxz
jnp
mov
int
add
add
dec
fstl
cmp
jg
fdivp
cmpsb
popf
sub
mov
aad
out
push
adc
outsb
lods
or
mov
jnp
push
shrb
xor
inc
dec
stc
adcb
in
xor
xor
mov
jle
xorb
mov
ret
jp
repnz
mov
sbb
ds
sub
mov
dec
inc
mov
mov
push
xchg
inc
push
arpl
or
mov
clc
xor
movsl
into
xchg
lea
xor
pop
jbe
fsubrs
pop
cmpsl
pop
fs
jecxz
test
roll
xchg
mov
fwait
add
sbb
inc
or
notl
pop
mov
mov
xchg
lahf
pop
mov
aaa
adc
fnstsw
aaa
into
aaa
arpl
push
test
out
xorb
arpl
cmp
mov
ret
fisubrl
ret
mov
mov
cli
fsubs
mov
bnd
xor
test
in
pop
add
ficompl
sbb
and
and
rorl
lock
inc
push
int3
in
mov
out
test
in
mov
xchg
mov
adc
fildl
xor
addl
lcall
jp
stc
sbb
mov
xor
cmpsb
cwtl
sbb
xchg
and
and
inc
push
jne
sbb
enter
push
fadds
outsl
pop
std
hlt
stc
pop
xor
dec
rclb
sbb
pushf
insl
push
jl
in
nop
jecxz
mov
pop
mov
fdivrs
push
sbb
lds
stos
dec
jl
add
nop
jl
inc
stos
mov
sbb
mov
repz
divl
nop
adc
dec
testl
pop
shrl
push
ljmp
shl
out
scas
popf
outsb
iret
subl
fadds
jns
in
or
repz
mov
test
int
test
jl
fisubs
pop
lret
fwait
dec
or
lahf
xor
inc
pusha
inc
add
inc
popa
and
push
sbb
pop
mov
jecxz
xor
dec
outsb
xor
pop
enter
mov
mov
cmp
out
test
movsl
inc
out
push
jp
xor
je
and
mov
cmc
xchg
lret
pop
ret
mov
gs
ljmp
sbb
lods
mov
mov
jg
cmovbe
mov
loope
xchg
shlb
push
and
lret
inc
test
pusha
inc
add
bound
push
std
sti
test
cmp
in
push
dec
jmp
cmp
mov
aaa
cmp
xchg
cli
into
jg
test
outsb
fwait
out
mov
or
clc
xchg
lea
jno
mov
cld
cmpsl
pop
cmp
imull
inc
imul
jns
fadds
push
mov
mov
dec
push
pop
dec
and
mov
mov
filds
sub
mov
add
in
and
sub
out
les
xlat
sbb
fcomps
lods
scas
fidivrl
xchg
or
lret
inc
dec
call
and
lcall
repnz
sub
mov
rorl
mov
xchg
push
inc
mov
mov
lods
sarl
inc
push
dec
shll
mov
jp
popf
pop
dec
jge
xor
xchg
jns
incl
test
jbe
sbb
fmuls
sub
sahf
jno
sub
mov
cmc
je
es
int
daa
dec
ss
jae
mov
xchg
mov
jecxz
popa
mov
inc
fdivl
push
push
dec
loop
icebp
movsb
sub
cmp
mov
mov
xchg
push
push
xchg
stos
in
mov
icebp
inc
pop
imul
int3
push
pop
sub
push
sbbl
test
insl
dec
icebp
enter
sub
popf
dec
fbld
or
mov
push
pop
sbb
push
stc
lods
xchg
cmp
and
add
scas
and
jl
adc
gs
in
xchg
rorb
xor
test
in
jae
test
test
addl
stos
int
add
mov
das
xor
in
push
insb
js
and
inc
mov
lods
je
push
adc
xor
dec
xchg
dec
xchg
push
cmpsl
aam
mov
lret
ficomps
xchg
fst
xor
iret
sbb
mov
adc
hlt
add
mov
jmp
imull
mov
sbb
lods
fnstsw
xchg
imul
cld
xor
js
pop
pop
adc
sub
push
sti
or
mov
inc
push
xor
cmp
leave
gs
xchg
addr16
aaa
fadd
pop
and
jge
gs
add
push
aaa
addr16
ljmp
jle
cltd
nop
bound
cmp
imul
nop
xchg
insl
adc
inc
sbb
cld
cmp
ljmp
int3
inc
push
ljmp
mov
sub
jb
scas
lcall
loopne
addr16
sbb
ret
mov
cmp
or
arpl
or
punpckhbw
xor
mov
xor
lret
out
inc
sarl
fsubs
aas
std
pop
testl
ja
faddp
cmpsl
pushf
das
cs
sbb
xchg
ljmp
push
movsb
in
pop
popf
arpl
xor
xchg
mov
je
pop
movsl
insl
hlt
mov
pushf
cmp
mov
int
jnp
or
xchg
mov
ret
jp
sub
loope
add
sbb
or
fucomip
sub
push
cld
popf
loop
test
enter
jae
insl
clc
sub
jg
cmp
mov
aas
xchg
hlt
xchg
xchg
cmp
fdivrl
xor
pushf
cmpsb
cmp
insb
sub
leave
push
in
cld
cmc
fsubs
imulb
xor
or
loopne
fs
jmp
push
jns
dec
inc
sarl
mov
clc
adc
push
inc
in
mov
jae
jecxz
lahf
mov
fimull
push
xor
pop
jecxz
xor
xchg
aaa
icebp
inc
pop
sub
test
sbb
xchg
ljmp
mov
out
daa
clc
and
pop
pop
out
push
lahf
sbb
lds
neg
jl
adc
gs
sub
or
jb
jae
insl
pop
popa
sbb
sbb
imul
dec
pusha
pop
pop
call
xor
and
std
jo
lret
mov
ja
mov
pop
std
in
leave
dec
aaa
sbb
aad
mov
outsb
mov
cmp
lret
push
les
sub
lcall
pop
xchg
outsl
clc
push
mov
pop
out
cmp
mov
pop
sub
sbb
pop
sbb
push
test
aam
sub
mov
in
pop
icebp
push
push
pop
jg
sbb
lods
mov
lds
imul
xchg
push
cmpsb
mov
jmp
xchg
jno
pop
add
sub
mov
or
fistps
add
jle
xor
sub
or
in
and
ja
cltd
jecxz
aad
das
push
push
push
stos
ljmp
sub
cmovle
bound
or
pop
cmp
in
or
vmread
push
in
jne
jle
rcll
divb
in
or
int
loop
mov
mov
pushf
and
out
and
xor
std
push
lea
subb
mov
hlt
pop
and
sbb
mov
lods
iret
push
in
aam
dec
das
jb
sub
movsl
sbb
pop
xor
inc
fisubrl
mov
jp
popa
pusha
mov
mov
sub
clc
daa
js
push
or
inc
in
loope
fs
out
jae
js
inc
xor
lret
mov
push
dec
sub
mov
inc
and
mov
xchg
push
scas
lret
mov
cld
mov
gs
jge
gs
iret
push
addr16
lahf
jle
jno
ret
pop
inc
les
sbb
lea
movsl
flds
push
adc
scas
cmpsl
xor
pop
mov
jb
xchg
fisubl
cs
xor
mov
cwtl
lret
test
leave
inc
and
pop
and
arpl
loop
dec
dec
sar
test
dec
adc
xor
mov
cmp
add
movsb
aad
cmp
jmp
and
cs
js
sarb
loopne
push
dec
enter
jae,pn
xor
in
out
lods
xor
mov
sub
rolb
cmpsl
arpl
jns
cwtl
inc
mov
scas
pusha
adcb
arpl
dec
fnstcw
mov
repz
mov
xor
sbb
mov
xor
out
inc
jns
subb
jo
test
mov
pop
adc
mov
add
sub
push
int
push
mov
jg
mov
mov
sub
lcall
and
jbe
xchg
jns
mov
mov
xchg
add
popf
xor
imul
jno
push
jp
xchg
or
push
mov
adc
out
sub
or
mov
leave
inc
sub
call
xor
leave
adc
lret
or
push
xlat
or
in
notb
jecxz
in
sbb
sub
jg
jg
cld
ljmp
lds
icebp
mov
dec
push
divb
mov
popf
hlt
mov
add
inc
jmp
js
mov
cmp
inc
ljmp
hlt
js
je
jb
xorb
cli
dec
add
je
out
ficompl
mov
inc
sahf
outsl
dec
cltd
dec
xor
jge
loop
cmp
cmp
add
add
in
push
xchg
xor
js
cmp
cmpsb
sbb
lds
sub
fs
add
sub
or
fsts
xchg
ret
xchg
mov
test
mov
dec
mov
clc
out
and
push
sub
pop
jne
scas
call
dec
sbb
int
insl
add
insl
or
sbb
dec
mov
out
adc
pop
jl
inc
rcr
call
sti
pop
ss
leave
adc
shrb
ret
lret
push
out
hlt
insl
cltd
pop
xor
inc
dec
gs
xchg
scas
cmpl
mov
push
scas
ret
fisubrl
ret
jnp
push
sub
aad
mov
decb
cmpsb
inc
orl
out
sbb
cmpsb
cs
mov
pop
jne
xchg
adc
mov
add
fsubrl
iret
xchg
pushf
std
mov
push
in
push
jge
xor
xchg
jo
in
fdiv
cwtl
jp
jbe
fbstp
pop
pusha
cmpsb
mov
gs
push
mov
mov
in
xchg
shlb
movsb
push
divl
stos
cmpsl
add
jae
cmp
cmp
test
mov
mov
js
mov
dec
loope
pop
loope
movsl
sbb
dec
xor
and
shlb
mov
cmp
sahf
push
push
pusha
rcr
pushf
mov
enter
fldl
push
stc
mov
push
rolb
and
fistpl
xchg
ja
mov
xchg
dec
sub
sub
push
jge
shrb
ret
add
and
out
and
outsl
or
adcb
fistps
mov
shlb
xor
fcompl
jnp
xchg
lcall
nop
sbb
insb
sub
dec
jmp
fistps
mov
std
nop
add
sbb
sarb
test
aad
or
jmp
pop
idiv
or
jg
stc
enter
xlat
imul
sahf
add
arpl
ljmp
push
jne
gs
mov
popa
loope
jb
mov
dec
es
dec
jae
mov
mov
int
dec
mov
imul
mov
xchg
rorl
add
sbb
add
add
add
movsl
in
shlb
mov
outsb
jbe
add
sarl
jge
idivb
je
cmp
xchg
add
les
test
mov
fwait
into
mov
sub
imul
add
and
lahf
and
icebp
cmp
inc
loope
sub
adc
and
xor
jl
ret
sub
hlt
std
jp
pop
movsl
mov
out
or
ljmpw
mov
push
mov
inc
outsb
in
int3
jle
cmc
add
and
inc
sub
outsb
pusha
shll
and
ja
push
out
dec
xorb
mov
enter
dec
sti
sbb
inc
call
js
jae
push
repnz
sub
cmp
hlt
xlat
lret
pop
iret
jge
int
xchg
sahf
jg
sbb
fnstenv
ss
nop
and
fldenv
iret
push
pop
ja
insb
adc
xchg
pop
adc
lds
ret
stc
inc
mov
shlb
mull
pop
xchg
fs
call
mov
mov
jg
adc
xchg
test
push
push
mov
scas
adc
adc
add
dec
sub
das
and
xorl
inc
pop
aam
sbb
cmp
bnd
daa
stc
mov
pop
lock
mov
popf
jno
iret
mov
xor
fistps
or
movsl
stos
insb
mov
adc
movsl
in
scas
pusha
jg
nop
mov
inc
out
ret
fdivr
pop
push
xchg
fsubs
test
sahf
fdivs
or
mov
inc
add
mov
push
jb
out
call
outsb
mov
inc
frstor
out
rcrb
je
add
gs
ficoms
inc
out
sub
cltd
mov
and
add
test
lods
out
lods
arpl
xor
and
leave
sub
xchg
dec
in
shrb
dec
adc
lds
pop
sbb
mov
ss
mov
sub
adc
repnz
notb
mov
cmp
dec
shll
cli
in
decb
jge
xchg
pop
out
jae
stc
rcrb
jns
xchg
into
scas
sbb
sbb
push
cld
mov
hlt
dec
repz
addr16
mov
add
fxsave
hlt
aas
xchg
test
cmc
inc
icebp
arpl
ret
test
shll
shrl
push
mov
add
in
pop
pop
dec
hlt
add
adc
sub
adc
sub
lahf
or
sub
aas
mov
iret
ret
or
loop
ljmp
cmp
scas
jbe
add
cmp
jb
stos
int3
lock
int
test
add
ficompl
sbb
cmpsb
hlt
loop
add
pop
lahf
mov
mov
aam
adcl
adc
jno
iret
mov
int3
test
test
iret
incb
sahf
xchg
pop
adc
call
dec
rcr
fcomps
pop
mov
push
popf
mov
xchg
jle
stos
jge
xor
sahf
jnp
jg
mov
mov
repnz
out
pushf
repz
or
movsb
xchg
lods
pop
jb
nop
push
iret
add
in
out
jge
jo
stc
popf
sahf
mov
inc
push
lret
mov
dec
inc
cmp
xor
addr16
jae
testb
xor
pop
cld
nop
in
out
int
mov
mov
imul
ror
jmp
lret
or
aam
xor
fnsave
mov
inc
pop
mov
pop
pop
pop
cmp
sti
insb
xchg
cmp
cltd
std
shll
jno
and
or
cli
xor
mov
into
mov
jp
jbe
fdivr
xchg
mov
and
hlt
or
mov
push
xchg
mov
dec
pop
jp
xchg
pop
mov
je
xor
enter
add
add
popa
pushf
dec
xor
out
jle
push
pop
inc
push
add
ret
lcall
inc
mov
sbb
mov
je
mov
addr16
je
sbb
icebp
std
test
lret
dec
mov
cmp
xor
outsb
mov
jecxz
push
pop
lea
adc
mov
rcrb
scas
jne
cmp
xchg
lods
cmc
mov
repnz
sub
xchg
daa
lock
insl
xor
push
xchg
mov
pop
pop
shll
std
repnz
pop
out
xchg
shrl
xchg
or
mov
test
xchg
xor
dec
rcr
jbe
cli
cmp
xchg
cmp
mov
cmp
aas
test
sbb
test
add
pop
mov
cmp
rclb
pop
sahf
xor
ds
inc
enter
push
cmc
mov
mov
pop
sbb
aas
cmp
jo
fwait
dec
dec
jg
orl
push
cmp
or
dec
inc
movsb
clc
dec
mov
or
pop
sbb
cmp
mov
cmp
vmovntdq
mov
cli
fistpll
jmp
xor
push
enter
clc
jno
pop
insb
lret
pop
dec
mov
mov
sub
orb
and
mov
sbb
mov
inc
mov
mov
xchg
sbb
shll
sub
popf
out
pop
xchg
adc
sarb
lret
jae
jp
xchg
lcall
fwait
inc
push
xchg
daa
xchg
jno
ljmp
add
shll
pop
rcll
sbb
je
sbb
in
cwtl
addr16
movsl
dec
mov
pushf
cmp
ret
push
add
mov
push
mov
mov
cmp
cltd
fdivrl
sti
scas
sbb
sahf
rol
inc
lahf
dec
mov
std
dec
add
mov
adc
inc
cmp
inc
mov
ds
pusha
xchg
and
pop
push
jge
mov
or
movsl
addr16
dec
sub
push
adcb
cli
shl
jnp
in
push
ds
sbb
xor
repz
add
jns,pn
cmpsl
out
cld
imul
sub
cmp
pop
repz
insb
jae
xchg
pop
std
mov
mov
das
bound
and
adc
fsubrs
jg
mov
por
mul
aas
fsubrl
mov
lcall
mov
incl
xor
jbe
and
mov
mov
test
fs
inc
mov
addr16
sbb
bound
pop
inc
nop
cmp
mov
mov
movsl
nop
imul
xchg
ds
jge
popa
jne
loope
jae
gs
popa
mul
movsl
dec
xchg
out
subb
je
cmp
jge
enter
popf
push
insl
jmp
ficompl
mov
mov
rcr
lds
sbb
stc
cmp
test
push
pop
sub
lock
mov
dec
push
xchg
dec
pusha
pop
xchg
cmp
es
call
push
sub
pushf
adc
xchg
std
inc
mov
sub
mov
or
mov
insb
sub
das
adc
jle
inc
in
push
pop
or
daa
sbb
imul
cmp
xchg
sti
test
xchg
faddl
add
aam
add
fnsave
mov
pop
mov
js
pop
cmpl
lcall
fcmove
pop
gs
aaa
dec
pop
xlat
pop
jg,pn
aad
adc
mov
cltd
les
inc
cmp
lock
jg
adc
cltd
cs
mov
movsb
arpl
fldl
inc
pushf
les
ljmp
cmp
and
popf
cmpsb
xor
dec
cmpsl
dec
mov
push
xor
cmc
lahf
in
mov
sbb
pop
std
std
test
push
push
inc
sub
mov
sbb
adc
std
daa
lea
push
push
call
andl
mov
cmp
sbb
in
mov
pop
scas
push
test
pop
xor
negl
sub
scas
scas
add
sti
push
pop
dec
outsl
cmc
imul
cmpb
dec
loop
lea
loop
rcll
cld
and
orb
popa
outsb
loope
cld
pop
mov
and
mov
mov
aad
xor
mov
mov
lahf
push
sbb
data16
shll
js
push
mov
movsl
mov
insl
fistl
scas
mov
add
xchg
into
loopne
pop
and
subb
jne
dec
jp
dec
cmc
pop
icebp
divl
cmc
cltd
out
setl
popf
mov
push
sbb
inc
ja
fs
clc
fs
ja
pop
test
outsb
dec
mov
test
adc
inc
pop
xchg
stos
pop
bound
and
in
icebp
xchg
call
jb
adc
arpl
sbb
inc
jl
fnstcw
add
xor
mov
das
add
mov
push
lcall
pop
out
inc
mov
push
xchg
insb
ljmp
ljmp
pop
sarl
outsb
push
pop
cmp
sbb
popf
ret
std
mov
adc
mov
and
out
out
jle
adc
inc
cli
cs
and
mov
mov
mov
dec
or
mov
mov
cwtl
adc
push
cmc
iret
mov
xchg
xor
cmovnp
xor
out
test
cmp
mov
int3
dec
pop
jle
sub
and
xchg
cli
sbb
shll
ror
divb
adc
xchg
call
pushf
stc
imul
lea
push
insl
inc
jno
push
xor
stos
cs
enter
mov
and
arpl
xor
into
sub
lods
outsl
inc
dec
jno
bound
sub
inc
pushf
jns
push
pop
push
push
or
cmpsl
mov
inc
test
dec
test
cmp
inc
gs
hlt
in
js
aam
xchg
or
sbb
mull
push
fs
adc
mov
aas
push
es
aam
decl
push
cli
ret
xchg
sub
je
push
mov
push
dec
mov
xor
and
inc
iret
in
push
scas
loop
xchg
lret
dec
jg
pop
pop
adc
in
xchg
xor
cmp
jbe
or
fwait
popa
rcrb
movl
jbe
in
mov
sub
mov
push
lods
mov
jns
decl
add
jp
push
fs
jb
xlat
rol
ljmp
inc
inc
fcompl
xor
andl
loopne
sub
inc
shlb
jbe
mov
jne
imul
mov
sbb
addr16
repz
push
xor
push
das
stos
dec
cmp
aam
push
ret
push
sub
ret
sub
inc
scas
das
push
mov
xor
out
sub
jne
fidivrs
imul
pop
insb
pop
mov
neg
jecxz
sbb
test
cmp
dec
ja
mov
ss
mov
in
arpl
stos
leave
push
rcr
pop
mov
jae
add
incb
jnp
std
dec
xor
scas
adc
xlat
lahf
push
pop
rcll
fldcw
ret
push
fcoms
push
pop
int3
jle
cmpsl
pop
push
iret
shll
xor
push
mov
or
aaa
fwait
int3
cld
pop
inc
pop
out
jg
sub
test
out
cli
add
jge
jg
je
repz
fsubrl
mov
es
adc
jb
cmp
stc
pop
iret
idivb
pop
jae
int
jg
xor
jl
fidivs
cwtl
lret
pop
cmpsb
jl
mov
stos
mov
or
jg
cmp
jo
cmp
data16
cmp
sub
cltd
mov
jle
repnz
inc
pop
inc
dec
ss
dec
cwtl
loop
test
das
inc
or
cmp
mov
jp
lret
pop
sub
cwtl
xor
bound
dec
leave
xor
clc
clc
adc
adc
leave
mov
push
and
mov
movsl
inc
mov
icebp
sahf
test
push
inc
pushf
insl
push
pusha
in
cli
dec
scas
sbb
neg
push
call
data16
pop
pop
incl
iret
push
cmp
je
sbb
in
or
shr
fidivrl
pop
addr16
sbb
push
and
xchg
sub
and
test
jmp
outsl
js
sbb
rcrl
push
dec
sub
aad
mov
adc
pop
jnp
xchg
movsb
inc
insl
adc
add
push
inc
icebp
xchg
push
push
jns
push
pusha
stos
mov
sbb
dec
sbb
or
sar
out
mov
xor
mov
in
jl
pusha
lahf
scas
push
push
out
push
xchg
lods
movsl
outsl
jmp
push
pop
inc
lahf
jbe
cmpb
and
enter
stos
mov
out
push
lea
movsb
adc
pop
out
cmpsl
imul
sub
fnsave
cmpsb
and
ret
push
adc
pop
js
ds
mov
mov
pop
sub
mov
add
in
push
xchg
and
loopne
daa
pop
aad
or
push
jo
jno
loop
test
lret
popa
mov
dec
inc
mov
mov
jl
push
cli
mov
lret
fcompl
ficoms
xchg
test
sbb
pop
call
sbb
or
or
sub
js
push
jb
push
pop
push
aaa
xor
dec
icebp
ret
inc
cltd
add
dec
pop
mov
or
pop
imul
dec
adc
push
pop
fsubrs
and
push
out
xor
adc
insl
ja
and
pop
mov
jb
cmp
lret
jo
aam
sbb
roll
imul
and
push
mov
lahf
cmp
dec
fadd
movsb
and
test
out
push
imull
in
test
mov
pop
or
push
nop
imul
cmpsl
cmc
pusha
cmpsl
cwtl
insb
and
hlt
ljmp
aam
mov
jae
mov
inc
pop
in
or
out
sub
jl
xor
pop
pop
enter
test
sti
imull
outsl
icebp
popl
mov
xor
mov
lea
mov
push
fwait
insb
sarl
int
jmp
cmpsb
fnsave
stos
dec
cld
sbb
mov
bound
scas
dec
adc
add
pop
stos
push
cli
sub
rol
and
sbb
dec
aas
and
ljmp
fcoms
loope
inc
sbb
shll
sub
shl
aam
cmp
cltd
ja
ret
stc
sub
rcl
std
add
inc
sbb
mov
mov
mov
sbb
pop
inc
mov
push
les
jae
lret
out
fsubrs
out
inc
rolb
adc
xchg
cmp
lds
test
pop
aam
out
sub
and
xchg
pop
pop
sub
mov
cmp
jne
cs
push
push
insb
sub
arpl
out
xor
into
jno
push
icebp
out
push
xor
jae
daa
xor
das
jl
xchg
stos
icebp
sbb
ds
in
or
push
mov
fstps
lret
push
mov
mov
or
and
jb
lahf
sbb
repz
aad
xor
inc
sbb
jae
fadds
call
or
and
icebp
out
xor
push
dec
inc
push
push
adc
xchg
mov
sub
sub
sti
stos
or
and
shr
or
mov
sahf
pusha
sbb
xchg
aam
sub
fnsave
jecxz
jecxz
jg
pop
adc
or
cmp
cmc
je
mov
idiv
insl
mov
add
lock
or
daa
xor
imul
repz
rorb
xchg
jg
pop
or
mov
aad
xor
mov
leave
cmpsb
inc
jecxz
scas
sbb
mov
test
dec
shl
push
jnp
pop
in
movb
cli
mov
mov
xor
mov
xchg
mov
sub
jecxz
fdivs
pop
mov
jbe
fcoms
movsl
dec
pop
out
int
mov
sub
sbb
fstl
ret
xorl
lock
loopne
lret
test
imul
lret
incb
xor
add
push
inc
sbb
shrb
push
dec
ret
jmp
jp
cltd
sbb
inc
jge
xor
loope
inc
rol
xor
push
mov
xchg
cmpsl
cmpsb
mov
inc
frstpm(287
add
into
mov
test
mov
xchg
scas
je
mov
add
cwtl
xor
std
and
shlb
ss
add
testl
cmp
xlat
dec
mov
aad
and
popf
inc
addr16
ret
lret
push
icebp
mov
push
ret
pushl
test
rol
loopne
jl
fnstenv
cmp
inc
adc
and
sbbb
pop
mov
pop
ja
cltd
and
iret
pop
jo
bound
jns
pushf
nop
xchg
cli
mov
mov
or
subl
xor
cltd
sub
popl
aas
inc
lret
xchg
cmp
call
and
aas
insl
and
mov
jmp
mov
sbb
mov
fincstp
aas
inc
cs
sub
jecxz
mov
lods
push
add
pop
jge
mov
push
ja
shlb
add
adc
data16
mov
sbb
pop
cmc
push
std
xchg
les
int3
mov
mov
ret
out
pop
lret
dec
xor
pusha
jmp
out
xor
mov
sahf
shrb
push
inc
xorb
xchg
cmp
push
imul
mov
daa
mov
insl
mov
and
sub
or
and
xchg
dec
loope
push
lahf
stos
mov
add
sub
aam
adc
adc
les
xchg
add
push
mov
and
add
or
mov
and
jg
lea
scas
cwtl
mov
or
bound
pop
jp
out
mov
dec
sub
dec
in
add
call
push
mov
push
inc
loope
and
lods
cwtl
mov
out
leave
dec
and
addr16
sub
iret
mov
stc
and
loopne
std
cs
call
mov
bsf
xor
jo
notl
dec
leave
popf
xor
xchg
inc
aam
push
mov
out
xchg
sbb
test
arpl
pushl
jl
dec
fiadds
fbld
sub
adc
sbb
pop
ljmp
bound
add
lret
cmp
jae
je
cli
repz
inc
mov
loope
add
jae
push
fistpl
xor
loopne
pop
sub
xor
pusha
cld
mov
inc
and
cmpsl
out
inc
aaa
push
cltd
sbb
int3
stc
xchg
jmp
push
das
mov
jl
push
test
add
or
and
push
adc
jo
mov
push
lods
stos
dec
pop
imul
daa
or
mov
or
sarl
mov
inc
dec
std
mov
and
daa
pop
adc
add
sub
jmp
xor
add
push
rcr
sub
inc
xchg
pop
and
stc
sub
and
mov
mov
jmp
repz
sub
mov
xchg
cmc
scas
xor
and
imul
cmp
sbbb
lock
mov
jnp
fcmovne
ficoml
jns
jae
xor
jns
pop
and
je
or
jg
adc
pop
and
jae
scas
push
mov
pushf
stos
addr16
fldcw
cld
scas
fdivr
jbe
into
cmc
mov
out
push
cmc
mov
cltd
push
mov
adc
stc
pop
pop
sub
sbb
shl
fdivs
push
cmp
loope
lea
lods
dec
rorl
pop
mov
aam
push
dec
int3
scas
fisttpll
outsb
int
cmp
leave
jo
popf
mov
and
mull
pop
and
jbe
sarl
in
movsb
arpl
fst
fsubrp
movsl
jl
add
sub
lock
xor
inc
xor
test
clc
mov
xchg
shrb
dec
loope
mov
jge
insl
mov
test
lock
mov
dec
ja
insl
xchg
cmpb
int3
inc
mov
pop
popa
dec
sub
inc
psrld
adc
fcoml
aad
cmp
in
sub
cmc
or
out
or
movsb
int3
out
enter
inc
push
sub
shlb
xchg
jae
scas
sti
xlat
in
es
adc
gs
xor
inc
mov
jne
insl
jno
ret
or
xor
xchg
pusha
xchg
jns
sub
mov
lret
jp
pop
mov
push
shr
mov
mov
jno
inc
mov
repnz
ret
jo
sub
gs
je
dec
push
or
lock
shlb
lds
cltd
mov
fnstsw
inc
cmpsb
mov
lahf
mov
mov
cmpsb
mov
test
sbb
sbb
inc
jl
push
jp
jecxz
adc
int
stos
inc
mov
repnz
stos
jecxz
jge
addb
push
lods
loopne
movsl
nop
mov
sbb
fstpl
fsts
mov
adcl
cld
xor
clc
sub
xchg
lods
mov
sbb
aas
inc
add
scas
inc
lock
and
scas
dec
push
mov
loopne
lahf
fisttps
jns
add
fcmovne
pop
or
lret
adc
mov
imul
js
or
fdivrs
cmp
sub
jns
push
nop
mov
dec
scas
enter
ret
adc
iret
cmp
cld
dec
popf
add
adc
mov
jge
xchg
pop
cltd
sbb
das
sub
mov
add
ds
stos
jle
data16
xchg
push
leave
adc
jg
mov
sbbl
cmp
les
jbe
sub
or
add
sub
mov
hlt
mov
shll
call
pop
xchg
dec
push
loop
imul
test
add
pop
pop
pop
lds
jecxz
jmp
mov
jae
test
mov
jl
jg
insb
mov
jmp
rcl
sbb
test
push
push
inc
pop
rcr
lret
icebp
js
mov
inc
mov
incb
out
lods
cli
lret
dec
dec
leave
add
xchg
iret
pop
in
jbe
xor
or
fdivr
cmp
jge
push
popf
scas
gs
push
pop
dec
jl
mov
es
xlat
jmp
add
fistpl
in
xchg
mov
pop
jb
test
jg
push
cmp
ret
imul
or
fldt
int
cltd
push
das
mov
jecxz
adc
mov
dec
outsl
test
lea
loopne
lahf
int
mov
inc
subb
fcom
jge
jb
fs
rcrb
ret
repnz
mov
mov
push
stos
inc
loopne
mov
in
cmp
push
jns
fidivl
cmp
add
ljmp
cmp
mov
jnp
adc
or
testl
and
inc
cmp
repz
std
add
or
dec
pop
lea
push
daa
ljmp
test
cmova
pop
out
jmp
in
adcl
adc
push
push
jle
pop
pop
sti
dec
dec
les
rcrb
sti
add
call
loopne
cli
aad
je
pop
lock
rolb
test
aad
insl
xchg
stc
fistpl
hlt
int
mov
test
nop
jl
daa
jo
ds
out
bound
hlt
sub
test
in
fsubr
xchg
pop
mov
fcmove
dec
clc
mov
stos
lods
repnz
cmpsl
aam
lock
inc
jle
sub
ja
enter
xor
aam
sbb
mov
push
sbb
loopne
sbbl
insb
xorb
or
jge
cld
or
xlat
cmp
cmp
inc
daa
sub
not
pop
cmc
dec
sbb
jae
xchg
pop
loopne
cmp
sbb
loope
push
cmp
or
mov
cmp
loope
sub
outsl
std
push
cmpb
sbb
ret
jmp
outsl
lcall
add
cmp
cmp
lret
cmpsb
jmp
imul
mov
lcall
inc
lcall
sbb
ljmp
pop
aaa
repz
mov
add
gs
lret
lret
ror
movsb
fcomi
test
inc
call
out
xor
cld
pop
xchg
out
mov
xlat
add
push
xor
mov
add
sbb
sub
mov
mov
adc
push
inc
sti
jl
fwait
add
stos
std
sbb
stc
mov
dec
fisubrl
outsb
mov
pop
push
lods
or
mov
mov
pop
in
cmc
std
cmpsb
dec
add
or
mov
sub
pop
jp
fidivrl
imul
adc
and
jo
cmc
xchg
jbe
mov
or
data16
push
fs
or
shrl
cmpsb
das
jbe
jmp
push
or
out
loopne
push
pusha
repnz
pop
or
xchg
push
push
add
xchg
add
xchg
push
hlt
repz
ss
jnp
aaa
pop
sub
imulb
pop
jl
es
xor
dec
sub
sbb
je
sub
cmpsl
insl
lcall
fcomip
das
ja
add
mov
cmp
add
push
mov
sbbb
mov
inc
push
or
cmp
mov
scas
aam
imulb
rcr
and
jge
sub
adc
lret
shlb
push
inc
faddp
sub
mov
daa
mov
and
in
in
cmc
xchg
enter
mov
jnp
jg
jmp
fwait
dec
bound
mov
mov
xchg
bound
out
xor
xlat
out
cmc
adc
ret
jb
mov
mov
loopne
shlb
sti
xor
or
push
loopne
inc
jo
mov
adc
xchg
loope
pop
mov
or
bound
test
mov
push
xor
push
or
cwtl
cld
inc
cmpsb
data16
and
or
inc
dec
cmpsl
mov
add
sti
sbb
fldl
lds
scas
xlat
clc
mov
inc
or
xchg
ret
pop
mov
push
insb
daa
loope
stc
fsubs
lds
xchg
push
dec
fld
loop
or
stc
jno
imul
movd
mov
xchg
or
xchg
rclb
clc
shll
push
ss
sub
push
xor
and
cs
fs
addb
mov
cmp
fsts
lea
jae
xchg
je
scas
dec
mov
cmpsb
and
xor
test
jle
pop
loopne
int
rcll
rcll
push
add
mov
int3
mov
in
sub
xor
inc
daa
push
inc
xor
bnd
hlt
shll
push
or
in
imul
shlb
jge
test
addb
in
sbb
out
inc
ljmp
sbb
int
push
sub
xor
jbe
les
lds
inc
inc
sti
mov
ret
add
dec
dec
xorb
xor
test
dec
pop
push
popf
fidivrl
test
adc
movb
imul
mov
pushf
xor
sub
push
push
or
xor
cs
pop
push
xorb
sti
mov
nop
dec
jmp
mov
add
jae
push
dec
nop
clc
inc
mov
sbb
jo
sub
mov
ljmp
scas
pop
sbb
push
leave
sub
mov
adc
xchg
add
mov
inc
xlat
cltd
push
bound
in
insb
test
mov
dec
repnz
clc
lock
pop
add
push
xchg
out
jge
fs
jne
lock
fwait
pushf
insb
outsb
addl
cmp
push
aas
cltd
sub
divb
adc
adc
pop
adc
hlt
and
and
loope
loopne
daa
add
push
add
push
in
sub
cmpb
adc
imul
call
xchg
or
mov
xlat
lods
cmp
sbbl
shll
dec
mov
push
or
daa
or
or
rcl
ror
int
loop
in
jbe
jne
je
inc
adc
add
xor
test
popl
les
dec
int3
scas
mov
lret
mov
dec
jns
xor
jmp
mov
ds
jb
scas
mov
out
xor
sbb
xchg
ret
cld
xchg
mov
ds
mov
push
andl
sbb
outsb
mov
inc
out
aam
mov
mov
mov
pop
add
loope
dec
mov
mov
in
jae
sub
enter
xchg
xchg
sub
adc
xor
jns
lret
push
pop
in
sub
shlb
inc
movsl
ss
and
dec
fisttpl
jmp
sbb
jbe
call
nop
in
sub
js
or
shl
and
adc
test
pop
cs
sub
cmp
fwait
dec
ja
movsl
jl
dec
inc
int3
ss
jl
or
xchg
push
sbb
xor
lahf
ret
pushf
adc
lcall
xlat
enter
dec
cmp
pop
jns
push
mov
or
mov
aaa
dec
mov
cltd
test
pop
rcl
push
adc
xchg
push
pop
nop
sti
jg
mov
jg
scas
adc
push
mov
nop
inc
sub
mov
rol
mov
mov
inc
mov
xchg
inc
xor
inc
ficomps
test
push
push
adc
adc
aaa
enter
aam
std
lret
clc
jle
inc
mov
lret
and
mov
or
popa
mov
imul
sahf
das
fld
mov
out
jp
and
cmp
out
or
inc
mov
push
and
mov
inc
movsl
pop
insb
ljmp
or
insb
pop
nop
jmp
addr16
pop
xchg
and
mov
shlb
sbb
or
rorb
lods
sub
sbb
fmuls
lods
enter
nop
negl
push
mov
adc
push
ds
clc
push
xchg
rclb
xor
les
and
cld
test
jo
xchg
mov
inc
or
mov
in
pushl
jmp
imul
fs
in
sub
mov
xor
cmpsb
enter
adc
cmp
mov
jnp
jns
mov
scas
lds
inc
subb
sbb
inc
xchg
xor
in
std
jmp
xchg
inc
pop
movsb
fs
adc
push
nop
push
mov
js
cwtl
dec
jmp
inc
jno
push
inc
imul
inc
mov
inc
fcoml
shrb
xor
bound
xor
stos
lods
or
mov
pop
mov
fisttpll
sbb
push
pop
ret
and
jg
cmp
xchg
mov
pop
fisubl
or
mov
xchg
mov
cltd
add
push
orb
xor
and
push
inc
fs
lcall
sub
mov
cmp
mov
movsb
fcom
pop
sti
test
popf
fsubr
in
sbb
hlt
xor
test
stc
add
push
ficomps
jl
adc
pop
inc
jl
adc
xchg
les
and
les
sbb
mov
jno
adc
mov
pop
mov
loope
mov
stos
cmp
add
mov
in
adc
and
lea
enter
jmp
movsb
jnp
movsb
inc
lock
mov
in
mov
pop
jmp
push
adcl
aas
add
mov
into
push
dec
or
adc
push
mov
cmpsb
lahf
lods
repnz
imul
xor
fldenv
sub
pop
in
js
gs
lock
lret
push
fwait
outsb
inc
xchg
pop
push
shl
daa
fistps
pop
popf
lret
and
xchg
mov
or
mov
xor
xchg
adc
rorb
jo
in
or
in
sbb
mov
inc
jnp
cmp
jbe
fildl
clc
pop
sbb
pop
adc
mov
jg
pop
js
push
fucom
daa
outsl
lods
mov
sub
in
dec
daa
pop
sbb
int3
adc
and
xor
mov
test
out
pop
int3
sub
jl
jp
xchg
into
jne
pop
mov
imul
jns
icebp
lock
push
fisubrs
xorl
std
push
arpl
inc
popa
arpl
xchg
outsl
int
mov
mov
cmp
push
xchg
dec
cmp
mov
push
cmpsl
xor
xor
out
adc
jp
out
sub
xor
adc
insb
std
pop
inc
test
scas
lods
mov
or
sahf
pop
dec
dec
iret
popa
pop
data16
in
ret
inc
pop
data16
ret
dec
xchg
mov
inc
dec
cli
test
popf
and
pop
in
jnp
iret
xchg
aam
aad
hlt
mov
mov
cs
xor
push
push
mov
loopne
dec
and
and
stc
mov
dec
pop
jg
mov
sbb
add
je
xchg
repz
loope
inc
ficoml
ret
jb
sbb
scas
push
popa
outsl
xor
dec
jg
lahf
xchg
adc
shll
shlb
sub
mov
ljmp
jae
dec
testl
jl
int
popf
and
push
imul
loope
rcl
dec
jne
std
aaa
test
jmp
repnz
cwtl
lods
xor
adc
or
or
nop
sub
jns
push
jno
jbe
in
fidivl
inc
xor
fiaddl
jg
push
add
xor
add
test
xor
mov
mov
xchg
dec
pop
adc
out
xchg
jl
test
push
psubw
enterw
lods
xlat
leave
movsb
or
push
jmp
lcall
mov
xchg
jle
xor
pusha
mov
mov
xlat
push
xor
push
inc
jns
clc
aam
mov
jnp
sbb
sub
adc
jecxz
push
adc
cmpsb
pop
xor
sub
inc
imul
mov
test
test
in
out
in
cmpsb
adc
pushf
dec
inc
js
and
js
mov
inc
dec
mov
or
jecxz
lds
push
dec
pop
popa
mov
xchg
cmpsb
jns
push
test
push
loop
or
push
mov
mov
and
add
cmpsl
mov
jbe
xorl
loopne
sub
jae
jbe
cmp
push
push
and
dec
movsl
jno
gs
mov
daa
in
iret
push
and
inc
mov
cs
cmp
clc
mov
jge
dec
push
out
push
cli
in
in
insb
cli
mov
xchg
cld
mov
inc
loopne
sti
xchg
adc
adc
fsub
ss
jns
xchg
inc
pop
and
mov
mov
pop
cmp
ja
pop
xchg
sti
mov
dec
cmp
testl
sahf
test
shl
ds
dec
pop
adcb
inc
cs
xor
fsubp
or
cli
xor
popf
test
idivl
mov
xor
scas
inc
shrb
inc
pop
testb
push
shrb
sbb
dec
ret
pop
ss
jmp
mul
sarl
jb
lahf
pop
shrb
and
stc
enter
mov
pop
sbb
adc
cmp
ret
jb
loopne
jne
data16
push
sti
pop
cmp
stos
mov
movsb
sub
adc
sub
dec
cmp
or
inc
and
mov
cli
jle
test
and
loopne
push
or
jae
imul
inc
sbb
jg
cmp
negb
jbe
adc
lea
adc
es
test
insb
int
int
inc
dec
xchg
ret
cmp
mov
xchg
push
xchg
aas
loope
scas
lret
xchg
push
xchg
xchg
int3
into
addr16
popa
cmpsl
cmpsl
sbb
bound
mov
das
fldenv
mov
inc
sahf
mov
mov
scas
repz
sub
aaa
sub
jne
hlt
ret
dec
rcrl
sbb
add
ret
mov
mov
mov
pop
pop
mov
sub
xchg
xchg
cmpb
add
mov
dec
lret
adc
dec
loop
jp
dec
ja
jno
mov
or
push
inc
loope
in
pusha
sbb
add
jmp
int3
or
lret
test
rorb
xor
je
cmp
xchg
insb
repnz
repz
jo
jmp
aam
call
ficomps
scas
dec
jg
cmp
cmp
lods
popl
into
inc
add
call
mov
rolb
mov
gs
or
aam
and
dec
inc
dec
push
sub
aas
or
insb
mov
push
bound
sbb
pushf
sbb
jns
ss
cmpsb
inc
xchg
cwtl
mov
lret
sbb
lock
into
call
ljmp
imul
popa
push
push
ss
xor
repz
lcall
sahf
pop
rorb
mov
sbb
call
cmpsb
jae
repz
jge
xchg
inc
fdivl
incl
sbb
mov
mov
into
push
mov
in
in
pop
clc
es
dec
mov
cmpsl
mov
out
nop
xor
and
aad
xchg
mov
mov
xor
jne,pt
imul
mov
cmp
and
xlat
xlat
dec
mov
mov
scas
mov
insl
add
fstpl
and
xchg
add
or
stos
sbb
lods
lods
fistpl
jmp
cmc
popl
aaa
sbb
shll
mov
mov
popa
cmp
movsl
daa
in
movsb
xor
cwtl
add
cmpsl
jge
loope
je
cs
mov
fnstenv
pop
fnstcw
inc
cmpsb
imul
pop
jo
push
cld
test
imul
lret
sarb
into
mov
pop
push
lret
push
jno
and
clc
bound
mov
pop
mov
lcall
sub
aas
jb
jne
or
mov
adc
jne
dec
sbb
aad
push
cmc
cmp
dec
aas
push
pushf
mov
call
in
inc
sub
pushf
xor
je
mov
ja
scas
and
mov
inc
out
cmp
xchg
sub
inc
sbb
pop
fisubrs
fwait
adc
push
nop
and
test
ret
push
dec
cmp
rol
test
loope
js
arpl
imul
sub
dec
hlt
add
add
sub
or
xor
add
adc
ljmp
notb
mov
mov
addl
imul
mov
add
jecxz
mov
mov
inc
test
enter
jecxz
xchg
xor
mov
adc
dec
sub
xor
cwtl
pop
add
lea
popf
sbb
repnz
mov
mov
mov
mov
cwtl
push
xchg
mov
cmp
jmp
and
jb
mov
scas
idivb
pop
push
jne
loopne
iret
leave
jl
and
xchg
aas
out
lcall
test
mov
push
insl
xchg
fstpl
xlat
sub
pop
decb
jp
mov
mov
push
shrd
mov
cwtl
and
cmp
dec
sbb
adc
lahf
jle
in
or
jno
jecxz
fs
fcomip
insb
mov
cmpsl
or
inc
int3
xchg
mov
push
cwtl
test
add
jp
push
cmc
out
push
loope
in
mov
jb
dec
pushf
test
sub
test
push
pop
cmp
addl
pop
icebp
inc
rorl
jnp
in
push
mov
inc
cmpb
lret
xchg
dec
clc
xor
xchg
test
mul
xchg
daa
subb
popf
or
push
cli
xchg
push
pop
dec
adc
mov
cmp
mov
jbe
jle
xlat
xchg
std
lods
add
lods
mov
mov
ja
orl
imulb
jmp
sub
lret
sbbl
movsb
sbb
ret
icebp
ss
cmp
ljmp
ret
repz
adc
cli
pusha
scas
push
imul
les
out
pop
jne
inc
push
cmp
and
sbb
pop
jg
lods
inc
xchg
mov
mov
pop
xchg
sub
xor
xor
loopne
mov
aaa
dec
cmc
sbb
xor
cmp
dec
mov
dec
cmp
cld
mov
out
jg
cmp
mov
psubb
test
iret
mov
cmp
dec
lcall
fwait
mov
stc
lock
add
pop
and
test
cmp
and
nop
call
icebp
rclb
sti
ja
pop
jno
mov
iret
scas
cmp
pushf
imul
jp
pop
xor
sub
rcr
incl
data16
arpl
mov
inc
cmc
je
pop
jno
iret
lods
shlb
iret
ljmp
rol
and
sbb
xor
imul
jl
mov
mov
fldl
adc
push
popa
cmp
popf
addr16
loop
inc
ret
fldl
scas
shr
shr
andb
jbe
leave
in
imul
mov
cltd
add
jnp
ss
aam
jp
adc
mov
add
inc
lahf
clc
cmpl
out
pop
in
and
out
mov
repnz
mov
xchg
or
cli
mov
rcll
jb
or
push
loop
loope
rorl
pushf
rcll
mov
xchg
mov
xor
inc
sahf
rcrl
icebp
mov
lret
sbb
sub
push
stos
add
out
mov
or
push
dec
mov
mov
out
add
cltd
out
clc
sbb
les
push
inc
push
pop
popa
mov
dec
out
fadd
in
mov
rorb
xor
loop
sbb
cmc
cmpsb
inc
mov
cmp
adc
mov
in
into
mov
jno
idivb
mov
pop
pop
jne
sub
or
xchg
cmp
cmc
mov
sahf
rcrb
sbb
push
pop
lahf
dec
xchg
test
push
and
inc
push
in
iret
mov
sbb
loopne
icebp
jb
jg
cltd
sbb
in
ja
imul
xchg
out
push
add
fldcw
test
and
add
xchg
or
pusha
lcall
fisubl
adc
and
insl
mov
and
jge
cs
push
xchg
daa
rolb
xor
dec
rcl
jg
lods
mov
mov
xchg
xchg
jae
inc
dec
and
mov
xchg
sbb
mov
push
cmp
dec
adc
pop
mulb
xchg
loopne
and
dec
jbe
push
in
out
jns
xchg
ret
movsb
dec
dec
je
sbb
inc
xchg
and
rorl
scas
xchg
xor
xor
shr
std
daa
mov
lock
adc
xor
cmp
fs
cmp
lret
xor
lods
dec
shll
mov
adc
dec
lds
in
push
or
and
ja
sahf
ret
fs
jmp
pop
negb
clc
lds
pop
xlat
push
cmc
push
ljmp
and
add
jno
push
movsb
inc
pop
mov
movsl
test
add
cmp
insb
and
scas
popa
aad
sahf
mov
cmp
cmpl
stc
pushf
xor
repz
pop
mov
scas
mov
cmp
jno
call
sbb
movsl
clc
adc
jg
andl
mov
scas
out
xor
mov
enter
push
cmpsl
ss
addl
xchg
out
inc
out
mulb
outsl
dec
and
push
or
pop
pop
dec
jecxz
scas
mov
orl
xor
mov
add
les
ficoms
mov
test
mov
mov
sbb
insb
lea
hlt
inc
pop
add
mov
mov
or
push
jmp
cli
sbb
aaa
lods
and
inc
lcall
shr
lods
and
jnp
icebp
or
fs
in
jnp
xor
xchg
mov
ret
mov
sbb
mov
inc
pop
and
cmpb
das
movl
loopne
mov
lcall
inc
mov
and
cwtl
inc
shrl
or
aam
rcl
pop
mov
push
incb
int3
jl
cmp
enter
mov
jmp
lcall
or
or
int
mov
push
dec
repz
mov
pop
mov
push
nop
aam
scas
add
sti
shlb
lock
xchg
aad
mov
xor
fsubrs
imulb
jmp
in
inc
push
test
sbb
push
flds
jne
xchg
je
or
cmp
pop
test
jp
xor
jbe
jb
xor
push
mov
adc
pushf
sahf
mov
cmp
ljmp
fdiv
pop
xchg
pushf
out
in
cltd
pop
lock
sub
and
outsb
loopne
push
out
scas
shl
dec
movsl
or
ret
outsb
cs
les
lcall
outsb
int
jb
bound
mov
pushl
rsqrtps
movsbl
ljmp
lahf
repz
or
jmp
xor
leave
sub
mov
add
ds
movsb
scas
mov
xlat
dec
sub
rcrb
sbb
mov
mov
loope
xor
addr16
adc
add
xor
mov
inc
xchg
movsl
aaa
or
popf
jp
push
aam
xlat
jl
in
fdivp
imul
push
mov
leave
sub
or
ficoms
mov
mov
and
cmp
lods
out
lods
sbb
fdivs
fisubl
aas
pop
mov
int
sub
pop
lods
or
mov
in
leave
das
leave
mov
pop
es
hlt
ret
ss
push
mov
lahf
sbb
mov
pusha
loop
out
xor
loope
out
lods
std
jnp
jle
xchg
and
hlt
mov
cmp
pushf
mov
dec
addb
mov
mov
pop
cmc
rolb
aam
sub
mov
imul
or
nop
mov
addr16
repnz
das
popa
mov
cmp
sbb
pop
popf
jb
sub
mov
mov
stos
stc
mov
mov
and
cld
sbb
jns
xchg
inc
outsl
pusha
xor
mov
fs
mov
shrl
fistl
mov
ds
es
ja
loopne
imul
xchg
fcmovne
push
clc
dec
test
lcall
mov
in
ret
mov
mov
mov
add
mov
cmc
pushf
mov
mov
in
mov
mov
sub
adc
jge
add
cwtl
mov
ror
push
cmp
pushl
lret
or
push
xchg
pop
shrl
test
call
clc
andb
or
sub
pop
jmp
mov
ja
jne
pushf
imul
pop
sbb
dec
mov
andl
pop
push
fistpll
call
sub
push
xchg
shrl
enter
xor
divl
jmp
ret
mov
sti
inc
test
mov
mov
cmpsb
adc
sub
pop
mov
adc
out
sbb
mov
das
hlt
cmp
outsl
jbe
xchg
jmp
ljmp
push
sub
mov
jle
lds
jl
cld
dec
insl
dec
sub
xor
mov
popf
push
gs
lock
mov
cmpsb
cmc
xor
xchg
mov
push
mov
inc
xlat
add
and
and
stc
inc
test
out
mov
jge
add
pop
pop
pop
cmpsb
push
je
test
mov
adc
lret
out
bnd
xor
fsubr
cmp
popa
ret
xorb
lcall
rolb
aas
push
mov
shlb
push
mov
aad
mov
shrb
pushf
mov
pop
gs
in
pop
into
xor
out
fldl
pop
mov
xchg
xchg
in
mov
fwait
sub
push
cmp
mov
jl
add
iret
ja
lods
fdivl
add
imul
pop
sbb
testb
shll
jl
mov
pop
dec
repnz
mov
outsl
mov
divb
dec
clc
xor
push
mov
iret
lcall
daa
add
xchg
push
lods
cltd
loopne
add
out
pop
js
aad
jl
sbbl
sub
insb
xorb
test
repnz
xor
mov
push
sub
insl
fs
ret
mov
cmp
popa
pop
test
in
jno
adc
jecxz
das
cmp
push
fdivr
loope
push
test
add
sub
fcmove
push
jp
idivb
out
jl
add
out
push
xor
enter
movsb
outsb
cmpsb
adc
scas
enter
push
ds
xor
mov
loopne
mov
push
ljmp
loop
out
xchg
repnz
and
dec
ja
pop
std
sbb
jmp
sub
adc
imul
jnp
dec
jge
das
or
ljmp
fdivl
cmp
cld
cmp
test
pop
dec
out
cwtl
leave
mov
lahf
cmp
mov
xor
or
pop
mov
pop
cmp
sahf
inc
pop
das
scas
nop
jb
pop
rol
pop
lret
arpl
jo
ss
mov
jmp
cwtl
inc
shl
sub
ljmp
out
loop
mov
mov
sub
add
and
mov
gs
mulb
inc
je
lods
cmp
call
stc
pushf
mov
adc
int
pop
into
iret
push
pusha
fldt
loop
sub
push
sbb
xchg
repnz
sbb
fnstenv
cmpsl
addl
imul
or
and
sti
test
jne
jno
cmp
insl
jno
jno
fcoml
sub
pop
jns
jbe
cmp
aas
add
fwait
mov
or
push
inc
jmp
nop
dec
insl
ds
dec
fisubrs
stos
mov
ficompl
cmpsl
xor
mov
push
push
jb
mov
mov
mov
xchg
iret
lahf
or
or
pop
and
add
sbb
sub
push
sahf
mov
cmc
jecxz
inc
shll
push
sbb
aaa
gs
xor
out
pop
popa
outsl
xchg
pop
emms
repnz
loope
jecxz
mov
cwtl
jo
out
fnstenv
mov
jp
enter
mov
ljmp
and
cmp
test
sbb
push
jg
test
and
sbb
dec
cmp
xchg
jno
popa
mov
insl
xchg
adc
cmc
push
mov
push
or
mov
imul
inc
scas
and
lahf
dec
loop
mov
sbb
and
sub
xchg
mov
push
mov
mov
dec
int
test
imul
or
popa
cmp
addr16
js
mov
enter
call
mov
dec
movl
dec
pop
dec
inc
cmp
jae
pop
inc
test
dec
sbb
mov
scas
mov
fs
test
shl
mov
push
push
sbb
fiadds
dec
dec
push
lret
insl
xchg
cmp
xchg
loop
jl
push
popf
scas
xchg
jecxz
mov
je
nop
xlat
xor
int3
sub
inc
pop
outsl
xchg
test
aas
mov
mov
loopne
das
dec
or
out
rcll
lret
and
cmp
push
inc
dec
xchg
add
ret
push
mov
xor
inc
call
jne
xchg
add
roll
fs
xor
ss
sbb
in
out
pop
and
mov
mov
jmp
xlat
inc
sub
xor
imul
and
lea
rclb
dec
mov
jns
lods
xor
cltd
pop
cmp
push
inc
clc
jp
push
sbb
out
outsl
ret
add
adc
clc
push
adc
test
cmpsb
cmp
shl
cld
jecxz
jecxz
push
sub
push
and
movsl
xchg
insl
xor
test
adc
je
cmp
test
push
jmp
cmpsb
rorb
adc
cmc
jl
mov
mov
xrelease
rorb
std
imul
shrb
std
sar
neg
sahf
je
push
cltd
es
test
rcrl
jb
mov
hlt
jne
sub
xor
mov
mov
enter
mov
push
insb
test
jne
push
cmp
mov
int3
mov
mov
cmp
outsb
shlb
insl
scas
push
test
popf
sbb
pop
hlt
fisubrs
pushf
cli
xor
movzbl
in
xchg
pop
or
cs
jmp
movsb
push
dec
fisttpl
pop
daa
add
shl
fcmovu
jge
cmp
sbb
aas
xchg
lea
dec
cmpl
and
sub
fiadds
push
jns
sub
ret
or
ljmp
test
cs
sbb
mull
fdivl
inc
lcall
sti
rolb
dec
jmp
arpl
mov
ret
arpl
jo
imul
hlt
mov
cwtl
movsb
aas
gs
imul
push
aaa
rcr
je
pop
push
pop
and
fadds
cli
out
adc
in
jmp
jb
roll
bound
negl
push
cs
dec
pop
cli
add
xchg
lods
xchg
lods
iret
xchg
test
cwtl
inc
xchg
roll
daa
sub
das
stos
lret
nop
jb
addr16
push
repnz
repz
stc
or
pmaxub
and
ficoms
mov
jno
ret
enter
rcr
sbb
jl
adc
pop
sbb
sbb
sbb
sbb
lcall
mov
inc
pop
cmp
addr16
and
mov
aas
iret
adc
sarl
out
addr16
in
inc
stc
sub
addb
outsb
sbb
or
adc
sub
insb
mov
xchg
xor
add
repnz
mov
jbe
test
aaa
test
imul
fidivs
xchg
aas
loope
repnz
aaa
or
insl
pop
sbb
push
add
jp
mov
xor
cmc
arpl
insb
test
ret
loop
fidivrs
fs
or
mov
sbb
jecxz
leave
pop
and
std
fnstsw
pop
sub
xor
popa
bound
push
ss
and
jmp
push
int
sbb
cmpsl
mov
pushl
mov
cmp
mov
mov
cmp
lea
dec
arpl
xor
jecxz
jne
icebp
mov
pop
push
pop
stos
scas
shlb
xchg
cmp
xor
push
stc
lahf
gs
push
add
sar
shlb
mov
lahf
je
ret
fcomps
idivl
pop
cli
fimuls
adc
test
sub
xor
imul
add
push
mov
jmp
cltd
into
loopne
mov
cltd
push
jne
stos
cli
mov
loope,pn
mov
xchg
fdivrp
cmp
and
cmp
mov
sbb
sub
dec
mov
mov
adc
or
outsl
idiv
fs
sub
pop
inc
stos
push
or
mov
ret
adc
jne
mov
mov
jne
xchg
mov
jle
test
jnp
pop
in
xor
std
jge
or
test
and
lcall
mov
or
pushf
mov
rorb
nop
pop
mov
sbb
ss
inc
aas
popf
sub
adc
stos
adc
dec
lock
loopne
or
add
test
mov
jge
lods
push
jne
dec
mov
js
cmp
in
shrb
ja
fsubs
and
mov
mov
pop
stos
outsb
push
ret
pushf
add
daa
or
cmp
inc
lods
dec
inc
mov
push
adc
cltd
out
xor
subl
out
add
xchg
cmc
hlt
mov
pop
pop
sub
mov
dec
and
int3
mov
dec
clc
idiv
xlat
sub
test
push
jmp
add
push
push
add
stos
mov
fnclex
sbb
mov
pop
xchg
adc
or
pop
jno
sbb
pop
xchg
ret
inc
leave
dec
pop
and
dec
sti
and
inc
adc
push
sub
push
jae
push
test
push
cmp
mov
adc
mov
adc
xchg
mov
and
test
push
or
loopne
push
sbb
push
outsb
jg
lock
mov
inc
stos
mov
decb
and
sub
pusha
dec
test
add
mov
iret
add
aad
fnstsw
mov
or
fs
aaa
mov
enter
cli
mov
inc
xor
push
sbb
stos
and
in
mov
inc
imul
mov
cwtl
gs
sahf
dec
shrb
and
bound
aaa
add
adc
scas
cmp
mov
mov
clc
mov
hlt
inc
leave
cmp
cld
pop
sti
insb
es
push
xor
pushf
xchg
imul
int3
pop
sbb
fisubs
cmpsb
mov
shl
shrb
ret
push
xlat
scas
mov
mov
popa
mov
adc
add
ss
test
push
xor
bound
xor
arpl
pop
xchg
into
clc
aaa
sub
movsl
in
inc
push
stos
scas
stos
test
aaa
pushf
fiadds
mov
outsb
mov
in
and
sub
or
in
in
push
sbb
mov
nop
lock
cld
and
xor
sub
lret
fwait
gs
leave
les
scas
jle
mov
clc
cmpsl
mov
pop
push
fwait
sub
add
inc
lock
test
jnp
push
sbb
and
sbb
icebp
push
or
jl
mov
aam
inc
out
dec
mov
lret
lea
cwtl
or
and
jmp
push
sbb
pop
lea
aam
in
mov
sub
aam
push
or
loopne
cmp
sbb
test
sub
fwait
jae
icebp
pop
inc
enter
inc
ret
add
inc
adc
push
outsb
mov
cmp
push
roll
aad
dec
dec
pop
xchg
loope
xchg
pushf
cmpsb
stos
das
clc
jne
mov
sub
shrl
jmp
adc
lods
outsl
or
inc
cmpsl
push
lods
shll
pop
xchg
popa
and
movsl
mull
jge
int3
mov
sahf
movsl
fdivl
cmpsb
dec
xchg
fsubrl
xchg
adc
loope
inc
push
incb
shlb
add
stc
mov
loop
and
mov
jge
sbb
add
inc
cwtl
inc
out
and
or
add
mov
negb
stc
cmp
and
mov
xor
mov
mov
and
ret
repnz
pop
sbb
and
dec
dec
icebp
jmp
in
mov
jb
xchg
mov
xor
and
pop
fs
fisttps
jns
adc
into
pusha
lcall
out
inc
lahf
ljmp
sub
rorb
lods
mov
jno
sub
xchg
sarb
dec
push
shrl
adc
js
inc
mov
mov
cmc
jecxz
fcmovbe
les
rorb
sbb
cld
fisubs
push
cmp
in
movsl
push
popa
inc
ljmp
insb
cmp
ss
int3
sbb
cmp
add
dec
push
xchg
push
lret
rclb
ret
scas
mov
jmp
jno
aam
daa
mov
pusha
push
cmp
insl
mov
repnz
aam
es
or
jge
in
stos
cmp
mov
jg
jae
mov
popa
int
das
cmpsb
sbb
or
adc
adc
movsb
inc
cmp
jl
mov
sti
push
lret
jno
push
out
sbb
repz
mov
and
xor
sub
adcl
mov
addb
jmp
dec
out
inc
adc
mov
cmp
mov
cmp
xor
outsl
xchg
mov
adc
into
xchg
in
sahf
aaa
pushf
jmp
push
sbb
mov
mov
lods
movsl
ljmp
int3
rolb
mov
es
scas
sbb
les
clc
pusha
out
cmpsl
popa
cmp
pop
cwtl
in
push
sub
jnp
mov
mov
sub
sbb
les
daa
mov
mov
flds
lods
xlat
arpl
and
push
filds
cmp
mov
push
insl
cmp
and
out
jmp
jns
xor
lcall
push
pop
mov
testl
push
arpl
arpl
mov
outsl
jl
dec
or
dec
mov
push
icebp
pop
loope
lods
sbb
xchg
mov
sub
test
imul
aam
jmp
and
cli
insb
imul
mov
insb
push
push
push
cmpsb
mov
dec
js
xchg
js
aaa
inc
out
je
daa
xchg
jnp
stc
xchg
cmpsl
cmpl
addl
adc
sti
data16
les
or
add
stc
clc
insl
hlt
xor
loope
cltd
nop
cmp
nop
ficompl
mov
lods
les
rcrl
jl
lcall
testl
fsubl
sbbl
clc
xchg
dec
test
addl
sub
int3
or
jecxz
mov
pusha
mov
adc
cmp
std
test
cltd
mov
pop
mov
js
in
frstor
mov
scas
adc
sbb
pop
sti
adc
or
mov
lahf
mov
div
and
push
jle
pop
mov
adc
or
addr16
into
dec
adc
and
sahf
or
sbb
fldt
cmc
add
xor
iret
push
das
mov
bound
sub
or
jb
mov
hlt
mov
mov
mov
mov
sar
or
mov
dec
clc
bound
fistpl
mov
and
pop
outsl
or
xor
fdivr
lret
or
out
lods
and
dec
cmp
andl
xor
subb
cmp
add
sub
fucomp
pop
lods
push
pushf
andb
mov
gs
out
dec
mov
inc
dec
lods
fs
pop
push
inc
mov
lea
xor
movsl
adc
mov
jb
xor
push
out
cmp
arpl
in
cs
mov
rorb
jle
jmp
push
inc
lods
lea
sahf
shll
cmp
xor
test
fcmovne
sub
xchg
sarl
sub
popa
cmc
push
iret
sbb
popf
mov
addr16
sbb
sub
jae
into
sbb
mov
xchg
jno
into
sbb
mov
aam
mov
movsl
iret
stos
adc
push
test
rcl
inc
fisubl
repz
stc
cmp
add
xor
leave
sbb
adc
push
pop
movsb
lods
iret
pusha
sub
push
repnz
fs
sub
jp
nop
ficompl
loope
ljmp
aam
sahf
and
mov
jg
mov
sbb
nop
out
fists
inc
insb
xor
dec
arpl
out
jg
mov
sbb
mov
std
mov
inc
xchg
pop
jno
dec
out
ret
insb
push
fs
adc
or
std
pop
dec
mov
pusha
pop
fs
mov
push
ja
or
jge
and
scas
push
jb
lods
cmp
lret
ret
add
arpl
dec
pushf
dec
push
xchg
mov
jnp
mov
lods
cmp
repnz
mov
xor
sbb
insl
sbb
add
popa
fs
iret
ret
mov
leave
int3
jg
je
jno
fnsetpm(287
scas
mov
pop
xor
or
clc
or
mov
push
sub
rcrb
out
cld
xlat
sbb
jo
daa
sbb
loope
into
pop
int3
int
sub
pop
std
sbb
repnz
cli
sbb
pushf
push
push
lds
add
xchg
iret
imul
push
je
push
sbb
scas
cmpsl
lock
sub
jle
popa
dec
xor
sbb
scas
or
and
inc
popf
adc
test
icebp
sbb
out
daa
pop
insb
sub
cmpsb
jp
or
jno
clc
xor
sbb
cld
jae
jnp
xchg
pop
lahf
adc
pop
bound
loopne
popf
mov
aam
mov
insb
jbe
and
xor
xchg
jo
mov
lret
ret
pop
xlat
and
icebp
out
fisubrs
jno
rcll
cmpsb
mov
pushf
test
sub
minps
mov
outsl
icebp
call
fstpl
loope
nop
lcall
lds
sbb
ret
roll
add
push
into
insl
popl
movsl
loope
insl
jl
xor
cs
dec
mov
std
fs
sub
or
xchg
sub
sub
ret
inc
nop
pop
std
sbb
in
sub
xor
jns
jbe
push
push
stos
pop
lds
xchg
adc
xchg
mov
gs
daa
data16
inc
sti
jmp
sti
mov
arpl
test
call
pop
inc
ss
adc
pop
mov
cmp
pop
orb
loope
cmp
sub
mov
cmpsl
add
xlat
jmp
push
sbb
sbb
dec
adc
aas
cmpl
jl
cmpsb
fwait
int
xchg
xchg
fwait
jge
ds
lods
push
sbb
jg
mov
pop
shlb
dec
cmp
fwait
cmp
add
lock
dec
cmp
inc
adc
cmpsl
popf
mov
das
mov
mov
jne
imul
sbb
jnp
bound
pop
call
scas
fsubs
cwtl
add
mov
stos
ret
lea
nop
sahf
pop
pop
aas
adc
jg
fnstsw
lods
or
popa
mov
test
test
xlat
aas
divl
outsb
subl
jb
adc
andb
std
fstpl
in
xor
push
dec
mov
sbb
out
lret
adc
mov
fs
add
loop
das
mov
or
dec
or
pop
push
xlat
fwait
aad
sbb
lret
or
push
push
into
xchg
push
cmp
push
push
pop
and
adc
or
adc
aam
addr16
das
mov
pop
jge
sub
push
push
mov
and
lds
stc
shll
inc
inc
or
lock
mov
ds
aam
mov
test
cmp
cmpl
clc
jns
cmp
push
mov
and
mov
nop
xchg
jmp
or
popf
pusha
mov
fcmovnb
gs
pusha
ja
sbb
pop
ret
cmp
rdmsr
out
mov
decl
xchg
xor
sbb
mov
out
add
xchg
test
jns
into
push
jb
icebp
sub
mov
stc
shrb
cmpsb
fwait
and
xchg
shll
xor
sbb
xchg
pop
insl
imul
in
sarl
jno
mov
lret
inc
divb
mov
mov
notb
fwait
sbb
fidivs
jg
sbb
outsb
gs
mov
popf
or
sbb
sbb
and
mov
outsl
into
mov
push
xchg
mov
xor
mov
roll
push
into
and
std
sub
xchg
clc
jne
dec
dec
je
aad
jnp,pt
mov
nop
push
mov
out
ret
iret
sbb
into
jmp
push
fdivs
lcall
push
jns
call
xchg
shrl
jb
aam
or
push
jmp
xchg
dec
inc
stc
xorl
xchg
out
add
inc
call
sub
test
xchg
aam
adc
sub
ret
cmp
cmp
adc
lds
xor
pop
mov
or
or
stos
xchg
lret
jne
push
leave
sahf
popa
mov
shlb
xor
push
fstpt
je
mov
or
cli
lods
test
pop
loop
sbb
test
and
lock
decl
push
fsubp
fimuls
shrl
cmp
dec
pusha
sbb
pop
push
pushf
dec
inc
imul
in
pushf
lea
addb
fistpll
in
hlt
add
jg
xor
mov
sub
sbb
std
pusha
sahf
les
push
push
pop
adc
jp
hlt
adc
daa
mov
mov
xchg
mov
stos
dec
dec
pop
pusha
out
pop
cmpl
mov
cwtl
add
ljmp
xchg
sub
push
push
daa
test
nop
sbbb
mov
test
xor
jbe
sbb
repnz
fwait
scas
fisttpll
mov
pop
repnz
xchg
mov
sub
imul
and
mov
mov
das
dec
hlt
gs
cltd
hlt
push
fsubrs
hlt
sti
sbb
ret
shlb
test
fdivs
mov
js
inc
adc
xor
dec
xchg
xchg
ja
dec
arpl
lock
mov
jmp
sbb
xor
xchg
mov
push
mov
dec
jmp
js
in
ss
mov
mov
xchg
cmp
pop
loopne
mov
cmp
add
outsl
insb
sub
cmpsb
inc
mov
into
cwtl
mov
xor
cs
es
pop
adc
push
and
xlat
push
shr
scas
cmpsb
ds
adc
popa
fcoml
cmp
mov
je
arpl
gs
cmc
mov
fs
fwait
adc
and
imul
fadd
out
scas
hlt
ret
dec
inc
icebp
jno
enter
shr
les
mov
cmc
xchg
jne
aad
movsb
lcall
ss
mov
hlt
shr
xchg
add
mov
aas
test
ficompl
adc
push
push
or
scas
xchg
data16
jne
aad
loopne
hlt
clc
add
dec
push
scas
test
mov
jecxz
lods
in
jl
cmpsb
iret
rol
imul
jo
xlat
adc
adcb
aad
xor
push
sbbb
jge
hlt
cmp
jo
pushf
fnsetpm(287
shlb
icebp
inc
insb
cmpsb
lea
mov
fidivrl
xor
mov
jle
nop
enter
jmp
jl
lcall
or
out
adc
mov
push
pop
push
adc
xchg
lcall
lret
aad
push
div
jnp
sbb
rorl
pop
xchg
and
out
loop
pop
int
add
stos
lea
cmp
in
fistpll
cmpb
pop
push
ljmp
pop
mov
arpl
je
inc
pushl
xchg
out
cmp
lea
rcll
inc
outsb
sarb
mov
in
pop
mov
push
scas
iret
shrb
mov
inc
bound
in
xchg
and
gs
dec
mov
inc
push
lahf
aam
cmp
scas
sub
push
jns
xor
inc
sub
pop
cmp
iret
fdivr
cld
add
insb
jbe
js
cmp
and
int
cmpsl
jl
les
test
clc
rclb
jo
imul
jl
xor
rcll
and
inc
mov
lds
jno
aas
scas
and
xchg
mov
or
in
jb
jmp
jb
out
dec
popf
push
addr16
push
xchg
or
dec
jle
leave
jo
mov
loop
xor
es
cmc
aas
pop
movsl
ds
adc
movb
loop
push
cmp
bound
insb
sub
scas
lret
pop
iret
pushf
out
dec
and
push
push
xchg
add
sbb
xchg
mov
je
rolb
cli
jno
xchg
sbb
jb
aaa
scas
stc
cmc
mov
ja
xor
pmullw
outsb
imul
movsl
xor
or
sbb
dec
or
xor
cmpsl
pop
cmp
es
dec
clc
fiadds
orb
jecxz
jo
dec
test
lret
pop
in
mov
xchg
out
mov
inc
fs
or
dec
jo
inc
in
jl
xor
pop
cmp
aad
xchg
pusha
xor
cmp
ret
es
and
jbe
adc
or
aam
pop
push
xchg
out
aad
push
inc
arpl
adc
jge
or
sbb
inc
and
out
cmc
movsb
push
nop
add
aaa
dec
jmp
shrl
in
xchg
scas
aas
sub
sbb
call
sti
loopne
shl
add
and
daa
cmp
in
ret
stc
push
flds
dec
xor
mov
bound
cmp
cld
sahf
and
bound
xor
fwait
or
jecxz
jecxz
jle
imul
or
mov
adc
clc
pop
imul
stos
jae
xchg
clc
cmpsb
cwtl
insb
fadds
push
push
mov
popf
adc
pop
inc
xchg
inc
jns
ret
and
sti
pop
push
push
pop
stos
mov
mov
mov
rcrl
pop
push
xchg
inc
push
xor
lret
test
neg
pop
repnz
cmp
test
fwait
sbb
push
mov
fisubrl
scas
jecxz
lds
popa
fcom
xor
sbbl
sti
ret
and
inc
mov
lds
cmp
sub
subb
jp
xchg
cwtl
lcall
sub
fiadds
inc
sbb
xor
rcll
ret
sbb
cmp
inc
enter
popf
repnz
rcrb
jno
clc
outsb
ss
xchg
mov
cld
rcll
mov
mov
inc
pop
dec
pop
sbb
lea
test
sub
mov
sbb
cmp
gs
loop
loop
mov
or
and
mov
jle
in
xchg
lock
adc
pusha
cmp
stos
cmp
test
or
cmp
in
insl
mov
jmp
mov
nop
test
out
js
jge
jmp
leave
adcb
mov
test
aam
loop
push
cmpl
imul
push
mov
cwtl
in
push
dec
fcoms
mov
sbb
imul
mov
and
lret
jmp
test
adc
mov
or
push
sub
leave
outsb
inc
pop
pop
ljmp
cmpb
xchg
lret
dec
mov
mov
mov
loope
pusha
push
sbb
xchg
test
add
sahf
add
ds
dec
mov
mov
sub
push
insb
or
loopne
inc
outsb
jno
aad
lret
push
mov
lcall
and
gs
xor
repz
js
daa
xor
cmpsl
cmpsb
inc
push
add
and
or
xchg
xorl
lcall
scas
or
pushf
mov
xor
scas
test
bound
inc
jp
xor
mov
jb
xchg
loopne
andb
pop
repnz
cmc
xor
push
mov
aad
popf
add
dec
mov
lret
int3
lret
xchg
jl
cwtl
ja
ljmp
loope
stos
pop
sbb
pop
xorb
mov
sub
movsl
push
fdivr
and
popf
sbb
fucomip
icebp
mov
aad
xchg
or
lret
pop
lahf
cmpsl
cmpsl
mov
mov
xor
jnp
addb
mov
daa
mov
roll
out
mov
xor
sbb
jg
data16
sbb
incb
negl
aas
rcrl
xor
and
mov
push
mov
in
pop
sbb
dec
dec
lret
sub
fidivrl
inc
adc
insb
add
shrl
dec
add
mov
add
data16
cli
jle
mov
aam
lret
cmp
sbb
cwtl
out
lds
mov
iret
sub
imul
dec
addb
cmp
outsb
pop
call
xor
jbe
and
outsl
sbb
sbb
jnp
xor
mov
and
xchg
cwtl
jmp
std
mov
mov
jmp
lahf
or
js
jo
mov
repz
mov
in
dec
aas
fwait
cmp
sbb
and
sub
mov
sub
mov
push
sbb
sahf
dec
mov
xlat
mov
fwait
fwait
xchg
test
shl
push
popa
dec
loop
mov
loopne
faddl
cltd
lret
lods
sahf
jo
insl
mov
mov
lret
daa
ficoms
adc
mov
ja
sahf
cmp
data16
ret
aas
pop
jmp
xchg
cli
adc
xchg
outsl
adc
mov
cld
xchg
sub
dec
xchg
sbbl
call
xchg
je
test
mov
shlb
jmp
cmpsl
inc
ljmp
jbe
xor
push
push
out
mov
pop
mov
adc
pop
out
push
insl
sbb
xchg
inc
call
cmp
or
or
das
sub
jecxz
aaa
fimuls
std
ror
leave
leave
mov
cmp
xor
or
mov
sbb
jecxz
sub
sbb
data16
nop
je
xor
inc
adc
out
or
lcall
mov
push
mov
das
iret
imul
dec
lret
jmp
add
cmp
jg
cmp
std
inc
jne
rclb
jmp
jge
mov
testb
lods
dec
mov
add
sub
mov
repz
inc
out
sbb
jb
or
cwtl
xchg
mov
sub
ja
cmp
cmp
inc
mov
pop
sbb
cmp
fsubl
pop
inc
fwait
sub
cld
and
or
cmp
fimull
mov
dec
gs
jno
or
mov
aas
mov
lods
movsl
or
push
enter
lcall
xor
push
and
orb
shlb
adc
cmpsl
fxch
rcll
add
sub
js
push
subl
xor
ljmp
xlat
xor
out
jecxz
aad
mov
loope
dec
test
imul
or
cmp
pop
aaa
rorl
cmp
cmp
gs
sti
and
xor
divb
and
sbb
icebp
insb
push
push
test
and
repz
lock
neg
jnp
jg
lret
in
imull
mov
rol
repnz
pop
ja
inc
or
insl
inc
mov
push
dec
push
out
or
lcall
test
mov
sub
inc
jns
or
lds
xchg
pushf
xchg
imul
mov
fisubrl
jl
adc
ljmp
or
into
fs
xchg
fdivs
enter
xchg
addl
sbb
gs
and
fld
je
loopne
push
sti
push
test
add
jge
add
lret
mov
cmp
movsb
mov
out
or
stos
jp
fnsave
fiaddl
test
push
cs
movsl
in
pop
das
loop
xchg
popa
dec
sub
fnstsw
js
arpl
add
cmpsb
adc
ds
mov
xor
aad
mov
je
push
jb
add
sarb
cltd
push
jmp
loope
fiadds
push
in
daa
xchg
xchg
mov
push
sub
pop
inc
repz
xlat
adc
pop
xor
add
pop
ffreep
leave
js
adc
outsb
test
adc
dec
lret
dec
xchg
pusha
out
cmp
and
inc
cmp
mov
add
insl
mov
sbb
adc
jae
lret
jmp
loopne
and
subl
data16
push
push
inc
mov
imul
xor
push
cld
ss
jecxz
and
pop
pushf
ds
lods
mov
popa
je
cmpsb
es
and
es
or
bound
sbb
scas
mov
xor
adc
mov
mov
inc
mov
aaa
xchg
xchg
adc
xchg
dec
std
jno
push
call
sahf
addl
loop
shll
cmpsb
pop
pop
icebp
mov
adc
xchg
movsl
iret
mov
es
in
lea
movsb
das
fcmovbe
pop
and
xor
outsb
jmp
movsb
sub
xor
jl
push
jg
jmp
dec
dec
scas
mov
fsub
push
aad
dec
shl
rorl
not
imul
arpl
or
fadds
inc
cmp
pop
pop
inc
xchg
in
push
jp
jns
inc
sti
cmp
call
mov
inc
cwtl
int3
out
jg
dec
jnp
add
insl
xchg
jno
and
mov
fcompl
mov
in
pop
outsl
cli
push
push
cmp
leave
outsb
loopne
push
jns
cmc
daa
pop
jo
sub
into
adc
push
mov
jb
out
jae
xchg
ds
xor
pop
aad
ds
lods
mov
outsl
or
leave
int
sbb
and
loop
adc
push
aam
movsl
sahf
xchg
ret
or
in
sub
addb
inc
xor
or
cld
push
or
pushf
sbb
movsl
movsl
and
sub
sub
rcll
mov
or
lret
pop
insb
sar
bound
pop
scas
gs
test
adc
jmp
mov
sub
xchg
sahf
bswap
dec
dec
rcll
pop
push
xor
scas
mov
cmp
flds
js
arpl
and
js
pop
sbb
imul
xchg
movsl
in
mov
cmpsb
fisttpll
repz
out
fisttpll
sbbb
adc
fyl2xp1
xchg
lods
divb
push
gs
inc
add
push
daa
xlat
add
mov
sbb
frstor
mov
popa
sub
sbb
cltd
fdivrs
cmc
inc
dec
mov
out
sbb
lods
xchg
cld
fs
in
int3
or
add
adc
iret
arpl
rorb
in
jnp
loopne
in
adc
lods
and
test
mov
enter
push
xor
add
push
stos
dec
and
add
mov
pop
pop
int
out
push
and
call
xchg
mov
sub
int
sub
mov
lods
xlat
jb
mov
mov
push
mov
lock
pop
push
loop
xor
gs
sub
cwtl
push
or
xor
or
or
shll
fs
shl
movsl
cld
mov
pop
push
sti
mov
stos
push
mov
cmp
pop
es
push
sarl
add
popa
mov
sub
push
shl
es
add
out
nop
push
dec
push
jge
pop
xchg
inc
test
jecxz
xchg
ret
push
call
pop
jp
cs
sub
inc
daa
dec
shr
ljmp
jmp
ljmp
insl
mov
dec
incb
jmp
out
adc
sbb
js
es
lahf
jnp
insb
out
mov
push
mov
out
add
testl
clc
cltd
notl
mov
fmuls
and
je
enter
outsb
shll
mov
test
mov
aam
xchg
and
push
mov
out
push
xchg
jecxz
scas
sub
mov
scas
cmp
into
and
icebp
lea
fidivrs
xchg
inc
js
sub
out
push
movsl
inc
push
pop
xchg
lods
mov
nop
inc
pusha
add
xor
pop
pop
mov
mov
mov
data16
sti
cmpsl
stos
movsl
jmp
pop
psubusw
cmpsl
dec
dec
adc
testl
loop
stc
in
sub
adc
std
cwtl
pop
mov
loope
pop
and
lret
leave
jecxz
push
xor
pop
pop
cmp
mov
pop
jecxz,pn
orl
stos
add
mov
mov
call
push
mov
cmp
aad
adc
outsl
jae
repz
adc
xor
pop
fldt
mov
xor
imul
dec
sbb
insb
add
out
mov
inc
fcmovu
imul
mov
lahf
ret
pop
sub
repnz
mov
xchg
andb
or
mov
xor
scas
fstpl
sahf
movsb
adc
pusha
in
inc
pushf
test
outsl
call
imul
std
popa
pop
aam
shll
and
adc
ja
mov
pop
mov
jne
dec
lea
xchg
lcall
mov
leave
insb
xchg
rolb
test
mov
xor
mov
jl
pop
sbb
cmpb
arpl
sub
cmp
fcomps
cwtl
dec
or
fcmovnbe
cmp
jle
add
dec
jno
cmp
mov
cmp
lock
adc
dec
icebp
fldenv
cld
cmp
pop
imul
lods
insl
push
mov
push
shr
adc
mov
pop
xor
push
or
out
pusha
cmp
inc
push
or
cmp
adc
mov
into
mov
dec
lds
push
ds
rolb
subb
lsl
cmp
or
pop
sbbl
addr16
add
dec
fcomps
cmp
subl
xchg
es
dec
lods
movsl
jmp
push
aam
sbb
repz
mov
insb
mov
mov
dec
jl
pop
ds
mov
or
and
aam
aas
cmp
mov
xlat
mov
adc
dec
popa
out
daa
sub
sbb
out
inc
loop
mov
jmp
jns
fcoml
cmc
js
mov
enter
adc
ljmp
inc
je
testb
mov
cli
pop
dec
inc
cwtl
and
xchg
fwait
cs
shll
sbb
jne
shlb
lret
pusha
cmp
sarl
mov
test
loope
pop
cs
mov
shr
daa
xchg
in
rcr
pusha
enter
cmp
sti
dec
addr16
in
nop
mov
or
sub
inc
lods
sub
nop
int3
adc
sbb
enter
adc
cmp
das
scas
cli
addr16
out
cmp
cmp
repz
pop
test
popa
sub
data16
jle
outsb
xchg
mov
int3
inc
pop
sti
stos
out
nop
cs
dec
lock
les
sbb
lea
xchg
fsubl
cmpsl
cmp
das
cli
je
jl
icebp
push
in
push
arpl
mov
sub
adc
cli
out
add
push
sbb
xor
cmpsl
adc
cmp
add
aaa
outsl
pop
fstps
and
xchg
and
cmc
cmp
push
and
rol
scas
fildll
mov
lcall
sti
add
lock
pop
push
popf
and
movb
out
add
fs
ds
dec
or
dec
push
mov
testl
adc
out
push
push
push
fstp
or
cmp
jmp
mov
les
jle
sbb
fstps
into
aaa
jp
lea
pop
mov
js
xor
mov
ret
mov
cmp
push
fldenv
mov
mov
sti
clc
bound
xchg
sbb
pmovmskb
scas
fisubl
jae
dec
mov
xlat
arpl
add
push
add
cmp
icebp
pop
cmpsl
cmp
xchg
in
arpl
lret
enter
hlt
sub
outsl
mov
add
test
popf
loop
add
imul
mov
call
dec
mov
jb
mov
and
jns
aas
xorl
dec
inc
dec
add
xchg
mov
arpl
cld
xor
scas
int3
jecxz
arpl
test
hlt
cmc
repnz
ret
dec
rcr
or
jae
xchg
cmp
push
fisttpll
insl
lahf
cltd
xchg
mov
push
fs
test
iret
adc
jno
cmp
mov
dec
lods
cld
inc
jl
jnp
inc
lahf
fs
mov
das
and
mov
pop
mov
loopne
cmpsl
mov
cmp
lahf
dec
cltd
jae
or
fsts
shlb
or
pushf
mov
cld
mov
and
cmp
ret
nop
mov
mov
xor
test
loope
push
ficomps
push
sbb
dec
stos
mull
add
add
pop
mov
jecxz
pop
inc
push
jmp
or
rorl
cmp
add
stc
inc
ret
sub
shr
or
xlat
stos
xor
or
movsl
mov
mov
mov
fadds
aam
out
cmpsl
xor
repz
xor
loope
cmc
mov
sbb
test
idivl
enter
or
popa
test
cmp
mov
stos
xchg
add
adc
mov
lret
nop
cmpl
jg
pop
adc
pop
repnz
sbb
mov
pop
outsl
hlt
std
mov
cmp
adcl
dec
fistpll
aad
and
mov
and
push
cmp
push
mov
dec
mov
mov
sub
out
insb
in
xchg
sub
push
iret
mov
cs
push
dec
movsl
jne
inc
fcomip
or
mov
mov
pop
cs
jp
push
and
sub
xchg
iret
adc
clc
outsl
lcall
adc
sti
and
bound
xchg
into
je
sub
loopne
inc
ret
xchg
cltd
push
psllw
dec
add
cmp
aas
insb
add
es
mov
jl
mov
jle
mov
or
inc
imul
sub
jl
mov
testb
jle
mov
addr16
push
lcall
andb
dec
pushf
xchg
push
cmp
sti
sub
shrl
xor
data16
ret
sbb
push
mov
jl
ds
jge
pop
bound
dec
cmp
repnz
test
sbb
and
mov
cmc
add
fnstenv
pop
jbe
dec
mov
mov
jle
mov
jnp
insb
punpckhwd
adc
mov
or
and
and
push
add
icebp
ds
push
or
mov
mov
fcomp
pop
frstor
cmpsb
notl
dec
dec
std
outsl
mov
inc
pushf
stos
stos
fisubrs
mov
cmp
inc
ja
inc
xor
out
push
cmpsb
test
sub
mov
mov
ss
xor
mov
inc
add
loope
popa
std
xor
mov
call
paddusb
int3
js
out
mov
or
in
fucom
mov
scas
xchg
sbb
adc
mov
mov
ds
setno
je
mov
cltd
outsl
jge
repz
xchg
jno
xchg
int3
xchg
pusha
xchg
pop
and
stc
out
push
mov
int3
push
xor
pop
popf
test
nop
ljmp
inc
sti
hlt
stos
loop
mov
fstp
adc
es
loop
inc
pop
sub
ss
push
fs
and
pop
jb
add
ret
xor
sub
xchg
mov
pop
xchg
lock
pop
imull
movsl
ja
push
into
hlt
xor
loope
or
jecxz
xchg
pop
pop
cmp
out
mov
push
inc
push
mull
dec
mov
sub
loopne
and
or
mov
addl
flds
cmp
mov
sbb
sbb
dec
push
jmp
in
or
mov
mov
stc
bound
lcall
pop
xorb
bound
push
pushf
sbb
jmp
cli
leave
or
dec
cltd
mov
cmp
enter
xchg
mov
xchg
add
push
xor
pop
aaa
jl
push
add
stos
xlat
test
dec
add
xor
mov
add
in
arpl
pop
adc
add
cld
aas
jbe
movsb
push
adc
adc
les
popf
jg
stos
mov
pop
and
or
paddusb
inc
flds
push
into
push
mov
cmp
mov
adc
adcl
jl
aaa
dec
push
mov
xor
hlt
andb
push
out
aaa
jg
sahf
xlat
loope
pop
cmp
ret
int
subl
xchg
pop
nop
sarl
inc
xor
mulb
xor
jnp
jmp
bound
cmc
push
pusha
adc
sbb
insl
or
sti
ret
push
test
xchg
dec
mov
sub
jae
push
cmc
int
movsl
popa
es
into
cmp
push
push
xor
mov
hlt
rolb
mov
mov
mov
movl
mov
push
lods
mov
test
das
xchg
mov
push
pop
repnz
push
int
gs
cmc
jae
sbb
cmp
shrl
mov
push
or
fstpt
adc
cltd
jge
in
ss
and
jno
push
cmp
dec
in
flds
fcomps
pop
dec
xlat
pop
int
scas
fcomps
cltd
ret
les
inc
lods
cmp
sub
cmpsb
sub
cltd
and
or
clc
fstps
and
pop
inc
out
sbb
adc
sahf
cmp
mov
call
xlat
stc
dec
fwait
cs
in
sbb
movsb
xchg
xchg
lds
jg
jp
in
dec
popf
into
or
dec
out
mov
stos
nop
mov
dec
scas
and
push
jo
mov
sarb
mov
cs
ljmp
lret
aad
dec
scas
fcompl
loopne
adc
ret
cwtl
mov
lgs
push
sbbb
dec
lods
leave
jp
inc
int3
bound
lock
jne
cmpsl
push
dec
fcoms
add
imul
mul
es
mov
pushf
mov
and
imul
imul
mov
xchg
mov
adc
fsubl
fisttpll
lea
adc
das
cmp
fs
into
jae
fdiv
fmuls
mull
dec
cmc
movsb
bnd
or
add
call
mov
xchg
xchg
aad
cmp
add
and
gs
inc
jae
shrb
fmuls
lods
dec
inc
xor
pop
pop
inc
xor
cwtl
in
and
popf
mov
cmp
mov
orb
xor
ja
insl
inc
in
je
cs
and
movsl
repnz
mov
lock
inc
adc
jmp
jns
je
adc
and
mov
stos
lret
xchg
inc
jno
jbe
cld
dec
add
in
cltd
fs
pop
arpl
aam
notb
pop
xchg
aas
fwait
mov
out
aam
xlat
je
cmp
inc
push
in
mov
enter
nop
scas
es
cmp
sbb
jb
or
push
or
mov
loop
mov
in
jbe
xor
dec
je
ss
mov
xchg
repnz
ds
xchg
fistpl
addr16
or
test
inc
or
nop
push
cmp
ljmp
pop
and
js
adc
dec
push
or
or
ret
and
les
push
ret
setbe
sub
inc
or
sti
push
pop
mov
sub
mov
adcb
out
and
ja
mov
sub
push
xchg
es
push
data16
lcall
and
adc
pushf
mov
lret
je
mov
dec
cld
fcmovnb
sar
aaa
or
jmp
dec
dec
aas
adc
rorb
pop
dec
outsl
clc
pop
dec
sub
testb
fnstenv
dec
pop
jb
adc
dec
into
lods
xchg
cmp
fstp
and
mov
popf
repz
jge
jo
adc
xchg
movsl
repz
aaa
dec
xchg
adc
xlat
pushf
clc
in
lock
dec
sub
sub
inc
push
aam
cmp
out
js
cmp
xor
add
repnz
xor
hlt
dec
dec
sbb
popf
cld
dec
lock
lahf
into
push
cmp
cmp
mov
jns
lret
xchg
mov
sbb
xchg
add
mov
movsb
jns
mov
lret
cmc
clc
fldl
lods
mov
sbb
test
inc
mov
mov
push
mov
imul
adc
sub
fidivrl
or
lds
mov
cli
jbe
push
pop
sbb
mov
inc
cmp
jbe
push
mov
icebp
adc
pop
fs
int
mov
jecxz
pop
sbbb
pop
out
jl
call
mov
jno
add
or
hlt
jmp
shrb
mov
sub
cmpsl
xlat
mov
mov
imul
or
pop
mov
cmpsl
cmp
repz
adc
pop
movsl
ret
mov
lahf
lahf
sahf
or
xor
lret
sub
and
xor
cmp
jmp
xchg
bound
xor
mov
cmp
icebp
test
mov
sbb
pop
xor
fisubrl
sub
sub
push
shlb
sub
or
inc
je
sbb
aam
sub
inc
mov
cli
test
push
iret
push
clc
insb
sbb
inc
lea
cltd
push
xchg
mov
out
mov
stos
sti
sbb
repnz
pop
pop
in
js
ss
daa
mov
jp
sub
fmuls
call
add
sti
xor
xchg
iret
test
lret
cwtl
rorl
push
add
mov
fists
jb
repnz
dec
cmp
lods
xor
mov
push
inc
dec
imul
stc
sub
std
repnz
out
mov
mov
cmp
push
pop
and
xchg
fistpl
add
cmpsb
mov
jle
fsubr
cmp
fmul
jmp
popa
fs
es
or
xchg
jb
mov
pop
lahf
mov
cs
mov
pop
outsb
aaa
sbb
push
stos
or
cmp
repnz
shr
gs
popf
mov
xchg
mov
cs
sub
inc
popf
dec
test
jbe
mov
push
add
cmc
aam
int3
sub
pop
enter
jae
nop
enter
mov
push
jle
or
mov
and
mov
mov
sarl
int3
jns
push
call
popf
mov
add
fidivrs
daa
inc
lods
sbb
inc
rcr
mov
push
add
lahf
jno
jle
mov
dec
add
in
xchg
fcomp
cwtl
cmpsl
lret
add
outsl
rol
and
lret
outsb
jmp
les
lock
and
mov
test
js
or
mov
xchg
imul
sbb
cmp
mov
sbb
ja
mov
gs
insl
das
inc
lea
push
sti
das
shrb
call
cmp
ret
arpl
fisttps
adc
out
pop
sbb
lods
arpl
mov
fwait
dec
push
icebp
xor
cld
xchg
xchg
je
push
insl
repz
stos
adc
mov
adc
outsb
ja
mov
sub
xchg
movsl
adc
mov
push
push
jns
cmp
jl
incb
sub
add
mov
in
cltd
mov
xchg
jo
fldl
jo
add
cmpsb
fistps
test
movsb
or
outsl
pop
push
and
fsubl
push
xor
sub
add
sub
mov
add
fwait
mov
dec
xor
mov
icebp
mov
add
ja
es
shrl
cmc
in
push
mov
loope
push
add
push
ja
push
out
lds
xchg
cmp
sti
or
and
mov
ds
inc
sub
mov
jecxz
sbbl
fsub
push
mov
lret
imul
shr
call
stos
dec
cmpsb
xchg
enter
xchg
or
sub
xor
test
ret
adc
adc
into
scas
lahf
or
sarl
sub
pop
call
jl
xchg
pop
mov
jbe
sbb
cmp
sub
lea
pop
subl
mov
inc
loop
adc
outsb
sub
inc
jne
outsb
mov
add
pop
adc
enter
add
pop
cmp
sub
sbb
adc
faddp
mov
sub
sub
in
ret
xor
mov
or
test
push
out
add
pop
test
test
xchg
jl
test
push
add
popa
fsubs
xchg
sub
and
jle
cmpsl
dec
in
cmp
mov
xchg
push
std
pop
inc
mov
push
lock
cmc
inc
mov
stos
push
out
shlb
data16
aad
je
sar
cmp
std
testb
adc
mov
das
fs
cli
clc
shll
xchg
std
xor
pop
dec
stos
adc
int
ljmp
jne
outsb
push
test
sbb
jp
ja
addr16
adc
loopne
adc
inc
iret
iret
mov
push
mov
mov
adc
dec
cmpsl
inc
add
movsb
fcoml
mov
pop
jb
inc
inc
pop
jg
jle
int3
and
adc
ljmp
push
repz
arpl
ljmp
inc
add
call
xor
push
rol
jge
nop
popf
cmc
push
mov
sbb
xor
jae
loop
fdivs
and
mov
mov
jmp
mov
ljmp
fs
jbe
lock
out
ret
pop
scas
cmp
or
push
les
mov
fidivrl
inc
xchg
dec
and
xor
imul
jmp
sbb
jge
xchg
ret
inc
adc
mov
cmpsl
int3
xor
jecxz
es
mov
scas
imul
or
mov
orl
jb
dec
out
lock
pop
movsb
add
jmp
lahf
insl
add
mov
mulb
push
sbb
push
icebp
and
dec
stos
sub
cwtl
push
cli
mov
in
in
xchg
lock
cmp
mov
xor
pop
xor
mov
inc
aad
xor
enter
inc
stc
ds
mov
pop
pop
outsb
int
xchg
mov
push
lods
rolb
xor
inc
jno
imul
add
mov
sub
sbb
sbb
cmp
dec
ret
mov
icebp
lcall
outsl
or
push
mov
pop
mov
or
push
mov
lock
jecxz
xchg
adc
movsb
imul
cmp
adc
movsb
jg
jmp
xchg
adc
mov
test
xorl
add
push
stos
cmp
out
popa
mov
inc
dec
xchg
fs
insb
xchg
sub
sbb
mov
loopne
xchg
lret
lds
mov
ss
pusha
ja
pop
push
xchg
lcall
mov
icebp
out
ret
jno
or
mov
push
or
cmc
into
gs
adc
shlb
jmp
es
into
mov
xchg
xchg
fists
dec
cli
lods
adc
dec
mov
addr16
imul
jne
fbstp
pop
jno
imul
sub
dec
inc
xor
dec
and
cmp
outsl
and
das
mov
test
fistl
mov
call
leave
xchg
mov
loope
ja
das
mov
mov
pushl
inc
mov
shl
pop
stc
add
inc
lahf
sti
imul
add
pop
push
jmp
addr16
stos
mov
or
imul
ret
jle
inc
sti
inc
inc
mov
test
sub
mov
out
leave
cmp
into
inc
pop
sub
jnp
out
test
mov
xor
loop
imul
inc
xchg
ret
rcll
mov
cmpsl
mov
mov
cmpsl
jmp
daa
imul
sahf
std
into
xlat
or
cmp
pop
test
mov
adc
movsb
repz
or
or
dec
ss
cmp
lahf
and
clc
push
enter
pop
mov
fisubrs
jns
shrl
and
mov
enter
dec
ficomps
sub
dec
xlat
dec
jns
rorb
xor
xchg
add
xor
scas
xor
jg
fwait
aaa
stos
inc
xchg
aam
movl
clc
call
xchg
popf
pop
lret
js
aam
xchg
adcb
sub
xor
jnp
xchg
xor
fistps
std
out
aad
stos
xor
xchg
dec
ficomps
movsl
ret
adcl
sbb
sub
inc
cmpsl
dec
mov
xchg
xchg
and
int
lret
test
lret
fmull
xchg
xor
jbe
popa
jmp
stos
xchg
and
loope
imul
dec
fstpl
in
mov
mov
in
je
fstl
into
cld
cs
mov
push
xchg
dec
cmpsl
sahf
mov
cwtl
mov
mov
add
xor
lock
push
mov
push
xchg
in
hlt
negb
sub
scas
xor
cs
mov
stos
in
dec
ljmp
fstl
pop
movsl
imul
inc
dec
mov
mov
in
stc
adc
jnp
sbb
inc
add
mov
outsl
mov
rcr
mov
mov
inc
lcall
sbb
dec
daa
stos
stos
jl
stc
call
sbb
aaa
jbe
push
mov
les
and
out
sbb
fimuls
add
lods
mov
lods
mov
pop
hlt
repnz
mov
push
inc
in
dec
test
out
pop
mov
push
or
jmp
lret
popf
ret
in
xchg
xor
mov
xchg
aam
mov
mov
mov
dec
sbb
add
fbld
add
mov
add
push
es
mov
push
jecxz
rsqrtps
xor
lock
xor
stos
jl
not
cmp
cs
stos
xchg
inc
pushf
cmpsl
mov
mov
sbb
or
imul
stos
popf
or
push
mov
iret
daa
int3
arpl
rcrb
lea
or
mov
mov
popa
mov
mov
cmp
or
pop
icebp
mov
xor
stc
addb
sub
repnz
jg
pop
mov
outsb
jmp
std
insl
push
inc
enter
cmp
push
cltd
mov
xlat
imul
popa
and
mov
aas
mov
nop
inc
jne
movsb
sbb
mov
xchg
frstor
sti
in
xchg
rcl
pop
and
xlat
mov
adcl
pop
sbb
mov
pushw
cmp
jmp
testl
push
xchg
inc
les
sbb
insb
inc
mov
mov
bound
hlt
lcall
arpl
xor
ja
ret
fwait
imul
fistpll
popa
or
sbb
in
aad
jmp
movaps
xchg
pop
mov
jle
subl
xor
dec
lret
scas
lods
imul
pop
iret
add
sub
repnz
cltd
pop
sub
outsl
fisttpl
and
aaa
popf
out
pop
inc
rep
and
xor
fistpll
lock
dec
bound
int3
dec
fsubp
dec
jp
addr16
sub
mov
shr
in
xchg
test
dec
dec
cmp
jne
insl
jle
jmp
pushf
clc
xchg
xchg
pop
stos
push
mov
dec
or
gs
xchg
addr16
repz
mov
rcrl
out
cmp
mov
or
sbb
adc
cmpsl
dec
add
mov
cmpsb
shl
inc
mov
sub
dec
cltd
cltd
insb
mov
adc
jmp
jae
pop
std
pop
adc
adc
movsb
pusha
xor
shlb
ss
and
ds
sbb
addr16
enter
in
and
xchg
lea
sub
sbb
cmpsl
inc
fstps
std
sbb
jne
insb
jge
dec
jno
jne
shrb
subl
mov
popf
loopne
stc
fldt
adc
sbb
int
adc
push
or
popf
sub
or
icebp
mov
xchg
dec
jg
jo
or
int3
repz
xchg
in
push
cld
adc
pop
repz
mov
xchg
pushf
ja
lret
mov
xor
test
lea
enter
call
aad
pop
and
aaa
pop
aam
adc
pop
xorl
or
test
and
in
icebp
stos
adc
clc
lods
stos
std
fs
cmp
mov
xchg
lods
add
xchg
subb
push
mov
jne
jmp
xchg
lods
jecxz
subb
pushf
insl
pop
push
clc
xchg
arpl
jl
mov
mov
jne
dec
or
ret
jp
ja
movsb
dec
sbb
adc
cmpsb
inc
lret
clc
xchg
mov
fsubs
mov
xchg
imul
dec
pusha
sbb
test
mov
scas
xchg
out
xchg
and
dec
iret
mov
mov
nop
sti
loope
ljmp
add
xchg
ss
dec
in
roll
xchg
sub
fstpl
in
cld
sub
mov
popf
in
fwait
shll
dec
push
idiv
mov
and
mulb
jo
notl
inc
sarb
inc
daa
mov
loope
dec
jo
jecxz
mov
push
adc
cmp
jo,pn
or
dec
push
mov
mov
jmp
leave
iret
imul
inc
aam
js
mov
call
push
cwtl
inc
inc
push
stc
push
imul
push
push
mov
ja
lods
aas
or
mov
fldenv
das
and
cmp
movsb
push
mov
imul
sub
iret
data16
sbb
xchg
jl
cmp
mov
ret
cmp
rcll
add
addr16
fsubs
scas
sbb
out
mov
test
lcall
out
mov
mov
pop
push
pop
mov
mov
mov
inc
aad
sub
lcall
jmp
push
jns
sbb
add
scas
shl
and
das
xlat
mov
iret
popf
call
mov
cltd
lock
cs
cmp
mov
fwait
sbb
xchg
or
ljmp
fcompl
and
pop
les
mov
out
cmp
movsl
xchg
pop
repnz
fwait
adc
mov
shll
mov
jne
test
sti
xchg
sbb
jmp
outsl
mov
mov
jae,pn
xchg
mov
test
int3
inc
pop
test
jbe
xchg
movsb
jbe
mov
or
mov
arpl
adc
add
jo
jo
imul
adcl
sub
shlb
sub
imul
ja
xor
cmpsb
movsb
add
cli
xchg
mov
or
ja
lret
sub
mov
daa
mov
jae
mov
aaa
push
and
mov
add
sbb
mov
test
push
pop
inc
fiaddl
daa
adc
adc
enter
sbb
daa
std
pop
add
cmp
pop
jns
and
test
add
nop
pop
mov
cmpb
inc
pop
outsb
pop
sarb
pop
shr
repz
std
jp
sub
mov
jg
loopne
push
mov
pop
mov
mov
jle
cld
mov
or
lock
add
fildl
test
test
sub
pop
imul
jno
dec
push
inc
or
xor
cmp
jno
inc
mov
sbb
cwtl
mov
sbb
or
and
adc
sbb
shr
inc
les
adc
adc
sub
mov
push
out
rol
push
rol
add
fldt
and
mov
mov
je
xchg
mov
jbe
rcrb
clc
push
popa
xor
lds
jg
or
out
icebp
pop
das
inc
icebp
and
std
movl
add
jns
lret
jno
mov
loope
sub
call
inc
mov
pop
mov
movsb
stos
mov
and
xchg
incl
add
fbstp
mov
ds
out
inc
hlt
xchg
pop
sti
pop
divl
incl
jo
mov
mov
jns
int
jp
pop
push
lahf
ss
push
xchg
ljmp
cmc
add
pusha
adc
pusha
adc
add
mov
imul
sahf
cmc
push
shll
stc
adc
neg
cltd
inc
ja
or
adc
add
pushl
cs
sub
dec
sub
aam
mov
fxch
pop
ret
sti
leave
add
xchg
int3
in
cwtl
pop
fndisi(8087
cmpsl
sbb
adc
gs
stc
out
loopne
cltd
pop
int
pop
fsubl
cmp
and
mov
mull
sub
in
push
stos
loope
stos
push
cmp
xor
inc
sbb
pushl
lcall
test
xchg
mov
adc
pop
push
xor
mov
jno
fildl
dec
dec
repz
xor
loop
add
pop
pusha
mov
clc
test
test
jmp
js
cmp
jae
insb
dec
or
cmp
das
cmpsb
adc
cld
xchg
sbb
xor
shl
pop
ficompl
jmp
push
mov
lcall
aad
movsl
xchg
push
jmp
gs
inc
sub
jns
dec
sbb
nop
xchg
adc
stos
fcoms
andl
cmp
jnp
push
mov
cli
fimull
sbb
and
movsb
push
mov
insb
xchg
leave
popf
lret
lea
mov
sub
aam
jle
int
sub
js
shll
jb
test
jmp
rcll
add
lcall
inc
push
shlb
in
xor
xchg
outsb
mov
mov
out
sub
sbb
fdivr
mov
jno
and
dec
pushf
pusha
fcoml
push
xchg
pop
sub
lret
test
or
pop
ljmp
inc
mov
lahf
inc
fstl
imul
mov
lcall
add
jg
adc
lcall
je
adc
xor
fdivrl
lahf
lret
or
sub
dec
sub
push
cmpsb
out
bound
cltd
loop
cmpsb
mov
arpl
lods
and
cmp
push
and
lret
hlt
clc
test
das
dec
dec
push
lcall
inc
imul
fmull
inc
sbb
mov
inc
jg
add
scas
sti
lods
aaa
daa
iret
dec
mov
gs
pop
movsl
add
fwait
daa
loop
jnp
aam
outsl
push
test
arpl
jne
adc
and
jl
cs
idivl
insl
inc
sub
inc
ss
data16
sub
mov
rolb
cltd
push
das
ret
data16
add
push
dec
into
jb
inc
push
pop
xor
add
sbb
inc
sbb
xchg
pop
xor
push
xor
pop
push
add
jge
in
dec
inc
mov
and
sbb
jmp
cmp
rol
outsl
test
or
insl
cmp
xchg
outsb
mov
jno
sahf
add
mov
pop
push
xor
jl
push
jo
das
aaa
mov
mov
cmp
and
xor
sbb
pop
mov
je
inc
jb
adc
fbstp
lods
xchg
sbb
and
inc
in
stos
test
push
fbstp
rorl
jno
in
movsb
dec
adc
hlt
stos
xor
jns
jle
sub
dec
cmp
js
add
aam
rcll
mov
lahf
mov
jle
push
ret
fisubl
dec
stc
lret
lret
mov
arpl
lea
inc
les
mov
or
push
movsb
ficomps
jb
rcll
imul
mov
pop
jne
lea
xor
inc
xchg
repz
pop
cmp
mov
rcl
mov
pop
jp
fistpll
cmpl
xchg
icebp
js
cmpsb
imul
push
push
arpl
xor
ja
xor
sub
adc
imulb
std
outsb
stc
es
xor
insl
sbb
inc
add
ror
push
mov
outsl
or
pop
pop
orl
bnd
cmpsl
sti
les
pop
mov
sarl
ss
or
inc
mov
inc
fidivl
pop
or
cmp
aaa
sbb
fisubrs
push
adc
cmp
rcll
fdiv
sti
and
jns
adc
mov
cmp
movsb
push
or
rcll
xchg
popf
push
push
mov
push
xchg
pushf
sbb
flds
cli
push
mov
xor
aas
dec
xlat
mov
lahf
jns
fdivs
jmp
inc
pop
mov
pop
cli
rcr
ljmp
mov
mov
xor
mov
je
clc
cmp
cmp
pop
and
pop
sarb
push
mov
cmp
lock
cmp
fsubrs
mov
add
push
lret
imul
push
mov
std
dec
outsl
mov
and
xlat
mov
pop
pop
xor
sub
dec
idivb
mov
cmpsb
and
dec
mov
xor
add
das
push
sbb
repnz
xor
inc
or
jmp
jle
movsb
lock
jecxz
and
iret
mov
adc
cmpl
clc
mov
pop
hlt
ljmp
adc
pop
jg
popf
mov
imul
popa
mov
sub
jge
fisubl
jg
inc
mov
shl
sahf
cwtl
fwait
addr16
push
repz
inc
roll
out
imul
pop
fdivr
stos
fld1
ja
shlb
mov
into
jmp
xchg
add
into
sbb
imul
cmc
xlat
or
repz
call
imul
cmp
xchg
push
mov
addr16
xor
mov
xchg
lcall
fadd
xchg
bound
jo
inc
mov
scas
jecxz
jae
fwait
insl
popl
ret
push
sbb
cwtl
pop
and
das
adc
int
mov
out
cmp
ret
xchg
mov
into
lea
leave
sbb
iret
stos
cmpl
mov
and
jb
jae
jns
mov
jg
add
into
rorb
add
ss
adcl
rolb
popa
sar
jl
repz
pop
xchg
mov
mov
popa
mov
lahf
outsb
out
sub
mov
pop
js
cmp
popf
daa
in
mov
arpl
and
nop
ds
xchg
sub
sbb
mov
mov
mov
xor
pop
dec
pop
out
push
xchg
test
icebp
iret
shll
pop
fs
add
in
sahf
aad
iret
lods
push
es
inc
inc
rorl
sbb
and
xor
iret
pushf
loopne
shlb
cld
fnsave
jle
and
lcall
ror
scas
mov
mov
pushf
lock
sbb
out
mov
pop
jle
loope
call
scas
dec
mov
cwtl
je
xor
xor
push
mov
test
jl
imul
adc
fwait
and
inc
rol
fistps
sbb
xchg
xchg
in
testb
dec
sbb
cmc
xlat
inc
xchg
pop
xor
in
andl
cmp
aaa
pushf
add
jl
mov
push
rcr
or
stos
sub
xchg
xchg
pop
or
adc
cmp
in
pop
pushf
inc
loopne
xor
pushw
pop
out
mov
shrl
fstl
test
fcoml
xchg
fisubrl
lods
lds
mov
lret
dec
adc
and
cmp
enter
shrb
adc
or
addl
mov
push
jg
sbb
mov
dec
pop
ljmp
fists
lds
dec
mulb
jge
dec
or
mov
mov
sub
ret
imul
movsb
pop
outsl
sbb
jns
loope
adc
sub
in
sahf
mov
mov
pop
test
xchg
call
insb
mov
jae
les
jnp
jmp
repz
and
inc
dec
fnsave
cs
stos
fists
sbb
xchg
mov
sbb
aaa
add
pop
int3
pop
lahf
mov
cmp
je
arpl
pop
daa
jbe
outsb
js
mov
add
mov
sub
movsl
xchg
sub
insb
or
push
stos
pop
pop
xchg
rclb
loope
je
jne
pop
mov
pusha
cmp
jbe
or
int3
inc
popf
movsb
or
mov
test
sub
ss
into
mov
int3
add
aad
xchg
sub
pop
xchg
or
pop
and
iret
lds
and
lock
pop
push
test
std
cmpsl
sti
scas
sbb
jge
aaa
sub
mov
arpl
inc
add
adc
mov
test
out
and
cwtl
push
mov
aad
rcl
xor
mov
xchg
arpl
dec
lcall
cmp
fsubr
nop
and
mov
scas
sub
push
xchg
ds
mov
adc
rolb
call
add
push
ror
in
les
jmp
dec
rorb
pop
out
jo
sbb
shr
lock
loop
mov
js
int
pusha
test
inc
insb
dec
inc
push
and
clc
and
je
xchg
xchg
in
in
ljmp
dec
inc
add
mov
adc
xchg
std
lret
ja
jecxz
clc
lods
int3
in
cmp
mov
in
jo
les
loopne,pt
push
inc
pop
pop
incb
addb
repnz
fwait
les
fisubrl
and
sbb
sbb
fidivrs
test
jb
or
push
or
arpl
movsb
jle
movsb
sub
or
sbb
testb
mov
xchg
pop
in
cltd
daa
jbe
shlb
xor
hlt
and
out
xchg
rolb
in
shll
pop
pop
or
iret
aad
cld
mov
stc
cmp
movsl
ss
rclb
push
std
fwait
sbb
adc
mov
dec
lcall
mov
fs
jno
aas
loop
dec
adc
add
aam
dec
pushf
push
push
and
mov
add
adc
daa
lahf
sbb
enter
cli
jbe
pop
loope
mov
ja
jno
fisttpl
pop
test
out
rolb
add
fcmovb
lret
leave
inc
jnp
lock
pop
les
test
mov
fiaddl
lods
icebp
test
and
popa
mov
cmp
loopne
nop
pop
cmpsb
lcall
daa
pop
loope
jl
lods
popf
dec
mov
imul
xor
dec
pop
test
push
lret
jo
subl
inc
inc
ss
push
pop
mov
andl
push
cmp
xorl
ljmp
sti
repz
dec
inc
cmc
icebp
xor
daa
push
pop
shll
push
pop
sbb
sub
or
xor
shl
mov
jbe
mov
push
call
data16
lods
and
insb
nop
add
push
iret
jecxz
dec
cmpsb
or
mov
loopne
dec
jnp
pusha
xlat
pop
xchg
adc
lcall
mov
lahf
mov
mov
inc
fdiv
popa
or
fs
cmp
push
dec
clc
ds
mov
data16
imul
jns
or
fistps
std
inc
push
imul
fldl
scas
movsl
add
mov
cmpsl
pop
mov
out
repnz
movsl
fiaddl
push
pop
dec
in
pop
push
jg
sbb
jmp
stos
ja
aam
mov
stos
add
or
rclb
dec
pusha
jecxz
jbe
mov
aam
cmp
jbe
int
mov
add
cmp
enter
mov
testb
call
mov
add
mov
icebp
fisubrl
stos
les
push
and
std
cwtl
jo
push
imul
mov
dec
popa
pop
inc
dec
push
loopne
xchg
jmp
add
pop
sub
aam
decb
jl
dec
mov
adc
push
xchg
pop
dec
jp
cmpsb
mov
std
or
cmp
iret
mov
ret
testl
inc
mov
pop
movsl
add
dec
sbb
mov
jmp
lret
mov
faddp
xchg
pop
pop
xchg
sub
cmpsb
mov
and
sahf
dec
in
jns
lahf
push
lods
xor
jle
je
jmp
jae
das
gs
popa
rcrb
fbstp
movsl
or
push
out
dec
adc
jle
outsl
inc
add
insl
sub
lock
mov
cmpsb
cmpsl
outsb
sbb
filds
sti
xchg
jnp
and
sbb
std
ret
cli
pop
rorl
add
sub
pop
add
cli
decl
rcr
and
xchg
clc
fwait
mov
push
repnz
pop
shrl
filds
dec
pop
mov
xchg
nop
push
scas
stos
push
sti
adc
inc
popf
and
inc
add
or
cld
into
xchg
outsl
dec
and
test
ss
mov
dec
scas
inc
inc
popa
mov
popa
icebp
loop
and
pop
aas
les
out
cmpsl
add
jg
mov
mov
mov
mov
out
mov
mov
cmp
popf
test
in
sahf
test
cmova
aad
insl
xchg
pop
push
jns
sti
das
movsb
jbe
push
outsb
jb
repz
stc
sbb
lea
dec
xor
out
cmp
in
mulb
mov
addb
iret
test
adc
xor
fdivs
in
xor
movsb
xchg
shrb
sahf
je
test
jge
xlat
call
or
xor
xchg
mov
dec
bound
aad
sbb
or
xchg
sub
out
push
add
aam
mov
pop
call
inc
pop
xor
xchg
rcll
inc
icebp
jb
cmp
shrl
inc
adc
in
shl
jle
xor
cwtl
bound
push
xchg
mov
mov
daa
stos
push
in
mov
leave
fdivp
sti
fs
dec
ja
popa
push
push
nop
dec
mov
dec
aas
fcoml
movsl
and
sti
iret
test
in
call
jae
mov
fildl
pusha
cmp
mov
rolb
xchg
inc
adc
lds
orb
repz
test
stos
dec
cltd
push
sub
xchg
mov
sub
adc
jle
int3
ss
ljmp
insb
push
mov
cs
hlt
sbb
jbe
scas
sti
mov
add
adc
pop
loope
jg
fldl
fs
and
stos
in
inc
cltd
inc
cmp
add
movl
cmc
mov
mov
imul
xchg
call
je
cmp
into
and
jl
adc
fiaddl
addr16
xlat
lock
mov
mov
and
cltd
xor
popf
popf
jmp
mov
jns
mov
cmpsl
push
cmc
scas
mov
sbb
ficompl
ret
push
lock
ret
sbb
lret
pop
add
mov
das
repz
xchg
movsb
mov
dec
cmc
mov
outsl
fsubs
outsl
cmpsl
repz
fsubs
stos
loop
inc
inc
dec
inc
int3
jp
icebp
shr
fbld
or
imul
data16
xor
jno
or
int3
imul
aas
lds
jne
sar
data16
adc
leave
adc
mov
repz
jne
cmpsl
add
add
ja
mov
xor
jmp
dec
pop
fisttpl
mov
dec
fstpt
mov
push
and
xchg
cmp
push
dec
mov
fmul
or
xor
mov
mov
xchg
inc
inc
push
out
sbb
mov
into
jne
dec
movsl
jo
mov
js
inc
mov
andb
cmpsb
cmp
mov
stc
add
sub
mov
adc
mov
lock
cmpsl
pushf
sti
out
xchg
mov
push
ds
cli
push
cmp
in
xor
mov
or
mov
imul
imul
adc
dec
jae
jge
mov
jae
inc
or
inc
lahf
das
in
push
cltd
lock
ret
fldt
or
cs
lods
das
inc
mov
xor
push
and
leave
les
pop
pop
out
out
mov
inc
rcrb
subb
sarb
push
aam
dec
xchg
ja
popa
bound
and
cli
jne
scas
jo
inc
andb
cltd
adc
icebp
mov
fwait
sarl
aaa
pop
add
push
adc
test
lret
repz
adc
jmp
loope
jb
imul
mov
sub
push
loop
repz
mov
sub
enter
push
stos
xorb
sub
in
dec
sub
sub
mov
push
shrb
adc
fcmovnbe
pop
clc
jecxz,pt
test
pop
mov
mov
lahf
mov
push
nop
jmp
and
test
bound
js
push
sarl
cwtl
pop
push
xor
hlt
in
mov
xchg
pusha
xchg
xlat
cwtl
incb
jl
mov
jbe
insl
xchg
mov
stos
sub
scas
movsl
test
sbb
cmp
hlt
add
rcll
or
push
xor
cmp
cmp
std
int
xorb
pop
mov
inc
aaa
sbb
sbb
cmp
outsl
outsb
cmp
mov
jp
rorb
or
daa
jno
cmc
push
aaa
cmp
cmp
adc
and
add
push
inc
hlt
mov
push
push
repnz
dec
or
clc
data16
xchg
jp
pop
add
push
jae
testb
or
inc
mov
leave
sub
mov
gs
push
and
scas
pop
fwait
rep
push
mov
mov
dec
stos
xor
push
inc
jl
stos
cmp
or
rcrl
or
cmp
push
ljmp
xor
push
stc
cs
repnz
je
hlt
stc
in
mov
sub
mov
pop
mov
gs
mov
fisubrl
dec
xlat
enterw
orb
inc
mov
clc
push
jnp
sbb
fstpl
mov
mov
mov
insl
shl
or
mov
xorb
and
ret
mov
shl
sub
jg
jne
xor
mov
cmpsl
jecxz
sub
adc
xor
dec
sahf
ss
movq
cmp
fs
pop
xor
push
xchg
mov
and
mov
jmp
mov
cld
mov
push
outsl
sbb
shlb
test
loopne
pop
cmp
pop
mov
xor
imul
lret
push
pop
punpcklbw
aad
into
mov
jge
dec
jae
cld
jle
test
call
outsb
ja
ret
xchg
fs
ja
vorps
fcmovbe
call
xor
popa
cmp
jmp
and
and
sahf
dec
jl
pop
pop
adc
insl
fisttps
and
dec
lock
pop
xchg
lahf
push
jbe
sbb
adc
je
dec
mov
xchg
mov
jle
jb
pop
push
scas
aad
add
ficomps
sub
scas
in
and
in
dec
js
or
bound
and
dec
icebp
dec
enter
stc
in
ret
out
fcoml
pop
lret
cld
xor
mov
in
lds
xchg
xchg
into
fcmovne
inc
fstps
into
cmp
push
mov
mov
pushl
mov
icebp
rclb
sub
pop
clc
mov
jmp
mov
gs
mov
cli
adc
push
ljmp
mov
sti
dec
adc
test
jp
cmp
jecxz
ficoml
mov
aad
sbb
push
sbb
sti
lcall
mov
pop
aad
stc
jmp
push
insl
push
in
cmpsb
inc
jnp
ljmp
bound
mov
rcrb
jbe
cwtl
dec
jecxz
stos
mov
inc
call
push
pushf
in
call
mov
out
mov
pop
mov
push
sub
scas
push
cmp
adc
pop
and
jb
or
fsubp
xorl
or
out
sbb
pushf
cmp
andl
cmpsb
pop
addr16
imul
jb
lcall
inc
cs
mov
adc
cmp
mov
lret
cli
sti
mov
add
outsb
xor
mov
pop
mov
arpl
js
repz
sub
int3
cmc
sub
dec
scas
pop
jle
loope
xchg
out
sub
jno
out
jae
test
dec
add
xchg
rcrl
dec
and
aad
sbb
mov
and
push
insl
xchg
outsb
repz
imul
into
loop
push
pop
adc
pop
adc
add
sbb
push
sub
mul
pop
mov
es
dec
out
and
lret
scas
jmp
loopne
sbb
xchg
outsb
and
sub
ss
and
je
push
scas
or
pop
and
push
xchg
pop
adc
fld
push
inc
inc
inc
cmp
div
movsl
ss
bound
push
xor
sbb
mov
jo
dec
mov
mov
add
xor
add
push
movsl
xchg
out
inc
fisttpl
sbb
lods
add
jae
dec
push
call
in
ds
mov
rcr
push
pop
stc
pop
sbb
and
scas
mov
mov
outsl
dec
ss
jb
jge
enter
cmc
std
aas
add
xchg
in
inc
lods
or
in
jae
icebp
outsl
in
jge
jg
add
adc
std
dec
pop
les
pop
inc
into
and
les
xor
das
popa
das
mov
mov
outsl
pusha
add
jae
repnz
jns
cwtl
xor
push
into
fimuls
adc
insb
and
or
ss
ljmp
in
mov
pop
jae
sahf
and
xor
mov
sbb
in
push
imul
mov
xor
cs
add
fistl
adc
pop
inc
xchg
lea
in
int3
mov
push
aas
sub
pop
and
mov
std
call
xor
out
xor
sub
lret
xchg
sti
idivl
ffree
add
xchg
push
daa
aam
sbb
lret
or
fdivrs
jae
into
mov
aam
aam
pop
aaa
add
mov
pop
into
cmp
out
aaa
sahf
es
inc
std
and
sbb
jbe
imul
or
jae
shrl
dec
leave
or
cmp
xchg
loopne
pusha
je
popl
jmp
out
jne
xchg
jle
aad
cwtl
mov
inc
into
cmp
rol
shrl
insb
aas
mov
cmp
push
pop
pop
mov
loop
inc
mov
rcr
mov
bswap
imul
sbb
dec
dec
stc
lret
gs
int
push
test
dec
popf
into
lcall
xor
imul
add
xchg
stos
jmp
sub
scas
jno
add
imul
jge
lret
and
sub
fcomps
movsl
outsb
sbb
mov
sub
sub
rclb
dec
loop
adc
push
loope,pt
pop
inc
andl
ljmp
xor
sub
ror
and
mov
mov
mov
or
pop
mov
jns
push
sub
rol
cli
and
scas
sbb
sbb
mov
ficomps
push
add
mov
xchg
gs
aas
cmc
cwtl
dec
pop
movsl
loope
and
imulb
in
iret
or
mov
push
and
fstpt
or
lea
sub
jae
push
fwait
xlat
iret
ss
pop
or
xor
jge
sbb
xor
mov
cwtl
mov
jnp
arpl
xor
inc
push
inc
add
and
loope
jne
lea
inc
jo
xlat
rol
inc
jo
mov
or
aad
fmul
cmp
xor
push
scas
fwait
jne
loop
mov
add
cli
inc
out
nop
mov
mov
iret
add
pop
and
repz
push
in
inc
pop
cltd
or
scas
add
pop
roll
lahf
leave
dec
and
sbb
xchg
or
adc
xchg
into
in
xchg
xor
add
cmpsb
jo
dec
cmpsb
ljmp
inc
dec
arpl
mov
lret
insb
sbb
dec
and
shr
leave
adcb
popa
ror
jmp
iret
jbe
sub
jae
push
mov
xchg
in
xor
testb
mov
xchg
call
enter
rcll
sahf
sti
and
lods
inc
lret
shlb
insb
or
sbb
rol
add
mov
ja
fxam
xor
mov
out
popf
addr16
js
cmc
or
cmp
xor
sbb
hlt
les
fs
mov
push
or
aaa
cmc
xchg
les
pop
dec
cmpl
imul
outsb
lahf
das
jbe
fucomp
push
stos
jecxz
hlt
jg
sub
das
shll
sub
out
jmp
movsl
jmp
cs
stos
mov
and
scas
stc
push
mov
int
pusha
pop
add
aas
xor
inc
mov
rep
aaa
and
gs
inc
andb
fcoml
xor
cmp
fbld
xchg
aam
xor
mov
in
adc
out
cwtl
mov
push
or
push
das
gs
or
movsb
mov
test
and
inc
pop
in
and
pop
rcrb
adc
mov
push
xor
clc
pop
test
sbb
or
stos
addr16
out
xchg
mov
adc
or
mov
mov
movsb
pop
mov
cmp
cmpsb
testb
cwtl
test
cmp
sbb
stos
out
xlat
cmp
ss
push
or
inc
cmp
or
lods
adc
sti
xchg
aaa
mov
inc
and
jmp
mov
sub
cmp
jb
sbb
sub
bnd
xchg
xchg
dec
mov
xchg
orl
pop
jl
rorl
test
ficoml
fdivs
fucomip
ljmp
ror
call
lds
sbb
push
mov
outsb
mov
pop
adc
sub
inc
mov
aas
mov
adc
mov
fnstenv
jb
or
pop
xchg
mov
insl
data16
jmp
jp
cwtl
jg
push
cmp
outsb
add
das
orl
push
enter
xchg
pop
jne
pop
jp
js
xor
outsb
int
mov
js
and
dec
add
lods
out
xlat
inc
dec
stc
dec
xlat
sub
add
xor
test
out
lock
into
pusha
mulb
das
int
pop
in
push
clc
das
bound
pop
cld
xchg
int3
mov
std
and
and
dec
lods
insl
mov
lahf
ret
negl
idivl
sbb
add
pusha
cmpsb
xchg
add
sbb
xor
xor
mov
xchg
pushf
inc
fwait
insb
daa
add
std
daa
sbb
pop
out
pop
jnp
fisubrl
les
inc
adc
dec
jmp
outsl
cs
cmc
cmpsb
lods
fwait
fs
cmp
mov
mov
and
out
dec
xorl
mov
test
jmp
xchg
inc
dec
dec
movsb
push
mov
iret
dec
shl
sbb
dec
inc
push
fwait
mov
dec
jg
xchg
inc
jb
ffreep
cwtl
out
inc
xchg
je
pop
dec
into
inc
sbb
rcr
in
jp
sarl
cmp
pop
hlt
test
pop
pushf
rcll
push
xor
xchg
xlat
lds
sub
icebp
scas
rolb
and
hlt
bound
or
test
cltd
js
call
xor
pop
ret
jns
push
jmp
cmp
pop
ljmp
push
push
mov
out
mov
sub
sub
out
mov
mov
cmpsb
and
enter
sbb
push
aas
push
adc
mov
sti
cld
sub
adc
and
jmp
mov
push
add
cmp
mov
cmp
lods
xchg
pop
andb
mov
xchg
cmpl
xor
jno
es
mov
ret
sbb
pop
sbb
fs
imul
cmpsb
jb
pop
mov
popa
imul
jnp
fdivl
pusha
rorb
push
jne
ret
pop
lods
xchg
adc
inc
jmp
mov
in
jbe
ret
movsl
mov
ss
sbb
inc
or
bnd
sbb
push
add
mov
or
mov
sbb
lock
leave
addl
mov
pop
mov
in
mov
mov
xchg
jns
xchg
or
fsubrs
push
jle
fistpl
pop
dec
fs
mov
or
pop
sbb
fs
popf
cmp
int3
pop
insb
inc
dec
push
call
xchg
int
inc
or
mov
out
mov
sub
in
xchg
in
decl
mov
sub
popf
sbb
add
cwtl
and
add
sbb
sub
into
cmp
scas
xchg
andb
aaa
sbb
lret
add
loope
sub
icebp
rcll
les
insb
test
das
cmpsb
popa
lods
push
mov
dec
sub
add
aam
mov
call
inc
jno
pop
xor
scas
std
xor
jae
sbb
cli
pop
mov
jmp
jmp
cld
xchg
xor
popa
dec
fldenv
or
lock
fisttps
std
shlb
cmc
add
xchg
cmp
enter
lahf
xchg
mov
aam
mov
or
jecxz
enter
cmp
in
push
ret
sahf
jae
cld
mov
sub
and
and
jb
sbb
cmp
adc
notl
cmp
mov
push
xor
sahf
cmpsl
test
outsb
sti
out
pop
insl
loop
loopne
aad
jno
xchg
sti
int
mov
jp
dec
int3
sbb
and
cli
mov
in
cli
mov
cld
mov
cmc
outsl
mov
and
pop
faddp
rcrb
inc
lea
push
pushf
inc
mov
inc
adc
sbb
test
mov
in
jne
addr16
insl
rorl
repz
push
pop
fistpll
mov
mov
sub
addr16
movsl
int3
mov
sub
cmc
mov
and
inc
cmp
andb
sbbb
pop
dec
lea
jge
pop
add
inc
push
push
leave
div
sub
mov
add
pop
cmp
fadd
loope
and
in
iret
sbb
inc
out
or
loope
push
mov
jbe
cmpsl
fisttpl
pop
mov
add
daa
bound
es
push
fldl
insb
loope
dec
fimuls
mov
xchg
jmp
lret
insl
fwait
lcall
xchg
or
xor
jns
push
jmp
pop
in
adc
hlt
mov
out
fwait
mov
fs
sub
mov
cld
arpl
nop
inc
sub
xchg
mov
gs
dec
mov
sbb
rcl
in
sub
jmp
stos
mov
sbb
add
adc
mov
test
cmpsb
push
dec
cmp
lds
std
scas
mov
sbb
push
call
shrb
dec
jne
test
inc
rolb
test
xchg
lcall
and
mov
mov
jge
fsub
sub
xor
lock
cmp
adc
xorb
mov
in
cmp
mov
cmp
ficomps
loopne
bound
les
shl
aaa
es
lds
push
jecxz
xchg
inc
movsl
jp
movsl
int3
scas
add
and
add
jl
xor
xor
add
lock
loopne
mov
dec
mov
add
pop
insb
push
dec
out
and
xor
cld
outsl
push
scas
xchg
cmpsb
sbb
xor
xchg
pop
mov
cmp
out
iret
fs
and
leave
inc
insb
and
shll
lods
rorl
jo
cmp
pusha
mov
push
in
push
lret
notl
sub
add
inc
push
inc
pop
repnz
sub
xlat
mov
enter
push
jg
cmp
sahf
pop
pop
outsl
dec
cmp
push
ja
dec
aas
js
jmp
addl
repnz
movsb
rorb
push
mov
push
pop
shl
push
stos
lahf
daa
aad
daa
outsb
mov
adc
das
ret
shr
cmp
jmp
pop
shrl
int3
leave
sti
daa
push
push
iret
leave
aaa
jmp
pop
ret
div
aam
jbe
pop
sbb
scas
or
aam
pop
mov
movsb
call
and
stos
cltd
xchg
icebp
xlat
push
add
and
std
ret
jno
mov
xchg
bound
add
xor
lea
sbb
cmpsb
cltd
inc
dec
ret
fucomp
mov
adc
hlt
ret
xlat
inc
push
mov
lcall
mov
or
sub
popf
fnsave
int3
nop
call
pop
sbb
xchg
popl
in
out
out
dec
push
inc
les
jae
ret
lea
sub
or
call
arpl
repz
test
jle
inc
push
out
and
mov
pop
fidivrs
and
add
jae
push
rcll
dec
shrb
and
cmc
jge
jae
xchg
shll
mov
mov
xor
pop
inc
lods
jae
lods
jne
jle
mov
jbe
nop
jmp
daa
pop
push
fwait
push
cmp
repz
test
mov
shll
sahf
mov
xlat
out
pop
dec
add
add
xchg
fistpl
pusha
rcrl
or
mov
push
imul
lcall
add
insb
jle
movsl
mov
adc
bound
test
sub
and
xchg
add
out
pop
cmp
imul
jne
sub
in
add
mov
add
sub
in
or
or
out
xchg
outsb
cmp
cli
sbb
pop
fs
fcoml
sbb
hlt
fldcw
js
xchg
lcall
fdivrs
jg
clc
jp
push
mov
fdivl
xor
das
je
outsl
adc
insb
push
lret
les
push
add
mov
xchg
test
sub
sbb
fidivrs
data16
sbb
push
js
or
sub
scas
imul
jp
and
mov
movsl
xor
mov
test
pop
jg
ss
mov
aas
loop
scas
sahf
fbld
jbe
add
adc
mov
mov
mov
pop
outsl
add
arpl
xlat
aas
test
test
aaa
test
xor
rol
imul
xor
mov
xor
adc
add
cmpsl
test
aam
and
xor
mov
jg
push
notb
jmp
sub
jmp
outsb
xor
scas
xorl
in
sbb
out
out
insb
sahf
jmp
icebp
clc
mov
arpl
or
repz
mov
push
dec
cld
cmpsl
sarb
inc
fisttpll
mov
mov
loope
xchg
dec
out
in
mov
imul
or
mov
int
push
call
xchg
or
adc
mov
fstpl
add
shl
daa
aad
cmp
mov
pop
aad
fstpl
inc
sbb
jge
xchg
testb
jg
push
lcall
ja
hlt
and
mov
cld
adcl
cli
ret
push
rcr
call
stos
jno
mov
and
inc
and
frstor
mov
pop
or
cld
add
sub
ljmp
ret
and
sti
sbb
imul
imul
push
dec
xor
and
movsb
push
aas
ret
ss
test
idivl
xchg
push
cmp
in
in
stc
jb
or
daa
aad
sub
xlat
mov
out
jne
mov
aam
lock
sbb
test
fwait
ljmp
xchg
stos
adc
leave
inc
mov
popa
push
fiaddl
test
mov
shr
push
mov
cmp
pop
cwtl
mov
add
jnp
push
push
push
or
aam
cmc
sbb
push
push
inc
sub
cld
dec
in
fcomps
and
push
daa
inc
out
xchg
hlt
lret
test
dec
push
and
xlat
sub
pop
mov
mov
popf
cmp
mov
std
movsb
or
fidivs
xor
sbb
movsl
out
leave
push
repnz
push
or
pop
cmpb
mov
lret
add
inc
leave
in
push
xor
mov
out
mov
sbb
xor
mov
xor
cmp
mov
cmpl
lcall
sbb
fdivs
adc
jo
popa
mov
pop
sbb
mov
sub
or
mov
sti
mov
pop
inc
inc
loope
call
shrl
bound
ret
mov
mov
mov
loop
std
lcall
mov
jl
push
repz
xchg
cmp
leave
jbe
push
fnstenv
imul
cwtl
dec
andb
lcall
das
mov
aam
push
push
lds
cmp
mov
sbb
insl
cmpb
mov
push
mov
push
lods
adc
pop
adc
dec
mov
nop
ret
xchg
cmpsb
jmp
mov
or
clc
js
cmp
sub
mov
or
sub
js
out
dec
in
lea
mov
xor
sbbl
or
add
mov
mov
loop
pop
cmp
mov
and
and
outsb
sub
xor
and
lods
into
shll
shlb
adc
loopne
inc
mov
adc
fisttpll
sub
xlat
push
fisttps
xrelease
add
aas
push
stc
pop
cmp
fcomps
xor
mov
out
xchg
enter
frstor
mov
std
and
add
mov
inc
add
mov
mov
xlat
xchg
fsts
mov
test
out
hlt
sbb
mov
test
mov
jmp
add
push
shll
cli
pop
add
lock
push
lahf
test
pop
lret
xor
sbb
scas
lods
pop
sub
dec
imul
pusha
test
adc
int3
std
mov
addr16
pushf
out
sbb
push
xchg
sbb
mov
mov
ja
mov
or
mov
cmp
int
and
shl
mov
mov
add
cltd
jl
icebp
xchg
jns
cld
xor
inc
test
lds
scas
sbb
lods
push
stos
rcr
adc
hlt
scas
inc
pop
xor
imul
pop
and
in
aas
orl
jnp
hlt
lods
sbb
and
in
lret
adc
arpl
rorb
sbb
roll
cltd
sbb
outsl
outsl
jo
add
push
mov
pop
xchg
into
sub
out
jp
mov
jecxz
and
pop
mov
mov
inc
xchg
shlb
sbb
stos
xor
mov
sbb
cli
or
add
cmpsb
cwtl
mov
fildl
push
add
xchg
mov
int3
add
sbb
jecxz
sub
fildl
lods
mov
push
or
cmp
cmp
mov
addl
lock
mov
mov
mov
dec
repnz
mov
sub
or
inc
fildl
jle
jb
pop
repz
outsl
int
xor
add
in
xchg
es
push
out
shlb
inc
addl
jp
jno
mov
sub
cs
fmull
fxch
test
mov
ja
cli
sbb
hlt
inc
ja
loop
sub
enter
or
mull
mov
loopne
in
lahf
rcrb
adc
adc
cmp
mov
or
subl
cmpsl
add
fwait
xlat
clc
mov
insl
mov
data16
sbb
aas
loop
and
and
mov
xchg
out
adc
cmovge
ljmp
xor
ffree
jnp
es
fdivrs
xchg
es
clc
shlb
mov
sbb
dec
jae
loopne
jnp
unpcklps
jns
and
fnstcw
xchg
icebp
jmp
nop
xor
jle
out
dec
mov
pop
cmpsl
movsl
sbb
sub
into
out
inc
clc
xor
insl
incb
add
add
inc
rcl
call
sub
add
xchg
insl
outsb
mov
ja
add
shll
mov
add
iret
int
mov
cwtl
lret
ret
mov
xchg
pop
test
and
add
mov
cltd
loop
mov
cmp
xorb
jnp
mov
sti
jne
inc
mov
movsb
repz
push
jae
add
push
test
out
cmp
movq
sub
fs
sbb
out
push
aam
rcll
ljmp
dec
sbb
pop
iret
std
push
stos
xchg
mov
ss
les
lahf
or
mov
lea
add
imul
cmp
jge
movsb
sbb
mov
sub
push
repnz
and
mov
mov
out
fdivs
mov
or
movhps
clc
pop
lods
add
jge
push
imul
add
jnp
imul
push
lods
push
inc
int
push
pushf
insl
and
andb
test
je
outsl
push
inc
fldl
jno
inc
leave
movsl
je
jo
mov
sbb
aam
scas
arpl
sub
es
mov
in
or
in
push
sub
into
adc
and
lcall
dec
mov
or
cltd
or
adc
stos
xor
iret
test
adc
das
pop
or
iret
pop
add
jnp
push
loop
pop
arpl
popa
int
ror
jg
pop
loope
addl
xor
std
and
scas
cli
cmp
ret
or
xor
pop
jmp
or
out
inc
xchg
pop
pop
push
enter
popf
jnp
daa
cmp
sub
cmp
mov
jno
sbb
insl
jmp
out
push
hlt
leave
xor
jmp
push
mov
pushf
inc
cmp
fisubs
lcall
loopne
fisttps
shl
dec
inc
xchg
inc
pop
dec
insl
sbb
sbb
lret
fildll
mov
and
sbb
mov
aad
js
adc
les
cmp
push
mov
mov
int3
rorb
mov
repz
fisubl
jle
mov
add
push
ja
icebp
lcall
inc
outsb
add
mov
cmp
sub
popa
adc
xlat
jb
mov
shll
xchg
sbb
mov
xchg
lds
jae
das
push
mov
push
jno
sbb
insb
adc
sbbb
imul
loop
mov
outsb
into
jle
sbb
aas
pop
mov
jne
loopne
mov
testb
stc
aad
sub
jne
sarl
fptan
dec
lcall
ljmp
rclb
mov
fisubs
fcoms
cmc
ljmp
inc
das
mov
outsl
xor
lret
jmp
dec
sub
fcmovnbe
add
loopne
inc
and
fcompl
mov
or
faddl
sbb
add
fisttpl
idivl
cmp
sbb
mov
push
push
sbb
xchg
and
add
jns
xchg
xchg
xchg
push
fwait
jns
push
adc
push
add
test
cmc
pop
adc
je
jae
cs
jnp
xor
pop
sub
test
adc
cmp
mov
call
pop
inc
or
adc
ljmp
cmc
in
jo
mov
divb
aam
fwait
in
push
inc
mov
loope
adc
jns
xor
jbe
jno
add
sub
cmp
mov
inc
adcb
mov
stos
insl
push
scas
xor
sbbl
pop
repz
mov
inc
pop
inc
sti
shl
xchg
push
insl
aam
pusha
mov
adc
scas
das
stos
into
xchg
dec
int
jns
dec
leave
iret
lahf
jg
in
mov
add
shrb
aad
mov
sbb
mov
xchg
fwait
inc
out
jmp
jne
adc
andb
push
xor
mov
mov
ret
in
mov
int3
mov
fwait
leave
or
push
in
stc
out
mov
verw
dec
cltd
push
mov
push
xchg
add
inc
push
jl
test
rcll
xor
gs
xor
xor
cmpsb
cmpsl
inc
add
push
fsubrs
add
mov
nop
fcom
sub
dec
mov
lock
xchg
aam
out
pop
fs
nop
cltd
xchg
inc
addr16
stos
in
iret
stos
rcr
in
push
jne
add
lds
ret
jmp
inc
pop
rcrb
in
loope
rcrl
movsl
sbb
outsb
mov
dec
xlat
les
pop
cli
push
lock
xchg
and
mov
pmaxsw
jnp
pop
out
cltd
std
jmp
xor
lea
jge
out
xlat
ffreep
sar
xchg
mov
mov
cmc
or
xor
sbb
cmpl
insl
cld
xchg
imul
pop
mov
fcoml
std
scas
mov
stc
push
mov
jns
lods
stos
leave
in
out
iret
scas
xor
aad
and
jne
incl
adc
push
nop
and
adc
shlb
jo
xchg
jns
or
std
cmp
aad
mov
jns
jl
pusha
fcoms
daa
inc
jae
mov
sbb
dec
xor
inc
sub
mov
pusha
sbb
sbb
xchg
sub
scas
into
dec
stos
cmp
outsb
mov
andb
xchg
xchg
or
mov
push
aaa
adc
and
arpl
push
rcrl
dec
fldz
pop
pushf
insl
cmp
rclb
jno
js
and
jg
ss
sbb
pop
imul
bound
xor
imul
dec
clc
fdivl
xor
cmp
inc
ds
aam
xchg
and
arpl
aas
push
pop
sub
xor
cmp
shll
stc
fs
mov
mov
sbb
cmc
mov
pop
lods
pop
rorb
push
mov
aam
out
insl
push
scas
push
sbb
mov
xchg
decb
imul
push
jnp
adc
stc
in
das
mulb
xchg
jecxz
add
mov
jmp
mov
jne
fsubrl
loopne
sti
jno
push
cmpsl
lods
out
push
test
inc
nop
mov
fidivl
adc
loopne
dec
ja
cltd
sbb
inc
jg
lods
seto
test
pop
pop
sti
xchg
shrl
xchg
dec
jle
mov
out
orl
negb
jnp,pn
adc
cli
adc
mov
pop
jae
mov
in
add
pop
sub
inc
or
mov
sarl
subl
sub
jmp
jbe
mov
testl
xchg
inc
push
call
dec
mov
mov
shll
ss
clc
pusha
dec
push
sbb
mov
xchg
ret
or
xchg
fisttps
roll
mov
icebp
xor
xor
pop
icebp
xor
out
cli
cmpb
imul
jnp
mov
xchg
cli
mov
dec
movsl
fstl
test
inc
dec
pusha
jnp
cwtl
imul
lahf
xchg
test
rcrb
stos
sbb
mov
mov
std
jae
jl
movsl
push
adc
ss
and
adc
testl
std
xchg
jo
arpl
add
jl
ja
rclb
xchg
out
xor
push
inc
jnp
lahf
cmp
cltd
cmp
aas
ja
dec
cmp
shll
cmp
mov
adc
dec
xchg
bound
shlb
inc
push
ss
out
aam
clc
xchg
clc
push
pop
push
jne
dec
sarl
in
pusha
sub
sub
repz
pop
nop
mov
or
mov
incb
outsl
jns
jmp
hlt
pop
fisttpll
cwtl
pop
fmul
pop
dec
xor
pop
addr16
push
inc
xchg
dec
out
out
mov
inc
movsb
mov
test
pop
push
inc
adc
and
out
mov
jns
sub
iret
sub
leave
mov
cmp
mov
xor
add
aaa
cmp
mov
fs
hlt
xchg
mov
ds
jbe
mov
or
cmpsl
popa
ret
adc
sub
int3
testw
loop
mov
pop
repz
test
aaa
cmp
adc
jno
push
push
cmpsb
pop
test
cmpsb
fwait
xor
xor
and
lods
jnp
push
test
ja
in
mov
cwtl
lea
pop
pop
sbb
pop
dec
jbe
loop
push
or
adcb
mov
push
out
mov
mov
xor
cmp
push
push
or
sbb
sti
cmp
imul
insb
and
mov
pop
pusha
pop
rclb
jle
outsb
ret
jb
add
mov
mov
ds
cmp
xor
pminub
sbb
stos
fnsave
cmpsb
test
stc
mov
mov
cmc
pop
loop
sub
pop
mov
stc
repz
pushf
pop
outsb
movsl
add
arpl
sbb
bound
fcoml
sbb
cmpsl
inc
fwait
idivl
ljmp
aaa
and
imul
aaa
pop
mov
das
in
jns
mov
push
les
sbb
mov
out
out
pop
jae
loop
sub
in
and
push
jp
pop
fisttpll
jae
scas
jcxz
fs
fisttpll
xor
xchg
rcrl
fisttpll
hlt
ret
test
ret
rclb
push
inc
in
lret
je
lcall
rorl
push
xor
sbb
mov
sub
push
xchg
pusha
fsubr
jne
fidivrs
arpl
mov
mov
lcall
inc
imul
pop
mov
cmp
sbb
movsl
insb
int
ljmp
pushw
aam
in
or
scas
jle
jle
mov
ljmp
repz
test
cmp
loop
xchg
jle
xchg
pusha
roll
dec
mov
cmp
jecxz
ffree
into
cmpsb
mov
outsb
sub
sub
mov
jo
mov
dec
scas
mov
iret
sub
in
push
es
adc
mov
pop
mov
push
stos
sub
xchg
jle
mov
cmp
idivl
jae
repz
call
lret
imul
dec
pop
adc
lea
xchg
stos
push
lret
fs
or
cltd
fwait
xor
bound
mov
sbb
js
arpl
inc
inc
pop
sub
mov
stc
sbb
and
cmp
xlat
push
jns
bound
jg
daa
jns
mov
jno
int3
xlat
mov
jecxz
sub
or
add
jns
mov
pop
add
cmpsb
adc
jecxz
dec
rcl
rolb
js
xchg
call
push
sbb
dec
cwtl
pop
in
add
jae
daa
sarb
jbe
data16
inc
and
cld
push
mov
mov
dec
aaa
ss
or
adcl
mov
cmp
out
mov
add
movsb
pop
add
and
add
mov
out
jecxz
daa
jo
push
xor
movsb
data16
pop
inc
mov
bound
popf
cmpsb
imul
ret
notl
push
loop
sbb
pushf
adc
push
adc
xor
jg
or
inc
clc
xchg
or
push
or
stos
push
cmpxchg
cmc
inc
or
pop
cmp
fists
popf
dec
push
rcr
add
mov
dec
aad
gs
dec
mov
aas
cld
sub
scas
test
pop
decl
aad
call
xchg
pop
inc
das
aaa
aad
inc
cwtl
cmpsb
and
jo
call
dec
andl
in
jp
aam
cmp
mov
xchg
push
dec
pop
dec
mov
xchg
fwait
jne
jmp
mov
jne
or
pop
repnz
adc
jnp
ja
pop
jnp
xchg
dec
hlt
push
mov
sti
and
lahf
movsl
or
or
loopne
xchg
insl
cmp
adc
gs
jae
mov
mov
dec
push
stos
movsl
or
cmpsl
and
dec
cltd
test
dec
inc
dec
out
sub
test
and
lea
shrb
mov
dec
jmp
lds
add
sbb
push
jecxz
test
pop
sti
mov
sub
mov
loop
in
and
xchg
hlt
rcrl
and
xlat
jbe
jl
dec
sub
out
and
sahf
mov
out
lahf
sti
sbb
inc
std
sbb
mov
and
ficompl
popf
pop
into
in
and
mov
repnz
mov
jo
mov
popa
pop
insl
das
into
ja
movsl
lods
and
ucomiss
dec
inc
mov
ret
mov
jnp
ficoml
mov
sub
pop
repnz
mov
pshufw
out
push
lea
adc
cmpsb
xor
sub
out
leave
cmp
pop
cmp
jecxz
repnz
sub
cld
cmpsb
add
divb
xchg
mov
inc
dec
sbb
sbb
inc
dec
sub
fldt
mov
iret
cli
jb
pop
aad
cmpb
jge
inc
sub
push
xlat
in
mov
mov
mov
dec
arpl
mov
xchg
pop
je
sub
push
jl
lcall
pop
addb
addr16
ss
sbb
cmp
adcl
ror
fisubrl
sbb
xor
jns
jns
push
out
xchg
dec
dec
fsubs
fisubrl
in
sbb
insb
clc
add
repnz
shl
inc
mov
dec
or
mov
loope
enter
push
push
jmp
or
xor
mov
jge
sub
mov
addr16
test
pop
mov
lcall
or
and
imul
pop
or
mov
scas
out
repnz
cmpsb
jp
iret
adc
mov
sub
mov
and
push
cmp
xchg
cld
pushf
in
or
sbb
xor
inc
popa
mov
xchg
pop
xor
aad
rcll
mov
xchg
pop
scas
and
call
sub
mov
cmpb
mov
cmpsb
cmp
lret
movsb
mov
adcl
xchg
sbb
loop
push
movsb
nop
enter
jns
lret
mov
aas
jmp
int
sti
fldenv
stos
fistps
mov
lds
mulb
pusha
loop
ret
or
subl
adc
into
jno
or
popa
xlat
and
inc
pop
mov
push
pop
mov
imul
stc
loop
in
cltd
and
outsb
xlat
fwait
dec
aaa
ja
iret
js
shl
test
stos
push
xchg
insl
push
mov
cmpsb
mov
dec
sbb
rcrl
pop
sbb
popa
mov
into
faddl
movsb
outsl
mov
loope
cld
inc
fidivs
shr
xor
lret
dec
and
pop
xor
mov
cld
insl
sbb
inc
push
shll
xor
adc
inc
jmp
clc
pop
mov
pop
lahf
psadbw
in
adc
jecxz
cwtl
adc
iret
lods
imull
out
and
sub
xchg
pop
mov
popa
push
mov
nop
ljmp
cld
adc
in
or
sub
push
repz
sub
lds
fdivrl
sbb
add
idiv
adc
out
out
ja
icebp
cmpsl
or
ret
fsubrs
mov
cwtl
rep
dec
jns
jne
jg,pt
mov
into
mov
fstpt
mov
jecxz
sti
inc
jnp
dec
iret
cs
jne
and
cli
sahf
lahf
loop
ss
dec
loope
jmp
or
push
dec
xchg
add
cmp
xchg
xchg
mov
fadd
mov
sti
cmp
jne
leave
sub
loopne
loop
fs
adc
jae
xchg
or
shr
rcrl
lods
dec
fimull
cmp
mov
sbb
ss
sbb
loopne
test
or
js
idivl
sub
das
push
fwait
nop
ret
pushf
fwait
mov
push
in
mov
ss
mov
push
dec
adc
subl
xchg
mov
mov
xchg
inc
fwait
jb
jmp
dec
fistl
add
mov
mov
dec
sahf
mov
aam
lock
fldenv
imul
mov
jo
out
hlt
pop
adc
in
xchg
jle
or
mov
mov
stos
mov
inc
sub
and
cltd
and
inc
mov
shl
or
shll
fldl
shrb
pop
mov
popfw
ret
ss
fsts
mov
bound
mov
fistps
loope
jb
and
jg
pusha
xchg
ss
dec
sub
test
pop
xor
ret
mov
rcrl
scas
dec
mov
dec
in
sub
sbb
pop
xor
fdivrs
scas
xor
push
int
cld
push
lods
mov
aaa
fdivrp
xchg
cld
pusha
sbb
daa
push
loopne
decl
mov
cmpsl
push
sbb
xor
adc
dec
ja
aam
in
add
sub
inc
faddl
repnz
add
adc
xor
jmp
loopne
mov
enter
out
jmp
insb
jbe
mov
ja
movsb
call
push
mov
jbe
mov
stc
jge
repnz
dec
jmp
cmp
mov
pusha
mov
lret
push
fisubrl
fs
cmp
pop
aas
call
cmpsl
dec
xchg
push
xchg
decl
mov
mov
mov
pop
shrl
fadds
cld
std
push
aaa
lcall
rcrl
and
insb
and
cmp
pop
jp
jge
loop
cli
ja
push
scas
in
cld
out
out
dec
dec
inc
inc
movb
inc
movsl
pop
cmp
xor
add
pop
or
jmp
pop
fdivrl
fadds
imul
inc
sbbl
xor
ss
in
inc
test
lods
cltd
dec
out
movsb
xchg
arpl
iret
fstl
leave
push
add
or
cmpl
cli
imul
and
cmc
dec
xor
xchg
cmpsl
cmp
shrl
insb
mov
imul
mov
notb
out
dec
mov
notl
dec
push
shr
push
add
fwait
stos
sbb
lea
lahf
test
push
stos
dec
call
push
orl
or
into
in
inc
ljmp
in
adc
xchg
pop
jmp
xadd
mov
in
mov
pop
xchg
push
inc
add
push
mov
jge
pop
add
inc
xor
adc
mov
and
push
adc
insl
sarl
idiv
adc
cmpb
mov
mov
js
lods
aaa
cld
gs
sub
sub
call
sub
ljmp
jp
push
ss
pop
cmp
cmp
lea
xchg
or
mov
adc
adc
xchg
out
and
inc
sub
push
daa
pop
into
ret
mov
dec
scas
stos
xor
push
or
mov
stc
mov
push
dec
pushf
push
xchg
mov
repz
test
pop
mov
dec
inc
pushl
dec
pop
das
pushf
pop
mov
daa
in
fs
mov
mov
inc
mov
insl
sub
rcll
xorb
in
ret
cmpsl
mov
mov
add
sub
test
pushf
add
push
cltd
repz
and
and
jbe
dec
in
pop
mov
and
and
es
int
lahf
bnd
xchg
sbb
je
push
sub
mov
scas
insl
popa
and
test
int3
xchg
dec
jecxz
repnz
nop
loop
jns
mov
pop
sbb
xchg
fimuls
jbe
pop
push
fistpll
mov
xchg
or
cmp
push
jmp
mov
xor
inc
sbb
mov
xor
push
lcall
xlat
leave
repnz
cld
fisttpll
and
xchg
divl
push
scas
push
bound
nop
repnz
es
dec
call
sub
test
cltd
insb
fwait
repnz
pop
movsl
outsb
fisubs
inc
sub
les
hlt
mov
push
imul
jns
rcrl
call
fucom
shrd
fcmovu
lea
out
sub
and
fiadds
pop
sub
and
scas
sbb
loopne
fnstenv
pop
pop
faddl
mov
pusha
push
mov
dec
xor
mov
pop
lcall
ss
xor
jecxz
ss
push
push
divb
neg
nop
adc
iret
mov
mov
repz
xchg
les
pusha
or
xchg
ret
xorl
add
xor
dec
imul
js
inc
mov
call
sbb
or
fsubrp
mov
jle
dec
arpl
js
hlt
lcall
outsl
repnz
mov
icebp
call
xchg
jmp
push
aas
call
push
and
inc
adc
fcmovb
shlb
adc
lcall
hlt
das
lock
adc
xchg
and
aam
cltd
mov
add
jp
aad
sti
pop
gs
push
and
das
mov
lcall
push
jg
sbb
cld
pop
xchg
pop
xor
push
cmpl
lcall
pop
lahf
incl
lret
cs
mov
pop
out
cmc
adc
add
inc
mov
cld
push
xchg
cwtl
mov
aad
imul
adc
in
je
int
in
outsl
repnz
ret
ja
and
daa
lcall
roll
fucomip
lock
dec
cmpsl
je
fisubrl
inc
and
or
scas
repz
ja
cwtl
sbb
add
pop
xchg
jg
or
inc
mov
mov
dec
mov
mov
sbb
call
mov
sub
pop
push
cmp
sbb
bound
fcomi
roll
call
ret
mov
rorl
sbb
das
insb
jnp
int3
inc
mov
xorl
popa
inc
ss
mov
mov
dec
imul
out
xchg
or
shrb
dec
pop
push
xor
xchg
sar
or
push
stos
adc
jno
push
aaa
rol
pop
cs
cmc
mov
jle
leave
iret
mov
push
jmp
mov
movsl
das
outsb
push
cmpsb
es
jbe
xchg
jmp
lock
jae
sub
stos
xor
mov
icebp
pop
mov
push
jle
dec
jge
and
xchg
cmp
mov
sub
ds
mov
cltd
popf
bound
push
aas
xor
hlt
adc
push
in
sbb
sbb
sbb
mov
imul
mov
scas
dec
pop
xlat
sbb
fisubl
lods
cmc
jno
xchg
adc
outsl
pusha
mov
imul
pop
jnp
mov
divl
push
xor
lods
add
sub
fwait
mov
and
lock
mov
hlt
adc
into
mov
loopne
add
jle
insb
pusha
int3
test
fildl
clc
pop
sbb
sbb
and
add
lcall
inc
add
cmp
lahf
cli
mov
mov
jl
sbb
inc
loop
jp
and
out
sar
ja
add
push
dec
add
icebp
dec
cwtl
and
and
push
scas
iret
fldcw
sbb
pop
dec
push
mov
in
loope
ljmp
jl
mov
dec
xchg
or
orb
mov
aaa
sub
mov
cmpsb
pop
push
aaa
mov
xor
and
cmc
xchg
xor
rcl
std
std
in
out
arpl
lcall
sarb
mov
aam
ljmp
test
pop
mov
inc
test
xlat
mov
and
and
mov
addr16
or
mov
repz
cmp
mov
or
test
lds
mov
mov
bound
xchg
push
repnz
mov
test
push
and
jp
ret
jnp
int3
sub
sbb
sbb
mov
mov
lock
pop
add
hlt
mov
jecxz
rolb
jae
loopne
jle
push
jns
insb
lss
aad
lea
inc
adc
ss
jbe
out
stc
arpl
scas
cmp
add
pop
push
mov
inc
cmpsl
cmp
jp
xchg
pushf
inc
lret
push
lea
imul
mov
dec
jo
dec
mov
rorl
aam
jb
jl
jnp
dec
xchg
movl
or
and
fistl
mov
or
xchg
pop
dec
adc
lret
icebp
ret
repnz
mov
and
mov
cmp
push
cmp
cwtl
int3
jp
xchg
fsubl
mov
xchg
push
mov
out
cld
sbb
add
hlt
ret
iret
movsb
adc
mov
loop
jo
mov
movsb
insb
mov
sbb
or
adc
fs
sbb
add
test
ljmp
das
frstor
aad
push
pusha
je
sub
jae
or
sub
mov
sahf
outsb
cmp
xchg
xchg
add
push
mov
pop
mov
cmp
test
xchg
xchg
popa
adc
adc
aad
mov
inc
pop
or
inc
mov
sub
mov
push
xor
jns
xchg
jae
pushf
ljmp
push
sbb
xchg
xchg
adc
cs
mov
inc
xor
sub
push
sub
and
addl
dec
and
jno
xchg
dec
and
cwtl
int3
adc
push
push
cmp
pop
mov
mov
sti
sti
cli
mov
bound
mov
dec
ret
movsb
mov
lea
in
enter
xor
cmp
movsb
cmovs
cs
fisubrs
daa
inc
test
push
xchg
in
jle
inc
ss
sbb
adc
cltd
fcomp
lret
cmovns
sbb
adc
fnstenv
stos
dec
imul
sbb
sahf
ds
xor
decl
dec
pop
test
xor
test
mov
and
sbb
imul
mov
leave
testb
andb
fcmovnb
push
lods
cmp
cmp
and
or
in
ds
gs
data16
scas
pusha
mov
sarb
sub
mov
adcb
adc
push
inc
adc
mov
jmp
stos
mov
scas
and
mov
dec
ss
jb
xor
xchg
sub
sub
out
das
sub
and
sub
jne
xor
add
adc
push
in
pop
sbb
pushf
daa
mov
add
in
gs
xchg
mov
sbb
xor
jns
lahf
add
leave
mov
jae
adc
dec
fimull
dec
cmp
sbb
cmp
cmc
pop
rcl
pop
xor
xchg
add
push
xchg
inc
movsl
shlb
lock
push
aam
aas
in
sub
xchg
leave
mov
out
mov
arpl
shl
mov
inc
imul
fstps
mov
loope
adc
mov
add
imul
cld
and
jmp
pop
pop
aam
push
pop
mov
push
hlt
or
xor
dec
test
lds
in
jae
scas
jbe
in
mov
pop
add
dec
loopne
push
jp
and
aaa
adc
cltd
mov
xor
ljmp
push
cmc
jl
push
inc
pop
xlat
xor
pushf
iret
lods
jle
jmp
xlat
and
dec
fbstp
jae
jp
pop
fsubs
push
dec
sub
jnp
mov
xor
jl
shll
outsl
cmp
nop
jns
sbb
in
jmp
or
mov
leave
loop
repz
mov
jb
lahf
lahf
cmp
sbb
and
jmp
scas
inc
dec
push
xor
out
xchg
pop
xchg
mov
and
bound
aam
pop
push
sbb
cmpsb
fsubrs
rclb
ja
imul
dec
push
xlat
movups
add
or
frstor
push
icebp
test
lret
mov
cmp
xchg
xor
cmp
rol
fisttpl
mov
and
ljmp
sbb
mov
lock
and
je
dec
push
shll
pusha
lea
sub
out
pop
xor
mov
and
jns
jp
sbb
popf
push
mov
pop
insb
cs
enter
mov
xor
adc
ja
mov
inc
outsb
leave
cmc
gs
jle
int3
mov
hlt
xor
out
test
repz
jg
ljmp
or
dec
adcb
in
adc
decl
outsl
into
xor
xchg
and
mov
xor
stos
gs
mov
fnsave
pop
inc
sti
sbb
inc
xor
xchg
push
das
insl
mov
lret
int3
out
sub
sub
cli
daa
clc
inc
mov
cmp
or
cmp
fnstcw
inc
add
dec
imul
mov
mov
or
fidivrl
rorb
dec
xor
mov
sub
mov
xor
mov
pop
xchg
inc
pusha
das
repnz
or
pop
insl
ret
into
das
lret
sbb
pop
dec
or
mov
stos
cmp
aad
std
xor
in
sarb
mov
add
xor
mov
pop
sahf
mov
cli
test
or
loope
xor
gs
addr16
adc
ret
dec
into
adc
out
mov
imul
lock
lea
pushf
addl
push
inc
stos
inc
cld
mov
xor
mov
push
mov
push
call
cmp
cld
movsb
cld
rcrb
mov
stc
aad
pop
shlb
inc
aaa
call
sti
push
fs
mov
cmc
fcmovnb
inc
jecxz
push
adc
out
or
xchg
in
pop
xchg
or
lods
cwtl
push
nop
and
mov
add
inc
mov
pop
ss
fstl
mov
lcall
imul
leave
pop
jle
sub
cmp
pop
jge
je
xorb
es
or
daa
or
push
inc
add
aam
mov
push
rcr
sbb
fistps
mov
int3
out
in
outsl
xchg
mov
pop
in
mov
mov
xchg
xor
adc
in
push
lahf
sbb
ret
negb
xchg
cltd
repz
sub
sub
add
or
inc
xor
fucomi
stos
repz
loop
lods
adc
aas
push
sbb
mov
leave
clc
xorb
push
mov
adc
aad
andb
sub
cmp
ficomps
nop
dec
lret
loop
stc
push
mov
mul
add
jb
sbb
sub
lds
mov
pop
or
addr16
sbb
inc
jecxz
fwait
cli
add
fistpl
mov
cltd
mov
gs
pop
cmovbe
push
dec
fldt
js
inc
fisubl
aaa
cmp
sub
xor
add
out
lods
inc
pop
mov
xor
mov
pop
add
test
in
testb
mov
cmpsb
addr16
push
ret
fstpl
fldl
fnclex
in
lret
pop
xchg
inc
adc
mov
in
imul
fs
icebp
xorl
mov
test
fiadds
jmp
dec
call
pop
aas
nop
jno
jnp
pusha
inc
je
test
sub
dec
mov
loopne
daa
js
xchg
inc
or
out
outsb
ret
fiaddl
lds
pminub
ficomps
cld
cli
call
mov
xchg
mov
adc
adc
mov
inc
dec
cmp
shl
clc
cmc
xlat
lret
sub
mov
sub
test
mov
fs
add
data16
pop
mov
pop
add
mov
ja
lds
mov
or
inc
inc
insl
push
and
or
xchg
fildl
ret
fcompl
push
outsl
rcll
js
dec
adc
push
lock
mov
insb
adc
dec
pop
xchg
repnz
pushl
xchg
pop
aam
sbb
popf
lods
or
inc
sub
test
adc
shl
push
insb
or
lret
outsb
xor
cltd
or
aas
or
enter
stc
mov
leave
xor
inc
cmpsl
leave
push
mov
mov
adc
or
mov
inc
movsb
std
enter
stc
movsb
jecxz
daa
add
mov
iret
lds
out
fmuls
insl
inc
xorl
movsb
mov
xchg
cmp
orb
mov
test
dec
jae
ja
mov
pop
mov
repnz
mov
out
dec
dec
orl
popf
out
sub
inc
pop
dec
andl
clc
pop
movsl
adc
movsl
cld
daa
cs
jle
and
aaa
int
inc
sbbl
mov
mov
movsl
scas
pop
sub
cmp
xchg
int3
in
pop
nop
jb
imul
mov
push
lock
mov
mov
test
lret
or
loope
sahf
sarl
add
adc
push
jns
shll
jns
ds
sub
jo
ret
jb
nop
jno
push
sub
add
lds
sbb
je
push
dec
and
or
fistpll
and
shr
dec
je
dec
mov
xor
cli
or
add
mov
arpl
nop
movsb
or
mov
cmp
lret
gs
ret
test
in
inc
mov
mov
cmp
mov
dec
dec
jl
and
push
rcr
mov
add
lahf
rcl
flds
fmull
fs
xchg
or
mov
sbb
mov
lcall
adc
cld
jmp
add
xor
les
mov
push
jl
jmp
push
xchg
arpl
jmp
out
sub
xlat
subb
pop
mov
fsubrl
dec
out
insl
pop
lods
js
rcl
repz
jmp
in
and
das
into
dec
jl
loopne
push
scas
push
out
imul
sub
xlat
mov
fistps
sbb
adc
mov
pop
jbe
add
pop
xor
xor
cmpsl
fistps
or
mov
inc
mov
xor
or
mov
dec
mov
gs
cld
and
fldl
adc
nop
mull
gs
jmp
push
rcrl
in
sahf
idivl
mov
sbb
add
std
pop
add
sahf
push
add
sar
sbbl
add
push
pop
pop
mov
sub
int3
inc
aas
out
cmp
js
iret
subb
mov
pusha
ror
xchg
jb
inc
fstps
in
rcrb
fwait
ja
iret
nopl
lret
rcr
jae
cmp
xchg
sbb
sti
popa
and
or
nop
hlt
and
sub
mov
jns
mov
pop
cmpsb
aad
fcmove
aaa
inc
push
mov
call
sbb
xchg
inc
mov
scas
out
cmp
popf
filds
cmpsb
xorl
loop
jl
xchg
jbe
ja
ljmp
in
cmp
and
out
jo
pusha
push
xlat
aas
shl
pusha
mov
xchg
into
jb
sub
fwait
pop
fs
dec
xlat
mov
mov
stos
mov
pop
dec
addr16
and
sub
sbb
std
scas
xor
les
arpl
dec
fsubrl
in
or
push
into
push
dec
rolb
and
push
sbb
aas
sarl
rclb
adc
mov
fstps
fbld
ljmp
sub
cmp
test
add
pop
jnp
pop
cwtl
jle
scas
or
js
clc
movsl
jle
movsb
lods
or
sbb
pop
jae
lds
xor
cwtl
add
mov
aad
test
xchg
in
divb
cmp
mov
in
cmp
or
cmp
out
inc
int3
push
ret
daa
jecxz
loop
pop
jge
pop
adc
dec
test
adc
ja
lock
sub
inc
test
push
jle
fcomip
out
pop
mov
stc
or
pop
aaa
cmc
xlat
roll
push
sub
cmpsb
pop
jb
int3
cmp
dec
cmp
mov
fistpl
xchg
jle
jns
or
jo
lret
bound
cmp
lret
ret
xor
ss
and
mov
aas
dec
gs
push
xor
sub
int3
lret
fwait
stc
addr16
aas
xchg
adc
pushf
dec
cmp
mov
daa
lds
mov
push
add
cmp
sub
daa
and
aad
int
cmp
fsubrp
call
pop
push
xchg
dec
xchg
loope
xchg
out
bound
out
mov
popa
fwait
pushf
notl
andb
inc
clc
rcll
das
pop
inc
pop
inc
repnz
gs
lock
std
mov
dec
icebp
rcrb
sbb
xor
je
test
push
mov
push
inc
adc
add
je
sub
dec
inc
push
repnz
lret
xor
pop
and
or
push
pop
aas
out
mov
sub
testb
sub
icebp
cs
dec
lock
movsb
cmp
rol
pop
or
pop
add
mov
mov
iret
rclb
push
inc
mov
cmp
mov
inc
lret
or
cs
mov
addr16
xchg
andl
inc
icebp
mov
mov
imul
mov
outsb
cmp
inc
and
xor
mov
mov
cmp
hlt
into
jge
mov
icebp
xor
data16
mov
out
mov
cmp
lcall
in
and
addl
lds
arpl
pushf
cmp
in
in
dec
inc
lock
push
cmpsl
loope
sub
push
inc
and
pop
movsb
notb
push
inc
daa
js
int3
mov
jg
pusha
jmp
adc
push
xchg
pop
in
pop
fsts
out
repz
and
aad
popf
dec
cld
sbb
push
pop
sub
push
cmp
dec
jno
adc
imul
lcall
jbe
outsl
lods
mov
sub
mul
js
scas
rclb
adc
xor
mov
mov
mov
in
enter
stos
jp
les
and
sbb
ffreep
xor
mov
dec
mov
movsb
xchg
pop
cld
sahf
jle
repz
pop
push
outsl
idivb
mov
add
add
rorl
dec
add
mov
mov
adc
pop
pop
dec
fsubs
out
push
shr
fs
push
mov
in
mov
ret
fwait
mov
cmc
add
push
pop
cmpb
popa
cmc
movsb
outsb
xor
xor
xlat
jecxz
sbb
mov
xor
test
inc
movsl
cli
sbb
push
and
in
and
leave
dec
in
dec
pop
cmp
stc
gs
sti
cmc
hlt
aas
pop
addb
lahf
lds
inc
push
inc
and
push
jge
arpl
dec
jns
imul
dec
subl
mov
movb
dec
inc
call
std
iret
fdivrs
sub
fwait
fwait
add
aam
ljmp
enter
out
push
push
sub
jle
rep
js
cli
cli
add
mov
mov
fnstcw
mov
cltd
xchg
mov
lock
shrl
test
pop
lahf
push
incb
rorl
add
popl
mov
push
shlb
adcl
aad
cltd
mov
mov
push
xchg
xor
iret
aas
sub
in
add
scas
cmpsl
hlt
jne
mov
pop
or
jl
aad
in
in
jl
hlt
jg
in
lods
cmp
and
fisubrl
fs
sbb
repz
push
mov
pop
adc
fwait
shlb
test
inc
stc
aam
jle
clc
repz
outsl
jns
adc
imul
out
popa
test
enter
fistpl
xchg
pop
xchg
jns
daa
mov
sbb
push
stos
push
fwait
xchg
push
pop
mov
mov
negb
jmp
ss
mov
mov
ljmp
sub
mov
push
lock
mov
cld
sub
in
inc
mov
loopne
mov
stc
jmp
lods
sbb
sbb
lsl
add
lods
add
repnz
icebp
les
mov
faddl
das
mov
push
je
push
xchg
je
or
dec
mov
and
xor
test
lock
ljmp
xchg
add
sub
push
inc
mov
mov
test
shlb
mov
in
test
mov
push
data16
stos
mov
push
movsb
cmp
cmp
jl
push
lods
loope
pop
out
das
sti
mov
cld
mov
or
sbb
stos
cmpl
adc
pop
js
cltd
out
pop
pushf
xchg
sbb
repz
push
xchg
int3
in
adc
dec
cld
bound
cmpsl
data16
mov
xchg
into
mov
imul
lahf
fwait
mov
addr16
pop
mov
lcall
sub
xchg
jnp
xchg
dec
push
sub
icebp
test
or
sub
aaa
sbb
fwait
mov
jno
test
jmp
xor
faddl
jmp
loope
rep
and
push
mov
jae
adc
dec
loope
and
and
ror
push
adc
sub
adc
mov
mov
mov
aad
jmp
dec
stos
mov
insl
pop
fisttpll
sub
mov
cltd
and
cmpsl
fnstsw
das
rep
jbe
inc
rcll
sub
aas
loope
stc
std
repz
call
sub
hlt
sbb
pop
jmp
mov
testb
ljmp
inc
sub
cltd
test
ljmp
pop
cmpsb
icebp
jmp
and
xchg
add
ficomps
push
and
mov
sub
sbb
clc
fnstcw
pop
xor
xchg
adc
bound
sbb
out
mov
stos
jb
jo
or
mov
push
insb
jo
pusha
iret
push
gs
lcall
into
jns
mov
cmp
shrl
lods
sub
fcmove
xor
test
sahf
movsb
lods
mov
sub
fsubs
jnp
inc
mov
mov
incl
xchg
addb
xchg
movsb
outsb
roll
mov
frstor
jo
mov
or
imul
dec
out
jmp
pop
insb
mov
sbb
repnz
test
int
jb
sahf
mov
push
repz
pushf
fdivl
sbb
push
and
xchg
mov
xor
inc
notl
mov
xchg
mov
enter
rorb
add
pop
mov
add
daa
dec
int
cmpsl
cmc
sub
jmp
mov
ja
pop
xchg
pop
mov
push
cmp
mov
push
cwtl
ret
pop
xchg
punpckldq
ja
enter
dec
jb
shl
push
dec
lret
xchg
jl
sarb
xchg
mov
or
movsb
or
ret
movsb
inc
mov
orb
rclb
pop
xorb
xor
lds
fwait
push
rclb
mov
aad
test
leave
mov
mov
int3
xchg
nopl
leave
add
ds
fwait
xor
push
icebp
imul
add
pop
xchg
imul
and
into
icebp
lcall
repnz
mov
mov
sub
test
inc
add
xor
and
ja
icebp
xchg
pop
es
mov
dec
movsl
stc
jmp
add
aad
arpl
mov
jg
and
sahf
inc
pop
mov
movsl
fisubl
and
ljmp
push
out
js
xchg
mov
adc
out
push
add
loop
push
adc
mov
repnz
sub
push
daa
push
aam
scas
jnp
mov
xchg
mov
adc
inc
xchg
pop
mov
inc
dec
cmpsb
sub
je
daa
xor
dec
jl
push
clc
in
pop
adc
into
push
arpl
shlb
push
rol
push
mov
xchg
or
pushf
sub
mov
incb
mov
clc
das
jbe
lods
mov
jle
in
adc
lret
push
mov
pop
mov
mov
xchg
mov
popf
cli
lahf
mov
cltd
inc
mov
ret
rcrl
js
cmpb
stos
aas
or
mov
push
fistpll
ljmp
jle
push
cmp
xchg
mov
adc
jp
mov
popf
sub
das
fnstenv
jecxz
mov
aas
adc
xor
pop
inc
repz
cmp
mov
movsb
jecxz
js
aaa
test
fwait
loope
out
dec
cmp
pop
and
rcr
xchg
in
mov
not
dec
out
bnd
decb
adc
jb
mov
push
push
or
xor
mov
add
repnz
sub
add
jbe
testl
xor
mov
stos
int3
mov
mov
jmp
lret
sub
and
pop
dec
mov
int3
adc
mov
ds
aaa
repz
mov
data16
ljmp
dec
outsb
inc
mov
insb
or
std
lods
out
inc
in
cwtl
cltd
adc
lcall
adc
pop
cmp
hlt
dec
cwtl
xor
ss
outsl
mov
repz
mov
push
adc
xchg
xorl
in
add
inc
add
or
call
jp
aam
iret
enter
out
repz
movsb
pop
sbbb
repz
mov
addb
jo
push
dec
inc
sub
inc
js
ja
filds
in
mov
ficoml
into
dec
mov
adc
popa
cmp
or
mov
mov
push
lods
aaa
int3
jge
nop
aas
inc
xchg
dec
xchg
mov
repz
call
popf
cmp
push
icebp
cmpsl
repnz
adc
xchg
repnz
int3
xchg
pop
mov
jle
or
test
mull
popl
mov
xor
int
jae
movsl
int
sbb
and
mov
xlat
jg
ljmp
cmpsl
loop
out
nop
adc
stos
pop
pop
sbb
sbb
arpl
pop
cmp
addr16
add
or
pop
adc
jle
clc
jbe
test
ret
rorl
cmp
dec
or
sahf
inc
subb
je
mov
loope
mov
adc
and
pop
loop
pop
inc
and
xor
inc
sbb
xchg
rorl
mov
sub
fistl
js
scas
jbe
out
mov
dec
cld
dec
mov
add
cli
and
pop
fsubrs
dec
les
or
mov
cld
cli
or
outsb
sbb
ljmp
into
int
test
scas
jae
sub
sub
call
lea
std
lahf
jmp
mov
jbe
xor
or
push
sub
ret
mov
jp
add
aam
in
addr16
out
fldcw
outsb
bswap
aaa
push
outsl
aas
sub
inc
adc
sub
pop
cltd
jb
jmp
ljmp
push
lcall
rolb
add
aaa
ss
pop
sbb
pop
dec
rcrb
mov
xchg
dec
test
mov
ljmp
cmpsl
xchg
aaa
fisttps
pushf
xchg
cmpb
dec
shll
out
test
jle
mov
mov
test
aaa
mov
and
lcall
and
sbb
jae
lods
mov
iret
sub
inc
rcll
inc
iret
popl
pop
inc
push
mov
cmp
aas
inc
fwait
aas
mov
outsb
mov
fs
arpl
sbb
mov
rclb
fldt
and
les
stc
xor
adc
jge
jbe
incl
aam
pop
not
int3
and
mov
mov
push
adc
sub
aaa
stos
scas
adc
pop
add
cwtl
push
jecxz
lcall
sub
aaa
sahf
pop
adc
lea
inc
das
rol
push
xchg
xchg
outsb
pop
cld
jb
loopne
inc
cmc
sbb
inc
add
in
adcl
rorb
int
fisubrl
std
je
movsl
lret
cmc
loopne
repz
fwait
fwait
repnz
pushf
icebp
fadd
les
out
imul
mov
mov
jae
pop
add
sub
mov
inc
andl
inc
popa
repnz
mov
mov
jne
in
cld
jge
lcall
xorl
mov
xchg
in
repz
les
mov
jnp
imul
jmp
inc
popa
sbb
sarb
mov
sbb
and
bnd
sahf
cmp
shll
or
in
mov
idivb
sti
cwtl
mov
loope
and
xor
call
pushf
inc
and
mov
icebp
or
mov
mov
sahf
push
jmp
sbb
xor
in
xchg
mov
add
add
xorb
cli
xchg
mov
rolb
xchg
rol
sti
sub
sahf
pusha
cmp
fnstenv
add
add
adcl
mov
and
shll
stos
roll
popa
push
push
sub
pop
outsl
insb
test
xor
mov
loope
or
loope
pop
subl
xorl
dec
into
mov
pop
sub
add
push
popa
cli
int3
call
lds
roll
lods
jmp
dec
push
test
iret
jg
xor
cmp
ss
sbb
data16
pop
add
or
adc
add
adc
push
jmp
lock
sbb
scas
pop
out
dec
ds
repnz
inc
xchg
das
mov
nop
sbb
cmpsb
sub
inc
fmull
dec
mov
cmp
pop
sti
xor
insl
pushf
ret
dec
js
addr16
sub
push
push
sub
jl,pn
cs
enter
js
testl
in
xchg
and
cmpsb
mov
fstl
pop
fbld
clc
xchg
testl
subb
cmpsl
outsb
add
insl
lret
lahf
in
xor
out
push
adc
jecxz
icebp
cmp
in
mov
jmp
pop
jo
add
or
xchg
fcoms
and
push
push
jle
rorl
jg
ffree
mov
out
test
pop
adc
sahf
inc
mov
dec
jno
icebp
cmp
mov
sbb
scas
lock
loope
mov
mov
cmp
or
icebp
mov
or
or
int3
add
fdivl
cmpsb
pop
cmpsl
push
or
sbb
stc
aaa
imul
mov
xor
lock
in
fldcw
inc
inc
sub
dec
iret
add
pop
leave
push
in
pusha
stc
lret
sbb
cmp
inc
mov
cltd
in
cmpsb
push
lods
out
mov
movsb
mov
popw
cmp
fcomps
jo
hlt
gs
mov
mov
sbb
lea
fwait
fildll
xchg
leave
es
add
popa
test
and
sub
mov
xchg
repz
idivl
fbstp
jns
mov
sti
mov
pop
mov
jl
insw
mov
push
push
jae
adc
adc
or
loopne
stos
add
inc
push
js
adc
adc
ds
test
or
dec
out
outsb
and
sarb
ret
lcall
push
fwait
cmpsl
lock
aaa
loopne
shll
xor
xchg
cld
mov
rcll
repnz
aad
push
mov
mov
pusha
xchg
faddl
add
jmp
jl
adc
inc
cld
ss
popf
rorl
lock
in
xchg
mov
into
mov
out
out
daa
push
mov
mov
cmp
mov
out
popa
rcll
insb
sbb
fs
jge
popa
jp
popl
std
lock
adc
sub
inc
lret
icebp
and
inc
xchg
lds
mov
inc
xor
pop
jmp
inc
fs
dec
sub
mov
movsl
sbb
mov
nop
jl
lods
lret
push
push
jno
lods
hlt
dec
pop
fadd
mov
and
fmuls
jns
js
in
pop
dec
scas
inc
jmp
bound
cmp
les
iret
sbb
sbb
cltd
pop
fcoml
outsb
inc
dec
pop
mov
xor
push
dec
out
mov
jge
sbb
cmpl
shll
gs
pop
std
popa
ds
and
push
test
or
ja
mul
rclb
or
mov
xchg
insb
ret
dec
enter
popf
mov
fiadds
out
cmpsl
sbb
jae
les
xlat
movsl
dec
jp
cmp
pusha
mov
sub
xchg
in
test
testl
and
xor
push
inc
test
lea
mov
call
jns
sarb
nop
sbb
icebp
push
mov
icebp
ret
loope,pn
out
push
lret
xor
lea
mov
int
dec
push
ds
push
add
mov
insl
mov
mov
out
sub
in
push
rol
add
xor
xor
jg
lret
es
iret
rorl
xor
imul
or
mov
fxch
popf
pop
xchg
mov
xor
cmp
xor
mov
shlb
or
fcmovnb
test
sarb
xor
pop
rolb
adc
and
test
inc
xchg
adc
mov
add
shl
cmpsb
movsb
inc
repz
aam
add
jg
jmp
ret
mov
sbb
hlt
test
sarl
out
jae
ficomps
outsb
inc
sub
jp
inc
inc
xor
xor
imul
inc
add
mov
sub
adc
jmp
lds
xor
cmp
inc
call
cmpsl
add
repnz
pop
fstpl
xor
push
xor
and
js
neg
add
addl
mov
adc
dec
movsl
or
add
paddq
push
pop
xchg
jge
imul
and
vhsubpd
xchg
adc
adcb
lret
mov
mov
out
out
jge
fcos
in
mov
xor
push
divl
jmp
stos
sub
aas
shl
dec
xor
cwtl
sahf
cmc
cltd
repnz
scas
ds
insb
mov
out
dec
out
jnp
stos
fwait
sub
insl
mov
in
out
pop
scas
fnsave
orl
scas
gs
mov
push
jge
xchg
loop
mov
add
lret
stos
mov
or
push
mov
mov
int3
pop
jnp
mov
xchg
mov
nop
jecxz
je
bound
lret
test
loope
sbb
xchg
jle
sbb
xchg
mov
enter
sbb
std
mov
enter
mov
std
fidivs
xchg
imul
int
mov
or
cmpsl
addr16
jne
push
adc
inc
ret
hlt
sub
sub
mov
push
adc
add
aas
push
adc
rclb
mov
pinsrw
cmp
xchg
jge
jne
cmpsl
stos
cs
lock
mov
push
lea
jmp
movsb
pusha
pop
ja
inc
repz
dec
fdivl
cmp
inc
insl
jno
popl
es
dec
push
in
push
loope
rcll
push
mov
daa
filds
lea
mov
pop
jge
sub
pop
xor
mov
rcr
mov
inc
sahf
shr
hlt
out
in
pop
lea
jo
and
lods
pop
loope
jg
jp
lods
cmp
add
add
nop
cmp
dec
mov
jae
xor
sub
imul
mov
fcompl
dec
and
je
sub
inc
push
outsb
enter
cmp
mov
clc
xlat
inc
imul
lcall
push
xchg
dec
js
xchg
jb
shl
aas
push
cmp
int
add
stos
es
dec
hlt
scas
adcl
push
inc
jl
mov
adc
mov
pop
loope
loope
mov
shrb
dec
insl
cltd
xlat
iret
stos
mov
mov
adc
xchg
pop
cmp
enter
ret
cs
push
pop
mov
sbb
sub
iret
push
icebp
sti
pop
out
push
cmc
dec
daa
sub
inc
xor
add
xchg
push
pusha
and
aad
jg
sub
fnstenv
cwtl
xlat
arpl
push
or
cli
lea
ss
inc
lcall
int
push
cltd
xchg
cmpsb
cmp
xchg
out
lcall
cltd
mov
push
dec
jb
pop
pop
ret
jecxz
ret
xor
je
pop
jg
lret
cs
subl
addr16
dec
cmc
cmc
arpl
add
notl
sti
xchg
mov
add
clc
rcll
xor
loopne
xchg
mov
mov
mov
je
dec
mov
and
add
push
popf
nop
xor
pop
insl
push
xor
xchg
dec
push
dec
push
and
adc
in
fdivr
adc
fcomip
jno
frndint
ficomps
mov
pop
stc
mov
mov
jae
mov
jecxz
out
pop
lock
cwtl
push
mov
push
push
mov
pop
mov
mov
popf
fnstcw
push
xchg
mov
dec
imul
sbb
out
pop
repz
add
add
cmpl
aam
fldenv
int3
mov
dec
xchg
gs
sarb
add
rcrb
test
pop
adcl
jae
cwtl
xchg
sarb
xchg
jecxz
cmp
ss
shl
jmp
sbb
subl
sbb
sbb
jecxz
xchg
out
cld
test
or
fnsave
push
movsl
cmp
into
xchg
inc
mov
testl
inc
pop
in
push
fs
mov
js
xchg
stc
and
pop
mov
stos
push
pop
mov
and
sub
xchg
sti
lea
xchg
inc
push
push
sub
mov
cwtl
addl
ljmp
repz
pop
adc
cmp
popf
xor
pop
arpl
mov
pop
xor
and
jmp
cmc
pop
adc
test
push
insb
push
fwait
cmp
popf
xchg
pop
loopne
cmp
mov
push
shlb
cmp
mov
out
shl
int3
sub
xor
and
int3
inc
loop
pop
mov
mov
mov
scas
mov
iret
test
les
adc
cmp
push
add
lods
bound
and
push
push
cld
add
cmp
sar
xor
imul
push
mov
add
mov
outsl
aaa
cli
mov
mov
cmpsb
jp
out
sub
push
cli
inc
push
repnz
mov
das
xchg
stos
xchg
push
push
and
and
out
pop
adc
xchg
ret
add
mov
push
xor
cld
aas
inc
cwtl
xchg
filds
xor
out
pop
inc
xor
and
jns
or
jle
js
daa
push
dec
js
xor
xchg
sub
flds
jb
mov
in
shrl
rorb
push
pop
leave
jecxz
or
cmpsl
ss
mov
mov
sub
add
or
mov
mov
xor
rcll
push
dec
xor
mov
push
outsl
dec
jmp
roll
pop
mov
int
and
test
je
rolb
dec
sub
ja
push
xor
rorl
fstps
xlat
mov
call
adc
and
dec
cld
pop
mov
push
cmc
jne
or
rcll
inc
lret
fidivrl
cld
jmp
add
insb
xchg
rorl
stos
arpl
xchg
pop
popa
adc
or
bound
add
mov
jge
mov
in
wbinvd
xor
push
cmc
add
testb
scas
ss
outsb
mov
adc
inc
movsb
xor
mov
sub
xchg
jo
fstps
inc
jecxz
stos
push
mov
pop
dec
mov
xchg
fsubs
jp
push
or
shlb
icebp
xor
pushf
lock
sarb
cmpsl
sub
xor
inc
test
inc
pop
sbb
cld
daa
orb
sar
mov
gs
mov
xchg
inc
sub
push
xor
test
adc
test
popl
and
jl
cmp
sbb
xchg
in
xchg
adc
iret
inc
add
dec
cmp
mov
inc
cmp
xchg
xor
dec
push
arpl
dec
das
inc
ret
ljmp
out
nop
push
and
push
mov
mov
fildll
leave
adc
jmp
add
les
xor
mov
in
mov
inc
rorb
xrelease
push
inc
fildl
cmc
ret
sub
push
dec
divl
xchg
dec
and
jne
cmp
clc
inc
push
sbb
xchg
call
lds
popf
mov
jmp
call
and
repnz
push
xor
dec
sti
add
xor
rorb
push
shr
pop
sbb
add
out
push
and
inc
cwtl
aas
jmp
inc
inc
pop
add
out
cs
sub
or
ja
xlat
clc
push
or
out
fwait
dec
mov
and
xor
mov
or
pop
jbe
ret
testl
lret
lret
jo
out
mov
sbb
push
push
test
add
and
je
mov
fstl
jge
cmp
movsl
jecxz
pop
mov
pop
pop
stos
repz
jg
inc
jo
out
add
adc
insl
or
lahf
or
stos
inc
xor
push
or
or
mov
push
mov
in
mov
imul
decw
adc
xor
cmpsb
xchg
out
sub
pop
clc
cld
cmp
pop
stos
inc
add
xchg
sbb
ret
insl
insl
out
xchg
shrl
xor
dec
and
mov
mov
andl
or
add
out
xchg
mov
mov
mov
outsb
cwtl
sub
cmc
cwtl
daa
ret
pop
cld
popa
cmp
les
mov
pop
dec
lcall
enter
dec
imul
xchg
inc
or
mov
adc
aaa
push
adc
xor
push
test
int
fadd
sub
xor
push
push
push
decb
add
fcoml
inc
cli
push
imul
jmp
xor
adc
fwait
jmp
pusha
inc
push
dec
and
push
jg
je
mov
jmp
adc
and
sub
push
inc
das
rcrl
inc
mov
push
lahf
mov
fwait
enter
pop
xlat
mov
std
push
call
daa
jl
xchg
bound
insl
xor
dec
fwait
jno
mov
jle
mov
mov
jnp
push
mov
aam
outsb
and
and
xorb
push
pop
pop
and
add
dec
jl
orl
std
jnp
dec
test
aad
dec
dec
pushf
mov
js
outsb
push
inc
mov
mov
add
push
out
xlat
std
jmp
adc
out
out
push
or
sbb
dec
lods
or
sbb
aas
pop
out
out
push
rorb
movsb
sbb
loop
std
fucomip
iret
stc
test
push
arpl
pop
pop
pop
jnp
int3
and
inc
adc
int3
out
and
jg
jne
ljmp
cmp
sub
mov
mov
inc
lea
pop
cmpsl
stos
mov
cmpsl
lahf
mov
int
xchg
or
xchg
mov
leave
push
fimull
lahf
cmpsl
sub
fnsave
cwtl
pop
or
sub
std
cmpsb
into
add
les
or
cmpsl
imulb
jp
mov
cmp
sub
fsubrl
mov
sahf
in
shlb
xchg
into
push
push
rclb
jle
inc
or
sbb
idiv
cmc
repnz
shl
xor
pop
mov
xchg
jmp
jmp
fnstenv
fbstp
test
hlt
out
pop
ja
fidivl
repnz
cmp
fld1
pop
push
or
and
neg
add
inc
int3
mov
iret
shrl
push
xchg
xchg
inc
xor
insl
enter
xor
sbb
fcoms
clc
or
push
add
pop
test
jbe
mov
jne
mov
mov
or
mov
or
ficoml
push
add
jg
loope
divl
fsubr
cmp
mov
dec
fidivs
cmpsl
movsb
jo
inc
cld
jb
mov
lcall
jecxz
cmp
aas
nop
jne
daa
fs
dec
ja
jecxz
cmp
je
fildll
mov
xorb
xchg
xlat
roll
loopne
dec
jno
add
cmc
mov
les
call
imul
mov
je
mov
jle
or
das
add
bound
lahf
xchg
sub
movsl
xor
notb
mov
mov
rorl
jae
data16
sub
in
mov
in
sub
shrb
mov
sub
loop
hlt
les
hlt
rolb
xor
jo
jge
jnp
fcompl
fstpl
lcall
insb
mov
sbb
mov
insb
mov
fnsave
and
aam
loopne
in
sub
test
push
sbb
in
fsts
mov
and
aas
jns
mov
insl
les
icebp
cmp
shlb
push
fwait
fwait
inc
xchg
stos
xchg
push
daa
push
aas
xor
movsb
sbb
mov
popf
xor
xchg
lods
lods
iret
push
movsl
and
inc
shlb
stc
data16
test
pop
sbb
fdivl
jbe
jmp
jne
and
jns
in
xor
cmpsb
popa
jmp
shlb
jle
data16
sbbb
sti
ret
stos
inc
pusha
and
and
dec
out
popf
mov
xchg
push
hlt
add
fwait
mov
push
dec
sbbl
dec
nop
rcr
rcrl
ds
xchg
dec
and
dec
add
arpl
in
pop
daa
ret
pop
push
xlat
mov
jae
sbb
in
pop
lea
ds
sbb
xor
jmp
push
jg
pop
clc
int3
scas
push
inc
inc
arpl
sarl
cltd
jmp
mov
xchg
mov
movsb
xor
out
add
adc
out
lds
outsl
cmpb
inc
cmp
jl
out
popf
mov
aas
push
mov
mov
jle
mov
je
and
ret
push
ljmp
push
mov
mov
out
sub
in
mov
pop
test
push
sahf
leave
and
push
jecxz
fisttps
repnz
scas
lahf
mov
repnz
inc
in
jb
adc
clc
sahf
mov
enter
and
xchg
aam
les
lcall
jecxz
add
jl
jle
sbb
mov
fsubrl
loopne
cld
jmp
nop
add
rcrl
repnz
in
cmp
add
repnz
pop
je
enter
push
out
repz
push
push
pop
push
ljmp
mov
pusha
mov
ljmp
dec
pop
dec
int
nop
fst
cld
aad
cmpsb
ret
loop
fincstp
lock
shlb
push
nop
popf
shrb
xor
cmpb
lcall
push
sahf
into
lahf
mov
sub
cs
xchg
outsl
push
jmp
hlt
sti
out
cmpb
fwait
xor
leave
or
fnstcw
pop
les
ds
mov
lock
daa
fstp
jmp
ret
or
int3
bound
sbb
xchg
mov
lret
ljmp
lret
fnstenv
loopnew
or
or
adc
mov
fs
mov
data16
or
add
sbb
in
mov
lods
add
xchg
jo
jg
push
jp
addr16
and
cmp
je
movsb
and
loope
cmp
nop
lods
dec
jle
dec
pop
dec
inc
sbb
fidivl
jno
out
xchg
lea
jbe
mov
repz
adc
mov
sbb
clc
lea
pop
mov
push
mov
lock
jae
xchg
imul
cmp
xor
xchg
cmp
pusha
rclb
imul
js
lahf
dec
push
outsl
lods
pop
mov
test
mov
testl
nop
test
fisttps
push
rorb
xchg
pop
cmc
mov
mov
fcoms
or
mov
jb
cmpsb
pop
mov
rorl
lcall
clc
vmread
cmp
std
cmpsb
dec
push
ds
cmp
add
dec
pop
dec
in
inc
lock
inc
dec
int3
add
notb
repnz
cltd
push
cmpl
cli
and
sub
testl
jno
cmpb
cmc
cld
in
andl
rcrb
or
int
ret
sbb
gs
sbb
cmp
dec
jns
subl
cli
cmp
dec
cli
aas
inc
mov
ret
mov
insb
out
pop
mov
test
loop
arpl
mov
jmp
movsl
xchg
outsb
fs
in
lods
js
push
imul
in
adc
jecxz
cmp
xor
into
push
insl
test
cmp
jp
sahf
xor
loope
jae
dec
loop
pop
mov
jmp
push
push
jne
jecxz
xchg
adc
fstpt
mov
clc
sbb
xchg
dec
mov
fcmovb
andl
rclb
pop
pop
push
pop
xchg
push
lods
dec
mov
cmp
in
bound
adc
fsubrs
test
arpl
cltd
jmp
imulb
jo
mov
jb
mov
clc
cwtl
lea
bnd
js
push
inc
mov
test
mov
aam
sbb
jg
ja
push
fadd
mov
jno
inc
jb
imul
adc
mov
sub
xchg
xchg
fisubl
sbb
add
out
jl
push
outsb
mov
or
lret
mov
movl
push
and
fstps
cmp
aas
jnp
outsl
inc
sub
ja
add
nop
push
add
bound
xchg
out
jg
aaa
in
and
cmpsl
or
je
or
xor
cli
xchg
push
mov
adc
lea
adc
cwtl
mov
mov
add
mov
mov
mov
push
repz
push
stos
jns
inc
shl
jmp
pop
pop
fcom
jne
fs
ljmp
ret
jge
cmp
push
imul
mov
ljmp
fistl
mov
inc
mov
repnz
lcall
mov
inc
mov
jge
popa
inc
ret
sbb
das
pop
pop
jnp
mov
testb
mov
push
add
mov
xchg
push
stc
xchg
push
fcmovnbe
and
adc
push
dec
loopne
aaa
leave
xchg
imul
mov
inc
enter
cmp
push
cmp
mov
push
push
inc
xor
and
mov
mov
sar
jmp
mov
dec
pop
pop
push
negl
repz
popf
push
pop
imul
sbb
pop
fdivl
push
jbe
mov
jbe
lea
or
std
insl
rcrl
cmp
shl
push
push
sbb
cmpl
and
sarl
das
sbb
arpl
popa
adc
adc
out
mov
cmpsl
inc
or
mov
mov
and
lahf
mov
ljmp
dec
mov
hlt
pop
inc
add
jae
das
mov
fidivrl
jne
sub
ror
jecxz
in
das
cmp
mov
pop
push
inc
lods
into
or
movsb
gs
fsubp
or
cmc
jmp
ret
outsb
mov
cmpsl
push
cltd
out
mov
test
lods
xchg
cmp
data16
and
std
jmp
mov
aam
xchg
adc
or
mov
pop
nop
jp
xor
cmpsl
xchg
shlb
mov
aas
jbe
mov
xchg
or
or
mov
inc
das
xor
xchg
stos
sti
inc
mov
cmpsl
sub
aaa
dec
inc
mov
rclb
xchg
inc
sub
lea
stos
push
push
mov
inc
cli
je
push
add
in
loopne
out
cmpsl
shl
add
stos
pusha
inc
xor
add
mov
loop
sbb
adc
nop
push
adc
or
add
xchg
aas
lret
dec
aad
pop
cwtl
push
inc
or
fnsave
mov
ret
gs
inc
in
adc
pop
mov
popa
negl
mov
mov
enter
in
mov
in
pop
out
test
or
cmp
cmc
push
ret
shl
test
mov
ss
int3
rcrb
rcrl
push
add
push
cmp
lcall
adcl
mov
jbe
out
inc
and
sbb
ret
shl
pop
into
sbb
xor
rorl
pop
ja
xor
sub
xor
and
fisubs
test
stc
cmp
add
lcall
or
sahf
xchg
jle
ret
or
push
mov
loop
adc
push
scas
mov
xor
sub
arpl
adcb
xchg
gs
fwait
mov
mov
fwait
cmp
mov
xchg
mov
xchg
and
stc
scas
mov
jbe
jbe
and
imul
out
data16
push
ss
ss
dec
fwait
inc
pop
push
mov
mov
push
add
sub
adcb
xchg
add
adc
int3
dec
fistl
punpckhwd
jno
inc
inc
insl
pop
and
mov
rcrl
dec
adc
cmp
popa
iret
xchg
leave
add
stos
ret
notb
mov
popw
xlat
scas
jp
repnz
negl
hlt
daa
out
daa
sbb
fisttpll
in
stos
ret
dec
fmul
push
and
jecxz
in
mov
ret
push
addb
jae
icebp
decl
adc
jge
add
cmp
adc
stos
hlt
gs
lret
ljmp
xchg
mov
jno
shlb
icebp
mov
push
out
in
mov
mov
fsubrs
jae
sbb
jl
pop
aad
lret
jecxz
xchg
cmp
mov
jl
sub
and
or
pop
sar
imul
loop
sub
lea
xchg
shl
xchg
xchg
sub
call
pop
jo
cmp
pop
mov
test
in
mov
xchg
sub
sarb
xchg
mov
jbe
sbb
push
sbb
mov
repz
insl
adc
dec
cld
sub
xor
push
xchg
lret
cld
ljmp
iret
mov
dec
test
mov
hlt
push
jmp
mov
popa
jne
lret
add
xchg
jae
int3
repnz
xchg
cmp
movsl
fildl
dec
jp
int3
mov
pop
out
pusha
and
stos
pop
jb
ljmp
adc
cmp
decl
pop
movsl
or
lods
push
cmpsl
idiv
ja
ret
add
push
mov
movl
mov
stc
add
rcl
mov
sub
jae
xchg
xchg
cmp
rol
inc
frstor
outsb
xchg
popf
std
stos
out
lret
aas
pusha
data16
pop
test
lret
loope
inc
movsb
test
aam
pushf
and
cld
es
out
mov
add
test
dec
or
mov
in
mov
and
test
out
xchg
jb
cwtl
lock
jae
pop
adc
mov
scas
orps
or
das
daa
or
cmovo
jmp
lahf
test
xchg
inc
bound
adc
in
fisttps
sub
cs
pop
push
pop
adcb
xor
inc
aad
and
gs
ret
add
dec
out
lahf
dec
sbb
movsl
lret
push
faddl
sbb
mov
push
xorl
pop
cmp
clc
inc
xchg
sub
sbb
scas
loopne
mov
or
inc
imul
adc
pop
fadds
out
push
leave
push
fildll
lret
mov
fs
enter
push
pop
cmpsb
stos
pop
inc
scas
roll
xor
punpckhdq
pop
xchg
pop
shll
or
push
mov
mov
ficompl
jecxz
fdivrs
pop
test
jge
outsb
inc
adc
or
pushf
push
scas
pop
mov
in
idiv
push
sahf
jmp
jecxz
adc
mov
mov
jp
mov
jnp
std
jae
xor
nop
sub
daa
aaa
sbb
out
enter
arpl
mov
pop
push
fstps
xchg
inc
insl
sbb
mov
scas
jo
mov
jae
test
adc
adcl
push
lcall
call
enter
jns
dec
fbstp
jp
and
fiadds
and
sub
aas
jmp
outsb
jo
xor
mov
pop
inc
inc
nop
inc
callw
repnz
test
pusha
or
xor
nop
fwait
dec
shlb
push
mov
xor
mov
or
dec
add
pop
out
iret
int3
inc
mov
xchg
xchg
jae
push
lock
pop
cmp
outsb
xchg
cwtl
cmc
outsb
das
jmp
int3
call
push
mov
mov
push
sti
xor
mov
add
adc
jb
data16
and
notb
jp
lahf
xor
mov
imul
inc
jno
lcall
add
xor
sbb
les
cmp
sbb
xchg
scas
leave
and
push
fstpt
xor
js
scas
aad
fs
add
and
dec
sbb
push
pop
psllq
ds
arpl
cltd
push
leave
scas
mov
cmp
movl
fsub
sub
test
dec
nop
fstpt
xchg
pusha
inc
popf
dec
jnp
jmp
xchg
sti
mov
or
daa
fstl
pop
push
push
and
rcr
jo
mov
stc
inc
inc
push
and
imul
repz
adc
xor
cmp
loop
psadbw
push
xchg
xchg
push
loop
out
xchg
mov
push
add
mov
mov
jbe
xchg
sbb
xchg
in
xchg
inc
push
rcr
sub
and
jae
lret
mov
insl
cs
sub
sbb
lock
mov
cmpsb
fs
out
fldl
inc
push
jmp
test
push
jne
jmp
test
or
push
cmp
push
jge
or
jnp
shlb
int3
movq
sbb
cmp
cmp
mov
loope
pop
pop
pop
insb
cmp
xor
mov
mov
dec
out
out
adc
or
shrl
int3
jl
adc
xchg
push
inc
fldl
je
mov
test
push
aas
fisttps
jle
nop
std
mov
notl
adc
mov
pop
bound
mov
inc
mov
loop
or
mov
lds
xlat
jbe
ljmp
push
stc
loope
jbe
out
jbe
mov
into
inc
jle
ja
or
push
into
dec
sbb
leave
daa
iret
orl
and
pop
jbe
inc
gs
aam
sbb
mov
int
out
mov
add
shrl
icebp
inc
push
or
mov
mov
pop
push
wbinvd
sbb
cmp
std
inc
lahf
test
cmc
out
jns
inc
fbstp
mov
cmpsl
je
xor
cmpb
int3
xchg
sti
movsb
and
cmc
outsl
sbb
or
lcall
les
push
stos
push
into
sbb
jecxz
dec
add
lcall
cli
sbb
pop
arpl
sub
and
andl
dec
loop
dec
sbbl
jbe
out
repz
insl
dec
sub
mov
testb
ret
sub
push
testb
xor
hlt
xchg
gs
mov
test
inc
jle
sar
lahf
lods
inc
loopne
lret
movsb
add
dec
pop
pop
into
or
idivl
cmp
mov
xor
movsb
addr16
sub
jmp
repnz
push
repz
pop
push
addr16
pop
lods
orl
xchg
inc
xor
ja
xor
mov
mov
daa
add
lret
sub
sbbb
jb
imull
cmp
adc
int3
pop
pop
sbb
jge,pn
sti
in
test
lcall
push
es
int
pusha
addr16
mov
pop
and
insb
adc
push
add
inc
ljmp
jb
in
ret
js
mov
ret
scas
sub
cmp
enter
loopne
pop
orl
mov
pop
inc
fprem1
xchg
pop
inc
into
push
add
ja
nop
and
mov
hlt
push
pop
dec
jns
popl
int
nop
daa
insl
imul
mov
push
aad
in
adc
les
xchg
adc
insb
jne
inc
jbe
into
jecxz
jno
pop
sbb
jo
adc
ret
je
dec
ret
fisubl
inc
int3
pop
gs
in
pop
xor
xor
in
xchg
pop
out
lods
imulb
and
fistpl
in
xchg
push
in
lret
nop
fmul
mov
jg
lfs
xchg
in
xchg
cmp
xor
popa
push
sub
lret
cld
and
dec
inc
jl
inc
fmulp
outsl
lods
inc
mov
jecxz
jge
out
and
jp
mov
fstps
or
mov
pop
dec
mov
cmpsb
outsb
pop
notl
js
pushf
sub
mov
mov
shrb
test
jl
ds
test
in
je
out
je
andb
ss
daa
out
xchg
xor
adc
sbb
and
leave
xchg
inc
out
fs
and
fcmovbe
jmp
lret
sub
cs
les
int
dec
dec
pushf
ss
pop
aaa
push
es
aaa
sbb
int
xchg
pop
jge
lock
bound
jge
sbb
inc
imull
daa
out
ljmp
rcr
xor
lods
inc
mov
sbb
xchg
jo
add
or
or
push
std
leave
adc
loop
adc
xchg
mov
pop
shll
in
pop
lahf
inc
cld
jmp
loop
push
lret
sub
movsb
shll
scas
xchg
fdivl
cli
stos
adc
int3
adc
or
add
sti
movsb
and
pop
or
aam
mov
mov
inc
xor
mov
scas
lahf
cwtl
jmp
stc
sarl
idivb
xchg
addr16
mov
jl
fcomip
adc
inc
mov
test
stc
mov
stos
aaa
mov
xchg
mov
mov
push
dec
push
sarb
mov
je
add
sarl
cld
ljmp
mov
sbb
dec
aam
jns
mov
aam
cs
mov
mov
dec
jae
into
mov
mov
sub
mov
popa
jl
cli
aam
push
enter
gs
lock
add
rclb
mov
lahf
xchg
push
cmp
jno
test
lds
xchg
mov
xor
and
dec
sbb
or
cli
xchg
sbb
fisubrs
sub
xchg
xchg
push
popa
imul
pop
cmp
inc
cmp
test
mov
and
imul
lds
sbb
insl
jns
fsubs
cmp
scas
sub
jmp
inc
lret
sub
out
in
scas
dec
test
adc
push
stos
xor
inc
dec
push
lret
fwait
lods
popf
jae
orl
adc
sub
mov
iret
adc
fadd
sbbl
daa
mov
pop
cmp
aaa
cmp
or
les
ret
inc
icebp
inc
dec
cwtl
pop
dec
aas
pop
xchg
mov
xorl
inc
adc
out
adc
rolb
in
add
mov
sbb
je
xchg
fsubrl
cmp
mov
bound
push
fimuls
sbbb
push
sbb
or
rolb
sbb
sub
cmc
rorl
shrb
fcoms
and
aam
imul
dec
cmpsl
lahf
imul
dec
ljmp
addr16
sbb
adc
outsl
es
fcoml
imul
test
mov
out
add
cmpl
sbb
jg
notl
fisttpll
add
add
mov
xchg
or
adc
shl
sahf
popa
mov
sub
xchg
mov
in
pop
mov
lods
sub
dec
insl
out
xchg
pop
popa
outsl
jne
jmp
mov
cmp
pop
mov
xor
hlt
jno
repz
sbb
ret
cmp
outsl
sub
stos
and
aad
adc
inc
out
mov
or
mov
push
imul
lea
mov
lret
and
faddl
fists
xchg
mov
icebp
xchg
mov
dec
mov
cmp
jg
mov
pop
popa
jnp
ret
stos
sbb
cmp
add
or
mov
hlt
fnstsw
ds
test
out
std
inc
hlt
xor
add
into
ret
mov
repz
and
adc
jo
adc
divb
in
and
lods
add
mov
aam
daa
push
push
hlt
mov
push
orb
sub
ljmp
int
mov
push
cmpsb
sbb
mov
cmp
insb
testb
loopne
xchg
test
mov
lcall
jno
mov
pop
sbb
cli
cmpl
mov
push
add
pusha
mov
fcoms
xchg
test
pop
inc
lock
sahf
fsubs
insl
cmpsl
scas
fisubl
mov
fldl
push
sti
sahf
ljmp
out
rcr
in
pop
xchg
cld
loope
push
pop
ret
cltd
pusha
add
cmp
std
jmp
nop
outsl
mov
loop
adcb
sbb
cmp
dec
or
xchg
push
xchg
jmp
ret
add
cli
cld
push
mov
stc
or
shrb
cmp
cltd
sub
xchg
push
mov
or
aad
cmp
das
jge
scas
and
xchg
fwait
dec
out
sub
rcl
pop
movsb
push
pop
icebp
stc
popa
and
mov
iret
push
mov
and
inc
popa
cmp
test
xor
pop
jmp
jge
mov
insl
and
sahf
mov
push
cmp
faddl
loope
jbe
pop
pop
ljmp
xorl
ds
sub
pop
cmp
xchg
arpl
or
icebp
test
xchg
sahf
shll
xchg
insl
pop
add
push
pop
out
out
mov
inc
jl
sub
push
popf
aaa
mov
inc
das
adc
push
dec
pop
xchg
push
mov
imul
rep
js
xchg
sbb
xor
fimuls
jl
dec
or
or
mov
jno
mov
pcmpgtw
in
dec
loopne
aaa
xlat
dec
and
test
mov
pop
mov
notl
push
adc
sub
aad
xchg
push
out
shlb
fisttps
xchg
xchg
jmp
fistpll
in
cmp
pop
fwait
hlt
mov
imul
mov
shufps
inc
js
mov
cli
stos
mov
inc
dec
mov
inc
mov
jne
adcb
and
testb
popa
xor
pop
outsb
in
ds
mov
push
sub
inc
ds
cmc
mov
pop
aad
push
mov
xchg
fnsave
xchg
pop
dec
dec
icebp
lahf
inc
lret
stos
outsl
mov
scas
aaa
or
pusha
fmull
dec
jmp
fisubrs
inc
lds
pop
xor
movsb
pop
lea
repnz
add
ss
in
das
movsl
push
push
movsl
loope
push
pop
sar
insl
adcb
mov
sub
fwait
adc
movsl
cmp
lods
and
mov
fwait
inc
aas
mov
dec
icebp
inc
inc
mov
insl
repz
xchg
add
xchg
into
adc
test
pop
scas
arpl
insl
and
push
adc
push
clc
bound
adc
inc
out
nop
fistps
lret
push
scas
adc
fbld
xchg
xchg
test
pop
jbe
fidivs
pop
adc
jl
mov
dec
pop
and
call
fdivs
cli
fsubl
int
ljmp
pop
das
adc
cmp
pop
repnz
lcall
mov
jle
jno
bound
inc
arpl
ljmp
cmpsl
int
sub
pop
sub
mov
push
aad
loope
bound
push
mov
xchg
sub
clc
pop
scas
xchg
jbe
mov
or
shrl
mov
rorl
jnp
sub
aam
mov
mov
repz
mov
sub
push
push
adc
cmp
dec
jne
pop
std
fmull
cmpsb
scas
fwait
jmp
in
cltd
movsb
leave
leave
sub
mov
faddl
sbb
cmpsl
in
pop
or
gs
cmp
jae
nop
cmpsb
pop
lds
rcrl
lods
pop
or
adcl
loop
and
loope
push
lret
in
pop
push
cmp
addr16
add
add
adc
jge
test
xchg
adc
jbe
cmovae
mov
xor
sub
mov
mov
hlt
fisubrl
dec
cmp
mov
jbe
inc
sbb
repz
jo
loope
fucomip
fs
xchg
push
inc
or
daa
clts
shrl
outsb
push
and
ljmp
stc
hlt
jl
mov
pop
fdivrl
iret
pop
fistpll
aam
and
adc
addr16
lods
adc
jle
gs
pop
sbbl
addl
lea
out
loop
dec
mov
sarb
lret
jne
cmp
aas
cli
mov
fildl
or
adc
xchg
test
and
push
daa
cld
jbe
dec
mov
mov
mov
inc
sbb
jbe
into
sub
xchg
mov
push
mov
popf
xor
insl
pusha
push
int
test
xor
jb
sti
mov
out
sub
aaa
loope
mov
push
inc
rcl
xlat
dec
fistps
aam
and
mov
icebp
rorb
sbb
imul
cmp
fdiv
aad
stos
push
mov
add
in
and
ret
or
and
add
shll
mov
sub
cmp
cmp
xor
cmp
stos
out
fwait
xlat
rolb
cli
dec
addr16
mov
push
dec
imul
pop
inc
mov
sbb
jnp
sar
push
aaa
pushf
push
ds
jecxz
mov
mov
fstp
xchg
mov
xchg
loope
out
push
sub
mov
bound
in
pop
dec
pusha
fimuls
or
xchg
push
fcompl
scas
outsb
in
mov
fidivrs
outsb
inc
add
fwait
ja
arpl
fcmovnu
and
jle
sbb
xchg
adc
popa
mulb
fwait
ror
and
lods
movsb
mov
adc
pop
push
nop
or
sub
dec
pop
lods
test
ljmp
out
ja
jo
es
inc
xchg
jmp
sbb
lods
and
sub
inc
mov
andl
or
push
test
lods
add
leave
lret
pop
and
addl
mov
lahf
fsub
fsts
push
loope
int3
cs
scas
xchg
dec
mov
cmp
cmp
cwtl
jae
outsb
pop
jmp
data16
and
dec
dec
mov
repz
jns
mov
adc
xor
cwtl
dec
in
jp
and
arpl
mov
arpl
inc
sti
nop
or
ret
lahf
sub
cmp
adc
mov
cmpsl
mov
inc
mov
movsb
daa
ljmp
xchg
and
push
dec
push
jo
jmp
jmp
stc
mov
inc
mov
outsb
pop
and
fcmovne
adc
mov
test
cmpsb
shrb
sbb
lods
fldl
sbb
xor
xorb
cli
sbb
push
mov
add
call
push
imul
shl
cmpsb
dec
sub
out
pop
ss
loopne
into
and
addr16
xor
int3
mov
stos
lods
loopew
lds
shlb
push
dec
rsqrtps
xor
int3
scas
stos
mov
lret
jmp
lds
cmp
or
shll
adc
aaa
or
lahf
dec
fucom
fcomp
dec
std
enter
lea
xor
adc
or
dec
adc
or
test
cltd
lock
xlat
stc
stos
jnp
push
fs
jb
cmpsl
hlt
xchg
jns
dec
jecxz
or
xor
xor
push
adc
push
cld
mov
cmp
icebp
loopne
adc
popf
jbe
push
xor
outsb
inc
lret
push
xchg
adc
dec
mov
push
cmp
stc
test
push
jno
xchg
fistpll
dec
push
inc
daa
testb
adc
icebp
and
mov
cmp
aam
mov
jne
or
pop
jge
fstps
out
xor
dec
mov
fwait
add
aam
ficompl
in
mov
mov
sub
add
sub
das
pop
adc
icebp
mov
notb
mov
lret
xchg
outsb
rorl
test
mov
cmp
mov
cmp
mov
or
andl
bound
inc
cli
test
gs
pusha
dec
popf
xchg
mov
out
sub
and
call
xor
fs
sub
add
mov
jmp
and
and
push
pop
add
jmp
out
test
jns
repz
adc
lret
out
mov
or
dec
dec
cmpl
in
jnp
sub
test
out
jns
filds
daa
jg
cmp
insb
bound
fisubl
jmp
pop
and
xor
das
sub
and
lahf
push
sbb
lcall
push
mov
in
fxch
mov
jno
lds
imul
inc
inc
fcmovnb
jo
mov
dec
xor
jmp
mov
adc
test
mov
inc
dec
jecxz
les
into
sub
jle
fs
sbb
daa
fwait
cmpsl
popa
test
push
fisubrl
dec
out
gs
cmp
push
add
mov
lods
jge
into
and
mov
push
sub
cwtl
andl
mov
das
xor
push
mov
cli
jo
mov
cmp
sub
and
inc
test
leave
inc
popf
lds
dec
jg
mul
mov
jo
cmp
push
mov
lcall
dec
sub
push
sub
or
mov
dec
push
xchg
xor
or
or
adc
hlt
mov
sub
shl
inc
dec
gs
testb
call
mov
push
lds
or
mov
out
movsl
loop
mov
repnz
dec
and
or
repz
push
push
in
mov
adc
push
out
jmp
bound
icebp
cwtl
pop
negb
lods
popf
idivb
jns
and
and
mov
xor
dec
gs
int
cmp
lret
icebp
sbb
lea
popf
loop
mov
jnp
leave
mov
jbe
stc
sub
imul
mov
jg
cmp
dec
loopne
loopne
sub
loopne
fiaddl
or
pop
pop
cmpsb
cli
arpl
stc
icebp
int
stc
int
nop
orb
aaa
scas
lock
add
bswap
mov
xor
mov
xchg
rolb
mov
js
shl
dec
lods
sub
insb
sub
into
pmulhw
imul
imul
pop
cmp
fiaddl
mov
pop
or
or
xchg
loope
xchg
xchg
push
sbb
xchg
vandnps
jg
loop
test
or
insb
cmc
mov
push
inc
jge
fsubrs
rcrl
lods
es
dec
xor
adc
xchg
jmp
sub
xor
test
aaa
mov
dec
mov
mov
push
scas
outsl
dec
movsb
aad
and
mov
mov
hlt
cmc
fistpll
sbb
out
ja
mov
adc
cmp
cmp
gs
insb
fdivr
adc
xchg
fbstp
or
sbb
loope
test
fldenv
push
notb
ljmp
xchg
movsb
dec
int3
out
les
mov
lods
add
and
jns
cmpsl
sub
xor
pop
pop
lret
mov
and
cmp
lods
shlb
jns
and
mov
das
cmp
adc
push
push
dec
rcll
xor
cmp
loopne
daa
pop
mov
cwtl
sub
or
xor
add
and
push
xchg
mov
cmp
and
or
jl
ja
adc
adc
sub
cmpsl
shlb
pop
push
jne
insb
pop
test
push
mov
sbb
mov
jle
fcmovne
rorb
icebp
push
jmp
jo
jmp
ror
cmc
mov
sbbb
in
addr16
fsubs
or
mov
add
push
fnstsw
addl
sub
mov
in
fisubrl
pop
hlt
test
jl
push
ret
test
cmp
dec
and
push
fists
jb
push
cli
inc
imul
cltd
sub
sub
sub
mov
test
insb
or
add
xor
and
add
sub
popa
jecxz
fistpl
xchg
dec
fs
cmpsb
or
or
loopne
fsubp
pop
in
popa
inc
and
aam
ds
movsl
xchg
nop
ud2
int
test
adc
dec
adc
mov
xor
subl
add
sbb
mov
mov
fmuls
adc
lret
std
add
mov
mov
in
mov
inc
adc
inc
scas
pop
stos
in
dec
leave
mov
shl
jmp
lea
dec
adc
push
inc
mov
test
sahf
inc
repnz
js
cld
jmp
sbb
out
clc
add
sub
sbb
aaa
les
scas
mov
ret
ds
fsubrs
mov
lods
adc
out
mov
lock
xorb
repz
js
inc
pop
shrd
xchg
mov
imul
jae
dec
jg
push
sti
push
mov
cmp
cmpsl
or
ret
jp
dec
push
adc
inc
jl
push
jae
xor
xor
repz
mov
movsl
mov
lock
pop
jnp
dec
shll
xchg
imul
stos
outsb
out
sarb
and
mov
out
push
pop
mov
mov
xchg
lods
xor
or
dec
jo,pn
sub
inc
sbb
push
cli
daa
dec
scas
negb
fstpt
and
mov
push
mov
shll
mov
cwtl
xchg
jl
sub
jp
sub
decb
decb
adc
adc
into
xor
xchg
dec
mov
xchg
add
sbb
dec
outsb
lea
adc
js
test
inc
jecxz
pop
lahf
jno
push
xchg
stc
nop
push
imul
loopne
lret
popf
push
dec
mov
imulb
bnd
mov
add
loop
jo
fsubl
pop
inc
mov
sbb
fbstp
mov
jge
shll
clc
repz
xor
jp
push
cmp
push
lea
xor
testb
out
inc
mov
test
loop
jge
mov
lcall
daa
fs
push
das
loope
out
mov
into
pop
push
mov
mov
and
jmp
inc
mov
push
inc
jno
and
or
sti
mov
fcoml
or
icebp
gs
scas
arpl
xlat
jnp
mov
outsl
test
jl
mov
push
out
pop
sbb
and
imulb
cld
clc
adc
ja
scas
add
mov
or
out
push
jns
cmp
jne
jae
cwtl
and
rorb
dec
mov
lcall
cmc
ljmp
ficoms
xchg
out
xchg
imul
fwait
lds
sub
aam
dec
push
sbb
adc
cmp
fnstcw
sub
and
pop
fisubs
pusha
fwait
inc
in
adc
mov
pop
and
sub
mov
icebp
jle
outsb
in
mov
pop
dec
sti
icebp
pop
andb
and
out
cmp
add
stc
scas
sub
or
loopne
inc
or
into
test
push
sub
cmp
push
mov
movsl
mov
add
repnz
in
arpl
popf
inc
or
xchg
das
mov
scas
inc
sbb
fwait
daa
dec
movsb
stos
loopne
outsb
jne
jge
arpl
mov
sub
or
push
or
fcomps
or
mov
and
dec
add
icebp
push
popf
sbb
push
or
sub
in
jmp
add
xchg
out
aad
sbb
fs
mov
sub
insb
std
and
int3
push
test
fcoml
mov
mov
sbb
enter
lcall
aaa
inc
push
push
cmp
inc
add
das
ret
xchg
cmpsb
dec
insl
cmpsb
jbe
inc
addb
mov
rcll
movsl
mov
and
outsl
lea
cwtl
cmp
sub
inc
mov
push
pop
adc
or
inc
mov
popl
mov
inc
adc
inc
xchg
shl
jg
clc
or
fbld
cmp
push
push
sub
out
push
pop
ficompl
movsb
imul
cwtl
or
mov
cltd
dec
sub
or
push
ja
pop
push
xor
lods
jl
mov
xor
aas
js
xchg
test
mov
pop
adc
roll
pop
lods
cld
sub
dec
test
popa
jo
xor
outsb
and
bound
and
ret
xchg
scas
rcl
mov
or
lock
stc
adc
cwtl
ja
ret
dec
jg
movsl
data16
mov
faddp
push
and
lret
mov
xor
xchg
lods
fwait
popf
xor
test
cli
jge
movsb
sbb
jmp
push
xchg
mov
pop
push
daa
xor
rcrl
mov
lret
or
mov
loopne
outsl
enter
sub
lret
cmc
into
fwait
push
dec
jl
lock
dec
data16
mov
add
mov
imul
xor
lods
mov
and
xor
jecxz
arpl
jg
cli
add
push
mov
jne
mov
xchg
xchg
push
data16
test
push
push
xchg
sub
sti
in
push
pop
push
mov
jl
cltd
add
hlt
sti
or
mov
mov
ficoml
cltd
adc
dec
ss
out
mov
sti
enter
cmp
or
mov
cwtl
xchg
cmp
mov
pop
sti
sub
xchg
mov
outsl
aas
inc
ja
or
jge
lret
push
addr16
iret
xor
pop
shl
test
xchg
pop
push
jae
imul
add
inc
mov
xchg
cmp
sub
mov
pusha
and
pusha
fdivl
lds
sbb
or
stc
push
cmp
sbb
js
mov
mov
in
inc
fbld
xchg
or
mov
inc
mov
jo
mov
ret
adcb
ss
fcomps
in
xor
outsb
sbb
mov
lds
fcoml
loope
push
xlat
out
pusha
loope
sub
adc
fs
and
add
dec
je
add
cli
dec
lods
mov
insl
mov
push
xorb
push
iret
inc
jbe
xor
mov
mov
xor
push
inc
sub
addb
clc
adc
or
push
push
xchg
dec
add
push
and
in
cmpsl
sbb
adcl
ret
movsl
or
data16
cmp
fstl
jbe
in
sbb
je
add
xchg
inc
jbe
mov
stc
cmp
fildll
xchg
mov
into
push
mov
pop
fs
stos
movsl
outsl
stos
pop
call
ds
sbb
test
xor
sbb
in
pushl
jmp
ja
lret
inc
mov
mov
adc
in
stc
jecxz
ucomiss
sbb
jnp
mov
xchg
fstpt
sub
arpl
jns
gs
mov
dec
push
dec
ja
and
add
push
lock
jmp
dec
call
hlt
test
push
into
push
mov
or
cmp
movnti
push
and
movsb
push
cmpsb
je
push
fistps
inc
rol
sub
imul
pop
cmc
jle
mov
aas
inc
test
mov
fidivl
fucom
adc
adc
push
sub
jecxz
add
dec
movsl
fdivrl
mov
insb
xchg
rorb
sti
js
push
lock
into
jge
cmp
mov
inc
inc
in
pop
or
sbb
fiadds
jno
mov
dec
ja
shrl
push
jmp
sbbb
sub
sbb
test
lret
pop
push
xchg
sub
dec
stos
xor
jmp
pop
sub
push
jmp
mov
cmp
fcompl
sub
negb
ljmp
fmull
xchg
addb
push
bound
iret
sub
xlat
pop
sbb
pop
lahf
arpl
and
call
pop
repnz
outsb
push
or
jecxz
cs
in
stos
inc
mov
pop
outsl
mov
shrl
and
jnp
dec
cmpsb
adc
jge
inc
pushw
push
dec
jge
pop
mov
cmp
jbe
lods
pusha
sub
pop
jg
mov
push
movsl
mov
arpl
or
add
mov
lock
pop
sti
jae
or
imul
jle
dec
outsl
or
addr16
mov
jnp
aad
dec
adc
data16
fsubp
js
das
mov
pop
fnstsw
in
or
xchg
pop
lea
mov
dec
ja
je
or
xor
dec
dec
pop
in
sbb
rol
arpl
orb
pop
dec
fisttps
in
daa
cmp
inc
adc
or
jecxz
je
in
adc
addr16
or
aam
int
or
lock
and
xchg
bound
jbe
push
fldl
pop
xor
mov
and
lret
add
gs
lcall
push
jno
sub
fisubs
cld
or
and
dec
xchg
mov
ficoml
loope
mov
or
cmc
mov
adc
call
sub
inc
mov
lahf
xor
or
xor
sahf
roll
in
and
jge
rcrl
icebp
dec
test
clc
add
ds
fidivs
sbb
cmpsb
dec
xor
outsb
hlt
cli
gs
mov
pop
aam
xor
jmp
lds
scas
pop
and
adc
popa
inc
shll
adc
call
mov
in
lds
cwtl
mov
ret
rcrb
iret
or
ja
fsubrs
pushf
fidivrl
test
dec
mov
cmpsb
cmc
pop
sbb
mov
cmp
mov
sub
iret
repz
rolb
mov
hlt
pop
pop
mov
mov
mov
and
cltd
xchg
mov
stos
add
adc
jp
xchg
xchg
dec
mov
push
cmpsl
fdivl
push
xchg
xor
xchg
cmc
test
hlt
mov
lret
rcrb
rep
xorb
inc
mov
dec
incb
cwtl
icebp
outsl
lods
shl
sub
add
push
das
cmp
pop
rcrl
adc
xchg
mov
bound
mov
fwait
clc
test
jae
es
dec
std
cmpsl
lret
sti
imul
jmp
inc
loopne
pop
sub
xchg
cltd
inc
dec
jmp
iret
mov
jae
mov
aad
frstor
mov
jg
inc
push
mov
dec
push
addr16
ds
repnz
stos
repnz
bound
add
inc
sti
cmpb
pop
jnp
jbe
dec
xchg
ja
dec
adc
nop
xor
lret
cmp
icebp
loope
jl
mov
clc
inc
dec
lock
and
ficoml
push
inc
mov
and
adc
cmp
mov
fdivl
rcrl
push
leave
test
push
cltd
inc
or
mov
adc
movsl
push
divl
test
out
and
jmp
fwait
or
scas
cmp
mov
sbb
aam
xor
sub
sbb
fsubs
mov
arpl
inc
out
sbb
mov
xor
sbbl
scas
jbe
je
or
and
add
loop
inc
xlat
mov
cmp
xor
mov
call
popa
cmpsb
jl
les
pusha
inc
mov
mulb
clc
jle
dec
xor
pop
sbb
stos
push
popf
daa
xor
stos
sti
fildll
fnstenv
scas
mov
lret
lahf
mov
and
lods
mov
sub
sub
pop
mov
mov
sub
iret
mov
add
cmpsl
cmp
and
outsb
dec
dec
ds
sub
jle
add
ljmp
and
scas
pushl
mov
add
pop
push
dec
pop
add
mov
inc
add
sarb
and
call
xchg
fs
or
jae
aad
and
adc
ds
stos
stos
aaa
adc
lock
and
cmp
cmp
mov
mov
jo
mov
cmp
xchg
imul
adc
cmp
sbb
jnp
cmpsl
jae
mov
stos
popf
fcmove
mov
leave
in
xchg
call
dec
cmp
dec
or
fwait
push
pop
insl
sbb
mov
or
stc
adc
add
ret
pop
cmpsl
xchg
mov
mov
and
and
sarb
jns
mov
pop
shll
es
loop
cmp
cmp
cmc
imul
xor
ficoml
shll
mov
icebp
fsubp
push
cmp
mov
lret
out
mov
and
insl
lret
shr
mov
int3
or
jg
add
into
mov
out
xor
ljmp
mov
lea
cmp
es
jle
scas
movsl
aaa
shlb
jno
es
dec
cmp
imul
out
dec
dec
fmuls
pop
iret
mov
add
out
push
or
cmp
or
das
rorl
sahf
std
movsl
out
xor
lahf
loopne
push
adc
push
jns
orb
mov
mov
pop
xor
repnz
pop
cmpsb
push
sub
out
ja
gs
imul
mov
pop
inc
in
pushf
popa
es
cmpsb
fisttpl
repz
lahf
dec
arpl
push
dec
jns
leave
adc
jmp
in
inc
sub
or
pop
iret
or
add
mov
stos
inc
sub
pop
inc
cmp
xchg
jle
insl
cwtl
push
stos
cmc
mov
pop
and
mov
aam
gs
sarl
iret
ret
fwait
sbb
sub
mov
mov
add
out
sbb
inc
outsb
std
repnz
mov
fmull
pusha
add
filds
in
or
jmp
mov
sbb
test
out
mov
or
lods
adc
sbb
gs
movsb
cli
aam
inc
inc
pop
pop
inc
jne
inc
popa
push
in
jmp
in
leave
pop
push
dec
aaa
jnp
xchg
cmpsb
rcrl
and
mov
adc
xchg
xor
mov
dec
loopne
or
clc
aad
pusha
pop
cmp
add
jne
lahf
fstpl
fstpt
ret
pop
es
push
mov
bound
outsl
inc
call
mov
xchg
adc
mov
jno
pop
jp
sub
scas
xor
sub
cmc
mov
lods
xchg
stos
fs
xchg
jo
iret
int3
fistpl
inc
pop
jb
push
aaa
mov
mov
fldt
inc
cmpb
xor
cmpl
inc
sbb
xchg
in
aad
mov
hlt
imul
insl
stc
lods
mov
addr16
or
mov
xchg
cwtl
xor
jno
test
mov
lahf
in
dec
lret
outsl
inc
je
cmp
adc
popa
js
fisttpll
sub
jle
shlb
loop
mov
orb
scas
lret
les
repnz
pop
cmp
iret
push
dec
lahf
dec
push
loope
rcrl
jecxz
jg
mov
push
cmp
loop
inc
sub
addr16
pop
inc
andl
pop
lods
clc
hlt
lea
add
imul
stos
add
outsb
int3
mov
sbb
loopne
lock
push
imul
mov
mov
jns
push
pop
stc
xchg
inc
lahf
add
sub
xchg
sub
rcll
sbb
js
xchg
out
dec
lods
icebp
inc
gs
jae
pop
xchg
cwtl
fildll
xor
cmpsb
push
add
jmp
fcoms
stos
stos
movsb
mov
push
stos
int3
cmp
push
popf
stos
shr
addr16
push
popa
pop
jae
mov
sti
push
inc
dec
or
sti
jl
mov
outsl
add
push
aad
lea
jns
pop
adc
out
add
mov
sub
je
jmp
leave
jl
inc
dec
mov
mov
and
xchg
or
ja
xchg
pop
jns
mov
push
fidivrl
pop
mov
cmp
mov
adc
push
xor
dec
rcll
add
call
xor
mov
push
pop
xchg
xor
shl
lret
in
outsl
into
scas
pusha
jge
xor
mov
dec
or
aaa
mov
adc
arpl
cmpsl
cmp
xor
in
jge
lods
fdivl
xor
adc
push
jmp
or
cltd
or
out
or
cli
pop
shll
out
shll
stos
mov
and
jne
sub
or
cs
jae
inc
xor
icebp
ret
rolb
movsb
icebp
mov
jle
sub
mov
xor
sbb
jg
xchg
inc
cmp
das
cs
lret
push
ret
push
push
sbb
mov
adc
mov
mov
lcall
jbe
xchg
test
and
arpl
xchg
sub
adc
mov
push
or
dec
pop
cmp
cmpsb
jg
test
jne
scas
or
ljmp
ds
cli
lea
lret
sbb
ljmp
test
in
jle
outsb
inc
sbb
shll
rcrb
jmp
mov
imul
aam
jp
and
lea
inc
mov
sub
popa
fbstp
jbe
jns
or
pop
dec
sbb
jle
aaa
mov
lods
pop
das
pop
aad
ret
cmp
cmpsb
aaa
lods
pop
shrl
int
inc
std
cmp
mov
xchg
push
and
push
xor
xchg
pop
inc
ds
shrb
and
xor
out
pop
jge
push
rep
ret
pop
add
dec
sarl
push
xchg
clc
inc
mov
movsb
ja
mov
adc
xchg
mov
das
fstpl
jle
pop
out
mov
es
mov
andl
inc
aaa
jnp
dec
popa
and
pop
dec
mov
arpl
shlb
in
popf
dec
cmp
js
inc
and
negb
fs
rcrl
push
dec
enter
sbb
aad
sub
addr16
pushw
xchg
mov
das
xor
sub
leave
mov
adc
shll
cmp
outsl
push
stos
xchg
ja
loope
inc
repnz
pop
dec
into
into
cmp
and
adcl
mov
mov
cmp
cmp
ret
and
cmp
push
lret
fcoml
arpl
pop
adc
xor
xchg
jmp
add
fwait
sbb
xchg
mov
ljmp
push
mov
cmp
in
es
xchg
jecxz
loop
into
lds
mov
xchg
test
std
cmp
ret
stos
mov
jp
rep
mov
xor
push
cld
imul
dec
dec
test
jno
out
add
aas
inc
imul
outsl
inc
mov
cwtl
imul
push
sbb
sub
ds
and
dec
movsb
mov
dec
xor
sahf
jo
sbb
mov
out
leave
movzbl
or
mov
rcr
shlb
fbstp
outsb
mov
bound
mov
cmpsb
sbb
inc
dec
pop
cmpsl
arpl
xchg
sbb
fstpt
cli
fistl
sub
in
mov
repnz
aas
pop
dec
and
ljmp
cld
push
dec
adc
cmpsl
add
or
das
jno
adc
fs
mov
push
jns
lret
out
pop
and
dec
push
mov
xor
rclb
dec
movsb
jmp
push
in
ljmp
jle
mov
jmp
dec
das
ljmp
dec
sub
imul
roll
repz
cli
cmp
daa
mov
pop
test
pop
inc
push
nop
sub
sbb
mov
fldcw
mov
fucomi
call
sbb
testl
call
fstpl
mov
mov
adc
mov
mov
rolb
aaa
and
push
push
call
cmpsb
rol
pushf
sub
arpl
ja
add
dec
or
adc
iret
mov
lock
int
aad
scas
sbb
in
es
or
cmp
push
or
loope
scas
xor
aaa
mov
mov
cmp
pop
sub
xchg
mov
iret
loopne
sti
lds
repnz
lods
enter
adc
push
ja
push
pop
adc
in
aas
jecxz
mov
loopne
pop
mov
xchg
mov
push
push
popf
les
out
xor
js
and
xchg
sahf
add
fcoml
jge
jmp
jmp
inc
inc
jle
mov
pop
ljmp
aam
and
push
gs
inc
adc
jae
cmc
pop
and
sbb
dec
ret
mov
rclb
ret
add
cli
dec
adcl
test
sbb
int3
iret
mov
jns
insl
xchg
and
xchg
sub
and
and
popa
add
out
xchg
movsb
sub
xor
cmp
stc
addb
sub
push
or
lret
ficomps
sub
stos
test
xchg
fwait
int
xor
clc
loopne
pop
cmpsl
xor
cmp
adc
loop
aas
lahf
push
cmp
aad
sub
in
cmp
mov
shrl
daa
inc
scas
or
push
rolb
mov
cmovl
push
pop
add
xchg
mov
mov
leave
fmuls
movsb
out
pop
jl
inc
mov
lock
and
lods
inc
std
mov
popl
hlt
inc
sub
das
cs
ja
fadds
mov
push
inc
and
fldl2e
sub
cs
adc
sub
add
add
and
leave
xor
stos
clc
das
loopne
cmpsb
add
pop
add
adc
in
stos
aad
inc
stos
push
jns
dec
lods
call
pop
jne
inc
lock
xchg
imul
movsl
dec
dec
sub
sub
inc
adc
lret
je
sarb
or
push
fbstp
or
lea
pop
and
add
iret
mov
movsb
sbb
cltd
hlt
nop
pop
leave
subb
inc
mov
test
cmp
jb
push
imul
sub
fwait
xor
insb
xchg
push
mov
popf
xchg
inc
int
cmp
sarb
cmp
mov
repz
pop
and
cs
int
pop
fnsetpm(287
fstpt
sar
jge
sub
xorb
push
adc
nop
pop
cli
pop
outsb
ror
adc
test
ret
lock
xchg
sbb
mov
imul
ds
cwtl
pop
iret
cwtl
int
enter
daa
int3
int3
mov
adc
stc
add
mov
push
hlt
popf
cmpsl
dec
push
xor
dec
lds
pop
mov
mov
dec
push
add
xchg
ds
pop
mov
push
add
es
jo
adc
js
rolb
scas
scas
or
fidivrl
or
xchg
cs
es
fwait
movsb
call
xor
not
ljmp
in
imul
stc
xorb
popl
dec
push
adc
shr
xorl
jae
hlt
pop
dec
dec
scas
mov
repz
jmp
arpl
pop
jecxz
scas
adc
mov
ljmp
lods
push
add
cmc
xchg
mov
xor
dec
out
and
sub
pop
inc
insl
test
cmp
lahf
les
or
adc
addr16
jbe
push
or
jae
pop
add
cmpsl
movsb
sbb
sbb
cmp
cmpsl
sub
scas
stos
orl
sbb
pop
stos
sbb
lods
xchg
dec
jno,pt
xchg
sbb
mov
popf
cmp
cs
arpl
je
jo
and
hlt
je
sbb
push
iret
and
mov
mov
mov
fists
in
negb
std
lcall
mov
test
scas
cmp
push
and
adc
pop
int
mov
dec
mov
enter
test
mov
cmp
pusha
push
pop
rcll
cmp
xchg
xchg
pop
and
mov
ljmp
js
ljmp
cmp
or
in
xchg
cwtl
lcall
cmp
jo
in
aas
dec
xor
xor
jns
xchg
out
xor
pushf
fdivl
dec
icebp
or
xchg
add
sti
add
test
test
or
dec
iret
dec
xor
repz
hlt
shr
inc
pusha
push
push
inc
fiaddl
and
std
and
inc
dec
pop
push
cld
cwtl
icebp
mov
sbb
mov
movsl
cmpsl
clc
lret
dec
mov
lcall
jecxz
lds
loope
adc
xorl
inc
mov
jno
xchg
pop
test
mov
repnz
call
inc
xchg
stos
das
sub
add
cmc
xchg
jmp
out
arpl
pushf
out
and
stos
imul
inc
loope
or
ret
bound
incb
xor
pop
vpsubsw
push
jl
repz
add
pop
mov
push
mov
jge
xchg
sub
mov
cmp
fwait
ljmp
cmp
dec
lretw
xchg
dec
mov
repz
xchg
push
fucom
jl
cld
mov
andl
loope
mov
jo,pn
or
aas
int
xlat
mov
stos
test
stos
jmp
fld
inc
mov
loop
mov
and
dec
outsb
and
sub
cmp
sahf
sbb
shrl
je
xchg
daa
scas
test
jge
cmc
rep
unpcklps
mov
sub
sar
pop
shl
shlb
int3
push
sub
rcl
sbb
and
cmp
sbb
fisubs
cmpb
dec
aas
repnz
push
inc
enter
fidivl
fmuls
pop
test
xchg
les
sub
xlat
pop
sub
mov
sbb
and
dec
cmp
mov
sbb
mov
nop
adc
push
ficoml
dec
movsb
dec
mov
loopne
pop
pusha
cltd
adc
and
pop
pop
pop
test
add
into
filds
inc
outsl
inc
orb
int3
aas
movsl
loopne
ret
loope
push
lahf
jbe
add
adc
mov
mov
jae
movsb
cmp
pop
popf
test
xor
es
and
mov
loop
lret
fmull
mov
orl
push
in
add
add
sbb
sbb
xchg
add
int3
lock
cli
aam
ret
mov
xor
cmp
fldcw
test
sub
stc
sbb
subb
add
leave
ljmp
mov
cmp
add
nop
scas
or
add
dec
aad
push
int
cmp
jp
shll
ret
idivb
mov
or
lcall
jne
pop
incb
lret
popf
inc
divb
fs
addr16
lahf
pop
xor
dec
ja
sbb
sbb
pop
adc
xchg
out
mov
and
xchg
aad
lods
jb
lds
xor
pop
clc
notl
cmp
sub
movsl
dec
arpl
add
fnsave
je
cmp
test
add
dec
pop
mov
sbb
in
jnp
mov
mov
adc
add
mov
pop
sbb
pop
shll
fisttpll
dec
jge
out
push
mov
and
imul
add
cmp
stos
hlt
fs
cmp
daa
jp
stc
mov
out
lret
stc
and
ljmp
add
aaa
adc
mov
cmc
std
idivl
pusha
xchg
lret
xchg
mov
sbb
test
into
data16
add
aam
shrl
test
pop
out
inc
in
rclb
mov
fstpl
push
fdivl
mov
adc
cmc
jl
test
adc
sbb
cmpb
xchg
push
add
mov
mov
gs
push
pop
pop
int
and
xor
push
in
add
loope
imul
inc
pop
ret
outsb
or
jae
in
bound
jl
test
repz
mov
call
mov
pop
jne
fwait
jmp
push
add
lret
addb
lcall
ds
aaa
out
xchg
mov
shrl
jo
lock
push
addr16
js
or
xchg
inc
sarl
adc
add
mov
mov
int3
sahf
xlat
sbb
cwtl
xchg
and
pop
lock
rcrb
mov
mov
arpl
imul
addr16
ficomps
sub
mov
inc
andl
lods
adc
sub
inc
scas
scas
into
xchg
je
xor
jno
fdivr
aam
cmc
mov
inc
mov
mov
jg
push
fidivrs
jmp
sub
sarl
pop
and
out
lods
pusha
in
mov
mov
cmp
es
cmpsb
inc
sub
pop
jbe
and
xchg
xor
scas
pop
idivb
mov
das
sbb
leave
ja
mov
insl
ret
xchg
mov
test
and
inc
mov
mov
mov
jle
addr16
mov
movsb
jo
enter
les
push
mov
test
sbb
les
lahf
sbb
mov
mov
fs
fnstenv
and
mov
aas
scas
jp
hlt
daa
fwait
xlat
dec
cmpsb
sbb
out
mov
jb
pop
sub
insl
mov
sub
lret
movsl
or
in
mov
and
push
cmp
ljmp
mov
inc
xchg
mov
jp
mov
lea
dec
jmp
cwtl
xlat
or
inc
sti
cmp
lock
fwait
scas
add
fcomps
ret
mov
xor
mov
in
in
outsl
das
out
jl
aas
mov
jmp
add
and
xchg
push
mov
pop
mov
fildl
fwait
outsl
xlat
fnstcw
cmp
sub
fistl
data16
inc
icebp
lret
dec
adc
scas
pop
lahf
mov
nop
mov
adcb
dec
out
jae
xor
mov
jb
cmpsl
push
push
out
mov
ljmp
test
cmp
mov
scas
mov
adc
ret
push
adc
push
xor
out
jno
and
dec
add
jge
cltd
adc
shll
xor
mov
cmp
fldt
xchg
lock
in
arpl
movsl
aam
sti
mov
jecxz
push
push
add
jge
mov
jns
adc
and
fwait
iret
and
clc
popf
mov
pop
movsb
nop
push
and
data16
pop
sub
je
inc
popa
pop
loopne
data16
xlat
mov
outsb
rorb
inc
jge
cmp
pop
in
stos
out
cmp
pop
and
pop
out
ds
lods
add
mov
inc
add
mov
sbbb
jns
sti
jo
into
or
mov
fwait
mov
loop
push
or
sub
add
loop
mov
cmpb
je
into
outsl
mov
stc
mov
ja
stc
inc
clc
jnp
sbb
or
xchg
bound
data16
jecxz
sub
and
es
pop
popa
neg
cmp
call
daa
in
testb
adc
das
nop
ss
pop
add
pop
push
gs
stos
lret
push
or
loope
push
mov
fwait
stos
std
add
loop
popf
iret
ljmp
hlt
stos
pusha
and
jmp
pushf
scas
xor
aaa
mov
jl
mov
push
mov
sarb
loopne
xor
sbb
cmpsb
pop
subb
pop
test
push
inc
xor
xorl
out
mov
movsb
fwait
pop
or
mov
cmp
inc
mov
ss
push
lret
out
js
xchg
add
icebp
and
cwtl
fwait
lcall
fcomip
jg
cmp
xchg
mov
shrl
shrl
mov
jo
mov
inc
ficomps
imul
mov
adc
out
mov
push
inc
test
jnp
add
out
in
test
divl
ret
or
mov
and
xor
add
int
xchg
imul
cmp
btc
mov
cmp
lods
adc
sub
push
push
cmpsb
out
cltd
pop
jne
push
push
fistpl
out
cs
xorl
fcoml
push
and
popf
inc
and
and
pop
js
jo
enter
sbb
pop
lcall
fistl
jmp
test
mov
mov
cli
inc
and
lss
jb
push
add
arpl
call
aam
sub
jge
ja
jp
loopne
or
addl
or
repz
fsub
and
or
lods
mov
clc
cmp
dec
adc
cmp
adc
adc
je
pop
les
divl
dec
mov
cmpl
outsb
mov
xchg
rclb
and
lods
js
and
xor
int3
in
out
int3
mov
xor
xchg
cmp
or
mov
add
xchg
mov
sub
test
data16
shl
mov
cmp
aaa
dec
add
jecxz
add
push
jmp
imul
mov
fildll
enter
mov
insb
mov
sbb
sub
inc
mov
or
cmp
sahf
mov
aad
lods
push
sub
lods
mov
dec
imul
stos
sahf
iret
negb
push
orl
fstps
fsub
adc
ret
outsb
bnd
fisubrl
jmp
das
sbb
xor
cmc
cltd
jle
movsl
jg,pt
lds
fildll
jle
ret
cmp
and
add
jg
imul
insb
inc
push
mov
idivl
dec
fsubrl
adc
lods
push
xlat
orl
ljmp
ret
flds
dec
std
jp
add
or
ljmp
jl
rcll
or
cmpsb
loop
xor
leave
movl
add
fxch
pop
xor
pusha
fs
jmp
leave
push
orb
pop
push
dec
imul
jb
sti
sbb
sti
or
mov
enter
mov
pop
call
scas
fidivl
push
or
or
fwait
jg
pop
call
xchg
mov
sbb
xor
pusha
inc
and
jnp
test
imul
scas
push
pop
loopne
in
rclb
xor
sbb
dec
sbb
pop
xor
adc
js
pusha
push
mov
je
sahf
repnz
mov
pop
xchg
sub
call
mov
fistps
jecxz
or
xchg
jecxz
adc
mov
not
aaa
xchg
cwtl
or
popa
fsubrp
mov
pusha
das
pop
incb
fbld
jmp
jbe
add
out
stc
jae
sub
mov
cmp
ljmp
jo
cmp
mov
adc
ret
addr16
sti
sti
push
xor
jp
inc
mov
scas
xchg
sbb
pop
mov
sub
bound
cmp
loope
pop
xor
enter
scas
filds
cmp
repz
pop
xor
jne
repz
sbb
lret
xchg
mov
mov
rolb
mov
mov
fcompl
inc
mov
insb
in
mov
ret
push
sar
dec
mov
adc
jbe
push
das
bound
lcall
push
adcb
pop
divb
aaa
mov
xchg
cmp
std
in
addb
es
xchg
ret
sbb
mov
adc
push
es
in
and
stos
sub
inc
call
aaa
xchg
lcall
add
jo
aad
rorl
sbb
dec
gs
xchg
popa
jns
fwait
sub
xor
push
fldcw
cmpsl
pop
adc
gs
jno
inc
adc
inc
aas
xor
gs
out
jae
xor
shl
ret
imul
mov
loop
nop
lods
int
pop
sbb
mov
hlt
adc
push
inc
mov
sbb
in
mov
mov
scas
sahf
xchg
fs
fcmovbe
push
jle
fnstcw
bound
lods
inc
divl
mov
popaw
add
xlat
lock
scas
pop
aaa
out
xchg
cwtl
xchg
sbb
mov
mov
inc
mov
pop
jg
inc
cmp
fwait
out
mov
pop
mov
pop
ds
fadds
inc
ss
mov
int
insb
adc
stos
adc
adc
repz
push
jae
or
push
dec
xlat
rcrb
mov
aaa
std
and
add
lret
push
js
mov
jnp
mov
sub
mov
mov
ljmp
pop
push
push
push
jmp
jl
gs
push
fstpl
add
xor
adc
sub
mov
mov
mov
adcl
pop
and
xchg
mov
dec
adc
jb
test
push
adc
xchg
sub
fs
dec
and
int3
in
inc
rol
xor
xorb
xchg
sarb
loop
daa
inc
and
push
out
xchg
pop
mov
out
movsb
pop
lods
pop
shll
std
in
out
jle
aad
xchg
shlb
jg
xchg
inc
cmp
leave
loopne
and
leave
hlt
std
filds
nop
mov
or
inc
or
shlb
jge
sbb
pusha
or
lret
js
jnp
dec
mov
rorb
push
dec
int
test
mov
push
verr
out
sub
pop
pop
push
mov
xchg
add
xor
rcrl
lret
pop
adc
inc
pop
insb
sbb
adc
lock
cs
int3
inc
cmovne
jl
loope
repz
push
in
jp
sub
aam
mov
cltd
mov
pushf
adc
sub
fbld
repz
rcr
ljmp
inc
inc
or
aam
shrb
loopne
adc
mov
adc
pop
scas
adc
jg
jne
xchg
shll
cmpl
xchg
mov
cmpsb
in
jne
pop
cmpsl
rol
mov
pop
cmp
jle
testl
hlt
out
push
bound
and
inc
pop
mov
pop
adc
inc
push
aad
pop
mov
addb
add
leave
fs
cmp
xchg
sbb
ret
fildll
add
movb
pushf
jge
or
ret
and
int
ds
outsb
mov
and
lahf
into
push
jb
pop
negl
push
pop
xchg
jne
mov
jl
inc
fcmove
je
lods
test
sub
js
fimull
mov
outsl
xor
cmpsl
fistl
push
bound
popa
push
iret
xchg
cli
rclb
shll
sub
push
sahf
lret
cmp
add
or
test
repnz
inc
aas
dec
lods
inc
inc
pushl
stc
ljmp
stc
shlb
mov
jae
mov
loopne
iret
push
push
push
stos
out
insl
ja
in
ror
mov
imul
jae
ja
push
push
cld
lret
xorl
cmp
stc
inc
inc
lret
mov
repz
xchg
add
jg
mov
mov
push
mov
jl
lods
add
cmp
movsb
ljmp
aam
mov
and
mov
rorl
sbb
add
or
push
jns
jmp
dec
jle
call
mov
cmc
sbbl
xchg
pop
popa
in
mov
fadd
out
jns
pop
bnd
mov
inc
push
push
push
mov
cmp
test
push
mov
mov
and
mul
and
jge
ss
enter
jmp
push
outsb
imulb
mov
sbbb
mov
js
aas
xor
jnp
cmpsb
scas
imul
pop
les
arpl
and
fld
ja
cmp
mov
or
sahf
and
out
and
ljmp
xchg
insb
inc
mov
es
and
in
pop
mulb
adc
lods
jb
outsl
jecxz
push
mov
clc
outsl
loopw
sti
mov
rorl
in
mov
rorl
inc
les
loope
cmp
subps
dec
cmp
loopne
movsb
or
test
add
mov
push
lock
popf
bound
adc
mov
mov
sbb
mov
mov
xchg
cmp
repnz
into
lret
fs
xchg
pop
outsl
add
movsbl
nop
push
adc
xchg
popa
and
cmc
xchg
mov
clc
lahf
out
sbbl
popa
mov
clc
fmuls
mov
lret
cld
jle
loopne
mov
push
mov
pop
stc
pusha
loop
sub
mov
push
jle
in
cmp
sub
cmp
pop
mov
xchg
lea
sbb
sub
loope
and
iret
pusha
mov
or
repnz
inc
fmul
aad
data16
push
push
insl
mov
adc
mov
ret
add
xorb
jno
xchg
xchg
es
pop
push
shrb
out
mov
shrb
inc
sub
fwait
adc
push
mov
loopne
sbb
mov
loope
push
fwait
sub
sbb
xchg
jno
xor
enter
mov
jo
adc
fnstenv
aad
mov
cmp
test
stos
mov
or
lds
movsb
jecxz
pop
iret
repz
sarb
push
jnp
jp
push
pop
mov
movl
mov
cld
lea
in
nop
pop
mov
rcr
sti
push
aam
xor
mov
or
dec
jmp
inc
cwtl
notb
cmc
lahf
lods
mov
xor
cmp
cld
lods
dec
popa
bound
push
push
shlb
hlt
lods
xor
cmp
sub
pop
enter
mov
notb
movsl
jnp
insb
jg
xchg
cmpsb
push
fidivrl
sbb
push
jb
lock
jno
jbe
and
pusha
xchg
mov
incb
outsl
cltd
mov
aad
fs
mov
inc
cmpsl
in
xchg
cmpb
sar
mov
sarl
popf
jne
cwtl
ret
mov
in
add
js
hlt
pop
and
xor
daa
rolb
cmp
sbb
movsb
pop
sub
pop
xlat
inc
sub
dec
aad
jecxz
and
popf
add
sbb
jb
cmp
cmp
adc
test
push
aam
rolb
dec
sti
incl
jbe
pop
cmp
test
or
mov
add
fiaddl
notb
xor
dec
adc
push
fs
dec
push
push
pop
sarb
stos
jnp
out
insl
mov
or
adcl
mov
sub
dec
movsl
mov
imul
push
in
std
and
dec
pop
mov
stc
dec
mov
sub
rolb
in
js
cmp
xchg
mov
xor
sub
cmp
cmp
cld
lods
int
fnstsw
lods
lods
iret
mov
xor
mov
mov
pop
dec
arpl
mov
aas
mov
outsw
jecxz
jg
or
scas
push
cs
test
and
pop
cwtl
stc
in
add
dec
jle
sbb
push
movsl
sbb
movb
add
xchg
aaa
xchg
repz
mov
jp
xor
movsb
out
das
out
jge
cmp
dec
and
dec
jge
outsl
cs
dec
out
xchg
rolb
popf
enter
mov
mov
dec
shlb
cltd
mov
pop
cmc
pop
in
ret
adc
xor
jno
aad
testl
xchg
shrl
xchg
lods
and
xchg
clc
push
inc
repz
ljmp
roll
or
stos
jle
into
int3
push
pop
jo
pop
int3
jo
jge
pop
xchg
push
add
ljmp
cmp
outsl
jl
pop
inc
jns
mov
pop
lds
pop
rorl
ret
cld
xor
sbb
dec
and
lods
cli
pop
imul
push
movsl
stos
push
aad
jp
mov
pop
pop
js
pushf
jecxz
mov
jne
dec
lods
aad
inc
test
popf
shr
inc
nop
cmp
das
push
imul
repz
andl
sbb
rcrl
inc
lods
nop
repnz
fidivrl
push
pop
push
dec
mov
inc
push
xchg
pop
add
xchg
sbb
lods
and
jne
out
inc
mov
pop
mov
sub
cmp
sahf
cld
icebp
push
dec
lret
lahf
and
gs
ss
cmp
out
adc
mov
imul
xor
cmp
mov
jge
and
inc
inc
sbb
sbbb
in
jne
bound
aas
add
push
or
mov
xor
lods
or
add
jmp
xchg
push
clc
ficompl
insl
inc
pop
jns
lea
add
add
ftst
jmp
fsts
lds
arpl
jl
icebp
out
iret
add
mov
adc
outsb
cmp
jle
das
ds
sub
movsb
cmp
lcall
mov
cmpsb
sbb
dec
stc
cmc
loopne
jg
push
in
or
cwtl
mov
pop
mov
loop
repnz
pop
add
push
push
dec
cmp
out
sub
inc
sub
cs
stos
mov
leave
cli
mov
xchg
jae
shrb
jo
mov
test
aaa
xor
insb
mov
daa
pop
lock
jno
dec
xchg
in
pop
xor
add
test
or
pop
push
inc
std
cli
orb
sbb
in
sbb
inc
and
xor
imul
int3
ret
cmp
shrl
pmulhuw
push
jo
jmp
popf
mov
sbb
dec
cmpsl
jns
inc
iret
lea
repz
popf
cmp
mov
lret
js
push
push
adc
inc
in
test
and
push
addr16
or
cmpl
movsb
pusha
lret
or
jnp
dec
push
and
xorl
jno
ret
xor
pop
jns
mov
push
cmpsb
mov
adcb
popa
mov
or
loope
jb
pop
or
rcll
mov
xor
aas
data16
xlat
adcl
inc
or
cli
xchg
popf
sbb
das
dec
add
mov
sbb
xchg
test
movsb
js
fildll
loop
xchg
test
xor
and
aas
stos
dec
in
popa
or
sub
fidivs
lods
and
jg
dec
or
in
pop
lret
or
xchg
test
test
jge
and
ljmp
aaa
push
adc
xor
push
add
test
dec
dec
in
test
in
out
add
cld
out
mov
pop
cmp
scas
nop
scas
sub
pop
add
jge
mov
movl
push
repnz
mov
push
xor
jl
jno
test
loop
shll
lret
xor
add
mov
sbb
push
xchg
imul
push
fldl
pop
enter
hlt
jge
into
cmp
out
mov
dec
or
sub
ds
jne
inc
jmp
lods
cmp
add
dec
je
mov
rclb
cmp
sub
push
inc
scas
xchg
ss
decl
xchg
mov
push
sub
xor
test
push
ljmp
inc
in
shlb
mov
or
adc
mov
push
stos
adc
ret
repnz
movsb
loop
sti
pop
pop
mov
sub
or
add
sub
jo
cmp
out
mov
jb
and
popf
addr16
xor
out
dec
mov
bound
jmp
sbb
sub
lahf
movl
mov
mov
and
aas
mov
jnp
aaa
sub
mov
fildll
cmpsl
sub
inc
imul
dec
popa
mov
jnp
cltd
xchg
rolb
jg
push
adc
or
in
lds
call
adc
cwtl
jg
lcall
push
cld
push
gs
movsl
fadd
xor
mov
movl
lds
mov
dec
test
jno
imull
jle
fistpll
data16
movsb
fisubrl
push
add
or
jbe
or
aaa
loop
cmp
pop
ljmp
cmp
mov
das
les
scas
push
int3
add
mov
mov
inc
and
mov
pusha
and
dec
push
in
xor
ds
xchg
lret
pop
pop
test
ss
scas
jp
inc
jnp
mov
add
xor
into
call
push
sahf
pop
rcr
xor
xlat
hlt
jb
jp
stos
out
adc
loop
mov
adc
das
cmp
push
insl
ds
sbb
mov
in
mov
or
dec
leave
imul
xorb
je
fcoml
sahf
stos
fmul
mov
cmpsb
jmp
adc
mov
cmpsl
pop
rcrl
andb
mov
ds
and
orb
xchg
aad
mov
add
test
nop
mov
and
sub
cltd
xor
adc
test
rclb
add
and
push
addr16
gs
enter
call
pusha
lret
stc
scas
push
lcall
pop
jg
icebp
inc
mov
and
mov
adc
lahf
out
and
jae
outsb
sarl
xchg
daa
xorb
jb
dec
fnstenv
mov
loope
int
jg
loop
adc
insb
xor
popf
std
out
outsb
inc
add
test
xchg
cmpsb
fildll
mov
and
mov
push
jb
inc
in
out
mov
xor
pusha
popa
in
sub
pop
mov
or
sub
paddsb
mov
mov
xlat
adc
push
enter
cwtl
aad
jmp
pop
frstor
pop
pop
rcll
or
lds
xor
jmp
aaa
stc
push
lea
adc
das
xlat
add
js
sub
mov
dec
aaa
repz
or
sub
int3
imul
jle
fst
mov
in
mov
jae
clc
and
int
xchg
lret
mov
enter
lods
inc
pushf
cli
xor
ret
shll
and
xchg
push
xchg
mov
pop
sarb
xchg
es
cwtl
lock
gs
lret
ja
adc
lods
cmp
push
lds
insb
dec
into
cld
inc
ficoms
push
push
xor
dec
and
mov
lock
lahf
insl
pop
loope
inc
icebp
mov
pop
aaa
jge
xor
incl
test
leave
iret
mov
mov
das
bound
sub
xchg
add
dec
pop
jg
leave
mov
cli
test
in
mov
mov
hlt
cs
sub
sbb
mov
xchg
ljmp
jl
jl
pop
js
push
xchg
adcb
mov
sti
sarb
mov
nop
xor
xchg
pop
pop
cltd
mov
subl
cmpb
imul
jp
loopne
mov
in
pop
cmp
lods
addb
sti
imull
mov
ss
pop
mov
hlt
imul
dec
jmp
mov
insb
pop
or
sub
cmp
mov
mov
arpl
call
jl
cmpsl
push
inc
nopl
jo
cmp
cmp
hlt
add
sbb
mov
dec
push
in
lock
rorb
mov
push
outsl
dec
pop
sub
fsubl
andb
fisubs
jecxz
sarl
das
hlt
jge,pn
pop
cmpb
stos
ret
add
sub
jle
hlt
xor
and
pop
jge
lods
xchg
pushf
popa
sbb
pop
andl
dec
xchg
xchg
sahf
mov
insl
sub
adc
into
outsb
adcb
adc
fwait
sbb
add
or
pop
ret
dec
ds
mov
aad
mov
sub
push
mov
xchg
pop
shrb
into
data16
or
stos
fnsave
rcrw
cld
mov
jge
cmp
ds
mov
xor
ljmp
mov
inc
lret
and
jae
mov
fstps
mov
pop
fcoml
xchg
sti
inc
inc
nop
pop
adc
mov
pop
icebp
xchg
push
test
add
jl
fidivrs
jae
jo
inc
pop
push
dec
cmp
mov
cmp
ja
jmp
or
cli
pop
mov
cmpsl
dec
mov
sbb
mov
pinsrw
mov
lds
xlat
cli
inc
rcll
adc
pop
les
and
lcall
jecxz
sahf
xchg
mov
insl
sub
testl
mov
scas
push
adc
pop
mov
fsubrs
jle
push
lret
movd
mov
adc
scas
fidivrs
es
adc
out
aaa
and
jae
aaa
lds
xor
xchg
icebp
xchg
stmxcsr
lcall
dec
jnp
adc
inc
insl
shll
mov
popa
ficoml
ja
mov
test
dec
dec
pushf
add
cwtl
int3
cmc
inc
mov
sub
xor
rol
add
sbb
std
fs
mov
stos
add
movb
out
cmp
in
icebp
dec
mov
cli
orb
roll
cli
stc
sbb
push
stos
cmpsb
cmc
or
fstps
sbb
bound
inc
sbb
inc
bound
cmp
int3
push
sbb
push
leave
call
fnstsw
mov
lea
outsb
mov
dec
jg
adc
cmp
test
iret
xchg
cmp
lds
dec
dec
mov
and
push
xchg
punpcklbw
rol
ss
cmp
dec
xlat
dec
or
nop
bound
ss
je
mov
cmp
dec
cli
dec
mov
inc
adc
xor
daa
lock
cmovg
mov
lods
push
rclb
xchg
call
inc
cltd
dec
rcrl
cmp
adc
repnz
repz
imul
popf
jecxz
sub
in
addb
pusha
cli
mov
add
movsb
fs
and
adc
stc
or
mov
jecxz
pop
add
and
out
mov
arpl
lock
lret
popa
mov
lret
adc
jno
push
mov
jecxz
pop
subl
sbb
jge
das
pop
addr16
xor
shrl
jns
mov
push
cmp
aas
mov
adc
mov
mov
pop
xchg
pop
js
push
fcomip
out
dec
stos
sub
jmp
lods
or
lahf
in
movsb
mov
leave
enter
sbb
add
push
mov
cli
ret
or
jnp
jle
adc
lods
lods
ror
stos
cmp
push
xor
cmp
mov
cmp
push
push
jbe
inc
or
xchg
inc
pushf
mov
fsubrp
inc
or
xchg
xor
fmul
fisubrl
pushf
or
out
xchg
out
cltd
dec
movsl
adc
jmp
xchg
mov
rcrl
push
mov
outsl
je
mov
stc
loopne
gs
sbb
dec
push
js
xchg
jecxz
mov
add
mov
popf
hlt
aaa
push
pop
lcall
fcomps
out
sbb
ret
push
cmc
scas
xorl
pop
sub
xchg
jmp
mov
daa
dec
push
xchg
fstpt
mov
sub
sub
popa
adc
lock
jne
call
mov
push
js
adc
xchg
push
insl
dec
mov
daa
pop
push
pop
push
push
cwtl
dec
mov
push
jno
rcrl
jnp
mov
xchg
mov
in
mov
mov
push
inc
jge
push
push
sbb
js
fisubrs
and
pushw
dec
inc
and
inc
mov
lret
pusha
push
fistl
inc
lea
mov
nop
pop
cmp
adc
lret
sub
mov
andb
mov
mov
sbb
xchg
dec
add
sbb
pusha
pop
jl
movsb
sbb
gs
sub
mov
xchg
xor
cwtl
jecxz
pand
mov
rol
jmp
pop
gs
xchg
dec
loope
test
nop
ret
add
adc
and
jnp
je
jmp
jno
jo
sbb
or
or
add
punpckldq
stc
sbb
lret
cli
xchg
mov
sarl
pop
jp
sahf
jno
out
pop
lcall
jmp
pop
inc
popf
mov
and
sbb
repnz
lahf
add
dec
or
xor
mov
jbe
sub
lret
out
cwtl
aas
test
neg
iret
inc
jp
mov
inc
hlt
mov
push
lds
jle
mov
ljmp
ficoms
sahf
cmc
int
sti
in
leave
adc
mov
or
sub
push
addr16
or
pop
pop
xchg
aas
jge
mov
cli
push
push
enter
cwtl
repnz
sarl
aad
fildll
jnp
push
xchg
lds
pop
push
and
sub
fs
dec
stos
ret
repz
push
addr16
xor
iret
adc
mov
xor
sub
hlt
jp
stos
xchg
and
lds
pop
mov
adc
test
imul
repz
xchg
xor
cwtl
mov
cmp
rcll
and
dec
inc
in
repz
fcmovne
lahf
dec
dec
pop
cmc
cmp
mov
imul
fs
jle
sub
add
lods
fwait
repnz
lods
jne
mov
or
jbe
or
add
sub
test
xchg
sahf
notb
jno
pop
addr16
xchg
out
ror
in
outsl
dec
dec
scas
cmpsl
clc
mov
push
sti
adc
inc
jecxz
int
sub
mov
jecxz
lds
mov
sar
push
pop
jb
jp
xor
js
adc
movsl
pusha
mov
icebp
cmpsb
sub
add
daa
jge
fwait
fs
adc
shll
imul
movb
scas
jb
mov
repz
daa
mov
add
or
dec
in
inc
cmp
xchg
stos
cli
cmp
ds
cltd
in
hlt
imul
inc
es
out
or
repnz
into
mov
ror
sub
add
loop
imul
jo
ret
jecxz
sub
adc
rol
pop
inc
fst
or
push
arpl
rcll
ljmp
push
popf
rclb
or
push
icebp
loopne
fildl
nop
int3
jecxz
outsb
bound
ret
mov
jle
or
cmp
dec
mov
and
fists
mov
cmp
out
out
push
imul
mov
jmp
sbb
int3
push
inc
xor
inc
lret
sub
pop
xor
fmull
enter
jmp
xlat
icebp
push
cltd
ret
xchg
fwait
sbb
shrl
cmp
cs
sub
clc
sbb
shll
lock
dec
push
pop
xchg
sub
jecxz
and
inc
sub
mov
cmp
test
sbb
mov
push
cs
jo
ds
jne
cmp
lahf
fadds
pop
cmpsb
push
repz
pop
mov
out
push
xor
std
sbb
mov
or
out
mov
adc
sub
sub
mov
dec
jecxz
cmp
cmp
dec
pop
mov
shrl
or
push
in
je
arpl
xor
inc
out
mov
jnp
lods
int3
mov
mov
xor
mov
mov
lcall
sbb
std
insb
dec
xchg
xor
in
mov
mov
mov
push
pop
insb
fsubrp
div
mov
test
addr16
pop
lds
mov
out
arpl
lahf
sbb
test
std
sub
push
cmp
or
add
push
cltd
into
push
ljmp
mov
dec
fidivl
insl
push
jle
add
sub
xor
dec
clc
sub
sahf
xchg
add
cmpsb
or
and
mov
scas
pop
mov
ss
std
mov
jbe
scas
dec
out
cmp
jl
lcall
insb
loop
push
xor
pop
sub
cmp
pop
ljmp
test
movsl
das
pop
int3
or
mov
dec
outsl
repnz
mov
les
or
les
loope
push
or
xor
sub
push
enter
sub
jmp
call
js
lahf
std
repz
outsl
dec
test
loop
push
mov
sar
pushf
mov
ficompl
mov
data16
and
leave
jg
lahf
lds
mov
hlt
out
ss
or
outsb
dec
pushf
scas
sbb
test
sbb
mov
or
or
pop
ret
cmp
aaa
fstpt
cwtl
inc
lret
mov
fimuls
leave
addb
xchg
lds
sahf
packsswb
sub
push
adc
sub
clc
pcmpgtb
shrb
das
in
out
call
cmpb
add
lock
and
jbe
xor
sub
adc
cmpb
cmp
xor
and
ja
nop
test
xchg
pop
cltd
inc
add
sub
sbbl
mov
push
loope
sub
ljmp
jecxz
mov
sarl
lods
jmp
inc
mov
out
or
jb
repnz
inc
mov
fcoml
adc
test
movsb
arpl
arpl
sbb
out
dec
imul
insb
and
ja
push
jb
fbstp
adc
add
not
ja
jp
mov
cltd
xchg
mov
mov
stos
outsl
clc
adc
movsl
std
mov
daa
sub
mov
sbb
cli
sbb
sub
in
push
dec
andb
out
fs
pop
push
xor
or
or
fcomps
addr16
out
shlw
mov
aad
mov
pop
ficompl
js
and
std
sub
jg
cld
inc
push
mov
ja
fcomps
jbe
out
inc
mov
dec
js
fdivrl
mov
or
pop
icebp
cmp
std
push
mov
or
addr16
push
push
mov
cmpsb
es
daa
cmp
mov
stc
fdiv
sbb
and
movsb
dec
or
push
leave
push
outsb
pop
lret
xchg
cmpsb
fmull
bound
and
or
jb
popf
loopne
pop
push
daa
in
add
push
mov
mov
jbe
stos
sbb
leave
inc
cmp
pusha
pop
shll
ficoms
push
out
je
dec
adc
or
out
mov
sbb
inc
mov
fsts
cld
insb
xchg
mov
jnp
fimull
pop
xchg
hlt
je
aas
push
sub
gs
cmp
inc
dec
loopne
sub
lods
push
jb
addl
push
mov
pop
lds
subl
mov
insb
inc
out
dec
shr
cltd
push
ds
js
adc
ret
les
out
add
js
arpl
ja
jnp
movsb
imul
data16
jno
std
arpl
xor
and
xor
mov
dec
and
out
jge
mov
inc
mov
mov
outsb
loope
lds
dec
imul
fisubrl
repz
adc
mov
movl
pusha
mov
leave
mov
rcll
adc
je
sahf
jns
jecxz
ret
dec
dec
push
add
adc
xor
shl
cmp
rclb
cmc
lcall
roll
mov
jmp
xchg
xchg
and
xchg
pop
insb
in
pop
mov
sub
jmp
pushf
mov
add
or
or
pusha
push
add
cmp
cmp
adc
leave
xor
adc
pop
pop
mov
fistps
repnz
icebp
inc
addr16
adc
mov
and
popa
gs
shlb
cmpsl
ss
xchg
scas
repz
jb
iret
popa
cltd
leave
xchg
pop
adc
jno
pop
sub
cmp
mov
xor
mov
bnd
lds
outsl
imul
sbb
xor
movsl
loopne
mov
push
inc
xchg
fwait
loope
out
jae
cmp
inc
subl
inc
sbb
jne
fmul
push
mov
dec
inc
pop
cmp
inc
call
fstl
addr16
test
pop
or
aam
xchg
aaa
loope
aas
movsl
push
jno
mov
or
fsts
clc
inc
mov
and
and
gs
ret
inc
mov
dec
mov
mov
pop
addb
sbb
adc
inc
rol
neg
pop
adc
incl
cmp
leave
repz
jecxz
das
sbb
cmp
imul
add
dec
iret
cltd
fnstsw
aad
pop
fldcw
mov
popf
sbb
repnz
dec
mov
cmp
adc
lock
arpl
or
loop
aas
and
xorb
jmp
dec
cs
cwtl
ss
mov
mov
mov
push
or
cmp
xchg
call
adc
insb
mov
aaa
mov
pop
pusha
arpl
shrl
add
push
cmp
adc
dec
movsl
outsb
xchg
clc
pop
cmp
or
pop
inc
outsl
dec
cltd
ja
mov
call
dec
or
ds
xor
shlb
xchg
push
fs
push
in
les
leave
jne
je
out
pop
dec
sti
imul
rolb
push
dec
outsb
inc
leave
sub
xor
fwait
and
cwtl
xchg
ja
push
icebp
in
push
push
sbb
lahf
pop
fidivrs
jnp
jo
jne
clc
fwait
repz
je
nop
lret
mov
jae
xchg
inc
arpl
mov
sub
fwait
xchg
mov
cmc
clc
data16
int
mov
mov
sbb
std
loope
call
lods
stc
adc
insl
int3
dec
imul
fcmove
mov
aaa
out
xor
cmc
negb
out
sub
inc
stos
jnp
dec
lock
out
es
loopne
cmpsl
in
movsl
push
xor
xchg
xor
push
stos
rcll
rorb
sbb
add
push
adc
cmp
or
dec
mov
sarl
sbb
sahf
sub
xor
xchg
inc
pop
cmp
mov
xchg
xchg
jge
xor
jne
addr16
movsl
aad
int3
cltd
push
xchg
fucomi
popa
sub
jmp
cli
cmp
sub
daa
and
add
pop
and
push
loopne
roll
xchg
aaa
push
xchg
arpl
jl
icebp
inc
mov
std
xchg
push
push
pop
rorl
ss
adc
cli
xchg
jb
inc
jge
push
lods
loopne
mov
push
sbb
and
in
or
push
outsl
shrl
push
lret
rcrb
or
sub
pushf
cmp
add
sub
loope
xlat
fwait
sub
outsb
add
dec
jbe
add
test
loopne
jge
outsb
add
mov
push
adc
sub
or
rorl
inc
sbb
sbb
push
insb
es
sti
roll
fwait
push
cmpsl
movb
xchg
pop
mov
xchg
cmp
cmpsl
mov
imulb
ljmp
lret
in
push
stc
add
aad
dec
jnp
sbb
insl
lahf
or
adc
bound
add
pop
es
lret
push
pushf
addr16
std
inc
cmpsl
jp
and
xchg
mov
sbb
mov
dec
ret
pop
pop
scas
push
mov
and
sub
in
pop
mov
notl
ret
ror
dec
inc
xchg
xchg
cmp
dec
loop
add
jmp
sbb
push
call
mov
ret
je
jb
fs
stos
mov
dec
push
test
push
aas
add
inc
pop
nop
rcll
mov
fdivl
mov
sub
mov
cmc
stos
outsl
std
or
push
or
xor
out
mov
sub
je
nop
pushf
stos
mov
orb
xor
test
je
scas
mov
push
mov
mov
je
inc
ret
jg
cmp
xchg
mov
cmp
xlat
in
stc
dec
and
and
scas
jmp
stc
add
jmp
imul
sub
sub
flds
and
aaa
rcrb
mov
fnstsw
sub
push
fcoms
add
inc
mov
adc
daa
sub
ffree
adc
scas
fcmovnb
sub
mov
ss
cmp
push
jno
xor
jecxz
sbb
cmp
add
sbb
cmp
adc
stc
mov
sbb
or
adc
mov
jb
mov
cmp
lret
addl
fidivs
js
xor
insl
push
pop
outsb
jne
movsl
sbbb
mov
sarb
push
pop
clc
leave
das
stos
psubw
xor
xor
push
mov
xor
jnp
or
js
fstpl
push
int3
mov
mov
jp
dec
jbe
test
daa
mov
mov
add
sub
jnp
push
mov
cmp
das
push
clc
mov
inc
sbb
cmpsl
pushf
lods
popa
pop
xchg
pop
sub
iret
xchg
pop
mov
ss
cld
dec
jnp
fsubr
imull
leave
xchg
inc
cmp
dec
adc
popf
scas
mov
fdivl
jbe
sub
int
or
cli
mov
cmpsb
sub
jle
ffreep
mov
jbe
pop
or
jg
in
fmul
xchg
ja
push
inc
and
aaa
mov
jnp
inc
cltd
loop
mov
lahf
cmp
imul
sbb
ja
outsl
mulb
jmp
mov
xchg
cmp
mov
mov
in
orb
pop
xor
add
mov
nop
xor
or
cld
xlat
mov
outsb
push
arpl
rcr
or
add
lahf
int
mov
out
add
cld
ss
cmpsl
fiadds
enter
repnz
jl
cmpsl
push
loope
orl
sbb
mov
sub
sbb
jns
in
mov
cmp
xor
pop
mov
cmp
ja
mov
movsb
nop
int
mov
mov
and
out
pop
pop
dec
iret
push
jo
mov
jno
imul
addb
inc
add
int3
or
in
or
fmul
mov
sub
sbb
add
jo
icebp
xor
test
mov
sti
sub
mov
rorb
pop
shlb
gs
sbb
push
pop
hlt
adc
rcrb
popf
dec
and
in
adc
out
jns
sub
rol
dec
into
imul
push
xor
shll
push
cmp
outsb
ret
jno
xor
cmp
mov
xor
mov
mov
cmpsl
fstl
mov
mov
mov
or
add
loopne
push
fimull
inc
test
int3
dec
int3
cld
lds
scas
daa
scas
add
push
push
push
pop
pushf
xchg
stos
cmp
jle
es
flds
cmp
sub
fdivrl
inc
cmp
dec
fs
loope
jg
sbb
leave
rorl
incb
icebp
xor
pop
mov
stc
incb
add
fnstenv
push
push
inc
push
in
jg
je
mov
leave
mov
in
in
and
mov
stc
sarb
sbb
mov
jle
mov
sbb
outsb
mov
xchg
das
into
sub
js
lds
pop
pop
or
sbb
mov
addl
push
inc
mov
mov
ficomps
xor
inc
ret
sbb
ret
vdivps
push
sbb
mov
xchg
push
ficomps
jb
xchg
mov
sub
sbb
dec
pop
rcll
and
cli
cmp
cmpsb
stos
push
leave
and
aas
fimuls
xor
mov
inc
outsl
adcl
lret
sub
xchg
mov
mov
repnz
mov
or
push
int3
cmpsb
add
add
cli
es
dec
icebp
movsl
movsl
jae
xor
loop
pop
imul
push
arpl
cmp
data16
clc
fisubl
push
inc
mov
ds
lock
out
adc
dec
scas
and
and
pop
jno
fs
mov
into
sbbb
mov
pop
enter
jecxz
and
inc
jae
and
sbb
jge
xor
adc
inc
mov
mov
mov
sarb
sti
lea
jp,pt
add
jno
cmpsb
adcb
imul
bnd
bnd
in
inc
sbb
shr
and
out
push
mov
adc
pop
imul
pop
fldcw
push
decl
fcmovne
in
cmpb
cltd
das
int
mov
addr16
push
bound
inc
mov
dec
add
mov
fcmovne
lahf
inc
push
push
ds
xor
jg
and
dec
int3
cli
out
aas
mov
lret
addb
int3
inc
mov
cmpsb
inc
in
aam
adc
imul
fisttpll
or
push
mov
mov
test
out
fmuls
repz
mov
xchg
fcmovnbe
inc
repnz
enter
into
ds
daa
roll
movsb
out
push
dec
dec
jne
pop
ljmp
dec
xchg
ret
pushf
scas
jno
sub
mov
pop
and
xor
test
cmp
adc
xchg
out
mov
movsb
sub
cmp
pop
test
jp
lcall
and
popa
int3
xor
pushf
pop
adc
lods
dec
cmp
jmp
adc
or
ret
sbb
xor
insb
loope
jl
sub
arpl
push
into
imull
pop
xor
lods
jle
int
or
inc
lret
xorl
movsb
mov
xor
dec
mov
mov
inc
mov
clc
loopne
jns
mov
test
mov
sbb
add
pop
jne
sbb
mov
fcoml
and
mov
iret
mov
or
add
cmpsl
rcl
lods
pop
ficoms
jg
mov
or
ds
lea
dec
sbb
iret
js
lahf
and
div
and
pop
jg
push
call
divb
cwtl
mov
adc
mov
imul
xchg
cmc
mov
lock
movsb
mov
lock
gs
mov
loop
les
push
mov
addr16
xchg
add
pop
or
mov
dec
sub
fcompl
stos
and
in
push
mov
stos
jns
sbb
fsts
fcmovnb
test
fsub
sbb
sti
out
negl
mov
int
add
sub
in
dec
jg
adc
stc
fmul
je
rcr
jnp
push
jecxz
popf
xor
mov
xor
scas
lea
lahf
push
ljmp
xchg
pop
sbb
jb
lods
mov
insl
popf
insl
pop
inc
mov
test
push
pop
sub
jo
gs
adc
mov
adc
jae
mov
jno
ret
fstl
test
xchg
int3
or
into
xchg
rol
stos
movsb
sarl
into
int
ja
mov
bnd
mov
aas
dec
cwtl
cld
xor
push
out
imul
or
out
sbb
gs
mov
pop
mov
mov
stos
xchg
pop
xorl
lds
in
push
xchg
push
mov
jnp
pushf
andb
pushf
test
mov
int3
push
mov
pushl
adc
andl
cmp
cmc
cmpb
je
insl
mov
push
add
jo
pop
jb
inc
xchg
dec
ss
cmpsb
cmp
mov
adc
sub
mov
roll
fwait
jnp
mov
imul
dec
jg
mov
das
jb
loop
and
jbe
push
push
loop
ja
jmp
shrl
xchg
dec
dec
or
and
rcll
mov
dec
push
sbb
pushl
push
xor
push
mov
xchg
jb
xchg
mov
and
pop
rcll
inc
jne
mov
scas
shrb
ss
lods
out
insb
ljmp
mov
mull
adc
dec
je
sbb
cmpsb
push
pop
mov
jae
xlat
push
pushf
popa
adc
push
imulb
subb
inc
sbb
dec
xchg
jns
mov
add
aad
adc
pop
sbb
mov
mov
out
enter
mov
movsb
jo
in
mov
cmp
fsubl
imul
jmp
out
and
adc
jbe
movsb
mov
frstor
imul
jnp
xor
insl
mov
std
jbe
add
rol
adc
mov
ret
mov
negl
pushf
iret
test
mov
xor
mov
insl
das
out
lret
add
mov
pop
lcall
loopne
xor
sbb
fstl
sub
or
add
inc
imul
in
xor
fwait
ds
testb
xchg
rcr
insb
ja
hlt
in
add
sbb
pusha
or
sarl
push
mov
mov
lea
xchg
sbb
call
test
xchg
jp
or
in
add
jge
adcl
rorb
mov
add
xchg
arpl
repnz
xorl
xor
pop
push
in
push
faddl
lcall
cmpsl
lahf
movsb
pop
je
add
ds
mov
ret
push
lret
aam
jne
std
sbb
xchg
jmp
mov
pop
arpl
fwait
ja
add
sub
or
mov
jge
and
test
sub
scas
mov
mov
ss
cmp
jmp
icebp
dec
add
les
mov
jp
ret
inc
xor
xchg
inc
mov
fucom
mov
add
mov
or
sbb
decl
inc
int
fdiv
loopne
outsl
jbe
shll
dec
inc
rorb
cmp
inc
mov
int
cmpsl
ret
outsb
loop
out
xor
in
aaa
sub
sbbl
xchg
lret
aad
push
mov
push
xchg
addr16
fsubrs
addr16
dec
cmpsl
out
xchg
mov
fsubl
or
loopne
and
xchg
push
movsl
cli
cmp
or
lods
xchg
cmc
pushf
add
xchg
scas
loopne
jnp
daa
xchg
push
shll
test
push
es
test
movsl
inc
clc
inc
cwtl
stos
out
hlt
in
ret
or
ljmp
bound
stos
pop
enter
push
lret
sbb
xor
xchg
cmp
mov
mov
or
mov
add
add
push
pushf
daa
mov
stos
inc
dec
jbe
xchg
orb
outsw
stc
push
out
movb
push
out
in
out
pop
and
leave
outsb
outsb
leave
imul
xor
pop
dec
les
aam
aad
xchg
push
inc
push
test
in
push
cli
repz
fisubs
add
jle
out
or
into
daa
push
jb
repnz
test
sbb
mov
push
or
test
add
hlt
insl
mov
enter
dec
or
shl
sbbl
sbb
fldl
sub
and
xor
arpl
lea
adc
mov
fwait
mov
xchg
arpl
push
ss
mov
xor
inc
pop
arpl
pop
gs
ret
xor
arpl
push
push
dec
shl
mov
mov
aam
mov
ret
sub
cmc
fidivs
sub
push
xlat
pushf
test
lcall
test
fwait
or
es
sub
cmpb
mov
hlt
jo
mov
repz
xchg
mov
push
pop
jno
hlt
inc
dec
je
push
pop
cmp
and
jge
push
sar
sub
stos
mov
push
out
add
pop
jle
dec
sbb
pop
lods
xlat
mov
push
dec
xor
push
pop
push
cmp
mov
or
or
mov
loop
inc
nop
sbb
das
cmpsb
gs
xchg
push
jl
mov
jnp
icebp
mov
mov
dec
jp
sbb
jae
jae
xchg
js
jne
int3
inc
and
mov
out
dec
mov
in
ljmp
call
subl
sub
mov
std
and
rcl
inc
test
les
mov
dec
inc
push
lret
add
mov
imul
mov
pop
pslld
pop
dec
ficompl
add
jle
lret
mov
lds
int3
xorb
or
inc
xchg
in
outsb
outsl
sub
pop
cmp
cwtl
add
jecxz
pop
pop
jmp
add
mov
push
mov
test
mov
mov
out
dec
test
push
arpl
fldl
add
orl
lret
js
mov
out
jo
mov
inc
or
test
sub
movsl
mov
decb
ds
sub
jl
scas
sub
sahf
data16
flds
imul
inc
xor
leave
mov
inc
shll
nop
push
sbb
xchg
pause
int
sub
mov
sub
pop
lods
or
popl
cmp
jmp
lods
cmc
mov
xchg
cs
out
scas
jmp
out
mov
mov
fcmovu
jne
cmp
push
mov
stos
in
daa
movsl
dec
xchg
jmp
insl
dec
arpl
cwtl
lahf
inc
hlt
cmc
mov
cmpsl
lea
inc
push
sti
mov
cmpsl
add
notb
call
icebp
push
call
pop
aaa
mov
add
mov
je
subl
aas
aaa
fstpt
iret
pop
adc
aas
arpl
mov
inc
sbb
sbb
loop
out
pop
pop
shlb
push
sbb
jns
mov
pop
mov
into
imul
fisttpl
je
mov
mov
xor
in
adc
cld
cs
pop
in
leave
mov
and
cmp
pop
stc
lods
mov
daa
repz
mov
inc
mov
fwait
sbb
jne
mov
mov
mov
ja
loope
pop
je
dec
es
sahf
mov
mov
hlt
adc
xchg
in
xchg
imul
cmp
fisubrs
sbbb
cmp
jg
xor
push
mov
sub
fstl
aad
and
xchg
sbb
fimull
call
xor
and
loope
sahf
cmpsl
rolb
pop
filds
stos
jle
add
popf
dec
cmp
mov
lods
psrlw
sti
test
xchg
mov
in
sub
cmp
out
test
cli
out
and
mov
mov
shlb
mov
out
pop
push
insb
push
xor
pop
or
jle
std
sbb
out
pop
sbb
adc
lods
mov
out
xor
mov
jne
jmp
mov
int3
xchg
add
sahf
test
and
mov
and
xrelease
imul
lcall
insl
cmp
and
aad
inc
cmp
ss
mov
hlt
lods
sbb
adc
adc
and
cmpsl
outsb
fmul
mov
mov
add
inc
aad
cmpsb
pop
sbb
test
push
inc
xor
enter
lds
xchg
arpl
lret
cltd
cltd
cltd
outsb
arpl
adc
js
mov
push
mov
ret
jbe
dec
inc
mov
popa
aam
pop
movsl
enter
jg
xor
jecxz
push
outsl
mov
jp
jge
push
fwait
and
andb
lret
jmp
inc
cli
push
outsl
int
xchg
out
jne
fimuls
lahf
mov
dec
adc
dec
add
pop
scas
out
cltd
jecxz
fimuls
icebp
and
cwtl
repnz
inc
in
dec
std
xor
cmp
jnp
mov
aas
push
cmp
imul
movsl
leave
in
push
decb
int
outsl
repnz
gs
pop
push
stos
push
dec
or
sbb
ret
adc
fcompl
add
inc
data16
out
js
lods
jle
es
adc
in
mov
fs
xor
in
xchg
pop
adcb
je
inc
in
int
cmpl
subb
in
out
xorb
addr16
xchg
and
clc
sbb
sub
cmpsl
lods
pop
leave
jae
mov
sbb
cltd
adc
fiaddl
shrb
out
in
lea
cmp
scas
test
xor
es
adc
xchg
and
xor
pop
add
pop
mov
int3
out
mov
sbbl
add
rcrl
aad
sub
in
jno
or
cmp
cmp
adc
out
add
sub
out
xchg
xchg
push
xor
jl
mov
push
mov
push
lret
inc
cmp
icebp
pop
out
sbb
pop
mov
jmp
mov
int
jg
adc
lock
mov
nop
das
sbb
lret
push
jecxz
mov
dec
adc
dec
stos
mov
pop
push
dec
push
fsubl
fwait
and
fisttps
test
pop
dec
fidivs
outsl
lahf
push
lods
std
cmp
lock
pop
and
mov
cltd
je
jecxz
xchg
lods
lcall
out
xor
lods
rol
dec
in
jg
fmul
in
xchg
jge
mov
pop
cmc
es
push
out
arpl
test
int
fstpt
aaa
cltd
mov
arpl
mov
mov
iret
xchg
xchg
sub
push
sub
pop
pop
out
popa
outsb
scas
ss
imul
jbe
loop
add
pusha
insb
in
jmp
mov
ret
loopne
imul
sbb
nop
inc
sbb
das
invd
in
mov
addr16
or
dec
movsb
mov
and
hlt
cli
bsf
xchg
incl
xchg
sbb
sbb
xchg
mov
aad
testb
outsl
int
jmp
or
push
adc
adc
scas
dec
jnp
dec
movb
frstor
pop
jg
cld
push
pop
xchg
fldcw
mov
mov
jae
nop
or
aam
xchg
aaa
jb
cmpsl
aad
dec
call
loopne
push
sub
adc
xchg
pop
in
jns
push
in
mov
pusha
ljmp
xchg
pop
xchg
push
pop
mov
cmpb
jb
push
mov
sahf
add
adc
aas
hlt
cmpsb
out
les
push
das
aas
mov
add
sub
repnz
mov
pop
aad
addl
mov
push
jae
stos
shlb
aaa
lret
scas
jle
inc
pop
fwait
insl
imul
push
sbb
push
xchg
cltd
dec
bound
and
pop
outsb
popf
decl
adc
dec
inc
xchg
loope
xchg
push
test
decl
filds
dec
mov
int3
into
ja
jl
lods
outsl
cmp
ret
imul
outsl
out
xchg
push
aas
jp
pop
adc
shl
fs
fcoms
sbb
jecxz
mov
dec
dec
cmp
mov
repz
stos
sbb
loopne
sub
mov
subb
or
shrb
fs
xor
lahf
xchg
and
inc
sub
sub
xchg
pop
push
push
pop
lcall
jmp
nop
stos
dec
shrb
addb
movsb
pop
jno
cmp
js
sub
sub
sub
inc
add
xchg
adc
jmp
mov
xor
cmpsb
aaa
fcomp
push
dec
jecxz
rcrb
orb
xchg
mov
push
pop
aam
pop
mov
cmp
pop
cwtl
in
add
out
mov
decb
outsl
loope
repz
mov
xchg
sub
add
inc
add
pop
test
and
mov
mov
je
cmp
jnp
push
pushf
cmpsl
incl
cmc
push
int
adc
out
in
bound
cmp
arpl
shrb
cld
dec
xchg
aad
fstpt
push
mov
test
dec
inc
or
add
lcall
push
dec
ret
mov
adc
cmp
lahf
sub
mov
clc
mov
and
pop
sbb
testl
mov
and
or
cwtl
subb
repz
mov
push
sub
stos
xchg
es
cmpsl
test
jbe
iret
in
jb
mov
lods
pop
mov
fmul
mov
popa
movsl
dec
cmc
test
bnd
mov
leave
adc
mov
jmp
js
inc
adc
or
aad
insb
insb
cmp
fnstsw
xorb
sbb
inc
incb
mov
jae
sar
test
in
lret
fisubrl
je
xor
orb
std
shl
dec
aas
ja
arpl
push
sub
push
das
adc
jno
dec
mov
mov
push
je
adc
pop
ror
sbb
adc
les
inc
dec
pop
int
hlt
call
pop
xchg
pop
jp
pop
outsl
shlb
push
mov
add
cmp
mov
push
push
xor
inc
fcmovb
aas
pop
dec
sbb
mov
loope
lods
push
push
jge
mov
mov
mov
adc
ljmp
push
sbb
dec
faddl
ds
fs
cmp
xor
inc
mov
add
notb
sbb
mov
push
enter
or
aad
cli
dec
inc
loop
imul
and
sub
mov
mov
or
pop
insl
bound
loop
cmp
xor
sti
aam
and
sbb
decl
sub
xchg
test
cmpsl
inc
jb
adc
xor
adc
sarl
fiaddl
mov
and
cmp
aam
mov
mov
and
or
idivb
push
mov
mov
popa
sub
push
pop
mov
movsb
ds
test
inc
xchg
sbb
and
mov
pop
mov
sbb
cmp
mov
xchg
fwait
sbb
adc
mov
and
push
movsb
mov
ret
push
mov
lds
add
je
sti
pop
add
stc
test
popf
dec
cwtl
pushf
ljmp
pusha
movsl
andl
xchg
arpl
adc
loop
pop
lret
xchg
out
dec
add
lcall
roll
cmpsl
jp
icebp
sbb
sub
mov
sbb
jne
mov
lcall
cli
or
outsl
jae
fucom
std
xchg
je
movsl
dec
adc
sub
daa
dec
sbb
push
lcall
jle
adc
out
cmpsl
xchg
mov
lds
and
repnz
xchg
into
lret
clc
std
das
xchg
add
fs
bound
jo
mov
inc
and
pop
out
fnsave
dec
jo
pushf
xor
or
sub
xchg
add
insb
xchg
in
cmp
sbb
data16
or
gs
adc
sub
aas
cmp
repnz
or
popf
xor
adc
into
jb
mov
dec
pop
ficomps
sub
fbld
iret
lahf
add
arpl
pop
mov
lret
push
xlat
and
jae
cmpsl
cld
mov
fstps
jmp
mov
or
sub
sarl
cld
loope
ret
imul
enter
mov
xor
cmpsl
sbb
sub
sbbl
int3
xchg
in
ret
mov
inc
mov
jo
jne
lods
iret
popl
push
loope
arpl
leave
aam
mov
pusha
and
sub
popl
movsl
mov
mov
sub
mov
pop
mov
lahf
sbb
pop
imul
adc
mov
pusha
cmp
pop
add
sbb
jbe
mov
xchg
fwait
xchg
lcall
sbb
jbe
jns
jb,pt
lock
cli
jns
repnz
xor
pusha
mov
xchg
lahf
mov
sbb
mov
lds
cmove
loope
jb
lahf
cltd
cmp
ds
loopne
je
std
call
pop
stos
pushf
les
int3
nop
jbe
cmp
stos
pop
mov
stos
movsl
xor
push
cmc
jns
adc
dec
xchg
dec
mov
jo
test
jl
out
mov
mov
and
or
scas
test
sbb
inc
dec
dec
stos
cld
ret
pop
loopne
dec
sub
push
fistps
aas
and
out
jne
inc
scas
push
repnz
mov
imul
sub
out
icebp
jg
lea
push
movzbl
mov
out
add
icebp
dec
jne
out
mov
sub
clc
es
pop
mov
xchg
sti
psraw
lcall
jne
add
inc
sub
cmp
mov
adcl
push
js
loope
cmpsl
pushf
mov
dec
cmp
or
into
jge
or
sti
mov
aas
test
lods
or
add
daa
les
mov
jg
and
or
mov
imul
xchg
mov
jmp
aam
js
cmp
mov
and
inc
leave
pop
mov
aam
cltd
es
jo
test
sbb
pop
push
addr16
jo
outsl
loope
rorb
insb
push
mov
xor
pusha
scas
data16
xor
push
in
inc
jae
test
push
imulb
loop
loope
in
sbb
cld
cmp
mov
scas
mov
push
add
outsl
xor
pop
int3
mov
or
sub
ret
jp
mov
addl
sub
rorl
mov
or
loop
addr16
dec
enter
xor
or
and
xorb
enter
jp
fcomps
xchg
add
dec
mov
jae
fbld
dec
popf
out
jbe
sti
pop
fildl
imul
outsl
adc
outsl
or
jmp
inc
cld
test
mov
mov
adc
inc
loope
mov
sub
xlat
jecxz
pop
push
mov
mov
or
hlt
xor
in
mov
dec
idivb
int
repnz
mov
cld
mov
rclb
push
les
iret
xchg
je
jecxz
inc
xchg
in
cwtl
and
jge
into
mov
push
mov
lret
fisubs
push
inc
inc
jo
mov
lock
dec
jnp
sbb
je
lret
loope
cmpsb
dec
push
inc
test
adc
clc
clc
xchg
ret
push
pop
scas
adc
xor
xchg
cld
or
jmp
mov
xchg
adc
pop
push
out
or
sub
aaa
adc
cmpsl
inc
mov
stc
push
pop
aad
cmp
into
or
scas
out
mov
imul
cmp
stc
std
cmp
mov
rclb
int3
or
inc
jp
mov
rolb
cltd
xlat
xchg
xchg
push
mov
scas
loopne
ds
cmc
cmp
pop
pushf
sbbb
ss
out
arpl
nop
add
push
adc
enter
je
sti
stc
int
sub
insb
out
mov
mov
fsubl
mov
lret
xchg
adc
mov
aam
adc
and
cld
sub
cmp
mov
add
push
sub
pop
test
pop
xchg
mov
shlb
aaa
loope
scas
xchg
add
jbe
inc
loop
aas
leave
xor
mov
nop
mov
sub
das
add
xchg
stc
pop
clc
leave
pop
in
or
push
ror
mov
inc
aam
push
and
ret
add
add
rcl
inc
pop
jnp
aam
mov
push
pop
movb
stos
add
push
stc
sahf
add
orb
cltd
mov
xchg
inc
lret
aam
sbb
das
repz
mov
icebp
mov
rcr
push
adc
negl
and
mov
sub
sahf
addb
inc
jp
mov
xchg
lods
subb
lea
mov
adc
pusha
push
into
gs
xchg
mov
add
adc
mov
je
cwtl
cmp
sbb
inc
mov
jno
xor
xchg
mov
xor
outsb
jne
cwtl
imul
pop
scas
nop
inc
cmp
pusha
inc
xchg
imul
mov
pop
add
xlat
mov
xchg
push
cmp
cmp
sbb
mov
push
mov
rclb
push
xchg
xchg
mov
cltd
mov
out
mov
int3
jbe
sahf
ja
movsb
cmpsl
jns
mov
mov
mov
mov
push
call
call
lahf
test
push
sbb
mov
fistpll
sub
dec
cmc
gs
inc
mov
jecxz
sbb
jo
cmpsb
ljmp
or
xor
mov
inc
insl
xor
ficoms
push
mov
out
adc
jl
mov
mov
and
xor
inc
ss
loop
mov
jbe
cmp
lcall
cmpsb
scas
jge
sti
inc
or
popa
imul
push
push
push
cmpsb
stc
dec
lds
jo
jo
cltd
and
imul
je
pop
xchg
scas
mov
sbb
and
outsb
into
push
fisttpl
xor
xlat
jmp
out
sbb
and
in
or
adc
rcrl
into
cli
nop
sahf
dec
rorl
into
xorl
pop
pop
out
cli
xchg
add
aad
icebp
nop
scas
fldcw
repnz
inc
ljmp
pop
push
adc
mov
and
outsl
mov
lcall
sub
ds
inc
and
call
push
lods
movhps
pop
jae
jmp
rorb
aas
mov
push
in
es
sbb
aad
push
sub
das
xchg
sahf
add
mov
int
in
aaa
das
in
js
rclb
push
decl
mov
repz
pop
or
cmpsb
add
call
negl
dec
in
movsb
dec
pop
lods
or
notl
pop
in
ss
cmp
mov
imul
lcall
aaa
nop
dec
stc
ds
ret
dec
xchg
jp
xlat
fcomps
shlb
mov
lods
mov
cld
jecxz
cmp
sub
inc
xlat
imul
int3
jle
stos
in
mov
mov
and
xor
ror
xchg
pop
cmpsb
pop
xchg
jns
dec
cmp
ljmp
fiadds
cmc
cmp
mov
rclb
fisubrs
jnp
cmpsl
sarw
lret
and
lcall
pushf
lret
pop
sbb
cmpsl
jg
push
push
sub
mov
scas
add
jmp
inc
jae
cli
or
fs
lea
pushf
sbb
dec
cmp
mov
enter
jle
dec
mov
mov
pop
dec
dec
xchg
xor
sbb
sti
inc
cltd
jl
vfrczpd
imul
scas
pop
rolb
dec
push
cmc
test
xor
mov
adc
stos
cmpsb
sbb
jp
mov
les
out
mov
stc
xchg
jge
subb
cltd
dec
cmpl
push
push
mov
js
fcompl
xor
cmc
xchg
rcrb
xchg
rcrb
aam
int
xchg
scas
ficoms
stos
movl
mov
add
jbe
push
dec
jge
aaa
ljmpw
lods
or
cmc
outsb
aas
xchg
add
mov
dec
pop
pop
sarb
popf
aam
sti
mov
ljmp
cwtl
sub
ljmp
or
pushf
aam
repz
out
push
lods
mov
jbe
popa
aaa
sub
mov
sahf
pop
pop
push
push
test
mov
ds
or
cmp
movsb
cs
sbb
push
inc
push
cmpsb
fimuls
sarl
lods
imul
cmp
and
into
pop
xchg
daa
jle
add
dec
into
decl
out
insb
sub
cmp
arpl
cmp
push
mov
pop
add
push
insl
jo
cmp
idivl
into
inc
ds
ret
repnz
inc
or
aad
jle
stos
xor
dec
mov
test
adc
sti
mov
mov
loop
mov
sbb
pop
dec
aad
sbb
fcoms
cmpsl
loope
lds
jnp
pop
in
lret
dec
jno
push
push
inc
stos
jno
lods
in
xor
xchg
fistpll
repz
insb
fdivrs
push
int3
pop
mov
lret
psrlw
pcmpgtb
pop
inc
adc
test
cmp
pop
jecxz
imul
xor
lea
jo
mov
xor
in
test
and
lods
mov
iret
mov
push
cs
scas
shrl
loop
mov
dec
dec
bound
adc
sbb
mov
scas
mov
out
cwtl
push
fstl
inc
push
xchg
xchg
xor
aaa
sbb
lret
jmp
stos
dec
rcrb
jl
ss
nop
arpl
enter
sbb
mov
lret
or
xchg
inc
outsb
test
shll
cmpl
jmp
pop
push
pop
fdivrs
lock
icebp
insl
dec
imulb
fwait
data16
test
add
dec
das
loop
xor
icebp
jno
cmpsb
mov
jg
les
stos
arpl
cld
stc
decl
pop
loope
cli
inc
fsubl
cmp
into
adc
in
gs
cld
jne
aad
mov
mov
mov
push
stos
sti
mov
adc
aaa
pop
cmp
loop
ret
fdivrl
out
cmp
mov
pop
inc
push
push
shlb
testl
xor
iret
jns
adc
sbb
xchg
adc
lds
push
xlat
fstl
mov
pop
lds
ja
jno
jle
cltd
push
fnstcw
aam
dec
testb
enter
jns
mov
fldl
adc
aad
daa
dec
mov
mov
sub
iret
jno
fisubrl
cmp
cmp
inc
sarb
cmpsb
std
or
enter
adc
fildl
jmp
cmp
std
ror
cmp
call
outsb
cs
lret
pop
push
adc
adc
jae
xor
fisubl
jg
jl
or
ret
add
lock
mov
mov
psrlw
mov
and
cmp
cmp
inc
fdivrs
test
arpl
cmpsl
inc
xor
xchg
mov
jne
cwtl
mov
dec
lcall
push
test
xlat
adc
sarl
jno
in
test
mov
sub
xor
and
lahf
jae,pt
add
les
cmp
stos
cwtl
pop
test
ret
push
ss
insb
jns
mov
push
lcall
sti
sti
lea
sbb
subl
rcr
out
and
hlt
sub
xor
jns
push
rorl
xchg
cmp
inc
shr
push
xchg
ds
fcmovb
jno
sub
xchg
add
fsub
cmp
cmp
cltd
sbb
jb
testl
adc
fwait
iret
es
jge
dec
mov
or
in
loop
xchg
lds
push
sub
inc
push
or
cld
decl
lahf
fsubrl
nop
les
push
je
in
inc
push
hlt
daa
into
pop
stc
adc
inc
outsb
movsl
jp
bound
add
push
cli
shl
out
call
mov
jmp
aad
pop
xchg
jge
inc
pop
imul
stc
cmp
popf
dec
test
mov
and
fisttps
jnp
sub
xor
in
add
jmp
pushf
sub
jo
xor
dec
rclb
cltd
leave
dec
fucomi
mov
or
mov
in
pop
jmp
xor
stc
fwait
cmpsl
loopne
das
inc
or
mov
lret
cmp
aas
xor
popa
add
sti
adcl
insl
push
xor
inc
mov
sub
jecxz
call
inc
aam
aaa
mov
xchg
xor
push
ds
cwtl
xchg
cs
sub
or
stc
int3
repz
sbb
dec
fwait
sub
in
mov
sbb
outsb
jge
iret
loope
outsb
in
pop
cs
lods
sbb
mulb
or
mov
orl
xchg
mov
shlb
dec
loope
testb
or
sbb
test
sbb
fsubl
cld
sti
jnp
jg
mov
mov
sarl
int3
inc
test
dec
daa
aas
cwtl
jp
pushw
jp
cmp
pop
jp
cwtl
lret
pusha
inc
and
mov
iret
cmp
xchg
cli
mov
jne
push
dec
das
pop
adc
cs
andb
sub
shrl
mov
ret
ss
js
mov
daa
or
movsb
jne
cltd
mov
push
jle
dec
and
mov
stos
xchg
inc
add
int3
bound
je
negb
mov
in
es
lds
ja
dec
cli
in
jnp
pop
add
jne
pushf
cmp
inc
push
add
mov
mov
inc
std
and
ja
lock
sbb
pop
inc
adc
inc
cli
inc
push
or
jp
aas
dec
shll
cmp
mov
dec
aas
mov
loope
xchg
xchg
popf
mov
pop
inc
jge
out
or
or
pop
push
mov
push
sahf
push
iret
ss
repz
mov
mov
clc
outsl
or
leave
rcrl
sbb
fcoml
std
mov
je
sti
int3
and
pop
cmp
mov
xchg
push
push
push
sub
xchg
dec
push
push
sub
jp
sub
pop
sub
mov
jle
xor
mov
fwait
ret
and
and
sub
jge
sub
sbb
cmp
orl
pop
aad
aam
xor
jo
popf
out
out
xchg
jbe
or
bound
je
jnp
or
pop
pop
xchg
inc
inc
ja
ficoml
sbb
shll
nop
jo
les
adc
pop
shlb
ffreep
pop
inc
push
testb
inc
xchg
pusha
shlb
mov
pop
insb
mov
jne
dec
test
fldenv
sbb
cmp
jb
dec
mov
das
xchg
sar
cld
fs
pop
push
mov
inc
in
or
inc
addr16
xchg
jmp
mov
add
dec
pop
sbb
inc
xlat
push
jo
cmpsb
xchg
cltd
jno
xor
mov
inc
out
xchg
pop
pop
push
int
cli
out
insb
or
into
cmp
or
and
or
stc
push
movsl
push
movsl
push
movsl
jmp
nop
cmpsb
dec
popf
rsm
sahf
dec
push
test
xor
outsb
cmp
jecxz
lock
sub
cltd
push
in
andl
test
inc
std
popf
daa
push
push
push
mov
xchg
add
divb
test
fs
xor
mov
or
fimuls
pop
xchg
pop
je
add
add
jg
mov
je
movsb
push
mov
and
in
stos
push
cmp
cmp
adc
addb
in
jmp
push
adc
ljmp
cld
stos
pop
cmp
punpcklbw
mov
xor
push
insb
mov
mov
xchg
sbbb
push
pop
and
loope
cmp
jp
hlt
mov
rcl
adc
or
bound
loopne
push
test
xor
inc
pop
loope
or
cmc
fldcw
mov
or
mov
xor
aaa
push
sbb
mov
hlt
inc
outsl
test
dec
popf
xor
mov
and
movsl
mov
mov
jp
jb
in
xchg
adc
adc
fisubrl
xlat
scas
pop
jmp
cltd
clc
push
into
pushf
lods
mov
cmp
dec
je
es
inc
jno
inc
int
add
xor
cltd
sbb
roll
jmp
or
mov
push
dec
fisubrl
cmp
push
cmpsl
int3
sahf
xor
les
xor
sbb
or
or
stos
pop
jns
imul
aad
out
mov
xchg
hlt
dec
sub
mov
add
mov
and
ljmp
dec
shlb
dec
std
sahf
pop
add
popa
mov
pop
ljmp
test
pop
pusha
mov
ret
and
movsb
add
pop
sub
in
xlat
xchg
in
enter
popf
adc
dec
js
pop
shlb
gs
scas
std
dec
cld
mov
pop
rcrb
mov
mov
iret
push
xor
mov
mov
jne
ss
push
fcoml
cmpsb
mov
in
popf
xor
pusha
pop
sahf
push
dec
push
into
mov
jg
push
movsb
out
cmpb
add
mul
icebp
out
stos
clc
pop
push
lock
adc
test
in
sahf
mov
inc
mov
xorl
in
xchg
fsubr
add
sbb
pop
ret
ss
mov
sbb
push
mov
sub
push
mov
jb
addr16
les
call
outsb
ljmp
jne
mov
lods
mov
stos
leave
fildll
pop
nop
fsts
repz
out
and
fistpl
lret
push
or
imul
sub
xor
cmp
sub
ret
xor
mov
ud1
or
outsl
sbb
in
enter
imul
mov
in
xchg
jle
sbb
mov
testl
dec
mov
in
popf
outsb
in
inc
cmovo
mov
pop
adc
popa
xor
ret
imul
cmpl
testb
pushf
jo
mov
loopne
outsl
mov
fdivr
jp
lods
sbb
shlb
in
and
adc
stos
in
dec
mov
mov
sbb
lods
call
les
test
adc
xor
mov
mull
cmpsl
cmp
adc
lret
mov
pop
sbbb
clc
fs
repz
and
out
repz
out
divl
and
popa
pop
out
leave
stos
sbb
adc
sub
cmpsl
cmp
push
mov
jg
int3
xor
xchg
orl
dec
loope
rcl
arpl
push
xor
lock
outsw
out
cmpsb
rcrl
or
cmp
add
out
inc
cld
or
adc
lcall
and
sub
cmp
cmpsl
add
xor
subl
gs
mov
sarl
divl
push
mov
cli
jo
sti
lods
cmp
adc
stos
ret
sbb
icebp
push
mov
jp
xchg
stc
ds
sbb
dec
je
stos
int3
inc
test
fwait
mov
jmp
adc
test
das
int
mov
or
add
imul
aaa
jbe
push
aad
loope
vdivsd
jns
sbb
cmp
jo
out
aaa
outsl
aad
das
out
push
mov
jbe
inc
mov
xorb
ds
mov
inc
lock
arpl
insl
iret
mov
pop
mov
ds
sahf
popf
xor
sub
loop
adc
xchg
adc
inc
inc
cmp
and
out
mov
xchg
jbe
imul
pop
push
sbb
and
dec
loopne
cmp
sbb
xchg
aaa
das
mov
jnp
add
sub
mov
xchg
ficompl
xor
arpl
inc
adc
fists
push
jl
loopne
fldt
int3
repz
mov
sbb
add
mov
aaa
inc
xor
mov
push
js
xchg
xchg
shlb
cmpl
push
adc
sbb
xor
mov
imulb
xor
adcb
es
add
add
and
push
add
xlat
mov
or
dec
xor
mov
orb
pop
enter
lock
mov
and
cld
xor
movl
sbb
adc
xchg
repz
push
pop
insb
and
stos
int
push
pop
pop
lds
xlat
movsl
cmp
mov
ljmp
shll
imul
sbb
cmp
cmpsl
cmpsl
das
repz
pop
xchg
adc
cmpsb
cmp
mov
jns
pop
xchg
jge
jno
cmpb
push
loop
push
aad
mov
jns
lods
cmp
and
out
inc
sbb
or
lock
popa
pop
mov
mov
xchg
fwait
pop
shlb
sub
out
rcl
fs
cmc
int
adcb
in
enter
cmp
ret
loopne
jb
mov
mov
fdivl
add
movsl
cmp
stos
pop
fidivrl
or
cmp
in
pushf
inc
cltd
inc
testb
jg
or
and
xor
jnp
sbb
loope
imul
ret
in
and
xchg
cmp
insl
inc
dec
dec
sbb
mov
cmp
sub
imul
sbb
push
push
insl
inc
sub
inc
pop
or
xchg
jo
mov
or
mov
dec
xchg
mov
pop
jbe
enter
aam
leave
cli
and
rcrl
push
mov
fmuls
les
dec
aam
arpl
mov
cltd
pop
cmc
inc
das
mov
adc
popf
shlb
cmp
push
andb
bound
adc
xchg
mov
xlat
push
test
cmpsl
cmp
pop
inc
cmp
or
mov
inc
loop
cmc
jecxz
or
movq
cmp
add
out
mov
dec
movsl
test
dec
jge
in
dec
sbbb
push
cmp
in
push
xchg
jp
cmp
fcoml
xchg
call
xchg
clc
and
cs
mov
hlt
test
pop
int
and
in
push
pop
lret
and
push
or
into
stc
pop
adc
adc
shl
clc
rorl
sbb
arpl
add
dec
sbb
dec
and
ljmp
subb
inc
xchg
shr
sub
test
and
jb
or
sbb
gs
mov
stos
cmc
pop
inc
lcall
test
mov
cmp
data16
or
jb
sub
sbb
pusha
sub
clc
sbb
adc
test
test
out
lahf
movsb
pop
pop
gs
subl
jbe
enter
inc
push
mov
ds
adc
test
fwait
js
or
in
cmp
sub
addl
mov
pop
aaa
repz
inc
fs
mov
mov
call
out
cmp
shl
push
xchg
insl
cmpsb
cmpl
inc
dec
jb
insl
daa
loopne
sbb
test
pop
push
int
in
and
lods
mov
rcll
xor
cmp
mov
iret
mov
aaa
leave
rorb
outsl
sub
push
adc
scas
sub
insl
mov
ja
dec
fldenv
dec
push
xchg
xlat
lahf
mov
sub
mov
xor
scas
rorb
enter
icebp
jo
daa
adc
in
bnd
mov
aas
sarb
xor
fimuls
xchg
lds
jge
int
jne
das
xchg
scas
jne
cld
mov
adc
sub
mov
test
xor
jp
inc
xchg
ljmp
js
adc
mov
mov
lock
push
pusha
lret
fildl
aaa
jbe
cmp
add
cmpl
notb
pop
push
mov
pop
and
shrb
lahf
out
mov
sub
loopne
mov
adcl
sbb
xor
xchg
jbe
test
inc
sbb
loope
popa
xor
div
in
call
data16
dec
dec
xchg
and
push
fmuls
sub
mov
std
jmp
xor
inc
push
shl
test
in
mov
out
mov
daa
jl
dec
and
dec
fnstcw
je
movsl
pop
pop
std
and
repz
jbe
popa
aaa
lret
and
pop
push
mov
sub
sarl
cli
ror
xor
pop
inc
mov
dec
push
fs
lods
sahf
inc
punpcklwd
es
cmpsl
or
les
test
ret
inc
and
aas
xchg
mov
mov
repnz
xchg
adc
pop
push
fldln2
sarl
mov
pop
add
pop
out
mov
xor
scas
inc
sub
lret
lahf
lods
flds
loope
js
push
movsb
into
arpl
ret
pop
xor
popf
cmp
push
xchg
popa
lret
sub
jmp
inc
insl
stos
loopne
or
add
out
adc
sbb
cmp
ljmp
pop
sbb
and
cld
push
fcoml
inc
xor
push
inc
aas
jle
call
mov
mov
pop
jns
mov
shlb
pop
mov
mov
fwait
dec
mov
and
add
jbe
and
mov
xor
adc
mov
std
push
loopne
cmpsb
and
dec
cwtl
pop
mov
inc
cmc
in
xchg
roll
xorl
or
push
pusha
stos
ret
xlat
int3
sbb
outsl
jne
add
sbb
push
repnz
xchg
lock
sbb
ljmp
jmp
or
and
jb
imul
jg
loop
adc
mov
mov
jne
add
testl
push
and
outsb
pusha
sub
adc
pusha
mov
sub
fadds
loopne
cmp
out
mov
icebp
std
daa
dec
ficompl
nop
pop
pop
dec
gs
icebp
ja
push
add
lods
sub
je
bound
stc
daa
xchg
daa
data16
pushl
fsts
insb
rcrl
cwtl
mov
ja
stos
xor
push
cld
pushf
test
loop
mov
xlat
and
mov
aaa
xchg
pop
mov
add
aas
mov
fiadds
in
sub
fisttpll
pop
dec
cli
add
sbb
sti
dec
jl
sbb
cmc
mov
rcrl
repnz
out
aad
ret
cld
mov
xor
cli
loope
jg
mov
sbb
lahf
lcall
jbe
stc
loop
and
repnz
clc
sub
out
or
inc
shl
and
call
aaa
jne
repz
add
sub
inc
cmpsb
lret
pop
aad
mov
or
bound
mov
pushf
and
ss
lods
js
pop
in
sbb
mov
cli
xchg
xchg
pushl
xor
push
mov
cmp
divl
imul
cltd
jle
dec
cmc
mov
mov
jnp
movsb
pop
cs
mov
cs
sbb
outsl
mov
sbb
mov
pop
and
xor
daa
dec
mov
pop
mov
xchg
sbb
es
mov
stos
jecxz
es
mov
inc
add
lods
das
or
into
cmp
clc
xchg
mov
sbb
add
push
sub
je
mov
repnz
add
xchg
aas
fdivs
inc
mov
aad
xchg
rcrl
and
dec
cmp
dec
pop
iret
push
movsl
movsl
popa
cmpsl
shlb
lret
pop
mov
mov
repz
shrl
adc
jmp
jo
xor
int3
inc
test
add
lods
jecxz
lds
adc
pop
add
add
popf
insl
in
out
cld
or
sub
xchg
adc
data16
mov
andb
push
pop
fsub
lods
sbb
testb
add
pop
fadds
frstor
cmp
pop
in
pop
shrb
stc
icebp
dec
adc
fistl
mov
adc
stos
xor
jo
scas
ja
adcb
dec
push
sbb
sbb
loope
rorl
sarl
incb
data16
xchg
adc
popl
enter
push
pop
pop
mov
daa
sub
xchg
push
sub
pop
mov
fst
in
xor
xchg
add
outsl
cmp
mov
push
inc
mov
sti
out
push
xor
or
rcl
add
nop
incl
in
push
sub
sti
fwait
adc
mov
faddl
jl
nop
mov
ret
bound
cmp
idiv
insb
mov
fidivrl
fbld
and
and
or
hlt
arpl
xchg
push
mov
add
or
into
cwtl
sbb
dec
das
xor
lahf
lret
xchg
dec
push
add
push
push
loope
push
ljmp
rorb
cmc
stos
xchg
ds
aam
hlt
mov
or
pop
fnstsw
adc
cmp
gs
jmp
sub
ret
mov
xlat
sub
add
dec
mov
sub
rcl
fnstcw
sub
sbb
mov
rclb
fstpl
dec
mov
lods
stc
shrb
gs
scas
loope
ds
xor
shl
sbb
jmp
sbb
gs
in
leave
add
test
fcomp
push
xchg
int
lock
insl
mov
mov
or
inc
inc
sar
and
jg
aas
mov
mov
pop
jecxz
xor
xor
scas
jns
repnz
add
add
dec
lods
mov
lods
pop
into
pop
mov
mov
scas
fnstcw
or
das
mov
and
mov
push
mov
pop
popf
insb
stc
or
ljmp
ja
jnp
add
es
sbb
lock
cmp
xchg
add
hlt
std
mov
push
jbe
mov
mov
in
xor
push
xchg
mov
mov
push
cmp
push
mov
ljmp
sub
mov
lret
loope
fwait
push
stos
sbb
cmp
push
lahf
add
call
adc
lods
pmaddwd
cmp
push
push
mov
inc
jmp
push
or
xchg
push
jge
mov
outsb
insl
shll
push
das
lret
popa
adcl
xlat
bound
shll
aas
test
ficomps
xor
rol
cli
dec
push
dec
rcrb
pop
inc
std
or
icebp
insb
adc
roll
jne
inc
and
jne
xor
xchg
bound
or
cmp
jne
lahf
out
filds
jl,pn
cmp
adc
add
ja
xor
push
xor
stos
pop
mov
or
xchg
sbb
sbb
fwait
sbb
int
mov
sub
adc
fiadds
dec
stos
adc
add
jp
fdivr
push
rcll
mov
jp
imul
pop
mov
cmp
insl
adc
imul
jmp
repnz
test
mov
inc
dec
addb
inc
lret
push
mov
decb
jae
adc
dec
cmp
jns
pop
push
mov
sbb
test
fs
hlt
movntps
cmp
xchg
cmc
mov
inc
xchg
lahf
sbb
jmp
add
mov
cwtl
repz
jne
sub
aad
iret
xchg
push
xor
aas
ficoml
xorb
leave
jnp
or
cmpsl
mov
sbbb
pop
stos
cs
sbb
lret
mov
pushf
aaa
or
mov
xchg
mov
mov
push
or
in
sub
imul
adc
xchg
inc
mov
jmp
mov
iret
jo
inc
pop
mov
daa
and
dec
popa
xchg
sub
or
push
dec
push
stos
sub
stc
sarl
sub
stos
push
mov
mov
dec
sbb
fiadds
or
sub
inc
add
sub
int
and
mov
mov
fstps
loop
sbb
jp
mov
or
fnstenv
add
mov
pushf
jg
push
sub
dec
test
push
pop
or
aaa
mov
fcmovnbe
addl
mov
shrl
nop
std
mov
inc
add
sub
cltd
or
push
mov
test
out
mov
jg
cmpsb
pop
xor
adc
xchg
lea
mov
xor
cltd
roll
mov
sub
xor
xchg
mov
subl
mov
or
in
xchg
shl
inc
add
mov
out
negl
jb
ficoml
mov
push
loope
stos
mov
cmp
xor
je
add
inc
bound
test
sti
jae
inc
int3
bound
sarl
fimuls
mov
push
lea
stc
aaa
pusha
mov
sub
aad
jle
out
insb
sub
sbb
xchg
jge
jo
inc
inc
xor
sarl
ds
or
push
inc
adc
xchg
test
cmp
dec
vmwrite
jge
addr16
iret
push
mov
lahf
push
cmp
jge
mov
test
int3
lahf
scas
mov
add
call
xchg
out
pop
dec
xchg
push
and
rcrl
jmp
lds
std
cmpsl
and
push
or
int3
rolb
pop
in
mov
xchg
inc
test
jae
pop
icebp
ja
xlat
or
xchg
inc
leave
insl
lahf
loope
es
outsl
notl
cmp
adc
or
clc
arpl
sub
in
push
xor
shll
adc
cs
out
pusha
add
mov
outsl
pop
and
add
ret
gs
sbb
das
ja
mov
shlb
jno
or
lods
arpl
in
xor
fadds
daa
inc
sub
inc
lcall
dec
mov
and
test
bound
scas
xor
iret
and
fldl
adc
lods
lret
push
push
les
xchg
cmp
add
repnz
cmpsb
pop
aam
vmwrite
push
and
lods
subb
repz
loop
arpl
xor
mov
adc
mov
dec
call
or
fists
stos
inc
in
cltd
or
mov
or
adc
fisubrs
and
add
dec
sbb
ud1
mov
mov
sbb
push
aam
int3
xchg
xchg
in
inc
je
je
loope
adc
bound
int3
xlat
xor
add
mov
mov
adc
aaa
or
sbb
push
stos
or
add
js
adc
xor
or
enter
pop
add
stos
jl
shl
dec
mov
xchg
push
les
pop
ss
adc
dec
xchg
jmp
fildll
loop
jo
cmp
push
je
scas
adc
cmp
cmp
dec
xor
xlat
jle
or
aas
push
pop
cmp
jle
push
dec
arpl
xor
daa
idiv
sbb
push
fcomps
jmp
out
ljmp
add
rcll
aad
hlt
pop
jg
jnp
pushf
cmpsl
lods
stc
cmp
int
mov
ficoms
imul
sbb
cmpsl
or
inc
push
sbb
sbb
fists
inc
adc
mov
iret
shlb
bswap
lret
adc
call
jecxz
clc
inc
mov
adc
jl
stos
jle
pop
out
push
add
test
xchg
stc
enter
andb
mov
add
jno
and
mov
das
lcall
xchg
imul
mov
cmp
mov
gs
cmp
fidivs
leave
mov
ret
out
jge
cmp
leave
lods
and
dec
cmc
pop
adc
adc
in
stos
fs
sbb
push
mov
jp
insb
jge
mov
js
pop
fcomps
div
pop
andb
mov
cld
push
out
stc
int3
and
pusha
sub
pop
pop
mov
cmp
inc
leave
es
adc
push
sbb
and
testb
js
xchg
or
bound
inc
in
jmp
sahf
cmp
and
mov
cmp
cmpsl
inc
jle
movsl
popf
imulb
mov
xchg
push
call
mov
fs
dec
fisubl
cmc
inc
cld
jmp
xchg
filds
xor
popf
sbb
jl
jmp
rol
mov
mov
push
mov
jge
loopne
cmc
adc
shlb
jecxz
fldt
xor
pop
sub
jmp
and
loop
rcrl
sbb
or
lock
cmp
push
loop
loopne
arpl
icebp
in
xor
cmp
ss
cmp
rorl
pusha
leave
enter
in
lcall
mov
rolb
mov
divb
mov
mov
push
mul
add
into
lods
sub
repnz
scas
in
int3
mov
inc
in
cmp
rol
pop
or
inc
mov
pop
pop
xchg
ds
jg
xor
or
pop
mov
scas
cmp
mov
lahf
incl
mov
lods
iret
xchg
mov
jbe
shll
sub
mov
jae
hlt
push
jp
add
call
sar
push
repz
cltd
subb
fcomip
ds
call
out
cld
mov
pop
push
jae
fdivr
movsl
rclb
aad
js,pn
fstl
push
out
xchg
orb
cwtl
icebp
lret
mov
stos
out
pop
and
jmp
outsl
sub
adc
jp
lcall
jne
mov
lds
movsb
mov
inc
dec
cmp
or
jb
fdivrl
mov
jno
adc
mov
hlt
sbb
call
pop
adcb
mov
scas
xor
xor
call
or
mov
popa
ds
lds
imul
enter
mov
xchg
iret
cli
push
dec
mov
xchg
xor
or
lds
andl
mov
nop
arpl
mov
mov
cwtl
lahf
dec
or
jo
mov
into
cld
movsb
pop
or
mov
iret
mov
or
lea
shrb
and
int
jo
in
test
jle
and
xchg
adc
pop
pop
mov
test
hlt
pop
ret
fld
leave
and
xor
pop
lahf
ficomps
mov
movsl
repnz
sub
pusha
je
bnd
jge
shrl
push
ret
cmp
push
sub
push
sbbl
cmp
xchg
test
or
sahf
cmp
mov
cmpsl
in
inc
and
inc
aaa
jl
ss
dec
fmull
push
cwtl
lret
mov
jno
icebp
adc
xor
and
xchg
movsl
dec
push
std
dec
xchg
inc
stc
push
xchg
lcall
push
mov
xchg
aas
arpl
push
xor
jno
pop
cmp
push
test
sub
cmp
ss
dec
or
fwait
or
push
xor
aaa
js
lret
xchg
scas
cld
iret
loopne
and
jns
mov
out
pop
adc
jnp
pushf
pop
cmp
les
ror
movsl
sbb
mov
push
fdivl
aas
in
xchg
jo
cmpsl
add
das
jns
sub
loop
jecxz
iret
and
jae
lahf
daa
div
xor
lock
in
inc
pop
pop
bts
sbb
pop
outsb
cmp
test
outsl
mov
fbstp
pop
imul
shrl
aam
inc
data16
jg
and
lea
push
lcall
mov
leave
movsl
mov
cli
loop
scas
arpl
push
imul
sbb
sbb
and
mov
lods
outsb
icebp
in
imul
and
sbb
jge
cmp
fldenv
aad
popa
add
call
insl
lods
hlt
and
scas
movsl
ljmp
pop
pop
push
jo
xor
push
mov
jmp
xchg
add
hlt
sbb
mov
clc
xchg
enter
test
sub
cwtl
out
lods
push
iret
insb
ret
iret
jno
out
cmpsl
fildll
mov
fdivl
dec
xor
xor
push
push
push
pusha
push
pop
xchg
or
pop
inc
and
jbe
adc
fldl
fstp
cld
add
cs
loopne
mov
xor
scas
dec
mov
adc
dec
adc
fstl
es
aam
fwait
bound
outsb
rolb
adc
mov
ficoml
xor
xchg
lea
adc
and
ljmp
mov
andb
sub
sbb
sub
arpl
jl
inc
fs
in
dec
pop
xchg
mov
pop
mov
inc
fmuls
divb
xor
adc
fisubs
ds
out
shrl
clc
xor
rolb
movsb
inc
daa
in
xchg
xchg
or
adc
pop
test
and
fnstenv
rclb
mov
xchg
add
mov
jp
xchg
dec
cmp
xchg
xor
ja
jp
xchg
mov
mov
mov
adc
mov
int
xor
popf
test
push
rcll
ret
mov
cmovs
dec
inc
jne
mov
push
push
push
lods
mov
mov
adc
mov
mov
cmp
dec
inc
xlat
fists
push
sti
cwtl
std
lret
sbb
mov
push
testb
cld
addr16
pusha
aad
jns
and
adc
imul
cld
div
dec
subl
or
push
shlb
mov
out
leave
and
lea
mov
fwait
sbb
jg
pop
adc
jne
lahf
push
lret
xorb
out
loopne
ljmp
popf
xor
in
xchg
jg
out
ss
mov
cld
das
ljmp
cwtl
inc
and
push
popa
add
or
fcomip
test
int
or
push
loop
nop
mov
cli
add
ds
xor
shlb
imul
mov
pop
aaa
dec
xor
nop
adc
add
pop
xlat
ret
push
mov
cmp
or
inc
fildll
das
mov
sub
cli
jno
jmp
cmp
jl
inc
mov
mov
shll
mov
jns
imul
dec
int
xor
js
aaa
lahf
and
dec
add
mov
add
cmc
dec
fs
cmp
dec
cmp
mov
jae
out
aam
ja
repnz
mov
je
fisttpll
inc
adcl
aad
les
adc
leave
bound
ja
dec
adc
or
divl
mov
ret
ret
ret
sub
inc
xchg
xor
leave
push
lahf
inc
push
jnp
mov
pusha
pop
inc
sub
imul
inc
lret
and
cmc
mov
lret
fwait
and
push
insl
ss
das
mov
pop
xchg
out
xlat
push
in
shll
cmp
push
mov
or
data16
pop
ret
and
and
sar
aaa
cmp
sahf
aaa
jecxz
jecxz
dec
inc
pop
test
or
adc
and
cmp
mov
sarl
inc
sub
cld
inc
mov
mov
sbb
fldcw
test
clc
fisttpll
fwait
pop
scas
inc
pop
cmpsl
mov
pop
mull
xlat
inc
shld
cltd
or
pop
adc
inc
es
dec
mov
mov
gs
out
insb
orb
and
mov
add
int3
cmc
call
mov
popf
jae
stc
jp
cmp
jp
xchg
mov
cltd
rcl
nop
in
jb
mov
xchg
ja
repnz
jmp
mov
adc
test
mov
cs
sti
add
inc
sbb
hlt
aas
or
fbstp
mov
push
aam
cmp
roll
mov
jne
insl
arpl
into
mov
daa
jp
pop
or
lds
sbb
jnp
ljmp
imul
jb
push
fidivs
cwtl
test
mov
inc
clc
xor
push
inc
mov
imul
mov
dec
xor
dec
stc
andl
xchg
fcmovu
mov
push
xchg
mov
fidivl
lds
mov
addl
leave
xchg
aad
call
inc
insb
ja
cmp
dec
add
inc
das
xlat
lcall
sub
sub
push
mov
jmp
fstpt
scas
stos
push
leave
lea
push
sub
inc
subb
mov
rcll
repnz
ja
and
mov
jne
pusha
xor
repz
mov
xchg
test
or
jb
adc
ds
mov
cmp
push
or
or
or
mov
sbb
cmp
xchg
lret
icebp
out
pusha
add
xor
add
pusha
sub
sahf
sub
add
inc
test
dec
pop
and
lea
and
pop
aas
mov
ljmp
pop
repz
and
int
push
sub
cmp
cmp
mov
loope
add
arpl
pusha
bound
daa
int
and
mov
aad
lds
fcomps
mov
jno
mov
dec
cmpsl
mov
sub
mov
xchg
push
insb
xchg
adc
lret
jp
inc
nop
negb
sub
leave
push
movsb
fiaddl
movsb
mov
pusha
inc
cmp
and
int
daa
shlb
rclb
nop
lods
and
addr16
mov
xor
pop
js
jb
lods
lea
and
pusha
fwait
inc
pop
repz
addr16
xchg
jg
pushf
cli
stos
sbb
rorb
lods
xchg
in
imul
mov
sub
sarb
and
lock
xor
std
rcrl
lods
mov
shlb
rorl
cmpl
subb
jle
push
sbb
fistpll
test
outsl
scas
popl
fstp
jnp
sbb
sbb
imul
insl
adc
outsb
lds
mov
and
fldl
mov
dec
push
push
idivb
sub
mov
pop
unpcklps
push
lret
push
xchg
pop
push
out
mov
lods
or
pop
fimuls
outsl
int
jb
lea
loope
into
dec
mov
mov
jo
pop
aam
pusha
mov
inc
xor
js
mov
cmpb
in
mov
cmc
stc
enter
addr16
adc
nop
xchg
call
cmp
add
inc
scas
jl
adc
les
lods
mov
add
mulb
pop
in
addr16
aaa
lea
push
outsl
pop
lahf
packssdw
mov
fdivrs
pop
out
inc
test
lret
dec
lcall
mov
dec
aaa
pop
xor
js
stos
dec
mov
inc
mov
jp
aaa
push
insl
add
aas
fcmovne
cmpb
movsb
pop
ror
cmp
or
or
filds
sbb
dec
int
out
and
mov
je
inc
stos
aas
xchg
and
aam
inc
outsb
adc
scas
jmp
xor
loopne
cmpsb
dec
outsb
insl
jmp
loope
pop
cld
fldt
addr16
ss
push
rol
mov
pop
xchg
ret
jnp
and
loope
gs
sbb
rcll
mov
cmp
mov
jb
cltd
xchg
push
sti
mov
and
jg
into
aas
icebp
sbbb
xor
and
and
cld
jp
std
mov
addr16
mov
xor
out
push
pop
pop
and
loope
mov
lea
dec
int
scas
je
pop
cmpsl
jnp
data16
test
jnp
mov
int
fcoml
inc
daa
notb
mov
mov
sbb
leave
pop
das
add
movsb
shll
sbb
std
lods
push
xor
cmpb
or
cli
data16
lret
pop
mov
ss
fwait
mov
push
dec
pusha
stos
gs
adc
orl
xlat
sub
jb
sarl
cmp
call
lcall
xchg
cmp
dec
or
cs
lcall
jecxz
daa
mov
aam
mov
or
pop
aaa
dec
mov
mov
fwait
cli
scas
ja
int3
sub
iret
mov
mov
sti
adc
sbb
mov
imul
out
adc
sbb
pop
sub
push
stos
test
les
je
scas
repnz
orl
fldl
adc
pop
mov
ljmp
jmp
mov
jno
fnstsw
jmp
lret
or
xor
fisubs
sub
or
ss
fimuls
shl
mov
cwtl
inc
enter
cmpb
cmpxchg
js
add
fmull
pop
clc
dec
std
push
pop
fwait
dec
xor
cwtl
sub
jp
or
rolb
adc
add
rcr
xchg
lret
xor
ss
mov
inc
sbb
icebp
xor
push
pusha
add
mov
jmp
test
lahf
adc
adc
ret
daa
cwtl
fxch
jmp
aad
and
into
int3
cli
aas
dec
andl
sub
es
in
sti
push
outsb
call
jle
aaa
jns
por
popf
sub
negl
aam
mov
or
add
test
scas
ret
mov
adc
add
sub
fldl
imul
push
scas
inc
movsb
pop
fdivl
les
mov
roll
std
lock
xor
ljmp
fld
and
or
lods
add
popf
jecxz
mov
push
mov
repz
xchg
xor
and
pusha
pop
sbb
test
xchg
fistl
jb
sarb
sbb
pop
outsl
ret
push
loopne
xor
pop
push
adc
pop
mov
xor
arpl
push
imul
inc
movsb
aaa
icebp
stos
mov
test
sahf
sub
ljmp
push
mov
aam
fbstp
stos
pushf
push
cmpsb
repnz
adc
cs
stc
imul
in
pop
mov
jne
cmpsl
inc
bound
adc
mov
sti
cmpsl
dec
sub
push
jmp
xchg
mov
dec
test
std
fwait
sbb
subb
adc
add
pop
jge
loope
cmpsl
push
leave
scas
sahf
jmp
add
test
push
cmpsb
sahf
mov
pop
popa
jg
lock
testl
pop
fdivrs
incl
repz
mov
test
mov
xchg
aam
xor
or
rolb
push
pusha
push
inc
jb
icebp
adc
inc
jo
mov
stos
pop
add
or
hlt
push
fiadds
mov
ljmp
ljmp
pop
xlat
add
mov
push
and
add
cmp
xchg
or
mov
mov
popa
adc
lock
pop
jnp
mov
push
mov
movsl
test
jle
sub
mov
or
jne
dec
fdivrl
js
fidivrs
leave
cmp
ficoml
jp
sub
push
hlt
mov
leave
fidivl
repz
xchg
lahf
out
pop
cwtl
mov
icebp
pushf
push
cltd
jle
pusha
adc
ret
dec
pop
and
lahf
lret
xor
or
dec
mov
ret
and
lret
popw
mov
neg
push
and
leave
adc
mov
pop
mov
out
xchg
dec
sbb
mov
cmp
xor
cltd
test
inc
cmpsb
leave
jns
mov
and
pop
sbb
mov
dec
push
inc
insl
inc
ss
push
add
imul
xor
fsub
push
adc
loopne
sbb
fnstenv
cs
jg
inc
push
push
loope
mov
push
mov
fisubs
fcomi
and
mov
jne
pop
sub
mov
xchg
fistps
push
and
mov
mov
mov
nop
mov
movsb
jge
scas
iret
xor
enter
lret
scas
pop
add
xchg
mov
xchg
scas
shl
sub
gs
pop
lret
xchg
sarl
jno
sbb
push
inc
cmc
push
push
bound
push
in
icebp
out
jmp
cs
ss
or
adc
inc
inc
push
fwait
ret
fs
loop
mov
add
cmp
mov
inc
ljmp
dec
mov
mov
xlat
mov
xchg
mov
mov
adc
clc
or
repnz
xor
addr16
in
pop
dec
inc
icebp
xchg
cmpsl
out
and
test
insl
add
into
sahf
or
adc
sahf
int3
jae
lahf
push
adc
pop
ja
xor
sbb
push
sub
sub
inc
fists
sub
movsb
cmp
inc
enter
mov
cmp
out
inc
cmp
movsb
push
pop
or
mov
std
sahf
cmc
enter
mov
xchg
mov
mov
test
fwait
aad
nop
mov
add
cmp
and
daa
or
mov
repnz
pop
mov
inc
bnd
movsl
ffree
mov
lods
cmp
and
ror
xchg
mov
decb
jmp
adc
ja
test
out
sub
mov
fldenv
sbb
pop
imul
inc
cmp
enter
pop
cmp
pop
out
jns
cmpsl
push
xor
subb
xchg
test
out
repz
jne
push
cli
push
pop
aad
xor
mov
notl
adc
jne
add
das
pushf
insl
mov
mov
inc
mov
js
adc
loope
js
dec
adc
leave
lds
jge
prefetchw
andl
push
shrb
push
mov
scas
insl
add
punpckldq
cwtl
and
loop
mov
test
aam
jecxz
add
xchg
and
loope
or
and
and
jb
scas
sub
mov
pop
push
mov
jno
pop
xchg
ret
mov
mov
idivl
cs
mov
rcrb
jg
mov
fildll
in
sti
push
and
and
pushf
lods
jg
or
ret
mov
cmp
fstl
mov
mov
inc
mov
lea
cmp
cltd
jae
mov
in
pop
dec
xchg
fisttpl
xchg
daa
cwtl
in
test
lret
or
xchg
and
and
rcr
mov
ss
adc
sub
xor
cmp
xlat
cmp
inc
xchg
mov
add
stc
aad
mov
fcmove
cmp
sbb
addl
pop
push
rorl
sarb
inc
add
sub
fisttps
xchg
jmp
data16
test
push
fsubr
fadds
ret
in
outsb
outsl
add
adc
mov
xchg
fisubrl
sbb
loop
add
sbb
negb
or
xchg
test
inc
in
cmp
outsb
inc
aaa
lds
push
mov
push
xchg
fnstcw
inc
out
sbb
push
push
pop
sbb
mull
pop
aad
jl
lock
push
adc
sub
int
cmp
dec
test
lods
hlt
push
in
inc
sub
lret
std
in
pop
jmp
jnp
or
stos
mov
pop
inc
cld
sbb
sti
popa
sti
xorb
jecxz
fcmovne
cs
fisttpll
inc
cmc
lods
sbb
jle
ja
adc
lds
xchg
stc
inc
mov
push
xchg
ret
and
and
ret
sub
sbb
subl
or
lea
cwtl
enter
jae
mov
icebp
jmp
jb
jbe
sbb
dec
mov
mov
jbe
or
test
popf
mov
push
aas
mov
subl
push
cmp
or
insl
dec
jl
adc
hlt
jmp
mov
xchg
data16
js
imul
rorl
mov
and
xor
outsb
cltd
js
jecxz
jg
or
dec
push
add
leave
add
adc
sbb
cs
out
xchg
out
add
clc
jno
sbb
lret
ss
jp
pushl
into
push
inc
aam
mov
insb
test
xor
cwtl
es
loopne
inc
mov
sahf
lods
icebp
xchg
lahf
lock
mov
xchg
fistpl
or
xlat
push
sbb
es
cmp
mov
jne
fimuls
ret
dec
xchg
pop
jge
and
lods
add
mov
loop
add
out
test
add
test
inc
arpl
test
or
xor
int
jns
cli
pop
jl
mov
movq
cli
faddl
mov
mov
rcr
cltd
je
pop
sti
xchg
xor
out
fmulp
mov
dec
stc
push
sub
pop
scas
out
movsb
aaa
lods
ja
rcrl
add
lock
inc
ljmp
jl
stos
stos
dec
sbb
push
and
adc
or
stos
adc
dec
int
mov
jnp
cmpsb
xchg
sbb
mov
lret
xchg
iret
popf
incb
adc
adc
xchg
inc
and
push
cmp
sbb
cltd
push
jg
and
or
repnz
rcll
dec
pop
cwtl
fiaddl
xor
or
push
cmpsb
pop
fistl
js
mov
xor
in
into
inc
inc
pop
mov
mov
jae
aad
pop
lock
inc
mov
out
xchg
nop
sbb
rcrb
mov
jbe
aaa
jnp
cli
cltd
je
scas
and
xchg
fwait
shlb
push
popa
sub
sub
add
fildl
cli
sub
jg
rorb
subl
outsl
movsl
inc
lds
fidivl
outsb
sub
cmp
ret
push
addr16
addr16
loope
push
out
or
or
fucomip
push
ljmp
std
stos
mov
mov
or
push
mov
inc
add
adc
lahf
add
push
mov
mov
sub
orl
mov
int3
pop
jno
sub
jge
sahf
cmc
mov
pop
dec
pop
push
shl
and
dec
mov
fs
data16
xor
arpl
out
hlt
or
xlat
bound
gs
jae
in
dec
mov
mov
hlt
in
add
inc
ja
daa
movsl
stos
mov
cmpsb
cmp
inc
xor
mov
loope
arpl
mov
or
shlb
sahf
push
cmp
fxch
mov
test
push
or
cmc
inc
mov
inc
test
repz
cmp
or
mov
inc
aas
pop
sbb
xor
push
mov
sub
dec
jge
hlt
cli
fildll
gs
iret
push
cmpsl
faddl
ljmp
pop
jp
pop
bound
shll
push
cmc
mov
dec
cld
shlb
pop
jmp
ds
fisubl
mov
in
adc
aas
xchg
mov
push
xchg
cs
cltd
mov
sbb
lret
mov
fsubl
je
mov
mov
adc
mov
lahf
sub
icebp
repnz
pop
cwtl
hlt
xadd
test
mov
movsl
xchg
xlat
and
xchg
push
test
enter
or
cmpsl
fbstp
jno
inc
sarb
push
fwait
lea
adc
inc
lcall
mov
mov
fmull
push
push
or
jecxz
shlb
ds
xchg
and
call
inc
fbstp
or
test
adc
and
dec
sti
xor
popa
sbb
jbe
rcrb
mov
out
clc
pusha
mov
loop
push
or
cmpsb
insl
insb
mov
ud2
adc
aam
fsts
ret
mov
inc
leave
in
lret
xor
leave
xchg
and
sub
mov
leave
data16
pusha
outsb
push
decb
jmp
push
das
push
push
inc
pop
je
lock
in
nop
cmpsl
sub
jo
adc
adc
mov
mov
mov
mov
iret
stos
je
loop
mov
push
clc
mov
out
lret
mov
popf
cmp
jo
add
sahf
pop
fidivrl
add
and
cs
pop
lcall
and
add
aam
inc
xchg
cmp
xor
shrl
sub
movsl
imul
leave
jmp
xor
jl
fbld
pop
shl
inc
cmp
loop
dec
imul
es
mov
or
sbb
inc
mov
push
jle
mov
outsl
in
mov
subl
lods
mov
sub
cli
push
fisttpl
jnp
mov
mov
pusha
lret
and
int3
mov
lret
fnstsw
or
pop
movsb
mov
xchg
xor
js
ret
mov
push
divb
bnd
xchg
aaa
movsl
movsl
leave
les
cmp
sbb
push
adc
mov
roll
push
sub
inc
sbb
mov
mov
xchg
scas
push
xor
jns
shlb
inc
cmp
push
jnp
push
lret
push
pushf
daa
dec
out
insb
iret
sbb
insb
sbb
mov
popa
xor
cmp
lcall
fisubrs
test
mov
pop
mov
xchg
out
xor
xlat
cltd
stos
in
test
jbe
inc
loopne
xchg
mov
movl
in
in
xchg
cmpsb
dec
cmpsl
push
subb
incb
or
rcrl
mov
lods
inc
imul
and
sub
xchg
std
or
jo
xor
dec
sub
stos
xor
sahf
mov
movsl
pop
loop
cmp
push
mov
lock
loope
in
xor
add
xchg
scas
aaa
lcall
cmp
mov
sbb
iret
xor
adc
jecxz
push
xchg
sbb
inc
jno
sahf
cmp
add
pop
nop
ficoms
add
out
push
jb
subb
xchg
jbe
cmp
in
mov
leave
popa
stos
jae
mov
push
jnp
push
fyl2xp1
push
adc
lock
xor
test
pop
scas
loopne
into
sbb
mov
outsl
into
jecxz
and
inc
nop
gs
adc
and
hlt
sbb
mov
sbb
push
adc
loope
divl
add
cwtl
cld
insb
dec
fidivrl
push
jecxz
sahf
add
orl
lcall
xor
fs
inc
in
jge
imul
ret
enter
nop
push
xchg
pop
clc
mov
cmpsl
das
lret
mov
addr16
movsb
cld
fisttps
pop
push
pop
test
repnz
mov
xchg
out
shrb
lcall
pushf
aam
test
cmpl
or
fcompl
push
stos
stc
cmc
sbb
ja
outsl
loope
inc
cmpsl
push
enter
xor
adc
or
cmp
pop
dec
mov
add
pop
ss
lds
xlat
aaa
pop
das
push
push
outsl
movsl
jl
push
mov
cmp
or
cwtl
fisttpl
test
mov
inc
ret
cmp
xchg
or
lock
scas
push
int3
xchg
scas
lret
inc
fdivl
insl
dec
push
pop
stc
lock
mov
inc
outsl
sbb
je
lds
cmp
das
push
jg
push
xchg
jne
mov
sbb
sarl
inc
adc
int3
lahf
enter
testb
mov
jle
lock
lods
cwtl
mov
dec
test
mov
ljmp
lret
add
push
jae
cmp
adc
inc
jo
push
lahf
mov
das
lahf
maskmovq
imul
jle
jno
jo
loope
pushf
adc
ss
pop
out
cli
fisubrl
pop
pusha
mov
fisubs
pop
mov
rcl
es
sahf
je
sbb
decb
cmpsl
cld
cmp
adc
dec
andb
mov
push
inc
scas
stos
sti
inc
sub
add
lret
and
xor
mov
jno
sbb
xchg
dec
gs
adc
pop
xor
mov
sub
stos
add
sbb
jle
adc
and
xor
mov
cltd
cmpsb
jae
mov
jp
aad
out
dec
test
mov
test
ja
xor
pushf
lea
add
sti
adc
arpl
mov
jns
mov
stc
xor
arpl
lea
out
mov
addb
popf
out
jle
inc
sarl
push
mov
or
adc
ja
xchg
push
adc
xchg
out
jle
and
scas
and
cld
call
dec
fcoml
mov
js
and
pop
test
fistpll
in
xor
inc
pop
sbb
movsl
scas
pusha
push
cld
dec
push
or
dec
data16
push
mov
fsubs
inc
dec
bound
xorl
outsb
pop
movsb
sbb
sub
push
inc
pop
mov
mov
dec
int3
jo
les
jae
cli
mov
dec
mov
int3
adc
movsb
popa
pop
iret
xchg
push
sbb
xor
push
ss
fwait
das
sub
pop
xchg
mov
or
xchg
out
or
jmp
mov
lcall
aas
jno
fwait
pop
cmp
mov
add
push
ja
push
mov
ja
push
cld
xchg
jnp
cmp
add
pop
pop
iret
inc
sub
jmp
lret
push
ret
out
fistpl
movb
sbb
mov
jmp
and
inc
xor
jecxz
sub
test
sub
insl
aas
test
cmp
push
or
cmp
xor
jg
movsl
add
mov
jbe
and
jno
into
loopne
les
jge
in
inc
outsl
push
and
sbb
mov
iret
lock
sub
sub
or
enter
jnp
xor
sbb
jle
or
jmp
mov
adc
xlat
push
sub
xchg
or
push
fisubs
ror
push
mov
addb
rcl
mov
andl
pop
dec
xor
mov
repz
lods
outsb
jno
ja
shl
mov
add
movsl
shlb
das
mov
pop
pop
mov
insb
ss
inc
adc
mov
std
gs
sbb
test
or
cmp
pop
enter
inc
aad
loopne
ret
adc
pop
xor
mov
cmpsl
xor
jno
lret
add
hlt
dec
inc
mov
inc
addr16
scas
ss
lahf
mov
into
xchg
xchg
std
or
push
mov
jno
ss
imul
test
lcall
bound
cmpsl
fisttpl
push
and
inc
adc
fidivrs
xlat
and
scas
out
pop
shll
sub
xchg
inc
cmp
cmp
inc
pop
xchg
scas
or
adc
mov
cmpsb
testl
sub
insb
dec
mov
sub
arpl
mov
test
std
xchg
push
lods
mov
mov
push
fstps
stos
pop
leave
mov
mov
fildll
and
add
mov
ficoml
out
dec
xchg
push
mov
xchg
mov
mov
mov
test
int3
push
aas
dec
loopne
loopne
push
push
push
rclb
push
cmp
rcrl
lret
rolb
push
adc
inc
mov
inc
es
and
data16
lds
cld
jns
sahf
xchg
lods
sbb
outsb
mov
mov
test
fwait
pop
mov
cmpsb
incl
mov
jb
or
xlat
jo
ret
imull
roll
mov
cmp
aaa
sub
pop
mov
push
pop
sahf
into
lahf
hlt
out
clc
inc
repnz
faddl
mov
js
xchg
jns
push
test
ss
inc
insb
add
xchg
int
sbb
xchg
cmpsb
outsl
cmp
repnz
pushf
rclb
cs
jno
daa
lret
jmp
test
jmp
stos
cli
xor
push
adc
addr16
into
mov
pop
cltd
mov
push
push
jp
daa
dec
pushf
pop
ja
repz
jmp
out
int
mov
in
xchg
xchg
loop
sub
xchg
andl
inc
mov
adc
xchg
inc
cmp
nop
loopne
aam
fwait
push
das
or
mulb
adc
icebp
adc
cmp
pushf
stos
sub
and
loopne
repnz
inc
mov
stos
adc
push
or
mov
dec
out
lds
cmp
jne
adc
xor
xlat
pushf
lea
jnp
inc
nop
stc
lret
ja
int
xor
push
inc
mov
fsts
cmpb
call
test
fucomp
jno
test
and
cmp
xchg
stos
fmuls
daa
dec
sub
imul
jo
add
sti
call
in
jge,pn
pusha
mov
movsl
gs
std
hlt
jbe
sbbb
mov
pop
xor
inc
and
ljmp
das
push
dec
pop
fidivs
ja
cmp
push
outsl
cmp
lahf
add
bound
fisubs
into
loope
pop
in
xor
push
ljmp
jp
cmp
lods
negl
sti
pop
and
cmp
mov
dec
cmpsb
test
out
dec
jl
jp
xchg
popa
ret
fimull
subb
test
xchg
sub
daa
pop
inc
push
jg
xchg
sar
push
cmp
in
pop
mov
dec
mov
lods
out
xchg
pop
cmp
pop
jle
shlb
sbb
sbb
scas
subl
add
push
addr16
mov
ss
sub
std
stc
test
ret
outsb
adc
and
das
shrb
fwait
pop
xchg
notl
or
jo
jge
push
in
data16
pushl
dec
push
cmp
jo
cld
imul
inc
aad
enter
fs
adc
data16
xchg
fistpll
lock
pop
cli
pop
xchg
loopne
xchg
jge
xchg
push
test
ja
push
aas
call
add
fistl
lods
arpl
mov
pop
xchg
icebp
sub
flds
jnp
scas
je
push
cmp
or
sbb
pop
lret
push
xchg
mov
pop
popf
lods
cmp
pop
je
rorb
sub
leave
mov
push
push
xchg
mov
cmpsb
pop
sbb
test
iret
imul
mov
roll
es
and
fcompl
jge
add
int
lcall
pop
push
sub
cwtl
mov
mov
ds
ja
adc
xchg
xchg
push
sbb
mov
xor
dec
or
test
jno
push
insl
push
mov
cmpl
sbb
inc
and
jbe
scas
dec
inc
xchg
pop
imulb
mov
jb
push
stc
cld
and
aaa
lea
fdiv
mov
sbb
arpl
fsubr
or
push
enter
orb
and
arpl
dec
inc
adc
fsts
and
mov
repnz
int3
dec
push
pusha
xchg
add
xchg
ret
add
fs
push
cmp
out
pop
xor
cmp
mov
push
roll
mov
lods
dec
mov
leave
leave
scas
fwait
pop
rcrl
or
and
lods
sahf
adc
mov
in
sbb
cmp
fidivrl
or
xchg
cmp
fildll
arpl
imul
fcom
add
mov
push
xor
jno
cmp
aaa
sti
sub
or
mov
test
ret
ss
in
inc
mov
xchg
push
cmpsl
xor
cmpsl
stos
nop
mov
or
pop
and
xor
popa
pop
aam
popa
bound
dec
pop
call
mov
push
add
xor
arpl
jo
ljmp
and
pop
push
mov
sub
dec
fld
and
push
testb
or
push
xor
addr16
or
shlb
and
idivb
stos
sbb
jo
enter
cmpsl
daa
subl
and
ljmp
push
nop
jmp
jnp
mov
push
cld
shll
dec
jnp
lea
jae
xor
push
shr
lahf
pop
mov
ljmp
mov
mov
lods
xorl
dec
mov
pop
repnz
add
adc
stos
out
or
inc
xor
mov
mov
ja
shrb
pushf
decb
and
sbb
push
push
fnsave
push
les
cmp
decl
mov
lret
addr16
popa
xchg
insl
cli
aaa
dec
mov
xlat
imul
rorb
mov
mov
inc
xchg
out
cmp
addr16
aad
orl
sub
sti
xchg
repnz
xor
leave
frstpm(287
sbb
fcoms
inc
dec
mov
hlt
mov
adcb
and
and
adc
sti
insb
adc
mulb
je
lock
xor
adc
into
or
sti
lea
lret
mov
aas
mov
testb
push
push
inc
data16
xor
ja
sub
add
out
jl
xlat
not
pop
ds
popa
mov
inc
lock
loop
lock
sbb
dec
push
xchg
cmp
xchg
mov
cmp
aam
pcmpgtb
cwtl
xor
pop
mov
rcll
adc
sub
mov
mov
sub
mov
mov
call
xchg
xchg
adc
sbb
into
cmp
fimull
xor
adc
inc
mov
xchg
add
jbe
in
inc
cmp
and
sbb
and
sbb
std
mov
jno
out
ret
or
mov
mov
repnz
outsb
inc
mov
mov
rol
jle
xchg
inc
out
test
ss
pop
mov
aaa
xchg
xchg
xor
test
sub
jno
mov
xor
arpl
rclb
push
pusha
xchg
js
mov
dec
jnp
rcl
in
daa
sti
mov
dec
inc
cmpb
inc
test
adc
pop
rcrb
mov
insl
stc
push
add
xor
pop
call
jbe
sbb
inc
dec
sub
call
jb
pushf
sahf
int3
fldcw
add
mov
loope
mov
sbb
loopne
xchg
movsl
adc
in
xchg
daa
mov
and
cs
jns
jo
mov
sahf
es
push
addb
imul
popa
mov
sti
jmp
xor
mov
rcrl
dec
pusha
mov
dec
and
imull
ret
mov
cltd
push
and
sub
xor
xor
lock
push
lret
jbe
cmp
sarl
xchg
jmp
pop
cmp
cld
lar
and
ds
mov
adc
dec
loope
ret
imul
ret
js
cmpsl
fistpll
rcrl
bound
fnsave
test
in
cli
adc
add
ds
jno
mov
jecxz
or
inc
outsl
xor
cli
cmpsb
sbb
xor
fdivrs
mov
fidivl
arpl
pop
ja
jg
das
jmp
fs
inc
sbb
leave
shlb
xchg
xchg
lock
add
and
adc
mov
es
mov
and
sbb
les
outsb
push
xchg
pop
or
mov
imul
dec
and
cmp
xchg
in
mov
out
imul
adc
push
sbb
popa
jne
sub
xchg
adc
xchg
ret
inc
rorl
aaa
xchg
int
mov
xor
xchg
mov
xchg
jnp
inc
shrb
imul
in
aam
outsl
lea
push
std
test
inc
fistl
repnz
fdivrp
imul
pop
cli
dec
fsts
pop
mov
add
loopne
shrl
rolb
scas
jae
cmc
mov
lods
lahf
stos
push
adc
or
stc
sub
cmpsb
leave
and
cmp
xor
jle
cmp
call
lds
push
dec
mov
mov
push
in
add
mov
adc
add
out
jg
ljmp
stc
addb
roll
les
inc
test
incb
cmp
xchg
ja,pt
mov
inc
js
mov
or
insl
push
push
mov
idivb
stos
mov
xchg
add
adc
std
aas
mov
jle
adc
repnz
bswap
lret
cmpsb
in
and
aaa
inc
jbe
push
and
outsb
popf
daa
movsb
mov
mov
push
sub
lds
lock
pop
test
inc
rcl
adc
fistps
ja
loop
push
cld
lods
int3
adc
sbb
jns
mov
push
loopne
push
je
cmc
mov
sbb
and
or
aam
jg
int
pop
js
xorb
adc
jmp
repz
dec
push
add
and
orl
pop
mov
outsl
add
cmp
add
xchg
sub
pop
push
repnz
pop
mov
arpl
sbb
fidivrs
rclb
dec
mov
hlt
cmpsb
push
sbb
test
mov
imul
dec
test
mov
daa
xchg
out
push
movsb
pop
dec
mov
clc
pop
push
mov
je
neg
test
cmp
jg
or
pop
fisttpll
xchg
ret
mov
mov
xchg
mov
js
jno
bound
push
jo
push
test
cmp
test
fprem1
fucomip
lea
in
out
mov
jne
pop
outsl
outsl
dec
push
cmpsb
adc
fsubl
or
out
inc
mov
inc
enter
pop
icebp
inc
or
bnd
stos
test
ret
add
test
mov
inc
subl
gs
sti
insb
push
scas
loop
imul
cmp
mov
out
ret
mov
lahf
add
test
push
and
lea
pushw
mov
test
mov
insl
sbbl
rorl
mov
lret
cwtl
dec
fst
xchg
mov
mov
aam
and
incl
or
sarl
mov
loop
pushf
mov
mov
into
nop
cmp
pushf
adc
jae
cmpsl
inc
mov
mov
data16
stos
adc
cmp
jmp
or
je
je
dec
mov
leave
call
mov
das
popf
ror
cmp
cmpsb
sub
shr
push
ss
push
nop
add
out
push
push
cli
xrelease
cwtl
inc
loopne
test
pop
jno
sti
fstpt
xchg
ljmp
dec
xchg
mov
sub
mov
fdivs
dec
sub
sahf
inc
sub
cmp
js
pushf
mov
fwait
mov
lods
pop
sbb
add
and
aam
popf
jno
rorb
pop
jge
adc
or
dec
es
pop
cmp
test
in
cwtl
sub
std
cmpsl
gs
sbb
sub
mov
mov
dec
cs
js
cld
jns
stos
cmp
adc
in
cmp
insl
inc
pop
sbb
insl
testl
aam
int3
lcall
dec
xor
push
imul
inc
pushl
imul
rorl
bound
xor
mov
iret
lret
and
push
push
cltd
pop
outsl
sub
outsl
ficoml
lea
add
dec
mov
ja
aaa
pop
ja
mov
mov
adc
jno
addb
dec
or
or
inc
jbe
lods
push
data16
lods
shll
lods
jnp
test
pop
dec
enter
in
inc
pop
ds
xor
push
cmpsb
add
daa
inc
jne
xor
mov
pusha
dec
dec
lods
bound
or
pop
hlt
dec
pop
cmpsl
push
je
loopne
mov
cwtl
scas
repnz
adc
push
add
fadd
xchg
ret
xchg
cs
mov
push
add
data16
jns
pop
adc
push
pop
mov
mov
loopne
push
sub
sub
mov
outsl
inc
lock
rcl
jp
imul
popf
lcall
xor
push
arpl
adc
fnstenv
mov
bound
pop
orb
adc
xor
test
stc
jb
mov
adc
mov
dec
roll
mov
ds
stos
mov
push
jmp
aad
js
mov
mov
xor
jmp
das
mov
jo
adc
or
inc
shll
stos
rcr
cli
mov
jnp
scas
in
mov
jge
sub
mov
call
ljmp
fsubr
push
dec
lret
adc
adc
imul
jns
sbb
sarb
jae
iret
dec
jno
push
data16
adc
lret
outsb
xchg
or
test
pusha
xchg
aam
pop
int3
mov
adc
loopne
out
sbb
jle
in
adc
mov
sub
add
sub
movsl
sbb
mov
mov
cmc
pusha
aaa
jl
cltd
push
test
lods
cmp
sbb
xchg
push
loop
xchg
xor
je
movsl
loop
adc
push
xor
arpl
rcll
sbb
and
frndint
sbb
jns
imul
mov
push
xor
inc
lea
push
shl
in
jmp
std
sahf
ljmp
cmc
jno
daa
adc
lahf
push
out
ret
fcmovnbe
mov
jg
cmp
scas
mov
ljmp
sbb
mov
jns
dec
lea
rol
and
cld
in
dec
jecxz
icebp
outsb
bound
push
aaa
sub
arpl
or
lret
out
adc
push
xor
push
xchg
jmp
inc
int3
adc
jecxz
xchg
fwait
clc
jno
cmp
dec
cld
pop
enter
sub
sub
je
inc
dec
out
arpl
shl
xor
inc
ljmp
out
adc
leave
out
inc
ss
xlat
pop
or
mov
ljmp
cmpsl
cmp
pop
ret
mov
and
push
mov
imul
repz
sbb
cli
and
cmp
jo
shr
sub
iret
add
sbb
jle
lock
pop
fimuls
and
pop
rcll
adc
inc
push
pop
movsw
movsb
cwtl
adc
xchg
mov
nop
dec
push
dec
popa
inc
inc
int3
nop
mov
sub
cmp
xchg
xor
dec
mov
mov
je
faddl
imul
mov
xchg
pop
sbb
lds
into
mov
sub
mov
inc
in
ss
push
inc
xor
sub
bound
aaa
aas
xor
inc
mov
in
xor
cmpsb
cs
push
fwait
add
incl
outsb
into
mov
and
es
mov
hlt
push
jne
test
mov
xlat
inc
pop
jnp
xchg
mov
inc
push
or
ljmp
push
outsb
xchg
inc
push
mov
mov
mov
loope
mov
inc
jno
mov
add
and
sbb
roll
xchg
orb
mov
cmp
cmpsb
mov
inc
mov
mov
cld
xchg
push
mov
push
cmpsb
inc
hlt
cmp
sub
es
xchg
mov
jns
outsb
adc
mov
mov
std
cmovge
mov
dec
or
outsb
cmp
sbb
daa
syscall
push
jge
push
mov
fwait
call
xchg
fimuls
test
dec
push
adc
fimull
mov
js
pop
xchg
lock
enter
jecxz
mov
mov
mov
dec
xor
jne
xlat
lahf
xchg
jbe
lahf
sub
andb
inc
push
mov
jl
mov
and
jmp
daa
cmp
inc
sub
jbe
sub
push
pushf
and
rcr
cld
and
test
xchg
cmp
xchg
ja
add
cmp
xchg
cmp
scas
sbb
xchg
inc
rcr
aas
fisttpl
cmp
inc
adcb
xor
iret
je
shlb
pushf
inc
in
mov
mov
xlat
mov
adc
cltd
fdivl
rcr
pop
mov
xchg
and
lods
imul
sub
into
pop
les
outsl
idivl
add
aas
push
mov
push
xor
lods
ja
inc
into
inc
mov
inc
push
dec
scas
shrl
mov
dec
jo
fcompl
dec
insb
imul
jle
add
nop
xchg
repz
mov
popw
and
call
add
mov
pop
xchg
hlt
hlt
hlt
test
fadds
out
das
adc
shrl
lret
add
aaa
and
fs
pop
pushf
stos
sbb
mov
mov
outsb
push
sub
fldl
pusha
ljmp
push
outsb
loop
in
inc
mov
xchg
inc
cmp
bound
fs
mov
sub
fucomip
stos
mov
insb
sbb
cmp
dec
bound
xchg
xchg
mov
and
lahf
or
insl
test
scas
fcoms
bound
mov
aam
or
dec
and
inc
insb
adc
pusha
repz
pop
cltd
jns
jne
dec
sti
lock
orl
lahf
fstl
ja
cmp
mov
push
push
xchg
and
repz
incl
mov
dec
shll
aam
mov
cmp
call
pop
push
rcrl
sbb
cmp
roll
enter
into
fldcw
cmp
rclb
or
pop
mov
shl
mov
testl
mull
sub
push
int3
push
pusha
xorl
shll
push
fucom
lret
pushf
cmp
push
push
sete
mov
cmpb
push
jns
add
mov
and
stc
inc
aad
cmpl
fsubrl
imul
scas
pushl
in
ja
adc
scas
jmp
inc
cltd
pop
fstpt
push
pop
mov
into
aad
std
xchg
add
cmp
inc
data16
mov
in
or
or
sub
addr16
fcomp
hlt
mov
mov
push
dec
popa
imul
cmp
lds
ficoml
mov
mov
or
repz
mov
jae
push
push
push
test
into
loop
add
push
xor
stc
les
scas
jo
fcmovne
or
and
cwtl
add
dec
out
add
fstpl
aam
xchg
inc
lds
rclb
lret
sbb
ret
dec
ja
fstpl
xchg
pop
xor
cli
dec
inc
cmc
sbb
sub
cwtl
aad
je
fbld
pushf
out
call
push
mov
pop
sbb
enter
lea
cs
ret
loopne
outsl
cmp
add
pop
mov
les
mov
sbb
mov
mov
or
pop
xor
aaa
ljmp
lret
mov
add
popa
mov
fadd
clc
push
popa
psubb
mov
mov
sub
pop
mov
stos
jge
mov
pop
jl
das
shlb
fistl
sbbb
ds
aam
push
cld
pop
mov
or
nop
cld
daa
ds
jb
scas
or
int3
mov
dec
aad
pop
inc
push
lea
in
sub
fs
jp
iret
or
popa
stos
mov
je
adc
adc
mov
test
or
divl
mov
dec
out
push
or
add
xchg
mov
jge
add
sub
out
popf
testl
xor
pusha
add
pop
dec
sti
adc
and
aad
mov
data16
dec
lock
cmp
sarl
lret
xor
out
nop
test
bound
jg
cmp
xchg
gs
sub
push
cs
or
lods
scas
popa
test
and
adc
adc
orl
jp,pt
or
mov
xchg
icebp
icebp
int
test
xchg
stos
pop
jge
enter
push
sbb
xchg
lret
pop
pop
outsl
fsubrs
gs
icebp
inc
or
cmpxchg
ret
rclw
mov
mov
push
outsb
xrelease
scas
fdivp
pop
mov
call
nop
pusha
add
ret
mov
ds
pop
rcrl
xor
cwtl
dec
les
mov
adc
lods
dec
outsl
cmp
sub
aaa
push
add
roll
mov
imul
mov
cmp
int
xchg
dec
je
add
decb
sub
jge
mov
cmpsb
sbb
iret
sub
mov
xlat
sbb
sahf
and
push
arpl
jnp
xor
rorb
add
cltd
insl
or
jle
push
cmpsb
jo
ret
mov
jbe
pop
shll
mov
int
xchg
sub
pop
push
adc
stos
xchg
por
into
add
and
cmp
and
psubsb
js
and
inc
inc
xor
lock
leave
js
ficomps
es
test
sti
cmp
sbb
push
scas
ljmp
xor
scas
movsb
jno
pop
sbb
xchg
pop
push
mov
mov
mulb
cmp
lods
xchg
jge
int
fists
jns
mov
rcll
push
mov
loop
mov
push
sub
sub
cmp
aaa
adc
jb
test
fwait
shr
dec
call
mov
mov
loopne
fs
lret
test
jbe
lahf
and
insb
and
push
popa
push
adcl
dec
dec
inc
or
pop
jmp
mov
mov
in
popa
jnp
xchg
addb
or
pop
pusha
lret
xchg
and
int
xchg
nop
adc
mov
xor
mov
dec
mov
fwait
adc
mov
stos
cmp
cmpsl
inc
xchg
mov
pop
pop
cmpb
test
insb
cmpsb
adc
adc
dec
push
and
push
aam
cld
pop
popl
xchg
dec
push
test
cmpsl
pop
repz
popa
sub
and
mov
call
int
add
clc
fistps
repnz
mov
adc
mov
subb
arpl
sub
xor
sub
scas
dec
pop
jge
aam
cmova
push
sbb
mov
je
mov
and
test
pop
outsb
sbb
sbb
mov
push
repnz
stos
cmp
repz
arpl
out
mov
inc
push
jle
xchg
adc
imull
insl
scas
pushf
imul
cmpb
in
icebp
pop
inc
jbe
mov
and
xlat
mov
jmp
adc
ficoml
pop
movsb
in
fdivp
popf
mov
clc
xor
add
dec
dec
je
jp
mov
imul
lcall
mov
repz
sar
ret
adc
cmc
sbb
push
jmp
cli
mov
lea
iret
pop
sar
jp
pushf
movsl
mov
sti
addl
sub
mov
sbb
movsl
push
adc
ja
aas
nop
dec
inc
popf
mov
lods
mov
mov
xchg
je
sub
out
xchg
dec
sbb
adc
xor
push
add
inc
jno
sarb
mov
js
fwait
or
xchg
inc
push
sbb
fdiv
cmp
xchg
sub
hlt
inc
cmc
jno
push
and
shlb
mov
xchg
in
outsl
xlat
movsb
sub
add
jnp
call
lahf
sub
pushf
lea
jb
test
mov
je
cmpsb
lcall
clc
cmp
jmp
mov
rol
lods
inc
fmull
pop
mov
xor
pop
xlat
mov
cltd
jle
call
movsl
scas
divps
add
lret
xchg
or
jge
dec
test
pop
xchg
pushf
mov
data16
pop
lock
xchg
push
add
aam
or
scas
shr
mov
xchg
daa
mov
dec
movsl
push
es
push
xor
jno
mov
ret
and
popa
inc
aam
pop
jbe
jbe
fcompl
clc
pushl
repnz
sbb
test
mov
sbb
xor
mov
in
ret
cs
mov
hlt
push
cli
mov
push
inc
std
fwait
adc
pop
aaa
push
insb
xor
mov
inc
add
mov
or
and
xchg
popa
cwtl
in
rep
fdiv
lods
movsb
push
fsubrs
in
lret
dec
push
mov
roll
shrl
adc
mov
cmp
or
jbe
inc
xorb
cli
xor
cmp
sbb
loope
out
icebp
add
scas
cmp
es
xchg
cmp
fcmovne
stc
jnp
cwtl
adc
xchg
inc
lods
mov
out
jae
decb
and
icebp
les
outsb
int
or
iret
lcall
pop
stos
fbld
les
jb
sub
stc
or
scas
pop
mov
std
fs
je
jae
shrl
xchg
push
mov
mov
xchg
sbb
cltd
imul
ss
insb
sub
jecxz
or
aaa
mov
xchg
fwait
lahf
mov
xor
scas
outsl
cmpsl
pop
jno
xor
dec
inc
pop
cltd
enter
jg
add
inc
icebp
xchg
inc
hlt
jmp
sbb
stos
inc
adc
test
jp
sahf
cmp
fadd
lret
scas
ja
xchg
mov
inc
sbb
pop
or
fwait
add
and
imul
and
mov
pop
pop
fistl
adc
dec
outsl
cltd
cwtl
or
push
arpl
mov
dec
sahf
push
pusha
fs
sbb
imul
imul
mov
outsl
daa
in
sahf
out
adc
xor
xchg
movsl
and
in
mov
mov
xchg
jle
dec
mov
dec
dec
popa
mov
xor
cwtl
add
scas
sahf
out
fcomp
rorb
icebp
mov
bound
bound
shrb
ja
and
insl
xchg
outsb
sbb
sbb
mov
or
repz
insl
jp
mov
xchg
jns
hlt
es
lret
mov
insl
fs
adc
imull
arpl
add
jne
das
sbb
xlat
aaa
push
sub
xchg
sahf
or
dec
xchg
pop
fbld
cmp
jge
lods
rorb
mov
xchg
inc
arpl
rorl
xchg
jp
imul
add
add
inc
lock
cmp
loop
lcall
xchg
addr16
ret
jb
dec
rclb
js
push
faddl
push
push
lahf
lds
clc
int3
ljmp
bound
adc
jae
jl
jle
dec
insl
mov
inc
push
mov
adc
sarb
inc
jl
lock
sbb
push
push
mov
adc
xchg
cmpsb
or
sbb
or
jae
jge
je
int
shl
sbb
and
dec
pop
mov
or
test
loopne
lcall
aad
call
imul
addr16
dec
mov
pop
stc
les
xchg
xlat
sub
pop
mov
jno
cmp
out
cmp
out
leave
imul
or
or
sbb
pop
cmp
pop
lcall
movsl
sub
inc
idivb
fwait
mov
in
pop
cmpsl
mov
adc
les
fs
inc
sub
adc
mov
and
jmp
stos
sbb
or
or
lret
lock
call
add
xor
call
in
lods
xlat
pop
jns
pop
insb
call
aaa
xchg
stos
aam
aad
iret
std
and
mov
mov
xchg
push
add
popf
mov
cmp
repz
lea
mov
add
inc
ret
sysexit
test
movsl
or
jns
mov
pop
pop
rcrl
imul
shr
xchg
mov
pop
test
pop
pop
call
rcl
sbb
ret
sbb
mov
push
out
mov
cli
loop,pt
mov
jns
mov
push
mov
dec
faddl
repnz
in
xchg
jb
movsl
jno
jecxz
dec
repnz
sbb
adc
push
jb
sub
fimull
jbe
jg
mov
xchg
inc
adc
cmp
cwtl
stc
jnp
dec
inc
inc
js
imul
flds
push
cmp
out
popa
mov
sbb
add
mov
push
je
out
jg
pop
dec
push
adc
push
ja
pop
or
add
std
jle
xlat
cmp
pusha
movsb
call
andb
test
aaa
negb
sbb
inc
mov
or
jae
addr16
push
push
loope
fidivrl
insl
lods
and
les
cmp
inc
pop
cmp
sub
dec
xchg
mov
jo
int3
dec
call
mov
in
rcll
lods
fnstcw
jg
popf
pop
push
fwait
xchg
dec
fcoms
out
push
inc
rcrb
pop
mov
adc
clc
movsl
jo
lret
in
iret
jmp
pop
or
sbb
push
and
dec
in
push
jmp
outsb
mov
pop
xchg
das
sub
fs
and
mov
into
rcl
jmp
jb
repz
inc
sub
orb
sub
cmp
cmpsb
push
inc
jl
sub
xchg
xor
call
fcmove
adc
movsb
lds
insl
adc
mov
push
mov
mov
jno
push
stos
shr
or
in
out
insl
mov
sbb
cli
mov
lret
rclb
insl
das
cmp
fcoms
add
std
mov
mov
cs
push
cmp
add
gs
mov
lret
sbb
mov
or
pop
add
iret
iret
fs
outsl
mov
mov
cmp
dec
lds
mov
imul
out
mov
jb
pop
xor
jmp
mov
repnz
push
popf
jge
repnz
lret
xor
dec
fnstsw
aas
push
imul
ffreep
pop
imul
cld
jge
mov
add
jge
mov
push
mov
std
xchg
subl
fs
xchg
mov
cmp
add
movsb
icebp
sub
and
and
test
inc
ja
mov
xchg
aaa
jp
jno
lcall
stc
pop
or
push
cmp
mov
adc
sub
mov
inc
daa
push
gs
bound
adc
andl
popf
xchg
in
mov
test
shll
in
add
movsl
cs
popa
and
aad
xor
insl
dec
or
sub
inc
push
adc
push
ret
insl
lret
clc
imul
pop
in
inc
fiaddl
and
pop
sbb
pop
daa
mov
fidivrl
dec
scas
cmpl
nop
loop
push
ljmp
mov
addr16
lock
and
les
clc
aam
add
js
push
push
insl
imul
xchg
push
add
jno
je
clc
add
jnp
mov
cmp
dec
test
xchg
test
dec
rcrb
xchg
mov
scas
out
in
cmpsl
test
cli
pop
loop
je
rorl
mov
lock
lahf
adc
shll
lock
push
cmp
pusha
push
push
mov
sbb
cmp
mov
xor
and
adc
mov
sbb
ljmp
fisttpl
cmpsl
push
and
ficoml
iret
iret
pop
imul
test
into
dec
cmp
std
mov
pop
xor
popf
push
sub
mov
fmuls
loop
add
adc
adc
add
sub
call
pusha
fiaddl
scas
cmp
imul
adc
sbb
fcoms
outsb
andl
adcl
pusha
push
mov
imul
and
push
dec
cld
js
bound
pop
inc
loopne
dec
enter
sbb
outsb
push
inc
xchg
dec
or
notl
jge
push
xor
ss
add
movsl
pop
mov
outsl
rolb
and
sbb
pusha
mov
cmp
push
jmp
scas
cli
cmp
jp
and
nop
cmp
lret
jo
jle
js
xchg
mov
arpl
fisttpl
ret
and
and
sbb
mov
cmp
dec
xchg
or
cmp
jnp
add
inc
xor
dec
add
scas
dec
ljmp
nop
enter
ja
inc
and
fwait
cmpsb
out
enter
jne
mov
stos
insl
call
popf
mov
mov
jg
in
sub
push
push
testl
mov
movsl
das
push
scas
das
inc
add
pop
adc
es
jecxz
lods
inc
adc
pop
cmp
mov
flds
push
aaa
push
and
in
in
mov
push
ja
nop
jne
pop
subl
lock
addl
xchg
dec
repnz
int3
xchg
mov
je
xor
es
movsl
lahf
lea
ror
add
dec
dec
testl
cmp
repz
or
insb
sbb
popf
or
leave
adc
aaa
fmul
out
add
lret
shrb
inc
stc
and
and
scas
pushf
dec
jnp
sub
pop
in
xchg
adc
jecxz
adc
sub
cwtl
mov
mov
fbld
std
mov
stos
out
sbb
mull
push
pop
out
sub
dec
gs
nop
adc
les
iret
fdivl
lret
xchg
mov
fwait
dec
addl
or
mov
mov
mov
pop
dec
inc
imul
inc
jmp
jae
jg
or
out
mov
sub
int
negl
popf
mov
pusha
push
mov
outsb
test
xchg
xchg
mov
and
std
mov
leave
sbb
adc
jecxz
xor
xor
push
repnz
fidivrs
push
cld
cld
mov
mul
adc
xchg
add
ja
out
gs
je
add
inc
ja
insb
add
pop
aaa
ret
pop
and
mov
mov
push
es
mov
pop
out
or
push
ljmp
or
fisttps
fdivrl
inc
dec
pop
arpl
pop
lods
pop
adc
xchg
xor
insb
jle
sbb
test
jge
mov
outsl
mov
or
lahf
dec
test
xchg
push
inc
dec
std
mov
mov
sahf
movsl
and
repnz
pop
ss
and
xchg
push
imul
cmp
cmc
sbb
mov
fmuls
sub
or
ret
lcall
and
mov
in
jp
mov
shl
jmp
or
test
or
add
ljmp
jg
sbb
hlt
add
out
push
test
adcb
sbb
stos
pushf
fidivs
cmp
xchg
mov
aaa
jp
sti
lahf
and
jb
ds
shlb
jae
pop
lcall
adc
mov
jno
test
aam
jae
fucom
push
fwait
pusha
imul
test
inc
mov
adcb
sub
push
daa
fstpl
data16
testb
mov
push
hlt
dec
jo
inc
scas
and
frstor
and
mov
arpl
jbe
mov
aad
dec
out
in
cmp
add
xchg
clc
daa
andl
sti
test
leave
and
repnz
sbb
out
cwtl
stos
fmulp
scas
pop
mov
icebp
shrb
dec
push
pop
xor
adc
and
cmp
inc
add
aad
daa
and
pop
test
mov
add
je
fs
jnp
jno
sub
push
pop
mov
xor
sarb
lock
subl
push
xchg
arpl
xlat
addr16
cmp
adc
jns
or
in
dec
insl
stos
cmpsb
mov
aad
outsl
aad
pop
lds
xchg
outsb
lods
rorb
lea
sbb
lcall
call
out
fisubrl
mov
cmp
fidivrs
pop
lock
mov
jecxz
in
rolb
inc
imul
mov
rolb
insb
xor
in
xchg
loop,pt
push
cli
sub
or
sub
lcall
or
push
adc
push
and
jl
push
pop
or
mov
xchg
iret
jge
sub
into
and
xchg
enter
mov
fidivrl
pushf
int
idivb
mov
pop
inc
xor
sti
fwait
jo
cli
pop
les
lahf
rcrl
jnp
xchg
pushf
sbb
enter
incb
xchg
out
add
add
mov
sbb
cld
pop
jnp
movsl
jae
sub
jb
fcmovb
std
outsb
xor
aam
sub
xor
xor
xchg
shll
int3
imul
xchg
cmp
inc
addl
pop
movsl
and
aas
loop
test
xchg
jae
scas
xor
sub
stc
stc
adc
imul
jmp
loope
cmp
rolb
das
pop
neg
mov
enter
xchg
nop
shll
add
lret
fldenv
repz
pop
sti
call
fsubrl
out
pop
repz
jg
mov
fldl2e
les
push
dec
push
dec
cmpsl
insb
pop
aaa
mov
fsubrs
mov
xor
pop
or
xor
stos
outsb
aaa
lds
xor
sbb
xor
bts
insl
cmovge
divl
inc
adc
inc
sub
cmp
sbb
outsb
mov
cmp
in
pop
pop
lcall
call
push
jg
mov
ror
lods
mov
outsb
lret
stc
dec
setb
jns,pn
jo
inc
mov
lret
decl
add
mov
insl
inc
xor
and
out
aam
pop
arpl
inc
jns
in
push
aas
in
and
jl
jle
cwtl
jns
and
out
dec
inc
repnz
cltd
in
dec
das
insb
inc
jno
stos
jns
dec
pushf
es
xlat
shlb
and
jg
rolb
mov
shlb
mov
sub
add
aam
xor
add
cmp
ret
mov
and
outsl
pop
mov
xor
xchg
pushl
add
adc
daa
lock
cmp
lcall
push
mov
test
ljmp
dec
push
mov
mov
hlt
push
scas
lret
cmpb
test
cmpl
pusha
xor
or
sti
xor
stc
cmp
jge
lds
arpl
jecxz
jb
stos
shlb
enter
pop
sbb
xor
inc
aas
pop
das
sbb
lahf
hlt
imul
xor
mov
jmp
dec
repz
cmp
mov
pop
pop
fcoms
jl
addr16
ret
std
jg
push
sub
jmp
es
sub
mov
mov
cmpb
leave
in
popa
call
popa
sub
clc
dec
sub
andl
aaa
adc
dec
scas
mov
daa
add
fdivrp
xor
push
cs
mov
call
jnp
jl
das
popa
mov
and
or
or
inc
in
test
imul
or
loope
subl
outsb
aas
push
adc
and
sti
icebp
addl
iret
sub
sarb
push
or
ds
add
leave
sbb
in
fidivs
fsubrs
clc
loopne
xchg
cltd
in
push
jmp
jno
nop
jne
icebp
sub
out
mov
pop
sub
mov
push
pop
stos
mov
rcrb
in
popa
sbb
les
adc
inc
insb
sar
dec
dec
gs
mov
push
adc
aad
add
push
cmp
arpl
mov
sbb
popa
mov
subl
add
lock
push
bound
mov
mov
sahf
je
subl
or
fimuls
scas
popa
jmp
pop
dec
add
sbbb
bound
or
xchg
cmp
loope
and
js
jmp
inc
divl
jle
dec
mov
shl
mov
pop
pop
dec
js
xor
sbb
xchg
stos
sbb
shl
mov
pop
mov
jno
or
shr
mov
cmp
stos
sbb
pop
push
sbb
mov
in
or
and
sub
lret
xor
pop
cmp
jmp
jmp
loop
shll
cmc
mov
sti
dec
sub
fistpl
jp
and
cmp
in
push
js
xchg
xchg
loope
dec
dec
test
inc
mov
call
cwtl
fcmovne
icebp
inc
jb
lret
cmpsl
or
pop
nop
xchg
dec
mov
dec
dec
mov
shll
mov
fimuls
jne
sti
adcb
test
adc
icebp
inc
adc
stos
mov
les
xchg
adc
int
mov
jmp
xchg
add
inc
push
sub
fiaddl
jb
shlb
pop
xor
mov
inc
jmp
mov
xchg
lcall
sub
xadd
jmp
xchg
cld
inc
sbb
add
mov
loope
stos
xor
nop
xor
std
xor
push
dec
and
pop
sbb
ja
je
pop
imul
cli
call
sub
mov
jae
cmpsb
push
out
jno
jmp
jmp
inc
mov
daa
jb
mov
paddd
pop
sbb
xor
cmp
mov
sbb
mov
aaa
int3
push
popf
subl
sarb
scas
dec
xlat
movl
or
iret
jns
inc
out
or
inc
lret
ja
jecxz
or
call
dec
cwtl
cmc
or
sbb
test
push
insl
addr16
in
lds
mov
out
fdivr
movsl
fisubs
pop
push
stos
push
popa
test
mov
mov
cmp
sbb
xchg
imul
jne
xchg
je
jecxz
subb
or
or
fwait
jb,pt
mov
leave
cmpsl
sub
sbb
fists
adc
jmp
dec
xchg
xor
and
adc
lcall
sub
mov
mov
leave
mov
repnz
push
stos
adc
xor
les
orl
pop
popa
lea
xor
inc
and
mov
ret
adc
icebp
mov
shlb
pop
out
adc
push
in
dec
imul
loop
scas
arpl
aam
enter
sub
jnp
pusha
jmp
ja
es
push
cltd
fcoms
push
mov
movsb
inc
loope
sub
mov
push
cmp
loop
out
lock
into
and
inc
arpl
xchg
xchg
adc
jge
jl
andb
mov
add
imul
popa
pop
mov
jbe
xlat
fildl
pop
pushf
das
imul
pop
dec
shl
das
mov
lret
pusha
jmp
sti
pop
mov
adc
push
xchg
push
push
ret
mov
or
mov
imul
push
xchg
addr16
cli
ja
and
fcmovne
ss
roll
aam
add
cwtl
leave
movb
incb
pushf
ljmp
imul
mov
mov
push
or
xchg
jnp
data16
pop
mov
or
imulb
cmc
cmc
mov
and
arpl
dec
cltd
dec
jae
imul
sbb
sub
sub
dec
inc
bound
lahf
cmp
add
cmpsb
pop
popa
hlt
jnp
pop
stos
enter
lods
je
sahf
stos
fbstp
mov
popf
sub
fisttpl
dec
pop
je
mov
dec
mov
mov
jp
inc
dec
jo
pop
push
pop
adcb
push
cld
lods
decl
mov
pop
stos
adc
pop
jmp
daa
aas
ret
pop
aam
insb
shr
jae
addr16
sbb
aam
adc
fcompl
jno
push
popa
adc
bnd
xchg
dec
mov
leave
cmpsb
dec
cmp
cmp
mov
cmpb
fisttpll
fistpll
test
and
lcall
push
outsb
sub
jbe
jl
pop
push
inc
jno
jo
test
or
test
xchg
imul
mov
arpl
hlt
inc
sbb
adc
adc
cmc
pop
push
in
push
sub
inc
mov
pop
xchg
inc
call
jp
mov
das
jle
les
lock
pop
pop
dec
movsb
sahf
mov
push
mov
xlat
dec
push
adc
mov
loopne
xchg
sbb
cltd
sbb
mov
sub
imul
aam
pop
xchg
mov
add
mov
adc
add
sahf
lahf
lret
cmc
jge
or
mov
or
adc
inc
and
and
call
xchg
mov
in
push
jge
ja
xchg
pop
dec
ret
cmp
je
inc
cltd
cmpsl
dec
pop
pop
and
mov
push
inc
fdivr
mov
add
shl
sbb
aaa
and
xorb
lret
pop
xchg
inc
inc
ja
test
push
faddl
mov
iret
pop
sub
adc
cmpsb
mov
test
sbb
iret
adcl
fcmovnu
and
sub
pushf
sar
push
mov
loope
pop
lock
mov
xchg
mov
or
dec
pop
pusha
outsb
out
or
xchg
inc
xchg
mov
cmpb
xchg
aaa
loop
pop
sub
cmpb
xchg
idivb
cmp
iret
pushf
lods
lcall
push
dec
shrb
xchg
nop
xchg
xor
pop
idivl
mov
add
jmp
xor
movsb
mov
sarb
xor
push
lods
pop
sbb
and
xor
mov
push
mov
gs
sub
and
lock
pop
jbe
ret
fs
jbe
sarl
mov
outsl
dec
cmc
mov
bsr
into
xor
xor
or
push
mov
rclb
mov
enter
lea
filds
icebp
or
adc
cmp
sub
ror
loop
fidivrl
sub
loope
or
push
dec
push
cwtl
mov
loopne
sbb
xchg
pop
jg
inc
mov
pop
pushf
mov
ljmp
insb
sbb
or
mov
pop
popl
pop
pop
jge
jge
imul
push
mov
mov
int
std
adc
xor
out
push
hlt
xchg
aam
or
xlat
test
xor
xor
les
pop
sti
or
rcl
dec
cmp
subl
cmp
rcr
in
subb
movsb
jmp
pop
dec
cld
add
fwait
mov
push
inc
sbbl
cld
sbb
mov
or
inc
jns,pn
jmp
jp
je
mov
mov
push
scas
sub
arpl
outsb
insb
adc
lea
dec
popf
inc
lds
lahf
xchg
outsb
shlb
sbbb
lds
or
dec
aad
ret
xor
push
in
and
xor
mov
or
jle
push
adc
xchg
push
mov
dec
sub
inc
aam
int
xlat
fucomp
cs
xor
sub
pop
dec
icebp
scas
insb
hlt
cmp
sub
inc
pop
mov
sbb
cmp
fisttpl
scas
daa
dec
pushfw
imul
lea
adc
es
sbb
stos
mov
test
xor
inc
cmp
js
shrb
or
inc
data16
bound
push
outsl
lock
fstl
cmp
cmp
push
or
jge
idiv
clc
mov
pop
popf
ja
int
and
fwait
dec
aad
cli
mov
bound
xor
aas
sbb
into
sahf
clc
jecxz
or
mov
pushf
lods
push
les
shll
pop
arpl
mov
push
leave
outsl
es
xchg
inc
and
sbb
pushf
cwtl
adc
push
push
loopne
ret
dec
adcb
fsts
adc
outsb
push
into
mov
sbb
pop
pop
mov
add
xchg
xsha256
cmpsb
adc
out
dec
cmpsb
jne
sbb
adcl
adc
mov
push
shll
mov
xor
xchg
mov
dec
aad
mov
and
clc
push
ret
xchg
mov
and
jl
mov
movsb
pop
test
rcrb
shl
adc
jns
xchg
lret
inc
sbb
out
inc
adc
mov
gs
mov
mov
ja
sbb
or
cmp
jl
sbb
rorl
mov
push
je
or
xor
adc
cld
push
pusha
loopne
sub
movq
fcoms
or
cmpsb
popa
sbb
popa
mov
mov
xor
ss
js
xlat
jle
idivl
and
mov
pop
aam
xchg
add
adc
outsb
xchg
mov
pop
cltd
pushf
xor
loop
cmp
fmuls
das
inc
aas
mulb
push
pop
add
mov
jb
shrl
jne
imul
jle
pop
and
bound
pop
sub
mov
loopne
mov
nop
imulb
cmp
adc
test
mov
sbb
xor
movsb
dec
dec
or
scas
fcoml
clc
imul
in
addl
pop
movsl
sub
sbb
nop
cmp
jg
inc
sub
pop
rorb
outsl
adc
loope
sub
lahf
mov
jb
addr16
scas
lods
ss
inc
adc
pop
stc
movl
cmpsb
xchg
mov
test
aaa
pop
std
lret
aaa
inc
stos
orl
mov
xor
pushf
imul
pusha
mov
add
pusha
mov
stc
add
jl
or
adc
insb
repnz
pusha
inc
adc
mov
or
mov
adc
xchg
mov
clc
adc
mov
lahf
out
decl
mov
fcmovb
test
cmc
or
pushf
popf
or
jl
push
ffree
mov
sbb
call
pop
pop
rorl
cmpsl
test
loop
dec
jmp
adc
out
fucomp
idivb
subl
sbb
mov
lret
data16
inc
divb
mov
popa
xor
dec
sti
xchg
pushl
sbb
sub
push
xor
sub
mov
pusha
and
idivl
xchg
std
cs
mov
push
mov
sbb
push
sbb
pop
adc
imul
les
fwait
out
out
jbe
pusha
gs
xchg
notl
lods
cmpsb
fdivl
cli
jno
icebp
fiadds
lcall
pop
jmp
sahf
ljmp
mov
rolb
cmp
out
push
jp
and
andl
sub
or
jnp
sub
lds
dec
pushl
inc
jge
sub
mov
unpckhps
lcall
and
std
or
inc
and
pusha
stos
push
inc
mov
mov
addl
xor
mov
inc
rcll
xchg
sbb
arpl
and
roll
out
mov
inc
pop
hlt
stc
inc
lahf
inc
pop
xchg
iret
hlt
rcll
push
cmp
mov
cmove
cmp
mov
xlat
jmp
mov
sahf
lcall
inc
dec
mov
hlt
lret
mov
mov
outsb
jo
mov
popf
jb
jno
jno
clc
lods
xchg
jo
sbb
dec
push
sub
pusha
sub
loopne
or
xchg
fsubl
sub
pusha
cmp
inc
xchg
pop
or
mov
mov
shrl
pop
push
push
cmpsl
jecxz
std
jp
jo
mov
scas
in
mov
jbe
xchg
mov
dec
dec
lcall
repz
pop
je
adc
movsl
jb
insl
or
xor
lcall
dec
in
repz
fwait
call
fwait
sub
inc
imul
cmp
pop
push
sub
dec
jmp
adc
push
or
fdivrs
dec
sbb
mov
popf
dec
sti
fisttps
sahf
push
mov
icebp
or
mov
sub
clc
adc
rol
sub
fistpl
jl
sbb
dec
fcmovbe
or
jns
sub
inc
mov
or
xor
and
mov
out
xchg
push
enter
bnd
xchg
push
fadds
inc
xor
xchg
addr16
and
sbb
dec
aam
ss
js
and
sbb
xchg
pop
mov
or
sbb
test
loop
das
push
mov
popa
testl
xor
pop
xor
gs
lret
fs
inc
mov
adc
add
out
pop
or
dec
std
mov
stos
lea
mov
sbb
cmpsb
lahf
sbb
xchg
sub
mov
out
loopne
mov
cmc
xchg
bnd
stc
xor
sub
loop
inc
mov
mov
loopne
insl
andb
xlat
les
mov
dec
mov
int
mov
mov
stc
lods
sbb
aam
pop
idiv
pop
test
stc
imul
aaa
jmp
add
push
ret
subb
mov
nop
sub
cmpsb
loop
adc
leave
cli
call
mov
cmp
filds
decb
push
popa
jp
jp
mov
sub
fimuls
in
mov
push
dec
stc
or
xor
shl
stos
test
stos
dec
inc
testl
jecxz
fnstcw
and
ss
insb
addb
arpl
dec
iret
or
adc
andl
je
dec
xor
test
and
cmpsl
cmp
push
xchg
lea
or
dec
arpl
fadd
mov
dec
clc
lds
dec
xor
aad
mov
sbb
jbe
pop
mov
inc
insb
pop
push
xchg
clc
push
and
stos
flds
adc
jg
clc
mov
mov
iret
jbe
shll
jp
or
daa
jnp
cld
push
xorl
dec
xchg
loope
ja
dec
jmp
bound
loop
cltd
icebp
rcrb
inc
cltd
lock
mov
dec
vdivsd
shl
push
mov
jo
sbb
out
sbb
jg
hlt
fidivrs
mov
jae
int3
fstps
fs
push
or
inc
push
inc
or
aam
jl
cmp
jge
sbb
and
lahf
cmpl
aas
xorl
out
rcr
jl
mov
jp
cltd
inc
movsb
add
pop
mov
cmovp
mov
cmp
les
vpmulhw
addr16
std
in
mov
jb
gs
push
jae
jl
sub
mov
and
insb
stos
mov
aad
and
push
test
push
icebp
jne
lods
dec
add
jge
imul
test
test
je
into
aad
add
cmpsl
mov
mov
add
loopne
sbb
aam
test
cld
leave
mov
inc
iret
pop
js
xor
int3
sti
inc
lods
mov
mov
dec
xor
xchg
push
adc
leave
in
mov
dec
cmp
lock
add
imul
adc
in
stos
bound
out
adc
aaa
mov
jg
punpckldq
repnz
jl
in
cld
popa
cmp
pop
iret
mov
mov
clc
sub
cmp
rcrl
sbb
xchg
and
cwtl
cmp
dec
dec
lcall
sar
inc
hlt
shrl
pushf
out
jo
fmul
loop
inc
push
ja
aam
scas
xorb
cmc
ja
stc
xor
adc
pop
int
in
mov
fisubl
outsb
add
lea
fnsave
sub
ja
jo
ret
sub
jnp
fisubrl
shrb
cmp
sub
jmp
scas
ret
dec
std
fwait
fwait
sub
iret
adc
inc
mov
add
repz
mov
clc
rclb
dec
out
imul
out
rcl
mov
xchg
testl
and
xor
scas
lret
mov
mov
adc
inc
or
inc
sahf
jp
inc
shlb
adc
fdivs
and
and
mov
ret
int3
push
or
or
mov
lods
pop
pop
outsl
in
enter
xor
mov
xor
push
push
mov
dec
scas
fxch
xchg
push
out
sbb
or
inc
jmp
pop
repnz
xor
push
and
cmp
jne
daa
fstpl
cmp
dec
fldl
leave
adc
std
push
inc
clc
adc
push
iret
addr16
xorl
test
imulb
adc
and
addr16
pusha
mov
xchg
es
and
lods
decb
push
cli
jno
xor
jns
inc
xor
aaa
fistpll
push
mov
out
inc
lods
dec
pushl
dec
mov
mov
and
test
add
nop
lret
inc
jge
int
pop
in
daa
jb
xchg
aaa
pushf
or
mov
dec
leave
push
jo
repnz
in
sbb
pop
pop
jno
mov
jmp
xor
inc
mov
and
pusha
std
out
adc
jp
adc
mov
movb
adc
sub
jmp
add
inc
imul
mov
repnz
jle
jbe
adc
mov
mov
outsl
sbb
mov
xor
fisttpl
lock
leave
test
hlt
mov
cld
adc
mov
adc
imul
xor
ret
sub
roll
jg
xchg
subl
in
out
shlb
push
pop
pop
sbb
adc
jp
sbb
adc
mov
and
je
mov
les
dec
pop
insb
mov
xorl
sbb
mov
mov
xor
or
or
stos
jge
or
stc
adc
push
stos
and
and
push
aaa
pop
fmull
call
cmpsl
jmp
push
or
lcall
cltd
outsb
jne
xchg
pusha
test
jmp
shrl
jnp
xor
add
sub
rolb
lods
rcrb
movsb
out
lods
sub
iret
or
dec
test
sub
jne
inc
repz
lods
dec
jae
loop
cmp
rcrl
std
pop
lret
aad
pop
push
andl
sbb
and
mov
xchg
rorl
or
enter
aas
sbb
aam
in
mov
sbb
scas
cmp
mov
push
mov
or
rorl
sbb
jne
dec
jge
dec
ds
pop
les
sbb
mov
mov
push
mov
cmpsb
test
mov
xchg
mov
add
xor
jno
pushf
push
sub
pop
mov
out
mov
pop
or
outsb
add
rol
int
or
daa
mov
nop
fmuls
ret
inc
push
mov
int3
jl
xchg
xchg
jl
in
xchg
scas
cmp
pop
and
xlat
xor
out
movlps
popa
jae
cmc
rorl
test
lret
mov
popa
xrelease
or
test
inc
ret
pusha
ficoms
adc
sub
mov
xchg
jae
mov
jp
lock
dec
and
lds
daa
lds
lret
mov
stc
test
jp
xor
mov
gs
aam
inc
mov
loope
or
test
and
push
mov
shll
ret
roll
sub
rdmsr
mov
sti
pusha
and
jno
xor
or
cmp
in
and
and
mov
inc
inc
jecxz
testl
sbb
sbb
lods
add
lret
jmp
dec
loopne
loopne
gs
xchg
jl
xchg
push
mov
jge
sub
cmp
cmpsb
scas
push
sbb
sub
xor
mov
out
repz
jbe
arpl
mov
sbb
xchg
cmp
adc
or
inc
push
sahf
push
outsl
ret
mov
les
or
decb
in
dec
fcmovbe
fidivl
mov
ds
ds
lods
mov
xor
xor
aam
mov
bound
roll
mov
cmpl
jp
imul
jmp
dec
adc
xchg
stos
lcall
shl
jo
pop
jl
cld
dec
jo
lods
push
mov
sbb
sub
push
dec
or
dec
aad
mov
pop
loope
je
andl
and
mov
out
cli
pop
or
cmp
xchg
insb
dec
lret
lock
sbb
sub
jnp
dec
aad
or
fcoms
mov
push
mov
loope
movsl
sti
loop
cmpsl
les
jle
enter
shrb
xor
sar
out
imul
sbb
push
mov
add
movsl
jmp
fs
sub
mov
push
clc
dec
xor
gs
adc
mov
or
mov
loope
xor
or
dec
lds
orb
faddl
xorb
or
iret
stc
bound
rcll
loop
pushl
dec
sub
mov
xor
test
jg
je
scas
adc
cmc
shll
aas
test
ror
lret
insb
and
and
pop
inc
js
xchg
imul
dec
dec
and
imul
aas
outsl
push
add
xchg
out
pop
sub
int3
push
push
or
shr
mov
movsl
in
rcrl
popf
cltd
jmp
imul
mov
rolb
and
cmpsb
sub
pop
out
lea
ljmp
ja
out
dec
xor
adc
push
orl
pushf
sbb
pusha
loop
and
mov
and
push
dec
jns
icebp
js
cli
divb
cmp
lahf
sub
ds
or
and
xchg
cld
shlb
cmp
jge
roll
push
xchg
enter
repnz
pop
addr16
cli
dec
mov
cmp
test
adc
pop
leave
rolb
test
in
adc
push
filds
jmp
dec
cmovp
outsl
idivl
push
xchg
xchg
mov
add
push
push
movl
mov
or
pop
xchg
pop
sahf
lret
imul
inc
adc
loop
inc
aas
adc
inc
sub
add
outsl
rcrl
into
out
insl
cmp
lods
mov
or
data16
mov
cmp
mov
sbb
sbb
sub
adc
int3
and
and
std
mov
xor
aaa
push
dec
cmp
and
xchg
jl
mov
cmpsl
dec
adcl
or
insb
mov
movsb
scas
mov
sub
movsb
dec
mov
imul
fwait
push
insb
jl
mov
or
adc
jno
and
lret
fucomi
adc
mov
ror
xchg
adc
jno
js
lock
and
mov
or
rclb
mov
mov
shll
dec
bound
push
imul
jge
cmpsb
jmp
mov
sub
cmp
pop
shrb
ljmp
mov
arpl
call
pusha
xchg
pop
popf
pop
icebp
enter
int3
movsb
arpl
xlat
and
adc
xchg
sub
adc
add
dec
enter
inc
mov
jno
je
or
jle
jo
xor
daa
cmp
daa
xchg
and
test
xchg
jae
add
jge
imul
cmp
mov
xor
push
ljmp
adc
or
es
cmpsl
push
push
mov
xchg
addb
mov
xchg
loopne
ss
jecxz
cmp
lods
mov
sti
icebp
xor
mov
jae
pop
insl
jo
pusha
mov
mov
mov
insb
adc
test
rorb
sub
jbe
adc
mov
iret
flds
push
xchg
std
sbb
dec
xlat
sbb
icebp
ja
es
fsts
cld
mov
push
sti
cmpb
call
scas
lret
push
cmc
and
es
addr16
or
add
test
daa
shll
xchg
popf
cmpsb
dec
adc
out
xchg
sbb
push
mov
mov
notb
pop
loope
mov
adc
xor
mov
mov
jmp
fbld
pop
in
jl
push
dec
ja
cwtd
xor
mov
dec
xor
addb
cltd
test
mov
inc
dec
scas
idivl
daa
cmpsb
mov
add
int
mov
adc
mov
mov
in
jo
xchg
shll
and
lds
jge
cmp
enter
add
or
and
movsb
cmp
mov
xor
cmp
cmp
int3
pop
data16
les
xchg
cmp
test
les
je
and
xchg
lock
adc
decl
loop
pop
adc
jnp
and
ret
push
aas
and
stos
or
and
aad
mov
ficompl
test
pop
fwait
mov
adc
gs
and
dec
xor
xor
rorb
cmp
out
xchg
and
and
push
sahf
bts
sub
xchg
scas
cmp
ret
lret
pop
cmp
mov
sbb
xchg
dec
mov
mov
or
push
pop
icebp
cs
jmp
adc
ret
movsb
cmpsl
andl
jbe
cltd
into
xor
cli
cwtl
mov
out
in
xchg
sbbl
das
int
push
xor
and
movsl
pop
dec
mov
fnsave
in
mov
imul
pop
and
mov
jg
inc
insl
mov
push
dec
mov
sub
test
call
cmpsl
add
stos
daa
stos
fyl2x
neg
dec
xchg
clc
jl
dec
stc
lock
sub
cmp
stos
ret
je
cmp
out
adc
mov
es
aad
ljmpw
sbb
nop
push
sub
inc
scas
fnstcw
imul
dec
inc
mov
lret
test
movsb
idivl
loope
sahf
push
jp
jle
or
out
repz
lret
push
aad
and
jno
dec
nop
jmp
add
lods
loope
into
test
mov
jge
loope
lock
mov
inc
push
jmp
and
enter
add
lahf
jl
je
test
js
xor
push
movsl
mov
and
notl
fxch
jo
jge
ficompl
int
sarb
mov
add
pop
mov
repz
not
add
cmp
stos
daa
loopne
mov
rcrb
clc
mov
sub
popf
mov
xchg
ret
add
or
pop
add
pop
adc
jno
add
pop
jb
jg
pop
jl
ficoms
rclb
mov
out
mov
out
pushf
testb
scas
mov
pop
pop
cmp
lea
fs
jbe
xor
jmp
pushf
fnstsw
bound
jg
xlat
xlat
mov
adc
lds
xor
repnz
mov
mov
jns
stos
jg
jae
negl
adcb
insb
call
sbb
jb
fcoml
iret
pop
xchg
mov
lods
daa
iret
fwait
or
xchg
mov
mov
mov
xlat
sbb
xchg
loope
fistl
and
leave
sub
jnp
leave
andb
add
mov
or
adc
push
lcall
lods
clc
data16
jg
insl
push
mov
mov
stos
inc
add
imul
lds
dec
mov
mov
xchg
cmp
or
ljmp
cmpsl
into
and
push
pop
push
xor
mov
mov
mov
mov
fstps
xor
cli
mov
lea
cmp
cmp
in
xchg
in
add
cmp
in
mov
mov
int
add
mov
adc
ficoms
cs
addb
pop
mov
les
test
pusha
ljmp
clc
xchg
dec
push
test
jmp
je
xorb
sbb
mov
mov
js
fstpl
and
loopne
lret
arpl
cmpsl
repnz
icebp
out
fidivrs
dec
orb
xlat
jp
ljmp
ljmp
jecxz
test
negb
out
sbb
mov
and
out
lods
lahf
sub
jle
sub
in
incl
pop
adc
push
or
mov
adc
cmpl
or
xchg
dec
push
stos
loop
xchg
inc
shrb
lock
fsubs
jns
ror
cli
xor
sub
jo
cmp
hlt
pop
inc
cmp
inc
push
adc
add
js
cmp
arpl
cmp
sbb
ret
xchg
dec
sub
mov
lahf
adc
push
scas
inc
pop
idivl
dec
ss
mov
jg,pn
and
lcall
movsb
pop
ret
dec
ret
and
nop
cmpb
aaa
xor
icebp
scas
insb
sbb
shll
dec
lods
mov
push
and
andb
sub
aas
and
sub
jae
mov
jg
out
sub
mov
adcb
cmp
insb
mov
pushf
test
sbb
pushf
jmp
jle
in
xor
push
in
in
movsl
sbb
inc
sahf
adc
bound
sub
ljmp
cli
jns
scas
es
and
pop
jae
cwtl
pushf
mov
pop
clc
cmpsl
popa
xor
movsl
test
cmp
jo
test
iret
int3
inc
mov
push
cmpsl
test
mov
lds
movsb
pushf
xchg
xchg
pop
fdivrl
jb
cmpsl
mov
pop
dec
or
int
aam
cmp
jp
test
hlt
cmp
push
ja
inc
sub
or
iret
loope
shlb
dec
mov
out
xchg
pusha
jg
lods
popf
dec
pop
jbe
jns
inc
mov
push
mov
xchg
ds
or
psubsw
and
mov
adcl
and
mov
hlt
adc
push
mov
jb
fabs
pop
test
mov
jl
xchg
cli
test
adc
dec
subb
pop
inc
inc
xchg
imul
rsqrtps
xchg
adc
sti
aad
int3
repz
cmp
add
icebp
mov
hlt
out
outsl
xor
aaa
inc
add
jne
mov
cmp
jns
inc
adc
repz
xchg
mov
pop
stos
jns
or
test
int3
dec
cmc
mov
pusha
cmp
stos
adc
out
mov
xchg
fisttps
xor
stc
pop
roll
fiaddl
mov
add
ret
pop
test
push
sbb
cld
dec
jl
aam
mov
pop
xor
stos
test
jge
dec
inc
movsb
dec
mov
mov
arpl
icebp
cmp
inc
clc
enter
adc
pop
add
push
movsl
lret
jno
push
xchg
jl
daa
mov
xchg
into
push
mov
and
bound
lea
aad
add
stos
sbb
out
xchg
ret
cmc
xor
cmp
push
lcall
sahf
or
dec
fcmovb
add
inc
sbb
xor
test
gs
stc
rcrb
push
dec
mov
fs
sub
push
leave
das
inc
sbb
in
pop
xchg
dec
fmul
fmul
int
sub
pop
and
aaa
or
mov
sbb
xchg
xchg
js
into
xchg
sub
repz
iret
out
aas
or
addr16
aad
xchg
push
fdivl
imul
xlat
out
mov
loopne
dec
rol
and
scas
dec
pop
pop
ret
sahf
push
push
scas
jne
inc
dec
fwait
push
stc
or
pop
dec
cmp
dec
jno
inc
jp
shrb
leave
out
lret
test
dec
arpl
mov
mov
mov
frstor
popf
add
cmp
xor
push
mov
jb
fabs
lods
sahf
mov
inc
cs
adc
mov
sub
jno
das
lret
mov
mov
add
lret
out
or
fcompp
push
fnsave
sub
std
inc
adc
repz
cmc
and
mov
or
jge
mov
cwtl
xchg
xlat
aad
push
in
and
push
or
sbb
test
mov
adc
mov
sahf
jnp
or
xor
xchg
fidivl
adc
movsl
cmpsb
xchg
jmp
inc
int
je
mov
stc
push
repz
fcmovbe
cmp
pop
xchg
out
cwtl
mul
adc
nop
inc
mov
sbb
cmc
test
or
fwait
sub
mov
and
popf
dec
jb
aaa
pop
cmpsb
lret
add
mov
xchg
sbb
mov
inc
xlat
cmp
xchg
cmp
adc
push
pop
in
sahf
lods
mov
fs
cmc
xchg
es
shlb
je
mov
shrb
lret
outsb
xchg
pop
dec
loope
repnz
jecxz
pop
shlb
fxch
dec
test
pop
sbbb
imul
dec
pop
mov
add
sar
arpl
dec
mov
mov
or
push
js
icebp
push
pushf
add
sbb
stc
mov
xchg
in
lods
pushl
in
cmp
xchg
or
pop
add
xchg
pop
out
jecxz
sub
dec
sbb
cmc
nop
mov
inc
fnsave
and
pop
jno
pop
dec
lcall
xchg
dec
ljmp
ret
xchg
push
mov
mov
fstp
in
xor
in
mov
or
push
stos
xchg
adc
aaa
dec
cmp
fisubrl
adc
dec
aam
sbb
inc
fmuls
fidivs
mov
or
mov
sbbb
scas
shlb
cmpb
adc
jmp
adc
into
outsl
mov
rclb
jns
cltd
or
cmc
jecxz
dec
scas
arpl
mov
outsb
andb
xchg
and
pusha
xorl
dec
shrb
mov
stos
xlat
push
cmpsb
iret
das
shll
push
cmp
pop
sbb
add
and
mov
ss
cmpsb
into
xor
cmp
dec
pop
or
jbe
push
push
lret
movsb
sub
cld
inc
push
rcl
pop
pop
mov
shrl
in
sbb
jg
testb
cld
inc
fstps
data16
scas
cmp
clc
mov
sub
lret
push
push
xor
in
imul
mov
and
inc
mov
fnstsw
jp
add
cmp
adc
fsincos
sbb
jb
frstor
data16
push
fisubrs
dec
cwtl
inc
cs
cmp
into
outsl
mov
popa
testl
add
sub
popf
sub
add
xchg
mov
iret
cmp
in
xchg
mov
test
les
add
push
mov
add
in
adc
or
in
dec
ds
sub
cmp
cmp
repz
mov
rcll
sbb
dec
rcr
mov
add
loop
shlb
ret
shlb
int
movsl
loope
xorb
test
fldt
cs
into
xlat
jbe
push
decl
fisubl
xor
ljmp
js
aam
mov
add
mov
sbb
pop
insl
jb
cmp
xor
into
ja
dec
push
mov
lret
push
test
test
cmp
inc
les
lods
in
adc
aam
pop
lds
xchg
mov
orb
scas
and
pushf
and
fdivrs
mov
cmp
out
push
cmp
inc
outsb
push
test
mov
iret
sub
cld
xor
adc
aad
mov
pop
sbb
fwait
push
inc
call
sbb
and
fcomi
addl
mov
or
cmp
mov
std
inc
xorb
lods
pop
sub
fisttpll
push
outsl
mov
and
mov
test
xchg
or
flds
jp
xlat
sub
cld
lret
and
popa
sbb
jl
test
leave
push
in
add
sbb
ljmp
dec
jge
lret
test
adc
xor
jnp
adc
ljmp
scas
jmp
and
push
inc
adc
xlat
mov
mov
dec
lock
ficomps
ss
push
mov
lea
dec
test
lret
neg
leave
dec
out
jns
push
mov
mulb
jp
add
out
push
xchg
cmpsl
mov
pop
sbb
sbb
dec
fists
les
jno
mov
ror
imull
xchg
call
sub
scas
inc
push
aad
lret
push
cs
rcrb
data16
mov
es
mov
push
imul
push
jp
pop
iret
xor
mov
fists
pop
mov
jne
cld
push
sub
jae
mov
sbb
adc
pop
adc
loop
cmpsl
lea
stos
sti
inc
jecxz
push
pop
and
mulb
pop
mov
in
clc
ljmp
dec
andb
inc
pop
test
adc
orl
mov
cld
mov
fisttps
enter
fwait
ja
aas
pop
out
daa
shll
cmp
sbb
push
sub
lds
leave
lea
lock
cmp
adc
shl
ja
or
ret
js
shrl
cmp
js
dec
test
gs
fildll
es
sbb
cmp
inc
lahf
add
cs
out
fidivs
repz
push
inc
int
sbb
jb
adc
and
aaa
mov
ljmp
sub
into
cltd
xchg
orb
mov
dec
subb
lahf
pushf
pop
repnz
jb
push
icebp
loopne
sub
imul
xchg
cld
icebp
sbb
pop
or
and
daa
add
scas
clc
lods
ret
jo
cmp
xchg
and
insl
jae
xchg
repnz
lds
int3
push
mov
shrb
sbb
sbb
out
call
movsb
test
rorb
jns
adc
add
in
repnz
icebp
lahf
and
std
int3
push
in
stos
ljmp
mov
iret
stos
mov
mov
xchg
repz
stc
mov
pusha
cmpsb
sahf
inc
mov
xchg
mov
pop
pushw
inc
mov
fcoml
adc
rclb
js
sub
jmp
xchg
or
add
sub
jp
in
inc
hlt
fpatan
jne
mov
hlt
lea
stos
mov
push
push
stc
shll
leave
jmp
sbb
jecxz
or
sahf
fnsave
test
sbb
xor
sbb
mov
sub
lret
push
sbb
add
push
xchg
std
arpl
adc
mov
insl
adc
ljmp
js
lret
dec
sbb
inc
mov
mov
cwtl
imul
setno
dec
add
jno
cmc
pop
xchg
mul
in
dec
lahf
je
daa
mov
jbe
popf
lods
fs
push
leave
adc
ja
lock
imul
sbb
jecxz
inc
mov
fcmovnbe
sbb
mov
lds
xchg
add
enter
popf
and
insl
lret
lcall
sar
ret
jl
sub
xchg
push
sti
mov
je
mov
sbb
idivl
or
mov
or
mov
dec
movsb
sti
pop
mov
aam
xchg
ljmp
aad
es
add
or
add
dec
sarb
push
in
mov
and
or
std
and
xor
pop
xchg
les
daa
and
xchg
jno
test
rcrb
mov
cwtl
inc
dec
cmc
jae
repnz
fcmovu
popa
add
fldln2
into
pushf
test
outsb
xchg
dec
pop
jmp
das
ja
loop
mov
repz
sbb
pop
add
pop
sahf
and
mov
xor
xor
fiadds
jbe
lret
pop
sarb
insl
jg
inc
pop
insb
fs
icebp
adc
mov
subb
faddl
ds
jle
or
enter
sti
push
int
xor
xor
jnp
notb
jo
jmp
mov
jns
sub
iret
add
mov
scas
pop
push
mov
fcmovnb
testl
call
push
mov
xchg
cli
aas
jle
cmpl
sbb
and
push
aas
mov
imul
out
fwait
out
scas
xchg
iret
sbb
dec
inc
xor
pop
add
push
shll
adc
pop
and
sahf
cmpsl
test
imul
pop
mov
sbb
add
cwtl
ficoml
scas
or
int3
xchg
adc
ret
shl
xchg
jecxz
xor
cmpsl
in
inc
fs
sbb
add
scas
jecxz
das
leave
int
add
mov
mov
mov
in
add
mov
stos
lahf
or
jo
aad
mov
or
cld
and
out
jo
popa
testb
loope
mov
mov
stos
pop
push
cs
xchg
cmpsb
mov
mov
xor
dec
cmpsl
scas
mov
imul
push
andb
out
fwait
mov
mov
mov
jne
vpsubb
movsl
xor
lahf
ret
pop
mov
sbb
sbb
fmull
fwait
mov
and
add
aaa
stos
xorl
lods
xor
call
jecxz
cwtl
jg
repnz
xchg
inc
xor
fwait
jg
rcl
ret
aaa
mov
ljmp
or
push
iret
lods
js
inc
mov
mov
mov
cmpsb
sbb
jmp
inc
ds
xchg
scas
sti
and
dec
inc
dec
ss
pop
popf
sbb
hlt
jne
fwait
inc
adc
fpatan
and
aaa
cmp
repz
xchg
fdivl
sub
in
fsubl
add
sti
mov
and
cld
cwtl
lds
sub
jmp
testl
out
mov
or
insl
ret
jmp
aas
or
pop
xor
jmp
test
outsb
pop
fldcw
or
aam
add
sub
sbbl
ja
mov
lock
mov
imul
push
js
pop
jge
cmpsl
fistl
ret
push
jmp
fwait
jo
enter
mov
shr
rcll
or
dec
jmp
cmp
lea
dec
mov
or
jg
je
in
push
sbb
mov
dec
jge
arpl
das
lret
mov
jge
dec
idivb
inc
inc
sbb
mov
dec
mov
lcall
sub
adc
lods
pop
sbb
sahf
xor
adc
loopne
sub
add
outsl
aad
sub
fadds
xchg
xchg
mov
repnz
mov
or
ret
sbb
cwtl
sti
cmp
jo
leave
mov
sub
orl
shlb
cmpsl
loopne
xor
xor
sbb
pop
or
dec
sbb
mov
mov
sti
xlat
out
ja
xor
sbb
jno
push
mov
pop
xor
fs
mov
and
shlb
sti
pop
dec
dec
adcb
inc
aas
xchg
imul
add
pop
pop
pushf
adc
inc
arpl
clc
adc
call
dec
btr
xor
fildl
sbb
xlat
shrb
lea
insb
mov
lahf
xlat
testl
mov
lock
jge
dec
xchg
add
push
mov
movsl
sbb
add
and
addr16
int
pusha
mov
mov
mov
out
lret
mov
push
sti
mov
sub
pop
pop
leave
adc
adc
pop
jle
orl
mov
shll
mov
mov
lahf
mov
pop
shrl
ret
mov
mov
dec
leave
mov
jb
add
inc
add
mov
test
mov
out
mov
aas
pop
enter
loope
mov
push
ret
jecxz
scas
sub
jl
jge
xor
outsb
orl
cmp
sbb
test
xchg
mov
out
jno
push
out
in
and
dec
in
aad
lahf
out
mov
mov
aad
enter
les
adc
fdivrs
or
addl
xor
mov
sbb
dec
inc
mov
insl
xor
xor
iret
std
imul
push
fisttpl
add
xorb
in
sub
add
lock
pop
in
add
mov
push
or
divl
mov
cmpsl
sbb
push
mul
mov
pop
adc
lods
mov
jp
jae
lea
je
mov
cmp
movsl
out
push
xor
scas
mov
and
aaa
jae
push
repnz
je
add
pop
iret
inc
xchg
mov
or
jge
je
into
outsb
cmc
xchg
add
das
cmp
adc
jecxz
cmp
in
push
std
in
pop
mov
or
movsb
push
pushl
mov
mov
daa
and
and
movsl
dec
movb
das
sub
or
shll
xchg
sbb
cld
adc
hlt
cmpsb
inc
dec
sub
push
scas
mov
stos
mov
pop
jmp
minps
ljmp
adc
add
clc
xor
rorl
nop
jle
sahf
mov
fldcw
pop
test
ja
aam
mov
xchg
xchg
aaa
pop
movsl
psubsw
and
mov
mov
cs
mov
iret
xchg
xor
roll
xchg
mov
in
mov
inc
ljmp
inc
add
adc
inc
push
mov
xchg
and
sbb
icebp
shll
sti
xchg
pop
nop
dec
hlt
add
ss
mov
dec
test
jmp
mov
jmp
es
pop
gs
sbb
adc
xor
mov
mov
xchg
jb
cld
jns
xor
mov
sub
dec
mov
sti
jp
pop
pop
imul
test
pop
in
xor
scas
cld
movsl
inc
adc
sbb
cmc
xor
das
add
int3
inc
cmp
leave
ja
push
dec
movsb
mov
mov
pop
mov
outsb
scas
je
or
in
mov
ret
mov
sbb
cltd
or
cmc
xchg
xchg
mov
mov
adc
xchg
or
test
bound
repz
pushf
jg
cwtl
fstpt
xor
ja
xor
sub
shrl
cltd
nop
push
mov
xchg
arpl
dec
sarb
cmp
les
dec
pop
movsl
inc
sub
gs
cmp
in
ret
leave
push
mov
lret
xchg
push
mov
movsl
inc
and
inc
xchg
sti
add
xor
mov
xor
cmp
cmc
dec
rcl
loopne
sbb
mov
pop
es
lcall
leave
mov
clc
and
aas
mov
fdivs
popa
add
add
and
fs
push
iret
in
sbb
fs
in
cld
popf
and
adc
and
push
cmp
sub
dec
lock
enter
xchg
xorb
jecxz
rdpmc
push
and
pop
dec
pop
lret
je
xchg
in
add
dec
dec
add
and
stos
imul
mov
movsl
pop
add
aas
div
faddl
jnp
addb
lret
add
add
cmp
lea
jle
adc
test
xchg
out
sbb
dec
nop
fstps
in
out
push
pop
sahf
xor
outsb
loope
sbb
adc
mov
popa
stc
and
or
lcall
pop
lahf
jmp
push
mov
jns
and
imul
js
ds
shr
mov
repnz
arpl
aad
dec
jecxz
jnp
fsubrl
popa
cmc
cmp
mov
mov
js
push
lock
pop
sub
or
sub
aaa
adc
or
scas
push
dec
js
push
push
stos
clc
adc
arpl
or
cmpsb
mov
mov
adc
dec
or
mov
adc
add
or
and
inc
mov
cld
mov
or
pusha
call
dec
sti
xlat
sub
and
xor
mov
subl
lret
imul
stos
dec
aam
test
cmpb
sbb
bound
xchg
sbb
imul
adc
jbe
sub
stc
stc
jno
or
roll
out
and
imul
in
lret
into
mov
rorb
pop
jmp
stos
shll
cmp
enter
dec
pop
add
xor
mov
xlat
mov
out
mov
popa
adc
adcb
sub
shll
mov
or
je
test
inc
jle
pop
push
jp
lock
xor
xchg
cli
mov
cmp
cmp
pusha
mov
push
aas
mov
xor
leave
in
sub
sbb
data16
out
xchg
pusha
push
mov
push
xor
xchg
jecxz
push
and
adc
je
sbb
and
mov
imul
mov
mov
sub
adcl
jl
stos
or
cld
mov
test
in
or
cbtw
lret
add
testb
sbb
or
pop
mov
nop
outsl
push
fadd
mulb
js
daa
and
cld
cmp
inc
mov
dec
xor
adcb
xlat
sub
jae
jne
insb
xchg
ljmp
in
jle
xchg
push
cli
pop
push
lods
dec
cmp
and
push
in
sti
pushf
cld
aaa
sbb
ffree
push
scas
icebp
lahf
cmp
mov
push
jecxz
mov
sbb
pop
mov
sbb
arpl
push
jno
leave
mov
insb
adc
xchg
fdiv
sub
inc
mov
lods
loope
movsl
test
nop
push
add
dec
pop
outsl
int
int
and
subb
sbb
sub
stc
loope
das
das
data16
loope
jp
mov
imul
dec
lcall
pop
pop
cld
jecxz
in
xchg
mov
and
push
or
cltd
push
fcoml
push
or
shlb
jl
push
imull
pop
or
outsl
jne
add
roll
mov
fdivrl
ret
and
cmp
out
and
mov
cmpsl
xchg
loopne
fsubrl
test
sbbl
push
mov
and
or
or
out
loopne
stc
push
mov
xor
mov
pushf
test
mov
jo
mov
fisubl
mov
rorl
mov
pop
mov
and
call
inc
sbb
jns
cmp
cld
add
popa
jae
test
das
shl
es
into
add
mov
in
adc
jnp
push
add
fcoml
push
adc
ret
std
sub
lds
cmp
add
popa
adc
pop
je
leave
jbe
adc
inc
xchg
adc
mov
call
jl
jle
test
lods
push
iret
xor
push
pusha
inc
add
jb
mov
cwtl
jle
mov
cwtl
push
fsubr
adc
push
push
outsl
fwait
test
fildll
xor
or
inc
nop
and
js
sbb
fiaddl
mov
push
sahf
mov
mov
and
sbb
adc
push
movsl
pop
sbb
cs
pop
fnsave
std
daa
jno
jge
jo
add
in
in
cltd
into
fwait
aaa
sbb
lahf
js
mov
cmc
pop
out
add
icebp
fsub
lock
push
repnz
test
adc
out
int3
popf
inc
je
mov
cmc
mov
xchg
shrb
add
cmp
orb
mov
jnp
lds
lods
rolb
aas
inc
imul
fdivl
orb
lods
mov
pop
bnd
pop
jecxz
xchg
and
fsubrs
arpl
cmc
add
add
ja
mov
mov
mov
add
sub
mov
out
inc
add
lds
stos
fisttpl
aad
clc
loopne
jecxz
xor
cmp
addr16
add
xor
xchg
sub
push
sbb
xchg
jnp
mov
mov
pushf
or
cmp
sbb
insb
int
jp
push
xchg
mov
fnstcw
into
and
in
xchg
movsl
cmp
cli
mov
sub
lahf
mov
push
out
add
xor
movsl
dec
mov
rcrb
cmp
sbb
daa
jl
xor
xchg
cmpsl
pop
divl
cmp
fs
icebp
push
cmp
lahf
mov
sub
lock
mov
pop
fwait
test
popl
mov
out
addb
pop
pop
das
jo
add
andl
aam
sub
roll
cmp
push
dec
sub
into
sbb
mov
insb
pop
rcl
aam
stc
pop
loope
and
pop
dec
mov
rcr
xchg
imul
lahf
je
lods
pushf
shll
xchg
ds
sub
sbb
mov
mov
push
mov
mov
es
push
dec
fcmovnb
add
daa
mov
push
mov
dec
jne
adc
shl
mov
push
add
push
rorl
dec
cmp
sar
inc
loop
lods
rorl
roll
lret
mov
or
jge
add
fwait
pop
stc
ja
mov
cmp
jg
dec
shll
jge
mov
adc
xchg
iret
sub
ret
pop
mov
lock
sub
loopne
sub
repnz
addr16
in
mov
shrl
pop
mov
ret
push
pop
cwtl
arpl
mov
lods
cmp
lds
sbb
jp
mov
lcall
pop
xor
sahf
sbb
lret
dec
and
and
add
jne
ds
xor
mov
das
out
adc
and
lcall
xchg
and
aas
jle
xchg
cmc
xchg
hlt
pinsrw
mov
fstl
push
fwait
and
adc
and
cmpsb
and
adc
in
push
data16
add
mov
leave
cmp
fimull
pusha
or
into
xor
dec
test
add
in
fstl
scas
leave
sub
fisubs
leave
ljmp
mov
pushf
cmpsb
leave
insl
dec
in
mov
dec
in
mov
mov
adc
daa
nop
dec
jo
icebp
std
xchg
cmp
in
stc
xchg
addr16
das
inc
push
dec
dec
movsl
insl
inc
in
das
xchg
sbb
jl
sti
jns
and
adc
lret
mov
mov
xchg
inc
adc
jecxz
in
and
ds
test
xor
lea
les
sarb
stc
ss
dec
and
rcr
xchg
push
or
ljmp
movsb
outsl
loopne
popa
dec
push
sub
mov
jnp
pop
cmp
sub
int3
leave
xchg
dec
xlat
jle
ja
iret
les
and
xor
bound
jns
fsub
cli
and
xor
cmc
dec
adc
cmp
pop
dec
sub
fisubrl
jo
shlb
out
out
data16
loopne
fucomip
pop
iret
bound
push
cmpl
cmp
jecxz
pop
pmullw
in
sub
insb
repz
pop
aad
stos
imul
loope
mov
rclb
mov
les
lods
mov
add
cli
sbb
xchg
loopne
or
sbb
xchg
dec
push
pop
pop
jno
leave
cmp
jmp
loop
xchg
adc
scas
sub
sbb
xchg
sahf
testb
xchg
push
xchg
mov
mov
mov
sub
cli
mov
sub
xor
neg
xor
adc
jmp
xor
mov
jmp
fiadds
xor
sbb
popa
iret
mov
cmp
or
xlat
icebp
cmp
xchg
xchg
adc
fstps
lahf
sbb
bound
imul
mov
aam
and
mov
cltd
loop
mov
xchg
jae
mov
out
ja
cs
aad
pusha
jge
int3
fistpl
aaa
pop
pop
std
push
cltd
xchg
and
mov
jp
cli
xchg
mov
or
dec
xchg
dec
in
mov
aam
jp
fildl
sbb
push
pop
mov
pop
xchg
cmpl
mov
pop
cli
and
in
mov
xchg
in
out
iret
sbb
movsl
mov
and
pop
xchg
cmp
js
call
je
adc
pop
shl
fwait
dec
mov
add
push
pop
repnz
and
fistpl
dec
xchg
jne
cmp
dec
mov
jle
and
jb
out
push
or
stos
xchg
pusha
mov
push
cmp
xor
ja
push
outsb
out
hlt
xchg
mov
sub
stos
cmp
add
cli
int
mov
mov
adcl
jecxz
mov
jno
sbb
mov
or
scas
sbb
imul
add
movaps
and
repz
enter
push
shrb
loop
mov
mov
mov
ror
jno
mov
dec
mov
loope
iret
out
push
loop
adc
lret
cmp
cmpsl
outsb
fsubs
push
outsl
xchg
dec
mov
repz
stc
push
adc
pop
jno
sar
jge
mov
inc
repnz
push
filds
mov
and
mov
inc
cmpsl
inc
sub
fld
mov
xor
xor
push
pop
jle
js
jne
adc
xchg
sub
push
lret
in
mov
bound
lcall
lcall
pop
ljmp
loop
out
dec
je
xchg
fs
jmp
xchg
dec
mov
shlb
insb
popa
add
out
pop
mov
fsubp
test
sub
hlt
lea
or
jg
jge
lock
xchg
mov
addr16
fdivrs
xor
mov
mov
inc
inc
cmp
enter
mov
and
push
pop
pop
leave
jbe
in
mov
xchg
imul
xchg
cmp
adc
cli
sahf
es
mov
mov
or
xchg
push
fwait
adc
and
fwait
jecxz
sub
movsl
push
adc
leave
repz
test
enter
mov
dec
adc
fists
rcll
mov
icebp
sbb
mov
shll
iret
out
ljmp
lret
sbb
out
cmp
push
jbe
sbb
dec
shlb
jo
movsb
jmp
mov
mov
adc
loop
xor
dec
fs
movsb
push
add
xor
lds
push
mov
repz
ret
push
out
loopne
ljmp
adc
idivl
and
xchg
shr
jle
jp
xor
icebp
jns
inc
aam
imul
icebp
push
jg
in
sub
push
ja
and
sahf
idivl
inc
mov
stc
xchg
ret
test
sub
loopne
mov
adc
adc
out
xchg
and
sub
pushf
rcr
and
push
xchg
stos
filds
rorb
or
adc
sub
jecxz
adc
mov
add
add
pushw
leave
xchg
xchg
cmc
inc
add
xchg
scas
sbb
jnp
divl
fsub
icebp
lods
or
shrb
sar
jl
sahf
push
inc
mov
mov
pop
nop
mov
call
inc
sbb
hlt
cmp
jne
mov
cs
outsb
cmc
or
mov
cmp
cwtl
mov
jnp
push
jae
inc
mov
add
push
xchg
dec
lds
arpl
mov
add
sahf
test
loopne
mov
rclb
sub
push
inc
loop
xchg
dec
pop
sub
fmull
inc
addb
fisubs
fdivrs
out
sarb
jnp
outsl
mov
xchg
mov
lcall
xchg
pop
push
das
insl
or
int
lahf
aas
into
pop
sbb
lahf
test
idivl
xchg
cmp
and
lcall
cmp
jnp
cs
mov
fs
inc
fildl
rcrl
sub
sub
jnp
sub
addb
dec
insb
setbe
in
pop
mov
or
loopne
adc
mov
fldt
aam
lock
popa
insl
fadd
adcb
mov
sub
inc
add
rorb
mov
lods
mov
outsl
xchg
rcr
dec
mov
test
inc
pop
adc
mov
jmp
ss
test
sub
cs
sub
and
mov
push
jg
add
add
cmp
orb
sbb
pop
fistl
xlat
shll
adc
inc
sti
pushf
mov
jl
jle
in
cmp
mov
data16
cli
iret
pusha
xchg
sbb
and
fidivl
shrb
test
popa
and
adc
aaa
stos
push
movups
mov
imul
movsb
mov
lcall
jnp
add
dec
jbe
repz
ljmp
xor
movsb
adc
mov
xchg
pop
call
push
je
ret
jb
pop
and
mov
ja
mov
pop
push
inc
popf
nop
sbb
mov
loopne
add
xor
addr16
stos
mov
or
pop
test
sub
xor
iret
call
push
jae
and
mov
loop
xchg
pop
add
push
pop
xor
dec
sarl
jl
mov
add
clc
pop
je
mov
sti
adc
and
lock
jle
hlt
xor
aam
sarl
mov
inc
mov
mov
mov
jno
pop
movsb
leave
iret
push
sbb
loope
movsb
mov
add
xor
test
cwtl
shrl
inc
dec
sbb
lcall
mov
cmp
and
mov
jl
sahf
sbb
in
sbb
jle
cmp
ret
add
cmp
testl
imul
sbb
lock
leave
fstl
test
dec
fcoml
dec
jae
mov
pop
clc
inc
add
and
nop
ja
leave
in
mov
and
xchg
imul
lret
mov
fisttpl
les
lods
dec
pop
je
leave
mov
adc
insb
mov
cmpsb
mov
cmp
pop
in
pop
rcrl
leave
jnp
mov
std
pop
jl
and
sarb
mov
push
inc
mov
lret
ljmp
das
xlat
mov
les
loopne
add
fs
cmc
call
popf
add
add
fwait
loopne
xor
jne
inc
inc
push
sub
mov
fcomp
lods
icebp
fcoms
and
xchg
mov
out
js
cmpsb
movsl
inc
add
sub
sub
push
inc
push
nop
ja
adc
or
dec
lds
mov
dec
mov
aas
mov
popa
mov
sub
pop
adc
and
cmpsb
mov
loope
dec
adc
adc
xor
push
xorl
into
mov
cld
inc
mov
into
data16
cmp
jge
loope
push
and
fwait
in
in
dec
out
mov
out
je
insl
ror
sub
jno
lahf
movsl
imul
pop
fs
mov
testl
div
inc
cmpl
jb
xchg
add
decb
sbb
sub
jmp
dec
jle
jne
imul
jle
cwtl
or
add
cld
clc
js
dec
outsl
and
in
xlat
mov
xor
and
cld
mov
lcall
jno
inc
jg
gs
and
pop
sub
imul
std
cmc
fadds
inc
ds
xchg
jae
aaa
and
and
push
pop
aas
mov
jae
nop
ret
jp
ret
fsubr
and
xlat
and
bound
subb
je
orb
sbb
xor
lods
sub
scas
ficompl
repz
test
or
dec
pop
int3
xor
pop
mov
xor
push
xchg
sbb
cltd
dec
aas
dec
pop
push
mov
add
xchg
cltd
test
cmp
stos
mov
mov
test
pop
fsts
xchg
stos
int3
faddl
push
fs
jmp
lcall
xchg
lahf
push
add
in
imul
xlat
pop
lret
daa
cmc
add
xlat
das
ss
sarl
in
insb
in
aaa
pop
mov
and
cltd
xor
cld
into
lods
push
dec
in
sti
adc
jb
call
cmp
pop
mov
std
jb
mov
cmp
outsb
mov
push
lods
ret
pushl
inc
xor
xchg
je
dec
jno
stc
push
adc
loopne
shll
xor
push
jns
enter
jl
cld
mov
jnp
dec
rclb
mov
mull
ljmp
in
inc
xor
lcall
xorb
xchg
leave
mov
iret
addr16
push
pusha
and
push
incl
pop
int
out
jg
inc
test
sbb
sub
mov
js
pop
outsb
ret
cmp
insb
repnz
pushf
outsb
mov
popa
cltd
loop
insb
lods
sub
dec
lea
dec
mov
xor
add
adc
scas
enter
jmp
sbb
ret
jb
mov
loop
push
mov
lods
jne
rcrb
xor
add
xor
insl
push
int
sbb
sbb
cld
inc
js
es
ja
aas
jecxz
rorl
sub
icebp
inc
pop
dec
xchg
mov
stos
cltd
dec
lcall
ljmp
pop
fmull
repnz
aam
pop
popa
shll
add
out
sbb
mov
stc
arpl
cmp
cltd
inc
cmp
xchg
or
arpl
jg
mov
mov
sahf
inc
aas
in
fists
or
lds
or
inc
ds
xchg
jl
mov
sahf
mov
les
adc
or
and
xchg
and
inc
dec
xchg
mov
or
mov
ja
hlt
lods
or
and
mov
nop
inc
lods
inc
adc
cmpsb
inc
ds
mov
loop
cmpsb
inc
sub
cmp
sbb
ret
out
push
jp
dec
pop
js
push
lahf
int3
xorl
jbe
lock
mov
test
sub
push
inc
cwtl
stos
pop
scas
and
adc
lcall
mov
adc
xchg
fstp
mov
jmp
popf
cltd
pop
scas
or
js
leave
dec
or
jecxz
adc
rol
jp
dec
icebp
fwait
mov
out
cmp
gs
jb
outsl
push
xor
inc
sbb
fadds
out
shr
xchg
in
push
adc
adc
and
lods
fnstsw
in
call
dec
cwtl
out
mov
and
stos
pop
mov
je
and
mov
clc
mov
cs
push
fwait
sbb
lret
pop
hlt
cmpsb
je
adc
ret
push
pop
call
and
sbb
pop
add
xcrypt-ctr
cmpsl
fstpt
adc
mov
dec
cld
pushf
ljmp
mov
loop
in
pop
mov
push
notl
mov
in
jb
push
add
adc
pushf
inc
xor
dec
leave
push
push
std
dec
adc
or
cltd
sbb
je
xor
push
add
fsub
dec
test
and
mov
punpckhbw
mov
push
mov
jmp
push
mov
jp
loop
je
fwait
leave
pop
dec
repz
jp
add
movsl
push
inc
pushf
mov
popa
sub
mov
aas
pop
mov
mov
and
pop
xchg
sbb
mov
daa
outsb
or
cmpsb
test
negb
into
aaa
dec
fadds
out
fwait
ss
out
ds
xchg
mov
jae
pop
out
dec
aas
or
jbe
mov
xchg
cmp
cmp
pop
xchg
out
push
sbb
and
loopne
cmp
cvttps2pi
fmuls
adc
push
add
jae
clc
cmpsl
lret
jecxz
outsb
mov
adc
adc
adc
xchg
addr16
inc
mov
xchg
cmp
leave
xchg
inc
sub
fcmove
imul
push
xor
sub
lea
call
xchg
negb
and
dec
adc
sbb
cwtl
cwtl
xor
dec
sti
stos
add
sub
int
ficoms
aaa
mov
xor
push
pushf
stos
orl
orl
stos
mov
outsl
push
and
out
adc
and
jns
mov
sub
sbb
stc
fs
inc
les
xor
xchg
jne
push
fists
push
imul
adc
mov
adcl
xchg
insb
push
fcom
rcrl
mov
es
mov
test
fmuls
cld
fnstcw
adc
pop
jae
push
movsl
push
add
lret
xor
push
push
test
sbb
aad
test
nop
xor
mov
cwtl
int3
iret
das
mov
adc
lret
push
in
in
pop
aad
movsb
dec
jae
mov
rcrb
insl
inc
cmp
sub
sub
rcl
movsb
pop
dec
add
jl
rol
fistl
stc
scas
aam
movsl
test
push
xchg
cmp
adcl
xor
sbb
dec
mov
mov
sti
push
mov
inc
pop
out
pop
sbb
mov
cmc
mov
cld
xlat
aad
sub
jmp
cmpsl
push
and
inc
cmp
mov
imul
or
mov
sub
xchg
jae
fsubrl
inc
je
xor
sub
push
add
andl
outsb
mov
fcmovbe
sub
cmp
xchg
out
insb
jecxz
jmp
daa
fists
mov
mov
int3
mov
bound
mov
aaa
icebp
xchg
pop
mov
je
mov
xor
mov
mov
aas
std
and
pop
or
and
sub
stos
sub
mov
sbb
push
sub
lahf
push
mov
and
repz
cmp
imul
cmp
mov
mov
xchg
sarb
mov
mov
ljmp
sbb
dec
mov
fidivs
negb
shrb
and
or
xor
and
call
add
inc
mov
into
or
mov
pop
mov
ss
sti
aad
data16
push
and
nop
bound
cmp
or
dec
mov
and
dec
dec
sub
arpl
int
jne
sub
sbb
mov
fists
fwait
xchg
jmp
stos
inc
adc
or
scas
dec
lods
cmpsb
add
lea
sbb
jmp
xor
xlat
out
xchg
sub
and
rcll
movsb
lahf
popa
pusha
lcall
sbb
pushf
cmp
dec
and
add
repnz
cmp
gs
push
outsl
pop
cmp
popa
test
fldl
cld
push
push
sbb
pop
ljmp
sbb
xor
dec
jge
std
mov
dec
inc
mov
repz
dec
xorl
mov
jb
rcll
je
mov
pusha
out
xchg
loop
push
cwtl
pusha
and
mov
xlat
mov
into
jbe
sub
insl
jb
cli
cmpsb
push
cmpsb
outsl
aam
insl
jae
mov
sti
xor
xor
js
cmp
div
test
cld
sti
fdivrl
repz
pop
and
sbbl
inc
loope
xor
push
je
mov
mov
insb
aad
imul
or
and
out
movups
aam
add
and
push
and
mov
lret
in
dec
cltd
fnstenv
call
add
inc
add
test
nop
sbb
int
lcall
inc
fs
test
rep
insl
xlat
xchg
lret
and
jb
popl
insb
cmp
pop
das
sbb
adc
xchg
add
sub
fiaddl
adc
or
adc
jae
inc
xor
dec
add
xor
clc
movsb
push
popf
pushf
xchg
cli
pop
mov
ljmp
adc
cmp
cmp
into
sbb
test
mov
and
add
jge
in
int3
xor
add
out
mov
add
ss
cmp
or
ljmp
shll
mov
push
mov
decl
adc
ret
ja
cli
dec
cld
add
cmpsb
out
hlt
imul
cmc
enter
mov
sti
and
stos
mov
pop
daa
dec
xlat
pushl
popa
inc
mov
sbb
fisttpll
mov
repz
inc
xchg
cmp
repnz
xor
add
sub
xchg
mov
push
cld
dec
push
mov
popa
insb
dec
cmc
adc
sbb
or
jecxz
pop
mov
std
cmp
andb
and
sub
mov
jle
movsb
insb
mov
test
xchg
loopne
xor
cmpsb
nop
sahf
andb
cmp
loopne
and
or
push
xor
push
lods
leave
or
stc
push
scas
movsb
jge
movsl
mov
fdivrl
or
jmp
pop
or
nop
rorl
xor
push
sahf
mov
ret
in
push
dec
push
or
pop
mov
cmp
jg
ret
xchg
sub
int3
pop
fisubrl
and
jle
push
test
orl
jno
test
and
sti
cmpsb
xor
in
inc
movsb
or
aad
subb
stc
xorl
mov
mov
mov
test
jo
inc
icebp
popa
cmp
xchg
scas
cmp
rol
ret
ja
repnz
movsb
addr16
sbb
ss
push
jmp
das
cmp
mov
push
or
add
push
ja
cwtl
insl
xor
aad
pushf
into
jb
jns
push
dec
imul
pop
in
mov
adc
ret
xchg
in
test
out
or
mov
insb
popa
icebp
arpl
repnz
jne
push
jae
lock
push
inc
mov
sarl
sbbl
jo
std
sbb
in
sub
dec
in
mull
lods
call
push
push
mov
and
mov
dec
push
insb
pop
inc
mov
mov
ljmp
xlat
inc
test
pop
shrb
xchg
lock
jl
movsb
lods
jbe
jmp
daa
ret
nop
cmc
inc
popl
or
mov
mov
shrl
bnd
leave
dec
mov
push
push
add
daa
cwtl
test
test
mov
test
icebp
xchg
imul
repz
pushf
movsl
insb
push
mov
or
hlt
scas
fs
out
dec
sbb
inc
mov
sbb
mov
lds
movsl
jo
dec
jb
fmul
sub
cld
push
xor
jg
imul
ret
dec
push
xor
mov
adc
cli
aad
inc
cmp
dec
sub
inc
notb
lock
loop
ss
xchg
pop
jecxz
mov
inc
lcall
shrb
or
xor
dec
push
push
add
repnz
mov
xchg
jo
out
arpl
pushf
mov
cld
xchg
mov
je
cwtl
mov
sbb
lods
jmp
out
nop
ja
xchg
test
and
scas
jb
ret
aam
lea
neg
ficompl
add
ja
div
xchg
pop
loope
movb
inc
fucomip
mov
sbb
sub
cmp
call
in
mov
dec
add
cmp
jno
ret
je
xchg
lods
jle
adc
mov
add
cmpl
sub
adc
push
pop
test
xchg
ljmp
sbb
lods
data16
stos
movsb
jns
nop
hlt
push
mov
shll
or
loope
leave
inc
adc
fiaddl
or
std
mov
dec
in
stos
fiaddl
push
dec
xor
sub
and
orl
mov
pop
fdiv
dec
loope
cmp
cmp
adc
pop
jp
lock
cli
icebp
xor
lret
and
add
cmp
pop
push
cmpsl
cmp
int3
and
roll
and
adc
insl
push
xchg
push
push
mov
push
test
dec
sub
xchg
aad
clc
mov
cs
inc
jb
adc
mov
sbb
pushf
mov
rcl
lea
std
lcall
xor
test
mov
push
mov
ffree
test
js
pop
data16
push
inc
aas
dec
inc
add
or
lods
dec
bound
sbb
cmpsb
sbb
pop
adc
push
push
xchg
and
ret
imul
push
xchg
xchg
push
nop
cmp
push
cs
inc
jl
shlb
jne
inc
out
adc
rcr
lock
pop
sub
cmc
pop
lcall
not
shll
shl
xchg
mov
or
das
mov
fdivrl
jp
xor
rorl
jbe
adc
and
ss
sbbb
xor
into
cmp
call
dec
cmp
loopne
stos
subl
adc
inc
xorb
and
dec
loopne
pop
out
lret
bound
dec
dec
shrb
iret
push
adc
inc
cmp
add
xchg
jge
aam
lea
out
inc
sbb
adc
pusha
ljmp
inc
repnz
imul
mov
jl
ret
fst
jb
fcoms
mov
pop
mov
push
lahf
stos
imul
xor
xor
arpl
mov
jbe
cmc
cmp
push
push
or
jnp
mov
and
add
in
test
xchg
jne
or
pop
or
jle
push
and
loopne
jecxz
jno
cmp
xchg
ljmp
cmp
inc
inc
and
notb
or
or
push
mov
xchg
cmpsb
xchg
jbe
mov
inc
insl
fcoml
pop
xlat
cltd
jp
pop
sar
les
mov
xchg
test
pop
ret
and
push
cmp
dec
inc
pop
dec
flds
repz
fidivrs
jmp
mov
dec
adc
in
sbb
cmpsl
rolb
jl
push
dec
arpl
roll
cmp
lcall
lock
aaa
stc
cmpsb
or
pop
ljmp
sub
fsubs
inc
popa
mov
cmc
and
lret
lret
dec
push
push
into
fnstenv
pop
jl
xor
js
out
mov
sar
inc
and
lods
lahf
jae
push
pusha
mov
pop
inc
mov
dec
mov
lock
jg
mov
cmp
inc
mov
hlt
jmp
mov
loope
sbbb
jns
or
lds
fmuls
movsb
or
ffree
out
sarl
test
mov
mov
xor
outsb
outsl
popa
cltd
xchg
push
sub
dec
cli
jmp
dec
js
cmp
incb
shr
outsl
jnp
xchg
sbb
call
hlt
lcall
rcrl
jae
call
mov
push
popa
dec
or
pop
je
push
sub
out
aas
jae
in
sub
push
or
outsl
sub
call
or
loope
lret
lcall
je
and
aas
pop
mov
call
cmp
sarl
add
cmp
mov
pop
insb
jno
aas
and
xor
xchg
push
movsl
ret
mov
push
mov
cld
xor
leave
jbe
scas
or
sub
out
adc
or
xchg
xor
stos
in
push
data16
imul
xlat
mov
jge
xchg
xor
add
insl
lcall
sub
fbstp
lahf
dec
test
repz
and
jp
repnz
add
mov
nop
ljmp
rcrl
jp
mov
sti
and
shrb
mov
xchg
xor
sbb
jns
xchg
add
mov
pop
mov
mov
mov
mov
cli
outsl
ret
stos
iret
xchg
movsl
dec
arpl
pop
xchg
sub
pusha
fwait
bound
loop
adc
addr16
adc
jge
inc
and
push
jns
test
fbstp
sbb
mov
push
ret
dec
inc
ret
add
jmp
jae
inc
imul
adc
lock
sar
pop
fidivrl
shll
xchg
inc
aaa
out
mov
cmpsb
mov
adcb
insl
jl
xchg
sub
and
shll
mov
dec
or
test
jge
rcr
jp
sub
pop
mov
cmpsb
add
mov
shl
sub
es
jnp
call
fnstcw
das
lods
test
cmp
ret
nop
xor
std
dec
aam
mov
sub
or
add
shl
stos
hlt
cli
dec
mov
loop
sahf
sbb
scas
lods
stc
in
mov
pop
clc
jne
jns
mov
xor
cmp
fimull
adc
test
negb
addl
mov
int3
pop
jmp
leave
push
leave
test
xchg
and
popa
cmpsb
in
scas
out
mov
or
pop
pop
jmp
lret
push
sahf
adc
popa
xor
jp
imul
sarl
dec
xor
lret
sahf
xchg
jmp
add
lods
cs
dec
mov
insl
xchg
jno
dec
push
jns
jle
mov
xor
cmp
ficoml
push
movsb
shll
sbb
pop
sbb
negl
and
test
leave
xor
push
cmp
mov
aas
test
add
xchg
push
rorl
dec
cmc
sahf
aaa
push
pop
mov
sbb
in
cmpsb
dec
add
sub
adc
jo
adc
hlt
xlat
aas
cmpsb
js
xor
stos
ja
pop
and
test
imul
int3
mov
xchg
jge
in
cmpsb
pop
push
daa
push
mov
ja
test
lret
repz
mov
mov
inc
dec
push
pop
mov
dec
pop
pause
xchg
scas
int3
arpl
jmp
xchg
pop
addb
jecxz
test
cmpl
cltd
sti
mov
int
cmc
insb
sbb
into
jecxz
arpl
dec
outsl
or
add
mov
outsl
movsl
mov
and
inc
push
and
loopne
insl
outsb
push
out
inc
sbb
add
movsb
lock
test
in
divl
pop
addr16
xchg
roll
pop
xor
mov
shrb
pushf
inc
mov
jmp
test
shl
cs
cwtl
jg
fists
cmc
xor
pop
jl
fwait
adc
in
movsl
movsb
sbb
xor
sbb
mov
outsl
pop
jl
bound
dec
sub
inc
outsl
sbb
stos
lods
enter
mov
inc
data16
fdivs
int
aas
mov
mov
scas
ja
aas
pusha
loop
and
dec
in
mov
fbld
movsl
pop
out
jle
std
rcrl
push
ficompl
mov
test
popa
negb
mov
mov
or
and
push
jnp
push
adc
sbb
stc
arpl
fistl
jb
in
rcll
mov
sahf
sbb
inc
xchg
dec
fnsave
sub
jnp
aam
enter
aas
xlat
out
in
cld
push
mov
xlat
call
inc
cmpsb
pop
sbb
adc
or
fsubrs
mov
mov
loope
lahf
fistpl
sbb
in
movsb
fldenv
adc
xor
daa
add
inc
hlt
shlb
int3
xor
mov
daa
insb
enter
sbb
xlat
rclb
adc
mov
adc
mov
lret
aaa
sub
testl
loop
push
mov
loopne
test
pop
adc
jb
mov
push
aas
and
xchg
cmp
out
inc
repnz
aas
jno
xchg
fstpl
dec
cld
out
xchg
add
sti
mov
cmp
add
mov
inc
loop
imul
push
jbe
pop
into
loop
and
insl
mov
imul
fdivs
push
sbb
sbb
cmp
shrl
push
add
cmpsl
out
adcl
mov
mov
in
int3
test
roll
or
les
stos
adcb
sbbb
push
jne
sbb
cli
sub
mov
adc
xchg
stc
push
insb
inc
test
mov
sbb
ds
lods
cmp
lahf
repz
add
and
fsubp
stos
sbbb
repz
pop
dec
into
ret
push
mov
imul
mov
repnz
dec
aad
insl
lods
shl
push
dec
and
mov
cmp
mov
sbb
inc
dec
data16
sub
xor
cmp
gs
xchg
jno
xchg
jg
ds
add
sbb
lea
loopne
or
hlt
inc
fisubs
and
cmp
mov
mov
xchg
rclb
ffree
loop
lret
mov
sub
or
movsl
push
jg
add
rcll
lods
popa
stc
fnstsw
adc
sub
cld
push
cwtl
ss
jp
mov
jge
in
dec
push
mov
fildl
jg
leave
pop
popa
ja
xchg
in
aad
pcmpgtd
jnp
test
fs
outsb
sub
xor
test
iret
aam
mov
or
gs
xchg
and
test
psrad
push
cmp
iret
sti
push
ficoms
insl
cmp
test
or
lock
lds
or
das
xchg
adc
repz
push
jne
mov
dec
aam
sbbl
cltd
cltd
jno
add
mov
sub
push
push
ljmp
push
push
mov
cmp
or
loop
push
insl
das
jbe
movsb
dec
and
cmpsb
xor
mov
and
pop
push
roll
rcr
call
xchg
frstor
in
stos
icebp
mov
outsb
stc
aam
movb
in
mov
mov
cmp
sahf
push
int
xchg
inc
mov
gs
int
push
sbb
pop
std
and
push
xchg
cmp
addr16
lcall
scas
push
ss
je
rcrl
ja
mov
testb
pop
adcb
sbb
and
xchg
sub
rcrl
test
ret
ljmp
lock
xchg
cltd
loop
ljmp
lds
aad
stc
push
test
mov
jp
std
cltd
adc
and
fidivrs
mov
and
or
cltd
inc
cmp
fs
push
ds
cmpsl
push
mov
mov
cmpsl
fdivs
in
jle
insl
jg
loope
outsb
add
aad
push
fldt
xchg
hlt
cmp
inc
stos
mov
ficomps
sbb
push
add
ffreep
dec
jl,pt
ljmp
jecxz
adc
sbb
push
bsf
daa
test
jl
or
cmp
aam
xor
stos
mov
xor
cmpsl
icebp
jbe
xchg
lahf
xor
and
push
jp
aam
ret
imul
add
insb
jnp
inc
adc
into
stos
inc
push
int3
ss
out
jmp
pop
sbb
fidivs
iret
lds
xchg
int3
mov
fnstenv
cmpsb
mov
pushf
cmp
out
mov
and
insl
xchg
sub
clts
gs
pop
pop
popa
pushf
dec
push
inc
sub
mov
mov
jg
jno
jno
cmpsl
dec
movsl
add
xlat
sbb
push
ds
mov
jns
add
mov
pop
movsb
in
js
cmp
xchg
push
sti
sub
in
arpl
mov
xor
push
addl
les
out
nop
mov
cmp
sti
cmpb
ret
in
mov
xor
int
scas
std
sub
jmp
push
sub
test
add
adc
dec
inc
frstor
sbb
fprem
add
cmp
xchg
ficomps
sbb
aaa
push
fdivl
insb
pop
jmp
lea
mov
mov
mov
shlb
sub
je
ret
sbb
mov
movb
jno
dec
mov
enter
fdivrl
sti
dec
aaa
and
xchg
mov
cwtl
outsb
ljmp
dec
dec
add
pop
std
xchg
mov
sbb
add
fnsave
fistl
mov
sbb
fsubl
lahf
pop
push
pop
mov
or
shrb
jge
movb
shrb
filds
testl
fidivrl
mov
ret
xor
in
sub
xchg
lcall
or
push
mov
mov
stc
out
cld
nop
mov
fs
mov
sarw
pop
cs
adc
xor
dec
xor
es
add
fimull
add
xchg
pop
mov
adc
mov
adcl
test
cld
call
push
fisttpll
pushf
cmp
jno
pop
in
clc
sbb
pop
lea
jl
jge
subl
cmp
mov
icebp
je
sbb
mov
fsubl
mov
stos
xchg
scas
adc
push
sub
hlt
movsl
jb
cmp
shlb
aam
xchg
mov
xchg
push
adc
aad
sbb
adc
je
into
add
mov
repz
rclb
mov
jg
dec
cmpsb
fs
enter
cltd
push
adc
cmp
fcompl
scas
pop
je
add
adc
fidivrs
push
mov
xorb
or
mov
pusha
in
mov
add
pop
sbb
test
jle
nop
xchg
std
ss
and
xor
or
fbstp
jo
and
adc
adc
mov
test
ja
mov
js
mov
inc
pop
scas
push
inc
pop
sti
mov
out
imul
ja
pop
mov
dec
orl
in
cli
push
scas
dec
ds
sbb
pop
mov
cmp
mov
test
loopne
or
lock
subl
pop
or
stos
add
scas
lahf
test
in
test
les
ret
or
arpl
popa
mov
xchg
mulb
and
orb
loope
xor
xor
mov
scas
out
pop
mov
dec
mov
stc
pushf
stos
add
adc
stos
cmpsl
clc
mov
xchg
into
add
int3
out
pop
sbb
iret
flds
mov
aam
mov
pusha
ffreep
rorl
jno
lock
pop
sub
jae
repz
lret
mov
into
rol
rclb
cmc
jns
push
push
pop
xor
lods
and
push
cltd
or
sahf
mov
divb
ret
clc
shrl
mov
pushf
fsubrs
mov
xlat
inc
arpl
sbb
cmp
jne
stc
addr16
inc
adcb
and
add
sub
and
adc
jns
enter
fs
jg
add
mov
enter
sahf
dec
push
ds
mov
xlat
xor
in
mov
and
adc
data16
cmpsb
int3
jle
xor
shrb
dec
and
in
mov
cmp
mov
in
loope
mov
dec
dec
nop
xchg
jnp
mov
loop
inc
cli
push
mov
hlt
inc
fmull
pop
out
lea
call
cmp
add
out
test
dec
sbb
jge
test
enter
test
test
push
pop
dec
roll
pop
add
int3
inc
mov
mov
cmp
leave
fildl
jle
jp
jb,pn
jmp
sub
mov
cmp
out
addb
adc
sbb
jge
cmpsb
cmp
pushf
jno
fwait
aad
xchg
arpl
mov
stos
xchg
das
movsb
stc
imul
into
mov
std
sub
mov
in
fs
xchg
and
scas
adc
jg
or
ds
mov
mov
lahf
outsl
loope
dec
pop
dec
cmp
push
lahf
push
cmp
mov
xor
pushf
cwtl
pop
addl
ja
into
in
addb
xchg
stos
popf
xchg
mov
stos
out
flds
jge
scas
shll
es
stc
and
xlat
addb
test
mov
or
sub
mov
and
push
mov
or
lcall
jmp
xor
sahf
aam
je
xor
add
mov
xlat
jge
push
shr
push
cmp
sarl
cmp
sbb
push
adc
cmc
xor
cltd
popa
pop
cmpsb
je
push
insb
dec
xchg
sbb
inc
insb
cltd
push
addr16
imul
and
cmp
icebp
jge
fbld
bound
xor
pop
dec
mov
enter
pop
andl
inc
or
in
imul
outsb
gs
pop
inc
call
aad
out
sbb
add
pusha
bound
jae
adc
jp
cmpsb
add
fwait
jbe
xor
adc
iret
cld
mov
mov
cmova
sub
mov
push
loope
mov
and
adc
aam
and
xor
cwtl
lods
hlt
mov
data16
mov
jne
or
xchg
dec
out
fisttpll
jno
xor
mov
imul
in
loopne
or
lahf
call
push
mov
mov
mov
pusha
adc
cmpsl
popa
cmc
rclb
push
push
adc
popa
xor
pop
xchg
dec
mov
jno
scas
jb
xchg
push
inc
dec
mov
sti
addr16
insl
stos
and
inc
ror
das
adc
sbb
enter
sub
or
ret
mov
mov
jmp
sbb
lea
jp
inc
in
das
pop
idivl
arpl
mov
mov
sbb
pop
fiadds
lods
sub
lds
dec
dec
xor
shr
hlt
aaa
iret
clc
mov
fdivrl
cmpsl
ljmp
jmp
outsb
or
stos
repz
dec
sub
cmp
mov
outsb
dec
cld
or
push
sti
insl
loop
xchg
or
nop
dec
rorb
push
or
push
mov
sbb
dec
adc
jae
mov
adc
dec
lret
pusha
xchg
js
xor
loop
imulw
aad
xor
imul
outsb
repz
adc
aas
js
and
inc
lret
or
std
enter
inc
lret
sub
cs
pop
dec
lcall
ljmp
adc
outsb
cmpsb
and
daa
es
test
dec
notl
mov
xor
lret
cmp
lock
mov
push
push
call
push
dec
mov
and
int
ficoms
jge
lahf
sbb
ret
cmc
shll
sbb
mov
std
movsl
nop
in
mov
jno
or
int3
out
gs
jo
cld
sar
repnz
imul
out
xchg
jmp
push
or
cltd
sbb
jae
mov
cmpsb
push
add
xor
mov
dec
mov
lds
mov
adc
adc
pop
lret
dec
fidivl
dec
test
pushl
mov
cs
xor
nop
xchg
pushf
cld
or
push
inc
xchg
sbb
stc
daa
lcall
insl
notl
insl
mov
fdivrl
mov
aam
pop
sti
adc
shlb
adc
orb
int3
cli
ljmp
adc
cmp
ret
testl
outsb
mov
cmp
aam
sub
aaa
dec
stos
jbe
and
clc
cmpsb
scas
jg
hlt
loopne
xchg
arpl
sub
cltd
dec
cmpsl
popf
rcll
inc
inc
sub
arpl
xchg
lds
push
inc
movsb
dec
fisubrs
insl
icebp
push
in
sbb
sbb
jg
cli
mov
inc
scas
clc
mov
xchg
push
adc
sub
ja
sbb
add
push
test
imul
lock
fcmovne
out
dec
scas
popa
pop
xor
mov
call
aad
test
or
stos
cmp
or
cmp
xchg
xor
pop
shll
stos
jbe
inc
out
add
cmp
stos
scas
les
inc
icebp
outsb
lret
jnp
ds
xor
loopne
dec
lahf
dec
pop
sub
pop
dec
mov
lock
scas
loop
aaa
cltd
pop
adc
xchg
sub
dec
push
mov
popf
jmp
pop
mov
xor
jb
inc
fucomi
daa
jmp
xchg
in
sub
cwtl
mov
adc
mov
dec
call
xor
shlb
fildll
xchg
loope
xchg
sub
mov
pop
fistps
dec
das
jg
addr16
pop
loop
out
fmull
in
lcall
fwait
jmp
jne
in
lret
imul
arpl
push
loop
mov
mov
rolb
outsb
or
addl
jl
in
cmpl
push
sbb
popf
daa
mov
sbb
cld
cmp
cmp
gs
shlb
or
inc
imul
jl
das
out
add
cmp
lcall
test
jae
pop
cltd
pop
push
arpl
mov
int3
pop
xor
dec
out
mov
ficoml
popa
aad
jg
fstpt
jmp
jbe
fstps
mov
or
inc
clc
add
repz
mov
sub
ficomps
ret
lods
inc
sahf
sbb
xchg
mov
in
bound
xchg
out
adc
dec
or
mov
sbb
xor
iret
in
arpl
out
add
movsl
pusha
pop
scas
fsubs
cmp
mov
adc
scas
lret
in
nop
xor
adc
ret
pop
mov
mov
jmp
testl
mov
dec
nop
xor
or
xlat
lcall
or
jle
dec
stos
daa
lods
hlt
mov
mov
jnp
insl
inc
pop
lahf
push
and
cmp
mov
and
cltd
jb
adc
testl
sbb
ss
xchg
cmc
pop
cwtl
fmuls
pop
sub
daa
cmp
ss
dec
xchg
mov
int3
fcomps
mov
dec
jmp
push
enter
dec
notb
adc
subb
and
mov
push
adc
and
aam
jns
es
dec
cli
push
add
dec
rcll
pushf
test
outsb
sbb
dec
incb
xchg
test
das
cmp
pusha
test
push
fdivrl
fwait
jecxz
jae
inc
vmread
mov
mov
hlt
mov
fmuls
inc
cwtl
jp
mov
or
stc
inc
jne
rorl
jb
fsubl
fdivl
cmp
mov
jl
fcompl
mov
dec
shr
mov
ja
bound
xchg
cmp
jo
adc
daa
mov
ds
testb
xchg
xchg
and
test
outsb
mov
jb
leave
addb
xor
xchg
inc
cmp
xchg
mov
xchg
cltd
lods
or
or
loopne
cmp
inc
icebp
in
repz
call
xor
shll
fidivl
push
xchg
fs
lods
mov
xchg
sub
add
adc
dec
xchg
mov
mov
dec
pop
or
insl
adc
sahf
xchg
and
inc
or
and
or
push
pop
add
push
mov
repz
lret
add
mov
rcll
jne
xchg
pop
punpckhdq
pop
mov
sbbl
push
or
push
inc
enter
sarl
jl
mov
cltd
pushf
xor
push
fnstenv
out
or
stos
lea
es
stos
lods
sub
insb
data16
int3
sti
movsl
shl
sbbl
test
pop
pop
pop
xor
inc
mov
faddl
sti
sub
xchg
mov
movsl
pop
loop
scas
lret
scas
bound
pop
out
xchg
xchg
xchg
jle
loop
push
jmp
ja
mov
xchg
push
js
out
rorb
xlat
jg
mov
adc
jmp
adcb
add
xchg
ja
movsl
pop
dec
cld
or
sbb
pop
xlat
repnz
push
mov
add
lds
iret
call
enter
std
outsl
sbb
clc
pop
adc
in
aas
cmp
xchg
test
mov
xor
push
ja
cli
daa
aad
lods
jp
adc
adc
test
rcrl
sahf
movsb
pop
gs
xchg
int
leave
rclb
jl
call
lcall
sub
adc
lods
mov
pop
pop
push
shlb
dec
lods
add
loope
icebp
xor
nop
add
faddl
outsb
out
mov
js
cli
fs
and
inc
cmp
mov
xor
nopl
adc
add
fmulp
cmp
out
jno
icebp
cmpsb
test
xchg
leave
lea
cmp
imul
int
imul
mov
push
insl
and
sbb
sub
daa
inc
adc
cmpsb
mov
fs
out
mov
test
pop
in
cs
lea
xorb
sbb
jns
add
mov
aam
jbe
inc
inc
aam
adc
stos
jns
mov
je
sbb
clc
subl
int
jg
jnp
jb,pn
jo
or
test
ja
outsl
mov
mov
or
sub
iret
addr16
xlat
xlat
popf
and
pusha
cltd
mov
jb
popf
std
jnp
xor
mov
dec
sub
ljmp
mov
pop
sbb
sbb
jl
or
xor
add
stc
les
add
mov
pop
mov
jmp
dec
mov
cltd
mov
lcall
jl
test
mov
test
hlt
cmp
fcompl
mov
jbe
loop
icebp
dec
dec
test
movsb
adc
call
outsl
pop
add
sub
ja
fs
ret
push
jae
fcomps
dec
mov
inc
js
adc
loop
nop
ret
inc
pop
push
or
in
jp
stos
in
adc
das
mov
mov
adc
add
ds
aam
pop
cmpsl
adcl
inc
xchg
jo
mov
xchg
imul
jmp
dec
pop
jmp
loope
mov
fisubl
cmp
js
inc
mov
mov
mov
cmp
or
adc
cmp
mov
sbb
pop
cmp
add
out
repnz
cwtd
pop
pop
sbb
pop
hlt
mov
cmpsl
ljmp
popf
sbb
push
ja
in
and
adc
adc
pop
add
sub
mov
mov
pop
mov
dec
rolb
test
outsl
jo,pn
repz
xor
mov
jecxz
int3
jp
fcomps
mov
hlt
out
je
out
xchg
shr
push
xchg
jg
sahf
or
xchg
int
push
enter
addr16
xchg
or
mov
adc
add
lock
movl
mov
clc
das
insl
aam
nop
out
jp
inc
mov
sbb
int3
int
add
or
fsubr
adc
mov
xor
mov
xchg
and
jg
out
lret
add
xchg
dec
sub
jecxz
scas
stc
add
out
rorb
loopne
pop
sti
sbbl
in
pop
jmp
add
inc
push
ds
and
in
sub
adc
lds
mov
dec
loop
sbb
sbb
pop
xor
ljmp
add
ljmp
or
jl
xchg
lea
push
dec
repz
xor
fdecstp
cwtl
or
pusha
xlat
cmp
mov
cmp
popa
clc
jbe
pop
adc
or
add
sti
stos
shr
mov
push
test
add
or
jo
push
nop
es
dec
xchg
dec
leave
jl
mov
movsl
ret
movsl
sarl
dec
dec
jp
test
jl
inc
ss
sub
or
dec
outsl
adc
dec
jmp
xchg
cmpsb
push
xchg
inc
adc
aaa
call
cmpsl
cmp
pusha
sti
mov
int3
xchg
sbb
call
and
mov
les
addr16
pop
xor
jnp
mov
jge
repz
or
fisttpll
cmp
mov
dec
rolb
fnstenv
push
jae
lcall
inc
cmp
push
sbb
shll
subl
mov
je
and
shlb
rcr
and
repz
sbb
movsl
or
push
pop
xor
inc
mov
popa
adcl
xlat
dec
ljmp
pop
pusha
int3
push
insl
movsl
in
sub
and
jl
add
insb
stos
pusha
clc
mov
push
add
push
push
xor
and
out
mov
mov
rorl
dec
or
rcll
sbb
cmp
fisubrs
dec
int
in
mov
popf
push
push
clc
cltd
test
mov
sub
push
mov
add
add
icebp
int
lcall
sub
mov
andl
fstpt
mov
lret
movsb
cli
fnstenv
enter
enter
mul
aas
jecxz
push
mov
lods
add
sbb
cwtl
test
add
fiaddl
push
aas
xor
shll
adc
daa
shl
xchg
rcrl
xor
pop
push
jp
xchg
add
xor
cs
enter
xchg
pop
adcl
stos
adc
cmp
jle
xchg
es
nop
int
subl
out
je
or
dec
imul
inc
leave
cwtl
add
xor
insb
push
xchg
jb
inc
mov
je
xor
aaa
mov
push
scas
mov
and
xchg
xlat
sub
dec
jno
add
cmpsl
sbb
jne
cmp
into
aaa
mov
mov
add
pop
add
cmc
lds
xchg
adc
in
ds
inc
and
mov
roll
push
movsl
loopne
push
andl
inc
loope
mov
popa
imul
xchg
adc
outsl
js
xor
mov
aaa
scas
test
dec
js
lods
lret
and
les
fsubr
test
push
mov
add
out
xchg
int3
daa
and
out
add
xorl
mov
dec
push
mov
std
inc
push
pop
dec
or
lret
pop
in
fdivl
je
sbb
pop
push
add
xchg
je
mov
cmp
push
outsl
xchg
scas
and
out
rorl
cli
hlt
cmpb
jb
roll
sbb
add
iret
pop
and
mov
shll
js
jmp
xorl
cmp
out
pop
pop
xor
add
xchg
mov
jmp
out
inc
mov
fbld
or
sbb
sbb
pop
dec
sbb
mov
in
add
adcb
add
hlt
jg
mov
xor
fldt
mov
mov
jo
mov
scas
fdiv
jle
lds
mov
inc
repnz
movsl
hlt
adc
pop
fwait
xchg
mov
inc
xor
cmp
in
stc
lds
pop
cs
mov
loope
pop
aad
lcall
shll
out
arpl
leave
or
cmc
shrl
jl
loope
dec
int3
fstp
rcrb
sbb
push
icebp
pop
dec
std
js
push
arpl
sbb
lods
dec
js
sbb
cwtl
test
fwait
mov
xchg
scas
repnz
lahf
aas
loope
sti
int
addr16
repz
arpl
mov
mov
adc
popa
lret
mov
test
imul
jno
adc
sbb
mov
stc
loop
pop
mov
lret
leave
notl
sub
loopne
ja
inc
cmp
fcom
push
pop
or
jge
xor
into
sarl
xchg
cmp
aas
mov
cmc
sahf
push
cli
jae
sbbl
cmp
and
test
mov
pop
pop
ficompl
aaa
push
cmp
mov
pop
sbb
xor
in
pop
mov
outsl
xchg
adc
out
adc
gs
fwait
bnd
cwtl
andl
fisttps
lea
add
sub
lea
ret
xchg
mov
cltd
sbb
fcom
push
jno
pop
push
stc
ficoms
and
loop
icebp
xchg
inc
adc
sbb
js
pop
int3
mov
sub
rcrl
xchg
cmc
les
les
fdivs
hlt
mov
jmp
popf
add
mov
xchg
popl
fxch
dec
rorb
xchg
mov
xor
xor
fdivs
jae
fnstsw
push
cmc
cmp
and
stos
lea
xchg
popf
movsl
add
mov
sub
cmp
cmp
push
adc
sahf
rcr
hlt
adc
ret
jl
out
iret
add
fidivrl
dec
mov
dec
rolb
jb
hlt
stos
mov
rorl
and
rcrb
sbb
cltd
mov
and
lods
push
add
orl
sub
and
mov
xchg
out
daa
ja
sub
scas
or
std
loope
lret
std
cmp
ja
dec
sbb
scas
cmp
out
call
mov
add
pop
and
mov
decl
dec
cmp
out
pop
mov
rcrl
mov
loopne
filds
xor
mov
inc
data16
js
test
xchg
sarl
dec
sbb
ffreep
push
shlb
mov
sbb
shlb
xorb
sbb
jno
mov
fbld
push
sbb
fistpll
push
fsubp
outsb
ret
scas
repz
and
jg
mov
imul
or
ljmp
xchg
in
in
nop
stos
notl
xor
aad
cmpl
add
shlb
jo
mov
call
push
lcall
push
in
pushf
call
sbb
jns
addr16
adc
sbb
cli
dec
add
sbb
loope
xchg
cmp
mov
in
mov
mov
and
inc
ja
dec
or
loope
cs
mov
cmp
outsb
test
mov
dec
rolb
out
repz
scas
int3
adcl
push
gs
push
push
imul
repnz
imul
mov
movsb
pusha
sub
cmpsl
aad
add
popa
imul
aaa
mov
fstl
jmp
sub
and
adc
xchg
xor
push
pusha
fs
cmp
in
insl
push
sbb
cmpsb
mov
popf
mov
out
in
lock
mov
xor
jae
scas
repnz
mov
cmp
and
inc
mov
pusha
cli
testb
test
imul
sbb
fisubs
cs
cmp
xchg
shll
fstpl
pop
or
mov
bound
data16
add
push
sbb
and
cltd
insb
mov
xchg
test
int3
pop
fidivrs
nop
push
xor
and
mov
xchg
ret
sub
icebp
aas
xor
cmpsl
sbb
lret
push
mov
mov
mov
cmpsl
or
lcall
lea
dec
push
shll
xchg
in
es
mov
ss
movsb
lret
pop
adc
lods
mov
adc
cmp
imul
add
adc
mov
dec
sub
sub
repnz
lods
cmp
mov
cld
push
and
das
std
outsl
out
mov
jp
js
push
fbstp
int3
movl
cmp
mulb
and
sbbb
xor
cmc
inc
sbb
scas
mov
xor
pop
aas
mov
imull
mov
mov
xor
xchg
sahf
test
stos
daa
xchg
sbb
test
maskmovq
mov
and
or
daa
mov
das
fwait
addl
outsb
push
addl
repnz
adc
in
jl
cmp
push
sub
aad
sbb
or
push
sub
out
inc
test
pop
rcrb
loope
imul
icebp
std
mov
sub
mov
sbb
gs
fiaddl
outsl
ljmp
adc
sbb
das
adc
mov
ss
push
mov
out
in
pop
sub
cld
pusha
mov
inc
lock
fdivs
add
shll
adc
fmull
push
push
pop
cltd
cmp
jo
mov
mov
adcl
dec
pop
push
scas
fimull
dec
mov
xchg
xchg
or
adc
fsubl
aam
test
push
enter
rcll
sbb
push
cld
mov
push
xchg
mov
push
push
jmp
sub
outsb
data16
jno
sbb
mov
mov
or
jl
and
lea
mov
push
fwait
pushf
sbb
dec
stos
xchg
scas
addr16
push
scas
mov
mov
rorl
imul
adc
dec
popa
mov
pop
or
jbe
dec
xchg
jge
pusha
cmp
test
int
push
outsl
pop
push
pop
inc
xchg
shl
sbb
cmp
dec
lods
into
xlat
mov
cmp
in
lods
jnp
sahf
int
ja
cmpsb
addr16
push
lods
mov
sbb
and
or
stc
lock
xor
cmp
daa
mov
scas
pushf
inc
jae
sbb
sbb
stos
lds
test
dec
je
inc
xor
lods
test
pop
nop
pop
jle
dec
leave
mov
cli
je
cltd
jge
dec
xchg
dec
push
and
sbb
js
push
pop
jbe
cmp
xor
aaa
stc
decl
rcrb
fwait
sbb
mov
cmpsb
insb
mov
int
push
jb
icebp
mov
inc
int
hlt
inc
sbb
loop
inc
lea
call
test
and
xchg
mov
mov
push
and
mov
loopne
loopne
xchg
dec
push
call
jnp
xor
outsl
ds
pop
push
loope
testl
mov
mov
cwtl
cmp
inc
dec
loope
and
out
cmp
aaa
outsl
xchg
add
mov
popf
aaa
mov
pop
scas
jo
call
pop
mov
dec
insl
add
cli
arpl
dec
cmpsb
xchg
arpl
daa
inc
pop
push
jno
sti
aas
sbb
xor
jne
and
icebp
push
mov
xchg
icebp
cltd
iret
dec
ljmp
xor
mov
je
aam
test
das
daa
addr16
cld
or
repnz
bound
vmulss
push
mov
xor
shlb
jp
jbe
mov
add
xor
imul
and
movsb
push
cmp
insb
push
lret
mov
test
pusha
adc
stos
stc
movsb
iret
enter
xchg
push
fwait
inc
xor
jbe
in
inc
mov
jnp
call
loop
fisubs
js
adc
xchg
arpl
jecxz
das
sar
sbb
mov
push
lds
fbld
or
orl
xlat
cmpsl
shrl
out
rcr
jne
mov
push
push
lods
movsl
sub
cld
mov
and
xor
bound
jnp
xchg
flds
cmp
ret
inc
sbb
mov
jo
mov
in
int3
popf
mov
or
pushf
xor
stos
mov
push
adc
stc
lahf
dec
jo
xor
cli
adc
pop
std
sbb
sbb
fprem1
lcall
dec
sub
inc
sahf
shrl
aad
icebp
mov
or
arpl
stos
pop
adc
ficoml
inc
inc
pop
xchg
cs
xsha1
cmpsb
dec
pushaw
nop
adc
fxam
xchg
stos
jnp
jae
enter
arpl
out
jl
pop
out
in
aam
lea
nop
es
and
fistpll
mov
nop
push
jns
leave
cwtl
push
or
pop
in
idiv
fmull
imul
je
pop
xchg
fldcw
inc
push
add
jns
push
adc
daa
mov
jmp
sar
push
filds
adc
and
cltd
imul
jg
imul
or
or
cmp
fisubrs
mov
stc
aam
rol
arpl
dec
sbb
mov
cli
rorb
adc
sub
das
push
mov
aad
div
sbb
mov
inc
aam
xorl
mov
insl
inc
lcall
js
mov
out
stos
lea
dec
adc
ss
loope
bound
repz
sahf
fcompl
mov
mov
inc
ret
ss
fisttps
popa
adc
aad
or
jg
ret
pop
aam
mov
mov
xchg
popf
test
push
std
fisubs
jecxz
addr16
das
imul
cltd
das
mov
outsl
stc
push
ljmp
xchg
mov
push
inc
or
popf
icebp
in
pop
xor
push
aad
sarl
cmp
adc
jne
and
add
iret
std
xlat
xchg
data16
adc
lcall
jecxz
movl
mov
insb
lods
sahf
clc
push
cmpsb
push
pop
pop
jl
add
or
lret
sub
mov
push
xchg
jns
push
dec
adc
or
sbb
dec
or
xchg
nop
insb
inc
jecxz
negb
call
sbb
out
cmpl
sbb
in
orb
sbb
xor
xlat
lret
out
sub
sbbb
mov
mov
iret
mov
adc
mov
pushf
or
int3
xchg
pushf
ss
fs
or
push
addb
xor
test
push
repnz
xlat
and
movsb
mov
ljmp
aaa
sbb
inc
cmp
fs
inc
ds
or
cmpsb
mov
xlat
outsb
lret
sbb
mov
in
fidivrl
cltd
jl
pop
dec
cmp
jae
jnp
jno
ljmp
cmp
negb
mov
cli
sub
mov
dec
add
mov
movsl
and
xlat
repz
repz
jnp
push
enter
adc
pushaw
push
mov
les
jbe
sub
lods
mov
rcrb
ret
pushf
stos
mov
add
xchg
sub
neg
and
nop
cwtl
shlb
pushf
jnp
sub
push
mov
test
push
push
sub
inc
out
sub
push
push
loopne
int3
inc
ja
popf
mov
sub
mov
dec
fstps
cmp
mov
inc
sahf
and
xchg
add
mov
and
jno
mov
aam
imul
sti
sarl
jbe
imull
mov
outsl
dec
lret
call
inc
inc
jnp
arpl
and
ja
inc
jle
fstpt
lock
cltd
sahf
sarl
loope
or
popf
xor
xchg
lods
mov
pop
fxch
mov
dec
jne
push
rclb
vmovapd
outsl
sbb
jecxz
data16
adc
ffree
ja
fistpll
jge
jnp
xchg
sub
or
and
shll
out
cltd
loopne
das
sbb
aam
cmp
lret
shl
mov
dec
popf
dec
sbb
pop
mov
mov
mov
outsl
jno
jne
cmpsl
mov
repz
ljmp
jne
ds
jle
push
inc
mov
pushf
jno
test
gs
in
adc
adc
icebp
adc
xchg
xchg
aas
mov
mov
jg
sbb
cmp
or
in
sti
bound
out
out
and
jbe
mov
inc
push
dec
in
ja
add
mov
adc
lods
popf
mov
jle
or
xor
pop
cs
insb
insb
lods
dec
negl
sub
mov
lds
lds
dec
pop
sbbb
daa
out
xchg
lods
add
xor
lods
ljmp
pop
jmp
xchg
and
mov
mov
xchg
or
dec
jns
pop
mov
mov
dec
sbb
sbb
sbb
mov
adc
icebp
in
into
fcompp
mov
xacquire
out
jae
pop
dec
lock
push
gs
addr16
idivl
dec
cmp
out
dec
imull
dec
push
hlt
test
mov
xchg
mov
or
into
gs
outsl
ret
inc
lds
xor
push
pop
fbstp
sbb
out
inc
lret
dec
loope
sbb
stos
iret
insb
pop
inc
mov
int
movsl
lcall
add
test
sbb
out
lods
mov
mov
shlb
vandps
or
xor
jbe
cli
and
or
lds
mov
loopne
lea
dec
cmp
xor
lods
ja
jmp
out
xor
inc
fmull
mov
or
xchg
inc
into
pop
rol
cld
mov
repnz
xor
inc
mov
stos
sbb
sti
scas
daa
xor
mov
mov
and
adc
jl
dec
add
push
popa
adc
repnz
fucomp
or
jl
dec
dec
js
or
mov
popa
rcrl
adc
sbb
jge
jle
push
shlb
mov
idivb
popl
insb
aam
inc
jge
jo
cmpsb
sbb
mov
cltd
scas
addr16
sbb
stos
fwait
push
js
scas
js
aam
insl
mov
jp
xor
mov
loop
aaa
mov
or
aad
fidivrl
fidivrs
xor
jmp
xor
pop
jnp
pop
stos
mov
lds
adc
test
popa
scas
dec
xchg
scas
mov
cmpsl
jg
xchg
cld
sti
mov
rorb
negb
jecxz
mov
dec
pop
or
imulb
sbb
lret
add
cli
es
mov
hlt
jbe
lcall
adc
sahf
es
mov
sub
xor
sbb
insl
add
inc
xchg
stos
in
lret
push
inc
adc
push
inc
and
in
das
inc
leave
movsb
push
push
jl
cld
sbb
add
or
adc
and
fists
add
push
cmp
sub
test
nop
xchg
imul
pusha
out
out
cmp
push
push
fs
fsubs
les
xor
mov
dec
inc
sub
loop
mov
adc
orl
mulb
adc
mov
stos
flds
cmp
inc
sub
sub
adc
repnz
lret
les
xchg
loopne
adc
fs
xchg
pop
sub
mov
test
inc
leavew
pop
rorl
outsb
sub
scas
int
mov
repnz
imul
push
scas
movsl
fidivs
cli
add
cmp
dec
aad
aaa
add
mov
insb
push
cs
dec
pop
cwtl
pop
xor
dec
sbb
pop
sbb
push
pop
push
and
adc
jmp
and
loope
loope
repz
cmp
xchg
mov
movsb
aam
jbe
pop
push
aam
jle
or
fdivr
or
dec
sub
sbb
and
cwtl
in
adc
stos
fwait
insl
out
test
ljmp
add
sub
outsb
rcll
rcrb
cs
fidivrl
cmpsl
setge
rcrb
int
inc
jnp
ficomps
enter
nop
mulb
dec
xchg
cmp
stos
xchg
pushf
orl
cltd
xor
std
ficoml
lds
xor
dec
loop
addr16
nop
xor
sahf
outsb
push
add
xchg
hlt
repnz
mov
mov
cmpsl
dec
pop
sbb
push
jle
push
loopne
push
stos
sbbl
mov
pusha
mov
cmpsl
mov
dec
in
jae
inc
iret
subb
fldcw
push
notb
pop
pop
popf
xchg
in
push
insl
jnp
mov
clc
fs
or
js
shrb
pop
and
adc
pop
pop
in
or
sbb
lds
inc
add
jns
or
inc
pop
mov
mov
sti
popa
push
stos
rcll
mov
loop
cli
gs
mov
sub
push
ljmp
or
or
cmpsb
adc
adcl
sbb
cmp
iret
inc
ss
xor
popf
je
jnp
mov
stc
sub
sub
sub
in
cmc
fcoml
jg
or
mov
cmp
mov
stos
aad
test
sub
fs
push
adc
mov
fbstp
jnp
adc
cmp
rolb
xchg
push
cmp
cmc
sub
cmp
sub
xchg
or
jne
add
rcrl
jno
sub
inc
xchg
xchg
jbe
jne
fcomps
cltd
jg
or
add
push
mov
gs
test
mov
mov
int
sub
add
stos
aaa
pop
das
insb
filds
mov
and
adc
cmc
enter
push
adc
sbb
pusha
jo
mov
inc
xchg
ja
loope
pop
cmp
jge
sub
add
inc
popf
enter
outsl
je
dec
fadd
mov
mulb
ret
or
lret
push
cmp
fwait
aas
addr16
jl
pop
xor
pushf
arpl
pop
push
test
mov
and
mov
lock
fbld
xchg
jno
call
lds
lcall
in
or
lods
or
stos
addb
outsb
ret
mov
mov
inc
adc
ss
add
and
cmp
dec
cltd
cmpsb
aad
dec
adc
dec
sub
pop
ret
mov
mov
and
dec
lcall
ret
bound
dec
push
out
sbb
mov
adc
sbb
xchg
xor
jge
xchg
in
fs
mov
ja
xchg
sub
push
dec
xchg
mov
aad
dec
hlt
js
mov
addb
mov
iret
loopne,pt
pop
sbb
mov
out
adc
mov
sbb
fildll
push
cli
jp
adc
pop
subl
sbb
cmp
js
movsl
xor
shll
xor
add
and
call
movsl
fstps
xchg
hlt
cmp
mov
push
xchg
mov
insl
insl
sbb
and
mov
cli
mov
arpl
xchg
arpl
push
mov
jecxz
arpl
jnp
lcall
stc
inc
mov
mov
popa
jb
xor
movsl
add
jnp
iret
fs
repnz
adc
jecxz
mov
add
inc
mov
xchg
dec
cmpsl
ja
leave
mov
js
popa
stc
js
pushf
jmp
fldt
mov
xor
push
lea
xchg
cli
add
movl
ret
and
shll
or
dec
pop
push
dec
inc
test
dec
outsl
dec
dec
pcmpgtd
adc
mov
and
xchg
inc
adc
imul
int
mov
add
xor
adc
daa
xor
pop
sub
adc
mov
mov
adc
dec
sbb
pusha
subl
xchg
int3
mov
xor
jl
add
push
jg
jge
mov
xchg
push
mov
scas
cmp
ret
cmpsb
loop
and
popf
mov
and
jmp
insl
insl
xchg
pop
mov
loope
mov
testb
inc
pop
lods
sbb
insb
out
fnstenv
mov
mov
mov
in
xor
mov
stos
push
jno
xor
mov
loop
xchg
sbb
ret
pop
bound
bound
pusha
pop
push
jb
enter
lock
fsubrs
adc
jle
rol
inc
pop
push
and
and
into
mov
or
dec
push
ja
or
inc
inc
lds
and
sbbl
cltd
jge
or
adc
xor
cltd
pop
push
test
dec
cli
and
shll
fwait
loop
inc
add
gs
xor
dec
stos
in
xchg
mov
frstor
mov
fs
xor
mov
shrb
shlb
sar
mov
inc
cmp
mov
clc
pop
push
jp
pop
push
fucomi
xchg
mov
loopne
lahf
and
ds
clc
in
rol
rorb
and
xchg
repz
lahf
stos
sub
test
jmp
adc
stc
cld
mov
shl
je
dec
and
outsl
or
test
sahf
ret
popa
sbb
stos
and
xor
cmp
cli
sub
push
jl
lods
pop
jl
das
or
or
pusha
xlat
das
xchg
aas
nop
pushf
cmp
out
aaa
xor
adcb
add
mov
insl
mov
dec
mov
push
ljmp
xor
add
outsl
lods
hlt
inc
shlb
inc
xor
outsl
pop
push
popf
dec
push
adc
leave
inc
into
mov
mov
and
test
nop
mov
sbb
xor
mov
push
fistl
pop
nop
lock
rclb
addr16
popa
rorb
sub
imul
xchg
pop
sub
inc
xchg
and
lods
fsubs
fsubp
incb
jnp
push
lds
pop
pop
adcl
mov
cwtl
dec
lock
mov
mov
cmp
xchg
add
inc
pop
imul
dec
daa
mov
sub
popf
dec
js
jmp
aas
imul
das
test
dec
and
xor
mov
insb
adc
int3
mov
cwtl
push
mov
mov
repnz
pushf
sub
clc
xchg
mov
xor
add
mov
data16
hlt
push
out
test
or
std
cmp
stos
or
and
add
add
repz
stos
nop
mov
mov
pop
push
cmpsb
in
cmp
into
addr16
sub
ret
adc
sub
test
mov
and
cmp
lret
imulb
dec
sub
mov
cmp
mov
sub
rol
test
mov
ror
push
jmp
mov
push
sub
mov
outsl
mov
dec
push
leave
lds
pushf
data16
fs
jne
add
in
mov
mov
out
xchg
mov
enter
push
mov
inc
mov
mov
adc
inc
fisubl
mov
imul
xlat
fwait
popf
pop
rorl
ret
mov
andb
fadds
inc
xchg
push
mov
fnsave
push
popa
notl
jmp
mov
sbb
enter
sub
pop
cmpsl
test
mov
mov
outsb
jnp
jb
mov
sbb
push
repz
push
mov
dec
or
sub
test
jge
cmp
cld
mov
pop
or
rorb
test
push
xor
ja
jg
mov
insl
and
out
stc
unpckhps
pop
sbb
lret
outsl
and
arpl
xor
stos
push
xchg
lret
add
test
rcr
syscall
and
push
mov
imul
adc
popf
shlb
xor
cmp
ljmp
xchg
lock
ret
hlt
mov
pop
or
push
notb
rcrb
test
adc
cmp
sbbl
loope
mov
jp
stos
aad
jmp
adc
and
es
sbb
cmpl
xor
add
js
aaa
cld
ss
rol
sbb
mov
jle
push
jg
filds
xor
cmp
xor
xor
fimull
and
cltd
xchg
pop
repnz
jnp
popa
mov
xchg
mov
lcall
inc
fbstp
add
arpl
adc
lock
dec
or
bound
and
xor
pop
movsb
scas
pop
mov
pop
jnp
jns
mov
xlat
or
xor
movsl
std
inc
addl
inc
and
dec
cld
mov
daa
bound
test
xchg
add
in
popa
daa
cwtl
adc
popf
inc
insl
nop
pop
pop
push
lods
jge
shlb
cmp
stos
fsubs
ds
daa
nop
and
and
push
sub
int
cmc
bound
ljmp
cmp
fs
push
pop
mov
push
rolb
mov
mov
inc
stos
jecxz
pop
cwtl
and
add
dec
fdivrp
jecxz
stc
clc
leave
mov
leave
int
and
lds
push
and
xlat
andl
jmp
add
mov
xor
adc
cmp
mov
scas
rorb
push
cmp
push
stc
mov
push
outsl
or
dec
in
jmp
out
push
test
popf
int
push
mov
enter
lret
xor
vsqrtss
std
popw
mov
mov
cmp
mov
stos
jno
in
jae
mov
pop
je
or
push
add
hlt
dec
imulb
scas
les
dec
pushf
sub
mov
into
stos
push
sti
mov
fdivs
shrb
xchg
ret
pop
rorb
imul
push
leavew
test
in
add
out
cmp
das
jle
push
ljmp
adc
fs
jge
les
sub
ss
mov
lods
dec
xor
sbb
and
push
push
mov
mull
mov
sub
or
scas
add
pop
loope
push
out
pop
dec
les
lcall
inc
xchg
popl
sub
xchg
orl
lods
nop
std
mov
sahf
pop
jl
or
sbb
sti
lods
insl
pusha
cwtl
sarl
pop
dec
movsl
int
add
cmp
daa
sbb
fisttpll
add
cmp
pop
jl
jae
outsb
sbb
test
lret
sahf
xchg
out
shll
push
mov
adc
pop
xor
adc
cmp
lea
dec
xchg
and
subb
and
nop
xor
cmpsb
xor
dec
loop
addr16
mov
add
pop
sub
mov
mov
fcmovu
movsb
inc
rol
jno
pushf
dec
jnp
imul
cmp
das
popf
int3
dec
xor
mov
sub
cmp
jne
cmp
mov
lret
jge
lock
push
xchg
sub
testl
daa
insb
xlat
cmc
imul
lods
pusha
mov
jae
sahf
add
mov
aas
daa
mov
icebp
repz
jmp
mov
aam
dec
mov
inc
ss
add
or
inc
push
insl
jnp
push
pop
fldenv
and
ds
cmp
clc
sbb
outsb
sub
pop
gs
jne
mov
jnp
or
and
pop
mov
dec
mov
push
and
inc
lcall
push
outsb
dec
xchg
xchg
adc
cwtl
es
jne
aaa
sbbl
cmp
xchg
ljmp
and
gs
cltd
or
cmp
fists
dec
aaa
xchg
enter
cmp
push
cwtl
sbb
xor
xchg
data16
out
jle
jmp
arpl
dec
addb
loopne
pop
ret
jle
out
leave
jle
sbb
cld
mov
lods
xchg
cmp
scas
clc
and
lret
sbb
adc
mov
push
fldl
sbb
pop
adcb
in
jb
sti
popa
es
fsubl
sbb
arpl
loope
shr
push
mov
xchg
dec
push
mov
pop
fwait
cmp
add
mov
xchg
sbb
lock
movsl
sub
inc
xor
std
flds
scas
ljmp
mov
xchg
cmp
lcall
jno
jo
mov
dec
lods
aas
call
xchg
lret
scas
imul
lds
lret
push
xchg
jmp
inc
out
jge
inc
jge
sbb
mov
movsb
add
nop
or
fst
dec
loop
cs
sub
fistl
adc
jns
mov
jnp
lret
js
addr16
push
aas
jle
or
sbb
add
pop
repz
rorl
pop
pop
stos
push
outsb
lret
test
adc
xor
pushf
and
jae
mov
add
lea
jns
test
cmp
imul
inc
mov
insb
push
jbe
pop
push
cmpsb
loop
shrb
add
out
inc
bound
push
cld
fistpl
icebp
mov
add
add
popl
ss
lret
es
or
jl
sub
xor
pusha
or
mov
mov
mov
xchg
outsl
mov
and
in
xchg
bound
sub
fidivl
xchg
adc
lods
sbb
fs
and
test
xorl
imul
mov
arpl
les
fadd
loopne
mov
stc
push
xchg
rcrb
imul
push
out
js
shrb
xor
scas
lret
mov
jno
sti
pop
dec
mov
clc
fs
jecxz
insb
jmp
mov
adc
sub
repz
je
mov
cmpsb
or
enter
mov
sbb
push
cld
pop
xor
enter
and
adc
inc
repnz
in
shll
mov
jno
std
mov
push
scas
pop
cli
dec
jo
ret
int
sbb
call
sti
mov
dec
arpl
and
push
cmpsl
and
pop
repz
push
mov
std
xchg
mov
bswap
sbb
ficomps
mov
and
adc
adc
pop
adc
push
xor
stos
popl
aas
in
aas
and
cmp
mul
xlat
ss
sahf
cmp
or
mov
mov
jbe
push
cmp
jns
xor
inc
dec
dec
dec
dec
mov
into
mov
pop
cmpsb
lds
sbb
cld
test
mov
pop
bound
std
das
push
popa
mov
xchg
lock
aam
push
mov
stos
fistpll
sbb
push
sbb
mov
rol
and
mov
dec
aas
mov
into
outsb
xor
pop
ret
test
or
inc
frstor
pop
arpl
add
inc
pop
cmp
sub
jp
loope
fadd
test
out
rcl
pop
sub
sub
imull
and
add
jb
xor
lds
in
pop
lods
ss
mov
mov
stos
arpl
test
inc
sti
inc
ret
sbbl
fisttpl
sti
lds
xchg
pop
xchg
insl
push
jl
lock
sti
cmp
cwtl
dec
loope
jg
or
pop
add
outsb
in
aad
cld
insl
lret
pop
data16
rcll
outsl
arpl
inc
push
sbb
in
jnp
mov
in
push
loopne
cltd
aad
push
dec
int3
fmul
enter
push
xor
xor
iret
mov
pop
dec
mov
icebp
cmp
scas
and
daa
jae
cmp
jge
fsubs
aad
inc
adc
out
pusha
lahf
or
cmp
and
jl
add
push
into
shl
loopne
ja
xor
inc
int3
loop
or
dec
cmp
iret
pop
int
pop
bound
testb
mov
dec
cltd
subl
jle
mov
pop
idivb
test
shl
xor
fmuls
dec
mov
shl
pusha
and
jb
mov
and
sbb
jg,pt
in
int
ret
imul
stc
push
out
clc
vphaddwd
mov
iret
adc
aaa
xchg
pop
jge
push
or
stos
mov
movsl
leave
jbe
sub
add
or
add
call
pop
or
fcmovu
int3
cwtl
push
sbb
std
mov
mov
iret
cli
xchg
push
push
out
mov
pop
arpl
hlt
sbb
jae
test
cs
mov
iret
and
add
mov
jl
sbb
das
test
repz
xlat
mov
pop
sbb
popa
dec
xchg
pop
lock
out
xor
pop
or
fsubp
mov
push
mov
daa
pop
jnp
inc
push
imul
test
push
adc
xchg
sbb
outsb
cmpsb
mov
pcmpgtd
scas
aam
lock
pop
test
add
xor
aam
es
mov
out
cmp
movsl
push
pop
push
testb
fists
mov
imul
outsb
les
test
into
loop
js
mov
insb
mov
and
data16
out
adc
jne
push
mov
xlat
xor
repnz
pushf
adc
jb
pop
and
lahf
jns
faddl
lret
fisubrs
shl
nop
stos
test
into
in
jnp
das
push
cmp
jnp
mov
or
jno
jmp
pop
andl
jecxz
cs
add
call
js
inc
scas
or
xchg
ja
out
adc
scas
insl
sbbb
dec
movsl
iret
jg
or
mov
and
cmp
push
pop
cmp
pushf
sbb
jae
stos
push
push
test
sbb
ret
aaa
xchg
pop
mov
lods
das
jbe
mov
sub
arpl
lahf
pop
loop
sub
pop
sbb
push
out
ss
lret
stos
les
cltd
jne
cmp
xchg
sbb
les
sahf
rcll
movsl
mov
mov
dec
icebp
or
jns
loope
push
sbb
lea
addr16
jbe
push
popl
imul
insl
mov
sub
je
pop
dec
fwait
sbb
xor
sahf
xor
outsb
push
or
add
pushf
cvtps2pd
cltd
dec
int3
push
lcall
scas
add
cwtl
shlb
cmp
cmp
xchg
and
sbbb
push
packsswb
mov
cltd
ret
nop
push
stc
test
repz
xor
jl
mov
sub
lods
and
mov
aaa
icebp
clc
adc
imul
jge
pop
into
jmp
gs
pop
jge
mov
iret
mov
cld
adc
int3
scas
or
ss
dec
cmc
xchg
inc
and
adcl
and
mov
push
imul
push
pop
xor
cmpsl
xchg
cmp
ret
push
fwait
sbb
and
mov
test
iret
lods
fdivr
sti
pushf
mov
pop
sub
cmpb
mov
xor
andl
and
pop
test
dec
and
pop
lods
faddl
pop
fiadds
xor
and
dec
aam
push
pusha
dec
popf
push
xor
pop
je
dec
push
and
jbe
add
xor
dec
iret
sub
popf
or
push
ret
mov
sbb
mov
sub
jbe
test
in
mov
inc
cmp
loop
sub
in
pop
xor
pop
out
lret
repz
fldcw
inc
popf
daa
jns
std
fs
loope
push
xor
out
xor
mov
push
push
cmp
fisubs
pop
test
stos
cmp
cli
mov
fmull
or
ljmp
mov
xchg
dec
shrl
std
scas
jno
leave
jns
shll
xchg
jbe
pop
xchg
xchg
shlb
in
inc
repz
imul
int
das
dec
cld
inc
in
push
lret
icebp
lds
add
push
and
in
mov
pop
aam
mov
pop
jp
decl
mov
mov
xchg
and
jo
mov
js
mov
push
or
jecxz
movsb
adc
pop
pusha
lahf
dec
and
in
call
imul
shl
rorb
xor
xchg
adcb
enter
sbb
add
adc
or
mov
fbld
cmc
inc
jbe
out
outsb
dec
or
adc
sbb
dec
pop
push
mov
fdivs
inc
adcb
hlt
inc
xor
push
sub
inc
fcom
das
in
cmpsl
jle
cmp
aam
inc
pop
or
or
inc
pop
adc
inc
insl
aas
push
fbld
stos
xchg
xlat
ficoms
sbb
mov
clc
mov
ss
mov
ljmp
fsubrs
mov
insb
std
mov
push
test
out
cwtl
insb
inc
inc
ljmp
sahf
dec
aas
js
add
clc
in
dec
push
xchg
enter
sbb
jmp
mov
pop
cmpsl
movl
pop
xchg
mov
mov
hlt
mov
insb
jo
jmp
loop
mov
inc
fdivl
xchg
cmp
and
inc
xor
xchg
mov
xchg
cmp
sbb
xlat
fbstp
jle
je
sub
cmpsb
mov
push
xlat
fwait
mov
scas
dec
loope
xor
add
pop
jl
in
adc
orb
dec
and
mov
add
pop
inc
icebp
in
lret
cmp
fwait
mov
ja
divl
hlt
scas
stc
fisubrs
mov
int
mov
adc
shlb
movsl
adc
cmp
into
sahf
fsubrs
int3
sbb
sub
add
hlt
gs
xor
push
mov
arpl
add
sbb
pushf
pop
mov
inc
incb
adc
cmpsl
out
mov
inc
dec
jae
ja
stos
bound
aad
mov
hlt
ljmp
cvttps2pi
inc
xchg
out
mov
loopne
sub
filds
jle
jge
xchg
cmp
out
shlb
cmp
jmp
adc
arpl
xchg
cli
in
or
add
clc
pop
adc
push
and
out
lahf
dec
and
xlat
ds
rorl
xchg
sbb
rcl
lea
cmp
arpl
cs
test
jge
lds
cmpsl
movsl
and
jo
popf
bound
and
cld
push
pop
andl
xor
dec
sarb
aad
lahf
dec
cs
xor
pop
pop
cmp
cld
insl
push
es
rcl
mov
inc
push
imul
xor
sbb
push
rcrl
popf
jmp
inc
ljmp
cmp
adc
lret
pop
jle
mov
xchg
adc
xlat
lret
cmp
jmp
sbb
hlt
das
lock
loop
mov
xchg
aam
mov
xor
mov
sbb
scas
jmp
fistps
cmpsl
cmp
aam
sbb
test
shl
cmpsl
inc
mov
pop
insb
mov
in
pop
mov
or
insl
push
sub
adcb
sti
into
fldt
and
cmp
mov
push
insb
pushf
xchg
add
pop
sti
pop
mov
pop
jno
adc
mov
lock
lea
xor
mov
les
clc
add
int
adc
jnp
sbb
push
cwtl
fstps
mov
fs
adc
mov
pop
rcl
and
jae,pt
ljmp
aas
inc
sarb
mov
lcall
push
outsl
outsl
xchg
add
sarl
mov
adcb
inc
rorb
adc
mov
lods
inc
xor
jge
sbb
test
jle
push
rcrb
in
add
and
pop
xchg
cmp
mov
mov
enter
popa
jne
scas
fildl
adc
cli
xor
mov
xor
mov
stos
pop
mov
inc
adc
testl
dec
loope
lock
jno
popf
dec
in
int
scas
loopne
lock
cmpsl
dec
pop
xchg
popf
xchg
rorb
icebp
popf
imul
push
pop
xchg
arpl
mov
call
sbb
push
inc
aaa
jns
repnz
insl
movsl
cmp
push
adc
xlat
pop
lods
sub
je
sbb
adc
mov
gs
dec
push
pop
add
out
fsubrl
fwait
mov
das
repz
mov
addr16
fld
push
fs
rolb
in
xchg
fcmovbe
ds
adc
pushf
or
popl
popa
test
jae
dec
mov
xchg
sbb
fcompp
fidivrl
jl
js
fstps
insb
mov
neg
cmp
imul
adc
mov
addr16
adc
sub
ficoms
std
xchg
push
jmp
inc
cmp
mov
fadds
insl
lock
jmp
inc
sbb
pop
loope
ss
push
int3
cmp
mov
fwait
push
push
lret
xor
mov
add
out
pop
aas
dec
mov
dec
in
addr16
aam
cmp
lcall
dec
into
fistl
aaa
sbb
into
dec
push
sbb
mov
mov
sbb
leave
pop
sahf
add
mov
inc
stos
aam
int3
push
nop
push
xchg
js
out
push
add
lret
jg
sahf
pop
add
insb
aas
cld
add
or
repnz
out
les
mov
dec
andb
lods
pop
jmp
jae
ja
repz
xor
cmp
in
hlt
push
negl
mov
movsl
dec
sahf
push
adc
leave
mov
xchg
jo
sub
int3
push
sahf
mov
lods
sti
leave
movsb
cmp
fnstsw
dec
in
cmp
jne
sahf
or
add
js
aam
pop
jg
push
add
gs
addr16
cmp
and
xchg
jp
mov
inc
ret
loope
pop
and
or
or
push
mov
fstp
inc
insl
js
adc
xchg
mov
into
jns
loop
sbb
sbb
insb
pop
sub
xorb
jl
dec
pop
testl
leavew
sbb
hlt
mov
cli
lea
shrb
adc
adc
stc
pop
xor
lods
dec
push
mov
xchg
adc
mov
xor
push
xchg
ror
mov
popf
mov
aaa
fcmovu
pop
ficomps
test
jg
mov
aam
loop
cmpb
js
add
mov
and
adc
clc
pop
ret
ja
add
pop
loop
fucom
fsubrs
mov
in
jge
pop
jl
jl
xchg
aaa
jne
jbe
add
popa
pop
sahf
cmp
push
sbb
inc
cmp
mov
in
cmp
fadds
add
mov
pushf
fsubrs
arpl
mov
dec
inc
loop
push
ja
je
and
push
call
add
xorb
fs
xchg
pushf
pop
lahf
sbb
fistl
inc
addr16
add
rorb
insl
sahf
into
sub
cmp
inc
pop
ja
xchg
bound
mov
mov
loopne
sub
shrb
pusha
aas
scas
ror
fs
mov
fld
lods
and
iret
mov
fdivs
adc
or
and
jo
hlt
fdivs
subl
pusha
cld
cmp
test
dec
stos
jecxz
hlt
std
ljmp
ret
sbb
dec
not
loop
popf
sub
xchg
xchg
daa
rol
jbe
repnz
ss
pop
jg
pop
ds
daa
ss
dec
jmp
arpl
mov
xor
mov
mov
xlat
mov
push
inc
dec
ss
push
dec
or
and
mov
xor
add
cwtl
test
cmp
add
popf
call
shrl
or
scas
popa
cmp
in
add
mov
lahf
push
fs
lds
iret
xorl
inc
clc
inc
enter
xchg
test
sbb
mov
and
rolb
push
push
mov
mov
xchg
insb
sub
js
and
add
sbb
bound
ffreep
add
inc
jecxz
lock
shrl
jp
xchg
sbb
hlt
aaa
mov
lret
stos
and
clc
sub
pop
cmp
jno
cmp
push
push
aaa
lret
lods
sub
jbe
xchg
sbb
add
xchg
mulb
ljmp
dec
mov
loope
push
fstpt
pop
sub
popf
mov
pop
inc
add
shr
shll
cmp
adc
pop
jmp
jbe
adc
cmpsb
ret
popf
mov
test
push
icebp
push
stos
jo
push
and
mov
push
ror
pop
pop
shlb
cmp
pop
cli
mov
pop
mov
or
push
lret
pop
stc
mov
nop
repz
and
or
fistpll
adc
jmp
or
ja
filds
pop
pushf
sbb
repnz
shll
in
push
dec
stc
mov
outsl
inc
and
stc
push
shl
addr16
dec
data16
mov
inc
std
hlt
mov
xor
inc
popa
outsb
stc
mov
add
or
mov
test
fisubrl
pop
pop
inc
push
andl
in
sbb
scas
daa
and
adc
insb
pusha
push
fcmovnb
lahf
sub
bound
pop
out
push
xor
mov
and
loope
pop
orl
aad
cmp
inc
mov
pop
insb
pop
cltd
pop
in
cmp
xor
adc
bound
jp
lods
test
push
pop
dec
xchg
arpl
dec
rcrl
loop
mov
push
mov
mov
popa
push
pop
or
cmpsl
sub
insb
outsb
out
push
jge
sub
and
xchg
mov
jae
dec
and
faddl
lea
xchg
xor
xchg
mov
les
lcall
out
je
push
or
adc
outsl
sub
movsb
insb
or
add
imul
xchg
bound
iret
mov
or
aas
fcompl
sub
mov
xchg
jo
mov
pushf
in
stos
xchg
pusha
arpl
flds
sarl
mov
jecxz
mov
int3
or
cmp
sub
in
enter
cmp
loopne
jo
sti
je
movsb
aas
pop
mov
sbb
sub
shl
cmp
mov
lret
fcoms
je
rorb
cmc
dec
xor
imul
lret
mov
pop
test
mov
loopne
xchg
push
push
or
mov
out
mov
xor
xor
cmp
xor
es
out
pushf
adc
xchg
ljmp
ljmp
test
lock
adc
jl
test
and
testb
orl
dec
stc
pop
out
imul
jne
mov
dec
lds
imul
and
add
and
lods
dec
bound
in
lock
movsb
xchg
pop
mov
aaa
xorl
or
cwtl
ja
push
dec
daa
jl
adc
mov
scas
int3
cmp
add
les
jb
aam
stc
sbb
imul
xor
stc
sub
lret
adc
mov
stos
enter
les
dec
cmc
sbb
pcmpgtd
test
jo
mov
lahf
push
in
cmp
cmp
pushf
lahf
and
push
sbb
sub
es
cli
sub
xchg
fiadds
mov
ja
cmc
sarb
in
mov
js
and
fs
daa
out
mov
ja
push
mov
fsubrs
shr
sbb
cwtl
int3
cli
add
out
insb
mov
pop
xchg
ja
sub
fnstenv
xchg
out
push
fdivrs
shlb
or
leave
dec
in
sbb
sub
pop
push
mov
popf
ficomps
in
inc
nop
pop
or
shlb
dec
mov
mov
and
leave
push
jle
fists
pop
das
adc
push
or
inc
and
fstps
pop
fwait
dec
adc
mov
iret
es
xchg
cmpsl
fs
into
movsl
mov
into
xchg
xchg
mov
dec
call
sub
cwtl
mov
mov
push
push
cwtl
int3
add
mov
fs
jl
std
test
or
sbb
xor
cmp
dec
sbbl
std
idiv
bound
or
rcrl
test
ljmp
mov
sub
dec
dec
lds
adc
inc
loop
jae
insl
ret
adc
xchg
adc
xor
cs
clc
mov
cwtl
inc
cmpl
loop
lahf
out
push
xor
or
cmp
mov
pop
fstps
cmp
pusha
shrb
les
imul
push
add
movsb
mov
dec
push
pusha
pop
cltd
and
mov
adcl
jg
adc
sub
xchg
loopne
jecxz
sbbl
cltd
hlt
call
lret
pop
dec
sub
add
mov
xor
rol
enter
sbb
add
lcall
test
xchg
cmpsb
cmpsb
sub
dec
and
mov
push
push
inc
dec
adc
out
mov
fsubs
push
mov
test
icebp
add
sbb
mov
or
jmp
dec
mov
scas
sub
dec
imul
jns
mov
or
data16
push
dec
xchg
mov
shl
icebp
pop
xchg
push
mov
cld
int
stc
and
pop
push
ficomps
fwait
mov
mov
mov
test
sbb
push
mov
pop
mov
cmpsb
xor
jb
ret
gs
daa
cmp
dec
sbb
pop
and
scas
pop
icebp
fistl
adc
lds
fs
xchg
sub
scas
lret
push
xchg
test
jnp
test
inc
jmp
xor
ficompl
push
fwait
das
scas
or
mov
xlat
notl
cmp
dec
int
sbb
test
adc
vandnpd
call
clc
fsubr
cld
xchg
repnz
sti
xchg
sub
mov
fisttpl
arpl
nop
mov
les
xlat
aaa
fmuls
lea
cmp
aad
scas
hlt
and
outsb
push
jne
jmp
lods
push
fsub
fwait
ss
out
sahf
cs
lock
repz
aam
lret
sti
xchg
movsb
cmpsl
dec
mov
and
lock
mov
stos
cltd
cmp
cmp
int3
lret
fcomps
fsubl
test
mov
scas
jmp
lcall
insl
out
mov
cltd
test
scas
xchg
fldenv
ds
inc
mov
adc
sub
fucom
lahf
xor
sbb
mov
inc
dec
stos
popa
test
jae
nop
dec
outsb
lods
mov
pop
call
arpl
fimuls
add
lcall
dec
pop
sahf
xchg
mov
push
xor
aam
jmp
push
jp
outsb
outsl
pmaxub
push
dec
pop
adc
jle
pop
inc
out
mov
fstp
lock
push
push
mov
and
pop
push
neg
es
scas
jmp
imul
ds
mov
add
bound
xlat
mov
clc
inc
inc
adc
adc
sub
sbb
aaa
in
pop
and
mov
inc
add
mov
test
push
adc
xchg
mov
and
mov
out
decb
cmovne
rclb
mov
add
aam
cld
jle
std
fistps
inc
mov
xchg
and
aaa
add
fsubrs
iret
cmpsl
push
repz
pop
ss
out
inc
xor
inc
sti
xchg
cld
push
movsl
xor
addr16
lds
cmp
mov
jo
jnp
cmpsl
lods
aad
mov
push
ror
pusha
fstpt
pop
push
fstpt
call
in
pusha
or
icebp
test
xor
and
inc
call
push
das
insl
test
mov
jmp
mov
add
xlat
push
icebp
lret
pushf
mov
in
out
std
and
inc
push
sub
mov
mov
and
push
es
outsl
cmp
pop
fildl
xor
xchg
stc
jnp
adc
outsl
dec
fildl
add
add
movsb
in
stc
scas
insl
sbb
cmc
adc
mov
xor
loope
pop
adc
mov
cmp
add
fs
or
and
sub
mov
popf
std
lret
fbstp
mov
mov
xchg
dec
testb
dec
cwtl
adc
sbb
repnz
ja
leave
add
pop
or
xchg
mov
cmpsb
pushl
push
sub
or
pop
lea
pop
jb
aas
add
insl
jae
sub
icebp
jg
popf
lret
dec
pop
cmc
sub
unpckhps
in
cmpb
cmp
pop
ficoms
stos
int
ds
xor
dec
loop
out
in
cmc
sub
xchg
imul
ret
shl
pop
inc
and
scas
enter
mov
addr16
pushf
rolb
repnz
fmuls
fsubl
xor
and
jmp
push
mov
pop
sub
push
fsts
aam
repnz
nop
mov
bound
inc
das
fwait
outsl
or
mov
stos
out
add
inc
inc
orb
popf
shll
cmp
dec
pop
mov
jg
ljmp
jno
sub
dec
fcompl
pop
inc
cwtl
enter
mov
cmp
xchg
mov
and
push
out
loopne
daa
mov
pop
idiv
inc
mov
sub
dec
push
outsb
int3
pop
sub
fwait
lods
ss
adc
aaa
std
push
std
sub
pop
pop
arpl
out
daa
dec
lock
fisttpll
adc
push
sbb
mov
cmpsl
imul
push
or
mov
cmp
dec
leave
pop
ja
loop
sbb
sbb
jbe
ja
xor
orb
push
mov
adc
jmp
call
lock
gs
lret
jb
dec
and
insl
mov
notb
jg
dec
mov
gs
xor
pop
xchg
mov
add
dec
insb
xor
lods
mov
and
push
cwtl
xor
or
mov
inc
and
fsubs
inc
add
sbb
mov
jl
incl
negl
dec
lret
and
into
movsl
mov
ret
jns
ret
jl
mov
psubusw
lock
push
or
nop
out
cmpsb
in
out
adc
pushf
cltd
adc
xorb
xchg
push
cmp
adc
mov
mov
int
cmp
sbb
inc
push
nop
mov
into
ss
add
rolb
sub
stos
push
into
shlb
xor
rcr
jl
xchg
int
xorl
pusha
mov
pop
loop
hlt
loope
call
mov
dec
inc
adc
lea
jo
andb
stc
lahf
shlb
xchg
fwait
dec
loope
nop
xchg
adc
leave
cmp
call
dec
shll
mov
xchg
hlt
jg
mov
loop
xorl
test
fmulp
xchg
sub
sti
sbb
dec
or
les
scas
add
call
xchg
mov
cmpsb
sub
fdivs
cmpsl
pop
push
out
xor
cld
or
adc
mov
inc
and
lret
ja
mov
and
push
out
jb
xor
add
jmp
sbb
cmp
inc
sbb
sub
test
and
lret
cwtl
push
dec
mov
adc
jae
pop
test
add
mov
jae
inc
nop
xchg
pop
inc
adc
xchg
and
test
loope
sub
push
mov
mov
adc
arpl
aam
divl
sub
jl
pop
add
xorb
mov
jo
in
cs
push
push
push
dec
out
xchg
mov
loopne
sti
jmp
movsl
jecxz
xchg
icebp
scas
cmpsb
out
fcomps
loop
cmp
xchg
movsl
nop
int
movsl
ret
out
push
movsb
push
jne
negb
dec
mov
sbb
cwtl
pop
clc
cmp
adc
cwtl
in
jnp
bound
ss
sub
ljmp
cmc
jnp
xchg
loopne
int
fildll
mov
mov
int
xchg
adc
mov
aas
adc
in
in
xchg
push
jo
pop
add
sarl
inc
cmp
adc
and
test
addb
push
sarl
or
push
fs
and
push
fnsave
repz
mov
push
jne
fsts
lret
xchg
xor
je
sub
push
cmp
pop
add
fists
mov
lds
xor
je
jp
aad
fidivs
mov
cli
and
adc
pushf
xor
ret
and
negl
ljmp
rol
aas
scas
in
jecxz
adc
testl
mov
sbb
bound
pop
daa
cmp
dec
xchg
sbb
es
lret
fdivl
jnp
testl
adcl
stos
test
movsl
mov
sub
adc
stos
xchg
in
stos
mov
cmp
stos
mov
leave
icebp
mov
int3
stos
push
jl
scas
stc
inc
cltd
add
rcl
mov
jns
push
call
out
adc
cmp
push
imul
adc
fs
add
pop
les
clc
or
or
stos
call
mov
test
push
pop
jge
testb
dec
in
sbb
popf
sub
xchg
pusha
fisubl
xchg
aaa
faddl
xchg
mov
jl
xchg
jp
js
or
daa
mov
pop
or
jge
data16
movsb
cmp
arpl
out
inc
jp
jns
or
xchg
imul
ret
jl
cltd
sub
scas
cmp
jno
icebp
sbb
dec
insb
pop
das
xor
in
sti
push
imul
movq
loopne
xchg
mov
sub
sbb
in
fcoml
fsubrl
cmp
mov
xchg
xchg
dec
inc
or
pusha
mov
lret
dec
mov
xor
mov
jmp
mov
pop
mov
repz
insb
test
cs
cmp
pop
inc
xchg
inc
inc
out
and
lret
pop
fdivl
mov
stos
shl
aas
mov
jg
fnsave
in
mov
add
outsl
xor
add
clc
push
xchg
push
xor
outsb
insl
or
lahf
inc
push
cmc
cld
xor
popf
cmp
les
hlt
and
gs
in
add
sub
adcl
lock
ret
cs
aad
adc
mov
xor
int3
cmpsl
test
or
mov
xchg
and
xchg
lods
fsubrs
add
xchg
stos
lock
iret
push
and
dec
outsl
mov
xchg
mov
sbb
xor
xor
js
mov
pop
or
pop
fwait
or
rcr
lea
shrb
les
hlt
inc
xor
sbb
test
pusha
mov
jecxz
xor
pop
out
nop
stos
sub
xchg
push
jns
ds
xchg
cmp
sub
ret
xchg
test
ljmp
mov
sbb
sbbb
dec
cmp
mov
subl
xchg
push
jb
cli
lahf
mov
jmp
fwait
sub
xor
addr16
jp
inc
inc
add
or
mov
and
pop
sbb
add
lahf
push
fisttpll
lods
and
stc
jne
es
imul
and
sub
rclb
mov
or
dec
xor
repnz
mov
int3
aam
jmp
jmp
test
adc
js
jecxz
jbe
adc
xchg
jmp
fwait
sbb
dec
repnz
test
call
xchg
bswap
leave
sbb
xor
out
cmp
mov
in
jmp
scas
push
jns
or
int3
ret
mov
daa
jmp
loopne
sti
sub
mov
adc
imul
lock
test
xchg
cmp
push
pop
lds
push
jecxz
ljmp
or
in
lret
fdiv
loop
iret
cmc
cmp
jne
into
cwtl
mov
decb
lret
pop
xor
xchg
lahf
lods
push
jns
add
mov
cltd
mov
mov
loopne
aad
xlat
push
dec
inc
decl
mov
ficomps
mov
dec
imul
mov
pop
cmp
std
and
push
lea
pushf
xor
push
cmp
pop
stc
push
out
arpl
xchg
lret
loope
or
inc
arpl
adc
cwtl
test
fnstcw
cmc
cli
jnp
dec
lret
lds
and
dec
les
xchg
ret
clc
inc
xor
xor
hlt
add
xchg
arpl
divl
enter
into
mov
jp
out
pop
add
ds
mov
cltd
fdivrs
adc
or
cs
stos
insl
pop
push
jle
mov
lret
push
push
jp
mov
lahf
pop
mov
xor
clc
lods
fstps
sbb
ret
iret
adc
test
mov
add
sub
sahf
insl
call
jno
mov
push
lret
sub
orb
bound
stc
flds
idivl
addr16
xchg
mov
xchg
adc
sub
dec
mov
add
insl
test
mov
add
push
sub
adc
lods
loop
dec
je
idivb
dec
cs
dec
mov
and
lock
movsl
cltd
push
clc
mov
add
fisubs
push
aas
jo
rorb
hlt
lock
clc
adc
mov
mov
jne
push
jge
dec
sbb
leave
rorl
sbbb
int
out
gs
ja
sbb
arpl
add
sbb
into
sub
jnp
cltd
sub
push
jno
lds
sub
and
or
in
pop
ja
pop
adc
push
push
jg
pop
xchg
cmp
cs
scas
iret
repz
xchg
cmp
xor
mov
cmp
xor
pushf
scas
sahf
cmp
add
icebp
pop
sub
xor
cmpsb
lock
scas
inc
lods
jp
ficomps
push
aad
mov
test
pushf
add
pop
and
int3
sti
mov
mov
stos
xor
push
shll
xor
or
cltd
inc
outsl
xchg
out
mov
add
xchg
inc
push
push
xchg
mov
int
xchg
dec
or
sub
aam
hlt
sub
fucom
pop
and
in
push
stos
imul
mov
aas
jp
popa
jbe
cld
nop
cmp
sbb
push
adc
ret
mov
ret
xchg
jo
pop
int
js
iret
mov
pushf
sbb
mov
es
or
stos
gs
stos
inc
sbb
mov
dec
or
outsb
sahf
jp
pushf
int3
das
adcb
rclb
loop
sahf
clc
in
ret
ja
mov
jl
adc
inc
xor
xor
loopne
jae
rol
mov
out
or
clc
shl
and
add
in
inc
sbb
cld
bound
pop
sub
mov
fldcw
sub
mov
shll
pop
sub
arpl
into
es
xor
andb
fs
inc
mov
decb
dec
push
add
pop
xor
test
hlt
dec
nop
sbbb
ljmp
pop
pop
shll
test
leave
cmc
fistpll
and
mov
dec
jbe
test
lret
adc
pop
daa
in
fstpl
push
mov
adc
stos
mull
push
stos
sbb
mov
adc
jle
add
adc
mov
movsb
pop
movsl
inc
ja
subl
sbb
sbb
das
and
jmp
aam
dec
aad
jno
adc
jae
dec
fxch
cld
add
sub
jmp
insl
mov
add
stos
add
push
add
in
jl
loop
xchg
pop
inc
lock
xor
mov
xchg
xor
and
loop
ja
outsb
push
sub
sbb
adcb
les
popf
pop
incl
and
jle
adc
and
mov
hlt
clc
int
cmc
cwtl
das
pop
pop
or
loop
mov
pushf
test
out
lcall
pop
andb
addr16
xlat
bts
jbe
xchg
iret
lcall
es
mov
aaa
in
sbb
notb
cmc
mov
cmp
sub
inc
pop
xor
mov
movsb
xlat
mov
rolb
cmp
icebp
jp
repz
pop
test
mov
fs
pop
fimull
inc
shr
lcall
ret
out
pop
pop
mov
js
rorb
pop
jo
xor
fsubrs
pop
test
fmuls
rorb
sub
jmp
and
fnsave
jl
divb
lcall
dec
scas
sub
pushf
and
inc
sbb
cmc
and
add
pop
jne
loope
inc
dec
cmp
xor
movsb
xchg
loopne
lods
ss
addr16
cwtl
xchg
add
push
add
cmp
mov
mov
stc
adc
shlb
push
adc
in
mov
in
popa
cmpxchg
dec
aad
cmp
jnp
ret
push
xchg
lcall
push
mov
mov
nop
pop
pop
inc
push
inc
loopne
test
pop
aas
int3
mov
movb
fmuls
dec
into
mov
stos
and
int3
xchg
stc
call
dec
pop
pushf
cmp
and
push
or
outsb
repz
mov
cld
sbbl
push
loope
pop
adcb
out
sti
lods
rcll
dec
or
mov
or
scas
adc
xor
aam
andl
sub
push
fisttps
mov
add
xor
push
mov
nop
pushf
popa
push
dec
ret
lcall
arpl
sahf
mov
and
or
notb
lods
in
icebp
leave
xchg
pop
adc
out
mov
jl
xor
and
inc
and
into
jns
lock
mov
and
xchg
int
addr16
into
add
pop
sub
cmpl
push
repz
fsubs
sub
fiaddl
sti
sbb
shr
pusha
in
aam
out
into
lock
test
sahf
fldl
iret
test
push
loopne
outsb
ret
xor
mov
adc
movsb
push
daa
fistl
in
xchg
sbb
ds
test
das
push
or
dec
sbb
inc
xchg
inc
insb
pop
lock
add
icebp
movsl
popa
cmp
or
cwtl
fmull
insl
xor
mov
mov
jecxz
dec
fisubrl
int
inc
insb
lcall
mov
adc
inc
imul
dec
nop
cmc
jmp
aaa
leave
js
pushf
leave
into
int3
int
std
pop
mov
inc
inc
movsl
imul
or
adcl
movsl
sarl
lcall
enter
jmp
push
pop
mov
mov
cmc
adc
addr16
dec
mov
incb
add
loope
or
cmp
repz
xlat
nop
mov
xor
js
or
stos
xchg
and
mov
add
mov
iret
add
repz
shlb
mov
or
sti
sbb
rorw
repnz
out
and
leave
in
pushf
cwtl
lock
pop
cltd
inc
push
mov
xor
lock
dec
or
mov
int
sub
xchg
out
aam
leave
pop
scas
jp
dec
cli
call
jmp
cmc
dec
or
xchg
pop
xchg
or
call
inc
out
sub
adc
or
xor
adc
jns
inc
jns
pop
into
test
mov
mov
movl
cs
test
xor
sbb
fdivrp
push
movsl
imul
mov
popa
mov
inc
leave
fwait
mov
into
imul
jo
ret
xor
dec
lds
dec
bound
xor
inc
mov
movsl
push
in
cld
cmp
push
pushf
sbb
pushf
ss
testb
jl
cld
cmp
test
dec
push
pop
idiv
setae
jne
fwait
xchg
rcll
lret
cmpsl
lea
popa
pop
dec
subb
xchg
popa
dec
jo
scas
repnz
scas
mov
mov
xchg
ss
jmp
xor
mov
mov
pop
lahf
cld
cmp
lcall
jne
sbb
adc
adc
xor
movsl
cmp
jo
jp
push
lock
aam
aas
dec
inc
push
out
out
push
iret
daa
inc
mov
das
insl
mov
dec
cli
fmuls
xor
jge
jnp
mov
out
mov
aam
int3
or
popf
idivl
fiaddl
push
sub
mov
jg,pt
mov
cmp
aas
das
lock
dec
mov
pop
dec
nop
xchg
add
enter
pop
inc
push
dec
orl
enter
adc
cwtl
inc
pop
lea
inc
test
add
stc
inc
aad
iret
sbb
mov
push
ss
pushf
or
sub
mov
fistpl
mov
push
popf
sub
subb
cld
fcoml
mov
sti
outsb
or
lds
repnz
scas
pop
mov
cli
std
lcall
mov
es
into
les
jno
xchg
imul
ja
mov
xor
push
mov
dec
outsb
pop
xchg
mov
cmpb
lock
cltd
inc
in
push
cli
dec
xchg
sbbl
movsb
insb
das
push
nop
jo
inc
loope
cmp
jmp
xor
aam
inc
mov
dec
repz
in
hlt
shll
cltd
aaa
sahf
insb
fmuls
push
push
repnz
imul
jmp
ds
div
rorb
sar
inc
xchg
sbb
outsl
mov
mov
sbb
ja
and
dec
xchg
xor
push
movsb
fwait
stc
add
mov
lods
inc
popf
aam
mov
lea
jmp
mov
xor
imul
pop
out
je
jecxz
and
ret
daa
inc
idivl
aad
and
ret
cs
and
test
and
mov
call
xchg
in
add
stos
xor
add
push
loopne
or
out
mov
out
xor
arpl
xor
xchg
imull
adc
sbb
xchg
sbbb
ret
ror
in
push
inc
leave
add
add
push
xlat
or
cmp
push
cltd
fisttps
cmpsl
leave
imul
xchg
xor
mov
out
mov
push
xor
stc
out
ja
mov
movsb
sub
pop
cmc
sti
sub
adc
ljmp
or
pop
adc
ret
cmp
add
sbb
cmp
inc
mov
mov
cmpsb
sbb
mov
dec
enter
push
push
or
in
rolb
fldl
out
push
fnstenv
popa
xchg
inc
les
sti
cmpsb
mov
xchg
mov
cli
xchg
scas
in
test
mov
aas
and
movsb
fistl
pop
enter
sub
mov
scas
es
mov
in
mov
shll
aam
stos
mov
fdivrs
xor
or
roll
clc
leave
sub
les
push
mov
jns
mov
inc
lcall
shlb
push
mov
xor
adc
fcompl
lcall
dec
es
and
lret
pusha
bound
loope
sti
and
sbb
movsb
jge
sti
inc
xor
clc
stc
cmp
cwtl
add
cmp
nop
jb
push
subl
or
arpl
nop
jecxz
xlat
adc
std
pushf
into
jno
push
std
jne
lods
mov
loope
repz
jmp
push
pop
shlb
xchg
lret
mov
mov
stc
outsl
sub
jecxz
outsl
and
sbb
insl
sbb
cld
pop
pop
sarl
xlat
mov
push
jbe
jle
xchg
mov
cwtl
cltd
or
mov
xchg
movsb
testb
mov
xchg
mov
jecxz
das
dec
adc
xchg
les
mov
inc
push
cmpsb
stc
mov
mov
mov
clc
push
xor
push
xor
pop
jb
rcrb
jle
rcl
push
or
xor
addr16
cmpsb
push
mov
cmc
addr16
sub
mul
call
inc
pop
cmpsl
faddp
and
pop
call
pop
aam
scas
popf
pop
lods
cmp
mov
sub
xor
jnp
inc
sti
lret
adc
inc
jbe
mov
pmuludq
jb
and
xor
roll
hlt
push
insl
dec
dec
xor
sbb
sub
inc
adc
inc
or
lods
jle
std
pusha
adc
add
sbb
mov
je
inc
sbb
inc
sbb
push
subb
and
inc
cmpsw
adc
dec
stos
cs
push
sub
xchg
mov
pushf
pushf
iret
xchg
add
push
cmpsl
and
xlat
out
xchg
push
mov
lret
dec
jmp
bound
adc
add
cmp
hlt
inc
das
adc
cltd
mov
xchg
icebp
icebp
lds
push
jb
mov
imul
jg
and
mov
sbb
mov
jle
nop
inc
jl
nop
jno
xchg
mov
push
sub
inc
out
das
cmpsb
scas
std
inc
xor
cmp
sti
pop
mov
and
xor
sub
or
in
arpl
push
cmp
sbb
fwait
jns
add
jae
xchg
into
mov
mov
movsl
fistl
int
inc
push
fcomi
int
fstps
pop
movsb
test
gs
cwtl
cmp
loopne
lods
cwtl
mov
rcr
push
rcrl
cmp
dec
daa
pop
xchg
adc
arpl
sub
repnz
sti
inc
jle
push
bnd
mov
jle
cmp
cmp
popf
daa
xchg
int3
xor
lods
jl
jae
inc
jp
xor
adc
inc
loop
lret
or
cmp
push
jb
in
jg
xor
loop
pop
out
xchg
stos
mov
shlb
movsl
rep
sahf
out
mov
out
sbb
sbb
fdivrl
inc
dec
sbb
sub
jo
es
pop
jnp
leave
push
divb
jg
test
mov
faddl
insb
adc
jl
ds
add
je
add
xor
xor
test
cmp
jno
inc
stos
dec
inc
mov
sti
lahf
loop
icebp
pop
repz
rcrb
sti
xchg
pop
sub
ret
adc
cmp
dec
cmp
idiv
cmp
int3
orb
inc
aad
leave
pop
aas
ficomps
aam
xchg
sbb
imul
gs
jns
mov
out
jo
popa
cmp
dec
mov
adc
movb
fiadds
loop
sub
stos
lret
sti
dec
inc
sub
int3
idivb
fisttpl
popf
aad
mov
mov
mov
add
scas
test
out
push
out
mov
int
aaa
sub
es
dec
xor
mov
pop
daa
xchg
sbb
cmpsl
xor
dec
mov
in
out
out
ret
sub
shll
jb
adc
jb
and
adc
jecxz
push
lods
dec
cwtl
xor
and
stos
jp
adc
mov
loope
out
add
fsubl
jecxz
idivl
dec
adc
and
into
xor
shll
lock
orb
mov
fidivrs
jle
adc
lahf
iret
dec
jno
fidivrl
and
xor
mov
iret
test
shlb
sub
jbe
imul
sbb
test
and
test
sqrtps
add
lret
pop
mov
incl
aad
mov
test
cmp
rol
imul
and
sub
push
in
or
inc
mov
pop
stos
daa
push
sbb
test
fcmovnbe
sub
popa
adc
mov
lds
cwtl
outsl
in
sti
pop
and
pop
sub
daa
mov
test
clc
fdivrl
add
pusha
addb
mov
xchg
enter
mov
inc
les
cltd
in
out
add
xchg
mov
xlat
sbb
jno
mov
push
and
pop
popf
pop
cli
sub
dec
in
pop
cmp
pop
cmp
cltd
scas
mov
adcb
jb
popa
pop
mov
es
stos
lret
sbb
inc
dec
pop
or
inc
xchg
lods
scas
pop
fmull
mov
dec
mov
xlat
or
insl
test
test
and
jae
jp
incl
out
mov
inc
cld
cltd
mov
xchg
pop
inc
outsl
dec
clc
out
push
mov
fs
aam
pop
jp
cmp
lret
pop
add
mov
fisttps
outsl
mov
outsl
hlt
cmp
insb
inc
or
jmp
jmp
jmp
je
sbb
popa
es
rcl
sahf
mov
push
mov
xchg
xor
mov
push
xorl
test
sti
sbb
mov
xor
hlt
cmc
aam
sar
incb
jne
mov
sbb
loop
xchg
pop
arpl
xor
jns
insb
das
mov
pop
cmpsb
fdivrl
xchg
lods
mov
das
je
dec
repnz
mov
push
lods
or
mov
int
rcrl
xor
sbb
add
pop
mov
sbb
rcr
loopne
cmpsb
test
cmp
addr16
inc
loope
cld
and
fnstenv
or
mov
popf
dec
loop
adc
dec
mov
iret
mov
call
jb
jecxz
pop
cwtl
lods
arpl
or
or
pop
test
jb
jg
dec
loopne
jge
imul
jp
fdivl
jl
repz
sub
adc
mov
loope
dec
inc
lea
lret
push
jmp
cld
movsb
shlb
xchg
add
sbb
adc
and
inc
sub
loope
cwtl
imul
loop
push
call
pop
fildl
xor
sbb
scas
mov
pop
shl
jo
imul
insb
data16
and
scas
movsl
lds
cmp
mov
push
xchg
jne
adc
cmpsb
scas
cld
fmul
and
sub
mov
mov
add
lea
cmp
inc
push
gs
pop
jmp
pop
lods
out
mov
jne
stc
jno
xchg
inc
xchg
movsl
cs
inc
and
cmpsb
add
mov
jecxz
lods
insb
push
add
iret
add
sub
in
inc
jecxz
dec
adc
hlt
lea
testl
fcmovnb
sbb
imul
push
repnz
add
sub
add
lods
xorb
adc
add
cmp
add
and
mov
cmp
addr16
repz
fstpt
adc
sub
xchg
iret
and
cmp
pop
cmp
mov
mov
mov
out
cmp
push
mov
fwait
adc
inc
fcoms
into
inc
loopne
loope
push
hlt
fwait
js
inc
jne
mov
or
fcompl
xchg
out
daa
xor
imul
xchg
aad
dec
mov
jo
je
fisttps
out
cmpsl
insl
dec
inc
dec
lcall
clc
dec
cmpsb
fimull
in
mov
inc
mov
push
aam
divb
jo
scas
sub
dec
cmp
inc
dec
push
jnp
pushf
ja
xchg
movsl
mov
sbb
imul
mov
aam
insl
ljmp
sub
push
push
dec
inc
inc
mov
imul
and
cmpsb
and
jg
iret
movsb
inc
inc
sbb
js
mov
cmpsb
cmp
xor
out
nop
enter
imul
push
mov
sbb
and
cmpsl
inc
push
bound
mov
rcrb
sub
bound
fisubs
rcl
push
sub
sbb
add
jl
js
scas
cltd
mov
loopne
xor
jle
inc
test
mov
cmpsb
aam
mov
pop
aas
les
inc
cmp
dec
je
jnp
or
aam
mov
mov
push
imul
xrelease
adc
in
and
ss
in
xor
sbb
mov
add
mov
pop
sub
fidivrs
clc
sub
add
arpl
not
pop
push
jno
daa
xchg
sbb
icebp
and
mov
mov
adc
clc
jne
cmpb
js
fadds
in
lret
or
daa
lds
test
mov
in
movsb
push
sbb
mov
jecxz
data16
rorl
xchg
leave
test
shrl
jg
xchg
push
fsubrs
dec
xchg
sub
shll
movsb
push
cmp
ja
xor
or
inc
outsb
imul
ret
adc
or
add
fs
sbbb
sbb
cmp
lcall
add
mov
dec
mov
mov
je
dec
xchg
sbb
in
jg
and
mov
or
out
xchg
add
shlb
xchg
test
xchg
and
pop
xchg
test
mov
insb
fsubrs
xlat
int
rcr
and
mov
in
dec
dec
test
cwtl
or
shll
in
xchg
insb
repnz
sbb
sbb
lds
mov
add
sti
mov
rorl
arpl
jno
in
push
sub
mov
adc
cwtl
ret
notb
jne
pop
mov
sbb
test
cmp
call
je
xchg
push
sbb
lea
lock
inc
xchg
js
bound
sub
dec
aad
pusha
ds
pop
lods
mov
sub
jb
enter
mov
call
cmp
ljmp
and
scas
test
out
test
daa
sahf
cmpsb
and
xor
mov
adc
lahf
std
add
outsb
std
and
pop
mov
cld
data16
sbbb
imul
mov
mov
mov
ret
sub
lea
dec
sahf
add
out
or
out
lret
xor
adc
pop
mov
ja
adc
dec
adc
pop
sbb
pop
add
sbb
xchg
in
push
push
out
aaa
fwait
fs
cmpsl
ja
add
outsb
test
push
js
test
mov
push
dec
mov
fs
ljmp
mov
je
add
adc
cmp
psrlq
stc
cmp
or
out
enter
add
loope
pop
xor
mov
popf
mov
clc
in
test
cmpsb
call
lods
cmp
cmpsb
icebp
jb
dec
push
add
nop
and
mov
loope
pop
sbb
jb
push
negb
sbb
or
dec
jnp
sbb
pop
aaa
jns
mov
rcrl
rcrl
mov
repz
aad
add
push
push
push
mov
lea
xchg
jae
cmp
jb
mov
movsl
popf
push
addr16
mov
addr16
mov
insl
push
movsl
jae
lret
sub
lods
out
xchg
cmp
fdivs
pop
and
mov
mov
dec
cmc
cmc
sub
in
js
in
sahf
outsl
jbe
mov
pusha
cwtl
mov
pop
imul
out
mov
imul
aaa
ffreep
push
jne
es
imul
nop
and
mov
fsubrs
jns
imul
stos
add
ds
or
cmp
cs
pusha
mov
aaa
mov
xchg
insb
mov
loop
sub
out
loope
and
xor
in
lods
add
loope
lcall
aas
lret
fsubr
dec
push
sbb
cmp
xor
cmpsl
mov
fwait
int
pop
or
and
sahf
test
add
repz
xchg
sar
inc
add
sahf
sub
add
mov
lods
rcrl
out
outsl
fcomip
and
test
pop
inc
test
call
sbb
ret
pop
sbb
scas
mov
andb
xor
inc
mov
mov
or
loope
adc
out
sub
xor
movsl
sbbb
pop
mov
pop
jle
jecxz
scas
popf
fnstcw
hlt
jne
add
sub
scas
cmp
pop
pop
sub
cmp
repnz
sbb
xor
rcll
sbb
mov
mov
and
sub
repz
dec
in
test
inc
fildll
xchg
sub
js
popa
icebp
enter
push
bound
push
movsl
fists
dec
mov
inc
and
imul
insl
arpl
dec
ss
add
xor
xor
mov
test
rcrl
sti
pop
sub
xor
inc
inc
jg
ror
fnstsw
sahf
xchg
clc
popa
shrl
cwtl
mov
xlat
hlt
xor
rcll
jmp
scas
pop
or
adc
cmp
cmpb
lcall
mov
adc
sub
rcrb
adc
adc
int3
pop
shll
push
and
nop
fcoms
rorl
pop
js
add
lea
notl
dec
inc
mov
fstl
dec
dec
int3
and
cld
cli
push
mov
adc
pop
lock
pop
ficoml
into
push
mov
lods
aad
aaa
popa
pop
mov
movsl
fcoml
sti
adc
imul
adc
or
stos
mov
std
cmp
cmpsb
mov
mov
fidivrl
sti
popa
xchg
daa
scas
sub
xchg
cmpsl
inc
add
scas
pop
sti
inc
shll
nop
lds
jbe
sub
test
loope
fsubrl
aaa
jno
sbb
rclb
hlt
push
mov
xchg
aas
jbe
mov
ret
filds
cmc
jmp
sti
sarb
mov
movsl
cli
jae
loopne
adc
jae,pn
mov
lret
sub
test
aaa
pop
lea
add
daa
push
je
ss
inc
mov
push
xor
cltd
add
clc
mov
pop
mov
rcrl
and
pop
insl
sbb
inc
je
mov
clc
ret
mov
mov
cmp
dec
jnp
pop
cmp
je
jp
sub
es
insb
mov
lcall
stos
ret
mov
mov
jno
mov
jl
and
jge
xchg
jne
sub
aas
adc
push
mov
shl
icebp
lock
cmp
mov
adcb
sub
fstps
jns
push
and
xor
push
adc
xlat
cltd
mov
xor
fisubl
add
in
dec
scas
repnz
stos
movsl
or
mov
shrl
or
leave
inc
scas
adc
pop
cltd
int3
mov
lgs
in
xor
rolb
arpl
or
mov
xor
into
dec
div
cltd
out
fsts
pop
negl
xchg
xor
xchg
pop
dec
cwtl
jne
pop
lcall
call
add
cs
inc
lcall
orl
push
iret
mov
dec
cltd
fistl
insb
cmp
ret
int3
gs
mov
pop
mov
jmp
mov
icebp
xchg
push
lods
inc
mov
call
mov
call
jb
cmp
push
and
jns
xchg
add
stc
es
fwait
jbe
cmp
icebp
add
sbb
add
sub
pop
clc
popf
lods
xchg
or
mov
pop
in
ss
call
inc
in
inc
mov
imul
pop
xchg
addr16
xorl
mov
outsl
dec
push
adc
sbb
sbb
mov
mov
mov
pop
mov
insl
outsb
sahf
jb
xorl
inc
aam
xor
lcall
mov
xchg
jbe
test
test
mov
stos
jnp
into
and
aad
mov
stos
and
mov
fbld
call
nop
stc
es
sarb
lods
mov
nop
pop
mov
aad
add
add
jns
or
push
rcr
jo
test
pop
sbb
loop
sbb
icebp
push
jmp
mov
adc
sti
push
data16
xor
jp
push
pop
jge
cmp
mov
push
mov
andl
jae,pn
or
xchg
push
into
add
jecxz
adc
mov
btl
sbb
jns
insb
pop
fisttpl
divl
mov
jl
jno
test
sahf
jg
sarb
imul
dec
jge
add
fimull
pushf
into
lret
cmp
jp
jle
into
jae
adc
std
inc
outsb
mov
xor
clc
mov
stos
pushf
int3
ret
cmpsl
pop
cli
lds
or
inc
cs
push
int
pop
dec
or
aaa
iret
xchg
ret
xor
daa
mov
inc
into
mov
icebp
sbb
sbbb
insb
or
sti
sub
ss
ss
lods
stos
inc
loope
popa
xor
adc
cs
mov
outsb
bound
lret
mov
jns
lods
push
sbb
xchg
xchg
jmp
imul
cmc
jae
call
inc
mov
mov
shlb
test
or
aaa
repnz
je
pushf
idivb
jg,pt
xchg
shll
or
dec
pop
and
pusha
sbb
rcrl
and
fstpt
push
cli
dec
pop
mov
icebp
loopne
icebp
mov
or
mov
sti
jb
popf
and
lret
push
fidivrl
sti
xor
xchg
jnp
or
mov
popf
js
imul
dec
cmp
dec
aaa
imul
pop
xchg
lahf
and
pop
cmpsl
push
pushf
loop
iret
adc
aam
add
adc
mov
movsl
jmp
push
nop
mov
adc
insb
push
cmp
push
repz
fildl
movsl
jecxz
cmc
dec
and
fadds
push
out
sahf
pop
jb
cltd
test
stos
push
mov
dec
hlt
xchg
roll
add
xor
jle
ret
ficoms
rcl
ret
in
cltd
mov
call
call
sub
imul
in
decb
insb
cmp
lods
fs
movsb
movl
pop
mul
outsl
xor
cwtl
mov
xchg
incl
cmp
fstl
fbld
adc
mov
arpl
ficoml
sti
mov
dec
cmpsl
int3
xchg
xlat
loope
sbb
cmp
adc
sub
mov
mov
jae
mov
pushf
cmp
loop
out
mov
movsb
cmp
pop
xor
jecxz
xor
lcall
jo
cmp
mov
cs
inc
lock
dec
and
inc
pop
pop
in
sbb
mov
aad
mov
call
push
addr16
out
adc
cmp
aad
xor
xchg
jnp
pop
mov
xchg
or
mov
scas
mov
cmc
in
xor
push
adc
mov
or
popf
int3
sbb
mov
je
test
std
jmp
daa
ljmp
mov
pop
out
iret
xor
push
dec
scas
fcom
mov
mov
mov
jg
pop
std
xchg
dec
dec
fmull
aas
lods
aam
pop
mov
dec
pushf
pop
sub
and
xchg
lahf
inc
adc
loope
stc
xor
ljmp
mov
enter
or
and
popf
cld
ja
call
mov
movsl
mov
shl
dec
int
sbb
add
leave
cmpsl
out
inc
out
mov
aad
and
pop
jbe
pop
inc
add
popa
cs
mov
push
adc
adc
imul
mov
hlt
push
int
xchg
fchs
out
and
dec
movsb
cmc
lods
fcompl
pop
adc
sahf
roll
mov
jl
and
sti
push
jge
mov
loope
pop
inc
fistl
insb
test
mov
sub
adc
inc
pusha
movsl
mulb
insb
pop
xor
mov
and
loopne
push
int3
xchg
mov
push
outsl
dec
out
cli
out
xchg
push
hlt
xor
aad
and
cmpsl
xor
and
sub
xchg
cld
sbb
test
test
orl
out
popa
out
sbb
pop
ja
repz
or
fistl
pop
push
ljmp
cmc
vcmpps
gs
xchg
cmp
pop
cltd
jl
insb
mov
cmp
call
fdivrl
fiaddl
test
lea
sbbl
cmpsb
cs
lret
xlat
sbb
sbb
mov
aaa
pop
mov
and
jle
xchg
leave
rcrl
test
leave
into
ljmp
or
cld
pop
out
jae
inc
push
sbb
pop
repnz
enter
xchg
dec
push
xchg
shrl
push
clc
fs
mov
adc
jno
mov
push
pop
sbb
mov
cmp
ret
jmp
movl
hlt
fistl
stos
sarl
nop
or
push
fnstcw
and
cmp
or
movsl
sub
jle
test
cmp
inc
outsl
lock
imul
std
push
ja
outsb
push
mov
and
pop
loopne
xor
je
inc
push
cmp
cmp
mov
mov
roll
xchg
add
test
enter
addr16
fstpt
or
jl
jp
mov
movsl
out
clc
or
mov
stc
repnz
sub
mov
loop
mov
xor
mov
sbb
stos
xchg
push
mov
test
inc
divb
rcrb
or
xchg
sub
xor
call
pop
or
push
ss
pop
je
push
movsl
enter
sbb
repz
stos
test
push
std
mov
scas
or
imul
jle
in
repz
clc
sub
mov
sbb
int3
repz
dec
roll
mov
xchg
icebp
xor
xchg
cmp
std
push
push
pop
lods
fidivrl
mov
pop
ficoms
insl
jnp
xchg
aaa
or
fidivl
xor
cmpsl
imulb
loope
mov
jnp
fcomps
daa
push
xchg
xchg
pop
xchg
cwtl
mov
ret
mov
mov
jns
lods
xor
andb
and
repnz
push
add
and
jbe
movsl
mov
fst
add
cmpsb
mov
push
mov
mov
sub
xchg
popf
push
mov
movsb
add
fwait
int3
imul
repz
out
insb
ss
aas
neg
pop
mov
loopne
sbb
loopne
pop
jbe
into
loopne
or
xchg
adc
outsl
sbb
inc
push
mov
xlat
pop
xor
popf
insb
cltd
pushf
cmovns
dec
xchg
lock
addr16
aad
cmp
ds
cli
shrb
cmc
xchg
cmc
sub
or
in
add
mov
fs
mov
jo
adc
std
inc
pop
and
mov
mull
mov
test
mov
movsl
xchg
dec
aas
ljmp
enter
mov
pushf
sbb
scas
imul
jp
jb
lods
sbb
mov
and
mov
test
jmp
cmc
lret
std
adcl
inc
fcmove
es
and
jg
jl
sbb
mov
add
push
in
js
mov
inc
sbb
inc
push
mov
repz
out
adc
mov
push
add
loope
das
mov
xchg
cmpsl
xchg
xchg
pusha
out
ret
push
cmpsl
xor
or
push
ficoml
jb
int
xchg
fstps
cmp
pop
lods
in
sahf
stos
dec
mov
dec
movsb
dec
fbld
sub
push
mov
dec
adc
mov
imul
push
xor
sbb
repnz
insl
xor
fsubrs
imul
daa
jmp
je
sbb
jae
pop
out
push
cmc
sub
push
ret
js
cli
in
lods
mov
and
sahf
push
imul
adc
or
leave
into
add
mov
adc
jno
arpl
fcoml
mov
xchg
shl
insb
fdivs
adc
pop
testb
xor
enter
jle
leave
test
test
cltd
test
loope
sub
xor
call
or
mov
fistpl
adc
stos
push
jae
fdivs
pop
jg
mov
xchg
fisttps
sbb
rolb
cmp
pop
mov
js
sub
adcl
sbb
clc
scas
cmc
jbe
loope
daa
lahf
mov
and
into
fiaddl
subl
mov
idivb
mov
lods
stos
and
cmc
mov
xchg
aaa
pusha
scas
xor
outsl
cmp
dec
fadds
addr16
fisubrs
rolb
aam
jnp
jae
jns
pop
mov
mov
jg
movsb
scas
mov
sbb
xchg
pop
ds
xlat
std
lods
xchg
adc
and
fcmovne
and
cmp
xor
cwtl
or
out
das
das
pop
pop
dec
inc
adc
popa
cmc
xor
xorl
gs
push
push
imul
data16
aaa
movsb
arpl
jne
mov
inc
or
pushf
cmp
push
push
pop
mov
lret
pusha
push
sub
jge
jne
dec
push
fadds
pop
aam
ja
push
in
mov
sbb
xchg
fs
add
xchg
mov
dec
inc
push
outsl
popf
and
inc
rcll
out
sbb
jmp
sub
and
mov
and
sbb
jp
and
add
jecxz
clc
fldl
call
pop
arpl
leave
decl
inc
scas
mov
ja
push
mov
cwtl
inc
add
cmp
and
dec
in
arpl
xchg
push
mov
mov
adcl
cld
dec
cmc
or
ds
mov
cld
mov
cmpsl
cli
je
ret
jg
xchg
add
xchg
pop
popa
ljmp
es
out
cmp
int3
sbb
test
push
adc
popf
pop
pop
aas
pop
mov
cmp
lcall
outsb
cmp
pushf
and
out
jne
sbb
dec
xchg
pop
movsl
xchg
mov
mov
add
shlb
mov
add
fucomp
mov
jno
div
nop
jecxz
xchg
test
cmpsb
cld
dec
xchg
call
pop
pop
lahf
mov
or
data16
or
inc
dec
les
repz
sub
fimull
pop
mov
cmp
jecxz
stos
and
cmp
aam
push
enter
adc
fs
cld
inc
stos
mov
int3
xchg
cmc
movsb
lahf
andb
test
roll
mov
in
cmc
int
aaa
sbb
or
sahf
in
or
adc
bt
rcrb
xchg
lret
adc
jle
adc
mov
mov
mov
ret
stos
and
cmp
cmp
mov
add
jns
in
cmp
test
dec
jnp
repnz
pop
push
mov
es
jmp
out
or
add
fisubrl
adc
mov
or
pop
push
outsb
testl
ss
pop
fiadds
xchg
nop
insb
mov
data16
pop
mov
mov
mov
pop
lret
out
xchg
pop
out
pop
push
sub
sub
and
mov
adc
cltd
mov
xchg
cwtl
mov
inc
ret
cld
sub
push
add
sbb
inc
jno
call
ret
or
addr16
pop
movsl
inc
push
pop
les
aad
sbb
popa
fcmovb
xlat
in
cwtl
push
jmp
pop
cmp
ds
mov
jge
repz
cmp
cwtl
push
pop
pop
repz
movb
cmc
sbbb
cmp
mov
cmp
sbb
test
pop
sub
icebp
cs
test
cmp
and
hlt
or
xchg
test
lahf
jbe
xchg
rorl
xchg
jno
les
push
mov
js
mov
cmpsl
add
idivb
mov
popa
rcll
sub
jecxz
cltd
push
jb
stos
sar
fsubrl
hlt
iret
cmp
xchg
xchg
mov
repz
adc
movsb
iret
push
xchg
or
mov
and
scas
jne
mov
dec
loop
xor
call
jb
and
fidivs
push
mov
shll
dec
jbe
sub
lret
add
in
mov
jp
imul
inc
sbb
cmp
xchg
into
inc
xchg
mov
cmc
mov
push
imul
sbb
adc
and
not
test
sub
inc
dec
dec
sbb
jp
ffreep
and
stc
xor
mov
das
dec
dec
sub
insb
es
inc
cmp
inc
movsb
jmp
pop
push
test
mov
jno
jecxz
aam
and
addr16
jns
sbb
add
int3
push
cmpsl
cwtl
dec
sub
and
aam
or
mov
mov
loope
pop
cmpsb
jle
push
cmp
xor
addb
push
push
fadd
dec
cltd
jae
push
pop
lods
outsb
mov
fcoms
fwait
xor
mov
je
fsubrs
or
imul
mov
jge
pop
gs
addr16
jnp
imul
mov
addr16
mov
mov
scas
dec
push
push
jg
jecxz
mov
scas
mov
lret
sbb
xor
xchg
shrb
pop
stos
stos
ficompl
lcall
es
bound
push
pop
int3
adc
lock
mov
movsl
dec
jne
sub
add
xchg
and
popa
xchg
and
sbb
insl
mov
jb
sbb
repnz
nop
lods
xchg
xor
mov
xor
pop
mov
sbb
pop
aam
jnp
and
cmp
jp
stc
mov
lret
sbb
sub
je
cmp
or
jle
add
cmc
lahf
push
out
mov
dec
imul
dec
cltd
push
cmp
fimuls
in
in
das
dec
pop
divb
xor
mov
nop
out
jno
fisubs
cmp
scas
mov
shrb
popf
addr16
push
cmp
add
inc
andb
sub
pop
cs
mov
mov
ficompl
inc
inc
mov
icebp
pop
js,pt
lcall
or
xchg
or
adc
mov
notb
es
test
sti
sbb
hlt
dec
outsl
cs
bnd
fs
outsl
xor
in
inc
adc
jg
add
ljmp
mov
lea
out
cli
int3
sbb
adc
push
jns
cmp
rol
sub
jmp
cmpb
sub
adc
xor
test
and
cmpsb
inc
fdivrs
cmp
jecxz
mov
mov
jbe
sbb
sub
nop
loop
xchg
push
xchg
cltd
add
xchg
inc
cmp
clc
rclb
sbb
sub
ja
je
ja
push
push
jne
std
jo
xchg
gs
ror
aad
dec
dec
ljmp
push
add
lock
and
mov
shrl
mov
gs
mov
jmp
and
pop
adc
pop
loope
xchg
imul
dec
lahf
sbb
xor
mov
jle
inc
jg
and
adc
pop
add
add
push
insb
mov
test
lahf
mov
lds
imul
fucomi
push
sub
xchg
mov
int3
daa
mov
test
xor
or
nop
add
and
push
sbb
adc
push
adc
dec
push
out
push
mov
or
in
mov
push
out
inc
out
icebp
or
nop
pushl
sub
push
mov
hlt
call
daa
or
cmp
outsl
xchg
xchg
cmpsb
pop
xor
ficoms
bound
mov
shlb
ret
cmp
subb
mov
cmp
sbb
mov
push
cmpsl
push
cli
fprem1
gs
xchg
xchg
movl
or
stc
hlt
stos
aas
repz
jbe
jb
pop
mov
negb
xor
test
orb
mov
or
ljmp
cmovns
je
sbb
sbb
mov
xor
pop
fxch
sbb
leave
hlt
jo
pop
push
mov
pop
push
fimuls
jmp
or
lahf
test
or
imul
js
fadds
mov
and
test
pop
mov
daa
sub
mov
int
imul
pop
in
adc
sbb
mov
andl
mov
inc
cmp
int3
loop
cld
mov
and
xchg
in
push
or
sbb
ret
fs
and
xor
jnp
pop
add
aaa
mov
dec
push
insl
mov
cmc
cmp
add
push
inc
imul
mov
mov
fucomip
jge
sub
mov
aaa
fmuls
icebp
fdivl
loopne
cmp
push
xor
mov
inc
scas
push
push
fistl
sub
outsl
in
xchg
push
int
cmp
mov
mov
outsb
xor
dec
cs
add
xchg
dec
iret
cmpsl
add
in
icebp
sti
push
jbe
test
scas
popa
sub
pop
ljmp
xor
adc
gs
add
add
cs
nop
xchg
pop
pop
pop
ret
stos
shlb
shl
jecxz
jo
pop
push
and
jns
mulb
stc
fisttps
mov
clc
xchg
sti
shrb
mov
fists
cmp
xorl
inc
mov
inc
xor
mov
push
sub
push
fwait
or
icebp
xchg
and
xlat
add
adc
inc
les
leave
bound
sbb
sti
xchg
xchg
out
sbb
add
cltd
hlt
scas
inc
js
mov
les
pop
or
or
lahf
insl
xchg
popa
das
adcb
loope
cmc
sbb
scas
sti
pop
imul
mov
xor
lds
les
in
dec
popl
das
pop
insb
arpl
xchg
and
movsl
jge
insb
enter
fcmovbe
sbb
adc
inc
cmp
movsb
push
and
daa
xchg
jmp
sub
arpl
jno
mov
test
add
in
and
and
mull
leave
das
loopne
popf
sarb
cmpsl
xorl
cltd
mov
in
push
jnp
enter
arpl
xor
int
cltd
pop
pop
mov
sub
push
push
adc
cmp
lea
jne
mulb
dec
dec
push
mov
pop
mov
dec
pop
mov
adc
jne
adc
mov
push
clc
scas
jbe
mov
mov
xchg
dec
icebp
cmpsb
call
popa
inc
lock
add
and
stc
adc
and
jae
sbb
movsb
cs
dec
leave
xor
sbb
sub
jecxz
xor
insl
adc
out
push
das
cmp
mov
and
inc
pop
and
inc
jecxz
out
pusha
lock
mov
int3
cmp
dec
jp
mov
lods
and
insl
rorb
dec
mov
scas
and
xlat
dec
lds
data16
hlt
xchg
adc
fmuls
adc
inc
movsb
and
vpmacssdqh
setnp
push
scas
leave
adc
jp
inc
push
stos
addr16
mov
pop
je
lea
aam
xchg
cmc
iret
cmp
aam
ficomps
icebp
test
jg
js
push
shl
and
sbb
nop
repz
ret
xor
mov
pop
jecxz
dec
xchg
push
pusha
repz
pushf
ljmp
push
push
movsb
shll
pop
push
pop
cmp
xlat
stc
cmpb
cwtl
in
call
std
or
push
pop
cltd
ljmp
sub
cmpsl
push
fdivrl
xlat
sub
aad
call
mov
adc
imul
mov
sbb
and
lcall
int
dec
sbb
call
or
mov
in
add
jge
inc
mov
jmp
inc
mov
mov
inc
push
incl
xchg
pop
insb
ss
push
js
and
mov
mov
push
sub
jp
mov
mulb
sbb
bnd
mov
xchg
sbb
pop
jae
mov
pop
jl
or
pusha
xor
fcompl
jl
cmpsl
addl
push
mov
fsts
fldl
cmpsl
aam
mov
xor
outsb
ret
push
cmpsb
xchg
dec
sbb
ja
sbb
fimull
pop
cmp
popa
adc
aam
test
jecxz
repnz
jle
cmp
stc
mov
mov
cmp
cmp
rcll
in
je
sbb
out
jecxz
clc
mov
rcl
cmpb
xchg
xchg
sub
cli
adc
cmp
xor
or
imul
mov
jbe
imul
push
rclb
pushf
pop
sub
rorl
add
mov
adc
and
cmc
pusha
inc
movb
add
mov
cmpsb
faddp
dec
sarl
pop
ror
cmp
adc
outsb
and
insb
rcrw
push
imul
test
xchg
insl
out
adc
pusha
jp
fsub
jo
push
les
or
sub
icebp
insl
cmp
push
cwtl
sub
pusha
pop
adcl
jp
inc
or
pushl
adc
aaa
leave
in
cmp
mov
xchg
cltd
cmp
jmp
lds
or
sbb
or
fistpll
mov
pop
rorl
or
pop
ljmp
leave
cmp
pop
imul
aas
icebp
hlt
push
sbb
into
shl
dec
insb
inc
rorb
xchg
sub
xchg
xchg
aam
rcrb
scas
pop
rcrb
mov
push
or
and
sub
daa
sti
fcompl
cwtl
push
inc
push
arpl
xchg
out
cmp
or
popf
jae
cld
jecxz
pop
rcrl
mov
jns
and
sbb
jle
cmpsb
leave
nop
xchg
xor
mov
pop
cltd
test
adc
mov
lods
mov
dec
dec
mov
movsb
lahf
mov
mov
or
sti
jl
push
add
cld
pusha
mov
sub
xchg
dec
stos
xchg
int
addr16
sahf
mov
aam
clc
add
repz
push
stc
ret
addr16
je
pop
mov
xchg
les
cwtl
xchg
in
mov
pop
and
daa
sahf
jle
fs
inc
inc
and
gs
push
les
out
mov
test
fwait
xor
testb
pop
ljmp
lahf
or
scas
loopne
inc
and
dec
inc
pop
xor
mov
push
je
or
mov
mov
push
add
dec
cmp
hlt
dec
mov
mov
push
jmp
jp
or
mov
imull
pop
sbb
jnp
and
push
fdivr
adc
mov
in
push
or
jo
mov
ss
lea
jl
fcmovu
cld
sahf
jnp
inc
popa
mov
dec
cli
lcall
push
or
repnz
shl
fists
and
les
jge
pusha
pop
jecxz
scas
cmp
aaa
cmp
sbb
popf
pop
push
stos
popf
adc
add
sub
ret
cli
fcoms
add
lods
xchg
sar
mull
inc
cmp
xchg
ljmp
dec
inc
fsubl
bound
int
add
sub
int
mov
push
adc
test
xchg
xchg
sti
sub
jno
movsl
cli
pop
xchg
cwtl
jecxz
addr16
push
jo
lods
fmuls
push
pop
and
jo
inc
cmpsb
lds
lea
add
or
clc
loop
pushf
iret
push
enter
cld
decl
push
fwait
xchg
call
cmp
cmp
ret
cld
mov
andl
sbb
push
mov
and
push
int3
fnstsw
mov
addr16
inc
sti
mov
xchg
pop
sub
mov
xchg
ljmp
mov
inc
cmpsl
push
iret
push
lea
movsl
dec
cmp
inc
js
test
sahf
mov
sbb
sub
and
aaa
das
test
enter
arpl
or
and
aam
sbb
jb
iret
sbb
inc
adc
in
sbb
ja
xchg
pop
sarb
mov
inc
mov
push
sbb
popa
cli
push
jne
andb
ss
xchg
gs
mov
lret
sbb
push
push
sub
xchg
dec
addr16
outsl
sbb
or
int
fwait
or
mov
lock
iret
push
stc
xchg
sbb
mov
nop
and
dec
pop
dec
and
inc
sub
divl
adc
sub
cmpsl
ja
seto
pop
sti
jle
pop
xor
or
loope
add
add
ds
shlb
lcall
fdivrl
clc
or
ret
addr16
adc
negl
in
pop
dec
add
lahf
outsb
or
xchg
cmpsb
add
mov
push
jnp
dec
and
out
cmp
ret
pop
dec
cmpsl
lahf
stos
scas
pop
cwtl
test
add
dec
imul
in
nop
adc
stc
fsub
bound
shlb
aad
cwtl
pop
loopne
lahf
push
sub
lret
sub
or
iret
push
cmp
xchg
pusha
mov
ja
sbb
pop
jmp
mov
dec
and
aad
lret
add
ficoms
push
es
mov
add
xchg
gs
push
in
lock
xchg
cmp
push
mov
sbb
outsb
inc
inc
and
mov
adc
mov
jle
inc
and
xor
cmpsl
inc
push
and
dec
mov
in
das
subl
adc
or
sbbl
or
ror
lods
in
mov
iret
sub
cmp
scas
js
pop
daa
int3
mov
pop
pusha
iret
lods
add
sbb
push
mov
adc
pusha
xor
test
cmc
add
icebp
movsl
int3
mov
xor
bnd
outsl
insb
repz
xchg
ljmp
iret
fs
fwait
jg
testb
push
sub
lods
jge
imul
pop
add
dec
sti
dec
jge
mov
jnp
bound
xor
mov
jne
lea
test
sbb
dec
jl
mov
repnz
imul
inc
sbb
or
out
ja
pop
xchg
fimuls
data16
adc
shrl
push
sbb
or
push
fwait
lahf
nop
sbb
mov
add
insl
and
xor
jb
enter
stos
ret
lock
inc
dec
or
xchg
out
inc
adc
jecxz
push
xchg
dec
mul
jnp
movsb
mov
sub
shll
into
mov
sbb
bound
mov
cs
fwait
jp
mov
int
mov
jo
add
lret
es
mov
inc
scas
out
sub
jae
mov
push
adc
push
test
jl
mov
and
test
pop
loopne
enter
mov
pop
push
and
inc
negl
fs
lret
add
xchg
pop
imul
aaa
repnz
roll
add
pop
mov
dec
lds
jmp
mov
xchg
lock
sbb
fisubrs
sub
push
jnp
and
scas
mov
scas
pop
loopne
cs
pop
pop
or
push
bound
mov
sub
ljmp
mov
jg
xchg
add
iret
mov
xchg
pop
dec
or
jne
clc
or
rol
test
jle
pop
lcall
arpl
insl
push
lock
shrb
add
cmp
inc
pop
fidivs
popf
jmp
loope
fimuls
pop
ljmp
push
sarl
into
into
pop
and
iret
push
xchg
ficomps
inc
xor
cmp
fcoms
xor
cmpsb
dec
fmull
jbe
add
or
jb
add
pusha
inc
sbb
xchg
xchg
mov
or
xor
mov
sar
pusha
sbbb
loope
jl
js
enter
iret
mov
stc
sub
int3
ret
jge
int3
push
cli
push
mov
xchg
pop
sub
and
hlt
xchg
lods
int
inc
xor
out
mov
xchg
sbb
aam
jnp
sahf
loop
or
mov
and
rcr
incl
pop
iret
pushf
xor
adc
inc
test
int3
int
adc
xor
add
dec
mov
or
data16
mov
mov
imul
mov
add
pop
scas
jmp
xlat
push
test
sbb
enter
dec
xchg
jle
dec
inc
aad
ficompl
and
imul
inc
and
adc
xchg
jecxz
sub
jg
call
xchg
cmpsb
outsb
das
dec
scas
outsw
testb
mov
pop
push
rcr
push
mov
push
or
pop
push
bound
test
and
ret
xchg
or
mov
add
clc
loope
lret
cmp
aad
cmp
stos
stc
cmpsb
loop
mov
ss
pop
punpckhdq
ja
insb
sbb
movl
int
dec
popf
testl
sub
in
lret
pop
ficoml
insb
mov
jle
faddl
ret
mov
insl
shll
cmpsl
push
fcmovbe
pop
into
fdivrp
arpl
fstl
mov
popf
pop
hlt
stos
sub
sbb
popf
jg
es
mov
loop
xor
xchg
adc
negl
inc
dec
or
push
imul
and
or
pop
jg
enter
add
xor
jo
xchg
jnp
mov
dec
ja
adc
pop
decl
or
mov
inc
adc
cmp
or
xchg
pop
push
ds
mov
cmpsb
jo
push
mov
clc
mov
mov
adc
jbe
loopne
sub
mov
lret
nop
xchg
push
nop
mov
jno
out
std
sti
into
shlb
rcll
push
dec
inc
shl
mov
xor
popf
leave
pop
in
inc
cmp
pushf
insb
or
stc
mov
mov
mov
xor
bound
dec
jo
jno
adc
mov
rcr
mov
imul
jl
dec
xchg
xor
shll
rcrb
insl
repnz
ds
xor
inc
data16
mov
dec
jle
push
jae
imul
arpl
pop
push
xor
push
push
das
fildll
mov
sub
jnp
ljmp
and
mov
lock
jecxz
pushl
and
cmpb
xchg
push
adc
out
push
add
rol
rolb
jle
add
adc
cld
xor
xchg
stos
pusha
push
fwait
jge
xor
jb
fimuls
movsl
and
mov
mov
push
dec
arpl
ds
push
dec
in
test
jmp
adc
les
pop
scas
pop
jnp
ja
lcall
scas
cmp
jns
jno
in
lods
repz
lahf
arpl
lock
sti
pusha
sub
mov
idivl
imul
adc
imul
sbb
into
lds
pop
aas
cmpsl
movsl
ja
fdivr
mov
or
ret
xchg
adc
xchg
xor
and
fwait
xor
hlt
jl
and
mov
pop
in
mov
stos
inc
mov
mov
mov
jge
jecxz
cs
ljmp
jns
popa
fmul
or
add
cmovge
push
sarl
sarl
repnz
pop
cltd
xchg
xor
rclb
sub
les
xchg
imul
ret
mov
add
mov
pop
stos
sub
lea
movsb
add
outsb
lods
cs
jmp
les
test
mov
ficoml
mov
rorl
insb
inc
lcall
sub
mov
jnp
pop
push
outsl
fimull
pop
cmp
dec
sar
ret
jne
lods
cmp
mov
push
int3
cltd
push
ljmp
repz
pop
cmp
inc
mov
aam
stc
insl
mov
sbb
sbb
rolb
or
mov
lock
inc
push
outsl
icebp
add
icebp
sti
xchg
mov
jg
imul
add
lods
jno
inc
fsub
push
mov
jecxz
dec
ret
nop
test
sub
jg
or
adcl
mov
test
repz
rclb
cmpb
jno
adc
mov
and
push
fs
cld
loope
cmp
jge
hlt
ret
leave
addr16
sub
out
pop
adc
push
stos
ret
aaa
in
lods
repz
add
xchg
cmc
jmp
inc
les
lods
sar
jb
es
in
es
mov
outsb
inc
add
and
xchg
icebp
adc
mov
pushf
clc
jle
xor
pop
repnz
and
pop
movsb
inc
je
orb
cmc
out
sti
cmpsb
cli
femms
lock
enter
ljmp
inc
jns
xor
fnsave
xor
inc
imul
enter
aaa
push
ja
sbb
insl
jb
lea
or
fisubrs
movsl
inc
jp
movsb
and
mov
push
int
aaa
fwait
jns
cmp
lret
or
pop
fdivrp
fcoms
notb
cmp
cmp
clc
pushf
pop
pop
fcmovnu
push
and
adc
jbe
xchg
dec
push
addr16
in
int
mov
xchg
push
fcompl
aaa
cmp
xchg
imul
mov
cmpsl
sbb
iret
xor
cmp
jge
pop
out
popa
cmp
aam
pop
rorw
cmp
pop
sub
lcall
adc
incl
movsl
xchg
adc
mov
push
ret
mov
mov
dec
mov
sarb
adc
or
es
xchg
std
jl
mov
xor
xor
xchg
push
testl
arpl
adc
jp
aaa
sub
out
mov
popa
push
jae
dec
push
xchg
stc
xchg
addr16
inc
push
outsb
adc
icebp
adc
fcompl
sti
pop
sbb
mov
mov
sbb
stc
int
fnstsw
push
es
aas
xor
pop
cld
add
mov
aad
cmp
xchg
test
and
icebp
mov
fcomps
scas
mov
fwait
aad
sahf
in
mov
or
fcoml
or
mov
add
ss
loopne
ljmp
push
mov
insl
out
xorb
loope
mov
mov
movl
inc
xchg
or
add
cmp
insl
imul
jns
push
fstl
jns
mov
fistpl
dec
popf
clc
sub
aad
cmp
jb
or
sbb
adc
fcomps
jnp
aaa
fstpt
jle
ret
cltd
cs
lcall
shrb
sahf
mov
fcoml
scas
sbb
pop
mov
out
mov
adc
mov
mov
rorb
or
inc
js
out
inc
cld
mov
jl
xchg
pop
mov
mov
sbb
lods
xlat
nop
add
sub
xor
lcall
imul
jle
inc
pusha
jbe,pn
hlt
adc
mov
lahf
adc
ss
add
push
push
pop
ficomps
mov
xor
jge
inc
out
pop
mov
gs
inc
lock
pusha
ljmp
imul
outsb
mov
cmp
in
adc
or
xor
movsb
push
dec
cld
sarb
sbb
rorl
in
jbe
bound
jp
cmc
imul
js
push
mov
or
mov
sahf
jmp
in
mov
sub
enter
xchg
icebp
sbb
cs
inc
mov
mov
fwait
out
aad
pop
push
ss
outsb
sbb
sarl
xchg
pop
aam
push
sub
sub
mov
sub
add
sub
outsb
stos
pop
jmp
stos
jecxz
or
ss
xor
sahf
xchg
shlb
mov
dec
adc
je
mov
pushf
jns
enter
push
sbb
stc
fldt
jmp
test
aas
add
cmpl
push
lods
mov
fstps
push
andb
sbb
mov
xor
dec
popa
sbb
fidivl
jmp
leave
fsubr
xor
cli
repz
stos
and
lahf
push
jle
mov
mov
dec
adc
mov
jno
andb
cltd
dec
js
imul
lea
inc
jae
test
xchg
mov
outsb
adc
xor
jl
fstpl
cli
icebp
fisttps
adc
js
insb
push
test
xlat
add
jp
rcl
leave
xchg
pop
scas
mov
cmpsb
push
repz
or
xchg
aad
in
sub
jle
pop
lahf
mov
mov
mov
and
rclb
addr16
mov
xor
push
push
sub
dec
xchg
orb
mov
jg
cwtl
fisubl
or
ljmp
aam
xchg
mov
adc
bswap
sbb
xchg
addr16
cld
adc
ljmp
mov
pop
or
fstpl
pop
and
push
mov
movsl
dec
pop
popf
mov
loopne
mov
pushl
stos
sub
pop
stc
mov
jae
jae
mov
lock
lcall
pop
call
dec
lea
mov
push
mov
xchg
and
orl
and
add
imul
sub
arpl
sbb
xchg
dec
dec
and
mov
imull
cli
xlat
sbb
sti
aaa
lcall
test
inc
xchg
inc
pop
subb
push
jl
push
pop
xor
mov
and
push
arpl
sub
loopne
inc
idivl
pop
and
andb
mov
jb
adcl
lds
rcll
out
in
int3
jp
outsl
icebp
inc
jne
int3
push
xchg
push
inc
push
sub
pop
int
mov
out
mov
sub
cld
rolb
addr16
or
cli
outsb
xlat
pop
loope
adcb
lea
shll
ja
aam
imul
pop
decb
das
xchg
sub
lods
outsb
xor
xor
test
lock
mul
dec
pop
movsb
andb
lcall
loopne
push
int
mov
sbb
cmc
test
out
sbb
addl
data16
loope
scas
adc
jmp
dec
xor
int3
cs
ss
pop
xlat
leave
dec
cld
shrl
mov
lret
and
xor
fists
inc
lods
inc
mov
mov
mov
jb
push
stos
xchg
imul
shlb
outsb
lods
fcmove
js
ror
and
push
add
lret
pop
adc
xchg
stos
out
or
adcl
inc
push
ljmp
in
ret
or
subb
inc
xchg
cmp
insl
xor
mov
addr16
inc
xorb
adc
inc
adc
push
ja
stos
iret
outsl
enter
sbb
fwait
dec
jae
pop
and
dec
cmp
sbb
pop
inc
icebp
mul
mov
xor
ljmp
ljmp
mov
es
dec
rol
dec
push
shrb
push
add
push
insl
inc
faddl
sub
and
pushf
dec
aam
scas
insl
push
mov
es
pop
das
add
inc
arpl
mov
arpl
dec
mov
roll
sub
xchg
cltd
cmp
add
call
lea
xchg
sbb
data16
sub
imul
push
in
xor
arpl
pop
inc
or
adcb
rcll
jmp
fnstcw
or
cwtl
pop
mov
dec
mov
mov
cmp
cmpb
mov
xchg
fucompp
addr16
lea
dec
jmp
and
add
scas
loop
addr16
mov
inc
add
shrl
insb
aam
loope
inc
insl
xchg
divl
aam
cli
push
xlat
pop
stos
push
push
subl
and
pop
or
mov
jg
out
sub
mov
jge
xlat
mov
fnstsw
je
fcomps
pop
inc
xor
stc
xchg
push
ss
push
ss
insb
inc
add
int3
adc
ror
sbb
jle
in
std
popa
jge
adc
and
and
adc
loop
sbbl
cltd
mov
push
into
lds
cmpsb
mov
es
mov
aaa
inc
cmp
sbb
xor
cmpsb
jle
test
mov
cmpsb
cmp
adc
pop
lock
adc
and
push
std
dec
cltd
out
mov
push
sbb
out
xor
add
mov
addr16
nop
xchg
lcall
push
xchg
jb
pop
mov
lds
mov
jae
incl
mov
mov
or
mov
fbld
mov
lods
testl
imul
les
addr16
into
pop
into
jb
pop
jecxz
add
push
fimuls
es
ljmp
inc
and
xchg
adc
add
stc
sbb
sti
js
out
shlb
pushaw
stos
xchg
xor
jns
sti
mov
into
mov
ss
notb
xchg
mov
cmovne
repz
movsb
fwait
mov
jmp
mov
dec
aam
pop
pop
rorb
add
adc
ljmp
push
pusha
pop
outsb
outsb
loopne
hlt
mov
sub
sub
xchg
sub
pop
mov
push
call
add
stos
dec
pop
cwtl
xor
mov
push
xchg
jb
dec
cmp
sbb
add
decl
in
loopne
cld
pusha
inc
adc
cmp
sbb
sub
inc
nop
jecxz
xor
in
push
cmp
mov
mov
and
inc
arpl
jl
pop
dec
xor
orl
ljmp
jmp
test
add
pushf
and
mov
int3
lods
dec
mov
arpl
xchg
pushf
pop
fwait
js
push
cwtl
cltd
lcall
jae
in
mov
mov
arpl
fildl
cmp
clc
in
xchg
pop
repnz
das
sbb
xor
enter
outsb
jg
lods
adcb
pop
adc
nop
sbb
adc
mov
pop
sub
pop
iret
pop
fwait
cli
sbb
ret
jg
inc
sbb
fs
jge
xchg
bound
imul
outsb
je
stc
mov
scas
das
lods
and
push
add
adc
mov
mov
push
cmp
jne
lea
push
sbb
in
ja
and
xchg
xchg
mov
or
push
mov
mov
nop
xor
idivb
jbe
xchg
loop
or
jmp
addr16
pop
push
lahf
lds
jl
xor
mov
ss
push
dec
popa
xchg
xchg
subb
call
mov
out
clc
fistpll
je
xor
addb
dec
in
push
pop
movsb
sub
lods
xor
pop
jle
push
adc
dec
out
shlb
xchg
clc
imul
mov
or
or
aam
lahf
and
inc
cld
add
add
daa
jnp
es
in
les
mov
or
daa
jg
push
and
dec
or
xchg
pushf
add
push
sti
fildll
into
and
pop
and
pushf
jb
jle
pop
imul
mov
call
insl
sbb
xlat
add
mov
xchg
pushf
xchg
adc
out
ret
xchg
mov
rorb
int
jecxz
mov
imul
and
fwait
cltd
ss
xchg
fistl
push
inc
mov
fs
enter
fisttpl
dec
popf
lahf
sub
leave
std
mov
lret
add
lahf
test
fnsetpm(287
dec
add
inc
lret
inc
jecxz
loop
outsb
call
pop
xchg
into
rcrl
inc
pop
sbb
out
ret
dec
test
mov
daa
repz
jno
mov
gs
out
mov
push
dec
adc
pop
xor
cmp
and
into
xor
jg
jp
mov
mov
jecxz
mov
orb
pop
mov
cmpsb
std
push
adc
mov
enter
bound
cmp
fstl
das
add
out
jle
nop
add
cmp
in
nop
loop
out
inc
pop
aaa
test
loop
sbb
pop
pop
call
scas
imul
sarb
sub
test
popa
sahf
push
pop
xor
enter
mov
push
test
je
cmp
push
or
push
mov
cld
xchg
out
mov
pop
inc
pop
dec
scas
hlt
xchg
rcll
sub
int3
cli
fwait
jp
mov
push
cmp
jnp
sbb
mov
push
add
mov
fistl
xchg
adc
and
lods
fiaddl
inc
imull
cltd
jnp
lock
mov
sub
jne
cld
loopne
mov
jb
sub
pop
cmc
and
mov
stos
jno
or
pop
and
dec
mov
adc
mov
and
je
gs
dec
and
mov
int
and
cmp
push
popf
ss
pop
int
subb
cmp
xor
dec
mov
inc
inc
push
ret
pop
ss
scas
jl
and
add
fcompl
movsl
adc
push
loop
mov
das
daa
out
mov
jnp,pt
inc
push
test
mov
rorb
adc
ljmp
pop
xchg
ret
lret
les
pop
xor
mov
in
sbb
lret
push
add
neg
andb
notl
test
fdivs
repz
lods
lods
dec
iret
add
aaa
sti
dec
push
pop
xchg
icebp
lods
nop
mov
insl
ret
sbb
std
imul
mov
sbb
mov
adc
sub
sbb
xchg
push
push
arpl
and
mov
insb
pop
xchg
repz
add
lahf
push
sbb
loop
cmp
push
fcmovne
lods
aam
pushf
cs
jns
sarl
jnp
or
add
sub
popf
xchg
outsb
jbe
loopne
lcall
lret
je
shrb
push
jnp
push
and
cmp
add
add
push
outsl
cltd
jle
bound
xchg
mov
xor
xchg
hlt
cltd
jl
sub
mov
aam
jmp
sub
jmp
fidivs
fwait
adc
rcl
xchg
in
in
cs
loop
pop
roll
orl
inc
ljmp
push
adc
lret
punpckhdq
add
mov
mov
scas
fildl
call
cli
not
clc
push
popa
push
outsb
or
push
shrl
xor
out
fstpt
in
mov
lock
mov
pop
rcrb
mov
add
jg
shl
and
popf
add
aam
shl
push
and
test
cmp
aas
or
cmp
stc
cs
repz
sbb
leave
push
jecxz
mov
mov
inc
fcom
insl
js
or
and
out
adc
cmp
add
push
sbb
adc
jp
mov
sbb
xorb
imulb
addb
movsb
cmpsl
jmp
bswap
das
out
xor
lods
mov
dec
addr16
bound
ja
cmp
mov
sbb
mov
fdivrl
sbb
sbb
adcl
ja
out
cmpsb
and
cmpsb
aad
cmpsb
pusha
arpl
outsb
pop
xchg
call
push
xlat
popf
inc
mov
and
das
insl
jp
pop
dec
in
pop
lods
add
xchg
mov
int
xor
in
inc
mov
lods
iret
std
and
aad
icebp
push
jnp
ficoms
mov
xor
pop
test
mov
adc
lock
pop
xor
insl
shlb
add
xchg
ja
add
bound
in
sti
pop
or
jl
mov
push
scas
fbstp
scas
clc
and
in
push
js
adc
imul
pushf
lret
cmp
rclb
cli
aam
mov
mov
xor
add
push
lret
xchg
and
push
xchg
xchg
dec
in
sbb
dec
stos
pop
jg
hlt
stos
add
and
cmpl
lret
dec
pop
push
adc
outsb
je,pn
movsl
mov
push
in
std
or
xchg
lahf
mov
pop
or
and
adc
sub
cmp
outsl
hlt
lahf
or
aam
je
push
aam
adc
jg
lds
pushw
std
bound
add
and
fdivs
sbb
je
inc
xchg
sub
and
jge
mov
lock
out
out
add
cmpsl
scas
lods
sub
jo
ljmp
daa
icebp
clc
sbb
nop
imul
arpl
sbb
lods
cmp
scas
push
lahf
sub
push
mov
mov
cmpsl
mov
mov
mov
push
fwait
mov
mov
mov
scas
and
jno
leave
ds
and
mov
sahf
lgs
push
pop
mov
or
lret
stc
cmc
roll
mov
mov
mov
mov
and
push
stos
pushf
test
imul
repnz
ljmp
outsb
push
ficomps
gs
arpl
mov
fiaddl
and
add
push
xor
pop
dec
pushf
lret
cmp
iret
insl
adc
test
jmp
arpl
cmp
mov
cmpsl
pop
xor
scas
mov
sub
jl
imul
mov
cmpsl
in
jl
popf
mov
inc
fsubs
out
mov
xchg
push
das
push
xchg
or
jae
cmp
jle
xor
push
mov
lret
leave
pop
sub
xchg
add
aaa
test
lret
push
xchg
loope
pop
pop
mov
out
pop
lret
popa
cs
daa
je
mov
cmp
shrb
push
pop
fistpl
mov
and
push
push
test
cmp
leave
pushf
dec
sbbb
or
mov
dec
xor
push
or
pop
add
cld
dec
mov
pop
jo
jl
aad
sbb
pop
addr16
outsl
fwait
test
popa
clc
xor
imul
adc
cmpsb
aaa
push
in
push
cmp
aaa
xor
xchg
xor
mov
lcall
gs
repz
or
ss
pop
stos
sahf
jge
xchg
js
and
push
mov
or
cmp
test
cmpsb
sbb
sbb
mov
scas
shl
scas
in
stos
push
xchg
scas
inc
xchg
jns
push
push
jp
imul
incl
sub
dec
mov
or
jae
std
jae
aas
lods
pop
incb
int3
mov
cmp
mov
in
fidivs
out
jp
xorb
push
ljmp
xor
mov
jp
mov
dec
in
jge
push
xchg
and
notb
jnp
leave
lcall
xchg
into
mov
repnz
xlat
int3
xor
dec
stos
cld
xor
add
jge
xchg
xchg
sbb
fadds
sbb
mov
pusha
insb
je
ret
adc
pop
jno
jnp
push
add
xchg
arpl
pop
push
mov
lcall
test
jnp
insb
dec
cmp
in
or
lods
mov
sahf
push
push
xchg
test
mov
jmp
pop
mov
cmp
mov
adc
or
lock
jno
xor
rclb
pop
outsl
xchg
and
mov
iret
out
fimuls
jg
mov
bswap
xor
ja
into
fnstcw
cmovns
orb
ret
inc
jl
lods
enter
adc
push
ret
jle
insb
jne
sarl
pop
pop
inc
pushf
outsb
rolb
scas
fidivs
repz
sbb
pop
pop
mov
subl
into
jns
subl
mov
jp
leave
mov
scas
xchg
xor
imul
mov
cmp
sbb
shll
call
sub
pop
sbb
push
mov
rolb
int3
sub
jne
pop
data16
pop
sub
cmp
movsb
push
pop
xor
mov
mov
inc
sarb
dec
and
fwait
sub
fiaddl
mov
cs
lods
push
in
inc
out
inc
cmp
sub
out
jmp
fsubr
movsl
shlb
jns
icebp
mov
sub
xchg
pop
mov
outsl
push
je
shlb
test
push
mov
in
xchg
push
ja
xchg
hlt
sbb
bound
leave
sbb
fwait
xchg
mov
insb
dec
dec
pop
js
dec
dec
popa
pushf
mov
lret
xchg
cmc
rclb
pusha
add
ljmp
sub
push
inc
inc
jnp
fwait
je
inc
lret
mov
daa
lds
insb
mov
sub
imul
sbb
mov
outsl
cwtl
mov
or
and
int
andl
imul
inc
adcl
loope
inc
scas
jae
outsl
pop
cmc
in
in
incl
inc
fdivl
cmpb
jmp
and
rclb
inc
movsb
add
loope
mov
repz
repnz
push
pop
aaa
std
sahf
jo
inc
outsl
or
pop
pusha
push
xor
push
add
push
lea
dec
inc
push
mov
sub
push
clc
loope
or
cmp
gs
out
scas
xchg
rcrl
stc
movsl
mov
cmp
ret
and
mov
daa
aaa
jne
cli
jl
push
inc
stos
aad
test
ja
fmull
pop
inc
mov
jno
mull
test
xchg
aam
push
loope
in
sub
push
push
out
or
push
sbb
pop
in
dec
xchg
stos
mov
mov
clc
int
jne
stos
popa
lods
ja
adc
out
stc
imul
xor
cmpsl
mov
jmp
cwtl
mov
int3
in
sub
cmpb
fadds
in
cmp
jg
ret
sahf
push
cmp
int3
mov
addb
sub
push
mov
dec
dec
push
adc
push
xlat
inc
dec
xor
jo
cmp
in
es
or
es
loope
jnp
or
les
xor
and
scas
xchg
jmp
inc
incl
jae
sahf
add
mov
mov
addl
outsl
or
in
imul
movsl
xor
roll
out
sahf
pop
pop
or
lret
xchg
adc
cmp
and
bound
dec
push
stos
add
or
sub
out
adc
pop
pop
stos
push
or
lea
xor
xlat
clc
push
adc
and
jnp
inc
les
or
ss
je
jl
outsl
jl
ret
mov
imulb
inc
adc
clc
and
xchg
pusha
mov
add
insl
xor
insl
aaa
adc
mov
add
sub
sbbl
push
aaa
ljmp
mov
cmp
cmpsl
jge
nop
test
aas
fistps
pop
movsb
jns
enter
je
repz
aaa
popa
sub
xchg
fcoml
xchg
int
lahf
cld
cmc
mov
insb
push
pusha
dec
repz
ret
add
imul
mov
les
dec
ficoml
sub
add
loopne
push
stos
sub
fwait
cltd
pop
cli
sbb
jecxz
repnz
insl
sub
in
xor
mov
movsb
push
pop
lret
adc
sbb
pop
mov
adc
sub
imul
adc
mov
repnz
out
stc
rcll
iret
mov
mov
cmp
jb
cmp
adc
pop
pop
jle
scas
jno
je
call
inc
dec
mov
js
pusha
pop
cmp
movsl
stos
fwait
xchg
mov
mov
out
and
jb
push
es
gs
add
aad
pop
in
jb
addr16
mov
dec
repnz
test
and
mov
aam
xchg
mov
jnp
mov
jae
jmp
pop
loopne
dec
pusha
push
mov
mov
dec
fldcw
cmp
in
sub
andb
je
sbb
in
ret
sahf
es
cli
pop
test
pushl
pop
mov
insb
gs
imul
out
not
ds
lret
mov
adc
jnp
push
lock
ficoms
out
inc
enter
insl
mov
adc
inc
pop
xchg
sbb
dec
mov
cmc
std
in
cwtl
repz
outsl
shlb
xchg
ret
sbb
lods
mov
test
cmc
mov
ljmp
cmp
dec
mov
ficoms
lret
cwtl
imul
loope
mov
imul
js
iret
sbb
popf
xchg
lret
sbb
mov
popa
add
insl
xchg
dec
orb
xchg
xchg
addl
fwait
xorl
pop
cmp
sub
ss
sbb
sub
imul
inc
mov
sbb
mov
fmul
mov
idivb
lret
add
cmpsb
cmp
inc
fs
bound
cmp
in
out
pop
push
mov
nop
daa
mov
shl
cs
imul
movsb
cmpsl
or
rclb
out
repnz
insl
push
sub
add
js
dec
or
inc
xchg
jge
jb
xlat
es
mov
stos
repz
jbe
xlat
ret
outsb
jg
aad
adc
lods
idivl
iret
hlt
inc
mov
xchg
loopne
mov
and
ret
sbb
inc
jns
out
dec
iret
ss
jne
stos
ret
and
mov
sbb
pop
sub
mov
mov
mov
and
sub
test
mov
cmp
cli
lods
cld
sahf
fadds
pop
pop
pop
jae
push
xchg
push
aas
nop
push
pop
mov
mov
cltd
and
add
jne
mov
add
popf
popa
cmp
inc
push
push
js
pop
cwtl
xchg
and
das
inc
dec
xor
inc
mov
push
dec
xchg
add
subl
mov
pop
add
imul
ljmp
cmp
aas
adc
into
jg
cld
ret
fimull
pop
mov
movsb
sub
subl
pop
nop
cs
add
push
cli
mov
ss
movsl
adc
popa
sqrtps
mov
cmp
inc
repnz
jno
icebp
test
ficoms
pop
adc
test
into
cmp
xchg
sub
out
jnp
pop
xchg
add
stc
int
pop
xchg
adc
dec
sbb
les
and
mov
xchg
mov
mov
popf
sbb
inc
cwtl
add
popf
ficoms
sahf
gs
shlb
dec
sbb
and
jge
dec
pop
sbb
nop
sbb
xchg
mov
push
sub
popa
repnz
mov
mov
push
cwtl
xor
xlat
jns
dec
sbb
sbb
cmp
lods
xchg
add
mov
loopne
sub
lods
jb
movsl
xor
mov
cs
in
lods
lcall
sbb
insb
adc
out
jl
je
mov
jg
scas
cmp
or
sbb
fcomps
sbb
enter
cli
and
mov
mov
cltd
icebp
int
ret
mov
push
adc
fs
and
fidivs
jge
xor
aam
lahf
xchg
inc
pop
stos
push
mov
push
das
outsl
insb
mov
push
or
push
jo
jne
cmpsl
popf
jo
pop
cld
fs
rclb
jbe
mov
scas
xchg
out
dec
bound
aad
iret
mov
mov
jp
mov
insl
jge
jl
shlb
mov
imul
add
push
popa
loope
das
sub
jge
inc
xor
es
lret
xor
add
shrl
loopne
xchg
fnstsw
and
cld
shll
jmp
in
orl
jo
mov
mov
hlt
or
dec
dec
add
stc
das
fbstp
xor
ja
cmp
adc
hlt
lret
mov
fwait
imull
jo
lcall
into
add
mov
jae
pushf
bound
pop
fisttpl
or
dec
sub
and
sub
lahf
les
dec
das
mov
enter
push
pop
jae
loopne
pmulhuw
gs
sbb
jnp
push
dec
inc
out
inc
xor
cmc
lods
aam
cmp
mov
jb
dec
or
or
fs
inc
pop
xor
in
fdivp
hlt
sub
js
mov
testb
ljmp
adc
mov
lcall
out
jle
outsb
mov
mov
cmp
mov
movsl
sub
loope
jno
icebp
nop
in
xchg
cmc
push
iret
pop
data16
inc
cmp
test
loope
mov
outsb
call
jne
in
jp
fisubs
inc
push
sbb
xor
push
adc
lret
lods
mov
incl
daa
mov
fs
adc
mov
sbb
out
hlt
xor
fxch
dec
fdivs
push
pop
push
dec
sbb
or
in
inc
xchg
cli
pop
popa
cmp
je
mov
je
push
sbb
or
inc
mov
xor
cmp
pop
daa
pusha
popf
or
loopne
ss
mov
pop
in
or
decb
and
push
or
dec
adc
adcb
mov
daa
aas
sbb
gs
ja
push
je
dec
xchg
pusha
cmpl
mov
addr16
pop
mov
out
mov
jge
dec
cmpsl
stc
gs
sbb
out
cwtl
aam
push
pop
jns
loopne
stos
ss
in
push
es
test
xchg
pop
jbe
add
jecxz
mov
insl
ljmp
pop
popa
dec
jne
push
mov
outsb
mov
cltd
or
add
mov
sti
add
je
in
popa
and
scas
add
pinsrw
je
xchg
popa
addl
negl
and
mov
out
dec
in
rcl
daa
add
adc
mov
fdiv
popa
push
cmp
pop
xchg
xor
pop
lods
ljmp
jae
imul
call
push
jmp
cmc
pusha
or
ret
cld
int
popf
xor
mov
loope
pop
mov
test
push
jmp
loopne
icebp
movsl
jl
mov
jge
push
sub
mov
movl
cwtl
pop
xor
aaa
out
outsb
xchg
adc
sub
outsl
sbb
or
mov
cmpsl
push
stc
and
repnz
dec
cmp
cmc
mov
push
pop
icebp
outsb
out
pusha
daa
inc
imul
pop
in
stos
inc
mov
add
sbb
mov
cmpsl
cwtl
xchg
push
test
xchg
aad
iret
mov
cmp
push
cld
in
aad
sub
mov
and
dec
cwtl
ficoms
notl
add
movsl
xor
je
ss
xchg
cmp
lret
lret
ret
xlat
mov
pop
mov
jle
ffreep
pop
adc
mov
add
jb
ud1
lret
fdiv
fimull
sub
lods
xor
mov
ret
test
roll
pushf
loopne
inc
adc
loope
push
repnz
add
pop
idivb
pop
lret
test
and
mov
xchg
outsl
cltd
jmp
inc
mov
mov
cwtl
inc
jmp
sbb
pop
mov
ss
cli
popf
enter
add
mov
je
jbe
jp
scas
shll
imul
xchg
lds
jo
cltd
and
mov
loopne
jns
inc
pushf
adc
mov
negb
push
sub
insl
in
xchg
cmp
leave
out
lahf
inc
mov
imul
cltd
data16
push
pop
cli
push
adc
push
aas
lds
subb
pop
add
std
xchg
add
rorl
leave
adc
pusha
jb
mov
dec
fbstp
mov
push
adc
jb
loop
cwtl
mov
sti
jmp
pushf
cli
mov
sbb
mov
fs
add
lea
jmp
scas
adc
in
sbb
sub
fdiv
mov
cld
mov
mov
enter
clc
and
mov
mov
sub
andl
pop
cmp
dec
xlat
dec
aas
mov
xchg
jno
frstor
inc
pop
sbb
push
xor
jb
imul
fbstp
ds
out
loope
sub
in
pop
xor
lret
loope
in
xor
mov
into
inc
sarb
cmc
mov
adcl
inc
push
mov
imul
sbb
pusha
dec
push
inc
sbb
pop
xchg
push
dec
lea
shll
int
push
sbb
xor
sahf
insl
jae
aam
bound
dec
add
lods
sub
sbb
in
xorl
mov
dec
lds
fdiv
or
stc
add
lock
sbb
mull
fidivl
push
popa
dec
dec
push
cmp
sbb
test
xchg
fwait
cld
adc
xor
arpl
ret
daa
mov
cmp
xchg
incb
mov
xor
jg
into
ds
xlat
leave
int
xchg
call
add
std
movb
addl
mov
mov
jmp
adc
xor
jne
pop
xchg
loop
roll
xchg
cmp
stos
je
inc
xor
inc
loope
cmc
push
lret
add
xchg
or
and
out
imul
xchg
xchg
cs
mov
and
stos
lcall
dec
xchg
sub
shl
test
add
out
push
mov
out
insl
fisubrl
out
setno
pavgb
push
dec
cmp
inc
hlt
jge
popf
mov
push
mov
push
push
lcall
mov
loope
inc
leave
out
mov
lcall
adc
leave
adc
mov
sti
cli
out
pusha
in
cmp
xchg
xchg
test
bound
and
leave
xchg
pusha
shll
pop
xchg
cmp
addb
pushf
js
cmc
icebp
loope
lods
fisttps
adc
mov
sbb
or
push
push
xchg
jmp
push
lods
xchg
call
imul
inc
xchg
pop
cmp
push
aam
lds
int
sub
mov
sbbl
imul
cmp
mov
xchg
jb
xchg
sti
mov
sub
inc
inc
pop
mov
jnp
cmpb
mov
shll
inc
cmp
sbb
pop
push
push
pop
dec
lahf
sub
lahf
pop
push
mov
cmpsl
popa
mov
jo
rcll
roll
call
pop
aas
jne
mov
xchg
imul
xchg
add
pop
lods
daa
xor
outsl
mov
js
cmp
xor
stos
xlat
mov
adc
sub
mov
bswap
ljmp
das
loop
xchg
cltd
push
repz
leave
adc
pusha
popa
or
push
dec
push
into
in
lds
jmp
pop
ror
pop
mov
xor
cmp
and
push
ret
test
mov
adc
and
mov
fld
xchg
fsubp
fsts
mov
xchg
fidivs
gs
push
mov
or
mov
ss
stos
test
jecxz
repz
fisubrs
push
xchg
popf
add
jbe
mov
mov
jb
adc
stos
and
jae
in
in
mov
in
out
push
in
xchg
or
sbb
mov
cmp
adc
sub
test
add
gs
mov
push
push
cmp
mov
dec
aad
jae
pushf
jo
jmp
ficompl
lcall
testl
sbb
pop
xchg
lahf
cmpsb
cltd
sub
outsb
inc
stos
repz
sub
cmpsl
push
mov
inc
xor
add
in
xor
and
hlt
xchg
and
test
nop
insl
repz
icebp
rcll
jmp
fists
das
mov
fimull
lods
cmp
addr16
push
and
test
add
mov
mov
rcrb
push
lfs
iret
pushf
sub
cmovb
sahf
dec
jb
jmp
sarb
inc
pop
in
or
lret
pop
lret
push
hlt
adc
ffreep
jnp
out
pop
movsl
pop
pop
mov
cld
out
or
dec
and
adc
push
mov
mov
jns
sub
jo
popa
stos
ret
jb
cld
pop
pop
mov
fcompl
mov
xor
je
call
adc
sbb
inc
fdivl
imul
dec
std
iret
jle
mov
rclb
jo
mov
jmp
popa
sbbb
jecxz
and
pusha
or
pop
iret
jnp
cwtl
mov
ret
cwtl
lret
int3
and
jnp
mov
fsub
or
pop
shll
push
adc
int3
ds
and
loopne
mov
imulb
mov
movsl
loop
into
shl
sbb
sub
pop
stos
inc
sti
stc
xchg
mul
int3
mov
dec
push
mov
jmp
cmp
enter
rolb
xor
movmskps
xchg
cmp
pop
xor
lods
push
jno
int3
add
mov
pop
push
fucomp
push
icebp
scas
imul
aas
pop
push
xor
fidivs
mov
jno
aaa
cld
jmp
mov
xor
push
test
and
stos
popa
jbe
pop
negl
push
mulb
mov
jl
stos
cltd
adc
dec
inc
push
adc
jg
xchg
push
xchg
xorl
jns
and
xchg
cmp
in
icebp
addb
sbb
dec
test
mov
inc
add
push
adc
cltd
lcall
js
xchg
rcrb
mov
dec
mov
jne
mov
fwait
out
xchg
mov
add
add
xchg
and
jecxz
lret
ss
lret
xor
out
int3
ss
cmp
add
aaa
lock
xchg
js
jae
in
or
je
inc
jg
pusha
std
pop
aad
lea
sbb
add
push
adc
xchg
std
dec
rorl
sarb
jmp
jo
popa
aaa
mov
mov
gs
push
mov
mov
mov
mov
push
jae
mov
dec
ficompl
push
pop
or
sar
cmpl
scas
clc
or
pop
out
mov
or
repnz
inc
icebp
and
push
je
sti
sbb
sti
mov
std
mov
sbb
dec
imul
cmpsb
push
sub
loopne
repnz
stos
or
and
icebp
sbb
cmp
pop
lcall
xchg
in
push
push
pop
or
test
rolb
dec
sbb
dec
and
or
jb
cmc
mov
xchg
or
popf
ret
into
int3
push
jnp
fdivr
push
cmp
lea
sti
loope
sahf
push
out
dec
xchg
mov
push
pop
test
and
sarl
jle
mov
dec
jb
in
or
inc
cld
jne
push
imul
jmp
cmpsl
mov
mov
jns
sbb
and
jmp
xchg
mov
mov
and
pop
mov
push
stos
repnz
in
cltd
int
fisubrl
aad
adc
mov
push
adc
pop
in
and
sbb
push
mov
loope
cwtl
dec
test
adcl
lea
lods
or
ss
pop
xchg
aam
inc
stc
stos
xchg
xchg
xlat
dec
insb
dec
lock
mov
hlt
and
lock
je
dec
inc
lock
pushf
es
fdivrs
mov
cmp
int
mov
adc
push
es
add
aam
loopne
cmp
add
arpl
clc
push
mov
jbe
add
loopne
in
cltd
scas
pop
xor
inc
push
lahf
sub
cs
push
call
cmp
sub
loopne
cmp
sbb
out
mov
mov
adc
mov
xchg
sbb
jecxz
push
cmp
inc
jo
push
add
jg
adc
ds
and
mov
out
clc
imul
dec
mov
push
shr
lcall
mov
mov
or
pop
pusha
inc
ret
call
or
mov
jne
test
jmp
cmp
xor
std
sub
jle
add
pushf
mov
cltd
in
adc
ret
sub
pop
xlat
sub
add
inc
jno
or
and
inc
fwait
push
pop
jge
jno
cmp
add
pop
cmp
mov
push
cmp
adc
pop
aad
je
outsl
jne
hlt
in
jmp
iret
das
add
and
push
nop
fnclex
mov
mov
int
xchg
sbb
mov
test
sub
insl
shlb
jmp
aaa
and
dec
bound
repz
push
adc
xchg
mov
push
es
mov
in
push
imulb
lods
in
inc
ret
fcomps
out
and
jnp
xor
jge
dec
push
jge
mov
faddl
decl
sub
push
adc
loop
insb
jno
and
les
es
xchg
scas
mov
sub
dec
cmovs
cmp
fsubrl
lahf
or
jbe
push
or
mov
mov
loope
jns
insl
push
popf
mov
mov
xchg
das
mov
mov
ds
mov
test
movb
leave
lcall
mov
sub
mov
adc
pop
add
int
shl
and
push
test
mov
jg
call
jne
scas
push
test
add
xorl
and
cmpsb
adc
jge
mov
sub
mov
sub
sub
or
sbb
js
add
jae,pn
or
icebp
bound
jo
dec
in
popa
pop
insl
lcall
jle
inc
das
sub
sbb
int3
test
inc
lret
push
repz
or
fsubr
jmp
cmp
movzbl
shll
inc
ret
int
repnz
cmp
push
stc
ret
into
aas
lret
or
es
sti
pop
xchg
sti
shlb
xchg
lock
lret
mov
pop
sub
aad
and
mov
pop
out
outsl
cmpsb
lcall
call
stos
jb
loopne
adc
repz
cwtl
scas
les
cwtl
xchg
push
lds
mov
popf
and
fstpt
add
push
in
xchg
jle
in
add
xchg
in
xchg
leave
jb
icebp
imul
cmp
xor
dec
in
dec
adc
jb
loopne
mov
clc
sub
test
jae
mov
mov
pop
jecxz
jmp
dec
sub
loop
dec
outsl
pop
cmpsl
cwtl
cmp
inc
xchg
subb
push
popa
icebp
xorb
jmp
pop
jae
xor
mov
subb
pop
popf
arpl
cld
xchg
mov
enter
loop
popa
push
push
adcb
insb
int
dec
add
movsl
aaa
and
or
test
inc
push
add
cmpl
int3
test
mov
sti
sti
in
push
mov
bnd
in
or
fsts
and
ljmp
jno
xchg
or
ljmp
stc
inc
cmp
cltd
jno
in
outsb
or
rclb
sbb
add
ds
push
ret
rol
std
outsl
ds
loope
mov
imul
dec
jl
lock
cltd
outsl
jg
cli
and
or
mov
jp
into
xchg
mov
lret
mov
aas
mov
outsb
sub
maskmovq
cli
mov
jne
fcmovnbe
in
xchg
adc
shll
in
aaa
mov
mov
xchg
jae
add
push
daa
or
ljmp
fidivs
sbb
pusha
fdivrs
insb
mov
lea
mov
movsb
stos
cmpsb
es
mov
cmp
push
mov
mov
sti
mov
adc
xchg
imul
imul
jmp
jnp
add
data16
fwait
cmp
adc
outsb
sbb
fmuls
sbb
cwtl
and
mov
out
stc
and
pop
es
xor
std
jg
arpl
adc
push
movsb
xchg
mov
in
mov
jg
outsb
or
sub
cmp
inc
adc
imul
nop
mov
rorb
les
sub
pop
xor
imul
sub
pop
insl
mov
push
cmp
jbe
pop
repz
shrl
mov
scas
jp
push
sub
nop
add
push
ss
out
addr16
mov
and
mov
movsb
mov
dec
pop
cld
pop
imul
pop
xor
popa
inc
jo
lds
jle
sbb
lods
faddp
out
mov
jo
sub
inc
jecxz
mov
jbe
es
hlt
add
out
aad
mov
jno
xchg
pop
xchg
fcmovnbe
call
or
and
mov
movb
fs
xor
jno
jno
dec
je
int
mov
mov
mov
mov
pop
jge
sbb
lods
jne
addb
mov
leave
enter
movsb
stos
pushf
xlat
arpl
jp
and
notl
out
push
fstpt
ret
cwtl
jae
insb
inc
cwtl
jecxz,pn
cmp
test
inc
xor
loope
lock
aam
cmp
imul
dec
testb
jmp
enter
imul
ljmp
or
shl
mov
lcall
dec
fbstp
mov
aaa
fnstcw
inc
inc
xor
sub
pop
or
data16
sub
cmc
or
jbe
mul
inc
mov
adc
xchg
inc
lea
leave
xchg
push
jb
jbe
cmc
push
cmp
or
sbb
sahf
push
xchg
push
xor
xchg
mov
cmovp
adc
aaa
out
test
cli
push
inc
je
shlb
out
or
fistps
ffree
sti
push
int
sbb
or
es
fadd
push
imul
sbb
and
sbb
mov
adc
mov
subl
pop
mov
movsb
pop
pop
mov
mov
push
repz
loope
lds
adc
mov
lock
inc
sbb
ljmp
into
jno
mov
sbb
mov
and
push
or
int
cmp
jecxz
fists
and
cmp
outsl
iret
push
pusha
enter
imull
subb
jae
add
and
jl
icebp
mov
insl
cmpsl
test
mov
mov
xchg
cmp
inc
out
cltd
pop
out
ljmp
sub
cli
mov
ret
out
cmp
inc
test
cmp
add
fdivrp
les
jae
fs
outsl
jp
sbb
rcr
mov
decb
pop
xor
mov
sub
jae
and
mov
jne
lahf
mov
repz
mov
out
lods
pop
lods
mov
daa
sub
int
sub
or
mov
scas
clc
mov
or
and
int3
mov
fadds
inc
into
and
aas
aas
adc
mov
rorl
test
xchg
mov
and
jno
adc
bound
mov
jecxz
xor
jge
cmp
add
js
test
xchg
ss
pop
add
insl
adc
dec
pop
scas
addl
shll
imul
xchg
je
adc
sub
adc
shrl
push
and
fwait
mov
insl
mov
push
ljmp
je
or
cwtl
pop
jne
loope
fidivs
hlt
mov
popa
in
xor
xor
mov
jg
mov
xchg
popa
test
pop
add
inc
mov
jl
inc
mov
pop
fadds
pop
jb
jae
loop
loopne
insb
fdivrs
or
push
inc
sbb
xchg
push
and
lahf
adc
dec
in
aaa
fists
in
xor
sub
mov
xchg
enter
push
in
call
jno
push
jns
xchg
movb
sbb
or
daa
xchg
out
pop
xlat
fcoml
addr16
xor
cltd
aas
mov
xor
sbb
push
adc
mov
les
sbb
xchg
jb
lods
sub
leave
daa
filds
aaa
es
mov
add
cmp
lock
in
lret
cs
mov
sub
pop
and
adc
cld
shl
int3
ret
andl
pop
jae
incl
xor
and
mov
into
or
pop
mov
jnp
scas
idivl
stos
movsb
into
sbb
jmp
adcb
cltd
sbb
push
xchg
in
lcall
and
and
mov
out
pop
ljmp
rclb
cwtl
imul
in
jle
sbb
dec
add
mov
xor
jl
scas
jg
sbb
or
rcll
cmp
into
fstl
or
cmp
ljmp
jp,pt
in
out
ljmp
mov
xchg
lret
adc
xchg
test
adc
sbb
cltd
mov
sahf
mov
jo
pop
std
loopne
dec
pop
xor
andl
ss
mov
mov
xchg
in
dec
sub
fdiv
jge
sbb
mov
mov
lcall
jno
outsl
mov
mov
jg
sbb
mov
pop
fldenv
and
cmp
push
or
and
push
sbb
mov
rclb
insb
sub
lods
cmpsb
add
ja
je
fisttpl
sbb
jge
dec
std
addr16
xchg
je
cmpb
ja
ret
jp
add
rcl
pop
xor
push
lret
xor
rcrl
cli
sarl
lds
inc
mov
mov
outsb
out
push
pop
fistpll
inc
scas
inc
cmp
sti
adc
jb
cmp
cltd
jbe
sarl
jle
pop
stos
inc
sub
jmp
lds
outsl
pop
sbb
jl
xor
ret
lret
out
and
adc
aam
pop
pop
repnz
int
gs
jmp
jbe
repnz
sub
or
jo
sbb
test
xchg
int3
shlb
pop
jnp
sti
ljmp
pop
xchg
mov
movsb
call
mov
lds
inc
mov
lds
sbb
mov
push
xor
lret
fisttps
add
mov
inc
mov
mov
test
sbb
stc
dec
stos
mov
das
pop
mov
mov
adc
out
jne
pusha
iret
sbb
lcall
pop
xchg
in
mov
inc
cltd
adc
stos
sub
adc
in
cmpsl
sub
rcrb
sub
fsub
or
dec
iret
loopne
nop
fldcw
jmp
sahf
arpl
sarb
subb
mov
icebp
test
and
in
and
jns
nop
mov
and
lea
dec
scas
cli
pop
ja
stc
popf
jne
mov
mov
cs
jno
adc
pop
mov
ss
jmp
xchg
insb
pop
icebp
dec
cmpsb
addr16
inc
ja
nop
sbb
add
fdivl
push
es
sub
pop
mov
inc
jno
sbb
xor
pop
mov
adc
shlb
or
jmp
adc
xor
mov
je
xorl
fwait
outsb
push
popf
pop
lods
out
and
mov
mov
jmp
pushf
mov
sahf
aad
adc
pushf
int3
or
add
and
fmuls
jp
ficomps
aam
aaa
mov
adc
repz
pop
xor
sarb
je
insb
inc
mov
rcrl
jae
std
mov
jae
cmp
test
xor
xchg
xchg
push
inc
cmp
jmp
test
mov
outsb
sbbb
mov
mov
mov
cmp
in
jp
add
js
ds
int
shlb
jp
add
or
dec
pop
lock
xlat
ret
sub
insb
shlb
add
jnp
jecxz
add
fldenv
ror
cmp
mov
loope
jl
std
fldt
inc
popf
sub
jo
imul
test
stos
decb
fisttpl
popf
lret
pop
repz
mov
xor
mov
sub
sbb
or
stc
nop
and
imul
mov
or
cs
les
je,pn
dec
aad
sub
lods
xchg
lods
dec
inc
cli
arpl
test
mov
int
xor
add
xor
push
add
shrl
push
rorb
stc
into
xchg
mov
adc
mov
inc
mov
push
inc
xchg
jle
js
daa
xor
pop
ret
call
mov
dec
arpl
aam
pop
push
mov
sti
cmp
out
ret
jo
sahf
lea
outsb
cmp
sub
out
test
push
repz
out
xchg
dec
test
int3
lret
mov
jle
repnz
data16
sub
mov
insb
fcompl
mov
mov
ss
fucom
add
ret
mov
daa
ds
test
and
sarb
jae
add
orl
adc
dec
adc
jbe
enter
push
xchg
into
aad
ds
aaa
bound
std
sbb
jne
lea
js
inc
mov
enter
jp
popa
fsubl
dec
out
xchg
add
in
xor
xlat
pushf
scas
sbb
jae
mov
enter
mov
lret
mov
mov
movsb
push
stos
mov
xchg
push
lret
fldl
xor
rolb
cwtl
ds
mov
mov
fs
push
data16
bound
bound
jle
lcall
xor
dec
cld
mov
or
push
cmp
pop
stos
lea
call
arpl
into
xor
repnz
fisubl
aaa
dec
sbb
pop
or
bound
jge
test
fisubrl
lcall
sbb
test
cmp
cli
mov
fs
pop
movsl
cmpsb
shlb
adcl
mov
mov
mov
ret
dec
jnp
jge
rolb
loope
pop
jae
aaa
je
enter
mov
mov
adc
add
adc
cs
xchg
lods
push
and
rolb
xchg
cmp
adc
jb
lahf
push
dec
pop
dec
jp
pop
popf
mov
pop
xor
push
iret
scas
popa
sbb
mov
nop
scas
mov
dec
xchg
push
and
pop
int
out
cmp
stc
and
sub
inc
movsl
pmulhuw
test
xor
mov
or
mov
movsl
dec
in
or
into
mov
mov
icebp
inc
repz
sbb
push
rcrb
fwait
add
flds
int
xorl
fists
jg
or
loopne
bound
mov
xchg
jp
push
cmp
jge
dec
addr16
pusha
mov
lock
fucomi
outsb
sub
rorl
push
cmp
xor
xchg
mov
xor
fdivr
cmpsb
or
orb
sbb
gs
jno
pop
pop
lods
lcall
xchg
and
sub
lcall
lds
mov
jne
into
xor
jl
bound
bound
and
in
jecxz
in
push
xchg
cltd
mov
mov
roll
or
add
and
inc
push
push
mov
or
orb
jle
jnp
jge
mov
popf
rolb
mov
shll
in
hlt
add
xchg
add
or
sub
dec
test
adcl
aaa
xor
popf
inc
ret
lods
andb
push
inc
in
mov
ss
mov
dec
inc
xchg
sbb
idivb
sub
mov
mov
mov
mov
iret
push
mov
mov
mov
pusha
sti
push
dec
lahf
dec
in
les
js
pusha
pop
and
ret
popa
xor
push
out
enter
xchg
and
shlb
xchg
xchg
leave
jnp
jbe
int
mov
mov
dec
push
sahf
mov
sarl
data16
sbb
test
leave
lcall
rcr
xchg
es
jg
fisubs
mulb
dec
dec
cmc
movsl
test
int
or
push
enter
mov
aad
loope
test
push
aam
xchg
cmovnp
adc
push
movl
or
or
decb
add
jl
mov
jl
fbstp
xchg
dec
inc
xor
addr16
gs
mov
mov
int
cmp
popf
lret
mov
push
fwait
jp
movsl
push
ret
or
cmp
addb
cmp
imull
mov
mov
adc
cmp
lea
push
fs
add
jne
inc
cmp
test
push
mov
push
cs
sub
add
outsb
in
lcall
fs
shrb
cs
hlt
call
ret
cmp
testl
add
mov
mov
push
test
xchg
mov
mov
rclb
push
pop
cmp
mov
add
lcall
dec
mov
ss
sub
mov
test
enter
sub
stos
mov
mov
mov
push
mov
loop
aam
sbb
inc
dec
ja
stc
cmp
pop
pop
inc
addl
pop
push
out
jo
outsb
test
cmp
shlb
xchg
out
sbb
add
lock
adc
fldenv
inc
mov
addb
jl
addb
sub
and
pop
mov
mov
repnz
les
push
pushf
and
in
or
fs
into
mov
movsb
adc
imul
dec
mov
in
mov
jp
inc
push
push
xor
inc
xor
ljmp
popf
mov
xorl
sbb
add
mov
pop
mov
enter
push
pushf
lret
pop
pop
push
dec
imul
test
or
ret
ljmp
stos
ja
sbb
fbld
jb
popf
or
rorb
cmp
in
cld
pop
dec
mov
mov
mov
popf
cmc
loopne
or
jmp
test
jnp
xorl
sbb
xchg
mov
jp
lahf
in
cmp
cwtl
xchg
pop
loope
cmp
popf
scas
mov
adc
sbb
lods
mov
inc
cli
aaa
pop
mov
dec
pop
orb
push
mov
add
imul
mov
leave
xchg
lcall
mov
push
cmpsl
mov
aas
mov
cs
pusha
cmp
je
jnp
push
aas
xchg
out
dec
loope
mov
ret
pop
and
or
repz
lea
mov
cmp
lock
lahf
and
or
fs
or
mov
cmpb
push
icebp
std
fisubrs
rol
sbb
xchg
adc
imul
pop
adc
add
shll
in
dec
pop
jge
nopl
push
std
push
mov
cmp
cld
push
call
sbb
pop
sub
inc
lea
aam
sbb
xor
dec
and
imul
mov
notl
loop
fdivl
fldenv
mov
dec
addr16
fwait
das
or
and
pushl
mov
and
cld
pop
pop
dec
push
cmp
test
test
push
and
ss
mov
jne
add
inc
mov
mov
sti
insb
lret
push
mov
dec
push
fcoms
in
cmp
pop
jg
popf
cmpsl
icebp
sbb
jmp
pushf
ljmp
xchg
dec
push
add
push
int
outsb
jl
fists
xor
push
mov
fnstsw
loop
xor
xchg
cwtl
cmp
sbb
test
enter
push
add
cmp
test
jle
lret
cwtl
in
test
cmp
mov
xchg
jge
rcll
inc
cld
pop
fwait
mov
pop
xchg
push
lret
and
dec
mov
ret
jle
ret
inc
xor
jo
fcmovnu
les
push
or
js
stos
cmpsl
sub
cmp
fistpll
xlat
bound
testl
lret
dec
clc
scas
jbe
es
mov
push
js
sbb
jg
shlb
sub
cltd
stc
lret
jo
in
mov
mov
sbb
ss
cmpsb
sub
jae
movsb
dec
jmp
pop
jno
repnz
jge
test
fcomps
mov
mov
outsb
je
mov
addr16
bound
shll
ficoms
pusha
lock
fisubl
in
inc
sbb
cs
enter
lock
push
adc
sub
xor
mov
movsl
jge
leave
cmp
inc
les
mov
xchg
hlt
icebp
mov
shlb
stos
jl
lret
xor
enter
int
pop
test
jb
outsl
jecxz
out
or
mov
xchg
adc
jg
and
xchg
pushl
push
imul
cmp
shll
es
mov
nop
xor
int3
in
jb
inc
lods
and
pop
inc
fstps
lock
or
jno
mov
mov
mov
xor
xchg
loopne
adc
adcl
int3
jl
pop
fnstsw
sbb
cmp
jne
orb
xchg
stos
cmpsb
adc
inc
insb
pop
popf
in
lret
mov
add
sahf
es
aam
into
mov
mov
mov
cmp
cmp
xor
adc
push
icebp
mov
and
inc
xor
lret
xor
icebp
cmp
push
shlb
mov
insl
jl
mov
pop
lods
push
push
into
pushf
adc
xchg
bound
in
inc
fsubs
pop
jp
or
xchg
sub
lds
nop
in
stc
enter
mov
xchg
xchg
popa
cmp
ret
lret
mov
sub
jb
or
in
mov
xchg
fisubl
shlb
push
mov
xor
mov
imul
outsb
sub
adcb
push
cmpsl
inc
icebp
int3
pusha
xor
dec
andl
icebp
sub
jge
jmp
pop
pop
test
adc
notl
loop,pn
jnp
or
outsl
sbb
xchg
and
mull
mov
sbbl
mov
pusha
mov
cmp
data16
xchg
fldcw
loopne
ss
or
fldt
xor
mov
test
adc
dec
adc
ror
movsb
aas
mov
es
aam
adc
inc
out
push
cmp
lods
je
lods
push
dec
and
sub
jo
outsl
ret
paddq
jp
mov
cld
clc
repz
mov
fildll
mov
mov
popa
adc
test
push
jmp
mov
insl
hlt
pop
popw
jecxz
mov
outsl
or
cli
jp
pop
mov
mov
xor
pop
xchg
inc
int3
sbb
filds
test
test
jg
push
enter
cltd
jmp
imul
xor
inc
dec
cs
stos
sub
pop
jo
fstpl
adc
or
push
xlat
mov
stos
or
dec
mov
mov
in
mov
xchg
mov
cmp
out
push
and
sbb
les
sub
mov
in
mov
mov
xchg
aaa
add
data16
repnz
scas
pop
sahf
andb
data16
or
leave
fmulp
ss
cli
inc
pop
in
stos
adc
ficoms
pusha
mov
pop
add
ret
xor
js
jmp
xor
mov
out
sub
mov
and
stos
mov
sbb
nop
add
fstl
scas
leave
push
sbb
addr16
push
stc
addr16
dec
pop
rorb
out
mov
fistl
movsl
and
cmp
ret
ret
push
addr16
insl
xchg
cmp
stos
imul
loop
enter
out
inc
push
repz
pop
lret
and
data16
mov
imul
daa
and
sahf
loopne
push
adc
pop
test
mov
movsb
in
les
or
out
mulb
push
mov
inc
out
ds
mov
cld
sahf
mov
dec
outsl
push
adc
lcall
sbb
mov
test
aaa
fwait
call
add
pop
popf
push
fnsave
pop
pop
lds
push
push
aaa
jg
cmpsl
jae
sub
out
cmpsb
push
stos
xlat
xchg
and
pusha
fdivrl
mov
gs
dec
pop
cmp
sub
xchg
mov
cmp
xor
int3
es
cmc
rcll
and
and
push
sub
pop
lret
movsb
clc
inc
jecxz
xchg
addl
xor
repnz
inc
inc
fsubr
adcb
addr16
gs
xor
xchg
fcmovu
rclb
mov
sub
adcl
scas
mov
sti
jge
std
testl
mov
add
loopne
test
xor
sbbb
iret
inc
addr16
jmp
ljmp
lret
imul
les
add
adc
in
rcrb
into
pushf
jle
push
mov
fwait
cld
or
ret
hlt
popf
adc
call
inc
loop
jbe
adc
cmp
daa
xchg
fisubrl
leave
in
inc
mov
into
jo
xchg
loop
sub
xchg
xchg
mov
xchg
std
loopne
cmpsb
stos
dec
es
sub
mov
sub
outsl
sbb
jnp,pt
sub
xchg
mov
test
pop
push
sub
jno
pop
xchg
jge
jmp
sti
cmp
pop
pop
pop
outsb
stc
sub
jo
adc
sub
sub
mov
outsl
lds
and
pop
ja
push
leave
jmp
xlat
mov
inc
xorb
lahf
jo
or
lea
adc
mov
lcall
gs
push
pushf
int
jmp
fs
in
ficoms
cmpsb
mov
mov
lock
popf
jmp
xchg
dec
mov
cmp
cmp
cmp
sbb
inc
je
dec
mov
rcl
cmp
inc
cli
inc
mov
sub
xorl
push
push
xchg
or
bound
mov
sbb
and
push
jge
jle
pop
lock
out
inc
repz
in
mov
cmc
jge
test
mov
inc
jae
rorl
dec
aas
test
incl
leave
das
in
aaa
mov
xacquire
fmuls
jae
lret
fdivrp
jnp
mov
enter
mov
sbb
loope
sub
lods
mov
xchg
fnstsw
nop
das
into
jmp
push
into
pop
dec
sbb
addr16
push
push
sub
and
psraw
jbe
fdivl
mov
fs
js
mov
aam
es
or
adc
pop
dec
jno
dec
sub
and
jge
das
xor
subb
mov
lods
xchg
mov
loope
jns
pop
jge
lahf
pop
test
pop
lea
and
sahf
pusha
and
and
daa
xor
pop
in
in
imul
adc
in
jno
ja
xchg
adc
or
adc
sbb
or
sub
lret
cmp
fistpl
aaa
or
cmp
add
das
fdivrp
dec
iret
idiv
cmc
clc
push
or
in
ljmp
push
clc
add
scas
setns
inc
add
xor
int
inc
push
aad
das
push
jmp
lret
test
fcompl
dec
fs
lret
out
or
jge
and
in
or
int
jg
or
and
scas
add
mov
inc
js
cld
pop
mov
mov
aaa
leave
out
and
and
outsl
sub
cld
inc
xor
adc
iret
pushf
ret
sub
add
mov
lret
xchg
cmp
mov
jge
mov
cmp
insb
add
sub
mov
dec
test
dec
pop
push
xorl
stc
lahf
mov
sub
mov
mov
push
bswap
push
lods
mov
dec
jmp
test
jl
outsb
fs
or
mov
add
jge
push
cmpl
xchg
jl
push
and
xchg
in
cmpsb
shl
ret
push
add
lret
fs
test
xchg
pop
jge
dec
and
rolb
fs
xchg
push
idivl
daa
adc
movsl
mov
xor
mov
ljmp
xlat
shrb
gs
inc
data16
aam
dec
aaa
enter
in
xchg
cmp
test
nop
jne
inc
and
ret
sbb
jo
loope
cld
sti
js
lods
dec
mov
repz
dec
les
push
lods
dec
xchg
lods
test
dec
xor
pop
mov
xchg
xor
cli
negb
mov
jg
ret
xlat
and
mov
cli
insb
fldcw
inc
jl
ss
jle
jbe
or
in
inc
outsl
dec
mov
or
push
and
mov
lods
mov
fisubrl
dec
pop
push
push
xchg
mov
pop
add
imul
push
arpl
xchg
add
pop
mov
push
repnz
sti
xor
xchg
xor
fisubl
stc
adc
fisubrl
bound
mov
xchg
sbbl
cs
mov
or
bound
add
ds
inc
push
imul
mov
rorb
pop
in
or
mov
leave
mov
jae
pop
std
in
cmp
mov
add
xchg
cmp
jno
sti
push
sti
fmull
addr16
push
stos
mov
jp
xor
scas
jle
jle
cld
mov
push
jbe
pop
sbb
cs
nop
xchg
test
inc
out
out
lds
ret
es
test
mov
or
jae
jl
cmp
pop
dec
dec
mov
ja
push
add
testb
cmp
inc
jle
mov
add
cs
push
je
test
in
pusha
xor
lods
push
sti
push
adcb
lret
or
sub
mov
lods
and
mov
bound
xor
outsl
sub
and
mov
pop
inc
rcrb
sub
hlt
cli
int
mov
cmp
movsl
idivl
sbb
xchg
sbb
jo
cmp
inc
movsl
push
imul
daa
pop
cld
movsl
xchg
jbe
cmp
shrl
jge
xor
lods
mov
stc
push
jns
test
push
adcl
mov
mov
xor
inc
sahf
popa
dec
stos
fcomp
sub
fcoms
lcall
scas
stos
iret
adc
ficoms
lahf
lret
les
jmp
imulb
mov
cmp
jle
shlb
mov
push
cmp
popf
sub
movb
imul
mov
push
inc
iret
or
sub
pusha
mov
mov
adc
push
adc
pop
std
pop
shlb
dec
dec
mov
js
adc
test
lods
xor
add
mov
stos
lea
ret
fs
inc
loopne
lods
push
sub
sbb
dec
test
pop
dec
inc
fisubs
test
add
fildl
push
mov
dec
aaa
sub
into
pusha
push
imul
je
inc
push
and
stos
sub
pop
dec
in
mov
mov
fcompl
inc
pop
stos
scas
dec
test
xchg
push
stos
push
inc
out
fistpll
mov
xlat
ds
pop
test
push
dec
push
rcrb
out
hlt
in
push
sub
test
cld
rcrl
xchg
mov
fidivrs
sub
fildl
jns
cs
ret
shlb
dec
sbb
or
int
movsb
cmp
movsl
in
adc
cmp
and
pop
push
sub
repnz
loopne
pop
or
mov
daa
or
nop
xchg
sbb
jl
hlt
jl
mov
out
or
and
sub
push
rcr
lods
dec
pop
pusha
sub
xor
pop
daa
add
xchg
notb
push
xchg
sub
or
lea
jnp
lret
push
bound
adc
cmp
ljmp
inc
fcmovbe
mov
add
aaa
jne
sub
test
sbb
dec
jmp
jns
sysexit
mov
dec
jae
inc
lea
stos
mov
mov
cli
ficoml
int
push
daa
enter
xor
and
icebp
insl
mov
jnp
jg
nop
cmp
inc
mov
bound
mov
mov
jecxz
mov
cmp
add
dec
or
pop
inc
sti
loope
sub
imul
push
jne
push
sahf
lock
sbb
out
mov
imul
into
dec
fcomps
iret
loope
push
rclb
mov
mov
add
aad
jp
mov
jne
fwait
dec
fstps
ret
push
repz
and
aas
or
push
mov
imul
adc
rcrl
jbe
xchg
popa
dec
iret
mov
and
jp
fists
jns
repnz
ret
jo
push
add
sub
repnz
stos
dec
lret
cli
sti
sahf
cmc
js
inc
repz
lock
mov
lret
out
in
and
lea
fidivs
sbb
inc
sub
cwtl
lcall
in
dec
int
call
ret
sbb
jmp
daa
stos
sub
xor
loop
fwait
stos
ja
icebp
adc
in
jge
cmc
or
fsubrs
inc
dec
dec
jmp
mov
mul
mov
inc
les
jae
aam
fsubp
dec
fcomps
dec
fdivl
cwtl
psrlw
icebp
cmpsb
xor
enter
mov
pop
jnp
das
push
imul
mov
jae
pop
and
jb
nop
lods
jbe
std
adc
sub
loop
inc
fistl
mov
and
loopne
stc
mov
xchg
rcr
insb
fdivl
loop
insl
das
mov
in
sub
cli
inc
mov
aaa
mov
add
dec
inc
adcl
push
add
cmpsl
orl
cmpl
pop
mov
inc
lods
dec
dec
les
push
bound
xlat
imul
nop
or
int3
jno
jb
push
adc
push
jo
jg
fidivrl
or
out
shrl
jae
sbb
jl
subl
in
repnz
orl
xlat
pop
add
outsl
sbb
mov
sti
test
fstl
aas
adc
and
xor
xchg
scas
xchg
test
mov
xor
adc
insb
inc
in
mov
jne
sub
xlat
ds
mov
mov
roll
xchg
paddw
test
pop
scas
pusha
sbb
pop
cmp
shr
pushf
lret
pop
repz
add
add
adc
insl
clc
in
scas
xor
in
fmuls
xor
xchg
mov
xor
jns
mov
cltd
dec
dec
jnp
aam
xor
in
add
loop
inc
mov
mov
xor
xor
fbstp
fsubr
cltd
adc
sbb
or
out
roll
jecxz
aaa
and
jecxz
and
sbb
mov
sub
mov
pushf
imul
stos
lcall
adc
or
ja
popf
sahf
sbb
shrl
adc
in
movd
fists
push
test
stos
mov
cmc
inc
jp
imull
mov
pusha
mov
divw
mov
fsub
in
xlat
les
rcl
jae
bound
push
or
mov
pop
adc
pop
iret
and
sahf
shrl
in
jl
mov
jmp
xor
mov
mov
mov
mov
out
mov
test
adc
xchg
adc
out
scas
mov
push
xor
add
inc
out
mov
pop
jg
cltd
int3
mulb
push
jle
adc
sub
arpl
mov
adc
lcall
ficoml
out
mov
adc
scas
movsl
or
and
int3
das
jg
das
add
mov
sbb
jne
xor
xchg
lahf
sub
stos
imulb
cmc
out
je
and
inc
sbb
dec
sbbb
repz
mov
xchg
cmpsl
push
insb
mov
add
or
mov
fwait
push
sub
xchg
pop
push
lcall
xor
gs
pop
cltd
lds
xchg
mov
jae
mov
mov
cmpsl
popf
lahf
lods
ret
cmpsl
cmpsb
pop
inc
mov
mov
pop
sub
pop
imul
sahf
leave
iret
jb
push
invd
mov
pop
dec
pop
cli
mov
sbb
dec
dec
invd
mov
jnp
dec
stc
jno
jmp
imul
jg
mov
gs
dec
aas
les
dec
ret
mov
fwait
push
sub
insb
push
cld
ss
shl
rolb
adc
pop
outsl
jno
inc
arpl
sbb
mov
sub
cs
mov
mov
dec
cwtl
lea
pop
shl
fsubr
pop
pop
mov
jmp
enter
pop
arpl
sub
mov
sbb
sub
push
add
shll
pop
loopne
clc
jp
sub
pop
add
fsubs
std
pop
subb
rcr
jo
aaa
mov
leave
jp
sahf
and
sbb
jp
push
mov
insl
dec
xor
inc
movl
cmc
int3
lods
popa
les
cmp
mov
and
dec
mov
or
cmc
ficoms
std
mov
xchg
pop
movb
adc
test
ss
into
sbb
je
and
pop
sub
push
or
lock
mov
add
push
into
or
pop
shl
xor
rcll
push
mov
sub
ret
jne
push
mov
lahf
pusha
out
dec
cmp
push
daa
push
mov
mov
jno
sbb
jo
xchg
cld
pop
aad
aas
fstps
ret
fnstsw
push
sarl
test
in
sbb
insb
pop
movsl
dec
push
flds
jmp
dec
imul
pop
cmpb
shrb
sbb
sub
xchg
push
in
jp
push
or
pusha
popf
out
daa
mov
dec
int
pop
mov
pop
je
icebp
push
jne
adc
jns
pop
adc
repz
notb
repnz
enter
lods
sub
xchg
jns
js
addb
andb
frstor
xlat
add
dec
mov
cmc
pop
jae
mov
and
insb
out
addr16
inc
sbb
dec
adc
cmp
sbb
fsubrl
pop
test
dec
test
movsl
out
loopne
push
or
xor
mov
inc
lret
scas
jmp
mov
imul
sub
jbe
sbb
xlat
in
ss
lret
push
xor
inc
mov
xor
testl
mov
loope,pn
rolb
dec
and
out
push
jge
aam
in
mov
icebp
cld
out
imul
repnz
or
cmp
jne
enter
xor
pop
and
scas
int3
pushf
loopne
sbb
loopne
cmc
fildll
stc
fiaddl
and
cmp
or
lock
ret
push
dec
mov
fldl
jo
bound
mov
dec
xor
cmpsl
ja
add
cmp
aaa
sbb
leave
stc
jge
cmp
aaa
lcall
lahf
stc
pop
dec
push
sti
pop
out
outsl
bound
push
sub
inc
jns
addb
cwtl
jo
dec
into
scas
jle,pt
into
dec
pushf
inc
sar
mov
jecxz
int3
loop
mov
sbb
stos
nop
js
arpl
xor
dec
pop
mov
inc
inc
data16
jb
xlat
adc
popf
jle
popf
pop
pop
jo
ret
dec
inc
pop
mov
aam
jp
pop
orb
aaa
insl
and
lods
xchg
xchg
dec
pop
divb
les
and
cmp
clc
mov
inc
ss
xchg
sbbl
push
sub
and
repnz
xchg
pop
sub
cmc
inc
stos
jecxz
xchg
and
scas
push
fyl2x
les
cwtl
mov
mov
movsl
push
xorb
popf
imul
pop
push
imul
sub
and
insb
cmp
call
push
jb
stc
test
fwait
jge
add
outsl
jg
in
push
addl
shll
xlat
js
aas
inc
push
leave
add
ficoms
add
mov
popf
cmp
cmc
pop
lret
mov
push
adc
pusha
insb
and
adc
or
pop
test
es
lods
jge
add
mov
shrl
inc
dec
lock
lods
mov
pop
outsb
test
xchg
shrl
mov
fst
adc
cmc
pusha
sahf
xorl
imul
sbb
xlat
cs
lods
scas
adc
push
sbb
or
jne
sub
or
pop
xor
dec
push
aas
ljmp
xchg
les
sbb
clc
adc
jbe
xchg
push
add
enter
mov
cmp
adc
std
pop
jae
icebp
mov
lock
stos
inc
jnp
popa
add
sbb
sbb
push
cmp
cwtl
cmp
or
mov
add
es
cli
adc
pop
cmpsl
and
mov
jle
or
and
out
movsl
adc
test
out
add
shrb
fldt
add
test
ret
out
xchg
imull
data16
sub
mov
add
cli
inc
cmpsl
dec
and
sarb
int3
xchg
sbb
pop
adc
inc
adc
mov
jo
filds
push
cld
dec
sub
in
mov
add
dec
mov
sbb
pop
xor
in
and
loope
jmp
in
inc
out
ja
xor
test
jne
cmp
sbb
js
nop
cmp
jbe
out
outsb
or
mov
movsb
xchg
mov
inc
scas
xor
movsb
xchg
fimuls
adc
mov
cmp
xchg
sbb
dec
dec
and
aaa
pop
jno
icebp
inc
inc
xchg
in
in
cltd
andb
je
push
sbb
lods
or
fisubrs
adc
roll
mov
int3
mov
clc
in
imull
test
shll
ljmp
and
out
inc
std
dec
adc
loopne
jg
add
out
mov
stos
jle
jbe
and
jmp
lods
inc
out
clc
jle
mov
dec
in
or
add
push
dec
jecxz
pop
aas
cmp
enter
rcrb
stc
and
mov
inc
clc
pop
scas
filds
insl
insl
and
dec
adc
in
mov
pop
cli
or
adc
mov
add
hlt
les
stos
jp
jo
pushw
subb
ss
movsl
pop
je
adc
or
cs
mov
popf
dec
jbe
mov
jecxz
add
ljmp
js
addr16
sbb
mov
push
rcr
push
mov
inc
mov
outsb
jnp
jge
cmc
adc
pop
adc
test
sub
add
sbb
xchg
sarl
xor
adc
stos
cmp
push
dec
loop
fmul
shll
scas
sub
pop
sahf
and
jo
mov
adc
and
rcr
sub
adc
notl
jmp
jbe
sub
sub
cli
sbb
ret
mov
cs
sub
pop
dec
cmp
jnp
jecxz
inc
jle
push
sbb
and
gs
ret
lds
jns
addr16
sub
dec
pop
mov
mov
dec
dec
out
push
push
stos
sub
cld
or
dec
out
mov
fldcw
pusha
mov
jne
rcrl
test
cmpsb
fcmovu
mov
cmp
or
mov
loop
cmpl
jl
sbb
jae
xor
test
dec
leave
jmp
mov
xchg
sarb
push
popa
and
xchg
bound
or
mov
call
adc
daa
aad
fldenv
jmp
test
hlt
mov
sbb
push
int
xlat
popa
inc
mov
dec
pop
ret
rclb
xor
inc
add
mov
fxch
pop
xor
fs
into
sub
popa
cmp
push
mov
or
aam
or
repnz
xchg
testl
add
dec
nop
pop
and
dec
pop
mov
dec
adc
cmp
cmp
fdivl
and
js
enter
add
adc
xor
sub
inc
and
jmp
xchg
out
call
test
sub
daa
xor
xor
mov
and
movsl
or
jns
adc
mov
ss
push
addr16
fldcw
mov
jmp
pop
add
push
cmpsb
mov
sarb
sub
mov
cmp
lds
xorb
in
cs
outsb
ficomps
xchg
xchg
xchg
adc
ficoml
popa
test
fisubrs
dec
sbb
inc
fstpl
push
shld
pushf
ret
inc
sbb
mov
adcl
rcrb
data16
rorb
push
mov
xlat
mov
pop
add
sub
adc
push
shl
inc
jl
sub
ret
insb
call
std
pop
cmp
push
dec
and
xor
mov
push
sti
pushf
add
outsl
cmp
adc
movsb
insl
and
dec
lret
fidivl
stos
in
xor
std
and
call
ret
data16
mov
jl
or
andb
mov
sbb
ret
mov
cmp
jne
ljmp
jmp
pusha
and
outsl
sahf
mov
test
std
inc
xchg
mov
xor
adc
aas
ljmp
movsb
andb
and
pop
cltd
inc
mov
clc
pop
stos
icebp
inc
cmp
scas
inc
push
shll
int
andl
imul
xchg
mov
scas
out
jle
jo
sbb
sahf
das
mov
mov
cmpsl
int3
pushf
jmp
pop
aas
aam
shrb
xor
mov
test
xor
jo
sti
addr16
cmpsl
inc
sub
sbbl
jae
dec
outsl
fpatan
adc
lea
sub
mov
dec
ss
testl
sub
paddusb
mov
add
fdivrp
fisttpl
loop
adc
jo
rclb
mov
fcmove
sbb
push
add
push
pop
ljmp
jno
push
cli
mov
inc
push
hlt
ret
cli
notb
ret
insl
jp
cmpsl
pusha
sbb
push
lret
je
cmp
sbb
loop
lods
mov
or
jne
pop
mov
daa
jne
rclb
gs
int3
mov
enter
mov
sti
shll
lea
in
cmp
sub
or
dec
les
mov
sub
les
lahf
jecxz
loope
xchg
add
and
test
nop
mov
pushf
push
sbb
push
push
leave
sbb
or
out
mov
and
out
leave
sbb
sbb
xchg
mov
iret
pop
nop
rcll
pop
stos
sbb
adc
cmp
icebp
sub
adc
ja
jecxz
fbld
rclb
test
push
clc
wrmsr
xor
push
inc
sub
and
sbb
loopne
sbb
or
aam
jb
add
jg
scas
sbb
mov
or
or
shr
cs
mov
jg
sub
push
add
pushf
imul
imul
or
jo
movsb
adc
cmp
int3
in
aaa
insl
sahf
push
pusha
jne
xchg
adc
int3
inc
scas
push
jb
mov
into
push
scas
fwait
and
pop
outsb
aad
cmp
cmp
inc
and
mov
cmpsb
cld
sbb
jo
inc
mov
cltd
std
test
pop
cmp
ror
mov
out
push
sar
sbb
mov
mov
or
cwtl
jbe
iret
mov
or
mov
test
fsubl
icebp
fcomp
cmpsl
pop
mov
hlt
mov
lods
xchg
sbb
jle
mov
lret
and
push
xlat
cmp
fisubs
mov
sub
adc
sbb
dec
lock
outsl
add
add
sub
cmpsb
dec
hlt
inc
push
inc
pop
imul
sbb
jmp
enter
scas
bound
jecxz
and
insl
xchg
add
cwtl
mov
outsl
cltd
jle
in
push
pop
dec
jnp
push
jns
push
fbstp
loopne
push
cmp
push
mov
mov
inc
or
rorb
inc
jecxz
cld
add
mov
xor
mov
xor
push
xchg
lcall
inc
inc
cmc
or
sbb
test
xlat
scas
cmpsl
popa
mov
mov
xor
mov
push
inc
sbb
fnsave
pop
add
xlat
push
lret
in
stos
or
push
int
cmp
push
loope
dec
jns
xchg
mov
movsb
sub
int3
arpl
outsl
inc
int
add
push
bound
add
mov
push
cmp
lea
leave
fimull
in
out
pop
xlat
fnstsw
aam
loopne
insl
aaa
inc
push
ret
ss
or
dec
jp
nop
mov
or
clc
pop
push
arpl
cmp
mov
mov
mov
xchg
sbbl
pop
pop
add
and
mull
jl
lods
aam
test
into
sbb
push
xchg
or
cmpsl
xchg
js
popa
sbb
lods
ljmp
sub
push
stc
jnp
lcall
sbb
stc
push
testl
in
push
xchg
jo
or
pop
aad
mov
add
outsb
lret
cmp
insl
adc
scas
cs
addb
iret
outsb
inc
pop
mov
fidivs
mov
iret
or
cmp
cltd
pop
adc
xor
fwait
and
test
mov
push
pop
mov
adc
xchg
stos
addb
sbb
notl
daa
neg
clc
xlat
cmp
mov
jl
dec
cmp
inc
outsl
les
loop
jnp
fadd
dec
add
pushf
jo
mov
sub
push
adc
cmp
add
xor
iret
ss
push
pop
xchg
mov
pop
outsl
sbb
jae
outsl
stc
mov
loopne
xorb
je
xchg
imul
or
pop
addb
adc
loopne
ds
stos
movsl
mov
xor
test
out
dec
les
mov
sbb
jne
test
and
mov
cmp
jae
jle
adc
jbe
popa
flds
sbb
lret
mov
mov
mov
mov
cmp
sahf
xor
je
scas
rorb
push
sub
push
xor
outsl
jbe
adc
and
lods
nop
xlat
lret
lret
std
push
cmp
dec
add
mov
adc
xchg
push
in
jno
inc
rolb
sub
cld
jle
add
jge
lret
cmp
ret
dec
cmp
hlt
add
add
pop
mov
pusha
xchg
test
aam
fimull
mov
repnz
pop
pop
and
ljmp
rorl
test
lock
int3
mov
sub
xor
mov
and
fidivrs
push
stc
stos
mov
and
daa
mov
shlb
scas
addr16
fistps
lret
jl
data16
inc
inc
sub
pop
inc
xor
mov
jmp
sbb
jge
ss
hlt
xlat
pushf
and
std
inc
cmc
in
int3
test
dec
mov
imul
xor
push
sub
aad
lea
fcomps
dec
sub
and
dec
adc
ret
mov
cmp
lahf
bswap
push
and
sub
adc
vpmulhuw
cli
repz
insl
cmp
lods
jl
mov
push
fisttps
test
lret
sub
mov
push
mov
mov
add
cmp
nop
ja
dec
lods
scas
push
ja
mov
push
or
adc
in
mov
fdivl
repz
inc
mov
xor
fldcw
out
scas
mov
sbb
jmp
in
fs
push
rolb
repnz
int3
or
xchg
cmpsl
lret
sub
adc
mov
sahf
xor
aas
test
inc
xchg
adc
xchg
std
add
call
cmpl
adc
int3
jg
pop
in
xor
sub
test
push
xor
les
repnz
stos
imul
sbbb
inc
lret
xchg
dec
pop
pop
dec
dec
int3
push
push
dec
inc
or
xor
inc
adc
sbb
mov
cmp
xchg
inc
pop
sbb
rcr
lcall
in
adc
hlt
sbb
jbe
fsubl
ret
cmpsb
jo
jns
aas
sub
ret
xor
sub
mov
scas
xor
int
rcrb
ds
pop
rolb
jne
popf
xor
lods
adc
iret
pop
and
mov
es
mov
adc
xchg
mov
lock
mov
sub
test
mov
dec
mov
xor
mov
outsl
push
aaa
aaa
call
je
data16
dec
popf
dec
sbb
js
xor
sti
ljmp
cmp
mov
xor
and
mov
jle
dec
mov
sub
outsl
pop
cmp
mov
pushf
sahf
outsl
ljmp
sbb
mov
pushf
push
push
sarb
xor
in
sub
or
sbb
lock
xchg
fistps
mov
pop
pop
xor
mov
fiaddl
inc
pop
cmp
mov
and
int
sbb
sbb
dec
jl
enter
test
pop
or
int
mov
jno
mov
sbb
repnz
pop
dec
jg
push
in
adc
ss
rclb
sti
mov
pusha
shll
andb
fcomip
add
adc
sub
lret
shl
aaa
sahf
pop
lcall
cwtl
dec
cld
sub
jo
sub
jnp
movsl
shlb
sahf
rcrl
out
roll
fsub
lock
jb
dec
roll
xor
dec
mov
inc
or
lcall
adc
jmp
or
or
inc
sub
fisubrs
dec
inc
iret
pop
mov
out
add
movsl
nop
dec
adc
test
nop
push
adc
lods
lock
bound
adc
rcl
sub
sub
adc
int3
xor
bound
xchg
mov
xor
leave
out
jge
inc
sub
lret
call
sub
adc
icebp
cmp
mov
cmp
fcom
mov
sbb
daa
mov
cmp
shl
popf
scas
add
push
push
sbb
lahf
ret
xlat
jge
ret
mov
int3
aaa
pop
test
jbe
and
push
inc
flds
inc
mov
outsb
stos
mov
jnp
dec
stos
in
jmp
pop
cli
mov
mov
cmp
pop
cmc
daa
jmp
jo
lds
fldenv
imul
aad
scas
ficoms
inc
popf
mov
mov
lret
out
mov
divl
lock
sbb
dec
test
and
aas
scas
mov
int
adc
or
scas
adc
sbb
rorb
xchg
add
fwait
nop
mov
stos
jle
jno
mov
int3
push
fadds
jmp
and
push
push
imul
jns
or
imul
sbb
in
pop
mov
pusha
ss
dec
in
andb
push
into
dec
mov
repnz
mov
inc
push
mov
jmp
push
push
insb
mov
out
testl
es
pop
adc
rol
xchg
mov
xchg
pop
or
imul
sarb
cmpsl
fidivrl
fistpll
xor
jle
addr16
mov
aaa
mov
bound
jbe
lcall
mov
repz
jns
add
xchg
daa
push
lret
push
addl
xchg
mov
push
pushaw
outsb
cwtl
or
fisubrs
pop
jbe
jmp
pop
rcrb
mov
ret
mov
pop
out
pop
sbb
divb
rep
loop
xchg
mov
stos
pop
xchg
addr16
jmp
lock
fistpl
jg
add
jle
jnp
mov
jno
lock
outsl
aaa
mov
mov
xor
cmc
and
ret
lret
mov
push
pop
sub
mov
fidivrs
aaa
in
xchg
fwait
out
sub
add
xchg
dec
mov
clc
add
mov
das
xchg
adc
je
pop
fists
jae
push
mov
ret
fsubs
out
daa
adcl
pop
cs
aas
std
in
out
jl
push
or
in
ret
jecxz
jmp
jno
aas
push
shrl
cmc
add
cmpsb
std
stc
push
lcall
test
out
iret
pop
hlt
ror
fstpt
mov
push
loope
movsb
jnp
add
notl
dec
je
repz
cmc
pop
lret
insb
push
loopne
pcmpeqb
loope
cld
jg
outsl
pop
in
xchg
pop
rorb
xlat
sbb
popa
dec
fdivs
sbbb
dec
dec
jno
test
lods
lods
add
rcrb
cmpl
pop
add
xchg
stos
push
cltd
insl
mov
jae
or
pop
xchg
mov
in
mov
mov
xchg
out
fsubp
cmp
and
sti
jbe
xchg
mov
lods
adc
inc
dec
scas
adc
mov
add
cmp
lcall
std
push
xor
orl
test
or
hlt
mulb
dec
jle
call
js
popa
imulb
repnz
pop
xchg
decl
inc
or
jmp
fnsave
rorb
mov
popa
pop
insl
in
fisubl
lods
lret
sub
movsl
adc
stc
lds
push
sub
cli
pop
in
pop
mov
scas
test
mov
pop
inc
sub
inc
fsubrs
testb
in
js
mov
push
sbb
xlat
add
ljmp
sbb
lret
pop
sbb
cmp
mov
cld
and
push
cmp
movsb
ljmp
sbb
lock
push
dec
int
jo
out
mov
aas
das
test
lahf
inc
xchg
fstpt
aad
int
push
adc
dec
inc
test
push
xor
test
cmp
call
loope
mov
cli
xor
test
inc
mov
arpl
inc
dec
push
sti
inc
addr16
pop
push
imul
outsl
cmpb
rclb
xchg
push
pop
addr16
cmp
popa
dec
shrb
popl
lret
add
push
test
pop
mov
nop
repz
ja
xor
mov
and
leave
repnz
imul
lods
popf
adc
push
shrb
das
sub
hlt
idiv
adc
imul
sub
adc
push
mov
inc
jecxz
stos
cmpsb
and
fdivl
outsb
dec
jmp
adc
inc
dec
jo
jae
popf
adc
and
jno
movsl
xchg
or
out
lcall
mov
ljmp
jnp
mov
psrld
lods
ret
adc
xchg
pop
adc
sbb
mov
sub
dec
sub
int3
sub
movsl
sbb
cmc
xchg
fsubp
xor
jbe
jno
or
xor
fimuls
xor
aam
fidivrs
sar
mov
stos
stos
push
sub
xor
xchg
xchg
sub
cmp
adc
stos
test
cmpsl
fmuls
in
jle
add
mov
popf
sub
repnz
bound
in
adc
pop
inc
in
es
jge
pusha
lock
jmp
xor
in
fildll
lds
push
les
rcrb
xor
sbb
xchg
fcmovnu
arpl
push
std
sbb
stos
jo
in
enter
repnz
hlt
mov
mov
les
scas
cmp
pop
push
sub
bound
jnp
data16
popa
cli
jmp
popf
mov
addb
or
inc
inc
int3
ficoml
mov
push
cli
push
aaa
ds
xchg
xor
shrl
loop
andl
stos
mov
js
sbb
and
cmp
inc
imul
pop
lds
push
adcl
in
sbb
aas
push
rcl
lcall
xchg
sti
adc
xchg
mov
adc
sub
or
andl
pop
cmc
nop
inc
int3
cmp
out
mov
sahf
lods
iret
xchg
data16
cli
gs
pop
pop
cmp
mov
fnstenv
ret
je
jp
nop
jmp
mov
fildll
loopne
xchg
andl
and
or
xor
add
int3
int3
dec
movsl
xchg
rcr
mov
hlt
or
jl
mov
arpl
dec
lea
sub
mov
lcall
pusha
int3
xor
push
pop
imulb
lods
aam
add
mov
dec
xor
push
xchg
lock
sub
xchg
ljmp
and
pop
cltd
mov
repz
push
mov
int
sarl
mov
popa
ljmp
in
pop
call
pop
sti
test
pop
inc
xor
test
mov
push
xchg
mov
ljmp
outsl
and
jmp
xor
xchg
fs
jno,pn
adc
sub
in
inc
jecxz
inc
stos
mov
mov
lods
sahf
and
ret
lds
mov
rcr
push
add
jne
jb
aad
int
mov
push
ret
es
stos
fcomi
subb
rcll
fcomp
adc
inc
push
jns
pop
call
jnp
dec
dec
inc
imul
shl
xchg
sbb
cwtl
pop
enter
lea
mov
sbb
mov
sar
adc
push
mov
sub
or
pusha
jne
push
das
sub
sbbb
aaa
xchg
movsl
jl
aam
pusha
mov
jns
cmp
lcall
push
and
mov
frstor
mov
stos
mov
test
loop
addb
jmp
xor
jmp
loope
mov
add
fwait
inc
sub
inc
push
fldt
testl
jecxz
adc
mov
inc
push
pop
inc
repz
xor
dec
int3
pop
stc
pop
inc
dec
cmpsb
in
or
cmpb
push
jnp
loope
cwtl
in
pop
call
filds
xchg
call
push
mov
add
movsb
popf
cmpsl
inc
lret
pop
mov
repnz
xchg
rclb
or
lds
dec
mov
mov
ret
stos
dec
fldl
outsl
push
jb
daa
in
cmp
in
jo
push
xchg
out
fisubrl
and
test
dec
rol
mov
addb
fisttpl
jne
and
sbb
repz
icebp
sub
shrl
icebp
xchg
imul
int3
inc
ja
incb
or
cmp
in
mov
dec
mov
xchg
pusha
xchg
aad
fdivl
sbb
jns
pop
mov
mov
ja
xchg
sub
loopne
das
mov
aas
in
mov
pop
jnp
jle
rclb
push
mov
cmc
call
loope
call
dec
dec
cmp
xchg
xadd
aaa
popf
pop
inc
nop
xchg
sub
lret
pop
push
stc
gs
aad
iret
xchg
arpl
mov
out
jle
pop
xchg
adc
sbb
mov
xor
push
jecxz
dec
adc
push
pop
mov
call
add
out
mov
mov
nop
mov
hlt
xchg
sti
test
lods
cltd
js
jmp
mov
push
subl
xchg
inc
aad
sub
xchg
das
xor
in
or
sub
imul
sbb
push
adc
sbb
lret
sbb
aas
mov
cmp
cmp
mov
test
je
sbb
sti
inc
scas
jp
dec
int3
mov
lods
sbb
dec
out
int
repz
push
push
and
cmp
adcl
or
jle
sti
rcrb
std
mov
mov
xchg
pop
mov
test
bound
mov
lods
incl
test
sti
gs
or
fimuls
pop
out
lret
xchg
and
shl
pop
cmpsl
push
sbb
fldl
ds
fisubs
stos
mov
call
into
cmp
jnp
dec
movsb
lock
in
push
sbb
gs
int3
lcall
mov
sbb
xor
scas
movsl
xchg
sub
stos
xchg
je
adc
xchg
std
inc
je
test
and
mov
pop
jns
jns
or
outsl
inc
loope
or
je
fiaddl
cld
enter
sbb
pop
pop
sub
adc
jo
neg
or
test
cmovb
out
fcmove
and
mov
jmp
pop
mov
push
je
jnp
scas
leave
sbb
cmpsb
mulb
popa
ret
andb
stos
jo
sbb
dec
pop
jb
cmc
dec
pop
adc
dec
in
jne
inc
sub
push
mov
incb
jno
fisttps
cmc
cltd
mov
arpl
nop
jp
sbb
jns
scas
xchg
cltd
xor
outsl
push
decl
mov
cmc
pushl
js
into
push
xor
push
mov
add
pop
hlt
and
and
adc
lahf
push
inc
push
inc
cmc
test
out
jo
pop
sub
aam
repz
aad
cli
call
inc
stos
ljmp
stc
xor
ds
std
notl
int
cwtl
mov
in
mov
and
push
stos
lcall
push
push
cmp
fcmovnu
dec
sbb
pop
or
pusha
jge
fstps
scas
mov
and
scas
sbb
mov
push
loopne
and
mov
pushf
mov
shrb
loope
fwait
rol
push
fisubl
ss
jg
sub
adc
pop
inc
cli
fldl
hlt
cmpsl
lea
repnz
dec
lea
lea
xchg
ficompl
jo
add
ljmp
xchg
pop
popa
xchg
pop
popf
stos
lds
xchg
push
xor
bound
shll
xchg
les
pop
pusha
imul
xlat
int
and
ror
repz
cwtl
out
xchg
lahf
xor
sbb
xor
rcrl
cld
mov
cmp
push
jg
jne
push
in
testl
cmc
dec
sarl
sub
xchg
inc
sbb
mov
loopne
mov
jns
or
dec
iret
push
adc
imul
add
addl
ret
push
add
dec
roll
int
pop
sbb
int3
clc
cli
mov
scas
cs
hlt
jmp
jmp
movsb
addr16
test
dec
int
sbb
and
pop
sbb
dec
out
lods
je
std
mov
cmp
lret
scas
sub
jae
xchg
and
sahf
push
pop
scas
mov
adc
push
enter
pop
outsb
xchg
mov
sub
push
xorl
subb
or
pop
xchg
sub
test
scas
mov
push
test
incb
sub
ret
xchg
mov
add
aad
adc
scas
mov
lods
jno
jge
mov
sbb
mov
fcmovu
xchg
and
shll
cli
nop
repz
notl
cmp
dec
jmp
pop
xor
lahf
sbb
mov
xorl
rcrb
stc
jae
sahf
jae
aas
xchg
xchg
mov
cmp
loope
pop
inc
mov
call
lret
ret
xchg
popf
sub
dec
ja
dec
jo
aam
test
sbb
jns
push
dec
aaa
ds
sub
push
push
add
dec
xor
bsr
add
popf
out
das
sub
sbb
push
xchg
or
xor
dec
xor
inc
cmp
ljmp
add
and
xor
jne
xchg
xchg
cmp
sub
xchg
inc
stos
call
mov
aam
lret
push
mov
fsubl
jmp
mov
inc
dec
lret
jns
into
inc
jne
jg
in
cmp
fwait
sbb
popf
sbb
xor
les
cmp
and
cmp
dec
xchg
cmp
pop
notb
push
sbb
mov
mov
int3
cli
adc
cmp
cs
jl
mov
data16
lea
arpl
scas
clc
test
jb
lahf
faddl
jbe
out
inc
push
jnp
fldl
lds
jle
ljmp
adc
xchg
jns
sarb
jg
in
and
add
in
loope
fcmove
mov
adc
xchg
or
xor
xor
push
popa
jge
xlat
xchg
fldl
pop
lahf
xchg
enter
lea
fcmovbe
cmpsb
fmull
rcrb
mov
fstpt
sub
mov
sub
test
sub
test
lea
inc
mov
cmp
int3
out
les
cmp
ljmp
and
mov
fimuls
je
mov
pushf
ret
push
push
xor
push
dec
sti
mov
addb
stos
stc
xchg
xchg
add
aam
out
lods
pop
dec
xor
outsb
in
loopne
jbe
movsb
outsb
shrl
movsb
scas
repnz
sbb
call
lods
fdivrl
inc
test
mov
js
lahf
dec
xlat
and
lret
pop
lahf
push
and
pusha
jnp
adc
push
cmp
lahf
push
aas
sarb
mov
idivl
fimull
out
sub
and
push
fdiv
mov
std
in
and
or
jne
jae
jle
lret
push
push
loopne
xchg
imul
adc
stc
into
ja
adc
mov
mov
ljmp
or
mov
xchg
or
data16
jle
fbstp
sub
mov
push
int3
cmp
fnsave
and
mov
jbe
ja
jo
mov
inc
adc
aad
inc
jo
gs
fdivrs
jo
lock
push
inc
scas
jno
cli
inc
xchg
xchg
lods
popf
jmp
lea
sbb
dec
push
popf
push
xchg
out
add
bound
repnz
mov
aad
pop
jbe
mov
add
and
sbb
ret
mov
xchg
cmpl
inc
and
inc
lahf
jns
mov
fwait
mov
inc
in
sub
add
jo
in
pop
xchg
jg
jno
add
adc
mov
and
es
fcompl
jmp
mov
mov
out
add
jno
sbb
sbb
pop
or
les
xor
xchg
mov
out
sub
scas
push
mov
repz
icebp
call
inc
xor
lret
xor
lret
dec
sub
hlt
adc
push
xchg
mov
test
or
sub
ljmp
jae
xchg
mov
jbe
mov
cmpsl
loopne
xor
sub
cwtl
mov
aas
rorl
std
or
xchg
cwtl
xor
xchg
bound
pusha
jge
clc
pop
les
mov
dec
sub
pop
jmp
movsb
adc
sbb
and
in
push
pop
add
or
scas
or
jne
clc
call
mov
pop
push
dec
xor
cmp
or
rolb
pusha
jmp
mov
in
sbb
jne
pop
pop
xlat
xor
in
in
jge
adc
jno
lcall
mov
shl
mov
add
daa
mov
cmp
scas
mov
xchg
pop
mov
int
lods
mov
mov
leave
xor
ss
loop
sub
and
aam
xor
das
sbb
pop
push
push
xchg
aad
inc
adcb
or
sbb
jne
call
add
or
or
or
sub
pop
cmp
adc
jecxz
xchg
xor
insl
lcall
xchg
adc
sbb
add
hlt
testb
in
cmp
in
or
xchg
gs
js
repz
ret
mov
or
ja
sbb
in
push
sub
clc
or
sub
cs
adc
mov
dec
outsl
pop
or
ja
dec
outsl
jmp
cli
sub
test
scas
dec
dec
and
sub
mov
mov
mov
mov
and
jmp
aas
in
mov
cli
pop
jp
jge
fdivs
sub
lock
dec
sahf
mov
ret
fcompl
pop
and
mov
jg
fistl
lods
inc
les
xor
mov
icebp
mov
xchg
ljmp
sahf
jae
xlat
filds
stos
pop
mov
ret
out
js
movsb
sbb
cli
pop
int3
mov
and
inc
es
and
jecxz
sahf
leave
out
adc
mov
scas
dec
and
outsl
mov
xchg
pop
dec
xchg
andl
adc
jae
mov
lds
adc
in
xor
and
fsub
and
mov
cmp
cmp
repnz
jg
mov
mov
cmp
iret
in
adc
rorb
inc
test
inc
cltd
dec
negl
js
mov
addr16
sub
inc
mov
xlat
cmc
call
inc
stos
sub
mov
imul
sarl
push
out
sub
cmp
fstps
jne
sti
pushf
push
add
xchg
dec
int
orl
test
pop
hlt
xor
ljmp
adcl
mov
pop
cltd
hlt
lret
push
mov
in
mov
xchg
mov
cld
jg
cmp
jbe
adc
movl
mov
push
inc
add
xchg
loop
jl
add
ljmp
clc
std
and
in
scas
imul
fldt
or
pop
cli
pop
popa
sub
jns
pop
dec
or
or
cltd
sarl
ret
pop
mov
and
fnstenv
cmpsl
add
mov
dec
sbb
lock
xchg
enter
push
xchg
mov
push
loope
mov
lods
dec
dec
xadd
adc
fbld
pusha
inc
mov
dec
pop
mov
cmc
stc
mov
and
insb
ss
xor
aaa
and
in
repnz
addl
cmp
pusha
cmp
push
dec
xchg
subl
fptan
stc
decl
and
aam
aas
test
int3
cmp
mov
mov
dec
mov
test
lret
push
mov
out
imul
popa
pop
fcomi
call
inc
jecxz
addr16
scas
ljmp
push
jge
loopne
xor
js
aad
jnp
or
rclb
mov
das
je
dec
out
cltd
lahf
xchg
ss
fisubs
mov
inc
sub
pop
fwait
cmp
mov
push
inc
jle
pop
faddl
push
in
shlb
lods
rclb
cmp
pop
mov
das
inc
into
push
rolb
cmpl
xor
aas
stos
or
mov
push
arpl
cli
pop
xchg
leave
outsb
pop
pop
jb
sub
in
and
test
jo
push
and
repz
ror
jo,pt
adc
dec
cltd
mov
mov
gs
jl
stos
or
xchg
xlat
xor
cmpsl
mov
insb
lcall
push
imul
jae
xor
or
mov
mov
call
xor
jge
scas
cmpsb
sub
icebp
cmp
pop
adc
xchg
fsubrl
aaa
pusha
jl
nop
inc
test
clc
sbb
cmp
call
push
fnstcw
cmp
mov
ljmp
jl
sub
inc
inc
push
mov
mov
popf
sbb
inc
fisubrl
test
lret
sbb
loope
pop
xadd
cwtl
lea
ljmp
leave
mov
mov
fimuls
and
adc
jbe
push
dec
sub
arpl
repnz
out
fsts
lcall
lds
mov
into
icebp
mov
dec
scas
sbb
sbb
mov
in
loop
cs
cmpsb
insl
fisttps
jo,pt
push
shrl
xor
in
inc
mov
dec
jmp
stos
outsl
lods
mov
jmp
adc
dec
cltd
das
mov
mov
dec
xor
sub
pop
and
shr
ret
pusha
popf
insb
sbb
loop
jb
mov
mov
mov
and
pop
or
into
ja
out
push
mov
ret
and
xor
mov
aaa
push
push
idiv
cmp
dec
jmp
gs
dec
jg
inc
out
test
mov
pop
inc
pop
fildll
das
push
sbb
xchg
add
jmp
mov
bound
jl
ljmp
mov
lret
outsl
lods
inc
adc
test
xchg
psubb
mov
xor
push
test
mov
push
xchg
jb
loopne
fwait
repz
stos
call
sub
sbb
xlat
fidivl
inc
mov
enter
scas
ds
addr16
daa
fisttpl
pop
jb
push
xor
std
fs
and
std
xchg
push
sti
rol
jnp
loop
aad
pop
gs
outsl
or
push
fdivs
ja
push
mov
je
push
lods
xchg
xor
fs
sub
jo
test
push
add
pusha
ljmp
jp
pop
push
push
xor
push
cs
test
repz
xchg
mov
pop
xor
fistpll
add
xor
mov
ret
loop
aad
aad
subb
std
fistl
fs
jnp
dec
repz
mov
icebp
imul
in
int
mov
xor
mov
sarl
imul
sbb
pop
xor
out
outsl
dec
pusha
jae
out
jge
sbb
popf
sti
cmp
mov
jo
cmc
adc
dec
mov
inc
in
mov
popa
xor
pushf
outsb
pop
xchg
movsb
aam
movsb
loopne
daa
xchg
push
pop
mov
pop
cltd
jns
jae
xchg
jmp
jle
lock
and
jo
mov
xchg
xchg
pop
dec
fdivl
mov
pop
sub
dec
mov
xor
dec
pop
push
fstps
cmp
ss
or
ljmp
cmp
pop
daa
mov
dec
mov
sar
aad
jg
fiaddl
push
adc
mov
cmp
dec
scas
push
pusha
pop
in
jns
into
jne
mov
gs
imul
imul
stos
inc
aas
or
movsb
fdivl
fcomps
push
out
inc
mov
jne
cmp
sub
jg
push
rcl
out
and
out
loop
mov
scas
push
mov
adc
add
nop
mov
stc
js
mov
push
loopne
gs
pop
data16
aam
idivl
inc
dec
in
cld
movsl
test
mov
sti
daa
jge
lahf
inc
sti
mov
pusha
xchg
push
sub
push
cmpsl
sbb
mov
mov
mov
out
mov
add
mov
lods
aad
mov
stc
outsb
cwtl
ficomps
iret
int
lret
decl
rolb
rcll
mov
jecxz
mov
pop
xchg
adc
or
mov
popf
lods
jnp
add
xchg
dec
cld
cwtl
cmc
jmp
cld
jno
push
adc
lods
jns
inc
xorps
sub
or
xlat
sbb
mov
and
enter
xor
push
pop
shrb
lods
xor
pop
aas
mov
jno
push
enter
scas
jae
inc
sub
cli
imul
fimuls
call
jmp
cs
in
jnp
outsl
lcall
cmp
or
xchg
xor
xchg
adc
mov
cmp
fisttpl
nop
hlt
stos
and
mov
ds
and
lock
shll
sbb
rorb
xchg
sbb
fdivs
xchg
out
scas
and
pop
jmp
adc
mov
push
and
xchg
pop
test
xor
fsubrl
ja
out
rcl
pop
adc
insb
and
lret
addr16
mov
out
mov
adc
pop
or
ja
cmc
xchg
fwait
push
rolb
movsb
test
imul
clc
push
js
mov
pop
lods
add
les
movsl
test
and
and
jg
cmovo
mov
ds
add
sbb
sbb
xchg
cmp
popf
xchg
sti
call
mov
int3
mov
xor
push
add
inc
add
fisubs
ficoml
icebp
mov
inc
dec
push
cltd
cmpl
sub
jmp
inc
bound
lds
push
fwait
std
pop
jg
pop
adc
movsl
divl
imul
add
jb
mov
mov
lods
dec
add
std
fwait
jle
sub
cmp
jg
outsb
pushf
inc
gs
and
inc
test
pushf
xor
int3
fwait
cld
pop
jmp
sub
cmpsb
mov
push
fs
lret
loop
push
pop
mov
lcall
inc
or
jp
sahf
adc
scas
stos
jb
sbb
sahf
dec
stos
and
mov
popa
rcr
xor
mov
jae
js
pop
sub
aas
lcall
pop
shll
sub
clc
insl
mov
or
adcb
push
dec
pand
jecxz
xchg
cld
add
ret
jo
mov
mov
mov
lcall
jl
stos
or
mov
stos
fdivl
fsubrs
or
add
arpl
dec
dec
inc
stc
jns
ret
pushf
mov
aas
adc
mov
jl
sub
mov
dec
xchg
pop
js
dec
insl
in
mov
push
popf
loopne,pn
jecxz
dec
lea
hlt
aaa
data16
mov
imul
das
cs
xor
or
int3
fwait
inc
aad
ljmp
xchg
cmpsl
jne
xchg
xchg
stos
sub
addr16
dec
test
ret
icebp
mov
and
dec
fimuls
inc
les
rolb
pushf
out
sub
int3
daa
out
std
bound
shlb
cmpsl
hlt
dec
add
push
loopne
push
jb
mov
popf
mov
in
popf
xor
adc
mov
push
mov
movsl
imul
push
adcb
fsubrs
cld
js
sub
add
ljmp
loop
and
shrl
jl
pop
aad
adc
xchg
or
sbb
in
aas
int3
and
lcall
ja
test
sahf
mov
aad
aam
arpl
out
or
jno
jnp
getsec
sub
rep
shlb
arpl
adc
cmp
mov
iret
and
lret
aam
lcall
sbb
cmp
clc
mov
push
imul
mov
outsb
fdivr
xchg
scas
insl
or
mov
or
mov
jb
stos
mov
xchg
mov
pop
imul
jle
nop
cmp
cmp
sub
in
pop
aaa
icebp
test
push
adc
rcr
sub
xor
pop
xchg
and
data16
mov
not
sbb
xor
movsb
or
jae
xchg
dec
out
je
xchg
fstl
stos
cmp
ljmp
mov
mov
loop
mov
stos
jmp
or
jecxz
and
push
stos
outsb
push
test
xchg
push
mov
sub
iret
cmp
jae
cld
fsub
fmuls
cmpsl
out
mov
or
sar
inc
rcrb
xor
or
xchg
or
aas
sar
dec
ljmp
gs
pop
arpl
cmp
cltd
into
pop
dec
aad
dec
call
mov
xchg
mov
psrlw
dec
mov
enter
or
pop
cmp
dec
ficomps
in
les
aam
lock
lcall
pop
insl
test
sub
leave
inc
fdivrl
add
sbb
or
movsl
cmc
push
and
cmpl
int
mov
out
jae
push
cli
lret
loopne
and
loop
adc
cmp
out
rcrl
pop
sub
gs
cmp
inc
hlt
dec
or
pop
test
pop
popa
push
jae
or
call
sub
out
sub
movsl
call
gs
stos
mov
or
stc
test
dec
ljmp
cmp
leave
mov
add
iret
sub
dec
cmp
es
dec
xchg
push
adc
sub
sti
pop
mov
mov
aas
jecxz
inc
idivl
repz
icebp
sub
jecxz
and
or
rcr
loope
jne
subl
inc
mov
push
mov
imul
lds
xor
mov
repz
cmpb
pop
cmp
jge
in
lea
mov
or
or
imul
pushf
fistps
jno
popa
test
push
push
repnz
movsl
leave
dec
scas
roll
adc
sub
xor
cld
mov
jb
cli
pop
jle
jno
sub
enter
mov
sbb
push
pop
lahf
insb
and
outsl
scas
mov
inc
add
mov
dec
xor
jl
mov
cltd
std
sub
or
jbe
and
and
pop
sub
into
jbe
repz
insl
add
cmpsl
imul
clc
mov
in
mov
pop
sub
pop
xchg
sti
add
lahf
inc
inc
rep
scas
mov
jl
mov
mov
inc
std
hlt
xchg
movsb
rorl
xor
cmc
jns
mov
sahf
xchg
jp
out
jo
fcoml
addl
daa
ja
fwait
das
jo
stc
sbb
adc
ret
mov
clc
stos
jecxz
and
xchg
xor
jbe
cmp
movl
or
push
and
and
sar
cmp
ljmp
iret
or
and
out
mov
push
fs
leave
pop
inc
sbb
xchg
scas
cli
dec
mov
inc
sub
lods
and
fstl
and
and
test
sub
mov
fmuls
sub
or
arpl
adc
xchg
cmp
push
bnd
stos
mov
push
sahf
mov
xchg
stos
adc
sbb
test
andb
lret
daa
cmp
mov
and
sbb
int3
lock
ds
and
imul
mov
xor
pop
imul
pop
adc
push
cmp
mov
addr16
outsl
les
in
adc
in
jnp
pop
mov
xchg
lahf
sbb
sub
int3
mov
add
push
cmp
bound
ljmp
xorl
push
shr
mov
push
cmp
stos
sbb
rol
push
xchg
loop
shl
mov
cmpsb
test
xchg
add
adc
xchg
lds
clc
sub
sarl
xor
pop
xor
cltd
inc
mov
dec
nop
xor
inc
jmp
dec
out
pop
pop
pop
fsts
aad
sbbl
mov
or
arpl
pushf
inc
inc
leave
int3
hlt
mov
std
dec
cmp
fmull
lcall
or
cmc
test
js
cmp
test
jns
fisubrl
xlat
loope
inc
rcr
loopne
mov
cmp
push
add
or
fistpl
cwtl
cmp
jle
add
addr16
lahf
adc
pop
insl
xor
cld
ljmp
pop
push
mov
es
and
fsubrl
dec
dec
in
leave
jge
xchg
xchg
sbb
xor
mov
into
inc
mov
push
arpl
dec
test
and
imul
ds
inc
mov
mov
pop
cmp
dec
in
insl
or
mov
repnz
mov
sbb
mov
adc
xor
lahf
stos
lahf
mov
jp
cwtl
mov
push
adc
push
sub
pusha
xor
insb
sub
and
mov
ret
push
mov
dec
and
mov
and
sbb
jl
out
rcll
ror
ret
cmpsb
mov
dec
inc
push
mov
out
xchg
in
jp
adc
popa
xchg
inc
pop
scas
jns
xchg
cmp
push
mov
and
mov
jecxz
mov
aaa
pop
pop
adcl
scas
adc
xor
sbb
cwtl
and
or
in
or
fwait
sarb
mov
mov
and
iret
xor
push
call
out
mov
rcrl
shl
mov
push
arpl
cmp
fdivs
push
mov
adc
sbb
call
stc
inc
lds
dec
ret
pop
mov
out
mov
sbb
xor
pop
mov
fmull
sub
notl
xor
pop
dec
xchg
adc
imul
and
sub
xchg
jb
out
sub
or
in
fsubrs
mov
xchg
pcmpgtw
scas
mov
mov
pop
pop
xchg
mov
push
and
mov
xchg
mov
sub
pop
insb
mov
xchg
add
lea
icebp
sub
es
sbb
sub
mov
cmpsl
jl
icebp
jnp
cld
popa
sbb
movnti
jno
inc
mov
rcrb
jp
shll
icebp
test
cmp
fdiv
cmp
int3
lret
mov
aam
daa
loop
int
repnz
repnz
mov
clc
pop
add
add
clc
lods
add
addb
mov
cmp
test
lock
lock
bound
dec
dec
mov
outsb
aam
xchg
stc
sub
repz
aaa
adc
sub
mov
inc
addl
out
jle
pop
div
sub
mov
call
dec
push
mov
aaa
add
sbb
aas
dec
sarb
jp
cmp
xor
sbb
mov
add
mov
jne
pop
pop
xchg
insl
test
inc
outsl
outsl
leave
repnz
js
daa
dec
ret
rcrl
insb
stos
mov
add
pop
jecxz
ljmp
or
mov
insl
adc
mov
and
mov
inc
mov
and
je
cmp
idivb
xor
bound
mov
std
sbb
std
fcomps
cmpsb
mov
xchg
mov
push
dec
insl
repz
mov
mov
dec
idiv
jae
shl
popf
mov
mov
jb
push
cli
xchg
mov
fs
xor
dec
out
or
loope
lods
push
fiadds
mov
sbb
in
jne
cli
into
xor
cmp
in
xorl
in
jns
mov
aam
sbb
in
sahf
xor
jp
pop
out
push
arpl
repnz
push
pop
scas
clc
fists
xor
dec
sti
dec
data16
jl
aas
push
cmp
fstpt
push
fildll
shlb
pop
lds
lods
call
pop
inc
stos
xlat
dec
pop
mov
inc
xchg
and
ss
scas
push
dec
push
leave
jo
sub
lret
adc
fisubrl
mov
lret
popf
fwait
imul
lcall
and
into
add
das
out
xor
loope
in
push
push
aam
xchg
enter
es
xchg
cmp
sub
cmp
jnp
push
lret
sub
dec
sbb
mov
pop
and
jbe
pop
fs
lods
and
aad
xor
nop
push
test
adc
and
mov
add
pop
mov
and
inc
cmpsl
mov
adc
xchg
subl
fsubs
xchg
imull
sarl
push
andb
inc
cli
jp
rcll
test
mov
sarl
jecxz
ds
sti
push
cli
aaa
adc
add
xchg
sbbb
call
jb
push
int
xor
notl
push
or
in
mov
les
les
sub
push
cmc
or
push
out
shll
aaa
out
sub
or
adc
lcall
inc
rcll
in
loop
sub
jo
or
mov
int3
push
push
cli
loop
xchg
pop
gs
aam
out
sahf
mov
dec
cmpsb
jmp
out
jmp
les
idivb
xchg
pop
jl
mov
mov
xlat
adc
mov
imull
jmp
inc
popf
in
push
jae
inc
loop
xchg
mov
pushf
xor
sar
pusha
xchg
pop
inc
pop
popf
aad
arpl
and
inc
mov
adc
xchg
dec
cmp
xchg
loopne,pn
mov
add
mov
inc
into
jo
cmpsl
hlt
inc
lods
fimull
out
jmp
push
ljmp
scas
or
xlat
adc
add
or
cli
stos
sbbl
bound
jmp
mov
mov
int3
cmp
js
mov
enter
pop
nop
add
mov
aad
mov
mov
sti
or
stc
sub
push
jecxz
loopne
insl
pushl
pop
sti
pop
and
and
movsl
icebp
je
in
xchg
in
pushf
jecxz
mov
pop
mov
push
pusha
pop
mov
lock
mov
popa
stos
sub
loope
outsl
or
pop
add
aaa
or
lcall
das
inc
decb
jge
inc
in
mov
pop
loopne
add
stos
bound
aam
ds
add
or
pop
lret
cld
movsb
sbbb
jmp
xor
gs
pop
lret
jnp
leave
or
jns
jl
mov
hlt
xor
aas
xchg
out
jmp
mov
sub
cmpsl
cltd
dec
jbe
xor
sti
jmp
mov
add
jge
es
pop
imul
fucomip
call
xlat
scas
mov
or
sbb
cmpsl
mov
cmp
push
sub
xchg
mov
xchg
lcall
lods
ss
sarl
mov
jge
std
loopne
mov
mov
mov
add
outsb
adc
adc
dec
popf
call
movsl
ljmp
jecxz
orl
int
hlt
int3
mov
test
cmc
cvttps2pi
push
or
mov
ret
pop
cmp
hlt
mov
jl
hlt
jp
inc
pop
fndisi(8087
and
subl
xchg
dec
lock
out
cmpsb
push
inc
pusha
lea
mov
mov
addb
mov
enter
icebp
fistps
inc
or
cld
mov
popa
sub
xchg
insl
insl
into
in
loop
sbb
inc
repnz
or
cmp
push
jle
sbb
sahf
stos
out
mov
adc
scas
outsb
fdivr
aas
fisubs
push
inc
dec
sbb
ds
mov
adc
adc
loope
ljmp
divl
push
and
dec
fidivs
out
push
cmpl
push
pop
mov
fidivl
dec
mov
int3
jl
mov
clc
cltd
or
mov
shlb
xor
dec
jp
adc
or
sbb
insb
incl
in
xchg
nop
jle
cmp
xor
mov
mov
mov
or
shl
pop
push
popf
mov
mov
movsl
mov
jb
dec
add
pop
xlat
rcrb
add
sbb
xor
inc
je
xor
pop
xor
jbe
add
cmp
mov
mov
sbb
sub
or
out
xorl
jnp
clc
hlt
xchg
mov
xchg
ret
cli
or
pusha
sub
inc
lahf
lds
mov
jp
and
mov
shlb
les
call
dec
in
hlt
lods
cs
cmp
and
pop
and
xlat
fwait
add
mov
mov
stc
pop
xrelease
xchg
call
pop
mov
sarl
and
mov
fs
add
dec
aaa
inc
je
jge
push
int3
jnp
stos
mov
jge
out
jae
hlt
push
mov
jne
sub
adc
lcall
mov
adc
stos
cmp
push
xchg
loope
xor
adcl
jns
andl
stos
xchg
sbb
out
mov
cltd
mov
dec
inc
in
stos
shlb
rcr
stos
sub
cmp
cmp
out
lret
aam
xchg
pop
insl
call
push
jne
push
popa
scas
lahf
loop
stos
lcall
outsl
test
mov
les
pop
in
into
pushf
pop
rcrb
xchg
test
cmpb
test
xchg
movsb
jnp
sub
cmpsb
lds
or
dec
mov
mov
jmp
xor
adc
pop
or
into
scas
aad
jns
and
ret
sbb
mov
mull
icebp
rolb
aas
or
or
shll
cmp
or
cmp
div
adc
scas
aam
hlt
and
mov
mov
xchg
repnz
xor
out
arpl
jo
add
lods
sub
push
rclb
xor
fdivrs
jo
mov
add
xchg
std
lods
adc
jg
std
repnz
mov
push
jge
xchg
lret
orl
push
sub
pop
int3
fstps
imul
movsb
push
daa
bound
out
cs
sub
xor
dec
mov
or
loop
fisubrl
test
jle
mov
or
jmp
push
es
mov
mov
cltd
loop
sbb
notb
test
and
inc
and
add
adc
mov
jecxz
jg
dec
stc
mov
xor
mov
or
ret
ss
jne
pop
movsb
jne,pt
cmp
sbb
or
test
insb
arpl
xchg
push
mov
movsb
pop
repnz
jg
dec
inc
push
lock
into
jp
lea
push
repnz
pop
out
inc
sub
mov
cmp
pusha
xor
rep
fcom
testb
pop
sbb
fcmovbe
mov
out
testl
mov
or
cmp
or
popf
xchg
mov
mov
jns
adc
cwtl
pop
out
ret
ficoml
popa
stos
mov
dec
imul
xchg
xrelease
das
test
push
xor
xor
xlat
lock
insb
inc
mov
dec
or
and
std
scas
fsubrs
push
jb
fs
jecxz
push
pop
pusha
js
inc
fmuls
mov
jne
rclb
fwait
mov
ljmp
jg
leave
xor
imul
jb
mov
lahf
les
xor
orl
push
jns
or
or
js
std
jne
in
pushf
in
pop
test
xor
lods
imul
out
repnz
stc
xor
repz
ret
xchg
test
xlat
push
insl
lods
popl
cmp
inc
and
mov
and
fists
pop
int
pop
inc
cmc
in
stos
push
lods
xchg
and
jo
add
xor
jno
pop
push
mov
out
or
mov
scas
loope
pop
test
dec
inc
push
sbb
movsl
aam
push
push
cmpb
iret
add
addr16
int
repnz
xchg
int3
fildll
pop
push
aam
cmc
movb
mov
jne
in
dec
fwait
cmp
and
icebp
jno
jl
pusha
dec
scas
push
cmp
insl
jge
nop
pop
popa
and
mov
addb
jae
das
adc
and
sub
pop
adc
mov
jb
js
movsb
and
adc
movsb
in
mov
and
movsl
pop
mov
mov
pop
dec
stos
pop
mov
inc
xor
scas
dec
lret
mov
adc
adc
pop
mov
fistps
loopne
fcmove
pop
sbb
pop
inc
ret
repz
xchg
daa
ret
pop
call
push
and
and
sub
test
xchg
inc
sub
inc
inc
dec
pop
iret
inc
dec
adc
bound
das
cli
sbb
sbb
popw
cs
xchg
rcll
pop
iret
aam
dec
insb
nopl
jnp
mov
icebp
dec
test
out
jbe
jb
js
mov
scas
or
cs
leave
sahf
in
addr16
fistl
adc
lret
lret
gs
xchg
inc
jae
push
inc
cltd
and
xchg
inc
pop
push
es
stos
mov
xchg
imul
jno
cmp
pushf
jmp
push
imul
adcl
add
clc
stos
scas
push
fildll
adc
test
cmp
push
test
es
xchg
dec
in
mov
rcrb
stos
fwait
jb
cmp
lea
sub
inc
int
push
mov
xchg
xlat
adc
lahf
mulb
add
jae
adc
js
in
adc
aad
mov
mov
jnp
pusha
adc
es
jne
sub
loope
fisttps
sub
mov
inc
imul
mov
repnz
inc
iret
xchg
cmc
pop
test
dec
out
push
fs
lds
daa
add
push
adc
sahf
push
push
fistpl
push
xchg
jno
gs
dec
push
sbb
jo
dec
sbb
jns,pn
inc
pop
mov
sti
clc
in
pop
mov
sub
ja
pop
sti
js
mov
sbb
dec
repnz
sub
hlt
ljmp
dec
xchg
add
cmc
push
das
sbb
xor
mov
push
fistl
push
std
clc
mov
mov
and
rol
xlat
inc
adc
pop
sub
pop
xchg
imul
xchg
and
xor
mov
push
pop
jns
shrb
jecxz
mov
inc
setb
and
cld
sbb
mov
pusha
mov
and
push
cmp
pop
fildll
or
mov
shlb
xchg
adc
pop
inc
nop
fisubrl
and
pop
pop
gs
pop
push
mul
mov
cltd
decl
xchg
and
add
pushf
push
inc
add
mov
daa
popa
xor
mov
push
jae
in
lahf
je
test
lds
mov
sbb
hlt
stc
loop
ss
xchg
jo
mov
imulb
movsl
add
mov
ret
leave
in
popa
repnz
lahf
mov
push
dec
arpl
or
xor
test
mov
xchg
cmpsb
sub
mov
jle
or
aas
xor
fnsave
mov
jecxz,pn
and
mov
dec
jle
or
stos
lds
es
mov
stos
or
jp
push
sbb
mov
jne
dec
xchg
pop
cwtl
clc
jnp
je
xor
loopne
push
jae
aaa
jb,pn
mov
xchg
jmp
jo
sub
mov
push
sbb
std
mov
mov
xchg
mov
mov
xlat
dec
or
mov
das
and
clc
stos
jb
fdivr
adc
jp
add
push
cmc
jmp
lret
fcmovnb
sbbl
jns
into
pusha
test
jmp
add
sbb
jb
std
sbb
xchg
pop
sub
adc
sbb
arpl
or
push
sbb
fidivl
push
inc
or
sub
test
or
add
insl
and
int3
psllq
sub
push
xchg
inc
pmaddwd
in
cmp
xor
gs
dec
sbb
into
push
sub
test
mov
or
inc
mov
or
and
cmpsl
es
in
pop
out
and
int3
in
out
xchg
pop
inc
lods
mov
mov
xchg
push
lods
cmp
xor
jp
lret
mov
fwait
push
cmpsb
pusha
mov
mov
ljmp
xchg
fidivrl
xor
add
sub
add
and
ret
xor
mov
sti
push
push
mov
stc
cmp
cmp
jae
push
xchg
jmp
adc
movsb
mov
xchg
cld
dec
push
cltd
push
push
xor
lods
cmpsb
xlat
sub
mov
pusha
hlt
cmp
dec
lea
mov
add
in
sub
xchg
jp
icebp
aam
xor
or
mov
in
shlb
push
hlt
sub
mov
sbb
xchg
sub
sub
fs
mov
lods
sbb
je
sbb
push
cmpsb
ffreep
adc
xor
pop
or
addb
xor
scas
or
mov
rcrb
ja
cmp
test
jnp
mov
dec
sub
pop
fs
cmp
imul
mov
inc
fmull
mov
into
cltd
sub
jb
inc
orl
decb
in
insb
frstor
cmp
sbb
sbb
mov
xchg
jl
sbb
aaa
mov
pusha
mov
mov
loope
cmp
jg
jmp
loop,pn
lods
xchg
jnp
lcall
or
cmpsw
mov
arpl
xchg
sub
aaa
jl
das
dec
mov
repz
sub
and
jge
pushf
cmpsb
xchg
inc
cwtl
fwait
pop
xchg
sahf
lds
xchg
sub
cmp
or
lock
into
and
loop
xor
dec
fiaddl
mov
xor
std
in
pop
ret
popf
sti
mov
sub
inc
frstor
in
fstl
negl
fs
loopne
xor
pop
xor
cmp
xchg
ss
xor
pop
add
in
push
stc
decl
push
cmpl
push
xlat
ljmp
mov
enter
and
push
movlps
push
ret
inc
sbb
adc
and
pop
icebp
jb
icebp
dec
popa
es
orl
mov
arpl
push
adc
sub
sub
pop
aad
push
addr16
in
mov
mov
sti
jg
sub
lea
mov
adc
das
loopne
add
hlt
cmp
jmp
insl
dec
xchg
push
xor
or
mov
enter
dec
popf
and
sarb
jl
mov
daa
jg
fcomp
sbb
inc
xlat
cmpsl
mov
popl
mov
int3
push
jae
ja
imul
repz
fs
das
nop
and
stc
cmc
cmp
loope
jmp
xchg
shl
jmp
sbb
pop
inc
push
cmp
movsl
add
mov
notb
mov
fwait
cmpsl
cli
pop
and
inc
addb
sbb
xor
insb
pop
and
xchg
ljmp
sbb
push
ret
stc
add
xor
into
outsl
fldl
in
dec
jae
aam
add
daa
mov
xor
das
outsl
pop
mov
leave
xchg
outsb
cmp
cmp
int3
cwtl
ljmp
cmc
xor
push
mov
add
pop
cmpsb
cs
cld
mov
sub
sub
enter
lahf
fs
aas
mov
jnp
shl
pop
dec
movsl
cmp
push
popa
sub
stos
push
inc
xor
pushf
bound
mov
shll
jno
xor
jbe
mov
test
adc
xor
aad
mov
pusha
mov
xor
cli
in
jne
push
xor
cmpsl
jmp
push
or
xchg
daa
jb
cwtl
pop
jle
pop
jge
mulb
inc
test
loope
fisttps
inc
sbb
repz
js
cmp
adc
je
mov
lcall
jo
sub
rcrl
jns
call
dec
xchg
lods
or
addb
xor
adc
xor
add
and
mov
jns
push
das
or
add
subl
cmpsl
ret
adc
icebp
addr16
mov
lock
insl
sbb
inc
mov
jp
psubw
repnz
xor
cld
shlb
add
cmp
cmc
cltd
movsl
andb
mov
inc
subl
cmp
cltd
xchg
scas
and
daa
out
aas
push
fcoms
aas
push
in
ret
push
test
testb
cmp
nop
adc
jecxz
lds
shll
push
push
rcr
push
ret
cmp
stos
xchg
shlb
mov
clc
add
lret
lock
out
lret
sub
les
jge
cmp
fisttps
push
repnz
pushl
mov
fadd
outsb
mov
jmp
ds
adc
or
mov
insb
sub
dec
dec
or
cli
lret
cltd
push
inc
and
scas
push
call
jb
out
call
nop
mov
mov
xchg
movl
insl
mov
fstpl
cmp
mov
into
pop
adcb
pop
push
adc
inc
mov
add
adc
add
push
das
cmp
inc
sbb
push
into
push
add
pusha
sti
push
inc
jnp
xchg
les
iret
arpl
pop
adc
iret
rorb
xor
xchg
and
mov
sub
cmp
mov
mov
and
inc
sbbb
pop
lock
scas
cmp
jne
and
arpl
sbb
test
mov
scas
mov
pop
sbb
or
jp
into
adc
push
fcoml
xor
pop
pop
xchg
mov
pop
icebp
mov
lcall
inc
or
adc
iret
and
dec
fmull
mull
pop
mov
lret
icebp
mov
jmp
jo
stos
in
call
test
insl
test
scas
lahf
pop
call
jecxz
test
sub
sbbb
jmp
sbb
lds
pop
je
mov
scas
cmp
xor
cmpsb
sub
pop
adc
jae
lds
lahf
inc
adc
add
xor
hlt
jmp
xchg
xchg
and
push
test
push
test
mov
frstor
in
andl
cwtl
mov
push
push
arpl
xor
xor
sub
jne
and
or
xchg
pusha
jl
jns
fwait
subb
inc
movsb
add
out
cwtl
or
push
jo
sbb
test
inc
lods
loope
xchg
xchg
inc
rcr
fwait
xorl
mov
adc
xchg
adc
mov
pushf
testl
and
scas
add
xor
into
ret
jnp
out
add
xor
mov
lods
dec
imul
loope
cmc
cmp
adc
sub
adc
lret
bound
and
fisttpll
fistpll
ret
xor
dec
jg
fcmovu
mov
jecxz
sub
sub
scas
push
in
push
test
inc
mov
pop
mov
cmp
push
sbb
loope
dec
mov
or
in
call
sbb
sti
ja
outsb
adc
fwait
stc
cmp
push
repz
test
cmp
icebp
add
inc
push
inc
push
mov
push
fnstsw
mov
enter
lock
sub
cmp
cmp
out
pushl
jo
pop
jecxz
add
pop
adc
inc
and
jg
mov
cmc
push
jmp
out
int
pusha
sbb
inc
es
insb
repz
stc
inc
or
mov
pop
das
mov
lcall
sbb
push
lds
cmpsb
hlt
aaa
stos
arpl
fstpt
shlb
in
or
push
push
mov
stc
adc
pop
loopne
fistl
shl
into
push
ljmp
into
adc
adc
cmp
out
ret
push
jl
xchg
arpl
mov
lcall
mov
cli
fwait
movsl
ret
pop
sub
call
fcoml
xchg
mul
add
fsubl
inc
scas
scas
repz
in
cbtw
inc
fs
mov
stc
in
aad
ret
movsb
xchg
sbb
and
push
imul
pusha
lds
fimull
xor
dec
push
xlat
mov
pop
or
push
cwtl
and
jne
mov
rclb
mov
xchg
mov
push
jge
mov
or
fdivrl
jnp
adc
fdivrs
mov
sbb
mov
aad
mov
mov
xor
stc
clc
lret
hlt
addr16
addr16
add
daa
shrb
das
js
mov
out
or
or
data16
sbb
add
int3
iret
mov
push
inc
stos
mov
lods
sti
sbb
adc
push
and
pop
int3
enter
and
add
pushf
icebp
pshufw
push
in
in
aaa
iret
enter
sub
and
mov
push
jnp
das
dec
push
inc
add
lret
push
inc
sarl
test
dec
push
cld
cmpsl
hlt
sub
sarl
stos
add
mov
bound
sub
sbb
into
xchg
push
lcall
js
jb
inc
dec
push
test
sub
call
ss
aam
lock
lcall
fwait
xchg
outsb
mov
sub
scas
cmc
xchg
bound
push
lret
pop
xor
mov
mov
pop
mov
push
out
iret
cwtl
cs
cmpsl
pop
mov
lods
mov
pushf
cli
test
jnp
call
fistpl
cmp
sub
test
push
push
xchg
cmp
loop
lods
insb
pop
push
jl
es
dec
lcall
add
mov
ret
mov
lahf
into
mull
add
cmp
scas
loope
mov
fdivl
mov
pop
adc
adc
or
and
loopne
adc
sti
push
adc
data16
fstpt
jae
das
insl
sbb
int
xor
fdivs
sarb
sbb
and
and
pop
pop
lret
aad
jp
sbb
jne
fiaddl
lock
test
aaa
cltd
pushf
in
jnp
pop
sub
cmp
dec
add
mov
arpl
negb
aam
daa
jb
imul
popf
mov
int
je
test
mov
mov
test
nop
cs
sub
fsub
xor
imul
ret
popa
loopne
outsb
scas
fstl
fisubl
push
lret
mov
or
jp
sbb
std
jg
movsl
inc
adc
movsl
mov
cmp
in
dec
nop
dec
shlb
mov
shl
fs
out
test
out
rolb
ret
pop
and
stos
test
dec
lcall
lahf
cwtl
lahf
notl
inc
test
cwtl
sbb
mov
orb
in
xchg
les
or
inc
das
nop
outsb
sbb
xchg
xor
clc
and
mov
xchg
jmp
push
dec
out
push
pusha
mov
pop
push
popa
mov
das
xchg
jae
out
leave
fnsave
sar
out
fistl
dec
and
imul
inc
addl
cwtl
cld
ja
in
in
inc
inc
insl
daa
lock
std
cs
out
out
ljmp
adc
and
lods
add
jae
inc
jmp
es
and
inc
lods
xchg
cmpsb
sbb
rcl
mov
leave
bound
jns
pop
jl
lret
cli
ret
sub
frstor
dec
xchg
xchg
adc
jo
jmp
arpl
inc
testl
pop
fs
push
push
rcll
dec
add
jns
dec
cmpsb
jo
dec
mov
aaa
mov
jl
push
mov
and
inc
fcompl
in
pop
sbb
pop
or
fimuls
imul
adc
xchg
into
pop
rclb
pop
or
cmp
ja
stos
shlb
add
scas
in
mov
rolb
push
jae
sbb
shlb
fwait
mov
inc
fdivrl
or
int
adc
pop
inc
into
jp
scas
mov
subb
cmp
xchg
movsl
cmp
icebp
pop
mov
push
xorl
out
or
cmp
in
pop
push
cmc
lock
fld1
mov
and
mov
jno
add
sub
inc
push
orl
aas
aam
dec
in
repz
push
int3
push
inc
inc
cld
xchg
and
sub
jg
jnp
mov
imul
divl
adc
xor
stos
sahf
sahf
jmp
outsb
dec
mov
ret
sub
and
cmc
out
pop
mov
adc
cs
mov
sub
xor
fnstsw
jno
xchg
add
add
lds
mov
and
pop
shll
dec
xchg
fnstcw
stos
stos
shlb
gs
mov
adc
icebp
push
lahf
leave
ds
mov
cmpsl
inc
in
mov
sub
sbb
out
adc
pop
or
push
pushf
enter
lods
inc
movsl
test
ds
je
or
sbb
dec
scas
fwait
adc
int
into
or
dec
es
or
loope
mov
mov
mov
imul
aas
add
ja
jp
mov
mov
imul
ss
out
jle
jne
mov
rorb
or
imul
xchg
popa
xchg
fmuls
ja
pushl
mov
mov
imul
loopne
loope
dec
fsubr
arpl
stos
int
ja
int3
mov
adc
add
cmp
ret
inc
adc
lcall
shll
or
mov
adcb
lret
cmp
aam
push
int
outsl
jg
push
or
ss
and
mov
xor
push
mov
lret
jl
push
and
push
fcomps
inc
push
mov
stos
loopne
mov
daa
jbe
jbe
ljmp
imul
jbe
adc
jl
jno
mull
mov
imul
adc
insb
add
in
xchg
cmp
push
adc
cmpsl
lods
int3
mov
lds
push
pop
inc
xor
dec
insl
adc
sub
mov
mov
or
jl
lret
icebp
hlt
lds
fstpl
xlat
mov
xchg
dec
lock
jge
sbb
repz
icebp
test
cmp
sub
lret
insb
adc
push
sarb
jo
ret
lods
add
sahf
subb
jbe
push
dec
fwait
movsl
jg
push
fs
mov
push
xor
inc
push
mov
out
or
inc
xchg
sub
aas
adc
cmp
inc
mov
xchg
jne
lock
test
xor
push
dec
daa
and
pop
sahf
js
cmpsl
shlb
push
lods
adc
lock
jb
mov
mov
pop
and
pusha
push
out
dec
push
jmp
adc
movsb
lds
jo
mov
and
xchg
add
inc
xor
insb
lret
js
jl
ficoms
inc
sub
and
push
jle
sub
cmpsb
adc
adc
push
rol
mov
sbb
jbe
jg
sbb
or
xor
addl
pushf
faddl
shll
and
mov
add
jl
hlt
push
cmpsb
jns
xchg
cltd
mov
add
test
sbb
adc
cld
das
pop
in
fmull
in
test
xlat
js
cmp
and
push
mov
and
fcoml
hlt
insb
lret
stos
imul
mov
mull
inc
dec
popf
xchg
add
pop
bound
fwait
add
jb
add
xor
fdivs
sbb
adc
pop
lods
iret
dec
lret
mov
fsubrs
push
repz
ss
push
les
adc
test
es
xchg
test
add
lock
cmp
nop
pop
cmpsl
mov
pop
das
jecxz
test
jns
ret
pushf
fs
pop
lea
push
cmp
jns
mov
push
sub
aaa
stos
xchg
jnp
movsb
mov
das
aas
xchg
and
mov
stc
sub
or
push
jb
cmpsb
push
xorb
xor
fcoms
pop
fisttpll
movsb
and
fisttpl
int3
xorb
movsl
xor
mov
je
fadds
xor
andl
jp
cmp
xchg
lock
int3
call
popf
popa
ja
xchg
jp
jbe
lods
mov
hlt
mov
add
mov
push
xor
or
fidivrs
lods
cmc
dec
aad
dec
mov
inc
xor
pop
js
xchg
xor
sub
daa
fnstsw
cmp
in
inc
movsl
mov
xchg
rcrl
out
rcll
test
jge
psubusw
hlt
inc
sti
repz
fdivs
sub
pop
mov
bound
lret
xor
sub
pop
test
or
sub
arpl
cmp
mov
mov
mov
daa
and
mov
sbb
popa
imul
jnp
enter
push
fmulp
cmp
mov
pop
xchg
je
movsb
cwtl
pop
xchg
jg
pop
lods
subl
movsl
enter
shlb
push
sbb
push
or
or
fcmovne
stc
sbb
gs
std
mov
add
fldl
dec
mov
adc
push
sti
pop
xor
inc
inc
mov
pop
lcall
cmp
mov
xchg
mov
stos
rclb
dec
and
not
mov
mov
test
ret
xchg
ljmp
out
xor
cmp
addr16
orps
aad
mov
sub
xor
and
or
arpl
xchg
and
lret
cltd
lahf
xchg
sti
lods
xor
mov
or
and
xchg
ljmp
pop
inc
sub
out
and
dec
dec
xchg
imul
std
or
mov
shrl
inc
sub
rol
pop
ljmp
xor
cmp
test
sahf
push
mov
scas
sbb
insl
repz
popf
imul
jnp
adc
xchg
sbb
sahf
adc
sarb
test
in
in
mov
pop
dec
jecxz
aaa
pop
push
push
xchg
inc
dec
enter
ficompl
adc
divl
into
xlat
push
pusha
ret
and
add
cmp
jmp
add
insl
sub
ljmp
mull
dec
add
push
icebp
mov
sub
jge
dec
mov
jne
stc
ss
add
dec
rorl
push
movsb
notl
jl
into
enter
xlat
repz
lods
mov
and
lock
add
xchg
je
or
add
fbld
xchg
xchg
es
popa
lods
popa
xor
jnp
mov
nop
adcb
imul
clc
mov
inc
test
orl
sub
pop
xchg
aaa
es
or
and
and
dec
and
clc
jmp
pop
insb
sahf
mov
dec
mov
popa
xchg
mov
outsb
cmp
adc
hlt
lds
pop
mov
shlb
rorb
out
lcall
into
and
sub
test
xor
fstpt
in
xchg
xor
gs
jecxz
pusha
bound
xor
mov
inc
int
std
mov
and
aam
and
dec
sub
pop
insl
js
xor
dec
push
xchg
sub
arpl
sub
xchg
xchg
int
stos
ss
jae
cmp
sbb
jecxz
jns
test
cmpsl
cmpsb
xchg
mov
mov
push
push
xlat
pop
sub
scas
adc
out
mov
rcrl
xchg
jne
test
dec
jp
add
sub
imul
sbb
leave
push
stos
mov
sub
lea
leave
mov
jge
mov
sahf
js
sbb
add
leave
pop
xchg
jnp
lock
lcall
dec
xchg
dec
testb
pusha
stc
sbbl
psrlw
je
pop
out
dec
sbb
mov
rcrl
fcompl
dec
cmpsl
fildl
pop
ds
aaa
sub
jp
or
sub
xchg
pop
push
push
add
in
shll
mov
xor
xor
inc
mov
aas
out
mov
into
push
adc
lods
lods
call
out
sub
push
jbe
xchg
cmp
lret
lahf
aam
daa
leave
sbb
cmp
mov
or
xor
adc
hlt
sbb
pop
jns
imul
iret
outsl
jb
stos
xchg
stc
in
imul
jecxz
lret
enter
cltd
mov
outsb
jmp
lahf
cmp
or
jmp
xor
lods
push
je
fucomi
sub
dec
loope
scas
cmp
cmp
ss
ffreep
sbb
outsb
pop
or
mov
repz
clc
adc
cmp
xor
jecxz
mov
movsb
jl
lods
push
fistpl
add
aam
sub
gs
dec
fwait
testl
or
int3
pop
pop
sahf
leave
popa
adc
mov
jne
cmp
es
div
ds
dec
cmp
aas
lods
and
jecxz
daa
out
mov
sub
and
add
mov
fildll
test
in
and
dec
and
push
clc
sbb
in
movsl
mov
push
jnp
popa
cmp
adc
outsl
popl
roll
jbe
jecxz
add
or
arpl
jmp
xchg
inc
js
outsl
popa
sbb
dec
push
fnsave
in
mov
lea
icebp
arpl
pop
add
mov
adc
das
lret
fldt
mov
aam
lcall
add
or
push
dec
shll
out
loop
dec
pop
loop
sub
fstpl
xchg
cwtl
mov
repz
lea
lea
stc
orb
mov
push
cmp
in
repz
push
aad
or
repnz
pop
mov
xchg
push
sbb
flds
cmp
cld
aas
fmul
je
push
cmp
out
cmp
shr
or
and
mov
test
lods
out
fisubrl
std
pop
aas
sub
mov
xor
test
add
xor
mov
loope
daa
and
mov
cmp
scas
dec
lods
xchg
ds
scas
sub
popf
mov
pop
movsb
mov
sub
lods
stos
rcrb
lods
scas
jb
test
jb
cli
adc
cltd
sbb
pop
dec
pop
jns
push
and
fidivrl
mov
or
add
leave
add
sub
nop
out
push
xor
push
xor
sub
lcall
out
add
loop
lock
pop
into
sub
ss
mov
mov
sub
adc
notl
lahf
xchg
int
sbb
mov
adc
mov
inc
popa
mov
add
jl
cltd
xor
enter
adc
push
push
fisubrs
clc
repz
adc
outsl
test
xchg
jle,pn
mov
lods
fwait
scas
imul
inc
ret
sub
xor
xlat
dec
int
mov
scas
and
aad
out
int
pusha
ret
fldl
jl
pop
mov
loop
fnstcw
imul
adc
lock
pop
add
in
or
subl
sub
mov
out
xor
sub
lods
nop
cmc
jns
fmuls
sbb
in
enter
and
or
xor
pop
mov
mov
dec
sbb
push
clc
adc
jno
push
fists
test
push
mov
mov
mov
mov
push
fnstenv
adc
mov
dec
in
add
xor
pop
out
xchg
shlb
and
mov
mov
mov
adc
incb
fadds
pop
pushf
shll
int
arpl
cmp
jo
jb
das
les
arpl
in
or
mov
add
ds
sbb
dec
inc
or
mov
push
adc
xor
or
test
cmpsb
pop
test
pop
inc
popf
mov
cmp
test
fists
cs
and
or
int3
movsb
mov
mov
js
test
lcall
test
or
fdiv
popa
sarb
mov
clc
in
fucomip
fcmovb
in
pop
sub
push
mov
or
in
jle
cli
lcall
in
sahf
push
ret
sub
adc
inc
dec
nop
or
shrl
jo
jge
incb
inc
xor
icebp
idivl
push
mov
sub
test
imulb
in
dec
sbb
dec
sbbl
cmpsb
jns
imul
add
inc
iret
daa
pop
dec
mov
and
sbb
inc
jnp
dec
add
xor
repnz
mov
push
sbb
movsl
sbb
adc
aad
dec
loop
dec
mov
inc
test
data16
inc
fdivrp
or
cmpsb
aas
fwait
dec
pusha
mov
stc
fmuls
test
test
cmpsb
arpl
lcall
mov
stos
cmpsl
imul
xlat
or
rcrb
mov
lcall
add
daa
lahf
or
mov
pop
call
add
and
mov
jp
stos
mov
js
pop
shr
sbbb
add
adc
iret
push
sub
add
sbb
xchg
cmp
cltd
push
mov
push
sub
notl
ja
fists
add
push
gs
adc
inc
or
jne
mov
jo
xor
inc
xlat
stc
mov
cmp
mov
ds
shr
xchg
les
mov
xorl
hlt
push
pushf
inc
jno
mov
mov
popl
add
jecxz
daa
inc
xchg
pop
jg
push
icebp
mov
or
mov
rcl
xchg
jb
imul
sub
xchg
jg
mov
gs
fdivl
inc
lods
jg
pop
jl
ljmp
dec
cmp
lret
cltd
loope
test
xor
aaa
aaa
or
lods
or
push
xchg
push
or
sbb
jnp
fstl
imull
bound
add
add
cmp
push
jecxz
mov
divb
into
adc
fwait
nop
fucom
dec
push
mov
jbe
mov
lret
sbb
jge
scas
cld
leave
mov
sbb
mov
and
ss
sahf
repnz
repnz
rol
cmc
call
daa
psubq
arpl
inc
cmp
mov
xchg
hlt
jl
insl
dec
stc
sbb
sub
cmpsb
pushf
xchg
add
outsb
shufps
insl
and
iret
or
and
sub
sarl
jno
jne
pop
call
outsl
fcmovu
dec
adc
lods
pop
jo
xor
mov
jg
dec
lds
into
adc
shrb
repnz
add
out
call
sub
popf
lds
adc
cs
fildl
cmpsl
pop
pop
scas
xlat
fsts
leave
adc
add
fstpl
ret
imul
lea
jo
jmp
hlt
mov
xchg
xchg
jns
pusha
in
adc
aad
dec
insb
jle
cmp
gs
or
fwait
or
enter
cwtl
adc
and
cltd
jl
pop
cmovle
addb
ss
xor
cld
xchg
call
adc
jmp
mov
je
les
pop
push
mov
fmulp
stc
dec
stc
cmp
push
daa
mov
out
push
in
test
xchg
lea
ror
pop
int
aaa
mov
fdivl
dec
inc
imulb
imul
add
hlt
pop
iret
clc
cmpsb
jge
jg
lods
int
xadd
mov
sbb
gs
aaa
inc
pushf
jle
jmp
mov
sbb
mov
dec
dec
leave
mov
in
out
add
mov
push
lret
sub
sub
or
pusha
ja
jne
test
jge
ja
jnp
mov
repz
cmc
mov
mov
xor
out
cwtl
lahf
cld
sub
shl
les
fdivrl
pop
shlb
fisubrs
adc
btc
xor
sub
nopl
sbb
fbstp
and
sub
popa
or
cmpl
movsb
je
fisttps
mov
jecxz
std
popf
xchg
adc
bound
sub
es
cmp
xchg
adc
mov
test
jne
loope
into
cltd
rolb
loope
dec
imul
rorb
jp
addr16
mov
loopne
add
lahf
shrl
push
stc
sbb
adc
jmp
iret
mov
fstp
mov
test
dec
push
stos
dec
and
icebp
repnz
jmp
cmc
lds
clc
call
shll
inc
dec
movl
xchg
lahf
xor
push
rorl
and
mov
dec
add
repz
sarb
test
adc
in
mov
rcl
test
xchg
je
sub
dec
repz
jne
inc
imul
pop
push
push
or
adc
push
pop
fsubl
cmp
movsl
scas
inc
pop
dec
cmp
or
cli
shll
sbb
repnz
shll
bound
fldenv
fcoml
or
inc
add
rcll
xchg
les
xor
aas
pop
sbb
pop
lock
fiadds
mov
add
pop
mov
fwait
mov
mov
xor
movsl
pusha
inc
pushf
pop
insl
push
and
andb
stos
in
shrb
adc
loope
ds
movsb
and
mov
dec
pop
push
dec
mov
and
push
jmp
cmp
add
mov
lods
stc
das
mov
mov
mov
int3
adc
xchg
or
jno
jmp
mov
sub
gs
out
mov
loop
sub
push
pop
cmpl
xchg
lcall
push
lret
pusha
mov
adc
mov
data16
inc
lds
jg
inc
sub
lahf
orl
shl
xchg
je
popa
jge
mov
jl
out
adc
fstl
xchg
in
cmp
mov
out
sub
xor
cld
push
inc
or
push
cmc
xchg
cmpsb
push
add
pop
fistpl
push
mov
fcmovne
pop
adc
xlat
hlt
and
jp
bound
and
jb
outsb
loope
sub
cmpsl
jecxz
or
push
add
xchg
dec
mov
je
pop
mov
enter
loop
sub
iret
and
test
imul
std
add
test
insb
mov
mov
das
jno
lahf
jl
mov
mov
das
mov
or
int
pop
push
jl
cmp
xor
mov
adc
js
lret
ss
jecxz
jb
rolb
push
rcrb
ret
ds
decb
out
pop
popa
or
xorl
xchg
adc
pop
icebp
push
pop
dec
dec
xor
add
je
cmc
mov
adc
or
ja
or
les
cmp
out
dec
fwait
ds
loopne
fcoml
into
xchg
shlb
mov
pushf
sub
clc
imul
pop
setae
lret
ss
pushf
sbb
pop
ret
test
js
fdivrs
movsb
ljmp
addl
rol
xchg
mov
fwait
xor
inc
sarb
scas
popa
aad
lods
pop
in
clc
cmp
xchg
pop
imul
jg
push
cmp
xchg
push
imul
pop
pop
mov
cli
into
adc
int3
gs
push
xor
xlat
sbb
leave
and
in
testb
cmp
loopne
push
sub
dec
mov
xor
pop
xor
dec
ds
push
fwait
int3
mov
xlat
pop
fisttpl
cmp
mov
lods
push
cmp
xor
mov
mov
inc
mov
ljmp
sahf
cmp
push
es
popa
mov
dec
ficoml
push
lcall
and
pop
loopne
mov
popf
xlat
mov
dec
stos
mov
push
ret
xorb
push
ss
lods
shlb
mov
fldt
sub
xchg
stos
mov
jg
repnz
pop
add
xlat
pop
cld
mov
aam
add
mov
cwtl
test
movsb
mov
popf
bound
adc
mov
lcall
pop
rclb
xchg
js
lahf
lods
mov
mov
mov
ret
add
jnp
jno
sbbl
pop
movsl
stos
inc
dec
insb
xchg
pop
call
mov
sub
adc
pusha
jecxz
push
ret
jno
cmc
sub
ret
clc
bound
fdivs
xlat
cmpsb
mov
mov
mov
add
daa
xor
sti
adc
leave
dec
leave
push
sub
pop
jge
mov
imul
or
jo
xchg
lods
daa
push
dec
dec
mov
xorb
and
sbbl
shrl
dec
testl
aaa
mov
outsl
roll
push
popf
int
lods
jmp
push
les
sbb
xchg
mov
cmpsl
inc
jmp
lds
push
adc
adc
push
xchg
dec
push
push
mov
icebp
push
orl
jo
fldz
loop
leave
and
cmp
and
loop
test
jmp
inc
testl
xchg
pop
dec
push
jge
jmp
repnz
shll
je
hlt
mov
sub
inc
nop
rolb
and
cld
les
inc
fcmovne
inc
test
fsub
inc
ljmp
out
paddw
scas
aam
xchg
fwait
pop
adc
mov
inc
xor
jae
fimuls
and
sahf
sti
dec
mov
mov
ljmp
cmp
jbe
pop
adcb
scas
jecxz,pn
dec
scas
adc
test
mov
inc
jns
insb
stos
sub
lahf
mov
xor
cmpb
dec
loope
lea
dec
call
bound
jl
and
sbbb
shrl
mov
sub
insb
notl
and
pop
mov
mov
mov
shll
cmp
mov
insl
or
fwait
cmc
ret
imul
push
nop
mov
jmp
daa
sbb
sahf
jg
and
daa
ret
movsb
mov
ret
or
das
inc
mov
rcrl
mov
push
mov
std
mov
imul
push
jne
cmp
imul
pop
or
cwtl
xor
dec
jl
jb
ret
push
jmp
lods
dec
rorl
inc
fdivrl
mov
pop
inc
ljmp
xor
bound
or
outsl
mov
jecxz
pop
mov
fcoml
cmp
mov
mov
mov
popa
enter
ja
aas
mov
lds
out
xor
jbe
popf
mov
iret
insb
add
or
rcrl
fimull
xor
xorl
pop
mov
add
sub
push
ds
push
cltd
arpl
fs
clc
fidivl
call
je
inc
pushf
loopne
adc
std
dec
lret
xor
add
outsl
loop
frstor
loop
sub
testl
mov
scas
inc
xchg
xor
aad
xchg
dec
push
dec
shlb
mov
mov
adc
insl
ret
cmp
jnp
inc
sub
js
decb
scas
sbb
mov
test
in
jmp
shlb
push
inc
nop
sub
xchg
adc
mov
dec
push
mov
sub
push
dec
in
pusha
cmpsb
outsl
dec
jmp
je
jo
outsb
cmc
cmpsb
ficoml
fdivrl
lea
dec
mov
pop
in
jecxz
mov
fdivr
repz
pop
in
cmp
prefetch
subb
jae
push
fnstenv
and
jg
nop
fiadds
hlt
xor
pop
hlt
xchg
popa
repz
pop
lods
xchg
ret
sbb
cmp
add
int
cltd
mov
cmpl
mov
and
push
clc
xchg
orb
clc
fisubrl
adc
cmp
add
movhps
mov
loope
mov
or
lcall
pop
gs
out
lods
xor
sbb
xlat
inc
mov
addr16
cld
test
cwtl
xor
arpl
pop
fsubrp
mov
xor
ds
dec
sahf
jae
in
cmp
sbb
jmp
mov
rolb
dec
imul
movsb
rorw
cwtl
xchg
stos
loope
int
cltd
cmp
out
sub
sbb
xor
mov
gs
stos
out
pushf
mov
jns
clc
hlt
xchg
fs
cmp
mov
pop
mov
add
mov
mov
dec
and
and
mov
das
fisttpl
mov
xor
iret
cmpsl
ds
mov
ljmp
out
clc
jmp
push
cmc
pop
cs
inc
sub
movsl
push
jnp
jl
sbb
popa
inc
push
or
js,pt
xor
push
sahf
and
jne
stos
daa
rorb
add
cmc
xchg
mov
jl
cmp
add
xlat
dec
cmp
call
mov
popf
mov
mov
lock
mov
shlb
mov
orb
std
pop
ss
dec
fisttpl
push
cmp
xchg
pop
or
shlb
je
lods
adc
xor
sbb
and
mov
and
shrl
in
mov
mov
pop
mov
ja
call
imul
sbb
stc
push
sbb
pushf
popa
out
enter
mov
dec
ja
mov
subb
movsl
sbb
subb
dec
int
sti
dec
xor
push
in
sbb
repz
cmp
mov
xor
faddl
dec
xlat
pop
push
mov
push
push
mov
sub
fcoml
into
fstp
mov
or
cwtl
cmpsb
jg
dec
add
and
xchg
adc
dec
jecxz
inc
jl
in
mov
jmp
mov
push
bound
fisubl
rcr
dec
mov
or
pusha
push
mov
pop
adc
mov
les
xlat
aaa
int
push
mov
push
repz
xchg
scas
xchg
ss
pushf
add
fisubrl
lea
or
dec
and
push
mov
int
inc
loop
outsl
inc
dec
push
jmp
push
sbb
mov
jns
sahf
mov
imul
mov
pop
in
scas
mov
mov
jne
insl
dec
jmp
mov
pop
push
insb
pop
xchg
mov
mov
mov
pop
ja
inc
insb
adc
outsb
js
jecxz
in
fs
add
je
aam
les
adc
popf
xchg
adc
int3
fdivrl
dec
push
mov
inc
fnstenv
inc
sub
aas
stos
movsl
pusha
xchg
and
adc
dec
xor
fucomp
mov
popa
dec
int
lds
test
jbe
es
xor
inc
and
pop
xorl
addr16
pop
enter
ljmp
inc
push
lcall
cli
repz
push
decl
icebp
cltd
mov
cmp
addr16
jnp
lods
fdivp
pop
and
shr
addb
test
cmp
pushf
pop
jb
imul
mov
or
jns
mov
cmc
popa
inc
xchg
not
imul
mov
popf
imul
cld
cltd
pop
pushl
int3
dec
mov
nop
outsb
push
inc
outsb
lods
es
imul
std
dec
nop
inc
push
imul
pop
repz
in
sub
lods
inc
ret
bound
add
fwait
sub
pusha
popa
out
cmp
fcoml
insb
push
add
dec
mov
push
in
push
fwait
jg
sbb
call
arpl
adc
jg
xchg
or
jns
movb
cmp
or
lahf
xor
lods
nop
xchg
stos
shrb
inc
fistpl
call
add
int3
in
pop
cli
arpl
sahf
mov
push
mov
mov
scas
or
in
sbb
stc
sub
inc
push
das
pop
in
icebp
sarl
testb
adc
or
xchg
ss
xlat
and
and
mov
or
pop
das
loopne
sbbl
insl
or
xchg
xchg
ss
cmp
scas
mov
mov
dec
out
mov
mov
arpl
mov
test
push
dec
comiss
andl
movsl
inc
testl
adc
and
cmp
leave
push
adc
mov
inc
push
mov
push
push
loope
xchg
add
lock
push
xchg
mov
lret
xor
pop
ffree
iret
sub
dec
inc
sbbl
out
call
pop
sub
subps
lret
bound
sub
pusha
push
int3
fstpl
push
movsl
cmp
xor
notb
dec
mov
xlat
testb
mov
fisubrs
push
in
xchg
jbe
pop
pop
xchg
jno
sahf
add
int3
ret
jne
mov
jge
or
mov
xchg
or
rcr
std
lcall
imul
dec
jp
push
je
ds
in
add
lcall
jo
and
sub
push
xchg
add
xchg
push
and
rcl
pop
sub
jae
add
pop
xchg
cmp
aaa
mov
out
cwtl
insb
sbb
lcall
insb
pop
jge
aaa
xor
pop
dec
mov
nop
aad
les
sbb
in
inc
ror
out
push
pop
int
adc
loopne
mov
cmp
flds
add
mov
icebp
loop
pop
dec
mov
in
cmp
pop
cmp
pop
loopne
inc
mov
in
sub
sub
jne
mov
cmpsl
lahf
jp
xchg
adc
add
call
mov
fldt
lods
and
loop
xchg
sub
stc
xchg
cmpsb
popa
sbb
pop
and
mov
pop
add
inc
jnp
ljmp
cli
movsb
sub
fucom
xor
sidtl
push
icebp
and
loope
xchg
jp
fdivrp
cmp
daa
imul
mov
iret
aad
lret
dec
out
or
mov
push
sbb
adc
cmc
cmp
and
cmp
pop
add
mov
jecxz
xor
scas
cltd
ret
iret
xor
cli
enter
aad
cmp
push
arpl
xchg
add
andl
dec
out
lret
and
or
mov
push
jge
sbb
scas
jg
push
in
jmp
out
rclb
mov
sbb
mov
xchg
push
sahf
outsl
dec
popf
mov
clc
sbb
aas
xchg
and
sbb
pop
or
mov
or
mov
les
jle
in
add
outsb
out
push
pop
out
sbb
test
je
lret
and
into
insb
push
loop
subl
ret
mov
repz
call
in
jmp
mov
inc
add
mov
dec
xor
push
ret
fcmovbe
mov
xchg
and
inc
iret
sub
cmpsl
int3
mov
xlat
fs
push
cmp
push
cmp
jb
in
mov
sahf
cmpsl
fisubrs
loopne
shll
inc
push
mov
xchg
mov
test
clc
in
mov
les
negl
sub
mov
fstpl
mov
pushf
sub
xchg
ljmp
fs
inc
mov
nop
les
xchg
loope
xchg
outsl
out
nop
std
push
leave
outsb
pop
enter
ret
rclb
xlat
roll
movsl
pop
push
mov
rep
dec
outsb
jo
fdivrp
adcb
jg
jmp
sbb
rcll
lock
xchg
call
adc
and
cmp
adc
out
pop
outsl
test
sti
stos
and
jo
add
xchg
jne
mov
aaa
out
mov
xor
rclb
mov
jge
ret
ljmp
cmpsb
fildl
jmp
cld
ret
stos
mov
push
mov
leave
inc
out
jge
xchg
and
lods
or
mov
and
fisubrs
leave
js
fisubrs
aad
mov
scas
xchg
or
xor
pop
add
andb
sti
xchg
decb
adc
cltd
adc
or
xchg
pop
add
inc
and
mov
push
stc
out
mov
adcb
pop
inc
inc
int3
push
adc
aas
ret
dec
mov
pop
es
loop
aad
jecxz
dec
test
mov
test
lcall
push
mov
int
sbb
fsubr
and
mov
pop
or
pop
shl
mov
inc
insl
or
cmpsb
ret
push
push
fsubl
adc
repz
adc
lods
rcrb
ret
inc
and
xchg
lahf
and
sub
ja
in
mov
data16
inc
sbb
in
fdiv
xchg
sbb
out
repnz
icebp
ficomps
ret
cmp
jnp
outsl
jo
and
and
mov
mov
dec
imul
push
xor
mov
lcall
pop
sarl
push
mov
push
cwtl
cmp
sbb
pop
nop
enter
jbe
addr16
popf
add
mov
sbb
pop
push
push
aam
loopne
mov
rcrl
or
clc
jmp
lods
clc
inc
mov
movzbl
iret
loop
cmpsl
in
pushf
pop
cmp
add
stos
adc
adcl
xchg
jbe
inc
xor
iret
shll
cmc
insb
cs
cltd
jnp
notb
cmp
lock
sub
add
add
mov
and
adc
adc
or
mov
sub
mov
or
mov
or
bound
inc
xlat
ljmp
adc
mov
jecxz
fadds
push
clc
mov
push
xor
dec
jno
jns
jne
test
xor
sub
iret
scas
mov
lea
movsl
sub
dec
ja
mov
frstor
inc
mov
jg
mov
es
movsb
cmp
test
mov
rorl
cltd
fisubl
pop
mov
inc
repz
mov
mov
lea
cmc
insb
dec
or
mov
mov
lret
fnstenv
shrb
push
clc
mov
popa
mov
sbb
test
outsl
push
adc
out
mov
and
inc
shll
scas
jno
add
loopne
call
inc
inc
aas
scas
mov
call
cmp
jmp
inc
adc
negl
mov
push
out
mov
call
das
push
imul
push
sbbb
mov
inc
sbb
dec
jp
xlat
push
test
test
stos
data16
fbld
cmp
sahf
iret
scas
scas
xchg
mov
shl
movsl
mov
cmp
push
push
inc
popa
int3
fildl
mov
pop
cmp
jmp
popf
mov
fisubrs
jb
xchg
pop
add
dec
xlat
vmaxsd
xor
dec
aas
mov
or
mov
fst
and
stos
fdivrs
pop
jns
lret
mov
cwtl
xlat
data16
inc
mov
mov
lcall
clc
sub
and
iret
inc
xchg
add
cmp
aad
mov
rorb
and
sub
js
stc
xor
repnz
mov
out
sub
jno
xchg
pop
mov
inc
sbb
pushf
push
sbbl
jns
sub
lods
in
call
dec
lds
push
ja
jae
lret
adc
popf
mov
sti
cltd
xor
mov
in
add
jle
and
sbb
neg
sarb
outsl
xor
mov
fwait
pop
or
dec
rclb
jle
jns
jbe
stos
les
dec
repz
sub
mov
std
xchg
stc
sbb
lcall
enter
into
stos
mov
pop
mov
fsubr
or
jg
enter
push
and
sub
mov
mov
push
push
inc
xchg
mov
mov
out
jmp
scas
daa
adc
les
orb
sub
mov
lods
pushf
jp
jecxz
pop
out
jne
shrb
jge
sbbb
lods
icebp
adc
jnp
fsts
rcrb
std
fnstcw
dec
adc
shll
enter
cmp
cmp
shll
into
pop
mov
insb
add
xchg
gs
push
gs
xor
imul
mov
jle
or
cmpsl
push
or
cwtd
arpl
test
faddl
fistps
xor
xor
out
xchg
ds
push
cmp
popf
movsl
enter
lret
das
mov
leave
push
xor
dec
sti
mov
sbb
aas
and
ja
jle
sahf
out
movsl
mov
aas
fmuls
mov
xor
sub
push
xchg
xorl
hlt
out
imul
fistps
ror
sub
call
mov
es
cli
cwtl
mov
hlt
pop
stos
in
js
sub
subl
sbb
hlt
fcmovne
jne
xchg
push
cmp
and
jo
add
dec
fs
insb
mov
nop
icebp
cmp
mov
fidivrs
mov
dec
mov
xor
loope
std
ljmp
sub
popf
adc
sbb
sti
test
out
fidivrs
std
pushf
dec
sti
into
iret
fs
test
arpl
insb
lock
mov
ljmp
fdivl
cli
lahf
or
repnz
xchg
push
or
outsb
test
in
lods
sbb
sub
fiadds
dec
imul
bound
pop
xchg
mov
ja
aad
add
fsubrl
jae
inc
test
or
pop
mov
jno
push
adc
testb
fnstsw
sub
rcrl
and
sti
gs
fsts
push
movsb
push
mulb
arpl
xchg
aas
xchg
aam
lahf
adc
test
push
pop
out
popf
stos
xor
clc
mov
mov
dec
scas
fisubl
lods
pop
and
adc
xchg
jmp
int
pushw
xor
gs
cmpsb
clc
clc
dec
mov
dec
push
cltd
cwtl
rcrl
addr16
jne
lds
pop
pop
outsl
or
out
repnz
pop
pop
mov
xchg
ret
jae
cmp
cltd
ret
fldenv
repz
loopne
dec
fisubl
lcall
cli
jb
push
aad
push
inc
movsl
cmp
adc
jmp
adc
adc
cmp
movsl
sub
sbb
jl
scas
push
shrb
add
dec
add
dec
les
lret
pop
push
fidivrs
mov
pop
push
ret
push
inc
mov
shrl
push
lea
bswap
cmp
cmp
pop
jp
es
jmp
pop
adcb
xchg
paddd
pop
fnstcw
fwait
sbb
shll
pushf
fwait
xor
mov
sub
pop
or
add
lahf
mov
inc
repz
imul
mov
xor
xchg
call
inc
sbb
adc
xor
jle
xor
add
es
in
out
or
loop
mov
divl
add
hlt
loope
and
or
dec
dec
lret
push
aaa
mov
jno
xor
ss
or
xor
pop
lock
push
xchg
and
cld
lds
pop
mov
xchg
leave
push
iret
addr16
add
ljmp
arpl
idivb
mov
xchg
mov
pushf
jmp
es
loop
data16
mov
cmc
inc
pop
dec
mov
mov
xchg
cmpsl
int3
dec
aaa
push
sbb
fbld
rcll
xor
aad
imul
jae
mov
loopne
xchg
jl
es
cmp
push
inc
pop
lret
xor
out
or
jge
icebp
adc
dec
inc
stos
call
inc
inc
or
adc
mov
inc
adcl
lahf
push
push
mov
xor
xor
mov
scas
sub
nop
cmc
in
push
add
xor
dec
or
aas
inc
jno
cs
jecxz
cmp
lahf
inc
push
and
inc
mov
in
in
sbb
dec
xor
add
add
mov
or
push
loop
or
dec
pop
jge
add
mov
repnz
out
cwtl
ret
xchg
mov
or
mov
leave
sbbb
or
cmp
push
and
sub
mov
mov
cmp
scas
faddl
jge
pop
dec
inc
daa
in
enter
cmp
enter
imul
lret
adc
out
jb
pushf
fbstp
imul
jecxz
rol
loop
push
mov
pop
nop
stos
pop
test
or
sbb
fisttpll
or
fadds
les
push
mov
jl
scas
jns
xchg
jb
lods
scas
repnz
mov
stc
xor
daa
push
xchg
rol
or
mov
in
xor
dec
mov
xlat
mov
add
add
jge
test
int3
sub
cltd
inc
lock
lret
mov
ljmp
sbb
lods
popa
jmp
cwtl
xor
sbb
out
dec
sti
fnstsw
cltd
or
fldt
pop
push
mov
inc
shlb
out
xorl
jl
out
xchg
hlt
xchg
pushf
sbb
xchg
fwait
dec
adc
fisubrs
mov
mov
dec
lret
jmp
jge
loop
ds
sti
sub
icebp
pop
in
sti
xchg
push
les
lods
xlat
outsb
stos
out
leave
cmp
add
test
jp
lock
scas
adc
jge
addr16
jl
xchg
in
inc
jnp
insl
ret
jg
les
jno
xchg
xor
push
mov
jl
outsl
lea
les
shll
add
cltd
inc
clc
sbb
mov
lcall
mov
pusha
insl
fcmovnu
pusha
xor
push
data16
mov
in
sbb
xchg
mov
in
sbb
cltd
pop
xchg
and
repz
shlb
sub
adc
xlat
cld
add
adc
mov
lret
shlb
icebp
in
fyl2x
xchg
push
xor
stc
or
idivl
adc
xor
loopne
fnstcw
sbb
cmp
mov
adc
pushf
imul
dec
jno
add
jle
shlb
dec
jmp
movsb
outsb
ror
out
pop
adc
adc
adc
cs
xor
repnz
es
mov
out
test
dec
adc
xor
jb
cpuid
mov
inc
and
rcll
ljmp
stos
pop
xor
es
jbe
test
ja
lahf
dec
jp
fldcw
push
lcall
ljmp
jg
push
outsb
push
sub
mov
cmp
xchg
jne
lret
loop
iret
mov
lret
ret
dec
add
out
repnz
adc
push
pop
adc
loope
or
lods
or
push
popf
scas
and
ljmp
shrb
out
push
xchg
mov
loopne
cmp
or
ljmp
inc
pop
lea
gs
push
les
sub
add
pushf
jnp
lods
jne
dec
lret
dec
xor
mov
pop
mov
es
ds
or
cmp
mov
xchg
in
push
in
push
aaa
push
sub
aad
push
pop
add
lea
dec
xor
enter
lock
repnz
movsl
mov
scas
jae
and
int
fistps
xchg
in
jne
movsb
dec
mov
and
faddp
adc
es
push
xor
sub
mov
fildl
and
mov
xchg
adc
sbb
fistl
pop
cmp
movsl
pop
int3
ffreep
cs
xor
cld
test
ret
and
jecxz
in
push
xchg
adc
ss
sub
ja
sub
fwait
sti
rcrb
jnp
out
jmp
sbb
jb
leave
pop
jmp
test
ja
xchg
jl
test
nop
aaa
dec
sub
xchg
add
adc
push
cmc
arpl
sahf
arpl
ret
dec
cmc
xchg
cs
mov
mov
mov
dec
push
aas
decl
sbb
inc
xor
lret
sub
xchg
jg
mov
push
adc
dec
fs
testl
lods
xor
push
adcl
and
pop
je
or
shrb
dec
mov
loope
and
dec
out
pop
jne
test
sub
sub
jecxz
into
cli
shrb
cli
xlat
sbb
fistpl
xchg
mov
fldenv
in
mov
xchg
mov
add
lods
pop
stos
xlat
iret
ljmp
lret
sti
cwtl
or
popf
out
jg
mov
lods
lock
add
sub
enter
jmp
mov
pop
dec
xor
add
sbb
cmc
jbe
cmp
fstl
or
sub
add
cmp
repz
daa
lret
jne
sub
add
xor
mov
push
notl
std
adc
ds
push
mov
push
jbe
ret
push
sbb
sub
add
imul
xor
pop
lcall
ja
lock
jns
xlat
mov
inc
jp
xchg
jnp
add
gs
push
jg
lods
jmp
out
xchg
aaa
dec
out
jmp
js
jb
sbb
push
in
pop
rorb
imul
subb
je
int3
sub
pop
push
xchg
idiv
xor
sub
push
loop
adc
shlb
iret
fs
mov
subl
push
inc
or
pop
add
inc
jb
push
pop
lcall
mov
repz
stos
sarb
jne
sbb
xchg
xorl
add
daa
call
pop
mov
push
xchg
mov
jbe
xchg
mov
jnp
or
xchg
sub
sub
pop
lcall
adc
mov
push
popa
sbb
shrb
mov
cmpl
mov
arpl
insb
leave
xor
xor
push
hlt
cltd
jns
xor
xor
sub
or
sub
adc
mov
sti
adc
or
sahf
pop
mov
loope
push
ficompl
rcll
push
sub
movsl
andl
adc
jo
into
xor
xchg
mov
dec
mov
enter
call
loope
add
fwait
jns
repnz
push
dec
insb
loop
fstl
bound
das
add
out
std
cmp
xchg
lcall
pop
push
pop
subl
ja
outsl
lret
in
imul
pop
test
sub
inc
jp
lds
pop
and
cmp
cli
jnp
cmpsl
jle
push
inc
pop
enter
cmpsl
cmpsl
sub
jb
scas
jg
adc
popf
jp
lds
and
mov
rcrl
ljmp
pop
pushw
cmp
mov
push
sub
aad
adc
mov
and
inc
cld
pop
cmp
dec
mov
roll
mov
xor
sub
dec
adc
push
test
and
pushf
cli
sbb
xchg
mov
shlb
jecxz
stos
jp
inc
xorb
out
mov
jb
push
out
pop
aad
xor
sahf
stos
lahf
pop
xor
aaa
dec
mov
lea
daa
cmp
mov
dec
cmc
arpl
push
jns
into
repz
push
dec
fiaddl
add
xlat
push
fwait
jge
outsb
out
std
sub
cmpb
pop
or
mov
repz
push
sbb
and
xor
dec
mov
adc
das
cmp
sub
aaa
addb
cmpsb
mov
repnz
mov
jmp
fwait
sbb
xchg
imul
bound
lds
shll
addr16
movsl
push
jo
sbb
dec
fimull
nop
stc
loopne
and
lods
push
movsb
jnp
clc
mull
push
and
jecxz
jl
sbb
mov
xchg
testl
pop
inc
je
nop
sbb
and
sub
int3
orb
adc
xchg
dec
shrb
loope
mov
aas
lahf
mov
jmp
mov
leave
icebp
out
outsl
sbbl
out
adc
pop
ror
lret
movsb
xchg
inc
loop,pt
stos
xor
out
adcb
fstl
and
fnstsw
mov
dec
loopne
int
popf
cmpl
inc
jae
fdivl
fmul
mov
movl
push
sbb
inc
fwait
mov
fisttpll
dec
ljmp
dec
or
inc
mov
and
jle
sbb
inc
pop
ds
and
pop
cmp
jo
mov
in
push
cmp
mul
shl
jle
sbb
outsb
xor
outsl
jle
cmp
mov
ds
mov
and
pop
repz
test
sarl
in
shl
jno
sub
xor
mov
sub
xor
jp
push
lret
push
mov
push
lock
push
pop
fs
xor
push
push
push
push
inc
lret
lea
jae
cs
mov
popf
outsl
insl
fldcw
mov
sbb
repnz
xor
dec
rcll
or
mov
add
fs
mov
sbb
int
shl
adc
and
push
outsl
adc
hlt
popf
jne
sahf
pop
cs
pop
out
mov
leave
repnz
dec
inc
add
int3
jle
test
insb
shrl
adc
push
push
xor
mov
cmp
sbb
jne
popa
mov
jmp
ss
pusha
jae
mov
stos
dec
cmp
orb
push
mov
stc
xor
mov
xchg
or
jb
lods
and
outsb
xchg
jb
nop
sbb
xor
test
xchg
scas
into
xor
xchg
ljmp
inc
xorb
xor
sti
xor
push
cmpl
add
inc
mov
cmp
push
movsl
call
in
add
pop
inc
sahf
pop
dec
clc
ss
dec
into
pop
jns
xor
jge
stos
adc
adc
mov
sbb
jae
sub
adc
adc
push
sbb
mov
lret
ljmp
mov
push
scas
popf
mov
daa
and
aam
pop
in
cmp
mov
cli
jl
outsl
shrb
test
xlat
add
int
push
dec
or
sub
test
fadds
pusha
adc
aam
inc
test
repnz
sub
push
jbe
inc
sub
cwtl
fisttps
mov
and
sbb
shl
jmp
jo
xchg
int3
cmp
jl
ficoml
movsb
sub
mov
ss
xor
sub
decl
lahf
add
cs
sub
push
ret
adc
push
mov
ja
cld
cmp
jnp
cmp
ljmp
imul
mov
ljmp
sbb
insl
xchg
and
stos
fsts
test
cmpsb
addr16
popa
mov
or
jns
lds
jmp
xorb
scas
push
mov
and
cmpsl
push
test
mov
jecxz
xor
xor
push
sbb
mov
fstl
mov
pop
adc
dec
cld
jle
and
cli
fwait
xor
jge
aam
inc
jmp
daa
xchg
stc
fs
and
xor
call
mov
mov
mov
data16
call
xchg
mov
jmp
nop
cltd
jnp
push
mov
push
cmp
push
lcall
addb
add
addr16
movl
pop
jle
mov
sahf
imul
movsl
dec
mov
imul
adc
test
bound
xchg
cmp
push
ficoms
lahf
and
jae
gs
cmp
fcoml
mov
cs
add
shr
insb
dec
pop
jnp
into
push
add
xchg
sub
es
xlat
test
or
imul
imul
and
or
test
xchg
repz
adc
cwtl
jns
stc
lahf
xor
dec
nop
lahf
mov
mov
aad
js
decl
bsr
xchg
pop
cmp
sub
inc
pop
lods
loope
scas
loopne
es
add
mov
jecxz
fimull
imul
or
cld
xchg
cmp
sub
aaa
cmp
inc
fldl
jmp
sbb
xadd
inc
ja
sbbb
arpl
ljmp
jno
mov
sbb
rcr
add
pop
aaa
xchg
outsl
mulb
inc
push
jno
pop
shll
pop
orb
call
popf
adc
aaa
push
mov
mov
mov
xor
in
cmp
inc
mov
xchg
subl
sbb
iret
jmp
add
mov
popf
es
adc
gs
int3
sbb
cmpsl
or
mov
subb
mov
jle
mov
cwtl
fxch
xor
int3
movsb
subb
jbe
dec
arpl
mov
pop
push
bound
xor
insl
xchg
inc
ds
push
sarb
sub
in
mov
int
aaa
rorl
mov
lods
loope
jmp
mov
and
sub
std
lds
out
ds
out
pushf
fldt
rcl
push
test
rcr
movsl
dec
test
mov
icebp
fmull
sub
out
rolb
js
mov
in
sub
mov
mov
les
push
rcll
fisttpll
inc
add
push
add
loope
andb
add
push
stos
lret
in
dec
add
add
push
in
push
fadds
add
add
push
xorb
adc
cmp
jbe
cmp
cmp
popa
mov
cltd
cli
add
and
adc
test
and
mov
data16
and
out
or
ret
mov
mov
popw
imulb
xchg
je
jg
mov
and
adc
sti
loope
fstl
pop
push
pop
f2xm1
bound
jbe
stos
lahf
and
jbe
std
dec
mov
xor
pop
cltd
xadd
xchg
mov
dec
jecxz
add
nop
push
clc
sub
popa
in
push
add
add
inc
jp
ret
lods
xor
out
fdivrs
fimull
fisubs
test
lods
inc
mov
lock
mov
cmp
sub
mov
jnp
fdivrl
push
ljmp
call
je
ja
xchg
adc
mov
prefetch
cwtl
xor
pmuludq
lahf
fstl
enter
test
je
or
into
hlt
es
loope
add
les
inc
dec
sbb
cld
or
ja
pushf
rcrl
mov
insb
in
xor
lahf
ret
fbld
dec
xchg
ficoms
jne
cmpsl
sub
sbb
ret
or
test
std
mov
push
and
mov
ss
ficoml
sbb
mov
xor
xor
add
sub
nop
cmp
sub
xor
and
lods
xchg
aam
cltd
loope
arpl
dec
jns
fwait
mov
into
outsl
inc
add
inc
push
xor
shrl
ss
dec
mov
test
mov
xor
mov
fldenv
test
jae
lea
outsl
inc
xchg
repnz
insl
jnp
fists
imul
pushf
push
mov
adc
mov
in
lcall
fsubl
add
int
cmp
lahf
xor
push
xor
idiv
inc
xor
and
pop
jne
mov
and
dec
aam
movsl
jecxz
stc
sbb
stos
sub
lahf
insb
outsb
cwtl
lcall
cmp
stc
dec
and
cmp
lret
mov
and
add
push
xlat
adc
insb
sahf
mov
sbb
jno
mov
dec
dec
mov
fisubrl
fwait
stos
adc
ja
adc
dec
cld
mulb
sbbl
out
repz
dec
pop
test
xlat
jecxz
xchg
mov
lock
pop
imul
add
xor
aad
sub
out
loopne
jl
jo
or
lods
adc
pop
pop
repnz
and
adc
xchg
leave
adc
mov
push
js
pop
gs
fdivrp
xor
icebp
sub
out
test
ss
mov
pop
pushf
and
sbb
or
pusha
out
dec
inc
adc
lret
sub
stc
push
cmp
loopne
cmpsl
andb
les
inc
test
push
add
mov
adc
pop
mov
addl
xor
int3
mov
aaa
fs
dec
out
sbb
add
adc
rcrb
add
ss
cmp
sbb
jo
scas
ds
add
xchg
mov
sbb
sbbb
loop
std
sbb
in
or
mov
or
dec
loop
inc
inc
xchg
aam
xchg
cmc
lcall
dec
jb
arpl
jp
sahf
pop
sbb
lods
mov
fwait
jge
cwtl
mov
mov
mov
lds
mov
inc
cmpsl
cmp
dec
mov
mov
fcoms
mov
dec
ficoml
mov
lods
pop
dec
imul
dec
adc
push
mov
sub
and
adcl
add
pop
pop
into
mov
int
push
push
sbb
mov
test
jns
fcmovnb
fistpll
mov
outsb
iret
in
lods
xor
jg
pop
sbb
test
add
xchg
pushf
xlat
dec
mov
inc
push
cmpb
add
jg
xor
and
test
add
xor
pop
fbstp
cmp
in
or
inc
dec
pop
jne
dec
xchg
je
mov
jo
aad
xchg
push
in
sbb
aas
mov
or
xchg
cwtl
ljmp
inc
cmp
dec
mov
jl
dec
fistpll
or
mov
lds
jmp
fnstenv
push
mov
stos
inc
gs
mov
mov
fwait
iret
adc
cmpsl
push
mov
fwait
daa
and
fsubr
jno
and
sahf
je
adc
dec
enter
inc
rcr
xor
inc
lcall
les
jne
xor
jl
ret
xchg
int3
dec
sbb
lcall
insb
int3
xlat
call
sbb
xchg
ja
mull
inc
imul
mov
cs
in
pusha
cmp
imul
sarl
mov
push
into
shrb
push
mov
cmp
arpl
fnstenv
xchg
dec
push
inc
lods
sbb
aaa
sahf
pop
pushf
push
mov
pop
mov
movsb
add
inc
fs
cmpsb
mov
into
ds
js
mov
jmp
ss
jno
adc
lret
push
or
xchg
or
aaa
mov
and
jmp
inc
js
adc
add
js
aad
push
loop
stc
xchg
pop
out
mov
adc
in
and
mov
ret
or
sbb
rorb
mov
stc
sahf
clc
loop
inc
fdivrl
pop
push
mov
push
sub
push
jno
jle
shr
je
andb
out
cs
cmp
fisttps
lods
leave
xchg
dec
sub
mov
mov
insl
mov
inc
xor
xchg
sub
add
sti
adc
pop
int
scas
and
or
jb
xor
lock
jge
cwtl
out
add
inc
jo
sub
add
pop
xor
std
fildll
mov
stos
notl
std
pop
mov
movsb
dec
into
mov
les
or
call
jecxz
cmp
push
lods
das
push
aad
insb
mov
repnz
push
into
vmulps
push
dec
ret
pop
jp
dec
add
sbb
je
popa
lcall
dec
fwait
sub
pop
xchg
insb
mov
pop
int3
inc
pop
push
rclb
inc
inc
add
ret
test
sbb
js
jle
int3
jmp
cwtl
add
es
add
dec
push
stos
pushf
jb
lods
mov
inc
or
dec
daa
sub
xchg
xor
stc
jae
mov
cmp
fists
lds
pop
jno
mov
cmp
das
cli
mov
dec
sub
leave
aas
les
hlt
daa
es
test
gs
std
xor
inc
clc
adc
hlt
mov
subl
add
mov
adc
fists
jnp
sbb
loope
and
inc
daa
rcll
int
or
imul
popf
adc
addl
and
add
daa
ret
mov
add
mov
cltd
mov
mov
adc
inc
pop
fidivl
and
adcb
pop
add
test
sahf
add
or
mov
inc
inc
das
sbb
xor
popa
mov
xchg
cmpsb
mov
xlat
test
adc
loope
push
popf
inc
or
out
pop
scas
jecxz
xchg
mov
loope
dec
pop
jb
dec
dec
adcb
push
jb
or
xor
pop
cmp
and
fs
mov
ret
int
daa
push
test
inc
mov
aam
out
push
add
bound
push
xor
jmp
out
paddd
shrb
pusha
lods
mov
cmp
addr16
or
cmpb
ret
andb
jb
adc
sbb
xor
or
repz
push
and
fprem1
ljmp
inc
xchg
mov
pop
xchg
sub
aad
dec
lods
jle
or
sub
aad
or
xchg
mov
xchg
sbbl
add
mov
sub
fildl
dec
nop
xchg
js
xacquire
or
push
mov
icebp
stc
sub
lret
cli
xor
fldl
sti
outsl
lret
enter
sarl
sbb
add
es
nop
lods
lahf
iret
inc
aad
das
lods
ja
es
ret
mov
and
xor
mov
cmp
mov
fmuls
das
cs
xor
xchg
jb
or
inc
sahf
mov
pop
pop
sbb
lret
in
jae
int
mov
adcb
sub
out
sarl
or
jg
imull
cli
das
and
aas
stos
push
nop
mov
sub
inc
stc
notl
outsb
sub
lods
xor
pop
popf
fbstp
test
call
hlt
xor
pushf
pusha
and
sbb
mov
test
xor
std
xchg
daa
dec
or
push
lret
mov
mov
scas
fidivrs
sub
dec
es
cmp
jecxz
xchg
cmpsb
and
pop
sub
inc
int3
push
lcall
xchg
enter
arpl
mov
xchg
xchg
call
ret
popa
ljmp
mov
or
rorb
gs
sub
clc
sti
dec
out
push
mov
mov
sub
in
fisttps
push
jnp
out
mov
sbbb
int3
dec
sub
in
jmp
fmuls
sti
popa
pop
mov
enter
dec
xchg
in
jmp
mov
xchg
jmp
add
jge
and
push
adc
sahf
mov
sbb
dec
push
cmp
mov
imul
sub
sub
fs
ds
imul
sbb
add
iret
adc
mov
subb
xchg
fisubs
xor
push
movsl
pop
jb
loope
push
xor
jmp
cwtl
shl
repnz
push
xchg
cmp
xchg
test
inc
sbb
iret
inc
mov
or
out
rcrl
mov
push
sub
mov
cltd
mov
call
or
cltd
xchg
jmp
sbb
fnstsw
loop
mov
mov
cmp
fld
out
stos
push
jne
and
adc
outsb
addr16
mov
mov
pop
aad
scas
xchg
sbb
stos
js
aas
mov
repz
inc
mov
cmp
cmp
jp
call
repz
pop
dec
fs
lret
shl
ret
int
jge
repz
mov
xchg
in
fmuls
bound
movsb
dec
test
out
in
rcll
les
adc
xchg
leave
sub
push
fsubrs
sub
cmc
lcall
pop
mov
mov
dec
dec
inc
cmpsl
scas
sub
frstor
sbb
push
lods
xor
sbb
sahf
scas
xchg
xor
mov
cli
dec
scas
and
or
mul
in
fisttps
dec
jnp
mov
mov
repnz
jp
or
push
sbb
fdivr
sbb
fwait
addb
xchg
pop
add
mov
inc
inc
int
leave
fbld
iret
rclb
add
push
sub
cmp
pop
pushf
mov
pop
xlat
mov
cmp
cmp
stc
cmpsl
hlt
sub
and
sub
inc
imul
adc
or
fcoms
dec
push
movsb
sbb
cmp
imul
or
pusha
jo
sub
or
pop
test
sub
mov
int3
pop
shll
dec
add
pop
je
cmpsl
mov
ret
cmp
inc
inc
pop
scas
xchg
mov
fs
xor
push
mov
xchg
imul
push
sbb
add
stc
or
mov
sbb
xor
and
jnp
leave
int
cmc
mov
jge
mov
imul
jns
mov
or
shl
test
dec
jg
mov
push
cli
adc
pop
cmpsb
out
push
into
in
icebp
mov
sbb
jg
and
mov
cmpsl
and
mov
aam
push
jmp
mov
into
imul
ret
scas
fistpll
loopne
rcll
dec
sub
stc
jmp
sbb
ret
mov
xchg
ficomps
fmull
and
sub
shll
and
lods
sbb
dec
xchg
fsubl
inc
jecxz
mov
push
push
rolb
jl
mov
inc
sub
nop
xor
mov
enter
xchg
pushf
push
lea
mov
fnstsw
mov
or
xchg
stos
fwait
pop
shr
cvtps2pi
lcall
push
sub
jae
xchg
mov
jae
push
cmpsl
into
out
pushf
push
popa
daa
mov
sbb
arpl
stos
adc
sbb
mov
xchg
out
mov
iret
outsl
iret
orl
int
xor
pop
jne
jge
aaa
lahf
sbb
sbb
mov
jmp
lcall
stos
fisttps
cld
lds
or
xchg
stos
aas
cs
lahf
je
cwtl
call
das
icebp
enter
jne
sub
sub
push
xchg
and
jb
pop
sub
je
and
and
dec
jno
cs
ja
jp
orl
stos
mov
jecxz
movsb
add
adc
shrl
into
jnp
fs
fwait
push
cmpsb
pop
shr
idiv
push
jno
push
pop
addb
insl
iret
mov
pop
sbb
pop
in
pop
inc
testb
mov
pop
mov
daa
inc
mulb
cli
cmpsb
scas
jp
push
sti
mov
fbstp
clc
sbb
xlat
dec
sub
mov
mov
int
mov
pushf
or
cmpsb
cld
fsubl
pushf
inc
insl
push
xchg
mov
insl
popa
xchg
imul
dec
jnp
push
jbe
add
rcll
jne
mov
clc
mov
mov
push
xchg
data16
push
mov
subb
imul
sahf
mov
push
test
aad
mov
cmp
stos
and
adcb
cmp
mov
sub
mov
aaa
jbe
ret
push
nop
out
push
ljmp
pop
hlt
rorb
aad
sub
adcb
popf
test
xor
xchg
jae
dec
repz
jo
rcll
std
mov
xchg
add
adc
mov
test
jb
xchg
xor
adc
loope
aad
xor
stc
fcoml
push
shr
imul
add
leave
stos
fstps
mov
loope
xchg
mov
cltd
insl
hlt
lock
xchg
popa
add
xor
into
mov
int
pop
ficoms
sbb
cmp
out
jnp
mov
mov
push
repnz
push
dec
mov
dec
and
leave
mov
je
xchg
lock
xchg
fnstenv
fildll
mov
mov
pop
or
inc
pop
cmc
push
push
addr16
jne
into
mov
cmpsb
push
out
insl
mov
clc
xchg
hlt
mov
and
xchg
insb
call
push
sub
repz
rcr
test
jecxz
out
adc
cmp
frstor
popa
loope
ljmp
lods
shl
add
lea
cmc
inc
add
and
push
es
sbb
xchg
inc
cmp
lea
test
sbb
mov
lahf
mov
inc
jg
cmpsb
in
dec
orb
mov
pop
ucomiss
adc
or
jb
adcl
dec
jae
js
pop
sbb
mov
push
fmuls
scas
gs
adc
jnp
cld
adc
xchg
push
fsubp
and
out
inc
incl
je
cld
mov
shll
cmc
push
test
adc
push
jge
xorb
ja
dec
cmp
pop
pop
in
loope
fwait
xchg
inc
and
lock
ljmp
stos
xlat
xor
mov
xchg
iret
pusha
xor
xor
in
and
pop
inc
out
push
push
mov
cmpsl
jl
pop
push
hlt
mov
je
xchg
fidivs
add
fildl
je
icebp
inc
cmp
mov
inc
cmp
addl
push
mov
jb
adc
adc
in
lods
idiv
outsl
jne
mov
mov
aam
out
sahf
sar
mov
push
xlat
xchg
ljmp
ds
ja
cmp
cmp
roll
mov
pop
dec
fsub
sub
sbb
jmp
or
adc
push
add
les
lods
inc
xlat
ljmp
fidivrs
mov
add
jb
add
or
stos
fnstsw
jb
or
adc
aad
addb
jo
push
fsubs
insl
rclb
push
es
dec
ja
lahf
dec
pop
roll
inc
clc
mov
inc
pop
roll
or
std
mov
gs
dec
push
out
xlat
pop
addl
cmp
lods
push
cmpsb
lods
pop
incb
xchg
lcall
lock
out
push
mov
scas
sub
adc
loop
mov
sbb
mov
jle
insl
ja
add
jo
mov
out
out
push
lock
lcall
push
sub
shll
or
imul
arpl
or
iret
mov
shlb
xor
ror
in
dec
fsubs
icebp
fsub
enter
shrb
mov
xchg
push
jge
call
out
mov
xor
adc
jns
push
sub
sub
xchg
xchg
xchg
cwtl
add
in
addl
sub
daa
movsl
adc
hlt
ss
fwait
or
mov
punpckhbw
jo
or
in
jbe
dec
pop
es
insb
scas
add
adc
insl
nop
ror
push
scas
sahf
push
aam
int
stos
add
jle
out
mov
pop
aaa
jp
sarl
aaa
mov
lret
nop
lret
adc
inc
test
pop
sub
fmul
add
xor
pop
jecxz
nop
sbb
mov
or
xor
sub
mov
inc
in
fimuls
mov
xchg
test
aaa
mov
ds
jg
xchg
icebp
nop
mov
scas
in
sub
and
xor
sub
ficoms
jle
inc
data16
lcall
jbe
or
nop
xchg
in
mov
pop
out
jbe
or
push
cmp
icebp
or
lret
push
sbb
sbb
sbb
sti
lods
cmp
cli
ret
mov
in
icebp
popa
js
inc
rorl
dec
or
scas
xchg
rolb
mov
insb
push
pop
add
icebp
inc
inc
adc
jbe
xchg
or
mov
push
push
push
scas
in
pop
hlt
jmp
dec
shl
mov
jns
add
push
mov
jg
addl
insl
adc
jecxz
mov
lods
mov
jg
sub
dec
dec
xor
adc
cmp
and
in
stos
sbb
insl
cmpsl
lods
hlt
jmp
mov
pusha
and
loopne
fwait
insl
push
mov
inc
add
fmull
and
cmp
mov
lock
mov
getsec
bound
pop
mov
push
dec
xchg
insl
lret
push
movsl
jb
xchg
iret
negb
push
jns
push
jno
push
hlt
clc
xchg
scas
daa
int3
out
inc
fstpt
sbb
scas
fs
mov
mov
add
mov
sbb
mov
sbb
test
jl
pop
shrl
add
xchg
pop
sbb
xlat
adc
stos
loopne
nop
xchg
xlat
aam
push
inc
lods
arpl
das
sti
mov
lods
popa
push
popa
or
test
jb
sbb
mov
adc
xor
xchg
or
lret
add
popf
jle
arpl
das
push
leave
sti
and
into
xchg
xchg
test
mov
sbb
xor
adc
insl
push
dec
cli
stc
scas
jnp
mov
fcompl
inc
pop
pushf
jmp
addl
fisubrl
out
push
or
in
sub
add
and
outsb
or
clc
out
stos
and
aaa
test
rorb
sbb
jge
or
loope
loop
inc
mov
mov
cvtps2pi
stos
xor
add
mov
mov
shrb
lock
pop
jge
jp
sbb
xor
xchg
shll
inc
sbb
mov
and
scas
cld
fildl
mov
mov
jo
jmp
inc
repnz
jb
stc
movsb
cmc
ja
jl
mov
inc
sub
leave
add
or
mov
dec
mov
mov
into
cmp
sbb
icebp
fstps
scas
loopne
add
push
decb
mov
add
add
sub
mov
xlat
or
push
ret
imul
aam
mov
mov
sub
das
insb
lds
pushf
dec
popa
mov
es
jecxz
xor
jmp
or
fimull
outsb
or
mov
push
fildl
jge
jle
fbld
movsl
cltd
jno
stos
shll
sub
add
loope
add
mov
fdivs
mov
mov
cmp
aam
repnz
mov
add
loopne
data16
and
and
ficompl
lahf
push
mov
xor
addr16
and
sbb
out
loop
scas
lahf
xor
adc
repnz
daa
dec
dec
js
pop
and
cmp
loopne
ljmp
pop
lcall
lea
jnp
dec
hlt
mov
cmpl
pop
mov
fldenv
and
mov
sahf
out
lahf
cltd
and
dec
ljmp
cmp
push
sub
inc
adc
or
leave
dec
lods
nop
icebp
xorb
out
sti
dec
das
xor
inc
inc
and
out
bnd
mov
pop
inc
xchg
jp
xor
inc
test
int3
sbb
out
in
xor
insl
rcrb
add
add
xlat
lahf
dec
mov
add
das
ljmp
add
subb
outsl
int
dec
out
loope
pop
cmp
notb
aad
sub
cs
aaa
push
push
aaa
sub
push
sbb
adc
push
push
lock
mov
pop
sysret
aam
movsb
setle
das
xchg
mov
ds
cmc
sub
shld
mov
imul
push
xor
cld
lock
push
xchg
cmc
ret
xchg
nop
loope
mov
inc
lcall
aas
jge
cmpsl
pop
push
or
leave
fisubl
dec
popa
push
lret
and
jnp
cwtl
push
jmp
fsts
jo
add
dec
push
mov
rcrl
pusha
sbb
fisttpll
mov
fwait
sub
mov
xchg
in
sub
cmp
jmp
repnz
mov
mov
mov
mov
lcall
inc
out
mov
pop
mov
les
mov
cmp
push
or
jge
xchg
inc
adc
and
add
inc
jge
pop
sub
lret
rolb
sbb
push
cltd
mov
mov
je
lds
add
loop
pop
leave
lea
adc
ret
jae
outsb
mov
lret
popa
xchg
stos
cmpl
pop
ret
fsts
jle
jne
dec
xchg
sbbl
lahf
in
imul
dec
add
mov
loopne
sbb
xchg
loop
in
imul
dec
ficomps
push
mov
sub
sub
mov
inc
aaa
mov
pop
fildl
dec
in
ljmp
jae
xchg
lcall
dec
out
popf
adc
cmpsl
stos
cmpsb
repnz
xchg
cwtl
fs
mov
jge
lcall
xchg
jp
sbb
xchg
xchg
fisttpll
add
addr16
sbb
mov
aaa
adc
imul
test
and
jmp
mov
dec
jge
mov
mov
dec
lods
lret
jmp
adc
sbb
adc
scas
lret
dec
or
push
fwait
and
lods
jp
mov
arpl
jmp
mov
aam
stos
xorb
sub
arpl
movsb
push
push
pushl
ja
imul
sti
or
add
inc
addl
cwtl
jp
out
fimuls
sarb
push
adc
aaa
pop
or
fwait
fwait
test
sti
jne
add
sub
xor
jmp
push
imul
jb
rclb
icebp
repnz
andl
aaa
dec
lock
inc
gs
jb
daa
and
es
icebp
push
pop
gs
mov
lcall
cwtl
adc
imul
dec
cmpl
dec
into
or
mov
adc
pop
mov
cmc
inc
mov
dec
push
push
xchg
fs
xlat
cmc
xchg
incl
js
out
jge
cmp
mov
sub
sub
sub
sbb
mov
add
sti
xchg
mov
pop
dec
clc
mov
fcmovnb
xchg
movl
and
je
adc
dec
jg
lods
jne
sub
inc
adc
data16
lret
nop
lods
sub
jbe
and
xchg
cmp
in
int
jmp
xor
jb
pop
xor
or
loop
popf
pop
jne
lods
push
xor
xchg
add
outsb
add
dec
push
mov
push
mov
xchg
dec
pop
jns
sub
mov
sbb
cmpsl
arpl
call
pusha
pop
jno
into
loope
cmp
mov
sbb
lahf
test
or
mov
mov
shl
push
sti
mov
or
test
ljmp
in
sub
pop
popf
sbb
jecxz
imul
loopne
sbb
fbld
fsubl
add
sub
int
adc
jecxz
sub
push
add
mov
push
cmc
clc
and
push
js
xor
std
test
mov
lahf
mov
xchg
add
pop
add
inc
aam
xlat
std
push
fwait
pop
insb
xchg
rol
pop
cmp
fmull
imul
sahf
shll
dec
scas
loop
ss
decl
out
adcl
scas
add
and
xor
fnstcw
add
xor
addr16
mov
jmp
into
daa
jp
movsl
fwait
mov
jg
jae
ficoml
push
push
sahf
data16
stos
in
popa
push
push
inc
xor
gs
pop
aas
bound
es
je
or
sub
ficoml
mov
cmp
xor
mov
cmp
xchg
addr16
dec
cmp
adc
xor
shlb
adc
mov
add
jge
in
push
dec
test
sbb
dec
lock
or
inc
in
jne
lods
das
enter
in
scas
in
xchg
int
dec
lahf
out
xchg
adc
fnsave
rcl
add
popa
mov
rcll
icebp
stos
xor
enter
pop
lds
or
xchg
mov
mov
insb
push
xchg
test
inc
mov
sub
in
xchg
sub
push
mov
sub
jnp
xor
push
mov
and
in
lcall
insb
or
mov
cli
scas
gs
xchg
es
push
nop
fcmovnb
push
lahf
imul
cmpsb
enter
cmp
shlb
mov
in
pop
xor
xor
push
jp
sub
mov
in
sub
cmc
stc
fcoml
mov
jns
jmp
xchg
faddl
jge
mov
pop
mov
jns
mov
adc
push
xchg
cmp
adc
popf
into
ffree
sub
sbb
les
mov
fs
adc
inc
aad
fistl
add
xorb
sub
imul
loop
sub
jns
test
aaa
push
adc
cmp
roll
push
push
aad
int
iret
stos
add
jns
xchg
add
jge
pop
jns
aaa
mov
push
cmpsb
inc
xor
cmp
notb
testl
hlt
sub
xchg
pop
add
pop
dec
lock
mov
les
ds
mov
push
popl
clc
cltd
add
test
outsb
add
add
push
cmp
dec
jmp
mov
dec
jp
xor
add
sbb
xchg
xchg
movsl
add
xchg
push
out
xchg
mov
loopne
imul
rcrb
jnp
mov
ret
negb
jecxz
arpl
sub
loop
shrl
pop
inc
lods
cs
daa
sub
sbb
call
mov
jo
push
lods
xchg
push
and
add
sub
cmp
push
ficoms
mov
jp
cmp
push
out
divl
and
sbb
lret
sti
loope
popa
pop
adc
jo
mov
sub
lods
cmp
mov
test
movsb
into
pop
sbb
mov
push
sbb
enter
dec
xor
es
push
cmp
cmp
push
test
mov
mov
dec
jp
xchg
push
test
daa
mov
outsb
movhps
push
cs
xor
add
inc
xchg
xchg
sub
je
ljmp
xor
pop
mov
and
loope
in
scas
jl
out
xchg
mov
and
out
push
sub
add
jae
pusha
cli
adc
lahf
mov
jb
dec
mov
insb
push
sub
das
xlat
mov
xchg
fnstenv
pop
mov
icebp
aam
xor
pop
adc
mov
push
add
out
faddl
int3
push
push
add
xchg
xchg
stos
sti
out
mov
jg
pop
cmp
test
loope
xchg
test
jl
xchg
mov
sar
sbb
push
lods
sbb
fldl
nop
inc
inc
adc
loope
jo
mov
ds
or
sbb
sbb
pusha
mov
cmp
push
arpl
jb
ja
sbbb
pop
adc
and
pop
adc
popa
popa
faddl
inc
jno
in
adc
lock
mov
outsl
shlb
stos
test
pop
aam
mov
cmp
ret
adc
shr
xchg
addr16
test
ljmp
popa
fs
xor
rorb
sub
pop
push
adc
lahf
cmp
outsb
jp
mov
and
pop
jno
std
in
sub
adc
inc
cmc
inc
and
dec
adc
xor
rcr
adc
es
out
adc
jnp
jle
leave
mov
or
push
pop
stos
mov
or
mov
ss
scas
cmpsb
push
scas
pop
orb
sub
pusha
and
xchg
scas
popa
pop
dec
xor
in
imul
or
pop
test
popa
gs
jo
fidivs
lret
sarb
and
into
mov
xchg
push
xor
inc
aad
in
lret
jg
xchg
inc
pop
mov
xchg
jl
jo
cmpsl
jb
enter
imul
nop
fnstcw
or
and
mov
mov
jo
mov
ret
inc
jo
jo
fstps
dec
mov
or
divl
hlt
mov
int3
ja
daa
out
aaa
je
mov
sbb
cmp
stc
pop
mov
xchg
pusha
loopne
mov
loopne
shrb
mov
jmp
or
aad
dec
repnz
sbb
jecxz
pop
fisubrl
in
ss
jno
stos
push
or
cmp
xor
sub
add
sahf
insl
imul
xor
loopne
push
das
mov
dec
pop
cli
fists
insl
shrl
jl
adc
nop
in
cltd
push
ljmp
call
mov
aam
adc
sarb
dec
xchg
pop
dec
loopne
fwait
lock
or
ss
das
cld
and
cs
add
ss
inc
js
mulb
fucomp
adc
mov
int3
movsb
push
adc
dec
stc
xor
pop
shlb
cmp
xchg
cltd
mov
dec
stc
lcall
jnp
cwtl
les
ljmp
cmp
test
das
add
mov
xor
imul
aad
inc
fnstenv
test
call
xchg
in
pop
xor
pop
jmp
mov
bound
ss
xor
rclb
pop
or
push
xlat
lea
in
pop
faddl
imul
es
jo
xchg
jp
sbb
popf
jp
shl
movsb
mov
js
lret
es
fildl
in
lret
adc
out
scas
out
sub
mov
loope
xor
inc
add
push
jl
push
enter
mov
xchg
inc
fnsave
mov
push
ljmp
and
int3
pop
pop
cmp
orb
loope
pop
fists
push
mov
in
mov
fcomps
jp
aas
cltd
jb
les
stc
or
lahf
adc
inc
das
enter
dec
mov
leave
jecxz
mov
dec
jnp
sub
loope
cltd
mov
mov
int
push
and
jmp
pop
inc
ret
jns
push
add
ret
fst
mov
push
stc
sub
stos
inc
test
adc
sub
push
xchg
movsb
xchg
fidivrs
cld
push
jecxz
jns
mov
xor
loope
and
repz
or
adc
inc
das
mov
inc
and
into
sub
and
and
sub
test
cld
inc
out
push
ds
cmp
loope
sbb
ret
add
repnz
mov
pop
inc
mov
add
xor
and
cmp
inc
adc
rcll
and
cvtdq2ps
xor
xchg
lret
xor
in
mov
mov
sbb
xor
sar
pop
cmpsb
xchg
push
in
hlt
les
and
cli
dec
sbb
push
inc
bound
out
and
mov
cld
xchg
and
or
mov
fcomip
ja
pop
scas
aas
shl
jne
adc
jae
dec
mov
shll
or
xchg
xchg
and
scas
push
outsb
sbb
cs
inc
xchg
in
sbb
jae
je
sub
mov
mov
sahf
std
mov
mov
adc
xlat
lods
push
pop
push
dec
rclb
cmpsb
mov
mov
jge
inc
out
mov
cmp
dec
cltd
ss
test
pop
jg
mov
jl
bound
jno
and
sbb
mov
push
arpl
cmp
dec
jge
lret
ficoml
icebp
pop
xchg
stos
sub
add
test
cmp
in
inc
cli
pop
sahf
mov
jg
adc
lea
push
cmpsb
out
rcll
arpl
test
out
mov
push
xchg
test
xchg
negl
xchg
insl
dec
stos
ffree
jo
ficomps
xchg
dec
mov
cmpsb
push
enter
in
xchg
lahf
shlb
adc
rclb
adc
daa
pop
cmc
mov
rolb
mov
aas
inc
sbbb
jnp
popa
jnp
cmp
fsubp
ss
mov
test
lds
test
repnz
aam
pop
and
imull
les
adc
adc
rcrl
jl,pt
xchg
pop
fnstenv
jecxz
push
add
mov
mov
or
jo
cmp
iret
aas
jle
cld
aas
sub
adc
insb
jno
inc
sbb
push
mov
and
sbb
cmpsl
hlt
rorb
sbb
sbb
test
mov
fdivrp
and
or
daa
cmp
jne
sub
and
pop
cmp
and
cmc
in
sub
sbb
pop
xchg
cmp
mull
jbe
inc
mov
dec
flds
sub
pop
mov
sub
xchg
jmp
out
std
xlat
insl
adc
adc
xchg
scas
pop
test
cmp
add
push
and
jns
jecxz
out
mov
lock
mov
pop
mov
in
movl
in
in
xchg
xchg
jle
jmp
jo
xchg
testb
xchg
dec
push
daa
pop
aaa
ljmp
mov
add
adc
ss
lds
xchg
push
xchg
adc
sbb
mov
sub
ret
in
or
pop
rcll
mov
or
decb
out
push
aas
sub
push
sub
jmp
mov
and
push
inc
mov
or
pop
push
xchg
fs
andl
stos
hlt
pop
enter
sbb
insl
ds
nop
test
scas
movsl
out
add
insb
jne
dec
xchg
mov
add
mov
mov
mov
add
arpl
sti
out
orl
xor
adc
sbbb
inc
outsl
adc
mov
pop
out
les
mov
or
pop
mov
lock
and
lret
sub
mov
jbe
xor
or
mov
mov
adcb
sub
cmc
into
xor
sbb
ret
mov
dec
adc
dec
xor
rclb
push
gs
pop
in
jne
xchg
push
push
pop
pop
inc
and
mov
cwtl
movsl
sub
jecxz
imul
jmp
imul
add
push
cmp
jns
or
mov
jecxz
pop
test
outsl
imul
jb
mov
xor
fs
hlt
dec
or
dec
jb
pop
and
inc
cmp
popa
mov
add
push
cmp
inc
outsl
cmp
push
adc
push
fbstp
aaa
fimuls
dec
or
lret
add
mov
inc
je
xor
fdivl
popa
lods
mov
cld
in
imull
mov
adc
andl
pusha
xlat
xchg
aam
lret
push
push
adc
mov
outsl
pop
scas
dec
js
mov
pop
mov
jno
fs
out
push
inc
jns
stc
lcall
enter
cli
xor
xchg
cmp
pop
iret
lcall
mov
int
ret
test
jno
push
jns
mov
dec
test
cmp
dec
lock
mov
inc
mov
jg
negb
addr16
addr16
and
fisubl
sub
mov
cmp
mov
mov
movsl
xchg
neg
push
loope
fsub
mov
mov
out
pop
sti
out
sbb
ds
push
hlt
xor
cmp
sub
cmp
outsb
shlb
repnz
add
mov
sub
out
pop
lret
or
mov
in
or
aaa
pop
mov
mov
call
inc
push
xchg
lock
pop
mov
push
ljmp
adc
test
xchg
scas
cmp
xor
lcall
sti
shrl
aad
jp
pop
jne
jle
mov
adc
pop
pushf
aam
push
sub
inc
outsl
xchg
push
and
fdivl
sahf
rcl
cs
adc
repnz
pushf
add
xchg
in
lret
vpshuflw
hlt
cld
in
out
cmp
xchg
roll
repnz
xchg
or
bound
jno
mov
add
popa
dec
lcall
push
sahf
dec
mov
mov
insb
outsl
cli
ljmp
jmp
or
xchg
sub
mov
pop
or
ljmp
adc
cld
adc
out
add
xchg
cmpsb
stos
mov
mov
sub
mov
mov
call
lahf
jne
pop
lcall
adc
sub
test
adc
and
or
inc
xchg
or
dec
or
insl
jge
mov
pop
mov
inc
inc
pusha
cmp
mov
dec
insl
outsl
jle
je
leave
dec
mov
pop
into
enter
mov
aam
xchg
add
daa
js
mov
rcrl
mov
push
and
int3
iret
pop
call
femms
mov
push
popf
jg
and
pop
mov
or
xchg
jmp
inc
ret
mov
sbb
jl
ficompl
add
pop
jno
cmp
add
push
dec
and
cmp
dec
aaa
mov
cs
leave
add
inc
popf
dec
xchg
int
call
lods
jno
stos
xor
xor
cmp
lds
out
xor
inc
fstl
push
lret
rolb
andl
int3
mov
dec
bnd
mov
loop
rorb
sbb
xchg
xor
daa
shl
pop
mov
pop
stos
xor
int3
inc
inc
shlb
add
cmp
pop
lods
add
and
loopne
push
mov
xor
mov
js
fisttpl
jae
arpl
jnp
push
adc
cmp
fnstcw
pop
and
dec
lahf
shl
clc
cwtl
sahf
lods
mov
xor
movsb
test
mov
aam
pushf
jl
dec
shll
shr
mov
rcll
push
jg
dec
xchg
call
push
cld
add
in
cmp
lods
and
cwtl
mov
dec
jp
test
enter
cmp
push
or
ror
add
shrb
mov
push
nop
mul
pop
into
pop
xor
int
pop
fstpl
add
mov
mov
fwait
das
or
lret
push
out
add
pop
mov
jcxz
negb
fwait
in
clc
sti
pop
cmp
lret
xor
ret
mov
add
sub
push
jnp
cmp
in
lock
in
mov
ret
xor
sub
adc
jp
pop
movsb
aas
lret
pop
bound
rcll
fcoms
mov
mov
mov
jmp
out
test
pop
insb
xor
add
and
mov
call
sub
inc
mov
xor
movsb
and
in
dec
pop
fldt
stos
xor
cmpsb
push
dec
cmp
and
imul
mov
cli
ljmp
xlat
push
pop
xlat
sub
in
push
adc
sub
mov
jp
scas
lret
jmp
popa
stos
inc
out
shll
movl
lret
cmp
inc
mov
adc
inc
daa
lret
iret
mov
xchg
jg
pusha
pop
pop
inc
push
cwtl
cmpsb
or
jbe
add
ret
aad
outsl
xor
inc
outsb
imul
push
rorb
mov
mov
mov
pusha
arpl
test
gs
loope
and
pop
shlb
xchg
test
push
adc
jl
push
cmp
sbb
cmp
repnz
fisttpll
loopne
push
cmp
adc
test
pop
mov
enter
dec
cmpsb
mov
mov
dec
pop
pop
mov
cld
insb
outsb
cmp
jae
mov
ljmp
fwait
mov
dec
jle
iret
pop
dec
jno
mov
xchg
rorb
push
es
stc
dec
jmp
fdivr
xchg
cmp
icebp
push
add
fwait
sub
dec
pop
insl
xor
int3
sub
mov
out
xorl
fistl
and
sbb
adc
xchg
test
into
and
adc
sbb
lods
xor
sub
sbb
sahf
icebp
movsl
stc
xchg
repz
sbb
mov
mov
sti
js
push
adc
loopne
pop
nop
inc
stos
jnp
addr16
pop
ljmp
jo
testb
push
xchg
or
mov
cmp
push
inc
sbb
loope
dec
addr16
adc
icebp
mov
stos
daa
sbb
xor
cmpb
in
xchg
or
dec
stos
xchg
xor
out
les
test
cmp
test
jbe
push
jmp
data16
and
pushf
mov
scas
lret
push
xor
sub
sub
sub
ret
xchg
push
out
sub
push
aam
push
enter
out
mov
jne
mov
insl
cmc
ja
bound
sbb
lds
sahf
push
rol
jl
and
imul
pushl
mov
mov
sub
pop
std
xor
add
clc
lret
int
xor
test
cmp
test
sub
fwait
sub
push
test
es
out
adc
xor
dec
mov
xchg
dec
cmp
test
fwait
add
lahf
rcrl
cmp
adc
pop
daa
sub
sahf
scas
negl
jne
rcll
jo
mov
dec
imul
mov
lret
js
stos
cmpsl
push
mov
mov
fwait
into
jns
addr16
cmp
mov
inc
jne
pop
xchg
push
fs
outsl
mov
mov
cmovge
jmp
daa
jbe
mov
enter
sar
test
sbb
sahf
clc
mov
mov
loope
mov
mov
rclb
sbb
push
call
js
lahf
aad
test
cwtl
sbb
xor
push
hlt
out
xchg
add
iret
mov
add
mov
add
and
popa
mov
jo
inc
and
arpl
outsl
mov
lods
dec
cmc
cmc
add
push
jmp
sbb
in
xchg
sbb
lods
test
xchg
outsb
and
call
adc
insl
sbb
pop
mov
insb
les
cld
test
int3
dec
lret
nop
jnp
lock
sti
out
pop
and
dec
adcb
shlb
int
sbb
pushf
or
mov
das
push
jl
aaa
push
lds
stos
mov
loop
cld
icebp
mov
subb
push
or
andl
jl
dec
popa
pop
fcomip
loopne
hlt
loopne
jo
add
scas
and
push
stos
mov
jmp
sub
nop
subl
hlt
mov
or
aad
push
popa
pusha
push
xchg
icebp
push
les
sbb
in
mov
xchg
mov
cltd
sar
mov
xor
jecxz
adc
scas
sbb
sub
pop
int
test
lods
and
popf
andb
es
mov
dec
sub
xchg
iret
or
fstps
sbb
dec
pusha
lret
adc
imul
mov
cmc
mov
sub
push
lock
fstpl
outsb
push
sbb
out
sub
mov
out
cmpsb
push
mov
popf
push
out
movsb
sub
arpl
scas
scas
jecxz
pop
jg
call
fucomp
rcl
dec
jge
cs
ret
push
data16
pusha
gs
hlt
dec
mov
in
adc
mov
xor
aam
cmpsl
imul
jae
pop
loop
mov
fld
and
loope
mov
cs
gs
pop
sti
bound
mov
std
adc
out
pop
adc
mov
lret
cltd
dec
jl
gs
inc
jmp
jmp
cltd
punpckhdq
inc
pop
sbb
cwtl
xor
ss
repnz
ror
sub
cmp
add
sub
lret
loop
xchg
clc
pop
mov
movsb
pop
mov
dec
adc
cli
push
xchg
mov
xor
mov
sub
into
daa
imul
pop
jp
push
mov
dec
inc
cwtl
or
scas
daa
psubusb
push
cmpsl
push
in
sti
push
xchg
mov
push
mov
cmp
push
dec
int
stc
loope
push
pop
dec
es
sub
iret
insl
xchg
lahf
daa
add
sbb
insl
mov
jl,pt
dec
pushf
lcall
out
jbe
dec
ds
call
pop
fs
movsb
lcall
daa
mov
in
push
and
inc
aad
testl
or
fdivs
dec
std
lods
pop
sub
mov
cmpsb
cmp
int3
fldt
jbe
cltd
jp
add
repnz
lcall
sbbb
jb
or
mov
xchg
or
mov
negl
ljmpw
cmc
add
cld
out
int3
fs
leave
mov
shr
push
ja
add
cltd
jle
fnstsw
cmpsb
pop
dec
cmp
push
out
gs
mov
insl
mov
hlt
mov
es
xlat
mov
lahf
into
lock
sbb
or
mov
inc
and
fdivp
sub
push
xchg
lcall
fsubrl
lds
jae
adc
sbb
add
or
ret
dec
sbb
mov
pop
push
jmp
sbbb
sahf
repz
or
test
js
ret
hlt
push
adc
sbb
ljmp
ret
ret
sti
pop
push
push
jle
call
cli
repnz
cwtl
sbbl
inc
stos
mov
popf
aas
mov
daa
xor
das
mov
jne
into
mov
mov
jns
inc
jg
push
sahf
aaa
ret
jb
adc
sub
push
sbb
js
lods
mov
sarb
adc
jp
rclb
nop
sarl
and
lods
add
fwait
cmp
cmp
and
icebp
and
jl
cs
mov
pop
fisubrs
dec
inc
mov
mov
jne
outsb
lea
xor
aad
mov
and
leave
movsb
push
cmpsl
leave
aam
mov
add
sub
mov
fstpl
loope
inc
jle
imul
add
fs
dec
loop
cmpsl
popa
dec
pop
push
cmc
sbbl
mov
mov
mov
stos
cmp
pop
cli
test
mov
stos
into
push
xchg
stc
inc
inc
and
xor
jbe
pop
pop
pop
mov
cmc
out
adcb
cmp
dec
loopne
jmp
jns
repnz
pop
rorb
rcll
gs
icebp
cs
loop
adc
dec
push
xchg
imul
ss
sub
out
xchg
mov
jg,pt
and
xor
inc
call
xlat
scas
iret
mov
cmp
imul
xchg
sub
add
push
adc
lret
xorb
jle
add
xor
rcrl
stos
ss
mov
cmpsl
popf
jg
cmp
test
pop
inc
mov
insb
sub
add
jmp
insl
fwait
mov
test
ret
sbb
andl
mov
dec
xchg
dec
dec
fmuls
lea
mov
mov
sub
mov
mov
or
mov
mov
in
push
outsl
fwait
add
add
or
lods
mov
dec
mov
xlat
mov
es
jne
sbb
bound
push
sub
dec
cmpsl
sbb
xor
push
test
push
cmp
mov
test
sub
xor
xorb
jmp
add
pusha
outsl
roll
push
lods
popf
mov
mov
ficoms
or
and
mov
push
ss
jae
leave
gs
sbb
roll
dec
cltd
sub
les
imul
pop
jne
jge
or
js
das
push
out
enter
scas
cli
mov
jnp
push
mov
xchg
out
mov
das
fs
subb
in
fnstcw
mov
xor
lea
ljmp
xchg
dec
dec
lahf
std
stos
out
test
xchg
sbb
imul
fs
lret
int3
rolb
mov
sub
outsb
shrb
mov
cmp
cmp
push
movsl
aad
imulb
push
mov
jnp
mov
push
int3
fidivrs
jae
nop
gs
scas
outsl
in
test
movsb
and
pop
add
mov
xchg
and
mov
xor
push
out
pop
js
push
adc
lods
add
pop
push
and
cmp
ror
scas
mov
lods
mov
stos
pop
mov
or
push
push
sbb
cmp
lds
pop
mov
lods
std
fisubrs
push
cs
push
outsb
mov
cmp
cmp
mov
mov
dec
aas
adc
inc
push
sub
push
repz
xor
cmp
push
mov
movsb
lock
jno
push
pop
ret
lods
dec
push
push
jle
mov
je
das
std
sub
or
jb
mov
je
enter
shl
xor
pop
push
dec
packuswb
ljmp
xor
cmp
inc
pop
into
icebp
sbb
mov
inc
ljmp
inc
push
leave
add
fiadds
ret
mov
loopne
sbb
adc
mov
pop
sub
dec
or
jp
sbb
or
xchg
andb
xor
and
repnz
repnz
sub
repnz
lods
jno
lock
mov
sbb
jns
jno
movsl
lcall
and
xor
dec
sbb
mov
fadd
inc
pop
ss
test
lods
add
jg
je
dec
fists
adc
jge
cmp
outsb
push
jl
jo
into
adc
mov
jbe
addr16
repnz
fdivrl
decb
sti
push
ja
and
pop
jb
mov
or
imul
or
pop
je
pusha
cmpsl
fisttps
loopne
pop
cld
add
cmp
enter
ja
xorb
adc
mov
push
bound
pop
outsb
push
dec
xor
jge
pop
xchg
repz
push
adc
hlt
cmpsl
into
loop
ljmp
jno
push
hlt
add
cs
sub
orl
stc
dec
cmc
mov
lods
pop
sub
pushf
pop
lcall
pop
mov
sub
cmp
xchg
sahf
fwait
xor
and
sbbb
jecxz
mov
push
sahf
and
loopne
imul
lret
mov
sahf
push
push
mov
push
adcb
sub
rclb
ljmp
rolb
xor
xchg
add
jne
shlb
jne
enter
mov
aad
lock
cmpsl
sbb
popf
xchg
scas
sahf
xor
popf
mov
xchg
jnp
sarb
push
inc
pop
push
mov
js
push
inc
adc
pop
jg
mov
daa
and
and
inc
jne
cmp
cld
or
data16
sahf
jns
enter
nop
push
xor
or
aad
xchg
pop
xchg
je
push
jle
or
and
ret
inc
mov
inc
xor
add
mov
das
imul
or
ret
sub
inc
jecxz
sub
movsl
jecxz
mov
pop
push
or
imul
fnstsw
xchg
cmp
aaa
adc
pusha
and
mov
scas
clc
adc
cmpsb
pop
push
test
mull
cmp
test
aad
stc
xchg
into
push
faddp
stos
ret
mov
cmp
inc
ds
push
and
jnp
roll
div
add
fcompl
in
inc
adc
aad
je
imul
mov
push
inc
pop
xor
es
loop
es
repnz
or
test
mov
pop
inc
aaa
subb
or
mov
sti
jge
mov
in
pop
pop
fs
mov
rol
cwtl
aas
lods
pop
mov
xchg
dec
pop
aad
out
xor
add
iret
test
fdivrl
add
or
jmp
clc
mov
sbb
sbb
inc
dec
int
sbb
mov
movsl
add
int
aaa
lods
mov
cmp
jg
xchg
in
mov
insl
push
or
mov
daa
inc
int3
outsb
sar
in
repz
fcompl
popa
sub
pop
cmp
in
movsl
pop
mov
push
adc
dec
aad
cltd
adcb
push
ret
js
and
aad
repz
push
pop
pop
out
lods
imul
jae
mov
jmp
pop
cmp
jbe
cmp
mov
push
stc
std
pop
pushl
subl
out
push
stos
xor
mov
sbb
das
cmovle
pandn
and
cltd
xlat
and
mov
pop
mov
sahf
add
adc
shr
jbe
pop
cmp
inc
pop
sbb
dec
out
mov
fucom
mov
jl
xchg
sbb
mov
out
orb
push
add
lds
jp
movsb
push
int3
pop
das
andb
push
dec
data16
push
inc
pop
xor
dec
jge
mov
imul
adc
mov
push
sahf
dec
cmc
push
faddl
inc
insb
pop
loopne
test
push
jo
sub
mov
jae
or
cmp
jno
aam
sub
inc
cld
add
jle
or
push
mov
dec
inc
jmp
jmp
lds
mov
movsb
adc
push
gs
adc
sti
cmc
ljmp
movsl
adc
lock
fistl
inc
adc
cli
popf
sub
pop
mov
mov
mov
mov
cmp
dec
in
fdivs
mov
push
fsubp
ja
test
pop
add
addr16
dec
mov
aas
int
out
lret
sbbb
adc
inc
in
push
cmp
int
jae
jo
push
enter
adcb
iret
cmp
rol
pop
iret
sub
test
push
mov
push
pop
enter
xor
jae
adc
or
mov
mov
mov
hlt
sbb
fcoml
or
jecxz
bound
bound
inc
xlat
leave
mov
xor
sbb
mov
fstpt
jle
inc
ret
lret
push
add
aad
int3
pop
mov
sub
es
inc
mov
xor
adc
repnz
stc
mov
mov
cmp
int3
jnp
fistpll
fwait
adc
popl
xor
popf
add
add
pop
out
xchg
add
mov
dec
arpl
cwtl
lock
adc
jnp
cmc
xlat
pusha
add
jo
or
xchg
sbb
outsb
stc
jb
or
mov
inc
add
inc
imul
or
call
inc
mov
gs
inc
rolb
insb
sub
dec
movsl
lock
adc
popa
xchg
sbb
pop
sub
pop
jns
push
fsubs
enter
gs
xor
mov
cmpsl
xchg
arpl
adc
filds
lods
mov
mov
xor
xchg
mov
mov
fcmovb
fnsave
pop
add
scas
arpl
sub
push
jge
jge
lods
into
cmpl
loope
cs
mov
enter
mov
sbb
add
hlt
test
test
xchg
mov
aad
sbb
es
mov
sbb
enter
int3
sub
ss
loope
pop
cmpsb
pop
pop
add
arpl
test
or
icebp
scas
and
push
mov
mov
mov
dec
lock
mov
mov
js
inc
inc
sarb
pop
sbb
xchg
xor
push
mov
rcr
cmp
test
cmp
bound
or
add
int3
rolb
rorl
mov
push
es
cs
adc
fs
xor
repnz
lret
in
push
lock
jg
clc
in
dec
push
push
mov
mov
or
sbbb
inc
mov
dec
fsubrs
out
or
xor
dec
jno
call
or
hlt
scas
xchg
cmp
fimuls
xchg
lgs
xchg
xor
cli
lcall
push
ret
gs
jae
push
pop
sbb
and
lea
xorb
jnp
inc
fsubrl
mov
cli
mov
inc
cmp
xor
adc
lea
lods
call
scas
leave
sahf
mov
push
std
insb
rcrl
clc
addb
push
fstps
xor
pop
pushf
repz
push
xor
sub
xchg
lods
and
inc
jbe
dec
pop
pop
dec
outsl
pop
sar
push
idivl
imul
ja
xchg
mov
mov
sub
out
push
mov
xchg
loope
push
sbbb
jle
sbb
repz
rol
push
push
cpuid
adc
cmp
cmp
stos
leave
int3
or
arpl
hlt
push
int3
add
jae
js
mov
lret
fwait
test
jns
mov
fists
rcll
xchg
or
stos
das
dec
pop
lds
mov
in
insl
mov
fstps
xchg
mov
or
scas
or
out
xchg
lcall
ja
mov
push
dec
lret
andl
lahf
xlat
mov
push
sbb
lea
ficoms
mov
test
pop
test
stos
mov
fldt
repnz
mov
push
adc
mov
xor
jns
cs
add
fidivl
out
xchg
jecxz
mov
adc
sub
pop
lds
push
and
sub
outsb
ret
les
mov
imul
mov
subb
jle
fisubs
dec
or
loop
add
adc
jns
fs
xor
sbb
jnp
mov
testb
adc
stc
scas
push
xor
jo
push
mov
std
popa
or
cmpsb
loop
jge
mov
in
stos
mov
cwtl
outsl
rcrl
xor
fwait
adc
inc
popa
jg
mov
sbb
les
inc
adc
adc
je
sti
and
dec
and
sbbl
enter
aas
orl
ret
xchg
add
les
or
popa
push
and
inc
cmpxchg
sub
push
push
addr16
loopne
test
js
cmp
sbbl
adcb
pop
mov
adc
aaa
adc
stc
negb
dec
iret
mulb
xchg
out
lea
int
xchg
jmp
clc
add
dec
jp
xchg
xchg
xor
xchg
cmp
adc
scas
psubusw
std
fs
xor
inc
mov
movsb
mov
dec
mov
cmp
lods
fstpt
jl
fs
lods
and
loope
add
jne
pop
cmovb
popf
lahf
lods
imul
shrb
push
xorb
sti
notb
pop
popf
das
gs
test
std
or
mov
add
out
xor
xlat
cmp
sti
jmp
jmp
fistps
leave
add
sbb
pop
mov
aam
lret
loop
pop
aam
sti
rol
imul
adc
test
sub
push
mov
aam
addr16
or
mov
out
adc
shrb
adc
pushf
xor
or
aam
or
nop
testb
mov
in
xor
out
popf
adc
mov
loope
jmp
add
into
dec
mov
cmp
dec
cmp
test
stc
jge
lock
jbe
inc
gs
jg
dec
in
push
mov
add
inc
add
in
int
mov
cmp
pop
jecxz
cltd
or
mov
push
jns
mov
rclb
clc
ja
jl
das
sbb
or
mov
xor
flds
jp
or
adc
out
pop
cwtl
out
stos
sub
jbe
loope
or
into
enter
jbe
dec
pop
testl
jecxz
mov
nop
inc
out
cmp
aam
jbe
xchg
loopne
and
jmp
incb
ror
sti
and
dec
fstps
dec
ret
cmp
imul
cltd
mov
mov
shll
jb
jno
sbb
add
scas
mov
pop
fldl
lods
fsubr
jbe
hlt
dec
mov
or
out
inc
bswap
sbb
lahf
insb
stos
lret
and
dec
xor
fisubrl
sbb
push
jnp
mov
sbb
aam
imul
scas
mov
push
jb
or
fimuls
cmp
insl
es
adcb
loopne
cmc
and
dec
daa
add
mov
pop
xchg
shll
mov
and
inc
sub
inc
xor
repz
lock
cmc
out
rcrb
and
pop
and
fldenv
jnp
mov
jb
sub
int
add
fcmovnbe
or
mov
mov
xor
adc
inc
push
int
roll
fmulp
inc
fdivrs
lods
subl
pushf
mov
sub
cltd
fld
lods
enter
mov
xor
popa
adc
mov
and
pop
push
loopne
mov
nop
mov
inc
ret
pop
insb
pop
mov
jg
mov
into
cmpl
inc
mov
or
in
and
adc
insl
cmp
dec
aam
aad
cltd
jge
dec
sti
xchg
sbb
pop
clc
xchg
dec
cmp
fwait
cmp
mov
jb
ds
bound
jnp
insb
pop
call
test
xor
xor
cli
pop
das
xchg
inc
or
push
and
dec
mov
aaa
fcoms
lods
mov
xor
mov
rcrb
or
jmp
sbb
sbb
pop
fcomps
in
ja
mov
stos
mov
mov
out
mov
lods
add
fistl
mov
xchg
repz
insl
cli
les
jmp
jg
iret
test
mov
mov
xchg
lret
test
aaa
lea
push
jp
sbbl
pop
std
lcall
std
rcrb
mov
mov
push
pop
or
lods
dec
outsl
pushf
data16
jno
daa
fiaddl
in
mov
pushf
mov
lea
cld
jb
and
jae
dec
mov
insl
imul
add
cs
inc
js
ror
inc
push
xlat
das
cmc
and
inc
add
xorb
ffree
sbb
and
enter
adc
dec
jns
cmpsl
xchg
jns
xor
loop
ja
cld
dec
adc
jbe
outsl
add
mov
repz
cmp
xchg
push
cmp
xor
divb
dec
sbb
push
xor
push
daa
xchg
pop
cs
call
mov
dec
pop
dec
adc
popf
push
rcrb
xor
nop
mov
jle
cs
subb
int3
cld
xchg
push
dec
ret
sub
mov
mov
mov
mov
push
mov
mov
or
add
insb
mov
jnp
loopne
mov
push
dec
mov
mov
into
mov
loop
mov
cmpsb
sti
cmpsl
pop
hlt
fsubl
xlat
out
pushl
mov
mov
out
push
or
mov
dec
cmp
in
push
outsl
fisttps
outsb
orl
aaa
cmp
add
mov
imul
pop
lahf
test
in
dec
jecxz
setne
jmp
imul
sub
dec
divb
mov
adc
stos
xor
je
pusha
jl
jae
dec
fwait
lret
ret
xlat
push
pop
fmul
cmc
and
repz
aas
fsubl
push
fnstenv
fmulp
test
xchg
jne
lea
or
mov
push
test
xlat
add
loop
int
push
jge
jne
cmp
sbb
orl
mov
push
outsb
push
adc
fwait
or
mov
lahf
mov
add
mov
ja
std
adc
outsb
inc
gs
insl
movsb
xchg
loope
cmpsb
or
and
je
inc
fidivl
pushf
sbbl
lcall
pop
sbb
xchg
and
pop
pop
mov
push
mov
sahf
mov
in
and
lock
mov
ret
lcall
mov
in
arpl
sub
leave
aaa
lea
scas
pop
mov
and
ljmp
xchg
inc
mov
xchg
insl
and
out
loope
push
imul
dec
or
mov
test
mov
push
aad
sbb
xchg
cmp
insl
incb
adc
lret
ljmp
out
mov
inc
jmp
fisubs
fistpll
rorl
add
decl
mov
jns
inc
sahf
ret
push
adc
sub
sub
jne
dec
jecxz
inc
jns
dec
push
jns
inc
in
pop
cmp
scas
aad
mov
outsl
cmp
lods
dec
int3
out
test
pop
mov
lahf
stos
push
in
jae
imul
and
push
or
cmp
lea
or
jle
dec
mov
inc
shr
push
fmul
push
ret
scas
cmpsl
and
pop
call
cwtl
loop
int
or
mov
scas
dec
mov
and
hlt
mov
push
fdivp
jae
push
fidivs
mov
xchg
ja
sub
test
mov
mov
sub
mov
bound
sbbb
testl
mov
sub
in
pop
add
lods
aaa
cmp
ret
stos
and
leave
dec
testb
out
pop
or
adc
pop
jg
mov
imul
movsl
push
lahf
jecxz
push
insl
add
cmc
jno
sub
sub
inc
xor
andl
jl
movd
in
adc
das
push
add
cmp
and
cmpsl
mov
bound
add
xor
test
mov
mov
bound
push
sub
cmp
icebp
dec
int3
add
cmp
ljmp
mov
push
aas
xchg
mov
mov
mov
lds
iret
jnp
xchg
nop
pop
mov
add
movsb
rorl
shlb
ret
inc
xor
fimuls
push
into
and
sbb
stos
cmpsl
clc
insb
fisubrl
adc
push
subl
out
push
aad
das
repnz
rorb
xchg
jg
icebp
mov
mov
test
pop
push
adc
in
aad
mov
sub
inc
sub
sbb
or
fisttps
xchg
in
jnp
rclb
int3
sbb
inc
xor
add
and
fisubs
push
repz
pop
inc
jp
inc
adc
test
leave
aad
loope
jmp
inc
lock
cli
xor
mov
add
lret
movsb
test
sarb
cld
ret
fisubl
fcomps
sub
adc
jbe
cmp
pop
js
cmpsl
jl
pushf
dec
movsb
lcall
ret
fisubl
test
pop
dec
and
and
jle
mov
sti
stc
into
mov
mov
push
fdivrs
pop
in
jp
movsl
cmp
jb
shll
cmc
in
pop
jmp
xchg
dec
xchg
cmp
or
ficomps
pop
daa
jb
dec
and
imul
jmp
flds
int
lret
into
ror
cmp
fsubs
loopne
cs
jno
dec
jne
mov
jl
cltd
dec
leave
inc
mov
out
inc
mov
and
push
mov
mov
or
daa
int
jge
jmp
ss
popf
je
xchg
mov
push
imul
aas
ror
mov
mov
mov
shlb
mov
sbb
popa
pop
xchg
or
adc
not
or
jb
dec
sbb
ret
mov
pusha
pop
jecxz
fcompl
js
lret
push
fsubs
push
lea
mov
js
popa
outsl
adc
or
cwtl
xor
in
xlat
mov
mov
sub
cmc
cmpsl
ss
cmp
rcl
push
adc
les
stos
mov
fidivs
arpl
mov
js
pop
hlt
shrb
push
inc
testl
sub
inc
rcrl
cmpsb
and
inc
nop
in
push
add
xchg
mov
mov
mov
jo
mov
mov
and
mov
flds
fs
add
mov
or
jmp
mov
xor
add
mov
mov
xchg
icebp
lock
dec
test
test
fadd
rcr
or
lds
js
sbb
or
test
mov
xlat
dec
jle
test
xor
add
pop
pop
mov
orl
pop
push
inc
pop
cli
mov
sbb
mov
divl
movsl
jnp
cltd
pushf
in
dec
sub
dec
loopne
push
mov
and
adc
ret
mov
fwait
iret
add
ljmp
mov
out
sti
ret
fsubrs
xchg
xor
cltd
pop
sbb
inc
jg
or
mov
xchg
push
addr16
inc
shr
mov
xor
sbb
mov
mov
in
pop
cli
adc
dec
cmp
mov
add
testb
push
xchg
add
add
mov
jle
mov
and
sub
dec
cmpb
mov
add
inc
jns
lds
in
sbb
icebp
push
or
in
cwtl
das
sub
push
pushf
mov
mov
push
mov
dec
int
lock
pop
jne
mov
inc
mull
jns
jnp
dec
mov
fs
sarl
outsl
mov
in
or
rcll
sarb
adc
cmp
dec
cs
push
lea
rcl
imul
xchg
jle
mov
cmpsl
or
push
pop
push
inc
stos
mov
add
in
sbb
or
xlat
mov
inc
adc
mov
cmp
out
outsb
jne
jnp
inc
aam
push
std
xor
inc
incb
add
in
outsl
pop
pop
mov
push
xor
aam
bound
xor
imul
push
xor
and
pop
dec
int3
or
call
dec
in
push
xchg
pop
imul
bound
out
lret
xchg
xorl
popf
inc
outsb
popf
loop
xorl
pop
ljmp
sbb
and
lea
mov
lahf
movsb
imul
imul
dec
push
jg
jp
jns
xchg
ljmp
int
mov
mov
dec
mov
loope
push
jl
mov
inc
xchg
popf
and
mov
in
or
inc
mov
jmp
mov
in
push
fwait
lods
into
adc
enter
pop
adc
call
testb
test
in
pop
and
jmp
inc
ss
pop
mov
sub
ljmp
xor
dec
and
jo
inc
enter
xor
mov
push
mov
add
inc
ljmp
cmc
iret
jno
or
cmp
cmp
sahf
cwtl
lcall
push
jl
sbb
jne
jecxz
iret
fs
xor
mov
hlt
adc
mov
jg
lcall
jge
dec
dec
fsub
sbb
pushf
daa
inc
nop
repz
add
je
ret
inc
clc
or
jg
out
mov
jbe
std
xchg
mulb
inc
stos
test
lret
icebp
jne
xchg
stos
add
iret
sub
outsl
sub
daa
out
xchg
fisubs
cwtl
adc
jne
sub
sahf
imul
pop
xchg
mov
mov
fstpt
in
enter
push
fistpll
jp
outsb
or
lcall
pop
lret
xchg
pop
divl
bound
arpl
jg
imul
inc
rclb
jg
fnsave
xor
sub
push
stos
mov
mov
inc
inc
push
xchg
das
and
lods
push
inc
ja
aam
stos
pop
pmullw
fisubrs
and
mov
xor
outsl
sarb
xchg
sub
into
and
cmpl
fwait
and
pop
push
jmp
xor
outsl
addr16
xor
pop
lcall
imul
dec
dec
xchg
outsl
push
and
and
xlat
imul
cmp
lret
xchg
ss
xchg
mov
pop
ret
pop
pop
data16
loop
jo
scas
ret
das
mov
imulb
sbb
loopne
lcall
fsts
jp
mov
pop
lret
mov
mov
add
mov
xchg
inc
xor
cmp
pop
shll
jl
lods
ja
cmc
add
mov
lods
sbb
inc
aaa
mov
xchg
cmp
xchg
insl
sbb
dec
ret
iret
pusha
jge
fwait
sbb
nop
mov
nop
stc
or
push
fdivrs
add
lods
push
lea
mov
ret
shrl
xchg
jge
push
push
mov
aam
imul
mov
lcall
mov
mov
mov
test
pop
adc
push
push
ficompl
inc
repz
pushf
add
popa
push
inc
fistpl
sub
adc
cmp
mov
aad
sbb
xor
cwtl
in
nop
scas
ja
mov
mov
test
xchg
sub
add
jl
cmpsb
mov
es
mov
jg
xchg
add
sbb
cltd
xor
and
jo
xor
loopne
popa
fsubrl
add
das
jle
cli
shrb
jb
mov
jnp
notl
and
mov
xor
dec
outsb
fdivrs
xor
and
cmpsb
loopne
adc
lret
and
arpl
fidivrs
aas
fxtract
pusha
push
or
xchg
push
icebp
jmp
add
add
sbb
dec
mov
push
xchg
inc
push
xchg
fstpt
aas
bound
insl
sbb
scas
push
xchg
dec
notb
mov
xor
in
push
or
pop
jle
lret
xor
push
sub
adcb
mov
sahf
jmp
mov
or
outsb
shlb
lret
mov
stos
lea
lds
mov
sub
lods
out
add
out
cs
pop
mov
or
out
into
jmp
mov
dec
fpatan
test
cmp
call
sbb
mov
scas
cmp
ss
aas
xchg
aas
scas
xchg
or
mov
mov
jno
inc
leave
das
jbe
push
mov
sbb
loop
xor
xchg
arpl
dec
jmp
and
mov
cmp
sub
dec
pop
test
in
xor
cmp
lahf
popf
mov
insl
pop
adc
mov
jp
into
sbb
stos
or
xor
push
movsb
mov
add
push
add
adc
lds
dec
mov
leave
fists
out
loope
fiaddl
pushf
pop
push
popa
enter
sarl
adcb
int3
xor
das
lea
sub
jns
dec
inc
mov
and
out
les
mov
sti
and
imul
mov
xor
xchg
xorl
test
ret
or
gs
popa
xchg
ret
and
mov
and
inc
pop
fs
orb
lods
push
pop
lcall
cli
sub
add
aas
push
sbb
sub
in
hlt
aam
enter
xor
leave
mov
or
lcall
popf
movsl
roll
idivb
inc
stc
cmp
mov
inc
jmp
mov
mov
sbb
out
ja
cli
lods
push
ret
and
cltd
rorb
cmp
lods
dec
rorl
es
dec
mov
push
sti
sahf
fsubl
fdivrl
sbb
subb
insl
imul
jmp
rolb
xlat
clc
pop
lds
xchg
pop
pop
movsb
mov
test
add
mov
out
imul
sbb
xlat
or
adc
cmp
out
mov
mov
push
fisubrl
and
pop
xorl
ljmp
mov
cwtl
imulb
jp
fwait
pusha
lcall
jecxz
gs
xchg
mov
iret
sbb
mov
xchg
sub
rcr
incl
mov
xchg
mov
sub
outsb
stos
mov
pushf
mov
xor
addl
imul
jge
pushl
pop
das
jp
jmp
mov
pop
adc
jp
repz
outsl
add
shl
ja
popl
aas
jmp
scas
test
shl
adc
push
jmp
repz
testb
sub
roll
sbb
rcll
dec
push
loope
xchg
shr
inc
adc
ror
add
pop
push
push
cltd
addr16
xadd
dec
xor
fcmovnb
mov
int
sbb
mov
push
loope
lcall
pop
fsubl
test
or
sbb
fdivrs
xor
out
cmp
xchg
loope
mov
pop
add
out
lahf
and
aad
loopne
bound
push
adc
mov
repz
pop
imul
testb
jno
lds
sbb
fucomi
out
dec
shlb
mov
inc
push
lahf
mov
sbbb
sbb
das
iret
fisttps
idivb
mov
daa
loope
or
bound
mov
addb
xchg
xor
cmp
pusha
mov
dec
cmp
cld
sub
lret
in
gs
mov
xchg
adc
subl
sub
fwait
push
inc
inc
daa
aas
add
cld
mov
jg
dec
mov
popa
and
jecxz
rclb
cmc
mov
lret
cmpsl
sbb
sub
push
test
nop
mov
loope
test
pop
enter
pusha
mov
sub
push
and
fstps
fucomip
push
fbstp
mov
inc
dec
adc
mov
ljmp
jge
movsl
xchg
mov
fwait
pop
cwtl
push
inc
push
fucomip
ja
test
imul
les
shlb
gs
in
mov
jns
mov
outsl
out
fs
outsl
push
mov
pop
das
adc
push
arpl
xchg
in
mov
je
lcall
ja
and
into
mov
addl
or
addr16
push
or
leave
aam
add
mov
std
push
mov
adc
pop
and
cld
repnz
and
and
push
and
or
pop
add
jno
mov
cld
dec
mov
shlb
add
fwait
rcrb
js
adc
iret
push
and
pop
mov
pop
and
adc
lea
aaa
imul
mov
add
fnsave
aam
pop
fldcw
or
mov
xchg
inc
fstpl
sbb
sub
ds
pop
cmp
mov
pop
push
mov
out
insl
and
adc
and
mov
xchg
push
pop
jbe
in
fs
or
mov
test
std
push
or
aaa
into
xor
mov
xchg
xor
mov
loop
into
cli
inc
xchg
enter
jo
mov
movsb
or
sbb
xor
mov
sbb
cs
fldenv
frstor
adc
enter
xor
insl
push
out
jmp
xor
outsb
inc
outsb
pop
mov
dec
sub
inc
insb
in
mov
aaa
rolb
clc
insl
push
lret
xchg
ss
std
addr16
enter
es
jnp
ja
jle
scas
sub
pusha
lret
pop
pop
inc
sbb
jb
dec
jecxz
inc
call
sarb
inc
leave
jp
int
mov
ret
adc
push
push
notl
and
mov
frstor
and
movsb
xlat
outsl
pop
inc
test
mov
mov
cmpsl
popa
push
xchg
js
bound
mov
mov
inc
lret
sub
int
aas
neg
scas
movsl
pop
or
jo
cmc
lret
out
fbld
xchg
sbb
adc
shrb
or
in
repz
xorl
mov
and
sbb
push
bound
inc
cli
jecxz
xor
push
mov
cmp
arpl
mov
cld
movsl
sub
ljmp
fwait
rclb
popf
insb
rcr
push
mov
loopne
pop
add
pop
out
fwait
jns
data16
setbe
lods
xlat
add
fs
mov
test
jns
and
sbb
inc
mov
jo
loop
pusha
ljmp
stos
mov
test
pop
jmp
test
int3
sub
push
dec
dec
int3
push
pop
xchg
cmpsb
fxch
lret
andb
xor
dec
aaa
xchg
bound
and
jl
imulb
jae
mov
out
es
cmpsb
xor
or
mov
mov
mov
fidivrl
adc
test
xchg
ret
outsb
stos
xor
push
jae
test
inc
je
imul
cmc
mov
add
jb
jl
push
jno
iret
or
data16
and
cwtl
mov
divl
mov
cwtl
aas
mov
adc
mov
push
mov
arpl
cltd
rcrl
popl
testl
jb
ret
mov
and
nop
cwtl
pushf
in
in
sbb
adc
mov
mov
popf
pop
and
or
sbb
jecxz
cmp
or
pop
xlat
or
xchg
xor
test
or
daa
pushf
jg
dec
loopne
iret
inc
cmpsl
add
push
mov
cmp
iret
xchg
cld
sbb
notl
and
pop
out
and
or
mov
cmp
xchg
add
add
mov
aad
scas
out
ja
insb
popl
inc
out
jb
cmp
mov
and
jb
mov
lret
mov
mov
shll
dec
rcrb
pop
lcallw
cmp
xchg
cmc
jmp
dec
imul
sub
xchg
outsb
aas
xlat
mov
das
cwtl
out
in
loopne
iret
pushf
sysenter
lret
jb
pushf
lcall
cltd
xor
out
aam
jecxz
stos
add
test
adc
jmp
mov
adc
cmp
jg
add
push
popa
jge
push
sub
ret
divl
or
sbb
jg
icebp
mov
leave
or
cmp
pop
xchg
mov
popf
std
sar
push
mov
sbb
lcall
lahf
mov
lea
cltd
xor
xchg
dec
movsl
pushf
and
loop
daa
into
or
mov
bound
clc
cmpsb
mov
pop
bound
inc
adc
ljmp
inc
push
sbb
jns
jno
bound
cmp
cmp
int
xor
icebp
lret
sbb
sub
call
pop
pop
pusha
pop
je
sti
and
mov
or
cmp
jmp
mov
and
jmp
jg
dec
subb
ss
mov
out
mov
mov
jmp
and
jbe
jo
mov
hlt
xchg
mov
add
pop
pop
cmpsl
jmp
xchg
stos
scas
jle
popa
jmp
addr16
xor
incb
lea
js
pop
cmp
pushf
xor
pop
push
sub
sub
jle
subl
xchg
fucomp
push
xor
ret
pop
out
jae
push
mov
call
sub
inc
bound
loopne
or
divb
and
jns
pop
sbb
jle
lock
lods
or
sbb
cld
int
lret
dec
clc
pop
cmp
sub
pop
sar
mov
scas
inc
sbb
lcall
mov
cmp
call
cmc
sahf
std
cli
xchg
in
push
pusha
jl
fcompl
test
lods
int
cmp
push
pop
sbb
cmc
mov
test
dec
es
mov
and
add
popa
fiadds
pusha
not
loop
lahf
dec
dec
cmp
addl
mov
insl
divb
mov
mov
push
addr16
fsubrs
mov
ficomps
adc
and
ret
adc
sub
in
scas
xor
fwait
xchg
mov
lcall
rcl
lock
test
add
jbe
aaa
test
and
clc
mov
movsb
push
aad
in
jo
xchg
xor
xchg
cmp
lret
dec
pop
inc
cmp
fcmovnu
in
and
aaa
pop
pusha
das
xchg
subb
cli
test
cmp
pop
pop
sub
scas
inc
ss
sub
adc
lret
xchg
out
or
cmc
nop
loope
ffree
mov
push
rcll
cmpsl
les
sub
xchg
xchg
icebp
in
xchg
into
dec
pop
enter
xchg
andb
sbb
rorb
ficompl
cmpsb
cmp
daa
lret
and
jle
or
cmp
sub
jle
jno
dec
fidivrs
testl
test
jp
xchg
call
xchg
leave
cmp
or
or
lret
add
cs
dec
fstl
jno
cmp
mov
xor
and
icebp
jnp
cmp
and
lods
inc
subb
sbb
js
lar
out
xlat
sbb
shlb
inc
mov
cmc
in
xchg
loope
es
jmp
push
pop
sbb
push
mov
das
movsb
cmp
ret
shll
or
dec
scas
add
lods
or
jnp
mov
pop
cmp
cltd
mov
jge
inc
push
orb
mov
mov
xchg
shll
cmp
int3
jns
orl
inc
icebp
xchg
je
movsl
ja
push
push
scas
mov
stos
mov
rcl
and
cmp
mov
mov
mov
es
mov
js
sbb
fcompl
jns
aaa
mov
imul
int3
mov
push
enter
loopne
fisubrs
or
jnp
aam
test
sbb
aaa
addr16
loope
imul
ret
push
or
jbe
imul
and
lods
sub
dec
mov
dec
cltd
loope
frstor
sub
inc
add
xchg
or
hlt
push
mov
dec
outsb
push
jno
pop
jle
jno
mov
xchg
xchg
add
arpl
xor
sahf
in
movsb
movsb
dec
pusha
xchg
and
jnp
jg
sub
sub
add
nop
inc
jns
inc
mov
adc
test
out
jne
or
xor
sub
test
pop
je
lea
movsb
das
push
lock
cmp
jp
gs
aas
cmovnp
push
add
mov
dec
sbb
jecxz
add
call
inc
or
popf
push
les
jmp
add
lods
ret
or
xor
lds
bound
les
aad
dec
inc
fcmove
pushf
dec
xchg
cmpsb
sbb
filds
lods
xchg
xor
mov
mov
loope
and
cmpsb
pop
aas
add
push
fsubrs
dec
pop
leave
pushf
mov
xchg
mov
sbb
loope
adc
push
dec
dec
sahf
aam
jae
lret
adc
and
xor
jmp
pusha
test
sbbl
dec
daa
data16
dec
insb
xchg
push
or
mov
pusha
cmp
mov
cli
test
mov
stos
ljmp
call
test
sbb
scas
xor
adc
jns
mov
add
push
xchg
aaa
dec
daa
fcompl
movsb
test
lret
inc
mov
jmp
sbb
ljmp
sarb
shlb
adc
mov
inc
mov
movsb
mov
out
push
in
adc
addr16
push
lods
cld
push
mov
test
sarl
into
roll
out
jmp
sti
push
mov
mov
cmpsl
notl
nop
adc
int
aam
outsb
scas
mov
es
in
lods
mov
les
stc
fidivl
adc
push
xchg
sub
imul
in
int
inc
adc
and
inc
or
hlt
push
add
test
and
scas
pop
jnp
xor
cmpsl
adc
pop
xor
popa
cmp
gs
cmpsb
repz
in
lret
jb
out
adc
cwtl
dec
inc
sarl
fxch
iret
into
leave
shlb
cld
dec
subb
inc
push
notb
popf
mov
push
adc
inc
push
fcom
mov
icebp
mov
jl
bnd
lods
mov
cmp
scas
sub
cs
jg
xchg
or
sub
mov
std
sarb
push
adc
pop
int3
ss
pop
jno
cltd
push
or
xchg
icebp
int3
out
std
pop
xchg
or
sub
sti
fimull
punpckhbw
loope
test
xchg
or
jmp
subl
sub
sbb
add
add
push
cmp
cmp
mov
push
mov
loope
adc
push
sbb
jb
cmp
xor
push
in
je
test
movsl
adc
testl
push
rorl
cmp
lds
clc
sahf
cwtl
jae
or
xchg
pushf
mov
cli
test
dec
out
mov
clc
adc
cmp
dec
in
or
dec
inc
test
sbb
xor
xor
ja
pop
pop
xchg
or
inc
scas
pop
test
push
fstl
lahf
add
movsb
sbb
sbb
mov
arpl
xchg
cld
lods
adc
outsb
imul
push
mov
inc
dec
and
jb
les
inc
add
sub
std
mov
xlat
arpl
imul
add
add
daa
mul
mov
push
inc
ret
mov
cwtl
or
add
pusha
cmpsl
pop
jmp
mov
outsl
jns
and
xor
push
cmpl
sub
push
lods
movsl
pop
xchg
dec
cmp
xchg
inc
lds
jae
inc
mov
lods
push
add
add
jns
les
mov
rcrl
lods
sbbb
iret
imull
dec
incb
cli
push
xor
sub
jns
push
stos
outsb
cmpl
mov
sub
shll
dec
push
shlb
ljmp
in
mov
add
mov
aaa
mov
dec
jns
je
adc
sub
pushf
or
jle
imul
lock
and
loopne
ret
les
xor
xor
rcrl
add
xor
sub
out
pushf
call
in
cli
loopne
js
sub
sarl
insl
mov
cli
leave
mov
pop
inc
repnz
ja
in
in
add
sub
lods
test
push
xor
pop
fsubr
rcrl
psrlq
loopne
ret
push
jmp
inc
addr16
fld
sub
pop
pop
fcompl
mov
bound
add
fidivl
mov
sbb
xlat
sbb
cmp
pop
pop
mov
vpsubusw
test
sbbb
ja
shlb
das
add
dec
adc
ss
cs
fisubl
call
addr16
in
mov
movsl
cmp
rol
fstl
mov
mov
mov
lahf
and
add
cmpsb
mov
cmpsb
mov
dec
mov
mov
inc
shrb
mov
stos
adc
xchg
sub
pop
out
es
sub
clc
add
push
mov
cwtl
mov
jo
or
push
fwait
push
jecxz
insl
pop
cmpsl
decl
stos
push
bswap
lcall
out
fiaddl
insl
fists
cmp
push
cmp
mov
shrl
imul
gs
add
int
in
mov
inc
rcll
mov
sub
orb
stos
inc
aaa
add
xchg
pop
daa
mov
pop
lcall
sub
daa
repnz
mov
lret
hlt
dec
mov
mov
dec
mov
repnz
fildll
push
cld
jg
push
push
das
sbb
mov
push
pop
fnstenv
call
pop
les
mov
movsl
sub
pop
les
pop
stos
lcall
mov
pop
add
jbe
dec
or
movsl
shl
movsl
adc
and
sbb
push
sarl
push
into
test
add
neg
inc
dec
push
aam
mov
jbe
push
xor
and
xchg
pop
xor
outsb
inc
xor
test
pop
add
arpl
daa
push
xor
adc
loope
mov
mov
test
inc
mov
mov
pusha
mov
fldenv
sub
jnp
gs
mov
movsb
pop
int3
adc
lods
mov
insl
push
out
dec
std
in
cwtl
inc
cwtl
lods
pushf
fcoms
test
push
mov
push
cltd
adc
test
fnstenv
fs
popf
out
jmp
lret
lods
adc
in
jecxz
stc
idivl
xchg
push
pushf
cmp
or
addr16
out
repz
lods
lret
nop
hlt
adc
mov
mov
into
xor
adc
mov
pop
iret
xchg
push
in
cli
xchg
pop
lods
nop
pushf
loop
adc
cmp
push
inc
push
cmc
inc
flds
into
in
scas
js
xor
ret
into
cmp
cwtl
jecxz
xchg
mov
rorl
call
stos
ja
mov
js
dec
jbe
xor
and
mov
jp
aam
ds
lock
cmc
jbe
gs
xlat
jo
mov
mov
adc
push
std
jge
std
pop
dec
adc
mov
pause
sbb
popa
xchg
cmp
jno
jno
popa
fdivrl
xor
ficoml
out
cld
xchg
jne
add
jno
shr
mov
stos
inc
lahf
sub
jecxz
clc
sub
loope
push
fsts
add
cmp
jmp
fwait
sbb
or
bound
clc
iret
dec
jo
leave
dec
cs
cmc
jbe
push
pop
xchg
or
pop
pop
jb
insl
insb
sub
out
dec
in
sub
cmp
inc
inc
mov
sar
add
loopne
push
xor
cmp
rcrl
mov
pop
addb
imul
sar
notl
mov
ret
sub
xchg
fidivrl
push
dec
and
mov
and
out
mov
gs
in
and
xchg
fildl
lret
cmpsl
invd
jno
or
inc
jns
mov
mov
ficompl
mov
rorl
test
jno
decl
enter
idiv
cmp
dec
inc
mov
rcrl
xchg
inc
enter
jge
jae
push
cld
pop
gs
cmp
xor
jle
sbb
mov
sbb
push
scas
cmpsb
stos
ret
adc
mov
jno
and
inc
dec
in
dec
jo
fidivs
mov
loopne
cmp
aad
sbb
adc
addr16
or
shll
fdivrl
jnp
test
aas
cltd
sub
adc
mov
insl
mov
int
jge
notb
dec
data16
mov
lock
shll
jbe
xchg
jp
mov
cmp
mov
jp
aad
push
sub
outsb
xor
ret
movups
notb
int3
mov
cmc
shlb
push
mov
push
adc
and
sbb
lock
out
movsb
push
lds
mov
or
add
mov
hlt
inc
movsb
xchg
pusha
adc
xor
mov
adc
xor
dec
out
lods
ret
dec
mov
js
add
push
push
stc
les
push
jnp
lods
cld
push
notl
mov
mov
jbe
mov
dec
fdiv
jne
push
cmp
xlat
psrlw
rclb
xor
aas
iret
sti
xor
pop
divl
rorl
add
loopne
fildl
and
jecxz
jg
mov
mov
sub
cmp
sbb
test
scas
out
mov
sarb
outsl
mov
mov
inc
lods
ficoml
dec
push
jle
mov
jnp
lahf
js
mov
enter
inc
int
mov
test
and
pop
jmp
xor
popa
scas
ret
and
sbb
test
mov
cwtl
mov
lods
add
cmp
mov
fs
xchg
movsl
push
xchg
in
lahf
aaa
shl
scas
scas
xor
sub
push
or
imul
cld
scas
xor
adc
add
add
mov
xor
sbb
repnz
and
shrl
and
or
loop
ficoml
xor
ret
repz
xlat
add
sub
aaa
and
int
xor
lret
pop
test
idivl
sti
or
imulb
cmpsl
sbb
into
jge
jnp
scas
dec
pushf
dec
gs
jns
scas
repnz
fimuls
popf
cmp
repnz
add
jecxz
push
shl
sbb
xchg
cmpsb
pop
xchg
mov
out
insb
xor
inc
inc
jle
xchg
cmp
cmpb
sub
or
stos
cmp
lret
sbb
xor
mov
ds
push
or
outsb
loope
div
cmp
aam
mov
cwtl
mov
dec
mov
push
cmp
hlt
popa
push
adc
push
cmp
lcall
or
mov
mov
fsubrs
fs
cmc
sahf
stc
scas
dec
mov
aaa
mov
xor
nop
push
mov
jb
and
inc
cmpsb
ss
and
and
std
movsl
divl
out
mov
test
dec
int
add
stos
or
lcall
cmc
or
jne
pusha
psubd
xchg
aam
dec
out
test
xchg
repz
inc
mov
jnp
fisttpll
outsb
xchg
aam
popf
cmpsb
iret
ret
inc
gs
sbb
std
ja
imull
dec
notl
ljmp
inc
mov
bound
test
adc
popa
or
cmpsl
adc
pop
jge
or
sbb
lds
push
and
mov
lods
or
mov
pop
and
inc
sub
ret
push
loopne
lahf
push
clc
test
xor
mov
pop
dec
mov
dec
jb
jns
xor
mov
iret
cmp
fimuls
xor
aam
jle
pop
sub
shrb
mov
xor
loopne
movsb
test
or
aaa
cli
cli
fdivp
or
fldl2e
insl
cmp
add
shlb
sub
shl
or
iret
fdivp
cmp
in
hlt
fwait
cltd
add
int
jb
bound
inc
testl
push
fxch
movsl
aas
roll
mov
jb
jno
lock
int
sbb
fidivrl
sbbl
inc
adc
dec
adc
add
jo
cmp
add
test
je
push
mov
aas
int
stos
outsl
sub
sub
int3
aad
jno
rorb
xchg
shll
into
dec
jg
pop
test
movlps
and
jne
mov
pop
jle
mov
fcmovnu
loop
xor
shrb
sub
aaa
or
pop
jns
dec
out
pop
loopne
and
jmp
cmpsb
loopne
enter
repz
and
and
mov
mov
aad
stc
and
int3
jne
push
lods
sbbl
outsb
inc
mov
std
push
lea
mov
leave
cmp
push
frstor
mov
repz
enter
pause
outsb
lahf
inc
out
xchg
cmpsb
ljmp
lret
push
in
sub
or
push
outsb
fisttpl
nop
loope
ss
xchg
mov
jecxz,pt
inc
lea
mov
clc
push
xor
repz
ret
and
sbb
mov
arpl
pop
aam
mov
dec
cmp
mov
enter
and
push
dec
pusha
fst
frstor
stc
push
call
xchg
pusha
arpl
pop
pop
and
aaa
push
push
lds
dec
cwtl
outsl
cmc
xlat
jae
test
loopne
in
fstl
stos
lea
push
push
fistpl
leave
fmull
jae
stos
ss
cmp
sbb
xchg
dec
stos
cmpsl
fwait
lret
ss
scas
int
pop
cmp
xor
cmpsl
jmp
push
jnp
push
imul
add
cld
in
addr16
push
fsubrs
imul
jl
adcb
xchg
xchg
or
out
ret
xchg
fdivs
idivb
add
das
jmp
jmp
fists
ficomps
and
stc
pop
movsl
sub
or
inc
mov
loope
xorl
lods
sbb
sbb
push
cmpsl
test
loop
jbe
jne
sbb
aam
sti
and
sub
aaa
daa
cmp
addr16
std
test
add
lcall
aam
shll
adc
mov
dec
dec
xchg
insb
push
shl
dec
sahf
aam
jecxz
rorb
or
mov
sub
and
push
push
xchg
sub
pushf
shld
xor
cmp
call
iret
jbe
inc
mov
adc
push
rorl
out
fwait
cmp
outsb
cmpsl
mov
lods
mov
mov
dec
sbb
mov
or
mov
daa
out
or
flds
jmp
seto
cmp
sahf
push
mov
insb
cmc
inc
xchg
cltd
cmp
sub
fwait
outsb
push
nop
in
mov
push
mov
push
ss
lcall
cmp
in
fwait
mov
mov
ficomps
jb
inc
xlat
lods
popf
xchg
stc
aaa
cmpsl
and
xchg
mov
popa
testb
sti
data16
and
pushf
rcr
jecxz,pt
in
mov
mov
fwait
xchg
adc
dec
push
jnp
lock
fucom
sub
jo
push
or
mov
fistpl
mov
js
cwtl
adc
sub
addr16
or
sarb
sub
dec
hlt
nop
adc
leave
cmpb
std
push
mov
inc
pop
pop
jne
jns
das
sbb
xchg
mov
sub
sub
rolb
sub
jne
out
and
stc
dec
pop
add
sbb
jo
or
and
sbb
stos
movb
leave
adc
mov
mov
xchg
xor
add
clc
insb
mov
sub
mov
mov
push
and
sub
sti
roll
jbe
in
xor
and
out
dec
sahf
imul
sbb
sub
mov
sub
push
lahf
xchg
mov
mov
outsl
lock
daa
mov
int3
xchg
lods
and
xchg
arpl
xchg
fcoms
lock
or
dec
adc
lods
movsb
cmp
subl
pop
std
fcmovnb
pop
xor
leave
js
and
xor
lret
push
jnp
push
cmp
mov
stos
stc
mov
mov
pop
pop
inc
push
lods
mov
inc
test
int
inc
mov
aad
sbb
std
mov
cli
sub
fiadds
sarb
pusha
ret
inc
adc
inc
aad
cmpsb
ss
enter
sbbb
mov
jle
pusha
fists
mov
xchg
pop
push
sbb
daa
mov
in
mov
inc
pop
fidivs
inc
cs
lahf
orl
sbb
bnd
and
aas
cmp
pop
push
mov
cmp
add
sahf
jno
stos
imul
out
scas
lcall
movsl
cmp
aaa
inc
pop
xchg
dec
aas
pushf
inc
sub
cld
sub
aas
daa
scas
jbe
push
cmpb
in
mov
dec
mov
cmp
imulb
cwtl
mov
rcrb
jne
pop
mov
outsl
sbb
ds
test
paddsb
jae
adc
sub
adc
rcrb
xlat
jp
cmp
inc
stc
in
adc
sbb
mov
xor
mov
jbe
lret
cltd
pop
out
cli
pop
and
sahf
jo
dec
outsl
hlt
jb
inc
icebp
fisttps
imul
adc
push
mov
lcall
in
adcl
rolb
in
and
mov
daa
add
dec
popa
mov
fistps
call
loop
adc
rcll
fucomi
cmp
mov
hlt
add
fbstp
ret
adc
pop
inc
call
mulb
jo
push
fsubs
xchg
lahf
jb
xor
inc
dec
or
std
mov
ljmp
jg
push
or
xchg
pop
dec
arpl
stos
dec
jl
fcomps
repnz
test
cli
aaa
ret
mov
enter
pop
inc
mov
cmp
mov
mov
aaa
adc
ds
jns
xorl
cld
and
or
iret
test
gs
dec
or
iret
sbb
mov
inc
dec
push
test
xor
sbb
push
jnp
cmp
mov
mov
leave
jnp
out
xor
push
mov
and
test
sbb
mov
lock
aad
cmpsb
daa
dec
in
sbb
scas
in
scas
ret
or
and
sbb
dec
xchg
iret
mov
add
ret
mov
cli
xor
pusha
fwait
rcl
lcall
shl
cmp
add
push
or
dec
lret
cmp
cmp
into
cmc
fstpt
in
inc
mov
enter
les
bound
es
hlt
cmpsb
ja
fiadds
int3
pop
add
jae
shlb
jle
hlt
fwait
xor
ss
icebp
mov
dec
loopne
jns
cmp
and
mov
mov
iret
cmc
xchg
xlat
inc
ljmp
inc
enter
lret
movsb
and
push
fdivrs
or
adc
or
sti
sub
push
push
dec
inc
jge
mov
lds
test
sub
orb
loopne
xchg
and
loope
add
lds
xchg
stc
or
int
sbb
push
add
lea
pushf
negl
jp
pop
roll
fstps
idivl
mov
xchg
inc
xchg
xchg
mov
push
dec
jnp
lret
jb
mov
aaa
mov
mov
std
inc
pop
icebp
push
or
pop
and
mov
pop
or
mov
or
imul
sbb
xchg
loop
add
loope
xchg
add
pop
push
push
mov
inc
xchg
mov
mov
cli
cmp
adc
jbe
outsl
testb
daa
mov
mov
outsb
cmp
outsb
add
push
fstl
push
jp
aad
aad
insl
mov
push
pop
cmp
dec
pop
dec
jp
ja
aad
icebp
adc
mov
les
enter
sahf
sbb
pusha
hlt
xchg
push
mov
pop
sbb
jge
adcl
frstor
mov
or
imul
mov
hlt
repnz
pop
cmpsl
xlat
jne
sub
clc
cmp
lret
das
pop
and
fisubrs
fstps
shrl
arpl
rcll
std
mov
sbb
ficomps
loope
lods
rcl
mov
or
cli
push
movsl
mov
cmp
data16
call
mov
mov
push
xchg
dec
stc
adc
mov
jno
inc
clc
xchg
inc
inc
jae
dec
pop
movsl
xor
add
push
jns
inc
add
fistl
ficomps
lret
sbb
xchg
or
jecxz
or
sti
adc
pop
cld
sbb
or
push
sahf
std
jae
insl
in
mov
xchg
test
pop
fadds
xor
leave
jl
in
inc
push
xor
push
xorb
jne
jp
xchg
ficoms
mov
push
loop
loopne
sub
or
gs
sub
fs
mov
mov
sub
stc
addl
sahf
xchg
or
sbb
and
cmpsl
bound
and
jae
pop
sub
shlb
mov
jnp
jmp
cltd
mov
dec
xchg
add
mov
es
outsb
gs
push
mov
fistl
lds
scas
imul
add
xor
mov
repnz
mov
jb
and
xor
std
scas
cmpsb
frstor
pop
jl
xor
movsb
pop
mov
lods
mov
popf
enter
sbb
out
fiaddl
sar
xlat
call
mov
pop
mov
adc
sahf
int3
mov
insb
ss
sti
movb
fisubrs
fcmove
and
popf
add
mov
pop
lret
mov
sar
mov
mov
dec
js
loopne
adc
sti
jno
sbb
and
je
std
addl
pop
push
outsb
sbb
xchg
cmp
or
xchg
cmp
add
mov
ficomps
fdiv
fcomi
mov
in
lcall
aaa
mov
movsb
sub
outsb
nop
nop
dec
std
or
ljmp
in
stc
mov
cmp
daa
pop
dec
push
dec
insb
push
xchg
pop
call
mov
dec
roll
adc
popf
xor
sub
add
fmull
mov
push
adcb
scas
add
inc
sbb
popf
push
ret
sub
add
dec
and
fs
add
add
mov
cmc
add
xchg
sub
mov
sarl
dec
icebp
test
xchg
mov
mov
scas
pop
popa
addr16
mov
jnp
and
ss
clc
ret
dec
repz
cmpb
insl
hlt
push
add
outsl
sub
addr16
xchg
aas
or
dec
xor
mov
aas
loop
out
ljmp
into
jo
in
xor
xor
es
sub
mov
inc
sub
sub
push
sbb
mov
add
xchg
int
push
ds
cwtl
or
fldz
in
adc
mov
sbb
inc
cmpsl
icebp
fisubs
out
sti
into
popf
jl
popf
mov
add
cmpsb
cmp
xchg
shl
outsb
add
xor
out
std
push
loopne
popa
loope
push
jns
jo
and
enter
addb
cmp
cs
mov
shrb
addl
adc
jmp
aad
flds
shrl
aam
pop
in
shl
outsb
insl
pushf
leave
fwait
and
sbb
xor
mov
cmp
cs
shlb
xlat
aaa
aad
das
inc
arpl
out
pop
hlt
fbld
mov
cld
sahf
rcll
lcall
dec
lds
xchg
sarb
sbb
xor
int
and
jb
mov
sbb
cmp
loopne
outsb
imul
mov
and
lods
cmc
loop
mov
jb
mov
icebp
fs
sti
cmpsb
pop
lock
loopne
sbb
in
push
leave
lea
pusha
xchg
dec
cld
aaa
inc
mov
lret
push
cmp
stc
push
cmp
ja
jo
aas
iret
xchg
repnz
mov
cmp
fs
add
stos
mulb
les
add
aaa
xor
adc
xor
data16
rol
les
pusha
add
or
outsb
popf
cmp
dec
shl
jecxz,pt
clc
jecxz
lods
loop
xor
jbe
in
xchg
scas
lea
jnp
pusha
iret
mov
sub
call
fbld
out
mov
cmp
leave
inc
sub
arpl
pop
mov
je
aam
cmpsl
xchg
xchg
mov
mov
sbb
cmc
stos
adc
pop
imulb
sbb
js
mov
cs
cmpsb
loop
mov
test
xchg
jo
test
shlb
inc
adc
or
dec
xchg
mov
dec
ds
and
push
mov
and
mov
jns
cmpl
jne
xor
xor
in
outsb
and
jbe
mov
mov
jg
repnz
subb
loope
movsb
call
js
test
push
jne
push
push
adc
pop
mov
icebp
jbe
sbb
lock
dec
loopne
jo
mov
sahf
sub
adc
pop
or
sahf
data16
addl
cli
int
add
cmp
dec
sbb
sbb
mov
jns
mov
movsl
adc
das
inc
push
dec
dec
jne
and
fsubrs
hlt
fwait
jne
push
int3
nop
jo
int3
or
ds
or
imul
hlt
in
rolb
ljmp
mov
pop
mov
xchg
pusha
mulb
inc
dec
loopne
xor
ret
push
test
push
xor
lods
sbb
dec
clc
cmpsb
jmp
fcoms
add
cltd
pushf
lret
in
mov
inc
das
adc
inc
or
sbb
dec
sahf
jns
pushf
push
shrl
cmp
add
mov
ret
test
sbb
mov
adc
les
aam
adc
popa
ds
mov
dec
imul
mov
lods
xchg
mov
mov
cmpsb
popf
pop
bound
das
js
fwait
xor
stos
aaa
std
outsl
sub
jne
mov
mov
mov
cmp
stos
push
or
push
fsubr
dec
and
lret
rorb
mov
stos
data16
dec
and
in
dec
pop
cmpsl
fsubrs
pop
fmul
into
hlt
add
inc
and
aad
lret
mull
bnd
push
add
cmp
in
cmc
testl
xor
negb
push
int3
cmpsb
leave
adc
lcall
test
push
and
xchg
mov
xchg
adc
push
lds
mov
ret
sbb
push
fdivs
es
add
push
rcrb
mov
scas
mov
imul
fwait
and
dec
cmp
mov
stos
or
jge
test
inc
mov
xchg
xchg
bswap
mov
fcomi
mov
or
xor
jne
jge
in
push
cmp
les
or
lods
sti
push
lock
inc
faddl
faddp
addb
testb
push
mov
mov
xchg
mov
fsubrs
mov
decl
fisubl
pop
mov
push
test
inc
pop
icebp
les
dec
jl
cmpsl
push
dec
rorl
sbb
imul
rcrl
pushf
add
add
addl
jle
ja
sar
push
call
xchg
pop
jecxz
mov
sbb
inc
mov
mov
push
out
scas
inc
inc
push
jae
jge
icebp
enter
adc
xor
adc
push
xor
pop
xchg
mov
inc
in
dec
dec
ret
test
ficomps
jp
ds
sahf
call
jge
sbb
lock
setg
roll
or
lock
jp
repz
push
out
sub
outsl
dec
inc
mov
jbe
cmp
jnp
cs
mov
jnp
lods
push
aad
lock
scas
mov
imul
jns
push
ss
ljmp
dec
mov
xchg
xchg
dec
cwtl
xor
pop
je
and
sub
cmp
mov
xchg
cwtl
leave
jno
push
xor
dec
pop
cmp
lahf
in
lahf
enter
adc
lahf
loop
stc
push
aas
cmp
pop
jns
xor
mov
gs
rcll
jns
aaa
loopne
and
add
clc
inc
ja,pt
and
xor
testl
xchg
std
outsl
mov
out
adc
f2xm1
mov
xchg
add
mov
cmpsb
fnsave
mov
sbb
pop
adc
cli
and
or
shlb
sub
xor
shll
xchg
fsubrl
mov
scas
out
mov
loopne
sbb
xor
push
rcrb
stc
std
incl
inc
shlb
add
dec
jns
jb
and
pop
or
pop
xchg
pusha
ja
and
call
cmp
shlb
insb
push
push
cmp
sub
dec
jp
test
pop
test
popf
imul
mov
int3
sub
sub
jo
rcr
mov
jl
mov
je
add
fiaddl
pop
jle
shrl
adc
adc
inc
ja
pop
es
fstpt
add
inc
popf
jge
sahf
push
and
icebp
out
ljmp
int
leave
add
dec
sub
mov
push
sub
dec
leave
dec
jb
jbe
insl
adc
iret
cld
pop
pusha
je
insb
test
je
adc
pop
ss
xchg
out
test
sbb
xor
mov
cmp
push
in
mov
fsubrs
rorb
dec
and
call
rolb
es
jmp
ja
push
jb
sahf
ficoml
mov
dec
mov
je
scas
out
stc
adc
inc
xor
bound
mov
clc
fmull
pop
or
sarl
mov
in
lds
out
insl
inc
xor
mov
cmp
ffreep
mov
xchg
leave
movsl
jnp
icebp
inc
shll
loop
inc
lods
sahf
imul
pop
in
dec
fistpll
das
cmp
shlb
dec
ja
ja
xchg
mov
call
jmp
mov
pusha
mov
clc
outsb
movsl
xchg
xchg
mov
lods
hlt
pop
arpl
popf
scas
xlat
mov
xchg
and
lret
sub
push
loopne
jl
or
mov
push
adc
add
fwait
pop
shl
int3
adc
and
sub
sbb
repz
not
push
adc
adc
sub
imulb
mov
int
punpcklbw
clc
and
jbe
inc
loope
fisttpl
jo
and
and
lret
cmp
pop
sbb
cmp
in
enter
mov
adc
inc
mov
jb
leave
sahf
ret
dec
mov
cmpsl
push
mov
ret
jbe
insl
cmp
xor
in
cmpsl
xchg
xchg
or
push
or
shl
inc
xlat
and
outsb
sbb
arpl
aam
jge
in
lahf
sarl
sub
jo
iret
push
jmp
fs
mov
int
or
cltd
scas
pop
aad
mov
inc
push
xchg
movsl
mov
add
and
and
dec
lods
out
jmp
popa
arpl
push
imul
jmp
mov
mov
inc
mov
add
fwait
sub
mov
fistpl
push
fsubl
repz
sub
fdivrs
add
adc
xchg
pop
push
pop
out
inc
add
fwait
pop
loope
cmp
jl
push
insl
outsb
in
mov
cmpsl
rcrb
movsb
add
daa
fsubrs
pop
jo
pop
fs
dec
sub
mul
cmp
jmp
inc
xchg
test
test
pop
adc
sbb
dec
jecxz
ret
shlb
push
jp
sbb
cs
sahf
cmp
in
push
cli
inc
repz
fnstcw
or
leave
mov
or
xchg
jno
xchg
les
jbe
inc
fisubs
lock
add
mov
adc
pop
lret
mov
sbb
movsb
or
pop
stos
mov
movsl
mov
or
push
cmpw
es
nop
ds
in
jno
js
dec
fcompl
push
pushf
mov
mov
inc
xchg
or
sbb
inc
and
jmp
or
js
or
clc
lret
test
or
sub
repz
dec
push
pushf
mov
bound
mov
int
mov
sbb
jne
mov
gs
icebp
test
mov
jmp
mov
clc
or
pop
popf
int3
mov
mull
push
fidivrs
mov
mov
loop
outsl
lock
je
aas
cmp
call
xchg
push
sarb
push
pop
push
fsubrl
popf
mov
jp
addr16
std
jb
add
mov
jnp
sbb
inc
roll
mov
scas
fsubl
jbe
push
dec
sub
mov
fldcw
inc
fs
xchg
das
popa
cltd
fucomi
xor
rclb
adc
mov
lcall
sub
jmp
xchg
sub
je
mov
stos
fwait
incl
scas
sbb
cmp
decb
and
add
ret
jo
rorl
cmovbe
ljmp
pop
cli
clc
repnz
movsb
sbb
push
mov
mov
adc
ljmp
xor
sub
daa
ret
popa
sub
xchg
pop
cmpsb
and
imul
jo
ret
call
in
mov
mov
in
and
cmpsb
or
cmp
push
lahf
repz
and
loop
sub
mov
and
shl
pop
ret
fs
push
lahf
pop
int3
dec
test
jmp
movb
sbb
inc
divl
add
xor
fsubrs
fistl
push
xor
pop
out
dec
lahf
jne
mov
jne
cmp
in
in
out
jbe
jno
push
aad
test
pop
lahf
mov
xchg
cmp
xor
pop
pop
xchg
xchg
fs
xchg
repz
lods
jecxz
or
cwtl
or
clc
insl
push
pusha
adcb
stos
movsl
dec
mov
insl
fiadds
lret
das
dec
lods
fldt
mov
daa
jg
jmp
xor
push
movsb
mov
push
arpl
mov
xor
rclb
hlt
in
fsubrl
imul
or
mov
out
mov
pushf
mov
shr
jmp
jl
decl
cmp
xchg
or
pop
je
in
shlb
mov
add
ret
adc
xor
popf
jp
jbe
mov
and
in
lds
push
lret
mov
sbb
out
idivl
addr16
sarl
jb
pop
mov
out
sbb
adc
fpatan
inc
sub
and
in
mov
dec
into
inc
cmp
es
aas
mov
cli
mov
adc
cmc
adc
es
test
push
mov
push
adc
sub
cmp
sbb
push
das
sub
push
jge
das
adc
mov
mov
mov
shll
les
sbb
push
sbb
or
into
dec
jbe
inc
xor
das
mov
adc
sbb
sbb
adc
pop
andl
lods
aaa
rolb
push
imul
imul
in
xchg
fs
cmp
bound
test
aas
aaa
mov
bound
mov
ljmp
mov
cltd
ror
in
ret
pop
pop
out
gs
xchg
push
pop
push
pop
lret
imul
sbb
data16
pop
push
out
pushf
leave
add
pushf
mov
jno
jle
jmp
inc
loope
or
pop
add
xchg
in
imul
out
rorl
int
or
or
ss
xlat
sbb
popa
add
push
repz
les
mov
or
in
lds
mov
inc
lds
push
jg
test
and
and
mov
push
movsb
xchg
push
flds
xor
xchg
fs
ds
pop
cmp
push
sbb
call
mov
jb
testl
pusha
mov
sar
fisttpll
pop
inc
repz
test
xor
fcomi
mov
mov
pop
js
mov
les
mov
int
aam
jae
cli
stos
popa
jg
and
push
or
adc
fdivrs
loop
sub
movb
mov
loopne
mov
xchg
test
mov
or
mov
pop
pop
add
adc
cmpsl
test
ljmp
push
pop
mov
ljmp
add
mov
aad
or
nop
aam
sub
fists
pop
jle
in
add
leave
xor
pop
cmp
jne
mov
out
or
xchg
sbb
sbb
pop
ja
stos
aas
andl
sbb
cltd
jp
mov
mov
fimull
shll
pop
mov
xor
cmc
sbb
faddp
movsl
add
jnp
sarb
push
jmp
push
popf
dec
dec
stos
adc
and
and
imull
push
xchg
roll
or
je
lods
fcomip
jmp
das
scas
imul
mov
popf
or
pop
xchg
lahf
jge
or
pop
mull
jl
push
addr16
cld
pop
in
data16
cli
loope
lcall
cmpsb
push
or
mov
or
dec
push
pop
lock
adc
je
cmp
push
xor
mov
stos
clc
scas
inc
and
push
sbb
or
jnp
mov
jle
clc
daa
nopl
aam
aam
scas
dec
mov
leave
sub
jns
test
or
dec
ss
mov
mulb
mov
inc
in
stos
icebp
push
fisubrl
rclb
sub
lds
mov
mov
pop
jge
les
adc
repnz
jb
xor
ret
mov
test
lahf
cmp
and
mov
jmp
insb
iret
cmpsb
scas
mov
out
cli
inc
sbb
bound
dec
sahf
imul
aam
cmp
into
loopne
pop
test
push
xlat
inc
mov
push
cs
ljmp
fistpll
ret
bound
mov
fmuls
xchg
das
rcr
hlt
push
jnp
leave
mov
popf
pop
fcoml
scas
loop
lds
ljmp
inc
mov
jbe
fmull
xchg
mov
sub
or
push
mov
cmp
inc
inc
dec
inc
les
xchg
mov
nop
jecxz
cltd
pop
in
pop
ds
mov
je
fbstp
or
int3
loopne
lods
ret
lea
cmp
and
outsb
out
sbb
adc
jae
ljmp
push
add
jge
mov
cmp
in
in
out
jl
nop
call
jbe
mov
test
xor
sbb
sbb
popf
add
aas
rol
movsb
sub
jae
push
setnp
loope
inc
sbb
aaa
daa
and
push
push
inc
and
inc
cwtl
pop
add
xor
push
icebp
xor
push
push
dec
bts
xor
mov
sub
ficompl
dec
roll
out
and
mov
sbb
mov
fsubl
pop
push
rcl
cld
cwtl
aas
jnp
mov
dec
call
lods
test
addr16
sub
and
stc
xor
ljmp
sub
adc
in
pop
sbb
mov
cmp
fildl
out
and
popf
cwtl
rorb
in
mov
fwait
daa
mov
frstor
out
sbb
leave
stos
mov
add
in
or
pop
mov
shlb
nop
cmpb
pushl
fsts
or
js
fildll
movsl
mov
pop
xchg
mov
inc
xchg
xor
push
dec
lods
das
add
repnz
pop
push
xor
or
and
mov
lret
fucomip
loopne
and
jmp
daa
lret
adc
cli
push
cwtl
aad
xor
xchg
adc
fsubrs
rorl
lds
dec
enter
fwait
add
into
mov
sub
test
sbb
or
dec
les
div
push
in
jnp
iret
xchg
es
pop
xchg
xor
push
mul
jne
jl
mov
test
ret
in
or
out
imul
cwtl
or
push
or
daa
cmp
xchg
dec
pop
mov
or
pop
ds
test
or
loope
adc
xchg
fwait
dec
jo
notb
cmp
mov
insb
fiadds
mov
loopne
or
scas
push
in
adc
ret
stos
sbb
test
adc
aad
pop
xchg
jb
add
sub
cmc
push
sbb
les
lret
ficoms
and
jno
cmpsb
pop
cld
ja
in
jmp
adc
xchg
lahf
cltd
aam
aas
test
ljmp
cmp
rcr
stos
repnz
imul
mov
jmp
pop
jb
xchg
movsb
jb
sub
and
or
sbb
push
dec
loope
test
xchg
xlat
stos
pop
nop
xor
mov
lock
in
cmp
sahf
lahf
ret
cmc
stos
mov
or
cmpsb
movsb
fwait
or
dec
xchg
sub
push
dec
mov
iret
cmpsl
je
push
mov
fsub
or
jnp
je
sbb
out
leave
jbe
sbb
sti
xchg
and
push
shl
push
jmp
pop
imul
pushf
movsb
out
sbb
testb
mov
sub
ret
iret
or
xchg
fidivrs
adc
neg
xchg
inc
and
popa
push
pop
cli
push
mov
repz
and
push
cli
jg
lcall
cmpsb
shll
adc
aaa
cwtl
or
mov
clc
mov
pop
in
je
ss
xchg
insl
mov
xor
adc
call
sti
aas
dec
loopne
movsl
pusha
cwtl
test
imul
pushf
mov
jmp
call
out
gs
add
pop
insb
xchg
jb
pop
mov
out
mov
adc
push
movl
push
rolb
mov
in
hlt
out
sub
push
dec
adc
jecxz
test
xor
arpl
lock
movsl
add
xorl
pushf
push
and
ret
jns
xchg
ja
loopne
cmp
loope
xor
mov
lcall
sahf
lcall
adc
xor
js,pn
in
or
inc
out
mov
sub
loope
sbb
push
in
xchg
dec
nop
adc
dec
insb
aam
pop
mov
bound
sti
add
enter
arpl
mov
popa
mov
mov
daa
movsl
mov
mov
lods
bound
fmul
push
dec
mov
add
fmulp
mov
sbb
mov
inc
cmp
mov
arpl
dec
push
sub
testl
push
cmpsl
dec
lcall
xchg
cmpsb
repz
jno
add
aam
xor
mov
dec
xor
mov
mov
xor
mov
lret
and
inc
fsts
imulb
add
aaa
shlb
incl
cltd
lret
pop
outsl
sub
cmp
adc
and
cltd
push
inc
cmp
loop
jb
fsub
cmp
dec
in
fcmovu
test
movsl
cs
push
es
sub
mov
ret
cmp
add
and
popa
fstl
pop
in
fs
scas
jp
sub
outsb
mov
push
lcall
lcall
mov
cmp
dec
andb
call
rorl
xchg
sysexit
dec
jmp
in
pop
push
add
popf
loopne
test
jecxz
mov
cmpb
in
lock
sbb
push
leave
jns
xor
hlt
mov
movsb
adc
adc
pop
mov
cli
imul
adc
nop
add
out
and
outsl
mov
add
mov
int3
xchg
jl
adc
jae
jo
dec
inc
cmp
into
into
fsubr
push
sub
loop
push
xchg
dec
popf
fmull
or
add
fildl
adc
lea
ss
sbb
xlat
jecxz
sub
cmp
mov
bound
mov
push
add
sub
lea
repz
aas
shll
cmp
pushf
popa
cmpsl
push
scas
xor
ljmp
mov
sbb
jne
leave
lds
sbb
xor
fmull
pop
xor
sub
outsl
push
sub
cld
jge
add
negl
fucomip
add
nop
sub
arpl
fdivl
lahf
sti
gs
pop
aad
leave
lds
pop
mov
mov
xor
jb
aam
push
enter
and
mov
cmp
xchg
inc
push
add
sub
adc
push
je
and
jnp
enter
rol
mov
mov
xchg
popl
mov
sbb
loop
mov
orl
popf
jmp
movb
sbb
sbb
push
lcall
or
cli
loop
mov
jle
aas
and
cmp
dec
pop
dec
in
outsb
mov
and
or
jo
aaa
enter
add
dec
jl
mov
mov
sub
cli
arpl
push
test
clc
iret
rcll
cmp
sbb
xorl
ret
xchg
sbb
mov
clc
push
sub
test
outsl
push
push
mov
lahf
in
mov
or
push
lea
dec
fildl
xlat
sub
pop
ss
inc
stos
inc
jne
add
movaps
xor
in
push
push
mov
sub
mov
or
icebp
out
mov
decl
mov
std
dec
and
jae
jp
cmp
xor
filds
fwait
jno
xor
lea
fidivrl
or
push
push
insb
nop
cltd
push
sub
dec
addr16
out
sub
xor
scas
dec
sahf
sti
mov
sbb
inc
int3
push
popa
add
push
lods
shlb
pop
dec
outsb
hlt
int3
xchg
pusha
pop
out
ljmp
movsb
lods
gs
xor
push
mov
nop
and
pslld
or
and
lahf
dec
outsb
cwtl
inc
rcrb
and
rcl
loopne
stos
pop
imul
jmp
sub
and
lcall
test
lahf
stc
jo
dec
and
andl
xor
inc
les
loopne
push
xchg
mov
push
sbb
test
je
sbb
into
mov
fwait
pop
insb
xor
ret
scas
inc
mov
int
icebp
int3
and
dec
setge
push
inc
dec
xchg
mov
loope
das
pop
pop
xlat
lahf
jecxz
xchg
outsb
loopne
test
push
gs
js
lods
ds
mov
insl
in
add
add
mov
xor
rol
mov
push
or
cld
je
test
mov
push
lahf
add
cltd
dec
push
lods
out
pop
scas
js
pop
and
cmpsl
in
mov
adc
mov
and
jp
jmp
hlt
in
les
jmp
out
ljmp
sbb
inc
rorl
inc
or
mov
sbb
adc
mov
pusha
sahf
add
xchg
insb
int
xchg
ret
test
sti
jmp
pop
aad
sbb
push
jmp
gs
addr16
fistps
dec
lcall
add
pop
xchg
and
mov
popl
call
shl
ret
xchg
in
sbb
iret
and
cs
inc
mov
lret
lods
cmp
into
or
fldt
fisttps
mov
push
jp
inc
test
mov
inc
stos
mov
add
inc
inc
fidivrl
push
icebp
jne
lock
inc
pop
sbb
repz
mov
jo
xor
subb
cmp
mov
add
or
push
add
movb
push
mov
mov
xor
out
jne
fistpl
or
pop
call
inc
test
mov
fists
pop
addr16
dec
out
dec
cmp
and
or
push
inc
push
std
mov
je
push
gs
out
jns
mov
insl
lahf
mov
and
aas
daa
sbb
ret
int3
add
ljmp
and
in
cmp
or
mov
test
aas
mov
xchg
xor
xchg
sbbl
cmp
insl
insb
mull
bound
mov
cwtl
aaa
stos
ljmp
push
xor
or
mov
mov
clc
inc
xchg
scas
dec
clc
jecxz
test
sub
and
adc
xchg
pop
and
dec
push
dec
adc
mov
jecxz
lret
ss
push
or
test
push
std
push
popl
push
lock
scas
rcl
movsb
out
xchg
xchg
test
lret
adc
lret
mov
shlb
addr16
insl
sub
and
cmp
push
sub
or
aas
sub
arpl
adc
xor
mov
adc
sarb
sub
mov
inc
loop
popa
jb
cmp
sti
popa
enter
inc
hlt
sub
filds
ret
push
popa
rcrl
push
lahf
cmpl
ja
fildll
cmp
and
xor
and
mov
mov
out
cmpsb
out
dec
mov
mov
mov
scas
mov
adc
push
pop
mov
nop
fninit
xor
jecxz
in
imul
sub
imul
mov
cmp
es
jo
sub
ljmp
mov
cmc
in
cmp
inc
mov
lret
xchg
repnz
cmp
pop
xor
pop
jae
mov
cld
cwtl
inc
pop
mov
sbb
push
jmp
xchg
mov
in
mov
pop
push
fidivrl
imull
jl
cmp
and
loop
std
xor
icebp
outsb
mov
hlt
add
outsl
outsb
insb
out
int
cwtl
inc
mov
xchg
test
push
jecxz
cmp
lods
sub
or
and
and
jl
leave
and
insb
jmp
sbb
in
add
jnp
lods
jnp
test
test
and
jmp
xor
and
xchg
xor
stos
jno
aam
pop
cmp
adc
pop
inc
mov
sub
aas
aaa
popa
dec
xchg
add
add
test
test
imul
mov
inc
pusha
daa
pop
subl
adc
mov
mov
jg
lods
repz
subl
add
cmpb
dec
fsts
push
cs
or
push
hlt
into
inc
push
xorb
pop
add
fisubl
das
cmp
jg
pop
and
jmp
mov
aaa
cmp
test
sub
jecxz
dec
lcall
push
sahf
mov
jo
mov
gs
hlt
cli
cmp
out
push
pop
out
jns
insb
cld
stc
pop
cmp
out
cmp
ret
lock
imul
sar
or
rcrb
cmpsl
push
dec
xor
xor
loop
lds
pop
bound
mov
sub
mov
mov
cli
sar
lahf
mov
cmc
test
jo
jne
sbb
jp
xchg
cmp
aaa
push
loop
sub
jno
fiaddl
adc
cmp
fisttpll
push
aad
mov
cmc
push
ss
inc
test
pop
jmp
ss
add
and
gs
scas
xchg
adc
shl
mov
es
pop
pop
ja
enter
inc
push
push
jl
pop
mov
shll
or
sbbl
das
jl
cli
in
jmp
add
insl
int
mov
mov
lds
mov
shlb
aad
mov
fsts
or
mov
mov
sahf
lcall
lret
mov
lods
mov
sub
pop
pushf
dec
rcrb
mov
mov
push
leave
imul
cmp
and
pushf
mov
lds
mov
lds
push
inc
aam
sbb
data16
inc
test
or
adc
int3
dec
iret
loope
or
push
mov
xchg
repz
fxch
xchg
mov
dec
push
adc
pop
insb
subl
test
cmp
mov
lahf
mov
dec
add
inc
iret
or
push
loope
arpl
cmpsl
jp
xchg
add
and
cmc
jb
adc
repz
add
inc
cmpsb
push
nop
dec
int3
pop
test
push
enter
add
out
lret
inc
xor
push
cmp
rorb
inc
sub
pushf
inc
cs
fisubrl
in
cmp
sub
cld
ret
adc
mov
fmuls
lds
pop
lods
cmp
dec
dec
mov
mov
mov
test
loop
cmp
push
mov
xor
lods
or
ret
or
scas
mov
jecxz
mov
jb
aaa
cwtl
mov
jo
pop
fwait
push
das
fdiv
xchg
cmp
push
add
icebp
clc
flds
aaa
and
jb
adc
aaa
ss
jl
xor
leave
push
pop
iret
push
xor
fcmovu
mov
mov
scas
sbb
sti
sub
mov
xor
lret
stc
xor
arpl
popa
xchg
add
test
aam
repnz
cmp
mov
inc
jle
inc
xor
ficoms
inc
adc
repz
sbb
push
clc
nop
imul
loop
mov
stc
fcmovnbe
lcall
gs
ret
xor
sarl
pop
dec
xor
in
xor
outsb
mov
sbb
inc
xchg
xchg
fwait
mov
cmp
test
test
je
mov
jo
cmp
pop
jae
les
dec
sbb
inc
negb
lock
cmp
sub
cmpsb
xchg
push
inc
outsb
xchg
fs
sbb
add
sbb
fwait
jle
inc
aas
in
lahf
pop
je
ljmp
and
sbb
inc
or
mov
aas
sbb
sub
inc
aad
jnp
andl
fisttpl
fmuls
out
push
push
dec
loopne
mov
mov
ja
adc
cmp
ss
inc
mov
pop
push
mov
popa
xor
ljmp
daa
rorb
add
ret
test
sub
mov
lea
rcrb
push
loop
insb
dec
fstp
lods
stc
pushf
scas
cmp
sub
jo
sub
addr16
add
pop
aad
bound
sbb
pop
js
jo
cltd
push
shlb
aaa
adc
sbb
mov
inc
loope
add
cmp
mov
sbb
lock
lods
ds
repnz
cmp
shl
lret
pop
mov
jmp
imul
iret
jecxz
inc
in
lret
repnz
push
sbbl
mov
xchg
mov
movsb
adc
shrl
adc
fsts
pusha
inc
mov
out
pop
jp
out
dec
adc
movsb
sbb
loop
stc
jb
inc
aas
aad
mov
sbb
jno
mov
sbb
xor
arpl
into
ljmp
jecxz
mov
insb
out
fisubs
repz
mov
popf
test
nop
xchg
mov
sar
xchg
and
scas
pop
cmp
fs
loopne
mov
and
out
pop
mov
adc
subl
sbb
jne
bound
subl
loope
push
cmp
lods
mov
bnd
ds
xor
jo
push
or
aam
push
mov
mov
sbb
pop
sbb
movsb
push
aam
mov
popa
test
jmp
push
jae
mov
pop
js
xchg
jmp
jns
out
cmc
jp
mov
add
and
jbe
fldl
lea
xchg
xorl
sbb
cmp
out
out
test
add
es
data16
jl
ds
ds
out
inc
mov
jmp
mov
cltd
jmp
test
add
sub
sahf
add
xchg
rcl
mov
mov
data16
mov
xchg
adc
sub
jae
pop
mov
inc
mov
cmp
push
mov
loop
xlat
mov
dec
xchg
cltd
sbb
insb
rcrb
enter
jns
insl
jge
push
cmpsl
inc
xchg
adc
jge
sbb
cs
scas
lds
loop
pushw
leave
arpl
cltd
add
das
dec
mov
pop
popf
sbb
icebp
fcmovne
lock
and
mov
sub
mov
loop
add
xchg
filds
aaa
cmp
dec
out
cmp
fnstcw
and
pop
mov
push
stos
in
xor
fcompl
sbb
std
xchg
lds
leave
stos
das
out
dec
mov
mov
pop
in
sarl
in
xchg
shlb
jnp
movb
sub
or
xchg
adc
sub
pop
mov
mov
jecxz
cmp
mov
sbb
cmpsl
mov
or
ja
mov
and
repz
mov
sbb
sub
repz
hlt
sbb
push
mov
and
out
lods
rorb
ret
cld
jl
popf
jecxz
jmp
bswap
sbb
je
int3
fistpl
or
pop
out
pop
movsb
cmpsl
addr16
mov
mov
jle
lds
fldz
and
movsb
xchg
sub
pop
mov
mov
stc
add
and
mov
into
pop
leave
pop
sti
pop
push
push
insb
mov
pushf
mov
mov
xor
icebp
mov
out
aaa
jnp
lfs
pop
mov
scas
cltd
sahf
ret
clc
xor
jne
das
push
or
xchg
sbb
push
inc
cmp
dec
in
add
ret
mov
mov
cltd
scas
mov
dec
push
fimuls
in
push
pusha
cmc
mov
sbb
out
mov
jge
inc
xchg
xchg
jmp
dec
int
cmc
or
cmpsl
pop
mov
jle
mov
lods
loop
pop
pusha
shlb
push
lret
xchg
ss
dec
and
mov
lret
or
xchg
daa
ret
es
enter
pop
mov
cltd
sub
add
test
loopne
ret
jbe
hlt
push
dec
jne
hlt
lret
call
outsl
fisttpl
dec
mov
nop
mov
xor
and
jne
mov
hlt
jp
pop
insb
pop
fdivrs
push
sub
loopne
stos
sbbb
or
mov
test
in
imulb
mov
fsts
test
mov
adc
fnstenv
add
jbe
negb
outsl
jne
adc
mov
sbb
outsl
or
roll
sbb
jmp
cwtl
pop
ja
and
cld
sbb
jo
push
mov
push
jp
and
xchg
pop
mov
or
pop
mov
mov
call
pop
inc
mov
jle
aad
lcall
stos
ss
ficompl
jg
fs
xor
sub
into
int3
and
inc
mov
cli
jmp
push
daa
test
insl
enter
push
test
imul
pop
adc
jl
xchg
data16
daa
push
inc
sub
jmp
rcr
push
dec
mov
stc
mov
sub
hlt
cmp
jae
pop
mov
movsb
inc
cmpsl
into
dec
dec
gs
sbb
adc
mov
aaa
hlt
inc
and
sbb
cltd
pusha
jge
xor
and
out
lret
mov
rorb
ss
cmc
xchg
fldenv
ret
adc
xor
pusha
xor
dec
inc
push
leave
and
push
mov
sub
jns
jae
mov
mov
add
mov
std
call
sub
outsb
bnd
or
test
out
fcomp
mov
and
pop
push
push
xchg
call
loope
inc
xchg
not
lret
mov
sarb
jmp
clc
lea
fsts
fnstcw
mov
scas
jl
mov
and
push
into
pop
push
test
mov
adc
push
fmuls
fistpl
pusha
fadds
cmp
aad
dec
ret
addr16
and
outsl
mov
cltd
outsb
sub
xchg
mov
mov
fs
sbb
call
adc
or
stos
jge
jae
shl
fimuls
cmpsb
cmp
data16
inc
jle
outsl
shl
jnp
pop
aas
sbb
jle
fidivl
std
mov
aas
or
xchg
out
or
loopne
jae
cmpsb
or
aad
in
add
jle
insb
outsl
or
dec
sbb
lods
lods
adc
aas
mov
push
sbb
inc
xor
cltd
mov
jno
push
add
fisubs
jmp
lea
jmp
lret
test
lret
sarl
sub
leave
or
je
jge
imul
bound
sub
or
lea
mov
cltd
test
mov
out
outsw
mov
or
mov
xchg
mov
insb
js
mov
je
xlat
mov
ret
inc
xor
je
shll
fldenv
mov
ret
test
popf
stos
nop
and
insb
push
add
test
add
mov
lret
jle
mov
inc
lea
in
in
xchg
into
hlt
jge
pop
inc
testl
mov
jne
icebp
pop
es
ljmp
mov
inc
cmpsl
inc
adc
loop
jns
add
dec
adc
mov
iret
leave
mov
mov
jnp
pusha
mov
in
arpl
enter
fldt
nop
out
lea
cmpsb
and
fldenv
mov
pushl
pop
xchg
add
cmpsl
mov
aad
iret
push
pop
mov
xchg
sahf
sub
sub
sub
fs
int
mov
cwtl
stos
push
inc
popa
push
adc
mov
push
fisubrl
or
or
aad
and
xlat
and
std
cmp
mul
xchg
int
mov
push
lods
shll
in
xor
adc
insb
jnp
pop
mov
pop
sti
xchg
sbb
adc
stc
adc
mov
je
mov
dec
mov
sub
lahf
mov
daa
jae
or
and
cmp
xchg
push
cmp
or
rorb
jno
jb
test
and
fcoml
or
mov
loope
int
jle
inc
and
add
add
xchg
xchg
incb
dec
inc
inc
pusha
loop
stos
js
aas
sbb
dec
lret
xchg
jno
mov
mov
mov
inc
cltd
aaa
aas
cmp
rcrb
dec
xor
push
xchg
adc
lods
and
cmpsb
stc
bound
movsl
in
dec
loope
sbb
sbbb
or
lods
jb
mov
or
sub
popf
xor
rclb
add
nop
adc
imul
push
lret
and
aaa
std
jb
cmp
add
repz
mull
sbb
loopne
or
dec
es
mov
xor
in
add
sbb
inc
scas
pop
test
cmp
int
or
shl
sub
dec
leave
enter
xchg
sti
mov
mov
sub
test
sub
out
mov
xor
xor
mov
sub
pop
mov
push
push
in
jg
or
js
fdivr
dec
bnd
loopne
mov
inc
aad
not
cpuid
lock
bound
mov
dec
jo
or
gs
sbb
or
push
mov
mov
cmp
and
pusha
out
jl
sbb
mov
xlat
adcb
sub
mov
cli
das
popf
jmp
jecxz
dec
repnz
popf
cmpsl
jae
lods
aad
mov
adc
push
dec
mov
hlt
stc
pop
mov
mov
repz
xor
hlt
inc
test
mov
iret
test
insl
insl
inc
out
addr16
loopne
pop
xchg
jg
mov
or
jnp
imul
or
xchg
add
daa
lods
dec
mov
insb
inc
jbe
jbe
push
push
jbe
adc
sbb
and
fwait
adc
or
repz
cmp
in
sbb
xchg
dec
popa
cmp
push
push
aaa
or
scas
fisttps
aas
test
xchg
stos
xor
mov
pop
mov
fbstp
mov
mov
andl
insl
sbb
jl
add
cmp
push
call
jl
xor
mov
loopne
xchg
push
mov
movsb
in
mov
inc
ror
lods
fwait
dec
pop
sahf
lock
lock
stc
aaa
mov
shrl
test
sub
jle
je
and
cli
lods
in
out
out
adc
iret
aam
out
mov
fidivrl
adcl
sub
push
and
jbe
les
pop
pushf
out
arpl
inc
lds
dec
test
loope
push
pop
inc
orl
or
ud2
cmp
mov
jne
test
ss
mov
sbb
ss
inc
inc
mov
jmp
cmpsb
pushf
xor
faddp
aaa
int
mov
pop
sbb
adc
leave
shl
addl
ltr
xor
pop
subb
movsb
scas
jbe
mov
mov
adc
sub
lret
jnp
inc
and
je
repnz
add
jne
ds
cld
popw
fdivp
jge
jne
xchg
or
mov
pop
sbb
ds
inc
xor
or
push
xchg
pop
testl
fsub
js
push
ret
cmpsb
ja
jnp
jle
pop
mov
pop
xchg
cmp
mov
cmp
sbb
push
jmp
pop
addl
cltd
stos
test
xchg
sub
push
fsts
pop
fisubrs
cwtl
ljmp
and
mov
xchg
pop
xchg
mov
fadds
mov
mov
push
push
cmp
push
sbb
movsb
rcrb
test
xchg
xchg
adc
and
test
mov
push
lret
in
jecxz
flds
adc
daa
andb
rcrl
mov
rorb
mov
in
out
push
sbb
addr16
stc
push
mov
and
push
dec
int3
pop
out
in
and
dec
jb
sbb
sarl
outsb
arpl
movsl
scas
pop
push
aas
scas
call
xchg
and
movsb
js
dec
nop
push
push
std
and
inc
adc
pop
sbb
fidivl
test
push
pop
sbb
push
lds
sahf
clc
stos
clc
add
cmpsb
ret
lahf
ljmp
aam
in
je
aad
mov
jl
aam
push
test
arpl
or
popf
dec
mov
pop
fisttpll
adc
inc
loop
inc
out
daa
test
jb
insl
std
sub
cltd
test
jmp
jecxz
stos
pop
imul
shlb
and
xchg
in
pop
insb
aaa
push
and
dec
mov
scas
xor
pop
inc
xchg
mov
pop
filds
ja
mov
cmc
mov
test
mov
pop
mov
push
mov
mov
mov
dec
cmc
imul
cmp
popf
pusha
lods
and
mov
scas
lock
addr16
rcl
dec
sti
out
jae
sbb
or
ret
gs
xor
stc
mov
ret
and
stos
jnp
lock
xchg
popa
addr16
cmc
mov
pop
jl
in
sub
pusha
jle
jp
mov
inc
cmp
add
inc
cmpsb
int
pop
fs
xchg
out
repz
jns
mov
push
bound
sbb
fstps
inc
test
mov
dec
pop
je
xchg
and
clts
xor
dec
dec
cmp
jo
sbb
movsl
lret
pop
xchg
adc
push
sbb
in
sbb
mov
mov
pop
cli
xlat
cld
hlt
sbb
adc
shrl
adc
loop
inc
mov
jne
insb
fimull
loop
cmp
adc
shl
push
mov
mov
arpl
jno
jle
jmp
dec
into
dec
ja
sub
movsl
sbb
fistl
loope
pop
lret
push
imul
outsl
jb
negb
jb
adc
xchg
mov
jnp
fldt
nop
test
aad
mov
mov
jnp
shrl
scas
sub
xlat
jae
dec
ret
fadds
rol
jae
pusha
mov
jg
out
cmp
aad
subl
int
lcall
dec
pushf
mov
dec
push
pop
or
in
xor
fistps
lds
fisttps
mov
stc
imul
in
inc
xchg
inc
loop
add
clc
pop
loop
pop
push
pop
sbb
xor
outsb
mov
mov
ret
das
lds
fidivrs
test
arpl
push
cmpsl
push
sub
call
mov
lds
fstpt
nop
xor
lret
out
insb
jl
cmp
pop
mov
cmp
leave
ja
dec
cmc
fsubrs
cmp
adc
xchg
sub
lock
pop
lds
imul
jns
sbb
xchg
stos
test
dec
xchg
pop
bound
imul
jno
rcrl
ds
pop
xchg
mov
lcall
push
outsb
push
jb
leave
stc
ss
fdivl
dec
inc
lds
ljmp
lret
dec
shll
ror
sbb
subb
repnz
insb
inc
js
ss
dec
and
out
jp
mov
hlt
mov
in
and
bound
imul
cmpsb
xchg
sub
aaa
call
mov
clc
xlat
loop
and
in
jnp
or
imul
push
sarl
adc
into
in
das
pop
movsb
in
lret
lods
xor
cmpsb
cld
pop
cmpsb
lods
lret
incb
jae
xchg
aad
clc
enter
arpl
aam
pop
pusha
inc
sub
push
push
out
fiaddl
pop
test
cmpsl
sub
subb
inc
pop
jo
shlb
ljmp
mov
fldt
loopne
divl
xor
mov
sbb
fxch
mov
jg
xlat
leave
adc
aas
int3
mov
adc
add
nop
fisubrl
xorl
jg
pop
mov
push
cli
in
mov
dec
das
arpl
in
jne
pop
insl
std
mov
mov
push
or
popf
jb
ljmp
pop
insl
daa
call
stos
lock
mov
push
xchg
mov
scas
push
adc
xor
rcrl
decl
das
xor
call
jae
dec
sti
mov
lret
mov
fistl
mov
sbb
loop
mov
mov
fnstsw
pusha
rol
in
or
mov
cmp
fwait
testb
cli
in
push
test
ficomps
icebp
icebp
xchg
add
jp
repnz
push
pop
mov
ljmp
jno
sbb
aas
test
xor
push
jns
jp
fidivrs
out
mov
cmp
out
mov
cmp
jae
sub
xchg
out
sub
mov
movl
sub
es
stc
or
outsb
mov
in
xchg
vcvtss2si
into
jg
outsb
enter
inc
sub
js
in
cmp
outsb
xlat
icebp
jp
jno
mov
cs
jnp
mov
xor
pop
push
pop
or
pop
pop
push
mov
pop
xor
nop
icebp
xchg
mov
mov
call
dec
or
lods
ljmp
daa
sbb
faddl
repnz
push
movsl
loop
mov
int
xchg
jne
cmpsb
enter
fisubrs
inc
xor
stos
mov
outsb
sbb
inc
inc
adc
mov
cld
push
push
cmc
lods
sti
xchg
lods
jge
leave
and
jmp
adc
shl
dec
mov
insb
popa
sbb
fcmovne
test
cmp
mov
fwait
out
fwait
lahf
mov
cs
mov
ret
xchg
xchg
xlat
sbb
popf
testb
mov
sbb
jl
jno
arpl
les
fwait
mov
aad
stos
inc
pop
mov
popf
and
mov
xchg
arpl
add
ret
iret
mov
xor
jecxz
imul
stc
mov
call
pushf
fsubrp
frstpm(287
sbb
add
jno
inc
stos
addr16
xlat
outsb
push
js
scas
push
loope
mov
hlt
fcomi
mov
cmp
mov
mov
gs
dec
dec
jb
and
out
pop
les
outsb
sbb
push
mov
das
adc
ret
jo
shll
arpl
xchg
lret
push
ds
std
movsl
movsl
cmp
xchg
pop
sbb
das
es
xor
ljmp
adc
push
subb
dec
arpl
dec
jne
outsb
push
push
icebp
xor
lock
adc
nop
mov
mov
test
push
inc
icebp
push
mov
dec
scas
xor
cmp
lods
lock
xor
ljmp
jecxz
aas
shll
add
cltd
cmc
dec
loopne
fmul
jge
lea
pushf
add
fs
ja
dec
ret
mov
outsb
daa
iret
scas
sbb
aam
inc
push
sbb
jns
mov
mov
je
jmp
pop
push
popf
dec
sub
or
pop
icebp
cmc
rcrb
sti
jae
je
pop
or
pop
jae
test
mov
daa
sub
sub
popa
mov
mov
xor
jne
imul
and
shll
ds
out
pop
subb
xchg
aad
inc
repz
test
sub
cmp
xchg
sahf
pop
fs
xchg
aaa
fiadds
ja
je
lods
and
les
cmp
mov
ljmp
outsl
insl
adc
adc
inc
test
imul
out
popf
leave
mov
cwtl
sbbl
mov
xchg
movsl
push
push
cmpsl
aaa
outsb
and
xchg
jb
pop
and
adc
dec
je
lea
lret
push
mov
out
je
sbb
mov
or
mov
push
sbb
sub
xor
inc
lcall
inc
push
loope
ds
rolb
and
jb
cmp
cmp
into
in
addr16
jl
lods
sbb
pushf
xor
mov
push
mov
sahf
dec
lcall
outsb
and
push
nop
pushf
xchg
pop
loope
es
in
pop
or
adc
ljmp
mov
stc
xchg
lods
add
hlt
sbb
call
sub
mov
sub
adc
rcrl
fmull
or
dec
mov
in
push
xor
push
adc
sub
roll
xor
loopne
lods
ljmp
mov
arpl
add
aas
sub
adc
test
jmp
mov
jno
ret
mov
cltd
loopne
fcoml
or
xchg
pop
mov
into
pop
dec
adc
stc
dec
movsb
mov
aam
jmp
popf
les
in
roll
fwait
jg
pop
loop
inc
std
jl
sbb
mov
int3
pinsrw
lret
jl
add
jl
push
imul
mov
int3
cmc
addr16
add
outsl
lret
lfs
xchg
pushl
jbe
mov
rcl
dec
pushfw
in
lds
add
mov
incl
xor
fsubs
jbe
ss
pop
and
aas
xor
and
in
or
mov
mov
mov
into
mov
imul
das
inc
dec
xchg
pop
flds
divb
xchg
fldcw
jl
out
pop
sub
mov
arpl
imul
dec
xchg
jle
push
test
je
inc
jnp
sbb
lods
ds
test
incb
inc
cmp
or
cwtl
daa
pop
jp
gs
push
pcmpgtw
and
and
push
mov
sahf
ss
dec
mov
stos
das
push
data16
aaa
popl
mov
mov
jno
pop
adc
popf
adc
clc
adc
fnstenv
add
mov
rep
test
mov
fmul
les
das
clc
shrb
lods
icebp
cld
sbb
enter
sbbb
cs
cmpsb
fs
loopne
movsb
inc
ret
imul
daa
stos
cmpsl
push
jg
cwtl
nop
jb
dec
jmp
push
std
ret
jmp
xor
rcrb
loop
pop
fistps
mov
cld
inc
fimuls
mov
imul
aas
imul
stc
out
jl
xchg
or
cmc
mov
lds
stos
jns
out
mov
ss
stos
mov
jle
es
fstps
nop
inc
mov
sbb
inc
out
iret
jbe
pop
mov
movsb
cmp
dec
push
xor
fcomi
add
nop
arpl
xor
inc
mov
xchg
cmp
call
mov
add
adc
daa
jnp
xchg
insb
add
mov
cmp
movsb
fisttpl
lret
adc
xorb
cmp
and
sub
xor
cwtl
addb
lock
xchg
cmp
out
cli
pusha
jnp
mov
mov
xchg
xor
cmp
pop
jb
and
insb
inc
outsl
push
jp
dec
add
hlt
dec
cwtl
pop
pop
not
add
or
mov
lock
pusha
xchg
test
pop
add
fisubs
mov
cmp
cli
xchg
pop
int3
lds
adc
in
loop
and
popf
xchg
pop
test
mov
cmp
pop
ret
and
jge
lock
mov
shll
adc
dec
movsl
fucomp
push
or
xor
lea
gs
scas
fistpl
sub
sub
xor
inc
ficoml
mov
mov
sbb
test
test
loopne
loope
lods
mov
adc
and
jae
cmpsl
add
hlt
push
mov
mov
fsubl
es
jb
sub
pop
pop
cmp
pop
xor
fdivp
adc
cmp
outsl
jb
sbb
aam
or
lret
cwtl
cltd
fsubrl
or
push
shrb
mov
in
inc
pop
ljmp
pop
jne
mov
fwait
or
sbb
scas
and
mov
test
jg
dec
push
sub
hlt
add
dec
loopne
insl
out
call
orl
sub
leave
jae
jo
pop
mov
jp
sbb
pop
jecxz
dec
or
lods
fidivrs
je
and
test
idivl
mov
or
aam
sti
test
out
aas
loopne
dec
lcall
mov
std
pop
es
mov
push
pop
jno
cmp
adc
cmpsl
repz
cmp
or
pop
movsl
dec
xor
mov
mov
push
push
sub
lods
or
das
xchg
jb
fistpll
jo
sbb
push
scas
in
js
jb
dec
in
jae
lret
inc
mov
cwtl
push
std
fsubrp
xchg
shlb
mov
cmp
lods
insb
dec
negl
xchg
mov
xor
adc
mov
mov
mov
mov
movsl
mov
repz
sbb
cmc
xchg
xchg
mov
test
jbe
push
xor
cmpb
lahf
clc
sub
jne
lret
dec
test
into
data16
in
xchg
mov
add
jmp
jae
mov
cmc
lret
push
jbe
dec
mov
lock
mov
sub
push
lahf
lret
clc
clc
inc
loope
mul
test
adc
jecxz
stc
pop
mov
add
push
out
pop
cmpsb
xchg
stos
lret
cmp
test
xor
mov
in
sbb
flds
and
inc
push
add
xchg
shlb
stc
das
cmp
jmp
mov
fwait
mov
xor
jecxz
fcom
js
or
xchg
mov
jne
sahf
and
sbb
arpl
jno
call
lcall
ds
xor
sti
xor
jae
jbe
in
add
cld
cmpsl
enter
cmovo
jmp
xor
test
mov
cmpsl
andb
and
rcl
and
test
aad
inc
iret
shlb
dec
shl
lods
jns
xchg
daa
mov
push
mov
ja
and
aas
out
pop
dec
lret
lds
add
fsubl
pop
fwait
int3
sbb
mov
insl
das
push
mov
cli
mov
sti
xchg
inc
mov
cmc
xchg
adc
fcoms
cld
xchg
lock
push
inc
mov
insb
insb
cmp
gs
sub
cmp
cmp
pop
push
inc
and
mov
cmp
stc
mov
mov
loop
push
adc
jb
in
gs
sub
jb
pop
rolb
jle
sbb
pop
repnz
mov
fwait
nop
shll
lret
cwtl
cmp
adc
mov
mov
insl
sbb
adc
fstpl
popf
call
pop
rorl
cli
dec
cmc
pop
dec
or
xorps
add
loop
popl
xchg
lret
ret
arpl
clc
push
xchg
dec
jns
loope
fcompl
stc
test
mov
add
repnz
and
flds
aaa
add
sbb
and
sti
push
sub
loop
mov
fistpl
sub
fadds
push
add
pushf
or
jnp
jb
roll
mov
outsb
sbb
movsl
or
mov
jg
inc
cltd
push
rorl
shlb
jle
loope
bound
cld
xor
repnz
fwait
jne
int3
adc
in
mov
inc
jb
and
das
or
push
popf
ror
test
xchg
sahf
xchg
daa
xor
addr16
out
jg
out
mov
loope
xor
in
jno
push
xor
sbb
out
stos
xchg
jmp
rcl
lret
aaa
push
ss
jbe
in
nop
inc
jl
xchg
jae
setnp
xchg
pop
pop
cmp
push
ret
fldt
or
push
outsb
js
xchg
cmc
ja
xlat
push
lea
repz
adc
cmp
lahf
adc
dec
dec
nop
imul
outsb
pop
cwtl
mov
pop
or
fists
mov
cs
scas
daa
test
es
pusha
fcompl
test
push
jle
loopne,pt
enter
xor
cmpsl
sahf
push
xchg
movsb
loope
sbb
mov
cs
mov
xchg
sbb
add
cmp
cmpsl
jnp
and
xor
popa
xchg
adc
or
sbb
cmp
icebp
or
lds
mov
sbb
in
cli
jbe
adc
arpl
stc
cli
bound
pop
outsb
pop
jmp
enter
iret
aam
push
orl
sbb
add
add
mov
cmc
test
mov
enter
orb
pop
scas
pop
xchg
lds
and
add
jo
mov
test
push
dec
fcoms
sub
dec
rol
cwtl
pushf
add
aam
ds
leave
mov
sti
test
cmp
dec
and
aaa
push
sbb
nop
mov
sub
inc
adc
fs
push
data16
push
adc
imul
popa
popf
stos
sahf
dec
push
mov
and
mov
jns
out
pop
aam
sti
outsl
jae
js
sub
cmp
mov
and
xchg
inc
repz
inc
repz
jnp
into
push
movb
jp
cmp
dec
mov
adc
mov
movsl
xchg
and
mov
aaa
inc
push
imul
add
bound
xor
into
cmp
sbb
dec
add
rcrb
cmc
adc
and
mov
inc
dec
pop
push
jo
push
dec
cltd
loope
and
jg
inc
pop
icebp
rcrb
fsubrl
movsl
or
enter
mov
or
arpl
iret
push
addb
push
lods
ficomps
cli
sbb
cmpsl
xchg
loope
mov
mov
in
xor
jge
cmp
pop
test
outsl
or
lahf
leave
sti
popa
cmp
outsl
xor
xor
jmp
mov
mov
add
stos
add
mov
sub
jns
and
push
adc
data16
sbb
and
mov
outsb
stos
inc
and
mov
cmp
ret
push
pop
cmp
or
jo
mov
test
mov
pop
pop
pop
sarl
js
jp
jno
cmp
loopne
lods
imul
inc
dec
mov
inc
aad
test
cmp
bound
out
adc
add
sbb
int3
push
pop
mov
repz
xchg
jae
out
inc
mov
mov
jg
insl
in
and
mov
dec
pop
jns
mov
movsb
xchg
and
cmp
inc
cwtl
pop
push
inc
mov
mov
ret
jo
xchg
aas
jp
pop
push
sbb
and
and
imul
pop
test
and
leave
out
fs
popa
mov
loopne
jecxz
dec
jne
mov
test
rorb
inc
dec
dec
xor
or
jae
push
jne
and
in
adc
jb
mov
xor
enter
fcmove
fldcw
pop
rcll
popf
xchg
or
pop
cli
push
jmp
cmp
adc
repz
insl
mov
je
outsl
icebp
imul
inc
insl
mov
sarl
or
ret
stc
dec
sub
jp
into
fstps
in
adc
ds
iret
sbb
daa
test
cmc
or
xchg
out
cmp
inc
or
pop
sahf
cmp
int
mov
inc
cmp
cmp
in
sub
jns
mov
repnz
cmc
xor
sub
mull
adc
mov
adc
clc
sub
fsubrp
mov
lret
sub
sar
sarb
push
aaa
shll
pop
dec
mov
hlt
arpl
sbb
test
sub
in
or
scas
lret
loopne
dec
add
out
sbb
xchg
xor
cwtl
mov
insb
pop
mov
sub
stos
fwait
sbb
inc
sti
pop
out
shlb
xor
cltd
mov
mov
mov
test
sbb
pop
mov
push
mov
scas
xchg
mov
push
subl
sbb
cwtl
lcall
repz
inc
aam
clc
inc
or
mov
jecxz
cltd
int
std
aad
ss
pop
xor
xchg
bound
adc
mov
xor
sub
fcompl
and
cltd
or
adc
or
hlt
cmp
cmp
xor
das
lea
pop
nop
mov
or
pop
ss
dec
or
dec
jbe
dec
and
or
xor
dec
addr16
adc
sbb
add
in
call
xor
cmpsb
sub
and
sbb
jg
mov
dec
xchg
mov
sub
mov
fiaddl
cli
xor
mov
add
movsb
mov
mov
or
fnstcw
jns
nop
imul
dec
dec
popa
add
sbb
aad
mov
pop
imul
mov
sbbl
popf
in
push
scas
xor
add
stos
xchg
fisubrs
sti
mov
cltd
inc
sbb
jl
arpl
jnp
mov
dec
lret
dec
call
lret
stos
ret
lcall
sbb
mov
cltd
pushf
mov
or
sub
mov
cmp
in
mov
inc
jl
cmp
cwtl
rcrb
je
or
push
shrb
movsl
pop
imul
xor
shlb
pop
aas
or
mov
filds
mov
cltd
in
ljmp
in
shlb
out
or
movsw
fwait
ja
and
sbbl
xchg
pop
das
ljmp
pop
je
cld
inc
subb
mov
mov
gs
lods
sub
js
sbb
jle
lcall
into
push
lret
xor
add
sub
jno
lds
add
scas
popf
gs
rcl
jns
iret
addr16
js
sar
mov
fcomps
daa
repz
lea
xor
mov
add
and
fisubl
and
rcll
sbb
mov
or
or
cmp
mov
dec
lcall
stc
pop
mov
test
adc
iret
ret
mov
mov
sub
cltd
xor
bound
int3
sbbb
sbb
mov
jle
nop
lock
dec
imul
lret
mov
sbb
inc
sbb
aad
adc
cmpl
and
enter
test
jae
stos
loope
loop
nop
xchg
scas
push
cmp
cld
loopne
push
jne,pn
fists
and
mov
fwait
cmpl
into
movsb
out
in
push
and
outsb
notb
mov
aam
dec
lods
add
xchg
mov
sbb
movsl
inc
sub
orb
stos
cltd
or
jle
mov
jg
jae
xchg
xchg
jbe
test
jmp
in
mov
pop
int
xor
jl
sbb
fstpt
sbbl
fbstp
add
mov
lods
jg
test
popa
xchg
xchg
aas
mov
ljmp
sbb
dec
stos
lods
dec
cmpxchg
add
in
xchg
push
insl
mov
ret
mov
subb
mov
loop
hlt
popaw
jbe
adc
inc
ss
shl
adc
loop
dec
testl
movsb
outsb
push
sub
movsb
mov
inc
lds
inc
roll
ret
jl
aam
mov
dec
in
dec
scas
mov
out
outsb
jbe
jbe
dec
movsl
int3
add
pop
ret
andb
xchg
enter
aaa
adc
test
sub
mov
xlat
sub
push
sbbl
cli
in
cmpl
stos
bnd
hlt
jle
psubw
addr16
pop
popl
repnz
or
sub
cmp
ds
sbb
or
icebp
dec
in
call
ret
jns
jo
mov
rol
sbb
bound
push
adc
sahf
ret
mov
aaa
shrl
push
shl
jl
ds
mov
jl
fs
cmp
cmp
mov
pop
pop
ja
je
sub
cmpsl
cltd
lds
popl
popa
je
inc
and
cli
test
aas
es
mov
int3
inc
sub
test
clc
dec
imul
popa
xchg
mov
and
mov
sahf
cmpsb
sbb
subb
jo
adc
pop
test
jb
cld
mov
xor
es
push
lods
jle
rorb
push
sbb
lds
fisttpl
lret
stos
popa
and
hlt
xor
aam
fsubl
jmp
scas
loope
adc
sar
mov
leave
popa
test
mov
pop
sbb
test
loope
sbb
scas
jmp
pop
idivl
cmp
adc
sub
aad
stc
adc
pop
pop
sub
cmp
daa
pop
ds
insl
pop
in
pop
push
dec
call
std
jbe
mov
jp
pop
push
adc
push
xor
and
mov
fisttps
js
clc
push
mov
fldenv
cli
xchg
fadds
cmpxchg
out
enter
outsl
daa
subb
popa
pop
popa
or
dec
push
pop
js
jle
out
outsb
jno
test
pop
jns
bound
and
sbbb
mov
insb
pop
jmp
les
test
mov
rclb
dec
adc
add
dec
or
xor
aam
pop
cmp
push
dec
push
jg
int
cmp
adc
fsubl
or
mov
or
outsb
pop
fisubrl
outsb
repnz
sbb
aad
jnp
xor
in
inc
rcrb
adc
popf
mov
xlat
aas
add
icebp
mov
inc
es
inc
pop
and
mov
sbb
pop
jg
add
imul
in
or
xchg
inc
arpl
ds
and
movsl
push
popa
ret
cmp
jg
sub
cmc
fnstcw
and
xchg
add
stos
jp
aad
add
pop
stc
mov
into
xchg
dec
adc
iret
xchg
inc
mov
repz
pusha
lods
ss
sbb
fldl
ret
push
shr
mov
cmp
int3
and
jg
xor
xor
xor
jns
xor
test
cmp
out
push
aas
push
das
xor
push
test
outsb
pusha
mov
loop
jg
orb
jle
adc
push
xor
add
dec
adcl
loopne
fidivrl
lret
pop
pop
fisubrl
arpl
movsb
push
xor
cmp
mov
cs
mov
inc
imul
scas
push
fcoml
mov
mov
xor
not
cmpsb
inc
and
pop
xchg
mov
sbb
gs
xor
jno
test
ss
inc
pop
pop
mov
leave
add
jle
leave
cmp
or
pop
pushf
or
pop
mov
frstor
cmp
into
ss
push
movsb
clc
jge
loope
sbb
push
scas
cmp
cmp
inc
out
lods
xor
inc
fldt
daa
loope
punpckhdq
inc
or
xchg
pop
fistl
cmp
xchg
lcall
sub
mov
ja
xchg
arpl
mov
mov
jp
les
mov
jmp
push
lret
movsl
orl
ret
fwait
cmp
test
lret
into
push
xlat
sbb
pop
pop
scas
cli
xor
or
lret
movsb
push
push
and
xor
pushf
std
movsl
imul
and
pop
clc
adc
es
cs
in
iret
add
aas
xchg
jmp
and
data16
sysexit
xor
ror
jne
sbb
fimull
pop
xchg
add
repnz
xchg
pop
test
adc
sbbb
push
sbb
push
or
mov
pop
enter
addr16
enter
pop
pop
stc
push
inc
dec
jecxz
aam
aam
int
and
push
data16
aas
pop
loope
lcall
jl
rcrl
mov
in
sub
cmp
sub
sbb
sahf
dec
jmp
lret
js
push
movsl
inc
and
out
lret
sbb
mov
insl
imul
nop
lahf
jno
pop
cs
sub
cwtl
push
pusha
cmpsl
pop
test
mov
divb
mov
int3
mov
pop
in
jmp
jo
andl
mov
popa
and
mov
and
test
cwtl
nop
ss
in
cmpsb
int
sbb
push
fstps
iret
leave
cmp
jle
fxch
sub
push
test
jg
stos
lret
mov
sbb
or
int
mov
inc
inc
jmp
push
les
insl
popa
push
mov
push
push
xor
in
cmp
sub
insl
loope
xor
xchg
insb
std
and
movsl
pop
fadd
mov
out
push
cmp
repz
test
mov
into
dec
fldt
pop
or
dec
jecxz
jnp
jo
xchg
adc
mov
jg,pn
pop
mov
iret
adc
mov
loopne
adc
out
ds
sbb
pop
fidivl
jl
mov
mov
lret
or
mov
lahf
add
pop
outsl
pop
mov
inc
stos
push
and
mov
push
pop
ljmp
dec
jno
cwtl
shr
loope
inc
push
imul
dec
sub
imul
jno
mov
data16
xchg
xlat
cmp
mov
fisubs
mov
dec
cld
xor
sarl
test
pop
fcoml
dec
mov
pop
push
shll
pushf
enter
or
pop
or
inc
and
mov
inc
and
test
xchg
jne
mov
adc
and
pop
inc
and
scas
mov
cmp
addr16
and
sarb
btc
and
jmp
sub
pop
mov
lret
push
sbb
pop
leave
outsb
jae
sbb
js
insb
dec
pop
nop
push
aas
or
rolb
lea
push
and
cmp
and
mov
jg
loop
and
adc
inc
divb
xchg
push
in
imul
xchg
loope
je
jmp
adc
ds
ret
push
fsubrs
jg
in
or
shll
add
mov
and
lcall
xlat
leave
add
div
push
sbb
cltd
inc
xor
inc
inc
inc
repz
int
sbb
push
xor
fwait
xchg
cld
sub
xchg
sbb
test
pop
xchg
and
mov
fs
lcall
add
add
cld
pushf
inc
sbb
cmpl
inc
xor
sub
es
push
bound
pop
sub
jmp
inc
repz
outsl
mov
mov
adcl
scas
ret
mov
add
rcrl
jns
adc
add
les
scas
adc
lret
push
fdivr
cld
mov
and
and
fwait
and
cmp
clc
xor
mov
jge
cmp
test
inc
mov
scas
xor
fisttpll
jp
mov
push
pop
jle,pn
out
xchg
and
jbe
daa
and
pop
es
push
mov
les
ljmp
mov
imul
sbb
and
jp
sub
xchg
cmpsb
mov
xchg
lods
pop
out
xchg
jp
push
es
or
movsb
sub
fs
aad
xchg
cmp
jbe
clc
ror
cld
mov
mov
scas
add
jnp
loopne
lods
dec
sbb
dec
repz
arpl
jmp
cmp
xor
outsl
mov
ficompl
mov
insl
test
cmpsl
mov
call
and
movsl
mov
mov
hlt
fwait
jae
dec
dec
clc
xorl
fsubrl
jo
inc
jbe
pop
fcomps
fcmovnb
rcll
adc
dec
rcrb
test
dec
push
xor
movsl
mov
mov
lcall
mov
sti
mov
hlt
jae
push
imul
in
bndldx
xchg
push
mov
ss
fs
test
mov
jecxz
or
xchg
mov
push
movsb
pop
hlt
mov
rcll
je
mov
ss
xlat
addr16
fiaddl
mov
inc
adc
mov
mov
daa
jbe
mov
push
adc
stc
sbb
pop
adc
jecxz
fwait
push
lods
pop
push
jns
aam
aas
pop
adc
enter
int
inc
mov
push
arpl
and
mov
les
sbb
inc
mov
pop
jecxz
je
cmp
xchg
gs
imul
mov
pop
push
and
jns
inc
insl
dec
add
int3
pop
inc
jmp
mov
jbe
xchg
rorl
and
arpl
xchg
pop
das
jbe
fsubrl
out
ret
sbb
or
jo
sbb
int
fbld
or
sbb
cmp
cmp
call
outsb
pop
gs
ja
or
out
stos
jle
mov
testl
push
insb
inc
test
lds
popf
lret
addr16
lahf
repnz
sub
mov
xor
pop
jnp
and
mov
dec
jmp
mov
add
pop
pop
stc
add
les
test
fwait
cmp
xchg
jbe
xor
pop
aad
stos
fiaddl
lret
out
lret
lahf
aas
cmp
jno
aaa
pop
inc
xchg
shll
mov
adc
je
xor
cs
repnz
out
mov
xchg
adc
outsb
mov
or
jb
pushf
sti
sub
test
data16
dec
adcl
jnp
mov
sbb
xchg
cltd
pop
mov
fbld
push
xor
jg
add
lods
ror
in
mov
pusha
pop
mov
imull
cmp
mov
fcomi
addr16
xchg
ret
cmpsl
push
pop
jne
jnp
js
outsb
mov
mov
out
mov
and
mov
inc
jnp
sbb
mov
jae
inc
insb
or
xchg
inc
sahf
jno
mov
imul
mov
jmp
inc
out
sbb
sbb
loopne
mov
or
push
push
push
loopne
outsb
cwtl
add
dec
insl
cwtl
pop
or
mov
add
mov
mov
adc
imul
mov
add
xor
cmp
stc
pop
dec
xchg
loopne
popa
movsb
and
add
cmp
and
nop
cmpsb
dec
jb
jl
push
nopl
int3
rol
cmc
ljmp
mov
mov
in
icebp
test
mov
add
andl
pop
sub
add
adc
rcrl
psrlq
ret
movsl
subl
les
scas
mov
push
mov
push
xchg
xchg
loop
dec
inc
popf
mov
mov
lret
roll
inc
daa
push
or
imul
dec
add
mov
jle
or
or
adc
mov
in
out
pop
or
add
test
sbb
sbb
sub
loopne
jp
add
sub
add
pop
icebp
xor
test
pop
add
pop
mov
jl
sub
cmpsl
or
fwait
repz
cmp
test
jg
loope
imul
sub
jnp
lret
add
or
arpl
stos
sbb
inc
mov
sbbl
lcall
or
jl
jo
test
retw
xor
or
jb
in
fdivr
call
pusha
jg
insl
jecxz
pusha
dec
int
pop
jbe
in
jp
js
js
mov
sub
push
jne
mov
push
leave
jg
mov
xchg
dec
mov
xchg
mov
pop
lea
arpl
adc
jmp
insb
mov
xor
frstor
and
stc
pusha
popf
stos
rcr
fistpl
test
or
aaa
and
add
scas
dec
sti
sub
xchg
sbb
dec
sti
jmp
shl
xor
nop
jno
and
adc
jle
mov
loope
scas
adc
or
cld
jmp
push
std
adc
cli
nop
xchg
xchg
fidivl
mov
outsb
sub
repz
jb
inc
cwtl
push
icebp
push
mov
sbb
pop
lods
or
nop
sub
les
rorl
and
fcompl
outsl
jl
inc
inc
mov
outsb
xchg
scas
addr16
lret
xchg
fs
in
cltd
push
popa
add
mov
lods
pop
outsl
push
adc
inc
andl
mov
pushf
enter
xchg
jmp
scas
lcall
cs
mov
fcompl
mov
call
jne
jle
jg
ss
xlat
mov
in
pop
addl
aaa
loope
cmp
loope
xchg
pop
test
pop
sub
sbb
add
inc
mov
xlat
mov
pop
jge
test
sub
push
inc
mov
mov
sub
xchg
je
ficomps
fs
setle
mov
stos
imul
hlt
nop
repnz
cmpsb
and
dec
dec
sbb
aad
cmp
mov
lret
mov
jbe
in
xor
inc
and
adc
pop
add
out
and
iret
push
adc
cwtl
jmp
sar
push
inc
sbb
rcr
cmp
or
lahf
int
dec
push
inc
in
lcall
dec
pop
jle
sub
xor
or
sahf
out
je
push
mov
add
in
xor
cmpsl
shlb
ret
jns
mov
jp
cmc
mov
aas
sub
lahf
mov
jl
nop
subb
dec
push
gs
adc
sbb
push
jmp
mov
pushf
sbb
mov
jns
xorb
mov
xchg
push
stos
hlt
xor
out
jae
lahf
das
test
push
gs
push
sbb
test
mov
inc
lods
les
mov
push
sub
enter
pop
jge
repnz
mov
xor
sarb
sub
jns
xor
cltd
sub
inc
or
adc
movsl
mov
imul
pushf
in
cmp
fsubs
xchg
out
mov
mov
std
loopne
test
gs
das
cmpl
ljmp
sahf
mov
je
fwait
shll
mov
in
mov
insl
inc
loop
icebp
push
dec
popf
aaa
rcrb
or
mov
bound
dec
mov
sub
sbb
ljmp
mov
aaa
andl
jbe
mov
xor
push
cmp
push
mov
clc
pusha
xor
sub
pop
popf
cmp
xchg
in
lea
or
addl
jecxz
inc
inc
scas
mov
ret
push
sbb
loopne
icebp
scas
dec
out
sub
jo
xchg
cmp
sbb
sub
dec
mov
jl
xchg
xchg
nop
fsubr
mov
fdivs
ret
add
dec
outsb
addr16
mov
sub
imul
mov
ja
lods
daa
jmp
push
cltd
inc
or
bound
fs
xchg
divb
push
js
jmp
repz
adc
pop
dec
mov
xlat
xchg
cmovg
lcall
mov
lret
test
mov
aad
mov
into
js
clc
or
and
sub
fistpl
xchg
pushl
aaa
in
add
adc
mov
jne
js
xchg
outsw
jno
mov
mov
aam
test
jno
arpl
pop
fwait
pop
rorb
mov
cwtl
ret
push
fisttpll
out
push
inc
or
bound
popa
jg
mov
lods
and
jbe
pop
sbb
mov
sbb
pop
xchg
cmp
and
xor
cmp
inc
adc
pop
std
xor
push
jp
adc
mov
push
test
xor
in
cmp
cltd
ret
sub
rcll
int
testl
pushf
loope
sti
je
ret
mov
and
adc
imul
pop
sbb
popa
ss
out
dec
out
imul
xor
lods
mov
imul
lret
lret
insl
xchg
add
and
cld
xchg
add
push
sub
out
adc
add
xchg
jmp
pop
pusha
push
int3
repz
out
cmpsl
jns
fdivrl
adc
roll
mov
cmp
add
sti
jo
mov
in
inc
xor
mov
dec
jmp
mov
and
sbb
dec
pop
rcrb
dec
xchg
dec
ret
test
xchg
mov
jp
sbb
sahf
adc
aam
int
push
sarl
enter
or
sub
sbb
xchg
mov
adc
pushf
popa
fbstp
cld
ret
cmpsl
sub
cmpsl
mov
aad
aaa
imul
cmp
jns
icebp
add
jo
pushl
lods
sbb
rcrl
adc
adc
lret
es
inc
ds
mov
js
lret
testb
jo
jb
sub
or
mov
dec
cld
jb
sarl
loop
add
xor
mov
jg
cs
addl
lods
rorl
jne
pop
adc
stos
xor
add
sub
jns
sub
mov
add
stc
mov
cmpsl
fistl
shll
lret
stos
cmp
sbbl
xchg
dec
movsb
call
pslld
cmpsb
jle
push
xchg
arpl
xchg
rep
pop
fs
test
std
lods
jle
loopne
xor
inc
stos
lods
loope
add
mov
lea
push
test
add
icebp
push
mov
leave
subb
int3
adc
sbb
ret
scas
xchg
dec
mov
loop
fdiv
pusha
and
mov
dec
lret
pop
rorb
enter
imul
lods
mov
ds
xor
pop
or
fistpl
push
pusha
xor
out
sbb
push
sbb
mov
mov
mov
sbb
in
out
jae
mov
test
push
fcmovnb
xor
jns
xchg
stc
fstps
stc
fwait
mov
xchg
imul
fdivp
add
js
cmp
in
lods
add
and
pushl
and
je
fucomip
pop
adc
lret
out
stc
call
add
cmp
cli
inc
xchg
mov
pop
inc
rcrl
repz
lahf
test
xchg
push
adc
repnz
das
add
orl
cltd
mov
aam
sahf
mov
bound
into
dec
jg
pusha
sub
gs
sub
fwait
sti
mov
pop
mov
bound
cs
push
sub
fildl
fucomi
xor
push
xor
xchg
ds
fwait
hlt
adc
and
inc
and
mov
xchg
jno
loop
mov
sar
inc
lods
or
ficomps
dec
insb
imul
sub
xchg
adc
es
dec
cmpsl
ficomps
push
adc
fsubr
sub
xchg
mov
xchg
inc
pop
mov
xor
iret
inc
xchg
mov
pop
lods
mov
cli
mov
mov
inc
ret
dec
bound
mov
clc
insl
mov
fbstp
cli
ljmp
mov
or
push
jbe
out
xchg
sub
addb
inc
xor
adc
push
mov
jae
pop
addl
fld
jl
movhps
scas
mov
inc
adc
adc
es
adc
pop
inc
test
into
inc
adc
cmp
pop
test
adc
cmp
sbb
bound
imul
loope
das
cli
pop
push
mov
jl
jns
mov
clc
pop
fsubp
inc
adc
es
icebp
call
and
test
les
popf
push
and
cmpsl
test
cmpsb
inc
pop
push
or
div
sbb
inc
aaa
jns
fsubl
cmpsb
push
mov
mov
jbe
push
and
adc
cmpsl
push
in
flds
lret
sti
pop
inc
push
inc
push
jp
pop
imul
adc
xor
andb
pop
sub
pop
mov
xchg
aam
pop
nop
cmp
push
xor
xchg
jmp
xchg
addr16
iret
repz
sahf
pop
insb
xchg
addr16
xchg
call
dec
xchg
out
ja
or
mov
cmp
hlt
or
push
icebp
push
pushf
dec
lahf
pushf
or
cmp
shl
rcrb
test
xchg
fsubs
bound
xchg
mov
jg
jmp
dec
mov
loopne
mov
ss
dec
shrb
das
mov
fistl
xchg
jno
icebp
mov
sbb
inc
cmp
xchg
pop
imul
popf
mov
scas
ret
push
gs
jle
fdivrp
mov
scas
sti
shlb
or
mov
pop
mov
sbb
and
pop
add
cmpsl
pop
je
and
jge
call
sahf
shrl
loop
lcall
imul
imul
add
pop
dec
and
fidivl
aam
lret
dec
cwtl
jbe
sbb
lods
ret
xchg
leave
xor
fstl
mov
inc
scas
push
ss
mov
adc
inc
daa
mov
fnstenv
cmp
pop
rcrb
fucomp
mov
ss
je
cmp
inc
xchg
xchg
movsl
test
push
jne
aad
cmpsl
das
ja
pop
jb
lds
data16
das
and
mov
jl
lcall
add
xor
ljmp
mov
mov
pop
test
cmpl
pop
jecxz
lods
outsb
mov
divl
call
xchg
outsb
popa
aaa
lahf
icebp
sub
sti
cmpsb
add
xchg
adc
pop
js
xchg
cmpsb
mov
inc
xchg
xchg
push
add
push
int3
or
inc
xchg
and
lods
xor
pop
ss
push
je
stos
xor
dec
mov
cwtl
xchg
or
lahf
cmp
push
mov
add
add
xor
dec
call
xor
jo
shrd
lcall
shll
shll
mov
andl
and
or
or
xlat
fcmovne
dec
in
iret
lods
or
or
sub
pop
movsb
popa
push
stos
fsubrs
jne
sbb
xchg
xor
dec
jg
repz
jne
ds
cmc
roll
dec
icebp
mov
loop
xchg
dec
cmp
jbe
das
dec
outsl
pop
popf
arpl
rclb
sub
jge
movsl
dec
int3
pop
jae
jno
dec
lock
in
aas
add
xchg
test
mov
out
add
aaa
insl
jno
add
dec
inc
add
mov
mov
mov
stos
jg
xchg
filds
or
sub
adc
jle
push
popa
push
cmp
out
pop
jl
jge
or
push
xchg
hlt
xchg
jbe
test
push
int3
adc
and
mov
mov
fsub
lock
lock
vldmxcsr
fdivrl
xor
and
mov
adc
sti
xor
push
cmp
out
sbb
cs
cmpsl
pop
ret
mov
add
push
mov
in
popa
int3
movsb
adc
inc
lods
lahf
adc
xor
loope
or
test
addr16
jno
dec
and
cli
xchg
xor
lods
xor
jmp
push
daa
in
aaa
cmp
ljmp
out
into
xchg
rolb
mov
roll
cmp
insl
jmp
fs
sub
push
inc
jle
test
out
cmpsb
into
ret
lods
or
or
int
cmp
jp
popf
outsb
lea
aas
mov
mov
xor
xlat
sub
xor
popf
xor
loope
mov
repnz
int3
jo
push
ss
aam
std
fmuls
in
sub
cld
flds
or
sahf
cmp
xchg
inc
cltd
or
lods
popa
fsubrl
cmp
and
jo
mov
or
xchg
mov
sbb
jp
sbb
sbb
test
jecxz
xchg
loop
fiaddl
outsl
movsb
pop
pop
add
lock
sahf
lds
addr16
movsl
xor
mov
shlb
push
pop
cld
data16
out
fwait
mov
loopne
xchg
dec
jo
scas
sahf
push
inc
in
scas
cmp
shrb
ret
sbb
pop
jmp
jae
jbe
mov
inc
imul
pop
jne
lret
jns
enter
inc
clc
movsb
xlat
push
sbb
stos
cld
sub
outsb
adc
mov
mov
mov
mov
in
cld
rorl
jo
pushl
mov
pop
sub
push
add
mov
pusha
mov
sbbb
push
pop
fsubl
out
xchg
jo
xor
fmuls
pop
dec
xchg
xor
aad
lret
hlt
jl
push
es
das
movsb
bound
mov
stos
movsl
orb
roll
push
xchg
test
stos
ljmp
repnz
add
mov
push
gs
mov
adc
xchg
xor
pop
roll
xchg
shrb
cwtl
add
stos
push
jne
iret
popf
negl
inc
test
xor
gs
out
mov
mov
les
adc
data16
push
ds
mov
mov
cmpsl
jae
aaa
sub
mov
pop
cmp
or
adcb
fucomip
add
jl
hlt
les
std
fs
aam
mov
mov
pop
xor
or
and
mov
decb
sbb
dec
test
mov
pop
lds
and
mov
cmc
in
push
adc
jnp
mov
mov
test
or
bound
or
std
inc
or
adc
push
ficoms
mov
and
mov
cmp
mov
hlt
mov
and
push
js
cltd
es
pop
int3
outsl
inc
dec
add
xor
mov
sti
cli
mov
out
sbb
aad
push
lcall
jmp
jo
cmpsb
ds
mov
enter
dec
lret
cmpsl
mov
jp
jge
mov
pusha
adc
adc
fsts
sub
jnp
inc
push
popa
fisttps
mov
xchg
jo
test
and
inc
fnstenv
or
scas
add
mov
push
into
add
xchg
mov
mov
cli
xchg
inc
or
mov
aad
into
or
repz
inc
or
aas
inc
jge
xlat
fimuls
xlat
sub
xchg
aam
outsl
add
cwtl
leave
lds
mov
in
sarl
dec
or
push
cmpl
xchg
in
cmpsl
mov
push
sar
ljmp
repz
ret
jge
std
inc
mov
testl
movsb
mov
xor
cmp
pop
hlt
push
sub
xchg
lods
mov
mov
lds
lret
or
test
das
in
pop
xlat
or
jmp
fidivrl
mov
nop
fs
mov
lret
sub
out
jge
nop
sbb
fwait
dec
sub
mov
jbe
and
inc
xor
and
cmpsl
aaa
fcompl
cmp
in
dec
mov
pop
adc
aas
lret
out
mov
jp
and
mov
out
ds
add
cs
and
test
imul
sub
test
sub
std
adc
sbb
lea
ret
xchg
and
outsb
sahf
mov
sbb
add
push
inc
mov
jle
das
cld
jecxz
mov
jg
cltd
sahf
inc
push
sub
jno
in
and
inc
jmp
aam
add
stos
jns
add
and
or
fbld
cmp
in
insl
mov
das
jo
and
js
popa
mov
test
sbb
loope
fwait
mov
ret
loop
mov
adcl
or
stos
int3
add
lret
cli
push
pop
popa
pop
dec
push
xchg
add
cmpsl
jl
out
cld
push
mov
cld
insl
inc
sahf
jne
inc
lret
push
adc
dec
mov
insl
jno
ja
addr16
and
cs
cli
repnz
addl
push
or
dec
insl
jo
cli
push
mov
nop
inc
jge
mov
jle
xchg
xchg
inc
lea
faddp
leave
mov
int3
cmp
dec
jge
push
or
and
into
jl
std
push
in
xchg
jmp
push
sub
test
out
dec
mov
mov
orl
int3
sarb
imul
cs
mov
scas
jg
and
push
shl
out
call
mov
les
mov
repnz
ss
cmp
in
das
cld
push
cmc
inc
pop
xor
jle
push
inc
cmp
adc
and
ljmp
dec
jne
push
push
xor
cmc
dec
lds
inc
xchg
jno
inc
inc
jo
std
pop
adcl
adc
test
repnz
fs
dec
jmp
jle
push
inc
lcall
rorl
pop
stc
addb
out
pop
rorl
jbe
fmull
pop
subb
aas
pop
lret
lds
xor
in
arpl
enter
jns
sti
shlb
sub
mov
inc
xor
dec
or
add
movsb
cmp
dec
jo
adc
cwtl
lock
adc
shll
mov
aad
mov
popf
lret
mov
lds
and
pushf
sti
push
insl
jne
mov
dec
nop
pop
mov
jle
or
fisttpl
and
je
and
sub
sbb
pusha
cmp
lcall
cmc
xchg
rcr
jns
xor
ret
add
insl
push
dec
inc
and
and
cmpsl
mov
mov
mov
cli
not
sub
cmp
push
dec
hlt
fdivrl
pushf
mov
xchg
lock
pop
aaa
xor
jmp
cmp
push
jp
sub
add
cld
mov
adcb
jecxz
loope
or
inc
pop
and
push
movsb
aas
xor
sahf
or
mov
xchg
mov
rcr
mov
data16
adcl
and
push
je
cmp
add
pop
cmc
aam
hlt
sub
pushf
adc
dec
nop
dec
shl
pop
nop
idivb
imul
les
nop
cltd
test
call
rorl
xor
das
cmpl
pop
cmp
adc
adc
sub
ljmp
or
scas
js
push
mov
bound
std
mov
xchg
lret
sub
ret
pop
rorb
mov
mov
or
lods
fs
call
push
or
mov
aas
inc
adc
sbb
sub
sbb
mov
popa
mov
pop
lea
xorl
pushf
rcr
in
jl
aad
jbe
out
push
or
mov
sbb
movb
insb
xchg
sti
aad
cmp
dec
dec
lret
sbb
xor
adc
jp
lods
lds
adc
sub
sbb
es
dec
xchg
or
daa
mov
ret
scas
inc
or
mov
test
dec
pop
pop
xor
mov
hlt
popf
out
or
jbe
mov
jno
add
aam
mov
or
in
sbb
fmul
xchg
xchg
sub
inc
jmp
loop
or
cwtl
jbe
data16
xor
xchg
iret
inc
xchg
mov
das
or
jne
mov
cli
mov
outsb
pop
fbstp
mov
mov
pushf
jnp
mov
movsb
adc
pusha
dec
sub
cmp
mov
dec
ret
mov
cmc
movsb
out
test
or
lahf
aad
insl
inc
or
fstpl
jle
adc
or
movb
lds
fnsetpm(287
or
mov
or
push
cwtl
pushf
pop
or
mov
push
sbb
pushf
mov
mov
sarb
inc
pop
and
dec
mov
push
fistpll
pop
xchg
icebp
mov
repnz
pop
arpl
add
int3
pusha
pop
sbb
jmp
inc
rcrb
ret
xor
fwait
ss
jb
inc
les
addr16
invd
mov
xchg
and
pop
test
and
xor
dec
fidivrl
pop
xchg
add
insl
sbb
sbb
lret
sbb
fs
xchg
lods
outsl
out
pop
sub
in
and
xchg
fisubl
or
mov
ret
jae
push
divb
ja
outsb
rcrb
clc
loopne
pop
mov
fsts
xchg
mov
sbb
sti
adc
mov
imul
popf
ret
xor
in
movsb
push
adc
mov
imul
jecxz
xchg
repnz
movsl
jle
test
add
ss
add
or
cmpsl
add
jl
inc
push
cmp
rclb
in
xchg
add
mov
cmp
sbb
xchg
lea
into
sub
and
and
mov
sbb
mov
mov
add
das
mov
mov
xor
int
mov
loop
scas
enter
push
add
daa
inc
add
mov
jg
sbb
mov
mov
mov
movsb
lret
pop
repz
aas
sti
xchg
xor
cmp
sarl
xor
mov
lock
mov
inc
fcomps
mov
push
scas
scas
pop
jbe
cmp
sbb
dec
pop
jmp
fwait
ljmp
mov
pop
mov
pop
fsubs
faddl
pop
jmp
popf
rolb
inc
in
mov
iret
fnstsw
adc
xor
add
or
stos
out
iret
mov
leave
les
xchg
lds
fsubl
repz
add
push
push
leave
sbb
js
fwait
andb
xchg
xor
insb
mov
push
inc
mov
adc
cmp
lahf
lds
sti
xchg
mov
push
aam
imul
fcmovnbe
rorl
rcr
push
or
add
mull
pop
lods
push
mov
sbb
out
xor
mov
push
mov
idiv
cld
pop
mov
push
inc
sahf
cmpsl
aam
ljmp
add
adc
clc
fimull
js
in
imul
std
ljmp
in
imul
sbbb
mov
loope
aam
jl
loop
popf
inc
jmp
bound
dec
jnp
dec
inc
enter
or
stos
add
or
dec
mov
sbb
add
dec
push
insb
mov
test
fs
xchg
dec
sub
imul
pop
roll
in
rcrl
mov
or
jg
xor
sbb
stc
adc
cmc
cltd
xchg
xor
ret
dec
mov
push
iret
jae
loope
pusha
lcall
push
adc
fisttps
sbb
push
xchg
in
rcll
cld
fmull
clc
mov
fsubl
loopne
dec
mov
sub
lock
pop
jnp
mov
and
sub
and
mov
push
xchg
bound
xchg
mov
int
jbe
rol
xor
adc
cmpsb
addr16
add
popa
or
mov
and
xor
es
lods
movsb
jnp
inc
xchg
jl
push
sbb
jmp
mov
sub
push
icebp
pop
mov
push
insb
in
out
mov
lret
pop
loopne
jno
in
jg
inc
iret
test
fiadds
jecxz
push
add
add
imul
xor
inc
xchg
pop
pushf
into
push
pop
adc
push
cltd
push
sbb
loope
pop
mov
xchg
sti
dec
decl
call
jp
movsb
sbb
leave
or
xor
pushf
fs
stos
mov
in
dec
inc
je
sub
and
jae
test
int
stc
dec
sub
push
inc
mov
out
aad
nop
mull
add
and
adc
int3
push
std
dec
add
sbbl
cmpsl
lcall
push
cmp
xchg
xchg
ret
push
push
dec
dec
dec
dec
xor
movsb
jno
push
sbb
out
imul
sbb
sahf
xor
adc
popa
fwait
cltd
xor
xchg
add
popa
push
push
adc
mov
inc
dec
fsubrl
enter
mov
icebp
aam
or
sbb
jle,pt
out
bound
jmp
xchg
push
add
out
sti
adc
andl
iret
in
push
mov
and
xlat
xchg
or
sbb
xor
lods
pop
xchg
lea
push
in
out
sahf
arpl
cli
jmp
and
jo
imul
xchg
js
addr16
repnz
push
lcall
dec
jne
ret
sbb
mov
xchg
pop
mov
push
lcall
lcall
mov
and
adc
das
ret
jl
out
ficompl
stos
xchg
push
movsl
push
sahf
pop
dec
cmp
test
js
addr16
loop
mov
mov
js
into
lret
add
repz
and
es
jno
dec
stc
dec
lea
add
es
push
adc
outsb
mov
push
mov
cmp
repnz
jle
add
xor
push
sub
mov
xor
cmp
es
insb
jo
mov
and
and
shl
movsl
popf
or
mov
sbb
mov
and
aaa
lea
push
and
mov
inc
mov
mov
das
push
lea
jno
ficoms
fucomp
daa
inc
sub
jo
das
mov
dec
les
mov
xchg
or
cmp
push
scas
ja
ret
xchg
sub
and
jae
adc
xorl
or
clc
cmp
cmc
sbb
pop
rcr
push
insb
mull
mov
fisubs
js
jno
jo
mov
adc
jle
pushf
dec
rolb
cli
lods
pop
mov
fdivl
testb
aam
ret
gs
jb
ja
sub
sarb
lock
aad
xchg
jb
xchg
fucom
mov
ja
dec
cmp
in
pop
dec
pop
cmp
inc
cli
sbb
shlb
sub
xor
mov
adc
aaa
lcall
es
inc
out
shl
and
and
jmp
adc
jg
push
push
sbb
push
sbb
add
inc
aas
lahf
and
jae
insb
mov
mov
adc
divb
out
leave
sti
xchg
imul
xchg
data16
sub
jnp
push
hlt
xor
jbe
cwtl
fwait
dec
popf
fwait
shr
lahf
ss
out
leave
leave
xor
fimuls
or
les
nop
add
outsb
pop
or
sbb
test
mov
int
lds
adc
dec
add
gs
push
mov
lahf
adcl
xlat
jl
scas
add
lds
ret
les
rorl
adc
mov
push
movsl
push
mov
daa
push
fidivl
das
cmp
test
addr16
fisttps
or
adc
mov
sub
mov
and
and
and
jge
das
ret
ljmp
pop
pop
out
popa
scas
mov
idivl
movsb
outsb
add
xchg
nop
add
cltd
inc
fstpt
xorb
mov
sbb
or
mov
mov
push
inc
cld
pop
jle
sbb
out
adc
loope
ss
xor
mov
cmp
mov
cmp
fwait
cmpsl
int
xorl
add
mov
enter
push
out
loope
xlat
push
pop
scas
push
xor
xor
cmp
mov
xchg
and
and
and
or
jecxz
or
pushl
das
stc
jno
cld
cmp
das
pop
dec
fildll
into
imul
xor
pop
sub
cwtl
je
sub
fwait
mov
adc
sbb
mov
lea
mov
lahf
mov
mov
jbe
fmul
ret
jmp
out
jbe
les
out
dec
scas
shr
es
mov
or
pushf
cmpsl
jno
jle
mov
add
inc
dec
aam
mov
ds
aad
mov
dec
int3
fstp
shll
pop
jae
jmp
lods
cmpsl
xchg
sub
jle
in
inc
aam
cmpsb
dec
mov
mulb
lcall
stos
repnz
mulb
or
inc
shrl
mov
in
bound
mov
test
xchg
push
adc
xchg
ljmp
rclb
adc
pop
or
jae
mov
dec
push
pop
in
sub
loopne
popa
jns
push
fcmovb
add
jecxz
xor
mov
inc
mov
stos
push
mov
js
or
mov
mov
and
sbb
pop
mov
testb
or
jge
insl
xor
out
loopne
call
mov
arpl
xchg
aam
add
xchg
add
mov
dec
pop
xor
ja
push
add
cmpsl
sbb
pop
cmpsl
addr16
icebp
fdivrs
mov
loop
and
xchg
adc
xchg
rcrb
xor
ja
push
enter
inc
cmp
bound
fimuls
pop
dec
mov
popa
jmp
cwtl
jne
mov
les
push
jl
push
popfw
scas
push
xorb
cmpsl
mov
out
sbb
rcll
lret
sbb
lcall
inc
dec
hlt
pop
mov
push
fucomip
outsb
xchg
mov
dec
add
outsl
nop
inc
cmp
imul
inc
inc
adc
pusha
jbe
outsl
rolb
fstpl
pop
imul
jns
cmpb
push
les
cltd
dec
cs
filds
pushf
or
cmp
push
jns
cmp
jmp
sub
mov
mov
xchg
push
in
out
push
rol
xchg
push
lret
cmpsl
addb
xchg
ret
jg
fsubl
cmp
scas
data16
idivb
cwtl
out
push
arpl
out
cmp
pop
adc
lret
outsl
dec
outsb
pop
insl
test
sub
cli
cmp
push
mov
sbb
mov
pop
mov
jb
jae
loope
inc
pusha
fisubrs
push
jnp
notl
loope
into
fimuls
pop
aam
imul
popa
nop
mov
xorl
out
xchg
aaa
and
ja
out
xor
adc
aaa
mov
shrl
addr16
or
out
pop
xor
or
in
or
stos
dec
add
subb
push
scas
cmp
jmp
dec
sbb
stc
push
jl
mov
dec
or
cmp
sub
sub
jle
les
dec
shrl
inc
aad
fnstcw
push
lret
imul
and
and
dec
ret
xchg
adc
jg
scas
fcmovnbe
dec
mov
repz
mov
aaa
inc
xchg
mov
inc
pusha
sbb
repnz
repnz
cmp
push
jle
sub
pop
push
or
roll
inc
fdivr
or
stos
hlt
dec
xor
mov
fisttpll
mov
sub
sbb
dec
jle
cmpsb
adc
mov
pop
dec
xor
nop
and
adcb
icebp
sub
pop
insl
rcll
or
inc
fwait
movsl
jb
vmread
lock
bound
and
add
ss
in
jmp
out
jns
push
adc
cmp
push
mov
stos
dec
stos
or
add
add
push
mov
insl
pushf
pop
mov
fistpll
add
data16
dec
pop
push
jge
jno
and
add
or
dec
inc
sub
and
xchg
lcall
push
sbb
dec
xlat
int3
sbb
pop
jnp
xchg
dec
les
cwtl
movsb
fwait
or
ret
dec
out
xchg
lret
jae
add
or
mov
xor
cmpl
cmp
int
jle
mov
jg
orl
push
outsl
cmpsl
cmpsl
das
sbb
mov
pop
mov
das
xor
test
insl
sub
pushf
xchg
lcall
mov
imul
fidivs
ljmp
cmp
stos
cli
sti
inc
lea
adcl
les
cmp
negl
fimuls
xor
test
es
cli
xchg
fdivrs
mov
leave
and
sbb
adc
dec
cmp
lahf
das
sbb
pushf
jbe
mov
inc
push
mov
mov
push
push
dec
je
adc
fistpl
mov
fsubrp
insb
sub
dec
aas
add
jae
inc
cmpsl
cmc
lock
setae
in
xchg
mov
cmpsb
in
outsl
inc
jno
jae
movsl
pop
pop
jo
jmp
out
or
xchg
inc
xchg
push
das
sbb
sbb
lods
dec
ret
aam
std
add
test
or
pusha
mov
movsb
adc
pop
daa
mov
adc
rorb
testb
stos
popa
sub
daa
cld
dec
push
or
add
into
xchg
pop
jmp
hlt
xor
mov
xchg
out
xchg
mov
dec
das
ss
wbinvd
ret
stc
or
pop
sub
jle
adc
pop
jle
mov
lret
pop
mov
xchg
repz
stc
push
and
aad
push
sbb
daa
inc
insb
pop
lret
fs
and
mov
pop
pop
dec
cmpsb
daa
pop
ja
loope
mov
add
mov
fbld
mov
arpl
cld
push
jmp
adc
adc
push
mov
leave
movsl
jge
push
mov
mov
add
mov
fdivrl
cltd
sub
idivl
pop
pushf
sbb
mov
and
or
jl
mov
movsl
xchg
pop
jne
pop
cltd
adc
out
imul
xor
jp
push
mov
jnp
lea
pop
div
mov
fisttpl
pop
test
out
int3
pop
cmpsb
mov
ret
adc
push
inc
or
pop
dec
imul
out
mov
fsts
out
ret
aam
push
cwtl
jo
icebp
outsb
repz
das
inc
and
iret
jl
cmp
xchg
orb
iret
popf
cmp
jmp
ret
inc
sub
mov
adc
sub
mull
pop
iret
outsl
push
cmp
gs
lahf
cltd
lret
push
sub
and
daa
lcall
mov
or
sti
push
cmp
pushf
fmull
mov
jbe
sahf
push
xor
outsb
pop
jge
js
add
sub
sub
push
cwtl
inc
roll
xlat
and
push
das
and
sbb
test
aad
loop
cmp
and
cwtl
fnstenv
test
cmpsb
rorl
js
jns
gs
push
push
sbb
xchg
sub
ds
shl
dec
push
pop
dec
std
sbb
cmpl
bound
into
lea
aas
stc
in
repnz
lahf
insb
push
push
addr16
clc
xchg
and
add
add
testl
push
test
inc
cli
add
mov
jae
push
xlat
add
jp
loop
sub
scas
mov
mov
lea
and
hlt
out
pop
xchg
das
fstpt
mov
jmp
fs
adc
clc
sahf
mov
or
cmp
popf
pop
jb
jmp
push
cmp
xchg
mov
push
outsl
lahf
lock
mov
inc
mov
ret
stc
lea
int
iret
pop
es
jg
cmc
jg
inc
fstl
inc
mov
xor
fsubl
push
inc
cwtl
cmp
lock
or
imul
jmp
gs
push
dec
jl
jle
push
mov
je
test
mov
xchg
mov
add
sahf
pushf
insl
sub
mov
into
inc
aas
or
inc
pop
xchg
jns
lret
gs
repz
lret
andb
out
dec
movsb
leave
fisubrs
pushf
pop
outsb
cmp
and
je
push
adc
mov
mov
neg
cmc
add
loop
dec
xchg
adc
pop
dec
push
jns
out
lahf
int
push
pushf
out
outsb
inc
sbb
out
jle
icebp
xchg
push
aam
test
xchg
repz
adc
adc
imul
imul
mov
sbb
mov
xchg
notl
fmull
insb
repz
fs
add
push
in
xchg
mov
fcoml
cmp
sub
cmp
add
movsb
cli
pop
fisubs
push
fs
adc
stos
loop
add
icebp
xorb
add
inc
lret
icebp
xor
fcomps
pop
sub
iret
push
and
adcb
adc
and
lret
fidivs
out
cmpsb
push
jp
repz
rolb
sub
cld
jg
jge
movsb
test
cmova
mull
dec
fsubs
jae
lcall
pop
jge
lods
mov
add
xor
ss
fld
sarl
inc
jb
jmp
fcoms
jge
in
mov
rcll
aas
and
xor
loop
inc
psubsw
stos
jle
sbb
stos
mov
cmc
add
dec
fwait
in
pop
cmp
mov
outsl
sbb
fmull
dec
enter
xchg
xchg
xchg
sbb
xchg
push
adc
lcall
push
and
adc
ja
loop
mov
and
pop
bound
jmp
cmp
out
jecxz
imull
jnp
test
fs
es
mov
push
out
jno
xchg
cmp
cmp
add
and
mov
xchg
pusha
jnp
sub
lods
movnti
jecxz
sarl
jno
ljmp
arpl
add
test
sahf
cwtl
lahf
and
jae
dec
into
sub
mov
out
mov
xchg
xchg
out
cmpsl
testb
ret
gs
jbe
or
adc
sbb
outsl
fisttps
jle
inc
xor
dec
adc
cli
inc
mov
and
dec
inc
push
mov
fwait
xor
xchg
out
jp
test
mov
add
mov
lea
cmpsb
inc
popf
aaa
pushf
negb
cmp
stos
jb
pop
ja
mov
xorb
cli
test
sti
sbb
out
mov
add
arpl
sbb
mov
mov
cld
dec
rorl
sbb
rep
sbb
push
lods
sub
jno
adcl
les
inc
loopne
jo
jo
fcmovne
pop
inc
add
add
xchg
jno
xor
adc
push
adc
push
push
mov
push
cwtl
dec
pushf
ret
lcall
inc
mov
fdivrp
sub
push
ljmp
rclb
rolb
pop
mov
mov
add
pop
mov
jg
mov
fldt
out
sbb
mov
sbb
mov
in
push
sub
push
pushf
jbe
aas
pop
push
das
gs
dec
and
addr16
add
fwait
xor
mov
jb
loop
pop
mov
bound
lods
rolb
and
nop
jecxz
setne
mov
lods
cmp
jge
lods
or
sti
aam
sbb
lea
cli
add
es
lea
sar
dec
and
test
mov
xor
shrb
xor
add
add
in
insl
iret
stos
in
xor
add
push
dec
mov
jmp
fstl
add
adc
insb
int
xor
mov
cmp
test
jo
and
dec
jbe
cmp
mov
sbb
add
and
pop
push
out
out
hlt
inc
pop
arpl
push
pop
scas
inc
scas
jns
sub
xchg
mov
mov
pop
sbb
sahf
mov
pop
pop
stc
mov
out
add
das
stos
imul
sub
xchg
cli
out
lret
sahf
pop
jp
hlt
jl
mov
inc
xchg
xchg
ja
push
mov
adc
lahf
outsb
adc
mov
xor
daa
xor
popa
mov
popa
es
clc
popf
dec
jg
cmp
into
outsl
jecxz
and
xchg
or
xchg
and
into
cld
adc
addl
stos
fs
or
aas
pop
repnz
or
shrl
fsubrl
ds
pusha
adc
adc
ja
push
nop
or
dec
insl
jmp
push
fsin
aam
loop
mov
adcl
inc
bound
loopne,pn
jns
out
mov
adc
pop
addr16
jg
sub
mov
pop
sub
adc
ret
lea
jge
fucom
xchg
or
cli
call
mov
or
shll
mov
xchg
and
add
cmpsl
mov
adc
or
stos
fiaddl
and
in
imul
in
cmpsl
xchg
movsl
inc
pop
je
adc
ror
sbb
shrl
cmpsb
ja
adc
jbe
push
fistl
mov
mov
cli
mov
push
popa
and
inc
jae
inc
jo
xor
cltd
fiadds
xchg
pop
out
ret
pushf
rol
push
scas
rcl
mov
mov
cli
xor
mov
fadds
xor
vcmpps
aad
sub
scas
xchg
mov
imul
adc
in
sarl
lods
pusha
mov
mov
mov
clc
fisubl
fsubrs
sub
sbb
out
data16
in
int
pop
lock
dec
mov
pop
push
fwait
test
pop
mov
lret
xor
dec
in
or
fnstenv
sub
subb
and
fcompl
test
scas
sub
mov
inc
fld1
jae
xor
aad
xor
out
pop
mov
sbb
nop
fwait
rcl
fwait
repnz
xchg
push
in
add
insb
sti
ret
add
push
fbstp
nop
pop
insl
xchg
lret
dec
lds
aaa
inc
les
add
push
mov
cmp
xchg
or
sbb
xchg
dec
arpl
repz
scas
push
sub
mov
mov
push
pushf
outsl
rorb
cmp
dec
cs
jle
cli
push
mov
inc
dec
and
fildl
or
fsubl
xor
add
inc
or
fimull
and
out
mov
push
sub
lcall
push
scas
enter
shlb
std
fiaddl
push
jge
xchg
sbb
in
adc
lock
dec
lahf
xor
pop
inc
and
les
fiaddl
push
fimuls
jnp
or
inc
pop
pop
int3
fmull
cs
addr16
jb
rcll
fcmovb
or
push
das
mov
fnstsw
fimull
inc
daa
sub
mov
push
jl
pop
repz
ror
aam
dec
jp
lret
pop
cld
scas
filds
inc
inc
sub
sub
jp
mov
inc
cmpsl
movsl
popf
mov
inc
mov
scas
imul
mov
fs
or
sub
aam
jmp
shrl
jge
popa
xor
pop
add
jge,pt
aad
xor
mov
jmp
sub
sub
pop
stc
mov
mov
out
push
popf
pop
lret
xor
jecxz
cmp
movsb
inc
pop
sub
push
test
inc
fidivrl
cmc
xchg
sbb
cld
sub
lods
xchg
scas
xlat
inc
xchg
push
sahf
ret
sbb
ljmp
scas
sub
dec
sbb
imul
mov
divl
push
ja
adc
lods
adc
and
or
std
jo
mov
or
testl
add
es
pop
push
iret
fistpll
adc
in
loop
mov
loop
sub
xchg
push
adcb
jl
push
fisubrs
inc
addr16
adc
daa
xchg
or
fists
mov
xchg
pusha
cmp
adc
fisubrs
in
es
sbbb
and
call
push
fcmovnu
dec
mov
in
lret
pop
mov
addl
xchg
imul
sarl
xchg
loope
add
divb
add
push
call
and
sub
and
and
ret
ror
jb
inc
dec
sbb
call
push
cmpsl
das
into
sbbl
inc
pop
test
insl
idivl
or
sub
sbb
cld
adc
jno
inc
pop
inc
outsl
mov
roll
loopne
pop
fwait
movsl
push
inc
jae
push
push
aam
sbb
fildl
xchg
out
ret
stc
add
enter
mov
add
cmp
jns
call
cmp
arpl
stc
cmpsb
mov
xchg
dec
push
hlt
xchg
stos
fidivl
dec
mov
loope
repz
sub
dec
iret
out
pop
sub
movsl
cli
mov
enter
sbb
sub
fsts
shl
fcmovnbe
addl
add
sub
das
sub
adc
loopne
pop
cmp
hlt
rol
or
dec
std
icebp
loope
scas
mov
cmp
cmpsb
mov
in
add
sar
scas
fimuls
sbb
or
mov
scas
xor
pop
lahf
std
push
out
dec
xadd
decb
pop
sbb
loopne
addb
test
sbb
js
cmc
jmp
addr16
scas
aad
out
jmp
inc
nop
imul
push
notl
fidivs
loopne
mov
insb
dec
in
enter
enter
stc
jmp
lods
jns
fs
inc
stc
lds
push
lcall
lock
pop
repz
push
or
rcl
push
cmp
add
je
pop
sub
mov
adc
cmp
push
pop
jns
stos
subl
pop
pop
jo
push
clc
cli
data16
sbb
sbb
aas
cli
jge
or
push
adcb
pop
cli
push
jne
stos
mov
mull
cmp
cs
sbb
push
imul
mov
jo
sub
pop
scas
gs
and
cli
rcr
cwtl
mov
repz
push
and
or
mov
xchg
xchg
int3
jb
xor
repz
in
mov
jo
sahf
sub
pop
dec
add
in
ret
repz
jne
add
pop
xchg
mov
stc
inc
push
push
fists
ret
adc
push
sub
iret
mov
dec
mov
inc
mov
addr16
jmp
loop
inc
adc
push
ljmp
sub
push
add
dec
je
hlt
out
mov
scas
or
filds
clc
lahf
test
pop
and
push
jb
daa
lret
test
xchg
dec
fidivrl
test
nop
loope
cltd
push
rcr
jecxz
mov
icebp
aam
lahf
add
enter
xor
push
xlat
xchg
cli
cmp
jno
aad
mov
fnop
and
sub
test
inc
pushf
mov
addr16
mov
and
outsb
shl
mov
popa
jecxz
scas
adc
xchg
repnz
mov
mov
and
repz
and
push
fbld
dec
loop
iret
add
adc
iret
dec
sub
je
loop
lret
sbb
repz
xchg
jg
bswap
push
aam
inc
mov
insb
hlt
jmp
icebp
pminsw
gs
div
pop
push
daa
dec
push
mov
pushf
fnstsw
sbb
cmp
sbb
or
fdivrl
filds
or
mov
jns
cmp
int3
xor
and
out
jecxz
imul
mov
stc
cmp
or
dec
xor
cltd
test
xchg
push
jnp
jecxz
sbb
adc
jns
or
into
in
dec
or
mov
sbb
mov
xor
mov
dec
gs
and
push
xchg
push
jle
xorl
imul
push
adc
xchg
pop
lods
loope
repz
mov
cwtl
pop
insb
movsl
inc
in
or
xor
test
inc
push
lcall
addr16
xor
jno
sub
push
cmp
pop
rcrb
outsl
cli
inc
es
sar
add
leave
jg
mov
and
inc
and
test
mov
out
clc
inc
jo
sub
push
inc
mov
loopne
mov
dec
sub
cmpsl
mov
sbb
jo
adc
rcrl
in
stos
mov
aam
mov
mov
xor
cltd
xchg
pop
xchg
xchg
cmpsb
mov
mov
call
f2xm1
insl
sbb
int3
movsb
decl
cltd
jne
notb
fnstsw
cmp
imul
xlat
add
outsb
outsb
or
in
mov
fs
js
movsl
mov
fs
cmp
andb
adc
cmp
cmp
lret
lcall
add
mov
jmp
popa
add
sbb
in
adc
push
mulb
bound
dec
sti
aad
mov
xchg
ss
movsb
rcl
or
push
xchg
test
pushw
sahf
xor
cmp
insl
movsb
movsl
mov
enter
in
pop
xor
rcr
loop
mov
incl
cmpsl
mov
jo
mov
cmpsb
mov
outsb
imul
scas
mov
or
dec
jl
sbb
mov
xchg
pop
lret
jge
inc
or
sub
pop
icebp
and
stos
pusha
xchg
pushf
arpl
pop
mov
call
dec
or
dec
cmp
xor
xor
dec
stos
add
mov
xor
outsb
les
push
sbb
fs
adc
cmp
jle
xor
stos
sub
xchg
out
in
loop
jne
pop
sbb
lds
inc
and
inc
cmc
xchg
sti
aad
lret
movsb
and
xor
or
cmp
xchg
xchg
outsl
test
popa
loopne
add
sub
jle
dec
cmp
pop
dec
xchg
mov
jge
dec
ds
mov
jp
and
insb
adc
stc
adc
fs
sbb
mov
ja
push
cmp
jno
paddw
jge
lret
nop
cmp
sub
cmc
shll
scas
ja
fildl
lcall
add
fwait
int
xlat
lods
add
mov
fcomp
fdivrl
mov
pushf
jbe
sbb
dec
aam
bound
adc
mov
ret
push
inc
lret
subb
movsl
adc
jb
scas
rcrl
mov
rolb
xor
xchg
inc
jne
hlt
mov
orb
mov
jp
mov
push
push
clc
xchg
sti
les
cmp
jecxz
sub
push
and
call
ss
push
pop
mov
movsl
add
iret
and
jmp
outsb
mov
shll
jmp
mov
loopne
xorb
std
adc
xchg
mov
inc
scas
lea
mov
imul
js
pop
cmp
sbb
and
and
or
test
fidivrl
inc
mov
mov
std
insl
adc
outsb
cltd
cmp
mov
lahf
and
dec
iret
mov
enter
mov
pushf
clc
sti
or
mov
add
push
pop
or
xchg
into
maxps
inc
out
jno
int3
cmpsl
push
mov
aad
daa
stc
movsb
sbb
xor
int3
scas
outsl
dec
cmp
pop
mov
xlat
loop
insl
adc
cmp
ljmp
mov
cmp
mov
or
in
pushf
outsl
dec
stos
repnz
sub
mov
sbb
bound
movsl
cwtl
outsl
out
icebp
or
nop
mov
fcomip
popl
fcomip
rcr
dec
mov
pop
mov
sti
mov
jbe
sbb
adc
adc
les
adc
and
dec
lds
adc
fisttpll
in
and
inc
inc
mov
jecxz
fistpll
add
fucom
ficoml
push
adc
sub
mov
jno
loop
scas
xchg
iret
or
pop
cli
add
outsb
dec
xor
cltd
push
lret
shl
imul
fucomp
cmc
lock
inc
and
outsl
lods
rcll
xor
jno
xchg
ret
mov
mov
les
in
lds
jo,pt
popa
adcb
jae
pop
mov
mov
inc
outsl
pushf
lcall
mov
cmpsb
stc
stc
push
lods
or
and
in
lahf
addr16
sbb
cmp
cltd
and
rorb
sarl
cmpsl
pop
mov
add
je
xor
xchg
dec
push
push
fisubrs
mov
aam
jp
pushf
iret
add
dec
sub
test
fnstsw
add
movsb
mov
push
or
aam
ror
stos
xor
push
inc
test
outsb
xor
incb
orb
movsl
not
mov
mov
fstl
data16
mov
xchg
in
cs
std
cmp
fcom
sub
and
fcoms
push
ret
jo
xchg
and
cs
xchg
or
pop
or
outsl
out
mov
lods
pop
lds
xor
mull
leave
add
in
cwtl
bound
mov
cltd
test
pop
mov
cmp
arpl
movb
jb
fwait
mov
stos
aam
mov
sbb
adc
in
mov
mov
imul
cs
adc
add
push
iret
xchg
popa
popa
sbb
mov
adc
sahf
pop
lret
flds
lcall
jecxz
out
xor
out
mov
sub
push
or
mov
ficoml
or
or
cmp
jne
fwait
test
ficomps
int
int
inc
sbb
xchg
or
jl
adc
loope
push
fldcw
pop
lret
fneni(8087
adc
adc
imul
cmpsl
sub
call
shll
push
sarb
test
mov
mov
std
scas
or
cmp
sub
add
add
cmpsl
stos
pop
inc
push
fwait
mov
lea
xchg
int
xlat
cmp
cmpsl
push
pop
in
jmp
in
jmp
outsl
push
inc
and
inc
adc
push
adc
sbb
adc
adc
mov
ss
xchg
inc
mov
dec
testl
jp
outsl
sbb
xchg
sub
andb
ficomps
dec
xor
inc
jg
cmp
lds
push
ffree
jp
sub
popa
out
xchg
sbb
add
sbb
mov
mov
cmp
clc
aaa
rcll
add
pop
mov
fs
add
jmp
jl
dec
pop
out
xor
xchg
roll
dec
mov
push
add
shll
xchg
shlb
in
dec
inc
jo
inc
into
movsl
ficomps
xchg
test
mov
pop
jne
jo
int
repz
lea
ss
xchg
ja
cli
loopne
out
sahf
xor
mov
imul
fs
repz
sti
dec
repnz
push
mov
cmpsl
mov
cmp
cmp
lods
movsl
xchg
cmc
and
test
shlb
push
add
and
mov
mov
daa
or
push
stos
mov
mov
cltd
std
leave
push
out
push
movsl
cmpsb
adc
int3
int3
gs
and
je
mov
xlat
into
lcall
xor
adc
fadds
sub
outsl
mov
inc
ja
adcb
loop
in
adc
aad
xor
loop
jbe
mov
jmp
add
aaa
xchg
and
mov
scas
sti
mov
fisttpll
xchg
loop
shrl
int3
cwtl
mov
ss
es
data16
ss
das
dec
pop
dec
add
and
test
or
jno
jl
pop
and
cmpsb
xor
xchg
xchg
dec
insb
dec
or
xchg
out
xchg
pop
jmp
divb
adc
aad
ja
dec
je
mov
push
or
call
and
pushl
xchg
cld
push
push
lds
pop
push
or
xchg
mov
stos
jns
cs
pop
in
fisubs
or
inc
jno
push
js
cs
or
push
in
push
iret
pop
hlt
inc
pop
sahf
test
or
xchg
outsl
stos
dec
push
test
adc
pop
fs
cmp
inc
sbb
mov
pop
fimull
outsl
xor
inc
xchg
movb
pop
loop
push
xor
out
fidivrl
cld
jmp
imul
aad
cmpsb
scas
add
aam
fcmovne
add
push
aad
lret
inc
jb
sbb
add
xchg
in
clc
fs
push
sub
cmpsb
add
fwait
xlat
pop
inc
cmp
xor
rep
or
and
mov
sarb
fistl
jmp
ficoml
loope
and
lcall
cltd
dec
mov
inc
sbbb
into
and
xchg
andl
jb
scas
add
insb
cmpsl
enter
pop
aam
loop
movsl
hlt
pop
lcall
lcall
inc
shrb
into
daa
adc
cmp
push
scas
test
ljmp
lock
lret
push
mov
or
out
test
jae
pusha
ds
jb
in
jns
add
rcl
idivb
mov
cld
nop
hlt
inc
icebp
scas
jbe
fisttpl
mov
push
in
fstpl
ret
mov
aam
in
leave
and
push
lods
cmp
dec
aad
jle
dec
dec
xlat
incb
or
add
pop
sbb
aam
add
lock
sbbb
sahf
js
movsb
shl
inc
fidivl
ljmp
push
fbstp
or
push
add
imul
addl
or
sbb
cmpsl
or
addr16
inc
stos
xchg
xchg
test
es
cwtl
lods
dec
pop
xor
jb
lods
std
mov
shlb
sub
ror
mov
pop
xchg
adc
push
pop
dec
out
add
or
and
jge
stos
out
xor
js
push
scas
sub
mov
xlat
imul
mov
mov
out
or
shll
lret
adc
push
icebp
outsb
lahf
xor
mov
cltd
and
inc
outsb
xchg
inc
addl
inc
and
or
add
push
dec
xchg
out
es
repz
push
pop
mov
dec
adc
and
add
je
add
cmp
add
push
xor
icebp
sub
push
inc
scas
mov
ffreep
xor
bt
pusha
daa
xor
cmpsb
xchg
or
jae
xchg
xor
add
inc
scas
xchg
sub
dec
iret
dec
mov
in
and
in
test
adc
or
sub
push
mov
out
jno
mov
arpl
enter
xchg
or
loope
test
insb
inc
push
testl
pop
push
test
stos
mov
and
cmc
cmp
adc
jge
aaa
jl
sub
sub
outsb
adc
mov
stos
loop
mov
test
pusha
sbb
int
or
sbb
test
imul
jno
dec
rcr
dec
insl
push
repz
inc
jae
stos
fs
fs
hlt
push
aad
fidivl
out
inc
push
push
add
cmp
andl
js
pop
shrl
roll
sbb
out
cld
add
add
pop
dec
add
add
out
mov
and
cmp
mov
push
es
pop
lcall
mov
cmp
xchg
fwait
push
rorw
sti
outsb
popf
cmpsb
jg
divl
aas
je
xor
jo
mov
dec
pop
xchg
xor
mov
cld
mov
pusha
cs
jns
adc
jle
mov
loop
add
aam
lret
rolb
iret
scas
clc
mov
inc
leave
in
sub
mov
cmpl
iret
sub
pusha
popa
in
addr16
sbb
mov
sbb
add
pop
mov
cltd
fs
xor
adc
push
pushl
repnz
xchg
nop
jne
pop
push
sbb
mov
jle
and
cmp
jle
pop
arpl
push
test
loopne
and
xor
push
sbb
enter
lret
push
cmp
loop
xchg
sbb
jge
jne
and
mov
xor
dec
fists
popf
stos
divl
fucomip
das
pop
ret
push
lods
cs
sbb
push
mov
sbb
pop
sub
mov
jne
lea
das
push
pusha
pop
cli
cmp
mov
jmp
psllq
push
xlat
mov
push
fstpl
aam
repnz
adc
cli
inc
mov
pop
jle
iret
fdivr
shll
je
push
lret
xchg
aas
je
pop
enter
and
sbb
stos
hlt
pop
mov
repnz
xor
in
jge
xorl
push
xchg
jmp
repz
test
in
out
stc
pop
mov
ss
mov
lock
bound
sub
dec
popa
xor
and
test
mov
cmp
push
ret
add
call
dec
test
add
test
dec
lods
mov
hlt
mov
cmp
inc
or
jle
cmp
iret
jle
and
inc
gs
xor
mov
sub
out
ret
stos
orl
int3
aaa
push
cli
lds
outsl
lret
inc
fiaddl
lahf
test
pop
inc
mov
loope
imul
mov
ret
inc
xchg
in
mov
sarb
mov
pusha
sub
in
dec
and
fimuls
out
add
push
cs
inc
sbb
test
adc
jg
mov
fs
sbb
pop
jae
lahf
mov
xchg
cmp
jl
inc
mov
icebp
fwait
enter
cmp
dec
xlat
ja
xlat
push
mov
sti
sub
inc
jo
ds
popa
pushf
ljmp
popf
add
inc
xlat
add
js
dec
mov
sarb
fidivrl
sub
jno
xchg
and
cld
mov
sub
cmp
dec
cmp
sti
lds
jb
push
cmovs
cmpsb
inc
or
mov
loope
daa
add
xchg
dec
dec
pop
push
pop
stc
mov
sub
dec
iret
ficomps
xor
add
jge
ss
dec
inc
xchg
jns
mov
add
pop
jns
popf
rcrb
out
int
ret
xchg
mov
cmpsl
inc
xchg
repz
out
int
fs
cmc
in
imul
cld
gs
adc
xlat
cmp
out
mov
push
mov
xor
fs
and
xor
jno
dec
sbb
negb
xchg
lret
int
push
mov
pop
lcall
mov
xchg
and
cltd
inc
or
fisttps
mov
icebp
loopne
test
pop
sub
mov
xor
ja
or
pop
std
xor
dec
cmp
dec
pusha
mov
fwait
jno
movsl
scas
mov
stos
mov
mov
mov
lret
and
xchg
sbb
cwtl
mov
stos
sti
lret
adc
pushf
scas
mov
and
jae
dec
pop
das
mov
or
aad
stc
push
xchg
inc
mov
lret
sub
jl
scas
test
mov
pop
je
xor
icebp
and
loop
mov
jnp
lret
adc
mov
jmp
dec
sub
in
movsb
incb
inc
sub
faddp
into
pop
push
push
aam
and
pusha
dec
gs
rol
fnsave
sub
nop
jp
movsb
cmc
stos
shll
fistpll
or
dec
jp
jbe
xlat
inc
lea
push
cmp
rcrl
push
and
xchg
cwtl
and
mov
enter
xchg
pushf
sub
outsb
jl
out
xchg
popa
and
test
mov
aam
adc
mov
pop
outsl
lods
ret
inc
pcmpeqd
push
dec
jg
mov
lds
push
push
jnp
sbb
mov
jl
test
lcall
jb
lret
ja
les
jne
xor
ret
int3
movsl
movsb
imul
adc
movsl
sub
sarl
pop
fistpll
mov
inc
pop
cmpsl
stos
mov
daa
dec
jecxz
daa
inc
mov
mov
adc
mov
filds
pushf
cltd
ja
fwait
mov
mov
mov
out
andb
in
mov
mov
adcb
dec
data16
add
pop
aad
test
and
xor
shll
push
mov
push
std
imul
hlt
dec
daa
sbb
or
daa
into
out
imul
cmovne
enter
arpl
popf
lock
dec
xchg
xor
out
mov
loope
daa
lret
pop
scas
fistpll
cmp
rorl
push
fdivs
shll
pop
addb
xchg
test
jle
pusha
test
in
pop
fisubs
xorl
adc
jle
insl
aad
ds
cli
xchg
push
mov
push
js
fstpt
sbb
jae
xor
jmp
ret
cmpb
repz
pop
cmpsl
aaa
mov
pop
fs
nop
fstl
pop
mov
sbb
push
out
enter
cld
out
sub
sbb
cmp
jo
fimuls
repnz
loop
aam
xchg
mov
mov
jnp
push
cmc
adc
insb
dec
lahf
and
shl
outsl
cmp
lods
movsl
sbb
ret
push
and
add
daa
stc
push
nop
dec
pop
jp
les
inc
sbbl
jns
pop
shll
std
sub
inc
rcll
lds
cltd
mov
aas
cs
cmp
push
lods
out
loop
ja
inc
sbb
cmp
dec
and
test
push
out
imul
jp
call
push
lahf
inc
adc
sbb
lods
xor
fsts
cmp
mov
aas
mov
add
push
pop
stos
aam
movsl
pop
jbe
push
sti
gs
iret
inc
dec
xchg
sub
test
xor
push
inc
lahf
clc
pushf
or
outsl
sbb
cmp
bound
sub
int3
push
and
cmp
rcll
jecxz
pop
mov
out
enter
into
addb
arpl
dec
push
jae
jmp
inc
out
jg
lret
inc
jmp
sbb
aas
js
xchg
loop
cwtl
mov
icebp
mov
flds
push
push
lcall
and
in
fstpt
cmp
sub
sahf
add
filds
pop
jp
mov
dec
add
mov
cs
fs
push
adc
loop
shll
and
loopne
stos
xor
je
jbe
repnz
popa
jle
test
xor
xor
scas
xor
loop
rcrl
das
xor
jmp
push
xor
mov
nop
pop
dec
mov
pop
sub
pop
popa
fstpl
jne
outsl
push
stos
xchg
sub
push
add
lea
jbe
scas
mov
rcrb
ja
aaa
dec
data16
push
lcall
imul
rclb
add
rcrb
leave
cmpb
push
pushf
pop
stos
mov
popa
sub
gs
pop
mov
rclb
subl
sbb
stos
adc
ret
jnp
sti
fistpl
mov
cmp
pop
jno
leave
and
pop
test
push
aam
push
les
mov
mov
jmp
jae
imul
pop
hlt
xor
lea
stos
repz
ret
test
repnz
scas
in
scas
out
fstpl
scas
and
lahf
std
call
xor
lock
cld
sub
cmp
shrl
mov
sti
push
wbinvd
imul
mov
cltd
pop
inc
jns
inc
mov
ret
pop
or
stos
xchg
push
ss
dec
jae
push
xchg
fadds
jo
add
icebp
cmp
int
rol
or
jge
cmpsl
dec
xchg
add
adc
pop
xchg
scas
add
test
adc
sbb
repnz
pop
fwait
call
adc
sub
loop
cmpsb
test
jo
movsb
ds
inc
out
ret
push
mov
push
xor
lret
push
dec
pop
loopne
xor
js,pt
xchg
or
xor
push
in
add
xchg
dec
stos
cmpsb
push
notb
jl
imul
int
bound
roll
in
insb
in
dec
std
push
mov
adcl
js
test
sbb
call
mov
add
mov
fnstenv
test
and
or
int3
sarb
xor
xchg
cwtl
stos
adc
sub
and
adc
repz
mov
lods
xor
loopne
xor
pusha
lcall
push
adc
shll
xor
mov
mov
inc
push
stos
in
pop
or
clc
stos
xchg
fs
push
push
pop
aas
sbb
out
push
popf
or
hlt
mov
scas
jmp
mov
xchg
mov
stos
ja
jle
add
out
faddl
mov
pop
pop
test
or
testb
cmpsl
xor
push
cwtl
stos
adc
push
pop
aas
xchg
push
pop
and
adc
sbb
in
or
pop
out
mov
ljmp
jae
setl
xor
int
or
pop
or
cltd
aam
orb
push
dec
or
insl
les
pusha
push
jne
je
data16
lahf
cmp
and
push
mov
fs
inc
cmove
enter
xchg
ja
ret
xchg
repz
push
in
popf
adc
mov
mov
dec
enter
inc
lret
cmpsl
jmp
add
clc
or
push
cmc
hlt
les
mov
xor
jle
inc
xor
enter
scas
xor
mov
outsb
adc
test
xchg
notl
outsl
popa
data16
mov
xchg
adc
add
out
fwait
inc
xor
ret
push
cwtl
ret
mov
rcrl
ficompl
inc
pop
test
jno
jecxz
stc
pusha
ficoml
sbb
out
cmp
in
mov
cmp
xchg
push
sub
jl,pn
daa
pusha
push
sahf
add
faddl
ret
mov
adc
jl
jecxz
jae
mov
inc
fdivrl
mov
and
inc
pop
stos
cltd
icebp
adc
jo
out
cmp
and
aas
pop
fnstenv
pop
jno
aad
fisttpl
ljmp
cli
fnstenv
mov
insb
out
fwait
stos
adc
mov
rorl
out
movsb
add
add
push
or
mov
lcall
lahf
cli
jl
scas
scas
ret
mov
cmc
mov
call
es
mov
add
popf
push
fwait
cwtl
xlat
out
add
xor
gs
bnd
lret
mov
sbb
fldcw
ss
mulb
cmp
add
dec
mov
cmp
out
cmp
or
inc
inc
andb
ret
loope
cs
insl
mov
adc
mov
lret
cs
int3
pop
dec
clc
scas
pop
arpl
in
mov
dec
std
call
popa
inc
adc
pop
sub
cmpb
sub
insl
pushf
aad
mov
push
or
popa
lcall
dec
pop
lcall
adc
push
mov
insl
pop
sub
lret
iret
cld
aaa
cs
sbb
mov
mov
lret
cld
shl
and
fwait
fs
inc
ljmp
adc
cmp
add
cmpsb
push
sub
mov
lahf
addl
mov
add
mov
fwait
mov
xor
bound
loop
cltd
or
cld
nop
fistps
iret
cld
inc
mov
lds
mov
leave
inc
mov
sbb
int3
or
into
dec
fsubl
mov
call
pop
shr
xor
lds
lods
add
out
push
push
lcall
sbb
sub
mov
dec
xchg
mov
mov
sub
jg
adc
and
clc
push
cmp
movsb
aaa
pushf
test
xchg
pop
adc
adc
dec
stc
or
jl
je
aam
or
sbb
mov
dec
faddl
xchg
xor
es
jp
insb
sbb
lds
je
out
stos
shll
mov
enter
cmp
xchg
enter
mov
sub
jns
sbb
cmpsl
iret
mov
lock
mov
mov
testb
fsubrl
push
push
push
lret
sbb
lods
mov
popa
enter
push
mov
idivl
aad
stc
xor
push
or
sub
scas
mov
pop
ficomps
xchg
mov
mov
mov
sbb
adc
lret
cmc
pop
mov
xchg
testb
jecxz
pop
jbe
jge
repnz
inc
mov
mov
push
sti
or
pop
aas
fdivl
mov
push
xor
sub
int3
cli
sbb
jnp
and
pop
xchg
jno
imul
rcll
outsl
pop
xor
and
mov
sub
mov
and
xchg
sbb
xor
cmpsl
xor
addr16
cmp
mov
push
cltd
mov
sbb
lea
loopne
inc
imul
scas
lods
loopne
mov
add
push
mov
fisttpll
fwait
mov
test
xor
mov
sbb
jae
mov
pop
adc
push
inc
iret
add
icebp
aad
in
cmp
lock
loopne
mov
pop
dec
add
inc
mov
pop
sarb
and
and
das
jg
lret
out
int3
sbb
pop
test
pop
fldl2t
mov
jbe
cs
mov
push
aas
add
cs
arpl
push
test
aas
xlat
push
shlb
pop
call
inc
je
dec
test
sbbl
sub
cmpb
xor
sub
adc
mov
mov
sbb
cltd
cld
inc
clc
addr16
inc
push
xchg
clc
mov
pop
cmc
mov
pop
mov
movb
dec
lods
push
lret
pop
test
add
cmp
gs
mov
push
fldt
adc
fcmovne
repz
cmp
xor
ljmp
xor
mov
dec
xor
ror
mov
ficoml
pushf
aam
inc
mov
in
clc
jbe
mov
pushf
sbb
add
inc
leave
loope
hlt
pushf
ljmp
or
cld
inc
shll
repz
sub
scas
pop
and
jb
nop
xchg
rcrl
add
sub
les
enter
xchg
rolb
pop
adc
in
mov
mov
mov
bound
adc
and
hlt
mov
or
xorl
cmp
mov
clc
mov
xchg
into
imul
xor
adc
pop
mov
inc
sbb
icebp
pop
xor
and
lret
mov
dec
xchg
pop
jmp
inc
cmp
subl
dec
stos
jae
or
cmp
mov
data16
stos
inc
enter
iret
pop
xor
dec
fistps
xchg
sahf
pusha
faddl
inc
cltd
push
sub
pop
lock
movsb
mov
sub
out
fsubrs
movsbl
jne
movsb
sahf
mov
insb
mov
filds
jae
jno
nop
inc
or
add
push
shlb
sub
and
stos
mov
inc
xor
nop
loop
inc
jecxz
test
in
iret
jl
mov
std
cmp
mov
inc
lods
arpl
mov
jecxz
jne
pop
xchg
xchg
inc
jno
ret
adc
xor
xchg
shlw
std
cmc
data16
jnp
pop
out
in
push
adc
ja
sub
and
push
mov
je
adc
mov
cmc
push
shr
push
inc
rcll
sbb
imul
fidivrl
in
jecxz
out
inc
xchg
push
popf
arpl
sbb
mov
shrb
cmp
cmc
push
negb
sub
adc
or
test
std
xchg
rcrl
push
push
aas
push
sti
stos
test
xchg
es
ja
mov
test
movsl
dec
mov
hlt
enter
mov
and
fldenv
mov
jnp
cwtl
push
movsl
lock
ret
scas
xor
sbb
adc
lret
cmpsl
out
inc
xor
or
pop
test
jnp
or
nop
mov
pop
stos
out
cmp
jnp
jne
mov
lods
inc
mov
mov
scas
loopne
out
push
in
adc
mov
data16
mov
mov
fsubrp
arpl
push
mov
adc
pop
ds
jl
movsl
and
add
sbb
cli
repnz
cwtl
dec
mov
into
mov
jecxz
and
pop
insl
stos
inc
xchg
pusha
mov
pop
or
mov
stos
pop
mov
and
add
xlat
xor
adc
cli
popa
sti
xchg
xchg
cmp
and
pop
clc
inc
mov
inc
arpl
stos
sub
fs
push
jae
xor
movsl
and
sbb
adc
pop
incb
mov
daa
mov
out
pop
enter
mov
sbb
scas
repnz
popa
xchg
addr16
loop
mov
fcmovnb
xchg
mov
ret
pusha
stos
fnstcw
push
lods
cmc
sahf
jbe
rcll
dec
imul
mov
fidivrl
lcall
pop
dec
and
xchg
fwait
push
cwtl
sbb
mov
in
inc
inc
jg
stos
arpl
adc
jb
inc
cltd
dec
add
mov
pusha
xor
testl
mov
aaa
lea
jnp
inc
jbe
inc
cmp
andb
jmp
or
out
je
leave
cmp
pop
or
inc
inc
ss
in
cli
push
xchg
xchg
pop
pop
mov
loop
shlb
ror
add
pop
cmp
inc
aas
insb
xchg
cmp
lcall
ret
inc
mov
mov
fisubl
xchg
sbb
daa
xorl
dec
or
lret
mov
adc
adc
ljmp
push
loope
sbb
jmp
out
pop
inc
repz
sub
cmp
jo
mov
lods
mov
loope
decl
dec
fistps
outsl
sbb
adc
mov
mov
inc
push
mov
icebp
xor
pop
das
add
mov
imul
jno
push
jmp
jae
pop
mov
mov
mov
fwait
in
notb
scas
lret
ja
leave
stc
or
jae
ljmp
adc
test
pop
loope
xchg
ret
mov
lock
inc
or
filds
js
jecxz
mov
xor
movsb
cmp
mov
popa
scas
push
fcoml
repz
aas
lret
hlt
mov
push
inc
add
xor
mov
cld
in
pop
fadds
aad
push
xchg
adc
sbb
dec
scas
xchg
movsb
jne
in
mov
sbb
jns
std
xchg
fcomip
mull
cmp
fisubrs
hlt
loope
mov
mov
inc
or
xor
js
pop
cmp
cld
add
mov
mov
loope
push
divl
jb
pop
iret
out
cmp
inc
adc
mov
push
push
je
push
mov
and
dec
or
push
mov
sbb
inc
arpl
dec
dec
ds
mov
inc
adc
mov
add
mov
into
shll
inc
jb
adc
cs
fnsave
insl
subl
icebp
pop
imul
inc
dec
cs
mov
jno
mov
xor
cmp
gs
push
push
outsb
mov
xchg
inc
scas
push
add
jne
xchg
iret
mov
adc
push
addr16
adc
and
lds
div
xor
cmc
insb
lods
jg
mov
mov
lret
push
icebp
test
jl
popa
imul
movsl
roll
fcomi
jae
pop
in
int3
roll
cs
pop
popa
mov
cmp
jbe
ret
inc
jnp
stos
xor
loope
dec
sub
stos
jge
mov
imul
lcall
push
movsl
push
andnps
add
sub
jns
mov
mov
rorl
push
xor
aad
inc
sti
insl
pop
ret
nop
aaa
dec
les
arpl
movsl
roll
push
aam
xor
jae
insl
lahf
xchg
jnp
pop
das
adc
jno
or
add
ret
repnz
mov
adc
adc
fcmovnu
bnd
dec
pusha
loop
pushf
iret
ljmp
movsb
lods
push
cmpsb
inc
fld
pop
dec
xchg
addl
dec
ljmp
mov
cld
scas
out
cmpsl
int3
test
mov
adc
adc
fisttps
cmp
sbb
or
inc
xor
xor
sbbl
nop
cli
and
mov
daa
cli
adc
and
cwtl
sbb
xchg
cmp
xor
movsl
sbb
jns
bound
outsb
lock
sub
jl
mov
arpl
or
adc
dec
inc
sub
lods
inc
shl
pop
or
mov
addl
add
gs
add
inc
or
mov
or
aam
push
inc
lcall
inc
pop
das
add
sub
mov
adc
fwait
cld
stos
add
lods
add
push
push
pop
jl
add
mov
push
fcom
adc
adc
rorb
fcoml
pop
aaa
clc
in
pop
mov
inc
xor
jne
xchg
pop
mov
call
outsb
mov
test
clc
mov
jae
adc
pushf
adc
mov
mov
inc
mov
mov
or
add
ret
cmp
scas
ss
xchg
mov
rcr
test
pop
test
das
outsl
xor
xchg
rclb
fildl
insb
inc
ret
test
add
cmp
lea
xchg
sqrtps
jns
xchg
add
push
fwait
dec
xchg
cmpl
cmpb
sub
pop
or
xchg
fwait
pop
adc
mov
jl
stos
push
int
sub
sub
call
repnz
jo
repnz
repnz
jge
or
xchg
mov
out
xlat
shlb
dec
sbb
pop
cld
sbb
gs
mov
shr
lret
jge
jmp
in
xor
in
or
sarl
std
xor
out
or
add
aam
int3
sub
cli
push
sub
fisttpl
je
mov
jecxz
mov
enterw
enter
pop
pop
test
sahf
std
adc
in
rclb
jae
cmp
mov
int
fstpl
mov
fisubrs
mov
fcomp
lds
imul
hlt
daa
test
xchg
cli
jo
inc
jae
dec
in
pop
pop
sbb
lret
pop
insl
xchg
ret
xchg
mov
pop
adc
inc
das
movsl
fdivrs
push
adc
cmc
xor
shl
jle
out
dec
fs
dec
in
ficompl
rorl
bswap
pop
div
xchg
mov
aam
push
loopne
xor
push
and
and
mov
or
aas
sub
push
insl
inc
jp
jge
scas
sub
xor
pop
repnz
jg
test
xor
inc
add
cmp
add
loop
test
call
dec
lods
push
xor
pop
or
jns
dec
add
nop
fnstcw
jnp
sbb
cmpsl
mov
rcrl
mov
imul
rol
push
repz
pop
mov
sub
dec
sub
cmpsb
out
pop
gs
in
leave
xchg
lret
xchg
negl
aam
push
inc
pop
inc
sbb
or
stc
mov
inc
rolb
add
mov
mov
lea
add
movsb
jnp
stos
lds
addr16
loope
les
cmovno
cmpsb
adc
cmpb
mov
mov
outsb
xchg
lret
and
adc
outsb
pushf
jl
push
loopne
xor
imul
cmp
mov
sub
dec
outsl
and
jge
mov
cmp
ds
notl
jge
jbe
bound
jb
pushf
int3
inc
dec
mov
enter
cmc
in
scas
xchg
stc
mov
push
add
mov
mov
icebp
dec
push
fwait
pop
push
xor
arpl
aad
data16
stc
cmpl
rcrl
movsl
cmpsl
cmp
addr16
mov
je
ljmp
lds
jae
xor
ret
sahf
pop
xor
fldcw
inc
mov
ds
lcall
ss
enter
addr16
inc
and
xor
int3
les
ja
xor
xor
lds
aam
pop
or
or
movsl
adc
in
fisttpll
fcoms
roll
bound
jmp
xchg
aad
mov
sahf
fcmovbe
mov
outsb
adc
xlat
insl
lret
dec
mov
pop
incl
sub
pop
les
fwait
add
cwtl
mov
xlat
push
lock
xor
sub
add
clc
push
cmp
shlb
scas
imul
xor
mov
add
enter
push
test
sub
out
popa
fucom
in
enter
idivb
sub
cwtl
xchg
pop
lock
insb
mov
fcomi
adc
std
push
xor
rcl
test
mov
inc
xchg
lds
jno
cli
sbb
and
ljmp
jbe
dec
mov
loop
and
test
loopne
push
sti
add
mov
pop
lods
dec
icebp
jmp
push
imul
push
cld
mov
cmp
push
dec
cmc
mov
xchg
push
mov
mov
mov
inc
outsl
dec
mov
cmp
add
pop
add
push
jp
repnz
punpckldq
mov
pop
aam
sbb
sbbb
inc
push
cmp
inc
or
js
mov
lea
outsl
mov
cmpsb
jl
out
push
push
push
pushf
add
sbb
fwait
xchg
mov
mov
das
inc
mov
out
psubsb
mov
xchg
out
jo
mov
dec
mov
call
loop
or
imul
repnz
or
scas
xchg
cmc
pop
ds
push
shl
mov
cmpsl
addr16
push
iret
xchg
enter
sub
pusha
pop
pop
dec
add
in
ljmp
xchg
jno
inc
mov
mov
jbe
adc
dec
add
rcrl
adc
pop
ljmp
push
sub
cmpsl
insl
outsl
mov
push
in
adc
aad
pop
enter
std
pop
xchg
dec
int
scas
movb
test
pop
xor
ret
imul
xchg
or
lcall
inc
ss
push
jl
dec
push
xchg
jb
mov
into
fcomi
pop
sub
sbb
loop
sbb
xchg
mov
mov
and
pop
addb
jno
scas
mov
inc
loope
shlb
jns
ljmp
xchg
orl
bound
push
ds
popf
cmpsl
aas
cli
fdivl
gs
imul
arpl
in
dec
ja
aaa
cmp
fs
lahf
jp
sbb
cmp
add
inc
and
adc
xor
mov
addr16
mov
in
test
mov
pop
xchg
insw
scas
fnstsw
sarl
pop
lcall
das
dec
fsubs
into
mov
es
iret
mov
or
push
and
sbb
push
sub
mov
lods
pop
cmp
dec
jp
mov
aaa
cmp
sbb
push
xchg
jae
loop
aas
nop
insb
mov
ret
cmp
jo
xchg
js
emms
shlb
cmp
push
imull
lret
pop
mov
lcall
add
pop
mov
push
in
dec
cmp
sbb
into
outsb
sub
mov
push
scas
xchg
push
or
ss
mov
shlb
bound
cli
popa
push
arpl
push
mov
pop
imulb
nop
jl
push
xchg
cmc
add
jae
add
cmpsb
andb
or
fs
and
cld
lods
dec
repnz
fdivs
in
cmp
mov
inc
adc
outsb
scas
std
popf
push
sbb
adc
lcall
sbb
cmpsl
pusha
loopne
stos
inc
outsb
andl
dec
fsubrs
jb
lock
lret
je
push
fwait
int
inc
cmc
enter
int3
dec
es
jmp
int
or
cmpl
and
hlt
outsl
scas
movsb
push
jl
pop
pop
and
loopne
mov
xchg
dec
add
push
dec
pop
imul
cmp
int
rcl
pop
pop
sbb
stos
xchg
mov
sbb
insl
and
inc
push
je
test
cmc
rcrb
out
adc
inc
stc
jae
dec
dec
mov
jg
push
out
gs
fs
xchg
mov
jg
shll
xlat
xor
loop
nopl
icebp
add
shrb
pusha
jb
ljmp
fs
movsl
jb
xchg
into
jmp
mov
dec
xchg
js
mov
popf
sub
call
es
icebp
add
js
ljmp
data16
add
cmp
roll
push
std
sub
es
pop
and
sub
pop
addl
and
sahf
or
adc
das
movsl
insb
dec
mov
mov
and
dec
mov
push
dec
pop
data16
gs
fwait
jb
or
inc
jmp
mov
or
and
mov
pushf
je
mov
and
xchg
jle
push
daa
fsub
pop
addr16
cwtl
out
fisttps
jp
int
in
xor
sti
ret
fdivr
loope
movups
mov
xor
inc
xor
fldcw
pop
fstpl
fimuls
push
pop
and
inc
rorb
xor
dec
inc
iret
out
push
xchg
dec
push
scas
testb
or
xchg
jmp
pop
cmpsb
mov
pusha
push
shll
dec
sbb
or
ficompl
sti
pop
or
inc
jl
mov
test
pusha
mov
jns
rorl
outsb
dec
pop
lods
ret
ja
inc
or
mov
fimull
cmp
js
cmpsb
repnz
sbb
in
popa
mov
rcrl
cmp
sbb
push
jo
leave
notl
mov
in
lods
int3
daa
cmpsb
xchg
xor
sub
popa
dec
jb
ret
inc
rcl
jnp
int3
xchg
orb
out
mov
adc
jbe
mov
push
sbb
test
mov
insb
xchg
data16
adc
dec
test
pop
rcr
mov
adc
xchg
faddl
sbb
pop
iret
inc
in
mov
fisttpll
push
push
cmp
loop
in
icebp
mov
in
inc
gs
jge
mov
dec
sbb
loop
js
xchg
ss
inc
fwait
lahf
cmp
or
xor
or
daa
cmp
push
lods
shlb
xlat
cmp
pop
pop
orb
pop
icebp
fiadds
or
mov
cmpb
mov
mov
add
xchg
mov
lret
andl
call
out
push
shlb
cmpl
or
fisttpll
iret
pusha
and
inc
lea
jmp
fildll
mov
pop
jmp
adc
adc
and
mov
movsb
sbb
scas
popl
xchg
popl
fwait
xchg
in
testl
push
cmpsb
shrb
rcrl
dec
nop
or
cwtl
dec
xor
pop
stos
fldl
lock
add
dec
mov
lods
push
xor
dec
das
mov
mov
shrl
int3
cs
sbb
test
sbb
cmp
ret
fisubrs
nop
and
add
mov
inc
jle
inc
shl
add
xchg
outsb
arpl
and
std
lcall
fidivrl
xlat
push
or
jmp
cmp
xchg
dec
sbb
mov
mov
mov
mov
inc
inc
sbb
sub
notl
lahf
xabort
scas
dec
dec
xor
mov
imul
es
loop
inc
xor
lock
inc
movsb
shll
lahf
sub
jb
divl
popa
xchg
lahf
sbb
shlb
fcompl
out
sub
adc
push
call
push
mov
int
lods
bound
push
inc
sub
xor
in
and
mov
mov
mov
pop
mov
mov
arpl
jno
ficompl
ficompl
inc
bound
lds
aas
dec
mov
adc
das
jecxz
xor
mov
xlat
xor
xor
or
jge
mov
mov
cmpsb
jmp
cli
jnp
out
lea
call
pusha
test
jmp
push
adc
inc
xchg
mov
into
aam
pop
push
xor
xchg
mov
fldcw
sbb
sbb
pop
push
mov
and
cmc
pop
mov
jge
dec
icebp
ljmp
fcomip
dec
cmp
fs
loope
xchg
movsl
test
das
dec
push
int3
inc
adc
out
jecxz
das
mov
test
inc
jg
pop
xor
push
mov
jns
call
daa
or
les
je
std
mov
loopne
int
mov
aas
or
xchg
xor
xor
scas
pusha
lods
jbe
popa
mov
and
adc
xchg
xchg
jbe
xlat
dec
and
pop
movb
imul
mov
scas
movsl
adc
int
aas
mov
push
jno
dec
jg
mov
cld
and
sub
jb
aad
push
jo
in
pop
mov
in
sub
mov
lret
sbb
inc
xor
and
jp
ljmp
push
lret
pop
and
in
loopne
icebp
mov
lock
in
mov
pop
add
push
dec
out
push
or
inc
shll
in
pop
cmp
xor
fisttpll
cmpsb
out
jae
mov
pop
cltd
loopne
cltd
inc
cltd
nop
cld
adc
cld
rcrl
mov
stos
lock
pop
sahf
pop
sbb
inc
ljmp
aam
imul
ret
ret
adcb
mov
push
scas
ss
int
push
jnp
or
loope
pop
sbb
cmpsb
or
mov
sub
es
repnz
jg
shlb
lock
orl
ja
sbb
push
push
jb
movsb
lock
test
sbb
pushf
adc
mov
cmp
std
lret
repnz
mov
push
adc
int
push
xchg
cmpsl
testb
inc
cmpsl
mov
jge
add
test
loopne
loop
mov
mov
push
push
dec
cmpsb
nop
xchg
cmpsl
imul
mov
aas
imul
pop
push
push
jbe
xchg
shrb
rcr
loope
mov
mov
xor
mov
ss
jnp
xchg
xchg
add
xchg
cmp
inc
ret
xchg
inc
ja
pop
mov
sbb
mov
loopne
out
mov
leave
lds
aad
dec
inc
gs
cmp
in
cmp
adc
adc
sbb
mov
lds
pop
negl
loope
sbb
loop
dec
mov
stc
adc
sub
je
aam
jne
aaa
pop
inc
jl
pop
pushf
mov
lea
test
bound
aaa
stos
icebp
xor
push
lods
jmp
lds
xchg
sbbl
ret
jo
mov
sbb
or
pop
shrl
lods
fs
mov
sbb
or
lock
das
inc
stos
loopne
mov
imul
aad
iret
jle
movsl
xor
mov
aaa
insl
add
sbb
pushf
mov
mov
iret
shr
stos
scas
dec
adc
arpl
or
and
inc
inc
test
ret
inc
push
lret
repnz
mov
sahf
xlat
gs
push
adc
enter
inc
cwtl
push
push
mov
popf
fildl
sbb
sbb
sub
xor
sbb
push
test
es
inc
je
fsubrl
jg
outsb
out
push
cmpsl
mov
call
lds
add
in
cld
mov
shlb
mov
mov
add
loope
addb
mov
push
pop
mov
shr
sahf
aas
mov
mov
and
fwait
pop
push
cmc
push
ficomps
imul
push
sbb
mov
imul
aaa
mov
and
cwtl
inc
push
xor
cli
adc
sub
je
loop
cld
xchg
push
add
lds
pop
pop
sub
sub
cli
pop
dec
insb
aad
dec
xlat
cltd
inc
daa
rcll
cmp
xchg
daa
jmp
and
xorl
fs
mov
movsl
mov
mov
rclb
mov
adc
xchg
sbb
dec
insb
das
stos
sti
sbb
pushf
sarb
mov
je
aad
cmp
lret
nop
in
adc
add
imul
mov
fidivrl
mov
add
sub
test
jg
cmc
mov
jne
adc
or
enter
aas
out
arpl
aam
imul
pop
push
pop
gs
sbb
ja
insb
subl
mov
xchg
inc
stos
jae
in
arpl
adc
les
fstpt
js
mov
xchg
rorl
mov
cmpsb
pushf
mov
clc
outsl
jge
inc
mov
lods
stc
enter
lds
mov
add
inc
jbe
fcmovne
dec
ret
movsb
icebp
lds
mov
jb
push
or
adc
mov
and
mov
in
scas
push
loope
std
cwtl
sub
pop
stos
outsl
aam
enter
sub
loop
cmp
jne
fsubr
adc
jmp
insb
popl
into
mov
xchg
out
loope
sbb
mov
jmp
mov
sub
icebp
lret
ret
or
push
sbb
lahf
pop
push
and
cmpsl
insb
pushf
sbb
xchg
sahf
jo
rorl
sub
mov
adc
push
scas
cmpsb
mov
push
les
cmp
mov
mov
mov
js
js
sti
setbe
pop
cmc
mov
dec
sti
cmp
lcall
shll
jg
mov
sub
push
jg
adc
pop
sub
push
sub
push
and
add
xchg
mov
es
fmull
jo
or
xor
mov
int
cld
adc
sub
xor
sarl
pop
cs
cmc
sbb
sub
ret
mov
inc
int
ret
test
xchg
aad
aad
xchg
cld
sbb
shrl
cmc
fcomi
enter
fs
xchg
jge
test
imul
add
sar
cmp
daa
add
adc
dec
lock
xchg
dec
test
imul
test
out
ret
pop
mov
mov
shlb
inc
cld
mov
flds
bnd
shll
out
inc
and
xchg
lock
push
or
ja
pop
and
mov
pushf
sub
xchg
aam
lahf
scas
push
lcall
adc
insb
fcmove
mov
sbb
adc
xor
out
cmp
add
stos
dec
adc
adcl
xchg
cmpsb
fdivrs
and
loope
push
loope
push
jle
inc
test
push
or
mov
daa
cwtl
push
sbb
std
cmp
mov
sub
push
out
sub
cwtl
nop
pmaxsw
movsl
push
inc
hlt
fadds
mov
pushf
xor
inc
cmpsl
aas
out
scas
lahf
xor
insl
adc
fs
loop
gs
jno
mov
sbb
ja
loop
stos
xchg
test
mov
mov
lret
mov
stos
pop
sbb
or
aaa
ljmp
sub
xchg
orl
or
pushf
hlt
adc
push
and
imul
call
sub
xor
mov
cs
sub
jne
ds
jne
cmp
ficompl
aaa
fs
and
and
clc
jge
iret
je
psubb
add
in
jmp
insl
repnz
lods
std
dec
or
pop
jl
push
fwait
gs
inc
int
loopne
inc
sbb
out
push
dec
push
cld
mov
movb
test
push
mov
jmp
enter
pop
iret
mov
xor
cmp
pop
testl
popa
sbb
pushl
fidivrs
into
jg
pmaddwd
pop
lret
insl
dec
cmp
xchg
test
push
enter
rcrl
loope
aam
and
fsub
and
test
mov
mov
push
inc
ljmp
dec
push
aad
adc
push
popl
adc
inc
mov
andb
add
fidivrs
adc
repz
shl
jmp
dec
adc
mov
mov
mov
xor
fbld
loopne
repz
cmpsb
inc
jno
inc
and
test
lea
imul
ljmp
in
mov
subl
imul
sub
and
movsb
lods
loopne
mov
dec
cmp
lods
adc
or
in
movzbl
xor
ljmp
xchg
cmp
sub
adc
lods
pop
insl
push
add
hlt
mov
cltd
and
and
negb
dec
mov
xchg
mov
addr16
sub
ret
inc
mov
and
mov
pop
scas
enter
jecxz
arpl
lcall
sbb
jbe
adc
and
dec
sahf
cwtl
push
call
jl
sub
cmp
insb
xchg
xor
iret
loope
rolb
fiaddl
add
xchg
cltd
movsl
fdivl
and
and
mov
xchg
lock
in
and
push
mov
cmpsb
dec
fsin
jl
test
mov
push
std
shll
test
mov
add
mov
addb
aas
sub
and
fucomip
mov
mov
insl
xchg
push
inc
insl
and
rcll
adc
xorl
jmp
or
jno,pt
addr16
out
and
push
daa
adc
dec
jle
mov
jmp
cltd
mov
lock
fidivl
pop
loopne
cli
ficoms
cmpsl
js
icebp
push
inc
push
stc
mov
mov
cli
iret
push
push
and
ds
les
mov
in
loop
testb
pusha
jbe
js
push
mov
jmp
jbe
mov
push
cmpsb
lcall
in
in
inc
cs
rorl
mov
ficoms
sub
aad
fcompl
push
inc
or
lcall
mov
test
fdivs
repz
in
push
pushf
xchg
push
adc
xchg
sub
aaa
mov
aad
pop
or
adcl
es
xchg
roll
dec
stos
add
popf
sti
push
mov
or
faddp
mov
mov
sub
call
push
inc
icebp
lock
decb
mov
pushf
mov
out
mov
and
pop
jne
jle
imul
into
sbb
xor
daa
or
inc
add
sbb
out
inc
fs
mov
and
xchg
enter
sbb
leave
fisttpl
mul
rcrl
sbb
sub
sub
cld
aaa
sbb
cmp
addl
lock
adc
pop
cmp
xchg
iret
xlat
xchg
adc
std
push
jo
or
sub
push
jnp
xchg
int
push
fwait
or
arpl
mov
xchg
iret
push
cld
pop
sub
dec
gs
push
push
shll
cltd
lea
sub
cmp
jo
pop
loope
sub
mov
push
test
sbb
inc
pop
cmp
jb
dec
pop
rcrb
push
sbbl
cmc
call
mov
fldl
xchg
mov
imul
xchg
incb
ret
sbb
out
out
hlt
pop
xor
cmp
imul
ds
jmp
addr16
inc
outsl
push
lock
mov
push
adc
inc
test
adc
int3
jns
rcr
lods
add
push
and
dec
mov
inc
and
lahf
ja
scas
ss
push
movsb
dec
addb
jl
adc
cmp
inc
push
gs
push
or
dec
xchg
sti
jecxz
jmp
ret
xchg
popl
cmp
cld
movsb
rolb
hlt
aaa
in
mov
jnp
std
rorb
or
and
push
sub
aam
pop
cmpsl
ljmp
shr
or
xchg
push
xor
jb
cli
or
je
outsl
jecxz
adc
cmpsb
push
mov
out
bound
xor
insb
mov
fiadds
cmp
lea
xchg
lret
test
out
rolb
jb
push
lock
gs
out
mov
cmp
test
sbb
mov
push
jl
pop
mov
addl
mov
lds
push
and
cltd
data16
mov
add
scas
push
cmp
bound
les
mov
fdivrs
int3
ljmp
test
mov
aas
sub
rclb
push
add
adc
push
pop
out
smsw
testl
jle
xchg
push
mulps
dec
outsb
cli
je
arpl
adc
fisubrs
dec
sub
out
addl
les
je
fcomip
jae
ss
jbe
int3
fsubrl
push
jg
rcll
out
hlt
jg
imul
pop
mov
out
jbe
and
test
sbb
xor
adc
xor
rorb
sbb
outsl
shl
outsl
sbb
scas
jle
lahf
insl
call
fucomip
lods
bnd
mov
int3
inc
iret
or
cmp
push
fldenv
fucomp
cli
les
int3
les
cwtl
int3
fstpt
loopne
mov
jnp
popf
idivb
cmp
xchg
mov
lret
mov
in
and
mov
add
inc
xchg
imul
push
sub
inc
fwait
and
jmp
inc
test
std
pop
add
shrl
adc
jbe
xor
xchg
add
je
mov
loopne
js
out
pop
pop
pop
jmp
mov
pop
push
cmp
mov
push
mov
popf
xor
add
mov
jecxz
imul
dec
test
jmp
lahf
fldl
in
cli
imul
add
mov
fimull
dec
push
sti
sub
lods
cltd
dec
mov
mov
adc
movb
sbb
lahf
in
loope
push
rcl
sbb
rcll
cmc
mov
push
outsl
pop
sbb
dec
sbb
push
fstps
cmc
mov
outsl
or
scas
cmp
and
mov
or
neg
inc
lods
addb
fsts
imul
std
xchg
sbb
arpl
insl
or
fwait
xchg
nop
test
push
testl
subb
in
in
movl
dec
addr16
jo
push
and
mov
adc
ljmp
xchg
leave
rcll
sbb
dec
or
nop
dec
pushf
adc
xor
bnd
imul
lret
jne
inc
das
mov
xchg
adc
popf
out
aam
pop
stos
mov
iret
fs
mov
loope
add
mov
test
xor
cwtl
popf
daa
xchg
add
pop
cmp
push
not
sbbl
lds
repz
pop
push
xchg
mov
xor
cmp
jnp
pop
and
ret
xchg
mov
pop
jnp
lret
push
cmp
mov
lcall
jmp
mov
xchg
push
xchg
push
add
out
int
dec
dec
test
cmp
sub
fcompl
test
jmp
cmp
jnp
sub
stos
fimull
sub
cmc
mov
sbb
sub
cltd
insl
lret
pop
dec
mov
or
sbb
adc
popf
mov
mov
add
cmpsb
xchg
incb
add
stos
pop
lret
sbb
mov
repnz
shlb
mov
xchg
fildl
into
inc
cmp
xchg
int3
sti
jecxz
and
jle
sbb
aam
sub
pop
cmp
sbb
loope
sub
movsl
mov
aad
cltd
fcomip
pop
repnz
ja
lcall
jp
jb
cmp
adc
and
mul
ss
pushf
mov
jnp
cli
xlat
jge
das
mov
lahf
scas
push
xorl
lcall
int
mov
add
jmp
int3
xchg
xchg
lcall
mov
and
xor
lea
stos
mov
push
shlb
mov
imul
or
out
push
sub
pop
div
mov
push
rcr
sub
nop
int
pop
out
pop
sub
adc
leave
cmpb
cmpsl
inc
fs
dec
xlat
xchg
sahf
mov
xchg
jecxz
adc
dec
jge
lcall
pop
lods
add
sub
sub
stos
jg
mov
add
incb
push
iret
inc
xor
daa
cmp
lods
xor
movsb
fldenv
mov
dec
inc
adc
rcrl
sbb
dec
mov
fmull
in
aam
aad
sub
and
push
das
or
pop
or
cmpsb
pushf
push
cmp
pop
lea
mov
add
and
das
mov
lds
enter
rcrl
adc
sbb
out
sub
rcr
cmp
push
sub
dec
test
adcb
mov
movsb
cmc
hlt
push
movsl
test
adc
test
mov
jo
das
cs
mov
sbb
mov
ret
add
sbb
out
repz
imulb
add
push
inc
jl
sub
pop
push
sub
mov
xchg
xor
mov
sub
pop
cld
mov
add
scas
sbb
ja
lods
in
adc
push
adc
pop
xor
in
int
or
jb
bound
add
mov
in
mov
aas
push
daa
lock
bound
les
mov
enter
shl
push
movb
adc
cmpsb
enter
sbb
mov
mov
dec
cli
sbb
cmp
in
xchg
and
xchg
lock
jmp
add
loopne
popf
data16
dec
adc
fimuls
mov
inc
sub
sbb
xlat
stc
mov
xchg
int3
mov
add
test
test
inc
sbb
jnp,pt
dec
cmc
adc
jb
xor
xor
xor
push
add
xchg
mov
int3
fs
mov
push
mul
mov
ljmp
mov
outsb
mov
outsb
xor
sub
dec
loop
mov
out
push
dec
inc
cmpsb
dec
sbb
arpl
lret
add
sbbl
incl
inc
into
cwtl
inc
inc
lock
iret
inc
out
sarb
test
cli
push
xor
sub
shrb
xchg
mov
mov
xchg
enter
in
mov
ss
sti
dec
and
add
lds
inc
imull
stos
loop
ljmp
ret
inc
cli
incb
insl
mov
shrb
imul
dec
es
cmp
lods
xlat
ficoms
ret
int
movb
movsb
dec
insl
ss
insb
mov
out
je
jo
xlat
cmpsl
leave
les
stos
adc
scas
fs
xchg
test
push
xchg
cld
cmp
sub
jbe
fimull
or
pop
in
in
js
push
xlat
mov
cmp
mov
jns
mov
xchg
enter
dec
rcr
xor
push
inc
add
loope
pop
scas
scas
fbld
pop
cmp
pushf
cs
popf
mov
lea
and
add
fcmovu
sub
push
lds
xor
sbb
cmp
sub
imulb
dec
outsl
leave
fildl
push
cmp
lea
sub
jo
push
jp
adc
xlat
sbb
sbb
or
mov
dec
in
or
je
xchg
xchg
push
dec
add
sub
sbb
mov
add
testb
add
adc
cmp
rcll
lahf
sub
dec
fwait
neg
or
lds
fidivs
test
pusha
lret
mov
mov
cmp
shll
rcrb
xchg
or
push
call
inc
adc
xchg
loop
mov
fdivrl
xchg
leave
push
cmp
add
dec
repnz
insl
or
cmp
jge
pop
inc
xchg
sub
mov
sarb
nop
mov
iret
hlt
sub
sub
scas
hlt
cwtl
mov
inc
push
enter
mov
stos
mov
adc
sti
mov
subl
dec
adc
sub
icebp
push
adc
dec
push
out
out
stc
xor
cwtl
mov
or
pop
lahf
push
mov
pop
xchg
ljmp
xchg
test
test
dec
pop
lcall
scas
lea
lods
sub
jmp
sti
jno
xor
cltd
jl
pop
cli
xchg
xor
cmp
clc
jmp
xor
fs
push
mov
nop
cmp
or
fiadds
loope
mov
and
adc
lret
les
nop
scas
repnz
cld
jle
inc
cmp
psllw
scas
jmp
inc
lods
daa
add
push
test
sub
int
push
push
pop
sub
dec
shll
sbb
mov
subl
sub
or
sbb
dec
inc
dec
negl
jno
and
fcmove
andb
incb
test
jge
adc
jge
inc
dec
sarb
xor
pop
sub
or
add
aam
lret
mov
daa
mov
mov
jns
pop
leave
adc
cmp
pop
ds
daa
int3
cltd
lahf
scas
add
adc
pop
rcl
pop
call
cs
xchg
xchg
sbb
pop
out
rolb
add
ret
and
mov
jno
jle
iret
test
sbb
push
sbb
pop
stos
ss
pop
rcrl
sbb
mov
push
arpl
gs
loopne
stos
shl
and
lock
sub
xchg
add
mov
push
clc
inc
ficoms
fdivl
shl
xchg
fisubrs
stos
mov
icebp
push
in
or
leave
mov
test
lret
bound
cmp
mov
jne
andl
stos
mov
sbb
jmp
pop
and
inc
or
mov
cld
ficompl
jmp
pop
int3
lret
add
jne
mov
sahf
jl
mov
aaa
dec
dec
call
xchg
popf
cli
add
dec
rcrl
pop
add
loop
sbb
mulb
dec
ljmp
in
xor
mov
int
outsb
mov
pop
imul
test
cmpsl
inc
mov
test
insb
mov
adc
test
xchg
and
jle
icebp
mov
inc
push
pop
testb
mov
jae
sbb
aam
scas
es
mov
fcmovne
dec
inc
jbe
sub
cmc
in
or
call
inc
mov
stos
out
pop
out
xchg
lods
into
xchg
jecxz
cmpsb
cwtl
pop
mov
cs
push
fisubl
pusha
loopne
lcall
fcomp
mov
loope
push
mov
out
nop
mov
mov
mov
jno
pop
insb
stc
int3
in
mov
mov
out
pop
push
ja
mov
fsubr
stc
mov
imul
dec
xchg
fsubrl
jmp
xchg
call
fistl
not
stc
mov
mov
push
jb
in
and
sub
xchg
xor
dec
outsb
subl
or
xor
jp
daa
xchg
ret
bound
mov
pop
jge
pop
push
pop
test
pop
jno
clc
xor
popa
lahf
call
dec
mov
jbe
push
push
pop
mov
lock
xchg
dec
mov
roll
mov
sbb
rcrb
cmp
sbb
iret
scas
push
add
mov
cs
mov
and
jno
jmp
ficoms
sbb
cmp
les
ds
insb
int3
pop
mov
mov
add
mov
fdivs
xchg
loop
lea
mov
cs
cmp
push
in
ljmp
fnstenv
and
test
add
sub
jecxz
add
jbe
xlat
stc
or
and
sub
sbb
es
jg
data16
pusha
and
dec
adc
shlb
pop
cmpsb
add
push
pop
lods
add
and
ret
aam
xchg
sub
outsb
mov
add
repnz
xchg
ja
mov
cltd
xchg
mov
adc
push
jns
inc
xacquire
enter
xor
insl
xchg
addr16
jmp
lahf
cwtl
aas
addr16
incl
sbb
lds
es
pop
mov
cmpsb
push
fwait
jge
fisubl
mov
stos
dec
xchg
xchg
lcall
lea
sub
jae
inc
xor
adc
sub
testb
popa
sub
push
inc
enter
jl
enter
xor
jmp
into
and
or
rolb
dec
dec
arpl
mov
lds
in
out
js
mov
and
dec
xchg
cmp
lret
cwtl
call
mov
cmp
cmpsl
dec
scas
in
fisubrl
out
mov
push
xchg
jle
xchg
not
sub
popf
rorl
out
rorl
test
dec
movsl
inc
pop
je
adc
sbb
cltd
adc
or
adc
pop
lods
int
push
xchg
shr
je
add
rclb
das
aaa
adc
mov
adc
inc
push
int3
inc
mov
movsb
xlat
mov
pop
imul
sbb
xlat
lahf
inc
xchg
xor
lret
popf
sbb
mov
cmp
insb
icebp
adc
sbb
loopne
adc
sbb
sahf
lock
aas
mov
sub
fsubrs
mov
and
mov
sbb
stc
adcl
outsb
cmpsl
call
addr16
push
andl
mov
ja
adc
and
pop
push
in
fnstcw
xorb
das
xor
decl
dec
cli
jecxz
adc
or
cli
mov
arpl
cmp
ljmp
movsl
aas
nop
sarl
mov
in
sbb
cltd
inc
fwait
cmpsl
jno
std
mov
mov
mov
hlt
sbb
inc
mov
aaa
push
fnsave
mov
enter
mov
sub
ds
jecxz
jle
int
rcr
aad
xlat
shll
cmp
aas
stos
aas
xor
lods
sbb
mov
dec
push
leave
adc
mov
adc
cmpsb
test
aad
jmp
mov
stos
in
inc
sub
xchg
xor
sahf
and
popf
int
decb
jbe
mov
mov
push
pop
rclb
xchg
lret
jmp
fstpt
mov
insl
mov
mov
mov
xchg
imul
repnz
mov
scas
mov
pop
lret
jns
jbe
out
repz
xchg
daa
dec
lds
shll
add
mov
push
popf
inc
pop
sbb
in
jl
add
inc
int
mov
pop
lock
out
dec
xchg
or
mov
or
adc
ja
mov
and
mov
push
xchg
nop
lret
out
movq
shl
mov
mov
add
and
mulb
pop
cmp
pushf
rorb
in
cmc
int
mov
out
out
in
mov
fucom
aaa
stos
mull
pop
fimuls
repz
xor
cli
notb
cmpsl
in
cld
push
cmpsl
pop
dec
pop
and
aad
jne
push
inc
and
dec
mov
mov
push
sti
leave
xchg
and
xlat
inc
jb
clc
sarl
lods
cmp
and
fcomip
mov
jl
cs
inc
sti
or
dec
dec
sbb
aaa
outsb
push
add
or
scas
add
icebp
fdivl
xchg
sarl
mov
push
dec
imul
out
push
mov
adc
stos
js
stos
aaa
jo
sbb
and
xor
pop
jp
cmp
ss
loope
mov
inc
lds
xor
lods
inc
fdivrl
xchg
adc
inc
cmp
adc
call
movsl
and
cmpsl
sbb
addr16
and
cmp
pop
leave
adc
jmp
ds
sar
xor
out
scas
push
shrl
cmp
fmuls
pop
arpl
cmpsl
xor
sbb
mov
inc
ljmp
and
jle
scas
dec
push
push
xorl
in
bound
cmpsl
stos
test
sbb
lods
and
cmp
jle
mov
int
dec
sbb
not
fxch
dec
xchg
iret
in
mov
imul
adc
xor
push
pusha
fucomi
adc
enter
lret
test
pop
ret
push
fldenv
or
adc
pop
lds
and
and
mov
add
add
inc
mov
pop
test
dec
adc
into
popa
inc
insb
and
adc
ss
add
mov
jb
in
ret
xchg
push
mov
xchg
ret
xor
fisubrl
push
mov
jb
pop
nop
scas
cltd
mov
jecxz
ret
dec
ret
cli
inc
mov
shlb
or
test
icebp
add
js
sbb
mov
and
xchg
adc
mov
fwait
fwait
cltd
lahf
repz
push
out
pop
xchg
cwtl
xchg
cmp
pusha
sarl
jns
lea
js
jecxz
cld
xor
cmp
scas
nop
cmp
in
jg
mov
mov
imul
mov
cmpb
call
cmp
dec
dec
leave
jbe
fcmove
xchg
loope
and
mov
out
adc
data16
inc
jb
notb
ret
xor
and
xor
fildl
movsb
adc
dec
jmp
lcall
cmpsb
push
dec
ret
mov
aam
in
xchg
add
cmp
pop
jo
add
xor
cmp
int3
xchg
lea
shlb
outsl
or
test
aam
cltd
js
cmpsb
cmc
sbb
fucomip
push
push
into
lcall
loopne
adc
ret
xchg
xchg
lods
pop
mov
nop
push
xchg
cmp
ja
cmp
stc
inc
sub
jmp
push
sub
inc
test
xchg
shrl
jbe
sahf
xchg
notb
jns
xchg
lahf
mov
test
imull
mov
sbb
pop
sub
fistl
lret
lea
and
ret
aam
das
mov
das
pusha
mov
adc
jg
jmp
xchg
loop
icebp
mov
xlat
pop
out
mov
cmpl
and
jl
subb
cld
lret
movsb
push
js
mov
jo
mov
add
inc
movb
jecxz
xchg
outsl
pop
test
cmp
jns
pop
lock
jnp
outsb
xchg
fsubl
in
sub
ffreep
insl
or
pop
lcall
add
addr16
sub
or
jnp
es
mov
aas
sub
mov
xor
lcall
add
cmpsb
data16
mov
inc
sub
ljmp
push
nop
or
mov
mov
adc
and
mov
or
or
inc
ds
into
test
gs
addr16
mov
inc
nop
sbb
dec
sub
push
cltd
inc
stc
sub
cmp
popf
pushf
cwtl
fiaddl
adc
push
in
stc
ja
rorb
inc
cmpsb
cld
sub
cmp
push
push
int3
aas
adc
andb
mov
sub
sub
jecxz
inc
insb
xchg
xchg
lcall
mov
and
fdivl
sahf
mov
loopne
pop
hlt
ja
and
in
mov
fldt
mov
aaa
and
lods
sbb
mov
scas
pop
adc
inc
inc
dec
push
fdivp
jo
pop
mov
inc
pop
addr16
pop
jecxz
aam
aad
xchg
mov
dec
inc
jns
aam
sub
xor
cmpsl
jae
xchg
enter
sub
std
sbb
inc
cmc
fistpll
mov
stos
ficoms
mov
mov
push
cmp
inc
and
jl
sub
out
and
inc
pop
stc
sbb
cmp
mov
pop
stos
jae
fwait
stos
out
repz
mov
lahf
sahf
inc
sti
frstor
push
and
scas
insb
jp
sbb
mov
fwait
shrb
xorb
pop
aam
in
xchg
mov
push
jle
out
sbb
sub
pushf
cmp
popf
jno
cmp
xchg
or
mov
or
icebp
lret
adc
aaa
add
mov
jnp
in
jnp
ja
fwait
popf
loope
push
inc
dec
mov
scas
mov
mov
jle
sbb
or
inc
cs
ja
xor
repnz
fiaddl
xchg
aas
int
xor
push
inc
inc
pusha
notb
sbb
insl
add
sbb
fwait
idivb
sbb
cmp
mov
pusha
xchg
and
mov
add
cs
dec
mov
stos
and
or
pusha
cli
orl
inc
sbb
int3
shll
aaa
add
in
xor
jg
xchg
adc
fbld
mov
xor
xchg
adc
mov
mov
push
pop
das
cmc
mov
dec
ds
jbe
cmpsb
push
rorl
xor
aas
shrb
jns
test
xchg
and
test
or
pop
ret
aaa
jnp
ret
in
or
mov
inc
scas
clc
out
sub
dec
or
xchg
sub
pop
icebp
sbb
jg
arpl
adc
jle
mov
and
add
rcrb
mov
lret
add
cmp
shll
cmp
in
xor
adc
dec
hlt
inc
lock
aas
aam
mov
out
test
aad
pop
mov
subb
inc
les
xor
mov
xor
jge
jmp
add
add
jg
add
sbbb
inc
les
cli
aas
and
or
push
test
rorl
out
push
push
cmp
in
mov
jp
pushf
cmp
sub
pop
and
push
aas
adc
push
imul
cmp
mov
test
cli
mov
mov
and
inc
aam
std
enter
ret
pop
pusha
add
inc
and
or
sub
gs
xor
sbb
and
loope
xchg
sub
sub
hlt
mov
lahf
lds
or
or
gs
mov
mov
sub
fldenv
jmp
sub
adc
dec
or
push
inc
lret
scas
mov
cmp
ret
jge
js
mov
or
pop
adc
cltd
cmp
lahf
insb
scas
or
outsb
pop
loop
aam
mov
pop
and
inc
sbb
inc
imul
fcomip
pop
addr16
lods
mov
ret
out
adc
ficoml
dec
and
loopne
loope
andl
sub
stos
loope
setp
mov
idiv
dec
cwtl
push
lods
ret
idivl
insl
mov
test
mov
dec
or
aas
lods
push
mov
or
data16
add
dec
or
sub
push
mov
aas
xor
sbbb
lds
jecxz
pop
mov
shl
fnstcw
lahf
xlat
lcall
arpl
and
adc
sbb
leave
pop
es
or
int
sub
push
insl
cmp
scas
and
loopne
lods
repnz
aas
int
cmpsb
or
jnp
cltd
adc
push
popl
popf
cmc
fists
xor
rorl
xchg
lret
cmp
and
hlt
and
call
test
inc
inc
insb
lret
xchg
add
xor
xor
out
dec
push
dec
test
xchg
jae
ljmp
movlps
lahf
in
jb
jl
xor
int
and
sti
push
dec
xor
or
pop
pop
rol
mov
pop
mov
mov
pop
int
cltd
mov
dec
jecxz
and
int3
test
mov
sbb
xchg
clc
dec
push
test
or
cmp
fld1
cmpl
cmp
sbb
loopne
mov
das
adc
lods
xor
and
stos
mov
mov
stos
idiv
mov
adc
sahf
aas
cmp
push
loopne
and
dec
es
mov
mov
or
sbb
pop
mov
test
rorb
ljmp
mov
push
sti
imull
lahf
mov
pop
loope
das
loopne
cmp
jecxz
adc
lock
fnstcw
gs
faddl
xchg
add
cmp
hlt
cmpsl
loop
in
out
je
inc
adc
scas
je
sarb
cmpsb
sbb
cmpsl
lret
dec
roll
mov
jae
push
hlt
add
and
dec
jge
stos
ror
push
jne
pop
into
ss
jbe
xlat
jl
sbb
je
cmp
repz
add
inc
or
xor
scas
cs
std
nop
sub
xor
scas
fildl
stc
insb
lahf
xchg
out
xor
pop
test
iret
loop
jo
fs
pop
popa
aaa
stc
ficoml
std
push
mov
fsubl
jne
scas
sbb
rcll
xchg
out
dec
adc
std
cli
test
jno
push
jbe
mov
dec
inc
mov
sub
push
xchg
lahf
imul
lret
mulb
jp
pop
fidivl
xchg
leave
mov
in
cs
imul
inc
or
mov
stos
insb
cmpsb
xchg
icebp
ficoms
loopne
cmp
cmp
inc
stos
sub
clc
addr16
jns
sbb
push
inc
in
outsb
call
add
and
iret
jb
cli
jb
das
dec
cli
push
add
mov
and
inc
out
lret
xchg
xchg
std
lahf
rorl
ljmp
mov
pop
aam
push
je
cli
mov
jo
pop
in
rcr
jo
sbb
in
stc
repz
push
dec
or
cmpsb
push
jnp
fnstsw
mov
push
or
inc
in
popf
je
mov
pop
fcomps
gs
add
inc
pushf
jne
xchg
push
xchg
cmp
cmpsb
out
in
sti
lahf
fld
je
fwait
into
mov
test
leave
sahf
cmp
ja
xchg
inc
pop
mov
idivb
arpl
push
rorb
sbb
imul
mov
add
nop
and
jno
gs
rcll
adc
popa
fimull
jnp
inc
inc
icebp
push
inc
push
adc
insb
inc
mov
mov
inc
iret
cmp
sbb
shll
ret
jnp
dec
ficompl
ljmp
psrad
into
lret
test
dec
add
inc
fisubl
mov
out
xchg
cwtl
add
push
fs
xor
mov
xchg
sub
and
cmp
arpl
int3
call
gs
pop
push
xor
jge
mov
gs
das
dec
aad
mov
inc
mov
pop
dec
mov
pop
repnz
inc
mov
dec
into
and
adc
int
sub
pop
adc
sbb
outsb
inc
clc
fidivs
pinsrw
sub
aad
jbe
jl
stos
cld
inc
sti
cltd
lahf
fsubrl
test
sti
sub
jp
js
xchg
int
adc
pop
mov
or
fldt
cmpsb
mov
test
les
mov
test
dec
ret
movsb
adc
cwtl
inc
cli
mov
addl
mov
mov
adcl
das
inc
jmp
sub
inc
mov
imul
cmp
test
dec
ljmp
jge
mov
lret
adc
xor
pusha
inc
scas
call
out
dec
das
mov
jl
lds
mov
aas
aad
loope
inc
jle
cmc
inc
add
fs
sub
les
ret
lea
xchg
xchg
out
adc
jno
xchg
xchg
test
rcrb
mov
popf
mov
fdiv
push
xchg
cwtl
mov
cli
orl
test
dec
adc
xchg
shlb
xor
lcall
sub
sbb
out
mov
xlat
out
mov
adc
shll
xchg
orl
inc
xchg
daa
sbb
cmpl
shll
adc
cmpsb
popa
xchg
fwait
popf
xchg
repz
sub
pop
mov
daa
mov
adc
pop
pop
pop
pop
push
test
jge
inc
mov
add
mov
daa
scas
and
mov
fld
fnsave
lcall
jb
cmp
sarb
add
mov
jno
push
inc
addr16
arpl
mov
push
mov
cld
cmpsl
sbb
jo
cmp
cmp
hlt
inc
sbb
push
xchg
add
push
lret
cmp
mov
daa
cmp
nop
cmp
adc
scas
aad
pop
jno
pop
fs
mov
fnstenv
shrb
incb
shll
jae
xor
inc
ror
cmp
add
cmp
mov
cli
push
jecxz
into
mov
add
push
pusha
push
sbb
jns
pop
inc
test
or
in
dec
add
mov
mov
fisttps
add
pop
clc
add
mov
mov
fdivs
movsl
dec
lods
xlat
xchg
mov
ror
sbbb
hlt
xchg
ds
xorl
mov
sbb
mov
mov
fwait
int3
fmul
xor
cmp
mov
enter
and
and
mov
cmp
insb
xchg
xchg
fwait
jl
add
mov
dec
arpl
fucomi
sbb
fdiv
mov
dec
in
fldz
fsubl
leave
pushf
data16
inc
xor
inc
xchg
mov
mov
sti
inc
hlt
hlt
ja
pop
ljmp
sbb
push
xchg
sbb
outsl
idivl
cmp
xchg
icebp
ret
insb
shl
adc
ret
mov
inc
sbb
lds
fildll
add
pop
imul
lods
das
jo
movsl
inc
mov
adc
fnstcw
stc
sar
mov
mov
fdivs
in
outsl
hlt
jp
loop
movsb
test
and
inc
mov
mov
in
xor
outsl
lret
mov
in
and
xchg
fxch
sub
das
jb
rorb
lods
bound
mull
pop
jne
mov
sbb
push
mov
subl
loope
int
add
lcall
xor
fld
push
insl
shll
test
xchg
xlat
sbb
xchg
addr16
inc
imul
mov
adc
and
cmp
and
aaa
ret
clc
jno
and
pop
xor
sub
mov
fidivs
dec
shl
fiaddl
shrb
pop
xadd
inc
sti
test
push
cmc
lea
or
push
sub
pop
repnz
push
sub
mov
imul
fldenv
push
cmp
ret
xchg
std
lock
add
out
push
lds
mov
shll
add
mov
mov
insb
dec
and
or
fimull
cmpsb
aad
stos
jae
aam
dec
add
loope
sub
adc
ja
into
xor
movsl
xlat
sub
sub
or
addr16
mov
inc
nop
jmp
xchg
push
cmp
xchg
je
ret
call
fisubrl
add
gs
mov
dec
mov
in
add
dec
and
mov
pop
adc
jae
cmp
repnz
push
cmpsb
and
dec
aaa
push
push
xor
cli
cmp
and
pop
pusha
mov
sub
icebp
cmp
dec
jg
jb
adc
mov
rorl
loope
cmp
js
sub
scas
out
sub
sar
xchg
lods
ljmp
pop
hlt
test
test
fsubs
cli
and
jmp
xor
jno
and
cmp
outsb
cwtl
mov
shrl
cmpsb
lahf
sbb
mov
fisubs
lods
stc
lcall
fidivs
adc
xlat
mov
aas
test
dec
nop
push
rcrl
pop
jg
out
push
dec
mov
xchg
ds
jb
aas
scas
repz
xchg
and
mul
scas
mov
loop
scas
and
jnp
dec
lahf
cld
gs
lea
inc
cmp
cmp
and
outsb
sti
jns
movsb
cmp
or
push
hlt
cmp
sub
cmp
lods
aam
add
sbb
push
lret
test
jo
rcrb
dec
lcall
xor
adc
lret
aad
int
xlat
shll
sbb
notl
xchg
iret
les
out
inc
add
cmp
mov
and
lret
test
xchg
subl
mov
in
cmp
icebp
sbb
scas
addl
sbb
mul
es
sti
imul
lcall
sti
mov
push
movsb
ss
icebp
test
pop
out
mov
mul
xchg
xchg
jle
dec
adcl
mov
mov
hlt
sub
mov
insb
mov
adc
sbb
je
mull
frstor
mov
mov
rclb
dec
dec
mov
outsb
cmpsl
jp
rcl
lea
pusha
add
jle
imul
iret
lcall
cmp
or
lcall
xchg
sti
in
stos
xchg
out
ret
jbe
test
push
jns
ss
pusha
add
lcall
jp
inc
inc
fstps
xchg
and
bound
push
sti
repnz
pop
jmp
out
shrl
jmp
test
dec
xlat
sti
call
jp
or
rcrb
stos
dec
imul
pop
add
dec
pop
movsl
stc
mov
std
inc
push
adc
clc
cmp
scas
shlw
and
jae
insb
mov
int
pop
xor
bound
rol
divb
mov
sub
es
mov
andb
imul
cltd
movsl
shr
push
sub
inc
cmp
add
sbb
lcall
daa
cmp
mov
call
dec
xor
xchg
xor
jne
loop
clc
mov
insb
push
pop
add
push
nop
jge
out
cmc
xchg
xchg
outsb
push
push
xor
rorl
enter
lods
bound
add
jb
pop
pop
loopne
cmp
int
jmp
rcl
dec
and
pop
or
into
bound
jb
cmc
inc
sbb
inc
fdivl
dec
iret
mov
lock
aad
nop
xchg
or
outsb
inc
xorb
repnz
xchg
out
fnstsw
dec
movsb
pop
or
loope
jg
aas
fwait
pop
jl
sub
iret
adc
pop
jbe
fcom
xor
dec
sbb
sub
les
mov
cmp
inc
push
cltd
loopne
pop
pop
jmp
movsl
push
lds
pop
les
inc
pop
call
push
mov
cmp
add
inc
test
aam
in
pop
pop
lcall
das
cld
lahf
andl
out
and
lret
ret
mov
and
pop
movsl
lret
mov
das
jl
jmp
ja
sti
dec
jne
repnz
xchg
mov
call
je
mov
dec
and
jno
mov
daa
adc
adc
scas
pushf
mov
dec
inc
ret
lea
fmuls
popa
sbb
xchg
add
jecxz
sbb
fildll
inc
mov
mov
ss
adc
iret
inc
jmp
and
adc
mov
adc
dec
fiaddl
and
icebp
subl
push
pop
mov
mov
and
clc
inc
dec
aad
jmp
movsb
mov
mov
push
fadds
xchg
sub
pop
cmp
and
ds
jp
fisubrs
js
icebp
std
adc
lret
add
mov
out
pop
pop
mov
xchg
cmp
fwait
test
mov
arpl
nop
mov
push
outsl
or
out
cmpsb
dec
inc
xchg
enter
bound
jae
ror
out
imul
lcall
and
jbe
in
inc
mov
pop
sub
imul
sub
sub
dec
in
mov
jmp
mov
or
jl
push
xchg
cmpsl
test
sti
push
add
aam
mov
das
scas
in
push
aas
mov
imul
add
push
inc
fidivl
pop
int3
int
mov
jmp
adc
scas
jp
mov
insl
fldenv
dec
fcmovu
dec
es
lcall
adcl
mov
lahf
sbb
iret
cwtl
lock
inc
push
cmpsl
jae
in
mov
cmp
xchg
cmp
jo
lret
sbb
cmp
stc
popa
mov
jg
mov
and
lods
push
mov
lret
jg
jno
push
xchg
mov
aam
subb
outsl
jecxz
dec
jb
mov
enter
lods
out
adc
sub
cli
jbe
mov
aam
mov
jge
lret
xchg
push
mov
push
outsb
cltd
push
jnp
movsl
aad
push
dec
inc
andb
xchg
adc
les
push
jmp
and
mov
push
push
mov
jno
push
cmpsl
lret
add
scas
int
decl
aaa
and
lahf
xchg
jle
push
fcoml
loopne
mov
xchg
rcl
outsb
dec
push
test
dec
mov
jg
xorb
loope
fildll
mov
int3
les
roll
mov
dec
mov
or
psrlq
sbb
adc
pop
pop
cmp
decb
jmp
mov
outsb
pop
aam
pop
mov
fs
and
jb
mov
subl
lret
mov
xor
aas
push
mov
xchg
repnz
lret
mov
inc
leave
push
jns
fnstenv
mov
push
movsl
sbb
sbb
les
mov
icebp
loop
call
outsb
jne
push
lea
popf
inc
push
insb
movsl
mov
aad
jmp
xor
div
jg
and
in
movsb
sbb
cwtl
dec
and
and
cmp
cli
cmp
dec
xor
pop
ds
or
add
push
ljmp
sub
xchg
xchg
dec
pop
nop
ljmp
inc
push
in
xor
lret
dec
mov
sub
cmpsl
xchg
orb
js
xor
inc
mov
cli
fwait
sti
lods
aaa
jmp
je
sub
mov
jmp
jns
mov
int3
movsl
imul
push
bound
inc
fimull
gs
cmova
adc
mov
jp
lods
aaa
adc
mov
icebp
into
or
ret
clc
mov
movsb
in
scas
inc
xor
fdivl
and
and
push
mov
push
adc
rcrb
adc
sbb
sub
mov
stos
sub
jge
xchg
jb
and
lret
mov
lock
mov
sbb
out
pop
ljmp
std
sbb
pop
push
int3
frstor
lea
insl
fwait
in
cmc
aaa
in
mov
pop
mov
lret
std
cmp
sub
pop
jmp
add
dec
push
mov
lds
sub
xchg
pop
add
inc
xor
add
jmp
push
lea
xchg
lea
int3
leave
push
pop
jl
int
ret
sbb
leave
adc
push
jecxz
push
pop
pop
cwtl
mov
in
jge
scas
mov
sbb
loopne
pusha
out
dec
cmpsb
dec
jbe
andb
imul
shl
and
cwtl
lret
stos
mov
pop
adc
push
and
gs
mov
dec
les
and
cli
sbb
lods
pop
mov
mov
push
mov
out
arpl
or
pop
mov
loope
leave
jl
pop
lret
sti
dec
sub
sbb
sub
mov
mov
inc
out
pop
lcall
lods
sub
test
pop
ss
xchg
popf
sbb
dec
jmp
jmp
lea
jb
dec
ror
pop
outsb
mov
repnz
pop
aad
sub
rclb
cwtl
cmp
orl
popa
and
xlat
dec
loopne
dec
lahf
popa
call
aaa
dec
xor
outsl
adc
push
or
js
sbb
lret
leave
in
push
sahf
pop
call
mov
dec
push
push
loope
jecxz
lods
jnp
dec
in
clc
mov
adc
xchg
add
mov
aad
mov
fdivrs
fists
xchg
bound
pop
pop
les
inc
sbb
jne
ss
lret
scas
add
insl
sbb
cmp
sti
dec
push
dec
lea
aam
push
lahf
fistps
std
lcall
mov
lret
lock
int3
das
fistpll
jo
stc
xor
adc
cmp
mov
gs
jmp
jns
mov
lret
xchg
ret
and
loop
cmpsl
int
push
repnz
orb
dec
sub
test
and
jle
mov
stos
pop
push
mov
lret
roll
pop
jmp
inc
dec
or
push
add
push
adc
mov
pop
enter
mov
xchg
push
stos
cmpl
jl
cmpsw
popa
pop
rorl
jb
insl
sub
sbb
jnp
jge
pop
test
outsb
or
es
out
jl
dec
outsb
icebp
inc
shll
xor
outsl
lds
jne
sub
cld
out
cmc
mov
xchg
jnp
fwait
nop
inc
adc
lds
mov
aam
jbe
push
cwtl
and
mov
inc
push
push
iret
inc
mov
je
shl
arpl
jp
cltd
mov
push
push
adcl
test
in
fistpll
cltd
xchg
pop
jp
mov
mov
push
outsl
jge
and
push
cmc
in
mov
loope
xor
fldl
call
aam
jecxz
inc
xchg
pop
pushf
insb
mov
or
cmpxchg
xor
push
in
xor
leave
hlt
into
or
jne
test
jae
mov
jg
repnz
cmp
push
push
xchg
adc
cmpsb
xor
cmp
int3
jp
xchg
cmpsl
call
cli
jle
cmp
adc
cmp
jne
ja
jns
cli
sbb
push
mov
dec
pusha
pop
or
clc
pusha
xor
mov
push
mov
mov
int3
pop
aad
mov
jg
xor
adc
ds
dec
cmp
cmp
out
data16
jp
in
sbb
pop
cmp
push
aaa
jmp
xor
dec
aam
inc
dec
push
adcl
or
cmp
cmp
outsb
cld
test
mov
cmpsl
add
xor
stos
adc
ret
cltd
mov
or
loop
jmp
mov
lcall
push
fadds
lcall
fprem1
int
sub
movsl
je
mov
jb
mov
jg
repz
mov
loope
jge
lret
push
fcomip
les
cmp
cmp
jnp
jl
adc
mov
mov
in
in
lcall
lret
dec
inc
pop
add
jo
adc
or
movsb
xchg
in
outsb
xor
jo
and
push
sahf
data16
loopne
cmp
scas
cmp
pushf
xorl
adc
ret
out
pop
xchg
push
fcoms
adc
pop
adc
cmpsl
js
sbb
adc
mov
fmuls
push
push
xor
in
lock
cmp
stc
push
jp
mov
push
or
mov
sti
fidivl
mov
popf
out
inc
push
jnp
mov
push
fsubl
stos
sbb
dec
xchg
sub
cmp
pushf
test
pop
andl
test
and
dec
in
cltd
mov
xor
mov
mov
in
cmp
add
js
jge
imul
sbbb
int
rorb
out
xchg
mov
sbb
cwtl
dec
pop
clc
mov
loopne
ficomps
pop
imul
in
popa
rcrl
adc
data16
xchg
lahf
jo
inc
sub
dec
rcrl
add
ret
test
xchg
mov
push
mov
scas
cmp
stc
hlt
aad
push
push
pushl
lret
mov
outsl
mov
xor
pop
mov
mov
pop
cmpsl
mov
ljmp
ret
push
aaa
sti
stc
sbb
adc
arpl
inc
xor
orb
mov
xor
sub
test
int3
movsl
pop
aad
into
push
mov
jnp
xchg
or
pusha
sbb
fucom
xchg
rcll
lahf
jns
and
clc
mov
xorb
imul
push
les
push
sahf
sub
pop
fildll
xor
sbb
testl
icebp
jmp
outsb
add
lods
out
pop
adc
adc
outsl
xlat
or
mov
dec
cmp
pop
outsl
out
mov
dec
mov
xor
pusha
dec
adc
mov
push
mov
mov
les
stos
idivb
pop
inc
arpl
pop
jecxz
xor
shrb
sbb
or
cmp
test
add
mov
xchg
jbe
sub
jns
lea
out
xchg
pop
or
clc
cmp
mov
adc
scas
icebp
mov
repnz
jg
push
stc
das
sbb
xor
add
and
jne
ja
push
mov
mov
movsl
ljmp
dec
pop
out
jae
xor
shl
xchg
sbb
sbb
push
inc
lcall
xor
adc
aad
pop
push
sbb
divl
add
xor
repz
popl
scas
lods
mov
je
adc
mov
mov
mov
stc
test
or
std
sbb
inc
mov
xor
xchg
scas
jle
push
mov
pop
imul
ss
rorl
xchg
repnz
pop
sahf
push
adc
cmp
xchg
xrstor
pop
adc
pop
jb
inc
loopne
push
ds
and
pop
mov
aaa
iret
popf
arpl
outsl
mov
hlt
jb
cmpsb
inc
data16
sub
mov
fdivl
out
arpl
dec
test
mov
or
xchg
mov
mov
mov
shll
into
sbbb
push
nop
hlt
aaa
shr
sbb
pop
and
stc
mov
push
cmp
mov
pop
stos
jb
sbb
fistpll
testl
daa
aad
das
mov
test
imul
lcall
cli
lods
jae
das
push
add
js
hlt
inc
add
pop
jnp
icebp
clc
add
add
add
pop
dec
jo
je
loope
out
daa
insb
cld
dec
sbb
pushw
pop
ljmp
or
adc
orl
sub
inc
inc
mov
xor
dec
movsl
mov
xor
push
fdivrs
fisttpll
rcrb
loope
pop
inc
push
lret
es
aas
xor
lds
xlat
lahf
jo
inc
xchg
sbb
pop
and
pop
push
mov
jmp
popf
out
rcll
inc
push
mov
or
pop
xor
push
sub
ss
push
addr16
xorb
leave
inc
mov
jb
pop
lcall
fsub
push
or
je
jg
mov
lods
ret
or
das
pop
lock
rcll
rcl
imul
xor
jl
addl
dec
into
cmp
xchg
or
jnp
push
lods
mov
lds
push
cmpsl
stos
mov
lock
mov
adc
lret
ds
mov
out
outsl
mov
sbb
pop
addr16
pop
and
ret
addr16
out
inc
in
lret
or
mov
fsubs
repz
pmaxub
ss
outsb
sar
ljmp
cmp
je
enter
push
xchg
cmpsb
and
pop
mov
xchg
shrl
movsl
je
pop
and
in
js
sub
loope
jo
pushf
mov
pusha
mov
cmp
jb
rclb
push
pop
daa
test
clc
ror
and
xchg
mov
dec
push
cmp
fildll
push
inc
xlat
dec
pop
pop
jnp
inc
xor
push
xchg
out
mov
pusha
jp
in
push
pushf
movsl
int3
stc
xor
bound
sbb
mov
mov
push
xor
push
in
pop
jo
cmp
xor
pop
fs
sti
scas
mov
aaa
jnp
jnp
mov
pop
stos
xor
xchg
addr16
imul
cli
lret
mov
lahf
arpl
pop
xchg
push
and
push
push
push
and
jg
jo
dec
mov
push
or
les
aad
fs
lcall
or
mov
cmp
or
mov
add
daa
mov
cwtl
scas
lret
into
xor
jl
inc
adc
jno
add
ret
lea
enter
repz
fsubr
jp
test
xchg
mov
adc
repnz
adc
std
xchg
das
faddl
jg
pop
push
fidivrs
lahf
or
xchg
fwait
and
cmp
pop
inc
and
mov
sub
sbb
fsts
mov
stos
inc
hlt
lcall
inc
xor
ja
push
int3
scas
repnz
and
xchg
adc
inc
sbb
and
repz
ljmp
scas
test
xorl
cmpl
gs
sbb
fwait
xchg
jbe
hlt
aam
mov
lods
scas
adc
mov
sbb
sub
jge
push
fidivrl
push
pushf
loope
addr16
out
movsl
inc
iret
xchg
sbb
xchg
sub
lods
sbb
cmp
int
iret
sbb
mov
mulb
lods
adc
insb
popa
stos
mov
and
cld
or
push
idiv
test
repz
test
fwait
loope
imul
dec
pop
es
loopne
aaa
in
fdivr
into
push
cmp
shll
jl
rcl
leave
loop
es
adc
cltd
or
adc
adc
dec
data16
push
adc
and
icebp
pop
dec
push
sarl
popf
out
leave
mov
scas
sub
lret
mov
cmpb
mov
lret
rolb
ss
lock
cmpb
rcll
and
mull
fcomps
mov
icebp
adc
lret
xor
aam
nop
pop
xor
inc
shrl
addb
bound
mov
mov
and
in
cld
push
pop
cmp
adc
or
ficoms
fistpll
cld
pop
push
or
xchg
mov
test
rcrb
bswap
jmp
cmp
out
fmulp
mov
dec
pushf
push
hlt
dec
mov
mov
inc
mov
and
fdivrl
int
icebp
imul
jle
movsb
outsl
xchg
pusha
pusha
push
imul
movsb
mov
movaps
add
popl
or
fs
aam
add
mov
imul
repnz
xlat
jno
pop
and
adc
fsubs
xchg
jae
not
mov
add
jo
xor
jg
and
lret
gs
dec
sub
jns
pushf
cld
scas
sub
mov
jle
xchg
mov
int3
lea
out
xor
insl
or
iret
les
ljmp
dec
cltd
sub
leave
hlt
fcmovnbe
outsb
shlb
mov
lahf
dec
inc
inc
test
adc
push
scas
aaa
lcall
lods
test
push
or
lock
lds
mov
fisttps
outsl
pop
mov
xchg
mov
push
subb
iret
fistps
mov
pop
cli
rorl
data16
mov
fs
cmp
mov
rcrl
pop
inc
les
inc
mov
lcall
xor
and
inc
mov
call
or
fdivl
outsb
into
icebp
add
dec
jns
pop
jbe
lea
stos
mov
leave
inc
mov
ja
push
dec
popf
mov
xchg
iret
insl
mov
or
dec
jo
stos
fsubs
cmp
xor
sahf
dec
sub
nop
and
notl
out
sbb
adcl
or
adc
pop
sbb
loopne
inc
jae
gs
lea
or
lcall
add
push
xchg
pop
out
out
aas
mov
xor
popa
shl
mov
mov
ret
or
pusha
fs
mov
pop
fidivs
stc
push
mov
mov
jle
test
mov
cs
mov
or
xchg
mov
dec
xchg
and
xchg
dec
xor
jno
pop
scas
dec
xchg
push
leave
pop
push
xchg
adc
add
aad
xor
mov
push
cmpsl
adc
mov
or
inc
cmp
outsb
sub
ss
stc
push
mov
fs
imul
mov
lahf
test
dec
je
shrl
dec
pop
test
icebp
sub
call
adc
sub
jns
push
leave
enter
add
addr16
ljmp
out
or
or
mov
into
in
or
addr16
cmpsl
xor
addb
or
out
sub
mov
jmp
jl
inc
xor
pop
lret
push
ficompl
paddusb
repz
inc
add
stc
push
fwait
and
pop
add
add
les
jne
jo
xorl
ja
dec
sbb
xchg
enter
mov
mov
int
dec
insb
iret
ss
jg
enter
lds
es
stos
lock
ljmp
loop
aad
cmp
jge
pusha
shrl
jae
sub
inc
jmp
cmp
mov
mov
int
mov
mov
sbb
ds
xchg
xor
jnp
out
dec
fisubs
loopne
jge
in
push
pushf
mov
fsubp
and
stc
push
xchg
push
mov
leave
mul
fcmovb
mov
test
pushf
pop
adc
nop
cwtl
leave
push
ror
sub
outsl
and
test
rcr
jno
and
or
maskmovq
testl
sbb
pusha
lret
fcomps
imul
inc
mov
fcmovbe
jne
aam
movsb
int
push
jnp
dec
cmp
in
sub
pop
scas
mov
daa
inc
lods
js
les
and
jp
outsl
sbb
dec
sti
inc
lret
dec
dec
xchg
jno
es
ds
aam
scas
ds
mov
dec
add
cmp
in
insb
inc
lret
sub
mov
dec
test
mov
adc
movsl
mov
insl
pop
and
fsubrs
push
ljmp
pop
aam
sbb
call
ss
and
rorl
lret
nop
mov
sbb
rorl
jle
mov
sbb
sti
mov
push
xlat
ljmp
and
jg
and
and
in
adc
test
pop
lret
jae
cmpsb
or
dec
jecxz
in
sarl
mov
ds
adc
dec
mov
xlat
xchg
imul
cvttps2pi
pop
jmp
mov
imul
nop
push
imul
xor
popf
cmp
je
cmpsl
fdivs
cld
mov
mov
repnz
ss
jle
mov
mov
imul
sbb
imul
gs
inc
push
outsl
das
dec
repnz
mov
inc
aam
cmp
xor
sub
fsubrs
mov
ret
mov
mov
sub
pop
rol
rorb
cmp
lods
xchg
cmp
dec
outsl
shl
mov
lcall
mulb
lret
jmp
xor
and
and
ret
cmp
push
fisttpl
cmc
mov
minps
int3
sbb
mov
fwait
mov
iret
insb
icebp
sbb
mov
add
xchg
rcrb
test
add
cmp
sub
int3
xor
cwtl
mov
xchg
loop
nop
clc
sub
mov
arpl
push
sahf
mov
std
or
xlat
inc
dec
in
dec
pop
lods
push
outsl
jl
add
pop
pop
lahf
hlt
inc
ljmp
xchg
lret
xor
pop
jecxz
inc
loop
pop
fldcw
sti
jmp
imulb
and
mov
aas
cs
js
inc
pushf
shlb
dec
cld
inc
les
pop
stc
mov
stos
jmp
adc
xchg
sbb
into
push
jp
mov
aad
lahf
pop
cmp
idiv
mov
xor
dec
adc
inc
sbb
data16
aad
in
inc
into
or
pop
dec
fisttps
repnz
mov
mov
pop
lock
imul
and
cmp
lret
mov
sbb
pop
negb
xor
and
mov
js
hlt
in
xchg
pusha
loop
mov
shll
aad
dec
jp
movsl
pop
ljmp
pop
lods
test
mov
add
pop
cmc
sbb
fimuls
mov
or
scas
out
add
in
popa
stos
xchg
inc
movsl
int3
sub
xor
jp
push
add
fwait
lahf
sbbb
mov
dec
fiadds
xlat
out
xchg
jae
sub
mov
push
jbe
pusha
test
mov
xchg
movsl
and
and
out
cli
dec
andb
imul
lcall
loopne
lret
aaa
cmc
test
sbb
mov
ds
xchg
movsb
cmpsl
cmpsb
stos
mov
stc
ss
mov
mov
push
mov
dec
jle
sbb
icebp
dec
xchg
and
pop
test
xchg
xor
mov
ja
rorl
pandn
es
cmp
xchg
subb
xchg
rol
cmc
and
push
repnz
imul
in
add
fmuls
jne
or
test
sub
mov
lock
sbb
dec
cmp
scas
fistps
imul
inc
adc
xor
les
push
lods
lea
jne
and
hlt
sbb
stos
sub
je
xlat
cld
mov
out
push
add
xor
test
idiv
and
addb
ljmp
adc
lret
pushf
sub
repz
fnstenv
push
inc
xor
out
push
xor
jmp
int
push
in
jmp
xchg
inc
aas
mov
adc
mov
pop
mov
out
sahf
test
nop
add
in
sbb
or
mov
mov
pop
js
shll
add
pop
sbb
mov
adc
push
sub
call
fstpt
jnp
or
cmpsl
cmp
push
sbb
mov
push
test
sbb
and
dec
dec
mov
shrb
or
cmp
dec
mov
imul
inc
xor
sarb
sbb
or
sub
cmpsb
cwtl
inc
add
popf
jp
mov
jns
mov
lods
push
test
out
mov
sarl
addr16
ret
add
nop
lods
addr16
movsb
xchg
push
mov
in
inc
div
jecxz
pusha
lods
pop
js
jl
inc
adc
mov
pop
mov
and
xabort
mov
cltd
adc
gs
sbb
dec
cltd
ret
call
sbb
subb
bound
mov
mov
dec
xchg
mov
add
dec
xchg
sbb
cmp
into
mov
sub
pop
inc
add
fwait
or
pop
xchg
mov
scas
push
xor
aad
cmp
jns
mov
je
mov
ret
sbb
les
xchg
stos
push
push
lods
decw
lret
jae
loop
sbb
sarb
clc
faddp
sar
lcall
sbb
add
fistl
mov
imul
call
and
jmp
in
ret
sbb
stc
mov
xchg
loopne
repz
mov
sub
les
jno
cmc
adc
inc
mov
cwtl
sbb
popf
aas
sbbb
jb
call
xor
fisttpll
inc
xor
les
ror
xchg
and
lock
jne
jne
pop
out
cltd
fldenv
fdivrs
inc
mov
inc
insl
mov
and
xchg
mov
xchg
addr16
mov
loopne
add
iret
arpl
ret
push
dec
adcb
stc
cmp
pop
les
and
ret
addr16
sbb
fiadds
dec
jae
pop
mov
ja
nop
and
pop
mov
sbb
push
lock
mov
pop
mov
adc
repnz
push
js
scas
mov
push
sub
sub
rclb
add
cmpsb
cmpsb
jo
jecxz
js
xchg
popa
ret
jne
fistpl
hlt
popf
and
out
sahf
rorb
cmp
pop
ss
mov
push
les
or
jl
dec
add
andl
subl
or
adc
jo
xor
fists
stc
sbb
and
pop
insl
xor
mov
pop
fisubl
mov
sti
mov
jmp
movsb
mov
sub
xor
mov
mov
mov
insl
xchg
xlat
xchg
jnp
mov
iret
sbb
mov
outsl
js
xchg
sar
jb
cmp
test
add
pushf
imul
cmpsl
outsb
movsl
fidivrs
inc
pop
pop
andl
nop
jne
xor
outsb
sub
sub
pop
pop
add
ret
add
test
in
and
add
adc
sub
outsl
imul
stc
loop
add
dec
lods
adc
push
mov
dec
pop
repnz
or
mov
rcrl
cld
out
gs
xchg
cwtl
lea
loop
aaa
jp
cltd
out
jbe
mov
test
and
clc
int
or
dec
jo
stc
push
scas
inc
aad
sbb
jle
adc
cli
push
sbb
repz
inc
sub
adc
outsb
push
loopne
shr
xchg
inc
lods
push
mov
bound
xchg
cmp
pop
negl
dec
xor
int3
orb
js
push
sub
inc
mov
jle
sub
mov
cmp
xchg
ljmp
inc
pop
inc
iret
cmp
jae
es
adc
imul
nop
mov
jae
lods
adc
gs
rolb
cmc
sub
inc
lret
push
les
or
stc
adc
test
stc
sbb
or
cmp
inc
inc
arpl
imul
push
imul
call
pop
arpl
mov
stos
int3
push
inc
pop
out
sbb
jae
icebp
add
push
xchg
mov
cmp
mov
sub
mov
pop
push
mov
inc
mov
leave
sub
lret
nop
scas
jp
pop
add
repz
push
add
sti
aaa
dec
mov
psubsw
jb
sahf
aaa
mov
sbb
in
pop
mov
jns
or
and
repz
in
dec
mov
aad
imul
and
push
test
ret
leave
cmpsl
add
jge
gs
je
add
sub
xchg
int
push
xchg
push
add
sbb
sub
xor
inc
dec
test
mov
adc
test
pop
mov
lret
xchg
repnz
call
shll
fldenv
or
outsl
out
sub
and
jbe
std
jge
xor
mov
cmc
inc
mov
adcb
jno
push
shlb
lcall
push
in
add
push
notl
push
sahf
mov
je
arpl
ret
int3
int
insl
lock
mov
mov
arpl
imul
aaa
mov
sub
in
mov
das
stos
mov
push
xchg
push
out
cli
and
cwtl
mov
cmpsl
pop
or
lea
sbb
xchg
jne
jmp
sub
adc
mov
imul
jecxz
lds
sub
shll
pop
push
xchg
push
iret
push
xchg
push
cwtl
sbb
imul
xchg
imul
pop
aas
addr16
jmp
ljmp
sub
leave
and
in
add
int3
inc
daa
imul
mov
or
pop
inc
xor
stc
in
jge
lea
jecxz
xor
clc
xor
pushf
mov
sub
xchg
adc
orb
and
clc
push
xor
mov
inc
and
dec
add
inc
sbb
and
mov
push
sbbb
ss
sub
push
stos
orl
sbb
aam
xchg
push
adc
testl
xchg
outsl
jnp
test
pushf
fwait
mov
lods
or
mov
mov
xchg
pushl
fistpl
adc
fcos
rorb
rep
scas
ljmp
mov
xor
dec
inc
sahf
add
test
loop
mov
lods
adc
inc
movsl
in
gs
test
or
gs
pop
jp
inc
outsl
mov
pop
rcl
int3
rcr
cmp
inc
sahf
aam
int3
imul
push
xchg
push
gs
ret
data16
pop
dec
sub
stos
cmp
add
sub
fs
rclb
pop
dec
mov
divl
repz
jae
test
dec
outsl
sbb
adc
mov
es
aaa
and
lds
dec
lcall
jo
pop
nop
push
inc
cwtl
jle
push
call
andb
test
cwtl
and
xchg
mov
arpl
lret
cmp
jnp
mov
bound
mov
and
lret
dec
ret
das
or
aaa
push
inc
mov
lods
fcoms
inc
mov
xchg
pushf
imul
jns
test
jge
jae
adc
ret
int3
add
push
mov
add
int
adc
dec
and
mov
jmp
dec
xor
xchg
call
xor
push
sahf
add
jmp
jns
mov
icebp
sbb
lret
pushf
pushf
mov
in
cli
jmp
or
je
mov
or
inc
cmpl
sub
stos
pop
mov
sbb
mov
stos
or
xchg
dec
jno
mov
push
bnd
mov
jbe
sbb
call
ret
pop
and
stos
clc
fs
pop
ds
orb
movsb
xchg
push
or
outsb
test
fistps
pop
dec
sub
shrl
in
push
call
int3
jl
shlb
push
mov
data16
out
cmp
test
pop
and
xchg
stc
push
or
jae
movsl
pop
enter
pop
mov
in
pop
push
push
sti
push
arpl
outsb
cwtl
sub
sub
mov
aas
std
out
and
ret
push
pop
sub
roll
divl
xchg
nop
mov
insb
out
ret
jo
and
psubd
lods
pop
rclb
pop
loop
js
aam
loopne
aam
scas
rolb
in
imul
pop
movaps
or
sub
dec
dec
outsb
jmp
int3
pop
lret
addr16
repnz
rol
jmp
dec
shlb
in
ljmp
pop
and
adc
mov
sarb
fbstp
mov
popf
stc
sbb
fsubrs
jp
repz
pop
jo
pop
fwait
add
out
xor
mov
shll
adc
cmpsl
mov
mov
imulb
xchg
adc
xchg
fcoml
sbb
addl
dec
shlb
pushf
dec
push
inc
add
jecxz
in
fs
mov
xchg
dec
cmpsl
bound
aad
push
sub
in
push
dec
sbb
repz
scas
aad
adc
sbb
cli
jo
sbb
push
pushf
movsl
adc
pop
out
leave
or
xchg
popf
jno
jno
adc
cmp
repnz
out
int3
inc
lret
into
ja
rcll
pop
mov
mov
jl
out
in
enter
sub
fcmovne
sbb
push
fimull
dec
jl
dec
dec
lret
std
pop
lods
mov
shll
add
dec
iret
sub
xor
jnp
mov
out
scas
lret
jns
fwait
subl
call
cltd
pop
cltd
and
sub
inc
mov
jb
dec
push
or
inc
daa
pop
mov
leave
inc
cld
test
insb
ss
mov
cwtl
fidivrs
mov
push
pop
xor
and
inc
xchg
mov
in
xchg
test
sbb
xor
mov
adcb
pop
cmc
aam
je
mov
insb
das
icebp
cmpsb
jns
orl
cmp
sub
lock
jle
sbb
sbb
and
inc
and
pop
mov
in
nop
sahf
js
idiv
adc
fisubs
rcll
std
cli
inc
stc
int
cmp
movl
pop
jne
lret
adc
mov
je
int
movsb
or
inc
fs
fcmove
or
pop
cmp
adc
xchg
add
or
jo
xor
mov
addr16
dec
adc
inc
imul
push
or
lock
mov
push
mov
ror
mov
or
xchg
cmp
into
xor
mov
dec
loopne
pop
mov
pop
jae
mov
mov
ret
clc
insb
in
xchg
pop
sub
sub
fiadds
jecxz
xchg
dec
adc
lret
enter
lds
imul
int
lahf
or
push
aam
ret
push
arpl
mov
in
sbb
cmp
pop
pushf
sarl
or
test
andb
int
jmp
das
inc
test
mov
vmovntps
mov
aad
std
sahf
sub
mov
dec
mov
dec
and
insb
call
xor
sbb
xor
shr
xchg
loop
sbb
inc
mov
push
inc
loop
aaa
fistpl
and
lock
fiaddl
movsl
sub
movsb
notl
lea
cmp
pushf
sbb
rcl
mov
push
imul
lret
pushf
jno
push
scas
bnd
sahf
add
cmc
aad
fs
push
popf
iret
push
add
sub
outsb
outsb
cmp
aaa
les
stos
xor
ss
arpl
mov
decl
aam
popf
notl
xor
jp
mov
test
cmp
add
and
addl
push
xor
scas
outsb
sti
mov
mov
fcoms
mov
sbb
sbb
call
mov
test
test
in
rcrl
add
sbb
jno
out
jne
lret
or
pop
xlat
push
sbb
addr16
test
or
ja
es
adc
dec
fisttpll
push
sarl
sbbl
aaa
lds
pop
pop
xchg
and
test
xchg
jl
or
dec
dec
sub
pop
nop
lock
mov
push
push
arpl
popa
sub
add
adc
mov
add
cmp
cmc
jle
repz
inc
inc
jecxz
shll
gs
lret
ja
fcmovnb
fldenv
mov
and
and
je
push
subb
aam
pop
mov
xor
adc
lods
mov
or
repnz
cmp
mov
xor
lods
lahf
mov
repnz
test
mov
sahf
aad
pop
push
cmp
xchg
dec
push
or
in
insb
jb
cmp
adcb
mov
push
fsub
adc
xor
pop
je
scas
repnz
lock
push
js
xchg
or
adc
mov
dec
pop
sub
arpl
cmp
mov
pusha
mov
jecxz
push
inc
mov
pop
cmc
sahf
push
add
cwtl
jmp
mov
addb
jns
ret
sub
insb
cli
add
clc
and
rorb
cmp
lahf
icebp
fistpl
mov
shlb
mov
stc
ss
shll
cltd
sbb
pop
mov
jg
sbb
shll
std
cmp
ret
xchg
add
test
fldz
xor
loope
mov
in
psubsw
cmp
rcr
cmp
ret
mov
lret
mov
dec
fucompp
xchg
stc
inc
lods
sub
fdivl
xchg
add
shrl
inc
jb
arpl
sbb
nop
xchg
pop
xor
push
jo
fwait
stc
xor
aaa
add
add
xchg
and
adc
xchg
jb
cmpsl
dec
and
sbb
jbe
cmp
dec
mov
sub
stc
jmp
push
nop
mov
sub
out
outsl
inc
sub
mov
inc
data16
vmaxpd
addr16
sbb
lret
movsb
add
add
dec
in
aas
cs
sbb
sub
jecxz
adc
popf
and
fdivp
adc
xchg
out
popf
movsl
pop
or
int
adc
enter
mov
add
hlt
add
jne
test
adc
push
lea
sub
jl
sub
mov
mov
sbb
arpl
jnp
pop
dec
lcall
in
xor
push
shl
cmpsl
xor
xor
in
and
ret
jg
repz
mov
popf
fnstcw
imul
pop
decb
gs
pusha
pop
aam
sub
sbb
inc
scas
and
push
dec
fiadds
sbb
dec
and
jne
adc
popa
dec
shrb
dec
cmp
adc
inc
fisttps
mov
into
mov
es
sub
pop
stos
mov
pop
lret
out
mov
ret
jmp
and
inc
jnp
mov
incl
sub
sub
aas
mov
push
pop
lods
mov
aam
mov
xchg
dec
inc
mov
push
int3
add
and
lret
fsubr
movsl
sbb
add
add
movsb
sbb
jl
test
cld
ret
popf
scas
dec
mov
pop
orb
inc
mov
sbb
jecxz
cld
mov
aaa
xchg
or
fisttpl
or
dec
mov
dec
xor
xlat
hlt
cmp
lahf
adc
stos
insl
hlt
xor
xor
sti
add
pop
pop
sbb
xchg
test
fistpl
mov
daa
arpl
cmp
popa
sti
sbb
sub
mov
mov
inc
mov
enter
xchg
lods
xchg
pop
cmpsl
jmp
pop
fiadds
inc
or
lea
enter
adc
in
jno
mov
and
in
fmul
adc
mov
and
inc
mov
adc
xor
push
pop
mov
mov
push
test
xor
stc
rolb
add
dec
movsb
stos
out
out
add
vgf2p8affineinvqb
sti
inc
jb
mov
ljmp
jge
mov
fisubl
jl
aaa
sub
aas
xor
lret
sub
int3
cmpsb
adc
pop
push
fcomp
cli
push
daa
dec
sub
inc
hlt
aas
jno
jl
push
or
xor
into
loopne
into
aas
loop
pop
nop
lret
in
in
dec
loop
ljmp
iret
or
stc
icebp
ret
push
jl
mov
sbb
data16
in
xchg
neg
inc
pusha
adc
icebp
adc
jle
addr16
push
out
jno
enter
mov
jbe
push
mov
fwait
je
loope
lds
xor
mov
jl
xchg
addr16
lock
sub
pop
fbstp
or
adc
cs
decl
daa
iret
mov
lds
mov
xchg
lahf
or
mov
dec
dec
dec
xor
sar
and
xchg
mov
push
test
fsubr
pop
nop
popf
add
mov
ljmp
stos
add
orb
pop
in
out
shll
fdivs
push
mov
cs
xor
jge
inc
inc
jnp
xchg
fsts
inc
push
jo
push
cmpsl
xchg
add
leave
les
mov
fnstenv
xchg
in
xor
nop
mov
sbb
movsl
mov
pop
mov
popa
inc
mov
inc
es
enter
sbb
icebp
mov
pushf
stc
lock
ret
mov
and
mov
hlt
jo
repnz
add
test
ret
lcall
dec
ds
lcall
sbb
xorl
sub
mov
stos
mov
mov
lds
inc
insb
mov
sbb
dec
call
cmpsl
enter
and
es
sti
mov
xlat
pushf
push
aad
lret
lret
mov
lock
lods
cmpsb
mov
outsb
sbb
mov
jb
xchg
shlb
inc
mov
or
cmove
cmpsl
mov
sbb
and
inc
mov
sbb
sbb
add
dec
push
repz
cmp
leave
daa
lret
xor
icebp
dec
gs
movsl
or
jnp
push
or
pop
in
add
test
xor
lret
shll
cmp
call
xchg
loopne
push
add
movsb
in
sbb
pop
stc
and
jno
pop
out
dec
adc
jl
scas
inc
add
fs
scas
jmp
jne
mov
jge
cmp
ret
scas
cltd
sbb
popa
daa
push
dec
jmp
push
arpl
sub
jne
je
das
jnp
jmp
in
push
and
fldl
int3
leave
xor
sub
aaa
jl
mov
fwait
popa
push
mov
mov
gs
jmp
shr
or
inc
aaa
push
shlb
dec
inc
stos
lret
mov
add
sbb
mov
adc
jp
test
lods
test
icebp
fidivrs
mov
push
or
dec
or
repnz
insl
xor
cmpsl
xchg
mov
mov
xor
mov
fwait
out
add
mov
or
adc
mov
pop
and
push
int
cmpsb
cs
cltd
pusha
mov
xor
pop
xchg
push
test
cltd
mov
cmp
mov
mov
fisttpl
sub
enter
cs
daa
repz
and
mov
xchg
sbb
icebp
mov
pop
inc
ror
mov
cmp
fbld
push
and
fistpl
or
xorl
scas
les
inc
push
enter
pop
icebp
and
insb
insb
jns
inc
dec
pop
adc
mov
stc
push
jno
aam
pop
aas
adc
popa
add
jne
sbb
js
rcll
test
jle
inc
imul
fimull
setns
mov
push
mov
mov
push
add
stc
mov
loopne
insb
imul
hlt
pop
jmp
call
test
xor
sbb
hlt
dec
or
addr16
int
mulb
dec
push
je
cmpsb
daa
inc
or
enter
mov
in
xor
vpaddd
popa
int3
out
mov
sbb
shl
adc
adc
push
dec
hlt
scas
mov
cmp
faddl
xchg
daa
adc
int3
scas
les
test
mov
sub
jae
test
shl
add
ficoml
mov
sbb
hlt
insb
shll
mov
rcll
aad
out
mov
lea
push
shrb
add
lret
xchg
aam
cmp
aas
stos
sub
test
pop
xchg
mov
or
jg
cwtl
push
and
movl
not
cmp
xor
dec
adc
xlat
and
xor
popf
mov
scas
mov
or
ficoml
push
xor
mov
push
pop
jns
cmp
rolb
adc
fistl
je
or
lods
dec
movsb
sti
je
shr
mov
xchg
test
xor
out
ljmp
mov
xchg
cmp
dec
in
sub
or
out
dec
mov
push
add
push
inc
add
aad
cmp
add
dec
xchg
mov
mov
xlat
nop
pop
sub
fwait
lods
pop
popl
mov
mov
inc
dec
int3
xlat
sub
jnp,pn
out
shl
mov
pop
int3
push
mov
add
sbb
insb
jae
sub
xchg
or
rolb
cld
jae
ljmp
test
jae
setns
xchg
shrb
lahf
or
aam
in
cmc
fs
sub
push
loop
in
std
sub
xchg
xchg
fnstenv
out
loopne
divl
movsb
and
inc
dec
ja
push
sbb
repz
adc
js
fisubs
mov
add
xchg
push
add
mov
lods
adc
cmpsb
popf
ret
mov
or
loopne
xchg
popa
int3
in
inc
xor
xor
lods
mov
mov
dec
adc
clc
xchg
into
cmp
or
into
mov
sub
add
lahf
lods
mov
jle
test
jge
push
movsl
ja
test
stos
pop
xchg
cmpb
ss
sub
xchg
popa
dec
mov
aad
xchg
xor
enter
jp
push
adc
je
fcoms
pop
mov
lahf
or
jb
lods
add
insb
cmc
les
in
test
ret
sub
jne
jae
out
sub
add
shlb
dec
scas
out
loopne
shrl
jecxz
adc
cltd
push
es
and
xchg
mov
dec
xchg
sub
inc
mov
sbb
mov
in
sti
idivb
dec
xchg
test
dec
insb
int
push
jno
pop
xlat
jae
les
int
imull
xor
mov
mov
jmp
pop
inc
lods
in
aas
cmpsb
in
add
jnp
adc
outsl
into
or
jmp
mov
pushf
add
and
mov
add
or
out
rorb
jns
jb
pop
add
push
cmp
pop
mov
fadd
mov
and
xchg
push
outsb
js
pop
pop
shr
leave
push
test
xchg
sarl
and
js
jle
ja
and
lock
outsb
jae
scas
bound
fstpt
rcr
lock
add
inc
lcall
xchg
repz
mov
sbb
and
pop
mov
jge
add
pop
adc
jle
repz
test
jbe
insl
pop
and
sub
mov
fldenv
add
int
mov
mov
aam
mov
pop
rorl
pop
push
inc
push
push
xchg
sub
popf
les
lods
in
push
mov
sub
jmp
add
mov
stos
ficoms
push
out
mov
shl
sbb
and
in
mov
nop
sbb
cwtl
push
pop
jns
dec
jl
incl
sub
xlat
mov
push
in
test
lcall
in
mov
loopne
and
xor
iret
lret
lds
xchg
xor
int3
or
pushl
push
in
clc
out
sub
mov
push
mov
and
test
xchg
fistps
ret
shlb
cwtl
mov
mov
jl
hlt
loop,pn
xchg
cmpsb
inc
pop
bound
subl
add
mov
imul
adc
cmp
and
mov
pop
sub
rcrb
stc
movsl
mov
cmpsl
jle
lods
arpl
push
mov
jle
pop
jno
add
cmpsb
pop
repz
js
adc
jnp
cmp
inc
scas
daa
aam
mov
sub
dec
rcll
popa
call
call
lcall
pop
jmp
addr16
test
decl
add
loop
add
xor
jns
and
inc
pushf
mov
cltd
push
mov
add
dec
test
xor
lea
sbb
push
push
mov
mov
mov
jnp
mov
in
cld
and
mov
std
test
imul
inc
add
inc
sub
ficoml
lock
imul
bound
out
jl
out
ret
xchg
pop
mov
sti
inc
sahf
cmp
xchg
add
xchg
adc
in
adcb
scas
out
sbb
flds
ja
jnp
jns
addb
lock
jle
dec
aaa
repz
psllw
jns
or
loop
inc
mov
pop
insb
movsb
test
loopne
xchg
add
lds
loope
sahf
leave
lret
mov
lock
inc
jmp
mov
lahf
add
fdivrp
adc
dec
insb
sub
aad
lret
std
xchg
pop
push
mov
mov
test
ret
pushf
jno
fisubs
push
pushf
rorb
cmp
pop
mov
movsb
stos
mov
aam
inc
push
aam
lds
and
push
dec
xchg
lret
mov
jnp
mov
mov
sahf
loopne
icebp
into
jl
mov
stos
sbb
sti
xor
mov
es
cltd
je
fisubrs
cmp
sub
jae
inc
aaa
cmp
nop
sbb
sub
push
adc
imul
cmp
mov
jno
js
mov
imul
add
jb
ljmp
mov
push
jp
test
xchg
dec
push
inc
mov
sbb
cmc
xchg
lds
pop
dec
movsb
push
or
jecxz
movsl
cli
or
add
jbe
jae
push
outsb
cmp
in
sbb
cli
mov
push
inc
add
fcmovbe
push
dec
sbb
mov
bound
imul
out
and
sti
mov
xchg
mov
divb
add
or
and
pop
dec
jp
mov
adc
ds
cmpl
subl
js
push
testl
cld
sti
xchg
and
cmp
adcl
inc
jno
mov
dec
lret
mov
inc
aam
add
movsb
pop
test
and
push
cwtl
cmc
adcl
sar
fmul
addr16
inc
mov
idivl
lods
jbe
fildl
adc
in
jo
nop
negb
arpl
and
cmp
lods
push
addr16
scas
push
jbe
aas
adc
andl
subl
addr16
add
mov
adc
repnz
shl
push
int3
ljmp
xorl
lds
or
sub
lret
call
mulb
or
shlb
lea
dec
add
cmp
mov
mov
enter
insl
les
stc
gs
dec
scas
inc
sbb
pop
repnz
mov
mov
pop
imul
dec
in
sarl
xchg
fists
insl
dec
imul
and
int3
insb
push
not
andb
xor
jnp
sbb
pop
mov
xor
cmp
mov
adc
add
dec
pushw
aaa
stc
sub
mov
lods
pop
outsb
sub
cmp
inc
pop
das
in
xchg
lcall
and
and
or
and
addb
xlat
or
insl
or
cwtl
cmp
xor
jo
sub
push
sar
ret
fstps
mov
or
call
clc
popf
mov
and
jg
xor
shlb
outsb
test
fstp
mov
cltd
sub
or
fisubs
push
pop
jp
add
inc
add
or
dec
lea
xor
xchg
fisubs
fst
or
cwtl
push
inc
fisttpll
push
adc
rolb
mov
fnstcw
mov
push
jle
stos
call
mov
adc
sbb
adc
fidivrl
cmp
sbb
cmp
rcrl
popf
sub
outsb
fisubrs
pop
lret
frstor
aam
add
sub
jbe
shrl
push
ja
aaa
repz
cli
out
dec
pop
xor
or
jl
sbb
movsl
jnp
rcl
dec
fildl
out
dec
mov
pop
mov
iret
jmp
sarl
lods
shl
icebp
ds
popf
in
fdivr
push
or
mov
jb
fisttps
or
dec
ds
bound
adc
jl
sti
into
clc
mov
js
sti
jle
xchg
test
cmp
jae
stos
sti
sti
mov
mov
cwtl
leave
xchg
leave
add
xor
cwtl
loope
xor
adc
ss
jp
xchg
test
jge
mov
or
xchg
repz
rcll
mov
inc
loope
xchg
or
insb
mov
js
inc
cmp
enter
lahf
lret
pop
lods
in
jns
mov
push
and
enter
or
sbb
push
inc
ja
adc
insl
incl
sbb
cwtl
out
mov
hlt
outsb
inc
rolb
mov
insl
rcrb
fwait
dec
inc
ljmp
fstps
ret
icebp
push
pop
insb
mov
ret
mov
sti
xchg
and
or
insb
jl
sbb
into
jne
cld
cmpb
add
faddl
test
cmc
out
or
xlat
das
xor
fimull
inc
arpl
dec
jecxz
insl
aam
aaa
jne
or
sbb
mov
xchg
iret
mov
lods
cmp
sbb
ror
push
sub
cwtl
inc
out
or
in
aaa
and
fimuls
xor
sbb
mov
mov
jo
xchg
xchg
lods
add
xor
out
jg
loop
mov
outsb
fidivl
dec
aam
lahf
cmp
sub
ret
sbb
mov
pop
es
cli
push
jo
pop
jecxz
cld
ret
mov
in
xor
test
pop
aas
push
mov
imul
bnd
mov
cmc
loope
js
push
jl
pusha
and
dec
pop
clflush
jle,pt
iret
stos
xor
cmp
clc
cld
call
pop
push
adc
add
ljmp
inc
pop
cld
mov
sub
pop
stos
leave
mov
es
mov
repz
add
decl
jne
adc
mov
jp
nop
aaa
iret
pop
sub
cmp
pop
call
inc
mov
addr16
mov
mov
repz
xchg
and
mov
movsb
lea
sub
xor
mov
dec
lods
movsb
push
pop
push
jecxz
push
jp
imul
mov
mov
mov
xor
push
mov
inc
xchg
outsb
xchg
out
mov
sbb
cwtl
bound
addr16
push
cmp
adc
sahf
lret
mov
jle
or
sbbb
and
add
dec
and
add
or
xor
popa
jns
xchg
jg
lahf
leave
or
cmp
jle
daa
decl
jle
outsb
jecxz
adcb
lcall
pop
or
mov
cli
test
mov
inc
movsl
pxor
cmp
adc
add
mov
ja
dec
dec
out
adc
or
enter
int3
dec
xor
test
out
jg
out
loope
add
dec
push
cmp
enter
sub
jne
pop
sub
in
aad
pop
mov
mov
xchg
xchg
ljmp
adc
pop
je
out
fs
dec
shrl
out
aad
inc
or
sti
xchg
dec
add
fiaddl
pop
pop
push
rol
loop
test
mov
in
mov
dec
rcrb
hlt
in
loop
inc
push
stos
call
sbb
notl
push
inc
sub
clc
cmp
insb
dec
xchg
ret
add
rolb
sbb
les
pop
out
insl
sbb
mov
xlat
test
jle
popf
lret
push
mov
cltd
sub
or
jge
xor
subl
push
adc
nop
icebp
les
cmp
aad
mov
pop
imul
jbe
popa
imul
je
movsb
movsl
insl
cmp
mov
mov
xor
addl
mov
xchg
mov
sub
hlt
testl
mov
je
sub
lea
mov
push
push
bound
lods
mov
push
mov
add
pop
out
inc
sbb
out
pop
fildll
ret
pop
dec
mov
imul
dec
lret
mov
mov
mul
nop
jnp
and
pop
cmpsl
xchg
xor
or
mov
dec
ja
sarl
mov
les
into
loop
orb
in
jbe
cltd
jl
lock
idivl
mov
lcall
inc
mov
cmp
add
xor
pop
pop
push
out
push
in
jp
inc
scas
test
xor
sub
mov
insb
roll
out
stos
pop
cltd
ljmp
cmp
roll
mov
and
pushf
jg
pop
pusha
sub
xor
push
divb
and
jbe
test
cmpsb
adc
pop
jmp
pop
je
xchg
loope
cmp
mov
scas
stc
adc
cmp
outsb
mov
mov
in
das
xchg
mov
mov
push
data16
scas
sbb
outsb
and
xchg
stos
rorl
aaa
jg
xchg
scas
dec
pop
dec
aaa
mov
cmpsl
adc
rclb
fistpll
jns
lahf
test
mov
out
outsb
jnp
mov
push
jp
sbb
cmp
jnp
addr16
jb
add
pop
cmp
enter
add
ret
push
adc
pop
in
es
stos
movb
test
cwtl
cs
fs
mov
mov
sub
cmpsb
outsb
hlt
les
lds
jl
shrd
pop
jo
jne
jne
pushf
add
in
mov
push
dec
add
data16
jb
icebp
dec
push
cli
enter
xor
pop
pop
jnp
sti
push
push
mov
mov
test
push
lods
test
aam
mull
inc
and
and
daa
xor
mov
add
xor
push
push
shrb
mov
aad
mov
in
or
dec
ficomps
jne
repnz
mov
js
popa
xorb
sahf
xchg
repnz
inc
insl
xchg
pop
xchg
int
pop
outsl
jno
cmp
andb
and
mov
int
add
cmp
jbe
and
inc
add
rol
xor
push
or
push
or
jge
outsl
xlat
jg
xchg
pop
addr16
icebp
xchg
and
imul
push
or
dec
push
int3
fnsave
mov
les
int3
scas
outsb
out
dec
fstps
jns
push
sbb
or
push
test
insl
adc
enter
xor
sub
mov
lods
push
dec
xchg
xchg
test
icebp
push
sbb
pusha
inc
pop
xor
std
test
fisubrl
jb
jnp
mov
and
stc
inc
outsl
cs
jno
rcll
rolb
das
lret
jbe
popa
push
lret
pop
xor
fwait
outsl
adc
jns
dec
nop
imul
push
cmp
jne
daa
aas
push
jno
cmp
push
mov
roll
int
clc
jg
sub
sub
outsb
das
push
pop
cmp
or
sti
push
ljmp
push
sbb
clc
add
pop
mov
ss
xor
sbb
inc
sub
loopne
push
and
fistps
rsqrtps
pusha
shl
dec
lcall
in
mov
imul
sub
ljmp
cld
mov
mov
nop
xchg
cmp
popf
jl
dec
xor
mov
sbbb
jge
cmp
or
push
les
dec
clc
dec
push
inc
or
sbb
ljmp
xor
cli
xchg
jmp
mov
mov
lods
inc
cwtl
push
je
xor
inc
stos
aam
icebp
jo
add
cmp
jb
mov
icebp
push
push
nop
and
and
movsb
dec
sub
cmpsl
add
push
insb
outsb
cli
fmul
jle
cmc
ret
adc
insb
lret
sbb
add
arpl
xchg
rcrb
mov
loopne
lret
dec
sub
cmp
jns
ja
fists
cltd
in
iret
adc
dec
sub
test
add
mov
sbb
pop
cwtl
icebp
rcrl
xchg
or
add
incl
mov
mov
es
push
out
mov
jo
inc
dec
int
je
icebp
rcr
inc
lods
rorb
mov
add
xor
xor
adc
and
gs
adc
mov
xchg
iret
cld
std
mov
testb
cmc
adc
dec
add
inc
iret
out
loop
fwait
out
push
xor
lcall
mov
inc
jp
mov
std
out
mulb
ret
out
lds
mov
cltd
sbb
popf
mov
dec
sbb
and
and
mov
or
adc
ds
xor
and
movb
pop
sub
ja
repz
sub
jmp
jne
aas
out
mov
movsb
cmp
pop
xchg
pslld
inc
xor
movsl
xor
pop
mov
stos
add
dec
arpl
dec
or
mov
sbb
dec
fldcw
shll
cs
xchg
imul
mov
daa
sbb
rcl
jge
pushf
jp
inc
in
push
mov
mov
shll
jg
fnstsw
adc
jo
xchg
lret
lds
or
mov
mov
aad
shll
push
fwait
jmp
outsb
je
add
and
inc
pop
dec
jnp
inc
jns
sub
jo
xchg
outsl
adcb
leave
sub
test
xor
add
iret
jbe
push
loop
jb
dec
loop
ret
pop
shr
cmpsb
inc
mov
sub
fistpll
idivb
out
subl
divb
mov
out
jg
mov
loope
addr16
mov
cmp
mov
fdivrp
mov
pop
cli
lret
push
pop
ds
adc
cmp
sbb
or
dec
adc
cmp
ret
test
dec
jmp
pop
outsb
xor
lods
add
pop
mov
cmp
push
std
add
adc
stc
leave
mov
pop
xchg
jnp
pop
dec
xor
jae
sbb
iret
repnz
push
arpl
stc
push
in
push
sub
pop
aam
aad
dec
std
movb
scas
xor
addb
test
movsl
mov
mov
cmp
push
mov
add
lahf
adcl
gs
adc
daa
push
mov
insl
insb
mov
loop
xor
or
and
loop
xchg
cld
jo
xor
mov
jnp
fucomi
idiv
int
insb
jmp
test
ret
cmp
popf
bound
pop
pop
dec
or
inc
adc
fwait
inc
aam
dec
mov
xchg
ret
push
lods
das
jo
cli
shrl
imul
dec
scas
sahf
nop
xor
mov
sub
mov
add
and
push
mov
push
ja
in
pop
push
xchg
lods
xchg
lahf
push
mov
or
jns
fmull
aad
mov
mov
idivl
movsl
stc
in
cmpsb
xor
inc
imul
mov
subl
les
xchg
and
mov
pushf
in
imul
push
in
bound
js
or
mov
mov
jmp
push
mov
mov
and
cmpsl
outsl
jns
mov
xchg
cmpsb
mov
mov
cld
sub
add
nop
cmpsl
jo
shl
aam
jno
pop
push
imul
call
lock
mov
scas
jae
jle
lret
lcall
add
jo
xchg
mov
imul
ss
fwait
imul
jbe
sbb
xchg
scas
dec
jo
les
in
push
repnz
xlat
and
jg
jo
sub
ret
stos
lods
fisubrl
adc
and
fiaddl
push
and
rolb
xchg
call
ret
and
repz
iret
push
aas
loope
push
mov
lea
sbb
pop
push
adc
mov
sub
aas
hlt
inc
inc
pop
jg
and
out
pushf
stc
mov
xchg
jg
std
xchg
aas
push
popf
in
pop
addr16
test
mov
shl
scas
fs
cs
fsubp
sbb
pop
scas
subl
jns
ret
sahf
stos
imul
cmovo
mov
cli
mov
nop
js
or
roll
iret
adc
jnp
outsl
adc
mov
sbb
fildl
arpl
sbb
jne
inc
xchg
mov
invd
xor
in
imul
lods
mov
or
and
inc
lret
mov
cli
int3
xor
and
cmp
jecxz
jb
push
dec
addb
not
xlat
push
inc
cmp
les
daa
es
sub
jns
push
jl
lahf
dec
cmp
dec
gs
mov
push
arpl
out
jg
ljmp
mov
push
fcmovu
movsl
mov
or
pop
xor
mov
xor
mov
adc
add
mov
xchg
xorb
shl
xchg
push
push
push
mov
mov
pop
sbb
imul
pop
jmp
xchg
xchg
cmpsb
das
dec
stc
loope
int
pop
sbbl
cmp
xorb
rcl
jb
shlb
push
mov
and
out
jecxz
xchg
fsubs
scas
sub
dec
sub
enter
insl
imul
or
repz
push
xchg
pop
cmp
mov
adcb
cli
and
mov
int
stos
fdiv
rcr
ret
mov
pop
nop
clc
jl
test
loopne
cltd
lds
xchg
inc
dec
or
jle
jmp
rcll
cld
dec
dec
sub
mov
adc
sub
lret
movsl
sbb
xchg
lea
pushf
sub
popf
ja
add
jle
jecxz
xchg
inc
push
or
clc
or
xor
mov
mov
test
dec
sub
inc
cli
mov
xchg
aas
test
imul
jle
cld
mov
shlb
std
jg
push
pushf
mov
fwait
cmp
mov
outsl
fmuls
and
out
dec
push
and
je
sub
insb
sbb
test
inc
pop
pop
jge
in
sub
push
ja
fwait
sarb
adc
int
bound
test
loope
loop
test
jmp
mov
jge
lea
fidivs
add
push
cmp
inc
lds
and
pop
sarl
add
ljmp
dec
sub
and
scas
gs
inc
les
and
and
adc
mov
sub
pop
jecxz
pop
or
dec
je
dec
bound
adc
xchg
out
hlt
mov
mov
aam
push
add
mov
int3
popf
mov
in
dec
or
adc
mov
add
lahf
xchg
popf
hlt
sbb
dec
leave
int3
icebp
dec
inc
mov
and
ret
ficoml
arpl
xchg
mov
inc
fisubl
nop
adc
add
push
xor
push
sub
sbb
pop
addr16
mov
leave
sbb
aaa
or
outsw
pop
dec
loopne
icebp
xchg
mov
shlb
jae
inc
test
pop
sub
sbbl
push
mov
inc
stos
into
test
nop
shlb
sbb
sub
je
lods
out
int
mov
scas
faddl
pop
xchg
das
cmc
xorl
in
push
sbb
ljmp
andb
add
mov
loope
add
pop
in
add
sub
jae
test
jmp
jle
sbb
lret
mov
ds
int3
in
pop
mov
jp
sbb
cli
ljmp
js
add
icebp
jbe
push
shrl
je
fnstenv
add
mov
jecxz
into
aad
mov
pop
or
mov
stos
xor
xchg
push
mov
inc
imul
repnz
mov
lods
xor
sub
xchg
aad
push
mov
dec
jg
es
xchg
cmp
cmpl
xchg
pushf
cli
sbb
mov
push
pop
cmpsl
pop
decb
xchg
jns
sbb
sbb
jge
push
ror
test
jae
inc
sub
cld
sti
out
scas
fdivrs
xchg
push
dec
aaa
fildl
mov
subl
sti
mov
sub
rcrb
fidivl
je
enter
int
mov
push
xor
aaa
test
push
xchg
inc
int
fists
xchg
jl
insb
inc
fstl
clc
cmpsl
xor
cmp
mov
bswap
or
inc
sub
xchg
xor
jmp
pop
jle
inc
push
add
adc
xchg
inc
test
aad
sub
dec
lods
jo
xchg
or
subb
and
sbb
xchg
mov
icebp
cmpsb
jge
xor
inc
pop
aam
adc
adc
cmp
or
jle
arpl
int
loop
scas
idivl
inc
insb
es
pop
lret
xor
mov
and
or
cmc
add
mov
push
popf
test
call
adc
inc
xchg
cwtl
push
or
sub
and
ja
pop
cs
cmp
nop
jge
outsb
jb
pop
sti
lahf
scas
xor
fs
or
in
inc
lret
xchg
sarb
pop
lods
or
sbb
cmp
nop
cmp
lds
leave
adc
cltd
iret
lock
test
adc
shrb
std
pop
cmp
xchg
adc
lahf
pop
mov
ds
iret
sahf
dec
cmp
int3
adc
leave
sub
mov
mov
in
outsl
bound
adc
push
test
inc
outsb
fcomi
aam
daa
test
push
mov
test
xor
out
movsl
in
sbb
testb
jne,pn
and
adc
fdivp
dec
push
sub
and
sti
mov
lret
inc
cltd
mov
out
fcomps
push
out
fsubs
adc
lods
or
push
jae
stc
pop
pushf
stos
pop
aas
mov
stos
xchg
mov
jns
push
lods
daa
pop
xor
lcall
inc
mov
or
push
push
and
jmp
insl
clc
int
jb
out
push
adc
into
sbb
aad
mov
dec
rorb
in
push
jno
jl
xchg
mov
mov
js
dec
push
pop
aaa
and
sbb
subb
leave
mov
ja
out
pop
das
fnstcw
xchg
lcall
inc
repz
or
mov
mov
out
mov
dec
pop
imul
lds
shrb
imul
push
sub
nop
push
shrb
out
mov
mov
lret
call
push
fldt
mov
mov
ret
insb
pop
add
lcall
aas
pop
jns
dec
jbe
leave
int3
mov
mov
jns
fisubs
push
cmc
cmp
jne
mov
loope
push
push
and
mov
fistps
xchg
push
popf
aaa
push
sarl
das
add
in
hlt
fimuls
in
push
add
jno
inc
xchg
rcrl
std
cmp
cmp
imul
xchg
mov
mov
cs
in
rolb
jo
and
scas
lcall
or
jmp
sahf
nop
jle
in
cmpsb
imul
mov
dec
data16
jmp
mulb
out
icebp
orb
pop
or
aad
inc
stos
mov
loopne
sbb
sbb
and
int
les
pusha
imul
xchg
fucomip
add
mov
push
les
xchg
pop
xor
jp
inc
rcrl
std
jns
xor
lds
cs
xchg
jb
shlb
test
add
idiv
fsubl
les
in
jno
clc
imul
sub
lcall
and
mov
adc
icebp
jmp
scas
int
ja
dec
xor
aad
mov
fistps
push
cmp
data16
sbb
jnp,pn
lods
add
jb
data16
push
xor
mov
jg
mov
test
in
pop
bound
push
sti
mov
in
xor
mov
or
dec
adc
sub
cmpsb
je
jle
pop
mov
pop
mov
jl
dec
push
out
cmpl
or
and
lea
mov
sub
imul
adc
mov
lret
sbb
rclb
mov
push
pop
adc
pushf
inc
jl
dec
pop
dec
cld
mov
addb
mov
mov
jnp
sar
pop
mov
imul
or
xlat
xchg
inc
fisubrs
mov
mov
inc
rcrl
mov
jnp
xor
xchg
mov
mov
mov
mov
fbstp
ja
inc
jmp
and
and
push
aas
mov
lret
rcrl
mov
dec
sub
sub
stos
icebp
pop
add
xchg
push
scas
shlb
pop
cmp
ret
add
xor
lock
xchg
mov
loope
test
sbb
fbld
rol
fwait
jbe
jecxz
ret
push
clc
incl
loope
or
fistl
or
add
cmp
push
pusha
nop
decl
sub
out
outsb
jl
outsb
xor
push
les
sub
jns
insb
mov
xlat
imul
data16
into
sub
push
arpl
ja
and
dec
lea
out
cmpsb
mov
push
fiaddl
lea
jmp
mov
pop
pop
push
ror
jbe
adc
dec
cmp
jno
clc
outsl
imul
rorl
adc
sbbl
fwait
dec
xor
sbb
jno
mov
imul
mov
inc
push
test
push
lcall
and
sbb
aaa
icebp
mov
xchg
pop
arpl
out
in
inc
mov
pusha
push
call
push
iret
mov
dec
adc
mov
jae
popf
pusha
xor
lock
ljmp
mov
mov
xor
sti
and
jne
iret
jecxz
aad
ret
insl
xchg
xrelease
add
lret
fisttpll
sub
scas
ret
hlt
push
rcll
pusha
out
cmp
jge
loope
add
cmp
jmp
ds
inc
and
mov
xchg
push
add
fstl
jecxz
fildll
inc
mov
pushf
fisubl
jbe
test
pop
sub
dec
xor
pop
lcall
adc
or
in
rclb
std
cmp
scas
or
in
insb
stc
aam
outsl
adc
xchg
mov
in
scas
dec
in
fnstenv
or
mov
fcmove
jo
dec
or
cmp
ret
mov
pop
gs
fs
into
or
les
test
int
in
test
pop
mov
mov
push
mov
ficompl
gs
dec
mov
or
into
outsb
test
shll
jle
jns
lret
sub
mov
inc
and
mov
jo
sti
add
xorl
adc
jg
rcrl
and
xor
sahf
loop
mov
cmp
gs
jg
push
xor
push
aas
cmp
mov
sbb
jmp
pop
rorl
int3
add
les
pop
gs
sbb
js
cltd
xorl
lods
mov
mov
stos
ja
add
cwtl
shrb
mov
jle
shll
sub
pusha
push
mov
push
add
sbb
sbbl
fwait
arpl
sarl
mov
test
popf
enter
mov
mov
jae
mov
mov
pop
pop
lcall
fcmovnbe
loop
in
mov
jne
pop
mov
cmp
add
sbb
mov
sub
xor
int
nop
xor
cmc
mov
or
int3
mov
lea
xor
cmp
scas
ja
imul
pop
mov
sbbl
mov
cltd
jno
outsb
test
pop
and
push
lcall
mov
loop
repz
iret
in
xor
inc
dec
shll
jne
stc
ss
adc
xchg
pop
xchg
into
ror
pop
pop
rorb
xorb
xchg
push
cmp
mov
fwait
xlat
add
lods
or
xor
sti
in
dec
lret
lock
cmp
jne
or
inc
push
cmp
xchg
or
push
adc
jns
mov
bound
fbld
push
xor
push
sub
pop
and
icebp
das
subb
pop
add
xor
pop
shlb
xchg
add
sub
jecxz
sbb
mov
nop
scas
adc
in
add
jne
in
dec
dec
push
out
jns
push
jl
xchg
or
xor
or
inc
cmpsl
xor
test
adc
lods
or
in
jg
aad
in
mov
cmpsb
sub
jge
in
shll
aad
aad
iret
aas
je
inc
nop
data16
adc
wrmsr
mov
jns
je
icebp
ss
sbb
fstps
pcmpgtd
mov
pop
shl
xchg
imul
movsb
out
push
lret
lea
dec
faddl
out
jno
imul
mov
shll
flds
imul
xlat
push
aas
jg
call
xchg
into
dec
jbe
xchg
mov
mov
nop
xor
mov
dec
inc
adc
jae
sbb
mov
adc
xchg
sbb
fisttpll
xor
fwait
enter
ficoml
test
ret
adc
cmp
dec
mov
push
mov
inc
aad
add
cmp
out
xchg
and
ljmp
popa
xchg
test
aas
add
lret
mov
outsl
mov
cmp
xchg
rcrb
mov
maskmovq
negl
ret
leave
movsb
xchg
cmp
fdivr
mov
pop
pop
lods
or
sub
lds
cmc
ficomps
dec
or
push
imul
rcrb
pop
inc
js
inc
add
notb
int
loop
jecxz
and
pop
test
outsl
mov
sub
stos
leave
mov
jae
aad
pop
roll
sub
push
lock
xor
aam
mov
mov
dec
xchg
mov
add
int3
cmp
adc
xchg
aam
cmp
push
lea
sbb
out
push
add
fists
cmp
or
cli
pop
mov
iret
test
push
xor
xchg
mulb
adc
adc
orl
mov
aad
xor
dec
push
push
inc
mov
out
push
scas
aaa
lea
incl
jg
pop
aam
or
mov
shrl
mov
xor
jae
inc
fstl
paddb
adc
sub
out
fstpt
pop
cmp
aaa
jo
push
jp
addl
jp,pt
aad
mov
rorl
jns
test
mov
push
testb
les
shll
fmul
aaa
pop
jo
pop
cmp
fisubs
pop
jb
fadds
scas
mov
fists
mov
lahf
sbbb
pop
adc
cmc
ja
fnstenv
mov
jbe
push
xor
push
inc
or
lods
mov
xchg
test
stos
jb
mov
vpaddsw
outsb
inc
jle
adc
ss
push
mov
negb
jns
fsubrl
mov
test
scas
push
jno
stos
imul
adc
cmp
dec
dec
andl
mov
movsl
jmp
cmp
fiaddl
sbb
cltd
jo
fwait
inc
mov
fiaddl
aam
or
sub
lods
adc
xor
in
aam
pop
bound
sub
fidivrs
sub
cmp
dec
aam
mov
cwtl
inc
push
sti
pop
jl
fistpl
cmpsl
cmp
dec
adc
sbb
pop
pop
sbb
adc
test
mov
cmc
rcrb
sbb
scas
jmp
lea
out
rorb
xor
mov
rcll
icebp
add
jle
xor
jae
ror
inc
cmpsl
mov
lret
insb
sub
scas
nop
push
addr16
lret
jno
ss
dec
sub
mov
movsl
jp
insl
or
lcall
movsl
sub
cld
cli
add
cmp
adc
mov
pop
or
pop
dec
ds
mov
ss
mov
xor
jno
push
mov
ret
cltd
sbb
mov
xchg
mov
xlat
sub
add
xchg
mov
sbb
pop
mov
fsubrl
jg
loopne
fstl
cmp
out
ja
xchg
sub
cmp
mov
mov
jecxz
mov
or
or
xor
or
adc
mov
pusha
pop
ret
aas
pushf
dec
popa
fdivr
in
xchg
popa
cmp
pop
aas
imul
mov
insb
frstor
jo
lahf
cmp
inc
mov
jmp
test
push
fsubrl
out
mov
mov
pop
dec
je
jne
pushf
movsl
arpl
dec
xlat
lcall
rcl
jae
sub
xor
repz
mov
and
aam
int3
test
or
bound
clc
mov
xlat
jae
cmp
ret
xchg
imulb
cmp
clc
dec
pop
add
mov
divb
dec
xchg
sub
mov
sbb
lds
cmp
aam
test
loopne
jns
and
mov
leave
ja
xor
push
push
sbb
pusha
mov
enter
sub
gs
loop
mov
push
pop
jns
sbb
xchg
cli
das
xor
clc
aam
pusha
mov
dec
bound
add
and
xor
aaa
scas
jnp
inc
lret
fbstp
or
jl
arpl
nop
xor
and
ds
dec
clc
xchg
cltd
pop
xor
aam
enter
pushf
jns
fs
iret
lret
lods
scas
jbe
andb
mov
ret
out
cltd
xor
jg
lahf
out
lock
mov
lods
ds
inc
pop
stos
mov
ljmp
add
cmp
pop
pop
push
inc
push
out
jns
mov
lods
insb
sbbl
jno
add
das
fdivrp
sbbl
jmp
cmc
pop
push
cmp
orl
das
adc
add
sub
mov
mov
incb
addr16
sbb
cmp
mov
insl
adc
inc
dec
mov
roll
sbb
pop
add
cmp
aam
sub
bound
fistps
ds
mov
lods
lret
or
test
bound
nop
loop
xor
pop
pop
ljmp
inc
adc
ret
jle
fwait
mov
lahf
add
and
xor
mov
jo
testb
push
inc
pop
mov
xchg
rcr
and
negl
out
jl
add
sarl
iret
imul
pop
cmp
cmc
pop
imul
in
fs
cltd
sti
lock
adc
jmp
aas
and
ret
sbb
mov
or
pop
pop
lret
sbb
or
inc
rcll
push
sbb
xchg
mov
mov
or
mov
adc
and
popf
jb
inc
dec
add
imul
fmuls
mov
sbb
sarl
xor
pop
xor
shrb
lods
mov
jp
nop
repz
insl
adc
sub
dec
jb
xor
je
and
jnp
xchg
mov
xchg
jae
js
stc
push
push
cmp
pop
xor
jp
push
cltd
xlat
out
mov
mov
aam
cs
jp
jbe
or
adc
test
mov
cmp
repnz
loop
cmpsb
and
jp
push
ret
insl
and
xchg
repnz
scas
pop
lea
push
dec
imul
insl
adc
cltd
jb
jg
adc
jmp
mov
xor
add
insb
dec
dec
inc
pop
shrl
rolb
jmp
cwtl
scas
cmp
push
add
das
cmc
xor
mov
fs
loope
sub
sbb
sbb
mov
nop
lods
ljmp
xchg
jg
int3
jns
add
push
fwait
dec
inc
pop
mov
popa
clc
mov
dec
out
repnz
mov
xor
test
mov
fs
loopne
mov
xchg
mov
aad
xchg
inc
mov
adc
clc
leave
outsl
clc
sub
stc
mov
sbb
aaa
mov
popf
or
adc
int3
add
push
fcmovb
cltd
cs
or
addl
cli
les
sub
stos
dec
push
and
call
xlat
scas
js
pop
xchg
insl
sub
or
mov
inc
pop
dec
jb
lods
jmp
fistps
mov
orl
fiaddl
mov
lcall
in
js
and
mov
daa
leave
sbb
in
lds
orb
mov
les
xchg
jne
dec
jge
scas
and
scas
fdivl
movsl
inc
push
or
es
fdivrl
scas
sarb
ss
loopne,pt
lock
dec
lods
sbb
in
ds
stos
add
iret
pop
dec
aam
dec
inc
sub
push
add
mov
lods
mov
js
inc
mov
and
loope
push
adc
jle
into
les
sub
bnd
lret
les
loop
xor
push
ja
adc
inc
rorl
lock
dec
in
lods
sub
in
in
int
inc
jmp
aas
dec
jne
xchg
dec
dec
xor
lret
mov
pop
lea
mov
adc
pop
fucomip
or
lds
movsb
testb
xchg
nop
in
add
and
mov
lods
jp
pop
jmp
pop
jmp
sbb
adc
and
mov
sahf
ret
sub
test
xchg
sub
pop
jl
mov
les
mov
ret
pop
jbe
pop
dec
add
lahf
push
xchg
lock
out
loope
sub
test
cmp
test
jp
push
cwtl
add
jl
sti
pop
add
cmpsb
push
shrl
inc
aad
addr16
cmpsl
jns
fnstcw
dec
xchg
mov
xchg
xchg
cmp
xor
fnstsw
movsl
fwait
or
scas
pop
cmp
xchg
push
movsb
testb
stc
ja
push
sbb
gs
push
add
jmp
jns
sbb
ret
pop
das
jne
add
lds
xchg
push
sti
mov
jp
scas
pusha
ds
daa
push
sub
adc
push
inc
icebp
or
rcl
xchg
push
loope
cld
test
inc
scas
mov
jp
aad
ret
in
or
sbb
insb
das
movsl
out
jle
sbb
pop
adc
dec
cmp
inc
lea
sub
pop
fcoml
jecxz
xchg
mov
icebp
das
out
add
sti
outsl
call
loopne
sub
jne
add
xor
xchg
sbb
cld
jne
scas
jnp
clc
xchg
sbb
ja
jno
or
int
xchg
dec
push
outsb
in
sti
push
xlat
subps
mov
push
inc
popf
aaa
leave
inc
sbb
push
in
xchg
add
js
mov
and
inc
test
xchg
xchg
push
nop
lahf
dec
fwait
xor
push
cmp
mov
repz
push
stc
outsl
mov
jle
insl
xchg
aam
mov
xor
lds
out
xor
ds
jbe
icebp
mov
adc
fs
push
sub
pop
pop
push
ja
jmp
popa
lret
aaa
xchg
lea
pop
aaa
xlat
and
inc
push
ljmp
jg
out
stos
fdivs
push
jne
inc
jle
cwtl
sub
sub
inc
pop
push
cmp
sbb
xor
lods
push
mov
sbb
ret
fucomip
lods
ret
adc
aam
or
push
jne
cmpsl
dec
shr
dec
out
mov
loop
add
ret
ja
fsubl
lret
mov
movsl
push
sbb
mov
loop
mov
xor
movsl
frstor
cmp
outsl
dec
lret
push
dec
add
xorb
pop
sbb
cmpsb
and
imul
mov
add
adc
dec
xlat
cmp
pop
popf
fcmovbe
mov
pop
fmulp
xchg
out
or
aas
jle
test
clc
imul
stc
sub
out
mov
cmp
dec
in
inc
aas
scas
jle
mov
cmp
push
inc
insb
jge
jo
lods
xor
test
pop
jp
mov
xchg
pop
lahf
push
loope
leave
mov
daa
sbb
adc
xor
cmp
dec
dec
or
fstpl
loopne
mov
jmp
add
sub
cmp
ja
or
cltd
rcrb
dec
cmpsl
cli
data16
jge
in
mov
aaa
data16
into
cwtl
lret
add
xlat
and
inc
scas
adc
sub
sti
mov
mov
std
xorb
dec
cltd
sbb
mov
jns
sub
mov
rolb
pop
jbe
inc
lods
test
mov
inc
jl
addr16
push
xchg
test
mov
or
mov
pop
mov
out
sahf
stc
and
ljmp
mov
lcall
call
inc
xchg
int
je
or
inc
mov
jecxz
imul
xchg
xchg
mov
movsb
stc
mov
mov
es
sbb
scas
in
enter
pop
sbb
mov
fcoml
inc
xchg
inc
and
add
jg
mov
pop
mov
es
je
insb
pop
punpckhdq
sbb
mov
adc
jle
daa
int
loop
daa
cmc
sub
out
add
jmp
mov
stos
add
imul
int3
xor
mov
ss
mov
ret
leave
mov
mov
fs
sbb
push
je
jle
lret
sti
add
gs
fldcw
push
or
out
cwtl
mov
push
shr
int3
jae
arpl
imul
cmpsl
fcomp
lock
fisubrs
daa
sub
ja
pop
push
mov
and
je
jns
push
cmp
insb
clc
and
pop
add
add
mov
xchg
pop
or
mov
jmp
and
test
jg
pop
ret
into
movsb
mov
mov
xor
xor
inc
inc
or
mov
mov
dec
dec
pusha
mov
int3
cmpl
mov
xchg
pop
jno
sar
stc
test
and
inc
pop
pop
cmpl
leave
sbb
lods
popa
pop
iret
fwait
jmp
xchg
jbe
sbb
leave
pop
mov
sbb
dec
mov
xchg
jae
ss
mov
push
je
repnz
dec
push
and
cmpsb
sti
ds
and
dec
lock
stos
daa
bswap
jb
std
fcomi
dec
xor
xchg
xchg
cmp
and
pop
dec
xor
pop
sub
es
ja
test
push
fs
push
xorb
jle
mov
mov
jp
pop
lcall
nop
arpl
ljmp
aaa
sbb
cld
push
int
jmp
insb
and
dec
cmp
fiaddl
stos
das
jecxz
dec
pushf
ja
psraw
shrl
pop
addr16
pop
lock
stos
inc
and
mov
int3
adc
js
adc
in
dec
outsl
jl
or
mov
cmp
pop
jg
push
icebp
mov
lcall
jmp
cmp
test
mov
fdivl
jmp
rcrb
rorb
mov
call
lods
icebp
daa
or
sbb
and
fists
int3
mov
aam
dec
outsl
enter
mov
mov
mov
repnz
pop
push
push
push
dec
push
int3
xor
imul
jle
push
loopne
xchg
cmp
ds
shl
push
pop
mov
enter
xor
into
daa
pop
inc
jge
les
inc
das
repnz
je
ljmp
dec
jecxz
lds
cmc
rolb
test
aam
lock
ret
addl
fbld
mov
cli
sub
data16
xor
pop
stos
orl
add
fs
fldenv
js
mov
adc
lds
mov
cltd
pop
mov
add
jns
push
cwtl
mov
or
dec
scas
imul
rorl
in
cs
cltd
mov
sbb
xchg
pusha
inc
mov
stos
bound
push
test
mov
adc
jo
mov
sbb
mov
push
mov
movb
std
test
stos
inc
testb
sbb
test
aas
out
and
lds
sahf
push
aaa
mov
xchg
cmp
data16
mov
and
mov
lods
or
test
fwait
xchg
mov
and
into
pop
jne
adc
adc
std
pop
imul
loope
movsl
jo
xor
fnstenv
std
dec
sbb
pop
sbb
mov
xchg
fucomi
stos
dec
test
xchg
dec
adc
or
lcall
push
mov
mov
dec
in
sti
mov
jl
push
ret
or
cmpsb
pop
int
call
movsl
insl
movsl
mov
stc
push
pop
test
dec
cmpsb
sub
mov
daa
xor
cmp
sub
xorl
int3
cli
pop
xor
stos
fwait
mov
pop
test
popf
push
xor
aaa
pop
push
outsl
cmp
dec
stos
jmp
cmovae
cmp
jae
ret
sbb
fisubrl
clc
cmp
lret
lods
xchg
mov
rcll
insb
imul
jl
pop
ret
xchg
inc
je
std
dec
cwtd
test
pusha
stos
push
jnp
paddw
lret
shrb
loope
jg
jp
sub
in
fcomp
shlb
jecxz
pop
mov
shrb
push
lock
cmp
loope
hlt
fisubs
cmp
mov
decb
ljmp
xor
arpl
add
adc
xchg
sbb
into
mov
push
adc
xchg
imul
icebp
push
cmp
gs
xor
test
xchg
gs
and
in
or
add
fwait
inc
push
rcr
sbbb
xor
cli
sbb
jnp
cmpsb
jl
addr16
push
shlb
jbe
xor
adc
sbb
flds
add
std
dec
jno
sahf
xchg
jbe
push
inc
sub
sbb
or
xor
dec
test
sbb
xchg
mul
dec
fdivs
and
jp
fstpl
inc
stos
pop
cmp
iret
test
and
divl
add
xchg
xchg
lods
aas
inc
sahf
test
test
stc
adc
imul
sbb
fisttpl
inc
xor
cmp
or
mov
xorl
subl
into
test
cmp
adc
cmpsl
and
push
pop
js
sbb
jae
fwait
les
jge
fimull
int
adc
pop
shlb
lea
push
cs
pop
sbb
mov
jnp
lahf
pop
int
fldenv
add
ljmp
test
dec
repz
xor
loope
mov
not
dec
jns
test
mov
push
push
adc
jb
test
fists
adcl
jge
xchg
mov
lahf
jnp
xchg
and
lods
or
and
jb
insb
mov
ret
push
divb
pop
mov
ret
dec
inc
enter
cwtl
xchg
sub
aaa
add
cli
cmp
lock
jl
mov
adc
pop
mov
in
fbstp
cmpsb
or
lods
adc
xor
aad
jmp
in
and
lcall
sub
fs
aaa
or
sti
xchg
sbb
ljmp
lret
add
jg
inc
std
ret
pop
push
cltd
push
popf
jle
imul
ds
xor
test
push
dec
repnz
movsb
pop
xor
mov
mov
aas
mov
fdivr
cmp
cmpsl
pmulhuw
arpl
add
mov
aam
add
jae
xchg
mov
je
push
jno
jnp
mov
cmp
xor
loope
jo
push
sbb
lock
hlt
cmpsl
sub
scas
inc
popa
cwtl
mov
or
xchg
push
push
cmpsb
lock
jmp
push
out
jno
dec
mov
dec
ljmp
adc
cmp
mov
lahf
and
into
repnz
call
jb
ja
fisubrs
in
out
loopne
int
loopne
icebp
mov
sbb
sub
inc
lods
pop
mov
jmp
test
lods
lcall
xchg
js
sbb
mov
mov
mov
push
dec
xor
jnp
inc
cmc
mov
xchg
pop
shll
xchg
xor
jecxz
jecxz
mov
xchg
pop
pop
xchg
outsb
leave
movsb
xchg
mov
enter
mov
mov
pop
aas
sbb
add
pop
cmp
inc
shlb
enter
mov
rorb
cmp
shr
mov
mov
aam
or
push
nop
pop
xchg
inc
mov
pop
lea
mov
push
mov
clc
mov
movsb
inc
data16
pop
std
out
and
dec
inc
pop
jl
cli
and
mov
test
and
pushf
int3
pop
adc
pop
and
xchg
stos
mov
out
test
insl
sahf
sbb
or
dec
mov
je
int
sti
push
sbb
or
pop
xchg
jge
or
notl
movsb
decl
xchg
repz
dec
dec
pop
test
in
out
mov
rcll
mov
and
int
pop
fistpll
popa
dec
adc
data16
mov
adc
mov
and
sub
sub
fcmovnb
jnp
inc
dec
push
fcompl
test
dec
pop
fistpl
shlb
fwait
pop
ljmp
or
aad
pop
add
mov
pop
cmp
add
jmp
bound
jecxz
bound
fnstcw
push
andl
dec
test
lret
pop
inc
andb
inc
lcall
cwtl
sahf
sbb
xchg
and
and
mov
sarl
pusha
dec
pop
sbb
mov
loopne
jecxz
cltd
push
pop
jo
mov
mov
xchg
inc
mov
sti
sbb
ds
imul
adc
js
lret
lret
shrb
mov
adc
push
repz
psubw
out
pop
iret
push
test
insb
pusha
sub
iret
dec
or
test
dec
call
hlt
mov
iret
lea
rcll
mov
add
shl
stc
in
or
add
sbb
and
inc
xorb
loope
sti
push
insb
xor
or
xor
lock
and
mov
cld
call
add
cmp
lds
outsl
cld
mov
adc
mov
mov
mov
and
add
cmpsb
dec
out
push
jecxz
scas
pusha
lret
pop
je
loope
and
fldcw
sub
in
cltd
sub
and
insb
fildll
lods
dec
out
cmp
xor
pop
gs
mov
imul
ror
jg
pop
mov
mov
out
ss
push
std
test
shrl
into
in
add
jns
ret
es
mov
sub
inc
repnz
push
mov
inc
imul
jl
cmp
add
add
jnp
aad
jmp
aaa
adc
jne
dec
fidivrs
aas
mov
xchg
pop
lcall
imul
fs
or
xlat
repz
xchg
sarb
jle
das
xchg
sub
and
dec
mov
pop
imull
xor
in
cmp
pop
cmc
or
scas
imul
scas
add
fs
mov
inc
popa
mov
or
or
push
icebp
les
std
jmp
stos
inc
sub
sub
adc
enter
mov
jl,pn
jne
ss
xchg
ss
test
arpl
fs
test
pop
jmp
nop
or
rorl
dec
xchg
jecxz
or
mov
cld
stos
sub
mov
scas
dec
cwtl
adc
jmp
aam
in
hlt
or
daa
cmpb
sbb
lds
jge
iret
xchg
fisubrs
cmpsl
je
lock
aaa
adc
aad
jo
in
ret
add
pop
mov
or
sub
dec
mov
jbe
cld
outsl
les
cmp
loop
insb
ret
pusha
cmp
daa
nop
data16
das
aaa
hlt
stos
inc
add
repz
mov
mov
cmpps
aas
xlat
insl
mov
sarb
cmpsl
in
cmp
jecxz
int3
pop
pop
lret
arpl
dec
add
stos
xchg
out
push
jp
lahf
dec
xchg
scas
push
mov
test
mov
jno
cltd
push
fucomip
xor
pop
iret
xor
adc
mov
pop
and
leave
mov
aad
push
jnp
pushf
fistl
notl
enter
leave
pop
xlat
pop
pushf
and
xchg
js
test
int3
subl
jge
sarb
loope
sbbb
or
xchg
negb
lds
icebp
mov
insl
int3
cltd
add
mov
into
cwtl
loopne
stos
mov
je
xorb
adc
xor
cmp
sub
movsl
cmp
scas
mov
and
ficoml
mov
sub
xor
arpl
stc
call
mov
out
adc
sub
imul
mov
inc
pop
xchg
inc
jae
stc
pushf
pop
and
xor
loop
lock
in
mov
pop
hlt
hlt
sti
push
gs
ret
mov
jnp
dec
ljmp
add
push
and
fistps
not
cwtl
negl
loopne
and
cmpsb
add
adc
ss
int3
aaa
clc
inc
and
dec
inc
pop
xchg
xor
cmp
gs
scas
and
data16
popa
lea
loop
rcll
inc
lds
enter
loop
and
mov
push
insb
jnp
inc
pop
movsb
sub
dec
fcoms
and
push
call
pop
mov
jg
lods
mov
in
in
jl
push
push
mov
test
sbb
fcomps
cwtl
mov
cmpl
jno
cwtl
jmp
add
cmpsb
push
mov
xor
lret
jne
jecxz
out
dec
mov
pop
mov
jbe
jge
and
cltd
lcall
xor
rorl
or
aad
clc
test
mov
cli
pop
and
xor
xor
mov
cmpsl
jge
leave
sub
dec
mov
mov
loop
ja
pop
rcrl
lock
stos
mov
pop
cmc
loop
fcompl
xchg
lret
aad
xor
pop
out
lods
in
stc
aad
bound
dec
sub
mov
bound
pop
popf
iret
rorb
add
xor
mov
dec
ja
mov
or
bnd
add
mov
test
xlat
sbb
jno
call
dec
xchg
mov
nop
sbb
int3
lahf
into
shrl
out
jo
xor
das
mov
jmp
lcall
addl
xchg
and
scas
mov
sbb
jo
insl
add
cmp
mov
add
sti
lahf
ds
pop
fistpll
repnz
test
or
into
repnz
outsb
inc
insb
lea
sahf
or
sub
jmp
add
pop
sbb
lds
mov
fbld
pop
mov
cmp
popf
mov
lods
sahf
adc
mov
inc
popa
lock
mov
push
pop
xor
pop
out
cmp
cmpsl
or
stos
adc
pop
test
sbb
xor
bnd
aaa
xchg
mov
jo
cli
mov
shl
lcall
int3
sbb
jle
inc
mov
pop
test
jg
into
insb
data16
hlt
dec
popa
mov
mov
stos
inc
xor
xor
cmpsl
xor
adc
loopne
push
inc
dec
pminsw
inc
sbb
fwait
inc
sub
in
sbb
pop
orb
pop
in
imulb
and
scas
sub
xor
repnz
push
sarb
push
adc
movsb
movsl
lock
push
out
test
lret
movsl
xor
fcmovnb
inc
cltd
jp
adc
mov
sbb
pusha
je
loopne
cld
leave
and
enter
jl
adc
cmp
mov
cmpsb
push
jecxz
inc
mov
xor
repz
jno
and
mov
add
std
scas
pop
es
repnz
jnp
js
test
test
test
popa
lret
repz
in
fidivs
stos
aaa
aam
ret
mov
mov
pop
xchg
dec
popa
mov
movsb
rcll
aas
mov
jbe
nop
adc
movsb
sbb
ljmp
jecxz
fistpll
ficompl
pextrw
push
ds
sub
out
dec
jg
in
in
lret
fsubs
mov
or
lret
xorl
outsl
sahf
mov
pop
fcoml
int3
into
xchg
pop
pop
cwtl
jl
enter
repz
jp
xchg
pop
mov
inc
cld
fsubrp
insl
and
push
sub
popf
mov
jp
sub
loopne
fcoml
adc
cmp
adc
out
jp
push
popf
pop
adc
and
sbbl
dec
fwait
scas
stos
jns
adc
xorb
rol
add
inc
dec
and
xchg
or
jge
les
sub
cwtl
add
xor
xor
fistps
pop
fs
sbb
lret
fstps
subb
sbbl
dec
xlat
cmpsl
ficoml
mov
cmp
pop
jae
mov
out
fidivs
xor
fisubl
mov
mov
sbb
push
push
xor
fidivl
int3
es
dec
xchg
jle
pop
lcall
cld
push
xchg
leave
add
xor
or
test
or
popa
push
add
adc
lahf
into
lahf
xchg
test
sbb
pop
fs
test
ja
jmp
cli
vandps
repz
sbb
push
add
fs
jle
sub
fdivrl
popa
imul
push
pop
and
in
mov
jg
jb
fnsave
data16
mov
sbb
mov
out
jo
push
movsl
jg
xchg
in
shlb
sahf
push
call
dec
and
add
les
cmp
test
push
ficoml
bound
xchg
addr16
gs
mov
rorl
inc
or
scas
or
adc
test
mov
sub
xor
loop
dec
adc
add
or
outsb
dec
cmpsb
pop
lret
leave
xor
cmpsl
push
call
sub
fisubs
or
loopne
cmp
je
dec
andb
push
dec
test
fnstcw
mov
std
sbb
sbb
xorl
jo
insl
xchg
sub
cmpsl
dec
pop
sbb
in
daa
andb
les
adc
stc
mov
je
or
add
inc
out
in
andb
xchg
mov
xor
pop
ljmp
lcall
pop
cli
inc
daa
out
loopne
or
add
lea
xchg
mov
jae
add
mul
jl
inc
inc
pop
outsl
imul
outsl
xor
or
fcom
int
roll
xchg
ljmp
or
fmulp
jmp
xor
fildll
push
out
push
jge
pop
push
insl
dec
push
mov
movsb
scas
push
out
lea
push
into
lods
test
ret
inc
fistl
js
fld1
xor
add
aaa
aaa
imul
repnz
mov
jo
sti
in
cs
test
inc
jnp
sub
push
rcr
jle
testb
in
jg
fs
outsb
jnp
loopne
pop
xor
push
mov
pushf
xchg
adc
mov
imul
insb
shll
and
andl
jmp
repnz
stos
or
mov
test
mov
add
sbb
pop
lods
cmp
add
out
aad
movsb
jo
xorb
lret
je
mov
add
insb
cs
lret
xorb
mov
cmp
cmp
pop
fs
int3
repz
mov
fcompl
inc
sbb
fldcw
cli
test
add
scas
movsl
jo
and
mov
imulb
cmpsb
sbb
sub
jmp
mov
cld
fidivl
dec
pop
xor
enter
push
mov
mov
cmp
test
sbb
or
imul
mov
lret
fdivp
test
dec
into
add
add
in
xor
scas
xchg
dec
push
adc
int3
inc
lods
inc
pop
and
dec
shlb
jge
lret
adcl
fimull
ror
xlat
out
mov
dec
adc
sub
movsl
filds
nop
sub
adc
and
andl
arpl
inc
shl
xorb
popa
loop
xor
les
xchg
movsl
xor
xor
push
dec
cmp
subb
and
pushl
pop
iret
jne
pop
in
dec
pop
cs
cwtl
repnz
es
xorl
imul
mov
out
jmp
and
push
sti
dec
inc
or
xchg
in
lock
pop
and
push
inc
arpl
shlb
shll
and
jo
and
int3
ret
add
sbb
in
and
sub
loope
je
xchg
and
sbb
popa
das
ret
leave
push
xchg
sti
ficoml
loope
cmpsl
insb
cmp
cmp
roll
cmpsb
cwtl
xchg
cmp
popf
daa
in
mov
mov
cmp
repz
lods
cmpsl
pop
push
out
and
mov
stos
fwait
rorl
pop
adc
call
mov
mov
lret
cmp
test
add
test
lds
dec
ja
mov
mov
aam
mov
fidivs
cmpps
and
outsb
lock
out
jae
fldcw
push
aaa
add
in
mov
pop
cmp
clc
and
and
inc
xlat
pop
ret
dec
lcall
test
ret
cmpsl
inc
or
cltd
nop
je
test
mov
jnp
pop
mov
fstpt
popf
and
rsqrtps
sahf
in
push
aas
jmp
loop
sub
hlt
jb
popf
and
mov
xchg
repnz
fiaddl
sub
jge
aam
add
stc
es
repz
push
adcl
outsb
sub
adc
mov
pop
shll
mov
inc
mov
and
add
loopne
cmp
fwait
lods
inc
sub
jns
in
dec
and
loope
shl
cs
pop
jns
cwtl
roll
cmp
cmp
xchg
xor
push
scas
push
ds
pop
fs
pop
es
pushf
mov
sbb
mov
push
ja
out
push
cmp
push
enter
pop
mov
sub
pop
scas
fstpt
lock
jae
pop
mov
or
jne
push
pop
cmp
je
je
sbb
bound
xchg
dec
jecxz
jmp
or
and
pop
movsl
or
xor
inc
push
mov
lahf
mov
aaa
rcrl
adc
aaa
cmp
xor
mov
sub
imul
mov
int
jno
cmp
lock
dec
mov
mov
aad
sar
push
cmp
rcll
mov
aam
mov
nop
inc
mov
jp
cwtl
xor
pusha
xor
add
mov
jb
push
jne
sbb
adc
push
arpl
xchg
mov
sub
mov
ret
fwait
mov
mov
loopne
push
dec
cmp
pop
inc
and
inc
add
scas
mov
sahf
xor
popf
inc
pop
pop
adc
out
std
daa
mov
dec
cmp
call
dec
sub
mov
aas
adc
mov
push
mov
adc
or
mov
mov
lods
xor
mov
lret
movsb
popa
test
fistl
push
jecxz
inc
pop
adc
mov
sti
sti
out
xchg
cmp
jge
daa
dec
mov
mov
out
aam
cld
scas
pop
popa
push
sbb
pushf
sti
and
cmc
inc
push
pop
dec
cltd
xor
ds
mov
cmc
cld
push
xchg
xchg
dec
test
pop
jbe
gs
jb
pop
out
test
jnp
fldl
pop
mov
mov
mov
leave
pop
mov
pop
inc
xchg
shrl
add
lret
push
mov
fistl
cltd
dec
xchg
add
inc
push
mov
adc
clc
mov
stc
rcrl
dec
test
insl
ds
jl
or
sti
decl
sub
mov
dec
jge
fcoms
loopne
xor
fisttpl
lret
add
mov
addr16
into
mov
jecxz
mov
add
ret
popa
iret
push
jecxz
mov
jle
jb
daa
or
mov
lods
fisubrs
shr
mov
xchg
push
int3
and
outsl
inc
dec
inc
mov
lods
iret
fnstenv
sahf
es
rcr
lds
push
mov
in
mov
or
jp
pop
cmpl
negl
add
lds
cwtl
jb
ror
push
push
inc
jl
and
stos
pop
cld
inc
sti
pushf
or
sar
sarl
mov
push
lea
ret
mov
in
jmp
jnp
fmull
push
or
fsts
push
or
orl
nop
js
movsl
daa
rcrb
mov
cmp
jo
arpl
inc
mov
shl
repnz
or
cld
idivb
addr16
dec
cmpb
pop
dec
jbe
sarb
js
mov
xchg
enter
jecxz
or
jno
mov
xchg
sbbb
roll
popf
pop
adc
outsb
xchg
push
aas
cmp
popa
notl
pusha
inc
jb
and
fistps
lahf
add
mov
add
rcr
sbb
pop
ds
insl
xlat
pop
cli
imul
mov
stc
test
imul
int
test
mov
insl
pushl
pop
ret
pop
shll
pop
and
test
insb
leave
jnp
sbb
xchg
jbe
pop
push
push
pop
dec
mov
sbb
cmp
sbb
call
les
push
sub
jns
lcall
cmp
xor
add
mov
mov
scas
movl
dec
add
jns
and
lods
xor
adc
fidivrl
adc
movsb
adc
sbb
push
add
sbb
mov
and
mov
daa
mov
mov
jo
fs
lea
pushl
cmp
pop
outsb
push
in
sub
pop
mov
jb
enter
push
sarl
dec
mov
cmpsb
mov
lods
insb
mov
mov
mov
jne
and
cmp
xchg
push
xor
xchg
mov
dec
dec
adc
mov
mov
movsb
push
ljmp
cmp
xchg
dec
in
jns
mulb
mov
inc
iret
out
dec
ret
jl
pusha
cmp
addr16
or
xchg
stos
rcrb
bound
std
sbb
and
loop
scas
popa
ret
pop
ret
mov
pop
std
cmp
rcll
imul
xchg
call
mov
pop
fnstenv
lret
pop
loopne
jb
and
xchg
jns
adc
std
sub
lahf
or
xor
ja
mov
xlat
clc
mov
jl
jno
sbb
bound
std
sbb
push
add
enter
hlt
sub
dec
leave
xchg
add
mov
push
sub
pop
cmpsb
rol
push
add
cmp
xchg
call
rcrl
cmp
sub
xchg
in
fdivr
xchg
arpl
fwait
es
jmp
in
pop
rcrl
in
lcall
scas
addr16
sbbb
or
in
cmp
push
or
mov
mov
movsl
dec
mov
scas
xchg
sbbl
into
dec
mov
sub
clc
nop
push
cltd
clc
xchg
mov
dec
adc
cmp
mull
or
jecxz
cmp
imul
jnp
sbb
jmp
imul
fs
int3
push
xor
push
push
outsl
mov
cmp
sub
cld
mov
lock
push
std
and
leave
fistpll
filds
lods
jb
push
insb
out
push
mov
das
cmp
je
into
sbb
mov
cmpsl
cltd
sub
lock
mov
pop
fwait
movsl
ds
cmpl
outsb
les
or
testb
pop
mov
mulb
in
pop
mov
call
aaa
add
xchg
fs
mov
int
mov
fs
std
push
std
push
pop
cmp
imul
outsb
wbinvd
pop
ret
call
js
jecxz
stos
int3
mov
or
mov
outsl
cld
or
xchg
call
iret
test
movlps
and
mov
jmp
bound
adc
sbb
test
movsl
mov
jne
jns
shl
fucomi
ss
and
imul
jns
filds
or
sub
jo
sub
or
push
cmp
ret
test
sbb
sbb
pop
inc
test
in
jecxz
add
gs
xor
std
mov
movsb
xchg
push
fimull
flds
pushf
add
jge
cltd
xor
or
ret
idiv
out
xor
mov
aas
adc
and
mov
push
sub
dec
in
xchg
sub
lret
xlat
out
xor
or
pusha
jnp
loopne
out
cmp
aas
stos
adc
inc
ja
pop
iret
jmp
lahf
jnp
xchg
cmp
psubb
mov
mov
and
and
mov
rorl
int
mov
xor
lods
jnp
addr16
fsts
sub
push
pop
xor
movsb
mov
stc
dec
andl
dec
jb
sub
and
loopne
lods
fldt
les
mov
hlt
je
testb
loop
jbe
fs
test
stos
xchg
mov
add
sub
popa
cmpl
ret
dec
adc
sub
cmp
je
sbb
adc
sbb
cmp
shll
and
mov
adc
add
repnz
aad
inc
dec
jnp
adc
pop
scas
mov
ja
mov
repnz
aam
js
orb
out
push
fsubr
cmc
les
dec
jg
pushl
sub
xchg
xor
scas
jae
pop
outsl
ficomps
movsl
or
ja
mov
jnp
push
mulb
fnsave
add
ja
in
ss
xor
jl
lea
stos
xor
xor
mov
cmpsb
and
dec
sub
stos
cmp
and
mov
lret
bound
faddl
addb
cmpsl
lods
xor
adc
insl
cmp
jnp
loope
xor
inc
lret
xor
mov
pop
sahf
and
xchg
cmp
sub
and
push
sub
and
repz
xlat
cmp
sub
faddl
and
icebp
adc
jb
mov
add
in
mov
fldcw
mov
or
push
sub
enter
mov
addr16
lret
cwtl
push
mov
lret
jns
lcall
mov
cmp
adc
imul
in
cmp
sbb
dec
fwait
daa
das
cwtl
push
sub
pop
mov
push
mov
aas
pushf
mov
push
cmp
int
scas
test
out
pop
and
adc
ret
xchg
outsl
add
outsb
fdivrl
xchg
xor
or
sar
js
add
jg
cmpsl
xor
scas
jecxz
dec
into
stos
jmp
jecxz
jmp
mov
and
jo
cmp
mov
imul
jnp
mov
add
jnp
mov
loopne
scas
fwait
mov
mov
loop
out
dec
loopne
int3
popa
add
xor
mov
mov
sbb
out
cmc
fistpll
lahf
sti
push
add
jg
jmp
test
dec
mov
sarl
in
inc
fwait
xchg
shlb
into
inc
fiaddl
sub
iret
sub
jne
add
fucomi
xchg
in
je
adc
das
incb
mov
subb
cmp
cmp
rcr
loope
xor
xchg
cmpl
fs
dec
stos
aaa
inc
lea
cltd
push
xor
pop
insl
sbb
mov
mov
mov
mov
adc
add
popf
test
ret
les
and
mov
loopne
sbb
mov
orl
orb
shlb
push
cmp
ret
test
jle
xor
or
popa
add
movsl
mov
lret
ja
jo
test
pusha
cld
cmp
lahf
jle
xor
sbb
jge
or
or
lds
aaa
pop
jns
jno
aas
lahf
inc
add
arpl
xchg
push
cld
jb
call
xchg
aaa
jmp
enter
add
scas
enter
in
and
sub
xor
lret
inc
inc
pop
pop
add
sub
jno
jecxz
das
sub
cmp
aas
adc
mov
andb
rorl
sbb
pop
insb
xor
push
bound
popf
jl
or
fldcw
pop
push
inc
xchg
stc
xor
inc
xchg
sub
imul
movsb
and
pusha
fstpl
repnz
enter
sub
mov
insb
sarl
movsb
call
jb
arpl
push
into
lret
inc
push
scas
je
or
cmp
mov
rorl
int
cmc
push
pop
mov
add
jle
mov
daa
outsl
mov
push
mov
jno
fistpll
sbb
xor
push
test
popf
or
push
jnp
push
stc
adcb
es
test
adc
cmp
insl
movsl
jmp
repz
inc
shlb
leave
xchg
fstpt
cli
in
aas
call
ret
repnz
dec
cmc
mov
and
xchg
adc
sahf
shr
lods
insb
orl
add
jmp
cltd
mov
mov
movsb
sbb
scas
adc
lds
xor
cwtl
inc
mov
xor
sbb
dec
int3
popf
int3
push
inc
xor
sbb
sbb
cltd
test
int3
mov
pop
and
loopne
outsb
das
movsl
jp
icebp
cmp
sbb
je
lods
stos
bound
cmp
movsl
and
sbb
adc
test
out
xchg
mov
in
das
mov
cli
pop
mov
popf
push
add
xchg
mov
int3
out
xor
not
push
adc
movsl
jbe
cmpsl
xor
cwtl
xchg
push
dec
pop
and
in
sbb
mov
frstor
push
ja
sbb
xor
jp
mov
lock
out
add
and
cld
mov
inc
adc
push
mov
fsubrl
xchg
push
cltd
pop
mov
fs
aaa
mov
add
in
aad
mov
pop
xchg
bnd
in
inc
mov
jne
movsb
xor
sbb
push
scas
scas
cli
sti
mov
lods
or
inc
push
adc
lds
insb
popf
mov
sub
int
icebp
add
dec
jl
arpl
dec
inc
sti
lcall
xchg
lea
pop
and
dec
pop
stos
jg
dec
stc
push
add
sub
inc
icebp
dec
mov
add
inc
cmc
pop
call
sub
inc
pusha
dec
testl
inc
or
push
mov
fdecstp
ss
je
insb
in
and
cs
sub
push
stos
movl
or
mov
push
test
sub
inc
imul
aad
dec
jp
jl
stos
jnp
and
push
ljmp
mov
call
movsl
dec
adc
inc
or
es
int
loopne
fdivs
mov
pop
loope
mov
mov
jge
outsl
in
sbb
xchg
mov
push
xlat
inc
les
mov
inc
push
xor
mov
mov
xlat
pop
sbb
adc
sub
fimull
mov
inc
lods
sti
imul
xchg
sbb
insb
xor
sti
xchg
sbb
lret
ja
in
fidivs
add
pop
push
popf
jo
aas
rorb
stos
sti
shrb
adc
es
dec
jmp
mov
test
pushf
dec
inc
jb
jbe
inc
add
pop
add
dec
js
fisubl
js
add
cmp
sbb
xchg
repnz
mov
data16
pusha
inc
lret
ffree
repnz
jnp
jl
lods
jns
mov
jg
pop
pushf
shlb
cmp
cmc
loopne
lods
adc
fadds
loop
xor
in
add
aas
or
xor
call
jmp
xor
pop
setg
mov
in
or
ss
xchg
loopne
mov
ss
mov
loope
sahf
and
pop
jmp
lahf
insl
add
cmpsl
dec
pop
lret
dec
jno
icebp
popf
sub
fs
imul
mov
lods
cld
in
mov
lds
adc
or
das
enter
ja
lock
push
pop
inc
repz
mov
out
mov
push
jg
fwait
add
fwait
push
les
xor
fsubrp
pushw
adc
aas
daa
or
in
mov
sub
jmp
push
jge
popa
repnz
mov
fistpl
push
sbb
xchg
sub
lcall
jo
std
ret
inc
out
popa
cli
jp
test
add
data16
or
fadds
sti
cs
inc
subb
cmpsl
nop
lret
push
and
and
icebp
mov
outsl
insl
lret
mov
inc
aaa
jb
outsb
rol
ds
and
repnz
pop
or
cmp
mov
dec
orb
shlb
cmpb
jmp
je
lcall
cmp
adc
cmpsl
add
inc
dec
test
mov
xchg
inc
mov
decl
add
and
stc
add
dec
jecxz
ljmp
imul
push
jecxz
movsb
std
mov
in
cmpsl
pop
push
jmp
es
ljmp
bound
pop
push
mov
rcll
push
rorl
add
lahf
push
inc
mov
lds
push
mov
sub
loopne
fcompl
dec
jns
jbe
or
and
scas
in
inc
popf
ficoml
inc
cltd
hlt
or
fisttps
add
push
push
inc
fdiv
mov
xchg
icebp
leave
cltd
lods
sarb
sarb
or
je
aam
sbb
push
pusha
mov
lret
fldcw
jnp
jmp
jae
ret
push
cmp
push
push
add
or
mov
adc
jl
or
push
jmp
jg
push
bound
test
dec
shll
popa
jg
xchg
insl
mov
inc
repz
mov
mov
scas
adc
sub
sti
insb
pop
fisubrs
xor
push
pop
stc
das
sahf
add
ret
adc
cwtl
jne
cld
and
lret
xchg
xlat
movsl
jae
fsubp
jmp
in
movsb
les
in
insl
push
adc
test
fldenv
push
rorl
xorl
mov
imull
roll
inc
sti
mov
jmp
dec
push
mov
fmul
add
pop
orb
call
je
lds
repnz
mov
jbe
jo
mov
pushf
cmp
or
cmp
dec
dec
cs
outsl
imul
outsb
and
imul
xlat
lock
ret
in
cmp
jp
imul
xchg
fwait
xor
es
addl
sub
jae
outsl
mov
or
clc
mov
movsb
cmp
mov
clc
daa
xchg
inc
mov
cmpsl
add
std
clc
xor
adc
mov
jne
clc
jno
loop
mov
pop
ret
xchg
hlt
out
jbe
inc
sub
sbb
in
dec
and
lret
idivb
push
int3
fninit
outsb
les
mov
hlt
mov
cmpsl
cmp
mov
push
lret
adc
arpl
mov
push
bound
imul
mov
add
dec
test
cli
xchg
dec
mov
xchg
xor
gs
out
bound
mov
dec
push
adc
mov
rclb
adc
xlat
cmp
mov
cmp
add
test
shlb
lds
cmpsl
movsl
jb
inc
sub
lods
mov
lods
out
push
repnz
mov
hlt
pop
pushl
insb
inc
ljmp
inc
xchg
xor
sbb
es
das
xchg
aad
and
lock
cmp
dec
pop
add
push
mov
jmp
popa
and
addl
or
cmp
jle
cmpsl
mov
es
outsl
sbb
jb
xor
aaa
dec
xor
enter
mov
sbb
neg
mov
push
xchg
les
mov
jnp
add
or
cmp
nop
jns
and
and
mov
lahf
repz
ror
stc
fcomp
leave
icebp
fs
sub
or
jns
aas
jno
mov
dec
test
aaa
mov
mov
movsb
addr16
arpl
rcrb
popa
rcrl
pop
out
jmp
jmp
rorb
jnp
imul
mov
mov
lock
jbe
test
adc
ret
jge
js
jl
jge
sub
adc
push
mov
ja
aas
stos
pop
mov
push
shlb
add
out
and
or
mov
int
mov
jns
cltd
pop
mov
xchg
cmp
fisttpll
jbe
je
jge
fmuls
jnp
stos
fcmovb
xchg
scas
in
adc
push
fdivr
xor
out
sub
jge,pn
sahf
sub
adc
dec
adc
mov
or
pop
repz
jne
es
push
sbbb
pop
arpl
cmp
fiadds
dec
cmpsl
push
stos
xchg
sub
and
daa
jbe
mov
xor
rcrl
js
mov
push
call
movlps
add
int
test
test
sub
test
mov
push
sahf
dec
andl
out
cli
imul
xor
jo
or
sbbl
xchg
imul
stos
push
dec
rcr
jns
and
fmull
push
lea
dec
outsl
mov
mov
jb
pusha
jl
push
xor
bound
fcoml
test
dec
inc
cmpsl
push
inc
insl
xchg
sbb
repnz
aaa
hlt
add
jbe
cmp
stc
push
shll
pushf
decb
cmp
or
pusha
pusha
rcrb
fnstenv
sti
push
mov
cwtl
dec
mov
scas
cmpsb
mov
icebp
arpl
fidivl
data16
ljmp
cmpsl
addw
pop
insl
inc
pop
pushf
pop
loope
sti
psrlq
xchg
addr16
test
int3
out
pop
adc
mov
pshufw
ret
inc
sub
ljmp
jle
xor
adc
shll
xor
scas
mov
pusha
mov
push
pushf
mov
adc
xchg
or
push
inc
shl
test
call
hlt
jne
cmpsb
cmp
aaa
xchg
imul
icebp
sbb
insl
out
dec
inc
aad
pusha
mov
mov
mov
push
test
cmp
pusha
cmp
lcall
scas
lret
fnstcw
fiaddl
add
pop
and
mov
jns
lods
lock
dec
std
scas
shr
insb
push
fiaddl
test
xor
les
test
cmp
imul
es
fistl
dec
cmp
icebp
scas
movsl
paddd
loope
out
sub
sbb
stos
mov
cmp
and
dec
dec
ret
ja
jb
xchg
jnp
not
lods
mov
stc
insl
fiadds
pusha
or
mov
adc
in
push
sbb
fistl
push
pop
fwait
or
mov
adc
xchg
outsb
sbb
push
dec
inc
and
inc
mov
xor
scas
xchg
mov
cli
mov
pop
call
xor
and
mov
pop
or
add
mov
call
or
jbe
loop
pop
test
push
lea
scas
pop
adc
sbb
dec
imul
mov
in
test
lds
fsts
xchg
stc
outsb
lods
mov
sub
push
or
fdivrs
xchg
jmp
ss
add
jge
clc
jno
aas
enter
xchg
andb
test
outsl
add
mov
dec
cmp
sub
sub
pop
push
ret
movl
pop
out
xchg
sbb
adc
xchg
dec
sahf
push
fnstcw
mov
xor
dec
push
lahf
mov
dec
iret
ja
testl
xor
stc
inc
movsl
push
in
jne
and
adc
dec
aad
cmp
sub
jnp
std
ds
mov
add
ffreep
inc
cmp
jno
sub
push
sub
fs
int3
or
idivb
ds
lods
sarb
sbb
rcrl
cmp
shlb
cmc
cmp
loope
push
and
dec
aad
fcompl
popa
mov
adc
pusha
arpl
loop
in
pusha
fwait
lret
lds
mov
pushl
push
mov
mov
and
test
lcall
mov
in
mov
test
adc
sbbb
gs
in
inc
cld
push
jno
push
pop
sbb
xchg
arpl
jg
xchg
in
inc
cmc
mov
or
repnz
xorl
xchg
jp
iret
rcrb
xchg
daa
mov
and
ja
insb
mov
fdivrl
mov
sub
mov
pusha
push
loop
cmp
popa
mov
in
push
lds
mov
loop
addr16
loopne
bound
ja
dec
cmp
dec
icebp
mov
mov
add
cmpl
call
jo
rorb
and
out
or
rclb
in
mov
loop
dec
dec
pop
add
bnd
push
sub
cmp
add
push
cmpsb
jno
push
fwait
insl
cmpsb
lods
jg
dec
and
cmp
mov
lret
xchg
xchg
sbb
imul
outsl
pop
addr16
add
faddl
sar
ja
nop
les
repnz
add
jbe
inc
or
lahf
xchg
lds
daa
push
sub
jnp
push
movsb
xor
push
mov
and
in
jnp
movl
pop
test
pop
mov
es
inc
callw
mov
std
cmp
stc
shr
inc
adc
sbb
test
ds
call
push
lret
div
sbb
test
push
mov
dec
lgs
repnz
gs
sub
out
addb
dec
dec
orb
cs
inc
aam
lea
out
test
sbb
cli
addr16
and
dec
push
lds
movsl
fwait
mov
jmp
ret
and
cmpsl
pop
xchg
sahf
xchg
xchg
xchg
xchg
xchg
pop
push
test
jo
leave
stc
fwait
and
adc
pop
mov
cmp
je
add
jnp
loopne
jecxz
add
pop
or
nop
ret
push
ds
or
dec
cmp
test
and
inc
das
pop
pop
out
loop
adc
sbb
jnp
loop
sbb
mov
pop
fwait
xor
outsb
jnp
mov
int3
nop
push
sub
inc
iret
fisubrs
test
jbe
dec
clc
into
mov
gs
rcrb
pop
mov
xor
mov
cld
pop
insb
dec
mov
xor
nop
xor
pop
dec
lock
nop
sahf
hlt
fwait
outsb
cltd
movsb
or
inc
imul
outsl
cld
fcoml
test
inc
sbb
loop
lret
data16
pop
fwait
bound
pop
jp
sbb
dec
mov
push
jne
add
adc
and
or
fistps
fmull
lea
aad
imul
js
aaa
je
mov
push
jmp
out
in
clc
test
int3
adc
cmp
sbb
loopne
or
ret
setp
jbe
ret
and
incl
incb
ret
xor
fnsave
or
and
and
mov
push
cs
push
inc
stos
lock
test
sbbl
addl
test
aaa
inc
adc
jbe
mov
insl
adc
push
cmp
rorb
in
ja
out
arpl
outsb
cmc
je
jmp
mov
inc
push
enter
push
scas
lock
inc
leave
js
cmp
ja
lods
pop
mov
xchg
aaa
dec
ljmp
pop
fwait
sub
mov
bound
enter
mov
cltd
fwait
push
mov
aad
sarb
jo
mov
loopne
adc
es
das
jns
ret
inc
js
push
adcb
pusha
mov
inc
push
add
out
test
orb
scas
in
cld
test
test
or
shll
bound
int3
gs
dec
sbb
fs
and
xor
adc
xchg
cltd
in
and
dec
fcompl
das
pop
loope
jle
cmp
daa
lods
or
stos
push
xor
ja
aas
je
mov
es
js
ljmp
cmp
push
stos
aad
push
and
adc
adc
mov
mov
pop
mov
mov
lods
mov
lock
inc
adc
dec
sti
insl
inc
mov
inc
cmpb
mov
jo
lods
pop
sub
js
adcl
subps
jl
cmp
add
cmp
ror
es
jno
add
push
dec
pop
jl
and
scas
mov
scas
and
pusha
stc
imul
jb
sub
xor
mov
ror
mov
sbb
sbb
in
outsb
mov
std
jge
mov
imul
mov
je
das
orb
fistl
repnz
lods
jb
insl
pushf
xchg
push
icebp
dec
mov
jo
ljmp
fsubr
or
push
movb
push
fnstsw
adc
sar
dec
bound
add
lret
aad
loope
xchg
ret
cmp
push
or
sub
pop
fdivr
add
mov
xchg
cmpsl
js
and
data16
ljmp
ds
addr16
pop
dec
jo
dec
into
fcoml
xor
add
stos
jns
or
clc
inc
leave
xchg
data16
adc
mov
loope
xchg
jns
fsubl
mov
inc
out
push
mov
lahf
cmpsl
xor
sbb
push
mov
bound
push
ja
lock
insb
xchg
pushf
dec
mov
loopne
in
push
lock
cmpsb
add
testl
cmpsl
inc
orb
mov
sbb
imul
rcrl
push
fwait
loop
or
adc
sti
mov
enter
inc
pop
pop
xor
jb
call
jmp
xchg
jecxz
stc
clc
mov
idivl
mov
cmp
push
mov
jo
lock
add
fiadds
sti
and
or
hlt
lock
add
lods
jg
adc
dec
sbb
fwait
hlt
icebp
pop
xor
enter
insl
rorb
push
xchg
sbb
movsb
and
xchg
aaa
cmp
and
sbb
inc
mov
bswap
xor
out
pop
stc
jg
mov
rclb
lret
lods
xor
outsl
adcl
cmpsb
and
repnz
mov
mov
inc
outsb
cmpsb
ret
stos
pop
imul
mov
bnd
shlb
inc
ret
dec
cld
std
js
je
mov
mov
test
mov
cmpsl
iret
repz
or
fldenv
push
loop
dec
jno
outsb
stos
push
xchg
fs
xchg
and
xor
ss
pop
push
loope
pop
lock
movsb
fsubs
xor
popa
test
push
xchg
inc
fs
hlt
sarb
in
and
ret
xchg
lea
adc
push
jle
push
jns
sbb
push
dec
xlat
pmaddwd
enter
int3
bound
out
dec
push
test
adc
push
inc
test
xchg
sub
xor
push
cwtl
xlat
cmp
mov
lahf
mov
cmpsl
scas
insb
adc
add
xchg
jmp
lret
push
pop
test
popa
shlb
test
cmp
test
jmp
mov
mov
mov
jecxz
cmpsb
cmp
dec
pop
xorb
or
inc
movsl
inc
testb
adc
mov
shr
xchg
sbb
stc
adc
pop
pop
subl
orb
ljmp
cmpl
or
add
cmp
movl
sbb
fldcw
mov
sbb
lds
inc
push
add
or
inc
les
lock
out
arpl
ret
mov
fdivr
add
lahf
fists
pop
out
jl
and
fmuls
cli
in
stos
dec
jnp
and
jp
fisubs
mov
shr
xchg
add
sub
scas
mov
sub
jnp
dec
push
clc
mov
lret
push
push
sbb
mulb
xchg
lods
lock
lock
mov
push
mov
push
xlat
adcb
xchg
and
sbb
js
fidivrs
fmulp
pop
cmp
add
std
test
xor
lret
jns
mov
insb
cmpsl
pop
xchg
dec
add
insb
jb
jecxz
pop
inc
inc
fcompl
push
or
pop
sub
test
xorb
int
mov
pop
xchg
scas
inc
cltd
and
leave
scas
stos
cli
push
xchg
inc
test
cmp
popf
inc
scas
fildll
mov
inc
push
ss
lahf
scas
jle
addb
frstor
push
xor
mov
js
push
loop
popa
orl
sbb
das
imul
inc
stos
pusha
loopne
or
push
faddl
xchg
sub
mov
jecxz
dec
sub
shlb
lret
lods
into
jmp
in
rcrb
jecxz
fidivrl
jecxz
loop
pop
stos
loopne
lret
dec
inc
dec
xchg
and
adc
imul
int3
xchg
xchg
pusha
jne
fcomps
test
jmp
nop
or
shrl
sbb
icebp
outsb
jmp
scas
xorb
add
test
in
push
or
repz
data16
stc
test
icebp
out
es
enter
aad
and
xchg
mov
mov
and
xchg
jns
sbb
push
jnp
fxtract
cmp
repz
lock
fsubr
cltd
jl
jp
and
xor
jle
pop
pusha
rorb
das
jb
mov
mov
fbstp
mov
or
mov
stos
sub
cmpsb
sub
mov
std
ja
push
cmp
repz
sbb
pop
push
xor
xchg
ret
add
push
lcall
mov
call
adc
pop
rcll
cli
pusha
xchg
jbe
cmp
sub
lahf
out
jle
add
scas
outsb
aas
lock
test
sub
dec
xchg
mov
mov
mov
popl
cs
mov
cmp
xchg
cmpsb
pop
outsl
xchg
jl
inc
inc
or
ficoms
nop
leave
lret
inc
sti
dec
xchg
sbb
inc
repz
pop
fadd
lods
pop
push
pop
arpl
xor
cltd
adc
repnz
bound
sbb
lahf
dec
es
mov
mov
inc
in
lcall
pop
cmp
or
outsb
ljmp
jnp
iret
adc
pop
movsl
dec
mov
adc
cmp
mov
mov
dec
mov
adc
ss
je
dec
adc
daa
test
jecxz
sub
sbb
mov
addr16
dec
movsb
sbb
mov
outsl
and
adc
sahf
dec
ljmp
and
sub
pop
xor
fsincos
push
iret
fisubrl
test
leave
pop
add
fwait
lock
ljmp
xor
dec
xchg
push
xchg
in
add
sub
pop
xlat
pop
mov
or
cli
lods
pushf
fwait
pop
lahf
sbb
cld
or
mov
imul
ret
mov
mov
out
add
fisttpl
xchg
jl
jmp
into
ja
rorl
dec
pushf
movsb
in
call
mov
xchg
repz
sub
xor
loop
dec
test
pushf
push
push
jb
into
in
xchg
adc
es
push
stc
xchg
push
cmpsb
les
cmp
fs
das
andb
outsl
stc
es
ljmp
push
pop
push
stos
data16
comiss
sub
sub
push
xchg
mov
xlat
stc
pusha
test
pusha
fsubrs
imul
push
fs
xchg
or
lret
jbe
outsb
cmp
out
and
rolb
push
in
adc
mov
test
daa
fdivs
pop
imul
ja
pop
movsl
jb
and
fidivl
xor
add
lret
popf
rorb
mov
sbb
mov
dec
cmpsl
cmc
mov
movsb
je
roll
jbe
adc
and
mov
data16
into
pop
push
mov
xchg
bound
xchg
cmp
orl
gs
or
push
pop
jp
test
add
mov
and
fwait
sarb
addb
movsl
mov
pop
pop
fst
and
push
lret
les
out
mov
hlt
or
std
sbb
pop
je
aaa
sbb
aaa
ss
les
sti
jmp
cli
dec
fstp
fcompl
xchg
call
notl
and
xchg
jg
push
popf
push
mov
or
or
push
cmp
jp
les
inc
jns
sbb
std
shll
add
fistpl
test
and
imul
cmp
mov
adc
bound
push
inc
js
jp
andl
lods
shlb
xor
aaa
aad
int
and
dec
ret
pop
aad
mov
mov
in
xor
cs
push
sbb
sbb
repnz
sahf
hlt
je
xlat
jns
push
adc
and
dec
mov
push
and
clc
stos
sti
imul
pushf
mov
int
cli
lock
push
ja
xor
adc
into
sbbl
mov
push
pop
jmp
mov
ss
add
sbb
out
mov
mov
cmpb
les
push
cmp
and
inc
sub
pop
loope
jnp
jns
out
xor
mov
mov
add
cmc
xor
bound
outsl
inc
xchg
push
push
mov
pop
sbb
in
mov
pop
xchg
xchg
adcb
jecxz
out
or
pushf
xlat
lds
xchg
inc
jg
sbb
fs
fwait
stc
mov
movsb
sbb
fcoml
out
xchg
fsubs
pushaw
xlat
pop
lds
fiaddl
ljmp
insl
add
xchg
sbb
push
int
lahf
jo
or
mov
in
pop
shll
mov
xor
mov
test
into
pop
sub
rolb
mov
imul
push
xor
xchg
cs
aad
jmp
mov
jnp
mov
imul
sub
lods
and
xchg
xor
mov
mov
xlat
test
inc
icebp
sub
in
dec
mov
test
pop
mov
fcoms
ficoml
cwtl
xchg
aas
add
sub
jp
pushf
mov
fmull
jno
push
out
add
mov
cwtl
das
mov
fbstp
pop
cmp
adc
enter
mov
ja
lret
pop
repz
fcmovnu
jmp
jge
sbb
mov
scas
out
or
outsl
mov
test
push
ds
insl
out
mov
and
mov
dec
pop
ficompl
sub
mov
add
xchg
push
imul
dec
popf
cmpsb
or
push
sbb
or
dec
and
adc
fsubr
push
or
inc
add
jne
fldt
jl
jbe
pop
xchg
popa
imul
rcrl
out
xchg
les
jmp
cmp
mov
xor
jg
xchg
push
mov
cmpsl
test
inc
sbb
adcb
jnp
pop
mov
push
fsubs
and
std
mov
clc
popf
pop
pop
jecxz
fimuls
test
test
sbb
cli
mov
pop
hlt
adc
mov
push
dec
cld
test
leave
sbbl
jno
mov
push
aaa
nop
cmp
sub
xor
dec
jecxz
or
imul
sub
je
decl
mov
pusha
or
jns
movsl
adc
xchg
xor
add
stos
jbe
push
sbb
pop
mov
xchg
mov
popa
dec
adc
gs
jns
fdivrs
sbb
jmp
mov
pop
cmp
test
jecxz
jb
push
or
mov
jb
xor
and
test
cli
jmp
jae
ljmp
hlt
in
idivb
inc
int
xchg
push
or
out
add
lret
notl
add
ret
daa
xor
mov
shr
das
cs
or
or
push
sbb
enter
adc
sub
leave
call
sub
jle
mov
dec
pop
jo
lods
sub
inc
push
mov
mov
inc
decl
push
ja
aam
dec
mov
jle
push
shll
pop
mov
popf
sub
inc
xor
lahf
inc
jge
in
rol
je
jge
fs
push
xchg
in
push
push
and
fiaddl
lock
loop
les
mov
aaa
xor
call
pop
enter
dec
jae
jo
mov
cmpl
add
and
out
les
arpl
mov
sub
mov
gs
movsb
gs
or
out
xor
inc
popa
or
aaa
or
orl
ret
xor
imul
leave
jl
push
jle
inc
jg
gs
mov
punpckhdq
fcmovne
stc
sub
add
or
bound
sbb
inc
js
inc
mov
sub
mov
push
out
fs
cwtl
popa
sbb
and
push
lds
movl
cld
and
inc
mov
daa
push
mov
popa
lock
and
push
mov
add
popa
cmp
jo
xchg
mov
stc
call
cmp
sub
lea
mov
jg
pop
pop
gs
shrb
leave
jmp
lahf
cmpsb
dec
xchg
aaa
adc
mov
add
shlb
push
in
mov
and
fstps
sub
iret
cmp
outsb
sub
test
sbb
cwtl
pop
test
repz
leave
call
movsl
inc
loop
int3
aad
cmp
and
gs
jo
adc
push
mov
fxch
mov
call
nop
adc
cmp
arpl
mov
stos
cmp
fwait
sti
das
mov
int
fidivs
mov
jbe
mov
mov
dec
fisubl
lcall
jle
rcr
jl
loop
out
rclb
cmp
inc
push
mov
mov
loop
jno
jno
cli
orl
xor
cmp
mov
inc
sub
cmp
lock
int
pop
pop
mov
inc
jbe
dec
mov
and
mov
aad
in
fistl
add
loope
push
sbb
push
inc
sbb
cmpsb
clc
pop
mov
fsts
int3
test
cmp
ljmp
sahf
inc
es
xchg
sub
leave
xchg
aad
jo
int
jb
mov
scas
push
scas
clc
xchg
pushl
xlat
test
leave
push
repnz
repz
arpl
sbb
cmc
adc
cmp
inc
sbb
ret
adcb
mov
loopne
cs
xor
stos
icebp
fistps
data16
negb
fbld
in
sbb
mov
inc
and
dec
shrl
jmp
negb
dec
insb
xor
lret
xchg
pop
inc
push
add
daa
xor
lods
stos
test
clc
imul
pop
pop
fnsetpm(287
shl
inc
lods
aas
in
cwtl
mov
and
dec
sti
xchg
ficompl
pop
adc
leave
jbe
ficoms
sqrtps
xor
pop
clc
push
dec
push
mov
lods
mov
sub
repnz
lret
pop
lock
xor
pusha
outsl
mov
cmpsl
inc
insb
mov
or
inc
jnp
jmp
xchg
fucom
xor
add
iret
daa
and
push
push
lea
cld
push
sbb
or
pop
enter
pushf
add
xchg
sub
imul
in
xchg
out
jae
sbb
jmp
or
sbb
out
mov
push
repnz
je
jg
mov
sahf
mov
xorb
jne
jno
dec
mov
ret
dec
fwait
mov
mov
mov
lods
jb
adc
inc
pop
clc
icebp
pop
mov
push
into
mov
cmp
xchg
xor
cmp
repz
ss
mov
andb
push
xor
jle
mov
mov
mov
xor
xchg
rcr
xor
das
fcomp
mov
jl
push
cwtl
push
stos
flds
bound
fs
and
not
mov
cli
in
xchg
mov
pop
inc
lret
sbb
hlt
or
test
fiaddl
adc
cmpsl
in
movsb
fsubs
enter
xchg
xchg
sbb
mov
xchg
mov
ja
fdivl
in
xchg
push
push
cmp
inc
aad
cmp
test
xchg
push
les
lret
lret
mov
sub
movsb
fiaddl
les
mov
push
jb
cwtl
xor
xchg
inc
push
bound
dec
jae
fwait
ror
cmpsb
dec
aam
leave
lea
push
cmpsb
sub
and
cmp
loop
outsb
dec
stos
push
stos
cmp
push
inc
xor
cli
push
push
std
xor
aas
mov
sahf
and
pushf
pop
mov
loop
sub
mov
pop
pop
cmpsb
out
pop
cmp
sahf
inc
xor
imul
orl
jno
adc
movsb
and
cmp
sub
shlb
xchg
je
mov
leave
and
imul
addl
out
lods
jb
in
mov
xchg
test
mov
mov
out
fwait
pop
sub
clc
mov
lds
jnp
lods
push
test
sbb
ret
cmp
sbbb
cltd
test
adc
movsb
aaa
mov
pop
pop
loop
in
cmpl
lds
inc
sub
adc
jmp
sbb
gs
pusha
inc
and
dec
push
adc
xchg
cmpb
sub
push
enter
iret
xchg
leave
pop
movsb
lret
push
clc
xchg
test
add
sbb
mov
fwait
dec
mov
sbb
loope
out
add
xor
jo
mov
aam
sar
and
pop
cmp
in
aaa
in
cmp
pushf
in
pusha
or
std
aam
into
ds
hlt
or
pop
stc
push
adc
enter
lret
adcb
mov
in
cmp
mov
cmp
jge
mov
fdivrl
aaa
sbb
fstpt
lret
push
popf
sbb
gs
sbb
mov
pop
pop
lods
out
clc
cmp
repz
mov
adc
mov
xchg
or
cmpsl
xorb
bound
mov
add
mov
mov
stc
stos
pushf
addr16
jae
add
sbb
lahf
fsubs
ja
adc
mov
jbe
test
mov
mov
mov
rcrl
xchg
cmp
fdivr
cmp
dec
movsl
jns
stos
loope
mov
out
sub
xchg
mov
push
adcb
call
rclb
cwtl
rcrb
mov
or
xlat
inc
jge
dec
in
hlt
mov
xchg
adc
inc
mov
inc
adc
add
push
pushf
add
mov
iret
mov
mov
mov
icebp
lret
fldcw
xchg
lea
lret
nop
push
shl
push
push
out
aam
mov
test
inc
xchg
cmp
aas
in
out
add
enter
adc
mov
test
or
push
shll
shrl
adc
mov
mov
add
mov
jo
or
repnz
mov
out
add
out
cmp
daa
adc
sbb
xlat
mov
mov
cmpsl
sbb
pop
fsts
xor
insl
cmp
ja
mov
mov
jl
mov
fmulp
sbb
and
jb
pop
test
xchg
sub
les
scas
push
es
mov
xlat
mov
add
jne
insb
sbb
fbstp
and
cmpb
test
lahf
sarl
push
shl
jmp
hlt
lahf
cwtl
jo
mov
xchg
pop
and
aad
cmp
pop
aas
insb
dec
jbe
xchg
lods
push
xor
fsubr
popf
repnz
sub
aaa
popf
mov
adc
fs
pusha
cmp
pop
rcr
jns
inc
jge
dec
sub
push
jne
movsl
movsb
les
test
xchg
mov
inc
xor
mov
sbb
hlt
iret
and
test
cmpsb
lahf
jecxz
push
std
mov
xchg
and
repnz
lret
sub
lret
das
xor
cwtl
icebp
fdivrs
xchg
xchg
shl
add
lcall
int
xorb
pop
pop
dec
int3
inc
lods
bound
pop
push
rorl
roll
notrack
pop
in
mov
bound
movsb
jo
push
gs
mov
nop
xchg
fdivs
jge
js
and
inc
jbe
push
mov
jmp
les
repz
mov
test
into
lret
sahf
inc
jnp
jne
xchg
mov
pop
adc
insb
adc
fidivrl
out
sbb
out
gs
divl
rcrl
cmc
xchg
ja
xor
out
cmpl
mov
mov
pop
pop
cmp
and
insl
sar
int3
imul
inc
adc
jmp
lret
leave
lock
jbe
jge
sub
je
jl
shrb
ret
lret
imul
and
popf
insl
jnp
sbb
hlt
hlt
shl
sub
push
push
sahf
clc
mov
movsb
push
push
negl
add
test
pop
push
jge
cmp
ret
les
adc
jp
in
es
loope
cld
adcl
or
jae
les
pop
xorb
cmpsl
test
mov
cli
addw
cli
mov
inc
sbb
call
add
cmp
jns
insl
inc
imul
push
fmull
mov
out
lods
inc
adc
test
jo
repz
cs
fbstp
adc
scas
mov
shlb
scas
mov
mov
ret
lcall
sbb
sub
pop
xchg
sub
je
daa
repnz
mov
fdivrs
mov
in
pop
fidivrl
adc
lret
pushf
sub
loopne
shll
loop
idivl
out
icebp
xor
lods
dec
jmp
sbb
sub
xchg
dec
cmpsl
mov
js
aaa
frstor
loop
lea
fs
mov
mov
fwait
enter
push
fldl
pop
dec
mov
imul
lcall
push
test
push
sub
test
addr16
sub
gs
sub
adc
pop
sbb
mov
outsl
xor
add
pop
lods
dec
cmp
cmp
scas
mov
arpl
test
pop
rcll
add
or
out
decl
fildll
cmpsb
and
dec
pop
lea
and
pop
mov
jmp
push
iret
lds
insb
cmc
repnz
sub
sahf
lret
aam
and
pop
sbb
std
mov
cmp
mov
cmpsb
out
jg
cmp
dec
out
cmp
cli
daa
dec
xchg
push
push
int3
lcall
push
and
xchg
enter
lahf
outsb
pop
sub
in
mov
mov
mov
jbe
addr16
outsl
and
jne
sbb
sbb
add
bound
jle
rcr
gs
mov
in
out
icebp
inc
push
push
jae
and
sahf
jl
adc
add
icebp
cmp
shll
lock
orl
xlat
jns
mov
jmp
sbb
sahf
lret
outsl
cmpb
jmp
iret
mov
ss
fcmovnb
dec
sub
clc
imul
sub
loope
sbb
xorl
test
push
mulb
xchg
shrb
js
jg
lods
mov
xchg
lea
test
mov
mov
or
xor
xor
pop
in
jmp
int
adc
fwait
mov
lock
jle
addl
test
in
inc
out
sub
mov
mov
push
cmpb
jbe
sbb
pop
sub
cwtl
popf
sub
lods
mov
jle
popf
enter
popa
dec
jge
mov
mov
or
sub
adc
lea
or
fcomip
lahf
aaa
sbb
dec
imul
int
xor
fiadds
cli
add
or
lahf
mov
add
xor
lret
or
jnp
push
and
push
loop
nop
add
out
or
dec
jge
sub
pop
mov
hlt
dec
push
lods
xorl
xchg
jbe
rorl
loopne
jo
mov
fsts
xchg
aam
cmp
seta
cmp
push
jle
mov
sub
mov
xlat
xor
xor
out
loop
sbbb
add
add
xor
test
sbb
pop
jl
cmp
cmp
lret
lock
cmp
mov
pop
mov
test
into
xor
aaa
or
xor
jmp
jne
scas
pop
scas
testb
lea
cwtl
std
imul
jge
cmp
lret
jmp
shlb
mov
in
dec
push
lret
jae
xchg
mov
dec
xchg
lea
sub
es
add
das
mov
adc
xchg
push
mov
xchg
mov
jns
dec
sbb
lea
pop
sbbb
mov
mov
insb
in
inc
xchg
jecxz
mov
iret
mov
lea
or
cmp
push
lahf
fdivrs
out
push
cmp
jne
jp
cltd
adc
adc
inc
xor
outsl
adc
scas
dec
ja
push
dec
add
or
fldt
cltd
cmp
shr
pop
xor
inc
cmc
push
insl
add
mov
or
filds
jp
dec
cld
in
sub
adc
push
cltd
mov
dec
push
imul
jnp
andl
and
mov
push
push
lds
outsl
pop
cltd
shl
sub
shl
repz
insb
nop
add
mov
cmp
push
aaa
es
stos
mov
aaa
lds
cmc
scas
or
call
sub
jae
inc
outsl
not
into
mov
adc
negl
mov
mov
mov
cmp
mov
test
sub
mov
cmp
and
add
or
fdivrs
mov
inc
cmp
sbbl
pop
fimuls
loope
int3
dec
repnz
clc
fnstcw
sti
scas
ljmp
xor
dec
repnz
adc
jge
loop
decb
sbb
dec
inc
jns
mov
fwait
outsb
mov
stos
fistl
ss
adc
icebp
mov
arpl
in
dec
scas
adc
add
and
mov
pop
fmuls
nop
and
mov
push
inc
imul
cwtl
in
add
fisubl
into
popa
push
pop
cmpsb
or
hlt
mov
mov
push
movsl
jne
xor
cld
mov
cmpl
dec
ja
push
and
inc
and
adc
jmp
adc
push
sarl
cmp
sbb
pop
ss
mov
jae
mov
insl
scas
sbb
mov
rolb
sub
sbb
push
mov
mov
fwait
push
fdivrl
dec
jne
icebp
adc
js
xchg
jp
imulb
cmp
movsb
sti
mov
iret
bound
fisttpl
fistl
xchg
mov
loopne
shr
cwtl
das
movsb
int
jl
jecxz,pt
lea
push
scas
jl
jno
add
xchg
pop
lcall
lret
test
jno
test
mov
in
pop
pop
sbb
sub
jge
add
gs
sub
jmp
iret
mov
jmp
shll
js
xor
pop
loope
not
pop
lods
push
stc
xchg
fcomps
lea
mov
mov
adc
stc
clc
jo
dec
cmpsb
call
mov
lcall
and
mov
cmp
leave
fisttpl
jl
mov
shll
out
fdivrl
dec
scas
cmp
jle
out
out
bound
loop
ss
jmp
add
mov
and
pop
push
mov
sbb
inc
cmpb
stos
sbb
mov
add
mov
xchg
iret
sub
sub
cmp
fmul
lds
popf
mov
fstpl
lea
repz
popa
aad
lea
fistps
cmp
subl
jb
add
fwait
inc
cmp
mov
pop
lods
jns
mov
adc
scas
test
pop
pop
ss
inc
out
sbb
lret
push
in
push
inc
shrl
stos
or
add
and
fs
sbb
ret
xor
push
xchg
daa
nop
popa
mov
cmpsl
stos
bound
rcl
dec
negb
test
sti
pop
lcall
jp
shrb
xchg
push
adc
lahf
or
add
test
rorb
add
mov
xor
xchg
cmpsl
push
cmc
rcll
ret
or
jns
adc
inc
psubd
and
insb
adc
adc
fwait
mov
jmp
lea
jg
xor
ret
xor
sbb
sbb
out
dec
mov
fists
jp
xchg
push
lock
xor
jb
or
cltd
inc
dec
loope
inc
sub
jmp
xchg
orb
pop
mov
mov
mov
pop
xchg
pop
sbb
inc
orl
push
xor
sbb
cmp
clc
push
fiadds
add
repnz
xor
fbld
and
xchg
out
call
test
xchg
add
in
mov
push
nop
inc
mov
mov
in
xchg
sbb
lret
jns
fsubrs
out
xchg
jmp
shlb
scas
arpl
mov
inc
bound
adc
ret
jmp
dec
pusha
outsb
mov
mov
sbb
push
shlb
inc
jmp
pusha
cwtl
mov
pusha
adcb
test
ret
fptan
xchg
push
stos
into
sub
sbb
int3
insb
inc
xlat
and
lods
inc
scas
test
dec
lods
mov
push
aas
insb
pushf
pop
loopne
sahf
dec
sub
jge
push
mov
mov
scas
arpl
mov
xchg
mov
shrb
scas
inc
push
lods
stos
mov
test
adc
pop
fidivl
jne
inc
outsl
mov
jb
fs
cmp
sahf
imul
xor
adc
and
aas
fld
mov
repnz
inc
cltd
lea
xchg
push
jns
stos
das
cmp
gs
fmuls
and
insb
into
add
and
lods
jns
sarl
or
sbb
lahf
lahf
push
mov
xchg
in
outsb
fdivrl
xor
cmovo
or
leave
cmp
mov
mov
test
jle
pop
push
xor
push
and
fisubs
std
ret
mov
jns
call
aad
std
xchg
addr16
push
aam
sbb
lret
dec
sarl
cmc
outsl
and
push
pop
xchg
mov
push
xchg
xlat
jb
movsl
inc
mov
into
push
jnp
andl
push
std
popf
jmp
imul
jmp
push
js
push
ficoml
pop
loop
pop
cs
adc
cs
push
movsb
pop
shl
add
aad
gs
and
mov
and
dec
pusha
lcall
movsb
pop
dec
in
jg
mov
sub
cltd
add
scas
enter
inc
ljmp
in
into
inc
push
mov
push
adc
mov
mov
nop
or
adc
mov
mov
inc
sub
aad
xchg
push
les
push
mov
cmp
clc
fsubrl
pop
and
fs
inc
aas
mov
das
push
daa
mov
xchg
popf
mov
idivl
test
out
sub
xor
rcrb
xchg
mov
ds
scas
and
cmp
sbb
mov
std
rorb
jne
mov
and
in
in
adc
das
xchg
daa
sub
xchg
stos
mov
popa
jge
fisubrl
mov
negl
dec
outsb
scas
sub
outsb
int
cmc
loopne
mov
mov
inc
adc
lahf
cld
inc
lds
sbb
and
test
pop
sbb
lods
movsb
sbb
outsl
push
lret
and
negb
mov
xlat
xlat
movsl
lret
pop
inc
jbe
pop
and
aaa
shll
adc
fisubl
test
in
mov
xchg
mov
jb
shlb
dec
cmpsb
jle
inc
and
sti
dec
ja
mov
dec
jns
dec
ficompl
mov
insb
pop
sbb
pop
mov
inc
scas
cmpsl
adc
shll
adc
stc
cmp
lods
push
or
pop
jg
xor
mov
cmp
jbe
ss
lea
adc
movsl
jl
jne
cmp
data16
data16
lahf
pop
mov
xchg
cli
push
es
aas
or
mov
jno
out
rorl
mov
or
mov
out
pop
cli
mov
add
sbb
add
js
pop
mov
adc
outsb
into
xor
mov
mov
cmp
lods
mov
cmpsb
popa
test
scas
or
cmpl
inc
inc
lock
xor
rolb
fdiv
push
mov
sbb
mov
daa
fsubrs
stos
orb
ds
aas
pop
push
inc
dec
mulb
enter
lds
mov
inc
nop
sbb
xor
daa
loopne
mov
movsl
ljmp
jbe
pushl
repz
ror
stos
add
ss
shl
icebp
cmp
lods
aad
xor
add
dec
jle
cli
mov
fmuls
cs
or
sar
sub
cmc
pop
cmpsl
aad
jl
dec
cmpl
lahf
sbb
and
fwait
jl
leave
sbb
xor
mov
inc
xor
mov
nop
mov
jne
sahf
in
cmp
jp
mov
cmpb
push
jns
dec
adc
cmpsb
xor
test
ds
loop
push
lds
fsub
push
cmp
call
ss
and
xor
and
and
add
mov
in
pop
pop
inc
add
jo
insb
hlt
jnp
insl
int3
add
fucom
xchg
jns
sbb
sub
and
pushf
lods
mov
push
or
daa
mull
dec
pop
repnz
inc
int
cmp
or
rclb
clc
in
mov
aad
dec
dec
bnd
xlat
cmp
or
movb
mov
movsl
ss
repnz
and
add
arpl
test
xchg
scas
cmp
and
popf
pop
jmp
fisubs
push
jbe
push
and
jbe
data16
xchg
inc
lods
mov
negb
inc
dec
jb
or
or
sub
xor
and
jmp
fdivp
sub
jge
pop
ljmpw
mov
push
sbb
inc
xchg
lods
sub
jle
mov
or
int3
loop
or
popa
cli
pushf
loope
scas
pusha
test
dec
loopne
stc
dec
dec
push
icebp
lods
jae
outsl
xchg
leave
mov
dec
mov
clc
xchg
xchg
andl
fidivrl
sahf
adc
jnp
mov
in
in
cmpsb
mov
out
nop
call
mov
mov
scas
dec
sbb
pop
outsb
adc
in
mov
lock
ficoml
inc
xchg
xor
sbb
pop
sbb
or
mov
or
adc
adc
adc
add
mov
push
add
cmp
sbb
jg
test
rcr
aaa
sbbl
inc
aas
adc
cmpsl
cmc
adc
jnp
adc
cmp
dec
mov
mov
fwait
xchg
jno
sub
push
and
out
mul
xchg
fcomps
rol
cmp
std
sub
add
sarb
lds
lcall
jne
dec
jmp
nop
or
cmpl
outsl
ljmp
jl
dec
mov
xlat
mov
mov
pop
xor
sub
xor
repz
push
pop
mov
das
leave
push
movsb
jp
jo
push
cmpsl
and
loop
sbb
out
jge
dec
jl
sbb
out
test
sbb
out
rcll
cmpsl
jge
jmp
js
push
cmp
out
mov
push
pop
jns
dec
movsb
bound
fcoms
cmc
or
dec
sbb
in
add
mov
lret
adc
cmp
mulps
mov
pop
ljmp
rcr
dec
jp
out
out
push
mov
sub
scas
mov
jmp
pop
imul
jmp
jno
mov
mov
decl
shlb
outsl
push
jno
sti
push
pop
pop
pop
sub
xchg
mov
push
int3
fs
or
add
sbb
xchg
push
inc
inc
lods
ficomps
pop
cmpsb
data16
mov
jge
and
add
inc
and
out
cmpl
adc
ja
jl
mov
inc
sbb
bound
xlat
mov
pusha
push
adc
push
push
dec
jle
mov
and
stos
repz
sub
lahf
adcb
fs
add
jmp
cmp
mov
push
aam
or
outsl
stc
jl
sbb
out
xorb
aam
jmp
rcl
cmpsb
fldl
or
js
scas
addr16
mov
cmp
fucomp
fidivl
loope
adc
pop
sbb
lods
cltd
sub
popf
mov
xlat
xchg
repnz
movsl
xchg
scas
pop
insl
jp
add
iret
shrb
and
mov
mov
adc
sbb
jg
add
push
xchg
inc
and
cltd
js
test
cld
fs
adc
jno
popa
add
add
cltd
xor
out
roll
int
adc
pop
fs
int3
adc
test
outsb
push
push
mov
adc
and
shrl
fs
gs
push
testb
dec
pop
jae
push
pushf
ret
inc
mov
push
cmc
scas
dec
shl
dec
adc
cld
sub
sbb
xor
lret
sub
in
mov
jle
or
mov
fldl
in
mov
mov
xchg
outsl
xchg
or
stc
mov
pop
add
roll
pop
cmp
nop
ret
push
xchg
add
lcall
filds
lods
or
xchg
dec
push
in
js
das
fwait
jmp
mov
ret
adc
push
insl
inc
sahf
test
lea
in
cmpsb
add
adc
sub
test
shl
pop
mov
mov
add
cmp
and
fldcw
push
xor
jns
ret
out
pop
pop
fimuls
xor
jnp
jge
out
movd
xchg
adc
cmpl
stos
rol
sarl
jp
sbb
bt
mov
pusha
repnz
mov
test
pop
and
push
rcrl
out
adc
clc
ret
mov
test
inc
inc
test
lock
pop
add
repz
hlt
nop
daa
and
sbb
add
testl
rclb
daa
xchg
push
and
fidivrl
inc
mov
outsl
in
out
adc
mov
insl
or
mov
mov
js
loope
ja
push
fwait
and
xchg
pop
mov
xchg
ret
mov
dec
filds
cld
fisubl
scas
adcb
test
adc
mov
das
dec
fldl
pop
and
fcoms
lods
cmp
ljmp
es
cli
mov
addr16
jns
gs
adc
push
aas
ficoml
mov
clc
fmull
loopne
jnp
movsb
mov
pop
mov
inc
sbb
jmp
xchg
aaa
lahf
je
idiv
imul
inc
testl
cli
fdivr
lds
mov
mulb
dec
pop
jmp
fdivrp
inc
sub
push
popf
lods
xor
out
frstor
fnclex
dec
mov
jae
repnz
push
lret
lcall
push
fldenv
xchg
push
and
jecxz
sti
xchg
sbb
in
ret
mov
fucom
fisttpl
inc
pushf
cmp
lret
sbb
pusha
pop
push
jbe
cs
or
fsubl
in
mov
pop
push
mov
testb
movsl
je
jl
mov
in
pop
mov
lock
mov
sub
pop
push
lahf
and
das
pop
pop
pop
mov
jnp
repnz
std
sarl
push
pop
sub
sarl
push
xchg
aam
cltd
int3
adc
push
mov
stos
aad
bound
xchg
lret
fs
inc
stc
mov
mull
std
fdivl
adc
jbe
in
out
nop
xor
pcmpeqd
cmp
xchg
push
dec
adc
sub
mov
add
mov
stos
add
cmpsl
xor
hlt
mov
inc
sbb
adc
popa
ret
shll
push
jmp
ret
mov
jg
into
out
sbb
ret
mov
orb
scas
mov
ja
cmc
adc
inc
pop
mov
and
cltd
mov
test
mov
fcom
arpl
or
jmp
add
lret
inc
sbb
jo
sahf
enter
pop
stos
test
and
sub
xor
pop
cmp
jnp
daa
push
js
pmaxsw
popf
mov
mov
and
repnz
fidivrs
cmp
jne
adc
imul
jg
idivl
popl
xor
dec
stos
add
dec
mov
and
aaa
xor
push
dec
sahf
shrb
mov
ja
mov
sub
repz
lcall
jbe
imul
push
adc
clc
mov
mov
push
cltd
shl
sbb
mov
ret
mov
rorl
sbb
rolb
gs
lods
arpl
inc
std
adc
into
fists
test
in
add
inc
out
dec
sub
adc
nop
sbb
and
pop
sub
jmp
push
cmp
fistl
daa
mov
lods
jne
xor
jge
and
xchg
lea
enter
dec
in
fs
dec
mov
mov
rcrb
bswap
xor
xchg
jmp
pop
call
shll
in
add
cmp
jmp
out
sbb
push
sub
mov
gs
jle
out
jns
or
mov
push
cld
xchg
xor
in
xchg
lock
stc
pop
imul
jl
sub
insl
adc
pop
or
xchg
in
int
or
or
or
rcrl
out
dec
jg
js
cmp
loope
xor
das
nop
cmp
sbb
sbb
xchg
cmp
arpl
jg
das
pop
push
or
movsb
cmp
push
push
and
fistl
and
dec
mov
in
pop
ficoms
jae
call
pop
ljmp
xchg
cmp
mov
or
lret
subb
hlt
in
in
mov
cmp
sub
pusha
push
nop
outsb
cmc
mov
sbbl
mov
aad
aad
jb
fnsave
cmp
lret
xor
cmc
lock
daa
jno
pop
insb
mov
cs
and
bound
cwtl
sub
inc
dec
push
xorb
hlt
dec
and
loop
add
sub
cwtl
push
jns
jnp
mov
sbb
xchg
hlt
jno
add
stc
jecxz
in
mov
ret
subb
mov
out
enter
cld
jle
pushf
sbb
and
jne
in
imul
loopne
mov
test
cmp
fcompl
sbb
adc
outsb
adc
mov
or
push
out
in
clc
sub
das
and
leave
adc
pop
or
ja
in
cld
mov
shlb
pop
cmc
sbb
arpl
or
jp
repnz
mov
mov
and
add
pop
sub
in
repnz
jle
mov
cmp
call
test
cwtl
les
jb
out
adc
mov
adc
and
or
jp
in
enter
mov
xchg
and
push
iret
fisubrs
out
xor
cltd
jno
int
mov
lcall
loope
mov
cmp
and
fcmovnu
jg
or
and
inc
pop
inc
out
addr16
dec
cmc
push
jl
jle
cmp
xadd
sbb
or
mov
outsb
add
int3
shlb
adc
cs
mov
xchg
sub
lock
je
mov
and
loopne
mov
imul
xchg
jmp
push
sub
mov
daa
lcall
adc
jae
addr16
ret
daa
inc
jmp
mov
imul
out
outsb
or
and
mov
xchg
enter
lds
out
push
or
adc
sbb
pop
lds
call
lret
stos
jbe
insb
inc
enter
movsb
aaa
push
cmc
cmp
pop
or
jge
sahf
lret
add
mov
aaa
or
pop
mov
sub
movb
sbb
nop
inc
int3
dec
add
xchg
js
sbbb
stos
push
cmpsb
ljmp
enter
mov
nop
push
in
aas
or
cltd
aad
inc
out
cli
mov
dec
mov
mov
xchg
cmc
add
shll
dec
repz
arpl
in
and
pop
out
xchg
pusha
mov
icebp
mov
stc
js
ret
gs
stc
notl
insb
incb
call
out
jl
scas
loop
stos
cli
dec
int
mov
jecxz
mov
fldl
aas
test
mov
repz
aaa
or
cltd
push
sbb
add
mov
jecxz
or
and
pop
jge
push
mov
fdivrs
cltd
sub
mov
push
xchg
jg
addr16
mov
dec
out
and
aam
jge
mov
adc
push
sti
pop
aaa
mov
mov
jns
call
les
cwtl
test
jno
dec
ja
pop
add
cmc
je
fnstenv
jg
ljmp
insb
xor
mov
push
xor
scas
jne
movsb
fistpl
add
outsb
outsb
insl
imul
sbb
pop
lret
jne
cmpsb
in
cli
cmp
lock
jnp
std
outsb
cmovg
jb
lds
repnz
pop
leave
mov
xchg
add
inc
push
jg
loope
iret
cmpsl
rol
stos
jmp
mov
jp
xor
in
out
shll
bound
inc
add
hlt
leave
dec
inc
shlb
cmp
mov
idivb
mov
inc
in
mov
fimuls
call
icebp
lahf
notl
fidivrl
add
pop
push
xchg
xchg
mov
popl
inc
rclb
clc
xchg
cmp
sbbb
ret
mov
jns
or
mov
out
popa
xchg
lods
adc
int3
shlb
push
mov
leave
test
clc
cmpsl
jp
fisubs
pop
es
popa
xchg
or
xchg
inc
push
addr16
mov
arpl
mov
shrl
inc
into
loopne
fnsave
fwait
xor
push
jl
mov
xor
mov
out
lahf
mov
aas
scas
dec
cmp
pop
sbbb
fildll
mov
xor
sbb
jmp
stc
mov
fwait
xchg
loopne
mov
mov
call
push
loop
jo
call
lea
out
pop
call
enter
test
sub
sbb
out
stos
pop
and
repz
in
mov
add
fisubrl
mov
sbbl
test
adc
add
mov
push
adc
jg
add
sbb
iret
pop
loope
insb
aas
inc
push
pusha
xlat
call
or
cmpsb
cmp
xchg
rcrl
sub
pop
cmp
push
cmp
arpl
loopne
test
mov
ftst
jmp
mov
fisubrl
pop
mov
push
and
shl
shl
lahf
lods
cltd
inc
aas
mov
mov
sub
jbe
push
fwait
out
mov
xchg
dec
addr16
out
push
inc
sub
jb
flds
mov
dec
out
sbb
leave
cltd
pop
xchg
jl
fxch
test
pop
or
loopne
xchg
xor
cmpb
mov
stos
and
and
repz
jmp
mov
xchg
movsl
in
imul
pop
adc
jo
ja
idivb
jo
loop
cmpsl
imul
testl
addr16
push
pop
add
xor
repz
rcrb
mov
scas
dec
xchg
dec
inc
add
adc
sbb
jecxz
test
push
inc
pop
sbb
test
mov
inc
aad
mov
xchg
push
push
popf
repnz
jg
arpl
pop
clc
jne
xchg
cmp
sarb
faddl
mov
fadds
repnz
cmp
bound
lods
push
cmp
push
push
sbb
cld
push
add
inc
pushf
cltd
push
lods
or
push
movsl
add
pop
movsb
ss
fisubrs
jno
popf
nop
outsb
push
adc
icebp
lods
inc
dec
std
or
mov
xchg
pop
xor
add
push
cmpb
out
stos
jmp
faddp
repz
call
scas
xor
sbb
int
mov
push
in
add
enter
aam
jbe
adc
mov
dec
mov
into
test
shrb
xchg
repz
cmpsl
negb
inc
mov
test
sub
addr16
adc
xor
mov
ret
out
push
in
push
inc
out
shrb
xor
xchg
sbbb
jnp
fidivs
mov
adc
es
insb
push
ljmp
xor
cmp
movsl
out
mov
cld
addr16
inc
mull
xchg
or
std
out
sarl
cmp
cwtl
inc
pushf
jo
or
inc
scas
sub
sbb
shl
mull
and
add
mov
je
xchg
inc
aas
sub
xchg
push
mov
outsl
inc
outsl
push
push
test
adc
lea
mov
shl
dec
fwait
repz
call
dec
orl
sbb
sub
xor
xchg
mov
jle
push
lret
sub
xchg
inc
xor
sarb
cmp
sbbb
xor
cmp
push
test
xchg
jecxz
adc
lahf
aas
jg
adc
pop
lahf
mov
les
inc
pop
xor
jmp
xchg
adc
test
out
mov
addr16
cmpsl
mov
idivb
mov
mov
les
mov
lods
ret
pop
cmpsb
push
dec
nop
fcomp
adc
inc
sub
sbb
cmp
push
and
push
out
leave
jne
test
faddl
sub
loopne
xlat
pushf
push
rcrl
and
sbb
jg
jnp
or
cltd
lahf
das
mov
test
add
pop
icebp
je
fmulp
imul
jl
xor
dec
fstpl
lidtl
jne
mov
push
insb
jmp
inc
div
push
inc
cmpsb
dec
test
jmp
pop
lret
jnp
push
xchg
or
dec
test
pop
jmp
pop
fstps
jnp
jo
xchg
mov
aaa
cmpsl
mov
add
mov
rcrb
add
mov
or
pop
push
nop
cmp
lret
sub
imul
push
dec
ret
fdivr
shlb
mov
xlat
bound
dec
testb
ret
xchg
iret
xlat
jp
lahf
push
out
xchg
cmpsl
or
dec
mov
mov
in
stc
test
push
jne
add
cmp
mov
fldt
and
inc
movsl
sarl
rclb
roll
cmp
loope
xchg
xor
push
xchg
test
js
xchg
adc
jp
adc
clc
add
jo
dec
rcrb
je
push
push
mov
jns
call
push
mov
jmp
and
xor
xlat
adc
aad
ljmp
iret
cld
ret
popa
jb
insb
fsts
jge
push
add
cwtl
pop
fwait
in
aam
jae
dec
jg
mov
add
jp
stc
daa
loopne
xor
mov
pop
xchg
aad
add
ja
jmp
mov
punpckldq
inc
lcall
mov
sub
jecxz
or
leave
daa
in
xor
inc
mov
out
jbe
cli
and
ret
scas
sbb
dec
push
inc
out
rorl
pop
nop
mov
xchg
jecxz
or
dec
inc
push
ret
or
call
pop
pop
out
mov
sahf
mov
cmp
mov
mov
dec
scas
enter
sub
xor
sub
mov
notb
andl
fsubr
out
xchg
mov
mov
hlt
mov
jae
mov
mov
push
lods
cmp
jle
dec
fistps
pusha
push
mov
mulb
mov
dec
pop
test
xor
aam
pop
imul
push
push
es
inc
xor
iret
in
xchg
rcr
push
in
and
shr
mov
fcomi
or
shl
leave
xchg
arpl
xorb
es
in
bound
ss
xchg
inc
les
loop
jge
mov
cmpsl
pop
add
dec
stos
call
pop
add
sbb
ficoms
ret
fnstenv
sti
dec
test
sti
sub
xchg
jae
cmpsb
xchg
push
insl
je
ja
adc
movsb
lahf
addr16
in
add
push
push
inc
add
and
je
les
and
inc
inc
insl
xchg
sub
and
dec
or
rorb
sahf
shl
in
push
sbb
data16
mov
out
or
pop
cld
out
mov
mov
ret
xchg
sahf
dec
fadds
ret
jp
sub
sbb
add
lret
jl
cmp
push
adc
inc
in
arpl
aad
fmull
sarb
mov
outsb
movsb
notb
mov
adc
arpl
xchg
mov
dec
sbb
push
rolb
adcb
push
pusha
out
arpl
out
sbb
scas
mov
dec
sbb
mov
test
in
mov
movsb
pop
imul
data16
sub
aad
popa
fiadds
or
scas
fsubp
lret
xor
movsl
cld
adc
dec
cmp
pop
add
jp
sbb
and
push
clc
lret
inc
lods
xlat
sub
pop
sub
jmp
xchg
adc
movsb
pusha
scas
dec
sub
inc
sbb
jmp
xor
jmp
sub
xor
int
mov
ficoml
xchg
adc
fmuls
pop
pop
jns
jecxz
fidivs
out
mov
xchg
jp
mov
outsb
enter
mov
add
cltd
addb
mov
test
cmc
fldenv
sub
sbbl
lea
inc
inc
cmc
stc
loope
sub
addb
ret
or
lret
lcall
jge
clc
xchg
das
xor
xor
cmp
enter
pushf
test
ret
sub
and
repnz
lods
inc
xchg
repz
cwtl
cld
insl
fmull
mov
inc
sub
pop
jns
ret
gs
out
xchg
sarl
loope
ljmp
out
jl
pop
arpl
and
xchg
adc
sbb
sbb
stos
test
dec
mov
sbb
or
jmp
jg
ljmp
or
sahf
jae
mov
adc
jae
insb
mov
inc
sbb
js
adc
and
add
fcmovb
jl
cltd
push
push
out
lea
add
das
mov
jb
dec
sub
das
cmpsl
out
adc
jns
mov
daa
shr
dec
and
dec
roll
xchg
dec
dec
jmp
outsb
push
inc
mov
enter
mov
gs
pop
jecxz
ss
mov
decb
test
adcl
mov
lret
out
sub
jmp
mov
xlat
dec
cmp
test
fcmove
fisttpl
bound
pop
leave
pop
movsb
fs
sbb
cmp
mov
sbb
hlt
or
cs
jle
pop
sub
push
aam
adc
movsl
sub
dec
into
or
inc
cld
imul
clc
fwait
rcll
xchg
add
jbe
cld
add
jb
stc
mov
inc
xor
jno
lret
outsl
shlb
push
gs
ja
adc
cmp
xchg
xor
jb
adc
jb
inc
stc
int
arpl
adc
sub
dec
push
gs
insb
lret
test
xchg
add
jmp
xchg
call
repz
cmp
mov
fimuls
xchg
test
bound
roll
std
jb
cmpsl
mov
inc
lret
mov
jae
adc
mov
add
and
sub
jmp
dec
pop
push
xor
sub
sub
inc
clc
mov
dec
mov
ret
lods
xchg
xchg
mov
push
loop
sub
dec
dec
scas
test
sahf
inc
dec
mov
fs
cmp
xor
sbb
into
repnz
daa
pop
test
and
test
adc
jg
fnsave
jb
in
or
pop
dec
int
roll
xchg
push
mov
and
loop
sahf
add
pop
inc
inc
dec
scas
ficoms
icebp
dec
loop
rcll
ss
pop
jg
xchg
je
xchg
dec
sahf
jl
pop
xchg
push
pop
push
push
xchg
pop
mov
lcall
fwait
mov
addr16
fcomps
adc
push
enter
jns
clc
pop
daa
mov
cmc
mov
fidivl
and
mov
fcomps
shlb
mulb
push
mov
xor
repz
or
xor
lock
pop
sti
daa
pop
or
xchg
cli
inc
adc
dec
add
dec
fsubl
inc
xor
iret
aam
fldenv
fistpll
cmpl
xchg
sbb
or
adc
push
or
js
pushf
mov
mov
cmp
or
xor
xchg
push
dec
jo
jp
or
mov
mov
addr16
mov
push
xchg
pop
cmpsb
inc
push
xchg
data16
jnp
jb
jmp
inc
aas
gs
mov
mov
push
or
loope
sub
inc
adc
in
cmpsl
pop
dec
jne
addr16
jl
mov
pop
jmp
add
insl
punpckhbw
jne
imul
cltd
jae
mov
mov
dec
je
shl
lock
inc
push
fmull
pushf
icebp
xor
xor
mov
sub
xchg
push
pop
stc
dec
bound
cmp
sub
je
add
jno
test
lds
roll
pop
mov
sbb
in
call
mov
ja
cmpsb
cwtl
ss
mov
ljmp
rcll
sbb
adc
into
cmp
xchg
jns
pop
mov
movsl
or
aas
out
cmp
nop
inc
push
adc
xchg
adc
push
loop
sbb
or
dec
adc
jle
jno
scas
lods
test
fdivs
out
in
add
int
fisttpl
push
push
cltd
push
add
mov
xchg
mov
mov
mov
les
pop
movsb
syscall
add
sub
cli
jecxz
pop
js
push
into
jmp
push
imull
push
daa
dec
cmp
xor
xor
jl
divl
sbb
push
pusha
inc
dec
push
aam
pop
sbb
mov
enter
out
fistpll
into
aas
push
jne
fsubrl
jns
jg
mov
cmp
inc
xor
mov
adc
shrb
add
push
enter
xchg
push
mov
mov
mov
fiaddl
mov
test
and
fistpll
mov
js
sub
lods
xchg
jns
mov
sbb
jle
dec
inc
jmp
xor
mov
fstpl
stos
rcl
fistpl
pop
fimull
aad
sbb
pop
sbb
in
lock
popf
pop
sbb
lock
in
in
push
int
and
insb
negl
sbb
xorb
push
enterw
jecxz
sub
cmpsb
nop
push
insb
jge
imul
adcl
lahf
or
mov
shll
push
inc
cmc
cmp
mov
mov
imul
rcrl
cld
add
mov
insl
orb
sbb
test
inc
sbb
jns
add
sub
stos
pushf
scas
popf
fs
mov
inc
or
pop
cmp
xor
mov
sub
aaa
or
push
jo
pop
and
shl
out
hlt
data16
daa
in
add
mov
decb
je
mov
jno
adc
mov
dec
adc
push
lahf
sub
fwait
xor
ret
ret
aad
mov
mov
das
xor
push
fisubrl
pop
lret
ja,pn
xor
adc
push
sub
lahf
jo
mov
dec
cwtl
popa
popf
outsl
push
subl
jae
scas
mov
cmp
in
sbb
cmpsl
in
movsb
jle
jno
mov
mov
fldenv
cli
notl
jl
test
dec
jl
mov
jge
shrl
lods
inc
idivb
enter
aas
sub
push
push
in
adc
xchg
mov
dec
ds
xchg
cmp
mov
mov
inc
inc
dec
ret
add
jle
or
popf
aas
fiaddl
leave
mov
scas
shll
mov
outsb
imul
xchg
push
push
cmpsl
out
push
xlat
jno
push
mov
xchg
jecxz
stos
push
mov
bound
add
scas
cmpsl
cmp
jns
je
mov
sub
jb
repz
jg
mov
das
inc
out
addr16
add
add
sbb
add
movsl
sub
insb
inc
push
xchg
fcomp
fnstcw
test
adc
ret
add
or
lods
push
div
dec
adc
aas
int3
add
adc
lock
add
inc
test
push
frstor
iret
lahf
dec
cmp
shll
aaa
dec
jmp
dec
jnp
repnz
fs
lret
pop
mov
add
push
adc
and
cltd
xorb
inc
loop
mov
roll
inc
push
incl
or
arpl
stc
lret
pop
adc
mov
dec
and
das
pop
adc
inc
adc
mov
xor
or
popa
sbb
out
pop
xor
mov
xchg
popf
in
adc
push
sbb
sub
pushl
jmp
aam
pop
xor
int3
inc
sbb
push
in
mov
or
cmp
xchg
push
sub
movsl
xor
cmp
xorl
loop
dec
in
xor
inc
pop
pop
cmp
sub
dec
mov
add
jge
subl
lret
dec
or
xchg
xchg
lds
mov
dec
scas
and
jg
fcmovb
rcll
or
sbb
xor
fildl
push
popf
jmp
jle
jle
sbb
test
ret
xchg
add
or
das
icebp
xchg
mov
test
push
mov
or
inc
push
insl
test
data16
movsl
sti
sbb
dec
ret
inc
push
add
sub
ficomps
sbb
pop
in
movsb
jl
cmpsb
xchg
loope
and
and
lea
sbb
test
jl
inc
push
cmpsb
ljmp
sbb
cmpsl
negb
in
push
dec
movsb
test
or
cmp
bound
dec
incb
add
lds
push
inc
rolb
cltd
rorb
in
dec
and
push
ljmp
int3
adc
sub
bswap
add
aam
mov
mov
cmpsb
xchg
in
in
nop
stos
jecxz
lds
and
out
insl
xchg
cmc
fistps
sub
in
popa
mov
fisubl
fildll
repnz
and
pop
xor
incb
stos
pop
popf
mov
jmp
bound
decl
sub
xor
shlb
popa
pop
rcr
cmpsb
jp
adc
int
mov
mov
xlat
scas
in
or
icebp
adc
xor
test
cli
pushf
push
arpl
outsl
hlt
push
inc
or
pop
psllq
bound
fisubrl
xor
fildll
idivl
orb
cmp
xchg
dec
or
fwait
push
loopne
leave
sti
sbb
pop
jno
subl
mov
mov
and
and
cmp
mov
fs
cmovp
test
or
int
xchg
dec
mov
cmp
fidivrl
ret
mov
cmpsb
xor
mov
or
mov
aam
bound
aas
test
sbb
or
jbe
movsl
enter
jae
adc
jp
aas
scas
aad
std
xor
pushl
frstor
jno
gs
mov
sub
cltd
cmp
out
dec
xchg
lcall
mov
or
mov
push
sbb
test
dec
nop
mov
mov
push
sub
lods
jbe
in
lahf
pushf
dec
push
mov
cli
notb
imull
jb
outsb
andl
jl
add
aam
xchg
or
jno
bound
mov
pop
pop
sbb
cmp
es
out
aaa
xchg
repnz
xor
cmc
fsts
jp
aas
inc
or
inc
sbb
sbb
mov
inc
cmp
icebp
test
push
cmp
in
jne
push
push
cmp
lods
les
ja
adcl
cmpsl
sub
cs
xchg
jp
inc
fisttpl
shrb
sahf
inc
mov
push
popf
das
fsubrs
push
xchg
pop
jg
adc
and
jecxz
lret
sbbb
jae
mov
sahf
ljmp
adc
push
movsb
pop
jb
leave
icebp
jno
adc
push
fdecstp
sub
or
and
jb
lret
cld
fsts
dec
lods
test
or
pop
mov
cmpsb
cmc
lds
push
xor
fiaddl
fisubl
cltd
ror
push
fidivrl
jp
leave
lcall
adc
inc
out
mov
std
push
movsl
icebp
sub
mov
mov
mov
inc
lcall
jmp
lock
in
shll
in
les
into
adc
outsb
mov
or
push
jae,pt
out
adc
jge
clc
cld
mov
mov
and
cmp
or
sbb
xor
sub
pop
sub
mov
pop
push
add
jae
int3
jp
jns
test
cld
outsl
push
jge
bound
out
loop
mov
push
shlb
aam
hlt
push
mov
xchg
jecxz
stc
push
xchg
cwtl
cli
data16
ja
je
inc
out
xchg
sub
cmc
and
rcll
cmp
pop
dec
adc
mov
loop
push
sbb
add
pop
mov
cmp
cmp
inc
outsl
imul
fldl
xor
pop
decb
jne
jne
adc
popf
repnz
ret
mov
inc
ficoml
shll
mov
into
mov
inc
push
mov
insl
jne
shrl
xchg
inc
sbb
outsb
mov
jecxz,pt
bound
mov
sbb
js
dec
neg
jbe
mov
and
xchg
mov
cmp
mov
sarb
push
pop
lods
nopl
in
adc
add
push
xor
or
push
rcrb
sbb
add
mov
test
stos
call
popa
clc
insb
in
pop
pop
mov
lret
mov
ds
jecxz
mov
adc
mov
or
ret
xchg
add
mov
sub
jo
dec
fwait
std
jge
rolb
xchg
int3
inc
fdivrl
push
mov
push
lahf
cmp
into
or
daa
inc
out
inc
pop
rcrb
mov
mov
aam
fldenv
enter
jae
mov
xor
jecxz
lea
insl
xchg
fsubr
and
or
pop
loopne
add
arpl
or
adcb
lock
add
pop
repnz
mov
test
les
es
mov
sbb
and
adc
mov
dec
and
dec
mov
inc
dec
stos
mov
rcrl
sarl
mov
jp
mov
fs
mov
mov
loopne
mov
loop
inc
jecxz
daa
fldt
syscall
clc
mov
int
pushf
loope
xor
lea
inc
out
lret
adc
sahf
jp
dec
sub
clc
in
out
das
add
fildll
inc
loopne
cwtl
out
push
pop
or
dec
fstpt
cltd
aad
pop
mov
add
cmpsb
pop
or
icebp
push
mov
test
pop
out
mov
sbb
jmp
fdivrp
and
adc
lods
stos
cmpsl
lahf
pop
jns
in
inc
stos
or
jecxz
jbe
or
sbb
int3
es
out
aas
cmpsl
out
mov
or
movsb
movl
cli
jmp
rcr
adc
fs
dec
xlat
jp
inc
lock
pop
scas
sub
push
sub
mov
push
rcrl
cmpb
mov
adc
adc
ret
out
filds
aas
arpl
cmpsl
daa
ds
adc
push
icebp
cmp
push
cmp
and
loopne
jae
push
cmc
lds
outsb
inc
jmp
xchg
dec
lds
cwtl
jmp
stc
call
clc
pop
outsb
fstpt
dec
jae
sub
push
jns
jg
push
lds
jecxz
out
add
call
loop
xor
jmp
fwait
jbe,pn
aad
leave
fcmovu
mov
cmp
xor
data16
nop
dec
mov
cltd
add
jmp
push
pop
iret
sbb
and
out
test
xchg
daa
hlt
pop
mov
add
xor
mov
cmp
out
xchg
pop
adc
pop
lahf
bound
lahf
aam
jg
xchg
fcmovnu
mov
adc
stos
xchg
fistl
push
aaa
and
or
scas
lret
in
repnz
ljmp
cmpsl
pop
and
add
clc
lds
loope
fsts
xor
leave
push
lods
pop
std
insl
pop
push
mov
add
push
pushf
pop
scas
fmulp
sub
bound
lods
inc
adc
imul
cmp
xchg
rcl
ret
aam
xor
rcr
adc
loope
jnp
scas
pop
cs
addr16
div
in
push
mov
push
sbb
stos
loop
cmpsb
jl
scas
mov
enter
lret
loope
out
in
add
ss
lahf
xchg
js
push
bound
jno
mov
stos
sub
mov
ljmp
mov
jl
cli
insb
fldcw
mov
xor
js
push
movsl
xchg
adc
adc
mov
add
out
push
push
outsl
push
movsb
xor
sbb
jmp
iret
ds
insl
cmpsb
imul
fimull
jo
or
ljmp
ret
jo
inc
nop
xchg
xor
sub
push
dec
cs
std
inc
sbb
sbb
test
xlat
jp
sahf
jnp
out
push
loope
xchg
es
fwait
repnz
cmpsl
push
daa
add
mov
sub
subb
jecxz
daa
mov
and
sahf
arpl
repnz
out
inc
mov
mov
add
ret
push
dec
sub
or
adc
adcb
sub
nop
sbb
mov
test
dec
xchg
lods
pop
movsl
andb
je
loope
or
or
mov
jb
test
not
out
sub
das
lods
and
xor
sbb
cmpb
test
push
inc
fidivrl
xchg
sub
inc
fisttps
mov
mov
mov
mov
cltd
aas
cli
popf
out
or
sub
mov
enter
xor
push
mov
outsb
jge
mov
mov
push
daa
loope
stos
push
repz
xlat
adc
pop
popl
mov
push
outsb
cmc
or
mov
xchg
or
subl
jno
jnp
and
adc
add
push
jl
mov
sub
ljmp
or
ljmp
loopne
xor
jmp
enter
adc
xor
mov
stc
and
mov
pop
add
lods
add
dec
je
mov
mov
mul
popa
and
frndint
cld
rclb
ss
into
jb
jp
sbb
jae
push
or
hlt
addr16
xchg
fs
iret
sahf
jl
das
addr16
or
mov
jmp
faddl
dec
lods
dec
inc
mov
mov
sbb
les
sbb
pop
adc
out
addr16
jo
out
fs
std
bound
movsl
jae
dec
outsb
lret
stos
popf
aad
popf
fs
push
sti
popl
insb
fisubs
cli
cmp
pop
fsubrs
test
adc
arpl
add
adc
or
test
cwtl
pop
sarl
or
mul
and
int3
sbb
xchg
xlat
gs
push
outsb
pop
imul
cmp
inc
or
add
sbb
push
adcl
fmuls
xor
negl
jnp
mov
out
hlt
xchg
icebp
dec
stos
push
push
imul
pop
or
mov
and
cwtl
icebp
mov
push
and
out
shl
scas
lods
lcall
cmp
push
mov
add
xor
add
xchg
and
mov
test
inc
test
mov
sbb
aaa
mov
adc
les
jecxz
pop
bound
sahf
outsb
jne
jb
imul
adc
sub
dec
sbb
pop
or
stc
jmp
pop
cld
add
rcrl
or
inc
xor
outsl
xchg
movsl
mov
push
clc
mov
xor
add
fcomps
sub
mov
lock
inc
enter
xchg
sbb
xlat
popf
and
dec
in
jl
pop
aaa
pop
imul
pusha
xor
aad
or
cmp
roll
iret
test
jo
je
cli
aam
into
mov
mov
xchg
cmp
or
loop
adc
in
add
sbb
adc
xor
imul
xlat
mov
push
inc
xchg
fwait
out
sbb
add
mov
pop
pop
dec
xchg
test
pop
adc
subl
push
jge
add
cmp
mov
lahf
xor
push
add
sbb
cmp
out
dec
cmc
push
shll
cmpb
push
mov
cmc
loope
jae
mov
sbb
sub
mov
and
cmc
test
push
mov
mov
std
sbb
xchg
pushf
mov
pop
jmp
adc
push
dec
stc
ret
push
cmpsb
cwtl
subb
sarl
xchg
data16
add
jge
mov
push
jle
push
aaa
jne
xchg
inc
out
lea
adc
ljmp
stos
jb
mov
inc
jae
jp
or
inc
daa
out
mov
xchg
test
ljmp
push
lahf
mov
imul
add
adc
mov
repz
mov
bound
and
mov
add
pop
jg
cmpb
sbb
sbb
mov
xor
cwtl
fisttpll
jno
aam
push
pop
add
into
popa
insl
fs
fisttps
pusha
in
aas
cmpsl
cltd
pop
xchg
dec
mov
jnp,pt
mov
dec
jge
pop
sub
sbb
out
mov
repz
and
mov
inc
dec
cmp
jecxz
pusha
pop
and
add
dec
mov
fsts
pop
xchg
and
outsb
mov
outsl
mov
ja
dec
mov
mov
sbb
cmp
push
outsl
pop
daa
jno
mov
fldenv
imul
data16
imul
lock
les
test
test
adc
jo
xor
lock
lcall
insl
mov
or
movsl
pushfw
aam
fcompl
lea
lret
inc
fidivl
sub
pop
jae
lret
sbb
ja
out
inc
pop
mov
stc
jne
cmp
mov
and
stc
push
push
mov
mov
icebp
pop
xlat
pop
bound
dec
sub
ret
push
xor
loope
mov
movsb
mov
sub
cmpsb
in
jbe
es
repnz
sub
jle
adc
push
mov
jl
repnz
adc
mov
mov
mov
xor
fdivs
je
inc
mov
pop
das
rcl
rolb
cmovp
out
mov
test
dec
mov
push
mov
and
js
repnz
sub
sbb
xor
std
divl
push
loop
mov
cmpsl
rolb
pushf
mov
rcrb
ss
cmc
call
xor
iret
push
add
xor
inc
stc
and
sahf
aad
and
std
mov
jb
orl
repnz
adc
fisttps
pop
fxch
sahf
adc
lret
pusha
scas
gs
sbb
mov
les
push
ja
jno
les
push
lea
or
ss
xor
ss
loopne
imul
or
push
inc
mulb
shrb
mov
outsl
aas
mov
imul
popa
inc
jp
lea
out
sbb
aaa
cmp
and
pop
cmp
mov
rorb
inc
jb
add
pop
push
or
cltd
ja
movsb
cs
jmp
mov
and
lret
adc
push
ja,pt
lret
sahf
push
xorb
inc
imul
adc
shlb
clc
mov
dec
pop
in
jno
ds
inc
pop
lret
cli
call
mov
nop
popa
pop
sub
jbe
and
add
mov
shrb
push
shr
rcll
jl
push
xor
dec
push
xchg
mov
cmpsb
arpl
ret
jmp
push
fimuls
bound
gs
cmpsb
xchg
fwait
enter
in
mov
mov
xor
mov
fsubr
xchg
jmp
or
jmp
mov
lds
or
mov
inc
dec
mov
cmpsl
dec
dec
adcb
inc
lds
fildl
jecxz
outsb
inc
add
sbb
cmp
aaa
jecxz
pop
stc
add
sbb
dec
fnsave
idivl
int3
jmp
insl
push
loopne
daa
xchg
or
imul
sub
imul
mov
int3
jno
nop
add
push
enter
bound
insb
aaa
out
imul
jmp
and
mov
popa
inc
cs
mov
ficompl
notl
adcb
dec
mov
fstpt
fs
cmp
movsb
or
cmpsb
inc
call
push
xchg
cld
jne
jno
shl
sub
jg
mov
sbb
mov
adcb
cmp
sbbl
sbb
scas
pop
or
mov
sub
dec
int3
ja
xchg
or
mov
dec
sub
jns
pop
sub
sbb
jle
cmpsl
jae
fwait
sbbb
sub
pop
in
adc
fs
jl
dec
ret
scas
fsubl
pushf
in
int
cmp
cmp
ds
outsb
xor
movsl
lahf
std
mov
sti
rcr
fcomps
lret
sub
sbb
xlat
mov
sub
arpl
cmp
mov
mov
pop
mov
dec
std
jae
xor
in
push
stc
xchg
mov
add
mov
or
cvtpi2ps
js
int3
pop
mov
pop
aad
sbb
out
int
std
les
xchg
shll
outsb
mov
rcll
aad
ljmp
adc
dec
push
outsb
jns
rorl
dec
jp
push
pop
mov
cmp
cmp
and
mov
mov
clc
sub
inc
sbbl
aam
and
enter
jmp
popa
xchg
jne
and
scas
enter
popa
dec
add
pushf
aad
div
push
xor
dec
les
imul
ret
xchg
jmp
pop
out
xchg
jne
les
out
lret
fwait
xchg
popf
mov
adc
fcmovu
dec
out
hlt
xor
xchg
cmp
sahf
inc
ljmp
test
cmp
xchg
xor
add
sahf
loope
cmpsb
mov
fsubr
lea
fs
cmp
mov
js
cmpsb
pop
das
cwtl
aas
jle
in
pop
mov
mov
lret
outsb
cltd
les
sbb
jbe
mov
add
mov
shll
push
imul
out
sbb
shlb
loopne
subl
test
mov
jno
or
push
loope
add
clc
fisttpll
add
movsl
sbb
cli
push
hlt
add
into
cltd
fisttpl
std
hlt
push
xor
stc
xchg
fwait
test
cmp
in
in
hlt
mov
and
fdivrl
adc
fdivr
gs
mov
popf
scas
in
popa
inc
mov
adcl
cmp
movsl
incb
rcll
repz
lods
ds
push
sti
jp
jo
ljmp
xor
fisttpll
rcl
jo
call
sbb
xor
fldcw
and
mov
push
fisttpll
or
xchg
outsb
pop
sti
cmp
mov
mov
sub
xchg
ret
dec
cld
cmc
xlat
xor
pop
mov
in
jle
dec
jl
sub
clc
xlat
subl
push
sbb
in
inc
sti
sub
mov
jb
xchg
pop
addr16
loopne
mov
and
leave
iret
mov
cmp
push
fistl
sub
mov
pop
stos
and
mov
xchg
sub
sbb
lds
dec
stos
push
sub
pushf
icebp
and
nop
xor
jbe
inc
push
inc
lahf
push
inc
jb
je
dec
push
cmp
aad
outsb
jp
hlt
rclb
jbe
stc
loope
push
aad
ja
outsb
mov
std
out
clc
xchg
jo
ret
add
lret
xchg
push
push
mov
dec
cmpsl
hlt
mov
xor
mov
xor
sub
mov
lret
rol
mov
addr16
icebp
and
sti
movl
mov
pop
addr16
push
adc
xchg
pop
mov
ss
shrl
pusha
mov
roll
or
cmp
xchg
aaa
and
mov
dec
out
push
jg
pop
add
fcomps
dec
inc
cmp
cmp
jb
sbb
pusha
dec
add
mov
inc
ja
cmp
mov
ja
lds
mov
lcall
xchg
leave
aaa
mov
fldenv
out
cmpsl
shrb
pop
xor
inc
mov
icebp
testl
mov
out
loop
loop
mov
push
add
dec
inc
push
inc
rcrl
or
push
dec
cs
fbstp
inc
jo
fdivrs
sarl
add
add
popa
mov
dec
adc
dec
sbb
in
inc
js
clc
test
in
sti
xor
sbb
ror
fstpl
push
jle
in
ss
cld
mov
adc
jo
jbe
dec
adc
inc
pushf
cmp
out
ja
mov
data16
popa
pop
out
insb
ret
cmp
lret
inc
push
ljmp
dec
adc
push
adc
push
cmp
movsb
mov
mov
mov
stos
dec
ljmp
ret
pushf
movzbl
add
movsb
adcl
loopne
lock
cmp
pop
gs
xor
aam
mov
and
cltd
mov
aad
inc
sbb
lods
sbb
lds
and
cmp
inc
daa
jp
cwtl
lcall
rcrl
aas
add
inc
xor
pop
push
mov
mov
inc
jne
rcrl
jno
jle
dec
xor
enter
adc
mov
lret
add
mov
movsb
fadds
push
jmp
sub
ror
repz
mov
gs
xor
nop
adc
cli
add
shll
icebp
nop
rcl
loopne
shll
rcrb
mov
dec
pop
sub
mov
in
cmc
or
in
loope
rolb
cmp
in
mov
push
pop
xchg
mov
addb
mov
mov
mov
adc
jecxz
mov
xchg
pop
insb
xor
mov
and
pusha
mov
jo
cwtl
into
cld
add
lahf
xor
mov
and
xor
sbb
dec
push
jb
adc
xchg
mov
js
daa
lret
mov
jnp
jg
push
mov
cs
outsl
mov
fwait
bound
and
outsb
pop
mov
jle
dec
cmp
loopne
daa
cmpb
sbb
aaa
imul
pushf
cs
imul
insb
dec
adc
push
jmp
cld
out
imul
enter
push
imul
outsl
inc
pusha
hlt
stos
scas
lock
ret
aam
or
cmp
call
cmp
movsb
out
adc
mov
jno
in
pop
ljmp
jo
inc
mov
lret
inc
push
mov
mov
movsb
and
pop
xchg
cmp
and
cli
lret
decl
push
push
lods
xor
shlb
push
das
adc
jmp
jg
outsb
dec
mov
jne
jmp
or
mov
outsl
lahf
and
ja
xor
mov
lahf
in
jl
loope
pushf
stos
cmp
inc
fnstcw
ds
dec
and
add
movsb
cmpsb
out
movb
pushf
movsb
sub
mov
inc
adc
jl
bnd
in
mov
clc
adc
insl
mov
sub
lock
mov
cmp
jmp
jo
mov
jne
and
xchg
mov
cli
push
dec
adc
cmc
cltd
mov
inc
mov
lret
test
sub
popa
xor
rorl
ja
sbb
adc
dec
loop
out
push
dec
adc
adc
pop
andl
jmp
out
outsl
popf
pop
fstps
sarl
stc
cmp
in
xchg
push
lods
repz
pop
cmp
pop
in
or
sti
int3
loope
fdivl
lock
mov
pushf
loope
stos
pushf
imul
scas
loop
pusha
xor
cmpsl
rcrl
gs
aas
ds
stos
pop
es
mov
add
repnz
and
sbb
pop
pop
testb
mov
inc
mov
dec
int3
pop
inc
jmp
jp
jg
rclb
push
inc
enter
stc
clc
cmp
psllq
into
dec
sar
inc
pop
xor
jns
push
xor
repz
sub
dec
sti
popa
sbb
jo
lock
xchg
jne
inc
push
mov
pop
ret
test
insl
dec
pop
das
in
push
out
cmp
shlb
shll
mov
push
adc
jae
aad
ret
rclb
mov
cs
cmp
aaa
mov
pop
mov
stos
mov
loope,pt
fldcw
imul
sub
out
cmp
mov
aas
mov
adc
into
outsl
imul
pop
outsb
loopne
test
inc
sbb
jno
das
sahf
push
mov
adc
add
dec
inc
mov
inc
insb
clc
xor
outsb
enter
cmp
pop
testl
jle
js
test
fisttpll
mov
inc
dec
dec
or
in
lock
outsb
ret
pop
mov
lret
orb
jp
sbb
js
jg
mov
fmull
pop
loopne
pusha
mov
shrb
ficompl
in
mov
cmp
pop
sub
adc
or
clc
jecxz
sub
gs
jns
xchg
cmpsb
in
add
lock
lods
in
dec
stc
push
lds
scas
xor
mov
sbb
or
mov
adc
test
aam
sub
pop
fwait
cmc
jmp
add
shrb
shrb
jle
jnp
jge
jecxz
xor
mov
fwait
sub
adc
lds
or
xor
fsts
mov
arpl
mov
mov
int
insb
mov
sbb
jecxz
and
inc
lea
jno
add
or
cli
add
inc
ds
xor
jne
loopne
out
hlt
jecxz
fucomi
mov
push
mov
test
imul
movsl
loopne
les
push
mov
ret
sahf
inc
mov
add
fldcw
add
sbb
enter
mov
fsubrs
mov
adc
in
xor
rorl
mov
mov
pop
mov
aad
pusha
push
cmp
xchg
mov
in
out
fneni(8087
inc
inc
xchg
push
aam
fwait
pop
push
sub
mov
iret
mov
xor
clc
xchg
sbb
mov
cmp
mov
sarl
push
mov
pop
jge
push
out
loope
cmpsb
mov
icebp
inc
dec
js
lods
mov
sbb
push
mov
mov
jns
dec
mov
clc
sbb
xor
mov
and
sub
cli
add
ljmp
mov
pop
pop
adc
sub
test
pop
arpl
xor
pop
dec
lcall
or
into
insb
fwait
insb
jb
inc
jnp
mov
daa
ja
les
inc
mov
cs
test
das
cmpl
imul
and
in
jl
xor
out
mov
mov
stos
inc
ja
mov
push
test
xchg
jbe
xor
in
shl
and
mov
xchg
sub
xchg
in
in
cld
scas
test
rcrb
shlb
les
push
add
sbb
shr
adcb
mov
rolb
ret
loop
and
adc
and
ficoml
xchg
fbld
insl
les
mov
fisubl
sbb
sbb
sti
cld
mov
push
pop
sbb
add
rorb
dec
add
psllq
cli
inc
push
dec
xor
in
test
in
fidivrl
mov
into
mov
fbstp
sub
jo
mov
pop
pop
pop
addr16
push
aad
lret
push
add
jl
pushf
lret
add
add
add
add
push
inc
addl
xchg
pop
inc
and
loope
mov
out
aad
inc
mov
xor
push
xor
xchg
and
test
sbb
lock
inc
mov
sti
lds
sbb
repz
scas
jg
repz
xlat
xor
lret
mov
ds
jl
js
frstor
pop
push
mov
test
xchg
mov
daa
sbbl
jecxz
mov
stos
sbb
aad
inc
lea
std
jne
andl
int3
cli
mov
lret
daa
cld
adc
add
sti
pop
pop
cli
and
data16
pop
cld
sbb
inc
call
loopne
mov
flds
loop
jl
mov
push
in
pop
ret
shlb
insb
test
fsubs
xor
fmuls
cmp
xor
mov
lds
mov
xchg
sahf
arpl
or
loope
pop
push
sbb
fadds
xchg
out
push
roll
loop
mov
fadd
adcb
or
mov
push
adc
cs
dec
ja
mov
jge
mov
inc
sub
push
mov
fdivr
out
cmc
jecxz
rclb
std
inc
ret
push
adc
ljmp
addr16
adc
dec
frstors
mov
xchg
mov
and
adc
and
adc
pop
push
jae
adc
and
jno
xor
or
nop
dec
adc
pop
xchg
sbb
jb
xor
xchg
xchg
and
xor
data16
sbb
dec
ja
repz
aas
inc
test
cmp
and
push
pop
jne
fadds
fdivs
ja
test
in
adc
loop
lret
imull
jbe
es
mov
outsb
xchg
test
pop
inc
mov
dec
fwait
push
bound
add
mov
xchg
add
push
add
and
std
test
lds
mov
nop
pop
mov
icebp
adc
jae
in
mov
push
out
leave
stos
pop
ret
push
push
sub
lahf
inc
xchg
and
sub
clc
fsubs
dec
aam
sbb
or
mov
mov
in
jno
jnp
cwtl
mov
mov
xlat
rol
scas
xchg
aad
fdivs
sbb
mov
push
add
jns
cmp
data16
adc
pop
inc
jge
jecxz
fnsave
lock
mov
enter
mov
popw
push
stos
in
in
decl
in
sbb
in
das
imul
mov
dec
mov
sahf
cwtl
movaps
push
aaa
enter
and
push
insl
call
inc
and
outsl
cmc
jno
sbbl
lods
adc
imul
aaa
mov
fmuls
clc
jg
cmc
mov
jg
xor
cwtl
leave
push
xor
fwait
notb
pop
push
insb
test
xchg
movsl
ret
mov
out
std
in
or
call
xchg
cmpsl
iret
pushf
ds
push
mov
xchg
cs
imul
pop
dec
stos
sub
sbb
mov
inc
in
les
cmp
imul
xchg
xlat
sub
add
inc
out
pop
or
jbe
pusha
cmp
xor
lret
enter
lods
ss
push
pop
notl
pop
out
or
cs
inc
in
adcl
ds
sbb
mov
repnz
aam
fwait
xor
cmp
add
outsl
cs
jne
cmp
fidivrs
and
cmpsl
mov
out
hlt
xchg
sub
xorb
scas
aaa
pop
call
jb
mov
cltd
adc
jle
xchg
cld
mov
repz
mov
xchg
xchg
mov
sub
in
add
ret
mov
or
sub
mov
xchg
cs
rcrb
push
mov
push
jg
jne
and
scas
imul
and
sbb
out
mov
push
paddq
int3
jae
lds
pushf
sub
clc
in
sar
ret
pop
js
sub
xor
push
push
jle
insl
ss
orb
adc
inc
jmp
test
mov
int
sbb
mov
int3
sbb
mov
and
mov
cmp
sub
xchg
add
add
into
or
jge
lret
enter
insl
out
outsl
mov
cmpsb
repz
ds
push
sub
mov
and
sti
pop
add
push
or
mov
les
xor
cmp
or
aad
sbb
into
inc
loope
in
add
mov
push
lods
push
or
lock
inc
cmp
dec
js
jecxz
outsb
cmpsl
pop
mov
jne
sub
daa
aad
cwtl
daa
lods
nop
add
lods
dec
jnp
sbb
and
std
ds
push
aaa
jae
and
fwait
xchg
enter
mov
lods
aaa
or
fstps
outsb
and
adc
notl
mov
daa
pop
lahf
es
xor
mov
jo
adc
rolb
mov
in
sbb
inc
loop
jb
mov
push
add
mov
test
pop
gs
nop
and
clc
das
test
aam
cmpl
push
and
int3
jo
fwait
incb
movsl
push
gs
icebp
sub
loope
adcb
data16
pushf
roll
cmc
pop
push
mov
push
xor
adcb
mov
pusha
cmp
popa
lret
jne
push
xchg
cld
dec
popa
repnz
push
in
xchg
jecxz
lds
ja
sar
jmp
push
shlb
xor
mov
js
adc
mov
or
mov
repz
ss
jo
in
in
jae
mov
cmc
push
push
mov
in
cmp
push
mov
push
repz
clts
pop
pop
adcl
add
gs
test
add
dec
enter
outsl
ficomps
add
sbb
jp
sub
test
mov
les
pushf
enter
jo
mov
test
add
xchg
xor
ret
pop
rcr
xor
add
into
mov
call
dec
pop
dec
dec
dec
mov
outsb
fwait
push
cmp
cmpsb
aaa
or
mov
xchg
mov
dec
cmp
pop
sbb
and
inc
cmp
mov
cmpsl
mov
mul
xchg
push
dec
js
inc
jo
nop
ljmp
in
insl
jmp
cmp
sbb
adc
jp
lea
xchg
cltd
lahf
cmp
and
cmp
fnsave
mov
mov
mov
sbb
mov
mov
adc
call
fsubrs
mov
xchg
mov
jnp
pop
push
rorl
mov
sub
pop
lret
pop
int
stc
pop
pop
push
test
pop
ficomps
jno
shlb
loopne
jmp
inc
cmp
mov
es
adc
sbb
mov
pop
clc
or
add
adc
push
xor
into
ja
lods
iret
mov
cmp
add
jae
pop
imul
pop
jne
lret
imul
dec
push
cwtl
cld
loop
xlat
sbb
dec
aad
imul
add
mov
out
subb
insl
testb
idivl
test
mov
jae
jne
sbb
mov
or
sub
cmpsb
adc
jge
out
mov
into
and
lahf
aam
frstor
or
popf
mov
scas
xlat
pop
je
and
mov
xor
push
mov
movsl
xchg
push
ret
xchg
push
inc
sarl
insb
scas
mov
and
push
popa
xor
and
dec
mov
in
icebp
cmp
mov
or
aaa
shll
je
test
mov
xchg
mov
cs
test
loop
xorl
fidivl
lock
dec
sbb
fisubl
inc
push
adc
cmp
test
jne
cs
push
leave
pop
lea
xchg
aaa
repz
loop
push
pop
inc
mov
xchg
aaa
cmc
mov
xor
dec
jno
add
int3
addr16
cwtl
dec
mov
mov
push
outsb
mov
out
xlat
out
lods
push
mov
ret
adc
mov
xchg
hlt
popf
cmp
lcall
xchg
add
pop
sbb
mov
mov
fs
xor
js
clc
cwtl
incb
hlt
stos
rcrl
add
xchg
outsb
mov
popf
data16
jmp
mov
cmp
arpl
hlt
adc
aaa
jle
jne
movsl
pop
mov
cmpsb
int
pop
sahf
into
inc
xchg
dec
xchg
aad
lret
jp
adc
xchg
fs
sbb
adc
scas
jns
sbb
les
cmp
lods
pop
arpl
test
mov
pop
dec
sarb
dec
mov
mov
push
lret
jno
aam
jnp
dec
or
adc
and
xchg
cli
add
sub
cltd
xchg
repnz
jo
jmp
hlt
push
jae
sub
pop
add
mov
sbb
repnz
std
pop
xchg
mov
in
leave
stos
add
sub
jae
lret
lods
imul
notb
pop
mov
stos
sarl
and
or
push
cld
adc
pop
mov
mov
and
jne
cmp
jmp
or
sub
in
aaa
adc
push
movsl
insl
sti
int3
int
mov
das
xchg
inc
popf
jge
push
es
push
sbb
lods
adc
cli
mov
xchg
or
jbe
out
or
push
xor
jmp
mov
pop
jbe
int3
xor
pusha
mull
clc
bswap
fwait
test
adc
insb
in
addl
xchg
fistps
dec
xchg
mov
aam
or
push
shlb
lods
inc
push
movq
in
jecxz
cmp
inc
mov
iret
or
cltd
into
imul
fbld
inc
jb
in
sbb
sub
pushf
mov
mov
loope
mov
in
arpl
fstpl
jmp
lcall
push
das
xor
adc
add
fs
std
cmp
adc
stos
idivb
pop
das
jnp
mov
hlt
jecxz
sbb
stos
out
and
push
xchg
and
lret
xor
dec
pop
sbb
inc
es
dec
xchg
xorb
nop
push
cmp
imul
push
sub
cmp
in
fwait
cmc
push
rol
add
or
out
sbb
push
test
push
rcl
rclb
bound
adc
xor
ds
lods
popa
lods
xlat
mov
sub
addl
sub
stos
xchg
das
aad
stos
jecxz
lcall
jne
aam
insb
dec
dec
mov
jge
aaa
and
inc
aaa
ud0
ja
cs
aad
bnd
sbb
xor
sarb
push
mov
ret
dec
inc
jp
pop
daa
dec
scas
outsl
fucomip
mov
enter
fstp
inc
push
add
xchg
pavgb
mov
call
fmuls
adc
adcl
loop
scas
mov
mov
iret
aam
and
les
lcall
fiadds
fstpl
push
mov
pop
or
jae
into
xlat
inc
xchg
pop
or
adc
je
out
enter
imul
mov
sbb
test
aas
fisubs
clc
bound
out
aam
sub
sbb
pop
mov
dec
push
in
and
mov
aas
xchg
test
lods
aad
mov
xchg
cld
lds
sub
outsb
xchg
or
cmp
cmp
cld
pop
push
dec
lcall
pop
xor
dec
adc
add
sub
or
mov
nop
mov
xchg
push
je
mov
fistl
incb
rorl
sub
jne
mov
sub
scas
adc
sub
mov
jg
fldt
jb
xchg
adc
push
int
stc
fmull
mov
ja
ds
push
lock
or
mov
lret
loop
fcmovne
in
and
fstpt
sahf
leave
call
dec
lods
imul
leave
inc
outsl
out
gs
ss
movsl
pusha
mov
test
cmp
fs
jo
in
push
jae
iret
mov
fisubrs
cwtl
jecxz
incb
cmpsl
pop
ret
das
test
jge
mov
mov
ficompl
out
loopne
imul
lcall
out
stos
or
cmpsl
repz
popf
jp
sti
scas
xchg
jae,pt
jmp
mov
adc
pop
sub
loope
xchg
push
xor
int3
mov
inc
mov
inc
sbb
leave
pop
bound
mov
rcll
push
iret
inc
es
out
cmp
lret
test
push
test
fisttps
repz
mov
loopne
cli
mov
enter
jae
adcb
imul
mov
lds
imull
stos
pop
test
xchg
add
in
add
out
sbb
cltd
sub
and
loope
shll
pop
push
pop
xor
mov
int
adc
mov
lea
pop
iret
into
scas
cwtl
lods
frstor
sub
cmpsl
lea
test
lret
push
gs
mov
in
pop
sbb
insb
sub
fldt
xchg
and
shrl
xchg
push
frstor
push
xchg
push
push
push
sbb
aas
rcrb
sarb
aaa
orb
clc
or
cmp
jns
fmull
xchg
xorl
outsb
aam
xchg
push
jo
call
mov
test
adc
push
iret
out
xor
andb
pop
push
sar
push
lcall
xchg
std
cli
and
rcrl
enter
call
mov
mov
pop
cs
inc
push
push
mov
scas
mov
xchg
sbb
inc
pop
rcrb
das
fcmovb
dec
dec
push
mov
and
inc
cmp
bound
ljmp
xchg
divl
inc
pushf
test
cmp
mov
mov
pop
cmp
and
enter
std
cs
mov
mov
imul
aad
sbbl
rcl
int3
and
push
cld
xchg
mov
test
adc
int
imulb
dec
and
addb
ret
xchg
lods
push
inc
pushf
cmp
pushf
es
add
popa
jo
popa
rcrl
dec
setg
lods
ljmp
mov
in
push
xor
cli
daa
xchg
std
das
sbb
das
out
mov
lods
pop
in
int
xlat
pop
or
jl
mov
mov
fincstp
xchg
sub
xor
sbbb
leave
inc
ss
sub
xor
ds
or
add
jl
gs
roll
icebp
loopne
ret
xor
pop
xorl
aas
mov
adc
jo
lret
cwtl
pushf
cmp
sub
movsb
lods
sbb
out
sbb
rcll
cmp
add
inc
mov
dec
xor
fwait
icebp
xchg
sbb
mov
add
cmpsb
inc
mov
adc
mov
mov
cmpsb
cmp
pop
popf
mov
pop
and
repz
jp
mov
inc
inc
test
mov
popf
outsl
scas
movsb
ds
xchg
xchg
std
out
popf
ss
dec
daa
mov
cs
lods
in
test
dec
jge
fcomp
dec
add
xchg
ss
mov
insb
ss
cmp
pop
test
xchg
mov
mov
xor
mov
lea
mov
insb
mov
jl
jo
jae
pushf
sbb
cmp
xchg
pop
hlt
rcrl
mov
out
sub
push
mov
outsl
popa
or
mov
dec
loop
out
stos
into
aad
and
stos
jno
pop
stc
ljmp
add
dec
fiaddl
push
dec
daa
xchg
or
pop
mov
dec
or
negl
jg
pop
jecxz
sti
push
ficomps
movsb
push
pusha
loope
sbb
mov
inc
mov
or
rolb
cmp
lret
dec
aad
or
mov
and
aaa
mov
mov
mov
adc
inc
sbb
fs
xor
jle
mov
cwtl
push
xchg
mov
or
or
jae
outsb
out
popa
test
mov
xchg
push
mov
mov
divl
es
add
insl
push
sbb
lock
cmp
aam
xchg
mov
daa
jnp
loop
sbb
jnp
sub
in
push
pop
pop
dec
es
mov
jns
push
inc
inc
adc
or
aad
gs
sbb
mov
call
iret
lea
iret
es
ror
sarl
pop
pop
push
roll
and
cld
pop
or
cmp
jl
mov
xchg
and
cmp
jbe
frstor
xor
pop
dec
cmp
pop
cmp
or
inc
adc
pop
xor
or
dec
in
jbe
gs
jae
pop
mov
jno
sbb
adcb
inc
mov
xor
test
bound
xor
shlb
in
enter
lret
mov
inc
test
jg
jge
cltd
lds
push
shr
or
adc
cmp
cmp
aad
pop
outsl
cld
mov
int
notl
int
or
pop
stos
jno
push
mov
dec
aam
cmp
rcll
dec
push
ficoml
popa
loopne
in
into
popf
daa
int
xchg
xor
adc
int
xor
xor
sub
jecxz
xlat
addl
std
call
or
sbb
cmp
and
add
pop
lea
mov
pop
jmp
mov
sbb
jne
and
pusha
into
sbb
push
xor
jmp
jg
popf
shll
aas
pop
lods
mov
jno
rcll
fstpt
in
pop
xchg
adc
in
mov
arpl
call
jae
sarl
push
cli
lahf
dec
dec
inc
fnstcw
in
adc
ja
mov
pop
sbb
ficoml
or
adc
outsl
jl
cmp
out
pop
lcall
mov
jp
je
cmp
cmp
add
mov
cmpsl
repnz
aam
xchg
jle
scas
inc
aam
adc
test
or
inc
adc
test
js
cwtl
mov
rorb
pop
lods
push
mov
pusha
jecxz
pop
rclb
push
bound
sti
outsl
or
pushf
mov
adc
data16
pop
sbb
sub
test
dec
mov
dec
ret
xor
lods
ja
cs
sbb
ss
sti
or
mov
cmpsb
cmp
stc
or
lcall
push
lock
imul
cltd
jb
adcl
xchg
sti
pop
sbb
lea
out
enter
push
movsl
int3
enter
imul
js
clc
scas
int
xchg
adc
sub
mov
sub
mov
mov
mov
mov
ss
adc
and
rorl
lods
push
push
popf
dec
iret
scas
test
icebp
fsubs
and
jp
adc
xor
xor
inc
xchg
std
test
inc
fstpt
xlat
fmuls
in
movsl
push
mov
or
popa
mov
push
xor
mov
nop
scas
or
addl
orb
ret
popa
and
enter
ret
xor
lock
imul
scas
or
cmc
lock
fdivr
adc
cmpsl
lret
test
sub
movsb
xchg
adc
jnp
js
dec
fs
jge
adc
mov
and
xchg
sub
enter
sub
ret
push
leave
sbb
imul
repz
lcall
xor
inc
incl
mov
movsb
insb
push
mov
mov
jb
pop
mov
repz
fsubr
ret
fldl
xlat
mov
adc
in
jl
out
fnsave
cmc
test
ret
xchg
test
cmp
or
les
out
inc
and
insb
xchg
mov
dec
scas
mov
in
mov
mov
jecxz
xchg
movsl
dec
in
mov
cltd
fcoms
out
push
in
fstpt
inc
arpl
ret
pop
imul
jmp
sbb
xchg
dec
repnz
fwait
subl
shlb
es
stos
xor
les
adc
rcr
mov
dec
subb
test
out
xchg
lods
cmp
iret
scas
rcr
ss
push
push
cld
and
leave
fcomip
inc
ds
test
and
push
repnz
leave
fwait
loope
cmp
push
jmp
sbbb
jae
ds
enter
repz
dec
push
and
mov
pop
test
addr16
jno
adc
sbb
mov
sbb
jmp
mov
push
adc
repnz
xchg
adcl
adc
cmp
std
xchg
push
std
sbb
pop
ret
jp
iret
push
pop
push
xor
bound
adc
inc
adc
cmp
cld
xor
cmpsl
ret
cmp
push
dec
push
out
ret
fs
xor
insl
jg
jecxz
cmp
jg
lahf
and
add
daa
xchg
insl
int3
adc
sbb
enter
pushl
inc
sbb
hlt
cmpsb
ret
xor
pop
std
dec
xchg
pop
mov
jle
js
int
xchg
jg
dec
xor
pushf
sub
movsl
je
dec
lods
inc
pushf
adc
stc
jge
mov
bound
jle
jno
cmc
repz
xchg
into
sbb
cmp
outsl
mov
stos
popa
jle
nop
scas
push
adc
andl
jnp
pop
cmpsb
cwtl
cltd
mov
lods
add
xchg
dec
push
push
lods
fwait
lcall
daa
cli
mov
jno
xchg
movsl
das
hlt
les
movsl
pop
xchg
pop
iret
jo
jmp
sbb
popf
or
out
xchg
push
ljmp
out
das
jns
andb
enter
cwtl
sbb
out
in
addr16
outsb
movsl
movsl
lods
push
push
jg
cli
dec
cmp
lret
into
jmp
fldcw
lods
mov
inc
sub
add
push
mov
out
or
dec
cmpsb
fistps
mov
mov
inc
push
or
outsl
aad
ds
jge
adc
mov
or
cmp
adc
push
inc
mov
jecxz
jge
inc
bound
push
enter
pop
pop
cwtl
js
jb
pop
cmp
gs
cmp
pop
add
adc
les
mov
in
mov
sahf
enter
sbb
jle
mov
call
inc
bound
pop
dec
xor
sbb
aad
push
hlt
popa
add
add
inc
lret
mov
aas
repz
hlt
pop
in
mov
popf
mov
adc
xlat
flds
adcb
xchg
out
nop
or
or
adc
push
ljmp
cmp
push
push
xchg
shr
add
cld
pusha
cmp
js
je,pn
ret
aam
out
add
mov
into
ja
testl
fnstenv
xchg
aam
and
cld
ds
mov
aas
aad
aad
out
dec
in
int3
divb
cmpsl
sub
dec
je
xchg
faddl
add
arpl
mov
or
pushf
fmul
sbb
cli
lcall
insl
sub
sahf
add
mov
xor
stos
mov
push
dec
rol
push
and
xor
mov
test
shlb
mov
jne
or
xchg
xchg
insl
adc
jecxz
jb
js
nop
mov
and
shl
dec
mov
test
jno
jg
cs
aas
dec
insl
add
mov
push
pop
dec
dec
sbb
pushf
adc
mov
push
jns
dec
stos
or
mov
add
addr16
int3
inc
sbb
fimuls
or
cli
xor
arpl
bnd
adc
js
cs
inc
aas
jecxz
nop
push
mov
xchg
cli
pop
push
pop
dec
mov
mov
cmc
push
insl
push
popf
aas
movsw
pop
in
mov
push
sbb
and
pop
xchg
or
fistpl
out
ss
scas
das
shll
adc
xor
test
xchg
pop
dec
mov
pop
mov
push
call
loopne
mov
or
xor
cmp
xor
mov
gs
push
and
popa
pop
insl
aaa
lods
incb
xor
xor
push
imul
pop
push
mov
and
ljmp
cmpb
adc
test
out
mov
lods
cltd
push
arpl
sub
xchg
stos
mov
sbb
jl
jnp
sti
dec
or
arpl
ja
stc
fmuls
ret
clc
fdivs
shll
mov
xchg
mov
mov
ja
rep
dec
popfw
jl
nop
arpl
dec
sahf
ret
inc
add
xorl
pop
lcall
addr16
and
sahf
gs
cs
or
jo
cmc
adc
sub
cmp
or
jb
lahf
cmc
add
int
fcompl
xchg
sbb
xchg
notb
or
fcoms
test
lods
sahf
pop
lds
jp
fs
mov
pcmpeqb
mov
mov
inc
xlat
cmp
add
icebp
or
xchg
out
push
daa
mov
sbb
mov
pop
lahf
inc
jg
push
dec
sub
lret
shrb
out
lods
test
mov
adc
sbb
pop
iret
sub
and
sbb
add
xchg
xchg
loopne
addr16
jge
dec
aam
pop
jge
jle
xor
lea
cs
mov
insl
stc
iret
sti
sub
clc
outsb
cmp
fiaddl
iret
outsl
mov
inc
mov
mov
cmpsl
in
add
and
or
cmp
jns
js
mov
dec
shrl
sbb
lods
and
scas
inc
mov
insb
fcomps
add
imul
jno
mov
lret
cs
ss
jmp
test
push
jg
pop
or
push
jl
push
lret
sbb
mov
dec
ret
add
fwait
int3
or
aam
in
idiv
cwtl
test
test
inc
enter
ja
lods
jns
or
xchg
jmp
daa
mov
aad
imul
mov
mov
xor
bound
inc
mov
xor
cld
xchg
sbb
js
lret
xchg
push
pop
push
repz
or
mov
xor
mov
es
lcall
xlat
scas
pop
cld
mov
dec
shr
inc
fadds
xchg
stos
xor
cmpsl
nop
xchg
insb
add
mov
and
cmp
leave
stc
inc
mov
sbb
mov
xor
sbb
inc
jbe
loop
pushw
jecxz
push
adc
mov
adc
fisttpl
fldt
into
xchg
shll
divl
pop
ss
sbb
scas
in
mov
lods
fsubr
lret
mov
fistl
cwtl
dec
int3
cmp
push
cli
mov
xchg
cmp
ror
lds
jge
das
fildll
cmp
or
jb
push
push
cmp
movb
pushf
cmpsl
mov
das
gs
and
in
ljmp
stos
pop
jno
and
jns
test
scas
sbb
push
adc
adc
outsl
jb
adc
or
daa
and
ficompl
lcall
sub
or
testl
ljmp
push
cli
pushf
pop
mov
mov
imul
jb
shl
sahf
out
test
aas
xor
inc
stos
dec
jl
mov
sahf
clc
mov
cli
insl
in
jp
pop
or
push
push
dec
rcr
inc
pop
int3
inc
mov
cli
in
sub
add
push
mov
xchg
enter
xchg
fcomps
in
out
rorl
or
mov
mov
and
xchg
iret
mov
inc
mov
cmc
lock
xchg
jmp
testb
dec
pop
scas
mov
mov
pop
inc
nop
repnz
sahf
lea
outsl
arpl
cltd
jno
cmpsb
mov
pop
jno
insl
test
inc
cmp
mov
pusha
or
mov
ja
shll
xchg
push
stos
ja
adc
pop
in
pop
push
sbb
xor
test
js
push
daa
in
mov
cld
push
push
in
dec
enter
pop
mov
mov
cmpsl
daa
mov
xchg
imul
dec
jno
nop
or
and
divl
push
mov
adc
fs
jo
mov
pop
cld
in
sbb
xor
repnz
addr16
setno
int3
mov
enter
sbb
jle
in
ds
pop
loope
push
jo
mov
add
sbb
pop
push
mov
xchg
mov
mov
xchg
in
flds
xchg
adc
stc
repz
andb
dec
das
jmp
arpl
rclb
and
aad
and
pop
aam
pop
jg
add
hlt
jecxz
pop
mov
mov
xchg
or
lcall
test
xor
mov
jae
push
pop
push
push
inc
adc
mov
mov
test
ret
stos
and
adc
pusha
je
loop
mov
add
scas
clc
test
sti
decb
mov
in
push
mov
fisubrl
xor
out
push
sbb
sbb
adc
mov
or
push
mov
sub
aaa
cs
push
sbb
fidivrl
jno
stos
inc
or
lea
cmpl
sbb
lds
cmp
push
mov
gs
aas
imulb
stos
ror
inc
jbe
loop
aaa
scas
xor
call
loop
or
adc
scas
clts
inc
add
add
push
pop
mov
sbb
cmp
xchg
pop
cmpsb
inc
hlt
xor
sbb
sti
js
into
mov
xor
in
sub
mov
pop
das
fadds
scas
pop
arpl
sti
sub
test
or
insb
jns
inc
jno
xor
mov
sarl
cli
inc
push
jae
inc
dec
xlat
pop
shll
dec
mov
fisttps
xchg
push
xchg
mov
lods
test
es
in
sti
cmpsl
sub
je
stc
jmp
sahf
pusha
fcoms
pop
jmp
data16
mov
dec
leave
ja
mov
jmp
and
aas
or
ljmp
das
ret
lds
sub
lret
aas
rclb
adc
mov
lds
jae
daa
loop
xchg
pop
pop
fwait
xchg
sbb
repz
and
les
and
outsl
loopne
lods
pop
rcrb
xchg
mov
mov
mov
xchg
sub
mov
or
cli
mov
cmpsb
pop
cmp
sbb
sbb
dec
js
cwtl
inc
mov
notl
sub
mov
inc
or
push
cmpsb
frstor
add
xchg
lods
mov
cli
test
mov
lods
lcall
sti
mov
cmp
sub
xor
and
sarb
mov
sbb
fwait
inc
inc
mov
adc
xlat
in
jno
add
loop
fidivs
sbb
mov
cmp
lret
push
dec
or
fsub
lds
xchg
clc
xchg
je
xchg
pop
cwtl
mov
jae
mov
push
xor
in
incb
lods
popa
shlb
xor
arpl
seto
int
or
lock
push
ds
dec
in
fs
int3
pop
inc
adcl
jae
mov
shll
fs
mov
pop
outsb
jecxz
push
push
and
pushf
scas
inc
sub
mov
push
aam
mov
imul
imul
outsb
cmp
sbb
loop
push
shl
test
sahf
cmp
jecxz
popa
test
int3
mov
xor
mov
xor
and
call
add
movsb
hlt
jle
int3
hlt
and
xchg
or
stos
jnp
data16
or
pcmpgtw
out
dec
test
in
std
mov
xchg
or
mov
jmp
fs
and
push
stc
sbb
sub
test
xchg
les
pop
call
btc
lea
mov
adc
outsb
adc
mov
push
xchg
pushf
divl
sbb
cmp
aad
and
and
inc
push
fwait
pop
inc
dec
sub
sub
popf
jecxz
sbb
or
and
int3
cwtl
aaa
cmc
xchg
pop
xchg
add
ja
xorb
int
mov
push
lods
and
pop
ds
les
push
cli
cltd
in
or
inc
jge
adc
loop
push
mov
xchg
test
sbb
push
std
repz
popa
stos
sub
dec
and
lcall
aad
mov
lret
mov
mov
loopne
inc
add
mov
add
cmp
in
jnp
or
popf
jno
cmpsb
test
ret
fldcw
fcmovu
pop
push
ficoml
mov
mov
or
xchg
je
popf
xchg
das
jl
repnz
xchg
and
lods
ret
add
pusha
jbe
mov
mov
push
add
pop
std
mov
push
pusha
or
pop
je
movb
orb
sahf
int3
xor
mov
inc
enter
js
xchg
stos
cmp
js
in
pop
and
movsl
sbb
es
fisttpll
xchg
movsl
cs
xor
imul
or
sbbb
push
movsl
add
or
dec
shrb
xchg
scas
test
in
xor
cwtl
push
out
fimuls
pop
mov
pop
add
xchg
sbb
mov
mov
dec
pop
imulb
mov
add
ds
vmwrite
sar
call
movsb
xchg
fldcw
sub
mov
fcmove
push
sbb
lock
out
loopne
dec
lds
cmp
sbb
mov
xchg
sbb
xchg
cmpsb
push
dec
js
mov
lahf
sbb
jbe
mov
iret
add
cmc
test
sub
loopne
and
insl
push
inc
push
sbb
ret
cmc
clc
ror
loopne
mov
push
inc
fiadds
push
mov
shlb
jg
xchg
adc
cwtl
imul
mov
lret
cmp
aaa
xchg
inc
and
arpl
loope
add
rolb
push
cmp
adc
lods
icebp
sbb
popf
sub
jne
inc
jo
adc
push
test
insb
dec
fs
push
incl
ret
pushf
fisubl
and
aam
scas
mov
movsb
mov
adc
stos
aaa
cmp
loope
xor
push
outsl
dec
push
aad
add
sahf
stos
dec
cli
mov
push
push
test
lods
sub
xor
popl
scas
lds
sti
pop
fmuls
imul
add
xor
push
and
mov
dec
vpavgb
mov
lods
mov
imul
movsb
stos
or
sbb
add
add
inc
mov
scas
sub
insl
jne
xor
dec
into
test
and
arpl
sbb
mov
push
ljmp
int3
popf
clc
sti
xor
lods
int3
fwait
mov
jns
out
adc
mov
mov
and
adc
push
das
push
bound
xchg
mov
out
repnz
clc
cs
add
sbb
mov
into
addr16
pop
insl
dec
into
push
jns
out
dec
xor
lods
icebp
rcrl
mov
dec
jbe
std
or
movsl
xor
xorl
push
pusha
sbb
test
dec
jge
mov
hlt
push
pop
jle
dec
dec
sub
inc
or
push
cmp
pop
push
leave
mov
xchg
fs
in
lret
mov
or
and
mov
aaa
mov
loope
les
jl
fadd
hlt
hlt
or
jp
push
or
int
mov
xchg
xor
mov
mov
xchg
mov
cmp
jge
addr16
sub
pop
and
ja
mov
pop
mov
cli
sub
fdivrl
dec
shlb
in
popf
or
push
cli
mov
pop
call
bound
scas
jge
sbbb
jg
mov
inc
leave
and
mov
xchg
jo
es
lods
xor
fucomi
mov
jo
daa
insl
test
mov
les
in
mov
adc
mov
in
mov
jo
lret
cwtl
ss
lea
popf
pop
inc
cmp
jno
imul
push
inc
les
jne
xchg
jne
inc
or
test
jnp
add
or
cmpsl
icebp
inc
arpl
pop
push
fisubrs
out
mov
ja
lahf
ret
scas
dec
sbb
adcb
adc
push
pop
icebp
in
loopne
cmc
sub
sbb
lea
and
rolb
mov
cmp
pop
inc
adc
dec
imul
fcomps
xlat
mov
jb
dec
sub
mov
cmp
dec
sarl
jg
push
mov
loopne
mov
pusha
or
mov
lea
or
jg
cmpsl
add
shlb
call
and
push
sbb
or
stos
mov
dec
mov
loop
cmpb
dec
push
adc
clc
jbe
push
addr16
pop
aam
cmp
subl
xchg
mov
ljmp
mov
mov
and
jle
pop
rcrb
dec
cmp
mov
rcll
in
nop
pop
and
mov
aas
bound
out
pop
int3
mov
pop
lods
adc
or
push
mov
and
sbb
lcall
sub
cmc
ja
mov
xchg
jno
or
add
jmp
shrb
fmuls
int
pop
mov
ror
out
imul
mov
shl
mov
and
repnz
inc
push
cli
mov
pusha
pusha
cmp
pusha
and
pop
mov
xor
add
fcmovnu
push
xchg
cs
xor
dec
adc
xchg
cmc
adc
repz
inc
push
dec
inc
and
push
int
push
sar
sti
mov
xchg
sbb
jg
xchg
mov
es
mov
divl
leave
aad
jnp
fdivl
xor
push
in
xorb
dec
xorb
push
inc
in
fldl
sub
add
into
sub
imul
out
and
cmp
jecxz
jne
or
fwait
std
iret
and
mov
imul
repz
stos
ret
jecxz
or
xchg
cmp
gs
fsub
aaa
xor
jp
sbb
pop
cltd
jle
insl
sub
fstpl
mov
push
adc
je
jg
pop
push
enter
push
les
in
int
adc
data16
pop
adc
roll
jne
ja
pop
lahf
or
lcall
cmp
das
cwtl
or
push
cmp
push
into
ret
dec
adc
xchg
outsl
xchg
and
arpl
pop
adc
push
or
xlat
mov
add
cmp
call
hlt
fisubrl
rcl
test
ja
ss
loop
jo
xchg
inc
sahf
cltd
test
jecxz
in
divb
mov
orl
jb
lds
xor
cmp
inc
inc
movsb
setge
sbb
cmpsl
adc
jnp
mov
sahf
lods
cs
pop
lahf
push
mov
dec
aaa
jbe
dec
fwait
mov
rep
fidivl
cmp
loopne
and
les
pop
inc
fisubl
mov
out
rolb
mov
jle
outsl
ljmp
lock
ss
imul
ret
and
ja
addr16
in
js
and
pusha
js
adc
pop
filds
mov
mov
xchg
testl
movsb
push
rorb
push
aad
adc
ds
pop
or
adc
push
mov
mov
enter
jmp
shrl
cmc
cmp
dec
iret
mov
mov
scas
push
sti
sub
sbb
pusha
fdivrs
add
insl
aas
add
test
cmpsb
jmp
cmp
cmp
subb
xchg
add
push
ljmpw
push
fdiv
aad
stos
icebp
dec
or
loope
lock
add
aad
in
pop
mov
cld
adc
stos
xor
jl
es
dec
sbb
pop
cli
out
mov
xchg
nop
mov
pop
xor
pop
mov
jmp
shlb
hlt
ret
lods
fdivl
lods
into
dec
dec
lods
lcall
dec
mov
test
inc
jmp
int3
movsl
and
test
push
cmp
xchg
jne
out
fsub
insb
inc
cmp
lods
mul
pop
xchg
outsl
jmp
adc
ds
dec
push
mov
or
addb
or
fidivs
pop
adc
push
inc
lods
mov
pop
repz
das
shrb
mov
push
incb
inc
aaa
xchg
aas
add
call
xchg
lret
xchg
adc
jp
cli
pop
jns
push
sbbl
int3
adc
cmc
cmpsb
sub
xor
dec
enter
repnz
fs
mov
inc
imul
mov
int
imul
das
xchg
mov
jl
pushf
cmp
adc
and
cmp
and
push
pop
out
sbb
js
push
das
or
mov
lret
and
inc
or
fisubrl
mov
dec
dec
and
fistl
movsl
jecxz
mov
jle
popf
es
xor
inc
cwtl
sbb
ljmp
jae
or
push
cwtl
add
pushf
pop
push
xchg
fldt
mov
andl
lea
add
mov
pop
shrb
and
add
lahf
fnsave
push
sbb
dec
std
or
xor
mov
iret
add
xor
xchg
xchg
imul
dec
mov
add
jne
inc
push
jae
lcall
cmpsb
std
nop
mov
inc
xlat
movsb
fnstsw
dec
and
xlat
jns
in
movsl
andb
fs
mov
push
or
sbb
shrb
or
popa
push
mov
lret
movsb
out
add
lret
add
rcr
adc
xchg
xchg
test
sub
inc
sub
jne
lahf
test
imul
aam
sar
inc
out
js
xchg
xchg
dec
mov
fidivrs
cmp
mov
mov
lret
fs
dec
jo
aad
push
inc
lods
cmp
mov
inc
stos
xor
and
or
cmp
cmp
add
shlb
push
cmp
fsts
mov
sub
xchg
pop
out
inc
decl
mov
dec
pop
sbb
test
jae
pop
lods
gs
enter
loopne
mov
push
fistps
cmp
mov
mov
mov
or
mov
outsb
popf
sbb
loopne
fmul
push
sub
push
divb
fs
aaa
mov
pop
sti
pop
mov
add
jno
pop
lret
jge
sbb
fs
ljmp
shl
aas
call
mov
movsl
or
push
lods
lods
sar
das
mov
xchg
sbb
adc
sbb
mov
scas
int3
lock
push
repnz
pop
repz
pop
jns
push
mov
icebp
test
lods
insb
inc
cmp
jnp
or
inc
jo
sub
mov
xor
mov
gs
pop
mov
ljmp
adc
movsb
mov
sub
movsl
sub
pop
sbb
inc
pop
lock
pop
js
adc
and
mov
popf
movsb
xchg
adc
jp
push
fs
or
mov
in
ret
or
test
mov
cmpb
mov
mov
in
rcr
out
test
das
int
rcr
repnz
loope
sub
sbb
arpl
jle
insb
mov
aad
xchg
leave
dec
mov
imul
in
inc
pop
add
clc
mov
fucomi
sbb
pop
gs
mov
jae
or
xchg
pop
cmp
movsl
sbb
popf
mov
es
cmp
sub
mov
lret
add
popa
xchg
dec
adc
and
cmp
sbbl
dec
movl
and
dec
add
and
mov
sti
jbe
mov
lahf
in
mov
mov
dec
lret
gs
lret
add
xchg
push
rcr
loopne
das
aam
daa
shlb
push
or
mov
cmp
int3
inc
mov
push
pop
fdivr
cld
stos
std
and
mov
pop
push
pop
in
push
pop
cmp
jge
js
and
aaa
call
lret
cmpsl
pusha
fs
jnp
repnz
lret
sub
xor
pop
mov
adc
push
imulb
sar
inc
adc
nop
add
adc
adc
data16
ud1
lahf
pusha
loop
call
fiadds
xchg
dec
push
movsl
sub
lret
dec
and
ljmp
sub
psubb
arpl
xchg
out
pop
sti
dec
push
fildl
xchg
into
mov
push
adc
fsubrs
mov
js
mov
add
push
jnp
push
mov
lods
mov
scas
int
mov
mov
mov
dec
stos
cmp
aaa
lods
out
mov
aam
mov
xchg
imul
in
mov
cltd
pop
sbb
adc
and
faddl
push
pop
mov
aad
setns
inc
jo
cmp
mov
pop
dec
add
mul
sbb
fs
leave
lcall
jnp
pushf
cmp
xchg
lea
pop
pop
sbb
lock
jge
push
int
mov
push
rorb
adc
inc
into
mov
out
jge
jno
add
lods
cmpsb
lds
xor
push
lahf
push
rcll
jge
lret
inc
mov
arpl
cmpsb
cmp
sub
lcall
xor
je
push
fistpl
and
test
xor
mov
add
arpl
and
xchg
mov
jmp
xchg
outsb
pop
inc
add
add
into
sti
in
cwtl
fs
sbb
or
lret
imul
jae
or
xchg
lret
pop
ljmp
add
lcall
adc
fs
inc
dec
dec
mov
cltd
lret
push
mov
push
rorb
push
cltd
cmp
into
mov
mov
pop
mov
in
enter
and
sahf
xchg
jmp
jecxz
xor
stos
pop
js
test
outsl
out
mov
ds
dec
mov
dec
and
xor
mov
sahf
fdivl
movsb
lret
or
mov
mov
add
add
arpl
push
dec
and
out
icebp
data16
sbb
dec
pop
dec
xor
or
add
push
out
sbb
xrelease
jle
mov
fwait
lock
out
arpl
xor
add
decb
lock
mov
rorl
test
repnz
or
cmpsb
jle
cwtl
imul
rcll
inc
xor
lahf
mov
out
adc
jge
and
test
out
notl
ret
sti
push
cmp
and
dec
and
movsb
std
sbb
pop
shrb
cmp
pop
fidivrl
fwait
and
orb
pop
pushf
xor
fs
stos
jle
mov
add
test
or
lea
push
hlt
loope
pop
flds
ficoml
dec
inc
adc
mov
testb
pop
cmp
or
mov
xor
mov
cmp
sti
mov
lock
mov
inc
dec
dec
sub
lcall
leave
xor
out
into
xor
jo
add
push
adc
pop
jl
fildl
push
jae
scas
std
enter
ds
in
pop
int
loopne
pop
hlt
jmp
andb
jne
sub
inc
xchg
push
add
jo
outsl
and
fldenv
mov
jbe
popf
rcrb
fnsave
sbb
inc
mov
aaa
or
xchg
test
jmp
mov
sti
addb
test
clc
lret
clc
or
xchg
inc
fmull
arpl
pop
arpl
aam
ret
stos
cmpsl
out
jns
cld
orb
jbe
je
cltd
and
popf
cmpsb
mov
out
syscall
int
ljmp
das
roll
popf
and
jg
repz
inc
jg
cmpsl
xor
sahf
das
nop
cmpsb
jg
cld
cwtl
pop
mov
inc
dec
stc
mov
pushf
push
pop
or
lods
mov
cld
test
push
sahf
fsin
xor
jp
or
cld
or
les
loope
dec
stc
fistpl
out
adc
addr16
imul
test
mov
mov
lret
add
or
cmp
in
mov
jge
jl
testb
jae
sub
mov
jne
sbb
aas
jns
loopne
pop
fdivp
scas
adc
pop
sahf
and
shll
test
jg
push
dec
dec
in
aam
enter
lods
jne
test
fucomi
mov
dec
push
xor
adc
xchg
imul
fincstp
mov
inc
sbb
pop
sub
and
in
in
addr16
adc
sbb
add
jbe
in
das
lock
mov
or
ja
push
orl
test
jecxz
xchg
les
and
pop
xor
sbbl
out
sub
add
push
push
adc
push
xchg
repz
pop
pop
sbb
mov
jo
or
fiadds
ss
sbb
fld
sti
cwtl
adc
in
mov
mov
push
xchg
pop
cmp
jg
scas
mov
jbe
push
faddp
rol
fs
xlat
inc
sub
pushf
sarl
xchg
icebp
inc
stos
lock
int
fisubl
shr
pop
sub
xor
mov
mov
rorb
sbbl
outsb
iret
fildll
mov
out
lock
loope
adc
xlat
inc
add
into
andb
int
in
test
sbb
push
out
adc
adc
xor
cmpsl
xor
std
xchg
cmp
repnz
adc
add
fnstsw
pop
mov
jno
idiv
ljmp
jns
mov
out
lods
push
shrb
orl
arpl
jl
cli
cmp
stos
mov
adc
and
and
sbb
mov
push
fnstsw
cmp
lods
je
fwait
mov
xor
push
push
sarl
dec
cmp
pop
inc
pop
sub
enter
test
nop
popf
cltd
out
loope
push
xor
cmpl
dec
jno
aas
push
insl
ret
stc
clc
push
or
pop
rcr
movsl
inc
ds
je
frstor
mov
dec
jo
ret
lahf
imul
adc
lahf
lods
lods
dec
stos
cmp
daa
jb
call
cld
cmpb
and
insb
insl
cmp
cmp
push
xorl
popf
mov
pusha
outsl
pushf
or
out
push
lods
int
or
mov
stc
xchg
shlb
iret
popa
mov
adc
xor
js
test
and
test
push
lret
add
sub
inc
inc
mov
addr16
mov
rol
lahf
lods
push
dec
xchg
in
jo
xor
adc
pop
jge
jmp
adc
jae
mov
es
hlt
pop
jg
cmp
xchg
in
pop
sbb
or
adc
sub
loopne
orl
pop
jge
dec
addr16
push
ds
pop
popf
ja
sub
jno
fidivrl
lahf
enter
xchg
pop
cmc
out
mov
cmpsb
fidivs
cmc
adc
int3
ficompl
scas
add
or
xor
mov
imul
add
call
pusha
ds
inc
daa
add
movsb
orl
inc
and
push
jne
insb
stos
les
push
fistps
push
xor
fadds
pusha
mov
inc
in
mov
mov
push
jbe
gs
sbb
push
pop
mov
jne
das
adcl
int
xor
insb
out
or
pop
and
nop
sbb
mov
sub
imul
jmp
add
lea
add
dec
mov
fwait
mov
mov
pop
lret
mov
das
xlat
lahf
pushl
add
aad
aaa
loope
rorl
scas
es
cwtl
xchg
stos
or
xor
sbb
or
or
fnstcw
pusha
adc
aam
or
pop
rcll
sahf
add
adc
out
xchg
aam
mov
ret
and
inc
jecxz
sub
out
push
aad
xor
jne
push
sbb
mov
inc
shlb
mov
lcall
mov
out
jns
lahf
hlt
arpl
dec
mov
jge
adcb
scas
popa
sbbb
insl
xor
in
aaa
stos
sbb
fdiv
inc
xchg
aas
or
xchg
ljmp
mov
mov
and
and
ljmp
mov
push
pop
scas
mov
clc
adc
fldt
and
mov
ja
iret
in
andl
sti
mov
lods
mov
jp
adc
lcall
outsb
ljmp
inc
cmp
cmp
imul
xchg
mov
pusha
call
inc
xlat
add
outsl
icebp
icebp
popf
push
faddl
jne
mov
inc
adcl
xlat
shlb
add
mov
add
popf
sbb
fnsave
test
mov
sub
xor
icebp
scas
out
pop
inc
or
or
jne
cmpsb
ret
jno
pop
sti
stc
jo
ret
pop
iret
push
lret
lcall
loopne
aad
mov
int
cmpsl
rclb
sti
ss
cmp
mov
and
mov
scas
mov
movsb
cwtl
mov
lds
insl
fidivl
sub
stos
mov
mov
andb
add
sbb
negb
clc
add
add
sub
pop
mov
push
test
gs
cmp
xchg
sub
clts
inc
clc
inc
imul
mov
addr16
jecxz
inc
pop
push
addps
cmp
addr16
mov
lcall
adc
cmp
cmp
mov
in
lock
adc
and
jo
cmp
or
nop
clc
mov
rcll
pop
mov
sub
mov
mov
and
sub
stos
test
lods
mov
add
mov
jae
jmp
sub
lea
leave
pmulhuw
roll
add
push
je
pop
sarl
ds
icebp
jecxz
lcall
inc
rcl
mov
push
xchg
fwait
jg
loope
sub
sbb
xchg
cmp
in
sbb
or
lds
fisubrl
pop
pop
add
stc
fs
je
pop
in
movsl
sarl
leave
jecxz
inc
mov
and
mov
add
clc
or
add
xchg
cmp
es
je
aad
cmpsb
ret
mov
lock
iret
call
mov
adc
das
int
jmp
scas
ficoml
jecxz
add
adc
or
fstpl
in
scas
or
adc
ret
repz
das
xor
ret
sbb
mov
adc
push
clc
ret
push
mov
sub
cwtl
leave
rcr
mov
addl
push
push
cmpsl
int3
jnp
jne
and
out
sub
divb
mov
std
sarl
fidivl
in
sbb
xchg
dec
mov
out
add
push
out
sub
js,pt
popa
xchg
cltd
mov
dec
cs
cmpsb
test
jns
fnstsw
jg
cltd
lods
lods
loope
dec
arpl
jb
jbe
xchg
inc
dec
sub
xor
in
cmpl
cmp
es
adc
inc
inc
test
or
ds
fimull
lods
call
or
data16
fstl
cmp
xchg
cmpsl
adc
in
mov
out
xor
sub
mov
push
fisubl
lds
sbbb
push
aam
call
dec
or
iret
sub
push
xchg
arpl
push
add
fiadds
pop
cmc
fimull
std
rcll
es
sbb
xor
cmp
scas
lret
jecxz
jne
push
or
popa
ficompl
pop
sub
fwait
dec
movhps
daa
rclb
int
pop
sbb
push
mov
lret
inc
pop
and
mov
nop
sbb
dec
adc
pop
cmpb
jge
lret
inc
ja
shrb
out
xchg
mov
movsl
dec
flds
sbb
std
push
jg
and
pop
lods
data16
sbb
mov
int3
int
mov
dec
nop
daa
push
js
xchg
loope
out
jg
add
jmp
shr
loope
insb
bound
icebp
data16
cltd
out
addr16
test
aam
dec
fdivrp
sbb
mov
dec
in
int3
sahf
orb
push
mov
lret
mov
dec
loope
les
stos
das
sti
pushf
and
das
imul
es
sarb
data16
shrl
mov
lahf
cmpsb
lahf
pop
push
adc
hlt
jns
or
mov
subl
xchg
cmpsb
testl
lds
subl
sarl
sbb
ds
les
cwtl
cmpsl
jmp
sub
inc
daa
mov
call
mov
or
push
insb
inc
and
mov
das
mov
fldln2
sbb
jp
stos
pop
js
lahf
xchg
mov
push
insl
fwait
jbe
repnz
inc
sbb
ja
or
das
mov
lock
jo
xchg
fcoms
insb
data16
fisttpll
popf
frstor
xchg
lds
adc
stos
pop
sbb
mov
hlt
push
repnz
jae
dec
jno
sbb
fidivl
bound
mov
mov
jb
filds
pushf
mov
xchg
jle
adc
sub
add
adc
ficoms
push
and
mov
adc
cld
dec
inc
imul
adc
adc
pop
sub
fidivl
add
arpl
iret
inc
lcall
mov
sarb
add
test
mov
jmp
and
scas
mov
mov
hlt
rcrb
dec
mov
repz
push
mov
sub
out
pop
mov
inc
dec
cmpsl
outsb
jl
push
sub
shlb
lock
xchg
iret
test
mov
scas
xchg
ficomps
xchg
daa
loope
mov
mov
mov
xchg
ret
jp
push
ss
xor
cld
fidivl
jmp
mov
pop
push
add
jae
mov
shlb
sub
loop
xchg
and
xor
cwtl
push
out
add
pop
add
lret
push
sbb
in
clc
rsqrtps
cmp
int
adc
jbe
dec
in
and
xchg
jp
fisttps
ret
into
mov
adc
outsb
and
xchg
std
add
fildl
in
arpl
fsubrs
dec
inc
and
push
pop
pop
lret
les
jb
cmp
add
mov
mov
mov
test
push
js
cmpsl
std
out
mov
add
mov
into
minps
jae
imul
jmp
test
jbe
ss
outsl
pcmpgtw
scas
cmp
icebp
xchg
and
mov
mov
mov
sub
push
xchg
pop
inc
mov
int3
imul
rolb
movsb
imul
mov
ret
int3
mov
adc
aaa
ret
sub
add
cmpsb
sub
icebp
fidivs
xor
mov
adc
and
sbb
cld
xor
mov
xor
sub
cmc
cmp
sti
pop
or
adc
xchg
add
cld
je
xchg
and
shrd
xchg
call
lea
add
adc
mulps
pusha
or
xor
nop
repz
cmpsb
nop
xchg
fs
and
gs
add
fmul
ss
pop
sbb
xchg
lea
pop
sbb
jl
hlt
jle
push
shlb
ljmp
mov
ljmp
pop
inc
add
push
push
mov
test
mov
mov
lods
loopne
pop
mov
and
inc
out
xchg
sub
call
sbb
inc
ret
fdivrs
sub
jae
jnp
xor
cmp
xchg
rclb
mov
test
lods
stc
xchg
lcall
vpavgw
pop
inc
data16
scas
push
punpckhbw
imul
inc
and
cmpsb
xor
mov
lret
shr
mov
or
inc
jmp
out
lds
inc
sub
ficomps
adc
cmp
test
int
mov
push
test
out
loop
mov
sub
cmc
aam
mov
stos
dec
andl
stos
imull
scas
insb
or
idivb
cmp
and
enter
mov
sbb
mov
addb
hlt
shll
xchg
ljmp
inc
aad
adc
inc
fs
sbbl
and
test
out
inc
fmulp
int
outsb
mov
lahf
addr16
and
mov
movsl
fwait
jne
fistpl
pop
nop
test
push
inc
mov
jle
sub
flds
lcall
add
and
xchg
add
jbe
xchg
cmp
mov
stc
push
add
pop
mov
lcall
ss
addr16
sub
aas
or
jno
je
sbb
test
add
fidivrs
jmp
int
mov
icebp
mov
xor
or
pop
cmp
pop
mov
str
xchg
fnstsw
popa
fildl
jb
mov
xchg
mov
push
lahf
dec
leave
aam
int
pop
push
imulb
push
mov
push
xlat
adc
in
out
mov
pop
imul
xchg
gs
xor
dec
adc
jmp
cmc
orb
iret
jge
aas
push
lds
dec
call
js
mov
loope
xchg
sub
and
inc
stc
lahf
add
ss
test
and
mov
and
sub
pop
pop
mov
in
out
shlb
enter
mov
xor
push
inc
imul
fcomp
jae
jle
and
mov
push
dec
out
push
mov
adc
xlat
mov
cmp
pop
test
cmpsb
sbb
adc
rolb
jne
or
add
or
mov
and
mov
add
push
dec
xor
popa
xchg
xchg
pop
xchg
pop
cmc
jmp
sbb
nop
sbbl
cmpsb
into
xchg
lret
xchg
pop
int3
clc
add
mov
jge
xchg
orl
int3
xchg
mov
mov
push
pop
xchg
dec
lret
jmp
jb
dec
xor
lret
push
mov
test
lcall
mov
aad
stc
vhsubpd
pop
mov
stos
insb
leave
das
test
mov
das
pop
push
xor
loop
addr16
mov
ret
adc
fidivrs
xchg
popa
cmpsl
sub
adc
pop
aas
or
push
adc
lea
cs
add
xor
rorl
fcomps
jle
inc
stc
cmp
es
in
mov
scas
adc
mov
mov
add
fisttps
sub
mov
fcompl
loop
jmp
les
jecxz
frstor
jno
jp
mov
inc
sub
jecxz
dec
pusha
test
test
xlat
aaa
cmp
dec
into
inc
cmp
adc
inc
lcall
repnz
adc
cmc
inc
add
mull
stos
cltd
add
fisttps
rorb
add
xchg
jecxz
cs
ja
xchg
ffree
popf
or
ret
aas
jg
in
sub
js
jle
outsb
insb
push
aaa
jp
push
jns
cli
lcall
mov
hlt
ds
stos
mov
cld
mov
xor
inc
mov
push
lock
or
dec
fs
xor
in
sub
call
sahf
lea
loope
jge
sahf
jecxz
dec
xchg
pop
cmp
push
cmpsb
lods
pop
in
and
cmp
push
cmp
inc
popa
ljmp
in
jg
sub
test
in
insl
mov
sbb
push
adc
pop
add
call
sarl
rcrb
fldcw
xor
xor
or
insb
lds
mov
mov
push
inc
xor
jecxz
aas
loope
inc
rcll
icebp
insb
cmp
gs
stos
imul
pop
pushf
jns
clc
add
sbb
sub
aam
fsubp
cli
fnstenv
or
or
xor
test
popf
int
mov
push
mov
sub
jl
mov
in
in
ljmp
push
fs
inc
sub
lods
addr16
icebp
and
lret
es
jl
xlat
sbb
mov
pop
push
subl
push
fmuls
push
rorl
pushf
cmp
rorb
dec
lock
cmp
lcall
les
mov
and
cltd
xor
jp
fmuls
imulb
pusha
or
adc
inc
mov
push
shlb
xchg
sahf
or
or
stos
and
pushf
mov
mov
add
mov
gs
fcoml
mov
ficoms
fdivrp
lret
pop
ret
out
in
stc
xor
outsl
les
loop
cmpb
mov
stos
loope
adc
gs
adc
jno
dec
ret
xor
jecxz
inc
stc
enter
jmp
call
xor
aam
js
lahf
cmc
orb
pop
leave
das
cmc
inc
pop
repnz
sub
or
rcrb
lahf
out
sti
and
cmp
jecxz
mov
dec
xchg
andb
lock
or
insl
dec
sub
cwtl
test
test
push
xorb
push
jae
lea
nop
push
and
cwtl
ljmp
imull
insl
mov
sub
push
push
shrb
ljmp
mov
or
push
and
xchg
repz
push
test
pop
xor
jno
cli
aaa
push
dec
push
stos
int
xlat
cmp
fcomp
pusha
mov
jmp
sbb
les
push
push
bound
mov
insl
mov
inc
adc
sub
push
mov
cmp
xlat
inc
cs
stos
mov
xor
lods
pop
mov
lods
and
std
cmp
push
subb
aas
sbb
mov
sub
or
or
lret
xor
lahf
inc
adcl
sub
int3
dec
sub
roll
in
fiaddl
mov
xchg
outsl
xchg
cli
ret
test
push
sarb
cs
or
movsb
sbb
jp
push
lds
or
lret
fisubl
and
bound
sbb
cmp
ds
sahf
shll
jmp
and
stc
jae
mov
test
jp
add
mov
add
cmpsb
add
dec
rcr
and
cmp
nop
mov
xchg
or
or
or
dec
sbb
insb
inc
iret
mov
mov
lret
inc
mov
pop
inc
pop
iret
sub
mov
xchg
jecxz
leave
push
repz
popa
sbb
push
jmp
inc
fdivl
lds
mov
sarl
inc
sub
mov
sbb
rcll
out
mov
xchg
ljmp
icebp
mov
mov
dec
dec
cwtl
les
std
cmpsl
xchg
loop
sub
mov
repnz
cmpsl
xchg
and
aam
aaa
mov
sub
push
repz
repnz
je
enter
data16
mov
scas
sbb
enter
sub
mov
notl
lret
and
sahf
sbb
add
repz
sahf
xor
adc
dec
pop
sbb
repnz
sahf
push
loopne
xlat
pop
sub
jle
add
jecxz,pt
incb
adc
xchg
xchg
cld
push
jp
into
test
xor
and
mov
cmp
fwait
xorl
sbbb
notb
adcl
jns
fsubl
iret
adc
jns
push
in
imul
popf
scas
push
and
clc
mov
sbb
shr
mov
repz
frstor
add
sbb
outsl
bound
stos
ds
push
stos
push
pop
inc
xor
lock
or
sahf
scas
cmc
cmc
mov
xorl
daa
ljmp
cmp
icebp
inc
lods
sub
popa
movsb
and
roll
jecxz
popa
inc
shlb
loope
and
cmp
sub
pop
jns
xchg
cmc
sub
adc
imull
test
inc
fsubs
mov
ds
rclb
stos
lds
xchg
fdivs
push
sbb
in
dec
mov
ds
cmp
cmpsl
jno
in
pop
shl
jo
xchg
and
out
push
fimull
push
push
outsb
adc
test
push
xchg
pop
inc
fs
or
and
xchg
push
jae
sbb
out
test
jne
dec
or
pop
bswap
push
fs
jno
sbb
jp
xchg
test
push
iret
pop
jmp
jo
cltd
outsl
or
jle
lds
aam
mov
mov
and
mov
xchg
faddl
shlb
jbe
shrl
mov
mov
jno
popf
mov
mov
sbb
ds
sub
and
out
pop
repz
ss
in
icebp
icebp
push
lret
js
sub
jns
fs
jmp
out
testl
push
icebp
pop
push
sbb
push
adc
xchg
das
mov
ret
pop
cmp
popa
mov
cmp
or
or
jg
mov
rcll
xchg
scas
push
sub
dec
sahf
dec
std
mov
faddp
or
negl
movsb
repnz
mov
lods
xchg
lods
movsl
xor
push
mov
insl
cmp
sbb
ds
and
add
cwtl
out
pop
and
mov
mov
mov
popf
ret
adc
outsl
jno
push
jg
lea
xor
ret
mov
dec
mov
add
fisttpll
mov
mov
ja
push
jle
mov
adc
cmpsb
cmpl
stc
int3
add
fists
add
add
jnp
and
or
mov
jp
fidivs
ss
shrb
stos
add
dec
loope
cmp
dec
lods
lret
mov
sbb
lods
sub
jo
jle
dec
icebp
outsb
fwait
pushf
add
popa
mov
daa
ljmp
and
or
imull
add
or
mov
outsl
jbe
in
aad
fisubl
sub
out
cld
jb
jb
sbb
test
aad
movsl
push
nop
pushl
mov
in
or
jmp
add
loope
popf
lcall
les
cli
rolb
sbb
xchg
push
mov
dec
rol
stos
cwtl
adc
filds
into
and
inc
mov
or
rcr
into
mov
es
mov
int
sbb
mov
stos
in
loope
xor
adc
lock
lods
mov
sbbb
les
push
cmpsb
add
and
adc
lods
sub
notb
iret
cmp
and
xchg
aad
fcom
gs
cmpsl
daa
adc
incb
xchg
sub
mov
pop
sarl
mov
jb
mov
push
out
sub
sbb
and
or
dec
push
insl
fs
adc
sahf
sub
nop
ss
hlt
arpl
aaa
test
std
and
out
dec
inc
mov
jae
adc
stos
and
add
dec
lret
push
or
or
push
movsb
pop
ficomps
adc
addb
imul
inc
cmpsb
add
adc
inc
jnp
loopne
xor
lock
pop
cmp
jge
xchg
pushf
push
divb
sub
insl
test
sahf
hlt
push
imul
xchg
imul
pop
jbe
add
cmp
jo
popa
or
addl
shlb
ja
xchg
push
mov
push
int3
aas
addb
mov
xor
arpl
fsubrs
loop
out
and
mov
jo
fsubrl
sbb
mov
jno
mov
inc
cmpsb
mov
push
push
stc
mov
inc
and
lahf
jo
mov
sub
pop
dec
cmp
mov
xchg
rol
xchg
data16
xchg
call
fwait
cmpsb
xchg
js
jo
dec
cmp
adc
push
nop
in
mov
mov
das
fadd
cld
int3
add
jecxz
scas
lcall
mov
loopne
ja
fmul
add
xchg
aam
pop
cmc
jb
xor
adc
scas
iret
sbb
addr16
daa
push
sbb
pop
mov
mov
pop
jns
mov
shll
or
push
xchg
cmp
lret
sbb
jae
fiaddl
dec
in
mov
dec
bound
and
test
mov
mov
nop
test
clc
inc
mov
lahf
jne
rorb
sub
push
dec
jae
add
sbb
aam
jmp
mov
push
inc
orb
inc
repz
mov
cmp
jp
sbb
or
sti
add
inc
sbb
inc
les
mov
cmp
in
sbb
rclb
sub
lcallw
mov
dec
lahf
or
sbb
adc
out
and
push
xlat
xchg
lea
rorl
mov
mov
lret
and
add
les
inc
sub
sbb
and
insl
sub
sub
ret
dec
sub
push
pop
adc
mov
int
punpcklwd
mov
and
fmull
sahf
mov
int
into
fildl
push
sub
jo
dec
inc
roll
adc
rcll
mov
loopne
test
xor
test
jp
xchg
mov
fdivrs
fmuls
stos
lods
pop
sbb
arpl
cmpsb
inc
cmp
xchg
stos
sub
mov
ds
sbb
loop
sub
clc
movsb
mov
xchg
mov
mov
lret
fs
adc
jle
jmp
out
ja
out
dec
repz
xchg
test
dec
cmp
mov
push
icebp
inc
jbe
mov
inc
int
stos
call
dec
aas
jbe
pop
mov
push
and
mov
adc
sbb
in
stos
jp
push
sub
ret
shrb
adc
lahf
push
ds
lods
daa
pop
sbb
out
or
lds
xor
or
dec
sti
lahf
jnp
cmpsl
pop
adc
lret
xor
call
mov
cwtl
cmp
xchg
dec
mov
cs
mov
jae
fstps
push
add
pop
test
cmp
pop
and
pop
pop
pop
daa
icebp
int3
mov
dec
leave
push
dec
clc
hlt
dec
stc
arpl
loopne
add
pushf
push
push
cld
into
mov
adc
dec
gs
call
mov
das
adc
pop
adcb
sbb
int3
add
inc
cmp
push
lods
jg
push
test
xchg
rclb
adc
lret
adc
mov
push
push
outsb
js
rcrb
mov
lcall
pop
add
xchg
push
lret
in
popa
push
xor
jb
test
mov
add
shrb
xchg
aaa
xchg
icebp
pandn
mov
dec
je
pop
popf
cltd
mov
jb
lods
jne
cmp
call
repnz
fdivrs
test
and
ror
stc
testl
cli
sbb
lea
dec
aad
dec
xchg
jle
movsl
fnstsw
dec
stc
sub
in
stos
int3
lcall
add
or
and
cmp
pop
mov
cmpsl
or
push
push
arpl
sti
dec
fidivs
push
pop
dec
push
sbb
xor
sub
cmp
push
mov
cmc
popf
xor
icebp
xlat
mov
push
andb
dec
int
or
stos
addr16
mov
cltd
aaa
mov
xchg
and
jge
ret
pop
mov
mov
cmpsb
push
xlat
clc
xchg
ret
and
xchg
and
repnz
insl
push
mov
mov
cmpsb
rcr
pop
or
fisttpl
movsl
icebp
adc
divl
jecxz
aad
test
aad
mov
and
jge
push
out
cld
jmp
push
xlat
ljmp
and
inc
and
and
gs
dec
neg
add
leave
test
push
fidivl
mov
aam
adc
xchg
xchg
add
mov
pushf
pusha
addl
cmp
js
dec
jne
lahf
fcomps
lcall
mov
repz
sub
std
daa
ret
xchg
fsts
push
pop
jo
dec
mov
sbb
nop
popa
push
jns
add
cli
cltd
mov
lahf
arpl
or
xchg
mov
hlt
push
dec
stos
push
imul
mov
daa
ret
lods
xor
push
enter
xor
divl
lock
xor
xor
adc
xchg
dec
xchg
in
mov
shll
fwait
ret
pop
loope
int3
rclb
xchg
push
lods
cmpsb
and
xchg
daa
and
or
cmc
fimuls
rcrb
add
adc
aam
pop
mov
fs
cmpsl
imul
pop
shrb
aaa
jbe
lods
test
xchg
popf
add
sub
push
rcll
test
daa
xor
arpl
inc
add
repnz
cmpsl
jp
es
scas
pop
jmp
loope
loopne
xchg
mov
jbe
insl
xlat
cli
pop
icebp
mov
or
cwtl
fnsave
sub
inc
icebp
cmp
repnz
loope
fimuls
arpl
lock
jge
jo
jecxz
and
sub
lahf
mov
mov
fs
xchg
add
jnp
dec
les
in
inc
xor
data16
mov
dec
push
jno
popf
sbb
xor
xchg
bound
insl
mov
sub
sub
sbb
xchg
or
ljmp
fdivrs
sbb
push
stos
sub
ja
in
mov
cli
cmp
les
outsb
insb
loop
data16
adcl
cs
push
cmp
fdivrl
dec
push
rcl
mov
mov
sti
fistl
dec
pop
dec
mov
sbb
lret
rcl
mov
test
xor
xor
popf
cmp
fsts
movsb
push
jp
addl
add
fisttps
dec
pop
out
jp
subl
into
ret
cmp
and
add
and
cmp
in
cmp
rcrl
jb
andl
lret
pop
pop
xor
call
lahf
pop
jae
outsl
mov
dec
push
dec
mov
mov
cmp
adc
push
adc
jne
cs
xor
sub
hlt
stc
fstpl
ja
jbe
push
mov
dec
data16
cmp
pop
mov
xor
xor
mov
insl
dec
outsl
xchg
imull
hlt
xchg
and
adc
jge
lods
push
or
xor
pop
lret
sub
out
dec
jl
add
notb
sub
daa
fstpt
repnz
push
lret
sub
xchg
scas
popf
sbb
in
sbb
mov
push
jecxz
imul
scas
or
jp
fs
testl
adc
jno
mov
add
test
lock
lahf
cmp
add
jg
imul
push
lock
outsb
cmpsb
jne
or
lock
sti
jbe
stos
cli
lds
sub
fucom
pop
iret
rorb
inc
movsl
jmp
jmp
inc
loopne
mov
push
mov
mov
adcl
sbb
ret
mov
imul
sub
pop
in
or
jle
add
cmp
nop
jns
in
int
pushf
jmp
sti
add
stos
push
lds
inc
inc
push
mov
enter
lock
and
mov
enter
mov
aas
addl
aas
es
jecxz
pop
add
pop
stos
xlat
clc
xor
rorb
enter
mov
imul
cmpsl
push
pop
hlt
loop
lods
adc
or
jno
jmp
push
and
rcrb
lret
or
adc
test
jle
and
and
aad
jmp
stos
push
lock
jno
test
shlb
aam
xor
rclb
hlt
and
aam
mov
aas
psubq
or
test
pop
ja
or
test
out
cmpsl
add
bnd
xchg
adc
cmpsb
mov
int
or
or
inc
mov
xor
and
mov
mov
out
adc
add
cmc
fdivrs
pop
shlb
out
adc
jb
imul
pop
or
sub
adc
jmp
stos
xchg
in
push
xchg
shll
dec
xlat
cmpb
sub
mov
std
jg
adc
ret
inc
inc
in
pop
rcll
xchg
les
add
push
aam
dec
push
mov
xor
add
dec
test
pop
sub
pop
dec
icebp
daa
dec
mov
sub
out
jle
ss
rclb
das
push
dec
into
cmp
daa
ret
inc
dec
sahf
inc
xchg
loopne
or
sti
div
sub
loope
adc
fdivl
push
or
inc
js
in
inc
push
inc
sbb
scas
mov
cmp
jno
arpl
icebp
out
orl
mov
cmp
popa
out
push
ret
in
pop
xchg
adc
int3
push
mov
fmul
mov
je
add
jbe
int
jno
adc
xchg
cmp
fistps
outsb
pushf
jecxz
scas
or
fbstp
fwait
hlt
cltd
cmp
jg
iret
mov
mov
fdivl
push
sub
clc
inc
sbbb
pop
pop
xchg
adc
dec
cmp
adc
cmp
push
push
inc
cmpsl
in
addl
pop
ss
test
insl
add
aaa
test
dec
mov
lods
fiaddl
pop
fcomps
jns
cmp
xchg
add
jne
cmc
lahf
xchg
inc
mov
jb
jnp
hlt
cmp
rclb
and
int
add
rcrb
outsl
idivb
dec
pop
jecxz
lds
imul
arpl
xor
in
xorl
lock
orb
inc
in
push
mov
cmp
or
movsl
mov
rolb
cmp
adc
ja
cmc
sbb
add
jl
sarl
dec
nop
sub
sbb
fbstp
lret
push
mov
pop
jae
lea
outsl
and
lcall
loop
aam
andl
lds
xor
adc
jle
pop
mov
loopne
sub
out
mov
lret
dec
mov
xchg
gs
popa
jg
mov
mov
out
sti
mov
cmp
xchg
aaa
lret
dec
xchg
cmp
aas
push
aaa
lea
aam
sbb
push
arpl
mov
jns
jnp
das
cmp
les
push
push
push
xchg
sbb
push
and
cmpsb
sub
mov
mov
jp
setle
ret
xor
mov
inc
sbb
mov
in
add
sub
cmpsl
adc
in
cmp
dec
aam
mov
jns
cli
inc
cmp
pop
gs
sub
scas
cs
or
orl
enter
jbe
sbb
lods
leave
lcall
pusha
test
in
insb
sub
imul
xor
gs
mov
leave
and
das
fs
pop
test
push
sbb
push
pushf
in
and
outsl
jmp
scas
lret
inc
sbb
sub
jne
mov
movsb
in
cmpsb
inc
push
pop
push
leave
push
punpcklwd
scas
push
scas
pushf
adc
fsubrp
sub
pop
add
mov
sbbl
mov
or
jg
jae
cmpsl
push
rorb
ja
pop
cwtl
inc
dec
sbb
pushf
fisubrl
inc
stos
addr16
push
mov
fldenv
dec
fcmovnbe
fnstsw
sarl
push
pusha
test
push
lcall
xor
sbb
je
jp
fs
repnz
dec
arpl
jl
pop
dec
and
mov
xor
sub
iret
loopne
lods
sub
loopne
or
dec
outsl
adc
sub
push
push
cmc
pop
inc
subl
sub
mov
mov
cltd
lret
jns
mov
xor
shlb
clc
lahf
sbb
cmp
sub
mov
dec
test
popa
xor
scas
mov
in
mov
cmpsl
inc
insl
lret
adc
jg
or
and
fidivl
lods
call
add
fidivs
aaa
dec
adc
lods
jle
mov
outsl
aas
xchg
cs
lods
jg
xor
jo
xchg
ljmp
xchg
dec
pop
fistl
test
and
leave
fucom
mov
push
add
fistpll
adc
lahf
xchg
pushf
cmp
push
sub
imul
repz
push
mov
cmpsb
push
jo
ss
repz
cmc
sbb
inc
sarl
dec
cmpsb
lret
mov
mov
cmc
mov
and
push
xchg
or
jbe
sbb
pop
push
inc
mov
push
out
lahf
dec
imul
dec
xor
rcrb
inc
jmp
es
stos
push
sahf
rcrl
push
int3
or
cmpsl
adc
in
mov
rep
mov
mov
inc
add
and
mov
or
mov
mov
dec
ljmp
jb
jnp
jae
call
out
repz
lock
stos
dec
repnz
push
int
jae
test
fsubrp
scas
scas
cltd
insb
jle
jecxz
sbb
fcoms
out
insb
cmc
cmpsl
mov
mov
loop
xchg
fcoms
outsb
imul
sahf
sub
fidivrl
jae
add
test
and
cmpsl
adc
push
inc
stc
push
frstor
sub
jnp
test
mov
jp
or
xor
cmc
dec
and
push
cmp
into
sub
xchg
nop
pop
mov
inc
mov
cli
inc
test
xchg
mov
pop
std
push
add
out
jmp
push
nop
sub
fwait
xorl
fiaddl
sbb
outsb
dec
sbb
or
popa
arpl
push
xor
mov
adc
scas
shl
push
dec
jl
movsl
lcall
jge
adc
aam
inc
test
gs
mov
sbb
ud2
out
pop
pop
sti
push
jge
bound
fstpl
mov
mov
movsl
push
dec
jg
iret
push
lcall
jmp
fimuls
adc
lock
xorl
jne
adc
xlat
jb
in
dec
lods
adc
jmp
sbbl
cwtl
inc
push
dec
lret
loopne
jmp
pop
cmpsb
daa
mov
jl
add
xchg
stc
rcll
in
adc
and
dec
cmp
cmova
in
inc
lcall
inc
arpl
ja
nop
setno
clc
and
or
pop
aad
push
mov
test
pop
mov
xor
xchg
and
mov
inc
rol
mov
shlb
push
insl
sub
ljmp
ret
pop
fisubrl
jp
jae
bound
cmp
jnp
movsl
pop
pop
test
inc
mov
jo
sub
or
aas
shrb
ja
lock
inc
push
mov
lret
orb
or
cmp
xor
cmp
sti
or
mov
repz
or
or
push
loop
add
inc
mov
sbb
stos
out
mov
mov
push
imul
out
sti
sbb
popf
ja
push
xchg
lods
in
push
cmpsb
xchg
je
cmp
in
mov
push
jb
ret
push
jmp
arpl
stos
in
xor
adc
sbb
aas
xchg
mov
jno
push
fldl
adc
fwait
leave
ret
jbe
in
cmp
push
ret
push
cs
es
push
decl
movsb
test
mov
mov
aas
pop
aad
in
aas
shll
xor
inc
and
fwait
add
lods
mov
aaa
stos
push
push
dec
lods
lds
jae
mov
and
addr16
add
out
dec
sbb
in
push
inc
lahf
outsl
in
in
jmp
xchg
sub
out
test
into
jno
mov
and
outsb
inc
pop
inc
mov
jbe
dec
xchg
pop
jp
aas
inc
and
mov
lds
imul
jbe
fisttpll
xchg
sbb
pusha
imul
ss
xlat
dec
ja
sub
cli
pop
mov
fmuls
pop
inc
mov
lods
xchg
push
jl
inc
jno
add
sarl
jns
push
enter
stos
hlt
xor
pop
repnz
dec
inc
repz
cmp
mov
mov
pusha
xor
cmc
xor
daa
jae
jge
mov
dec
in
mov
mov
rclb
xchg
pop
test
push
es
mov
aaa
pop
dec
in
jne
in
push
clc
jecxz
pop
popa
add
fnstsw
pop
cmp
inc
test
cmc
mov
cli
and
das
dec
jecxz
mov
sbb
cmp
push
test
rorb
data16
inc
fnsave
jnp
outsb
dec
inc
mov
mov
mov
insl
sbb
push
ljmp
sti
jge
push
cmp
inc
fs
mov
lret
push
mov
push
sbb
add
push
fidivs
mov
pop
loop
stos
xor
add
insl
enter
dec
sbb
sub
sub
push
lock
adcb
push
adc
dec
ljmp
roll
mov
pop
repnz
lret
mov
mov
test
push
in
mov
cld
cmpb
dec
pop
rorl
outsl
mov
add
lcall
jp
and
pop
insb
aas
pop
mov
pop
ljmp
ja
in
fbld
xor
int
mov
in
mov
pop
xchg
lahf
xchg
dec
cltd
push
add
test
or
mov
add
sub
shrb
add
push
je
jno
pop
or
pop
cmp
cmp
scas
dec
and
lea
and
or
test
fsubp
lret
pop
dec
xor
cmpsb
or
pop
cltd
not
push
push
mov
add
gs
push
or
inc
adc
push
mov
mov
inc
pop
push
outsl
pop
repnz
in
inc
mov
icebp
jae
js
sti
pop
add
jmp
mov
inc
aaa
pusha
stc
int
add
je
inc
movsl
pop
cmp
or
jbe
mov
jecxz
out
cmp
xor
test
jp
out
mov
adc
shrb
loope
cmp
add
cwtl
dec
pop
ja
xor
xchg
add
lcall
push
popa
sub
xchg
jecxz
xchg
hlt
jecxz
psubusw
push
cli
rolb
div
movsb
pop
jge
push
les
xor
addb
xchg
ss
clc
in
cmp
adc
sbb
xor
jl
jb
dec
or
mov
mov
jns
insl
ret
mov
fmull
popf
xchg
cwtl
push
jnp
sbbl
push
cmp
mov
ret
dec
ror
aam
ss
cmp
idivl
jge
dec
mov
mov
and
mov
xor
stc
jle
lcall
jle
pop
aam
or
mov
mov
rcrb
ffreep
or
xchg
loop
cld
bound
mov
je
mov
xlat
inc
ja
mov
sub
sbb
jg
cmp
bound
jb
or
or
jmp
pusha
pop
pop
aas
dec
mov
mov
js
addl
xorl
add
ret
pop
mov
push
xchg
and
lea
pop
enter
test
pop
mov
inc
ss
fcomip
mov
pop
data16
mov
sbb
lret
push
lcall
sub
push
xchg
mov
pop
in
mov
mov
stos
lret
mov
xchg
mov
cli
cmp
jb
test
xchg
imul
cmp
pop
outsl
fwait
stc
adc
mov
sbb
jno
add
jp
dec
mov
lock
aas
les
outsl
lea
push
xor
test
and
push
cwtl
jecxz
sbbl
ss
aad
lds
ja
les
adc
jg
cwtl
add
xchg
jno
xorb
adc
cld
icebp
int
in
sbb
or
test
pop
or
lret
jno
jns
rorl
mov
xchg
addl
add
cli
shlb
sbb
out
mov
sbbb
or
in
inc
cmp
and
lock
cli
xor
pop
mov
push
in
leave
jb
shrb
add
xchg
aam
dec
ret
cmp
cmpsb
movl
and
ljmp
rorb
out
sub
sarl
and
test
xchg
mov
adc
add
mov
pop
out
mov
mov
stos
fcomps
lcall
push
mov
repz
mov
mov
dec
push
mov
lea
aaa
sub
push
sbb
mov
leave
aam
into
cmpsb
mov
bound
mov
mov
pop
adc
mov
cmpsb
adc
jo
mov
addb
dec
inc
mov
arpl
scas
insb
and
hlt
mov
orb
and
out
add
mov
insl
aas
and
or
mulb
pop
addr16
adc
fistl
push
iret
sbb
popf
idivb
adc
cmp
or
push
inc
outsb
pop
xchg
test
cmpsb
pop
jg
or
mov
mov
mov
xchg
aas
push
push
adc
loope
loop
test
mov
inc
cmp
loopne
xchg
das
test
xlat
into
xor
sbb
negl
outsb
arpl
ljmp
pop
in
fxch
cli
mov
movsb
push
std
cmp
and
dec
repnz
ja
push
das
xchg
inc
sahf
rclb
hlt
push
iret
mov
les
sbb
adc
mov
push
rolb
stos
push
cmp
cs
aam
and
std
js
movsb
sub
pop
clc
cmp
fnstenv
jg
adc
mov
sub
pushf
and
mov
out
xchg
sub
mov
dec
jmp
aad
iret
mov
inc
cmc
jle
cmp
add
pop
fstpl
mov
mov
lds
test
jb
pop
xchg
mov
and
jg
pushf
insb
xor
out
dec
enter
or
inc
adc
rolb
push
push
ja
and
insl
testb
or
dec
xor
and
jo
mov
cld
cwtl
std
push
and
insl
dec
fisttpll
pusha
out
je
adc
push
js
inc
mov
cltd
cmp
out
into
dec
les
insl
in
add
test
cltd
in
cli
std
icebp
push
fdivrl
jl
loope
cwtl
mov
imul
add
lahf
or
jp
fisttpl
cli
jle
cli
sbb
cmp
sub
cmp
cmpsl
test
jg
pusha
test
pop
hlt
jno
repz
push
mov
xor
cmp
js
stc
jae
test
int
fwait
sbb
xor
xor
loopne
rcl
mov
sbb
cmp
cmp
mov
mov
jge
aam
lret
jp
iret
jno
mov
mull
pop
pop
sub
xor
xchg
sahf
sbb
sub
pop
pop
and
decl
add
sub
notb
mov
scas
sub
add
cmp
loope
add
xchg
push
inc
out
lods
push
gs
xchg
lcall
fistpl
popf
inc
rolb
lahf
xlat
jo
idiv
bound
dec
mov
cmp
leave
dec
xor
outsb
mov
pop
cwtl
int
int
lahf
loope
or
mov
cmp
mov
push
rclb
shrb
filds
pop
mov
and
clc
enter
hlt
pop
ss
sahf
fidivrs
mov
push
mov
mov
push
sbb
jp
outsl
pushf
pop
jecxz
fldcw
arpl
popf
mov
scas
sbb
scas
jb
push
push
sub
int
push
arpl
xor
push
mov
subb
stos
xchg
inc
rorl
jp
fisubl
inc
fldl
jb
push
xchg
scas
push
push
std
jne
std
jl
popa
sub
pop
outsl
fbstp
xchg
ficoml
cltd
nop
std
jl
sbb
push
js
dec
imul
in
pop
xor
aad
insb
xchg
adcb
sbb
xor
inc
ja
and
cmp
dec
or
sub
imul
mov
mov
jecxz,pn
cmp
add
lds
fstpt
mov
jp
in
repnz
and
ds
mov
push
les
nop
arpl
cmp
mov
insl
jle
mov
lods
fiadds
jnp
sahf
popf
mov
adc
rorb
aaa
jle
jns
orps
inc
sub
push
pop
push
psubusw
mov
into
out
stc
lahf
jecxz
pusha
push
flds
insl
push
loope
lods
xchg
xor
fnstsw
inc
and
les
shrl
fmul
loopne,pn
mov
shl
stos
lret
jnp
push
push
movsl
stc
cmp
mov
adc
adc
int
sbb
mov
repnz
mov
test
fs
xor
mov
aaa
jmp
clc
rclb
adc
vphaddbq
push
pushf
nop
mul
inc
cmpl
xchg
dec
or
jne
mov
xor
cmp
lds
subl
push
adc
fs
mov
dec
cmc
sbb
adc
dec
jl
addr16
xor
dec
or
or
mov
loope
cmp
mov
add
and
fists
inc
arpl
sbb
add
pop
aam
sub
xchg
test
jle
mov
push
jne
pop
int
lea
sub
dec
rolb
inc
fsts
repnz
mov
hlt
pop
or
bnd
push
and
add
push
or
stos
repnz
psrlq
mov
mov
int
popf
cmpsl
popf
and
pop
mov
inc
add
sbb
add
add
fmuls
push
pushf
cmpsl
stos
sub
test
or
add
pop
xchg
push
mov
test
cmp
pop
bnd
aam
iret
dec
mov
pop
and
lods
lock
sub
ret
xor
cmpsl
mov
mov
or
xchg
jp
int3
push
lods
ds
mov
enter
daa
es
add
sub
pop
movsb
mov
insb
pop
cmpsb
dec
jno
loop
xchg
xchg
xchg
mov
mov
add
jl
repnz
adc
or
arpl
and
pop
insb
and
subb
pop
pushw
test
repnz
imul
jg
sub
pop
aad
xchg
gs
je
inc
mov
mov
dec
das
mov
out
xlat
jnp
pop
jb
mov
mov
push
add
inc
mov
pop
pop
push
in
daa
jbe
and
add
and
push
or
data16
pop
push
mov
mov
or
adc
push
lret
and
cmp
orl
std
shrl
bound
jle
adc
fdivrl
mov
ret
test
rorl
dec
cwtl
adc
shrl
or
repnz
sbb
xchg
pop
addr16
ret
in
jg
int3
add
adc
stos
or
mov
or
pop
out
sbb
pushf
mov
fcmovnu
push
cmpsb
inc
mov
or
cld
inc
jae
dec
adc
icebp
cmp
pop
mov
push
or
loopne
pop
test
or
adc
ret
sub
cmc
mov
test
cmp
lret
int3
mov
test
insb
loop
adc
adc
ss
jne
push
rorl
pushf
mov
lea
dec
ret
adcl
sahf
jecxz
fsubl
jecxz
mov
jns
xchg
ficompl
scas
mov
push
out
shll
clc
sbb
ret
in
sbbl
sbb
jge
cmp
xchg
and
outsl
std
fwait
lret
mov
loope
cmp
mov
sub
xchg
adc
and
jle
or
cmp
ja
test
cmpsl
sub
and
pop
call
xlat
pusha
pop
pop
jg
in
mov
imul
call
sbb
cmp
pop
inc
or
fadds
popa
out
sbb
loopne
push
psubb
outsl
add
popf
popl
xor
mov
xchg
jnp
sahf
lea
mov
pop
inc
sbb
lock
lret
push
and
inc
repz
outsb
nop
adc
fadd
jg
add
dec
les
outsb
pop
jb
add
clc
sbb
aas
dec
xchg
bound
xor
push
pop
js
fbld
push
mov
cwtl
sbb
divb
sub
cs
cs
sahf
cmp
jl
mov
push
push
mov
into
jecxz
sub
test
sti
mov
cmp
adc
push
push
pop
pop
movsl
ljmp
movsb
shrl
sub
ret
inc
mov
mov
xlat
lea
xor
push
xchg
xor
ja
add
in
push
out
movsb
adc
arpl
cmc
or
jge
inc
rcr
cmpsb
xchg
mov
gs
inc
lods
ljmp
add
and
add
test
add
lret
cmp
into
ss
inc
mov
sbb
mov
icebp
fisubl
test
jo
adc
int
addl
sub
cs
sub
jnp
inc
loopne
scas
xchg
iret
lret
inc
xchg
adcl
pop
fidivrl
mov
jbe
mov
cltd
or
jno,pn
or
les
mov
add
jmp
sbb
testl
or
bound
sbb
push
pop
bound
mov
add
orl
out
ja
dec
scas
shll
dec
jle
push
insl
add
incb
jo
cmpsb
ss
insb
data16
fldt
push
fcomps
test
xor
or
ret
outsb
hlt
mov
sub
into
cwtl
popf
xor
jnp
test
rcl
pop
push
inc
lret
push
movsb
insl
add
mov
hlt
jecxz
push
das
jl
jp
stos
add
out
push
mov
pop
mov
lahf
mov
pusha
test
outsb
test
ja
jo
cmp
xor
add
in
sub
and
stc
into
ja
sub
loopne
inc
inc
int
sbb
push
and
mov
adc
jno
std
fiadds
in
push
mov
push
lret
insl
mov
inc
mov
pop
mov
xchg
lcall
clc
out
xchg
out
call
ljmp
pop
cld
leave
cld
sbbl
aad
sub
ret
int
data16
sub
sbb
sarb
add
inc
or
inc
fstl
es
leave
into
dec
pop
addl
and
sub
cwtl
test
inc
iret
rcl
push
xor
inc
sbb
loopne
jecxz
fcompl
push
or
cmpsl
inc
ja
xchg
orl
loope
mov
xchg
push
xchg
insl
pop
xor
xchg
lret
jge
pop
cmp
dec
sbb
pop
scas
xchg
inc
pop
leave
adc
fcomps
jno
aad
push
mov
pop
cmp
rcll
and
fucom
arpl
or
stos
movsb
aad
push
and
sbb
lock
jge
pop
js
arpl
mov
pop
or
stc
push
xor
mov
xchg
inc
insl
aam
xor
pusha
in
xchg
mov
fcompl
stos
testl
or
add
xchg
mov
push
sbb
arpl
mov
jmp
lods
test
cwtl
dec
imul
add
aas
sub
push
scas
push
push
and
and
leave
add
sub
jl
ljmp
adc
push
push
scas
jne
or
sbb
inc
sti
test
jno
inc
sbb
xor
pop
fstps
mov
xor
movsl
out
sarl
mov
mov
cmpsl
aad
push
pop
fidivrl
push
add
cs
lods
jno
aas
test
sub
leave
sarl
in
jae
mov
cld
or
dec
ss
hlt
sbb
xlat
lds
mov
and
or
push
hlt
fisubrl
das
hlt
jp
nop
dec
nop
movsb
repz
cmc
push
stos
pop
jge
aad
dec
sub
jl
andb
push
jnp
cmpsb
xchg
adc
out
push
push
xor
pop
test
add
lret
adc
and
mov
test
leave
movsl
out
adc
inc
add
cmp
push
cmp
lock
or
dec
loop
clc
sbb
imul
mov
mov
push
loope
jnp
test
inc
out
mov
mov
mov
push
iret
mull
scas
loope
dec
cmp
scas
push
pop
xor
xchg
pop
sbbb
mov
mov
mov
adcb
testl
aaa
dec
std
fisubrl
mov
outsb
sub
cmp
in
inc
dec
testl
fs
xor
leave
fs
sahf
insb
aad
sub
mov
sti
and
sbb
mov
pop
roll
and
call
test
outsl
pop
add
mov
ret
adc
xchg
stc
mov
loop
aas
jno
enter
daa
pop
outsb
sti
adc
int3
loope
and
jno
testb
hlt
xchg
mov
lret
push
dec
inc
in
mov
push
xor
cltd
xor
mov
orl
inc
mov
sub
movsl
mov
cmp
mov
std
std
imul
push
clc
dec
aam
incb
pop
insl
pushl
xor
rorl
je
adc
push
xor
insb
adc
outsl
lods
test
call
or
and
mov
mov
dec
push
jge
push
push
add
mov
push
cli
ss
xor
out
popa
test
sub
in
ds
js
fldcw
faddl
divb
push
add
ror
sbb
ds
adc
adc
jmp
stc
iret
ja
stc
dec
sub
test
cmp
add
pop
mov
pop
into
sub
or
pop
cmp
iret
sarl
pop
pusha
inc
inc
test
xor
sarl
in
decb
inc
in
scas
push
negb
ror
jo
mov
push
stos
xlat
pop
and
push
mov
mov
call
add
dec
pop
mov
or
sti
or
cwtl
fldenv
sti
adc
test
fstp
iret
divb
mov
testl
ss
dec
mov
shr
and
jl
mov
adc
into
mov
mov
outsb
mov
leave
push
pusha
lock
xor
in
dec
lcall
andl
ds
mov
cmpb
nop
sub
xchg
xor
mov
mov
js
nop
xor
adc
out
sahf
out
mov
iret
or
and
fwait
ja
fisttps
or
cmp
push
push
mov
ds
cmp
adc
and
imul
sub
divl
add
and
mov
mov
xchg
aad
nop
pop
notl
pop
int
stos
cmp
int
adc
imul
or
scas
fiadds
jmp
xor
int3
lea
mov
push
outsl
mov
sbb
shll
mov
or
out
cmpsl
mov
cmp
aam
mov
popa
enter
xor
int
inc
sbb
jnp
sub
es
xchg
fwait
jb
inc
idivb
sub
scas
add
push
test
js
mov
rcll
and
lods
cli
ret
test
mov
xor
gs
and
cmpb
mov
sarb
ret
xchg
mov
mov
test
xchg
add
adc
std
dec
jbe
popf
pop
mov
sub
mov
test
push
cmpsb
xchg
xchg
test
idivl
out
ljmp
cs
push
adc
rcr
push
sub
sbb
and
test
jne
dec
xchg
mov
lods
and
cmc
mov
outsl
dec
int
pop
cmp
into
jns
adcb
xor
mov
jecxz
in
mov
pop
cltd
mov
xchg
repz
in
or
xchg
cpuid
xchg
stos
push
mov
dec
mov
fstl
das
adc
xchg
mov
or
sub
cmp
inc
popa
or
sbb
out
xor
aad
jg
call
add
loop
test
pop
and
mov
xchg
fisubl
ljmp
pop
jmp
mov
cmpsb
push
pop
jp
mov
xor
loopne
loope
jae
sbb
xor
incb
mov
into
bound
cli
cmp
std
fucom
aam
xchg
adc
push
cli
add
imul
dec
out
dec
xchg
in
rcrl
inc
xchg
rolb
pushf
and
sub
and
cmpsl
aam
push
dec
in
aad
lahf
add
and
mov
cli
cld
mov
shr
fcoml
inc
dec
xor
pop
adc
and
jle
jmp
cli
sbb
call
jne
aaa
lods
or
stos
fmul
cld
fwait
roll
cmp
push
mov
mov
test
lret
fmull
lods
mov
cli
orl
das
adc
dec
cmp
ljmp
scas
xchg
in
fadds
addr16
mov
and
lock
in
sbb
scas
mov
push
pop
fsubr
xlat
cltd
or
inc
sbb
adc
out
push
xchg
orl
ja
mov
cmp
adc
das
adc
aam
pop
test
sti
nop
or
call
dec
popa
jp
xchg
fbld
mov
cmp
pop
inc
add
fdiv
xor
imul
jae
ljmp
leave
dec
cld
arpl
jne
inc
jo
iret
xor
push
rcl
mov
or
xchg
inc
jge
sub
mov
mov
xor
sub
cmp
negb
cmpsl
movsl
or
sbb
xchg
out
pop
xchg
int
jecxz
out
mov
jl
movsl
out
dec
mov
cld
inc
int3
fcompl
sbb
and
mov
and
mov
pushw
enter
in
lods
insl
in
or
xor
add
pop
cmpsl
aad
sub
add
enter
sar
mov
imul
outsl
into
nop
cli
int
mov
jae
lock
or
out
add
add
push
adc
push
rcrl
fnstcw
add
push
mov
xchg
test
dec
push
outsb
lahf
and
and
and
pop
cmpsl
push
dec
je
jb
dec
stc
cmpsl
hlt
mov
insl
dec
inc
enter
fisubs
cli
and
fldcw
inc
movsb
lahf
xchg
and
jmp
dec
push
xchg
outsb
mov
pushf
mov
imull
adc
fwait
mov
shrb
lods
sub
fadds
fimull
addl
ret
and
stos
movsl
fs
xor
in
fxch
push
mov
mov
pop
mov
cli
fldcw
pop
adc
xor
in
in
clc
ss
cmpb
jmp
add
dec
cmp
jo
test
xchg
inc
dec
outsl
dec
add
fwait
mov
das
jne
aam
fdivrs
push
sub
jns
xchg
push
incl
repz
push
ret
mulb
shl
pop
fisttpl
lods
and
inc
movsb
sub
push
pop
mov
xor
inc
pusha
cmp
adc
cmp
jae
sbb
xor
imul
popa
movsb
stc
addl
sub
sbb
ds
xor
sbbb
push
jecxz
jmp
sti
or
and
xchg
test
orb
shll
add
push
int
and
rcrb
pop
xchg
aad
pushf
hlt
cmpsl
jl
sti
add
jmp
jge
mov
out
out
add
dec
test
jae
rorl
sahf
mov
jle
pop
outsl
in
movsb
negb
ret
cmp
and
jg
gs
sub
push
push
aad
dec
jge
loopne
mov
inc
add
test
mov
sub
imul
dec
fucomi
mov
mov
fwait
sub
sub
fs
and
mov
std
lret
or
shrb
test
mov
subl
cld
xor
add
mov
aad
int
popa
mov
mov
lea
dec
jb
xor
shr
push
cmp
insl
adc
stos
fdivr
into
cmp
das
xlat
loop
and
fsubrs
dec
inc
rcrb
cmp
jbe
adc
cmc
sbb
stc
or
mov
inc
inc
xchg
lds
and
push
push
mov
shrl
sbb
push
int3
scas
in
lds
testb
push
imul
data16
jp
lret
xlat
jmp
ucomiss
int3
mov
shrl
jo
push
pusha
js
out
jns
enter
jmp
push
test
or
jmp
cld
shrb
jo
ljmp
aad
mov
mov
pop
lahf
push
mov
or
xchg
loopne
sub
and
mov
out
scas
mov
das
push
pop
dec
mov
lret
pop
cmp
xchg
sti
ret
adc
inc
pop
push
lret
aam
ret
in
ds
fisttps
pop
push
ss
ja
les
inc
jp
push
mov
outsl
scas
adc
int
stos
sbb
adc
xchg
jmp
mov
lds
and
movsl
jo
or
lcall
cltd
jb
pop
scas
cwtl
push
jecxz
lahf
cltd
pop
scas
xor
leave
pop
stos
movsl
mov
or
push
xchg
repnz
sbb
inc
pop
leave
adc
std
movsl
mov
cmc
fmul
cltd
inc
daa
es
andb
push
jno
loop
jno
lods
mov
mov
aas
testb
ss
mov
insb
sbb
ljmp
frstor
int
xchg
inc
jns
push
pusha
push
xlat
sub
js
push
cmpl
inc
sbb
push
imul
jnp
cs
push
cld
mov
inc
jns
int
mov
push
popl
imul
sbb
jno
inc
mov
pop
mov
imul
in
inc
cmpsb
fisttpl
and
mov
push
nop
lods
call
aam
pop
in
jp
insl
cmc
loopne
xor
cli
fsubp
mov
push
mov
in
jle
jae
pop
mov
lds
mov
push
pop
repnz
fildl
je
ds
nop
mov
inc
mov
pop
xchg
hlt
jecxz
sti
dec
push
in
sahf
iret
cmp
rcl
popf
mov
test
mov
fcmovb
mov
call
imul
lahf
jnp
add
dec
xor
out
xor
mov
xchg
sbb
mov
mov
outsl
cmp
sbb
call
sub
ret
push
push
or
sub
jno
hlt
out
sar
push
cmp
imul
add
pusha
or
mov
mov
inc
rcrl
fcoml
aad
repz
test
mov
push
cwtl
insl
ljmp
mov
stc
outsl
mov
jbe
fnsave
push
push
mov
cli
pushf
lods
mov
xchg
ds
sub
fwait
out
daa
sub
leave
pushf
insl
or
mov
popa
stos
int3
cmc
cltd
in
jmp
les
aas
repz
inc
push
mov
orb
outsb
scas
adc
sub
fwait
mov
mov
xor
cmp
xor
notb
divb
stos
cwtl
arpl
push
fxch
pop
mov
mov
xchg
xchg
dec
cmpsl
and
adc
std
lret
xlat
clc
icebp
add
js
out
and
pop
jmp
push
fs
xchg
xchg
push
arpl
arpl
and
mov
enter
movsl
pop
inc
lock
ficoms
in
shr
cs
sub
pop
insl
repnz
mov
and
in
lods
dec
int3
and
cmp
icebp
mov
xchg
dec
xchg
dec
mov
xchg
cltd
inc
jg
adc
push
mov
add
lods
sbb
mov
xchg
lret
jb
fs
neg
je
and
inc
pop
fdivrs
mov
in
ljmp
and
daa
iret
xchg
in
mov
nop
or
pop
sahf
stc
push
push
pop
enter
loope
push
lods
dec
jp
adc
test
sub
jns
insb
xchg
js
cmp
shrb
cmp
ret
mov
xor
sub
adc
gs
in
xchg
cmp
lret
popf
or
or
aad
stos
xor
inc
cld
movsb
xchg
int
push
inc
cltd
dec
mov
fiadds
ret
jg
sub
mov
mov
dec
jne
cld
pop
or
jge
dec
and
in
jo
fdivs
js
xchg
sbb
scas
adc
cmp
xor
test
sub
mov
adc
ljmp
aam
adc
rcrl
stc
mov
outsl
sbb
pop
adc
imul
pop
sti
push
das
xchg
icebp
cmpsb
in
int3
lret
sub
jno
je
dec
nop
add
fs
fdivs
jne
cmpsl
aaa
shlb
aas
push
add
push
and
inc
js
adc
mov
test
jb
jmp
rorl
cmp
cmc
loop
out
mov
shrl
imul
mov
or
lea
scas
in
scas
dec
dec
adc
push
out
sbb
data16
xchg
sub
in
iret
lahf
inc
ficoml
cmc
cmp
cmc
insl
cmp
fdiv
fiadds
out
cmp
mov
jle
aad
mov
sub
inc
frstor
stc
xchg
xor
mov
mov
stos
in
dec
icebp
and
mov
repz
sbb
cmp
add
adc
mov
mov
sbbb
fucomi
fcomp
in
sbb
dec
mov
push
loopne
cmpsl
rcrl
sarl
xor
int3
popf
xchg
jb
jbe
push
lods
jmp
add
lock
in
xchg
xchg
or
mov
add
imul
mov
ret
imul
xor
stos
loope
mov
test
push
mov
and
lods
aaa
pop
jmp
sub
xchg
das
push
and
lret
adc
arpl
xor
shlb
push
int
bound
int3
mov
rorb
dec
xor
gs
aaa
out
jbe
popa
mov
dec
sbb
aas
mov
rcrb
push
adc
cmp
dec
cmpl
iret
adc
insl
mov
pushf
pop
push
and
xor
push
jae
or
cmpsb
sarl
mov
mov
xchg
aas
lret
in
popf
cmpsb
add
push
inc
sbb
cmc
imul
adc
sbb
insl
pop
inc
repz
jns
xor
shl
lret
cltd
cmp
jae
and
cmp
clc
ja
adc
addr16
mov
pop
jb
sub
shrl
rorb
jbe
sbb
scas
inc
dec
loope
mov
jnp
je
test
push
aad
push
subl
idiv
arpl
icebp
lret
adc
loop
fisubs
fdivrl
sbb
ss
jnp
mov
sbb
hlt
mov
jo
mov
call
mov
bound
push
repz
sub
push
lods
lret
mov
sti
pop
xor
mov
ficoml
push
xchg
ror
int
rol
xchg
inc
mov
lcall
pusha
sub
lahf
in
xchg
or
inc
loopne
jp
mov
clc
aaa
inc
cmpsl
xlat
sarb
mov
shr
inc
lock
mov
mov
or
inc
push
mov
add
fsubs
hlt
push
jnp
pop
cmp
pop
gs
push
lahf
insb
aad
or
scas
ds
jp
aad
sahf
iret
xor
push
fcoml
jge
inc
std
icebp
std
ljmp
pop
std
push
lret
mov
dec
das
loope
jae
mov
pop
mov
xor
add
iret
cmp
je
sbb
xchg
mov
mov
rcrb
mov
out
fldt
pushf
cmpsl
cmp
pop
mov
dec
sti
jmp
xchg
movsl
sbb
arpl
aad
sub
push
xchg
add
jge
inc
iret
out
lcall
in
xor
dec
sbb
and
xchg
pop
mov
jl
les
jne
xchg
sbb
and
dec
cmp
loopne
dec
inc
fstpt
jo
fisubrs
out
pop
dec
sub
call
push
mov
push
and
ljmp
xchg
cltd
and
add
adc
mov
movsb
lds
lcall
mov
cmpsl
push
aas
fwait
out
lahf
xchg
inc
rcrl
test
cltd
jmp
push
sarb
orb
outsl
fwait
mov
bound
mov
nop
jbe
repz
adc
push
scas
sahf
sbb
xchg
sbb
ds
sub
and
sub
adc
or
sbb
aad
jecxz
inc
push
mov
imul
sbb
stc
xor
adc
pop
out
cmpsb
loope
mov
mov
mov
sbb
lahf
sbb
xor
call
add
xchg
inc
and
sub
rorb
pop
repz
fs
pop
imul
std
out
or
shl
dec
cmp
fsubrs
push
pop
cs
mov
int
int
mov
out
xchg
sahf
insl
adc
pusha
sub
loop
cs
dec
fs
dec
lcall
les
ds
jno
out
sbb
mov
add
out
scas
xor
jg
dec
push
jno
mov
std
mov
mov
add
cmp
dec
or
push
xor
lret
scas
dec
and
int
xchg
idivl
adc
dec
mov
cmpsl
xchg
push
imul
lds
mov
fs
adc
xchg
cmp
xchg
and
idivl
fucomip
mov
stc
inc
or
les
xor
mulb
inc
xor
cmp
or
sahf
in
jecxz
dec
pop
sbb
dec
jns
push
mov
test
lods
inc
outsl
mov
fdivp
or
aad
dec
out
mov
fxch
dec
lods
in
imul
cmpb
test
fadd
xor
movsl
fs
or
sbb
cmp
dec
in
mov
mov
xor
push
jg
mov
insl
scas
xchg
adc
inc
xor
leave
push
mov
movsb
mov
and
lahf
pop
jecxz
or
leave
loope
push
inc
dec
sub
das
xchg
dec
pop
mov
mov
cmp
ficoml
push
dec
movsb
mov
mov
pop
xor
inc
cmp
dec
inc
jmp
and
out
ljmp
mov
icebp
push
adc
or
aas
push
jmp
push
out
sub
stos
inc
mulb
dec
mov
jl
fildl
inc
in
jae
mov
test
xchg
mulb
xor
push
aad
shr
pop
les
push
push
jg
jge
bound
push
decb
shll
repnz
seta
xchg
rorl
pop
outsl
mov
clc
sahf
jp
hlt
xchg
je
fdiv
test
xchg
js
adc
andb
xlat
lea
sub
jg
ficoml
dec
dec
dec
sbb
call
int3
fidivl
dec
jb
loop
fldt
lret
or
mov
inc
jge
lds
push
xchg
adc
imul
sbb
daa
xor
ja
push
adc
ret
jae
and
push
das
rcl
mov
cmp
test
dec
xchg
fidivs
mov
xor
xor
push
mov
ss
cmp
shl
pop
xor
dec
sub
mov
add
sahf
cs
mov
lods
int
sub
jno
sub
inc
push
cmp
scas
push
lcall
push
cmp
mov
xlat
add
dec
inc
and
movsb
mov
add
out
aas
daa
lahf
add
pop
ret
and
xor
xor
or
imul
rcrl
mov
cmp
shrb
jae
dec
push
jp
sbb
subb
mov
mov
ficomps
jg
xchg
inc
call
pop
popa
mov
cmp
sbb
cltd
subl
push
dec
repz
add
push
clc
loope
xchg
inc
adc
push
xchg
idivl
mov
ret
shll
sarl
ja
shl
test
jg
mov
shrl
mov
out
or
fs
ret
push
cmp
xor
mov
scas
push
lret
push
into
mov
and
cmp
mov
add
out
jae
jne
dec
test
jae
and
repnz
ret
repnz
out
cmc
sub
fsubp
call
adc
add
lds
inc
dec
pop
and
jge
add
scas
xchg
jo
adc
mov
cmp
lret
inc
sete
popf
add
leave
ret
and
jno
mov
sub
xor
loop
lea
adc
sub
test
xor
lahf
ret
add
inc
fsubl
adc
xor
pop
pop
xor
sahf
popa
cmp
pop
xor
sub
jecxz
stos
shll
xchg
pop
cmc
sub
or
mov
mov
pop
or
sar
out
lahf
dec
repz
pop
inc
int
cmp
push
in
xchg
push
and
cmpb
inc
push
adc
jb
pop
inc
lods
or
jnp
cmpsl
add
scas
pop
rorb
pop
lds
mov
and
fidivrl
into
mov
cli
jge
mov
push
mov
movsb
mov
sbb
cmp
mov
movb
and
mov
lret
xor
mov
es
psubsb
int
mov
add
lret
std
xchg
xchg
or
add
lods
lods
dec
repz
rcrb
fcoms
sub
fcoms
aad
dec
push
mov
sub
mov
ret
mov
pop
aam
clc
dec
mov
sbb
cli
mov
xchg
jmp
push
leave
and
mov
popf
jb
dec
mov
push
jbe
pop
mov
sub
and
xor
push
dec
pop
jmp
int3
mov
gs
jl
xor
mov
and
iret
dec
or
add
jl
test
movsl
cld
add
dec
out
pop
sub
xchg
inc
mov
mov
je
mov
pop
or
rorl
xlat
cmp
sbb
andb
or
test
cwtl
in
xchg
mov
pusha
outsb
fisttpll
lods
loope
mov
in
xor
lods
stc
aad
sahf
or
jae
lods
pop
outsl
push
pushf
dec
cltd
daa
sub
or
dec
and
mov
fwait
or
cmp
cli
mov
sub
nop
sub
sbb
jno
add
jmp
fcmovnb
lods
cs
frstor
movsl
rolb
sub
jge
outsb
sbb
cli
push
stc
lods
and
sub
aas
outsb
movsl
loopne
jp
pop
shll
scas
push
xchg
inc
sbb
inc
xchg
or
pop
mov
push
rcl
push
xchg
pop
scas
and
in
and
pusha
dec
dec
xor
and
fwait
jge
shl
sub
or
xchg
lret
test
xorb
out
jbe
jp
xchg
sub
lcall
fisttpll
mov
add
imul
cld
frstor
andl
aaa
pop
inc
push
lahf
leave
repz
out
cli
adc
adc
mov
shrb
mov
cmpsb
in
pop
push
pushf
sub
or
lret
adc
outsb
shlb
push
lock
xchg
mov
mov
xchg
jle
scas
mov
inc
scas
ss
cmpsl
mov
push
push
nop
cmc
test
push
inc
pop
mov
and
xchg
cmp
shr
in
fcomps
xor
out
adc
inc
mov
dec
push
pop
sbb
adc
sbb
aad
sbb
fadds
mov
push
scas
xchg
xlat
push
out
jmp
mov
lahf
mov
push
pop
sar
mov
mov
repz
rorb
movsb
subl
push
imul
fbstp
cmc
repnz
adcl
xlat
lea
sbb
push
iret
or
push
test
scas
in
cmpsl
neg
or
jno
mov
fmuls
sub
xchg
repnz
jne
js
and
push
int3
xor
dec
and
std
call
and
adc
test
pop
xchg
stos
inc
push
stc
add
jae
jae
subl
push
inc
pop
pop
leave
sub
push
inc
repnz
mov
insb
sti
jo
std
into
call
fwait
into
cwtl
test
add
dec
lds
stos
lret
dec
or
subl
pop
mov
in
adc
inc
adc
stos
cs
or
mov
das
pop
mov
inc
adc
add
aaa
push
lods
das
sub
mov
jb
das
ja
test
inc
xchg
in
inc
push
push
and
mov
mov
push
adc
mov
dec
mov
mov
mov
mov
xchg
inc
std
mov
xor
mov
outsl
push
into
arpl
adc
xor
jb
pop
pop
inc
mov
adc
loopne
sahf
testl
nop
lahf
gs
iret
imul
dec
pusha
les
or
sub
push
mov
jmp
out
mov
das
jns
mov
jne
dec
daa
fistps
in
add
mov
mov
mov
mov
ljmp
test
adc
or
pop
int3
inc
pop
mov
sti
pop
mov
pop
popf
call
repz
cmp
xchg
ret
imul
mov
loopne
xchg
fwait
loopne
mov
xchg
mov
sbbl
stos
xchg
mov
lret
mov
sub
adc
xor
inc
lea
xor
push
fmul
jns
jo
shl
pushf
pop
movsl
les
fimull
jns
clc
mov
add
and
ret
ret
out
pop
cwtl
cmp
mov
nop
pop
cmp
fistps
mov
ja
into
jne
test
enter
lock
in
mov
cmpsl
and
fcomps
adc
cli
insb
cmp
insl
or
xchg
call
dec
sub
inc
test
mov
roll
filds
jg
sub
fiaddl
out
pop
sbb
mov
dec
dec
jns
jno
push
testb
shlb
test
imul
gs
sub
js
mov
pop
fbstp
hlt
sti
das
sarl
mulb
es
dec
sar
std
push
gs
in
jo
test
xlat
mov
dec
rcl
loopne
xchg
stos
data16
popa
or
je
or
js
pop
loope
xchg
popa
jo
inc
shl
mov
in
inc
cmp
inc
mov
sahf
aas
inc
mov
fbld
les
gs
aas
popa
pop
xor
xchg
loop
xchg
popf
mov
push
cmp
mov
shll
mov
add
xorb
and
test
mov
ret
pop
inc
insl
cmp
mov
stos
popa
rcll
int
mov
mov
jle
int3
je
mov
push
xchg
lret
ret
pusha
in
push
dec
sbb
or
dec
mov
les
ret
rcrl
test
jmp
push
cld
aam
scas
xor
outsb
adc
shrl
nop
fisttpll
dec
out
mov
xor
dec
add
ret
out
fiaddl
outsb
gs
je
insb
push
lahf
out
pushfw
pop
pop
lret
sbb
or
into
pop
jl
mov
xchg
push
arpl
cmpsl
loop
mov
cmp
mov
repz
inc
push
outsb
repz
push
iret
push
xchg
push
adc
adc
insl
add
mov
iret
dec
stc
in
in
adc
cmp
fbstp
pop
in
loop
pop
sti
popl
insl
insb
call
lcall
rorb
mov
lock
in
addr16
mov
jmp
out
sub
or
mov
les
cmp
addr16
add
push
cli
sub
mov
repz
cmpb
stc
cltd
js
out
xchg
push
divl
mov
lods
pop
mov
cltd
pop
mov
sub
add
idivl
cmp
sub
push
xchg
icebp
mov
shl
mov
mov
jns
fldt
adc
dec
push
sbb
and
nop
testb
movsl
sbb
outsl
lods
out
lods
xchg
pop
inc
dec
jb
push
inc
ficoms
push
movsl
lea
fstps
mov
hlt
add
insb
int
imul
cmp
out
xor
out
adc
pushf
jbe
or
mov
cmp
aas
add
sbb
add
dec
sub
je
subb
mov
shlb
pop
inc
cs
xor
orb
mull
movsl
or
cmpsl
fsub
push
subl
dec
int3
or
push
in
call
imul
xchg
adc
xchg
jp
xor
sbb
push
cli
lcall
push
mov
cld
std
adc
mov
pop
icebp
xor
fisubrl
fbld
add
xor
lods
pop
cmpb
and
outsb
inc
in
jae
dec
sbb
jo
mov
and
in
pop
out
ljmp
mov
and
jmp
sbb
mov
insb
or
add
lods
pop
mov
inc
clc
push
stos
shll
mov
push
aaa
xor
es
icebp
mov
mov
cmp
jle
je
cmp
aad
or
repz
or
sub
cs
into
sbb
rorb
movsl
add
inc
adc
jb
scas
and
int
mov
fiadds
xlat
icebp
in
in
rcrl
icebp
mov
mov
aas
adc
adc
lods
adc
aas
add
movsl
test
dec
sub
push
inc
cltd
sub
jbe
arpl
jecxz
out
pop
dec
rorb
aam
arpl
enter
jno
or
jmp
jns
rolb
xchg
xor
dec
inc
fwait
push
cwtl
imul
mov
add
inc
mov
jne
ss
mov
orl
jae
fdivrl
pop
sbb
pop
repnz
mull
mov
lret
pop
jnp
stc
sbb
lods
adc
and
in
add
and
cmc
xlat
scas
dec
cld
enter
and
push
push
cmp
sbb
pop
shrl
mov
js
cmp
inc
cmp
inc
jns
jl
cmovle
hlt
mov
fs
xchg
xor
test
arpl
das
sub
ret
inc
lahf
pop
cmp
dec
stos
fs
movsl
das
xchg
cmp
fwait
mov
inc
ret
loopne
jl
loopne
imul
cmp
xchg
fstpt
into
jmp
jb
pop
int
mov
mov
push
js
push
dec
into
inc
add
sbb
sub
adc
pop
sub
push
aaa
lods
adc
stc
arpl
out
xor
sub
iret
dec
cmp
pop
mov
sarl
jg
mov
inc
shll
lods
leave
iret
scas
or
loopne
call
insb
clc
push
sbb
cs
add
pop
mov
xor
imul
push
jo
sub
sub
inc
cld
cmp
jg
ss
or
mov
into
cmp
mov
dec
lret
xchg
jb
add
push
xor
mov
cmp
repz
ret
jp
call
adcl
inc
cmp
arpl
push
adcl
mov
shr
jl
sarl
lods
add
inc
sbb
loop
flds
adc
js
or
mov
lahf
inc
jmp
popf
test
push
repz
jnp
inc
pop
xchg
in
push
mov
push
dec
lods
jbe
hlt
scas
add
sub
push
push
push
bound
sbb
push
call
add
mov
js
mov
pop
insl
gs
shrl
add
fidivl
push
in
cli
add
xchg
jmp
lcall
xchg
imulb
push
stc
enter
mov
jbe
int
scas
aas
jae
mov
ret
mov
out
and
sbb
insb
pushf
or
mov
cmp
gs
daa
mov
push
push
cwtl
out
nop
jecxz
insb
test
mov
jae
jmp
push
xor
sbb
aaa
mov
iret
mov
scas
jecxz
jmp
mov
pop
mov
loope
mov
fs
push
adc
arpl
sbb
jmp
lock
test
std
movsl
ret
cli
sub
adc
jle
xor
adc
js
pusha
lret
or
and
es
repnz
call
cmp
push
mov
jbe
add
xchg
ja
lret
ss
jle
pop
mov
add
divb
das
stos
xor
or
cld
andb
test
clc
cmp
out
pusha
sbb
pop
orl
fbld
arpl
bound
pop
push
xchg
sbb
mov
out
and
adc
in
sahf
xlat
rolb
clc
add
stos
cmpb
xor
xor
xchg
inc
add
loope
xor
pop
ds
mov
data16
aad
xchg
sub
aaa
cmp
std
pushf
mov
pop
mov
jecxz
sub
push
inc
leave
int3
xchg
sub
stos
bound
mov
out
sub
das
cli
test
out
insb
insl
cmp
fwait
sub
lock
xor
pop
pop
inc
dec
mov
sub
mov
bound
arpl
lods
xor
incl
scas
mov
scas
fistl
or
pop
aam
dec
pusha
mov
xor
and
lea
js
lea
cmp
pop
leave
dec
pop
mov
cmp
dec
xor
js
xchg
mov
push
lea
jg
add
aaa
pop
lcall
pop
xor
mov
sbb
cmc
call
adc
sbb
test
out
fs
test
fdivl
add
and
xchg
sub
in
mov
mov
or
in
or
lahf
and
sahf
xchg
outsl
sbb
pop
dec
pop
inc
or
lcall
push
mov
or
imul
xchg
mov
inc
push
adc
inc
mov
pop
and
xlat
sub
sahf
adc
dec
lds
pop
mov
outsb
pop
shr
cli
int3
in
mov
jbe,pt
or
push
xchg
and
loop
dec
clc
push
sbb
pop
inc
push
das
mov
lds
imul
jmp
popa
mov
jb
outsl
cmp
push
mov
inc
jno
fistpll
sbb
aaa
xor
jno
pushf
lret
cli
adc
arpl
addr16
xchg
dec
outsl
and
mov
push
xor
mov
cltd
repnz
push
icebp
add
imul
add
adc
and
loop
jo
int
jmp
jo
dec
push
push
roll
xchg
imul
je
fisubs
loop
or
int3
adcl
ja
fsubrl
push
xchg
dec
incl
mov
push
push
je
rcll
xchg
xchg
lods
sub
test
mov
outsl
push
sub
lods
sar
std
dec
xor
inc
aaa
mov
pushf
adc
pop
mov
ds
cmp
sbb
push
adc
jecxz
lds
cwtl
cmp
cmp
inc
add
cmp
adc
lock
jns
mov
lahf
ljmp
or
dec
std
in
xchg
data16
jmp
inc
lret
pusha
jl
sbb
rcr
fs
xchg
and
ds
std
mov
lcall
int3
inc
adc
add
mov
xchg
out
fnstenv
jle
sbb
push
cmp
lcall
pop
or
push
dec
fwait
push
cmp
xchg
jnp
mov
push
lcall
lods
xchg
xchg
adc
nop
jno
adc
movsl
push
jno
push
pop
in
mov
inc
mov
inc
popl
ljmp
jo
cltd
orl
sbbl
ds
pop
scas
mov
lds
add
rcll
aam
xchg
ss
adc
jnp
sub
xchg
in
jle
push
jnp
mov
xchg
std
pop
jo
mov
sbb
or
subb
daa
outsl
jl
mov
jmp
xor
adc
js
push
xchg
loope
or
sbb
sbb
fmulp
mov
jo
sbb
or
cmp
mov
inc
aas
xlat
inc
std
scas
hlt
xchg
out
test
jle
stos
arpl
push
daa
shll
es
jnp
dec
enter
mov
out
adc
adc
popf
mov
push
pop
cltd
int
xchg
push
cld
dec
addr16
sbb
rcr
ficoml
sub
push
rcrl
cmp
or
xor
mov
jmp
xor
push
jae
or
dec
inc
xchg
pop
cld
lods
mov
aad
in
and
and
xchg
lock
repz
imul
pop
adc
psubq
mov
push
arpl
test
mov
das
xchg
insl
popa
inc
push
aam
in
inc
test
fldl
movsl
mov
mov
ret
xchg
inc
cld
inc
fwait
movsb
mov
adc
jg
in
fisubl
rcrb
adcl
xor
push
cwtl
mov
push
sbb
aam
mov
sti
dec
mov
out
rorl
mov
pop
lret
js
xor
repz
dec
ret
mov
scas
enter
rol
fs
sbb
test
pop
mov
mov
jp
add
iret
gs
mov
push
ret
outsb
pop
sahf
xchg
or
mov
mov
xchg
inc
jns
ljmp
addr16
in
jb
xchg
out
inc
xchg
mov
out
add
fnsave
dec
daa
push
call
xor
in
mov
push
push
add
imul
aaa
js
push
mov
lret
xchg
pop
pop
ds
cmp
mov
jb
cmp
in
mov
dec
pushf
aam
mov
mov
jl
push
jle
mov
decb
fstpl
xchg
push
pop
iret
call
add
out
and
mov
push
cld
fs
mov
movsb
mov
xor
adc
add
stc
and
jg
mov
clc
insb
out
cmpsb
mov
xor
add
and
repz
movsb
pop
xchg
insl
add
popf
jp
rolb
fsubl
jp
mov
mov
pushf
ret
jb
push
inc
test
das
repnz
movsb
push
sub
add
cmpl
addr16
ljmp
mov
jmp
ja
or
adc
ljmp
xor
mov
mov
ud0
repz
insl
pop
arpl
cmp
jp
mov
mov
pusha
pusha
cmp
pop
adc
cmc
stos
ret
sbb
cmp
xchg
xchg
jecxz
stos
mov
mov
out
outsb
insl
stos
add
clc
adc
movsb
xchg
lahf
pusha
std
ljmp
xchg
and
jno
faddl
andl
iret
rorl
add
sahf
mov
out
adc
in
addr16
inc
xchg
mov
popa
jmp
cmp
mov
sarl
in
pop
test
dec
adc
jbe
icebp
popa
shrb
and
stos
loop
dec
pusha
xor
inc
push
je
xchg
dec
cs
dec
orl
mov
fs
jno
out
enter
imul
adc
idivb
inc
scas
out
bound
jbe
into
adc
lahf
stc
ljmp
mov
xchg
loop
xor
arpl
jb
inc
sbb
test
adc
mov
xchg
inc
mov
mov
fwait
ss
xor
push
adc
mov
mov
inc
pop
push
imul
aad
xchg
cmpsl
imul
popa
mov
jbe
cs
ljmp
mov
fsubr
adc
iret
idivl
push
fcoms
inc
push
and
push
adc
scas
push
mov
mov
mov
nop
ss
xchg
rcrl
jns
ljmp
lcall
mov
push
mov
mov
jnp
mov
ljmp
mov
cmp
inc
mov
gs
fsubs
sbb
fnstcw
jb
xchg
jecxz
push
push
cmpsl
push
sub
sahf
in
les
or
lret
loop
mov
dec
insl
daa
enter
lret
cmp
mov
scas
sub
mov
lret
out
in
ret
leave
cmpsl
jecxz
jns
jp
in
adc
sub
faddl
add
mov
insl
push
push
and
fadds
xchg
push
mov
lods
jne
and
outsb
push
rorl
enter
sbb
wbinvd
mov
push
jns
jge
add
fwait
mov
loope
nop
pop
push
popl
mov
jge
adc
sub
adc
lret
mov
testl
scas
lret
outsl
cmpb
pushf
mov
push
sti
test
xchg
cmpsl
inc
push
aam
jbe
popa
inc
test
outsb
mov
sti
popf
cs
lods
xchg
mov
popf
fisttpl
stos
dec
sub
ss
out
ret
mov
dec
imul
add
pop
cmp
push
cmp
push
int
cmpl
testb
sti
jne
lock
mov
lret
out
jl
cmp
stos
xor
pusha
mov
and
add
hlt
push
enter
and
add
leave
in
fsub
mov
mulb
das
repz
jns
cmp
scas
mulb
xchg
mov
or
iret
in
pop
lcall
js
and
xchg
push
pusha
sub
rclb
inc
bnd
dec
cmp
movsl
jae
mov
add
cmpsb
adc
adc
das
cmpsl
ret
subl
sbb
aas
cs
cwtl
mov
arpl
mov
and
popa
fistpl
add
fwait
adc
sbb
ds
dec
les
test
iret
inc
cmp
mov
dec
xchg
mov
sbb
mov
sub
push
test
or
and
xchg
das
push
adc
sbb
fsubs
dec
cltd
int3
or
fwait
sub
cli
jnp
mov
sbb
or
add
jbe
and
roll
cmp
mov
ss
cwtl
enter
mov
jmp
inc
daa
or
iret
add
jae
outsb
cmp
mov
repnz
mov
xlat
add
test
outsb
shl
sbb
sub
movsl
jge
mov
push
cmp
divl
add
jbe
clc
mov
ret
mov
cli
imul
pop
jno
sbb
or
jnp
nop
stos
sbbl
jg
xchg
in
movsb
sbb
push
adc
mov
or
fldlg2
jmp
jmp
inc
mov
mov
int3
dec
sbb
xor
fwait
or
jnp
fcoml
mov
dec
aad
dec
mov
sbb
push
sub
inc
out
inc
mov
sbb
les
sti
shll
sti
push
dec
sub
mull
mov
stos
in
test
popa
in
ds
testb
inc
inc
xchg
test
dec
add
ret
push
push
mov
stos
sub
cmp
jbe
adc
cmpsl
inc
jle
movsl
jno
jbe
mov
jnp
out
dec
pop
xchg
cmc
fwait
lret
dec
lods
iret
inc
jnp
fwait
js
icebp
xor
in
ja
and
inc
or
jae
jbe
lret
aas
or
lahf
out
add
fnstenv
cmp
mov
aaa
sahf
jns
pop
sub
xor
imul
push
aas
dec
fs
divl
icebp
js
dec
xchg
mov
sti
imul
and
aas
mov
lods
popf
mov
popa
ljmp
popf
cmp
enter
jmp
cmpsl
cltd
jge
sub
nop
sub
lret
add
cmp
aaa
icebp
add
xchg
lock
xor
gs
pop
cmp
fstpt
jb
mov
and
inc
je
push
dec
inc
xchg
pushf
fwait
and
sub
push
dec
cmp
jg
and
jo
push
mov
dec
in
ret
fsub
jne
sub
mov
loop
jb
pushf
inc
pop
in
pop
or
pop
mov
roll
cmp
xchg
xorl
jge
into
push
jge
jno
jno
xor
jg
lock
ss
cmpb
xchg
mov
push
xchg
dec
sbb
icebp
push
xchg
push
dec
lods
sti
ret
mov
cld
scas
inc
jbe
dec
xchg
inc
mov
aam
push
loopne
adc
cltd
mov
xchg
aad
cmc
shrl
sbb
arpl
xchg
nop
movsb
jbe
stos
scas
loope
idivb
cmpsl
xor
cmc
not
cmp
adc
or
stos
jnp
mov
fsub
fimull
xor
sar
mov
add
ret
jmp
cmp
ds
sub
pop
dec
push
jp
adc
movl
add
pop
adc
je
testl
int3
icebp
loop
sub
in
pop
xchg
cmp
cli
insl
out
jmp
hlt
ljmp
inc
popf
outsl
dec
mov
vorps
sbb
push
mov
inc
add
imul
repz
push
cld
mov
icebp
mov
ss
dec
shlb
mov
mov
lcall
stos
jne
push
int3
jg
and
push
push
inc
dec
sbb
loope
push
pop
sbb
aas
fistpll
outsb
and
mulb
mov
adc
aas
daa
mov
sahf
adcl
sahf
cltd
fcmovne
and
and
cmp
push
cltd
das
push
jg
inc
mov
push
sbb
leave
push
in
movsb
pop
sbb
in
inc
ss
push
xchg
in
xor
sub
insb
adc
cmc
cmc
rorl
or
mov
pop
jecxz
mov
sub
aaa
inc
xchg
popf
sbb
push
sbb
xchg
insb
mov
fs
insl
pop
shlb
fdiv
inc
or
jno
xor
popa
ss
loopne
mov
cmc
cld
fiaddl
mov
xchg
test
or
movsl
inc
fwait
cmp
enter
pop
cmpsl
test
stc
fstl
jg
dec
sbb
mov
cli
ja
in
add
inc
iret
dec
into
xor
jns
pushw
push
inc
adc
mov
jns
test
mov
adc
xchg
and
mov
testl
cld
push
push
cmp
lahf
inc
scas
or
add
imul
sbb
loopne
mov
xor
lock
daa
scas
es
sub
mov
jle
repnz
pop
addl
xorl
scas
cmp
test
call
push
push
inc
xor
scas
pop
lods
and
push
imul
xchg
mov
imul
repz
mov
inc
or
add
pusha
xchg
push
jo
sahf
adc
aam
dec
and
into
push
sbb
xor
imul
mov
fstpl
or
jg
xor
xchg
or
cmp
jl
sahf
fwait
inc
adc
mov
xchg
mov
xlat
jne
dec
jl
test
mov
movsb
mov
lods
aas
ljmp
imul
dec
xchg
jecxz
imul
lret
and
rorl
loop
pushf
int3
xchg
arpl
push
out
mov
pop
negl
inc
adc
cltd
push
cwtl
add
imul
add
clc
addb
fistpl
lods
mov
sub
int
adc
inc
mov
mov
dec
fwait
push
lret
xchg
shrl
nop
sub
push
jle
movsb
jmp
jb
dec
cwtl
in
add
das
outsb
mov
xchg
aam
lds
mov
js
cmp
jb
testl
adc
sub
in
fdivs
mov
cwtl
ja
mov
arpl
sti
or
in
in
rorl
mov
ret
lahf
pop
jns
loop
fisubrl
xchg
out
aas
rolb
call
ret
stos
and
out
or
push
jmp
sbb
shrl
mov
push
lret
jne
mov
pop
jns
add
data16
repnz
sub
xchg
push
sub
push
iret
jmp
mov
mov
jns
push
pop
fldenv
scas
leave
sti
jno
mov
dec
loop
xor
ljmp
jg
das
imul
repnz
in
jle
ja
push
jge
subl
jbe
je
fcmove
outsb
adc
and
fld
ror
xchg
enter
cmpb
dec
inc
inc
dec
sbb
std
xor
cmpsl
test
dec
lods
daa
cmp
mov
mov
push
sbb
xlat
pusha
xor
jae
xchg
fisttpl
lea
push
clc
js
mov
dec
scas
xor
xlat
and
ficomps
jne
sbbb
out
popa
ds
lret
int3
mov
cwtl
dec
jb
sub
fwait
sti
cmpsb
in
cwtl
inc
adc
xor
outsb
sub
cmp
pop
cltd
popf
inc
test
outsb
xchg
add
adc
pop
fmull
pop
or
ret
or
add
lds
lcall
and
jbe
xchg
sub
mov
sub
sub
stc
cmp
jb
repz
jae
mov
inc
jbe
jmp
pop
or
bound
and
lahf
divl
mov
inc
mov
dec
sub
jns
out
ret
jae
lret
fs
mov
loop
in
sbb
sub
lock
lcall
rcrl
or
shll
mov
add
or
or
sahf
call
jl
pushf
imul
jbe
xor
cltd
shll
outsl
dec
loopne
add
xor
mov
mov
enter
pop
jg
xchg
pop
or
cmp
lods
stos
mov
push
cwtl
pop
je
xchg
xchg
daa
push
inc
add
adc
inc
jmp
sub
fcomps
mov
test
push
leave
lret
mov
outsl
xor
cld
lret
aam
mov
cmpsl
xlat
pop
jecxz
push
ret
icebp
scas
dec
mov
out
ljmp
dec
pop
fstps
mov
push
dec
add
jne
repnz
sub
and
scas
call
popa
bound
in
aas
sub
xor
push
ja
pop
mov
cmp
lods
sbb
lock
jp
and
sbbb
cmpsb
and
mov
enter
movsl
fcmovu
pop
aad
lods
inc
jo
call
out
arpl
shll
push
lcall
jne
test
mov
pop
testl
mov
mov
push
push
push
ss
ret
cmp
fbstp
dec
mov
xlat
adc
fwait
ja
sub
or
cli
or
rorl
es
push
repnz
into
jno
in
addr16
lds
jo
pop
xchg
std
incb
loopne
stos
lds
addl
mov
shrl
repz
xorb
loope
jge
push
mov
stos
fildll
subl
cltd
or
andl
sub
ljmp
pop
iret
mov
jbe
fdivrs
stos
les
dec
sub
mov
stos
mov
into
aam
mov
enter
inc
fidivl
adc
sbb
decb
ret
pop
loop
pop
sbb
xchg
cmp
aas
ds
add
negb
pop
mov
mov
mov
jb
xor
icebp
lock
int
jmp
xlat
loopne
out
sub
aas
push
stc
cmc
xchg
xchg
sub
mov
hlt
add
add
pushf
pop
xchg
aam
aad
sub
in
sbb
sahf
jns
mov
lret
rorb
lods
stos
dec
gs
mov
dec
sub
outsb
sub
push
shlb
scas
lea
sbb
fistl
inc
shr
shlb
sahf
addr16
es
std
stos
clc
aad
fstps
test
stos
ffreep
mov
or
imul
fdivs
mov
daa
repnz
int
addr16
mov
in
in
fmuls
fucomip
dec
inc
std
movsb
ss
mov
jmp
lret
fiaddl
add
xchg
cwtl
mov
mov
mov
dec
cltd
subl
push
imul
ja
les
mov
sub
stos
or
rolb
jecxz
and
test
lea
push
inc
dec
mov
data16
ss
adc
sub
jno
adc
mov
lea
mov
xchg
and
push
dec
lock
les
add
in
adc
xor
scas
in
fcmovbe
pop
dec
arpl
cmp
cli
hlt
enter
jns
lds
das
pop
sbb
dec
dec
pop
mov
adc
xchg
mov
dec
call
push
push
in
outsb
pusha
dec
pop
lcall
inc
lcall
sbb
insl
ret
xor
xchg
imul
ret
or
fistpl
sbb
cmpsl
cmp
add
fisttpl
xchg
jecxz
sahf
jne
jg
ficompl
jmp
bound
push
iret
cwtl
sbb
inc
ja
mov
ficoml
jo
lahf
sub
rclb
hlt
pop
push
sub
movsl
dec
adc
js
xlat
dec
ljmp
jno
stos
pop
fidivl
inc
js
sbb
fwait
pop
out
cmp
mov
in
leave
pop
xor
dec
cli
or
test
rcrl
push
push
out
popf
test
xor
ds
out
xchg
movsb
fnstsw
mov
cmp
rcrl
mov
adc
dec
sbb
cwtl
jmp
push
sbb
xchg
arpl
mov
inc
lret
adcb
test
jmp
sub
scas
decl
and
lods
hlt
add
and
cmp
xor
pop
pop
div
cltd
pop
push
and
sub
mov
sbb
aam
ficompl
fmull
enter
push
xchg
jbe
aas
xchg
scas
mov
jmp
sbb
in
test
in
in
add
stos
lods
sub
stc
cmp
dec
cmp
sbb
dec
pop
pushf
adc
dec
xchg
gs
push
push
mov
jne
pop
pop
add
adc
call
mov
cwtl
adc
lds
es
mov
das
sbb
addr16
xchg
xor
cld
sbb
push
xor
pop
gs
cmp
jp
jnp
cmp
sbb
stos
mov
dec
scas
mov
push
cmp
or
jp
add
imul
mov
lods
in
mulb
ret
dec
or
xor
out
leave
xor
int3
cli
cli
jae
es
das
in
mov
adc
cmp
rcrl
fldl
inc
sbb
clc
enter
push
in
ss
add
and
in
addr16
in
into
mov
cmp
mov
mov
add
dec
popa
gs
loopne
pop
mov
test
xor
or
sahf
lahf
loopne
shl
and
imul
xchg
notb
mov
jmp
pushf
ret
add
popl
inc
add
dec
sub
loop
lahf
push
pushf
xor
cmp
push
mov
or
mov
jne
mov
mov
andl
jl
xor
ficoms
add
insl
mov
bound
jle
rcrl
sub
push
inc
aas
lret
add
cld
cmp
aam
pop
ja
ljmp
pop
sub
sbb
inc
fnstsw
insb
movsl
adc
pop
outsb
dec
in
pop
hlt
push
sub
call
clc
xlat
outsl
adcl
imulb
cmp
imul
test
push
jbe
add
cmp
cmp
mov
xor
lret
popa
xchg
ror
adc
sahf
xchg
out
add
mov
inc
lods
imul
pop
fcompl
sub
dec
shlb
mov
xor
outsl
lea
repnz
aas
call
inc
loop
mov
stc
imul
sbb
sbb
rcll
sahf
scas
mov
inc
scas
mov
inc
clc
les
pushf
ja
les
mov
in
xor
mov
jno
jo
data16
add
and
ds
popf
lock
push
subb
and
jne
dec
add
mov
xor
and
cmp
or
inc
aam
add
inc
mov
mov
daa
js
test
jmp
pause
adc
cmp
and
lea
outsb
fs
sar
xor
xchg
jl
jae
test
fildl
push
sbb
pop
fidivrs
xor
add
pop
sub
mov
jmp
push
lock
das
stos
sahf
imul
sub
shll
mov
stos
or
inc
adc
das
sarl
jne
pop
pop
arpl
mov
into
jge
mov
mov
call
push
jae
mov
or
enter
xchg
sub
and
cmc
loopne
inc
fdivrs
aam
jge
xchg
mov
sbb
movsl
lret
xlat
fnstenv
mov
aas
sub
sub
jno
aaa
xor
sbb
inc
mov
orb
mov
push
aaa
scas
out
fs
aam
pop
gs
push
jnp,pt
push
jo
out
ret
outsb
sub
or
stos
es
not
pop
aam
mov
sti
rcr
rol
insl
out
xor
adc
std
incb
mov
shr
mov
cltd
and
sbb
or
ret
sub
mov
cld
sbb
mov
jmp
insb
ja
sub
ret
jnp
mov
cmp
cmc
sub
aam
add
test
repz
cmpsl
cmp
mov
fcomp
scas
or
xchg
push
cmp
mov
xchg
rcrb
cmc
fst
nop
fisubrl
pop
pop
inc
mov
jle
xchg
data16
lock
test
and
mov
mov
sub
mov
ds
sub
clc
or
jo
pop
and
insb
xchg
shrb
sbb
ja
sbb
ja
pop
into
xor
push
xor
std
fcomi
mov
dec
shl
or
pop
push
and
repnz
test
pop
in
add
pushf
xor
sbb
cmpsl
in
roll
pusha
icebp
mov
push
mov
cltd
addb
cld
pop
push
xchg
shrb
add
je
or
and
lcall
jecxz
pop
push
test
cmp
ds
pop
jbe
mov
xchg
push
inc
cltd
pop
inc
push
jnp
out
cmp
xchg
movsl
cltd
data16
add
aam
fistpll
test
aas
aam
pop
xchg
mov
lock
out
sbb
repz
add
fs
sbb
jo
add
sbb
rcrl
cmp
inc
dec
fadd
lock
seta
clc
loop
cld
fdiv
mov
xchg
add
push
das
aad
nop
loop
sbb
fimull
pushf
lret
loope
push
rclb
mov
dec
test
int
repnz
pop
jnp
or
dec
push
push
or
popf
dec
arpl
jle
mov
fsubs
add
fs
lea
inc
jbe
dec
iret
insl
adc
mov
lods
sarb
xor
addr16
xlat
jo
inc
mov
fldcw
out
sti
loope
or
bound
test
sbb
add
xchg
inc
jnp
push
sub
cmp
popa
jle
pusha
int
adc
mov
inc
add
xor
and
stos
movsl
decb
and
xor
movsb
add
scas
mov
shrl
imul
in
dec
in
or
push
fstpl
cmp
fcoml
mov
cmp
test
inc
rolb
sbb
cmp
fwait
pop
stc
pushf
loope
inc
ret
fs
ljmp
in
jb
aam
fsubs
roll
jl
and
and
mov
fucomp
shlb
idivl
cmp
out
je
jp
pop
out
inc
or
imul
gs
or
mov
andl
jl
gs
test
mov
pop
lret
cwtl
cmp
mov
mov
divb
mov
pop
xor
hlt
inc
mov
sbb
or
cli
out
mov
bound
or
cmp
xchg
push
cmpsl
dec
inc
idivb
sub
movb
iret
js
repnz
mov
js
ljmp
xlat
fld
adc
sub
iret
test
incb
pushf
push
adc
adc
or
aam
cmp
or
sbb
out
cmp
outsb
iret
push
imul
shrl
sub
incl
mov
je
out
push
bound
pop
xchg
imul
mov
mov
das
xor
out
push
adc
gs
cmp
xchg
mov
push
lds
fadds
pop
nop
outsb
nop
xor
and
and
pop
cmp
leave
mov
pop
jecxz
push
subb
sub
mov
pop
dec
xchg
adc
lods
mov
inc
bound
pop
outsl
pop
in
jno
sub
fistpl
mov
jp
fists
push
pop
ficomps
jae
sub
data16
cltd
pop
or
out
repnz
jb
mov
push
and
adc
testb
mov
into
mov
rclb
add
jg
ja
incb
and
push
mov
mov
lods
test
lret
mov
jle
push
mov
lods
inc
jg
pop
push
or
inc
and
sbb
aas
mov
fsubrl
dec
jo
add
jo
ret
push
fcoml
adc
pop
sbb
push
jbe
lods
mov
test
in
arpl
dec
sbb
or
mov
inc
push
or
pop
pause
xchg
inc
repz
fwait
lods
jae
pop
sar
int3
jbe
sub
adc
xchg
jmp
mov
pop
lcall
pop
mov
jns
test
dec
jb
sbb
outsb
and
xchg
sbb
aad
pushl
sub
loop
xchg
pop
pushf
out
cmpl
xor
das
push
xorl
dec
arpl
jecxz
sub
push
shll
xor
dec
outsl
dec
data16
xor
ret
repz
mov
shl
inc
add
ljmp
xchg
out
mov
hlt
outsb
sbb
jge
fidivrs
cmp
xchg
outsb
scas
hlt
xchg
in
push
fcomip
cmp
adc
sti
stc
mov
fisubs
addr16
popf
pushf
leave
xchg
lcall
mov
xchg
adcb
jo
testl
js
pop
mov
jbe
push
addb
pop
pop
cmp
xchg
jge
push
mov
decl
scas
pop
inc
cmp
out
sbb
repz
ss
adc
pop
jae
sbb
xlat
jb
xchg
pop
js
in
and
mov
push
push
ljmp
add
cwtl
adc
inc
and
mov
stos
mov
add
inc
xchg
mov
pop
stos
jbe
ret
mov
vhaddps
xor
mov
movl
mov
xor
sbb
cmpsb
add
inc
pop
in
shlb
outsb
cli
test
stc
bound
and
ljmpw
jle
pop
repz
mov
arpl
fsubs
sbb
pop
sti
mov
je
xchg
rcrb
pop
mov
or
jmp
mov
call
push
pop
ljmp
insl
hlt
sub
cmc
mov
inc
outsl
loopne
sahf
sub
cld
or
and
fwait
in
movsb
nop
cmp
fsubrs
cwtl
xor
out
into
imul
and
imul
mov
loopnew
fidivl
sub
int
adc
mov
insl
or
dec
loopne
inc
inc
loopne
test
mov
sarb
shlb
add
test
adc
cpuid
imulb
jmp
mov
imulb
inc
pop
rclb
test
dec
add
xchg
push
or
ret
testl
in
cmp
popa
xchg
cli
dec
sub
inc
xor
nop
pop
ds
mov
shll
outsb
dec
mov
aam
mov
xchg
jo
xchg
and
mov
add
sbbl
outsl
sbbl
scas
test
lds
mov
mov
fisubs
pop
inc
dec
inc
stc
test
pop
pop
imul
pop
pusha
add
stos
mov
add
cmpb
gs
dec
cmp
les
add
test
imul
enter
mov
scas
jl
xchg
mov
xchg
pop
dec
mov
mov
sub
jno
cmc
mov
push
and
dec
add
shll
mov
xchg
xchg
cmp
sar
in
dec
pushf
ror
cmp
jns
fldcw
loop
push
call
pop
pop
push
push
cld
xchg
stos
cmp
push
xor
popa
fsubr
mov
pop
ret
xlat
iret
and
daa
stc
xor
incb
aad
movswl
push
xor
adc
fadds
into
inc
fists
lret
incb
inc
mov
xor
push
in
inc
xchg
xorl
cli
sub
and
or
cmp
pop
mov
cli
insl
jl
mov
lods
shrl
mov
pop
fsts
es
inc
mov
xor
mov
cmc
xchg
imul
outsl
dec
out
cwtl
aad
andnps
clc
inc
hlt
pop
iret
mov
xchg
adc
sbb
fwait
mov
jnp
ret
outsb
stos
adc
popf
int
mov
lds
ret
lods
nop
dec
or
sbb
adc
cwtl
call
int
cmp
push
in
jnp
aam
test
and
mov
dec
ret
jnp
sub
cmp
ss
sub
mov
pop
cwtl
adc
popf
aas
mov
pop
mov
pop
sbb
aaa
out
or
test
mov
sbb
sub
add
imul
repz
cltd
out
jmp
notl
nop
xorl
mov
jmp
mov
out
out
scas
mov
aas
xor
popl
lcall
push
mov
pusha
movsl
dec
fstps
lret
cltd
les
into
lock
xor
sbb
or
imul
add
ja
bound
push
icebp
pop
mov
fistpl
ljmp
and
in
lcall
aas
pop
or
imul
fcompl
imul
mov
fisubl
add
jae
jne
out
sbb
add
rorl
or
adc
xor
pop
and
aas
or
mov
xchg
mov
xchg
inc
lcall
or
loope
gs
mov
jne
ja
xchg
mov
xor
adc
adc
jp
inc
aas
mov
ret
test
adc
xorb
enter
imul
sub
sub
lods
jbe
ss
dec
orl
pop
adc
ja
xchg
enter
push
mov
jnp
push
imul
in
fisttps
dec
arpl
fsubrp
push
ds
outsl
ret
pop
jmp
popa
sub
loope
arpl
test
movb
hlt
adc
mov
jne
mov
pop
movsbl
add
fisubrs
imul
fisubl
xchg
cmp
jns
cltd
daa
or
fisubl
mov
fwait
mov
sti
jp
mov
hlt
rclb
scas
cmp
xor
push
and
and
cwtl
mov
jns
and
sub
fidivl
jge
popa
insl
cmpsb
bnd
inc
repnz
mov
dec
lret
and
and
jmp
mov
cmp
lret
pop
add
outsl
popf
or
and
xchg
mov
stos
nop
cmp
stos
jp
stc
sub
xchg
cltd
inc
xchg
pop
pusha
cld
sbb
popf
int
sub
out
jo
add
and
and
or
xor
jle
xor
xor
or
jmp
rorb
inc
xchg
in
adc
aas
mov
mov
rcll
into
jmp
jb
adc
inc
pop
xchg
mov
pushf
insl
cmp
andb
xchg
aas
dec
addl
xor
loope
imull
mov
mov
inc
cwtl
stos
pusha
mov
movsb
cmp
test
cmpsb
sub
jp
mov
jo
push
jecxz
inc
gs
inc
add
stos
fcmovbe
ss
push
into
sti
imulb
addr16
das
rolb
xchg
mov
adc
cmpsl
movsb
xchg
xchg
inc
push
fs
cmc
mov
addr16
gs
cli
sub
outsb
lock
fsubs
sti
mov
lahf
imul
movsb
and
in
and
int3
arpl
loop
mov
sub
xchg
dec
movsl
jmp
or
data16
pop
mov
xchg
pop
icebp
xchg
xor
mov
aas
rolb
dec
enter
leave
mov
ret
dec
cli
imul
fwait
out
and
test
daa
sbb
jl
aaa
out
xor
cltd
gs
dec
cld
in
fxch
push
jge
insb
mov
mov
inc
mov
xlat
lods
lods
adc
fcmovne
dec
mov
stos
scas
xor
mov
and
out
mov
loope
jno
xchg
icebp
testl
ss
mov
mul
jmp
popf
push
ffreep
mov
jns
add
cltd
adc
pop
mov
or
push
mov
pushf
mov
cwtl
dec
xchg
sub
sbb
push
xor
movsb
loopne
or
imul
sub
mov
movsb
stc
pop
loope
cmp
mov
push
incb
movsb
daa
jmp
test
roll
fisubs
lret
ds
out
aam
cmpsb
fwait
arpl
filds
or
ljmp
xor
sub
jns
sub
lods
cmp
stos
rcr
sahf
mov
icebp
jnp
mov
cmc
and
xchg
push
and
xor
cmpsb
lahf
jmp
es
xor
faddp
loop
test
jae
cmp
call
int
mov
fsubrp
ret
dec
cmpsl
cwtl
cli
daa
loope
lcall
sub
aad
xchg
in
repz
add
data16
out
jmp
loope
inc
adc
jae
dec
jnp
iret
mov
cltd
xor
inc
inc
and
repnz
scas
xor
xchg
mov
data16
in
call
adc
cmp
ds
leave
push
arpl
sub
rclb
sub
fstps
cmp
fcompl
mov
int
out
pop
xor
push
and
lret
aam
push
inc
jg
loopne
addr16
xlat
into
or
mov
movmskps
and
es
icebp
movsb
rcrb
push
mov
pop
shll
jg
xor
cmp
lret
mov
push
or
pop
lods
imul
iret
jo
mov
add
aam
jo
lea
xor
cmp
mov
dec
mov
sahf
cltd
shll
stos
mov
dec
lret
pop
iret
xchg
insl
xor
clc
test
sub
sub
inc
push
and
mov
popf
cltd
and
sbb
pusha
and
push
cmp
dec
cld
pushl
jl
cli
or
ret
stos
and
or
xchg
push
inc
push
pop
outsb
dec
push
std
xor
mov
sbb
cs
rorl
enter
cmp
aad
mov
dec
iret
and
inc
push
sbb
pop
lret
or
jae
xor
arpl
aad
nop
dec
shll
lahf
ds
mov
pop
subl
sbb
rcr
or
or
push
xchg
sub
dec
icebp
lods
cmc
jne
or
int
push
movsb
xchg
clc
add
cmp
outsb
aaa
in
pop
dec
xchg
push
or
jle
cltd
lock
inc
je
call
inc
inc
xor
sbb
xchg
fimuls
dec
add
insb
add
pop
sub
les
rcll
jae
or
pop
and
rcrb
pusha
pop
mov
leave
aam
stos
rcl
notl
jmp
add
inc
adc
adc
ret
out
cmp
in
sbb
mov
mov
es
inc
lock
pop
jg
mov
repz
in
lea
jl
push
je
stc
sub
sar
jnp
pop
cmp
sbb
jle
test
out
and
test
sub
jo
dec
in
lock
fstl
gs
cmp
add
fcomps
jp
mov
push
fwait
mov
cwtl
and
sub
test
jns
xchg
inc
inc
loope
push
push
cmp
jge
adc
call
test
cmp
add
es
mov
je
aad
lcall
sbb
dec
mov
sbb
sbb
stos
cmc
sbb
or
call
aam
xor
mov
mov
inc
mov
pop
pop
arpl
push
fnstcw
adc
adc
lds
loopne
mov
jno
dec
mov
insl
inc
inc
mov
pop
stos
xchg
pop
and
dec
adc
and
fildll
sahf
cmpsl
mov
nop
arpl
mov
cld
insl
iret
cmp
repnz
inc
push
aas
movsb
pop
cli
mov
mov
jle
push
push
jg
jno
sbb
cli
sbb
loopne
add
jo
and
jnp
mov
xchg
loop
out
pusha
rorb
cmpsl
pop
fisubl
xchg
ficoml
sbb
cmp
rorl
mov
popa
push
sub
dec
sbb
add
cld
add
and
push
and
in
push
pop
jecxz
or
and
xchg
into
shrb
mov
mov
inc
xor
pop
ds
lock
in
adc
ror
int3
pop
insb
outsl
push
push
push
sbb
test
data16
pop
add
or
add
xchg
inc
popa
mov
xchg
sub
popf
out
mov
adc
fs
aad
outsb
sbb
gs
xor
outsb
push
mov
fisttpl
sbb
cmc
lock
out
jge
and
sbb
or
insl
mov
push
add
sub
push
and
and
mov
mov
dec
fsincos
movswl
push
push
loop
and
or
jnp
push
pop
daa
mov
jle
ds
jmp
adc
sub
scas
pop
inc
lcall
add
xchg
lahf
push
lods
xchg
mov
mov
mov
mov
ja
add
popf
pushf
jecxz
insl
add
lock
cs
mov
fbld
or
adc
adc
test
mov
add
xlat
jmp
inc
jbe
pop
es
mov
xchg
mov
mov
push
mov
sub
pop
push
mov
icebp
sbb
pop
shr
mov
rclb
scas
call
popa
adc
and
stos
testl
mov
pushf
test
inc
sub
cwtl
fmul
add
iret
andb
aaa
mov
pop
testl
xlat
pop
mov
pop
xorl
cs
int
fs
mov
gs
sbb
add
cmp
pop
pop
dec
fsubrp
js
adc
mov
loop
mov
mov
mov
push
dec
imul
and
xor
divb
leave
mov
in
and
scas
out
add
lret
push
jnp
ljmp
test
mull
cmpsb
fistpll
inc
or
inc
adcl
mov
pusha
cwtl
testb
mov
fcomps
push
xchg
in
jbe
subl
inc
cmpsb
js
mov
xchg
addr16
mov
sbb
xor
pop
div
mov
mov
xchg
cmp
das
and
cmpsb
push
push
mov
in
subb
mov
test
jl
lds
out
sbb
stos
jne
mov
cmpsl
into
or
gs
std
aaa
sub
aas
and
inc
sbb
push
jbe
mov
ret
push
mov
add
int3
xor
dec
cltd
add
mov
push
incb
lock
pusha
jmp
dec
or
push
lock
xor
mov
arpl
mov
into
mov
insb
scas
daa
pop
ret
adc
lods
sahf
test
rorl
and
ret
dec
inc
lods
dec
nop
mov
mov
jl
dec
ret
insl
in
clc
stos
std
rdpmc
imul
out
jo
aad
les
push
movsb
aaa
dec
cmp
fwait
aaa
cwtl
push
icebp
aam
mov
leave
inc
shlb
cmp
or
std
mov
mov
adc
dec
inc
or
cmp
insb
mov
negl
add
hlt
sbb
pop
icebp
insl
aam
clc
jo
or
jl
cld
inc
scas
pop
addr16
insl
test
mov
data16
or
xchg
arpl
jb
outsb
lods
in
sbb
jl
jge
mov
mov
adc
fwait
mov
dec
sbb
mov
or
ljmp
shlb
adc
jmp
test
lret
cmpsb
add
mov
and
mov
dec
jb
ja
rcrb
and
ret
xchg
and
jmp
lds
add
push
bnd
mov
in
scas
mov
xchg
inc
push
pop
loope
imul
jmp
call
add
lret
pop
jne
inc
pop
lods
int
inc
loope
out
test
orb
sub
gs
cmp
mov
insl
lret
pop
cmpb
xor
mov
les
in
xlat
xor
test
and
rcrl
xchg
repnz
js
jmp
sbb
cld
daa
scas
fs
jo
scas
into
jmp
push
int3
js
stos
sub
mov
stos
or
ret
xchg
andb
lahf
movsb
std
sub
mov
push
shlb
xlat
aad
fidivl
test
mov
sub
or
add
mov
mov
adc
mov
jnp
out
insl
sbb
xchg
mov
xor
dec
rolb
fldcw
sub
xchg
movsl
lds
cli
cmp
add
push
or
and
mov
adc
dec
mov
and
dec
xor
sub
test
push
xchg
xchg
cmpsb
cmp
in
call
loop
sarl
pop
testb
call
mov
pop
jge
or
ret
dec
pop
mov
jle
and
ret
insb
pop
jo
xor
adc
adc
ja
lock
or
mov
mov
jb
add
mov
xchg
jae
jbe
popa
fsub
jecxz
add
jmp
sub
jle
and
mov
jle
xor
int3
xor
mov
jl
mov
xchg
mov
jecxz
das
or
je
push
fstl
stos
cmc
inc
test
push
test
jnp
addl
lea
sbb
les
jbe
add
cmp
shr
cmpsl
mov
int
aaa
fdivp
scas
test
pop
js
inc
sbb
fsubs
push
out
testl
aas
arpl
xchg
jl
rorb
add
sub
test
notl
roll
orb
adc
xchg
adc
pushf
and
stc
lcall
jo
hlt
cld
and
jbe
addr16
jne
push
icebp
cli
add
xlat
out
scas
lods
jbe
jmp
cmp
pop
adc
clc
in
int3
mov
mov
aas
sbb
aam
je
xchg
icebp
pop
hlt
inc
in
scas
gs
xchg
mov
sahf
lret
ret
fstl
test
or
loopne
adc
test
add
mov
subl
xchg
addr16
pop
push
adc
mov
inc
pop
inc
add
sbb
gs
xchg
xor
ret
xor
out
rorl
cmp
and
cmpsb
clc
out
js
fcompp
mov
insl
jge
push
dec
lcall
mov
in
xor
pop
xchg
repnz
in
sahf
sbb
sub
cmpsl
jecxz
push
dec
and
pop
pop
jo
aad
bound
rclb
les
xchg
lahf
push
in
imul
or
repz
push
add
xlat
gs
movsb
addl
insb
pop
mov
xorb
lahf
je
push
xchg
push
aad
mov
add
and
xchg
adc
int3
int
mov
xor
pop
ds
xor
and
out
sbb
push
or
icebp
movsl
loopne
adc
stc
aad
pop
stos
mov
dec
in
hlt
mov
xor
pop
fwait
sub
mov
mov
cs
jge
cli
pop
lcall
mov
mov
or
xor
int
mov
loope
or
jbe
inc
outsb
mov
inc
jmp
pop
xor
inc
xchg
add
xchg
stc
ret
sub
rolb
dec
push
xor
arpl
xor
daa
cs
imul
mov
loopne
hlt
push
inc
sub
lods
fs
std
iret
push
pop
dec
adc
icebp
push
arpl
js
mov
inc
push
cli
aam
pop
repnz
outsb
inc
leave
cmp
mov
cmovno
jl
cmc
fcomip
xchg
std
les
ss
mov
sarb
and
shll
jmp
jmp
filds
and
mov
jg
sbb
xorl
out
pushf
adc
call
mov
adcl
out
mov
lock
sbb
xchg
mov
out
xchg
scas
jns
adc
arpl
addr16
pop
xchg
das
out
sbb
ljmp
imul
adc
cli
mov
cld
mov
sub
push
jmp
mov
and
push
test
xchg
popf
mov
adc
adc
jne
mov
cli
add
imul
je
inc
fdivl
pop
enter
cmc
sbb
jle
mov
and
das
iret
sub
mov
pop
daa
sub
sub
inc
jmp
xchg
xor
lock
and
jmp
jne
cmp
push
mov
scas
mov
into
mov
shlb
mov
mov
push
pop
jmp
jns
test
ja
cmpb
nop
mov
out
arpl
js
mov
movsl
loope
add
shlb
pop
das
mov
test
mov
xor
add
xor
xor
add
xor
adc
adcl
sbb
or
and
or
xor
dec
mov
std
sahf
mov
test
fmull
mov
adc
push
sbbb
jbe
pop
rcrb
cmp
dec
pop
jbe
sbb
dec
jno
scas
push
add
int3
xor
mov
dec
jne
leave
sbb
fsub
or
add
cld
pop
add
test
ret
movsb
dec
cs
pop
sbb
pusha
xor
in
mov
aam
mov
cmp
mov
pushf
adc
mov
cmp
jge
sub
ja
daa
sub
leave
jo
enter
aad
imul
and
or
mov
cwtl
pop
mov
and
imul
dec
dec
es
mov
inc
dec
in
pop
inc
jb
iret
cli
push
dec
jno
in
mov
fldl
push
nop
cmp
fld
jno
addb
in
cmp
scas
stc
and
std
push
cmp
scas
xchg
pop
mov
pop
inc
jo
in
xchg
testb
fmull
xchg
sbb
mov
and
and
mov
nop
pusha
inc
cmp
insb
outsb
pop
sbb
pop
xor
adc
mov
movsl
in
add
jg
daa
xchg
mov
sbb
cwtl
xor
pop
flds
and
xor
daa
sub
xchg
xchg
inc
and
push
movsl
mov
dec
mov
pop
xor
pop
rclb
cld
fstpl
mov
fldenv
insb
icebp
jbe
sbb
jnp
das
jbe
lret
leave
movsl
jne
test
pop
stos
stc
add
pop
les
daa
or
fwait
std
fcoms
ret
pop
adc
push
cmp
cld
cwtl
jb
jbe
into
inc
xor
jnp
push
mov
fcom
clc
mov
sub
mov
pop
pop
ds
jl
and
inc
arpl
sub
cmp
push
ffree
sbb
imul
xor
pushf
repz
dec
push
jbe
repz
lds
sub
sbb
lea
jl
jge
pusha
ret
push
in
cwtl
stos
xor
sbb
popf
add
fstps
inc
pop
out
mov
incl
sahf
push
mov
sbb
lods
pop
int
std
out
sub
add
sti
in
ficoml
insb
aas
xchg
mov
pop
fwait
std
dec
pop
fdivrs
outsb
push
fstpt
int
pop
jg
xor
cmp
loop
mov
xchg
add
cld
jae
mov
xchg
mov
add
aaa
rorl
inc
psubb
mov
cmp
scas
sti
mov
push
outsb
sub
mov
popf
xchg
mov
add
out
aam
ret
pop
mov
cmc
dec
jbe
subb
mov
jns
popf
jmp
insb
pop
popa
movsb
pop
out
fs
clc
mov
jecxz
mov
dec
mov
mov
enter
inc
xchg
push
lcall
movsl
pushf
in
gs
adcl
in
ret
mov
sbb
add
or
adc
mov
cmpsl
mov
fs
inc
ds
mov
idivl
mov
or
popf
push
cwtl
les
stos
out
fisttpl
mov
cmp
sbb
popf
es
mov
adc
fnsave
mov
adc
lods
stos
mov
das
andl
mov
ds
xchg
je
cmpsb
cwtl
push
or
rcl
mov
repz
jge
cs
pop
jns
ficoml
jl
mov
loope
push
mov
or
fs
add
and
xchg
mov
push
add
andl
pop
mov
ffreep
lods
imul
jnp
jmp
cmp
xchg
dec
sbb
mov
or
mov
lds
incl
push
clc
out
pop
lds
adc
push
push
test
mov
jg
ret
sarb
ss
in
sbb
jecxz
xorb
jl
xchg
mov
movsb
inc
sub
dec
cmc
push
cmp
cltd
sub
inc
andl
cli
mov
mov
push
insl
in
mov
iret
and
jno
push
cwtl
int
out
push
rolb
pop
inc
aad
sub
lcall
dec
ja
sub
cmc
fs
pop
mov
sbb
rcrl
jecxz
movsl
idivl
adc
adc
jp
and
scas
sbb
cmc
cmpsl
fisubrl
cmovle
dec
in
push
or
xor
xlat
negb
mov
ds
ss
lahf
xor
mov
jmp
xor
lods
adc
xor
and
add
cmp
int
cmpsb
loop
ror
cmp
cmc
push
sbb
andb
dec
push
loopne
jb
and
inc
movsb
cld
leave
fists
and
mov
mov
sahf
out
out
scas
lds
pop
subb
shl
daa
addr16
loopne
lahf
call
sbb
add
jnp
and
imul
rcrb
ja
push
mov
rclb
add
mov
ror
jle
jl
xor
hlt
cmpsb
push
inc
in
std
mov
stos
push
js
lock
ret
mov
ret
das
mov
popf
xor
push
lods
js
cmp
mov
fnstcw
mov
and
sbb
and
mov
and
sbb
out
and
and
sbb
xlat
inc
mov
fwait
mov
lret
insb
ljmp
loope
sub
jecxz
inc
popa
data16
cli
es
fistl
imul
iret
xor
nop
xchg
lret
cli
sub
ds
test
pop
or
aad
jne
jmp
mul
mov
je
outsl
mov
les
fs
lds
outsl
roll
int3
inc
push
xor
adc
jmp
xor
inc
sti
dec
cmp
rcrb
subl
mov
arpl
lahf
mov
and
xchg
xor
icebp
add
ja
xorb
pop
out
data16
add
js
mov
int3
adc
enter
cmp
lods
je
sbb
dec
lahf
insb
fistpll
pusha
mov
xchg
xchg
jns
shll
mov
xchg
mov
xchg
jbe
jns
fldt
adc
jl
xor
lret
jl
test
jnp
clc
in
push
xchg
pop
inc
jge
cmpsl
popa
pop
sbb
test
add
push
add
leave
sub
jne
outsb
inc
adc
adc
mov
mov
push
ja
adc
mov
cmp
mov
out
mov
push
mul
mov
sbb
call
mov
lret
inc
sub
addr16
or
sub
rorl
adc
mov
out
gs
mov
xor
mov
xchg
lcall
push
lahf
mov
push
lahf
or
push
push
and
ja
addr16
stos
stc
fbld
data16
mov
testl
mov
outsb
cmpsl
lea
stos
mov
dec
cld
testb
xchg
lods
adc
popa
xchg
jp
rclb
movsb
in
call
or
mov
imul
xchg
inc
shlb
jbe
lret
lahf
lea
mov
sbb
or
xlat
es
test
mov
cmp
sub
mov
inc
stos
cmp
call
clc
push
subb
call
adc
notl
and
je
and
cmp
ja
jmp
std
lahf
mov
ljmp
sbb
repz
and
cmp
push
push
inc
dec
xor
shlb
cmp
inc
inc
cs
jl
mov
jle
mov
fdivp
fstpl
pop
popa
push
int3
shrb
inc
add
es
mov
test
mov
jbe
push
xchg
lds
mov
ljmp
scas
fnstcw
sub
jno
cmp
rorl
loop
enter
orb
movsb
icebp
push
hlt
jns
insb
cmp
test
adc
jmp
push
stos
cmp
sub
aas
sbb
andb
sub
and
inc
dec
ds
sub
in
push
mov
xor
movsl
popf
xchg
outsb
test
rorl
test
repz
not
mov
fsubrs
push
gs
in
fld1
mov
jmp
xlat
jne
add
xchg
mov
out
in
jae
pop
mov
mov
ret
or
xchg
loopne
push
pop
xchg
into
fdivs
xchg
adc
and
xor
aam
hlt
popf
cwtl
sbb
arpl
mov
jbe
inc
andl
jbe
in
pusha
aam
test
cltd
shlb
cmp
lock
xchg
xlat
test
sbb
mov
xchg
call
mov
in
jne
arpl
lea
gs
or
clc
mov
fldcw
lahf
inc
in
out
dec
inc
dec
jne
lret
xchg
outsb
mov
iret
jne
inc
iret
mov
inc
cmpb
iret
movsl
push
roll
fsubl
pop
lea
push
push
in
inc
jp
jnp
arpl
call
or
push
push
xchg
fwait
mov
addr16
push
popf
enter
daa
xchg
xor
int3
out
sarl
sahf
cli
arpl
sub
imul
and
testb
or
sbb
sub
movsb
xor
dec
xlat
jg
dec
pop
pop
xor
sub
aam
and
test
xor
jo
cld
enter
shlb
cmp
pop
sub
aaa
xchg
push
mov
cli
movsl
data16
xchg
cmp
sub
cmp
scas
in
test
cmpsl
inc
je
mov
sqrtps
jg
jl
xor
jl
daa
data16
ljmp
pop
inc
fdivrp
fwait
mov
ret
mov
in
xor
xchg
mov
test
sti
stc
mov
dec
mov
push
xchg
jle
and
pushf
push
jl
icebp
jge
test
ja
ds
int
outsl
aad
adc
sub
mov
lock
mov
fmuls
std
stc
mov
sahf
pop
fsubrs
xchg
scas
xor
inc
add
imul
adc
xor
movsl
call
mov
ljmp
cmpsl
int3
sbb
xchg
push
or
std
pop
mov
mov
mov
mov
in
movsl
ljmp
jmp
stos
aad
mov
or
add
in
mov
add
outsb
addr16
imul
xchg
xor
dec
xor
std
mov
lea
lret
inc
dec
into
dec
leave
jmp
dec
lea
mov
mov
push
cmp
xor
or
jp
push
decl
mov
divl
nop
sbb
pop
cmp
or
sahf
iret
mov
rol
insl
loopne
cwtl
cmp
dec
dec
xchg
fiaddl
mov
adc
faddl
jmp
pop
mov
pop
mov
xor
mov
ds
rol
mov
and
xchg
fildl
in
loope
mov
inc
mov
rclb
inc
mov
iret
outsl
jne
loope
add
pushf
dec
fnstsw
jae
mov
jg
stos
fs
insb
jle
xchg
scas
shrl
loopne
adc
mov
or
jmp
aas
shl
mov
cwtl
cmpb
xlat
xchg
rcrb
push
ja
test
xor
xchg
mov
xlat
jecxz
shrl
mov
xchg
fdivrs
mov
cmc
inc
sbb
ljmp
lret
mov
pop
push
add
cmpsb
shrl
inc
ror
cltd
ficomps
stc
xchg
js
neg
push
pop
ja
or
dec
lods
lea
xor
fnstsw
lock
cmp
pop
mov
jg
jns
loopne
les
adc
je
push
aaa
cs
mov
bound
dec
mov
pop
cmp
int3
je
xchg
push
lret
jo
cmp
jno
in
dec
fisttps
lahf
adc
lret
jp
je
push
ss
mov
lods
mov
enter
jmp
cmp
push
xchg
jg
inc
mov
popf
lcall
ds
jge,pn
shlb
test
inc
lret
sbb
aad
roll
add
pop
or
mov
pusha
add
adc
sar
lahf
sub
pop
dec
std
jae
jb
frstor
xchg
insb
cmc
inc
cmp
mov
cmpsl
sbb
loope
arpl
ljmp
insl
pop
test
xor
push
test
dec
xchg
ret
adc
jge
xchg
adc
fucomi
jns
fisttpl
hlt
das
daa
fwait
mov
cwtl
cmp
ds
pop
adcl
movsl
call
cmc
and
pop
push
push
dec
pop
mov
xlat
cmp
leave
es
cltd
dec
out
icebp
push
xor
out
xchg
insl
decb
testb
in
jbe
sub
inc
push
mov
loop
xchg
cmp
js
dec
mov
mov
cmp
inc
and
shlb
and
les
lcall
mov
std
cltd
js
pop
sub
nop
test
in
subb
popf
stos
cmc
jo
ljmp
mov
cwtl
into
test
out
loopne
push
mov
jne
loop
fstpl
in
xor
syscall
orb
scas
notl
dec
pop
ficoml
adc
sub
aas
leave
fidivs
lock
das
cmp
fsubrs
testl
xor
push
pop
mov
insb
js
arpl
repz
cli
or
xchg
xchg
popa
data16
imul
sahf
daa
paddb
enter
outsb
mov
or
xor
mov
cltd
cmp
outsl
inc
dec
jg
mov
dec
mov
into
ret
lods
inc
ret
jbe
mov
push
movsl
inc
mov
jg
in
cmp
xlat
push
cmpsb
sbb
hlt
test
mov
mov
push
pop
inc
je
mov
lahf
cltd
ljmp
adc
icebp
aas
popa
mov
push
pushf
mov
jmp
dec
jnp
xor
js
xor
xor
cwtl
in
mov
lods
insb
inc
stos
repnz
inc
outsl
mov
repz
jb
xchg
adc
or
imul
xchg
add
dec
hlt
add
lods
dec
fwait
pop
popa
inc
mov
mov
movsb
jmp
dec
add
mov
pop
inc
scas
cmc
nop
push
jnp
call
dec
sbb
frstor
lcall
jge
pop
inc
mov
and
xchg
data16
and
xchg
and
cmc
daa
xchg
sar
mov
push
gs
aam
jnp
fucomi
push
mov
mov
adc
jp
sbb
adc
mov
dec
clc
sbb
jecxz
orl
jno
mov
adc
push
mov
lret
jbe
jo
das
dec
sbb
sub
nop
int
out
das
pop
inc
mov
aaa
std
mov
xchg
test
fdivl
push
decb
sub
test
push
pop
insl
cmp
pop
subl
cltd
fwait
push
jae
loopne
rcr
sub
pop
cwtl
mov
or
stos
mov
mov
mov
lret
pop
cmpsl
loopne
sub
push
ljmp
out
pop
mov
call
jbe
inc
mov
cltd
and
adc
mov
mov
sub
push
mov
nop
jp
lcall
shr
lods
cmp
cmpsl
lods
jae
test
or
pushf
and
and
stc
push
dec
je
divl
jge
mov
dec
xor
mov
daa
push
and
mov
or
leave
or
dec
mov
js
adc
xchg
push
or
movsl
xchg
lock
inc
imul
cld
pop
inc
sub
mov
hlt
es
fbstp
inc
or
adc
mov
mov
idiv
add
xor
sbb
mov
push
fisubrs
add
test
and
rdtsc
mov
je
negl
mov
dec
dec
leave
or
mov
mov
fdivs
adc
fwait
cmp
insb
dec
lods
cs
lahf
pop
out
neg
notl
or
fidivrs
pop
pop
jnp
adc
push
fnstsw
fs
sub
jl
vorps
mov
xor
add
lods
sub
lcall
stos
lret
shll
and
xlat
dec
cli
cli
insl
inc
int3
retw
sti
repz
scas
pushf
popa
clc
or
mov
inc
push
hlt
inc
dec
test
orb
sbb
inc
cwtl
jne
xor
xor
fsubrp
sahf
loopne
xor
addl
arpl
test
in
ret
xchg
pop
andb
push
push
adc
in
cmp
jnp
xchg
xchg
mov
push
icebp
pusha
sbb
gs
repz
sub
jp
adc
lods
mov
into
push
int
in
arpl
xchg
mov
cltd
stc
dec
je
sahf
and
imul
jge
push
ja
mov
neg
lods
in
nop
push
and
xor
call
fs
fnstsw
enter
leave
add
pop
loope
stos
and
into
aaa
insl
sub
js
add
jge
cwtl
mov
jbe
add
adc
mov
push
shlb
cld
xor
gs
xor
pop
push
int3
out
inc
arpl
ficoms
stc
sub
mov
sub
and
mov
dec
lods
push
insl
leave
adc
push
sbb
mov
push
pop
addr16
lds
cli
inc
xchg
stos
pusha
adc
lea
push
sub
subl
cmp
cs
adc
mov
fistpll
sbb
imul
addb
adc
test
xchg
xor
dec
mov
sbb
push
movsb
pop
xchg
das
pop
icebp
insb
or
shrb
sub
push
cli
ret
jge
xchg
mov
call
int
insb
inc
sbbb
mov
adc
cmp
mov
pop
pop
mov
int
aam
and
gs
loope
add
mov
lock
leave
addr16
in
repz
cmp
insl
xchg
dec
js
mov
sub
dec
hlt
mov
mov
sbb
jno
loopne
sub
xor
or
mov
stos
jecxz
jle
xor
xchg
mov
lods
fsubl
add
and
fmul
outsl
aas
mov
push
es
js
cltd
fstpl
stc
lock
xchg
or
xchg
sti
push
adc
jg
cvtps2pd
inc
push
dec
loop
arpl
sbb
lea
push
mov
pop
jge
and
adc
pop
stos
pop
les
xor
push
xchg
imul
outsb
pop
in
xor
adc
cmc
sub
add
into
xor
data16
pop
or
mov
rorb
mov
mov
inc
sti
adcl
cmp
pushf
mov
jmp
jo
pushf
sbb
sti
add
ret
add
lds
xor
cmpsb
push
test
jmp
shrb
test
rclb
iret
push
fstps
imul
xor
testb
xor
insb
cmc
xchg
mov
push
movsl
insb
stos
int
dec
inc
mov
xchg
or
int
pop
gs
fstps
mov
popl
lahf
adc
push
mov
push
mov
je
cmpsb
mov
dec
and
ret
loop
cmp
arpl
push
cwtl
xchg
xor
iret
push
pop
fisttpll
jle
sub
and
pop
sub
outsb
sbb
cmp
and
dec
test
repz
xlat
into
cmp
nop
outsl
push
mov
ljmp
mov
xchg
cltd
out
ja
jmp
gs
pop
jl
lods
popf
mov
rcrl
fstpl
mov
mov
mov
cld
mov
nop
jbe
pop
jno
icebp
mov
stos
lea
cs
push
xorb
or
jecxz
es
mov
adc
sbb
fwait
es
lret
xor
cld
xchg
push
test
cmp
std
xor
leave
mov
mov
jbe
fimuls
jp
fbld
pop
rcrb
pop
jmp
push
adc
xor
cmp
idivb
sbb
mov
push
mov
das
lods
pop
pop
push
cmp
inc
push
rclb
fs
loop
mov
rcr
cmp
jl
push
ror
xchg
test
push
mov
pop
cltd
repnz
or
xchg
and
xchg
jne
inc
xor
scas
sub
sub
ficoms
loopne
cmp
and
mov
mov
in
sbb
push
mov
aad
in
ja
cmp
into
push
mov
sub
sbb
fistps
inc
inc
into
adc
popl
imul
adc
mov
pop
ljmp
push
dec
ret
js
fdivr
in
in
mov
inc
call
jg
dec
sbb
js
xorb
dec
mov
mov
outsl
pop
jno
movb
aam
pop
add
les
shrl
pop
jo
pop
ror
mov
repnz
or
out
ret
jmp
lods
inc
fnstsw
sbb
dec
pop
sti
into
adc
inc
mov
ret
and
call
push
hlt
cmp
mov
movsb
xchg
inc
iret
cmp
or
ljmp
jo
or
adc
push
sub
and
shlb
cs
mov
sub
int
mov
stos
pop
out
jecxz
xor
pop
daa
arpl
sarl
or
loop
pop
and
xor
push
mov
test
test
inc
push
aas
adc
hlt
shrb
mov
pop
xchg
xor
cmp
add
dec
inc
test
mov
lock
fistps
inc
xor
addr16
repz
jns
imul
cmp
inc
outsb
hlt
mov
fsubrl
inc
add
imul
pop
subl
ret
cmpb
sbb
cmp
adc
jno
pop
rcl
aad
and
inc
shrb
shlb
push
sub
fldcw
pushl
xlat
lock
cld
insb
mov
popa
loop
pop
sti
and
sub
movsb
repnz
inc
xchg
mov
jmp
cltd
lret
ret
repnz
push
fisttpl
test
divl
push
mov
pop
cmc
in
jnp
sbb
push
sub
popf
jge
or
fstl
add
xchg
out
int
push
test
lds
pop
mov
fadd
ret
jns
sti
cmp
mov
xor
rcll
sub
fs
or
je
cmp
aas
jo
xchg
xchg
adc
or
mov
lds
aad
sub
fsubs
imull
pop
test
push
push
pop
mov
cld
jne
stc
inc
cmpl
pop
out
push
cltd
shll
and
data16
test
pop
push
hlt
or
push
lret
add
jl
jle
jb
fdivrs
cwtl
dec
std
xor
movsb
clc
sub
add
orl
and
loop
insb
jo
lret
fbstp
xchg
pop
mov
les
xchg
mov
add
sbb
adc
nop
jne
in
jo
xchg
stc
pop
jp
in
jae
in
cmc
inc
jle
push
push
inc
repnz
scas
jb
into
iret
lds
mov
mov
mov
in
or
mov
jle
loopne
lret
cmpsl
sbbl
inc
in
sbb
jo
ret
cwtl
pop
push
push
push
pop
push
fnstenv
sub
or
mov
mov
and
scas
movsl
in
call
int
adc
mov
repnz
mov
lods
adc
sub
xchg
mov
sti
push
jl
mov
jae
ds
pop
divl
sbb
mov
jb
sti
repnz
imul
add
in
mov
in
mov
repz
shll
repnz
dec
cltd
dec
xchg
pop
jg
jl
popf
leave
cmp
clc
cmc
loopne
mov
dec
mov
mov
loope
fcmovnbe
add
sbb
cmp
pop
stos
add
arpl
fstps
and
lds
addr16
mov
movsl
mov
adc
dec
scas
cli
mov
hlt
cmpb
sbb
push
dec
inc
loop
mov
cld
int3
xchg
sub
je
gs
dec
outsb
in
push
lcall
cltd
jecxz
insl
mov
adc
sub
daa
cmp
mov
cmp
adc
inc
jge
sub
popa
les
stos
rcrl
out
cwtl
flds
sbb
call
in
aaa
xchg
push
xor
les
push
mov
and
xchg
mov
stc
movsb
adc
jp
and
sbb
cmpsl
popl
fs
ss
mov
fs
movsb
mov
test
dec
or
hlt
std
sbb
add
fildl
inc
mov
fsub
fwait
out
bound
dec
lock
pushf
mov
test
int
and
and
cltd
push
cld
fwait
add
fcoms
sub
xchg
shld
adc
push
movsb
lret
lds
imul
lock
push
test
cmp
push
ret
jns,pn
pop
dec
sbb
sysret
xchg
xor
sub
adc
out
int
icebp
adc
jmp
inc
sub
test
mov
lcall
fwait
sbbb
icebp
fildll
pop
pop
pusha
sub
xor
outsb
lods
xor
jmp
ljmp
es
cmpsb
in
sbb
jle
cmp
test
out
ljmp
adc
fsubr
pop
mov
ds
imulb
fdivrl
cmp
daa
stos
ss
xor
mov
push
pop
data16
pop
cmpsb
movsb
jbe
mov
xor
dec
dec
hlt
cmp
sub
xor
les
mov
lods
push
out
ret
mov
add
dec
mov
sub
jmp
mov
jl
outsl
enter
inc
or
test
push
push
push
jp
mov
sahf
mov
lock
out
mov
jl
mov
fdivs
xchg
outsb
out
xchg
out
push
push
dec
mov
dec
inc
inc
jnp
dec
or
pop
outsl
pop
xchg
add
shrb
push
push
sbb
sub
sbb
inc
mov
hlt
cmp
adc
test
mov
icebp
packuswb
cmp
mov
mov
scas
jbe
lock
jnp
lea
push
push
lock
mov
mov
and
scas
in
xor
aas
push
jle
mov
aas
sub
ds
mov
bound
pop
iret
jnp
cmp
cltd
pop
jle
mov
cli
add
dec
jno
jecxz
pop
add
add
decl
sub
mov
dec
add
pop
push
outsb
jo
gs
sti
pushf
jl
lods
outsb
loop
fsubl
out
push
inc
cmp
dec
bound
xor
out
cmpsl
cmp
push
rclb
mov
and
scas
jecxz
dec
popf
mov
inc
sub
les
ds
cmc
fstl
stc
in
sub
sbb
pop
mov
daa
xchg
sti
mov
push
popf
mov
sub
test
stos
out
idivl
push
pop
mov
jns
xlat
dec
xorl
jb
andb
inc
pop
jno
and
and
cmp
aam
add
idivb
fptan
ret
out
gs
ljmp
xor
jo
ljmp
idivl
cmc
and
je
jge
cli
xchg
cmpsb
cld
sub
sub
fwait
movsl
int
imul
in
je
enter
xor
push
int
inc
lods
out
out
xor
mov
mov
shll
addr16
fs
dec
mov
sbb
sub
sbbl
push
inc
cmpsl
vpcmpeqw
imul
mov
jge
pop
outsb
or
cs
xor
or
dec
push
mov
scas
xlat
mov
inc
jge
sbb
mov
loope
ret
fidivs
sarb
in
ret
adc
inc
call
subb
ja
pop
jp
mov
shll
test
pop
xchg
inc
dec
cmp
imul
fsubl
fisubs
jb
sub
je
insl
jmp
ss
or
mov
sbb
cld
mov
sub
push
dec
movsl
outsl
aaa
mov
cli
sbb
jmp
mov
idivb
pop
ja
fs
pop
clc
push
popf
and
xchg
cs
xor
inc
push
fnstsw
add
out
sbb
and
popf
mov
pop
xlat
and
mov
xor
std
xchg
pop
in
mov
pop
pusha
cwtl
dec
mov
xchg
stos
mov
inc
mov
adc
add
cmp
mov
mov
clc
pop
leave
ret
sahf
out
jge
lcall
add
out
adcb
inc
stos
dec
sbbb
xor
jnp
jp
inc
lods
aam
dec
sub
xchg
xchg
cmpsl
ret
lret
rclb
sarl
leave
ss
mov
test
popf
ffree
dec
add
sbb
out
inc
ret
mov
dec
cmp
add
cmpsl
testb
les
out
adc
xor
mov
in
lds
int
dec
mov
lods
lea
xchg
loop
jmp
mov
and
mov
dec
mov
mov
inc
adc
pop
xchg
sub
mov
aam
jnp
xor
jne
xchg
shll
push
mov
rcrb
scas
and
call
xchg
and
bound
mov
lcall
push
lods
mov
jge
sub
cmp
xor
das
rcrb
inc
pop
inc
jo
inc
ja
add
mov
imul
jg
mov
sub
gs
mov
pop
pop
cmp
xor
or
jne
sub
aaa
add
push
stos
jp
xchg
jmp
jbe
rcll
nop
aas
popa
sub
xor
or
push
scas
mov
mov
cmp
xorl
or
aad
aad
sub
scas
sti
rcrb
std
jnp
in
dec
cmpsb
sub
insl
lret
ret
inc
in
sahf
push
pusha
inc
mov
cwtl
je
sub
ror
icebp
jp
jno
cmp
ss
jo
mov
outsl
rorb
sbb
inc
rclb
es
push
mov
dec
adcl
rorl
mov
xchg
xchg
roll
pop
jno
addr16
pop
lahf
push
fbstp
repnz
adc
es
xor
xor
stos
xchg
iret
lods
outsl
out
test
filds
push
fistpll
repz
scas
push
outsl
adc
push
and
nop
and
outsl
ds
mov
jge
stos
call
mov
mov
cmc
aad
add
push
sbb
out
adc
std
pop
sbb
sub
outsl
mov
xchg
push
jb
xor
mov
cli
or
sub
inc
cmp
lcall
jg
setns
push
dec
mov
das
adc
loopne
adc
mov
out
mov
cli
addl
add
jecxz
mov
outsl
push
imulb
stos
sbb
test
cmp
add
lahf
pop
push
icebp
ja
enter
inc
icebp
mov
push
in
xchg
inc
xchg
mov
lock
or
lds
mov
out
cmc
cld
mov
mov
xchg
hlt
jle
and
cs
or
lahf
sahf
stos
lcall
adc
repz
push
jne
push
pop
xor
xchg
mov
pavgb
ja
popa
les
outsb
xor
fisttps
lahf
inc
mov
out
push
jo
cmp
mul
sahf
mov
scas
inc
ja
stos
enter
insb
pop
out
rcrl
cltd
jp
imul
rcrb
addl
pop
mov
ja
sub
shr
adc
ss
inc
ds
jmp
mov
adc
scas
pop
add
sub
movsb
sbb
into
jle
adc
ss
sub
sbb
or
xchg
and
sub
adc
xor
push
jl
icebp
ja
jge
mov
and
push
insl
jle
std
or
add
dec
clc
mov
sbb
divl
jae
push
cmpsb
mov
add
mov
push
stos
test
int3
mov
dec
mov
xor
fistpl
cmp
rep
cmp
and
nop
fs
dec
inc
fcomps
push
aas
arpl
mov
jecxz
or
mov
pop
bound
push
dec
jno
jnp
in
fcomi
push
roll
push
cmp
mov
inc
aam
mov
addr16
push
mov
lock
mov
or
xchg
sti
dec
mov
test
inc
inc
lods
int
leave
out
mov
push
gs
ror
jmp
and
jno
or
jl
pop
jl
jnp
sub
inc
jae
icebp
jne
pop
mov
pop
mov
or
cmp
dec
cmp
add
daa
cmp
cltd
cld
and
cmc
jge
ljmp
mov
cli
push
clc
mov
fadd
cmc
in
clc
jnp
mov
pop
jne
subb
mov
aad
push
popf
aam
test
push
mov
push
call
sub
decb
sbb
sub
or
and
jecxz
sti
dec
bound
cmp
mov
jg
stos
insb
add
lods
inc
push
pushf
jnp
add
ljmp
sub
adc
sbb
mov
cmp
sub
test
xchg
rcl
rorl
push
xchg
ficompl
in
xchg
scas
iret
cltd
mov
jle
fbstp
or
ret
xor
out
xchg
mov
std
mov
mov
jg
lods
fildl
push
add
inc
and
mov
setp
sbb
leave
loope
ja
clc
mov
fldcw
push
cmc
mov
cmp
add
ljmp
inc
pop
fdivrp
jno
in
mov
or
xorb
mov
adc
mov
fstl
cmpsl
jnp
xor
sbb
cmpsl
je
call
enter
or
gs
inc
mov
mov
pop
fists
lds
fldl
pop
lods
unpckhps
push
push
stos
out
adc
pop
pop
lds
sbb
xor
aaa
mov
aas
aas
fldt
lret
clc
cmp
mov
pop
scas
add
lret
rcll
fimull
sahf
xlat
cwtl
add
aas
ret
out
into
lahf
xorb
rcll
xchg
and
cmpsb
mul
mov
push
adc
fisubs
mov
insl
mov
negl
hlt
loopne
xchg
in
addr16
add
ret
or
lods
push
xchg
rclb
in
fimull
sbb
stos
daa
loopne
test
or
jnp
cmp
inc
add
adc
xchg
cmpsl
or
mov
dec
or
and
out
hlt
sub
xchg
cmp
pop
inc
jg
push
inc
xchg
mov
push
outsl
lock
es
dec
lock
mov
js
iret
xor
add
jns
rorl
cli
test
repz
ror
divb
mov
je
enter
inc
sbb
xor
gs
imul
push
in
jmp
mov
jmp
aaa
inc
aaa
fadd
icebp
cmc
xor
adc
cmpsb
jmp
sbb
push
mov
mov
sbb
and
jae
mov
add
std
cld
mov
aaa
cmpsb
divb
cmpsl
dec
push
nop
sbb
xchg
das
mov
xchg
jle
fistpll
pop
push
flds
gs
int3
or
sbbl
ficomps
fisubrl
xchg
inc
movsl
xchg
mov
jns
or
add
clc
je
jecxz
xor
and
nop
leave
sub
imul
lret
push
jmp
jge
insb
movsb
out
fdivl
jno
popf
push
or
jle
push
jmp
jae
int
iret
or
push
xchg
jnp
mov
mov
pop
and
pop
icebp
test
insb
das
sbb
cmp
in
pop
mov
add
cwtl
pop
inc
shlb
shll
lock
mov
mov
push
xchg
ficoms
mov
pop
mov
add
adc
ljmp
mov
daa
insb
fstl
mov
dec
jecxz
rorb
xor
stc
jns
cmp
clc
jecxz
jo
repnz
fldcw
pop
aaa
mov
pop
push
cmpsl
lea
sbb
add
and
cmc
or
cmp
inc
pop
pop
gs
cli
subb
repnz
mov
repz
mov
out
mov
sbb
aas
fdivrs
dec
repnz
out
repz
xor
aad
stos
inc
jne
nop
jle
fcompl
imul
xor
das
pop
hlt
out
dec
daa
ficomps
adc
dec
ds
push
add
and
push
dec
ret
xchg
cs
jmp
test
add
inc
adc
and
push
jns
dec
push
fs
lret
mov
mov
cld
jp
and
and
jne
push
xchg
pop
cmpsl
out
pop
loopne
sub
add
cmp
mov
das
test
aaa
push
jl
psllw
add
xor
lahf
push
or
repz
fisttps
mov
pop
xchg
pop
pop
mov
js
in
sub
xchg
fildl
outsb
outsl
mov
lods
testb
neg
mov
into
addb
xacquire
repnz
push
lods
lods
push
jmp
int
sbbl
int3
fldt
fcomp
mov
insl
insl
inc
dec
mov
lds
mov
or
mov
aas
jae
insl
ficomps
mov
lahf
mov
jb
std
fsubrs
inc
je
jle
cmp
mov
insb
cmc
push
les
imul
cltd
js
mov
pop
add
fidivs
inc
add
subl
cmpsb
mov
mov
or
bound
sbb
daa
in
loop
fs
test
arpl
xchg
roll
push
inc
adc
add
popa
ret
jmp
sti
cmp
fsubrl
int3
pop
sub
imul
ljmp
aaa
mov
push
cld
jne
leave
pop
js
lahf
test
push
sub
imull
xchg
roll
fcomi
outsl
mov
and
lods
dec
add
arpl
in
sahf
jecxz
xor
in
fwait
jle
and
enter
cwtl
imul
inc
add
addr16
cs
int
das
test
fucom
mov
les
in
xor
stc
inc
sbb
je
das
push
loope
push
pop
xchg
scas
fiadds
fwait
mov
cs
outsb
fbld
jo
stos
cmpl
cmp
fisubrs
int
out
add
sub
fisubl
loop
push
cs
aad
je
mov
ficoml
cmc
xchg
cmc
out
dec
mov
rcr
fiaddl
dec
or
sbb
cmp
xchg
jg
pusha
jp
mov
lcall
loopne
inc
dec
outsl
outsb
pop
pop
das
adc
sahf
xor
pop
sub
fwait
jmp
movsl
rorl
imul
or
jnp
mov
insb
inc
pcmpeqb
sbb
shll
cmp
sbb
imul
add
stc
dec
pop
das
push
into
ja
xor
jle
sbb
xor
jecxz
xor
jecxz,pt
out
das
jne
jge
test
jns
pop
jnp
mov
div
loope
mov
cmp
mov
iret
imull
push
xchg
add
jae
arpl
jns
sbb
add
ror
inc
imulb
inc
mov
aaa
mov
lcall
sbb
jmp
adcl
ret
add
int3
add
mov
sub
test
das
mov
push
popa
xor
pop
pmulhuw
and
roll
or
sub
jb
push
adc
fcmovbe
lcall
shlb
shll
add
inc
cli
shlb
aas
push
lcall
or
xor
lret
mov
sbb
inc
loop
incb
lret
or
jp
mov
mov
or
pusha
jae
adc
popa
inc
rorl
fwait
divb
sbbl
scas
js
hlt
mov
test
les
cmp
push
test
nop
orl
adcb
jge
mov
stos
je
mov
pusha
aas
add
shrb
pop
add
mov
outsb
mov
and
je
dec
add
inc
jno
in
fldcw
jmp
gs
jp
rorb
aam
inc
rcll
jmp
cmp
iret
xor
fsincos
sti
xchg
popa
lahf
dec
push
ds
mov
icebp
or
jecxz
aad
inc
mov
or
cmpl
sub
cmpsl
push
sbb
repz
clc
push
cli
int3
ss
je
mov
cmp
inc
loope
sti
sub
dec
lret
sub
add
sub
sub
sbb
fildl
push
stos
push
pop
mov
icebp
push
lcall
mov
bound
and
rclb
and
lret
scas
inc
das
loopne
add
mov
sbb
iret
inc
out
nop
push
hlt
adc
sahf
imulb
icebp
push
adc
pop
lahf
fbld
movsl
arpl
push
sub
mov
js
mov
fldt
in
inc
inc
sub
sbb
shrl
fldt
mov
cmc
and
push
mov
and
iret
loop
add
dec
fistpll
mov
push
dec
jp
repnz
js
je
shr
mov
pop
sbb
inc
mov
imul
pop
add
pop
and
sahf
stos
push
mov
aaa
insl
inc
cmp
ja
orl
in
jp
push
xor
jns
aaa
loop
mov
movntps
movsl
cmpsb
ret
stos
mov
xchg
lahf
sub
pop
pop
fwait
push
mov
pop
insb
ret
dec
or
int3
xor
xchg
dec
mov
push
push
inc
ret
xor
vcvttpd2dqy
sub
nop
adc
fwait
or
mov
pop
mov
es
inc
mov
packsswb
mov
mov
lret
pop
pop
lret
stc
xchg
dec
add
inc
popf
ror
push
pop
repz
mov
repz
xor
js
movsl
outsb
into
es
data16
pushf
fwait
xor
testb
push
or
dec
int3
push
xchg
dec
out
call
rcr
xchg
xor
adc
imul
xchg
jne
mov
aad
imul
mov
dec
mov
xor
subl
pusha
fcmovbe
adc
dec
insl
lods
out
into
jp
sahf
inc
mov
jns
mov
aam
repz
loope
jg
jl
sub
sub
cltd
das
leave
or
ljmp
sti
adc
ds
lods
mov
push
sub
dec
cmpsl
shrl
sbb
or
fs
adcl
push
and
xchg
jmp
xchg
inc
lret
insl
fisttpl
test
xchg
lea
cmp
std
int
adc
cli
mov
mov
push
mov
in
push
add
cmp
xchg
stos
in
pop
push
cld
jbe
popa
shll
ds
jle
dec
fbstp
jle
cs
push
loope
dec
stos
or
sbb
push
mov
insl
movsl
aaa
xchg
or
inc
fildl
je
sub
cmpsb
pop
adc
test
repz
int
cmp
call
pop
and
pop
aas
jl
repnz
push
pop
sub
imul
int3
call
pusha
subb
push
aam
push
daa
xor
jnp
push
stos
dec
jmp
rcrl
add
gs
cs
xchg
xlat
jecxz
pop
mov
es
scas
je
out
sbbb
lret
je
xor
out
push
jge
sbb
insl
or
sahf
dec
mov
jge
rcrl
icebp
stos
jnp
popf
sbb
loope
pusha
jg
sbb
inc
push
and
lret
xor
jecxz
inc
stos
add
or
jg
cld
mov
sub
cmp
popfw
iret
xor
hlt
cmpsl
mov
mulb
mov
adc
imul
lods
lcall
les
data16
popa
jecxz
mov
push
outsl
imul
mov
jnp
clc
ficompl
add
notb
mov
js
movsl
cld
xchg
add
add
push
push
mov
sub
fsubrs
js
sbb
mull
insb
pop
lods
bound
sbbl
movsb
and
sub
lret
outsb
je
mov
sub
movsb
fbstp
fisttpl
xor
inc
insb
aam
jb
add
rorb
cli
shrl
orb
push
fisubl
push
int
push
test
xor
push
dec
add
out
std
test
in
out
ja
jmp
cmpsb
and
pop
cmp
test
ret
cwtl
xchg
es
aam
jbe
sbb
mov
icebp
xor
je
aad
sbb
jle
xchg
je
loopne
xor
jbe
scas
jge
xor
je
mov
adc
testl
mov
pop
icebp
adc
pop
jp
data16
dec
aad
jle
stc
inc
dec
movsl
cmpsl
insb
xchg
push
xchg
mov
ret
stos
test
inc
jle
sbb
sbb
lret
push
inc
daa
push
cmp
and
pop
int
out
sahf
sahf
inc
out
or
fidivrl
hlt
out
inc
enter
dec
cwtl
scas
es
clc
outsb
stc
jae
and
insb
std
jns
mov
incb
out
popa
and
js
aam
test
pop
add
push
sub
imulb
outsl
sbb
es
cli
out
ret
push
adc
daa
xchg
push
leave
ret
sbbb
adc
pop
sbb
mov
test
fldt
ss
cmpsl
add
cmp
cmp
cmp
jecxz
or
es
jb
adc
scas
fisttpl
mov
repnz
pop
xchg
test
push
pop
mov
fs
pop
adc
aad
in
cwtl
push
cmpsl
jge
test
pop
mov
test
into
push
cli
push
mov
adc
mov
xchg
pop
or
cltd
lret
ljmp
mov
loopne
pop
and
lock
inc
faddl
mov
jecxz
loop
popf
dec
jge
cmp
shll
cld
js
jp
mov
mov
shll
ljmp
sbb
jmp
pop
cmp
cli
and
or
roll
xchg
sub
xchg
add
cmovno
mov
loop
lea
xchg
push
aas
jno
and
jne
jg
jns
pop
test
sbb
jmp
insl
mov
andb
daa
outsb
mov
pop
cmp
ljmp
popa
sub
adc
add
push
in
lret
aas
pushf
repz
inc
dec
outsb
imul
ds
in
sti
shlb
imul
call
push
xor
mov
cltd
or
sub
sbb
jmp
xchg
pop
cmp
mov
push
adc
mov
repnz
mov
test
xchg
cmp
stos
and
lods
pop
in
push
imul
rclb
lods
cwtl
cwtl
mov
scas
xor
jle
pop
sbb
pop
into
pushf
cmp
je
and
popa
sub
add
mov
movl
sub
push
stos
cmp
mov
mov
cmpb
adc
jnp
ficomps
dec
and
mov
ljmp
loope
jmp
mov
imul
adc
dec
sub
push
push
pop
jmp
dec
lds
mov
icebp
sti
and
mov
es
jno
sbb
outsl
and
adc
jp
aaa
test
and
in
or
xchg
push
inc
popf
sub
adc
icebp
push
cmpsl
add
dec
popf
cmc
inc
stos
jnp
aaa
push
mov
pop
lods
adc
jge
aas
pushf
fs
mov
or
scas
push
xor
lahf
mov
cmp
and
call
arpl
sub
dec
or
shrl
popf
fs
shlb
pop
inc
mov
pop
or
mov
mov
xor
cmc
test
negb
aam
mov
mov
lock
pop
shlb
mov
sti
mov
bound
fstpl
ljmp
popa
movsl
or
mov
cmp
clc
xor
arpl
and
fildll
jae
sbb
and
mov
fildl
or
xlat
xchg
sub
cmp
stos
mov
mov
jge
nop
adc
jg
dec
mov
les
ffree
movsl
add
sbb
mov
sub
imul
or
sbb
mov
or
pusha
jle
loop
sarl
xor
std
rorb
and
fldcw
mov
inc
push
test
scas
popa
adc
lahf
pop
push
sti
lahf
daa
cmc
sbb
sub
adc
lods
cwtl
and
push
mov
lahf
jecxz
std
cmp
adcl
sahf
movl
ror
dec
inc
sbb
in
and
ret
in
adcb
mov
ja
lds
mov
ds
push
push
jge
fs
sbb
adc
leave
cmp
ljmp
jge
movsl
cmp
rorl
push
dec
xlat
mov
movsb
ja
mov
mov
cmp
inc
jb
inc
js
std
mov
das
lods
jnp
imul
push
adc
and
roll
pop
pop
jns
sub
gs
mov
iret
add
mov
pop
push
cmp
andb
je
sub
mov
sti
xor
xchg
pop
cmpsb
and
bound
lret
dec
mull
or
test
cli
sarb
inc
inc
xorb
adc
movsl
popa
cmp
pop
pop
ds
mov
xchg
sbb
mov
and
int3
ror
sbb
pop
aas
lock
aam
jge
fdivr
es
fdiv
js
push
jae
test
mov
sti
rol
and
jg
pop
in
mov
push
clc
movsl
mov
negl
jmp
sub
sahf
mov
sub
insl
rcrl
jnp
leave
mov
jle
leave
cld
stos
jl
jnp,pn
fcoml
inc
xchg
int3
mov
xchg
insl
push
stos
mov
and
ficomps
testb
arpl
mov
sbb
add
push
into
push
jecxz
add
jo
out
idiv
pop
or
roll
xchg
test
repnz
pop
jo
add
xlat
imul
sub
rorl
jge
cmpl
push
sti
push
aam
dec
out
lret
test
jno
lret
fst
pusha
mov
mov
xchg
or
stc
inc
mov
cs
cmpsl
dec
rcrl
mov
dec
lret
mov
lods
jbe
xchg
ds
push
sub
mov
mov
nop
push
push
fsubrp
sbb
lret
out
xor
movsl
test
jnp
je
xor
or
pop
dec
aas
add
jp
popf
inc
mov
pop
add
lods
sub
push
mov
ret
xchg
mov
icebp
pushl
icebp
enter
cmp
fiadds
movsb
aam
sbb
subl
out
fsubrl
jmp
and
loope
lahf
mov
ss
xchg
adc
out
aas
pop
xchg
sbb
xchg
jae
xchg
jge
aam
mov
lahf
lret
inc
push
add
jne
test
jbe
loopne
sbb
add
dec
out
testl
ss
pop
add
testb
lret
dec
fistpl
fwait
test
mov
addl
stos
add
popa
mov
adc
aas
inc
cmpsb
jbe
cmp
mov
sbb
inc
pop
xor
inc
pushf
test
jno
add
movsb
stos
push
push
fcmove
push
vmptrld
flds
or
div
xchg
ret
jb
adc
xor
add
sub
mov
push
jecxz
mov
in
daa
or
je
es
add
xchg
inc
push
arpl
mov
jnp
inc
fbld
sti
clc
xor
aam
das
js
test
jge
popa
and
dec
ja
pusha
lock
sarl
add
fs
fsubr
jecxz
outsl
lahf
dec
ret
imul
in
xor
cmpsb
xchg
ss
push
mov
xchg
in
jp
mov
jmp
fstpl
push
lahf
jbe
or
mov
xor
cld
aad
pop
cmp
subb
xor
test
adc
popf
dec
outsl
subb
cmp
pop
jns
pushf
push
fnstcw
stc
inc
lcall
call
or
mov
and
ret
jb
mov
clc
std
push
sbb
fsubrs
fdivp
adc
mov
mov
insb
push
out
pop
push
dec
sbb
les
mov
lret
shll
xlat
xchg
in
mov
mov
cwtl
inc
clc
dec
or
dec
test
push
and
insb
cmp
and
xchg
insb
stc
mov
imul
stos
jno
push
icebp
or
test
sbb
jnp
jns
inc
out
jge
popa
out
mov
jl
cmp
sbb
aas
ror
add
into
stc
sub
fimuls
jns
cmp
xchg
test
mov
pop
rcll
push
cmc
xchg
mov
xchg
and
loope
push
and
das
in
sub
aam
jne
dec
xor
lret
fists
mov
adc
loopne
cmp
sbb
into
inc
addr16
cmp
clc
sbb
fcmovnbe
push
fistpll
push
das
mov
push
ljmp
adc
stc
outsb
jno
pusha
popa
adc
fldenv
pop
insb
pushf
loopne
mov
push
arpl
js
sarl
push
jb
fadd
popf
add
js
mov
cmp
data16
orb
sub
test
int3
shrb
mov
pop
xchg
add
lock
daa
shr
inc
or
inc
or
nop
movsl
imul
jecxz
hlt
pusha
and
jmp
pop
pop
test
repnz
stc
jo
xor
jno
xchg
imul
je
iret
sbb
loopne
push
xchg
jae
fwait
sub
mov
cmpsb
adc
ljmp
push
pop
inc
cmpsl
loope
sub
push
cmp
scas
call
rorl
inc
mov
cmpsl
movsl
ljmp
or
daa
xor
jbe
sub
mov
cmp
insb
loopne
lret
mov
push
sbb
or
dec
out
roll
out
fsubrl
addr16
ror
mov
add
or
jae
mov
mov
jno
pusha
aam
pop
add
jle
into
movsl
or
cmc
fidivl
inc
adcl
dec
cmp
arpl
test
repnz
shl
nop
mov
fists
ret
iret
int
xchg
push
xor
xor
sub
mov
cmpsl
fcom
sbb
int3
shrb
shrb
andl
push
clc
and
pop
pop
stc
mov
lods
aam
ficoml
push
jbe
lock
jbe
inc
lea
nop
leave
jp
clc
jns
enter
movsb
dec
stos
das
push
aad
adc
xchg
cmp
test
cmp
dec
mov
fld
sahf
lcall
je
aas
cmp
mov
or
xchg
pop
popf
jbe
cmpl
sarl
dec
dec
popf
inc
je
je
mov
dec
mov
inc
in
sbb
inc
adc
sbb
in
out
stos
scas
fcmovbe
pop
fsts
daa
inc
ret
lock
shl
pop
adc
hlt
jl
or
cmpsl
and
fsub
movsb
pusha
int
push
aas
popl
mov
mov
mov
ret
push
popa
mov
add
das
xchg
fwait
xlat
and
mov
xor
dec
jmp
fisubl
shrl
fsubl
inc
fmull
push
push
test
inc
insb
sub
cmp
stos
jns
fidivs
mov
mov
popf
je
repz
das
in
gs
scas
ds
pop
repz
lds
dec
sbb
in
pop
lahf
mov
pushf
dec
xor
xchg
gs
adc
dec
ja
sbb
xor
push
ja
sbb
push
int3
pop
ja
inc
sahf
inc
cmpsl
jnp
adc
clc
mov
addl
add
inc
mov
mov
ja
adc
add
icebp
xor
and
push
shrb
add
dec
fcompl
ljmp
dec
dec
jle
sub
jns
ss
sub
sbb
sbb
imul
mov
jnp
xchg
lahf
test
sbb
jnp
and
cmp
or
mull
jno
mov
fdivs
xlat
xchg
insb
inc
inc
lret
fldenv
sarb
icebp
mov
jecxz
and
iret
jb
or
cmpsl
pushf
jne
push
add
or
ljmp
adc
push
pop
icebp
and
sub
mov
mov
push
jecxz
shll
addl
das
inc
xchg
add
dec
mov
fidivs
test
sti
add
pushf
ret
repz
adc
int3
popa
insb
inc
sbb
arpl
mov
mov
sub
incb
fisttpl
fwait
adc
jge
adc
pop
mov
dec
add
orb
xor
jmp
mov
push
pop
and
js
inc
push
ja
add
jnp
shr
mov
lods
rol
test
or
pop
inc
jmp
adc
cmp
loopne
dec
pop
pop
das
jae
pusha
or
fmuls
add
out
or
stos
inc
pusha
je
cmc
adc
xchg
push
insb
fucom
jo
mov
jno
fcomps
inc
mov
test
sbb
into
test
lret
leave
cmpsb
hlt
imul
daa
insb
loope
pop
aad
aad
sub
scas
pushf
xchg
dec
popf
in
pusha
pop
jnp
jo
into
lods
inc
movsb
xchg
adc
xor
daa
sar
outsl
mov
into
sbb
aam
jo
xorb
das
pop
sti
xchg
or
mov
fdivrl
dec
cwtl
and
push
adc
sbb
lret
mov
mov
inc
ds
lret
pop
xor
sub
inc
dec
int3
dec
roll
int3
mov
sbb
push
movsl
ret
popf
cwtl
add
je
cmpsb
or
jbe
loop
repz
in
mov
stos
dec
bswap
inc
imul
scas
mov
mov
mov
outsb
fucomi
mov
fs
rcl
xor
into
add
cltd
push
rolb
in
andl
sbb
lock
hlt
jns
add
push
or
and
mov
xor
sahf
and
lock
pop
push
leave
mov
inc
in
pushf
push
dec
add
imul
data16
les
pusha
xor
gs
cmpsb
notb
xchg
and
sub
sbb
aam
or
scas
dec
push
int3
movsl
jno
mov
push
mov
nop
inc
clc
jecxz
push
insb
in
popa
jg
cmp
mov
jle
das
jo,pt
mov
mov
scas
ret
lods
or
mov
or
or
enter
mov
dec
leave
cmpsl
jns
repz
mov
pop
out
fimull
call
jbe
cmpsb
push
repnz
cmpsl
push
pop
je
outsl
xchg
imul
fwait
cmp
cmpb
pop
stos
xchg
sub
and
adc
inc
push
inc
pop
push
lods
fists
mov
in
mov
or
sub
rorl
scas
fwait
push
ja
inc
loopne
xchg
std
lods
icebp
ljmp
repnz
cmpsl
sub
mov
push
add
loop
mov
imul
lock
mov
cmpl
xor
adc
mov
xchg
mov
add
insb
xor
clc
into
vpshufd
das
push
movsl
mov
xchg
pop
jnp
mov
xlat
add
pop
fistpl
lea
add
xchg
pop
pop
xchg
stc
mov
fnsave
and
sbb
sbb
cmp
jg
leave
cmp
mov
popf
in
call
xchg
loopne
lea
aas
movb
daa
xchg
dec
fldcw
std
dec
sub
cltd
add
in
sbb
imul
dec
pop
leave
out
jle
mov
dec
dec
in
jge
scas
ret
add
adc
test
add
jecxz
adc
pop
inc
push
dec
test
das
daa
es
sbb
fcomp
sbb
mov
cmpsl
adc
push
daa
and
dec
sub
mov
jnp
jmp
lret
xchg
rcll
out
das
in
shl
ja
nop
arpl
push
and
xabort
std
push
mov
pushf
mov
dec
test
imul
cwtl
cli
fwait
xor
mov
packsswb
lds
loope
pop
test
fwait
xor
mov
les
jae
aam
jae
iret
orb
push
in
out
and
ljmp
repnz
xor
mov
xchg
ja
cmc
lock
mov
cli
divl
or
int3
mov
mov
std
neg
xchg
sub
pop
inc
stos
mov
clc
cli
adc
es
call
sbb
sbb
or
jl
and
push
xor
xchg
jmp
lods
xchg
cwtl
sti
aas
jnp
movsb
sbb
fsubrl
dec
mov
fnstsw
jmp
subl
cmp
pop
enter
push
pop
out
rcl
inc
sbb
out
stos
cmc
mov
sbb
inc
cltd
pop
int
inc
xchg
fistps
test
pop
fildl
icebp
push
add
inc
movsl
pop
aaa
or
ljmp
sub
out
adc
push
sub
arpl
ja
mov
lcall
mov
mov
loopne
push
ljmp
scas
cld
inc
jne
subl
popf
jmp
mov
aas
cmp
mov
es
xchg
jo
rolb
mov
add
arpl
lods
sub
push
aas
fs
nop
fs
mov
orl
in
jge
inc
mov
movsb
bound
push
adc
sbb
mov
mov
aam
test
mov
add
push
insb
mov
out
xor
mov
push
sbb
sub
pop
mov
ss
sub
xchg
gs
push
xlat
dec
call
inc
imul
xchg
lods
sbb
cs
mov
ret
hlt
aaa
inc
pop
es
lahf
or
ret
push
cmpb
or
pop
fmul
lret
or
loop
jecxz
sub
js
lods
adc
in
push
stos
lock
xchg
pop
or
cmpsb
and
mov
jg
stos
movsl
aaa
out
in
xor
pop
mov
cmpsb
mov
pop
push
gs
add
lahf
pop
pop
movsl
xchg
loope
push
dec
outsl
test
inc
mov
cld
pop
lahf
xor
out
call
outsb
xchg
hlt
add
dec
mov
jb
sub
icebp
popf
js
leave
rcl
mov
dec
mov
push
and
push
and
insb
mov
cli
jbe
push
adc
lret
jne
jmp
dec
out
dec
sub
lock
push
and
xlat
icebp
out
inc
les
repz
and
pop
push
daa
cmp
mov
or
jecxz
in
jbe
and
dec
push
sti
add
aaa
ret
mov
or
int
jns
pop
inc
sub
dec
mov
lahf
dec
out
mov
sbb
push
jae
into
pop
and
fbld
fmul
sbb
out
ret
jp
pop
mov
cs
jmp
add
sub
sarb
out
xor
outsl
orb
mov
pop
cmp
mov
pop
dec
pop
clc
pop
sub
movsb
call
inc
pushf
mov
jno
test
cmc
adc
mov
imul
cmpsl
insb
int3
sbb
xor
pop
out
mov
add
push
outsb
inc
rclb
jl
dec
sbb
and
mov
test
dec
jne
movsl
movsb
iret
xchg
xchg
pop
and
sub
sub
fxam
sub
mov
lods
cmpsl
insl
dec
push
lock
xchg
mov
jmp
int3
dec
insl
dec
cltd
lret
mov
mov
push
dec
cwtl
pop
aas
mov
adc
add
sbb
loop
testl
call
loop
adc
stos
mov
push
push
mov
into
popf
clc
adc
sti
faddl
pop
pop
mov
cltd
pop
test
push
sub
mov
sbb
fisttps
test
xlat
leave
jecxz
pop
sbb
cmp
push
push
popa
insb
insb
dec
rcrb
xchg
cmp
bound
lds
and
pop
pushf
test
pop
aas
insl
inc
mov
dec
lods
sbb
mov
sar
push
adc
add
jg
jmp
pop
mov
popf
sub
adc
adc
out
sbb
nop
sbb
jp
fimuls
add
nop
dec
cs
call
lcall
insl
jle
inc
inc
mov
ret
std
adc
xchg
pop
je
pop
sub
daa
ds
rcrb
xchg
fsubs
cmp
nop
cwtl
pop
call
adc
in
enter
mov
loop
outsb
lods
lret
loop
pop
jmp
xchg
or
cltd
jl
pop
xor
sub
ja
sub
fimull
repnz
cwtl
in
push
add
popa
dec
push
xor
xlat
fisttpll
test
out
call
push
and
add
clc
aaa
lahf
dec
cmp
adc
jo
cmp
cmc
push
aam
stc
ljmp
adc
xor
pushf
jecxz
lds
pmulhuw
jp
les
enter
pushf
imul
sahf
push
and
cmc
ret
push
int
xchg
dec
movsb
sub
rcrl
xchg
xchg
jge
push
inc
scas
xchg
mov
ljmp
clc
push
inc
out
lret
add
leave
outsl
popa
in
add
mov
xchg
lret
xchg
cmc
fdiv
lock
ja
les
inc
dec
pop
and
xchg
call
out
loopne
and
sbb
or
movsl
mov
push
out
aam
lea
cltd
dec
mov
bound
xor
std
cmp
jno
movsl
xchg
sbb
cmp
lods
arpl
aam
pop
data16
subb
shll
out
dec
aad
push
push
xchg
jne
ljmp
or
jmp
push
pushl
andl
pop
inc
inc
or
push
sbb
rorb
and
fiaddl
pop
sbb
jne
repz
enter
push
fiaddl
testl
xor
fisubl
mov
leave
add
repz
enter
cmpb
add
xchg
add
jns
mov
mov
jg
das
mov
sarl
cmp
mov
and
cmp
adc
ja
fistps
mull
dec
cld
dec
imul
adc
hlt
jge
push
mov
stos
pop
in
mov
and
nop
jp
jbe
dec
test
in
pop
cmpl
jmp
lods
fdivl
jbe
sub
testb
add
out
scas
andb
xor
dec
and
xchg
sti
and
ljmp
pop
fwait
mov
inc
les
mov
cwtl
dec
call
pop
add
xchg
mov
sahf
push
xor
orb
jp
lcall
repnz
js
adc
in
in
outsl
notl
pop
int3
adcl
rorl
scas
daa
in
fcomp
add
out
shrb
aaa
int
mov
push
pop
and
mov
sub
add
xor
and
pop
shl
inc
cs
adc
out
add
sbb
dec
ja
repnz
xchg
dec
loope
int3
iret
dec
jae
push
mov
cmc
cmp
out
rorb
test
ret
dec
fs
and
and
cmpsl
movsl
loop
fadds
idivl
mov
adc
jge
add
xor
enter
sahf
or
jns
pop
jge
cmp
cmpsl
and
dec
cmpl
pop
ss
ret
jmp
pop
push
xchg
jns
cmpsb
or
mov
push
ficomps
mov
pushl
xor
gs
ret
enter
dec
mov
pop
ljmp
cmc
inc
and
jecxz
xchg
pop
adc
int3
push
mov
adc
dec
jbe
xchg
xor
scas
push
add
pop
rorl
adc
ljmp
arpl
stos
jns
repz
inc
and
dec
mov
xchg
or
dec
mov
lcall
lds
xor
decl
clc
push
cwtl
enter
pop
jecxz
dec
lret
aam
orl
ljmp
cs
pop
jge
push
push
xchg
pusha
xor
xchg
icebp
mov
out
mov
sub
xor
inc
sub
stos
pusha
adc
std
dec
mov
stos
xor
mov
std
pop
mov
mov
imul
xor
mov
insl
sbb
sub
sbb
call
inc
inc
or
subl
sahf
add
jp
scas
mov
mov
or
sub
sbb
lods
inc
popa
cmp
insl
enter
mov
or
push
int3
mov
mov
mov
rcrb
adc
test
aaa
dec
pop
mov
push
das
inc
mov
bound
lea
xor
pop
dec
xorl
inc
add
cmp
std
outsl
lock
adc
sbb
repz
int3
lret
int
js
roll
sbb
pop
aam
mov
pop
mov
adc
push
out
add
orb
cmp
loope
shlb
movsb
inc
andb
xchg
add
repnz
mov
ret
lock
shlb
sub
pop
xor
push
ret
dec
pop
adc
fisubrs
je
mov
mov
dec
cmp
mov
inc
mov
add
xlat
dec
fnsave
cmpsl
ljmp
inc
or
xchg
and
jno
xor
mov
inc
ret
in
or
fcomp
in
mov
mov
clc
loop
cli
and
imul
jp
fisubl
shll
movsl
out
push
cmp
xchg
and
push
or
inc
aad
repnz
lcall
jne
dec
repnz
mov
int
push
xchg
sbb
in
in
mov
nop
jb
adc
cmpsl
mov
mov
insl
jle
inc
add
push
subl
int3
and
pop
or
xchg
imul
out
ds
pop
call
adc
lcall
and
mov
inc
fs
outsl
mov
lcall
push
mov
icebp
in
pushf
add
xchg
repz
mov
and
mov
xor
ja
inc
sahf
aaa
and
push
aaa
subb
shl
hlt
xor
xor
mov
ret
sbb
insb
outsb
pop
cmp
cs
adc
insb
repz
ljmp
sbb
push
mov
push
sarb
cmp
mov
and
adc
fwait
fwait
xchg
inc
mov
imul
loope
shlb
idivl
adc
fwait
add
and
and
jns
jmp
dec
sub
popf
mov
mov
loop
ret
xchg
sub
jge
cmp
in
int3
mov
js,pn
jne
mov
bound
into
fimuls
xor
outsb
xchg
push
cld
mov
ja
out
push
sub
jnp
sub
sbb
into
out
push
mov
icebp
cld
push
push
or
inc
and
cmpsl
popf
loope
dec
jbe
xchg
dec
sbb
or
push
enter
movsl
xlat
out
xchg
aam
mov
shr
and
cmpl
das
insl
and
mov
dec
cmp
test
ret
filds
xchg
aam
outsl
loop
xchg
rcl
fwait
jle
adc
mov
sbbb
mov
mov
push
test
xor
inc
roll
pop
adc
xchg
jne
jge
mov
scas
mov
lds
mov
cltd
cwtl
pusha
jnp
push
push
pusha
inc
sarb
jbe
push
jbe
repz
inc
pop
addr16
inc
test
mov
or
ss
and
insb
jle
arpl
mov
adc
xor
lock
xchg
lods
mov
push
les
or
push
pop
nop
xor
dec
push
jo
scas
ljmp
test
adc
dec
jo
mov
ja
xor
sub
gs
mov
mov
mov
aas
mov
pop
jae
movsl
mov
sbb
ffreep
out
mov
xchg
pushl
push
dec
dec
arpl
xchg
in
stos
gs
mov
or
sbb
rcrl
xor
mov
loope
int3
inc
in
rcrl
out
xor
jle
bound
orl
out
sbb
in
hlt
push
jp
sub
repnz
aas
or
mov
bound
rcrb
xor
movsl
cmp
push
pop
mov
mov
sti
push
lea
jns
into
cs
dec
sbb
mov
or
test
push
xchg
lods
push
push
inc
imul
or
rcll
fbstp
call
ret
xchg
dec
mov
sbb
movsb
cwtd
sbb
dec
arpl
aaa
cmpsl
pop
das
adc
push
lds
out
and
data16
sbb
and
cmpl
in
mov
clc
int3
dec
repz
xchg
mov
inc
jne
popf
jge
jmp
mov
push
int3
scas
pop
icebp
push
xchg
test
inc
stc
adc
and
add
xchg
push
cltd
xchg
pop
adc
in
lods
fisttpll
pop
divb
cmp
lret
stos
mov
jns
test
pop
imul
dec
ret
sbb
aam
pusha
sub
mov
push
cmpsl
loope
jo
add
cmp
xchg
je
push
lods
aam
icebp
gs
mov
pop
xchg
fs
sub
pop
inc
jmp
cld
jl
sbb
xchg
out
cld
aam
and
movsb
add
sub
xchg
shll
jge
jle
pushf
test
int3
mov
sub
jl
xchg
xlat
loope
pop
loope
xorl
push
out
mov
jbe
mov
fwait
icebp
lret
test
or
adc
inc
jecxz
cltd
lods
xchg
mov
jg
test
xor
dec
mov
mov
jmp
sub
pop
fsubr
xlat
into
stc
mov
pop
repnz
loopne
fisttps
pop
pushl
fldenv
pop
mov
aam
popl
test
clc
cmp
pusha
sbb
loope
orl
jns
add
mov
popf
and
sbb
ljmp
xorl
xchg
shrl
add
adcb
daa
mov
es
pop
fcomi
sarl
push
adc
push
adc
icebp
sbb
loopne
imul
fs
pop
jbe
mov
pop
int
lcall
lea
push
mov
rcrl
sub
push
imul
push
call
cmp
lds
push
shlb
mov
fldt
jns
push
inc
xchg
mov
jl
lods
cld
stc
ror
or
sahf
dec
sbb
arpl
sbb
movsb
mov
jmp
test
xor
fistpl
mov
hlt
xchg
xchg
dec
repnz
lods
aad
rcrl
es
and
xor
dec
xchg
or
add
out
cmpsl
and
mov
add
xor
mov
pop
fstl
ja
shrl
sbb
inc
mov
adc
sti
xor
insb
outsl
stos
lock
sub
ljmp
sarb
lret
mov
stc
ss
lea
ljmp
in
adc
xchg
adc
pop
lods
mov
adc
inc
mov
test
pop
mov
adc
add
imul
aaa
enter
and
insb
adc
mov
mov
jg
aaa
ficoms
cmpsb
jns
jl
mov
frstor
loopne
stc
andb
push
dec
test
pop
push
and
cmpsl
loope
adc
jg
lods
mov
push
xchg
mov
mov
popf
sbb
mov
pop
call
cmp
mov
sbb
bound
mov
cpuid
mov
jae
cmpsb
adc
pop
out
push
sub
in
sahf
mov
pop
add
addr16
jno
sub
hlt
test
in
and
sub
repnz
fidivrl
rol
ret
and
in
test
xlat
xchg
je
cmp
xchg
inc
and
inc
mov
je
mov
pop
xchg
js
lds
and
jg
flds
insl
push
fnsave
push
mov
icebp
dec
or
insl
mov
enter
push
sub
loop
push
jle
cmpsl
adc
dec
outsl
std
jns
test
mov
int3
sbb
xchg
addr16
in
mov
jp
in
fwait
loopne
push
pop
in
xchg
push
adc
cmpsb
mov
fnsave
xor
lock
ret
sub
lret
add
in
pusha
pop
insb
pop
mov
and
cltd
in
lods
sbb
inc
push
push
jge
out
jl
xchg
sub
inc
xor
or
in
jle
pop
sub
push
sub
outsl
push
jp
mov
fdivr
jb,pt
cmc
pop
clc
mov
lret
cmpsb
std
lahf
cli
je
lahf
add
dec
mov
dec
and
in
fs
cwtl
add
aam
test
cmp
dec
int3
mov
pop
sub
add
mov
xor
mov
cmpsb
jae
ja
in
mov
xlat
push
pushf
in
pushf
loop
push
mov
xor
adc
fistpll
pop
aam
jae
push
insl
das
insl
pop
dec
cmpsl
pop
test
or
fcoml
push
jb
int
adc
xor
mov
mov
or
xchg
stc
int3
enter
jecxz
add
call
sbb
push
repnz
dec
or
xorb
pop
enter
out
mov
mov
ds
std
sub
lret
inc
add
out
loopne
fiaddl
fsub
mov
pop
into
mov
scas
adc
cmp
fwait
add
cli
xchg
pop
jno
dec
insl
pop
scas
pop
and
xor
or
inc
push
and
adc
in
and
test
repnz
mov
sbb
ss
into
jo
push
xor
sbb
decb
push
sub
mov
sarl
cmp
xor
dec
inc
popl
sbb
and
std
xchg
add
in
int3
add
and
pop
ja
jnp
jg
fisubl
mov
xor
int
push
loop
inc
das
test
fnstsw
add
inc
shlb
add
jae
lock
pop
jp,pn
das
pushf
outsb
lock
mov
and
in
xchg
pushf
inc
mov
xor
cmp
or
add
loope
ja
fld
sbb
je
xor
mov
adc
lret
cmpsb
xchg
in
jb
or
mov
sbb
in
leave
sub
sbb
dec
je
mov
adc
dec
rorb
sub
inc
pop
cli
aas
movsl
int3
test
icebp
mov
out
and
scas
pop
sub
sub
insb
xor
ss
repnz
es
mov
or
cmp
lcall
in
and
insl
pop
lock
inc
pop
xchg
mov
loope
js
shll
xchg
std
mov
push
sub
and
roll
into
mov
xor
pushf
push
outsl
scas
int
jae
dec
adc
xor
mov
mull
test
lds
cmp
sahf
push
mov
leave
inc
gs
js
es
fildll
test
fisubrl
dec
hlt
push
nop
je
dec
pop
mov
shl
movsb
and
in
xor
sti
add
lret
imul
data16
adc
inc
shrb
adc
lods
sub
pop
sub
xlat
fisttpl
dec
sub
andl
jle
bound
in
xchg
ds
sub
push
andb
mov
daa
das
jno
je
xor
mov
in
mov
sub
enter
xor
mov
xor
fwait
xchg
jmp
push
adcl
addr16
insb
pop
repnz
dec
cltd
cmpsb
sbb
push
xchg
push
je
lock
jecxz
or
sub
mov
push
mov
je
popa
cli
out
xchg
push
cmpsb
outsl
mov
icebp
mov
ja
sahf
lret
fdivrl
cmpsl
stc
lods
es
outsb
lea
in
xorb
call
stos
dec
jge
sub
ficoms
stos
cmp
dec
cmp
lods
ss
cmpb
ds
in
std
imul
out
pop
dec
adc
add
out
cld
cmc
cmp
test
push
fldlg2
fildl
inc
pushf
push
ss
cmpb
daa
adc
jl
test
pop
stc
ds
dec
xlat
xor
mov
jb
mov
push
sbb
and
loopne
test
mov
lret
cmp
popa
shrl
aaa
fcoms
jg
subb
jae
push
adc
or
sarl
adc
out
sub
xchg
or
lock
cmp
adc
adc
clc
flds
jae
or
mov
mov
dec
rol
push
fsubs
sub
and
icebp
das
or
imul
pushf
inc
imulb
and
sbb
jge
rorl
movsl
aas
mov
lods
adc
jns
xchg
or
dec
outsl
lcall
xor
movsb
add
jg
xor
pop
inc
pop
ret
sbbl
add
scas
pusha
sbb
push
gs
aam
pop
ss
xchg
cmp
mov
out
inc
pop
xorb
cld
ds
mov
pusha
or
jne
xor
jp
cltd
in
push
push
mov
popf
testl
ja
sbb
jnp
movsb
cmp
dec
mov
or
pop
cmp
sbb
xchg
push
sub
bound
dec
jno
pop
or
pushf
adc
add
outsb
ss
push
jmp
inc
add
in
xchg
mov
mov
sbb
xor
mov
pop
xchg
nopl
repnz
leavew
or
push
or
pusha
or
imul
jl
sbb
aas
mov
lret
cmc
flds
aam
mov
lahf
xchg
or
sbb
xor
clc
test
cmp
inc
daa
push
cltd
pop
adc
inc
inc
lahf
xor
mov
sub
jl
mov
and
in
mov
mov
cmpsb
out
sub
mov
dec
loop
pop
mov
sbbl
or
int
mov
lcall
jp
loope
sub
xchg
mov
jmp
push
iret
cwtl
push
js
aad
loop
xchg
inc
jns
lea
cmpsb
lods
xchg
mov
or
or
repz
inc
nop
cmp
or
xor
mov
sahf
push
inc
scas
stos
sahf
sbb
adc
outsb
sbb
push
adc
adc
icebp
jle
test
and
mov
jg
push
out
fisubs
mov
sahf
pushf
jg
dec
bound
mov
pop
lds
addr16
and
jno
xor
aaa
mov
rcrb
jne
xchg
jnp
shl
leave
sbb
push
decb
push
clc
pop
mov
sub
xor
out
insb
mov
out
insl
fisttps
test
stos
pop
jmp
lds
cltd
arpl
or
popa
mov
popf
push
xor
sub
and
lods
add
ret
xchg
or
fdivs
iret
insb
push
cmc
adc
fistl
and
es
mov
mov
mov
sub
xlat
dec
mov
xor
jmp
addr16
sub
stos
loopne
les
outsl
inc
in
sbb
pop
inc
ficomps
test
pop
sub
mov
or
cmpsb
pop
and
xchg
pop
nop
xor
les
outsl
push
add
xlat
imul
mov
cld
add
into
scas
jno
add
scas
les
cmp
insb
and
inc
push
push
jl
rclb
push
loopne
mov
and
or
xchg
sbb
xor
dec
sbb
jmp
fisttpl
push
fistl
jbe
push
fdivrl
push
arpl
pop
lret
xor
rcll
scas
inc
or
pop
in
add
sbb
fmuls
data16
imul
in
std
stc
sbb
inc
or
sbb
xor
cmp
mov
cltd
xchg
ds
addl
nop
xor
outsl
mov
int
fsubrp
jle
mov
cld
or
push
incb
jmp
andb
fcomi
data16
cld
xor
das
dec
mov
inc
hlt
push
bound
repnz
les
push
xchg
mov
bnd
hlt
pop
nop
sub
adc
and
cwtl
xor
lea
sub
js
adc
stc
sbb
jmp
call
sbb
imul
ret
or
xchg
dec
sbb
mov
dec
adc
jae
pop
cmpsb
fwait
mov
add
or
sub
pop
xor
xor
mov
dec
clc
push
push
outsl
inc
jbe
push
dec
xchg
mov
push
in
mov
jne
scas
aam
cmp
sub
adc
pusha
and
and
rcrl
fldz
outsl
xor
testl
inc
add
fidivrl
or
sub
repnz
imul
sub
sbb
stos
ljmp
or
out
mov
out
cmp
rolb
ss
out
repz
xchg
scas
sarl
xchg
fsubs
and
cmpsb
sub
jne
decb
cmovs
out
pop
mov
jge
mov
jp
imul
mov
aaa
xchg
xchg
in
shrl
insl
mov
adc
jg
pop
repz
ret
into
aad
jmp
cltd
pushf
addr16
jnp
mov
mov
mulb
push
and
insb
jge
add
xchg
mov
xchg
xchg
cmpb
mov
movsb
or
dec
and
mov
push
xlat
fdivrs
imul
xchg
cmp
fdivrl
mov
fiaddl
xchg
sbb
sub
sbbb
js
and
andl
mov
push
xchg
cmp
lahf
dec
mull
sbb
daa
cld
pusha
idivb
jge
push
xchg
add
inc
push
and
das
stos
dec
lds
pop
jl
mov
fimuls
jp
int
bound
decb
bound
je
jns
pop
aas
pop
in
xor
sub
pop
jl
push
clc
mov
sub
inc
xchg
or
mov
fcoms
movsl
xchg
in
xchg
mov
ror
mov
int
cltd
push
cmpsl
lds
mov
lods
mov
pushw
xlat
loopne
into
push
mov
push
js
dec
jle
sbb
mov
xlat
push
cmp
jbe
dec
jecxz
push
pmovmskb
imul
popa
pop
not
movsb
mov
nopl
xor
jle
subb
in
add
int3
jp
cmp
push
repnz
dec
cli
jno
xorl
fs
std
push
mov
or
push
in
and
loope
into
inc
fcoml
das
ljmp
pop
mov
outsl
push
inc
ja
pop
jp
adc
lds
bnd
sub
notl
lods
add
lods
inc
cmp
enter
sti
les
sbb
mov
jo
mov
loop
ret
adc
push
jecxz
xor
mov
pop
inc
mov
add
imul
fdivs
push
and
xchg
xor
and
sarb
je
adc
push
fcoms
lcall
nop
pop
test
push
pop
adc
xchg
mov
daa
and
not
shr
popf
inc
push
xchg
cmpsb
insl
push
cmp
test
xor
mov
aam
add
jg
cmc
or
cmp
call
pop
stos
int3
pusha
adc
inc
ret
xor
mov
lea
call
dec
nop
pushl
xchg
push
inc
sahf
in
in
mov
add
pop
sarb
inc
popf
outsl
jno,pt
adc
imul
push
out
lret
cmp
push
ds
jmp
test
mov
shl
mov
dec
and
sarb
sbb
aaa
gs
ds
scas
pusha
mov
push
mov
dec
fcoms
sbb
int
ds
shll
sti
mov
rcl
jecxz
pop
scas
imul
repz
aad
mov
repz
jo
cmp
mov
hlt
mov
push
pop
imul
lret
or
or
push
push
adc
mov
andb
jnp
pusha
pushf
loop
sub
xchg
jb
mov
jno
nop
jg
sub
iret
mov
xlat
dec
scas
iret
pop
faddl
les
lea
dec
jl
inc
mov
inc
xor
xor
xor
lods
lods
mov
ljmp
les
inc
je
push
fucom
sub
rcll
mov
mov
and
adc
dec
es
sahf
ror
not
jno
xor
cmpsb
xchg
in
mov
jnp
lods
cs
repz
cmp
in
movl
je
mov
movsl
xor
bound
fucomp
pop
jp
lds
fmuls
sbb
in
xchg
xlat
sbb
mov
push
xchg
movsb
lods
movsl
clc
or
dec
ss
and
stc
mov
outsl
lcall
outsl
push
add
imull
lret
rclb
je
inc
and
gs
lahf
imul
dec
mov
jnp
jo
pop
push
sub
outsb
jns
les
cltd
cmpsl
pushf
sbb
mov
add
lea
pushf
out
nop
rolb
loope
xchg
push
ret
aaa
icebp
movsb
jnp
jle
mov
pop
push
sahf
inc
out
fwait
popf
lds
loope
cmp
mov
out
cltd
cmp
mov
mov
and
out
cmpsb
pop
or
pop
in
inc
pop
xor
ds
out
add
add
out
push
addl
sbb
into
test
loopne
rolb
cmp
arpl
dec
push
fabs
rcrb
xor
pop
cwtl
or
pop
ss
push
subl
ja
sti
dec
outsb
movb
cltd
repz
rcrb
aas
jno
cld
mov
sub
adc
lock
push
adc
subl
push
push
psrlq
xchg
xlat
out
imul
and
popf
dec
adc
sbb
cmpsb
push
ret
pushf
wrmsr
xchg
aad
jg
cmp
pop
rorb
sbb
dec
incl
cmp
aas
popf
enter
push
ficoms
je
fchs
xlat
fnsave
mov
in
xchg
fldenv
das
aam
lods
xchg
push
jne
pop
icebp
and
pushf
or
sub
add
arpl
iret
outsb
out
aaa
mov
sbb
jbe
cld
shrb
and
xchg
inc
push
push
push
es
vpshlw
adc
sub
insl
add
out
sbb
dec
stc
mov
sub
out
add
pusha
mov
push
fstl
jae
mov
ret
xor
out
sbb
jnp
dec
daa
iret
mov
dec
mov
push
jg
cmp
lahf
mov
fnstenv
pusha
and
shrl
inc
shll
or
stos
ja
pop
pushf
sbb
cmp
repz
jmp
dec
mov
ret
or
data16
rorl
movsb
cmp
das
clc
sbb
lea
outsl
sbb
mov
in
add
aas
lea
popf
mov
sbb
cmpl
or
or
or
jno
gs
pop
xchg
lret
roll
lahf
sahf
mov
rcll
inc
imul
jl
stos
scas
and
jb
pop
jmp
shl
push
add
cwtl
pcmpeqw
and
adc
inc
jnp
sti
mov
scas
movhlps
int3
aas
lds
push
adc
push
mov
and
sbb
pusha
addl
scas
pop
fmuls
cwtl
mov
and
mov
std
cmp
test
dec
jle
adc
mov
movsb
xchg
bound
mov
lahf
mov
xorb
mov
dec
cmp
xor
popa
mov
sub
xchg
mov
jno
ja
jle
pop
sbb
xor
cmpl
fisubrs
pop
push
mov
cmp
cltd
ljmp
aas
repnz
pop
mov
out
inc
fcmovu
into
sub
pushf
xchg
cmp
rcl
jnp
mov
mull
inc
mov
insb
xchg
jmp
test
xor
pop
loope
aam
cmpsb
adc
lea
xor
daa
mov
mov
movsl
and
imul
xchg
call
add
pushf
push
add
sbb
adc
stos
movsl
inc
cli
push
xor
or
aaa
pop
insb
xor
jo
fstpl
test
pushf
xor
les
ret
cwtl
pusha
sbb
add
fistps
mov
stc
push
movsl
jno
iret
or
xchg
cmp
sbb
fcomps
adc
adc
notb
insb
sbb
lcall
mov
std
and
inc
and
test
pop
aad
iret
xchg
inc
inc
hlt
sub
sbb
push
shll
cmp
and
jp
mov
lods
xchg
dec
shl
in
std
bound
jg
inc
mov
popf
ljmp
inc
out
mov
jge
add
dec
je
bound
lds
movsb
shlb
in
daa
lods
push
inc
nop
push
outsb
rcrl
cmpsl
shll
aas
outsl
shll
sarb
lods
dec
add
ljmp
imul
push
push
aad
mov
call
test
hlt
add
test
cmp
enter
and
add
fildl
mov
fimull
nop
loope
in
data16
dec
clc
dec
adc
jecxz
jae
xchg
pop
jle
loop
fcoml
add
test
pop
negl
fs
xor
push
inc
dec
dec
jae
pop
ret
lods
inc
ret
add
pushaw
or
pop
fwait
xorl
jnp
jecxz
jne
mov
xchg
mov
arpl
push
pop
hlt
push
aam
dec
js
mov
mov
add
jle
clc
stc
in
lret
lahf
pop
or
bound
ljmp
popf
aaa
pop
xchg
pop
cmpb
out
ret
fimull
shrl
and
rol
sti
lcall
sti
fists
xlat
scas
cmp
aas
fists
pop
add
push
nop
add
xchg
xchg
jmp
shlb
mulb
ljmp
add
dec
cli
adc
push
loopne
inc
cmp
out
push
push
ljmp
mov
pop
jge
cli
add
inc
icebp
sbb
addr16
and
add
lret
xor
hlt
xchg
ljmp
cmp
sub
cmpsl
in
push
mov
iret
fdivrs
jno
rcl
jmp
dec
mov
or
popf
pop
jecxz
mov
fidivrl
fcompl
cs
ja
mov
call
int
mov
adc
pop
and
shlb
sbb
jge
test
les
hlt
rcll
and
mov
jb
sbb
flds
in
push
sbb
sbb
es
xchg
aaa
loop
pop
dec
adc
mov
mov
dec
fiadds
std
xchg
movsb
mov
out
dec
test
lods
or
mov
loopne
cmp
add
cld
inc
clc
xor
test
lret
sub
cmc
add
ljmp
mov
movsl
sarb
add
inc
and
inc
push
add
inc
pushf
inc
xlat
xchg
cmp
pop
cmc
or
imul
mov
sub
movsb
cs
aas
xchg
dec
push
ret
mov
cmpsl
and
xchg
dec
insl
test
xor
outsl
push
and
popf
repz
jnp
cmp
mov
pop
pop
mov
std
or
ljmp
cld
orl
dec
adc
rol
xor
js
push
sti
jge
cmpsl
lds
and
dec
insl
out
sbb
ljmp
out
adc
dec
push
call
dec
loope
pop
push
pop
aaa
sub
push
int3
stos
dec
aas
push
and
dec
inc
jge
jg
gs
call
xchg
push
rep
xchg
mov
push
mov
jmp
movsl
cmp
cmc
inc
mov
aam
mov
icebp
daa
adc
pop
mov
sub
mov
cmp
add
dec
jbe
sahf
icebp
movsb
mov
and
xor
inc
pop
adc
jge
pcmpgtd
or
jnp
das
in
roll
cmpsb
adc
les
push
incl
in
mov
enter
xor
mov
je
mov
xchg
inc
data16
xor
in
repnz
dec
fiaddl
jns
or
das
gs
in
dec
dec
aas
out
adc
std
and
sarl
xchg
jo
pusha
movsb
jp
push
xor
pop
mov
arpl
push
xchg
shll
scas
sub
popa
xor
sti
hlt
jmp
fnstenv
adc
or
lods
addr16
fmulp
idivl
sub
out
dec
sahf
jb
mov
stos
lea
dec
jge
movsb
jp
or
popl
aaa
and
xchg
sbb
out
jbe
xchg
adcb
push
arpl
in
addr16
shrl
dec
add
sub
cmp
sbb
adc
ss
pusha
xchg
sbb
sub
test
sbb
lods
ja
mov
movb
int
mov
rolb
dec
test
mov
addb
or
aas
lea
add
cmpsb
jp
xchg
out
mov
pushf
sarb
out
mov
push
cmpsl
xchg
mov
test
cmpsb
mov
rcll
push
int3
push
pop
adc
mov
cli
aaa
xlat
adc
cltd
stc
cld
sbb
jne
push
test
pusha
pop
aaa
push
add
mov
sbb
jbe
adc
jo
in
push
leave
push
mov
add
je
cmp
xchg
mov
and
xorb
or
loop
xor
sbb
aad
dec
cmp
inc
outsb
fsubs
cs
in
xchg
xor
leave
pop
out
outsb
repz
or
push
inc
ljmp
lret
dec
adc
push
scas
mov
jmp
push
movsl
outsl
lret
notb
insl
mov
inc
movsl
mov
ret
aad
pop
jb
loope
mov
std
or
mov
and
scas
adc
scas
xchg
mov
jle
mov
adc
push
or
or
je
sub
jnp
jnp
inc
call
or
outsb
aad
pushf
sahf
into
iret
popa
pop
dec
push
pushf
icebp
daa
xor
sbb
sbb
fmulp
lret
movsl
sub
push
inc
dec
xchg
jecxz
cmp
loopew
int3
cmp
je
popa
aad
shr
lret
fxsave
cmpsl
mov
and
sahf
popf
push
pop
xchg
ret
faddl
out
inc
sti
mov
hlt
jge
cmc
popf
gs
mov
ja
and
cld
adc
nop
dec
add
xchg
pusha
jmp
dec
cmp
movsb
nop
or
xchg
loop
andl
sub
pop
sbb
iret
fwait
repz
das
xchg
jae
xor
mov
out
lock
insl
mov
lahf
xchg
pop
jp
test
mov
rcll
xchg
lock
add
bound
pop
lock
mov
push
pushf
adc
jns
mov
sbb
mov
cmp
idiv
pop
mov
jg
popf
and
jne
repz
sbbl
xchg
cwtl
testb
lret
mov
rorb
lcall
int
mov
adc
xchg
mov
aaa
xchg
xor
push
push
into
adc
test
inc
xchg
jo
jp
push
adc
fwait
mov
ret
push
jno
into
mov
push
out
mov
repnz
mov
push
repz
cmpsb
add
pop
mov
and
mov
ret
xchg
mov
sbb
jbe
jg
mov
sahf
and
iret
fstpt
dec
push
lcall
aaa
fs
repnz
mov
popa
jg
arpl
fsubl
mov
scas
mov
fabs
mov
push
sbb
xor
in
or
lods
or
nop
cld
inc
jns
adcl
jnp
pop
push
divl
mov
xchg
insb
aad
or
aaa
cmc
cmp
loop
imul
mov
or
out
in
dec
xchg
out
out
sbb
lea
mov
iret
imul
fcoml
pop
push
and
push
pop
andb
lods
and
mov
cmpsl
in
dec
inc
ss
or
js
xlat
xchg
xlat
inc
pop
mov
jge
insb
xchg
pop
out
flds
pop
dec
outsl
push
call
movl
jmp
pop
cmp
outsl
jg
jb
inc
icebp
sub
cmp
out
daa
icebp
iret
outsl
lea
mov
inc
test
jmp
cwtl
in
imul
sub
mov
imul
jmp
jns
testl
je
dec
jp
mov
inc
jle
loopne
jle
sub
fldl
and
bnd
repnz
push
inc
je
inc
ds
push
lahf
cmp
ljmp
sub
out
push
scas
sub
add
aas
aam
nop
out
stos
and
cld
cmp
in
or
ljmp
mov
cmp
inc
sbb
popf
jae
sar
gs
and
shll
aam
hlt
lret
jp
test
clc
in
dec
sahf
cmp
ja
xchg
push
xchg
cli
js
xchg
jae
dec
xchg
aad
mov
and
jns
dec
and
xchg
mov
inc
add
xor
or
cmp
xor
lcall
add
jp
outsb
add
repz
lea
add
inc
rorb
xchg
aas
jg
stc
pusha
jg
inc
in
fs
fdivrl
pop
dec
scas
cli
xor
xchg
and
scas
lods
cs
fdivp
push
mov
insl
xlat
ds
fisubl
fwait
test
fs
aam
lods
leave
and
jne
adc
jl
clc
dec
int
xchg
loopne
push
pop
lret
sahf
addr16
add
add
dec
add
in
push
int
inc
mov
cmc
sbb
or
xchg
dec
dec
xor
lcall
leave
in
push
sub
adc
popa
cmp
cmp
sbb
scas
bnd
ffree
clc
dec
dec
fdivl
aam
push
fcmove
push
loopne
jmp
jb
paddsw
mov
xchg
pop
dec
or
sub
sbb
out
mov
shll
push
xchg
fldenv
imull
cmpsb
dec
cmp
fsubs
sub
test
jns
or
fwait
lahf
mov
out
pop
bound
mov
adc
notb
sub
out
mov
dec
fs
jl
shl
or
in
testl
pop
lret
pop
push
and
in
ljmp
cwtl
jae
fsub
push
jne
adc
daa
lcall
jae
mull
jl
icebp
imul
sub
stos
imul
adc
test
xor
pop
dec
cwtl
xchg
ss
sbb
mov
mov
mov
and
add
loopne
jg
bound
icebp
jo
das
push
adcl
xchg
sub
cs
or
std
clc
or
pusha
dec
cmp
test
inc
pop
int
push
scas
call
jecxz
mov
xchg
or
push
jae
cli
fnstsw
sbb
pop
cwtl
and
push
lret
sar
push
mov
jne
mov
and
cmp
and
mov
mov
stos
aam
sub
jbe
and
jp
cmp
subb
in
fwait
xor
xchg
inc
movsl
es
aad
enter
mov
cmp
stos
xchg
stos
lret
repnz
jl
ds
ds
dec
inc
mov
loopne,pn
dec
mov
sbb
xlat
push
or
or
mov
insl
ret
fisubl
int3
nop
fldl
pop
shlb
xchg
es
cmp
ds
push
push
addb
fists
mov
test
enter
daa
test
mov
ss
int3
cltd
dec
pop
jne
leave
adc
or
fisttpl
out
lods
loope
dec
popa
sub
xchg
mov
nop
int3
mov
mov
fwait
mov
pop
sbb
mov
lea
sub
cmpsb
ljmp
in
dec
sub
adc
imul
mov
mov
push
add
mov
jno
dec
shll
hlt
lret
test
div
or
ss
cmp
mov
test
xlat
adc
add
pop
mov
jbe
or
pop
mov
movsb
mov
int3
arpl
cmpsb
cmp
inc
sbb
fs
adc
mov
mov
test
int
fists
fmuls
sbb
insb
mov
jne
mov
add
xor
add
lea
outsb
xor
mov
mov
shll
mov
test
enter
pop
negb
leave
push
repnz
aad
stc
inc
movb
shl
xlat
mov
stos
data16
test
imul
and
daa
enter
clc
jecxz
xchg
mov
or
out
sub
fcompl
jbe
in
adc
enter
adcb
daa
xor
je
sub
sub
addr16
xor
jg
in
fistl
push
outsb
jl
mov
ret
dec
jo
scas
xor
cmp
push
andb
mov
jg
mov
imul
mov
movb
mov
shll
jb
inc
mov
hlt
int
inc
and
xchg
push
push
inc
mov
mov
xor
test
xor
popf
add
push
cmp
rol
add
cmpsl
inc
cmp
xlat
idivb
mov
vaddsubpd
ret
xchg
movsl
loop
adc
cld
loop
mov
popf
push
stos
xor
aad
iret
lods
clc
add
sbb
mov
aad
outsb
faddl
xor
in
notl
jp
mov
ja
mov
dec
dec
movsl
adc
sbb
icebp
sub
and
mulb
add
xor
in
inc
inc
jnp
jbe
sub
nop
xor
push
daa
imul
or
les
adc
add
sbb
ret
ss
and
sbbl
popf
or
scas
leave
mov
daa
sbb
or
vorpd
test
cmp
addr16
cmp
cwtl
push
das
cmp
xor
pushf
aad
inc
test
popf
fbld
cwtl
or
adc
ja
mov
lahf
push
inc
xchg
stos
xchg
cmp
jl
xor
imul
flds
pop
lds
popf
push
imul
and
xchg
dec
out
or
adc
push
pop
out
jge
lret
or
xor
mov
sbb
aas
jmp
or
xchg
aas
rolb
xor
in
inc
fldcw
pop
mov
cmp
clc
lcall
ret
xchg
dec
pop
mov
xchg
cwtl
xchg
lahf
fisubs
mov
orl
in
test
inc
fldt
xor
pop
dec
xlat
mov
dec
rorb
pusha
cmp
sub
test
rcl
mov
dec
nop
sub
dec
rorl
jp
xor
adc
sub
pop
and
jge
int3
sbb
imul
loop
and
lcall
jne
or
imul
sarl
mulb
movsb
xchg
add
pop
outsl
push
pop
xlat
sbb
in
adc
cmp
push
pushf
int3
xor
jnp
cs
or
sub
jnp
test
or
cmpsb
dec
dec
ss
aad
loope
inc
xor
sti
enter
mov
sbb
mov
push
je
mov
jns
and
gs
cmp
fcmovne
sbb
fcoml
aad
add
bound
jg
mov
ret
add
int3
fdecstp
pop
xlat
out
rorb
pop
insb
push
mov
pop
dec
jg
cli
rcrl
loop
adc
inc
mov
lret
ss
mov
mov
xor
jmp
pop
rorb
clc
adc
and
stc
pop
sbb
xchg
mov
push
xor
ret
sbb
mov
push
aaa
lcall
dec
bound
popf
stos
mov
arpl
das
jg
add
mov
or
inc
out
aaa
dec
movsb
cmp
mov
push
and
add
jg
mov
mov
outsl
xchg
and
pusha
rclb
shrb
mov
push
lret
push
jns
sbb
aad
in
or
xchg
mov
sbb
push
out
mov
mov
mov
jne
mov
in
mov
xchg
mov
mov
aaa
ret
mov
rcrb
cli
or
je
add
ljmp
xor
pop
push
cmp
push
arpl
lret
mov
and
jge
inc
lret
in
adc
subb
daa
push
pop
dec
push
outsb
cmp
jge
in
adc
loopne
nop
dec
dec
lret
orl
or
out
clc
or
clc
out
inc
cwtl
push
mov
cmpsl
insl
rcll
inc
push
clc
sub
arpl
sub
jne
mov
in
out
mov
and
jecxz
jle
push
iret
insl
cmp
xor
aam
dec
or
mov
or
xchg
ret
cld
movsl
outsl
int
pop
lock
jp
pop
shll
insb
shrl
in
add
popf
pop
popf
jae
jge
push
nop
or
in
xchg
dec
mov
sbbl
mov
mov
jo
out
dec
into
leave
enter
mov
fsub
mov
js
xchg
ficoms
xor
pop
mov
scas
cmc
sbb
test
jge
sbb
or
jge
and
inc
fisubrs
loope
mov
pop
sbb
adc
es
inc
into
mov
insl
add
xlat
aas
int
cld
out
push
mov
test
bound
and
xchg
fwait
and
out
rcrl
or
cmp
ljmp
xor
jnp
sti
outsl
in
inc
adc
pop
scas
fstpt
mov
lcall
or
sub
into
cmp
adc
dec
inc
cmpsl
xchg
xlat
xchg
sbb
aam
add
jl
lahf
xchg
jne
pop
mov
cmp
std
mov
dec
fidivrl
movsl
mov
xchg
adc
mov
and
stos
insb
fistpll
lds
xchg
cltd
addl
mov
lahf
mov
scas
inc
jecxz
cmpsl
cmp
adc
outsb
cwtl
lds
add
dec
aaa
cmp
sbb
fdivrl
imul
mov
insb
fwait
aaa
jecxz
jo
dec
insl
push
ja
mov
fcoms
sarl
out
rcl
data16
pop
xor
or
dec
lcall
inc
jl
and
dec
push
mov
xchg
fistps
pusha
stos
push
sahf
imul
sub
jle
out
jg
or
jmp
shrb
dec
je
mov
lods
push
inc
cli
push
inc
in
pop
mov
mov
cmpsb
mov
and
fiadds
jae
mov
std
xor
scas
ret
lds
mov
jg
sub
push
imul
pushf
mov
or
sub
pop
jae
cwtl
insl
insl
or
inc
in
push
movsl
lcall
in
sub
jle
sbb
dec
xor
fisttpl
xor
lret
sti
push
push
push
rorl
or
loop
or
lahf
repnz
push
dec
xchg
mov
add
insl
xchg
mov
sub
movb
es
arpl
add
imul
jmp
out
leave
ja
and
jb
sub
subl
out
and
dec
or
es
pusha
lret
icebp
aaa
adc
mov
adcl
pop
jmp
jae
adc
dec
and
insb
pusha
stc
or
icebp
pop
sub
stos
ds
xchg
mov
cli
idiv
cmpsl
aad
cmp
jecxz
ror
fisubl
rorb
adc
scas
mov
in
mov
xchg
lret
jnp
and
iret
add
bound
outsb
mov
fwait
lods
cmp
sub
sub
jb
aam
test
and
cmp
push
mov
mov
lret
test
dec
inc
push
sbb
jnp
gs
pop
jl
out
mov
xor
xchg
rclb
dec
dec
xor
push
mov
stc
cmp
shrl
jne
movsb
bound
ret
lcall
cli
inc
iret
pop
sbb
sahf
cltd
iret
sub
ljmp
in
and
in
sub
mov
add
mov
lods
std
mov
in
push
jp
jae
pop
mov
or
pop
mov
jle
jno
cmp
mov
ljmp
push
pop
inc
mov
mov
repnz
xor
mov
sub
cmp
push
insb
loop
test
or
pushf
xchg
ret
mov
mov
cltd
push
sub
mov
call
dec
aam
movsb
jl
movsl
out
push
jb
xchg
sbb
cmp
inc
push
enter
lods
mov
aad
xchg
mov
dec
loope
mov
adc
ds
pop
mov
sub
inc
xchg
adc
sub
sbbl
mov
enter
mov
sub
sbb
dec
in
pop
mov
jp
jae
sub
push
outsb
or
sub
mov
mov
xchg
fisubl
popa
jbe
adc
bound
ds
pusha
xchg
xchg
sbb
mov
icebp
sub
iret
pop
lret
pop
fildl
sahf
adc
mov
fmulp
gs
stos
pop
rep
or
call
cmpsl
sbb
out
and
push
push
jmp
fstps
sbb
test
sub
mov
lds
dec
pushf
loope
sarl
mov
sub
dec
test
call
andl
test
pop
jns
pop
inc
lcall
rolb
mov
iret
and
ljmp
daa
test
outsl
pop
adc
mov
stos
sahf
dec
test
repz
ja
cltd
arpl
mov
adc
and
sbb
push
pop
sub
imul
inc
adc
sub
aas
cmpb
inc
and
add
cmp
loopne
jle
fisttps
jae
xchg
ss
popa
jecxz
das
mov
ficompl
shlb
pusha
pusha
stc
clc
jge
cmpsb
jae
int3
push
lahf
and
cmp
sbb
scas
pop
fildll
fdivl
pusha
imul
js
jb
mov
push
mov
mov
pop
or
jno
pop
pop
dec
jmp
inc
and
jge
push
lods
or
jp
int3
cmp
int
push
jl
jo
adc
in
mov
les
in
xlat
push
mov
push
xor
dec
mov
out
fimuls
sbb
jmp
inc
out
and
xchg
jb
fldcw
movsl
pop
arpl
call
pop
push
sub
mov
sbb
ret
outsb
test
jno
fucomip
dec
pcmpeqb
testb
int
lcall
sti
cmp
fiadds
mov
lock
js
push
inc
xchg
cmpsb
loope
push
rcrl
rorl
repz
pop
es
ljmp
stos
mov
jae
int3
mov
jne
cli
xor
add
mov
inc
ljmp
cmpl
mov
or
icebp
outsl
adc
pop
xchg
shlb
jecxz
mov
decl
insl
dec
inc
negl
inc
mov
dec
sarb
js
fisubs
mov
dec
mov
cmpsb
jns
mov
dec
mov
or
loopne
cmp
pop
in
add
cli
scas
addb
push
lret
fisubrs
mov
push
lret
adc
jecxz
dec
popf
fildll
ja
cmpsl
leave
js
aaa
fistpl
test
dec
push
xor
jecxz
adc
dec
mov
imul
int
lea
jecxz
pop
jbe
jno
dec
ljmp
jnp
push
cmp
aas
inc
in
ljmp
mov
mov
inc
dec
add
add
jmp
or
pusha
shrb
push
dec
mov
mov
add
xlat
sbb
sub
shrb
xchg
xor
mov
jo
mov
clc
test
inc
inc
cld
sar
sub
xchg
push
adc
cmp
fildl
inc
push
dec
test
dec
loopne
jg
incl
mov
add
jo
xchg
mov
sbb
cmp
test
dec
fildll
jl
aad
jnp
xchg
cmpsb
outsb
jecxz
popf
out
cmp
xorl
dec
test
xor
mov
mov
insb
pop
nop
std
cmp
adc
insl
sbb
gs
iret
test
ljmp
loopne
fisttps
push
insl
push
jno
stos
enter
int
push
test
iret
test
shll
into
dec
andb
punpckhdq
mov
int3
fldl
dec
icebp
adc
xlat
mov
push
jae
in
or
cmp
mov
dec
js
and
ss
stc
bound
das
cltd
imul
pushf
dec
sbb
je
call
jmp
bts
xchg
cmp
push
jl
xchg
ds
jnp
popa
pop
push
pop
fnstsw
cltd
push
cmp
or
imul
push
out
push
add
sbb
sbb
push
dec
mov
jae
mov
lea
imul
jmp
cld
jge
dec
addr16
subb
rcrb
cwtl
jl
rolb
les
adc
in
int
fmuls
movsb
jb
push
cmp
pop
adc
stc
push
sarb
ret
xor
mov
sbb
adc
adc
sar
cmp
insl
or
xor
xor
fcmove
jb
pop
push
jecxz
add
loop
xchg
mov
or
inc
sub
jecxz
jno
xor
call
sbbl
and
mov
mov
sub
inc
outsl
xchg
leave
popw
mov
fistl
add
shlb
and
icebp
test
add
arpl
push
int
pop
xchg
add
adc
and
mov
inc
mov
jae
lock
sbb
dec
mov
js
popa
bound
push
push
or
into
jge
in
adc
sub
add
jns
sub
scas
mov
pushl
jne
movsl
mov
cmp
stos
ret
pop
ret
cmpl
and
pusha
push
int
xor
or
push
mov
call
inc
xchg
js
les
sub
push
mov
out
jg
xor
mov
das
adc
add
mov
es
dec
and
push
and
pop
and
mov
inc
in
adc
cmp
xchg
pop
cmp
mov
push
das
sbb
movb
jge
or
xor
iret
sbb
fwait
jns
mov
in
movsb
repz
dec
out
leave
jae
ret
sub
iret
rcl
daa
mov
popa
push
mov
push
orb
jecxz
pop
jno
dec
push
push
mov
pop
inc
jo
lods
xchg
inc
daa
pop
cwtl
and
into
in
js
int3
in
xchg
and
pop
xlat
sbb
icebp
aaa
into
mov
cmc
jmp
lods
repnz
xor
fildl
push
icebp
pop
aaa
loope
jae
mov
mov
xchg
cmp
inc
dec
add
test
pop
cmpsl
sti
xlat
loopne
jmp
or
mov
fcompl
xor
xlat
cmp
adc
add
sub
repnz
pop
jge
mov
xchg
popa
sub
pop
cltd
in
movb
mov
jae
and
int3
jne
pause
hlt
mov
outsb
psraw
cwtl
mov
mov
incb
insl
mov
nop
sbb
jp
inc
inc
inc
jae
lock
bound
ss
insb
mov
xchg
mov
iret
push
jge
pop
loopne
out
push
mov
cmc
push
int3
or
fwait
jno
arpl
leave
stc
std
ret
add
xor
lods
adc
sub
iret
and
cmc
cmc
or
inc
and
pushf
xchg
repz
nop
fsubr
loopne
or
inc
insl
idivl
add
xor
das
cmp
push
lahf
xor
mov
mov
scas
pop
xlat
mov
mov
insl
sbb
xor
imul
jecxz
imul
sbb
imull
cmpsb
cmp
add
mov
xor
sub
cmp
loopne
enter
jg
jae
push
in
mov
std
aaa
sub
in
in
push
imulb
lods
inc
ds
or
xor
negb
jae
aad
in
or
cmpsb
pop
int
xchg
inc
or
add
or
lret
divb
ficomps
adc
xchg
add
aaa
out
data16
push
jae
dec
jae
push
insl
inc
das
pop
adcb
scas
popf
mov
or
paddq
or
sarb
pop
int
repz
and
imul
rcrb
cmp
test
cs
mov
xchg
movsb
enter
out
ret
fisubl
out
inc
outsb
sbb
push
out
jns
pop
pop
in
mov
mov
push
sub
mov
sub
addr16
mov
sbb
push
jecxz
in
cmp
movsb
movsl
imul
rorl
mov
lods
repz
test
xchg
iret
mov
repz
fwait
sub
or
es
dec
jb
mov
rolb
loopne
adc
mov
fstpl
dec
outsl
fcmovne
sub
mov
in
and
cmp
dec
stc
insl
scas
rorl
addr16
push
mov
mov
stc
std
aad
jg
push
adc
int
push
loope
mov
cld
xchg
cmp
call
jp
sub
sbb
or
bnd
mov
cli
pop
push
mov
bnd
cmp
ja
mov
xor
jl
lods
popa
lods
sahf
aam
les
sbb
and
xor
jge
sub
in
stos
out
inc
mov
mov
imul
pop
mov
adc
inc
rclb
mov
je
push
or
mov
xchg
test
pop
mov
sbb
sub
scas
or
pop
adc
dec
lods
ficoml
xchg
inc
pop
aad
jle
mov
nop
mov
aaa
xchg
pop
mov
xor
aam
pop
add
xlat
lea
ds
mov
push
mov
push
repz
pop
scas
daa
push
inc
mov
lahf
je
ljmp
sbb
or
push
and
adc
push
std
xor
adc
in
cmp
mov
aam
jp
cmp
jnp
leave
pop
adc
jmp
dec
int3
sbb
out
or
sbb
pop
sti
mov
and
and
mov
ljmp
iret
js
and
les
lock
inc
dec
jbe
cmp
lods
mov
and
inc
sub
mov
inc
cmpsb
push
mov
pop
pushl
lock
cmp
rorl
push
std
pop
push
int3
sbb
inc
es
cmp
call
dec
loop
cltd
sub
or
jnp
lret
jbe
or
call
dec
mov
test
filds
or
cmp
mov
pop
sub
fs
jecxz
addb
pop
mov
sbb
and
out
sub
sahf
dec
sbb
pop
fisubs
popa
push
mov
dec
push
test
pop
mov
adc
mov
push
and
popa
fsubrl
int
pushf
in
pop
mov
ret
lret
mov
je
jbe
jb
out
sbb
gs
stos
cmp
out
sti
cmpsl
call
mov
xchg
jmp
test
insl
jae
aam
add
lea
emms
push
xchg
fxtract
fwait
das
pop
in
jb
mov
mov
es
in
dec
pop
scas
lods
jl
cmp
xchg
mov
hlt
sub
nop
pushf
jl
mulb
ss
push
or
dec
movswl
in
pop
inc
rcrl
mov
outsb
add
cmpsb
pop
add
push
pusha
mov
dec
out
pushf
hlt
mov
loope
mov
int
sub
sub
mov
mov
jge
aam
jno
mov
cmp
jae
cmp
daa
mov
shrl
imul
cmp
mov
pop
ror
sbb
in
xor
ja
out
clc
sti
adc
mov
jmp
dec
iret
outsl
in
int
inc
add
xchg
push
cmpb
fisubrs
sbb
or
shr
rcrl
pop
sbb
mov
or
rcr
mov
or
imul
mov
rolb
or
pushf
cmc
xchg
pop
jo
orb
jnp
test
push
adc
ds
icebp
xor
jl
pushf
jae
mov
add
nop
enter
xor
jb
jle
andl
mov
jge
dec
mov
rcrb
js
sub
aaa
mov
fisubl
add
fistpl
mov
negl
lcall
icebp
bound
cmpl
sbb
filds
fwait
jae
shr
inc
cmp
push
and
pop
fldcw
push
popf
and
jl,pt
les
and
cs
divl
mov
jmp
or
mov
xchg
pop
bound
cmpsl
in
push
push
dec
aad
mov
scas
hlt
out
push
pop
dec
xchg
aad
dec
out
sbb
jp
or
int3
in
mov
int
add
cmc
cmpsl
or
test
xchg
sub
mov
in
pop
popf
xorb
adc
xor
jp
es
or
int3
or
popf
cmp
addr16
push
adc
stos
mov
mov
pop
jg
test
push
js
adc
cmp
ss
push
jl
insb
out
mov
call
xchg
lods
push
xor
jmp
stos
mov
call
stos
mov
fsubl
or
cmp
pop
jbe
test
add
pop
sarl
mov
cmpsl
popa
xor
jp
xor
pusha
sub
shll
mov
lods
jne
cmp
das
xor
stc
enter
rclb
ljmp
push
sub
xchg
pop
lret
or
cmpsl
mov
jb
cwtl
pop
fistl
jp
sub
ss
add
psubd
and
andl
sub
in
mov
add
sub
mov
inc
pop
sbb
xor
fwait
mov
das
xor
mov
je
pop
fldl
sub
push
cltd
mov
inc
jle
jb
or
and
xchg
jbe
sbb
jno
or
lret
adc
in
dec
adc
and
fcomi
xchg
xchg
fucomi
or
in
sbb
loopne
cmp
fadd
cltd
or
cmpsb
dec
inc
xor
cli
pop
inc
sub
push
cwtl
mov
fs
lret
or
inc
inc
fmul
fs
pop
cmp
shlb
pushw
sbb
and
gs
icebp
dec
nop
jbe
adc
out
adc
sbb
or
mov
xchg
cmpsb
popf
xchg
insb
aaa
adc
sbb
mov
sti
pop
lea
jp
xchg
dec
push
adc
fsubr
pushf
imul
sub
mov
hlt
decb
leave
jl
adc
pop
add
movsb
outsb
dec
push
inc
sbb
test
fwait
jnp
mov
cmp
cld
imul
cmp
or
out
add
xchg
cmp
mov
dec
pop
add
sub
sahf
add
and
out
enter
addr16
mov
push
xlat
xchg
pop
add
sub
aas
mov
mov
loopne
dec
rcrb
sbb
cmpsb
fs
jnp
jg
inc
push
jns
mov
inc
dec
cltd
push
popl
cmp
iret
enter
xchg
pop
push
mov
lcall
jns
push
mov
das
fwait
jp
pop
mov
test
push
subb
int3
dec
xchg
aam
dec
dec
adc
jne
shlb
cmp
rorb
enter
mov
cmpsl
xor
pop
js
addr16
adc
mov
imul
test
sar
mov
dec
xchg
mov
or
mov
daa
fwait
jns
sbb
xchg
sub
cmpsb
dec
jle
lahf
rcll
adc
aaa
jle
pop
loope
and
in
xor
lea
repz
pop
jno
jg
jns
mov
sbb
mov
loopne
pushf
insl
nop
cmp
aad
fs
scas
inc
pop
mov
imul
lods
ja
sahf
push
dec
in
outsb
loop
dec
add
mov
fistps
and
fidivrs
fcompl
scas
loope
jmp
decl
movsb
icebp
bound
pop
and
mov
or
outsb
sbb
jo
sbb
popa
dec
pop
xchg
fcoml
inc
cmpsl
lods
mov
and
cli
stos
and
cmpsl
cmpsb
in
lret
or
push
jb
lods
in
mov
out
call
adc
in
pop
sub
jmp
mov
adc
scas
xchg
aam
fstp
fidivrl
push
fadds
nop
xrstors
clc
jge
cmc
adc
mov
push
nop
in
jae
andb
fstl
xchg
pop
stos
dec
aad
mov
iret
mov
jecxz
addr16
fisubrs
fidivl
lret
push
lods
in
add
and
adc
js
jo
cmp
cmc
filds
gs
out
es
jbe
aas
dec
jbe
adc
sarb
lret
mov
aam
leave
das
sbb
xchg
mov
cmpsl
ds
arpl
cli
stc
mov
out
sbb
sbb
cli
mov
inc
dec
and
mov
rol
mov
ficompl
or
sbb
add
mov
ljmp
push
iret
sar
mov
push
pop
jae
mov
ret
xor
jg
out
imul
out
jl
lret
cmp
fwait
cld
push
mov
mov
fwait
xor
dec
inc
sub
push
out
ret
xchg
rol
lret
into
inc
add
loopne
inc
mov
mov
pop
popf
repz
das
xchg
inc
mov
sbbb
mov
xor
out
dec
loopne
and
shl
inc
add
cvtpi2ps
daa
fistps
loop
dec
jo
jns
leave
sbb
cmp
js
movsb
xor
ret
aad
sti
mov
js
jge
sbb
call
push
pop
das
fwait
add
mov
pop
and
pop
lahf
repz
mov
sbb
pop
sbb
icebp
sub
cld
cld
shlb
pop
sub
sbb
inc
sarl
xlat
leave
xchg
and
push
gs
ror
inc
hlt
pop
scas
iret
mov
in
outsb
mov
inc
cmp
das
jnp
scas
mov
pusha
mov
lret
pop
aas
xlat
lds
mov
dec
ret
xchg
dec
pop
cmp
pop
jne
ret
sbb
cmp
xchg
outsl
sub
or
cmp
xor
or
adc
repz
shlb
arpl
add
test
bound
mov
fildl
xor
xchg
push
cmp
mov
outsb
adc
lds
push
insl
pop
dec
push
loope
lock
int3
enter
dec
arpl
loop
add
mov
jecxz
js
dec
aaa
rorl
sub
das
cld
js
pop
rcll
outsl
or
movsb
cmp
out
mov
xlat
imul
in
and
repnz
inc
add
or
mov
or
insl
mov
sub
cmpsl
mov
sbb
jle
push
xchg
xchg
popa
push
mov
into
xchg
in
push
sahf
in
mov
sub
out
shll
aam
mov
movsb
lock
cs
mov
aaa
pop
dec
cmp
loopne
pop
shl
iret
sbb
cmpl
clc
pushf
lret
and
dec
and
sti
inc
jno
inc
push
lret
in
jne
fs
add
sub
xor
fldlg2
xchg
pop
in
dec
sahf
jnp
and
xor
xchg
push
stc
pop
pop
push
movsl
es
icebp
xlat
mov
jge
cmpsl
inc
mov
inc
fadd
ljmp
cmp
xchg
test
ljmp
xchg
cltd
mov
popf
jecxz
dec
lock
xor
add
add
sub
fstp
es
iret
scas
ret
lea
fldln2
outsl
jns
rorl
inc
and
neg
xchg
xor
xor
negl
push
sarl
push
pop
adc
insb
add
pop
es
cmp
adc
and
xor
je
cmp
rcr
pop
pop
pop
aaa
dec
sahf
test
xor
add
push
out
push
mov
xchg
push
out
jbe
push
mov
sbb
and
pop
and
mov
pushf
mov
mov
outsl
jg
and
pop
push
cmpl
jl
or
jb
jmp
ss
pop
mov
mov
popa
loope
repnz
ficoml
icebp
mov
push
test
jge
loope
fs
fdivl
mov
testb
or
lret
imul
xchg
aaa
cltd
pop
jns
adc
std
adc
pop
je
push
jg
sub
mov
and
sbb
xor
ljmp
add
es
movsl
mov
xor
inc
cmpl
or
xchg
sar
movsl
push
adc
lret
add
leave
mov
jp
sahf
inc
mov
and
push
lahf
loope
add
cmc
lods
movsb
sbb
push
dec
mov
lods
into
shll
push
fwait
cmp
cld
pop
pop
aad
arpl
cli
jp
cmpsb
gs
ret
dec
out
push
mov
cs
ja
ja
in
xchg
or
adc
mov
fiaddl
fs
xchg
dec
rolb
pop
hlt
adc
out
cwtl
rol
dec
mov
jl
outsl
std
fadds
mov
jno
test
js
mov
out
xchg
and
aam
dec
icebp
clc
mov
dec
loopne
xchg
cmpsl
jge
in
lret
jo
add
cmp
ret
test
sbb
sub
dec
in
fadds
mov
scas
mov
int
pop
lea
mov
aaa
jge
icebp
cmpsb
outsb
sbb
shl
and
fldcw
test
jae
movsb
lds
xchg
push
shr
orb
mov
movsl
cld
shl
add
imul
fidivs
pop
add
sub
cmpsl
dec
out
inc
lsl
inc
in
mov
push
lcall
lcall
mov
aam
pusha
repnz
dec
sub
cmp
daa
xchg
stos
add
mov
dec
jne
imul
daa
and
xor
push
es
xchg
mov
ljmp
inc
jne
adc
cld
add
leave
addr16
std
mov
aaa
sub
fwait
push
cmp
repz
cld
mov
pop
adc
ret
dec
sub
lcall
outsb
sub
addr16
fimuls
test
stc
pop
push
pop
xor
add
sbb
sub
push
mov
jg
cmpsb
push
fdivs
fidivrs
addl
mov
std
dec
dec
xchg
popf
dec
pusha
lret
mov
loopne
xchg
popa
sub
fmuls
push
sbb
enter
mov
xchg
sbb
add
cmp
sbb
lret
xchg
insb
sub
lret
pushf
mov
bound
pop
loope
sar
mov
mov
xor
dec
pop
lret
cltd
out
jp
dec
iret
pop
xor
pop
lds
dec
icebp
inc
mov
out
in
add
dec
aad
in
push
lcall
popf
mov
pop
mov
int
adc
ret
xlat
lods
add
icebp
mov
mov
sbb
dec
push
cmp
aam
pop
inc
out
fmull
ljmp
cli
xchg
and
push
xchg
in
mov
cmp
shr
jbe
jl
xor
mov
repz
or
xchg
jnp
aaa
jge
add
lret
addb
lcall
dec
repz
ljmp
mov
jnp
jae
fcompl
xor
add
lea
push
testb
sahf
fcmovnu
ret
int
xor
pusha
into
sbb
jmp
xchg
fsubrs
aad
icebp
pop
push
xor
sar
dec
xor
fdivrl
push
call
cmpsl
xchg
and
push
lret
push
iret
mov
outsl
cmp
addr16
cmp
inc
inc
outsb
xchg
pop
mov
cwtl
pop
push
out
cmp
out
dec
sbb
and
scas
aas
push
fimuls
sbb
pop
add
cs
leave
jbe
rcl
add
jmp
jle
shrl
sbb
jbe
jecxz
dec
lods
adc
dec
in
jmp
imull
bound
movsl
inc
jle
or
jmp
lods
push
adc
jmp
lods
js
jge
repnz
cmp
lock
jnp
divl
dec
add
sub
shlb
pushf
jmp
loopne
push
popf
pop
xchg
jns
dec
push
push
cltd
and
loopne
push
cmpsl
jecxz
mov
mov
lret
lock
xchg
pop
sub
cs
mov
fdivr
int
sub
push
dec
shrb
push
add
mov
jle
mov
imul
add
pushfw
pop
and
mov
sub
dec
frstor
in
push
sub
xor
mov
pop
cs
cmpb
mov
sarl
fwait
loop
lret
daa
mov
pop
cltd
mov
pop
insb
sbb
xor
jmp
fdiv
les
das
subb
int
hlt
mov
xor
fwait
inc
lcall
mov
mov
pop
shlb
iret
addr16
lahf
fnsave
fidivl
adcl
pop
cltd
dec
cli
clc
gs
xchg
xchg
movsl
stos
and
cmp
jle
ss
mov
pop
xor
and
movsl
xchg
jnp
test
outsl
add
or
lea
jne
movsb
and
fsts
outsl
gs
sub
xor
lds
lock
sub
mov
imul
fsubs
call
cmp
pop
fistpll
sbb
lret
adc
pop
dec
ljmp
or
pop
inc
or
or
out
inc
mov
repz
ror
shrb
aam
cmp
sub
xchg
loopne
fdivrp
mov
pop
loope
cs
xor
pushf
stc
add
dec
xor
and
jno
test
in
cmc
clc
cwtl
je
cmp
ret
ret
cmc
dec
fistpl
and
int3
push
push
xchg
mov
arpl
cli
and
popa
out
lock
mov
aad
loop
add
add
xchg
cmpl
xchg
xchg
scas
mov
cmp
lea
mov
mov
lods
push
jne
push
push
xchg
pop
mov
jo
ds
mov
fcomps
test
outsl
cmp
mov
adc
and
jo
xchg
pop
test
jns
movsb
sbb
xorl
fdivl
add
jge
jb
out
flds
jge
sub
or
mov
out
pop
mov
iret
sub
dec
push
push
add
sbb
gs
in
xlat
adc
ss
lea
xchg
aaa
xchg
inc
mov
push
scas
sub
push
mov
js
add
push
test
out
jecxz
xchg
mov
xchg
adc
adc
shll
or
cmp
int3
mov
or
loopne
dec
cmp
sub
out
and
pop
repnz
lea
in
xchg
popa
aad
mov
or
roll
or
add
fisttpll
fmull
adc
cmp
repnz
shll
fisttpl
push
pop
shr
and
or
adc
ds
mov
rcll
bsr
sub
cmp
data16
outsl
ljmp
mov
cmpsb
mov
gs
lahf
sub
and
sub
fucomp
hlt
popf
dec
mov
lret
sub
jp
cmp
stc
stc
xchg
push
hlt
or
call
insb
aas
and
ss
jb
fsubrs
cwtl
mov
xchg
cmpsl
inc
movsl
test
sbb
out
ljmp
sbb
inc
leave
int
add
out
cmpsl
test
xchg
push
or
ja
gs
cld
fdivrs
mov
ljmp
jmp
es
popa
ja
push
push
cmp
dec
lret
js
loopne
hlt
scas
adc
divb
adc
sub
fisubrs
pop
jle
xor
and
pushf
xor
push
pop
icebp
in
shll
dec
hlt
imul
pop
aas
data16
add
cmpb
test
dec
repz
push
lods
dec
aam
cmp
mov
outsb
je
xchg
loope
loope
cltd
clc
inc
jecxz
and
rcrl
adc
mov
jecxz
and
and
cmpsl
sub
or
jnp
lahf
push
sbb
fildll
or
test
sbb
lret
mov
sbb
dec
sub
test
call
ja
sbb
enter
sub
cmp
insb
cmc
adcl
call
mov
fstpt
jg
inc
out
fdivs
push
cld
aad
stc
test
fld
mov
loop
outsl
pop
mov
sbb
ss
scas
push
das
out
mov
lahf
leave
test
sti
xor
pusha
cmp
or
pop
and
xor
shl
jp
inc
mov
pcmpeqw
gs
xor
mov
sub
in
aas
fwait
mov
pop
xchg
xchg
jp
in
xor
and
xor
mov
sub
out
pop
mov
push
mov
arpl
imul
jecxz
pop
std
ret
adc
arpl
fidivrs
pop
sub
pop
dec
cmp
sub
lcall
dec
cli
mov
fsubs
mov
cmp
mov
mov
pop
xor
jmp
hlt
jno
test
lods
shll
xrelease
inc
ja
inc
jecxz
and
pop
jl
test
sbb
sub
in
mov
or
and
orl
pushf
adcl
jmp
ss
outsl
inc
push
pushf
test
lock
push
mov
mov
xor
or
out
subl
mov
outsb
sbb
xor
pop
and
rcrb
andl
mov
fimull
sarl
fidivrs
scas
movsb
or
or
out
or
in
bnd
cli
aad
mov
out
pop
fcomps
adc
push
sub
cmp
loopne
mov
aam
test
push
mov
jnp
insl
test
adcl
lahf
out
rolb
lods
xor
inc
adcl
pop
loopne
jne
add
cmp
jb
dec
dec
jnp
movsb
mov
pushf
test
aaa
mov
push
sahf
jp
sub
jecxz
xor
and
push
sbb
out
adc
cld
in
daa
icebp
pop
lahf
add
jl
jns
mov
in
mov
jmp
leave
jae
out
fistps
xchg
inc
std
add
cmp
adc
je
pop
or
lret
jmp
or
push
dec
ss
rorl
movsb
cmc
jl
jo
iret
repnz
lock
dec
push
ljmp
fstl
in
and
pop
pop
mov
or
mov
adc
push
mov
cmp
xor
add
outsb
and
arpl
in
lret
out
roll
inc
xorl
int3
mov
test
pop
dec
sbb
jo
in
repz
jae
pop
mov
sbb
incb
or
inc
idivl
push
pushf
xor
sub
insb
pop
inc
jmp
mov
sahf
lock
jno
mov
popf
stc
test
les
add
stos
jne
movsb
sahf
ficompl
inc
jg
repz
jmp
pop
jno
add
inc
adc
sub
jl
fadd
mov
orb
xchg
mov
mov
aas
jle
cmp
and
or
jp
mov
out
mov
sbb
pop
ss
fstpt
sbb
or
push
stos
push
jns
pop
fcmove
shlb
lret
dec
adc
fcomip
ret
fnstsw
mov
mov
daa
movb
outsb
test
sub
sahf
mov
stc
pop
popa
sub
icebp
mov
jle
les
sub
insl
enter
push
cltd
jb
adc
cmpsl
push
xor
mov
outsl
sbb
lods
pop
push
push
test
and
mov
stos
mov
adc
xchg
pop
jns
icebp
cld
sti
sub
imul
cmp
movsl
outsl
faddl
mov
lea
fsubrl
jle
xchg
lahf
sub
fwait
add
jg
mov
fwait
mov
adc
arpl
dec
mov
ficomps
or
xchg
fcoms
dec
mov
gs
popf
mov
add
add
pop
dec
push
add
adc
inc
jno
out
fwait
xchg
cmpb
mulb
fdivrl
test
in
es
cs
pushf
enter
dec
push
fldl
popa
loop,pt
jp
test
and
mov
shlb
andb
mov
mov
adc
repnz
xchg
adc
shl
mov
in
push
or
cmc
adc
sub
pop
scas
xlat
push
mov
mov
pop
jecxz
pop
mov
sub
pop
fsubl
addb
lds
push
mov
add
jns
gs
inc
or
sub
or
lds
es
outsl
push
jns
loope
xchg
loop
dec
movsl
xor
sub
push
fldt
mov
scas
fdivl
push
sub
xlat
lods
jo
sbb
mov
push
decl
add
add
sahf
sub
adc
cli
test
inc
fnsave
jge
push
or
xor
xchg
ficoms
jbe
test
pushf
add
movsb
mov
mov
jl
mov
pushf
push
bound
sbb
push
xor
mov
mov
test
xchg
pop
lods
mov
mov
xchg
gs
sbb
int
mov
jne
or
mov
mov
sub
popf
mov
push
push
imul
pushf
add
xchg
lods
xor
sti
mov
into
pop
fimull
arpl
jne
jp
test
aaa
les
mov
mov
jmp
rolb
jl
add
pop
mov
xchg
pop
rorl
test
jmp
icebp
movsl
inc
mov
movsl
insl
ds
sahf
in
shll
lea
hlt
popf
lret
jne
inc
mov
rcrl
ljmp
xchg
lods
sub
fcmovnb
dec
pop
mov
andb
jmp
xchg
adc
hlt
scas
adc
mov
ss
mov
pop
addl
icebp
movsb
fcoml
adc
push
add
mov
or
mov
daa
sbb
daa
aad
in
in
movsb
push
pushf
push
daa
mov
fmull
js
pop
mov
cld
mov
adc
mov
dec
sbb
inc
xor
outsl
push
or
out
adc
inc
movsb
push
and
pop
inc
dec
sub
sbb
dec
cmpl
in
sbb
lret
mov
xchg
fstps
pop
cmp
in
les
out
inc
andl
fcomp
in
xchg
mov
push
cmp
lds
daa
push
insl
out
jb
pusha
call
addr16
jmp
add
sbb
and
mov
mov
test
rcll
mov
bound
mov
and
jp
sub
and
cmp
je
or
pusha
pop
out
ss
and
jne
jno
mov
fs
dec
pop
xor
lea
fwait
xor
mov
cmpw
jne
loopne
xchg
es
jl
movsl
xor
adc
pop
push
fmul
int3
inc
sub
sbb
fs
shll
sub
cli
hlt
inc
push
xor
xchg
cmp
adc
lds
sub
sbb
xchg
int
outsl
sub
xchg
push
sbb
shlb
dec
insb
mov
jno
cs
mov
pop
mov
jp
data16
inc
xchg
push
movsb
dec
in
add
arpl
movsb
sub
bound
adc
lods
adcb
stos
call
and
sti
mov
xor
cli
imul
mov
icebp
adc
sbb
inc
pop
jo
adc
and
sbbb
jb
pop
pop
in
aas
push
cmp
aas
mov
cs
and
outsb
cltd
mov
xchg
pusha
popf
sbb
mov
cld
cmp
jno
insb
push
pop
test
push
mov
ljmp
sub
shll
es
and
lods
xchg
jnp
filds
cli
popa
cltd
xchg
fnstsw
jne
sub
push
stos
jg
push
and
push
jns
inc
nop
xchg
jb
fstp
imul
rclb
cmp
cmp
jmp
lds
pop
push
cld
mov
mov
xor
int3
xor
ja
push
xchg
mov
mov
arpl
mov
movsl
dec
sub
inc
jnp
in
outsl
lahf
push
loop
es
jno
ret
std
push
mov
fwait
xor
lahf
pop
dec
decb
cs
mov
cmpsb
hlt
or
mov
je
lods
xor
ljmp
sbb
mov
inc
ror
arpl
push
loope
add
adc
dec
outsb
pop
add
in
inc
mov
sbb
adc
cmc
mov
mov
pop
add
xor
sbb
ret
jg
and
cld
loope
or
cmp
dec
mov
cmp
repnz
bound
out
cmpsb
scas
iret
and
or
cli
cmc
call
push
xlat
sbb
jne
cmp
leave
shll
add
outsl
dec
lock
fildl
es
stos
adc
mov
xlat
mov
imul
pop
mov
pop
shll
cmp
and
sbb
cld
test
inc
fadd
mov
imul
ljmp
shrl
dec
jb
mov
addl
push
std
int
int3
in
jbe
into
jl
int3
bound
push
push
adc
mov
ja
in
or
and
clc
inc
stos
mov
add
daa
xchg
mov
call
or
push
sbb
adc
ss
add
andb
fdivrs
call
push
aaa
lods
aam
popf
inc
and
or
insl
idivl
fs
addr16
les
ret
and
dec
jbe
sbb
fwait
loopne
dec
cmp
leave
mov
bound
out
mov
or
jp
mov
push
xchg
jo
pop
lahf
mov
in
fidivrs
cltd
lahf
adc
in
xchg
push
insl
fs
jne
add
dec
xor
repz
mov
mov
mov
icebp
dec
ds
jns
xchg
inc
mov
push
outsb
sti
pop
xlat
xchg
inc
adc
mov
lea
stos
jno
imull
sbbb
dec
adc
sbbl
leave
cmp
int
test
push
push
addr16
mov
and
lea
and
mov
call
movsl
jle
nop
mov
test
cmp
enter
jecxz
mov
fstl
dec
sbb
popa
subw
mov
gs
xor
cmp
lods
or
rcrl
std
sub
jno
imul
push
pop
or
lods
addb
add
push
mov
fcomps
int3
lods
call
int3
idiv
or
loope
jecxz
inc
adc
pusha
inc
jmp
sub
iret
ss
call
cmp
cmp
xor
lcall
pop
shrb
iret
xchg
pop
adc
mov
std
mov
jle
shrb
and
mov
pop
bound
pop
sbbl
push
jecxz
push
cmpsb
xchg
xor
js
bswap
dec
test
fidivs
adc
sub
jmp
mov
popf
xchg
cwtl
pop
or
stos
hlt
mov
adc
mov
ficompl
inc
in
ds
je
mov
pop
xchg
jne
push
jle
xor
dec
mov
and
mov
adc
jns
stos
nop
push
nop
rorl
adc
pop
repnz
mov
sahf
scas
cltd
loop
jae
or
mov
adc
cmpsb
xchg
push
xchg
and
xchg
push
loop
pop
add
ja
data16
lods
adc
out
divb
push
pop
xchg
jg
push
mov
mov
call
push
push
test
adc
push
je
jno
push
jp
mov
loopne
pop
cmpsl
xor
mov
test
push
xchg
and
std
mov
mov
call
inc
dec
and
nop
dec
lods
pushf
inc
stc
sbb
cli
fnstsw
xorb
dec
xchg
ss
mov
and
dec
pop
aam
popa
push
repnz
into
mov
push
xchg
sar
lds
adc
jo
or
cltd
jnp
xacquire
out
and
dec
or
pop
mov
xor
xchg
nop
into
jo
push
scas
mov
push
aas
cmp
es
xchg
cmp
mov
cmpsl
scas
mov
mov
cltd
rcll
mov
test
adc
mov
ljmp
shll
jl
pop
arpl
adc
mov
cmpsl
pushf
inc
inc
pusha
inc
inc
ja
in
aad
and
push
jns
cld
inc
and
leave
push
sub
pop
inc
sub
jmp
push
mov
mov
jns
pop
inc
pop
cmp
add
dec
jnp
sbb
fwait
mov
stos
loop
in
sub
cmpsl
sub
xor
xchg
push
or
pop
jle
stos
or
adc
outsl
mull
mov
fbld
pop
loope
push
das
popf
lcall
out
icebp
jge
adc
fs
push
adc
mov
fnstenv
testb
gs
cmovns
shll
test
lds
shll
or
mov
mov
cmp
xor
dec
nop
or
iret
mov
sti
add
bound
into
xchg
mov
xlat
leave
scas
and
sub
xchg
push
fistl
xchg
cmp
sbb
sub
and
add
test
or
mov
push
push
out
push
mov
jp
xor
scas
dec
jns
jle
sarl
decl
scas
and
and
mov
jb
lret
cmpsb
jecxz
xor
pushf
fldcw
fs
mov
iret
dec
pop
imul
push
fildl
lods
fimuls
jo
adc
jle
push
lcall
das
into
or
stos
pop
je
into
pusha
lock
jecxz
cs
mov
pushf
fists
insl
push
subb
pop
sub
xor
cmp
push
jne
rcll
xchg
loopne
lds
cmc
lea
addb
ljmp
push
testl
xor
rol
mov
pop
pop
jmp
sbb
xlat
sub
clc
shlb
fists
pop
fildl
in
out
xor
sbb
ds
mov
mov
test
lds
add
movsl
cmc
pop
fcomip
aas
fadd
enter
mov
addr16
and
push
push
in
dec
mov
fdiv
mov
pop
mov
shlb
ret
mov
xchg
pop
push
push
in
add
js
lret
rolb
mov
or
std
xor
insl
adc
je
cmp
sub
xchg
fisubrl
sub
insl
dec
or
ljmp
sub
call
xlat
cmp
movb
les
sbb
popa
sbb
jg
add
mov
arpl
sar
xorl
ficomps
ror
add
pop
into
scas
call
cmp
pusha
repnz
cmc
sahf
jb
mov
lahf
pushf
outsb
mov
out
into
je
es
mov
sub
jns
insl
out
push
std
std
lahf
xchg
movsb
mov
cmp
add
jns
mov
jo
insl
clc
lcall
pop
into
add
sub
test
leave
imul
and
xchg
int3
lret
push
repnz
sti
shll
or
sbb
pop
pop
adc
in
scas
loope
push
push
rolb
dec
sbbl
loope
sbb
loop
sub
push
cmp
and
sbb
pcmpgtw
out
xchg
fistpll
in
xchg
cmp
movsl
xchg
push
movsl
add
int
sbb
fidivl
or
xchg
pop
and
inc
out
mov
mov
mov
pop
cmp
xchg
outsl
mov
jo
sar
jp
mov
mov
mov
movsb
xchg
clc
movl
sub
test
imul
and
leave
jle
pop
mov
aad
adc
loop
cmovge
in
cmp
pop
insb
push
shll
scas
ret
sbb
test
pushf
push
cli
pop
insl
imul
pop
pop
cmp
into
cmpsl
mov
mov
movsb
out
xor
push
sub
je
popf
mov
repz
scas
adc
add
aam
stc
adc
and
das
sub
and
ret
int3
mov
dec
sub
push
push
out
xor
cmpsl
sub
test
xchg
test
aam
imul
pop
addr16
nop
js
and
cmp
jmp
adc
shll
js
adc
jae
jno
jmp
popf
xchg
into
cmp
repnz
pop
pop
pop
aaa
jns
es
add
cwtl
dec
mov
mov
shufps
js
sbb
pop
repz
in
aam
aaa
dec
mov
out
push
pop
test
movsb
shrb
sbb
pushf
cmp
icebp
push
addl
int
sbb
lcall
and
icebp
xchg
xor
pop
dec
jmp
test
sbbb
pop
mov
test
pop
daa
addr16
call
into
sti
or
xchg
mov
jecxz
fcompl
xchg
and
pop
or
mov
sub
mov
and
push
int
push
sub
lret
add
bound
inc
popf
cmpsb
push
in
add
repnz
xor
push
jns
test
inc
mov
mov
inc
fistl
push
imul
add
push
mov
jp
lods
xchg
fnstsw
inc
pop
fcmovb
int
cli
jae
xor
mov
mov
andb
or
shrb
pop
shlb
aam
jno
lret
add
mov
xchg
inc
mov
ret
sub
es
sub
leave
pop
pop
mov
lock
sbb
dec
mov
add
andl
dec
bound
mov
stc
and
xorl
sbbl
pop
enter
push
mov
sub
mov
push
into
push
dec
jp
enter
add
mov
jns
pop
sub
stos
out
jae
and
add
daa
ficoml
jl
push
jnp
lods
cmpl
into
nop
cmp
in
jnp
sbb
cmp
or
ljmp
dec
mov
daa
inc
inc
fisubl
fisubrl
shl
negb
xchg
sahf
movsb
dec
es
xchg
nop
lret
aad
sbb
sti
inc
adc
push
fbld
outsb
cmpl
in
je
addr16
cmp
pop
mov
outsb
ror
test
mov
repz
sahf
mov
loope
inc
lods
dec
sbb
mov
mov
bound
and
in
movsl
push
xchg
shr
mov
or
jbe
je
popa
inc
movsb
mov
leave
or
sub
nop
mov
scas
pop
and
call
or
mov
mov
roll
cmpl
test
insb
jg
dec
int
jbe
add
stos
ja
int3
scas
cmp
aad
push
cmp
jo
enter
and
jmp
dec
xorl
lret
xchg
jg
inc
es
popa
fimull
lods
fidivrl
lcall
cmpsb
add
enter
sti
cwtl
imul
or
jns
inc
iret
gs
xor
jbe
cmpsb
sub
push
int
dec
xchg
xchg
and
cmp
mov
jo
or
mov
repnz
lret
adc
stos
sbbb
scas
stos
stc
loop
icebp
int
inc
push
pop
lods
iret
jecxz
mov
scas
xchg
inc
inc
test
inc
imul
mov
dec
ret
mov
mov
shll
test
add
lods
pop
jne
loope
mov
ja,pn
sub
mov
xor
push
popf
push
mov
pop
dec
test
sbb
adc
add
test
cmp
cmp
imul
push
iret
loopne
aad
into
mov
sub
in
push
rclb
repz
mov
lahf
cld
mov
cli
ds
or
js
in
pop
test
pop
fstpt
es
out
leave
dec
testl
loop
aad
mov
jo
aam
fistpll
fldenv
adc
aad
andl
dec
push
mov
cltd
dec
lahf
loope
cmp
je
mov
movsb
lods
push
mov
aam
inc
out
lcall
mov
and
aaa
push
stc
jge
mov
test
adc
stos
sub
xor
movsl
test
add
in
insl
fwait
into
stos
notl
ss
shll
mov
xchg
mov
ret
push
or
push
es
addr16
aad
xchg
sbb
xlat
mov
pop
jp
sub
imul
pushf
cmpl
std
nop
xor
fbstp
cmp
movsb
pushf
enter
mov
xchg
test
cmp
adc
bound
or
and
cltd
sub
and
or
mov
ds
in
push
add
lds
inc
mov
ss
ret
test
repnz
mov
cmp
add
roll
lahf
stc
mov
andb
jl
sbb
fs
in
fs
and
scas
imulb
push
jnp
jle
outsb
orl
mov
adc
popa
test
in
jb
inc
imul
call
pop
inc
lea
jmp
decb
xchg
cmp
pusha
dec
cld
int
sbb
iret
or
push
sbb
xor
pop
lods
xchg
inc
mov
pop
xlat
xlat
jmp
sub
popa
ss
jne
bound
adc
mov
sbb
daa
out
mov
ja
stos
mov
fwait
addr16
fcomps
pop
out
inc
sbb
pop
imul
rorl
arpl
sub
or
es
pop
push
or
xchg
pop
aas
sbb
es
mov
sub
bswap
sub
rcll
ljmp
and
shrl
or
xchg
jmp
inc
jl
push
and
lcall
jg
pusha
ss
pop
add
out
xchg
fisubrl
mov
shll
add
loope,pt
jae
push
inc
dec
out
dec
and
add
xchg
in
xor
lret
cs
mov
repz
fadd
movsl
dec
jno
mov
iret
mov
outsb
adc
xchg
dec
scas
mov
loopne
pushf
pop
mov
mull
loop
in
leave
test
stc
mov
mov
push
sti
or
pop
sub
out
aam
les
push
xor
out
fcmovnb
mov
dec
dec
mov
jae
xchg
adc
mov
repnz
lret
add
fiadds
mov
mov
xor
in
push
adc
in
shlb
push
add
repnz
add
xor
or
in
aas
fiadds
push
fwait
pop
fs
ja
inc
loope
inc
enter
fiaddl
enter
cmp
add
dec
iret
dec
or
push
sbb
fnstenv
repnz
sbb
dec
call
in
in
push
out
cli
popf
mov
push
movsb
adc
lock
int3
xor
lds
lds
or
std
jg
push
addr16
out
ret
setnp
pop
add
pop
lahf
mov
sbb
xorb
lock
push
push
rcll
fistpl
aad
push
jne
sub
dec
adc
or
pop
push
dec
jg
cli
dec
aas
inc
incb
cmc
shl
pop
jecxz
mov
push
jbe
imul
int
dec
mov
jl
cld
push
push
mov
sub
addl
es
xchg
bnd
insl
mov
leave
dec
mov
mov
push
cmc
scas
outsb
push
test
les
pop
xlat
sub
cmpsb
out
sub
pop
in
or
sub
xchg
push
push
cmpsl
out
and
das
aam
into
and
loope
xchg
mov
mov
mov
fdiv
xchg
out
and
jmp
mov
shrl
in
mov
in
xor
cld
inc
inc
push
jae
xor
shl
out
dec
arpl
cwtl
dec
int3
aas
lds
dec
fcomi
sub
out
adc
add
inc
lea
loopne
jae
jg
jns
mov
mov
daa
and
mov
dec
fs
add
sub
xlat
sti
jo
pop
mov
jno
add
pop
xor
in
jnp
je
pop
lock
rcll
jbe
jg
pop
ret
mov
ss
jb
dec
lret
cmp
push
mov
mov
xchg
arpl
xor
mov
cltd
inc
mov
pop
pop
icebp
ffree
cwtl
stos
orb
shrb
push
aam
xchg
mov
hlt
test
in
iret
je
rolb
adc
daa
cmp
jbe
vpcmpgtw
or
out
jp
mov
lea
pop
into
movsb
fwait
jno
fiaddl
ss
mov
dec
mov
and
pop
ja
add
test
mov
daa
dec
cmp
adc
and
imul
pop
int3
lahf
add
jp
xor
subl
mov
popf
movsl
push
test
push
adc
loope
mov
icebp
xor
lds
pop
pop
xor
out
push
les
pop
out
iret
push
insl
dec
jnp
sub
jne
std
xor
inc
xchg
and
xor
xchg
mov
sub
dec
jmp
xor
dec
orb
insl
and
fcmovne
pop
imul
cltd
mov
decl
jnp
and
mov
xor
les
push
jbe
das
add
mov
jno
mov
shr
jle
inc
daa
mov
pop
cmp
xorl
int
pop
inc
pop
lods
pop
xor
sarl
mov
xchg
jae
cmpsb
sar
shlb
pop
inc
aas
jnp
sbb
xor
pushl
mov
xor
dec
fists
test
push
adc
outsl
mov
popa
jbe
mov
mov
daa
pop
test
in
cli
sbb
imul
xor
jno
cmpsl
jb
in
push
xchg
sub
and
push
pushf
insb
add
pop
mov
fistps
cltd
in
add
xor
fistl
loopne
hlt
lds
loopne
and
sarl
inc
or
fistl
add
cmp
out
aas
mov
aam
adc
and
outsb
out
xlat
repnz
icebp
subl
cmp
in
push
fldt
pop
scas
outsl
xchg
xor
sub
adc
mov
fidivs
lods
mov
test
sbb
call
push
iret
add
sbb
sahf
adc
cmp
dec
cmp
sbb
icebp
and
aas
add
mov
pop
gs
data16
lock
loopne
fs
not
loope
int
sbb
sarl
shrb
arpl
push
subl
lret
fisttps
or
int3
mov
nop
mov
loop
bound
mov
out
xchg
imul
inc
push
adc
call
and
jne
bound
addr16
mov
je
push
jno
sbb
inc
jle
loope
dec
dec
pop
sub
jno,pn
push
and
or
test
add
dec
jge
popf
test
mov
loopne
adc
imul
ljmp
xor
movd
xor
sbb
cmp
fisubs
sahf
cmp
mov
ljmp
adc
sub
cmp
mov
imul
adc
inc
dec
adc
fsubrl
popa
and
cmp
xchg
dec
gs
or
in
jmp
cmp
jbe
movsl
subl
sub
repnz
loop
jbe
in
mov
mov
fcmovu
adc
insl
rolb
sarl
pop
xor
loop
cmp
mov
data16
push
lock
test
fbstp
pop
jae
out
addr16
mov
jmp
mov
pop
lock
ljmp
xchg
mov
fiaddl
and
jo
xor
dec
sbb
pusha
loope
and
imul
int3
pop
and
in
popf
push
mov
mov
mov
in
dec
aam
jae
ficoml
ds
jns
rcrl
std
jb
jbe
in
addr16
jle
subl
mov
push
fidivs
movsl
add
mov
xlat
fwait
ret
push
dec
icebp
lods
and
ficompl
shrb
mov
fdivs
xchg
xchg
pusha
cmp
pop
adc
scas
decb
and
xchg
das
jmp
adc
arpl
jbe
xor
push
mov
push
stos
and
mov
aad
lcall
xor
arpl
je
push
neg
jae
mov
stos
cmp
mov
and
loopne
mov
mov
pushf
test
jl
nop
insl
pop
enter
dec
leave
and
xor
lret
loop
pop
dec
bound
push
sub
xchg
dec
jne
jge
push
rclb
add
dec
out
stos
dec
test
mov
mov
js
rolb
adc
inc
js
push
rcll
loope
cmp
adc
dec
mov
xlat
xchg
divb
cltd
pop
jge
bound
xchg
scas
out
icebp
push
mov
cwtl
or
sub
in
lcall
in
push
jne
adc
js
or
bound
pushf
pop
shl
ds
loopne
icebp
addr16
addr16
test
mov
pop
xchg
clc
insb
xchg
or
int
inc
int
lahf
sbb
out
mov
adc
in
pop
add
push
jae
push
push
fldenv
push
call
negl
inc
xor
push
dec
push
cmpsl
jno
hlt
insb
jae
mov
cmpsl
sub
push
and
mov
popf
mov
lcall
cmp
jl
icebp
test
jge
inc
pop
jp
dec
test
call
mov
ljmp
sub
push
int3
nop
test
dec
ret
push
add
inc
pop
movsb
xlat
ret
xchg
pop
int3
aad
push
gs
imul
subb
pushf
stos
push
movsw
push
negb
and
jg
push
cmp
push
xor
jno
mov
stc
mov
lea
cmp
jnp
mov
inc
in
sub
cmovne
dec
pusha
pop
pop
incl
jne
xor
mov
jne
push
mov
repnz
ficompl
shrb
inc
xor
dec
push
xlat
lahf
test
jmp
test
outsb
inc
fs
dec
mov
pop
ss
xchg
xchg
cmp
sbb
hlt
mov
pop
jle
cmpsb
outsb
dec
mov
mov
adc
mov
cmpsl
sbb
xor
lds
mov
push
in
jle
call
lahf
movsl
cmp
fistl
push
pushf
jl
jbe
dec
xchg
stos
inc
mov
pop
dec
or
cmp
shll
shr
in
out
out
xchg
leave
cmp
pop
mov
jg
sahf
mov
jnp
mov
cmc
cmp
mov
xor
mov
fs
pushl
xchg
fiadds
jb
and
fisttps
sbb
adc
insb
out
sub
or
std
pop
xchg
dec
push
arpl
andb
pusha
dec
xchg
cld
je
sbb
and
xor
jne
pop
aas
idivb
mov
add
and
mov
test
in
or
push
push
mov
sbb
jmp
jp
push
in
cli
addl
lcall
scas
stos
in
jg
dec
push
addb
ret
ljmp
push
in
dec
insb
das
shl
mov
push
cld
mov
sbb
call
bound
inc
stc
addl
movsb
sti
les
js
mov
push
sbbb
push
data16
cltd
subps
bound
inc
jmp
cmp
lods
arpl
or
cmp
xlat
sub
dec
cmp
pushf
nopl
jae
mov
call
mov
pop
lea
outsb
out
div
or
xchg
xchg
pop
xchg
pushf
pop
push
or
scas
rcrl
adcl
mov
adc
dec
pushf
xlat
fstpl
xchg
ret
fisubrs
stos
nop
mov
imul
cmp
mov
arpl
decl
out
inc
mov
divl
shl
lods
mov
mov
stos
stos
stos
mov
mov
dec
jno
out
or
mov
adc
call
pop
push
xchg
inc
lret
or
push
mov
cmp
fcmovnb
dec
or
insl
push
xor
jp
mov
sbb
mov
xchg
repz
fisubrl
mov
decl
aaa
into
pusha
jbe
adc
lock
aas
mov
sti
cmp
sbb
icebp
inc
push
in
gs
sbb
out
mov
test
mov
pop
subb
lods
incl
inc
icebp
jns
or
pop
fisubl
adc
xor
jl
ss
and
call
cmpsb
pop
add
xchg
mov
xchg
jg
sbb
adc
loopne
cmp
repnz
repz
jns
push
lcall
sbb
stos
cmc
sbb
jecxz
xchg
mov
cmp
daa
and
sbbl
push
sti
sub
xchg
rcll
aad
dec
xor
in
popf
jns
stos
stc
mov
xchg
push
repnz
jmp
in
lret
pop
loop
sub
pop
hlt
adc
testl
add
xchg
sbb
out
dec
ret
jb
rorl
stc
or
push
sbb
mov
dec
pop
rcl
push
pushf
cld
xchg
in
scas
sub
lods
cmp
jmp
cmp
ret
mov
pop
and
dec
sub
mov
and
sub
cmpsl
dec
enter
fcoms
cs
out
das
dec
pop
xor
inc
test
subl
ret
in
xor
cs
outsb
xlat
inc
push
and
push
mov
xor
pop
sbb
push
mov
cmp
mov
adcb
mov
mov
cmpl
pop
sbb
ljmp
cmpsb
mov
movsb
or
bound
mov
dec
test
in
add
ja
add
push
xor
dec
repnz
enter
push
and
fs
aaa
mov
jl
cli
add
sub
in
sub
jb
mov
lock
int
mov
cmp
out
sahf
in
dec
add
add
cmp
ljmp
div
scas
inc
fwait
mov
bound
sbb
imul
sbb
stos
roll
mov
xchg
pop
lahf
ss
daa
mov
int3
insb
xor
mov
stos
out
xchg
iret
cmc
sub
push
bound
dec
and
xor
mov
push
sbb
inc
movsb
leave
xor
stos
outsl
add
inc
push
jae
jle
jns
sub
enter
sahf
xchg
cli
std
push
pop
jg
add
sarl
mov
cld
dec
dec
sbb
xor
inc
scas
div
movsl
or
xor
loope
xchg
into
xlat
cmpb
push
imul
daa
fs
cmp
jecxz
lds
mov
in
call
jo
arpl
test
mov
mov
jnp
push
sub
in
jl
fnstenv
out
pop
jp
jbe
mov
jl
add
jbe
jmp
cld
addl
mov
push
or
ja
or
cmp
mov
mov
mov
add
into
mov
cli
arpl
xchg
jb
das
cmpsl
jo
push
mov
scas
cmp
addl
mov
jmp
cmp
test
fst
cwtl
addb
mov
or
repz
xchg
inc
cltd
inc
sbb
xchg
idivb
sub
nop
popa
mov
sbbb
repnz
std
mov
out
xor
dec
pop
dec
out
in
jns
orb
sub
mov
imul
outsl
hlt
xchg
or
add
lods
aam
movsb
popl
jmp
cmp
shr
enter
adc
clc
mov
mov
jg
pop
sbbb
mov
outsb
loop
lods
inc
movsl
aaa
fstpt
mov
cwtl
sbb
dec
stos
jnp
jns
xchg
subb
ljmp
lret
sbb
bound
sub
ljmp
mov
xchg
add
loop
shll
das
mov
jle
mov
push
push
daa
popa
mov
aaa
pop
js
add
pop
jge
imul
cmp
loop
out
data16
push
mov
stc
jo
lock
aaa
dec
mov
mov
mov
mov
in
mov
fmul
pop
hlt
sub
xchg
mov
lret
ljmp
sbb
mov
scas
je
dec
rcl
xchg
movsl
mov
outsl
rorl
xorb
ss
and
loop
adc
inc
shll
das
les
jl
sti
lea
dec
jmp
in
mov
dec
ret
mov
jl
push
mov
in
jns
pop
dec
pop
cs
dec
dec
mov
insl
repz
mov
in
inc
xchg
bound
fcompl
ds
mov
adc
imul
push
orb
jnp
xor
add
pop
stos
pop
outsb
ja
in
adcb
xor
push
out
jle
mov
inc
fs
loopw
jmp
inc
fwait
mov
imul
out
fwait
mov
popa
fisubs
xchg
push
inc
xchg
adc
sbb
xchg
inc
lret
addb
sbb
mov
xor
jae
out
popf
int
dec
rclb
xchg
rorb
xor
sub
sbb
out
dec
cltd
adc
push
inc
out
mov
mov
rcrb
rcl
int
iret
test
dec
push
ds
das
imul
mov
mov
pusha
ss
push
fisubs
adcl
inc
cltd
mov
sbb
mov
and
add
xchg
mov
pop
lods
cmp
les
lock
xlat
jno
das
xor
lock
lods
add
lock
mov
stos
xchg
push
loopne
mov
and
repz
cmp
fimuls
dec
add
les
or
fwait
test
jne
or
push
mov
inc
shll
jmp
shlb
jae
push
pop
jecxz
xchg
push
or
xchg
movb
inc
jns
jg
mov
data16
mulb
test
lret
and
lcall
enter
out
mov
scas
aaa
inc
mov
test
mov
mov
jmp
lock
subb
enter
inc
rcrb
test
int
cwtl
out
mov
inc
fcoms
mov
dec
imul
out
pop
xor
adc
adc
cmc
add
pop
lods
sbb
rolb
mov
out
into
dec
sbb
xchg
shll
iret
bound
outsl
cwtl
daa
or
lret
arpl
mov
xor
pusha
mov
adc
ret
and
sar
cmp
mov
popa
mov
ret
sub
hlt
ret
imul
fstpl
mov
adc
repnz
sub
icebp
inc
mov
cmp
dec
mov
ficomps
outsl
ss
inc
shrl
or
xor
je
and
or
notb
mov
les
push
test
cltd
mov
fists
lret
adc
outsl
icebp
mov
mov
push
popa
loopne
call
dec
fistpll
mov
cmp
data16
mull
inc
adc
xlat
mov
push
stos
mov
gs
mov
or
pusha
mov
cli
rorl
push
movsl
lods
lods
mov
or
dec
and
jl
outsb
pop
fwait
jl
icebp
cld
daa
pushf
dec
mov
in
adc
stc
adc
je
lret
enter
jmp
cmp
cmp
sbb
push
lcall
xor
shl
xchg
std
xchg
mov
mov
test
rcrl
pop
sbb
jae
notl
js
mov
sub
xlat
push
inc
fcmovu
fwait
jmp
cmc
imul
mov
jns
mov
imul
jge
jmp
cltd
out
ret
jb
rclb
jl
pop
mov
roll
lret
shrl
ds
xchg
testb
xlat
ss
iret
les
out
or
daa
or
sbb
je
xor
xchg
mov
sbb
shrd
pop
sub
frstor
cmc
stos
xor
test
xor
roll
scas
ret
ja
push
cmp
cld
test
std
add
js
adc
outsl
jns
jp
ret
cld
xchg
mov
stc
mov
insb
mov
mov
jmp
rcr
mov
popa
insl
fiadds
mov
fnstsw
inc
xchg
nop
dec
jbe
aaa
femms
lods
movsl
jecxz
adc
or
idivl
sbb
cmp
ljmp
adc
adc
fdivrs
cmpsb
cld
or
mov
xlat
stos
loop
call
shlb
dec
push
inc
inc
mov
and
bound
mov
outsl
cmp
scas
sub
jge
or
dec
dec
jmp
xor
fmull
not
inc
pop
mov
sahf
shlb
arpl
sub
jo
cltd
mov
xchg
add
push
pop
shr
mov
call
mov
add
pop
adc
rorb
pusha
mov
jo
ret
dec
adcb
sbb
mov
cmp
pop
xchg
int
fs
mov
nop
arpl
fwait
sub
sbbb
and
fsubrs
loope
ret
pop
aam
jb
push
push
loop
add
pop
movsb
pop
sbb
jge
je
push
push
arpl
fmull
out
insb
mov
ret
mov
jl
pusha
xchg
hlt
xor
xor
or
inc
jnp
or
loopne
ss
mov
and
pop
mov
shlb
and
negb
cld
and
scas
pop
xchg
sti
sub
mov
sti
icebp
sbb
jg
and
adc
dec
jecxz
jbe
sahf
xor
dec
xchg
pop
mov
leave
xchg
gs
xchg
sbb
test
incb
xor
or
inc
adc
mov
call
idiv
lock
add
sbb
mov
sub
cmp
mov
push
mulb
aad
mov
xchg
push
test
cwtl
repz
ja
sbb
aaa
imul
outsb
dec
clc
loope
ss
stc
loop
sub
repnz
xor
cwtl
pop
decl
pop
call
mov
repnz
movsl
je
mov
jb
dec
push
add
pop
push
in
mov
jge
push
fidivl
inc
call
mov
jmp
xchg
push
sub
sub
icebp
xchg
cli
dec
mov
xchg
sahf
xchg
mov
cli
pop
mov
mov
imul
int3
push
inc
jns
sbb
dec
out
loop
fdivl
ret
fcompl
daa
insl
rorb
insb
icebp
dec
mov
repz
jno
mov
cmp
and
shlb
fmul
add
adcb
idivb
stos
lods
lods
int
stos
popa
xlat
cltd
icebp
cmp
in
jns
sub
pusha
xor
addb
adc
mov
dec
loop
mov
adc
push
mov
inc
and
pop
lods
jg
insl
xor
dec
mov
and
rcrb
lahf
pop
fs
add
lea
push
pop
inc
lret
mov
and
ret
mov
int3
in
push
or
in
cmc
mov
pop
call
mov
mov
fcomps
xchg
adc
pop
jl
pop
lcall
sub
aad
adc
mov
mov
fwait
movsl
gs
pop
xor
test
in
in
or
pop
outsl
push
rcll
adc
call
mov
sub
jp
cltd
mov
pusha
cmp
cltd
cmp
or
add
or
jns
adc
push
cmp
dec
add
mov
xchg
fisubl
mov
in
or
jmp
outsb
xchg
pop
xchg
shl
mov
lock
das
mov
mov
das
in
fwait
or
lock
mov
mov
mov
cli
mov
out
pop
and
rclb
adc
push
repnz
or
ud1
sub
mov
mov
dec
jne
bound
out
push
mov
dec
fimull
in
push
adc
cmpsb
cmp
and
or
out
das
mov
dec
pop
cmpsl
jg
or
ljmp
mov
mov
fwait
inc
mov
adc
push
mov
idivl
mov
jno
jp
adc
pop
shr
lods
adc
cld
shl
aas
inc
mov
inc
adc
out
aaa
out
shl
push
stc
lea
cmp
lcall
sub
ss
lock
adc
mov
mov
sub
cli
outsb
jmp
inc
js
out
lcall
dec
in
add
xchg
mov
fildll
push
test
mov
jg
aas
inc
cmc
mov
leave
shlb
push
ss
lods
lcall
fisttps
mov
test
jl
pop
mov
aaa
inc
imul
push
xchg
adc
fucomp
movsb
sub
xor
xor
subb
mov
cmp
sti
fs
add
dec
sub
mov
add
call
cli
das
mov
jp
fistps
popa
gs
mov
sub
add
mov
sbb
popf
sbb
xor
mov
int
inc
xchg
adc
mov
mov
xor
push
fsubrl
mov
jecxz
and
mulb
push
negl
popf
jnp
dec
push
pusha
imul
cmp
and
sub
movsl
int
fwait
imul
lock
pushf
xchg
rolb
xchg
rcrl
insl
xor
in
je
popa
loope
adc
lahf
jmp
imul
cmp
call
bound
lods
lock
sbb
mov
imulb
adc
pop
mov
stos
imul
sahf
fisubs
xchg
push
xor
loop
mov
push
cmp
cltd
aad
test
movups
aaa
cmp
hlt
jbe
call
test
add
or
mov
loope
daa
subb
cltd
sbb
ss
mov
cmpsl
mov
notb
mov
xchg
mov
in
loopne
and
test
and
pop
dec
out
mov
out
sbb
push
mov
dec
inc
pop
out
mov
push
dec
cld
repz
scas
xchg
sbb
orb
icebp
out
in
xor
xlat
iret
stos
es
add
sbb
pop
movsb
mov
ds
jae
les
mov
imul
out
mov
je
cmp
xor
rorb
inc
mov
xchg
xor
sub
inc
push
sbb
inc
stos
pop
scas
add
dec
and
gs
ret
push
jge
cmp
ret
xor
dec
mov
push
xlat
rorl
xchg
xorb
mov
xchg
pushf
int3
cmc
push
push
mov
lret
add
pop
mov
test
insl
and
out
stc
xchg
pusha
dec
mov
out
sbb
mov
add
and
sarl
xor
test
int
inc
or
orb
pop
jns
stos
int
test
inc
or
pop
jg
mov
sbb
xorb
adc
ss
daa
stc
movb
test
mov
cmp
cld
sub
mov
mov
addr16
loop
stc
dec
cmp
es
xchg
int
pop
popw
outsl
xchg
dec
xchg
aad
inc
adc
xchg
xor
jns
cmp
xchg
ret
mov
pop
fiaddl
inc
pop
adc
adc
cmp
push
inc
sbb
dec
repz
imul
ja
ror
push
mov
pop
hlt
adc
sbb
insb
jb
mov
rcrb
sbb
jge
cmc
and
pop
jl
dec
cmp
pop
dec
push
cmpsb
jmp
jae
or
dec
movsb
fnstcw
sbb
dec
jb
fists
pop
or
clc
and
push
mov
xor
inc
je
popl
stc
push
mov
pop
adc
xchg
dec
in
int
inc
call
leave
fldl
pusha
imul
mov
insl
pop
mov
xchg
dec
xchg
sti
pop
pop
test
fsubs
jge
movsb
fstps
sbb
dec
data16
sub
pop
push
jne
aam
jle
pop
and
xor
xor
ret
scas
lret
out
push
mov
pop
mov
arpl
loopne
mov
jle
jnp
roll
mov
test
bound
push
lret
push
std
inc
outsb
inc
mov
mov
ds
mov
stos
daa
sbb
aam
in
or
ffreep
push
out
and
adc
xor
shll
pop
xor
pop
cmc
test
and
or
add
iret
fsubrs
xor
jmp
mov
ljmp
mov
stc
sti
in
or
adc
xchg
jbe
lcall
push
js
call
jmp
sub
shlb
je
adcl
shlb
jb
idivb
dec
jle
lds
into
lods
outsl
mov
lods
mov
mov
cld
sbb
push
inc
jl
enter
pusha
xchg
pop
cmpsb
mov
ss
jge
arpl
adc
pop
fistpl
addr16
xor
or
jmp
int
sbb
cltd
push
mov
nop
gs
push
mov
push
jns
push
in
sbb
mov
pop
mov
cwtl
pop
rcl
cltd
stos
xchg
sub
loop
sub
mov
out
cli
push
push
lret
lds
jnp
sbb
mov
scas
mov
repnz
cltd
xchg
das
push
xchg
stc
hlt
cli
mov
or
or
test
mov
mov
push
xlat
mov
dec
fsubl
mov
dec
mov
push
dec
sbb
jle
cs
xor
or
scas
es
and
jnp
adc
cltd
cltd
sbb
add
inc
pop
push
ljmp
enter
lds
leave
fsubrl
push
icebp
pop
sub
mov
xchg
adc
nop
cmpsb
aaa
in
rorb
xor
or
stos
insl
mov
add
xchg
jl
in
xchg
jb
dec
xchg
push
aam
leave
cmp
add
jge
jmp
dec
icebp
inc
out
add
scas
scas
cmp
pop
jnp
scas
lods
sahf
stos
scas
lcall
push
jo
push
ds
out
in
xchg
pushf
je
sub
mov
popf
mov
jmp
jae
mov
xorb
out
sahf
and
mov
rclb
push
cs
fcmovnu
aas
aad
dec
cmp
ret
stc
movsb
cs
xchg
mov
out
cmp
cwtl
daa
movsb
mov
in
pop
idivl
cs
jbe
cmp
fwait
jp
xor
dec
pop
bound
lret
popa
pop
pop
inc
adc
int3
sub
cltd
jle
arpl
push
das
pop
je
popf
adc
rcrb
push
sbb
jge
cs
les
mov
push
femms
pop
lds
cmc
cltd
pop
cmp
add
test
aam
sub
mov
out
fisubrs
arpl
sbb
mov
jmp
ss
mov
gs
dec
in
call
int3
or
mov
test
es
mov
int3
lcall
iret
outsb
je
gs
inc
pop
or
mov
into
shrl
aad
xchg
xor
sub
jmp
add
add
lock
mov
mov
mull
mov
test
xor
add
out
aad
xchg
xchg
pop
sbb
cmc
ja
sub
push
or
pop
jno
insl
clc
push
sbb
dec
movsb
fmuls
out
lods
push
xchg
push
rcll
ret
mov
xchg
xchg
pop
in
or
jge
les
enter
in
popf
loopne
repnz
insb
jo
punpckhdq
cs
jmp
out
push
aaa
fadd
dec
imul
test
sub
fsub
sub
cmpsl
cmpsl
ret
lcall
mov
cmp
dec
ret
cmp
js
gs
sar
mov
adc
inc
jle
ficompl
ss
repz
pushf
scas
addr16
xchg
int
movsb
mov
sub
jbe
daa
dec
jge
dec
rol
test
fwait
inc
mov
cmpsb
push
add
jecxz
sti
test
xor
das
insl
inc
int
dec
jne
lds
fs
in
xchg
push
imul
data16
pushl
div
sbb
dec
in
test
xchg
dec
lret
popf
call
arpl
repz
leave
lcall
inc
jle
stos
fildll
jle
inc
push
mov
sbb
cmpsb
adc
rolb
sbb
insl
dec
and
push
add
sbb
out
cmc
and
mov
jo
test
sbb
jbe
xchg
cwtl
insl
scas
jnp
out
into
lds
insl
cs
push
and
push
adc
mov
push
sub
rcrb
fsts
adc
js
or
clc
mull
pop
insb
ret
das
sbb
imul
dec
sbb
cmp
in
iret
movsb
outsl
mov
cmp
cmp
call
fdiv
sbb
sarl
add
stos
lcall
cli
dec
jmp
cmp
or
shlb
cld
xchg
and
or
test
inc
scas
loopne
pop
cmp
rclb
mov
cmc
dec
push
push
cmp
movsb
bound
gs
fs
xchg
inc
jg
lods
fsubrl
loop
push
sbb
dec
fucomp
and
add
call
xor
mov
arpl
inc
or
int3
mul
add
inc
jl
and
sahf
pushf
xor
mov
cmp
imul
cmp
or
cmpsb
out
inc
mov
jl
sbb
xchg
cmp
arpl
je
jo
and
pop
rcll
fcoml
rorb
pop
aas
push
mull
pop
into
stc
roll
lds
xchg
inc
out
sub
cmp
jle
dec
stos
stc
inc
dec
or
jl
mov
repz
iret
cmp
outsb
test
inc
adc
mov
in
adc
gs
pop
ss
out
les
out
subb
inc
push
pop
rcl
dec
xchg
sub
xor
inc
jnp
jo
lret
mov
inc
jge
push
loopne
adc
push
lods
cmp
incb
test
pusha
jp
jo
notb
lock
mov
shlb
xor
cmp
inc
jns
std
add
lret
add
hlt
adc
inc
adc
xor
sub
in
cld
adcb
addr16
pop
cwtl
test
xor
jmp
dec
jmp
pop
repnz
xchg
popf
les
inc
shl
test
pushf
inc
addr16
into
out
pop
pushf
dec
jb
push
cld
inc
dec
int3
sub
in
jns
cli
inc
mov
pop
idivl
push
mov
pushf
aam
dec
lock
adc
lea
dec
mov
push
popa
ret
scas
dec
sbb
fsubrs
fisubl
lea
lock
fsubrp
adc
cmpsl
pop
pop
data16
jb
jle
hlt
mov
jmp
cmp
ja
stos
mov
ret
sub
jbe
out
je
jle
rorl
pop
cmp
push
inc
xchg
cli
sahf
push
hlt
or
add
sub
imul
hlt
sbb
adc
xchg
pop
push
ret
and
sahf
mov
jbe
sub
cmpsl
push
add
jg
lods
arpl
imul
les
cmp
push
sbb
mov
jns
negl
sub
mov
sahf
inc
pop
sbb
jmp
sbb
sub
jno
sub
jae
aaa
and
add
sub
and
std
lods
std
es
out
in
inc
iret
insl
pop
and
pop
bound
and
push
mov
frstor
mov
iret
out
jecxz
imul
outsb
lcall
repnz
cld
in
into
mov
aad
and
fimuls
and
adc
fdivl
aam
or
aam
cmc
xor
iret
and
imul
aaa
cmc
and
arpl
jnp
popf
fidivs
mov
rolb
inc
xchg
xchg
paddusw
movl
popa
push
jg
je
mov
sti
mov
sarl
mov
mov
and
pop
arpl
rcll
and
xchg
call
adc
sbb
adc
push
hlt
cmc
mov
cld
or
orl
jmp
rol
popa
push
sbb
pop
pop
out
push
pop
inc
jl
clc
xchg
pop
inc
shrb
pop
or
mov
in
fsts
add
cmp
mov
cmpsb
adc
shll
mov
in
in
push
sbb
or
pop
adcl
lcall
xchg
inc
xchg
in
ja
sub
mov
into
push
or
data16
lahf
inc
cwtl
cmp
dec
add
or
jle
clc
jp
mov
clc
fwait
inc
testl
subb
fstpl
test
testl
pop
push
or
mov
xchg
mov
mov
es
ss
aad
jl
add
mov
pop
in
cmp
test
insb
sub
mov
sub
mov
add
je
cs
stc
xor
jne
pop
lcall
into
addr16
push
mov
inc
push
in
fwait
push
xchg
dec
inc
dec
xor
or
push
ljmp
mov
jl
scas
mov
add
ljmp
push
scas
push
and
scas
shrl
aas
lods
mov
xor
inc
or
push
stc
sub
sub
jo
mov
imul
mov
mov
xchg
cmp
shrl
fmull
stos
cmpsb
lret
inc
or
cmc
les
jbe
mov
or
xchg
das
sbbb
outsl
push
or
popa
sbb
fstp
pop
lods
out
sbb
fdivl
jmp
xchg
push
and
outsl
mov
icebp
push
lods
pop
jmp
sub
bound
cmc
inc
and
sbb
cmp
or
sub
xchg
aas
add
mov
ss
ljmp
mov
mov
mov
and
sbb
mov
pop
adc
jae,pt
xor
jno
test
loop
call
mov
mov
mov
cmp
por
insl
iret
mov
out
xchg
adc
loop
ljmp
iret
xor
dec
and
enter
fiadds
mov
sbbl
dec
in
add
push
nop
sub
sub
xchg
icebp
add
fwait
mov
adc
jmp
xor
add
es
clc
fistpl
int
sub
xchg
inc
mov
push
jno
hlt
fdivrl
mov
mov
je
out
sub
lahf
xchg
daa
shlb
inc
pop
cmp
pop
and
fisubrl
xor
pop
xchg
das
les
in
scas
push
test
dec
aaa
and
push
mov
int
pushf
inc
jmp
ficoml
int
xchg
jo
adc
in
xchg
popf
std
mov
sub
iret
add
scas
dec
shlb
loopne
test
rorl
int3
adc
mov
fdiv
add
lods
sahf
frstor
mov
ret
nop
clc
daa
stc
jle
pop
push
mov
xchg
lds
and
ds
push
div
movsl
mov
lods
push
out
mov
test
adc
fxam
sub
jo
ds
cmp
xor
ss
and
cmc
push
sub
stos
cmpsb
mov
xor
push
lahf
loop
mov
addl
push
das
dec
lea
dec
imul
mov
adc
mov
int
cmp
addr16
orl
fs
out
push
movsb
dec
mov
cmp
fnsave
sbbb
ja
ss
dec
movsl
aam
push
jo
popa
mov
add
or
lcall
ret
mov
fs
cwtl
mov
out
jno
pop
inc
test
sub
dec
push
jp
or
lcall
fcmove
test
jne
xchg
fadds
xlat
cmp
dec
adcl
lods
pop
sbb
and
mov
mov
ud2
pusha
push
gs
ret
ficoml
mov
movsb
scas
push
mov
pop
stos
outsl
mov
sbb
jge
cmp
mov
enter
fnstsw
arpl
mov
hlt
jg
mov
jb
adc
xchg
jne
mov
xchg
imul
inc
mov
mov
mov
out
pop
sahf
push
pushl
mov
loop
mov
out
mov
push
xor
add
mov
popf
push
mov
pop
sahf
addb
sbb
xchg
cmpsl
das
cmp
cwtl
mov
bound
push
push
mov
lock
pop
push
mov
push
mov
xchg
jns
call
loop
jle
frstor
jmp
xchg
lea
into
sbb
sahf
adcb
test
aad
jg
pop
int3
enter
or
jle
pop
cltd
lods
pop
cmp
icebp
add
lret
xor
fsubs
inc
std
adc
jb
imul
mov
dec
dec
es
mov
aaa
sbb
jbe
test
inc
mov
and
aam
push
aaa
in
ljmp
sub
aad
xor
adc
cmp
imul
or
loopne
mov
jl
jg
das
mov
popa
in
int3
movq
orl
xchg
sbb
iret
sub
or
imul
int3
divl
movb
imul
push
imul
aas
mov
fldt
pop
out
sbbb
scas
lods
sarl
jnp
cmc
scas
outsl
test
pop
xchg
xor
cmpsb
and
aas
fcomps
xchg
out
lcall
jae
push
sub
cld
icebp
dec
lods
repnz
pop
mov
adc
mov
test
adc
and
nop
repz
sub
lahf
mov
jo
shlb
mov
out
daa
xlat
push
mov
pop
stos
in
push
mov
mov
loop
jmp
bound
ljmp
out
inc
div
sbb
fsubrp
sti
dec
push
sub
dec
insl
int3
rorl
ljmp
cmp
push
sahf
push
sub
add
imul
xor
aaa
xchg
jb
lods
testb
push
scas
imul
push
std
sbb
in
icebp
repnz
lock
movsl
mov
xchg
test
and
and
mov
add
and
int
test
adc
jnp
pop
mov
adc
add
push
je
imul
repnz
cli
enter
cmp
push
push
lods
mov
sub
repnz
pop
mov
jne
daa
mov
roll
roll
push
int3
fbstp
push
sbb
inc
rcl
inc
lahf
pop
ljmp
aam
add
sub
jno
test
xchg
jno
inc
xlat
test
std
push
in
inc
mov
jo
shrb
dec
clc
aaa
add
or
dec
jo
pop
aas
jb
inc
in
push
or
movsb
xorb
jae
insl
mov
jo
leave
pop
sbb
lret
jmp
sbb
mov
or
push
push
and
sbb
out
pop
outsb
inc
dec
mov
and
jns
xor
out
inc
and
test
xchg
cmc
cwtl
pop
push
dec
roll
movl
mov
fwait
xor
sbb
inc
sbb
gs
pop
scas
rorb
movsl
pop
in
bound
and
mov
es
pop
dec
jno
mov
mov
sete
js
xchg
call
inc
negb
inc
pand
mov
adc
mov
push
push
fwait
mov
idivb
hlt
or
aam
pop
movb
mov
inc
and
inc
pop
rcl
outsl
sub
and
cmp
popa
jle
lock
cmp
in
test
push
repnz
fldenv
int3
sub
mov
jbe
ret
sub
mov
rcrb
pusha
mov
pop
imul
das
in
mov
or
bound
dec
mull
dec
jmp
inc
mov
pushf
pusha
lock
pop
xchg
shll
inc
out
imul
call
clc
inc
cwtl
sub
sub
adc
sarb
movsl
xor
sub
adc
lock
sbb
hlt
out
pop
outsb
popf
jnp
push
pop
push
sub
mov
fimull
repnz
lea
fiadds
sub
mov
stos
sar
in
nop
lds
jge
out
lcall
and
dec
jns
cmp
ret
sbb
shll
adc
std
sub
out
dec
push
scas
shlb
fildll
outsb
movl
sub
out
jle
jmp
jmp
ds
mov
mov
adc
xchg
std
mov
pop
out
xor
push
sbb
aad
insb
fisubrs
inc
dec
mov
mov
in
mov
pop
push
pusha
lods
sub
inc
mov
fstl
lds
dec
imul
cmp
inc
bound
fcoml
and
inc
pop
fwait
mov
cltd
or
movd
mov
push
push
push
mov
cmc
fisubl
daa
sub
lahf
ss
loopne
add
shrb
nop
and
test
cmp
mov
iret
js
lods
fdivs
je
mov
imul
mov
lret
mov
mov
pop
dec
jnp
xchg
bound
cwtl
and
cmp
shr
pop
add
jne
test
xor
stc
jne
shll
mov
jb
or
pop
insl
imul
cmc
stos
loop
jg
cmp
xchg
fldt
mov
addr16
add
cmp
jo
push
xchg
or
rorb
pop
int3
mov
cmpsl
pop
fmul
aaa
jmp
inc
adc
cmp
push
inc
jp
push
mov
mov
cltd
jns
pop
mov
xor
jg
divl
jl
in
es
inc
addr16
jns
jecxz
pushf
xor
outsb
cmp
jl
outsb
jmp
fisubrl
scas
inc
push
sbb
call
dec
imul
xlat
sahf
mov
push
call
decb
es
nop
ret
inc
dec
jae
hlt
cmp
imul
aas
pushf
mov
fidivrl
sub
fstpl
fisubrs
or
test
add
cwtl
inc
mov
rorl
sub
addr16
cmp
push
jns
jo
scas
sub
outsb
je
lods
out
fmulp
fisubs
ljmp
andb
pop
js
imul
xor
leave
stos
push
cmpsb
cli
repz
mov
xchg
repz
mov
enter
and
lahf
mov
pop
push
cltd
dec
movsl
ja
fmull
mov
inc
xor
shll
lock
std
mov
ret
fdivl
jmp
cld
aad
mov
out
pop
subl
mov
hlt
add
leave
test
inc
orl
or
cwtl
orb
sbb
mov
pop
sub
and
push
test
ja
cmp
mov
pop
xchg
sub
adc
xchg
push
push
bound
mov
mov
les
clc
in
pop
leave
and
pop
dec
sbb
ja
fimull
lock
xchg
or
out
add
mov
test
repz
pushf
push
push
mov
movsl
pop
fsubrl
hlt
sti
pop
cmp
inc
sub
mov
push
add
sub
sub
add
mov
and
repnz
ret
mov
daa
sub
or
jg
imul
mov
cmpsb
sub
push
sbb
shl
mov
inc
idivb
sbb
dec
sbb
rol
repz
mov
adc
sub
or
dec
xor
lea
insl
push
or
push
pusha
cmp
cmp
cmp
clc
and
in
js
xor
enter
inc
sarb
pop
cmp
xor
cmc
adc
and
divb
push
mov
pop
sbb
fstp
sub
test
out
cvtps2pi
xor
or
in
lret
lret
shr
out
xchg
and
daa
sbb
lcall
ret
inc
sub
in
test
arpl
gs
fsubrp
ljmp
scas
sub
xor
addr16
fistps
idivl
in
inc
shll
xchg
sbb
xor
and
mov
ffree
int
fdivrs
adc
dec
xchg
je
into
pop
dec
movsl
daa
std
in
and
pop
out
mov
adc
mov
mov
xor
fisubl
jns
inc
call
xchg
ret
mov
leave
lahf
cwtl
sbb
adc
or
xchg
jecxz
lock
xlat
sub
mov
stc
jg
lock
mov
in
adc
mov
dec
push
fnsetpm(287
dec
stos
or
inc
jo
movsl
mov
mov
insb
sub
gs
jge
scas
enter
push
mov
sub
mov
clc
dec
movsb
cmpb
and
dec
push
push
adcl
xchg
pop
jmp
xor
loopne
shrb
int
jp
iret
shrl
dec
fs
xor
cmpsb
sub
xor
sahf
pop
xor
mov
fucomip
dec
sbb
xor
mov
mov
mov
cmp
scas
das
sahf
mov
add
adc
ret
stos
dec
pushf
sub
fadd
out
sub
add
aaa
shl
adc
add
rcrl
addr16
cvtps2pd
mov
mov
ljmp
jnp
or
invd
mov
mov
cmp
mov
ja
pop
inc
sbb
shll
pop
stos
xchg
popf
mov
cmp
mov
repnz
lahf
scas
out
mov
or
ja
add
adc
add
adc
mov
outsb
and
jmp
jl
xchg
mov
hlt
or
femms
pop
into
pop
les
jbe
cmp
lods
dec
jle
das
outsb
test
inc
das
inc
push
sbb
test
movsl
cwtl
lock
cmp
test
jne
cmp
cmpsb
push
jb
mov
ljmp
push
das
arpl
nop
aad
pop
push
jge
jg
repnz
sbb
or
fisubrl
sub
adc
and
push
xchg
fstl
test
sub
loopne
cmpsl
sbb
mov
push
cltd
dec
mov
fistps
bound
pop
push
sub
push
addr16
inc
mov
jns
leave
jb
pop
add
into
lret
cwtl
mov
cltd
mov
fistpll
cmp
stos
fldcw
xor
add
fs
mov
aad
dec
mov
sbb
pop
mov
xorb
push
mov
jmp
mov
dec
fwait
pop
push
loope
push
push
fiaddl
cs
push
subl
and
dec
imul
xchg
push
and
mov
jne
mov
shld
sbb
ds
jmp
aad
out
outsl
adc
dec
call
jg
cmp
cltd
jp
push
mov
lret
or
cmp
adc
cmp
dec
dec
sbb
fsubp
jnp
loop
pusha
bound
pop
mov
inc
lods
pop
adc
nop
pushf
inc
faddl
stos
and
ret
mov
bswap
or
lea
and
adc
insb
or
mov
aam
xlat
or
push
enter
and
ret
lret
add
jb
fisubrl
iret
dec
mov
pop
scas
dec
imul
mov
cmpsl
or
repnz
cmp
ja
ror
jg
xlat
mov
mov
repnz
xor
cmpsb
int3
stos
or
mov
clc
scas
clc
test
dec
test
add
aaa
mov
je
mov
mov
fcomps
xchg
jle
mov
das
and
jp
mov
push
aas
lcall
mov
loop
pop
xchg
fadds
imul
dec
dec
pop
mov
fdivl
fwait
leave
jg
mov
stc
inc
mov
mov
aam
push
cltd
and
xorb
lods
xchg
fldt
xchg
ja
fwait
repz
mov
rep
xlat
fiaddl
out
cmp
mov
pushf
aam
fisttpll
mov
add
fsubl
and
and
imul
ds
fstp
je
into
lahf
mov
pop
mov
push
mov
lret
add
cld
add
push
test
arpl
dec
sbb
in
lds
icebp
inc
inc
fnstenv
pop
mulb
xor
mov
loop
mov
sbb
pop
data16
xchg
arpl
adc
bswap
mov
aam
scas
add
inc
xchg
pop
sbb
mov
cli
and
jmp
mov
inc
sub
pop
fidivs
fnstsw
lock
shll
sub
test
stos
mov
iret
out
xlat
mov
in
movsl
pop
das
xchg
sbb
inc
cwtl
loopne
adc
jnp
dec
fsub
mov
adc
inc
mov
fsubr
mov
adc
test
scas
mov
jns
sbbl
jno
sbb
lret
cs
jmp
cmp
pop
pop
sbb
push
in
dec
pop
add
iret
push
pop
cld
add
mov
ret
pop
mov
xor
int
mov
lock
aas
icebp
mov
dec
subb
test
fcmovb
setp
or
and
jns
pop
imul
mov
in
jne
lds
mov
hlt
mov
cli
inc
push
ja
add
mov
repnz
scas
xchg
rcll
adc
gs
push
scas
call
mov
in
or
mov
dec
test
mov
add
and
jne
call
hlt
add
push
aam
repnz
out
mov
cld
and
fmuls
repnz
or
xor
sub
call
int
mov
mov
or
jne
lcall
mov
pop
pusha
cwtl
mov
lcall
cmpsl
adc
cld
pop
les
js
ret
ror
and
push
arpl
xor
test
xchg
ljmp
out
and
loop
repnz
out
pop
mov
cmpsb
mov
mov
jg
jns
sub
cmp
xor
sub
pop
addr16
mov
cltd
adc
loop
push
es
ds
ss
pop
inc
mov
leave
pushf
cmc
xor
int
mov
jns
adc
add
ds
pop
cmp
shll
mov
test
mull
mov
push
and
out
adc
sbb
inc
mov
dec
jns
adc
dec
cld
sub
xchg
push
sarl
sbb
adcb
xchg
and
ljmp
leave
call
mov
inc
jecxz
push
pushf
fcoml
mov
rorl
stc
xchg
xor
mov
push
add
jae
xor
outsb
out
pushf
dec
repz
mov
rep
shlb
push
outsb
mov
mov
push
lods
pop
je
pusha
pushf
push
ds
pushf
inc
movsb
add
jg
aad
stos
add
je
or
pop
inc
cmp
jns
in
inc
fsts
shlb
add
pop
inc
jecxz
pop
push
int3
push
xorl
frstor
hlt
or
test
out
scas
rclb
incl
adc
add
mov
fwait
dec
push
popa
pop
xchg
test
mov
mov
adc
arpl
inc
mov
repnz
cmp
jecxz
cmpsl
mov
or
fadds
call
test
or
shr
js
jb
or
pop
inc
pop
pop
addr16
jl
in
cwtl
mov
roll
mov
int3
mov
dec
sti
lods
jp
shr
bound
jl
outsb
test
leave
xchg
xor
sub
sbbb
cmp
popa
loop
adc
hlt
xor
mov
ror
ss
pop
stos
jbe
mov
jl
xchg
std
jno
pop
loope
lds
loopne
cmp
and
mov
adc
mul
outsl
js
out
xchg
dec
sub
mov
hlt
fcompl
ja
push
cmp
int3
xchg
cmp
hlt
rorl
stos
sbb
mov
push
push
out
es
fs
jns
add
daa
movsl
or
mov
jnp
or
add
sahf
push
stos
imul
or
fs
sahf
xor
mov
rcrl
inc
lret
pop
iret
out
gs
aad
sbb
fld1
enter
adc
push
loop
push
gs
mov
and
push
daa
daa
je
mov
xchg
mov
xchg
fdivl
lock
pop
pop
fistpll
jp
or
insb
test
mov
daa
dec
gs
clc
nop
out
cmpsb
outsl
sbbl
mov
push
mov
and
adc
in
cmp
sub
and
push
inc
mov
adc
jge
jnp
mov
jns
iret
negl
insl
cmpsl
les
dec
adc
xor
add
sahf
test
mov
xchg
sub
testl
mov
xchg
inc
add
lea
cmc
jge
or
mov
cmp
inc
xchg
rcrl
or
mov
cli
rcrb
mov
and
icebp
add
add
std
inc
jecxz
sbb
clc
je
mov
push
psllq
test
rcrb
xchg
out
lret
negl
inc
popa
outsb
and
mov
jp
sbb
or
ds
lcall
fldl
orb
jle
bound
push
lock
pop
or
fwait
sbb
shlb
jb
subl
mov
mov
sub
and
aaa
dec
out
xchg
add
fs
add
in
sub
xchg
aam
adc
mov
mov
idivb
push
les
loope
test
aas
inc
push
sahf
push
sub
fdivr
mov
sarl
outsl
mov
xor
and
or
pop
adcb
push
pop
xchg
lea
mov
pop
cmpsl
adc
or
es
dec
push
jge
in
cmp
ds
pop
sbb
inc
mov
fwait
pop
sbb
inc
cmpsl
loope
sub
lods
lahf
add
fnsave
jo
mov
adc
adc
adc
xchg
rorl
mov
push
adc
ret
out
push
std
inc
xchg
stos
clc
jno
or
aad
js
fs
mov
mov
mov
repz
loope
insl
adc
in
cmc
out
xor
xor
or
cmp
adc
call
pop
push
or
xchg
movsb
cmp
cmp
mov
mov
mov
pop
mov
pop
mov
sar
push
jecxz
push
mov
loopne
movsl
jns
mov
test
and
or
sub
push
addr16
jns
add
mov
out
mov
jp
inc
push
mov
lds
push
pop
jb
xchg
dec
push
in
stos
xchg
lea
test
pop
push
and
leave
lock
xchg
pop
test
inc
cmp
in
scas
xchg
inc
push
ficoml
mov
jmp
pop
shrb
dec
adc
mov
pop
cmp
cwtl
mov
mov
mov
xchg
fnsave
es
mov
sbb
mov
leave
ret
and
sbbb
xor
mov
xchg
add
xchg
mov
scas
or
int
jno
mov
out
fists
cld
push
je
dec
jno
rorl
sti
mov
popa
inc
push
leave
subb
out
xchg
hlt
sub
fisubrs
xor
and
cmp
dec
mov
pop
vcvtsd2ss
insb
jne
jno
aam
sub
imul
lret
inc
lods
inc
pop
lock
lods
in
cmp
aas
and
sbb
or
xchg
sbb
xlat
iret
fbstp
sub
xchg
jmp
and
push
mov
or
xor
and
je
fwait
cmp
pop
push
and
imul
test
sti
pop
cmp
xlat
dec
fs
icebp
xor
cld
in
in
out
jbe
stos
jmp
andb
push
push
icebp
xchg
outsb
pop
fwait
mov
dec
push
push
add
pop
sbb
in
or
xchg
andb
imul
sbb
stc
inc
xor
mov
mov
fcomps
shll
push
dec
movsl
fbstp
int3
dec
enter
insl
mov
cmpsl
pop
jecxz
movsl
sbb
cmc
inc
and
adc
xor
xchg
xchg
xor
jnp
lds
dec
lods
xor
fnstcw
pop
sbb
nop
pop
rolb
jae
mov
xchg
ja
add
mov
sbb
loopne
adc
push
pusha
sub
jge
jmp
lret
xor
sub
add
jg
jnp
stos
bound
push
mov
mov
add
jno
std
jno
addr16
jp
push
dec
mov
es
pop
pusha
jecxz
pop
push
lods
cmp
mov
or
jge
lods
push
ss
add
inc
imul
mov
pop
inc
leave
adc
pop
inc
jae
jmp
test
movsl
add
push
jnp
add
imul
or
dec
pushf
sarl
or
out
lods
sbb
inc
push
push
fisubrs
les
mov
cmp
jecxz
add
mov
out
sahf
mov
gs
fsubrl
jns
pop
inc
or
aam
int
fadd
jle
xlat
xchg
imul
mov
cmp
xor
popf
or
ret
loop
inc
mov
lea
cmc
pop
mov
adc
rcrb
lods
inc
shl
mov
clc
sub
adc
pop
into
add
mov
push
lret
rcll
ds
mov
aas
imul
inc
out
stos
popa
push
xorl
notb
leave
je
ljmp
out
loopne
pop
scas
cwtl
jmp
sahf
mov
les
ja
mov
jae,pn
idivl
mov
fidivl
std
cmp
or
add
mov
jl
and
enter
leave
or
out
mov
add
or
jg
push
repnz
out
jae
fwait
add
popf
sub
lret
rcl
add
add
sbb
mov
fsts
sahf
jnp
mov
test
call
jne
imul
xor
aad
jbe
in
ds
sub
push
jnp
add
push
pop
xchg
sbb
lods
fs
daa
lahf
ret
ds
inc
push
and
daa
jge
sahf
pop
stos
sti
dec
sbb
adc
push
pop
pushf
popf
out
insb
mov
movsl
pop
mov
fcomps
fnsave
jle
mov
adc
in
iret
ja
popa
test
sbb
pop
punpcklbw
jmp
cmp
cmp
jb
push
fistps
sub
push
jnp
daa
jmp
loop
mov
insb
dec
push
lahf
push
adc
mov
sti
xorb
xchg
movsb
inc
add
shrb
ficoml
ret
stc
clc
ret
jecxz
jnp
cmc
sub
mov
dec
lock
aaa
add
nop
stos
icebp
sahf
inc
cltd
add
lea
inc
and
jl
lods
stos
sbb
mov
jge
pop
fdivl
insl
mov
test
adcb
mul
adc
js
cmpsl
pop
jle
and
sub
or
andb
pop
icebp
ret
insb
test
shlb
adc
inc
rcrl
mov
mov
int
jns
adc
ret
pop
clc
xorl
jp
xchg
mov
ds
push
jmp
cli
clc
inc
int
mov
cmp
enter
div
int
inc
cmpsb
cmp
dec
xor
pushf
mov
mul
push
or
sbb
decb
in
jne
xchg
push
movsb
inc
ret
pusha
loop
dec
add
push
sub
aam
lret
scas
loope
mov
mov
or
xlat
imul
inc
mov
inc
ss
lahf
lds
pop
jle
push
pop
push
scas
dec
dec
jbe
clc
pop
js
dec
lret
fs
and
jecxz
push
movb
out
push
ljmp
and
les
arpl
stc
xchg
cs
popf
mov
jge
lret
rorl
imul
jge
incl
int3
stos
mov
push
cltd
sbbb
push
sbb
push
cmc
inc
hlt
lret
pop
and
xlat
mov
idiv
push
cs
xchg
push
loopne
dec
in
push
xor
int3
rol
jecxz
test
sub
pop
dec
test
repnz
rcrb
adc
sub
out
mov
loope
pop
addb
dec
imul
mov
dec
and
arpl
inc
jecxz
pop
test
pop
ljmp
xchg
jecxz
jle
mov
fs
inc
mov
mov
iret
or
mov
mov
lret
sub
into
fsubrl
cmpsl
xchg
notb
addr16
dec
bound
out
sub
aas
sbb
and
rorb
sbb
and
nop
andb
inc
pop
xchg
pusha
pop
inc
lds
nop
test
jb
push
mov
cli
dec
cli
jl
sahf
fidivrs
cltd
movsb
cmp
cmpsl
inc
dec
dec
push
cmp
cmp
ja
ret
mov
adc
sahf
xchg
jne
adc
pop
sub
fwait
es
add
dec
dec
cmp
cmp
mov
idivb
orl
jecxz
repnz
pop
rcll
fwait
jbe
xchg
jns
dec
shrb
int
mov
cld
inc
nop
das
sbb
lds
into
adc
pop
adc
lock
sub
push
jge
jo
inc
fs
adc
daa
pop
testb
pop
loopne
pop
dec
scas
pop
inc
test
ja
into
cmp
aad
stos
bound
repnz
add
fidivl
jns
std
push
pop
jb
std
pop
add
mov
adc
mov
push
insb
cmp
insb
push
push
mov
fcoml
pop
int
dec
sub
cmc
inc
mov
cmp
and
in
inc
test
shll
arpl
gs
data16
adc
add
das
mov
adc
xchg
in
sub
jne
push
ret
in
insb
fmuls
and
ss
xchg
hlt
shlb
mov
out
mov
inc
aaa
pop
das
or
jb
popf
xor
ds
push
xor
stc
xchg
sarl
test
aas
mov
fs
popa
jp
cs
and
ret
add
int3
movsb
mov
mov
dec
and
in
adc
arpl
jne
push
popf
inc
adc
push
scas
stc
jecxz
and
into
push
adc
adc
add
out
mov
daa
bound
std
jns
inc
jno
mov
iret
or
xchg
sub
push
cmc
imul
push
or
shl
jle
pop
inc
and
lcall
ja
ja
lcall
cltd
pop
mov
scas
inc
or
inc
inc
lods
cmpsl
and
les
fwait
imul
into
add
roll
jns
jbe
test
insb
pushf
jno
xor
mov
xorl
mov
pop
jge
in
mov
shrb
and
adc
sti
dec
cltd
mov
dec
mov
pop
test
jp
pop
fldl
push
lret
add
imul
loop
jl
mov
jle
dec
mov
lahf
repnz
out
scas
test
cmp
jmp
adc
scas
dec
insl
push
jne
and
and
push
mov
popa
loope
arpl
inc
aas
mov
shlb
fwait
sbb
gs
imul
push
cmp
inc
pop
aas
test
inc
or
inc
add
pop
sbbb
mov
or
xchg
cmp
dec
jne
add
test
cmpsl
hlt
leave
stc
shlb
adc
lea
clc
or
daa
cwtl
out
mov
out
mov
and
add
or
test
jno
xchg
and
mov
pop
out
cmpsb
jbe
jecxz
adc
add
out
push
mov
pop
cs
mov
enter
push
pop
or
sbbl
lcall
xchg
mov
mov
or
xchg
cmp
scas
push
lcall
stos
jbe
clc
dec
jb
add
jne
xor
mov
xchg
out
jle
movsl
lds
sub
mulb
lea
cmp
cli
jo
pop
xchg
out
mov
xchg
mov
sub
es
nop
fmull
std
adc
adc
cmp
xor
test
pop
push
sarl
dec
jmp
dec
popa
shrb
jmp
fsubrp
inc
lret
dec
cmp
push
and
jl
add
int
adc
mov
or
das
inc
fstpt
or
and
icebp
push
pop
xor
inc
ret
cli
repnz
pop
outsb
mov
push
pop
je
ffree
pop
pop
xchg
mov
push
pop
xor
lea
movsl
cmpsb
sbb
rolb
cmp
push
inc
pop
test
push
popa
les
rcll
push
aaa
xor
jne
int3
lds
sbb
cwtl
xor
cmp
jnp
dec
iret
fwait
adc
cmpb
sub
fldt
pop
push
jne
popa
je
dec
fisubl
shrb
mov
ret
int
aad
in
mov
jns
inc
adc
es
scas
inc
dec
xchg
xchg
inc
mov
mov
xchg
push
popa
scas
call
push
mov
adc
pop
mov
es
movl
gs
into
pop
push
inc
push
xchg
push
adc
jnp
enter
subb
int
add
pop
sbb
ss
sub
dec
mov
sahf
inc
jmp
mov
cwtl
xchg
fisttpl
mov
mov
mov
sbb
jb
mov
hlt
dec
mov
out
mov
pusha
mov
push
out
dec
inc
imul
lret
mov
repnz
stos
enter
int3
outsl
add
dec
push
jle
sbb
inc
aas
xor
in
lock
sbb
pop
sub
in
mov
gs
lock
div
scas
rol
inc
cld
sub
enter
mov
shll
dec
outsl
jno
or
lea
mov
pusha
movsb
mov
stc
jo
test
loop
fcomi
outsl
hlt
mov
mov
int
lock
pop
clc
push
dec
jmp
mov
mov
ret
push
inc
insb
fnsave
fs
xor
pop
fcoms
out
cltd
sbb
rorl
mov
pop
mov
jns
xor
add
mov
sbb
mov
dec
and
sbb
push
stc
push
inc
mov
inc
xor
mov
cwtl
ret
cmc
adc
mov
cmpsl
push
mov
pushf
inc
cmp
popa
inc
or
test
mov
sub
test
arpl
adc
push
inc
sub
mov
jl
negl
js
addl
push
mov
in
jg
jecxz
ret
shll
outsb
xchg
mov
pop
sub
jo
dec
enter
xor
cmp
jp
leave
mov
sub
xchg
stos
repz
fimuls
pop
dec
cwtl
out
sahf
inc
scas
lock
push
jmp
dec
outsl
ja
neg
or
repz
aad
cmp
xor
rol
pop
int3
xchg
mov
hlt
cmp
add
loop
sub
push
pop
inc
sub
daa
add
mov
sbb
xchg
xor
adc
jno
dec
sub
frstor
insb
cmp
adc
sbb
arpl
jno
cld
loopne
lds
mov
enter
xorb
mov
push
jb
into
ret
out
fistpll
out
ljmp
and
fstl
pushf
sub
loop
jp
aas
jnp
es
int
sbb
xor
jbe
xchg
lret
push
push
push
xor
fadd
fidivrl
sbb
sbb
mov
addr16
fwait
icebp
sbb
popf
loop
and
sbb
fldenv
sub
xchg
xchg
adc
nop
sub
aas
or
ljmp
dec
ljmp
fstl
scas
cwtl
inc
mov
xlat
rclb
adcl
stc
add
outsb
push
adc
inc
mov
adc
push
in
mov
dec
stc
cmp
in
fmul
sbb
xor
mov
xchg
popf
icebp
sub
cmpsb
push
adc
lods
or
iret
sti
fwait
pop
ds
and
jae
xchg
ja
ret
mov
dec
mov
ljmp
mov
scas
push
and
repnz
mov
or
mov
pop
mov
punpcklbw
ja
shlb
lret
out
mov
mov
dec
pop
pop
lock
jle
dec
fstl
stos
outsb
lret
mov
repz
dec
pushf
sbb
push
jmp
dec
lret
test
pop
xchg
sub
ficompl
inc
and
pop
dec
pop
cmc
jp
mov
push
mov
ficomps
and
push
bnd
sbb
push
addr16
jb
pop
std
fisubs
cmc
repz
jle
jecxz
scas
mov
pop
xchg
jecxz
push
mov
lret
lock
xchg
addr16
jp
call
inc
out
cmp
jecxz
bound
adc
adc
mov
jno
stc
xchg
xor
mov
jbe
imul
inc
cmp
arpl
xchg
scas
sbb
pop
add
es
adc
cltd
aad
dec
push
fdivs
lods
insb
mov
out
mov
inc
mov
cltd
popa
fsubs
test
mov
adc
lds
sub
push
pop
sub
sub
inc
mov
lahf
repz
shll
into
sarb
js
aas
in
push
pop
scas
sarl
sbb
sub
ret
insl
gs
add
ss
jmp
or
ret
adc
fsubl
ja
mov
jl
dec
jge
cmp
xor
sub
in
int3
mov
hlt
add
sbb
mulb
dec
leave
mov
sbb
nop
sbb
or
cmp
leave
leave
jecxz
mov
out
lahf
cmc
xor
or
bound
cmp
dec
jge
jmp
test
pop
popa
inc
pop
adc
inc
jno
mov
ds
loop
jns
and
shrb
fldt
jae
dec
mov
mov
mov
fiadds
cmpsb
add
cli
rcll
das
lds
lods
pusha
and
sbbb
sahf
scas
inc
iret
mov
mov
gs
mov
dec
and
mov
sub
push
in
stos
inc
pop
cmp
push
or
inc
mov
js
ficompl
push
pop
inc
nop
out
dec
aaa
push
cmpsl
pop
lock
lock
test
jge
push
sbb
das
fildll
sub
sbb
lock
push
lds
das
mov
jecxz
add
aad
stc
repz
scas
mov
xlat
aas
in
inc
and
mov
cmp
sub
fdivs
movsl
ds
arpl
in
adc
inc
incl
stos
loop
xchg
fs
adc
testb
sub
and
inc
cmp
lret
jle
aaa
inc
out
shll
stos
loopne
aas
pusha
sbb
nop
adc
lea
jbe
fldcw
rcrb
mov
jne
jno
mov
stos
sub
movsb
push
stos
xchg
xchg
mov
loop
sub
mov
jmp
xor
inc
sub
sti
cmp
mulb
and
fsubrs
pop
lods
pop
dec
add
adc
iret
hlt
jle
aas
dec
iret
xchg
push
js
out
cmpsl
jns
xchg
cwtl
out
xchg
nop
mov
or
xor
jmp
push
clc
pop
xchg
add
cli
add
addr16
fistl
es
pop
rcll
cmp
and
xchg
out
jae
fdiv
out
cmp
jle
out
jo
test
jo
in
mov
hlt
icebp
cltd
pop
in
test
jmp
jp
insb
jbe
repnz
and
fs
jp
imul
aam
adcb
dec
loop
rcrl
mov
stos
call
mov
scas
inc
adc
stos
inc
inc
adc
xor
xchg
mov
jbe
sub
enter
pop
cmpsl
fcomps
std
mov
xchg
inc
vpsubb
inc
je
add
in
adc
pop
arpl
jmp
and
add
sub
les
sbb
rorb
dec
adc
jae
jecxz
xor
xor
je
inc
cltd
cs
xchg
jno
add
or
jnp
xchg
mov
shlb
addl
div
sub
and
arpl
pop
faddl
cmp
jo
pop
test
mov
pand
cs
xchg
test
test
hlt
js
push
js
adcl
mov
iret
negl
lock
or
jecxz
cmpsb
jbe
inc
pop
sbb
mov
mov
mov
xor
add
cmpsl
in
push
jb
stos
imul
adc
aaa
icebp
or
push
jg
into
inc
push
mov
aaa
out
shrl
out
aam
pop
stos
or
sub
insl
mov
out
push
add
sbb
cmp
or
scas
sarl
adc
out
cmp
lds
inc
mov
loope
sbb
nop
dec
fsubrl
in
cmpl
mov
in
sbbl
xor
mull
imul
out
jne
nop
loopne
enter
jno
loopne
out
add
adc
mov
mov
sbb
push
inc
sbb
jg
push
sub
mov
je
sub
int3
stos
dec
sub
orl
xchg
repnz
jbe
dec
hlt
mov
cmp
inc
sub
xchg
adc
fisttpl
mov
dec
and
stc
mov
shrb
scas
sarl
mov
lret
mov
and
sub
loope
mov
cwtl
cli
push
adc
push
into
xor
inc
push
pop
mov
popa
jge
add
xor
or
cwtl
push
inc
or
in
sti
mov
mov
mov
add
arpl
dec
test
fwait
mov
les
xor
es
lods
xchg
js
add
cmc
shlb
pop
cmpsl
rorb
int
pop
idivb
dec
cmpsl
cltd
push
inc
ja
jbe
aam
in
jne,pn
fidivrl
loop
arpl
add
cmpsb
fistpl
push
xor
xor
push
test
scas
jl
out
movb
mov
sti
mov
inc
add
ds
add
mov
outsl
xchg
jp
dec
jno
popf
pusha
sbbl
inc
loopne
ja
pop
mov
cmp
add
adc
aaa
insb
mov
cmp
inc
xchg
scas
jne
and
or
sarl
inc
insb
icebp
xchg
or
in
push
pop
test
out
jbe
push
jmp
adc
cmp
repnz
cwtl
and
pop
pop
jle
lahf
clc
imul
movsl
daa
mov
jbe
in
test
or
addb
sbb
adcl
fsubl
xor
mov
and
push
lret
ja
or
mov
mov
mov
mov
sahf
dec
pop
push
sbb
xor
out
pop
imul
inc
inc
xchg
fidivs
xchg
or
mov
test
rorl
xchg
sbb
xchg
or
mov
lods
hlt
pusha
lods
mov
add
in
push
mov
dec
jle
and
jo
push
pop
push
add
rclb
cmp
inc
fstl
repz
daa
call
daa
leave
jp
mov
add
adcl
sbb
mov
jns
pop
repz
dec
aaa
data16
test
jns
notb
lret
and
add
dec
gs
shrd
subl
mov
fisttpl
sub
push
and
dec
mov
lcall
cltd
testb
adc
fsubrl
cwtl
lcall
jns
minps
mov
jae
mov
cld
jp
mov
adc
in
sti
adcb
mov
inc
or
rorl
xor
add
mov
gs
movsl
ret
cmp
cmp
ss
jl
inc
mov
mov
inc
int3
hlt
ja
repz
call
xchg
filds
outsb
sub
pop
sub
mov
push
adc
enter
stos
inc
jp
mov
cltd
xchg
cmp
push
and
lea
sarb
adc
mov
imulb
outsl
cmp
cmpsl
inc
roll
shlb
dec
jp
and
sub
int3
xchg
sbbl
sbb
fstl
push
dec
subb
jns
frstor
push
lds
pop
cmc
push
mov
scas
gs
rcl
aaa
roll
sbb
jmp
inc
pop
jmp
sbb
and
lods
in
aad
ret
jo
pusha
sub
cltd
jb
mov
push
xchg
xor
push
int3
icebp
jns
fistl
mov
or
mov
jmp
mov
inc
int
aaa
cwtl
hlt
mov
mov
ds
dec
decb
push
cmpsl
cld
jno
xor
and
int3
xor
rorb
adc
xchg
rorb
fnsave
mov
xlat
cmp
inc
leave
push
cld
adc
ljmp
mov
aam
cmc
push
aas
cmp
xchg
and
movsb
dec
adc
sahf
es
cwtl
dec
cmc
mov
inc
ret
cmp
jae
movsb
stc
sub
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
mov
dec
mov
jbe
sti
sub
in
xchg
ljmp
and
mov
rolb
sbbb
dec
push
icebp
lret
enter
mov
adc
cld
scas
popa
inc
jae
adc
repnz
arpl
xchg
lret
xchg
sarb
mov
mov
sbb
add
add
out
js
mov
pop
mov
jecxz
ss
fisubl
test
xlat
inc
jne
adc
mov
imul
mov
push
and
sbb
arpl
mov
inc
andb
out
push
mov
mov
rorl
mov
add
mov
push
xchg
addr16
dec
mov
lcall
adc
sbb
add
mov
adc
lods
ljmp
pusha
es
xchg
or
jns
or
dec
lcall
inc
xor
popa
xor
cmp
add
sub
mov
and
fisubrl
inc
subl
ret
inc
sbb
addr16
in
insb
inc
mov
imul
outsl
push
rsqrtps
int
sub
shlb
dec
cli
sub
mov
rclb
cmp
mov
mov
sub
lods
jne
dec
aaa
dec
aam
idivl
mov
xchg
dec
cmp
dec
jne
cmpsl
mov
test
fisubrl
mov
lret
jecxz
sub
js
adc
aam
in
xchg
and
cmp
adc
insb
pop
and
cmp
ja
jne
popf
cmp
push
jnp
mov
jnp
pop
mov
in
icebp
sti
xchg
movaps
cwtl
adcl
aas
out
dec
fwait
sahf
dec
mov
or
dec
shll
or
pop
push
in
mov
insb
dec
shrl
add
push
lds
mov
mov
mov
add
fimuls
test
mov
ficoms
mov
xchg
roll
fdivs
pop
mov
dec
sub
jecxz
mov
lcall
xchg
nop
testl
mov
pop
dec
ja
testb
mov
ja
pop
push
mov
movsl
decl
cwtl
mov
pop
xchg
in
xchg
cmp
add
into
xorb
jne
jae
das
lret
mov
fmuls
incl
aaa
push
push
jle
jae
mov
cmp
movsb
pop
dec
mov
ds
movsb
rcll
mov
cmp
and
shll
loope
add
test
or
dec
mov
xchg
jmp
mov
clc
aaa
sub
cmp
mov
xlat
out
jbe
pushf
in
cltd
inc
adc
divb
nop
loopne
lret
mov
cmp
cmp
push
mov
and
or
cmp
mov
cmc
sbb
xor
jne
or
mov
xchg
loopne
push
std
aad
cmp
sub
xchg
imul
pop
jbe
xchg
in
adc
add
sbb
mov
adc
lods
sub
pushf
jg
idivl
shll
sub
cs
rol
clc
lea
mov
push
mov
sarl
in
stos
ljmp
iret
leave
test
aam
aam
in
mov
mov
push
sbb
adc
xor
mov
sub
popa
push
daa
pop
adc
ljmp
sbb
jmp
mov
cmp
daa
repz
sub
jle
xchg
sub
aas
test
mov
dec
test
mov
cmp
push
and
out
pop
xor
push
xchg
std
mov
rol
fidivs
mov
xchg
mov
movsb
push
sti
dec
dec
insl
cs
loopne
aaa
add
or
sbb
cmp
addr16
out
js
jg
mov
lods
add
adc
jns
idivl
mov
cmp
inc
loopne
and
mov
popa
jo
stos
xor
sub
test
pusha
mov
mov
ss
push
stos
mov
xchg
fmull
xchg
or
pop
fisttps
lds
lea
decl
jnp
sahf
jmp
push
div
mov
mov
push
outsl
cmp
movsl
sub
push
cwtl
inc
mov
popf
pop
add
xor
mov
arpl
scas
mov
mov
fists
and
mov
dec
push
rorl
add
cmp
cltd
sub
jnp
lods
sahf
lds
fwait
sub
into
fs
mov
jg
push
fwait
add
push
inc
js
pop
mov
jmp
xchg
dec
lds
cmpb
sub
dec
std
call
xor
jne
sub
add
xor
pop
loopne
sbb
sbb
push
mov
dec
xchg
adc
icebp
lcall
adcl
push
fstpt
testl
les
mov
push
popf
popl
adc
xchg
fistpll
mov
add
pop
inc
sub
ret
push
jmp
lahf
sbb
sub
jmp
mov
int
xor
in
cli
rorb
add
nop
lahf
cli
movsl
imul
aam
push
nop
pop
mulb
lea
out
and
mov
sub
cwtl
movsl
xchg
mov
testb
movsl
inc
inc
inc
or
outsb
mov
xor
pop
fdivs
test
and
sbb
push
dec
in
pop
imul
sti
and
push
popf
shll
mov
lahf
sbb
pop
and
inc
pop
push
pushf
jns
aam
ret
cmpsb
add
inc
mov
mov
in
mov
dec
fdivrs
mov
sbb
adcl
dec
das
roll
sbb
cmpsb
inc
out
and
push
punpckhwd
mov
jl
rcll
fldcw
mov
jno
aam
dec
xorl
mov
sbb
jbe
xlat
push
sub
in
scas
xchg
out
push
clc
testb
sbb
flds
and
xor
inc
or
pop
stos
pop
cltd
fs
mov
sub
insl
ror
aam
rorb
sub
popa
in
stos
dec
pop
int
cmc
outsb
popf
call
repz
and
loope
mov
or
imul
inc
and
push
xor
das
into
mov
jns
std
call
scas
inc
es
mov
in
out
ss
and
jne
fucomp
pop
add
arpl
out
add
enter
sarb
outsb
jbe
add
sbb
out
cmp
add
dec
stos
pop
lock
pop
fldcw
mov
repz
inc
cltd
daa
lock
jns
mov
lods
cwtl
fcmovb
jno
sub
flds
mov
inc
cwtl
sbb
lahf
sarl
jns
shl
push
stos
jae
xchg
out
aam
ffree
push
lods
dec
xor
aaa
jecxz
push
xchg
xchg
subl
test
inc
jbe
adcl
int
mov
add
jmp
lcall
fmuls
pop
xor
jge
sbb
dec
cmp
loopne
lock
cli
adc
push
cwtl
adc
jle
movsl
xchg
sti
out
in
xchg
cmc
dec
mov
jmp
sbb
sahf
cmp
mov
imul
push
pop
add
inc
hlt
fistl
jg
into
mov
mov
repz
xchg
adc
popf
outsl
jo
scas
std
aam
mov
inc
out
sub
adc
mov
mov
or
cmp
leave
ja
iret
mov
fbld
jnp
pop
pusha
cmpsl
fists
and
shrb
cmpsl
mov
push
fstpt
std
stos
push
iret
pop
clc
mov
xor
inc
jne
and
xchg
add
shll
orb
pop
cmp
push
jg
stos
mov
jbe
xlat
arpl
and
jp
fwait
cld
popf
sbb
add
clc
jae
in
xchg
fstpt
dec
aaa
das
dec
ficoml
jmp
popf
enter
push
pop
mov
jp
test
das
mov
push
je
cltd
mov
adc
pop
mov
pop
lock
fdivl
test
test
dec
jb
mov
enter
jmp
scas
jo
fcompl
push
cmc
mov
arpl
ret
jcxz
sbb
ljmp
testb
les
cmpsl
pop
adc
xchg
xchg
lcall
js
aas
loopne
inc
data16
pop
cld
addr16
shlb
imul
push
ss
jmp
push
inc
ret
add
test
inc
inc
in
mov
dec
sahf
cmp
mov
jne
movsl
sub
cmpsl
adc
inc
add
ret
sub
leave
mov
ljmp
mov
repnz
pop
mov
push
mov
xor
pop
sub
cwtl
cwtl
xchg
add
sub
add
imul
inc
push
xchg
add
mov
push
lcall
adc
pusha
push
push
clc
orl
fistl
cmp
sbb
push
push
lods
mov
fbstp
adc
mov
fwait
shr
fistl
inc
js
inc
insb
cltd
int
mov
xchg
andb
cmpsl
outsb
adc
shl
add
jns
xchg
rol
dec
daa
mov
adc
lret
popa
lea
inc
test
mov
or
clc
fimull
jle
or
in
mov
out
jl
lods
jle
call
add
aad
xor
aam
xchg
adc
pushf
pop
or
pop
cmpsl
faddl
push
mov
rcrl
popa
cltd
dec
mov
outsb
push
in
and
xor
push
push
or
push
xor
jns
sub
pop
jl
jmp
cld
cmp
jle
xchg
ds
movsb
push
in
decl
insl
push
scas
mov
gs
adc
xor
aam
mov
das
mov
jne
pop
dec
add
scas
stos
fisubl
xchg
dec
and
aad
and
and
shlb
lods
pop
or
pushf
bound
jnp
jecxz
subl
fcomps
push
mov
std
adc
push
mov
aam
cmpsb
mov
shr
xor
adc
mov
push
sub
fsubl
adc
jns
rolb
data16
clc
addr16
out
push
ret
lds
mov
shl
clc
jp
test
mov
sbb
call
or
mov
orb
pop
ja
scas
stc
push
fdivp
loope
popf
sbb
push
xchg
cli
jge
sahf
xor
cwtl
sub
mov
aas
lahf
inc
or
adc
mul
stos
xor
mov
adc
xchg
bound
sbb
pop
movsl
or
jl
les
arpl
jns
sub
fbstp
mov
insl
mov
jp
or
in
push
cmp
cmp
mov
adcb
add
int
lcall
das
xchg
stos
sbb
loopne
pop
faddl
dec
cmp
lods
sbb
jl
hlt
sbb
jmp
sub
push
das
pop
and
jmp
cli
outsl
dec
mov
cmp
pop
movsb
or
jge
add
xchg
mov
ds
cmpsb
sarl
or
imul
cwtl
ficoms
push
mov
pop
xchg
sub
pop
test
aaa
and
scas
pusha
dec
daa
in
inc
mov
pop
aam
fisubs
adcl
cld
cmp
fbld
adc
pop
mov
sub
and
or
mov
dec
rcrb
outsb
mov
add
popa
and
cmp
and
adc
cld
add
mov
push
dec
jne
cltd
mov
test
repnz
mov
inc
out
je
mov
mov
loopne
xor
jle
xchg
jmp
jecxz
xchg
push
fdivr
xchg
adc
cmpsb
bound
dec
push
cmpsb
push
out
pusha
cmp
fmuls
int
enter
inc
imul
movl
mov
push
push
adc
jmp
inc
jl
jns
or
mov
outsb
jno
rcr
jb
adc
gs
lea
or
stos
xchg
or
pop
cmp
dec
loopne
push
xlat
push
hlt
mov
cltd
cltd
push
loope
lea
sbb
xchg
push
mov
sbb
test
lock
add
jbe
cwtl
loope
in
and
mov
cmp
pop
pop
fidivl
cmp
int3
mov
popa
sub
pop
pushf
sbb
mov
jge
push
bound
pop
cld
pusha
sbb
mov
roll
cli
mov
sbb
or
cmpsb
push
lahf
scas
inc
fdivrl
push
ds
mov
sbb
dec
pop
jbe
sub
out
test
out
clc
ja
hlt
lret
lods
bound
nop
mov
mov
mov
outsb
xchg
mov
pusha
or
std
dec
shrb
adc
int
dec
adc
pop
scas
daa
decb
repnz
or
jb
fs
loope
xchg
pop
jmp
dec
ljmp
aad
jnp
mov
daa
cmp
and
mov
adc
push
mov
stos
test
lock
push
sbb
pop
into
js
jecxz
mov
adc
dec
cmp
mov
inc
icebp
scas
stc
sbb
sub
xchg
push
xchg
push
aas
and
cmp
sub
mov
dec
cli
pusha
mov
negb
mov
mov
jno
outsb
cmp
inc
arpl
incl
pop
xchg
je
push
or
ret
pop
or
ror
or
xor
or
mov
pop
jg
out
or
dec
stos
daa
push
aad
mov
adc
mov
add
fiaddl
hlt
xor
or
in
mov
ljmp
ja
data16
pop
dec
adc
addr16
mov
in
lret
shl
loopne
pop
xchg
cmp
pop
mov
jl
lcall
pop
gs
xorl
leave
sbb
dec
imul
xchg
sbbl
jg
sbb
pop
fldcw
scas
roll
or
sbb
dec
pusha
cmp
std
rcrb
clc
mov
and
mov
or
mov
sub
jge
pop
loop
movsb
sti
mov
jmp
ror
movsl
fwait
shrb
subl
loopne
test
dec
xlat
enter
in
fcompl
lret
lock
aas
ja
xor
dec
ror
adc
jbe
jle
push
jge
ret
scas
lock
scas
mov
loope
rcrl
in
sbb
sub
sub
std
icebp
push
mov
ret
adc
dec
shl
jne
push
lods
lret
xchg
xor
imul
push
lods
adc
adc
jmp
inc
sbb
pusha
out
xchg
out
lods
mov
dec
pop
pop
insb
pop
fnsave
pusha
dec
dec
mov
pushf
dec
std
jl
cmp
ret
sahf
std
in
xchg
inc
mov
cmovl
addr16
xor
push
sti
in
jl
mov
fwait
pushf
loope
ja
scas
mov
cmpsb
jl
lods
push
cmp
jg
ljmp
pop
jnp
fdecstp
test
push
mov
cmp
iret
out
test
cmc
sub
jbe
add
adc
add
enter
ds
test
insl
or
or
imul
into
xorl
out
fs
sbb
xchg
xchg
mov
lds
cld
fldt
jns
ret
in
jp
jbe
mov
pop
leave
mov
push
rcrl
fcoms
jnp
shlb
mov
pop
or
out
push
repz
jl
into
ja
mov
xor
cmc
push
test
arpl
jge
xor
insl
dec
jg
xorl
push
repz
jb
stos
pop
mov
pop
jp
inc
outsb
jge
pop
aam
outsb
push
lea
je
ret
or
adc
ret
rcr
mov
push
insb
out
roll
and
shrb
testb
pusha
pop
test
jge
fcmovnbe
in
imul
mov
push
xchg
dec
pop
cmp
sbb
jae
mov
sahf
and
in
divl
mov
cmp
xlat
and
rcrb
mov
scas
loope
out
sub
enter
inc
sbb
int3
adc
adc
in
rcrl
push
cmpsl
rol
hlt
xor
cwtl
mov
jmp
xor
lcall
fnsave
jge
loop
pop
sti
ss
daa
push
cmpl
gs
add
cltd
fwait
movlps
mulb
jle
insl
je
imul
sbb
into
test
in
dec
test
and
inc
adc
jecxz
or
pop
enter
jb
dec
jns
add
jae
inc
addb
std
aaa
int3
shrb
mov
inc
add
pop
cs
push
and
mov
test
fdivrl
mov
addr16
push
fadds
xorb
jp
fwait
pop
aaa
jge
xchg
aam
mov
insb
fdivl
call
mov
xor
cli
in
sbb
cwtl
pop
add
inc
stos
mov
push
nop
bswap
rcr
testl
stc
and
adc
sti
test
ja
xchg
mov
mov
sub
ja
sbb
sahf
inc
inc
jne
into
pop
dec
add
inc
mov
lahf
xchg
cmp
sbb
xchg
int
out
movsb
jmp
hlt
cli
xchg
testl
inc
pop
sahf
cmp
dec
mov
lock
xchg
lods
out
jge
loope
int3
mov
lret
out
push
push
in
push
cmovo
xor
clc
push
nop
mov
adc
jnp
lahf
xchg
pop
mov
push
int3
xor
bound
jnp
mov
in
loopne
ret
push
adc
sub
push
movsl
shr
insl
lea
cltd
xor
or
out
sbb
dec
push
dec
push
daa
mov
aaa
mov
mov
push
push
sub
mov
jns
imul
scas
pushl
add
inc
test
rorb
dec
mov
lods
sub
lea
adc
roll
add
lea
lock
clc
ret
imul
mov
xor
jae
cmp
and
dec
cmpsl
lock
cmc
dec
jmp
sti
fwait
push
imul
clc
or
sbbb
pop
xor
sti
mov
add
or
inc
clc
jns
xlat
dec
fcomip
cmc
ret
scas
les
push
xchg
xor
gs
xchg
leave
jecxz
and
xchg
fwait
roll
adc
pop
cmp
in
push
sbb
mov
or
ss
gs
sub
js
hlt
xchg
inc
decl
andb
ja
push
and
out
insb
adc
repnz
sar
jle
push
sbb
jg
mov
jmp
dec
ret
je
roll
rorb
push
inc
outsb
shrl
mov
push
loop
jae
scas
mov
inc
mov
mov
mov
or
pop
add
scas
test
imul
sub
clc
sahf
cwtl
pop
mulb
movsb
and
mov
cli
mov
xchg
fs
pop
div
loope
cmp
lds
test
andl
adc
mov
pop
lods
xchg
jmp
shlb
sub
stos
sub
jg
test
movsb
push
out
jo
pop
fs
loopne
sahf
fldt
pushf
cmp
sbb
adc
inc
stc
push
cmp
and
aad
xor
outsl
jmp
mov
insl
mov
sub
aaa
mov
or
ds
sbb
add
cmp
aaa
mov
aad
and
rclb
orb
aas
inc
aad
mov
add
jno
cmp
loop
pop
out
lea
cmp
lahf
mov
and
mov
pop
popf
insl
iret
mov
cmpsl
mov
lcall
jno
jo
cwtl
jbe
adc
mov
xchg
das
inc
xorl
or
bnd
mov
sbb
jnp
push
cld
add
lods
and
rcl
mov
sbb
aam
outsl
push
mov
sub
test
scas
xlat
inc
pop
invd
mov
out
xor
add
xchg
scas
lods
dec
sbb
mov
scas
popa
daa
and
jecxz
add
mov
das
pop
call
bound
push
push
pop
xchg
and
stos
sub
and
dec
cmp
mov
outsb
or
inc
mov
lds
es
sbbl
test
inc
push
mov
rcrl
xchg
jl
inc
xor
lahf
sub
add
push
popa
xlat
es
mov
cmc
jo
pop
xchg
arpl
push
push
or
andb
adc
mov
mov
inc
lea
loopne
addr16
dec
cwtl
cmp
and
jecxz
push
aam
cli
add
or
cli
adc
inc
cmpsl
fs
popf
jae
arpl
sbb
nop
mov
lea
mov
jae
pop
jo
jmp
push
inc
jo
repz
roll
test
jno
pop
xor
mov
repz
xchg
out
int3
lcall
adc
roll
inc
push
jl
movsb
nop
inc
enter
push
sub
push
adc
lret
stos
icebp
xlat
pushf
xor
and
mov
lret
xchg
subb
pop
and
loop
sub
and
dec
popa
adc
sahf
iret
das
daa
lret
cmp
stos
inc
pop
jge
dec
loope
dec
adc
shrb
xchg
cmpsl
dec
leave
xlat
js
je
call
xrelease
sub
cmp
imul
inc
mov
sbb
pop
enter
mov
pop
sbb
sbb
xchg
incl
cld
or
loope
fsubrl
sub
insl
in
mov
lcall
std
lret
xor
out
fistl
lods
shll
xchg
outsb
sbb
mov
jl
stc
mov
aam
mov
imul
lret
xor
in
inc
inc
jno
mov
jg
je
jb
or
les
cmp
push
inc
push
dec
xchg
int3
cli
xor
hlt
movsb
adc
test
pushf
push
inc
js
fxch
into
mov
cmp
xor
jne
cld
mov
test
pop
call
lds
fs
jno
mov
mov
cs
and
lock
dec
sbb
mov
jne
repnz
jae
sub
sbb
in
jmp
adc
fwait
inc
aas
insl
addl
js
and
inc
enter
lret
xlat
push
cld
shl
addb
xor
cltd
jae
fimuls
lcall
cld
femms
enter
popa
fwait
inc
sbb
jp
dec
ss
aaa
jmp
stos
test
and
dec
je
ret
adc
out
shrl
mov
sbb
loopne
cs
push
adc
test
roll
mov
shl
loopne
mov
or
xchg
bswap
fiadds
pop
pop
mov
into
imul
inc
aam
addl
jmp
cmp
into
popa
mov
lcall
mov
fxch
popf
call
adc
mov
xchg
in
pop
inc
scas
cmpsb
lods
jae
pop
pop
cltd
mov
cmp
xchg
je
and
sti
rcll
jp
dec
fsubrl
fwait
adc
sub
rolb
test
sbb
test
pop
dec
shll
cmp
add
dec
ret
ds
arpl
in
mov
push
cmp
in
flds
fsubl
mov
mov
add
test
mov
cli
adc
mov
scas
movsl
cmpsl
stos
cmp
fsub
adc
ror
fistpl
lahf
ret
pop
dec
lret
hlt
or
and
dec
pop
lock
cmpsb
lods
mov
int
fistpl
lret
adc
xchg
xlat
push
addr16
fmuls
sbb
push
mov
sub
xchg
pop
sub
add
push
cwtl
mov
enter
mov
popa
and
or
dec
scas
cmp
mov
push
repz
sub
inc
sub
xchg
mov
arpl
mov
aaa
adc
sub
ret
jbe
hlt
cli
imul
push
adc
dec
dec
jne
lock
sub
adc
aas
or
mov
gs
adc
out
aaa
cmc
mov
bound
add
dec
fwait
sahf
pop
addb
adc
ficomps
lret
out
sbb
jge
mov
iret
ret
push
sbb
jl
out
inc
inc
xchg
cmp
sub
cwtl
hlt
cmp
sbb
dec
mov
mov
fidivs
xchg
jg
hlt
jno
pop
fwait
loopne
and
mov
scas
cmp
sbb
ja
neg
mov
push
push
mov
gs
push
ret
fsts
lds
mov
sbb
xlat
movsb
imul
add
addb
bound
lock
scas
mov
nop
inc
fwait
lea
test
dec
pop
mov
cmp
mov
sahf
push
add
push
dec
orl
leave
mov
test
xchg
and
ffree
out
or
add
movsb
inc
mov
xchg
ds
or
mov
jge
ss
out
cmpsb
fcmove
lea
jmp
or
or
movsb
fsubs
xchg
out
es
sbb
insb
outsl
push
and
repz
cli
out
test
cmp
cmc
test
jg
add
testl
pop
fld
imul
adc
inc
addr16
pop
jge
test
scas
aaa
mov
scas
pop
faddl
es
xor
pop
lods
es
push
pop
test
push
adc
js
scas
push
push
pop
adc
fstpt
push
mov
loop
sub
or
fsubs
jb
mov
test
cs
arpl
out
test
in
cld
gs
into
lods
pop
into
mov
leave
stos
jo
fprem
push
push
sbb
jno
xor
imul
sbb
rorl
shlb
test
fwait
jecxz
mov
xor
dec
add
xchg
cli
sbb
out
repnz
jns
cs
test
daa
cmc
aam
mov
or
jle
push
pop
jg
jns
mov
stos
or
dec
mov
ret
out
test
mov
jge
icebp
setg
imul
stc
adc
mov
in
lods
or
pop
mov
lock
pop
push
addr16
jle
orl
or
xor
add
mov
sti
popa
or
lock
or
fistl
out
inc
pop
mov
bound
dec
push
jg
pop
xor
lea
fmull
rorb
test
pop
lods
jb
push
add
sbb
jp
mov
mov
out
imul
jg
nop
out
fnstcw
incb
rcll
movsl
inc
test
std
xchg
les
movsl
mov
sbb
ds
xor
imul
cmc
jnp
movb
fs
cld
xor
or
scas
jle
pop
push
test
mov
ss
adc
push
and
sub
push
lock
fldt
sbb
sub
out
mov
int
in
jae
xchg
outsb
sbb
lahf
mov
scas
outsl
jb
lcall
das
cmp
stos
mov
mov
xor
push
inc
xchg
rcl
int3
stos
je
fs
inc
sbb
and
lds
jle
call
sarl
jne
xchg
mov
mov
jp
xchg
sub
out
lods
sbb
push
mov
mov
aam
sub
mov
jo
sub
mov
dec
jmp
and
push
lcall
iret
jbe
xlat
inc
mov
mov
pop
adc
mov
stc
movsb
pop
in
pushf
ljmp
jp
mov
sub
pop
cmp
jp
dec
sbbl
mov
inc
xor
aam
clc
nop
sbb
scas
cld
adc
aaa
sarb
ljmpw
fs
mov
xchg
xor
sub
sbb
jne
aas
jb
repnz
xor
retw
fwait
adc
daa
gs
xor
adc
fucomi
shrl
push
dec
xor
xor
test
xor
adcl
fistpl
ja
daa
std
add
subb
mov
inc
xor
add
lcall
iret
out
dec
test
adc
mov
sub
fadds
pushf
inc
clc
mov
push
sbb
inc
sub
sar
dec
enter
jne
jl
dec
xor
sbb
pusha
loope
cltd
adc
out
adc
mov
and
enter
outsb
jns
fbld
dec
and
mov
popa
mov
xchg
stc
outsl
mov
popa
fsubp
sbb
inc
mov
sub
aaa
negl
sbb
insb
push
inc
ret
push
xchg
pushf
test
sbb
dec
adc
inc
dec
ds
cs
sbb
xor
cmp
xchg
lret
daa
jno
jecxz
in
and
fdivrp
and
jle
lret
push
xchg
sub
cmp
in
int
cld
inc
fmull
dec
mov
jne
cmc
divl
out
mov
jne
and
jmp
out
lcall
fcompl
mov
outsb
sub
int
sbb
sahf
and
fsubrs
daa
add
push
cmp
scas
icebp
cmp
fst
imull
outsb
imull
movsl
out
sub
push
xchg
jge
jle
xchg
push
sub
shlb
loopne
mov
xchg
cs
out
jno
sar
xor
push
sbb
dec
test
xchg
mull
inc
shr
or
or
stc
xchg
adc
fcmovnbe
lret
mov
push
enter
cmpsl
and
or
rolb
add
pop
movsb
fistl
adc
aad
cmp
push
lcall
xor
stos
je
push
sbb
outsb
loope
mov
cmp
xor
ret
cmp
imul
imul
in
faddp
xchg
mov
mov
add
out
out
xor
mov
inc
add
xchg
jbe
lds
jle
leave
inc
dec
lahf
rcl
stos
xchg
sti
push
inc
push
jle
data16
cltd
fs
inc
sub
adc
cmp
outsl
xchg
repnz
or
das
bound
dec
fsubrl
enter
test
pop
jecxz
xor
test
in
scas
gs
dec
jg
ljmp
adc
push
mov
jl
cmp
loopne
jmp
int
inc
mov
or
ror
sbb
les
orb
cmp
xchg
jo
xchg
mov
mov
xchg
add
jo
rcrb
or
dec
xchg
mov
xchg
add
push
stos
sahf
outsl
xor
xchg
sub
int
inc
fs
add
andl
or
sub
icebp
gs
jo
dec
xchg
divb
and
mov
xor
cmpsb
imul
jle
sbb
out
lcall
addr16
adc
push
xor
lret
std
cmp
mov
cli
adc
ljmp
mov
push
cmp
int
dec
pop
cwtl
mov
out
adc
xor
fldcw
stos
insl
adc
jg
xchg
jns
pop
mov
mov
ret
sbb
mov
testb
ret
or
sub
stc
shrl
out
popf
sbb
xchg
mov
mov
loopne
push
lcall
cmp
xor
xchg
xchg
lahf
jmp
xor
xor
mov
jns
dec
shl
mov
sub
je
lret
push
add
xchg
dec
hlt
jb
cmpsb
les
data16
sub
pop
js
out
inc
popa
cmpsl
jo
push
fsubr
aas
in
outsl
pop
loope
mov
xchg
int
push
mov
sbb
cmc
ret
xchg
mov
xchg
cmc
popa
lahf
pusha
pop
dec
inc
xlat
adc
xchg
jnp
push
decl
adc
push
lahf
lret
ja
test
jecxz
rolb
lods
cmc
cmpsl
jns
or
lahf
jle
sbb
addb
mov
jne
inc
push
mov
gs
adc
sub
mov
sub
mov
cwtl
loop
xor
cmp
sti
inc
movsl
push
ret
outsb
sub
ret
les
push
cwtl
out
cmpsb
leave
mov
dec
push
out
cs
popa
bound
inc
and
sub
mov
fisttps
mov
stos
dec
jge
aam
and
pop
icebp
mov
clc
rclb
xchg
stc
es
push
data16
cs
fmuls
jbe
sub
push
shll
aad
scas
dec
mov
adc
out
jg
or
inc
lcall
xchg
and
call
icebp
adc
sub
repnz
pop
cmpsl
inc
es
cs
sub
push
push
push
xchg
cwtl
push
sbb
in
hlt
sarb
inc
ret
push
jecxz
sbb
hlt
cmp
sub
repnz
mov
movsl
inc
dec
lock
inc
aad
outsl
dec
jmp
leave
xchg
clc
mov
cmc
cmovl
pop
inc
pop
inc
mov
fwait
jecxz
xor
sub
pushf
dec
pop
enter
in
mov
add
lret
imull
fiaddl
data16
scas
jle
add
int3
fwait
dec
pusha
dec
cmp
mov
imul
add
push
push
aad
dec
mov
jge
inc
incb
xlat
in
mov
jle
stc
sub
lret
call
roll
adc
jo
mov
and
enter
insb
mov
push
scas
pmullw
lods
fbstp
inc
lods
enter
xchg
cmpsl
jmp
lret
or
stc
jge
ret
pop
push
pusha
pop
cld
std
outsl
int
cltd
xchg
mov
icebp
or
loope
les
in
rcll
repz
dec
sarb
or
sbb
xchg
jae
ss
sbb
sub
add
add
cmp
out
push
sub
jne
xchg
inc
add
hlt
pop
les
xor
das
push
test
dec
cmp
push
test
xchg
in
in
dec
imull
bound
insb
sbb
lods
js
pop
js
rcll
js
pusha
sbb
adc
fisubs
and
lods
and
hlt
inc
xchg
mov
leave
mov
ja
fcoms
in
push
divl
xor
imul
add
push
pop
stos
and
jno
push
jl
test
pop
mov
out
icebp
mov
out
loop
add
lcall
and
addr16
adc
adc
sub
mov
das
popf
sahf
sahf
bound
and
dec
mov
fucomip
sbb
xchg
out
jb
push
sub
stos
push
sbb
mov
xor
sti
adc
iret
cmovl
imull
jns
pop
aas
data16
sub
cli
sbb
dec
jmp
jecxz
add
add
add
inc
xchg
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
dec
mov
add
