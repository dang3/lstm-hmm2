jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
xchg
movb
push
mov
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
fcompl
adc
inc
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
push
xchg
inc
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
fsts
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
jno
inc
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
ffreep
inc
add
add
add
add
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
xchg
inc
add
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
and
fidivs
push
or
adc
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
test
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
adc
pop
and
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
cmpsl
inc
add
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
mov
inc
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
call
mov
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
push
mov
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
stos
lahf
inc
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
xchg
inc
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
test
add
mov
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
popa
xchg
inc
add
add
test
or
test
dec
and
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
into
lods
inc
add
push
and
mov
movl
movl
movb
cmpsl
inc
add
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
inc
add
imul
add
test
xchg
rorl
out
into
add
test
aad
push
lea
lret
add
push
add
push
frstor
jecxz
sti
addl
add
add
add
add
jbe
cmc
lret
mov
add
push
add
add
out
push
xchg
jge
xchg
lcall
add
add
imul
leave
xchg
push
roll
xchg
mov
add
pop
lds
add
add
add
xlat
fildl
add
mov
add
test
iret
outsl
add
add
ret
add
call
cld
mov
add
push
idiv
loope
aad
add
mov
add
add
mov
add
add
mov
mov
test
loopne
mov
add
sub
jp
jno
jb
add
icebp
pop
hlt
add
add
loop
movsl
jl
add
cld
into
xlat
mov
jb
mov
add
xchg
insb
add
pop
lahf
push
jle
add
add
add
add
mov
add
add
add
mov
mov
test
jle
iret
icebp
cwtl
add
lret
addb
add
pop
add
add
add
loopne
sti
push
cmpsb
fadds
js
lcall
or
movl
push
push
push
push
push
call
add
push
push
fcomip
add
hlt
mov
add
add
je
fadds
lret
push
fnstsw
or
iret
enter
add
xchg
add
rol
bound
add
mov
subb
stos
lods
add
add
add
mov
mov
cld
add
lock
lea
pop
popl
push
push
lea
push
push
call
add
in
stc
add
add
fidivl
pop
push
add
add
add
add
add
icebp
mov
idivb
stos
add
add
add
mov
push
xlat
cmpsl
add
mov
je
add
ret
add
jnp
mov
fsubl
jecxz
add
add
mov
loop
subl
mov
lea
pop
push
push
push
push
push
push
push
push
push
call
out
cmpsb
add
sti
add
pop
cwtl
leave
add
add
add
adcb
add
mov
pop
push
add
cmpsb
add
ror
add
mov
loop
pop
add
in
mov
mov
add
insb
insb
ljmp
mov
outsl
fstp
ljmp
mov
add
add
sbb
push
push
call
push
push
call
mov
mov
add
add
add
add
push
add
add
jecxz
xorb
add
out
mov
outsl
enter
bound
xchg
cmc
add
mov
add
outsl
rolb
arpl
mov
andb
add
xchg
mov
mov
add
add
add
rcr
sahf
add
jne
add
pop
add
xchg
fmull
pop
call
push
push
push
push
call
push
fs
lcall
add
xchg
add
stos
data16
add
cli
lcall
aad
or
add
jmp
mov
lahf
mov
jmp
roll
pop
add
outsl
jnp
xchg
pop
aam
add
add
mov
push
add
insb
pop
jno
add
mov
add
movsl
add
add
xchg
jl
add
fnsave
int3
into
test
pop
call
push
lea
push
push
call
pushf
filds
add
pop
add
addb
add
mov
test
add
out
shl
lock
lods
ficoms
out
test
add
hlt
aad
add
add
add
add
add
add
jns
add
pop
lds
pop
add
add
ja
xchg
roll
add
xor
add
jle
in
jmp
mov
xchg
add
add
add
mov
lea
pop
jmp
push
push
push
push
push
push
lea
push
push
push
push
call
fildl
pushf
cltd
xchg
out
add
popf
push
repnz
fs
add
cltd
add
repnz
testl
mov
sti
ja
jp
add
sahf
mov
add
popa
addr16
in
movl
mov
mov
subl
xchg
add
add
add
add
imul
ljmp
add
add
pop
ret
push
lea
push
push
push
push
push
push
call
addl
jae
in
add
add
mov
test
add
mov
add
add
ja
faddl
add
add
loope
add
add
mov
add
mov
arpl
push
xchg
add
lahf
jl
test
mov
add
add
jns
rcrb
add
jns
push
sarl
lods
orb
icebp
mov
mov
xchg
jmp
add
pusha
sbb
mov
mov
add
push
push
lea
push
push
push
push
push
push
call
loop
push
icebp
xlat
sarb
into
add
add
cltd
loopne
add
add
int3
lret
mov
add
in
add
add
xchg
add
add
add
into
push
add
add
cmc
push
push
pusha
cld
in
imul
add
subl
add
fsts
pop
mov
lea
pop
add
add
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
fldl
movsl
flds
hlt
push
add
les
testb
stos
add
pop
lods
mov
in
in
call
add
into
add
test
jno
add
mov
in
cmpsl
out
add
jbe
shl
aam
mov
add
add
repnz
jmp
bound
add
aad
cli
add
std
mov
aad
add
int3
jb
aam
bound
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
jge
cmpsb
lret
push
add
test
push
movsl
pop
stos
add
ficomps
fistpl
lods
sahf
shlb
add
popf
sahf
outsl
cmpsl
add
add
aam
add
jb
popf
mov
push
stos
mov
mov
loop
movsl
jo
lods
ljmp
cmpsb
lods
add
std
mov
mov
je
pusha
jb
add
and
add
push
push
push
lea
push
push
lea
push
lea
push
call
aad
add
pop
jmp
add
add
jle
pop
hlt
fadds
outsl
iret
xchg
push
add
repnz
mov
mov
mov
mov
pop
into
mov
mov
bound
lret
add
out
pop
xchg
les
int
loop
fldl
mov
mov
add
fwait
add
pusha
sbb
add
push
push
push
push
call
bound
add
add
mov
je
out
push
ljmp
pop
cmpsl
add
fs
xchg
test
jae
imul
add
add
add
cmpsb
add
mov
mov
in
add
je
jmp
incb
add
in
mov
out
add
pop
xchg
xlat
add
sti
add
add
cmpsb
repnz
cmc
and
rorb
add
push
push
push
push
push
lea
push
lea
push
lea
push
call
movsl
pusha
xchg
cld
sahf
pop
add
add
add
mov
mov
add
push
movsl
add
add
add
push
fsub
xchg
out
add
add
add
add
lods
in
add
sti
fdivrs
add
add
idivb
mov
cmpb
xchg
add
add
add
arpl
in
int3
add
arpl
pop
call
push
push
push
push
lea
push
lea
push
push
push
push
push
call
jnp
add
add
rolb
sub
add
mov
add
lea
add
add
addl
shr
add
push
add
mov
sahf
test
pop
add
add
add
popa
fsubrl
add
add
movsb
lock
lods
mov
add
mov
xchg
jae
pop
add
int3
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
push
xchg
cld
lret
test
mov
lds
sahf
stos
ljmp
out
loopne
jo
add
add
add
add
out
lock
add
mov
add
add
pusha
outsl
add
add
movb
lret
add
arpl
mov
add
mov
iret
add
and
xor
push
lea
push
push
push
lea
push
call
add
data16
fwait
add
push
xchg
movsb
loopne
hlt
add
push
add
movl
add
pop
mov
mov
jge
addr16
lret
cmpsl
add
mov
add
add
out
rcr
mov
add
add
add
add
add
scas
imul
add
call
call
mov
lea
pop
add
push
push
inc
push
or
not
add
add
add
sub
inc
sub
pop
not
inc
shr
pop
push
push
lea
push
push
push
push
push
call
jecxz
add
add
lods
int
add
stos
add
xlat
pop
add
mov
mov
add
add
add
add
add
or
nop
add
mov
fildll
add
add
jns
add
push
mov
lods
outsl
mov
add
jecxz
add
add
xlat
ljmp
lea
pop
pushl
push
lea
push
push
push
push
push
push
push
push
push
call
add
mov
out
jp
shlb
add
add
icebp
add
loope
scas
stos
add
add
pop
add
shl
mov
test
xchg
push
add
add
push
add
add
add
pop
popf
imull
mov
enter
std
push
xchg
add
add
mov
lea
pop
call
mov
movl
push
push
push
push
push
lea
push
push
push
call
mov
add
lahf
loop
add
add
add
mov
push
cld
in
lret
add
pop
cmpsl
lods
popl
popa
add
jge
mov
mov
add
pop
test
mov
add
add
cld
in
xchg
pop
push
add
bound
scas
xchg
jge
add
leave
leave
jb
jb
add
pop
test
mov
lea
pop
lea
push
push
push
call
jmp
xchg
popf
fiadds
flds
add
aam
test
arpl
push
cwtl
mov
call
add
mov
ficompl
mov
add
mov
add
insb
add
xchg
add
mov
jo
rcr
lcall
push
add
in
mov
add
lock
add
shr
mov
lea
pop
push
pushl
push
push
lea
push
push
push
push
push
call
rcr
cmp
scas
shl
mov
mov
xchg
test
std
jo
ficomps
scas
add
sbb
addl
outsl
add
pop
add
add
jb
lods
add
add
jb
int3
mov
mov
cltd
stos
nop
add
mov
add
push
add
test
out
add
add
in
add
pop
pushl
call
pushl
push
push
call
nop
add
add
xchg
cwtl
movsb
cmc
rolb
add
add
call
add
addb
je
test
scas
add
pushf
fcmovnu
shlb
stos
mov
add
add
jb
jae
push
add
jno
cmp
out
add
add
scas
fadd
lods
popa
add
sahf
add
rorl
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
call
add
add
jmp
jecxz
add
push
add
fldl
add
je
add
mov
add
in
adcb
add
mov
add
jb
sti
jns
pop
add
enter
popf
add
into
lret
sti
jmp
xchg
movb
add
nop
xorb
add
popf
je
mov
ja
add
mov
lea
pop
call
push
push
add
shl
rol
push
and
add
dec
inc
sub
add
not
pop
rol
inc
pop
push
push
lea
push
push
call
pop
in
mov
add
scas
add
mov
xchg
lahf
xchg
fisubrs
mov
in
shll
roll
fs
add
add
cwtl
add
arpl
add
mov
xchg
mov
fildl
push
addl
add
xchg
add
jae
add
pop
pushl
call
push
push
call
js
add
add
out
loope
out
adcb
push
add
add
sti
nop
add
testl
movsl
idivb
fdivs
jp
xchg
lahf
add
add
int3
testb
lea
mov
stc
add
add
out
lret
pop
out
cmp
sahf
pop
add
add
add
out
pusha
add
jne
cld
lea
pop
push
push
push
shl
not
dec
add
push
and
add
add
sub
sub
shr
pop
inc
pop
push
push
push
call
xchg
mov
out
movsl
lods
fs
push
addl
pop
push
add
js
cltd
pusha
add
lret
add
imul
mov
cwtl
mov
add
bound
in
in
add
aam
pop
nop
add
out
pop
in
sbb
cltd
gs
jge
add
mov
scas
add
imul
push
push
call
push
push
push
call
add
ja
scas
flds
cmpsb
push
jge
out
add
add
lods
cmpsb
jo
icebp
mov
pop
mov
leave
add
push
out
xchg
insb
add
add
out
enter
add
mov
add
jmp
addl
data16
cmpsb
into
std
push
cmpsl
jns
pop
add
add
mov
xchg
xchg
add
add
add
xchg
shll
push
add
jno
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
push
call
pushf
push
add
jo
aam
into
add
cwtl
out
add
mov
je
bound
add
add
sti
add
push
in
add
call
jmp
cli
add
xchg
add
mov
add
push
out
xchg
scas
cli
add
fistpll
add
add
test
outsl
add
add
add
add
add
mov
arpl
pop
push
push
mov
push
push
lea
push
lea
push
push
call
push
lods
out
xchg
add
shl
add
pop
add
loop
pop
lea
add
lods
add
mov
add
xchg
mov
add
add
add
fidivrs
add
cmpsl
pop
fiadds
push
add
push
mov
out
pop
add
fmull
pop
in
ret
add
add
add
push
push
push
push
push
push
push
lea
push
call
add
add
lds
add
call
add
jns
jle
incb
test
add
mov
push
xchg
int
mov
add
rcl
pop
add
add
add
add
pop
mov
xchg
bound
stos
jo
popa
mov
pushf
imul
mov
lea
pop
mov
push
push
push
push
push
lea
push
call
popa
jae
lock
lock
fadds
add
push
add
jno
mov
testl
out
pop
jno
add
mov
add
add
add
add
jp
repnz
jno
stos
mov
enter
jge
add
push
add
mov
out
int
andl
add
int3
jge
add
add
mov
lea
pop
xor
push
push
push
lea
push
push
call
lock
mov
in
mov
mov
xchg
fwait
add
add
mov
jae
repnz
add
xchg
jecxz
scas
xchg
add
push
pop
add
movl
shll
add
push
jl
jp
lcall
add
jbe
add
jno
stos
pop
clc
cmpsb
mov
lea
pop
add
push
push
push
push
push
call
add
add
add
mov
add
add
mov
add
pop
lods
into
mov
pop
add
cmpsb
add
std
cwtl
in
jge
mov
int
mov
jo
in
les
add
add
add
hlt
push
add
add
insb
pushf
add
movsb
add
mov
add
adc
add
push
lea
push
push
call
add
add
add
add
out
add
outsl
pop
add
iret
add
add
pop
cmp
add
jmp
jnp
lret
outsl
stos
pop
xchg
cmpsb
pop
jne
testl
fldl
mov
add
xchg
stos
push
push
jnp
ja
ja
pop
push
addb
add
rolb
add
mov
ja
add
rorl
pop
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
mov
cmpsb
add
cmpb
add
add
sahf
mov
fwait
add
les
test
jmp
add
add
lcall
add
mov
cld
cwtl
add
pop
jae
xchg
fmuls
loop
out
nop
add
mov
jecxz
in
add
add
add
mov
repnz
mov
lea
pop
mov
push
push
push
push
push
push
call
add
fs
xlat
std
mov
lcall
mov
stos
add
out
add
add
scas
into
add
jnp
vminsd
movsl
mov
mov
outsl
add
add
mov
add
jle
add
add
fwait
nop
imul
test
sti
add
jmp
mov
pusha
mov
les
add
scas
mov
bound
xor
push
push
call
jne
add
xchg
add
pop
add
add
movb
loopne
mov
add
add
movsl
aad
int
mov
sahf
mov
push
mov
add
add
xchg
mov
out
fsubl
xchg
mov
cwtl
in
add
mov
add
jmp
add
rclb
add
add
add
sti
lea
pop
add
push
push
push
call
add
add
push
roll
fidivrl
mov
leave
add
faddl
nop
mov
add
lret
add
add
add
loope
add
add
pop
pushf
add
loop
add
xchg
jge
jo
push
add
fsubs
pop
mov
add
cld
add
pusha
add
stos
cwtl
mov
stos
mov
mov
lea
pop
add
pop
push
push
call
movsl
pop
add
add
mov
sahf
add
jnp
push
movsb
enter
add
mov
add
mov
add
add
stos
mov
mov
fadds
in
mov
in
call
mov
addr16
lds
repnz
add
rcr
std
cli
ret
mov
cltd
les
add
pop
pop
mov
testl
push
push
lea
push
push
push
push
push
push
push
push
call
jns
jmp
jl
js
push
add
cmpsl
add
movsl
xchg
data16
push
je
test
add
test
ficoml
xchg
add
fdivr
push
pop
int
add
clc
call
add
add
shll
jp
nop
add
add
add
fwait
nop
out
add
pop
add
add
xchg
movsl
xchg
pop
nop
add
cmpsl
xchg
cwtl
add
icebp
into
mov
pusha
and
xor
push
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
fcoms
add
pop
cmpsl
add
add
mov
add
add
add
mov
roll
fldl
add
shlb
in
mov
aad
xchg
icebp
mov
xorl
add
add
lea
fwait
add
scas
add
add
mov
hlt
pusha
cld
add
loopne
ret
movsb
add
add
lahf
add
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
call
add
pop
sti
in
jle
add
add
ficomps
pop
add
out
rolb
add
cmc
jecxz
rolb
lret
test
add
push
pop
add
add
jle
bound
outsl
add
jmp
add
add
add
in
loop
mov
jno
add
add
lock
rorb
pop
push
push
push
push
push
lea
push
push
push
push
push
call
jmp
lcall
mov
add
pop
enter
adcb
add
loope
push
add
add
aam
add
subl
faddl
lret
push
add
jmp
add
push
add
jle
data16
repnz
mov
push
pop
add
fnstsw
cld
aad
mov
popl
mov
add
push
jl
add
mov
and
mov
xor
push
push
push
lea
push
lea
push
call
movsl
push
xchg
je
je
mov
add
fsts
loop
mov
stos
cli
add
clc
add
jge
cwtl
mov
jae
in
outsl
add
test
jne
pop
bound
jno
addl
xchg
mov
imul
add
test
mov
test
jle
mov
lea
pop
sub
pop
rep
push
push
push
push
push
push
call
add
pop
jns
mov
scas
mov
add
mov
mov
add
add
lods
mov
add
fucomi
add
add
add
add
add
loop
jo
add
mov
shlb
add
mov
add
xlat
add
popa
xchg
mov
xchg
add
cmc
call
movsb
add
bound
fsts
cld
in
icebp
add
add
shlb
lcall
int
mov
lea
pop
pop
push
lea
push
push
push
push
push
lea
push
call
push
xchg
pop
clc
fcmovu
add
test
fiadds
add
add
jb
mov
add
mov
jo
cli
add
push
mov
add
add
roll
pusha
add
add
pop
jb
add
mov
push
add
int3
mov
mov
int
mov
push
test
add
add
add
rclb
loopne
jno
arpl
out
add
add
test
ficompl
les
pop
in
push
lea
push
push
call
add
js
scas
add
add
loope
mov
xchg
add
loopne
pop
mov
add
call
add
add
jmp
mov
test
add
mov
add
popa
cwtl
add
xchg
mov
add
lret
jne
add
sti
jo
cmc
fildl
les
in
add
lahf
add
mov
add
mov
mov
les
pop
in
shl
ror
sub
pop
add
add
mov
xor
push
lea
push
push
push
call
pop
push
bound
mov
mov
add
lods
push
add
jo
lret
loope
add
add
enter
add
mov
pop
filds
add
scas
mov
xchg
scas
stos
out
add
add
pop
add
mov
shll
mov
jne
stos
jnp
arpl
mov
in
fmull
push
cmp
movsb
shll
test
fadds
add
add
int3
add
iret
add
lret
add
add
jo
lods
add
ja
cli
jnp
jbe
add
add
call
loop
add
pop
add
jnp
jb
add
add
add
add
lea
add
add
pop
out
add
les
adc
push
push
push
push
call
into
mov
add
mov
jp
test
fsubs
rcr
add
add
add
scas
pop
add
mov
cld
xchg
out
idiv
mov
xchg
ret
rcll
out
je
add
mov
add
add
aam
add
add
add
cmpsb
add
pop
adcb
mov
int3
cwtl
rorb
pop
add
push
push
push
push
lea
push
lea
push
push
lea
push
call
xchg
xchg
add
add
add
add
pop
xchg
std
push
add
xchg
bound
add
mov
add
add
cltd
nop
add
loopne
mov
cmpsb
mov
jbe
lods
mov
ret
cld
jecxz
add
cli
add
negl
in
jno
fwait
nop
add
add
add
shll
add
mov
lea
pop
mov
xor
push
push
lea
push
lea
push
lea
push
lea
push
call
add
scas
add
add
jl
pop
add
add
add
lea
leave
add
add
hlt
add
mov
add
add
in
cmpsl
mov
add
add
add
add
ret
add
pop
add
add
add
loop
xchg
pop
repnz
lret
fldcw
data16
mov
pop
mov
lea
pop
add
push
shl
not
ror
lea
pop
add
push
add
pop
mov
push
push
lea
lea
add
push
or
inc
add
shr
sub
dec
sub
inc
pop
add
add
pop
push
rol
add
pop
pushl
push
xor
add
shl
not
pop
call
push
push
push
add
push
and
add
rol
rol
not
sub
pop
rol
pop
push
push
push
push
push
push
call
xchg
into
xchg
movsb
add
iret
xchg
add
add
xchg
clc
lds
add
sbbl
aad
pop
leave
add
js
cld
mov
mov
push
add
add
add
add
mov
jns
jns
mov
fiadds
mov
mov
int
shl
add
flds
jp
jno
popf
add
jbe
mov
jo
in
stos
add
mov
lea
pop
push
push
pop
push
push
push
push
push
lea
push
call
movsl
add
jmp
add
fstpl
lock
stos
mov
add
outsl
roll
movl
mov
out
push
fildl
add
sahf
push
add
mov
add
add
ljmp
mov
add
add
out
push
add
add
mov
add
mov
test
add
jmp
add
in
jmp
add
add
int3
lea
pop
call
push
lea
push
push
push
call
in
mov
mov
leave
add
stc
testb
xlat
xlat
add
push
add
ja
leave
add
mov
add
mov
pop
mov
nop
push
lahf
mov
clc
xchg
mov
mov
in
movsb
mov
add
add
add
add
cltd
roll
test
add
popa
add
mov
cli
in
add
cmp
mov
mov
add
bound
pop
mov
push
pop
push
push
dec
shl
add
pop
push
push
push
call
xchg
add
add
add
xchg
movsl
roll
add
fmul
pop
lret
add
xchg
movsl
mov
sti
clc
stc
add
pop
jae
in
sahf
cwtl
les
add
aam
add
add
shr
lea
pushf
rcrl
push
add
jne
push
rcll
push
imul
cmpsb
mov
fsts
add
add
add
out
rolb
add
lea
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
xchg
lock
add
add
fadds
mov
imul
push
mov
add
test
fdivl
xchg
sar
add
test
xchg
cmpsl
lods
hlt
add
test
movsb
jne
add
add
add
out
add
add
imul
idivb
les
pop
in
ret
add
add
add
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
stos
scas
cld
cmc
stos
cli
jo
add
add
add
add
jno
add
mov
out
pop
fwait
add
mov
arpl
mov
mov
test
mov
loopne
loop
add
add
mov
push
add
add
movsl
push
scas
inc
loope
int3
lea
pop
mov
xor
push
lea
push
push
push
call
data16
add
add
cltd
mov
add
add
mov
add
add
stc
add
add
jmp
add
add
fisubl
mov
add
mov
lahf
incb
add
fsubrl
add
fisttps
add
add
add
add
fistpl
aam
bound
pop
add
push
mov
xor
push
ror
lea
add
pop
add
pop
push
sub
rol
pop
mov
xor
push
not
sub
pop
rep
mov
xor
push
push
push
call
lods
testl
add
sti
iret
jae
sti
jae
icebp
cmc
add
add
add
add
add
loopne
xlat
nop
ficomps
hlt
add
lods
add
push
faddl
add
clc
add
mov
loopne
xchg
mov
add
cmpsb
add
lahf
add
mov
jae
jmp
xchg
mov
lea
pop
or
je
push
lea
push
lea
push
push
push
push
lea
push
push
call
int3
scas
in
add
xorb
add
xchg
mul
mov
lret
pop
fnstcw
add
xchg
jbe
cmpsb
add
into
mov
add
add
ror
in
add
add
add
popa
fnstcw
add
into
add
add
jmp
add
filds
add
add
jne
cli
stos
lcall
push
xchg
mov
std
add
roll
loopne
mov
lea
pop
mov
xor
mov
xor
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
call
add
pop
jno
mov
pop
test
push
int
icebp
mov
test
add
mov
add
add
xchg
stos
add
gs
movsb
push
lahf
add
add
add
add
mov
mov
movsb
add
xchg
add
clc
add
add
aad
movl
mov
add
jle
jle
mull
cld
lea
pop
add
push
xor
xor
inc
pop
add
push
mov
xor
push
dec
ror
sub
sub
pop
add
pop
rep
push
push
push
push
push
call
add
mov
add
add
out
add
bound
add
ret
add
add
movsl
mov
mov
add
in
add
add
xchg
mov
pop
test
push
add
mov
mov
shr
add
add
fwait
add
ljmp
add
add
addr16
add
mov
lea
pop
mov
xor
or
je
push
ror
add
shr
pop
mov
push
shr
xor
lea
pop
add
add
push
not
pop
rep
pop
push
push
not
push
or
not
add
dec
ror
sub
sub
sub
inc
pop
add
lea
pop
push
push
call
add
iret
add
aad
mov
rolb
add
mov
rolb
mov
sti
add
loope
fistl
fwait
add
mov
add
cld
jno
add
xchg
add
add
pop
pop
testb
jne
mov
lods
stc
push
mov
jb
mov
scas
insb
add
mov
add
mov
lea
pop
pop
mov
push
add
rol
shl
pop
mov
push
pop
mov
jmp
push
xor
pop
push
push
shr
ror
pop
mov
add
push
push
xor
pop
push
push
push
dec
not
pop
push
push
push
push
push
lea
push
lea
push
call
enter
push
add
idivb
mov
mov
mov
cltd
jae
xchg
add
mov
jp
mov
lahf
mov
add
add
jge
pushf
mov
jns
add
into
mov
add
xchg
jl
fadds
addr16
cmpsb
add
add
enter
jecxz
add
add
jle
add
pop
add
mov
lea
pop
mov
push
add
pop
pop
push
lea
not
shl
rol
pop
pop
push
xor
pop
pop
pop
leave
push
lea
shl
pop
ret
push
mov
push
push
lea
push
call
add
xchg
jecxz
cmc
xchg
loopne
add
mov
cli
mov
divb
add
popa
mov
xchg
add
lea
lahf
mov
cmpsl
fiaddl
add
fldl
add
add
xchg
mov
add
xchg
jns
lea
push
add
add
add
mov
pop
add
mov
incb
popf
add
movl
or
add
push
push
push
call
add
mov
mov
add
int3
push
lds
add
add
imul
mov
add
movsl
mov
add
mov
fidivl
add
xchg
add
orb
add
xlat
sahf
popf
je
lea
lret
push
std
add
in
popl
add
jp
mov
add
mov
mov
std
arpl
aam
bound
push
push
shl
shr
pop
push
push
add
shl
pop
push
push
pop
push
push
push
push
push
call
add
push
add
call
add
add
jmp
push
add
fistpl
xlat
std
xchg
outsl
add
shlb
add
mov
push
add
out
in
add
add
hlt
test
add
add
ret
stos
lods
cmc
call
add
cmpsl
mov
add
add
add
cmpsb
add
add
lods
xchg
add
aam
bound
pop
movl
addl
push
push
lea
push
push
lea
push
push
push
lea
push
call
loopne
add
jp
fadds
cwtl
lds
add
into
imul
add
fidivs
nop
add
jecxz
add
jnp
add
add
add
add
add
add
not
mov
add
loop
lcall
jbe
add
add
popa
mov
add
push
add
imulb
movl
and
rorb
push
add
add
rcrb
mov
push
inc
not
dec
pop
pop
pop
push
lea
pop
pop
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
test
jo
movsb
mov
fwait
outsl
jae
fiaddl
fs
sahf
loop
ffreep
add
add
leave
jp
lret
insb
add
push
push
test
add
jle
movsl
mov
arpl
add
jo
add
add
movb
add
add
popf
pusha
enter
mov
std
mov
mov
add
bound
xchg
mov
add
jae
lods
add
add
add
pop
leave
ret
push
xor
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
loopne
mov
leave
add
loop
lcall
add
lahf
loopne
add
add
ljmp
add
sarb
add
add
ret
popa
imul
push
add
add
add
cld
push
xchg
add
mov
hlt
add
push
lods
aam
fwait
add
add
lods
add
cltd
mov
lea
pop
mov
push
shr
pop
add
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
lods
add
sti
int
add
add
jecxz
add
add
jge
push
fcmovnu
add
iret
loope
les
add
mov
repnz
fsub
mov
mov
pop
pop
into
lods
test
add
movsl
in
mov
nop
flds
add
filds
int
add
add
add
movsb
jo
les
jl
out
add
mov
lea
pop
push
push
ror
pop
push
push
push
add
shl
pop
testl
addl
push
not
not
pop
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
mov
add
add
add
fcmovnb
cli
add
xchg
in
out
pusha
jns
jge
add
add
mov
fiaddl
bound
cmc
gs
add
add
add
popf
lods
icebp
add
add
add
add
sub
mov
push
mov
lea
pop
call
mov
push
ror
pop
pushl
push
push
sub
pop
push
push
add
pop
call
push
push
push
lea
push
call
mov
add
add
xchg
fiadds
jne
jmp
add
movsb
enter
add
add
xchg
jne
int
shlb
enter
jns
pop
scas
cli
repnz
lods
add
add
xchg
popa
jb
fwait
add
add
add
add
add
xchg
add
lret
cmpb
ficompl
add
aam
xchg
mov
lea
pop
cmpl
jne
push
sub
not
dec
pop
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
pop
rolb
jp
add
test
add
mov
mov
mov
fiaddl
add
jecxz
mov
add
add
add
jns
add
mov
fs
add
xchg
stos
out
icebp
add
out
add
push
leave
jno
add
add
mov
scas
add
cmpsl
incb
fstps
add
add
add
mov
into
je
movsb
xchg
add
mov
lea
pop
pop
pop
push
pop
leave
push
push
push
push
push
call
xlat
shll
icebp
xchg
add
push
add
adcl
pusha
push
filds
stos
js
add
add
add
mov
xchg
mov
add
in
add
pusha
add
addl
add
shll
faddl
lds
mov
stos
imul
add
pop
ret
push
push
lea
pop
mov
add
push
add
not
add
pop
push
push
sub
rol
not
add
pop
push
push
lea
shr
pop
push
push
sub
ror
rol
pop
push
push
push
lea
push
push
call
cmc
jge
jge
js
jne
out
stc
add
sti
cltd
add
add
xchg
add
rorl
add
imul
popf
mov
repnz
mov
clc
negl
in
lea
add
push
add
in
lcall
jle
add
xchg
roll
lods
jmp
push
les
lods
jo
pop
add
add
adc
inc
cld
add
add
aad
call
push
push
sub
pop
call
subl
push
lea
push
lea
push
lea
push
call
add
add
mov
std
jmp
loopne
add
pusha
mov
ret
popf
xchg
jle
push
mov
nop
jne
add
test
add
insb
gs
lds
fs
add
cmc
popf
push
add
xorl
std
add
add
add
add
xlat
push
addl
mov
out
add
add
sbb
add
pop
mov
lea
pop
cmpl
jne
push
dec
sub
pop
pop
pop
push
ror
add
dec
pop
pop
pop
leave
push
push
push
push
push
push
lea
push
lea
push
call
out
mov
add
add
add
out
add
add
pop
xor
jo
fadd
notb
lahf
frstor
out
jne
stc
nop
int3
push
add
add
add
imul
mov
jo
sahf
add
mov
add
cltd
mov
js
jne
lcall
pop
mov
loopne
shl
pop
pusha
flds
enter
add
std
add
cltd
push
fisubrs
mov
lea
pop
ret
push
mov
push
xor
pop
add
push
push
push
push
push
lea
push
push
push
push
push
lea
push
call
push
add
mov
add
add
add
lods
movl
mov
bound
lret
icebp
stc
fists
orl
add
popa
add
mov
leave
add
shlb
jp
add
stos
jno
xchg
mov
add
out
mov
lds
imul
add
add
out
add
push
jns
add
testl
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
push
push
call
in
loop
test
lret
pop
xchg
add
subb
push
xlat
cltd
add
jno
gs
add
mov
shl
add
add
add
into
stc
cli
add
add
addr16
add
arpl
movsl
add
add
mov
push
shr
insb
out
mov
mov
mov
mov
add
mov
lret
add
out
xchg
stos
mov
push
stos
add
mov
lea
pop
mov
lea
sub
push
push
push
call
jne
add
add
pop
mov
add
add
mov
add
add
add
lods
nop
int
xlat
out
sub
jb
push
xchg
icebp
mov
add
pop
add
add
cmc
imul
add
test
add
add
rclb
fiaddl
testl
popa
jb
mov
add
sti
add
push
in
xchg
add
add
mov
lea
pop
mov
shr
add
push
not
pop
mov
push
lea
push
lea
push
push
push
push
call
pop
add
push
add
xchg
add
pushf
add
mov
add
add
jbe
add
test
scas
lock
add
addr16
add
fcoml
rolb
push
fidivrs
pop
rcrb
add
add
mov
add
add
test
je
xchg
lea
pop
mov
add
push
shl
add
pop
add
mov
mov
push
lea
pop
cmp
jne
cmp
jne
mov
push
rol
sub
not
pop
movl
jmp
push
shl
pop
mov
push
rol
add
pop
mov
sub
jne
mov
push
push
call
test
push
movb
jbe
add
fs
pop
enter
in
add
enter
jl
add
hlt
add
cli
fcmovnb
add
add
test
rol
jecxz
add
scas
fcmovne
cltd
faddl
cli
add
push
rolb
stos
add
push
sar
jge
mov
add
xorl
xchg
fldenv
cld
lea
pop
movl
push
sub
sub
shr
pop
jmp
push
xor
inc
pop
mov
push
push
push
push
push
lea
push
push
call
pop
movsb
jge
fstp
add
xchg
add
mov
mov
xchg
add
pop
lahf
lds
push
mov
pop
pusha
mov
jns
addr16
lahf
add
add
ficomps
add
aad
add
lea
ret
add
addr16
add
add
cmc
add
push
ffree
add
mov
xchg
pop
pop
jbe
mov
mov
add
mov
test
mov
lea
pop
mov
push
dec
sub
sub
add
pop
cmp
jne
mov
movl
push
dec
shl
pop
jmp
push
xor
pop
mov
cmpw
jne
mov
push
ror
sub
inc
sub
pop
movl
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
jno
add
add
lods
push
jnp
popa
jmp
add
push
movsb
testb
add
addb
div
stos
add
add
addb
add
add
pop
out
mov
addl
xchg
js
xchg
mov
xchg
mov
addb
jecxz
pop
test
push
add
in
push
add
jne
push
add
test
add
add
jle
mov
lea
pop
jmp
push
push
call
std
mov
add
push
add
movsb
add
add
add
push
aad
les
xchg
add
add
out
add
pop
add
pusha
lock
roll
gs
add
repnz
mov
sti
add
negb
push
mov
out
add
addb
add
mov
test
jo
add
jge
addr16
lods
add
pop
pushl
pop
mov
push
push
lea
push
push
call
sti
loope
add
lea
xchg
lret
mov
push
mov
test
mov
stc
int
add
movl
add
add
fiadds
jo
xchg
mov
add
fadds
aad
shll
mov
add
mov
std
les
jmp
add
mov
mov
add
roll
movb
add
lods
xchg
repnz
outsl
jb
aam
bound
pop
mov
mov
push
push
sub
rol
ror
push
or
not
add
ror
sub
not
pop
sub
not
add
pop
push
add
pop
push
call
push
add
dec
pop
cmpl
je
push
push
push
sub
add
rol
xor
sub
not
rol
inc
pop
ror
dec
pop
push
lea
shr
sub
pop
push
call
push
sub
rol
pop
cmpl
je
push
push
sub
inc
push
xor
add
ror
shl
sub
sub
pop
sub
shl
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
push
scas
stc
push
add
arpl
jle
add
addl
leave
add
lock
add
add
or
jno
ja
add
jge
in
add
add
add
into
sti
fildl
imul
add
add
add
fcmovu
add
push
jle
pop
mov
jae
lret
mov
mov
lret
mov
mov
lea
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
jo
scas
cltd
out
add
push
xchg
addb
data16
pop
add
cmpl
push
scas
add
push
add
shrl
add
add
lret
add
lahf
add
imul
into
add
push
xlat
mov
add
pushf
add
je
mov
add
xchg
add
add
int3
lea
pop
call
cmpl
je
push
push
not
push
or
inc
add
not
sub
shr
pop
not
dec
sub
xor
pop
push
push
push
push
push
push
push
call
add
out
add
add
add
adc
lds
test
nop
popf
add
pop
loop
push
jecxz
rolb
scas
add
xchg
jns
stos
mov
add
add
xchg
add
add
push
negb
pop
add
jp
add
roll
mov
pop
add
pop
add
incb
xchg
add
popf
pop
jge
add
rclb
hlt
lea
pop
push
call
push
dec
add
xor
pop
cmpl
je
push
push
rol
ror
push
push
pop
add
shl
add
dec
shl
sub
inc
not
pop
shl
pop
push
not
add
add
inc
pop
push
push
shl
pop
call
cmpl
je
push
push
add
push
push
pop
add
shl
shr
sub
sub
xor
pop
not
shr
pop
push
lea
push
call
add
xchg
xchg
add
mov
add
idiv
loopne
notb
xchg
cmpsb
add
jl
lock
mov
add
int
test
add
rcl
add
addr16
add
add
stos
aam
mov
mov
outsl
fs
out
jp
nop
repnz
cmpsl
shll
jp
jl
call
mov
testb
add
lea
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
push
add
add
in
mov
test
jl
popf
mov
add
fnsave
add
push
add
jle
add
movsb
add
xchg
add
pusha
in
lods
addl
mov
mov
add
mov
scas
cmpsl
add
outsl
mov
imul
lea
pop
call
cmpl
je
push
push
rol
lea
push
sub
add
xor
sub
sub
lea
rol
ror
shl
pop
add
dec
ror
pop
push
lea
push
push
push
call
lret
in
push
jp
insb
push
cmp
add
mov
out
in
push
out
add
hlt
call
call
add
mov
jl
shr
pop
stos
lods
add
xchg
cwtl
xchg
add
add
add
popf
add
add
jmp
pusha
jb
loope
xlat
add
add
mov
add
add
add
add
pop
push
call
push
dec
pop
cmpl
je
push
push
shl
add
lea
sub
push
xor
add
inc
shl
sub
lea
sub
add
shl
pop
not
pop
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
add
lret
add
je
add
pop
xchg
mov
add
jo
xchg
movb
add
lea
into
popl
add
into
add
pop
loopne
push
add
add
mov
stos
shll
pusha
ljmp
add
pusha
popf
pushf
add
mov
lret
stos
mov
add
cltd
add
add
stos
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
call
std
mov
pop
fnstcw
add
xchg
pusha
add
add
add
add
lahf
jmp
lock
add
sbbl
scas
cmp
xchg
fiaddl
add
bnd
add
jo
add
icebp
jne
in
jns
lea
jne
sahf
jmp
movsl
add
add
cmpsb
in
add
mov
lea
pop
call
push
lea
push
push
push
push
push
push
push
push
push
call
push
push
add
mov
stc
push
fcmovne
mov
add
xchg
aam
add
in
mov
add
repnz
jno
faddl
mov
add
scas
mov
add
add
add
jmp
cli
loope
add
imul
fsts
push
add
into
add
sarl
jnp
add
loope
add
add
mov
data16
cmp
or
int3
je
push
push
dec
push
push
pop
add
shr
sub
sub
xor
add
pop
lea
pop
push
push
call
add
add
mov
stos
sti
add
add
xchg
js
add
test
add
imul
add
add
fldl
xchg
in
fisubl
add
fisubl
mov
mov
jbe
out
add
jo
xchg
test
int3
xchg
nop
mov
lods
add
add
add
add
add
add
addr16
rorl
pop
push
call
push
push
push
push
push
push
call
add
add
bound
mov
add
add
aad
jp
add
add
mov
pop
add
loopne
mov
jnp
jl
add
cli
push
ret
xchg
add
jns
les
nop
sbbl
out
loop
into
cld
mov
add
add
enter
add
testb
fs
add
add
add
xchg
add
testb
std
add
mov
bnd
jno
mov
orl
cmpl
je
push
push
add
inc
push
or
not
add
shl
lea
shr
sub
sub
shr
pop
xor
pop
push
sub
xor
lea
pop
push
call
cmpl
je
push
push
rol
shl
push
and
add
sub
sub
sub
pop
xor
sub
add
pop
push
sub
xor
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
push
call
lds
rolb
add
test
call
add
add
clc
mov
cmc
mov
add
aam
stc
push
add
jecxz
test
mov
add
cmpsl
stc
add
jnp
lcall
test
hlt
mov
add
add
add
add
fiaddl
fnstenv
add
fabs
stc
pop
mov
jns
into
test
mov
lea
pop
call
cmpl
je
push
push
shr
inc
dec
push
push
pop
add
sub
rol
sub
inc
pop
pop
push
not
dec
pop
push
call
push
lea
pop
cmpl
je
push
push
rol
ror
lea
push
xor
add
dec
xor
sub
inc
pop
ror
ror
shl
pop
push
push
ror
add
pop
call
push
rol
dec
lea
pop
cmpl
jne
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
aad
into
into
mov
lock
test
push
scas
add
std
add
jno
fadds
add
loope
lahf
ja
add
jge
mov
jbe
call
mov
add
jle
add
xlat
push
push
add
cld
scas
jmp
sahf
sti
ror
loopne
rcrl
fcmovne
pop
loop
add
test
jae
mov
add
push
movsl
mov
mov
lea
pop
mov
movl
jmp
push
push
lea
push
lea
push
push
push
push
push
push
call
add
sahf
ret
push
add
pop
incb
int3
add
lea
out
mov
pop
bound
call
jl
push
out
jbe
add
add
mov
ljmp
add
add
add
jo
add
jne
mov
push
xchg
add
in
movsb
push
testl
sahf
add
out
add
test
test
add
add
add
lds
popa
and
xor
pop
push
ror
pop
pop
push
lea
push
call
faddl
icebp
cltd
add
add
add
jbe
popf
add
in
pop
add
add
or
add
add
fsubl
add
add
clc
lds
bound
jbe
test
add
iret
add
int3
add
xchg
divb
add
add
add
add
xlat
add
fldl
jae
add
movsl
mov
lods
add
add
or
pop
push
xor
pop
leave
ret
push
push
call
test
lret
aam
add
xchg
jle
je
add
jl
int
add
mov
jnp
add
add
add
mov
mov
mov
ret
add
add
jmp
lcall
popa
add
add
push
loopne
jmp
add
mov
fists
add
mov
lea
pop
push
mov
push
push
lea
push
push
lea
push
call
mov
fadds
add
jle
add
ret
lret
lea
aad
push
add
add
insb
in
xchg
scas
add
add
mov
cmpsl
stc
add
addl
add
lods
jno
fcomps
leave
add
in
jb
add
icebp
test
clc
add
add
in
fldl
loope
add
mov
mov
add
add
int
add
add
add
mov
lea
pop
add
push
push
push
push
call
ljmp
pushw
mov
aad
testl
movl
add
pop
jmp
add
test
xchg
stc
add
add
add
imul
add
faddl
scas
cltd
pop
fs
in
add
fwait
je
jns
bound
add
add
movsl
pop
mov
popa
mov
add
xchg
add
mov
mov
lea
pop
cmpl
jne
push
push
add
sub
rol
sub
push
xor
add
lea
sub
not
inc
lea
pop
add
sub
add
pop
push
shl
pop
pushl
push
add
pop
call
push
pop
push
call
jmp
push
push
push
push
push
push
lea
push
push
push
call
jmp
aad
aam
cwtl
add
into
mov
jb
add
mov
ja
cli
cltd
add
pop
loope
push
add
mov
imul
pop
add
mov
jns
add
mov
jbe
add
mov
jno
aad
add
icebp
arpl
into
xchg
jb
xchg
add
lock
add
std
rorb
lea
pop
cmpl
je
cmpl
jne
push
push
push
push
call
jle
js
mov
pop
add
flds
add
lods
mov
pop
xchg
add
cmc
repnz
lcall
add
imul
mov
add
loop
adc
jnp
lcall
add
leave
roll
push
ja
test
outsl
push
add
add
push
add
push
icebp
add
add
mov
add
fdivs
mov
lea
pop
leave
push
sub
inc
pop
add
push
push
push
call
add
add
add
mov
arpl
filds
mov
pop
cmpsb
add
cmpsb
mov
lahf
scas
add
add
pushf
stc
jle
add
imul
xchg
add
mov
add
jmp
lret
add
lcall
add
add
lock
add
jp
fstps
push
xlat
add
cmpsl
mov
lea
pop
pop
push
ror
pop
pop
push
push
push
lea
push
push
lea
push
call
repnz
pop
mov
mov
add
add
fdivrl
add
add
mov
add
out
xchg
enter
test
add
add
leave
add
add
add
push
lea
jp
add
add
add
mov
test
mov
add
push
add
push
mov
mov
fmull
push
add
shl
pop
pop
leave
add
push
push
push
push
push
push
push
call
pusha
lret
popa
out
test
stos
pop
in
cwtl
test
add
add
add
push
mov
fiadds
add
cmc
aad
int
jae
jns
test
addb
imul
push
out
add
add
add
mov
mov
lcall
fildl
mov
fisttps
add
mov
mov
jecxz
mov
push
fisttpl
pop
ret
jmp
push
push
push
lea
push
push
push
lea
push
lea
push
call
lcall
xchg
shll
add
lock
mov
jmp
test
mov
test
add
in
lcall
add
in
add
ret
stos
push
add
cld
pop
rolb
mov
fadds
add
stos
xchg
stos
call
roll
cld
add
add
mov
add
mov
add
out
add
and
jge
add
test
add
add
xchg
adc
push
rol
push
or
not
add
rol
rol
shr
sub
sub
add
lea
sub
pop
shr
sub
inc
pop
push
pop
pushl
call
push
push
lea
push
push
lea
push
push
push
call
add
test
add
jle
popa
pushf
add
imul
add
lock
scas
xchg
add
jmp
add
movsb
mov
arpl
add
add
mov
data16
enter
push
sahf
mov
roll
push
mov
add
add
mov
addb
add
imul
add
jbe
jp
cmc
push
pop
mov
lea
pop
call
jmp
cmpl
jne
push
push
push
call
mov
mov
add
mov
jno
add
xchg
out
add
sahf
popa
mov
leave
bound
lods
lods
mov
pop
add
outsl
add
add
stos
iret
add
scas
add
add
in
ret
push
add
lods
enter
je
add
add
add
mov
add
jmp
add
push
cwtl
add
add
incb
lea
pop
mov
mov
push
lea
push
lea
push
push
push
push
push
lea
push
call
jl
nop
mov
nop
neg
andb
mov
cli
aad
cli
add
add
ja
fldl
add
bound
mov
nop
mov
ljmp
mov
imull
add
push
add
jne
mov
bound
add
mov
in
movsl
rclb
and
push
push
add
shr
xor
dec
push
or
inc
add
add
shr
add
sub
ror
lea
pop
sub
add
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
ret
js
mov
add
add
popf
add
xchg
scas
hlt
icebp
rolb
xchg
roll
mov
push
add
vpdpbusd
jbe
mov
mov
lds
jecxz
add
into
pop
imul
add
ja
lea
insb
out
fadds
fs
add
add
add
xchg
add
jb
addb
xchg
jns
jns
cli
cld
xorl
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
push
popf
mov
mov
mov
out
mov
jns
in
mov
or
add
movsb
sar
jb
test
scas
add
lock
add
add
xchg
arpl
mov
xchg
jnp
test
mov
mov
add
add
loope
sti
mov
push
push
xchg
insb
jbe
stos
add
xchg
add
leave
cld
push
mov
loop
jns
mov
lea
pop
call
push
shl
pop
call
push
push
not
push
sub
add
dec
lea
lea
sub
sub
shl
pop
add
dec
lea
shl
pop
pushl
push
lea
lea
inc
add
pop
call
push
push
lea
push
push
push
lea
push
push
push
push
call
cwtl
leave
add
add
mov
mov
call
mov
cli
popa
jnp
add
add
pusha
mov
add
imul
fdivrp
fildl
in
add
mov
push
add
add
pop
add
imul
out
add
add
addl
int3
pusha
clc
jmp
jbe
sarb
pop
add
imul
test
test
xchg
mov
lea
pop
call
push
push
add
lea
sub
not
push
push
pop
add
sub
shr
ror
pop
add
sub
shr
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
call
add
xchg
push
in
add
lcall
addl
movsl
add
add
lock
cld
mov
mov
pop
imul
je
lret
bound
fwait
addl
jl
mov
add
rolb
xchg
add
push
bound
add
mov
cli
lret
negl
pop
add
pop
call
push
push
push
push
push
push
call
add
add
add
pop
stos
roll
add
movsl
add
add
fldl
add
fidivs
test
add
add
add
rolw
rcrl
aam
add
jmp
add
addr16
clc
fadds
je
add
jge
mov
push
icebp
add
xchg
jl
xlat
push
add
arpl
mov
insb
mov
xchg
pop
add
mov
lea
pop
call
push
push
sub
push
xor
add
xor
xor
sub
sub
pop
xor
pop
push
push
ror
sub
push
sub
add
shl
sub
xor
pop
not
add
inc
not
pop
push
push
lea
push
lea
push
lea
push
call
push
jae
mov
repnz
jns
jge
push
cld
aad
add
out
call
lret
add
in
push
loopne
add
add
jl
add
fdivrp
movsl
mov
js
push
les
add
jb
add
sahf
mov
add
repnz
add
jl
add
jp
add
pop
call
push
push
push
push
push
call
xchg
testl
movb
cli
jge
add
test
in
enter
push
ret
addr16
add
mov
test
aam
test
lret
lahf
add
add
mov
out
enter
xchg
jmp
arpl
fwait
jp
shrb
add
mov
jmp
xchg
fldl
push
add
add
pusha
adc
pop
dec
jne
call
push
shr
add
pop
jmp
push
push
call
add
add
add
mov
add
mov
add
add
mov
imul
mov
fimull
add
add
mov
mov
test
add
mov
cltd
mov
add
lcall
push
cld
loopne
pusha
add
mov
add
pusha
leave
imul
popa
or
bound
add
push
push
add
lea
sub
shl
push
sub
add
shl
sub
pop
add
ror
pop
pushl
push
sub
ror
pop
call
push
push
rol
not
pop
call
mov
push
xor
pop
lea
push
push
shl
sub
push
and
add
add
sub
sub
rol
ror
shl
add
pop
inc
pop
push
push
lea
push
push
push
push
push
push
call
add
xchg
arpl
stos
out
roll
add
cli
add
test
call
mov
in
scas
lret
xchg
in
addr16
lret
add
mov
data16
add
jge
add
add
jnp
mov
fdivl
out
loopne
lock
loop
add
add
push
mov
in
add
mov
add
add
js
fdivrl
les
jne
push
push
push
push
push
call
js
add
add
mov
add
iret
rolb
out
add
push
nop
popa
add
add
aad
pop
subl
add
fdivrs
in
push
add
stos
add
push
les
jne
push
add
add
xchg
add
scas
add
clc
cmc
add
aam
popa
jne
add
out
add
pushf
mov
lea
pop
call
push
shl
shl
pop
push
call
push
push
push
push
pop
add
xor
lea
ror
sub
ror
pop
lea
shr
lea
add
pop
push
shr
add
pop
pushl
call
call
push
add
pop
mov
lea
push
push
shl
add
push
push
pop
add
sub
shr
dec
ror
pop
dec
sub
pop
push
add
lea
sub
pop
pushl
call
push
add
pop
lea
push
push
push
push
lea
push
lea
push
call
add
jns
add
lret
add
movsb
jno
stos
roll
mov
push
loopne
add
add
add
mov
xchg
pusha
test
sahf
mov
sti
aam
add
add
add
imul
jmp
xchg
add
add
add
add
test
add
mov
mov
add
ja
add
jbe
add
nop
jecxz
push
mov
mov
mov
lea
pop
push
push
push
push
rol
ror
dec
add
pop
pushl
push
push
add
push
and
add
shr
sub
not
pop
lea
sub
pop
push
push
add
add
lea
pop
call
push
push
push
or
inc
add
not
sub
add
pop
add
sub
ror
add
pop
push
xor
xor
not
sub
pop
pushl
call
push
push
push
call
mov
faddl
add
add
add
xchg
add
add
add
les
add
icebp
enter
lahf
popa
test
add
fs
mov
add
sahf
popf
sti
rclb
repnz
add
gs
bound
repnz
in
add
xchg
fldl
fbstp
add
add
xchg
add
add
mov
lea
pop
call
push
push
xor
lea
sub
push
push
pop
add
not
sub
add
pop
pop
push
push
push
lea
push
push
push
push
push
call
cmpsl
cld
movsb
enter
mov
add
mov
jne
add
add
mov
cwtl
fiaddl
xchg
imul
lods
fwait
mov
add
jo
mov
mov
add
data16
roll
jmp
jae
lret
loop
add
mov
push
add
add
shr
outsl
imul
add
mov
add
les
jne
call
push
push
call
xchg
add
test
mov
xchg
mov
mov
adcb
add
mov
out
mov
mov
add
add
clc
test
out
ret
fyl2x
add
add
retw
add
xchg
js
pop
imul
add
add
mov
lahf
mov
add
incb
add
bound
pop
call
push
push
push
push
push
push
push
push
lea
push
call
mov
add
pop
mov
add
add
add
mov
add
test
add
add
fsubl
add
add
add
stc
aad
addl
pusha
pop
mov
jb
add
scas
xchg
insb
test
add
scas
add
add
outsl
mov
add
ja
cmpsl
mov
lea
pop
jmp
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
clc
std
fildl
mov
add
jno
add
out
insb
iret
jb
xchg
cmpsl
lahf
add
mov
add
add
cwtl
ljmp
mov
add
int3
push
rclb
add
mov
add
add
mov
mov
cwtl
ficoml
push
mov
sbbl
mov
lret
mov
add
add
pop
add
jbe
jp
fmull
pushl
mov
jmp
push
push
shl
sub
add
not
push
or
not
add
add
rol
add
sub
xor
sub
xor
pop
inc
sub
shl
sub
pop
push
push
call
popf
mov
add
add
add
xchg
add
ja
lods
add
js
jl
xlat
jb
mov
imul
jle
cld
add
add
int
xchg
add
jl
mov
call
mov
add
repnz
add
add
cmpsl
add
clc
push
fcomps
pop
sahf
mov
lret
mov
add
mov
lea
pop
pushl
push
push
lea
push
push
push
push
push
push
push
call
les
add
bound
je
andb
jb
add
mov
call
cmpsb
jl
movb
add
popa
lods
scas
push
add
mov
jbe
clc
mov
add
aam
imul
add
mov
add
orb
jl
jo
add
add
add
push
fcmovnbe
hlt
add
stos
xchg
mov
lea
pop
call
push
call
push
push
shr
sub
not
sub
push
sub
add
inc
shl
sub
sub
pop
sub
sub
shl
pop
push
xor
shl
pop
pushl
call
push
lea
push
push
push
push
call
add
cli
mov
aam
push
add
pushf
push
add
lret
push
add
xchg
cwtl
add
add
addl
add
icebp
stos
movsb
mov
into
fcoms
add
call
add
jmp
enter
cld
xchg
popf
mov
add
scas
add
aam
pop
add
xchg
add
add
imul
push
push
not
pop
call
push
ror
dec
add
inc
pop
leave
add
push
lea
push
push
push
push
push
push
push
push
call
add
ja
fwait
add
push
jecxz
jnp
mov
add
add
pusha
add
add
int
nop
add
mov
add
add
xchg
add
add
add
jecxz
mov
fldl
xchg
add
add
stc
int
enter
add
test
test
rorl
in
imul
add
ret
add
add
pop
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
add
sahf
leave
mov
add
popf
mov
pop
xchg
pop
add
mov
add
add
pop
leave
movsb
enter
loopne
pop
int3
pop
add
data16
cld
imul
repnz
add
add
mov
stos
add
add
mov
add
xchg
les
jns
mov
lea
pop
pop
push
push
push
push
push
push
push
push
call
jnp
cmpsl
lret
mov
add
mov
mov
mov
int
xchg
mov
addr16
add
fs
xchg
out
jno
jge
mov
mov
jae
add
scas
int3
outsl
add
add
mov
mov
aad
mov
xlat
add
lret
test
add
mov
pop
test
add
insb
add
xlat
add
add
add
hlt
lea
pop
pop
push
lea
push
push
push
push
call
add
out
add
idivl
int3
add
stos
mov
out
aad
aad
movsb
nop
add
neg
cltd
add
loopne
insb
test
add
lea
mov
add
insb
add
fcmovnu
add
add
add
mov
add
add
cmc
add
add
mov
xchg
add
add
adc
pop
push
not
pop
leave
add
ret
push
pop
leave
ret
push
lea
push
push
lea
push
push
push
push
push
push
call
cli
lock
add
mov
popf
mov
add
lods
push
xchg
lea
jne
push
jno
outsl
pop
add
add
std
mov
fcoml
test
mov
add
add
out
add
loopne
je
add
imul
add
push
mov
lea
mov
lea
pop
push
push
lea
push
call
add
xlat
add
stos
add
add
add
mov
add
pop
shlb
mov
pop
adcl
add
test
mov
xchg
loope
xchg
xlat
add
add
pop
movsl
in
mov
add
push
int3
stc
add
jno
mov
add
jle
add
add
add
subb
add
add
ret
test
data16
add
mov
lea
pop
mov
cmpl
jne
mov
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
mov
mov
scas
cld
out
add
xlat
rorl
ja
add
add
add
imul
add
jb
incb
xchg
sti
addr16
add
jo
pop
add
add
add
cmc
add
add
cltd
faddp
fstl
add
jae
pop
ret
cltd
add
je
add
add
add
aam
add
add
add
mov
lea
pop
jmp
mov
push
lea
sub
sub
pop
and
xor
xor
push
push
push
push
push
lea
push
call
pop
add
test
add
add
test
push
jmp
xchg
push
jl
add
add
faddl
movb
add
jle
test
add
adcl
mov
jnp
mov
add
mov
mov
mov
jl
faddl
lcall
pop
add
mov
add
add
in
mov
add
add
pop
add
push
push
call
add
add
roll
fsub
add
testl
lods
out
mov
and
xchg
jo
cli
mov
iret
mov
add
jmp
pop
add
hlt
jmp
data16
add
leave
roll
mov
fildl
test
add
add
flds
add
pop
xor
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
ja
orb
add
addb
mov
add
rorb
add
aam
xlat
fwait
mov
std
insb
push
add
add
lahf
cmpl
add
push
pop
arpl
add
js
arpl
mov
in
add
add
fiadds
ret
out
add
pop
fdivl
scas
cwtl
jbe
les
bound
mov
lea
pop
dec
push
push
push
lea
push
push
push
push
push
push
push
call
mov
add
cmpsl
fmull
outsl
fadds
add
out
addr16
hlt
add
push
jl
mov
add
add
add
mov
add
lods
adcl
int3
push
mov
mov
mov
add
add
mov
stc
add
test
add
push
les
pop
sub
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
jle
pusha
aad
add
movsl
icebp
lods
add
add
add
add
jp
subb
jne
mov
in
jp
cmpsb
add
cltd
push
mov
repnz
std
add
pop
fcmovnb
sahf
mov
test
ret
inc
lds
ljmp
mulb
add
xchg
add
mov
lea
pop
jmp
push
push
call
add
add
bound
shlb
out
mov
add
add
xchg
shr
data16
movl
add
add
mov
jb
add
pop
stos
sti
xchg
add
add
data16
add
add
sti
std
mov
xchg
mov
mov
fistpl
mov
add
add
add
add
add
mov
lea
pop
sub
push
add
shl
pop
pushl
push
rol
rol
inc
sub
pop
pop
sub
push
rol
pop
cmp
jne
push
push
call
fs
les
add
rcll
mov
jge
add
add
jge
add
rolb
jne
ret
lret
add
add
push
add
push
test
iret
jmp
add
mov
add
add
push
add
add
add
mov
lea
pop
mov
push
push
push
push
call
jne
add
fiaddl
mov
fldl
add
xchg
add
add
add
icebp
fiaddl
add
add
push
add
mov
jo
jns
rol
push
add
mov
push
mov
add
add
mov
mov
push
add
add
mov
scas
add
stos
scas
lcall
popa
cmpsb
mov
js
shll
add
mov
lea
pop
lea
push
add
pop
sub
push
push
lea
push
lea
push
lea
push
push
call
ret
movl
nop
jge
add
out
xchg
jnp
in
add
add
mov
sarl
mov
outsl
add
pusha
rolb
add
add
add
add
jp
add
aam
jl
cmc
add
jns
add
out
out
rolb
add
mov
add
add
mov
lea
pop
mov
push
lea
push
call
mov
jmp
mov
mov
enter
repnz
out
add
push
jb
sahf
icebp
add
add
add
add
add
add
mov
jae
add
add
ja
mov
mov
add
data16
add
mov
push
pop
add
pop
pop
mov
or
jmp
jmp
shlb
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
in
add
outsl
jns
lahf
fildll
mov
add
fnstsw
test
add
mov
test
arpl
clc
bound
gs
xchg
ftst
pop
add
ret
add
add
add
nop
add
mov
imul
ret
mov
pusha
add
pop
add
add
add
pop
mov
lea
pop
pop
push
add
inc
sub
pop
shr
push
lea
push
push
call
add
add
add
add
xchg
add
add
xchg
add
xchg
add
in
add
add
xlat
mov
jecxz
test
add
out
add
mov
mov
jecxz
xlat
mov
add
jle
loopne
add
lods
roll
mov
add
add
in
lods
in
cld
add
ret
mov
lea
pop
and
push
lea
push
push
lea
push
push
push
push
call
jae
out
add
fincstp
add
add
cmpsl
jge
int
add
pushf
mov
add
pop
pop
add
fmull
add
cli
add
arpl
bound
mov
pop
jne
outsl
add
xchg
lock
add
out
add
mov
add
mov
jecxz
add
roll
bound
mov
add
xlat
push
add
lock
mov
add
add
add
mov
lea
pop
sub
push
lea
push
push
push
push
call
ljmp
add
add
add
xlat
test
ja
rolb
mov
add
add
xchg
pop
add
mov
add
shl
lea
imull
test
add
add
in
add
xchg
ja
jne
jb
scas
testb
add
add
add
add
cwtl
pushf
into
iret
lods
add
add
add
add
hlt
lea
pop
cmp
jne
push
lea
push
push
push
push
lea
push
call
lods
out
orl
mov
lcall
and
xchg
add
outsl
add
jp
mov
pop
js
sti
fcoms
add
add
js
lds
addb
pop
pop
test
mov
mov
fwait
cli
add
add
roll
pop
hlt
add
push
add
scas
add
repnz
popa
testb
add
cltd
add
jmp
lret
lea
pop
leave
ret
push
push
push
push
lea
push
call
cld
push
stc
add
fldl
push
add
add
mov
fstps
add
jne
mov
jge
shrb
mov
add
jmp
fsubrs
stos
add
jmp
push
adc
add
add
add
icebp
add
add
add
lcall
pop
int
cmpsl
iret
mov
add
test
int3
lea
pop
mov
add
push
push
shr
not
pop
push
push
push
push
push
push
push
lea
push
push
call
enter
out
add
xchg
mov
rorw
fxch
push
add
fildll
push
pushf
jmp
add
cmpsl
clc
imul
add
add
lds
add
in
add
add
not
aad
add
push
add
add
mov
addl
jp
pushf
pushf
loop
xchg
add
mov
lea
pop
push
push
not
pop
push
push
rol
dec
pop
push
mov
push
push
push
lea
push
push
push
push
push
push
push
call
ret
jns
add
xlat
add
add
add
add
pusha
add
xlat
add
lea
xchg
loopne
data16
add
add
add
jns
add
incb
add
add
stos
mov
add
jmp
test
add
lea
decb
add
pusha
stos
add
xchg
xchg
movsb
add
mov
add
push
repnz
lea
pop
lea
sub
mov
push
push
call
mov
lock
shl
add
lret
test
add
add
jnp
addr16
add
mov
mov
jge
out
add
adc
jns
pop
add
add
add
xchg
sahf
mov
add
mov
test
pushf
fsts
add
add
clc
test
jns
cld
lea
pop
shr
push
sub
shl
pop
add
mov
push
rol
dec
pop
add
push
push
push
push
push
push
push
push
lea
push
call
mov
mov
mov
add
add
add
jecxz
add
roll
xlat
push
imul
add
jno
rolb
lods
into
xchg
push
outsl
add
add
add
add
movsb
test
rcll
pop
int3
add
add
mov
mov
add
jl
add
add
add
add
loopne
add
movsl
stos
xchg
add
mov
lea
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
jns
push
idivb
int3
fsubl
and
sahf
push
mov
aad
roll
add
andl
push
filds
lock
fcmovb
data16
add
add
mov
add
test
ficompl
add
mov
test
jb
addr16
push
imul
in
add
arpl
mov
call
mov
mov
lea
pop
add
push
lea
sub
pop
xor
push
xor
inc
pop
mov
push
dec
add
pop
and
call
add
push
push
call
add
add
add
push
call
lods
add
mov
add
ja
add
lock
sub
xchg
add
add
jnp
add
jb
cmpsl
movsb
add
in
je
add
movsl
add
fnstenv
jl
add
js
mov
add
lea
jno
add
popa
add
pop
jne
movsl
add
cmpsb
add
add
fadds
xchg
mov
lea
pop
cmp
je
add
push
push
push
push
lea
push
push
push
push
push
call
add
jns
testb
cwtl
mov
addb
jne
mov
add
mov
mov
xchg
movsb
add
add
add
add
add
testb
add
mov
in
int
add
test
mov
jne
pop
mov
add
add
add
mov
lea
pop
cmpl
jne
push
push
push
push
push
lea
push
call
jno
in
add
lock
add
add
push
clc
add
add
sarb
outsl
data16
add
add
xchg
pop
mov
jo
add
mov
imul
pop
mov
add
clc
xchg
ret
popa
add
add
add
cmpsb
flds
pop
add
xchg
xchg
add
incb
jge
lcall
pushf
test
add
popa
sbb
rcrb
pop
push
sub
add
rol
pop
pop
push
inc
not
lea
pop
pop
push
push
push
push
push
call
cmc
lcall
mov
add
add
add
nop
popl
add
rolb
ljmp
je
add
lret
add
add
mov
imul
cwtl
test
add
push
add
push
popa
je
popf
js
stos
add
xlat
int3
stc
add
popa
mov
movl
add
add
add
add
imul
add
clc
add
adc
pop
push
sub
inc
sub
pop
leave
push
shr
pop
ret
push
ror
sub
lea
pop
mov
add
push
push
push
push
lea
push
push
push
call
add
fwait
push
push
jb
add
cld
movsl
pop
add
mov
hlt
je
add
lcall
pop
add
lock
popf
add
add
xchg
loopne
loopne
pop
popa
add
nop
cmpsb
je
test
add
sti
enter
jle
nop
repnz
rclb
add
fiadds
xlat
movsl
push
cmpsl
add
icebp
loopne
data16
arpl
pop
push
push
sub
pop
pop
push
lea
push
call
lds
lcall
out
out
add
xchg
filds
lea
add
xchg
mov
aad
scas
cmpsl
xchg
mov
nop
push
jmp
cmpsb
add
cli
jmp
add
add
in
mov
push
faddl
add
loop
faddl
fidivl
enter
add
add
add
add
mov
jle
add
cmpsl
mov
lea
pop
pop
mov
push
add
dec
pop
push
push
push
push
push
push
push
push
call
fcoms
jbe
arpl
lahf
ljmp
jo
add
add
mov
add
mov
mov
sarl
jbe
in
add
shl
add
add
add
mov
add
ror
nop
pop
add
test
mov
scas
mov
mov
mov
rcrl
add
pop
insb
xor
loopne
mov
add
pushf
add
int3
add
add
add
push
ja
hlt
lea
pop
call
xor
pop
push
push
push
push
push
push
push
call
add
add
add
add
add
imul
mov
out
add
add
fmul
cmc
add
add
pop
add
mov
pop
add
nop
int
add
add
push
jmp
js
mov
add
cmpsl
add
orl
jl
add
add
stos
add
mov
addr16
pop
pop
push
xor
pop
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
movb
fsubp
nop
fwait
mov
stc
add
fiaddl
add
add
leave
rol
xor
push
add
lcall
add
mov
test
leave
add
pop
mov
notl
add
add
in
addl
add
xchg
add
xchg
subb
mov
jmp
imul
bound
leave
push
ror
shl
pop
ret
push
lea
sub
shl
pop
push
mov
add
push
dec
pop
push
push
push
lea
push
push
push
call
add
andl
add
add
add
mov
jge
add
gs
jne
lds
xlat
aam
fiadds
cli
jp
sbbl
xlat
add
jae
add
add
mov
mov
hlt
mov
scas
stos
lret
rcll
jno
jns
mov
xchg
sub
pop
mov
test
add
lret
hlt
xchg
pop
push
push
push
push
push
push
lea
push
call
iret
add
add
in
test
aad
add
xchg
add
add
push
add
mov
add
test
int
mov
roll
add
cmpsl
add
out
add
add
lods
andl
add
mov
xchg
jl
add
xchg
gs
int
jecxz
int3
fimull
pop
push
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
rcl
add
add
add
out
add
jne
clc
addb
add
mov
mov
test
pop
add
pop
add
test
xchg
int3
pop
nop
xchg
bound
add
lock
fwait
add
add
lods
push
jnp
out
mov
pop
arpl
mov
jmp
cld
lea
pop
mov
push
push
lea
push
push
push
call
test
xchg
out
add
fidivrl
add
add
lock
lea
mov
test
add
add
addl
rcl
add
add
pop
mov
add
add
add
mov
add
js
add
shl
add
int3
jp
lods
mov
out
mov
lea
pop
push
pop
lea
push
push
push
push
push
push
lea
push
push
call
add
addb
add
add
add
add
add
stos
fs
add
pop
cld
out
add
jge
out
stos
add
movsb
pusha
test
push
add
mov
add
add
add
add
cld
add
sahf
clc
fisubs
add
add
stos
add
jno
xchg
icebp
add
jl
std
add
add
sti
add
mov
popf
xchg
mov
lea
pop
sub
push
dec
add
rol
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
imul
add
xchg
add
add
ljmp
popf
in
add
addb
out
add
popa
jae
bound
add
add
cli
roll
stos
sbb
iret
fsubs
lock
add
enter
loope
shrb
push
out
fxch
add
test
mov
lea
pop
shr
add
push
push
push
lea
push
push
lea
push
call
jno
fildl
testb
fldenv
in
add
add
outsl
add
aad
shl
iret
stos
add
call
add
int3
movsl
add
in
ljmp
add
sarb
jecxz
jle
add
add
aad
fcoml
pop
push
lods
add
add
mov
popf
add
add
add
add
pop
lret
cmpsl
fucomip
jge
xchg
subl
add
fisttpl
pop
mov
add
push
push
push
lea
push
push
call
add
imul
addr16
add
push
shll
add
jb
add
lods
mov
fisubs
add
add
fsubs
add
jmp
je
mov
mov
js
int3
js
fiaddl
add
mov
aad
add
jb
jp
movsb
add
pop
flds
mov
mov
add
add
add
push
add
add
lea
pop
pushl
push
lea
push
push
lea
push
push
push
call
cwtl
rol
andl
add
iret
arpl
icebp
add
lods
add
data16
mov
mov
popf
add
add
lret
popa
mov
roll
add
add
add
add
add
jmp
imul
movsb
mov
add
test
rcrb
icebp
add
leave
add
push
add
cmpsb
addb
mov
lea
pop
popl
push
not
xor
lea
pop
mov
add
push
lea
push
push
lea
push
call
pop
mov
aad
xchg
add
mov
jno
add
add
in
add
ja
int
xchg
popa
add
adcb
add
jno
add
push
in
xchg
add
jbe
mov
add
xchg
push
lods
jnp
add
imul
movsb
add
out
xchg
add
add
mov
add
roll
mov
xchg
add
stos
cmpsl
arpl
pop
loop
hlt
lea
pop
xor
push
not
rol
add
lea
pop
lea
mov
add
push
lea
push
lea
push
push
push
push
lea
push
call
jp
add
test
add
in
pop
add
add
add
loope
mov
add
push
xchg
mov
nop
add
test
add
mov
add
push
add
sbbl
add
mov
xlat
loop
add
addr16
mov
lea
pop
xor
push
lea
add
pop
call
add
nop
push
add
add
add
sub
pop
nop
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
add
fsubs
cld
add
add
jno
movsl
loope
pop
add
ret
loop
add
add
jo
add
imul
add
jmp
xchg
bound
clc
add
add
subb
add
out
add
fimuls
add
repnz
add
mov
mov
aad
data16
add
bound
pop
cmp
je
push
lea
push
push
call
pusha
push
out
mov
add
jmp
mov
push
jb
insb
add
fmul
addl
mov
mov
push
pop
fidivs
push
jno
mov
push
add
lock
jl
add
int3
loope
add
jns
add
clc
add
add
add
popa
mov
push
xchg
sahf
mov
add
imull
scas
add
add
call
or
nop
push
xor
pop
nop
inc
push
lea
push
push
push
lea
push
lea
push
call
xchg
add
stos
add
shlb
add
add
add
add
mov
imul
add
mov
jns
lret
mov
add
sahf
mov
add
mov
jmp
mov
jne
add
push
push
add
mov
mov
cltd
arpl
stc
mov
add
pop
add
fs
lcall
jae
lahf
add
add
add
add
sbb
push
lea
push
lea
push
push
push
push
push
call
add
add
xchg
add
jp
jo
out
add
scas
push
add
xchg
jo
xchg
add
out
add
cwtl
push
imul
add
add
int3
add
lds
mov
add
shlb
add
jno
add
imul
add
negl
mov
lea
pop
nop
push
add
pop
cmp
jb
xor
jmp
push
pop
mov
push
push
push
call
ja
popa
les
push
add
mov
jb
jmp
push
jne
icebp
add
push
add
add
xchg
add
add
nop
pop
jbe
add
pop
hlt
add
mov
subb
add
add
add
bound
add
add
lods
add
xchg
lcall
add
add
repnz
add
mov
mov
lea
pop
add
push
push
call
jecxz
add
mov
add
pop
testl
add
add
in
push
add
mov
pop
xchg
mov
add
aad
push
rol
add
add
cmpl
add
lret
lods
incb
add
push
jecxz
add
cmpsb
push
add
jp
add
ficoms
xchg
scas
mov
lea
pop
movzwl
push
dec
not
pop
mov
add
push
shl
pop
mov
push
shl
rol
pop
xor
push
push
push
lea
push
lea
push
push
lea
push
call
addb
mov
mov
hlt
add
sti
mov
lock
lcall
add
filds
xchg
lock
pop
add
out
push
pusha
mov
add
in
jb
test
mov
add
enter
lcall
addl
rolb
xchg
testb
cmc
add
add
test
xchg
add
cmpsl
mov
mov
out
pop
add
mul
add
mov
lea
pop
xor
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
pop
std
jae
pop
lea
mov
xchg
add
add
sahf
stos
add
jnp
mov
jl
imul
pusha
imul
jl
add
add
xchg
ret
push
aam
imul
add
pop
push
mov
push
mov
push
in
add
rolb
bound
pop
shl
xor
push
dec
rol
xor
pop
shl
push
push
push
push
push
push
push
call
lods
add
add
lds
pop
jle
ja
mov
add
add
fwait
add
scas
movsl
int3
sahf
lods
add
add
stc
add
add
add
add
add
add
mov
add
gs
mov
call
ficompl
ret
mov
add
movsl
ror
cld
add
into
xchg
add
xchg
add
jbe
gs
test
add
sbb
xor
push
add
sub
pop
shl
push
rol
pop
xor
push
pop
mov
push
push
push
push
lea
push
call
add
test
mov
int
add
mov
pop
negl
add
mov
iret
mov
rolb
add
add
xlat
test
roll
insb
add
jge
xchg
mov
add
xchg
add
lea
xchg
push
mov
cli
jnp
fcomps
add
leave
mov
lea
pop
add
pop
pop
push
shr
ror
pop
pop
push
lea
rol
lea
pop
pop
leave
ret
push
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
aam
jns
push
pop
add
fildl
mov
into
pop
add
shlb
aad
add
out
lods
outsl
xchg
add
add
lcall
out
add
add
mov
add
jp
push
add
add
mov
lcall
mov
add
lcall
in
add
mov
lea
pop
push
mov
push
push
push
push
push
push
call
add
add
mov
popf
add
mov
add
add
fs
mov
add
test
rorb
pushf
xchg
push
aam
fcomip
add
add
stos
mov
jne
call
add
add
addr16
test
std
add
mov
rcl
mov
lea
pop
push
push
push
push
lea
push
push
push
call
xchg
add
mov
mov
add
add
add
pop
pop
cld
add
jmp
mov
test
add
mov
add
cmpsl
add
xchg
lahf
add
lods
pop
fsub
add
add
test
add
rol
fcoml
sarl
add
push
mov
frstor
mov
mov
hlt
lea
pop
push
mov
push
sub
pop
mov
push
push
push
push
push
push
push
push
call
add
jns
fcomp
add
add
fnstenv
std
add
add
add
repnz
loop
movl
add
mov
cltd
test
add
int3
mov
js
popa
arpl
add
mov
add
xchg
cmc
in
aad
add
add
ret
rcr
jb
push
scas
add
fdivs
int
fldl
cld
add
fwait
call
add
leave
call
and
jge
push
add
shl
pop
test
je
mov
push
lea
push
push
lea
push
push
call
add
movsb
cwtl
add
xchg
gs
add
cltd
push
test
push
in
add
popl
add
add
add
add
cld
add
add
push
cmpsb
int3
sarl
jne
add
add
fildl
add
jmp
add
add
mov
jae
pop
mov
je
mov
lea
pop
test
je
push
add
sub
pop
mov
push
ror
add
inc
pop
mov
mov
inc
push
not
sub
pop
cmp
je
test
je
mov
push
push
lea
push
push
push
push
push
push
call
xchg
jle
add
push
in
pop
add
stc
push
addr16
add
add
pop
aam
mull
add
mov
fcmovnb
lret
lret
clc
ficompl
add
lret
xchg
add
jmp
int3
add
mov
add
fiadds
fwait
leave
lods
call
movl
add
mov
push
mov
and
cmp
je
test
jne
push
shr
xor
pop
xor
push
lea
push
push
push
lea
push
push
call
loop
add
add
xor
add
push
iret
add
lods
add
add
cltd
add
divb
add
les
in
push
add
mov
movsl
add
mov
cmc
mov
insb
jne
push
jge
add
cmc
pop
mov
popf
cli
add
out
add
mov
lea
pop
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
xchg
add
fldt
popa
add
add
xlat
pop
add
roll
add
movsl
add
add
add
mov
add
into
jne
jnp
xchg
cwtl
push
add
xchg
fiaddl
add
add
jnp
mov
repnz
add
in
lds
out
push
scas
bound
pop
pop
push
add
add
add
add
pop
pop
pop
push
push
call
into
add
std
push
fiaddl
in
data16
xchg
add
pop
add
push
add
add
pop
lods
addl
push
add
add
push
add
add
negb
pop
lcall
add
fildl
add
add
xchg
mov
xchg
add
cmpsl
cli
mov
xchg
add
mov
add
pop
movsl
lret
lea
pop
pop
leave
push
push
push
push
push
lea
push
call
fildl
xchg
mov
in
push
mov
adcb
in
mov
in
pop
mov
sti
add
nop
std
add
xchg
mov
cltd
adc
fwait
in
add
lods
jns
jb
add
add
pop
rcrb
cld
std
add
push
mov
scas
add
pusha
add
add
pop
ret
mov
push
push
push
lea
push
call
add
fdecstp
jae
add
ja
mov
cmpsb
cltd
imul
jbe
mov
std
add
add
mov
fldenv
jge
mov
add
add
in
add
jl
mov
add
in
aam
out
add
add
loope
jnp
add
push
xchg
movl
pop
bound
add
hlt
lea
pop
inc
cmp
jne
push
dec
pop
lea
push
lea
push
lea
push
push
call
add
add
je
add
add
jne
stc
add
add
jae
jp
stc
add
pop
fucomi
add
outsl
add
ret
push
add
mov
pushf
add
data16
add
filds
add
lods
add
add
stos
pop
add
pop
popl
push
sahf
lock
fadds
jge
int
lcall
popa
enter
mov
lea
pop
mov
test
je
push
inc
shl
pop
mov
push
inc
add
pop
add
cmp
jne
mov
push
rol
not
lea
lea
pop
test
je
mov
push
push
push
push
push
push
push
push
lea
push
push
call
add
loop
sahf
test
add
add
nop
mov
add
scas
loope
stos
add
xchg
add
add
incb
add
clc
int3
add
cmpl
pop
cmpsl
pop
movsb
add
add
add
pop
add
test
shr
add
leave
mov
jns
mov
add
mov
cwtl
add
loop
int3
lea
pop
add
push
push
push
call
mov
jmp
sti
add
add
xchg
movb
add
xchg
lahf
mov
add
pusha
add
in
in
add
add
cmc
test
lock
add
add
push
jmp
pop
xchg
push
shrl
add
mov
push
add
add
add
xlat
repnz
clc
mov
lock
mov
orl
test
push
lea
push
push
push
push
push
call
addb
add
fadds
imul
push
xchg
add
in
add
add
add
mov
lea
testb
mov
mov
add
xchg
add
mov
add
jns
push
imul
add
add
add
in
enter
ret
add
add
arpl
jns
jle
mov
lea
pop
jmp
push
push
push
push
call
mov
xbegin
jmp
popf
les
add
ljmp
add
testl
add
js
add
roll
jmp
add
jmp
add
popf
mov
je
add
push
fidivrs
add
add
add
data16
add
add
arpl
pop
xor
push
lea
push
push
call
fistps
in
stc
mov
movsb
add
pop
roll
add
add
add
add
fsts
add
add
test
mov
add
add
rolb
popf
ljmp
imul
xchg
add
fimull
fistpl
out
xchg
enter
mov
mov
add
add
test
add
mov
or
pop
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
add
stos
subb
rcrl
cmpsl
icebp
add
add
jp
xchg
addr16
push
add
jbe
pop
enter
add
jbe
add
sarb
pop
add
add
test
add
add
in
ljmp
add
add
iret
mov
add
pop
pop
mov
leave
mov
sar
stc
add
std
add
xchg
push
mov
ffree
jno
push
gs
mov
lea
pop
pop
leave
push
push
push
call
add
loopne
bound
add
popf
add
add
add
popa
add
arpl
pop
mov
cmc
mov
icebp
jb
rolb
add
push
xchg
add
add
shl
rolb
mov
stos
add
push
data16
pop
add
loop
out
add
loopne
std
filds
add
add
mov
xchg
imul
pusha
or
ret
push
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
pop
add
fwait
data16
add
add
pop
add
sahf
add
mov
mov
add
std
jno
jle
add
add
add
lock
arpl
mov
add
mov
add
pop
test
lds
add
and
mov
lea
pop
lea
push
lea
push
push
call
add
fistl
add
add
xchg
add
outsl
test
out
movl
js
add
add
rol
add
add
mov
add
ficoml
jmp
xchg
add
lret
pop
loopne
pop
mov
push
mov
test
lret
jb
subb
data16
pop
pop
pop
push
sub
inc
not
pop
pop
leave
ret
push
inc
add
pop
mov
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
lea
pop
lret
mov
add
lret
stos
mov
add
pop
add
mov
ljmp
xchg
add
add
add
mov
js
add
add
add
popf
jecxz
add
out
lret
add
test
add
push
add
xchg
frstor
loope
add
add
imul
push
in
push
mov
mov
lea
pop
pop
pop
leave
push
lea
sub
add
pop
ret
rol
push
push
push
push
push
push
call
add
loopne
ljmp
rolb
jmp
jmp
pop
add
cltd
lock
add
lcall
stc
add
add
iret
add
add
cmpsb
add
shl
arpl
add
fsubr
add
xchg
jl
fs
addb
add
xlat
add
hlt
add
add
add
shll
add
mov
lea
pop
rol
xor
push
push
push
call
xchg
cmpsl
jmp
add
add
out
jo
shr
xorl
jmp
xchg
mov
cli
add
push
add
mov
pop
pop
add
add
icebp
jb
add
loope
jge
add
add
mov
data16
xchg
mov
les
push
aad
push
xchg
push
add
lcall
fmull
cmpb
jne
push
push
lea
push
push
lea
push
push
push
call
leave
jno
add
add
add
loop
add
jp
add
add
add
pop
out
aam
int3
add
add
sti
lahf
push
pop
pusha
add
addl
cmpsl
js
add
add
shlb
filds
imul
add
imul
add
testl
mov
lea
pop
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
andl
sti
push
mov
sti
movsb
sub
sti
cld
push
mov
add
sub
jnp
mov
add
sbb
pop
add
push
mov
cmc
mov
test
cwtl
in
outsl
cmp
mul
sbb
outsb
call
out
repz
xor
jge
stos
pop
xor
xchg
into
lcall
mov
ret
inc
inc
jo
hlt
push
push
sarb
sarb
adc
ss
mov
shlb
add
pop
or
add
xor
pop
std
push
cwtl
ljmp
and
out
mov
and
jge
je
ss
sub
jecxz
sahf
outsb
cmpsb
mov
pop
push
pusha
push
shll
sub
cld
inc
push
sbb
imul
inc
dec
imul
cmp
or
mov
push
xchg
or
add
push
addr16
int3
nop
jle
xchg
pop
inc
push
sbb
or
inc
loop
out
add
cs
aaa
push
arpl
jmp
sbb
in
je
dec
xchg
add
mov
imull
lcall
dec
add
jecxz
lods
test
lahf
ss
cltd
cmpsl
mov
je
cmp
jnp
call
inc
dec
pop
orl
cli
adc
cmpsb
jns
add
or
mov
fstpt
xchg
lods
flds
out
push
pop
mov
push
mov
adcl
cltd
stc
mull
push
xchg
mov
imul
call
adc
fwait
ljmp
fsubrl
cmp
fimull
sub
inc
mov
xor
adc
movsl
ljmp
push
out
test
sbb
insb
inc
cmp
imul
inc
sti
push
loope
filds
mov
mov
frstor
or
cmpsl
imul
dec
cmc
mov
jae
push
add
add
into
inc
push
add
xchg
insb
pop
leave
lcall
jb
call
dec
pop
sbb
jo
in
mov
and
out
test
mov
cld
xor
shll
mov
jp
jecxz
popf
cwtl
sub
in
outsb
data16
pop
inc
aaa
repnz
inc
loopne
push
loop
xchg
in
shlb
and
add
cmp
sub
dec
xor
jmp
es
dec
xchg
mov
cmp
sar
mov
jnp
adc
dec
lds
popa
shl
dec
mov
outsb
lods
aam
rclb
testl
pop
jl
fcmove
mov
mov
das
insb
iret
insb
push
ss
scas
stos
sub
cvtps2pi
xchg
jbe
push
xor
pop
xor
adc
jae
leave
sub
cmp
push
add
test
cmpsl
mov
or
pushf
cmpsb
add
loope
int
das
sub
outsb
jmp
inc
xchg
fwait
insb
xlat
cli
jo
test
push
pusha
ds
fisubl
decb
stc
mov
dec
sub
pop
xchg
cli
sbb
ja
and
aas
add
inc
add
inc
xchg
mov
and
loop
mov
dec
cmpsb
cmpsl
xor
lahf
out
pop
dec
test
sti
fmul
faddl
sub
jmp
jb
xchg
fmull
cmpsb
cmp
inc
or
cwtl
int
mov
or
call
out
lods
or
cmp
xlat
or
dec
lds
xor
mov
fistl
pushf
call
clc
mov
cvttps2pi
je
xchg
data16
cmp
pop
cmp
je
mov
mov
xor
adc
lcall
aam
cmp
es
ror
cmp
xchg
xor
sub
dec
jmp
in
repz
push
adc
in
es
mov
cmp
fidivrl
cmpsb
pop
mov
jp
icebp
xchg
jmp
ds
loopne
jbe
inc
int
or
cmp
and
add
repnz
loope
xor
ret
push
gs
aas
ds
icebp
fidivrl
cld
aaa
arpl
cmc
popf
push
sahf
mov
ss
inc
fdivs
sub
cmp
ret
scas
jle
mov
leave
outsb
dec
add
repnz
sub
xchg
int3
int
fwait
sbb
aaa
lret
sbb
inc
cli
cmp
dec
popf
dec
int
xchg
add
push
xchg
sub
xor
test
mov
lret
mov
mov
iret
aaa
std
fdivrs
mov
mov
xlat
into
mov
push
mov
jmp
clc
mov
iret
lret
cmp
mov
shlb
cmp
dec
dec
lods
outsb
movsl
adcb
ret
cmpsl
xchg
int
dec
stc
aad
pop
hlt
loope
fldenv
lods
adc
xchg
push
sub
test
mov
and
test
mov
or
jmp
rcll
std
fmulp
pop
dec
add
add
jmp
push
xor
cltd
add
hlt
push
push
jecxz
or
jp
stc
dec
orl
lods
ljmp
push
and
leave
jae
ret
add
popw
fcmovbe
xor
and
lea
enter
cwtl
in
or
adc
mov
decl
int
test
push
dec
adc
lea
andb
xchg
stc
fsubr
popa
or
int
xor
xor
mov
out
loopne
loope
jbe
sbb
jnp
imul
add
lods
pop
xchg
cmp
rcll
bound
aam
lcall
sub
sub
or
sbb
add
cli
sahf
lret
scas
jnp
add
lock
fstp
out
xchg
xchg
stos
lret
mull
add
push
incb
cmp
mov
xor
cmpl
iret
outsl
fcoms
push
cmp
dec
or
cmp
cmp
inc
bnd
incl
push
add
ss
sahf
outsb
sbb
insl
sqrtps
adcl
dec
push
push
xchg
leave
inc
jmp
xchg
int
pop
inc
cmpsb
push
and
mov
ret
and
dec
bound
andl
adc
aas
xchg
add
push
jno
subl
adc
and
mov
add
sub
xchg
cmpsb
in
push
lahf
jbe
or
mov
and
cmp
inc
hlt
adc
xor
aad
inc
push
sarb
mov
and
pop
push
inc
xor
sbb
dec
imul
push
mov
cltd
xor
bound
dec
jne
or
push
idiv
ret
movsb
rcll
and
test
xchg
cltd
in
fists
ret
stos
mov
sbb
mov
scas
sbbl
sbb
jg
pusha
jnp
icebp
add
lahf
push
mov
movsl
xchg
xchg
mov
sbb
add
mov
shll
inc
fidivs
add
stos
stos
dec
push
pop
xor
lds
mov
in
testl
cld
in
into
insb
sbb
dec
rcrb
lret
push
loopne
ljmp
mov
leave
xchg
es
inc
mov
out
sbb
mov
cmp
arpl
and
dec
jecxz
inc
push
lea
test
sti
mov
movsb
add
stc
outsl
xchg
insl
jp
iret
subl
cli
pop
push
scas
dec
dec
rolb
jmp
rorb
cmp
frstor
xchg
inc
jno
or
or
lcall
mulb
lsl
add
sub
into
inc
jle
lret
jb
mov
xchg
mov
or
sbb
enter
std
mov
lret
mov
enter
scas
and
jg
jle
xor
cs
fcmove
pop
dec
mov
sahf
jp
push
xchg
jb
insl
cld
shl
testl
cmc
int3
mov
xor
in
lahf
lcall
daa
sub
xchg
enter
push
dec
mov
xor
sub
mov
push
sbb
inc
in
jbe
jns
adc
add
pop
mov
xchg
leave
dec
pop
dec
xchg
mov
xor
mov
lret
shlb
and
pop
mov
push
push
pop
pop
xor
je
popa
bnd
scas
dec
sbb
scas
mov
movsb
mov
sbb
in
mov
es
adc
lcall
mov
mov
aaa
fsubrs
jp
push
pop
sahf
adc
and
jbe
test
loopne
push
push
add
stos
push
xor
lods
leave
lcall
xor
addb
popl
loope
add
dec
rolb
imul
jge
push
mov
sub
cwtl
shll
adcl
dec
lea
sti
imul
inc
cmpsb
cwtl
stos
dec
push
push
repz
out
ret
dec
xlat
insb
fisubl
outsb
mov
cmc
pusha
shrb
pop
jb
jle
mov
icebp
mov
lods
jg
and
inc
stos
push
lods
into
adc
xor
xor
lods
jmp
adcb
add
int
lret
xor
and
mov
subb
xlat
jne
fdivl
lahf
mov
out
insl
dec
fstpt
jne
add
out
xchg
mov
and
das
sbb
fisubl
fmulp
push
cmp
jns
imul
jo
and
inc
xlat
jo
push
add
movsb
dec
xchg
or
xor
xchg
lods
std
lea
jle
and
sbb
rcrb
jmp
enter
ror
ss
jmp
dec
cwtl
mov
shr
lds
mov
ret
hlt
loopnew
lret
sub
cmpsl
fcoml
xchg
in
and
sbb
and
and
jnp
mov
orl
jo
or
loop
sub
pop
enter
fsubl
repnz
das
repnz
cmpsb
and
je
mov
xchg
add
into
inc
aad
cmp
dec
fxch
push
hlt
sbb
mov
lea
imul
dec
mov
cmpsl
sbb
jnp
stos
lds
loope
cmpsb
mov
xor
add
pop
or
popa
lea
xor
or
stos
or
dec
arpl
xchg
cmp
sub
mov
sub
mov
sbb
adc
xor
adc
mov
mov
je
dec
cli
rorl
mov
sbb
dec
shlb
les
in
popa
in
cmp
icebp
push
sub
enter
xchg
sti
jmp
arpl
lods
int
dec
in
dec
add
enter
jno
das
push
fldcw
int
xchg
ror
lock
rcll
push
pop
mov
out
lcall
xor
xor
jle
inc
popf
lret
jae
jnp
adc
mov
jge
add
cltd
test
xor
mov
shrb
pop
dec
xchg
push
or
sti
and
mov
dec
shll
adc
ficoms
sub
shll
add
int3
rcll
cmp
sbbb
xchg
fmul
inc
cmpsl
ja
pop
adc
cwtl
mov
mov
or
movsl
das
mov
mov
js
mov
xor
and
out
mov
jl
jbe
jp
faddp
mov
ret
out
mov
ja
mov
sub
push
push
jl
enter
shll
or
push
xchg
mov
imul
je
subb
adc
dec
mov
inc
adc
mov
jno
jbe
cwtl
js
xchg
inc
adc
and
mov
mov
xor
push
je
iret
jae
imul
add
repnz
sub
aad
dec
pop
jp
jp
lcall
dec
pop
popa
dec
scas
mov
mov
enter
inc
adc
mov
ja
jecxz
repnz
xor
mov
mov
inc
pop
mov
notl
xor
or
cmp
outsl
aam
jo
imul
repz
insl
int3
cmpsb
or
inc
fstl
ret
sti
scas
lods
mov
mov
lret
les
xor
jge
jle
dec
xor
scas
jmp
mov
and
rcrb
jle
cmp
insl
sbb
inc
sub
cmp
inc
mov
clc
mov
pusha
mov
dec
rcrb
bnd
mov
fsubs
or
jnp
and
test
mov
or
ret
lahf
inc
dec
adc
ret
xor
shll
and
inc
ljmp
xor
add
push
push
mov
hlt
push
rcrb
add
mov
mov
fiadds
mov
rcrl
xchg
data16
in
cmp
inc
jbe
add
mov
lret
sbb
lock
push
daa
scas
push
cwtl
adc
sub
jle
lods
jmp
inc
add
mov
out
cwtl
fiaddl
iret
cmpsb
xor
jne
pop
jnp
push
xchg
sbb
cs
loopne
incl
je
push
xor
dec
push
or
in
popa
imul
loop
mov
rclb
sub
mov
mov
in
int3
jg
mov
and
mov
cmpsl
cmpsb
and
lea
arpl
and
mul
push
fnstenv
mov
cmp
dec
and
pop
ss
pop
mov
jl
mov
lods
sub
pop
lret
sub
cmp
aaa
sub
ret
sub
lcall
loope
adc
adc
popf
mov
out
fwait
add
mov
xchg
sbb
mov
fimuls
roll
mul
add
mov
mov
mov
outsb
scas
testl
mov
mov
sar
mov
dec
in
jno
lret
pop
and
sbb
xor
xchg
das
loopne
xor
mov
xchg
aaa
incl
jp
cs
rolb
pop
cmp
or
add
dec
das
xchg
mov
lods
mov
insl
dec
mov
int3
daa
jp
cs
ret
imul
or
int
dec
fimull
jl
ror
das
lahf
pop
jb
xor
imul
cwtl
mov
sub
add
lret
gs
mov
cmp
cmpsl
mov
insl
daa
out
fwait
push
push
pop
dec
inc
inc
pop
sbb
adc
add
xor
js
lock
je
jecxz
dec
sub
stos
lock
fidivrl
stc
stos
xchg
cmp
nop
out
mov
into
mov
out
test
test
pop
pop
and
cmpsb
test
xor
mov
fistpll
ret
xchg
sti
and
fstps
lods
int
sub
or
mov
cmpsl
pop
lea
inc
xor
insl
mov
xlat
fwait
jns
out
int
adc
movsl
jo
jnp
xchg
les
cmpsl
adc
inc
popa
xchg
cltd
sub
stos
cmpsb
js
sahf
cmc
xor
ficoml
js
lcall
mov
sbb
mov
inc
std
inc
push
mov
cwtl
int
fdiv
outsb
movsl
pop
ret
cmp
in
mov
pop
cld
jne
push
xchg
int3
aam
cmpsl
push
jno
addr16
mov
adc
repz
int
push
mov
imul
and
out
add
notb
inc
cmp
outsl
sahf
dec
decb
push
daa
inc
aas
lods
pop
add
ja
xor
repnz
in
and
push
or
sub
rcr
insb
mov
scas
xor
rcll
pop
xchg
jecxz
rcrb
mov
sbb
test
adc
pop
loopne
sub
sbb
adc
sbb
je
rcrl
pop
ja
mov
loop
pop
cs
mov
mov
sub
jmp
shrl
js
stos
in
adc
xchg
dec
mov
loope
std
inc
cmp
xchg
and
mov
jle
daa
divl
xchg
mov
adc
scas
dec
faddl
in
imul
jnp
fnstcw
mov
fistl
adc
ret
pop
jle
test
or
cmpsb
or
lret
ret
sahf
add
cltd
mov
dec
xchg
mov
fnstcw
mov
jge
pop
push
push
inc
mov
ja
sahf
sbb
add
jp
inc
jp
mov
lcall
cmp
icebp
imul
jns
test
xor
imul
push
lcall
push
inc
mov
out
ret
mov
push
fcomps
inc
popa
cmp
scas
mov
mov
jo
pop
add
fs
mov
insl
and
fdiv
shl
sahf
dec
test
mov
rorl
test
aaa
fnstcw
loop
fisttpll
mov
inc
cmc
loope
ret
int
cwtl
lds
rcll
mov
iret
int
subl
mov
cmp
lret
cmp
movsl
dec
sbb
xchg
aad
inc
aas
pusha
jmp
mov
cmp
shl
bound
cmc
lea
movsb
push
inc
cmc
push
mov
mov
pop
jne
lret
dec
xor
enter
adc
jle
mov
in
out
jmp
xchg
movsb
adc
adc
sbb
jno
ltr
in
xor
in
jge
sbb
mov
mov
sbb
vpmadcsswd
fsubs
xchg
cmc
sbb
or
or
movsl
xor
test
push
bound
jnp
xchg
nop
pop
test
adc
pushf
lock
xchg
fistps
in
aad
jle
sub
xchg
cs
hlt
mov
xchg
enter
jno
dec
pop
icebp
je
stc
add
cli
and
roll
ret
rcr
mov
jmp
push
loop
les
mov
clc
pop
and
xlat
xor
adc
and
testb
or
mov
shlb
jg
jo
gs
pop
push
test
inc
or
cmpsb
mov
push
mov
jb
aaa
push
into
out
cli
out
sbb
rol
mov
loope
fs
insl
and
pop
inc
inc
je
add
clc
push
dec
rolb
mov
jne
fucomi
jl
cmpsb
fldl
ret
sbb
xchg
test
inc
shl
or
pop
pop
notb
test
out
jo
adc
lret
push
jns
loope
leave
movl
scas
pusha
ret
jl
sub
push
idiv
cmp
and
and
xor
cld
sbb
push
inc
fists
mov
out
mov
sub
in
push
jl
cmp
aaa
sub
jb
sbb
loopne
adc
dec
inc
je
hlt
jl
or
rorb
mov
push
pop
aad
mov
cmpsb
mov
in
fists
jo
jle
lock
mov
or
jnp
xchg
dec
jl
mov
enter
out
rcrl
fstpl
fstpt
lahf
jg
sbb
pop
pop
cmp
or
xchg
mov
jnp
sti
imul
inc
mov
jns
or
lods
sbb
aam
sub
cltd
add
test
ss
test
xchg
repnz
inc
mov
into
pop
inc
push
adc
pop
sub
xor
bound
inc
dec
outsl
shlb
mov
sahf
dec
adc
mov
cmpsb
mov
mov
lods
jne
xchg
mov
leave
pusha
and
push
adc
int
jecxz
in
out
mov
into
inc
jmp
push
sahf
push
lds
mov
cli
rolb
pop
add
mov
mov
push
cmc
sub
lahf
insl
xlat
mov
xchg
mov
push
icebp
xchg
cmp
pop
arpl
dec
pop
pop
sti
fs
cmpsb
orb
je
mov
mov
enter
adc
jg
xchg
cwtl
pusha
es
dec
lret
cmp
rcrb
dec
enter
lret
mov
inc
xchg
add
push
hlt
push
push
pop
or
xchg
or
jns
cli
push
lea
sub
fists
popf
and
icebp
add
sbb
inc
cmp
cmpsb
mov
pop
or
sub
pop
and
sahf
xchg
inc
fwait
fmuls
mov
roll
sbb
mov
into
add
cmpb
or
fnstcw
sbb
pop
add
xchg
mov
mov
in
and
pop
add
dec
xor
inc
mov
sub
jns
leave
insb
sbb
insb
gs
mov
stos
outsb
movsb
push
inc
nop
cmc
ret
inc
or
mov
sbb
xor
xor
fcomps
mov
cmpsb
clc
icebp
sahf
push
dec
pop
sti
mov
jb
add
adc
adc
mov
nop
inc
or
jge
cmp
int3
push
and
lret
in
mov
fs
xor
lahf
xlat
dec
mov
mov
call
mov
jg
fcoml
fiadds
dec
imul
pop
add
fstps
test
sub
inc
jae
loopne
enter
inc
xor
add
rorl
jne
aad
jo
pop
add
jge
cmp
iret
xchg
int3
and
pop
imul
cmpl
mov
pop
out
mov
mov
enter
mov
ret
xor
stc
add
sbb
mov
or
cmp
pushf
out
shrl
mov
xor
data16
jae
leave
cmpsl
in
and
xchg
insb
outsl
sub
cld
ja
in
sbbl
idivb
dec
mov
push
roll
sbb
push
sbb
xchg
fmuls
pop
jb
sub
rcrb
pushf
shrl
push
test
pusha
dec
mov
lret
aad
lret
inc
push
roll
test
adc
sbb
dec
mov
lods
bound
arpl
mov
stos
sub
shll
mov
cmp
cmp
sub
fwait
pop
lods
dec
nop
je
sub
mov
inc
adc
xorb
and
pop
popf
fwait
mov
aam
mov
pop
fcoml
fs
fadds
sbb
add
xchg
stos
stos
xchg
int3
pop
ret
icebp
mov
pop
scas
mov
les
pop
pop
cmp
dec
cmp
xchg
mov
ja
xor
add
repz
xchg
xor
ror
cmpsb
dec
mov
and
das
lahf
sbb
xor
ret
je
fmul
xchg
inc
into
inc
pop
test
sub
lods
sub
mov
xlat
lods
std
sbb
jle
aaa
mov
lds
jo
inc
daa
mov
mov
roll
add
insb
push
movsl
notb
hlt
sub
lods
lret
fs
add
sub
sub
and
inc
into
mov
test
xor
lods
pop
out
cmpl
sti
int
pop
xchg
in
cwtl
int
js
pop
jo
push
sbb
aaa
int3
outsl
pop
daa
gs
xlat
fnstenv
pop
sti
mov
sub
aas
or
push
mov
mov
xor
fldl2t
xchg
mov
in
add
push
xchg
and
lods
dec
xchg
sbb
shrl
mov
test
mov
lds
adc
pusha
sub
stos
mov
cs
mov
add
mov
mov
mov
or
mov
aad
push
stc
fwait
es
inc
add
sahf
bound
rep
jecxz
into
or
sbb
js
cmp
cmpsl
jge
out
ret
pop
es
add
popf
clc
or
inc
nop
xor
sbb
ret
lahf
sbb
pop
xchg
cmp
mov
push
imul
clc
arpl
mov
sub
shrl
add
jle
push
xchg
sti
stos
push
loopne
cltd
repz
movb
fldt
pop
insb
jae
pop
pop
add
into
ss
aam
icebp
mov
ja
push
and
inc
fldenv
mov
sahf
mov
out
jnp
leave
or
xchg
into
push
icebp
push
adc
or
mov
or
jbe
lret
mov
repnz
sti
les
aad
mov
sahf
andb
jnp
jb
mov
or
pop
or
stc
ret
imul
fsubrs
pop
xchg
popa
sub
shll
push
mov
lods
lds
addl
jbe
movsb
pop
aad
scas
lret
push
or
insb
lods
xchg
mov
mov
fcoml
loope
adc
cmp
out
pop
add
mov
xchg
out
enter
icebp
sub
dec
mov
daa
sub
lret
movsl
aad
cmp
cmp
ret
scas
pop
lods
pop
jbe
stc
out
pop
jo
jae
inc
leave
fnstsw
loope
mov
fmuls
sub
pop
mov
adc
jo
jecxz
push
dec
xchg
lret
incb
pop
push
outsb
loope
clc
sub
mov
pop
sbbb
nop
arpl
popf
lock
dec
mov
inc
mov
or
stos
dec
cmovs
cmp
dec
mov
mov
or
fidivs
sti
dec
push
test
pop
mov
ret
mov
push
sbb
pop
daa
push
mov
sbb
mov
dec
inc
push
jo
repnz
mov
jno
sbb
adc
and
aad
out
and
ljmp
lds
sbb
mov
add
xlat
pop
icebp
sbb
cld
movsl
sbb
inc
or
xchg
inc
pusha
fsubrs
push
ja
into
mov
inc
mov
ljmp
inc
and
adc
out
data16
mov
mov
sbb
push
push
lahf
xor
scas
lcall
mov
mov
stos
sbb
mov
dec
stc
jl
popa
test
or
lcall
loop
mov
cli
inc
movsl
mov
call
clc
dec
and
cld
or
popa
int3
pop
push
inc
xor
and
cmpsb
lcall
xor
pop
inc
or
or
mov
dec
inc
mov
xor
sti
out
add
xchg
mov
xorb
xchg
sbb
int3
fimull
add
dec
mov
sub
mov
imul
dec
lahf
xor
inc
adc
jno
inc
shrl
js
mov
dec
or
xor
mov
sbb
inc
insb
cmp
lahf
push
pop
cmp
popa
cmpsb
mov
cli
mov
fs
jbe
inc
sub
cmpsl
shlb
lahf
or
arpl
pop
sub
sbb
aaa
movsl
or
adc
out
adc
jge
mov
ret
sub
jne
lods
sbb
cmp
cwtl
das
pop
adc
repz
test
push
leave
fcoms
orb
int
adc
jp
pop
scas
xor
jne
in
pop
xchg
aaa
push
mov
cmp
lret
mov
mov
je
jmp
rcl
out
cmp
cmp
inc
scas
adc
aaa
push
push
adc
lcall
popa
sub
push
das
adc
jb
js
loope
sub
xor
shl
fwait
sub
fists
jle
std
leave
pop
scas
je
pop
cmpsb
mov
xor
add
sbb
dec
adc
lods
adcl
mov
aad
jno
or
cwtl
movsb
cmp
int
popa
std
and
add
dec
test
mov
xor
jae
cmpsb
dec
fcoml
outsb
inc
pop
xor
pop
xchg
lock
cmpsl
test
mov
imul
push
cmpsb
mov
repz
loop
mov
shll
insl
lea
cmc
mov
aas
cmp
cli
fimull
sbb
jb
mov
add
in
outsl
insl
xchg
shll
jne
mov
inc
test
cmpsb
sbbb
rorl
loopne
iret
cmpb
rcrl
cmpsb
and
mov
lods
jo
fstp
push
jnp
push
add
in
jl
sbb
adc
into
mov
adc
int3
ja
lea
cmpsl
and
sbb
fidivrl
push
mov
in
cmp
decl
push
cmpsl
adc
mov
xchg
frstor
cmp
loope
mov
or
mov
sub
sbb
mov
xchg
dec
inc
sbb
iret
mov
xor
inc
jne
inc
inc
cld
push
jo
sbb
push
inc
imulb
cli
xchg
add
pop
dec
fxch
mov
in
in
out
sub
push
mov
fdivrs
and
dec
aaa
ss
cmp
aas
push
outsb
dec
pop
scas
mov
imul
jb
pop
adc
push
je
jecxz
and
cltd
fidivs
imul
inc
sbb
inc
or
and
cmp
popa
aad
cmp
adc
fisttps
mov
std
in
lock
mov
cld
jge
lds
lcall
fidivs
lret
or
xlat
ljmp
adc
or
rcrb
add
imul
and
xor
pop
test
push
outsb
loopne
fs
xor
dec
lods
sub
mov
sbb
jle
test
mov
insl
bnd
xchg
outsl
and
adc
aas
jp
lock
inc
xorb
cmp
shll
pusha
bound
aaa
dec
subb
mov
sbb
or
addr16
cltd
loope
test
scas
test
ret
divb
pop
rorl
mov
inc
jecxz
lds
ret
pop
inc
loopne
call
sarl
inc
jge
sahf
fistpll
lcall
mov
jbe
iret
mov
cwtl
jge
push
divb
shl
xchg
into
out
sub
lahf
mov
int3
pusha
nop
outsb
stc
mov
dec
add
xchg
daa
in
or
int3
arpl
gs
add
mov
push
shrb
jl
pop
out
out
ret
psubq
mov
orb
pop
cltd
mov
jg
jp
add
fisttps
push
add
imul
pop
xchg
call
sub
mov
loopne
jbe
xor
pop
movsb
int3
std
xor
xor
gs
and
cmp
xlat
dec
ss
fstpl
lahf
fnstsw
inc
sar
aas
jle
mov
rclb
cmp
fyl2xp1
cmp
sbb
cmp
test
hlt
xchg
dec
add
pop
ffree
cltd
cs
mov
cmp
jae
test
stos
push
or
pop
jmp
push
jmp
imul
adc
sti
or
push
sti
xlat
enter
cmp
mov
jle
clc
jns
adc
jl
sti
cmp
mov
pop
cmp
pop
pop
adc
adcl
add
out
aad
mov
test
mov
in
xor
repnz
and
fbstp
fstpl
aad
ret
dec
mov
push
cmp
mov
add
dec
fistps
dec
fwait
adc
les
leave
nop
cmp
mov
arpl
push
push
push
xchg
mov
xchg
hlt
pop
mov
mov
call
es
pop
sar
jmp
xchg
aam
pusha
dec
push
movsl
outsl
jne
xlat
xor
out
and
xchg
in
jl
adc
xchg
fstp
jmp
repnz
hlt
or
xor
fs
mov
stos
lcall
push
je
cld
cli
fwait
mov
lcall
pusha
cwtl
daa
push
add
and
outsl
dec
sub
adc
popa
sub
fistps
sub
jle
pop
sub
or
sarl
mov
rcll
mov
ljmp
inc
ret
aam
inc
movsb
mov
mov
loopne
push
fildl
std
mov
mov
fcoml
sarl
cmp
insb
pop
cmp
sub
mov
lods
scas
mov
xchg
stos
int
xor
scas
fmuls
scas
incb
xor
or
sbb
imul
mov
imul
pop
cmpl
js
das
push
lahf
idivb
pop
ret
ljmp
and
or
xor
mov
les
sbb
test
cmpsb
fs
push
mov
mov
roll
push
aam
adc
mov
loopew
shll
cmp
add
sub
dec
fistps
dec
mov
cmp
pop
mov
mov
imul
mov
push
jmpw
jno
push
inc
mov
mov
sti
ss
sahf
push
mov
mov
lret
cmp
insb
aaa
push
cmp
imulb
stos
xchg
jae
lea
in
jo
inc
xchg
pop
pop
aad
pop
int3
rcrb
ret
enter
imul
xchg
bound
or
xchg
mov
mov
fwait
adcl
outsl
xchg
pop
sahf
jno
jp
jne
and
clc
ljmp
ret
inc
push
sub
iret
test
icebp
bound
xchg
push
aad
je
lea
pop
das
fs
jge
pop
xchg
jmp
sub
cmpsb
jo
pop
push
pop
shll
loopne
insl
enter
ret
fldenv
loope
int
or
inc
fsubl
push
loop
mov
popf
es
outsl
add
enter
push
lock
dec
cmp
rorl
add
js
cs
les
and
ret
imul
les
aad
push
or
sbbl
dec
insb
out
add
lods
inc
inc
and
pop
ffreep
inc
mov
iret
or
cltd
jo
sbb
movsl
xchg
loope
push
lock
insb
nop
fcoms
sbb
stos
or
sub
jmp
jae
sbbl
sub
cmpsl
pop
inc
imul
push
adc
cwtl
gs
xchg
inc
fs
pop
mov
in
repz
cmp
add
xchg
push
adc
lcall
jne
lea
xlat
rcrb
pop
adc
mov
int
xchg
fmul
mov
int3
pop
and
mov
sub
in
outsb
push
out
subb
roll
test
mov
icebp
xchg
fmul
idiv
std
push
lret
cmp
ret
add
aas
stc
xor
es
dec
inc
xor
popa
dec
jns
and
test
lret
inc
mov
sbb
ret
lock
ss
bound
es
and
xchg
inc
jnp
in
add
addl
mov
ret
mov
inc
test
shll
insb
xor
dec
fldl
into
push
add
jns
fisubrs
ret
push
sub
xor
ss
and
mov
adcb
mov
inc
or
pop
jo
sub
outsl
and
adc
lret
fisubrl
into
aaa
insl
aad
leave
aas
or
cmp
xorb
icebp
jl
dec
stos
cmp
and
dec
sbb
mov
nop
jne
sbb
mov
or
cwtl
mov
test
mov
das
sub
out
jno
jge
lds
mov
mov
sub
movl
cmpb
mov
jmp
cmpps
daa
cmp
push
pop
mov
push
xchg
jb
jl
mov
or
addr16
mov
pop
cld
jbe
mov
mov
in
lret
push
mov
push
stos
jnp
xchg
adc
mov
movl
mov
loopne
pop
ja
xchg
or
scas
or
mov
or
xchg
cld
pusha
sbb
sbb
cli
jns
push
jb
jmp
lods
pop
scas
fmull
sub
inc
enter
jns
shll
ret
addr16
leave
adc
push
and
xor
rcrl
cmpsb
xchg
popa
js
je
loope
daa
cld
js
pop
xchg
adc
fs
mov
out
xchg
test
ret
out
mov
inc
mov
dec
imul
popa
cmpsl
movsl
cmpsb
mov
sbb
movsb
rorb
pop
mov
jp
cs
scas
roll
stc
clc
pop
adc
daa
dec
xchg
add
xlat
aad
int3
mov
aas
testl
sahf
cli
mov
push
int3
push
dec
cwtl
jmp
mov
out
xor
xor
inc
jne
or
xor
lret
and
bound
sub
xor
pop
pushf
pop
or
lret
sub
inc
add
mov
jmp
sti
aad
repz
xchg
sub
jp
dec
pop
pop
call
and
push
in
push
mov
hlt
pop
mov
rol
mov
test
test
sub
insl
aad
jmp
ljmp
repnz
push
sub
jbe
jbe
jmp
add
jne
icebp
push
fs
jb
push
rcr
add
push
leave
clc
out
sub
pusha
xchg
popa
stc
jbe,pn
popa
inc
sti
xchg
add
inc
xor
adc
fsts
inc
cmpsl
jg
xchg
and
mov
push
and
testb
mov
clc
inc
push
mov
xor
cmpsl
jmp
fwait
insb
shll
enter
sbb
sahf
mov
or
mov
pop
or
out
sub
inc
call
into
sbb
mov
mov
iret
adc
mov
inc
add
bound
add
je
adc
leave
pop
inc
lret
jno
cwtl
and
mov
mov
les
testl
push
push
aam
inc
std
cmp
dec
xchg
ljmp
hlt
cmpsl
xlat
arpl
ficompl
sbb
sbb
stos
jns
sbb
sub
jmp
sbbl
aam
adc
addr16
inc
mov
in
pop
sti
int
push
lods
mov
test
add
jmp
and
pop
sbb
mov
mov
jmp
das
sbb
push
lret
mov
dec
ja
jnp
dec
icebp
cmc
pop
xchg
in
and
int3
pusha
xchg
cmp
lahf
pop
jecxz
rcrl
push
push
push
mov
sub
cmp
and
lcall
inc
imul
into
test
mov
xchg
mov
repnz
jge
or
mov
sbb
dec
cmc
or
js
cmpsb
iret
xorl
add
mov
imull
clc
je
sbb
mov
and
or
lret
aas
aaa
sub
sbb
sbb
jns
or
dec
shl
lahf
dec
fists
and
pop
shll
out
imul
cmpsb
test
dec
repz
adc
sub
in
dec
pop
sbb
adc
xor
rcll
dec
cmp
add
adc
lcall
sbb
sti
out
into
adc
lods
xor
rolb
cli
xchg
or
add
test
in
pushf
fidivrs
or
bound
xchg
fnstenv
xchg
xor
dec
mov
out
jl
fs
popf
movsb
sub
pop
popf
fisubrl
rcrb
fnstcw
in
enter
jle
inc
out
pop
jae
fisttpll
ficomps
addr16
dec
imul
loope
pop
lods
push
jns
std
xor
jno
cmpsb
mov
inc
inc
data16
out
out
test
test
mov
add
jmp
es
mov
jge
mov
and
fimull
sbb
sbb
inc
cmp
pop
aas
lret
mov
mov
loop
jns
lret
pop
fnstcw
aas
shrl
or
es
dec
pusha
cli
arpl
ljmp
outsl
jae
stos
outsb
add
cmp
xor
mov
std
aad
cmpsl
or
mov
push
ret
pusha
push
lret
inc
int
mov
fiaddl
test
push
shl
inc
mov
jne
cmp
bnd
addr16
xor
cwtl
xchg
aas
xchg
mov
push
mov
push
pushf
shl
inc
jmp
fildl
sub
pop
orl
mov
xchg
mov
and
test
dec
and
xchg
xor
mov
cmpsb
scas
mov
push
add
lds
jecxz
add
add
sbb
mov
arpl
arpl
orb
lods
push
jbe
push
test
test
sub
jnp
cmpsb
test
sbb
bound
xlat
xor
xor
arpl
jmp
roll
inc
lds
sub
fucom
fwait
inc
xchg
popa
dec
mov
xchg
xor
std
data16
mov
repnz
adc
out
ljmp
xchg
and
xor
mov
jmp
stos
pop
add
loop
cmp
mov
jns
push
and
adc
pop
xorb
or
mov
pop
jge
ljmp
insb
std
out
lods
int3
jge
or
mov
icebp
sti
iret
lcall
or
cltd
daa
lock
repz
push
out
add
push
bound
in
cmp
stc
adcl
push
inc
rcr
stos
fmuls
mov
and
repz
xchg
xor
scas
fadds
mov
dec
mov
aas
xchg
in
cmp
dec
dec
sbb
repz
xchg
sti
pushl
xchg
mov
mov
and
dec
sbb
cld
sahf
rcrl
xor
mov
and
bound
rcrl
stc
lahf
aas
scas
pop
out
xor
jb
into
out
arpl
mov
data16
fmull
cmpsb
jmp
sbb
mov
cltd
fisubrl
lods
lods
aaa
jge
add
imul
dec
shlb
jae
sbb
rol
stos
std
inc
pop
xchg
mov
int
hlt
gs
cli
cmp
dec
push
cmp
or
mov
xor
jecxz
dec
cli
pushf
out
sbb
adc
jne
and
repz
call
xchg
jecxz
ljmp
jmp
xchg
fadds
dec
adc
outsb
test
cmc
shlb
cmp
decb
push
lret
sub
sbb
push
push
les
sbb
ss
out
add
push
xchg
inc
sbb
in
jb
or
mov
loopne
test
loope
loop
add
lret
adc
jb
bnd
mov
rcrb
popf
cmp
cli
testl
mov
lret
repnz
fstl
ds
adc
loope
repz
or
je
and
sub
mov
fidivs
mov
mov
or
jp
cmp
shll
sbb
mov
dec
add
push
fisttpl
fisubl
daa
mov
mov
inc
aam
xor
ss
das
test
outsl
imul
cmp
add
sub
stc
in
gs
fs
nop
push
sub
popa
push
addb
sbb
xchg
fcmove
xor
jecxz
pusha
outsl
mov
fnsave
mov
lahf
sub
xchg
stos
inc
aas
subl
add
pop
iret
sti
dec
mov
ret
fwait
pop
popa
add
inc
push
inc
pop
cmpsl
dec
mov
adc
mov
push
and
push
into
or
fucomi
leave
jnp
bound
nop
jecxz
xchg
jecxz
sub
dec
jb
out
mov
outsb
hlt
dec
lock
add
jmp
dec
lret
pop
push
push
jae
incb
dec
pop
jbe
xor
ror
xchg
jne
lret
jg
push
push
or
not
push
pop
and
mov
mov
in
xchg
pop
xor
call
xchg
mov
aas
or
sbb
and
loope
mov
repnz
inc
jg
stos
or
jle
subl
shl
xor
or
ljmp
fnstcw
fidivs
jo
inc
dec
mov
cmpl
xor
and
mov
dec
add
int
push
cmp
push
test
mov
cmp
xor
fs
dec
add
lods
mov
xchg
cltd
fmuls
inc
aaa
fwait
pop
sbb
lret
jge
lcall
sti
out
daa
test
or
out
cmp
dec
aam
push
jmp
xchg
xor
sbb
pop
jp
xchg
push
in
and
sub
push
pop
cs
mov
push
pxor
fcomps
addr16
inc
sbb
adc
sbb
jp
xchg
das
xor
ja
pop
aas
js
dec
enter
jmp
jle
sbb
and
push
stos
std
jp
icebp
lods
in
xor
sbb
push
pop
adc
jl
jnp
cmp
ljmp
mov
jge
dec
adc
stc
sbb
in
pushl
mov
repnz
sti
scas
out
xor
in
ss
add
dec
mov
inc
jmp
call
arpl
or
dec
test
shl
popa
out
sub
inc
mov
sbb
inc
movsl
pop
fnsave
adc
mov
pop
ja
out
fcmovne
xchg
mov
push
sub
jae
mov
push
push
arpl
xor
mov
sbb
push
push
dec
movaps
xor
xlat
inc
ss
aam
push
jmp
call
push
int3
sub
cmpsl
cmpsb
pop
jae
xor
ret
inc
and
test
lret
out
mov
jns
mov
nop
test
adc
push
fstl
es
push
movsl
not
mov
insb
mov
loop
add
cmp
ret
push
inc
addr16
lds
stc
push
mov
cs
cltd
cs
pop
jl
dec
inc
cmpsb
xor
cmp
mov
mov
xchg
sub
push
jle
pop
pop
jmp
out
loop
je
jle
or
mov
jecxz
push
repz
mov
push
mov
insb
ds
std
loopne
scas
mov
mov
cmp
mov
mov
push
mov
jl
push
addb
push
xchg
cmp
push
stos
cmp
lret
cld
lcall
sarl
pop
pop
pushf
rclb
add
xchg
jno
sbb
enter
insl
mov
out
and
dec
repz
rclb
fs
ffreep
fldenv
push
mov
fiadds
lret
mov
cltd
imul
mov
xchg
sub
ljmp
inc
inc
inc
rclb
pop
xchg
ss
das
std
mov
xor
das
les
sahf
and
jnp
or
sub
divb
pop
sbb
mov
stc
lcall
repz
fsubrl
cli
sti
and
imul
mov
lret
pop
dec
stc
dec
nop
inc
ds
js
idivl
cwtl
xor
hlt
in
push
adc
es
mov
or
push
xor
iret
cmp
xor
cltd
in
in
in
nop
mov
shr
gs
jo
fcmovnb
sbb
cmp
sub
fsub
adc
test
icebp
xchg
es
arpl
inc
dec
test
mov
xor
xor
outsl
cmp
mov
push
cwtl
mov
pop
xor
inc
fldenv
inc
sbb
jp
test
or
fcomip
gs
pop
adc
xchg
jecxz
js
movsb
add
and
mov
addb
std
loope
pop
push
xchg
inc
jnp
cmp
and
dec
push
cmp
and
fcmovu
jb
scas
in
jp
pop
int
fwait
or
pusha
inc
xchg
loope
adc
jp
cli
in
jbe
movsb
xchg
sarb
jecxz
cmp
xor
pop
mov
xchg
adc
dec
or
adc
dec
jae
cltd
dec
lahf
jo
leave
adc
xor
inc
xor
and
adc
outsb
notl
arpl
push
mov
jmp
mov
call
mov
popa
dec
leave
sub
push
or
ss
push
and
aam
cmp
add
inc
jle
jnp
shl
adc
or
mov
cmp
stc
hlt
out
pop
jg
test
mov
sbb
loopew
and
mov
nop
iret
loope
xchg
lret
aam
div
xchg
xor
stos
imul
aas
jmp
jbe
or
mov
mov
lret
xor
pop
ss
mov
aam
pop
std
pop
rclb
or
dec
shlb
loope
insb
test
faddl
pop
insb
sbb
adc
aad
mov
and
adc
pop
pshufw
cmp
cs
roll
out
sub
xchg
pop
push
xchg
cmc
call
in
dec
clc
cmp
in
sbb
xlat
xor
jmp
jp
or
idiv
pop
adc
pop
int
cmpl
out
add
mov
cmpsb
test
cwtl
inc
cli
inc
hlt
cmpsl
adc
daa
ret
ret
and
imul
cmp
lock
mov
cmp
fistpl
fcomps
nop
mov
push
jmp
lahf
push
jbe
in
inc
and
fsubr
mov
dec
mov
mov
shlb
adc
scas
shr
push
pop
icebp
xchg
shlb
pop
daa
insl
jb
les
les
shrb
jno
roll
mov
jp
in
or
sbbb
rcrl
aaa
adc
lret
xchg
bound
inc
push
pop
rolb
arpl
imul
pop
dec
push
mov
sbb
inc
adc
shlb
cmpsb
inc
mov
pop
cmc
dec
xor
lds
jp
test
jne
lods
xor
imul
rolb
loope
mov
cmp
xchg
adcb
mov
aaa
out
add
std
lret
cmp
incb
xor
fcmovu
add
pusha
fcomps
or
xor
fiadds
adc
bound
std
in
std
push
mov
std
xlat
cmpsl
fnstcw
scas
jle
push
repnz
push
mov
inc
repnz
push
jno
pop
xor
mov
mov
sbb
or
fimuls
out
inc
das
xchg
repnz
xchg
cmp
jno
adc
pop
std
add
add
pop
cmpsl
mov
cmc
fisttpll
and
xchg
mov
out
mov
leave
dec
xchg
lods
fcmovnb
sbb
sbb
push
sbb
das
sbb
jl
mov
jb
cmpsl
or
jo
jl
shll
sub
nop
rcll
adc
dec
or
and
or
aad
add
outsl
jae
xor
cmp
stos
into
jle
jae
dec
mov
mov
cmc
pop
jnp
adc
inc
fmulp
mov
xor
fsubr
mov
sbb
xchg
inc
fstl
mov
inc
aas
push
into
xor
mov
xor
xlat
int
movsb
or
dec
cmp
dec
cmpsb
std
add
js
add
lds
in
loop
ficompl
add
mov
add
push
in
fsubs
popa
and
dec
cwtl
sub
add
cmpsb
das
out
in
pop
stos
mov
nop
ret
add
push
cwtl
clc
and
mov
add
movsl
aaa
scas
fwait
mov
adc
insb
incl
cmp
push
mov
push
add
testb
xor
xlat
call
pop
lret
test
mov
into
sub
mov
call
filds
sbb
insb
dec
mov
sar
cmc
cmp
leave
test
insl
mov
sbb
lcall
mov
sbb
xlat
xchg
mov
xor
pop
cmp
lahf
pop
pop
dec
pusha
mov
pop
xchg
mov
mov
iret
jle
mov
sub
in
xchg
xor
stc
shll
outsl
push
daa
out
xchg
mov
push
mov
scas
pop
or
sub
mov
jle
repz
movsl
xor
notb
ss
jge
pop
rorl
mov
les
into
insl
lods
mov
int3
and
mov
mov
cmp
inc
xchg
sbb
push
arpl
dec
out
popf
mov
sub
pop
mov
pop
mov
xlat
cmpl
jae
aas
jns
xlat
sbb
int3
adc
loop
fwait
push
bound
imul
rclb
mov
cmp
dec
lret
test
test
sub
in
push
adc
jl
xchg
and
jo
loopne
es
or
cs
aad
int3
jg
sub
shll
mov
adc
add
push
sahf
test
mov
loop
push
scas
jne
in
imul
xchg
test
xchg
arpl
xlat
cs
add
cltd
or
sahf
dec
add
sub
xchg
push
lret
stos
xchg
xor
test
dec
push
sbb
bnd
in
add
iret
xchg
push
pop
aam
push
sbb
or
add
je
jne
call
pop
adc
stc
es
pop
jg
jbe
push
fldt
pushf
adc
cld
test
into
fisubl
push
les
int3
fdivrs
sub
gs
popa
push
pop
sbb
dec
pop
pop
xor
rorl
je
out
push
fdivr
das
test
inc
sbb
push
jge
or
mov
dec
xor
int
out
roll
adc
adc
xor
jae
lret
mov
xchg
mov
and
jae
or
sbb
stc
mov
das
inc
inc
xlat
sbb
or
fucomip
shr
sub
std
push
or
or
inc
mov
mov
lock
scas
into
das
push
lods
dec
add
adcl
and
or
pop
popa
add
sbb
jecxz
iret
loopne
dec
aaa
loope
xchg
cmc
cltd
and
mov
cli
test
insl
repnz
inc
rcr
xchg
push
testl
jmp
mov
js
sub
dec
cld
mov
pop
ds
cmpsb
mov
dec
add
or
and
mov
lret
in
push
cld
or
aas
stc
fwait
adc
dec
dec
dec
pop
add
fisubs
push
scas
or
mov
sbb
ror
push
add
mov
mov
jnp
mov
pop
in
jns
push
dec
add
sub
jg
cmp
std
ret
cwtl
int
es
sti
cmc
jnp
xchg
mov
movb
dec
fldcw
js
lods
stc
jg
fwait
jb
mov
incb
aad
mulb
jne
rcrb
lods
mov
sub
jmp
mov
or
das
lret
sub
cld
mov
push
test
push
mov
jae
test
jbe
pop
xor
movsl
addr16
mov
lock
mov
dec
sbb
jno
sarb
enter
mov
or
cmp
xor
xor
dec
sbb
outsb
repz
insl
pop
ss
jne
jb
in
add
and
adc
pop
mov
das
jecxz
dec
or
shl
sti
and
idivl
rcrl
fdivrl
leave
in
fs
rorl
jl
lods
xchg
lret
ds
mov
cld
add
loope
outsl
popa
cmp
inc
imul
xor
es
cmpl
imul
dec
stos
fidivrl
pop
icebp
arpl
in
jb
adc
xchg
or
pop
mov
cmp
loope
or
mov
mov
inc
rcll
mov
mov
lret
mov
and
cltd
cmp
jle
data16
sti
adc
aam
sub
stos
push
aad
mov
jb
scas
mov
xchg
jl
pop
testl
les
fwait
push
push
mov
or
push
inc
inc
dec
cmp
sub
inc
test
inc
cwtl
loopne
pop
push
push
push
dec
mov
xor
cmp
xchg
or
out
movsl
push
aas
push
mov
aas
sub
test
addr16
pop
loope
xor
mov
pop
shll
sub
push
jmp
jl
js
inc
xor
pop
cmp
sub
cmp
fldlg2
imul
jmp
xchg
xchg
clc
inc
jp
leave
pop
and
nop
shrb
shl
and
mov
leave
sub
in
stos
es
dec
mov
xor
cmc
adc
lahf
add
dec
cmp
mov
out
xor
inc
dec
jecxz
mov
fmuls
jmp
aad
xorb
push
mov
cmc
pop
test
or
popa
inc
jnp
das
in
stos
cltd
push
shlb
cmpsb
lock
pop
push
adc
sti
push
or
mov
cmp
not
mov
scas
cmc
or
jle
pop
adcl
hlt
cmp
test
adc
inc
jecxz
mov
das
je
or
std
add
jle
fcoml
xchg
mov
add
lea
inc
xor
push
mov
dec
xor
mov
or
jle
jnp
dec
rcll
fs
fidivrl
mov
xor
fnstcw
push
cmp
xchg
or
push
xchg
mov
xchg
dec
mov
mov
push
dec
push
cmp
sbb
mov
push
jl
xchg
ret
fcmovbe
ds
test
and
mov
lds
pusha
mov
xchg
in
popf
dec
cmp
test
movsb
xchg
inc
out
and
cmpsb
das
cs
aas
pop
fstpl
dec
pushaw
outsl
jg
or
mov
mov
aam
inc
sub
filds
or
push
push
lods
pop
push
loope
cmp
push
enterw
inc
lods
stos
push
jb
fisttpl
loopne
pop
sbb
add
jp
push
jecxz
cmp
insb
or
jg
rcr
mov
shll
rep
mov
cmpsl
lcall
test
mov
sahf
out
xchg
rclb
sub
pop
fisubl
int3
shll
shrb
out
scas
or
scas
jp
mov
test
adc
mov
dec
mov
stc
mov
test
mov
mov
jb
aam
ror
mov
pop
cmp
scas
and
popf
loopne
ret
mov
mov
scas
into
inc
loope
into
mov
dec
push
icebp
js
mov
jns
push
iret
mov
mov
mov
mov
addr16
xchg
sbb
lods
pop
call
loop
mov
adc
repnz
jp
test
fcmove
icebp
pushl
leave
inc
jmp
rcl
mov
out
mov
mov
es
push
int
popf
dec
adc
mov
sbb
dec
stc
orl
mov
in
cmp
pop
inc
mov
pop
insb
sbb
test
fcmovb
dec
shl
xlat
in
cwtl
and
pop
bound
jae
inc
loope
dec
pop
pop
dec
movsl
movsb
cmp
inc
mov
movsb
lea
stc
popa
ljmp
test
or
add
push
inc
or
mov
ss
nop
jecxz
pushf
inc
frstor
pop
pop
pop
sahf
push
mov
xor
jmp
or
xor
fimuls
adc
stc
test
in
xor
fdivrp
mov
xchg
rolb
xchg
sub
add
jl
xor
scas
mov
aas
fxch
or
hlt
negb
stos
addb
cmp
fnstcw
jo
sub
jno
ret
xchg
lock
mov
lea
sbb
pushf
jmp
cwtl
loopew
cmpsb
push
push
in
test
push
repz
jg
pop
enter
icebp
push
jns
lods
fwait
sahf
nop
out
xor
daa
inc
imul
inc
dec
ret
cld
jecxz
and
pop
lret
and
pop
mov
and
add
mov
loop
nop
test
xchg
popf
lret
insl
dec
in
mov
test
push
or
mov
cmp
mov
xchg
loope
cmp
ret
cmp
test
sti
mov
mov
sbb
pop
lods
lea
jb
testl
jnp
xchg
pushf
mov
imul
and
fcomps
mov
aam
out
jmp
inc
out
fistps
mov
out
test
dec
sub
popa
push
and
and
inc
pop
cmp
mov
xchg
xchg
js
jae
outsb
aas
cmp
and
stc
pshufw
test
je
xor
out
orl
add
mov
mov
mov
out
sti
clc
shr
cmpsb
repnz
notb
jmp
mov
ret
nop
push
test
into
jle
movsb
cmp
and
push
leave
push
arpl
loopne
inc
pop
iret
into
mov
aad
sub
cli
jmp
lds
and
dec
stos
out
jne
push
cli
mov
imul
lods
gs
lahf
call
movsl
jb
xchg
push
insl
clc
adc
dec
cmp
sbb
mov
repz
shll
icebp
mov
sbb
dec
out
rolb
ja
icebp
out
xor
mov
xchg
push
rorb
mov
or
fsub
push
dec
cmp
xor
sub
in
push
jo
mov
add
push
push
in
hlt
cmc
jne
dec
jne
repz
movsl
dec
pmullw
jb
stos
pop
sub
lods
cmp
cltd
jno
inc
push
jb
mov
dec
push
addb
dec
xchg
jbe
jl
mov
adc
mov
stos
sarb
jae
jge
mov
sbbb
loope
mov
mov
jb
test
sub
inc
nop
mov
mov
push
pop
mov
je
cli
inc
inc
cmp
xchg
adc
mov
push
in
xor
imul
in
jno
lcall
cmp
arpl
adc
pop
icebp
ja
mov
xchg
sarl
or
mov
push
add
xchg
xor
sub
xchg
ljmp
outsl
aam
pop
push
cmp
loope
pusha
daa
dec
cmpsb
jnp
sub
inc
insl
lret
loope
cmc
fmull
xor
mov
flds
addr16
loopne
sbb
pop
push
add
cmpl
sti
ds
sub
jmp
andb
or
pop
jl
ret
loop
pop
shlb
or
aam
imul
mov
or
xchg
scas
push
jbe
imul
add
mov
mov
jnp
mov
pop
add
pop
jo
push
std
les
xchg
sbb
hlt
pop
jl
and
inc
pop
ficompl
cmp
jmp
cltd
pop
loope
iretw
mov
jo
insb
fcmovnb
test
jge
jnp
sbb
pop
cwtl
pop
rorl
ss
mov
in
sar
jae
in
scas
ret
loope
std
adc
int
in
in
out
faddp
jns
jmp
fsubr
mov
sub
jb
push
cmp
xchg
sub
mov
cltd
xchg
mov
ss
xor
jae
fstl
push
sbb
dec
out
mov
and
adc
push
and
pop
cmp
cmpb
hlt
lret
jp
push
test
sbbl
pop
pop
mov
in
mov
cmp
or
lods
aam
cmp
movsl
xchg
adc
ja
out
xlat
mov
stos
fildll
pop
xor
jmp
pop
dec
xchg
or
icebp
lds
fcomi
call
data16
pushf
lea
mov
arpl
scas
push
mov
lret
es
jl
sbb
movsb
inc
rclb
inc
sbb
addr16
rorb
lock
pop
fwait
xchg
popa
sub
pop
andb
lret
add
push
mov
ret
add
icebp
dec
les
pop
mov
add
scas
je
pop
stos
xchg
cmp
inc
xor
movsb
push
pop
mov
out
out
jecxz
jno
movsl
inc
push
mov
imul
sub
stc
mov
fistl
xchg
cmp
push
cmc
xchg
inc
mov
cmpl
xor
mov
mov
bound
rorl
xor
int
stos
pop
sti
cmp
cmpsl
cmpsb
mov
outsl
xor
loope
or
mov
push
out
lret
cmp
icebp
xchg
add
and
mov
pop
mul
add
faddl
insl
mov
jp
mov
lcall
aaa
loope
cmp
dec
mov
and
lret
sahf
mov
and
insl
and
into
int
ds
jne
cltd
rcll
inc
sbb
js
and
cmp
sub
nop
popa
frndint
mov
pop
cmpsl
icebp
fisubrs
mov
sub
pusha
aas
aam
les
cs
mov
mov
sub
inc
push
xchg
xchg
xchg
push
adc
add
cmpsl
pop
aam
pop
push
mov
jle
add
xor
cmpsl
movsb
sahf
je
test
cli
stos
mov
dec
clc
jmp
xor
dec
sbb
fildll
sub
je
sbb
fistpl
or
out
cltd
dec
dec
xchg
sub
xor
lea
pusha
daa
mov
sub
or
inc
mov
inc
lahf
std
dec
das
mov
je
mov
and
push
jne
call
xor
orl
cmpsl
sub
jecxz
mov
mov
and
addl
inc
jl
sbb
jp
in
and
in
sub
in
ljmp
adcl
fcmovne
dec
and
shrb
roll
adc
and
pusha
dec
shl
movsl
fmuls
std
stos
out
aas
and
jg
icebp
dec
mov
pop
loop
pusha
shrb
mov
divb
push
test
sub
and
dec
hlt
loop
and
std
pop
mov
xor
sbb
xor
sub
xor
dec
mov
mov
movsl
scas
add
in
rcrl
and
and
push
fistpl
and
push
lds
nop
mov
and
aam
mov
out
das
push
aam
push
bnd
fcoml
jne
cmpsl
cmp
jmp
jb
out
sbb
flds
aam
fdivs
stos
fisubrl
cmp
outsb
and
ror
in
enter
ja
ret
mov
cmp
std
scas
cmpsb
ret
push
cmpsl
jbe
push
mov
jp
push
pushf
pop
mov
cmpsl
sar
sbb
or
outsl
sbb
pop
gs
inc
arpl
add
sub
lret
and
add
movsb
lahf
xlat
std
pushf
repz
push
xchg
xchg
jae
sbb
and
xor
sbb
add
rcr
daa
mov
sbb
push
xor
pop
data16
dec
lock
loop
add
outsl
xchg
scas
inc
dec
pmaxsw
inc
cli
loope
sahf
adc
jb
jbe
jnp
cmp
aam
mov
dec
adc
sbb
inc
pop
mov
ja
xchg
mov
nop
test
xchg
mov
inc
fisubl
mov
add
test
aaa
jg
sub
pop
mov
mov
mov
cmp
pusha
cmp
daa
std
lret
cmp
movhps
push
jmp
jo
in
mov
or
lahf
mov
push
mov
or
fisttpl
cltd
fiaddl
lock
das
and
mov
or
cld
lret
es
cmp
inc
and
sub
lock
shrd
mov
push
outsl
adc
stos
adc
mov
mov
mov
inc
mov
pop
mov
xchg
pushf
mov
in
jg
ss
mov
sbb
lds
mov
adc
fs
inc
sbb
jmp
sub
push
adc
fsubrs
mov
pop
sub
mov
and
out
inc
fdivs
jo
mov
pop
test
jg
mov
pop
cld
imul
cld
clc
stos
imul
aaa
adc
cmp
jg
xor
jle
add
cmc
mov
loop
test
aam
fstpt
sahf
out
push
insb
mov
clc
iret
aad
ret
insb
jno
lret
cmp
fstpl
pop
sbb
clc
out
testl
pop
mov
lret
bound
lods
pop
add
sbb
xchg
jge
imul
push
and
xacquire
adc
jb
outsb
add
mov
and
aaa
jg
and
fidivl
sub
mov
cmpb
pop
pop
inc
adc
push
leave
out
dec
sub
jns
mov
fs
out
rclb
outsb
repnz
ret
jnp
movsl
adc
out
sub
lcall
mov
inc
lods
inc
jns
rcrb
and
idivb
ret
mov
xchg
add
push
ljmp
mov
lret
xor
xchg
and
mov
shrb
jo
sub
add
and
or
test
and
mov
shrb
mov
leave
jo
stos
test
mov
sub
dec
xor
pop
ja
pop
push
jl
cmp
test
jl
xor
int3
fcompl
rolb
fsub
xlat
test
xchg
inc
cwtl
notl
cmc
or
adc
inc
cmp
stos
clc
imul
lock
imul
pop
pushf
dec
incl
pop
nop
mov
add
adc
add
adc
int3
out
pop
ret
and
adc
lods
mov
dec
scas
pushl
push
sub
xchg
and
fmull
ljmp
jecxz
pop
lret
stos
fsts
mov
sub
mov
dec
sub
adc
mov
jp
addr16
movsb
fistpll
sub
sbb
dec
cmp
push
daa
test
aaa
mov
insb
mov
or
or
fcomps
dec
inc
xor
pop
dec
mov
pop
lret
nop
xor
push
push
xor
sbb
leave
ret
push
fistps
add
mov
jg
sub
pop
xor
cwtl
jecxz
adc
or
adc
mov
dec
cwtl
add
cmp
pop
repz
inc
roll
iret
cld
idivl
jno
sub
xchg
hlt
jns
outsb
cwtl
inc
data16
mov
mov
cmpsb
movsb
mov
in
addr16
test
mov
push
mov
mov
cmp
aaa
mov
or
ds
hlt
mov
in
cs
insl
xor
lods
pushf
push
aad
or
sub
outsl
fdivrs
daa
ds
fstps
push
pushf
pop
in
add
popa
out
shlb
stos
movsl
inc
mov
mov
jp
jno
add
lods
cmp
adc
push
adc
xor
dec
mov
mov
mov
cmp
push
fstl
adc
sub
in
cs
sub
shlb
out
xor
mov
push
push
repz
sbb
jne
cmp
lods
jecxz
cmp
divl
or
mov
jae
jecxz
jmp
cmp
cmc
arpl
hlt
loopne
int3
xor
ret
push
pop
sbb
xor
or
adc
mov
scas
and
gs
xchg
jo
jmp
mov
xorb
and
mov
pop
push
pop
in
sbb
xor
jnp
xchg
mov
pushf
dec
add
insl
jb
sarb
or
dec
je
dec
jnp
push
mov
add
push
stos
sub
int
sbb
mov
lods
pop
aad
insl
add
jge
jmp
or
icebp
adc
pop
cmpsb
inc
jo
arpl
fs
out
lock
mov
les
jnp
jns
in
fldcw
and
lret
cmpsl
add
sbb
mov
sub
in
sbb
lods
mov
movsl
cld
repz
test
loope
pop
xchg
jle
out
push
mov
es
sub
inc
outsb
imul
mov
pop
adc
push
inc
or
hlt
mov
sub
in
cmpsl
or
decl
in
pop
fiadds
fstpl
adc
lret
jb
leave
stos
add
lahf
insb
mov
sbb
dec
into
stc
cwtl
push
sub
hlt
movsl
jne
loopne
pop
jns
mov
pop
xor
fcoml
xchg
push
push
xchg
pop
add
inc
jl
negb
cmp
lahf
jmp
sbb
lcall
xor
lods
xchg
lock
leave
lods
jb
inc
mov
adc
movsb
cmpsb
daa
pushf
std
in
in
cmp
lods
adc
stos
adc
sbb
add
jno
push
test
xchg
repnz
movsl
mov
aad
ret
add
lret
dec
loopne
or
cmp
push
add
clc
adc
jbe
call
mov
sub
jmp
lret
ret
lea
sub
or
cmp
aad
lods
int
outsl
test
insb
pop
stos
std
aas
fildll
daa
flds
lret
test
sub
bound
mov
or
mov
push
jno
dec
add
ja
cmp
mov
add
jle
shl
push
push
mov
mov
jg
int3
jbe
push
test
pop
inc
int
xchg
roll
push
or
jmp
pushf
mov
sub
push
adc
or
je
and
stc
ss
xchg
pop
aad
pop
add
sbb
cld
and
or
xor
adc
enter
int
ja
sub
mov
lock
cmp
out
enter
sbb
cmp
ljmp
lcallw
out
add
adc
inc
xchg
rorl
loop
push
xchg
movsl
xchg
enter
add
and
sub
mov
xor
out
push
dec
cmpsb
mov
cmc
fs
push
std
int
sub
flds
cli
cmpsb
ds
dec
adc
outsl
mov
jnp
sahf
loope
add
pop
jmp
and
mov
adc
add
lret
pop
dec
add
cltd
push
inc
je
inc
cmp
popa
lret
sub
dec
test
insb
scas
mov
mov
fstp
pop
fwait
jle
mov
int3
mov
xor
fs
stc
daa
in
lods
dec
or
icebp
push
out
int3
mov
repz
out
test
imulb
loopne
lea
cmc
sbb
push
mov
add
xor
cmc
test
pop
and
adc
arpl
hlt
jae
test
std
adc
xor
loopw
daa
jne
es
fistpll
aam
xor
jo
ljmp
or
sbb
dec
add
in
add
test
fisubrl
dec
mov
shrl
test
insl
enter
iret
xchg
jno
pop
push
fadds
repnz
das
lods
outsl
xchg
das
ficompl
cltd
sub
ret
mov
or
in
sub
jp
fnstsw
in
dec
push
pop
jbe
ret
out
inc
nop
test
lds
sub
inc
in
pop
lods
adcb
lods
or
je
pop
repnz
mov
sub
add
mov
dec
mov
sub
inc
adc
fnstsw
insb
push
leave
mov
shlb
add
mov
test
lcall
dec
outsb
hlt
dec
or
lock
outsb
imul
ret
xor
mov
jo
and
or
out
sub
add
pop
ja
mov
scas
push
leave
bound
jb
pushf
dec
aam
dec
insl
cmp
inc
jge
mov
adc
call
mov
and
push
lcall
push
mov
bound
dec
inc
insb
mov
leave
cli
repz
cld
pop
decl
scas
lea
mov
outsb
inc
adc
stos
jge
xchg
fcoms
sbb
lcall
mov
or
xor
rcrb
shlb
ret
pop
jno
lods
cmpsb
xor
imul
jmp
jmp
daa
xor
mov
adc
popa
push
mov
push
mov
xorb
and
clc
mov
nop
loop
decl
mov
fistpll
pushf
sub
cld
das
loopne
xchg
out
xchg
push
push
pushf
imul
rcrb
cmp
xor
outsl
pop
shlb
loope
add
jp
pop
jae
fwait
jp
movsb
out
repz
jge
and
and
cli
xor
cwtl
jns
jno
out
lock
outsb
inc
lret
jbe
xchg
dec
mov
pop
adc
mov
or
leave
xchg
ja
mov
lcall
repz
mov
mov
and
jp
rorb
cld
cmpsb
test
icebp
scas
add
and
icebp
in
pop
xchg
scas
inc
lods
cmp
aas
ret
inc
add
mov
pop
dec
ret
sbb
pop
fidivrs
iret
mov
cmp
data16
inc
lock
jo
push
mov
inc
ret
inc
aas
pop
jp
cld
out
push
sbb
out
popf
mov
sub
cmp
hlt
sbb
xchg
jl
inc
in
and
outsl
ljmp
push
lds
push
into
xchg
add
xchg
enter
dec
ficomps
mov
mov
sti
xor
mov
and
xor
xchg
push
mov
in
and
ds
ficomps
aas
leave
push
scas
cmp
pushf
fimull
mov
or
add
jb
cmp
outsl
xor
xlat
or
sbbb
dec
imul
pushl
imul
js
sub
idivl
insb
outsb
shr
cwtl
and
xchg
pop
sbb
loop
lret
int3
iret
mov
orl
test
mov
cmp
adc
lods
jle
daa
sti
sbb
fwait
cmpps
cmp
movsb
into
sbb
cmpb
outsl
add
xchg
xor
xchg
in
push
and
sub
sub
or
mov
ds
clc
inc
xchg
imul
adc
sbb
pusha
dec
loop
push
in
mov
mov
push
popa
rcrb
jns
dec
inc
enter
js
pop
dec
push
and
inc
jnp
scas
or
mov
outsb
ja
popf
add
and
lahf
faddl
dec
xlat
sbb
addr16
repnz
out
out
cmp
fsubr
add
popa
inc
jmp
into
into
pop
push
lret
mov
fmuls
pop
loope
repnz
adc
xchg
mov
scas
or
aas
rcrl
jno
or
lahf
jge
shrl
push
jl
je
push
cmp
ret
jmp
pop
in
inc
pusha
cmc
rcrl
pop
sbb
adc
in
cmpsb
or
add
ds
cmp
lea
dec
ljmp
pop
add
mov
and
outsb
sbb
dec
lea
imul
sbb
in
pusha
add
rclb
push
loope
pop
xchg
dec
mov
loope
das
inc
lds
in
pushf
mov
loope
and
cmp
nop
ss
mov
leave
ret
pop
jmp
shrb
sbb
test
mov
mov
mov
int3
mov
mov
fwait
cmp
push
lcall
imull
mov
cmp
decb
sti
mov
ficoml
inc
in
mov
andl
lahf
mov
rclb
lock
xchg
pop
pop
test
repz
mov
nopl
mov
aam
inc
jecxz
add
jns
jb
xchg
xchg
push
dec
fs
sub
test
adc
or
xor
pop
mov
add
add
jmp
fidivrl
and
sbb
inc
movsb
mov
push
push
add
rclb
or
mov
inc
mov
icebp
icebp
lea
add
fwait
xchg
add
jecxz
add
mov
loop
push
enter
mov
mov
fnstsw
push
iret
sbb
ljmp
pop
mov
loop
movsb
jbe
or
mov
je
fs
nop
inc
pop
add
xor
fdivl
popf
into
out
pop
je
stos
sub
clc
mov
mov
out
enter
mov
inc
sbb
test
and
sub
push
xor
fldenv
dec
sub
aaa
cwtl
loope
mov
sub
mov
aaa
xchg
bound
fbstp
mov
addb
cmp
dec
cwtl
push
inc
jnp
int3
test
lret
pop
push
test
fs
stc
pop
movsb
mov
mov
fdivrl
cli
mov
jmp
enter
jo
or
das
cmp
xchg
popf
bound
jo
push
test
dec
xchg
in
loope
test
jmp
fldt
dec
mov
rcll
loopne
cmc
or
dec
leave
dec
cmpsl
push
pushf
mov
les
sub
stos
adc
repz
outsl
adc
sbb
adc
into
in
and
jnp
fldl
jnp
add
jp
mov
pop
inc
pusha
or
mov
sahf
mov
pop
sbb
and
inc
int3
fists
fdecstp
packsswb
pusha
add
out
add
dec
jnp
bound
xchg
and
sub
inc
rclb
out
cmp
sbb
out
jne
dec
xchg
push
rcl
negb
cld
or
mov
mov
ljmp
push
repnz
cmp
loopne
push
xchg
xchg
push
adc
xchg
repnz
mull
cltd
jmp
jl
pop
mov
lcall
inc
adc
bound
mov
into
pop
cmp
loope
nop
jmp
dec
mov
jne
sub
cmp
pop
pop
dec
push
pop
mov
popf
mov
inc
sub
mov
and
ljmp
divb
jecxz
insl
dec
inc
scas
leave
sti
gs
sbbb
mov
addr16
test
movsl
mov
jo
test
lret
add
sbb
jbe
mov
push
testb
inc
sub
adc
mov
push
lods
mov
jmp
arpl
push
sub
and
pop
mov
cmp
pop
mov
push
fisubs
and
and
enter
sub
in
lret
repnz
jge
roll
inc
cs
pop
xor
cwtl
ret
insl
arpl
lea
jecxz
cli
mov
sbb
jge
push
lret
dec
js
jb
and
stc
ja
movq
and
jo
jno
mov
loope
mov
rcrb
xchg
jb
sbb
and
push
push
sbb
int
fdivl
mov
adc
fs
xor
flds
aaa
lods
jne
imul
repnz
and
negb
sbb
ds
jae
adc
pop
xchg
cmp
mov
or
push
jp
push
mov
fcmovne
ret
loop
dec
ret
mov
hlt
cmpb
rcrb
push
mov
mov
int
or
dec
sahf
xor
adc
sub
dec
pop
ljmp
pop
xor
inc
mov
cmp
subl
sub
cmp
andb
sub
and
arpl
and
xchg
scas
jecxz
pop
nop
insl
mov
cmp
mov
lret
push
mov
in
mov
aas
mov
jno
int
cltd
mov
inc
push
xchg
jecxz
pop
xchg
mov
inc
mov
test
xchg
add
aaa
push
leave
lea
bound
pop
arpl
add
inc
dec
xchg
mov
inc
sbb
movsb
cmp
xchg
mov
stc
sub
nop
pop
subl
jge
pop
dec
mov
xor
dec
je
mov
lret
sbb
cld
sbb
sbb
pop
cli
mov
sbb
nop
sti
xchg
pushf
add
fidivrs
mov
sbb
in
mov
sub
sub
std
add
insb
repnz
enter
pusha
jb
push
inc
xor
ret
ss
xchg
mov
xor
lods
sub
les
enter
movsl
into
push
popa
stos
dec
data16
push
mov
cmp
andl
jns
push
and
jb
xorb
mov
dec
std
xchg
scas
xor
js
shll
xchg
jge
mov
cwtl
and
fwait
testb
push
push
cmp
sbb
ds
jge
jbe
cltd
cmc
mov
push
outsl
cmp
mov
mov
fmul
add
add
xor
outsl
sbb
cmp
scas
sub
mov
cmp
icebp
dec
xchg
in
pop
push
ds
enter
pop
aas
push
inc
cmpsl
cmp
adc
mov
mov
cmp
fidivrs
in
out
stos
inc
adc
aam
add
cmp
outsb
jne
es
push
pop
pop
imul
cwtl
fs
inc
xor
xchg
fptan
and
pusha
sub
pop
jp
js
mov
arpl
outsl
sbb
lods
insl
or
nop
sbb
cli
es
loopne
testb
push
push
sub
add
cmp
inc
aas
cli
pop
jp
in
lea
ljmp
lret
adc
in
xor
and
xor
pushw
pop
xchg
stos
aas
xchg
int3
bound
or
scas
adc
sub
xor
addr16
dec
mov
sub
gs
inc
repz
dec
nop
icebp
dec
jo,pn
pop
orb
popf
inc
fidivl
dec
sub
push
xor
push
mov
xchg
add
xchg
mov
sub
jmp
rorb
xchg
xorl
rclb
xchg
test
stos
push
popl
mov
in
jb
mov
stos
mov
jae
fsubl
jb
insb
nop
sub
sbb
fistps
jno
inc
je
and
stc
mov
and
outsb
push
adc
js
stc
js
add
or
movsb
scas
cltd
xorl
adc
arpl
outsl
decl
sbb
dec
outsl
adc
outsl
insl
push
dec
loop
loop
leave
xchg
test
jne
adc
loopne
mov
xor
popf
or
imul
sub
int
shl
sub
inc
dec
hlt
shlb
lds
xor
pop
lods
movsb
inc
sarl
stos
hlt
adc
add
hlt
mov
pop
jno
lea
fbld
or
fucomi
lret
and
pop
lret
in
cs
push
and
jl
xor
jecxz
into
out
movsb
jae
fcom
bnd
enterw
push
pop
jle
sub
adc
push
loope
inc
mov
cmp
pop
cwtl
push
call
inc
jmp
loop
push
mov
push
mov
xchg
test
mov
and
sub
rclb
adc
mov
adc
adc
iret
js
dec
add
outsl
ss
fisttpll
push
xchg
fcoms
mov
pushfw
lcall
pop
xchg
inc
xor
lret
sub
test
xchg
push
movsb
mov
and
andl
lods
ss
jmp
mov
sub
fcomp
loopne
xor
push
mov
adc
mov
pop
mov
push
es
ret
pop
add
rol
mov
xor
fdivrl
fs
dec
out
add
jge
rorl
leave
adc
sub
xchg
nop
or
jecxz
pop
fmull
jmp
xor
adc
inc
ret
adc
scas
push
and
jne
iret
addl
cmp
popf
mov
push
int
add
dec
imul
ss
stos
adc
dec
sub
in
aas
pusha
pusha
call
out
sub
mov
push
aas
ljmp
adc
in
mov
mov
loope
add
jle
lods
test
out
int3
in
jecxz
orl
lret
test
enter
stos
mov
jle
sbb
jo
je
fs
sti
xchg
sbb
outsl
push
shlb
inc
sbb
mov
mov
bound
push
mov
jmp
sub
fcom
or
pop
mov
cmp
adc
pop
jne
rolb
cltd
repnz
insb
mov
daa
jecxz
into
aam
je
jle
push
jbe
lahf
mov
jle
cwtl
jl
push
lock
fwait
pop
in
adc
shll
fs
loope
in
mov
cmp
sarl
fldcw
pop
push
jae
insb
jo
sbb
movsb
clc
pop
push
bound
es
fisubrs
imul
adc
movb
out
or
ret
cmp
out
and
in
int
pop
f2xm1
add
inc
arpl
pop
imul
xor
mov
sbb
setbe
and
push
xchg
push
call
bound
push
pusha
mov
inc
or
pop
push
push
xchg
adc
add
sbb
jle
xchg
add
orb
stc
add
xchg
sahf
pop
inc
inc
jle
jmp
sub
ds
xlat
imul
fs
ds
test
fidivrs
in
into
pop
dec
mov
or
add
insl
mov
dec
cli
bound
jle
shlb
das
mov
scas
pop
inc
mov
roll
mov
mov
sub
mov
fbstp
fimuls
sbb
ret
popa
outsb
or
lods
in
icebp
xchg
pusha
test
outsb
out
sub
fwait
int
xorb
mov
push
shl
sbb
mov
leave
cmp
and
out
mov
mov
sarb
insb
out
sub
subl
xlat
out
push
call
hlt
ja
lcall
and
adc
sub
cwtl
and
lret
shl
mov
xchg
add
add
fcompl
add
mov
inc
sbb
loopne
lahf
fstps
ret
mov
movsl
or
mov
jl
add
sbb
inc
in
fcomi
add
sub
lret
xchg
aam
jecxz
sahf
sbb
xchg
ds
push
in
sub
lods
lock
cli
std
pop
pop
stos
xor
mov
sbb
sub
clc
xchg
addr16
gs
xchg
arpl
test
and
push
dec
test
cmp
and
push
fistpll
lods
xlat
jb
xor
js
test
mov
lahf
sti
pop
xor
sbb
xchg
rorb
jnp
adc
and
pusha
push
icebp
lret
cs
pop
mov
in
or
mov
cli
loope
adc
pop
imull
jecxz
andb
dec
les
dec
out
ljmp
negl
in
cs
and
vmovntps
mov
jp
sbb
push
pop
xor
sub
mov
lds
add
mov
pop
mov
xlat
push
std
cli
and
int
pop
psubd
iret
xchg
push
test
sbb
test
adc
sbb
cmp
sub
lret
inc
fnstenv
sti
pusha
ljmp
mov
outsl
jp
xor
lock
std
dec
fbstp
mov
sub
incl
add
int
sarb
fisubs
pop
mov
jge
ja
sbb
jno
fwait
addl
std
aaa
imul
js
fwait
mov
sub
mov
mov
push
in
xor
fiadds
lods
adc
jae
push
xchg
pop
dec
mov
jg
sub
dec
mov
test
cs
or
sbb
or
mov
push
gs
or
pop
sbb
jo
sub
mov
inc
insb
inc
push
sahf
inc
jp
inc
arpl
dec
cs
imul
cmp
adc
sub
cmc
jp
cmc
jbe
mov
leave
test
sti
data16
xchg
insl
pop
and
inc
ret
mov
outsl
add
stos
mov
pop
fnstcw
stos
das
inc
xor
xchg
xchg
cltd
jle
pushf
mov
add
cmp
ljmp
int
push
cmp
in
pusha
pop
mov
pop
fwait
mull
jnp
fidivrs
fcmovnbe
xor
dec
jmp
mov
jno
mov
cmp
shr
subl
jge
std
lock
imul
push
cwtl
pop
xchg
clc
push
push
and
pop
xchg
ljmp
rorb
dec
push
mov
jno
mov
add
mov
pop
and
pop
mov
adc
call
add
iret
popf
xor
jnp
test
pop
test
mov
lea
les
xadd
dec
loope
dec
mov
scas
imul
inc
push
sti
mov
insb
pop
mov
mov
pusha
daa
and
sbb
pop
mov
mov
mov
sub
sbb
lods
jno
std
adc
inc
mov
push
pushf
sbb
lock
out
rorl
sub
cld
repnz
bound
xor
or
lcall
dec
mov
xor
sbb
ja
xchg
imul
push
add
icebp
outsl
out
mov
jbe
mov
push
jmp
out
or
out
sub
int
fs
add
push
nop
lahf
aam
dec
incb
push
and
aaa
add
scas
pop
fdivl
bnd
push
push
aad
mov
push
push
xchg
vpmaxsw
std
movsb
sub
push
jmp
inc
or
push
push
sub
add
inc
push
pop
mov
xchg
or
stos
ja
in
fbld
cltd
movsl
repz
out
jo
shl
leave
test
mov
cmp
enter
fstl
sub
inc
fs
push
test
pusha
sar
cmp
test
push
cmp
add
xchg
push
pushf
rep
leave
clc
cli
out
nop
xor
scas
inc
faddl
add
mov
dec
pop
add
in
jecxz
mull
rcrl
sub
fsubrp
ljmp
dec
mov
pop
xchg
cwtl
lcall
shl
add
xchg
mov
cmp
shl
test
movsb
adc
sahf
push
jo
xor
movsb
enter
aad
dec
imul
xchg
mov
mov
dec
lods
fistps
cmp
shrl
gs
iret
into
test
push
and
xchg
jle
popf
popf
mov
aad
pusha
or
sbb
jb
mov
adc
adc
aas
aas
push
dec
insl
adc
ljmp
rcl
mov
or
pop
inc
sbb
inc
in
icebp
push
sub
add
jno
repnz
not
aas
jmp
insl
dec
mov
jg
xor
mov
mov
scas
jle
mov
mov
sti
xor
xor
das
cmp
clc
loop
add
pusha
xlat
sbb
movsl
stc
fs
pop
out
xor
add
dec
sub
mov
repnz
insb
scas
mov
loop
mov
ret
cmp
arpl
pop
ss
aaa
or
pop
pop
into
inc
aam
add
or
icebp
xchg
in
negb
subl
xchg
ret
cmp
movsl
inc
sbb
lret
test
sub
clc
add
fbld
lds
lea
mov
ja
cmpsl
les
xchg
lcall
push
add
xor
iret
repnz
out
inc
test
sbb
dec
fs
mov
and
xchg
pop
mov
inc
cmp
movsl
ret
jmp
movsl
out
push
lahf
mov
leave
mov
mov
psubusb
mov
sub
mov
lods
add
addl
jnp
into
pop
mov
in
push
jmp
std
popa
loope
imul
pop
inc
adc
js
fs
sbb
lret
push
cmp
push
pusha
pop
icebp
dec
iret
dec
push
in
stc
mov
outsl
orl
clc
xor
sbb
in
jae
mov
fistpl
push
mov
jbe
lahf
fs
sub
sub
daa
xor
into
sub
subb
mov
lret
pop
sbb
shrb
cmpsl
mov
mov
fstps
and
adc
push
and
xchg
loope
pop
aad
loop
je
jmp
gs
pop
jae
mov
movsb
sub
mov
sti
fs
fisubs
fidivrs
push
cs
cmp
lds
call
inc
pop
mov
repnz
jge
dec
add
push
hlt
mov
pop
xchg
roll
xchg
adc
aas
shl
in
lea
inc
sbb
inc
pop
dec
lahf
adc
sub
hlt
scas
mov
aad
lea
xchg
mov
and
mov
push
in
xchg
outsb
dec
clc
loopne
cli
out
ds
pop
add
mov
fcmovb
lret
roll
pop
mov
xlat
lret
mov
push
sahf
dec
push
mov
pusha
test
cs
fistpl
adc
mov
adc
jnp
dec
mov
xor
pop
ja
xchg
movsl
sbb
aam
hlt
xor
and
adc
xchg
es
out
or
push
loope
call
movsl
adc
sub
xlat
and
inc
das
out
jmp
xor
rcrb
in
stc
repz
flds
int3
xchg
pop
push
icebp
rcrb
loop
pop
andl
call
adc
xlat
nop
aaa
out
es
push
les
cmp
adc
shll
test
cwtl
fxch
xor
jb
cmp
or
je
or
cli
movsb
int
pop
fdivl
ffree
push
jle
dec
pop
cmpsl
or
arpl
jbe
decb
es
push
outsb
sbb
imul
xor
cmp
push
cmp
enter
pop
pop
scas
lret
adc
push
mov
cmc
subl
xchg
insl
cmp
jnp
movsb
repnz
add
arpl
xchg
sbb
loop
and
or
loopne
hlt
cmpsl
jp
fisttpl
mov
shrb
mov
jl
mov
nop
out
enter
mov
pop
sbb
jae
mov
out
xchg
sahf
mov
xchg
out
popf
test
or
mov
mov
cmp
jne
adc
lahf
stos
add
andb
adcb
scas
mov
lods
add
jne
xor
xchg
cli
jbe
rcr
push
mov
into
rorb
xchg
mov
outsl
into
mov
inc
mov
pop
fdivrl
mov
mov
aad
shrb
sub
and
fdivl
shlb
cmovnp
jl
pusha
adc
sbb
scas
xchg
sbb
clc
inc
cmpsl
mov
xor
pop
cltd
jns
test
cli
aaa
negb
nop
mov
pop
out
mov
std
sub
xchg
xchg
mov
repnz
aam
lods
sbb
lock
push
mov
or
loop
in
dec
mov
je
fst
shlb
ds
insl
xchg
aad
mov
hlt
cmpsb
adc
add
icebp
cli
cli
mov
call
xor
mov
push
push
xchg
jno
rcrb
cmp
and
idivb
aas
sbb
add
pusha
jl
push
xchg
aad
inc
inc
test
push
xor
int
loopne
in
jmp
inc
in
movsl
das
xor
pop
jns
cli
test
pop
or
dec
cmpsl
in
mov
xor
xchg
ljmp
mov
or
sbbb
fwait
sbb
cmp
jge
cli
aas
push
in
mov
jns
mov
mov
stc
pusha
ss
push
cmp
mov
or
mov
push
jmp
push
push
or
adc
mov
pop
cmp
mov
xchg
jp
jg
and
xchg
out
mov
sub
pop
cmp
xor
cmpsl
xchg
enter
mov
push
fcmovnb
ret
mov
mov
or
fisubrl
add
cmp
stos
inc
or
add
insb
frstor
pop
rcrl
mov
test
bound
sub
sub
daa
and
stc
inc
les
cmp
jo
adc
xorb
popa
cmpsl
iret
mov
popa
ljmp
mov
jmp
pop
cmp
sub
fisubrs
test
shll
int
cmpsl
addl
ja
jecxz
or
rcrl
daa
and
shlb
into
and
and
push
inc
fs
and
insb
xor
add
mov
sub
cs
test
add
jo
add
dec
mov
or
lock
call
mov
ljmp
xchg
adc
vmread
sbb
or
pop
in
ja
pop
cltd
lret
pop
outsl
jge
in
inc
fnstenv
ds
mov
cmc
jno
ljmp
push
arpl
sub
lock
jmp
jecxz
mov
daa
jl
ds
pusha
rcrl
in
mov
aad
int3
jb
jl
aaa
cltd
test
sbb
lds
cmpb
stos
movsb
stos
dec
insl
fadds
imul
mov
js
inc
jp
lds
lods
fcmovnbe
gs
adc
xlat
pop
jbe
cs
jae
and
add
repz
clc
aas
dec
inc
lods
gs
sbb
subl
jbe
lods
in
aaa
outsb
hlt
es
push
repnz
xor
or
aaa
out
mov
inc
pusha
cmpsb
pop
fwait
or
mov
jno
scas
mov
push
jl
lods
mov
lret
mov
sbb
dec
nop
out
or
push
int3
in
push
je
mov
inc
fidivrl
stos
rcrl
out
fdivl
xlat
sbb
mull
xor
imul
and
lret
adc
scas
mov
push
cmp
cltd
xor
push
cmpsb
cmp
fs
xchg
cmp
lret
cld
roll
add
lods
jno
loopne
popa
mov
jl
shll
aas
hlt
js,pn
in
imul
rcr
int
push
inc
insb
and
inc
jns
push
push
fs
xor
sbb
out
jne
ucomiss
repz
out
mov
scas
stc
xor
pop
add
jnp
pop
mov
call
adc
and
repnz
sbb
sub
cmpsb
cmp
and
push
arpl
pushf
jp
call
sbb
hlt
mov
ja
fcmovnbe
ja
rorl
or
fldl
cmp
sub
xor
lret
insb
dec
sahf
inc
subl
imul
daa
into
arpl
lods
call
and
mov
aaa
or
jmp
pushf
sub
aas
or
push
xchg
adc
xor
fldenv
adc
and
pop
scas
rcl
popa
jno
sbb
clc
repnz
xor
inc
inc
pushaw
pusha
outsb
or
scas
xchg
rcr
subb
add
push
jb
sbb
leave
fld
arpl
dec
jecxz
mov
dec
cmp
xlat
mov
ja
lods
fsts
fidivrs
fistpl
rcll
into
jno
jp
xchg
xor
mov
dec
sbb
pop
pop
lret
sti
fisttpl
inc
xor
ds
outsl
sbb
scas
fwait
scas
add
jge
call
mov
loope
jmp
dec
mov
dec
inc
aas
push
aam
scas
ret
fwait
push
sbb
jecxz
push
and
pop
xor
jmp
nop
dec
jno
sbb
call
cmp
notb
je
shll
fdivrl
dec
jns
scas
popa
cmpsb
mov
mov
decl
dec
cmc
inc
mov
in
pushf
sbb
pop
jl
mov
subb
mov
dec
nop
mov
aam
rolb
mov
xlat
push
inc
imul
xchg
xchg
or
sbb
mov
sub
nop
stos
push
push
push
xchg
insb
loopne
and
mov
rolb
out
insl
test
enter
xchg
push
mov
add
xor
mov
or
fs
xchg
push
in
or
or
iret
push
rcll
js
inc
mov
sahf
fnstsw
mov
push
mov
sub
into
aaa
mov
enter
mov
out
cmp
push
push
enter
xchg
mov
dec
clc
jmp
rol
fbstp
inc
into
inc
loope
in
fnsave
je
xor
sub
push
cmc
sbb
out
aam
xchg
push
mov
out
or
adc
and
lock
lods
fsubs
aaa
mov
mov
inc
push
push
rolb
push
cs
adc
cmp
scas
cs
inc
mov
dec
xchg
or
daa
xchg
std
cmpsb
popf
lea
inc
mov
shll
or
jae
ja
adc
dec
mov
vrcpss
and
in
jl
inc
mov
call
pop
pop
jmp
loop
out
dec
ret
cmp
mov
xchg
imul
or
sti
call
mov
lods
and
jl
xor
iret
outsb
push
pop
cs
xorb
dec
mov
cmp
ret
fnstenv
dec
popf
aam
mov
lods
cltd
pop
aas
scas
lock
jne
and
sbb
sub
clc
jbe
xor
enter
inc
aad
ds
stos
jle
cmpsb
in
add
cmp
loope
subl
rcrl
stc
clc
xchg
sbb
cs
pop
sub
jo
add
sahf
int
push
scas
xor
jnp
adc
call
mov
pop
jno
or
or
fisttps
dec
fiadds
push
adc
fistpl
sub
mov
xchg
xor
cwtl
add
je
cld
and
in
ret
xlat
jp
stos
mov
call
jo
mov
testb
mov
rcrb
adc
sbb
mov
outsl
gs
stos
mov
cvtps2pd
pop
dec
mov
push
or
call
inc
cld
mov
scas
adc
cmp
inc
or
dec
lods
shll
lods
dec
je
out
and
mov
adc
jno
es
add
pusha
adc
pmuludq
sbb
inc
shrl
addr16
jge
mov
dec
stc
sub
adc
add
push
movsb
das
jl
je
gs
inc
pop
push
incb
jmp
mov
adc
out
xlat
nop
lahf
push
repz
fwait
loopne
test
sub
mov
xchg
xor
add
sbb
inc
xchg
ljmp
jecxz
push
add
incb
xor
jmp
roll
test
scas
movsb
stos
sbb
mov
xchg
popa
pop
sbb
imul
mov
rcrb
loopne
addr16
lret
pop
lret
int
popa
add
or
lret
cld
mov
or
sub
pop
es
pushf
popf
stc
in
addl
xchg
jo
push
rolb
daa
mov
fiaddl
mov
sub
int3
pop
pop
adc
mov
inc
push
inc
shlb
in
xlat
xlat
out
cmp
sti
inc
inc
jp
xor
sbb
jmp
lock
push
pop
test
push
idivb
mov
in
mov
xchg
jbe
je
push
add
sbb
rorb
or
xor
adc
fldcw
add
in
insb
sarl
xchg
dec
mov
enter
test
pushf
scas
adc
aaa
mov
jl
inc
push
test
cli
sub
lea
push
out
xlat
lock
xchg
fs
xchg
fbstp
sar
xchg
xor
jbe
fisubrs
xor
xor
popa
enter
orb
xor
jge
add
jnp
adc
lret
les
loopne
jl
mov
mov
mov
scas
xchg
push
sub
cmp
imul
jmp
xor
ds
je
adc
jno
lods
aas
imul
jo
xor
lret
mov
mov
push
xchg
xchg
inc
mov
fwait
aad
mov
mov
mov
sub
mov
sub
jmp
fimull
dec
cwtl
sbb
jp
and
insl
fbld
add
sahf
dec
enter
xchg
ds
ret
or
adc
xlat
or
cmp
cmp
jg
fldcw
fcmovbe
xchg
jns
jp
xor
dec
jmp
xchg
stos
cltd
sarb
inc
jmp
pop
in
jno
hlt
sub
and
adc
repz
je
cmp
push
or
jp
pop
test
add
arpl
dec
inc
loopne
push
shlb
ss
mov
movsb
jb
loop
xchg
sub
fcoms
cwtl
jne
xchg
xor
and
push
add
loop
dec
lcall
pop
jne
xor
add
movsb
aas
inc
das
lret
fmulp
mov
notb
jo
imul
decl
adc
mov
inc
out
into
ds
push
xchg
dec
mov
mov
out
mov
int3
daa
lods
xchg
lods
xchg
shll
or
inc
inc
xchg
popf
sbb
icebp
imul
icebp
mov
mov
xor
lods
out
mov
jl
or
sbb
inc
jne
mov
jge
cmp
cmovbe
or
pop
pop
cld
mov
sub
and
fwait
movsl
sti
rcrb
push
and
add
mov
test
fisubs
mov
hlt
jl
mov
in
mov
loopne
jcxz
jae
pop
fs
rol
fnsave
rorb
movd
sub
lahf
mov
adc
adc
mov
je
mov
aas
ds
testl
outsb
pop
or
mov
test
and
dec
ja
rol
jle
push
dec
dec
jmp
sub
jnp
and
pusha
gs
scas
js
jne
jmp
xchg
rorl
dec
xchg
sub
adc
aam
xlat
arpl
pop
shll
sbb
xlat
sbb
inc
idivl
push
xchg
outsb
mov
in
xchg
cmp
pusha
xchg
addr16
push
loope
mov
sub
mov
xchg
loopne
andb
icebp
int3
xchg
call
sub
js
stos
sti
jae
loope
bound
push
xchg
sub
inc
orl
or
out
imul
xchg
fists
jecxz
rcll
dec
and
dec
cmp
addl
and
mov
mov
dec
adc
xchg
das
das
inc
mov
std
jge
int3
pop
xlat
xchg
pop
xchg
clc
pusha
movsb
xor
loopne
and
popa
aad
fisubl
and
sbb
ss
push
jbe
and
adc
push
int3
push
cmp
dec
add
sbb
js
bound
push
ja
popf
aam
jno
nop
add
inc
sub
jmp
fisubrl
jnp
xchg
stc
adc
dec
lcall
mov
lret
sub
sub
push
das
enter
insl
int
push
mov
push
sbbl
pop
ja
fstl
jbe
fisttps
dec
push
jae
xchg
jne
repnz
cmp
xchg
mov
push
cmp
inc
aaa
push
pop
mov
jle
or
lods
jl
clc
and
into
data16
or
jmp
insl
shl
or
data16
mov
add
mov
aam
fstl
push
dec
jmp
mov
push
inc
sbbl
fstl
or
adc
insb
loopne
fcomps
sarb
pop
sub
repz
stos
inc
dec
sbb
xor
cli
ret
les
add
int
xchg
pop
gs
jno
jnp
add
mov
or
or
sub
mulb
push
mov
sub
cmc
sub
push
jns
and
jns
xchg
std
imul
mov
insb
out
xchg
adc
xchg
or
loop
dec
in
fs
or
shl
jae
ds
jns
or
lcall
inc
rorb
mov
in
dec
popf
inc
loope
js
notl
clc
iret
adc
pop
and
and
or
in
dec
xchg
inc
roll
sub
xor
dec
mov
push
outsb
push
or
loopne
cld
xor
and
mov
in
popa
dec
movsl
pop
or
leave
mov
dec
pop
pop
and
cmpsl
int
cwtl
gs
dec
loopne
in
sbb
push
xchg
push
fucomi
pop
movsb
int3
lahf
lret
and
into
and
test
sbb
inc
cmp
int3
dec
test
push
insb
enter
ja
pop
jp
test
and
push
adc
cmpb
inc
imul
push
adc
arpl
out
cs
lock
push
add
pop
xchg
fstl
xbegin
push
arpl
pop
cmpsb
ja
jnp
clc
mov
inc
add
es
andl
mov
aaa
or
ret
leave
jbe
leave
dec
push
ja
cmp
cmpsb
jns
lock
sbb
dec
ljmp
add
dec
outsl
mov
call
leave
and
or
fmuls
pushf
loopne
cmc
pop
jbe
sahf
lods
push
adc
cmp
push
mov
std
sub
es
or
adc
and
sbb
ret
jmp
mov
push
pop
out
rcll
out
out
cmp
sub
cmpl
insl
pop
ror
pop
std
in
sbb
sbb
hlt
cmp
ds
push
push
stos
sbb
xor
fcoml
mov
lods
mov
ja
cwtl
cltd
xchg
mov
icebp
sub
or
int
sbbb
ljmp
adcb
xchg
arpl
loop
pop
bound
rcrl
push
in
out
lahf
mov
ljmp
cmp
jp
test
faddl
and
push
mov
mov
push
and
icebp
xchg
inc
push
mov
mov
push
mov
je
jg
mov
lods
lods
gs
loopne
push
xchg
jae
pushl
in
int
xchg
mov
jmp
iret
repnz
mov
mov
inc
jl
dec
sbb
loope
repz
and
ja
jl
insl
inc
test
es
call
loop
jno
add
imull
into
fcompl
mov
jle
jo
out
add
jnp
arpl
ja
sub
lock
cmp
pop
rcll
cld
jle
sub
cmp
jae
jecxz
xchg
cmp
sahf
lret
andl
push
push
add
loope
sbb
and
arpl
sub
xchg
lods
das
lahf
inc
rorb
push
test
sbb
xor
jl
lret
or
sbb
add
sbbl
lret
cmpsb
mov
mov
lds
push
cmpb
jnp
mov
js
dec
addr16
push
and
lds
push
repz
dec
mov
outsb
mov
scas
fisubs
test
cmp
mov
jns
mov
jbe
pop
insb
lods
loop
out
sub
add
gs
arpl
dec
push
xchg
push
sbb
lcall
addr16
adc
test
lahf
pop
jmp
mov
leavew
sub
mov
mov
pop
and
dec
repnz
popa
add
ror
xchg
pushf
adc
sti
add
mov
cs
jb
sbb
popa
stos
mov
push
mov
xor
mov
lock
repz
gs
cmp
sub
jno
mov
adc
jnp
stos
sti
into
js
and
cmp
push
andl
mov
cwtl
lahf
inc
xchg
pop
test
push
sub
xchg
lret
mov
xchg
or
fimull
out
push
pop
ds
xchg
daa
or
add
adc
push
jnp
jp
mov
jp
mov
movsl
sub
outsb
loope
mov
outsb
dec
adc
clc
mov
int3
cmp
xor
mov
inc
ss
sub
push
les
outsb
dec
test
bound
aaa
pop
sar
int3
xchg
cmp
sbb
les
mov
jg
mov
xchg
stos
push
outsl
lock
jmp
fst
fsubr
inc
std
loope
adc
dec
jno
xchg
jge
out
lds
mov
mov
jns
adc
loop
add
mov
lcall
mov
test
jl
jno
inc
mov
hlt
add
stos
fidivrs
inc
rclb
rcl
or
mov
ret
push
popl
hlt
cmp
sarl
mov
sti
xchg
test
xchg
rcrl
mov
sub
subl
cld
stos
push
jmp
inc
int
or
mov
mov
sub
inc
in
cli
inc
cmp
xor
aam
fisubrl
iret
xor
mov
and
fwait
add
dec
mov
xchg
push
or
stos
mov
pop
int
mov
or
inc
outsl
out
dec
add
push
ljmp
xorb
int3
mov
clc
push
pop
cli
outsl
sbbb
mov
mov
xor
repnz
xlat
or
xor
call
test
out
xor
and
jb
in
enter
push
jge
jb
mov
push
push
dec
repz
xchg
in
sub
lods
subb
add
scas
in
aas
push
aad
xor
adc
into
dec
add
jmp
rclb
js
out
aam
push
iret
jmp
leave
jno
loope
pop
imul
fisttpll
cli
ret
sti
sbb
in
and
lds
dec
push
jne
cmpsl
cmpsl
fdivrs
ret
sbb
sahf
add
ret
cmp
test
lret
shr
cmp
vmovaps
push
ss
imull
loopne
cmpsb
jbe
or
mov
xor
and
adc
xchg
sbb
pop
std
dec
das
test
out
cmp
loop
sti
les
testl
mov
adc
dec
jge
lcall
and
add
sbb
pop
ret
pop
outsl
lahf
mov
test
and
mov
fucomi
cmp
mov
lds
std
out
es
pop
dec
mov
jae
pop
sbb
push
js
mov
or
loope
negb
push
aad
loop
mov
mov
repnz
ljmp
or
repnz
sarl
push
shlb
call
sbb
and
adc
ljmp
lcall
cmp
add
hlt
mov
pop
xchg
mul
and
dec
lea
ja
mov
cld
ljmp
xchg
lds
jecxz
add
and
dec
fildll
xor
jae
ljmp
jns
arpl
push
loop
test
jnp
js
fcoms
popf
adc
sub
xor
mov
jno
ja
sbb
dec
mov
out
clc
movsl
fcoml
sbb
push
enter
cmpsb
call
dec
jmp
mov
push
shrb
enter
push
mov
jmp
push
iret
fxch
cs
dec
rcll
das
jmp
rclb
cltd
aaa
repnz
sub
jb
mov
jle
dec
movsl
aaa
sub
mov
nop
jne
stc
xor
lret
ret
add
push
jne
add
loopne
mov
ret
cmpb
int
pop
pop
out
cs
div
rol
xlat
adcb
jne
ljmp
mov
xchg
clc
and
cs
sbb
mov
ss
popa
add
loopne
push
xor
lret
sbb
mov
cs
dec
cmp
fcmove
shl
in
add
xor
ss
mov
das
ficoms
jge
pop
out
and
mov
ljmp
mov
adc
scas
fimuls
pop
lcall
jno
mov
test
sub
fadd
adc
das
testl
dec
jecxz
xor
jns
jo
dec
idiv
cmpsb
mov
jl
inc
or
push
jns
andw
xor
ret
daa
sub
xchg
fistps
shl
lea
sub
into
jbe
pop
pop
cmp
sub
sahf
js
aaa
mov
mov
into
xor
notb
lea
fwait
sbb
loopne
stos
out
leave
fwait
sub
cmp
inc
inc
pushf
push
xor
cwtl
pshufw
andb
les
lcall
push
pop
sbb
cmpsl
sbb
and
aad
jl
add
mov
inc
insb
cmp
xchg
dec
icebp
lods
dec
cmpsl
mov
adc
sbb
negb
gs
aaa
xchg
or
nop
push
orl
popf
scas
in
cltd
cmp
lock
fidivs
pushf
and
adc
enter
push
jno
aaa
psrlw
and
repnz
sbb
jge
imul
cmpsb
mov
xor
icebp
out
jbe
js
pop
or
mov
and
pushf
hlt
in
mov
in
mov
daa
lods
push
adc
mov
int3
out
pushf
mov
dec
xchg
jo
fimuls
push
and
lret
pop
je
mov
inc
insl
cmp
imul
je
scas
cmpl
mov
rcrl
dec
mov
xchg
test
movsb
rolb
pop
outsl
lahf
ja
cltd
push
cmp
roll
pop
mov
sub
pop
scas
subb
mov
test
add
fs
push
lret
inc
add
popa
ja
cmc
sbb
test
mov
jmp
stos
push
cwtl
out
hlt
lret
lods
jne
sub
push
outsl
mov
cmp
sahf
rcl
lock
push
jmp
addb
jae
test
sahf
lret
movmskps
adc
andl
mov
xchg
xchg
mov
pop
subb
pop
mov
ficoml
mov
cli
sbb
xor
cmp
and
add
adc
and
push
mov
dec
aas
add
push
pop
pushf
xchg
cmp
sub
stos
xchg
xchg
push
bound
lods
xchg
adc
lock
sbb
stc
lcall
js
cmp
pop
and
js
push
sbb
nop
jmp
add
js
into
test
adc
bnd
cmpsb
adc
fsubrp
cmpsl
out
shrb
jge
fdivs
in
fwait
add
aas
int3
mov
test
and
ds
pusha
xchg
in
jne
push
jp
push
jne
lods
sbb
push
ret
js
fwait
ret
iret
mov
xchg
sbb
movsl
std
fsubr
movsb
mov
lods
inc
int3
inc
cld
dec
repz
fxch
out
mov
add
mov
mov
jb
mov
nop
or
mov
mov
icebp
testl
sahf
ret
arpl
jp
dec
adc
push
call
into
inc
pushf
sub
lret
xor
icebp
jne
or
repz
scas
mov
rorb
aad
mov
pop
jne
sbb
loopne
pusha
je
aaa
pusha
incl
ret
les
aaa
mov
xchg
test
repnz
push
pop
xor
lds
sbb
outsl
dec
and
pop
lcall
rcl
inc
arpl
add
cmp
aam
xor
js
insl
xor
xorl
das
sub
dec
sbb
mov
jp
sbb
jmp
adc
loop
dec
idiv
and
pop
fstl
call
int3
jge
aas
int3
rcll
xor
sub
dec
popf
sbb
adc
mov
pop
mov
out
les
ret
test
popf
int
xchg
sub
imul
jg
or
xchg
stc
or
pop
insl
ljmp
cmpsb
dec
mov
addb
arpl
sbb
cltd
fists
or
jne
out
adc
mov
sahf
dec
cli
pop
orb
aam
loop
addb
sbb
mov
mov
xchg
or
test
fidivs
imul
sub
sahf
push
mov
cld
cmp
jmp
adc
stos
int
outsl
popa
and
and
xchg
lds
push
cli
mov
and
fcompl
cld
outsb
lahf
pushf
jp
int3
cwtl
xchg
jge
shll
or
push
mov
dec
lahf
cmp
dec
or
inc
popf
stc
pop
insl
loope
lret
add
and
adc
dec
sub
xlat
xchg
movsl
icebp
les
push
xor
cmp
pop
xchg
or
pop
ljmp
xchg
adc
inc
pushf
lock
mov
pop
mov
fsubrs
lods
lea
ss
xor
sbb
push
pop
cmp
push
or
xlat
test
add
or
cs
push
mov
xor
enter
mov
cmp
lcall
jl
and
sbb
push
sbb
push
fisubs
stc
js
sti
idivl
xor
mov
sbb
enter
in
sbb
pop
dec
loopne
ja
mulb
mov
lret
daa
lea
xor
mov
data16
sub
adc
mov
inc
sbb
xor
cmc
sub
incl
push
push
pop
nop
nop
mov
jmp
hlt
and
sub
roll
mov
jge
inc
das
lahf
in
xchg
shll
mov
xchg
add
mov
dec
adc
sbb
or
hlt
mov
test
pop
mov
cmp
dec
fiadds
mov
mov
out
lret
sbb
xchg
lret
sub
adc
push
ljmp
sbb
sub
cs
mov
pop
cwtl
pop
out
jmp
push
cmpsb
test
xchg
xchg
xorl
xor
adc
sbb
add
push
push
ret
mov
movsl
fidivrl
pop
pop
lahf
std
lock
xor
out
mov
inc
sbb
xor
popa
test
pusha
ret
jg
inc
cmp
mov
xchg
cs
lcall
xchg
jno
mov
out
jecxz
cwtl
and
mov
adc
rcrb
xchg
pop
inc
mov
pop
xor
sbb
es
cli
in
jg
subl
test
pushf
imulb
xchg
mov
push
pop
mov
fnstcw
pop
ficompl
hlt
xchg
xchg
mov
std
shl
sbbl
add
mov
jbe
enter
xchg
and
mov
mov
cmc
addr16
jmp
scas
imul
inc
ror
sahf
imul
cltd
mov
ds
hlt
fstps
mov
jae
out
xor
sub
insb
ss
jecxz
cmp
ljmp
and
dec
out
ret
fwait
add
lds
dec
ficomps
cmc
inc
pop
sbb
lds
subb
xor
dec
cmp
cmp
cmp
dec
mov
pop
cmpsb
and
inc
xorl
out
fnsave
pop
push
dec
in
js
data16
scas
sbb
xor
xchg
mov
lret
filds
and
aad
mov
and
fcomps
cmc
push
cmpsb
adc
and
cs
mov
and
lds
lds
cwtl
rorl
jg
xchg
scas
cmp
xlat
imul
inc
xor
shll
shrl
xor
mov
jle
cmpsb
add
outsb
stos
cmp
xchg
cli
jge
addr16
inc
xchg
jle
mov
cmp
arpl
data16
push
jp
mull
push
push
lret
int
cmp
cwtl
scas
and
fdivs
int3
enter
pop
mov
ret
fisubrl
xchg
rorb
ds
imul
aam
mov
lods
rcrb
sub
cwtl
and
out
mov
fs
mov
stos
roll
cld
inc
mov
repnz
push
xchg
roll
pop
ret
push
xchg
cli
rcr
fldt
pop
loope
cmp
push
dec
loop
dec
push
sbb
imul
pop
aad
mov
push
cmp
sarb
lock
inc
cld
fsubrs
sbb
imulb
cmpsb
aam
stos
push
adc
movsb
fs
or
hlt
mov
push
fnstenv
jle
imul
pop
stos
lret
xor
pusha
jg
enter
getsec
cmp
sti
ret
jmp
push
cld
mov
lcall
mov
lcall
jbe
scas
inc
popf
mov
and
push
jnp
fndisi(8087
xlat
inc
nop
fnsave
mov
sub
xlat
cmp
pop
out
mov
outsb
xchg
push
mov
xor
mov
mov
fcoms
jmp
inc
jae
cli
and
sub
mov
sbb
dec
js
aam
fs
imul
lea
jne
int
lret
aas
or
rcr
mov
mov
movsb
pop
pop
in
sub
pop
push
xchg
adc
icebp
into
out
xchg
cmpsl
rorl
leave
jecxz
xchg
jle
outsb
in
scas
pop
loope
aaa
sahf
sahf
jmp
inc
int3
and
lret
xchg
in
push
mov
jae
pop
jmp
int
daa
cmp
sbb
inc
icebp
je
stc
inc
nop
or
mov
outsb
into
xlat
mov
sub
inc
lcall
jae
scas
sub
inc
call
lds
cmp
push
push
mov
sub
cwtl
lahf
jp
cmp
pop
and
pop
mov
btsl
lret
or
inc
ss
repnz
mov
cmc
iret
sbbl
sbb
hlt
rcl
imul
inc
inc
outsl
sbb
sub
sbb
mov
aaa
nop
into
mov
sub
mov
scas
rcll
pushf
loop
and
outsb
pop
jl
js
xchg
lods
cmp
iret
pushl
cmpsb
push
scas
cmp
jle
adc
jo
repz
mov
imul
in
jne
add
retw
fiadds
mov
ss
pop
rorb
fsubrs
call
xchg
cmpl
lret
pop
jb
mov
stc
adc
aam
mov
or
xchg
fistpll
mov
test
mov
cmpsb
dec
lret
cld
and
xor
mov
movsl
les
jo
lods
push
hlt
andb
out
or
outsb
jns
mov
out
ret
add
mov
je
cmp
mov
inc
imul
mov
cld
xchg
add
addr16
orb
sub
add
mov
cs
mov
fsts
je
sbb
adc
in
pop
and
sbb
push
cmp
push
cmpsb
adc
sbb
bound
pop
cmp
or
sub
popf
das
and
test
fdivs
fildl
je
scas
insl
mov
push
out
int3
mov
adc
mov
sahf
cmc
mov
cwtl
adc
cltd
sub
jno
mov
add
pop
jp
test
and
out
mov
dec
xor
push
fldcw
mov
and
movsb
test
shrl
movsb
pop
je
xor
das
stc
and
inc
or
rcll
xchg
aad
cwtl
adcb
ds
jmp
sbb
xchg
jmp
lret
mov
sub
push
pushf
xor
std
pop
cld
loop
mov
mov
push
mov
adc
mov
lcall
addl
fimull
out
mov
sub
xchg
mov
sub
or
adc
jge
mov
aad
dec
push
insb
jns
dec
test
cwtl
sub
xchg
xor
test
cmp
mov
jl
fbstp
jo
fcomps
jbe
or
popf
sbb
stc
jmp
sub
scas
int
jnp
push
mov
dec
cmp
ss
sub
lret
push
imul
sti
rclb
outsb
lods
rolb
jne
push
inc
fnstsw
and
fs
lods
xchg
xor
dec
jmp
push
ljmp
insb
or
sarb
mov
enter
mov
sbb
fiaddl
andb
fstps
add
xchg
jp
stos
outsl
add
sbb
je
pop
and
adc
notl
sarb
insb
fs
mov
sarl
sbb
or
mov
stos
enter
mov
cmp
fsubrs
mov
inc
aas
scas
pop
sahf
xchg
mov
cmp
mov
dec
jmp
and
pop
sti
rorb
add
pop
loopne
xor
das
loop
inc
mov
fidivrl
out
es
pushf
mov
cmpsl
sub
xchg
aad
xchg
pop
sbb
mov
sbb
xor
adc
push
shrl
test
lods
clc
add
push
movsl
daa
mov
and
or
pushf
jns
sbb
lahf
mov
and
out
incb
pop
push
and
jb
jbe
test
dec
push
xor
cwtl
xor
mov
push
dec
in
jno
stos
movsb
loopne
in
fstl
dec
call
inc
aas
loopne
stos
cli
cmp
jg
sbb
add
outsb
jg
ja
imul
movsl
movsl
fildll
and
adc
cmpsl
push
mov
push
mov
push
jns
jmp
dec
xor
pop
jo
daa
mov
dec
adc
iret
in
pop
xchg
enter
loopne
mov
and
ds
pop
hlt
mov
dec
cmp
in
xchg
xor
inc
out
jns
adc
pusha
jbe
cmp
mov
les
cmp
cwtl
leave
pop
push
hlt
cs
rep
pop
fprem1
and
loop
adc
push
mov
mov
cmpsl
subl
addr16
in
sbb
jo
cmp
sub
mov
loopne
mov
sub
inc
or
lods
sbb
mov
int3
int
leave
jp
mov
and
inc
movsb
xorl
sbb
inc
pop
or
adc
stos
test
movsl
mov
repnz
pop
sub
cltd
inc
pop
dec
adc
repnz
addr16
stos
add
lahf
inc
ss
int
xchg
loop
mov
ds
jns
in
int
dec
lret
movsl
fcomps
sbb
push
cmp
mov
and
fdivrs
inc
mov
xchg
pushl
xchg
inc
jg
xchg
mov
pop
ja
mov
sbb
je
out
sub
push
cmpsl
into
dec
loopne
inc
subl
sub
adc
pop
js
mov
mov
mov
mov
sub
test
jge
add
xchg
inc
imul
into
add
cmp
pop
sub
adc
ret
mov
push
mov
sub
dec
les
and
cmp
jno
aam
mov
sbb
insl
cwtl
mov
or
add
sub
dec
in
or
xchg
shlb
adc
js
fimull
dec
xor
sub
xchg
mov
cmpsl
jp
dec
push
inc
lods
pop
xchg
subb
mov
adc
sahf
pop
lahf
mov
xchg
sub
mov
push
into
outsb
jmp
push
lret
adc
mov
push
jno
cmc
pop
xchg
scas
int
and
xchg
mov
ljmp
or
push
cmp
test
cmpsb
cmpsl
jae
mov
repnz
adc
and
inc
mov
sar
pop
lods
call
push
jne
or
pop
mov
nop
mov
lock
add
push
pop
enter
rcr
push
outsb
cmc
mov
test
jl
sti
push
cmp
and
sub
hlt
dec
mov
imul
lds
dec
mov
and
xor
sbb
mov
cmp
mov
cli
push
lods
add
inc
frstor
sub
mov
pop
stc
lcall
nop
jle
add
lea
mov
js
adc
aaa
lock
scas
repz
test
stc
cs
ds
fmul
jp
sub
fstpt
and
std
ja
pop
pop
clc
popf
mov
lahf
idivb
out
lcall
popa
imul
or
and
lcall
and
pop
xor
je
ffree
jl
scas
out
and
ss
ret
imul
push
push
dec
fs
outsl
lods
lods
inc
je
push
out
jo
cmc
lahf
lea
xchg
fldcw
imul
xor
sahf
xchg
mov
jg
push
adc
les
mov
cmpsl
sub
je
cmp
dec
xor
movsl
and
add
es
xor
arpl
mov
lret
pop
sub
inc
mov
mov
or
aaa
jg
mov
pop
dec
sbb
push
jg
test
mov
xchg
add
outsl
out
add
sbb
fcoml
js
dec
icebp
lahf
ds
push
and
popa
and
in
data16
jne
cmp
and
lea
gs
rol
in
std
lods
mov
fcompl
pop
sahf
pop
inc
aas
mul
pushf
aad
xchg
ret
frndint
icebp
lea
add
add
push
popf
sub
xchg
sbb
mov
xlat
lret
cmp
data16
pop
shrb
jecxz
and
xchg
sbb
loope
fdivrs
mov
dec
loopne
dec
sub
sub
cmp
in
push
fwait
bound
cltd
jmp
in
dec
scas
jmp
and
dec
cmpsl
dec
sub
pop
fimuls
adc
sbbb
push
push
out
jno
fs
adc
js
sti
cmpsl
jp
mov
je
mov
mov
push
jb
ljmp
jbe
jle
repnz
shll
or
shrl
sub
mov
adc
mov
jbe
pop
xor
or
or
mov
or
movsb
fadd
sub
inc
fldcw
push
scas
mov
testb
cld
sbbb
inc
imul
mov
stc
cmpps
int
scas
imul
bound
popa
adc
cmp
das
addl
xor
pop
in
insl
lea
clc
dec
push
in
mov
cli
cmp
jbe
ss
test
mov
pushf
or
jecxz
pop
sahf
dec
repnz
in
in
in
aam
jmp
pop
shl
movsl
sub
pop
fs
mov
or
lods
cli
popa
and
out
push
jl,pt
xor
addr16
sar
out
sti
or
inc
xor
shll
dec
fldenv
mov
xchg
arpl
loopne
dec
pop
ret
and
add
jecxz
cmp
fwait
inc
insb
push
jb
add
andb
lods
inc
xor
push
idiv
lods
xchg
or
or
mov
leave
mov
loope
pop
sbb
pop
enter
shlb
cmp
cwtl
inc
popa
mov
into
lcall
jl
mov
sarb
iret
cmp
mov
lods
or
cmp
push
sub
leave
aad
cmpsb
adc
adc
out
cltd
imul
xchg
xor
jle
out
sub
cmp
xlat
mov
sahf
xchg
roll
cmp
shrl
add
cmp
jae
scas
sub
and
mov
cmp
xchg
aas
lods
call
lahf
ljmp
or
jecxz
out
push
dec
outsb
mov
or
mov
sub
repnz
rcll
shrb
lcall
adc
scas
stos
push
test
dec
les
dec
add
jmp
adc
js
loopne
pop
shrb
arpl
jne
sbb
mov
in
xor
lret
les
mov
cmp
test
adc
icebp
sub
pop
pop
outsl
jb
movsb
rcl
jno
jnp
xchg
jle
jno
pop
popl
clc
and
lret
fs
lods
imul
rcrl
nop
or
stc
xor
test
dec
sbb
cmp
dec
in
sbb
push
scas
or
pop
cld
int
pop
push
xchg
fidivrs
or
stos
mov
mov
ds
cs
mov
pop
or
int3
mov
pop
or
fidivs
push
mov
inc
loop
push
hlt
lds
int3
jbe
ret
std
xchg
loop
cltd
adc
mov
jge
arpl
sub
adc
in
out
fs
sub
je
mov
fpatan
shll
gs
push
xor
xchg
lock
scas
jp
jmp
dec
fs
cmp
mov
sub
std
pop
pop
int
in
jecxz
out
leave
inc
xor
cli
and
fs
in
or
inc
cmp
mov
dec
and
sahf
xchg
leave
xchg
and
adc
je
sub
adcl
jecxz
lcall
fmul
push
cmp
mov
data16
pop
jg
push
enter
sub
js
pushf
incb
cmc
rorb
push
and
cmpsl
fisttpll
jae
sar
leave
xor
mov
lret
setl
and
cmpsb
mov
fistl
sbbl
xor
jge
out
mov
sub
lret
jno
test
icebp
inc
jp
lahf
jno
jl
pop
popf
lea
aas
test
cmpsl
pop
nop
cmp
fsubrl
mov
push
call
cmp
xchg
js
into
test
movsl
mov
and
inc
mov
enter
sub
inc
cmp
lret
adc
cmpsb
add
ljmp
jns
adc
ljmp
je
sbb
das
ljmp
push
hlt
sbb
dec
popf
imul
dec
mov
cli
pop
fbstp
mov
add
adc
cwtl
ret
push
leave
fwait
bound
out
movsl
mov
mov
shrl
fiadds
stos
jp
orl
push
add
notb
cwtl
pushf
and
imul
push
imul
jae
push
jae
loopne
adc
lret
pop
or
insb
jmp
call
jno
cwtl
aam
les
or
aas
cwtl
push
push
mov
add
xchg
or
rcr
sub
aaa
scas
push
in
insb
or
sbb
fcompl
out
inc
fdivl
js
lret
push
scas
hlt
cs
cmp
in
inc
push
sub
cmpb
cmp
fnstenv
flds
aaa
cltd
jbe
clc
insl
aaa
das
lcall
iret
in
das
fsts
jne
fidivrs
cmp
fadd
mov
or
xchg
loope
push
and
pop
sbbl
cld
iret
cmp
jecxz
add
jle
and
shrl
mov
push
dec
mov
dec
push
jge
or
lock
jne
dec
add
ljmp
pop
subb
inc
test
rol
adc
cmp
pop
mov
mov
repz
xchg
pop
scas
adcl
pop
push
xchg
pop
jle
dec
sub
jmp
pushf
scas
pminub
jmp
stos
push
orb
sbb
testb
add
jb
mov
pop
shrb
sbb
hlt
mov
pop
mov
xchg
cmpsl
inc
pop
cmp
pusha
mov
inc
mov
mov
jns
mov
and
shl
add
or
pop
ljmp
in
jb
adc
test
hlt
mov
pop
jmp
mov
mov
push
push
xchg
xor
adc
insb
jnp
dec
xchg
xchg
movsl
xor
shlb
es
adc
rcrb
add
lahf
outsl
out
enter
out
loop
cmp
icebp
mov
cmp
mov
dec
mov
cmp
in
push
mov
sbb
sub
out
xor
pop
pop
fwait
jp
sbb
ret
xor
jge
mov
paddsw
push
fisttpl
jmp
mov
roll
mov
aad
stos
sbb
out
leave
aad
jbe
jae
iret
adc
ljmp
sub
ja
xor
sti
pop
jno
push
xor
adc
add
outsl
jg
pop
xor
xchg
les
mov
mov
pop
mov
and
pop
ds
sbb
clc
push
cmpsl
mov
pushf
push
cwtl
cmp
stos
cmc
dec
in
out
jp
add
in
and
dec
mov
fstps
mov
les
test
fstpl
mov
and
and
xchg
dec
loopne
mov
test
pop
ret
cmpsl
xchg
imul
das
push
call
xor
dec
jne
movsl
fdivrl
aas
ja
scas
mov
int3
test
cwtl
sbb
es
lret
repnz
aam
or
ret
arpl
jmp
aad
sbb
sti
push
addl
xorl
push
push
jmp
push
add
add
lock
add
mov
test
shll
movsl
fldenv
mov
sub
xchg
inc
dec
data16
push
jge
cs
cmpsb
vaddss
sbb
sbb
shl
faddl
mov
mov
div
adc
movsb
popf
push
iret
fwait
adc
add
into
fsubs
dec
xor
out
inc
in
or
scas
scas
aas
xchg
loopne
sub
das
pop
bound
dec
fs
sbb
adc
cld
enter
push
cmp
sbb
outsl
insl
push
push
xor
sbb
inc
add
or
adc
cltd
mov
mov
dec
sbb
cli
pop
shlb
mov
or
inc
mov
xchg
sti
pop
into
cmpl
or
repnz
xchg
leave
cwtl
push
inc
cmp
mov
xor
lret
lret
inc
adc
mov
fstps
mov
jecxz
mov
ja
pop
lock
cmp
cltd
xor
lret
sbb
adc
mov
insl
push
pop
mov
or
add
push
gs
nop
sbb
imul
pop
add
stos
mov
inc
dec
int3
stos
mov
lds
cmp
jns
das
mov
test
adc
jp
push
inc
or
daa
in
movsl
push
lea
addl
pop
lods
adc
shll
mov
push
loope
int3
mov
bound
and
out
dec
sbb
arpl
push
jns
cmp
shld
push
imul
enter
aaa
jg
lock
push
sbb
inc
mov
push
cmpsl
sub
out
outsb
clc
cs
add
in
sub
loopne
xor
jo
add
int3
jb
jl
pop
ss
xlat
mov
jne
aad
mov
push
jo
or
xadd
cli
xchg
pop
sub
push
adcb
push
jae
shlb
lock
inc
cmp
jns
sub
imul
cmpb
adcb
inc
sahf
out
out
mov
jmp
fnstenv
pop
aam
cmp
pop
jl
mov
sub
xor
jno
fistpll
cmpsb
int3
lea
mov
sbb
in
push
adc
xchg
xlat
andb
cwtl
mov
fsubl
addb
mov
jne
nop
cwtl
cmp
mov
mov
add
sbb
pop
xor
mov
and
sbb
mov
mov
jp
dec
adc
fidivs
cmc
pusha
adc
dec
loop
push
mov
sub
cmp
les
rol
lods
jecxz
mov
or
arpl
fistps
cwtl
add
rcrl
data16
sbb
xchg
inc
out
mov
mov
xchg
je
scas
sbbl
adc
sub
push
cltd
nop
pop
cmpb
andb
dec
sbb
int3
iret
mov
rcll
lret
insb
jp
sbb
fimuls
sbb
or
jle
test
out
js
jns
mov
or
mov
lcall
sbb
in
xchg
pusha
jno
mov
inc
and
mov
in
pop
pushf
add
clc
enter
ud1
and
inc
sub
rorb
inc
pop
sub
push
mov
shlb
lds
adc
stc
stc
negb
pop
lds
xchg
les
or
imulb
or
pop
test
in
dec
ret
mov
popa
mov
and
hlt
mov
mov
xchg
adc
aas
jo
lods
lock
push
xor
sbb
bound
mov
push
scas
mov
jb
bound
in
push
int
pusha
data16
mov
std
repz
or
daa
xchg
sbb
push
pusha
add
fs
add
mov
and
loopne
stos
mov
xchg
inc
push
mov
push
das
mov
out
mov
test
cmp
subl
in
or
add
stos
pop
push
sub
xlat
lea
fwait
call
and
les
imul
stos
mov
out
or
fisttps
and
jno
imul
lret
jo
pop
adc
inc
add
push
pop
in
aas
fbstp
fisubrs
add
sbb
lcall
xchg
roll
cmp
adc
scas
push
aaa
xor
or
cltd
lahf
push
jge
icebp
mov
fidivrs
enter
in
mov
insl
add
jl
jae
dec
sbb
jmp
sbb
adc
mov
ds
mov
roll
icebp
adc
mov
sahf
les
inc
mov
mov
lea
mov
sahf
sub
lods
xor
pop
mov
sub
fwait
add
lds
add
or
dec
jmp
testb
sbb
into
add
and
or
mov
push
lea
je
js
xchg
or
push
lock
jae
sub
sbbb
mov
push
int3
sbb
mov
xchg
loope
addl
push
dec
call
xor
insl
xchg
adc
fisttpll
mov
cmp
mov
in
sbb
mov
imul
add
push
bswap
mov
adc
lahf
jl
inc
aas
adc
call
fsubr
dec
pop
mov
and
mov
mov
iret
dec
cwtl
push
and
jmp
cwtl
mov
test
std
fmuls
stos
fisttpll
push
jns
cmp
or
loopne
cli
lcall
cli
cmpsl
ss
outsl
or
push
xchg
xor
ljmp
mov
in
cmpb
cs
bsr
sbb
xchg
insb
rolb
movsl
jp
shrl
daa
aas
mov
jmp
shrb
and
pushf
mov
arpl
xchg
pop
jns
lcall
cld
push
dec
es
loope
pusha
xchg
jecxz
ljmp
out
daa
or
movsb
inc
sbb
arpl
stc
mov
push
int3
xorb
loopne
hlt
dec
lret
push
mov
add
mul
bound
clc
xor
jl
sbb
jmp
sub
rcrb
push
sub
out
ret
push
jbe
cwtl
mov
sbb
inc
fistl
pop
mov
imul
into
inc
fidivrl
sub
jo
sub
pop
mov
fdivrl
or
mov
stos
push
cli
divb
iret
xor
mull
jge
pop
dec
and
int
jge
mov
lock
xorb
addl
and
mov
scas
mov
ss
and
or
inc
repnz
push
int3
jecxz
pusha
fldcw
pop
insl
xor
insb
or
jae
int
repnz
jecxz
test
jae
mov
dec
inc
xchg
pusha
pop
fisubs
jge
lret
sbb
ret
into
xchg
les
xor
cmpsl
aad
je
lret
lret
push
xor
dec
jl
nop
jle
stc
stc
addl
rcrl
cmp
cs
jg
cmp
nop
es
and
mov
pushl
outsb
and
cwtl
es
out
jb
jne
and
addl
out
arpl
jnp
push
cmp
scas
sub
cmp
jo
mov
inc
arpl
in
aas
push
xor
mov
xchg
pop
test
push
push
adc
mov
push
cmc
push
mov
inc
add
dec
je
pop
add
xor
mov
inc
adc
jecxz
dec
xor
adc
pop
std
popa
ljmp
aam
outsb
inc
inc
jmp
jle
lret
jl
cmc
mov
push
stc
jno
mov
dec
outsb
and
adc
aam
add
mov
cmp
or
fdiv
pop
jmp
stos
and
pop
mov
and
lahf
xor
fimull
mov
sbb
sbb
jae
fs
loopne
mov
stc
and
in
loope
test
inc
outsb
cmpsb
les
xlat
ret
or
or
pop
sarl
cmp
mov
cmpsl
in
jp
xchg
sbb
cmp
jl
mov
pushf
int3
jne
fld
gs
jl
shl
cmpsb
sarb
repz
stc
movsl
outsb
iret
dec
imul
mov
in
mov
mov
xchg
negl
lods
scas
pop
xor
lret
jmp
push
sbb
sti
or
jbe
repz
inc
cld
fisttpll
xor
sbb
loopne
xor
loopne
jno
adc
aad
cmpsl
cs
leave
adc
jg
push
jb
jl
or
adcl
pop
outsl
xor
xor
outsb
add
addr16
xor
dec
ljmp
push
or
push
ds
lahf
int
shll
jp
sbb
cmp
lret
lods
jae
mov
mov
push
mov
ja
retw
adc
sbb
and
call
int3
adc
sti
add
clc
test
sub
pop
stos
dec
bnd
into
outsb
fwait
jg
fldt
les
adcb
jle
das
mov
push
xor
and
fwait
imul
xchg
decl
fucom
lret
cs
push
inc
inc
out
icebp
adc
mov
and
fldt
shlb
mov
xchg
out
cld
xlat
pushf
jmp
repnz
aaa
push
bound
rclb
dec
pop
sub
pop
and
sti
mov
add
cmc
lret
dec
mov
js
div
push
inc
je
inc
popa
push
inc
insl
inc
or
and
or
leave
pop
fwait
push
or
cmp
jb
ficompl
adc
lret
mov
jmp
cwtl
ret
mov
push
jmp
sbb
xchg
xorl
lock
mov
scas
fdivrl
repnz
jp
inc
pop
loopne
inc
mov
adc
lret
mov
dec
or
adc
jno
insb
sti
sub
jmp
cmpsl
xchg
xchg
xor
test
in
mov
sub
cmpsb
xchg
or
sbbl
repnz
movq
mov
lods
ss
in
mov
mov
jnp
int
cmp
popa
mov
xlat
sbb
ja
les
xchg
stos
ds
leave
dec
mov
xchg
popf
jmp
inc
or
pop
cmp
stos
and
xchg
cmp
or
push
xor
mov
rcrb
les
addb
lods
cld
push
stos
push
imul
or
lahf
push
sub
xchg
cmp
dec
stos
lret
inc
push
int3
pop
mov
or
jno
out
sub
stos
push
jmp
add
xor
in
flds
in
push
mov
inc
push
hlt
xchg
nop
shl
push
or
andl
sub
push
xchg
loopne
mov
aam
sub
fnstenv
mov
sub
js
jnp
clc
imul
add
les
ljmp
andl
fcoml
out
add
pushf
sar
jno
mov
stc
mov
inc
insb
and
lcall
push
cs
add
stc
test
sbb
adc
shll
xor
pop
dec
cmpsb
lret
and
lds
sub
inc
icebp
mov
rcrl
pushf
out
jns
xchg
dec
leave
fwait
push
popf
and
or
inc
xchg
or
cmpsl
or
mov
push
minps
in
sbb
push
mov
popf
lds
adcb
int3
mov
xchg
and
pop
jns
jl
jg
sbb
adc
xlat
js
fsubs
push
and
jae
sub
mov
push
xchg
xchg
jp
lea
sub
repz
inc
mov
aad
mov
cli
imull
iret
jecxz
in
mov
inc
add
cltd
or
jmp
fsubrs
in
ljmp
mov
bound
push
repz
ljmp
jg
mov
sub
xchg
jb
push
cmp
aas
andb
in
pushf
push
jne
push
add
adc
lret
mov
push
scas
outsl
sub
xchg
dec
test
subl
cli
inc
popf
lcall
pushf
mov
xchg
fstp
dec
out
dec
sub
imul
xor
testl
mov
pop
dec
mov
roll
xchg
ss
cli
mov
in
movsb
test
jp
popa
jmp
jns
adc
cmp
repnz
jg
test
or
negb
push
sub
push
mov
xchg
hlt
fdivrs
inc
and
jae
or
fsts
mov
dec
scas
fsubrs
popf
push
push
inc
imul
pop
adc
mov
sbb
gs
sub
adc
iret
adc
out
sub
pop
and
hlt
or
sti
mov
push
cltd
ret
sub
aam
push
xchg
jp
hlt
pop
sub
or
push
jae
stos
fsubs
rcr
ficoms
mov
adc
aad
cmp
sub
and
add
push
mov
sti
or
orl
int
adc
in
lahf
cmc
mov
and
jo
fstl
insb
imul
mov
in
movntps
cmp
and
mov
add
mov
filds
out
mov
jecxz
out
xchg
adc
or
jnp
stos
popf
aad
sbb
cmpsl
or
repz
adc
push
pop
xchg
push
cmp
cld
add
cmc
adc
inc
rcl
call
or
jb
andl
and
loop
in
in
shl
push
cld
xor
pop
and
mov
hlt
es
stos
andb
xchg
mov
add
adc
jae
cmpsb
lea
popf
lahf
pop
lods
js
les
pop
aad
lahf
xchg
scas
out
jae
mov
fldl
arpl
xchg
mov
hlt
bound
sbb
xchg
push
mov
mov
dec
out
push
aam
out
mov
pushf
pop
lcall
adc
jns
add
sub
sub
jns
cli
stos
fists
jecxz
imulb
in
mov
lahf
xchg
xor
lret
push
dec
lods
or
mov
jb
bound
cmpsl
lea
mov
testb
addl
cmc
pop
add
mov
xchg
sub
rcll
fbld
sahf
xchg
lods
sbb
jmp
xchg
pop
cwtl
jne
mov
movsb
daa
mov
adc
nop
sbb
loop
aaa
jno
repnz
xchg
inc
sub
jp
js
xor
call
lods
xor
lds
xchg
cmp
ja
push
adc
push
pusha
xor
js
ss
sub
frstor
push
pop
cmp
mov
push
jle
dec
pusha
pushf
fdivs
cmp
xor
xchg
imul
xchg
sub
fsubr
pop
xchg
cli
out
pop
xlat
aas
imul
pushf
xchg
fcmovnu
xchg
mov
inc
jns
jge
dec
rorb
push
cmpsl
mov
cmp
jge
lahf
xchg
mov
or
test
sub
cmp
in
and
call
inc
jae,pt
xor
mov
mov
xor
mov
push
fisttps
adc
xchg
inc
mov
dec
enter
add
movsl
cmc
cmp
mov
sbb
data16
mov
xor
scas
loope
xchg
aas
mov
sbb
mov
sbb
loopne
scas
insb
aam
inc
mov
imul
ret
imul
and
push
fists
adc
push
shll
and
sarb
in
mov
andb
inc
enter
xor
cltd
push
out
cltd
ljmp
adc
loopne
cmp
mov
dec
aas
js
lock
mov
repz
jge
fsts
and
dec
jecxz
add
test
inc
inc
loope
sarb
fmull
adc
mov
out
aas
sub
xchg
or
inc
in
mov
imul
pop
gs
sub
inc
imul
dec
or
cmpsl
sub
sub
push
mov
and
sub
cli
outsl
sub
inc
push
xlat
inc
pop
test
dec
sub
shrb
pop
sbb
xchg
in
adc
ss
jecxz
mov
sub
test
jno
pop
adc
out
insb
cmp
in
adc
inc
ret
addr16
xor
loopne
sbb
sbb
popa
sub
add
popf
decl
fsubrl
adc
fildl
mov
mov
sti
into
cwtl
inc
imul
add
pop
out
cmpb
adc
mov
scas
int
idiv
es
outsb
cld
cli
imul
inc
inc
clc
movsb
xchg
scas
shll
int3
test
stos
jbe
stos
das
or
push
and
dec
inc
lcall
ret
cmp
pusha
xchg
rclb
inc
movsl
xchg
sub
or
test
sub
sbb
mov
fucom
std
dec
js
pop
xor
clc
push
push
insb
int3
xor
jp
movsb
xor
je
dec
cltd
ficomps
cmc
mov
mov
cli
test
xchg
dec
ljmp
add
rclw
mov
lea
outsb
inc
and
lret
fnstcw
fidivs
pusha
pop
pusha
adc
mov
aaa
xor
or
sti
test
je
pop
stos
pop
testl
pop
dec
arpl
mov
sub
rorb
push
mov
ljmp
out
sti
icebp
jmp
inc
dec
xlat
mov
adc
test
xchg
and
test
inc
loopne
cmpsb
inc
mov
repz
sbb
outsl
or
xor
xor
fdivl
dec
inc
sub
add
pop
repz
loop
and
inc
lods
mov
andl
imul
push
xchg
vhaddpd
out
ret
jnp
aaa
xchg
adc
and
imul
sub
cmp
sbb
push
repnz
jge
das
inc
sbb
pop
fiaddl
out
pop
jmp
mov
jge
imul
jle
loope
cmpb
mov
cmpl
loop
push
lea
adc
arpl
sbb
jb
mov
push
xor
sbbb
add
out
int
push
int3
mov
xchg
insl
aas
in
cmp
inc
xlat
fisttpl
int3
mov
sbb
out
rclb
and
adc
push
stos
adc
pop
fadds
push
test
mov
shll
push
enter
rcrb
dec
jb
repz
repnz
movsb
pop
adc
xchg
hlt
dec
stc
shlb
in
imul
push
push
and
divb
loop
xor
sbb
xorl
iret
or
lods
popf
mov
movsl
aaa
and
inc
adc
lock
and
stc
inc
cltd
add
aam
jnp
cmp
push
cli
or
add
add
jno
xchg
sbb
add
insb
popa
mov
inc
sar
jno
pop
subl
daa
outsl
xchg
nop
push
enter
insl
cli
add
xchg
or
cmp
mov
shrl
jnp
jmp
jno
test
and
jmp
dec
inc
sub
mov
dec
in
repnz
xlat
mov
sbb
sbb
mov
pop
cmp
mov
jecxz
fsubl
pushf
push
adc
xorb
and
jns
loop
sub
popl
jae
sub
push
sub
xchg
xchg
lret
xchg
daa
push
andl
mov
movsl
pop
cltd
adc
out
xchg
mov
sbb
addr16
pop
mov
adc
push
xorb
cltd
push
mov
jo
xchg
cmp
mov
jb
add
lds
jbe
pop
shlb
lcall
push
or
mov
dec
dec
inc
sahf
stos
mov
sub
mov
sub
cmp
xor
ret
scas
push
jns
ljmp
out
int3
mov
pop
cld
shrb
dec
mov
es
mov
sub
sub
daa
and
add
add
sbb
stos
sti
mov
jmp
mov
call
js
dec
dec
mov
lds
add
daa
sub
add
cmc
pop
inc
hlt
insb
ret
dec
out
ficoml
lret
jae
or
xchg
daa
jae
sub
sbb
mov
or
addr16
aas
cwtl
cmp
out
imul
add
mov
pop
cmp
jno
fisubrl
lret
movsb
inc
and
xchg
jmp
roll
adc
clc
shr
adc
ja
into
lea
cmp
push
lea
sahf
aas
mov
and
cmc
xorb
pop
cmp
mov
mov
lods
jmp
mov
lods
sbb
adc
ja
jmp
out
rorl
mov
push
daa
pop
loop
and
test
ret
fwait
jbe
repnz
pop
in
xchg
out
mov
stos
inc
jecxz
xlat
cmp
inc
fstps
or
pop
dec
and
jl
sub
inc
fisubs
push
cmpsl
lcall
outsl
jmp
pop
xchg
pop
imul
cmp
scas
fiadds
push
adc
pop
mov
jecxz
fs
ficompl
inc
sub
pop
idivb
sub
adc
mov
jnp
popw
add
sbb
fistpl
xchg
outsl
sub
aad
inc
sub
lea
ret
fs
pushf
push
subl
mov
jp
ljmp
mov
fwait
icebp
shrb
fadds
gs
addb
mov
cmp
push
cmp
sub
and
inc
bound
lds
cli
push
dec
jl
cmp
call
in
xor
inc
mov
mov
pop
cmp
push
mov
lahf
xor
loop
popa
lock
push
jmp
sub
or
pop
test
out
pushf
xchg
and
lds
xchg
and
repz
xlat
in
decb
or
adc
mov
mov
or
fs
les
dec
add
scas
inc
mov
adc
enter
inc
or
insl
shlb
out
ljmp
in
fwait
xchg
and
scas
mov
pop
mov
lret
int
push
inc
xchg
xchg
xlat
lods
dec
roll
pop
pop
inc
inc
aad
lcall
nop
mov
mov
mov
or
int3
xchg
add
inc
add
mov
dec
fmuls
mov
sbb
insl
mov
hlt
mov
dec
ds
cmp
iret
outsb
cmc
sub
into
xor
cmp
mov
sbb
dec
xor
cmc
out
push
dec
mov
gs
scas
jne
les
out
pop
sub
add
cmp
cmp
lcall
repnz
jae
sbb
xlat
mov
ja
mov
cli
out
add
pop
imul
pop
xor
arpl
aad
mov
xchg
lods
rorb
add
aas
mov
cld
addr16
sbb
test
xchg
sbb
out
mov
or
fidivrs
std
lahf
xchg
mov
push
push
test
push
mov
in
pop
movsl
push
ds
push
jg
mov
hlt
cmpsl
jo
fbstp
inc
leave
xor
or
push
call
fildl
in
push
addr16
int3
mov
out
pop
sub
xor
cmpsb
out
dec
cmpsl
inc
sub
mov
inc
daa
mov
lods
jno
cwtl
pop
mov
int
or
sub
ret
sub
jecxz
es
test
mov
aad
adc
push
sub
push
dec
or
adc
xchg
aaa
and
fdiv
push
dec
lret
inc
mov
sub
push
iret
jb
and
xchg
cmp
orl
outsb
repnz
cmp
aad
jp
out
mov
xlat
clc
insb
icebp
lcall
ss
jg
rorb
inc
add
nop
cmc
jo
mov
sub
jmp
test
sbb
roll
xchg
xchg
jmp
arpl
in
jmp
mov
adc
xchg
dec
cmp
outsb
inc
mov
sbb
fsub
xchg
stos
jno
jae
push
pop
pushf
out
neg
mov
mov
aad
ret
jo
repz
fimull
fdivs
and
in
stc
test
fidivrs
fs
push
int
imul
call
sbb
ret
mov
and
out
adcb
scas
dec
out
jp
inc
ds
or
sahf
shlb
sbb
ret
xor
cld
mov
nop
adc
sub
lds
movsb
and
push
bound
out
mov
jbe
push
push
cli
ljmp
bnd
mov
sbbb
jecxz
mov
jg
ret
sub
ss
mov
xchg
shl
mov
push
mov
and
lods
push
int3
xchg
fst
pop
gs
lods
subl
outsb
cmp
shlb
jmp
mov
lahf
sbb
or
sahf
cli
push
ret
int3
jbe
or
cmpsb
shr
icebp
push
add
dec
cmc
pop
ds
or
repz
cwtl
mov
in
pop
xchg
enter
shr
cltd
sahf
xchg
aad
lds
adc
out
fdivr
mov
jne
rcrl
adc
mov
sub
jmp
movsb
je
imul
sub
lds
sarl
cld
hlt
sub
popa
mov
stos
in
or
into
aas
fistpl
fmuls
test
pop
les
out
or
ja
loope
sarl
lock
fcomi
inc
dec
mov
adc
cltd
ds
std
inc
clc
loop
mov
push
loop
pop
hlt
and
add
jle
mov
ret
fidivrl
jl
aam
dec
cmp
clc
mov
pop
xchg
aaa
push
push
dec
inc
and
aas
in
sub
add
in
out
mov
jb
imul
mov
xchg
out
movsb
inc
pop
or
pop
jns
xchg
mov
push
sbb
in
insl
aad
sbb
cwtl
pop
loopne
jne
add
mov
dec
mov
insb
icebp
cltd
insb
mov
hlt
mov
fst
lods
shll
sub
inc
out
sub
std
loopne
mov
jle
mov
enter
adc
add
repz
xor
mov
or
xchg
outsb
push
mov
pop
shll
xchg
mov
imul
daa
jne
xor
xlat
movsl
mov
adc
repz
jns
inc
or
fs
test
sbb
rol
cwtl
pop
inc
cmp
push
out
loop
mov
out
icebp
pushf
data16
call
lcall
sub
movsl
lods
sar
out
xchg
in
push
test
pop
adc
ljmp
in
sub
mov
sbb
push
in
jbe
decl
mov
stos
mov
subl
jp
popa
pop
and
cltd
inc
or
out
mov
mov
add
adc
out
mov
int
enter
mov
fsubl
daa
adc
mov
cli
dec
in
mov
sar
cmp
dec
in
adc
inc
sub
fstps
adc
add
or
jecxz
leave
adc
gs
jae
inc
add
andnps
hlt
pop
ja
lea
adc
int
cmp
lea
push
inc
fldcw
dec
adcl
test
in
cmpsl
inc
inc
incb
jbe
push
into
popf
std
jne
aam
nop
inc
jae
mov
inc
jo
fstpl
out
add
adc
enter
mov
imul
adc
or
dec
dec
dec
cltd
push
ror
fwait
adc
movb
in
ss
jecxz
mov
repz
inc
fwait
add
and
adc
je
jo
notl
fs
enter
imulb
or
fwait
iret
dec
and
ja
in
fcmovnb
lret
leave
mov
inc
fs
add
mov
enter
inc
push
cmp
jle
dec
mov
and
adc
sub
inc
pop
dec
push
lock
cmp
leave
cli
hlt
mov
das
jle
sbb
subb
xchg
cmp
adc
inc
xlat
inc
cmp
mov
jecxz
stos
mov
mov
dec
push
sbb
sbb
mov
jbe
imul
pop
stc
das
inc
imul
or
je
stc
push
sub
cmpb
dec
inc
mov
sub
and
or
shrb
fldl
pop
pop
std
into
jle
sahf
jmp
test
lods
and
xchg
ja
add
pop
test
push
push
mov
mov
lds
imul
movsl
insb
int
scas
mov
fistpll
cmpl
mov
rorl
fbstp
loopne
incb
cld
divl
aas
sbb
or
fisttpll
mov
adc
add
call
inc
andl
test
lret
rcrl
mov
sub
sub
dec
int
ret
and
dec
icebp
int
out
add
adc
mov
mov
xor
loop,pt
ss
mov
pusha
push
xchg
inc
ljmp
sub
push
out
or
lahf
cmp
nop
shlb
mov
dec
push
inc
jmp
jne
mov
jl
daa
xor
push
pop
sbb
xchg
out
out
and
or
inc
popf
pop
cwtl
or
inc
out
int3
xadd
xor
push
js
cli
paddsb
push
and
cmp
mov
xchg
rol
scas
movsb
push
jnp
je
pop
jb
xchg
cmp
out
mov
adc
in
ljmp
popf
and
ret
daa
mov
jg
scas
dec
inc
test
popa
dec
hlt
int
cmp
or
outsl
adc
mov
adc
add
or
roll
push
xchg
mov
scas
test
mov
jo
fisubl
popf
test
push
pop
test
and
test
mov
sbb
or
adc
mov
sti
les
vgf2p8mulb
lret
test
push
test
imul
add
push
jns
mov
and
inc
mov
movsb
ljmp
add
adc
mov
pushf
inc
hlt
ljmp
cwtl
ret
cmp
loope
inc
test
dec
sub
cmpsl
mov
cwtl
lea
mov
xchg
adc
jle
inc
or
dec
dec
insl
mov
bound
aas
jl
mov
jmp
jg
fwait
mov
or
mov
test
lods
cmp
jnp
aas
add
aaa
test
lcall
push
aaa
fbstp
push
or
dec
call
decl
aam
cmp
sub
mov
subl
jbe
or
mov
cmp
pop
mov
sbb
pop
cmp
imulb
jp
sbb
dec
xchg
incb
lret
aaa
lahf
pop
lcall
push
sbb
into
push
ret
sub
outsb
mov
pop
pushf
mov
sub
scas
inc
add
lahf
fwait
xorb
repnz
jl
push
cmpb
push
lret
loopne
and
xchg
arpl
repz
push
data16
test
cmp
dec
aas
cmp
mov
jmp
int
add
cmp
test
lea
sbb
imul
dec
leave
dec
cwtl
popf
mov
in
test
mov
mov
mov
leave
out
xchg
arpl
push
mov
adc
push
subb
sub
dec
cwtl
mov
jnp
cmc
into
xchg
pop
cmp
jmp
mov
cmp
mov
and
mov
scas
jnp
enter
cmpsb
inc
or
imul
stc
mov
stc
and
divl
shlb
dec
sbb
ljmp
add
lods
sbb
insl
and
sbb
sbb
sub
je
lret
iret
push
repz
cmpsl
pushf
cltd
ret
repnz
or
mov
rcl
iret
inc
add
inc
lcall
push
pop
loopne
decl
cmp
jg
insb
cwtl
jns
cmpsb
mov
xchg
jle
xor
cmp
je
fwait
sarl
sub
push
lds
outsb
ja
std
jp
movsb
lea
mov
dec
ljmp
mov
dec
insl
adcl
sar
insl
or
inc
pop
in
inc
cmp
imul
into
bound
or
repnz
ret
out
cmp
adc
test
ds
push
insb
mov
in
test
stos
test
aaa
mov
sti
gs
dec
xchg
mov
ror
testb
mov
mov
pop
addb
enter
out
or
or
mov
add
pop
pusha
sahf
inc
jp
gs
dec
pop
imul
test
shll
das
enter
iret
repnz
lods
dec
dec
rcrl
in
add
dec
jecxz
cltd
pop
shrb
sub
call
sbb
cld
fs
cmp
addr16
sbb
jb
daa
or
or
fsubl
jp
cmp
adc
lea
hlt
push
mov
lahf
fmulp
jge
mov
inc
mov
inc
mov
sti
dec
mov
xlat
icebp
into
jecxz
push
bound
sub
pop
inc
repnz
adc
pcmpgtd
cwtl
fstpl
aad
test
ja
pop
lods
push
add
gs
add
and
xor
pop
xchg
into
in
arpl
lea
add
push
xchg
fdivr
subb
fnsave
nop
in
jb
mov
int3
sbb
loop
iret
cltd
aad
hlt
sti
push
cmp
cmp
es
sbb
pop
mov
jo
fiadds
xor
in
outsb
lret
insl
lret
outsl
mov
leave
mov
fstps
orl
jne
leave
sahf
ret
into
roll
dec
cmp
adc
imul
sysexit
or
scas
das
mov
lock
jne
push
in
sub
mov
xor
mov
sub
repz
cltd
lret
cs
leave
out
repnz
sub
dec
dec
int3
xchg
add
add
outsl
jge
jae
data16
rcrb
stos
stos
out
jge
xor
mov
mov
pop
mov
cli
ljmp
sbb
pop
adc
cmc
push
push
adc
lods
inc
mov
jne
rorl
and
cs
loopne
mov
pop
dec
add
repz
lods
jge,pt
popa
int3
insl
mov
pop
out
jle
addr16
pusha
sbb
push
xchg
pusha
call
xchg
sbb
cld
push
push
fstps
mov
dec
xchg
data16
adc
push
push
test
aaa
paddd
inc
mov
jg
out
mov
mov
mov
aaa
ss
jle
adcl
cmc
cmc
ds
movsb
mov
push
sub
and
jne
or
inc
xor
cmp
and
push
enter
mov
mov
lods
cld
add
cmp
outsb
cmp
mov
iret
mov
push
aad
inc
xchg
inc
push
adc
fidivrl
inc
daa
aas
seto
mov
xchg
jno
inc
fisubs
repnz
psubusw
add
jle
cmc
lods
lea
add
mov
and
imul
push
dec
push
inc
jg
mov
cmp
sbb
int
fsubrl
add
das
in
fdivl
xor
push
xchg
jl
stos
adc
shlb
xor
rclb
out
lods
cwtl
outsb
das
aam
push
push
mov
dec
mov
push
push
sub
fstps
cltd
or
ljmp
sbb
push
mov
cmp
aam
jge
add
imul
xchg
pop
enter
nop
jne
fcmovu
add
jecxz
ds
pop
jb
xchg
mov
cmp
dec
mov
popa
out
inc
cld
pop
sti
sbb
sbb
add
ficompl
inc
cmp
xor
jo
shl
packsswb
xlat
jnp
stc
jno
sahf
lods
xchg
out
jle
or
sti
dec
or
scas
xchg
jecxz
test
cmp
ficomps
leave
xchg
xchg
push
jle
arpl
adc
enter
in
imul
jno
cwtl
dec
add
xor
xchg
or
cwtl
test
add
add
lds
add
stc
pop
cmpsl
loop
orl
adc
imul
addr16
imul
dec
pop
jne
mov
fwait
and
adc
jnp
push
jecxz
fwait
cli
orl
xlat
fisttpl
movsb
mov
pop
fcompl
iret
mov
mov
xchg
sarb
adc
jb
shll
shl
mov
or
mov
xlat
loope
mov
in
jns
insb
fwait
add
imul
xor
jb
xor
stc
pop
inc
cld
pop
std
cli
push
push
mov
xlat
in
ret
xorb
mov
clc
mov
mov
jle
loope
jmp
sbb
rcrb
xor
xchg
out
test
sbb
and
mov
test
enter
mov
rep
jb
lret
jbe
inc
jmp
pop
xchg
inc
xor
dec
add
in
adc
sub
out
cmp
jb
mov
push
xor
jns
cli
lods
xor
push
sbb
jne
mov
push
lcall
xchg
jbe
movntq
mov
and
clc
mov
ljmp
lcall
pop
rcr
ret
xchg
push
push
in
sahf
xchg
aam
xchg
xor
inc
shlb
mov
mov
imul
icebp
test
ljmp
inc
cs
cmpsl
jp
cmp
inc
push
push
test
or
jb
lret
dec
adc
xchg
jg
dec
dec
mov
mov
push
and
ja
stos
fdivrl
dec
lock
out
mov
repz
scas
xor
out
mov
loop
int
and
sbb
xlat
or
push
lcall
and
push
sbb
mov
sahf
pop
or
insb
inc
je
cmp
mov
sbb
paddsb
pop
sbb
or
roll
mov
in
dec
imul
ret
arpl
dec
bound
mov
cmc
or
pop
jns
sarl
in
or
adc
test
movsb
cwtl
add
stc
out
push
fimull
sub
mov
push
push
fstl
imul
mov
and
fpatan
mull
jg
ret
push
stc
mov
dec
jl
jecxz
addr16
lahf
sbb
push
sbb
push
cmpsl
ret
dec
push
ds
sarb
in
pop
jbe
jmp
xchg
push
loope
pushf
jmp
in
pop
jnp
inc
out
sub
pop
jge
rcrb
fisubl
inc
incl
ljmp
mov
je
sbb
shrl
loop
dec
push
imul
mov
in
sub
pop
incb
jo
aas
out
jecxz
xchg
lods
in
jecxz
cmp
sbb
aaa
mov
jg
out
fdivrs
call
sbb
add
stc
jl
jp
stos
pop
fwait
jle
push
bound
aam
mov
adc
insb
pop
pop
dec
addr16
pop
mov
jno
lock
pop
xor
sbb
push
pushf
stos
add
stc
sbb
psubusw
dec
dec
rcrb
push
ss
in
subl
jne
add
jle
fwait
xlat
incl
fbld
mov
aam
enter
pop
inc
adc
push
int3
js
pop
gs
scas
jmp
or
pop
clc
mov
sub
mov
mov
jo
sub
loopne
out
enter
jle
inc
mov
mov
mov
les
or
sub
movsb
mov
mov
sub
outsl
mov
xchg
cmp
loope
adc
jbe
add
dec
pop
shll
pop
pop
xchg
lcall
push
loope
mov
xchg
sub
xorb
push
lods
jb
js
hlt
inc
test
sbb
rcrb
push
mov
cmp
scas
out
pop
inc
sarl
fildl
sub
push
lods
sbb
cli
in
stc
sbb
push
adc
js
lahf
xor
add
shlb
sahf
test
aam
xchg
movsb
push
fwait
not
fcmovnu
xor
xchg
mov
fidivrs
je
xor
iret
enter
ja
jge
out
movzwl
push
testl
xor
mov
stc
pop
repz
dec
jns
jns
jle
mov
sub
push
add
push
cltd
ret
aam
in
test
ss
movsl
mov
orb
pop
ficoms
or
add
shlb
leave
mov
sti
mov
outsl
mov
mov
dec
aad
pop
inc
dec
or
jecxz
gs
fstpl
in
data16
mov
sbb
daa
paddw
xor
repz
inc
inc
int3
test
sub
jae
xchg
cltd
loop
and
test
inc
ret
lret
and
fisttps
jne
stc
std
andl
jns
fidivrl
test
in
mov
es
jecxz
push
mov
sbb
ss
shll
adc
out
fcoms
jo
mov
js
push
pop
sbb
dec
jae
dec
push
sub
xchg
movl
out
pusha
inc
sbb
pop
imul
sub
ret
rcr
mov
dec
sbb
div
jb
addr16
mov
sbb
push
jns
xchg
fbstp
xchg
popa
clc
movsl
xchg
stos
xchg
cs
data16
jg
insl
jle
cmp
inc
adc
rclb
and
xor
ds
insb
mov
xor
test
mov
add
test
clc
sbb
test
and
jnp
nop
jbe
pushf
dec
or
mov
psubq
test
jo
sbb
mov
jle
sub
xor
pushf
cltd
or
icebp
adc
repnz
data16
aaa
adc
cmp
lea
mov
andb
add
add
adc
mov
pusha
decb
sub
data16
cmp
sub
fwait
out
mov
hlt
push
jp
outsl
adc
xor
enter
vmread
outsb
mov
push
out
mov
addr16
std
push
repnz
or
or
pop
sbb
mov
test
mov
icebp
loopne
nop
movsl
std
ret
mov
imul
ljmp
jp
pop
mov
test
cmpsb
mov
cmpsl
push
add
aam
pop
or
mov
lcall
mov
sbb
mov
jns
shlb
insl
lret
scas
movb
push
jb
mov
xchg
subb
imul
mov
cmp
fsubrs
sti
cwtl
and
mov
ret
scas
mov
fstpt
jge
pop
xor
leave
pusha
pop
dec
push
xchg
ret
fldl
es
jnp
inc
fidivs
repz
mov
jbe
stc
cmp
cltd
insl
and
adc
adc
push
and
stos
push
pop
cli
dec
scas
repnz
outsl
pusha
add
in
dec
jp
imul
mov
jno
fidivrl
shl
shlb
je
fldl2t
sub
xchg
pusha
scas
iret
jg
js
push
add
jo
jmp
jl
xchg
inc
and
xor
mov
je
aam
inc
subl
sbb
push
jg
std
subl
std
movups
fwait
jne
adc
std
sub
add
js
mov
dec
insl
add
das
xchg
stos
jno
test
and
mov
fwait
mov
scas
mov
and
ja
inc
add
sub
xlat
push
ret
xlat
jecxz
mov
bound
out
in
mov
cli
push
jp
push
stos
jl
mov
pop
jno
xchg
stos
mov
arpl
movsl
bound
pop
fstpl
fdivs
fimull
out
scas
in
ja
or
jo
mov
cmp
xchg
outsb
dec
cmp
ja
jmp
in
iret
gs
push
dec
loope
pushf
cld
cld
test
ds
push
sbb
fwait
xchg
pop
clc
lar
push
sub
das
roll
push
mov
dec
sbb
jmp
test
or
in
nop
and
mulb
mov
mov
fisttpll
pop
aad
adc
and
movl
daa
push
dec
repnz
lock
xchg
loopne
and
pusha
icebp
xor
lret
data16
xchg
ja
movsb
repz
jp
mov
movsl
in
sbb
jmp
ficomps
sbb
clc
cld
es
std
sub
stos
add
popa
jbe
mov
stos
mov
pushl
into
xorb
enter
pop
xlat
cmpsl
xor
ror
loop
imul
fimuls
imul
pop
fs
in
push
int3
loope
mov
stc
cli
fists
rclb
negl
test
push
pop
mov
and
aam
and
sub
adc
cmp
fbld
imul
cmpsl
flds
jno
sub
movsl
mov
loop
fstpl
inc
enter
xchg
clc
mov
out
fwait
pushf
lods
or
or
push
jmp
pop
add
sub
xor
xor
idiv
push
cmp
cmc
cmp
mov
xor
pop
push
cmpsb
adc
xchg
stos
inc
shlb
mov
mov
or
xchg
xor
in
enter
leave
jg
test
sbbl
cmpsb
leave
add
cmpsb
fsts
sti
ljmp
cmpsl
cmpsb
jno
inc
add
insl
and
jnp
lds
push
ss
cmp
inc
incb
cmpb
or
loope
rcrl
xchg
sarl
shll
repnz
movsl
cmpsl
xor
mov
into
mov
imul
faddl
jae
cltd
xchg
cmpsl
jl
daa
outsb
test
xchg
std
scas
fldt
push
fmuls
testl
xorl
adc
mov
jbe
bound
add
mov
push
jno
and
test
outsl
shlb
and
in
adc
push
fucomp
dec
mov
cmp
fmulp
aad
pop
scas
sarl
jg
fldlg2
test
scas
ds
mov
out
fucomp
int
add
sbb
jecxz
popf
shr
scas
or
dec
std
inc
ret
enter
cmp
arpl
or
pusha
sbb
ljmp
jle
shrl
fildll
xor
pop
idivl
loope
je
or
pop
adc
adc
sbb
ss
out
lods
or
aas
mov
jnp
mov
push
cmp
add
and
push
std
iret
push
mov
into
das
xor
push
adc
sbb
arpl
mov
enter
out
push
repz
mov
add
pop
xchg
inc
xor
test
inc
int
cltd
push
pop
or
leave
adc
cs
test
loope
or
popa
imul
inc
in
add
insl
out
xchg
adc
frndint
rolb
jo
xor
out
scas
cmpsb
pushf
popa
into
inc
cltd
cmp
xchg
lods
sahf
sbb
loopne
imul
mov
ficompl
or
add
and
ds
sub
jbe
sub
pop
cmp
aam
loope
jmp
dec
mov
mov
dec
mov
xlat
dec
sbb
jle
and
rorl
mov
fstpt
push
lods
int
jmp
pop
pop
sbb
lret
clc
rclb
xchg
mov
xchg
push
sbb
jl
or
and
clc
jnp
sbb
or
xchg
mov
insl
repnz
jb
test
xchg
sbb
jl
outsl
sbb
mov
rcl
mov
fnstcw
xor
mov
xchg
dec
fsts
idivl
popf
std
mov
dec
loop
notl
icebp
jnp
inc
test
shlb
int3
mov
mov
fidivrl
xor
dec
lcall
ljmp
adc
sbb
adc
cmp
mov
sbb
lock
adc
add
dec
roll
stos
test
jecxz
add
leave
xchg
jb
popf
movsl
insb
cmp
mov
cmp
sub
int3
cld
pop
jmp
filds
cmp
inc
sahf
orb
fadd
pop
push
scas
push
idivb
lretw
pop
and
mov
add
mov
repz
hlt
jno
xchg
push
jle
nop
insl
jae
fdivrl
mov
or
or
mov
dec
mov
addr16
lret
cwtl
imull
and
xor
mov
sbb
xchg
xchg
cmpsb
xlat
cmpsb
sbb
add
adc
or
xchg
or
loope
mov
mov
mov
test
sti
test
les
jo
and
sbb
inc
push
imul
ficomps
pop
insl
jno
xchg
popf
cs
xchg
repnz
jne
sub
mov
divl
push
cmpsb
or
mov
and
daa
out
andl
lret
ficoml
adc
cmp
pop
pop
push
je
xchg
out
in
mov
add
jo
sub
stos
das
movsl
mov
andb
mov
push
push
jle
sub
sub
sbb
ret
and
in
loope
add
imul
xchg
jle
repnz
mov
lea
test
shlb
dec
mov
pop
dec
pop
xor
cmp
ds
xor
inc
jo
push
jle
push
subl
fadds
adc
dec
rclb
adc
ds
adc
pop
scas
fnstcw
sub
test
xchg
add
inc
push
sarl
pop
mov
cld
cmp
sbb
xchg
cmpsb
adc
mov
icebp
fwait
xchg
xor
or
inc
lahf
dec
repnz
sub
mov
cld
xor
cmp
roll
add
fstps
je
mov
push
and
mov
mov
cs
pop
mov
btr
pop
roll
push
pushf
cld
mov
sbb
mov
in
push
imul
cld
push
wbinvd
inc
icebp
push
push
movsb
jmp
call
stos
or
sbb
jo
sbb
xor
adc
sbb
nop
pop
idivl
inc
mov
xor
pop
mov
pusha
jmp
mov
iret
jp
mov
stos
popf
push
sarl
or
fcmovnbe
aas
push
jmp
lret
pop
xchg
sub
push
xchg
adcl
jb
cltd
dec
js
xor
pop
pop
loope
cwtl
popf
mov
adc
hlt
xlat
cmp
mov
je
rolb
pop
and
into
push
xor
roll
cmp
fldcw
xchg
movsl
jmp
lret
inc
xchg
aaa
inc
mov
outsb
add
pop
adcb
mov
jmp
adc
lret
clc
mov
loopne
and
xchg
mov
mov
mov
cs
cmp
popf
in
dec
and
pop
jp
dec
inc
adc
cltd
inc
push
daa
in
mov
and
jbe
sub
fcoml
ficompl
mov
mov
sbb
std
xor
jecxz
cmp
imul
gs
push
pop
adcb
addb
ss
mov
cmc
rclb
and
pop
fimull
pusha
iret
or
or
jp
cmpsb
mov
dec
push
shrb
jbe
fmull
shrl
mov
xchg
scas
cli
push
sbb
or
cmc
pusha
aam
sub
jae
ret
fucomip
repnz
or
inc
test
iret
in
mov
mov
sbb
lret
add
add
sub
xor
sbb
add
dec
jne
dec
imul
fwait
xchg
inc
jno
cwtl
pop
ja
xor
jnp
shlb
mov
cmp
jb
fcmovnb
xchg
mov
cmpsl
or
mov
adc
leave
cld
stc
out
shl
outsb
pop
xchg
shll
lock
mov
push
push
ljmp
jae
mov
mov
sub
xchg
and
mov
and
enter
lods
sbb
jl
mov
ds
inc
xchg
out
hlt
or
ljmp
push
mov
fimuls
pop
mov
movsl
es
push
mov
insb
add
mov
out
aaa
aad
pop
jle
mov
stos
pop
ljmp
loopne
sbb
test
xchg
in
or
fcomi
push
xchg
push
je
sbb
xor
cmp
jo
rcr
jecxz
push
push
mov
sbb
inc
orl
add
push
pop
or
mov
aaa
xchg
sub
inc
pop
jns
nop
xchg
das
aad
stc
movsl
ljmp
dec
into
cs
clc
xor
loop
popf
sbb
jns
iret
pop
or
aaa
push
and
pop
push
xor
std
jl
je
roll
jbe
pop
cmp
inc
mov
aaa
sbb
fidivs
push
rcl
push
or
push
push
pop
and
or
int3
mov
pop
fwait
es
pop
and
lea
jae
pop
std
pop
jns
cmp
pop
out
pop
cs
cmpsb
xchg
push
aam
out
ljmp
dec
arpl
mov
or
xchg
mov
rcll
dec
shrl
lea
adc
dec
inc
dec
lret
leave
rcll
adc
bound
clc
sbb
mov
outsl
jge
bound
fcoml
mov
push
mov
aas
push
xchg
sub
dec
int3
fdivrp
add
cmpsb
jbe
push
dec
shr
xchg
jecxz
lcall
shll
iret
loope
jg
lret
mov
mov
push
into
in
shr
aam
push
jmp
sub
cs
mov
inc
cmp
dec
push
sahf
pushf
lret
rol
test
pushf
bswap
jae
shlb
movsb
lods
mov
cmp
lock
adc
dec
jae
push
test
shll
pop
into
inc
stos
mov
xor
inc
push
push
in
inc
repz
and
adc
icebp
mov
pop
pop
test
xchg
jge
and
insl
adc
jmp
pop
xchg
fsubl
and
scas
mov
cwtl
int3
in
lcall
lock
mov
aaa
sub
xor
mov
cli
lret
ss
imul
cmp
repz
cmp
lock
pop
mov
popf
mov
add
clc
push
jg
jecxz
mov
scas
out
or
jae
andl
jbe
pop
test
inc
sbb
pop
sbb
fldt
jno
mov
push
lds
jno
sbb
mov
rolb
or
xchg
mov
sub
into
sbb
in
ret
adc
in
push
les
xor
jns
movsl
push
push
lds
push
popf
jmp
sub
out
xchg
add
sub
imul
cltd
rorl
xchg
cmp
in
pop
fidivrl
jbe
addl
sarb
jg
aad
mov
paddw
mov
loop
call
fwait
das
adc
imul
stos
les
push
pop
and
nop
pop
call
lcall
shll
call
pop
sahf
sbbb
jmp
cmp
stc
jp
ljmp
jecxz
in
push
xor
cltd
jmp
xor
lret
adc
dec
pop
imul
or
sbb
rep
icebp
mov
arpl
rcr
or
daa
jo
setge
push
jno
push
fucomip
divl
inc
add
xor
in
mov
push
std
jg
mov
mov
lods
movsl
adc
add
inc
int3
jl
shl
call
int3
xchg
inc
push
es
jne
incb
adc
test
mul
stc
addr16
cmp
pusha
les
sarl
pop
pop
sub
jp
outsb
inc
mov
mov
lea
add
repnz
xor
enter
mov
lahf
fistpll
addr16
out
xor
mov
mov
mov
add
lock
push
push
lds
pop
pushf
or
and
mov
pop
cmp
insl
add
or
adc
mov
adcb
lret
add
mov
lods
lods
pop
mov
jo
es
popa
inc
and
sarb
lret
inc
imul
and
outsl
push
mov
pop
pop
adc
push
in
and
int3
incb
add
push
xchg
fsubl
mov
data16
xchg
inc
mov
xchg
aad
cmpsb
jge
test
rcrb
mov
test
aam
movsl
imul
cmp
inc
mov
dec
out
mov
movsb
stc
xor
fsub
mov
test
and
lods
jmp
dec
inc
jp
out
mov
idiv
and
jl
adc
push
popf
xor
pop
test
adc
test
sub
fistpll
sbb
adc
cltd
cmpl
add
pop
mulb
adc
pop
aaa
cmp
jae
inc
pop
in
popl
rolb
aaa
outsl
in
push
lcall
test
aam
in
lds
ds
or
xchg
aas
cmpsl
daa
out
xchg
mov
imul
insl
dec
inc
adc
and
sub
pusha
cmp
dec
add
sarb
icebp
inc
aam
push
pop
fst
nop
dec
add
mov
pop
fsubl
jno
xchg
jns
cmp
arpl
aaa
xor
xchg
andl
aam
xchg
repnz
or
sbbl
add
xchg
ret
xor
push
rcrb
dec
push
outsl
cwtl
and
jae
xchg
ss
rol
call
insb
xchg
dec
mov
lock
jb
xor
fldl
lcall
out
or
sbb
mov
lods
lods
bound
shrl
jg
cwtl
or
das
sbbb
sbb
call
pop
idivb
mov
mov
dec
repz
scas
mov
adc
outsl
loop
clc
lock
jno
out
sbb
repnz
test
and
mov
mov
mov
inc
icebp
pushf
daa
insb
outsb
pop
jmp
mov
xor
ret
sbb
and
test
addr16
insb
pop
fs
and
lcall
lods
xor
sub
mov
push
in
imul
add
cwtl
mov
mov
mov
in
aam
push
pop
js
sub
in
xchg
add
bound
dec
rcrl
popf
xor
jp
fcompl
aas
lods
repz
hlt
in
pop
mov
cmpsb
ja
aaa
sbb
dec
cwtl
xor
int3
std
mov
enter
cwtl
lahf
movsb
lcall
push
clc
pop
lods
cmp
out
mul
gs
mov
inc
aam
bswap
pusha
sbb
iret
das
mov
dec
pop
dec
cmp
addr16
std
mov
cmpb
xchg
nop
arpl
ret
sbb
out
pop
push
push
xchg
enter
pop
jbe
lds
out
in
xor
loopne
cmp
icebp
jae
pop
pop
adc
xlat
adc
lods
pop
jns
add
psraw
sbb
mov
add
jb
lods
ds
cmc
lds
xchg
test
jle
sub
sbb
xorl
jg
int
pushf
gs
cmpsb
mov
lock
stos
scas
movsl
shrl
loopne
xchg
stos
push
nop
fs
iret
mov
jecxz
and
and
or
mov
hlt
insb
in
gs
jmp
xchg
xor
jl
xchg
jae
pmullw
loope
sbb
jmp
imul
xchg
addr16
inc
push
addr16
jno
fcomps
stc
out
mov
clc
jb
push
rcl
cmp
enter
paddusw
mov
pop
out
xor
xchg
inc
lret
shrl
and
mov
dec
jmp
loopne
lret
cs
lock
lahf
inc
mov
dec
dec
repnz
mov
dec
inc
and
adc
lahf
fiadds
mov
jo
mov
jne
push
xor
stos
jae
jl
hlt
repnz
aam
xchg
scas
out
rcr
inc
xchg
mov
stos
push
xchg
fstps
mov
adc
lock
or
pop
test
adc
push
mov
out
iret
cltd
aad
test
popf
sbbl
jp
stc
in
adc
int
insb
std
adc
mov
cmp
inc
jne
lret
call
adcb
shlb
sahf
cli
mov
mov
pop
jo
cmp
out
loope
fldenv
ret
push
icebp
in
mov
cmp
inc
xor
pop
xor
sub
cmp
and
clc
out
mov
sti
idivb
lods
out
lods
mov
or
pop
mov
cmpsl
jae
fwait
roll
xor
fisubrl
out
jl
out
pop
pop
aad
jp
push
subl
dec
push
sbb
mov
push
xor
or
mov
rcl
nop
xchg
xor
cs
cli
xchg
lahf
sahf
push
and
mov
xchg
mov
cmp
mov
add
sahf
and
jae
xlat
subb
movsb
jne
fcompl
lahf
mov
scas
sub
fcompl
aas
dec
dec
jle
stos
or
or
push
js
iret
jp
xor
ljmp
sbbb
popf
std
flds
jne
test
test
cmpl
xor
push
mov
in
dec
push
adc
pushf
dec
notb
jo
xlat
repnz
lock
lods
cwtl
mov
fistl
jb
xchg
test
insb
in
sbb
test
jb
lahf
in
in
pop
outsl
xchg
pusha
jge
iret
out
push
clc
cmp
sub
out
sub
push
mov
lret
shrl
pushf
in
sbb
sub
push
and
clc
mov
xchg
std
or
or
mov
pop
shrl
outsb
push
pop
jle
insb
gs
xchg
xchg
outsb
adc
pop
test
xor
orl
ds
cmp
lret
xor
or
dec
cmp
or
fmuls
pusha
mov
loop
adc
mov
mov
lods
fsubp
cli
mov
xchg
das
pop
clc
jecxz
ja
jl
lods
jecxz
aam
and
lock
cmpsb
arpl
js
cmp
lret
pop
adc
cmpl
or
xchg
mov
or
mov
sub
movsl
jo
aam
loop
mov
xlat
test
cmp
cmpsb
in
paddd
and
push
fistps
sub
stos
cmp
into
cmp
and
mov
cwtl
pop
adc
negb
lds
aad
gs
call
dec
sub
out
test
js
jae
fstps
mov
sub
jmp
push
inc
add
lds
mov
sub
mov
out
outsl
test
das
push
add
mov
xchg
ret
lcall
mov
xor
jge
inc
icebp
icebp
fcmovnb
ds
push
mov
and
cmc
xor
cwtl
jno,pn
mov
or
mov
into
xor
xchg
fsubrl
mov
mov
or
xor
and
adc
lds
adc
fadds
push
cmp
sbb
incb
cmp
cmp
and
shrb
cmp
or
and
mov
mov
scas
push
jb
call
pop
mov
in
es
cmp
rcrl
iret
mov
roll
mov
insl
popf
dec
push
outsl
cmp
push
adc
sbbl
movsl
or
push
mov
adc
insl
lea
fisttps
jnp
mov
sub
add
fsub
imul
jne
fsubr
jbe
cld
sahf
outsb
lods
inc
pop
out
xchg
xchg
test
aas
fstpt
mov
sub
test
lahf
bound
jb
les
dec
mov
mov
cli
addr16
rcrl
les
sahf
jp
cld
int
mov
mov
popw
adc
or
mov
push
cmp
pusha
and
ja
mov
add
xor
lods
es
sti
ficoms
adc
lahf
cmp
fwait
out
inc
fsin
jno
push
or
push
flds
mov
sub
inc
mov
fidivs
sub
add
lcall
test
enter
das
scas
add
pop
mov
adc
jbe
and
pop
daa
out
or
sub
int
pop
aaa
mov
adc
daa
pushf
arpl
js
mov
outsb
imul
and
add
xor
push
leave
mov
pushf
jge
add
out
loopne
add
jmpw
outsl
xlat
jno
dec
ret
mov
mov
fwait
or
ret
out
call
cmp
push
inc
xchg
push
enter
sbb
into
and
sbb
xchg
dec
sahf
pusha
add
out
sbb
stos
xor
stc
ficoml
adc
jecxz
stc
imul
mov
movsl
int3
jbe
add
jmp
icebp
or
add
out
push
popa
in
push
xor
ja
stos
cli
pop
inc
sbb
js
xor
pusha
jge
cmc
mov
and
sbb
mov
inc
pop
iret
int3
cs
int
sub
mov
adc
cs
into
add
je
mov
mov
icebp
sub
lock
push
add
mov
out
dec
ss
jns
add
lcall
mov
xchg
inc
fsubl
mov
out
lds
popa
inc
mov
or
rolb
xchg
daa
ret
daa
xor
add
inc
icebp
mov
sub
js
jg
cmp
add
fisttpll
cmc
stos
scas
das
mov
in
cmp
out
int3
pop
inc
mov
dec
add
shll
jge
jl
dec
out
sbb
movsb
mov
mov
adc
jb
fmull
in
nop
mov
fdivs
xor
cmpsl
cmp
sbb
xor
sbb
flds
pop
push
and
adc
aas
or
addb
push
movsb
adc
decb
outsb
or
es
jae
fstp
sub
addr16
inc
cwtl
out
aas
add
test
push
inc
inc
xor
add
icebp
ds
jg
out
or
scas
push
mov
and
and
pop
and
insb
xor
mov
xchg
mov
jnp
pop
popa
rcr
dec
fsubs
fisttpl
loope
pop
daa
mov
lret
mov
mov
inc
lds
aas
jae
mov
pop
stc
jge
cs
xchg
and
test
pop
stos
stos
mov
dec
in
push
push
gs
sbb
pop
wbinvd
sub
ret
inc
test
and
gs
jg
push
testb
leave
arpl
cli
push
cmc
mov
xor
adc
sub
in
inc
jns
push
movsl
nop
rclb
jbe
out
push
nop
or
adc
lods
mov
cmp
dec
pop
daa
movsb
addb
sub
pop
loopne
jae
movsl
xchg
out
test
call
cld
xor
sti
shlb
xchg
cs
lret
pop
inc
mov
adc
cwtl
mov
mov
dec
dec
jb
mov
add
out
lret
push
cmpsb
dec
or
movsb
stos
pop
shrl
gs
in
out
popa
out
mov
mov
lret
call
or
aad
out
inc
inc
ret
dec
inc
dec
push
xchg
out
lods
scas
ret
mulb
ss
aas
xchg
je
imul
mov
repz
mov
inc
fisubrs
loop
dec
push
fs
sahf
xchg
orl
push
cwtl
movsl
push
int3
mov
xchg
test
insb
dec
mov
mov
xchg
outsb
sbb
int3
xor
fcmovnbe
xchg
mov
or
jg
add
sbb
pusha
mov
scas
push
imul
inc
pop
dec
loopne
xchg
xor
sbb
subl
aam
jns
pop
jecxz
aad
inc
cmpsb
and
dec
scas
and
add
loopne
in
adc
xchg
cmp
lds
loope
out
pop
es
dec
mov
mov
mov
add
push
ja
adc
sub
jle
cmpsb
out
dec
fmuls
shrl
jnp
jno
fucom
cltd
push
ja
nop
cmp
pop
imul
sbb
clc
dec
jecxz
xor
outsl
sbb
shll
lret
add
mov
xacquire
adcb
in
push
cltd
add
cld
cmc
jp
and
xchg
pop
adc
lret
mov
cmp
ret
cmc
jle
mov
add
mov
mov
lret
jae
fnstcw
int
shll
cmpl
outsl
leave
adc
pop
pop
jmp
pop
sub
push
testl
xor
push
fwait
push
pop
and
shll
popa
lock
pop
or
ss
push
pushf
or
inc
outsl
inc
sbb
leave
shl
scas
mov
mov
mov
mov
push
or
mov
sbb
aas
mov
out
mov
add
and
jmp
mov
push
or
sbb
cwtl
fnstsw
mov
xchg
cmp
lods
add
out
xchg
mov
or
pop
inc
cwtl
or
bound
xchg
push
dec
pushf
jmp
mov
xchg
cmp
adc
jecxz
sbb
loope
jge
mov
mov
inc
out
fistpll
add
sbb
dec
loop
mov
and
hlt
aad
push
insb
int3
inc
ss
sub
sub
dec
push
sub
lahf
aas
rcr
cmp
imul
push
rorl
adc
jmp
jecxz
dec
imul
ret
mov
lds
lock
ljmp
mov
sbb
testl
jecxz
dec
out
and
dec
cmp
mov
sub
div
sbb
das
test
or
push
or
cmc
jecxz
lea
xchg
sbb
add
or
gs
shll
daa
cli
aam
mov
into
outsl
ss
imul
in
inc
incb
int
shrb
fisttps
inc
repz
in
dec
inc
sti
mov
inc
mov
divl
bswap
adc
test
fdivrl
pop
dec
or
xor
mov
dec
mov
out
push
sbb
sti
fidivrl
mov
mov
push
inc
add
sub
cmp
sub
lret
bound
fidivrs
xchg
xchg
sbb
ja
scas
popf
dec
cmpsl
jne
or
mov
pop
add
xor
lds
lds
lea
push
adc
mov
rolb
sbb
outsl
sar
test
cltd
cltd
mov
inc
in
ja
lods
inc
addb
aam
stos
jg
xchg
adc
repnz
sub
out
popa
mov
pop
popa
ret
xchg
inc
scas
pop
hlt
mov
aam
xchg
cmp
pop
push
push
sbb
jae
xchg
inc
lret
movsb
ds
fs
mov
cltd
mov
push
movsl
lcall
bound
push
call
popf
jl
mov
pop
mov
cmpsl
std
lea
sbbb
xchg
jne
mov
arpl
lock
mov
jecxz
cmp
mov
adc
shrb
stos
cli
movsb
pop
and
lret
adc
loop
jb
or
iret
repz
sub
bound
push
fdivrs
and
clc
or
js
loop
sti
in
pop
xchg
cmp
inc
pop
dec
addb
arpl
sub
push
push
pop
inc
stos
pop
mov
clc
fwait
mov
cli
xor
jle
add
jns
pop
xchg
and
or
pop
lcall
push
addl
pushf
fdivrl
inc
jge
in
movq
fimull
mov
mov
push
and
mov
je
mov
xor
dec
cmp
icebp
dec
fnsave
test
mov
ss
leave
jmp
ja
push
cmp
fldt
mov
clc
insl
xchg
fistps
push
mov
adc
shl
xchg
mov
movsl
cltd
sub
data16
or
icebp
jnp
imulb
mov
push
out
lret
outsb
nop
adc
sti
out
in
lret
aaa
mov
inc
sbbl
xor
push
orb
movb
xchg
negb
jp
stos
cmp
out
mov
sbb
leave
sti
or
cli
cmp
jmp
xchg
das
push
ret
adc
data16
mov
leave
frndint
subb
xchg
and
or
nop
fistpl
lret
mov
pop
out
popa
cli
pusha
jno
push
test
inc
sti
bound
cmpsl
data16
push
add
mov
dec
into
sub
mov
mov
leave
sarl
jl
adc
sbb
mov
sub
inc
pop
sbb
inc
inc
inc
jb
nop
jae
aam
lahf
aaa
sub
sahf
mov
lcall
jg
sbbb
out
xchg
arpl
addr16
and
in
daa
push
aad
cmp
xor
pop
sub
nop
or
xor
lahf
movb
data16
and
lahf
rcrl
fdivr
imul
mov
leave
fdivp
jbe
stos
mov
sub
test
sbb
mov
mov
inc
mov
into
add
mov
xchg
adc
adc
jae
loope
inc
or
stos
test
jne
iret
and
ljmp
je
stc
xchg
out
mov
jge
sbb
pop
nop
hlt
call
int
add
ret
sbb
xchg
cmp
mov
movsb
nop
or
test
add
sti
or
loop
mov
imul
fmull
add
les
push
fnsave
iret
push
fistpl
push
mov
dec
xchg
cwtl
inc
xlat
fcompl
push
lds
adc
js
not
outsb
cmp
dec
je
and
push
pushf
aam
test
cmp
inc
mov
stos
sub
or
in
mov
fwait
mov
je
mov
test
aas
jns
imul
fcomps
int
pop
mov
push
test
addb
xlat
sbb
push
lret
pop
pop
inc
aad
mov
push
push
sbb
jle
cli
in
jnp
mov
mov
xor
es
pop
jl
xchg
jne
in
je
cmp
divb
jno
add
push
enter
pop
adc
clc
xor
push
cmp
push
mov
xchg
dec
fldt
mov
fnstsw
je
std
cmp
stos
mov
cwtl
shll
hlt
into
pop
pop
cwtl
xor
out
ja
call
loopne
aad
out
sbb
and
sbb
pop
test
mov
daa
pop
push
cmc
mov
push
stos
xor
xor
sub
mov
and
pushf
sub
adc
pop
idivb
iret
pop
sub
push
adc
repz
or
dec
push
call
or
lret
adc
dec
dec
aam
flds
movsl
pop
lds
dec
pop
shlb
pushf
jge
pop
dec
add
mov
lods
adc
push
jbe
test
repz
roll
out
xchg
adc
jns
cmp
jecxz
ljmp
dec
mov
pop
mov
into
lods
xchg
or
jmp
int3
sub
popf
das
mov
jne
or
jl
or
cmp
notl
in
sbb
cli
sbb
call
sub
shrl
xchg
nop
ds
loopne
and
dec
and
repnz
xlat
cli
pop
push
outsb
cwtl
out
pop
shll
mov
mov
lds
add
insl
scas
popf
popf
or
pushf
add
xchg
cs
int
out
shlb
push
push
nopl
pushl
jmp
popf
sarb
inc
iret
hlt
lock
cmp
subb
xchg
pop
dec
cmp
xor
mov
lcall
sub
test
mov
sbb
fstp
inc
xchg
pop
shll
cmove
sub
hlt
dec
nop
xchg
push
cltd
push
dec
push
aas
mov
push
out
hlt
xor
lock
out
pop
hlt
sbb
cli
andb
das
inc
fwait
scas
aam
push
push
adc
popf
pop
into
mov
pop
sub
cmp
and
sbb
pop
es
push
pop
in
lcall
fmull
mov
js
cs
add
lcall
stos
pop
mov
or
test
adc
mov
jno
or
inc
mov
pop
mov
scas
mov
mov
and
sub
add
jns
or
stos
push
call
test
out
dec
add
pop
addr16
fdivr
xchg
or
cmp
notl
insb
sub
fs
jle
and
sbb
sub
aam
stos
push
bound
shrl
lods
pop
scas
mov
mov
xor
mov
icebp
scas
sub
push
sbb
into
dec
mov
icebp
add
mov
jl
mov
mov
pusha
mov
or
lock
sarb
sbb
dec
and
cmp
jl
mov
adc
pop
out
into
sub
sub
cwtl
xchg
rorb
lahf
xor
shl
ja
addr16
xor
sbb
or
push
into
mov
and
and
sbb
mov
cmp
mov
aas
adcl
xchg
jne
outsb
je
fiadds
or
std
push
sbb
scas
sbb
bnd
xor
add
sub
hlt
xchg
inc
push
icebp
cltd
ja
lds
outsl
mov
data16
jecxz
fbld
nop
gs
fs
inc
aaa
popa
xchg
sbb
sub
je
adc
fisubrs
add
push
popf
and
pop
inc
jne
mov
add
pop
fldl
fdivrs
sbbl
cwtl
lds
sub
xor
mov
cwtl
pop
imul
jnp
cmp
xlat
xchg
push
fstp
aam
jne
or
popf
xor
ss
std
and
pop
push
inc
inc
mov
ja
aad
push
fists
xchg
jge
in
pop
cltd
shl
xchg
push
jp
adc
sub
jne
ja
insl
icebp
test
test
pop
testl
jmp
fistpl
sbb
mov
js
pop
in
or
or
pushf
fsub
test
dec
xchg
insb
and
pop
and
inc
dec
sbb
push
xchg
or
in
fwait
scas
inc
xchg
lret
out
stos
icebp
aaa
pop
mov
or
xor
test
mov
scas
fdivrl
sbb
fisttpl
xor
insl
call
xchg
and
stos
inc
push
outsb
cmp
inc
ret
inc
adc
or
mov
repz
lds
mov
test
fsubrs
or
push
ds
test
push
push
lds
out
ret
mov
jge
movsl
shrb
in
scas
shrb
sarb
mov
fimull
inc
sahf
inc
mov
jge
fstpl
mov
add
push
lahf
cmp
imul
mov
sahf
xchg
adc
daa
and
aaa
mov
sti
sbbl
test
jne
hlt
adcl
out
push
sbb
negb
mov
mov
shlb
dec
subb
insb
je
push
mov
pop
push
jae
jnp
stos
cld
mov
jmp
jp
adcb
aas
jo
insl
imul
mov
loop
daa
push
pop
mov
push
mov
ret
mov
push
cmp
js
inc
mov
test
bnd
mov
movsl
mov
fadd
int3
add
out
fstpl
xchg
push
dec
pop
subl
fimull
add
sub
aad
dec
in
repnz
add
fmuls
cs
subl
sbb
loop
pushl
repnz
jns
cmp
aad
push
sbb
je
std
test
jns
cmc
icebp
out
in
gs
push
push
sub
bound
xchg
cs
in
xchg
add
dec
in
lea
enter
addr16
mov
shll
jmp
xor
jo
pop
gs
addl
sub
outsb
fdivr
pop
hlt
xlat
fsubl
into
icebp
pop
or
iret
cmp
shlb
pop
outsb
imul
jge
fxch
fsubl
shrb
ret
aas
adc
mov
lcall
inc
stos
pop
xor
mov
inc
adc
jmp
pop
mov
scas
mov
mulb
scas
adc
add
test
add
shll
pop
dec
dec
cmpsb
xchg
lods
shr
rclb
xor
mov
mov
jg
aaa
mov
cld
mov
out
mov
icebp
jmp
mov
cmp
push
inc
daa
outsb
aas
and
mov
sbbb
pop
loopne
push
shll
mov
aad
jne
daa
push
dec
adc
fmul
int3
add
rcrb
sub
cmp
shl
ret
dec
mov
adc
mov
adc
outsb
mov
ret
or
repz
iret
or
inc
popf
and
mov
test
jbe
leave
test
sti
and
hlt
aas
fwait
and
lock
jle
outsl
sub
mov
ss
sahf
adc
mov
sbb
lea
or
addr16
push
mov
int3
arpl
bound
cld
dec
jge
inc
sbb
add
dec
mov
nop
cmp
sub
fldt
jae
es
jecxz
xor
test
jnp
enter
out
cmpsb
dec
lret
jbe
lret
mov
jg
int3
pop
mov
ds
hlt
in
sbb
and
adc
mov
xchg
data16
add
pop
sub
push
cmp
fstpt
adc
and
dec
sub
repnz
nop
testb
js
fstl
mov
pop
add
movsb
inc
sbb
mov
insl
and
lahf
mov
aam
mov
mov
jb
lods
mov
dec
mov
xlat
cmp
mov
das
dec
push
mov
divb
int
jo
out
push
xchg
push
loop
push
icebp
dec
scas
cmp
add
sbb
mov
cs
sub
enter
and
das
bound
mov
aad
mov
sub
jnp
pop
insl
das
mov
xchg
mov
dec
dec
sahf
lea
fistpl
pusha
cld
mov
xlat
jnp
call
filds
push
jae
fiadds
aaa
xorb
call
or
mov
fidivrl
xor
cbtw
jo
ret
cmp
lret
dec
adc
fdivrl
test
aad
dec
test
mov
aaa
and
pusha
pop
cld
inc
sub
jp
ret
add
push
pop
out
movsb
dec
loope
ja
sub
lret
cmp
je
rclb
mov
or
rorl
testl
ficoml
dec
sub
jmp
sub
scas
int
cmp
aam
inc
jl
jle
das
jb
and
insl
xchg
rclb
mov
pop
les
xchg
mov
jno
test
rorb
adc
loopne
out
inc
add
cwtl
cli
xchg
adc
jl
mov
sbb
in
rorl
cmp
aaa
pop
add
ret
cmp
in
ljmp
sbb
dec
or
insb
cmpsl
xor
ljmp
insl
inc
pop
push
pop
fbld
jle
inc
adc
fimull
mov
sub
xor
lcall
sbb
pop
cwtl
cmp
shr
les
sbb
dec
bound
in
fists
push
mov
pop
lods
add
mov
sbb
xchg
xchg
push
push
sahf
fisubrl
es
andl
mov
jge
xchg
xchg
mov
outsb
nop
aaa
mov
push
int
mov
clc
leave
or
or
lock
and
pop
in
imul
scas
cmpsl
lock
push
xchg
sahf
lods
xchg
pop
push
fstpl
mov
jmp
mov
xor
int3
std
mov
out
push
lock
int
sbb
push
lock
sub
mov
and
aaa
test
inc
int
xchg
popa
aad
push
mov
jbe
fst
mov
jmp
mov
inc
add
lret
shrb
push
lret
push
jo
pop
xor
imul
push
jb
xor
fisubrl
jecxz
push
mov
shll
jb
cmc
ficoml
cmpsb
xchg
es
mov
sub
push
mov
leave
lods
push
int3
outsb
push
xchg
cmp
jne
pop
or
adc
pop
adc
mov
or
pop
sub
lods
fwait
scas
dec
test
sbb
push
xor
dec
loope
lret
inc
dec
cmc
movsb
cld
jmp
ds
roll
pop
lret
sub
lods
imul
fisttpll
pop
fwait
icebp
sub
cmp
or
rorb
xor
inc
and
ljmp
push
mov
orb
xchg
ljmp
push
scas
jnp
in
mov
and
in
arpl
adc
adc
inc
push
je
cmp
xchg
cmpsb
mov
inc
stos
sub
insb
ret
fdiv
ficoms
out
stc
xor
frstor
lds
inc
jle
sbb
xchg
mov
cmpsb
xlat
ret
mov
aas
adc
pop
ljmp
lock
shll
or
mov
sub
mov
cmpsl
jle
and
and
mov
call
lods
mov
call
adc
cli
jl
test
shl
mov
aaa
xor
lret
fwait
xorb
popf
cmc
pop
xchg
pop
fdivrs
leave
mov
aad
and
and
imul
arpl
push
sbb
xchg
fnsave
xchg
mov
sbb
sbb
jbe
jbe
inc
xchg
xchg
mov
cmp
out
test
mov
test
fs
cmpsl
cmp
in
arpl
adc
repnz
mov
adc
in
pop
push
enter
mov
push
jo
aas
jns
jbe
dec
fsts
jno
subb
dec
sarl
outsb
dec
int
sub
mov
or
popa
rorl
xchg
lods
pop
and
jo
ja
push
pop
sbb
inc
iret
mov
dec
mov
jle
lret
add
je
xor
fstpt
stos
jmp
jmp
cld
jae
mov
sub
lds
mov
jge
dec
shll
dec
popf
and
fdivl
clc
mov
sbb
pushf
mov
int
test
jo
cmp
xorb
ljmp
out
xor
inc
out
cwtl
jns
xlat
mov
xor
jge
push
push
jbe
pop
fildll
adc
cmp
pop
sub
xchg
js
xor
lea
test
shrb
cmpsl
lahf
cs
call
lods
mov
xlat
decb
lret
mov
cmp
repnz
dec
test
leave
test
cmp
inc
inc
cmp
jno
pop
rcl
push
popf
add
inc
jb
cmp
and
testl
sahf
loopne
leave
mov
dec
dec
addl
int
pop
pop
jo
test
mov
gs
push
jno
or
jnp
dec
dec
fldt
lret
and
pop
out
fs
mov
icebp
insl
ds
mov
fwait
sarb
iret
mov
dec
int
fsubs
and
jbe
shlb
or
push
and
enter
mov
out
outsl
mov
push
cmp
xor
jno
cli
push
bound
sbb
insl
fcoml
ljmp
aaa
mov
dec
daa
jl
std
inc
je
test
pop
mov
sar
xchg
sub
pop
or
fs
push
or
shrl
addr16
aas
and
mov
ljmp
sbb
mov
xor
adc
loop
pop
pushf
out
dec
and
rcrl
xchg
dec
sbb
mov
out
add
repnz
mov
in
aam
sbb
inc
das
push
prefetcht1
sbb
leave
fldl
inc
lret
xchg
pop
pop
sbb
sar
inc
das
mov
testb
mov
sahf
repz
jge
jle
push
pop
xchg
adc
cmp
and
test
dec
inc
lcall
xlat
push
ret
dec
sub
fnstenv
clc
cmp
mov
pop
mov
mov
cmp
test
ljmp
pop
push
divb
xor
nop
repnz
pop
adc
mov
jbe
imul
fldt
js
lock
insb
popa
mov
inc
inc
inc
fcomp
fwait
lds
popf
pop
pop
or
das
cld
lock
dec
mov
dec
xchg
adc
jle
pop
cmc
dec
hlt
int
adc
jg
sahf
adc
imul
cld
mov
inc
sahf
into
push
add
cmp
sbb
pusha
push
sahf
dec
sub
insb
es
xor
cmc
sub
mov
push
sbb
push
orb
sub
or
push
dec
lea
lock
aaa
fucomp
testl
arpl
or
cltd
pusha
inc
pop
mov
xchg
addr16
sub
sbb
cmp
add
stos
call
and
cltd
add
into
xor
rorl
scas
call
adc
dec
jbe
mov
mov
mov
cmp
in
sub
rol
lds
add
mov
fimuls
jo
jo
xor
and
insb
cwtl
bound
xor
or
inc
es
out
xor
mov
adc
add
ret
mov
sub
mov
scas
stos
shll
in
stos
add
jne
jb
mov
pop
sub
dec
sub
push
rcrl
pop
test
dec
dec
push
mov
stc
dec
stos
xchg
mov
mov
xor
ret
mov
das
divb
xor
jbe
ret
popf
mov
movsb
jno
out
pop
add
icebp
jnp
adc
gs
cmp
out
ss
decb
push
leave
fidivs
cmp
xlat
adc
in
notl
cmpsb
push
pop
sub
sbb
pop
mov
pop
sub
in
dec
pushf
push
icebp
hlt
scas
mov
mov
fstpt
in
xchg
mov
pop
or
in
dec
dec
aam
and
sbb
push
test
mov
mov
pop
ss
pop
sbb
dec
fcompl
lods
sub
testl
scas
xchg
lock
cli
outsl
dec
push
shl
mov
dec
jmp
push
andb
movsb
mov
data16
xor
sub
add
jp
aad
pop
lods
lret
pop
jb
int
dec
jb
mov
int3
push
hlt
xchg
mov
cmp
inc
mov
ljmp
int
loop
add
add
xchg
adc
push
int
icebp
out
or
lods
jp
push
push
inc
pop
pop
add
fsts
mov
mov
das
cs
out
cmc
out
test
out
in
in
dec
add
mov
in
scas
dec
sbb
pop
repnz
movsb
and
mov
jo
xor
add
cmpsl
xchg
push
xchg
jg
xchg
int3
mov
bound
and
sub
or
mov
je
stos
xchg
inc
xchg
lods
imul
movsb
pop
js
cld
ds
cmpl
es
sbb
lret
cltd
fwait
out
sarl
movsl
fldt
test
mov
or
sub
adc
adc
icebp
and
or
pushl
mov
and
and
mov
pushf
fcoml
or
mov
pushf
fstpl
rcll
les
add
leave
stos
xchg
lret
cmp
lea
jo
push
push
lahf
push
dec
or
mov
mov
dec
xchg
push
dec
xchg
je
mov
push
shlb
sbb
popa
mov
jl
ficompl
or
lea
int
and
imul
rol
inc
cmpsb
jl
fdivrs
pop
adc
out
xor
dec
ftst
rcrb
dec
scas
dec
dec
and
cmpsl
sub
lea
sbb
jmp
jle
pop
lods
je
push
loope
repnz
cmp
movsl
insb
pop
sub
lods
push
xchg
pop
lock
mov
fs
aad
add
sbb
mov
sarl
inc
cmp
lea
xchg
in
and
sahf
dec
or
add
test
jl
xchg
pop
push
outsb
adc
sub
ror
push
int
imul
sub
enter
xor
call
jl
xchg
fs
push
fisttpl
lods
xchg
stc
into
sbb
ljmp
xchg
or
add
jbe
sbb
fadd
lret
sbb
xchg
pop
push
push
int
xlat
subb
mov
inc
fcompl
sarb
xchg
stos
loop
clc
outsl
cmpsl
arpl
add
xorl
inc
andb
pop
pop
jns
lret
iret
push
into
fs
dec
mov
push
cmp
dec
mov
mov
add
test
or
jecxz
adc
mov
hlt
mov
inc
or
push
jp
dec
pushf
mov
ffree
ret
out
push
cmpsb
out
xchg
fildll
jbe
dec
pop
cmp
or
sub
aam
fisubrs
xchg
or
pop
popf
dec
sarb
adc
in
xchg
fnstsw
fs
outsb
inc
loope
mov
or
push
add
lahf
mov
push
popa
into
add
mov
xor
adc
cmp
ficompl
inc
es
in
aaa
aam
movb
jge,pn
ret
negb
popf
dec
sbb
inc
lret
xchg
dec
test
mov
push
das
adc
push
les
mov
pop
outsl
add
ret
jno
lea
inc
jo
adc
dec
in
sahf
or
sub
fidivl
mov
sub
sub
pusha
lds
add
loop
shrb
and
mov
sbb
pop
sub
repnz
lret
shl
pop
xlat
mov
jl
pop
ljmp
out
jmp
xor
sub
push
mov
push
or
aam
lods
mov
leave
clc
xchg
dec
sbb
fists
add
fidivs
mov
fisubs
gs
or
sbb
shrl
hlt
repz
stc
imul
or
adc
sbb
or
jmp
mov
or
sub
or
repz
adc
sbb
push
jno
mov
pop
shl
pop
push
jne
aaa
or
add
loopne
popa
ljmp
mov
adc
lock
stc
xchg
fwait
jg
repnz
inc
repnz
cmp
in
cmpsb
dec
mov
xor
add
fldcw
ljmp
lea
out
add
lock
dec
add
aam
mov
fsubrl
in
add
es
mov
hlt
sbb
and
scas
adc
fdecstp
mov
lret
lret
xchg
push
lea
aas
lods
push
xchg
nop
fidivrl
test
sti
ret
pop
aad
xor
loop
inc
out
icebp
fstl
inc
mov
mov
inc
fists
mov
fsubl
fiaddl
je
inc
clc
mov
rclb
mov
xlat
or
data16
bound
jns
iret
out
mov
out
test
in
push
outsl
imul
out
ror
or
mov
aaa
jp
lds
and
ds
out
lods
out
cld
add
cmp
enter
inc
test
es
in
mov
xor
lods
mov
leave
or
xorb
pop
adc
add
xor
idiv
movsl
lock
ret
jl
adc
enter
adc
mov
arpl
popa
sub
int
sub
inc
xor
ljmp
sbb
xor
jle
popa
daa
mov
aad
test
arpl
or
dec
imull
mov
pusha
sub
iret
inc
jge
jp
xlat
adc
js
cmc
addr16
arpl
stos
std
mov
inc
je
pop
mov
cmp
ret
mov
leave
cld
outsb
addr16
imul
inc
faddl
pop
adc
fwait
test
popf
lods
leave
aaa
pop
cli
pop
cmp
mov
mov
sub
pop
aas
ret
out
mov
or
lahf
cs
cmpsb
mov
cmpsb
pop
inc
pop
enter
pop
inc
add
sbb
cmp
sub
or
shrb
lods
fbstp
insl
imul
lods
pop
mov
sub
xor
pop
push
clc
dec
fsubrs
xchg
sbbb
jno
js
test
sub
push
fildll
xor
test
je
jg
mov
jecxz
mov
or
call
js
dec
push
aad
adc
mov
in
jb
lods
xchg
int3
and
cmpsl
cmp
mov
dec
xor
rol
mov
mov
sub
outsb
data16
mov
sbb
xor
sahf
mov
jo
cld
aam
sbb
xchg
mov
and
xchg
sahf
fcmovnb
rcll
rorb
lock
shrl
inc
mov
loopne
lods
inc
adc
pop
ja
int3
das
fdivrs
dec
into
dec
insl
and
mov
shl
mov
cmpsb
mov
fldt
sbb
or
movsl
and
mov
nop
inc
mov
popf
or
scas
sub
cs
sbb
shll
dec
cmp
xrelease
lret
jnp
jge
mov
mov
xchg
lret
jno
test
mov
sbb
push
test
xor
or
aaa
or
xchg
lods
or
outsb
adc
pop
fs
icebp
fmulp
stos
pushf
in
ljmp
ljmp
push
mov
jbe
fwait
sarl
sbb
faddl
cmp
repz
xlat
lock
inc
mov
push
gs
enter
xchg
xor
and
push
xor
ss
ja
lock
xlat
and
and
ret
gs
add
mov
mov
sbb
ds
rolb
popf
or
or
das
sub
mov
jge
ds
aam
jb
cmp
dec
pusha
fiaddl
les
lcall
pop
cmp
adc
pusha
mov
test
cs
mov
das
sub
push
mov
xor
int
xorw
dec
call
data16
dec
jge
push
gs
sbb
mov
or
pop
cmpsl
das
fs
xchg
xlat
and
int
dec
sahf
sbb
adc
mov
add
or
test
xchg
nop
xchg
mov
dec
popf
daa
jp
dec
sbb
in
lea
shl
mov
cmp
jno,pn
mov
xchg
mov
adcl
mov
popf
jmp
push
sub
ficompl
cmpsb
dec
push
mov
lahf
xor
sbb
ja
sub
mov
data16
clc
cmpsb
sub
push
push
push
xlat
lret
stos
push
fmuls
jg
and
outsb
push
dec
lods
inc
iret
pavgb
in
popf
je
movsb
pop
mov
mov
ret
mov
dec
cmpsb
mov
mov
fildl
imul
sbb
mov
data16
mov
stos
adc
xchg
pop
testl
adc
stos
rorb
lret
cld
mov
sbb
dec
add
mov
add
iret
xchg
lods
mov
add
dec
fcoms
ja
jne
out
es
sub
aas
mov
psllw
ret
outsb
jb
ss
xchg
dec
cmp
xchg
cli
std
push
js
sub
xchg
inc
xor
insb
xchg
mov
popf
aam
sti
cli
dec
mov
jl
cmpsl
mov
aaa
add
clc
jmp
adc
xchg
int
add
xlat
in
adc
fs
iret
insl
sub
test
and
jmp
jno
or
pusha
daa
stc
ljmp
mov
sbb
mov
add
push
pop
sbb
push
jle
lds
lds
imul
negl
gs
subl
mov
mov
das
cltd
outsl
or
lahf
lea
sub
pop
cmp
aam
imul
fcmovu
sbb
sbb
inc
inc
jecxz
addr16
cmp
int3
or
cmp
sti
cli
in
ror
and
or
int
adc
jecxz
ja
aas
cmc
outsb
jmp
jo
test
mov
dec
pop
ja
movsl
ljmp
adc
mov
pop
push
je
test
xor
pushf
xor
dec
mov
adc
subl
js
jb,pn
scas
inc
ljmp
stos
pop
pop
adc
stc
stos
leave
or
fdivrl
push
andl
cmp
aaa
add
push
push
jne
push
push
or
mov
insb
fidivrs
or
std
outsb
inc
dec
adc
fisubs
lock
jg
xchg
add
jns
je
popa
xchg
in
int3
sub
xchg
xchg
lahf
xor
inc
arpl
push
mov
inc
in
pusha
out
pop
out
mov
dec
shll
pop
sub
pop
decb
xchg
sbb
mov
cltd
inc
add
in
mov
jl
scas
mov
pop
xchg
fwait
xor
test
movsb
lea
ss
pop
mov
and
nop
mov
adcb
xchg
mov
fisttpl
xor
or
dec
imul
cmp
into
test
incb
and
stc
or
push
inc
sbb
and
fstpl
pop
testl
ljmp
ljmp
pop
adc
lret
xor
clc
mov
or
pop
adc
adc
mov
add
addr16
pop
mov
mov
dec
data16
cmc
aaa
rcll
ljmp
adc
inc
gs
fcomip
int3
lcall
xlat
sub
repnz
push
jae
icebp
jmp
sbb
or
jmp
push
aad
fiaddl
adc
xchg
inc
out
dec
roll
inc
push
push
inc
ret
xchg
movsb
jge
test
cmp
ret
leave
fistpl
sub
test
jecxz,pt
add
xlat
dec
mov
out
cmp
cmpsb
scas
or
sub
cmp
and
pop
call
inc
lret
loop
cli
xchg
jno
int3
and
jl
sbb
adc
mov
push
mov
scas
mov
insl
xor
fcompl
lea
dec
stos
and
mov
test
rorb
cmp
xor
cmp
push
mov
int3
inc
sbb
data16
jecxz
fidivrl
mov
and
fsubl
push
imul
add
cmp
fdivr
add
dec
xchg
adc
dec
and
ss
movsb
fsubrs
mov
clc
cltd
cmpsl
dec
adc
fs
hlt
aas
add
in
xor
push
xchg
push
in
xchg
and
scas
nop/reserved
push
cld
iret
push
out
aam
pop
inc
jae
int3
aad
pop
lods
sti
inc
or
fsubr
or
lcall
inc
shl
int3
repnz
sbb
jl
jo
lcall
cwtl
xor
stc
aaa
fmull
lret
jp
xchg
push
imul
pop
aaa
pop
sti
inc
xor
jno
loope
stos
int
adcl
jge
sub
movsl
popa
cmpsb
sbb
xor
lds
pop
cmp
xor
xor
pop
mov
dec
test
sbbb
shrl
jns
cs
cmp
xchg
adc
add
or
push
mov
mov
jns
jg
pop
imul
mov
out
gs
aaa
lea
dec
xor
pop
pop
dec
pop
mov
xchg
out
cmpsb
mov
and
dec
or
aaa
hlt
adc
movsb
lahf
adc
jne
lock
lods
sbb
xor
and
aaa
aam
hlt
mov
outsb
ror
and
lock
mov
lods
and
adc
pop
sbb
ret
jo
ja
imul
adc
fildl
cmpsb
iret
les
push
cmp
add
fstl
pop
dec
dec
movsl
push
mov
lahf
jnp
dec
pop
adc
cmp
cmpsl
mov
bound
das
int3
mov
aas
and
shrb
fwait
mov
daa
or
lea
pop
int
pushf
mov
in
push
cmp
fs
js
sahf
push
pop
fwait
in
popa
arpl
lret
mov
xchg
out
mov
mov
jg
repnz
fmuls
iret
imul
push
sbb
and
xchg
pop
mov
adc
inc
or
in
test
mov
mov
xchg
gs
pop
or
cmc
rcrl
mov
sbb
mov
pop
in
fldenv
pop
sub
dec
movl
or
jle
pop
movl
sahf
dec
cmp
iret
cmp
sub
cmc
andl
push
pushf
push
es
int3
cmpsl
ret
test
subb
clc
and
addb
jbe
pop
push
and
insb
mov
mov
or
and
sahf
mov
in
inc
mov
mov
pusha
out
or
ror
pavgw
mov
loope
dec
repz
shr
popa
sbb
cs
jnp
xchg
incb
push
sbb
lods
call
jp
mov
sbb
xor
and
mov
inc
leave
mov
mov
and
ds
js
mov
xchg
imul
xchg
xchg
mov
subb
or
addl
mov
cmp
mov
mov
cmp
jecxz
stos
js
lds
jp
jb
ljmp
xchg
roll
fninit
int3
mov
cmp
rcrl
aaa
xchg
sub
push
repnz
dec
jg
xchg
dec
fcomps
jae
ds
dec
into
sbb
test
bound
adc
dec
jo
arpl
and
jecxz
add
cmpb
push
xor
push
jno
lods
xchg
fisttpll
clc
je
jg
dec
bound
jae
int3
shrb
add
ja
sub
sub
test
mov
mov
lcall
enter
call
push
cmc
mov
cli
bound
sub
repz
adc
cmp
dec
mov
dec
aam
faddl
mov
or
lea
dec
int
jne
test
clc
mov
lret
pop
and
adc
nop
jno
aaa
inc
push
push
aam
aam
fsubrs
push
je
xchg
adc
seto
mov
cmp
xchg
lock
pusha
jne
in
adc
aas
push
sbb
outsl
mov
cmp
mov
jae
mov
mov
sbb
arpl
cmpsb
or
dec
std
push
rcll
dec
mov
mov
les
popf
adc
nop
pop
pop
mov
pop
xchg
in
arpl
subb
pop
xchg
movsl
call
stos
xchg
push
loopne
mov
cld
roll
dec
shlb
rcll
daa
nop
push
push
adcb
add
les
xchg
push
mov
popa
lcall
sbb
and
mov
adc
mov
xlat
xchg
cmp
push
mov
push
jb
jle
pop
pusha
fwait
clc
lea
add
jno
mov
lods
aad
or
or
xor
cmpsb
pop
loopne
jnp
lcall
push
rorb
mov
and
int
or
jl
stos
sub
sbbb
pop
icebp
and
and
subb
pop
dec
cmp
sbb
popa
dec
and
jmp
mov
or
cltd
fnstenv
jo
cmp
aas
arpl
sbb
xchg
sub
xchg
call
aaa
int
xor
jmp
loopne
gs
mov
icebp
ja
stos
push
add
ficompl
repz
shrl
mov
cs
jne
insb
cmp
xlat
dec
into
mov
xchg
and
or
mov
jl
sub
and
sbb
push
adc
pop
sub
jns,pt
push
push
cs
sahf
int3
aad
hlt
lods
ret
insl
ret
hlt
dec
das
sub
iret
push
inc
add
inc
sub
mov
inc
fstps
mov
and
daa
mov
jmp
les
data16
lods
dec
out
xor
call
lahf
jl
mov
lret
sub
sbb
jmp
sub
xor
pop
jno
push
add
js
or
roll
mov
int3
int3
stc
lods
shll
jl
iret
shlb
scas
fistps
sbb
inc
test
push
cmp
inc
jp
in
xchg
mov
js
cmp
push
push
dec
mov
loopne
dec
mov
xlat
cmc
je
jg
and
or
pop
nop
mov
and
push
xlat
lcall
pop
mov
into
stos
test
das
test
imul
pop
cltd
lds
addr16
je
pop
inc
jl
ret
in
fistl
xor
mov
sub
inc
mov
xor
mov
pop
out
movb
xor
daa
jmp
sub
cmp
push
pusha
adc
orps
cmp
or
mov
out
mov
fistl
movl
jnp
mov
sub
and
ja
adc
test
divl
sub
rorl
mov
inc
iret
aad
cmp
or
pop
jae
mov
test
je
add
movsl
push
lds
xchg
sub
inc
dec
xor
push
xor
fwait
int
aad
out
in
or
sbb
out
and
loopne
push
xchg
mov
xlat
adc
aam
cld
fsubrl
test
sbb
in
mov
cld
mov
cld
sub
mov
push
rorl
and
xorl
lods
and
cmp
mov
sbb
and
or
adc
sbb
sub
fstpt
fisttpl
mov
repz
mov
jge
push
lcall
fsubrp
pop
xchg
outsb
pop
enter
mov
push
out
jmp
cmp
xchg
mov
mov
cmc
mov
fcomps
mov
test
icebp
mov
sub
lods
adcb
negl
push
idivl
pusha
mov
sub
movsl
int3
jl
sbb
lock
push
scas
popf
das
mov
insl
movsb
jle
sbb
mov
lds
mov
mov
push
outsb
xchg
jge
pop
inc
adc
xchg
pop
mov
in
pop
or
xchg
jl
pop
fwait
sbb
push
into
pop
fildll
aad
imul
push
cld
stc
sub
push
inc
adc
fwait
push
xlat
mov
mov
iret
push
es
pusha
adc
and
lret
or
idivb
dec
les
adc
das
sahf
fisubs
adc
or
dec
aas
daa
nop
lds
mov
sub
cltd
push
pop
movsl
mov
cmp
jge
and
clc
fidivs
fs
sbb
xchg
out
and
pushf
push
ss
xor
push
sbb
mov
push
leave
sti
lcall
and
jl
outsl
jecxz
es
movb
outsl
sbb
dec
dec
jo
ja
lock
or
jp
outsb
adc
xchg
cmp
nop
cmp
movsb
test
sbb
mov
and
aaa
push
jb
mov
test
pop
jb
inc
mov
mov
popa
add
or
inc
inc
mov
aad
fldt
je
and
mov
ja
add
xchg
cmpsb
leave
jno
int
pop
push
adc
sbb
and
jne
jo
sbb
int3
lds
cli
lods
loop
push
push
push
mov
mov
cltd
lods
sarl
mov
sbb
lods
ds
dec
dec
imul
rol
stc
ret
in
or
jo
sub
addr16
mov
movsl
bound
sti
pop
in
cmc
icebp
jecxz
inc
popf
mov
aad
jne
loope
jg
fwait
mov
scas
mov
push
in
int3
jl
add
push
xchg
xor
out
dec
xor
adc
adc
xlat
les
and
mov
jmp
push
cwtl
mov
int
adc
cwtl
mov
mov
in
jp
cmpsb
cmpsl
mov
mov
ja
les
cmpsb
and
das
xchg
mov
in
out
lret
push
nop
pop
mov
jae
pop
dec
das
cmp
and
mov
aam
mov
out
sbb
in
mov
insl
stc
popa
lods
inc
in
sub
cmp
int3
push
sbb
dec
std
mov
mov
and
aaa
sbb
xchg
aas
cmc
jno
xchg
sub
fiadds
inc
rorl
aam
addb
ljmp
in
xor
ds
cld
mov
sbb
aaa
push
mov
in
dec
outsl
jbe
jp
push
jae
insb
lea
js
push
xchg
jno
dec
add
or
jne
lret
inc
imul
fidivs
popa
das
test
xchg
filds
xor
rcll
jge
inc
sbb
mov
pop
mov
mov
scas
cmp
inc
je
je
xor
aas
out
mov
shlb
cmc
cmp
sub
mov
and
cli
fsubp
or
or
js
mov
jg
int3
cld
repz
nop
test
cmp
mov
pop
or
pusha
cmpsb
popa
mov
lret
out
jmp
push
stos
fldl
mov
add
loope
cmp
mov
fwait
inc
loop
imul
push
sti
xorb
jb
pusha
imul
jne
notb
push
mov
jo
xor
cmc
cwtl
int3
inc
jbe
push
push
pop
jb
cmpsb
pop
push
out
add
stc
test
jbe
mov
sbb
sub
std
xor
insl
jns
mov
lcall
popf
add
bound
test
xchg
pushf
data16
call
ret
rcrl
nop
int
dec
inc
mov
adc
and
dec
lcall
popf
fwait
push
mov
jl
inc
xchg
cwtl
repz
jge
xchg
mov
jns
push
fldcw
cmp
scas
icebp
mov
leave
in
xor
sbb
mov
arpl
ljmp
test
popa
sub
push
dec
enter
push
mov
pop
dec
in
sti
push
jns
dec
fisubs
cltd
popa
in
popf
mov
xlat
addr16
adc
mov
cltd
imul
shll
and
outsb
inc
cmpsl
dec
sbb
pop
inc
push
sub
push
lahf
pop
hlt
or
xor
xor
hlt
xor
mov
jns
cmp
sub
incl
mov
pop
xchg
mov
nop
add
adc
mulb
push
dec
test
jp
push
xchg
andl
das
and
les
jp
jns
scas
lahf
in
mov
insl
and
mov
loop
jns
lds
jecxz
or
imul
lods
adc
jg
lret
mov
pushf
dec
outsb
xor
icebp
add
pop
push
iret
xor
out
cmp
je
lods
push
mov
mov
ljmp
stos
jp
and
dec
jno
jle
out
pop
adc
popa
push
lret
ja
je
bound
loope
stos
sub
adc
aam
dec
xchg
jnp
pop
jno
mov
addr16
pop
mov
jecxz
mov
sbb
xor
cs
inc
add
mov
cmp
sub
xor
jg
push
jge
jmp
sub
jp
jmp
inc
pop
and
cmp
jno
fistpll
push
xchg
inc
pop
mov
popf
mov
jbe
pop
repnz
repz
mov
ds
repnz
cwtl
sub
cmp
jno
orl
inc
popa
push
and
lret
push
movsl
imul
aad
jp
push
jbe
pushl
orb
popf
add
call
lea
int3
jb
rcrb
ds
jnp,pt
cld
inc
sub
pop
ret
cltd
ret
push
aad
mov
loope
add
sub
enter
int
mov
mov
stos
in
cwtl
jp
adc
xchg
pop
add
cmp
sbb
lods
mov
test
fs
jnp
xor
cli
outsl
callw
mov
jns
movsb
jbe
or
mov
pop
jle
les
mov
or
jg
sbb
sub
vlddqu
and
orl
cmp
mov
xor
push
mov
stos
dec
popa
sub
ret
aad
jns
inc
loopne
repnz
or
sahf
popa
cmp
xor
cmp
stos
push
fists
push
xchg
fwait
jmp
jb
mov
in
mov
inc
cltd
adcl
add
popa
cld
mov
cmp
iret
jno
push
movsb
jl
pop
mov
ss
sub
dec
fs
jp
ret
pusha
mov
push
xor
mov
call
test
xor
imul
hlt
mov
cmp
xor
fsubp
xor
sbb
xlat
mov
sti
adc
test
nop
jbe
mov
test
pushf
outsl
cmp
imul
fs
fnstsw
inc
mov
ss
in
fstpl
inc
jnp
jne
jno
jo
movsb
and
jo
arpl
rclb
add
imul
outsb
fsts
pop
inc
mov
cltd
jmp
repz
sbb
mov
mov
cmp
push
push
ret
sub
inc
outsb
repnz
jo
outsb
lock
fidivrs
iret
dec
aas
dec
dec
push
cmp
aas
and
sub
sbb
sbb
jae
loope
mov
stc
mov
movsl
gs
rorl
xor
fsubs
stc
sub
push
loope
xchg
xlat
jns
jle
mov
rcrb
out
loop
and
shlb
rcrb
push
jne
fcoms
dec
addl
add
imul
popa
cwtl
jle
xchg
mov
push
sub
add
imul
sub
stc
scas
cld
rorb
out
cltd
cmpsb
outsl
popl
ret
jb
add
fimuls
enter
aam
imull
mov
push
mov
mov
loopne
add
pop
jge
vxorps
and
pop
movsb
scas
and
dec
cld
inc
xchg
ds
jnp
repz
out
dec
test
mov
ja
jmp
lret
aaa
cmp
rclb
inc
jmp
imul
inc
imul
div
in
loopne
push
sub
jecxz
scas
rol
leave
sub
mov
xchg
or
pop
test
pop
xchg
fimull
int3
outsl
push
adc
imul
data16
xchg
dec
and
incl
inc
js
int
aas
scas
in
cs
and
inc
mov
dec
ficompl
sub
ret
mov
pop
dec
and
xlat
int
or
fnsave
sbb
repz
inc
xor
or
in
aaa
orb
push
inc
iret
or
pushl
dec
xlat
sbb
xchg
aam
cmc
sbb
cmp
test
out
ret
cltd
cs
sub
sub
dec
mov
aas
aas
mov
out
mov
mov
cmp
loop
xchg
loope
stc
mov
mov
add
mov
adc
mov
sub
lock
imul
and
fdivs
mov
loope
or
mov
xor
jecxz
lahf
pusha
and
pop
push
xchg
loope
ss
sub
in
mov
fwait
sbb
hlt
popa
xchg
mulb
cwtl
or
sbb
and
out
inc
enter
xchg
mov
xor
cli
ja
roll
xchg
pop
jo
hlt
mov
adc
pusha
add
jnp
rorl
mov
cmp
jecxz
inc
xor
in
push
inc
out
jno
mov
sub
imul
push
sti
xor
insb
imul
ljmp
add
dec
jb
out
lahf
sahf
lods
fwait
lea
ljmp
insb
js
mov
in
movsl
inc
mov
push
out
lock
sahf
xchg
adc
fwait
sub
add
adc
lock
popa
mov
mov
shll
subb
shll
sub
iret
xchg
addb
push
int3
dec
subb
data16
dec
sbb
lret
shl
popf
inc
mov
cwtl
inc
lds
stos
jge
jns
adc
inc
cld
in
nop
pushf
cmp
and
rolb
jmp
mov
sbb
mov
mov
subl
cmp
daa
sub
xchg
popa
ret
jecxz
mov
hlt
add
xchg
inc
pop
mov
and
pushf
push
push
ret
insl
sub
mov
fsubrs
mov
loopne
in
jo
mov
cmc
ss
ror
xchg
mov
xchg
decb
fwait
ja
mov
scas
leave
mov
ss
xchg
mov
nop
push
or
dec
adc
aas
mov
cmp
cmpsl
das
movsl
cmp
cld
jp
inc
movsl
jo
inc
or
push
das
mov
rclb
mov
sbb
adc
xchg
or
mov
arpl
cmp
shll
xor
nop
pushf
ss
fldt
inc
or
ffreep
sbb
rcrb
popa
out
repz
movsb
pop
jne
cwtl
mov
mov
adc
xchg
shl
sub
sbb
iret
xchg
scas
in
ja
ja
xlat
jp
lds
fsubrl
push
dec
out
jmp
sub
hlt
sub
adc
subl
stos
push
test
mov
lret
into
jp
mov
js
mov
popa
mov
ficomps
out
mov
dec
cmp
cmp
jecxz
sub
mov
pushw
sti
popa
and
popf
inc
add
scas
das
dec
out
xor
add
shl
xchg
dec
mov
sub
stos
divl
xchg
into
js
fisubrs
lock
into
sbb
aaa
aad
pusha
mov
pusha
outsb
inc
sbb
std
loopne
call
xchg
or
dec
dec
pop
or
mov
std
fdivr
jecxz
xchg
aam
mov
mov
outsl
outsl
mov
xor
stos
xor
adc
sub
scas
cli
xchg
out
inc
mov
push
xlat
xor
imul
mov
and
cwtl
es
rorb
pop
nop
xor
inc
mov
mov
roll
aad
enter
push
push
xor
dec
lods
test
dec
hlt
mov
call
sbb
das
jp
movsb
sub
mov
fdivrs
mov
dec
jp
mov
call
mull
das
adc
and
inc
outsl
int3
xor
push
sahf
fistpl
out
push
xchg
loope
ret
int
ds
addr16
repz
xchg
sarl
sub
mov
and
cmp
sbb
xchg
cwtl
aad
mov
sbb
aad
filds
mov
sbb
cmp
adc
data16
xchg
mov
cmp
push
orl
jle
push
dec
add
cld
mov
sti
mov
adc
or
xorl
scas
out
mov
and
andb
jmp
jae
adcl
pusha
xchg
outsl
outsl
adc
cwtl
mov
add
and
xchg
mov
add
push
daa
xchg
daa
aas
jl
xchg
xlat
adc
sbb
lds
jg
xchg
cs
pop
es
cmp
outsb
in
dec
bound
mov
sub
push
xor
rclb
loope
int3
ret
mov
repz
sti
sbb
mov
or
dec
dec
mov
cmpsl
loopne
push
in
repnz
pop
ja
sub
test
add
pushf
mov
daa
jne
ds
dec
adc
adc
inc
enter
insb
mov
jns
scas
sub
mov
hlt
sbb
sbb
lock
mov
mov
rcr
xor
push
sub
sahf
or
call
and
mov
push
cmpsl
cli
adc
dec
adc
mov
or
jmp
cmp
push
cmp
cmp
sbb
repnz
fsts
dec
call
hlt
test
mov
lcall
cmp
lea
int
aas
xchg
nop
jns
repnz
mov
or
jo
xchg
shrl
adc
cmp
inc
je
in
test
dec
mov
ret
push
daa
mov
xchg
lds
lret
mov
std
mov
sti
pop
fstpl
sub
iret
mov
out
sti
sub
xchg
dec
iret
int
sbb
faddl
imul
movsl
xchg
add
cltd
loope
or
sar
xchg
out
mov
cmpsl
sub
push
dec
loope
cmp
adc
loopne
fucomi
pop
jnp
pop
nop
sbb
fwait
in
pop
call
push
xor
pop
xchg
mov
pusha
adc
stos
fstl
outsb
jb
arpl
insb
and
xchg
test
push
push
ds
cli
fisubrs
inc
pop
pop
sbb
push
or
sbb
movsl
xor
or
or
std
test
scas
fdivrs
loop
scas
ds
in
mulb
sahf
xchg
mov
andl
push
call
mov
aad
jge
lcall
dec
test
and
dec
mov
and
sarl
aad
xchg
push
push
pop
shrl
mov
dec
cmc
aad
mov
xor
sbb
mov
or
mov
sbb
add
test
repnz
in
loopne
or
shlb
and
cltd
in
and
dec
jp
adc
xchg
sti
daa
mov
les
bnd
mov
xchg
rcr
inc
mov
inc
test
mov
std
and
jne
mov
sbb
je
addr16
xlat
pusha
jns
popa
mov
jecxz
adc
rcll
rol
sbb
jmp
push
and
lock
dec
dec
in
out
push
adc
mov
outsb
xchg
mov
or
xchg
call
repnz
stc
push
pop
add
mov
sbb
mov
and
repz
bound
xchg
rolb
sbb
mov
mov
push
int
push
int
daa
and
cmp
repz
xor
cmp
daa
push
mov
pusha
shl
pop
fdivrl
lea
add
daa
push
mov
cmc
outsl
cmc
cmp
and
in
adc
fwait
shll
scas
push
fildl
lret
aad
imul
in
xor
outsb
jb
or
xchg
xor
xor
inc
movsl
ror
mov
lcall
lods
pushf
outsb
cltd
jns
sti
inc
scas
push
add
add
xor
jg
mov
notb
into
nop
loop
xchg
pop
dec
mull
mov
fsubrs
scas
add
sahf
ss
jbe
lods
pop
jnp
jbe
push
loopne
dec
stos
sub
stos
aas
or
stos
int3
daa
loope
leave
leave
and
sbb
or
cld
xor
call
sahf
cmp
dec
pusha
mov
mov
ret
jmp
inc
jae
cmp
xor
sbb
and
jne
repz
adc
mov
lcall
mov
mov
shll
aaa
jmp
in
shl
aam
ja
jns
sahf
adcl
xchg
or
faddp
decb
add
call
popf
mov
sub
cmp
shll
mov
sbb
push
call
loopnew
push
std
fcomps
push
lret
shrl
dec
into
mov
ss
arpl
insl
das
jmp
out
and
dec
jnp
cmc
inc
xor
adc
ljmp
pop
push
scas
push
ljmp
mov
xchg
xlat
out
test
cmp
rcll
stos
popa
inc
dec
das
inc
data16
sbb
test
dec
call
mov
jg
loop
bound
fildll
sub
push
gs
push
inc
xor
mov
imul
aad
ljmp
mov
push
frstor
sub
sbb
cmp
lods
sbb
insl
sub
outsb
jle
push
loope
lds
scas
dec
dec
xchg
sub
lcall
out
mov
and
loopne
and
movl
mov
fisttpll
arpl
xor
imul
pusha
mov
and
repz
mov
pusha
out
pop
scas
jmp
int
mov
dec
clc
mov
pop
adc
inc
scas
adc
jae
and
dec
lods
adc
xchg
mov
iret
shl
stos
repnz
push
in
repnz
movsb
mov
into
fidivrl
dec
jns
std
cmp
repz
out
js
jo
sahf
jmp
push
push
adc
loopne
and
mov
push
mov
dec
mov
in
movl
or
mov
cli
icebp
nop
cmp
ret
cld
imul
sub
pushf
call
mov
sbb
mov
jbe
rolb
jno
fidivrs
jle
fwait
test
andb
or
adc
sahf
xchg
mov
call
jge
sub
out
or
xchg
fistpll
or
sbbl
xchg
add
in
rorl
popf
pop
mov
test
sub
shll
test
mov
lea
pop
fcomip
jae
xor
jp
fcoms
dec
jmp
aad
and
cld
and
xor
icebp
arpl
and
sub
dec
stos
jns
xchg
loop
jp
pop
js
or
test
push
cmpsl
mov
sbb
js
mov
lods
movl
mov
xchg
mov
sbb
dec
rcr
xchg
das
fdivs
imul
mov
in
inc
push
mov
xor
xchg
test
mov
or
and
adc
std
hlt
and
ffree
xor
lret
nop
sub
jecxz
repz
icebp
jge
xchg
mov
or
jo
mov
enter
insl
cltd
aad
push
xchg
push
inc
sub
jp
into
xchg
push
int3
xchg
in
in
pop
adc
jbe
adc
mov
sub
scas
fwait
jp
add
jmp
lea
cld
cmp
cltd
inc
in
ret
jns
fucom
jbe
je
push
sbb
push
popf
xor
dec
test
mov
out
push
xlat
rcll
push
sti
test
pop
dec
ret
daa
je
test
cmp
lret
subl
mov
subb
ret
lods
fwait
jb
js
sub
icebp
lea
xor
ds
int
scas
leave
test
nop
or
pop
mov
jnp
and
or
cs
sbb
jle
and
jp
ja
aaa
leave
push
adc
mov
addl
xchg
push
sub
xor
out
dec
xor
je
mov
fisubrs
jnp
add
add
lret
xor
cmp
fbstp
sub
and
rcrl
popa
adc
add
out
xor
inc
mov
dec
or
or
insb
xor
gs
stc
xchg
push
cmp
shll
jle
pop
mov
js
insl
ficoms
pop
mov
shll
cltd
out
rcr
fiadds
xchg
inc
xor
mov
and
jg
mulb
and
aas
sub
jo
jl
mov
lods
dec
mov
test
mov
pop
into
mov
test
sub
std
repnz
fs
xor
cmp
pop
or
push
das
out
jns
imulb
jle
ret
popf
jle
cltd
lret
into
call
xchg
mov
mov
adc
xlat
stos
pop
mov
xor
stos
and
jmp
fiaddl
push
faddp
mov
xchg
imul
out
or
xor
dec
lds
mov
fwait
xorb
xchg
push
xor
or
push
loopne
xchg
cmpsl
sub
push
mov
add
mov
jg
mov
sti
and
push
mov
or
bsf
outsb
inc
or
pop
inc
add
sub
xchg
sub
dec
xlat
dec
or
push
mov
jg
les
inc
aam
add
gs
sub
fsts
fnstsw
mov
les
popf
mov
jp
xor
leave
jb
dec
xor
andl
aas
fs
inc
fwait
imul
mov
push
inc
xor
ds
mov
dec
push
subb
leave
cltd
adc
jp
xor
add
sub
aas
out
repz
sub
arpl
cmp
out
push
or
call
outsl
out
sub
sbb
dec
int3
jmp
pop
shl
xor
in
jb
mov
mov
mov
push
pusha
clc
mov
xor
add
mov
mov
sbb
pop
mov
cmpsb
cli
mov
outsl
inc
pop
out
ret
aaa
push
sbb
and
mov
fisttpll
pop
lods
adc
stc
push
decb
push
push
testb
xchg
xchg
popf
add
lcall
mov
or
andl
pop
push
sti
shrl
adc
pop
pop
pop
outsl
sar
cmp
sub
js
mov
jb
mov
jecxz
cmc
lds
shrb
pop
xchg
data16
in
call
dec
mov
jb
cmp
add
sarl
adc
mov
adc
ljmp
mov
cmp
mov
pusha
js
mov
insb
addr16
test
call
xor
dec
mov
fcomps
stos
mov
ret
fiadds
mov
push
ja
js
lods
mul
in
push
mov
mov
and
sbb
in
pop
je
sbb
inc
inc
iret
adc
pop
push
faddl
xchg
push
add
xchg
xorl
dec
xchg
fmuls
out
xor
jge
mov
cmp
mov
das
bound
xor
push
ror
xchg
dec
lahf
xorl
ficompl
jecxz
and
or
jl
pop
jmp
mov
push
js
pop
popf
lods
pusha
out
push
jmp
inc
mov
pop
mov
mov
mov
outsl
outsb
jb
icebp
mov
bsr
rcrl
pop
add
pop
loope
out
rolb
xlat
add
pushf
mov
cmp
imul
mov
pop
adc
and
icebp
leave
sub
cmp
fdivr
add
jle
test
insl
xor
mov
loop
cmpb
sbb
push
xchg
call
mov
test
mov
inc
adc
in
inc
push
sbb
fwait
jb
mov
mov
arpl
sarl
mov
lahf
xlat
data16
gs
arpl
add
enter
mov
lock
add
shlb
lret
dec
clc
mov
bound
addb
mov
mov
pushf
sbb
imull
mov
test
out
push
cli
push
pop
add
jnp
jmp
addr16
jecxz
jnp
xor
arpl
push
inc
cmp
pop
leave
sbb
push
lcall
mov
xchg
mov
mov
in
movb
mov
cli
cmp
rcl
cmp
jge
xor
push
dec
enter
hlt
pslld
dec
jg
add
ret
pop
jne
iret
lods
xlat
mov
pop
repz
into
shll
outsl
data16
mov
pop
mov
lcall
dec
xchg
cs
xor
mov
jb
push
out
jg
jmp
lock
sarb
inc
sub
pop
xchg
or
sub
repnz
lock
aad
lahf
sub
rcrb
dec
dec
roll
push
pop
filds
xchg
lcall
mov
xor
mov
in
mov
test
test
dec
dec
jecxz
jno
xor
lahf
icebp
js
jb
pusha
and
add
push
inc
scas
aad
std
cmc
xchg
je
arpl
xchg
rcll
pushf
pop
pusha
loop
jo
xor
sub
cli
mov
add
sub
cmp
jo
dec
mov
add
or
int
cmc
mov
std
jg
jmp
ss
das
jo
rcr
imul
jle
notb
xchg
mov
lea
and
pop
int3
imul
xchg
sti
ret
ss
mov
jbe
cmpxchg
xchg
fucomi
dec
jge
cs
jne
addb
dec
imul
xor
pop
jp
xor
inc
adc
enter
xchg
mov
pop
pop
mov
xchg
mov
mov
mov
scas
ret
xorl
icebp
sahf
add
pop
bswap
pop
inc
lret
mov
xchg
adc
jmp
dec
inc
fidivl
aam
repnz
cmp
and
scas
sti
xorl
cli
inc
sahf
xor
stos
mov
or
xchg
push
shl
jg
push
lds
and
pop
xchg
mov
mov
imul
and
fcomp
leave
sub
push
decl
in
aam
xchg
ret
pop
mov
lret
lea
mov
fiaddl
inc
push
lahf
cmp
jp
xor
push
rol
push
xor
outsb
mov
aas
and
dec
or
dec
sbb
pop
jb
je
push
mov
cld
cmp
push
jbe
inc
inc
pusha
int
icebp
fstpt
xchg
stc
lds
jo
pushf
cmp
mov
inc
mov
push
clc
push
cmc
jecxz
add
scas
je
out
or
jg
dec
mov
sahf
cmpsb
std
arpl
mov
negb
gs
jnp
in
test
mov
cs
leave
cmpl
jns
ret
push
push
adc
jo
nop
mov
push
xchg
popf
insl
mov
cmp
movsl
mov
dec
xor
aas
repz
daa
dec
adc
push
aas
in
lret
jnp
mov
ret
xor
les
xor
pop
lock
pop
jge
mov
bound
and
mov
sbb
push
imul
or
sbb
notl
sbb
sub
cli
aad
xchg
sub
lods
inc
ret
ret
mov
rolb
lret
mov
push
dec
loop
mov
cmpsb
lock
lahf
mov
xor
xchg
mov
push
stos
in
push
or
add
push
sbb
xlat
sbb
mov
sbb
cltd
push
push
mov
dec
xlat
clc
pop
test
pop
pop
in
jae
sbb
cmp
push
mov
inc
sub
xchg
jmp
sahf
push
fs
fidivl
sub
aam
sahf
cmp
cmp
pop
out
sub
mov
adc
movsl
lret
ljmp
xchg
adc
sub
or
sbb
int
mov
xor
add
mov
lret
mov
pmovmskb
ret
lret
pop
fcmovnbe
jb
mov
loopne
inc
in
xchg
shlb
loop
enter
arpl
dec
dec
arpl
or
push
aad
xchg
ret
das
adc
clc
mov
dec
sti
outsb
and
mov
sbb
pop
sti
notl
sub
xor
dec
mov
into
fstpt
jnp
orb
stc
push
dec
rcl
imul
js
scas
lock
lods
mov
and
cmp
in
imul
cmpsb
cmp
rcll
mov
inc
add
dec
xchg
jle
hlt
mov
xor
and
dec
in
add
fwait
out
movsl
jmp
es
dec
push
jbe
std
sbb
testb
bound
clflush
push
cwtl
lcall
jge
push
sub
incl
popa
push
pushf
mov
and
mov
jg
xchg
call
aad
add
jns
push
dec
jecxz
test
push
jbe
cmc
mov
repz
jp
xchg
movsb
add
xor
pop
xchg
fdiv
lahf
xchg
jae
jno
js
push
aas
jno
inc
stc
or
push
outsb
aam
xchg
mov
adc
and
test
mov
push
jbe
pop
out
inc
sub
dec
call
into
cmp
and
push
fidivrl
inc
daa
pop
xchg
jl
repnz
xor
pop
dec
dec
cmpsb
mov
or
xchg
loop
cmp
mov
or
jnp
cmp
negb
popa
push
sahf
xchg
cmp
or
sub
sub
in
push
cmp
in
jnp
pop
sbb
ret
mov
repz
pop
cwtl
rorb
push
psllw
push
ror
cmp
jl
mov
arpl
rol
sbb
or
lret
ljmp
mov
stos
sub
aad
push
loopne
cmpsb
enter
xchg
dec
rcrl
repnz
shrl
scas
mov
js
or
xor
sbb
imul
rcl
sbb
adc
pusha
mov
push
dec
inc
out
imul
dec
leave
xor
dec
inc
fisubrs
xor
jb
mov
xor
ds
fstps
push
pusha
mov
adc
test
lds
mov
jl
mov
inc
shll
push
ds
sbb
adc
pop
icebp
sahf
cli
jmp
jge
pop
out
icebp
nop
jno
jne
test
cvtps2pi
cmpsb
ret
scas
push
stos
cmp
ret
fs
iret
or
jle
fdivrs
push
into
fcmove
enter
cmpl
popa
movb
aas
rorb
scas
cmp
mov
fxtract
xchg
dec
mov
loopne
adc
and
or
ss
dec
dec
ret
mov
ret
mov
jg
mov
cmp
scas
add
dec
arpl
sbb
pushf
icebp
add
jg
int
ljmp
xchg
sbb
aaa
sbb
add
dec
adc
mov
rcrb
push
vandps
bound
roll
mov
fwait
bound
into
sbb
fwait
popf
jmp
clc
mov
jnp
les
xor
imul
inc
cmp
insb
lea
pop
jle
jns
test
loopne
aas
cltd
js
jl
shll
imul
mov
insl
cmp
or
ret
cmp
sti
pop
push
lcall
jge
pushf
gs
rorl
je
sbb
aaa
mov
jp
imul
sbb
xor
outsl
cli
push
stos
inc
pop
push
cmp
cmpsb
cs
push
inc
jae
push
and
out
pusha
loop
sub
outsl
push
xlat
jb
xchg
dec
fnstenv
jg
movsb
outsb
jp
and
adc
mov
pop
inc
pop
add
pop
outsl
sti
pop
arpl
add
inc
dec
cmp
faddl
in
into
cmp
mov
cs
and
adc
bound
push
scas
sub
enter
movsl
xchg
fsubr
push
pop
sbb
jne
sti
rcll
xchg
jns
out
push
xchg
loopne
test
ds
jp
adc
or
xchg
jp
pop
sub
inc
mov
call
aad
leave
add
xlat
mov
fisubrl
movsb
mov
push
sbb
dec
and
mov
xor
dec
mov
lahf
std
mov
ds
lahf
divb
pop
subb
fsubrs
cmp
jns
in
out
add
pop
and
add
fs
and
inc
aas
push
into
mov
mov
mov
ror
orb
mov
lock
aas
repz
dec
push
fstpl
sbbb
scas
push
sbb
push
jns
vpsubd
and
cld
ret
sahf
cwtl
rcl
jns
jg
inc
das
adc
int3
scas
lods
mov
hlt
dec
sub
xchg
in
adc
lods
scas
icebp
cmp
imul
jge
dec
insb
jl
xor
push
pop
cli
mov
sub
mov
add
pop
stos
sub
adc
jns
jmp
mov
mov
sub
sub
paddw
xchg
repz
outsb
out
in
mov
leave
push
jnp
adc
sub
stos
adc
call
addr16
push
dec
ret
cld
and
out
mov
or
ds
aas
lods
adc
jp
jmp
push
fwait
movsl
dec
mov
lret
les
add
addr16
arpl
cmp
andl
sub
cmpsl
in
pop
pop
and
js
and
cmp
dec
in
add
inc
pop
xchg
pop
bound
sbbl
lret
sub
fnstsw
inc
roll
pop
clc
jno
mov
pop
lods
es
mov
cld
xchg
jg
stc
xlat
rcrb
lret
or
add
call
jg
cmp
scas
adc
dec
inc
mov
movsb
shl
add
hlt
mov
loopne
leave
sub
testb
or
xchg
xchg
xor
and
mov
xchg
mov
xor
out
jae
fldcw
jo
mov
jno
fsub
into
movsb
mov
push
daa
pop
imul
pop
sub
inc
lahf
stc
sbb
mov
stc
js
orl
mov
ja
xchg
sti
xor
sahf
jge
js
adcb
push
leave
cltd
xchg
rcr
ds
loop
mov
xchg
divb
dec
lock
and
cmpsl
out
popf
or
lcall
jnp
mov
xchg
jecxz
cmc
testb
cmp
jmp
jnp
pop
inc
or
push
jns
inc
aaa
mov
cmp
mov
xor
push
daa
pop
testl
add
test
jp
and
mov
adc
inc
cltd
pop
pop
out
rcll
add
incb
cmpsb
ss
sbbl
sub
aam
xor
cmp
sbb
imul
dec
add
inc
ljmp
and
outsl
xor
dec
bound
xor
mov
sbb
js
lahf
sbb
in
push
jne
ds
lret
aam
jmp
sti
out
xchg
add
movsl
insl
popf
mov
out
fidivrl
jno
and
jns
test
enter
cltd
lods
push
aad
push
mov
sbb
movsb
inc
test
push
jb
mov
pop
aam
movsl
xchg
pop
ret
dec
mov
sahf
pushf
jp
out
push
mov
subl
test
xchg
out
cld
mov
xchg
adc
add
jo
xlat
loope
xchg
pmaddwd
cmc
mov
push
mov
in
mov
jl
mov
ja
dec
mov
dec
call
je
cwtl
sbb
sbb
mov
mov
std
popf
pop
sub
repz
and
xchg
lods
mov
sbb
pop
add
dec
imul
mov
js
mov
jg
cmp
rcl
sbb
inc
pusha
cld
pop
imul
mov
rcrb
xor
fcoml
jecxz
jmp
and
test
and
sub
lods
cmc
out
mov
loopne
xor
inc
lods
jge
xchg
cmc
iret
addr16
pop
xchg
sti
fbstp
lods
ljmp
pop
cltd
cmp
fs
jge
addr16
jno
jo
pop
icebp
mov
inc
mov
fistpll
pop
mov
ss
pop
cmpl
test
cwtl
mov
inc
mov
xlat
das
xchg
inc
fnstenv
mov
jp
xor
in
sti
mov
test
pop
jae
insb
mov
jle
cmpsl
dec
ljmp
xlat
mov
mov
repnz
data16
and
es
nopl
add
or
andl
mov
jl
lods
idivl
fcoms
adc
das
mov
mov
xchg
xchg
pop
lahf
xchg
mov
add
out
fimuls
fildll
filds
ror
jno
mov
in
add
xor
or
scas
jle
sub
sarl
and
mov
js
icebp
push
pop
in
mov
mov
out
popa
ja
lods
sahf
add
outsl
mulb
mov
es
sub
jmp
inc
cltd
and
or
mov
loop
pushf
push
leave
stc
adcl
jo
test
jmp
sub
and
ret
fcmovbe
push
mov
jmp
loopne
adc
ljmp
push
lret
rolb
pop
cmp
push
clc
inc
lret
repnz
into
cmp
inc
pop
std
jp
xlat
mov
mov
ljmp
divb
fidivl
dec
push
ljmp
imull
add
inc
call
mov
in
jnp
mov
jecxz
outsb
inc
jp
test
aam
sbb
adcb
in
stos
pop
cmp
leave
dec
cmp
test
movsl
mov
loop
mov
sti
lock
cwtl
outsb
stc
negb
testl
mov
leave
insb
jge
push
mov
cmp
mov
arpl
push
insb
pop
fcoml
cmp
out
pop
xchg
dec
outsl
mov
mov
or
dec
mov
jp
pop
pop
inc
lcall
loope
push
cmp
sbb
sbb
js
xchg
jp
mov
int
repnz
pusha
push
mov
sbb
adc
test
addr16
xor
movsb
push
cmp
int3
sub
lods
add
data16
paddq
push
xlat
fnsave
aad
jae
mov
sub
shlb
pop
repz
addr16
les
xchg
aam
les
sahf
dec
jo
and
pop
and
lret
cmp
jp
dec
add
addr16
add
into
out
mov
les
popa
ja
sbb
adc
add
call
push
push
imul
inc
mov
pop
stc
lods
cmpsb
aad
push
sbb
and
mov
and
add
or
push
push
mov
or
addl
cltd
fisubrs
iret
or
push
lret
sub
xchg
rcl
mov
pop
pop
orl
push
xchg
sti
push
dec
jmp
sub
push
inc
mov
insl
mov
xor
xchg
sti
cmp
insb
bnd
cmp
sbb
dec
cmc
shrl
fiadds
dec
fildll
mov
bound
scas
mov
or
xchg
lcall
xchg
cmpxchg
insl
xor
mov
and
dec
cltd
inc
xadd
xchg
mov
subl
xor
dec
js
les
dec
jae
fdivl
pop
and
loopw
push
fcoms
sbbl
jno
mov
lds
daa
xchg
je
adc
test
subb
add
mov
dec
stos
or
dec
inc
retw
ret
cmovs
mov
sub
mov
mov
out
pushf
sti
cwtl
pop
je
mov
mov
lahf
pop
mov
mov
ja
mov
mov
mov
fcompl
int
fsub
xchg
aaa
leave
adc
or
out
add
xor
mov
sti
aad
std
out
loopne
push
sbb
popa
ljmp
adc
pop
incl
cmpb
mov
mov
push
lea
xchg
push
dec
lods
sub
repz
add
leave
adc
imul
pop
lea
or
or
xchg
xor
jp
lcall
and
add
cmp
fidivrl
mov
push
cmp
test
les
call
or
mov
cmp
test
out
and
jae
lret
rorl
cltd
repnz
icebp
in
jbe
data16
or
mov
int
sub
lret
loopne
fisttpl
addl
rcr
movsl
xlat
stos
xchg
mov
fsubl
stos
inc
push
jae
test
std
push
orl
lods
ret
or
adc
dec
ja
adc
push
daa
sbb
enter
pop
push
mov
aaa
pop
add
xchg
dec
push
pop
and
sti
les
xchg
out
and
push
xchg
xchg
jnp
jle
aaa
out
cltd
loope
mov
cmpsb
ficomps
and
inc
sub
fsubp
pop
lds
inc
inc
adc
addr16
push
jmp
xchg
fwait
pusha
or
pop
pop
enter
add
and
pop
adc
push
mov
repnz
cli
imul
into
jo
mov
dec
pop
add
ret
fisttpl
dec
xchg
mov
mov
jp
or
mulb
stc
stos
or
xchg
sub
into
pop
jle
ret
jmp
aad
xchg
fists
sub
arpl
test
sub
aam
jmp
mov
adc
adc
fcmovnu
mov
sahf
test
les
jae
jmp
hlt
push
lretw
push
ret
and
jle
mov
mov
ss
xor
jns
outsl
fstl
sbb
adc
rorl
inc
pop
sub
orb
aaa
adc
push
es
pop
and
ja
jge
pop
enter
mov
int3
jo
popa
dec
cmp
int3
jge
mov
shrl
inc
jno
sub
ja
inc
jbe
sub
shl
or
and
mov
pop
fidivs
or
add
pop
gs
sub
or
movsb
cmp
add
enter
pop
add
jmp
add
mov
loope
or
movsb
xlat
je
or
xor
lret
xlat
shll
mov
dec
shll
in
test
fsubl
dec
orl
mov
adc
ss
mov
and
lcall
push
push
popf
mov
or
xchg
loop
inc
push
das
pop
mov
fldenv
bound
add
sbb
mov
in
or
icebp
mov
jmp
lods
ret
arpl
xor
mov
fldt
faddp
xchg
dec
shll
push
and
pop
mov
sub
fcompl
rep
ret
xchg
inc
in
movsl
and
sub
inc
test
add
sub
dec
sahf
std
push
xchg
out
cmp
add
enter
bound
in
xchg
cmp
gs
test
cmp
cmpsb
push
aam
sub
sbb
dec
or
and
repz
lods
lahf
pop
dec
es
pop
outsl
and
inc
jb
ud0
mov
arpl
add
sub
je
add
jge
gs
in
xor
fsubr
loop
test
mov
mov
outsb
sbb
mov
push
dec
inc
movsb
int3
or
mov
and
xor
in
pop
pop
inc
mov
adc
jmp
aas
es
inc
or
testb
inc
xchg
test
les
xchg
jae
mov
stc
push
cwtl
movsb
mov
mov
or
adc
add
cltd
push
jmp
std
mov
mov
pop
rcll
dec
jbe
testb
pop
into
fsubl
xor
jle
lahf
fsub
sub
dec
adc
pop
cs
sub
cli
xchg
imul
subb
push
inc
sbb
stc
out
and
or
shrl
popa
jo
mov
mov
jae
ret
or
jle
call
pop
dec
cmp
lahf
rcll
dec
loop
or
mov
xor
mov
jnp
mov
jnp
or
and
pop
test
std
rorl
mov
add
sbb
test
and
lret
notb
shl
xchg
movsb
push
cmpsl
cld
aad
mov
jo
popa
mov
ret
pushf
lods
int3
mov
andnps
out
loop
jnp
push
push
inc
nop
pop
or
lods
push
out
cs
test
inc
mov
xchg
inc
cmpl
imul
cmpsb
hlt
out
scas
loope
std
clc
add
add
sub
mulb
or
jl
adc
dec
lcall
int3
mov
rep
dec
inc
inc
jns
dec
xor
adc
inc
inc
mov
dec
xchg
or
bound
idivl
icebp
in
ja
mov
mov
mov
mov
lcall
mov
dec
enter
jbe
mov
xlat
in
dec
push
mov
out
cwtl
mov
jno
add
dec
lods
repnz
mov
mov
enter
jns
stos
cmp
jae
adcb
dec
les
mov
int3
test
pushf
rcr
dec
dec
inc
or
cmp
adc
sub
inc
pop
add
sti
mov
adc
dec
add
test
ret
cs
bound
pusha
je
int3
inc
testb
dec
data16
add
ljmp
cmp
std
ret
insb
mul
pop
sub
or
xchg
sub
cmp
dec
imul
and
in
subl
ds
pop
mov
dec
xchg
rorl
mov
cmc
subb
sbb
sahf
pusha
aam
outsl
push
mov
or
jne
insl
std
bound
mov
or
test
pop
push
mov
adc
sub
adc
and
pop
inc
xor
cld
mov
adc
mov
sbb
cmpsb
imul
lret
jnp
lret
insl
int
lea
test
xor
es
scas
mov
dec
mov
notb
stos
push
sub
test
jle
sahf
dec
cs
push
pop
pop
dec
mov
shlb
fcompl
lock
sbb
dec
nop
mov
mov
into
hlt
mov
xlat
sbb
pop
ss
add
adc
mov
ljmp
ljmp
into
xor
cmp
mov
and
mov
fwait
xor
mov
mov
aad
and
pop
fisttpll
and
repz
mov
insl
aam
mov
push
adc
sbb
repnz
jp
or
push
push
shlb
lcall
jge
cmpsb
aam
repnz
lods
xchg
push
sbb
xchg
popf
aam
mov
cmp
sbb
add
sub
cmc
push
scas
pop
das
lret
cmp
or
rcrl
leave
mov
nop
dec
pusha
adc
mov
gs
fldt
hlt
push
nop
adc
repnz
out
and
xchg
ret
stos
stos
pusha
xlat
ret
dec
ret
cmp
sbb
inc
mov
outsl
out
mov
repnz
mov
sub
popa
jmp
bound
dec
imul
pop
push
pop
push
dec
imul
fwait
adc
add
jno
push
inc
loope
xor
lret
scas
stc
xor
cmp
xchg
je
out
inc
in
mov
lds
xor
mov
xor
iret
call
push
jl
shrl
mov
rcll
into
cmp
mov
cltd
pop
pushl
mov
clc
dec
inc
hlt
push
dec
pop
mov
vmovdqa
sub
lea
mov
jp
push
inc
pop
test
sti
xchg
jmp
in
cwtl
insl
add
jns
fildl
hlt
rorb
repnz
mov
mov
out
add
leave
outsb
mov
pop
jb
jp
fcomi
push
negl
test
mov
adc
lock
stos
sub
inc
jne
cmp
push
negb
ljmp
cmp
jno
jnp
scas
mov
std
mov
push
cmpsl
adc
push
jb
push
xchg
mov
enter
and
push
or
or
mov
dec
dec
loopne
outsb
sub
dec
stc
shll
outsb
mov
sub
add
jmp
inc
xchg
popa
jne
dec
add
add
push
incb
ret
lcall
int3
fidivl
out
jbe
leave
call
ja
dec
pop
sarl
test
mov
cltd
addl
lds
add
insl
ficoms
in
outsl
add
push
mov
xor
lds
orl
inc
aam
push
out
mov
loope
push
mov
fiadds
mov
adc
pop
dec
inc
mov
adc
cmp
out
mov
inc
jno
fldenv
arpl
iret
cmp
and
ljmp
sbb
js
aaa
mov
sub
sub
fxch
test
outsl
inc
je
mull
stos
xchg
aad
mov
je
pop
test
mov
insb
jle
stc
mov
mov
sub
in
sahf
push
in
fcomps
shll
inc
add
ljmp
pop
pop
fisubrs
test
pop
xchg
lret
aas
gs
imull
pushf
mov
js
xchg
cmpsl
enter
sub
and
loope
or
mov
jns
mov
push
hlt
mov
push
fs
or
mov
js
cli
and
lcall
sub
cltd
rclb
add
push
call
cmp
fbld
inc
popf
fisttpl
outsl
popa
mov
mov
loope
aad
int3
pop
mov
pop
lahf
push
lock
cld
sti
sbb
jl
lret
xchg
orb
dec
clc
mov
pusha
pop
pop
lahf
cmp
out
jecxz
jecxz
sub
test
jb
popf
sysret
jno
test
dec
push
mov
mov
inc
and
xchg
loop
cmp
jg
or
div
sbb
and
imul
push
rclb
push
cmp
stos
in
hlt
jmp
adc
rcr
dec
enter
or
or
add
nop
push
mov
pop
dec
inc
adc
in
sub
or
or
and
incl
pop
add
push
jae
mov
mov
adc
das
pop
loop
shl
icebp
leave
pop
adc
mov
jle
outsb
stos
cld
out
decb
das
push
mov
add
lds
mov
std
popf
cmp
pop
xchg
scas
bound
in
inc
lcall
sub
mov
mov
sbb
in
pop
pcmpgtd
sub
mov
xor
out
and
cmc
xor
push
imul
mov
out
decb
lds
jae
mov
cmp
cmp
sahf
dec
test
lock
push
xchg
pop
push
andl
sub
in
out
cmpsl
cmp
cmpsb
repz
in
lcall
xchg
pushf
mov
aas
bound
lds
push
xor
test
mov
mov
inc
std
push
testb
dec
lret
sbb
push
and
pop
in
mov
nop
fsubrs
jne
mov
inc
je
and
dec
and
pop
fs
xchg
out
sub
pop
xchg
negl
das
push
lret
test
xchg
or
pop
shlb
fcompl
repz
shlb
xor
in
or
push
loope
pop
xchg
xchg
push
shr
push
add
xchg
iret
xchg
pop
jge
mov
cmp
andl
cmp
sarl
stos
out
fcoms
test
and
in
mov
or
mov
lret
stos
xchg
adc
movsl
sbb
mov
xchg
mov
clc
pop
idivb
xchg
inc
mov
xchg
push
sbb
and
push
idivl
xlat
cmp
nop
push
xor
imul
lock
mov
in
inc
mov
ret
lcall
and
sbb
mov
sbb
lock
adcb
outsl
xchg
cmp
jg
jb
rolb
and
icebp
cmpsl
ss
fbstp
in
inc
mov
add
ljmp
cmovns
rcrb
jg
stos
inc
insl
mov
fwait
push
inc
gs
add
out
mov
push
outsb
faddl
sub
inc
in
sti
pop
test
mov
imul
xchg
dec
out
push
mov
out
aaa
mov
mov
in
mov
sbb
xchg
ljmp
adc
in
bound
lods
inc
add
in
stos
mov
leave
jb
mov
enter
bound
lcall
enter
pop
inc
cmpsl
fistps
out
mov
repz
pop
movsb
clc
daa
fisubrl
aas
and
xorb
cmp
fldenv
xor
and
mov
test
dec
in
fsubrp
scas
ja
rclb
or
inc
mov
mov
push
ret
fnop
loop
cli
jbe
stos
inc
lret
aad
sub
fs
dec
mov
or
js
scas
ds
xchg
pop
or
mov
scas
inc
sub
mov
dec
jbe
sub
adc
sbb
movsl
pop
sub
mov
push
mov
movsb
lahf
jno
in
push
adc
sub
dec
sbb
add
aad
mov
pop
sbb
mov
mov
repnz
xchg
mov
fisubrs
hlt
cltd
rclb
push
pop
cs
fstpt
mov
sbb
outsb
pop
in
fsubrl
xor
and
mov
out
add
mov
sti
roll
into
adc
dec
adc
test
push
fcomp
dec
sub
cmp
sub
push
pop
popw
stos
push
jle
mov
and
mov
cmp
insb
dec
pop
sbb
hlt
faddl
pop
lret
adc
jp
insb
inc
mov
push
aad
dec
xchg
xchg
push
daa
xor
xchg
cli
movsl
out
mov
arpl
add
in
cli
sub
pop
pop
hlt
arpl
mov
cmp
les
or
and
xchg
push
rcrl
jg
mov
repz
popa
xor
inc
rdpmc
push
movsl
pop
aaa
pop
and
inc
test
fwait
out
iret
enter
and
or
daa
push
inc
lods
stc
xchg
insb
mov
mov
mov
adc
adc
xor
stos
inc
adc
mov
enter
pop
or
jmp
mov
xor
jnp
je
inc
mov
dec
sbb
subb
cmpsl
sbb
jmp
push
ljmp
cmp
xchg
jmp
enter
pop
sub
or
sti
cltd
sub
mov
mov
jno
test
pop
adc
jne
sarl
cmp
mov
adc
sbb
adc
add
popa
hlt
mov
cmp
loope
aad
lahf
cltd
mov
stos
loop
xchg
jg
mov
das
loopne
adc
ja
lea
lcall
cmpsb
sub
push
jo
daa
pop
sbb
lods
adc
sub
sub
addb
mov
popf
insl
stc
dec
add
sub
sbb
bnd
jb
cmpsl
aad
pop
mov
push
jge
mov
sub
call
daa
enter
into
and
mov
sti
je
cmpsl
sub
in
dec
aam
mov
xor
dec
outsb
test
cmp
mov
daa
pop
ljmp
or
pop
inc
arpl
mov
add
test
sarb
or
mov
jmp
lret
hlt
cltd
mov
mov
ja
nop
adc
int3
imulb
sahf
roll
xorb
dec
ret
cmpb
push
add
adc
sahf
mov
dec
adc
outsb
jne
push
mulb
mov
mov
adc
int
enter
push
cmp
add
ret
aad
jb
xor
notb
dec
imul
insl
xchg
ret
cmpsl
jg
mov
aas
jne
sbb
std
js
xchg
cmp
ret
pushaw
or
adc
pop
cmpsb
xor
iret
push
dec
imul
cs
rcr
rcrl
loope
lea
sahf
js
cli
mov
cwtl
pop
adc
pop
xchg
jg
les
cmc
push
pushf
inc
mov
dec
sub
push
and
shll
cmp
xchg
cmpsl
cmp
and
in
adc
and
aad
aad
push
mov
push
nop
mov
cmpb
stos
sub
stos
movsl
push
sub
cmpsb
sub
inc
cmpsl
adcb
or
mov
gs
mov
cltd
fcompl
xor
or
jns
dec
and
sbb
mov
mov
cmp
mov
insb
frstor
ja
cli
es
mov
pop
leave
out
test
stos
sub
ret
cmp
cmpl
pop
call
test
out
or
sub
sbb
push
add
pop
daa
or
and
jnp
or
das
mov
xchg
xchg
pop
push
ret
aas
jb
dec
insb
sbbb
dec
imul
add
push
imul
out
dec
je
add
jmp
mov
stc
ret
xor
ss
pop
enter
rcrb
sbb
jb
mov
push
fsubrl
insb
mov
pop
call
sbb
cld
sarl
add
push
sub
adcb
mov
dec
inc
cmp
test
lahf
pop
repz
dec
test
pop
stc
and
sahf
sbb
dec
in
xchg
jo
lock
inc
mov
mov
and
xchg
push
sbb
sbb
adc
mov
jle
cltd
scas
call
inc
out
stos
adcb
loopne
mov
mov
dec
mov
mov
mov
jns
js
sub
fdivs
add
or
cmpsb
mov
repz
aam
xor
mov
idivb
repnz
fimull
pop
daa
test
lret
mov
out
adc
or
jle
jno
dec
popf
push
and
sbb
negb
das
push
pop
push
adc
lods
cmp
inc
shll
adc
mov
add
jmp
ss
popa
pop
mov
jno
inc
shr
or
cmpsl
cmp
pop
aad
mov
leave
inc
push
cmp
xchg
pop
jmp
and
loop
movsb
leave
movb
loope
xor
push
stos
push
insl
inc
sub
mov
and
hlt
test
inc
inc
or
jle
fistps
sub
out
jae
jo
inc
push
sub
pop
mov
pop
bound
pop
push
and
ficoml
addr16
sub
daa
push
push
xchg
stc
repz
rclb
jbe
pop
in
mov
push
xchg
cmc
cltd
push
or
mov
mov
cwtl
sub
sbbb
je
adc
add
pop
xor
ds
cld
push
in
je
pop
xchg
test
inc
mov
add
mov
hlt
enter
inc
inc
add
xchg
pop
or
addr16
ficoms
pop
inc
loop
aam
mov
es
bound
xchg
push
xor
xchg
mov
add
and
sub
mov
mov
fs
loop
cmp
xor
aaa
push
sbb
sub
and
xchg
gs
pop
out
shrl
or
or
ret
insb
mov
inc
mov
jne
and
mov
mov
das
out
rorl
stos
push
test
xchg
xchg
call
push
iret
pop
cmpsb
dec
pop
out
ret
mov
repnz
loopne
or
or
cli
test
in
dec
in
sub
test
sbb
adc
inc
cli
add
mov
add
jns
mov
add
mov
rorl
out
scas
mov
ss
shll
inc
xchg
pop
mov
mov
inc
and
lods
aaa
mov
loope
int3
insl
cwtl
repnz
test
mov
cmp
xchg
and
and
loopne
repz
sahf
mov
clc
sbb
aam
cmp
lcall
stc
data16
sbb
push
aaa
ret
jmp
mov
outsl
jb
sbb
xor
pop
data16
sub
daa
mov
and
dec
inc
mov
jge
fs
outsl
and
addb
movsl
stos
sbb
lret
in
in
mov
pop
cmpsl
imul
pop
mov
add
dec
stc
sbb
mov
out
pop
movsl
fwait
popa
xchg
push
ljmp
out
sbb
stos
pause
pop
push
call
adc
add
in
push
cwtl
sub
outsb
aaa
push
adc
fiadds
test
lds
pop
pop
fcmovnbe
push
in
sub
lret
adc
ljmp
out
mov
xchg
add
push
cmpsl
in
int
mov
test
subl
inc
or
repnz
lcall
cmp
pop
pop
pop
pop
cmc
or
mov
inc
shrl
insl
pop
mov
inc
incl
test
clc
dec
ret
je
sub
dec
push
adc
xlat
xor
mov
das
jo
mov
lea
push
iret
addl
sub
into
rorb
test
cwtl
cltd
popf
sub
xlat
cmp
call
mov
into
mov
and
movsl
mov
inc
cmp
jno
jae
inc
push
int
shrb
loop
aam
push
cwtl
lahf
lret
test
das
pusha
inc
fxch
push
jbe
fwait
mov
cli
ljmp
mov
xor
adc
cmp
loop
es
mov
xor
jae
push
sbb
imul
test
sub
and
incb
push
push
into
in
dec
inc
int3
loopne
pop
cmp
xorb
sarb
notl
or
inc
int3
dec
icebp
cmpsb
add
int
je
imul
mov
or
jecxz
jp
fcoms
adc
pop
mov
jg
jno
lahf
add
add
mov
sti
push
adc
dec
mov
xor
out
jl
mov
xor
lcall
sbb
out
fistpl
adc
mov
adc
add
mov
stos
adc
les
ja
test
out
adc
xchg
stos
sbb
shlb
int
sub
pop
xchg
inc
insl
fsts
xor
jge
sub
jbe
sub
popf
mov
enter
mov
shr
sbb
arpl
push
mov
int
xor
enter
cmp
aam
jg
jbe
ret
cmp
cmpsb
mov
inc
jg
testl
jae
loop
sbb
sub
add
cmp
cmp
and
fdivs
and
jp
pop
rclb
pop
push
rol
je
and
mov
fistpll
mov
popf
inc
pop
mov
add
loope
mov
jp
push
data16
lret
or
cmp
cs
jge
xor
jae
dec
pop
std
sbb
xor
lock
test
popf
pop
cs
negl
mov
push
or
loopne
mov
call
xchg
addr16
iret
movsl
lret
loope
and
jecxz
popa
push
out
lret
jno
dec
sbb
xor
cmpsb
mov
clc
mov
push
lret
push
add
popa
stos
mov
mov
adc
push
jg
test
iret
lahf
mov
dec
repnz
aas
mov
int3
push
icebp
mov
lret
imul
jmp
jmp
daa
imul
addr16
int3
ja
divl
fwait
push
push
mov
int
and
cmp
dec
or
insl
push
ret
test
or
into
sub
mov
insb
subb
inc
push
lods
pop
jg
push
popa
scas
sbb
jb
xchg
dec
loopne
mov
lret
pop
dec
xor
sub
xor
lds
nop
adc
ja
cmpsb
cmpsb
jb
pop
jno
pop
pop
pop
dec
mov
stc
hlt
adc
mov
repnz
add
and
pop
and
jne
bound
jno
jb
or
cmp
fstpt
cmp
je
fstps
sbb
mov
sub
cli
lret
lds
ret
testb
add
ret
fwait
hlt
dec
add
mov
out
pop
pop
cmp
mov
loop
mov
out
mov
lret
push
and
les
mov
mov
lret
adc
jo
ljmp
push
pop
filds
mov
std
sub
int
xchg
leave
movb
js
into
sub
jbe
mov
add
int3
adc
pusha
fldt
mov
xor
shrb
rcrb
add
gs
lock
sbb
mov
xor
pop
or
fldl2e
and
fs
fdivrl
pop
sbb
aas
jbe
and
jb
sbb
ja
cwtl
add
adc
js
test
mov
lahf
fildl
int
and
adc
lods
mov
adc
mov
xor
inc
sbb
cmp
pop
fwait
dec
inc
loopne
push
pop
xchg
inc
js
lea
or
stos
inc
push
adc
mov
test
or
push
inc
cmc
sbb
adc
ss
push
imul
leave
cmpsb
and
xchg
loopne
pop
in
rcrb
jle
les
dec
insl
or
adc
jnp
sub
dec
and
and
xor
test
jnp
stc
xor
lcall
and
je
push
adc
fdiv
mov
dec
sub
jns
fsubs
fisubrs
push
jge
int
sbb
push
jne
filds
xchg
in
and
sti
inc
int
test
cmp
adc
sub
mov
push
pop
xchg
sub
daa
repz
jo
je
mov
jb
ss
faddl
sbbb
fdivs
aam
jg
repnz
mov
lret
rcrl
fstpl
daa
dec
mov
cmc
pop
push
sub
lods
test
std
shlb
and
scas
addr16
xchg
lods
movsl
jmp
dec
and
imul
xchg
repnz
leave
leave
idivl
adc
adc
adc
cmp
nopl
xchg
push
nop
jb
aad
popl
adc
mov
pop
push
and
inc
xchg
cmp
inc
push
push
add
jne
inc
ss
mov
or
inc
sbb
lock
xor
loopne
inc
dec
fstpt
sub
mov
leave
shl
mov
stc
in
xchg
in
add
cmp
sbb
mov
icebp
adc
out
dec
xchg
inc
pop
add
repz
or
test
popa
pop
xchg
push
sbb
cmp
cmp
adcb
pushf
andb
pop
gs
push
movsl
rclb
in
pop
cltd
jg
or
mov
inc
xor
icebp
pop
movsb
push
loop
call
mov
mov
cmc
sub
filds
add
push
mov
ficomps
jg
icebp
into
inc
fsubrs
mov
je
data16
ficoml
test
and
or
js
cmp
insb
sbb
bnd
xchg
pop
lods
fiadds
aam
xchg
jne
loop,pn
mov
in
mov
lds
or
xchg
jge
call
ret
mov
mov
mov
int
sbbl
adc
ljmp
jno
xor
xchg
out
xchg
mov
dec
dec
outsb
inc
mov
push
mov
repz
mov
mov
and
mov
sbb
fwait
shrl
aam
jle
unpcklps
jae
pop
pushf
sub
movsb
mov
dec
adc
xchg
sub
jl
jle
insb
xchg
jle
iret
push
insb
bound
mov
lds
jae
push
push
push
and
loope
cli
cli
fbstp
leave
pop
out
sub
cmp
fcoml
outsl
xlat
cwtl
and
dec
jg
inc
xor
xor
inc
iret
jnp
js
std
lock
sub
xor
arpl
mov
or
loope
jl
cmp
hlt
fdivs
inc
mov
addr16
adc
out
inc
cs
sbb
xor
cmp
popa
aad
rcr
mov
insl
test
jecxz
lods
xchg
pop
fs
lods
arpl
fisttps
push
std
push
jg
push
pop
inc
pop
push
addr16
in
pop
les
cmp
and
loopne
add
test
sbb
loopne
ss
jg
mov
sub
push
ss
push
enter
rcll
pop
mov
popa
sbb
or
std
push
nop
inc
mov
xchg
in
add
aaa
in
into
or
push
jbe
jb
dec
pop
ficomps
outsb
pop
clc
ret
ret
cmp
sub
stos
lods
sbb
test
lods
ja
inc
inc
jne
mov
cltd
mov
mov
cs
push
inc
jb
push
cmp
push
push
jle
sbb
mov
mov
jo
sub
sbb
pop
repz
cli
fistl
rclb
inc
out
bound
mov
stos
cmp
stc
in
mov
lods
adc
cwtl
mov
out
dec
dec
mov
lcall
adcb
or
in
loope
das
xor
mov
das
out
jbe
xchg
xchg
sub
xchg
sar
arpl
push
into
lahf
cmp
adc
test
js
jnp
jnp
adc
pop
and
dec
faddp
int
and
add
inc
cli
adc
aad
gs
mov
iret
jae
mov
sub
icebp
sbb
mov
adc
sti
mov
shll
in
mov
push
movsb
push
jl
inc
cmp
jno
sbb
xchg
aas
inc
or
insl
movsl
xchg
fstl
enter
stos
sub
jmp
pop
adc
dec
aam
adc
jle
nop
lods
pusha
sbb
outsb
aad
daa
jl
mov
ja
lahf
push
dec
xchg
test
and
sub
and
sbb
insb
and
jmp
pop
or
pop
cli
push
data16
aas
xor
and
or
and
sbb
xchg
inc
mov
test
test
test
mov
test
mov
sbb
ss
xchg
pop
jp
pop
dec
aas
push
insb
adc
sub
in
ret
push
arpl
fdivl
popl
cmp
mov
push
ret
rorl
rcll
test
mov
dec
fs
shlb
sahf
pop
xchg
lods
xchg
data16
nop
test
xor
xlat
jg
je
adc
dec
imul
add
push
sub
stos
std
shr
mov
cmpsl
jns
mov
je
jmp
xor
test
xchg
and
nop
movsb
insl
xorb
or
sub
and
cli
mov
jno
adc
xchg
dec
mov
and
cmp
loopne
lret
inc
call
jg
jae
inc
and
cmp
gs
mov
popa
ljmp
jns
mov
sub
dec
ret
inc
pusha
aas
or
sub
sbb
test
jmp
cmp
xchg
in
pop
fdivrl
sub
repnz
pop
xchg
ret
sti
mov
inc
adc
pop
dec
or
pop
push
loop
fdivrp
mov
cmp
jmp
lret
cs
cmpsb
insb
mov
rol
and
jb
xchg
cli
lea
xor
mov
cli
sub
xchg
or
push
and
lods
or
push
xor
and
jle
outsl
ss
ret
and
hlt
test
les
dec
call
or
int
stos
mov
dec
dec
sbb
ja
mov
rorl
div
mov
fmull
inc
inc
rolb
stos
add
or
adc
mov
stc
arpl
mov
add
dec
loopne
and
std
push
loopne
fsubrs
loopne
lock
xchg
rcrl
cmp
jg
rorl
sub
sbb
xor
or
jge
hlt
mov
js
inc
cmp
and
xor
inc
test
imul
mov
adc
leave
cmp
sub
xchg
push
cmc
bound
jp
in
inc
lret
and
shll
push
daa
mov
cmp
shl
ja
ffree
xchg
hlt
jne
icebp
pop
divl
or
je
orb
int
fnstcw
in
inc
cmc
inc
sub
sahf
test
cmp
xor
mov
ss
jge
ror
xchg
push
nop
mov
repnz
aad
jl
xlat
mov
push
stos
outsb
or
sbb
dec
push
out
fdivrl
into
pusha
gs
daa
xchg
lods
hlt
cmp
inc
push
adc
sarb
sbb
mov
scas
pop
push
mov
ja
pushf
xchg
dec
push
pop
repz
bound
jp
mov
push
ljmp
outsb
stos
push
xor
jp
push
push
mov
les
dec
jmp
pop
in
fwait
dec
pushf
jle
jge
push
adc
mov
fstpt
cltd
mov
insb
xor
shrb
outsl
mov
cmp
mulb
mov
nop
aas
test
sti
mov
fdivrl
fnstsw
push
sarb
xor
jg
andb
dec
and
mov
mov
outsb
data16
cmp
sbb
mov
mov
stos
jmp
cwtl
push
lock
pop
pop
pop
out
jae
cmp
loop
in
bound
pop
adc
ds
jmp
cs
mov
fcmovu
xchg
mov
pop
ss
int3
pop
jo
or
in
andl
negl
push
cld
fmuls
inc
int
jle
test
sub
sti
inc
xchg
jae
shl
repz
push
cld
or
into
mov
ds
rcl
mov
add
lods
mov
fisttpl
pop
imul
push
mov
shlb
out
push
sub
mov
je
pusha
mov
in
imul
pusha
movsb
cmp
aad
test
popf
or
xor
rcll
fdiv
pusha
push
adc
pushf
mov
jae
mov
add
in
pop
ret
hlt
gs
testb
dec
mov
gs
movsb
pop
cmp
sub
jnp
xchg
jbe
dec
inc
push
dec
enter
push
xchg
pop
sbb
mov
xchg
push
inc
push
xor
mov
cmc
inc
fwait
add
or
cmpsl
mov
sahf
rorb
ret
push
pushf
xor
adc
pop
in
into
fisubl
jle
push
sbb
icebp
jmp
jl
jp,pt
std
aad
push
or
int3
or
mov
adc
push
push
ret
std
shrl
pop
mov
fisubl
push
push
sub
cli
out
inc
lock
mov
sbb
stc
outsl
lods
mov
xchg
mov
rol
ss
es
mov
dec
or
hlt
daa
xor
adc
mov
rcrl
sahf
or
mov
xchg
push
in
pusha
push
arpl
mov
iret
and
movsb
inc
mov
je
sbb
lret
mov
jg
mov
sub
dec
mov
jo
inc
mov
cmpsb
lcall
ret
mov
out
punpcklwd
jnp
xor
mov
arpl
and
mov
push
sar
adc
stc
nop
pop
in
add
adcb
dec
cld
in
inc
mov
inc
mov
sub
mov
dec
popa
mov
in
sub
decl
cli
fisttps
imul
je
fxch
or
jbe
in
pop
dec
pushf
mov
repz
xor
adc
cli
inc
mov
sub
das
fsubrs
add
aam
jp
adc
jbe
xchg
mov
mov
jl
and
roll
sbb
orl
mov
mov
push
fildll
aas
fisubrl
mov
std
inc
shlb
adc
in
jo
pop
pop
push
ljmp
pop
jne
jge
testl
stc
push
fiadds
lcall
test
cmp
les
in
mov
sub
hlt
xchg
iret
lret
aam
lods
pop
cld
inc
sbbb
cld
inc
int
in
clc
orl
fnstcw
in
push
mov
xchg
add
inc
mov
iret
cmc
out
dec
add
cmp
int3
out
lods
xchg
cmpsb
sub
mov
shr
inc
pop
idivl
pop
push
xor
jae
xor
mov
lock
add
es
jns
aad
mov
xor
dec
dec
clc
inc
dec
dec
rcr
push
das
dec
xchg
pop
jge
call
add
pop
jb
dec
jb
das
xchg
sbb
lock
aam
out
loopne
fcoml
push
dec
jg
cmp
dec
movsl
lcall
sarb
fdivs
push
dec
in
or
aam
xchg
test
fisubrl
imul
roll
push
dec
daa
cltd
or
insl
sub
jmp
imul
pop
xchg
inc
dec
adc
xor
jns
std
shll
xchg
mov
cmp
xor
inc
lods
test
inc
push
fwait
xchg
nop
int3
unpckhps
push
daa
xor
jg
jno
in
lods
xor
sub
sub
pop
ret
pop
or
xor
nop
fildll
lods
bound
repnz
flds
jbe
mov
sbb
add
mov
jno
pop
jmp
pushl
dec
and
jle
movsl
cmpsb
ljmp
mov
add
cmp
lahf
jecxz
in
add
mov
dec
jbe
add
mov
inc
int3
in
xchg
bound
pop
out
call
arpl
xchg
push
xor
cmp
daa
test
push
jge
push
bswap
shrb
xchg
sbb
enter
xor
xchg
push
mov
dec
outsb
icebp
or
jae
das
adc
and
sub
cltd
lods
lds
pop
cmp
xchg
sbb
sub
cmp
pop
rclb
or
mov
ret
orb
pcmpgtd
scas
mov
sbb
aam
lods
push
xor
outsl
pop
mov
mov
ljmp
jbe
fisubl
add
jg
in
out
cmp
pop
jge
xor
andl
stc
mov
cmp
shlb
cmpsl
sbb
fldcw
std
push
lds
inc
sbb
sub
sbb
dec
mov
repz
sub
icebp
sahf
mov
cltd
int3
lahf
lret
std
jno
test
mov
ss
and
pop
fcmovbe
test
mov
adc
xor
or
adc
xor
xchg
les
decl
out
jg
ret
sahf
mov
movb
in
daa
in
sub
pop
sub
outsb
sarl
jg
push
adc
insb
cltd
mov
push
cmc
lret
test
fnstcw
mov
push
jbe
jp
xchg
and
mov
daa
mov
or
add
cwtl
ret
xchg
add
mov
sub
lcall
dec
xchg
mov
lcall
fsubrs
icebp
cmp
addb
popf
ja
and
or
ret
pop
jmp
dec
fdivs
inc
fcmovbe
lahf
dec
out
popf
daa
hlt
fldenv
jne
xchg
adc
cmpsb
dec
inc
jnp
andl
in
xor
push
out
mulb
mov
fistl
rorb
sub
pop
lahf
dec
and
inc
push
push
mov
mov
nop
jae
fincstp
js
jp
movsb
adc
push
sub
mov
dec
and
xchg
mov
adc
mov
out
mov
push
cmpsb
or
cli
and
adc
leave
aas
scas
int3
inc
jnp
fcomp
stc
mov
jae
out
rcrb
or
mov
jae
je
add
and
popa
cmp
dec
mov
jmp
xchg
mov
add
ficomps
call
sub
fwait
inc
pushf
imul
call
jno
mov
or
cmp
xorl
jb
sbbl
pop
mov
xor
mov
pop
in
xchg
jp
addr16
adc
or
fsub
leave
push
out
loope
pop
dec
imul
inc
out
jb
ljmp
xor
mov
add
inc
jns
mov
cmp
jo
add
call
adc
pop
adc
sbb
xchg
xor
int3
push
frstor
and
shlb
loopne
jne
movsb
loopne
and
fdivl
cltd
mov
shrb
or
jecxz
xchg
mov
and
inc
or
jge
inc
ret
pop
adc
push
jns
pop
pop
dec
test
arpl
out
add
mov
xchg
mov
dec
or
mov
test
sarb
loope
or
pop
jl
sub
fcompl
cmp
enter
icebp
inc
sub
cmp
sub
mov
mov
loopne
mov
nop
mov
xchg
idivb
xchg
rorb
lea
imul
push
mov
pop
imul
dec
jmp
test
push
mov
push
mov
and
xchg
mov
stos
lock
incb
push
jecxz
xchg
sbbl
cwtl
adc
aam
add
insb
daa
ss
mov
xchg
lea
or
sub
inc
jbe
push
jecxz
stc
push
sbb
stc
mov
fistl
push
sub
mov
insl
outsb
dec
subl
nop
test
sub
xchg
pop
stc
xchg
cmp
out
test
add
cli
pop
lds
xor
sub
data16
xchg
mov
stc
popa
mov
movsb
and
mov
or
fstps
aaa
ret
push
xchg
xchg
mov
es
lock
mov
popf
cli
scas
pop
and
cmc
test
fisttps
fs
les
loopne
jae
dec
jmp
sbb
adc
cmpsb
stos
xchg
pop
adc
rclb
mov
dec
loopne
and
enter
xchg
mov
dec
mov
dec
cmc
in
adc
pop
pop
inc
mov
cld
cwtl
ret
ljmp
jnp
mov
sti
sarl
or
fstl
ret
mov
jge
nop
jle
push
lcall
mov
